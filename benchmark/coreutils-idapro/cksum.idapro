LOAD:0000000000000000 ;
LOAD:0000000000000000 ; +-------------------------------------------------------------------------+
LOAD:0000000000000000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
LOAD:0000000000000000 ; |           Copyright (c) 2021 Hex-Rays, <support@hex-rays.com>           |
LOAD:0000000000000000 ; |                      License info: 48-357D-7BC4-C6                      |
LOAD:0000000000000000 ; |                              Virginia Tech                              |
LOAD:0000000000000000 ; +-------------------------------------------------------------------------+
LOAD:0000000000000000 ;
LOAD:0000000000000000 ; Input SHA256 : 63E2605EBE725CC9B466AAF16D6A25C30AEC1A462BDD157AF3DD9A1668D4769E
LOAD:0000000000000000 ; Input MD5    : A4BF188B4FC681FAF83AC3E1E871762A
LOAD:0000000000000000 ; Input CRC32  : 9C025349
LOAD:0000000000000000
LOAD:0000000000000000 ; File Name   : /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/cksum
LOAD:0000000000000000 ; Format      : ELF64 for x86-64 (Shared object)
LOAD:0000000000000000 ; Interpreter '/lib64/ld-linux-x86-64.so.2'
LOAD:0000000000000000 ; Needed Library 'libc.so.6'
LOAD:0000000000000000 ;
LOAD:0000000000000000 ; Source File : 'cksum.c'
LOAD:0000000000000000 ; Source File : 'crtstuff.c'
LOAD:0000000000000000 ; Source File : 'version.c'
LOAD:0000000000000000 ; Source File : 'closeout.c'
LOAD:0000000000000000 ; Source File : 'exitfail.c'
LOAD:0000000000000000 ; Source File : 'fadvise.c'
LOAD:0000000000000000 ; Source File : 'umaxtostr.c'
LOAD:0000000000000000 ; Source File : 'long-options.c'
LOAD:0000000000000000 ; Source File : 'progname.c'
LOAD:0000000000000000 ; Source File : 'quotearg.c'
LOAD:0000000000000000 ; Source File : 'version-etc.c'
LOAD:0000000000000000 ; Source File : 'version-etc-fsf.c'
LOAD:0000000000000000 ; Source File : 'xmalloc.c'
LOAD:0000000000000000 ; Source File : 'xalloc-die.c'
LOAD:0000000000000000 ; Source File : 'fclose.c'
LOAD:0000000000000000 ; Source File : 'fflush.c'
LOAD:0000000000000000 ; Source File : 'fseeko.c'
LOAD:0000000000000000 ; Source File : 'mbrtowc.c'
LOAD:0000000000000000 ; Source File : 'close-stream.c'
LOAD:0000000000000000 ; Source File : 'hard-locale.c'
LOAD:0000000000000000 ; Source File : 'localcharset.c'
LOAD:0000000000000000 ; Source File : 'crtstuff.c'
LOAD:0000000000000000
LOAD:0000000000000000                 .686p
LOAD:0000000000000000                 .mmx
LOAD:0000000000000000                 .model flat
LOAD:0000000000000000 .intel_syntax noprefix
LOAD:0000000000000000
LOAD:0000000000000000 ; ===========================================================================
LOAD:0000000000000000
LOAD:0000000000000000 ; Segment type: Pure code
LOAD:0000000000000000 ; Segment permissions: Read/Execute
LOAD:0000000000000000 LOAD            segment byte public 'CODE' use64
LOAD:0000000000000000                 assume cs:LOAD
LOAD:0000000000000000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000000000 dword_0         dd 464C457Fh            ; DATA XREF: LOAD:00000000000002F8↓o
LOAD:0000000000000000                                         ; LOAD:0000000000000310↓o ...
LOAD:0000000000000000                                         ; File format: \x7FELF
LOAD:0000000000000004                 db 2                    ; File class: 64-bit
LOAD:0000000000000005                 db 1                    ; Data encoding: little-endian
LOAD:0000000000000006                 db 1                    ; File version
LOAD:0000000000000007                 db 0                    ; OS/ABI: UNIX System V ABI
LOAD:0000000000000008                 db 0                    ; ABI Version
LOAD:0000000000000009                 db 7 dup(0)             ; Padding
LOAD:0000000000000010                 dw 3                    ; File type: Shared object
LOAD:0000000000000012                 dw 3Eh                  ; Machine: x86-64
LOAD:0000000000000014                 dd 1                    ; File version
LOAD:0000000000000018                 dq offset start         ; Entry point
LOAD:0000000000000020                 dq 40h                  ; PHT file offset
LOAD:0000000000000028                 dq 255F0h               ; SHT file offset
LOAD:0000000000000030                 dd 0                    ; Processor-specific flags
LOAD:0000000000000034                 dw 40h                  ; ELF header size
LOAD:0000000000000036                 dw 38h                  ; PHT entry size
LOAD:0000000000000038                 dw 9                    ; Number of entries in PHT
LOAD:000000000000003A                 dw 40h                  ; SHT entry size
LOAD:000000000000003C                 dw 25h                  ; Number of entries in SHT
LOAD:000000000000003E                 dw 24h                  ; SHT entry index for string table
LOAD:0000000000000040 ; ELF64 Program Header
LOAD:0000000000000040 ; PHT Entry 0
LOAD:0000000000000040 dword_40        dd 6                    ; DATA XREF: LOAD:0000000000000050↓o
LOAD:0000000000000040                                         ; Type: PHDR
LOAD:0000000000000044                 dd 4                    ; Flags
LOAD:0000000000000048                 dq 40h                  ; File offset
LOAD:0000000000000050                 dq offset dword_40      ; Virtual address
LOAD:0000000000000058                 dq 40h                  ; Physical address
LOAD:0000000000000060                 dq 1F8h                 ; Size in file image
LOAD:0000000000000068                 dq 1F8h                 ; Size in memory image
LOAD:0000000000000070                 dq 8                    ; Alignment
LOAD:0000000000000078 ; PHT Entry 1
LOAD:0000000000000078                 dd 3                    ; Type: INTERP
LOAD:000000000000007C                 dd 4                    ; Flags
LOAD:0000000000000080                 dq 238h                 ; File offset
LOAD:0000000000000088                 dq offset aLib64LdLinuxX8 ; Virtual address
LOAD:0000000000000090                 dq 238h                 ; Physical address
LOAD:0000000000000098                 dq 1Ch                  ; Size in file image
LOAD:00000000000000A0                 dq 1Ch                  ; Size in memory image
LOAD:00000000000000A8                 dq 1                    ; Alignment
LOAD:00000000000000B0 ; PHT Entry 2
LOAD:00000000000000B0                 dd 1                    ; Type: LOAD
LOAD:00000000000000B4                 dd 5                    ; Flags
LOAD:00000000000000B8                 dq 0                    ; File offset
LOAD:00000000000000C0                 dq 0                    ; Virtual address
LOAD:00000000000000C8                 dq 0                    ; Physical address
LOAD:00000000000000D0                 dq 6D18h                ; Size in file image
LOAD:00000000000000D8                 dq 6D18h                ; Size in memory image
LOAD:00000000000000E0                 dq 200000h              ; Alignment
LOAD:00000000000000E8 ; PHT Entry 3
LOAD:00000000000000E8                 dd 1                    ; Type: LOAD
LOAD:00000000000000EC                 dd 6                    ; Flags
LOAD:00000000000000F0                 dq 7BB0h                ; File offset
LOAD:00000000000000F8                 dq offset __frame_dummy_init_array_entry ; Virtual address
LOAD:0000000000000100 qword_100       dq 207BB0h              ; DATA XREF: .data:slotvec0↓o
LOAD:0000000000000100                                         ; Physical address
LOAD:0000000000000108                 dq 4D0h                 ; Size in file image
LOAD:0000000000000110                 dq 6A8h                 ; Size in memory image
LOAD:0000000000000118                 dq 200000h              ; Alignment
LOAD:0000000000000120 ; PHT Entry 4
LOAD:0000000000000120                 dd 2                    ; Type: DYNAMIC
LOAD:0000000000000124                 dd 6                    ; Flags
LOAD:0000000000000128                 dq 7C78h                ; File offset
LOAD:0000000000000130                 dq offset _DYNAMIC      ; Virtual address
LOAD:0000000000000138                 dq 207C78h              ; Physical address
LOAD:0000000000000140                 dq 1F0h                 ; Size in file image
LOAD:0000000000000148                 dq 1F0h                 ; Size in memory image
LOAD:0000000000000150                 dq 8                    ; Alignment
LOAD:0000000000000158 ; PHT Entry 5
LOAD:0000000000000158                 dd 4                    ; Type: NOTE
LOAD:000000000000015C                 dd 4                    ; Flags
LOAD:0000000000000160                 dq 254h                 ; File offset
LOAD:0000000000000168                 dq offset dword_254     ; Virtual address
LOAD:0000000000000170                 dq 254h                 ; Physical address
LOAD:0000000000000178                 dq 44h                  ; Size in file image
LOAD:0000000000000180                 dq 44h                  ; Size in memory image
LOAD:0000000000000188                 dq 4                    ; Alignment
LOAD:0000000000000190 ; PHT Entry 6
LOAD:0000000000000190                 dd 6474E550h            ; Type: EH_FRAME
LOAD:0000000000000194                 dd 4                    ; Flags
LOAD:0000000000000198                 dq 5EF0h                ; File offset
LOAD:00000000000001A0                 dq offset __GNU_EH_FRAME_HDR ; Virtual address
LOAD:00000000000001A8                 dq 5EF0h                ; Physical address
LOAD:00000000000001B0                 dq 26Ch                 ; Size in file image
LOAD:00000000000001B8                 dq 26Ch                 ; Size in memory image
LOAD:00000000000001C0                 dq 4                    ; Alignment
LOAD:00000000000001C8 ; PHT Entry 7
LOAD:00000000000001C8                 dd 6474E551h            ; Type: STACK
LOAD:00000000000001CC                 dd 6                    ; Flags
LOAD:00000000000001D0                 dq 0                    ; File offset
LOAD:00000000000001D8                 dq 0                    ; Virtual address
LOAD:00000000000001E0                 dq 0                    ; Physical address
LOAD:00000000000001E8                 dq 0                    ; Size in file image
LOAD:00000000000001F0                 dq 0                    ; Size in memory image
LOAD:00000000000001F8                 dq 10h                  ; Alignment
LOAD:0000000000000200 ; PHT Entry 8
LOAD:0000000000000200                 dd 6474E552h            ; Type: RO-AFTER
LOAD:0000000000000204                 dd 4                    ; Flags
LOAD:0000000000000208                 dq 7BB0h                ; File offset
LOAD:0000000000000210                 dq offset __frame_dummy_init_array_entry ; Virtual address
LOAD:0000000000000218                 dq 207BB0h              ; Physical address
LOAD:0000000000000220                 dq 450h                 ; Size in file image
LOAD:0000000000000228                 dq 450h                 ; Size in memory image
LOAD:0000000000000230                 dq 1                    ; Alignment
LOAD:0000000000000238 aLib64LdLinuxX8 db '/lib64/ld-linux-x86-64.so.2',0
LOAD:0000000000000238                                         ; DATA XREF: LOAD:0000000000000088↑o
LOAD:0000000000000254 ; ELF Note Entry
LOAD:0000000000000254 dword_254       dd 4                    ; DATA XREF: LOAD:0000000000000168↑o
LOAD:0000000000000254                                         ; Name Size
LOAD:0000000000000258                 dd 10h                  ; Desc Size
LOAD:000000000000025C                 dd 1                    ; Type: NT_GNU_ABI_TAG
LOAD:0000000000000260 aGnu            db 'GNU',0              ; Name
LOAD:0000000000000264                 dd 0, 3, 2, 0           ; ABI: Linux 3.2.0
LOAD:0000000000000274 ; ELF Note Entry
LOAD:0000000000000274                 dd 4                    ; Name Size
LOAD:0000000000000278                 dd 14h                  ; Desc Size
LOAD:000000000000027C                 dd 3                    ; Type: NT_GNU_BUILD_ID
LOAD:0000000000000280 aGnu_0          db 'GNU',0              ; Name
LOAD:0000000000000284                 db 80h, 4Fh, 7Fh, 7Bh, 53h, 0A2h, 8, 81h, 4Bh, 11h, 0F2h ; Desc
LOAD:0000000000000284                 db 5Dh, 0B7h, 0B2h, 2Eh, 0A1h, 86h, 8Dh, 0BBh, 0E7h
LOAD:0000000000000298 ; ELF GNU Hash Table
LOAD:0000000000000298 elf_gnu_hash_nbuckets dd 3
LOAD:000000000000029C elf_gnu_hash_symbias dd 31h
LOAD:00000000000002A0 elf_gnu_hash_bitmask_nwords dd 1
LOAD:00000000000002A4 elf_gnu_hash_shift dd 6
LOAD:00000000000002A8 elf_gnu_hash_indexes dq 121801A00061C906h
LOAD:00000000000002B0 elf_gnu_hash_bucket dd 31h, 32h, 39h
LOAD:00000000000002BC elf_gnu_hash_chain dd 1C8C1D29h, 9E7650BCh, 10615566h, 9789A096h, 72632CCEh
LOAD:00000000000002BC                 dd 0F54162E4h, 12F7B3C0h, 1C8BF239h, 12F7C433h
LOAD:00000000000002E0 ; ELF Symbol Table
LOAD:00000000000002E0                 Elf64_Sym <0>
LOAD:00000000000002F8                 Elf64_Sym <offset aFree - offset byte_850, 12h, 0, 0, offset dword_0, \ ; "free"
LOAD:00000000000002F8                            0>
LOAD:0000000000000310                 Elf64_Sym <offset aAbort - offset byte_850, 12h, 0, 0, offset dword_0,\ ; "abort"
LOAD:0000000000000310                            0>
LOAD:0000000000000328                 Elf64_Sym <offset aErrnoLocation - offset byte_850, 12h, 0, 0, \ ; "__errno_location"
LOAD:0000000000000328                            offset dword_0, 0>
LOAD:0000000000000340                 Elf64_Sym <offset aStrncmp - offset byte_850, 12h, 0, 0, \ ; "strncmp"
LOAD:0000000000000340                            offset dword_0, 0>
LOAD:0000000000000358                 Elf64_Sym <offset aItmDeregistert - offset byte_850, 20h, 0, 0, \ ; "_ITM_deregisterTMCloneTable"
LOAD:0000000000000358                            offset dword_0, 0>
LOAD:0000000000000370                 Elf64_Sym <offset aExit - offset byte_850, 12h, 0, 0, offset dword_0, \ ; "_exit"
LOAD:0000000000000370                            0>
LOAD:0000000000000388                 Elf64_Sym <offset aFpending - offset byte_850, 12h, 0, 0, \ ; "__fpending"
LOAD:0000000000000388                            offset dword_0, 0>
LOAD:00000000000003A0                 Elf64_Sym <offset aFreadUnlocked - offset byte_850, 12h, 0, 0, \ ; "fread_unlocked"
LOAD:00000000000003A0                            offset dword_0, 0>
LOAD:00000000000003B8                 Elf64_Sym <offset aBindtextdomain+4 - offset byte_850, 12h, 0, 0, \ ; "textdomain"
LOAD:00000000000003B8                            offset dword_0, 0>
LOAD:00000000000003D0                 Elf64_Sym <offset aFclose - offset byte_850, 12h, 0, 0, \ ; "fclose"
LOAD:00000000000003D0                            offset dword_0, 0>
LOAD:00000000000003E8                 Elf64_Sym <offset aBindtextdomain - offset byte_850, 12h, 0, 0, \ ; "bindtextdomain"
LOAD:00000000000003E8                            offset dword_0, 0>
LOAD:0000000000000400                 Elf64_Sym <offset aDcgettext - offset byte_850, 12h, 0, 0, \ ; "dcgettext"
LOAD:0000000000000400                            offset dword_0, 0>
LOAD:0000000000000418                 Elf64_Sym <offset aCtypeGetMbCurM - offset byte_850, 12h, 0, 0, \ ; "__ctype_get_mb_cur_max"
LOAD:0000000000000418                            offset dword_0, 0>
LOAD:0000000000000430                 Elf64_Sym <offset aStrlen - offset byte_850, 12h, 0, 0, \ ; "strlen"
LOAD:0000000000000430                            offset dword_0, 0>
LOAD:0000000000000448                 Elf64_Sym <offset aStackChkFail - offset byte_850, 12h, 0, 0, \ ; "__stack_chk_fail"
LOAD:0000000000000448                            offset dword_0, 0>
LOAD:0000000000000460                 Elf64_Sym <offset aGetoptLong - offset byte_850, 12h, 0, 0, \ ; "getopt_long"
LOAD:0000000000000460                            offset dword_0, 0>
LOAD:0000000000000478                 Elf64_Sym <offset aMbrtowc - offset byte_850, 12h, 0, 0, \ ; "mbrtowc"
LOAD:0000000000000478                            offset dword_0, 0>
LOAD:0000000000000490                 Elf64_Sym <offset aStrrchr - offset byte_850, 12h, 0, 0, \ ; "strrchr"
LOAD:0000000000000490                            offset dword_0, 0>
LOAD:00000000000004A8                 Elf64_Sym <offset aLseek - offset byte_850, 12h, 0, 0, offset dword_0,\ ; "lseek"
LOAD:00000000000004A8                            0>
LOAD:00000000000004C0                 Elf64_Sym <offset aMemset - offset byte_850, 12h, 0, 0, \ ; "memset"
LOAD:00000000000004C0                            offset dword_0, 0>
LOAD:00000000000004D8                 Elf64_Sym <offset aPosixFadvise - offset byte_850, 12h, 0, 0, \ ; "posix_fadvise"
LOAD:00000000000004D8                            offset dword_0, 0>
LOAD:00000000000004F0                 Elf64_Sym <offset aLibcStartMain - offset byte_850, 12h, 0, 0, \ ; "__libc_start_main"
LOAD:00000000000004F0                            offset dword_0, 0>
LOAD:0000000000000508                 Elf64_Sym <offset aMemcmp - offset byte_850, 12h, 0, 0, \ ; "memcmp"
LOAD:0000000000000508                            offset dword_0, 0>
LOAD:0000000000000520                 Elf64_Sym <offset aFputsUnlocked - offset byte_850, 12h, 0, 0, \ ; "fputs_unlocked"
LOAD:0000000000000520                            offset dword_0, 0>
LOAD:0000000000000538                 Elf64_Sym <offset aCalloc - offset byte_850, 12h, 0, 0, \ ; "calloc"
LOAD:0000000000000538                            offset dword_0, 0>
LOAD:0000000000000550                 Elf64_Sym <offset aGmonStart - offset byte_850, 20h, 0, 0, \ ; "__gmon_start__"
LOAD:0000000000000550                            offset dword_0, 0>
LOAD:0000000000000568                 Elf64_Sym <offset aMemcpy - offset byte_850, 12h, 0, 0, \ ; "memcpy"
LOAD:0000000000000568                            offset dword_0, 0>
LOAD:0000000000000580                 Elf64_Sym <offset aFileno - offset byte_850, 12h, 0, 0, \ ; "fileno"
LOAD:0000000000000580                            offset dword_0, 0>
LOAD:0000000000000598                 Elf64_Sym <offset aMalloc - offset byte_850, 12h, 0, 0, \ ; "malloc"
LOAD:0000000000000598                            offset dword_0, 0>
LOAD:00000000000005B0                 Elf64_Sym <offset aFflush - offset byte_850, 12h, 0, 0, \ ; "fflush"
LOAD:00000000000005B0                            offset dword_0, 0>
LOAD:00000000000005C8                 Elf64_Sym <offset aNlLanginfo - offset byte_850, 12h, 0, 0, \ ; "nl_langinfo"
LOAD:00000000000005C8                            offset dword_0, 0>
LOAD:00000000000005E0                 Elf64_Sym <offset aFreading - offset byte_850, 12h, 0, 0, \ ; "__freading"
LOAD:00000000000005E0                            offset dword_0, 0>
LOAD:00000000000005F8                 Elf64_Sym <offset aRealloc - offset byte_850, 12h, 0, 0, \ ; "realloc"
LOAD:00000000000005F8                            offset dword_0, 0>
LOAD:0000000000000610                 Elf64_Sym <offset aSetlocale - offset byte_850, 12h, 0, 0, \ ; "setlocale"
LOAD:0000000000000610                            offset dword_0, 0>
LOAD:0000000000000628                 Elf64_Sym <offset aPrintfChk - offset byte_850, 12h, 0, 0, \ ; "__printf_chk"
LOAD:0000000000000628                            offset dword_0, 0>
LOAD:0000000000000640                 Elf64_Sym <offset aSetvbuf - offset byte_850, 12h, 0, 0, \ ; "setvbuf"
LOAD:0000000000000640                            offset dword_0, 0>
LOAD:0000000000000658                 Elf64_Sym <offset aError - offset byte_850, 12h, 0, 0, offset dword_0,\ ; "error"
LOAD:0000000000000658                            0>
LOAD:0000000000000670                 Elf64_Sym <offset aFseeko - offset byte_850, 12h, 0, 0, \ ; "fseeko"
LOAD:0000000000000670                            offset dword_0, 0>
LOAD:0000000000000688                 Elf64_Sym <offset aFopen - offset byte_850, 12h, 0, 0, offset dword_0,\ ; "fopen"
LOAD:0000000000000688                            0>
LOAD:00000000000006A0                 Elf64_Sym <offset aCxaAtexit - offset byte_850, 12h, 0, 0, \ ; "__cxa_atexit"
LOAD:00000000000006A0                            offset dword_0, 0>
LOAD:00000000000006B8                 Elf64_Sym <offset aExit+1 - offset byte_850, 12h, 0, 0, \ ; "exit"
LOAD:00000000000006B8                            offset dword_0, 0>
LOAD:00000000000006D0                 Elf64_Sym <offset aFwrite - offset byte_850, 12h, 0, 0, \ ; "fwrite"
LOAD:00000000000006D0                            offset dword_0, 0>
LOAD:00000000000006E8                 Elf64_Sym <offset aFprintfChk - offset byte_850, 12h, 0, 0, \ ; "__fprintf_chk"
LOAD:00000000000006E8                            offset dword_0, 0>
LOAD:0000000000000700                 Elf64_Sym <offset aItmRegistertmc - offset byte_850, 20h, 0, 0, \ ; "_ITM_registerTMCloneTable"
LOAD:0000000000000700                            offset dword_0, 0>
LOAD:0000000000000718                 Elf64_Sym <offset aMbsinit - offset byte_850, 12h, 0, 0, \ ; "mbsinit"
LOAD:0000000000000718                            offset dword_0, 0>
LOAD:0000000000000730                 Elf64_Sym <offset aIswprint - offset byte_850, 12h, 0, 0, \ ; "iswprint"
LOAD:0000000000000730                            offset dword_0, 0>
LOAD:0000000000000748                 Elf64_Sym <offset aCxaFinalize - offset byte_850, 22h, 0, 0, \ ; "__cxa_finalize"
LOAD:0000000000000748                            offset dword_0, 0>
LOAD:0000000000000760                 Elf64_Sym <offset aCtypeBLoc - offset byte_850, 12h, 0, 0, \ ; "__ctype_b_loc"
LOAD:0000000000000760                            offset dword_0, 0>
LOAD:0000000000000778                 Elf64_Sym <offset aStdout - offset byte_850, 11h, 0, 19h, \ ; "stdout"
LOAD:0000000000000778                            offset stdout@@GLIBC_2_2_5, 8>
LOAD:0000000000000790                 Elf64_Sym <offset aProgname - offset byte_850, 11h, 0, 19h, \ ; "__progname"
LOAD:0000000000000790                            offset __bss_start, 8>
LOAD:00000000000007A8                 Elf64_Sym <offset aStdin - offset byte_850, 11h, 0, 19h, \ ; "stdin"
LOAD:00000000000007A8                            offset stdin@@GLIBC_2_2_5, 8>
LOAD:00000000000007C0                 Elf64_Sym <offset aProgramInvocat - offset byte_850, 21h, 0, 19h, \ ; "program_invocation_name"
LOAD:00000000000007C0                            offset program_invocation_name@@GLIBC_2_2_5, 8>
LOAD:00000000000007D8                 Elf64_Sym <offset aPrognameFull - offset byte_850, 11h, 0, 19h, \ ; "__progname_full"
LOAD:00000000000007D8                            offset program_invocation_name@@GLIBC_2_2_5, 8>
LOAD:00000000000007F0                 Elf64_Sym <offset aProgramInvocat_0 - offset byte_850, 21h, 0, 19h, \ ; "program_invocation_short_name"
LOAD:00000000000007F0                            offset __bss_start, 8>
LOAD:0000000000000808                 Elf64_Sym <offset aOpterr - offset byte_850, 11h, 0, 19h, \ ; "opterr"
LOAD:0000000000000808                            offset opterr@@GLIBC_2_2_5, 4>
LOAD:0000000000000820                 Elf64_Sym <offset aStderr - offset byte_850, 11h, 0, 19h, \ ; "stderr"
LOAD:0000000000000820                            offset stderr@@GLIBC_2_2_5, 8>
LOAD:0000000000000838                 Elf64_Sym <offset aOptind - offset byte_850, 11h, 0, 19h, \ ; "optind"
LOAD:0000000000000838                            offset optind@@GLIBC_2_2_5, 4>
LOAD:0000000000000850 ; ELF String Table
LOAD:0000000000000850 byte_850        db 0                    ; DATA XREF: LOAD:00000000000002F8↑o
LOAD:0000000000000850                                         ; LOAD:0000000000000310↑o ...
LOAD:0000000000000851 aLibcSo6        db 'libc.so.6',0        ; DATA XREF: LOAD:0000000000000B78↓o
LOAD:000000000000085B aFflush         db 'fflush',0           ; DATA XREF: LOAD:00000000000005B0↑o
LOAD:0000000000000862 aPrintfChk      db '__printf_chk',0     ; DATA XREF: LOAD:0000000000000628↑o
LOAD:000000000000086F aSetlocale      db 'setlocale',0        ; DATA XREF: LOAD:0000000000000610↑o
LOAD:0000000000000879 aMbrtowc        db 'mbrtowc',0          ; DATA XREF: LOAD:0000000000000478↑o
LOAD:0000000000000881 aFopen          db 'fopen',0            ; DATA XREF: LOAD:0000000000000688↑o
LOAD:0000000000000887 aStrncmp        db 'strncmp',0          ; DATA XREF: LOAD:0000000000000340↑o
LOAD:000000000000088F aOptind         db 'optind',0           ; DATA XREF: LOAD:0000000000000838↑o
LOAD:0000000000000896 aStrrchr        db 'strrchr',0          ; DATA XREF: LOAD:0000000000000490↑o
LOAD:000000000000089E aDcgettext      db 'dcgettext',0        ; DATA XREF: LOAD:0000000000000400↑o
LOAD:00000000000008A8 aError          db 'error',0            ; DATA XREF: LOAD:0000000000000658↑o
LOAD:00000000000008AE aStackChkFail   db '__stack_chk_fail',0 ; DATA XREF: LOAD:0000000000000448↑o
LOAD:00000000000008BF aIswprint       db 'iswprint',0         ; DATA XREF: LOAD:0000000000000730↑o
LOAD:00000000000008C8 aRealloc        db 'realloc',0          ; DATA XREF: LOAD:00000000000005F8↑o
LOAD:00000000000008D0 aAbort          db 'abort',0            ; DATA XREF: LOAD:0000000000000310↑o
LOAD:00000000000008D6 aStdin          db 'stdin',0            ; DATA XREF: LOAD:00000000000007A8↑o
LOAD:00000000000008DC aExit           db '_exit',0            ; DATA XREF: LOAD:0000000000000370↑o
LOAD:00000000000008DC                                         ; LOAD:00000000000006B8↑o
LOAD:00000000000008E2 aProgramInvocat db 'program_invocation_name',0
LOAD:00000000000008E2                                         ; DATA XREF: LOAD:00000000000007C0↑o
LOAD:00000000000008FA aCtypeGetMbCurM db '__ctype_get_mb_cur_max',0
LOAD:00000000000008FA                                         ; DATA XREF: LOAD:0000000000000418↑o
LOAD:0000000000000911 aPosixFadvise   db 'posix_fadvise',0    ; DATA XREF: LOAD:00000000000004D8↑o
LOAD:000000000000091F aCalloc         db 'calloc',0           ; DATA XREF: LOAD:0000000000000538↑o
LOAD:0000000000000926 aStrlen         db 'strlen',0           ; DATA XREF: LOAD:0000000000000430↑o
LOAD:000000000000092D aFreadUnlocked  db 'fread_unlocked',0   ; DATA XREF: LOAD:00000000000003A0↑o
LOAD:000000000000093C aMemset         db 'memset',0           ; DATA XREF: LOAD:00000000000004C0↑o
LOAD:0000000000000943 aErrnoLocation  db '__errno_location',0 ; DATA XREF: LOAD:0000000000000328↑o
LOAD:0000000000000954 aMemcmp         db 'memcmp',0           ; DATA XREF: LOAD:0000000000000508↑o
LOAD:000000000000095B aFprintfChk     db '__fprintf_chk',0    ; DATA XREF: LOAD:00000000000006E8↑o
LOAD:0000000000000969 aStdout         db 'stdout',0           ; DATA XREF: LOAD:0000000000000778↑o
LOAD:0000000000000970 aLseek          db 'lseek',0            ; DATA XREF: LOAD:00000000000004A8↑o
LOAD:0000000000000976 aMemcpy         db 'memcpy',0           ; DATA XREF: LOAD:0000000000000568↑o
LOAD:000000000000097D aFclose         db 'fclose',0           ; DATA XREF: LOAD:00000000000003D0↑o
LOAD:0000000000000984 aMalloc         db 'malloc',0           ; DATA XREF: LOAD:0000000000000598↑o
LOAD:000000000000098B aMbsinit        db 'mbsinit',0          ; DATA XREF: LOAD:0000000000000718↑o
LOAD:0000000000000993 aNlLanginfo     db 'nl_langinfo',0      ; DATA XREF: LOAD:00000000000005C8↑o
LOAD:000000000000099F aCtypeBLoc      db '__ctype_b_loc',0    ; DATA XREF: LOAD:0000000000000760↑o
LOAD:00000000000009AD aFreading       db '__freading',0       ; DATA XREF: LOAD:00000000000005E0↑o
LOAD:00000000000009B8 aStderr         db 'stderr',0           ; DATA XREF: LOAD:0000000000000820↑o
LOAD:00000000000009BF aGetoptLong     db 'getopt_long',0      ; DATA XREF: LOAD:0000000000000460↑o
LOAD:00000000000009CB aFileno         db 'fileno',0           ; DATA XREF: LOAD:0000000000000580↑o
LOAD:00000000000009D2 aFwrite         db 'fwrite',0           ; DATA XREF: LOAD:00000000000006D0↑o
LOAD:00000000000009D9 aFpending       db '__fpending',0       ; DATA XREF: LOAD:0000000000000388↑o
LOAD:00000000000009E4 aProgramInvocat_0 db 'program_invocation_short_name',0
LOAD:00000000000009E4                                         ; DATA XREF: LOAD:00000000000007F0↑o
LOAD:0000000000000A02 aCxaFinalize    db '__cxa_finalize',0   ; DATA XREF: LOAD:0000000000000748↑o
LOAD:0000000000000A11 aSetvbuf        db 'setvbuf',0          ; DATA XREF: LOAD:0000000000000640↑o
LOAD:0000000000000A19 aBindtextdomain db 'bindtextdomain',0   ; DATA XREF: LOAD:00000000000003E8↑o
LOAD:0000000000000A19                                         ; LOAD:00000000000003B8↑o
LOAD:0000000000000A28 aOpterr         db 'opterr',0           ; DATA XREF: LOAD:0000000000000808↑o
LOAD:0000000000000A2F aLibcStartMain  db '__libc_start_main',0
LOAD:0000000000000A2F                                         ; DATA XREF: LOAD:00000000000004F0↑o
LOAD:0000000000000A41 aFseeko         db 'fseeko',0           ; DATA XREF: LOAD:0000000000000670↑o
LOAD:0000000000000A48 aFputsUnlocked  db 'fputs_unlocked',0   ; DATA XREF: LOAD:0000000000000520↑o
LOAD:0000000000000A57 aFree           db 'free',0             ; DATA XREF: LOAD:00000000000002F8↑o
LOAD:0000000000000A5C aProgname       db '__progname',0       ; DATA XREF: LOAD:0000000000000790↑o
LOAD:0000000000000A67 aPrognameFull   db '__progname_full',0  ; DATA XREF: LOAD:00000000000007D8↑o
LOAD:0000000000000A77 aCxaAtexit      db '__cxa_atexit',0     ; DATA XREF: LOAD:00000000000006A0↑o
LOAD:0000000000000A84 aGlibc23        db 'GLIBC_2.3',0        ; DATA XREF: LOAD:0000000000000B88↓o
LOAD:0000000000000A8E aGlibc234       db 'GLIBC_2.3.4',0      ; DATA XREF: LOAD:0000000000000B98↓o
LOAD:0000000000000A9A aGlibc214       db 'GLIBC_2.14',0       ; DATA XREF: LOAD:0000000000000BA8↓o
LOAD:0000000000000AA5 aGlibc24        db 'GLIBC_2.4',0        ; DATA XREF: LOAD:0000000000000BB8↓o
LOAD:0000000000000AAF aGlibc225       db 'GLIBC_2.2.5',0      ; DATA XREF: LOAD:0000000000000BC8↓o
LOAD:0000000000000ABB aItmDeregistert db '_ITM_deregisterTMCloneTable',0
LOAD:0000000000000ABB                                         ; DATA XREF: LOAD:0000000000000358↑o
LOAD:0000000000000AD7 aGmonStart      db '__gmon_start__',0   ; DATA XREF: LOAD:0000000000000550↑o
LOAD:0000000000000AE6 aItmRegistertmc db '_ITM_registerTMCloneTable',0
LOAD:0000000000000AE6                                         ; DATA XREF: LOAD:0000000000000700↑o
LOAD:0000000000000B00 ; ELF GNU Symbol Version Table
LOAD:0000000000000B00                 dw 0
LOAD:0000000000000B02                 dw 2                    ; free@@GLIBC_2.2.5
LOAD:0000000000000B04                 dw 2                    ; abort@@GLIBC_2.2.5
LOAD:0000000000000B06                 dw 2                    ; __errno_location@@GLIBC_2.2.5
LOAD:0000000000000B08                 dw 2                    ; strncmp@@GLIBC_2.2.5
LOAD:0000000000000B0A                 dw 0                    ; local  symbol: _ITM_deregisterTMCloneTable
LOAD:0000000000000B0C                 dw 2                    ; _exit@@GLIBC_2.2.5
LOAD:0000000000000B0E                 dw 2                    ; __fpending@@GLIBC_2.2.5
LOAD:0000000000000B10                 dw 2                    ; fread_unlocked@@GLIBC_2.2.5
LOAD:0000000000000B12                 dw 2                    ; textdomain@@GLIBC_2.2.5
LOAD:0000000000000B14                 dw 2                    ; fclose@@GLIBC_2.2.5
LOAD:0000000000000B16                 dw 2                    ; bindtextdomain@@GLIBC_2.2.5
LOAD:0000000000000B18                 dw 2                    ; dcgettext@@GLIBC_2.2.5
LOAD:0000000000000B1A                 dw 2                    ; __ctype_get_mb_cur_max@@GLIBC_2.2.5
LOAD:0000000000000B1C                 dw 2                    ; strlen@@GLIBC_2.2.5
LOAD:0000000000000B1E                 dw 3                    ; __stack_chk_fail@@GLIBC_2.4
LOAD:0000000000000B20                 dw 2                    ; getopt_long@@GLIBC_2.2.5
LOAD:0000000000000B22                 dw 2                    ; mbrtowc@@GLIBC_2.2.5
LOAD:0000000000000B24                 dw 2                    ; strrchr@@GLIBC_2.2.5
LOAD:0000000000000B26                 dw 2                    ; lseek@@GLIBC_2.2.5
LOAD:0000000000000B28                 dw 2                    ; memset@@GLIBC_2.2.5
LOAD:0000000000000B2A                 dw 2                    ; posix_fadvise@@GLIBC_2.2.5
LOAD:0000000000000B2C                 dw 2                    ; __libc_start_main@@GLIBC_2.2.5
LOAD:0000000000000B2E                 dw 2                    ; memcmp@@GLIBC_2.2.5
LOAD:0000000000000B30                 dw 2                    ; fputs_unlocked@@GLIBC_2.2.5
LOAD:0000000000000B32                 dw 2                    ; calloc@@GLIBC_2.2.5
LOAD:0000000000000B34                 dw 0                    ; local  symbol: __gmon_start__
LOAD:0000000000000B36                 dw 4                    ; memcpy@@GLIBC_2.14
LOAD:0000000000000B38                 dw 2                    ; fileno@@GLIBC_2.2.5
LOAD:0000000000000B3A                 dw 2                    ; malloc@@GLIBC_2.2.5
LOAD:0000000000000B3C                 dw 2                    ; fflush@@GLIBC_2.2.5
LOAD:0000000000000B3E                 dw 2                    ; nl_langinfo@@GLIBC_2.2.5
LOAD:0000000000000B40                 dw 2                    ; __freading@@GLIBC_2.2.5
LOAD:0000000000000B42                 dw 2                    ; realloc@@GLIBC_2.2.5
LOAD:0000000000000B44                 dw 2                    ; setlocale@@GLIBC_2.2.5
LOAD:0000000000000B46                 dw 5                    ; __printf_chk@@GLIBC_2.3.4
LOAD:0000000000000B48                 dw 2                    ; setvbuf@@GLIBC_2.2.5
LOAD:0000000000000B4A                 dw 2                    ; error@@GLIBC_2.2.5
LOAD:0000000000000B4C                 dw 2                    ; fseeko@@GLIBC_2.2.5
LOAD:0000000000000B4E                 dw 2                    ; fopen@@GLIBC_2.2.5
LOAD:0000000000000B50                 dw 2                    ; __cxa_atexit@@GLIBC_2.2.5
LOAD:0000000000000B52                 dw 2                    ; exit@@GLIBC_2.2.5
LOAD:0000000000000B54                 dw 2                    ; fwrite@@GLIBC_2.2.5
LOAD:0000000000000B56                 dw 5                    ; __fprintf_chk@@GLIBC_2.3.4
LOAD:0000000000000B58                 dw 0                    ; local  symbol: _ITM_registerTMCloneTable
LOAD:0000000000000B5A                 dw 2                    ; mbsinit@@GLIBC_2.2.5
LOAD:0000000000000B5C                 dw 2                    ; iswprint@@GLIBC_2.2.5
LOAD:0000000000000B5E                 dw 2                    ; __cxa_finalize@@GLIBC_2.2.5
LOAD:0000000000000B60                 dw 6                    ; __ctype_b_loc@@GLIBC_2.3
LOAD:0000000000000B62                 dw 2                    ; stdout@@GLIBC_2.2.5
LOAD:0000000000000B64                 dw 2                    ; __progname@@GLIBC_2.2.5
LOAD:0000000000000B66                 dw 2                    ; stdin@@GLIBC_2.2.5
LOAD:0000000000000B68                 dw 2                    ; program_invocation_name@@GLIBC_2.2.5
LOAD:0000000000000B6A                 dw 2                    ; __progname_full@@GLIBC_2.2.5
LOAD:0000000000000B6C                 dw 2                    ; program_invocation_short_name@@GLIBC_2.2.5
LOAD:0000000000000B6E                 dw 2                    ; opterr@@GLIBC_2.2.5
LOAD:0000000000000B70                 dw 2                    ; stderr@@GLIBC_2.2.5
LOAD:0000000000000B72                 dw 2                    ; optind@@GLIBC_2.2.5
LOAD:0000000000000B74                 dw 0
LOAD:0000000000000B76                 dw 0
LOAD:0000000000000B78 ; ELF GNU Symbol Version Requirements
LOAD:0000000000000B78                 Elf64_Verneed <1, 5, offset aLibcSo6 - offset byte_850, 10h, 0> ; "libc.so.6"
LOAD:0000000000000B88                 Elf64_Vernaux <0D696913h, 0, 6, offset aGlibc23 - offset byte_850, \ ; "GLIBC_2.3"
LOAD:0000000000000B88                                10h>
LOAD:0000000000000B98                 Elf64_Vernaux <9691974h, 0, 5, offset aGlibc234 - offset byte_850, \ ; "GLIBC_2.3.4"
LOAD:0000000000000B98                                10h>
LOAD:0000000000000BA8                 Elf64_Vernaux <6969194h, 0, 4, offset aGlibc214 - offset byte_850, \ ; "GLIBC_2.14"
LOAD:0000000000000BA8                                10h>
LOAD:0000000000000BB8                 Elf64_Vernaux <0D696914h, 0, 3, offset aGlibc24 - offset byte_850, \ ; "GLIBC_2.4"
LOAD:0000000000000BB8                                10h>
LOAD:0000000000000BC8                 Elf64_Vernaux <9691A75h, 0, 2, offset aGlibc225 - offset byte_850, 0> ; "GLIBC_2.2.5"
LOAD:0000000000000BD8 ; ELF RELA Relocation Table
LOAD:0000000000000BD8                 Elf64_Rela <207BB0h, 8, 1800h> ; R_X86_64_RELATIVE +1800h
LOAD:0000000000000BF0                 Elf64_Rela <207BB8h, 8, 17C0h> ; R_X86_64_RELATIVE +17C0h
LOAD:0000000000000C08                 Elf64_Rela <207BC0h, 8, 562Eh> ; R_X86_64_RELATIVE +562Eh
LOAD:0000000000000C20                 Elf64_Rela <207BE0h, 8, 5633h> ; R_X86_64_RELATIVE +5633h
LOAD:0000000000000C38                 Elf64_Rela <207C20h, 8, 5699h> ; R_X86_64_RELATIVE +5699h
LOAD:0000000000000C50                 Elf64_Rela <207C28h, 8, 56A1h> ; R_X86_64_RELATIVE +56A1h
LOAD:0000000000000C68                 Elf64_Rela <207C30h, 8, 56A7h> ; R_X86_64_RELATIVE +56A7h
LOAD:0000000000000C80                 Elf64_Rela <207C38h, 8, 56B4h> ; R_X86_64_RELATIVE +56B4h
LOAD:0000000000000C98                 Elf64_Rela <207C40h, 8, 56C1h> ; R_X86_64_RELATIVE +56C1h
LOAD:0000000000000CB0                 Elf64_Rela <207C48h, 8, 56D5h> ; R_X86_64_RELATIVE +56D5h
LOAD:0000000000000CC8                 Elf64_Rela <207C50h, 8, 56D7h> ; R_X86_64_RELATIVE +56D7h
LOAD:0000000000000CE0                 Elf64_Rela <207C58h, 8, 56BAh> ; R_X86_64_RELATIVE +56BAh
LOAD:0000000000000CF8                 Elf64_Rela <207C60h, 8, 4C73h> ; R_X86_64_RELATIVE +4C73h
LOAD:0000000000000D10                 Elf64_Rela <207C68h, 8, 56DFh> ; R_X86_64_RELATIVE +56DFh
LOAD:0000000000000D28                 Elf64_Rela <208008h, 8, 208008h> ; R_X86_64_RELATIVE +208008h
LOAD:0000000000000D40                 Elf64_Rela <208010h, 8, 5620h> ; R_X86_64_RELATIVE +5620h
LOAD:0000000000000D58                 Elf64_Rela <208060h, 8, 208070h> ; R_X86_64_RELATIVE +208070h
LOAD:0000000000000D70                 Elf64_Rela <208078h, 8, 208120h> ; R_X86_64_RELATIVE +208120h
LOAD:0000000000000D88                 Elf64_Rela <207FD8h, 500000006h, 0> ; R_X86_64_GLOB_DAT _ITM_deregisterTMCloneTable
LOAD:0000000000000DA0                 Elf64_Rela <207FE0h, 1600000006h, 0> ; R_X86_64_GLOB_DAT __libc_start_main
LOAD:0000000000000DB8                 Elf64_Rela <207FE8h, 1A00000006h, 0> ; R_X86_64_GLOB_DAT __gmon_start__
LOAD:0000000000000DD0                 Elf64_Rela <207FF0h, 2C00000006h, 0> ; R_X86_64_GLOB_DAT _ITM_registerTMCloneTable
LOAD:0000000000000DE8                 Elf64_Rela <207FF8h, 2F00000006h, 0> ; R_X86_64_GLOB_DAT __cxa_finalize
LOAD:0000000000000E00                 Elf64_Rela <208080h, 3200000005h, 0> ; R_X86_64_COPY __progname
LOAD:0000000000000E18                 Elf64_Rela <208088h, 3100000005h, 0> ; R_X86_64_COPY stdout
LOAD:0000000000000E30                 Elf64_Rela <208090h, 3300000005h, 0> ; R_X86_64_COPY stdin
LOAD:0000000000000E48                 Elf64_Rela <208098h, 3900000005h, 0> ; R_X86_64_COPY optind
LOAD:0000000000000E60                 Elf64_Rela <2080A0h, 3500000005h, 0> ; R_X86_64_COPY __progname_full
LOAD:0000000000000E78                 Elf64_Rela <2080C0h, 3700000005h, 0> ; R_X86_64_COPY opterr
LOAD:0000000000000E90                 Elf64_Rela <2080E0h, 3800000005h, 0> ; R_X86_64_COPY stderr
LOAD:0000000000000EA8 ; ELF JMPREL Relocation Table
LOAD:0000000000000EA8                 Elf64_Rela <207E80h, 100000007h, 0> ; R_X86_64_JUMP_SLOT free
LOAD:0000000000000EC0                 Elf64_Rela <207E88h, 200000007h, 0> ; R_X86_64_JUMP_SLOT abort
LOAD:0000000000000ED8                 Elf64_Rela <207E90h, 300000007h, 0> ; R_X86_64_JUMP_SLOT __errno_location
LOAD:0000000000000EF0                 Elf64_Rela <207E98h, 400000007h, 0> ; R_X86_64_JUMP_SLOT strncmp
LOAD:0000000000000F08                 Elf64_Rela <207EA0h, 600000007h, 0> ; R_X86_64_JUMP_SLOT _exit
LOAD:0000000000000F20                 Elf64_Rela <207EA8h, 700000007h, 0> ; R_X86_64_JUMP_SLOT __fpending
LOAD:0000000000000F38                 Elf64_Rela <207EB0h, 800000007h, 0> ; R_X86_64_JUMP_SLOT fread_unlocked
LOAD:0000000000000F50                 Elf64_Rela <207EB8h, 900000007h, 0> ; R_X86_64_JUMP_SLOT textdomain
LOAD:0000000000000F68                 Elf64_Rela <207EC0h, 0A00000007h, 0> ; R_X86_64_JUMP_SLOT fclose
LOAD:0000000000000F80                 Elf64_Rela <207EC8h, 0B00000007h, 0> ; R_X86_64_JUMP_SLOT bindtextdomain
LOAD:0000000000000F98                 Elf64_Rela <207ED0h, 0C00000007h, 0> ; R_X86_64_JUMP_SLOT dcgettext
LOAD:0000000000000FB0                 Elf64_Rela <207ED8h, 0D00000007h, 0> ; R_X86_64_JUMP_SLOT __ctype_get_mb_cur_max
LOAD:0000000000000FC8                 Elf64_Rela <207EE0h, 0E00000007h, 0> ; R_X86_64_JUMP_SLOT strlen
LOAD:0000000000000FE0                 Elf64_Rela <207EE8h, 0F00000007h, 0> ; R_X86_64_JUMP_SLOT __stack_chk_fail
LOAD:0000000000000FF8                 Elf64_Rela <207EF0h, 1000000007h, 0> ; R_X86_64_JUMP_SLOT getopt_long
LOAD:0000000000001010                 Elf64_Rela <207EF8h, 1100000007h, 0> ; R_X86_64_JUMP_SLOT mbrtowc
LOAD:0000000000001028                 Elf64_Rela <207F00h, 1200000007h, 0> ; R_X86_64_JUMP_SLOT strrchr
LOAD:0000000000001040                 Elf64_Rela <207F08h, 1300000007h, 0> ; R_X86_64_JUMP_SLOT lseek
LOAD:0000000000001058                 Elf64_Rela <207F10h, 1400000007h, 0> ; R_X86_64_JUMP_SLOT memset
LOAD:0000000000001070                 Elf64_Rela <207F18h, 1500000007h, 0> ; R_X86_64_JUMP_SLOT posix_fadvise
LOAD:0000000000001088                 Elf64_Rela <207F20h, 1700000007h, 0> ; R_X86_64_JUMP_SLOT memcmp
LOAD:00000000000010A0                 Elf64_Rela <207F28h, 1800000007h, 0> ; R_X86_64_JUMP_SLOT fputs_unlocked
LOAD:00000000000010B8                 Elf64_Rela <207F30h, 1900000007h, 0> ; R_X86_64_JUMP_SLOT calloc
LOAD:00000000000010D0                 Elf64_Rela <207F38h, 1B00000007h, 0> ; R_X86_64_JUMP_SLOT memcpy
LOAD:00000000000010E8                 Elf64_Rela <207F40h, 1C00000007h, 0> ; R_X86_64_JUMP_SLOT fileno
LOAD:0000000000001100                 Elf64_Rela <207F48h, 1D00000007h, 0> ; R_X86_64_JUMP_SLOT malloc
LOAD:0000000000001118                 Elf64_Rela <207F50h, 1E00000007h, 0> ; R_X86_64_JUMP_SLOT fflush
LOAD:0000000000001130                 Elf64_Rela <207F58h, 1F00000007h, 0> ; R_X86_64_JUMP_SLOT nl_langinfo
LOAD:0000000000001148                 Elf64_Rela <207F60h, 2000000007h, 0> ; R_X86_64_JUMP_SLOT __freading
LOAD:0000000000001160                 Elf64_Rela <207F68h, 2100000007h, 0> ; R_X86_64_JUMP_SLOT realloc
LOAD:0000000000001178                 Elf64_Rela <207F70h, 2200000007h, 0> ; R_X86_64_JUMP_SLOT setlocale
LOAD:0000000000001190                 Elf64_Rela <207F78h, 2300000007h, 0> ; R_X86_64_JUMP_SLOT __printf_chk
LOAD:00000000000011A8                 Elf64_Rela <207F80h, 2400000007h, 0> ; R_X86_64_JUMP_SLOT setvbuf
LOAD:00000000000011C0                 Elf64_Rela <207F88h, 2500000007h, 0> ; R_X86_64_JUMP_SLOT error
LOAD:00000000000011D8                 Elf64_Rela <207F90h, 2600000007h, 0> ; R_X86_64_JUMP_SLOT fseeko
LOAD:00000000000011F0                 Elf64_Rela <207F98h, 2700000007h, 0> ; R_X86_64_JUMP_SLOT fopen
LOAD:0000000000001208                 Elf64_Rela <207FA0h, 2800000007h, 0> ; R_X86_64_JUMP_SLOT __cxa_atexit
LOAD:0000000000001220                 Elf64_Rela <207FA8h, 2900000007h, 0> ; R_X86_64_JUMP_SLOT exit
LOAD:0000000000001238                 Elf64_Rela <207FB0h, 2A00000007h, 0> ; R_X86_64_JUMP_SLOT fwrite
LOAD:0000000000001250                 Elf64_Rela <207FB8h, 2B00000007h, 0> ; R_X86_64_JUMP_SLOT __fprintf_chk
LOAD:0000000000001268                 Elf64_Rela <207FC0h, 2D00000007h, 0> ; R_X86_64_JUMP_SLOT mbsinit
LOAD:0000000000001280                 Elf64_Rela <207FC8h, 2E00000007h, 0> ; R_X86_64_JUMP_SLOT iswprint
LOAD:0000000000001298                 Elf64_Rela <207FD0h, 3000000007h, 0> ; R_X86_64_JUMP_SLOT __ctype_b_loc
LOAD:0000000000001298 LOAD            ends
LOAD:0000000000001298
.init:00000000000012B0 ; ===========================================================================
.init:00000000000012B0
.init:00000000000012B0 ; Segment type: Pure code
.init:00000000000012B0 ; Segment permissions: Read/Execute
.init:00000000000012B0 _init           segment dword public 'CODE' use64
.init:00000000000012B0                 assume cs:_init
.init:00000000000012B0                 ;org 12B0h
.init:00000000000012B0                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.init:00000000000012B0
.init:00000000000012B0 ; =============== S U B R O U T I N E =======================================
.init:00000000000012B0
.init:00000000000012B0
.init:00000000000012B0                 public _init_proc
.init:00000000000012B0 _init_proc      proc near               ; CODE XREF: __libc_csu_init+2C↓p
.init:00000000000012B0                 sub     rsp, 8          ; _init
.init:00000000000012B4                 mov     rax, cs:__gmon_start___ptr
.init:00000000000012BB                 test    rax, rax
.init:00000000000012BE                 jz      short loc_12C2
.init:00000000000012C0                 call    rax ; __gmon_start__
.init:00000000000012C2
.init:00000000000012C2 loc_12C2:                               ; CODE XREF: _init_proc+E↑j
.init:00000000000012C2                 add     rsp, 8
.init:00000000000012C6                 retn
.init:00000000000012C6 _init_proc      endp
.init:00000000000012C6
.init:00000000000012C6 _init           ends
.init:00000000000012C6
LOAD:00000000000012C7 ; ===========================================================================
LOAD:00000000000012C7
LOAD:00000000000012C7 ; Segment type: Pure code
LOAD:00000000000012C7 ; Segment permissions: Read/Execute
LOAD:00000000000012C7 LOAD            segment byte public 'CODE' use64
LOAD:00000000000012C7                 assume cs:LOAD
LOAD:00000000000012C7                 ;org 12C7h
LOAD:00000000000012C7                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:00000000000012C7                 align 10h
LOAD:00000000000012C7 LOAD            ends
LOAD:00000000000012C7
.plt:00000000000012D0 ; ===========================================================================
.plt:00000000000012D0
.plt:00000000000012D0 ; Segment type: Pure code
.plt:00000000000012D0 ; Segment permissions: Read/Execute
.plt:00000000000012D0 _plt            segment para public 'CODE' use64
.plt:00000000000012D0                 assume cs:_plt
.plt:00000000000012D0                 ;org 12D0h
.plt:00000000000012D0                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.plt:00000000000012D0
.plt:00000000000012D0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000012D0
.plt:00000000000012D0
.plt:00000000000012D0 sub_12D0        proc near               ; CODE XREF: .plt:00000000000012EB↓j
.plt:00000000000012D0                                         ; .plt:00000000000012FB↓j ...
.plt:00000000000012D0 ; __unwind {
.plt:00000000000012D0                 push    cs:qword_207E70
.plt:00000000000012D6                 jmp     cs:qword_207E78
.plt:00000000000012D6 sub_12D0        endp
.plt:00000000000012D6
.plt:00000000000012D6 ; ---------------------------------------------------------------------------
.plt:00000000000012DC                 align 20h
.plt:00000000000012E0
.plt:00000000000012E0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000012E0
.plt:00000000000012E0 ; Attributes: thunk
.plt:00000000000012E0
.plt:00000000000012E0 ; void free(void *ptr)
.plt:00000000000012E0 _free           proc near               ; CODE XREF: quotearg_n_options+115↓p
.plt:00000000000012E0                                         ; quotearg_free+37↓p ...
.plt:00000000000012E0                 jmp     cs:free_ptr
.plt:00000000000012E0 _free           endp
.plt:00000000000012E0
.plt:00000000000012E6 ; ---------------------------------------------------------------------------
.plt:00000000000012E6                 push    0
.plt:00000000000012EB                 jmp     sub_12D0
.plt:00000000000012F0
.plt:00000000000012F0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000012F0
.plt:00000000000012F0 ; Attributes: noreturn thunk
.plt:00000000000012F0
.plt:00000000000012F0 ; void __noreturn abort(void)
.plt:00000000000012F0 _abort          proc near               ; CODE XREF: set_program_name+9A↓p
.plt:00000000000012F0                                         ; quotearg_buffer_restyled:def_2451↓p ...
.plt:00000000000012F0                 jmp     cs:abort_ptr
.plt:00000000000012F0 _abort          endp
.plt:00000000000012F0
.plt:00000000000012F6 ; ---------------------------------------------------------------------------
.plt:00000000000012F6                 push    1
.plt:00000000000012FB                 jmp     sub_12D0
.plt:0000000000001300
.plt:0000000000001300 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001300
.plt:0000000000001300 ; Attributes: thunk
.plt:0000000000001300
.plt:0000000000001300 ; int *__errno_location(void)
.plt:0000000000001300 ___errno_location proc near             ; CODE XREF: main+11E↓p
.plt:0000000000001300                                         ; cksum+1BA↓p ...
.plt:0000000000001300                 jmp     cs:__errno_location_ptr
.plt:0000000000001300 ___errno_location endp
.plt:0000000000001300
.plt:0000000000001306 ; ---------------------------------------------------------------------------
.plt:0000000000001306                 push    2
.plt:000000000000130B                 jmp     sub_12D0
.plt:0000000000001310
.plt:0000000000001310 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001310
.plt:0000000000001310 ; Attributes: thunk
.plt:0000000000001310
.plt:0000000000001310 ; int strncmp(const char *s1, const char *s2, size_t n)
.plt:0000000000001310 _strncmp        proc near               ; CODE XREF: usage+204↓p
.plt:0000000000001310                                         ; usage+2C5↓p
.plt:0000000000001310                 jmp     cs:strncmp_ptr
.plt:0000000000001310 _strncmp        endp
.plt:0000000000001310
.plt:0000000000001316 ; ---------------------------------------------------------------------------
.plt:0000000000001316                 push    3
.plt:000000000000131B                 jmp     sub_12D0
.plt:0000000000001320
.plt:0000000000001320 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001320
.plt:0000000000001320 ; Attributes: noreturn thunk
.plt:0000000000001320
.plt:0000000000001320 ; void __noreturn _exit(int status)
.plt:0000000000001320 __exit          proc near               ; CODE XREF: close_stdout+88↓p
.plt:0000000000001320                 jmp     cs:_exit_ptr
.plt:0000000000001320 __exit          endp
.plt:0000000000001320
.plt:0000000000001326 ; ---------------------------------------------------------------------------
.plt:0000000000001326                 push    4
.plt:000000000000132B                 jmp     sub_12D0
.plt:0000000000001330
.plt:0000000000001330 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001330
.plt:0000000000001330 ; Attributes: thunk
.plt:0000000000001330
.plt:0000000000001330 ; size_t __fpending(FILE *fp)
.plt:0000000000001330 ___fpending     proc near               ; CODE XREF: close_stream+7↓p
.plt:0000000000001330                 jmp     cs:__fpending_ptr
.plt:0000000000001330 ___fpending     endp
.plt:0000000000001330
.plt:0000000000001336 ; ---------------------------------------------------------------------------
.plt:0000000000001336                 push    5
.plt:000000000000133B                 jmp     sub_12D0
.plt:0000000000001340
.plt:0000000000001340 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001340
.plt:0000000000001340 ; Attributes: thunk
.plt:0000000000001340
.plt:0000000000001340 ; size_t fread_unlocked(void *ptr, size_t size, size_t n, FILE *stream)
.plt:0000000000001340 _fread_unlocked proc near               ; CODE XREF: cksum+88↓p
.plt:0000000000001340                 jmp     cs:fread_unlocked_ptr
.plt:0000000000001340 _fread_unlocked endp
.plt:0000000000001340
.plt:0000000000001346 ; ---------------------------------------------------------------------------
.plt:0000000000001346                 push    6
.plt:000000000000134B                 jmp     sub_12D0
.plt:0000000000001350
.plt:0000000000001350 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001350
.plt:0000000000001350 ; Attributes: thunk
.plt:0000000000001350
.plt:0000000000001350 ; char *textdomain(const char *domainname)
.plt:0000000000001350 _textdomain     proc near               ; CODE XREF: main+3D↓p
.plt:0000000000001350                 jmp     cs:textdomain_ptr
.plt:0000000000001350 _textdomain     endp
.plt:0000000000001350
.plt:0000000000001356 ; ---------------------------------------------------------------------------
.plt:0000000000001356                 push    7
.plt:000000000000135B                 jmp     sub_12D0
.plt:0000000000001360
.plt:0000000000001360 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001360
.plt:0000000000001360 ; Attributes: thunk
.plt:0000000000001360
.plt:0000000000001360 ; int fclose(FILE *stream)
.plt:0000000000001360 _fclose         proc near               ; CODE XREF: rpl_fclose+36↓p
.plt:0000000000001360                                         ; rpl_fclose+6B↓j
.plt:0000000000001360                 jmp     cs:fclose_ptr
.plt:0000000000001360 _fclose         endp
.plt:0000000000001360
.plt:0000000000001366 ; ---------------------------------------------------------------------------
.plt:0000000000001366                 push    8
.plt:000000000000136B                 jmp     sub_12D0
.plt:0000000000001370
.plt:0000000000001370 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001370
.plt:0000000000001370 ; Attributes: thunk
.plt:0000000000001370
.plt:0000000000001370 ; char *bindtextdomain(const char *domainname, const char *dirname)
.plt:0000000000001370 _bindtextdomain proc near               ; CODE XREF: main+31↓p
.plt:0000000000001370                 jmp     cs:bindtextdomain_ptr
.plt:0000000000001370 _bindtextdomain endp
.plt:0000000000001370
.plt:0000000000001376 ; ---------------------------------------------------------------------------
.plt:0000000000001376                 push    9
.plt:000000000000137B                 jmp     sub_12D0
.plt:0000000000001380
.plt:0000000000001380 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001380
.plt:0000000000001380 ; Attributes: thunk
.plt:0000000000001380
.plt:0000000000001380 ; char *dcgettext(const char *domainname, const char *msgid, int category)
.plt:0000000000001380 _dcgettext      proc near               ; CODE XREF: cksum+29C↓p
.plt:0000000000001380                                         ; cksum+2C3↓p ...
.plt:0000000000001380                 jmp     cs:dcgettext_ptr
.plt:0000000000001380 _dcgettext      endp
.plt:0000000000001380
.plt:0000000000001386 ; ---------------------------------------------------------------------------
.plt:0000000000001386                 push    0Ah
.plt:000000000000138B                 jmp     sub_12D0
.plt:0000000000001390
.plt:0000000000001390 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001390
.plt:0000000000001390 ; Attributes: thunk
.plt:0000000000001390
.plt:0000000000001390 ; size_t __ctype_get_mb_cur_max(void)
.plt:0000000000001390 ___ctype_get_mb_cur_max proc near       ; CODE XREF: quotearg_buffer_restyled+6C↓p
.plt:0000000000001390                 jmp     cs:__ctype_get_mb_cur_max_ptr
.plt:0000000000001390 ___ctype_get_mb_cur_max endp
.plt:0000000000001390
.plt:0000000000001396 ; ---------------------------------------------------------------------------
.plt:0000000000001396                 push    0Bh
.plt:000000000000139B                 jmp     sub_12D0
.plt:00000000000013A0
.plt:00000000000013A0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000013A0
.plt:00000000000013A0 ; Attributes: thunk
.plt:00000000000013A0
.plt:00000000000013A0 ; size_t strlen(const char *s)
.plt:00000000000013A0 _strlen         proc near               ; CODE XREF: quotearg_buffer_restyled+157↓p
.plt:00000000000013A0                                         ; quotearg_buffer_restyled+8DB↓p ...
.plt:00000000000013A0                 jmp     cs:strlen_ptr
.plt:00000000000013A0 _strlen         endp
.plt:00000000000013A0
.plt:00000000000013A6 ; ---------------------------------------------------------------------------
.plt:00000000000013A6                 push    0Ch
.plt:00000000000013AB                 jmp     sub_12D0
.plt:00000000000013B0
.plt:00000000000013B0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000013B0
.plt:00000000000013B0 ; Attributes: noreturn thunk
.plt:00000000000013B0
.plt:00000000000013B0 ___stack_chk_fail proc near             ; CODE XREF: cksum:loc_1AF8↓p
.plt:00000000000013B0                                         ; parse_long_options:loc_20EA↓p ...
.plt:00000000000013B0                 jmp     cs:__stack_chk_fail_ptr
.plt:00000000000013B0 ___stack_chk_fail endp
.plt:00000000000013B0
.plt:00000000000013B6 ; ---------------------------------------------------------------------------
.plt:00000000000013B6                 push    0Dh
.plt:00000000000013BB                 jmp     sub_12D0
.plt:00000000000013C0
.plt:00000000000013C0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000013C0
.plt:00000000000013C0 ; Attributes: thunk
.plt:00000000000013C0
.plt:00000000000013C0 ; int getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)
.plt:00000000000013C0 _getopt_long    proc near               ; CODE XREF: parse_long_options+C6↓p
.plt:00000000000013C0                                         ; parse_gnu_standard_options_only+9A↓p
.plt:00000000000013C0                 jmp     cs:getopt_long_ptr
.plt:00000000000013C0 _getopt_long    endp
.plt:00000000000013C0
.plt:00000000000013C6 ; ---------------------------------------------------------------------------
.plt:00000000000013C6                 push    0Eh
.plt:00000000000013CB                 jmp     sub_12D0
.plt:00000000000013D0
.plt:00000000000013D0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000013D0
.plt:00000000000013D0 ; Attributes: thunk
.plt:00000000000013D0
.plt:00000000000013D0 ; size_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)
.plt:00000000000013D0 _mbrtowc        proc near               ; CODE XREF: rpl_mbrtowc+32↓p
.plt:00000000000013D0                 jmp     cs:mbrtowc_ptr
.plt:00000000000013D0 _mbrtowc        endp
.plt:00000000000013D0
.plt:00000000000013D6 ; ---------------------------------------------------------------------------
.plt:00000000000013D6                 push    0Fh
.plt:00000000000013DB                 jmp     sub_12D0
.plt:00000000000013E0
.plt:00000000000013E0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000013E0
.plt:00000000000013E0 ; Attributes: thunk
.plt:00000000000013E0
.plt:00000000000013E0 ; char *strrchr(const char *s, int c)
.plt:00000000000013E0 _strrchr        proc near               ; CODE XREF: set_program_name+E↓p
.plt:00000000000013E0                 jmp     cs:strrchr_ptr
.plt:00000000000013E0 _strrchr        endp
.plt:00000000000013E0
.plt:00000000000013E6 ; ---------------------------------------------------------------------------
.plt:00000000000013E6                 push    10h
.plt:00000000000013EB                 jmp     sub_12D0
.plt:00000000000013F0
.plt:00000000000013F0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000013F0
.plt:00000000000013F0 ; Attributes: thunk
.plt:00000000000013F0
.plt:00000000000013F0 ; __off_t lseek(int fd, __off_t offset, int whence)
.plt:00000000000013F0 _lseek          proc near               ; CODE XREF: rpl_fclose+59↓p
.plt:00000000000013F0                                         ; rpl_fseeko+3B↓p
.plt:00000000000013F0                 jmp     cs:lseek_ptr
.plt:00000000000013F0 _lseek          endp
.plt:00000000000013F0
.plt:00000000000013F6 ; ---------------------------------------------------------------------------
.plt:00000000000013F6                 push    11h
.plt:00000000000013FB                 jmp     sub_12D0
.plt:0000000000001400
.plt:0000000000001400 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001400
.plt:0000000000001400 ; Attributes: thunk
.plt:0000000000001400
.plt:0000000000001400 ; void *memset(void *s, int c, size_t n)
.plt:0000000000001400 _memset         proc near               ; CODE XREF: quotearg_n_options+99↓p
.plt:0000000000001400                                         ; xzalloc+12↓j
.plt:0000000000001400                 jmp     cs:memset_ptr
.plt:0000000000001400 _memset         endp
.plt:0000000000001400
.plt:0000000000001406 ; ---------------------------------------------------------------------------
.plt:0000000000001406                 push    12h
.plt:000000000000140B                 jmp     sub_12D0
.plt:0000000000001410
.plt:0000000000001410 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001410
.plt:0000000000001410 ; Attributes: thunk
.plt:0000000000001410
.plt:0000000000001410 ; int posix_fadvise(int fd, off_t offset, off_t len, int advise)
.plt:0000000000001410 _posix_fadvise  proc near               ; CODE XREF: fdadvise↓j
.plt:0000000000001410                                         ; fadvise+16↓j
.plt:0000000000001410                 jmp     cs:posix_fadvise_ptr
.plt:0000000000001410 _posix_fadvise  endp
.plt:0000000000001410
.plt:0000000000001416 ; ---------------------------------------------------------------------------
.plt:0000000000001416                 push    13h
.plt:000000000000141B                 jmp     sub_12D0
.plt:0000000000001420
.plt:0000000000001420 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001420
.plt:0000000000001420 ; Attributes: thunk
.plt:0000000000001420
.plt:0000000000001420 ; int memcmp(const void *s1, const void *s2, size_t n)
.plt:0000000000001420 _memcmp         proc near               ; CODE XREF: quotearg_buffer_restyled+19A↓p
.plt:0000000000001420                 jmp     cs:memcmp_ptr
.plt:0000000000001420 _memcmp         endp
.plt:0000000000001420
.plt:0000000000001426 ; ---------------------------------------------------------------------------
.plt:0000000000001426                 push    14h
.plt:000000000000142B                 jmp     sub_12D0
.plt:0000000000001430
.plt:0000000000001430 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001430
.plt:0000000000001430 ; Attributes: thunk
.plt:0000000000001430
.plt:0000000000001430 ; int fputs_unlocked(const char *s, FILE *stream)
.plt:0000000000001430 _fputs_unlocked proc near               ; CODE XREF: usage+A0↓p
.plt:0000000000001430                                         ; usage+C5↓p ...
.plt:0000000000001430                 jmp     cs:fputs_unlocked_ptr
.plt:0000000000001430 _fputs_unlocked endp
.plt:0000000000001430
.plt:0000000000001436 ; ---------------------------------------------------------------------------
.plt:0000000000001436                 push    15h
.plt:000000000000143B                 jmp     sub_12D0
.plt:0000000000001440
.plt:0000000000001440 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001440
.plt:0000000000001440 ; Attributes: thunk
.plt:0000000000001440
.plt:0000000000001440 ; void *calloc(size_t nmemb, size_t size)
.plt:0000000000001440 _calloc         proc near               ; CODE XREF: xcalloc+1A↓p
.plt:0000000000001440                 jmp     cs:calloc_ptr
.plt:0000000000001440 _calloc         endp
.plt:0000000000001440
.plt:0000000000001446 ; ---------------------------------------------------------------------------
.plt:0000000000001446                 push    16h
.plt:000000000000144B                 jmp     sub_12D0
.plt:0000000000001450
.plt:0000000000001450 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001450
.plt:0000000000001450 ; Attributes: thunk
.plt:0000000000001450
.plt:0000000000001450 ; void *memcpy(void *dest, const void *src, size_t n)
.plt:0000000000001450 _memcpy         proc near               ; CODE XREF: xmemdup+23↓j
.plt:0000000000001450                 jmp     cs:memcpy_ptr
.plt:0000000000001450 _memcpy         endp
.plt:0000000000001450
.plt:0000000000001456 ; ---------------------------------------------------------------------------
.plt:0000000000001456                 push    17h
.plt:000000000000145B                 jmp     sub_12D0
.plt:0000000000001460
.plt:0000000000001460 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001460
.plt:0000000000001460 ; Attributes: thunk
.plt:0000000000001460
.plt:0000000000001460 ; int fileno(FILE *stream)
.plt:0000000000001460 _fileno         proc near               ; CODE XREF: fadvise+8↓p
.plt:0000000000001460                                         ; rpl_fclose+7↓p ...
.plt:0000000000001460                 jmp     cs:fileno_ptr
.plt:0000000000001460 _fileno         endp
.plt:0000000000001460
.plt:0000000000001466 ; ---------------------------------------------------------------------------
.plt:0000000000001466                 push    18h
.plt:000000000000146B                 jmp     sub_12D0
.plt:0000000000001470
.plt:0000000000001470 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001470
.plt:0000000000001470 ; Attributes: thunk
.plt:0000000000001470
.plt:0000000000001470 ; void *malloc(size_t size)
.plt:0000000000001470 _malloc         proc near               ; CODE XREF: xmalloc+4↓p
.plt:0000000000001470                 jmp     cs:malloc_ptr
.plt:0000000000001470 _malloc         endp
.plt:0000000000001470
.plt:0000000000001476 ; ---------------------------------------------------------------------------
.plt:0000000000001476                 push    19h
.plt:000000000000147B                 jmp     sub_12D0
.plt:0000000000001480
.plt:0000000000001480 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001480
.plt:0000000000001480 ; Attributes: thunk
.plt:0000000000001480
.plt:0000000000001480 ; int fflush(FILE *stream)
.plt:0000000000001480 _fflush         proc near               ; CODE XREF: rpl_fflush+1E↓j
.plt:0000000000001480                                         ; rpl_fflush+3B↓j
.plt:0000000000001480                 jmp     cs:fflush_ptr
.plt:0000000000001480 _fflush         endp
.plt:0000000000001480
.plt:0000000000001486 ; ---------------------------------------------------------------------------
.plt:0000000000001486                 push    1Ah
.plt:000000000000148B                 jmp     sub_12D0
.plt:0000000000001490
.plt:0000000000001490 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001490
.plt:0000000000001490 ; Attributes: thunk
.plt:0000000000001490
.plt:0000000000001490 ; char *nl_langinfo(nl_item item)
.plt:0000000000001490 _nl_langinfo    proc near               ; CODE XREF: locale_charset+9↓p
.plt:0000000000001490                 jmp     cs:nl_langinfo_ptr
.plt:0000000000001490 _nl_langinfo    endp
.plt:0000000000001490
.plt:0000000000001496 ; ---------------------------------------------------------------------------
.plt:0000000000001496                 push    1Bh
.plt:000000000000149B                 jmp     sub_12D0
.plt:00000000000014A0
.plt:00000000000014A0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000014A0
.plt:00000000000014A0 ; Attributes: thunk
.plt:00000000000014A0
.plt:00000000000014A0 ; int __freading(FILE *fp)
.plt:00000000000014A0 ___freading     proc near               ; CODE XREF: rpl_fclose+13↓p
.plt:00000000000014A0                                         ; rpl_fflush+9↓p
.plt:00000000000014A0                 jmp     cs:__freading_ptr
.plt:00000000000014A0 ___freading     endp
.plt:00000000000014A0
.plt:00000000000014A6 ; ---------------------------------------------------------------------------
.plt:00000000000014A6                 push    1Ch
.plt:00000000000014AB                 jmp     sub_12D0
.plt:00000000000014B0
.plt:00000000000014B0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000014B0
.plt:00000000000014B0 ; Attributes: thunk
.plt:00000000000014B0
.plt:00000000000014B0 ; void *realloc(void *ptr, size_t size)
.plt:00000000000014B0 _realloc        proc near               ; CODE XREF: xrealloc+11↓p
.plt:00000000000014B0                 jmp     cs:realloc_ptr
.plt:00000000000014B0 _realloc        endp
.plt:00000000000014B0
.plt:00000000000014B6 ; ---------------------------------------------------------------------------
.plt:00000000000014B6                 push    1Dh
.plt:00000000000014BB                 jmp     sub_12D0
.plt:00000000000014C0
.plt:00000000000014C0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000014C0
.plt:00000000000014C0 ; Attributes: thunk
.plt:00000000000014C0
.plt:00000000000014C0 ; char *setlocale(int category, const char *locale)
.plt:00000000000014C0 _setlocale      proc near               ; CODE XREF: main+1E↓p
.plt:00000000000014C0                                         ; usage+1EB↓p ...
.plt:00000000000014C0                 jmp     cs:setlocale_ptr
.plt:00000000000014C0 _setlocale      endp
.plt:00000000000014C0
.plt:00000000000014C6 ; ---------------------------------------------------------------------------
.plt:00000000000014C6                 push    1Eh
.plt:00000000000014CB                 jmp     sub_12D0
.plt:00000000000014D0
.plt:00000000000014D0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000014D0
.plt:00000000000014D0 ; Attributes: thunk
.plt:00000000000014D0
.plt:00000000000014D0 ___printf_chk   proc near               ; CODE XREF: cksum+152↓p
.plt:00000000000014D0                                         ; cksum+1EE↓p ...
.plt:00000000000014D0                 jmp     cs:__printf_chk_ptr
.plt:00000000000014D0 ___printf_chk   endp
.plt:00000000000014D0
.plt:00000000000014D6 ; ---------------------------------------------------------------------------
.plt:00000000000014D6                 push    1Fh
.plt:00000000000014DB                 jmp     sub_12D0
.plt:00000000000014E0
.plt:00000000000014E0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000014E0
.plt:00000000000014E0 ; Attributes: thunk
.plt:00000000000014E0
.plt:00000000000014E0 ; int setvbuf(FILE *stream, char *buf, int modes, size_t n)
.plt:00000000000014E0 _setvbuf        proc near               ; CODE XREF: main+5E↓p
.plt:00000000000014E0                 jmp     cs:setvbuf_ptr
.plt:00000000000014E0 _setvbuf        endp
.plt:00000000000014E0
.plt:00000000000014E6 ; ---------------------------------------------------------------------------
.plt:00000000000014E6                 push    20h ; ' '
.plt:00000000000014EB                 jmp     sub_12D0
.plt:00000000000014F0
.plt:00000000000014F0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000014F0
.plt:00000000000014F0 ; Attributes: thunk
.plt:00000000000014F0
.plt:00000000000014F0 ; void error(int status, int errnum, const char *format, ...)
.plt:00000000000014F0 _error          proc near               ; CODE XREF: main+133↓p
.plt:00000000000014F0                                         ; cksum+1D1↓p ...
.plt:00000000000014F0                 jmp     cs:error_ptr
.plt:00000000000014F0 _error          endp
.plt:00000000000014F0
.plt:00000000000014F6 ; ---------------------------------------------------------------------------
.plt:00000000000014F6                 push    21h ; '!'
.plt:00000000000014FB                 jmp     sub_12D0
.plt:0000000000001500
.plt:0000000000001500 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001500
.plt:0000000000001500 ; Attributes: thunk
.plt:0000000000001500
.plt:0000000000001500 ; int fseeko(FILE *stream, __off_t off, int whence)
.plt:0000000000001500 _fseeko         proc near               ; CODE XREF: rpl_fseeko:loc_48DA↓j
.plt:0000000000001500                 jmp     cs:fseeko_ptr
.plt:0000000000001500 _fseeko         endp
.plt:0000000000001500
.plt:0000000000001506 ; ---------------------------------------------------------------------------
.plt:0000000000001506                 push    22h ; '"'
.plt:000000000000150B                 jmp     sub_12D0
.plt:0000000000001510
.plt:0000000000001510 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001510
.plt:0000000000001510 ; Attributes: thunk
.plt:0000000000001510
.plt:0000000000001510 ; FILE *fopen(const char *filename, const char *modes)
.plt:0000000000001510 _fopen          proc near               ; CODE XREF: cksum+266↓p
.plt:0000000000001510                 jmp     cs:fopen_ptr
.plt:0000000000001510 _fopen          endp
.plt:0000000000001510
.plt:0000000000001516 ; ---------------------------------------------------------------------------
.plt:0000000000001516                 push    23h ; '#'
.plt:000000000000151B                 jmp     sub_12D0
.plt:0000000000001520
.plt:0000000000001520 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001520
.plt:0000000000001520 ; Attributes: thunk
.plt:0000000000001520
.plt:0000000000001520 ; int __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)
.plt:0000000000001520 ___cxa_atexit   proc near               ; CODE XREF: atexit+9↓j
.plt:0000000000001520                 jmp     cs:__cxa_atexit_ptr
.plt:0000000000001520 ___cxa_atexit   endp
.plt:0000000000001520
.plt:0000000000001526 ; ---------------------------------------------------------------------------
.plt:0000000000001526                 push    24h ; '$'
.plt:000000000000152B                 jmp     sub_12D0
.plt:0000000000001530
.plt:0000000000001530 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001530
.plt:0000000000001530 ; Attributes: noreturn thunk
.plt:0000000000001530
.plt:0000000000001530 ; void __noreturn exit(int status)
.plt:0000000000001530 _exit           proc near               ; CODE XREF: usage+58↓p
.plt:0000000000001530                                         ; parse_long_options+122↓p ...
.plt:0000000000001530                 jmp     cs:exit_ptr
.plt:0000000000001530 _exit           endp
.plt:0000000000001530
.plt:0000000000001536 ; ---------------------------------------------------------------------------
.plt:0000000000001536                 push    25h ; '%'
.plt:000000000000153B                 jmp     sub_12D0
.plt:0000000000001540
.plt:0000000000001540 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001540
.plt:0000000000001540 ; Attributes: thunk
.plt:0000000000001540
.plt:0000000000001540 ; size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)
.plt:0000000000001540 _fwrite         proc near               ; CODE XREF: set_program_name+95↓p
.plt:0000000000001540                 jmp     cs:fwrite_ptr
.plt:0000000000001540 _fwrite         endp
.plt:0000000000001540
.plt:0000000000001546 ; ---------------------------------------------------------------------------
.plt:0000000000001546                 push    26h ; '&'
.plt:000000000000154B                 jmp     sub_12D0
.plt:0000000000001550
.plt:0000000000001550 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001550
.plt:0000000000001550 ; Attributes: thunk
.plt:0000000000001550
.plt:0000000000001550 ___fprintf_chk  proc near               ; CODE XREF: usage+51↓p
.plt:0000000000001550                                         ; version_etc_arn+37↓p ...
.plt:0000000000001550                 jmp     cs:__fprintf_chk_ptr
.plt:0000000000001550 ___fprintf_chk  endp
.plt:0000000000001550
.plt:0000000000001556 ; ---------------------------------------------------------------------------
.plt:0000000000001556                 push    27h ; '''
.plt:000000000000155B                 jmp     sub_12D0
.plt:0000000000001560
.plt:0000000000001560 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001560
.plt:0000000000001560 ; Attributes: thunk
.plt:0000000000001560
.plt:0000000000001560 ; int mbsinit(const mbstate_t *ps)
.plt:0000000000001560 _mbsinit        proc near               ; CODE XREF: quotearg_buffer_restyled+9A8↓p
.plt:0000000000001560                 jmp     cs:mbsinit_ptr
.plt:0000000000001560 _mbsinit        endp
.plt:0000000000001560
.plt:0000000000001566 ; ---------------------------------------------------------------------------
.plt:0000000000001566                 push    28h ; '('
.plt:000000000000156B                 jmp     sub_12D0
.plt:0000000000001570
.plt:0000000000001570 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001570
.plt:0000000000001570 ; Attributes: thunk
.plt:0000000000001570
.plt:0000000000001570 ; int iswprint(wint_t wc)
.plt:0000000000001570 _iswprint       proc near               ; CODE XREF: quotearg_buffer_restyled+990↓p
.plt:0000000000001570                 jmp     cs:iswprint_ptr
.plt:0000000000001570 _iswprint       endp
.plt:0000000000001570
.plt:0000000000001576 ; ---------------------------------------------------------------------------
.plt:0000000000001576                 push    29h ; ')'
.plt:000000000000157B                 jmp     sub_12D0
.plt:0000000000001580
.plt:0000000000001580 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001580
.plt:0000000000001580 ; Attributes: thunk
.plt:0000000000001580
.plt:0000000000001580 ; const unsigned __int16 **__ctype_b_loc(void)
.plt:0000000000001580 ___ctype_b_loc  proc near               ; CODE XREF: quotearg_buffer_restyled+513↓p
.plt:0000000000001580                 jmp     cs:__ctype_b_loc_ptr
.plt:0000000000001580 ___ctype_b_loc  endp
.plt:0000000000001580
.plt:0000000000001586 ; ---------------------------------------------------------------------------
.plt:0000000000001586                 push    2Ah ; '*'
.plt:000000000000158B                 jmp     sub_12D0
.plt:000000000000158B ; } // starts at 12D0
.plt:000000000000158B _plt            ends
.plt:000000000000158B
.plt.got:0000000000001590 ; ===========================================================================
.plt.got:0000000000001590
.plt.got:0000000000001590 ; Segment type: Pure code
.plt.got:0000000000001590 ; Segment permissions: Read/Execute
.plt.got:0000000000001590 _plt_got        segment qword public 'CODE' use64
.plt.got:0000000000001590                 assume cs:_plt_got
.plt.got:0000000000001590                 ;org 1590h
.plt.got:0000000000001590                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.plt.got:0000000000001590
.plt.got:0000000000001590 ; =============== S U B R O U T I N E =======================================
.plt.got:0000000000001590
.plt.got:0000000000001590 ; Attributes: thunk
.plt.got:0000000000001590
.plt.got:0000000000001590 ; int __fastcall _cxa_finalize(void *)
.plt.got:0000000000001590 __cxa_finalize  proc near               ; CODE XREF: __do_global_dtors_aux+1E↓p
.plt.got:0000000000001590 ; __unwind {
.plt.got:0000000000001590                 jmp     cs:__cxa_finalize_ptr
.plt.got:0000000000001590 __cxa_finalize  endp
.plt.got:0000000000001590
.plt.got:0000000000001590 ; ---------------------------------------------------------------------------
.plt.got:0000000000001596                 align 8
.plt.got:0000000000001596 ; } // starts at 1590
.plt.got:0000000000001596 _plt_got        ends
.plt.got:0000000000001596
LOAD:0000000000001598 ; ===========================================================================
LOAD:0000000000001598
LOAD:0000000000001598 ; Segment type: Pure code
LOAD:0000000000001598 ; Segment permissions: Read/Execute
LOAD:0000000000001598 LOAD            segment byte public 'CODE' use64
LOAD:0000000000001598                 assume cs:LOAD
LOAD:0000000000001598                 ;org 1598h
LOAD:0000000000001598                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000001598                 align 20h
LOAD:0000000000001598 LOAD            ends
LOAD:0000000000001598
.text:00000000000015A0 ; ===========================================================================
.text:00000000000015A0
.text:00000000000015A0 ; Segment type: Pure code
.text:00000000000015A0 ; Segment permissions: Read/Execute
.text:00000000000015A0 _text           segment para public 'CODE' use64
.text:00000000000015A0                 assume cs:_text
.text:00000000000015A0                 ;org 15A0h
.text:00000000000015A0                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00000000000015A0
.text:00000000000015A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000015A0
.text:00000000000015A0
.text:00000000000015A0 ; int __cdecl main(int argc, const char **argv, const char **envp)
.text:00000000000015A0                 public main
.text:00000000000015A0 main            proc near               ; DATA XREF: start+1D↓o
.text:00000000000015A0 ; __unwind {
.text:00000000000015A0                 push    r12
.text:00000000000015A2                 mov     r12d, edi
.text:00000000000015A5                 push    rbp
.text:00000000000015A6                 push    rbx
.text:00000000000015A7                 mov     rdi, [rsi]
.text:00000000000015AA                 mov     rbp, rsi
.text:00000000000015AD                 call    set_program_name
.text:00000000000015B2                 lea     rsi, aWrittenBySSAnd+1Bh ; locale
.text:00000000000015B9                 mov     edi, 6          ; category
.text:00000000000015BE                 call    _setlocale
.text:00000000000015C3                 lea     rsi, dirname    ; "/usr/local/share/locale"
.text:00000000000015CA                 lea     rdi, domainname ; "coreutils"
.text:00000000000015D1                 call    _bindtextdomain
.text:00000000000015D6                 lea     rdi, domainname ; "coreutils"
.text:00000000000015DD                 call    _textdomain
.text:00000000000015E2                 lea     rdi, close_stdout
.text:00000000000015E9                 call    atexit
.text:00000000000015EE                 mov     rdi, cs:stdout@@GLIBC_2_2_5 ; stream
.text:00000000000015F5                 xor     ecx, ecx        ; n
.text:00000000000015F7                 xor     esi, esi        ; buf
.text:00000000000015F9                 mov     edx, 1          ; modes
.text:00000000000015FE                 call    _setvbuf
.text:0000000000001603                 lea     rax, aQFrankXia ; "Q. Frank Xia"
.text:000000000000160A                 sub     rsp, 8
.text:000000000000160E                 mov     r8, cs:Version
.text:0000000000001615                 push    0
.text:0000000000001617                 lea     rcx, domainname ; "coreutils"
.text:000000000000161E                 lea     rdx, aCksum     ; "cksum"
.text:0000000000001625                 push    rax
.text:0000000000001626                 lea     rax, usage
.text:000000000000162D                 mov     r9d, 1
.text:0000000000001633                 mov     rsi, rbp
.text:0000000000001636                 mov     edi, r12d
.text:0000000000001639                 push    rax
.text:000000000000163A                 xor     eax, eax
.text:000000000000163C                 call    parse_gnu_standard_options_only
.text:0000000000001641                 mov     eax, cs:optind@@GLIBC_2_2_5
.text:0000000000001647                 add     rsp, 20h
.text:000000000000164B                 mov     cs:have_read_stdin, 0
.text:0000000000001652                 cmp     eax, r12d
.text:0000000000001655                 jz      loc_16D8
.text:000000000000165B                 jge     loc_16EA
.text:0000000000001661                 movsxd  rdx, eax
.text:0000000000001664                 not     eax
.text:0000000000001666                 add     eax, r12d
.text:0000000000001669                 lea     rbx, [rbp+rdx*8+0]
.text:000000000000166E                 add     rax, rdx
.text:0000000000001671                 lea     r12, [rbp+rax*8+8]
.text:0000000000001676                 mov     ebp, 1
.text:000000000000167B                 nop     dword ptr [rax+rax+00h]
.text:0000000000001680
.text:0000000000001680 loc_1680:                               ; CODE XREF: main+F6↓j
.text:0000000000001680                 mov     rdi, [rbx]      ; filename
.text:0000000000001683                 mov     esi, 1
.text:0000000000001688                 add     rbx, 8
.text:000000000000168C                 call    cksum
.text:0000000000001691                 and     ebp, eax
.text:0000000000001693                 cmp     rbx, r12
.text:0000000000001696                 jnz     short loc_1680
.text:0000000000001698
.text:0000000000001698 loc_1698:                               ; CODE XREF: main+148↓j
.text:0000000000001698                 cmp     cs:have_read_stdin, 0
.text:000000000000169F                 jnz     short loc_16AD
.text:00000000000016A1
.text:00000000000016A1 loc_16A1:                               ; CODE XREF: main+11C↓j
.text:00000000000016A1                                         ; main+14F↓j
.text:00000000000016A1                 xor     ebp, 1
.text:00000000000016A4                 movzx   eax, bpl
.text:00000000000016A8                 pop     rbx
.text:00000000000016A9                 pop     rbp
.text:00000000000016AA                 pop     r12
.text:00000000000016AC                 retn
.text:00000000000016AD ; ---------------------------------------------------------------------------
.text:00000000000016AD
.text:00000000000016AD loc_16AD:                               ; CODE XREF: main+FF↑j
.text:00000000000016AD                 mov     rdi, cs:stdin@@GLIBC_2_2_5 ; stream
.text:00000000000016B4                 call    rpl_fclose
.text:00000000000016B9                 add     eax, 1
.text:00000000000016BC                 jnz     short loc_16A1
.text:00000000000016BE                 call    ___errno_location
.text:00000000000016C3                 mov     esi, [rax]      ; errnum
.text:00000000000016C5                 lea     rdx, aLt+2      ; format
.text:00000000000016CC                 mov     edi, 1          ; status
.text:00000000000016D1                 xor     eax, eax
.text:00000000000016D3                 call    _error
.text:00000000000016D8
.text:00000000000016D8 loc_16D8:                               ; CODE XREF: main+B5↑j
.text:00000000000016D8                 lea     rdi, aLt+2      ; filename
.text:00000000000016DF                 xor     esi, esi
.text:00000000000016E1                 call    cksum
.text:00000000000016E6                 mov     ebp, eax
.text:00000000000016E8                 jmp     short loc_1698
.text:00000000000016EA ; ---------------------------------------------------------------------------
.text:00000000000016EA
.text:00000000000016EA loc_16EA:                               ; CODE XREF: main+BB↑j
.text:00000000000016EA                 mov     ebp, 1
.text:00000000000016EF                 jmp     short loc_16A1
.text:00000000000016EF ; } // starts at 15A0
.text:00000000000016EF main            endp
.text:00000000000016EF
.text:00000000000016EF ; ---------------------------------------------------------------------------
.text:00000000000016F1                 align 20h
.text:0000000000001700
.text:0000000000001700 ; =============== S U B R O U T I N E =======================================
.text:0000000000001700
.text:0000000000001700 ; Attributes: noreturn fuzzy-sp info_from_lumina
.text:0000000000001700
.text:0000000000001700 ; void __fastcall __noreturn start(__int64, __int64, void (*)(void))
.text:0000000000001700                 public start
.text:0000000000001700 start           proc near               ; DATA XREF: LOAD:0000000000000018↑o
.text:0000000000001700 ; __unwind {
.text:0000000000001700                 xor     ebp, ebp
.text:0000000000001702                 mov     r9, rdx         ; rtld_fini
.text:0000000000001705                 pop     rsi             ; argc
.text:0000000000001706                 mov     rdx, rsp        ; ubp_av
.text:0000000000001709                 and     rsp, 0FFFFFFFFFFFFFFF0h
.text:000000000000170D                 push    rax
.text:000000000000170E                 push    rsp             ; stack_end
.text:000000000000170F                 lea     r8, __libc_csu_fini ; fini
.text:0000000000001716                 lea     rcx, __libc_csu_init ; init
.text:000000000000171D                 lea     rdi, main       ; main
.text:0000000000001724                 call    cs:__libc_start_main_ptr
.text:000000000000172A                 hlt
.text:000000000000172A ; } // starts at 1700
.text:000000000000172A start           endp
.text:000000000000172A
.text:000000000000172A ; ---------------------------------------------------------------------------
.text:000000000000172B                 align 10h
.text:0000000000001730
.text:0000000000001730 ; =============== S U B R O U T I N E =======================================
.text:0000000000001730
.text:0000000000001730 ; Attributes: bp-based frame info_from_lumina
.text:0000000000001730
.text:0000000000001730 deregister_tm_clones proc near          ; CODE XREF: __do_global_dtors_aux:loc_17E3↓p
.text:0000000000001730                 lea     rdi, __bss_start
.text:0000000000001737                 push    rbp
.text:0000000000001738                 lea     rax, __bss_start
.text:000000000000173F                 cmp     rax, rdi
.text:0000000000001742                 mov     rbp, rsp
.text:0000000000001745                 jz      short loc_1760
.text:0000000000001747                 mov     rax, cs:_ITM_deregisterTMCloneTable_ptr
.text:000000000000174E                 test    rax, rax
.text:0000000000001751                 jz      short loc_1760
.text:0000000000001753                 pop     rbp
.text:0000000000001754                 jmp     rax
.text:0000000000001754 ; ---------------------------------------------------------------------------
.text:0000000000001756                 align 20h
.text:0000000000001760
.text:0000000000001760 loc_1760:                               ; CODE XREF: deregister_tm_clones+15↑j
.text:0000000000001760                                         ; deregister_tm_clones+21↑j
.text:0000000000001760                 pop     rbp
.text:0000000000001761                 retn
.text:0000000000001761 deregister_tm_clones endp
.text:0000000000001761
.text:0000000000001761 ; ---------------------------------------------------------------------------
.text:0000000000001762                 align 10h
.text:0000000000001770
.text:0000000000001770 ; =============== S U B R O U T I N E =======================================
.text:0000000000001770
.text:0000000000001770 ; Attributes: bp-based frame info_from_lumina
.text:0000000000001770
.text:0000000000001770 register_tm_clones proc near            ; CODE XREF: frame_dummy+5↓j
.text:0000000000001770                 lea     rdi, __bss_start
.text:0000000000001777                 lea     rsi, __bss_start
.text:000000000000177E                 push    rbp
.text:000000000000177F                 sub     rsi, rdi
.text:0000000000001782                 mov     rbp, rsp
.text:0000000000001785                 sar     rsi, 3
.text:0000000000001789                 mov     rax, rsi
.text:000000000000178C                 shr     rax, 3Fh
.text:0000000000001790                 add     rsi, rax
.text:0000000000001793                 sar     rsi, 1
.text:0000000000001796                 jz      short loc_17B0
.text:0000000000001798                 mov     rax, cs:_ITM_registerTMCloneTable_ptr
.text:000000000000179F                 test    rax, rax
.text:00000000000017A2                 jz      short loc_17B0
.text:00000000000017A4                 pop     rbp
.text:00000000000017A5                 jmp     rax
.text:00000000000017A5 ; ---------------------------------------------------------------------------
.text:00000000000017A7                 align 10h
.text:00000000000017B0
.text:00000000000017B0 loc_17B0:                               ; CODE XREF: register_tm_clones+26↑j
.text:00000000000017B0                                         ; register_tm_clones+32↑j
.text:00000000000017B0                 pop     rbp
.text:00000000000017B1                 retn
.text:00000000000017B1 register_tm_clones endp
.text:00000000000017B1
.text:00000000000017B1 ; ---------------------------------------------------------------------------
.text:00000000000017B2                 align 20h
.text:00000000000017C0
.text:00000000000017C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000017C0
.text:00000000000017C0 ; Attributes: info_from_lumina
.text:00000000000017C0
.text:00000000000017C0 __do_global_dtors_aux proc near         ; DATA XREF: .fini_array:__do_global_dtors_aux_fini_array_entry↓o
.text:00000000000017C0                 cmp     cs:completed_7697, 0
.text:00000000000017C7                 jnz     short locret_17F8
.text:00000000000017C9                 cmp     cs:__cxa_finalize_ptr, 0
.text:00000000000017D1                 push    rbp
.text:00000000000017D2                 mov     rbp, rsp
.text:00000000000017D5                 jz      short loc_17E3
.text:00000000000017D7                 mov     rdi, cs:__dso_handle ; void *
.text:00000000000017DE                 call    __cxa_finalize
.text:00000000000017E3
.text:00000000000017E3 loc_17E3:                               ; CODE XREF: __do_global_dtors_aux+15↑j
.text:00000000000017E3                 call    deregister_tm_clones
.text:00000000000017E8                 mov     cs:completed_7697, 1
.text:00000000000017EF                 pop     rbp
.text:00000000000017F0                 retn
.text:00000000000017F0 ; ---------------------------------------------------------------------------
.text:00000000000017F1                 align 8
.text:00000000000017F8
.text:00000000000017F8 locret_17F8:                            ; CODE XREF: __do_global_dtors_aux+7↑j
.text:00000000000017F8                 rep retn
.text:00000000000017F8 __do_global_dtors_aux endp
.text:00000000000017F8
.text:00000000000017F8 ; ---------------------------------------------------------------------------
.text:00000000000017FA                 align 20h
.text:0000000000001800
.text:0000000000001800 ; =============== S U B R O U T I N E =======================================
.text:0000000000001800
.text:0000000000001800 ; Attributes: bp-based frame
.text:0000000000001800
.text:0000000000001800 frame_dummy     proc near               ; CODE XREF: __libc_csu_init+49↓p
.text:0000000000001800                                         ; DATA XREF: .init_array:__frame_dummy_init_array_entry↓o
.text:0000000000001800                 push    rbp
.text:0000000000001801                 mov     rbp, rsp
.text:0000000000001804                 pop     rbp
.text:0000000000001805                 jmp     register_tm_clones
.text:0000000000001805 frame_dummy     endp
.text:0000000000001805
.text:0000000000001805 ; ---------------------------------------------------------------------------
.text:000000000000180A                 align 10h
.text:0000000000001810
.text:0000000000001810 ; =============== S U B R O U T I N E =======================================
.text:0000000000001810
.text:0000000000001810
.text:0000000000001810 ; __int64 __fastcall cksum(char *filename)
.text:0000000000001810 cksum           proc near               ; CODE XREF: main+EC↑p
.text:0000000000001810                                         ; main+141↑p
.text:0000000000001810
.text:0000000000001810 var_1006C       = dword ptr -1006Ch
.text:0000000000001810 var_10068       = byte ptr -10068h
.text:0000000000001810 ptr             = byte ptr -10048h
.text:0000000000001810 var_40          = qword ptr -40h
.text:0000000000001810
.text:0000000000001810 ; __unwind {
.text:0000000000001810                 push    r15
.text:0000000000001812                 push    r14
.text:0000000000001814                 mov     ecx, 2
.text:0000000000001819                 push    r13
.text:000000000000181B                 push    r12
.text:000000000000181D                 mov     r12, rdi
.text:0000000000001820                 push    rbp
.text:0000000000001821                 push    rbx
.text:0000000000001822                 sub     rsp, 10048h
.text:0000000000001829                 mov     [rsp+10078h+var_1006C], esi
.text:000000000000182D                 mov     rsi, rdi
.text:0000000000001830                 lea     rdi, aLt+2      ; "-"
.text:0000000000001837                 mov     rax, fs:28h
.text:0000000000001840                 mov     [rsp+10078h+var_40], rax
.text:0000000000001848                 xor     eax, eax
.text:000000000000184A                 repe cmpsb
.text:000000000000184C                 setnbe  al
.text:000000000000184F                 sbb     al, 0
.text:0000000000001851                 test    al, al
.text:0000000000001853                 jnz     loc_1A6C
.text:0000000000001859                 mov     rbp, cs:stdin@@GLIBC_2_2_5
.text:0000000000001860                 mov     cs:have_read_stdin, 1
.text:0000000000001867
.text:0000000000001867 loc_1867:                               ; CODE XREF: cksum+271↓j
.text:0000000000001867                 lea     r13, [rsp+10078h+ptr]
.text:000000000000186C                 lea     r14, crctab
.text:0000000000001873                 mov     esi, 2
.text:0000000000001878                 mov     rdi, rbp
.text:000000000000187B                 xor     r15d, r15d
.text:000000000000187E                 xor     ebx, ebx
.text:0000000000001880                 call    fadvise
.text:0000000000001885                 nop     dword ptr [rax]
.text:0000000000001888
.text:0000000000001888 loc_1888:                               ; CODE XREF: cksum+CE↓j
.text:0000000000001888                 mov     rcx, rbp        ; stream
.text:000000000000188B                 mov     edx, 10000h     ; n
.text:0000000000001890                 mov     esi, 1          ; size
.text:0000000000001895                 mov     rdi, r13        ; ptr
.text:0000000000001898                 call    _fread_unlocked
.text:000000000000189D                 test    rax, rax
.text:00000000000018A0                 jz      loc_1A08
.text:00000000000018A6                 add     r15, rax
.text:00000000000018A9                 jb      loc_1A8C
.text:00000000000018AF                 add     rax, r13
.text:00000000000018B2                 mov     rdx, r13
.text:00000000000018B5                 nop     dword ptr [rax]
.text:00000000000018B8
.text:00000000000018B8 loc_18B8:                               ; CODE XREF: cksum+C7↓j
.text:00000000000018B8                 add     rdx, 1
.text:00000000000018BC                 mov     rcx, rbx
.text:00000000000018BF                 shr     rbx, 18h
.text:00000000000018C3                 xor     bl, [rdx-1]
.text:00000000000018C6                 shl     rcx, 8
.text:00000000000018CA                 movzx   ebx, bl
.text:00000000000018CD                 xor     rcx, [r14+rbx*8]
.text:00000000000018D1                 cmp     rdx, rax
.text:00000000000018D4                 mov     rbx, rcx
.text:00000000000018D7                 jnz     short loc_18B8
.text:00000000000018D9                 mov     eax, [rbp+0]
.text:00000000000018DC                 test    al, 10h
.text:00000000000018DE                 jz      short loc_1888
.text:00000000000018E0                 test    al, 20h
.text:00000000000018E2                 jnz     loc_1A13
.text:00000000000018E8
.text:00000000000018E8 loc_18E8:                               ; CODE XREF: cksum+1FD↓j
.text:00000000000018E8                 lea     rdi, aLt+2      ; "-"
.text:00000000000018EF                 mov     ecx, 2
.text:00000000000018F4                 mov     rsi, r12
.text:00000000000018F7                 repe cmpsb
.text:00000000000018F9                 setnbe  al
.text:00000000000018FC                 sbb     al, 0
.text:00000000000018FE                 test    al, al
.text:0000000000001900                 jnz     loc_19A7
.text:0000000000001906
.text:0000000000001906 loc_1906:                               ; CODE XREF: cksum+1A2↓j
.text:0000000000001906                 lea     rsi, [rsp+10078h+var_10068]
.text:000000000000190B                 mov     rdi, r15
.text:000000000000190E                 call    umaxtostr
.text:0000000000001913                 test    r15, r15
.text:0000000000001916                 jz      short loc_1941
.text:0000000000001918                 lea     rdi, crctab
.text:000000000000191F                 nop
.text:0000000000001920
.text:0000000000001920 loc_1920:                               ; CODE XREF: cksum+12F↓j
.text:0000000000001920                 mov     rsi, rbx
.text:0000000000001923                 shr     rbx, 18h
.text:0000000000001927                 xor     rbx, r15
.text:000000000000192A                 shl     rsi, 8
.text:000000000000192E                 shr     r15, 8
.text:0000000000001932                 movzx   edx, bl
.text:0000000000001935                 xor     rsi, [rdi+rdx*8]
.text:0000000000001939                 test    r15, r15
.text:000000000000193C                 mov     rbx, rsi
.text:000000000000193F                 jnz     short loc_1920
.text:0000000000001941
.text:0000000000001941 loc_1941:                               ; CODE XREF: cksum+106↑j
.text:0000000000001941                 cmp     byte ptr [rsp+10078h+var_1006C], 0
.text:0000000000001946                 not     rbx
.text:0000000000001949                 jnz     loc_19E8
.text:000000000000194F                 lea     rsi, aUS        ; "%u %s\n"
.text:0000000000001956                 mov     rcx, rax
.text:0000000000001959                 mov     edx, ebx
.text:000000000000195B                 mov     edi, 1
.text:0000000000001960                 xor     eax, eax
.text:0000000000001962                 call    ___printf_chk
.text:0000000000001967
.text:0000000000001967 loc_1967:                               ; CODE XREF: cksum+1F3↓j
.text:0000000000001967                 mov     rax, cs:stdout@@GLIBC_2_2_5
.text:000000000000196E                 test    byte ptr [rax], 20h
.text:0000000000001971                 jnz     loc_1AC5
.text:0000000000001977                 mov     ebx, 1
.text:000000000000197C
.text:000000000000197C loc_197C:                               ; CODE XREF: cksum+1D6↓j
.text:000000000000197C                                         ; cksum+249↓j ...
.text:000000000000197C                 mov     rdi, [rsp+10078h+var_40]
.text:0000000000001984                 xor     rdi, fs:28h
.text:000000000000198D                 mov     eax, ebx
.text:000000000000198F                 jnz     loc_1AF8
.text:0000000000001995                 add     rsp, 10048h
.text:000000000000199C                 pop     rbx
.text:000000000000199D                 pop     rbp
.text:000000000000199E                 pop     r12
.text:00000000000019A0                 pop     r13
.text:00000000000019A2                 pop     r14
.text:00000000000019A4                 pop     r15
.text:00000000000019A6                 retn
.text:00000000000019A7 ; ---------------------------------------------------------------------------
.text:00000000000019A7
.text:00000000000019A7 loc_19A7:                               ; CODE XREF: cksum+F0↑j
.text:00000000000019A7                 mov     rdi, rbp        ; stream
.text:00000000000019AA                 call    rpl_fclose
.text:00000000000019AF                 cmp     eax, 0FFFFFFFFh
.text:00000000000019B2                 jnz     loc_1906
.text:00000000000019B8
.text:00000000000019B8 loc_19B8:                               ; CODE XREF: cksum+277↓j
.text:00000000000019B8                 mov     rdx, r12
.text:00000000000019BB                 mov     esi, 3
.text:00000000000019C0                 xor     edi, edi
.text:00000000000019C2                 call    quotearg_n_style_colon
.text:00000000000019C7                 mov     rbx, rax
.text:00000000000019CA                 call    ___errno_location
.text:00000000000019CF                 mov     esi, [rax]      ; errnum
.text:00000000000019D1                 lea     rdx, format+3   ; format
.text:00000000000019D8                 mov     rcx, rbx
.text:00000000000019DB                 xor     edi, edi        ; status
.text:00000000000019DD                 xor     eax, eax
.text:00000000000019DF                 xor     ebx, ebx
.text:00000000000019E1                 call    _error
.text:00000000000019E6                 jmp     short loc_197C
.text:00000000000019E8 ; ---------------------------------------------------------------------------
.text:00000000000019E8
.text:00000000000019E8 loc_19E8:                               ; CODE XREF: cksum+139↑j
.text:00000000000019E8                 lea     rsi, aUSS       ; "%u %s %s\n"
.text:00000000000019EF                 mov     rcx, rax
.text:00000000000019F2                 mov     r8, r12
.text:00000000000019F5                 mov     edx, ebx
.text:00000000000019F7                 mov     edi, 1
.text:00000000000019FC                 xor     eax, eax
.text:00000000000019FE                 call    ___printf_chk
.text:0000000000001A03                 jmp     loc_1967
.text:0000000000001A08 ; ---------------------------------------------------------------------------
.text:0000000000001A08
.text:0000000000001A08 loc_1A08:                               ; CODE XREF: cksum+90↑j
.text:0000000000001A08                 mov     eax, [rbp+0]
.text:0000000000001A0B                 test    al, 20h
.text:0000000000001A0D                 jz      loc_18E8
.text:0000000000001A13
.text:0000000000001A13 loc_1A13:                               ; CODE XREF: cksum+D2↑j
.text:0000000000001A13                 xor     edi, edi
.text:0000000000001A15                 mov     rdx, r12
.text:0000000000001A18                 mov     esi, 3
.text:0000000000001A1D                 call    quotearg_n_style_colon
.text:0000000000001A22                 mov     rbx, rax
.text:0000000000001A25                 call    ___errno_location
.text:0000000000001A2A                 mov     esi, [rax]      ; errnum
.text:0000000000001A2C                 lea     rdx, format+3   ; format
.text:0000000000001A33                 mov     rcx, rbx
.text:0000000000001A36                 xor     edi, edi        ; status
.text:0000000000001A38                 xor     eax, eax
.text:0000000000001A3A                 call    _error
.text:0000000000001A3F                 lea     rdi, aLt+2      ; "-"
.text:0000000000001A46                 mov     ecx, 2
.text:0000000000001A4B                 mov     rsi, r12
.text:0000000000001A4E                 repe cmpsb
.text:0000000000001A50                 setnbe  al
.text:0000000000001A53                 sbb     al, 0
.text:0000000000001A55                 xor     ebx, ebx
.text:0000000000001A57                 test    al, al
.text:0000000000001A59                 jz      loc_197C
.text:0000000000001A5F                 mov     rdi, rbp        ; stream
.text:0000000000001A62                 call    rpl_fclose
.text:0000000000001A67                 jmp     loc_197C
.text:0000000000001A6C ; ---------------------------------------------------------------------------
.text:0000000000001A6C
.text:0000000000001A6C loc_1A6C:                               ; CODE XREF: cksum+43↑j
.text:0000000000001A6C                 lea     rsi, aWriteError+0Ah ; modes
.text:0000000000001A73                 mov     rdi, r12        ; filename
.text:0000000000001A76                 call    _fopen
.text:0000000000001A7B                 test    rax, rax
.text:0000000000001A7E                 mov     rbp, rax
.text:0000000000001A81                 jnz     loc_1867
.text:0000000000001A87                 jmp     loc_19B8
.text:0000000000001A8C ; ---------------------------------------------------------------------------
.text:0000000000001A8C
.text:0000000000001A8C loc_1A8C:                               ; CODE XREF: cksum+99↑j
.text:0000000000001A8C                 mov     rdx, r12
.text:0000000000001A8F                 mov     esi, 3
.text:0000000000001A94                 xor     edi, edi
.text:0000000000001A96                 call    quotearg_n_style_colon
.text:0000000000001A9B                 lea     rsi, msgid      ; "%s: file too long"
.text:0000000000001AA2                 mov     rbx, rax
.text:0000000000001AA5                 mov     edx, 5          ; category
.text:0000000000001AAA                 xor     edi, edi        ; domainname
.text:0000000000001AAC                 call    _dcgettext
.text:0000000000001AB1                 mov     rcx, rbx
.text:0000000000001AB4                 mov     rdx, rax        ; format
.text:0000000000001AB7                 xor     esi, esi        ; errnum
.text:0000000000001AB9                 mov     edi, 1          ; status
.text:0000000000001ABE                 xor     eax, eax
.text:0000000000001AC0                 call    _error
.text:0000000000001AC5
.text:0000000000001AC5 loc_1AC5:                               ; CODE XREF: cksum+161↑j
.text:0000000000001AC5                 lea     rsi, aWriteError ; "write error"
.text:0000000000001ACC                 mov     edx, 5          ; category
.text:0000000000001AD1                 xor     edi, edi        ; domainname
.text:0000000000001AD3                 call    _dcgettext
.text:0000000000001AD8                 mov     rbx, rax
.text:0000000000001ADB                 call    ___errno_location
.text:0000000000001AE0                 mov     esi, [rax]      ; errnum
.text:0000000000001AE2                 lea     rdx, format     ; "-: %s"
.text:0000000000001AE9                 mov     rcx, rbx
.text:0000000000001AEC                 mov     edi, 1          ; status
.text:0000000000001AF1                 xor     eax, eax
.text:0000000000001AF3                 call    _error
.text:0000000000001AF8
.text:0000000000001AF8 loc_1AF8:                               ; CODE XREF: cksum+17F↑j
.text:0000000000001AF8                 call    ___stack_chk_fail
.text:0000000000001AF8 ; } // starts at 1810
.text:0000000000001AF8 cksum           endp
.text:0000000000001AF8
.text:0000000000001AF8 ; ---------------------------------------------------------------------------
.text:0000000000001AFD                 align 20h
.text:0000000000001B00
.text:0000000000001B00 ; =============== S U B R O U T I N E =======================================
.text:0000000000001B00
.text:0000000000001B00 ; Attributes: noreturn
.text:0000000000001B00
.text:0000000000001B00 ; void __fastcall __noreturn usage(int status)
.text:0000000000001B00                 public usage
.text:0000000000001B00 usage           proc near               ; DATA XREF: main+86↑o
.text:0000000000001B00
.text:0000000000001B00 var_A8          = qword ptr -0A8h
.text:0000000000001B00 var_A0          = qword ptr -0A0h
.text:0000000000001B00 var_98          = qword ptr -98h
.text:0000000000001B00 var_90          = qword ptr -90h
.text:0000000000001B00 var_88          = qword ptr -88h
.text:0000000000001B00 var_80          = qword ptr -80h
.text:0000000000001B00 var_78          = qword ptr -78h
.text:0000000000001B00 var_70          = qword ptr -70h
.text:0000000000001B00 var_68          = qword ptr -68h
.text:0000000000001B00 var_60          = qword ptr -60h
.text:0000000000001B00 var_58          = qword ptr -58h
.text:0000000000001B00 var_50          = qword ptr -50h
.text:0000000000001B00 var_48          = qword ptr -48h
.text:0000000000001B00 var_40          = qword ptr -40h
.text:0000000000001B00 var_30          = qword ptr -30h
.text:0000000000001B00
.text:0000000000001B00 ; __unwind {
.text:0000000000001B00                 push    r13
.text:0000000000001B02                 push    r12
.text:0000000000001B04                 mov     edx, 5          ; category
.text:0000000000001B09                 push    rbp
.text:0000000000001B0A                 push    rbx
.text:0000000000001B0B                 mov     ebp, edi
.text:0000000000001B0D                 sub     rsp, 88h
.text:0000000000001B14                 mov     rbx, cs:program_name
.text:0000000000001B1B                 mov     rax, fs:28h
.text:0000000000001B24                 mov     [rsp+0A8h+var_30], rax
.text:0000000000001B29                 xor     eax, eax
.text:0000000000001B2B                 test    edi, edi
.text:0000000000001B2D                 jz      short loc_1B5D
.text:0000000000001B2F                 lea     rsi, aTrySHelpForMor ; "Try '%s --help' for more information.\n"
.text:0000000000001B36                 xor     edi, edi        ; domainname
.text:0000000000001B38                 call    _dcgettext
.text:0000000000001B3D                 mov     rdi, cs:stderr@@GLIBC_2_2_5
.text:0000000000001B44                 mov     rdx, rax
.text:0000000000001B47                 mov     rcx, rbx
.text:0000000000001B4A                 mov     esi, 1
.text:0000000000001B4F                 xor     eax, eax
.text:0000000000001B51                 call    ___fprintf_chk
.text:0000000000001B56
.text:0000000000001B56 loc_1B56:                               ; CODE XREF: usage+27E↓j
.text:0000000000001B56                 mov     edi, ebp        ; status
.text:0000000000001B58                 call    _exit
.text:0000000000001B5D ; ---------------------------------------------------------------------------
.text:0000000000001B5D
.text:0000000000001B5D loc_1B5D:                               ; CODE XREF: usage+2D↑j
.text:0000000000001B5D                 lea     rsi, aUsageSFileOrSO ; "Usage: %s [FILE]...\n  or:  %s [OPTION]"...
.text:0000000000001B64                 xor     edi, edi        ; domainname
.text:0000000000001B66                 call    _dcgettext
.text:0000000000001B6B                 mov     rcx, rbx
.text:0000000000001B6E                 mov     rdx, rbx
.text:0000000000001B71                 mov     rsi, rax
.text:0000000000001B74                 mov     edi, 1
.text:0000000000001B79                 xor     eax, eax
.text:0000000000001B7B                 call    ___printf_chk
.text:0000000000001B80                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000001B87                 lea     rsi, aPrintCrcChecks ; "Print CRC checksum and byte counts of e"...
.text:0000000000001B8E                 mov     edx, 5          ; category
.text:0000000000001B93                 xor     edi, edi        ; domainname
.text:0000000000001B95                 call    _dcgettext
.text:0000000000001B9A                 mov     rsi, rbx        ; stream
.text:0000000000001B9D                 mov     rdi, rax        ; s
.text:0000000000001BA0                 call    _fputs_unlocked
.text:0000000000001BA5                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000001BAC                 lea     rsi, aHelpDisplayThi ; "      --help     display this help and "...
.text:0000000000001BB3                 mov     edx, 5          ; category
.text:0000000000001BB8                 xor     edi, edi        ; domainname
.text:0000000000001BBA                 call    _dcgettext
.text:0000000000001BBF                 mov     rsi, rbx        ; stream
.text:0000000000001BC2                 mov     rdi, rax        ; s
.text:0000000000001BC5                 call    _fputs_unlocked
.text:0000000000001BCA                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000001BD1                 lea     rsi, aVersionOutputV ; "      --version  output version informa"...
.text:0000000000001BD8                 mov     edx, 5          ; category
.text:0000000000001BDD                 xor     edi, edi        ; domainname
.text:0000000000001BDF                 call    _dcgettext
.text:0000000000001BE4                 mov     rsi, rbx        ; stream
.text:0000000000001BE7                 mov     rdi, rax        ; s
.text:0000000000001BEA                 lea     rbx, aCksum     ; "cksum"
.text:0000000000001BF1                 call    _fputs_unlocked
.text:0000000000001BF6                 lea     rax, asc_4BBF   ; "["
.text:0000000000001BFD                 lea     rcx, aSha256sum ; "sha256sum"
.text:0000000000001C04                 mov     [rsp+0A8h+var_48], 0
.text:0000000000001C0D                 mov     [rsp+0A8h+var_40], 0
.text:0000000000001C16                 mov     rdx, rsp
.text:0000000000001C19                 mov     [rsp+0A8h+var_A8], rax
.text:0000000000001C1D                 lea     rax, aTestInvocation ; "test invocation"
.text:0000000000001C24                 mov     [rsp+0A8h+var_78], rcx
.text:0000000000001C29                 lea     rcx, aSha384sum ; "sha384sum"
.text:0000000000001C30                 mov     [rsp+0A8h+var_A0], rax
.text:0000000000001C35                 lea     rax, domainname ; "coreutils"
.text:0000000000001C3C                 mov     [rsp+0A8h+var_68], rcx
.text:0000000000001C41                 lea     rcx, aSha512sum ; "sha512sum"
.text:0000000000001C48                 mov     [rsp+0A8h+var_98], rax
.text:0000000000001C4D                 lea     rax, aMultiCallInvoc ; "Multi-call invocation"
.text:0000000000001C54                 mov     [rsp+0A8h+var_58], rcx
.text:0000000000001C59                 mov     [rsp+0A8h+var_90], rax
.text:0000000000001C5E                 lea     rax, aSha224sum ; "sha224sum"
.text:0000000000001C65                 mov     [rsp+0A8h+var_88], rax
.text:0000000000001C6A                 lea     rax, aSha2Utilities ; "sha2 utilities"
.text:0000000000001C71                 mov     [rsp+0A8h+var_80], rax
.text:0000000000001C76                 mov     [rsp+0A8h+var_70], rax
.text:0000000000001C7B                 mov     [rsp+0A8h+var_60], rax
.text:0000000000001C80                 mov     [rsp+0A8h+var_50], rax
.text:0000000000001C85                 nop     dword ptr [rax]
.text:0000000000001C88
.text:0000000000001C88 loc_1C88:                               ; CODE XREF: usage+1A5↓j
.text:0000000000001C88                 add     rdx, 10h
.text:0000000000001C8C                 mov     rdi, [rdx]
.text:0000000000001C8F                 test    rdi, rdi
.text:0000000000001C92                 jz      short loc_1CA7
.text:0000000000001C94                 mov     ecx, 6
.text:0000000000001C99                 mov     rsi, rbx
.text:0000000000001C9C                 repe cmpsb
.text:0000000000001C9E                 setnbe  al
.text:0000000000001CA1                 sbb     al, 0
.text:0000000000001CA3                 test    al, al
.text:0000000000001CA5                 jnz     short loc_1C88
.text:0000000000001CA7
.text:0000000000001CA7 loc_1CA7:                               ; CODE XREF: usage+192↑j
.text:0000000000001CA7                 mov     r12, [rdx+8]
.text:0000000000001CAB                 xor     edi, edi        ; domainname
.text:0000000000001CAD                 mov     edx, 5          ; category
.text:0000000000001CB2                 lea     rsi, aSOnlineHelpS ; "\n%s online help: <%s>\n"
.text:0000000000001CB9                 test    r12, r12
.text:0000000000001CBC                 jz      loc_1D83
.text:0000000000001CC2                 call    _dcgettext
.text:0000000000001CC7                 lea     rcx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:0000000000001CCE                 lea     rdx, unk_4C35
.text:0000000000001CD5                 mov     rsi, rax
.text:0000000000001CD8                 mov     edi, 1
.text:0000000000001CDD                 xor     eax, eax
.text:0000000000001CDF                 call    ___printf_chk
.text:0000000000001CE4                 xor     esi, esi        ; locale
.text:0000000000001CE6                 mov     edi, 5          ; category
.text:0000000000001CEB                 call    _setlocale
.text:0000000000001CF0                 test    rax, rax
.text:0000000000001CF3                 jz      short loc_1D11
.text:0000000000001CF5                 lea     rsi, s2         ; "en_"
.text:0000000000001CFC                 mov     edx, 3          ; n
.text:0000000000001D01                 mov     rdi, rax        ; s1
.text:0000000000001D04                 call    _strncmp
.text:0000000000001D09                 test    eax, eax
.text:0000000000001D0B                 jnz     loc_1E18
.text:0000000000001D11
.text:0000000000001D11 loc_1D11:                               ; CODE XREF: usage+1F3↑j
.text:0000000000001D11                                         ; usage+33D↓j
.text:0000000000001D11                 lea     rsi, aFullDocumentat ; "Full documentation <%s%s>\n"
.text:0000000000001D18                 xor     edi, edi        ; domainname
.text:0000000000001D1A                 mov     edx, 5          ; category
.text:0000000000001D1F                 call    _dcgettext
.text:0000000000001D24                 lea     rcx, aCksum     ; "cksum"
.text:0000000000001D2B                 lea     rdx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:0000000000001D32                 mov     rsi, rax
.text:0000000000001D35                 mov     edi, 1
.text:0000000000001D3A                 xor     eax, eax
.text:0000000000001D3C                 call    ___printf_chk
.text:0000000000001D41                 cmp     r12, rbx
.text:0000000000001D44                 lea     rcx, aMultiCallInvoc+0Ah ; " invocation"
.text:0000000000001D4B                 lea     rbx, aWrittenBySSAnd+1Bh ; ""
.text:0000000000001D52                 cmovz   rbx, rcx
.text:0000000000001D56
.text:0000000000001D56 loc_1D56:                               ; CODE XREF: usage+30C↓j
.text:0000000000001D56                 lea     rsi, aOrAvailableLoc ; "or available locally via: info '(coreut"...
.text:0000000000001D5D                 xor     edi, edi        ; domainname
.text:0000000000001D5F                 mov     edx, 5          ; category
.text:0000000000001D64                 call    _dcgettext
.text:0000000000001D69                 mov     rcx, rbx
.text:0000000000001D6C                 mov     rsi, rax
.text:0000000000001D6F                 mov     rdx, r12
.text:0000000000001D72                 mov     edi, 1
.text:0000000000001D77                 xor     eax, eax
.text:0000000000001D79                 call    ___printf_chk
.text:0000000000001D7E                 jmp     loc_1B56
.text:0000000000001D83 ; ---------------------------------------------------------------------------
.text:0000000000001D83
.text:0000000000001D83 loc_1D83:                               ; CODE XREF: usage+1BC↑j
.text:0000000000001D83                 call    _dcgettext
.text:0000000000001D88                 lea     rcx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:0000000000001D8F                 lea     rdx, unk_4C35
.text:0000000000001D96                 mov     rsi, rax
.text:0000000000001D99                 mov     edi, 1
.text:0000000000001D9E                 xor     eax, eax
.text:0000000000001DA0                 call    ___printf_chk
.text:0000000000001DA5                 xor     esi, esi        ; locale
.text:0000000000001DA7                 mov     edi, 5          ; category
.text:0000000000001DAC                 call    _setlocale
.text:0000000000001DB1                 test    rax, rax
.text:0000000000001DB4                 jz      short loc_1DCE
.text:0000000000001DB6                 lea     rsi, s2         ; "en_"
.text:0000000000001DBD                 mov     edx, 3          ; n
.text:0000000000001DC2                 mov     rdi, rax        ; s1
.text:0000000000001DC5                 call    _strncmp
.text:0000000000001DCA                 test    eax, eax
.text:0000000000001DCC                 jnz     short loc_1E11
.text:0000000000001DCE
.text:0000000000001DCE loc_1DCE:                               ; CODE XREF: usage+2B4↑j
.text:0000000000001DCE                 lea     rsi, aFullDocumentat ; "Full documentation <%s%s>\n"
.text:0000000000001DD5                 mov     edx, 5          ; category
.text:0000000000001DDA                 xor     edi, edi        ; domainname
.text:0000000000001DDC                 lea     r12, aCksum     ; "cksum"
.text:0000000000001DE3                 lea     rbx, aMultiCallInvoc+0Ah ; " invocation"
.text:0000000000001DEA                 call    _dcgettext
.text:0000000000001DEF                 lea     rcx, aCksum     ; "cksum"
.text:0000000000001DF6                 lea     rdx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:0000000000001DFD                 mov     rsi, rax
.text:0000000000001E00                 mov     edi, 1
.text:0000000000001E05                 xor     eax, eax
.text:0000000000001E07                 call    ___printf_chk
.text:0000000000001E0C                 jmp     loc_1D56
.text:0000000000001E11 ; ---------------------------------------------------------------------------
.text:0000000000001E11
.text:0000000000001E11 loc_1E11:                               ; CODE XREF: usage+2CC↑j
.text:0000000000001E11                 lea     r12, aCksum     ; "cksum"
.text:0000000000001E18
.text:0000000000001E18 loc_1E18:                               ; CODE XREF: usage+20B↑j
.text:0000000000001E18                 mov     r13, cs:stdout@@GLIBC_2_2_5
.text:0000000000001E1F                 lea     rsi, aReportAnyTrans ; "Report any translation bugs to <https:/"...
.text:0000000000001E26                 xor     edi, edi        ; domainname
.text:0000000000001E28                 mov     edx, 5          ; category
.text:0000000000001E2D                 call    _dcgettext
.text:0000000000001E32                 mov     rsi, r13        ; stream
.text:0000000000001E35                 mov     rdi, rax        ; s
.text:0000000000001E38                 call    _fputs_unlocked
.text:0000000000001E3D                 jmp     loc_1D11
.text:0000000000001E3D ; } // starts at 1B00
.text:0000000000001E3D usage           endp
.text:0000000000001E3D
.text:0000000000001E3D ; ---------------------------------------------------------------------------
.text:0000000000001E42                 align 10h
.text:0000000000001E50
.text:0000000000001E50 ; =============== S U B R O U T I N E =======================================
.text:0000000000001E50
.text:0000000000001E50
.text:0000000000001E50                 public close_stdout_set_file_name
.text:0000000000001E50 close_stdout_set_file_name proc near
.text:0000000000001E50 ; __unwind {
.text:0000000000001E50                 mov     cs:file_name, rdi
.text:0000000000001E57                 retn
.text:0000000000001E57 ; } // starts at 1E50
.text:0000000000001E57 close_stdout_set_file_name endp
.text:0000000000001E57
.text:0000000000001E57 ; ---------------------------------------------------------------------------
.text:0000000000001E58                 align 20h
.text:0000000000001E60
.text:0000000000001E60 ; =============== S U B R O U T I N E =======================================
.text:0000000000001E60
.text:0000000000001E60
.text:0000000000001E60                 public close_stdout_set_ignore_EPIPE
.text:0000000000001E60 close_stdout_set_ignore_EPIPE proc near
.text:0000000000001E60 ; __unwind {
.text:0000000000001E60                 mov     cs:ignore_EPIPE, dil
.text:0000000000001E67                 retn
.text:0000000000001E67 ; } // starts at 1E60
.text:0000000000001E67 close_stdout_set_ignore_EPIPE endp
.text:0000000000001E67
.text:0000000000001E67 ; ---------------------------------------------------------------------------
.text:0000000000001E68                 align 10h
.text:0000000000001E70
.text:0000000000001E70 ; =============== S U B R O U T I N E =======================================
.text:0000000000001E70
.text:0000000000001E70 ; Attributes: info_from_lumina
.text:0000000000001E70
.text:0000000000001E70 ; void __cdecl close_stdout()
.text:0000000000001E70                 public close_stdout
.text:0000000000001E70 close_stdout    proc near               ; DATA XREF: main+42↑o
.text:0000000000001E70 ; __unwind {
.text:0000000000001E70                 push    rbp
.text:0000000000001E71                 push    rbx
.text:0000000000001E72                 sub     rsp, 8
.text:0000000000001E76                 mov     rdi, cs:stdout@@GLIBC_2_2_5 ; stream
.text:0000000000001E7D                 call    close_stream
.text:0000000000001E82                 test    eax, eax
.text:0000000000001E84                 jz      short loc_1E9C
.text:0000000000001E86                 call    ___errno_location
.text:0000000000001E8B                 cmp     cs:ignore_EPIPE, 0
.text:0000000000001E92                 mov     rbx, rax
.text:0000000000001E95                 jz      short loc_1EB3
.text:0000000000001E97                 cmp     dword ptr [rax], 20h ; ' '
.text:0000000000001E9A                 jnz     short loc_1EB3
.text:0000000000001E9C
.text:0000000000001E9C loc_1E9C:                               ; CODE XREF: close_stdout+14↑j
.text:0000000000001E9C                 mov     rdi, cs:stderr@@GLIBC_2_2_5 ; stream
.text:0000000000001EA3                 call    close_stream
.text:0000000000001EA8                 test    eax, eax
.text:0000000000001EAA                 jnz     short loc_1EF2
.text:0000000000001EAC                 add     rsp, 8
.text:0000000000001EB0                 pop     rbx
.text:0000000000001EB1                 pop     rbp
.text:0000000000001EB2                 retn
.text:0000000000001EB3 ; ---------------------------------------------------------------------------
.text:0000000000001EB3
.text:0000000000001EB3 loc_1EB3:                               ; CODE XREF: close_stdout+25↑j
.text:0000000000001EB3                                         ; close_stdout+2A↑j
.text:0000000000001EB3                 lea     rsi, aWriteError ; "write error"
.text:0000000000001EBA                 xor     edi, edi        ; domainname
.text:0000000000001EBC                 mov     edx, 5          ; category
.text:0000000000001EC1                 call    _dcgettext
.text:0000000000001EC6                 mov     rdi, cs:file_name
.text:0000000000001ECD                 mov     rbp, rax
.text:0000000000001ED0                 test    rdi, rdi
.text:0000000000001ED3                 jz      short loc_1EFD
.text:0000000000001ED5                 call    quotearg_colon
.text:0000000000001EDA                 mov     esi, [rbx]      ; errnum
.text:0000000000001EDC                 lea     rdx, aSS        ; "%s: %s"
.text:0000000000001EE3                 mov     rcx, rax
.text:0000000000001EE6                 mov     r8, rbp
.text:0000000000001EE9                 xor     edi, edi        ; status
.text:0000000000001EEB                 xor     eax, eax
.text:0000000000001EED                 call    _error
.text:0000000000001EF2
.text:0000000000001EF2 loc_1EF2:                               ; CODE XREF: close_stdout+3A↑j
.text:0000000000001EF2                                         ; close_stdout+A2↓j
.text:0000000000001EF2                 mov     edi, cs:exit_failure ; status
.text:0000000000001EF8                 call    __exit
.text:0000000000001EFD ; ---------------------------------------------------------------------------
.text:0000000000001EFD
.text:0000000000001EFD loc_1EFD:                               ; CODE XREF: close_stdout+63↑j
.text:0000000000001EFD                 mov     esi, [rbx]      ; errnum
.text:0000000000001EFF                 lea     rdx, format+3   ; format
.text:0000000000001F06                 mov     rcx, rax
.text:0000000000001F09                 xor     edi, edi        ; status
.text:0000000000001F0B                 xor     eax, eax
.text:0000000000001F0D                 call    _error
.text:0000000000001F12                 jmp     short loc_1EF2
.text:0000000000001F12 ; } // starts at 1E70
.text:0000000000001F12 close_stdout    endp
.text:0000000000001F12
.text:0000000000001F12 ; ---------------------------------------------------------------------------
.text:0000000000001F14                 align 20h
.text:0000000000001F20
.text:0000000000001F20 ; =============== S U B R O U T I N E =======================================
.text:0000000000001F20
.text:0000000000001F20
.text:0000000000001F20 ; int fdadvise(int fd, off_t offset, off_t len, int advise)
.text:0000000000001F20                 public fdadvise
.text:0000000000001F20 fdadvise        proc near
.text:0000000000001F20 ; __unwind {
.text:0000000000001F20                 jmp     _posix_fadvise
.text:0000000000001F20 ; } // starts at 1F20
.text:0000000000001F20 fdadvise        endp
.text:0000000000001F20
.text:0000000000001F20 ; ---------------------------------------------------------------------------
.text:0000000000001F25                 align 10h
.text:0000000000001F30
.text:0000000000001F30 ; =============== S U B R O U T I N E =======================================
.text:0000000000001F30
.text:0000000000001F30
.text:0000000000001F30                 public fadvise
.text:0000000000001F30 fadvise         proc near               ; CODE XREF: cksum+70↑p
.text:0000000000001F30 ; __unwind {
.text:0000000000001F30                 test    rdi, rdi
.text:0000000000001F33                 jz      short locret_1F50
.text:0000000000001F35                 push    rbx
.text:0000000000001F36                 mov     ebx, esi
.text:0000000000001F38                 call    _fileno
.text:0000000000001F3D                 mov     ecx, ebx        ; advise
.text:0000000000001F3F                 xor     edx, edx        ; len
.text:0000000000001F41                 xor     esi, esi        ; offset
.text:0000000000001F43                 pop     rbx
.text:0000000000001F44                 mov     edi, eax        ; fd
.text:0000000000001F46                 jmp     _posix_fadvise
.text:0000000000001F46 ; ---------------------------------------------------------------------------
.text:0000000000001F4B                 align 10h
.text:0000000000001F50
.text:0000000000001F50 locret_1F50:                            ; CODE XREF: fadvise+3↑j
.text:0000000000001F50                 rep retn
.text:0000000000001F50 ; } // starts at 1F30
.text:0000000000001F50 fadvise         endp
.text:0000000000001F50
.text:0000000000001F50 ; ---------------------------------------------------------------------------
.text:0000000000001F52                 align 20h
.text:0000000000001F60
.text:0000000000001F60 ; =============== S U B R O U T I N E =======================================
.text:0000000000001F60
.text:0000000000001F60 ; Attributes: info_from_lumina
.text:0000000000001F60
.text:0000000000001F60 ; char *__fastcall umaxtostr(uintmax_t i, char *buf)
.text:0000000000001F60                 public umaxtostr
.text:0000000000001F60 umaxtostr       proc near               ; CODE XREF: cksum+FE↑p
.text:0000000000001F60 ; __unwind {
.text:0000000000001F60                 lea     rcx, [rsi+14h]
.text:0000000000001F64                 mov     byte ptr [rsi+14h], 0
.text:0000000000001F68                 mov     rsi, 0CCCCCCCCCCCCCCCDh
.text:0000000000001F72                 nop     word ptr [rax+rax+00h]
.text:0000000000001F78
.text:0000000000001F78 loc_1F78:                               ; CODE XREF: umaxtostr+3C↓j
.text:0000000000001F78                 mov     rax, rdi
.text:0000000000001F7B                 sub     rcx, 1
.text:0000000000001F7F                 mul     rsi
.text:0000000000001F82                 shr     rdx, 3
.text:0000000000001F86                 lea     rax, [rdx+rdx*4]
.text:0000000000001F8A                 add     rax, rax
.text:0000000000001F8D                 sub     rdi, rax
.text:0000000000001F90                 add     edi, 30h ; '0'
.text:0000000000001F93                 test    rdx, rdx
.text:0000000000001F96                 mov     [rcx], dil
.text:0000000000001F99                 mov     rdi, rdx
.text:0000000000001F9C                 jnz     short loc_1F78
.text:0000000000001F9E                 mov     rax, rcx
.text:0000000000001FA1                 retn
.text:0000000000001FA1 ; } // starts at 1F60
.text:0000000000001FA1 umaxtostr       endp
.text:0000000000001FA1
.text:0000000000001FA1 ; ---------------------------------------------------------------------------
.text:0000000000001FA2                 align 10h
.text:0000000000001FB0
.text:0000000000001FB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000001FB0
.text:0000000000001FB0
.text:0000000000001FB0                 public parse_long_options
.text:0000000000001FB0 parse_long_options proc near
.text:0000000000001FB0
.text:0000000000001FB0 var_100         = qword ptr -100h
.text:0000000000001FB0 var_F8          = dword ptr -0F8h
.text:0000000000001FB0 var_F4          = dword ptr -0F4h
.text:0000000000001FB0 var_F0          = qword ptr -0F0h
.text:0000000000001FB0 var_E8          = qword ptr -0E8h
.text:0000000000001FB0 var_E0          = qword ptr -0E0h
.text:0000000000001FB0 var_D8          = byte ptr -0D8h
.text:0000000000001FB0 var_A8          = xmmword ptr -0A8h
.text:0000000000001FB0 var_98          = xmmword ptr -98h
.text:0000000000001FB0 var_88          = xmmword ptr -88h
.text:0000000000001FB0 var_78          = xmmword ptr -78h
.text:0000000000001FB0 var_68          = xmmword ptr -68h
.text:0000000000001FB0 var_58          = xmmword ptr -58h
.text:0000000000001FB0 var_48          = xmmword ptr -48h
.text:0000000000001FB0 var_38          = xmmword ptr -38h
.text:0000000000001FB0 arg_0           = byte ptr  8
.text:0000000000001FB0
.text:0000000000001FB0 ; __unwind {
.text:0000000000001FB0                 push    r13
.text:0000000000001FB2                 push    r12
.text:0000000000001FB4                 mov     r13, r8
.text:0000000000001FB7                 push    rbp
.text:0000000000001FB8                 push    rbx
.text:0000000000001FB9                 mov     rbp, rdx
.text:0000000000001FBC                 mov     r12, rcx
.text:0000000000001FBF                 sub     rsp, 0E8h
.text:0000000000001FC6                 test    al, al
.text:0000000000001FC8                 jz      short loc_2004
.text:0000000000001FCA                 movaps  [rsp+108h+var_A8], xmm0
.text:0000000000001FCF                 movaps  [rsp+108h+var_98], xmm1
.text:0000000000001FD4                 movaps  [rsp+108h+var_88], xmm2
.text:0000000000001FDC                 movaps  [rsp+108h+var_78], xmm3
.text:0000000000001FE4                 movaps  [rsp+108h+var_68], xmm4
.text:0000000000001FEC                 movaps  [rsp+108h+var_58], xmm5
.text:0000000000001FF4                 movaps  [rsp+108h+var_48], xmm6
.text:0000000000001FFC                 movaps  [rsp+108h+var_38], xmm7
.text:0000000000002004
.text:0000000000002004 loc_2004:                               ; CODE XREF: parse_long_options+18↑j
.text:0000000000002004                 mov     rax, fs:28h
.text:000000000000200D                 mov     [rsp+108h+var_E0], rax
.text:0000000000002012                 xor     eax, eax
.text:0000000000002014                 cmp     edi, 2
.text:0000000000002017                 mov     ebx, cs:opterr@@GLIBC_2_2_5
.text:000000000000201D                 mov     cs:opterr@@GLIBC_2_2_5, 0
.text:0000000000002027                 jz      short loc_2060
.text:0000000000002029
.text:0000000000002029 loc_2029:                               ; CODE XREF: parse_long_options+CE↓j
.text:0000000000002029                                         ; parse_long_options+DD↓j ...
.text:0000000000002029                 mov     rax, [rsp+108h+var_E0]
.text:000000000000202E                 xor     rax, fs:28h
.text:0000000000002037                 mov     cs:opterr@@GLIBC_2_2_5, ebx
.text:000000000000203D                 mov     cs:optind@@GLIBC_2_2_5, 0
.text:0000000000002047                 jnz     loc_20EA
.text:000000000000204D                 add     rsp, 0E8h
.text:0000000000002054                 pop     rbx
.text:0000000000002055                 pop     rbp
.text:0000000000002056                 pop     r12
.text:0000000000002058                 pop     r13
.text:000000000000205A                 retn
.text:000000000000205A ; ---------------------------------------------------------------------------
.text:000000000000205B                 align 20h
.text:0000000000002060
.text:0000000000002060 loc_2060:                               ; CODE XREF: parse_long_options+77↑j
.text:0000000000002060                 lea     rcx, long_options ; longopts
.text:0000000000002067                 lea     rdx, shortopts  ; "+"
.text:000000000000206E                 xor     r8d, r8d        ; longind
.text:0000000000002071                 mov     [rsp+108h+var_100], r9
.text:0000000000002076                 call    _getopt_long
.text:000000000000207B                 cmp     eax, 0FFFFFFFFh
.text:000000000000207E                 jz      short loc_2029
.text:0000000000002080                 cmp     eax, 68h ; 'h'
.text:0000000000002083                 mov     r9, [rsp+108h+var_100]
.text:0000000000002088                 jz      short loc_20E0
.text:000000000000208A                 cmp     eax, 76h ; 'v'
.text:000000000000208D                 jnz     short loc_2029
.text:000000000000208F                 lea     rax, [rsp+108h+arg_0]
.text:0000000000002097                 mov     rdi, cs:stdout@@GLIBC_2_2_5
.text:000000000000209E                 lea     r8, [rsp+108h+var_F8]
.text:00000000000020A3                 mov     rcx, r13
.text:00000000000020A6                 mov     rdx, r12
.text:00000000000020A9                 mov     rsi, rbp
.text:00000000000020AC                 mov     [rsp+108h+var_F0], rax
.text:00000000000020B1                 lea     rax, [rsp+108h+var_D8]
.text:00000000000020B6                 mov     [rsp+108h+var_F8], 30h ; '0'
.text:00000000000020BE                 mov     [rsp+108h+var_F4], 30h ; '0'
.text:00000000000020C6                 mov     [rsp+108h+var_E8], rax
.text:00000000000020CB                 call    version_etc_va
.text:00000000000020D0                 xor     edi, edi        ; status
.text:00000000000020D2                 call    _exit
.text:00000000000020D2 ; ---------------------------------------------------------------------------
.text:00000000000020D7                 align 20h
.text:00000000000020E0
.text:00000000000020E0 loc_20E0:                               ; CODE XREF: parse_long_options+D8↑j
.text:00000000000020E0                 xor     edi, edi
.text:00000000000020E2                 call    r9
.text:00000000000020E5                 jmp     loc_2029
.text:00000000000020EA ; ---------------------------------------------------------------------------
.text:00000000000020EA
.text:00000000000020EA loc_20EA:                               ; CODE XREF: parse_long_options+97↑j
.text:00000000000020EA                 call    ___stack_chk_fail
.text:00000000000020EA ; } // starts at 1FB0
.text:00000000000020EA parse_long_options endp
.text:00000000000020EA
.text:00000000000020EA ; ---------------------------------------------------------------------------
.text:00000000000020EF                 align 10h
.text:00000000000020F0
.text:00000000000020F0 ; =============== S U B R O U T I N E =======================================
.text:00000000000020F0
.text:00000000000020F0
.text:00000000000020F0                 public parse_gnu_standard_options_only
.text:00000000000020F0 parse_gnu_standard_options_only proc near
.text:00000000000020F0                                         ; CODE XREF: main+9C↑p
.text:00000000000020F0
.text:00000000000020F0 var_F8          = dword ptr -0F8h
.text:00000000000020F0 var_F4          = dword ptr -0F4h
.text:00000000000020F0 var_F0          = qword ptr -0F0h
.text:00000000000020F0 var_E8          = qword ptr -0E8h
.text:00000000000020F0 var_E0          = qword ptr -0E0h
.text:00000000000020F0 var_D8          = byte ptr -0D8h
.text:00000000000020F0 var_A8          = xmmword ptr -0A8h
.text:00000000000020F0 var_98          = xmmword ptr -98h
.text:00000000000020F0 var_88          = xmmword ptr -88h
.text:00000000000020F0 var_78          = xmmword ptr -78h
.text:00000000000020F0 var_68          = xmmword ptr -68h
.text:00000000000020F0 var_58          = xmmword ptr -58h
.text:00000000000020F0 var_48          = xmmword ptr -48h
.text:00000000000020F0 var_38          = xmmword ptr -38h
.text:00000000000020F0 arg_0           = qword ptr  8
.text:00000000000020F0 arg_8           = byte ptr  10h
.text:00000000000020F0
.text:00000000000020F0 ; __unwind {
.text:00000000000020F0                 push    r14
.text:00000000000020F2                 push    r13
.text:00000000000020F4                 mov     r14, r8
.text:00000000000020F7                 push    r12
.text:00000000000020F9                 push    rbp
.text:00000000000020FA                 mov     r12, rdx
.text:00000000000020FD                 push    rbx
.text:00000000000020FE                 mov     r13, rcx
.text:0000000000002101                 sub     rsp, 0D0h
.text:0000000000002108                 test    al, al
.text:000000000000210A                 mov     rbp, [rsp+0F8h+arg_0]
.text:0000000000002112                 jz      short loc_214B
.text:0000000000002114                 movaps  [rsp+0F8h+var_A8], xmm0
.text:0000000000002119                 movaps  [rsp+0F8h+var_98], xmm1
.text:000000000000211E                 movaps  [rsp+0F8h+var_88], xmm2
.text:0000000000002123                 movaps  [rsp+0F8h+var_78], xmm3
.text:000000000000212B                 movaps  [rsp+0F8h+var_68], xmm4
.text:0000000000002133                 movaps  [rsp+0F8h+var_58], xmm5
.text:000000000000213B                 movaps  [rsp+0F8h+var_48], xmm6
.text:0000000000002143                 movaps  [rsp+0F8h+var_38], xmm7
.text:000000000000214B
.text:000000000000214B loc_214B:                               ; CODE XREF: parse_gnu_standard_options_only+22↑j
.text:000000000000214B                 mov     rax, fs:28h
.text:0000000000002154                 mov     [rsp+0F8h+var_E0], rax
.text:0000000000002159                 xor     eax, eax
.text:000000000000215B                 lea     rdx, aWrittenBySSAnd+1Bh ; ""
.text:0000000000002162                 lea     rax, shortopts  ; "+"
.text:0000000000002169                 test    r9b, r9b
.text:000000000000216C                 lea     rcx, long_options ; longopts
.text:0000000000002173                 cmovz   rdx, rax        ; shortopts
.text:0000000000002177                 xor     r8d, r8d        ; longind
.text:000000000000217A                 mov     ebx, cs:opterr@@GLIBC_2_2_5
.text:0000000000002180                 mov     cs:opterr@@GLIBC_2_2_5, 1
.text:000000000000218A                 call    _getopt_long
.text:000000000000218F                 cmp     eax, 0FFFFFFFFh
.text:0000000000002192                 jz      short loc_21F8
.text:0000000000002194                 cmp     eax, 68h ; 'h'
.text:0000000000002197                 jz      loc_2220
.text:000000000000219D                 cmp     eax, 76h ; 'v'
.text:00000000000021A0                 jnz     short loc_21F0
.text:00000000000021A2                 lea     rax, [rsp+0F8h+arg_8]
.text:00000000000021AA                 mov     rdi, cs:stdout@@GLIBC_2_2_5
.text:00000000000021B1                 mov     r8, rsp
.text:00000000000021B4                 mov     rcx, r14
.text:00000000000021B7                 mov     rdx, r13
.text:00000000000021BA                 mov     rsi, r12
.text:00000000000021BD                 mov     [rsp+0F8h+var_F0], rax
.text:00000000000021C2                 lea     rax, [rsp+0F8h+var_D8]
.text:00000000000021C7                 mov     [rsp+0F8h+var_F8], 30h ; '0'
.text:00000000000021CE                 mov     [rsp+0F8h+var_F4], 30h ; '0'
.text:00000000000021D6                 mov     [rsp+0F8h+var_E8], rax
.text:00000000000021DB                 call    version_etc_va
.text:00000000000021E0                 xor     edi, edi        ; status
.text:00000000000021E2                 call    _exit
.text:00000000000021E2 ; ---------------------------------------------------------------------------
.text:00000000000021E7                 align 10h
.text:00000000000021F0
.text:00000000000021F0 loc_21F0:                               ; CODE XREF: parse_gnu_standard_options_only+B0↑j
.text:00000000000021F0                 mov     edi, cs:exit_failure
.text:00000000000021F6                 call    rbp
.text:00000000000021F8
.text:00000000000021F8 loc_21F8:                               ; CODE XREF: parse_gnu_standard_options_only+A2↑j
.text:00000000000021F8                                         ; parse_gnu_standard_options_only+134↓j
.text:00000000000021F8                 mov     rax, [rsp+0F8h+var_E0]
.text:00000000000021FD                 xor     rax, fs:28h
.text:0000000000002206                 mov     cs:opterr@@GLIBC_2_2_5, ebx
.text:000000000000220C                 jnz     short loc_2226
.text:000000000000220E                 add     rsp, 0D0h
.text:0000000000002215                 pop     rbx
.text:0000000000002216                 pop     rbp
.text:0000000000002217                 pop     r12
.text:0000000000002219                 pop     r13
.text:000000000000221B                 pop     r14
.text:000000000000221D                 retn
.text:000000000000221D ; ---------------------------------------------------------------------------
.text:000000000000221E                 align 20h
.text:0000000000002220
.text:0000000000002220 loc_2220:                               ; CODE XREF: parse_gnu_standard_options_only+A7↑j
.text:0000000000002220                 xor     edi, edi
.text:0000000000002222                 call    rbp
.text:0000000000002224                 jmp     short loc_21F8
.text:0000000000002226 ; ---------------------------------------------------------------------------
.text:0000000000002226
.text:0000000000002226 loc_2226:                               ; CODE XREF: parse_gnu_standard_options_only+11C↑j
.text:0000000000002226                 call    ___stack_chk_fail
.text:0000000000002226 ; } // starts at 20F0
.text:0000000000002226 parse_gnu_standard_options_only endp
.text:0000000000002226
.text:0000000000002226 ; ---------------------------------------------------------------------------
.text:000000000000222B                 align 10h
.text:0000000000002230
.text:0000000000002230 ; =============== S U B R O U T I N E =======================================
.text:0000000000002230
.text:0000000000002230
.text:0000000000002230                 public set_program_name
.text:0000000000002230 set_program_name proc near              ; CODE XREF: main+D↑p
.text:0000000000002230 ; __unwind {
.text:0000000000002230                 test    rdi, rdi
.text:0000000000002233                 push    rbx
.text:0000000000002234                 jz      short loc_22AD
.text:0000000000002236                 mov     esi, 2Fh ; '/'  ; c
.text:000000000000223B                 mov     rbx, rdi
.text:000000000000223E                 call    _strrchr
.text:0000000000002243                 test    rax, rax
.text:0000000000002246                 jz      short loc_229D
.text:0000000000002248                 lea     r8, [rax+1]
.text:000000000000224C                 mov     rdx, r8
.text:000000000000224F                 sub     rdx, rbx
.text:0000000000002252                 cmp     rdx, 6
.text:0000000000002256                 jle     short loc_229D
.text:0000000000002258                 lea     rsi, [rax-6]
.text:000000000000225C                 lea     rdi, aLibs      ; "/.libs/"
.text:0000000000002263                 mov     ecx, 7
.text:0000000000002268                 repe cmpsb
.text:000000000000226A                 setnbe  dl
.text:000000000000226D                 sbb     dl, 0
.text:0000000000002270                 test    dl, dl
.text:0000000000002272                 jnz     short loc_229D
.text:0000000000002274                 lea     rdi, aLt        ; "lt-"
.text:000000000000227B                 mov     ecx, 3
.text:0000000000002280                 mov     rsi, r8
.text:0000000000002283                 mov     rbx, r8
.text:0000000000002286                 repe cmpsb
.text:0000000000002288                 setnbe  dl
.text:000000000000228B                 sbb     dl, 0
.text:000000000000228E                 test    dl, dl
.text:0000000000002290                 jnz     short loc_229D
.text:0000000000002292                 lea     rbx, [rax+4]
.text:0000000000002296                 mov     cs:__bss_start, rbx
.text:000000000000229D
.text:000000000000229D loc_229D:                               ; CODE XREF: set_program_name+16↑j
.text:000000000000229D                                         ; set_program_name+26↑j ...
.text:000000000000229D                 mov     cs:program_name, rbx
.text:00000000000022A4                 mov     cs:program_invocation_name@@GLIBC_2_2_5, rbx
.text:00000000000022AB                 pop     rbx
.text:00000000000022AC                 retn
.text:00000000000022AD ; ---------------------------------------------------------------------------
.text:00000000000022AD
.text:00000000000022AD loc_22AD:                               ; CODE XREF: set_program_name+4↑j
.text:00000000000022AD                 mov     rcx, cs:stderr@@GLIBC_2_2_5 ; s
.text:00000000000022B4                 lea     rdi, aANullArgv0WasP ; "A NULL argv[0] was passed through an ex"...
.text:00000000000022BB                 mov     edx, 37h ; '7'  ; n
.text:00000000000022C0                 mov     esi, 1          ; size
.text:00000000000022C5                 call    _fwrite
.text:00000000000022CA                 call    _abort
.text:00000000000022CA ; } // starts at 2230
.text:00000000000022CA set_program_name endp
.text:00000000000022CA
.text:00000000000022CA ; ---------------------------------------------------------------------------
.text:00000000000022CF                 align 10h
.text:00000000000022D0
.text:00000000000022D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000022D0
.text:00000000000022D0 ; Attributes: info_from_lumina
.text:00000000000022D0
.text:00000000000022D0 ; const char *__fastcall gettext_quote(const char *msgid, quoting_style s)
.text:00000000000022D0 gettext_quote   proc near               ; CODE XREF: quotearg_buffer_restyled+1165↓p
.text:00000000000022D0                                         ; quotearg_buffer_restyled+117B↓p
.text:00000000000022D0 ; __unwind {
.text:00000000000022D0                 push    rbp
.text:00000000000022D1                 push    rbx
.text:00000000000022D2                 mov     rbp, rdi
.text:00000000000022D5                 mov     ebx, esi
.text:00000000000022D7                 sub     rsp, 8
.text:00000000000022DB                 call    locale_charset
.text:00000000000022E0                 movzx   edx, byte ptr [rax]
.text:00000000000022E3                 and     edx, 0FFFFFFDFh
.text:00000000000022E6                 cmp     dl, 55h ; 'U'
.text:00000000000022E9                 jz      short loc_2360
.text:00000000000022EB                 cmp     dl, 47h ; 'G'
.text:00000000000022EE                 jz      short loc_2310
.text:00000000000022F0
.text:00000000000022F0 loc_22F0:                               ; CODE XREF: gettext_quote+4A↓j
.text:00000000000022F0                                         ; gettext_quote+50↓j ...
.text:00000000000022F0                 lea     rax, unk_5693
.text:00000000000022F7                 lea     rdx, asc_5695   ; "'"
.text:00000000000022FE                 cmp     ebx, 9
.text:0000000000002301                 cmovnz  rax, rdx
.text:0000000000002305                 add     rsp, 8
.text:0000000000002309                 pop     rbx
.text:000000000000230A                 pop     rbp
.text:000000000000230B                 retn
.text:000000000000230B ; ---------------------------------------------------------------------------
.text:000000000000230C                 align 10h
.text:0000000000002310
.text:0000000000002310 loc_2310:                               ; CODE XREF: gettext_quote+1E↑j
.text:0000000000002310                 movzx   edx, byte ptr [rax+1]
.text:0000000000002314                 and     edx, 0FFFFFFDFh
.text:0000000000002317                 cmp     dl, 42h ; 'B'
.text:000000000000231A                 jnz     short loc_22F0
.text:000000000000231C                 cmp     byte ptr [rax+2], 31h ; '1'
.text:0000000000002320                 jnz     short loc_22F0
.text:0000000000002322                 cmp     byte ptr [rax+3], 38h ; '8'
.text:0000000000002326                 jnz     short loc_22F0
.text:0000000000002328                 cmp     byte ptr [rax+4], 30h ; '0'
.text:000000000000232C                 jnz     short loc_22F0
.text:000000000000232E                 cmp     byte ptr [rax+5], 33h ; '3'
.text:0000000000002332                 jnz     short loc_22F0
.text:0000000000002334                 cmp     byte ptr [rax+6], 30h ; '0'
.text:0000000000002338                 jnz     short loc_22F0
.text:000000000000233A                 cmp     byte ptr [rax+7], 0
.text:000000000000233E                 jnz     short loc_22F0
.text:0000000000002340                 cmp     byte ptr [rbp+0], 60h ; '`'
.text:0000000000002344                 lea     rax, unk_568C
.text:000000000000234B                 lea     rdx, unk_5690
.text:0000000000002352                 cmovnz  rax, rdx
.text:0000000000002356                 add     rsp, 8
.text:000000000000235A                 pop     rbx
.text:000000000000235B                 pop     rbp
.text:000000000000235C                 retn
.text:000000000000235C ; ---------------------------------------------------------------------------
.text:000000000000235D                 align 20h
.text:0000000000002360
.text:0000000000002360 loc_2360:                               ; CODE XREF: gettext_quote+19↑j
.text:0000000000002360                 movzx   edx, byte ptr [rax+1]
.text:0000000000002364                 and     edx, 0FFFFFFDFh
.text:0000000000002367                 cmp     dl, 54h ; 'T'
.text:000000000000236A                 jnz     short loc_22F0
.text:000000000000236C                 movzx   edx, byte ptr [rax+2]
.text:0000000000002370                 and     edx, 0FFFFFFDFh
.text:0000000000002373                 cmp     dl, 46h ; 'F'
.text:0000000000002376                 jnz     loc_22F0
.text:000000000000237C                 cmp     byte ptr [rax+3], 2Dh ; '-'
.text:0000000000002380                 jnz     loc_22F0
.text:0000000000002386                 cmp     byte ptr [rax+4], 38h ; '8'
.text:000000000000238A                 jnz     loc_22F0
.text:0000000000002390                 cmp     byte ptr [rax+5], 0
.text:0000000000002394                 jnz     loc_22F0
.text:000000000000239A                 cmp     byte ptr [rbp+0], 60h ; '`'
.text:000000000000239E                 lea     rax, unk_5684
.text:00000000000023A5                 lea     rdx, unk_5688
.text:00000000000023AC                 cmovnz  rax, rdx
.text:00000000000023B0                 add     rsp, 8
.text:00000000000023B4                 pop     rbx
.text:00000000000023B5                 pop     rbp
.text:00000000000023B6                 retn
.text:00000000000023B6 ; } // starts at 22D0
.text:00000000000023B6 gettext_quote   endp
.text:00000000000023B6
.text:00000000000023B6 ; ---------------------------------------------------------------------------
.text:00000000000023B7                 align 20h
.text:00000000000023C0
.text:00000000000023C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000023C0
.text:00000000000023C0 ; Attributes: info_from_lumina
.text:00000000000023C0
.text:00000000000023C0 ; size_t __fastcall quotearg_buffer_restyled(char *buffer, size_t buffersize, const char *arg, size_t argsize, quoting_style quoting_style, int flags, const unsigned int *quote_these_too, const char *left_quote, const char *right_quote)
.text:00000000000023C0 quotearg_buffer_restyled proc near      ; CODE XREF: quotearg_buffer_restyled+BCD↓p
.text:00000000000023C0                                         ; quotearg_buffer_restyled+11CB↓p ...
.text:00000000000023C0
.text:00000000000023C0 var_E0          = dword ptr -0E0h
.text:00000000000023C0 var_DB          = byte ptr -0DBh
.text:00000000000023C0 var_DA          = byte ptr -0DAh
.text:00000000000023C0 var_D9          = byte ptr -0D9h
.text:00000000000023C0 s               = qword ptr -0D8h
.text:00000000000023C0 n               = qword ptr -0D0h
.text:00000000000023C0 var_C8          = qword ptr -0C8h
.text:00000000000023C0 ps              = qword ptr -0C0h
.text:00000000000023C0 var_B8          = qword ptr -0B8h
.text:00000000000023C0 var_B0          = qword ptr -0B0h
.text:00000000000023C0 var_A8          = qword ptr -0A8h
.text:00000000000023C0 s2              = qword ptr -0A0h
.text:00000000000023C0 var_98          = qword ptr -98h
.text:00000000000023C0 var_90          = qword ptr -90h
.text:00000000000023C0 var_88          = qword ptr -88h
.text:00000000000023C0 var_80          = qword ptr -80h
.text:00000000000023C0 var_78          = qword ptr -78h
.text:00000000000023C0 var_70          = dword ptr -70h
.text:00000000000023C0 var_6C          = byte ptr -6Ch
.text:00000000000023C0 var_6B          = byte ptr -6Bh
.text:00000000000023C0 var_6A          = byte ptr -6Ah
.text:00000000000023C0 var_69          = byte ptr -69h
.text:00000000000023C0 var_68          = qword ptr -68h
.text:00000000000023C0 var_60          = qword ptr -60h
.text:00000000000023C0 wc              = dword ptr -4Ch
.text:00000000000023C0 var_48          = qword ptr -48h
.text:00000000000023C0 var_40          = qword ptr -40h
.text:00000000000023C0 arg_0           = qword ptr  8
.text:00000000000023C0 arg_8           = qword ptr  10h
.text:00000000000023C0 arg_10          = qword ptr  18h
.text:00000000000023C0
.text:00000000000023C0 ; __unwind {
.text:00000000000023C0                 push    r15
.text:00000000000023C2                 push    r14
.text:00000000000023C4                 mov     r15d, r8d
.text:00000000000023C7                 push    r13
.text:00000000000023C9                 push    r12
.text:00000000000023CB                 mov     r14, rdi
.text:00000000000023CE                 push    rbp
.text:00000000000023CF                 push    rbx
.text:00000000000023D0                 mov     ebx, r9d
.text:00000000000023D3                 mov     r13, rsi
.text:00000000000023D6                 mov     rbp, rcx
.text:00000000000023D9                 and     ebx, 2
.text:00000000000023DC                 sub     rsp, 0B8h
.text:00000000000023E3                 mov     rax, [rsp+0E8h+arg_0]
.text:00000000000023EB                 mov     [rsp+0E8h+s], rdx
.text:00000000000023F0                 mov     [rsp+0E8h+var_E0], r8d
.text:00000000000023F5                 mov     [rsp+0E8h+var_70], r9d
.text:00000000000023FA                 mov     [rsp+0E8h+var_C8], rax
.text:00000000000023FF                 mov     rax, [rsp+0E8h+arg_8]
.text:0000000000002407                 mov     [rsp+0E8h+var_80], rax
.text:000000000000240C                 mov     rax, [rsp+0E8h+arg_10]
.text:0000000000002414                 mov     [rsp+0E8h+var_88], rax
.text:0000000000002419                 mov     rax, fs:28h
.text:0000000000002422                 mov     [rsp+0E8h+var_40], rax
.text:000000000000242A                 xor     eax, eax
.text:000000000000242C                 call    ___ctype_get_mb_cur_max
.text:0000000000002431                 cmp     r15d, 0Ah       ; switch 11 cases
.text:0000000000002435                 mov     [rsp+0E8h+var_90], rax
.text:000000000000243A                 ja      def_2451        ; jumptable 00000000000121F1 default case
.text:0000000000002440                 lea     rcx, jpt_2451
.text:0000000000002447                 mov     edx, r15d
.text:000000000000244A                 movsxd  rax, ds:(jpt_2451 - 5700h)[rcx+rdx*4]
.text:000000000000244E                 add     rax, rcx
.text:0000000000002451                 jmp     rax             ; switch jump
.text:0000000000002453 ; ---------------------------------------------------------------------------
.text:0000000000002453
.text:0000000000002453 loc_2453:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000002453                                         ; quotearg_buffer_restyled+C66↓j
.text:0000000000002453                                         ; DATA XREF: ...
.text:0000000000002453                 mov     [rsp+0E8h+var_DA], 1 ; jumptable 00000000000121F1 case 1
.text:0000000000002458                 mov     [rsp+0E8h+var_6C], 0
.text:000000000000245D                 xor     r12d, r12d
.text:0000000000002460                 mov     [rsp+0E8h+var_98], 0
.text:0000000000002469                 mov     [rsp+0E8h+var_D9], 1
.text:000000000000246E                 mov     [rsp+0E8h+var_DB], 0
.text:0000000000002473
.text:0000000000002473 loc_2473:                               ; CODE XREF: quotearg_buffer_restyled+E94↓j
.text:0000000000002473                 lea     rax, asc_5695   ; "'"
.text:000000000000247A                 mov     [rsp+0E8h+n], 1
.text:0000000000002483                 xor     r15d, r15d
.text:0000000000002486                 mov     [rsp+0E8h+var_E0], 2
.text:000000000000248E                 mov     [rsp+0E8h+s2], rax
.text:0000000000002493
.text:0000000000002493 loc_2493:                               ; CODE XREF: quotearg_buffer_restyled+7F4↓j
.text:0000000000002493                                         ; quotearg_buffer_restyled+CB8↓j ...
.text:0000000000002493                 xor     r11d, r11d
.text:0000000000002496                 mov     rax, rbp
.text:0000000000002499                 mov     r8d, r12d
.text:000000000000249C                 mov     rbp, r11
.text:000000000000249F                 mov     r11, rax
.text:00000000000024A2                 nop     word ptr [rax+rax+00h]
.text:00000000000024A8
.text:00000000000024A8 loc_24A8:                               ; CODE XREF: quotearg_buffer_restyled+2B2↓j
.text:00000000000024A8                                         ; quotearg_buffer_restyled+42C↓j
.text:00000000000024A8                 cmp     r11, rbp
.text:00000000000024AB                 setnz   r12b
.text:00000000000024AF                 cmp     r11, 0FFFFFFFFFFFFFFFFh
.text:00000000000024B3                 jnz     short loc_24C2
.text:00000000000024B5                 mov     rax, [rsp+0E8h+s]
.text:00000000000024BA                 cmp     byte ptr [rax+rbp], 0
.text:00000000000024BE                 setnz   r12b
.text:00000000000024C2
.text:00000000000024C2 loc_24C2:                               ; CODE XREF: quotearg_buffer_restyled+F3↑j
.text:00000000000024C2                 test    r12b, r12b
.text:00000000000024C5                 jz      loc_2B20
.text:00000000000024CB                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000024D0                 mov     rdi, [rsp+0E8h+s] ; s
.text:00000000000024D5                 lea     r9, [rdi+rbp]
.text:00000000000024D9                 setnz   al
.text:00000000000024DC                 and     al, [rsp+0E8h+var_DB]
.text:00000000000024E0                 mov     r10d, eax
.text:00000000000024E3                 jz      loc_2590
.text:00000000000024E9                 mov     rax, [rsp+0E8h+n]
.text:00000000000024EE                 test    rax, rax
.text:00000000000024F1                 jz      loc_2920
.text:00000000000024F7                 cmp     r11, 0FFFFFFFFFFFFFFFFh
.text:00000000000024FB                 lea     rbx, [rbp+rax+0]
.text:0000000000002500                 jnz     short loc_2530
.text:0000000000002502                 cmp     rax, 1
.text:0000000000002506                 jbe     short loc_2530
.text:0000000000002508                 mov     byte ptr [rsp+0E8h+var_B0], r8b
.text:000000000000250D                 mov     byte ptr [rsp+0E8h+var_B8], r10b
.text:0000000000002512                 mov     [rsp+0E8h+ps], r9
.text:0000000000002517                 call    _strlen
.text:000000000000251C                 movzx   r8d, byte ptr [rsp+0E8h+var_B0]
.text:0000000000002522                 movzx   r10d, byte ptr [rsp+0E8h+var_B8]
.text:0000000000002528                 mov     r11, rax
.text:000000000000252B                 mov     r9, [rsp+0E8h+ps]
.text:0000000000002530
.text:0000000000002530 loc_2530:                               ; CODE XREF: quotearg_buffer_restyled+140↑j
.text:0000000000002530                                         ; quotearg_buffer_restyled+146↑j
.text:0000000000002530                 cmp     rbx, r11
.text:0000000000002533                 mov     byte ptr [rsp+0E8h+ps], r10b
.text:0000000000002538                 ja      loc_2AF0
.text:000000000000253E                 mov     rdx, [rsp+0E8h+n] ; n
.text:0000000000002543                 mov     rsi, [rsp+0E8h+s2] ; s2
.text:0000000000002548                 mov     rdi, r9         ; s1
.text:000000000000254B                 mov     [rsp+0E8h+var_A8], r11
.text:0000000000002550                 mov     byte ptr [rsp+0E8h+var_B0], r8b
.text:0000000000002555                 mov     [rsp+0E8h+var_B8], r9
.text:000000000000255A                 call    _memcmp
.text:000000000000255F                 test    eax, eax
.text:0000000000002561                 mov     r9, [rsp+0E8h+var_B8]
.text:0000000000002566                 movzx   r8d, byte ptr [rsp+0E8h+var_B0]
.text:000000000000256C                 mov     r11, [rsp+0E8h+var_A8]
.text:0000000000002571                 jnz     loc_2AF0
.text:0000000000002577                 cmp     [rsp+0E8h+var_D9], 0
.text:000000000000257C                 movzx   r10d, byte ptr [rsp+0E8h+ps]
.text:0000000000002582                 jnz     loc_3505
.text:0000000000002588                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000002590
.text:0000000000002590 loc_2590:                               ; CODE XREF: quotearg_buffer_restyled+123↑j
.text:0000000000002590                                         ; quotearg_buffer_restyled+733↓j
.text:0000000000002590                 movzx   ebx, byte ptr [r9]
.text:0000000000002594                 cmp     bl, 7Eh         ; switch 127 cases
.text:0000000000002597                 ja      def_25AE        ; jumptable 000000000001234E default case, cases 1-6,14-31,64
.text:000000000000259D                 lea     rcx, jpt_25AE
.text:00000000000025A4                 movzx   edx, bl
.text:00000000000025A7                 movsxd  rax, ds:(jpt_25AE - 572Ch)[rcx+rdx*4]
.text:00000000000025AB                 add     rax, rcx
.text:00000000000025AE                 jmp     rax             ; switch jump
.text:00000000000025B0 ; ---------------------------------------------------------------------------
.text:00000000000025B0
.text:00000000000025B0 loc_25B0:                               ; CODE XREF: quotearg_buffer_restyled+57A↓j
.text:00000000000025B0                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:00000000000025B0                 xor     r10d, r10d      ; jumptable 00000000000126DA cases 123,125
.text:00000000000025B3
.text:00000000000025B3 loc_25B3:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000025B3                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:00000000000025B3                 cmp     r11, 1          ; jumptable 000000000001234E cases 123,125
.text:00000000000025B7                 setnz   al
.text:00000000000025BA                 cmp     r11, 0FFFFFFFFFFFFFFFFh
.text:00000000000025BE                 jnz     short loc_25CC
.text:00000000000025C0                 mov     rax, [rsp+0E8h+s]
.text:00000000000025C5                 cmp     byte ptr [rax+1], 0
.text:00000000000025C9                 setnz   al
.text:00000000000025CC
.text:00000000000025CC loc_25CC:                               ; CODE XREF: quotearg_buffer_restyled+1FE↑j
.text:00000000000025CC                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000025D1                 setz    dl
.text:00000000000025D4                 test    al, al
.text:00000000000025D6                 jz      loc_2828
.text:00000000000025DC
.text:00000000000025DC loc_25DC:                               ; CODE XREF: quotearg_buffer_restyled+46B↓j
.text:00000000000025DC                 xor     r12d, r12d
.text:00000000000025DF                 xor     eax, eax
.text:00000000000025E1                 nop     dword ptr [rax+00000000h]
.text:00000000000025E8
.text:00000000000025E8 loc_25E8:                               ; CODE XREF: quotearg_buffer_restyled+2E9↓j
.text:00000000000025E8                                         ; quotearg_buffer_restyled+30C↓j ...
.text:00000000000025E8                 cmp     [rsp+0E8h+var_DB], 1
.text:00000000000025ED                 jnz     loc_2702
.text:00000000000025F3                 test    dl, dl
.text:00000000000025F5                 jnz     loc_2702
.text:00000000000025FB
.text:00000000000025FB loc_25FB:                               ; CODE XREF: quotearg_buffer_restyled+347↓j
.text:00000000000025FB                 mov     rsi, [rsp+0E8h+var_C8]
.text:0000000000002600                 test    rsi, rsi
.text:0000000000002603                 jz      short loc_2619
.text:0000000000002605                 mov     edx, ebx
.text:0000000000002607                 shr     dl, 5
.text:000000000000260A                 movzx   edx, dl
.text:000000000000260D                 mov     edx, [rsi+rdx*4]
.text:0000000000002610                 bt      edx, ebx
.text:0000000000002613                 jb      loc_2763
.text:0000000000002619
.text:0000000000002619 loc_2619:                               ; CODE XREF: quotearg_buffer_restyled+243↑j
.text:0000000000002619                                         ; quotearg_buffer_restyled+34D↓j ...
.text:0000000000002619                 test    r10b, r10b
.text:000000000000261C                 jnz     loc_2763
.text:0000000000002622                 xor     eax, 1
.text:0000000000002625                 add     rbp, 1
.text:0000000000002629                 and     eax, r8d
.text:000000000000262C
.text:000000000000262C loc_262C:                               ; CODE XREF: quotearg_buffer_restyled+75A↓j
.text:000000000000262C                                         ; quotearg_buffer_restyled+AE8↓j
.text:000000000000262C                 test    al, al
.text:000000000000262E                 jz      short loc_2650
.text:0000000000002630                 cmp     r13, r15
.text:0000000000002633                 jbe     short loc_263A
.text:0000000000002635                 mov     byte ptr [r14+r15], 27h ; '''
.text:000000000000263A
.text:000000000000263A loc_263A:                               ; CODE XREF: quotearg_buffer_restyled+273↑j
.text:000000000000263A                 lea     rax, [r15+1]
.text:000000000000263E                 cmp     r13, rax
.text:0000000000002641                 jbe     short loc_2649
.text:0000000000002643                 mov     byte ptr [r14+r15+1], 27h ; '''
.text:0000000000002649
.text:0000000000002649 loc_2649:                               ; CODE XREF: quotearg_buffer_restyled+281↑j
.text:0000000000002649                 add     r15, 2
.text:000000000000264D                 xor     r8d, r8d
.text:0000000000002650
.text:0000000000002650 loc_2650:                               ; CODE XREF: quotearg_buffer_restyled+26E↑j
.text:0000000000002650                                         ; quotearg_buffer_restyled+403↓j ...
.text:0000000000002650                 cmp     r15, r13
.text:0000000000002653                 jnb     short loc_2659
.text:0000000000002655                 mov     [r14+r15], bl
.text:0000000000002659
.text:0000000000002659 loc_2659:                               ; CODE XREF: quotearg_buffer_restyled+293↑j
.text:0000000000002659                 movzx   edi, [rsp+0E8h+var_DA]
.text:000000000000265E                 add     r15, 1
.text:0000000000002662                 mov     eax, 0
.text:0000000000002667                 test    r12b, r12b
.text:000000000000266A                 cmovz   edi, eax
.text:000000000000266D                 mov     [rsp+0E8h+var_DA], dil
.text:0000000000002672                 jmp     loc_24A8
.text:0000000000002672 ; ---------------------------------------------------------------------------
.text:0000000000002677                 align 20h
.text:0000000000002680
.text:0000000000002680 loc_2680:                               ; CODE XREF: quotearg_buffer_restyled+57A↓j
.text:0000000000002680                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002680                 xor     r10d, r10d      ; jumptable 00000000000126DA case 63
.text:0000000000002683
.text:0000000000002683 loc_2683:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002683                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002683                 mov     eax, [rsp+0E8h+var_E0] ; jumptable 000000000001234E case 63
.text:0000000000002687                 cmp     eax, 2
.text:000000000000268A                 jz      loc_2C48
.text:0000000000002690                 cmp     eax, 5
.text:0000000000002693                 jz      loc_2C08
.text:0000000000002699                 cmp     eax, 2
.text:000000000000269C                 mov     ebx, 3Fh ; '?'
.text:00000000000026A1                 setz    dl
.text:00000000000026A4                 xor     r12d, r12d
.text:00000000000026A7                 xor     eax, eax
.text:00000000000026A9                 jmp     loc_25E8
.text:00000000000026A9 ; ---------------------------------------------------------------------------
.text:00000000000026AE                 align 10h
.text:00000000000026B0
.text:00000000000026B0 loc_26B0:                               ; CODE XREF: quotearg_buffer_restyled+57A↓j
.text:00000000000026B0                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:00000000000026B0                 xor     r10d, r10d      ; jumptable 00000000000126DA case 39
.text:00000000000026B3
.text:00000000000026B3 loc_26B3:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000026B3                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:00000000000026B3                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E case 39
.text:00000000000026B8                 jz      loc_2BC0
.text:00000000000026BE                 mov     [rsp+0E8h+var_6C], r12b
.text:00000000000026C3                 xor     edx, edx
.text:00000000000026C5                 xor     eax, eax
.text:00000000000026C7                 mov     ebx, 27h ; '''
.text:00000000000026CC                 jmp     loc_25E8
.text:00000000000026CC ; ---------------------------------------------------------------------------
.text:00000000000026D1                 align 8
.text:00000000000026D8
.text:00000000000026D8 loc_26D8:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000026D8                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:00000000000026D8                 mov     edx, 9          ; jumptable 000000000001234E case 9
.text:00000000000026DD                 mov     ebx, 74h ; 't'
.text:00000000000026E2
.text:00000000000026E2 loc_26E2:                               ; CODE XREF: quotearg_buffer_restyled+4BA↓j
.text:00000000000026E2                                         ; quotearg_buffer_restyled+4EA↓j ...
.text:00000000000026E2                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000026E7                 setz    al
.text:00000000000026EA                 and     al, [rsp+0E8h+var_D9]
.text:00000000000026EE                 jnz     loc_283E
.text:00000000000026F4
.text:00000000000026F4 loc_26F4:                               ; CODE XREF: quotearg_buffer_restyled+362↓j
.text:00000000000026F4                                         ; quotearg_buffer_restyled+45A↓j ...
.text:00000000000026F4                 cmp     [rsp+0E8h+var_DB], 0
.text:00000000000026F9                 jnz     short loc_2760
.text:00000000000026FB
.text:00000000000026FB loc_26FB:                               ; CODE XREF: quotearg_buffer_restyled+422↓j
.text:00000000000026FB                 mov     ebx, edx
.text:00000000000026FD                 xor     r12d, r12d
.text:0000000000002700                 xor     eax, eax
.text:0000000000002702
.text:0000000000002702 loc_2702:                               ; CODE XREF: quotearg_buffer_restyled+22D↑j
.text:0000000000002702                                         ; quotearg_buffer_restyled+235↑j
.text:0000000000002702                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000002707                 jnz     loc_25FB
.text:000000000000270D                 jmp     loc_2619
.text:000000000000270D ; ---------------------------------------------------------------------------
.text:0000000000002712                 align 8
.text:0000000000002718
.text:0000000000002718 loc_2718:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002718                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002718                 mov     edx, 8          ; jumptable 000000000001234E case 8
.text:000000000000271D                 mov     ebx, 62h ; 'b'
.text:0000000000002722                 jmp     short loc_26F4
.text:0000000000002722 ; ---------------------------------------------------------------------------
.text:0000000000002724                 align 8
.text:0000000000002728
.text:0000000000002728 loc_2728:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002728                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002728                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E case 92
.text:000000000000272D                 jz      loc_2B00
.text:0000000000002733                 cmp     [rsp+0E8h+var_DB], 0
.text:0000000000002738                 jz      loc_2950
.text:000000000000273E
.text:000000000000273E loc_273E:                               ; CODE XREF: quotearg_buffer_restyled+588↓j
.text:000000000000273E                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000002743                 jz      loc_2950
.text:0000000000002749                 cmp     [rsp+0E8h+n], 0
.text:000000000000274F                 jnz     loc_2B0B
.text:0000000000002755                 mov     ebx, 5Ch ; '\'
.text:000000000000275A                 nop     word ptr [rax+rax+00h]
.text:0000000000002760
.text:0000000000002760 loc_2760:                               ; CODE XREF: quotearg_buffer_restyled+339↑j
.text:0000000000002760                                         ; quotearg_buffer_restyled+5D5↓j ...
.text:0000000000002760                 xor     r12d, r12d
.text:0000000000002763
.text:0000000000002763 loc_2763:                               ; CODE XREF: quotearg_buffer_restyled+253↑j
.text:0000000000002763                                         ; quotearg_buffer_restyled+25C↑j
.text:0000000000002763                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000002768                 setz    dl
.text:000000000000276B                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000002770                 mov     eax, edx
.text:0000000000002772                 jnz     loc_2FC8
.text:0000000000002778                 mov     eax, r8d
.text:000000000000277B                 xor     eax, 1
.text:000000000000277E                 and     al, dl
.text:0000000000002780                 jz      short loc_27B1
.text:0000000000002782                 cmp     r13, r15
.text:0000000000002785                 jbe     short loc_278C
.text:0000000000002787                 mov     byte ptr [r14+r15], 27h ; '''
.text:000000000000278C
.text:000000000000278C loc_278C:                               ; CODE XREF: quotearg_buffer_restyled+3C5↑j
.text:000000000000278C                 lea     rdx, [r15+1]
.text:0000000000002790                 cmp     r13, rdx
.text:0000000000002793                 jbe     short loc_279B
.text:0000000000002795                 mov     byte ptr [r14+r15+1], 24h ; '$'
.text:000000000000279B
.text:000000000000279B loc_279B:                               ; CODE XREF: quotearg_buffer_restyled+3D3↑j
.text:000000000000279B                 lea     rdx, [r15+2]
.text:000000000000279F                 cmp     r13, rdx
.text:00000000000027A2                 jbe     short loc_27AA
.text:00000000000027A4                 mov     byte ptr [r14+r15+2], 27h ; '''
.text:00000000000027AA
.text:00000000000027AA loc_27AA:                               ; CODE XREF: quotearg_buffer_restyled+3E2↑j
.text:00000000000027AA                 add     r15, 3
.text:00000000000027AE                 mov     r8d, eax
.text:00000000000027B1
.text:00000000000027B1 loc_27B1:                               ; CODE XREF: quotearg_buffer_restyled+3C0↑j
.text:00000000000027B1                 cmp     r13, r15
.text:00000000000027B4                 jbe     short loc_27BB
.text:00000000000027B6                 mov     byte ptr [r14+r15], 5Ch ; '\'
.text:00000000000027BB
.text:00000000000027BB loc_27BB:                               ; CODE XREF: quotearg_buffer_restyled+3F4↑j
.text:00000000000027BB                 add     r15, 1
.text:00000000000027BF                 add     rbp, 1
.text:00000000000027C3                 jmp     loc_2650
.text:00000000000027C3 ; ---------------------------------------------------------------------------
.text:00000000000027C8                 align 10h
.text:00000000000027D0
.text:00000000000027D0 loc_27D0:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000027D0                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:00000000000027D0                 cmp     [rsp+0E8h+var_DB], 0 ; jumptable 000000000001234E case 0
.text:00000000000027D5                 jnz     loc_29A3
.text:00000000000027DB                 xor     edx, edx
.text:00000000000027DD                 test    byte ptr [rsp+0E8h+var_70], 1
.text:00000000000027E2                 jz      loc_26FB
.text:00000000000027E8                 add     rbp, 1
.text:00000000000027EC                 jmp     loc_24A8
.text:00000000000027EC ; ---------------------------------------------------------------------------
.text:00000000000027F1                 align 8
.text:00000000000027F8
.text:00000000000027F8 loc_27F8:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000027F8                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:00000000000027F8                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E cases 37,43-58,65-90,93,95,97-122
.text:00000000000027FD                 setz    dl
.text:0000000000002800                 xor     eax, eax
.text:0000000000002802                 jmp     loc_25E8
.text:0000000000002802 ; ---------------------------------------------------------------------------
.text:0000000000002807                 align 10h
.text:0000000000002810
.text:0000000000002810 loc_2810:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002810                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002810                 mov     edx, 7          ; jumptable 000000000001234E case 7
.text:0000000000002815                 mov     ebx, 61h ; 'a'
.text:000000000000281A                 jmp     loc_26F4
.text:000000000000281A ; ---------------------------------------------------------------------------
.text:000000000000281F                 align 20h
.text:0000000000002820
.text:0000000000002820 loc_2820:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002820                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002820                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E cases 35,126
.text:0000000000002825                 setz    dl
.text:0000000000002828
.text:0000000000002828 loc_2828:                               ; CODE XREF: quotearg_buffer_restyled+216↑j
.text:0000000000002828                                         ; quotearg_buffer_restyled+6A3↓j
.text:0000000000002828                 test    rbp, rbp
.text:000000000000282B                 jnz     loc_25DC
.text:0000000000002831
.text:0000000000002831 loc_2831:                               ; CODE XREF: quotearg_buffer_restyled+49B↓j
.text:0000000000002831                                         ; quotearg_buffer_restyled+4AD↓j ...
.text:0000000000002831                 movzx   eax, [rsp+0E8h+var_D9]
.text:0000000000002836                 and     al, dl
.text:0000000000002838                 jz      loc_25E8
.text:000000000000283E
.text:000000000000283E loc_283E:                               ; CODE XREF: quotearg_buffer_restyled+32E↑j
.text:000000000000283E                 mov     rbp, r11
.text:0000000000002841                 mov     [rsp+0E8h+var_E0], 2
.text:0000000000002849                 jmp     loc_2F49
.text:0000000000002849 ; ---------------------------------------------------------------------------
.text:000000000000284E                 align 10h
.text:0000000000002850
.text:0000000000002850 loc_2850:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002850                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002850                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E cases 33,34,36,38,40-42,59-62,91,94,96,124
.text:0000000000002855                 setz    dl
.text:0000000000002858                 xor     r12d, r12d
.text:000000000000285B                 jmp     short loc_2831
.text:000000000000285B ; ---------------------------------------------------------------------------
.text:000000000000285D                 align 20h
.text:0000000000002860
.text:0000000000002860 loc_2860:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002860                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002860                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E case 32
.text:0000000000002865                 mov     ebx, 20h ; ' '
.text:000000000000286A                 setz    dl
.text:000000000000286D                 jmp     short loc_2831
.text:000000000000286D ; ---------------------------------------------------------------------------
.text:000000000000286F                 align 10h
.text:0000000000002870
.text:0000000000002870 loc_2870:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002870                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002870                 mov     edx, 0Dh        ; jumptable 000000000001234E case 13
.text:0000000000002875                 mov     ebx, 72h ; 'r'
.text:000000000000287A                 jmp     loc_26E2
.text:000000000000287A ; ---------------------------------------------------------------------------
.text:000000000000287F                 align 20h
.text:0000000000002880
.text:0000000000002880 loc_2880:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002880                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002880                 mov     edx, 0Ch        ; jumptable 000000000001234E case 12
.text:0000000000002885                 mov     ebx, 66h ; 'f'
.text:000000000000288A                 jmp     loc_26F4
.text:000000000000288A ; ---------------------------------------------------------------------------
.text:000000000000288F                 align 10h
.text:0000000000002890
.text:0000000000002890 loc_2890:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000002890                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:0000000000002890                 mov     edx, 0Bh        ; jumptable 000000000001234E case 11
.text:0000000000002895                 mov     ebx, 76h ; 'v'
.text:000000000000289A                 jmp     loc_26F4
.text:000000000000289A ; ---------------------------------------------------------------------------
.text:000000000000289F                 align 20h
.text:00000000000028A0
.text:00000000000028A0 loc_28A0:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000028A0                                         ; DATA XREF: .rodata:jpt_25AE↓o
.text:00000000000028A0                 mov     edx, 0Ah        ; jumptable 000000000001234E case 10
.text:00000000000028A5                 mov     ebx, 6Eh ; 'n'
.text:00000000000028AA                 jmp     loc_26E2
.text:00000000000028AA ; ---------------------------------------------------------------------------
.text:00000000000028AF                 align 10h
.text:00000000000028B0
.text:00000000000028B0 def_293A:                               ; CODE XREF: quotearg_buffer_restyled+567↓j
.text:00000000000028B0                                         ; quotearg_buffer_restyled+57A↓j
.text:00000000000028B0                                         ; DATA XREF: ...
.text:00000000000028B0                 xor     r10d, r10d      ; jumptable 00000000000126DA default case, cases 1-6,14-31,64
.text:00000000000028B3                 nop     dword ptr [rax+rax+00h]
.text:00000000000028B8
.text:00000000000028B8 def_25AE:                               ; CODE XREF: quotearg_buffer_restyled+1D7↑j
.text:00000000000028B8                                         ; quotearg_buffer_restyled+1EE↑j
.text:00000000000028B8                                         ; DATA XREF: ...
.text:00000000000028B8                 cmp     [rsp+0E8h+var_90], 1 ; jumptable 000000000001234E default case, cases 1-6,14-31,64
.text:00000000000028BE                 jnz     loc_2C68
.text:00000000000028C4                 mov     [rsp+0E8h+var_B0], r11
.text:00000000000028C9                 mov     byte ptr [rsp+0E8h+var_B8], r8b
.text:00000000000028CE                 mov     byte ptr [rsp+0E8h+ps], r10b
.text:00000000000028D3                 call    ___ctype_b_loc
.text:00000000000028D8                 mov     rcx, [rax]
.text:00000000000028DB                 movzx   edx, bl
.text:00000000000028DE                 movzx   r10d, byte ptr [rsp+0E8h+ps]
.text:00000000000028E4                 movzx   r8d, byte ptr [rsp+0E8h+var_B8]
.text:00000000000028EA                 mov     r11, [rsp+0E8h+var_B0]
.text:00000000000028EF                 mov     edi, 1
.text:00000000000028F4                 movzx   eax, word ptr [rcx+rdx*2]
.text:00000000000028F8                 and     ax, 4000h
.text:00000000000028FC                 setnz   r12b
.text:0000000000002900                 setz    al
.text:0000000000002903                 and     al, [rsp+0E8h+var_DB]
.text:0000000000002907
.text:0000000000002907 loc_2907:                               ; CODE XREF: quotearg_buffer_restyled+FED↓j
.text:0000000000002907                 test    al, al
.text:0000000000002909                 jnz     loc_32A1
.text:000000000000290F                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000002914                 setz    dl
.text:0000000000002917                 jmp     loc_25E8
.text:0000000000002917 ; ---------------------------------------------------------------------------
.text:000000000000291C                 align 20h
.text:0000000000002920
.text:0000000000002920 loc_2920:                               ; CODE XREF: quotearg_buffer_restyled+131↑j
.text:0000000000002920                 movzx   ebx, byte ptr [r9]
.text:0000000000002924                 cmp     bl, 7Eh         ; switch 127 cases
.text:0000000000002927                 ja      short def_293A  ; jumptable 00000000000126DA default case, cases 1-6,14-31,64
.text:0000000000002929                 lea     rcx, jpt_293A
.text:0000000000002930                 movzx   edx, bl
.text:0000000000002933                 movsxd  rax, ds:(jpt_293A - 5928h)[rcx+rdx*4]
.text:0000000000002937                 add     rax, rcx
.text:000000000000293A                 jmp     rax             ; switch jump
.text:000000000000293A ; ---------------------------------------------------------------------------
.text:000000000000293C                 align 20h
.text:0000000000002940
.text:0000000000002940 loc_2940:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002940                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002940                 xor     r10d, r10d      ; jumptable 00000000000126DA case 92
.text:0000000000002943                 cmp     [rsp+0E8h+var_DB], 0
.text:0000000000002948                 jnz     loc_273E
.text:000000000000294E                 xchg    ax, ax
.text:0000000000002950
.text:0000000000002950 loc_2950:                               ; CODE XREF: quotearg_buffer_restyled+378↑j
.text:0000000000002950                                         ; quotearg_buffer_restyled+383↑j
.text:0000000000002950                 mov     edx, 5Ch ; '\'
.text:0000000000002955                 mov     ebx, 5Ch ; '\'
.text:000000000000295A                 jmp     loc_26F4
.text:000000000000295A ; ---------------------------------------------------------------------------
.text:000000000000295F                 align 20h
.text:0000000000002960
.text:0000000000002960 loc_2960:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002960                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002960                 mov     edx, 0Ch        ; jumptable 00000000000126DA case 12
.text:0000000000002965                 xor     r10d, r10d
.text:0000000000002968                 mov     ebx, 66h ; 'f'
.text:000000000000296D                 jmp     loc_26F4
.text:000000000000296D ; ---------------------------------------------------------------------------
.text:0000000000002972                 align 8
.text:0000000000002978
.text:0000000000002978 loc_2978:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002978                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002978                 mov     edx, 0Ah        ; jumptable 00000000000126DA case 10
.text:000000000000297D                 xor     r10d, r10d
.text:0000000000002980                 mov     ebx, 6Eh ; 'n'
.text:0000000000002985                 jmp     loc_26E2
.text:0000000000002985 ; ---------------------------------------------------------------------------
.text:000000000000298A                 align 10h
.text:0000000000002990
.text:0000000000002990 loc_2990:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002990                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002990                 mov     ebx, 61h ; 'a'  ; jumptable 00000000000126DA case 7
.text:0000000000002995                 jmp     loc_2760
.text:0000000000002995 ; ---------------------------------------------------------------------------
.text:000000000000299A                 align 20h
.text:00000000000029A0
.text:00000000000029A0 loc_29A0:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:00000000000029A0                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:00000000000029A0                 xor     r10d, r10d      ; jumptable 00000000000126DA case 0
.text:00000000000029A3
.text:00000000000029A3 loc_29A3:                               ; CODE XREF: quotearg_buffer_restyled+415↑j
.text:00000000000029A3                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000029A8                 setz    dl
.text:00000000000029AB                 cmp     [rsp+0E8h+var_D9], 0
.text:00000000000029B0                 jnz     loc_354A
.text:00000000000029B6                 mov     eax, r8d
.text:00000000000029B9                 mov     rcx, r15
.text:00000000000029BC                 xor     eax, 1
.text:00000000000029BF                 and     al, dl
.text:00000000000029C1                 jz      short loc_29F0
.text:00000000000029C3                 cmp     r13, r15
.text:00000000000029C6                 jbe     short loc_29CD
.text:00000000000029C8                 mov     byte ptr [r14+r15], 27h ; '''
.text:00000000000029CD
.text:00000000000029CD loc_29CD:                               ; CODE XREF: quotearg_buffer_restyled+606↑j
.text:00000000000029CD                 lea     rcx, [r15+1]
.text:00000000000029D1                 cmp     r13, rcx
.text:00000000000029D4                 jbe     short loc_29DC
.text:00000000000029D6                 mov     byte ptr [r14+r15+1], 24h ; '$'
.text:00000000000029DC
.text:00000000000029DC loc_29DC:                               ; CODE XREF: quotearg_buffer_restyled+614↑j
.text:00000000000029DC                 lea     rcx, [r15+2]
.text:00000000000029E0                 cmp     r13, rcx
.text:00000000000029E3                 ja      loc_3019
.text:00000000000029E9
.text:00000000000029E9 loc_29E9:                               ; CODE XREF: quotearg_buffer_restyled+C5F↓j
.text:00000000000029E9                 lea     rcx, [r15+3]
.text:00000000000029ED                 mov     r8d, eax
.text:00000000000029F0
.text:00000000000029F0 loc_29F0:                               ; CODE XREF: quotearg_buffer_restyled+601↑j
.text:00000000000029F0                 cmp     r13, rcx
.text:00000000000029F3                 jbe     short loc_29FA
.text:00000000000029F5                 mov     byte ptr [r14+rcx], 5Ch ; '\'
.text:00000000000029FA
.text:00000000000029FA loc_29FA:                               ; CODE XREF: quotearg_buffer_restyled+633↑j
.text:00000000000029FA                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000029FF                 lea     r15, [rcx+1]
.text:0000000000002A03                 jz      loc_3009
.text:0000000000002A09                 lea     rax, [rbp+1]
.text:0000000000002A0D                 cmp     rax, r11
.text:0000000000002A10                 jnb     short loc_2A2B
.text:0000000000002A12                 mov     rax, [rsp+0E8h+s]
.text:0000000000002A17                 movzx   eax, byte ptr [rax+rbp+1]
.text:0000000000002A1C                 mov     byte ptr [rsp+0E8h+ps], al
.text:0000000000002A20                 sub     eax, 30h ; '0'
.text:0000000000002A23                 cmp     al, 9
.text:0000000000002A25                 jbe     loc_3259
.text:0000000000002A2B
.text:0000000000002A2B loc_2A2B:                               ; CODE XREF: quotearg_buffer_restyled+650↑j
.text:0000000000002A2B                 mov     eax, r12d
.text:0000000000002A2E                 mov     ebx, 30h ; '0'
.text:0000000000002A33                 xor     r12d, r12d
.text:0000000000002A36                 jmp     loc_25E8
.text:0000000000002A36 ; ---------------------------------------------------------------------------
.text:0000000000002A3B                 align 20h
.text:0000000000002A40
.text:0000000000002A40 loc_2A40:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002A40                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002A40                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 00000000000126DA cases 37,43-58,65-90,93,95,97-122
.text:0000000000002A45                 mov     r12d, r10d
.text:0000000000002A48                 setz    dl
.text:0000000000002A4B                 xor     r10d, r10d
.text:0000000000002A4E                 xor     eax, eax
.text:0000000000002A50                 jmp     loc_25E8
.text:0000000000002A50 ; ---------------------------------------------------------------------------
.text:0000000000002A55                 align 8
.text:0000000000002A58
.text:0000000000002A58 loc_2A58:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002A58                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002A58                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 00000000000126DA cases 35,126
.text:0000000000002A5D                 setz    dl
.text:0000000000002A60                 xor     r10d, r10d
.text:0000000000002A63                 jmp     loc_2828
.text:0000000000002A63 ; ---------------------------------------------------------------------------
.text:0000000000002A68                 align 10h
.text:0000000000002A70
.text:0000000000002A70 loc_2A70:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002A70                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002A70                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 00000000000126DA cases 33,34,36,38,40-42,59-62,91,94,96,124
.text:0000000000002A75                 setz    dl
.text:0000000000002A78                 xor     r10d, r10d
.text:0000000000002A7B                 xor     r12d, r12d
.text:0000000000002A7E                 jmp     loc_2831
.text:0000000000002A7E ; ---------------------------------------------------------------------------
.text:0000000000002A83                 align 8
.text:0000000000002A88
.text:0000000000002A88 loc_2A88:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002A88                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002A88                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 00000000000126DA case 32
.text:0000000000002A8D                 mov     r12d, r10d
.text:0000000000002A90                 mov     ebx, 20h ; ' '
.text:0000000000002A95                 setz    dl
.text:0000000000002A98                 xor     r10d, r10d
.text:0000000000002A9B                 jmp     loc_2831
.text:0000000000002AA0 ; ---------------------------------------------------------------------------
.text:0000000000002AA0
.text:0000000000002AA0 loc_2AA0:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002AA0                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002AA0                 mov     edx, 0Dh        ; jumptable 00000000000126DA case 13
.text:0000000000002AA5                 xor     r10d, r10d
.text:0000000000002AA8                 mov     ebx, 72h ; 'r'
.text:0000000000002AAD                 jmp     loc_26E2
.text:0000000000002AAD ; ---------------------------------------------------------------------------
.text:0000000000002AB2                 align 8
.text:0000000000002AB8
.text:0000000000002AB8 loc_2AB8:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002AB8                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002AB8                 mov     ebx, 76h ; 'v'  ; jumptable 00000000000126DA case 11
.text:0000000000002ABD                 jmp     loc_2760
.text:0000000000002ABD ; ---------------------------------------------------------------------------
.text:0000000000002AC2                 align 8
.text:0000000000002AC8
.text:0000000000002AC8 loc_2AC8:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002AC8                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002AC8                 mov     edx, 9          ; jumptable 00000000000126DA case 9
.text:0000000000002ACD                 xor     r10d, r10d
.text:0000000000002AD0                 mov     ebx, 74h ; 't'
.text:0000000000002AD5                 jmp     loc_26E2
.text:0000000000002AD5 ; ---------------------------------------------------------------------------
.text:0000000000002ADA                 align 20h
.text:0000000000002AE0
.text:0000000000002AE0 loc_2AE0:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000002AE0                                         ; DATA XREF: .rodata:jpt_293A↓o
.text:0000000000002AE0                 mov     ebx, 62h ; 'b'  ; jumptable 00000000000126DA case 8
.text:0000000000002AE5                 jmp     loc_2760
.text:0000000000002AE5 ; ---------------------------------------------------------------------------
.text:0000000000002AEA                 align 10h
.text:0000000000002AF0
.text:0000000000002AF0 loc_2AF0:                               ; CODE XREF: quotearg_buffer_restyled+178↑j
.text:0000000000002AF0                                         ; quotearg_buffer_restyled+1B1↑j
.text:0000000000002AF0                 xor     r10d, r10d
.text:0000000000002AF3                 jmp     loc_2590
.text:0000000000002AF3 ; ---------------------------------------------------------------------------
.text:0000000000002AF8                 align 20h
.text:0000000000002B00
.text:0000000000002B00 loc_2B00:                               ; CODE XREF: quotearg_buffer_restyled+36D↑j
.text:0000000000002B00                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000002B05                 jnz     loc_3470
.text:0000000000002B0B
.text:0000000000002B0B loc_2B0B:                               ; CODE XREF: quotearg_buffer_restyled+38F↑j
.text:0000000000002B0B                 add     rbp, 1
.text:0000000000002B0F                 mov     eax, r8d
.text:0000000000002B12                 xor     r12d, r12d
.text:0000000000002B15                 mov     ebx, 5Ch ; '\'
.text:0000000000002B1A                 jmp     loc_262C
.text:0000000000002B1A ; ---------------------------------------------------------------------------
.text:0000000000002B1F                 align 20h
.text:0000000000002B20
.text:0000000000002B20 loc_2B20:                               ; CODE XREF: quotearg_buffer_restyled+105↑j
.text:0000000000002B20                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000002B25                 movzx   ebx, [rsp+0E8h+var_D9]
.text:0000000000002B2A                 mov     r12d, r8d
.text:0000000000002B2D                 mov     rbp, r11
.text:0000000000002B30                 setz    dl
.text:0000000000002B33                 mov     eax, ebx
.text:0000000000002B35                 test    r15, r15
.text:0000000000002B38                 setz    cl
.text:0000000000002B3B                 and     eax, edx
.text:0000000000002B3D                 and     al, cl
.text:0000000000002B3F                 jnz     loc_35A6
.text:0000000000002B45                 mov     eax, ebx
.text:0000000000002B47                 xor     eax, 1
.text:0000000000002B4A                 and     dl, al
.text:0000000000002B4C                 jz      loc_34BC
.text:0000000000002B52                 cmp     [rsp+0E8h+var_6C], 0
.text:0000000000002B57                 jz      loc_34BA
.text:0000000000002B5D                 cmp     [rsp+0E8h+var_DA], 0
.text:0000000000002B62                 jnz     loc_355D
.text:0000000000002B68                 test    r13, r13
.text:0000000000002B6B                 setz    al
.text:0000000000002B6E                 cmp     [rsp+0E8h+var_98], 0
.text:0000000000002B74                 setnz   dl
.text:0000000000002B77                 and     al, dl
.text:0000000000002B79                 jz      loc_359C
.text:0000000000002B7F                 mov     r13, [rsp+0E8h+var_98]
.text:0000000000002B84
.text:0000000000002B84 loc_2B84:                               ; CODE XREF: quotearg_buffer_restyled+121D↓j
.text:0000000000002B84                 lea     rbx, asc_5695   ; "'"
.text:0000000000002B8B                 mov     byte ptr [r14], 27h ; '''
.text:0000000000002B8F                 mov     [rsp+0E8h+var_E0], 2
.text:0000000000002B97                 mov     r15d, 1
.text:0000000000002B9D                 mov     [rsp+0E8h+n], 1
.text:0000000000002BA6                 mov     [rsp+0E8h+var_D9], 0
.text:0000000000002BAB                 mov     [rsp+0E8h+s2], rbx
.text:0000000000002BB0                 mov     [rsp+0E8h+var_6C], al
.text:0000000000002BB4                 jmp     loc_2493
.text:0000000000002BB4 ; ---------------------------------------------------------------------------
.text:0000000000002BB9                 align 20h
.text:0000000000002BC0
.text:0000000000002BC0 loc_2BC0:                               ; CODE XREF: quotearg_buffer_restyled+2F8↑j
.text:0000000000002BC0                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000002BC5                 jnz     loc_3470
.text:0000000000002BCB                 test    r13, r13
.text:0000000000002BCE                 jz      loc_2FD0
.text:0000000000002BD4                 xor     edx, edx
.text:0000000000002BD6                 cmp     [rsp+0E8h+var_98], 0
.text:0000000000002BDC                 jnz     loc_2FD0
.text:0000000000002BE2
.text:0000000000002BE2 loc_2BE2:                               ; CODE XREF: quotearg_buffer_restyled+C44↓j
.text:0000000000002BE2                                         ; quotearg_buffer_restyled+122A↓j
.text:0000000000002BE2                 mov     [rsp+0E8h+var_98], r13
.text:0000000000002BE7                 add     r15, 3
.text:0000000000002BEB                 xor     eax, eax
.text:0000000000002BED                 mov     [rsp+0E8h+var_6C], r12b
.text:0000000000002BF2                 xor     r8d, r8d
.text:0000000000002BF5                 mov     r13, rdx
.text:0000000000002BF8                 mov     ebx, 27h ; '''
.text:0000000000002BFD                 jmp     loc_2619
.text:0000000000002BFD ; ---------------------------------------------------------------------------
.text:0000000000002C02                 align 8
.text:0000000000002C08
.text:0000000000002C08 loc_2C08:                               ; CODE XREF: quotearg_buffer_restyled+2D3↑j
.text:0000000000002C08                 test    byte ptr [rsp+0E8h+var_70], 4
.text:0000000000002C0D                 jz      short loc_2C30
.text:0000000000002C0F                 lea     rcx, [rbp+2]
.text:0000000000002C13                 cmp     rcx, r11
.text:0000000000002C16                 jnb     short loc_2C30
.text:0000000000002C18                 mov     rax, [rsp+0E8h+s]
.text:0000000000002C1D                 cmp     byte ptr [rax+rbp+1], 3Fh ; '?'
.text:0000000000002C22                 jz      loc_33B2
.text:0000000000002C28                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000002C30
.text:0000000000002C30 loc_2C30:                               ; CODE XREF: quotearg_buffer_restyled+84D↑j
.text:0000000000002C30                                         ; quotearg_buffer_restyled+856↑j ...
.text:0000000000002C30                 xor     edx, edx
.text:0000000000002C32                 xor     r12d, r12d
.text:0000000000002C35                 xor     eax, eax
.text:0000000000002C37                 mov     ebx, 3Fh ; '?'
.text:0000000000002C3C                 jmp     loc_25E8
.text:0000000000002C3C ; ---------------------------------------------------------------------------
.text:0000000000002C41                 align 8
.text:0000000000002C48
.text:0000000000002C48 loc_2C48:                               ; CODE XREF: quotearg_buffer_restyled+2CA↑j
.text:0000000000002C48                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000002C4D                 jnz     loc_3470
.text:0000000000002C53                 xor     r12d, r12d
.text:0000000000002C56                 xor     eax, eax
.text:0000000000002C58                 mov     ebx, 3Fh ; '?'
.text:0000000000002C5D                 jmp     loc_2619
.text:0000000000002C5D ; ---------------------------------------------------------------------------
.text:0000000000002C62                 align 8
.text:0000000000002C68
.text:0000000000002C68 loc_2C68:                               ; CODE XREF: quotearg_buffer_restyled+4FE↑j
.text:0000000000002C68                 lea     rax, [rsp+0E8h+var_48]
.text:0000000000002C70                 cmp     r11, 0FFFFFFFFFFFFFFFFh
.text:0000000000002C74                 mov     [rsp+0E8h+var_48], 0
.text:0000000000002C80                 mov     [rsp+0E8h+ps], rax
.text:0000000000002C85                 jnz     short loc_2CB4
.text:0000000000002C87                 mov     rdi, [rsp+0E8h+s] ; s
.text:0000000000002C8C                 mov     byte ptr [rsp+0E8h+var_A8], r8b
.text:0000000000002C91                 mov     byte ptr [rsp+0E8h+var_B0], r10b
.text:0000000000002C96                 mov     [rsp+0E8h+var_B8], r9
.text:0000000000002C9B                 call    _strlen
.text:0000000000002CA0                 movzx   r8d, byte ptr [rsp+0E8h+var_A8]
.text:0000000000002CA6                 movzx   r10d, byte ptr [rsp+0E8h+var_B0]
.text:0000000000002CAC                 mov     r11, rax
.text:0000000000002CAF                 mov     r9, [rsp+0E8h+var_B8]
.text:0000000000002CB4
.text:0000000000002CB4 loc_2CB4:                               ; CODE XREF: quotearg_buffer_restyled+8C5↑j
.text:0000000000002CB4                 lea     rax, [rsp+0E8h+wc]
.text:0000000000002CBC                 xor     ecx, ecx
.text:0000000000002CBE                 mov     [rsp+0E8h+var_6A], bl
.text:0000000000002CC2                 mov     [rsp+0E8h+var_6B], r8b
.text:0000000000002CC7                 mov     rbx, rcx
.text:0000000000002CCA                 mov     [rsp+0E8h+var_60], r9
.text:0000000000002CD2                 mov     [rsp+0E8h+var_B0], rax
.text:0000000000002CD7                 mov     [rsp+0E8h+var_69], r10b
.text:0000000000002CDC                 mov     [rsp+0E8h+var_68], r15
.text:0000000000002CE4                 mov     [rsp+0E8h+var_A8], r14
.text:0000000000002CE9                 mov     [rsp+0E8h+var_78], r13
.text:0000000000002CEE                 mov     [rsp+0E8h+var_B8], r11
.text:0000000000002CF3
.text:0000000000002CF3 loc_2CF3:                               ; CODE XREF: quotearg_buffer_restyled+9AF↓j
.text:0000000000002CF3                 mov     rax, [rsp+0E8h+s]
.text:0000000000002CF8                 lea     r14, [rbp+rbx+0]
.text:0000000000002CFD                 mov     rdx, [rsp+0E8h+var_B8]
.text:0000000000002D02                 mov     rcx, [rsp+0E8h+ps]
.text:0000000000002D07                 mov     rdi, [rsp+0E8h+var_B0]
.text:0000000000002D0C                 lea     r13, [rax+r14]
.text:0000000000002D10                 sub     rdx, r14
.text:0000000000002D13                 mov     rsi, r13
.text:0000000000002D16                 call    rpl_mbrtowc
.text:0000000000002D1B                 test    rax, rax
.text:0000000000002D1E                 mov     r15, rax
.text:0000000000002D21                 jz      short loc_2D71
.text:0000000000002D23                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000002D27                 jz      loc_3345
.text:0000000000002D2D                 cmp     rax, 0FFFFFFFFFFFFFFFEh
.text:0000000000002D31                 jz      loc_32D1
.text:0000000000002D37                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000002D3C                 setz    al
.text:0000000000002D3F                 and     al, [rsp+0E8h+var_D9]
.text:0000000000002D43                 jnz     loc_2EE0
.text:0000000000002D49
.text:0000000000002D49 loc_2D49:                               ; CODE XREF: quotearg_buffer_restyled+B24↓j
.text:0000000000002D49                                         ; quotearg_buffer_restyled+B47↓j
.text:0000000000002D49                 mov     edi, [rsp+0E8h+wc] ; wc
.text:0000000000002D50                 call    _iswprint
.text:0000000000002D55                 mov     rdi, [rsp+0E8h+ps] ; ps
.text:0000000000002D5A                 test    eax, eax
.text:0000000000002D5C                 mov     eax, 0
.text:0000000000002D61                 cmovz   r12d, eax
.text:0000000000002D65                 add     rbx, r15
.text:0000000000002D68                 call    _mbsinit
.text:0000000000002D6D                 test    eax, eax
.text:0000000000002D6F                 jz      short loc_2CF3
.text:0000000000002D71
.text:0000000000002D71 loc_2D71:                               ; CODE XREF: quotearg_buffer_restyled+961↑j
.text:0000000000002D71                 mov     edx, r12d
.text:0000000000002D74                 mov     rdi, rbx
.text:0000000000002D77                 movzx   r8d, [rsp+0E8h+var_6B]
.text:0000000000002D7D                 xor     edx, 1
.text:0000000000002D80                 movzx   ebx, [rsp+0E8h+var_6A]
.text:0000000000002D85                 movzx   r10d, [rsp+0E8h+var_69]
.text:0000000000002D8B                 and     dl, [rsp+0E8h+var_DB]
.text:0000000000002D8F                 mov     r15, [rsp+0E8h+var_68]
.text:0000000000002D97                 mov     r14, [rsp+0E8h+var_A8]
.text:0000000000002D9C                 mov     r13, [rsp+0E8h+var_78]
.text:0000000000002DA1                 mov     r11, [rsp+0E8h+var_B8]
.text:0000000000002DA6
.text:0000000000002DA6 loc_2DA6:                               ; CODE XREF: quotearg_buffer_restyled+F80↓j
.text:0000000000002DA6                                         ; quotearg_buffer_restyled+FB8↓j
.text:0000000000002DA6                 cmp     rdi, 1
.text:0000000000002DAA                 jbe     loc_33AB
.text:0000000000002DB0
.text:0000000000002DB0 loc_2DB0:                               ; CODE XREF: quotearg_buffer_restyled+EE9↓j
.text:0000000000002DB0                 mov     rcx, rdi
.text:0000000000002DB3                 xor     esi, esi
.text:0000000000002DB5                 movzx   r9d, [rsp+0E8h+var_D9]
.text:0000000000002DBB                 add     rcx, rbp
.text:0000000000002DBE                 mov     rdi, [rsp+0E8h+s]
.text:0000000000002DC3                 jmp     loc_2E7E
.text:0000000000002DC3 ; ---------------------------------------------------------------------------
.text:0000000000002DC8                 align 10h
.text:0000000000002DD0
.text:0000000000002DD0 loc_2DD0:                               ; CODE XREF: quotearg_buffer_restyled+AC0↓j
.text:0000000000002DD0                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000002DD5                 setz    al
.text:0000000000002DD8                 test    r9b, r9b
.text:0000000000002DDB                 jnz     loc_3290
.text:0000000000002DE1                 mov     esi, r8d
.text:0000000000002DE4                 xor     esi, 1
.text:0000000000002DE7                 and     al, sil
.text:0000000000002DEA                 jz      short loc_2E1B
.text:0000000000002DEC                 cmp     r13, r15
.text:0000000000002DEF                 jbe     short loc_2DF6
.text:0000000000002DF1                 mov     byte ptr [r14+r15], 27h ; '''
.text:0000000000002DF6
.text:0000000000002DF6 loc_2DF6:                               ; CODE XREF: quotearg_buffer_restyled+A2F↑j
.text:0000000000002DF6                 lea     rsi, [r15+1]
.text:0000000000002DFA                 cmp     r13, rsi
.text:0000000000002DFD                 jbe     short loc_2E05
.text:0000000000002DFF                 mov     byte ptr [r14+r15+1], 24h ; '$'
.text:0000000000002E05
.text:0000000000002E05 loc_2E05:                               ; CODE XREF: quotearg_buffer_restyled+A3D↑j
.text:0000000000002E05                 lea     rsi, [r15+2]
.text:0000000000002E09                 cmp     r13, rsi
.text:0000000000002E0C                 jbe     short loc_2E14
.text:0000000000002E0E                 mov     byte ptr [r14+r15+2], 27h ; '''
.text:0000000000002E14
.text:0000000000002E14 loc_2E14:                               ; CODE XREF: quotearg_buffer_restyled+A4C↑j
.text:0000000000002E14                 add     r15, 3
.text:0000000000002E18                 mov     r8d, eax
.text:0000000000002E1B
.text:0000000000002E1B loc_2E1B:                               ; CODE XREF: quotearg_buffer_restyled+A2A↑j
.text:0000000000002E1B                 cmp     r13, r15
.text:0000000000002E1E                 jbe     short loc_2E25
.text:0000000000002E20                 mov     byte ptr [r14+r15], 5Ch ; '\'
.text:0000000000002E25
.text:0000000000002E25 loc_2E25:                               ; CODE XREF: quotearg_buffer_restyled+A5E↑j
.text:0000000000002E25                 lea     rax, [r15+1]
.text:0000000000002E29                 cmp     r13, rax
.text:0000000000002E2C                 jbe     short loc_2E3B
.text:0000000000002E2E                 mov     eax, ebx
.text:0000000000002E30                 shr     al, 6
.text:0000000000002E33                 add     eax, 30h ; '0'
.text:0000000000002E36                 mov     [r14+r15+1], al
.text:0000000000002E3B
.text:0000000000002E3B loc_2E3B:                               ; CODE XREF: quotearg_buffer_restyled+A6C↑j
.text:0000000000002E3B                 lea     rax, [r15+2]
.text:0000000000002E3F                 cmp     r13, rax
.text:0000000000002E42                 jbe     short loc_2E54
.text:0000000000002E44                 mov     eax, ebx
.text:0000000000002E46                 shr     al, 3
.text:0000000000002E49                 and     eax, 7
.text:0000000000002E4C                 add     eax, 30h ; '0'
.text:0000000000002E4F                 mov     [r14+r15+2], al
.text:0000000000002E54
.text:0000000000002E54 loc_2E54:                               ; CODE XREF: quotearg_buffer_restyled+A82↑j
.text:0000000000002E54                 and     ebx, 7
.text:0000000000002E57                 add     rbp, 1
.text:0000000000002E5B                 add     r15, 3
.text:0000000000002E5F                 add     ebx, 30h ; '0'
.text:0000000000002E62                 cmp     rbp, rcx
.text:0000000000002E65                 jnb     loc_2650
.text:0000000000002E6B                 mov     esi, edx
.text:0000000000002E6D
.text:0000000000002E6D loc_2E6D:                               ; CODE XREF: quotearg_buffer_restyled+B19↓j
.text:0000000000002E6D                                         ; quotearg_buffer_restyled+EF1↓j
.text:0000000000002E6D                 cmp     r13, r15
.text:0000000000002E70                 jbe     short loc_2E76
.text:0000000000002E72                 mov     [r14+r15], bl
.text:0000000000002E76
.text:0000000000002E76 loc_2E76:                               ; CODE XREF: quotearg_buffer_restyled+AB0↑j
.text:0000000000002E76                 movzx   ebx, byte ptr [rdi+rbp]
.text:0000000000002E7A                 add     r15, 1
.text:0000000000002E7E
.text:0000000000002E7E loc_2E7E:                               ; CODE XREF: quotearg_buffer_restyled+A03↑j
.text:0000000000002E7E                 test    dl, dl
.text:0000000000002E80                 jnz     loc_2DD0
.text:0000000000002E86                 mov     eax, esi
.text:0000000000002E88                 xor     eax, 1
.text:0000000000002E8B                 and     eax, r8d
.text:0000000000002E8E                 test    r10b, r10b
.text:0000000000002E91                 jz      short loc_2EA1
.text:0000000000002E93                 cmp     r13, r15
.text:0000000000002E96                 jbe     short loc_2E9D
.text:0000000000002E98                 mov     byte ptr [r14+r15], 5Ch ; '\'
.text:0000000000002E9D
.text:0000000000002E9D loc_2E9D:                               ; CODE XREF: quotearg_buffer_restyled+AD6↑j
.text:0000000000002E9D                 add     r15, 1
.text:0000000000002EA1
.text:0000000000002EA1 loc_2EA1:                               ; CODE XREF: quotearg_buffer_restyled+AD1↑j
.text:0000000000002EA1                 add     rbp, 1
.text:0000000000002EA5                 cmp     rbp, rcx
.text:0000000000002EA8                 jnb     loc_262C
.text:0000000000002EAE                 test    al, al
.text:0000000000002EB0                 jz      loc_32AE
.text:0000000000002EB6                 cmp     r13, r15
.text:0000000000002EB9                 jbe     short loc_2EC0
.text:0000000000002EBB                 mov     byte ptr [r14+r15], 27h ; '''
.text:0000000000002EC0
.text:0000000000002EC0 loc_2EC0:                               ; CODE XREF: quotearg_buffer_restyled+AF9↑j
.text:0000000000002EC0                 lea     rax, [r15+1]
.text:0000000000002EC4                 cmp     r13, rax
.text:0000000000002EC7                 jbe     short loc_2ECF
.text:0000000000002EC9                 mov     byte ptr [r14+r15+1], 27h ; '''
.text:0000000000002ECF
.text:0000000000002ECF loc_2ECF:                               ; CODE XREF: quotearg_buffer_restyled+B07↑j
.text:0000000000002ECF                 add     r15, 2
.text:0000000000002ED3                 xor     r10d, r10d
.text:0000000000002ED6                 xor     r8d, r8d
.text:0000000000002ED9                 jmp     short loc_2E6D
.text:0000000000002ED9 ; ---------------------------------------------------------------------------
.text:0000000000002EDB                 align 20h
.text:0000000000002EE0
.text:0000000000002EE0 loc_2EE0:                               ; CODE XREF: quotearg_buffer_restyled+983↑j
.text:0000000000002EE0                 cmp     r15, 1
.text:0000000000002EE4                 jz      loc_2D49
.text:0000000000002EEA                 mov     rdi, [rsp+0E8h+s]
.text:0000000000002EEF                 lea     rcx, [rdi+r15]
.text:0000000000002EF3                 lea     rdx, [rdi+r14+1]
.text:0000000000002EF8                 lea     r8, [rcx+r14]
.text:0000000000002EFC                 jmp     short loc_2F0D
.text:0000000000002EFC ; ---------------------------------------------------------------------------
.text:0000000000002EFE                 align 20h
.text:0000000000002F00
.text:0000000000002F00 loc_2F00:                               ; CODE XREF: quotearg_buffer_restyled+B56↓j
.text:0000000000002F00                                         ; quotearg_buffer_restyled+B70↓j
.text:0000000000002F00                 add     rdx, 1
.text:0000000000002F04                 cmp     r8, rdx
.text:0000000000002F07                 jz      loc_2D49
.text:0000000000002F0D
.text:0000000000002F0D loc_2F0D:                               ; CODE XREF: quotearg_buffer_restyled+B3C↑j
.text:0000000000002F0D                 movzx   ecx, byte ptr [rdx]
.text:0000000000002F10                 sub     ecx, 5Bh ; '['
.text:0000000000002F13                 cmp     cl, 21h ; '!'
.text:0000000000002F16                 ja      short loc_2F00
.text:0000000000002F18                 mov     esi, 1
.text:0000000000002F1D                 shl     rsi, cl
.text:0000000000002F20                 mov     rcx, rsi
.text:0000000000002F23                 mov     rsi, 20000002Bh
.text:0000000000002F2D                 test    rcx, rsi
.text:0000000000002F30                 jz      short loc_2F00
.text:0000000000002F32                 mov     r14, [rsp+0E8h+var_A8]
.text:0000000000002F37                 mov     r13, [rsp+0E8h+var_78]
.text:0000000000002F3C                 mov     rbp, [rsp+0E8h+var_B8]
.text:0000000000002F41                 mov     [rsp+0E8h+var_E0], 2
.text:0000000000002F49
.text:0000000000002F49 loc_2F49:                               ; CODE XREF: quotearg_buffer_restyled+489↑j
.text:0000000000002F49                                         ; quotearg_buffer_restyled+C0B↓j ...
.text:0000000000002F49                 cmp     [rsp+0E8h+var_DB], 0
.text:0000000000002F4E                 jz      short loc_2F60
.text:0000000000002F50                 test    al, al
.text:0000000000002F52                 mov     eax, 4
.text:0000000000002F57                 cmovz   eax, [rsp+0E8h+var_E0]
.text:0000000000002F5C                 mov     [rsp+0E8h+var_E0], eax
.text:0000000000002F60
.text:0000000000002F60 loc_2F60:                               ; CODE XREF: quotearg_buffer_restyled+B8E↑j
.text:0000000000002F60                                         ; quotearg_buffer_restyled+1205↓j
.text:0000000000002F60                 sub     rsp, 8
.text:0000000000002F64                 mov     rcx, rbp
.text:0000000000002F67                 mov     rsi, r13
.text:0000000000002F6A                 push    [rsp+0F0h+var_88]
.text:0000000000002F6E                 push    [rsp+0F8h+var_80]
.text:0000000000002F72                 mov     rdi, r14
.text:0000000000002F75                 push    0
.text:0000000000002F77                 mov     r9d, [rsp+108h+var_70]
.text:0000000000002F7F                 mov     r8d, [rsp+108h+var_E0]
.text:0000000000002F84                 mov     rdx, [rsp+108h+s]
.text:0000000000002F89                 and     r9d, 0FFFFFFFDh
.text:0000000000002F8D                 call    quotearg_buffer_restyled
.text:0000000000002F92                 add     rsp, 20h
.text:0000000000002F96                 mov     r15, rax
.text:0000000000002F99
.text:0000000000002F99 loc_2F99:                               ; CODE XREF: quotearg_buffer_restyled+1135↓j
.text:0000000000002F99                                         ; quotearg_buffer_restyled+1140↓j ...
.text:0000000000002F99                 mov     rbx, [rsp+0E8h+var_40]
.text:0000000000002FA1                 xor     rbx, fs:28h
.text:0000000000002FAA                 mov     rax, r15
.text:0000000000002FAD                 jnz     loc_35B3
.text:0000000000002FB3                 add     rsp, 0B8h
.text:0000000000002FBA                 pop     rbx
.text:0000000000002FBB                 pop     rbp
.text:0000000000002FBC                 pop     r12
.text:0000000000002FBE                 pop     r13
.text:0000000000002FC0                 pop     r14
.text:0000000000002FC2                 pop     r15
.text:0000000000002FC4                 retn
.text:0000000000002FC4 ; ---------------------------------------------------------------------------
.text:0000000000002FC5                 align 8
.text:0000000000002FC8
.text:0000000000002FC8 loc_2FC8:                               ; CODE XREF: quotearg_buffer_restyled+3B2↑j
.text:0000000000002FC8                 mov     rbp, r11
.text:0000000000002FCB                 jmp     loc_2F49
.text:0000000000002FD0 ; ---------------------------------------------------------------------------
.text:0000000000002FD0
.text:0000000000002FD0 loc_2FD0:                               ; CODE XREF: quotearg_buffer_restyled+80E↑j
.text:0000000000002FD0                                         ; quotearg_buffer_restyled+81C↑j
.text:0000000000002FD0                 cmp     r13, r15
.text:0000000000002FD3                 jbe     short loc_2FDA
.text:0000000000002FD5                 mov     byte ptr [r14+r15], 27h ; '''
.text:0000000000002FDA
.text:0000000000002FDA loc_2FDA:                               ; CODE XREF: quotearg_buffer_restyled+C13↑j
.text:0000000000002FDA                 lea     rax, [r15+1]
.text:0000000000002FDE                 cmp     r13, rax
.text:0000000000002FE1                 jbe     short loc_2FE9
.text:0000000000002FE3                 mov     byte ptr [r14+r15+1], 5Ch ; '\'
.text:0000000000002FE9
.text:0000000000002FE9 loc_2FE9:                               ; CODE XREF: quotearg_buffer_restyled+C21↑j
.text:0000000000002FE9                 lea     rax, [r15+2]
.text:0000000000002FED                 cmp     r13, rax
.text:0000000000002FF0                 jbe     loc_35E2
.text:0000000000002FF6                 mov     rdx, r13
.text:0000000000002FF9                 mov     byte ptr [r14+r15+2], 27h ; '''
.text:0000000000002FFF                 mov     r13, [rsp+0E8h+var_98]
.text:0000000000003004                 jmp     loc_2BE2
.text:0000000000003009 ; ---------------------------------------------------------------------------
.text:0000000000003009
.text:0000000000003009 loc_3009:                               ; CODE XREF: quotearg_buffer_restyled+643↑j
.text:0000000000003009                 mov     eax, r12d
.text:000000000000300C                 mov     ebx, 30h ; '0'
.text:0000000000003011                 xor     r12d, r12d
.text:0000000000003014                 jmp     loc_2619
.text:0000000000003019 ; ---------------------------------------------------------------------------
.text:0000000000003019
.text:0000000000003019 loc_3019:                               ; CODE XREF: quotearg_buffer_restyled+623↑j
.text:0000000000003019                 mov     byte ptr [r14+r15+2], 27h ; '''
.text:000000000000301F                 jmp     loc_29E9
.text:0000000000003024 ; ---------------------------------------------------------------------------
.text:0000000000003024
.text:0000000000003024 loc_3024:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000003024                                         ; DATA XREF: .rodata:jpt_2451↓o
.text:0000000000003024                 test    ebx, ebx        ; jumptable 00000000000121F1 case 4
.text:0000000000003026                 jnz     loc_2453        ; jumptable 00000000000121F1 case 1
.text:000000000000302C                 mov     [rsp+0E8h+var_DB], 1
.text:0000000000003031
.text:0000000000003031 loc_3031:                               ; CODE XREF: quotearg_buffer_restyled+11FD↓j
.text:0000000000003031                 test    r13, r13
.text:0000000000003034                 jnz     loc_35CA
.text:000000000000303A                 lea     rax, asc_5695   ; "'"
.text:0000000000003041                 mov     [rsp+0E8h+var_98], 0
.text:000000000000304A                 mov     [rsp+0E8h+var_DA], 1
.text:000000000000304F                 mov     [rsp+0E8h+var_6C], 0
.text:0000000000003054                 xor     r12d, r12d
.text:0000000000003057                 mov     [rsp+0E8h+var_D9], 0
.text:000000000000305C                 mov     [rsp+0E8h+n], 1
.text:0000000000003065                 mov     [rsp+0E8h+s2], rax
.text:000000000000306A                 mov     r15d, 1
.text:0000000000003070                 mov     [rsp+0E8h+var_E0], 2
.text:0000000000003078                 jmp     loc_2493
.text:0000000000003078 ; ---------------------------------------------------------------------------
.text:000000000000307D                 align 20h
.text:0000000000003080
.text:0000000000003080 loc_3080:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000003080                                         ; DATA XREF: .rodata:jpt_2451↓o
.text:0000000000003080                 test    ebx, ebx        ; jumptable 00000000000121F1 case 5
.text:0000000000003082                 jnz     loc_347D
.text:0000000000003088                 test    r13, r13
.text:000000000000308B                 jz      loc_32B6
.text:0000000000003091                 mov     byte ptr [r14], 22h ; '"'
.text:0000000000003095                 mov     [rsp+0E8h+var_DA], 1
.text:000000000000309A                 xor     r12d, r12d
.text:000000000000309D                 mov     [rsp+0E8h+var_6C], 0
.text:00000000000030A2                 mov     [rsp+0E8h+var_98], 0
.text:00000000000030AB
.text:00000000000030AB loc_30AB:                               ; CODE XREF: quotearg_buffer_restyled+F0C↓j
.text:00000000000030AB                 lea     rax, unk_5693
.text:00000000000030B2                 mov     [rsp+0E8h+var_D9], 0
.text:00000000000030B7                 mov     [rsp+0E8h+var_DB], 1
.text:00000000000030BC                 mov     [rsp+0E8h+n], 1
.text:00000000000030C5                 mov     r15d, 1
.text:00000000000030CB                 mov     [rsp+0E8h+s2], rax
.text:00000000000030D0                 jmp     loc_2493
.text:00000000000030D5 ; ---------------------------------------------------------------------------
.text:00000000000030D5
.text:00000000000030D5 loc_30D5:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:00000000000030D5                                         ; DATA XREF: .rodata:jpt_2451↓o
.text:00000000000030D5                 lea     rax, unk_5693   ; jumptable 00000000000121F1 case 6
.text:00000000000030DC                 mov     [rsp+0E8h+var_DA], 1
.text:00000000000030E1                 mov     [rsp+0E8h+var_6C], 0
.text:00000000000030E6                 xor     r12d, r12d
.text:00000000000030E9                 mov     [rsp+0E8h+var_98], 0
.text:00000000000030F2                 mov     [rsp+0E8h+var_D9], 1
.text:00000000000030F7                 mov     [rsp+0E8h+var_DB], 1
.text:00000000000030FC                 mov     [rsp+0E8h+n], 1
.text:0000000000003105                 xor     r15d, r15d
.text:0000000000003108                 mov     [rsp+0E8h+s2], rax
.text:000000000000310D                 mov     [rsp+0E8h+var_E0], 5
.text:0000000000003115                 jmp     loc_2493
.text:000000000000311A ; ---------------------------------------------------------------------------
.text:000000000000311A
.text:000000000000311A loc_311A:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:000000000000311A                                         ; DATA XREF: .rodata:jpt_2451↓o
.text:000000000000311A                 mov     [rsp+0E8h+var_DA], 1 ; jumptable 00000000000121F1 case 7
.text:000000000000311F                 mov     [rsp+0E8h+var_6C], 0
.text:0000000000003124                 xor     r12d, r12d
.text:0000000000003127                 mov     [rsp+0E8h+var_98], 0
.text:0000000000003130                 mov     [rsp+0E8h+var_D9], 0
.text:0000000000003135                 xor     r15d, r15d
.text:0000000000003138                 mov     [rsp+0E8h+var_DB], 1
.text:000000000000313D                 mov     [rsp+0E8h+n], 0
.text:0000000000003146                 mov     [rsp+0E8h+s2], 0
.text:000000000000314F                 jmp     loc_2493
.text:0000000000003154 ; ---------------------------------------------------------------------------
.text:0000000000003154
.text:0000000000003154 loc_3154:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000003154                                         ; DATA XREF: .rodata:jpt_2451↓o
.text:0000000000003154                 cmp     [rsp+0E8h+var_E0], 0Ah ; jumptable 00000000000121F1 cases 8-10
.text:0000000000003159                 jz      short loc_31B1
.text:000000000000315B                 lea     rsi, asc_5697   ; "`"
.text:0000000000003162                 xor     edi, edi        ; domainname
.text:0000000000003164                 mov     edx, 5          ; category
.text:0000000000003169                 call    _dcgettext
.text:000000000000316E                 mov     rcx, rax
.text:0000000000003171                 mov     [rsp+0E8h+var_80], rax
.text:0000000000003176                 lea     rax, asc_5697   ; "`"
.text:000000000000317D                 cmp     rcx, rax
.text:0000000000003180                 jz      loc_351E
.text:0000000000003186
.text:0000000000003186 loc_3186:                               ; CODE XREF: quotearg_buffer_restyled+116F↓j
.text:0000000000003186                 lea     rsi, asc_5695   ; "'"
.text:000000000000318D                 xor     edi, edi        ; domainname
.text:000000000000318F                 mov     edx, 5          ; category
.text:0000000000003194                 call    _dcgettext
.text:0000000000003199                 mov     rcx, rax
.text:000000000000319C                 mov     [rsp+0E8h+var_88], rax
.text:00000000000031A1                 lea     rax, asc_5695   ; "'"
.text:00000000000031A8                 cmp     rcx, rax
.text:00000000000031AB                 jz      loc_3534
.text:00000000000031B1
.text:00000000000031B1 loc_31B1:                               ; CODE XREF: quotearg_buffer_restyled+D99↑j
.text:00000000000031B1                                         ; quotearg_buffer_restyled+1185↓j
.text:00000000000031B1                 xor     r15d, r15d
.text:00000000000031B4                 test    ebx, ebx
.text:00000000000031B6                 jz      loc_337D
.text:00000000000031BC
.text:00000000000031BC loc_31BC:                               ; CODE XREF: quotearg_buffer_restyled+FC7↓j
.text:00000000000031BC                                         ; quotearg_buffer_restyled+FE6↓j
.text:00000000000031BC                 test    ebx, ebx
.text:00000000000031BE                 mov     rbx, [rsp+0E8h+var_88]
.text:00000000000031C3                 setnz   [rsp+0E8h+var_D9]
.text:00000000000031C8                 xor     r12d, r12d
.text:00000000000031CB                 mov     rdi, rbx        ; s
.text:00000000000031CE                 call    _strlen
.text:00000000000031D3                 mov     [rsp+0E8h+s2], rbx
.text:00000000000031D8                 mov     [rsp+0E8h+n], rax
.text:00000000000031DD                 mov     [rsp+0E8h+var_DA], 1
.text:00000000000031E2                 mov     [rsp+0E8h+var_6C], 0
.text:00000000000031E7                 mov     [rsp+0E8h+var_98], 0
.text:00000000000031F0                 mov     [rsp+0E8h+var_DB], 1
.text:00000000000031F5                 jmp     loc_2493
.text:00000000000031FA ; ---------------------------------------------------------------------------
.text:00000000000031FA
.text:00000000000031FA loc_31FA:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:00000000000031FA                                         ; DATA XREF: .rodata:jpt_2451↓o
.text:00000000000031FA                 mov     [rsp+0E8h+var_DA], 1 ; jumptable 00000000000121F1 case 0
.text:00000000000031FF                 mov     [rsp+0E8h+var_6C], 0
.text:0000000000003204                 xor     r12d, r12d
.text:0000000000003207                 mov     [rsp+0E8h+var_98], 0
.text:0000000000003210                 mov     [rsp+0E8h+var_D9], 0
.text:0000000000003215                 xor     r15d, r15d
.text:0000000000003218                 mov     [rsp+0E8h+var_DB], 0
.text:000000000000321D                 mov     [rsp+0E8h+n], 0
.text:0000000000003226                 mov     [rsp+0E8h+s2], 0
.text:000000000000322F                 jmp     loc_2493
.text:0000000000003234 ; ---------------------------------------------------------------------------
.text:0000000000003234
.text:0000000000003234 loc_3234:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000003234                                         ; DATA XREF: .rodata:jpt_2451↓o
.text:0000000000003234                 mov     [rsp+0E8h+var_DA], 1 ; jumptable 00000000000121F1 case 3
.text:0000000000003239                 mov     [rsp+0E8h+var_6C], 0
.text:000000000000323E                 xor     r12d, r12d
.text:0000000000003241                 mov     [rsp+0E8h+var_98], 0
.text:000000000000324A                 mov     [rsp+0E8h+var_D9], 1
.text:000000000000324F                 mov     [rsp+0E8h+var_DB], 1
.text:0000000000003254                 jmp     loc_2473
.text:0000000000003259 ; ---------------------------------------------------------------------------
.text:0000000000003259
.text:0000000000003259 loc_3259:                               ; CODE XREF: quotearg_buffer_restyled+665↑j
.text:0000000000003259                 cmp     r13, r15
.text:000000000000325C                 jbe     short loc_3263
.text:000000000000325E                 mov     byte ptr [r14+r15], 30h ; '0'
.text:0000000000003263
.text:0000000000003263 loc_3263:                               ; CODE XREF: quotearg_buffer_restyled+E9C↑j
.text:0000000000003263                 lea     rax, [rcx+2]
.text:0000000000003267                 cmp     r13, rax
.text:000000000000326A                 jbe     short loc_3272
.text:000000000000326C                 mov     byte ptr [r14+rcx+2], 30h ; '0'
.text:0000000000003272
.text:0000000000003272 loc_3272:                               ; CODE XREF: quotearg_buffer_restyled+EAA↑j
.text:0000000000003272                 mov     eax, r12d
.text:0000000000003275                 lea     r15, [rcx+3]
.text:0000000000003279                 xor     r12d, r12d
.text:000000000000327C                 mov     ebx, 30h ; '0'
.text:0000000000003281                 jmp     loc_25E8
.text:0000000000003281 ; ---------------------------------------------------------------------------
.text:0000000000003286                 align 10h
.text:0000000000003290
.text:0000000000003290 loc_3290:                               ; CODE XREF: quotearg_buffer_restyled+A1B↑j
.text:0000000000003290                 movzx   ebx, [rsp+0E8h+var_D9]
.text:0000000000003295                 mov     rbp, r11
.text:0000000000003298                 mov     [rsp+0E8h+var_DB], bl
.text:000000000000329C                 jmp     loc_2F49
.text:00000000000032A1 ; ---------------------------------------------------------------------------
.text:00000000000032A1
.text:00000000000032A1 loc_32A1:                               ; CODE XREF: quotearg_buffer_restyled+549↑j
.text:00000000000032A1                 movzx   edx, [rsp+0E8h+var_DB]
.text:00000000000032A6                 xor     r12d, r12d
.text:00000000000032A9                 jmp     loc_2DB0
.text:00000000000032AE ; ---------------------------------------------------------------------------
.text:00000000000032AE
.text:00000000000032AE loc_32AE:                               ; CODE XREF: quotearg_buffer_restyled+AF0↑j
.text:00000000000032AE                 xor     r10d, r10d
.text:00000000000032B1                 jmp     loc_2E6D
.text:00000000000032B6 ; ---------------------------------------------------------------------------
.text:00000000000032B6
.text:00000000000032B6 loc_32B6:                               ; CODE XREF: quotearg_buffer_restyled+CCB↑j
.text:00000000000032B6                 mov     [rsp+0E8h+var_98], 0
.text:00000000000032BF                 mov     [rsp+0E8h+var_DA], 1
.text:00000000000032C4                 xor     r12d, r12d
.text:00000000000032C7                 mov     [rsp+0E8h+var_6C], 0
.text:00000000000032CC                 jmp     loc_30AB
.text:00000000000032D1 ; ---------------------------------------------------------------------------
.text:00000000000032D1
.text:00000000000032D1 loc_32D1:                               ; CODE XREF: quotearg_buffer_restyled+971↑j
.text:00000000000032D1                 mov     r11, [rsp+0E8h+var_B8]
.text:00000000000032D6                 mov     rsi, r14
.text:00000000000032D9                 mov     rcx, r13
.text:00000000000032DC                 mov     rax, rbx
.text:00000000000032DF                 mov     rdi, rbx
.text:00000000000032E2                 movzx   r8d, [rsp+0E8h+var_6B]
.text:00000000000032E8                 movzx   ebx, [rsp+0E8h+var_6A]
.text:00000000000032ED                 mov     r9, [rsp+0E8h+var_60]
.text:00000000000032F5                 cmp     rsi, r11
.text:00000000000032F8                 movzx   r10d, [rsp+0E8h+var_69]
.text:00000000000032FE                 mov     r15, [rsp+0E8h+var_68]
.text:0000000000003306                 mov     r14, [rsp+0E8h+var_A8]
.text:000000000000330B                 mov     r13, [rsp+0E8h+var_78]
.text:0000000000003310                 jnb     short loc_3338
.text:0000000000003312                 cmp     byte ptr [rcx], 0
.text:0000000000003315                 jnz     short loc_3327
.text:0000000000003317                 jmp     short loc_3338
.text:0000000000003317 ; ---------------------------------------------------------------------------
.text:0000000000003319                 align 20h
.text:0000000000003320
.text:0000000000003320 loc_3320:                               ; CODE XREF: quotearg_buffer_restyled+F73↓j
.text:0000000000003320                 cmp     byte ptr [r9+rax], 0
.text:0000000000003325                 jz      short loc_3335
.text:0000000000003327
.text:0000000000003327 loc_3327:                               ; CODE XREF: quotearg_buffer_restyled+F55↑j
.text:0000000000003327                 add     rax, 1
.text:000000000000332B                 lea     rdx, [rbp+rax+0]
.text:0000000000003330                 cmp     r11, rdx
.text:0000000000003333                 ja      short loc_3320
.text:0000000000003335
.text:0000000000003335 loc_3335:                               ; CODE XREF: quotearg_buffer_restyled+F65↑j
.text:0000000000003335                 mov     rdi, rax
.text:0000000000003338
.text:0000000000003338 loc_3338:                               ; CODE XREF: quotearg_buffer_restyled+F50↑j
.text:0000000000003338                                         ; quotearg_buffer_restyled+F57↑j
.text:0000000000003338                 movzx   edx, [rsp+0E8h+var_DB]
.text:000000000000333D                 xor     r12d, r12d
.text:0000000000003340                 jmp     loc_2DA6
.text:0000000000003345 ; ---------------------------------------------------------------------------
.text:0000000000003345
.text:0000000000003345 loc_3345:                               ; CODE XREF: quotearg_buffer_restyled+967↑j
.text:0000000000003345                 mov     rdi, rbx
.text:0000000000003348                 movzx   r8d, [rsp+0E8h+var_6B]
.text:000000000000334E                 movzx   ebx, [rsp+0E8h+var_6A]
.text:0000000000003353                 movzx   r10d, [rsp+0E8h+var_69]
.text:0000000000003359                 mov     r15, [rsp+0E8h+var_68]
.text:0000000000003361                 xor     r12d, r12d
.text:0000000000003364                 mov     r14, [rsp+0E8h+var_A8]
.text:0000000000003369                 mov     r13, [rsp+0E8h+var_78]
.text:000000000000336E                 mov     r11, [rsp+0E8h+var_B8]
.text:0000000000003373                 movzx   edx, [rsp+0E8h+var_DB]
.text:0000000000003378                 jmp     loc_2DA6
.text:000000000000337D ; ---------------------------------------------------------------------------
.text:000000000000337D
.text:000000000000337D loc_337D:                               ; CODE XREF: quotearg_buffer_restyled+DF6↑j
.text:000000000000337D                 mov     rdx, [rsp+0E8h+var_80]
.text:0000000000003382                 movzx   eax, byte ptr [rdx]
.text:0000000000003385                 test    al, al
.text:0000000000003387                 jz      loc_31BC
.text:000000000000338D                 nop     dword ptr [rax]
.text:0000000000003390
.text:0000000000003390 loc_3390:                               ; CODE XREF: quotearg_buffer_restyled+FE4↓j
.text:0000000000003390                 cmp     r13, r15
.text:0000000000003393                 jbe     short loc_3399
.text:0000000000003395                 mov     [r14+r15], al
.text:0000000000003399
.text:0000000000003399 loc_3399:                               ; CODE XREF: quotearg_buffer_restyled+FD3↑j
.text:0000000000003399                 add     r15, 1
.text:000000000000339D                 movzx   eax, byte ptr [rdx+r15]
.text:00000000000033A2                 test    al, al
.text:00000000000033A4                 jnz     short loc_3390
.text:00000000000033A6                 jmp     loc_31BC
.text:00000000000033AB ; ---------------------------------------------------------------------------
.text:00000000000033AB
.text:00000000000033AB loc_33AB:                               ; CODE XREF: quotearg_buffer_restyled+9EA↑j
.text:00000000000033AB                 mov     eax, edx
.text:00000000000033AD                 jmp     loc_2907
.text:00000000000033B2 ; ---------------------------------------------------------------------------
.text:00000000000033B2
.text:00000000000033B2 loc_33B2:                               ; CODE XREF: quotearg_buffer_restyled+862↑j
.text:00000000000033B2                 movzx   ebx, byte ptr [rax+rcx]
.text:00000000000033B6                 cmp     bl, 3Eh ; '>'
.text:00000000000033B9                 ja      loc_2C30
.text:00000000000033BF                 mov     rax, 7000A38200000000h
.text:00000000000033C9                 bt      rax, rbx
.text:00000000000033CD                 jnb     loc_2C30
.text:00000000000033D3                 cmp     [rsp+0E8h+var_D9], 0
.text:00000000000033D8                 jnz     loc_35C2
.text:00000000000033DE                 cmp     r13, r15
.text:00000000000033E1                 jbe     short loc_33E8
.text:00000000000033E3                 mov     byte ptr [r14+r15], 3Fh ; '?'
.text:00000000000033E8
.text:00000000000033E8 loc_33E8:                               ; CODE XREF: quotearg_buffer_restyled+1021↑j
.text:00000000000033E8                 lea     rax, [r15+1]
.text:00000000000033EC                 cmp     r13, rax
.text:00000000000033EF                 jbe     short loc_33F7
.text:00000000000033F1                 mov     byte ptr [r14+r15+1], 22h ; '"'
.text:00000000000033F7
.text:00000000000033F7 loc_33F7:                               ; CODE XREF: quotearg_buffer_restyled+102F↑j
.text:00000000000033F7                 lea     rax, [r15+2]
.text:00000000000033FB                 cmp     r13, rax
.text:00000000000033FE                 jbe     short loc_3406
.text:0000000000003400                 mov     byte ptr [r14+r15+2], 22h ; '"'
.text:0000000000003406
.text:0000000000003406 loc_3406:                               ; CODE XREF: quotearg_buffer_restyled+103E↑j
.text:0000000000003406                 lea     rax, [r15+3]
.text:000000000000340A                 cmp     r13, rax
.text:000000000000340D                 jbe     short loc_3415
.text:000000000000340F                 mov     byte ptr [r14+r15+3], 3Fh ; '?'
.text:0000000000003415
.text:0000000000003415 loc_3415:                               ; CODE XREF: quotearg_buffer_restyled+104D↑j
.text:0000000000003415                 add     r15, 4
.text:0000000000003419                 xor     edx, edx
.text:000000000000341B                 xor     r12d, r12d
.text:000000000000341E                 xor     eax, eax
.text:0000000000003420                 mov     rbp, rcx
.text:0000000000003423                 jmp     loc_25E8
.text:0000000000003428 ; ---------------------------------------------------------------------------
.text:0000000000003428
.text:0000000000003428 loc_3428:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000003428                                         ; DATA XREF: .rodata:jpt_2451↓o
.text:0000000000003428                 test    ebx, ebx        ; jumptable 00000000000121F1 case 2
.text:000000000000342A                 jz      loc_35B8
.text:0000000000003430                 lea     rax, asc_5695   ; "'"
.text:0000000000003437                 mov     [rsp+0E8h+var_DA], 1
.text:000000000000343C                 mov     [rsp+0E8h+var_6C], 0
.text:0000000000003441                 xor     r12d, r12d
.text:0000000000003444                 mov     [rsp+0E8h+var_98], 0
.text:000000000000344D                 mov     [rsp+0E8h+var_D9], 1
.text:0000000000003452                 mov     [rsp+0E8h+var_DB], 0
.text:0000000000003457                 mov     [rsp+0E8h+n], 1
.text:0000000000003460                 xor     r15d, r15d
.text:0000000000003463                 mov     [rsp+0E8h+s2], rax
.text:0000000000003468                 jmp     loc_2493
.text:0000000000003468 ; ---------------------------------------------------------------------------
.text:000000000000346D                 align 10h
.text:0000000000003470
.text:0000000000003470 loc_3470:                               ; CODE XREF: quotearg_buffer_restyled+745↑j
.text:0000000000003470                                         ; quotearg_buffer_restyled+805↑j ...
.text:0000000000003470                 mov     rbp, r11
.text:0000000000003473                 movzx   eax, [rsp+0E8h+var_D9]
.text:0000000000003478                 jmp     loc_2F49
.text:000000000000347D ; ---------------------------------------------------------------------------
.text:000000000000347D
.text:000000000000347D loc_347D:                               ; CODE XREF: quotearg_buffer_restyled+CC2↑j
.text:000000000000347D                 lea     rax, unk_5693
.text:0000000000003484                 mov     [rsp+0E8h+var_DA], 1
.text:0000000000003489                 mov     [rsp+0E8h+var_6C], 0
.text:000000000000348E                 xor     r12d, r12d
.text:0000000000003491                 mov     [rsp+0E8h+var_98], 0
.text:000000000000349A                 mov     [rsp+0E8h+var_D9], 1
.text:000000000000349F                 mov     [rsp+0E8h+var_DB], 1
.text:00000000000034A4                 mov     [rsp+0E8h+n], 1
.text:00000000000034AD                 xor     r15d, r15d
.text:00000000000034B0                 mov     [rsp+0E8h+s2], rax
.text:00000000000034B5                 jmp     loc_2493
.text:00000000000034BA ; ---------------------------------------------------------------------------
.text:00000000000034BA
.text:00000000000034BA loc_34BA:                               ; CODE XREF: quotearg_buffer_restyled+797↑j
.text:00000000000034BA                 mov     eax, edx
.text:00000000000034BC
.text:00000000000034BC loc_34BC:                               ; CODE XREF: quotearg_buffer_restyled+78C↑j
.text:00000000000034BC                                         ; quotearg_buffer_restyled+11E1↓j
.text:00000000000034BC                 mov     rbx, [rsp+0E8h+s2]
.text:00000000000034C1                 test    rbx, rbx
.text:00000000000034C4                 jz      short loc_34F2
.text:00000000000034C6                 test    al, al
.text:00000000000034C8                 jz      short loc_34F2
.text:00000000000034CA                 movzx   ecx, byte ptr [rbx]
.text:00000000000034CD                 mov     rax, rbx
.text:00000000000034D0                 test    cl, cl
.text:00000000000034D2                 jz      short loc_34F2
.text:00000000000034D4                 mov     rdx, r15
.text:00000000000034D7                 sub     rax, r15
.text:00000000000034DA
.text:00000000000034DA loc_34DA:                               ; CODE XREF: quotearg_buffer_restyled+112D↓j
.text:00000000000034DA                 cmp     r13, rdx
.text:00000000000034DD                 jbe     short loc_34E3
.text:00000000000034DF                 mov     [r14+rdx], cl
.text:00000000000034E3
.text:00000000000034E3 loc_34E3:                               ; CODE XREF: quotearg_buffer_restyled+111D↑j
.text:00000000000034E3                 add     rdx, 1
.text:00000000000034E7                 movzx   ecx, byte ptr [rax+rdx]
.text:00000000000034EB                 test    cl, cl
.text:00000000000034ED                 jnz     short loc_34DA
.text:00000000000034EF                 mov     r15, rdx
.text:00000000000034F2
.text:00000000000034F2 loc_34F2:                               ; CODE XREF: quotearg_buffer_restyled+1104↑j
.text:00000000000034F2                                         ; quotearg_buffer_restyled+1108↑j ...
.text:00000000000034F2                 cmp     r13, r15
.text:00000000000034F5                 jbe     loc_2F99
.text:00000000000034FB                 mov     byte ptr [r14+r15], 0
.text:0000000000003500                 jmp     loc_2F99
.text:0000000000003505 ; ---------------------------------------------------------------------------
.text:0000000000003505
.text:0000000000003505 loc_3505:                               ; CODE XREF: quotearg_buffer_restyled+1C2↑j
.text:0000000000003505                 cmp     [rsp+0E8h+var_E0], 2
.text:000000000000350A                 movzx   ebx, [rsp+0E8h+var_D9]
.text:000000000000350F                 mov     rbp, r11
.text:0000000000003512                 setz    al
.text:0000000000003515                 mov     [rsp+0E8h+var_DB], bl
.text:0000000000003519                 jmp     loc_2F49
.text:000000000000351E ; ---------------------------------------------------------------------------
.text:000000000000351E
.text:000000000000351E loc_351E:                               ; CODE XREF: quotearg_buffer_restyled+DC0↑j
.text:000000000000351E                 mov     esi, [rsp+0E8h+var_E0]
.text:0000000000003522                 mov     rdi, rcx
.text:0000000000003525                 call    gettext_quote
.text:000000000000352A                 mov     [rsp+0E8h+var_80], rax
.text:000000000000352F                 jmp     loc_3186
.text:0000000000003534 ; ---------------------------------------------------------------------------
.text:0000000000003534
.text:0000000000003534 loc_3534:                               ; CODE XREF: quotearg_buffer_restyled+DEB↑j
.text:0000000000003534                 mov     esi, [rsp+0E8h+var_E0]
.text:0000000000003538                 mov     rdi, rcx
.text:000000000000353B                 call    gettext_quote
.text:0000000000003540                 mov     [rsp+0E8h+var_88], rax
.text:0000000000003545                 jmp     loc_31B1
.text:000000000000354A ; ---------------------------------------------------------------------------
.text:000000000000354A
.text:000000000000354A loc_354A:                               ; CODE XREF: quotearg_buffer_restyled+5F0↑j
.text:000000000000354A                 movzx   ebx, [rsp+0E8h+var_D9]
.text:000000000000354F                 mov     rbp, r11
.text:0000000000003552                 mov     eax, edx
.text:0000000000003554                 mov     [rsp+0E8h+var_DB], bl
.text:0000000000003558                 jmp     loc_2F49
.text:000000000000355D ; ---------------------------------------------------------------------------
.text:000000000000355D
.text:000000000000355D loc_355D:                               ; CODE XREF: quotearg_buffer_restyled+7A2↑j
.text:000000000000355D                 sub     rsp, 8
.text:0000000000003561                 mov     r8d, 5
.text:0000000000003567                 mov     rcx, r11
.text:000000000000356A                 push    [rsp+0F0h+var_88]
.text:000000000000356E                 push    [rsp+0F8h+var_80]
.text:0000000000003572                 mov     rdi, r14
.text:0000000000003575                 push    [rsp+100h+var_C8]
.text:0000000000003579                 mov     r9d, [rsp+108h+var_70]
.text:0000000000003581                 mov     rdx, [rsp+108h+s]
.text:0000000000003586                 mov     rsi, [rsp+108h+var_98]
.text:000000000000358B                 call    quotearg_buffer_restyled
.text:0000000000003590                 add     rsp, 20h
.text:0000000000003594                 mov     r15, rax
.text:0000000000003597                 jmp     loc_2F99
.text:000000000000359C ; ---------------------------------------------------------------------------
.text:000000000000359C
.text:000000000000359C loc_359C:                               ; CODE XREF: quotearg_buffer_restyled+7B9↑j
.text:000000000000359C                 movzx   eax, [rsp+0E8h+var_6C]
.text:00000000000035A1                 jmp     loc_34BC
.text:00000000000035A6 ; ---------------------------------------------------------------------------
.text:00000000000035A6
.text:00000000000035A6 loc_35A6:                               ; CODE XREF: quotearg_buffer_restyled+77F↑j
.text:00000000000035A6                 mov     [rsp+0E8h+var_E0], 2
.text:00000000000035AE                 jmp     loc_2F49
.text:00000000000035B3 ; ---------------------------------------------------------------------------
.text:00000000000035B3
.text:00000000000035B3 loc_35B3:                               ; CODE XREF: quotearg_buffer_restyled+BED↑j
.text:00000000000035B3                 call    ___stack_chk_fail
.text:00000000000035B8 ; ---------------------------------------------------------------------------
.text:00000000000035B8
.text:00000000000035B8 loc_35B8:                               ; CODE XREF: quotearg_buffer_restyled+106A↑j
.text:00000000000035B8                 mov     [rsp+0E8h+var_DB], 0
.text:00000000000035BD                 jmp     loc_3031
.text:00000000000035C2 ; ---------------------------------------------------------------------------
.text:00000000000035C2
.text:00000000000035C2 loc_35C2:                               ; CODE XREF: quotearg_buffer_restyled+1018↑j
.text:00000000000035C2                 mov     rbp, r11
.text:00000000000035C5                 jmp     loc_2F60
.text:00000000000035CA ; ---------------------------------------------------------------------------
.text:00000000000035CA
.text:00000000000035CA loc_35CA:                               ; CODE XREF: quotearg_buffer_restyled+C74↑j
.text:00000000000035CA                 mov     [rsp+0E8h+var_DA], 1
.text:00000000000035CF                 xor     eax, eax
.text:00000000000035D1                 xor     r12d, r12d
.text:00000000000035D4                 mov     [rsp+0E8h+var_98], 0
.text:00000000000035DD                 jmp     loc_2B84
.text:00000000000035E2 ; ---------------------------------------------------------------------------
.text:00000000000035E2
.text:00000000000035E2 loc_35E2:                               ; CODE XREF: quotearg_buffer_restyled+C30↑j
.text:00000000000035E2                 mov     rdx, r13
.text:00000000000035E5                 mov     r13, [rsp+0E8h+var_98]
.text:00000000000035EA                 jmp     loc_2BE2
.text:00000000000035EF ; ---------------------------------------------------------------------------
.text:00000000000035EF
.text:00000000000035EF def_2451:                               ; CODE XREF: quotearg_buffer_restyled+7A↑j
.text:00000000000035EF                 call    _abort          ; jumptable 00000000000121F1 default case
.text:00000000000035EF ; } // starts at 23C0
.text:00000000000035EF quotearg_buffer_restyled endp
.text:00000000000035EF
.text:00000000000035EF ; ---------------------------------------------------------------------------
.text:00000000000035F4                 align 20h
.text:0000000000003600
.text:0000000000003600 ; =============== S U B R O U T I N E =======================================
.text:0000000000003600
.text:0000000000003600
.text:0000000000003600 quotearg_n_options proc near            ; CODE XREF: quotearg_n+E↓j
.text:0000000000003600                                         ; quotearg_n_mem+7↓j ...
.text:0000000000003600
.text:0000000000003600 var_50          = qword ptr -50h
.text:0000000000003600 var_48          = qword ptr -48h
.text:0000000000003600 var_40          = dword ptr -40h
.text:0000000000003600 var_3C          = dword ptr -3Ch
.text:0000000000003600
.text:0000000000003600 ; __unwind {
.text:0000000000003600                 push    r15
.text:0000000000003602                 push    r14
.text:0000000000003604                 movsxd  r15, edi
.text:0000000000003607                 push    r13
.text:0000000000003609                 push    r12
.text:000000000000360B                 mov     r14, rdx
.text:000000000000360E                 push    rbp
.text:000000000000360F                 push    rbx
.text:0000000000003610                 mov     rbp, rcx
.text:0000000000003613                 sub     rsp, 28h
.text:0000000000003617                 mov     [rsp+58h+var_50], rsi
.text:000000000000361C                 call    ___errno_location
.text:0000000000003621                 mov     r13, rax
.text:0000000000003624                 mov     eax, [rax]
.text:0000000000003626                 test    r15d, r15d
.text:0000000000003629                 mov     rbx, cs:slotvec
.text:0000000000003630                 mov     [rsp+58h+var_40], eax
.text:0000000000003634                 js      loc_37A1
.text:000000000000363A                 cmp     cs:nslots, r15d
.text:0000000000003641                 jg      short loc_36A5
.text:0000000000003643                 cmp     r15d, 7FFFFFFFh
.text:000000000000364A                 jz      loc_37A6
.text:0000000000003650                 lea     r12d, [r15+1]
.text:0000000000003654                 lea     rax, slotvec0
.text:000000000000365B                 movsxd  rsi, r12d
.text:000000000000365E                 shl     rsi, 4
.text:0000000000003662                 cmp     rbx, rax
.text:0000000000003665                 jz      loc_3780
.text:000000000000366B                 mov     rdi, rbx
.text:000000000000366E                 call    xrealloc
.text:0000000000003673                 mov     rbx, rax
.text:0000000000003676                 mov     cs:slotvec, rax
.text:000000000000367D
.text:000000000000367D loc_367D:                               ; CODE XREF: quotearg_n_options+19C↓j
.text:000000000000367D                 movsxd  rdi, cs:nslots
.text:0000000000003684                 mov     edx, r12d
.text:0000000000003687                 xor     esi, esi        ; c
.text:0000000000003689                 sub     edx, edi
.text:000000000000368B                 shl     rdi, 4
.text:000000000000368F                 movsxd  rdx, edx
.text:0000000000003692                 add     rdi, rbx        ; s
.text:0000000000003695                 shl     rdx, 4          ; n
.text:0000000000003699                 call    _memset
.text:000000000000369E                 mov     cs:nslots, r12d
.text:00000000000036A5
.text:00000000000036A5 loc_36A5:                               ; CODE XREF: quotearg_n_options+41↑j
.text:00000000000036A5                 mov     eax, [rbp+4]
.text:00000000000036A8                 shl     r15, 4
.text:00000000000036AC                 sub     rsp, 8
.text:00000000000036B0                 add     rbx, r15
.text:00000000000036B3                 lea     r15, [rbp+8]
.text:00000000000036B7                 mov     r8d, [rbp+0]
.text:00000000000036BB                 mov     r11, [rbx]
.text:00000000000036BE                 mov     r12, [rbx+8]
.text:00000000000036C2                 mov     rcx, r14
.text:00000000000036C5                 or      eax, 1
.text:00000000000036C8                 mov     [rsp+60h+var_3C], eax
.text:00000000000036CC                 push    qword ptr [rbp+30h]
.text:00000000000036CF                 mov     r9d, eax
.text:00000000000036D2                 push    qword ptr [rbp+28h]
.text:00000000000036D5                 push    r15
.text:00000000000036D7                 mov     rsi, r11
.text:00000000000036DA                 mov     rdx, [rsp+78h+var_50]
.text:00000000000036DF                 mov     rdi, r12
.text:00000000000036E2                 mov     [rsp+78h+var_48], r11
.text:00000000000036E7                 call    quotearg_buffer_restyled
.text:00000000000036EC                 add     rsp, 20h
.text:00000000000036F0                 mov     r11, [rsp+58h+var_48]
.text:00000000000036F5                 cmp     r11, rax
.text:00000000000036F8                 ja      short loc_3761
.text:00000000000036FA                 lea     rsi, [rax+1]
.text:00000000000036FE                 lea     rax, slot0
.text:0000000000003705                 cmp     r12, rax
.text:0000000000003708                 mov     [rbx], rsi
.text:000000000000370B                 jz      short loc_371F
.text:000000000000370D                 mov     rdi, r12        ; ptr
.text:0000000000003710                 mov     [rsp+58h+var_48], rsi
.text:0000000000003715                 call    _free
.text:000000000000371A                 mov     rsi, [rsp+58h+var_48]
.text:000000000000371F
.text:000000000000371F loc_371F:                               ; CODE XREF: quotearg_n_options+10B↑j
.text:000000000000371F                 mov     rdi, rsi
.text:0000000000003722                 mov     [rsp+58h+var_48], rsi
.text:0000000000003727                 call    xmalloc
.text:000000000000372C                 sub     rsp, 8
.text:0000000000003730                 mov     [rbx+8], rax
.text:0000000000003734                 mov     r8d, [rbp+0]
.text:0000000000003738                 push    qword ptr [rbp+30h]
.text:000000000000373B                 push    qword ptr [rbp+28h]
.text:000000000000373E                 mov     rcx, r14
.text:0000000000003741                 push    r15
.text:0000000000003743                 mov     r9d, [rsp+78h+var_3C]
.text:0000000000003748                 mov     rdi, rax
.text:000000000000374B                 mov     rdx, [rsp+78h+var_50]
.text:0000000000003750                 mov     rsi, [rsp+78h+var_48]
.text:0000000000003755                 mov     r12, rax
.text:0000000000003758                 call    quotearg_buffer_restyled
.text:000000000000375D                 add     rsp, 20h
.text:0000000000003761
.text:0000000000003761 loc_3761:                               ; CODE XREF: quotearg_n_options+F8↑j
.text:0000000000003761                 mov     eax, [rsp+58h+var_40]
.text:0000000000003765                 mov     [r13+0], eax
.text:0000000000003769                 add     rsp, 28h
.text:000000000000376D                 mov     rax, r12
.text:0000000000003770                 pop     rbx
.text:0000000000003771                 pop     rbp
.text:0000000000003772                 pop     r12
.text:0000000000003774                 pop     r13
.text:0000000000003776                 pop     r14
.text:0000000000003778                 pop     r15
.text:000000000000377A                 retn
.text:000000000000377A ; ---------------------------------------------------------------------------
.text:000000000000377B                 align 20h
.text:0000000000003780
.text:0000000000003780 loc_3780:                               ; CODE XREF: quotearg_n_options+65↑j
.text:0000000000003780                 xor     edi, edi
.text:0000000000003782                 call    xrealloc
.text:0000000000003787                 movdqa  xmm0, xmmword ptr cs:slotvec0
.text:000000000000378F                 mov     rbx, rax
.text:0000000000003792                 mov     cs:slotvec, rax
.text:0000000000003799                 movups  xmmword ptr [rax], xmm0
.text:000000000000379C                 jmp     loc_367D
.text:00000000000037A1 ; ---------------------------------------------------------------------------
.text:00000000000037A1
.text:00000000000037A1 loc_37A1:                               ; CODE XREF: quotearg_n_options+34↑j
.text:00000000000037A1                 call    _abort
.text:00000000000037A6 ; ---------------------------------------------------------------------------
.text:00000000000037A6
.text:00000000000037A6 loc_37A6:                               ; CODE XREF: quotearg_n_options+4A↑j
.text:00000000000037A6                 call    xalloc_die
.text:00000000000037A6 ; } // starts at 3600
.text:00000000000037A6 quotearg_n_options endp
.text:00000000000037A6
.text:00000000000037A6 ; ---------------------------------------------------------------------------
.text:00000000000037AB                 align 10h
.text:00000000000037B0
.text:00000000000037B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000037B0
.text:00000000000037B0 ; Attributes: info_from_lumina
.text:00000000000037B0
.text:00000000000037B0 ; quoting_options *__fastcall clone_quoting_options(quoting_options *o)
.text:00000000000037B0                 public clone_quoting_options
.text:00000000000037B0 clone_quoting_options proc near
.text:00000000000037B0 ; __unwind {
.text:00000000000037B0                 push    r12
.text:00000000000037B2                 push    rbp
.text:00000000000037B3                 push    rbx
.text:00000000000037B4                 mov     rbx, rdi
.text:00000000000037B7                 call    ___errno_location
.text:00000000000037BC                 mov     r12d, [rax]
.text:00000000000037BF                 mov     rbp, rax
.text:00000000000037C2                 lea     rax, default_quoting_options
.text:00000000000037C9                 test    rbx, rbx
.text:00000000000037CC                 mov     esi, 38h ; '8'  ; n
.text:00000000000037D1                 cmovz   rbx, rax
.text:00000000000037D5                 mov     rdi, rbx        ; src
.text:00000000000037D8                 call    xmemdup
.text:00000000000037DD                 mov     [rbp+0], r12d
.text:00000000000037E1                 pop     rbx
.text:00000000000037E2                 pop     rbp
.text:00000000000037E3                 pop     r12
.text:00000000000037E5                 retn
.text:00000000000037E5 ; } // starts at 37B0
.text:00000000000037E5 clone_quoting_options endp
.text:00000000000037E5
.text:00000000000037E5 ; ---------------------------------------------------------------------------
.text:00000000000037E6                 align 10h
.text:00000000000037F0
.text:00000000000037F0 ; =============== S U B R O U T I N E =======================================
.text:00000000000037F0
.text:00000000000037F0
.text:00000000000037F0                 public get_quoting_style
.text:00000000000037F0 get_quoting_style proc near
.text:00000000000037F0 ; __unwind {
.text:00000000000037F0                 lea     rax, default_quoting_options
.text:00000000000037F7                 test    rdi, rdi
.text:00000000000037FA                 cmovz   rdi, rax
.text:00000000000037FE                 mov     eax, [rdi]
.text:0000000000003800                 retn
.text:0000000000003800 ; } // starts at 37F0
.text:0000000000003800 get_quoting_style endp
.text:0000000000003800
.text:0000000000003800 ; ---------------------------------------------------------------------------
.text:0000000000003801                 align 10h
.text:0000000000003810
.text:0000000000003810 ; =============== S U B R O U T I N E =======================================
.text:0000000000003810
.text:0000000000003810
.text:0000000000003810                 public set_quoting_style
.text:0000000000003810 set_quoting_style proc near
.text:0000000000003810 ; __unwind {
.text:0000000000003810                 lea     rax, default_quoting_options
.text:0000000000003817                 test    rdi, rdi
.text:000000000000381A                 cmovz   rdi, rax
.text:000000000000381E                 mov     [rdi], esi
.text:0000000000003820                 retn
.text:0000000000003820 ; } // starts at 3810
.text:0000000000003820 set_quoting_style endp
.text:0000000000003820
.text:0000000000003820 ; ---------------------------------------------------------------------------
.text:0000000000003821                 align 10h
.text:0000000000003830
.text:0000000000003830 ; =============== S U B R O U T I N E =======================================
.text:0000000000003830
.text:0000000000003830 ; Attributes: info_from_lumina
.text:0000000000003830
.text:0000000000003830 ; int __fastcall set_char_quoting(quoting_options *o, char c, int i)
.text:0000000000003830                 public set_char_quoting
.text:0000000000003830 set_char_quoting proc near
.text:0000000000003830 ; __unwind {
.text:0000000000003830                 lea     rax, default_quoting_options
.text:0000000000003837                 test    rdi, rdi
.text:000000000000383A                 mov     ecx, esi
.text:000000000000383C                 cmovz   rdi, rax
.text:0000000000003840                 mov     eax, esi
.text:0000000000003842                 and     ecx, 1Fh
.text:0000000000003845                 shr     al, 5
.text:0000000000003848                 movzx   eax, al
.text:000000000000384B                 lea     rdi, [rdi+rax*4+8]
.text:0000000000003850                 mov     esi, [rdi]
.text:0000000000003852                 mov     eax, esi
.text:0000000000003854                 shr     eax, cl
.text:0000000000003856                 xor     edx, eax
.text:0000000000003858                 and     eax, 1
.text:000000000000385B                 and     edx, 1
.text:000000000000385E                 shl     edx, cl
.text:0000000000003860                 xor     edx, esi
.text:0000000000003862                 mov     [rdi], edx
.text:0000000000003864                 retn
.text:0000000000003864 ; } // starts at 3830
.text:0000000000003864 set_char_quoting endp
.text:0000000000003864
.text:0000000000003864 ; ---------------------------------------------------------------------------
.text:0000000000003865                 align 10h
.text:0000000000003870
.text:0000000000003870 ; =============== S U B R O U T I N E =======================================
.text:0000000000003870
.text:0000000000003870
.text:0000000000003870                 public set_quoting_flags
.text:0000000000003870 set_quoting_flags proc near
.text:0000000000003870 ; __unwind {
.text:0000000000003870                 lea     rax, default_quoting_options
.text:0000000000003877                 test    rdi, rdi
.text:000000000000387A                 cmovz   rdi, rax
.text:000000000000387E                 mov     eax, [rdi+4]
.text:0000000000003881                 mov     [rdi+4], esi
.text:0000000000003884                 retn
.text:0000000000003884 ; } // starts at 3870
.text:0000000000003884 set_quoting_flags endp
.text:0000000000003884
.text:0000000000003884 ; ---------------------------------------------------------------------------
.text:0000000000003885                 align 10h
.text:0000000000003890
.text:0000000000003890 ; =============== S U B R O U T I N E =======================================
.text:0000000000003890
.text:0000000000003890 ; Attributes: info_from_lumina
.text:0000000000003890
.text:0000000000003890 ; void __fastcall set_custom_quoting(quoting_options *o, const char *left_quote, const char *right_quote)
.text:0000000000003890                 public set_custom_quoting
.text:0000000000003890 set_custom_quoting proc near
.text:0000000000003890 ; __unwind {
.text:0000000000003890                 lea     rax, default_quoting_options
.text:0000000000003897                 test    rdi, rdi
.text:000000000000389A                 cmovz   rdi, rax
.text:000000000000389E                 test    rsi, rsi
.text:00000000000038A1                 mov     dword ptr [rdi], 0Ah
.text:00000000000038A7                 jz      short loc_38B7
.text:00000000000038A9                 test    rdx, rdx
.text:00000000000038AC                 jz      short loc_38B7
.text:00000000000038AE                 mov     [rdi+28h], rsi
.text:00000000000038B2                 mov     [rdi+30h], rdx
.text:00000000000038B6                 retn
.text:00000000000038B7 ; ---------------------------------------------------------------------------
.text:00000000000038B7
.text:00000000000038B7 loc_38B7:                               ; CODE XREF: set_custom_quoting+17↑j
.text:00000000000038B7                                         ; set_custom_quoting+1C↑j
.text:00000000000038B7                 sub     rsp, 8
.text:00000000000038BB                 call    _abort
.text:00000000000038BB ; } // starts at 3890
.text:00000000000038BB set_custom_quoting endp
.text:00000000000038BB
.text:00000000000038C0
.text:00000000000038C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000038C0
.text:00000000000038C0 ; Attributes: info_from_lumina
.text:00000000000038C0
.text:00000000000038C0 ; size_t __fastcall quotearg_buffer(char *buffer, size_t buffersize, const char *arg, size_t argsize, const quoting_options *o)
.text:00000000000038C0                 public quotearg_buffer
.text:00000000000038C0 quotearg_buffer proc near
.text:00000000000038C0
.text:00000000000038C0 var_40          = qword ptr -40h
.text:00000000000038C0
.text:00000000000038C0 ; __unwind {
.text:00000000000038C0                 push    r15
.text:00000000000038C2                 push    r14
.text:00000000000038C4                 lea     rax, default_quoting_options
.text:00000000000038CB                 push    r13
.text:00000000000038CD                 push    r12
.text:00000000000038CF                 mov     r13, rdi
.text:00000000000038D2                 push    rbp
.text:00000000000038D3                 push    rbx
.text:00000000000038D4                 mov     rbx, r8
.text:00000000000038D7                 mov     r14, rsi
.text:00000000000038DA                 mov     r15, rdx
.text:00000000000038DD                 sub     rsp, 18h
.text:00000000000038E1                 test    r8, r8
.text:00000000000038E4                 cmovz   rbx, rax
.text:00000000000038E8                 mov     [rsp+48h+var_40], rcx
.text:00000000000038ED                 call    ___errno_location
.text:00000000000038F2                 mov     r12d, [rax]
.text:00000000000038F5                 mov     rbp, rax
.text:00000000000038F8                 lea     rax, [rbx+8]
.text:00000000000038FC                 sub     rsp, 8
.text:0000000000003900                 mov     r9d, [rbx+4]
.text:0000000000003904                 push    qword ptr [rbx+30h]
.text:0000000000003907                 mov     r8d, [rbx]
.text:000000000000390A                 push    qword ptr [rbx+28h]
.text:000000000000390D                 mov     rdx, r15
.text:0000000000003910                 push    rax
.text:0000000000003911                 mov     rcx, [rsp+68h+var_40]
.text:0000000000003916                 mov     rsi, r14
.text:0000000000003919                 mov     rdi, r13
.text:000000000000391C                 call    quotearg_buffer_restyled
.text:0000000000003921                 mov     [rbp+0], r12d
.text:0000000000003925                 add     rsp, 38h
.text:0000000000003929                 pop     rbx
.text:000000000000392A                 pop     rbp
.text:000000000000392B                 pop     r12
.text:000000000000392D                 pop     r13
.text:000000000000392F                 pop     r14
.text:0000000000003931                 pop     r15
.text:0000000000003933                 retn
.text:0000000000003933 ; } // starts at 38C0
.text:0000000000003933 quotearg_buffer endp
.text:0000000000003933
.text:0000000000003933 ; ---------------------------------------------------------------------------
.text:0000000000003934                 align 20h
.text:0000000000003940
.text:0000000000003940 ; =============== S U B R O U T I N E =======================================
.text:0000000000003940
.text:0000000000003940 ; Attributes: info_from_lumina
.text:0000000000003940
.text:0000000000003940 ; char *__fastcall quotearg_alloc_mem(const char *arg, size_t argsize, size_t *size, const quoting_options *o)
.text:0000000000003940                 public quotearg_alloc_mem
.text:0000000000003940 quotearg_alloc_mem proc near            ; CODE XREF: quotearg_alloc+5↓j
.text:0000000000003940
.text:0000000000003940 var_5C          = dword ptr -5Ch
.text:0000000000003940 var_58          = qword ptr -58h
.text:0000000000003940 var_50          = qword ptr -50h
.text:0000000000003940 var_48          = qword ptr -48h
.text:0000000000003940 var_40          = qword ptr -40h
.text:0000000000003940
.text:0000000000003940 ; __unwind {
.text:0000000000003940                 push    r15
.text:0000000000003942                 push    r14
.text:0000000000003944                 lea     rax, default_quoting_options
.text:000000000000394B                 push    r13
.text:000000000000394D                 push    r12
.text:000000000000394F                 mov     r12, rdx
.text:0000000000003952                 push    rbp
.text:0000000000003953                 push    rbx
.text:0000000000003954                 mov     rbx, rcx
.text:0000000000003957                 mov     r14, rdi
.text:000000000000395A                 mov     r15, rsi
.text:000000000000395D                 sub     rsp, 38h
.text:0000000000003961                 test    rcx, rcx
.text:0000000000003964                 cmovz   rbx, rax
.text:0000000000003968                 xor     ebp, ebp
.text:000000000000396A                 call    ___errno_location
.text:000000000000396F                 test    r12, r12
.text:0000000000003972                 mov     r13, rax
.text:0000000000003975                 mov     eax, [rax]
.text:0000000000003977                 setz    bpl
.text:000000000000397B                 or      ebp, [rbx+4]
.text:000000000000397E                 lea     r10, [rbx+8]
.text:0000000000003982                 sub     rsp, 8
.text:0000000000003986                 mov     r8d, [rbx]
.text:0000000000003989                 mov     rcx, r15
.text:000000000000398C                 mov     [rsp+70h+var_5C], eax
.text:0000000000003990                 push    qword ptr [rbx+30h]
.text:0000000000003993                 mov     rdx, r14
.text:0000000000003996                 push    qword ptr [rbx+28h]
.text:0000000000003999                 push    r10
.text:000000000000399B                 xor     esi, esi
.text:000000000000399D                 mov     r9d, ebp
.text:00000000000039A0                 xor     edi, edi
.text:00000000000039A2                 mov     [rsp+88h+var_48], r10
.text:00000000000039A7                 call    quotearg_buffer_restyled
.text:00000000000039AC                 lea     rsi, [rax+1]
.text:00000000000039B0                 mov     [rsp+88h+var_40], rax
.text:00000000000039B5                 add     rsp, 20h
.text:00000000000039B9                 mov     rdi, rsi
.text:00000000000039BC                 mov     [rsp+68h+var_50], rsi
.text:00000000000039C1                 call    xmalloc
.text:00000000000039C6                 mov     [rsp+68h+var_58], rax
.text:00000000000039CB                 sub     rsp, 8
.text:00000000000039CF                 push    qword ptr [rbx+30h]
.text:00000000000039D2                 push    qword ptr [rbx+28h]
.text:00000000000039D5                 mov     r10, [rsp+80h+var_48]
.text:00000000000039DA                 mov     r9d, ebp
.text:00000000000039DD                 mov     r8d, [rbx]
.text:00000000000039E0                 mov     rcx, r15
.text:00000000000039E3                 mov     rdx, r14
.text:00000000000039E6                 mov     rdi, rax
.text:00000000000039E9                 push    r10
.text:00000000000039EB                 mov     rsi, [rsp+88h+var_50]
.text:00000000000039F0                 call    quotearg_buffer_restyled
.text:00000000000039F5                 mov     eax, [rsp+88h+var_5C]
.text:00000000000039F9                 add     rsp, 20h
.text:00000000000039FD                 test    r12, r12
.text:0000000000003A00                 mov     [r13+0], eax
.text:0000000000003A04                 jz      short loc_3A0F
.text:0000000000003A06                 mov     r11, [rsp+68h+var_40]
.text:0000000000003A0B                 mov     [r12], r11
.text:0000000000003A0F
.text:0000000000003A0F loc_3A0F:                               ; CODE XREF: quotearg_alloc_mem+C4↑j
.text:0000000000003A0F                 mov     rax, [rsp+68h+var_58]
.text:0000000000003A14                 add     rsp, 38h
.text:0000000000003A18                 pop     rbx
.text:0000000000003A19                 pop     rbp
.text:0000000000003A1A                 pop     r12
.text:0000000000003A1C                 pop     r13
.text:0000000000003A1E                 pop     r14
.text:0000000000003A20                 pop     r15
.text:0000000000003A22                 retn
.text:0000000000003A22 ; } // starts at 3940
.text:0000000000003A22 quotearg_alloc_mem endp
.text:0000000000003A22
.text:0000000000003A22 ; ---------------------------------------------------------------------------
.text:0000000000003A23                 align 10h
.text:0000000000003A30
.text:0000000000003A30 ; =============== S U B R O U T I N E =======================================
.text:0000000000003A30
.text:0000000000003A30
.text:0000000000003A30                 public quotearg_alloc
.text:0000000000003A30 quotearg_alloc  proc near
.text:0000000000003A30 ; __unwind {
.text:0000000000003A30                 mov     rcx, rdx
.text:0000000000003A33                 xor     edx, edx
.text:0000000000003A35                 jmp     quotearg_alloc_mem
.text:0000000000003A35 ; } // starts at 3A30
.text:0000000000003A35 quotearg_alloc  endp
.text:0000000000003A35
.text:0000000000003A35 ; ---------------------------------------------------------------------------
.text:0000000000003A3A                 align 20h
.text:0000000000003A40
.text:0000000000003A40 ; =============== S U B R O U T I N E =======================================
.text:0000000000003A40
.text:0000000000003A40 ; Attributes: info_from_lumina
.text:0000000000003A40
.text:0000000000003A40 ; void __cdecl quotearg_free()
.text:0000000000003A40                 public quotearg_free
.text:0000000000003A40 quotearg_free   proc near
.text:0000000000003A40 ; __unwind {
.text:0000000000003A40                 mov     eax, cs:nslots
.text:0000000000003A46                 push    r12
.text:0000000000003A48                 mov     r12, cs:slotvec
.text:0000000000003A4F                 push    rbp
.text:0000000000003A50                 push    rbx
.text:0000000000003A51                 cmp     eax, 1
.text:0000000000003A54                 jle     short loc_3A81
.text:0000000000003A56                 sub     eax, 2
.text:0000000000003A59                 lea     rbx, [r12+18h]
.text:0000000000003A5E                 shl     rax, 4
.text:0000000000003A62                 lea     rbp, [r12+rax+28h]
.text:0000000000003A67                 nop     word ptr [rax+rax+00000000h]
.text:0000000000003A70
.text:0000000000003A70 loc_3A70:                               ; CODE XREF: quotearg_free+3F↓j
.text:0000000000003A70                 mov     rdi, [rbx]      ; ptr
.text:0000000000003A73                 add     rbx, 10h
.text:0000000000003A77                 call    _free
.text:0000000000003A7C                 cmp     rbx, rbp
.text:0000000000003A7F                 jnz     short loc_3A70
.text:0000000000003A81
.text:0000000000003A81 loc_3A81:                               ; CODE XREF: quotearg_free+14↑j
.text:0000000000003A81                 mov     rdi, [r12+8]    ; ptr
.text:0000000000003A86                 lea     rbx, slot0
.text:0000000000003A8D                 cmp     rdi, rbx
.text:0000000000003A90                 jz      short loc_3AA9
.text:0000000000003A92                 call    _free
.text:0000000000003A97                 mov     cs:slotvec0, 100h
.text:0000000000003AA2                 mov     cs:off_208078, rbx
.text:0000000000003AA9
.text:0000000000003AA9 loc_3AA9:                               ; CODE XREF: quotearg_free+50↑j
.text:0000000000003AA9                 lea     rbx, slotvec0
.text:0000000000003AB0                 cmp     r12, rbx
.text:0000000000003AB3                 jz      short loc_3AC4
.text:0000000000003AB5                 mov     rdi, r12        ; ptr
.text:0000000000003AB8                 call    _free
.text:0000000000003ABD                 mov     cs:slotvec, rbx
.text:0000000000003AC4
.text:0000000000003AC4 loc_3AC4:                               ; CODE XREF: quotearg_free+73↑j
.text:0000000000003AC4                 pop     rbx
.text:0000000000003AC5                 mov     cs:nslots, 1
.text:0000000000003ACF                 pop     rbp
.text:0000000000003AD0                 pop     r12
.text:0000000000003AD2                 retn
.text:0000000000003AD2 ; } // starts at 3A40
.text:0000000000003AD2 quotearg_free   endp
.text:0000000000003AD2
.text:0000000000003AD2 ; ---------------------------------------------------------------------------
.text:0000000000003AD3                 align 20h
.text:0000000000003AE0
.text:0000000000003AE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000003AE0
.text:0000000000003AE0
.text:0000000000003AE0                 public quotearg_n
.text:0000000000003AE0 quotearg_n      proc near
.text:0000000000003AE0 ; __unwind {
.text:0000000000003AE0                 lea     rcx, default_quoting_options
.text:0000000000003AE7                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000003AEE                 jmp     quotearg_n_options
.text:0000000000003AEE ; } // starts at 3AE0
.text:0000000000003AEE quotearg_n      endp
.text:0000000000003AEE
.text:0000000000003AEE ; ---------------------------------------------------------------------------
.text:0000000000003AF3                 align 20h
.text:0000000000003B00
.text:0000000000003B00 ; =============== S U B R O U T I N E =======================================
.text:0000000000003B00
.text:0000000000003B00
.text:0000000000003B00                 public quotearg_n_mem
.text:0000000000003B00 quotearg_n_mem  proc near
.text:0000000000003B00 ; __unwind {
.text:0000000000003B00                 lea     rcx, default_quoting_options
.text:0000000000003B07                 jmp     quotearg_n_options
.text:0000000000003B07 ; } // starts at 3B00
.text:0000000000003B07 quotearg_n_mem  endp
.text:0000000000003B07
.text:0000000000003B07 ; ---------------------------------------------------------------------------
.text:0000000000003B0C                 align 10h
.text:0000000000003B10
.text:0000000000003B10 ; =============== S U B R O U T I N E =======================================
.text:0000000000003B10
.text:0000000000003B10
.text:0000000000003B10                 public quotearg
.text:0000000000003B10 quotearg        proc near
.text:0000000000003B10 ; __unwind {
.text:0000000000003B10                 lea     rcx, default_quoting_options
.text:0000000000003B17                 mov     rsi, rdi
.text:0000000000003B1A                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000003B21                 xor     edi, edi
.text:0000000000003B23                 jmp     quotearg_n_options
.text:0000000000003B23 ; } // starts at 3B10
.text:0000000000003B23 quotearg        endp
.text:0000000000003B23
.text:0000000000003B23 ; ---------------------------------------------------------------------------
.text:0000000000003B28                 align 10h
.text:0000000000003B30
.text:0000000000003B30 ; =============== S U B R O U T I N E =======================================
.text:0000000000003B30
.text:0000000000003B30
.text:0000000000003B30                 public quotearg_mem
.text:0000000000003B30 quotearg_mem    proc near
.text:0000000000003B30 ; __unwind {
.text:0000000000003B30                 lea     rcx, default_quoting_options
.text:0000000000003B37                 mov     rdx, rsi
.text:0000000000003B3A                 mov     rsi, rdi
.text:0000000000003B3D                 xor     edi, edi
.text:0000000000003B3F                 jmp     quotearg_n_options
.text:0000000000003B3F ; } // starts at 3B30
.text:0000000000003B3F quotearg_mem    endp
.text:0000000000003B3F
.text:0000000000003B3F ; ---------------------------------------------------------------------------
.text:0000000000003B44                 align 10h
.text:0000000000003B50
.text:0000000000003B50 ; =============== S U B R O U T I N E =======================================
.text:0000000000003B50
.text:0000000000003B50 ; Attributes: info_from_lumina
.text:0000000000003B50
.text:0000000000003B50 ; char *__fastcall quotearg_n_style(int n, quoting_style s, const char *arg)
.text:0000000000003B50                 public quotearg_n_style
.text:0000000000003B50 quotearg_n_style proc near              ; CODE XREF: quotearg_style+7↓j
.text:0000000000003B50
.text:0000000000003B50 var_48          = dword ptr -48h
.text:0000000000003B50 var_44          = qword ptr -44h
.text:0000000000003B50 var_3C          = qword ptr -3Ch
.text:0000000000003B50 var_34          = qword ptr -34h
.text:0000000000003B50 var_2C          = qword ptr -2Ch
.text:0000000000003B50 var_24          = qword ptr -24h
.text:0000000000003B50 var_1C          = qword ptr -1Ch
.text:0000000000003B50 var_14          = dword ptr -14h
.text:0000000000003B50 var_10          = qword ptr -10h
.text:0000000000003B50
.text:0000000000003B50 ; __unwind {
.text:0000000000003B50                 sub     rsp, 48h
.text:0000000000003B54                 mov     rax, rdx
.text:0000000000003B57                 mov     rdx, fs:28h
.text:0000000000003B60                 mov     [rsp+48h+var_10], rdx
.text:0000000000003B65                 xor     edx, edx
.text:0000000000003B67                 cmp     esi, 0Ah
.text:0000000000003B6A                 jz      short loc_3BD4
.text:0000000000003B6C                 mov     [rsp+48h+var_48], esi
.text:0000000000003B6F                 mov     rcx, rsp
.text:0000000000003B72                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000003B79                 mov     rsi, rax
.text:0000000000003B7C                 mov     [rsp+48h+var_44], 0
.text:0000000000003B85                 mov     [rsp+48h+var_3C], 0
.text:0000000000003B8E                 mov     [rsp+48h+var_34], 0
.text:0000000000003B97                 mov     [rsp+48h+var_2C], 0
.text:0000000000003BA0                 mov     [rsp+48h+var_24], 0
.text:0000000000003BA9                 mov     [rsp+48h+var_1C], 0
.text:0000000000003BB2                 mov     [rsp+48h+var_14], 0
.text:0000000000003BBA                 call    quotearg_n_options
.text:0000000000003BBF                 mov     rcx, [rsp+48h+var_10]
.text:0000000000003BC4                 xor     rcx, fs:28h
.text:0000000000003BCD                 jnz     short loc_3BD9
.text:0000000000003BCF                 add     rsp, 48h
.text:0000000000003BD3                 retn
.text:0000000000003BD4 ; ---------------------------------------------------------------------------
.text:0000000000003BD4
.text:0000000000003BD4 loc_3BD4:                               ; CODE XREF: quotearg_n_style+1A↑j
.text:0000000000003BD4                 call    _abort
.text:0000000000003BD9 ; ---------------------------------------------------------------------------
.text:0000000000003BD9
.text:0000000000003BD9 loc_3BD9:                               ; CODE XREF: quotearg_n_style+7D↑j
.text:0000000000003BD9                 call    ___stack_chk_fail
.text:0000000000003BD9 ; } // starts at 3B50
.text:0000000000003BD9 quotearg_n_style endp
.text:0000000000003BD9
.text:0000000000003BD9 ; ---------------------------------------------------------------------------
.text:0000000000003BDE                 align 20h
.text:0000000000003BE0
.text:0000000000003BE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000003BE0
.text:0000000000003BE0 ; Attributes: info_from_lumina
.text:0000000000003BE0
.text:0000000000003BE0 ; char *__fastcall quotearg_n_style_mem(int n, quoting_style s, const char *arg, size_t argsize)
.text:0000000000003BE0                 public quotearg_n_style_mem
.text:0000000000003BE0 quotearg_n_style_mem proc near          ; CODE XREF: quotearg_style_mem+A↓j
.text:0000000000003BE0
.text:0000000000003BE0 var_48          = dword ptr -48h
.text:0000000000003BE0 var_44          = qword ptr -44h
.text:0000000000003BE0 var_3C          = qword ptr -3Ch
.text:0000000000003BE0 var_34          = qword ptr -34h
.text:0000000000003BE0 var_2C          = qword ptr -2Ch
.text:0000000000003BE0 var_24          = qword ptr -24h
.text:0000000000003BE0 var_1C          = qword ptr -1Ch
.text:0000000000003BE0 var_14          = dword ptr -14h
.text:0000000000003BE0 var_10          = qword ptr -10h
.text:0000000000003BE0
.text:0000000000003BE0 ; __unwind {
.text:0000000000003BE0                 sub     rsp, 48h
.text:0000000000003BE4                 mov     rax, rdx
.text:0000000000003BE7                 mov     rdx, rcx
.text:0000000000003BEA                 mov     rcx, fs:28h
.text:0000000000003BF3                 mov     [rsp+48h+var_10], rcx
.text:0000000000003BF8                 xor     ecx, ecx
.text:0000000000003BFA                 cmp     esi, 0Ah
.text:0000000000003BFD                 jz      short loc_3C60
.text:0000000000003BFF                 mov     [rsp+48h+var_48], esi
.text:0000000000003C02                 mov     rcx, rsp
.text:0000000000003C05                 mov     rsi, rax
.text:0000000000003C08                 mov     [rsp+48h+var_44], 0
.text:0000000000003C11                 mov     [rsp+48h+var_3C], 0
.text:0000000000003C1A                 mov     [rsp+48h+var_34], 0
.text:0000000000003C23                 mov     [rsp+48h+var_2C], 0
.text:0000000000003C2C                 mov     [rsp+48h+var_24], 0
.text:0000000000003C35                 mov     [rsp+48h+var_1C], 0
.text:0000000000003C3E                 mov     [rsp+48h+var_14], 0
.text:0000000000003C46                 call    quotearg_n_options
.text:0000000000003C4B                 mov     rdx, [rsp+48h+var_10]
.text:0000000000003C50                 xor     rdx, fs:28h
.text:0000000000003C59                 jnz     short loc_3C65
.text:0000000000003C5B                 add     rsp, 48h
.text:0000000000003C5F                 retn
.text:0000000000003C60 ; ---------------------------------------------------------------------------
.text:0000000000003C60
.text:0000000000003C60 loc_3C60:                               ; CODE XREF: quotearg_n_style_mem+1D↑j
.text:0000000000003C60                 call    _abort
.text:0000000000003C65 ; ---------------------------------------------------------------------------
.text:0000000000003C65
.text:0000000000003C65 loc_3C65:                               ; CODE XREF: quotearg_n_style_mem+79↑j
.text:0000000000003C65                 call    ___stack_chk_fail
.text:0000000000003C65 ; } // starts at 3BE0
.text:0000000000003C65 quotearg_n_style_mem endp
.text:0000000000003C65
.text:0000000000003C65 ; ---------------------------------------------------------------------------
.text:0000000000003C6A                 align 10h
.text:0000000000003C70
.text:0000000000003C70 ; =============== S U B R O U T I N E =======================================
.text:0000000000003C70
.text:0000000000003C70
.text:0000000000003C70                 public quotearg_style
.text:0000000000003C70 quotearg_style  proc near
.text:0000000000003C70 ; __unwind {
.text:0000000000003C70                 mov     rdx, rsi
.text:0000000000003C73                 mov     esi, edi
.text:0000000000003C75                 xor     edi, edi
.text:0000000000003C77                 jmp     quotearg_n_style
.text:0000000000003C77 ; } // starts at 3C70
.text:0000000000003C77 quotearg_style  endp
.text:0000000000003C77
.text:0000000000003C77 ; ---------------------------------------------------------------------------
.text:0000000000003C7C                 align 20h
.text:0000000000003C80
.text:0000000000003C80 ; =============== S U B R O U T I N E =======================================
.text:0000000000003C80
.text:0000000000003C80
.text:0000000000003C80                 public quotearg_style_mem
.text:0000000000003C80 quotearg_style_mem proc near
.text:0000000000003C80 ; __unwind {
.text:0000000000003C80                 mov     rcx, rdx
.text:0000000000003C83                 mov     rdx, rsi
.text:0000000000003C86                 mov     esi, edi
.text:0000000000003C88                 xor     edi, edi
.text:0000000000003C8A                 jmp     quotearg_n_style_mem
.text:0000000000003C8A ; } // starts at 3C80
.text:0000000000003C8A quotearg_style_mem endp
.text:0000000000003C8A
.text:0000000000003C8A ; ---------------------------------------------------------------------------
.text:0000000000003C8F                 align 10h
.text:0000000000003C90
.text:0000000000003C90 ; =============== S U B R O U T I N E =======================================
.text:0000000000003C90
.text:0000000000003C90 ; Attributes: info_from_lumina
.text:0000000000003C90
.text:0000000000003C90 ; char *__fastcall quotearg_char_mem(const char *arg, size_t argsize, char ch_0)
.text:0000000000003C90                 public quotearg_char_mem
.text:0000000000003C90 quotearg_char_mem proc near             ; CODE XREF: quotearg_char+B↓j
.text:0000000000003C90                                         ; quotearg_colon+C↓j ...
.text:0000000000003C90
.text:0000000000003C90 var_48          = xmmword ptr -48h
.text:0000000000003C90 var_38          = xmmword ptr -38h
.text:0000000000003C90 var_28          = xmmword ptr -28h
.text:0000000000003C90 var_18          = qword ptr -18h
.text:0000000000003C90 var_10          = qword ptr -10h
.text:0000000000003C90
.text:0000000000003C90 ; __unwind {
.text:0000000000003C90                 sub     rsp, 48h
.text:0000000000003C94                 mov     ecx, edx
.text:0000000000003C96                 mov     rax, fs:28h
.text:0000000000003C9F                 mov     [rsp+48h+var_10], rax
.text:0000000000003CA4                 xor     eax, eax
.text:0000000000003CA6                 mov     rax, cs:qword_208250
.text:0000000000003CAD                 mov     r8, rsp
.text:0000000000003CB0                 and     ecx, 1Fh
.text:0000000000003CB3                 movdqa  xmm0, cs:default_quoting_options
.text:0000000000003CBB                 mov     [rsp+48h+var_18], rax
.text:0000000000003CC0                 mov     eax, edx
.text:0000000000003CC2                 movaps  [rsp+48h+var_48], xmm0
.text:0000000000003CC6                 shr     al, 5
.text:0000000000003CC9                 movzx   eax, al
.text:0000000000003CCC                 lea     r9, [r8+rax*4+8]
.text:0000000000003CD1                 movdqa  xmm0, cs:xmmword_208230
.text:0000000000003CD9                 movaps  [rsp+48h+var_38], xmm0
.text:0000000000003CDE                 movdqa  xmm0, cs:xmmword_208240
.text:0000000000003CE6                 movaps  [rsp+48h+var_28], xmm0
.text:0000000000003CEB                 mov     edx, [r9]
.text:0000000000003CEE                 mov     eax, edx
.text:0000000000003CF0                 shr     eax, cl
.text:0000000000003CF2                 not     eax
.text:0000000000003CF4                 and     eax, 1
.text:0000000000003CF7                 shl     eax, cl
.text:0000000000003CF9                 mov     rcx, r8
.text:0000000000003CFC                 xor     eax, edx
.text:0000000000003CFE                 mov     rdx, rsi
.text:0000000000003D01                 mov     rsi, rdi
.text:0000000000003D04                 mov     [r9], eax
.text:0000000000003D07                 xor     edi, edi
.text:0000000000003D09                 call    quotearg_n_options
.text:0000000000003D0E                 mov     rsi, [rsp+48h+var_10]
.text:0000000000003D13                 xor     rsi, fs:28h
.text:0000000000003D1C                 jnz     short loc_3D23
.text:0000000000003D1E                 add     rsp, 48h
.text:0000000000003D22                 retn
.text:0000000000003D23 ; ---------------------------------------------------------------------------
.text:0000000000003D23
.text:0000000000003D23 loc_3D23:                               ; CODE XREF: quotearg_char_mem+8C↑j
.text:0000000000003D23                 call    ___stack_chk_fail
.text:0000000000003D23 ; } // starts at 3C90
.text:0000000000003D23 quotearg_char_mem endp
.text:0000000000003D23
.text:0000000000003D23 ; ---------------------------------------------------------------------------
.text:0000000000003D28                 align 10h
.text:0000000000003D30
.text:0000000000003D30 ; =============== S U B R O U T I N E =======================================
.text:0000000000003D30
.text:0000000000003D30
.text:0000000000003D30                 public quotearg_char
.text:0000000000003D30 quotearg_char   proc near
.text:0000000000003D30 ; __unwind {
.text:0000000000003D30                 movsx   edx, sil
.text:0000000000003D34                 mov     rsi, 0FFFFFFFFFFFFFFFFh
.text:0000000000003D3B                 jmp     quotearg_char_mem
.text:0000000000003D3B ; } // starts at 3D30
.text:0000000000003D3B quotearg_char   endp
.text:0000000000003D3B
.text:0000000000003D40
.text:0000000000003D40 ; =============== S U B R O U T I N E =======================================
.text:0000000000003D40
.text:0000000000003D40
.text:0000000000003D40                 public quotearg_colon
.text:0000000000003D40 quotearg_colon  proc near               ; CODE XREF: close_stdout+65↑p
.text:0000000000003D40 ; __unwind {
.text:0000000000003D40                 mov     edx, 3Ah ; ':'
.text:0000000000003D45                 mov     rsi, 0FFFFFFFFFFFFFFFFh
.text:0000000000003D4C                 jmp     quotearg_char_mem
.text:0000000000003D4C ; } // starts at 3D40
.text:0000000000003D4C quotearg_colon  endp
.text:0000000000003D4C
.text:0000000000003D4C ; ---------------------------------------------------------------------------
.text:0000000000003D51                 align 20h
.text:0000000000003D60
.text:0000000000003D60 ; =============== S U B R O U T I N E =======================================
.text:0000000000003D60
.text:0000000000003D60
.text:0000000000003D60                 public quotearg_colon_mem
.text:0000000000003D60 quotearg_colon_mem proc near
.text:0000000000003D60 ; __unwind {
.text:0000000000003D60                 mov     edx, 3Ah ; ':'
.text:0000000000003D65                 jmp     quotearg_char_mem
.text:0000000000003D65 ; } // starts at 3D60
.text:0000000000003D65 quotearg_colon_mem endp
.text:0000000000003D65
.text:0000000000003D65 ; ---------------------------------------------------------------------------
.text:0000000000003D6A                 align 10h
.text:0000000000003D70
.text:0000000000003D70 ; =============== S U B R O U T I N E =======================================
.text:0000000000003D70
.text:0000000000003D70 ; Attributes: info_from_lumina
.text:0000000000003D70
.text:0000000000003D70 ; char *__fastcall quotearg_n_style_colon(int n, quoting_style s, const char *arg)
.text:0000000000003D70                 public quotearg_n_style_colon
.text:0000000000003D70 quotearg_n_style_colon proc near        ; CODE XREF: cksum+1B2↑p
.text:0000000000003D70                                         ; cksum+20D↑p ...
.text:0000000000003D70
.text:0000000000003D70 var_48          = dword ptr -48h
.text:0000000000003D70 var_44          = qword ptr -44h
.text:0000000000003D70 var_3C          = qword ptr -3Ch
.text:0000000000003D70 var_34          = qword ptr -34h
.text:0000000000003D70 var_2C          = qword ptr -2Ch
.text:0000000000003D70 var_24          = qword ptr -24h
.text:0000000000003D70 var_1C          = qword ptr -1Ch
.text:0000000000003D70 var_14          = dword ptr -14h
.text:0000000000003D70 var_10          = qword ptr -10h
.text:0000000000003D70
.text:0000000000003D70 ; __unwind {
.text:0000000000003D70                 sub     rsp, 48h
.text:0000000000003D74                 mov     rax, rdx
.text:0000000000003D77                 mov     rdx, fs:28h
.text:0000000000003D80                 mov     [rsp+48h+var_10], rdx
.text:0000000000003D85                 xor     edx, edx
.text:0000000000003D87                 cmp     esi, 0Ah
.text:0000000000003D8A                 jz      short loc_3DF4
.text:0000000000003D8C                 mov     [rsp+48h+var_48], esi
.text:0000000000003D8F                 mov     rcx, rsp
.text:0000000000003D92                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000003D99                 mov     rsi, rax
.text:0000000000003D9C                 mov     [rsp+48h+var_44], 0
.text:0000000000003DA5                 mov     [rsp+48h+var_3C], 4000000h
.text:0000000000003DAE                 mov     [rsp+48h+var_34], 0
.text:0000000000003DB7                 mov     [rsp+48h+var_2C], 0
.text:0000000000003DC0                 mov     [rsp+48h+var_24], 0
.text:0000000000003DC9                 mov     [rsp+48h+var_1C], 0
.text:0000000000003DD2                 mov     [rsp+48h+var_14], 0
.text:0000000000003DDA                 call    quotearg_n_options
.text:0000000000003DDF                 mov     rcx, [rsp+48h+var_10]
.text:0000000000003DE4                 xor     rcx, fs:28h
.text:0000000000003DED                 jnz     short loc_3DF9
.text:0000000000003DEF                 add     rsp, 48h
.text:0000000000003DF3                 retn
.text:0000000000003DF4 ; ---------------------------------------------------------------------------
.text:0000000000003DF4
.text:0000000000003DF4 loc_3DF4:                               ; CODE XREF: quotearg_n_style_colon+1A↑j
.text:0000000000003DF4                 call    _abort
.text:0000000000003DF9 ; ---------------------------------------------------------------------------
.text:0000000000003DF9
.text:0000000000003DF9 loc_3DF9:                               ; CODE XREF: quotearg_n_style_colon+7D↑j
.text:0000000000003DF9                 call    ___stack_chk_fail
.text:0000000000003DF9 ; } // starts at 3D70
.text:0000000000003DF9 quotearg_n_style_colon endp
.text:0000000000003DF9
.text:0000000000003DF9 ; ---------------------------------------------------------------------------
.text:0000000000003DFE                 align 20h
.text:0000000000003E00
.text:0000000000003E00 ; =============== S U B R O U T I N E =======================================
.text:0000000000003E00
.text:0000000000003E00 ; Attributes: info_from_lumina
.text:0000000000003E00
.text:0000000000003E00 ; char *__fastcall quotearg_n_custom_mem(int n, const char *left_quote, const char *right_quote, const char *arg, size_t argsize)
.text:0000000000003E00                 public quotearg_n_custom_mem
.text:0000000000003E00 quotearg_n_custom_mem proc near         ; CODE XREF: quotearg_n_custom+7↓j
.text:0000000000003E00                                         ; quotearg_custom+12↓j ...
.text:0000000000003E00
.text:0000000000003E00 var_48          = xmmword ptr -48h
.text:0000000000003E00 var_38          = xmmword ptr -38h
.text:0000000000003E00 var_28          = xmmword ptr -28h
.text:0000000000003E00 var_18          = qword ptr -18h
.text:0000000000003E00 var_10          = qword ptr -10h
.text:0000000000003E00
.text:0000000000003E00 ; __unwind {
.text:0000000000003E00                 sub     rsp, 48h
.text:0000000000003E04                 mov     r9, rcx
.text:0000000000003E07                 mov     rcx, cs:qword_208250
.text:0000000000003E0E                 movdqa  xmm0, cs:default_quoting_options
.text:0000000000003E16                 mov     rax, fs:28h
.text:0000000000003E1F                 mov     [rsp+48h+var_10], rax
.text:0000000000003E24                 xor     eax, eax
.text:0000000000003E26                 movaps  [rsp+48h+var_48], xmm0
.text:0000000000003E2A                 test    rsi, rsi
.text:0000000000003E2D                 mov     [rsp+48h+var_18], rcx
.text:0000000000003E32                 mov     dword ptr [rsp+48h+var_48], 0Ah
.text:0000000000003E39                 movdqa  xmm0, cs:xmmword_208230
.text:0000000000003E41                 movaps  [rsp+48h+var_38], xmm0
.text:0000000000003E46                 movdqa  xmm0, cs:xmmword_208240
.text:0000000000003E4E                 movaps  [rsp+48h+var_28], xmm0
.text:0000000000003E53                 jz      short loc_3E87
.text:0000000000003E55                 test    rdx, rdx
.text:0000000000003E58                 jz      short loc_3E87
.text:0000000000003E5A                 mov     qword ptr [rsp+48h+var_28+8], rsi
.text:0000000000003E5F                 mov     [rsp+48h+var_18], rdx
.text:0000000000003E64                 mov     rcx, rsp
.text:0000000000003E67                 mov     rdx, r8
.text:0000000000003E6A                 mov     rsi, r9
.text:0000000000003E6D                 call    quotearg_n_options
.text:0000000000003E72                 mov     rdi, [rsp+48h+var_10]
.text:0000000000003E77                 xor     rdi, fs:28h
.text:0000000000003E80                 jnz     short loc_3E8C
.text:0000000000003E82                 add     rsp, 48h
.text:0000000000003E86                 retn
.text:0000000000003E87 ; ---------------------------------------------------------------------------
.text:0000000000003E87
.text:0000000000003E87 loc_3E87:                               ; CODE XREF: quotearg_n_custom_mem+53↑j
.text:0000000000003E87                                         ; quotearg_n_custom_mem+58↑j
.text:0000000000003E87                 call    _abort
.text:0000000000003E8C ; ---------------------------------------------------------------------------
.text:0000000000003E8C
.text:0000000000003E8C loc_3E8C:                               ; CODE XREF: quotearg_n_custom_mem+80↑j
.text:0000000000003E8C                 call    ___stack_chk_fail
.text:0000000000003E8C ; } // starts at 3E00
.text:0000000000003E8C quotearg_n_custom_mem endp
.text:0000000000003E8C
.text:0000000000003E8C ; ---------------------------------------------------------------------------
.text:0000000000003E91                 align 20h
.text:0000000000003EA0
.text:0000000000003EA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000003EA0
.text:0000000000003EA0
.text:0000000000003EA0                 public quotearg_n_custom
.text:0000000000003EA0 quotearg_n_custom proc near
.text:0000000000003EA0 ; __unwind {
.text:0000000000003EA0                 mov     r8, 0FFFFFFFFFFFFFFFFh
.text:0000000000003EA7                 jmp     quotearg_n_custom_mem
.text:0000000000003EA7 ; } // starts at 3EA0
.text:0000000000003EA7 quotearg_n_custom endp
.text:0000000000003EA7
.text:0000000000003EA7 ; ---------------------------------------------------------------------------
.text:0000000000003EAC                 align 10h
.text:0000000000003EB0
.text:0000000000003EB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000003EB0
.text:0000000000003EB0
.text:0000000000003EB0                 public quotearg_custom
.text:0000000000003EB0 quotearg_custom proc near
.text:0000000000003EB0 ; __unwind {
.text:0000000000003EB0                 mov     rcx, rdx
.text:0000000000003EB3                 mov     r8, 0FFFFFFFFFFFFFFFFh
.text:0000000000003EBA                 mov     rdx, rsi
.text:0000000000003EBD                 mov     rsi, rdi
.text:0000000000003EC0                 xor     edi, edi
.text:0000000000003EC2                 jmp     quotearg_n_custom_mem
.text:0000000000003EC2 ; } // starts at 3EB0
.text:0000000000003EC2 quotearg_custom endp
.text:0000000000003EC2
.text:0000000000003EC2 ; ---------------------------------------------------------------------------
.text:0000000000003EC7                 align 10h
.text:0000000000003ED0
.text:0000000000003ED0 ; =============== S U B R O U T I N E =======================================
.text:0000000000003ED0
.text:0000000000003ED0
.text:0000000000003ED0                 public quotearg_custom_mem
.text:0000000000003ED0 quotearg_custom_mem proc near
.text:0000000000003ED0 ; __unwind {
.text:0000000000003ED0                 mov     r8, rcx
.text:0000000000003ED3                 mov     rcx, rdx
.text:0000000000003ED6                 mov     rdx, rsi
.text:0000000000003ED9                 mov     rsi, rdi
.text:0000000000003EDC                 xor     edi, edi
.text:0000000000003EDE                 jmp     quotearg_n_custom_mem
.text:0000000000003EDE ; } // starts at 3ED0
.text:0000000000003EDE quotearg_custom_mem endp
.text:0000000000003EDE
.text:0000000000003EDE ; ---------------------------------------------------------------------------
.text:0000000000003EE3                 align 10h
.text:0000000000003EF0
.text:0000000000003EF0 ; =============== S U B R O U T I N E =======================================
.text:0000000000003EF0
.text:0000000000003EF0
.text:0000000000003EF0                 public quote_n_mem
.text:0000000000003EF0 quote_n_mem     proc near
.text:0000000000003EF0 ; __unwind {
.text:0000000000003EF0                 lea     rcx, quote_quoting_options
.text:0000000000003EF7                 jmp     quotearg_n_options
.text:0000000000003EF7 ; } // starts at 3EF0
.text:0000000000003EF7 quote_n_mem     endp
.text:0000000000003EF7
.text:0000000000003EF7 ; ---------------------------------------------------------------------------
.text:0000000000003EFC                 align 20h
.text:0000000000003F00
.text:0000000000003F00 ; =============== S U B R O U T I N E =======================================
.text:0000000000003F00
.text:0000000000003F00
.text:0000000000003F00                 public quote_mem
.text:0000000000003F00 quote_mem       proc near
.text:0000000000003F00 ; __unwind {
.text:0000000000003F00                 lea     rcx, quote_quoting_options
.text:0000000000003F07                 mov     rdx, rsi
.text:0000000000003F0A                 mov     rsi, rdi
.text:0000000000003F0D                 xor     edi, edi
.text:0000000000003F0F                 jmp     quotearg_n_options
.text:0000000000003F0F ; } // starts at 3F00
.text:0000000000003F0F quote_mem       endp
.text:0000000000003F0F
.text:0000000000003F0F ; ---------------------------------------------------------------------------
.text:0000000000003F14                 align 20h
.text:0000000000003F20
.text:0000000000003F20 ; =============== S U B R O U T I N E =======================================
.text:0000000000003F20
.text:0000000000003F20
.text:0000000000003F20                 public quote_n
.text:0000000000003F20 quote_n         proc near
.text:0000000000003F20 ; __unwind {
.text:0000000000003F20                 lea     rcx, quote_quoting_options
.text:0000000000003F27                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000003F2E                 jmp     quotearg_n_options
.text:0000000000003F2E ; } // starts at 3F20
.text:0000000000003F2E quote_n         endp
.text:0000000000003F2E
.text:0000000000003F2E ; ---------------------------------------------------------------------------
.text:0000000000003F33                 align 20h
.text:0000000000003F40
.text:0000000000003F40 ; =============== S U B R O U T I N E =======================================
.text:0000000000003F40
.text:0000000000003F40
.text:0000000000003F40                 public quote
.text:0000000000003F40 quote           proc near
.text:0000000000003F40 ; __unwind {
.text:0000000000003F40                 lea     rcx, quote_quoting_options
.text:0000000000003F47                 mov     rsi, rdi
.text:0000000000003F4A                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000003F51                 xor     edi, edi
.text:0000000000003F53                 jmp     quotearg_n_options
.text:0000000000003F53 ; } // starts at 3F40
.text:0000000000003F53 quote           endp
.text:0000000000003F53
.text:0000000000003F53 ; ---------------------------------------------------------------------------
.text:0000000000003F58                 align 20h
.text:0000000000003F60
.text:0000000000003F60 ; =============== S U B R O U T I N E =======================================
.text:0000000000003F60
.text:0000000000003F60
.text:0000000000003F60 ; __int64 __fastcall version_etc_arn(FILE *stream)
.text:0000000000003F60                 public version_etc_arn
.text:0000000000003F60 version_etc_arn proc near               ; CODE XREF: version_etc_ar:loc_439B↓j
.text:0000000000003F60                                         ; version_etc_va:loc_43EB↓p ...
.text:0000000000003F60
.text:0000000000003F60 var_58          = qword ptr -58h
.text:0000000000003F60 var_50          = qword ptr -50h
.text:0000000000003F60 var_48          = qword ptr -48h
.text:0000000000003F60 var_40          = qword ptr -40h
.text:0000000000003F60
.text:0000000000003F60 ; __unwind {
.text:0000000000003F60                 push    r15
.text:0000000000003F62                 push    r14
.text:0000000000003F64                 push    r13
.text:0000000000003F66                 push    r12
.text:0000000000003F68                 mov     r12, r9
.text:0000000000003F6B                 push    rbp
.text:0000000000003F6C                 push    rbx
.text:0000000000003F6D                 mov     rbp, rdi
.text:0000000000003F70                 mov     rbx, r8
.text:0000000000003F73                 sub     rsp, 28h
.text:0000000000003F77                 test    rsi, rsi
.text:0000000000003F7A                 jz      loc_4098
.text:0000000000003F80                 mov     r8, rdx
.text:0000000000003F83                 lea     rdx, aSSS       ; "%s (%s) %s\n"
.text:0000000000003F8A                 mov     r9, rcx
.text:0000000000003F8D                 xor     eax, eax
.text:0000000000003F8F                 mov     rcx, rsi
.text:0000000000003F92                 mov     esi, 1
.text:0000000000003F97                 call    ___fprintf_chk
.text:0000000000003F9C
.text:0000000000003F9C loc_3F9C:                               ; CODE XREF: version_etc_arn+151↓j
.text:0000000000003F9C                 lea     rsi, aC         ; "(C)"
.text:0000000000003FA3                 xor     edi, edi        ; domainname
.text:0000000000003FA5                 mov     edx, 5          ; category
.text:0000000000003FAA                 call    _dcgettext
.text:0000000000003FAF                 lea     rdx, version_etc_copyright ; "Copyright %s %d Free Software Foundatio"...
.text:0000000000003FB6                 mov     rcx, rax
.text:0000000000003FB9                 mov     r8d, 7E3h
.text:0000000000003FBF                 mov     esi, 1
.text:0000000000003FC4                 mov     rdi, rbp
.text:0000000000003FC7                 xor     eax, eax
.text:0000000000003FC9                 call    ___fprintf_chk
.text:0000000000003FCE                 lea     rsi, aLicenseGplv3Gn ; "\nLicense GPLv3+: GNU GPL version 3 or "...
.text:0000000000003FD5                 xor     edi, edi        ; domainname
.text:0000000000003FD7                 mov     edx, 5          ; category
.text:0000000000003FDC                 call    _dcgettext
.text:0000000000003FE1                 mov     rsi, rbp        ; stream
.text:0000000000003FE4                 mov     rdi, rax        ; s
.text:0000000000003FE7                 call    _fputs_unlocked
.text:0000000000003FEC                 cmp     r12, 9          ; switch 10 cases
.text:0000000000003FF0                 ja      def_4004        ; jumptable 0000000000004004 default case
.text:0000000000003FF6                 lea     rdx, jpt_4004
.text:0000000000003FFD                 movsxd  rax, ds:(jpt_4004 - 5E60h)[rdx+r12*4]
.text:0000000000004001                 add     rax, rdx
.text:0000000000004004                 jmp     rax             ; switch jump
.text:0000000000004004 ; ---------------------------------------------------------------------------
.text:0000000000004006                 align 10h
.text:0000000000004010
.text:0000000000004010 loc_4010:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000004010                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:0000000000004010                 mov     r9, [rbx+38h]   ; jumptable 0000000000004004 case 8
.text:0000000000004014                 mov     rax, [rbx+10h]
.text:0000000000004018                 lea     rsi, aWrittenBySSSSS ; "Written by %s, %s, %s,\n%s, %s, %s, %s,"...
.text:000000000000401F                 mov     r8, [rbx+8]
.text:0000000000004023                 mov     edx, 5          ; category
.text:0000000000004028                 xor     edi, edi        ; domainname
.text:000000000000402A                 mov     r13, [rbx+30h]
.text:000000000000402E                 mov     r12, [rbx+28h]
.text:0000000000004032                 mov     [rsp+58h+var_48], r9
.text:0000000000004037                 mov     r15, [rbx+20h]
.text:000000000000403B                 mov     r14, [rbx+18h]
.text:000000000000403F                 mov     [rsp+58h+var_58], rax
.text:0000000000004043                 mov     [rsp+58h+var_50], r8
.text:0000000000004048                 mov     rbx, [rbx]
.text:000000000000404B                 call    _dcgettext
.text:0000000000004050                 sub     rsp, 8
.text:0000000000004054
.text:0000000000004054 loc_4054:                               ; CODE XREF: version_etc_arn+1B0↓j
.text:0000000000004054                 mov     r9, [rsp+60h+var_48]
.text:0000000000004059                 mov     rdx, rax
.text:000000000000405C                 mov     rcx, rbx
.text:000000000000405F                 mov     esi, 1
.text:0000000000004064                 mov     rdi, rbp
.text:0000000000004067                 xor     eax, eax
.text:0000000000004069                 push    r9
.text:000000000000406B                 push    r13
.text:000000000000406D                 push    r12
.text:000000000000406F                 push    r15
.text:0000000000004071                 push    r14
.text:0000000000004073                 mov     r9, [rsp+88h+var_58]
.text:0000000000004078                 mov     r8, [rsp+88h+var_50]
.text:000000000000407D                 call    ___fprintf_chk
.text:0000000000004082                 add     rsp, 30h
.text:0000000000004086
.text:0000000000004086 loc_4086:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000004086                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:0000000000004086                 add     rsp, 28h        ; jumptable 0000000000004004 case 0
.text:000000000000408A                 pop     rbx
.text:000000000000408B                 pop     rbp
.text:000000000000408C                 pop     r12
.text:000000000000408E                 pop     r13
.text:0000000000004090                 pop     r14
.text:0000000000004092                 pop     r15
.text:0000000000004094                 retn
.text:0000000000004094 ; ---------------------------------------------------------------------------
.text:0000000000004095                 align 8
.text:0000000000004098
.text:0000000000004098 loc_4098:                               ; CODE XREF: version_etc_arn+1A↑j
.text:0000000000004098                 mov     r8, rcx
.text:000000000000409B                 mov     rcx, rdx
.text:000000000000409E                 lea     rdx, aUSS+3     ; "%s %s\n"
.text:00000000000040A5                 mov     esi, 1
.text:00000000000040AA                 xor     eax, eax
.text:00000000000040AC                 call    ___fprintf_chk
.text:00000000000040B1                 jmp     loc_3F9C
.text:00000000000040B1 ; ---------------------------------------------------------------------------
.text:00000000000040B6                 align 20h
.text:00000000000040C0
.text:00000000000040C0 loc_40C0:                               ; CODE XREF: version_etc_arn+A4↑j
.text:00000000000040C0                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:00000000000040C0                 mov     r10, [rbx+40h]  ; jumptable 0000000000004004 case 9
.text:00000000000040C4                 mov     r9, [rbx+38h]
.text:00000000000040C8                 lea     rsi, aWrittenBySSSSS_0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,"...
.text:00000000000040CF                 mov     rax, [rbx+10h]
.text:00000000000040D3                 mov     r8, [rbx+8]
.text:00000000000040D7                 mov     edx, 5          ; category
.text:00000000000040DC                 mov     r13, [rbx+30h]
.text:00000000000040E0                 mov     r12, [rbx+28h]
.text:00000000000040E4                 mov     r15, [rbx+20h]
.text:00000000000040E8                 mov     r14, [rbx+18h]
.text:00000000000040EC                 mov     rbx, [rbx]
.text:00000000000040EF                 mov     [rsp+58h+var_40], r10
.text:00000000000040F4                 mov     [rsp+58h+var_48], r9
.text:00000000000040F9                 mov     [rsp+58h+var_58], rax
.text:00000000000040FD                 mov     [rsp+58h+var_50], r8
.text:0000000000004102
.text:0000000000004102 loc_4102:                               ; CODE XREF: version_etc_arn+412↓j
.text:0000000000004102                 xor     edi, edi        ; domainname
.text:0000000000004104                 call    _dcgettext
.text:0000000000004109                 mov     r10, [rsp+58h+var_40]
.text:000000000000410E                 push    r10
.text:0000000000004110                 jmp     loc_4054
.text:0000000000004110 ; ---------------------------------------------------------------------------
.text:0000000000004115                 align 8
.text:0000000000004118
.text:0000000000004118 loc_4118:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000004118                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:0000000000004118                 mov     rbx, [rbx]      ; jumptable 0000000000004004 case 1
.text:000000000000411B                 lea     rsi, aWrittenByS ; "Written by %s.\n"
.text:0000000000004122                 mov     edx, 5          ; category
.text:0000000000004127                 xor     edi, edi        ; domainname
.text:0000000000004129                 call    _dcgettext
.text:000000000000412E                 add     rsp, 28h
.text:0000000000004132                 mov     rcx, rbx
.text:0000000000004135                 mov     rdi, rbp
.text:0000000000004138                 pop     rbx
.text:0000000000004139                 pop     rbp
.text:000000000000413A                 pop     r12
.text:000000000000413C                 pop     r13
.text:000000000000413E                 pop     r14
.text:0000000000004140                 pop     r15
.text:0000000000004142                 mov     rdx, rax
.text:0000000000004145                 mov     esi, 1
.text:000000000000414A                 xor     eax, eax
.text:000000000000414C                 jmp     ___fprintf_chk
.text:000000000000414C ; ---------------------------------------------------------------------------
.text:0000000000004151                 align 8
.text:0000000000004158
.text:0000000000004158 loc_4158:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000004158                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:0000000000004158                 mov     r12, [rbx+8]    ; jumptable 0000000000004004 case 2
.text:000000000000415C                 lea     rsi, aWrittenBySAndS ; "Written by %s and %s.\n"
.text:0000000000004163                 mov     rbx, [rbx]
.text:0000000000004166                 mov     edx, 5          ; category
.text:000000000000416B                 xor     edi, edi        ; domainname
.text:000000000000416D                 call    _dcgettext
.text:0000000000004172                 add     rsp, 28h
.text:0000000000004176                 mov     r8, r12
.text:0000000000004179                 mov     rcx, rbx
.text:000000000000417C                 mov     rdi, rbp
.text:000000000000417F                 mov     rdx, rax
.text:0000000000004182                 mov     esi, 1
.text:0000000000004187                 pop     rbx
.text:0000000000004188                 pop     rbp
.text:0000000000004189                 pop     r12
.text:000000000000418B                 pop     r13
.text:000000000000418D                 pop     r14
.text:000000000000418F                 pop     r15
.text:0000000000004191                 xor     eax, eax
.text:0000000000004193                 jmp     ___fprintf_chk
.text:0000000000004193 ; ---------------------------------------------------------------------------
.text:0000000000004198                 align 20h
.text:00000000000041A0
.text:00000000000041A0 loc_41A0:                               ; CODE XREF: version_etc_arn+A4↑j
.text:00000000000041A0                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:00000000000041A0                 mov     r13, [rbx+10h]  ; jumptable 0000000000004004 case 3
.text:00000000000041A4                 mov     r12, [rbx+8]
.text:00000000000041A8                 lea     rsi, aWrittenBySSAnd ; "Written by %s, %s, and %s.\n"
.text:00000000000041AF                 mov     rbx, [rbx]
.text:00000000000041B2                 mov     edx, 5          ; category
.text:00000000000041B7                 xor     edi, edi        ; domainname
.text:00000000000041B9                 call    _dcgettext
.text:00000000000041BE                 add     rsp, 28h
.text:00000000000041C2                 mov     r9, r13
.text:00000000000041C5                 mov     r8, r12
.text:00000000000041C8                 mov     rcx, rbx
.text:00000000000041CB                 mov     rdi, rbp
.text:00000000000041CE                 mov     rdx, rax
.text:00000000000041D1                 pop     rbx
.text:00000000000041D2                 pop     rbp
.text:00000000000041D3                 pop     r12
.text:00000000000041D5                 pop     r13
.text:00000000000041D7                 pop     r14
.text:00000000000041D9                 pop     r15
.text:00000000000041DB                 mov     esi, 1
.text:00000000000041E0                 xor     eax, eax
.text:00000000000041E2                 jmp     ___fprintf_chk
.text:00000000000041E2 ; ---------------------------------------------------------------------------
.text:00000000000041E7                 align 10h
.text:00000000000041F0
.text:00000000000041F0 loc_41F0:                               ; CODE XREF: version_etc_arn+A4↑j
.text:00000000000041F0                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:00000000000041F0                 lea     rsi, aWrittenBySSSAn ; jumptable 0000000000004004 case 4
.text:00000000000041F7                 mov     edx, 5          ; category
.text:00000000000041FC                 xor     edi, edi        ; domainname
.text:00000000000041FE                 mov     r14, [rbx+18h]
.text:0000000000004202                 mov     r13, [rbx+10h]
.text:0000000000004206                 mov     r12, [rbx+8]
.text:000000000000420A                 mov     rbx, [rbx]
.text:000000000000420D                 call    _dcgettext
.text:0000000000004212                 sub     rsp, 8
.text:0000000000004216
.text:0000000000004216 loc_4216:                               ; CODE XREF: version_etc_arn+310↓j
.text:0000000000004216                 push    r14
.text:0000000000004218                 mov     rdx, rax
.text:000000000000421B                 mov     r9, r13
.text:000000000000421E                 mov     r8, r12
.text:0000000000004221                 mov     rcx, rbx
.text:0000000000004224                 mov     rdi, rbp
.text:0000000000004227                 mov     esi, 1
.text:000000000000422C                 xor     eax, eax
.text:000000000000422E                 call    ___fprintf_chk
.text:0000000000004233                 pop     rax
.text:0000000000004234                 pop     rdx
.text:0000000000004235                 add     rsp, 28h
.text:0000000000004239                 pop     rbx
.text:000000000000423A                 pop     rbp
.text:000000000000423B                 pop     r12
.text:000000000000423D                 pop     r13
.text:000000000000423F                 pop     r14
.text:0000000000004241                 pop     r15
.text:0000000000004243                 retn
.text:0000000000004243 ; ---------------------------------------------------------------------------
.text:0000000000004244                 align 8
.text:0000000000004248
.text:0000000000004248 loc_4248:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000004248                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:0000000000004248                 mov     r15, [rbx+20h]  ; jumptable 0000000000004004 case 5
.text:000000000000424C                 lea     rsi, aWrittenBySSSSA ; "Written by %s, %s, %s,\n%s, and %s.\n"
.text:0000000000004253                 mov     edx, 5          ; category
.text:0000000000004258                 xor     edi, edi        ; domainname
.text:000000000000425A                 mov     r14, [rbx+18h]
.text:000000000000425E                 mov     r13, [rbx+10h]
.text:0000000000004262                 mov     r12, [rbx+8]
.text:0000000000004266                 mov     rbx, [rbx]
.text:0000000000004269                 call    _dcgettext
.text:000000000000426E                 push    r15
.text:0000000000004270                 jmp     short loc_4216
.text:0000000000004270 ; ---------------------------------------------------------------------------
.text:0000000000004272                 align 8
.text:0000000000004278
.text:0000000000004278 loc_4278:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000004278                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:0000000000004278                 mov     r8, [rbx+8]     ; jumptable 0000000000004004 case 6
.text:000000000000427C                 mov     r12, [rbx+28h]
.text:0000000000004280                 lea     rsi, aWrittenBySSSSS_1 ; "Written by %s, %s, %s,\n%s, %s, and %s."...
.text:0000000000004287                 mov     r15, [rbx+20h]
.text:000000000000428B                 mov     r14, [rbx+18h]
.text:000000000000428F                 mov     edx, 5          ; category
.text:0000000000004294                 mov     r13, [rbx+10h]
.text:0000000000004298                 xor     edi, edi        ; domainname
.text:000000000000429A                 mov     rbx, [rbx]
.text:000000000000429D                 mov     [rsp+58h+var_58], r8
.text:00000000000042A1                 call    _dcgettext
.text:00000000000042A6                 sub     rsp, 8
.text:00000000000042AA                 mov     r9, r13
.text:00000000000042AD                 push    r12
.text:00000000000042AF                 push    r15
.text:00000000000042B1                 push    r14
.text:00000000000042B3
.text:00000000000042B3 loc_42B3:                               ; CODE XREF: version_etc_arn+3C4↓j
.text:00000000000042B3                 mov     r8, [rsp+78h+var_58]
.text:00000000000042B8                 mov     rcx, rbx
.text:00000000000042BB                 mov     rdx, rax
.text:00000000000042BE                 mov     rdi, rbp
.text:00000000000042C1                 mov     esi, 1
.text:00000000000042C6                 xor     eax, eax
.text:00000000000042C8                 call    ___fprintf_chk
.text:00000000000042CD                 add     rsp, 20h
.text:00000000000042D1                 add     rsp, 28h
.text:00000000000042D5                 pop     rbx
.text:00000000000042D6                 pop     rbp
.text:00000000000042D7                 pop     r12
.text:00000000000042D9                 pop     r13
.text:00000000000042DB                 pop     r14
.text:00000000000042DD                 pop     r15
.text:00000000000042DF                 retn
.text:00000000000042E0 ; ---------------------------------------------------------------------------
.text:00000000000042E0
.text:00000000000042E0 loc_42E0:                               ; CODE XREF: version_etc_arn+A4↑j
.text:00000000000042E0                                         ; DATA XREF: .rodata:jpt_4004↓o
.text:00000000000042E0                 mov     r9, [rbx+10h]   ; jumptable 0000000000004004 case 7
.text:00000000000042E4                 mov     r13, [rbx+30h]
.text:00000000000042E8                 lea     rsi, aWrittenBySSSSS_2 ; "Written by %s, %s, %s,\n%s, %s, %s, and"...
.text:00000000000042EF                 mov     r12, [rbx+28h]
.text:00000000000042F3                 mov     r15, [rbx+20h]
.text:00000000000042F7                 mov     edx, 5          ; category
.text:00000000000042FC                 mov     r14, [rbx+18h]
.text:0000000000004300                 mov     r8, [rbx+8]
.text:0000000000004304                 xor     edi, edi        ; domainname
.text:0000000000004306                 mov     [rsp+58h+var_50], r9
.text:000000000000430B                 mov     rbx, [rbx]
.text:000000000000430E                 mov     [rsp+58h+var_58], r8
.text:0000000000004312                 call    _dcgettext
.text:0000000000004317                 push    r13
.text:0000000000004319                 push    r12
.text:000000000000431B                 push    r15
.text:000000000000431D                 push    r14
.text:000000000000431F                 mov     r9, [rsp+78h+var_50]
.text:0000000000004324                 jmp     short loc_42B3
.text:0000000000004324 ; ---------------------------------------------------------------------------
.text:0000000000004326                 align 10h
.text:0000000000004330
.text:0000000000004330 def_4004:                               ; CODE XREF: version_etc_arn+90↑j
.text:0000000000004330                 mov     r10, [rbx+40h]  ; jumptable 0000000000004004 default case
.text:0000000000004334                 mov     r9, [rbx+38h]
.text:0000000000004338                 mov     edx, 5
.text:000000000000433D                 mov     rax, [rbx+10h]
.text:0000000000004341                 mov     r8, [rbx+8]
.text:0000000000004345                 lea     rsi, aWrittenBySSSSS_3 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,"...
.text:000000000000434C                 mov     r13, [rbx+30h]
.text:0000000000004350                 mov     r12, [rbx+28h]
.text:0000000000004354                 mov     r15, [rbx+20h]
.text:0000000000004358                 mov     r14, [rbx+18h]
.text:000000000000435C                 mov     [rsp+58h+var_40], r10
.text:0000000000004361                 mov     [rsp+58h+var_48], r9
.text:0000000000004366                 mov     [rsp+58h+var_58], rax
.text:000000000000436A                 mov     [rsp+58h+var_50], r8
.text:000000000000436F                 mov     rbx, [rbx]
.text:0000000000004372                 jmp     loc_4102
.text:0000000000004372 ; } // starts at 3F60
.text:0000000000004372 version_etc_arn endp
.text:0000000000004372
.text:0000000000004372 ; ---------------------------------------------------------------------------
.text:0000000000004377                 align 20h
.text:0000000000004380
.text:0000000000004380 ; =============== S U B R O U T I N E =======================================
.text:0000000000004380
.text:0000000000004380 ; Attributes: info_from_lumina
.text:0000000000004380
.text:0000000000004380 ; void __fastcall version_etc_ar(FILE *stream, const char *command_name, const char *package, const char *version, const char *const *authors)
.text:0000000000004380                 public version_etc_ar
.text:0000000000004380 version_etc_ar  proc near
.text:0000000000004380 ; __unwind {
.text:0000000000004380                 xor     r9d, r9d
.text:0000000000004383                 cmp     qword ptr [r8], 0
.text:0000000000004387                 jz      short loc_439B
.text:0000000000004389                 nop     dword ptr [rax+00000000h]
.text:0000000000004390
.text:0000000000004390 loc_4390:                               ; CODE XREF: version_etc_ar+19↓j
.text:0000000000004390                 add     r9, 1
.text:0000000000004394                 cmp     qword ptr [r8+r9*8], 0
.text:0000000000004399                 jnz     short loc_4390
.text:000000000000439B
.text:000000000000439B loc_439B:                               ; CODE XREF: version_etc_ar+7↑j
.text:000000000000439B                 jmp     version_etc_arn
.text:000000000000439B ; } // starts at 4380
.text:000000000000439B version_etc_ar  endp
.text:000000000000439B
.text:00000000000043A0
.text:00000000000043A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000043A0
.text:00000000000043A0 ; Attributes: info_from_lumina
.text:00000000000043A0
.text:00000000000043A0 ; void __fastcall version_etc_va(FILE *stream, const char *command_name, const char *package, const char *version, __va_list_tag *authors)
.text:00000000000043A0                 public version_etc_va
.text:00000000000043A0 version_etc_va  proc near               ; CODE XREF: parse_long_options+11B↑p
.text:00000000000043A0                                         ; parse_gnu_standard_options_only+EB↑p
.text:00000000000043A0
.text:00000000000043A0 authtab         = qword ptr -68h
.text:00000000000043A0 var_10          = qword ptr -10h
.text:00000000000043A0
.text:00000000000043A0 ; __unwind {
.text:00000000000043A0                 sub     rsp, 68h
.text:00000000000043A4                 mov     r10, r8
.text:00000000000043A7                 xor     r9d, r9d
.text:00000000000043AA                 mov     rax, fs:28h
.text:00000000000043B3                 mov     [rsp+68h+var_10], rax
.text:00000000000043B8                 xor     eax, eax
.text:00000000000043BA                 mov     r8, rsp
.text:00000000000043BD                 nop     dword ptr [rax]
.text:00000000000043C0
.text:00000000000043C0 loc_43C0:                               ; CODE XREF: version_etc_va+49↓j
.text:00000000000043C0                 mov     eax, [r10]
.text:00000000000043C3                 cmp     eax, 2Fh ; '/'
.text:00000000000043C6                 ja      short loc_440A
.text:00000000000043C8                 mov     r11d, eax
.text:00000000000043CB                 add     r11, [r10+10h]
.text:00000000000043CF                 add     eax, 8
.text:00000000000043D2                 mov     [r10], eax
.text:00000000000043D5
.text:00000000000043D5 loc_43D5:                               ; CODE XREF: version_etc_va+76↓j
.text:00000000000043D5                 mov     rax, [r11]
.text:00000000000043D8                 test    rax, rax
.text:00000000000043DB                 mov     [r8+r9*8], rax
.text:00000000000043DF                 jz      short loc_43EB
.text:00000000000043E1                 add     r9, 1
.text:00000000000043E5                 cmp     r9, 0Ah
.text:00000000000043E9                 jnz     short loc_43C0
.text:00000000000043EB
.text:00000000000043EB loc_43EB:                               ; CODE XREF: version_etc_va+3F↑j
.text:00000000000043EB                 call    version_etc_arn
.text:00000000000043F0                 mov     rax, [rsp+68h+var_10]
.text:00000000000043F5                 xor     rax, fs:28h
.text:00000000000043FE                 jnz     short loc_4405
.text:0000000000004400                 add     rsp, 68h
.text:0000000000004404                 retn
.text:0000000000004405 ; ---------------------------------------------------------------------------
.text:0000000000004405
.text:0000000000004405 loc_4405:                               ; CODE XREF: version_etc_va+5E↑j
.text:0000000000004405                 call    ___stack_chk_fail
.text:000000000000440A ; ---------------------------------------------------------------------------
.text:000000000000440A
.text:000000000000440A loc_440A:                               ; CODE XREF: version_etc_va+26↑j
.text:000000000000440A                 mov     r11, [r10+8]
.text:000000000000440E                 lea     rax, [r11+8]
.text:0000000000004412                 mov     [r10+8], rax
.text:0000000000004416                 jmp     short loc_43D5
.text:0000000000004416 ; } // starts at 43A0
.text:0000000000004416 version_etc_va  endp
.text:0000000000004416
.text:0000000000004416 ; ---------------------------------------------------------------------------
.text:0000000000004418                 align 20h
.text:0000000000004420
.text:0000000000004420 ; =============== S U B R O U T I N E =======================================
.text:0000000000004420
.text:0000000000004420 ; Attributes: info_from_lumina
.text:0000000000004420
.text:0000000000004420 ; void version_etc(FILE *stream, const char *command_name, const char *package, const char *version, ...)
.text:0000000000004420                 public version_etc
.text:0000000000004420 version_etc     proc near
.text:0000000000004420
.text:0000000000004420 var_C0          = dword ptr -0C0h
.text:0000000000004420 var_B8          = qword ptr -0B8h
.text:0000000000004420 var_B0          = qword ptr -0B0h
.text:0000000000004420 var_A8          = byte ptr -0A8h
.text:0000000000004420 var_50          = qword ptr -50h
.text:0000000000004420 var_48          = byte ptr -48h
.text:0000000000004420 var_28          = qword ptr -28h
.text:0000000000004420 var_20          = qword ptr -20h
.text:0000000000004420 arg_0           = byte ptr  8
.text:0000000000004420
.text:0000000000004420 ; __unwind {
.text:0000000000004420                 push    rbp
.text:0000000000004421                 push    rbx
.text:0000000000004422                 mov     r10d, 20h ; ' '
.text:0000000000004428                 xor     r11d, r11d
.text:000000000000442B                 sub     rsp, 0B8h
.text:0000000000004432                 mov     rax, fs:28h
.text:000000000000443B                 mov     [rsp+0C8h+var_50], rax
.text:0000000000004440                 xor     eax, eax
.text:0000000000004442                 lea     rax, [rsp+0C8h+arg_0]
.text:000000000000444A                 mov     [rsp+0C8h+var_28], r8
.text:0000000000004452                 lea     rbx, [rsp+0C8h+arg_0]
.text:000000000000445A                 lea     r8, [rsp+0C8h+var_A8]
.text:000000000000445F                 mov     [rsp+0C8h+var_20], r9
.text:0000000000004467                 mov     [rsp+0C8h+var_C0], 20h ; ' '
.text:000000000000446F                 mov     [rsp+0C8h+var_B8], rax
.text:0000000000004474                 lea     rax, [rsp+0C8h+var_48]
.text:000000000000447C                 xor     r9d, r9d
.text:000000000000447F                 mov     [rsp+0C8h+var_B0], rax
.text:0000000000004484                 mov     rbp, rax
.text:0000000000004487                 nop     word ptr [rax+rax+00000000h]
.text:0000000000004490
.text:0000000000004490 loc_4490:                               ; CODE XREF: version_etc+9A↓j
.text:0000000000004490                 cmp     r10d, 2Fh ; '/'
.text:0000000000004494                 ja      short loc_44EC
.text:0000000000004496                 mov     eax, r10d
.text:0000000000004499                 mov     r11d, 1
.text:000000000000449F                 add     r10d, 8
.text:00000000000044A3                 add     rax, rbp
.text:00000000000044A6
.text:00000000000044A6 loc_44A6:                               ; CODE XREF: version_etc+D3↓j
.text:00000000000044A6                 mov     rax, [rax]
.text:00000000000044A9                 test    rax, rax
.text:00000000000044AC                 mov     [r8+r9*8], rax
.text:00000000000044B0                 jz      short loc_44BC
.text:00000000000044B2                 add     r9, 1
.text:00000000000044B6                 cmp     r9, 0Ah
.text:00000000000044BA                 jnz     short loc_4490
.text:00000000000044BC
.text:00000000000044BC loc_44BC:                               ; CODE XREF: version_etc+90↑j
.text:00000000000044BC                 test    r11b, r11b
.text:00000000000044BF                 jnz     short loc_44E5
.text:00000000000044C1
.text:00000000000044C1 loc_44C1:                               ; CODE XREF: version_etc+CA↓j
.text:00000000000044C1                 call    version_etc_arn
.text:00000000000044C6                 mov     rax, [rsp+0C8h+var_50]
.text:00000000000044CB                 xor     rax, fs:28h
.text:00000000000044D4                 jnz     short loc_44E0
.text:00000000000044D6                 add     rsp, 0B8h
.text:00000000000044DD                 pop     rbx
.text:00000000000044DE                 pop     rbp
.text:00000000000044DF                 retn
.text:00000000000044E0 ; ---------------------------------------------------------------------------
.text:00000000000044E0
.text:00000000000044E0 loc_44E0:                               ; CODE XREF: version_etc+B4↑j
.text:00000000000044E0                 call    ___stack_chk_fail
.text:00000000000044E5 ; ---------------------------------------------------------------------------
.text:00000000000044E5
.text:00000000000044E5 loc_44E5:                               ; CODE XREF: version_etc+9F↑j
.text:00000000000044E5                 mov     [rsp+0C8h+var_C0], r10d
.text:00000000000044EA                 jmp     short loc_44C1
.text:00000000000044EC ; ---------------------------------------------------------------------------
.text:00000000000044EC
.text:00000000000044EC loc_44EC:                               ; CODE XREF: version_etc+74↑j
.text:00000000000044EC                 mov     rax, rbx
.text:00000000000044EF                 add     rbx, 8
.text:00000000000044F3                 jmp     short loc_44A6
.text:00000000000044F3 ; } // starts at 4420
.text:00000000000044F3 version_etc     endp
.text:00000000000044F3
.text:00000000000044F3 ; ---------------------------------------------------------------------------
.text:00000000000044F5                 align 20h
.text:0000000000004500
.text:0000000000004500 ; =============== S U B R O U T I N E =======================================
.text:0000000000004500
.text:0000000000004500 ; Attributes: info_from_lumina
.text:0000000000004500
.text:0000000000004500 ; void __cdecl emit_bug_reporting_address()
.text:0000000000004500                 public emit_bug_reporting_address
.text:0000000000004500 emit_bug_reporting_address proc near
.text:0000000000004500 ; __unwind {
.text:0000000000004500                 push    rbx
.text:0000000000004501                 lea     rsi, aReportBugsToS ; "\nReport bugs to: %s\n"
.text:0000000000004508                 mov     edx, 5          ; category
.text:000000000000450D                 xor     edi, edi        ; domainname
.text:000000000000450F                 call    _dcgettext
.text:0000000000004514                 lea     rdx, aBugCoreutilsGn ; "bug-coreutils@gnu.org"
.text:000000000000451B                 mov     rsi, rax
.text:000000000000451E                 mov     edi, 1
.text:0000000000004523                 xor     eax, eax
.text:0000000000004525                 call    ___printf_chk
.text:000000000000452A                 lea     rsi, aSHomePageS ; "%s home page: <%s>\n"
.text:0000000000004531                 mov     edx, 5          ; category
.text:0000000000004536                 xor     edi, edi        ; domainname
.text:0000000000004538                 call    _dcgettext
.text:000000000000453D                 lea     rcx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:0000000000004544                 lea     rdx, unk_4C35
.text:000000000000454B                 mov     rsi, rax
.text:000000000000454E                 mov     edi, 1
.text:0000000000004553                 xor     eax, eax
.text:0000000000004555                 call    ___printf_chk
.text:000000000000455A                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000004561                 lea     rsi, aGeneralHelpUsi ; "General help using GNU software: <https"...
.text:0000000000004568                 xor     edi, edi        ; domainname
.text:000000000000456A                 mov     edx, 5          ; category
.text:000000000000456F                 call    _dcgettext
.text:0000000000004574                 mov     rsi, rbx        ; stream
.text:0000000000004577                 mov     rdi, rax        ; s
.text:000000000000457A                 pop     rbx
.text:000000000000457B                 jmp     _fputs_unlocked
.text:000000000000457B ; } // starts at 4500
.text:000000000000457B emit_bug_reporting_address endp
.text:000000000000457B
.text:0000000000004580
.text:0000000000004580 ; =============== S U B R O U T I N E =======================================
.text:0000000000004580
.text:0000000000004580
.text:0000000000004580                 public xmalloc
.text:0000000000004580 xmalloc         proc near               ; CODE XREF: quotearg_n_options+127↑p
.text:0000000000004580                                         ; quotearg_alloc_mem+81↑p ...
.text:0000000000004580 ; __unwind {
.text:0000000000004580                 push    rbx
.text:0000000000004581                 mov     rbx, rdi
.text:0000000000004584                 call    _malloc
.text:0000000000004589                 test    rax, rax
.text:000000000000458C                 jnz     short loc_4593
.text:000000000000458E                 test    rbx, rbx
.text:0000000000004591                 jnz     short loc_4595
.text:0000000000004593
.text:0000000000004593 loc_4593:                               ; CODE XREF: xmalloc+C↑j
.text:0000000000004593                 pop     rbx
.text:0000000000004594                 retn
.text:0000000000004595 ; ---------------------------------------------------------------------------
.text:0000000000004595
.text:0000000000004595 loc_4595:                               ; CODE XREF: xmalloc+11↑j
.text:0000000000004595                 call    xalloc_die
.text:0000000000004595 ; } // starts at 4580
.text:0000000000004595 xmalloc         endp
.text:0000000000004595
.text:0000000000004595 ; ---------------------------------------------------------------------------
.text:000000000000459A                 align 20h
.text:00000000000045A0
.text:00000000000045A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000045A0
.text:00000000000045A0 ; Attributes: info_from_lumina
.text:00000000000045A0
.text:00000000000045A0 ; void *__fastcall xnmalloc(size_t n, size_t s)
.text:00000000000045A0                 public xnmalloc
.text:00000000000045A0 xnmalloc        proc near
.text:00000000000045A0 ; __unwind {
.text:00000000000045A0                 mov     rax, rdi
.text:00000000000045A3                 mul     rsi
.text:00000000000045A6                 mov     rdi, rax
.text:00000000000045A9                 seto    al
.text:00000000000045AC                 test    rdi, rdi
.text:00000000000045AF                 js      short loc_45BB
.text:00000000000045B1                 movzx   eax, al
.text:00000000000045B4                 test    rax, rax
.text:00000000000045B7                 jnz     short loc_45BB
.text:00000000000045B9                 jmp     short xmalloc
.text:00000000000045BB ; ---------------------------------------------------------------------------
.text:00000000000045BB
.text:00000000000045BB loc_45BB:                               ; CODE XREF: xnmalloc+F↑j
.text:00000000000045BB                                         ; xnmalloc+17↑j
.text:00000000000045BB                 sub     rsp, 8
.text:00000000000045BF                 call    xalloc_die
.text:00000000000045BF ; } // starts at 45A0
.text:00000000000045BF xnmalloc        endp
.text:00000000000045BF
.text:00000000000045BF ; ---------------------------------------------------------------------------
.text:00000000000045C4                 align 10h
.text:00000000000045D0
.text:00000000000045D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000045D0
.text:00000000000045D0
.text:00000000000045D0                 public xcharalloc
.text:00000000000045D0 xcharalloc      proc near
.text:00000000000045D0 ; __unwind {
.text:00000000000045D0                 jmp     short xmalloc
.text:00000000000045D0 ; } // starts at 45D0
.text:00000000000045D0 xcharalloc      endp
.text:00000000000045D0
.text:00000000000045D0 ; ---------------------------------------------------------------------------
.text:00000000000045D2                 align 20h
.text:00000000000045E0
.text:00000000000045E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000045E0
.text:00000000000045E0 ; Attributes: info_from_lumina
.text:00000000000045E0
.text:00000000000045E0 ; void *__fastcall xrealloc(void *p, size_t n)
.text:00000000000045E0                 public xrealloc
.text:00000000000045E0 xrealloc        proc near               ; CODE XREF: quotearg_n_options+6E↑p
.text:00000000000045E0                                         ; quotearg_n_options+182↑p ...
.text:00000000000045E0 ; __unwind {
.text:00000000000045E0                 test    rsi, rsi
.text:00000000000045E3                 push    rbx
.text:00000000000045E4                 mov     rbx, rsi
.text:00000000000045E7                 jnz     short loc_45EE
.text:00000000000045E9                 test    rdi, rdi
.text:00000000000045EC                 jnz     short loc_4608
.text:00000000000045EE
.text:00000000000045EE loc_45EE:                               ; CODE XREF: xrealloc+7↑j
.text:00000000000045EE                 mov     rsi, rbx        ; size
.text:00000000000045F1                 call    _realloc
.text:00000000000045F6                 test    rax, rax
.text:00000000000045F9                 jnz     short loc_4600
.text:00000000000045FB                 test    rbx, rbx
.text:00000000000045FE                 jnz     short loc_4611
.text:0000000000004600
.text:0000000000004600 loc_4600:                               ; CODE XREF: xrealloc+19↑j
.text:0000000000004600                 pop     rbx
.text:0000000000004601                 retn
.text:0000000000004601 ; ---------------------------------------------------------------------------
.text:0000000000004602                 align 8
.text:0000000000004608
.text:0000000000004608 loc_4608:                               ; CODE XREF: xrealloc+C↑j
.text:0000000000004608                 call    _free
.text:000000000000460D                 xor     eax, eax
.text:000000000000460F                 pop     rbx
.text:0000000000004610                 retn
.text:0000000000004611 ; ---------------------------------------------------------------------------
.text:0000000000004611
.text:0000000000004611 loc_4611:                               ; CODE XREF: xrealloc+1E↑j
.text:0000000000004611                 call    xalloc_die
.text:0000000000004611 ; } // starts at 45E0
.text:0000000000004611 xrealloc        endp
.text:0000000000004611
.text:0000000000004611 ; ---------------------------------------------------------------------------
.text:0000000000004616                 align 20h
.text:0000000000004620
.text:0000000000004620 ; =============== S U B R O U T I N E =======================================
.text:0000000000004620
.text:0000000000004620 ; Attributes: info_from_lumina
.text:0000000000004620
.text:0000000000004620 ; void *__fastcall xnrealloc(void *p, size_t n, size_t s)
.text:0000000000004620                 public xnrealloc
.text:0000000000004620 xnrealloc       proc near
.text:0000000000004620 ; __unwind {
.text:0000000000004620                 mov     rax, rsi
.text:0000000000004623                 mul     rdx
.text:0000000000004626                 mov     rsi, rax
.text:0000000000004629                 seto    al
.text:000000000000462C                 test    rsi, rsi
.text:000000000000462F                 js      short loc_463B
.text:0000000000004631                 movzx   eax, al
.text:0000000000004634                 test    rax, rax
.text:0000000000004637                 jnz     short loc_463B
.text:0000000000004639                 jmp     short xrealloc
.text:000000000000463B ; ---------------------------------------------------------------------------
.text:000000000000463B
.text:000000000000463B loc_463B:                               ; CODE XREF: xnrealloc+F↑j
.text:000000000000463B                                         ; xnrealloc+17↑j
.text:000000000000463B                 sub     rsp, 8
.text:000000000000463F                 call    xalloc_die
.text:000000000000463F ; } // starts at 4620
.text:000000000000463F xnrealloc       endp
.text:000000000000463F
.text:000000000000463F ; ---------------------------------------------------------------------------
.text:0000000000004644                 align 10h
.text:0000000000004650
.text:0000000000004650 ; =============== S U B R O U T I N E =======================================
.text:0000000000004650
.text:0000000000004650 ; Attributes: info_from_lumina
.text:0000000000004650
.text:0000000000004650 ; void *__fastcall x2nrealloc(void *p, size_t *pn, size_t s)
.text:0000000000004650                 public x2nrealloc
.text:0000000000004650 x2nrealloc      proc near
.text:0000000000004650 ; __unwind {
.text:0000000000004650                 test    rdi, rdi
.text:0000000000004653                 mov     r9, rdx
.text:0000000000004656                 mov     rcx, [rsi]
.text:0000000000004659                 jz      short loc_4690
.text:000000000000465B                 xor     edx, edx
.text:000000000000465D                 mov     rax, 5555555555555554h
.text:0000000000004667                 div     r9
.text:000000000000466A                 cmp     rax, rcx
.text:000000000000466D                 jbe     short loc_46AB
.text:000000000000466F                 mov     rax, rcx
.text:0000000000004672                 shr     rax, 1
.text:0000000000004675                 lea     rcx, [rax+rcx+1]
.text:000000000000467A
.text:000000000000467A loc_467A:                               ; CODE XREF: x2nrealloc+59↓j
.text:000000000000467A                 mov     [rsi], rcx
.text:000000000000467D                 imul    rcx, r9
.text:0000000000004681                 mov     rsi, rcx
.text:0000000000004684                 jmp     xrealloc
.text:0000000000004684 ; ---------------------------------------------------------------------------
.text:0000000000004689                 align 10h
.text:0000000000004690
.text:0000000000004690 loc_4690:                               ; CODE XREF: x2nrealloc+9↑j
.text:0000000000004690                 test    rcx, rcx
.text:0000000000004693                 jz      short loc_46B8
.text:0000000000004695
.text:0000000000004695 loc_4695:                               ; CODE XREF: x2nrealloc+80↓j
.text:0000000000004695                 mov     rax, rcx
.text:0000000000004698                 mul     r9
.text:000000000000469B                 seto    dl
.text:000000000000469E                 test    rax, rax
.text:00000000000046A1                 movzx   edx, dl
.text:00000000000046A4                 js      short loc_46AB
.text:00000000000046A6                 test    rdx, rdx
.text:00000000000046A9                 jz      short loc_467A
.text:00000000000046AB
.text:00000000000046AB loc_46AB:                               ; CODE XREF: x2nrealloc+1D↑j
.text:00000000000046AB                                         ; x2nrealloc+54↑j
.text:00000000000046AB                 sub     rsp, 8
.text:00000000000046AF                 call    xalloc_die
.text:00000000000046AF ; ---------------------------------------------------------------------------
.text:00000000000046B4                 align 8
.text:00000000000046B8
.text:00000000000046B8 loc_46B8:                               ; CODE XREF: x2nrealloc+43↑j
.text:00000000000046B8                 xor     edx, edx
.text:00000000000046BA                 mov     eax, 80h
.text:00000000000046BF                 xor     r8d, r8d
.text:00000000000046C2                 div     r9
.text:00000000000046C5                 test    rax, rax
.text:00000000000046C8                 setz    r8b
.text:00000000000046CC                 lea     rcx, [r8+rax]
.text:00000000000046D0                 jmp     short loc_4695
.text:00000000000046D0 ; } // starts at 4650
.text:00000000000046D0 x2nrealloc      endp
.text:00000000000046D0
.text:00000000000046D0 ; ---------------------------------------------------------------------------
.text:00000000000046D2                 align 20h
.text:00000000000046E0
.text:00000000000046E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000046E0
.text:00000000000046E0 ; Attributes: info_from_lumina
.text:00000000000046E0
.text:00000000000046E0 ; void *__fastcall x2realloc(void *p, size_t *pn)
.text:00000000000046E0                 public x2realloc
.text:00000000000046E0 x2realloc       proc near
.text:00000000000046E0 ; __unwind {
.text:00000000000046E0                 test    rdi, rdi
.text:00000000000046E3                 mov     rax, [rsi]
.text:00000000000046E6                 jz      short loc_4710
.text:00000000000046E8                 mov     rdx, 5555555555555553h
.text:00000000000046F2                 cmp     rax, rdx
.text:00000000000046F5                 ja      short loc_4721
.text:00000000000046F7                 mov     rdx, rax
.text:00000000000046FA                 shr     rdx, 1
.text:00000000000046FD                 lea     rax, [rdx+rax+1]
.text:0000000000004702
.text:0000000000004702 loc_4702:                               ; CODE XREF: x2realloc+3F↓j
.text:0000000000004702                 mov     [rsi], rax
.text:0000000000004705                 mov     rsi, rax
.text:0000000000004708                 jmp     xrealloc
.text:0000000000004708 ; ---------------------------------------------------------------------------
.text:000000000000470D                 align 10h
.text:0000000000004710
.text:0000000000004710 loc_4710:                               ; CODE XREF: x2realloc+6↑j
.text:0000000000004710                 test    rax, rax
.text:0000000000004713                 mov     edx, 80h
.text:0000000000004718                 cmovz   rax, rdx
.text:000000000000471C                 test    rax, rax
.text:000000000000471F                 jns     short loc_4702
.text:0000000000004721
.text:0000000000004721 loc_4721:                               ; CODE XREF: x2realloc+15↑j
.text:0000000000004721                 sub     rsp, 8
.text:0000000000004725                 call    xalloc_die
.text:0000000000004725 ; } // starts at 46E0
.text:0000000000004725 x2realloc       endp
.text:0000000000004725
.text:0000000000004725 ; ---------------------------------------------------------------------------
.text:000000000000472A                 align 10h
.text:0000000000004730
.text:0000000000004730 ; =============== S U B R O U T I N E =======================================
.text:0000000000004730
.text:0000000000004730
.text:0000000000004730 ; __int64 __fastcall xzalloc(size_t n)
.text:0000000000004730                 public xzalloc
.text:0000000000004730 xzalloc         proc near
.text:0000000000004730 ; __unwind {
.text:0000000000004730                 push    rbx
.text:0000000000004731                 mov     rbx, rdi
.text:0000000000004734                 call    xmalloc
.text:0000000000004739                 mov     rdx, rbx        ; n
.text:000000000000473C                 xor     esi, esi        ; c
.text:000000000000473E                 mov     rdi, rax        ; s
.text:0000000000004741                 pop     rbx
.text:0000000000004742                 jmp     _memset
.text:0000000000004742 ; } // starts at 4730
.text:0000000000004742 xzalloc         endp
.text:0000000000004742
.text:0000000000004742 ; ---------------------------------------------------------------------------
.text:0000000000004747                 align 10h
.text:0000000000004750
.text:0000000000004750 ; =============== S U B R O U T I N E =======================================
.text:0000000000004750
.text:0000000000004750 ; Attributes: info_from_lumina
.text:0000000000004750
.text:0000000000004750 ; void *__fastcall xcalloc(size_t n, size_t s)
.text:0000000000004750                 public xcalloc
.text:0000000000004750 xcalloc         proc near
.text:0000000000004750 ; __unwind {
.text:0000000000004750                 mov     rax, rdi
.text:0000000000004753                 sub     rsp, 8
.text:0000000000004757                 mul     rsi
.text:000000000000475A                 seto    dl
.text:000000000000475D                 test    rax, rax
.text:0000000000004760                 js      short loc_4779
.text:0000000000004762                 movzx   edx, dl
.text:0000000000004765                 test    rdx, rdx
.text:0000000000004768                 jnz     short loc_4779
.text:000000000000476A                 call    _calloc
.text:000000000000476F                 test    rax, rax
.text:0000000000004772                 jz      short loc_4779
.text:0000000000004774                 add     rsp, 8
.text:0000000000004778                 retn
.text:0000000000004779 ; ---------------------------------------------------------------------------
.text:0000000000004779
.text:0000000000004779 loc_4779:                               ; CODE XREF: xcalloc+10↑j
.text:0000000000004779                                         ; xcalloc+18↑j ...
.text:0000000000004779                 call    xalloc_die
.text:0000000000004779 ; } // starts at 4750
.text:0000000000004779 xcalloc         endp
.text:0000000000004779
.text:0000000000004779 ; ---------------------------------------------------------------------------
.text:000000000000477E                 align 20h
.text:0000000000004780
.text:0000000000004780 ; =============== S U B R O U T I N E =======================================
.text:0000000000004780
.text:0000000000004780 ; Attributes: info_from_lumina
.text:0000000000004780
.text:0000000000004780 ; void *__fastcall xmemdup(const void *p, size_t s)
.text:0000000000004780                 public xmemdup
.text:0000000000004780 xmemdup         proc near               ; CODE XREF: clone_quoting_options+28↑p
.text:0000000000004780                                         ; xstrdup+11↓j
.text:0000000000004780 ; __unwind {
.text:0000000000004780                 push    rbp
.text:0000000000004781                 push    rbx
.text:0000000000004782                 mov     rbp, rdi
.text:0000000000004785                 mov     rdi, rsi
.text:0000000000004788                 mov     rbx, rsi
.text:000000000000478B                 sub     rsp, 8
.text:000000000000478F                 call    xmalloc
.text:0000000000004794                 add     rsp, 8
.text:0000000000004798                 mov     rdx, rbx        ; n
.text:000000000000479B                 mov     rsi, rbp        ; src
.text:000000000000479E                 pop     rbx
.text:000000000000479F                 pop     rbp
.text:00000000000047A0                 mov     rdi, rax        ; dest
.text:00000000000047A3                 jmp     _memcpy
.text:00000000000047A3 ; } // starts at 4780
.text:00000000000047A3 xmemdup         endp
.text:00000000000047A3
.text:00000000000047A3 ; ---------------------------------------------------------------------------
.text:00000000000047A8                 align 10h
.text:00000000000047B0
.text:00000000000047B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000047B0
.text:00000000000047B0
.text:00000000000047B0 ; __int64 __fastcall xstrdup(void *src)
.text:00000000000047B0                 public xstrdup
.text:00000000000047B0 xstrdup         proc near
.text:00000000000047B0 ; __unwind {
.text:00000000000047B0                 push    rbx
.text:00000000000047B1                 mov     rbx, rdi
.text:00000000000047B4                 call    _strlen
.text:00000000000047B9                 mov     rdi, rbx        ; src
.text:00000000000047BC                 lea     rsi, [rax+1]    ; n
.text:00000000000047C0                 pop     rbx
.text:00000000000047C1                 jmp     short xmemdup
.text:00000000000047C1 ; } // starts at 47B0
.text:00000000000047C1 xstrdup         endp
.text:00000000000047C1
.text:00000000000047C1 ; ---------------------------------------------------------------------------
.text:00000000000047C3                 align 10h
.text:00000000000047D0
.text:00000000000047D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000047D0
.text:00000000000047D0 ; Attributes: noreturn info_from_lumina
.text:00000000000047D0
.text:00000000000047D0 ; void __cdecl xalloc_die()
.text:00000000000047D0                 public xalloc_die
.text:00000000000047D0 xalloc_die      proc near               ; CODE XREF: quotearg_n_options:loc_37A6↑p
.text:00000000000047D0                                         ; xmalloc:loc_4595↑p ...
.text:00000000000047D0 ; __unwind {
.text:00000000000047D0                 lea     rsi, aMemoryExhauste ; "memory exhausted"
.text:00000000000047D7                 sub     rsp, 8
.text:00000000000047DB                 mov     edx, 5          ; category
.text:00000000000047E0                 xor     edi, edi        ; domainname
.text:00000000000047E2                 call    _dcgettext
.text:00000000000047E7                 mov     edi, cs:exit_failure ; status
.text:00000000000047ED                 lea     rdx, format+3   ; format
.text:00000000000047F4                 mov     rcx, rax
.text:00000000000047F7                 xor     esi, esi        ; errnum
.text:00000000000047F9                 xor     eax, eax
.text:00000000000047FB                 call    _error
.text:0000000000004800                 call    _abort
.text:0000000000004800 ; } // starts at 47D0
.text:0000000000004800 xalloc_die      endp
.text:0000000000004800
.text:0000000000004800 ; ---------------------------------------------------------------------------
.text:0000000000004805                 align 10h
.text:0000000000004810
.text:0000000000004810 ; =============== S U B R O U T I N E =======================================
.text:0000000000004810
.text:0000000000004810 ; Attributes: info_from_lumina
.text:0000000000004810
.text:0000000000004810 ; int __fastcall rpl_fclose(FILE *fp)
.text:0000000000004810                 public rpl_fclose
.text:0000000000004810 rpl_fclose      proc near               ; CODE XREF: main+114↑p
.text:0000000000004810                                         ; cksum+19A↑p ...
.text:0000000000004810 ; __unwind {
.text:0000000000004810                 push    r12
.text:0000000000004812                 push    rbp
.text:0000000000004813                 push    rbx
.text:0000000000004814                 mov     rbx, rdi
.text:0000000000004817                 call    _fileno
.text:000000000000481C                 test    eax, eax
.text:000000000000481E                 mov     rdi, rbx        ; fp
.text:0000000000004821                 js      short loc_4877
.text:0000000000004823                 call    ___freading
.text:0000000000004828                 test    eax, eax
.text:000000000000482A                 jnz     short loc_4858
.text:000000000000482C
.text:000000000000482C loc_482C:                               ; CODE XREF: rpl_fclose+62↓j
.text:000000000000482C                 mov     rdi, rbx        ; stream
.text:000000000000482F                 call    rpl_fflush
.text:0000000000004834                 test    eax, eax
.text:0000000000004836                 jz      short loc_4874
.text:0000000000004838                 call    ___errno_location
.text:000000000000483D                 mov     r12d, [rax]
.text:0000000000004840                 mov     rdi, rbx        ; stream
.text:0000000000004843                 mov     rbp, rax
.text:0000000000004846                 call    _fclose
.text:000000000000484B                 test    r12d, r12d
.text:000000000000484E                 jnz     short loc_4880
.text:0000000000004850
.text:0000000000004850 loc_4850:                               ; CODE XREF: rpl_fclose+79↓j
.text:0000000000004850                 pop     rbx
.text:0000000000004851                 pop     rbp
.text:0000000000004852                 pop     r12
.text:0000000000004854                 retn
.text:0000000000004854 ; ---------------------------------------------------------------------------
.text:0000000000004855                 align 8
.text:0000000000004858
.text:0000000000004858 loc_4858:                               ; CODE XREF: rpl_fclose+1A↑j
.text:0000000000004858                 mov     rdi, rbx        ; stream
.text:000000000000485B                 call    _fileno
.text:0000000000004860                 xor     esi, esi        ; offset
.text:0000000000004862                 mov     edx, 1          ; whence
.text:0000000000004867                 mov     edi, eax        ; fd
.text:0000000000004869                 call    _lseek
.text:000000000000486E                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000004872                 jnz     short loc_482C
.text:0000000000004874
.text:0000000000004874 loc_4874:                               ; CODE XREF: rpl_fclose+26↑j
.text:0000000000004874                 mov     rdi, rbx        ; stream
.text:0000000000004877
.text:0000000000004877 loc_4877:                               ; CODE XREF: rpl_fclose+11↑j
.text:0000000000004877                 pop     rbx
.text:0000000000004878                 pop     rbp
.text:0000000000004879                 pop     r12
.text:000000000000487B                 jmp     _fclose
.text:0000000000004880 ; ---------------------------------------------------------------------------
.text:0000000000004880
.text:0000000000004880 loc_4880:                               ; CODE XREF: rpl_fclose+3E↑j
.text:0000000000004880                 mov     [rbp+0], r12d
.text:0000000000004884                 mov     eax, 0FFFFFFFFh
.text:0000000000004889                 jmp     short loc_4850
.text:0000000000004889 ; } // starts at 4810
.text:0000000000004889 rpl_fclose      endp
.text:0000000000004889
.text:0000000000004889 ; ---------------------------------------------------------------------------
.text:000000000000488B                 align 10h
.text:0000000000004890
.text:0000000000004890 ; =============== S U B R O U T I N E =======================================
.text:0000000000004890
.text:0000000000004890 ; Attributes: info_from_lumina
.text:0000000000004890
.text:0000000000004890 ; int __fastcall rpl_fflush(FILE *stream)
.text:0000000000004890                 public rpl_fflush
.text:0000000000004890 rpl_fflush      proc near               ; CODE XREF: rpl_fclose+1F↑p
.text:0000000000004890 ; __unwind {
.text:0000000000004890                 test    rdi, rdi
.text:0000000000004893                 push    rbx
.text:0000000000004894                 mov     rbx, rdi
.text:0000000000004897                 jz      short loc_48AA
.text:0000000000004899                 call    ___freading
.text:000000000000489E                 test    eax, eax
.text:00000000000048A0                 jz      short loc_48AA
.text:00000000000048A2                 test    dword ptr [rbx], 100h
.text:00000000000048A8                 jnz     short loc_48B8
.text:00000000000048AA
.text:00000000000048AA loc_48AA:                               ; CODE XREF: rpl_fflush+7↑j
.text:00000000000048AA                                         ; rpl_fflush+10↑j
.text:00000000000048AA                 mov     rdi, rbx        ; stream
.text:00000000000048AD                 pop     rbx
.text:00000000000048AE                 jmp     _fflush
.text:00000000000048AE ; ---------------------------------------------------------------------------
.text:00000000000048B3                 align 8
.text:00000000000048B8
.text:00000000000048B8 loc_48B8:                               ; CODE XREF: rpl_fflush+18↑j
.text:00000000000048B8                 mov     rdi, rbx
.text:00000000000048BB                 mov     edx, 1
.text:00000000000048C0                 xor     esi, esi
.text:00000000000048C2                 call    rpl_fseeko
.text:00000000000048C7                 mov     rdi, rbx        ; stream
.text:00000000000048CA                 pop     rbx
.text:00000000000048CB                 jmp     _fflush
.text:00000000000048CB ; } // starts at 4890
.text:00000000000048CB rpl_fflush      endp
.text:00000000000048CB
.text:00000000000048D0
.text:00000000000048D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000048D0
.text:00000000000048D0 ; Attributes: info_from_lumina
.text:00000000000048D0
.text:00000000000048D0 ; int __fastcall rpl_fseeko(FILE *fp, off_t offset, int whence)
.text:00000000000048D0                 public rpl_fseeko
.text:00000000000048D0 rpl_fseeko      proc near               ; CODE XREF: rpl_fflush+32↑p
.text:00000000000048D0 ; __unwind {
.text:00000000000048D0                 mov     rax, [rdi+8]
.text:00000000000048D4                 cmp     [rdi+10h], rax
.text:00000000000048D8                 jz      short loc_48E0
.text:00000000000048DA
.text:00000000000048DA loc_48DA:                               ; CODE XREF: rpl_fseeko+18↓j
.text:00000000000048DA                                         ; rpl_fseeko+1F↓j
.text:00000000000048DA                 jmp     _fseeko
.text:00000000000048DA ; ---------------------------------------------------------------------------
.text:00000000000048DF                 align 20h
.text:00000000000048E0
.text:00000000000048E0 loc_48E0:                               ; CODE XREF: rpl_fseeko+8↑j
.text:00000000000048E0                 mov     rax, [rdi+20h]
.text:00000000000048E4                 cmp     [rdi+28h], rax
.text:00000000000048E8                 jnz     short loc_48DA
.text:00000000000048EA                 cmp     qword ptr [rdi+48h], 0
.text:00000000000048EF                 jnz     short loc_48DA
.text:00000000000048F1                 push    r12
.text:00000000000048F3                 push    rbp
.text:00000000000048F4                 mov     r12d, edx
.text:00000000000048F7                 push    rbx
.text:00000000000048F8                 mov     rbp, rsi
.text:00000000000048FB                 mov     rbx, rdi
.text:00000000000048FE                 call    _fileno
.text:0000000000004903                 mov     edx, r12d       ; whence
.text:0000000000004906                 mov     rsi, rbp        ; offset
.text:0000000000004909                 mov     edi, eax        ; fd
.text:000000000000490B                 call    _lseek
.text:0000000000004910                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000004914                 jz      short loc_4922
.text:0000000000004916                 and     dword ptr [rbx], 0FFFFFFEFh
.text:0000000000004919                 mov     [rbx+90h], rax
.text:0000000000004920                 xor     eax, eax
.text:0000000000004922
.text:0000000000004922 loc_4922:                               ; CODE XREF: rpl_fseeko+44↑j
.text:0000000000004922                 pop     rbx
.text:0000000000004923                 pop     rbp
.text:0000000000004924                 pop     r12
.text:0000000000004926                 retn
.text:0000000000004926 ; } // starts at 48D0
.text:0000000000004926 rpl_fseeko      endp
.text:0000000000004926
.text:0000000000004926 ; ---------------------------------------------------------------------------
.text:0000000000004927                 align 10h
.text:0000000000004930
.text:0000000000004930 ; =============== S U B R O U T I N E =======================================
.text:0000000000004930
.text:0000000000004930 ; Attributes: info_from_lumina
.text:0000000000004930
.text:0000000000004930 ; size_t __fastcall rpl_mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *ps)
.text:0000000000004930                 public rpl_mbrtowc
.text:0000000000004930 rpl_mbrtowc     proc near               ; CODE XREF: quotearg_buffer_restyled+956↑p
.text:0000000000004930
.text:0000000000004930 pwc             = dword ptr -34h
.text:0000000000004930 var_30          = qword ptr -30h
.text:0000000000004930
.text:0000000000004930 ; __unwind {
.text:0000000000004930                 push    r13
.text:0000000000004932                 push    r12
.text:0000000000004934                 mov     r13, rsi
.text:0000000000004937                 push    rbp
.text:0000000000004938                 push    rbx
.text:0000000000004939                 mov     rbx, rdi
.text:000000000000493C                 mov     r12, rdx
.text:000000000000493F                 sub     rsp, 18h
.text:0000000000004943                 mov     rax, fs:28h
.text:000000000000494C                 mov     [rsp+38h+var_30], rax
.text:0000000000004951                 xor     eax, eax
.text:0000000000004953                 lea     rax, [rsp+38h+pwc]
.text:0000000000004958                 test    rdi, rdi
.text:000000000000495B                 cmovz   rbx, rax
.text:000000000000495F                 mov     rdi, rbx        ; pwc
.text:0000000000004962                 call    _mbrtowc
.text:0000000000004967                 cmp     rax, 0FFFFFFFFFFFFFFFDh
.text:000000000000496B                 mov     rbp, rax
.text:000000000000496E                 jbe     short loc_4990
.text:0000000000004970                 test    r12, r12
.text:0000000000004973                 jz      short loc_4990
.text:0000000000004975                 xor     edi, edi
.text:0000000000004977                 call    hard_locale
.text:000000000000497C                 test    al, al
.text:000000000000497E                 jnz     short loc_4990
.text:0000000000004980                 movzx   eax, byte ptr [r13+0]
.text:0000000000004985                 mov     ebp, 1
.text:000000000000498A                 mov     [rbx], eax
.text:000000000000498C                 nop     dword ptr [rax+00h]
.text:0000000000004990
.text:0000000000004990 loc_4990:                               ; CODE XREF: rpl_mbrtowc+3E↑j
.text:0000000000004990                                         ; rpl_mbrtowc+43↑j ...
.text:0000000000004990                 mov     rdx, [rsp+38h+var_30]
.text:0000000000004995                 xor     rdx, fs:28h
.text:000000000000499E                 mov     rax, rbp
.text:00000000000049A1                 jnz     short loc_49AE
.text:00000000000049A3                 add     rsp, 18h
.text:00000000000049A7                 pop     rbx
.text:00000000000049A8                 pop     rbp
.text:00000000000049A9                 pop     r12
.text:00000000000049AB                 pop     r13
.text:00000000000049AD                 retn
.text:00000000000049AE ; ---------------------------------------------------------------------------
.text:00000000000049AE
.text:00000000000049AE loc_49AE:                               ; CODE XREF: rpl_mbrtowc+71↑j
.text:00000000000049AE                 call    ___stack_chk_fail
.text:00000000000049AE ; } // starts at 4930
.text:00000000000049AE rpl_mbrtowc     endp
.text:00000000000049AE
.text:00000000000049AE ; ---------------------------------------------------------------------------
.text:00000000000049B3                 align 20h
.text:00000000000049C0
.text:00000000000049C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000049C0
.text:00000000000049C0 ; Attributes: info_from_lumina
.text:00000000000049C0
.text:00000000000049C0 ; int __fastcall close_stream(FILE *stream)
.text:00000000000049C0                 public close_stream
.text:00000000000049C0 close_stream    proc near               ; CODE XREF: close_stdout+D↑p
.text:00000000000049C0                                         ; close_stdout+33↑p
.text:00000000000049C0 ; __unwind {
.text:00000000000049C0                 push    r12
.text:00000000000049C2                 push    rbp
.text:00000000000049C3                 mov     rbp, rdi
.text:00000000000049C6                 push    rbx
.text:00000000000049C7                 call    ___fpending
.text:00000000000049CC                 mov     ebx, [rbp+0]
.text:00000000000049CF                 mov     rdi, rbp        ; stream
.text:00000000000049D2                 mov     r12, rax
.text:00000000000049D5                 call    rpl_fclose
.text:00000000000049DA                 and     ebx, 20h
.text:00000000000049DD                 test    ebx, ebx
.text:00000000000049DF                 jnz     short loc_49F8
.text:00000000000049E1                 test    eax, eax
.text:00000000000049E3                 jz      short loc_49EF
.text:00000000000049E5                 test    r12, r12
.text:00000000000049E8                 mov     eax, 0FFFFFFFFh
.text:00000000000049ED                 jz      short loc_4A28
.text:00000000000049EF
.text:00000000000049EF loc_49EF:                               ; CODE XREF: close_stream+23↑j
.text:00000000000049EF                 pop     rbx
.text:00000000000049F0                 pop     rbp
.text:00000000000049F1                 pop     r12
.text:00000000000049F3                 retn
.text:00000000000049F3 ; ---------------------------------------------------------------------------
.text:00000000000049F4                 align 8
.text:00000000000049F8
.text:00000000000049F8 loc_49F8:                               ; CODE XREF: close_stream+1F↑j
.text:00000000000049F8                 test    eax, eax
.text:00000000000049FA                 jnz     short loc_4A18
.text:00000000000049FC                 call    ___errno_location
.text:0000000000004A01                 mov     dword ptr [rax], 0
.text:0000000000004A07                 mov     eax, 0FFFFFFFFh
.text:0000000000004A0C                 pop     rbx
.text:0000000000004A0D                 pop     rbp
.text:0000000000004A0E                 pop     r12
.text:0000000000004A10                 retn
.text:0000000000004A10 ; ---------------------------------------------------------------------------
.text:0000000000004A11                 align 8
.text:0000000000004A18
.text:0000000000004A18 loc_4A18:                               ; CODE XREF: close_stream+3A↑j
.text:0000000000004A18                 pop     rbx
.text:0000000000004A19                 mov     eax, 0FFFFFFFFh
.text:0000000000004A1E                 pop     rbp
.text:0000000000004A1F                 pop     r12
.text:0000000000004A21                 retn
.text:0000000000004A21 ; ---------------------------------------------------------------------------
.text:0000000000004A22                 align 8
.text:0000000000004A28
.text:0000000000004A28 loc_4A28:                               ; CODE XREF: close_stream+2D↑j
.text:0000000000004A28                 call    ___errno_location
.text:0000000000004A2D                 cmp     dword ptr [rax], 9
.text:0000000000004A30                 pop     rbx
.text:0000000000004A31                 pop     rbp
.text:0000000000004A32                 pop     r12
.text:0000000000004A34                 setnz   al
.text:0000000000004A37                 movzx   eax, al
.text:0000000000004A3A                 neg     eax
.text:0000000000004A3C                 retn
.text:0000000000004A3C ; } // starts at 49C0
.text:0000000000004A3C close_stream    endp
.text:0000000000004A3C
.text:0000000000004A3C ; ---------------------------------------------------------------------------
.text:0000000000004A3D                 align 20h
.text:0000000000004A40
.text:0000000000004A40 ; =============== S U B R O U T I N E =======================================
.text:0000000000004A40
.text:0000000000004A40
.text:0000000000004A40                 public hard_locale
.text:0000000000004A40 hard_locale     proc near               ; CODE XREF: rpl_mbrtowc+47↑p
.text:0000000000004A40 ; __unwind {
.text:0000000000004A40                 sub     rsp, 8
.text:0000000000004A44                 xor     esi, esi        ; locale
.text:0000000000004A46                 call    _setlocale
.text:0000000000004A4B                 mov     rdx, rax
.text:0000000000004A4E                 mov     eax, 1
.text:0000000000004A53                 test    rdx, rdx
.text:0000000000004A56                 jz      short loc_4A75
.text:0000000000004A58                 lea     rdi, aC_0       ; "C"
.text:0000000000004A5F                 mov     ecx, 2
.text:0000000000004A64                 mov     rsi, rdx
.text:0000000000004A67                 repe cmpsb
.text:0000000000004A69                 setnbe  cl
.text:0000000000004A6C                 sbb     cl, 0
.text:0000000000004A6F                 xor     eax, eax
.text:0000000000004A71                 test    cl, cl
.text:0000000000004A73                 jnz     short loc_4A80
.text:0000000000004A75
.text:0000000000004A75 loc_4A75:                               ; CODE XREF: hard_locale+16↑j
.text:0000000000004A75                 add     rsp, 8
.text:0000000000004A79                 retn
.text:0000000000004A79 ; ---------------------------------------------------------------------------
.text:0000000000004A7A                 align 20h
.text:0000000000004A80
.text:0000000000004A80 loc_4A80:                               ; CODE XREF: hard_locale+33↑j
.text:0000000000004A80                 lea     rdi, aPosix     ; "POSIX"
.text:0000000000004A87                 mov     ecx, 6
.text:0000000000004A8C                 mov     rsi, rdx
.text:0000000000004A8F                 repe cmpsb
.text:0000000000004A91                 setnbe  al
.text:0000000000004A94                 sbb     al, 0
.text:0000000000004A96                 test    al, al
.text:0000000000004A98                 setnz   al
.text:0000000000004A9B                 add     rsp, 8
.text:0000000000004A9F                 retn
.text:0000000000004A9F ; } // starts at 4A40
.text:0000000000004A9F hard_locale     endp
.text:0000000000004A9F
.text:0000000000004AA0
.text:0000000000004AA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000004AA0
.text:0000000000004AA0
.text:0000000000004AA0                 public locale_charset
.text:0000000000004AA0 locale_charset  proc near               ; CODE XREF: gettext_quote+B↑p
.text:0000000000004AA0 ; __unwind {
.text:0000000000004AA0                 sub     rsp, 8
.text:0000000000004AA4                 mov     edi, 0Eh        ; item
.text:0000000000004AA9                 call    _nl_langinfo
.text:0000000000004AAE                 test    rax, rax
.text:0000000000004AB1                 jz      short loc_4AD0
.text:0000000000004AB3                 cmp     byte ptr [rax], 0
.text:0000000000004AB6                 lea     rdx, aAscii     ; "ASCII"
.text:0000000000004ABD                 cmovz   rax, rdx
.text:0000000000004AC1                 add     rsp, 8
.text:0000000000004AC5                 retn
.text:0000000000004AC5 ; ---------------------------------------------------------------------------
.text:0000000000004AC6                 align 10h
.text:0000000000004AD0
.text:0000000000004AD0 loc_4AD0:                               ; CODE XREF: locale_charset+11↑j
.text:0000000000004AD0                 lea     rax, aAscii     ; "ASCII"
.text:0000000000004AD7                 add     rsp, 8
.text:0000000000004ADB                 retn
.text:0000000000004ADB ; } // starts at 4AA0
.text:0000000000004ADB locale_charset  endp
.text:0000000000004ADB
.text:0000000000004ADB ; ---------------------------------------------------------------------------
.text:0000000000004ADC                 align 20h
.text:0000000000004AE0
.text:0000000000004AE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000004AE0
.text:0000000000004AE0 ; Attributes: info_from_lumina
.text:0000000000004AE0
.text:0000000000004AE0 ; void _libc_csu_init(void)
.text:0000000000004AE0                 public __libc_csu_init
.text:0000000000004AE0 __libc_csu_init proc near               ; DATA XREF: start+16↑o
.text:0000000000004AE0 ; __unwind {
.text:0000000000004AE0                 push    r15
.text:0000000000004AE2                 push    r14
.text:0000000000004AE4                 mov     r15, rdx
.text:0000000000004AE7                 push    r13
.text:0000000000004AE9                 push    r12
.text:0000000000004AEB                 lea     r12, __frame_dummy_init_array_entry
.text:0000000000004AF2                 push    rbp
.text:0000000000004AF3                 lea     rbp, __do_global_dtors_aux_fini_array_entry
.text:0000000000004AFA                 push    rbx
.text:0000000000004AFB                 mov     r13d, edi
.text:0000000000004AFE                 mov     r14, rsi
.text:0000000000004B01                 sub     rbp, r12
.text:0000000000004B04                 sub     rsp, 8
.text:0000000000004B08                 sar     rbp, 3
.text:0000000000004B0C                 call    _init_proc
.text:0000000000004B11                 test    rbp, rbp
.text:0000000000004B14                 jz      short loc_4B36
.text:0000000000004B16                 xor     ebx, ebx
.text:0000000000004B18                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000004B20
.text:0000000000004B20 loc_4B20:                               ; CODE XREF: __libc_csu_init+54↓j
.text:0000000000004B20                 mov     rdx, r15
.text:0000000000004B23                 mov     rsi, r14
.text:0000000000004B26                 mov     edi, r13d
.text:0000000000004B29                 call    ds:(__frame_dummy_init_array_entry - 207BB0h)[r12+rbx*8]
.text:0000000000004B2D                 add     rbx, 1
.text:0000000000004B31                 cmp     rbp, rbx
.text:0000000000004B34                 jnz     short loc_4B20
.text:0000000000004B36
.text:0000000000004B36 loc_4B36:                               ; CODE XREF: __libc_csu_init+34↑j
.text:0000000000004B36                 add     rsp, 8
.text:0000000000004B3A                 pop     rbx
.text:0000000000004B3B                 pop     rbp
.text:0000000000004B3C                 pop     r12
.text:0000000000004B3E                 pop     r13
.text:0000000000004B40                 pop     r14
.text:0000000000004B42                 pop     r15
.text:0000000000004B44                 retn
.text:0000000000004B44 ; } // starts at 4AE0
.text:0000000000004B44 __libc_csu_init endp
.text:0000000000004B44
.text:0000000000004B44 ; ---------------------------------------------------------------------------
.text:0000000000004B45                 align 10h
.text:0000000000004B50
.text:0000000000004B50 ; =============== S U B R O U T I N E =======================================
.text:0000000000004B50
.text:0000000000004B50
.text:0000000000004B50 ; void _libc_csu_fini(void)
.text:0000000000004B50                 public __libc_csu_fini
.text:0000000000004B50 __libc_csu_fini proc near               ; DATA XREF: start+F↑o
.text:0000000000004B50 ; __unwind {
.text:0000000000004B50                 rep retn
.text:0000000000004B50 ; } // starts at 4B50
.text:0000000000004B50 __libc_csu_fini endp
.text:0000000000004B50
.text:0000000000004B50 ; ---------------------------------------------------------------------------
.text:0000000000004B52                 align 20h
.text:0000000000004B60
.text:0000000000004B60 ; =============== S U B R O U T I N E =======================================
.text:0000000000004B60
.text:0000000000004B60
.text:0000000000004B60 atexit          proc near               ; CODE XREF: main+49↑p
.text:0000000000004B60 ; __unwind {
.text:0000000000004B60                 mov     rdx, cs:__dso_handle ; lpdso_handle
.text:0000000000004B67                 xor     esi, esi        ; obj
.text:0000000000004B69                 jmp     ___cxa_atexit
.text:0000000000004B69 ; } // starts at 4B60
.text:0000000000004B69 atexit          endp
.text:0000000000004B69
.text:0000000000004B69 _text           ends
.text:0000000000004B69
LOAD:0000000000004B6E ; ===========================================================================
LOAD:0000000000004B6E
LOAD:0000000000004B6E ; Segment type: Pure code
LOAD:0000000000004B6E ; Segment permissions: Read/Execute
LOAD:0000000000004B6E LOAD            segment byte public 'CODE' use64
LOAD:0000000000004B6E                 assume cs:LOAD
LOAD:0000000000004B6E                 ;org 4B6Eh
LOAD:0000000000004B6E                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000004B6E                 align 10h
LOAD:0000000000004B6E LOAD            ends
LOAD:0000000000004B6E
.fini:0000000000004B70 ; ===========================================================================
.fini:0000000000004B70
.fini:0000000000004B70 ; Segment type: Pure code
.fini:0000000000004B70 ; Segment permissions: Read/Execute
.fini:0000000000004B70 _fini           segment dword public 'CODE' use64
.fini:0000000000004B70                 assume cs:_fini
.fini:0000000000004B70                 ;org 4B70h
.fini:0000000000004B70                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.fini:0000000000004B70
.fini:0000000000004B70 ; =============== S U B R O U T I N E =======================================
.fini:0000000000004B70
.fini:0000000000004B70
.fini:0000000000004B70                 public _term_proc
.fini:0000000000004B70 _term_proc      proc near
.fini:0000000000004B70                 sub     rsp, 8          ; _fini
.fini:0000000000004B74                 add     rsp, 8
.fini:0000000000004B78                 retn
.fini:0000000000004B78 _term_proc      endp
.fini:0000000000004B78
.fini:0000000000004B78 _fini           ends
.fini:0000000000004B78
LOAD:0000000000004B79 ; ===========================================================================
LOAD:0000000000004B79
LOAD:0000000000004B79 ; Segment type: Pure code
LOAD:0000000000004B79 ; Segment permissions: Read/Execute
LOAD:0000000000004B79 LOAD            segment byte public 'CODE' use64
LOAD:0000000000004B79                 assume cs:LOAD
LOAD:0000000000004B79                 ;org 4B79h
LOAD:0000000000004B79                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000004B79                 align 20h
LOAD:0000000000004B79 LOAD            ends
LOAD:0000000000004B79
.rodata:0000000000004B80 ; ===========================================================================
.rodata:0000000000004B80
.rodata:0000000000004B80 ; Segment type: Pure data
.rodata:0000000000004B80 ; Segment permissions: Read
.rodata:0000000000004B80 _rodata         segment align_32 public 'CONST' use64
.rodata:0000000000004B80                 assume cs:_rodata
.rodata:0000000000004B80                 ;org 4B80h
.rodata:0000000000004B80                 public _IO_stdin_used
.rodata:0000000000004B80 _IO_stdin_used  db    1
.rodata:0000000000004B81                 db    0
.rodata:0000000000004B82                 db    2
.rodata:0000000000004B83                 db    0
.rodata:0000000000004B84 ; const char msgid[]
.rodata:0000000000004B84 msgid           db '%s: file too long',0
.rodata:0000000000004B84                                         ; DATA XREF: cksum+28B↑o
.rodata:0000000000004B96 aUSS            db '%u %s %s',0Ah,0     ; DATA XREF: cksum:loc_19E8↑o
.rodata:0000000000004B96                                         ; version_etc_arn+13E↑o
.rodata:0000000000004BA0 aUS             db '%u %s',0Ah,0        ; DATA XREF: cksum+13F↑o
.rodata:0000000000004BA7 ; const char aWriteError[]
.rodata:0000000000004BA7 aWriteError     db 'write error',0      ; DATA XREF: cksum:loc_1AC5↑o
.rodata:0000000000004BA7                                         ; close_stdout:loc_1EB3↑o ...
.rodata:0000000000004BB3 ; const char format[]
.rodata:0000000000004BB3 format          db '-: %s',0            ; DATA XREF: cksum+2D2↑o
.rodata:0000000000004BB3                                         ; cksum+1C1↑o ...
.rodata:0000000000004BB9 aCksum          db 'cksum',0            ; DATA XREF: main+7E↑o
.rodata:0000000000004BB9                                         ; usage+EA↑o ...
.rodata:0000000000004BBF asc_4BBF        db '[',0                ; DATA XREF: usage+F6↑o
.rodata:0000000000004BC1 aTestInvocation db 'test invocation',0  ; DATA XREF: usage+11D↑o
.rodata:0000000000004BD1 aMultiCallInvoc db 'Multi-call invocation',0
.rodata:0000000000004BD1                                         ; DATA XREF: usage+14D↑o
.rodata:0000000000004BD1                                         ; usage+244↑o ...
.rodata:0000000000004BE7 aSha224sum      db 'sha224sum',0        ; DATA XREF: usage+15E↑o
.rodata:0000000000004BF1 aSha2Utilities  db 'sha2 utilities',0   ; DATA XREF: usage+16A↑o
.rodata:0000000000004C00 aSha256sum      db 'sha256sum',0        ; DATA XREF: usage+FD↑o
.rodata:0000000000004C0A aSha384sum      db 'sha384sum',0        ; DATA XREF: usage+129↑o
.rodata:0000000000004C14 aSha512sum      db 'sha512sum',0        ; DATA XREF: usage+141↑o
.rodata:0000000000004C1E ; const char aSOnlineHelpS[]
.rodata:0000000000004C1E aSOnlineHelpS   db 0Ah                  ; DATA XREF: usage+1B2↑o
.rodata:0000000000004C1E                 db '%s online help: <%s>',0Ah,0
.rodata:0000000000004C35 unk_4C35        db  47h ; G             ; DATA XREF: usage+1CE↑o
.rodata:0000000000004C35                                         ; usage+28F↑o ...
.rodata:0000000000004C36                 db  4Eh ; N
.rodata:0000000000004C37                 db  55h ; U
.rodata:0000000000004C38                 db  20h
.rodata:0000000000004C39 ; const char domainname[]
.rodata:0000000000004C39 domainname      db 'coreutils',0        ; DATA XREF: main+2A↑o
.rodata:0000000000004C39                                         ; main+36↑o ...
.rodata:0000000000004C43 ; const char s2[]
.rodata:0000000000004C43 s2              db 'en_',0              ; DATA XREF: usage+1F5↑o
.rodata:0000000000004C43                                         ; usage+2B6↑o
.rodata:0000000000004C47 ; const char aFullDocumentat[]
.rodata:0000000000004C47 aFullDocumentat db 'Full documentation <%s%s>',0Ah,0
.rodata:0000000000004C47                                         ; DATA XREF: usage:loc_1D11↑o
.rodata:0000000000004C47                                         ; usage:loc_1DCE↑o
.rodata:0000000000004C62 ; const char dirname[]
.rodata:0000000000004C62 dirname         db '/usr/local/share/locale',0
.rodata:0000000000004C62                                         ; DATA XREF: main+23↑o
.rodata:0000000000004C7A aQFrankXia      db 'Q. Frank Xia',0     ; DATA XREF: main+63↑o
.rodata:0000000000004C87                 align 8
.rodata:0000000000004C88 ; const char aTrySHelpForMor[]
.rodata:0000000000004C88 aTrySHelpForMor db 'Try ',27h,'%s --help',27h,' for more information.',0Ah,0
.rodata:0000000000004C88                                         ; DATA XREF: usage+2F↑o
.rodata:0000000000004CAF                 align 10h
.rodata:0000000000004CB0 ; const char aUsageSFileOrSO[]
.rodata:0000000000004CB0 aUsageSFileOrSO db 'Usage: %s [FILE]...',0Ah
.rodata:0000000000004CB0                                         ; DATA XREF: usage:loc_1B5D↑o
.rodata:0000000000004CB0                 db '  or:  %s [OPTION]',0Ah,0
.rodata:0000000000004CD8 ; const char aPrintCrcChecks[]
.rodata:0000000000004CD8 aPrintCrcChecks db 'Print CRC checksum and byte counts of each FILE.',0Ah
.rodata:0000000000004CD8                                         ; DATA XREF: usage+87↑o
.rodata:0000000000004CD8                 db 0Ah,0
.rodata:0000000000004D0B                 align 10h
.rodata:0000000000004D10 ; const char aHelpDisplayThi[]
.rodata:0000000000004D10 aHelpDisplayThi db '      --help     display this help and exit',0Ah,0
.rodata:0000000000004D10                                         ; DATA XREF: usage+AC↑o
.rodata:0000000000004D3D                 align 20h
.rodata:0000000000004D40 ; const char aVersionOutputV[]
.rodata:0000000000004D40 aVersionOutputV db '      --version  output version information and exit',0Ah,0
.rodata:0000000000004D40                                         ; DATA XREF: usage+D1↑o
.rodata:0000000000004D76                 align 8
.rodata:0000000000004D78 aHttpsWwwGnuOrg db 'https://www.gnu.org/software/coreutils/',0
.rodata:0000000000004D78                                         ; DATA XREF: usage+1C7↑o
.rodata:0000000000004D78                                         ; usage+22B↑o ...
.rodata:0000000000004DA0 ; const char aReportAnyTrans[]
.rodata:0000000000004DA0 aReportAnyTrans db 'Report any translation bugs to <https://translationproject.org/te'
.rodata:0000000000004DA0                                         ; DATA XREF: usage+31F↑o
.rodata:0000000000004DA0                 db 'am/>',0Ah,0
.rodata:0000000000004DE7                 align 8
.rodata:0000000000004DE8 ; const char aOrAvailableLoc[]
.rodata:0000000000004DE8 aOrAvailableLoc db 'or available locally via: info ',27h,'(coreutils) %s%s',27h,0Ah,0
.rodata:0000000000004DE8                                         ; DATA XREF: usage:loc_1D56↑o
.rodata:0000000000004E1B                 align 20h
.rodata:0000000000004E20 crctab          db    0                 ; DATA XREF: cksum+5C↑o
.rodata:0000000000004E20                                         ; cksum+108↑o
.rodata:0000000000004E21                 db    0
.rodata:0000000000004E22                 db    0
.rodata:0000000000004E23                 db    0
.rodata:0000000000004E24                 db    0
.rodata:0000000000004E25                 db    0
.rodata:0000000000004E26                 db    0
.rodata:0000000000004E27                 db    0
.rodata:0000000000004E28                 db 0B7h
.rodata:0000000000004E29                 db  1Dh
.rodata:0000000000004E2A                 db 0C1h
.rodata:0000000000004E2B                 db    4
.rodata:0000000000004E2C                 db    0
.rodata:0000000000004E2D                 db    0
.rodata:0000000000004E2E                 db    0
.rodata:0000000000004E2F                 db    0
.rodata:0000000000004E30                 db  6Eh ; n
.rodata:0000000000004E31                 db  3Bh ; ;
.rodata:0000000000004E32                 db  82h
.rodata:0000000000004E33                 db    9
.rodata:0000000000004E34                 db    0
.rodata:0000000000004E35                 db    0
.rodata:0000000000004E36                 db    0
.rodata:0000000000004E37                 db    0
.rodata:0000000000004E38                 db 0D9h
.rodata:0000000000004E39                 db  26h ; &
.rodata:0000000000004E3A                 db  43h ; C
.rodata:0000000000004E3B                 db  0Dh
.rodata:0000000000004E3C                 db    0
.rodata:0000000000004E3D                 db    0
.rodata:0000000000004E3E                 db    0
.rodata:0000000000004E3F                 db    0
.rodata:0000000000004E40                 db 0DCh
.rodata:0000000000004E41                 db  76h ; v
.rodata:0000000000004E42                 db    4
.rodata:0000000000004E43                 db  13h
.rodata:0000000000004E44                 db    0
.rodata:0000000000004E45                 db    0
.rodata:0000000000004E46                 db    0
.rodata:0000000000004E47                 db    0
.rodata:0000000000004E48                 db  6Bh ; k
.rodata:0000000000004E49                 db  6Bh ; k
.rodata:0000000000004E4A                 db 0C5h
.rodata:0000000000004E4B                 db  17h
.rodata:0000000000004E4C                 db    0
.rodata:0000000000004E4D                 db    0
.rodata:0000000000004E4E                 db    0
.rodata:0000000000004E4F                 db    0
.rodata:0000000000004E50                 db 0B2h
.rodata:0000000000004E51                 db  4Dh ; M
.rodata:0000000000004E52                 db  86h
.rodata:0000000000004E53                 db  1Ah
.rodata:0000000000004E54                 db    0
.rodata:0000000000004E55                 db    0
.rodata:0000000000004E56                 db    0
.rodata:0000000000004E57                 db    0
.rodata:0000000000004E58                 db    5
.rodata:0000000000004E59                 db  50h ; P
.rodata:0000000000004E5A                 db  47h ; G
.rodata:0000000000004E5B                 db  1Eh
.rodata:0000000000004E5C                 db    0
.rodata:0000000000004E5D                 db    0
.rodata:0000000000004E5E                 db    0
.rodata:0000000000004E5F                 db    0
.rodata:0000000000004E60                 db 0B8h
.rodata:0000000000004E61                 db 0EDh
.rodata:0000000000004E62                 db    8
.rodata:0000000000004E63                 db  26h ; &
.rodata:0000000000004E64                 db    0
.rodata:0000000000004E65                 db    0
.rodata:0000000000004E66                 db    0
.rodata:0000000000004E67                 db    0
.rodata:0000000000004E68                 db  0Fh
.rodata:0000000000004E69                 db 0F0h
.rodata:0000000000004E6A                 db 0C9h
.rodata:0000000000004E6B                 db  22h ; "
.rodata:0000000000004E6C                 db    0
.rodata:0000000000004E6D                 db    0
.rodata:0000000000004E6E                 db    0
.rodata:0000000000004E6F                 db    0
.rodata:0000000000004E70                 db 0D6h
.rodata:0000000000004E71                 db 0D6h
.rodata:0000000000004E72                 db  8Ah
.rodata:0000000000004E73                 db  2Fh ; /
.rodata:0000000000004E74                 db    0
.rodata:0000000000004E75                 db    0
.rodata:0000000000004E76                 db    0
.rodata:0000000000004E77                 db    0
.rodata:0000000000004E78                 db  61h ; a
.rodata:0000000000004E79                 db 0CBh
.rodata:0000000000004E7A                 db  4Bh ; K
.rodata:0000000000004E7B                 db  2Bh ; +
.rodata:0000000000004E7C                 db    0
.rodata:0000000000004E7D                 db    0
.rodata:0000000000004E7E                 db    0
.rodata:0000000000004E7F                 db    0
.rodata:0000000000004E80                 db  64h ; d
.rodata:0000000000004E81                 db  9Bh
.rodata:0000000000004E82                 db  0Ch
.rodata:0000000000004E83                 db  35h ; 5
.rodata:0000000000004E84                 db    0
.rodata:0000000000004E85                 db    0
.rodata:0000000000004E86                 db    0
.rodata:0000000000004E87                 db    0
.rodata:0000000000004E88                 db 0D3h
.rodata:0000000000004E89                 db  86h
.rodata:0000000000004E8A                 db 0CDh
.rodata:0000000000004E8B                 db  31h ; 1
.rodata:0000000000004E8C                 db    0
.rodata:0000000000004E8D                 db    0
.rodata:0000000000004E8E                 db    0
.rodata:0000000000004E8F                 db    0
.rodata:0000000000004E90                 db  0Ah
.rodata:0000000000004E91                 db 0A0h
.rodata:0000000000004E92                 db  8Eh
.rodata:0000000000004E93                 db  3Ch ; <
.rodata:0000000000004E94                 db    0
.rodata:0000000000004E95                 db    0
.rodata:0000000000004E96                 db    0
.rodata:0000000000004E97                 db    0
.rodata:0000000000004E98                 db 0BDh
.rodata:0000000000004E99                 db 0BDh
.rodata:0000000000004E9A                 db  4Fh ; O
.rodata:0000000000004E9B                 db  38h ; 8
.rodata:0000000000004E9C                 db    0
.rodata:0000000000004E9D                 db    0
.rodata:0000000000004E9E                 db    0
.rodata:0000000000004E9F                 db    0
.rodata:0000000000004EA0                 db  70h ; p
.rodata:0000000000004EA1                 db 0DBh
.rodata:0000000000004EA2                 db  11h
.rodata:0000000000004EA3                 db  4Ch ; L
.rodata:0000000000004EA4                 db    0
.rodata:0000000000004EA5                 db    0
.rodata:0000000000004EA6                 db    0
.rodata:0000000000004EA7                 db    0
.rodata:0000000000004EA8                 db 0C7h
.rodata:0000000000004EA9                 db 0C6h
.rodata:0000000000004EAA                 db 0D0h
.rodata:0000000000004EAB                 db  48h ; H
.rodata:0000000000004EAC                 db    0
.rodata:0000000000004EAD                 db    0
.rodata:0000000000004EAE                 db    0
.rodata:0000000000004EAF                 db    0
.rodata:0000000000004EB0                 db  1Eh
.rodata:0000000000004EB1                 db 0E0h
.rodata:0000000000004EB2                 db  93h
.rodata:0000000000004EB3                 db  45h ; E
.rodata:0000000000004EB4                 db    0
.rodata:0000000000004EB5                 db    0
.rodata:0000000000004EB6                 db    0
.rodata:0000000000004EB7                 db    0
.rodata:0000000000004EB8                 db 0A9h
.rodata:0000000000004EB9                 db 0FDh
.rodata:0000000000004EBA                 db  52h ; R
.rodata:0000000000004EBB                 db  41h ; A
.rodata:0000000000004EBC                 db    0
.rodata:0000000000004EBD                 db    0
.rodata:0000000000004EBE                 db    0
.rodata:0000000000004EBF                 db    0
.rodata:0000000000004EC0                 db 0ACh
.rodata:0000000000004EC1                 db 0ADh
.rodata:0000000000004EC2                 db  15h
.rodata:0000000000004EC3                 db  5Fh ; _
.rodata:0000000000004EC4                 db    0
.rodata:0000000000004EC5                 db    0
.rodata:0000000000004EC6                 db    0
.rodata:0000000000004EC7                 db    0
.rodata:0000000000004EC8                 db  1Bh
.rodata:0000000000004EC9                 db 0B0h
.rodata:0000000000004ECA                 db 0D4h
.rodata:0000000000004ECB                 db  5Bh ; [
.rodata:0000000000004ECC                 db    0
.rodata:0000000000004ECD                 db    0
.rodata:0000000000004ECE                 db    0
.rodata:0000000000004ECF                 db    0
.rodata:0000000000004ED0                 db 0C2h
.rodata:0000000000004ED1                 db  96h
.rodata:0000000000004ED2                 db  97h
.rodata:0000000000004ED3                 db  56h ; V
.rodata:0000000000004ED4                 db    0
.rodata:0000000000004ED5                 db    0
.rodata:0000000000004ED6                 db    0
.rodata:0000000000004ED7                 db    0
.rodata:0000000000004ED8                 db  75h ; u
.rodata:0000000000004ED9                 db  8Bh
.rodata:0000000000004EDA                 db  56h ; V
.rodata:0000000000004EDB                 db  52h ; R
.rodata:0000000000004EDC                 db    0
.rodata:0000000000004EDD                 db    0
.rodata:0000000000004EDE                 db    0
.rodata:0000000000004EDF                 db    0
.rodata:0000000000004EE0                 db 0C8h
.rodata:0000000000004EE1                 db  36h ; 6
.rodata:0000000000004EE2                 db  19h
.rodata:0000000000004EE3                 db  6Ah ; j
.rodata:0000000000004EE4                 db    0
.rodata:0000000000004EE5                 db    0
.rodata:0000000000004EE6                 db    0
.rodata:0000000000004EE7                 db    0
.rodata:0000000000004EE8                 db  7Fh ; 
.rodata:0000000000004EE9                 db  2Bh ; +
.rodata:0000000000004EEA                 db 0D8h
.rodata:0000000000004EEB                 db  6Eh ; n
.rodata:0000000000004EEC                 db    0
.rodata:0000000000004EED                 db    0
.rodata:0000000000004EEE                 db    0
.rodata:0000000000004EEF                 db    0
.rodata:0000000000004EF0                 db 0A6h
.rodata:0000000000004EF1                 db  0Dh
.rodata:0000000000004EF2                 db  9Bh
.rodata:0000000000004EF3                 db  63h ; c
.rodata:0000000000004EF4                 db    0
.rodata:0000000000004EF5                 db    0
.rodata:0000000000004EF6                 db    0
.rodata:0000000000004EF7                 db    0
.rodata:0000000000004EF8                 db  11h
.rodata:0000000000004EF9                 db  10h
.rodata:0000000000004EFA                 db  5Ah ; Z
.rodata:0000000000004EFB                 db  67h ; g
.rodata:0000000000004EFC                 db    0
.rodata:0000000000004EFD                 db    0
.rodata:0000000000004EFE                 db    0
.rodata:0000000000004EFF                 db    0
.rodata:0000000000004F00                 db  14h
.rodata:0000000000004F01                 db  40h ; @
.rodata:0000000000004F02                 db  1Dh
.rodata:0000000000004F03                 db  79h ; y
.rodata:0000000000004F04                 db    0
.rodata:0000000000004F05                 db    0
.rodata:0000000000004F06                 db    0
.rodata:0000000000004F07                 db    0
.rodata:0000000000004F08                 db 0A3h
.rodata:0000000000004F09                 db  5Dh ; ]
.rodata:0000000000004F0A                 db 0DCh
.rodata:0000000000004F0B                 db  7Dh ; }
.rodata:0000000000004F0C                 db    0
.rodata:0000000000004F0D                 db    0
.rodata:0000000000004F0E                 db    0
.rodata:0000000000004F0F                 db    0
.rodata:0000000000004F10                 db  7Ah ; z
.rodata:0000000000004F11                 db  7Bh ; {
.rodata:0000000000004F12                 db  9Fh
.rodata:0000000000004F13                 db  70h ; p
.rodata:0000000000004F14                 db    0
.rodata:0000000000004F15                 db    0
.rodata:0000000000004F16                 db    0
.rodata:0000000000004F17                 db    0
.rodata:0000000000004F18                 db 0CDh
.rodata:0000000000004F19                 db  66h ; f
.rodata:0000000000004F1A                 db  5Eh ; ^
.rodata:0000000000004F1B                 db  74h ; t
.rodata:0000000000004F1C                 db    0
.rodata:0000000000004F1D                 db    0
.rodata:0000000000004F1E                 db    0
.rodata:0000000000004F1F                 db    0
.rodata:0000000000004F20                 db 0E0h
.rodata:0000000000004F21                 db 0B6h
.rodata:0000000000004F22                 db  23h ; #
.rodata:0000000000004F23                 db  98h
.rodata:0000000000004F24                 db    0
.rodata:0000000000004F25                 db    0
.rodata:0000000000004F26                 db    0
.rodata:0000000000004F27                 db    0
.rodata:0000000000004F28                 db  57h ; W
.rodata:0000000000004F29                 db 0ABh
.rodata:0000000000004F2A                 db 0E2h
.rodata:0000000000004F2B                 db  9Ch
.rodata:0000000000004F2C                 db    0
.rodata:0000000000004F2D                 db    0
.rodata:0000000000004F2E                 db    0
.rodata:0000000000004F2F                 db    0
.rodata:0000000000004F30                 db  8Eh
.rodata:0000000000004F31                 db  8Dh
.rodata:0000000000004F32                 db 0A1h
.rodata:0000000000004F33                 db  91h
.rodata:0000000000004F34                 db    0
.rodata:0000000000004F35                 db    0
.rodata:0000000000004F36                 db    0
.rodata:0000000000004F37                 db    0
.rodata:0000000000004F38                 db  39h ; 9
.rodata:0000000000004F39                 db  90h
.rodata:0000000000004F3A                 db  60h ; `
.rodata:0000000000004F3B                 db  95h
.rodata:0000000000004F3C                 db    0
.rodata:0000000000004F3D                 db    0
.rodata:0000000000004F3E                 db    0
.rodata:0000000000004F3F                 db    0
.rodata:0000000000004F40                 db  3Ch ; <
.rodata:0000000000004F41                 db 0C0h
.rodata:0000000000004F42                 db  27h ; '
.rodata:0000000000004F43                 db  8Bh
.rodata:0000000000004F44                 db    0
.rodata:0000000000004F45                 db    0
.rodata:0000000000004F46                 db    0
.rodata:0000000000004F47                 db    0
.rodata:0000000000004F48                 db  8Bh
.rodata:0000000000004F49                 db 0DDh
.rodata:0000000000004F4A                 db 0E6h
.rodata:0000000000004F4B                 db  8Fh
.rodata:0000000000004F4C                 db    0
.rodata:0000000000004F4D                 db    0
.rodata:0000000000004F4E                 db    0
.rodata:0000000000004F4F                 db    0
.rodata:0000000000004F50                 db  52h ; R
.rodata:0000000000004F51                 db 0FBh
.rodata:0000000000004F52                 db 0A5h
.rodata:0000000000004F53                 db  82h
.rodata:0000000000004F54                 db    0
.rodata:0000000000004F55                 db    0
.rodata:0000000000004F56                 db    0
.rodata:0000000000004F57                 db    0
.rodata:0000000000004F58                 db 0E5h
.rodata:0000000000004F59                 db 0E6h
.rodata:0000000000004F5A                 db  64h ; d
.rodata:0000000000004F5B                 db  86h
.rodata:0000000000004F5C                 db    0
.rodata:0000000000004F5D                 db    0
.rodata:0000000000004F5E                 db    0
.rodata:0000000000004F5F                 db    0
.rodata:0000000000004F60                 db  58h ; X
.rodata:0000000000004F61                 db  5Bh ; [
.rodata:0000000000004F62                 db  2Bh ; +
.rodata:0000000000004F63                 db 0BEh
.rodata:0000000000004F64                 db    0
.rodata:0000000000004F65                 db    0
.rodata:0000000000004F66                 db    0
.rodata:0000000000004F67                 db    0
.rodata:0000000000004F68                 db 0EFh
.rodata:0000000000004F69                 db  46h ; F
.rodata:0000000000004F6A                 db 0EAh
.rodata:0000000000004F6B                 db 0BAh
.rodata:0000000000004F6C                 db    0
.rodata:0000000000004F6D                 db    0
.rodata:0000000000004F6E                 db    0
.rodata:0000000000004F6F                 db    0
.rodata:0000000000004F70                 db  36h ; 6
.rodata:0000000000004F71                 db  60h ; `
.rodata:0000000000004F72                 db 0A9h
.rodata:0000000000004F73                 db 0B7h
.rodata:0000000000004F74                 db    0
.rodata:0000000000004F75                 db    0
.rodata:0000000000004F76                 db    0
.rodata:0000000000004F77                 db    0
.rodata:0000000000004F78                 db  81h
.rodata:0000000000004F79                 db  7Dh ; }
.rodata:0000000000004F7A                 db  68h ; h
.rodata:0000000000004F7B                 db 0B3h
.rodata:0000000000004F7C                 db    0
.rodata:0000000000004F7D                 db    0
.rodata:0000000000004F7E                 db    0
.rodata:0000000000004F7F                 db    0
.rodata:0000000000004F80                 db  84h
.rodata:0000000000004F81                 db  2Dh ; -
.rodata:0000000000004F82                 db  2Fh ; /
.rodata:0000000000004F83                 db 0ADh
.rodata:0000000000004F84                 db    0
.rodata:0000000000004F85                 db    0
.rodata:0000000000004F86                 db    0
.rodata:0000000000004F87                 db    0
.rodata:0000000000004F88                 db  33h ; 3
.rodata:0000000000004F89                 db  30h ; 0
.rodata:0000000000004F8A                 db 0EEh
.rodata:0000000000004F8B                 db 0A9h
.rodata:0000000000004F8C                 db    0
.rodata:0000000000004F8D                 db    0
.rodata:0000000000004F8E                 db    0
.rodata:0000000000004F8F                 db    0
.rodata:0000000000004F90                 db 0EAh
.rodata:0000000000004F91                 db  16h
.rodata:0000000000004F92                 db 0ADh
.rodata:0000000000004F93                 db 0A4h
.rodata:0000000000004F94                 db    0
.rodata:0000000000004F95                 db    0
.rodata:0000000000004F96                 db    0
.rodata:0000000000004F97                 db    0
.rodata:0000000000004F98                 db  5Dh ; ]
.rodata:0000000000004F99                 db  0Bh
.rodata:0000000000004F9A                 db  6Ch ; l
.rodata:0000000000004F9B                 db 0A0h
.rodata:0000000000004F9C                 db    0
.rodata:0000000000004F9D                 db    0
.rodata:0000000000004F9E                 db    0
.rodata:0000000000004F9F                 db    0
.rodata:0000000000004FA0                 db  90h
.rodata:0000000000004FA1                 db  6Dh ; m
.rodata:0000000000004FA2                 db  32h ; 2
.rodata:0000000000004FA3                 db 0D4h
.rodata:0000000000004FA4                 db    0
.rodata:0000000000004FA5                 db    0
.rodata:0000000000004FA6                 db    0
.rodata:0000000000004FA7                 db    0
.rodata:0000000000004FA8                 db  27h ; '
.rodata:0000000000004FA9                 db  70h ; p
.rodata:0000000000004FAA                 db 0F3h
.rodata:0000000000004FAB                 db 0D0h
.rodata:0000000000004FAC                 db    0
.rodata:0000000000004FAD                 db    0
.rodata:0000000000004FAE                 db    0
.rodata:0000000000004FAF                 db    0
.rodata:0000000000004FB0                 db 0FEh
.rodata:0000000000004FB1                 db  56h ; V
.rodata:0000000000004FB2                 db 0B0h
.rodata:0000000000004FB3                 db 0DDh
.rodata:0000000000004FB4                 db    0
.rodata:0000000000004FB5                 db    0
.rodata:0000000000004FB6                 db    0
.rodata:0000000000004FB7                 db    0
.rodata:0000000000004FB8                 db  49h ; I
.rodata:0000000000004FB9                 db  4Bh ; K
.rodata:0000000000004FBA                 db  71h ; q
.rodata:0000000000004FBB                 db 0D9h
.rodata:0000000000004FBC                 db    0
.rodata:0000000000004FBD                 db    0
.rodata:0000000000004FBE                 db    0
.rodata:0000000000004FBF                 db    0
.rodata:0000000000004FC0                 db  4Ch ; L
.rodata:0000000000004FC1                 db  1Bh
.rodata:0000000000004FC2                 db  36h ; 6
.rodata:0000000000004FC3                 db 0C7h
.rodata:0000000000004FC4                 db    0
.rodata:0000000000004FC5                 db    0
.rodata:0000000000004FC6                 db    0
.rodata:0000000000004FC7                 db    0
.rodata:0000000000004FC8                 db 0FBh
.rodata:0000000000004FC9                 db    6
.rodata:0000000000004FCA                 db 0F7h
.rodata:0000000000004FCB                 db 0C3h
.rodata:0000000000004FCC                 db    0
.rodata:0000000000004FCD                 db    0
.rodata:0000000000004FCE                 db    0
.rodata:0000000000004FCF                 db    0
.rodata:0000000000004FD0                 db  22h ; "
.rodata:0000000000004FD1                 db  20h
.rodata:0000000000004FD2                 db 0B4h
.rodata:0000000000004FD3                 db 0CEh
.rodata:0000000000004FD4                 db    0
.rodata:0000000000004FD5                 db    0
.rodata:0000000000004FD6                 db    0
.rodata:0000000000004FD7                 db    0
.rodata:0000000000004FD8                 db  95h
.rodata:0000000000004FD9                 db  3Dh ; =
.rodata:0000000000004FDA                 db  75h ; u
.rodata:0000000000004FDB                 db 0CAh
.rodata:0000000000004FDC                 db    0
.rodata:0000000000004FDD                 db    0
.rodata:0000000000004FDE                 db    0
.rodata:0000000000004FDF                 db    0
.rodata:0000000000004FE0                 db  28h ; (
.rodata:0000000000004FE1                 db  80h
.rodata:0000000000004FE2                 db  3Ah ; :
.rodata:0000000000004FE3                 db 0F2h
.rodata:0000000000004FE4                 db    0
.rodata:0000000000004FE5                 db    0
.rodata:0000000000004FE6                 db    0
.rodata:0000000000004FE7                 db    0
.rodata:0000000000004FE8                 db  9Fh
.rodata:0000000000004FE9                 db  9Dh
.rodata:0000000000004FEA                 db 0FBh
.rodata:0000000000004FEB                 db 0F6h
.rodata:0000000000004FEC                 db    0
.rodata:0000000000004FED                 db    0
.rodata:0000000000004FEE                 db    0
.rodata:0000000000004FEF                 db    0
.rodata:0000000000004FF0                 db  46h ; F
.rodata:0000000000004FF1                 db 0BBh
.rodata:0000000000004FF2                 db 0B8h
.rodata:0000000000004FF3                 db 0FBh
.rodata:0000000000004FF4                 db    0
.rodata:0000000000004FF5                 db    0
.rodata:0000000000004FF6                 db    0
.rodata:0000000000004FF7                 db    0
.rodata:0000000000004FF8                 db 0F1h
.rodata:0000000000004FF9                 db 0A6h
.rodata:0000000000004FFA                 db  79h ; y
.rodata:0000000000004FFB                 db 0FFh
.rodata:0000000000004FFC                 db    0
.rodata:0000000000004FFD                 db    0
.rodata:0000000000004FFE                 db    0
.rodata:0000000000004FFF                 db    0
.rodata:0000000000005000                 db 0F4h
.rodata:0000000000005001                 db 0F6h
.rodata:0000000000005002                 db  3Eh ; >
.rodata:0000000000005003                 db 0E1h
.rodata:0000000000005004                 db    0
.rodata:0000000000005005                 db    0
.rodata:0000000000005006                 db    0
.rodata:0000000000005007                 db    0
.rodata:0000000000005008                 db  43h ; C
.rodata:0000000000005009                 db 0EBh
.rodata:000000000000500A                 db 0FFh
.rodata:000000000000500B                 db 0E5h
.rodata:000000000000500C                 db    0
.rodata:000000000000500D                 db    0
.rodata:000000000000500E                 db    0
.rodata:000000000000500F                 db    0
.rodata:0000000000005010                 db  9Ah
.rodata:0000000000005011                 db 0CDh
.rodata:0000000000005012                 db 0BCh
.rodata:0000000000005013                 db 0E8h
.rodata:0000000000005014                 db    0
.rodata:0000000000005015                 db    0
.rodata:0000000000005016                 db    0
.rodata:0000000000005017                 db    0
.rodata:0000000000005018                 db  2Dh ; -
.rodata:0000000000005019                 db 0D0h
.rodata:000000000000501A                 db  7Dh ; }
.rodata:000000000000501B                 db 0ECh
.rodata:000000000000501C                 db    0
.rodata:000000000000501D                 db    0
.rodata:000000000000501E                 db    0
.rodata:000000000000501F                 db    0
.rodata:0000000000005020                 db  77h ; w
.rodata:0000000000005021                 db  70h ; p
.rodata:0000000000005022                 db  86h
.rodata:0000000000005023                 db  34h ; 4
.rodata:0000000000005024                 db    0
.rodata:0000000000005025                 db    0
.rodata:0000000000005026                 db    0
.rodata:0000000000005027                 db    0
.rodata:0000000000005028                 db 0C0h
.rodata:0000000000005029                 db  6Dh ; m
.rodata:000000000000502A                 db  47h ; G
.rodata:000000000000502B                 db  30h ; 0
.rodata:000000000000502C                 db    0
.rodata:000000000000502D                 db    0
.rodata:000000000000502E                 db    0
.rodata:000000000000502F                 db    0
.rodata:0000000000005030                 db  19h
.rodata:0000000000005031                 db  4Bh ; K
.rodata:0000000000005032                 db    4
.rodata:0000000000005033                 db  3Dh ; =
.rodata:0000000000005034                 db    0
.rodata:0000000000005035                 db    0
.rodata:0000000000005036                 db    0
.rodata:0000000000005037                 db    0
.rodata:0000000000005038                 db 0AEh
.rodata:0000000000005039                 db  56h ; V
.rodata:000000000000503A                 db 0C5h
.rodata:000000000000503B                 db  39h ; 9
.rodata:000000000000503C                 db    0
.rodata:000000000000503D                 db    0
.rodata:000000000000503E                 db    0
.rodata:000000000000503F                 db    0
.rodata:0000000000005040                 db 0ABh
.rodata:0000000000005041                 db    6
.rodata:0000000000005042                 db  82h
.rodata:0000000000005043                 db  27h ; '
.rodata:0000000000005044                 db    0
.rodata:0000000000005045                 db    0
.rodata:0000000000005046                 db    0
.rodata:0000000000005047                 db    0
.rodata:0000000000005048                 db  1Ch
.rodata:0000000000005049                 db  1Bh
.rodata:000000000000504A                 db  43h ; C
.rodata:000000000000504B                 db  23h ; #
.rodata:000000000000504C                 db    0
.rodata:000000000000504D                 db    0
.rodata:000000000000504E                 db    0
.rodata:000000000000504F                 db    0
.rodata:0000000000005050                 db 0C5h
.rodata:0000000000005051                 db  3Dh ; =
.rodata:0000000000005052                 db    0
.rodata:0000000000005053                 db  2Eh ; .
.rodata:0000000000005054                 db    0
.rodata:0000000000005055                 db    0
.rodata:0000000000005056                 db    0
.rodata:0000000000005057                 db    0
.rodata:0000000000005058                 db  72h ; r
.rodata:0000000000005059                 db  20h
.rodata:000000000000505A                 db 0C1h
.rodata:000000000000505B                 db  2Ah ; *
.rodata:000000000000505C                 db    0
.rodata:000000000000505D                 db    0
.rodata:000000000000505E                 db    0
.rodata:000000000000505F                 db    0
.rodata:0000000000005060                 db 0CFh
.rodata:0000000000005061                 db  9Dh
.rodata:0000000000005062                 db  8Eh
.rodata:0000000000005063                 db  12h
.rodata:0000000000005064                 db    0
.rodata:0000000000005065                 db    0
.rodata:0000000000005066                 db    0
.rodata:0000000000005067                 db    0
.rodata:0000000000005068                 db  78h ; x
.rodata:0000000000005069                 db  80h
.rodata:000000000000506A                 db  4Fh ; O
.rodata:000000000000506B                 db  16h
.rodata:000000000000506C                 db    0
.rodata:000000000000506D                 db    0
.rodata:000000000000506E                 db    0
.rodata:000000000000506F                 db    0
.rodata:0000000000005070                 db 0A1h
.rodata:0000000000005071                 db 0A6h
.rodata:0000000000005072                 db  0Ch
.rodata:0000000000005073                 db  1Bh
.rodata:0000000000005074                 db    0
.rodata:0000000000005075                 db    0
.rodata:0000000000005076                 db    0
.rodata:0000000000005077                 db    0
.rodata:0000000000005078                 db  16h
.rodata:0000000000005079                 db 0BBh
.rodata:000000000000507A                 db 0CDh
.rodata:000000000000507B                 db  1Fh
.rodata:000000000000507C                 db    0
.rodata:000000000000507D                 db    0
.rodata:000000000000507E                 db    0
.rodata:000000000000507F                 db    0
.rodata:0000000000005080                 db  13h
.rodata:0000000000005081                 db 0EBh
.rodata:0000000000005082                 db  8Ah
.rodata:0000000000005083                 db    1
.rodata:0000000000005084                 db    0
.rodata:0000000000005085                 db    0
.rodata:0000000000005086                 db    0
.rodata:0000000000005087                 db    0
.rodata:0000000000005088                 db 0A4h
.rodata:0000000000005089                 db 0F6h
.rodata:000000000000508A                 db  4Bh ; K
.rodata:000000000000508B                 db    5
.rodata:000000000000508C                 db    0
.rodata:000000000000508D                 db    0
.rodata:000000000000508E                 db    0
.rodata:000000000000508F                 db    0
.rodata:0000000000005090                 db  7Dh ; }
.rodata:0000000000005091                 db 0D0h
.rodata:0000000000005092                 db    8
.rodata:0000000000005093                 db    8
.rodata:0000000000005094                 db    0
.rodata:0000000000005095                 db    0
.rodata:0000000000005096                 db    0
.rodata:0000000000005097                 db    0
.rodata:0000000000005098                 db 0CAh
.rodata:0000000000005099                 db 0CDh
.rodata:000000000000509A                 db 0C9h
.rodata:000000000000509B                 db  0Ch
.rodata:000000000000509C                 db    0
.rodata:000000000000509D                 db    0
.rodata:000000000000509E                 db    0
.rodata:000000000000509F                 db    0
.rodata:00000000000050A0                 db    7
.rodata:00000000000050A1                 db 0ABh
.rodata:00000000000050A2                 db  97h
.rodata:00000000000050A3                 db  78h ; x
.rodata:00000000000050A4                 db    0
.rodata:00000000000050A5                 db    0
.rodata:00000000000050A6                 db    0
.rodata:00000000000050A7                 db    0
.rodata:00000000000050A8                 db 0B0h
.rodata:00000000000050A9                 db 0B6h
.rodata:00000000000050AA                 db  56h ; V
.rodata:00000000000050AB                 db  7Ch ; |
.rodata:00000000000050AC                 db    0
.rodata:00000000000050AD                 db    0
.rodata:00000000000050AE                 db    0
.rodata:00000000000050AF                 db    0
.rodata:00000000000050B0                 db  69h ; i
.rodata:00000000000050B1                 db  90h
.rodata:00000000000050B2                 db  15h
.rodata:00000000000050B3                 db  71h ; q
.rodata:00000000000050B4                 db    0
.rodata:00000000000050B5                 db    0
.rodata:00000000000050B6                 db    0
.rodata:00000000000050B7                 db    0
.rodata:00000000000050B8                 db 0DEh
.rodata:00000000000050B9                 db  8Dh
.rodata:00000000000050BA                 db 0D4h
.rodata:00000000000050BB                 db  75h ; u
.rodata:00000000000050BC                 db    0
.rodata:00000000000050BD                 db    0
.rodata:00000000000050BE                 db    0
.rodata:00000000000050BF                 db    0
.rodata:00000000000050C0                 db 0DBh
.rodata:00000000000050C1                 db 0DDh
.rodata:00000000000050C2                 db  93h
.rodata:00000000000050C3                 db  6Bh ; k
.rodata:00000000000050C4                 db    0
.rodata:00000000000050C5                 db    0
.rodata:00000000000050C6                 db    0
.rodata:00000000000050C7                 db    0
.rodata:00000000000050C8                 db  6Ch ; l
.rodata:00000000000050C9                 db 0C0h
.rodata:00000000000050CA                 db  52h ; R
.rodata:00000000000050CB                 db  6Fh ; o
.rodata:00000000000050CC                 db    0
.rodata:00000000000050CD                 db    0
.rodata:00000000000050CE                 db    0
.rodata:00000000000050CF                 db    0
.rodata:00000000000050D0                 db 0B5h
.rodata:00000000000050D1                 db 0E6h
.rodata:00000000000050D2                 db  11h
.rodata:00000000000050D3                 db  62h ; b
.rodata:00000000000050D4                 db    0
.rodata:00000000000050D5                 db    0
.rodata:00000000000050D6                 db    0
.rodata:00000000000050D7                 db    0
.rodata:00000000000050D8                 db    2
.rodata:00000000000050D9                 db 0FBh
.rodata:00000000000050DA                 db 0D0h
.rodata:00000000000050DB                 db  66h ; f
.rodata:00000000000050DC                 db    0
.rodata:00000000000050DD                 db    0
.rodata:00000000000050DE                 db    0
.rodata:00000000000050DF                 db    0
.rodata:00000000000050E0                 db 0BFh
.rodata:00000000000050E1                 db  46h ; F
.rodata:00000000000050E2                 db  9Fh
.rodata:00000000000050E3                 db  5Eh ; ^
.rodata:00000000000050E4                 db    0
.rodata:00000000000050E5                 db    0
.rodata:00000000000050E6                 db    0
.rodata:00000000000050E7                 db    0
.rodata:00000000000050E8                 db    8
.rodata:00000000000050E9                 db  5Bh ; [
.rodata:00000000000050EA                 db  5Eh ; ^
.rodata:00000000000050EB                 db  5Ah ; Z
.rodata:00000000000050EC                 db    0
.rodata:00000000000050ED                 db    0
.rodata:00000000000050EE                 db    0
.rodata:00000000000050EF                 db    0
.rodata:00000000000050F0                 db 0D1h
.rodata:00000000000050F1                 db  7Dh ; }
.rodata:00000000000050F2                 db  1Dh
.rodata:00000000000050F3                 db  57h ; W
.rodata:00000000000050F4                 db    0
.rodata:00000000000050F5                 db    0
.rodata:00000000000050F6                 db    0
.rodata:00000000000050F7                 db    0
.rodata:00000000000050F8                 db  66h ; f
.rodata:00000000000050F9                 db  60h ; `
.rodata:00000000000050FA                 db 0DCh
.rodata:00000000000050FB                 db  53h ; S
.rodata:00000000000050FC                 db    0
.rodata:00000000000050FD                 db    0
.rodata:00000000000050FE                 db    0
.rodata:00000000000050FF                 db    0
.rodata:0000000000005100                 db  63h ; c
.rodata:0000000000005101                 db  30h ; 0
.rodata:0000000000005102                 db  9Bh
.rodata:0000000000005103                 db  4Dh ; M
.rodata:0000000000005104                 db    0
.rodata:0000000000005105                 db    0
.rodata:0000000000005106                 db    0
.rodata:0000000000005107                 db    0
.rodata:0000000000005108                 db 0D4h
.rodata:0000000000005109                 db  2Dh ; -
.rodata:000000000000510A                 db  5Ah ; Z
.rodata:000000000000510B                 db  49h ; I
.rodata:000000000000510C                 db    0
.rodata:000000000000510D                 db    0
.rodata:000000000000510E                 db    0
.rodata:000000000000510F                 db    0
.rodata:0000000000005110                 db  0Dh
.rodata:0000000000005111                 db  0Bh
.rodata:0000000000005112                 db  19h
.rodata:0000000000005113                 db  44h ; D
.rodata:0000000000005114                 db    0
.rodata:0000000000005115                 db    0
.rodata:0000000000005116                 db    0
.rodata:0000000000005117                 db    0
.rodata:0000000000005118                 db 0BAh
.rodata:0000000000005119                 db  16h
.rodata:000000000000511A                 db 0D8h
.rodata:000000000000511B                 db  40h ; @
.rodata:000000000000511C                 db    0
.rodata:000000000000511D                 db    0
.rodata:000000000000511E                 db    0
.rodata:000000000000511F                 db    0
.rodata:0000000000005120                 db  97h
.rodata:0000000000005121                 db 0C6h
.rodata:0000000000005122                 db 0A5h
.rodata:0000000000005123                 db 0ACh
.rodata:0000000000005124                 db    0
.rodata:0000000000005125                 db    0
.rodata:0000000000005126                 db    0
.rodata:0000000000005127                 db    0
.rodata:0000000000005128                 db  20h
.rodata:0000000000005129                 db 0DBh
.rodata:000000000000512A                 db  64h ; d
.rodata:000000000000512B                 db 0A8h
.rodata:000000000000512C                 db    0
.rodata:000000000000512D                 db    0
.rodata:000000000000512E                 db    0
.rodata:000000000000512F                 db    0
.rodata:0000000000005130                 db 0F9h
.rodata:0000000000005131                 db 0FDh
.rodata:0000000000005132                 db  27h ; '
.rodata:0000000000005133                 db 0A5h
.rodata:0000000000005134                 db    0
.rodata:0000000000005135                 db    0
.rodata:0000000000005136                 db    0
.rodata:0000000000005137                 db    0
.rodata:0000000000005138                 db  4Eh ; N
.rodata:0000000000005139                 db 0E0h
.rodata:000000000000513A                 db 0E6h
.rodata:000000000000513B                 db 0A1h
.rodata:000000000000513C                 db    0
.rodata:000000000000513D                 db    0
.rodata:000000000000513E                 db    0
.rodata:000000000000513F                 db    0
.rodata:0000000000005140                 db  4Bh ; K
.rodata:0000000000005141                 db 0B0h
.rodata:0000000000005142                 db 0A1h
.rodata:0000000000005143                 db 0BFh
.rodata:0000000000005144                 db    0
.rodata:0000000000005145                 db    0
.rodata:0000000000005146                 db    0
.rodata:0000000000005147                 db    0
.rodata:0000000000005148                 db 0FCh
.rodata:0000000000005149                 db 0ADh
.rodata:000000000000514A                 db  60h ; `
.rodata:000000000000514B                 db 0BBh
.rodata:000000000000514C                 db    0
.rodata:000000000000514D                 db    0
.rodata:000000000000514E                 db    0
.rodata:000000000000514F                 db    0
.rodata:0000000000005150                 db  25h ; %
.rodata:0000000000005151                 db  8Bh
.rodata:0000000000005152                 db  23h ; #
.rodata:0000000000005153                 db 0B6h
.rodata:0000000000005154                 db    0
.rodata:0000000000005155                 db    0
.rodata:0000000000005156                 db    0
.rodata:0000000000005157                 db    0
.rodata:0000000000005158                 db  92h
.rodata:0000000000005159                 db  96h
.rodata:000000000000515A                 db 0E2h
.rodata:000000000000515B                 db 0B2h
.rodata:000000000000515C                 db    0
.rodata:000000000000515D                 db    0
.rodata:000000000000515E                 db    0
.rodata:000000000000515F                 db    0
.rodata:0000000000005160                 db  2Fh ; /
.rodata:0000000000005161                 db  2Bh ; +
.rodata:0000000000005162                 db 0ADh
.rodata:0000000000005163                 db  8Ah
.rodata:0000000000005164                 db    0
.rodata:0000000000005165                 db    0
.rodata:0000000000005166                 db    0
.rodata:0000000000005167                 db    0
.rodata:0000000000005168                 db  98h
.rodata:0000000000005169                 db  36h ; 6
.rodata:000000000000516A                 db  6Ch ; l
.rodata:000000000000516B                 db  8Eh
.rodata:000000000000516C                 db    0
.rodata:000000000000516D                 db    0
.rodata:000000000000516E                 db    0
.rodata:000000000000516F                 db    0
.rodata:0000000000005170                 db  41h ; A
.rodata:0000000000005171                 db  10h
.rodata:0000000000005172                 db  2Fh ; /
.rodata:0000000000005173                 db  83h
.rodata:0000000000005174                 db    0
.rodata:0000000000005175                 db    0
.rodata:0000000000005176                 db    0
.rodata:0000000000005177                 db    0
.rodata:0000000000005178                 db 0F6h
.rodata:0000000000005179                 db  0Dh
.rodata:000000000000517A                 db 0EEh
.rodata:000000000000517B                 db  87h
.rodata:000000000000517C                 db    0
.rodata:000000000000517D                 db    0
.rodata:000000000000517E                 db    0
.rodata:000000000000517F                 db    0
.rodata:0000000000005180                 db 0F3h
.rodata:0000000000005181                 db  5Dh ; ]
.rodata:0000000000005182                 db 0A9h
.rodata:0000000000005183                 db  99h
.rodata:0000000000005184                 db    0
.rodata:0000000000005185                 db    0
.rodata:0000000000005186                 db    0
.rodata:0000000000005187                 db    0
.rodata:0000000000005188                 db  44h ; D
.rodata:0000000000005189                 db  40h ; @
.rodata:000000000000518A                 db  68h ; h
.rodata:000000000000518B                 db  9Dh
.rodata:000000000000518C                 db    0
.rodata:000000000000518D                 db    0
.rodata:000000000000518E                 db    0
.rodata:000000000000518F                 db    0
.rodata:0000000000005190                 db  9Dh
.rodata:0000000000005191                 db  66h ; f
.rodata:0000000000005192                 db  2Bh ; +
.rodata:0000000000005193                 db  90h
.rodata:0000000000005194                 db    0
.rodata:0000000000005195                 db    0
.rodata:0000000000005196                 db    0
.rodata:0000000000005197                 db    0
.rodata:0000000000005198                 db  2Ah ; *
.rodata:0000000000005199                 db  7Bh ; {
.rodata:000000000000519A                 db 0EAh
.rodata:000000000000519B                 db  94h
.rodata:000000000000519C                 db    0
.rodata:000000000000519D                 db    0
.rodata:000000000000519E                 db    0
.rodata:000000000000519F                 db    0
.rodata:00000000000051A0                 db 0E7h
.rodata:00000000000051A1                 db  1Dh
.rodata:00000000000051A2                 db 0B4h
.rodata:00000000000051A3                 db 0E0h
.rodata:00000000000051A4                 db    0
.rodata:00000000000051A5                 db    0
.rodata:00000000000051A6                 db    0
.rodata:00000000000051A7                 db    0
.rodata:00000000000051A8                 db  50h ; P
.rodata:00000000000051A9                 db    0
.rodata:00000000000051AA                 db  75h ; u
.rodata:00000000000051AB                 db 0E4h
.rodata:00000000000051AC                 db    0
.rodata:00000000000051AD                 db    0
.rodata:00000000000051AE                 db    0
.rodata:00000000000051AF                 db    0
.rodata:00000000000051B0                 db  89h
.rodata:00000000000051B1                 db  26h ; &
.rodata:00000000000051B2                 db  36h ; 6
.rodata:00000000000051B3                 db 0E9h
.rodata:00000000000051B4                 db    0
.rodata:00000000000051B5                 db    0
.rodata:00000000000051B6                 db    0
.rodata:00000000000051B7                 db    0
.rodata:00000000000051B8                 db  3Eh ; >
.rodata:00000000000051B9                 db  3Bh ; ;
.rodata:00000000000051BA                 db 0F7h
.rodata:00000000000051BB                 db 0EDh
.rodata:00000000000051BC                 db    0
.rodata:00000000000051BD                 db    0
.rodata:00000000000051BE                 db    0
.rodata:00000000000051BF                 db    0
.rodata:00000000000051C0                 db  3Bh ; ;
.rodata:00000000000051C1                 db  6Bh ; k
.rodata:00000000000051C2                 db 0B0h
.rodata:00000000000051C3                 db 0F3h
.rodata:00000000000051C4                 db    0
.rodata:00000000000051C5                 db    0
.rodata:00000000000051C6                 db    0
.rodata:00000000000051C7                 db    0
.rodata:00000000000051C8                 db  8Ch
.rodata:00000000000051C9                 db  76h ; v
.rodata:00000000000051CA                 db  71h ; q
.rodata:00000000000051CB                 db 0F7h
.rodata:00000000000051CC                 db    0
.rodata:00000000000051CD                 db    0
.rodata:00000000000051CE                 db    0
.rodata:00000000000051CF                 db    0
.rodata:00000000000051D0                 db  55h ; U
.rodata:00000000000051D1                 db  50h ; P
.rodata:00000000000051D2                 db  32h ; 2
.rodata:00000000000051D3                 db 0FAh
.rodata:00000000000051D4                 db    0
.rodata:00000000000051D5                 db    0
.rodata:00000000000051D6                 db    0
.rodata:00000000000051D7                 db    0
.rodata:00000000000051D8                 db 0E2h
.rodata:00000000000051D9                 db  4Dh ; M
.rodata:00000000000051DA                 db 0F3h
.rodata:00000000000051DB                 db 0FEh
.rodata:00000000000051DC                 db    0
.rodata:00000000000051DD                 db    0
.rodata:00000000000051DE                 db    0
.rodata:00000000000051DF                 db    0
.rodata:00000000000051E0                 db  5Fh ; _
.rodata:00000000000051E1                 db 0F0h
.rodata:00000000000051E2                 db 0BCh
.rodata:00000000000051E3                 db 0C6h
.rodata:00000000000051E4                 db    0
.rodata:00000000000051E5                 db    0
.rodata:00000000000051E6                 db    0
.rodata:00000000000051E7                 db    0
.rodata:00000000000051E8                 db 0E8h
.rodata:00000000000051E9                 db 0EDh
.rodata:00000000000051EA                 db  7Dh ; }
.rodata:00000000000051EB                 db 0C2h
.rodata:00000000000051EC                 db    0
.rodata:00000000000051ED                 db    0
.rodata:00000000000051EE                 db    0
.rodata:00000000000051EF                 db    0
.rodata:00000000000051F0                 db  31h ; 1
.rodata:00000000000051F1                 db 0CBh
.rodata:00000000000051F2                 db  3Eh ; >
.rodata:00000000000051F3                 db 0CFh
.rodata:00000000000051F4                 db    0
.rodata:00000000000051F5                 db    0
.rodata:00000000000051F6                 db    0
.rodata:00000000000051F7                 db    0
.rodata:00000000000051F8                 db  86h
.rodata:00000000000051F9                 db 0D6h
.rodata:00000000000051FA                 db 0FFh
.rodata:00000000000051FB                 db 0CBh
.rodata:00000000000051FC                 db    0
.rodata:00000000000051FD                 db    0
.rodata:00000000000051FE                 db    0
.rodata:00000000000051FF                 db    0
.rodata:0000000000005200                 db  83h
.rodata:0000000000005201                 db  86h
.rodata:0000000000005202                 db 0B8h
.rodata:0000000000005203                 db 0D5h
.rodata:0000000000005204                 db    0
.rodata:0000000000005205                 db    0
.rodata:0000000000005206                 db    0
.rodata:0000000000005207                 db    0
.rodata:0000000000005208                 db  34h ; 4
.rodata:0000000000005209                 db  9Bh
.rodata:000000000000520A                 db  79h ; y
.rodata:000000000000520B                 db 0D1h
.rodata:000000000000520C                 db    0
.rodata:000000000000520D                 db    0
.rodata:000000000000520E                 db    0
.rodata:000000000000520F                 db    0
.rodata:0000000000005210                 db 0EDh
.rodata:0000000000005211                 db 0BDh
.rodata:0000000000005212                 db  3Ah ; :
.rodata:0000000000005213                 db 0DCh
.rodata:0000000000005214                 db    0
.rodata:0000000000005215                 db    0
.rodata:0000000000005216                 db    0
.rodata:0000000000005217                 db    0
.rodata:0000000000005218                 db  5Ah ; Z
.rodata:0000000000005219                 db 0A0h
.rodata:000000000000521A                 db 0FBh
.rodata:000000000000521B                 db 0D8h
.rodata:000000000000521C                 db    0
.rodata:000000000000521D                 db    0
.rodata:000000000000521E                 db    0
.rodata:000000000000521F                 db    0
.rodata:0000000000005220                 db 0EEh
.rodata:0000000000005221                 db 0E0h
.rodata:0000000000005222                 db  0Ch
.rodata:0000000000005223                 db  69h ; i
.rodata:0000000000005224                 db    0
.rodata:0000000000005225                 db    0
.rodata:0000000000005226                 db    0
.rodata:0000000000005227                 db    0
.rodata:0000000000005228                 db  59h ; Y
.rodata:0000000000005229                 db 0FDh
.rodata:000000000000522A                 db 0CDh
.rodata:000000000000522B                 db  6Dh ; m
.rodata:000000000000522C                 db    0
.rodata:000000000000522D                 db    0
.rodata:000000000000522E                 db    0
.rodata:000000000000522F                 db    0
.rodata:0000000000005230                 db  80h
.rodata:0000000000005231                 db 0DBh
.rodata:0000000000005232                 db  8Eh
.rodata:0000000000005233                 db  60h ; `
.rodata:0000000000005234                 db    0
.rodata:0000000000005235                 db    0
.rodata:0000000000005236                 db    0
.rodata:0000000000005237                 db    0
.rodata:0000000000005238                 db  37h ; 7
.rodata:0000000000005239                 db 0C6h
.rodata:000000000000523A                 db  4Fh ; O
.rodata:000000000000523B                 db  64h ; d
.rodata:000000000000523C                 db    0
.rodata:000000000000523D                 db    0
.rodata:000000000000523E                 db    0
.rodata:000000000000523F                 db    0
.rodata:0000000000005240                 db  32h ; 2
.rodata:0000000000005241                 db  96h
.rodata:0000000000005242                 db    8
.rodata:0000000000005243                 db  7Ah ; z
.rodata:0000000000005244                 db    0
.rodata:0000000000005245                 db    0
.rodata:0000000000005246                 db    0
.rodata:0000000000005247                 db    0
.rodata:0000000000005248                 db  85h
.rodata:0000000000005249                 db  8Bh
.rodata:000000000000524A                 db 0C9h
.rodata:000000000000524B                 db  7Eh ; ~
.rodata:000000000000524C                 db    0
.rodata:000000000000524D                 db    0
.rodata:000000000000524E                 db    0
.rodata:000000000000524F                 db    0
.rodata:0000000000005250                 db  5Ch ; \
.rodata:0000000000005251                 db 0ADh
.rodata:0000000000005252                 db  8Ah
.rodata:0000000000005253                 db  73h ; s
.rodata:0000000000005254                 db    0
.rodata:0000000000005255                 db    0
.rodata:0000000000005256                 db    0
.rodata:0000000000005257                 db    0
.rodata:0000000000005258                 db 0EBh
.rodata:0000000000005259                 db 0B0h
.rodata:000000000000525A                 db  4Bh ; K
.rodata:000000000000525B                 db  77h ; w
.rodata:000000000000525C                 db    0
.rodata:000000000000525D                 db    0
.rodata:000000000000525E                 db    0
.rodata:000000000000525F                 db    0
.rodata:0000000000005260                 db  56h ; V
.rodata:0000000000005261                 db  0Dh
.rodata:0000000000005262                 db    4
.rodata:0000000000005263                 db  4Fh ; O
.rodata:0000000000005264                 db    0
.rodata:0000000000005265                 db    0
.rodata:0000000000005266                 db    0
.rodata:0000000000005267                 db    0
.rodata:0000000000005268                 db 0E1h
.rodata:0000000000005269                 db  10h
.rodata:000000000000526A                 db 0C5h
.rodata:000000000000526B                 db  4Bh ; K
.rodata:000000000000526C                 db    0
.rodata:000000000000526D                 db    0
.rodata:000000000000526E                 db    0
.rodata:000000000000526F                 db    0
.rodata:0000000000005270                 db  38h ; 8
.rodata:0000000000005271                 db  36h ; 6
.rodata:0000000000005272                 db  86h
.rodata:0000000000005273                 db  46h ; F
.rodata:0000000000005274                 db    0
.rodata:0000000000005275                 db    0
.rodata:0000000000005276                 db    0
.rodata:0000000000005277                 db    0
.rodata:0000000000005278                 db  8Fh
.rodata:0000000000005279                 db  2Bh ; +
.rodata:000000000000527A                 db  47h ; G
.rodata:000000000000527B                 db  42h ; B
.rodata:000000000000527C                 db    0
.rodata:000000000000527D                 db    0
.rodata:000000000000527E                 db    0
.rodata:000000000000527F                 db    0
.rodata:0000000000005280                 db  8Ah
.rodata:0000000000005281                 db  7Bh ; {
.rodata:0000000000005282                 db    0
.rodata:0000000000005283                 db  5Ch ; \
.rodata:0000000000005284                 db    0
.rodata:0000000000005285                 db    0
.rodata:0000000000005286                 db    0
.rodata:0000000000005287                 db    0
.rodata:0000000000005288                 db  3Dh ; =
.rodata:0000000000005289                 db  66h ; f
.rodata:000000000000528A                 db 0C1h
.rodata:000000000000528B                 db  58h ; X
.rodata:000000000000528C                 db    0
.rodata:000000000000528D                 db    0
.rodata:000000000000528E                 db    0
.rodata:000000000000528F                 db    0
.rodata:0000000000005290                 db 0E4h
.rodata:0000000000005291                 db  40h ; @
.rodata:0000000000005292                 db  82h
.rodata:0000000000005293                 db  55h ; U
.rodata:0000000000005294                 db    0
.rodata:0000000000005295                 db    0
.rodata:0000000000005296                 db    0
.rodata:0000000000005297                 db    0
.rodata:0000000000005298                 db  53h ; S
.rodata:0000000000005299                 db  5Dh ; ]
.rodata:000000000000529A                 db  43h ; C
.rodata:000000000000529B                 db  51h ; Q
.rodata:000000000000529C                 db    0
.rodata:000000000000529D                 db    0
.rodata:000000000000529E                 db    0
.rodata:000000000000529F                 db    0
.rodata:00000000000052A0                 db  9Eh
.rodata:00000000000052A1                 db  3Bh ; ;
.rodata:00000000000052A2                 db  1Dh
.rodata:00000000000052A3                 db  25h ; %
.rodata:00000000000052A4                 db    0
.rodata:00000000000052A5                 db    0
.rodata:00000000000052A6                 db    0
.rodata:00000000000052A7                 db    0
.rodata:00000000000052A8                 db  29h ; )
.rodata:00000000000052A9                 db  26h ; &
.rodata:00000000000052AA                 db 0DCh
.rodata:00000000000052AB                 db  21h ; !
.rodata:00000000000052AC                 db    0
.rodata:00000000000052AD                 db    0
.rodata:00000000000052AE                 db    0
.rodata:00000000000052AF                 db    0
.rodata:00000000000052B0                 db 0F0h
.rodata:00000000000052B1                 db    0
.rodata:00000000000052B2                 db  9Fh
.rodata:00000000000052B3                 db  2Ch ; ,
.rodata:00000000000052B4                 db    0
.rodata:00000000000052B5                 db    0
.rodata:00000000000052B6                 db    0
.rodata:00000000000052B7                 db    0
.rodata:00000000000052B8                 db  47h ; G
.rodata:00000000000052B9                 db  1Dh
.rodata:00000000000052BA                 db  5Eh ; ^
.rodata:00000000000052BB                 db  28h ; (
.rodata:00000000000052BC                 db    0
.rodata:00000000000052BD                 db    0
.rodata:00000000000052BE                 db    0
.rodata:00000000000052BF                 db    0
.rodata:00000000000052C0                 db  42h ; B
.rodata:00000000000052C1                 db  4Dh ; M
.rodata:00000000000052C2                 db  19h
.rodata:00000000000052C3                 db  36h ; 6
.rodata:00000000000052C4                 db    0
.rodata:00000000000052C5                 db    0
.rodata:00000000000052C6                 db    0
.rodata:00000000000052C7                 db    0
.rodata:00000000000052C8                 db 0F5h
.rodata:00000000000052C9                 db  50h ; P
.rodata:00000000000052CA                 db 0D8h
.rodata:00000000000052CB                 db  32h ; 2
.rodata:00000000000052CC                 db    0
.rodata:00000000000052CD                 db    0
.rodata:00000000000052CE                 db    0
.rodata:00000000000052CF                 db    0
.rodata:00000000000052D0                 db  2Ch ; ,
.rodata:00000000000052D1                 db  76h ; v
.rodata:00000000000052D2                 db  9Bh
.rodata:00000000000052D3                 db  3Fh ; ?
.rodata:00000000000052D4                 db    0
.rodata:00000000000052D5                 db    0
.rodata:00000000000052D6                 db    0
.rodata:00000000000052D7                 db    0
.rodata:00000000000052D8                 db  9Bh
.rodata:00000000000052D9                 db  6Bh ; k
.rodata:00000000000052DA                 db  5Ah ; Z
.rodata:00000000000052DB                 db  3Bh ; ;
.rodata:00000000000052DC                 db    0
.rodata:00000000000052DD                 db    0
.rodata:00000000000052DE                 db    0
.rodata:00000000000052DF                 db    0
.rodata:00000000000052E0                 db  26h ; &
.rodata:00000000000052E1                 db 0D6h
.rodata:00000000000052E2                 db  15h
.rodata:00000000000052E3                 db    3
.rodata:00000000000052E4                 db    0
.rodata:00000000000052E5                 db    0
.rodata:00000000000052E6                 db    0
.rodata:00000000000052E7                 db    0
.rodata:00000000000052E8                 db  91h
.rodata:00000000000052E9                 db 0CBh
.rodata:00000000000052EA                 db 0D4h
.rodata:00000000000052EB                 db    7
.rodata:00000000000052EC                 db    0
.rodata:00000000000052ED                 db    0
.rodata:00000000000052EE                 db    0
.rodata:00000000000052EF                 db    0
.rodata:00000000000052F0                 db  48h ; H
.rodata:00000000000052F1                 db 0EDh
.rodata:00000000000052F2                 db  97h
.rodata:00000000000052F3                 db  0Ah
.rodata:00000000000052F4                 db    0
.rodata:00000000000052F5                 db    0
.rodata:00000000000052F6                 db    0
.rodata:00000000000052F7                 db    0
.rodata:00000000000052F8                 db 0FFh
.rodata:00000000000052F9                 db 0F0h
.rodata:00000000000052FA                 db  56h ; V
.rodata:00000000000052FB                 db  0Eh
.rodata:00000000000052FC                 db    0
.rodata:00000000000052FD                 db    0
.rodata:00000000000052FE                 db    0
.rodata:00000000000052FF                 db    0
.rodata:0000000000005300                 db 0FAh
.rodata:0000000000005301                 db 0A0h
.rodata:0000000000005302                 db  11h
.rodata:0000000000005303                 db  10h
.rodata:0000000000005304                 db    0
.rodata:0000000000005305                 db    0
.rodata:0000000000005306                 db    0
.rodata:0000000000005307                 db    0
.rodata:0000000000005308                 db  4Dh ; M
.rodata:0000000000005309                 db 0BDh
.rodata:000000000000530A                 db 0D0h
.rodata:000000000000530B                 db  14h
.rodata:000000000000530C                 db    0
.rodata:000000000000530D                 db    0
.rodata:000000000000530E                 db    0
.rodata:000000000000530F                 db    0
.rodata:0000000000005310                 db  94h
.rodata:0000000000005311                 db  9Bh
.rodata:0000000000005312                 db  93h
.rodata:0000000000005313                 db  19h
.rodata:0000000000005314                 db    0
.rodata:0000000000005315                 db    0
.rodata:0000000000005316                 db    0
.rodata:0000000000005317                 db    0
.rodata:0000000000005318                 db  23h ; #
.rodata:0000000000005319                 db  86h
.rodata:000000000000531A                 db  52h ; R
.rodata:000000000000531B                 db  1Dh
.rodata:000000000000531C                 db    0
.rodata:000000000000531D                 db    0
.rodata:000000000000531E                 db    0
.rodata:000000000000531F                 db    0
.rodata:0000000000005320                 db  0Eh
.rodata:0000000000005321                 db  56h ; V
.rodata:0000000000005322                 db  2Fh ; /
.rodata:0000000000005323                 db 0F1h
.rodata:0000000000005324                 db    0
.rodata:0000000000005325                 db    0
.rodata:0000000000005326                 db    0
.rodata:0000000000005327                 db    0
.rodata:0000000000005328                 db 0B9h
.rodata:0000000000005329                 db  4Bh ; K
.rodata:000000000000532A                 db 0EEh
.rodata:000000000000532B                 db 0F5h
.rodata:000000000000532C                 db    0
.rodata:000000000000532D                 db    0
.rodata:000000000000532E                 db    0
.rodata:000000000000532F                 db    0
.rodata:0000000000005330                 db  60h ; `
.rodata:0000000000005331                 db  6Dh ; m
.rodata:0000000000005332                 db 0ADh
.rodata:0000000000005333                 db 0F8h
.rodata:0000000000005334                 db    0
.rodata:0000000000005335                 db    0
.rodata:0000000000005336                 db    0
.rodata:0000000000005337                 db    0
.rodata:0000000000005338                 db 0D7h
.rodata:0000000000005339                 db  70h ; p
.rodata:000000000000533A                 db  6Ch ; l
.rodata:000000000000533B                 db 0FCh
.rodata:000000000000533C                 db    0
.rodata:000000000000533D                 db    0
.rodata:000000000000533E                 db    0
.rodata:000000000000533F                 db    0
.rodata:0000000000005340                 db 0D2h
.rodata:0000000000005341                 db  20h
.rodata:0000000000005342                 db  2Bh ; +
.rodata:0000000000005343                 db 0E2h
.rodata:0000000000005344                 db    0
.rodata:0000000000005345                 db    0
.rodata:0000000000005346                 db    0
.rodata:0000000000005347                 db    0
.rodata:0000000000005348                 db  65h ; e
.rodata:0000000000005349                 db  3Dh ; =
.rodata:000000000000534A                 db 0EAh
.rodata:000000000000534B                 db 0E6h
.rodata:000000000000534C                 db    0
.rodata:000000000000534D                 db    0
.rodata:000000000000534E                 db    0
.rodata:000000000000534F                 db    0
.rodata:0000000000005350                 db 0BCh
.rodata:0000000000005351                 db  1Bh
.rodata:0000000000005352                 db 0A9h
.rodata:0000000000005353                 db 0EBh
.rodata:0000000000005354                 db    0
.rodata:0000000000005355                 db    0
.rodata:0000000000005356                 db    0
.rodata:0000000000005357                 db    0
.rodata:0000000000005358                 db  0Bh
.rodata:0000000000005359                 db    6
.rodata:000000000000535A                 db  68h ; h
.rodata:000000000000535B                 db 0EFh
.rodata:000000000000535C                 db    0
.rodata:000000000000535D                 db    0
.rodata:000000000000535E                 db    0
.rodata:000000000000535F                 db    0
.rodata:0000000000005360                 db 0B6h
.rodata:0000000000005361                 db 0BBh
.rodata:0000000000005362                 db  27h ; '
.rodata:0000000000005363                 db 0D7h
.rodata:0000000000005364                 db    0
.rodata:0000000000005365                 db    0
.rodata:0000000000005366                 db    0
.rodata:0000000000005367                 db    0
.rodata:0000000000005368                 db    1
.rodata:0000000000005369                 db 0A6h
.rodata:000000000000536A                 db 0E6h
.rodata:000000000000536B                 db 0D3h
.rodata:000000000000536C                 db    0
.rodata:000000000000536D                 db    0
.rodata:000000000000536E                 db    0
.rodata:000000000000536F                 db    0
.rodata:0000000000005370                 db 0D8h
.rodata:0000000000005371                 db  80h
.rodata:0000000000005372                 db 0A5h
.rodata:0000000000005373                 db 0DEh
.rodata:0000000000005374                 db    0
.rodata:0000000000005375                 db    0
.rodata:0000000000005376                 db    0
.rodata:0000000000005377                 db    0
.rodata:0000000000005378                 db  6Fh ; o
.rodata:0000000000005379                 db  9Dh
.rodata:000000000000537A                 db  64h ; d
.rodata:000000000000537B                 db 0DAh
.rodata:000000000000537C                 db    0
.rodata:000000000000537D                 db    0
.rodata:000000000000537E                 db    0
.rodata:000000000000537F                 db    0
.rodata:0000000000005380                 db  6Ah ; j
.rodata:0000000000005381                 db 0CDh
.rodata:0000000000005382                 db  23h ; #
.rodata:0000000000005383                 db 0C4h
.rodata:0000000000005384                 db    0
.rodata:0000000000005385                 db    0
.rodata:0000000000005386                 db    0
.rodata:0000000000005387                 db    0
.rodata:0000000000005388                 db 0DDh
.rodata:0000000000005389                 db 0D0h
.rodata:000000000000538A                 db 0E2h
.rodata:000000000000538B                 db 0C0h
.rodata:000000000000538C                 db    0
.rodata:000000000000538D                 db    0
.rodata:000000000000538E                 db    0
.rodata:000000000000538F                 db    0
.rodata:0000000000005390                 db    4
.rodata:0000000000005391                 db 0F6h
.rodata:0000000000005392                 db 0A1h
.rodata:0000000000005393                 db 0CDh
.rodata:0000000000005394                 db    0
.rodata:0000000000005395                 db    0
.rodata:0000000000005396                 db    0
.rodata:0000000000005397                 db    0
.rodata:0000000000005398                 db 0B3h
.rodata:0000000000005399                 db 0EBh
.rodata:000000000000539A                 db  60h ; `
.rodata:000000000000539B                 db 0C9h
.rodata:000000000000539C                 db    0
.rodata:000000000000539D                 db    0
.rodata:000000000000539E                 db    0
.rodata:000000000000539F                 db    0
.rodata:00000000000053A0                 db  7Eh ; ~
.rodata:00000000000053A1                 db  8Dh
.rodata:00000000000053A2                 db  3Eh ; >
.rodata:00000000000053A3                 db 0BDh
.rodata:00000000000053A4                 db    0
.rodata:00000000000053A5                 db    0
.rodata:00000000000053A6                 db    0
.rodata:00000000000053A7                 db    0
.rodata:00000000000053A8                 db 0C9h
.rodata:00000000000053A9                 db  90h
.rodata:00000000000053AA                 db 0FFh
.rodata:00000000000053AB                 db 0B9h
.rodata:00000000000053AC                 db    0
.rodata:00000000000053AD                 db    0
.rodata:00000000000053AE                 db    0
.rodata:00000000000053AF                 db    0
.rodata:00000000000053B0                 db  10h
.rodata:00000000000053B1                 db 0B6h
.rodata:00000000000053B2                 db 0BCh
.rodata:00000000000053B3                 db 0B4h
.rodata:00000000000053B4                 db    0
.rodata:00000000000053B5                 db    0
.rodata:00000000000053B6                 db    0
.rodata:00000000000053B7                 db    0
.rodata:00000000000053B8                 db 0A7h
.rodata:00000000000053B9                 db 0ABh
.rodata:00000000000053BA                 db  7Dh ; }
.rodata:00000000000053BB                 db 0B0h
.rodata:00000000000053BC                 db    0
.rodata:00000000000053BD                 db    0
.rodata:00000000000053BE                 db    0
.rodata:00000000000053BF                 db    0
.rodata:00000000000053C0                 db 0A2h
.rodata:00000000000053C1                 db 0FBh
.rodata:00000000000053C2                 db  3Ah ; :
.rodata:00000000000053C3                 db 0AEh
.rodata:00000000000053C4                 db    0
.rodata:00000000000053C5                 db    0
.rodata:00000000000053C6                 db    0
.rodata:00000000000053C7                 db    0
.rodata:00000000000053C8                 db  15h
.rodata:00000000000053C9                 db 0E6h
.rodata:00000000000053CA                 db 0FBh
.rodata:00000000000053CB                 db 0AAh
.rodata:00000000000053CC                 db    0
.rodata:00000000000053CD                 db    0
.rodata:00000000000053CE                 db    0
.rodata:00000000000053CF                 db    0
.rodata:00000000000053D0                 db 0CCh
.rodata:00000000000053D1                 db 0C0h
.rodata:00000000000053D2                 db 0B8h
.rodata:00000000000053D3                 db 0A7h
.rodata:00000000000053D4                 db    0
.rodata:00000000000053D5                 db    0
.rodata:00000000000053D6                 db    0
.rodata:00000000000053D7                 db    0
.rodata:00000000000053D8                 db  7Bh ; {
.rodata:00000000000053D9                 db 0DDh
.rodata:00000000000053DA                 db  79h ; y
.rodata:00000000000053DB                 db 0A3h
.rodata:00000000000053DC                 db    0
.rodata:00000000000053DD                 db    0
.rodata:00000000000053DE                 db    0
.rodata:00000000000053DF                 db    0
.rodata:00000000000053E0                 db 0C6h
.rodata:00000000000053E1                 db  60h ; `
.rodata:00000000000053E2                 db  36h ; 6
.rodata:00000000000053E3                 db  9Bh
.rodata:00000000000053E4                 db    0
.rodata:00000000000053E5                 db    0
.rodata:00000000000053E6                 db    0
.rodata:00000000000053E7                 db    0
.rodata:00000000000053E8                 db  71h ; q
.rodata:00000000000053E9                 db  7Dh ; }
.rodata:00000000000053EA                 db 0F7h
.rodata:00000000000053EB                 db  9Fh
.rodata:00000000000053EC                 db    0
.rodata:00000000000053ED                 db    0
.rodata:00000000000053EE                 db    0
.rodata:00000000000053EF                 db    0
.rodata:00000000000053F0                 db 0A8h
.rodata:00000000000053F1                 db  5Bh ; [
.rodata:00000000000053F2                 db 0B4h
.rodata:00000000000053F3                 db  92h
.rodata:00000000000053F4                 db    0
.rodata:00000000000053F5                 db    0
.rodata:00000000000053F6                 db    0
.rodata:00000000000053F7                 db    0
.rodata:00000000000053F8                 db  1Fh
.rodata:00000000000053F9                 db  46h ; F
.rodata:00000000000053FA                 db  75h ; u
.rodata:00000000000053FB                 db  96h
.rodata:00000000000053FC                 db    0
.rodata:00000000000053FD                 db    0
.rodata:00000000000053FE                 db    0
.rodata:00000000000053FF                 db    0
.rodata:0000000000005400                 db  1Ah
.rodata:0000000000005401                 db  16h
.rodata:0000000000005402                 db  32h ; 2
.rodata:0000000000005403                 db  88h
.rodata:0000000000005404                 db    0
.rodata:0000000000005405                 db    0
.rodata:0000000000005406                 db    0
.rodata:0000000000005407                 db    0
.rodata:0000000000005408                 db 0ADh
.rodata:0000000000005409                 db  0Bh
.rodata:000000000000540A                 db 0F3h
.rodata:000000000000540B                 db  8Ch
.rodata:000000000000540C                 db    0
.rodata:000000000000540D                 db    0
.rodata:000000000000540E                 db    0
.rodata:000000000000540F                 db    0
.rodata:0000000000005410                 db  74h ; t
.rodata:0000000000005411                 db  2Dh ; -
.rodata:0000000000005412                 db 0B0h
.rodata:0000000000005413                 db  81h
.rodata:0000000000005414                 db    0
.rodata:0000000000005415                 db    0
.rodata:0000000000005416                 db    0
.rodata:0000000000005417                 db    0
.rodata:0000000000005418                 db 0C3h
.rodata:0000000000005419                 db  30h ; 0
.rodata:000000000000541A                 db  71h ; q
.rodata:000000000000541B                 db  85h
.rodata:000000000000541C                 db    0
.rodata:000000000000541D                 db    0
.rodata:000000000000541E                 db    0
.rodata:000000000000541F                 db    0
.rodata:0000000000005420                 db  99h
.rodata:0000000000005421                 db  90h
.rodata:0000000000005422                 db  8Ah
.rodata:0000000000005423                 db  5Dh ; ]
.rodata:0000000000005424                 db    0
.rodata:0000000000005425                 db    0
.rodata:0000000000005426                 db    0
.rodata:0000000000005427                 db    0
.rodata:0000000000005428                 db  2Eh ; .
.rodata:0000000000005429                 db  8Dh
.rodata:000000000000542A                 db  4Bh ; K
.rodata:000000000000542B                 db  59h ; Y
.rodata:000000000000542C                 db    0
.rodata:000000000000542D                 db    0
.rodata:000000000000542E                 db    0
.rodata:000000000000542F                 db    0
.rodata:0000000000005430                 db 0F7h
.rodata:0000000000005431                 db 0ABh
.rodata:0000000000005432                 db    8
.rodata:0000000000005433                 db  54h ; T
.rodata:0000000000005434                 db    0
.rodata:0000000000005435                 db    0
.rodata:0000000000005436                 db    0
.rodata:0000000000005437                 db    0
.rodata:0000000000005438                 db  40h ; @
.rodata:0000000000005439                 db 0B6h
.rodata:000000000000543A                 db 0C9h
.rodata:000000000000543B                 db  50h ; P
.rodata:000000000000543C                 db    0
.rodata:000000000000543D                 db    0
.rodata:000000000000543E                 db    0
.rodata:000000000000543F                 db    0
.rodata:0000000000005440                 db  45h ; E
.rodata:0000000000005441                 db 0E6h
.rodata:0000000000005442                 db  8Eh
.rodata:0000000000005443                 db  4Eh ; N
.rodata:0000000000005444                 db    0
.rodata:0000000000005445                 db    0
.rodata:0000000000005446                 db    0
.rodata:0000000000005447                 db    0
.rodata:0000000000005448                 db 0F2h
.rodata:0000000000005449                 db 0FBh
.rodata:000000000000544A                 db  4Fh ; O
.rodata:000000000000544B                 db  4Ah ; J
.rodata:000000000000544C                 db    0
.rodata:000000000000544D                 db    0
.rodata:000000000000544E                 db    0
.rodata:000000000000544F                 db    0
.rodata:0000000000005450                 db  2Bh ; +
.rodata:0000000000005451                 db 0DDh
.rodata:0000000000005452                 db  0Ch
.rodata:0000000000005453                 db  47h ; G
.rodata:0000000000005454                 db    0
.rodata:0000000000005455                 db    0
.rodata:0000000000005456                 db    0
.rodata:0000000000005457                 db    0
.rodata:0000000000005458                 db  9Ch
.rodata:0000000000005459                 db 0C0h
.rodata:000000000000545A                 db 0CDh
.rodata:000000000000545B                 db  43h ; C
.rodata:000000000000545C                 db    0
.rodata:000000000000545D                 db    0
.rodata:000000000000545E                 db    0
.rodata:000000000000545F                 db    0
.rodata:0000000000005460                 db  21h ; !
.rodata:0000000000005461                 db  7Dh ; }
.rodata:0000000000005462                 db  82h
.rodata:0000000000005463                 db  7Bh ; {
.rodata:0000000000005464                 db    0
.rodata:0000000000005465                 db    0
.rodata:0000000000005466                 db    0
.rodata:0000000000005467                 db    0
.rodata:0000000000005468                 db  96h
.rodata:0000000000005469                 db  60h ; `
.rodata:000000000000546A                 db  43h ; C
.rodata:000000000000546B                 db  7Fh ; 
.rodata:000000000000546C                 db    0
.rodata:000000000000546D                 db    0
.rodata:000000000000546E                 db    0
.rodata:000000000000546F                 db    0
.rodata:0000000000005470                 db  4Fh ; O
.rodata:0000000000005471                 db  46h ; F
.rodata:0000000000005472                 db    0
.rodata:0000000000005473                 db  72h ; r
.rodata:0000000000005474                 db    0
.rodata:0000000000005475                 db    0
.rodata:0000000000005476                 db    0
.rodata:0000000000005477                 db    0
.rodata:0000000000005478                 db 0F8h
.rodata:0000000000005479                 db  5Bh ; [
.rodata:000000000000547A                 db 0C1h
.rodata:000000000000547B                 db  76h ; v
.rodata:000000000000547C                 db    0
.rodata:000000000000547D                 db    0
.rodata:000000000000547E                 db    0
.rodata:000000000000547F                 db    0
.rodata:0000000000005480                 db 0FDh
.rodata:0000000000005481                 db  0Bh
.rodata:0000000000005482                 db  86h
.rodata:0000000000005483                 db  68h ; h
.rodata:0000000000005484                 db    0
.rodata:0000000000005485                 db    0
.rodata:0000000000005486                 db    0
.rodata:0000000000005487                 db    0
.rodata:0000000000005488                 db  4Ah ; J
.rodata:0000000000005489                 db  16h
.rodata:000000000000548A                 db  47h ; G
.rodata:000000000000548B                 db  6Ch ; l
.rodata:000000000000548C                 db    0
.rodata:000000000000548D                 db    0
.rodata:000000000000548E                 db    0
.rodata:000000000000548F                 db    0
.rodata:0000000000005490                 db  93h
.rodata:0000000000005491                 db  30h ; 0
.rodata:0000000000005492                 db    4
.rodata:0000000000005493                 db  61h ; a
.rodata:0000000000005494                 db    0
.rodata:0000000000005495                 db    0
.rodata:0000000000005496                 db    0
.rodata:0000000000005497                 db    0
.rodata:0000000000005498                 db  24h ; $
.rodata:0000000000005499                 db  2Dh ; -
.rodata:000000000000549A                 db 0C5h
.rodata:000000000000549B                 db  65h ; e
.rodata:000000000000549C                 db    0
.rodata:000000000000549D                 db    0
.rodata:000000000000549E                 db    0
.rodata:000000000000549F                 db    0
.rodata:00000000000054A0                 db 0E9h
.rodata:00000000000054A1                 db  4Bh ; K
.rodata:00000000000054A2                 db  9Bh
.rodata:00000000000054A3                 db  11h
.rodata:00000000000054A4                 db    0
.rodata:00000000000054A5                 db    0
.rodata:00000000000054A6                 db    0
.rodata:00000000000054A7                 db    0
.rodata:00000000000054A8                 db  5Eh ; ^
.rodata:00000000000054A9                 db  56h ; V
.rodata:00000000000054AA                 db  5Ah ; Z
.rodata:00000000000054AB                 db  15h
.rodata:00000000000054AC                 db    0
.rodata:00000000000054AD                 db    0
.rodata:00000000000054AE                 db    0
.rodata:00000000000054AF                 db    0
.rodata:00000000000054B0                 db  87h
.rodata:00000000000054B1                 db  70h ; p
.rodata:00000000000054B2                 db  19h
.rodata:00000000000054B3                 db  18h
.rodata:00000000000054B4                 db    0
.rodata:00000000000054B5                 db    0
.rodata:00000000000054B6                 db    0
.rodata:00000000000054B7                 db    0
.rodata:00000000000054B8                 db  30h ; 0
.rodata:00000000000054B9                 db  6Dh ; m
.rodata:00000000000054BA                 db 0D8h
.rodata:00000000000054BB                 db  1Ch
.rodata:00000000000054BC                 db    0
.rodata:00000000000054BD                 db    0
.rodata:00000000000054BE                 db    0
.rodata:00000000000054BF                 db    0
.rodata:00000000000054C0                 db  35h ; 5
.rodata:00000000000054C1                 db  3Dh ; =
.rodata:00000000000054C2                 db  9Fh
.rodata:00000000000054C3                 db    2
.rodata:00000000000054C4                 db    0
.rodata:00000000000054C5                 db    0
.rodata:00000000000054C6                 db    0
.rodata:00000000000054C7                 db    0
.rodata:00000000000054C8                 db  82h
.rodata:00000000000054C9                 db  20h
.rodata:00000000000054CA                 db  5Eh ; ^
.rodata:00000000000054CB                 db    6
.rodata:00000000000054CC                 db    0
.rodata:00000000000054CD                 db    0
.rodata:00000000000054CE                 db    0
.rodata:00000000000054CF                 db    0
.rodata:00000000000054D0                 db  5Bh ; [
.rodata:00000000000054D1                 db    6
.rodata:00000000000054D2                 db  1Dh
.rodata:00000000000054D3                 db  0Bh
.rodata:00000000000054D4                 db    0
.rodata:00000000000054D5                 db    0
.rodata:00000000000054D6                 db    0
.rodata:00000000000054D7                 db    0
.rodata:00000000000054D8                 db 0ECh
.rodata:00000000000054D9                 db  1Bh
.rodata:00000000000054DA                 db 0DCh
.rodata:00000000000054DB                 db  0Fh
.rodata:00000000000054DC                 db    0
.rodata:00000000000054DD                 db    0
.rodata:00000000000054DE                 db    0
.rodata:00000000000054DF                 db    0
.rodata:00000000000054E0                 db  51h ; Q
.rodata:00000000000054E1                 db 0A6h
.rodata:00000000000054E2                 db  93h
.rodata:00000000000054E3                 db  37h ; 7
.rodata:00000000000054E4                 db    0
.rodata:00000000000054E5                 db    0
.rodata:00000000000054E6                 db    0
.rodata:00000000000054E7                 db    0
.rodata:00000000000054E8                 db 0E6h
.rodata:00000000000054E9                 db 0BBh
.rodata:00000000000054EA                 db  52h ; R
.rodata:00000000000054EB                 db  33h ; 3
.rodata:00000000000054EC                 db    0
.rodata:00000000000054ED                 db    0
.rodata:00000000000054EE                 db    0
.rodata:00000000000054EF                 db    0
.rodata:00000000000054F0                 db  3Fh ; ?
.rodata:00000000000054F1                 db  9Dh
.rodata:00000000000054F2                 db  11h
.rodata:00000000000054F3                 db  3Eh ; >
.rodata:00000000000054F4                 db    0
.rodata:00000000000054F5                 db    0
.rodata:00000000000054F6                 db    0
.rodata:00000000000054F7                 db    0
.rodata:00000000000054F8                 db  88h
.rodata:00000000000054F9                 db  80h
.rodata:00000000000054FA                 db 0D0h
.rodata:00000000000054FB                 db  3Ah ; :
.rodata:00000000000054FC                 db    0
.rodata:00000000000054FD                 db    0
.rodata:00000000000054FE                 db    0
.rodata:00000000000054FF                 db    0
.rodata:0000000000005500                 db  8Dh
.rodata:0000000000005501                 db 0D0h
.rodata:0000000000005502                 db  97h
.rodata:0000000000005503                 db  24h ; $
.rodata:0000000000005504                 db    0
.rodata:0000000000005505                 db    0
.rodata:0000000000005506                 db    0
.rodata:0000000000005507                 db    0
.rodata:0000000000005508                 db  3Ah ; :
.rodata:0000000000005509                 db 0CDh
.rodata:000000000000550A                 db  56h ; V
.rodata:000000000000550B                 db  20h
.rodata:000000000000550C                 db    0
.rodata:000000000000550D                 db    0
.rodata:000000000000550E                 db    0
.rodata:000000000000550F                 db    0
.rodata:0000000000005510                 db 0E3h
.rodata:0000000000005511                 db 0EBh
.rodata:0000000000005512                 db  15h
.rodata:0000000000005513                 db  2Dh ; -
.rodata:0000000000005514                 db    0
.rodata:0000000000005515                 db    0
.rodata:0000000000005516                 db    0
.rodata:0000000000005517                 db    0
.rodata:0000000000005518                 db  54h ; T
.rodata:0000000000005519                 db 0F6h
.rodata:000000000000551A                 db 0D4h
.rodata:000000000000551B                 db  29h ; )
.rodata:000000000000551C                 db    0
.rodata:000000000000551D                 db    0
.rodata:000000000000551E                 db    0
.rodata:000000000000551F                 db    0
.rodata:0000000000005520                 db  79h ; y
.rodata:0000000000005521                 db  26h ; &
.rodata:0000000000005522                 db 0A9h
.rodata:0000000000005523                 db 0C5h
.rodata:0000000000005524                 db    0
.rodata:0000000000005525                 db    0
.rodata:0000000000005526                 db    0
.rodata:0000000000005527                 db    0
.rodata:0000000000005528                 db 0CEh
.rodata:0000000000005529                 db  3Bh ; ;
.rodata:000000000000552A                 db  68h ; h
.rodata:000000000000552B                 db 0C1h
.rodata:000000000000552C                 db    0
.rodata:000000000000552D                 db    0
.rodata:000000000000552E                 db    0
.rodata:000000000000552F                 db    0
.rodata:0000000000005530                 db  17h
.rodata:0000000000005531                 db  1Dh
.rodata:0000000000005532                 db  2Bh ; +
.rodata:0000000000005533                 db 0CCh
.rodata:0000000000005534                 db    0
.rodata:0000000000005535                 db    0
.rodata:0000000000005536                 db    0
.rodata:0000000000005537                 db    0
.rodata:0000000000005538                 db 0A0h
.rodata:0000000000005539                 db    0
.rodata:000000000000553A                 db 0EAh
.rodata:000000000000553B                 db 0C8h
.rodata:000000000000553C                 db    0
.rodata:000000000000553D                 db    0
.rodata:000000000000553E                 db    0
.rodata:000000000000553F                 db    0
.rodata:0000000000005540                 db 0A5h
.rodata:0000000000005541                 db  50h ; P
.rodata:0000000000005542                 db 0ADh
.rodata:0000000000005543                 db 0D6h
.rodata:0000000000005544                 db    0
.rodata:0000000000005545                 db    0
.rodata:0000000000005546                 db    0
.rodata:0000000000005547                 db    0
.rodata:0000000000005548                 db  12h
.rodata:0000000000005549                 db  4Dh ; M
.rodata:000000000000554A                 db  6Ch ; l
.rodata:000000000000554B                 db 0D2h
.rodata:000000000000554C                 db    0
.rodata:000000000000554D                 db    0
.rodata:000000000000554E                 db    0
.rodata:000000000000554F                 db    0
.rodata:0000000000005550                 db 0CBh
.rodata:0000000000005551                 db  6Bh ; k
.rodata:0000000000005552                 db  2Fh ; /
.rodata:0000000000005553                 db 0DFh
.rodata:0000000000005554                 db    0
.rodata:0000000000005555                 db    0
.rodata:0000000000005556                 db    0
.rodata:0000000000005557                 db    0
.rodata:0000000000005558                 db  7Ch ; |
.rodata:0000000000005559                 db  76h ; v
.rodata:000000000000555A                 db 0EEh
.rodata:000000000000555B                 db 0DBh
.rodata:000000000000555C                 db    0
.rodata:000000000000555D                 db    0
.rodata:000000000000555E                 db    0
.rodata:000000000000555F                 db    0
.rodata:0000000000005560                 db 0C1h
.rodata:0000000000005561                 db 0CBh
.rodata:0000000000005562                 db 0A1h
.rodata:0000000000005563                 db 0E3h
.rodata:0000000000005564                 db    0
.rodata:0000000000005565                 db    0
.rodata:0000000000005566                 db    0
.rodata:0000000000005567                 db    0
.rodata:0000000000005568                 db  76h ; v
.rodata:0000000000005569                 db 0D6h
.rodata:000000000000556A                 db  60h ; `
.rodata:000000000000556B                 db 0E7h
.rodata:000000000000556C                 db    0
.rodata:000000000000556D                 db    0
.rodata:000000000000556E                 db    0
.rodata:000000000000556F                 db    0
.rodata:0000000000005570                 db 0AFh
.rodata:0000000000005571                 db 0F0h
.rodata:0000000000005572                 db  23h ; #
.rodata:0000000000005573                 db 0EAh
.rodata:0000000000005574                 db    0
.rodata:0000000000005575                 db    0
.rodata:0000000000005576                 db    0
.rodata:0000000000005577                 db    0
.rodata:0000000000005578                 db  18h
.rodata:0000000000005579                 db 0EDh
.rodata:000000000000557A                 db 0E2h
.rodata:000000000000557B                 db 0EEh
.rodata:000000000000557C                 db    0
.rodata:000000000000557D                 db    0
.rodata:000000000000557E                 db    0
.rodata:000000000000557F                 db    0
.rodata:0000000000005580                 db  1Dh
.rodata:0000000000005581                 db 0BDh
.rodata:0000000000005582                 db 0A5h
.rodata:0000000000005583                 db 0F0h
.rodata:0000000000005584                 db    0
.rodata:0000000000005585                 db    0
.rodata:0000000000005586                 db    0
.rodata:0000000000005587                 db    0
.rodata:0000000000005588                 db 0AAh
.rodata:0000000000005589                 db 0A0h
.rodata:000000000000558A                 db  64h ; d
.rodata:000000000000558B                 db 0F4h
.rodata:000000000000558C                 db    0
.rodata:000000000000558D                 db    0
.rodata:000000000000558E                 db    0
.rodata:000000000000558F                 db    0
.rodata:0000000000005590                 db  73h ; s
.rodata:0000000000005591                 db  86h
.rodata:0000000000005592                 db  27h ; '
.rodata:0000000000005593                 db 0F9h
.rodata:0000000000005594                 db    0
.rodata:0000000000005595                 db    0
.rodata:0000000000005596                 db    0
.rodata:0000000000005597                 db    0
.rodata:0000000000005598                 db 0C4h
.rodata:0000000000005599                 db  9Bh
.rodata:000000000000559A                 db 0E6h
.rodata:000000000000559B                 db 0FDh
.rodata:000000000000559C                 db    0
.rodata:000000000000559D                 db    0
.rodata:000000000000559E                 db    0
.rodata:000000000000559F                 db    0
.rodata:00000000000055A0                 db    9
.rodata:00000000000055A1                 db 0FDh
.rodata:00000000000055A2                 db 0B8h
.rodata:00000000000055A3                 db  89h
.rodata:00000000000055A4                 db    0
.rodata:00000000000055A5                 db    0
.rodata:00000000000055A6                 db    0
.rodata:00000000000055A7                 db    0
.rodata:00000000000055A8                 db 0BEh
.rodata:00000000000055A9                 db 0E0h
.rodata:00000000000055AA                 db  79h ; y
.rodata:00000000000055AB                 db  8Dh
.rodata:00000000000055AC                 db    0
.rodata:00000000000055AD                 db    0
.rodata:00000000000055AE                 db    0
.rodata:00000000000055AF                 db    0
.rodata:00000000000055B0                 db  67h ; g
.rodata:00000000000055B1                 db 0C6h
.rodata:00000000000055B2                 db  3Ah ; :
.rodata:00000000000055B3                 db  80h
.rodata:00000000000055B4                 db    0
.rodata:00000000000055B5                 db    0
.rodata:00000000000055B6                 db    0
.rodata:00000000000055B7                 db    0
.rodata:00000000000055B8                 db 0D0h
.rodata:00000000000055B9                 db 0DBh
.rodata:00000000000055BA                 db 0FBh
.rodata:00000000000055BB                 db  84h
.rodata:00000000000055BC                 db    0
.rodata:00000000000055BD                 db    0
.rodata:00000000000055BE                 db    0
.rodata:00000000000055BF                 db    0
.rodata:00000000000055C0                 db 0D5h
.rodata:00000000000055C1                 db  8Bh
.rodata:00000000000055C2                 db 0BCh
.rodata:00000000000055C3                 db  9Ah
.rodata:00000000000055C4                 db    0
.rodata:00000000000055C5                 db    0
.rodata:00000000000055C6                 db    0
.rodata:00000000000055C7                 db    0
.rodata:00000000000055C8                 db  62h ; b
.rodata:00000000000055C9                 db  96h
.rodata:00000000000055CA                 db  7Dh ; }
.rodata:00000000000055CB                 db  9Eh
.rodata:00000000000055CC                 db    0
.rodata:00000000000055CD                 db    0
.rodata:00000000000055CE                 db    0
.rodata:00000000000055CF                 db    0
.rodata:00000000000055D0                 db 0BBh
.rodata:00000000000055D1                 db 0B0h
.rodata:00000000000055D2                 db  3Eh ; >
.rodata:00000000000055D3                 db  93h
.rodata:00000000000055D4                 db    0
.rodata:00000000000055D5                 db    0
.rodata:00000000000055D6                 db    0
.rodata:00000000000055D7                 db    0
.rodata:00000000000055D8                 db  0Ch
.rodata:00000000000055D9                 db 0ADh
.rodata:00000000000055DA                 db 0FFh
.rodata:00000000000055DB                 db  97h
.rodata:00000000000055DC                 db    0
.rodata:00000000000055DD                 db    0
.rodata:00000000000055DE                 db    0
.rodata:00000000000055DF                 db    0
.rodata:00000000000055E0                 db 0B1h
.rodata:00000000000055E1                 db  10h
.rodata:00000000000055E2                 db 0B0h
.rodata:00000000000055E3                 db 0AFh
.rodata:00000000000055E4                 db    0
.rodata:00000000000055E5                 db    0
.rodata:00000000000055E6                 db    0
.rodata:00000000000055E7                 db    0
.rodata:00000000000055E8                 db    6
.rodata:00000000000055E9                 db  0Dh
.rodata:00000000000055EA                 db  71h ; q
.rodata:00000000000055EB                 db 0ABh
.rodata:00000000000055EC                 db    0
.rodata:00000000000055ED                 db    0
.rodata:00000000000055EE                 db    0
.rodata:00000000000055EF                 db    0
.rodata:00000000000055F0                 db 0DFh
.rodata:00000000000055F1                 db  2Bh ; +
.rodata:00000000000055F2                 db  32h ; 2
.rodata:00000000000055F3                 db 0A6h
.rodata:00000000000055F4                 db    0
.rodata:00000000000055F5                 db    0
.rodata:00000000000055F6                 db    0
.rodata:00000000000055F7                 db    0
.rodata:00000000000055F8                 db  68h ; h
.rodata:00000000000055F9                 db  36h ; 6
.rodata:00000000000055FA                 db 0F3h
.rodata:00000000000055FB                 db 0A2h
.rodata:00000000000055FC                 db    0
.rodata:00000000000055FD                 db    0
.rodata:00000000000055FE                 db    0
.rodata:00000000000055FF                 db    0
.rodata:0000000000005600                 db  6Dh ; m
.rodata:0000000000005601                 db  66h ; f
.rodata:0000000000005602                 db 0B4h
.rodata:0000000000005603                 db 0BCh
.rodata:0000000000005604                 db    0
.rodata:0000000000005605                 db    0
.rodata:0000000000005606                 db    0
.rodata:0000000000005607                 db    0
.rodata:0000000000005608                 db 0DAh
.rodata:0000000000005609                 db  7Bh ; {
.rodata:000000000000560A                 db  75h ; u
.rodata:000000000000560B                 db 0B8h
.rodata:000000000000560C                 db    0
.rodata:000000000000560D                 db    0
.rodata:000000000000560E                 db    0
.rodata:000000000000560F                 db    0
.rodata:0000000000005610                 db    3
.rodata:0000000000005611                 db  5Dh ; ]
.rodata:0000000000005612                 db  36h ; 6
.rodata:0000000000005613                 db 0B5h
.rodata:0000000000005614                 db    0
.rodata:0000000000005615                 db    0
.rodata:0000000000005616                 db    0
.rodata:0000000000005617                 db    0
.rodata:0000000000005618                 db 0B4h
.rodata:0000000000005619                 db  40h ; @
.rodata:000000000000561A                 db 0F7h
.rodata:000000000000561B                 db 0B1h
.rodata:000000000000561C                 db    0
.rodata:000000000000561D                 db    0
.rodata:000000000000561E                 db    0
.rodata:000000000000561F                 db    0
.rodata:0000000000005620 a831            db '8.31',0             ; DATA XREF: .data:Version↓o
.rodata:0000000000005625 ; const char aSS[]
.rodata:0000000000005625 aSS             db '%s: %s',0           ; DATA XREF: close_stdout+6C↑o
.rodata:000000000000562C ; const char shortopts[]
.rodata:000000000000562C shortopts       db '+',0                ; DATA XREF: parse_long_options+B7↑o
.rodata:000000000000562C                                         ; parse_gnu_standard_options_only+72↑o
.rodata:000000000000562E aHelp           db 'help',0             ; DATA XREF: .data.rel.ro:long_options↓o
.rodata:0000000000005633 aVersion        db 'version',0          ; DATA XREF: .data.rel.ro:0000000000207BE0↓o
.rodata:000000000000563B                 align 20h
.rodata:0000000000005640 aANullArgv0WasP db 'A NULL argv[0] was passed through an exec system call.',0Ah,0
.rodata:0000000000005640                                         ; DATA XREF: set_program_name+84↑o
.rodata:0000000000005678 aLibs           db '/.libs/',0          ; DATA XREF: set_program_name+2C↑o
.rodata:0000000000005680 aLt             db 'lt-',0              ; DATA XREF: set_program_name+44↑o
.rodata:0000000000005680                                         ; main+125↑o ...
.rodata:0000000000005684 unk_5684        db 0E2h                 ; DATA XREF: gettext_quote+CE↑o
.rodata:0000000000005685                 db  80h
.rodata:0000000000005686                 db  98h
.rodata:0000000000005687                 db    0
.rodata:0000000000005688 unk_5688        db 0E2h                 ; DATA XREF: gettext_quote+D5↑o
.rodata:0000000000005689                 db  80h
.rodata:000000000000568A                 db  99h
.rodata:000000000000568B                 db    0
.rodata:000000000000568C unk_568C        db 0A1h                 ; DATA XREF: gettext_quote+74↑o
.rodata:000000000000568D                 db    7
.rodata:000000000000568E                 db  65h ; e
.rodata:000000000000568F                 db    0
.rodata:0000000000005690 unk_5690        db 0A1h                 ; DATA XREF: gettext_quote+7B↑o
.rodata:0000000000005691                 db 0AFh
.rodata:0000000000005692                 db    0
.rodata:0000000000005693 unk_5693        db  22h ; "             ; DATA XREF: gettext_quote:loc_22F0↑o
.rodata:0000000000005693                                         ; quotearg_buffer_restyled:loc_30AB↑o ...
.rodata:0000000000005694                 db    0
.rodata:0000000000005695 ; const char asc_5695[2]
.rodata:0000000000005695 asc_5695        db 27h,0                ; DATA XREF: gettext_quote+27↑o
.rodata:0000000000005695                                         ; quotearg_buffer_restyled:loc_2473↑o ...
.rodata:0000000000005697 ; const char asc_5697[2]
.rodata:0000000000005697 asc_5697        db '`',0                ; DATA XREF: quotearg_buffer_restyled+D9B↑o
.rodata:0000000000005697                                         ; quotearg_buffer_restyled+DB6↑o
.rodata:0000000000005699 aLiteral        db 'literal',0          ; DATA XREF: .data.rel.ro:quoting_style_args↓o
.rodata:00000000000056A1 aShell          db 'shell',0            ; DATA XREF: .data.rel.ro:0000000000207C28↓o
.rodata:00000000000056A7 aShellAlways    db 'shell-always',0     ; DATA XREF: .data.rel.ro:0000000000207C30↓o
.rodata:00000000000056B4 aShellEscape    db 'shell-escape',0     ; DATA XREF: .data.rel.ro:0000000000207C38↓o
.rodata:00000000000056B4                                         ; .data.rel.ro:0000000000207C58↓o
.rodata:00000000000056C1 aShellEscapeAlw db 'shell-escape-always',0
.rodata:00000000000056C1                                         ; DATA XREF: .data.rel.ro:0000000000207C40↓o
.rodata:00000000000056D5 aC_1            db 'c',0                ; DATA XREF: .data.rel.ro:0000000000207C48↓o
.rodata:00000000000056D7 aCMaybe         db 'c-maybe',0          ; DATA XREF: .data.rel.ro:0000000000207C50↓o
.rodata:00000000000056DF aClocale        db 'clocale',0          ; DATA XREF: .data.rel.ro:0000000000207C68↓o
.rodata:00000000000056E7                 align 20h
.rodata:0000000000005700 jpt_2451        dd offset loc_31FA - 5700h
.rodata:0000000000005700                                         ; DATA XREF: quotearg_buffer_restyled+80↑o
.rodata:0000000000005700                                         ; quotearg_buffer_restyled+8A↑r
.rodata:0000000000005700                 dd offset loc_2453 - 5700h ; jump table for switch statement
.rodata:0000000000005700                 dd offset loc_3428 - 5700h
.rodata:0000000000005700                 dd offset loc_3234 - 5700h
.rodata:0000000000005700                 dd offset loc_3024 - 5700h
.rodata:0000000000005700                 dd offset loc_3080 - 5700h
.rodata:0000000000005700                 dd offset loc_30D5 - 5700h
.rodata:0000000000005700                 dd offset loc_311A - 5700h
.rodata:0000000000005700                 dd offset loc_3154 - 5700h
.rodata:0000000000005700                 dd offset loc_3154 - 5700h
.rodata:0000000000005700                 dd offset loc_3154 - 5700h
.rodata:000000000000572C jpt_25AE        dd offset loc_27D0 - 572Ch, offset def_25AE - 572Ch, offset def_25AE - 572Ch
.rodata:000000000000572C                                         ; DATA XREF: quotearg_buffer_restyled+1DD↑o
.rodata:000000000000572C                                         ; quotearg_buffer_restyled+1E7↑r
.rodata:000000000000572C                 dd offset def_25AE - 572Ch, offset def_25AE - 572Ch, offset def_25AE - 572Ch ; jump table for switch statement
.rodata:000000000000572C                 dd offset def_25AE - 572Ch, offset loc_2810 - 572Ch, offset loc_2718 - 572Ch
.rodata:000000000000572C                 dd offset loc_26D8 - 572Ch, offset loc_28A0 - 572Ch, offset loc_2890 - 572Ch
.rodata:000000000000572C                 dd offset loc_2880 - 572Ch, offset loc_2870 - 572Ch, offset def_25AE - 572Ch
.rodata:000000000000572C                 dd offset def_25AE - 572Ch, offset def_25AE - 572Ch, offset def_25AE - 572Ch
.rodata:000000000000572C                 dd offset def_25AE - 572Ch, offset def_25AE - 572Ch, offset def_25AE - 572Ch
.rodata:000000000000572C                 dd offset def_25AE - 572Ch, offset def_25AE - 572Ch, offset def_25AE - 572Ch
.rodata:000000000000572C                 dd offset def_25AE - 572Ch, offset def_25AE - 572Ch, offset def_25AE - 572Ch
.rodata:000000000000572C                 dd offset def_25AE - 572Ch, offset def_25AE - 572Ch, offset def_25AE - 572Ch
.rodata:000000000000572C                 dd offset def_25AE - 572Ch, offset def_25AE - 572Ch, offset loc_2860 - 572Ch
.rodata:000000000000572C                 dd offset loc_2850 - 572Ch, offset loc_2850 - 572Ch, offset loc_2820 - 572Ch
.rodata:000000000000572C                 dd offset loc_2850 - 572Ch, offset loc_27F8 - 572Ch, offset loc_2850 - 572Ch
.rodata:000000000000572C                 dd offset loc_26B3 - 572Ch, offset loc_2850 - 572Ch, offset loc_2850 - 572Ch
.rodata:000000000000572C                 dd offset loc_2850 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_2850 - 572Ch
.rodata:000000000000572C                 dd offset loc_2850 - 572Ch, offset loc_2850 - 572Ch, offset loc_2850 - 572Ch
.rodata:000000000000572C                 dd offset loc_2683 - 572Ch, offset def_25AE - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_2850 - 572Ch, offset loc_2728 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_2850 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_2850 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch, offset loc_27F8 - 572Ch
.rodata:000000000000572C                 dd offset loc_25B3 - 572Ch, offset loc_2850 - 572Ch, offset loc_25B3 - 572Ch
.rodata:000000000000572C                 dd offset loc_2820 - 572Ch
.rodata:0000000000005928 jpt_293A        dd offset loc_29A0 - 5928h, offset def_293A - 5928h, offset def_293A - 5928h
.rodata:0000000000005928                                         ; DATA XREF: quotearg_buffer_restyled+569↑o
.rodata:0000000000005928                                         ; quotearg_buffer_restyled+573↑r
.rodata:0000000000005928                 dd offset def_293A - 5928h, offset def_293A - 5928h, offset def_293A - 5928h ; jump table for switch statement
.rodata:0000000000005928                 dd offset def_293A - 5928h, offset loc_2990 - 5928h, offset loc_2AE0 - 5928h
.rodata:0000000000005928                 dd offset loc_2AC8 - 5928h, offset loc_2978 - 5928h, offset loc_2AB8 - 5928h
.rodata:0000000000005928                 dd offset loc_2960 - 5928h, offset loc_2AA0 - 5928h, offset def_293A - 5928h
.rodata:0000000000005928                 dd offset def_293A - 5928h, offset def_293A - 5928h, offset def_293A - 5928h
.rodata:0000000000005928                 dd offset def_293A - 5928h, offset def_293A - 5928h, offset def_293A - 5928h
.rodata:0000000000005928                 dd offset def_293A - 5928h, offset def_293A - 5928h, offset def_293A - 5928h
.rodata:0000000000005928                 dd offset def_293A - 5928h, offset def_293A - 5928h, offset def_293A - 5928h
.rodata:0000000000005928                 dd offset def_293A - 5928h, offset def_293A - 5928h, offset def_293A - 5928h
.rodata:0000000000005928                 dd offset def_293A - 5928h, offset def_293A - 5928h, offset loc_2A88 - 5928h
.rodata:0000000000005928                 dd offset loc_2A70 - 5928h, offset loc_2A70 - 5928h, offset loc_2A58 - 5928h
.rodata:0000000000005928                 dd offset loc_2A70 - 5928h, offset loc_2A40 - 5928h, offset loc_2A70 - 5928h
.rodata:0000000000005928                 dd offset loc_26B0 - 5928h, offset loc_2A70 - 5928h, offset loc_2A70 - 5928h
.rodata:0000000000005928                 dd offset loc_2A70 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A70 - 5928h
.rodata:0000000000005928                 dd offset loc_2A70 - 5928h, offset loc_2A70 - 5928h, offset loc_2A70 - 5928h
.rodata:0000000000005928                 dd offset loc_2680 - 5928h, offset def_293A - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A70 - 5928h, offset loc_2940 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A70 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A70 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_2A40 - 5928h, offset loc_2A40 - 5928h, offset loc_2A40 - 5928h
.rodata:0000000000005928                 dd offset loc_25B0 - 5928h, offset loc_2A70 - 5928h, offset loc_25B0 - 5928h
.rodata:0000000000005928                 dd offset loc_2A58 - 5928h
.rodata:0000000000005B24                 align 20h
.rodata:0000000000005B40                 public quoting_style_vals
.rodata:0000000000005B40 quoting_style_vals db    0
.rodata:0000000000005B41                 db    0
.rodata:0000000000005B42                 db    0
.rodata:0000000000005B43                 db    0
.rodata:0000000000005B44                 db    1
.rodata:0000000000005B45                 db    0
.rodata:0000000000005B46                 db    0
.rodata:0000000000005B47                 db    0
.rodata:0000000000005B48                 db    2
.rodata:0000000000005B49                 db    0
.rodata:0000000000005B4A                 db    0
.rodata:0000000000005B4B                 db    0
.rodata:0000000000005B4C                 db    3
.rodata:0000000000005B4D                 db    0
.rodata:0000000000005B4E                 db    0
.rodata:0000000000005B4F                 db    0
.rodata:0000000000005B50                 db    4
.rodata:0000000000005B51                 db    0
.rodata:0000000000005B52                 db    0
.rodata:0000000000005B53                 db    0
.rodata:0000000000005B54                 db    5
.rodata:0000000000005B55                 db    0
.rodata:0000000000005B56                 db    0
.rodata:0000000000005B57                 db    0
.rodata:0000000000005B58                 db    6
.rodata:0000000000005B59                 db    0
.rodata:0000000000005B5A                 db    0
.rodata:0000000000005B5B                 db    0
.rodata:0000000000005B5C                 db    7
.rodata:0000000000005B5D                 db    0
.rodata:0000000000005B5E                 db    0
.rodata:0000000000005B5F                 db    0
.rodata:0000000000005B60                 db    8
.rodata:0000000000005B61                 db    0
.rodata:0000000000005B62                 db    0
.rodata:0000000000005B63                 db    0
.rodata:0000000000005B64                 db    9
.rodata:0000000000005B65                 db    0
.rodata:0000000000005B66                 db    0
.rodata:0000000000005B67                 db    0
.rodata:0000000000005B68 aSSS            db '%s (%s) %s',0Ah,0   ; DATA XREF: version_etc_arn+23↑o
.rodata:0000000000005B74 ; const char aC[]
.rodata:0000000000005B74 aC              db '(C)',0              ; DATA XREF: version_etc_arn:loc_3F9C↑o
.rodata:0000000000005B78 ; const char aWrittenByS[]
.rodata:0000000000005B78 aWrittenByS     db 'Written by %s.',0Ah,0
.rodata:0000000000005B78                                         ; DATA XREF: version_etc_arn+1BB↑o
.rodata:0000000000005B88 ; const char aWrittenBySAndS[]
.rodata:0000000000005B88 aWrittenBySAndS db 'Written by %s and %s.',0Ah,0
.rodata:0000000000005B88                                         ; DATA XREF: version_etc_arn+1FC↑o
.rodata:0000000000005B9F ; const char aWrittenBySSAnd[]
.rodata:0000000000005B9F aWrittenBySSAnd db 'Written by %s, %s, and %s.',0Ah,0
.rodata:0000000000005B9F                                         ; DATA XREF: version_etc_arn+248↑o
.rodata:0000000000005BBB ; const char aReportBugsToS[]
.rodata:0000000000005BBB aReportBugsToS  db 0Ah                  ; DATA XREF: emit_bug_reporting_address+1↑o
.rodata:0000000000005BBB                 db 'Report bugs to: %s',0Ah,0
.rodata:0000000000005BD0 aBugCoreutilsGn db 'bug-coreutils@gnu.org',0
.rodata:0000000000005BD0                                         ; DATA XREF: emit_bug_reporting_address+14↑o
.rodata:0000000000005BE6 ; const char aSHomePageS[]
.rodata:0000000000005BE6 aSHomePageS     db '%s home page: <%s>',0Ah,0
.rodata:0000000000005BE6                                         ; DATA XREF: emit_bug_reporting_address+2A↑o
.rodata:0000000000005BFA                 align 20h
.rodata:0000000000005C00 ; const char aLicenseGplv3Gn[]
.rodata:0000000000005C00 aLicenseGplv3Gn db 0Ah                  ; DATA XREF: version_etc_arn+6E↑o
.rodata:0000000000005C00                 db 'License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licen'
.rodata:0000000000005C00                 db 'ses/gpl.html>.',0Ah
.rodata:0000000000005C00                 db 'This is free software: you are free to change and redistribute it'
.rodata:0000000000005C00                 db '.',0Ah
.rodata:0000000000005C00                 db 'There is NO WARRANTY, to the extent permitted by law.',0Ah
.rodata:0000000000005C00                 db 0Ah,0
.rodata:0000000000005CCC                 align 10h
.rodata:0000000000005CD0 ; const char aWrittenBySSSAn[]
.rodata:0000000000005CD0 aWrittenBySSSAn db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000005CD0                                         ; DATA XREF: version_etc_arn:loc_41F0↑o
.rodata:0000000000005CD0                 db 'and %s.',0Ah,0
.rodata:0000000000005CF0 ; const char aWrittenBySSSSA[]
.rodata:0000000000005CF0 aWrittenBySSSSA db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000005CF0                                         ; DATA XREF: version_etc_arn+2EC↑o
.rodata:0000000000005CF0                 db '%s, and %s.',0Ah,0
.rodata:0000000000005D14                 align 8
.rodata:0000000000005D18 ; const char aWrittenBySSSSS_1[]
.rodata:0000000000005D18 aWrittenBySSSSS_1 db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000005D18                                         ; DATA XREF: version_etc_arn+320↑o
.rodata:0000000000005D18                 db '%s, %s, and %s.',0Ah,0
.rodata:0000000000005D40 ; const char aWrittenBySSSSS_2[]
.rodata:0000000000005D40 aWrittenBySSSSS_2 db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000005D40                                         ; DATA XREF: version_etc_arn+388↑o
.rodata:0000000000005D40                 db '%s, %s, %s, and %s.',0Ah,0
.rodata:0000000000005D6C                 align 10h
.rodata:0000000000005D70 ; const char aWrittenBySSSSS[]
.rodata:0000000000005D70 aWrittenBySSSSS db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000005D70                                         ; DATA XREF: version_etc_arn+B8↑o
.rodata:0000000000005D70                 db '%s, %s, %s, %s,',0Ah
.rodata:0000000000005D70                 db 'and %s.',0Ah,0
.rodata:0000000000005DA0 ; const char aWrittenBySSSSS_0[]
.rodata:0000000000005DA0 aWrittenBySSSSS_0 db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000005DA0                                         ; DATA XREF: version_etc_arn+168↑o
.rodata:0000000000005DA0                 db '%s, %s, %s, %s,',0Ah
.rodata:0000000000005DA0                 db '%s, and %s.',0Ah,0
.rodata:0000000000005DD4                 align 8
.rodata:0000000000005DD8 aWrittenBySSSSS_3 db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000005DD8                                         ; DATA XREF: version_etc_arn+3E5↑o
.rodata:0000000000005DD8                 db '%s, %s, %s, %s,',0Ah
.rodata:0000000000005DD8                 db '%s, %s, and others.',0Ah,0
.rodata:0000000000005E14                 align 8
.rodata:0000000000005E18 ; const char aGeneralHelpUsi[]
.rodata:0000000000005E18 aGeneralHelpUsi db 'General help using GNU software: <https://www.gnu.org/gethelp/>',0Ah
.rodata:0000000000005E18                                         ; DATA XREF: emit_bug_reporting_address+61↑o
.rodata:0000000000005E18                 db 0
.rodata:0000000000005E59                 align 20h
.rodata:0000000000005E60 jpt_4004        dd offset loc_4086 - 5E60h
.rodata:0000000000005E60                                         ; DATA XREF: version_etc_arn+96↑o
.rodata:0000000000005E60                                         ; version_etc_arn+9D↑r
.rodata:0000000000005E60                 dd offset loc_4118 - 5E60h ; jump table for switch statement
.rodata:0000000000005E60                 dd offset loc_4158 - 5E60h
.rodata:0000000000005E60                 dd offset loc_41A0 - 5E60h
.rodata:0000000000005E60                 dd offset loc_41F0 - 5E60h
.rodata:0000000000005E60                 dd offset loc_4248 - 5E60h
.rodata:0000000000005E60                 dd offset loc_4278 - 5E60h
.rodata:0000000000005E60                 dd offset loc_42E0 - 5E60h
.rodata:0000000000005E60                 dd offset loc_4010 - 5E60h
.rodata:0000000000005E60                 dd offset loc_40C0 - 5E60h
.rodata:0000000000005E88                 align 20h
.rodata:0000000000005EA0                 public version_etc_copyright
.rodata:0000000000005EA0 version_etc_copyright db 'Copyright %s %d Free Software Foundation, Inc.',0
.rodata:0000000000005EA0                                         ; DATA XREF: version_etc_arn+4F↑o
.rodata:0000000000005ECF ; const char aMemoryExhauste[]
.rodata:0000000000005ECF aMemoryExhauste db 'memory exhausted',0 ; DATA XREF: xalloc_die↑o
.rodata:0000000000005EE0 aC_0            db 'C',0                ; DATA XREF: hard_locale+18↑o
.rodata:0000000000005EE2 aPosix          db 'POSIX',0            ; DATA XREF: hard_locale:loc_4A80↑o
.rodata:0000000000005EE8 aAscii          db 'ASCII',0            ; DATA XREF: locale_charset+16↑o
.rodata:0000000000005EE8                                         ; locale_charset:loc_4AD0↑o
.rodata:0000000000005EE8 _rodata         ends
.rodata:0000000000005EE8
LOAD:0000000000005EEE ; ===========================================================================
LOAD:0000000000005EEE
LOAD:0000000000005EEE ; Segment type: Pure code
LOAD:0000000000005EEE ; Segment permissions: Read/Execute
LOAD:0000000000005EEE LOAD            segment byte public 'CODE' use64
LOAD:0000000000005EEE                 assume cs:LOAD
LOAD:0000000000005EEE                 ;org 5EEEh
LOAD:0000000000005EEE                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000005EEE                 align 10h
LOAD:0000000000005EEE LOAD            ends
LOAD:0000000000005EEE
.eh_frame_hdr:0000000000005EF0 ; ===========================================================================
.eh_frame_hdr:0000000000005EF0
.eh_frame_hdr:0000000000005EF0 ; Segment type: Pure data
.eh_frame_hdr:0000000000005EF0 ; Segment permissions: Read
.eh_frame_hdr:0000000000005EF0 _eh_frame_hdr   segment dword public 'CONST' use64
.eh_frame_hdr:0000000000005EF0                 assume cs:_eh_frame_hdr
.eh_frame_hdr:0000000000005EF0                 ;org 5EF0h
.eh_frame_hdr:0000000000005EF0 __GNU_EH_FRAME_HDR db    1              ; DATA XREF: LOAD:00000000000001A0↑o
.eh_frame_hdr:0000000000005EF1                 db  1Bh
.eh_frame_hdr:0000000000005EF2                 db    3
.eh_frame_hdr:0000000000005EF3                 db  3Bh ; ;
.eh_frame_hdr:0000000000005EF4                 db  6Ch ; l
.eh_frame_hdr:0000000000005EF5                 db    2
.eh_frame_hdr:0000000000005EF6                 db    0
.eh_frame_hdr:0000000000005EF7                 db    0
.eh_frame_hdr:0000000000005EF8                 db  4Ch ; L
.eh_frame_hdr:0000000000005EF9                 db    0
.eh_frame_hdr:0000000000005EFA                 db    0
.eh_frame_hdr:0000000000005EFB                 db    0
.eh_frame_hdr:0000000000005EFC                 db 0E0h
.eh_frame_hdr:0000000000005EFD                 db 0B3h
.eh_frame_hdr:0000000000005EFE                 db 0FFh
.eh_frame_hdr:0000000000005EFF                 db 0FFh
.eh_frame_hdr:0000000000005F00                 db 0B8h
.eh_frame_hdr:0000000000005F01                 db    2
.eh_frame_hdr:0000000000005F02                 db    0
.eh_frame_hdr:0000000000005F03                 db    0
.eh_frame_hdr:0000000000005F04                 db 0A0h
.eh_frame_hdr:0000000000005F05                 db 0B6h
.eh_frame_hdr:0000000000005F06                 db 0FFh
.eh_frame_hdr:0000000000005F07                 db 0FFh
.eh_frame_hdr:0000000000005F08                 db 0E0h
.eh_frame_hdr:0000000000005F09                 db    2
.eh_frame_hdr:0000000000005F0A                 db    0
.eh_frame_hdr:0000000000005F0B                 db    0
.eh_frame_hdr:0000000000005F0C                 db 0B0h
.eh_frame_hdr:0000000000005F0D                 db 0B6h
.eh_frame_hdr:0000000000005F0E                 db 0FFh
.eh_frame_hdr:0000000000005F0F                 db 0FFh
.eh_frame_hdr:0000000000005F10                 db  74h ; t
.eh_frame_hdr:0000000000005F11                 db    3
.eh_frame_hdr:0000000000005F12                 db    0
.eh_frame_hdr:0000000000005F13                 db    0
.eh_frame_hdr:0000000000005F14                 db  10h
.eh_frame_hdr:0000000000005F15                 db 0B8h
.eh_frame_hdr:0000000000005F16                 db 0FFh
.eh_frame_hdr:0000000000005F17                 db 0FFh
.eh_frame_hdr:0000000000005F18                 db  88h
.eh_frame_hdr:0000000000005F19                 db    2
.eh_frame_hdr:0000000000005F1A                 db    0
.eh_frame_hdr:0000000000005F1B                 db    0
.eh_frame_hdr:0000000000005F1C                 db  20h
.eh_frame_hdr:0000000000005F1D                 db 0B9h
.eh_frame_hdr:0000000000005F1E                 db 0FFh
.eh_frame_hdr:0000000000005F1F                 db 0FFh
.eh_frame_hdr:0000000000005F20                 db 0F8h
.eh_frame_hdr:0000000000005F21                 db    2
.eh_frame_hdr:0000000000005F22                 db    0
.eh_frame_hdr:0000000000005F23                 db    0
.eh_frame_hdr:0000000000005F24                 db  10h
.eh_frame_hdr:0000000000005F25                 db 0BCh
.eh_frame_hdr:0000000000005F26                 db 0FFh
.eh_frame_hdr:0000000000005F27                 db 0FFh
.eh_frame_hdr:0000000000005F28                 db  48h ; H
.eh_frame_hdr:0000000000005F29                 db    3
.eh_frame_hdr:0000000000005F2A                 db    0
.eh_frame_hdr:0000000000005F2B                 db    0
.eh_frame_hdr:0000000000005F2C                 db  60h ; `
.eh_frame_hdr:0000000000005F2D                 db 0BFh
.eh_frame_hdr:0000000000005F2E                 db 0FFh
.eh_frame_hdr:0000000000005F2F                 db 0FFh
.eh_frame_hdr:0000000000005F30                 db 0B8h
.eh_frame_hdr:0000000000005F31                 db    3
.eh_frame_hdr:0000000000005F32                 db    0
.eh_frame_hdr:0000000000005F33                 db    0
.eh_frame_hdr:0000000000005F34                 db  70h ; p
.eh_frame_hdr:0000000000005F35                 db 0BFh
.eh_frame_hdr:0000000000005F36                 db 0FFh
.eh_frame_hdr:0000000000005F37                 db 0FFh
.eh_frame_hdr:0000000000005F38                 db 0CCh
.eh_frame_hdr:0000000000005F39                 db    3
.eh_frame_hdr:0000000000005F3A                 db    0
.eh_frame_hdr:0000000000005F3B                 db    0
.eh_frame_hdr:0000000000005F3C                 db  80h
.eh_frame_hdr:0000000000005F3D                 db 0BFh
.eh_frame_hdr:0000000000005F3E                 db 0FFh
.eh_frame_hdr:0000000000005F3F                 db 0FFh
.eh_frame_hdr:0000000000005F40                 db 0E0h
.eh_frame_hdr:0000000000005F41                 db    3
.eh_frame_hdr:0000000000005F42                 db    0
.eh_frame_hdr:0000000000005F43                 db    0
.eh_frame_hdr:0000000000005F44                 db  30h ; 0
.eh_frame_hdr:0000000000005F45                 db 0C0h
.eh_frame_hdr:0000000000005F46                 db 0FFh
.eh_frame_hdr:0000000000005F47                 db 0FFh
.eh_frame_hdr:0000000000005F48                 db  10h
.eh_frame_hdr:0000000000005F49                 db    4
.eh_frame_hdr:0000000000005F4A                 db    0
.eh_frame_hdr:0000000000005F4B                 db    0
.eh_frame_hdr:0000000000005F4C                 db  40h ; @
.eh_frame_hdr:0000000000005F4D                 db 0C0h
.eh_frame_hdr:0000000000005F4E                 db 0FFh
.eh_frame_hdr:0000000000005F4F                 db 0FFh
.eh_frame_hdr:0000000000005F50                 db  24h ; $
.eh_frame_hdr:0000000000005F51                 db    4
.eh_frame_hdr:0000000000005F52                 db    0
.eh_frame_hdr:0000000000005F53                 db    0
.eh_frame_hdr:0000000000005F54                 db  70h ; p
.eh_frame_hdr:0000000000005F55                 db 0C0h
.eh_frame_hdr:0000000000005F56                 db 0FFh
.eh_frame_hdr:0000000000005F57                 db 0FFh
.eh_frame_hdr:0000000000005F58                 db  40h ; @
.eh_frame_hdr:0000000000005F59                 db    4
.eh_frame_hdr:0000000000005F5A                 db    0
.eh_frame_hdr:0000000000005F5B                 db    0
.eh_frame_hdr:0000000000005F5C                 db 0C0h
.eh_frame_hdr:0000000000005F5D                 db 0C0h
.eh_frame_hdr:0000000000005F5E                 db 0FFh
.eh_frame_hdr:0000000000005F5F                 db 0FFh
.eh_frame_hdr:0000000000005F60                 db  58h ; X
.eh_frame_hdr:0000000000005F61                 db    4
.eh_frame_hdr:0000000000005F62                 db    0
.eh_frame_hdr:0000000000005F63                 db    0
.eh_frame_hdr:0000000000005F64                 db    0
.eh_frame_hdr:0000000000005F65                 db 0C2h
.eh_frame_hdr:0000000000005F66                 db 0FFh
.eh_frame_hdr:0000000000005F67                 db 0FFh
.eh_frame_hdr:0000000000005F68                 db  94h
.eh_frame_hdr:0000000000005F69                 db    4
.eh_frame_hdr:0000000000005F6A                 db    0
.eh_frame_hdr:0000000000005F6B                 db    0
.eh_frame_hdr:0000000000005F6C                 db  40h ; @
.eh_frame_hdr:0000000000005F6D                 db 0C3h
.eh_frame_hdr:0000000000005F6E                 db 0FFh
.eh_frame_hdr:0000000000005F6F                 db 0FFh
.eh_frame_hdr:0000000000005F70                 db 0E0h
.eh_frame_hdr:0000000000005F71                 db    4
.eh_frame_hdr:0000000000005F72                 db    0
.eh_frame_hdr:0000000000005F73                 db    0
.eh_frame_hdr:0000000000005F74                 db 0E0h
.eh_frame_hdr:0000000000005F75                 db 0C3h
.eh_frame_hdr:0000000000005F76                 db 0FFh
.eh_frame_hdr:0000000000005F77                 db 0FFh
.eh_frame_hdr:0000000000005F78                 db    0
.eh_frame_hdr:0000000000005F79                 db    5
.eh_frame_hdr:0000000000005F7A                 db    0
.eh_frame_hdr:0000000000005F7B                 db    0
.eh_frame_hdr:0000000000005F7C                 db 0D0h
.eh_frame_hdr:0000000000005F7D                 db 0C4h
.eh_frame_hdr:0000000000005F7E                 db 0FFh
.eh_frame_hdr:0000000000005F7F                 db 0FFh
.eh_frame_hdr:0000000000005F80                 db  44h ; D
.eh_frame_hdr:0000000000005F81                 db    5
.eh_frame_hdr:0000000000005F82                 db    0
.eh_frame_hdr:0000000000005F83                 db    0
.eh_frame_hdr:0000000000005F84                 db  10h
.eh_frame_hdr:0000000000005F85                 db 0D7h
.eh_frame_hdr:0000000000005F86                 db 0FFh
.eh_frame_hdr:0000000000005F87                 db 0FFh
.eh_frame_hdr:0000000000005F88                 db 0BCh
.eh_frame_hdr:0000000000005F89                 db    5
.eh_frame_hdr:0000000000005F8A                 db    0
.eh_frame_hdr:0000000000005F8B                 db    0
.eh_frame_hdr:0000000000005F8C                 db 0C0h
.eh_frame_hdr:0000000000005F8D                 db 0D8h
.eh_frame_hdr:0000000000005F8E                 db 0FFh
.eh_frame_hdr:0000000000005F8F                 db 0FFh
.eh_frame_hdr:0000000000005F90                 db  28h ; (
.eh_frame_hdr:0000000000005F91                 db    6
.eh_frame_hdr:0000000000005F92                 db    0
.eh_frame_hdr:0000000000005F93                 db    0
.eh_frame_hdr:0000000000005F94                 db    0
.eh_frame_hdr:0000000000005F95                 db 0D9h
.eh_frame_hdr:0000000000005F96                 db 0FFh
.eh_frame_hdr:0000000000005F97                 db 0FFh
.eh_frame_hdr:0000000000005F98                 db  54h ; T
.eh_frame_hdr:0000000000005F99                 db    6
.eh_frame_hdr:0000000000005F9A                 db    0
.eh_frame_hdr:0000000000005F9B                 db    0
.eh_frame_hdr:0000000000005F9C                 db  20h
.eh_frame_hdr:0000000000005F9D                 db 0D9h
.eh_frame_hdr:0000000000005F9E                 db 0FFh
.eh_frame_hdr:0000000000005F9F                 db 0FFh
.eh_frame_hdr:0000000000005FA0                 db  68h ; h
.eh_frame_hdr:0000000000005FA1                 db    6
.eh_frame_hdr:0000000000005FA2                 db    0
.eh_frame_hdr:0000000000005FA3                 db    0
.eh_frame_hdr:0000000000005FA4                 db  40h ; @
.eh_frame_hdr:0000000000005FA5                 db 0D9h
.eh_frame_hdr:0000000000005FA6                 db 0FFh
.eh_frame_hdr:0000000000005FA7                 db 0FFh
.eh_frame_hdr:0000000000005FA8                 db  7Ch ; |
.eh_frame_hdr:0000000000005FA9                 db    6
.eh_frame_hdr:0000000000005FAA                 db    0
.eh_frame_hdr:0000000000005FAB                 db    0
.eh_frame_hdr:0000000000005FAC                 db  80h
.eh_frame_hdr:0000000000005FAD                 db 0D9h
.eh_frame_hdr:0000000000005FAE                 db 0FFh
.eh_frame_hdr:0000000000005FAF                 db 0FFh
.eh_frame_hdr:0000000000005FB0                 db  90h
.eh_frame_hdr:0000000000005FB1                 db    6
.eh_frame_hdr:0000000000005FB2                 db    0
.eh_frame_hdr:0000000000005FB3                 db    0
.eh_frame_hdr:0000000000005FB4                 db 0A0h
.eh_frame_hdr:0000000000005FB5                 db 0D9h
.eh_frame_hdr:0000000000005FB6                 db 0FFh
.eh_frame_hdr:0000000000005FB7                 db 0FFh
.eh_frame_hdr:0000000000005FB8                 db 0A4h
.eh_frame_hdr:0000000000005FB9                 db    6
.eh_frame_hdr:0000000000005FBA                 db    0
.eh_frame_hdr:0000000000005FBB                 db    0
.eh_frame_hdr:0000000000005FBC                 db 0D0h
.eh_frame_hdr:0000000000005FBD                 db 0D9h
.eh_frame_hdr:0000000000005FBE                 db 0FFh
.eh_frame_hdr:0000000000005FBF                 db 0FFh
.eh_frame_hdr:0000000000005FC0                 db 0B8h
.eh_frame_hdr:0000000000005FC1                 db    6
.eh_frame_hdr:0000000000005FC2                 db    0
.eh_frame_hdr:0000000000005FC3                 db    0
.eh_frame_hdr:0000000000005FC4                 db  50h ; P
.eh_frame_hdr:0000000000005FC5                 db 0DAh
.eh_frame_hdr:0000000000005FC6                 db 0FFh
.eh_frame_hdr:0000000000005FC7                 db 0FFh
.eh_frame_hdr:0000000000005FC8                 db  0Ch
.eh_frame_hdr:0000000000005FC9                 db    7
.eh_frame_hdr:0000000000005FCA                 db    0
.eh_frame_hdr:0000000000005FCB                 db    0
.eh_frame_hdr:0000000000005FCC                 db  40h ; @
.eh_frame_hdr:0000000000005FCD                 db 0DBh
.eh_frame_hdr:0000000000005FCE                 db 0FFh
.eh_frame_hdr:0000000000005FCF                 db 0FFh
.eh_frame_hdr:0000000000005FD0                 db  78h ; x
.eh_frame_hdr:0000000000005FD1                 db    7
.eh_frame_hdr:0000000000005FD2                 db    0
.eh_frame_hdr:0000000000005FD3                 db    0
.eh_frame_hdr:0000000000005FD4                 db  50h ; P
.eh_frame_hdr:0000000000005FD5                 db 0DBh
.eh_frame_hdr:0000000000005FD6                 db 0FFh
.eh_frame_hdr:0000000000005FD7                 db 0FFh
.eh_frame_hdr:0000000000005FD8                 db  8Ch
.eh_frame_hdr:0000000000005FD9                 db    7
.eh_frame_hdr:0000000000005FDA                 db    0
.eh_frame_hdr:0000000000005FDB                 db    0
.eh_frame_hdr:0000000000005FDC                 db 0F0h
.eh_frame_hdr:0000000000005FDD                 db 0DBh
.eh_frame_hdr:0000000000005FDE                 db 0FFh
.eh_frame_hdr:0000000000005FDF                 db 0FFh
.eh_frame_hdr:0000000000005FE0                 db 0B8h
.eh_frame_hdr:0000000000005FE1                 db    7
.eh_frame_hdr:0000000000005FE2                 db    0
.eh_frame_hdr:0000000000005FE3                 db    0
.eh_frame_hdr:0000000000005FE4                 db  10h
.eh_frame_hdr:0000000000005FE5                 db 0DCh
.eh_frame_hdr:0000000000005FE6                 db 0FFh
.eh_frame_hdr:0000000000005FE7                 db 0FFh
.eh_frame_hdr:0000000000005FE8                 db 0CCh
.eh_frame_hdr:0000000000005FE9                 db    7
.eh_frame_hdr:0000000000005FEA                 db    0
.eh_frame_hdr:0000000000005FEB                 db    0
.eh_frame_hdr:0000000000005FEC                 db  20h
.eh_frame_hdr:0000000000005FED                 db 0DCh
.eh_frame_hdr:0000000000005FEE                 db 0FFh
.eh_frame_hdr:0000000000005FEF                 db 0FFh
.eh_frame_hdr:0000000000005FF0                 db 0E0h
.eh_frame_hdr:0000000000005FF1                 db    7
.eh_frame_hdr:0000000000005FF2                 db    0
.eh_frame_hdr:0000000000005FF3                 db    0
.eh_frame_hdr:0000000000005FF4                 db  40h ; @
.eh_frame_hdr:0000000000005FF5                 db 0DCh
.eh_frame_hdr:0000000000005FF6                 db 0FFh
.eh_frame_hdr:0000000000005FF7                 db 0FFh
.eh_frame_hdr:0000000000005FF8                 db 0F4h
.eh_frame_hdr:0000000000005FF9                 db    7
.eh_frame_hdr:0000000000005FFA                 db    0
.eh_frame_hdr:0000000000005FFB                 db    0
.eh_frame_hdr:0000000000005FFC                 db  60h ; `
.eh_frame_hdr:0000000000005FFD                 db 0DCh
.eh_frame_hdr:0000000000005FFE                 db 0FFh
.eh_frame_hdr:0000000000005FFF                 db 0FFh
.eh_frame_hdr:0000000000006000                 db    8
.eh_frame_hdr:0000000000006001                 db    8
.eh_frame_hdr:0000000000006002                 db    0
.eh_frame_hdr:0000000000006003                 db    0
.eh_frame_hdr:0000000000006004                 db 0F0h
.eh_frame_hdr:0000000000006005                 db 0DCh
.eh_frame_hdr:0000000000006006                 db 0FFh
.eh_frame_hdr:0000000000006007                 db 0FFh
.eh_frame_hdr:0000000000006008                 db  24h ; $
.eh_frame_hdr:0000000000006009                 db    8
.eh_frame_hdr:000000000000600A                 db    0
.eh_frame_hdr:000000000000600B                 db    0
.eh_frame_hdr:000000000000600C                 db  80h
.eh_frame_hdr:000000000000600D                 db 0DDh
.eh_frame_hdr:000000000000600E                 db 0FFh
.eh_frame_hdr:000000000000600F                 db 0FFh
.eh_frame_hdr:0000000000006010                 db  40h ; @
.eh_frame_hdr:0000000000006011                 db    8
.eh_frame_hdr:0000000000006012                 db    0
.eh_frame_hdr:0000000000006013                 db    0
.eh_frame_hdr:0000000000006014                 db  90h
.eh_frame_hdr:0000000000006015                 db 0DDh
.eh_frame_hdr:0000000000006016                 db 0FFh
.eh_frame_hdr:0000000000006017                 db 0FFh
.eh_frame_hdr:0000000000006018                 db  54h ; T
.eh_frame_hdr:0000000000006019                 db    8
.eh_frame_hdr:000000000000601A                 db    0
.eh_frame_hdr:000000000000601B                 db    0
.eh_frame_hdr:000000000000601C                 db 0A0h
.eh_frame_hdr:000000000000601D                 db 0DDh
.eh_frame_hdr:000000000000601E                 db 0FFh
.eh_frame_hdr:000000000000601F                 db 0FFh
.eh_frame_hdr:0000000000006020                 db  68h ; h
.eh_frame_hdr:0000000000006021                 db    8
.eh_frame_hdr:0000000000006022                 db    0
.eh_frame_hdr:0000000000006023                 db    0
.eh_frame_hdr:0000000000006024                 db  40h ; @
.eh_frame_hdr:0000000000006025                 db 0DEh
.eh_frame_hdr:0000000000006026                 db 0FFh
.eh_frame_hdr:0000000000006027                 db 0FFh
.eh_frame_hdr:0000000000006028                 db  84h
.eh_frame_hdr:0000000000006029                 db    8
.eh_frame_hdr:000000000000602A                 db    0
.eh_frame_hdr:000000000000602B                 db    0
.eh_frame_hdr:000000000000602C                 db  50h ; P
.eh_frame_hdr:000000000000602D                 db 0DEh
.eh_frame_hdr:000000000000602E                 db 0FFh
.eh_frame_hdr:000000000000602F                 db 0FFh
.eh_frame_hdr:0000000000006030                 db  98h
.eh_frame_hdr:0000000000006031                 db    8
.eh_frame_hdr:0000000000006032                 db    0
.eh_frame_hdr:0000000000006033                 db    0
.eh_frame_hdr:0000000000006034                 db  70h ; p
.eh_frame_hdr:0000000000006035                 db 0DEh
.eh_frame_hdr:0000000000006036                 db 0FFh
.eh_frame_hdr:0000000000006037                 db 0FFh
.eh_frame_hdr:0000000000006038                 db 0ACh
.eh_frame_hdr:0000000000006039                 db    8
.eh_frame_hdr:000000000000603A                 db    0
.eh_frame_hdr:000000000000603B                 db    0
.eh_frame_hdr:000000000000603C                 db  80h
.eh_frame_hdr:000000000000603D                 db 0DEh
.eh_frame_hdr:000000000000603E                 db 0FFh
.eh_frame_hdr:000000000000603F                 db 0FFh
.eh_frame_hdr:0000000000006040                 db 0C0h
.eh_frame_hdr:0000000000006041                 db    8
.eh_frame_hdr:0000000000006042                 db    0
.eh_frame_hdr:0000000000006043                 db    0
.eh_frame_hdr:0000000000006044                 db  10h
.eh_frame_hdr:0000000000006045                 db 0DFh
.eh_frame_hdr:0000000000006046                 db 0FFh
.eh_frame_hdr:0000000000006047                 db 0FFh
.eh_frame_hdr:0000000000006048                 db 0DCh
.eh_frame_hdr:0000000000006049                 db    8
.eh_frame_hdr:000000000000604A                 db    0
.eh_frame_hdr:000000000000604B                 db    0
.eh_frame_hdr:000000000000604C                 db 0B0h
.eh_frame_hdr:000000000000604D                 db 0DFh
.eh_frame_hdr:000000000000604E                 db 0FFh
.eh_frame_hdr:000000000000604F                 db 0FFh
.eh_frame_hdr:0000000000006050                 db 0F8h
.eh_frame_hdr:0000000000006051                 db    8
.eh_frame_hdr:0000000000006052                 db    0
.eh_frame_hdr:0000000000006053                 db    0
.eh_frame_hdr:0000000000006054                 db 0C0h
.eh_frame_hdr:0000000000006055                 db 0DFh
.eh_frame_hdr:0000000000006056                 db 0FFh
.eh_frame_hdr:0000000000006057                 db 0FFh
.eh_frame_hdr:0000000000006058                 db  0Ch
.eh_frame_hdr:0000000000006059                 db    9
.eh_frame_hdr:000000000000605A                 db    0
.eh_frame_hdr:000000000000605B                 db    0
.eh_frame_hdr:000000000000605C                 db 0E0h
.eh_frame_hdr:000000000000605D                 db 0DFh
.eh_frame_hdr:000000000000605E                 db 0FFh
.eh_frame_hdr:000000000000605F                 db 0FFh
.eh_frame_hdr:0000000000006060                 db  20h
.eh_frame_hdr:0000000000006061                 db    9
.eh_frame_hdr:0000000000006062                 db    0
.eh_frame_hdr:0000000000006063                 db    0
.eh_frame_hdr:0000000000006064                 db    0
.eh_frame_hdr:0000000000006065                 db 0E0h
.eh_frame_hdr:0000000000006066                 db 0FFh
.eh_frame_hdr:0000000000006067                 db 0FFh
.eh_frame_hdr:0000000000006068                 db  34h ; 4
.eh_frame_hdr:0000000000006069                 db    9
.eh_frame_hdr:000000000000606A                 db    0
.eh_frame_hdr:000000000000606B                 db    0
.eh_frame_hdr:000000000000606C                 db  10h
.eh_frame_hdr:000000000000606D                 db 0E0h
.eh_frame_hdr:000000000000606E                 db 0FFh
.eh_frame_hdr:000000000000606F                 db 0FFh
.eh_frame_hdr:0000000000006070                 db  48h ; H
.eh_frame_hdr:0000000000006071                 db    9
.eh_frame_hdr:0000000000006072                 db    0
.eh_frame_hdr:0000000000006073                 db    0
.eh_frame_hdr:0000000000006074                 db  30h ; 0
.eh_frame_hdr:0000000000006075                 db 0E0h
.eh_frame_hdr:0000000000006076                 db 0FFh
.eh_frame_hdr:0000000000006077                 db 0FFh
.eh_frame_hdr:0000000000006078                 db  5Ch ; \
.eh_frame_hdr:0000000000006079                 db    9
.eh_frame_hdr:000000000000607A                 db    0
.eh_frame_hdr:000000000000607B                 db    0
.eh_frame_hdr:000000000000607C                 db  50h ; P
.eh_frame_hdr:000000000000607D                 db 0E0h
.eh_frame_hdr:000000000000607E                 db 0FFh
.eh_frame_hdr:000000000000607F                 db 0FFh
.eh_frame_hdr:0000000000006080                 db  70h ; p
.eh_frame_hdr:0000000000006081                 db    9
.eh_frame_hdr:0000000000006082                 db    0
.eh_frame_hdr:0000000000006083                 db    0
.eh_frame_hdr:0000000000006084                 db  70h ; p
.eh_frame_hdr:0000000000006085                 db 0E0h
.eh_frame_hdr:0000000000006086                 db 0FFh
.eh_frame_hdr:0000000000006087                 db 0FFh
.eh_frame_hdr:0000000000006088                 db  88h
.eh_frame_hdr:0000000000006089                 db    9
.eh_frame_hdr:000000000000608A                 db    0
.eh_frame_hdr:000000000000608B                 db    0
.eh_frame_hdr:000000000000608C                 db  90h
.eh_frame_hdr:000000000000608D                 db 0E4h
.eh_frame_hdr:000000000000608E                 db 0FFh
.eh_frame_hdr:000000000000608F                 db 0FFh
.eh_frame_hdr:0000000000006090                 db  9Ch
.eh_frame_hdr:0000000000006091                 db  0Ah
.eh_frame_hdr:0000000000006092                 db    0
.eh_frame_hdr:0000000000006093                 db    0
.eh_frame_hdr:0000000000006094                 db 0B0h
.eh_frame_hdr:0000000000006095                 db 0E4h
.eh_frame_hdr:0000000000006096                 db 0FFh
.eh_frame_hdr:0000000000006097                 db 0FFh
.eh_frame_hdr:0000000000006098                 db 0B0h
.eh_frame_hdr:0000000000006099                 db  0Ah
.eh_frame_hdr:000000000000609A                 db    0
.eh_frame_hdr:000000000000609B                 db    0
.eh_frame_hdr:000000000000609C                 db  30h ; 0
.eh_frame_hdr:000000000000609D                 db 0E5h
.eh_frame_hdr:000000000000609E                 db 0FFh
.eh_frame_hdr:000000000000609F                 db 0FFh
.eh_frame_hdr:00000000000060A0                 db 0CCh
.eh_frame_hdr:00000000000060A1                 db  0Ah
.eh_frame_hdr:00000000000060A2                 db    0
.eh_frame_hdr:00000000000060A3                 db    0
.eh_frame_hdr:00000000000060A4                 db  10h
.eh_frame_hdr:00000000000060A5                 db 0E6h
.eh_frame_hdr:00000000000060A6                 db 0FFh
.eh_frame_hdr:00000000000060A7                 db 0FFh
.eh_frame_hdr:00000000000060A8                 db 0F8h
.eh_frame_hdr:00000000000060A9                 db  0Ah
.eh_frame_hdr:00000000000060AA                 db    0
.eh_frame_hdr:00000000000060AB                 db    0
.eh_frame_hdr:00000000000060AC                 db  90h
.eh_frame_hdr:00000000000060AD                 db 0E6h
.eh_frame_hdr:00000000000060AE                 db 0FFh
.eh_frame_hdr:00000000000060AF                 db 0FFh
.eh_frame_hdr:00000000000060B0                 db  18h
.eh_frame_hdr:00000000000060B1                 db  0Bh
.eh_frame_hdr:00000000000060B2                 db    0
.eh_frame_hdr:00000000000060B3                 db    0
.eh_frame_hdr:00000000000060B4                 db 0B0h
.eh_frame_hdr:00000000000060B5                 db 0E6h
.eh_frame_hdr:00000000000060B6                 db 0FFh
.eh_frame_hdr:00000000000060B7                 db 0FFh
.eh_frame_hdr:00000000000060B8                 db  34h ; 4
.eh_frame_hdr:00000000000060B9                 db  0Bh
.eh_frame_hdr:00000000000060BA                 db    0
.eh_frame_hdr:00000000000060BB                 db    0
.eh_frame_hdr:00000000000060BC                 db 0E0h
.eh_frame_hdr:00000000000060BD                 db 0E6h
.eh_frame_hdr:00000000000060BE                 db 0FFh
.eh_frame_hdr:00000000000060BF                 db 0FFh
.eh_frame_hdr:00000000000060C0                 db  48h ; H
.eh_frame_hdr:00000000000060C1                 db  0Bh
.eh_frame_hdr:00000000000060C2                 db    0
.eh_frame_hdr:00000000000060C3                 db    0
.eh_frame_hdr:00000000000060C4                 db 0F0h
.eh_frame_hdr:00000000000060C5                 db 0E6h
.eh_frame_hdr:00000000000060C6                 db 0FFh
.eh_frame_hdr:00000000000060C7                 db 0FFh
.eh_frame_hdr:00000000000060C8                 db  5Ch ; \
.eh_frame_hdr:00000000000060C9                 db  0Bh
.eh_frame_hdr:00000000000060CA                 db    0
.eh_frame_hdr:00000000000060CB                 db    0
.eh_frame_hdr:00000000000060CC                 db  30h ; 0
.eh_frame_hdr:00000000000060CD                 db 0E7h
.eh_frame_hdr:00000000000060CE                 db 0FFh
.eh_frame_hdr:00000000000060CF                 db 0FFh
.eh_frame_hdr:00000000000060D0                 db  80h
.eh_frame_hdr:00000000000060D1                 db  0Bh
.eh_frame_hdr:00000000000060D2                 db    0
.eh_frame_hdr:00000000000060D3                 db    0
.eh_frame_hdr:00000000000060D4                 db  60h ; `
.eh_frame_hdr:00000000000060D5                 db 0E7h
.eh_frame_hdr:00000000000060D6                 db 0FFh
.eh_frame_hdr:00000000000060D7                 db 0FFh
.eh_frame_hdr:00000000000060D8                 db  94h
.eh_frame_hdr:00000000000060D9                 db  0Bh
.eh_frame_hdr:00000000000060DA                 db    0
.eh_frame_hdr:00000000000060DB                 db    0
.eh_frame_hdr:00000000000060DC                 db 0F0h
.eh_frame_hdr:00000000000060DD                 db 0E7h
.eh_frame_hdr:00000000000060DE                 db 0FFh
.eh_frame_hdr:00000000000060DF                 db 0FFh
.eh_frame_hdr:00000000000060E0                 db 0ACh
.eh_frame_hdr:00000000000060E1                 db  0Bh
.eh_frame_hdr:00000000000060E2                 db    0
.eh_frame_hdr:00000000000060E3                 db    0
.eh_frame_hdr:00000000000060E4                 db  40h ; @
.eh_frame_hdr:00000000000060E5                 db 0E8h
.eh_frame_hdr:00000000000060E6                 db 0FFh
.eh_frame_hdr:00000000000060E7                 db 0FFh
.eh_frame_hdr:00000000000060E8                 db 0C4h
.eh_frame_hdr:00000000000060E9                 db  0Bh
.eh_frame_hdr:00000000000060EA                 db    0
.eh_frame_hdr:00000000000060EB                 db    0
.eh_frame_hdr:00000000000060EC                 db  60h ; `
.eh_frame_hdr:00000000000060ED                 db 0E8h
.eh_frame_hdr:00000000000060EE                 db 0FFh
.eh_frame_hdr:00000000000060EF                 db 0FFh
.eh_frame_hdr:00000000000060F0                 db 0E0h
.eh_frame_hdr:00000000000060F1                 db  0Bh
.eh_frame_hdr:00000000000060F2                 db    0
.eh_frame_hdr:00000000000060F3                 db    0
.eh_frame_hdr:00000000000060F4                 db  90h
.eh_frame_hdr:00000000000060F5                 db 0E8h
.eh_frame_hdr:00000000000060F6                 db 0FFh
.eh_frame_hdr:00000000000060F7                 db 0FFh
.eh_frame_hdr:00000000000060F8                 db 0FCh
.eh_frame_hdr:00000000000060F9                 db  0Bh
.eh_frame_hdr:00000000000060FA                 db    0
.eh_frame_hdr:00000000000060FB                 db    0
.eh_frame_hdr:00000000000060FC                 db 0C0h
.eh_frame_hdr:00000000000060FD                 db 0E8h
.eh_frame_hdr:00000000000060FE                 db 0FFh
.eh_frame_hdr:00000000000060FF                 db 0FFh
.eh_frame_hdr:0000000000006100                 db  24h ; $
.eh_frame_hdr:0000000000006101                 db  0Ch
.eh_frame_hdr:0000000000006102                 db    0
.eh_frame_hdr:0000000000006103                 db    0
.eh_frame_hdr:0000000000006104                 db 0E0h
.eh_frame_hdr:0000000000006105                 db 0E8h
.eh_frame_hdr:0000000000006106                 db 0FFh
.eh_frame_hdr:0000000000006107                 db 0FFh
.eh_frame_hdr:0000000000006108                 db  40h ; @
.eh_frame_hdr:0000000000006109                 db  0Ch
.eh_frame_hdr:000000000000610A                 db    0
.eh_frame_hdr:000000000000610B                 db    0
.eh_frame_hdr:000000000000610C                 db  20h
.eh_frame_hdr:000000000000610D                 db 0E9h
.eh_frame_hdr:000000000000610E                 db 0FFh
.eh_frame_hdr:000000000000610F                 db 0FFh
.eh_frame_hdr:0000000000006110                 db  58h ; X
.eh_frame_hdr:0000000000006111                 db  0Ch
.eh_frame_hdr:0000000000006112                 db    0
.eh_frame_hdr:0000000000006113                 db    0
.eh_frame_hdr:0000000000006114                 db 0A0h
.eh_frame_hdr:0000000000006115                 db 0E9h
.eh_frame_hdr:0000000000006116                 db 0FFh
.eh_frame_hdr:0000000000006117                 db 0FFh
.eh_frame_hdr:0000000000006118                 db  90h
.eh_frame_hdr:0000000000006119                 db  0Ch
.eh_frame_hdr:000000000000611A                 db    0
.eh_frame_hdr:000000000000611B                 db    0
.eh_frame_hdr:000000000000611C                 db 0E0h
.eh_frame_hdr:000000000000611D                 db 0E9h
.eh_frame_hdr:000000000000611E                 db 0FFh
.eh_frame_hdr:000000000000611F                 db 0FFh
.eh_frame_hdr:0000000000006120                 db 0B0h
.eh_frame_hdr:0000000000006121                 db  0Ch
.eh_frame_hdr:0000000000006122                 db    0
.eh_frame_hdr:0000000000006123                 db    0
.eh_frame_hdr:0000000000006124                 db  40h ; @
.eh_frame_hdr:0000000000006125                 db 0EAh
.eh_frame_hdr:0000000000006126                 db 0FFh
.eh_frame_hdr:0000000000006127                 db 0FFh
.eh_frame_hdr:0000000000006128                 db 0E0h
.eh_frame_hdr:0000000000006129                 db  0Ch
.eh_frame_hdr:000000000000612A                 db    0
.eh_frame_hdr:000000000000612B                 db    0
.eh_frame_hdr:000000000000612C                 db 0D0h
.eh_frame_hdr:000000000000612D                 db 0EAh
.eh_frame_hdr:000000000000612E                 db 0FFh
.eh_frame_hdr:000000000000612F                 db 0FFh
.eh_frame_hdr:0000000000006130                 db  20h
.eh_frame_hdr:0000000000006131                 db  0Dh
.eh_frame_hdr:0000000000006132                 db    0
.eh_frame_hdr:0000000000006133                 db    0
.eh_frame_hdr:0000000000006134                 db  50h ; P
.eh_frame_hdr:0000000000006135                 db 0EBh
.eh_frame_hdr:0000000000006136                 db 0FFh
.eh_frame_hdr:0000000000006137                 db 0FFh
.eh_frame_hdr:0000000000006138                 db  70h ; p
.eh_frame_hdr:0000000000006139                 db  0Dh
.eh_frame_hdr:000000000000613A                 db    0
.eh_frame_hdr:000000000000613B                 db    0
.eh_frame_hdr:000000000000613C                 db 0B0h
.eh_frame_hdr:000000000000613D                 db 0EBh
.eh_frame_hdr:000000000000613E                 db 0FFh
.eh_frame_hdr:000000000000613F                 db 0FFh
.eh_frame_hdr:0000000000006140                 db  90h
.eh_frame_hdr:0000000000006141                 db  0Dh
.eh_frame_hdr:0000000000006142                 db    0
.eh_frame_hdr:0000000000006143                 db    0
.eh_frame_hdr:0000000000006144                 db 0F0h
.eh_frame_hdr:0000000000006145                 db 0EBh
.eh_frame_hdr:0000000000006146                 db 0FFh
.eh_frame_hdr:0000000000006147                 db 0FFh
.eh_frame_hdr:0000000000006148                 db 0B0h
.eh_frame_hdr:0000000000006149                 db  0Dh
.eh_frame_hdr:000000000000614A                 db    0
.eh_frame_hdr:000000000000614B                 db    0
.eh_frame_hdr:000000000000614C                 db  60h ; `
.eh_frame_hdr:000000000000614D                 db 0ECh
.eh_frame_hdr:000000000000614E                 db 0FFh
.eh_frame_hdr:000000000000614F                 db 0FFh
.eh_frame_hdr:0000000000006150                 db 0F8h
.eh_frame_hdr:0000000000006151                 db  0Dh
.eh_frame_hdr:0000000000006152                 db    0
.eh_frame_hdr:0000000000006153                 db    0
.eh_frame_hdr:0000000000006154                 db  70h ; p
.eh_frame_hdr:0000000000006155                 db 0ECh
.eh_frame_hdr:0000000000006156                 db 0FFh
.eh_frame_hdr:0000000000006157                 db 0FFh
.eh_frame_hdr:0000000000006158                 db  10h
.eh_frame_hdr:0000000000006159                 db  0Eh
.eh_frame_hdr:000000000000615A                 db    0
.eh_frame_hdr:000000000000615B                 db    0
.eh_frame_hdr:000000000000615B _eh_frame_hdr   ends
.eh_frame_hdr:000000000000615B
LOAD:000000000000615C ; ===========================================================================
LOAD:000000000000615C
LOAD:000000000000615C ; Segment type: Pure code
LOAD:000000000000615C ; Segment permissions: Read/Execute
LOAD:000000000000615C LOAD            segment byte public 'CODE' use64
LOAD:000000000000615C                 assume cs:LOAD
LOAD:000000000000615C                 ;org 615Ch
LOAD:000000000000615C                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:000000000000615C                 align 20h
LOAD:000000000000615C LOAD            ends
LOAD:000000000000615C
.eh_frame:0000000000006160 ; ===========================================================================
.eh_frame:0000000000006160
.eh_frame:0000000000006160 ; Segment type: Pure data
.eh_frame:0000000000006160 ; Segment permissions: Read
.eh_frame:0000000000006160 _eh_frame       segment qword public 'CONST' use64
.eh_frame:0000000000006160                 assume cs:_eh_frame
.eh_frame:0000000000006160                 ;org 6160h
.eh_frame:0000000000006160                 db  14h
.eh_frame:0000000000006161                 db    0
.eh_frame:0000000000006162                 db    0
.eh_frame:0000000000006163                 db    0
.eh_frame:0000000000006164                 db    0
.eh_frame:0000000000006165                 db    0
.eh_frame:0000000000006166                 db    0
.eh_frame:0000000000006167                 db    0
.eh_frame:0000000000006168                 db    1
.eh_frame:0000000000006169                 db  7Ah ; z
.eh_frame:000000000000616A                 db  52h ; R
.eh_frame:000000000000616B                 db    0
.eh_frame:000000000000616C                 db    1
.eh_frame:000000000000616D                 db  78h ; x
.eh_frame:000000000000616E                 db  10h
.eh_frame:000000000000616F                 db    1
.eh_frame:0000000000006170                 db  1Bh
.eh_frame:0000000000006171                 db  0Ch
.eh_frame:0000000000006172                 db    7
.eh_frame:0000000000006173                 db    8
.eh_frame:0000000000006174                 db  90h
.eh_frame:0000000000006175                 db    1
.eh_frame:0000000000006176                 db    7
.eh_frame:0000000000006177                 db  10h
.eh_frame:0000000000006178                 db  14h
.eh_frame:0000000000006179                 db    0
.eh_frame:000000000000617A                 db    0
.eh_frame:000000000000617B                 db    0
.eh_frame:000000000000617C                 db  1Ch
.eh_frame:000000000000617D                 db    0
.eh_frame:000000000000617E                 db    0
.eh_frame:000000000000617F                 db    0
.eh_frame:0000000000006180                 db  80h
.eh_frame:0000000000006181                 db 0B5h
.eh_frame:0000000000006182                 db 0FFh
.eh_frame:0000000000006183                 db 0FFh
.eh_frame:0000000000006184                 db  2Bh ; +
.eh_frame:0000000000006185                 db    0
.eh_frame:0000000000006186                 db    0
.eh_frame:0000000000006187                 db    0
.eh_frame:0000000000006188                 db    0
.eh_frame:0000000000006189                 db    0
.eh_frame:000000000000618A                 db    0
.eh_frame:000000000000618B                 db    0
.eh_frame:000000000000618C                 db    0
.eh_frame:000000000000618D                 db    0
.eh_frame:000000000000618E                 db    0
.eh_frame:000000000000618F                 db    0
.eh_frame:0000000000006190                 db  14h
.eh_frame:0000000000006191                 db    0
.eh_frame:0000000000006192                 db    0
.eh_frame:0000000000006193                 db    0
.eh_frame:0000000000006194                 db    0
.eh_frame:0000000000006195                 db    0
.eh_frame:0000000000006196                 db    0
.eh_frame:0000000000006197                 db    0
.eh_frame:0000000000006198                 db    1
.eh_frame:0000000000006199                 db  7Ah ; z
.eh_frame:000000000000619A                 db  52h ; R
.eh_frame:000000000000619B                 db    0
.eh_frame:000000000000619C                 db    1
.eh_frame:000000000000619D                 db  78h ; x
.eh_frame:000000000000619E                 db  10h
.eh_frame:000000000000619F                 db    1
.eh_frame:00000000000061A0                 db  1Bh
.eh_frame:00000000000061A1                 db  0Ch
.eh_frame:00000000000061A2                 db    7
.eh_frame:00000000000061A3                 db    8
.eh_frame:00000000000061A4                 db  90h
.eh_frame:00000000000061A5                 db    1
.eh_frame:00000000000061A6                 db    0
.eh_frame:00000000000061A7                 db    0
.eh_frame:00000000000061A8                 db  24h ; $
.eh_frame:00000000000061A9                 db    0
.eh_frame:00000000000061AA                 db    0
.eh_frame:00000000000061AB                 db    0
.eh_frame:00000000000061AC                 db  1Ch
.eh_frame:00000000000061AD                 db    0
.eh_frame:00000000000061AE                 db    0
.eh_frame:00000000000061AF                 db    0
.eh_frame:00000000000061B0                 db  20h
.eh_frame:00000000000061B1                 db 0B1h
.eh_frame:00000000000061B2                 db 0FFh
.eh_frame:00000000000061B3                 db 0FFh
.eh_frame:00000000000061B4                 db 0C0h
.eh_frame:00000000000061B5                 db    2
.eh_frame:00000000000061B6                 db    0
.eh_frame:00000000000061B7                 db    0
.eh_frame:00000000000061B8                 db    0
.eh_frame:00000000000061B9                 db  0Eh
.eh_frame:00000000000061BA                 db  10h
.eh_frame:00000000000061BB                 db  46h ; F
.eh_frame:00000000000061BC                 db  0Eh
.eh_frame:00000000000061BD                 db  18h
.eh_frame:00000000000061BE                 db  4Ah ; J
.eh_frame:00000000000061BF                 db  0Fh
.eh_frame:00000000000061C0                 db  0Bh
.eh_frame:00000000000061C1                 db  77h ; w
.eh_frame:00000000000061C2                 db    8
.eh_frame:00000000000061C3                 db  80h
.eh_frame:00000000000061C4                 db    0
.eh_frame:00000000000061C5                 db  3Fh ; ?
.eh_frame:00000000000061C6                 db  1Ah
.eh_frame:00000000000061C7                 db  3Bh ; ;
.eh_frame:00000000000061C8                 db  2Ah ; *
.eh_frame:00000000000061C9                 db  33h ; 3
.eh_frame:00000000000061CA                 db  24h ; $
.eh_frame:00000000000061CB                 db  22h ; "
.eh_frame:00000000000061CC                 db    0
.eh_frame:00000000000061CD                 db    0
.eh_frame:00000000000061CE                 db    0
.eh_frame:00000000000061CF                 db    0
.eh_frame:00000000000061D0                 db  14h
.eh_frame:00000000000061D1                 db    0
.eh_frame:00000000000061D2                 db    0
.eh_frame:00000000000061D3                 db    0
.eh_frame:00000000000061D4                 db  44h ; D
.eh_frame:00000000000061D5                 db    0
.eh_frame:00000000000061D6                 db    0
.eh_frame:00000000000061D7                 db    0
.eh_frame:00000000000061D8                 db 0B8h
.eh_frame:00000000000061D9                 db 0B3h
.eh_frame:00000000000061DA                 db 0FFh
.eh_frame:00000000000061DB                 db 0FFh
.eh_frame:00000000000061DC                 db    8
.eh_frame:00000000000061DD                 db    0
.eh_frame:00000000000061DE                 db    0
.eh_frame:00000000000061DF                 db    0
.eh_frame:00000000000061E0                 db    0
.eh_frame:00000000000061E1                 db    0
.eh_frame:00000000000061E2                 db    0
.eh_frame:00000000000061E3                 db    0
.eh_frame:00000000000061E4                 db    0
.eh_frame:00000000000061E5                 db    0
.eh_frame:00000000000061E6                 db    0
.eh_frame:00000000000061E7                 db    0
.eh_frame:00000000000061E8                 db  4Ch ; L
.eh_frame:00000000000061E9                 db    0
.eh_frame:00000000000061EA                 db    0
.eh_frame:00000000000061EB                 db    0
.eh_frame:00000000000061EC                 db  5Ch ; \
.eh_frame:00000000000061ED                 db    0
.eh_frame:00000000000061EE                 db    0
.eh_frame:00000000000061EF                 db    0
.eh_frame:00000000000061F0                 db  20h
.eh_frame:00000000000061F1                 db 0B6h
.eh_frame:00000000000061F2                 db 0FFh
.eh_frame:00000000000061F3                 db 0FFh
.eh_frame:00000000000061F4                 db 0EDh
.eh_frame:00000000000061F5                 db    2
.eh_frame:00000000000061F6                 db    0
.eh_frame:00000000000061F7                 db    0
.eh_frame:00000000000061F8                 db    0
.eh_frame:00000000000061F9                 db  42h ; B
.eh_frame:00000000000061FA                 db  0Eh
.eh_frame:00000000000061FB                 db  10h
.eh_frame:00000000000061FC                 db  8Fh
.eh_frame:00000000000061FD                 db    2
.eh_frame:00000000000061FE                 db  42h ; B
.eh_frame:00000000000061FF                 db  0Eh
.eh_frame:0000000000006200                 db  18h
.eh_frame:0000000000006201                 db  8Eh
.eh_frame:0000000000006202                 db    3
.eh_frame:0000000000006203                 db  47h ; G
.eh_frame:0000000000006204                 db  0Eh
.eh_frame:0000000000006205                 db  20h
.eh_frame:0000000000006206                 db  8Dh
.eh_frame:0000000000006207                 db    4
.eh_frame:0000000000006208                 db  42h ; B
.eh_frame:0000000000006209                 db  0Eh
.eh_frame:000000000000620A                 db  28h ; (
.eh_frame:000000000000620B                 db  8Ch
.eh_frame:000000000000620C                 db    5
.eh_frame:000000000000620D                 db  44h ; D
.eh_frame:000000000000620E                 db  0Eh
.eh_frame:000000000000620F                 db  30h ; 0
.eh_frame:0000000000006210                 db  86h
.eh_frame:0000000000006211                 db    6
.eh_frame:0000000000006212                 db  41h ; A
.eh_frame:0000000000006213                 db  0Eh
.eh_frame:0000000000006214                 db  38h ; 8
.eh_frame:0000000000006215                 db  83h
.eh_frame:0000000000006216                 db    7
.eh_frame:0000000000006217                 db  47h ; G
.eh_frame:0000000000006218                 db  0Eh
.eh_frame:0000000000006219                 db  80h
.eh_frame:000000000000621A                 db  81h
.eh_frame:000000000000621B                 db    4
.eh_frame:000000000000621C                 db    3
.eh_frame:000000000000621D                 db  73h ; s
.eh_frame:000000000000621E                 db    1
.eh_frame:000000000000621F                 db  0Ah
.eh_frame:0000000000006220                 db  0Eh
.eh_frame:0000000000006221                 db  38h ; 8
.eh_frame:0000000000006222                 db  41h ; A
.eh_frame:0000000000006223                 db  0Eh
.eh_frame:0000000000006224                 db  30h ; 0
.eh_frame:0000000000006225                 db  41h ; A
.eh_frame:0000000000006226                 db  0Eh
.eh_frame:0000000000006227                 db  28h ; (
.eh_frame:0000000000006228                 db  42h ; B
.eh_frame:0000000000006229                 db  0Eh
.eh_frame:000000000000622A                 db  20h
.eh_frame:000000000000622B                 db  42h ; B
.eh_frame:000000000000622C                 db  0Eh
.eh_frame:000000000000622D                 db  18h
.eh_frame:000000000000622E                 db  42h ; B
.eh_frame:000000000000622F                 db  0Eh
.eh_frame:0000000000006230                 db  10h
.eh_frame:0000000000006231                 db  42h ; B
.eh_frame:0000000000006232                 db  0Eh
.eh_frame:0000000000006233                 db    8
.eh_frame:0000000000006234                 db  41h ; A
.eh_frame:0000000000006235                 db  0Bh
.eh_frame:0000000000006236                 db    0
.eh_frame:0000000000006237                 db    0
.eh_frame:0000000000006238                 db  28h ; (
.eh_frame:0000000000006239                 db    0
.eh_frame:000000000000623A                 db    0
.eh_frame:000000000000623B                 db    0
.eh_frame:000000000000623C                 db 0ACh
.eh_frame:000000000000623D                 db    0
.eh_frame:000000000000623E                 db    0
.eh_frame:000000000000623F                 db    0
.eh_frame:0000000000006240                 db 0C0h
.eh_frame:0000000000006241                 db 0B8h
.eh_frame:0000000000006242                 db 0FFh
.eh_frame:0000000000006243                 db 0FFh
.eh_frame:0000000000006244                 db  42h ; B
.eh_frame:0000000000006245                 db    3
.eh_frame:0000000000006246                 db    0
.eh_frame:0000000000006247                 db    0
.eh_frame:0000000000006248                 db    0
.eh_frame:0000000000006249                 db  42h ; B
.eh_frame:000000000000624A                 db  0Eh
.eh_frame:000000000000624B                 db  10h
.eh_frame:000000000000624C                 db  8Dh
.eh_frame:000000000000624D                 db    2
.eh_frame:000000000000624E                 db  42h ; B
.eh_frame:000000000000624F                 db  0Eh
.eh_frame:0000000000006250                 db  18h
.eh_frame:0000000000006251                 db  8Ch
.eh_frame:0000000000006252                 db    3
.eh_frame:0000000000006253                 db  46h ; F
.eh_frame:0000000000006254                 db  0Eh
.eh_frame:0000000000006255                 db  20h
.eh_frame:0000000000006256                 db  86h
.eh_frame:0000000000006257                 db    4
.eh_frame:0000000000006258                 db  41h ; A
.eh_frame:0000000000006259                 db  0Eh
.eh_frame:000000000000625A                 db  28h ; (
.eh_frame:000000000000625B                 db  83h
.eh_frame:000000000000625C                 db    5
.eh_frame:000000000000625D                 db  49h ; I
.eh_frame:000000000000625E                 db  0Eh
.eh_frame:000000000000625F                 db 0B0h
.eh_frame:0000000000006260                 db    1
.eh_frame:0000000000006261                 db    0
.eh_frame:0000000000006262                 db    0
.eh_frame:0000000000006263                 db    0
.eh_frame:0000000000006264                 db  40h ; @
.eh_frame:0000000000006265                 db    0
.eh_frame:0000000000006266                 db    0
.eh_frame:0000000000006267                 db    0
.eh_frame:0000000000006268                 db 0D8h
.eh_frame:0000000000006269                 db    0
.eh_frame:000000000000626A                 db    0
.eh_frame:000000000000626B                 db    0
.eh_frame:000000000000626C                 db  34h ; 4
.eh_frame:000000000000626D                 db 0B3h
.eh_frame:000000000000626E                 db 0FFh
.eh_frame:000000000000626F                 db 0FFh
.eh_frame:0000000000006270                 db  51h ; Q
.eh_frame:0000000000006271                 db    1
.eh_frame:0000000000006272                 db    0
.eh_frame:0000000000006273                 db    0
.eh_frame:0000000000006274                 db    0
.eh_frame:0000000000006275                 db  42h ; B
.eh_frame:0000000000006276                 db  0Eh
.eh_frame:0000000000006277                 db  10h
.eh_frame:0000000000006278                 db  8Ch
.eh_frame:0000000000006279                 db    2
.eh_frame:000000000000627A                 db  44h ; D
.eh_frame:000000000000627B                 db  0Eh
.eh_frame:000000000000627C                 db  18h
.eh_frame:000000000000627D                 db  86h
.eh_frame:000000000000627E                 db    3
.eh_frame:000000000000627F                 db  41h ; A
.eh_frame:0000000000006280                 db  0Eh
.eh_frame:0000000000006281                 db  20h
.eh_frame:0000000000006282                 db  83h
.eh_frame:0000000000006283                 db    4
.eh_frame:0000000000006284                 db    2
.eh_frame:0000000000006285                 db  67h ; g
.eh_frame:0000000000006286                 db  0Eh
.eh_frame:0000000000006287                 db  28h ; (
.eh_frame:0000000000006288                 db  49h ; I
.eh_frame:0000000000006289                 db  0Eh
.eh_frame:000000000000628A                 db  30h ; 0
.eh_frame:000000000000628B                 db  4Fh ; O
.eh_frame:000000000000628C                 db  0Eh
.eh_frame:000000000000628D                 db  38h ; 8
.eh_frame:000000000000628E                 db  54h ; T
.eh_frame:000000000000628F                 db  0Eh
.eh_frame:0000000000006290                 db  40h ; @
.eh_frame:0000000000006291                 db  51h ; Q
.eh_frame:0000000000006292                 db  0Eh
.eh_frame:0000000000006293                 db  20h
.eh_frame:0000000000006294                 db    2
.eh_frame:0000000000006295                 db  5Eh ; ^
.eh_frame:0000000000006296                 db  0Ah
.eh_frame:0000000000006297                 db  0Eh
.eh_frame:0000000000006298                 db  18h
.eh_frame:0000000000006299                 db  41h ; A
.eh_frame:000000000000629A                 db  0Eh
.eh_frame:000000000000629B                 db  10h
.eh_frame:000000000000629C                 db  42h ; B
.eh_frame:000000000000629D                 db  0Eh
.eh_frame:000000000000629E                 db    8
.eh_frame:000000000000629F                 db  41h ; A
.eh_frame:00000000000062A0                 db  0Bh
.eh_frame:00000000000062A1                 db    0
.eh_frame:00000000000062A2                 db    0
.eh_frame:00000000000062A3                 db    0
.eh_frame:00000000000062A4                 db    0
.eh_frame:00000000000062A5                 db    0
.eh_frame:00000000000062A6                 db    0
.eh_frame:00000000000062A7                 db    0
.eh_frame:00000000000062A8                 db  10h
.eh_frame:00000000000062A9                 db    0
.eh_frame:00000000000062AA                 db    0
.eh_frame:00000000000062AB                 db    0
.eh_frame:00000000000062AC                 db  1Ch
.eh_frame:00000000000062AD                 db    1
.eh_frame:00000000000062AE                 db    0
.eh_frame:00000000000062AF                 db    0
.eh_frame:00000000000062B0                 db 0A0h
.eh_frame:00000000000062B1                 db 0BBh
.eh_frame:00000000000062B2                 db 0FFh
.eh_frame:00000000000062B3                 db 0FFh
.eh_frame:00000000000062B4                 db    8
.eh_frame:00000000000062B5                 db    0
.eh_frame:00000000000062B6                 db    0
.eh_frame:00000000000062B7                 db    0
.eh_frame:00000000000062B8                 db    0
.eh_frame:00000000000062B9                 db    0
.eh_frame:00000000000062BA                 db    0
.eh_frame:00000000000062BB                 db    0
.eh_frame:00000000000062BC                 db  10h
.eh_frame:00000000000062BD                 db    0
.eh_frame:00000000000062BE                 db    0
.eh_frame:00000000000062BF                 db    0
.eh_frame:00000000000062C0                 db  30h ; 0
.eh_frame:00000000000062C1                 db    1
.eh_frame:00000000000062C2                 db    0
.eh_frame:00000000000062C3                 db    0
.eh_frame:00000000000062C4                 db  9Ch
.eh_frame:00000000000062C5                 db 0BBh
.eh_frame:00000000000062C6                 db 0FFh
.eh_frame:00000000000062C7                 db 0FFh
.eh_frame:00000000000062C8                 db    8
.eh_frame:00000000000062C9                 db    0
.eh_frame:00000000000062CA                 db    0
.eh_frame:00000000000062CB                 db    0
.eh_frame:00000000000062CC                 db    0
.eh_frame:00000000000062CD                 db    0
.eh_frame:00000000000062CE                 db    0
.eh_frame:00000000000062CF                 db    0
.eh_frame:00000000000062D0                 db  2Ch ; ,
.eh_frame:00000000000062D1                 db    0
.eh_frame:00000000000062D2                 db    0
.eh_frame:00000000000062D3                 db    0
.eh_frame:00000000000062D4                 db  44h ; D
.eh_frame:00000000000062D5                 db    1
.eh_frame:00000000000062D6                 db    0
.eh_frame:00000000000062D7                 db    0
.eh_frame:00000000000062D8                 db  98h
.eh_frame:00000000000062D9                 db 0BBh
.eh_frame:00000000000062DA                 db 0FFh
.eh_frame:00000000000062DB                 db 0FFh
.eh_frame:00000000000062DC                 db 0A4h
.eh_frame:00000000000062DD                 db    0
.eh_frame:00000000000062DE                 db    0
.eh_frame:00000000000062DF                 db    0
.eh_frame:00000000000062E0                 db    0
.eh_frame:00000000000062E1                 db  41h ; A
.eh_frame:00000000000062E2                 db  0Eh
.eh_frame:00000000000062E3                 db  10h
.eh_frame:00000000000062E4                 db  86h
.eh_frame:00000000000062E5                 db    2
.eh_frame:00000000000062E6                 db  41h ; A
.eh_frame:00000000000062E7                 db  0Eh
.eh_frame:00000000000062E8                 db  18h
.eh_frame:00000000000062E9                 db  83h
.eh_frame:00000000000062EA                 db    3
.eh_frame:00000000000062EB                 db  44h ; D
.eh_frame:00000000000062EC                 db  0Eh
.eh_frame:00000000000062ED                 db  20h
.eh_frame:00000000000062EE                 db  7Ah ; z
.eh_frame:00000000000062EF                 db  0Ah
.eh_frame:00000000000062F0                 db  0Eh
.eh_frame:00000000000062F1                 db  18h
.eh_frame:00000000000062F2                 db  41h ; A
.eh_frame:00000000000062F3                 db  0Eh
.eh_frame:00000000000062F4                 db  10h
.eh_frame:00000000000062F5                 db  41h ; A
.eh_frame:00000000000062F6                 db  0Eh
.eh_frame:00000000000062F7                 db    8
.eh_frame:00000000000062F8                 db  41h ; A
.eh_frame:00000000000062F9                 db  0Bh
.eh_frame:00000000000062FA                 db    0
.eh_frame:00000000000062FB                 db    0
.eh_frame:00000000000062FC                 db    0
.eh_frame:00000000000062FD                 db    0
.eh_frame:00000000000062FE                 db    0
.eh_frame:00000000000062FF                 db    0
.eh_frame:0000000000006300                 db  10h
.eh_frame:0000000000006301                 db    0
.eh_frame:0000000000006302                 db    0
.eh_frame:0000000000006303                 db    0
.eh_frame:0000000000006304                 db  74h ; t
.eh_frame:0000000000006305                 db    1
.eh_frame:0000000000006306                 db    0
.eh_frame:0000000000006307                 db    0
.eh_frame:0000000000006308                 db  18h
.eh_frame:0000000000006309                 db 0BCh
.eh_frame:000000000000630A                 db 0FFh
.eh_frame:000000000000630B                 db 0FFh
.eh_frame:000000000000630C                 db    5
.eh_frame:000000000000630D                 db    0
.eh_frame:000000000000630E                 db    0
.eh_frame:000000000000630F                 db    0
.eh_frame:0000000000006310                 db    0
.eh_frame:0000000000006311                 db    0
.eh_frame:0000000000006312                 db    0
.eh_frame:0000000000006313                 db    0
.eh_frame:0000000000006314                 db  18h
.eh_frame:0000000000006315                 db    0
.eh_frame:0000000000006316                 db    0
.eh_frame:0000000000006317                 db    0
.eh_frame:0000000000006318                 db  88h
.eh_frame:0000000000006319                 db    1
.eh_frame:000000000000631A                 db    0
.eh_frame:000000000000631B                 db    0
.eh_frame:000000000000631C                 db  14h
.eh_frame:000000000000631D                 db 0BCh
.eh_frame:000000000000631E                 db 0FFh
.eh_frame:000000000000631F                 db 0FFh
.eh_frame:0000000000006320                 db  22h ; "
.eh_frame:0000000000006321                 db    0
.eh_frame:0000000000006322                 db    0
.eh_frame:0000000000006323                 db    0
.eh_frame:0000000000006324                 db    0
.eh_frame:0000000000006325                 db  46h ; F
.eh_frame:0000000000006326                 db  0Eh
.eh_frame:0000000000006327                 db  10h
.eh_frame:0000000000006328                 db  83h
.eh_frame:0000000000006329                 db    2
.eh_frame:000000000000632A                 db  4Eh ; N
.eh_frame:000000000000632B                 db 0C3h
.eh_frame:000000000000632C                 db  0Eh
.eh_frame:000000000000632D                 db    8
.eh_frame:000000000000632E                 db    0
.eh_frame:000000000000632F                 db    0
.eh_frame:0000000000006330                 db  14h
.eh_frame:0000000000006331                 db    0
.eh_frame:0000000000006332                 db    0
.eh_frame:0000000000006333                 db    0
.eh_frame:0000000000006334                 db 0A4h
.eh_frame:0000000000006335                 db    1
.eh_frame:0000000000006336                 db    0
.eh_frame:0000000000006337                 db    0
.eh_frame:0000000000006338                 db  28h ; (
.eh_frame:0000000000006339                 db 0BCh
.eh_frame:000000000000633A                 db 0FFh
.eh_frame:000000000000633B                 db 0FFh
.eh_frame:000000000000633C                 db  42h ; B
.eh_frame:000000000000633D                 db    0
.eh_frame:000000000000633E                 db    0
.eh_frame:000000000000633F                 db    0
.eh_frame:0000000000006340                 db    0
.eh_frame:0000000000006341                 db    0
.eh_frame:0000000000006342                 db    0
.eh_frame:0000000000006343                 db    0
.eh_frame:0000000000006344                 db    0
.eh_frame:0000000000006345                 db    0
.eh_frame:0000000000006346                 db    0
.eh_frame:0000000000006347                 db    0
.eh_frame:0000000000006348                 db  38h ; 8
.eh_frame:0000000000006349                 db    0
.eh_frame:000000000000634A                 db    0
.eh_frame:000000000000634B                 db    0
.eh_frame:000000000000634C                 db 0BCh
.eh_frame:000000000000634D                 db    1
.eh_frame:000000000000634E                 db    0
.eh_frame:000000000000634F                 db    0
.eh_frame:0000000000006350                 db  60h ; `
.eh_frame:0000000000006351                 db 0BCh
.eh_frame:0000000000006352                 db 0FFh
.eh_frame:0000000000006353                 db 0FFh
.eh_frame:0000000000006354                 db  3Fh ; ?
.eh_frame:0000000000006355                 db    1
.eh_frame:0000000000006356                 db    0
.eh_frame:0000000000006357                 db    0
.eh_frame:0000000000006358                 db    0
.eh_frame:0000000000006359                 db  42h ; B
.eh_frame:000000000000635A                 db  0Eh
.eh_frame:000000000000635B                 db  10h
.eh_frame:000000000000635C                 db  8Dh
.eh_frame:000000000000635D                 db    2
.eh_frame:000000000000635E                 db  42h ; B
.eh_frame:000000000000635F                 db  0Eh
.eh_frame:0000000000006360                 db  18h
.eh_frame:0000000000006361                 db  8Ch
.eh_frame:0000000000006362                 db    3
.eh_frame:0000000000006363                 db  44h ; D
.eh_frame:0000000000006364                 db  0Eh
.eh_frame:0000000000006365                 db  20h
.eh_frame:0000000000006366                 db  86h
.eh_frame:0000000000006367                 db    4
.eh_frame:0000000000006368                 db  41h ; A
.eh_frame:0000000000006369                 db  0Eh
.eh_frame:000000000000636A                 db  28h ; (
.eh_frame:000000000000636B                 db  83h
.eh_frame:000000000000636C                 db    5
.eh_frame:000000000000636D                 db  4Dh ; M
.eh_frame:000000000000636E                 db  0Eh
.eh_frame:000000000000636F                 db  90h
.eh_frame:0000000000006370                 db    2
.eh_frame:0000000000006371                 db    2
.eh_frame:0000000000006372                 db  8Eh
.eh_frame:0000000000006373                 db  0Ah
.eh_frame:0000000000006374                 db  0Eh
.eh_frame:0000000000006375                 db  28h ; (
.eh_frame:0000000000006376                 db  41h ; A
.eh_frame:0000000000006377                 db  0Eh
.eh_frame:0000000000006378                 db  20h
.eh_frame:0000000000006379                 db  41h ; A
.eh_frame:000000000000637A                 db  0Eh
.eh_frame:000000000000637B                 db  18h
.eh_frame:000000000000637C                 db  42h ; B
.eh_frame:000000000000637D                 db  0Eh
.eh_frame:000000000000637E                 db  10h
.eh_frame:000000000000637F                 db  42h ; B
.eh_frame:0000000000006380                 db  0Eh
.eh_frame:0000000000006381                 db    8
.eh_frame:0000000000006382                 db  46h ; F
.eh_frame:0000000000006383                 db  0Bh
.eh_frame:0000000000006384                 db  48h ; H
.eh_frame:0000000000006385                 db    0
.eh_frame:0000000000006386                 db    0
.eh_frame:0000000000006387                 db    0
.eh_frame:0000000000006388                 db 0F8h
.eh_frame:0000000000006389                 db    1
.eh_frame:000000000000638A                 db    0
.eh_frame:000000000000638B                 db    0
.eh_frame:000000000000638C                 db  64h ; d
.eh_frame:000000000000638D                 db 0BDh
.eh_frame:000000000000638E                 db 0FFh
.eh_frame:000000000000638F                 db 0FFh
.eh_frame:0000000000006390                 db  3Bh ; ;
.eh_frame:0000000000006391                 db    1
.eh_frame:0000000000006392                 db    0
.eh_frame:0000000000006393                 db    0
.eh_frame:0000000000006394                 db    0
.eh_frame:0000000000006395                 db  42h ; B
.eh_frame:0000000000006396                 db  0Eh
.eh_frame:0000000000006397                 db  10h
.eh_frame:0000000000006398                 db  8Eh
.eh_frame:0000000000006399                 db    2
.eh_frame:000000000000639A                 db  42h ; B
.eh_frame:000000000000639B                 db  0Eh
.eh_frame:000000000000639C                 db  18h
.eh_frame:000000000000639D                 db  8Dh
.eh_frame:000000000000639E                 db    3
.eh_frame:000000000000639F                 db  45h ; E
.eh_frame:00000000000063A0                 db  0Eh
.eh_frame:00000000000063A1                 db  20h
.eh_frame:00000000000063A2                 db  8Ch
.eh_frame:00000000000063A3                 db    4
.eh_frame:00000000000063A4                 db  41h ; A
.eh_frame:00000000000063A5                 db  0Eh
.eh_frame:00000000000063A6                 db  28h ; (
.eh_frame:00000000000063A7                 db  86h
.eh_frame:00000000000063A8                 db    5
.eh_frame:00000000000063A9                 db  44h ; D
.eh_frame:00000000000063AA                 db  0Eh
.eh_frame:00000000000063AB                 db  30h ; 0
.eh_frame:00000000000063AC                 db  83h
.eh_frame:00000000000063AD                 db    6
.eh_frame:00000000000063AE                 db  4Ah ; J
.eh_frame:00000000000063AF                 db  0Eh
.eh_frame:00000000000063B0                 db  80h
.eh_frame:00000000000063B1                 db    2
.eh_frame:00000000000063B2                 db    3
.eh_frame:00000000000063B3                 db  0Dh
.eh_frame:00000000000063B4                 db    1
.eh_frame:00000000000063B5                 db  0Ah
.eh_frame:00000000000063B6                 db  0Eh
.eh_frame:00000000000063B7                 db  30h ; 0
.eh_frame:00000000000063B8                 db  41h ; A
.eh_frame:00000000000063B9                 db  0Eh
.eh_frame:00000000000063BA                 db  28h ; (
.eh_frame:00000000000063BB                 db  41h ; A
.eh_frame:00000000000063BC                 db  0Eh
.eh_frame:00000000000063BD                 db  20h
.eh_frame:00000000000063BE                 db  42h ; B
.eh_frame:00000000000063BF                 db  0Eh
.eh_frame:00000000000063C0                 db  18h
.eh_frame:00000000000063C1                 db  42h ; B
.eh_frame:00000000000063C2                 db  0Eh
.eh_frame:00000000000063C3                 db  10h
.eh_frame:00000000000063C4                 db  42h ; B
.eh_frame:00000000000063C5                 db  0Eh
.eh_frame:00000000000063C6                 db    8
.eh_frame:00000000000063C7                 db  43h ; C
.eh_frame:00000000000063C8                 db  0Bh
.eh_frame:00000000000063C9                 db    0
.eh_frame:00000000000063CA                 db    0
.eh_frame:00000000000063CB                 db    0
.eh_frame:00000000000063CC                 db    0
.eh_frame:00000000000063CD                 db    0
.eh_frame:00000000000063CE                 db    0
.eh_frame:00000000000063CF                 db    0
.eh_frame:00000000000063D0                 db  1Ch
.eh_frame:00000000000063D1                 db    0
.eh_frame:00000000000063D2                 db    0
.eh_frame:00000000000063D3                 db    0
.eh_frame:00000000000063D4                 db  44h ; D
.eh_frame:00000000000063D5                 db    2
.eh_frame:00000000000063D6                 db    0
.eh_frame:00000000000063D7                 db    0
.eh_frame:00000000000063D8                 db  58h ; X
.eh_frame:00000000000063D9                 db 0BEh
.eh_frame:00000000000063DA                 db 0FFh
.eh_frame:00000000000063DB                 db 0FFh
.eh_frame:00000000000063DC                 db  9Fh
.eh_frame:00000000000063DD                 db    0
.eh_frame:00000000000063DE                 db    0
.eh_frame:00000000000063DF                 db    0
.eh_frame:00000000000063E0                 db    0
.eh_frame:00000000000063E1                 db  44h ; D
.eh_frame:00000000000063E2                 db  0Eh
.eh_frame:00000000000063E3                 db  10h
.eh_frame:00000000000063E4                 db  83h
.eh_frame:00000000000063E5                 db    2
.eh_frame:00000000000063E6                 db    2
.eh_frame:00000000000063E7                 db  78h ; x
.eh_frame:00000000000063E8                 db  0Ah
.eh_frame:00000000000063E9                 db  0Eh
.eh_frame:00000000000063EA                 db    8
.eh_frame:00000000000063EB                 db  41h ; A
.eh_frame:00000000000063EC                 db  0Bh
.eh_frame:00000000000063ED                 db    0
.eh_frame:00000000000063EE                 db    0
.eh_frame:00000000000063EF                 db    0
.eh_frame:00000000000063F0                 db  40h ; @
.eh_frame:00000000000063F1                 db    0
.eh_frame:00000000000063F2                 db    0
.eh_frame:00000000000063F3                 db    0
.eh_frame:00000000000063F4                 db  64h ; d
.eh_frame:00000000000063F5                 db    2
.eh_frame:00000000000063F6                 db    0
.eh_frame:00000000000063F7                 db    0
.eh_frame:00000000000063F8                 db 0D8h
.eh_frame:00000000000063F9                 db 0BEh
.eh_frame:00000000000063FA                 db 0FFh
.eh_frame:00000000000063FB                 db 0FFh
.eh_frame:00000000000063FC                 db 0E7h
.eh_frame:00000000000063FD                 db    0
.eh_frame:00000000000063FE                 db    0
.eh_frame:00000000000063FF                 db    0
.eh_frame:0000000000006400                 db    0
.eh_frame:0000000000006401                 db  41h ; A
.eh_frame:0000000000006402                 db  0Eh
.eh_frame:0000000000006403                 db  10h
.eh_frame:0000000000006404                 db  86h
.eh_frame:0000000000006405                 db    2
.eh_frame:0000000000006406                 db  41h ; A
.eh_frame:0000000000006407                 db  0Eh
.eh_frame:0000000000006408                 db  18h
.eh_frame:0000000000006409                 db  83h
.eh_frame:000000000000640A                 db    3
.eh_frame:000000000000640B                 db  49h ; I
.eh_frame:000000000000640C                 db  0Eh
.eh_frame:000000000000640D                 db  20h
.eh_frame:000000000000640E                 db  6Eh ; n
.eh_frame:000000000000640F                 db  0Ah
.eh_frame:0000000000006410                 db  0Eh
.eh_frame:0000000000006411                 db  18h
.eh_frame:0000000000006412                 db  41h ; A
.eh_frame:0000000000006413                 db  0Eh
.eh_frame:0000000000006414                 db  10h
.eh_frame:0000000000006415                 db  41h ; A
.eh_frame:0000000000006416                 db  0Eh
.eh_frame:0000000000006417                 db    8
.eh_frame:0000000000006418                 db  45h ; E
.eh_frame:0000000000006419                 db  0Bh
.eh_frame:000000000000641A                 db    2
.eh_frame:000000000000641B                 db  4Ah ; J
.eh_frame:000000000000641C                 db  0Ah
.eh_frame:000000000000641D                 db  0Eh
.eh_frame:000000000000641E                 db  18h
.eh_frame:000000000000641F                 db  41h ; A
.eh_frame:0000000000006420                 db  0Eh
.eh_frame:0000000000006421                 db  10h
.eh_frame:0000000000006422                 db  41h ; A
.eh_frame:0000000000006423                 db  0Eh
.eh_frame:0000000000006424                 db    8
.eh_frame:0000000000006425                 db  44h ; D
.eh_frame:0000000000006426                 db  0Bh
.eh_frame:0000000000006427                 db    2
.eh_frame:0000000000006428                 db  54h ; T
.eh_frame:0000000000006429                 db  0Eh
.eh_frame:000000000000642A                 db  18h
.eh_frame:000000000000642B                 db  41h ; A
.eh_frame:000000000000642C                 db  0Eh
.eh_frame:000000000000642D                 db  10h
.eh_frame:000000000000642E                 db  41h ; A
.eh_frame:000000000000642F                 db  0Eh
.eh_frame:0000000000006430                 db    8
.eh_frame:0000000000006431                 db    0
.eh_frame:0000000000006432                 db    0
.eh_frame:0000000000006433                 db    0
.eh_frame:0000000000006434                 db  74h ; t
.eh_frame:0000000000006435                 db    0
.eh_frame:0000000000006436                 db    0
.eh_frame:0000000000006437                 db    0
.eh_frame:0000000000006438                 db 0A8h
.eh_frame:0000000000006439                 db    2
.eh_frame:000000000000643A                 db    0
.eh_frame:000000000000643B                 db    0
.eh_frame:000000000000643C                 db  84h
.eh_frame:000000000000643D                 db 0BFh
.eh_frame:000000000000643E                 db 0FFh
.eh_frame:000000000000643F                 db 0FFh
.eh_frame:0000000000006440                 db  34h ; 4
.eh_frame:0000000000006441                 db  12h
.eh_frame:0000000000006442                 db    0
.eh_frame:0000000000006443                 db    0
.eh_frame:0000000000006444                 db    0
.eh_frame:0000000000006445                 db  42h ; B
.eh_frame:0000000000006446                 db  0Eh
.eh_frame:0000000000006447                 db  10h
.eh_frame:0000000000006448                 db  8Fh
.eh_frame:0000000000006449                 db    2
.eh_frame:000000000000644A                 db  42h ; B
.eh_frame:000000000000644B                 db  0Eh
.eh_frame:000000000000644C                 db  18h
.eh_frame:000000000000644D                 db  8Eh
.eh_frame:000000000000644E                 db    3
.eh_frame:000000000000644F                 db  45h ; E
.eh_frame:0000000000006450                 db  0Eh
.eh_frame:0000000000006451                 db  20h
.eh_frame:0000000000006452                 db  8Dh
.eh_frame:0000000000006453                 db    4
.eh_frame:0000000000006454                 db  42h ; B
.eh_frame:0000000000006455                 db  0Eh
.eh_frame:0000000000006456                 db  28h ; (
.eh_frame:0000000000006457                 db  8Ch
.eh_frame:0000000000006458                 db    5
.eh_frame:0000000000006459                 db  44h ; D
.eh_frame:000000000000645A                 db  0Eh
.eh_frame:000000000000645B                 db  30h ; 0
.eh_frame:000000000000645C                 db  86h
.eh_frame:000000000000645D                 db    6
.eh_frame:000000000000645E                 db  41h ; A
.eh_frame:000000000000645F                 db  0Eh
.eh_frame:0000000000006460                 db  38h ; 8
.eh_frame:0000000000006461                 db  83h
.eh_frame:0000000000006462                 db    7
.eh_frame:0000000000006463                 db  53h ; S
.eh_frame:0000000000006464                 db  0Eh
.eh_frame:0000000000006465                 db 0F0h
.eh_frame:0000000000006466                 db    1
.eh_frame:0000000000006467                 db    3
.eh_frame:0000000000006468                 db  81h
.eh_frame:0000000000006469                 db  0Bh
.eh_frame:000000000000646A                 db  0Eh
.eh_frame:000000000000646B                 db 0F8h
.eh_frame:000000000000646C                 db    1
.eh_frame:000000000000646D                 db  4Ah ; J
.eh_frame:000000000000646E                 db  0Eh
.eh_frame:000000000000646F                 db  80h
.eh_frame:0000000000006470                 db    2
.eh_frame:0000000000006471                 db  44h ; D
.eh_frame:0000000000006472                 db  0Eh
.eh_frame:0000000000006473                 db  88h
.eh_frame:0000000000006474                 db    2
.eh_frame:0000000000006475                 db  45h ; E
.eh_frame:0000000000006476                 db  0Eh
.eh_frame:0000000000006477                 db  90h
.eh_frame:0000000000006478                 db    2
.eh_frame:0000000000006479                 db  5Fh ; _
.eh_frame:000000000000647A                 db  0Eh
.eh_frame:000000000000647B                 db 0F0h
.eh_frame:000000000000647C                 db    1
.eh_frame:000000000000647D                 db  64h ; d
.eh_frame:000000000000647E                 db  0Ah
.eh_frame:000000000000647F                 db  0Eh
.eh_frame:0000000000006480                 db  38h ; 8
.eh_frame:0000000000006481                 db  41h ; A
.eh_frame:0000000000006482                 db  0Eh
.eh_frame:0000000000006483                 db  30h ; 0
.eh_frame:0000000000006484                 db  41h ; A
.eh_frame:0000000000006485                 db  0Eh
.eh_frame:0000000000006486                 db  28h ; (
.eh_frame:0000000000006487                 db  42h ; B
.eh_frame:0000000000006488                 db  0Eh
.eh_frame:0000000000006489                 db  20h
.eh_frame:000000000000648A                 db  42h ; B
.eh_frame:000000000000648B                 db  0Eh
.eh_frame:000000000000648C                 db  18h
.eh_frame:000000000000648D                 db  42h ; B
.eh_frame:000000000000648E                 db  0Eh
.eh_frame:000000000000648F                 db  10h
.eh_frame:0000000000006490                 db  42h ; B
.eh_frame:0000000000006491                 db  0Eh
.eh_frame:0000000000006492                 db    8
.eh_frame:0000000000006493                 db  44h ; D
.eh_frame:0000000000006494                 db  0Bh
.eh_frame:0000000000006495                 db    3
.eh_frame:0000000000006496                 db  99h
.eh_frame:0000000000006497                 db    5
.eh_frame:0000000000006498                 db  0Eh
.eh_frame:0000000000006499                 db 0F8h
.eh_frame:000000000000649A                 db    1
.eh_frame:000000000000649B                 db  4Dh ; M
.eh_frame:000000000000649C                 db  0Eh
.eh_frame:000000000000649D                 db  80h
.eh_frame:000000000000649E                 db    2
.eh_frame:000000000000649F                 db  44h ; D
.eh_frame:00000000000064A0                 db  0Eh
.eh_frame:00000000000064A1                 db  88h
.eh_frame:00000000000064A2                 db    2
.eh_frame:00000000000064A3                 db  47h ; G
.eh_frame:00000000000064A4                 db  0Eh
.eh_frame:00000000000064A5                 db  90h
.eh_frame:00000000000064A6                 db    2
.eh_frame:00000000000064A7                 db  5Bh ; [
.eh_frame:00000000000064A8                 db  0Eh
.eh_frame:00000000000064A9                 db 0F0h
.eh_frame:00000000000064AA                 db    1
.eh_frame:00000000000064AB                 db    0
.eh_frame:00000000000064AC                 db  68h ; h
.eh_frame:00000000000064AD                 db    0
.eh_frame:00000000000064AE                 db    0
.eh_frame:00000000000064AF                 db    0
.eh_frame:00000000000064B0                 db  20h
.eh_frame:00000000000064B1                 db    3
.eh_frame:00000000000064B2                 db    0
.eh_frame:00000000000064B3                 db    0
.eh_frame:00000000000064B4                 db  4Ch ; L
.eh_frame:00000000000064B5                 db 0D1h
.eh_frame:00000000000064B6                 db 0FFh
.eh_frame:00000000000064B7                 db 0FFh
.eh_frame:00000000000064B8                 db 0ABh
.eh_frame:00000000000064B9                 db    1
.eh_frame:00000000000064BA                 db    0
.eh_frame:00000000000064BB                 db    0
.eh_frame:00000000000064BC                 db    0
.eh_frame:00000000000064BD                 db  42h ; B
.eh_frame:00000000000064BE                 db  0Eh
.eh_frame:00000000000064BF                 db  10h
.eh_frame:00000000000064C0                 db  8Fh
.eh_frame:00000000000064C1                 db    2
.eh_frame:00000000000064C2                 db  42h ; B
.eh_frame:00000000000064C3                 db  0Eh
.eh_frame:00000000000064C4                 db  18h
.eh_frame:00000000000064C5                 db  8Eh
.eh_frame:00000000000064C6                 db    3
.eh_frame:00000000000064C7                 db  45h ; E
.eh_frame:00000000000064C8                 db  0Eh
.eh_frame:00000000000064C9                 db  20h
.eh_frame:00000000000064CA                 db  8Dh
.eh_frame:00000000000064CB                 db    4
.eh_frame:00000000000064CC                 db  42h ; B
.eh_frame:00000000000064CD                 db  0Eh
.eh_frame:00000000000064CE                 db  28h ; (
.eh_frame:00000000000064CF                 db  8Ch
.eh_frame:00000000000064D0                 db    5
.eh_frame:00000000000064D1                 db  44h ; D
.eh_frame:00000000000064D2                 db  0Eh
.eh_frame:00000000000064D3                 db  30h ; 0
.eh_frame:00000000000064D4                 db  86h
.eh_frame:00000000000064D5                 db    6
.eh_frame:00000000000064D6                 db  41h ; A
.eh_frame:00000000000064D7                 db  0Eh
.eh_frame:00000000000064D8                 db  38h ; 8
.eh_frame:00000000000064D9                 db  83h
.eh_frame:00000000000064DA                 db    7
.eh_frame:00000000000064DB                 db  47h ; G
.eh_frame:00000000000064DC                 db  0Eh
.eh_frame:00000000000064DD                 db  60h ; `
.eh_frame:00000000000064DE                 db    2
.eh_frame:00000000000064DF                 db  99h
.eh_frame:00000000000064E0                 db  0Eh
.eh_frame:00000000000064E1                 db  68h ; h
.eh_frame:00000000000064E2                 db  5Fh ; _
.eh_frame:00000000000064E3                 db  0Eh
.eh_frame:00000000000064E4                 db  70h ; p
.eh_frame:00000000000064E5                 db  46h ; F
.eh_frame:00000000000064E6                 db  0Eh
.eh_frame:00000000000064E7                 db  78h ; x
.eh_frame:00000000000064E8                 db  42h ; B
.eh_frame:00000000000064E9                 db  0Eh
.eh_frame:00000000000064EA                 db  80h
.eh_frame:00000000000064EB                 db    1
.eh_frame:00000000000064EC                 db  59h ; Y
.eh_frame:00000000000064ED                 db  0Eh
.eh_frame:00000000000064EE                 db  60h ; `
.eh_frame:00000000000064EF                 db    2
.eh_frame:00000000000064F0                 db  40h ; @
.eh_frame:00000000000064F1                 db  0Eh
.eh_frame:00000000000064F2                 db  68h ; h
.eh_frame:00000000000064F3                 db  4Bh ; K
.eh_frame:00000000000064F4                 db  0Eh
.eh_frame:00000000000064F5                 db  70h ; p
.eh_frame:00000000000064F6                 db  43h ; C
.eh_frame:00000000000064F7                 db  0Eh
.eh_frame:00000000000064F8                 db  78h ; x
.eh_frame:00000000000064F9                 db  45h ; E
.eh_frame:00000000000064FA                 db  0Eh
.eh_frame:00000000000064FB                 db  80h
.eh_frame:00000000000064FC                 db    1
.eh_frame:00000000000064FD                 db  5Eh ; ^
.eh_frame:00000000000064FE                 db  0Eh
.eh_frame:00000000000064FF                 db  60h ; `
.eh_frame:0000000000006500                 db  4Ch ; L
.eh_frame:0000000000006501                 db  0Ah
.eh_frame:0000000000006502                 db  0Eh
.eh_frame:0000000000006503                 db  38h ; 8
.eh_frame:0000000000006504                 db  44h ; D
.eh_frame:0000000000006505                 db  0Eh
.eh_frame:0000000000006506                 db  30h ; 0
.eh_frame:0000000000006507                 db  41h ; A
.eh_frame:0000000000006508                 db  0Eh
.eh_frame:0000000000006509                 db  28h ; (
.eh_frame:000000000000650A                 db  42h ; B
.eh_frame:000000000000650B                 db  0Eh
.eh_frame:000000000000650C                 db  20h
.eh_frame:000000000000650D                 db  42h ; B
.eh_frame:000000000000650E                 db  0Eh
.eh_frame:000000000000650F                 db  18h
.eh_frame:0000000000006510                 db  42h ; B
.eh_frame:0000000000006511                 db  0Eh
.eh_frame:0000000000006512                 db  10h
.eh_frame:0000000000006513                 db  42h ; B
.eh_frame:0000000000006514                 db  0Eh
.eh_frame:0000000000006515                 db    8
.eh_frame:0000000000006516                 db  46h ; F
.eh_frame:0000000000006517                 db  0Bh
.eh_frame:0000000000006518                 db  28h ; (
.eh_frame:0000000000006519                 db    0
.eh_frame:000000000000651A                 db    0
.eh_frame:000000000000651B                 db    0
.eh_frame:000000000000651C                 db  8Ch
.eh_frame:000000000000651D                 db    3
.eh_frame:000000000000651E                 db    0
.eh_frame:000000000000651F                 db    0
.eh_frame:0000000000006520                 db  90h
.eh_frame:0000000000006521                 db 0D2h
.eh_frame:0000000000006522                 db 0FFh
.eh_frame:0000000000006523                 db 0FFh
.eh_frame:0000000000006524                 db  36h ; 6
.eh_frame:0000000000006525                 db    0
.eh_frame:0000000000006526                 db    0
.eh_frame:0000000000006527                 db    0
.eh_frame:0000000000006528                 db    0
.eh_frame:0000000000006529                 db  42h ; B
.eh_frame:000000000000652A                 db  0Eh
.eh_frame:000000000000652B                 db  10h
.eh_frame:000000000000652C                 db  8Ch
.eh_frame:000000000000652D                 db    2
.eh_frame:000000000000652E                 db  41h ; A
.eh_frame:000000000000652F                 db  0Eh
.eh_frame:0000000000006530                 db  18h
.eh_frame:0000000000006531                 db  86h
.eh_frame:0000000000006532                 db    3
.eh_frame:0000000000006533                 db  41h ; A
.eh_frame:0000000000006534                 db  0Eh
.eh_frame:0000000000006535                 db  20h
.eh_frame:0000000000006536                 db  83h
.eh_frame:0000000000006537                 db    4
.eh_frame:0000000000006538                 db  6Eh ; n
.eh_frame:0000000000006539                 db  0Eh
.eh_frame:000000000000653A                 db  18h
.eh_frame:000000000000653B                 db  41h ; A
.eh_frame:000000000000653C                 db  0Eh
.eh_frame:000000000000653D                 db  10h
.eh_frame:000000000000653E                 db  42h ; B
.eh_frame:000000000000653F                 db  0Eh
.eh_frame:0000000000006540                 db    8
.eh_frame:0000000000006541                 db    0
.eh_frame:0000000000006542                 db    0
.eh_frame:0000000000006543                 db    0
.eh_frame:0000000000006544                 db  10h
.eh_frame:0000000000006545                 db    0
.eh_frame:0000000000006546                 db    0
.eh_frame:0000000000006547                 db    0
.eh_frame:0000000000006548                 db 0B8h
.eh_frame:0000000000006549                 db    3
.eh_frame:000000000000654A                 db    0
.eh_frame:000000000000654B                 db    0
.eh_frame:000000000000654C                 db 0A4h
.eh_frame:000000000000654D                 db 0D2h
.eh_frame:000000000000654E                 db 0FFh
.eh_frame:000000000000654F                 db 0FFh
.eh_frame:0000000000006550                 db  11h
.eh_frame:0000000000006551                 db    0
.eh_frame:0000000000006552                 db    0
.eh_frame:0000000000006553                 db    0
.eh_frame:0000000000006554                 db    0
.eh_frame:0000000000006555                 db    0
.eh_frame:0000000000006556                 db    0
.eh_frame:0000000000006557                 db    0
.eh_frame:0000000000006558                 db  10h
.eh_frame:0000000000006559                 db    0
.eh_frame:000000000000655A                 db    0
.eh_frame:000000000000655B                 db    0
.eh_frame:000000000000655C                 db 0CCh
.eh_frame:000000000000655D                 db    3
.eh_frame:000000000000655E                 db    0
.eh_frame:000000000000655F                 db    0
.eh_frame:0000000000006560                 db 0B0h
.eh_frame:0000000000006561                 db 0D2h
.eh_frame:0000000000006562                 db 0FFh
.eh_frame:0000000000006563                 db 0FFh
.eh_frame:0000000000006564                 db  11h
.eh_frame:0000000000006565                 db    0
.eh_frame:0000000000006566                 db    0
.eh_frame:0000000000006567                 db    0
.eh_frame:0000000000006568                 db    0
.eh_frame:0000000000006569                 db    0
.eh_frame:000000000000656A                 db    0
.eh_frame:000000000000656B                 db    0
.eh_frame:000000000000656C                 db  10h
.eh_frame:000000000000656D                 db    0
.eh_frame:000000000000656E                 db    0
.eh_frame:000000000000656F                 db    0
.eh_frame:0000000000006570                 db 0E0h
.eh_frame:0000000000006571                 db    3
.eh_frame:0000000000006572                 db    0
.eh_frame:0000000000006573                 db    0
.eh_frame:0000000000006574                 db 0BCh
.eh_frame:0000000000006575                 db 0D2h
.eh_frame:0000000000006576                 db 0FFh
.eh_frame:0000000000006577                 db 0FFh
.eh_frame:0000000000006578                 db  35h ; 5
.eh_frame:0000000000006579                 db    0
.eh_frame:000000000000657A                 db    0
.eh_frame:000000000000657B                 db    0
.eh_frame:000000000000657C                 db    0
.eh_frame:000000000000657D                 db    0
.eh_frame:000000000000657E                 db    0
.eh_frame:000000000000657F                 db    0
.eh_frame:0000000000006580                 db  10h
.eh_frame:0000000000006581                 db    0
.eh_frame:0000000000006582                 db    0
.eh_frame:0000000000006583                 db    0
.eh_frame:0000000000006584                 db 0F4h
.eh_frame:0000000000006585                 db    3
.eh_frame:0000000000006586                 db    0
.eh_frame:0000000000006587                 db    0
.eh_frame:0000000000006588                 db 0E8h
.eh_frame:0000000000006589                 db 0D2h
.eh_frame:000000000000658A                 db 0FFh
.eh_frame:000000000000658B                 db 0FFh
.eh_frame:000000000000658C                 db  15h
.eh_frame:000000000000658D                 db    0
.eh_frame:000000000000658E                 db    0
.eh_frame:000000000000658F                 db    0
.eh_frame:0000000000006590                 db    0
.eh_frame:0000000000006591                 db    0
.eh_frame:0000000000006592                 db    0
.eh_frame:0000000000006593                 db    0
.eh_frame:0000000000006594                 db  10h
.eh_frame:0000000000006595                 db    0
.eh_frame:0000000000006596                 db    0
.eh_frame:0000000000006597                 db    0
.eh_frame:0000000000006598                 db    8
.eh_frame:0000000000006599                 db    4
.eh_frame:000000000000659A                 db    0
.eh_frame:000000000000659B                 db    0
.eh_frame:000000000000659C                 db 0F4h
.eh_frame:000000000000659D                 db 0D2h
.eh_frame:000000000000659E                 db 0FFh
.eh_frame:000000000000659F                 db 0FFh
.eh_frame:00000000000065A0                 db  30h ; 0
.eh_frame:00000000000065A1                 db    0
.eh_frame:00000000000065A2                 db    0
.eh_frame:00000000000065A3                 db    0
.eh_frame:00000000000065A4                 db    0
.eh_frame:00000000000065A5                 db  6Bh ; k
.eh_frame:00000000000065A6                 db  0Eh
.eh_frame:00000000000065A7                 db  10h
.eh_frame:00000000000065A8                 db  50h ; P
.eh_frame:00000000000065A9                 db    0
.eh_frame:00000000000065AA                 db    0
.eh_frame:00000000000065AB                 db    0
.eh_frame:00000000000065AC                 db  1Ch
.eh_frame:00000000000065AD                 db    4
.eh_frame:00000000000065AE                 db    0
.eh_frame:00000000000065AF                 db    0
.eh_frame:00000000000065B0                 db  10h
.eh_frame:00000000000065B1                 db 0D3h
.eh_frame:00000000000065B2                 db 0FFh
.eh_frame:00000000000065B3                 db 0FFh
.eh_frame:00000000000065B4                 db  74h ; t
.eh_frame:00000000000065B5                 db    0
.eh_frame:00000000000065B6                 db    0
.eh_frame:00000000000065B7                 db    0
.eh_frame:00000000000065B8                 db    0
.eh_frame:00000000000065B9                 db  42h ; B
.eh_frame:00000000000065BA                 db  0Eh
.eh_frame:00000000000065BB                 db  10h
.eh_frame:00000000000065BC                 db  8Fh
.eh_frame:00000000000065BD                 db    2
.eh_frame:00000000000065BE                 db  42h ; B
.eh_frame:00000000000065BF                 db  0Eh
.eh_frame:00000000000065C0                 db  18h
.eh_frame:00000000000065C1                 db  8Eh
.eh_frame:00000000000065C2                 db    3
.eh_frame:00000000000065C3                 db  49h ; I
.eh_frame:00000000000065C4                 db  0Eh
.eh_frame:00000000000065C5                 db  20h
.eh_frame:00000000000065C6                 db  8Dh
.eh_frame:00000000000065C7                 db    4
.eh_frame:00000000000065C8                 db  42h ; B
.eh_frame:00000000000065C9                 db  0Eh
.eh_frame:00000000000065CA                 db  28h ; (
.eh_frame:00000000000065CB                 db  8Ch
.eh_frame:00000000000065CC                 db    5
.eh_frame:00000000000065CD                 db  44h ; D
.eh_frame:00000000000065CE                 db  0Eh
.eh_frame:00000000000065CF                 db  30h ; 0
.eh_frame:00000000000065D0                 db  86h
.eh_frame:00000000000065D1                 db    6
.eh_frame:00000000000065D2                 db  41h ; A
.eh_frame:00000000000065D3                 db  0Eh
.eh_frame:00000000000065D4                 db  38h ; 8
.eh_frame:00000000000065D5                 db  83h
.eh_frame:00000000000065D6                 db    7
.eh_frame:00000000000065D7                 db  4Dh ; M
.eh_frame:00000000000065D8                 db  0Eh
.eh_frame:00000000000065D9                 db  50h ; P
.eh_frame:00000000000065DA                 db  5Fh ; _
.eh_frame:00000000000065DB                 db  0Eh
.eh_frame:00000000000065DC                 db  58h ; X
.eh_frame:00000000000065DD                 db  47h ; G
.eh_frame:00000000000065DE                 db  0Eh
.eh_frame:00000000000065DF                 db  60h ; `
.eh_frame:00000000000065E0                 db  46h ; F
.eh_frame:00000000000065E1                 db  0Eh
.eh_frame:00000000000065E2                 db  68h ; h
.eh_frame:00000000000065E3                 db  44h ; D
.eh_frame:00000000000065E4                 db  0Eh
.eh_frame:00000000000065E5                 db  70h ; p
.eh_frame:00000000000065E6                 db  58h ; X
.eh_frame:00000000000065E7                 db  0Eh
.eh_frame:00000000000065E8                 db  38h ; 8
.eh_frame:00000000000065E9                 db  41h ; A
.eh_frame:00000000000065EA                 db  0Eh
.eh_frame:00000000000065EB                 db  30h ; 0
.eh_frame:00000000000065EC                 db  41h ; A
.eh_frame:00000000000065ED                 db  0Eh
.eh_frame:00000000000065EE                 db  28h ; (
.eh_frame:00000000000065EF                 db  42h ; B
.eh_frame:00000000000065F0                 db  0Eh
.eh_frame:00000000000065F1                 db  20h
.eh_frame:00000000000065F2                 db  42h ; B
.eh_frame:00000000000065F3                 db  0Eh
.eh_frame:00000000000065F4                 db  18h
.eh_frame:00000000000065F5                 db  42h ; B
.eh_frame:00000000000065F6                 db  0Eh
.eh_frame:00000000000065F7                 db  10h
.eh_frame:00000000000065F8                 db  42h ; B
.eh_frame:00000000000065F9                 db  0Eh
.eh_frame:00000000000065FA                 db    8
.eh_frame:00000000000065FB                 db    0
.eh_frame:00000000000065FC                 db  68h ; h
.eh_frame:00000000000065FD                 db    0
.eh_frame:00000000000065FE                 db    0
.eh_frame:00000000000065FF                 db    0
.eh_frame:0000000000006600                 db  70h ; p
.eh_frame:0000000000006601                 db    4
.eh_frame:0000000000006602                 db    0
.eh_frame:0000000000006603                 db    0
.eh_frame:0000000000006604                 db  3Ch ; <
.eh_frame:0000000000006605                 db 0D3h
.eh_frame:0000000000006606                 db 0FFh
.eh_frame:0000000000006607                 db 0FFh
.eh_frame:0000000000006608                 db 0E3h
.eh_frame:0000000000006609                 db    0
.eh_frame:000000000000660A                 db    0
.eh_frame:000000000000660B                 db    0
.eh_frame:000000000000660C                 db    0
.eh_frame:000000000000660D                 db  42h ; B
.eh_frame:000000000000660E                 db  0Eh
.eh_frame:000000000000660F                 db  10h
.eh_frame:0000000000006610                 db  8Fh
.eh_frame:0000000000006611                 db    2
.eh_frame:0000000000006612                 db  42h ; B
.eh_frame:0000000000006613                 db  0Eh
.eh_frame:0000000000006614                 db  18h
.eh_frame:0000000000006615                 db  8Eh
.eh_frame:0000000000006616                 db    3
.eh_frame:0000000000006617                 db  49h ; I
.eh_frame:0000000000006618                 db  0Eh
.eh_frame:0000000000006619                 db  20h
.eh_frame:000000000000661A                 db  8Dh
.eh_frame:000000000000661B                 db    4
.eh_frame:000000000000661C                 db  42h ; B
.eh_frame:000000000000661D                 db  0Eh
.eh_frame:000000000000661E                 db  28h ; (
.eh_frame:000000000000661F                 db  8Ch
.eh_frame:0000000000006620                 db    5
.eh_frame:0000000000006621                 db  44h ; D
.eh_frame:0000000000006622                 db  0Eh
.eh_frame:0000000000006623                 db  30h ; 0
.eh_frame:0000000000006624                 db  86h
.eh_frame:0000000000006625                 db    6
.eh_frame:0000000000006626                 db  41h ; A
.eh_frame:0000000000006627                 db  0Eh
.eh_frame:0000000000006628                 db  38h ; 8
.eh_frame:0000000000006629                 db  83h
.eh_frame:000000000000662A                 db    7
.eh_frame:000000000000662B                 db  4Dh ; M
.eh_frame:000000000000662C                 db  0Eh
.eh_frame:000000000000662D                 db  70h ; p
.eh_frame:000000000000662E                 db  65h ; e
.eh_frame:000000000000662F                 db  0Eh
.eh_frame:0000000000006630                 db  78h ; x
.eh_frame:0000000000006631                 db  4Dh ; M
.eh_frame:0000000000006632                 db  0Eh
.eh_frame:0000000000006633                 db  80h
.eh_frame:0000000000006634                 db    1
.eh_frame:0000000000006635                 db  46h ; F
.eh_frame:0000000000006636                 db  0Eh
.eh_frame:0000000000006637                 db  88h
.eh_frame:0000000000006638                 db    1
.eh_frame:0000000000006639                 db  42h ; B
.eh_frame:000000000000663A                 db  0Eh
.eh_frame:000000000000663B                 db  90h
.eh_frame:000000000000663C                 db    1
.eh_frame:000000000000663D                 db  5Eh ; ^
.eh_frame:000000000000663E                 db  0Eh
.eh_frame:000000000000663F                 db  70h ; p
.eh_frame:0000000000006640                 db  56h ; V
.eh_frame:0000000000006641                 db  0Eh
.eh_frame:0000000000006642                 db  78h ; x
.eh_frame:0000000000006643                 db  43h ; C
.eh_frame:0000000000006644                 db  0Eh
.eh_frame:0000000000006645                 db  80h
.eh_frame:0000000000006646                 db    1
.eh_frame:0000000000006647                 db  43h ; C
.eh_frame:0000000000006648                 db  0Eh
.eh_frame:0000000000006649                 db  88h
.eh_frame:000000000000664A                 db    1
.eh_frame:000000000000664B                 db  56h ; V
.eh_frame:000000000000664C                 db  0Eh
.eh_frame:000000000000664D                 db  90h
.eh_frame:000000000000664E                 db    1
.eh_frame:000000000000664F                 db  52h ; R
.eh_frame:0000000000006650                 db  0Eh
.eh_frame:0000000000006651                 db  70h ; p
.eh_frame:0000000000006652                 db  5Bh ; [
.eh_frame:0000000000006653                 db  0Eh
.eh_frame:0000000000006654                 db  38h ; 8
.eh_frame:0000000000006655                 db  41h ; A
.eh_frame:0000000000006656                 db  0Eh
.eh_frame:0000000000006657                 db  30h ; 0
.eh_frame:0000000000006658                 db  41h ; A
.eh_frame:0000000000006659                 db  0Eh
.eh_frame:000000000000665A                 db  28h ; (
.eh_frame:000000000000665B                 db  42h ; B
.eh_frame:000000000000665C                 db  0Eh
.eh_frame:000000000000665D                 db  20h
.eh_frame:000000000000665E                 db  42h ; B
.eh_frame:000000000000665F                 db  0Eh
.eh_frame:0000000000006660                 db  18h
.eh_frame:0000000000006661                 db  42h ; B
.eh_frame:0000000000006662                 db  0Eh
.eh_frame:0000000000006663                 db  10h
.eh_frame:0000000000006664                 db  42h ; B
.eh_frame:0000000000006665                 db  0Eh
.eh_frame:0000000000006666                 db    8
.eh_frame:0000000000006667                 db    0
.eh_frame:0000000000006668                 db  10h
.eh_frame:0000000000006669                 db    0
.eh_frame:000000000000666A                 db    0
.eh_frame:000000000000666B                 db    0
.eh_frame:000000000000666C                 db 0DCh
.eh_frame:000000000000666D                 db    4
.eh_frame:000000000000666E                 db    0
.eh_frame:000000000000666F                 db    0
.eh_frame:0000000000006670                 db 0C0h
.eh_frame:0000000000006671                 db 0D3h
.eh_frame:0000000000006672                 db 0FFh
.eh_frame:0000000000006673                 db 0FFh
.eh_frame:0000000000006674                 db  0Ah
.eh_frame:0000000000006675                 db    0
.eh_frame:0000000000006676                 db    0
.eh_frame:0000000000006677                 db    0
.eh_frame:0000000000006678                 db    0
.eh_frame:0000000000006679                 db    0
.eh_frame:000000000000667A                 db    0
.eh_frame:000000000000667B                 db    0
.eh_frame:000000000000667C                 db  28h ; (
.eh_frame:000000000000667D                 db    0
.eh_frame:000000000000667E                 db    0
.eh_frame:000000000000667F                 db    0
.eh_frame:0000000000006680                 db 0F0h
.eh_frame:0000000000006681                 db    4
.eh_frame:0000000000006682                 db    0
.eh_frame:0000000000006683                 db    0
.eh_frame:0000000000006684                 db 0BCh
.eh_frame:0000000000006685                 db 0D3h
.eh_frame:0000000000006686                 db 0FFh
.eh_frame:0000000000006687                 db 0FFh
.eh_frame:0000000000006688                 db  93h
.eh_frame:0000000000006689                 db    0
.eh_frame:000000000000668A                 db    0
.eh_frame:000000000000668B                 db    0
.eh_frame:000000000000668C                 db    0
.eh_frame:000000000000668D                 db  48h ; H
.eh_frame:000000000000668E                 db  0Eh
.eh_frame:000000000000668F                 db  10h
.eh_frame:0000000000006690                 db  8Ch
.eh_frame:0000000000006691                 db    2
.eh_frame:0000000000006692                 db  48h ; H
.eh_frame:0000000000006693                 db  0Eh
.eh_frame:0000000000006694                 db  18h
.eh_frame:0000000000006695                 db  86h
.eh_frame:0000000000006696                 db    3
.eh_frame:0000000000006697                 db  41h ; A
.eh_frame:0000000000006698                 db  0Eh
.eh_frame:0000000000006699                 db  20h
.eh_frame:000000000000669A                 db  83h
.eh_frame:000000000000669B                 db    4
.eh_frame:000000000000669C                 db    2
.eh_frame:000000000000669D                 db  74h ; t
.eh_frame:000000000000669E                 db  0Eh
.eh_frame:000000000000669F                 db  18h
.eh_frame:00000000000066A0                 db  4Bh ; K
.eh_frame:00000000000066A1                 db  0Eh
.eh_frame:00000000000066A2                 db  10h
.eh_frame:00000000000066A3                 db  42h ; B
.eh_frame:00000000000066A4                 db  0Eh
.eh_frame:00000000000066A5                 db    8
.eh_frame:00000000000066A6                 db    0
.eh_frame:00000000000066A7                 db    0
.eh_frame:00000000000066A8                 db  10h
.eh_frame:00000000000066A9                 db    0
.eh_frame:00000000000066AA                 db    0
.eh_frame:00000000000066AB                 db    0
.eh_frame:00000000000066AC                 db  1Ch
.eh_frame:00000000000066AD                 db    5
.eh_frame:00000000000066AE                 db    0
.eh_frame:00000000000066AF                 db    0
.eh_frame:00000000000066B0                 db  30h ; 0
.eh_frame:00000000000066B1                 db 0D4h
.eh_frame:00000000000066B2                 db 0FFh
.eh_frame:00000000000066B3                 db 0FFh
.eh_frame:00000000000066B4                 db  13h
.eh_frame:00000000000066B5                 db    0
.eh_frame:00000000000066B6                 db    0
.eh_frame:00000000000066B7                 db    0
.eh_frame:00000000000066B8                 db    0
.eh_frame:00000000000066B9                 db    0
.eh_frame:00000000000066BA                 db    0
.eh_frame:00000000000066BB                 db    0
.eh_frame:00000000000066BC                 db  10h
.eh_frame:00000000000066BD                 db    0
.eh_frame:00000000000066BE                 db    0
.eh_frame:00000000000066BF                 db    0
.eh_frame:00000000000066C0                 db  30h ; 0
.eh_frame:00000000000066C1                 db    5
.eh_frame:00000000000066C2                 db    0
.eh_frame:00000000000066C3                 db    0
.eh_frame:00000000000066C4                 db  3Ch ; <
.eh_frame:00000000000066C5                 db 0D4h
.eh_frame:00000000000066C6                 db 0FFh
.eh_frame:00000000000066C7                 db 0FFh
.eh_frame:00000000000066C8                 db  0Ch
.eh_frame:00000000000066C9                 db    0
.eh_frame:00000000000066CA                 db    0
.eh_frame:00000000000066CB                 db    0
.eh_frame:00000000000066CC                 db    0
.eh_frame:00000000000066CD                 db    0
.eh_frame:00000000000066CE                 db    0
.eh_frame:00000000000066CF                 db    0
.eh_frame:00000000000066D0                 db  10h
.eh_frame:00000000000066D1                 db    0
.eh_frame:00000000000066D2                 db    0
.eh_frame:00000000000066D3                 db    0
.eh_frame:00000000000066D4                 db  44h ; D
.eh_frame:00000000000066D5                 db    5
.eh_frame:00000000000066D6                 db    0
.eh_frame:00000000000066D7                 db    0
.eh_frame:00000000000066D8                 db  38h ; 8
.eh_frame:00000000000066D9                 db 0D4h
.eh_frame:00000000000066DA                 db 0FFh
.eh_frame:00000000000066DB                 db 0FFh
.eh_frame:00000000000066DC                 db  18h
.eh_frame:00000000000066DD                 db    0
.eh_frame:00000000000066DE                 db    0
.eh_frame:00000000000066DF                 db    0
.eh_frame:00000000000066E0                 db    0
.eh_frame:00000000000066E1                 db    0
.eh_frame:00000000000066E2                 db    0
.eh_frame:00000000000066E3                 db    0
.eh_frame:00000000000066E4                 db  10h
.eh_frame:00000000000066E5                 db    0
.eh_frame:00000000000066E6                 db    0
.eh_frame:00000000000066E7                 db    0
.eh_frame:00000000000066E8                 db  58h ; X
.eh_frame:00000000000066E9                 db    5
.eh_frame:00000000000066EA                 db    0
.eh_frame:00000000000066EB                 db    0
.eh_frame:00000000000066EC                 db  44h ; D
.eh_frame:00000000000066ED                 db 0D4h
.eh_frame:00000000000066EE                 db 0FFh
.eh_frame:00000000000066EF                 db 0FFh
.eh_frame:00000000000066F0                 db  14h
.eh_frame:00000000000066F1                 db    0
.eh_frame:00000000000066F2                 db    0
.eh_frame:00000000000066F3                 db    0
.eh_frame:00000000000066F4                 db    0
.eh_frame:00000000000066F5                 db    0
.eh_frame:00000000000066F6                 db    0
.eh_frame:00000000000066F7                 db    0
.eh_frame:00000000000066F8                 db  18h
.eh_frame:00000000000066F9                 db    0
.eh_frame:00000000000066FA                 db    0
.eh_frame:00000000000066FB                 db    0
.eh_frame:00000000000066FC                 db  6Ch ; l
.eh_frame:00000000000066FD                 db    5
.eh_frame:00000000000066FE                 db    0
.eh_frame:00000000000066FF                 db    0
.eh_frame:0000000000006700                 db  50h ; P
.eh_frame:0000000000006701                 db 0D4h
.eh_frame:0000000000006702                 db 0FFh
.eh_frame:0000000000006703                 db 0FFh
.eh_frame:0000000000006704                 db  8Eh
.eh_frame:0000000000006705                 db    0
.eh_frame:0000000000006706                 db    0
.eh_frame:0000000000006707                 db    0
.eh_frame:0000000000006708                 db    0
.eh_frame:0000000000006709                 db  44h ; D
.eh_frame:000000000000670A                 db  0Eh
.eh_frame:000000000000670B                 db  50h ; P
.eh_frame:000000000000670C                 db    2
.eh_frame:000000000000670D                 db  7Fh ; 
.eh_frame:000000000000670E                 db  0Ah
.eh_frame:000000000000670F                 db  0Eh
.eh_frame:0000000000006710                 db    8
.eh_frame:0000000000006711                 db  41h ; A
.eh_frame:0000000000006712                 db  0Bh
.eh_frame:0000000000006713                 db    0
.eh_frame:0000000000006714                 db  18h
.eh_frame:0000000000006715                 db    0
.eh_frame:0000000000006716                 db    0
.eh_frame:0000000000006717                 db    0
.eh_frame:0000000000006718                 db  88h
.eh_frame:0000000000006719                 db    5
.eh_frame:000000000000671A                 db    0
.eh_frame:000000000000671B                 db    0
.eh_frame:000000000000671C                 db 0C4h
.eh_frame:000000000000671D                 db 0D4h
.eh_frame:000000000000671E                 db 0FFh
.eh_frame:000000000000671F                 db 0FFh
.eh_frame:0000000000006720                 db  8Ah
.eh_frame:0000000000006721                 db    0
.eh_frame:0000000000006722                 db    0
.eh_frame:0000000000006723                 db    0
.eh_frame:0000000000006724                 db    0
.eh_frame:0000000000006725                 db  44h ; D
.eh_frame:0000000000006726                 db  0Eh
.eh_frame:0000000000006727                 db  50h ; P
.eh_frame:0000000000006728                 db    2
.eh_frame:0000000000006729                 db  7Bh ; {
.eh_frame:000000000000672A                 db  0Ah
.eh_frame:000000000000672B                 db  0Eh
.eh_frame:000000000000672C                 db    8
.eh_frame:000000000000672D                 db  41h ; A
.eh_frame:000000000000672E                 db  0Bh
.eh_frame:000000000000672F                 db    0
.eh_frame:0000000000006730                 db  10h
.eh_frame:0000000000006731                 db    0
.eh_frame:0000000000006732                 db    0
.eh_frame:0000000000006733                 db    0
.eh_frame:0000000000006734                 db 0A4h
.eh_frame:0000000000006735                 db    5
.eh_frame:0000000000006736                 db    0
.eh_frame:0000000000006737                 db    0
.eh_frame:0000000000006738                 db  38h ; 8
.eh_frame:0000000000006739                 db 0D5h
.eh_frame:000000000000673A                 db 0FFh
.eh_frame:000000000000673B                 db 0FFh
.eh_frame:000000000000673C                 db  0Ch
.eh_frame:000000000000673D                 db    0
.eh_frame:000000000000673E                 db    0
.eh_frame:000000000000673F                 db    0
.eh_frame:0000000000006740                 db    0
.eh_frame:0000000000006741                 db    0
.eh_frame:0000000000006742                 db    0
.eh_frame:0000000000006743                 db    0
.eh_frame:0000000000006744                 db  10h
.eh_frame:0000000000006745                 db    0
.eh_frame:0000000000006746                 db    0
.eh_frame:0000000000006747                 db    0
.eh_frame:0000000000006748                 db 0B8h
.eh_frame:0000000000006749                 db    5
.eh_frame:000000000000674A                 db    0
.eh_frame:000000000000674B                 db    0
.eh_frame:000000000000674C                 db  34h ; 4
.eh_frame:000000000000674D                 db 0D5h
.eh_frame:000000000000674E                 db 0FFh
.eh_frame:000000000000674F                 db 0FFh
.eh_frame:0000000000006750                 db  0Fh
.eh_frame:0000000000006751                 db    0
.eh_frame:0000000000006752                 db    0
.eh_frame:0000000000006753                 db    0
.eh_frame:0000000000006754                 db    0
.eh_frame:0000000000006755                 db    0
.eh_frame:0000000000006756                 db    0
.eh_frame:0000000000006757                 db    0
.eh_frame:0000000000006758                 db  18h
.eh_frame:0000000000006759                 db    0
.eh_frame:000000000000675A                 db    0
.eh_frame:000000000000675B                 db    0
.eh_frame:000000000000675C                 db 0CCh
.eh_frame:000000000000675D                 db    5
.eh_frame:000000000000675E                 db    0
.eh_frame:000000000000675F                 db    0
.eh_frame:0000000000006760                 db  30h ; 0
.eh_frame:0000000000006761                 db 0D5h
.eh_frame:0000000000006762                 db 0FFh
.eh_frame:0000000000006763                 db 0FFh
.eh_frame:0000000000006764                 db  98h
.eh_frame:0000000000006765                 db    0
.eh_frame:0000000000006766                 db    0
.eh_frame:0000000000006767                 db    0
.eh_frame:0000000000006768                 db    0
.eh_frame:0000000000006769                 db  44h ; D
.eh_frame:000000000000676A                 db  0Eh
.eh_frame:000000000000676B                 db  50h ; P
.eh_frame:000000000000676C                 db    2
.eh_frame:000000000000676D                 db  8Eh
.eh_frame:000000000000676E                 db  0Ah
.eh_frame:000000000000676F                 db  0Eh
.eh_frame:0000000000006770                 db    8
.eh_frame:0000000000006771                 db  41h ; A
.eh_frame:0000000000006772                 db  0Bh
.eh_frame:0000000000006773                 db    0
.eh_frame:0000000000006774                 db  10h
.eh_frame:0000000000006775                 db    0
.eh_frame:0000000000006776                 db    0
.eh_frame:0000000000006777                 db    0
.eh_frame:0000000000006778                 db 0E8h
.eh_frame:0000000000006779                 db    5
.eh_frame:000000000000677A                 db    0
.eh_frame:000000000000677B                 db    0
.eh_frame:000000000000677C                 db 0B4h
.eh_frame:000000000000677D                 db 0D5h
.eh_frame:000000000000677E                 db 0FFh
.eh_frame:000000000000677F                 db 0FFh
.eh_frame:0000000000006780                 db  10h
.eh_frame:0000000000006781                 db    0
.eh_frame:0000000000006782                 db    0
.eh_frame:0000000000006783                 db    0
.eh_frame:0000000000006784                 db    0
.eh_frame:0000000000006785                 db    0
.eh_frame:0000000000006786                 db    0
.eh_frame:0000000000006787                 db    0
.eh_frame:0000000000006788                 db  10h
.eh_frame:0000000000006789                 db    0
.eh_frame:000000000000678A                 db    0
.eh_frame:000000000000678B                 db    0
.eh_frame:000000000000678C                 db 0FCh
.eh_frame:000000000000678D                 db    5
.eh_frame:000000000000678E                 db    0
.eh_frame:000000000000678F                 db    0
.eh_frame:0000000000006790                 db 0B0h
.eh_frame:0000000000006791                 db 0D5h
.eh_frame:0000000000006792                 db 0FFh
.eh_frame:0000000000006793                 db 0FFh
.eh_frame:0000000000006794                 db  11h
.eh_frame:0000000000006795                 db    0
.eh_frame:0000000000006796                 db    0
.eh_frame:0000000000006797                 db    0
.eh_frame:0000000000006798                 db    0
.eh_frame:0000000000006799                 db    0
.eh_frame:000000000000679A                 db    0
.eh_frame:000000000000679B                 db    0
.eh_frame:000000000000679C                 db  10h
.eh_frame:000000000000679D                 db    0
.eh_frame:000000000000679E                 db    0
.eh_frame:000000000000679F                 db    0
.eh_frame:00000000000067A0                 db  10h
.eh_frame:00000000000067A1                 db    6
.eh_frame:00000000000067A2                 db    0
.eh_frame:00000000000067A3                 db    0
.eh_frame:00000000000067A4                 db 0BCh
.eh_frame:00000000000067A5                 db 0D5h
.eh_frame:00000000000067A6                 db 0FFh
.eh_frame:00000000000067A7                 db 0FFh
.eh_frame:00000000000067A8                 db  0Ah
.eh_frame:00000000000067A9                 db    0
.eh_frame:00000000000067AA                 db    0
.eh_frame:00000000000067AB                 db    0
.eh_frame:00000000000067AC                 db    0
.eh_frame:00000000000067AD                 db    0
.eh_frame:00000000000067AE                 db    0
.eh_frame:00000000000067AF                 db    0
.eh_frame:00000000000067B0                 db  18h
.eh_frame:00000000000067B1                 db    0
.eh_frame:00000000000067B2                 db    0
.eh_frame:00000000000067B3                 db    0
.eh_frame:00000000000067B4                 db  24h ; $
.eh_frame:00000000000067B5                 db    6
.eh_frame:00000000000067B6                 db    0
.eh_frame:00000000000067B7                 db    0
.eh_frame:00000000000067B8                 db 0B8h
.eh_frame:00000000000067B9                 db 0D5h
.eh_frame:00000000000067BA                 db 0FFh
.eh_frame:00000000000067BB                 db 0FFh
.eh_frame:00000000000067BC                 db  8Eh
.eh_frame:00000000000067BD                 db    0
.eh_frame:00000000000067BE                 db    0
.eh_frame:00000000000067BF                 db    0
.eh_frame:00000000000067C0                 db    0
.eh_frame:00000000000067C1                 db  44h ; D
.eh_frame:00000000000067C2                 db  0Eh
.eh_frame:00000000000067C3                 db  50h ; P
.eh_frame:00000000000067C4                 db    2
.eh_frame:00000000000067C5                 db  7Fh ; 
.eh_frame:00000000000067C6                 db  0Ah
.eh_frame:00000000000067C7                 db  0Eh
.eh_frame:00000000000067C8                 db    8
.eh_frame:00000000000067C9                 db  41h ; A
.eh_frame:00000000000067CA                 db  0Bh
.eh_frame:00000000000067CB                 db    0
.eh_frame:00000000000067CC                 db  18h
.eh_frame:00000000000067CD                 db    0
.eh_frame:00000000000067CE                 db    0
.eh_frame:00000000000067CF                 db    0
.eh_frame:00000000000067D0                 db  40h ; @
.eh_frame:00000000000067D1                 db    6
.eh_frame:00000000000067D2                 db    0
.eh_frame:00000000000067D3                 db    0
.eh_frame:00000000000067D4                 db  2Ch ; ,
.eh_frame:00000000000067D5                 db 0D6h
.eh_frame:00000000000067D6                 db 0FFh
.eh_frame:00000000000067D7                 db 0FFh
.eh_frame:00000000000067D8                 db  91h
.eh_frame:00000000000067D9                 db    0
.eh_frame:00000000000067DA                 db    0
.eh_frame:00000000000067DB                 db    0
.eh_frame:00000000000067DC                 db    0
.eh_frame:00000000000067DD                 db  44h ; D
.eh_frame:00000000000067DE                 db  0Eh
.eh_frame:00000000000067DF                 db  50h ; P
.eh_frame:00000000000067E0                 db    2
.eh_frame:00000000000067E1                 db  82h
.eh_frame:00000000000067E2                 db  0Ah
.eh_frame:00000000000067E3                 db  0Eh
.eh_frame:00000000000067E4                 db    8
.eh_frame:00000000000067E5                 db  41h ; A
.eh_frame:00000000000067E6                 db  0Bh
.eh_frame:00000000000067E7                 db    0
.eh_frame:00000000000067E8                 db  10h
.eh_frame:00000000000067E9                 db    0
.eh_frame:00000000000067EA                 db    0
.eh_frame:00000000000067EB                 db    0
.eh_frame:00000000000067EC                 db  5Ch ; \
.eh_frame:00000000000067ED                 db    6
.eh_frame:00000000000067EE                 db    0
.eh_frame:00000000000067EF                 db    0
.eh_frame:00000000000067F0                 db 0B0h
.eh_frame:00000000000067F1                 db 0D6h
.eh_frame:00000000000067F2                 db 0FFh
.eh_frame:00000000000067F3                 db 0FFh
.eh_frame:00000000000067F4                 db  0Ch
.eh_frame:00000000000067F5                 db    0
.eh_frame:00000000000067F6                 db    0
.eh_frame:00000000000067F7                 db    0
.eh_frame:00000000000067F8                 db    0
.eh_frame:00000000000067F9                 db    0
.eh_frame:00000000000067FA                 db    0
.eh_frame:00000000000067FB                 db    0
.eh_frame:00000000000067FC                 db  10h
.eh_frame:00000000000067FD                 db    0
.eh_frame:00000000000067FE                 db    0
.eh_frame:00000000000067FF                 db    0
.eh_frame:0000000000006800                 db  70h ; p
.eh_frame:0000000000006801                 db    6
.eh_frame:0000000000006802                 db    0
.eh_frame:0000000000006803                 db    0
.eh_frame:0000000000006804                 db 0ACh
.eh_frame:0000000000006805                 db 0D6h
.eh_frame:0000000000006806                 db 0FFh
.eh_frame:0000000000006807                 db 0FFh
.eh_frame:0000000000006808                 db  17h
.eh_frame:0000000000006809                 db    0
.eh_frame:000000000000680A                 db    0
.eh_frame:000000000000680B                 db    0
.eh_frame:000000000000680C                 db    0
.eh_frame:000000000000680D                 db    0
.eh_frame:000000000000680E                 db    0
.eh_frame:000000000000680F                 db    0
.eh_frame:0000000000006810                 db  10h
.eh_frame:0000000000006811                 db    0
.eh_frame:0000000000006812                 db    0
.eh_frame:0000000000006813                 db    0
.eh_frame:0000000000006814                 db  84h
.eh_frame:0000000000006815                 db    6
.eh_frame:0000000000006816                 db    0
.eh_frame:0000000000006817                 db    0
.eh_frame:0000000000006818                 db 0B8h
.eh_frame:0000000000006819                 db 0D6h
.eh_frame:000000000000681A                 db 0FFh
.eh_frame:000000000000681B                 db 0FFh
.eh_frame:000000000000681C                 db  13h
.eh_frame:000000000000681D                 db    0
.eh_frame:000000000000681E                 db    0
.eh_frame:000000000000681F                 db    0
.eh_frame:0000000000006820                 db    0
.eh_frame:0000000000006821                 db    0
.eh_frame:0000000000006822                 db    0
.eh_frame:0000000000006823                 db    0
.eh_frame:0000000000006824                 db  10h
.eh_frame:0000000000006825                 db    0
.eh_frame:0000000000006826                 db    0
.eh_frame:0000000000006827                 db    0
.eh_frame:0000000000006828                 db  98h
.eh_frame:0000000000006829                 db    6
.eh_frame:000000000000682A                 db    0
.eh_frame:000000000000682B                 db    0
.eh_frame:000000000000682C                 db 0C4h
.eh_frame:000000000000682D                 db 0D6h
.eh_frame:000000000000682E                 db 0FFh
.eh_frame:000000000000682F                 db 0FFh
.eh_frame:0000000000006830                 db  0Ch
.eh_frame:0000000000006831                 db    0
.eh_frame:0000000000006832                 db    0
.eh_frame:0000000000006833                 db    0
.eh_frame:0000000000006834                 db    0
.eh_frame:0000000000006835                 db    0
.eh_frame:0000000000006836                 db    0
.eh_frame:0000000000006837                 db    0
.eh_frame:0000000000006838                 db  10h
.eh_frame:0000000000006839                 db    0
.eh_frame:000000000000683A                 db    0
.eh_frame:000000000000683B                 db    0
.eh_frame:000000000000683C                 db 0ACh
.eh_frame:000000000000683D                 db    6
.eh_frame:000000000000683E                 db    0
.eh_frame:000000000000683F                 db    0
.eh_frame:0000000000006840                 db 0C0h
.eh_frame:0000000000006841                 db 0D6h
.eh_frame:0000000000006842                 db 0FFh
.eh_frame:0000000000006843                 db 0FFh
.eh_frame:0000000000006844                 db  14h
.eh_frame:0000000000006845                 db    0
.eh_frame:0000000000006846                 db    0
.eh_frame:0000000000006847                 db    0
.eh_frame:0000000000006848                 db    0
.eh_frame:0000000000006849                 db    0
.eh_frame:000000000000684A                 db    0
.eh_frame:000000000000684B                 db    0
.eh_frame:000000000000684C                 db  10h
.eh_frame:000000000000684D                 db    0
.eh_frame:000000000000684E                 db    0
.eh_frame:000000000000684F                 db    0
.eh_frame:0000000000006850                 db 0C0h
.eh_frame:0000000000006851                 db    6
.eh_frame:0000000000006852                 db    0
.eh_frame:0000000000006853                 db    0
.eh_frame:0000000000006854                 db 0CCh
.eh_frame:0000000000006855                 db 0D6h
.eh_frame:0000000000006856                 db 0FFh
.eh_frame:0000000000006857                 db 0FFh
.eh_frame:0000000000006858                 db  13h
.eh_frame:0000000000006859                 db    0
.eh_frame:000000000000685A                 db    0
.eh_frame:000000000000685B                 db    0
.eh_frame:000000000000685C                 db    0
.eh_frame:000000000000685D                 db    0
.eh_frame:000000000000685E                 db    0
.eh_frame:000000000000685F                 db    0
.eh_frame:0000000000006860                 db  14h
.eh_frame:0000000000006861                 db    0
.eh_frame:0000000000006862                 db    0
.eh_frame:0000000000006863                 db    0
.eh_frame:0000000000006864                 db 0D4h
.eh_frame:0000000000006865                 db    6
.eh_frame:0000000000006866                 db    0
.eh_frame:0000000000006867                 db    0
.eh_frame:0000000000006868                 db 0D8h
.eh_frame:0000000000006869                 db 0D6h
.eh_frame:000000000000686A                 db 0FFh
.eh_frame:000000000000686B                 db 0FFh
.eh_frame:000000000000686C                 db  18h
.eh_frame:000000000000686D                 db    0
.eh_frame:000000000000686E                 db    0
.eh_frame:000000000000686F                 db    0
.eh_frame:0000000000006870                 db    0
.eh_frame:0000000000006871                 db    0
.eh_frame:0000000000006872                 db    0
.eh_frame:0000000000006873                 db    0
.eh_frame:0000000000006874                 db    0
.eh_frame:0000000000006875                 db    0
.eh_frame:0000000000006876                 db    0
.eh_frame:0000000000006877                 db    0
.eh_frame:0000000000006878                 db  10h
.eh_frame:0000000000006879                 db    1
.eh_frame:000000000000687A                 db    0
.eh_frame:000000000000687B                 db    0
.eh_frame:000000000000687C                 db 0ECh
.eh_frame:000000000000687D                 db    6
.eh_frame:000000000000687E                 db    0
.eh_frame:000000000000687F                 db    0
.eh_frame:0000000000006880                 db 0E0h
.eh_frame:0000000000006881                 db 0D6h
.eh_frame:0000000000006882                 db 0FFh
.eh_frame:0000000000006883                 db 0FFh
.eh_frame:0000000000006884                 db  17h
.eh_frame:0000000000006885                 db    4
.eh_frame:0000000000006886                 db    0
.eh_frame:0000000000006887                 db    0
.eh_frame:0000000000006888                 db    0
.eh_frame:0000000000006889                 db  42h ; B
.eh_frame:000000000000688A                 db  0Eh
.eh_frame:000000000000688B                 db  10h
.eh_frame:000000000000688C                 db  8Fh
.eh_frame:000000000000688D                 db    2
.eh_frame:000000000000688E                 db  42h ; B
.eh_frame:000000000000688F                 db  0Eh
.eh_frame:0000000000006890                 db  18h
.eh_frame:0000000000006891                 db  8Eh
.eh_frame:0000000000006892                 db    3
.eh_frame:0000000000006893                 db  42h ; B
.eh_frame:0000000000006894                 db  0Eh
.eh_frame:0000000000006895                 db  20h
.eh_frame:0000000000006896                 db  8Dh
.eh_frame:0000000000006897                 db    4
.eh_frame:0000000000006898                 db  42h ; B
.eh_frame:0000000000006899                 db  0Eh
.eh_frame:000000000000689A                 db  28h ; (
.eh_frame:000000000000689B                 db  8Ch
.eh_frame:000000000000689C                 db    5
.eh_frame:000000000000689D                 db  44h ; D
.eh_frame:000000000000689E                 db  0Eh
.eh_frame:000000000000689F                 db  30h ; 0
.eh_frame:00000000000068A0                 db  86h
.eh_frame:00000000000068A1                 db    6
.eh_frame:00000000000068A2                 db  41h ; A
.eh_frame:00000000000068A3                 db  0Eh
.eh_frame:00000000000068A4                 db  38h ; 8
.eh_frame:00000000000068A5                 db  83h
.eh_frame:00000000000068A6                 db    7
.eh_frame:00000000000068A7                 db  4Ah ; J
.eh_frame:00000000000068A8                 db  0Eh
.eh_frame:00000000000068A9                 db  60h ; `
.eh_frame:00000000000068AA                 db    2
.eh_frame:00000000000068AB                 db 0DDh
.eh_frame:00000000000068AC                 db  0Eh
.eh_frame:00000000000068AD                 db  68h ; h
.eh_frame:00000000000068AE                 db  57h ; W
.eh_frame:00000000000068AF                 db  0Eh
.eh_frame:00000000000068B0                 db  70h ; p
.eh_frame:00000000000068B1                 db  42h ; B
.eh_frame:00000000000068B2                 db  0Eh
.eh_frame:00000000000068B3                 db  78h ; x
.eh_frame:00000000000068B4                 db  42h ; B
.eh_frame:00000000000068B5                 db  0Eh
.eh_frame:00000000000068B6                 db  80h
.eh_frame:00000000000068B7                 db    1
.eh_frame:00000000000068B8                 db  42h ; B
.eh_frame:00000000000068B9                 db  0Eh
.eh_frame:00000000000068BA                 db  88h
.eh_frame:00000000000068BB                 db    1
.eh_frame:00000000000068BC                 db  42h ; B
.eh_frame:00000000000068BD                 db  0Eh
.eh_frame:00000000000068BE                 db  90h
.eh_frame:00000000000068BF                 db    1
.eh_frame:00000000000068C0                 db  53h ; S
.eh_frame:00000000000068C1                 db  0Eh
.eh_frame:00000000000068C2                 db  60h ; `
.eh_frame:00000000000068C3                 db  44h ; D
.eh_frame:00000000000068C4                 db  0Ah
.eh_frame:00000000000068C5                 db  0Eh
.eh_frame:00000000000068C6                 db  38h ; 8
.eh_frame:00000000000068C7                 db  41h ; A
.eh_frame:00000000000068C8                 db  0Eh
.eh_frame:00000000000068C9                 db  30h ; 0
.eh_frame:00000000000068CA                 db  41h ; A
.eh_frame:00000000000068CB                 db  0Eh
.eh_frame:00000000000068CC                 db  28h ; (
.eh_frame:00000000000068CD                 db  42h ; B
.eh_frame:00000000000068CE                 db  0Eh
.eh_frame:00000000000068CF                 db  20h
.eh_frame:00000000000068D0                 db  42h ; B
.eh_frame:00000000000068D1                 db  0Eh
.eh_frame:00000000000068D2                 db  18h
.eh_frame:00000000000068D3                 db  42h ; B
.eh_frame:00000000000068D4                 db  0Eh
.eh_frame:00000000000068D5                 db  10h
.eh_frame:00000000000068D6                 db  42h ; B
.eh_frame:00000000000068D7                 db  0Eh
.eh_frame:00000000000068D8                 db    8
.eh_frame:00000000000068D9                 db  44h ; D
.eh_frame:00000000000068DA                 db  0Bh
.eh_frame:00000000000068DB                 db    2
.eh_frame:00000000000068DC                 db  78h ; x
.eh_frame:00000000000068DD                 db  0Ah
.eh_frame:00000000000068DE                 db  0Eh
.eh_frame:00000000000068DF                 db  68h ; h
.eh_frame:00000000000068E0                 db  48h ; H
.eh_frame:00000000000068E1                 db  0Bh
.eh_frame:00000000000068E2                 db  5Ah ; Z
.eh_frame:00000000000068E3                 db  0Ah
.eh_frame:00000000000068E4                 db  0Eh
.eh_frame:00000000000068E5                 db  38h ; 8
.eh_frame:00000000000068E6                 db  47h ; G
.eh_frame:00000000000068E7                 db  0Eh
.eh_frame:00000000000068E8                 db  30h ; 0
.eh_frame:00000000000068E9                 db  41h ; A
.eh_frame:00000000000068EA                 db  0Eh
.eh_frame:00000000000068EB                 db  28h ; (
.eh_frame:00000000000068EC                 db  42h ; B
.eh_frame:00000000000068ED                 db  0Eh
.eh_frame:00000000000068EE                 db  20h
.eh_frame:00000000000068EF                 db  42h ; B
.eh_frame:00000000000068F0                 db  0Eh
.eh_frame:00000000000068F1                 db  18h
.eh_frame:00000000000068F2                 db  42h ; B
.eh_frame:00000000000068F3                 db  0Eh
.eh_frame:00000000000068F4                 db  10h
.eh_frame:00000000000068F5                 db  42h ; B
.eh_frame:00000000000068F6                 db  0Eh
.eh_frame:00000000000068F7                 db    8
.eh_frame:00000000000068F8                 db  56h ; V
.eh_frame:00000000000068F9                 db  0Bh
.eh_frame:00000000000068FA                 db  5Eh ; ^
.eh_frame:00000000000068FB                 db  0Ah
.eh_frame:00000000000068FC                 db  0Eh
.eh_frame:00000000000068FD                 db  38h ; 8
.eh_frame:00000000000068FE                 db  52h ; R
.eh_frame:00000000000068FF                 db  0Eh
.eh_frame:0000000000006900                 db  30h ; 0
.eh_frame:0000000000006901                 db  41h ; A
.eh_frame:0000000000006902                 db  0Eh
.eh_frame:0000000000006903                 db  28h ; (
.eh_frame:0000000000006904                 db  42h ; B
.eh_frame:0000000000006905                 db  0Eh
.eh_frame:0000000000006906                 db  20h
.eh_frame:0000000000006907                 db  42h ; B
.eh_frame:0000000000006908                 db  0Eh
.eh_frame:0000000000006909                 db  18h
.eh_frame:000000000000690A                 db  42h ; B
.eh_frame:000000000000690B                 db  0Eh
.eh_frame:000000000000690C                 db  10h
.eh_frame:000000000000690D                 db  42h ; B
.eh_frame:000000000000690E                 db  0Eh
.eh_frame:000000000000690F                 db    8
.eh_frame:0000000000006910                 db  4Fh ; O
.eh_frame:0000000000006911                 db  0Bh
.eh_frame:0000000000006912                 db  62h ; b
.eh_frame:0000000000006913                 db  0Ah
.eh_frame:0000000000006914                 db  0Eh
.eh_frame:0000000000006915                 db  38h ; 8
.eh_frame:0000000000006916                 db  50h ; P
.eh_frame:0000000000006917                 db  0Eh
.eh_frame:0000000000006918                 db  30h ; 0
.eh_frame:0000000000006919                 db  41h ; A
.eh_frame:000000000000691A                 db  0Eh
.eh_frame:000000000000691B                 db  28h ; (
.eh_frame:000000000000691C                 db  42h ; B
.eh_frame:000000000000691D                 db  0Eh
.eh_frame:000000000000691E                 db  20h
.eh_frame:000000000000691F                 db  42h ; B
.eh_frame:0000000000006920                 db  0Eh
.eh_frame:0000000000006921                 db  18h
.eh_frame:0000000000006922                 db  42h ; B
.eh_frame:0000000000006923                 db  0Eh
.eh_frame:0000000000006924                 db  10h
.eh_frame:0000000000006925                 db  42h ; B
.eh_frame:0000000000006926                 db  0Eh
.eh_frame:0000000000006927                 db    8
.eh_frame:0000000000006928                 db  55h ; U
.eh_frame:0000000000006929                 db  0Bh
.eh_frame:000000000000692A                 db  66h ; f
.eh_frame:000000000000692B                 db  0Eh
.eh_frame:000000000000692C                 db  68h ; h
.eh_frame:000000000000692D                 db  42h ; B
.eh_frame:000000000000692E                 db  0Eh
.eh_frame:000000000000692F                 db  70h ; p
.eh_frame:0000000000006930                 db  5Ch ; \
.eh_frame:0000000000006931                 db  0Eh
.eh_frame:0000000000006932                 db  68h ; h
.eh_frame:0000000000006933                 db  41h ; A
.eh_frame:0000000000006934                 db  0Eh
.eh_frame:0000000000006935                 db  60h ; `
.eh_frame:0000000000006936                 db  44h ; D
.eh_frame:0000000000006937                 db  0Ah
.eh_frame:0000000000006938                 db  0Eh
.eh_frame:0000000000006939                 db  38h ; 8
.eh_frame:000000000000693A                 db  41h ; A
.eh_frame:000000000000693B                 db  0Eh
.eh_frame:000000000000693C                 db  30h ; 0
.eh_frame:000000000000693D                 db  41h ; A
.eh_frame:000000000000693E                 db  0Eh
.eh_frame:000000000000693F                 db  28h ; (
.eh_frame:0000000000006940                 db  42h ; B
.eh_frame:0000000000006941                 db  0Eh
.eh_frame:0000000000006942                 db  20h
.eh_frame:0000000000006943                 db  42h ; B
.eh_frame:0000000000006944                 db  0Eh
.eh_frame:0000000000006945                 db  18h
.eh_frame:0000000000006946                 db  42h ; B
.eh_frame:0000000000006947                 db  0Eh
.eh_frame:0000000000006948                 db  10h
.eh_frame:0000000000006949                 db  42h ; B
.eh_frame:000000000000694A                 db  0Eh
.eh_frame:000000000000694B                 db    8
.eh_frame:000000000000694C                 db  45h ; E
.eh_frame:000000000000694D                 db  0Bh
.eh_frame:000000000000694E                 db  68h ; h
.eh_frame:000000000000694F                 db  0Ah
.eh_frame:0000000000006950                 db  0Eh
.eh_frame:0000000000006951                 db  68h ; h
.eh_frame:0000000000006952                 db  48h ; H
.eh_frame:0000000000006953                 db  0Bh
.eh_frame:0000000000006954                 db  72h ; r
.eh_frame:0000000000006955                 db  0Eh
.eh_frame:0000000000006956                 db  68h ; h
.eh_frame:0000000000006957                 db  45h ; E
.eh_frame:0000000000006958                 db  0Eh
.eh_frame:0000000000006959                 db  70h ; p
.eh_frame:000000000000695A                 db  42h ; B
.eh_frame:000000000000695B                 db  0Eh
.eh_frame:000000000000695C                 db  78h ; x
.eh_frame:000000000000695D                 db  42h ; B
.eh_frame:000000000000695E                 db  0Eh
.eh_frame:000000000000695F                 db  80h
.eh_frame:0000000000006960                 db    1
.eh_frame:0000000000006961                 db  5Eh ; ^
.eh_frame:0000000000006962                 db  0Eh
.eh_frame:0000000000006963                 db  60h ; `
.eh_frame:0000000000006964                 db  44h ; D
.eh_frame:0000000000006965                 db  0Ah
.eh_frame:0000000000006966                 db  0Eh
.eh_frame:0000000000006967                 db  38h ; 8
.eh_frame:0000000000006968                 db  41h ; A
.eh_frame:0000000000006969                 db  0Eh
.eh_frame:000000000000696A                 db  30h ; 0
.eh_frame:000000000000696B                 db  41h ; A
.eh_frame:000000000000696C                 db  0Eh
.eh_frame:000000000000696D                 db  28h ; (
.eh_frame:000000000000696E                 db  42h ; B
.eh_frame:000000000000696F                 db  0Eh
.eh_frame:0000000000006970                 db  20h
.eh_frame:0000000000006971                 db  42h ; B
.eh_frame:0000000000006972                 db  0Eh
.eh_frame:0000000000006973                 db  18h
.eh_frame:0000000000006974                 db  42h ; B
.eh_frame:0000000000006975                 db  0Eh
.eh_frame:0000000000006976                 db  10h
.eh_frame:0000000000006977                 db  42h ; B
.eh_frame:0000000000006978                 db  0Eh
.eh_frame:0000000000006979                 db    8
.eh_frame:000000000000697A                 db  41h ; A
.eh_frame:000000000000697B                 db  0Bh
.eh_frame:000000000000697C                 db  79h ; y
.eh_frame:000000000000697D                 db  0Ah
.eh_frame:000000000000697E                 db  0Eh
.eh_frame:000000000000697F                 db  68h ; h
.eh_frame:0000000000006980                 db  42h ; B
.eh_frame:0000000000006981                 db  0Eh
.eh_frame:0000000000006982                 db  70h ; p
.eh_frame:0000000000006983                 db  42h ; B
.eh_frame:0000000000006984                 db  0Eh
.eh_frame:0000000000006985                 db  78h ; x
.eh_frame:0000000000006986                 db  42h ; B
.eh_frame:0000000000006987                 db  0Eh
.eh_frame:0000000000006988                 db  80h
.eh_frame:0000000000006989                 db    1
.eh_frame:000000000000698A                 db  51h ; Q
.eh_frame:000000000000698B                 db  0Bh
.eh_frame:000000000000698C                 db  10h
.eh_frame:000000000000698D                 db    0
.eh_frame:000000000000698E                 db    0
.eh_frame:000000000000698F                 db    0
.eh_frame:0000000000006990                 db    0
.eh_frame:0000000000006991                 db    8
.eh_frame:0000000000006992                 db    0
.eh_frame:0000000000006993                 db    0
.eh_frame:0000000000006994                 db 0ECh
.eh_frame:0000000000006995                 db 0D9h
.eh_frame:0000000000006996                 db 0FFh
.eh_frame:0000000000006997                 db 0FFh
.eh_frame:0000000000006998                 db  20h
.eh_frame:0000000000006999                 db    0
.eh_frame:000000000000699A                 db    0
.eh_frame:000000000000699B                 db    0
.eh_frame:000000000000699C                 db    0
.eh_frame:000000000000699D                 db    0
.eh_frame:000000000000699E                 db    0
.eh_frame:000000000000699F                 db    0
.eh_frame:00000000000069A0                 db  18h
.eh_frame:00000000000069A1                 db    0
.eh_frame:00000000000069A2                 db    0
.eh_frame:00000000000069A3                 db    0
.eh_frame:00000000000069A4                 db  14h
.eh_frame:00000000000069A5                 db    8
.eh_frame:00000000000069A6                 db    0
.eh_frame:00000000000069A7                 db    0
.eh_frame:00000000000069A8                 db 0F8h
.eh_frame:00000000000069A9                 db 0D9h
.eh_frame:00000000000069AA                 db 0FFh
.eh_frame:00000000000069AB                 db 0FFh
.eh_frame:00000000000069AC                 db  78h ; x
.eh_frame:00000000000069AD                 db    0
.eh_frame:00000000000069AE                 db    0
.eh_frame:00000000000069AF                 db    0
.eh_frame:00000000000069B0                 db    0
.eh_frame:00000000000069B1                 db  44h ; D
.eh_frame:00000000000069B2                 db  0Eh
.eh_frame:00000000000069B3                 db  70h ; p
.eh_frame:00000000000069B4                 db    2
.eh_frame:00000000000069B5                 db  60h ; `
.eh_frame:00000000000069B6                 db  0Ah
.eh_frame:00000000000069B7                 db  0Eh
.eh_frame:00000000000069B8                 db    8
.eh_frame:00000000000069B9                 db  41h ; A
.eh_frame:00000000000069BA                 db  0Bh
.eh_frame:00000000000069BB                 db    0
.eh_frame:00000000000069BC                 db  28h ; (
.eh_frame:00000000000069BD                 db    0
.eh_frame:00000000000069BE                 db    0
.eh_frame:00000000000069BF                 db    0
.eh_frame:00000000000069C0                 db  30h ; 0
.eh_frame:00000000000069C1                 db    8
.eh_frame:00000000000069C2                 db    0
.eh_frame:00000000000069C3                 db    0
.eh_frame:00000000000069C4                 db  5Ch ; \
.eh_frame:00000000000069C5                 db 0DAh
.eh_frame:00000000000069C6                 db 0FFh
.eh_frame:00000000000069C7                 db 0FFh
.eh_frame:00000000000069C8                 db 0D5h
.eh_frame:00000000000069C9                 db    0
.eh_frame:00000000000069CA                 db    0
.eh_frame:00000000000069CB                 db    0
.eh_frame:00000000000069CC                 db    0
.eh_frame:00000000000069CD                 db  41h ; A
.eh_frame:00000000000069CE                 db  0Eh
.eh_frame:00000000000069CF                 db  10h
.eh_frame:00000000000069D0                 db  86h
.eh_frame:00000000000069D1                 db    2
.eh_frame:00000000000069D2                 db  41h ; A
.eh_frame:00000000000069D3                 db  0Eh
.eh_frame:00000000000069D4                 db  18h
.eh_frame:00000000000069D5                 db  83h
.eh_frame:00000000000069D6                 db    3
.eh_frame:00000000000069D7                 db  50h ; P
.eh_frame:00000000000069D8                 db  0Eh
.eh_frame:00000000000069D9                 db 0D0h
.eh_frame:00000000000069DA                 db    1
.eh_frame:00000000000069DB                 db    2
.eh_frame:00000000000069DC                 db 0ABh
.eh_frame:00000000000069DD                 db  0Ah
.eh_frame:00000000000069DE                 db  0Eh
.eh_frame:00000000000069DF                 db  18h
.eh_frame:00000000000069E0                 db  41h ; A
.eh_frame:00000000000069E1                 db  0Eh
.eh_frame:00000000000069E2                 db  10h
.eh_frame:00000000000069E3                 db  41h ; A
.eh_frame:00000000000069E4                 db  0Eh
.eh_frame:00000000000069E5                 db    8
.eh_frame:00000000000069E6                 db  41h ; A
.eh_frame:00000000000069E7                 db  0Bh
.eh_frame:00000000000069E8                 db  1Ch
.eh_frame:00000000000069E9                 db    0
.eh_frame:00000000000069EA                 db    0
.eh_frame:00000000000069EB                 db    0
.eh_frame:00000000000069EC                 db  5Ch ; \
.eh_frame:00000000000069ED                 db    8
.eh_frame:00000000000069EE                 db    0
.eh_frame:00000000000069EF                 db    0
.eh_frame:00000000000069F0                 db  10h
.eh_frame:00000000000069F1                 db 0DBh
.eh_frame:00000000000069F2                 db 0FFh
.eh_frame:00000000000069F3                 db 0FFh
.eh_frame:00000000000069F4                 db  80h
.eh_frame:00000000000069F5                 db    0
.eh_frame:00000000000069F6                 db    0
.eh_frame:00000000000069F7                 db    0
.eh_frame:00000000000069F8                 db    0
.eh_frame:00000000000069F9                 db  41h ; A
.eh_frame:00000000000069FA                 db  0Eh
.eh_frame:00000000000069FB                 db  10h
.eh_frame:00000000000069FC                 db  83h
.eh_frame:00000000000069FD                 db    2
.eh_frame:00000000000069FE                 db    2
.eh_frame:00000000000069FF                 db  7Ah ; z
.eh_frame:0000000000006A00                 db  0Eh
.eh_frame:0000000000006A01                 db    8
.eh_frame:0000000000006A02                 db    0
.eh_frame:0000000000006A03                 db    0
.eh_frame:0000000000006A04                 db    0
.eh_frame:0000000000006A05                 db    0
.eh_frame:0000000000006A06                 db    0
.eh_frame:0000000000006A07                 db    0
.eh_frame:0000000000006A08                 db  18h
.eh_frame:0000000000006A09                 db    0
.eh_frame:0000000000006A0A                 db    0
.eh_frame:0000000000006A0B                 db    0
.eh_frame:0000000000006A0C                 db  7Ch ; |
.eh_frame:0000000000006A0D                 db    8
.eh_frame:0000000000006A0E                 db    0
.eh_frame:0000000000006A0F                 db    0
.eh_frame:0000000000006A10                 db  70h ; p
.eh_frame:0000000000006A11                 db 0DBh
.eh_frame:0000000000006A12                 db 0FFh
.eh_frame:0000000000006A13                 db 0FFh
.eh_frame:0000000000006A14                 db  1Ah
.eh_frame:0000000000006A15                 db    0
.eh_frame:0000000000006A16                 db    0
.eh_frame:0000000000006A17                 db    0
.eh_frame:0000000000006A18                 db    0
.eh_frame:0000000000006A19                 db  41h ; A
.eh_frame:0000000000006A1A                 db  0Eh
.eh_frame:0000000000006A1B                 db  10h
.eh_frame:0000000000006A1C                 db  83h
.eh_frame:0000000000006A1D                 db    2
.eh_frame:0000000000006A1E                 db  53h ; S
.eh_frame:0000000000006A1F                 db  0Ah
.eh_frame:0000000000006A20                 db  0Eh
.eh_frame:0000000000006A21                 db    8
.eh_frame:0000000000006A22                 db  41h ; A
.eh_frame:0000000000006A23                 db  0Bh
.eh_frame:0000000000006A24                 db  10h
.eh_frame:0000000000006A25                 db    0
.eh_frame:0000000000006A26                 db    0
.eh_frame:0000000000006A27                 db    0
.eh_frame:0000000000006A28                 db  98h
.eh_frame:0000000000006A29                 db    8
.eh_frame:0000000000006A2A                 db    0
.eh_frame:0000000000006A2B                 db    0
.eh_frame:0000000000006A2C                 db  74h ; t
.eh_frame:0000000000006A2D                 db 0DBh
.eh_frame:0000000000006A2E                 db 0FFh
.eh_frame:0000000000006A2F                 db 0FFh
.eh_frame:0000000000006A30                 db  24h ; $
.eh_frame:0000000000006A31                 db    0
.eh_frame:0000000000006A32                 db    0
.eh_frame:0000000000006A33                 db    0
.eh_frame:0000000000006A34                 db    0
.eh_frame:0000000000006A35                 db  5Fh ; _
.eh_frame:0000000000006A36                 db  0Eh
.eh_frame:0000000000006A37                 db  10h
.eh_frame:0000000000006A38                 db  10h
.eh_frame:0000000000006A39                 db    0
.eh_frame:0000000000006A3A                 db    0
.eh_frame:0000000000006A3B                 db    0
.eh_frame:0000000000006A3C                 db 0ACh
.eh_frame:0000000000006A3D                 db    8
.eh_frame:0000000000006A3E                 db    0
.eh_frame:0000000000006A3F                 db    0
.eh_frame:0000000000006A40                 db  90h
.eh_frame:0000000000006A41                 db 0DBh
.eh_frame:0000000000006A42                 db 0FFh
.eh_frame:0000000000006A43                 db 0FFh
.eh_frame:0000000000006A44                 db    2
.eh_frame:0000000000006A45                 db    0
.eh_frame:0000000000006A46                 db    0
.eh_frame:0000000000006A47                 db    0
.eh_frame:0000000000006A48                 db    0
.eh_frame:0000000000006A49                 db    0
.eh_frame:0000000000006A4A                 db    0
.eh_frame:0000000000006A4B                 db    0
.eh_frame:0000000000006A4C                 db  20h
.eh_frame:0000000000006A4D                 db    0
.eh_frame:0000000000006A4E                 db    0
.eh_frame:0000000000006A4F                 db    0
.eh_frame:0000000000006A50                 db 0C0h
.eh_frame:0000000000006A51                 db    8
.eh_frame:0000000000006A52                 db    0
.eh_frame:0000000000006A53                 db    0
.eh_frame:0000000000006A54                 db  8Ch
.eh_frame:0000000000006A55                 db 0DBh
.eh_frame:0000000000006A56                 db 0FFh
.eh_frame:0000000000006A57                 db 0FFh
.eh_frame:0000000000006A58                 db  36h ; 6
.eh_frame:0000000000006A59                 db    0
.eh_frame:0000000000006A5A                 db    0
.eh_frame:0000000000006A5B                 db    0
.eh_frame:0000000000006A5C                 db    0
.eh_frame:0000000000006A5D                 db  44h ; D
.eh_frame:0000000000006A5E                 db  0Eh
.eh_frame:0000000000006A5F                 db  10h
.eh_frame:0000000000006A60                 db  83h
.eh_frame:0000000000006A61                 db    2
.eh_frame:0000000000006A62                 db  5Dh ; ]
.eh_frame:0000000000006A63                 db  0Ah
.eh_frame:0000000000006A64                 db  0Eh
.eh_frame:0000000000006A65                 db    8
.eh_frame:0000000000006A66                 db  47h ; G
.eh_frame:0000000000006A67                 db  0Bh
.eh_frame:0000000000006A68                 db  48h ; H
.eh_frame:0000000000006A69                 db  0Ah
.eh_frame:0000000000006A6A                 db  0Eh
.eh_frame:0000000000006A6B                 db    8
.eh_frame:0000000000006A6C                 db  41h ; A
.eh_frame:0000000000006A6D                 db  0Bh
.eh_frame:0000000000006A6E                 db    0
.eh_frame:0000000000006A6F                 db    0
.eh_frame:0000000000006A70                 db  10h
.eh_frame:0000000000006A71                 db    0
.eh_frame:0000000000006A72                 db    0
.eh_frame:0000000000006A73                 db    0
.eh_frame:0000000000006A74                 db 0E4h
.eh_frame:0000000000006A75                 db    8
.eh_frame:0000000000006A76                 db    0
.eh_frame:0000000000006A77                 db    0
.eh_frame:0000000000006A78                 db 0A8h
.eh_frame:0000000000006A79                 db 0DBh
.eh_frame:0000000000006A7A                 db 0FFh
.eh_frame:0000000000006A7B                 db 0FFh
.eh_frame:0000000000006A7C                 db  24h ; $
.eh_frame:0000000000006A7D                 db    0
.eh_frame:0000000000006A7E                 db    0
.eh_frame:0000000000006A7F                 db    0
.eh_frame:0000000000006A80                 db    0
.eh_frame:0000000000006A81                 db  5Fh ; _
.eh_frame:0000000000006A82                 db  0Eh
.eh_frame:0000000000006A83                 db  10h
.eh_frame:0000000000006A84                 db  14h
.eh_frame:0000000000006A85                 db    0
.eh_frame:0000000000006A86                 db    0
.eh_frame:0000000000006A87                 db    0
.eh_frame:0000000000006A88                 db 0F8h
.eh_frame:0000000000006A89                 db    8
.eh_frame:0000000000006A8A                 db    0
.eh_frame:0000000000006A8B                 db    0
.eh_frame:0000000000006A8C                 db 0C4h
.eh_frame:0000000000006A8D                 db 0DBh
.eh_frame:0000000000006A8E                 db 0FFh
.eh_frame:0000000000006A8F                 db 0FFh
.eh_frame:0000000000006A90                 db  82h
.eh_frame:0000000000006A91                 db    0
.eh_frame:0000000000006A92                 db    0
.eh_frame:0000000000006A93                 db    0
.eh_frame:0000000000006A94                 db    0
.eh_frame:0000000000006A95                 db    2
.eh_frame:0000000000006A96                 db  5Fh ; _
.eh_frame:0000000000006A97                 db  0Eh
.eh_frame:0000000000006A98                 db  10h
.eh_frame:0000000000006A99                 db  49h ; I
.eh_frame:0000000000006A9A                 db  0Eh
.eh_frame:0000000000006A9B                 db    8
.eh_frame:0000000000006A9C                 db  14h
.eh_frame:0000000000006A9D                 db    0
.eh_frame:0000000000006A9E                 db    0
.eh_frame:0000000000006A9F                 db    0
.eh_frame:0000000000006AA0                 db  10h
.eh_frame:0000000000006AA1                 db    9
.eh_frame:0000000000006AA2                 db    0
.eh_frame:0000000000006AA3                 db    0
.eh_frame:0000000000006AA4                 db  3Ch ; <
.eh_frame:0000000000006AA5                 db 0DCh
.eh_frame:0000000000006AA6                 db 0FFh
.eh_frame:0000000000006AA7                 db 0FFh
.eh_frame:0000000000006AA8                 db  4Ah ; J
.eh_frame:0000000000006AA9                 db    0
.eh_frame:0000000000006AAA                 db    0
.eh_frame:0000000000006AAB                 db    0
.eh_frame:0000000000006AAC                 db    0
.eh_frame:0000000000006AAD                 db    2
.eh_frame:0000000000006AAE                 db  45h ; E
.eh_frame:0000000000006AAF                 db  0Eh
.eh_frame:0000000000006AB0                 db  10h
.eh_frame:0000000000006AB1                 db    0
.eh_frame:0000000000006AB2                 db    0
.eh_frame:0000000000006AB3                 db    0
.eh_frame:0000000000006AB4                 db  18h
.eh_frame:0000000000006AB5                 db    0
.eh_frame:0000000000006AB6                 db    0
.eh_frame:0000000000006AB7                 db    0
.eh_frame:0000000000006AB8                 db  28h ; (
.eh_frame:0000000000006AB9                 db    9
.eh_frame:0000000000006ABA                 db    0
.eh_frame:0000000000006ABB                 db    0
.eh_frame:0000000000006ABC                 db  74h ; t
.eh_frame:0000000000006ABD                 db 0DCh
.eh_frame:0000000000006ABE                 db 0FFh
.eh_frame:0000000000006ABF                 db 0FFh
.eh_frame:0000000000006AC0                 db  17h
.eh_frame:0000000000006AC1                 db    0
.eh_frame:0000000000006AC2                 db    0
.eh_frame:0000000000006AC3                 db    0
.eh_frame:0000000000006AC4                 db    0
.eh_frame:0000000000006AC5                 db  41h ; A
.eh_frame:0000000000006AC6                 db  0Eh
.eh_frame:0000000000006AC7                 db  10h
.eh_frame:0000000000006AC8                 db  83h
.eh_frame:0000000000006AC9                 db    2
.eh_frame:0000000000006ACA                 db  51h ; Q
.eh_frame:0000000000006ACB                 db  0Eh
.eh_frame:0000000000006ACC                 db    8
.eh_frame:0000000000006ACD                 db    0
.eh_frame:0000000000006ACE                 db    0
.eh_frame:0000000000006ACF                 db    0
.eh_frame:0000000000006AD0                 db  18h
.eh_frame:0000000000006AD1                 db    0
.eh_frame:0000000000006AD2                 db    0
.eh_frame:0000000000006AD3                 db    0
.eh_frame:0000000000006AD4                 db  44h ; D
.eh_frame:0000000000006AD5                 db    9
.eh_frame:0000000000006AD6                 db    0
.eh_frame:0000000000006AD7                 db    0
.eh_frame:0000000000006AD8                 db  78h ; x
.eh_frame:0000000000006AD9                 db 0DCh
.eh_frame:0000000000006ADA                 db 0FFh
.eh_frame:0000000000006ADB                 db 0FFh
.eh_frame:0000000000006ADC                 db  2Eh ; .
.eh_frame:0000000000006ADD                 db    0
.eh_frame:0000000000006ADE                 db    0
.eh_frame:0000000000006ADF                 db    0
.eh_frame:0000000000006AE0                 db    0
.eh_frame:0000000000006AE1                 db  47h ; G
.eh_frame:0000000000006AE2                 db  0Eh
.eh_frame:0000000000006AE3                 db  10h
.eh_frame:0000000000006AE4                 db  61h ; a
.eh_frame:0000000000006AE5                 db  0Ah
.eh_frame:0000000000006AE6                 db  0Eh
.eh_frame:0000000000006AE7                 db    8
.eh_frame:0000000000006AE8                 db  41h ; A
.eh_frame:0000000000006AE9                 db  0Bh
.eh_frame:0000000000006AEA                 db    0
.eh_frame:0000000000006AEB                 db    0
.eh_frame:0000000000006AEC                 db  24h ; $
.eh_frame:0000000000006AED                 db    0
.eh_frame:0000000000006AEE                 db    0
.eh_frame:0000000000006AEF                 db    0
.eh_frame:0000000000006AF0                 db  60h ; `
.eh_frame:0000000000006AF1                 db    9
.eh_frame:0000000000006AF2                 db    0
.eh_frame:0000000000006AF3                 db    0
.eh_frame:0000000000006AF4                 db  8Ch
.eh_frame:0000000000006AF5                 db 0DCh
.eh_frame:0000000000006AF6                 db 0FFh
.eh_frame:0000000000006AF7                 db 0FFh
.eh_frame:0000000000006AF8                 db  28h ; (
.eh_frame:0000000000006AF9                 db    0
.eh_frame:0000000000006AFA                 db    0
.eh_frame:0000000000006AFB                 db    0
.eh_frame:0000000000006AFC                 db    0
.eh_frame:0000000000006AFD                 db  41h ; A
.eh_frame:0000000000006AFE                 db  0Eh
.eh_frame:0000000000006AFF                 db  10h
.eh_frame:0000000000006B00                 db  86h
.eh_frame:0000000000006B01                 db    2
.eh_frame:0000000000006B02                 db  41h ; A
.eh_frame:0000000000006B03                 db  0Eh
.eh_frame:0000000000006B04                 db  18h
.eh_frame:0000000000006B05                 db  83h
.eh_frame:0000000000006B06                 db    3
.eh_frame:0000000000006B07                 db  4Dh ; M
.eh_frame:0000000000006B08                 db  0Eh
.eh_frame:0000000000006B09                 db  20h
.eh_frame:0000000000006B0A                 db  49h ; I
.eh_frame:0000000000006B0B                 db  0Eh
.eh_frame:0000000000006B0C                 db  18h
.eh_frame:0000000000006B0D                 db  47h ; G
.eh_frame:0000000000006B0E                 db  0Eh
.eh_frame:0000000000006B0F                 db  10h
.eh_frame:0000000000006B10                 db  41h ; A
.eh_frame:0000000000006B11                 db  0Eh
.eh_frame:0000000000006B12                 db    8
.eh_frame:0000000000006B13                 db    0
.eh_frame:0000000000006B14                 db  18h
.eh_frame:0000000000006B15                 db    0
.eh_frame:0000000000006B16                 db    0
.eh_frame:0000000000006B17                 db    0
.eh_frame:0000000000006B18                 db  88h
.eh_frame:0000000000006B19                 db    9
.eh_frame:0000000000006B1A                 db    0
.eh_frame:0000000000006B1B                 db    0
.eh_frame:0000000000006B1C                 db  94h
.eh_frame:0000000000006B1D                 db 0DCh
.eh_frame:0000000000006B1E                 db 0FFh
.eh_frame:0000000000006B1F                 db 0FFh
.eh_frame:0000000000006B20                 db  13h
.eh_frame:0000000000006B21                 db    0
.eh_frame:0000000000006B22                 db    0
.eh_frame:0000000000006B23                 db    0
.eh_frame:0000000000006B24                 db    0
.eh_frame:0000000000006B25                 db  41h ; A
.eh_frame:0000000000006B26                 db  0Eh
.eh_frame:0000000000006B27                 db  10h
.eh_frame:0000000000006B28                 db  83h
.eh_frame:0000000000006B29                 db    2
.eh_frame:0000000000006B2A                 db  50h ; P
.eh_frame:0000000000006B2B                 db  0Eh
.eh_frame:0000000000006B2C                 db    8
.eh_frame:0000000000006B2D                 db    0
.eh_frame:0000000000006B2E                 db    0
.eh_frame:0000000000006B2F                 db    0
.eh_frame:0000000000006B30                 db  14h
.eh_frame:0000000000006B31                 db    0
.eh_frame:0000000000006B32                 db    0
.eh_frame:0000000000006B33                 db    0
.eh_frame:0000000000006B34                 db 0A4h
.eh_frame:0000000000006B35                 db    9
.eh_frame:0000000000006B36                 db    0
.eh_frame:0000000000006B37                 db    0
.eh_frame:0000000000006B38                 db  98h
.eh_frame:0000000000006B39                 db 0DCh
.eh_frame:0000000000006B3A                 db 0FFh
.eh_frame:0000000000006B3B                 db 0FFh
.eh_frame:0000000000006B3C                 db  35h ; 5
.eh_frame:0000000000006B3D                 db    0
.eh_frame:0000000000006B3E                 db    0
.eh_frame:0000000000006B3F                 db    0
.eh_frame:0000000000006B40                 db    0
.eh_frame:0000000000006B41                 db  4Bh ; K
.eh_frame:0000000000006B42                 db  0Eh
.eh_frame:0000000000006B43                 db  10h
.eh_frame:0000000000006B44                 db    0
.eh_frame:0000000000006B45                 db    0
.eh_frame:0000000000006B46                 db    0
.eh_frame:0000000000006B47                 db    0
.eh_frame:0000000000006B48                 db  34h ; 4
.eh_frame:0000000000006B49                 db    0
.eh_frame:0000000000006B4A                 db    0
.eh_frame:0000000000006B4B                 db    0
.eh_frame:0000000000006B4C                 db 0BCh
.eh_frame:0000000000006B4D                 db    9
.eh_frame:0000000000006B4E                 db    0
.eh_frame:0000000000006B4F                 db    0
.eh_frame:0000000000006B50                 db 0C0h
.eh_frame:0000000000006B51                 db 0DCh
.eh_frame:0000000000006B52                 db 0FFh
.eh_frame:0000000000006B53                 db 0FFh
.eh_frame:0000000000006B54                 db  7Bh ; {
.eh_frame:0000000000006B55                 db    0
.eh_frame:0000000000006B56                 db    0
.eh_frame:0000000000006B57                 db    0
.eh_frame:0000000000006B58                 db    0
.eh_frame:0000000000006B59                 db  42h ; B
.eh_frame:0000000000006B5A                 db  0Eh
.eh_frame:0000000000006B5B                 db  10h
.eh_frame:0000000000006B5C                 db  8Ch
.eh_frame:0000000000006B5D                 db    2
.eh_frame:0000000000006B5E                 db  41h ; A
.eh_frame:0000000000006B5F                 db  0Eh
.eh_frame:0000000000006B60                 db  18h
.eh_frame:0000000000006B61                 db  86h
.eh_frame:0000000000006B62                 db    3
.eh_frame:0000000000006B63                 db  41h ; A
.eh_frame:0000000000006B64                 db  0Eh
.eh_frame:0000000000006B65                 db  20h
.eh_frame:0000000000006B66                 db  83h
.eh_frame:0000000000006B67                 db    4
.eh_frame:0000000000006B68                 db  7Dh ; }
.eh_frame:0000000000006B69                 db  0Ah
.eh_frame:0000000000006B6A                 db  0Eh
.eh_frame:0000000000006B6B                 db  18h
.eh_frame:0000000000006B6C                 db  41h ; A
.eh_frame:0000000000006B6D                 db  0Eh
.eh_frame:0000000000006B6E                 db  10h
.eh_frame:0000000000006B6F                 db  42h ; B
.eh_frame:0000000000006B70                 db  0Eh
.eh_frame:0000000000006B71                 db    8
.eh_frame:0000000000006B72                 db  44h ; D
.eh_frame:0000000000006B73                 db  0Bh
.eh_frame:0000000000006B74                 db  60h ; `
.eh_frame:0000000000006B75                 db  0Ah
.eh_frame:0000000000006B76                 db  0Eh
.eh_frame:0000000000006B77                 db  18h
.eh_frame:0000000000006B78                 db  41h ; A
.eh_frame:0000000000006B79                 db  0Eh
.eh_frame:0000000000006B7A                 db  10h
.eh_frame:0000000000006B7B                 db  42h ; B
.eh_frame:0000000000006B7C                 db  0Eh
.eh_frame:0000000000006B7D                 db    8
.eh_frame:0000000000006B7E                 db  45h ; E
.eh_frame:0000000000006B7F                 db  0Bh
.eh_frame:0000000000006B80                 db  1Ch
.eh_frame:0000000000006B81                 db    0
.eh_frame:0000000000006B82                 db    0
.eh_frame:0000000000006B83                 db    0
.eh_frame:0000000000006B84                 db 0F4h
.eh_frame:0000000000006B85                 db    9
.eh_frame:0000000000006B86                 db    0
.eh_frame:0000000000006B87                 db    0
.eh_frame:0000000000006B88                 db    8
.eh_frame:0000000000006B89                 db 0DDh
.eh_frame:0000000000006B8A                 db 0FFh
.eh_frame:0000000000006B8B                 db 0FFh
.eh_frame:0000000000006B8C                 db  40h ; @
.eh_frame:0000000000006B8D                 db    0
.eh_frame:0000000000006B8E                 db    0
.eh_frame:0000000000006B8F                 db    0
.eh_frame:0000000000006B90                 db    0
.eh_frame:0000000000006B91                 db  44h ; D
.eh_frame:0000000000006B92                 db  0Eh
.eh_frame:0000000000006B93                 db  10h
.eh_frame:0000000000006B94                 db  83h
.eh_frame:0000000000006B95                 db    2
.eh_frame:0000000000006B96                 db  5Ah ; Z
.eh_frame:0000000000006B97                 db  0Ah
.eh_frame:0000000000006B98                 db  0Eh
.eh_frame:0000000000006B99                 db    8
.eh_frame:0000000000006B9A                 db  4Ah ; J
.eh_frame:0000000000006B9B                 db  0Bh
.eh_frame:0000000000006B9C                 db  53h ; S
.eh_frame:0000000000006B9D                 db  0Eh
.eh_frame:0000000000006B9E                 db    8
.eh_frame:0000000000006B9F                 db    0
.eh_frame:0000000000006BA0                 db  2Ch ; ,
.eh_frame:0000000000006BA1                 db    0
.eh_frame:0000000000006BA2                 db    0
.eh_frame:0000000000006BA3                 db    0
.eh_frame:0000000000006BA4                 db  14h
.eh_frame:0000000000006BA5                 db  0Ah
.eh_frame:0000000000006BA6                 db    0
.eh_frame:0000000000006BA7                 db    0
.eh_frame:0000000000006BA8                 db  28h ; (
.eh_frame:0000000000006BA9                 db 0DDh
.eh_frame:0000000000006BAA                 db 0FFh
.eh_frame:0000000000006BAB                 db 0FFh
.eh_frame:0000000000006BAC                 db  57h ; W
.eh_frame:0000000000006BAD                 db    0
.eh_frame:0000000000006BAE                 db    0
.eh_frame:0000000000006BAF                 db    0
.eh_frame:0000000000006BB0                 db    0
.eh_frame:0000000000006BB1                 db  63h ; c
.eh_frame:0000000000006BB2                 db  0Eh
.eh_frame:0000000000006BB3                 db  10h
.eh_frame:0000000000006BB4                 db  8Ch
.eh_frame:0000000000006BB5                 db    2
.eh_frame:0000000000006BB6                 db  41h ; A
.eh_frame:0000000000006BB7                 db  0Eh
.eh_frame:0000000000006BB8                 db  18h
.eh_frame:0000000000006BB9                 db  86h
.eh_frame:0000000000006BBA                 db    3
.eh_frame:0000000000006BBB                 db  44h ; D
.eh_frame:0000000000006BBC                 db  0Eh
.eh_frame:0000000000006BBD                 db  20h
.eh_frame:0000000000006BBE                 db  83h
.eh_frame:0000000000006BBF                 db    4
.eh_frame:0000000000006BC0                 db  6Bh ; k
.eh_frame:0000000000006BC1                 db  0Eh
.eh_frame:0000000000006BC2                 db  18h
.eh_frame:0000000000006BC3                 db  41h ; A
.eh_frame:0000000000006BC4                 db  0Eh
.eh_frame:0000000000006BC5                 db  10h
.eh_frame:0000000000006BC6                 db  42h ; B
.eh_frame:0000000000006BC7                 db  0Eh
.eh_frame:0000000000006BC8                 db    8
.eh_frame:0000000000006BC9                 db    0
.eh_frame:0000000000006BCA                 db    0
.eh_frame:0000000000006BCB                 db    0
.eh_frame:0000000000006BCC                 db    0
.eh_frame:0000000000006BCD                 db    0
.eh_frame:0000000000006BCE                 db    0
.eh_frame:0000000000006BCF                 db    0
.eh_frame:0000000000006BD0                 db  3Ch ; <
.eh_frame:0000000000006BD1                 db    0
.eh_frame:0000000000006BD2                 db    0
.eh_frame:0000000000006BD3                 db    0
.eh_frame:0000000000006BD4                 db  44h ; D
.eh_frame:0000000000006BD5                 db  0Ah
.eh_frame:0000000000006BD6                 db    0
.eh_frame:0000000000006BD7                 db    0
.eh_frame:0000000000006BD8                 db  58h ; X
.eh_frame:0000000000006BD9                 db 0DDh
.eh_frame:0000000000006BDA                 db 0FFh
.eh_frame:0000000000006BDB                 db 0FFh
.eh_frame:0000000000006BDC                 db  83h
.eh_frame:0000000000006BDD                 db    0
.eh_frame:0000000000006BDE                 db    0
.eh_frame:0000000000006BDF                 db    0
.eh_frame:0000000000006BE0                 db    0
.eh_frame:0000000000006BE1                 db  42h ; B
.eh_frame:0000000000006BE2                 db  0Eh
.eh_frame:0000000000006BE3                 db  10h
.eh_frame:0000000000006BE4                 db  8Dh
.eh_frame:0000000000006BE5                 db    2
.eh_frame:0000000000006BE6                 db  42h ; B
.eh_frame:0000000000006BE7                 db  0Eh
.eh_frame:0000000000006BE8                 db  18h
.eh_frame:0000000000006BE9                 db  8Ch
.eh_frame:0000000000006BEA                 db    3
.eh_frame:0000000000006BEB                 db  44h ; D
.eh_frame:0000000000006BEC                 db  0Eh
.eh_frame:0000000000006BED                 db  20h
.eh_frame:0000000000006BEE                 db  86h
.eh_frame:0000000000006BEF                 db    4
.eh_frame:0000000000006BF0                 db  41h ; A
.eh_frame:0000000000006BF1                 db  0Eh
.eh_frame:0000000000006BF2                 db  28h ; (
.eh_frame:0000000000006BF3                 db  83h
.eh_frame:0000000000006BF4                 db    5
.eh_frame:0000000000006BF5                 db  4Ah ; J
.eh_frame:0000000000006BF6                 db  0Eh
.eh_frame:0000000000006BF7                 db  40h ; @
.eh_frame:0000000000006BF8                 db    2
.eh_frame:0000000000006BF9                 db  64h ; d
.eh_frame:0000000000006BFA                 db  0Ah
.eh_frame:0000000000006BFB                 db  0Eh
.eh_frame:0000000000006BFC                 db  28h ; (
.eh_frame:0000000000006BFD                 db  41h ; A
.eh_frame:0000000000006BFE                 db  0Eh
.eh_frame:0000000000006BFF                 db  20h
.eh_frame:0000000000006C00                 db  41h ; A
.eh_frame:0000000000006C01                 db  0Eh
.eh_frame:0000000000006C02                 db  18h
.eh_frame:0000000000006C03                 db  42h ; B
.eh_frame:0000000000006C04                 db  0Eh
.eh_frame:0000000000006C05                 db  10h
.eh_frame:0000000000006C06                 db  42h ; B
.eh_frame:0000000000006C07                 db  0Eh
.eh_frame:0000000000006C08                 db    8
.eh_frame:0000000000006C09                 db  41h ; A
.eh_frame:0000000000006C0A                 db  0Bh
.eh_frame:0000000000006C0B                 db    0
.eh_frame:0000000000006C0C                 db    0
.eh_frame:0000000000006C0D                 db    0
.eh_frame:0000000000006C0E                 db    0
.eh_frame:0000000000006C0F                 db    0
.eh_frame:0000000000006C10                 db  4Ch ; L
.eh_frame:0000000000006C11                 db    0
.eh_frame:0000000000006C12                 db    0
.eh_frame:0000000000006C13                 db    0
.eh_frame:0000000000006C14                 db  84h
.eh_frame:0000000000006C15                 db  0Ah
.eh_frame:0000000000006C16                 db    0
.eh_frame:0000000000006C17                 db    0
.eh_frame:0000000000006C18                 db 0A8h
.eh_frame:0000000000006C19                 db 0DDh
.eh_frame:0000000000006C1A                 db 0FFh
.eh_frame:0000000000006C1B                 db 0FFh
.eh_frame:0000000000006C1C                 db  7Dh ; }
.eh_frame:0000000000006C1D                 db    0
.eh_frame:0000000000006C1E                 db    0
.eh_frame:0000000000006C1F                 db    0
.eh_frame:0000000000006C20                 db    0
.eh_frame:0000000000006C21                 db  42h ; B
.eh_frame:0000000000006C22                 db  0Eh
.eh_frame:0000000000006C23                 db  10h
.eh_frame:0000000000006C24                 db  8Ch
.eh_frame:0000000000006C25                 db    2
.eh_frame:0000000000006C26                 db  41h ; A
.eh_frame:0000000000006C27                 db  0Eh
.eh_frame:0000000000006C28                 db  18h
.eh_frame:0000000000006C29                 db  86h
.eh_frame:0000000000006C2A                 db    3
.eh_frame:0000000000006C2B                 db  44h ; D
.eh_frame:0000000000006C2C                 db  0Eh
.eh_frame:0000000000006C2D                 db  20h
.eh_frame:0000000000006C2E                 db  83h
.eh_frame:0000000000006C2F                 db    4
.eh_frame:0000000000006C30                 db  69h ; i
.eh_frame:0000000000006C31                 db  0Ah
.eh_frame:0000000000006C32                 db  0Eh
.eh_frame:0000000000006C33                 db  18h
.eh_frame:0000000000006C34                 db  41h ; A
.eh_frame:0000000000006C35                 db  0Eh
.eh_frame:0000000000006C36                 db  10h
.eh_frame:0000000000006C37                 db  42h ; B
.eh_frame:0000000000006C38                 db  0Eh
.eh_frame:0000000000006C39                 db    8
.eh_frame:0000000000006C3A                 db  45h ; E
.eh_frame:0000000000006C3B                 db  0Bh
.eh_frame:0000000000006C3C                 db  55h ; U
.eh_frame:0000000000006C3D                 db  0Ah
.eh_frame:0000000000006C3E                 db  0Eh
.eh_frame:0000000000006C3F                 db  18h
.eh_frame:0000000000006C40                 db  41h ; A
.eh_frame:0000000000006C41                 db  0Eh
.eh_frame:0000000000006C42                 db  10h
.eh_frame:0000000000006C43                 db  42h ; B
.eh_frame:0000000000006C44                 db  0Eh
.eh_frame:0000000000006C45                 db    8
.eh_frame:0000000000006C46                 db  48h ; H
.eh_frame:0000000000006C47                 db  0Bh
.eh_frame:0000000000006C48                 db  41h ; A
.eh_frame:0000000000006C49                 db  0Ah
.eh_frame:0000000000006C4A                 db  0Eh
.eh_frame:0000000000006C4B                 db  18h
.eh_frame:0000000000006C4C                 db  46h ; F
.eh_frame:0000000000006C4D                 db  0Eh
.eh_frame:0000000000006C4E                 db  10h
.eh_frame:0000000000006C4F                 db  42h ; B
.eh_frame:0000000000006C50                 db  0Eh
.eh_frame:0000000000006C51                 db    8
.eh_frame:0000000000006C52                 db  47h ; G
.eh_frame:0000000000006C53                 db  0Bh
.eh_frame:0000000000006C54                 db  49h ; I
.eh_frame:0000000000006C55                 db  0Eh
.eh_frame:0000000000006C56                 db  18h
.eh_frame:0000000000006C57                 db  41h ; A
.eh_frame:0000000000006C58                 db  0Eh
.eh_frame:0000000000006C59                 db  10h
.eh_frame:0000000000006C5A                 db  42h ; B
.eh_frame:0000000000006C5B                 db  0Eh
.eh_frame:0000000000006C5C                 db    8
.eh_frame:0000000000006C5D                 db    0
.eh_frame:0000000000006C5E                 db    0
.eh_frame:0000000000006C5F                 db    0
.eh_frame:0000000000006C60                 db  1Ch
.eh_frame:0000000000006C61                 db    0
.eh_frame:0000000000006C62                 db    0
.eh_frame:0000000000006C63                 db    0
.eh_frame:0000000000006C64                 db 0D4h
.eh_frame:0000000000006C65                 db  0Ah
.eh_frame:0000000000006C66                 db    0
.eh_frame:0000000000006C67                 db    0
.eh_frame:0000000000006C68                 db 0D8h
.eh_frame:0000000000006C69                 db 0DDh
.eh_frame:0000000000006C6A                 db 0FFh
.eh_frame:0000000000006C6B                 db 0FFh
.eh_frame:0000000000006C6C                 db  60h ; `
.eh_frame:0000000000006C6D                 db    0
.eh_frame:0000000000006C6E                 db    0
.eh_frame:0000000000006C6F                 db    0
.eh_frame:0000000000006C70                 db    0
.eh_frame:0000000000006C71                 db  44h ; D
.eh_frame:0000000000006C72                 db  0Eh
.eh_frame:0000000000006C73                 db  10h
.eh_frame:0000000000006C74                 db  75h ; u
.eh_frame:0000000000006C75                 db  0Ah
.eh_frame:0000000000006C76                 db  0Eh
.eh_frame:0000000000006C77                 db    8
.eh_frame:0000000000006C78                 db  47h ; G
.eh_frame:0000000000006C79                 db  0Bh
.eh_frame:0000000000006C7A                 db  5Fh ; _
.eh_frame:0000000000006C7B                 db  0Eh
.eh_frame:0000000000006C7C                 db    8
.eh_frame:0000000000006C7D                 db    0
.eh_frame:0000000000006C7E                 db    0
.eh_frame:0000000000006C7F                 db    0
.eh_frame:0000000000006C80                 db  1Ch
.eh_frame:0000000000006C81                 db    0
.eh_frame:0000000000006C82                 db    0
.eh_frame:0000000000006C83                 db    0
.eh_frame:0000000000006C84                 db 0F4h
.eh_frame:0000000000006C85                 db  0Ah
.eh_frame:0000000000006C86                 db    0
.eh_frame:0000000000006C87                 db    0
.eh_frame:0000000000006C88                 db  18h
.eh_frame:0000000000006C89                 db 0DEh
.eh_frame:0000000000006C8A                 db 0FFh
.eh_frame:0000000000006C8B                 db 0FFh
.eh_frame:0000000000006C8C                 db  3Ch ; <
.eh_frame:0000000000006C8D                 db    0
.eh_frame:0000000000006C8E                 db    0
.eh_frame:0000000000006C8F                 db    0
.eh_frame:0000000000006C90                 db    0
.eh_frame:0000000000006C91                 db  44h ; D
.eh_frame:0000000000006C92                 db  0Eh
.eh_frame:0000000000006C93                 db  10h
.eh_frame:0000000000006C94                 db  61h ; a
.eh_frame:0000000000006C95                 db  0Ah
.eh_frame:0000000000006C96                 db  0Eh
.eh_frame:0000000000006C97                 db    8
.eh_frame:0000000000006C98                 db  4Bh ; K
.eh_frame:0000000000006C99                 db  0Bh
.eh_frame:0000000000006C9A                 db  4Bh ; K
.eh_frame:0000000000006C9B                 db  0Eh
.eh_frame:0000000000006C9C                 db    8
.eh_frame:0000000000006C9D                 db    0
.eh_frame:0000000000006C9E                 db    0
.eh_frame:0000000000006C9F                 db    0
.eh_frame:0000000000006CA0                 db  44h ; D
.eh_frame:0000000000006CA1                 db    0
.eh_frame:0000000000006CA2                 db    0
.eh_frame:0000000000006CA3                 db    0
.eh_frame:0000000000006CA4                 db  14h
.eh_frame:0000000000006CA5                 db  0Bh
.eh_frame:0000000000006CA6                 db    0
.eh_frame:0000000000006CA7                 db    0
.eh_frame:0000000000006CA8                 db  38h ; 8
.eh_frame:0000000000006CA9                 db 0DEh
.eh_frame:0000000000006CAA                 db 0FFh
.eh_frame:0000000000006CAB                 db 0FFh
.eh_frame:0000000000006CAC                 db  65h ; e
.eh_frame:0000000000006CAD                 db    0
.eh_frame:0000000000006CAE                 db    0
.eh_frame:0000000000006CAF                 db    0
.eh_frame:0000000000006CB0                 db    0
.eh_frame:0000000000006CB1                 db  42h ; B
.eh_frame:0000000000006CB2                 db  0Eh
.eh_frame:0000000000006CB3                 db  10h
.eh_frame:0000000000006CB4                 db  8Fh
.eh_frame:0000000000006CB5                 db    2
.eh_frame:0000000000006CB6                 db  42h ; B
.eh_frame:0000000000006CB7                 db  0Eh
.eh_frame:0000000000006CB8                 db  18h
.eh_frame:0000000000006CB9                 db  8Eh
.eh_frame:0000000000006CBA                 db    3
.eh_frame:0000000000006CBB                 db  45h ; E
.eh_frame:0000000000006CBC                 db  0Eh
.eh_frame:0000000000006CBD                 db  20h
.eh_frame:0000000000006CBE                 db  8Dh
.eh_frame:0000000000006CBF                 db    4
.eh_frame:0000000000006CC0                 db  42h ; B
.eh_frame:0000000000006CC1                 db  0Eh
.eh_frame:0000000000006CC2                 db  28h ; (
.eh_frame:0000000000006CC3                 db  8Ch
.eh_frame:0000000000006CC4                 db    5
.eh_frame:0000000000006CC5                 db  48h ; H
.eh_frame:0000000000006CC6                 db  0Eh
.eh_frame:0000000000006CC7                 db  30h ; 0
.eh_frame:0000000000006CC8                 db  86h
.eh_frame:0000000000006CC9                 db    6
.eh_frame:0000000000006CCA                 db  48h ; H
.eh_frame:0000000000006CCB                 db  0Eh
.eh_frame:0000000000006CCC                 db  38h ; 8
.eh_frame:0000000000006CCD                 db  83h
.eh_frame:0000000000006CCE                 db    7
.eh_frame:0000000000006CCF                 db  4Dh ; M
.eh_frame:0000000000006CD0                 db  0Eh
.eh_frame:0000000000006CD1                 db  40h ; @
.eh_frame:0000000000006CD2                 db  72h ; r
.eh_frame:0000000000006CD3                 db  0Eh
.eh_frame:0000000000006CD4                 db  38h ; 8
.eh_frame:0000000000006CD5                 db  41h ; A
.eh_frame:0000000000006CD6                 db  0Eh
.eh_frame:0000000000006CD7                 db  30h ; 0
.eh_frame:0000000000006CD8                 db  41h ; A
.eh_frame:0000000000006CD9                 db  0Eh
.eh_frame:0000000000006CDA                 db  28h ; (
.eh_frame:0000000000006CDB                 db  42h ; B
.eh_frame:0000000000006CDC                 db  0Eh
.eh_frame:0000000000006CDD                 db  20h
.eh_frame:0000000000006CDE                 db  42h ; B
.eh_frame:0000000000006CDF                 db  0Eh
.eh_frame:0000000000006CE0                 db  18h
.eh_frame:0000000000006CE1                 db  42h ; B
.eh_frame:0000000000006CE2                 db  0Eh
.eh_frame:0000000000006CE3                 db  10h
.eh_frame:0000000000006CE4                 db  42h ; B
.eh_frame:0000000000006CE5                 db  0Eh
.eh_frame:0000000000006CE6                 db    8
.eh_frame:0000000000006CE7                 db    0
.eh_frame:0000000000006CE8                 db  14h
.eh_frame:0000000000006CE9                 db    0
.eh_frame:0000000000006CEA                 db    0
.eh_frame:0000000000006CEB                 db    0
.eh_frame:0000000000006CEC                 db  5Ch ; \
.eh_frame:0000000000006CED                 db  0Bh
.eh_frame:0000000000006CEE                 db    0
.eh_frame:0000000000006CEF                 db    0
.eh_frame:0000000000006CF0                 db  60h ; `
.eh_frame:0000000000006CF1                 db 0DEh
.eh_frame:0000000000006CF2                 db 0FFh
.eh_frame:0000000000006CF3                 db 0FFh
.eh_frame:0000000000006CF4                 db    2
.eh_frame:0000000000006CF5                 db    0
.eh_frame:0000000000006CF6                 db    0
.eh_frame:0000000000006CF7                 db    0
.eh_frame:0000000000006CF8                 db    0
.eh_frame:0000000000006CF9                 db    0
.eh_frame:0000000000006CFA                 db    0
.eh_frame:0000000000006CFB                 db    0
.eh_frame:0000000000006CFC                 db    0
.eh_frame:0000000000006CFD                 db    0
.eh_frame:0000000000006CFE                 db    0
.eh_frame:0000000000006CFF                 db    0
.eh_frame:0000000000006D00                 db  10h
.eh_frame:0000000000006D01                 db    0
.eh_frame:0000000000006D02                 db    0
.eh_frame:0000000000006D03                 db    0
.eh_frame:0000000000006D04                 db  74h ; t
.eh_frame:0000000000006D05                 db  0Bh
.eh_frame:0000000000006D06                 db    0
.eh_frame:0000000000006D07                 db    0
.eh_frame:0000000000006D08                 db  58h ; X
.eh_frame:0000000000006D09                 db 0DEh
.eh_frame:0000000000006D0A                 db 0FFh
.eh_frame:0000000000006D0B                 db 0FFh
.eh_frame:0000000000006D0C                 db  0Eh
.eh_frame:0000000000006D0D                 db    0
.eh_frame:0000000000006D0E                 db    0
.eh_frame:0000000000006D0F                 db    0
.eh_frame:0000000000006D10                 db    0
.eh_frame:0000000000006D11                 db    0
.eh_frame:0000000000006D12                 db    0
.eh_frame:0000000000006D13                 db    0
.eh_frame:0000000000006D14 __FRAME_END__   db    0
.eh_frame:0000000000006D15                 db    0
.eh_frame:0000000000006D16                 db    0
.eh_frame:0000000000006D17                 db    0
.eh_frame:0000000000006D17 _eh_frame       ends
.eh_frame:0000000000006D17
.init_array:0000000000207BB0 ; ELF Initialization Function Table
.init_array:0000000000207BB0 ; ===========================================================================
.init_array:0000000000207BB0
.init_array:0000000000207BB0 ; Segment type: Pure data
.init_array:0000000000207BB0 ; Segment permissions: Read/Write
.init_array:0000000000207BB0 _init_array     segment qword public 'DATA' use64
.init_array:0000000000207BB0                 assume cs:_init_array
.init_array:0000000000207BB0                 ;org 207BB0h
.init_array:0000000000207BB0 __frame_dummy_init_array_entry dq offset frame_dummy
.init_array:0000000000207BB0                                         ; DATA XREF: LOAD:00000000000000F8↑o
.init_array:0000000000207BB0                                         ; LOAD:0000000000000210↑o ...
.init_array:0000000000207BB0 _init_array     ends                    ; Alternative name is '__init_array_start'
.init_array:0000000000207BB0
.fini_array:0000000000207BB8 ; ELF Termination Function Table
.fini_array:0000000000207BB8 ; ===========================================================================
.fini_array:0000000000207BB8
.fini_array:0000000000207BB8 ; Segment type: Pure data
.fini_array:0000000000207BB8 ; Segment permissions: Read/Write
.fini_array:0000000000207BB8 _fini_array     segment qword public 'DATA' use64
.fini_array:0000000000207BB8                 assume cs:_fini_array
.fini_array:0000000000207BB8                 ;org 207BB8h
.fini_array:0000000000207BB8 __do_global_dtors_aux_fini_array_entry dq offset __do_global_dtors_aux
.fini_array:0000000000207BB8                                         ; DATA XREF: __libc_csu_init+13↑o
.fini_array:0000000000207BB8 _fini_array     ends                    ; Alternative name is '__init_array_end'
.fini_array:0000000000207BB8
.data.rel.ro:0000000000207BC0 ; ===========================================================================
.data.rel.ro:0000000000207BC0
.data.rel.ro:0000000000207BC0 ; Segment type: Pure data
.data.rel.ro:0000000000207BC0 ; Segment permissions: Read/Write
.data.rel.ro:0000000000207BC0 _data_rel_ro    segment align_32 public 'DATA' use64
.data.rel.ro:0000000000207BC0                 assume cs:_data_rel_ro
.data.rel.ro:0000000000207BC0                 ;org 207BC0h
.data.rel.ro:0000000000207BC0 ; struct option long_options
.data.rel.ro:0000000000207BC0 long_options    dq offset aHelp         ; name
.data.rel.ro:0000000000207BC0                                         ; DATA XREF: parse_long_options:loc_2060↑o
.data.rel.ro:0000000000207BC0                                         ; parse_gnu_standard_options_only+7C↑o
.data.rel.ro:0000000000207BC0                 dd 0                    ; has_arg ; "help"
.data.rel.ro:0000000000207BC0                 db 4 dup(0)
.data.rel.ro:0000000000207BC0                 dq 0                    ; flag
.data.rel.ro:0000000000207BC0                 dd 68h                  ; val
.data.rel.ro:0000000000207BC0                 db 4 dup(0)
.data.rel.ro:0000000000207BE0                 dq offset aVersion      ; "version"
.data.rel.ro:0000000000207BE8                 db    0
.data.rel.ro:0000000000207BE9                 db    0
.data.rel.ro:0000000000207BEA                 db    0
.data.rel.ro:0000000000207BEB                 db    0
.data.rel.ro:0000000000207BEC                 db    0
.data.rel.ro:0000000000207BED                 db    0
.data.rel.ro:0000000000207BEE                 db    0
.data.rel.ro:0000000000207BEF                 db    0
.data.rel.ro:0000000000207BF0                 db    0
.data.rel.ro:0000000000207BF1                 db    0
.data.rel.ro:0000000000207BF2                 db    0
.data.rel.ro:0000000000207BF3                 db    0
.data.rel.ro:0000000000207BF4                 db    0
.data.rel.ro:0000000000207BF5                 db    0
.data.rel.ro:0000000000207BF6                 db    0
.data.rel.ro:0000000000207BF7                 db    0
.data.rel.ro:0000000000207BF8                 db  76h ; v
.data.rel.ro:0000000000207BF9                 db    0
.data.rel.ro:0000000000207BFA                 db    0
.data.rel.ro:0000000000207BFB                 db    0
.data.rel.ro:0000000000207BFC                 db    0
.data.rel.ro:0000000000207BFD                 db    0
.data.rel.ro:0000000000207BFE                 db    0
.data.rel.ro:0000000000207BFF                 db    0
.data.rel.ro:0000000000207C00                 db    0
.data.rel.ro:0000000000207C01                 db    0
.data.rel.ro:0000000000207C02                 db    0
.data.rel.ro:0000000000207C03                 db    0
.data.rel.ro:0000000000207C04                 db    0
.data.rel.ro:0000000000207C05                 db    0
.data.rel.ro:0000000000207C06                 db    0
.data.rel.ro:0000000000207C07                 db    0
.data.rel.ro:0000000000207C08                 db    0
.data.rel.ro:0000000000207C09                 db    0
.data.rel.ro:0000000000207C0A                 db    0
.data.rel.ro:0000000000207C0B                 db    0
.data.rel.ro:0000000000207C0C                 db    0
.data.rel.ro:0000000000207C0D                 db    0
.data.rel.ro:0000000000207C0E                 db    0
.data.rel.ro:0000000000207C0F                 db    0
.data.rel.ro:0000000000207C10                 db    0
.data.rel.ro:0000000000207C11                 db    0
.data.rel.ro:0000000000207C12                 db    0
.data.rel.ro:0000000000207C13                 db    0
.data.rel.ro:0000000000207C14                 db    0
.data.rel.ro:0000000000207C15                 db    0
.data.rel.ro:0000000000207C16                 db    0
.data.rel.ro:0000000000207C17                 db    0
.data.rel.ro:0000000000207C18                 db    0
.data.rel.ro:0000000000207C19                 db    0
.data.rel.ro:0000000000207C1A                 db    0
.data.rel.ro:0000000000207C1B                 db    0
.data.rel.ro:0000000000207C1C                 db    0
.data.rel.ro:0000000000207C1D                 db    0
.data.rel.ro:0000000000207C1E                 db    0
.data.rel.ro:0000000000207C1F                 db    0
.data.rel.ro:0000000000207C20                 public quoting_style_args
.data.rel.ro:0000000000207C20 quoting_style_args dq offset aLiteral   ; "literal"
.data.rel.ro:0000000000207C28                 dq offset aShell        ; "shell"
.data.rel.ro:0000000000207C30                 dq offset aShellAlways  ; "shell-always"
.data.rel.ro:0000000000207C38                 dq offset aShellEscape  ; "shell-escape"
.data.rel.ro:0000000000207C40                 dq offset aShellEscapeAlw ; "shell-escape-always"
.data.rel.ro:0000000000207C48                 dq offset aC_1          ; "c"
.data.rel.ro:0000000000207C50                 dq offset aCMaybe       ; "c-maybe"
.data.rel.ro:0000000000207C58                 dq offset aShellEscape+6 ; "escape"
.data.rel.ro:0000000000207C60                 dq offset dirname+11h   ; "locale"
.data.rel.ro:0000000000207C68                 dq offset aClocale      ; "clocale"
.data.rel.ro:0000000000207C70                 db    0
.data.rel.ro:0000000000207C71                 db    0
.data.rel.ro:0000000000207C72                 db    0
.data.rel.ro:0000000000207C73                 db    0
.data.rel.ro:0000000000207C74                 db    0
.data.rel.ro:0000000000207C75                 db    0
.data.rel.ro:0000000000207C76                 db    0
.data.rel.ro:0000000000207C77                 db    0
.data.rel.ro:0000000000207C77 _data_rel_ro    ends
.data.rel.ro:0000000000207C77
LOAD:0000000000207C78 ; ELF Dynamic Information
LOAD:0000000000207C78 ; ===========================================================================
LOAD:0000000000207C78
LOAD:0000000000207C78 ; Segment type: Pure data
LOAD:0000000000207C78 ; Segment permissions: Read/Write
LOAD:0000000000207C78 LOAD            segment byte public 'DATA' use64
LOAD:0000000000207C78                 assume cs:LOAD
LOAD:0000000000207C78                 ;org 207C78h
LOAD:0000000000207C78 _DYNAMIC        Elf64_Dyn <1, 1>        ; DATA XREF: LOAD:0000000000000130↑o
LOAD:0000000000207C78                                         ; .got:_GLOBAL_OFFSET_TABLE_↓o
LOAD:0000000000207C78                                         ; DT_NEEDED libc.so.6
LOAD:0000000000207C88                 Elf64_Dyn <0Ch, 12B0h>  ; DT_INIT
LOAD:0000000000207C98                 Elf64_Dyn <0Dh, 4B70h>  ; DT_FINI
LOAD:0000000000207CA8                 Elf64_Dyn <19h, 207BB0h> ; DT_INIT_ARRAY
LOAD:0000000000207CB8                 Elf64_Dyn <1Bh, 8>      ; DT_INIT_ARRAYSZ
LOAD:0000000000207CC8                 Elf64_Dyn <1Ah, 207BB8h> ; DT_FINI_ARRAY
LOAD:0000000000207CD8                 Elf64_Dyn <1Ch, 8>      ; DT_FINI_ARRAYSZ
LOAD:0000000000207CE8                 Elf64_Dyn <6FFFFEF5h, 298h> ; DT_GNU_HASH
LOAD:0000000000207CF8                 Elf64_Dyn <5, 850h>     ; DT_STRTAB
LOAD:0000000000207D08                 Elf64_Dyn <6, 2E0h>     ; DT_SYMTAB
LOAD:0000000000207D18                 Elf64_Dyn <0Ah, 2B0h>   ; DT_STRSZ
LOAD:0000000000207D28                 Elf64_Dyn <0Bh, 18h>    ; DT_SYMENT
LOAD:0000000000207D38                 Elf64_Dyn <15h, 0>      ; DT_DEBUG
LOAD:0000000000207D48                 Elf64_Dyn <3, 207E68h>  ; DT_PLTGOT
LOAD:0000000000207D58                 Elf64_Dyn <2, 408h>     ; DT_PLTRELSZ
LOAD:0000000000207D68                 Elf64_Dyn <14h, 7>      ; DT_PLTREL
LOAD:0000000000207D78                 Elf64_Dyn <17h, 0EA8h>  ; DT_JMPREL
LOAD:0000000000207D88                 Elf64_Dyn <7, 0BD8h>    ; DT_RELA
LOAD:0000000000207D98                 Elf64_Dyn <8, 2D0h>     ; DT_RELASZ
LOAD:0000000000207DA8                 Elf64_Dyn <9, 18h>      ; DT_RELAENT
LOAD:0000000000207DB8                 Elf64_Dyn <1Eh, 8>      ; DT_FLAGS
LOAD:0000000000207DC8                 Elf64_Dyn <6FFFFFFBh, 8000001h> ; DT_FLAGS_1
LOAD:0000000000207DD8                 Elf64_Dyn <6FFFFFFEh, 0B78h> ; DT_VERNEED
LOAD:0000000000207DE8                 Elf64_Dyn <6FFFFFFFh, 1> ; DT_VERNEEDNUM
LOAD:0000000000207DF8                 Elf64_Dyn <6FFFFFF0h, 0B00h> ; DT_VERSYM
LOAD:0000000000207E08                 Elf64_Dyn <6FFFFFF9h, 12h> ; DT_RELACOUNT
LOAD:0000000000207E18                 Elf64_Dyn <0>           ; DT_NULL
LOAD:0000000000207E28                 db    0
LOAD:0000000000207E29                 db    0
LOAD:0000000000207E2A                 db    0
LOAD:0000000000207E2B                 db    0
LOAD:0000000000207E2C                 db    0
LOAD:0000000000207E2D                 db    0
LOAD:0000000000207E2E                 db    0
LOAD:0000000000207E2F                 db    0
LOAD:0000000000207E30                 db    0
LOAD:0000000000207E31                 db    0
LOAD:0000000000207E32                 db    0
LOAD:0000000000207E33                 db    0
LOAD:0000000000207E34                 db    0
LOAD:0000000000207E35                 db    0
LOAD:0000000000207E36                 db    0
LOAD:0000000000207E37                 db    0
LOAD:0000000000207E38                 db    0
LOAD:0000000000207E39                 db    0
LOAD:0000000000207E3A                 db    0
LOAD:0000000000207E3B                 db    0
LOAD:0000000000207E3C                 db    0
LOAD:0000000000207E3D                 db    0
LOAD:0000000000207E3E                 db    0
LOAD:0000000000207E3F                 db    0
LOAD:0000000000207E40                 db    0
LOAD:0000000000207E41                 db    0
LOAD:0000000000207E42                 db    0
LOAD:0000000000207E43                 db    0
LOAD:0000000000207E44                 db    0
LOAD:0000000000207E45                 db    0
LOAD:0000000000207E46                 db    0
LOAD:0000000000207E47                 db    0
LOAD:0000000000207E48                 db    0
LOAD:0000000000207E49                 db    0
LOAD:0000000000207E4A                 db    0
LOAD:0000000000207E4B                 db    0
LOAD:0000000000207E4C                 db    0
LOAD:0000000000207E4D                 db    0
LOAD:0000000000207E4E                 db    0
LOAD:0000000000207E4F                 db    0
LOAD:0000000000207E50                 db    0
LOAD:0000000000207E51                 db    0
LOAD:0000000000207E52                 db    0
LOAD:0000000000207E53                 db    0
LOAD:0000000000207E54                 db    0
LOAD:0000000000207E55                 db    0
LOAD:0000000000207E56                 db    0
LOAD:0000000000207E57                 db    0
LOAD:0000000000207E58                 db    0
LOAD:0000000000207E59                 db    0
LOAD:0000000000207E5A                 db    0
LOAD:0000000000207E5B                 db    0
LOAD:0000000000207E5C                 db    0
LOAD:0000000000207E5D                 db    0
LOAD:0000000000207E5E                 db    0
LOAD:0000000000207E5F                 db    0
LOAD:0000000000207E60                 db    0
LOAD:0000000000207E61                 db    0
LOAD:0000000000207E62                 db    0
LOAD:0000000000207E63                 db    0
LOAD:0000000000207E64                 db    0
LOAD:0000000000207E65                 db    0
LOAD:0000000000207E66                 db    0
LOAD:0000000000207E67                 db    0
LOAD:0000000000207E67 LOAD            ends
LOAD:0000000000207E67
.got:0000000000207E68 ; ===========================================================================
.got:0000000000207E68
.got:0000000000207E68 ; Segment type: Pure data
.got:0000000000207E68 ; Segment permissions: Read/Write
.got:0000000000207E68 _got            segment qword public 'DATA' use64
.got:0000000000207E68                 assume cs:_got
.got:0000000000207E68                 ;org 207E68h
.got:0000000000207E68 _GLOBAL_OFFSET_TABLE_ dq offset _DYNAMIC
.got:0000000000207E70 qword_207E70    dq 0                    ; DATA XREF: sub_12D0↑r
.got:0000000000207E78 qword_207E78    dq 0                    ; DATA XREF: sub_12D0+6↑r
.got:0000000000207E80 free_ptr        dq offset free          ; DATA XREF: _free↑r
.got:0000000000207E88 abort_ptr       dq offset abort         ; DATA XREF: _abort↑r
.got:0000000000207E90 __errno_location_ptr dq offset __errno_location
.got:0000000000207E90                                         ; DATA XREF: ___errno_location↑r
.got:0000000000207E98 strncmp_ptr     dq offset strncmp       ; DATA XREF: _strncmp↑r
.got:0000000000207EA0 _exit_ptr       dq offset _exit         ; DATA XREF: __exit↑r
.got:0000000000207EA8 __fpending_ptr  dq offset __fpending    ; DATA XREF: ___fpending↑r
.got:0000000000207EB0 fread_unlocked_ptr dq offset fread_unlocked
.got:0000000000207EB0                                         ; DATA XREF: _fread_unlocked↑r
.got:0000000000207EB8 textdomain_ptr  dq offset textdomain    ; DATA XREF: _textdomain↑r
.got:0000000000207EC0 fclose_ptr      dq offset fclose        ; DATA XREF: _fclose↑r
.got:0000000000207EC8 bindtextdomain_ptr dq offset bindtextdomain
.got:0000000000207EC8                                         ; DATA XREF: _bindtextdomain↑r
.got:0000000000207ED0 dcgettext_ptr   dq offset dcgettext     ; DATA XREF: _dcgettext↑r
.got:0000000000207ED8 __ctype_get_mb_cur_max_ptr dq offset __ctype_get_mb_cur_max
.got:0000000000207ED8                                         ; DATA XREF: ___ctype_get_mb_cur_max↑r
.got:0000000000207EE0 strlen_ptr      dq offset strlen        ; DATA XREF: _strlen↑r
.got:0000000000207EE8 __stack_chk_fail_ptr dq offset __stack_chk_fail
.got:0000000000207EE8                                         ; DATA XREF: ___stack_chk_fail↑r
.got:0000000000207EF0 getopt_long_ptr dq offset getopt_long   ; DATA XREF: _getopt_long↑r
.got:0000000000207EF8 mbrtowc_ptr     dq offset mbrtowc       ; DATA XREF: _mbrtowc↑r
.got:0000000000207F00 strrchr_ptr     dq offset strrchr       ; DATA XREF: _strrchr↑r
.got:0000000000207F08 lseek_ptr       dq offset lseek         ; DATA XREF: _lseek↑r
.got:0000000000207F10 memset_ptr      dq offset memset        ; DATA XREF: _memset↑r
.got:0000000000207F18 posix_fadvise_ptr dq offset posix_fadvise
.got:0000000000207F18                                         ; DATA XREF: _posix_fadvise↑r
.got:0000000000207F20 memcmp_ptr      dq offset memcmp        ; DATA XREF: _memcmp↑r
.got:0000000000207F28 fputs_unlocked_ptr dq offset fputs_unlocked
.got:0000000000207F28                                         ; DATA XREF: _fputs_unlocked↑r
.got:0000000000207F30 calloc_ptr      dq offset calloc        ; DATA XREF: _calloc↑r
.got:0000000000207F38 memcpy_ptr      dq offset memcpy        ; DATA XREF: _memcpy↑r
.got:0000000000207F40 fileno_ptr      dq offset fileno        ; DATA XREF: _fileno↑r
.got:0000000000207F48 malloc_ptr      dq offset malloc        ; DATA XREF: _malloc↑r
.got:0000000000207F50 fflush_ptr      dq offset fflush        ; DATA XREF: _fflush↑r
.got:0000000000207F58 nl_langinfo_ptr dq offset nl_langinfo   ; DATA XREF: _nl_langinfo↑r
.got:0000000000207F60 __freading_ptr  dq offset __freading    ; DATA XREF: ___freading↑r
.got:0000000000207F68 realloc_ptr     dq offset realloc       ; DATA XREF: _realloc↑r
.got:0000000000207F70 setlocale_ptr   dq offset setlocale     ; DATA XREF: _setlocale↑r
.got:0000000000207F78 __printf_chk_ptr dq offset __printf_chk ; DATA XREF: ___printf_chk↑r
.got:0000000000207F80 setvbuf_ptr     dq offset setvbuf       ; DATA XREF: _setvbuf↑r
.got:0000000000207F88 error_ptr       dq offset error         ; DATA XREF: _error↑r
.got:0000000000207F90 fseeko_ptr      dq offset fseeko        ; DATA XREF: _fseeko↑r
.got:0000000000207F98 fopen_ptr       dq offset fopen         ; DATA XREF: _fopen↑r
.got:0000000000207FA0 __cxa_atexit_ptr dq offset __cxa_atexit ; DATA XREF: ___cxa_atexit↑r
.got:0000000000207FA8 exit_ptr        dq offset exit          ; DATA XREF: _exit↑r
.got:0000000000207FB0 fwrite_ptr      dq offset fwrite        ; DATA XREF: _fwrite↑r
.got:0000000000207FB8 __fprintf_chk_ptr dq offset __fprintf_chk
.got:0000000000207FB8                                         ; DATA XREF: ___fprintf_chk↑r
.got:0000000000207FC0 mbsinit_ptr     dq offset mbsinit       ; DATA XREF: _mbsinit↑r
.got:0000000000207FC8 iswprint_ptr    dq offset iswprint      ; DATA XREF: _iswprint↑r
.got:0000000000207FD0 __ctype_b_loc_ptr dq offset __ctype_b_loc
.got:0000000000207FD0                                         ; DATA XREF: ___ctype_b_loc↑r
.got:0000000000207FD8 _ITM_deregisterTMCloneTable_ptr dq offset _ITM_deregisterTMCloneTable
.got:0000000000207FD8                                         ; DATA XREF: deregister_tm_clones+17↑r
.got:0000000000207FE0 __libc_start_main_ptr dq offset __libc_start_main
.got:0000000000207FE0                                         ; DATA XREF: start+24↑r
.got:0000000000207FE8 __gmon_start___ptr dq offset __gmon_start__
.got:0000000000207FE8                                         ; DATA XREF: _init_proc+4↑r
.got:0000000000207FF0 _ITM_registerTMCloneTable_ptr dq offset _ITM_registerTMCloneTable
.got:0000000000207FF0                                         ; DATA XREF: register_tm_clones+28↑r
.got:0000000000207FF8 __cxa_finalize_ptr dq offset __imp___cxa_finalize
.got:0000000000207FF8                                         ; DATA XREF: __cxa_finalize↑r
.got:0000000000207FF8                                         ; __do_global_dtors_aux+9↑r
.got:0000000000207FF8 _got            ends
.got:0000000000207FF8
.data:0000000000208000 ; ===========================================================================
.data:0000000000208000
.data:0000000000208000 ; Segment type: Pure data
.data:0000000000208000 ; Segment permissions: Read/Write
.data:0000000000208000 _data           segment align_32 public 'DATA' use64
.data:0000000000208000                 assume cs:_data
.data:0000000000208000                 ;org 208000h
.data:0000000000208000                 public __data_start ; weak
.data:0000000000208000 __data_start    db    0                 ; Alternative name is '__data_start'
.data:0000000000208000                                         ; data_start
.data:0000000000208001                 db    0
.data:0000000000208002                 db    0
.data:0000000000208003                 db    0
.data:0000000000208004                 db    0
.data:0000000000208005                 db    0
.data:0000000000208006                 db    0
.data:0000000000208007                 db    0
.data:0000000000208008                 public __dso_handle
.data:0000000000208008 ; void *_dso_handle
.data:0000000000208008 __dso_handle    dq offset __dso_handle  ; DATA XREF: __do_global_dtors_aux+17↑r
.data:0000000000208008                                         ; atexit↑r ...
.data:0000000000208010                 public Version
.data:0000000000208010 Version         dq offset a831          ; DATA XREF: main+6E↑r
.data:0000000000208010                                         ; "8.31"
.data:0000000000208018                 public exit_failure
.data:0000000000208018 ; int exit_failure
.data:0000000000208018 exit_failure    dd 1                    ; DATA XREF: close_stdout:loc_1EF2↑r
.data:0000000000208018                                         ; parse_gnu_standard_options_only:loc_21F0↑r ...
.data:000000000020801C                 align 20h
.data:0000000000208020                 public quote_quoting_options
.data:0000000000208020 quote_quoting_options db    8           ; DATA XREF: quote_n_mem↑o
.data:0000000000208020                                         ; quote_mem↑o ...
.data:0000000000208021                 db    0
.data:0000000000208022                 db    0
.data:0000000000208023                 db    0
.data:0000000000208024                 db    0
.data:0000000000208025                 db    0
.data:0000000000208026                 db    0
.data:0000000000208027                 db    0
.data:0000000000208028                 db    0
.data:0000000000208029                 db    0
.data:000000000020802A                 db    0
.data:000000000020802B                 db    0
.data:000000000020802C                 db    0
.data:000000000020802D                 db    0
.data:000000000020802E                 db    0
.data:000000000020802F                 db    0
.data:0000000000208030                 db    0
.data:0000000000208031                 db    0
.data:0000000000208032                 db    0
.data:0000000000208033                 db    0
.data:0000000000208034                 db    0
.data:0000000000208035                 db    0
.data:0000000000208036                 db    0
.data:0000000000208037                 db    0
.data:0000000000208038                 db    0
.data:0000000000208039                 db    0
.data:000000000020803A                 db    0
.data:000000000020803B                 db    0
.data:000000000020803C                 db    0
.data:000000000020803D                 db    0
.data:000000000020803E                 db    0
.data:000000000020803F                 db    0
.data:0000000000208040                 db    0
.data:0000000000208041                 db    0
.data:0000000000208042                 db    0
.data:0000000000208043                 db    0
.data:0000000000208044                 db    0
.data:0000000000208045                 db    0
.data:0000000000208046                 db    0
.data:0000000000208047                 db    0
.data:0000000000208048                 db    0
.data:0000000000208049                 db    0
.data:000000000020804A                 db    0
.data:000000000020804B                 db    0
.data:000000000020804C                 db    0
.data:000000000020804D                 db    0
.data:000000000020804E                 db    0
.data:000000000020804F                 db    0
.data:0000000000208050                 db    0
.data:0000000000208051                 db    0
.data:0000000000208052                 db    0
.data:0000000000208053                 db    0
.data:0000000000208054                 db    0
.data:0000000000208055                 db    0
.data:0000000000208056                 db    0
.data:0000000000208057                 db    0
.data:0000000000208058 nslots          dd 1                    ; DATA XREF: quotearg_n_options+3A↑r
.data:0000000000208058                                         ; quotearg_n_options:loc_367D↑r ...
.data:000000000020805C                 align 20h
.data:0000000000208060 ; void *slotvec
.data:0000000000208060 slotvec         dq offset slotvec0      ; DATA XREF: quotearg_n_options+29↑r
.data:0000000000208060                                         ; quotearg_n_options+76↑w ...
.data:0000000000208068                 align 10h
.data:0000000000208070 slotvec0        dq offset qword_100     ; DATA XREF: quotearg_n_options+54↑o
.data:0000000000208070                                         ; quotearg_n_options+187↑r ...
.data:0000000000208078 off_208078      dq offset slot0         ; DATA XREF: quotearg_free+62↑w
.data:0000000000208078 _data           ends
.data:0000000000208078
.bss:0000000000208080 ; ===========================================================================
.bss:0000000000208080
.bss:0000000000208080 ; Segment type: Uninitialized
.bss:0000000000208080 ; Segment permissions: Read/Write
.bss:0000000000208080 _bss            segment align_32 public 'BSS' use64
.bss:0000000000208080                 assume cs:_bss
.bss:0000000000208080                 ;org 208080h
.bss:0000000000208080                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:0000000000208080                 public __bss_start ; weak
.bss:0000000000208080 __bss_start     dq ?                    ; DATA XREF: LOAD:0000000000000790↑o
.bss:0000000000208080                                         ; LOAD:00000000000007F0↑o ...
.bss:0000000000208080                                         ; Alternative name is '__TMC_END__'
.bss:0000000000208080                                         ; program_invocation_short_name@@GLIBC_2.2.5
.bss:0000000000208080                                         ; _edata
.bss:0000000000208080                                         ; Copy of shared data
.bss:0000000000208088                 public stdout@@GLIBC_2_2_5
.bss:0000000000208088 ; FILE *stdout
.bss:0000000000208088 stdout@@GLIBC_2_2_5 dq ?                ; DATA XREF: LOAD:0000000000000778↑o
.bss:0000000000208088                                         ; main+4E↑r ...
.bss:0000000000208088                                         ; Alternative name is 'stdout'
.bss:0000000000208088                                         ; Copy of shared data
.bss:0000000000208090                 public stdin@@GLIBC_2_2_5
.bss:0000000000208090 ; FILE *stdin
.bss:0000000000208090 stdin@@GLIBC_2_2_5 dq ?                 ; DATA XREF: LOAD:00000000000007A8↑o
.bss:0000000000208090                                         ; main:loc_16AD↑r ...
.bss:0000000000208090                                         ; Alternative name is 'stdin'
.bss:0000000000208090                                         ; Copy of shared data
.bss:0000000000208098                 public optind@@GLIBC_2_2_5
.bss:0000000000208098 optind@@GLIBC_2_2_5 dd ?                ; DATA XREF: LOAD:0000000000000838↑o
.bss:0000000000208098                                         ; main+A1↑r ...
.bss:0000000000208098                                         ; Alternative name is 'optind'
.bss:0000000000208098                                         ; Copy of shared data
.bss:000000000020809C                 align 20h
.bss:00000000002080A0                 public program_invocation_name@@GLIBC_2_2_5 ; weak
.bss:00000000002080A0 program_invocation_name@@GLIBC_2_2_5 dq ?
.bss:00000000002080A0                                         ; DATA XREF: LOAD:00000000000007C0↑o
.bss:00000000002080A0                                         ; LOAD:00000000000007D8↑o ...
.bss:00000000002080A0                                         ; Alternative name is '__progname_full@@GLIBC_2.2.5'
.bss:00000000002080A0                                         ; Copy of shared data
.bss:00000000002080A8                 align 20h
.bss:00000000002080C0                 public opterr@@GLIBC_2_2_5
.bss:00000000002080C0 opterr@@GLIBC_2_2_5 dd ?                ; DATA XREF: LOAD:0000000000000808↑o
.bss:00000000002080C0                                         ; parse_long_options+67↑r ...
.bss:00000000002080C0                                         ; Alternative name is 'opterr'
.bss:00000000002080C0                                         ; Copy of shared data
.bss:00000000002080C4                 align 20h
.bss:00000000002080E0                 public stderr@@GLIBC_2_2_5
.bss:00000000002080E0 ; FILE *stderr
.bss:00000000002080E0 stderr@@GLIBC_2_2_5 dq ?                ; DATA XREF: LOAD:0000000000000820↑o
.bss:00000000002080E0                                         ; usage+3D↑r ...
.bss:00000000002080E0                                         ; Alternative name is 'stderr'
.bss:00000000002080E0                                         ; Copy of shared data
.bss:00000000002080E8 completed_7697  db ?                    ; DATA XREF: __do_global_dtors_aux↑r
.bss:00000000002080E8                                         ; __do_global_dtors_aux+28↑w
.bss:00000000002080E9 have_read_stdin db ?                    ; DATA XREF: main+AB↑w
.bss:00000000002080E9                                         ; main:loc_1698↑r ...
.bss:00000000002080EA                 align 10h
.bss:00000000002080F0 ignore_EPIPE    db ?                    ; DATA XREF: close_stdout_set_ignore_EPIPE↑w
.bss:00000000002080F0                                         ; close_stdout+1B↑r
.bss:00000000002080F1                 align 8
.bss:00000000002080F8 file_name       dq ?                    ; DATA XREF: close_stdout_set_file_name↑w
.bss:00000000002080F8                                         ; close_stdout+56↑r
.bss:0000000000208100                 public program_name
.bss:0000000000208100 program_name    dq ?                    ; DATA XREF: usage+14↑r
.bss:0000000000208100                                         ; set_program_name:loc_229D↑w
.bss:0000000000208108                 align 20h
.bss:0000000000208120 slot0           db    ? ;               ; DATA XREF: quotearg_n_options+FE↑o
.bss:0000000000208120                                         ; quotearg_free+46↑o ...
.bss:0000000000208121                 db    ? ;
.bss:0000000000208122                 db    ? ;
.bss:0000000000208123                 db    ? ;
.bss:0000000000208124                 db    ? ;
.bss:0000000000208125                 db    ? ;
.bss:0000000000208126                 db    ? ;
.bss:0000000000208127                 db    ? ;
.bss:0000000000208128                 db    ? ;
.bss:0000000000208129                 db    ? ;
.bss:000000000020812A                 db    ? ;
.bss:000000000020812B                 db    ? ;
.bss:000000000020812C                 db    ? ;
.bss:000000000020812D                 db    ? ;
.bss:000000000020812E                 db    ? ;
.bss:000000000020812F                 db    ? ;
.bss:0000000000208130                 db    ? ;
.bss:0000000000208131                 db    ? ;
.bss:0000000000208132                 db    ? ;
.bss:0000000000208133                 db    ? ;
.bss:0000000000208134                 db    ? ;
.bss:0000000000208135                 db    ? ;
.bss:0000000000208136                 db    ? ;
.bss:0000000000208137                 db    ? ;
.bss:0000000000208138                 db    ? ;
.bss:0000000000208139                 db    ? ;
.bss:000000000020813A                 db    ? ;
.bss:000000000020813B                 db    ? ;
.bss:000000000020813C                 db    ? ;
.bss:000000000020813D                 db    ? ;
.bss:000000000020813E                 db    ? ;
.bss:000000000020813F                 db    ? ;
.bss:0000000000208140                 db    ? ;
.bss:0000000000208141                 db    ? ;
.bss:0000000000208142                 db    ? ;
.bss:0000000000208143                 db    ? ;
.bss:0000000000208144                 db    ? ;
.bss:0000000000208145                 db    ? ;
.bss:0000000000208146                 db    ? ;
.bss:0000000000208147                 db    ? ;
.bss:0000000000208148                 db    ? ;
.bss:0000000000208149                 db    ? ;
.bss:000000000020814A                 db    ? ;
.bss:000000000020814B                 db    ? ;
.bss:000000000020814C                 db    ? ;
.bss:000000000020814D                 db    ? ;
.bss:000000000020814E                 db    ? ;
.bss:000000000020814F                 db    ? ;
.bss:0000000000208150                 db    ? ;
.bss:0000000000208151                 db    ? ;
.bss:0000000000208152                 db    ? ;
.bss:0000000000208153                 db    ? ;
.bss:0000000000208154                 db    ? ;
.bss:0000000000208155                 db    ? ;
.bss:0000000000208156                 db    ? ;
.bss:0000000000208157                 db    ? ;
.bss:0000000000208158                 db    ? ;
.bss:0000000000208159                 db    ? ;
.bss:000000000020815A                 db    ? ;
.bss:000000000020815B                 db    ? ;
.bss:000000000020815C                 db    ? ;
.bss:000000000020815D                 db    ? ;
.bss:000000000020815E                 db    ? ;
.bss:000000000020815F                 db    ? ;
.bss:0000000000208160                 db    ? ;
.bss:0000000000208161                 db    ? ;
.bss:0000000000208162                 db    ? ;
.bss:0000000000208163                 db    ? ;
.bss:0000000000208164                 db    ? ;
.bss:0000000000208165                 db    ? ;
.bss:0000000000208166                 db    ? ;
.bss:0000000000208167                 db    ? ;
.bss:0000000000208168                 db    ? ;
.bss:0000000000208169                 db    ? ;
.bss:000000000020816A                 db    ? ;
.bss:000000000020816B                 db    ? ;
.bss:000000000020816C                 db    ? ;
.bss:000000000020816D                 db    ? ;
.bss:000000000020816E                 db    ? ;
.bss:000000000020816F                 db    ? ;
.bss:0000000000208170                 db    ? ;
.bss:0000000000208171                 db    ? ;
.bss:0000000000208172                 db    ? ;
.bss:0000000000208173                 db    ? ;
.bss:0000000000208174                 db    ? ;
.bss:0000000000208175                 db    ? ;
.bss:0000000000208176                 db    ? ;
.bss:0000000000208177                 db    ? ;
.bss:0000000000208178                 db    ? ;
.bss:0000000000208179                 db    ? ;
.bss:000000000020817A                 db    ? ;
.bss:000000000020817B                 db    ? ;
.bss:000000000020817C                 db    ? ;
.bss:000000000020817D                 db    ? ;
.bss:000000000020817E                 db    ? ;
.bss:000000000020817F                 db    ? ;
.bss:0000000000208180                 db    ? ;
.bss:0000000000208181                 db    ? ;
.bss:0000000000208182                 db    ? ;
.bss:0000000000208183                 db    ? ;
.bss:0000000000208184                 db    ? ;
.bss:0000000000208185                 db    ? ;
.bss:0000000000208186                 db    ? ;
.bss:0000000000208187                 db    ? ;
.bss:0000000000208188                 db    ? ;
.bss:0000000000208189                 db    ? ;
.bss:000000000020818A                 db    ? ;
.bss:000000000020818B                 db    ? ;
.bss:000000000020818C                 db    ? ;
.bss:000000000020818D                 db    ? ;
.bss:000000000020818E                 db    ? ;
.bss:000000000020818F                 db    ? ;
.bss:0000000000208190                 db    ? ;
.bss:0000000000208191                 db    ? ;
.bss:0000000000208192                 db    ? ;
.bss:0000000000208193                 db    ? ;
.bss:0000000000208194                 db    ? ;
.bss:0000000000208195                 db    ? ;
.bss:0000000000208196                 db    ? ;
.bss:0000000000208197                 db    ? ;
.bss:0000000000208198                 db    ? ;
.bss:0000000000208199                 db    ? ;
.bss:000000000020819A                 db    ? ;
.bss:000000000020819B                 db    ? ;
.bss:000000000020819C                 db    ? ;
.bss:000000000020819D                 db    ? ;
.bss:000000000020819E                 db    ? ;
.bss:000000000020819F                 db    ? ;
.bss:00000000002081A0                 db    ? ;
.bss:00000000002081A1                 db    ? ;
.bss:00000000002081A2                 db    ? ;
.bss:00000000002081A3                 db    ? ;
.bss:00000000002081A4                 db    ? ;
.bss:00000000002081A5                 db    ? ;
.bss:00000000002081A6                 db    ? ;
.bss:00000000002081A7                 db    ? ;
.bss:00000000002081A8                 db    ? ;
.bss:00000000002081A9                 db    ? ;
.bss:00000000002081AA                 db    ? ;
.bss:00000000002081AB                 db    ? ;
.bss:00000000002081AC                 db    ? ;
.bss:00000000002081AD                 db    ? ;
.bss:00000000002081AE                 db    ? ;
.bss:00000000002081AF                 db    ? ;
.bss:00000000002081B0                 db    ? ;
.bss:00000000002081B1                 db    ? ;
.bss:00000000002081B2                 db    ? ;
.bss:00000000002081B3                 db    ? ;
.bss:00000000002081B4                 db    ? ;
.bss:00000000002081B5                 db    ? ;
.bss:00000000002081B6                 db    ? ;
.bss:00000000002081B7                 db    ? ;
.bss:00000000002081B8                 db    ? ;
.bss:00000000002081B9                 db    ? ;
.bss:00000000002081BA                 db    ? ;
.bss:00000000002081BB                 db    ? ;
.bss:00000000002081BC                 db    ? ;
.bss:00000000002081BD                 db    ? ;
.bss:00000000002081BE                 db    ? ;
.bss:00000000002081BF                 db    ? ;
.bss:00000000002081C0                 db    ? ;
.bss:00000000002081C1                 db    ? ;
.bss:00000000002081C2                 db    ? ;
.bss:00000000002081C3                 db    ? ;
.bss:00000000002081C4                 db    ? ;
.bss:00000000002081C5                 db    ? ;
.bss:00000000002081C6                 db    ? ;
.bss:00000000002081C7                 db    ? ;
.bss:00000000002081C8                 db    ? ;
.bss:00000000002081C9                 db    ? ;
.bss:00000000002081CA                 db    ? ;
.bss:00000000002081CB                 db    ? ;
.bss:00000000002081CC                 db    ? ;
.bss:00000000002081CD                 db    ? ;
.bss:00000000002081CE                 db    ? ;
.bss:00000000002081CF                 db    ? ;
.bss:00000000002081D0                 db    ? ;
.bss:00000000002081D1                 db    ? ;
.bss:00000000002081D2                 db    ? ;
.bss:00000000002081D3                 db    ? ;
.bss:00000000002081D4                 db    ? ;
.bss:00000000002081D5                 db    ? ;
.bss:00000000002081D6                 db    ? ;
.bss:00000000002081D7                 db    ? ;
.bss:00000000002081D8                 db    ? ;
.bss:00000000002081D9                 db    ? ;
.bss:00000000002081DA                 db    ? ;
.bss:00000000002081DB                 db    ? ;
.bss:00000000002081DC                 db    ? ;
.bss:00000000002081DD                 db    ? ;
.bss:00000000002081DE                 db    ? ;
.bss:00000000002081DF                 db    ? ;
.bss:00000000002081E0                 db    ? ;
.bss:00000000002081E1                 db    ? ;
.bss:00000000002081E2                 db    ? ;
.bss:00000000002081E3                 db    ? ;
.bss:00000000002081E4                 db    ? ;
.bss:00000000002081E5                 db    ? ;
.bss:00000000002081E6                 db    ? ;
.bss:00000000002081E7                 db    ? ;
.bss:00000000002081E8                 db    ? ;
.bss:00000000002081E9                 db    ? ;
.bss:00000000002081EA                 db    ? ;
.bss:00000000002081EB                 db    ? ;
.bss:00000000002081EC                 db    ? ;
.bss:00000000002081ED                 db    ? ;
.bss:00000000002081EE                 db    ? ;
.bss:00000000002081EF                 db    ? ;
.bss:00000000002081F0                 db    ? ;
.bss:00000000002081F1                 db    ? ;
.bss:00000000002081F2                 db    ? ;
.bss:00000000002081F3                 db    ? ;
.bss:00000000002081F4                 db    ? ;
.bss:00000000002081F5                 db    ? ;
.bss:00000000002081F6                 db    ? ;
.bss:00000000002081F7                 db    ? ;
.bss:00000000002081F8                 db    ? ;
.bss:00000000002081F9                 db    ? ;
.bss:00000000002081FA                 db    ? ;
.bss:00000000002081FB                 db    ? ;
.bss:00000000002081FC                 db    ? ;
.bss:00000000002081FD                 db    ? ;
.bss:00000000002081FE                 db    ? ;
.bss:00000000002081FF                 db    ? ;
.bss:0000000000208200                 db    ? ;
.bss:0000000000208201                 db    ? ;
.bss:0000000000208202                 db    ? ;
.bss:0000000000208203                 db    ? ;
.bss:0000000000208204                 db    ? ;
.bss:0000000000208205                 db    ? ;
.bss:0000000000208206                 db    ? ;
.bss:0000000000208207                 db    ? ;
.bss:0000000000208208                 db    ? ;
.bss:0000000000208209                 db    ? ;
.bss:000000000020820A                 db    ? ;
.bss:000000000020820B                 db    ? ;
.bss:000000000020820C                 db    ? ;
.bss:000000000020820D                 db    ? ;
.bss:000000000020820E                 db    ? ;
.bss:000000000020820F                 db    ? ;
.bss:0000000000208210                 db    ? ;
.bss:0000000000208211                 db    ? ;
.bss:0000000000208212                 db    ? ;
.bss:0000000000208213                 db    ? ;
.bss:0000000000208214                 db    ? ;
.bss:0000000000208215                 db    ? ;
.bss:0000000000208216                 db    ? ;
.bss:0000000000208217                 db    ? ;
.bss:0000000000208218                 db    ? ;
.bss:0000000000208219                 db    ? ;
.bss:000000000020821A                 db    ? ;
.bss:000000000020821B                 db    ? ;
.bss:000000000020821C                 db    ? ;
.bss:000000000020821D                 db    ? ;
.bss:000000000020821E                 db    ? ;
.bss:000000000020821F                 db    ? ;
.bss:0000000000208220 default_quoting_options xmmword ?       ; DATA XREF: clone_quoting_options+12↑o
.bss:0000000000208220                                         ; get_quoting_style↑o ...
.bss:0000000000208230 xmmword_208230  xmmword ?               ; DATA XREF: quotearg_char_mem+41↑r
.bss:0000000000208230                                         ; quotearg_n_custom_mem+39↑r
.bss:0000000000208240 xmmword_208240  xmmword ?               ; DATA XREF: quotearg_char_mem+4E↑r
.bss:0000000000208240                                         ; quotearg_n_custom_mem+46↑r
.bss:0000000000208250 qword_208250    dq ?                    ; DATA XREF: quotearg_char_mem+16↑r
.bss:0000000000208250                                         ; quotearg_n_custom_mem+7↑r
.bss:0000000000208250 _bss            ends
.bss:0000000000208250
.prgend:0000000000208258 ; ===========================================================================
.prgend:0000000000208258
.prgend:0000000000208258 ; Segment type: Zero-length
.prgend:0000000000208258 _prgend         segment byte public '' use64
.prgend:0000000000208258 _end            label byte
.prgend:0000000000208258 _prgend         ends
.prgend:0000000000208258
extern:0000000000208260 ; ===========================================================================
extern:0000000000208260
extern:0000000000208260 ; Segment type: Externs
extern:0000000000208260 ; extern
extern:0000000000208260 ; void free(void *ptr)
extern:0000000000208260                 extrn free:near         ; CODE XREF: _free↑j
extern:0000000000208260                                         ; DATA XREF: .got:free_ptr↑o
extern:0000000000208268 ; void __noreturn abort(void)
extern:0000000000208268                 extrn abort:near        ; CODE XREF: _abort↑j
extern:0000000000208268                                         ; DATA XREF: .got:abort_ptr↑o
extern:0000000000208270 ; int *_errno_location(void)
extern:0000000000208270                 extrn __errno_location:near
extern:0000000000208270                                         ; CODE XREF: ___errno_location↑j
extern:0000000000208270                                         ; DATA XREF: .got:__errno_location_ptr↑o
extern:0000000000208278 ; int strncmp(const char *s1, const char *s2, size_t n)
extern:0000000000208278                 extrn strncmp:near      ; CODE XREF: _strncmp↑j
extern:0000000000208278                                         ; DATA XREF: .got:strncmp_ptr↑o
extern:0000000000208280 ; void __noreturn exit(int status)
extern:0000000000208280                 extrn _exit:near        ; CODE XREF: __exit↑j
extern:0000000000208280                                         ; DATA XREF: .got:_exit_ptr↑o
extern:0000000000208288 ; size_t _fpending(FILE *fp)
extern:0000000000208288                 extrn __fpending:near   ; CODE XREF: ___fpending↑j
extern:0000000000208288                                         ; DATA XREF: .got:__fpending_ptr↑o
extern:0000000000208290 ; size_t fread_unlocked(void *ptr, size_t size, size_t n, FILE *stream)
extern:0000000000208290                 extrn fread_unlocked:near
extern:0000000000208290                                         ; CODE XREF: _fread_unlocked↑j
extern:0000000000208290                                         ; DATA XREF: .got:fread_unlocked_ptr↑o
extern:0000000000208298 ; char *textdomain(const char *domainname)
extern:0000000000208298                 extrn textdomain:near   ; CODE XREF: _textdomain↑j
extern:0000000000208298                                         ; DATA XREF: .got:textdomain_ptr↑o
extern:00000000002082A0 ; int fclose(FILE *stream)
extern:00000000002082A0                 extrn fclose:near       ; CODE XREF: _fclose↑j
extern:00000000002082A0                                         ; DATA XREF: .got:fclose_ptr↑o
extern:00000000002082A8 ; char *bindtextdomain(const char *domainname, const char *dirname)
extern:00000000002082A8                 extrn bindtextdomain:near
extern:00000000002082A8                                         ; CODE XREF: _bindtextdomain↑j
extern:00000000002082A8                                         ; DATA XREF: .got:bindtextdomain_ptr↑o
extern:00000000002082B0 ; char *dcgettext(const char *domainname, const char *msgid, int category)
extern:00000000002082B0                 extrn dcgettext:near    ; CODE XREF: _dcgettext↑j
extern:00000000002082B0                                         ; DATA XREF: .got:dcgettext_ptr↑o
extern:00000000002082B8 ; size_t _ctype_get_mb_cur_max(void)
extern:00000000002082B8                 extrn __ctype_get_mb_cur_max:near
extern:00000000002082B8                                         ; CODE XREF: ___ctype_get_mb_cur_max↑j
extern:00000000002082B8                                         ; DATA XREF: .got:__ctype_get_mb_cur_max_ptr↑o
extern:00000000002082C0 ; size_t strlen(const char *s)
extern:00000000002082C0                 extrn strlen:near       ; CODE XREF: _strlen↑j
extern:00000000002082C0                                         ; DATA XREF: .got:strlen_ptr↑o
extern:00000000002082C8                 extrn __stack_chk_fail:near
extern:00000000002082C8                                         ; CODE XREF: ___stack_chk_fail↑j
extern:00000000002082C8                                         ; DATA XREF: .got:__stack_chk_fail_ptr↑o
extern:00000000002082D0 ; int getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)
extern:00000000002082D0                 extrn getopt_long:near  ; CODE XREF: _getopt_long↑j
extern:00000000002082D0                                         ; DATA XREF: .got:getopt_long_ptr↑o
extern:00000000002082D8 ; size_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)
extern:00000000002082D8                 extrn mbrtowc:near      ; CODE XREF: _mbrtowc↑j
extern:00000000002082D8                                         ; DATA XREF: .got:mbrtowc_ptr↑o
extern:00000000002082E0 ; char *strrchr(const char *s, int c)
extern:00000000002082E0                 extrn strrchr:near      ; CODE XREF: _strrchr↑j
extern:00000000002082E0                                         ; DATA XREF: .got:strrchr_ptr↑o
extern:00000000002082E8 ; __off_t lseek(int fd, __off_t offset, int whence)
extern:00000000002082E8                 extrn lseek:near        ; CODE XREF: _lseek↑j
extern:00000000002082E8                                         ; DATA XREF: .got:lseek_ptr↑o
extern:00000000002082F0 ; void *memset(void *s, int c, size_t n)
extern:00000000002082F0                 extrn memset:near       ; CODE XREF: _memset↑j
extern:00000000002082F0                                         ; DATA XREF: .got:memset_ptr↑o
extern:00000000002082F8 ; int posix_fadvise(int fd, off_t offset, off_t len, int advise)
extern:00000000002082F8                 extrn posix_fadvise:near
extern:00000000002082F8                                         ; CODE XREF: _posix_fadvise↑j
extern:00000000002082F8                                         ; DATA XREF: .got:posix_fadvise_ptr↑o
extern:0000000000208300 ; int __fastcall _libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)
extern:0000000000208300                 extrn __libc_start_main:near
extern:0000000000208300                                         ; CODE XREF: start+24↑p
extern:0000000000208300                                         ; DATA XREF: .got:__libc_start_main_ptr↑o
extern:0000000000208308 ; int memcmp(const void *s1, const void *s2, size_t n)
extern:0000000000208308                 extrn memcmp:near       ; CODE XREF: _memcmp↑j
extern:0000000000208308                                         ; DATA XREF: .got:memcmp_ptr↑o
extern:0000000000208310 ; int fputs_unlocked(const char *s, FILE *stream)
extern:0000000000208310                 extrn fputs_unlocked:near
extern:0000000000208310                                         ; CODE XREF: _fputs_unlocked↑j
extern:0000000000208310                                         ; DATA XREF: .got:fputs_unlocked_ptr↑o
extern:0000000000208318 ; void *calloc(size_t nmemb, size_t size)
extern:0000000000208318                 extrn calloc:near       ; CODE XREF: _calloc↑j
extern:0000000000208318                                         ; DATA XREF: .got:calloc_ptr↑o
extern:0000000000208320 ; void *memcpy(void *dest, const void *src, size_t n)
extern:0000000000208320                 extrn memcpy:near       ; CODE XREF: _memcpy↑j
extern:0000000000208320                                         ; DATA XREF: .got:memcpy_ptr↑o
extern:0000000000208328 ; int fileno(FILE *stream)
extern:0000000000208328                 extrn fileno:near       ; CODE XREF: _fileno↑j
extern:0000000000208328                                         ; DATA XREF: .got:fileno_ptr↑o
extern:0000000000208330 ; void *malloc(size_t size)
extern:0000000000208330                 extrn malloc:near       ; CODE XREF: _malloc↑j
extern:0000000000208330                                         ; DATA XREF: .got:malloc_ptr↑o
extern:0000000000208338 ; int fflush(FILE *stream)
extern:0000000000208338                 extrn fflush:near       ; CODE XREF: _fflush↑j
extern:0000000000208338                                         ; DATA XREF: .got:fflush_ptr↑o
extern:0000000000208340 ; char *nl_langinfo(nl_item item)
extern:0000000000208340                 extrn nl_langinfo:near  ; CODE XREF: _nl_langinfo↑j
extern:0000000000208340                                         ; DATA XREF: .got:nl_langinfo_ptr↑o
extern:0000000000208348 ; int _freading(FILE *fp)
extern:0000000000208348                 extrn __freading:near   ; CODE XREF: ___freading↑j
extern:0000000000208348                                         ; DATA XREF: .got:__freading_ptr↑o
extern:0000000000208350 ; void *realloc(void *ptr, size_t size)
extern:0000000000208350                 extrn realloc:near      ; CODE XREF: _realloc↑j
extern:0000000000208350                                         ; DATA XREF: .got:realloc_ptr↑o
extern:0000000000208358 ; char *setlocale(int category, const char *locale)
extern:0000000000208358                 extrn setlocale:near    ; CODE XREF: _setlocale↑j
extern:0000000000208358                                         ; DATA XREF: .got:setlocale_ptr↑o
extern:0000000000208360                 extrn __printf_chk:near ; CODE XREF: ___printf_chk↑j
extern:0000000000208360                                         ; DATA XREF: .got:__printf_chk_ptr↑o
extern:0000000000208368 ; int setvbuf(FILE *stream, char *buf, int modes, size_t n)
extern:0000000000208368                 extrn setvbuf:near      ; CODE XREF: _setvbuf↑j
extern:0000000000208368                                         ; DATA XREF: .got:setvbuf_ptr↑o
extern:0000000000208370 ; void error(int status, int errnum, const char *format, ...)
extern:0000000000208370                 extrn error:near        ; CODE XREF: _error↑j
extern:0000000000208370                                         ; DATA XREF: .got:error_ptr↑o
extern:0000000000208378 ; int fseeko(FILE *stream, __off_t off, int whence)
extern:0000000000208378                 extrn fseeko:near       ; CODE XREF: _fseeko↑j
extern:0000000000208378                                         ; DATA XREF: .got:fseeko_ptr↑o
extern:0000000000208380 ; FILE *fopen(const char *filename, const char *modes)
extern:0000000000208380                 extrn fopen:near        ; CODE XREF: _fopen↑j
extern:0000000000208380                                         ; DATA XREF: .got:fopen_ptr↑o
extern:0000000000208388 ; int __fastcall _cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)
extern:0000000000208388                 extrn __cxa_atexit:near ; CODE XREF: ___cxa_atexit↑j
extern:0000000000208388                                         ; DATA XREF: .got:__cxa_atexit_ptr↑o
extern:0000000000208390 ; void __noreturn exit(int status)
extern:0000000000208390                 extrn exit:near         ; CODE XREF: _exit↑j
extern:0000000000208390                                         ; DATA XREF: .got:exit_ptr↑o
extern:0000000000208398 ; size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)
extern:0000000000208398                 extrn fwrite:near       ; CODE XREF: _fwrite↑j
extern:0000000000208398                                         ; DATA XREF: .got:fwrite_ptr↑o
extern:00000000002083A0                 extrn __fprintf_chk:near
extern:00000000002083A0                                         ; CODE XREF: ___fprintf_chk↑j
extern:00000000002083A0                                         ; DATA XREF: .got:__fprintf_chk_ptr↑o
extern:00000000002083A8 ; int mbsinit(const mbstate_t *ps)
extern:00000000002083A8                 extrn mbsinit:near      ; CODE XREF: _mbsinit↑j
extern:00000000002083A8                                         ; DATA XREF: .got:mbsinit_ptr↑o
extern:00000000002083B0 ; int iswprint(wint_t wc)
extern:00000000002083B0                 extrn iswprint:near     ; CODE XREF: _iswprint↑j
extern:00000000002083B0                                         ; DATA XREF: .got:iswprint_ptr↑o
extern:00000000002083B8 ; int __fastcall __cxa_finalize(void *)
extern:00000000002083B8                 extrn __imp___cxa_finalize:near ; weak
extern:00000000002083B8                                         ; CODE XREF: __cxa_finalize↑j
extern:00000000002083B8                                         ; DATA XREF: .got:__cxa_finalize_ptr↑o
extern:00000000002083C0 ; const unsigned __int16 **_ctype_b_loc(void)
extern:00000000002083C0                 extrn __ctype_b_loc:near
extern:00000000002083C0                                         ; CODE XREF: ___ctype_b_loc↑j
extern:00000000002083C0                                         ; DATA XREF: .got:__ctype_b_loc_ptr↑o
extern:00000000002083C8                 extrn _ITM_deregisterTMCloneTable ; weak
extern:00000000002083C8                                         ; DATA XREF: .got:_ITM_deregisterTMCloneTable_ptr↑o
extern:00000000002083D0                 extrn __gmon_start__:near ; weak
extern:00000000002083D0                                         ; CODE XREF: _init_proc+10↑p
extern:00000000002083D0                                         ; DATA XREF: .got:__gmon_start___ptr↑o
extern:00000000002083D8                 extrn _ITM_registerTMCloneTable ; weak
extern:00000000002083D8                                         ; DATA XREF: .got:_ITM_registerTMCloneTable_ptr↑o
extern:00000000002083D8
extern:00000000002083D8
extern:00000000002083D8                 end start
