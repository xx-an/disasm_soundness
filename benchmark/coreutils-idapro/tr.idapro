LOAD:0000000000000000 ;
LOAD:0000000000000000 ; +-------------------------------------------------------------------------+
LOAD:0000000000000000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
LOAD:0000000000000000 ; |           Copyright (c) 2021 Hex-Rays, <support@hex-rays.com>           |
LOAD:0000000000000000 ; |                      License info: 48-357D-7BC4-C6                      |
LOAD:0000000000000000 ; |                              Virginia Tech                              |
LOAD:0000000000000000 ; +-------------------------------------------------------------------------+
LOAD:0000000000000000 ;
LOAD:0000000000000000 ; Input SHA256 : EA40954FAC5ECBD5BC7F1CA5C94885E3072B223AF297DADD27DD444007D4E7B7
LOAD:0000000000000000 ; Input MD5    : 206A85CAC799B6522855E0917516CF11
LOAD:0000000000000000 ; Input CRC32  : 9E85FB41
LOAD:0000000000000000
LOAD:0000000000000000 ; File Name   : /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/tr
LOAD:0000000000000000 ; Format      : ELF64 for x86-64 (Shared object)
LOAD:0000000000000000 ; Interpreter '/lib64/ld-linux-x86-64.so.2'
LOAD:0000000000000000 ; Needed Library 'libc.so.6'
LOAD:0000000000000000 ;
LOAD:0000000000000000 ; Source File : 'tr.c'
LOAD:0000000000000000 ; Source File : 'crtstuff.c'
LOAD:0000000000000000 ; Source File : 'version.c'
LOAD:0000000000000000 ; Source File : 'closeout.c'
LOAD:0000000000000000 ; Source File : 'exitfail.c'
LOAD:0000000000000000 ; Source File : 'fadvise.c'
LOAD:0000000000000000 ; Source File : 'progname.c'
LOAD:0000000000000000 ; Source File : 'quotearg.c'
LOAD:0000000000000000 ; Source File : 'safe-read.c'
LOAD:0000000000000000 ; Source File : 'version-etc.c'
LOAD:0000000000000000 ; Source File : 'version-etc-fsf.c'
LOAD:0000000000000000 ; Source File : 'xmalloc.c'
LOAD:0000000000000000 ; Source File : 'xalloc-die.c'
LOAD:0000000000000000 ; Source File : 'xstrtoumax.c'
LOAD:0000000000000000 ; Source File : 'mbrtowc.c'
LOAD:0000000000000000 ; Source File : 'close-stream.c'
LOAD:0000000000000000 ; Source File : 'hard-locale.c'
LOAD:0000000000000000 ; Source File : 'localcharset.c'
LOAD:0000000000000000 ; Source File : 'fclose.c'
LOAD:0000000000000000 ; Source File : 'fflush.c'
LOAD:0000000000000000 ; Source File : 'fseeko.c'
LOAD:0000000000000000 ; Source File : 'crtstuff.c'
LOAD:0000000000000000
LOAD:0000000000000000                 .686p
LOAD:0000000000000000                 .mmx
LOAD:0000000000000000                 .model flat
LOAD:0000000000000000 .intel_syntax noprefix
LOAD:0000000000000000
LOAD:0000000000000000 ; ===========================================================================
LOAD:0000000000000000
LOAD:0000000000000000 ; Segment type: Pure code
LOAD:0000000000000000 ; Segment permissions: Read/Execute
LOAD:0000000000000000 LOAD            segment byte public 'CODE' use64
LOAD:0000000000000000                 assume cs:LOAD
LOAD:0000000000000000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000000000 dword_0         dd 464C457Fh            ; DATA XREF: LOAD:00000000000002F8↓o
LOAD:0000000000000000                                         ; LOAD:0000000000000310↓o ...
LOAD:0000000000000000                                         ; File format: \x7FELF
LOAD:0000000000000004                 db 2                    ; File class: 64-bit
LOAD:0000000000000005                 db 1                    ; Data encoding: little-endian
LOAD:0000000000000006                 db 1                    ; File version
LOAD:0000000000000007                 db 0                    ; OS/ABI: UNIX System V ABI
LOAD:0000000000000008                 db 0                    ; ABI Version
LOAD:0000000000000009                 db 7 dup(0)             ; Padding
LOAD:0000000000000010                 dw 3                    ; File type: Shared object
LOAD:0000000000000012                 dw 3Eh                  ; Machine: x86-64
LOAD:0000000000000014                 dd 1                    ; File version
LOAD:0000000000000018                 dq offset start         ; Entry point
LOAD:0000000000000020                 dq 40h                  ; PHT file offset
LOAD:0000000000000028                 dq 32D80h               ; SHT file offset
LOAD:0000000000000030                 dd 0                    ; Processor-specific flags
LOAD:0000000000000034                 dw 40h                  ; ELF header size
LOAD:0000000000000036                 dw 38h                  ; PHT entry size
LOAD:0000000000000038                 dw 9                    ; Number of entries in PHT
LOAD:000000000000003A                 dw 40h                  ; SHT entry size
LOAD:000000000000003C                 dw 25h                  ; Number of entries in SHT
LOAD:000000000000003E                 dw 24h                  ; SHT entry index for string table
LOAD:0000000000000040 ; ELF64 Program Header
LOAD:0000000000000040 ; PHT Entry 0
LOAD:0000000000000040 dword_40        dd 6                    ; DATA XREF: LOAD:0000000000000050↓o
LOAD:0000000000000040                                         ; Type: PHDR
LOAD:0000000000000044                 dd 4                    ; Flags
LOAD:0000000000000048                 dq 40h                  ; File offset
LOAD:0000000000000050                 dq offset dword_40      ; Virtual address
LOAD:0000000000000058                 dq 40h                  ; Physical address
LOAD:0000000000000060                 dq 1F8h                 ; Size in file image
LOAD:0000000000000068                 dq 1F8h                 ; Size in memory image
LOAD:0000000000000070                 dq 8                    ; Alignment
LOAD:0000000000000078 ; PHT Entry 1
LOAD:0000000000000078                 dd 3                    ; Type: INTERP
LOAD:000000000000007C                 dd 4                    ; Flags
LOAD:0000000000000080                 dq 238h                 ; File offset
LOAD:0000000000000088                 dq offset aLib64LdLinuxX8 ; Virtual address
LOAD:0000000000000090                 dq 238h                 ; Physical address
LOAD:0000000000000098                 dq 1Ch                  ; Size in file image
LOAD:00000000000000A0                 dq 1Ch                  ; Size in memory image
LOAD:00000000000000A8                 dq 1                    ; Alignment
LOAD:00000000000000B0 ; PHT Entry 2
LOAD:00000000000000B0                 dd 1                    ; Type: LOAD
LOAD:00000000000000B4                 dd 5                    ; Flags
LOAD:00000000000000B8                 dq 0                    ; File offset
LOAD:00000000000000C0                 dq 0                    ; Virtual address
LOAD:00000000000000C8                 dq 0                    ; Physical address
LOAD:00000000000000D0                 dq 9E70h                ; Size in file image
LOAD:00000000000000D8                 dq 9E70h                ; Size in memory image
LOAD:00000000000000E0                 dq 200000h              ; Alignment
LOAD:00000000000000E8 ; PHT Entry 3
LOAD:00000000000000E8                 dd 1                    ; Type: LOAD
LOAD:00000000000000EC                 dd 6                    ; Flags
LOAD:00000000000000F0                 dq 0AA90h               ; File offset
LOAD:00000000000000F8                 dq offset __frame_dummy_init_array_entry ; Virtual address
LOAD:0000000000000100 qword_100       dq 20AA90h              ; DATA XREF: .data:slotvec0↓o
LOAD:0000000000000100                                         ; Physical address
LOAD:0000000000000108                 dq 5F0h                 ; Size in file image
LOAD:0000000000000110                 dq 2AA8h                ; Size in memory image
LOAD:0000000000000118                 dq 200000h              ; Alignment
LOAD:0000000000000120 ; PHT Entry 4
LOAD:0000000000000120                 dd 2                    ; Type: DYNAMIC
LOAD:0000000000000124                 dd 6                    ; Flags
LOAD:0000000000000128                 dq 0AC38h               ; File offset
LOAD:0000000000000130                 dq offset _DYNAMIC      ; Virtual address
LOAD:0000000000000138                 dq 20AC38h              ; Physical address
LOAD:0000000000000140                 dq 1F0h                 ; Size in file image
LOAD:0000000000000148                 dq 1F0h                 ; Size in memory image
LOAD:0000000000000150                 dq 8                    ; Alignment
LOAD:0000000000000158 ; PHT Entry 5
LOAD:0000000000000158                 dd 4                    ; Type: NOTE
LOAD:000000000000015C                 dd 4                    ; Flags
LOAD:0000000000000160                 dq 254h                 ; File offset
LOAD:0000000000000168                 dq offset dword_254     ; Virtual address
LOAD:0000000000000170                 dq 254h                 ; Physical address
LOAD:0000000000000178                 dq 44h                  ; Size in file image
LOAD:0000000000000180                 dq 44h                  ; Size in memory image
LOAD:0000000000000188                 dq 4                    ; Alignment
LOAD:0000000000000190 ; PHT Entry 6
LOAD:0000000000000190                 dd 6474E550h            ; Type: EH_FRAME
LOAD:0000000000000194                 dd 4                    ; Flags
LOAD:0000000000000198                 dq 8D38h                ; File offset
LOAD:00000000000001A0                 dq offset __GNU_EH_FRAME_HDR ; Virtual address
LOAD:00000000000001A8                 dq 8D38h                ; Physical address
LOAD:00000000000001B0                 dq 2D4h                 ; Size in file image
LOAD:00000000000001B8                 dq 2D4h                 ; Size in memory image
LOAD:00000000000001C0                 dq 4                    ; Alignment
LOAD:00000000000001C8 ; PHT Entry 7
LOAD:00000000000001C8                 dd 6474E551h            ; Type: STACK
LOAD:00000000000001CC                 dd 6                    ; Flags
LOAD:00000000000001D0                 dq 0                    ; File offset
LOAD:00000000000001D8                 dq 0                    ; Virtual address
LOAD:00000000000001E0                 dq 0                    ; Physical address
LOAD:00000000000001E8                 dq 0                    ; Size in file image
LOAD:00000000000001F0                 dq 0                    ; Size in memory image
LOAD:00000000000001F8                 dq 10h                  ; Alignment
LOAD:0000000000000200 ; PHT Entry 8
LOAD:0000000000000200                 dd 6474E552h            ; Type: RO-AFTER
LOAD:0000000000000204                 dd 4                    ; Flags
LOAD:0000000000000208                 dq 0AA90h               ; File offset
LOAD:0000000000000210                 dq offset __frame_dummy_init_array_entry ; Virtual address
LOAD:0000000000000218                 dq 20AA90h              ; Physical address
LOAD:0000000000000220                 dq 570h                 ; Size in file image
LOAD:0000000000000228                 dq 570h                 ; Size in memory image
LOAD:0000000000000230                 dq 1                    ; Alignment
LOAD:0000000000000238 aLib64LdLinuxX8 db '/lib64/ld-linux-x86-64.so.2',0
LOAD:0000000000000238                                         ; DATA XREF: LOAD:0000000000000088↑o
LOAD:0000000000000254 ; ELF Note Entry
LOAD:0000000000000254 dword_254       dd 4                    ; DATA XREF: LOAD:0000000000000168↑o
LOAD:0000000000000254                                         ; Name Size
LOAD:0000000000000258                 dd 10h                  ; Desc Size
LOAD:000000000000025C                 dd 1                    ; Type: NT_GNU_ABI_TAG
LOAD:0000000000000260 aGnu            db 'GNU',0              ; Name
LOAD:0000000000000264                 dd 0, 3, 2, 0           ; ABI: Linux 3.2.0
LOAD:0000000000000274 ; ELF Note Entry
LOAD:0000000000000274                 dd 4                    ; Name Size
LOAD:0000000000000278                 dd 14h                  ; Desc Size
LOAD:000000000000027C                 dd 3                    ; Type: NT_GNU_BUILD_ID
LOAD:0000000000000280 aGnu_0          db 'GNU',0              ; Name
LOAD:0000000000000284                 db 9Fh, 54h, 49h, 0B6h, 1Eh, 95h, 12h, 0F5h, 75h, 0A3h ; Desc
LOAD:0000000000000284                 db 84h, 15h, 7Ch, 9Fh, 0A9h, 66h, 0B4h, 6Bh, 0BBh, 0FAh
LOAD:0000000000000298 ; ELF GNU Hash Table
LOAD:0000000000000298 elf_gnu_hash_nbuckets dd 3
LOAD:000000000000029C elf_gnu_hash_symbias dd 38h
LOAD:00000000000002A0 elf_gnu_hash_bitmask_nwords dd 1
LOAD:00000000000002A4 elf_gnu_hash_shift dd 6
LOAD:00000000000002A8 elf_gnu_hash_indexes dq 121801A000614904h
LOAD:00000000000002B0 elf_gnu_hash_bucket dd 38h, 39h, 3Fh
LOAD:00000000000002BC elf_gnu_hash_chain dd 1C8C1D29h, 9E7650BCh, 10615566h, 9789A096h, 72632CCEh
LOAD:00000000000002BC                 dd 0F54162E4h, 1C8BF239h, 12F7C433h, 0
LOAD:00000000000002E0 ; ELF Symbol Table
LOAD:00000000000002E0                 Elf64_Sym <0>
LOAD:00000000000002F8                 Elf64_Sym <offset aCtypeToupperLo - offset byte_8E0, 12h, 0, 0, \ ; "__ctype_toupper_loc"
LOAD:00000000000002F8                            offset dword_0, 0>
LOAD:0000000000000310                 Elf64_Sym <offset aFree - offset byte_8E0, 12h, 0, 0, offset dword_0, \ ; "free"
LOAD:0000000000000310                            0>
LOAD:0000000000000328                 Elf64_Sym <offset aAbort - offset byte_8E0, 12h, 0, 0, offset dword_0,\ ; "abort"
LOAD:0000000000000328                            0>
LOAD:0000000000000340                 Elf64_Sym <offset aErrnoLocation - offset byte_8E0, 12h, 0, 0, \ ; "__errno_location"
LOAD:0000000000000340                            offset dword_0, 0>
LOAD:0000000000000358                 Elf64_Sym <offset aStrncmp - offset byte_8E0, 12h, 0, 0, \ ; "strncmp"
LOAD:0000000000000358                            offset dword_0, 0>
LOAD:0000000000000370                 Elf64_Sym <offset aItmDeregistert - offset byte_8E0, 20h, 0, 0, \ ; "_ITM_deregisterTMCloneTable"
LOAD:0000000000000370                            offset dword_0, 0>
LOAD:0000000000000388                 Elf64_Sym <offset aExit - offset byte_8E0, 12h, 0, 0, offset dword_0, \ ; "_exit"
LOAD:0000000000000388                            0>
LOAD:00000000000003A0                 Elf64_Sym <offset aFpending - offset byte_8E0, 12h, 0, 0, \ ; "__fpending"
LOAD:00000000000003A0                            offset dword_0, 0>
LOAD:00000000000003B8                 Elf64_Sym <offset aBindtextdomain+4 - offset byte_8E0, 12h, 0, 0, \ ; "textdomain"
LOAD:00000000000003B8                            offset dword_0, 0>
LOAD:00000000000003D0                 Elf64_Sym <offset aFclose - offset byte_8E0, 12h, 0, 0, \ ; "fclose"
LOAD:00000000000003D0                            offset dword_0, 0>
LOAD:00000000000003E8                 Elf64_Sym <offset aBindtextdomain - offset byte_8E0, 12h, 0, 0, \ ; "bindtextdomain"
LOAD:00000000000003E8                            offset dword_0, 0>
LOAD:0000000000000400                 Elf64_Sym <offset aStpcpy - offset byte_8E0, 12h, 0, 0, \ ; "stpcpy"
LOAD:0000000000000400                            offset dword_0, 0>
LOAD:0000000000000418                 Elf64_Sym <offset aDcgettext - offset byte_8E0, 12h, 0, 0, \ ; "dcgettext"
LOAD:0000000000000418                            offset dword_0, 0>
LOAD:0000000000000430                 Elf64_Sym <offset aCtypeGetMbCurM - offset byte_8E0, 12h, 0, 0, \ ; "__ctype_get_mb_cur_max"
LOAD:0000000000000430                            offset dword_0, 0>
LOAD:0000000000000448                 Elf64_Sym <offset aStrlen - offset byte_8E0, 12h, 0, 0, \ ; "strlen"
LOAD:0000000000000448                            offset dword_0, 0>
LOAD:0000000000000460                 Elf64_Sym <offset aStackChkFail - offset byte_8E0, 12h, 0, 0, \ ; "__stack_chk_fail"
LOAD:0000000000000460                            offset dword_0, 0>
LOAD:0000000000000478                 Elf64_Sym <offset aGetoptLong - offset byte_8E0, 12h, 0, 0, \ ; "getopt_long"
LOAD:0000000000000478                            offset dword_0, 0>
LOAD:0000000000000490                 Elf64_Sym <offset aMbrtowc - offset byte_8E0, 12h, 0, 0, \ ; "mbrtowc"
LOAD:0000000000000490                            offset dword_0, 0>
LOAD:00000000000004A8                 Elf64_Sym <offset aStrchr - offset byte_8E0, 12h, 0, 0, \ ; "strchr"
LOAD:00000000000004A8                            offset dword_0, 0>
LOAD:00000000000004C0                 Elf64_Sym <offset aStrrchr - offset byte_8E0, 12h, 0, 0, \ ; "strrchr"
LOAD:00000000000004C0                            offset dword_0, 0>
LOAD:00000000000004D8                 Elf64_Sym <offset aLseek - offset byte_8E0, 12h, 0, 0, offset dword_0,\ ; "lseek"
LOAD:00000000000004D8                            0>
LOAD:00000000000004F0                 Elf64_Sym <offset aAssertFail - offset byte_8E0, 12h, 0, 0, \ ; "__assert_fail"
LOAD:00000000000004F0                            offset dword_0, 0>
LOAD:0000000000000508                 Elf64_Sym <offset aStrtoulInterna - offset byte_8E0, 12h, 0, 0, \ ; "__strtoul_internal"
LOAD:0000000000000508                            offset dword_0, 0>
LOAD:0000000000000520                 Elf64_Sym <offset aMemset - offset byte_8E0, 12h, 0, 0, \ ; "memset"
LOAD:0000000000000520                            offset dword_0, 0>
LOAD:0000000000000538                 Elf64_Sym <offset aFclose+1 - offset byte_8E0, 12h, 0, 0, \ ; "close"
LOAD:0000000000000538                            offset dword_0, 0>
LOAD:0000000000000550                 Elf64_Sym <offset aPosixFadvise - offset byte_8E0, 12h, 0, 0, \ ; "posix_fadvise"
LOAD:0000000000000550                            offset dword_0, 0>
LOAD:0000000000000568                 Elf64_Sym <offset aRead - offset byte_8E0, 12h, 0, 0, offset dword_0, \ ; "read"
LOAD:0000000000000568                            0>
LOAD:0000000000000580                 Elf64_Sym <offset aLibcStartMain - offset byte_8E0, 12h, 0, 0, \ ; "__libc_start_main"
LOAD:0000000000000580                            offset dword_0, 0>
LOAD:0000000000000598                 Elf64_Sym <offset aMemcmp - offset byte_8E0, 12h, 0, 0, \ ; "memcmp"
LOAD:0000000000000598                            offset dword_0, 0>
LOAD:00000000000005B0                 Elf64_Sym <offset aFputsUnlocked - offset byte_8E0, 12h, 0, 0, \ ; "fputs_unlocked"
LOAD:00000000000005B0                            offset dword_0, 0>
LOAD:00000000000005C8                 Elf64_Sym <offset aCalloc - offset byte_8E0, 12h, 0, 0, \ ; "calloc"
LOAD:00000000000005C8                            offset dword_0, 0>
LOAD:00000000000005E0                 Elf64_Sym <offset aGmonStart - offset byte_8E0, 20h, 0, 0, \ ; "__gmon_start__"
LOAD:00000000000005E0                            offset dword_0, 0>
LOAD:00000000000005F8                 Elf64_Sym <offset aMemcpy - offset byte_8E0, 12h, 0, 0, \ ; "memcpy"
LOAD:00000000000005F8                            offset dword_0, 0>
LOAD:0000000000000610                 Elf64_Sym <offset aFileno - offset byte_8E0, 12h, 0, 0, \ ; "fileno"
LOAD:0000000000000610                            offset dword_0, 0>
LOAD:0000000000000628                 Elf64_Sym <offset aMalloc - offset byte_8E0, 12h, 0, 0, \ ; "malloc"
LOAD:0000000000000628                            offset dword_0, 0>
LOAD:0000000000000640                 Elf64_Sym <offset aFflush - offset byte_8E0, 12h, 0, 0, \ ; "fflush"
LOAD:0000000000000640                            offset dword_0, 0>
LOAD:0000000000000658                 Elf64_Sym <offset aNlLanginfo - offset byte_8E0, 12h, 0, 0, \ ; "nl_langinfo"
LOAD:0000000000000658                            offset dword_0, 0>
LOAD:0000000000000670                 Elf64_Sym <offset aFreading - offset byte_8E0, 12h, 0, 0, \ ; "__freading"
LOAD:0000000000000670                            offset dword_0, 0>
LOAD:0000000000000688                 Elf64_Sym <offset aFwriteUnlocked - offset byte_8E0, 12h, 0, 0, \ ; "fwrite_unlocked"
LOAD:0000000000000688                            offset dword_0, 0>
LOAD:00000000000006A0                 Elf64_Sym <offset aRealloc - offset byte_8E0, 12h, 0, 0, \ ; "realloc"
LOAD:00000000000006A0                            offset dword_0, 0>
LOAD:00000000000006B8                 Elf64_Sym <offset aSetlocale - offset byte_8E0, 12h, 0, 0, \ ; "setlocale"
LOAD:00000000000006B8                            offset dword_0, 0>
LOAD:00000000000006D0                 Elf64_Sym <offset aPrintfChk - offset byte_8E0, 12h, 0, 0, \ ; "__printf_chk"
LOAD:00000000000006D0                            offset dword_0, 0>
LOAD:00000000000006E8                 Elf64_Sym <offset aError - offset byte_8E0, 12h, 0, 0, offset dword_0,\ ; "error"
LOAD:00000000000006E8                            0>
LOAD:0000000000000700                 Elf64_Sym <offset aFseeko - offset byte_8E0, 12h, 0, 0, \ ; "fseeko"
LOAD:0000000000000700                            offset dword_0, 0>
LOAD:0000000000000718                 Elf64_Sym <offset aCxaAtexit - offset byte_8E0, 12h, 0, 0, \ ; "__cxa_atexit"
LOAD:0000000000000718                            offset dword_0, 0>
LOAD:0000000000000730                 Elf64_Sym <offset aExit+1 - offset byte_8E0, 12h, 0, 0, \ ; "exit"
LOAD:0000000000000730                            offset dword_0, 0>
LOAD:0000000000000748                 Elf64_Sym <offset aFwrite - offset byte_8E0, 12h, 0, 0, \ ; "fwrite"
LOAD:0000000000000748                            offset dword_0, 0>
LOAD:0000000000000760                 Elf64_Sym <offset aFprintfChk - offset byte_8E0, 12h, 0, 0, \ ; "__fprintf_chk"
LOAD:0000000000000760                            offset dword_0, 0>
LOAD:0000000000000778                 Elf64_Sym <offset aItmRegistertmc - offset byte_8E0, 20h, 0, 0, \ ; "_ITM_registerTMCloneTable"
LOAD:0000000000000778                            offset dword_0, 0>
LOAD:0000000000000790                 Elf64_Sym <offset aMbsinit - offset byte_8E0, 12h, 0, 0, \ ; "mbsinit"
LOAD:0000000000000790                            offset dword_0, 0>
LOAD:00000000000007A8                 Elf64_Sym <offset aIswprint - offset byte_8E0, 12h, 0, 0, \ ; "iswprint"
LOAD:00000000000007A8                            offset dword_0, 0>
LOAD:00000000000007C0                 Elf64_Sym <offset aCxaFinalize - offset byte_8E0, 22h, 0, 0, \ ; "__cxa_finalize"
LOAD:00000000000007C0                            offset dword_0, 0>
LOAD:00000000000007D8                 Elf64_Sym <offset aCtypeTolowerLo - offset byte_8E0, 12h, 0, 0, \ ; "__ctype_tolower_loc"
LOAD:00000000000007D8                            offset dword_0, 0>
LOAD:00000000000007F0                 Elf64_Sym <offset aCtypeBLoc - offset byte_8E0, 12h, 0, 0, \ ; "__ctype_b_loc"
LOAD:00000000000007F0                            offset dword_0, 0>
LOAD:0000000000000808                 Elf64_Sym <offset aSprintfChk - offset byte_8E0, 12h, 0, 0, \ ; "__sprintf_chk"
LOAD:0000000000000808                            offset dword_0, 0>
LOAD:0000000000000820                 Elf64_Sym <offset aStdout - offset byte_8E0, 11h, 0, 19h, \ ; "stdout"
LOAD:0000000000000820                            offset stdout@@GLIBC_2_2_5, 8>
LOAD:0000000000000838                 Elf64_Sym <offset aProgname - offset byte_8E0, 11h, 0, 19h, \ ; "__progname"
LOAD:0000000000000838                            offset __bss_start, 8>
LOAD:0000000000000850                 Elf64_Sym <offset aStdin - offset byte_8E0, 11h, 0, 19h, \ ; "stdin"
LOAD:0000000000000850                            offset stdin@@GLIBC_2_2_5, 8>
LOAD:0000000000000868                 Elf64_Sym <offset aProgramInvocat - offset byte_8E0, 21h, 0, 19h, \ ; "program_invocation_name"
LOAD:0000000000000868                            offset program_invocation_name@@GLIBC_2_2_5, 8>
LOAD:0000000000000880                 Elf64_Sym <offset aPrognameFull - offset byte_8E0, 11h, 0, 19h, \ ; "__progname_full"
LOAD:0000000000000880                            offset program_invocation_name@@GLIBC_2_2_5, 8>
LOAD:0000000000000898                 Elf64_Sym <offset aProgramInvocat_0 - offset byte_8E0, 21h, 0, 19h, \ ; "program_invocation_short_name"
LOAD:0000000000000898                            offset __bss_start, 8>
LOAD:00000000000008B0                 Elf64_Sym <offset aStderr - offset byte_8E0, 11h, 0, 19h, \ ; "stderr"
LOAD:00000000000008B0                            offset stderr@@GLIBC_2_2_5, 8>
LOAD:00000000000008C8                 Elf64_Sym <offset aOptind - offset byte_8E0, 11h, 0, 19h, \ ; "optind"
LOAD:00000000000008C8                            offset optind@@GLIBC_2_2_5, 4>
LOAD:00000000000008E0 ; ELF String Table
LOAD:00000000000008E0 byte_8E0        db 0                    ; DATA XREF: LOAD:00000000000002F8↑o
LOAD:00000000000008E0                                         ; LOAD:0000000000000310↑o ...
LOAD:00000000000008E1 aLibcSo6        db 'libc.so.6',0        ; DATA XREF: LOAD:0000000000000C68↓o
LOAD:00000000000008EB aFflush         db 'fflush',0           ; DATA XREF: LOAD:0000000000000640↑o
LOAD:00000000000008F2 aPrintfChk      db '__printf_chk',0     ; DATA XREF: LOAD:00000000000006D0↑o
LOAD:00000000000008FF aSetlocale      db 'setlocale',0        ; DATA XREF: LOAD:00000000000006B8↑o
LOAD:0000000000000909 aMbrtowc        db 'mbrtowc',0          ; DATA XREF: LOAD:0000000000000490↑o
LOAD:0000000000000911 aStrncmp        db 'strncmp',0          ; DATA XREF: LOAD:0000000000000358↑o
LOAD:0000000000000919 aOptind         db 'optind',0           ; DATA XREF: LOAD:00000000000008C8↑o
LOAD:0000000000000920 aStrrchr        db 'strrchr',0          ; DATA XREF: LOAD:00000000000004C0↑o
LOAD:0000000000000928 aDcgettext      db 'dcgettext',0        ; DATA XREF: LOAD:0000000000000418↑o
LOAD:0000000000000932 aError          db 'error',0            ; DATA XREF: LOAD:00000000000006E8↑o
LOAD:0000000000000938 aStackChkFail   db '__stack_chk_fail',0 ; DATA XREF: LOAD:0000000000000460↑o
LOAD:0000000000000949 aIswprint       db 'iswprint',0         ; DATA XREF: LOAD:00000000000007A8↑o
LOAD:0000000000000952 aRealloc        db 'realloc',0          ; DATA XREF: LOAD:00000000000006A0↑o
LOAD:000000000000095A aAbort          db 'abort',0            ; DATA XREF: LOAD:0000000000000328↑o
LOAD:0000000000000960 aStdin          db 'stdin',0            ; DATA XREF: LOAD:0000000000000850↑o
LOAD:0000000000000966 aExit           db '_exit',0            ; DATA XREF: LOAD:0000000000000388↑o
LOAD:0000000000000966                                         ; LOAD:0000000000000730↑o
LOAD:000000000000096C aProgramInvocat db 'program_invocation_name',0
LOAD:000000000000096C                                         ; DATA XREF: LOAD:0000000000000868↑o
LOAD:0000000000000984 aAssertFail     db '__assert_fail',0    ; DATA XREF: LOAD:00000000000004F0↑o
LOAD:0000000000000992 aCtypeGetMbCurM db '__ctype_get_mb_cur_max',0
LOAD:0000000000000992                                         ; DATA XREF: LOAD:0000000000000430↑o
LOAD:00000000000009A9 aPosixFadvise   db 'posix_fadvise',0    ; DATA XREF: LOAD:0000000000000550↑o
LOAD:00000000000009B7 aCalloc         db 'calloc',0           ; DATA XREF: LOAD:00000000000005C8↑o
LOAD:00000000000009BE aStrlen         db 'strlen',0           ; DATA XREF: LOAD:0000000000000448↑o
LOAD:00000000000009C5 aMemset         db 'memset',0           ; DATA XREF: LOAD:0000000000000520↑o
LOAD:00000000000009CC aErrnoLocation  db '__errno_location',0 ; DATA XREF: LOAD:0000000000000340↑o
LOAD:00000000000009DD aRead           db 'read',0             ; DATA XREF: LOAD:0000000000000568↑o
LOAD:00000000000009E2 aMemcmp         db 'memcmp',0           ; DATA XREF: LOAD:0000000000000598↑o
LOAD:00000000000009E9 aFprintfChk     db '__fprintf_chk',0    ; DATA XREF: LOAD:0000000000000760↑o
LOAD:00000000000009F7 aStdout         db 'stdout',0           ; DATA XREF: LOAD:0000000000000820↑o
LOAD:00000000000009FE aLseek          db 'lseek',0            ; DATA XREF: LOAD:00000000000004D8↑o
LOAD:0000000000000A04 aMemcpy         db 'memcpy',0           ; DATA XREF: LOAD:00000000000005F8↑o
LOAD:0000000000000A0B aFclose         db 'fclose',0           ; DATA XREF: LOAD:00000000000003D0↑o
LOAD:0000000000000A0B                                         ; LOAD:0000000000000538↑o
LOAD:0000000000000A12 aMalloc         db 'malloc',0           ; DATA XREF: LOAD:0000000000000628↑o
LOAD:0000000000000A19 aMbsinit        db 'mbsinit',0          ; DATA XREF: LOAD:0000000000000790↑o
LOAD:0000000000000A21 aNlLanginfo     db 'nl_langinfo',0      ; DATA XREF: LOAD:0000000000000658↑o
LOAD:0000000000000A2D aCtypeBLoc      db '__ctype_b_loc',0    ; DATA XREF: LOAD:00000000000007F0↑o
LOAD:0000000000000A3B aFreading       db '__freading',0       ; DATA XREF: LOAD:0000000000000670↑o
LOAD:0000000000000A46 aStderr         db 'stderr',0           ; DATA XREF: LOAD:00000000000008B0↑o
LOAD:0000000000000A4D aGetoptLong     db 'getopt_long',0      ; DATA XREF: LOAD:0000000000000478↑o
LOAD:0000000000000A59 aFileno         db 'fileno',0           ; DATA XREF: LOAD:0000000000000610↑o
LOAD:0000000000000A60 aFwrite         db 'fwrite',0           ; DATA XREF: LOAD:0000000000000748↑o
LOAD:0000000000000A67 aFpending       db '__fpending',0       ; DATA XREF: LOAD:00000000000003A0↑o
LOAD:0000000000000A72 aStrchr         db 'strchr',0           ; DATA XREF: LOAD:00000000000004A8↑o
LOAD:0000000000000A79 aProgramInvocat_0 db 'program_invocation_short_name',0
LOAD:0000000000000A79                                         ; DATA XREF: LOAD:0000000000000898↑o
LOAD:0000000000000A97 aCtypeToupperLo db '__ctype_toupper_loc',0
LOAD:0000000000000A97                                         ; DATA XREF: LOAD:00000000000002F8↑o
LOAD:0000000000000AAB aCtypeTolowerLo db '__ctype_tolower_loc',0
LOAD:0000000000000AAB                                         ; DATA XREF: LOAD:00000000000007D8↑o
LOAD:0000000000000ABF aCxaFinalize    db '__cxa_finalize',0   ; DATA XREF: LOAD:00000000000007C0↑o
LOAD:0000000000000ACE aSprintfChk     db '__sprintf_chk',0    ; DATA XREF: LOAD:0000000000000808↑o
LOAD:0000000000000ADC aBindtextdomain db 'bindtextdomain',0   ; DATA XREF: LOAD:00000000000003E8↑o
LOAD:0000000000000ADC                                         ; LOAD:00000000000003B8↑o
LOAD:0000000000000AEB aFwriteUnlocked db 'fwrite_unlocked',0  ; DATA XREF: LOAD:0000000000000688↑o
LOAD:0000000000000AFB aLibcStartMain  db '__libc_start_main',0
LOAD:0000000000000AFB                                         ; DATA XREF: LOAD:0000000000000580↑o
LOAD:0000000000000B0D aStpcpy         db 'stpcpy',0           ; DATA XREF: LOAD:0000000000000400↑o
LOAD:0000000000000B14 aFseeko         db 'fseeko',0           ; DATA XREF: LOAD:0000000000000700↑o
LOAD:0000000000000B1B aStrtoulInterna db '__strtoul_internal',0
LOAD:0000000000000B1B                                         ; DATA XREF: LOAD:0000000000000508↑o
LOAD:0000000000000B2E aFputsUnlocked  db 'fputs_unlocked',0   ; DATA XREF: LOAD:00000000000005B0↑o
LOAD:0000000000000B3D aFree           db 'free',0             ; DATA XREF: LOAD:0000000000000310↑o
LOAD:0000000000000B42 aProgname       db '__progname',0       ; DATA XREF: LOAD:0000000000000838↑o
LOAD:0000000000000B4D aPrognameFull   db '__progname_full',0  ; DATA XREF: LOAD:0000000000000880↑o
LOAD:0000000000000B5D aCxaAtexit      db '__cxa_atexit',0     ; DATA XREF: LOAD:0000000000000718↑o
LOAD:0000000000000B6A aGlibc234       db 'GLIBC_2.3.4',0      ; DATA XREF: LOAD:0000000000000C78↓o
LOAD:0000000000000B76 aGlibc214       db 'GLIBC_2.14',0       ; DATA XREF: LOAD:0000000000000C88↓o
LOAD:0000000000000B81 aGlibc24        db 'GLIBC_2.4',0        ; DATA XREF: LOAD:0000000000000C98↓o
LOAD:0000000000000B8B aGlibc225       db 'GLIBC_2.2.5',0      ; DATA XREF: LOAD:0000000000000CA8↓o
LOAD:0000000000000B97 aGlibc23        db 'GLIBC_2.3',0        ; DATA XREF: LOAD:0000000000000CB8↓o
LOAD:0000000000000BA1 aItmDeregistert db '_ITM_deregisterTMCloneTable',0
LOAD:0000000000000BA1                                         ; DATA XREF: LOAD:0000000000000370↑o
LOAD:0000000000000BBD aGmonStart      db '__gmon_start__',0   ; DATA XREF: LOAD:00000000000005E0↑o
LOAD:0000000000000BCC aItmRegistertmc db '_ITM_registerTMCloneTable',0
LOAD:0000000000000BCC                                         ; DATA XREF: LOAD:0000000000000778↑o
LOAD:0000000000000BE6 ; ELF GNU Symbol Version Table
LOAD:0000000000000BE6                 dw 0
LOAD:0000000000000BE8                 dw 2                    ; __ctype_toupper_loc@@GLIBC_2.3
LOAD:0000000000000BEA                 dw 3                    ; free@@GLIBC_2.2.5
LOAD:0000000000000BEC                 dw 3                    ; abort@@GLIBC_2.2.5
LOAD:0000000000000BEE                 dw 3                    ; __errno_location@@GLIBC_2.2.5
LOAD:0000000000000BF0                 dw 3                    ; strncmp@@GLIBC_2.2.5
LOAD:0000000000000BF2                 dw 0                    ; local  symbol: _ITM_deregisterTMCloneTable
LOAD:0000000000000BF4                 dw 3                    ; _exit@@GLIBC_2.2.5
LOAD:0000000000000BF6                 dw 3                    ; __fpending@@GLIBC_2.2.5
LOAD:0000000000000BF8                 dw 3                    ; textdomain@@GLIBC_2.2.5
LOAD:0000000000000BFA                 dw 3                    ; fclose@@GLIBC_2.2.5
LOAD:0000000000000BFC                 dw 3                    ; bindtextdomain@@GLIBC_2.2.5
LOAD:0000000000000BFE                 dw 3                    ; stpcpy@@GLIBC_2.2.5
LOAD:0000000000000C00                 dw 3                    ; dcgettext@@GLIBC_2.2.5
LOAD:0000000000000C02                 dw 3                    ; __ctype_get_mb_cur_max@@GLIBC_2.2.5
LOAD:0000000000000C04                 dw 3                    ; strlen@@GLIBC_2.2.5
LOAD:0000000000000C06                 dw 4                    ; __stack_chk_fail@@GLIBC_2.4
LOAD:0000000000000C08                 dw 3                    ; getopt_long@@GLIBC_2.2.5
LOAD:0000000000000C0A                 dw 3                    ; mbrtowc@@GLIBC_2.2.5
LOAD:0000000000000C0C                 dw 3                    ; strchr@@GLIBC_2.2.5
LOAD:0000000000000C0E                 dw 3                    ; strrchr@@GLIBC_2.2.5
LOAD:0000000000000C10                 dw 3                    ; lseek@@GLIBC_2.2.5
LOAD:0000000000000C12                 dw 3                    ; __assert_fail@@GLIBC_2.2.5
LOAD:0000000000000C14                 dw 3                    ; __strtoul_internal@@GLIBC_2.2.5
LOAD:0000000000000C16                 dw 3                    ; memset@@GLIBC_2.2.5
LOAD:0000000000000C18                 dw 3                    ; close@@GLIBC_2.2.5
LOAD:0000000000000C1A                 dw 3                    ; posix_fadvise@@GLIBC_2.2.5
LOAD:0000000000000C1C                 dw 3                    ; read@@GLIBC_2.2.5
LOAD:0000000000000C1E                 dw 3                    ; __libc_start_main@@GLIBC_2.2.5
LOAD:0000000000000C20                 dw 3                    ; memcmp@@GLIBC_2.2.5
LOAD:0000000000000C22                 dw 3                    ; fputs_unlocked@@GLIBC_2.2.5
LOAD:0000000000000C24                 dw 3                    ; calloc@@GLIBC_2.2.5
LOAD:0000000000000C26                 dw 0                    ; local  symbol: __gmon_start__
LOAD:0000000000000C28                 dw 5                    ; memcpy@@GLIBC_2.14
LOAD:0000000000000C2A                 dw 3                    ; fileno@@GLIBC_2.2.5
LOAD:0000000000000C2C                 dw 3                    ; malloc@@GLIBC_2.2.5
LOAD:0000000000000C2E                 dw 3                    ; fflush@@GLIBC_2.2.5
LOAD:0000000000000C30                 dw 3                    ; nl_langinfo@@GLIBC_2.2.5
LOAD:0000000000000C32                 dw 3                    ; __freading@@GLIBC_2.2.5
LOAD:0000000000000C34                 dw 3                    ; fwrite_unlocked@@GLIBC_2.2.5
LOAD:0000000000000C36                 dw 3                    ; realloc@@GLIBC_2.2.5
LOAD:0000000000000C38                 dw 3                    ; setlocale@@GLIBC_2.2.5
LOAD:0000000000000C3A                 dw 6                    ; __printf_chk@@GLIBC_2.3.4
LOAD:0000000000000C3C                 dw 3                    ; error@@GLIBC_2.2.5
LOAD:0000000000000C3E                 dw 3                    ; fseeko@@GLIBC_2.2.5
LOAD:0000000000000C40                 dw 3                    ; __cxa_atexit@@GLIBC_2.2.5
LOAD:0000000000000C42                 dw 3                    ; exit@@GLIBC_2.2.5
LOAD:0000000000000C44                 dw 3                    ; fwrite@@GLIBC_2.2.5
LOAD:0000000000000C46                 dw 6                    ; __fprintf_chk@@GLIBC_2.3.4
LOAD:0000000000000C48                 dw 0                    ; local  symbol: _ITM_registerTMCloneTable
LOAD:0000000000000C4A                 dw 3                    ; mbsinit@@GLIBC_2.2.5
LOAD:0000000000000C4C                 dw 3                    ; iswprint@@GLIBC_2.2.5
LOAD:0000000000000C4E                 dw 3                    ; __cxa_finalize@@GLIBC_2.2.5
LOAD:0000000000000C50                 dw 2                    ; __ctype_tolower_loc@@GLIBC_2.3
LOAD:0000000000000C52                 dw 2                    ; __ctype_b_loc@@GLIBC_2.3
LOAD:0000000000000C54                 dw 6                    ; __sprintf_chk@@GLIBC_2.3.4
LOAD:0000000000000C56                 dw 3                    ; stdout@@GLIBC_2.2.5
LOAD:0000000000000C58                 dw 3                    ; __progname@@GLIBC_2.2.5
LOAD:0000000000000C5A                 dw 3                    ; stdin@@GLIBC_2.2.5
LOAD:0000000000000C5C                 dw 3                    ; program_invocation_name@@GLIBC_2.2.5
LOAD:0000000000000C5E                 dw 3                    ; __progname_full@@GLIBC_2.2.5
LOAD:0000000000000C60                 dw 3                    ; program_invocation_short_name@@GLIBC_2.2.5
LOAD:0000000000000C62                 dw 3                    ; stderr@@GLIBC_2.2.5
LOAD:0000000000000C64                 dw 3                    ; optind@@GLIBC_2.2.5
LOAD:0000000000000C66                 dw 0
LOAD:0000000000000C68 ; ELF GNU Symbol Version Requirements
LOAD:0000000000000C68                 Elf64_Verneed <1, 5, offset aLibcSo6 - offset byte_8E0, 10h, 0> ; "libc.so.6"
LOAD:0000000000000C78                 Elf64_Vernaux <9691974h, 0, 6, offset aGlibc234 - offset byte_8E0, \ ; "GLIBC_2.3.4"
LOAD:0000000000000C78                                10h>
LOAD:0000000000000C88                 Elf64_Vernaux <6969194h, 0, 5, offset aGlibc214 - offset byte_8E0, \ ; "GLIBC_2.14"
LOAD:0000000000000C88                                10h>
LOAD:0000000000000C98                 Elf64_Vernaux <0D696914h, 0, 4, offset aGlibc24 - offset byte_8E0, \ ; "GLIBC_2.4"
LOAD:0000000000000C98                                10h>
LOAD:0000000000000CA8                 Elf64_Vernaux <9691A75h, 0, 3, offset aGlibc225 - offset byte_8E0, \ ; "GLIBC_2.2.5"
LOAD:0000000000000CA8                                10h>
LOAD:0000000000000CB8                 Elf64_Vernaux <0D696913h, 0, 2, offset aGlibc23 - offset byte_8E0, 0> ; "GLIBC_2.3"
LOAD:0000000000000CC8 ; ELF RELA Relocation Table
LOAD:0000000000000CC8                 Elf64_Rela <20AA90h, 8, 27A0h> ; R_X86_64_RELATIVE +27A0h
LOAD:0000000000000CE0                 Elf64_Rela <20AA98h, 8, 2760h> ; R_X86_64_RELATIVE +2760h
LOAD:0000000000000CF8                 Elf64_Rela <20AAA0h, 8, 71F2h> ; R_X86_64_RELATIVE +71F2h
LOAD:0000000000000D10                 Elf64_Rela <20AAC0h, 8, 71FDh> ; R_X86_64_RELATIVE +71FDh
LOAD:0000000000000D28                 Elf64_Rela <20AAE0h, 8, 7204h> ; R_X86_64_RELATIVE +7204h
LOAD:0000000000000D40                 Elf64_Rela <20AB00h, 8, 7214h> ; R_X86_64_RELATIVE +7214h
LOAD:0000000000000D58                 Elf64_Rela <20AB20h, 8, 7222h> ; R_X86_64_RELATIVE +7222h
LOAD:0000000000000D70                 Elf64_Rela <20AB40h, 8, 7227h> ; R_X86_64_RELATIVE +7227h
LOAD:0000000000000D88                 Elf64_Rela <20AB80h, 8, 722Fh> ; R_X86_64_RELATIVE +722Fh
LOAD:0000000000000DA0                 Elf64_Rela <20AB88h, 8, 7235h> ; R_X86_64_RELATIVE +7235h
LOAD:0000000000000DB8                 Elf64_Rela <20AB90h, 8, 723Bh> ; R_X86_64_RELATIVE +723Bh
LOAD:0000000000000DD0                 Elf64_Rela <20AB98h, 8, 7241h> ; R_X86_64_RELATIVE +7241h
LOAD:0000000000000DE8                 Elf64_Rela <20ABA0h, 8, 726Ch> ; R_X86_64_RELATIVE +726Ch
LOAD:0000000000000E00                 Elf64_Rela <20ABA8h, 8, 7247h> ; R_X86_64_RELATIVE +7247h
LOAD:0000000000000E18                 Elf64_Rela <20ABB0h, 8, 724Dh> ; R_X86_64_RELATIVE +724Dh
LOAD:0000000000000E30                 Elf64_Rela <20ABB8h, 8, 7253h> ; R_X86_64_RELATIVE +7253h
LOAD:0000000000000E48                 Elf64_Rela <20ABC0h, 8, 7259h> ; R_X86_64_RELATIVE +7259h
LOAD:0000000000000E60                 Elf64_Rela <20ABC8h, 8, 725Fh> ; R_X86_64_RELATIVE +725Fh
LOAD:0000000000000E78                 Elf64_Rela <20ABD0h, 8, 7265h> ; R_X86_64_RELATIVE +7265h
LOAD:0000000000000E90                 Elf64_Rela <20ABD8h, 8, 726Bh> ; R_X86_64_RELATIVE +726Bh
LOAD:0000000000000EA8                 Elf64_Rela <20ABE0h, 8, 83B9h> ; R_X86_64_RELATIVE +83B9h
LOAD:0000000000000EC0                 Elf64_Rela <20ABE8h, 8, 83C1h> ; R_X86_64_RELATIVE +83C1h
LOAD:0000000000000ED8                 Elf64_Rela <20ABF0h, 8, 83C7h> ; R_X86_64_RELATIVE +83C7h
LOAD:0000000000000EF0                 Elf64_Rela <20ABF8h, 8, 83D4h> ; R_X86_64_RELATIVE +83D4h
LOAD:0000000000000F08                 Elf64_Rela <20AC00h, 8, 83E1h> ; R_X86_64_RELATIVE +83E1h
LOAD:0000000000000F20                 Elf64_Rela <20AC08h, 8, 703Ah> ; R_X86_64_RELATIVE +703Ah
LOAD:0000000000000F38                 Elf64_Rela <20AC10h, 8, 83F5h> ; R_X86_64_RELATIVE +83F5h
LOAD:0000000000000F50                 Elf64_Rela <20AC18h, 8, 83DAh> ; R_X86_64_RELATIVE +83DAh
LOAD:0000000000000F68                 Elf64_Rela <20AC20h, 8, 7157h> ; R_X86_64_RELATIVE +7157h
LOAD:0000000000000F80                 Elf64_Rela <20AC28h, 8, 83FDh> ; R_X86_64_RELATIVE +83FDh
LOAD:0000000000000F98                 Elf64_Rela <20B008h, 8, 20B008h> ; R_X86_64_RELATIVE +20B008h
LOAD:0000000000000FB0                 Elf64_Rela <20B010h, 8, 834Fh> ; R_X86_64_RELATIVE +834Fh
LOAD:0000000000000FC8                 Elf64_Rela <20B060h, 8, 20B070h> ; R_X86_64_RELATIVE +20B070h
LOAD:0000000000000FE0                 Elf64_Rela <20B078h, 8, 20D400h> ; R_X86_64_RELATIVE +20D400h
LOAD:0000000000000FF8                 Elf64_Rela <20AFD0h, 600000006h, 0> ; R_X86_64_GLOB_DAT _ITM_deregisterTMCloneTable
LOAD:0000000000001010                 Elf64_Rela <20AFD8h, 1C00000006h, 0> ; R_X86_64_GLOB_DAT __libc_start_main
LOAD:0000000000001028                 Elf64_Rela <20AFE0h, 2000000006h, 0> ; R_X86_64_GLOB_DAT __gmon_start__
LOAD:0000000000001040                 Elf64_Rela <20AFE8h, 3100000006h, 0> ; R_X86_64_GLOB_DAT _ITM_registerTMCloneTable
LOAD:0000000000001058                 Elf64_Rela <20AFF0h, 3400000006h, 0> ; R_X86_64_GLOB_DAT __cxa_finalize
LOAD:0000000000001070                 Elf64_Rela <20B080h, 3900000005h, 0> ; R_X86_64_COPY __progname
LOAD:0000000000001088                 Elf64_Rela <20B088h, 3800000005h, 0> ; R_X86_64_COPY stdout
LOAD:00000000000010A0                 Elf64_Rela <20B090h, 3A00000005h, 0> ; R_X86_64_COPY stdin
LOAD:00000000000010B8                 Elf64_Rela <20B098h, 3F00000005h, 0> ; R_X86_64_COPY optind
LOAD:00000000000010D0                 Elf64_Rela <20B0A0h, 3C00000005h, 0> ; R_X86_64_COPY __progname_full
LOAD:00000000000010E8                 Elf64_Rela <20B0C0h, 3E00000005h, 0> ; R_X86_64_COPY stderr
LOAD:0000000000001100 ; ELF JMPREL Relocation Table
LOAD:0000000000001100                 Elf64_Rela <20AE40h, 100000007h, 0> ; R_X86_64_JUMP_SLOT __ctype_toupper_loc
LOAD:0000000000001118                 Elf64_Rela <20AE48h, 200000007h, 0> ; R_X86_64_JUMP_SLOT free
LOAD:0000000000001130                 Elf64_Rela <20AE50h, 300000007h, 0> ; R_X86_64_JUMP_SLOT abort
LOAD:0000000000001148                 Elf64_Rela <20AE58h, 400000007h, 0> ; R_X86_64_JUMP_SLOT __errno_location
LOAD:0000000000001160                 Elf64_Rela <20AE60h, 500000007h, 0> ; R_X86_64_JUMP_SLOT strncmp
LOAD:0000000000001178                 Elf64_Rela <20AE68h, 700000007h, 0> ; R_X86_64_JUMP_SLOT _exit
LOAD:0000000000001190                 Elf64_Rela <20AE70h, 800000007h, 0> ; R_X86_64_JUMP_SLOT __fpending
LOAD:00000000000011A8                 Elf64_Rela <20AE78h, 900000007h, 0> ; R_X86_64_JUMP_SLOT textdomain
LOAD:00000000000011C0                 Elf64_Rela <20AE80h, 0A00000007h, 0> ; R_X86_64_JUMP_SLOT fclose
LOAD:00000000000011D8                 Elf64_Rela <20AE88h, 0B00000007h, 0> ; R_X86_64_JUMP_SLOT bindtextdomain
LOAD:00000000000011F0                 Elf64_Rela <20AE90h, 0C00000007h, 0> ; R_X86_64_JUMP_SLOT stpcpy
LOAD:0000000000001208                 Elf64_Rela <20AE98h, 0D00000007h, 0> ; R_X86_64_JUMP_SLOT dcgettext
LOAD:0000000000001220                 Elf64_Rela <20AEA0h, 0E00000007h, 0> ; R_X86_64_JUMP_SLOT __ctype_get_mb_cur_max
LOAD:0000000000001238                 Elf64_Rela <20AEA8h, 0F00000007h, 0> ; R_X86_64_JUMP_SLOT strlen
LOAD:0000000000001250                 Elf64_Rela <20AEB0h, 1000000007h, 0> ; R_X86_64_JUMP_SLOT __stack_chk_fail
LOAD:0000000000001268                 Elf64_Rela <20AEB8h, 1100000007h, 0> ; R_X86_64_JUMP_SLOT getopt_long
LOAD:0000000000001280                 Elf64_Rela <20AEC0h, 1200000007h, 0> ; R_X86_64_JUMP_SLOT mbrtowc
LOAD:0000000000001298                 Elf64_Rela <20AEC8h, 1300000007h, 0> ; R_X86_64_JUMP_SLOT strchr
LOAD:00000000000012B0                 Elf64_Rela <20AED0h, 1400000007h, 0> ; R_X86_64_JUMP_SLOT strrchr
LOAD:00000000000012C8                 Elf64_Rela <20AED8h, 1500000007h, 0> ; R_X86_64_JUMP_SLOT lseek
LOAD:00000000000012E0                 Elf64_Rela <20AEE0h, 1600000007h, 0> ; R_X86_64_JUMP_SLOT __assert_fail
LOAD:00000000000012F8                 Elf64_Rela <20AEE8h, 1700000007h, 0> ; R_X86_64_JUMP_SLOT __strtoul_internal
LOAD:0000000000001310                 Elf64_Rela <20AEF0h, 1800000007h, 0> ; R_X86_64_JUMP_SLOT memset
LOAD:0000000000001328                 Elf64_Rela <20AEF8h, 1900000007h, 0> ; R_X86_64_JUMP_SLOT close
LOAD:0000000000001340                 Elf64_Rela <20AF00h, 1A00000007h, 0> ; R_X86_64_JUMP_SLOT posix_fadvise
LOAD:0000000000001358                 Elf64_Rela <20AF08h, 1B00000007h, 0> ; R_X86_64_JUMP_SLOT read
LOAD:0000000000001370                 Elf64_Rela <20AF10h, 1D00000007h, 0> ; R_X86_64_JUMP_SLOT memcmp
LOAD:0000000000001388                 Elf64_Rela <20AF18h, 1E00000007h, 0> ; R_X86_64_JUMP_SLOT fputs_unlocked
LOAD:00000000000013A0                 Elf64_Rela <20AF20h, 1F00000007h, 0> ; R_X86_64_JUMP_SLOT calloc
LOAD:00000000000013B8                 Elf64_Rela <20AF28h, 2100000007h, 0> ; R_X86_64_JUMP_SLOT memcpy
LOAD:00000000000013D0                 Elf64_Rela <20AF30h, 2200000007h, 0> ; R_X86_64_JUMP_SLOT fileno
LOAD:00000000000013E8                 Elf64_Rela <20AF38h, 2300000007h, 0> ; R_X86_64_JUMP_SLOT malloc
LOAD:0000000000001400                 Elf64_Rela <20AF40h, 2400000007h, 0> ; R_X86_64_JUMP_SLOT fflush
LOAD:0000000000001418                 Elf64_Rela <20AF48h, 2500000007h, 0> ; R_X86_64_JUMP_SLOT nl_langinfo
LOAD:0000000000001430                 Elf64_Rela <20AF50h, 2600000007h, 0> ; R_X86_64_JUMP_SLOT __freading
LOAD:0000000000001448                 Elf64_Rela <20AF58h, 2700000007h, 0> ; R_X86_64_JUMP_SLOT fwrite_unlocked
LOAD:0000000000001460                 Elf64_Rela <20AF60h, 2800000007h, 0> ; R_X86_64_JUMP_SLOT realloc
LOAD:0000000000001478                 Elf64_Rela <20AF68h, 2900000007h, 0> ; R_X86_64_JUMP_SLOT setlocale
LOAD:0000000000001490                 Elf64_Rela <20AF70h, 2A00000007h, 0> ; R_X86_64_JUMP_SLOT __printf_chk
LOAD:00000000000014A8                 Elf64_Rela <20AF78h, 2B00000007h, 0> ; R_X86_64_JUMP_SLOT error
LOAD:00000000000014C0                 Elf64_Rela <20AF80h, 2C00000007h, 0> ; R_X86_64_JUMP_SLOT fseeko
LOAD:00000000000014D8                 Elf64_Rela <20AF88h, 2D00000007h, 0> ; R_X86_64_JUMP_SLOT __cxa_atexit
LOAD:00000000000014F0                 Elf64_Rela <20AF90h, 2E00000007h, 0> ; R_X86_64_JUMP_SLOT exit
LOAD:0000000000001508                 Elf64_Rela <20AF98h, 2F00000007h, 0> ; R_X86_64_JUMP_SLOT fwrite
LOAD:0000000000001520                 Elf64_Rela <20AFA0h, 3000000007h, 0> ; R_X86_64_JUMP_SLOT __fprintf_chk
LOAD:0000000000001538                 Elf64_Rela <20AFA8h, 3200000007h, 0> ; R_X86_64_JUMP_SLOT mbsinit
LOAD:0000000000001550                 Elf64_Rela <20AFB0h, 3300000007h, 0> ; R_X86_64_JUMP_SLOT iswprint
LOAD:0000000000001568                 Elf64_Rela <20AFB8h, 3500000007h, 0> ; R_X86_64_JUMP_SLOT __ctype_tolower_loc
LOAD:0000000000001580                 Elf64_Rela <20AFC0h, 3600000007h, 0> ; R_X86_64_JUMP_SLOT __ctype_b_loc
LOAD:0000000000001598                 Elf64_Rela <20AFC8h, 3700000007h, 0> ; R_X86_64_JUMP_SLOT __sprintf_chk
LOAD:0000000000001598 LOAD            ends
LOAD:0000000000001598
.init:00000000000015B0 ; ===========================================================================
.init:00000000000015B0
.init:00000000000015B0 ; Segment type: Pure code
.init:00000000000015B0 ; Segment permissions: Read/Execute
.init:00000000000015B0 _init           segment dword public 'CODE' use64
.init:00000000000015B0                 assume cs:_init
.init:00000000000015B0                 ;org 15B0h
.init:00000000000015B0                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.init:00000000000015B0
.init:00000000000015B0 ; =============== S U B R O U T I N E =======================================
.init:00000000000015B0
.init:00000000000015B0
.init:00000000000015B0                 public _init_proc
.init:00000000000015B0 _init_proc      proc near               ; CODE XREF: __libc_csu_init+2C↓p
.init:00000000000015B0                 sub     rsp, 8          ; _init
.init:00000000000015B4                 mov     rax, cs:__gmon_start___ptr
.init:00000000000015BB                 test    rax, rax
.init:00000000000015BE                 jz      short loc_15C2
.init:00000000000015C0                 call    rax ; __gmon_start__
.init:00000000000015C2
.init:00000000000015C2 loc_15C2:                               ; CODE XREF: _init_proc+E↑j
.init:00000000000015C2                 add     rsp, 8
.init:00000000000015C6                 retn
.init:00000000000015C6 _init_proc      endp
.init:00000000000015C6
.init:00000000000015C6 _init           ends
.init:00000000000015C6
LOAD:00000000000015C7 ; ===========================================================================
LOAD:00000000000015C7
LOAD:00000000000015C7 ; Segment type: Pure code
LOAD:00000000000015C7 ; Segment permissions: Read/Execute
LOAD:00000000000015C7 LOAD            segment byte public 'CODE' use64
LOAD:00000000000015C7                 assume cs:LOAD
LOAD:00000000000015C7                 ;org 15C7h
LOAD:00000000000015C7                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:00000000000015C7                 align 10h
LOAD:00000000000015C7 LOAD            ends
LOAD:00000000000015C7
.plt:00000000000015D0 ; ===========================================================================
.plt:00000000000015D0
.plt:00000000000015D0 ; Segment type: Pure code
.plt:00000000000015D0 ; Segment permissions: Read/Execute
.plt:00000000000015D0 _plt            segment para public 'CODE' use64
.plt:00000000000015D0                 assume cs:_plt
.plt:00000000000015D0                 ;org 15D0h
.plt:00000000000015D0                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.plt:00000000000015D0
.plt:00000000000015D0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000015D0
.plt:00000000000015D0
.plt:00000000000015D0 sub_15D0        proc near               ; CODE XREF: .plt:00000000000015EB↓j
.plt:00000000000015D0                                         ; .plt:00000000000015FB↓j ...
.plt:00000000000015D0 ; __unwind {
.plt:00000000000015D0                 push    cs:qword_20AE30
.plt:00000000000015D6                 jmp     cs:qword_20AE38
.plt:00000000000015D6 sub_15D0        endp
.plt:00000000000015D6
.plt:00000000000015D6 ; ---------------------------------------------------------------------------
.plt:00000000000015DC                 align 20h
.plt:00000000000015E0
.plt:00000000000015E0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000015E0
.plt:00000000000015E0 ; Attributes: thunk
.plt:00000000000015E0
.plt:00000000000015E0 ; const __int32_t **__ctype_toupper_loc(void)
.plt:00000000000015E0 ___ctype_toupper_loc proc near          ; CODE XREF: main+7F0↓p
.plt:00000000000015E0                 jmp     cs:__ctype_toupper_loc_ptr
.plt:00000000000015E0 ___ctype_toupper_loc endp
.plt:00000000000015E0
.plt:00000000000015E6 ; ---------------------------------------------------------------------------
.plt:00000000000015E6                 push    0
.plt:00000000000015EB                 jmp     sub_15D0
.plt:00000000000015F0
.plt:00000000000015F0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000015F0
.plt:00000000000015F0 ; Attributes: thunk
.plt:00000000000015F0
.plt:00000000000015F0 ; void free(void *ptr)
.plt:00000000000015F0 _free           proc near               ; CODE XREF: parse_str+458↓p
.plt:00000000000015F0                                         ; parse_str+460↓p ...
.plt:00000000000015F0                 jmp     cs:free_ptr
.plt:00000000000015F0 _free           endp
.plt:00000000000015F0
.plt:00000000000015F6 ; ---------------------------------------------------------------------------
.plt:00000000000015F6                 push    1
.plt:00000000000015FB                 jmp     sub_15D0
.plt:0000000000001600
.plt:0000000000001600 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001600
.plt:0000000000001600 ; Attributes: noreturn thunk
.plt:0000000000001600
.plt:0000000000001600 ; void __noreturn abort(void)
.plt:0000000000001600 _abort          proc near               ; CODE XREF: main+8FA↓p
.plt:0000000000001600                                         ; is_char_class_member:def_2A6C↓p ...
.plt:0000000000001600                 jmp     cs:abort_ptr
.plt:0000000000001600 _abort          endp
.plt:0000000000001600
.plt:0000000000001606 ; ---------------------------------------------------------------------------
.plt:0000000000001606                 push    2
.plt:000000000000160B                 jmp     sub_15D0
.plt:0000000000001610
.plt:0000000000001610 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001610
.plt:0000000000001610 ; Attributes: thunk
.plt:0000000000001610
.plt:0000000000001610 ; int *__errno_location(void)
.plt:0000000000001610 ___errno_location proc near             ; CODE XREF: main+628↓p
.plt:0000000000001610                                         ; main+971↓p ...
.plt:0000000000001610                 jmp     cs:__errno_location_ptr
.plt:0000000000001610 ___errno_location endp
.plt:0000000000001610
.plt:0000000000001616 ; ---------------------------------------------------------------------------
.plt:0000000000001616                 push    3
.plt:000000000000161B                 jmp     sub_15D0
.plt:0000000000001620
.plt:0000000000001620 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001620
.plt:0000000000001620 ; Attributes: thunk
.plt:0000000000001620
.plt:0000000000001620 ; int strncmp(const char *s1, const char *s2, size_t n)
.plt:0000000000001620 _strncmp        proc near               ; CODE XREF: parse_str+6B4↓p
.plt:0000000000001620                                         ; usage+29C↓p ...
.plt:0000000000001620                 jmp     cs:strncmp_ptr
.plt:0000000000001620 _strncmp        endp
.plt:0000000000001620
.plt:0000000000001626 ; ---------------------------------------------------------------------------
.plt:0000000000001626                 push    4
.plt:000000000000162B                 jmp     sub_15D0
.plt:0000000000001630
.plt:0000000000001630 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001630
.plt:0000000000001630 ; Attributes: noreturn thunk
.plt:0000000000001630
.plt:0000000000001630 ; void __noreturn _exit(int status)
.plt:0000000000001630 __exit          proc near               ; CODE XREF: close_stdout+88↓p
.plt:0000000000001630                 jmp     cs:_exit_ptr
.plt:0000000000001630 __exit          endp
.plt:0000000000001630
.plt:0000000000001636 ; ---------------------------------------------------------------------------
.plt:0000000000001636                 push    5
.plt:000000000000163B                 jmp     sub_15D0
.plt:0000000000001640
.plt:0000000000001640 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001640
.plt:0000000000001640 ; Attributes: thunk
.plt:0000000000001640
.plt:0000000000001640 ; size_t __fpending(FILE *fp)
.plt:0000000000001640 ___fpending     proc near               ; CODE XREF: close_stream+7↓p
.plt:0000000000001640                 jmp     cs:__fpending_ptr
.plt:0000000000001640 ___fpending     endp
.plt:0000000000001640
.plt:0000000000001646 ; ---------------------------------------------------------------------------
.plt:0000000000001646                 push    6
.plt:000000000000164B                 jmp     sub_15D0
.plt:0000000000001650
.plt:0000000000001650 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001650
.plt:0000000000001650 ; Attributes: thunk
.plt:0000000000001650
.plt:0000000000001650 ; char *textdomain(const char *domainname)
.plt:0000000000001650 _textdomain     proc near               ; CODE XREF: main+64↓p
.plt:0000000000001650                 jmp     cs:textdomain_ptr
.plt:0000000000001650 _textdomain     endp
.plt:0000000000001650
.plt:0000000000001656 ; ---------------------------------------------------------------------------
.plt:0000000000001656                 push    7
.plt:000000000000165B                 jmp     sub_15D0
.plt:0000000000001660
.plt:0000000000001660 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001660
.plt:0000000000001660 ; Attributes: thunk
.plt:0000000000001660
.plt:0000000000001660 ; int fclose(FILE *stream)
.plt:0000000000001660 _fclose         proc near               ; CODE XREF: rpl_fclose+36↓p
.plt:0000000000001660                                         ; rpl_fclose+6B↓j
.plt:0000000000001660                 jmp     cs:fclose_ptr
.plt:0000000000001660 _fclose         endp
.plt:0000000000001660
.plt:0000000000001666 ; ---------------------------------------------------------------------------
.plt:0000000000001666                 push    8
.plt:000000000000166B                 jmp     sub_15D0
.plt:0000000000001670
.plt:0000000000001670 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001670
.plt:0000000000001670 ; Attributes: thunk
.plt:0000000000001670
.plt:0000000000001670 ; char *bindtextdomain(const char *domainname, const char *dirname)
.plt:0000000000001670 _bindtextdomain proc near               ; CODE XREF: main+58↓p
.plt:0000000000001670                 jmp     cs:bindtextdomain_ptr
.plt:0000000000001670 _bindtextdomain endp
.plt:0000000000001670
.plt:0000000000001676 ; ---------------------------------------------------------------------------
.plt:0000000000001676                 push    9
.plt:000000000000167B                 jmp     sub_15D0
.plt:0000000000001680
.plt:0000000000001680 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001680
.plt:0000000000001680 ; Attributes: thunk
.plt:0000000000001680
.plt:0000000000001680 ; char *stpcpy(char *dest, const char *src)
.plt:0000000000001680 _stpcpy         proc near               ; CODE XREF: make_printable_str+B7↓p
.plt:0000000000001680                 jmp     cs:stpcpy_ptr
.plt:0000000000001680 _stpcpy         endp
.plt:0000000000001680
.plt:0000000000001686 ; ---------------------------------------------------------------------------
.plt:0000000000001686                 push    0Ah
.plt:000000000000168B                 jmp     sub_15D0
.plt:0000000000001690
.plt:0000000000001690 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001690
.plt:0000000000001690 ; Attributes: thunk
.plt:0000000000001690
.plt:0000000000001690 ; char *dcgettext(const char *domainname, const char *msgid, int category)
.plt:0000000000001690 _dcgettext      proc near               ; CODE XREF: main+620↓p
.plt:0000000000001690                                         ; main+763↓p ...
.plt:0000000000001690                 jmp     cs:dcgettext_ptr
.plt:0000000000001690 _dcgettext      endp
.plt:0000000000001690
.plt:0000000000001696 ; ---------------------------------------------------------------------------
.plt:0000000000001696                 push    0Bh
.plt:000000000000169B                 jmp     sub_15D0
.plt:00000000000016A0
.plt:00000000000016A0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000016A0
.plt:00000000000016A0 ; Attributes: thunk
.plt:00000000000016A0
.plt:00000000000016A0 ; size_t __ctype_get_mb_cur_max(void)
.plt:00000000000016A0 ___ctype_get_mb_cur_max proc near       ; CODE XREF: quotearg_buffer_restyled+6C↓p
.plt:00000000000016A0                 jmp     cs:__ctype_get_mb_cur_max_ptr
.plt:00000000000016A0 ___ctype_get_mb_cur_max endp
.plt:00000000000016A0
.plt:00000000000016A6 ; ---------------------------------------------------------------------------
.plt:00000000000016A6                 push    0Ch
.plt:00000000000016AB                 jmp     sub_15D0
.plt:00000000000016B0
.plt:00000000000016B0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000016B0
.plt:00000000000016B0 ; Attributes: thunk
.plt:00000000000016B0
.plt:00000000000016B0 ; size_t strlen(const char *s)
.plt:00000000000016B0 _strlen         proc near               ; CODE XREF: parse_str+2C↓p
.plt:00000000000016B0                                         ; parse_str+6C0↓p ...
.plt:00000000000016B0                 jmp     cs:strlen_ptr
.plt:00000000000016B0 _strlen         endp
.plt:00000000000016B0
.plt:00000000000016B6 ; ---------------------------------------------------------------------------
.plt:00000000000016B6                 push    0Dh
.plt:00000000000016BB                 jmp     sub_15D0
.plt:00000000000016C0
.plt:00000000000016C0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000016C0
.plt:00000000000016C0 ; Attributes: noreturn thunk
.plt:00000000000016C0
.plt:00000000000016C0 ___stack_chk_fail proc near             ; CODE XREF: main:loc_2461↓p
.plt:00000000000016C0                                         ; make_printable_str:loc_2A3A↓p ...
.plt:00000000000016C0                 jmp     cs:__stack_chk_fail_ptr
.plt:00000000000016C0 ___stack_chk_fail endp
.plt:00000000000016C0
.plt:00000000000016C6 ; ---------------------------------------------------------------------------
.plt:00000000000016C6                 push    0Eh
.plt:00000000000016CB                 jmp     sub_15D0
.plt:00000000000016D0
.plt:00000000000016D0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000016D0
.plt:00000000000016D0 ; Attributes: thunk
.plt:00000000000016D0
.plt:00000000000016D0 ; int getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)
.plt:00000000000016D0 _getopt_long    proc near               ; CODE XREF: main+8A↓p
.plt:00000000000016D0                 jmp     cs:getopt_long_ptr
.plt:00000000000016D0 _getopt_long    endp
.plt:00000000000016D0
.plt:00000000000016D6 ; ---------------------------------------------------------------------------
.plt:00000000000016D6                 push    0Fh
.plt:00000000000016DB                 jmp     sub_15D0
.plt:00000000000016E0
.plt:00000000000016E0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000016E0
.plt:00000000000016E0 ; Attributes: thunk
.plt:00000000000016E0
.plt:00000000000016E0 ; size_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)
.plt:00000000000016E0 _mbrtowc        proc near               ; CODE XREF: rpl_mbrtowc+32↓p
.plt:00000000000016E0                 jmp     cs:mbrtowc_ptr
.plt:00000000000016E0 _mbrtowc        endp
.plt:00000000000016E0
.plt:00000000000016E6 ; ---------------------------------------------------------------------------
.plt:00000000000016E6                 push    10h
.plt:00000000000016EB                 jmp     sub_15D0
.plt:00000000000016F0
.plt:00000000000016F0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000016F0
.plt:00000000000016F0 ; Attributes: thunk
.plt:00000000000016F0
.plt:00000000000016F0 ; char *strchr(const char *s, int c)
.plt:00000000000016F0 _strchr         proc near               ; CODE XREF: xstrtoumax+123↓p
.plt:00000000000016F0                                         ; xstrtoumax+143↓p ...
.plt:00000000000016F0                 jmp     cs:strchr_ptr
.plt:00000000000016F0 _strchr         endp
.plt:00000000000016F0
.plt:00000000000016F6 ; ---------------------------------------------------------------------------
.plt:00000000000016F6                 push    11h
.plt:00000000000016FB                 jmp     sub_15D0
.plt:0000000000001700
.plt:0000000000001700 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001700
.plt:0000000000001700 ; Attributes: thunk
.plt:0000000000001700
.plt:0000000000001700 ; char *strrchr(const char *s, int c)
.plt:0000000000001700 _strrchr        proc near               ; CODE XREF: set_program_name+E↓p
.plt:0000000000001700                 jmp     cs:strrchr_ptr
.plt:0000000000001700 _strrchr        endp
.plt:0000000000001700
.plt:0000000000001706 ; ---------------------------------------------------------------------------
.plt:0000000000001706                 push    12h
.plt:000000000000170B                 jmp     sub_15D0
.plt:0000000000001710
.plt:0000000000001710 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001710
.plt:0000000000001710 ; Attributes: thunk
.plt:0000000000001710
.plt:0000000000001710 ; __off_t lseek(int fd, __off_t offset, int whence)
.plt:0000000000001710 _lseek          proc near               ; CODE XREF: rpl_fclose+59↓p
.plt:0000000000001710                                         ; rpl_fseeko+3B↓p
.plt:0000000000001710                 jmp     cs:lseek_ptr
.plt:0000000000001710 _lseek          endp
.plt:0000000000001710
.plt:0000000000001716 ; ---------------------------------------------------------------------------
.plt:0000000000001716                 push    13h
.plt:000000000000171B                 jmp     sub_15D0
.plt:0000000000001720
.plt:0000000000001720 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001720
.plt:0000000000001720 ; Attributes: noreturn thunk
.plt:0000000000001720
.plt:0000000000001720 ; void __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)
.plt:0000000000001720 ___assert_fail  proc near               ; CODE XREF: append_repeated_char_part_8+1E↓p
.plt:0000000000001720                                         ; main+A20↓p ...
.plt:0000000000001720                 jmp     cs:__assert_fail_ptr
.plt:0000000000001720 ___assert_fail  endp
.plt:0000000000001720
.plt:0000000000001726 ; ---------------------------------------------------------------------------
.plt:0000000000001726                 push    14h
.plt:000000000000172B                 jmp     sub_15D0
.plt:0000000000001730
.plt:0000000000001730 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001730
.plt:0000000000001730 ; Attributes: thunk
.plt:0000000000001730
.plt:0000000000001730 ; unsigned __int64 __strtoul_internal(const char *nptr, char **endptr, int base, int group)
.plt:0000000000001730 ___strtoul_internal proc near           ; CODE XREF: xstrtoumax+8E↓p
.plt:0000000000001730                 jmp     cs:__strtoul_internal_ptr
.plt:0000000000001730 ___strtoul_internal endp
.plt:0000000000001730
.plt:0000000000001736 ; ---------------------------------------------------------------------------
.plt:0000000000001736                 push    15h
.plt:000000000000173B                 jmp     sub_15D0
.plt:0000000000001740
.plt:0000000000001740 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001740
.plt:0000000000001740 ; Attributes: thunk
.plt:0000000000001740
.plt:0000000000001740 ; void *memset(void *s, int c, size_t n)
.plt:0000000000001740 _memset         proc near               ; CODE XREF: quotearg_n_options+99↓p
.plt:0000000000001740                                         ; xzalloc+12↓j
.plt:0000000000001740                 jmp     cs:memset_ptr
.plt:0000000000001740 _memset         endp
.plt:0000000000001740
.plt:0000000000001746 ; ---------------------------------------------------------------------------
.plt:0000000000001746                 push    16h
.plt:000000000000174B                 jmp     sub_15D0
.plt:0000000000001750
.plt:0000000000001750 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001750
.plt:0000000000001750 ; Attributes: thunk
.plt:0000000000001750
.plt:0000000000001750 ; int close(int fd)
.plt:0000000000001750 _close          proc near               ; CODE XREF: main+605↓p
.plt:0000000000001750                 jmp     cs:close_ptr
.plt:0000000000001750 _close          endp
.plt:0000000000001750
.plt:0000000000001756 ; ---------------------------------------------------------------------------
.plt:0000000000001756                 push    17h
.plt:000000000000175B                 jmp     sub_15D0
.plt:0000000000001760
.plt:0000000000001760 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001760
.plt:0000000000001760 ; Attributes: thunk
.plt:0000000000001760
.plt:0000000000001760 ; int posix_fadvise(int fd, off_t offset, off_t len, int advise)
.plt:0000000000001760 _posix_fadvise  proc near               ; CODE XREF: fdadvise↓j
.plt:0000000000001760                                         ; fadvise+16↓j
.plt:0000000000001760                 jmp     cs:posix_fadvise_ptr
.plt:0000000000001760 _posix_fadvise  endp
.plt:0000000000001760
.plt:0000000000001766 ; ---------------------------------------------------------------------------
.plt:0000000000001766                 push    18h
.plt:000000000000176B                 jmp     sub_15D0
.plt:0000000000001770
.plt:0000000000001770 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001770
.plt:0000000000001770 ; Attributes: thunk
.plt:0000000000001770
.plt:0000000000001770 ; ssize_t read(int fd, void *buf, size_t nbytes)
.plt:0000000000001770 _read           proc near               ; CODE XREF: safe_read+21↓p
.plt:0000000000001770                 jmp     cs:read_ptr
.plt:0000000000001770 _read           endp
.plt:0000000000001770
.plt:0000000000001776 ; ---------------------------------------------------------------------------
.plt:0000000000001776                 push    19h
.plt:000000000000177B                 jmp     sub_15D0
.plt:0000000000001780
.plt:0000000000001780 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001780
.plt:0000000000001780 ; Attributes: thunk
.plt:0000000000001780
.plt:0000000000001780 ; int memcmp(const void *s1, const void *s2, size_t n)
.plt:0000000000001780 _memcmp         proc near               ; CODE XREF: quotearg_buffer_restyled+19A↓p
.plt:0000000000001780                 jmp     cs:memcmp_ptr
.plt:0000000000001780 _memcmp         endp
.plt:0000000000001780
.plt:0000000000001786 ; ---------------------------------------------------------------------------
.plt:0000000000001786                 push    1Ah
.plt:000000000000178B                 jmp     sub_15D0
.plt:0000000000001790
.plt:0000000000001790 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001790
.plt:0000000000001790 ; Attributes: thunk
.plt:0000000000001790
.plt:0000000000001790 ; int fputs_unlocked(const char *s, FILE *stream)
.plt:0000000000001790 _fputs_unlocked proc near               ; CODE XREF: usage+9D↓p
.plt:0000000000001790                                         ; usage+C2↓p ...
.plt:0000000000001790                 jmp     cs:fputs_unlocked_ptr
.plt:0000000000001790 _fputs_unlocked endp
.plt:0000000000001790
.plt:0000000000001796 ; ---------------------------------------------------------------------------
.plt:0000000000001796                 push    1Bh
.plt:000000000000179B                 jmp     sub_15D0
.plt:00000000000017A0
.plt:00000000000017A0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000017A0
.plt:00000000000017A0 ; Attributes: thunk
.plt:00000000000017A0
.plt:00000000000017A0 ; void *calloc(size_t nmemb, size_t size)
.plt:00000000000017A0 _calloc         proc near               ; CODE XREF: xcalloc+1A↓p
.plt:00000000000017A0                 jmp     cs:calloc_ptr
.plt:00000000000017A0 _calloc         endp
.plt:00000000000017A0
.plt:00000000000017A6 ; ---------------------------------------------------------------------------
.plt:00000000000017A6                 push    1Ch
.plt:00000000000017AB                 jmp     sub_15D0
.plt:00000000000017B0
.plt:00000000000017B0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000017B0
.plt:00000000000017B0 ; Attributes: thunk
.plt:00000000000017B0
.plt:00000000000017B0 ; void *memcpy(void *dest, const void *src, size_t n)
.plt:00000000000017B0 _memcpy         proc near               ; CODE XREF: xmemdup+23↓j
.plt:00000000000017B0                 jmp     cs:memcpy_ptr
.plt:00000000000017B0 _memcpy         endp
.plt:00000000000017B0
.plt:00000000000017B6 ; ---------------------------------------------------------------------------
.plt:00000000000017B6                 push    1Dh
.plt:00000000000017BB                 jmp     sub_15D0
.plt:00000000000017C0
.plt:00000000000017C0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000017C0
.plt:00000000000017C0 ; Attributes: thunk
.plt:00000000000017C0
.plt:00000000000017C0 ; int fileno(FILE *stream)
.plt:00000000000017C0 _fileno         proc near               ; CODE XREF: fadvise+8↓p
.plt:00000000000017C0                                         ; rpl_fclose+7↓p ...
.plt:00000000000017C0                 jmp     cs:fileno_ptr
.plt:00000000000017C0 _fileno         endp
.plt:00000000000017C0
.plt:00000000000017C6 ; ---------------------------------------------------------------------------
.plt:00000000000017C6                 push    1Eh
.plt:00000000000017CB                 jmp     sub_15D0
.plt:00000000000017D0
.plt:00000000000017D0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000017D0
.plt:00000000000017D0 ; Attributes: thunk
.plt:00000000000017D0
.plt:00000000000017D0 ; void *malloc(size_t size)
.plt:00000000000017D0 _malloc         proc near               ; CODE XREF: xmalloc+4↓p
.plt:00000000000017D0                 jmp     cs:malloc_ptr
.plt:00000000000017D0 _malloc         endp
.plt:00000000000017D0
.plt:00000000000017D6 ; ---------------------------------------------------------------------------
.plt:00000000000017D6                 push    1Fh
.plt:00000000000017DB                 jmp     sub_15D0
.plt:00000000000017E0
.plt:00000000000017E0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000017E0
.plt:00000000000017E0 ; Attributes: thunk
.plt:00000000000017E0
.plt:00000000000017E0 ; int fflush(FILE *stream)
.plt:00000000000017E0 _fflush         proc near               ; CODE XREF: rpl_fflush+1E↓j
.plt:00000000000017E0                                         ; rpl_fflush+3B↓j
.plt:00000000000017E0                 jmp     cs:fflush_ptr
.plt:00000000000017E0 _fflush         endp
.plt:00000000000017E0
.plt:00000000000017E6 ; ---------------------------------------------------------------------------
.plt:00000000000017E6                 push    20h ; ' '
.plt:00000000000017EB                 jmp     sub_15D0
.plt:00000000000017F0
.plt:00000000000017F0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000017F0
.plt:00000000000017F0 ; Attributes: thunk
.plt:00000000000017F0
.plt:00000000000017F0 ; char *nl_langinfo(nl_item item)
.plt:00000000000017F0 _nl_langinfo    proc near               ; CODE XREF: locale_charset+9↓p
.plt:00000000000017F0                 jmp     cs:nl_langinfo_ptr
.plt:00000000000017F0 _nl_langinfo    endp
.plt:00000000000017F0
.plt:00000000000017F6 ; ---------------------------------------------------------------------------
.plt:00000000000017F6                 push    21h ; '!'
.plt:00000000000017FB                 jmp     sub_15D0
.plt:0000000000001800
.plt:0000000000001800 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001800
.plt:0000000000001800 ; Attributes: thunk
.plt:0000000000001800
.plt:0000000000001800 ; int __freading(FILE *fp)
.plt:0000000000001800 ___freading     proc near               ; CODE XREF: rpl_fclose+13↓p
.plt:0000000000001800                                         ; rpl_fflush+9↓p
.plt:0000000000001800                 jmp     cs:__freading_ptr
.plt:0000000000001800 ___freading     endp
.plt:0000000000001800
.plt:0000000000001806 ; ---------------------------------------------------------------------------
.plt:0000000000001806                 push    22h ; '"'
.plt:000000000000180B                 jmp     sub_15D0
.plt:0000000000001810
.plt:0000000000001810 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001810
.plt:0000000000001810 ; Attributes: thunk
.plt:0000000000001810
.plt:0000000000001810 ; size_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)
.plt:0000000000001810 _fwrite_unlocked proc near              ; CODE XREF: main+951↓p
.plt:0000000000001810                                         ; main+AB6↓p ...
.plt:0000000000001810                 jmp     cs:fwrite_unlocked_ptr
.plt:0000000000001810 _fwrite_unlocked endp
.plt:0000000000001810
.plt:0000000000001816 ; ---------------------------------------------------------------------------
.plt:0000000000001816                 push    23h ; '#'
.plt:000000000000181B                 jmp     sub_15D0
.plt:0000000000001820
.plt:0000000000001820 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001820
.plt:0000000000001820 ; Attributes: thunk
.plt:0000000000001820
.plt:0000000000001820 ; void *realloc(void *ptr, size_t size)
.plt:0000000000001820 _realloc        proc near               ; CODE XREF: xrealloc+11↓p
.plt:0000000000001820                 jmp     cs:realloc_ptr
.plt:0000000000001820 _realloc        endp
.plt:0000000000001820
.plt:0000000000001826 ; ---------------------------------------------------------------------------
.plt:0000000000001826                 push    24h ; '$'
.plt:000000000000182B                 jmp     sub_15D0
.plt:0000000000001830
.plt:0000000000001830 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001830
.plt:0000000000001830 ; Attributes: thunk
.plt:0000000000001830
.plt:0000000000001830 ; char *setlocale(int category, const char *locale)
.plt:0000000000001830 _setlocale      proc near               ; CODE XREF: main+45↓p
.plt:0000000000001830                                         ; main+13C↓p ...
.plt:0000000000001830                 jmp     cs:setlocale_ptr
.plt:0000000000001830 _setlocale      endp
.plt:0000000000001830
.plt:0000000000001836 ; ---------------------------------------------------------------------------
.plt:0000000000001836                 push    25h ; '%'
.plt:000000000000183B                 jmp     sub_15D0
.plt:0000000000001840
.plt:0000000000001840 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001840
.plt:0000000000001840 ; Attributes: thunk
.plt:0000000000001840
.plt:0000000000001840 ___printf_chk   proc near               ; CODE XREF: usage+78↓p
.plt:0000000000001840                                         ; usage+277↓p ...
.plt:0000000000001840                 jmp     cs:__printf_chk_ptr
.plt:0000000000001840 ___printf_chk   endp
.plt:0000000000001840
.plt:0000000000001846 ; ---------------------------------------------------------------------------
.plt:0000000000001846                 push    26h ; '&'
.plt:000000000000184B                 jmp     sub_15D0
.plt:0000000000001850
.plt:0000000000001850 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001850
.plt:0000000000001850 ; Attributes: thunk
.plt:0000000000001850
.plt:0000000000001850 ; void error(int status, int errnum, const char *format, ...)
.plt:0000000000001850 _error          proc near               ; CODE XREF: main+639↓p
.plt:0000000000001850                                         ; main+774↓p ...
.plt:0000000000001850                 jmp     cs:error_ptr
.plt:0000000000001850 _error          endp
.plt:0000000000001850
.plt:0000000000001856 ; ---------------------------------------------------------------------------
.plt:0000000000001856                 push    27h ; '''
.plt:000000000000185B                 jmp     sub_15D0
.plt:0000000000001860
.plt:0000000000001860 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001860
.plt:0000000000001860 ; Attributes: thunk
.plt:0000000000001860
.plt:0000000000001860 ; int fseeko(FILE *stream, __off_t off, int whence)
.plt:0000000000001860 _fseeko         proc near               ; CODE XREF: rpl_fseeko:loc_6F0A↓j
.plt:0000000000001860                 jmp     cs:fseeko_ptr
.plt:0000000000001860 _fseeko         endp
.plt:0000000000001860
.plt:0000000000001866 ; ---------------------------------------------------------------------------
.plt:0000000000001866                 push    28h ; '('
.plt:000000000000186B                 jmp     sub_15D0
.plt:0000000000001870
.plt:0000000000001870 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001870
.plt:0000000000001870 ; Attributes: thunk
.plt:0000000000001870
.plt:0000000000001870 ; int __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)
.plt:0000000000001870 ___cxa_atexit   proc near               ; CODE XREF: atexit+9↓j
.plt:0000000000001870                 jmp     cs:__cxa_atexit_ptr
.plt:0000000000001870 ___cxa_atexit   endp
.plt:0000000000001870
.plt:0000000000001876 ; ---------------------------------------------------------------------------
.plt:0000000000001876                 push    29h ; ')'
.plt:000000000000187B                 jmp     sub_15D0
.plt:0000000000001880
.plt:0000000000001880 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001880
.plt:0000000000001880 ; Attributes: noreturn thunk
.plt:0000000000001880
.plt:0000000000001880 ; void __noreturn exit(int status)
.plt:0000000000001880 _exit           proc near               ; CODE XREF: main+127↓p
.plt:0000000000001880                                         ; usage+58↓p
.plt:0000000000001880                 jmp     cs:exit_ptr
.plt:0000000000001880 _exit           endp
.plt:0000000000001880
.plt:0000000000001886 ; ---------------------------------------------------------------------------
.plt:0000000000001886                 push    2Ah ; '*'
.plt:000000000000188B                 jmp     sub_15D0
.plt:0000000000001890
.plt:0000000000001890 ; =============== S U B R O U T I N E =======================================
.plt:0000000000001890
.plt:0000000000001890 ; Attributes: thunk
.plt:0000000000001890
.plt:0000000000001890 ; size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)
.plt:0000000000001890 _fwrite         proc near               ; CODE XREF: set_program_name+95↓p
.plt:0000000000001890                 jmp     cs:fwrite_ptr
.plt:0000000000001890 _fwrite         endp
.plt:0000000000001890
.plt:0000000000001896 ; ---------------------------------------------------------------------------
.plt:0000000000001896                 push    2Bh ; '+'
.plt:000000000000189B                 jmp     sub_15D0
.plt:00000000000018A0
.plt:00000000000018A0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000018A0
.plt:00000000000018A0 ; Attributes: thunk
.plt:00000000000018A0
.plt:00000000000018A0 ___fprintf_chk  proc near               ; CODE XREF: main+CB1↓p
.plt:00000000000018A0                                         ; usage+51↓p ...
.plt:00000000000018A0                 jmp     cs:__fprintf_chk_ptr
.plt:00000000000018A0 ___fprintf_chk  endp
.plt:00000000000018A0
.plt:00000000000018A6 ; ---------------------------------------------------------------------------
.plt:00000000000018A6                 push    2Ch ; ','
.plt:00000000000018AB                 jmp     sub_15D0
.plt:00000000000018B0
.plt:00000000000018B0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000018B0
.plt:00000000000018B0 ; Attributes: thunk
.plt:00000000000018B0
.plt:00000000000018B0 ; int mbsinit(const mbstate_t *ps)
.plt:00000000000018B0 _mbsinit        proc near               ; CODE XREF: quotearg_buffer_restyled+9A8↓p
.plt:00000000000018B0                 jmp     cs:mbsinit_ptr
.plt:00000000000018B0 _mbsinit        endp
.plt:00000000000018B0
.plt:00000000000018B6 ; ---------------------------------------------------------------------------
.plt:00000000000018B6                 push    2Dh ; '-'
.plt:00000000000018BB                 jmp     sub_15D0
.plt:00000000000018C0
.plt:00000000000018C0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000018C0
.plt:00000000000018C0 ; Attributes: thunk
.plt:00000000000018C0
.plt:00000000000018C0 ; int iswprint(wint_t wc)
.plt:00000000000018C0 _iswprint       proc near               ; CODE XREF: quotearg_buffer_restyled+990↓p
.plt:00000000000018C0                 jmp     cs:iswprint_ptr
.plt:00000000000018C0 _iswprint       endp
.plt:00000000000018C0
.plt:00000000000018C6 ; ---------------------------------------------------------------------------
.plt:00000000000018C6                 push    2Eh ; '.'
.plt:00000000000018CB                 jmp     sub_15D0
.plt:00000000000018D0
.plt:00000000000018D0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000018D0
.plt:00000000000018D0 ; Attributes: thunk
.plt:00000000000018D0
.plt:00000000000018D0 ; const __int32_t **__ctype_tolower_loc(void)
.plt:00000000000018D0 ___ctype_tolower_loc proc near          ; CODE XREF: main+7A8↓p
.plt:00000000000018D0                 jmp     cs:__ctype_tolower_loc_ptr
.plt:00000000000018D0 ___ctype_tolower_loc endp
.plt:00000000000018D0
.plt:00000000000018D6 ; ---------------------------------------------------------------------------
.plt:00000000000018D6                 push    2Fh ; '/'
.plt:00000000000018DB                 jmp     sub_15D0
.plt:00000000000018E0
.plt:00000000000018E0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000018E0
.plt:00000000000018E0 ; Attributes: thunk
.plt:00000000000018E0
.plt:00000000000018E0 ; const unsigned __int16 **__ctype_b_loc(void)
.plt:00000000000018E0 ___ctype_b_loc  proc near               ; CODE XREF: main+2B0↓p
.plt:00000000000018E0                                         ; main+78D↓p ...
.plt:00000000000018E0                 jmp     cs:__ctype_b_loc_ptr
.plt:00000000000018E0 ___ctype_b_loc  endp
.plt:00000000000018E0
.plt:00000000000018E6 ; ---------------------------------------------------------------------------
.plt:00000000000018E6                 push    30h ; '0'
.plt:00000000000018EB                 jmp     sub_15D0
.plt:00000000000018F0
.plt:00000000000018F0 ; =============== S U B R O U T I N E =======================================
.plt:00000000000018F0
.plt:00000000000018F0 ; Attributes: thunk
.plt:00000000000018F0
.plt:00000000000018F0 ___sprintf_chk  proc near               ; CODE XREF: make_printable_char+5A↓p
.plt:00000000000018F0                                         ; make_printable_str+178↓p
.plt:00000000000018F0                 jmp     cs:__sprintf_chk_ptr
.plt:00000000000018F0 ___sprintf_chk  endp
.plt:00000000000018F0
.plt:00000000000018F6 ; ---------------------------------------------------------------------------
.plt:00000000000018F6                 push    31h ; '1'
.plt:00000000000018FB                 jmp     sub_15D0
.plt:00000000000018FB ; } // starts at 15D0
.plt:00000000000018FB _plt            ends
.plt:00000000000018FB
.plt.got:0000000000001900 ; ===========================================================================
.plt.got:0000000000001900
.plt.got:0000000000001900 ; Segment type: Pure code
.plt.got:0000000000001900 ; Segment permissions: Read/Execute
.plt.got:0000000000001900 _plt_got        segment qword public 'CODE' use64
.plt.got:0000000000001900                 assume cs:_plt_got
.plt.got:0000000000001900                 ;org 1900h
.plt.got:0000000000001900                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.plt.got:0000000000001900
.plt.got:0000000000001900 ; =============== S U B R O U T I N E =======================================
.plt.got:0000000000001900
.plt.got:0000000000001900 ; Attributes: thunk
.plt.got:0000000000001900
.plt.got:0000000000001900 ; int __fastcall _cxa_finalize(void *)
.plt.got:0000000000001900 __cxa_finalize  proc near               ; CODE XREF: __do_global_dtors_aux+1E↓p
.plt.got:0000000000001900 ; __unwind {
.plt.got:0000000000001900                 jmp     cs:__cxa_finalize_ptr
.plt.got:0000000000001900 __cxa_finalize  endp
.plt.got:0000000000001900
.plt.got:0000000000001900 ; ---------------------------------------------------------------------------
.plt.got:0000000000001906                 align 8
.plt.got:0000000000001906 ; } // starts at 1900
.plt.got:0000000000001906 _plt_got        ends
.plt.got:0000000000001906
LOAD:0000000000001908 ; ===========================================================================
LOAD:0000000000001908
LOAD:0000000000001908 ; Segment type: Pure code
LOAD:0000000000001908 ; Segment permissions: Read/Execute
LOAD:0000000000001908 LOAD            segment byte public 'CODE' use64
LOAD:0000000000001908                 assume cs:LOAD
LOAD:0000000000001908                 ;org 1908h
LOAD:0000000000001908                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000001908                 align 10h
LOAD:0000000000001908 LOAD            ends
LOAD:0000000000001908
.text:0000000000001910 ; ===========================================================================
.text:0000000000001910
.text:0000000000001910 ; Segment type: Pure code
.text:0000000000001910 ; Segment permissions: Read/Execute
.text:0000000000001910 _text           segment para public 'CODE' use64
.text:0000000000001910                 assume cs:_text
.text:0000000000001910                 ;org 1910h
.text:0000000000001910                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:0000000000001910
.text:0000000000001910 ; =============== S U B R O U T I N E =======================================
.text:0000000000001910
.text:0000000000001910 ; Attributes: noreturn
.text:0000000000001910
.text:0000000000001910 append_repeated_char_part_8 proc near   ; CODE XREF: main:loc_2690↓p
.text:0000000000001910                                         ; parse_str:loc_3ACC↓p
.text:0000000000001910 ; __unwind {
.text:0000000000001910                 lea     rcx, __PRETTY_FUNCTION___7143 ; "append_repeated_char"
.text:0000000000001917                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:000000000000191E                 lea     rdi, assertion  ; "list->tail"
.text:0000000000001925                 sub     rsp, 8
.text:0000000000001929                 mov     edx, 2CFh       ; line
.text:000000000000192E                 call    ___assert_fail
.text:000000000000192E ; } // starts at 1910
.text:000000000000192E append_repeated_char_part_8 endp
.text:000000000000192E
.text:000000000000192E ; ---------------------------------------------------------------------------
.text:0000000000001933                 align 20h
.text:0000000000001940
.text:0000000000001940 ; =============== S U B R O U T I N E =======================================
.text:0000000000001940
.text:0000000000001940
.text:0000000000001940 ; int __cdecl main(int argc, const char **argv, const char **envp)
.text:0000000000001940                 public main
.text:0000000000001940 main            proc near               ; DATA XREF: start+1D↓o
.text:0000000000001940
.text:0000000000001940 var_218         = qword ptr -218h
.text:0000000000001940 var_210         = qword ptr -210h
.text:0000000000001940 var_208         = qword ptr -208h
.text:0000000000001940 var_200         = qword ptr -200h
.text:0000000000001940 var_1F8         = qword ptr -1F8h
.text:0000000000001940 var_1F0         = qword ptr -1F0h
.text:0000000000001940 var_1E8         = qword ptr -1E8h
.text:0000000000001940 var_1DC         = dword ptr -1DCh
.text:0000000000001940 var_1D0         = dword ptr -1D0h
.text:0000000000001940 var_1CC         = dword ptr -1CCh
.text:0000000000001940 var_1C8         = qword ptr -1C8h
.text:0000000000001940 var_1C0         = qword ptr -1C0h
.text:0000000000001940 var_1B8         = qword ptr -1B8h
.text:0000000000001940 var_1B0         = qword ptr -1B0h
.text:0000000000001940 var_1A8         = qword ptr -1A8h
.text:0000000000001940 var_197         = byte ptr -197h
.text:0000000000001940 var_188         = qword ptr -188h
.text:0000000000001940 var_180         = qword ptr -180h
.text:0000000000001940 var_148         = byte ptr -148h
.text:0000000000001940 var_40          = qword ptr -40h
.text:0000000000001940
.text:0000000000001940 ; __unwind {
.text:0000000000001940                 push    r15
.text:0000000000001942                 push    r14
.text:0000000000001944                 push    r13
.text:0000000000001946                 push    r12
.text:0000000000001948                 mov     r13, rsi
.text:000000000000194B                 push    rbp
.text:000000000000194C                 push    rbx
.text:000000000000194D                 movsxd  rbx, edi
.text:0000000000001950                 lea     rbp, long_options
.text:0000000000001957                 sub     rsp, 1E8h
.text:000000000000195E                 mov     rdi, [rsi]
.text:0000000000001961                 mov     rax, fs:28h
.text:000000000000196A                 mov     [rsp+218h+var_40], rax
.text:0000000000001972                 xor     eax, eax
.text:0000000000001974                 call    set_program_name
.text:0000000000001979                 lea     rsi, aWrittenBySSAnd+1Bh ; locale
.text:0000000000001980                 mov     edi, 6          ; category
.text:0000000000001985                 call    _setlocale
.text:000000000000198A                 lea     rsi, dirname    ; "/usr/local/share/locale"
.text:0000000000001991                 lea     rdi, domainname ; "coreutils"
.text:0000000000001998                 call    _bindtextdomain
.text:000000000000199D                 lea     rdi, domainname ; "coreutils"
.text:00000000000019A4                 call    _textdomain
.text:00000000000019A9                 lea     rdi, close_stdout
.text:00000000000019B0                 call    atexit
.text:00000000000019B5                 nop     dword ptr [rax]
.text:00000000000019B8
.text:00000000000019B8 loc_19B8:                               ; CODE XREF: main+C7↓j
.text:00000000000019B8                                         ; main+14F↓j ...
.text:00000000000019B8                 lea     rdx, shortopts  ; "+AcCdst"
.text:00000000000019BF                 xor     r8d, r8d        ; longind
.text:00000000000019C2                 mov     rcx, rbp        ; longopts
.text:00000000000019C5                 mov     rsi, r13        ; argv
.text:00000000000019C8                 mov     edi, ebx        ; argc
.text:00000000000019CA                 call    _getopt_long
.text:00000000000019CF                 cmp     eax, 0FFFFFFFFh
.text:00000000000019D2                 jz      loc_1AC4
.text:00000000000019D8                 cmp     eax, 43h ; 'C'
.text:00000000000019DB                 jz      loc_1A99
.text:00000000000019E1                 jle     short loc_1A10
.text:00000000000019E3                 cmp     eax, 64h ; 'd'
.text:00000000000019E6                 jz      loc_1AB8
.text:00000000000019EC                 jle     loc_1A94
.text:00000000000019F2                 cmp     eax, 73h ; 's'
.text:00000000000019F5                 jz      loc_1AA8
.text:00000000000019FB                 cmp     eax, 74h ; 't'
.text:00000000000019FE                 jnz     short loc_1A27
.text:0000000000001A00                 mov     cs:truncate_set1, 1
.text:0000000000001A07                 jmp     short loc_19B8
.text:0000000000001A07 ; ---------------------------------------------------------------------------
.text:0000000000001A09                 align 10h
.text:0000000000001A10
.text:0000000000001A10 loc_1A10:                               ; CODE XREF: main+A1↑j
.text:0000000000001A10                 cmp     eax, 0FFFFFF7Eh
.text:0000000000001A15                 jz      loc_245A
.text:0000000000001A1B                 cmp     eax, 41h ; 'A'
.text:0000000000001A1E                 jz      short loc_1A70
.text:0000000000001A20                 cmp     eax, 0FFFFFF7Dh
.text:0000000000001A25                 jz      short loc_1A38
.text:0000000000001A27
.text:0000000000001A27 loc_1A27:                               ; CODE XREF: main+BE↑j
.text:0000000000001A27                                         ; main+157↓j ...
.text:0000000000001A27                 mov     edi, 1          ; status
.text:0000000000001A2C                 call    usage
.text:0000000000001A2C ; ---------------------------------------------------------------------------
.text:0000000000001A31                 align 8
.text:0000000000001A38
.text:0000000000001A38 loc_1A38:                               ; CODE XREF: main+E5↑j
.text:0000000000001A38                 mov     rdi, cs:stdout@@GLIBC_2_2_5
.text:0000000000001A3F                 mov     rcx, cs:Version
.text:0000000000001A46                 lea     r8, aJimMeyering ; "Jim Meyering"
.text:0000000000001A4D                 lea     rdx, unk_7119
.text:0000000000001A54                 lea     rsi, aTr        ; "tr"
.text:0000000000001A5B                 xor     r9d, r9d
.text:0000000000001A5E                 xor     eax, eax
.text:0000000000001A60                 call    version_etc
.text:0000000000001A65                 xor     edi, edi        ; status
.text:0000000000001A67                 call    _exit
.text:0000000000001A67 ; ---------------------------------------------------------------------------
.text:0000000000001A6C                 align 10h
.text:0000000000001A70
.text:0000000000001A70 loc_1A70:                               ; CODE XREF: main+DE↑j
.text:0000000000001A70                 lea     rsi, locale     ; "C"
.text:0000000000001A77                 mov     edi, 3          ; category
.text:0000000000001A7C                 call    _setlocale
.text:0000000000001A81                 lea     rsi, locale     ; "C"
.text:0000000000001A88                 xor     edi, edi        ; category
.text:0000000000001A8A                 call    _setlocale
.text:0000000000001A8F                 jmp     loc_19B8
.text:0000000000001A94 ; ---------------------------------------------------------------------------
.text:0000000000001A94
.text:0000000000001A94 loc_1A94:                               ; CODE XREF: main+AC↑j
.text:0000000000001A94                 cmp     eax, 63h ; 'c'
.text:0000000000001A97                 jnz     short loc_1A27
.text:0000000000001A99
.text:0000000000001A99 loc_1A99:                               ; CODE XREF: main+9B↑j
.text:0000000000001A99                 mov     cs:complement, 1
.text:0000000000001AA0                 jmp     loc_19B8
.text:0000000000001AA0 ; ---------------------------------------------------------------------------
.text:0000000000001AA5                 align 8
.text:0000000000001AA8
.text:0000000000001AA8 loc_1AA8:                               ; CODE XREF: main+B5↑j
.text:0000000000001AA8                 mov     cs:squeeze_repeats, 1
.text:0000000000001AAF                 jmp     loc_19B8
.text:0000000000001AAF ; ---------------------------------------------------------------------------
.text:0000000000001AB4                 align 8
.text:0000000000001AB8
.text:0000000000001AB8 loc_1AB8:                               ; CODE XREF: main+A6↑j
.text:0000000000001AB8                 mov     cs:delete, 1
.text:0000000000001ABF                 jmp     loc_19B8
.text:0000000000001AC4 ; ---------------------------------------------------------------------------
.text:0000000000001AC4
.text:0000000000001AC4 loc_1AC4:                               ; CODE XREF: main+92↑j
.text:0000000000001AC4                 mov     ecx, cs:optind@@GLIBC_2_2_5
.text:0000000000001ACA                 mov     r12d, ebx
.text:0000000000001ACD                 movzx   eax, cs:delete
.text:0000000000001AD4                 movzx   edx, cs:squeeze_repeats
.text:0000000000001ADB                 sub     r12d, ecx
.text:0000000000001ADE                 cmp     r12d, 2
.text:0000000000001AE2                 jz      loc_1D66
.text:0000000000001AE8                 cmp     dl, al
.text:0000000000001AEA                 mov     cs:translating, 0
.text:0000000000001AF1                 jz      loc_210A
.text:0000000000001AF7
.text:0000000000001AF7 loc_1AF7:                               ; CODE XREF: main+726↓j
.text:0000000000001AF7                 cmp     dl, al
.text:0000000000001AF9                 mov     esi, 1
.text:0000000000001AFE                 sbb     eax, eax
.text:0000000000001B00                 add     eax, 2
.text:0000000000001B03
.text:0000000000001B03 loc_1B03:                               ; CODE XREF: main+7D4↓j
.text:0000000000001B03                 cmp     r12d, esi
.text:0000000000001B06                 jl      loc_2558
.text:0000000000001B0C
.text:0000000000001B0C loc_1B0C:                               ; CODE XREF: main+43C↓j
.text:0000000000001B0C                 cmp     eax, r12d
.text:0000000000001B0F                 jl      loc_25FB
.text:0000000000001B15                 mov     edi, 20h ; ' '
.text:0000000000001B1A                 lea     rbp, [rsp+218h+var_1C8]
.text:0000000000001B1F                 call    xmalloc
.text:0000000000001B24                 mov     [rsp+218h+var_1C0], rax
.text:0000000000001B29                 mov     [rsp+218h+var_1C8], rax
.text:0000000000001B2E                 mov     rsi, rbp
.text:0000000000001B31                 mov     qword ptr [rax+8], 0
.text:0000000000001B39                 movsxd  rax, cs:optind@@GLIBC_2_2_5
.text:0000000000001B40                 mov     rdi, [r13+rax*8+0]
.text:0000000000001B45                 call    parse_str
.text:0000000000001B4A                 test    al, al
.text:0000000000001B4C                 jz      loc_1E01
.text:0000000000001B52                 xor     ebx, ebx
.text:0000000000001B54                 cmp     r12d, 2
.text:0000000000001B58                 jz      loc_1DBB
.text:0000000000001B5E
.text:0000000000001B5E loc_1B5E:                               ; CODE XREF: main+4BB↓j
.text:0000000000001B5E                 mov     rdi, rbp
.text:0000000000001B61                 call    get_spec_stats
.text:0000000000001B66                 cmp     cs:complement, 0
.text:0000000000001B6D                 jnz     loc_2152
.text:0000000000001B73
.text:0000000000001B73 loc_1B73:                               ; CODE XREF: main+867↓j
.text:0000000000001B73                 mov     r14, [rsp+218h+var_1A8]
.text:0000000000001B78                 test    r14, r14
.text:0000000000001B7B                 jnz     loc_24A9
.text:0000000000001B81                 test    rbx, rbx
.text:0000000000001B84                 jz      loc_1ED1
.text:0000000000001B8A                 mov     rdi, rbx
.text:0000000000001B8D                 mov     r13, [rsp+218h+var_1B0]
.text:0000000000001B92                 call    get_spec_stats
.text:0000000000001B97                 mov     rax, [rbx+18h]
.text:0000000000001B9B                 cmp     r13, rax
.text:0000000000001B9E                 jb      loc_2071
.text:0000000000001BA4                 cmp     qword ptr [rbx+20h], 1
.text:0000000000001BA9                 jnz     loc_2071
.text:0000000000001BAF                 mov     rcx, r13
.text:0000000000001BB2                 mov     rdx, [rbx+28h]
.text:0000000000001BB6                 sub     rcx, rax
.text:0000000000001BB9                 cmp     cs:translating, 0
.text:0000000000001BC0                 mov     [rdx+18h], rcx
.text:0000000000001BC4                 mov     [rbx+18h], r13
.text:0000000000001BC8                 jz      loc_2095
.text:0000000000001BCE
.text:0000000000001BCE loc_1BCE:                               ; CODE XREF: main+746↓j
.text:0000000000001BCE                 cmp     byte ptr [rbx+30h], 0
.text:0000000000001BD2                 jnz     loc_24F1
.text:0000000000001BD8                 cmp     byte ptr [rbx+32h], 0
.text:0000000000001BDC                 jnz     loc_24CD
.text:0000000000001BE2                 movzx   r13d, byte ptr [rbx+31h]
.text:0000000000001BE7                 test    r13b, r13b
.text:0000000000001BEA                 jz      loc_21EB
.text:0000000000001BF0                 call    ___ctype_b_loc
.text:0000000000001BF5                 mov     rdx, [rax]
.text:0000000000001BF8                 xor     ecx, ecx
.text:0000000000001BFA                 lea     rdi, [rdx+200h]
.text:0000000000001C01                 nop     dword ptr [rax+00000000h]
.text:0000000000001C08
.text:0000000000001C08 loc_1C08:                               ; CODE XREF: main+2ED↓j
.text:0000000000001C08                 movzx   eax, word ptr [rdx]
.text:0000000000001C0B                 mov     esi, eax
.text:0000000000001C0D                 and     si, 100h
.text:0000000000001C12                 cmp     si, 1
.text:0000000000001C16                 sbb     r14, 0FFFFFFFFFFFFFFFFh
.text:0000000000001C1A                 and     ax, 200h
.text:0000000000001C1E                 cmp     ax, 1
.text:0000000000001C22                 sbb     rcx, 0FFFFFFFFFFFFFFFFh
.text:0000000000001C26                 add     rdx, 2
.text:0000000000001C2A                 cmp     rdx, rdi
.text:0000000000001C2D                 jnz     short loc_1C08
.text:0000000000001C2F                 mov     rax, [rsp+218h+var_1B0]
.text:0000000000001C34                 mov     [rsp+218h+var_208], rbp
.text:0000000000001C39                 lea     r15, [rcx-1]
.text:0000000000001C3D                 mov     rbp, rbx
.text:0000000000001C40                 mov     [rsp+218h+var_1DC], r12d
.text:0000000000001C45                 mov     [rsp+218h+var_200], rax
.text:0000000000001C4A                 mov     rax, [rbx+18h]
.text:0000000000001C4E                 mov     [rsp+218h+var_1F8], rax
.text:0000000000001C53                 mov     rax, [rsp+218h+var_1C0]
.text:0000000000001C58                 mov     [rsp+218h+var_1F0], rax
.text:0000000000001C5D                 mov     rax, [rbx+8]
.text:0000000000001C61                 mov     [rsp+218h+var_1E8], rax
.text:0000000000001C66                 mov     rax, 0FFFFFFFFFFFFFFFEh
.text:0000000000001C6D                 mov     [rbx+10h], rax
.text:0000000000001C71                 mov     [rsp+218h+var_1B8], rax
.text:0000000000001C76                 lea     rax, [rsp+218h+var_1D0]
.text:0000000000001C7B                 mov     [rsp+218h+var_218], rax
.text:0000000000001C7F                 lea     rax, [rsp+218h+var_1CC]
.text:0000000000001C84                 mov     [rsp+218h+var_210], rax
.text:0000000000001C89                 lea     rax, [r14-1]
.text:0000000000001C8D                 mov     r14d, r13d
.text:0000000000001C90                 mov     rbx, rax
.text:0000000000001C93                 jmp     loc_1D30
.text:0000000000001C98 ; ---------------------------------------------------------------------------
.text:0000000000001C98
.text:0000000000001C98 loc_1C98:                               ; CODE XREF: main+415↓j
.text:0000000000001C98                 cmp     ecx, 2
.text:0000000000001C9B                 jz      short loc_1D0A
.text:0000000000001C9D                 test    r14b, r14b
.text:0000000000001CA0                 jz      loc_2534
.text:0000000000001CA6                 cmp     [rsp+218h+var_1D0], 2
.text:0000000000001CAB                 jz      loc_2534
.text:0000000000001CB1
.text:0000000000001CB1 loc_1CB1:                               ; CODE XREF: main+41E↓j
.text:0000000000001CB1                 mov     rsi, [rsp+218h+var_1C0]
.text:0000000000001CB6                 cmp     [rsp+218h+var_1D0], 1
.text:0000000000001CBB                 mov     rdx, [rsp+218h+var_1B0]
.text:0000000000001CC0                 mov     rsi, [rsi+8]
.text:0000000000001CC4                 mov     [rsp+218h+var_1B8], 0FFFFFFFFFFFFFFFFh
.text:0000000000001CCD                 mov     [rsp+218h+var_1C0], rsi
.text:0000000000001CD2                 mov     rsi, [rbp+8]
.text:0000000000001CD6                 mov     rsi, [rsi+8]
.text:0000000000001CDA                 mov     qword ptr [rbp+10h], 0FFFFFFFFFFFFFFFFh
.text:0000000000001CE2                 mov     [rbp+8], rsi
.text:0000000000001CE6                 mov     rsi, r15
.text:0000000000001CE9                 cmovz   rsi, rbx
.text:0000000000001CED                 sub     rdx, rsi
.text:0000000000001CF0                 sub     ecx, 1
.text:0000000000001CF3                 mov     rcx, [rbp+18h]
.text:0000000000001CF7                 mov     rsi, rbx
.text:0000000000001CFA                 mov     [rsp+218h+var_1B0], rdx
.text:0000000000001CFF                 cmovnz  rsi, r15
.text:0000000000001D03                 sub     rcx, rsi
.text:0000000000001D06                 mov     [rbp+18h], rcx
.text:0000000000001D0A
.text:0000000000001D0A loc_1D0A:                               ; CODE XREF: main+35B↑j
.text:0000000000001D0A                                         ; main+424↓j
.text:0000000000001D0A                 cmp     [rsp+218h+var_1B8], 0FFFFFFFFFFFFFFFFh
.text:0000000000001D10                 setz    r14b
.text:0000000000001D14                 cmp     qword ptr [rbp+10h], 0FFFFFFFFFFFFFFFFh
.text:0000000000001D19                 setz    r13b
.text:0000000000001D1D                 add     r12d, 1
.text:0000000000001D21                 jz      loc_21AC
.text:0000000000001D27                 add     eax, 1
.text:0000000000001D2A                 jz      loc_21AC
.text:0000000000001D30
.text:0000000000001D30 loc_1D30:                               ; CODE XREF: main+353↑j
.text:0000000000001D30                 mov     rsi, [rsp+218h+var_218]
.text:0000000000001D34                 mov     rdi, [rsp+218h+var_208]
.text:0000000000001D39                 call    get_next
.text:0000000000001D3E                 mov     rsi, [rsp+218h+var_210]
.text:0000000000001D43                 mov     rdi, rbp
.text:0000000000001D46                 mov     r12d, eax
.text:0000000000001D49                 call    get_next
.text:0000000000001D4E                 test    r13b, r13b
.text:0000000000001D51                 mov     ecx, [rsp+218h+var_1CC]
.text:0000000000001D55                 jnz     loc_1C98
.text:0000000000001D5B                 cmp     ecx, 2
.text:0000000000001D5E                 jnz     loc_1CB1
.text:0000000000001D64                 jmp     short loc_1D0A
.text:0000000000001D66 ; ---------------------------------------------------------------------------
.text:0000000000001D66
.text:0000000000001D66 loc_1D66:                               ; CODE XREF: main+1A2↑j
.text:0000000000001D66                 test    al, al
.text:0000000000001D68                 jnz     loc_205D
.text:0000000000001D6E                 test    dl, dl
.text:0000000000001D70                 mov     cs:translating, 1
.text:0000000000001D77                 mov     eax, 2
.text:0000000000001D7C                 jnz     loc_1B0C
.text:0000000000001D82
.text:0000000000001D82 loc_1D82:                               ; CODE XREF: main+72C↓j
.text:0000000000001D82                 mov     edi, 20h ; ' '
.text:0000000000001D87                 lea     rbp, [rsp+218h+var_1C8]
.text:0000000000001D8C                 call    xmalloc
.text:0000000000001D91                 mov     [rsp+218h+var_1C0], rax
.text:0000000000001D96                 mov     [rsp+218h+var_1C8], rax
.text:0000000000001D9B                 mov     rsi, rbp
.text:0000000000001D9E                 mov     qword ptr [rax+8], 0
.text:0000000000001DA6                 movsxd  rax, cs:optind@@GLIBC_2_2_5
.text:0000000000001DAD                 mov     rdi, [r13+rax*8+0]
.text:0000000000001DB2                 call    parse_str
.text:0000000000001DB7                 test    al, al
.text:0000000000001DB9                 jz      short loc_1E01
.text:0000000000001DBB
.text:0000000000001DBB loc_1DBB:                               ; CODE XREF: main+218↑j
.text:0000000000001DBB                 mov     edi, 20h ; ' '
.text:0000000000001DC0                 lea     rbx, [rsp+218h+var_188]
.text:0000000000001DC8                 call    xmalloc
.text:0000000000001DCD                 mov     [rsp+218h+var_180], rax
.text:0000000000001DD5                 mov     [rsp+218h+var_188], rax
.text:0000000000001DDD                 mov     rsi, rbx
.text:0000000000001DE0                 mov     qword ptr [rax+8], 0
.text:0000000000001DE8                 movsxd  rax, cs:optind@@GLIBC_2_2_5
.text:0000000000001DEF                 mov     rdi, [r13+rax*8+8]
.text:0000000000001DF4                 call    parse_str
.text:0000000000001DF9                 test    al, al
.text:0000000000001DFB                 jnz     loc_1B5E
.text:0000000000001E01
.text:0000000000001E01 loc_1E01:                               ; CODE XREF: main+20C↑j
.text:0000000000001E01                                         ; main+479↑j
.text:0000000000001E01                 mov     eax, 1
.text:0000000000001E06
.text:0000000000001E06 loc_1E06:                               ; CODE XREF: main+60C↓j
.text:0000000000001E06                 mov     rcx, [rsp+218h+var_40]
.text:0000000000001E0E                 xor     rcx, fs:28h
.text:0000000000001E17                 jnz     loc_2461
.text:0000000000001E1D                 add     rsp, 1E8h
.text:0000000000001E24                 pop     rbx
.text:0000000000001E25                 pop     rbp
.text:0000000000001E26                 pop     r12
.text:0000000000001E28                 pop     r13
.text:0000000000001E2A                 pop     r14
.text:0000000000001E2C                 pop     r15
.text:0000000000001E2E                 retn
.text:0000000000001E2F ; ---------------------------------------------------------------------------
.text:0000000000001E2F
.text:0000000000001E2F loc_1E2F:                               ; CODE XREF: main+8E2↓j
.text:0000000000001E2F                                         ; main+8F4↓j
.text:0000000000001E2F                 movzx   r14d, byte ptr [rcx+10h]
.text:0000000000001E34
.text:0000000000001E34 loc_1E34:                               ; CODE XREF: main+B15↓j
.text:0000000000001E34                 sub     rax, rdx
.text:0000000000001E37                 mov     edi, 20h ; ' '
.text:0000000000001E3C                 mov     r13, rax
.text:0000000000001E3F                 call    xmalloc
.text:0000000000001E44                 mov     rdx, [rbx+8]
.text:0000000000001E48                 mov     qword ptr [rax+8], 0
.text:0000000000001E50                 mov     dword ptr [rax], 4
.text:0000000000001E56                 mov     [rax+10h], r14b
.text:0000000000001E5A                 mov     [rax+18h], r13
.text:0000000000001E5E                 test    rdx, rdx
.text:0000000000001E61                 jz      loc_2690
.text:0000000000001E67                 mov     [rdx+8], rax
.text:0000000000001E6B                 mov     [rbx+8], rax
.text:0000000000001E6F                 mov     rax, [rsp+218h+var_1B0]
.text:0000000000001E74                 mov     [rbx+18h], rax
.text:0000000000001E78
.text:0000000000001E78 loc_1E78:                               ; CODE XREF: main+8B7↓j
.text:0000000000001E78                                         ; main+8C4↓j
.text:0000000000001E78                 cmp     cs:complement, 0
.text:0000000000001E7F                 jz      short loc_1ED1
.text:0000000000001E81                 cmp     [rsp+218h+var_197], 0
.text:0000000000001E89                 jz      short loc_1ED1
.text:0000000000001E8B                 mov     rax, [rsp+218h+var_1B0]
.text:0000000000001E90                 cmp     [rbx+18h], rax
.text:0000000000001E94                 jnz     loc_242C
.text:0000000000001E9A                 xor     esi, esi
.text:0000000000001E9C                 mov     qword ptr [rbx+10h], 0FFFFFFFFFFFFFFFEh
.text:0000000000001EA4                 mov     rdi, rbx
.text:0000000000001EA7                 call    get_next
.text:0000000000001EAC                 cmp     eax, 0FFFFFFFFh
.text:0000000000001EAF                 mov     r13d, eax
.text:0000000000001EB2                 jnz     short loc_1EC2
.text:0000000000001EB4                 jmp     loc_242C
.text:0000000000001EB9 ; ---------------------------------------------------------------------------
.text:0000000000001EB9
.text:0000000000001EB9 loc_1EB9:                               ; CODE XREF: main+58F↓j
.text:0000000000001EB9                 cmp     r13d, eax
.text:0000000000001EBC                 jnz     loc_242C
.text:0000000000001EC2
.text:0000000000001EC2 loc_1EC2:                               ; CODE XREF: main+572↑j
.text:0000000000001EC2                 xor     esi, esi
.text:0000000000001EC4                 mov     rdi, rbx
.text:0000000000001EC7                 call    get_next
.text:0000000000001ECC                 cmp     eax, 0FFFFFFFFh
.text:0000000000001ECF                 jnz     short loc_1EB9
.text:0000000000001ED1
.text:0000000000001ED1 loc_1ED1:                               ; CODE XREF: main+244↑j
.text:0000000000001ED1                                         ; main+53F↑j ...
.text:0000000000001ED1                 mov     rdi, cs:stdin@@GLIBC_2_2_5
.text:0000000000001ED8                 mov     esi, 2
.text:0000000000001EDD                 call    fadvise
.text:0000000000001EE2                 cmp     cs:squeeze_repeats, 0
.text:0000000000001EE9                 jz      loc_1F7E
.text:0000000000001EEF                 cmp     r12d, 1
.text:0000000000001EF3                 jz      loc_2387
.text:0000000000001EF9                 cmp     cs:delete, 0
.text:0000000000001F00                 jz      loc_1F91
.text:0000000000001F06                 cmp     r12d, 2
.text:0000000000001F0A                 jnz     loc_1F91
.text:0000000000001F10                 movzx   esi, cs:complement
.text:0000000000001F17                 lea     rdx, in_delete_set
.text:0000000000001F1E                 mov     rdi, rbp
.text:0000000000001F21                 call    set_initialize
.text:0000000000001F26                 lea     rdx, in_squeeze_set
.text:0000000000001F2D                 mov     rdi, rbx
.text:0000000000001F30                 xor     esi, esi
.text:0000000000001F32                 call    set_initialize
.text:0000000000001F37                 lea     rdi, read_and_delete
.text:0000000000001F3E                 call    squeeze_filter_constprop_14
.text:0000000000001F43
.text:0000000000001F43 loc_1F43:                               ; CODE XREF: main+658↓j
.text:0000000000001F43                                         ; main+939↓j ...
.text:0000000000001F43                 xor     edi, edi        ; fd
.text:0000000000001F45                 call    _close
.text:0000000000001F4A                 test    eax, eax
.text:0000000000001F4C                 jz      loc_1E06
.text:0000000000001F52                 lea     rsi, msgid      ; "standard input"
.text:0000000000001F59                 mov     edx, 5          ; category
.text:0000000000001F5E                 xor     edi, edi        ; domainname
.text:0000000000001F60                 call    _dcgettext
.text:0000000000001F65                 mov     rbx, rax
.text:0000000000001F68                 call    ___errno_location
.text:0000000000001F6D                 mov     esi, [rax]      ; errnum
.text:0000000000001F6F                 mov     rdx, rbx        ; format
.text:0000000000001F72                 mov     edi, 1          ; status
.text:0000000000001F77                 xor     eax, eax
.text:0000000000001F79                 call    _error
.text:0000000000001F7E
.text:0000000000001F7E loc_1F7E:                               ; CODE XREF: main+5A9↑j
.text:0000000000001F7E                 cmp     cs:delete, 0
.text:0000000000001F85                 jz      short loc_1F91
.text:0000000000001F87                 sub     r12d, 1
.text:0000000000001F8B                 jz      loc_23AE
.text:0000000000001F91
.text:0000000000001F91 loc_1F91:                               ; CODE XREF: main+5C0↑j
.text:0000000000001F91                                         ; main+5CA↑j ...
.text:0000000000001F91                 cmp     cs:translating, 0
.text:0000000000001F98                 jz      short loc_1F43
.text:0000000000001F9A                 cmp     cs:complement, 0
.text:0000000000001FA1                 jnz     loc_22C7
.text:0000000000001FA7                 lea     r12, xlate
.text:0000000000001FAE                 xor     eax, eax
.text:0000000000001FB0
.text:0000000000001FB0 loc_1FB0:                               ; CODE XREF: main+67E↓j
.text:0000000000001FB0                 mov     [r12+rax], al
.text:0000000000001FB4                 add     rax, 1
.text:0000000000001FB8                 cmp     rax, 100h
.text:0000000000001FBE                 jnz     short loc_1FB0
.text:0000000000001FC0                 mov     rax, 0FFFFFFFFFFFFFFFEh
.text:0000000000001FC7                 or      r13, 0FFFFFFFFFFFFFFFFh
.text:0000000000001FCB                 mov     [rsp+218h+var_1B8], rax
.text:0000000000001FD0                 mov     [rbx+10h], rax
.text:0000000000001FD4                 lea     rax, [rsp+218h+var_1D0]
.text:0000000000001FD9                 mov     [rsp+218h+var_218], rax
.text:0000000000001FDD                 lea     rax, [rsp+218h+var_1CC]
.text:0000000000001FE2                 mov     [rsp+218h+var_210], rax
.text:0000000000001FE7
.text:0000000000001FE7 loc_1FE7:                               ; CODE XREF: main+6F6↓j
.text:0000000000001FE7                                         ; main+71B↓j
.text:0000000000001FE7                 mov     rsi, [rsp+218h+var_218]
.text:0000000000001FEB                 mov     rdi, rbp
.text:0000000000001FEE                 call    get_next
.text:0000000000001FF3                 mov     rsi, [rsp+218h+var_210]
.text:0000000000001FF8                 mov     rdi, rbx
.text:0000000000001FFB                 movsxd  r14, eax
.text:0000000000001FFE                 call    get_next
.text:0000000000002003                 mov     edx, [rsp+218h+var_1D0]
.text:0000000000002007                 test    edx, edx
.text:0000000000002009                 jnz     loc_20B9
.text:000000000000200F                 cmp     [rsp+218h+var_1CC], 1
.text:0000000000002014                 jz      loc_2119
.text:000000000000201A
.text:000000000000201A loc_201A:                               ; CODE XREF: main+77C↓j
.text:000000000000201A                                         ; main+787↓j
.text:000000000000201A                 cmp     r14d, 0FFFFFFFFh
.text:000000000000201E                 jz      loc_223F
.text:0000000000002024                 cmp     eax, 0FFFFFFFFh
.text:0000000000002027                 jz      loc_223F
.text:000000000000202D                 cmp     [rsp+218h+var_1CC], 2
.text:0000000000002032                 mov     [r12+r14], al
.text:0000000000002036                 jz      short loc_1FE7
.text:0000000000002038
.text:0000000000002038 loc_2038:                               ; CODE XREF: main+7C5↓j
.text:0000000000002038                                         ; main+80D↓j
.text:0000000000002038                 mov     rax, [rsp+218h+var_1C0]
.text:000000000000203D                 mov     rax, [rax+8]
.text:0000000000002041                 mov     [rsp+218h+var_1B8], r13
.text:0000000000002046                 mov     [rsp+218h+var_1C0], rax
.text:000000000000204B                 mov     rax, [rbx+8]
.text:000000000000204F                 mov     rax, [rax+8]
.text:0000000000002053                 mov     [rbx+10h], r13
.text:0000000000002057                 mov     [rbx+8], rax
.text:000000000000205B                 jmp     short loc_1FE7
.text:000000000000205D ; ---------------------------------------------------------------------------
.text:000000000000205D
.text:000000000000205D loc_205D:                               ; CODE XREF: main+428↑j
.text:000000000000205D                 test    dl, dl
.text:000000000000205F                 mov     cs:translating, 0
.text:0000000000002066                 jz      loc_1AF7
.text:000000000000206C                 jmp     loc_1D82
.text:0000000000002071 ; ---------------------------------------------------------------------------
.text:0000000000002071
.text:0000000000002071 loc_2071:                               ; CODE XREF: main+25E↑j
.text:0000000000002071                                         ; main+269↑j
.text:0000000000002071                 mov     rax, [rbx+20h]
.text:0000000000002075                 cmp     rax, 1
.text:0000000000002079                 ja      loc_2485
.text:000000000000207F                 cmp     cs:translating, 0
.text:0000000000002086                 jnz     loc_1BCE
.text:000000000000208C                 test    rax, rax
.text:000000000000208F                 jz      loc_1ED1
.text:0000000000002095
.text:0000000000002095 loc_2095:                               ; CODE XREF: main+288↑j
.text:0000000000002095                 lea     rsi, aTheCConstructM ; "the [c*] construct may appear in string"...
.text:000000000000209C                 mov     edx, 5          ; category
.text:00000000000020A1                 xor     edi, edi        ; domainname
.text:00000000000020A3                 call    _dcgettext
.text:00000000000020A8                 xor     esi, esi        ; errnum
.text:00000000000020AA                 mov     rdx, rax        ; format
.text:00000000000020AD                 mov     edi, 1          ; status
.text:00000000000020B2                 xor     eax, eax
.text:00000000000020B4                 call    _error
.text:00000000000020B9
.text:00000000000020B9 loc_20B9:                               ; CODE XREF: main+6C9↑j
.text:00000000000020B9                 sub     edx, 1
.text:00000000000020BC                 jnz     loc_201A
.text:00000000000020C2                 cmp     [rsp+218h+var_1CC], 0
.text:00000000000020C7                 jnz     loc_201A
.text:00000000000020CD                 call    ___ctype_b_loc
.text:00000000000020D2                 mov     r15, [rax]
.text:00000000000020D5                 xor     r14d, r14d
.text:00000000000020D8                 nop     dword ptr [rax+rax+00000000h]
.text:00000000000020E0
.text:00000000000020E0 loc_20E0:                               ; CODE XREF: main+7C3↓j
.text:00000000000020E0                 test    byte ptr [r15+r14*2+1], 1
.text:00000000000020E6                 jz      short loc_20F8
.text:00000000000020E8                 call    ___ctype_tolower_loc
.text:00000000000020ED                 mov     rax, [rax]
.text:00000000000020F0                 mov     eax, [rax+r14*4]
.text:00000000000020F4                 mov     [r12+r14], al
.text:00000000000020F8
.text:00000000000020F8 loc_20F8:                               ; CODE XREF: main+7A6↑j
.text:00000000000020F8                 add     r14, 1
.text:00000000000020FC                 cmp     r14, 100h
.text:0000000000002103                 jnz     short loc_20E0
.text:0000000000002105                 jmp     loc_2038
.text:000000000000210A ; ---------------------------------------------------------------------------
.text:000000000000210A
.text:000000000000210A loc_210A:                               ; CODE XREF: main+1B1↑j
.text:000000000000210A                 mov     esi, 2
.text:000000000000210F                 mov     eax, 2
.text:0000000000002114                 jmp     loc_1B03
.text:0000000000002119 ; ---------------------------------------------------------------------------
.text:0000000000002119
.text:0000000000002119 loc_2119:                               ; CODE XREF: main+6D4↑j
.text:0000000000002119                 call    ___ctype_b_loc
.text:000000000000211E                 mov     r15, [rax]
.text:0000000000002121                 xor     r14d, r14d
.text:0000000000002124                 nop     dword ptr [rax+00h]
.text:0000000000002128
.text:0000000000002128 loc_2128:                               ; CODE XREF: main+80B↓j
.text:0000000000002128                 test    byte ptr [r15+r14*2+1], 2
.text:000000000000212E                 jz      short loc_2140
.text:0000000000002130                 call    ___ctype_toupper_loc
.text:0000000000002135                 mov     rax, [rax]
.text:0000000000002138                 mov     eax, [rax+r14*4]
.text:000000000000213C                 mov     [r12+r14], al
.text:0000000000002140
.text:0000000000002140 loc_2140:                               ; CODE XREF: main+7EE↑j
.text:0000000000002140                 add     r14, 1
.text:0000000000002144                 cmp     r14, 100h
.text:000000000000214B                 jnz     short loc_2128
.text:000000000000214D                 jmp     loc_2038
.text:0000000000002152 ; ---------------------------------------------------------------------------
.text:0000000000002152
.text:0000000000002152 loc_2152:                               ; CODE XREF: main+22D↑j
.text:0000000000002152                 lea     rdi, [rsp+218h+var_148]
.text:000000000000215A                 mov     ecx, 20h ; ' '
.text:000000000000215F                 xor     eax, eax
.text:0000000000002161                 mov     [rsp+218h+var_1B8], 0FFFFFFFFFFFFFFFEh
.text:000000000000216A                 mov     r13d, 100h
.text:0000000000002170                 rep stosq
.text:0000000000002173                 jmp     short loc_2190
.text:0000000000002175 ; ---------------------------------------------------------------------------
.text:0000000000002175
.text:0000000000002175 loc_2175:                               ; CODE XREF: main+85D↓j
.text:0000000000002175                 cdqe
.text:0000000000002177                 movzx   edx, [rsp+rax+218h+var_148]
.text:000000000000217F                 mov     [rsp+rax+218h+var_148], 1
.text:0000000000002187                 xor     edx, 1
.text:000000000000218A                 movzx   edx, dl
.text:000000000000218D                 sub     r13d, edx
.text:0000000000002190
.text:0000000000002190 loc_2190:                               ; CODE XREF: main+833↑j
.text:0000000000002190                 xor     esi, esi
.text:0000000000002192                 mov     rdi, rbp
.text:0000000000002195                 call    get_next
.text:000000000000219A                 cmp     eax, 0FFFFFFFFh
.text:000000000000219D                 jnz     short loc_2175
.text:000000000000219F                 movsxd  r13, r13d
.text:00000000000021A2                 mov     [rsp+218h+var_1B0], r13
.text:00000000000021A7                 jmp     loc_1B73
.text:00000000000021AC ; ---------------------------------------------------------------------------
.text:00000000000021AC
.text:00000000000021AC loc_21AC:                               ; CODE XREF: main+3E1↑j
.text:00000000000021AC                                         ; main+3EA↑j
.text:00000000000021AC                 mov     rax, [rsp+218h+var_200]
.text:00000000000021B1                 cmp     rax, [rsp+218h+var_1B0]
.text:00000000000021B6                 mov     rbx, rbp
.text:00000000000021B9                 mov     r12d, [rsp+218h+var_1DC]
.text:00000000000021BE                 mov     rbp, [rsp+218h+var_208]
.text:00000000000021C3                 jb      loc_2466
.text:00000000000021C9                 mov     rax, [rsp+218h+var_1F8]
.text:00000000000021CE                 cmp     rax, [rbx+18h]
.text:00000000000021D2                 jb      loc_2466
.text:00000000000021D8                 mov     rax, [rsp+218h+var_1F0]
.text:00000000000021DD                 mov     [rsp+218h+var_1C0], rax
.text:00000000000021E2                 mov     rax, [rsp+218h+var_1E8]
.text:00000000000021E7                 mov     [rbx+8], rax
.text:00000000000021EB
.text:00000000000021EB loc_21EB:                               ; CODE XREF: main+2AA↑j
.text:00000000000021EB                 mov     rax, [rsp+218h+var_1B0]
.text:00000000000021F0                 mov     rdx, [rbx+18h]
.text:00000000000021F4                 cmp     rax, rdx
.text:00000000000021F7                 jbe     loc_1E78
.text:00000000000021FD                 cmp     cs:truncate_set1, 0
.text:0000000000002204                 jnz     loc_1E78
.text:000000000000220A                 test    rdx, rdx
.text:000000000000220D                 jz      loc_266C
.text:0000000000002213                 mov     rcx, [rbx+8]
.text:0000000000002217                 mov     esi, [rcx]
.text:0000000000002219                 cmp     esi, 1
.text:000000000000221C                 jz      loc_2450
.text:0000000000002222                 jb      loc_1E2F
.text:0000000000002228                 cmp     esi, 2
.text:000000000000222B                 jz      loc_2648
.text:0000000000002231                 cmp     esi, 4
.text:0000000000002234                 jz      loc_1E2F
.text:000000000000223A                 call    _abort
.text:000000000000223F ; ---------------------------------------------------------------------------
.text:000000000000223F
.text:000000000000223F loc_223F:                               ; CODE XREF: main+6DE↑j
.text:000000000000223F                                         ; main+6E7↑j
.text:000000000000223F                 add     r14d, 1
.text:0000000000002243                 jz      short loc_2252
.text:0000000000002245                 cmp     cs:truncate_set1, 0
.text:000000000000224C                 jz      loc_2515
.text:0000000000002252
.text:0000000000002252 loc_2252:                               ; CODE XREF: main+903↑j
.text:0000000000002252                                         ; main+9D6↓j ...
.text:0000000000002252                 cmp     cs:squeeze_repeats, 0
.text:0000000000002259                 lea     rbp, io_buf
.text:0000000000002260                 jnz     loc_2365
.text:0000000000002266
.text:0000000000002266 loc_2266:                               ; CODE XREF: main+959↓j
.text:0000000000002266                 mov     esi, 2000h      ; nbytes
.text:000000000000226B                 mov     rdi, rbp        ; buf
.text:000000000000226E                 call    read_and_xlate
.text:0000000000002273                 test    rax, rax
.text:0000000000002276                 mov     rbx, rax
.text:0000000000002279                 jz      loc_1F43
.text:000000000000227F                 mov     rcx, cs:stdout@@GLIBC_2_2_5 ; stream
.text:0000000000002286                 mov     rdx, rax        ; n
.text:0000000000002289                 mov     esi, 1          ; size
.text:000000000000228E                 mov     rdi, rbp        ; ptr
.text:0000000000002291                 call    _fwrite_unlocked
.text:0000000000002296                 cmp     rbx, rax
.text:0000000000002299                 jz      short loc_2266
.text:000000000000229B                 lea     rsi, aWriteError ; "write error"
.text:00000000000022A2                 mov     edx, 5          ; category
.text:00000000000022A7                 xor     edi, edi        ; domainname
.text:00000000000022A9                 call    _dcgettext
.text:00000000000022AE                 mov     rbx, rax
.text:00000000000022B1                 call    ___errno_location
.text:00000000000022B6                 mov     esi, [rax]      ; errnum
.text:00000000000022B8                 mov     rdx, rbx        ; format
.text:00000000000022BB                 mov     edi, 1          ; status
.text:00000000000022C0                 xor     eax, eax
.text:00000000000022C2                 call    _error
.text:00000000000022C7
.text:00000000000022C7 loc_22C7:                               ; CODE XREF: main+661↑j
.text:00000000000022C7                 lea     rdx, in_delete_set
.text:00000000000022CE                 xor     esi, esi
.text:00000000000022D0                 mov     rdi, rbp
.text:00000000000022D3                 lea     r12, xlate
.text:00000000000022DA                 call    set_initialize
.text:00000000000022DF                 mov     qword ptr [rbx+10h], 0FFFFFFFFFFFFFFFEh
.text:00000000000022E7                 xor     eax, eax
.text:00000000000022E9                 nop     dword ptr [rax+00000000h]
.text:00000000000022F0
.text:00000000000022F0 loc_22F0:                               ; CODE XREF: main+9BE↓j
.text:00000000000022F0                 mov     [r12+rax], al
.text:00000000000022F4                 add     rax, 1
.text:00000000000022F8                 cmp     rax, 100h
.text:00000000000022FE                 jnz     short loc_22F0
.text:0000000000002300                 xor     ebp, ebp
.text:0000000000002302                 lea     r13, in_delete_set
.text:0000000000002309                 jmp     short loc_231C
.text:000000000000230B ; ---------------------------------------------------------------------------
.text:000000000000230B
.text:000000000000230B loc_230B:                               ; CODE XREF: main+9E2↓j
.text:000000000000230B                                         ; main+9F7↓j
.text:000000000000230B                 add     rbp, 1
.text:000000000000230F                 cmp     rbp, 100h
.text:0000000000002316                 jz      loc_2252
.text:000000000000231C
.text:000000000000231C loc_231C:                               ; CODE XREF: main+9C9↑j
.text:000000000000231C                 cmp     byte ptr [r13+rbp+0], 0
.text:0000000000002322                 jnz     short loc_230B
.text:0000000000002324                 xor     esi, esi
.text:0000000000002326                 mov     rdi, rbx
.text:0000000000002329                 call    get_next
.text:000000000000232E                 cmp     eax, 0FFFFFFFFh
.text:0000000000002331                 jz      short loc_2339
.text:0000000000002333                 mov     [r12+rbp], al
.text:0000000000002337                 jmp     short loc_230B
.text:0000000000002339 ; ---------------------------------------------------------------------------
.text:0000000000002339
.text:0000000000002339 loc_2339:                               ; CODE XREF: main+9F1↑j
.text:0000000000002339                 cmp     cs:truncate_set1, 0
.text:0000000000002340                 jnz     loc_2252
.text:0000000000002346                 lea     rcx, __PRETTY_FUNCTION___7483 ; "main"
.text:000000000000234D                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:0000000000002354                 lea     rdi, aCh1TruncateSet ; "ch != -1 || truncate_set1"
.text:000000000000235B                 mov     edx, 72Dh       ; line
.text:0000000000002360                 call    ___assert_fail
.text:0000000000002365 ; ---------------------------------------------------------------------------
.text:0000000000002365
.text:0000000000002365 loc_2365:                               ; CODE XREF: main+920↑j
.text:0000000000002365                 lea     rdx, in_squeeze_set
.text:000000000000236C                 mov     rdi, rbx
.text:000000000000236F                 xor     esi, esi
.text:0000000000002371                 call    set_initialize
.text:0000000000002376                 lea     rdi, read_and_xlate
.text:000000000000237D                 call    squeeze_filter_constprop_14
.text:0000000000002382                 jmp     loc_1F43
.text:0000000000002387 ; ---------------------------------------------------------------------------
.text:0000000000002387
.text:0000000000002387 loc_2387:                               ; CODE XREF: main+5B3↑j
.text:0000000000002387                 movzx   esi, cs:complement
.text:000000000000238E                 lea     rdx, in_squeeze_set
.text:0000000000002395                 mov     rdi, rbp
.text:0000000000002398                 call    set_initialize
.text:000000000000239D                 lea     rdi, plain_read
.text:00000000000023A4                 call    squeeze_filter_constprop_14
.text:00000000000023A9                 jmp     loc_1F43
.text:00000000000023AE ; ---------------------------------------------------------------------------
.text:00000000000023AE
.text:00000000000023AE loc_23AE:                               ; CODE XREF: main+64B↑j
.text:00000000000023AE                 movzx   esi, cs:complement
.text:00000000000023B5                 mov     rdi, rbp
.text:00000000000023B8                 lea     rdx, in_delete_set
.text:00000000000023BF                 lea     rbp, io_buf
.text:00000000000023C6                 call    set_initialize
.text:00000000000023CB
.text:00000000000023CB loc_23CB:                               ; CODE XREF: main+ABE↓j
.text:00000000000023CB                 mov     esi, 2000h      ; nbytes
.text:00000000000023D0                 mov     rdi, rbp        ; buf
.text:00000000000023D3                 call    read_and_delete
.text:00000000000023D8                 test    rax, rax
.text:00000000000023DB                 mov     rbx, rax
.text:00000000000023DE                 jz      loc_1F43
.text:00000000000023E4                 mov     rcx, cs:stdout@@GLIBC_2_2_5 ; stream
.text:00000000000023EB                 mov     rdx, rax        ; n
.text:00000000000023EE                 mov     esi, 1          ; size
.text:00000000000023F3                 mov     rdi, rbp        ; ptr
.text:00000000000023F6                 call    _fwrite_unlocked
.text:00000000000023FB                 cmp     rbx, rax
.text:00000000000023FE                 jz      short loc_23CB
.text:0000000000002400                 lea     rsi, aWriteError ; "write error"
.text:0000000000002407                 mov     edx, 5          ; category
.text:000000000000240C                 xor     edi, edi        ; domainname
.text:000000000000240E                 call    _dcgettext
.text:0000000000002413                 mov     rbx, rax
.text:0000000000002416                 call    ___errno_location
.text:000000000000241B                 mov     esi, [rax]      ; errnum
.text:000000000000241D                 mov     rdx, rbx        ; format
.text:0000000000002420                 mov     edi, 1          ; status
.text:0000000000002425                 xor     eax, eax
.text:0000000000002427                 call    _error
.text:000000000000242C
.text:000000000000242C loc_242C:                               ; CODE XREF: main+554↑j
.text:000000000000242C                                         ; main+574↑j ...
.text:000000000000242C                 lea     rsi, aWhenTranslatin ; "when translating with complemented char"...
.text:0000000000002433                 mov     edx, 5          ; category
.text:0000000000002438                 xor     edi, edi        ; domainname
.text:000000000000243A                 call    _dcgettext
.text:000000000000243F                 xor     esi, esi        ; errnum
.text:0000000000002441                 mov     rdx, rax        ; format
.text:0000000000002444                 mov     edi, 1          ; status
.text:0000000000002449                 xor     eax, eax
.text:000000000000244B                 call    _error
.text:0000000000002450
.text:0000000000002450 loc_2450:                               ; CODE XREF: main+8DC↑j
.text:0000000000002450                 movzx   r14d, byte ptr [rcx+11h]
.text:0000000000002455                 jmp     loc_1E34
.text:000000000000245A ; ---------------------------------------------------------------------------
.text:000000000000245A
.text:000000000000245A loc_245A:                               ; CODE XREF: main+D5↑j
.text:000000000000245A                 xor     edi, edi        ; status
.text:000000000000245C                 call    usage
.text:0000000000002461 ; ---------------------------------------------------------------------------
.text:0000000000002461
.text:0000000000002461 loc_2461:                               ; CODE XREF: main+4D7↑j
.text:0000000000002461                 call    ___stack_chk_fail
.text:0000000000002466 ; ---------------------------------------------------------------------------
.text:0000000000002466
.text:0000000000002466 loc_2466:                               ; CODE XREF: main+883↑j
.text:0000000000002466                                         ; main+892↑j
.text:0000000000002466                 lea     rcx, __PRETTY_FUNCTION___7270 ; "validate_case_classes"
.text:000000000000246D                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:0000000000002474                 lea     rdi, aOldS1LenS1Leng ; "old_s1_len >= s1->length && old_s2_len "...
.text:000000000000247B                 mov     edx, 4C5h       ; line
.text:0000000000002480                 call    ___assert_fail
.text:0000000000002485 ; ---------------------------------------------------------------------------
.text:0000000000002485
.text:0000000000002485 loc_2485:                               ; CODE XREF: main+739↑j
.text:0000000000002485                 lea     rsi, aOnlyOneCRepeat ; "only one [c*] repeat construct may appe"...
.text:000000000000248C                 mov     edx, 5          ; category
.text:0000000000002491                 xor     edi, edi        ; domainname
.text:0000000000002493                 call    _dcgettext
.text:0000000000002498                 xor     esi, esi        ; errnum
.text:000000000000249A                 mov     rdx, rax        ; format
.text:000000000000249D                 mov     edi, 1          ; status
.text:00000000000024A2                 xor     eax, eax
.text:00000000000024A4                 call    _error
.text:00000000000024A9
.text:00000000000024A9 loc_24A9:                               ; CODE XREF: main+23B↑j
.text:00000000000024A9                 lea     rsi, aTheCRepeatCons ; "the [c*] repeat construct may not appea"...
.text:00000000000024B0                 mov     edx, 5          ; category
.text:00000000000024B5                 xor     edi, edi        ; domainname
.text:00000000000024B7                 call    _dcgettext
.text:00000000000024BC                 xor     esi, esi        ; errnum
.text:00000000000024BE                 mov     rdx, rax        ; format
.text:00000000000024C1                 mov     edi, 1          ; status
.text:00000000000024C6                 xor     eax, eax
.text:00000000000024C8                 call    _error
.text:00000000000024CD
.text:00000000000024CD loc_24CD:                               ; CODE XREF: main+29C↑j
.text:00000000000024CD                 lea     rsi, aWhenTranslatin_0 ; "when translating, the only character cl"...
.text:00000000000024D4                 mov     edx, 5          ; category
.text:00000000000024D9                 xor     edi, edi        ; domainname
.text:00000000000024DB                 call    _dcgettext
.text:00000000000024E0                 xor     esi, esi        ; errnum
.text:00000000000024E2                 mov     rdx, rax        ; format
.text:00000000000024E5                 mov     edi, 1          ; status
.text:00000000000024EA                 xor     eax, eax
.text:00000000000024EC                 call    _error
.text:00000000000024F1
.text:00000000000024F1 loc_24F1:                               ; CODE XREF: main+292↑j
.text:00000000000024F1                 lea     rsi, aCExpressionsMa ; "[=c=] expressions may not appear in str"...
.text:00000000000024F8                 mov     edx, 5          ; category
.text:00000000000024FD                 xor     edi, edi        ; domainname
.text:00000000000024FF                 call    _dcgettext
.text:0000000000002504                 xor     esi, esi        ; errnum
.text:0000000000002506                 mov     rdx, rax        ; format
.text:0000000000002509                 mov     edi, 1          ; status
.text:000000000000250E                 xor     eax, eax
.text:0000000000002510                 call    _error
.text:0000000000002515
.text:0000000000002515 loc_2515:                               ; CODE XREF: main+90C↑j
.text:0000000000002515                 lea     rcx, __PRETTY_FUNCTION___7483 ; "main"
.text:000000000000251C                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:0000000000002523                 lea     rdi, aC11TruncateSet ; "c1 == -1 || truncate_set1"
.text:000000000000252A                 mov     edx, 762h       ; line
.text:000000000000252F                 call    ___assert_fail
.text:0000000000002534 ; ---------------------------------------------------------------------------
.text:0000000000002534
.text:0000000000002534 loc_2534:                               ; CODE XREF: main+360↑j
.text:0000000000002534                                         ; main+36B↑j
.text:0000000000002534                 lea     rsi, aMisalignedUppe ; "misaligned [:upper:] and/or [:lower:] c"...
.text:000000000000253B                 mov     edx, 5          ; category
.text:0000000000002540                 xor     edi, edi        ; domainname
.text:0000000000002542                 call    _dcgettext
.text:0000000000002547                 xor     esi, esi        ; errnum
.text:0000000000002549                 mov     rdx, rax        ; format
.text:000000000000254C                 mov     edi, 1          ; status
.text:0000000000002551                 xor     eax, eax
.text:0000000000002553                 call    _error
.text:0000000000002558
.text:0000000000002558 loc_2558:                               ; CODE XREF: main+1C6↑j
.text:0000000000002558                 test    r12d, r12d
.text:000000000000255B                 jnz     short loc_2583
.text:000000000000255D                 lea     rsi, aMissingOperand ; "missing operand"
.text:0000000000002564                 xor     edi, edi        ; domainname
.text:0000000000002566                 mov     edx, 5          ; category
.text:000000000000256B                 call    _dcgettext
.text:0000000000002570                 xor     esi, esi        ; errnum
.text:0000000000002572                 mov     rdx, rax        ; format
.text:0000000000002575                 xor     edi, edi        ; status
.text:0000000000002577                 xor     eax, eax
.text:0000000000002579                 call    _error
.text:000000000000257E                 jmp     loc_1A27
.text:0000000000002583 ; ---------------------------------------------------------------------------
.text:0000000000002583
.text:0000000000002583 loc_2583:                               ; CODE XREF: main+C1B↑j
.text:0000000000002583                 mov     rdi, [r13+rbx*8-8]
.text:0000000000002588                 call    quote
.text:000000000000258D                 lea     rsi, aMissingOperand_0 ; "missing operand after %s"
.text:0000000000002594                 xor     edi, edi        ; domainname
.text:0000000000002596                 mov     rbx, rax
.text:0000000000002599                 mov     edx, 5          ; category
.text:000000000000259E                 call    _dcgettext
.text:00000000000025A3                 xor     esi, esi        ; errnum
.text:00000000000025A5                 mov     rdx, rax        ; format
.text:00000000000025A8                 xor     edi, edi        ; status
.text:00000000000025AA                 xor     eax, eax
.text:00000000000025AC                 mov     rcx, rbx
.text:00000000000025AF                 call    _error
.text:00000000000025B4                 cmp     cs:squeeze_repeats, 0
.text:00000000000025BB                 lea     rsi, aTwoStringsMust ; "Two strings must be given when translat"...
.text:00000000000025C2                 lea     rax, aTwoStringsMust_0 ; "Two strings must be given when both del"...
.text:00000000000025C9                 mov     edx, 5          ; category
.text:00000000000025CE                 cmovnz  rsi, rax        ; msgid
.text:00000000000025D2
.text:00000000000025D2 loc_25D2:                               ; CODE XREF: main+D06↓j
.text:00000000000025D2                 xor     edi, edi        ; domainname
.text:00000000000025D4                 call    _dcgettext
.text:00000000000025D9                 mov     rdi, cs:stderr@@GLIBC_2_2_5
.text:00000000000025E0                 lea     rdx, aSSS+8     ; "%s\n"
.text:00000000000025E7                 mov     rcx, rax
.text:00000000000025EA                 mov     esi, 1
.text:00000000000025EF                 xor     eax, eax
.text:00000000000025F1                 call    ___fprintf_chk
.text:00000000000025F6                 jmp     loc_1A27
.text:00000000000025FB ; ---------------------------------------------------------------------------
.text:00000000000025FB
.text:00000000000025FB loc_25FB:                               ; CODE XREF: main+1CF↑j
.text:00000000000025FB                 add     eax, ecx
.text:00000000000025FD                 cdqe
.text:00000000000025FF                 mov     rdi, [r13+rax*8+0]
.text:0000000000002604                 call    quote
.text:0000000000002609                 lea     rsi, aExtraOperandS ; "extra operand %s"
.text:0000000000002610                 xor     edi, edi        ; domainname
.text:0000000000002612                 mov     rbx, rax
.text:0000000000002615                 mov     edx, 5          ; category
.text:000000000000261A                 call    _dcgettext
.text:000000000000261F                 xor     esi, esi        ; errnum
.text:0000000000002621                 mov     rdx, rax        ; format
.text:0000000000002624                 xor     edi, edi        ; status
.text:0000000000002626                 xor     eax, eax
.text:0000000000002628                 mov     rcx, rbx
.text:000000000000262B                 call    _error
.text:0000000000002630                 cmp     r12d, 2
.text:0000000000002634                 mov     edx, 5
.text:0000000000002639                 lea     rsi, aOnlyOneStringM ; "Only one string may be given when delet"...
.text:0000000000002640                 jnz     loc_1A27
.text:0000000000002646                 jmp     short loc_25D2
.text:0000000000002648 ; ---------------------------------------------------------------------------
.text:0000000000002648
.text:0000000000002648 loc_2648:                               ; CODE XREF: main+8EB↑j
.text:0000000000002648                 lea     rsi, aWhenTranslatin_1 ; "when translating with string1 longer th"...
.text:000000000000264F                 mov     edx, 5          ; category
.text:0000000000002654                 xor     edi, edi        ; domainname
.text:0000000000002656                 call    _dcgettext
.text:000000000000265B                 xor     esi, esi        ; errnum
.text:000000000000265D                 mov     rdx, rax        ; format
.text:0000000000002660                 mov     edi, 1          ; status
.text:0000000000002665                 xor     eax, eax
.text:0000000000002667                 call    _error
.text:000000000000266C
.text:000000000000266C loc_266C:                               ; CODE XREF: main+8CD↑j
.text:000000000000266C                 lea     rsi, aWhenNotTruncat ; "when not truncating set1, string2 must "...
.text:0000000000002673                 mov     edx, 5          ; category
.text:0000000000002678                 xor     edi, edi        ; domainname
.text:000000000000267A                 call    _dcgettext
.text:000000000000267F                 xor     esi, esi        ; errnum
.text:0000000000002681                 mov     rdx, rax        ; format
.text:0000000000002684                 mov     edi, 1          ; status
.text:0000000000002689                 xor     eax, eax
.text:000000000000268B                 call    _error
.text:0000000000002690
.text:0000000000002690 loc_2690:                               ; CODE XREF: main+521↑j
.text:0000000000002690                 call    append_repeated_char_part_8
.text:0000000000002690 ; } // starts at 1940
.text:0000000000002690 main            endp
.text:0000000000002690
.text:0000000000002690 ; ---------------------------------------------------------------------------
.text:0000000000002695                 align 20h
.text:00000000000026A0
.text:00000000000026A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000026A0
.text:00000000000026A0 ; Attributes: noreturn fuzzy-sp info_from_lumina
.text:00000000000026A0
.text:00000000000026A0 ; void __fastcall __noreturn start(__int64, __int64, void (*)(void))
.text:00000000000026A0                 public start
.text:00000000000026A0 start           proc near               ; DATA XREF: LOAD:0000000000000018↑o
.text:00000000000026A0 ; __unwind {
.text:00000000000026A0                 xor     ebp, ebp
.text:00000000000026A2                 mov     r9, rdx         ; rtld_fini
.text:00000000000026A5                 pop     rsi             ; argc
.text:00000000000026A6                 mov     rdx, rsp        ; ubp_av
.text:00000000000026A9                 and     rsp, 0FFFFFFFFFFFFFFF0h
.text:00000000000026AD                 push    rax
.text:00000000000026AE                 push    rsp             ; stack_end
.text:00000000000026AF                 lea     r8, __libc_csu_fini ; fini
.text:00000000000026B6                 lea     rcx, __libc_csu_init ; init
.text:00000000000026BD                 lea     rdi, main       ; main
.text:00000000000026C4                 call    cs:__libc_start_main_ptr
.text:00000000000026CA                 hlt
.text:00000000000026CA ; } // starts at 26A0
.text:00000000000026CA start           endp
.text:00000000000026CA
.text:00000000000026CA ; ---------------------------------------------------------------------------
.text:00000000000026CB                 align 10h
.text:00000000000026D0
.text:00000000000026D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000026D0
.text:00000000000026D0 ; Attributes: bp-based frame info_from_lumina
.text:00000000000026D0
.text:00000000000026D0 deregister_tm_clones proc near          ; CODE XREF: __do_global_dtors_aux:loc_2783↓p
.text:00000000000026D0                 lea     rdi, __bss_start
.text:00000000000026D7                 push    rbp
.text:00000000000026D8                 lea     rax, __bss_start
.text:00000000000026DF                 cmp     rax, rdi
.text:00000000000026E2                 mov     rbp, rsp
.text:00000000000026E5                 jz      short loc_2700
.text:00000000000026E7                 mov     rax, cs:_ITM_deregisterTMCloneTable_ptr
.text:00000000000026EE                 test    rax, rax
.text:00000000000026F1                 jz      short loc_2700
.text:00000000000026F3                 pop     rbp
.text:00000000000026F4                 jmp     rax
.text:00000000000026F4 ; ---------------------------------------------------------------------------
.text:00000000000026F6                 align 20h
.text:0000000000002700
.text:0000000000002700 loc_2700:                               ; CODE XREF: deregister_tm_clones+15↑j
.text:0000000000002700                                         ; deregister_tm_clones+21↑j
.text:0000000000002700                 pop     rbp
.text:0000000000002701                 retn
.text:0000000000002701 deregister_tm_clones endp
.text:0000000000002701
.text:0000000000002701 ; ---------------------------------------------------------------------------
.text:0000000000002702                 align 10h
.text:0000000000002710
.text:0000000000002710 ; =============== S U B R O U T I N E =======================================
.text:0000000000002710
.text:0000000000002710 ; Attributes: bp-based frame info_from_lumina
.text:0000000000002710
.text:0000000000002710 register_tm_clones proc near            ; CODE XREF: frame_dummy+5↓j
.text:0000000000002710                 lea     rdi, __bss_start
.text:0000000000002717                 lea     rsi, __bss_start
.text:000000000000271E                 push    rbp
.text:000000000000271F                 sub     rsi, rdi
.text:0000000000002722                 mov     rbp, rsp
.text:0000000000002725                 sar     rsi, 3
.text:0000000000002729                 mov     rax, rsi
.text:000000000000272C                 shr     rax, 3Fh
.text:0000000000002730                 add     rsi, rax
.text:0000000000002733                 sar     rsi, 1
.text:0000000000002736                 jz      short loc_2750
.text:0000000000002738                 mov     rax, cs:_ITM_registerTMCloneTable_ptr
.text:000000000000273F                 test    rax, rax
.text:0000000000002742                 jz      short loc_2750
.text:0000000000002744                 pop     rbp
.text:0000000000002745                 jmp     rax
.text:0000000000002745 ; ---------------------------------------------------------------------------
.text:0000000000002747                 align 10h
.text:0000000000002750
.text:0000000000002750 loc_2750:                               ; CODE XREF: register_tm_clones+26↑j
.text:0000000000002750                                         ; register_tm_clones+32↑j
.text:0000000000002750                 pop     rbp
.text:0000000000002751                 retn
.text:0000000000002751 register_tm_clones endp
.text:0000000000002751
.text:0000000000002751 ; ---------------------------------------------------------------------------
.text:0000000000002752                 align 20h
.text:0000000000002760
.text:0000000000002760 ; =============== S U B R O U T I N E =======================================
.text:0000000000002760
.text:0000000000002760 ; Attributes: info_from_lumina
.text:0000000000002760
.text:0000000000002760 __do_global_dtors_aux proc near         ; DATA XREF: .fini_array:__do_global_dtors_aux_fini_array_entry↓o
.text:0000000000002760                 cmp     cs:completed_7697, 0
.text:0000000000002767                 jnz     short locret_2798
.text:0000000000002769                 cmp     cs:__cxa_finalize_ptr, 0
.text:0000000000002771                 push    rbp
.text:0000000000002772                 mov     rbp, rsp
.text:0000000000002775                 jz      short loc_2783
.text:0000000000002777                 mov     rdi, cs:__dso_handle ; void *
.text:000000000000277E                 call    __cxa_finalize
.text:0000000000002783
.text:0000000000002783 loc_2783:                               ; CODE XREF: __do_global_dtors_aux+15↑j
.text:0000000000002783                 call    deregister_tm_clones
.text:0000000000002788                 mov     cs:completed_7697, 1
.text:000000000000278F                 pop     rbp
.text:0000000000002790                 retn
.text:0000000000002790 ; ---------------------------------------------------------------------------
.text:0000000000002791                 align 8
.text:0000000000002798
.text:0000000000002798 locret_2798:                            ; CODE XREF: __do_global_dtors_aux+7↑j
.text:0000000000002798                 rep retn
.text:0000000000002798 __do_global_dtors_aux endp
.text:0000000000002798
.text:0000000000002798 ; ---------------------------------------------------------------------------
.text:000000000000279A                 align 20h
.text:00000000000027A0
.text:00000000000027A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000027A0
.text:00000000000027A0 ; Attributes: bp-based frame
.text:00000000000027A0
.text:00000000000027A0 frame_dummy     proc near               ; CODE XREF: __libc_csu_init+49↓p
.text:00000000000027A0                                         ; DATA XREF: .init_array:__frame_dummy_init_array_entry↓o
.text:00000000000027A0                 push    rbp
.text:00000000000027A1                 mov     rbp, rsp
.text:00000000000027A4                 pop     rbp
.text:00000000000027A5                 jmp     register_tm_clones
.text:00000000000027A5 frame_dummy     endp
.text:00000000000027A5
.text:00000000000027A5 ; ---------------------------------------------------------------------------
.text:00000000000027AA                 align 10h
.text:00000000000027B0
.text:00000000000027B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000027B0
.text:00000000000027B0
.text:00000000000027B0 star_digits_closebracket proc near      ; CODE XREF: parse_str+3CD↓p
.text:00000000000027B0                                         ; parse_str+707↓p
.text:00000000000027B0 ; __unwind {
.text:00000000000027B0                 mov     r8, [rdi]
.text:00000000000027B3                 xor     eax, eax
.text:00000000000027B5                 cmp     byte ptr [r8+rsi], 2Ah ; '*'
.text:00000000000027BA                 jz      short loc_27C0
.text:00000000000027BC
.text:00000000000027BC locret_27BC:                            ; CODE XREF: star_digits_closebracket+19↓j
.text:00000000000027BC                                         ; star_digits_closebracket+26↓j ...
.text:00000000000027BC                 rep retn
.text:00000000000027BC ; ---------------------------------------------------------------------------
.text:00000000000027BE                 align 20h
.text:00000000000027C0
.text:00000000000027C0 loc_27C0:                               ; CODE XREF: star_digits_closebracket+A↑j
.text:00000000000027C0                 mov     r10, [rdi+8]
.text:00000000000027C4                 cmp     byte ptr [r10+rsi], 0
.text:00000000000027C9                 jnz     short locret_27BC
.text:00000000000027CB                 mov     r9, [rdi+10h]
.text:00000000000027CF                 lea     rdx, [rsi+1]
.text:00000000000027D3                 cmp     rdx, r9
.text:00000000000027D6                 jnb     short locret_27BC
.text:00000000000027D8                 movzx   eax, byte ptr [r8+rsi+1]
.text:00000000000027DE                 mov     edi, eax
.text:00000000000027E0                 sub     eax, 30h ; '0'
.text:00000000000027E3                 cmp     eax, 9
.text:00000000000027E6                 ja      short loc_2820
.text:00000000000027E8                 movzx   eax, byte ptr [r10+rsi+1]
.text:00000000000027EE                 test    al, al
.text:00000000000027F0                 jz      short loc_280E
.text:00000000000027F2                 jmp     short loc_283A
.text:00000000000027F2 ; ---------------------------------------------------------------------------
.text:00000000000027F4                 align 8
.text:00000000000027F8
.text:00000000000027F8 loc_27F8:                               ; CODE XREF: star_digits_closebracket+65↓j
.text:00000000000027F8                 movzx   ecx, byte ptr [r8+rdx]
.text:00000000000027FD                 mov     edi, ecx
.text:00000000000027FF                 sub     ecx, 30h ; '0'
.text:0000000000002802                 cmp     ecx, 9
.text:0000000000002805                 ja      short loc_2820
.text:0000000000002807                 cmp     byte ptr [r10+rdx], 0
.text:000000000000280C                 jnz     short locret_2838
.text:000000000000280E
.text:000000000000280E loc_280E:                               ; CODE XREF: star_digits_closebracket+40↑j
.text:000000000000280E                 add     rdx, 1
.text:0000000000002812                 cmp     rdx, r9
.text:0000000000002815                 jb      short loc_27F8
.text:0000000000002817                 rep retn
.text:0000000000002817 ; ---------------------------------------------------------------------------
.text:0000000000002819                 align 20h
.text:0000000000002820
.text:0000000000002820 loc_2820:                               ; CODE XREF: star_digits_closebracket+36↑j
.text:0000000000002820                                         ; star_digits_closebracket+55↑j
.text:0000000000002820                 xor     eax, eax
.text:0000000000002822                 cmp     dil, 5Dh ; ']'
.text:0000000000002826                 jnz     short locret_27BC
.text:0000000000002828                 movzx   eax, byte ptr [r10+rdx]
.text:000000000000282D                 xor     eax, 1
.text:0000000000002830                 retn
.text:0000000000002830 ; ---------------------------------------------------------------------------
.text:0000000000002831                 align 8
.text:0000000000002838
.text:0000000000002838 locret_2838:                            ; CODE XREF: star_digits_closebracket+5C↑j
.text:0000000000002838                 rep retn
.text:000000000000283A ; ---------------------------------------------------------------------------
.text:000000000000283A
.text:000000000000283A loc_283A:                               ; CODE XREF: star_digits_closebracket+42↑j
.text:000000000000283A                 xor     eax, eax
.text:000000000000283C                 retn
.text:000000000000283C ; } // starts at 27B0
.text:000000000000283C star_digits_closebracket endp
.text:000000000000283C
.text:000000000000283C ; ---------------------------------------------------------------------------
.text:000000000000283D                 align 20h
.text:0000000000002840
.text:0000000000002840 ; =============== S U B R O U T I N E =======================================
.text:0000000000002840
.text:0000000000002840
.text:0000000000002840 make_printable_char proc near           ; CODE XREF: parse_str+41A↓p
.text:0000000000002840                                         ; parse_str+426↓p
.text:0000000000002840 ; __unwind {
.text:0000000000002840                 push    r12
.text:0000000000002842                 push    rbp
.text:0000000000002843                 mov     r12d, edi
.text:0000000000002846                 push    rbx
.text:0000000000002847                 movzx   ebx, dil
.text:000000000000284B                 mov     edi, 5
.text:0000000000002850                 call    xmalloc
.text:0000000000002855                 mov     rbp, rax
.text:0000000000002858                 call    ___ctype_b_loc
.text:000000000000285D                 mov     rax, [rax]
.text:0000000000002860                 test    byte ptr [rax+rbx*2+1], 40h
.text:0000000000002865                 jz      short loc_2880
.text:0000000000002867                 mov     [rbp+0], r12b
.text:000000000000286B                 mov     byte ptr [rbp+1], 0
.text:000000000000286F                 mov     rax, rbp
.text:0000000000002872                 pop     rbx
.text:0000000000002873                 pop     rbp
.text:0000000000002874                 pop     r12
.text:0000000000002876                 retn
.text:0000000000002876 ; ---------------------------------------------------------------------------
.text:0000000000002877                 align 20h
.text:0000000000002880
.text:0000000000002880 loc_2880:                               ; CODE XREF: make_printable_char+25↑j
.text:0000000000002880                 lea     rcx, a03o       ; "\\%03o"
.text:0000000000002887                 movzx   r8d, r12b
.text:000000000000288B                 mov     rdi, rbp
.text:000000000000288E                 mov     edx, 5
.text:0000000000002893                 mov     esi, 1
.text:0000000000002898                 xor     eax, eax
.text:000000000000289A                 call    ___sprintf_chk
.text:000000000000289F                 mov     rax, rbp
.text:00000000000028A2                 pop     rbx
.text:00000000000028A3                 pop     rbp
.text:00000000000028A4                 pop     r12
.text:00000000000028A6                 retn
.text:00000000000028A6 ; } // starts at 2840
.text:00000000000028A6 make_printable_char endp
.text:00000000000028A6
.text:00000000000028A6 ; ---------------------------------------------------------------------------
.text:00000000000028A7                 align 10h
.text:00000000000028B0
.text:00000000000028B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000028B0
.text:00000000000028B0
.text:00000000000028B0 make_printable_str proc near            ; CODE XREF: parse_str+3EF↓p
.text:00000000000028B0                                         ; parse_str+5A5↓p ...
.text:00000000000028B0
.text:00000000000028B0 var_50          = qword ptr -50h
.text:00000000000028B0 var_45          = byte ptr -45h
.text:00000000000028B0 var_44          = byte ptr -44h
.text:00000000000028B0 var_40          = qword ptr -40h
.text:00000000000028B0
.text:00000000000028B0 ; __unwind {
.text:00000000000028B0                 push    r15
.text:00000000000028B2                 push    r14
.text:00000000000028B4                 mov     edx, 4
.text:00000000000028B9                 push    r13
.text:00000000000028BB                 push    r12
.text:00000000000028BD                 mov     r14, rdi
.text:00000000000028C0                 push    rbp
.text:00000000000028C1                 push    rbx
.text:00000000000028C2                 lea     rdi, [rsi+1]
.text:00000000000028C6                 mov     rbx, rsi
.text:00000000000028C9                 sub     rsp, 28h
.text:00000000000028CD                 mov     rax, fs:28h
.text:00000000000028D6                 mov     [rsp+58h+var_40], rax
.text:00000000000028DB                 xor     eax, eax
.text:00000000000028DD                 mov     rax, rdx
.text:00000000000028E0                 mul     rdi
.text:00000000000028E3                 jo      loc_2A44
.text:00000000000028E9                 xor     ecx, ecx
.text:00000000000028EB
.text:00000000000028EB loc_28EB:                               ; CODE XREF: make_printable_str+199↓j
.text:00000000000028EB                 test    rax, rax
.text:00000000000028EE                 js      loc_2A3F
.text:00000000000028F4                 test    rcx, rcx
.text:00000000000028F7                 jnz     loc_2A3F
.text:00000000000028FD                 shl     rdi, 2
.text:0000000000002901                 call    xmalloc
.text:0000000000002906                 test    rbx, rbx
.text:0000000000002909                 mov     r13, rax
.text:000000000000290C                 jz      loc_29D0
.text:0000000000002912                 add     rbx, r14
.text:0000000000002915                 mov     r15, rax
.text:0000000000002918                 lea     rbp, asc_7012   ; "\\f"
.text:000000000000291F                 lea     r12, aV         ; "\\v"
.text:0000000000002926                 jmp     short loc_2974
.text:0000000000002926 ; ---------------------------------------------------------------------------
.text:0000000000002928                 align 10h
.text:0000000000002930
.text:0000000000002930 loc_2930:                               ; CODE XREF: make_printable_str+CE↓j
.text:0000000000002930                 cmp     r8b, 0Ch
.text:0000000000002934                 mov     rsi, rbp
.text:0000000000002937                 jz      short loc_2960
.text:0000000000002939                 mov     rsi, r12
.text:000000000000293C                 jl      short loc_2960
.text:000000000000293E                 cmp     r8b, 0Dh
.text:0000000000002942                 lea     rsi, aR         ; "\\r"
.text:0000000000002949                 jz      short loc_2960
.text:000000000000294B                 cmp     r8b, 5Ch ; '\'
.text:000000000000294F                 lea     rsi, src        ; "\\"
.text:0000000000002956                 jnz     short loc_29A3
.text:0000000000002958                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000002960
.text:0000000000002960 loc_2960:                               ; CODE XREF: make_printable_str+87↑j
.text:0000000000002960                                         ; make_printable_str+8C↑j ...
.text:0000000000002960                 mov     rdi, r15        ; dest
.text:0000000000002963                 add     r14, 1
.text:0000000000002967                 call    _stpcpy
.text:000000000000296C                 cmp     rbx, r14
.text:000000000000296F                 mov     r15, rax
.text:0000000000002972                 jz      short loc_29D0
.text:0000000000002974
.text:0000000000002974 loc_2974:                               ; CODE XREF: make_printable_str+76↑j
.text:0000000000002974                 movzx   r8d, byte ptr [r14]
.text:0000000000002978                 cmp     r8b, 0Ah
.text:000000000000297C                 jz      short loc_29F8
.text:000000000000297E                 jg      short loc_2930
.text:0000000000002980                 cmp     r8b, 8
.text:0000000000002984                 lea     rsi, aB         ; "\\b"
.text:000000000000298B                 jz      short loc_2960
.text:000000000000298D                 lea     rsi, aT         ; "\\t"
.text:0000000000002994                 jg      short loc_2960
.text:0000000000002996                 cmp     r8b, 7
.text:000000000000299A                 lea     rsi, aA         ; "\\a"
.text:00000000000029A1                 jz      short loc_2960
.text:00000000000029A3
.text:00000000000029A3 loc_29A3:                               ; CODE XREF: make_printable_str+A6↑j
.text:00000000000029A3                 mov     byte ptr [rsp+58h+var_50], r8b
.text:00000000000029A8                 call    ___ctype_b_loc
.text:00000000000029AD                 movzx   edx, byte ptr [rsp+58h+var_50]
.text:00000000000029B2                 mov     rcx, [rax]
.text:00000000000029B5                 test    byte ptr [rcx+rdx*2+1], 40h
.text:00000000000029BA                 mov     r8, rdx
.text:00000000000029BD                 jz      short loc_2A08
.text:00000000000029BF                 mov     [rsp+58h+var_45], dl
.text:00000000000029C3                 mov     [rsp+58h+var_44], 0
.text:00000000000029C8                 lea     rsi, [rsp+58h+var_45]
.text:00000000000029CD                 jmp     short loc_2960
.text:00000000000029CD ; ---------------------------------------------------------------------------
.text:00000000000029CF                 align 10h
.text:00000000000029D0
.text:00000000000029D0 loc_29D0:                               ; CODE XREF: make_printable_str+5C↑j
.text:00000000000029D0                                         ; make_printable_str+C2↑j
.text:00000000000029D0                 mov     rcx, [rsp+58h+var_40]
.text:00000000000029D5                 xor     rcx, fs:28h
.text:00000000000029DE                 mov     rax, r13
.text:00000000000029E1                 jnz     short loc_2A3A
.text:00000000000029E3                 add     rsp, 28h
.text:00000000000029E7                 pop     rbx
.text:00000000000029E8                 pop     rbp
.text:00000000000029E9                 pop     r12
.text:00000000000029EB                 pop     r13
.text:00000000000029ED                 pop     r14
.text:00000000000029EF                 pop     r15
.text:00000000000029F1                 retn
.text:00000000000029F1 ; ---------------------------------------------------------------------------
.text:00000000000029F2                 align 8
.text:00000000000029F8
.text:00000000000029F8 loc_29F8:                               ; CODE XREF: make_printable_str+CC↑j
.text:00000000000029F8                 lea     rsi, aN         ; "\\n"
.text:00000000000029FF                 jmp     loc_2960
.text:00000000000029FF ; ---------------------------------------------------------------------------
.text:0000000000002A04                 align 8
.text:0000000000002A08
.text:0000000000002A08 loc_2A08:                               ; CODE XREF: make_printable_str+10D↑j
.text:0000000000002A08                 lea     r10, [rsp+58h+var_45]
.text:0000000000002A0D                 lea     rcx, a03o       ; "\\%03o"
.text:0000000000002A14                 mov     esi, 1
.text:0000000000002A19                 mov     edx, 5
.text:0000000000002A1E                 xor     eax, eax
.text:0000000000002A20                 mov     rdi, r10
.text:0000000000002A23                 mov     [rsp+58h+var_50], r10
.text:0000000000002A28                 call    ___sprintf_chk
.text:0000000000002A2D                 mov     r10, [rsp+58h+var_50]
.text:0000000000002A32                 mov     rsi, r10
.text:0000000000002A35                 jmp     loc_2960
.text:0000000000002A3A ; ---------------------------------------------------------------------------
.text:0000000000002A3A
.text:0000000000002A3A loc_2A3A:                               ; CODE XREF: make_printable_str+131↑j
.text:0000000000002A3A                 call    ___stack_chk_fail
.text:0000000000002A3F ; ---------------------------------------------------------------------------
.text:0000000000002A3F
.text:0000000000002A3F loc_2A3F:                               ; CODE XREF: make_printable_str+3E↑j
.text:0000000000002A3F                                         ; make_printable_str+47↑j
.text:0000000000002A3F                 call    xalloc_die
.text:0000000000002A44 ; ---------------------------------------------------------------------------
.text:0000000000002A44
.text:0000000000002A44 loc_2A44:                               ; CODE XREF: make_printable_str+33↑j
.text:0000000000002A44                 mov     ecx, 1
.text:0000000000002A49                 jmp     loc_28EB
.text:0000000000002A49 ; } // starts at 28B0
.text:0000000000002A49 make_printable_str endp
.text:0000000000002A49
.text:0000000000002A49 ; ---------------------------------------------------------------------------
.text:0000000000002A4E                 align 10h
.text:0000000000002A50
.text:0000000000002A50 ; =============== S U B R O U T I N E =======================================
.text:0000000000002A50
.text:0000000000002A50
.text:0000000000002A50 is_char_class_member proc near          ; CODE XREF: get_spec_stats+E6↓p
.text:0000000000002A50                                         ; get_next+DB↓p ...
.text:0000000000002A50 ; __unwind {
.text:0000000000002A50                 cmp     edi, 0Bh        ; switch 12 cases
.text:0000000000002A53                 push    rbx
.text:0000000000002A54                 ja      def_2A6C        ; jumptable 0000000000002A6C default case
.text:0000000000002A5A                 lea     rdx, jpt_2A6C
.text:0000000000002A61                 mov     edi, edi
.text:0000000000002A63                 mov     ebx, esi
.text:0000000000002A65                 movsxd  rax, ds:(jpt_2A6C - 7280h)[rdx+rdi*4]
.text:0000000000002A69                 add     rax, rdx
.text:0000000000002A6C                 jmp     rax             ; switch jump
.text:0000000000002A6C ; ---------------------------------------------------------------------------
.text:0000000000002A6E                 align 10h
.text:0000000000002A70
.text:0000000000002A70 loc_2A70:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002A70                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002A70                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 10
.text:0000000000002A75                 mov     rax, [rax]
.text:0000000000002A78                 movzx   esi, bl
.text:0000000000002A7B                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002A7F                 and     ax, 100h
.text:0000000000002A83                 movzx   eax, ax
.text:0000000000002A86
.text:0000000000002A86 loc_2A86:                               ; CODE XREF: is_char_class_member+56↓j
.text:0000000000002A86                                         ; is_char_class_member+75↓j ...
.text:0000000000002A86                 test    eax, eax
.text:0000000000002A88                 setnz   al
.text:0000000000002A8B                 pop     rbx
.text:0000000000002A8C                 retn
.text:0000000000002A8C ; ---------------------------------------------------------------------------
.text:0000000000002A8D                 align 10h
.text:0000000000002A90
.text:0000000000002A90 loc_2A90:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002A90                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002A90                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 11
.text:0000000000002A95                 mov     rax, [rax]
.text:0000000000002A98                 movzx   esi, bl
.text:0000000000002A9B                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002A9F                 and     ax, 1000h
.text:0000000000002AA3                 movzx   eax, ax
.text:0000000000002AA6                 jmp     short loc_2A86
.text:0000000000002AA6 ; ---------------------------------------------------------------------------
.text:0000000000002AA8                 align 10h
.text:0000000000002AB0
.text:0000000000002AB0 loc_2AB0:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002AB0                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002AB0                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 0
.text:0000000000002AB5                 mov     rax, [rax]
.text:0000000000002AB8                 movzx   esi, bl
.text:0000000000002ABB                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002ABF                 and     eax, 8
.text:0000000000002AC2                 movzx   eax, ax
.text:0000000000002AC5                 jmp     short loc_2A86
.text:0000000000002AC5 ; ---------------------------------------------------------------------------
.text:0000000000002AC7                 align 10h
.text:0000000000002AD0
.text:0000000000002AD0 loc_2AD0:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002AD0                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002AD0                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 1
.text:0000000000002AD5                 mov     rax, [rax]
.text:0000000000002AD8                 movzx   esi, bl
.text:0000000000002ADB                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002ADF                 and     ax, 400h
.text:0000000000002AE3                 movzx   eax, ax
.text:0000000000002AE6                 jmp     short loc_2A86
.text:0000000000002AE6 ; ---------------------------------------------------------------------------
.text:0000000000002AE8                 align 10h
.text:0000000000002AF0
.text:0000000000002AF0 loc_2AF0:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002AF0                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002AF0                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 2
.text:0000000000002AF5                 mov     rax, [rax]
.text:0000000000002AF8                 movzx   esi, bl
.text:0000000000002AFB                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002AFF                 and     eax, 1
.text:0000000000002B02                 jmp     short loc_2A86
.text:0000000000002B02 ; ---------------------------------------------------------------------------
.text:0000000000002B04                 align 8
.text:0000000000002B08
.text:0000000000002B08 loc_2B08:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002B08                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002B08                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 3
.text:0000000000002B0D                 mov     rax, [rax]
.text:0000000000002B10                 movzx   esi, bl
.text:0000000000002B13                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002B17                 and     eax, 2
.text:0000000000002B1A                 movzx   eax, ax
.text:0000000000002B1D                 jmp     loc_2A86
.text:0000000000002B1D ; ---------------------------------------------------------------------------
.text:0000000000002B22                 align 8
.text:0000000000002B28
.text:0000000000002B28 loc_2B28:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002B28                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002B28                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 4
.text:0000000000002B2D                 mov     rax, [rax]
.text:0000000000002B30                 movzx   esi, bl
.text:0000000000002B33                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002B37                 and     ax, 800h
.text:0000000000002B3B                 movzx   eax, ax
.text:0000000000002B3E                 jmp     loc_2A86
.text:0000000000002B3E ; ---------------------------------------------------------------------------
.text:0000000000002B43                 align 8
.text:0000000000002B48
.text:0000000000002B48 loc_2B48:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002B48                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002B48                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 5
.text:0000000000002B4D                 mov     rax, [rax]
.text:0000000000002B50                 movzx   esi, bl
.text:0000000000002B53                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002B57                 and     ax, 8000h
.text:0000000000002B5B                 movzx   eax, ax
.text:0000000000002B5E                 jmp     loc_2A86
.text:0000000000002B5E ; ---------------------------------------------------------------------------
.text:0000000000002B63                 align 8
.text:0000000000002B68
.text:0000000000002B68 loc_2B68:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002B68                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002B68                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 6
.text:0000000000002B6D                 mov     rax, [rax]
.text:0000000000002B70                 movzx   esi, bl
.text:0000000000002B73                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002B77                 and     ax, 200h
.text:0000000000002B7B                 movzx   eax, ax
.text:0000000000002B7E                 jmp     loc_2A86
.text:0000000000002B7E ; ---------------------------------------------------------------------------
.text:0000000000002B83                 align 8
.text:0000000000002B88
.text:0000000000002B88 loc_2B88:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002B88                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002B88                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 7
.text:0000000000002B8D                 mov     rax, [rax]
.text:0000000000002B90                 movzx   esi, bl
.text:0000000000002B93                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002B97                 and     ax, 4000h
.text:0000000000002B9B                 movzx   eax, ax
.text:0000000000002B9E                 jmp     loc_2A86
.text:0000000000002B9E ; ---------------------------------------------------------------------------
.text:0000000000002BA3                 align 8
.text:0000000000002BA8
.text:0000000000002BA8 loc_2BA8:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002BA8                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002BA8                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 8
.text:0000000000002BAD                 mov     rax, [rax]
.text:0000000000002BB0                 movzx   esi, bl
.text:0000000000002BB3                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002BB7                 and     eax, 4
.text:0000000000002BBA                 movzx   eax, ax
.text:0000000000002BBD                 jmp     loc_2A86
.text:0000000000002BBD ; ---------------------------------------------------------------------------
.text:0000000000002BC2                 align 8
.text:0000000000002BC8
.text:0000000000002BC8 loc_2BC8:                               ; CODE XREF: is_char_class_member+1C↑j
.text:0000000000002BC8                                         ; DATA XREF: .rodata:jpt_2A6C↓o
.text:0000000000002BC8                 call    ___ctype_b_loc  ; jumptable 0000000000002A6C case 9
.text:0000000000002BCD                 mov     rax, [rax]
.text:0000000000002BD0                 movzx   esi, bl
.text:0000000000002BD3                 movzx   eax, word ptr [rax+rsi*2]
.text:0000000000002BD7                 and     ax, 2000h
.text:0000000000002BDB                 movzx   eax, ax
.text:0000000000002BDE                 jmp     loc_2A86
.text:0000000000002BE3 ; ---------------------------------------------------------------------------
.text:0000000000002BE3
.text:0000000000002BE3 def_2A6C:                               ; CODE XREF: is_char_class_member+4↑j
.text:0000000000002BE3                 call    _abort          ; jumptable 0000000000002A6C default case
.text:0000000000002BE3 ; } // starts at 2A50
.text:0000000000002BE3 is_char_class_member endp
.text:0000000000002BE3
.text:0000000000002BE3 ; ---------------------------------------------------------------------------
.text:0000000000002BE8                 align 10h
.text:0000000000002BF0
.text:0000000000002BF0 ; =============== S U B R O U T I N E =======================================
.text:0000000000002BF0
.text:0000000000002BF0
.text:0000000000002BF0 get_spec_stats  proc near               ; CODE XREF: main+221↑p
.text:0000000000002BF0                                         ; main+252↑p
.text:0000000000002BF0
.text:0000000000002BF0 var_40          = qword ptr -40h
.text:0000000000002BF0
.text:0000000000002BF0 ; __unwind {
.text:0000000000002BF0                 push    r15
.text:0000000000002BF2                 push    r14
.text:0000000000002BF4                 xor     r14d, r14d
.text:0000000000002BF7                 push    r13
.text:0000000000002BF9                 push    r12
.text:0000000000002BFB                 push    rbp
.text:0000000000002BFC                 push    rbx
.text:0000000000002BFD                 sub     rsp, 18h
.text:0000000000002C01                 mov     rax, [rdi]
.text:0000000000002C04                 mov     qword ptr [rdi+20h], 0
.text:0000000000002C0C                 mov     [rsp+48h+var_40], rdi
.text:0000000000002C11                 mov     byte ptr [rdi+30h], 0
.text:0000000000002C15                 mov     byte ptr [rdi+32h], 0
.text:0000000000002C19                 mov     byte ptr [rdi+31h], 0
.text:0000000000002C1D                 mov     rbp, [rax+8]
.text:0000000000002C21                 test    rbp, rbp
.text:0000000000002C24                 jz      short loc_2C9C
.text:0000000000002C26                 lea     r12, jpt_2C44
.text:0000000000002C2D                 nop     dword ptr [rax]
.text:0000000000002C30
.text:0000000000002C30 loc_2C30:                               ; CODE XREF: get_spec_stats+AA↓j
.text:0000000000002C30                 cmp     dword ptr [rbp+0], 4 ; switch 5 cases
.text:0000000000002C34                 ja      def_2C44        ; jumptable 0000000000002C44 default case
.text:0000000000002C3A                 mov     eax, [rbp+0]
.text:0000000000002C3D                 movsxd  rax, ds:(jpt_2C44 - 72B0h)[r12+rax*4]
.text:0000000000002C41                 add     rax, r12
.text:0000000000002C44                 jmp     rax             ; switch jump
.text:0000000000002C44 ; ---------------------------------------------------------------------------
.text:0000000000002C46                 align 10h
.text:0000000000002C50
.text:0000000000002C50 loc_2C50:                               ; CODE XREF: get_spec_stats+54↑j
.text:0000000000002C50                                         ; DATA XREF: .rodata:jpt_2C44↓o
.text:0000000000002C50                 movzx   ecx, byte ptr [rbp+10h] ; jumptable 0000000000002C44 case 3
.text:0000000000002C54                 xor     eax, eax
.text:0000000000002C56                 xor     ebx, ebx
.text:0000000000002C58                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000002C60
.text:0000000000002C60 loc_2C60:                               ; CODE XREF: get_spec_stats+82↓j
.text:0000000000002C60                 xor     edx, edx
.text:0000000000002C62                 cmp     cl, al
.text:0000000000002C64                 setz    dl
.text:0000000000002C67                 add     eax, 1
.text:0000000000002C6A                 add     rbx, rdx
.text:0000000000002C6D                 cmp     eax, 100h
.text:0000000000002C72                 jnz     short loc_2C60
.text:0000000000002C74                 mov     rax, [rsp+48h+var_40]
.text:0000000000002C79                 mov     byte ptr [rax+30h], 1
.text:0000000000002C7D
.text:0000000000002C7D loc_2C7D:                               ; CODE XREF: get_spec_stats+102↓j
.text:0000000000002C7D                                         ; get_spec_stats+108↓j ...
.text:0000000000002C7D                 add     rbx, r14
.text:0000000000002C80                 mov     r14, rbx
.text:0000000000002C83                 jb      loc_2D84
.text:0000000000002C89                 cmp     rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000002C8D                 jz      loc_2D84
.text:0000000000002C93
.text:0000000000002C93 loc_2C93:                               ; CODE XREF: get_spec_stats+16B↓j
.text:0000000000002C93                 mov     rbp, [rbp+8]
.text:0000000000002C97                 test    rbp, rbp
.text:0000000000002C9A                 jnz     short loc_2C30
.text:0000000000002C9C
.text:0000000000002C9C loc_2C9C:                               ; CODE XREF: get_spec_stats+34↑j
.text:0000000000002C9C                 mov     rax, [rsp+48h+var_40]
.text:0000000000002CA1                 mov     [rax+18h], r14
.text:0000000000002CA5                 add     rsp, 18h
.text:0000000000002CA9                 pop     rbx
.text:0000000000002CAA                 pop     rbp
.text:0000000000002CAB                 pop     r12
.text:0000000000002CAD                 pop     r13
.text:0000000000002CAF                 pop     r14
.text:0000000000002CB1                 pop     r15
.text:0000000000002CB3                 retn
.text:0000000000002CB3 ; ---------------------------------------------------------------------------
.text:0000000000002CB4                 align 8
.text:0000000000002CB8
.text:0000000000002CB8 loc_2CB8:                               ; CODE XREF: get_spec_stats+54↑j
.text:0000000000002CB8                                         ; DATA XREF: .rodata:jpt_2C44↓o
.text:0000000000002CB8                 mov     rax, [rsp+48h+var_40] ; jumptable 0000000000002C44 case 2
.text:0000000000002CBD                 mov     r15d, [rbp+10h]
.text:0000000000002CC1                 xor     r13d, r13d
.text:0000000000002CC4                 xor     ebx, ebx
.text:0000000000002CC6                 mov     byte ptr [rax+31h], 1
.text:0000000000002CCA                 nop     word ptr [rax+rax+00h]
.text:0000000000002CD0
.text:0000000000002CD0 loc_2CD0:                               ; CODE XREF: get_spec_stats+FC↓j
.text:0000000000002CD0                 mov     esi, r13d
.text:0000000000002CD3                 mov     edi, r15d
.text:0000000000002CD6                 call    is_char_class_member
.text:0000000000002CDB                 cmp     al, 1
.text:0000000000002CDD                 sbb     rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000002CE1                 add     r13d, 1
.text:0000000000002CE5                 cmp     r13d, 100h
.text:0000000000002CEC                 jnz     short loc_2CD0
.text:0000000000002CEE                 cmp     r15d, 6
.text:0000000000002CF2                 jz      short loc_2C7D
.text:0000000000002CF4                 cmp     r15d, 0Ah
.text:0000000000002CF8                 jz      short loc_2C7D
.text:0000000000002CFA                 mov     rax, [rsp+48h+var_40]
.text:0000000000002CFF                 mov     byte ptr [rax+32h], 1
.text:0000000000002D03                 jmp     loc_2C7D
.text:0000000000002D03 ; ---------------------------------------------------------------------------
.text:0000000000002D08                 align 10h
.text:0000000000002D10
.text:0000000000002D10 loc_2D10:                               ; CODE XREF: get_spec_stats+54↑j
.text:0000000000002D10                                         ; DATA XREF: .rodata:jpt_2C44↓o
.text:0000000000002D10                 movzx   eax, byte ptr [rbp+11h] ; jumptable 0000000000002C44 case 1
.text:0000000000002D14                 movzx   edx, byte ptr [rbp+10h]
.text:0000000000002D18                 cmp     al, dl
.text:0000000000002D1A                 jb      short loc_2D65
.text:0000000000002D1C                 movzx   ebx, al
.text:0000000000002D1F                 mov     eax, ebx
.text:0000000000002D21                 sub     eax, edx
.text:0000000000002D23                 lea     ebx, [rax+1]
.text:0000000000002D26                 movsxd  rbx, ebx
.text:0000000000002D29                 jmp     loc_2C7D
.text:0000000000002D29 ; ---------------------------------------------------------------------------
.text:0000000000002D2E                 align 10h
.text:0000000000002D30
.text:0000000000002D30 loc_2D30:                               ; CODE XREF: get_spec_stats+54↑j
.text:0000000000002D30                                         ; DATA XREF: .rodata:jpt_2C44↓o
.text:0000000000002D30                 mov     ebx, 1          ; jumptable 0000000000002C44 case 0
.text:0000000000002D35                 jmp     loc_2C7D
.text:0000000000002D35 ; ---------------------------------------------------------------------------
.text:0000000000002D3A                 align 20h
.text:0000000000002D40
.text:0000000000002D40 loc_2D40:                               ; CODE XREF: get_spec_stats+54↑j
.text:0000000000002D40                                         ; DATA XREF: .rodata:jpt_2C44↓o
.text:0000000000002D40                 mov     rbx, [rbp+18h]  ; jumptable 0000000000002C44 case 4
.text:0000000000002D44                 test    rbx, rbx
.text:0000000000002D47                 jnz     loc_2C7D
.text:0000000000002D4D                 mov     rax, [rsp+48h+var_40]
.text:0000000000002D52                 mov     [rax+28h], rbp
.text:0000000000002D56                 add     qword ptr [rax+20h], 1
.text:0000000000002D5B                 jmp     loc_2C93
.text:0000000000002D60 ; ---------------------------------------------------------------------------
.text:0000000000002D60
.text:0000000000002D60 def_2C44:                               ; CODE XREF: get_spec_stats+44↑j
.text:0000000000002D60                 call    _abort          ; jumptable 0000000000002C44 default case
.text:0000000000002D65 ; ---------------------------------------------------------------------------
.text:0000000000002D65
.text:0000000000002D65 loc_2D65:                               ; CODE XREF: get_spec_stats+12A↑j
.text:0000000000002D65                 lea     rcx, __PRETTY_FUNCTION___7281 ; "get_spec_stats"
.text:0000000000002D6C                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:0000000000002D73                 lea     rdi, aPURangeLastCha ; "p->u.range.last_char >= p->u.range.firs"...
.text:0000000000002D7A                 mov     edx, 4EEh       ; line
.text:0000000000002D7F                 call    ___assert_fail
.text:0000000000002D84 ; ---------------------------------------------------------------------------
.text:0000000000002D84
.text:0000000000002D84 loc_2D84:                               ; CODE XREF: get_spec_stats+93↑j
.text:0000000000002D84                                         ; get_spec_stats+9D↑j
.text:0000000000002D84                 lea     rsi, aTooManyCharact ; "too many characters in set"
.text:0000000000002D8B                 mov     edx, 5          ; category
.text:0000000000002D90                 xor     edi, edi        ; domainname
.text:0000000000002D92                 call    _dcgettext
.text:0000000000002D97                 xor     esi, esi        ; errnum
.text:0000000000002D99                 mov     rdx, rax        ; format
.text:0000000000002D9C                 mov     edi, 1          ; status
.text:0000000000002DA1                 xor     eax, eax
.text:0000000000002DA3                 call    _error
.text:0000000000002DA3 ; } // starts at 2BF0
.text:0000000000002DA8                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000002DA8 get_spec_stats  endp ; sp-analysis failed
.text:0000000000002DA8
.text:0000000000002DB0
.text:0000000000002DB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000002DB0
.text:0000000000002DB0
.text:0000000000002DB0 get_next        proc near               ; CODE XREF: main+3F9↑p
.text:0000000000002DB0                                         ; main+409↑p ...
.text:0000000000002DB0 ; __unwind {
.text:0000000000002DB0                 push    r14
.text:0000000000002DB2                 push    r13
.text:0000000000002DB4                 lea     rdx, jpt_2E03
.text:0000000000002DBB                 push    r12
.text:0000000000002DBD                 push    rbp
.text:0000000000002DBE                 mov     r14, rdi
.text:0000000000002DC1                 push    rbx
.text:0000000000002DC2                 mov     rax, [rdi+10h]
.text:0000000000002DC6                 mov     rcx, 0FFFFFFFFFFFFFFFFh
.text:0000000000002DCD
.text:0000000000002DCD loc_2DCD:                               ; CODE XREF: get_next+9C↓j
.text:0000000000002DCD                 test    rsi, rsi
.text:0000000000002DD0                 jz      short loc_2DD8
.text:0000000000002DD2                 mov     dword ptr [rsi], 2
.text:0000000000002DD8
.text:0000000000002DD8 loc_2DD8:                               ; CODE XREF: get_next+20↑j
.text:0000000000002DD8                 cmp     rax, 0FFFFFFFFFFFFFFFEh
.text:0000000000002DDC                 jz      loc_2F20
.text:0000000000002DE2                 mov     rbp, [r14+8]
.text:0000000000002DE6
.text:0000000000002DE6 loc_2DE6:                               ; CODE XREF: get_next+17F↓j
.text:0000000000002DE6                 test    rbp, rbp
.text:0000000000002DE9                 jz      loc_2F88
.text:0000000000002DEF                 cmp     dword ptr [rbp+0], 4 ; switch 5 cases
.text:0000000000002DF3                 ja      def_2E03        ; jumptable 0000000000002E03 default case
.text:0000000000002DF9                 mov     eax, [rbp+0]
.text:0000000000002DFC                 movsxd  rax, ds:(jpt_2E03 - 72C4h)[rdx+rax*4]
.text:0000000000002E00                 add     rax, rdx
.text:0000000000002E03                 jmp     rax             ; switch jump
.text:0000000000002E03 ; ---------------------------------------------------------------------------
.text:0000000000002E05                 align 8
.text:0000000000002E08
.text:0000000000002E08 loc_2E08:                               ; CODE XREF: get_next+53↑j
.text:0000000000002E08                                         ; DATA XREF: .rodata:jpt_2E03↓o
.text:0000000000002E08                 mov     rax, [rbp+8]    ; jumptable 0000000000002E03 cases 0,3
.text:0000000000002E0C                 movzx   r13d, byte ptr [rbp+10h]
.text:0000000000002E11                 mov     qword ptr [r14+10h], 0FFFFFFFFFFFFFFFFh
.text:0000000000002E19                 mov     [r14+8], rax
.text:0000000000002E1D
.text:0000000000002E1D loc_2E1D:                               ; CODE XREF: get_next+14C↓j
.text:0000000000002E1D                                         ; get_next+1DE↓j ...
.text:0000000000002E1D                 pop     rbx
.text:0000000000002E1E                 mov     eax, r13d
.text:0000000000002E21                 pop     rbp
.text:0000000000002E22                 pop     r12
.text:0000000000002E24                 pop     r13
.text:0000000000002E26                 pop     r14
.text:0000000000002E28                 retn
.text:0000000000002E28 ; ---------------------------------------------------------------------------
.text:0000000000002E29                 align 10h
.text:0000000000002E30
.text:0000000000002E30 loc_2E30:                               ; CODE XREF: get_next+53↑j
.text:0000000000002E30                                         ; DATA XREF: .rodata:jpt_2E03↓o
.text:0000000000002E30                 mov     rax, [rbp+18h]  ; jumptable 0000000000002E03 case 4
.text:0000000000002E34                 test    rax, rax
.text:0000000000002E37                 jnz     loc_2FB2
.text:0000000000002E3D                 mov     rax, [rbp+8]
.text:0000000000002E41                 mov     [r14+10h], rcx
.text:0000000000002E45                 mov     [r14+8], rax
.text:0000000000002E49                 mov     rax, rcx
.text:0000000000002E4C                 jmp     loc_2DCD
.text:0000000000002E4C ; ---------------------------------------------------------------------------
.text:0000000000002E51                 align 8
.text:0000000000002E58
.text:0000000000002E58 loc_2E58:                               ; CODE XREF: get_next+53↑j
.text:0000000000002E58                                         ; DATA XREF: .rodata:jpt_2E03↓o
.text:0000000000002E58                 test    rsi, rsi        ; jumptable 0000000000002E03 case 2
.text:0000000000002E5B                 mov     r12d, [rbp+10h]
.text:0000000000002E5F                 jz      short loc_2E77
.text:0000000000002E61                 cmp     r12d, 6
.text:0000000000002E65                 jz      loc_2F78
.text:0000000000002E6B                 cmp     r12d, 0Ah
.text:0000000000002E6F                 jnz     short loc_2E77
.text:0000000000002E71                 mov     dword ptr [rsi], 1
.text:0000000000002E77
.text:0000000000002E77 loc_2E77:                               ; CODE XREF: get_next+AF↑j
.text:0000000000002E77                                         ; get_next+BF↑j ...
.text:0000000000002E77                 mov     rbx, [r14+10h]
.text:0000000000002E7B                 cmp     rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000002E7F                 jz      loc_2F38
.text:0000000000002E85
.text:0000000000002E85 loc_2E85:                               ; CODE XREF: get_next+1B0↓j
.text:0000000000002E85                 movzx   esi, bl
.text:0000000000002E88                 mov     edi, r12d
.text:0000000000002E8B                 call    is_char_class_member
.text:0000000000002E90                 test    al, al
.text:0000000000002E92                 jz      loc_2FE3
.text:0000000000002E98                 mov     r13d, ebx
.text:0000000000002E9B                 add     ebx, 1
.text:0000000000002E9E                 cmp     ebx, 0FFh
.text:0000000000002EA4                 jle     short loc_2EBB
.text:0000000000002EA6                 jmp     short loc_2F02
.text:0000000000002EA6 ; ---------------------------------------------------------------------------
.text:0000000000002EA8                 align 10h
.text:0000000000002EB0
.text:0000000000002EB0 loc_2EB0:                               ; CODE XREF: get_next+118↓j
.text:0000000000002EB0                 add     ebx, 1
.text:0000000000002EB3                 cmp     ebx, 100h
.text:0000000000002EB9                 jz      short loc_2F02
.text:0000000000002EBB
.text:0000000000002EBB loc_2EBB:                               ; CODE XREF: get_next+F4↑j
.text:0000000000002EBB                 movzx   esi, bl
.text:0000000000002EBE                 mov     edi, r12d
.text:0000000000002EC1                 call    is_char_class_member
.text:0000000000002EC6                 test    al, al
.text:0000000000002EC8                 jz      short loc_2EB0
.text:0000000000002ECA                 movsxd  rbx, ebx
.text:0000000000002ECD                 mov     eax, r13d
.text:0000000000002ED0                 mov     [r14+10h], rbx
.text:0000000000002ED4                 pop     rbx
.text:0000000000002ED5                 pop     rbp
.text:0000000000002ED6                 pop     r12
.text:0000000000002ED8                 pop     r13
.text:0000000000002EDA                 pop     r14
.text:0000000000002EDC                 retn
.text:0000000000002EDC ; ---------------------------------------------------------------------------
.text:0000000000002EDD                 align 20h
.text:0000000000002EE0
.text:0000000000002EE0 loc_2EE0:                               ; CODE XREF: get_next+53↑j
.text:0000000000002EE0                                         ; DATA XREF: .rodata:jpt_2E03↓o
.text:0000000000002EE0                 mov     rax, [r14+10h]  ; jumptable 0000000000002E03 case 1
.text:0000000000002EE4                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000002EE8                 jz      short loc_2F68
.text:0000000000002EEA                 add     rax, 1
.text:0000000000002EEE                 mov     [r14+10h], rax
.text:0000000000002EF2
.text:0000000000002EF2 loc_2EF2:                               ; CODE XREF: get_next+1C0↓j
.text:0000000000002EF2                 movzx   edx, byte ptr [rbp+11h]
.text:0000000000002EF6                 mov     r13d, eax
.text:0000000000002EF9                 cmp     rdx, rax
.text:0000000000002EFC                 jnz     loc_2E1D
.text:0000000000002F02
.text:0000000000002F02 loc_2F02:                               ; CODE XREF: get_next+F6↑j
.text:0000000000002F02                                         ; get_next+109↑j ...
.text:0000000000002F02                 mov     rax, [rbp+8]
.text:0000000000002F06                 mov     qword ptr [r14+10h], 0FFFFFFFFFFFFFFFFh
.text:0000000000002F0E                 pop     rbx
.text:0000000000002F0F                 pop     rbp
.text:0000000000002F10                 mov     [r14+8], rax
.text:0000000000002F14                 mov     eax, r13d
.text:0000000000002F17                 pop     r12
.text:0000000000002F19                 pop     r13
.text:0000000000002F1B                 pop     r14
.text:0000000000002F1D                 retn
.text:0000000000002F1D ; ---------------------------------------------------------------------------
.text:0000000000002F1E                 align 20h
.text:0000000000002F20
.text:0000000000002F20 loc_2F20:                               ; CODE XREF: get_next+2C↑j
.text:0000000000002F20                 mov     rax, [r14]
.text:0000000000002F23                 mov     rbp, [rax+8]
.text:0000000000002F27                 mov     [r14+10h], rcx
.text:0000000000002F2B                 mov     [r14+8], rbp
.text:0000000000002F2F                 jmp     loc_2DE6
.text:0000000000002F2F ; ---------------------------------------------------------------------------
.text:0000000000002F34                 align 8
.text:0000000000002F38
.text:0000000000002F38 loc_2F38:                               ; CODE XREF: get_next+CF↑j
.text:0000000000002F38                 xor     ebx, ebx
.text:0000000000002F3A                 jmp     short loc_2F4B
.text:0000000000002F3A ; ---------------------------------------------------------------------------
.text:0000000000002F3C                 align 20h
.text:0000000000002F40
.text:0000000000002F40 loc_2F40:                               ; CODE XREF: get_next+1A7↓j
.text:0000000000002F40                 add     ebx, 1
.text:0000000000002F43                 cmp     ebx, 100h
.text:0000000000002F49                 jz      short loc_2F93
.text:0000000000002F4B
.text:0000000000002F4B loc_2F4B:                               ; CODE XREF: get_next+18A↑j
.text:0000000000002F4B                 mov     esi, ebx
.text:0000000000002F4D                 mov     edi, r12d
.text:0000000000002F50                 call    is_char_class_member
.text:0000000000002F55                 test    al, al
.text:0000000000002F57                 jz      short loc_2F40
.text:0000000000002F59                 movsxd  rbx, ebx
.text:0000000000002F5C                 mov     [r14+10h], rbx
.text:0000000000002F60                 jmp     loc_2E85
.text:0000000000002F60 ; ---------------------------------------------------------------------------
.text:0000000000002F65                 align 8
.text:0000000000002F68
.text:0000000000002F68 loc_2F68:                               ; CODE XREF: get_next+138↑j
.text:0000000000002F68                 movzx   eax, byte ptr [rbp+10h]
.text:0000000000002F6C                 mov     [r14+10h], rax
.text:0000000000002F70                 jmp     loc_2EF2
.text:0000000000002F70 ; ---------------------------------------------------------------------------
.text:0000000000002F75                 align 8
.text:0000000000002F78
.text:0000000000002F78 loc_2F78:                               ; CODE XREF: get_next+B5↑j
.text:0000000000002F78                 mov     dword ptr [rsi], 0
.text:0000000000002F7E                 jmp     loc_2E77
.text:0000000000002F7E ; ---------------------------------------------------------------------------
.text:0000000000002F83                 align 8
.text:0000000000002F88
.text:0000000000002F88 loc_2F88:                               ; CODE XREF: get_next+39↑j
.text:0000000000002F88                 mov     r13d, 0FFFFFFFFh
.text:0000000000002F8E                 jmp     loc_2E1D
.text:0000000000002F93 ; ---------------------------------------------------------------------------
.text:0000000000002F93
.text:0000000000002F93 loc_2F93:                               ; CODE XREF: get_next+199↑j
.text:0000000000002F93                 lea     rcx, __PRETTY_FUNCTION___7229 ; "get_next"
.text:0000000000002F9A                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:0000000000002FA1                 lea     rdi, aINChars   ; "i < N_CHARS"
.text:0000000000002FA8                 mov     edx, 434h       ; line
.text:0000000000002FAD                 call    ___assert_fail
.text:0000000000002FB2 ; ---------------------------------------------------------------------------
.text:0000000000002FB2
.text:0000000000002FB2 loc_2FB2:                               ; CODE XREF: get_next+87↑j
.text:0000000000002FB2                 mov     rcx, [r14+10h]
.text:0000000000002FB6                 movzx   r13d, byte ptr [rbp+10h]
.text:0000000000002FBB                 lea     rdx, [rcx+1]
.text:0000000000002FBF                 cmp     rcx, 0FFFFFFFFFFFFFFFFh
.text:0000000000002FC3                 mov     ecx, 1
.text:0000000000002FC8                 cmovz   rdx, rcx
.text:0000000000002FCC                 cmp     rax, rdx
.text:0000000000002FCF                 mov     [r14+10h], rdx
.text:0000000000002FD3                 jnz     loc_2E1D
.text:0000000000002FD9                 jmp     loc_2F02
.text:0000000000002FDE ; ---------------------------------------------------------------------------
.text:0000000000002FDE
.text:0000000000002FDE def_2E03:                               ; CODE XREF: get_next+43↑j
.text:0000000000002FDE                 call    _abort          ; jumptable 0000000000002E03 default case
.text:0000000000002FE3 ; ---------------------------------------------------------------------------
.text:0000000000002FE3
.text:0000000000002FE3 loc_2FE3:                               ; CODE XREF: get_next+E2↑j
.text:0000000000002FE3                 lea     rcx, __PRETTY_FUNCTION___7229 ; "get_next"
.text:0000000000002FEA                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:0000000000002FF1                 lea     rdi, aIsCharClassMem ; "is_char_class_member (p->u.char_class, "...
.text:0000000000002FF8                 mov     edx, 437h       ; line
.text:0000000000002FFD                 call    ___assert_fail
.text:0000000000002FFD ; } // starts at 2DB0
.text:0000000000002FFD get_next        endp
.text:0000000000002FFD
.text:0000000000002FFD ; ---------------------------------------------------------------------------
.text:0000000000003002                 align 10h
.text:0000000000003010
.text:0000000000003010 ; =============== S U B R O U T I N E =======================================
.text:0000000000003010
.text:0000000000003010
.text:0000000000003010 plain_read_part_5 proc near             ; CODE XREF: plain_read:loc_305C↓p
.text:0000000000003010                                         ; read_and_delete:loc_3111↓p ...
.text:0000000000003010 ; __unwind {
.text:0000000000003010                 push    rbx
.text:0000000000003011                 lea     rsi, aReadError ; "read error"
.text:0000000000003018                 mov     edx, 5          ; category
.text:000000000000301D                 xor     edi, edi        ; domainname
.text:000000000000301F                 call    _dcgettext
.text:0000000000003024                 mov     rbx, rax
.text:0000000000003027                 call    ___errno_location
.text:000000000000302C                 mov     esi, [rax]      ; errnum
.text:000000000000302E                 mov     rdx, rbx        ; format
.text:0000000000003031                 mov     edi, 1          ; status
.text:0000000000003036                 xor     eax, eax
.text:0000000000003038                 call    _error
.text:0000000000003038 ; } // starts at 3010
.text:000000000000303D                 nop     dword ptr [rax]
.text:000000000000303D plain_read_part_5 endp ; sp-analysis failed
.text:000000000000303D
.text:0000000000003040
.text:0000000000003040 ; =============== S U B R O U T I N E =======================================
.text:0000000000003040
.text:0000000000003040
.text:0000000000003040 ; __int64 __fastcall plain_read(void *buf, size_t nbytes)
.text:0000000000003040 plain_read      proc near               ; DATA XREF: main+A5D↑o
.text:0000000000003040 ; __unwind {
.text:0000000000003040                 sub     rsp, 8
.text:0000000000003044                 mov     rdx, rsi        ; nbytes
.text:0000000000003047                 mov     rsi, rdi        ; buf
.text:000000000000304A                 xor     edi, edi        ; fd
.text:000000000000304C                 call    safe_read
.text:0000000000003051                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000003055                 jz      short loc_305C
.text:0000000000003057                 add     rsp, 8
.text:000000000000305B                 retn
.text:000000000000305C ; ---------------------------------------------------------------------------
.text:000000000000305C
.text:000000000000305C loc_305C:                               ; CODE XREF: plain_read+15↑j
.text:000000000000305C                 call    plain_read_part_5
.text:000000000000305C ; } // starts at 3040
.text:0000000000003061                 nop     dword ptr [rax+rax+00h]
.text:0000000000003066                 db      2Eh
.text:0000000000003066                 nop     word ptr [rax+rax+00000000h]
.text:0000000000003066 plain_read      endp ; sp-analysis failed
.text:0000000000003066
.text:0000000000003070
.text:0000000000003070 ; =============== S U B R O U T I N E =======================================
.text:0000000000003070
.text:0000000000003070
.text:0000000000003070 ; __int64 __fastcall read_and_delete(void *buf, size_t nbytes)
.text:0000000000003070 read_and_delete proc near               ; CODE XREF: main+A93↑p
.text:0000000000003070                                         ; DATA XREF: main+5F7↑o
.text:0000000000003070 ; __unwind {
.text:0000000000003070                 push    r12
.text:0000000000003072                 push    rbp
.text:0000000000003073                 lea     rbp, in_delete_set
.text:000000000000307A                 push    rbx
.text:000000000000307B                 mov     r12, rdi
.text:000000000000307E                 mov     rbx, rsi
.text:0000000000003081                 nop     dword ptr [rax+00000000h]
.text:0000000000003088
.text:0000000000003088 loc_3088:                               ; CODE XREF: read_and_delete+6E↓j
.text:0000000000003088                 xor     edi, edi        ; fd
.text:000000000000308A                 mov     rdx, rbx        ; nbytes
.text:000000000000308D                 mov     rsi, r12        ; buf
.text:0000000000003090                 call    safe_read
.text:0000000000003095                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000003099                 jz      short loc_3111
.text:000000000000309B                 test    rax, rax
.text:000000000000309E                 jz      short loc_30E3
.text:00000000000030A0                 xor     esi, esi
.text:00000000000030A2
.text:00000000000030A2 loc_30A2:                               ; CODE XREF: read_and_delete+88↓j
.text:00000000000030A2                 movzx   ecx, byte ptr [r12+rsi]
.text:00000000000030A7                 lea     rdx, [rsi+1]
.text:00000000000030AB                 cmp     byte ptr [rbp+rcx+0], 0
.text:00000000000030B0                 jz      short loc_30F0
.text:00000000000030B2                 cmp     rax, rdx
.text:00000000000030B5                 jbe     short loc_30DB
.text:00000000000030B7
.text:00000000000030B7 loc_30B7:                               ; CODE XREF: read_and_delete+9A↓j
.text:00000000000030B7                 add     rdx, r12
.text:00000000000030BA                 add     rax, r12
.text:00000000000030BD                 nop     dword ptr [rax]
.text:00000000000030C0
.text:00000000000030C0 loc_30C0:                               ; CODE XREF: read_and_delete+69↓j
.text:00000000000030C0                 movzx   edi, byte ptr [rdx]
.text:00000000000030C3                 cmp     byte ptr [rbp+rdi+0], 0
.text:00000000000030C8                 jnz     short loc_30D2
.text:00000000000030CA                 mov     [r12+rsi], dil
.text:00000000000030CE                 add     rsi, 1
.text:00000000000030D2
.text:00000000000030D2 loc_30D2:                               ; CODE XREF: read_and_delete+58↑j
.text:00000000000030D2                 add     rdx, 1
.text:00000000000030D6                 cmp     rax, rdx
.text:00000000000030D9                 jnz     short loc_30C0
.text:00000000000030DB
.text:00000000000030DB loc_30DB:                               ; CODE XREF: read_and_delete+45↑j
.text:00000000000030DB                 test    rsi, rsi
.text:00000000000030DE                 jz      short loc_3088
.text:00000000000030E0                 mov     rax, rsi
.text:00000000000030E3
.text:00000000000030E3 loc_30E3:                               ; CODE XREF: read_and_delete+2E↑j
.text:00000000000030E3                                         ; read_and_delete+9F↓j
.text:00000000000030E3                 pop     rbx
.text:00000000000030E4                 pop     rbp
.text:00000000000030E5                 pop     r12
.text:00000000000030E7                 retn
.text:00000000000030E7 ; ---------------------------------------------------------------------------
.text:00000000000030E8                 align 10h
.text:00000000000030F0
.text:00000000000030F0 loc_30F0:                               ; CODE XREF: read_and_delete+40↑j
.text:00000000000030F0                 cmp     rax, rdx
.text:00000000000030F3                 jz      short loc_3100
.text:00000000000030F5                 mov     rsi, rdx
.text:00000000000030F8                 jmp     short loc_30A2
.text:00000000000030F8 ; ---------------------------------------------------------------------------
.text:00000000000030FA                 align 20h
.text:0000000000003100
.text:0000000000003100 loc_3100:                               ; CODE XREF: read_and_delete+83↑j
.text:0000000000003100                 lea     rdx, [rsi+2]
.text:0000000000003104                 mov     rsi, rax
.text:0000000000003107                 cmp     rax, rdx
.text:000000000000310A                 ja      short loc_30B7
.text:000000000000310C                 mov     rax, rsi
.text:000000000000310F                 jmp     short loc_30E3
.text:0000000000003111 ; ---------------------------------------------------------------------------
.text:0000000000003111
.text:0000000000003111 loc_3111:                               ; CODE XREF: read_and_delete+29↑j
.text:0000000000003111                 call    plain_read_part_5
.text:0000000000003111 ; } // starts at 3070
.text:0000000000003116                 db      2Eh
.text:0000000000003116                 nop     word ptr [rax+rax+00000000h]
.text:0000000000003116 read_and_delete endp ; sp-analysis failed
.text:0000000000003116
.text:0000000000003120
.text:0000000000003120 ; =============== S U B R O U T I N E =======================================
.text:0000000000003120
.text:0000000000003120
.text:0000000000003120 ; __int64 __fastcall read_and_xlate(void *buf, size_t nbytes)
.text:0000000000003120 read_and_xlate  proc near               ; CODE XREF: main+92E↑p
.text:0000000000003120                                         ; DATA XREF: main+A36↑o
.text:0000000000003120 ; __unwind {
.text:0000000000003120                 push    rbx
.text:0000000000003121                 mov     rdx, rsi        ; nbytes
.text:0000000000003124                 mov     rbx, rdi
.text:0000000000003127                 mov     rsi, rdi        ; buf
.text:000000000000312A                 xor     edi, edi        ; fd
.text:000000000000312C                 call    safe_read
.text:0000000000003131                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000003135                 jz      short loc_3165
.text:0000000000003137                 test    rax, rax
.text:000000000000313A                 mov     rdi, rbx
.text:000000000000313D                 lea     rsi, [rbx+rax]
.text:0000000000003141                 lea     rcx, xlate
.text:0000000000003148                 jz      short loc_3163
.text:000000000000314A                 nop     word ptr [rax+rax+00h]
.text:0000000000003150
.text:0000000000003150 loc_3150:                               ; CODE XREF: read_and_xlate+41↓j
.text:0000000000003150                 movzx   edx, byte ptr [rdi]
.text:0000000000003153                 add     rdi, 1
.text:0000000000003157                 movzx   edx, byte ptr [rcx+rdx]
.text:000000000000315B                 mov     [rdi-1], dl
.text:000000000000315E                 cmp     rsi, rdi
.text:0000000000003161                 jnz     short loc_3150
.text:0000000000003163
.text:0000000000003163 loc_3163:                               ; CODE XREF: read_and_xlate+28↑j
.text:0000000000003163                 pop     rbx
.text:0000000000003164                 retn
.text:0000000000003165 ; ---------------------------------------------------------------------------
.text:0000000000003165
.text:0000000000003165 loc_3165:                               ; CODE XREF: read_and_xlate+15↑j
.text:0000000000003165                 call    plain_read_part_5
.text:0000000000003165 ; } // starts at 3120
.text:000000000000316A                 nop     word ptr [rax+rax+00h]
.text:000000000000316A read_and_xlate  endp ; sp-analysis failed
.text:000000000000316A
.text:0000000000003170
.text:0000000000003170 ; =============== S U B R O U T I N E =======================================
.text:0000000000003170
.text:0000000000003170
.text:0000000000003170 append_normal_char proc near            ; CODE XREF: parse_str+150↓p
.text:0000000000003170                                         ; parse_str+184↓p
.text:0000000000003170 ; __unwind {
.text:0000000000003170                 push    rbp
.text:0000000000003171                 push    rbx
.text:0000000000003172                 mov     rbx, rdi
.text:0000000000003175                 mov     edi, 20h ; ' '
.text:000000000000317A                 mov     ebp, esi
.text:000000000000317C                 sub     rsp, 8
.text:0000000000003180                 call    xmalloc
.text:0000000000003185                 mov     rdx, [rbx+8]
.text:0000000000003189                 mov     qword ptr [rax+8], 0
.text:0000000000003191                 mov     dword ptr [rax], 0
.text:0000000000003197                 mov     [rax+10h], bpl
.text:000000000000319B                 test    rdx, rdx
.text:000000000000319E                 jz      short loc_31AF
.text:00000000000031A0                 mov     [rdx+8], rax
.text:00000000000031A4                 mov     [rbx+8], rax
.text:00000000000031A8                 add     rsp, 8
.text:00000000000031AC                 pop     rbx
.text:00000000000031AD                 pop     rbp
.text:00000000000031AE                 retn
.text:00000000000031AF ; ---------------------------------------------------------------------------
.text:00000000000031AF
.text:00000000000031AF loc_31AF:                               ; CODE XREF: append_normal_char+2E↑j
.text:00000000000031AF                 lea     rcx, __PRETTY_FUNCTION___7119 ; "append_normal_char"
.text:00000000000031B6                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:00000000000031BD                 lea     rdi, assertion  ; "list->tail"
.text:00000000000031C4                 mov     edx, 287h       ; line
.text:00000000000031C9                 call    ___assert_fail
.text:00000000000031C9 ; } // starts at 3170
.text:00000000000031C9 append_normal_char endp
.text:00000000000031C9
.text:00000000000031C9 ; ---------------------------------------------------------------------------
.text:00000000000031CE                 align 10h
.text:00000000000031D0
.text:00000000000031D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000031D0
.text:00000000000031D0
.text:00000000000031D0 parse_str       proc near               ; CODE XREF: main+205↑p
.text:00000000000031D0                                         ; main+472↑p ...
.text:00000000000031D0
.text:00000000000031D0 ptr             = qword ptr -0D0h
.text:00000000000031D0 var_C8          = qword ptr -0C8h
.text:00000000000031D0 var_C0          = qword ptr -0C0h
.text:00000000000031D0 n               = qword ptr -0B8h
.text:00000000000031D0 s1              = qword ptr -0B0h
.text:00000000000031D0 var_A8          = qword ptr -0A8h
.text:00000000000031D0 var_A0          = qword ptr -0A0h
.text:00000000000031D0 var_98          = qword ptr -98h
.text:00000000000031D0 var_90          = qword ptr -90h
.text:00000000000031D0 var_88          = qword ptr -88h
.text:00000000000031D0 var_79          = byte ptr -79h
.text:00000000000031D0 var_78          = qword ptr -78h
.text:00000000000031D0 var_70          = qword ptr -70h
.text:00000000000031D0 var_68          = qword ptr -68h
.text:00000000000031D0 var_60          = qword ptr -60h
.text:00000000000031D0 var_58          = qword ptr -58h
.text:00000000000031D0 var_50          = qword ptr -50h
.text:00000000000031D0 var_48          = qword ptr -48h
.text:00000000000031D0 var_40          = qword ptr -40h
.text:00000000000031D0
.text:00000000000031D0 ; __unwind {
.text:00000000000031D0                 push    r15
.text:00000000000031D2                 push    r14
.text:00000000000031D4                 push    r13
.text:00000000000031D6                 push    r12
.text:00000000000031D8                 push    rbp
.text:00000000000031D9                 push    rbx
.text:00000000000031DA                 mov     rbp, rdi
.text:00000000000031DD                 sub     rsp, 0A8h
.text:00000000000031E4                 mov     [rsp+0D8h+var_C8], rsi
.text:00000000000031E9                 mov     rax, fs:28h
.text:00000000000031F2                 mov     [rsp+0D8h+var_40], rax
.text:00000000000031FA                 xor     eax, eax
.text:00000000000031FC                 call    _strlen
.text:0000000000003201                 mov     rbx, rax
.text:0000000000003204                 mov     rdi, rax
.text:0000000000003207                 call    xmalloc
.text:000000000000320C                 mov     esi, 1
.text:0000000000003211                 mov     rdi, rbx
.text:0000000000003214                 mov     r13, rax
.text:0000000000003217                 mov     [rsp+0D8h+ptr], rax
.text:000000000000321C                 mov     [rsp+0D8h+var_58], rax
.text:0000000000003224                 call    xcalloc
.text:0000000000003229                 mov     r14, rax
.text:000000000000322C                 mov     [rsp+0D8h+var_50], rax
.text:0000000000003234                 movzx   eax, byte ptr [rbp+0]
.text:0000000000003238                 test    al, al
.text:000000000000323A                 jz      loc_39E7
.text:0000000000003240                 xor     ebx, ebx
.text:0000000000003242                 xor     r15d, r15d
.text:0000000000003245                 mov     r10, r13
.text:0000000000003248                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000003250
.text:0000000000003250 loc_3250:                               ; CODE XREF: parse_str+F2↓j
.text:0000000000003250                 lea     ecx, [rbx+1]
.text:0000000000003253                 mov     edx, r15d
.text:0000000000003256                 add     r15d, 1
.text:000000000000325A                 cmp     al, 5Ch ; '\'
.text:000000000000325C                 lea     r13, [r10+rdx]
.text:0000000000003260                 mov     rsi, rcx
.text:0000000000003263                 movzx   ecx, byte ptr [rbp+rcx+0]
.text:0000000000003268                 jnz     short loc_32B8
.text:000000000000326A                 lea     r12, [r14+rdx]
.text:000000000000326E                 cmp     cl, 62h ; 'b'
.text:0000000000003271                 mov     byte ptr [r12], 1
.text:0000000000003276                 jz      loc_3928
.text:000000000000327C                 jle     loc_3678
.text:0000000000003282                 cmp     cl, 72h ; 'r'
.text:0000000000003285                 jz      loc_3936
.text:000000000000328B                 jg      loc_36E3
.text:0000000000003291                 cmp     cl, 66h ; 'f'
.text:0000000000003294                 jz      loc_37D5
.text:000000000000329A                 cmp     cl, 6Eh ; 'n'
.text:000000000000329D                 jnz     loc_391D
.text:00000000000032A3                 mov     r12d, 0Ah
.text:00000000000032A9                 lea     eax, [rbx+2]
.text:00000000000032AC                 jmp     loc_36D0
.text:00000000000032AC ; ---------------------------------------------------------------------------
.text:00000000000032B1                 align 8
.text:00000000000032B8
.text:00000000000032B8 loc_32B8:                               ; CODE XREF: parse_str+98↑j
.text:00000000000032B8                 mov     [r13+0], al
.text:00000000000032BC                 mov     ebx, esi
.text:00000000000032BE                 mov     eax, ecx
.text:00000000000032C0
.text:00000000000032C0 loc_32C0:                               ; CODE XREF: parse_str+50E↓j
.text:00000000000032C0                 test    al, al
.text:00000000000032C2                 jnz     short loc_3250
.text:00000000000032C4
.text:00000000000032C4 loc_32C4:                               ; CODE XREF: parse_str+81A↓j
.text:00000000000032C4                 lea     rax, [rsp+0D8h+var_68]
.text:00000000000032C9                 mov     r12, [rsp+0D8h+ptr]
.text:00000000000032CE                 mov     [rsp+0D8h+var_48], r15
.text:00000000000032D6                 xor     r13d, r13d
.text:00000000000032D9                 mov     [rsp+0D8h+var_A8], rax
.text:00000000000032DE                 lea     rax, [rsp+0D8h+var_60]
.text:00000000000032E3                 mov     [rsp+0D8h+var_A0], rax
.text:00000000000032E8
.text:00000000000032E8 loc_32E8:                               ; CODE XREF: parse_str+2AB↓j
.text:00000000000032E8                                         ; parse_str+315↓j
.text:00000000000032E8                 lea     rcx, [r13+2]
.text:00000000000032EC                 cmp     rcx, r15
.text:00000000000032EF                 jnb     short loc_332E
.text:00000000000032F1
.text:00000000000032F1 loc_32F1:                               ; CODE XREF: parse_str+15C↓j
.text:00000000000032F1                 cmp     byte ptr [r12+r13], 5Bh ; '['
.text:00000000000032F6                 lea     rbp, [r13+1]
.text:00000000000032FA                 movzx   r9d, byte ptr [r12+r13+1]
.text:0000000000003300                 jz      short loc_3370
.text:0000000000003302
.text:0000000000003302 loc_3302:                               ; CODE XREF: parse_str+1AB↓j
.text:0000000000003302                                         ; parse_str+1C6↓j ...
.text:0000000000003302                 mov     rax, [rsp+0D8h+ptr]
.text:0000000000003307                 cmp     r9b, 2Dh ; '-'
.text:000000000000330B                 movzx   esi, byte ptr [rax+r13]
.text:0000000000003310                 mov     ebx, esi
.text:0000000000003312                 jz      loc_3480
.text:0000000000003318
.text:0000000000003318 loc_3318:                               ; CODE XREF: parse_str+2BB↓j
.text:0000000000003318                 mov     rdi, [rsp+0D8h+var_C8]
.text:000000000000331D                 mov     r13, rbp
.text:0000000000003320                 call    append_normal_char
.text:0000000000003325                 lea     rcx, [r13+2]
.text:0000000000003329                 cmp     rcx, r15
.text:000000000000332C                 jb      short loc_32F1
.text:000000000000332E
.text:000000000000332E loc_332E:                               ; CODE XREF: parse_str+11F↑j
.text:000000000000332E                 cmp     r13, r15
.text:0000000000003331                 jnb     short loc_335E
.text:0000000000003333                 mov     rax, [rsp+0D8h+ptr]
.text:0000000000003338                 mov     rbp, [rsp+0D8h+var_C8]
.text:000000000000333D                 lea     rbx, [rax+r15]
.text:0000000000003341                 add     r13, rax
.text:0000000000003344                 nop     dword ptr [rax+00h]
.text:0000000000003348
.text:0000000000003348 loc_3348:                               ; CODE XREF: parse_str+18C↓j
.text:0000000000003348                 movzx   esi, byte ptr [r13+0]
.text:000000000000334D                 mov     rdi, rbp
.text:0000000000003350                 add     r13, 1
.text:0000000000003354                 call    append_normal_char
.text:0000000000003359                 cmp     rbx, r13
.text:000000000000335C                 jnz     short loc_3348
.text:000000000000335E
.text:000000000000335E loc_335E:                               ; CODE XREF: parse_str+161↑j
.text:000000000000335E                 mov     byte ptr [rsp+0D8h+var_C0], 1
.text:0000000000003363                 jmp     loc_3635
.text:0000000000003363 ; ---------------------------------------------------------------------------
.text:0000000000003368                 align 10h
.text:0000000000003370
.text:0000000000003370 loc_3370:                               ; CODE XREF: parse_str+130↑j
.text:0000000000003370                 movzx   eax, byte ptr [r14+r13]
.text:0000000000003375                 test    al, al
.text:0000000000003377                 mov     byte ptr [rsp+0D8h+var_C0], al
.text:000000000000337B                 jnz     short loc_3302
.text:000000000000337D                 cmp     r9b, 3Ah ; ':'
.text:0000000000003381                 jz      loc_34F0
.text:0000000000003387                 cmp     r9b, 3Dh ; '='
.text:000000000000338B                 jz      loc_34F0
.text:0000000000003391
.text:0000000000003391 loc_3391:                               ; CODE XREF: parse_str+325↓j
.text:0000000000003391                                         ; parse_str+33B↓j ...
.text:0000000000003391                 cmp     byte ptr [r12+rcx], 2Ah ; '*'
.text:0000000000003396                 jnz     loc_3302
.text:000000000000339C                 cmp     byte ptr [r14+rcx], 0
.text:00000000000033A1                 jnz     loc_3302
.text:00000000000033A7                 lea     rax, [r13+3]
.text:00000000000033AB                 cmp     rax, r15
.text:00000000000033AE                 jnb     loc_3302
.text:00000000000033B4                 cmp     byte ptr [r14+r13+3], 0
.text:00000000000033BA                 jnz     loc_3302
.text:00000000000033C0                 lea     r11, [r12+rax]
.text:00000000000033C4                 movzx   edx, byte ptr [r11]
.text:00000000000033C8                 cmp     dl, 5Dh ; ']'
.text:00000000000033CB                 jnz     short loc_33DB
.text:00000000000033CD                 jmp     loc_39EF
.text:00000000000033CD ; ---------------------------------------------------------------------------
.text:00000000000033D2                 align 8
.text:00000000000033D8
.text:00000000000033D8 loc_33D8:                               ; CODE XREF: parse_str+229↓j
.text:00000000000033D8                 mov     rax, rbx
.text:00000000000033DB
.text:00000000000033DB loc_33DB:                               ; CODE XREF: parse_str+1FB↑j
.text:00000000000033DB                 lea     rbx, [rax+1]
.text:00000000000033DF                 cmp     rbx, r15
.text:00000000000033E2                 jnb     loc_3302
.text:00000000000033E8                 cmp     byte ptr [r14+rax+1], 0
.text:00000000000033EE                 jnz     loc_3302
.text:00000000000033F4                 cmp     byte ptr [r12+rbx], 5Dh ; ']'
.text:00000000000033F9                 jnz     short loc_33D8
.text:00000000000033FB                 not     rbp
.text:00000000000033FE                 add     rbp, rax
.text:0000000000003401                 jnz     loc_371D
.text:0000000000003407
.text:0000000000003407 loc_3407:                               ; CODE XREF: parse_str+822↓j
.text:0000000000003407                 mov     [rsp+0D8h+var_68], 0
.text:0000000000003410
.text:0000000000003410 loc_3410:                               ; CODE XREF: parse_str+599↓j
.text:0000000000003410                 mov     edi, 20h ; ' '
.text:0000000000003415                 mov     byte ptr [rsp+0D8h+var_C0], r9b
.text:000000000000341A                 mov     rbp, [rsp+0D8h+var_68]
.text:000000000000341F                 call    xmalloc
.text:0000000000003424                 mov     rdi, [rsp+0D8h+var_C8]
.text:0000000000003429                 movzx   r9d, byte ptr [rsp+0D8h+var_C0]
.text:000000000000342F                 mov     qword ptr [rax+8], 0
.text:0000000000003437                 mov     dword ptr [rax], 4
.text:000000000000343D                 mov     [rax+18h], rbp
.text:0000000000003441                 mov     rdx, [rdi+8]
.text:0000000000003445                 mov     [rax+10h], r9b
.text:0000000000003449                 test    rdx, rdx
.text:000000000000344C                 jz      loc_3ACC
.text:0000000000003452                 mov     rdi, [rsp+0D8h+var_C8]
.text:0000000000003457                 lea     r13, [rbx+1]
.text:000000000000345B                 mov     [rdx+8], rax
.text:000000000000345F                 mov     [rdi+8], rax
.text:0000000000003463
.text:0000000000003463 loc_3463:                               ; CODE XREF: parse_str+7C2↓j
.text:0000000000003463                 mov     r12, [rsp+0D8h+var_58]
.text:000000000000346B                 mov     r14, [rsp+0D8h+var_50]
.text:0000000000003473                 mov     r15, [rsp+0D8h+var_48]
.text:000000000000347B                 jmp     loc_32E8
.text:0000000000003480 ; ---------------------------------------------------------------------------
.text:0000000000003480
.text:0000000000003480 loc_3480:                               ; CODE XREF: parse_str+142↑j
.text:0000000000003480                 movzx   eax, byte ptr [r14+rbp]
.text:0000000000003485                 test    al, al
.text:0000000000003487                 mov     byte ptr [rsp+0D8h+var_C0], al
.text:000000000000348B                 jnz     loc_3318
.text:0000000000003491                 mov     rax, [rsp+0D8h+ptr]
.text:0000000000003496                 movzx   ebp, byte ptr [rax+rcx]
.text:000000000000349A                 cmp     bpl, sil
.text:000000000000349D                 jb      loc_35E8
.text:00000000000034A3                 mov     edi, 20h ; ' '
.text:00000000000034A8                 call    xmalloc
.text:00000000000034AD                 mov     rdi, [rsp+0D8h+var_C8]
.text:00000000000034B2                 mov     qword ptr [rax+8], 0
.text:00000000000034BA                 mov     dword ptr [rax], 1
.text:00000000000034C0                 mov     [rax+10h], bl
.text:00000000000034C3                 mov     [rax+11h], bpl
.text:00000000000034C7                 mov     rdx, [rdi+8]
.text:00000000000034CB                 test    rdx, rdx
.text:00000000000034CE                 jz      loc_3A89
.text:00000000000034D4                 mov     rdi, [rsp+0D8h+var_C8]
.text:00000000000034D9                 mov     [rdx+8], rax
.text:00000000000034DD                 add     r13, 3
.text:00000000000034E1                 mov     [rdi+8], rax
.text:00000000000034E5                 jmp     loc_32E8
.text:00000000000034E5 ; ---------------------------------------------------------------------------
.text:00000000000034EA                 align 10h
.text:00000000000034F0
.text:00000000000034F0 loc_34F0:                               ; CODE XREF: parse_str+1B1↑j
.text:00000000000034F0                                         ; parse_str+1BB↑j
.text:00000000000034F0                 cmp     byte ptr [r14+rbp], 0
.text:00000000000034F5                 jnz     loc_3391
.text:00000000000034FB                 mov     rax, [rsp+0D8h+ptr]
.text:0000000000003500                 lea     rdx, [r15-1]
.text:0000000000003504                 cmp     rcx, rdx
.text:0000000000003507                 movzx   esi, byte ptr [rax+rbp]
.text:000000000000350B                 jnb     loc_3391
.text:0000000000003511                 mov     rbx, rcx
.text:0000000000003514                 jmp     short loc_352C
.text:0000000000003514 ; ---------------------------------------------------------------------------
.text:0000000000003516                 align 20h
.text:0000000000003520
.text:0000000000003520 loc_3520:                               ; CODE XREF: parse_str+364↓j
.text:0000000000003520                                         ; parse_str+36C↓j ...
.text:0000000000003520                 cmp     rdx, rax
.text:0000000000003523                 mov     rbx, rax
.text:0000000000003526                 jbe     loc_3391
.text:000000000000352C
.text:000000000000352C loc_352C:                               ; CODE XREF: parse_str+344↑j
.text:000000000000352C                 cmp     sil, [r12+rbx]
.text:0000000000003530                 lea     rax, [rbx+1]
.text:0000000000003534                 jnz     short loc_3520
.text:0000000000003536                 cmp     byte ptr [r12+rbx+1], 5Dh ; ']'
.text:000000000000353C                 jnz     short loc_3520
.text:000000000000353E                 cmp     byte ptr [r14+rax-1], 0
.text:0000000000003544                 jnz     short loc_3520
.text:0000000000003546                 cmp     byte ptr [r14+rax], 0
.text:000000000000354B                 jnz     short loc_3520
.text:000000000000354D                 mov     rdi, [rsp+0D8h+ptr]
.text:0000000000003552                 mov     rax, 0FFFFFFFFFFFFFFFEh
.text:0000000000003559                 sub     rax, r13
.text:000000000000355C                 add     rdi, rcx
.text:000000000000355F                 add     rax, rbx
.text:0000000000003562                 mov     [rsp+0D8h+s1], rdi
.text:0000000000003567                 mov     [rsp+0D8h+n], rax
.text:000000000000356C                 jz      loc_3A54
.text:0000000000003572                 cmp     sil, 3Ah ; ':'
.text:0000000000003576                 jz      loc_383B
.text:000000000000357C                 cmp     [rsp+0D8h+n], 1
.text:0000000000003582                 jz      loc_3997
.text:0000000000003588                 lea     rdi, [rsp+0D8h+var_58]
.text:0000000000003590                 mov     rsi, rcx
.text:0000000000003593                 mov     byte ptr [rsp+0D8h+var_90], r9b
.text:0000000000003598                 mov     [rsp+0D8h+var_98], rcx
.text:000000000000359D                 call    star_digits_closebracket
.text:00000000000035A2                 test    al, al
.text:00000000000035A4                 mov     rcx, [rsp+0D8h+var_98]
.text:00000000000035A9                 movzx   r9d, byte ptr [rsp+0D8h+var_90]
.text:00000000000035AF                 jnz     loc_3391
.text:00000000000035B5                 mov     rsi, [rsp+0D8h+n]
.text:00000000000035BA                 mov     rdi, [rsp+0D8h+s1]
.text:00000000000035BF                 call    make_printable_str
.text:00000000000035C4                 lea     rsi, aSEquivalenceCl ; "%s: equivalence class operand must be a"...
.text:00000000000035CB                 mov     rbx, rax
.text:00000000000035CE                 mov     edx, 5          ; category
.text:00000000000035D3                 xor     edi, edi        ; domainname
.text:00000000000035D5                 call    _dcgettext
.text:00000000000035DA                 mov     rcx, rbx
.text:00000000000035DD                 jmp     loc_379E
.text:00000000000035DD ; ---------------------------------------------------------------------------
.text:00000000000035E2                 align 8
.text:00000000000035E8
.text:00000000000035E8 loc_35E8:                               ; CODE XREF: parse_str+2CD↑j
.text:00000000000035E8                 mov     edi, esi
.text:00000000000035EA                 call    make_printable_char
.text:00000000000035EF                 movzx   edi, bpl
.text:00000000000035F3                 mov     r13, rax
.text:00000000000035F6                 call    make_printable_char
.text:00000000000035FB                 lea     rsi, aRangeEndpoints ; "range-endpoints of '%s-%s' are in rever"...
.text:0000000000003602                 mov     rbx, rax
.text:0000000000003605                 mov     edx, 5          ; category
.text:000000000000360A                 xor     edi, edi        ; domainname
.text:000000000000360C                 call    _dcgettext
.text:0000000000003611                 mov     r8, rbx
.text:0000000000003614                 mov     rdx, rax        ; format
.text:0000000000003617                 mov     rcx, r13
.text:000000000000361A                 xor     esi, esi        ; errnum
.text:000000000000361C                 xor     edi, edi        ; status
.text:000000000000361E                 xor     eax, eax
.text:0000000000003620                 call    _error
.text:0000000000003625                 mov     rdi, r13        ; ptr
.text:0000000000003628                 call    _free
.text:000000000000362D                 mov     rdi, rbx        ; ptr
.text:0000000000003630                 call    _free
.text:0000000000003635
.text:0000000000003635 loc_3635:                               ; CODE XREF: parse_str+193↑j
.text:0000000000003635                                         ; parse_str+5E4↓j ...
.text:0000000000003635                 mov     rdi, r12        ; ptr
.text:0000000000003638                 call    _free
.text:000000000000363D                 mov     rdi, r14        ; ptr
.text:0000000000003640                 call    _free
.text:0000000000003645                 mov     rdi, [rsp+0D8h+var_40]
.text:000000000000364D                 xor     rdi, fs:28h
.text:0000000000003656                 movzx   eax, byte ptr [rsp+0D8h+var_C0]
.text:000000000000365B                 jnz     loc_3AA8
.text:0000000000003661                 add     rsp, 0A8h
.text:0000000000003668                 pop     rbx
.text:0000000000003669                 pop     rbp
.text:000000000000366A                 pop     r12
.text:000000000000366C                 pop     r13
.text:000000000000366E                 pop     r14
.text:0000000000003670                 pop     r15
.text:0000000000003672                 retn
.text:0000000000003672 ; ---------------------------------------------------------------------------
.text:0000000000003673                 align 8
.text:0000000000003678
.text:0000000000003678 loc_3678:                               ; CODE XREF: parse_str+AC↑j
.text:0000000000003678                 cmp     cl, 37h ; '7'
.text:000000000000367B                 jg      loc_3700
.text:0000000000003681                 cmp     cl, 30h ; '0'
.text:0000000000003684                 jge     loc_37E3
.text:000000000000368A                 test    cl, cl
.text:000000000000368C                 jnz     loc_391D
.text:0000000000003692                 lea     rsi, aWarningAnUnesc ; "warning: an unescaped backslash at end "...
.text:0000000000003699                 mov     edx, 5          ; category
.text:000000000000369E                 xor     edi, edi        ; domainname
.text:00000000000036A0                 mov     [rsp+0D8h+var_C0], r10
.text:00000000000036A5                 call    _dcgettext
.text:00000000000036AA                 xor     esi, esi        ; errnum
.text:00000000000036AC                 mov     rdx, rax        ; format
.text:00000000000036AF                 xor     edi, edi        ; status
.text:00000000000036B1                 xor     eax, eax
.text:00000000000036B3                 call    _error
.text:00000000000036B8                 mov     r10, [rsp+0D8h+var_C0]
.text:00000000000036BD                 lea     eax, [rbx+1]
.text:00000000000036C0                 mov     byte ptr [r12], 0
.text:00000000000036C5                 mov     r12d, 5Ch ; '\'
.text:00000000000036CB                 nop     dword ptr [rax+rax+00h]
.text:00000000000036D0
.text:00000000000036D0 loc_36D0:                               ; CODE XREF: parse_str+DC↑j
.text:00000000000036D0                                         ; parse_str+52E↓j ...
.text:00000000000036D0                 mov     eax, eax
.text:00000000000036D2                 mov     [r13+0], r12b
.text:00000000000036D6                 mov     rbx, rax
.text:00000000000036D9                 movzx   eax, byte ptr [rbp+rax+0]
.text:00000000000036DE                 jmp     loc_32C0
.text:00000000000036E3 ; ---------------------------------------------------------------------------
.text:00000000000036E3
.text:00000000000036E3 loc_36E3:                               ; CODE XREF: parse_str+BB↑j
.text:00000000000036E3                 cmp     cl, 74h ; 't'
.text:00000000000036E6                 jz      loc_37C7
.text:00000000000036EC                 cmp     cl, 76h ; 'v'
.text:00000000000036EF                 jnz     loc_391D
.text:00000000000036F5                 mov     r12d, 0Bh
.text:00000000000036FB                 lea     eax, [rbx+2]
.text:00000000000036FE                 jmp     short loc_36D0
.text:0000000000003700 ; ---------------------------------------------------------------------------
.text:0000000000003700
.text:0000000000003700 loc_3700:                               ; CODE XREF: parse_str+4AB↑j
.text:0000000000003700                 cmp     cl, 5Ch ; '\'
.text:0000000000003703                 jz      loc_37B9
.text:0000000000003709                 cmp     cl, 61h ; 'a'
.text:000000000000370C                 jnz     loc_391D
.text:0000000000003712                 mov     r12d, 7
.text:0000000000003718                 lea     eax, [rbx+2]
.text:000000000000371B                 jmp     short loc_36D0
.text:000000000000371D ; ---------------------------------------------------------------------------
.text:000000000000371D
.text:000000000000371D loc_371D:                               ; CODE XREF: parse_str+231↑j
.text:000000000000371D                 cmp     dl, 30h ; '0'
.text:0000000000003720                 mov     rcx, [rsp+0D8h+var_A8]
.text:0000000000003725                 mov     rsi, [rsp+0D8h+var_A0]
.text:000000000000372A                 setnz   dl
.text:000000000000372D                 mov     rdi, r11        ; nptr
.text:0000000000003730                 xor     r8d, r8d
.text:0000000000003733                 movzx   edx, dl
.text:0000000000003736                 mov     [rsp+0D8h+s1], r11
.text:000000000000373B                 mov     byte ptr [rsp+0D8h+n], r9b
.text:0000000000003740                 lea     edx, [rdx+rdx+8]
.text:0000000000003744                 call    xstrtoumax
.text:0000000000003749                 test    eax, eax
.text:000000000000374B                 mov     r11, [rsp+0D8h+s1]
.text:0000000000003750                 jnz     short loc_376F
.text:0000000000003752                 cmp     [rsp+0D8h+var_68], 0FFFFFFFFFFFFFFFFh
.text:0000000000003758                 jz      short loc_376F
.text:000000000000375A                 lea     rax, [r11+rbp]
.text:000000000000375E                 cmp     [rsp+0D8h+var_60], rax
.text:0000000000003763                 movzx   r9d, byte ptr [rsp+0D8h+n]
.text:0000000000003769                 jz      loc_3410
.text:000000000000376F
.text:000000000000376F loc_376F:                               ; CODE XREF: parse_str+580↑j
.text:000000000000376F                                         ; parse_str+588↑j
.text:000000000000376F                 mov     rsi, rbp
.text:0000000000003772                 mov     rdi, r11
.text:0000000000003775                 call    make_printable_str
.text:000000000000377A                 mov     rdi, rax
.text:000000000000377D                 mov     rbx, rax
.text:0000000000003780                 call    quote
.text:0000000000003785                 lea     rsi, aInvalidRepeatC ; "invalid repeat count %s in [c*n] constr"...
.text:000000000000378C                 mov     rbp, rax
.text:000000000000378F                 mov     edx, 5          ; category
.text:0000000000003794
.text:0000000000003794 loc_3794:                               ; CODE XREF: parse_str+748↓j
.text:0000000000003794                 xor     edi, edi        ; domainname
.text:0000000000003796                 call    _dcgettext
.text:000000000000379B                 mov     rcx, rbp
.text:000000000000379E
.text:000000000000379E loc_379E:                               ; CODE XREF: parse_str+40D↑j
.text:000000000000379E                 mov     rdx, rax        ; format
.text:00000000000037A1                 xor     edi, edi        ; status
.text:00000000000037A3                 xor     esi, esi        ; errnum
.text:00000000000037A5                 xor     eax, eax
.text:00000000000037A7                 call    _error
.text:00000000000037AC                 mov     rdi, rbx        ; ptr
.text:00000000000037AF                 call    _free
.text:00000000000037B4                 jmp     loc_3635
.text:00000000000037B9 ; ---------------------------------------------------------------------------
.text:00000000000037B9
.text:00000000000037B9 loc_37B9:                               ; CODE XREF: parse_str+533↑j
.text:00000000000037B9                 mov     r12d, 5Ch ; '\'
.text:00000000000037BF                 lea     eax, [rbx+2]
.text:00000000000037C2                 jmp     loc_36D0
.text:00000000000037C7 ; ---------------------------------------------------------------------------
.text:00000000000037C7
.text:00000000000037C7 loc_37C7:                               ; CODE XREF: parse_str+516↑j
.text:00000000000037C7                 mov     r12d, 9
.text:00000000000037CD                 lea     eax, [rbx+2]
.text:00000000000037D0                 jmp     loc_36D0
.text:00000000000037D5 ; ---------------------------------------------------------------------------
.text:00000000000037D5
.text:00000000000037D5 loc_37D5:                               ; CODE XREF: parse_str+C4↑j
.text:00000000000037D5                 mov     r12d, 0Ch
.text:00000000000037DB                 lea     eax, [rbx+2]
.text:00000000000037DE                 jmp     loc_36D0
.text:00000000000037E3 ; ---------------------------------------------------------------------------
.text:00000000000037E3
.text:00000000000037E3 loc_37E3:                               ; CODE XREF: parse_str+4B4↑j
.text:00000000000037E3                 lea     edx, [rbx+2]
.text:00000000000037E6                 lea     r12d, [rcx-30h]
.text:00000000000037EA                 movsx   r8d, byte ptr [rbp+rdx+0]
.text:00000000000037F0                 mov     rax, rdx
.text:00000000000037F3                 lea     edx, [r8-30h]
.text:00000000000037F7                 cmp     edx, 7
.text:00000000000037FA                 ja      loc_36D0
.text:0000000000003800                 lea     eax, [rbx+3]
.text:0000000000003803                 lea     r12d, [rdx+r12*8]
.text:0000000000003807                 movsx   r9d, byte ptr [rbp+rax+0]
.text:000000000000380D                 lea     eax, [rbx+3]
.text:0000000000003810                 lea     edx, [r9-30h]
.text:0000000000003814                 cmp     edx, 7
.text:0000000000003817                 ja      loc_36D0
.text:000000000000381D                 movzx   eax, r12b
.text:0000000000003821                 lea     eax, [rdx+rax*8]
.text:0000000000003824                 cmp     eax, 0FFh
.text:0000000000003829                 jg      loc_39F7
.text:000000000000382F                 lea     r12d, [rdx+r12*8]
.text:0000000000003833                 lea     eax, [rbx+4]
.text:0000000000003836                 jmp     loc_36D0
.text:000000000000383B ; ---------------------------------------------------------------------------
.text:000000000000383B
.text:000000000000383B loc_383B:                               ; CODE XREF: parse_str+3A6↑j
.text:000000000000383B                 mov     [rsp+0D8h+var_70], rbx
.text:0000000000003840                 mov     [rsp+0D8h+var_78], rbp
.text:0000000000003845                 xor     r8d, r8d
.text:0000000000003848                 mov     rbx, [rsp+0D8h+n]
.text:000000000000384D                 mov     rbp, [rsp+0D8h+s1]
.text:0000000000003852                 mov     [rsp+0D8h+var_88], r12
.text:0000000000003857                 mov     [rsp+0D8h+var_98], r13
.text:000000000000385C                 mov     r12, r8
.text:000000000000385F                 mov     [rsp+0D8h+var_90], rcx
.text:0000000000003864                 mov     [rsp+0D8h+var_79], r9b
.text:0000000000003869                 nop     dword ptr [rax+00000000h]
.text:0000000000003870
.text:0000000000003870 loc_3870:                               ; CODE XREF: parse_str+6D6↓j
.text:0000000000003870                 lea     rax, char_class_name
.text:0000000000003877                 mov     rdx, rbx        ; n
.text:000000000000387A                 mov     rdi, rbp        ; s1
.text:000000000000387D                 mov     r13, [rax+r12*8]
.text:0000000000003881                 mov     rsi, r13        ; s2
.text:0000000000003884                 call    _strncmp
.text:0000000000003889                 test    eax, eax
.text:000000000000388B                 jnz     short loc_389E
.text:000000000000388D                 mov     rdi, r13        ; s
.text:0000000000003890                 call    _strlen
.text:0000000000003895                 cmp     rbx, rax
.text:0000000000003898                 jz      loc_3944
.text:000000000000389E
.text:000000000000389E loc_389E:                               ; CODE XREF: parse_str+6BB↑j
.text:000000000000389E                 add     r12, 1
.text:00000000000038A2                 cmp     r12, 0Ch
.text:00000000000038A6                 jnz     short loc_3870
.text:00000000000038A8                 mov     rcx, [rsp+0D8h+var_90]
.text:00000000000038AD                 movzx   r9d, [rsp+0D8h+var_79]
.text:00000000000038B3                 lea     rdi, [rsp+0D8h+var_58]
.text:00000000000038BB                 mov     r13, [rsp+0D8h+var_98]
.text:00000000000038C0                 mov     r12, [rsp+0D8h+var_88]
.text:00000000000038C5                 mov     rbp, [rsp+0D8h+var_78]
.text:00000000000038CA                 mov     rsi, rcx
.text:00000000000038CD                 mov     [rsp+0D8h+var_98], rcx
.text:00000000000038D2                 mov     byte ptr [rsp+0D8h+var_90], r9b
.text:00000000000038D7                 call    star_digits_closebracket
.text:00000000000038DC                 test    al, al
.text:00000000000038DE                 mov     rcx, [rsp+0D8h+var_98]
.text:00000000000038E3                 movzx   r9d, byte ptr [rsp+0D8h+var_90]
.text:00000000000038E9                 jnz     loc_3391
.text:00000000000038EF                 mov     rsi, [rsp+0D8h+n]
.text:00000000000038F4                 mov     rdi, [rsp+0D8h+s1]
.text:00000000000038F9                 call    make_printable_str
.text:00000000000038FE                 mov     rdi, rax
.text:0000000000003901                 mov     rbx, rax
.text:0000000000003904                 call    quote
.text:0000000000003909                 mov     edx, 5
.text:000000000000390E                 mov     rbp, rax
.text:0000000000003911                 lea     rsi, aInvalidCharact ; "invalid character class %s"
.text:0000000000003918                 jmp     loc_3794
.text:000000000000391D ; ---------------------------------------------------------------------------
.text:000000000000391D
.text:000000000000391D loc_391D:                               ; CODE XREF: parse_str+CD↑j
.text:000000000000391D                                         ; parse_str+4BC↑j ...
.text:000000000000391D                 mov     r12d, ecx
.text:0000000000003920                 lea     eax, [rbx+2]
.text:0000000000003923                 jmp     loc_36D0
.text:0000000000003928 ; ---------------------------------------------------------------------------
.text:0000000000003928
.text:0000000000003928 loc_3928:                               ; CODE XREF: parse_str+A6↑j
.text:0000000000003928                 mov     r12d, 8
.text:000000000000392E                 lea     eax, [rbx+2]
.text:0000000000003931                 jmp     loc_36D0
.text:0000000000003936 ; ---------------------------------------------------------------------------
.text:0000000000003936
.text:0000000000003936 loc_3936:                               ; CODE XREF: parse_str+B5↑j
.text:0000000000003936                 mov     r12d, 0Dh
.text:000000000000393C                 lea     eax, [rbx+2]
.text:000000000000393F                 jmp     loc_36D0
.text:0000000000003944 ; ---------------------------------------------------------------------------
.text:0000000000003944
.text:0000000000003944 loc_3944:                               ; CODE XREF: parse_str+6C8↑j
.text:0000000000003944                 mov     edi, 20h ; ' '
.text:0000000000003949                 mov     rbx, [rsp+0D8h+var_70]
.text:000000000000394E                 mov     [rsp+0D8h+var_C0], r12
.text:0000000000003953                 call    xmalloc
.text:0000000000003958                 mov     rdi, [rsp+0D8h+var_C8]
.text:000000000000395D                 mov     r8, [rsp+0D8h+var_C0]
.text:0000000000003962                 mov     qword ptr [rax+8], 0
.text:000000000000396A                 mov     dword ptr [rax], 2
.text:0000000000003970                 mov     rdx, [rdi+8]
.text:0000000000003974                 mov     [rax+10h], r8d
.text:0000000000003978                 test    rdx, rdx
.text:000000000000397B                 jz      loc_3AAD
.text:0000000000003981
.text:0000000000003981 loc_3981:                               ; CODE XREF: parse_str+7F6↓j
.text:0000000000003981                 mov     rdi, [rsp+0D8h+var_C8]
.text:0000000000003986                 mov     [rdx+8], rax
.text:000000000000398A                 lea     r13, [rbx+2]
.text:000000000000398E                 mov     [rdi+8], rax
.text:0000000000003992                 jmp     loc_3463
.text:0000000000003997 ; ---------------------------------------------------------------------------
.text:0000000000003997
.text:0000000000003997 loc_3997:                               ; CODE XREF: parse_str+3B2↑j
.text:0000000000003997                 mov     edi, 20h ; ' '
.text:000000000000399C                 call    xmalloc
.text:00000000000039A1                 mov     rdi, [rsp+0D8h+s1]
.text:00000000000039A6                 mov     qword ptr [rax+8], 0
.text:00000000000039AE                 mov     dword ptr [rax], 3
.text:00000000000039B4                 movzx   edx, byte ptr [rdi]
.text:00000000000039B7                 mov     rdi, [rsp+0D8h+var_C8]
.text:00000000000039BC                 mov     [rax+10h], dl
.text:00000000000039BF                 mov     rdx, [rdi+8]
.text:00000000000039C3                 test    rdx, rdx
.text:00000000000039C6                 jnz     short loc_3981
.text:00000000000039C8                 lea     rcx, __PRETTY_FUNCTION___7150 ; "append_equiv_class"
.text:00000000000039CF                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:00000000000039D6                 lea     rdi, assertion  ; "list->tail"
.text:00000000000039DD                 mov     edx, 2E5h       ; line
.text:00000000000039E2                 call    ___assert_fail
.text:00000000000039E7 ; ---------------------------------------------------------------------------
.text:00000000000039E7
.text:00000000000039E7 loc_39E7:                               ; CODE XREF: parse_str+6A↑j
.text:00000000000039E7                 xor     r15d, r15d
.text:00000000000039EA                 jmp     loc_32C4
.text:00000000000039EF ; ---------------------------------------------------------------------------
.text:00000000000039EF
.text:00000000000039EF loc_39EF:                               ; CODE XREF: parse_str+1FD↑j
.text:00000000000039EF                 mov     rbx, rax
.text:00000000000039F2                 jmp     loc_3407
.text:00000000000039F7 ; ---------------------------------------------------------------------------
.text:00000000000039F7
.text:00000000000039F7 loc_39F7:                               ; CODE XREF: parse_str+659↑j
.text:00000000000039F7                 lea     rsi, aWarningTheAmbi ; "warning: the ambiguous octal escape \\%"...
.text:00000000000039FE                 mov     edx, 5          ; category
.text:0000000000003A03                 xor     edi, edi        ; domainname
.text:0000000000003A05                 mov     byte ptr [rsp+0D8h+s1], cl
.text:0000000000003A09                 mov     [rsp+0D8h+var_A8], r10
.text:0000000000003A0E                 mov     dword ptr [rsp+0D8h+n], r9d
.text:0000000000003A13                 mov     dword ptr [rsp+0D8h+var_C0], r8d
.text:0000000000003A18                 call    _dcgettext
.text:0000000000003A1D                 movsx   ecx, byte ptr [rsp+0D8h+s1]
.text:0000000000003A22                 sub     rsp, 8
.text:0000000000003A26                 mov     rdx, rax        ; format
.text:0000000000003A29                 mov     r9d, dword ptr [rsp+0E0h+n]
.text:0000000000003A2E                 xor     eax, eax
.text:0000000000003A30                 xor     esi, esi        ; errnum
.text:0000000000003A32                 xor     edi, edi        ; status
.text:0000000000003A34                 push    r9
.text:0000000000003A36                 mov     r8d, dword ptr [rsp+0E8h+var_C0]
.text:0000000000003A3B                 push    r8
.text:0000000000003A3D                 push    rcx
.text:0000000000003A3E                 call    _error
.text:0000000000003A43                 add     rsp, 20h
.text:0000000000003A47                 lea     eax, [rbx+3]
.text:0000000000003A4A                 mov     r10, [rsp+0D8h+var_A8]
.text:0000000000003A4F                 jmp     loc_36D0
.text:0000000000003A54 ; ---------------------------------------------------------------------------
.text:0000000000003A54
.text:0000000000003A54 loc_3A54:                               ; CODE XREF: parse_str+39C↑j
.text:0000000000003A54                 cmp     sil, 3Ah ; ':'
.text:0000000000003A58                 mov     edx, 5          ; category
.text:0000000000003A5D                 jz      short loc_3A80
.text:0000000000003A5F                 lea     rsi, aMissingEquival ; "missing equivalence class character '[="...
.text:0000000000003A66
.text:0000000000003A66 loc_3A66:                               ; CODE XREF: parse_str+8B7↓j
.text:0000000000003A66                 xor     edi, edi        ; domainname
.text:0000000000003A68                 call    _dcgettext
.text:0000000000003A6D                 xor     esi, esi        ; errnum
.text:0000000000003A6F                 mov     rdx, rax        ; format
.text:0000000000003A72                 xor     edi, edi        ; status
.text:0000000000003A74                 xor     eax, eax
.text:0000000000003A76                 call    _error
.text:0000000000003A7B                 jmp     loc_3635
.text:0000000000003A80 ; ---------------------------------------------------------------------------
.text:0000000000003A80
.text:0000000000003A80 loc_3A80:                               ; CODE XREF: parse_str+88D↑j
.text:0000000000003A80                 lea     rsi, aMissingCharact ; "missing character class name '[::]'"
.text:0000000000003A87                 jmp     short loc_3A66
.text:0000000000003A89 ; ---------------------------------------------------------------------------
.text:0000000000003A89
.text:0000000000003A89 loc_3A89:                               ; CODE XREF: parse_str+2FE↑j
.text:0000000000003A89                 lea     rcx, __PRETTY_FUNCTION___7128 ; "append_range"
.text:0000000000003A90                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:0000000000003A97                 lea     rdi, assertion  ; "list->tail"
.text:0000000000003A9E                 mov     edx, 2A5h       ; line
.text:0000000000003AA3                 call    ___assert_fail
.text:0000000000003AA8 ; ---------------------------------------------------------------------------
.text:0000000000003AA8
.text:0000000000003AA8 loc_3AA8:                               ; CODE XREF: parse_str+48B↑j
.text:0000000000003AA8                 call    ___stack_chk_fail
.text:0000000000003AAD ; ---------------------------------------------------------------------------
.text:0000000000003AAD
.text:0000000000003AAD loc_3AAD:                               ; CODE XREF: parse_str+7AB↑j
.text:0000000000003AAD                 lea     rcx, __PRETTY_FUNCTION___7136 ; "append_char_class"
.text:0000000000003AB4                 lea     rsi, file       ; "../coreutils-8.31/src/tr.c"
.text:0000000000003ABB                 lea     rdi, assertion  ; "list->tail"
.text:0000000000003AC2                 mov     edx, 2BBh       ; line
.text:0000000000003AC7                 call    ___assert_fail
.text:0000000000003ACC ; ---------------------------------------------------------------------------
.text:0000000000003ACC
.text:0000000000003ACC loc_3ACC:                               ; CODE XREF: parse_str+27C↑j
.text:0000000000003ACC                 call    append_repeated_char_part_8
.text:0000000000003ACC ; } // starts at 31D0
.text:0000000000003ACC parse_str       endp
.text:0000000000003ACC
.text:0000000000003ACC ; ---------------------------------------------------------------------------
.text:0000000000003AD1                 align 20h
.text:0000000000003AE0
.text:0000000000003AE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000003AE0
.text:0000000000003AE0
.text:0000000000003AE0 set_initialize  proc near               ; CODE XREF: main+5E1↑p
.text:0000000000003AE0                                         ; main+5F2↑p ...
.text:0000000000003AE0 ; __unwind {
.text:0000000000003AE0                 push    r12
.text:0000000000003AE2                 mov     r12d, esi
.text:0000000000003AE5                 push    rbp
.text:0000000000003AE6                 mov     rbp, rdi
.text:0000000000003AE9                 push    rbx
.text:0000000000003AEA                 mov     rbx, rdx
.text:0000000000003AED                 mov     qword ptr [rdi+10h], 0FFFFFFFFFFFFFFFEh
.text:0000000000003AF5                 jmp     short loc_3B06
.text:0000000000003AF5 ; ---------------------------------------------------------------------------
.text:0000000000003AF7                 align 20h
.text:0000000000003B00
.text:0000000000003B00 loc_3B00:                               ; CODE XREF: set_initialize+33↓j
.text:0000000000003B00                 cdqe
.text:0000000000003B02                 mov     byte ptr [rbx+rax], 1
.text:0000000000003B06
.text:0000000000003B06 loc_3B06:                               ; CODE XREF: set_initialize+15↑j
.text:0000000000003B06                 xor     esi, esi
.text:0000000000003B08                 mov     rdi, rbp
.text:0000000000003B0B                 call    get_next
.text:0000000000003B10                 cmp     eax, 0FFFFFFFFh
.text:0000000000003B13                 jnz     short loc_3B00
.text:0000000000003B15                 test    r12b, r12b
.text:0000000000003B18                 jz      short loc_3B34
.text:0000000000003B1A                 lea     rax, [rbx+100h]
.text:0000000000003B21                 mov     rdx, rbx
.text:0000000000003B24                 nop     dword ptr [rax+00h]
.text:0000000000003B28
.text:0000000000003B28 loc_3B28:                               ; CODE XREF: set_initialize+52↓j
.text:0000000000003B28                 xor     byte ptr [rdx], 1
.text:0000000000003B2B                 add     rdx, 1
.text:0000000000003B2F                 cmp     rdx, rax
.text:0000000000003B32                 jnz     short loc_3B28
.text:0000000000003B34
.text:0000000000003B34 loc_3B34:                               ; CODE XREF: set_initialize+38↑j
.text:0000000000003B34                 pop     rbx
.text:0000000000003B35                 pop     rbp
.text:0000000000003B36                 pop     r12
.text:0000000000003B38                 retn
.text:0000000000003B38 ; } // starts at 3AE0
.text:0000000000003B38 set_initialize  endp
.text:0000000000003B38
.text:0000000000003B38 ; ---------------------------------------------------------------------------
.text:0000000000003B39                 align 20h
.text:0000000000003B40
.text:0000000000003B40 ; =============== S U B R O U T I N E =======================================
.text:0000000000003B40
.text:0000000000003B40
.text:0000000000003B40 squeeze_filter_constprop_14 proc near   ; CODE XREF: main+5FE↑p
.text:0000000000003B40                                         ; main+A3D↑p ...
.text:0000000000003B40
.text:0000000000003B40 var_40          = qword ptr -40h
.text:0000000000003B40
.text:0000000000003B40 ; __unwind {
.text:0000000000003B40                 push    r15
.text:0000000000003B42                 push    r14
.text:0000000000003B44                 lea     r14, in_squeeze_set
.text:0000000000003B4B                 push    r13
.text:0000000000003B4D                 push    r12
.text:0000000000003B4F                 mov     r13, rdi
.text:0000000000003B52                 push    rbp
.text:0000000000003B53                 push    rbx
.text:0000000000003B54                 lea     rbp, io_buf
.text:0000000000003B5B                 xor     r15d, r15d
.text:0000000000003B5E                 xor     ebx, ebx
.text:0000000000003B60                 mov     r12d, 7FFFFFFFh
.text:0000000000003B66                 sub     rsp, 18h
.text:0000000000003B6A
.text:0000000000003B6A loc_3B6A:                               ; CODE XREF: squeeze_filter_constprop_14+58↓j
.text:0000000000003B6A                                         ; squeeze_filter_constprop_14+187↓j ...
.text:0000000000003B6A                 cmp     rbx, r15
.text:0000000000003B6D                 jb      loc_3D00
.text:0000000000003B73
.text:0000000000003B73 loc_3B73:                               ; CODE XREF: squeeze_filter_constprop_14+B6↓j
.text:0000000000003B73                 mov     esi, 2000h
.text:0000000000003B78                 mov     rdi, rbp
.text:0000000000003B7B                 call    r13
.text:0000000000003B7E                 test    rax, rax
.text:0000000000003B81                 mov     r15, rax
.text:0000000000003B84                 jz      loc_3CE8
.text:0000000000003B8A                 xor     ebx, ebx
.text:0000000000003B8C                 cmp     r12d, 7FFFFFFFh
.text:0000000000003B93                 jz      short loc_3C00
.text:0000000000003B95
.text:0000000000003B95 loc_3B95:                               ; CODE XREF: squeeze_filter_constprop_14+121↓j
.text:0000000000003B95                                         ; squeeze_filter_constprop_14+14B↓j
.text:0000000000003B95                 cmp     rbx, r15
.text:0000000000003B98                 jnb     short loc_3B6A
.text:0000000000003B9A
.text:0000000000003B9A loc_3B9A:                               ; CODE XREF: squeeze_filter_constprop_14+1C7↓j
.text:0000000000003B9A                 movsx   eax, byte ptr [rbp+rbx+0]
.text:0000000000003B9F                 cmp     r12d, eax
.text:0000000000003BA2                 jz      loc_3CC0
.text:0000000000003BA8
.text:0000000000003BA8 loc_3BA8:                               ; CODE XREF: squeeze_filter_constprop_14+BC↓j
.text:0000000000003BA8                                         ; squeeze_filter_constprop_14+1CD↓j
.text:0000000000003BA8                 lea     rax, [rbp+rbx+0]
.text:0000000000003BAD                 mov     rdi, rbx
.text:0000000000003BB0                 mov     rbx, rdi
.text:0000000000003BB3                 movzx   eax, byte ptr [rax]
.text:0000000000003BB6                 cmp     byte ptr [r14+rax], 0
.text:0000000000003BBB                 jz      short loc_3C16
.text:0000000000003BBD                 nop     dword ptr [rax]
.text:0000000000003BC0
.text:0000000000003BC0 loc_3BC0:                               ; CODE XREF: squeeze_filter_constprop_14+D4↓j
.text:0000000000003BC0                                         ; squeeze_filter_constprop_14+1F7↓j
.text:0000000000003BC0                 cmp     rbx, r15
.text:0000000000003BC3                 jb      short loc_3C36
.text:0000000000003BC5
.text:0000000000003BC5 loc_3BC5:                               ; CODE XREF: squeeze_filter_constprop_14:loc_3D1A↓j
.text:0000000000003BC5                                         ; squeeze_filter_constprop_14+1EE↓j
.text:0000000000003BC5                 mov     r12, r15
.text:0000000000003BC8                 sub     r12, rdi
.text:0000000000003BCB                 jz      short loc_3BED
.text:0000000000003BCD                 mov     rcx, cs:stdout@@GLIBC_2_2_5 ; stream
.text:0000000000003BD4                 add     rdi, rbp        ; ptr
.text:0000000000003BD7                 mov     rdx, r12        ; n
.text:0000000000003BDA                 mov     esi, 1          ; size
.text:0000000000003BDF                 call    _fwrite_unlocked
.text:0000000000003BE4                 cmp     r12, rax
.text:0000000000003BE7                 jnz     loc_3C91
.text:0000000000003BED
.text:0000000000003BED loc_3BED:                               ; CODE XREF: squeeze_filter_constprop_14+8B↑j
.text:0000000000003BED                 cmp     r15, rbx
.text:0000000000003BF0                 mov     r12d, 7FFFFFFFh
.text:0000000000003BF6                 jbe     loc_3B73
.text:0000000000003BFC                 jmp     short loc_3BA8
.text:0000000000003BFC ; ---------------------------------------------------------------------------
.text:0000000000003BFE                 align 20h
.text:0000000000003C00
.text:0000000000003C00 loc_3C00:                               ; CODE XREF: squeeze_filter_constprop_14+53↑j
.text:0000000000003C00                 lea     rax, io_buf
.text:0000000000003C07                 xor     edi, edi
.text:0000000000003C09                 mov     rbx, rdi
.text:0000000000003C0C                 movzx   eax, byte ptr [rax]
.text:0000000000003C0F                 cmp     byte ptr [r14+rax], 0
.text:0000000000003C14                 jnz     short loc_3BC0
.text:0000000000003C16
.text:0000000000003C16 loc_3C16:                               ; CODE XREF: squeeze_filter_constprop_14+7B↑j
.text:0000000000003C16                 mov     rax, rdi
.text:0000000000003C19
.text:0000000000003C19 loc_3C19:                               ; CODE XREF: squeeze_filter_constprop_14+1D5↓j
.text:0000000000003C19                 lea     rbx, [rax+2]
.text:0000000000003C1D                 cmp     rbx, r15
.text:0000000000003C20                 jnb     loc_3D1A
.text:0000000000003C26                 movzx   eax, byte ptr [rbp+rax+2]
.text:0000000000003C2B                 cmp     byte ptr [r14+rax], 0
.text:0000000000003C30                 jz      loc_3D12
.text:0000000000003C36
.text:0000000000003C36 loc_3C36:                               ; CODE XREF: squeeze_filter_constprop_14+83↑j
.text:0000000000003C36                 mov     rax, rbx
.text:0000000000003C39                 movsx   r12d, byte ptr [rbp+rbx+0]
.text:0000000000003C3F                 sub     rax, rdi
.text:0000000000003C42                 test    rbx, rbx
.text:0000000000003C45                 lea     r9, [rax+1]
.text:0000000000003C49                 jz      short loc_3C5A
.text:0000000000003C4B                 lea     rcx, unk_20B3DF
.text:0000000000003C52                 cmp     r12b, [rbx+rcx]
.text:0000000000003C56                 cmovz   r9, rax
.text:0000000000003C5A
.text:0000000000003C5A loc_3C5A:                               ; CODE XREF: squeeze_filter_constprop_14+109↑j
.text:0000000000003C5A                 add     rbx, 1
.text:0000000000003C5E                 test    r9, r9
.text:0000000000003C61                 jz      loc_3B95
.text:0000000000003C67                 mov     rcx, cs:stdout@@GLIBC_2_2_5 ; stream
.text:0000000000003C6E                 add     rdi, rbp        ; ptr
.text:0000000000003C71                 mov     rdx, r9         ; n
.text:0000000000003C74                 mov     esi, 1          ; size
.text:0000000000003C79                 mov     [rsp+48h+var_40], r9
.text:0000000000003C7E                 call    _fwrite_unlocked
.text:0000000000003C83                 mov     r9, [rsp+48h+var_40]
.text:0000000000003C88                 cmp     rax, r9
.text:0000000000003C8B                 jz      loc_3B95
.text:0000000000003C91
.text:0000000000003C91 loc_3C91:                               ; CODE XREF: squeeze_filter_constprop_14+A7↑j
.text:0000000000003C91                 lea     rsi, aWriteError ; "write error"
.text:0000000000003C98                 mov     edx, 5          ; category
.text:0000000000003C9D                 xor     edi, edi        ; domainname
.text:0000000000003C9F                 call    _dcgettext
.text:0000000000003CA4                 mov     rbx, rax
.text:0000000000003CA7                 call    ___errno_location
.text:0000000000003CAC                 mov     esi, [rax]      ; errnum
.text:0000000000003CAE                 mov     rdx, rbx        ; format
.text:0000000000003CB1                 mov     edi, 1          ; status
.text:0000000000003CB6                 xor     eax, eax
.text:0000000000003CB8                 call    _error
.text:0000000000003CBD                 nop     dword ptr [rax]
.text:0000000000003CC0
.text:0000000000003CC0 loc_3CC0:                               ; CODE XREF: squeeze_filter_constprop_14+62↑j
.text:0000000000003CC0                                         ; squeeze_filter_constprop_14+195↓j
.text:0000000000003CC0                 add     rbx, 1
.text:0000000000003CC4                 cmp     rbx, r15
.text:0000000000003CC7                 jz      loc_3B6A
.text:0000000000003CCD                 movsx   eax, byte ptr [rbp+rbx+0]
.text:0000000000003CD2                 cmp     eax, r12d
.text:0000000000003CD5                 jz      short loc_3CC0
.text:0000000000003CD7                 mov     r12d, 7FFFFFFFh
.text:0000000000003CDD                 jmp     loc_3B6A
.text:0000000000003CDD ; ---------------------------------------------------------------------------
.text:0000000000003CE2                 align 8
.text:0000000000003CE8
.text:0000000000003CE8 loc_3CE8:                               ; CODE XREF: squeeze_filter_constprop_14+44↑j
.text:0000000000003CE8                 add     rsp, 18h
.text:0000000000003CEC                 pop     rbx
.text:0000000000003CED                 pop     rbp
.text:0000000000003CEE                 pop     r12
.text:0000000000003CF0                 pop     r13
.text:0000000000003CF2                 pop     r14
.text:0000000000003CF4                 pop     r15
.text:0000000000003CF6                 retn
.text:0000000000003CF6 ; ---------------------------------------------------------------------------
.text:0000000000003CF7                 align 20h
.text:0000000000003D00
.text:0000000000003D00 loc_3D00:                               ; CODE XREF: squeeze_filter_constprop_14+2D↑j
.text:0000000000003D00                 cmp     r12d, 7FFFFFFFh
.text:0000000000003D07                 jnz     loc_3B9A
.text:0000000000003D0D                 jmp     loc_3BA8
.text:0000000000003D12 ; ---------------------------------------------------------------------------
.text:0000000000003D12
.text:0000000000003D12 loc_3D12:                               ; CODE XREF: squeeze_filter_constprop_14+F0↑j
.text:0000000000003D12                 mov     rax, rbx
.text:0000000000003D15                 jmp     loc_3C19
.text:0000000000003D1A ; ---------------------------------------------------------------------------
.text:0000000000003D1A
.text:0000000000003D1A loc_3D1A:                               ; CODE XREF: squeeze_filter_constprop_14+E0↑j
.text:0000000000003D1A                 jnz     loc_3BC5
.text:0000000000003D20                 lea     rdx, [rax+1]
.text:0000000000003D24                 movzx   eax, byte ptr [rbp+rax+1]
.text:0000000000003D29                 cmp     byte ptr [r14+rax], 0
.text:0000000000003D2E                 jz      loc_3BC5
.text:0000000000003D34                 mov     rbx, rdx
.text:0000000000003D37                 jmp     loc_3BC0
.text:0000000000003D37 ; } // starts at 3B40
.text:0000000000003D37 squeeze_filter_constprop_14 endp
.text:0000000000003D37
.text:0000000000003D37 ; ---------------------------------------------------------------------------
.text:0000000000003D3C                 align 20h
.text:0000000000003D40
.text:0000000000003D40 ; =============== S U B R O U T I N E =======================================
.text:0000000000003D40
.text:0000000000003D40 ; Attributes: noreturn
.text:0000000000003D40
.text:0000000000003D40 ; void __fastcall __noreturn usage(int status)
.text:0000000000003D40                 public usage
.text:0000000000003D40 usage           proc near               ; CODE XREF: main+EC↑p
.text:0000000000003D40                                         ; main+B1C↑p
.text:0000000000003D40
.text:0000000000003D40 var_A8          = qword ptr -0A8h
.text:0000000000003D40 var_A0          = qword ptr -0A0h
.text:0000000000003D40 var_98          = qword ptr -98h
.text:0000000000003D40 var_90          = qword ptr -90h
.text:0000000000003D40 var_88          = qword ptr -88h
.text:0000000000003D40 var_80          = qword ptr -80h
.text:0000000000003D40 var_78          = qword ptr -78h
.text:0000000000003D40 var_70          = qword ptr -70h
.text:0000000000003D40 var_68          = qword ptr -68h
.text:0000000000003D40 var_60          = qword ptr -60h
.text:0000000000003D40 var_58          = qword ptr -58h
.text:0000000000003D40 var_50          = qword ptr -50h
.text:0000000000003D40 var_48          = qword ptr -48h
.text:0000000000003D40 var_40          = qword ptr -40h
.text:0000000000003D40 var_30          = qword ptr -30h
.text:0000000000003D40
.text:0000000000003D40 ; __unwind {
.text:0000000000003D40                 push    r13
.text:0000000000003D42                 push    r12
.text:0000000000003D44                 mov     edx, 5          ; category
.text:0000000000003D49                 push    rbp
.text:0000000000003D4A                 push    rbx
.text:0000000000003D4B                 mov     ebp, edi
.text:0000000000003D4D                 sub     rsp, 88h
.text:0000000000003D54                 mov     rbx, cs:program_name
.text:0000000000003D5B                 mov     rax, fs:28h
.text:0000000000003D64                 mov     [rsp+0A8h+var_30], rax
.text:0000000000003D69                 xor     eax, eax
.text:0000000000003D6B                 test    edi, edi
.text:0000000000003D6D                 jz      short loc_3D9D
.text:0000000000003D6F                 lea     rsi, aTrySHelpForMor ; "Try '%s --help' for more information.\n"
.text:0000000000003D76                 xor     edi, edi        ; domainname
.text:0000000000003D78                 call    _dcgettext
.text:0000000000003D7D                 mov     rdi, cs:stderr@@GLIBC_2_2_5
.text:0000000000003D84                 mov     rdx, rax
.text:0000000000003D87                 mov     rcx, rbx
.text:0000000000003D8A                 mov     esi, 1
.text:0000000000003D8F                 xor     eax, eax
.text:0000000000003D91                 call    ___fprintf_chk
.text:0000000000003D96
.text:0000000000003D96 loc_3D96:                               ; CODE XREF: usage+316↓j
.text:0000000000003D96                 mov     edi, ebp        ; status
.text:0000000000003D98                 call    _exit
.text:0000000000003D9D ; ---------------------------------------------------------------------------
.text:0000000000003D9D
.text:0000000000003D9D loc_3D9D:                               ; CODE XREF: usage+2D↑j
.text:0000000000003D9D                 lea     rsi, aUsageSOptionSe ; "Usage: %s [OPTION]... SET1 [SET2]\n"
.text:0000000000003DA4                 xor     edi, edi        ; domainname
.text:0000000000003DA6                 call    _dcgettext
.text:0000000000003DAB                 mov     rdx, rbx
.text:0000000000003DAE                 mov     rsi, rax
.text:0000000000003DB1                 mov     edi, 1
.text:0000000000003DB6                 xor     eax, eax
.text:0000000000003DB8                 call    ___printf_chk
.text:0000000000003DBD                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000003DC4                 lea     rsi, aTranslateSquee ; "Translate, squeeze, and/or delete chara"...
.text:0000000000003DCB                 mov     edx, 5          ; category
.text:0000000000003DD0                 xor     edi, edi        ; domainname
.text:0000000000003DD2                 call    _dcgettext
.text:0000000000003DD7                 mov     rsi, rbx        ; stream
.text:0000000000003DDA                 mov     rdi, rax        ; s
.text:0000000000003DDD                 call    _fputs_unlocked
.text:0000000000003DE2                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000003DE9                 lea     rsi, aHelpDisplayThi ; "      --help     display this help and "...
.text:0000000000003DF0                 mov     edx, 5          ; category
.text:0000000000003DF5                 xor     edi, edi        ; domainname
.text:0000000000003DF7                 call    _dcgettext
.text:0000000000003DFC                 mov     rsi, rbx        ; stream
.text:0000000000003DFF                 mov     rdi, rax        ; s
.text:0000000000003E02                 call    _fputs_unlocked
.text:0000000000003E07                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000003E0E                 lea     rsi, aVersionOutputV ; "      --version  output version informa"...
.text:0000000000003E15                 mov     edx, 5          ; category
.text:0000000000003E1A                 xor     edi, edi        ; domainname
.text:0000000000003E1C                 call    _dcgettext
.text:0000000000003E21                 mov     rsi, rbx        ; stream
.text:0000000000003E24                 mov     rdi, rax        ; s
.text:0000000000003E27                 call    _fputs_unlocked
.text:0000000000003E2C                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000003E33                 lea     rsi, aSetsAreSpecifi ; "\nSETs are specified as strings of char"...
.text:0000000000003E3A                 mov     edx, 5          ; category
.text:0000000000003E3F                 xor     edi, edi        ; domainname
.text:0000000000003E41                 call    _dcgettext
.text:0000000000003E46                 mov     rsi, rbx        ; stream
.text:0000000000003E49                 mov     rdi, rax        ; s
.text:0000000000003E4C                 call    _fputs_unlocked
.text:0000000000003E51                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000003E58                 lea     rsi, aVVerticalTabCh ; "  \\v              vertical tab\n  CHAR"...
.text:0000000000003E5F                 mov     edx, 5          ; category
.text:0000000000003E64                 xor     edi, edi        ; domainname
.text:0000000000003E66                 call    _dcgettext
.text:0000000000003E6B                 mov     rsi, rbx        ; stream
.text:0000000000003E6E                 mov     rdi, rax        ; s
.text:0000000000003E71                 call    _fputs_unlocked
.text:0000000000003E76                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000003E7D                 lea     rsi, aGraphAllPrinta ; "  [:graph:]       all printable charact"...
.text:0000000000003E84                 mov     edx, 5          ; category
.text:0000000000003E89                 xor     edi, edi        ; domainname
.text:0000000000003E8B                 call    _dcgettext
.text:0000000000003E90                 mov     rsi, rbx        ; stream
.text:0000000000003E93                 mov     rdi, rax        ; s
.text:0000000000003E96                 call    _fputs_unlocked
.text:0000000000003E9B                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:0000000000003EA2                 lea     rsi, aTranslationOcc ; "\nTranslation occurs if -d is not given"...
.text:0000000000003EA9                 mov     edx, 5          ; category
.text:0000000000003EAE                 xor     edi, edi        ; domainname
.text:0000000000003EB0                 call    _dcgettext
.text:0000000000003EB5                 mov     rsi, rbx        ; stream
.text:0000000000003EB8                 mov     rdi, rax        ; s
.text:0000000000003EBB                 lea     rbx, aTr        ; "tr"
.text:0000000000003EC2                 call    _fputs_unlocked
.text:0000000000003EC7                 lea     rax, asc_70A3   ; "["
.text:0000000000003ECE                 lea     rcx, aSha256sum ; "sha256sum"
.text:0000000000003ED5                 mov     [rsp+0A8h+var_48], 0
.text:0000000000003EDE                 mov     [rsp+0A8h+var_40], 0
.text:0000000000003EE7                 mov     rdx, rsp
.text:0000000000003EEA                 mov     [rsp+0A8h+var_A8], rax
.text:0000000000003EEE                 lea     rax, aTestInvocation ; "test invocation"
.text:0000000000003EF5                 mov     [rsp+0A8h+var_78], rcx
.text:0000000000003EFA                 lea     rcx, aSha384sum ; "sha384sum"
.text:0000000000003F01                 mov     [rsp+0A8h+var_A0], rax
.text:0000000000003F06                 lea     rax, domainname ; "coreutils"
.text:0000000000003F0D                 mov     [rsp+0A8h+var_68], rcx
.text:0000000000003F12                 lea     rcx, aSha512sum ; "sha512sum"
.text:0000000000003F19                 mov     [rsp+0A8h+var_98], rax
.text:0000000000003F1E                 lea     rax, aMultiCallInvoc ; "Multi-call invocation"
.text:0000000000003F25                 mov     [rsp+0A8h+var_58], rcx
.text:0000000000003F2A                 mov     [rsp+0A8h+var_90], rax
.text:0000000000003F2F                 lea     rax, aSha224sum ; "sha224sum"
.text:0000000000003F36                 mov     [rsp+0A8h+var_88], rax
.text:0000000000003F3B                 lea     rax, aSha2Utilities ; "sha2 utilities"
.text:0000000000003F42                 mov     [rsp+0A8h+var_80], rax
.text:0000000000003F47                 mov     [rsp+0A8h+var_70], rax
.text:0000000000003F4C                 mov     [rsp+0A8h+var_60], rax
.text:0000000000003F51                 mov     [rsp+0A8h+var_50], rax
.text:0000000000003F56                 db      2Eh
.text:0000000000003F56                 nop     word ptr [rax+rax+00000000h]
.text:0000000000003F60
.text:0000000000003F60 loc_3F60:                               ; CODE XREF: usage+23D↓j
.text:0000000000003F60                 add     rdx, 10h
.text:0000000000003F64                 mov     rdi, [rdx]
.text:0000000000003F67                 test    rdi, rdi
.text:0000000000003F6A                 jz      short loc_3F7F
.text:0000000000003F6C                 mov     ecx, 3
.text:0000000000003F71                 mov     rsi, rbx
.text:0000000000003F74                 repe cmpsb
.text:0000000000003F76                 setnbe  al
.text:0000000000003F79                 sbb     al, 0
.text:0000000000003F7B                 test    al, al
.text:0000000000003F7D                 jnz     short loc_3F60
.text:0000000000003F7F
.text:0000000000003F7F loc_3F7F:                               ; CODE XREF: usage+22A↑j
.text:0000000000003F7F                 mov     r12, [rdx+8]
.text:0000000000003F83                 xor     edi, edi        ; domainname
.text:0000000000003F85                 mov     edx, 5          ; category
.text:0000000000003F8A                 lea     rsi, aSOnlineHelpS ; "\n%s online help: <%s>\n"
.text:0000000000003F91                 test    r12, r12
.text:0000000000003F94                 jz      loc_405B
.text:0000000000003F9A                 call    _dcgettext
.text:0000000000003F9F                 lea     rcx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:0000000000003FA6                 lea     rdx, unk_7119
.text:0000000000003FAD                 mov     rsi, rax
.text:0000000000003FB0                 mov     edi, 1
.text:0000000000003FB5                 xor     eax, eax
.text:0000000000003FB7                 call    ___printf_chk
.text:0000000000003FBC                 xor     esi, esi        ; locale
.text:0000000000003FBE                 mov     edi, 5          ; category
.text:0000000000003FC3                 call    _setlocale
.text:0000000000003FC8                 test    rax, rax
.text:0000000000003FCB                 jz      short loc_3FE9
.text:0000000000003FCD                 lea     rsi, s2         ; "en_"
.text:0000000000003FD4                 mov     edx, 3          ; n
.text:0000000000003FD9                 mov     rdi, rax        ; s1
.text:0000000000003FDC                 call    _strncmp
.text:0000000000003FE1                 test    eax, eax
.text:0000000000003FE3                 jnz     loc_40F0
.text:0000000000003FE9
.text:0000000000003FE9 loc_3FE9:                               ; CODE XREF: usage+28B↑j
.text:0000000000003FE9                                         ; usage+3D5↓j
.text:0000000000003FE9                 lea     rsi, aFullDocumentat ; "Full documentation <%s%s>\n"
.text:0000000000003FF0                 xor     edi, edi        ; domainname
.text:0000000000003FF2                 mov     edx, 5          ; category
.text:0000000000003FF7                 call    _dcgettext
.text:0000000000003FFC                 lea     rcx, aTr        ; "tr"
.text:0000000000004003                 lea     rdx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:000000000000400A                 mov     rsi, rax
.text:000000000000400D                 mov     edi, 1
.text:0000000000004012                 xor     eax, eax
.text:0000000000004014                 call    ___printf_chk
.text:0000000000004019                 cmp     r12, rbx
.text:000000000000401C                 lea     rcx, aMultiCallInvoc+0Ah ; " invocation"
.text:0000000000004023                 lea     rbx, aWrittenBySSAnd+1Bh ; ""
.text:000000000000402A                 cmovz   rbx, rcx
.text:000000000000402E
.text:000000000000402E loc_402E:                               ; CODE XREF: usage+3A4↓j
.text:000000000000402E                 lea     rsi, aOrAvailableLoc ; "or available locally via: info '(coreut"...
.text:0000000000004035                 xor     edi, edi        ; domainname
.text:0000000000004037                 mov     edx, 5          ; category
.text:000000000000403C                 call    _dcgettext
.text:0000000000004041                 mov     rcx, rbx
.text:0000000000004044                 mov     rsi, rax
.text:0000000000004047                 mov     rdx, r12
.text:000000000000404A                 mov     edi, 1
.text:000000000000404F                 xor     eax, eax
.text:0000000000004051                 call    ___printf_chk
.text:0000000000004056                 jmp     loc_3D96
.text:000000000000405B ; ---------------------------------------------------------------------------
.text:000000000000405B
.text:000000000000405B loc_405B:                               ; CODE XREF: usage+254↑j
.text:000000000000405B                 call    _dcgettext
.text:0000000000004060                 lea     rcx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:0000000000004067                 lea     rdx, unk_7119
.text:000000000000406E                 mov     rsi, rax
.text:0000000000004071                 mov     edi, 1
.text:0000000000004076                 xor     eax, eax
.text:0000000000004078                 call    ___printf_chk
.text:000000000000407D                 xor     esi, esi        ; locale
.text:000000000000407F                 mov     edi, 5          ; category
.text:0000000000004084                 call    _setlocale
.text:0000000000004089                 test    rax, rax
.text:000000000000408C                 jz      short loc_40A6
.text:000000000000408E                 lea     rsi, s2         ; "en_"
.text:0000000000004095                 mov     edx, 3          ; n
.text:000000000000409A                 mov     rdi, rax        ; s1
.text:000000000000409D                 call    _strncmp
.text:00000000000040A2                 test    eax, eax
.text:00000000000040A4                 jnz     short loc_40E9
.text:00000000000040A6
.text:00000000000040A6 loc_40A6:                               ; CODE XREF: usage+34C↑j
.text:00000000000040A6                 lea     rsi, aFullDocumentat ; "Full documentation <%s%s>\n"
.text:00000000000040AD                 mov     edx, 5          ; category
.text:00000000000040B2                 xor     edi, edi        ; domainname
.text:00000000000040B4                 lea     r12, aTr        ; "tr"
.text:00000000000040BB                 lea     rbx, aMultiCallInvoc+0Ah ; " invocation"
.text:00000000000040C2                 call    _dcgettext
.text:00000000000040C7                 lea     rcx, aTr        ; "tr"
.text:00000000000040CE                 lea     rdx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:00000000000040D5                 mov     rsi, rax
.text:00000000000040D8                 mov     edi, 1
.text:00000000000040DD                 xor     eax, eax
.text:00000000000040DF                 call    ___printf_chk
.text:00000000000040E4                 jmp     loc_402E
.text:00000000000040E9 ; ---------------------------------------------------------------------------
.text:00000000000040E9
.text:00000000000040E9 loc_40E9:                               ; CODE XREF: usage+364↑j
.text:00000000000040E9                 lea     r12, aTr        ; "tr"
.text:00000000000040F0
.text:00000000000040F0 loc_40F0:                               ; CODE XREF: usage+2A3↑j
.text:00000000000040F0                 mov     r13, cs:stdout@@GLIBC_2_2_5
.text:00000000000040F7                 lea     rsi, aReportAnyTrans ; "Report any translation bugs to <https:/"...
.text:00000000000040FE                 xor     edi, edi        ; domainname
.text:0000000000004100                 mov     edx, 5          ; category
.text:0000000000004105                 call    _dcgettext
.text:000000000000410A                 mov     rsi, r13        ; stream
.text:000000000000410D                 mov     rdi, rax        ; s
.text:0000000000004110                 call    _fputs_unlocked
.text:0000000000004115                 jmp     loc_3FE9
.text:0000000000004115 ; } // starts at 3D40
.text:0000000000004115 usage           endp
.text:0000000000004115
.text:0000000000004115 ; ---------------------------------------------------------------------------
.text:000000000000411A                 align 20h
.text:0000000000004120
.text:0000000000004120 ; =============== S U B R O U T I N E =======================================
.text:0000000000004120
.text:0000000000004120
.text:0000000000004120                 public close_stdout_set_file_name
.text:0000000000004120 close_stdout_set_file_name proc near
.text:0000000000004120 ; __unwind {
.text:0000000000004120                 mov     cs:file_name, rdi
.text:0000000000004127                 retn
.text:0000000000004127 ; } // starts at 4120
.text:0000000000004127 close_stdout_set_file_name endp
.text:0000000000004127
.text:0000000000004127 ; ---------------------------------------------------------------------------
.text:0000000000004128                 align 10h
.text:0000000000004130
.text:0000000000004130 ; =============== S U B R O U T I N E =======================================
.text:0000000000004130
.text:0000000000004130
.text:0000000000004130                 public close_stdout_set_ignore_EPIPE
.text:0000000000004130 close_stdout_set_ignore_EPIPE proc near
.text:0000000000004130 ; __unwind {
.text:0000000000004130                 mov     cs:ignore_EPIPE, dil
.text:0000000000004137                 retn
.text:0000000000004137 ; } // starts at 4130
.text:0000000000004137 close_stdout_set_ignore_EPIPE endp
.text:0000000000004137
.text:0000000000004137 ; ---------------------------------------------------------------------------
.text:0000000000004138                 align 20h
.text:0000000000004140
.text:0000000000004140 ; =============== S U B R O U T I N E =======================================
.text:0000000000004140
.text:0000000000004140 ; Attributes: info_from_lumina
.text:0000000000004140
.text:0000000000004140 ; void __cdecl close_stdout()
.text:0000000000004140                 public close_stdout
.text:0000000000004140 close_stdout    proc near               ; DATA XREF: main+69↑o
.text:0000000000004140 ; __unwind {
.text:0000000000004140                 push    rbp
.text:0000000000004141                 push    rbx
.text:0000000000004142                 sub     rsp, 8
.text:0000000000004146                 mov     rdi, cs:stdout@@GLIBC_2_2_5 ; stream
.text:000000000000414D                 call    close_stream
.text:0000000000004152                 test    eax, eax
.text:0000000000004154                 jz      short loc_416C
.text:0000000000004156                 call    ___errno_location
.text:000000000000415B                 cmp     cs:ignore_EPIPE, 0
.text:0000000000004162                 mov     rbx, rax
.text:0000000000004165                 jz      short loc_4183
.text:0000000000004167                 cmp     dword ptr [rax], 20h ; ' '
.text:000000000000416A                 jnz     short loc_4183
.text:000000000000416C
.text:000000000000416C loc_416C:                               ; CODE XREF: close_stdout+14↑j
.text:000000000000416C                 mov     rdi, cs:stderr@@GLIBC_2_2_5 ; stream
.text:0000000000004173                 call    close_stream
.text:0000000000004178                 test    eax, eax
.text:000000000000417A                 jnz     short loc_41C2
.text:000000000000417C                 add     rsp, 8
.text:0000000000004180                 pop     rbx
.text:0000000000004181                 pop     rbp
.text:0000000000004182                 retn
.text:0000000000004183 ; ---------------------------------------------------------------------------
.text:0000000000004183
.text:0000000000004183 loc_4183:                               ; CODE XREF: close_stdout+25↑j
.text:0000000000004183                                         ; close_stdout+2A↑j
.text:0000000000004183                 lea     rsi, aWriteError ; "write error"
.text:000000000000418A                 xor     edi, edi        ; domainname
.text:000000000000418C                 mov     edx, 5          ; category
.text:0000000000004191                 call    _dcgettext
.text:0000000000004196                 mov     rdi, cs:file_name
.text:000000000000419D                 mov     rbp, rax
.text:00000000000041A0                 test    rdi, rdi
.text:00000000000041A3                 jz      short loc_41CD
.text:00000000000041A5                 call    quotearg_colon
.text:00000000000041AA                 mov     esi, [rbx]      ; errnum
.text:00000000000041AC                 lea     rdx, format     ; "%s: %s"
.text:00000000000041B3                 mov     rcx, rax
.text:00000000000041B6                 mov     r8, rbp
.text:00000000000041B9                 xor     edi, edi        ; status
.text:00000000000041BB                 xor     eax, eax
.text:00000000000041BD                 call    _error
.text:00000000000041C2
.text:00000000000041C2 loc_41C2:                               ; CODE XREF: close_stdout+3A↑j
.text:00000000000041C2                                         ; close_stdout+A2↓j
.text:00000000000041C2                 mov     edi, cs:exit_failure ; status
.text:00000000000041C8                 call    __exit
.text:00000000000041CD ; ---------------------------------------------------------------------------
.text:00000000000041CD
.text:00000000000041CD loc_41CD:                               ; CODE XREF: close_stdout+63↑j
.text:00000000000041CD                 mov     esi, [rbx]      ; errnum
.text:00000000000041CF                 lea     rdx, format+4   ; format
.text:00000000000041D6                 mov     rcx, rax
.text:00000000000041D9                 xor     edi, edi        ; status
.text:00000000000041DB                 xor     eax, eax
.text:00000000000041DD                 call    _error
.text:00000000000041E2                 jmp     short loc_41C2
.text:00000000000041E2 ; } // starts at 4140
.text:00000000000041E2 close_stdout    endp
.text:00000000000041E2
.text:00000000000041E2 ; ---------------------------------------------------------------------------
.text:00000000000041E4                 align 10h
.text:00000000000041F0
.text:00000000000041F0 ; =============== S U B R O U T I N E =======================================
.text:00000000000041F0
.text:00000000000041F0
.text:00000000000041F0 ; int fdadvise(int fd, off_t offset, off_t len, int advise)
.text:00000000000041F0                 public fdadvise
.text:00000000000041F0 fdadvise        proc near
.text:00000000000041F0 ; __unwind {
.text:00000000000041F0                 jmp     _posix_fadvise
.text:00000000000041F0 ; } // starts at 41F0
.text:00000000000041F0 fdadvise        endp
.text:00000000000041F0
.text:00000000000041F0 ; ---------------------------------------------------------------------------
.text:00000000000041F5                 align 20h
.text:0000000000004200
.text:0000000000004200 ; =============== S U B R O U T I N E =======================================
.text:0000000000004200
.text:0000000000004200
.text:0000000000004200                 public fadvise
.text:0000000000004200 fadvise         proc near               ; CODE XREF: main+59D↑p
.text:0000000000004200 ; __unwind {
.text:0000000000004200                 test    rdi, rdi
.text:0000000000004203                 jz      short locret_4220
.text:0000000000004205                 push    rbx
.text:0000000000004206                 mov     ebx, esi
.text:0000000000004208                 call    _fileno
.text:000000000000420D                 mov     ecx, ebx        ; advise
.text:000000000000420F                 xor     edx, edx        ; len
.text:0000000000004211                 xor     esi, esi        ; offset
.text:0000000000004213                 pop     rbx
.text:0000000000004214                 mov     edi, eax        ; fd
.text:0000000000004216                 jmp     _posix_fadvise
.text:0000000000004216 ; ---------------------------------------------------------------------------
.text:000000000000421B                 align 20h
.text:0000000000004220
.text:0000000000004220 locret_4220:                            ; CODE XREF: fadvise+3↑j
.text:0000000000004220                 rep retn
.text:0000000000004220 ; } // starts at 4200
.text:0000000000004220 fadvise         endp
.text:0000000000004220
.text:0000000000004220 ; ---------------------------------------------------------------------------
.text:0000000000004222                 align 10h
.text:0000000000004230
.text:0000000000004230 ; =============== S U B R O U T I N E =======================================
.text:0000000000004230
.text:0000000000004230
.text:0000000000004230                 public set_program_name
.text:0000000000004230 set_program_name proc near              ; CODE XREF: main+34↑p
.text:0000000000004230 ; __unwind {
.text:0000000000004230                 test    rdi, rdi
.text:0000000000004233                 push    rbx
.text:0000000000004234                 jz      short loc_42AD
.text:0000000000004236                 mov     esi, 2Fh ; '/'  ; c
.text:000000000000423B                 mov     rbx, rdi
.text:000000000000423E                 call    _strrchr
.text:0000000000004243                 test    rax, rax
.text:0000000000004246                 jz      short loc_429D
.text:0000000000004248                 lea     r8, [rax+1]
.text:000000000000424C                 mov     rdx, r8
.text:000000000000424F                 sub     rdx, rbx
.text:0000000000004252                 cmp     rdx, 6
.text:0000000000004256                 jle     short loc_429D
.text:0000000000004258                 lea     rsi, [rax-6]
.text:000000000000425C                 lea     rdi, aLibs      ; "/.libs/"
.text:0000000000004263                 mov     ecx, 7
.text:0000000000004268                 repe cmpsb
.text:000000000000426A                 setnbe  dl
.text:000000000000426D                 sbb     dl, 0
.text:0000000000004270                 test    dl, dl
.text:0000000000004272                 jnz     short loc_429D
.text:0000000000004274                 lea     rdi, aLt        ; "lt-"
.text:000000000000427B                 mov     ecx, 3
.text:0000000000004280                 mov     rsi, r8
.text:0000000000004283                 mov     rbx, r8
.text:0000000000004286                 repe cmpsb
.text:0000000000004288                 setnbe  dl
.text:000000000000428B                 sbb     dl, 0
.text:000000000000428E                 test    dl, dl
.text:0000000000004290                 jnz     short loc_429D
.text:0000000000004292                 lea     rbx, [rax+4]
.text:0000000000004296                 mov     cs:__bss_start, rbx
.text:000000000000429D
.text:000000000000429D loc_429D:                               ; CODE XREF: set_program_name+16↑j
.text:000000000000429D                                         ; set_program_name+26↑j ...
.text:000000000000429D                 mov     cs:program_name, rbx
.text:00000000000042A4                 mov     cs:program_invocation_name@@GLIBC_2_2_5, rbx
.text:00000000000042AB                 pop     rbx
.text:00000000000042AC                 retn
.text:00000000000042AD ; ---------------------------------------------------------------------------
.text:00000000000042AD
.text:00000000000042AD loc_42AD:                               ; CODE XREF: set_program_name+4↑j
.text:00000000000042AD                 mov     rcx, cs:stderr@@GLIBC_2_2_5 ; s
.text:00000000000042B4                 lea     rdi, aANullArgv0WasP ; "A NULL argv[0] was passed through an ex"...
.text:00000000000042BB                 mov     edx, 37h ; '7'  ; n
.text:00000000000042C0                 mov     esi, 1          ; size
.text:00000000000042C5                 call    _fwrite
.text:00000000000042CA                 call    _abort
.text:00000000000042CA ; } // starts at 4230
.text:00000000000042CA set_program_name endp
.text:00000000000042CA
.text:00000000000042CA ; ---------------------------------------------------------------------------
.text:00000000000042CF                 align 10h
.text:00000000000042D0
.text:00000000000042D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000042D0
.text:00000000000042D0 ; Attributes: info_from_lumina
.text:00000000000042D0
.text:00000000000042D0 ; const char *__fastcall gettext_quote(const char *msgid, quoting_style s)
.text:00000000000042D0 gettext_quote   proc near               ; CODE XREF: quotearg_buffer_restyled+1165↓p
.text:00000000000042D0                                         ; quotearg_buffer_restyled+117B↓p
.text:00000000000042D0 ; __unwind {
.text:00000000000042D0                 push    rbp
.text:00000000000042D1                 push    rbx
.text:00000000000042D2                 mov     rbp, rdi
.text:00000000000042D5                 mov     ebx, esi
.text:00000000000042D7                 sub     rsp, 8
.text:00000000000042DB                 call    locale_charset
.text:00000000000042E0                 movzx   edx, byte ptr [rax]
.text:00000000000042E3                 and     edx, 0FFFFFFDFh
.text:00000000000042E6                 cmp     dl, 55h ; 'U'
.text:00000000000042E9                 jz      short loc_4360
.text:00000000000042EB                 cmp     dl, 47h ; 'G'
.text:00000000000042EE                 jz      short loc_4310
.text:00000000000042F0
.text:00000000000042F0 loc_42F0:                               ; CODE XREF: gettext_quote+4A↓j
.text:00000000000042F0                                         ; gettext_quote+50↓j ...
.text:00000000000042F0                 lea     rax, unk_83B3
.text:00000000000042F7                 lea     rdx, asc_83B5   ; "'"
.text:00000000000042FE                 cmp     ebx, 9
.text:0000000000004301                 cmovnz  rax, rdx
.text:0000000000004305                 add     rsp, 8
.text:0000000000004309                 pop     rbx
.text:000000000000430A                 pop     rbp
.text:000000000000430B                 retn
.text:000000000000430B ; ---------------------------------------------------------------------------
.text:000000000000430C                 align 10h
.text:0000000000004310
.text:0000000000004310 loc_4310:                               ; CODE XREF: gettext_quote+1E↑j
.text:0000000000004310                 movzx   edx, byte ptr [rax+1]
.text:0000000000004314                 and     edx, 0FFFFFFDFh
.text:0000000000004317                 cmp     dl, 42h ; 'B'
.text:000000000000431A                 jnz     short loc_42F0
.text:000000000000431C                 cmp     byte ptr [rax+2], 31h ; '1'
.text:0000000000004320                 jnz     short loc_42F0
.text:0000000000004322                 cmp     byte ptr [rax+3], 38h ; '8'
.text:0000000000004326                 jnz     short loc_42F0
.text:0000000000004328                 cmp     byte ptr [rax+4], 30h ; '0'
.text:000000000000432C                 jnz     short loc_42F0
.text:000000000000432E                 cmp     byte ptr [rax+5], 33h ; '3'
.text:0000000000004332                 jnz     short loc_42F0
.text:0000000000004334                 cmp     byte ptr [rax+6], 30h ; '0'
.text:0000000000004338                 jnz     short loc_42F0
.text:000000000000433A                 cmp     byte ptr [rax+7], 0
.text:000000000000433E                 jnz     short loc_42F0
.text:0000000000004340                 cmp     byte ptr [rbp+0], 60h ; '`'
.text:0000000000004344                 lea     rax, unk_83AC
.text:000000000000434B                 lea     rdx, unk_83B0
.text:0000000000004352                 cmovnz  rax, rdx
.text:0000000000004356                 add     rsp, 8
.text:000000000000435A                 pop     rbx
.text:000000000000435B                 pop     rbp
.text:000000000000435C                 retn
.text:000000000000435C ; ---------------------------------------------------------------------------
.text:000000000000435D                 align 20h
.text:0000000000004360
.text:0000000000004360 loc_4360:                               ; CODE XREF: gettext_quote+19↑j
.text:0000000000004360                 movzx   edx, byte ptr [rax+1]
.text:0000000000004364                 and     edx, 0FFFFFFDFh
.text:0000000000004367                 cmp     dl, 54h ; 'T'
.text:000000000000436A                 jnz     short loc_42F0
.text:000000000000436C                 movzx   edx, byte ptr [rax+2]
.text:0000000000004370                 and     edx, 0FFFFFFDFh
.text:0000000000004373                 cmp     dl, 46h ; 'F'
.text:0000000000004376                 jnz     loc_42F0
.text:000000000000437C                 cmp     byte ptr [rax+3], 2Dh ; '-'
.text:0000000000004380                 jnz     loc_42F0
.text:0000000000004386                 cmp     byte ptr [rax+4], 38h ; '8'
.text:000000000000438A                 jnz     loc_42F0
.text:0000000000004390                 cmp     byte ptr [rax+5], 0
.text:0000000000004394                 jnz     loc_42F0
.text:000000000000439A                 cmp     byte ptr [rbp+0], 60h ; '`'
.text:000000000000439E                 lea     rax, unk_83A4
.text:00000000000043A5                 lea     rdx, unk_83A8
.text:00000000000043AC                 cmovnz  rax, rdx
.text:00000000000043B0                 add     rsp, 8
.text:00000000000043B4                 pop     rbx
.text:00000000000043B5                 pop     rbp
.text:00000000000043B6                 retn
.text:00000000000043B6 ; } // starts at 42D0
.text:00000000000043B6 gettext_quote   endp
.text:00000000000043B6
.text:00000000000043B6 ; ---------------------------------------------------------------------------
.text:00000000000043B7                 align 20h
.text:00000000000043C0
.text:00000000000043C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000043C0
.text:00000000000043C0 ; Attributes: info_from_lumina
.text:00000000000043C0
.text:00000000000043C0 ; size_t __fastcall quotearg_buffer_restyled(char *buffer, size_t buffersize, const char *arg, size_t argsize, quoting_style quoting_style, int flags, const unsigned int *quote_these_too, const char *left_quote, const char *right_quote)
.text:00000000000043C0 quotearg_buffer_restyled proc near      ; CODE XREF: quotearg_buffer_restyled+BCD↓p
.text:00000000000043C0                                         ; quotearg_buffer_restyled+11CB↓p ...
.text:00000000000043C0
.text:00000000000043C0 var_E0          = dword ptr -0E0h
.text:00000000000043C0 var_DB          = byte ptr -0DBh
.text:00000000000043C0 var_DA          = byte ptr -0DAh
.text:00000000000043C0 var_D9          = byte ptr -0D9h
.text:00000000000043C0 s               = qword ptr -0D8h
.text:00000000000043C0 n               = qword ptr -0D0h
.text:00000000000043C0 var_C8          = qword ptr -0C8h
.text:00000000000043C0 ps              = qword ptr -0C0h
.text:00000000000043C0 var_B8          = qword ptr -0B8h
.text:00000000000043C0 var_B0          = qword ptr -0B0h
.text:00000000000043C0 var_A8          = qword ptr -0A8h
.text:00000000000043C0 s2              = qword ptr -0A0h
.text:00000000000043C0 var_98          = qword ptr -98h
.text:00000000000043C0 var_90          = qword ptr -90h
.text:00000000000043C0 var_88          = qword ptr -88h
.text:00000000000043C0 var_80          = qword ptr -80h
.text:00000000000043C0 var_78          = qword ptr -78h
.text:00000000000043C0 var_70          = dword ptr -70h
.text:00000000000043C0 var_6C          = byte ptr -6Ch
.text:00000000000043C0 var_6B          = byte ptr -6Bh
.text:00000000000043C0 var_6A          = byte ptr -6Ah
.text:00000000000043C0 var_69          = byte ptr -69h
.text:00000000000043C0 var_68          = qword ptr -68h
.text:00000000000043C0 var_60          = qword ptr -60h
.text:00000000000043C0 wc              = dword ptr -4Ch
.text:00000000000043C0 var_48          = qword ptr -48h
.text:00000000000043C0 var_40          = qword ptr -40h
.text:00000000000043C0 arg_0           = qword ptr  8
.text:00000000000043C0 arg_8           = qword ptr  10h
.text:00000000000043C0 arg_10          = qword ptr  18h
.text:00000000000043C0
.text:00000000000043C0 ; __unwind {
.text:00000000000043C0                 push    r15
.text:00000000000043C2                 push    r14
.text:00000000000043C4                 mov     r15d, r8d
.text:00000000000043C7                 push    r13
.text:00000000000043C9                 push    r12
.text:00000000000043CB                 mov     r14, rdi
.text:00000000000043CE                 push    rbp
.text:00000000000043CF                 push    rbx
.text:00000000000043D0                 mov     ebx, r9d
.text:00000000000043D3                 mov     r13, rsi
.text:00000000000043D6                 mov     rbp, rcx
.text:00000000000043D9                 and     ebx, 2
.text:00000000000043DC                 sub     rsp, 0B8h
.text:00000000000043E3                 mov     rax, [rsp+0E8h+arg_0]
.text:00000000000043EB                 mov     [rsp+0E8h+s], rdx
.text:00000000000043F0                 mov     [rsp+0E8h+var_E0], r8d
.text:00000000000043F5                 mov     [rsp+0E8h+var_70], r9d
.text:00000000000043FA                 mov     [rsp+0E8h+var_C8], rax
.text:00000000000043FF                 mov     rax, [rsp+0E8h+arg_8]
.text:0000000000004407                 mov     [rsp+0E8h+var_80], rax
.text:000000000000440C                 mov     rax, [rsp+0E8h+arg_10]
.text:0000000000004414                 mov     [rsp+0E8h+var_88], rax
.text:0000000000004419                 mov     rax, fs:28h
.text:0000000000004422                 mov     [rsp+0E8h+var_40], rax
.text:000000000000442A                 xor     eax, eax
.text:000000000000442C                 call    ___ctype_get_mb_cur_max
.text:0000000000004431                 cmp     r15d, 0Ah       ; switch 11 cases
.text:0000000000004435                 mov     [rsp+0E8h+var_90], rax
.text:000000000000443A                 ja      def_4451        ; jumptable 00000000000121F1 default case
.text:0000000000004440                 lea     rcx, jpt_4451
.text:0000000000004447                 mov     edx, r15d
.text:000000000000444A                 movsxd  rax, ds:(jpt_4451 - 8420h)[rcx+rdx*4]
.text:000000000000444E                 add     rax, rcx
.text:0000000000004451                 jmp     rax             ; switch jump
.text:0000000000004453 ; ---------------------------------------------------------------------------
.text:0000000000004453
.text:0000000000004453 loc_4453:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000004453                                         ; quotearg_buffer_restyled+C66↓j
.text:0000000000004453                                         ; DATA XREF: ...
.text:0000000000004453                 mov     [rsp+0E8h+var_DA], 1 ; jumptable 00000000000121F1 case 1
.text:0000000000004458                 mov     [rsp+0E8h+var_6C], 0
.text:000000000000445D                 xor     r12d, r12d
.text:0000000000004460                 mov     [rsp+0E8h+var_98], 0
.text:0000000000004469                 mov     [rsp+0E8h+var_D9], 1
.text:000000000000446E                 mov     [rsp+0E8h+var_DB], 0
.text:0000000000004473
.text:0000000000004473 loc_4473:                               ; CODE XREF: quotearg_buffer_restyled+E94↓j
.text:0000000000004473                 lea     rax, asc_83B5   ; "'"
.text:000000000000447A                 mov     [rsp+0E8h+n], 1
.text:0000000000004483                 xor     r15d, r15d
.text:0000000000004486                 mov     [rsp+0E8h+var_E0], 2
.text:000000000000448E                 mov     [rsp+0E8h+s2], rax
.text:0000000000004493
.text:0000000000004493 loc_4493:                               ; CODE XREF: quotearg_buffer_restyled+7F4↓j
.text:0000000000004493                                         ; quotearg_buffer_restyled+CB8↓j ...
.text:0000000000004493                 xor     r11d, r11d
.text:0000000000004496                 mov     rax, rbp
.text:0000000000004499                 mov     r8d, r12d
.text:000000000000449C                 mov     rbp, r11
.text:000000000000449F                 mov     r11, rax
.text:00000000000044A2                 nop     word ptr [rax+rax+00h]
.text:00000000000044A8
.text:00000000000044A8 loc_44A8:                               ; CODE XREF: quotearg_buffer_restyled+2B2↓j
.text:00000000000044A8                                         ; quotearg_buffer_restyled+42C↓j
.text:00000000000044A8                 cmp     r11, rbp
.text:00000000000044AB                 setnz   r12b
.text:00000000000044AF                 cmp     r11, 0FFFFFFFFFFFFFFFFh
.text:00000000000044B3                 jnz     short loc_44C2
.text:00000000000044B5                 mov     rax, [rsp+0E8h+s]
.text:00000000000044BA                 cmp     byte ptr [rax+rbp], 0
.text:00000000000044BE                 setnz   r12b
.text:00000000000044C2
.text:00000000000044C2 loc_44C2:                               ; CODE XREF: quotearg_buffer_restyled+F3↑j
.text:00000000000044C2                 test    r12b, r12b
.text:00000000000044C5                 jz      loc_4B20
.text:00000000000044CB                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000044D0                 mov     rdi, [rsp+0E8h+s] ; s
.text:00000000000044D5                 lea     r9, [rdi+rbp]
.text:00000000000044D9                 setnz   al
.text:00000000000044DC                 and     al, [rsp+0E8h+var_DB]
.text:00000000000044E0                 mov     r10d, eax
.text:00000000000044E3                 jz      loc_4590
.text:00000000000044E9                 mov     rax, [rsp+0E8h+n]
.text:00000000000044EE                 test    rax, rax
.text:00000000000044F1                 jz      loc_4920
.text:00000000000044F7                 cmp     r11, 0FFFFFFFFFFFFFFFFh
.text:00000000000044FB                 lea     rbx, [rbp+rax+0]
.text:0000000000004500                 jnz     short loc_4530
.text:0000000000004502                 cmp     rax, 1
.text:0000000000004506                 jbe     short loc_4530
.text:0000000000004508                 mov     byte ptr [rsp+0E8h+var_B0], r8b
.text:000000000000450D                 mov     byte ptr [rsp+0E8h+var_B8], r10b
.text:0000000000004512                 mov     [rsp+0E8h+ps], r9
.text:0000000000004517                 call    _strlen
.text:000000000000451C                 movzx   r8d, byte ptr [rsp+0E8h+var_B0]
.text:0000000000004522                 movzx   r10d, byte ptr [rsp+0E8h+var_B8]
.text:0000000000004528                 mov     r11, rax
.text:000000000000452B                 mov     r9, [rsp+0E8h+ps]
.text:0000000000004530
.text:0000000000004530 loc_4530:                               ; CODE XREF: quotearg_buffer_restyled+140↑j
.text:0000000000004530                                         ; quotearg_buffer_restyled+146↑j
.text:0000000000004530                 cmp     rbx, r11
.text:0000000000004533                 mov     byte ptr [rsp+0E8h+ps], r10b
.text:0000000000004538                 ja      loc_4AF0
.text:000000000000453E                 mov     rdx, [rsp+0E8h+n] ; n
.text:0000000000004543                 mov     rsi, [rsp+0E8h+s2] ; s2
.text:0000000000004548                 mov     rdi, r9         ; s1
.text:000000000000454B                 mov     [rsp+0E8h+var_A8], r11
.text:0000000000004550                 mov     byte ptr [rsp+0E8h+var_B0], r8b
.text:0000000000004555                 mov     [rsp+0E8h+var_B8], r9
.text:000000000000455A                 call    _memcmp
.text:000000000000455F                 test    eax, eax
.text:0000000000004561                 mov     r9, [rsp+0E8h+var_B8]
.text:0000000000004566                 movzx   r8d, byte ptr [rsp+0E8h+var_B0]
.text:000000000000456C                 mov     r11, [rsp+0E8h+var_A8]
.text:0000000000004571                 jnz     loc_4AF0
.text:0000000000004577                 cmp     [rsp+0E8h+var_D9], 0
.text:000000000000457C                 movzx   r10d, byte ptr [rsp+0E8h+ps]
.text:0000000000004582                 jnz     loc_5505
.text:0000000000004588                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000004590
.text:0000000000004590 loc_4590:                               ; CODE XREF: quotearg_buffer_restyled+123↑j
.text:0000000000004590                                         ; quotearg_buffer_restyled+733↓j
.text:0000000000004590                 movzx   ebx, byte ptr [r9]
.text:0000000000004594                 cmp     bl, 7Eh         ; switch 127 cases
.text:0000000000004597                 ja      def_45AE        ; jumptable 000000000001234E default case, cases 1-6,14-31,64
.text:000000000000459D                 lea     rcx, jpt_45AE
.text:00000000000045A4                 movzx   edx, bl
.text:00000000000045A7                 movsxd  rax, ds:(jpt_45AE - 844Ch)[rcx+rdx*4]
.text:00000000000045AB                 add     rax, rcx
.text:00000000000045AE                 jmp     rax             ; switch jump
.text:00000000000045B0 ; ---------------------------------------------------------------------------
.text:00000000000045B0
.text:00000000000045B0 loc_45B0:                               ; CODE XREF: quotearg_buffer_restyled+57A↓j
.text:00000000000045B0                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:00000000000045B0                 xor     r10d, r10d      ; jumptable 00000000000126DA cases 123,125
.text:00000000000045B3
.text:00000000000045B3 loc_45B3:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000045B3                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:00000000000045B3                 cmp     r11, 1          ; jumptable 000000000001234E cases 123,125
.text:00000000000045B7                 setnz   al
.text:00000000000045BA                 cmp     r11, 0FFFFFFFFFFFFFFFFh
.text:00000000000045BE                 jnz     short loc_45CC
.text:00000000000045C0                 mov     rax, [rsp+0E8h+s]
.text:00000000000045C5                 cmp     byte ptr [rax+1], 0
.text:00000000000045C9                 setnz   al
.text:00000000000045CC
.text:00000000000045CC loc_45CC:                               ; CODE XREF: quotearg_buffer_restyled+1FE↑j
.text:00000000000045CC                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000045D1                 setz    dl
.text:00000000000045D4                 test    al, al
.text:00000000000045D6                 jz      loc_4828
.text:00000000000045DC
.text:00000000000045DC loc_45DC:                               ; CODE XREF: quotearg_buffer_restyled+46B↓j
.text:00000000000045DC                 xor     r12d, r12d
.text:00000000000045DF                 xor     eax, eax
.text:00000000000045E1                 nop     dword ptr [rax+00000000h]
.text:00000000000045E8
.text:00000000000045E8 loc_45E8:                               ; CODE XREF: quotearg_buffer_restyled+2E9↓j
.text:00000000000045E8                                         ; quotearg_buffer_restyled+30C↓j ...
.text:00000000000045E8                 cmp     [rsp+0E8h+var_DB], 1
.text:00000000000045ED                 jnz     loc_4702
.text:00000000000045F3                 test    dl, dl
.text:00000000000045F5                 jnz     loc_4702
.text:00000000000045FB
.text:00000000000045FB loc_45FB:                               ; CODE XREF: quotearg_buffer_restyled+347↓j
.text:00000000000045FB                 mov     rsi, [rsp+0E8h+var_C8]
.text:0000000000004600                 test    rsi, rsi
.text:0000000000004603                 jz      short loc_4619
.text:0000000000004605                 mov     edx, ebx
.text:0000000000004607                 shr     dl, 5
.text:000000000000460A                 movzx   edx, dl
.text:000000000000460D                 mov     edx, [rsi+rdx*4]
.text:0000000000004610                 bt      edx, ebx
.text:0000000000004613                 jb      loc_4763
.text:0000000000004619
.text:0000000000004619 loc_4619:                               ; CODE XREF: quotearg_buffer_restyled+243↑j
.text:0000000000004619                                         ; quotearg_buffer_restyled+34D↓j ...
.text:0000000000004619                 test    r10b, r10b
.text:000000000000461C                 jnz     loc_4763
.text:0000000000004622                 xor     eax, 1
.text:0000000000004625                 add     rbp, 1
.text:0000000000004629                 and     eax, r8d
.text:000000000000462C
.text:000000000000462C loc_462C:                               ; CODE XREF: quotearg_buffer_restyled+75A↓j
.text:000000000000462C                                         ; quotearg_buffer_restyled+AE8↓j
.text:000000000000462C                 test    al, al
.text:000000000000462E                 jz      short loc_4650
.text:0000000000004630                 cmp     r13, r15
.text:0000000000004633                 jbe     short loc_463A
.text:0000000000004635                 mov     byte ptr [r14+r15], 27h ; '''
.text:000000000000463A
.text:000000000000463A loc_463A:                               ; CODE XREF: quotearg_buffer_restyled+273↑j
.text:000000000000463A                 lea     rax, [r15+1]
.text:000000000000463E                 cmp     r13, rax
.text:0000000000004641                 jbe     short loc_4649
.text:0000000000004643                 mov     byte ptr [r14+r15+1], 27h ; '''
.text:0000000000004649
.text:0000000000004649 loc_4649:                               ; CODE XREF: quotearg_buffer_restyled+281↑j
.text:0000000000004649                 add     r15, 2
.text:000000000000464D                 xor     r8d, r8d
.text:0000000000004650
.text:0000000000004650 loc_4650:                               ; CODE XREF: quotearg_buffer_restyled+26E↑j
.text:0000000000004650                                         ; quotearg_buffer_restyled+403↓j ...
.text:0000000000004650                 cmp     r15, r13
.text:0000000000004653                 jnb     short loc_4659
.text:0000000000004655                 mov     [r14+r15], bl
.text:0000000000004659
.text:0000000000004659 loc_4659:                               ; CODE XREF: quotearg_buffer_restyled+293↑j
.text:0000000000004659                 movzx   edi, [rsp+0E8h+var_DA]
.text:000000000000465E                 add     r15, 1
.text:0000000000004662                 mov     eax, 0
.text:0000000000004667                 test    r12b, r12b
.text:000000000000466A                 cmovz   edi, eax
.text:000000000000466D                 mov     [rsp+0E8h+var_DA], dil
.text:0000000000004672                 jmp     loc_44A8
.text:0000000000004672 ; ---------------------------------------------------------------------------
.text:0000000000004677                 align 20h
.text:0000000000004680
.text:0000000000004680 loc_4680:                               ; CODE XREF: quotearg_buffer_restyled+57A↓j
.text:0000000000004680                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004680                 xor     r10d, r10d      ; jumptable 00000000000126DA case 63
.text:0000000000004683
.text:0000000000004683 loc_4683:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004683                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004683                 mov     eax, [rsp+0E8h+var_E0] ; jumptable 000000000001234E case 63
.text:0000000000004687                 cmp     eax, 2
.text:000000000000468A                 jz      loc_4C48
.text:0000000000004690                 cmp     eax, 5
.text:0000000000004693                 jz      loc_4C08
.text:0000000000004699                 cmp     eax, 2
.text:000000000000469C                 mov     ebx, 3Fh ; '?'
.text:00000000000046A1                 setz    dl
.text:00000000000046A4                 xor     r12d, r12d
.text:00000000000046A7                 xor     eax, eax
.text:00000000000046A9                 jmp     loc_45E8
.text:00000000000046A9 ; ---------------------------------------------------------------------------
.text:00000000000046AE                 align 10h
.text:00000000000046B0
.text:00000000000046B0 loc_46B0:                               ; CODE XREF: quotearg_buffer_restyled+57A↓j
.text:00000000000046B0                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:00000000000046B0                 xor     r10d, r10d      ; jumptable 00000000000126DA case 39
.text:00000000000046B3
.text:00000000000046B3 loc_46B3:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000046B3                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:00000000000046B3                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E case 39
.text:00000000000046B8                 jz      loc_4BC0
.text:00000000000046BE                 mov     [rsp+0E8h+var_6C], r12b
.text:00000000000046C3                 xor     edx, edx
.text:00000000000046C5                 xor     eax, eax
.text:00000000000046C7                 mov     ebx, 27h ; '''
.text:00000000000046CC                 jmp     loc_45E8
.text:00000000000046CC ; ---------------------------------------------------------------------------
.text:00000000000046D1                 align 8
.text:00000000000046D8
.text:00000000000046D8 loc_46D8:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000046D8                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:00000000000046D8                 mov     edx, 9          ; jumptable 000000000001234E case 9
.text:00000000000046DD                 mov     ebx, 74h ; 't'
.text:00000000000046E2
.text:00000000000046E2 loc_46E2:                               ; CODE XREF: quotearg_buffer_restyled+4BA↓j
.text:00000000000046E2                                         ; quotearg_buffer_restyled+4EA↓j ...
.text:00000000000046E2                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000046E7                 setz    al
.text:00000000000046EA                 and     al, [rsp+0E8h+var_D9]
.text:00000000000046EE                 jnz     loc_483E
.text:00000000000046F4
.text:00000000000046F4 loc_46F4:                               ; CODE XREF: quotearg_buffer_restyled+362↓j
.text:00000000000046F4                                         ; quotearg_buffer_restyled+45A↓j ...
.text:00000000000046F4                 cmp     [rsp+0E8h+var_DB], 0
.text:00000000000046F9                 jnz     short loc_4760
.text:00000000000046FB
.text:00000000000046FB loc_46FB:                               ; CODE XREF: quotearg_buffer_restyled+422↓j
.text:00000000000046FB                 mov     ebx, edx
.text:00000000000046FD                 xor     r12d, r12d
.text:0000000000004700                 xor     eax, eax
.text:0000000000004702
.text:0000000000004702 loc_4702:                               ; CODE XREF: quotearg_buffer_restyled+22D↑j
.text:0000000000004702                                         ; quotearg_buffer_restyled+235↑j
.text:0000000000004702                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000004707                 jnz     loc_45FB
.text:000000000000470D                 jmp     loc_4619
.text:000000000000470D ; ---------------------------------------------------------------------------
.text:0000000000004712                 align 8
.text:0000000000004718
.text:0000000000004718 loc_4718:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004718                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004718                 mov     edx, 8          ; jumptable 000000000001234E case 8
.text:000000000000471D                 mov     ebx, 62h ; 'b'
.text:0000000000004722                 jmp     short loc_46F4
.text:0000000000004722 ; ---------------------------------------------------------------------------
.text:0000000000004724                 align 8
.text:0000000000004728
.text:0000000000004728 loc_4728:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004728                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004728                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E case 92
.text:000000000000472D                 jz      loc_4B00
.text:0000000000004733                 cmp     [rsp+0E8h+var_DB], 0
.text:0000000000004738                 jz      loc_4950
.text:000000000000473E
.text:000000000000473E loc_473E:                               ; CODE XREF: quotearg_buffer_restyled+588↓j
.text:000000000000473E                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000004743                 jz      loc_4950
.text:0000000000004749                 cmp     [rsp+0E8h+n], 0
.text:000000000000474F                 jnz     loc_4B0B
.text:0000000000004755                 mov     ebx, 5Ch ; '\'
.text:000000000000475A                 nop     word ptr [rax+rax+00h]
.text:0000000000004760
.text:0000000000004760 loc_4760:                               ; CODE XREF: quotearg_buffer_restyled+339↑j
.text:0000000000004760                                         ; quotearg_buffer_restyled+5D5↓j ...
.text:0000000000004760                 xor     r12d, r12d
.text:0000000000004763
.text:0000000000004763 loc_4763:                               ; CODE XREF: quotearg_buffer_restyled+253↑j
.text:0000000000004763                                         ; quotearg_buffer_restyled+25C↑j
.text:0000000000004763                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000004768                 setz    dl
.text:000000000000476B                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000004770                 mov     eax, edx
.text:0000000000004772                 jnz     loc_4FC8
.text:0000000000004778                 mov     eax, r8d
.text:000000000000477B                 xor     eax, 1
.text:000000000000477E                 and     al, dl
.text:0000000000004780                 jz      short loc_47B1
.text:0000000000004782                 cmp     r13, r15
.text:0000000000004785                 jbe     short loc_478C
.text:0000000000004787                 mov     byte ptr [r14+r15], 27h ; '''
.text:000000000000478C
.text:000000000000478C loc_478C:                               ; CODE XREF: quotearg_buffer_restyled+3C5↑j
.text:000000000000478C                 lea     rdx, [r15+1]
.text:0000000000004790                 cmp     r13, rdx
.text:0000000000004793                 jbe     short loc_479B
.text:0000000000004795                 mov     byte ptr [r14+r15+1], 24h ; '$'
.text:000000000000479B
.text:000000000000479B loc_479B:                               ; CODE XREF: quotearg_buffer_restyled+3D3↑j
.text:000000000000479B                 lea     rdx, [r15+2]
.text:000000000000479F                 cmp     r13, rdx
.text:00000000000047A2                 jbe     short loc_47AA
.text:00000000000047A4                 mov     byte ptr [r14+r15+2], 27h ; '''
.text:00000000000047AA
.text:00000000000047AA loc_47AA:                               ; CODE XREF: quotearg_buffer_restyled+3E2↑j
.text:00000000000047AA                 add     r15, 3
.text:00000000000047AE                 mov     r8d, eax
.text:00000000000047B1
.text:00000000000047B1 loc_47B1:                               ; CODE XREF: quotearg_buffer_restyled+3C0↑j
.text:00000000000047B1                 cmp     r13, r15
.text:00000000000047B4                 jbe     short loc_47BB
.text:00000000000047B6                 mov     byte ptr [r14+r15], 5Ch ; '\'
.text:00000000000047BB
.text:00000000000047BB loc_47BB:                               ; CODE XREF: quotearg_buffer_restyled+3F4↑j
.text:00000000000047BB                 add     r15, 1
.text:00000000000047BF                 add     rbp, 1
.text:00000000000047C3                 jmp     loc_4650
.text:00000000000047C3 ; ---------------------------------------------------------------------------
.text:00000000000047C8                 align 10h
.text:00000000000047D0
.text:00000000000047D0 loc_47D0:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000047D0                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:00000000000047D0                 cmp     [rsp+0E8h+var_DB], 0 ; jumptable 000000000001234E case 0
.text:00000000000047D5                 jnz     loc_49A3
.text:00000000000047DB                 xor     edx, edx
.text:00000000000047DD                 test    byte ptr [rsp+0E8h+var_70], 1
.text:00000000000047E2                 jz      loc_46FB
.text:00000000000047E8                 add     rbp, 1
.text:00000000000047EC                 jmp     loc_44A8
.text:00000000000047EC ; ---------------------------------------------------------------------------
.text:00000000000047F1                 align 8
.text:00000000000047F8
.text:00000000000047F8 loc_47F8:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000047F8                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:00000000000047F8                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E cases 37,43-58,65-90,93,95,97-122
.text:00000000000047FD                 setz    dl
.text:0000000000004800                 xor     eax, eax
.text:0000000000004802                 jmp     loc_45E8
.text:0000000000004802 ; ---------------------------------------------------------------------------
.text:0000000000004807                 align 10h
.text:0000000000004810
.text:0000000000004810 loc_4810:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004810                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004810                 mov     edx, 7          ; jumptable 000000000001234E case 7
.text:0000000000004815                 mov     ebx, 61h ; 'a'
.text:000000000000481A                 jmp     loc_46F4
.text:000000000000481A ; ---------------------------------------------------------------------------
.text:000000000000481F                 align 20h
.text:0000000000004820
.text:0000000000004820 loc_4820:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004820                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004820                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E cases 35,126
.text:0000000000004825                 setz    dl
.text:0000000000004828
.text:0000000000004828 loc_4828:                               ; CODE XREF: quotearg_buffer_restyled+216↑j
.text:0000000000004828                                         ; quotearg_buffer_restyled+6A3↓j
.text:0000000000004828                 test    rbp, rbp
.text:000000000000482B                 jnz     loc_45DC
.text:0000000000004831
.text:0000000000004831 loc_4831:                               ; CODE XREF: quotearg_buffer_restyled+49B↓j
.text:0000000000004831                                         ; quotearg_buffer_restyled+4AD↓j ...
.text:0000000000004831                 movzx   eax, [rsp+0E8h+var_D9]
.text:0000000000004836                 and     al, dl
.text:0000000000004838                 jz      loc_45E8
.text:000000000000483E
.text:000000000000483E loc_483E:                               ; CODE XREF: quotearg_buffer_restyled+32E↑j
.text:000000000000483E                 mov     rbp, r11
.text:0000000000004841                 mov     [rsp+0E8h+var_E0], 2
.text:0000000000004849                 jmp     loc_4F49
.text:0000000000004849 ; ---------------------------------------------------------------------------
.text:000000000000484E                 align 10h
.text:0000000000004850
.text:0000000000004850 loc_4850:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004850                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004850                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E cases 33,34,36,38,40-42,59-62,91,94,96,124
.text:0000000000004855                 setz    dl
.text:0000000000004858                 xor     r12d, r12d
.text:000000000000485B                 jmp     short loc_4831
.text:000000000000485B ; ---------------------------------------------------------------------------
.text:000000000000485D                 align 20h
.text:0000000000004860
.text:0000000000004860 loc_4860:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004860                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004860                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 000000000001234E case 32
.text:0000000000004865                 mov     ebx, 20h ; ' '
.text:000000000000486A                 setz    dl
.text:000000000000486D                 jmp     short loc_4831
.text:000000000000486D ; ---------------------------------------------------------------------------
.text:000000000000486F                 align 10h
.text:0000000000004870
.text:0000000000004870 loc_4870:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004870                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004870                 mov     edx, 0Dh        ; jumptable 000000000001234E case 13
.text:0000000000004875                 mov     ebx, 72h ; 'r'
.text:000000000000487A                 jmp     loc_46E2
.text:000000000000487A ; ---------------------------------------------------------------------------
.text:000000000000487F                 align 20h
.text:0000000000004880
.text:0000000000004880 loc_4880:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004880                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004880                 mov     edx, 0Ch        ; jumptable 000000000001234E case 12
.text:0000000000004885                 mov     ebx, 66h ; 'f'
.text:000000000000488A                 jmp     loc_46F4
.text:000000000000488A ; ---------------------------------------------------------------------------
.text:000000000000488F                 align 10h
.text:0000000000004890
.text:0000000000004890 loc_4890:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:0000000000004890                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:0000000000004890                 mov     edx, 0Bh        ; jumptable 000000000001234E case 11
.text:0000000000004895                 mov     ebx, 76h ; 'v'
.text:000000000000489A                 jmp     loc_46F4
.text:000000000000489A ; ---------------------------------------------------------------------------
.text:000000000000489F                 align 20h
.text:00000000000048A0
.text:00000000000048A0 loc_48A0:                               ; CODE XREF: quotearg_buffer_restyled+1EE↑j
.text:00000000000048A0                                         ; DATA XREF: .rodata:jpt_45AE↓o
.text:00000000000048A0                 mov     edx, 0Ah        ; jumptable 000000000001234E case 10
.text:00000000000048A5                 mov     ebx, 6Eh ; 'n'
.text:00000000000048AA                 jmp     loc_46E2
.text:00000000000048AA ; ---------------------------------------------------------------------------
.text:00000000000048AF                 align 10h
.text:00000000000048B0
.text:00000000000048B0 def_493A:                               ; CODE XREF: quotearg_buffer_restyled+567↓j
.text:00000000000048B0                                         ; quotearg_buffer_restyled+57A↓j
.text:00000000000048B0                                         ; DATA XREF: ...
.text:00000000000048B0                 xor     r10d, r10d      ; jumptable 00000000000126DA default case, cases 1-6,14-31,64
.text:00000000000048B3                 nop     dword ptr [rax+rax+00h]
.text:00000000000048B8
.text:00000000000048B8 def_45AE:                               ; CODE XREF: quotearg_buffer_restyled+1D7↑j
.text:00000000000048B8                                         ; quotearg_buffer_restyled+1EE↑j
.text:00000000000048B8                                         ; DATA XREF: ...
.text:00000000000048B8                 cmp     [rsp+0E8h+var_90], 1 ; jumptable 000000000001234E default case, cases 1-6,14-31,64
.text:00000000000048BE                 jnz     loc_4C68
.text:00000000000048C4                 mov     [rsp+0E8h+var_B0], r11
.text:00000000000048C9                 mov     byte ptr [rsp+0E8h+var_B8], r8b
.text:00000000000048CE                 mov     byte ptr [rsp+0E8h+ps], r10b
.text:00000000000048D3                 call    ___ctype_b_loc
.text:00000000000048D8                 mov     rcx, [rax]
.text:00000000000048DB                 movzx   edx, bl
.text:00000000000048DE                 movzx   r10d, byte ptr [rsp+0E8h+ps]
.text:00000000000048E4                 movzx   r8d, byte ptr [rsp+0E8h+var_B8]
.text:00000000000048EA                 mov     r11, [rsp+0E8h+var_B0]
.text:00000000000048EF                 mov     edi, 1
.text:00000000000048F4                 movzx   eax, word ptr [rcx+rdx*2]
.text:00000000000048F8                 and     ax, 4000h
.text:00000000000048FC                 setnz   r12b
.text:0000000000004900                 setz    al
.text:0000000000004903                 and     al, [rsp+0E8h+var_DB]
.text:0000000000004907
.text:0000000000004907 loc_4907:                               ; CODE XREF: quotearg_buffer_restyled+FED↓j
.text:0000000000004907                 test    al, al
.text:0000000000004909                 jnz     loc_52A1
.text:000000000000490F                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000004914                 setz    dl
.text:0000000000004917                 jmp     loc_45E8
.text:0000000000004917 ; ---------------------------------------------------------------------------
.text:000000000000491C                 align 20h
.text:0000000000004920
.text:0000000000004920 loc_4920:                               ; CODE XREF: quotearg_buffer_restyled+131↑j
.text:0000000000004920                 movzx   ebx, byte ptr [r9]
.text:0000000000004924                 cmp     bl, 7Eh         ; switch 127 cases
.text:0000000000004927                 ja      short def_493A  ; jumptable 00000000000126DA default case, cases 1-6,14-31,64
.text:0000000000004929                 lea     rcx, jpt_493A
.text:0000000000004930                 movzx   edx, bl
.text:0000000000004933                 movsxd  rax, ds:(jpt_493A - 8648h)[rcx+rdx*4]
.text:0000000000004937                 add     rax, rcx
.text:000000000000493A                 jmp     rax             ; switch jump
.text:000000000000493A ; ---------------------------------------------------------------------------
.text:000000000000493C                 align 20h
.text:0000000000004940
.text:0000000000004940 loc_4940:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004940                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004940                 xor     r10d, r10d      ; jumptable 00000000000126DA case 92
.text:0000000000004943                 cmp     [rsp+0E8h+var_DB], 0
.text:0000000000004948                 jnz     loc_473E
.text:000000000000494E                 xchg    ax, ax
.text:0000000000004950
.text:0000000000004950 loc_4950:                               ; CODE XREF: quotearg_buffer_restyled+378↑j
.text:0000000000004950                                         ; quotearg_buffer_restyled+383↑j
.text:0000000000004950                 mov     edx, 5Ch ; '\'
.text:0000000000004955                 mov     ebx, 5Ch ; '\'
.text:000000000000495A                 jmp     loc_46F4
.text:000000000000495A ; ---------------------------------------------------------------------------
.text:000000000000495F                 align 20h
.text:0000000000004960
.text:0000000000004960 loc_4960:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004960                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004960                 mov     edx, 0Ch        ; jumptable 00000000000126DA case 12
.text:0000000000004965                 xor     r10d, r10d
.text:0000000000004968                 mov     ebx, 66h ; 'f'
.text:000000000000496D                 jmp     loc_46F4
.text:000000000000496D ; ---------------------------------------------------------------------------
.text:0000000000004972                 align 8
.text:0000000000004978
.text:0000000000004978 loc_4978:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004978                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004978                 mov     edx, 0Ah        ; jumptable 00000000000126DA case 10
.text:000000000000497D                 xor     r10d, r10d
.text:0000000000004980                 mov     ebx, 6Eh ; 'n'
.text:0000000000004985                 jmp     loc_46E2
.text:0000000000004985 ; ---------------------------------------------------------------------------
.text:000000000000498A                 align 10h
.text:0000000000004990
.text:0000000000004990 loc_4990:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004990                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004990                 mov     ebx, 61h ; 'a'  ; jumptable 00000000000126DA case 7
.text:0000000000004995                 jmp     loc_4760
.text:0000000000004995 ; ---------------------------------------------------------------------------
.text:000000000000499A                 align 20h
.text:00000000000049A0
.text:00000000000049A0 loc_49A0:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:00000000000049A0                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:00000000000049A0                 xor     r10d, r10d      ; jumptable 00000000000126DA case 0
.text:00000000000049A3
.text:00000000000049A3 loc_49A3:                               ; CODE XREF: quotearg_buffer_restyled+415↑j
.text:00000000000049A3                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000049A8                 setz    dl
.text:00000000000049AB                 cmp     [rsp+0E8h+var_D9], 0
.text:00000000000049B0                 jnz     loc_554A
.text:00000000000049B6                 mov     eax, r8d
.text:00000000000049B9                 mov     rcx, r15
.text:00000000000049BC                 xor     eax, 1
.text:00000000000049BF                 and     al, dl
.text:00000000000049C1                 jz      short loc_49F0
.text:00000000000049C3                 cmp     r13, r15
.text:00000000000049C6                 jbe     short loc_49CD
.text:00000000000049C8                 mov     byte ptr [r14+r15], 27h ; '''
.text:00000000000049CD
.text:00000000000049CD loc_49CD:                               ; CODE XREF: quotearg_buffer_restyled+606↑j
.text:00000000000049CD                 lea     rcx, [r15+1]
.text:00000000000049D1                 cmp     r13, rcx
.text:00000000000049D4                 jbe     short loc_49DC
.text:00000000000049D6                 mov     byte ptr [r14+r15+1], 24h ; '$'
.text:00000000000049DC
.text:00000000000049DC loc_49DC:                               ; CODE XREF: quotearg_buffer_restyled+614↑j
.text:00000000000049DC                 lea     rcx, [r15+2]
.text:00000000000049E0                 cmp     r13, rcx
.text:00000000000049E3                 ja      loc_5019
.text:00000000000049E9
.text:00000000000049E9 loc_49E9:                               ; CODE XREF: quotearg_buffer_restyled+C5F↓j
.text:00000000000049E9                 lea     rcx, [r15+3]
.text:00000000000049ED                 mov     r8d, eax
.text:00000000000049F0
.text:00000000000049F0 loc_49F0:                               ; CODE XREF: quotearg_buffer_restyled+601↑j
.text:00000000000049F0                 cmp     r13, rcx
.text:00000000000049F3                 jbe     short loc_49FA
.text:00000000000049F5                 mov     byte ptr [r14+rcx], 5Ch ; '\'
.text:00000000000049FA
.text:00000000000049FA loc_49FA:                               ; CODE XREF: quotearg_buffer_restyled+633↑j
.text:00000000000049FA                 cmp     [rsp+0E8h+var_E0], 2
.text:00000000000049FF                 lea     r15, [rcx+1]
.text:0000000000004A03                 jz      loc_5009
.text:0000000000004A09                 lea     rax, [rbp+1]
.text:0000000000004A0D                 cmp     rax, r11
.text:0000000000004A10                 jnb     short loc_4A2B
.text:0000000000004A12                 mov     rax, [rsp+0E8h+s]
.text:0000000000004A17                 movzx   eax, byte ptr [rax+rbp+1]
.text:0000000000004A1C                 mov     byte ptr [rsp+0E8h+ps], al
.text:0000000000004A20                 sub     eax, 30h ; '0'
.text:0000000000004A23                 cmp     al, 9
.text:0000000000004A25                 jbe     loc_5259
.text:0000000000004A2B
.text:0000000000004A2B loc_4A2B:                               ; CODE XREF: quotearg_buffer_restyled+650↑j
.text:0000000000004A2B                 mov     eax, r12d
.text:0000000000004A2E                 mov     ebx, 30h ; '0'
.text:0000000000004A33                 xor     r12d, r12d
.text:0000000000004A36                 jmp     loc_45E8
.text:0000000000004A36 ; ---------------------------------------------------------------------------
.text:0000000000004A3B                 align 20h
.text:0000000000004A40
.text:0000000000004A40 loc_4A40:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004A40                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004A40                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 00000000000126DA cases 37,43-58,65-90,93,95,97-122
.text:0000000000004A45                 mov     r12d, r10d
.text:0000000000004A48                 setz    dl
.text:0000000000004A4B                 xor     r10d, r10d
.text:0000000000004A4E                 xor     eax, eax
.text:0000000000004A50                 jmp     loc_45E8
.text:0000000000004A50 ; ---------------------------------------------------------------------------
.text:0000000000004A55                 align 8
.text:0000000000004A58
.text:0000000000004A58 loc_4A58:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004A58                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004A58                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 00000000000126DA cases 35,126
.text:0000000000004A5D                 setz    dl
.text:0000000000004A60                 xor     r10d, r10d
.text:0000000000004A63                 jmp     loc_4828
.text:0000000000004A63 ; ---------------------------------------------------------------------------
.text:0000000000004A68                 align 10h
.text:0000000000004A70
.text:0000000000004A70 loc_4A70:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004A70                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004A70                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 00000000000126DA cases 33,34,36,38,40-42,59-62,91,94,96,124
.text:0000000000004A75                 setz    dl
.text:0000000000004A78                 xor     r10d, r10d
.text:0000000000004A7B                 xor     r12d, r12d
.text:0000000000004A7E                 jmp     loc_4831
.text:0000000000004A7E ; ---------------------------------------------------------------------------
.text:0000000000004A83                 align 8
.text:0000000000004A88
.text:0000000000004A88 loc_4A88:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004A88                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004A88                 cmp     [rsp+0E8h+var_E0], 2 ; jumptable 00000000000126DA case 32
.text:0000000000004A8D                 mov     r12d, r10d
.text:0000000000004A90                 mov     ebx, 20h ; ' '
.text:0000000000004A95                 setz    dl
.text:0000000000004A98                 xor     r10d, r10d
.text:0000000000004A9B                 jmp     loc_4831
.text:0000000000004AA0 ; ---------------------------------------------------------------------------
.text:0000000000004AA0
.text:0000000000004AA0 loc_4AA0:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004AA0                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004AA0                 mov     edx, 0Dh        ; jumptable 00000000000126DA case 13
.text:0000000000004AA5                 xor     r10d, r10d
.text:0000000000004AA8                 mov     ebx, 72h ; 'r'
.text:0000000000004AAD                 jmp     loc_46E2
.text:0000000000004AAD ; ---------------------------------------------------------------------------
.text:0000000000004AB2                 align 8
.text:0000000000004AB8
.text:0000000000004AB8 loc_4AB8:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004AB8                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004AB8                 mov     ebx, 76h ; 'v'  ; jumptable 00000000000126DA case 11
.text:0000000000004ABD                 jmp     loc_4760
.text:0000000000004ABD ; ---------------------------------------------------------------------------
.text:0000000000004AC2                 align 8
.text:0000000000004AC8
.text:0000000000004AC8 loc_4AC8:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004AC8                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004AC8                 mov     edx, 9          ; jumptable 00000000000126DA case 9
.text:0000000000004ACD                 xor     r10d, r10d
.text:0000000000004AD0                 mov     ebx, 74h ; 't'
.text:0000000000004AD5                 jmp     loc_46E2
.text:0000000000004AD5 ; ---------------------------------------------------------------------------
.text:0000000000004ADA                 align 20h
.text:0000000000004AE0
.text:0000000000004AE0 loc_4AE0:                               ; CODE XREF: quotearg_buffer_restyled+57A↑j
.text:0000000000004AE0                                         ; DATA XREF: .rodata:jpt_493A↓o
.text:0000000000004AE0                 mov     ebx, 62h ; 'b'  ; jumptable 00000000000126DA case 8
.text:0000000000004AE5                 jmp     loc_4760
.text:0000000000004AE5 ; ---------------------------------------------------------------------------
.text:0000000000004AEA                 align 10h
.text:0000000000004AF0
.text:0000000000004AF0 loc_4AF0:                               ; CODE XREF: quotearg_buffer_restyled+178↑j
.text:0000000000004AF0                                         ; quotearg_buffer_restyled+1B1↑j
.text:0000000000004AF0                 xor     r10d, r10d
.text:0000000000004AF3                 jmp     loc_4590
.text:0000000000004AF3 ; ---------------------------------------------------------------------------
.text:0000000000004AF8                 align 20h
.text:0000000000004B00
.text:0000000000004B00 loc_4B00:                               ; CODE XREF: quotearg_buffer_restyled+36D↑j
.text:0000000000004B00                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000004B05                 jnz     loc_5470
.text:0000000000004B0B
.text:0000000000004B0B loc_4B0B:                               ; CODE XREF: quotearg_buffer_restyled+38F↑j
.text:0000000000004B0B                 add     rbp, 1
.text:0000000000004B0F                 mov     eax, r8d
.text:0000000000004B12                 xor     r12d, r12d
.text:0000000000004B15                 mov     ebx, 5Ch ; '\'
.text:0000000000004B1A                 jmp     loc_462C
.text:0000000000004B1A ; ---------------------------------------------------------------------------
.text:0000000000004B1F                 align 20h
.text:0000000000004B20
.text:0000000000004B20 loc_4B20:                               ; CODE XREF: quotearg_buffer_restyled+105↑j
.text:0000000000004B20                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000004B25                 movzx   ebx, [rsp+0E8h+var_D9]
.text:0000000000004B2A                 mov     r12d, r8d
.text:0000000000004B2D                 mov     rbp, r11
.text:0000000000004B30                 setz    dl
.text:0000000000004B33                 mov     eax, ebx
.text:0000000000004B35                 test    r15, r15
.text:0000000000004B38                 setz    cl
.text:0000000000004B3B                 and     eax, edx
.text:0000000000004B3D                 and     al, cl
.text:0000000000004B3F                 jnz     loc_55A6
.text:0000000000004B45                 mov     eax, ebx
.text:0000000000004B47                 xor     eax, 1
.text:0000000000004B4A                 and     dl, al
.text:0000000000004B4C                 jz      loc_54BC
.text:0000000000004B52                 cmp     [rsp+0E8h+var_6C], 0
.text:0000000000004B57                 jz      loc_54BA
.text:0000000000004B5D                 cmp     [rsp+0E8h+var_DA], 0
.text:0000000000004B62                 jnz     loc_555D
.text:0000000000004B68                 test    r13, r13
.text:0000000000004B6B                 setz    al
.text:0000000000004B6E                 cmp     [rsp+0E8h+var_98], 0
.text:0000000000004B74                 setnz   dl
.text:0000000000004B77                 and     al, dl
.text:0000000000004B79                 jz      loc_559C
.text:0000000000004B7F                 mov     r13, [rsp+0E8h+var_98]
.text:0000000000004B84
.text:0000000000004B84 loc_4B84:                               ; CODE XREF: quotearg_buffer_restyled+121D↓j
.text:0000000000004B84                 lea     rbx, asc_83B5   ; "'"
.text:0000000000004B8B                 mov     byte ptr [r14], 27h ; '''
.text:0000000000004B8F                 mov     [rsp+0E8h+var_E0], 2
.text:0000000000004B97                 mov     r15d, 1
.text:0000000000004B9D                 mov     [rsp+0E8h+n], 1
.text:0000000000004BA6                 mov     [rsp+0E8h+var_D9], 0
.text:0000000000004BAB                 mov     [rsp+0E8h+s2], rbx
.text:0000000000004BB0                 mov     [rsp+0E8h+var_6C], al
.text:0000000000004BB4                 jmp     loc_4493
.text:0000000000004BB4 ; ---------------------------------------------------------------------------
.text:0000000000004BB9                 align 20h
.text:0000000000004BC0
.text:0000000000004BC0 loc_4BC0:                               ; CODE XREF: quotearg_buffer_restyled+2F8↑j
.text:0000000000004BC0                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000004BC5                 jnz     loc_5470
.text:0000000000004BCB                 test    r13, r13
.text:0000000000004BCE                 jz      loc_4FD0
.text:0000000000004BD4                 xor     edx, edx
.text:0000000000004BD6                 cmp     [rsp+0E8h+var_98], 0
.text:0000000000004BDC                 jnz     loc_4FD0
.text:0000000000004BE2
.text:0000000000004BE2 loc_4BE2:                               ; CODE XREF: quotearg_buffer_restyled+C44↓j
.text:0000000000004BE2                                         ; quotearg_buffer_restyled+122A↓j
.text:0000000000004BE2                 mov     [rsp+0E8h+var_98], r13
.text:0000000000004BE7                 add     r15, 3
.text:0000000000004BEB                 xor     eax, eax
.text:0000000000004BED                 mov     [rsp+0E8h+var_6C], r12b
.text:0000000000004BF2                 xor     r8d, r8d
.text:0000000000004BF5                 mov     r13, rdx
.text:0000000000004BF8                 mov     ebx, 27h ; '''
.text:0000000000004BFD                 jmp     loc_4619
.text:0000000000004BFD ; ---------------------------------------------------------------------------
.text:0000000000004C02                 align 8
.text:0000000000004C08
.text:0000000000004C08 loc_4C08:                               ; CODE XREF: quotearg_buffer_restyled+2D3↑j
.text:0000000000004C08                 test    byte ptr [rsp+0E8h+var_70], 4
.text:0000000000004C0D                 jz      short loc_4C30
.text:0000000000004C0F                 lea     rcx, [rbp+2]
.text:0000000000004C13                 cmp     rcx, r11
.text:0000000000004C16                 jnb     short loc_4C30
.text:0000000000004C18                 mov     rax, [rsp+0E8h+s]
.text:0000000000004C1D                 cmp     byte ptr [rax+rbp+1], 3Fh ; '?'
.text:0000000000004C22                 jz      loc_53B2
.text:0000000000004C28                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000004C30
.text:0000000000004C30 loc_4C30:                               ; CODE XREF: quotearg_buffer_restyled+84D↑j
.text:0000000000004C30                                         ; quotearg_buffer_restyled+856↑j ...
.text:0000000000004C30                 xor     edx, edx
.text:0000000000004C32                 xor     r12d, r12d
.text:0000000000004C35                 xor     eax, eax
.text:0000000000004C37                 mov     ebx, 3Fh ; '?'
.text:0000000000004C3C                 jmp     loc_45E8
.text:0000000000004C3C ; ---------------------------------------------------------------------------
.text:0000000000004C41                 align 8
.text:0000000000004C48
.text:0000000000004C48 loc_4C48:                               ; CODE XREF: quotearg_buffer_restyled+2CA↑j
.text:0000000000004C48                 cmp     [rsp+0E8h+var_D9], 0
.text:0000000000004C4D                 jnz     loc_5470
.text:0000000000004C53                 xor     r12d, r12d
.text:0000000000004C56                 xor     eax, eax
.text:0000000000004C58                 mov     ebx, 3Fh ; '?'
.text:0000000000004C5D                 jmp     loc_4619
.text:0000000000004C5D ; ---------------------------------------------------------------------------
.text:0000000000004C62                 align 8
.text:0000000000004C68
.text:0000000000004C68 loc_4C68:                               ; CODE XREF: quotearg_buffer_restyled+4FE↑j
.text:0000000000004C68                 lea     rax, [rsp+0E8h+var_48]
.text:0000000000004C70                 cmp     r11, 0FFFFFFFFFFFFFFFFh
.text:0000000000004C74                 mov     [rsp+0E8h+var_48], 0
.text:0000000000004C80                 mov     [rsp+0E8h+ps], rax
.text:0000000000004C85                 jnz     short loc_4CB4
.text:0000000000004C87                 mov     rdi, [rsp+0E8h+s] ; s
.text:0000000000004C8C                 mov     byte ptr [rsp+0E8h+var_A8], r8b
.text:0000000000004C91                 mov     byte ptr [rsp+0E8h+var_B0], r10b
.text:0000000000004C96                 mov     [rsp+0E8h+var_B8], r9
.text:0000000000004C9B                 call    _strlen
.text:0000000000004CA0                 movzx   r8d, byte ptr [rsp+0E8h+var_A8]
.text:0000000000004CA6                 movzx   r10d, byte ptr [rsp+0E8h+var_B0]
.text:0000000000004CAC                 mov     r11, rax
.text:0000000000004CAF                 mov     r9, [rsp+0E8h+var_B8]
.text:0000000000004CB4
.text:0000000000004CB4 loc_4CB4:                               ; CODE XREF: quotearg_buffer_restyled+8C5↑j
.text:0000000000004CB4                 lea     rax, [rsp+0E8h+wc]
.text:0000000000004CBC                 xor     ecx, ecx
.text:0000000000004CBE                 mov     [rsp+0E8h+var_6A], bl
.text:0000000000004CC2                 mov     [rsp+0E8h+var_6B], r8b
.text:0000000000004CC7                 mov     rbx, rcx
.text:0000000000004CCA                 mov     [rsp+0E8h+var_60], r9
.text:0000000000004CD2                 mov     [rsp+0E8h+var_B0], rax
.text:0000000000004CD7                 mov     [rsp+0E8h+var_69], r10b
.text:0000000000004CDC                 mov     [rsp+0E8h+var_68], r15
.text:0000000000004CE4                 mov     [rsp+0E8h+var_A8], r14
.text:0000000000004CE9                 mov     [rsp+0E8h+var_78], r13
.text:0000000000004CEE                 mov     [rsp+0E8h+var_B8], r11
.text:0000000000004CF3
.text:0000000000004CF3 loc_4CF3:                               ; CODE XREF: quotearg_buffer_restyled+9AF↓j
.text:0000000000004CF3                 mov     rax, [rsp+0E8h+s]
.text:0000000000004CF8                 lea     r14, [rbp+rbx+0]
.text:0000000000004CFD                 mov     rdx, [rsp+0E8h+var_B8]
.text:0000000000004D02                 mov     rcx, [rsp+0E8h+ps]
.text:0000000000004D07                 mov     rdi, [rsp+0E8h+var_B0]
.text:0000000000004D0C                 lea     r13, [rax+r14]
.text:0000000000004D10                 sub     rdx, r14
.text:0000000000004D13                 mov     rsi, r13
.text:0000000000004D16                 call    rpl_mbrtowc
.text:0000000000004D1B                 test    rax, rax
.text:0000000000004D1E                 mov     r15, rax
.text:0000000000004D21                 jz      short loc_4D71
.text:0000000000004D23                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000004D27                 jz      loc_5345
.text:0000000000004D2D                 cmp     rax, 0FFFFFFFFFFFFFFFEh
.text:0000000000004D31                 jz      loc_52D1
.text:0000000000004D37                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000004D3C                 setz    al
.text:0000000000004D3F                 and     al, [rsp+0E8h+var_D9]
.text:0000000000004D43                 jnz     loc_4EE0
.text:0000000000004D49
.text:0000000000004D49 loc_4D49:                               ; CODE XREF: quotearg_buffer_restyled+B24↓j
.text:0000000000004D49                                         ; quotearg_buffer_restyled+B47↓j
.text:0000000000004D49                 mov     edi, [rsp+0E8h+wc] ; wc
.text:0000000000004D50                 call    _iswprint
.text:0000000000004D55                 mov     rdi, [rsp+0E8h+ps] ; ps
.text:0000000000004D5A                 test    eax, eax
.text:0000000000004D5C                 mov     eax, 0
.text:0000000000004D61                 cmovz   r12d, eax
.text:0000000000004D65                 add     rbx, r15
.text:0000000000004D68                 call    _mbsinit
.text:0000000000004D6D                 test    eax, eax
.text:0000000000004D6F                 jz      short loc_4CF3
.text:0000000000004D71
.text:0000000000004D71 loc_4D71:                               ; CODE XREF: quotearg_buffer_restyled+961↑j
.text:0000000000004D71                 mov     edx, r12d
.text:0000000000004D74                 mov     rdi, rbx
.text:0000000000004D77                 movzx   r8d, [rsp+0E8h+var_6B]
.text:0000000000004D7D                 xor     edx, 1
.text:0000000000004D80                 movzx   ebx, [rsp+0E8h+var_6A]
.text:0000000000004D85                 movzx   r10d, [rsp+0E8h+var_69]
.text:0000000000004D8B                 and     dl, [rsp+0E8h+var_DB]
.text:0000000000004D8F                 mov     r15, [rsp+0E8h+var_68]
.text:0000000000004D97                 mov     r14, [rsp+0E8h+var_A8]
.text:0000000000004D9C                 mov     r13, [rsp+0E8h+var_78]
.text:0000000000004DA1                 mov     r11, [rsp+0E8h+var_B8]
.text:0000000000004DA6
.text:0000000000004DA6 loc_4DA6:                               ; CODE XREF: quotearg_buffer_restyled+F80↓j
.text:0000000000004DA6                                         ; quotearg_buffer_restyled+FB8↓j
.text:0000000000004DA6                 cmp     rdi, 1
.text:0000000000004DAA                 jbe     loc_53AB
.text:0000000000004DB0
.text:0000000000004DB0 loc_4DB0:                               ; CODE XREF: quotearg_buffer_restyled+EE9↓j
.text:0000000000004DB0                 mov     rcx, rdi
.text:0000000000004DB3                 xor     esi, esi
.text:0000000000004DB5                 movzx   r9d, [rsp+0E8h+var_D9]
.text:0000000000004DBB                 add     rcx, rbp
.text:0000000000004DBE                 mov     rdi, [rsp+0E8h+s]
.text:0000000000004DC3                 jmp     loc_4E7E
.text:0000000000004DC3 ; ---------------------------------------------------------------------------
.text:0000000000004DC8                 align 10h
.text:0000000000004DD0
.text:0000000000004DD0 loc_4DD0:                               ; CODE XREF: quotearg_buffer_restyled+AC0↓j
.text:0000000000004DD0                 cmp     [rsp+0E8h+var_E0], 2
.text:0000000000004DD5                 setz    al
.text:0000000000004DD8                 test    r9b, r9b
.text:0000000000004DDB                 jnz     loc_5290
.text:0000000000004DE1                 mov     esi, r8d
.text:0000000000004DE4                 xor     esi, 1
.text:0000000000004DE7                 and     al, sil
.text:0000000000004DEA                 jz      short loc_4E1B
.text:0000000000004DEC                 cmp     r13, r15
.text:0000000000004DEF                 jbe     short loc_4DF6
.text:0000000000004DF1                 mov     byte ptr [r14+r15], 27h ; '''
.text:0000000000004DF6
.text:0000000000004DF6 loc_4DF6:                               ; CODE XREF: quotearg_buffer_restyled+A2F↑j
.text:0000000000004DF6                 lea     rsi, [r15+1]
.text:0000000000004DFA                 cmp     r13, rsi
.text:0000000000004DFD                 jbe     short loc_4E05
.text:0000000000004DFF                 mov     byte ptr [r14+r15+1], 24h ; '$'
.text:0000000000004E05
.text:0000000000004E05 loc_4E05:                               ; CODE XREF: quotearg_buffer_restyled+A3D↑j
.text:0000000000004E05                 lea     rsi, [r15+2]
.text:0000000000004E09                 cmp     r13, rsi
.text:0000000000004E0C                 jbe     short loc_4E14
.text:0000000000004E0E                 mov     byte ptr [r14+r15+2], 27h ; '''
.text:0000000000004E14
.text:0000000000004E14 loc_4E14:                               ; CODE XREF: quotearg_buffer_restyled+A4C↑j
.text:0000000000004E14                 add     r15, 3
.text:0000000000004E18                 mov     r8d, eax
.text:0000000000004E1B
.text:0000000000004E1B loc_4E1B:                               ; CODE XREF: quotearg_buffer_restyled+A2A↑j
.text:0000000000004E1B                 cmp     r13, r15
.text:0000000000004E1E                 jbe     short loc_4E25
.text:0000000000004E20                 mov     byte ptr [r14+r15], 5Ch ; '\'
.text:0000000000004E25
.text:0000000000004E25 loc_4E25:                               ; CODE XREF: quotearg_buffer_restyled+A5E↑j
.text:0000000000004E25                 lea     rax, [r15+1]
.text:0000000000004E29                 cmp     r13, rax
.text:0000000000004E2C                 jbe     short loc_4E3B
.text:0000000000004E2E                 mov     eax, ebx
.text:0000000000004E30                 shr     al, 6
.text:0000000000004E33                 add     eax, 30h ; '0'
.text:0000000000004E36                 mov     [r14+r15+1], al
.text:0000000000004E3B
.text:0000000000004E3B loc_4E3B:                               ; CODE XREF: quotearg_buffer_restyled+A6C↑j
.text:0000000000004E3B                 lea     rax, [r15+2]
.text:0000000000004E3F                 cmp     r13, rax
.text:0000000000004E42                 jbe     short loc_4E54
.text:0000000000004E44                 mov     eax, ebx
.text:0000000000004E46                 shr     al, 3
.text:0000000000004E49                 and     eax, 7
.text:0000000000004E4C                 add     eax, 30h ; '0'
.text:0000000000004E4F                 mov     [r14+r15+2], al
.text:0000000000004E54
.text:0000000000004E54 loc_4E54:                               ; CODE XREF: quotearg_buffer_restyled+A82↑j
.text:0000000000004E54                 and     ebx, 7
.text:0000000000004E57                 add     rbp, 1
.text:0000000000004E5B                 add     r15, 3
.text:0000000000004E5F                 add     ebx, 30h ; '0'
.text:0000000000004E62                 cmp     rbp, rcx
.text:0000000000004E65                 jnb     loc_4650
.text:0000000000004E6B                 mov     esi, edx
.text:0000000000004E6D
.text:0000000000004E6D loc_4E6D:                               ; CODE XREF: quotearg_buffer_restyled+B19↓j
.text:0000000000004E6D                                         ; quotearg_buffer_restyled+EF1↓j
.text:0000000000004E6D                 cmp     r13, r15
.text:0000000000004E70                 jbe     short loc_4E76
.text:0000000000004E72                 mov     [r14+r15], bl
.text:0000000000004E76
.text:0000000000004E76 loc_4E76:                               ; CODE XREF: quotearg_buffer_restyled+AB0↑j
.text:0000000000004E76                 movzx   ebx, byte ptr [rdi+rbp]
.text:0000000000004E7A                 add     r15, 1
.text:0000000000004E7E
.text:0000000000004E7E loc_4E7E:                               ; CODE XREF: quotearg_buffer_restyled+A03↑j
.text:0000000000004E7E                 test    dl, dl
.text:0000000000004E80                 jnz     loc_4DD0
.text:0000000000004E86                 mov     eax, esi
.text:0000000000004E88                 xor     eax, 1
.text:0000000000004E8B                 and     eax, r8d
.text:0000000000004E8E                 test    r10b, r10b
.text:0000000000004E91                 jz      short loc_4EA1
.text:0000000000004E93                 cmp     r13, r15
.text:0000000000004E96                 jbe     short loc_4E9D
.text:0000000000004E98                 mov     byte ptr [r14+r15], 5Ch ; '\'
.text:0000000000004E9D
.text:0000000000004E9D loc_4E9D:                               ; CODE XREF: quotearg_buffer_restyled+AD6↑j
.text:0000000000004E9D                 add     r15, 1
.text:0000000000004EA1
.text:0000000000004EA1 loc_4EA1:                               ; CODE XREF: quotearg_buffer_restyled+AD1↑j
.text:0000000000004EA1                 add     rbp, 1
.text:0000000000004EA5                 cmp     rbp, rcx
.text:0000000000004EA8                 jnb     loc_462C
.text:0000000000004EAE                 test    al, al
.text:0000000000004EB0                 jz      loc_52AE
.text:0000000000004EB6                 cmp     r13, r15
.text:0000000000004EB9                 jbe     short loc_4EC0
.text:0000000000004EBB                 mov     byte ptr [r14+r15], 27h ; '''
.text:0000000000004EC0
.text:0000000000004EC0 loc_4EC0:                               ; CODE XREF: quotearg_buffer_restyled+AF9↑j
.text:0000000000004EC0                 lea     rax, [r15+1]
.text:0000000000004EC4                 cmp     r13, rax
.text:0000000000004EC7                 jbe     short loc_4ECF
.text:0000000000004EC9                 mov     byte ptr [r14+r15+1], 27h ; '''
.text:0000000000004ECF
.text:0000000000004ECF loc_4ECF:                               ; CODE XREF: quotearg_buffer_restyled+B07↑j
.text:0000000000004ECF                 add     r15, 2
.text:0000000000004ED3                 xor     r10d, r10d
.text:0000000000004ED6                 xor     r8d, r8d
.text:0000000000004ED9                 jmp     short loc_4E6D
.text:0000000000004ED9 ; ---------------------------------------------------------------------------
.text:0000000000004EDB                 align 20h
.text:0000000000004EE0
.text:0000000000004EE0 loc_4EE0:                               ; CODE XREF: quotearg_buffer_restyled+983↑j
.text:0000000000004EE0                 cmp     r15, 1
.text:0000000000004EE4                 jz      loc_4D49
.text:0000000000004EEA                 mov     rdi, [rsp+0E8h+s]
.text:0000000000004EEF                 lea     rcx, [rdi+r15]
.text:0000000000004EF3                 lea     rdx, [rdi+r14+1]
.text:0000000000004EF8                 lea     r8, [rcx+r14]
.text:0000000000004EFC                 jmp     short loc_4F0D
.text:0000000000004EFC ; ---------------------------------------------------------------------------
.text:0000000000004EFE                 align 20h
.text:0000000000004F00
.text:0000000000004F00 loc_4F00:                               ; CODE XREF: quotearg_buffer_restyled+B56↓j
.text:0000000000004F00                                         ; quotearg_buffer_restyled+B70↓j
.text:0000000000004F00                 add     rdx, 1
.text:0000000000004F04                 cmp     r8, rdx
.text:0000000000004F07                 jz      loc_4D49
.text:0000000000004F0D
.text:0000000000004F0D loc_4F0D:                               ; CODE XREF: quotearg_buffer_restyled+B3C↑j
.text:0000000000004F0D                 movzx   ecx, byte ptr [rdx]
.text:0000000000004F10                 sub     ecx, 5Bh ; '['
.text:0000000000004F13                 cmp     cl, 21h ; '!'
.text:0000000000004F16                 ja      short loc_4F00
.text:0000000000004F18                 mov     esi, 1
.text:0000000000004F1D                 shl     rsi, cl
.text:0000000000004F20                 mov     rcx, rsi
.text:0000000000004F23                 mov     rsi, 20000002Bh
.text:0000000000004F2D                 test    rcx, rsi
.text:0000000000004F30                 jz      short loc_4F00
.text:0000000000004F32                 mov     r14, [rsp+0E8h+var_A8]
.text:0000000000004F37                 mov     r13, [rsp+0E8h+var_78]
.text:0000000000004F3C                 mov     rbp, [rsp+0E8h+var_B8]
.text:0000000000004F41                 mov     [rsp+0E8h+var_E0], 2
.text:0000000000004F49
.text:0000000000004F49 loc_4F49:                               ; CODE XREF: quotearg_buffer_restyled+489↑j
.text:0000000000004F49                                         ; quotearg_buffer_restyled+C0B↓j ...
.text:0000000000004F49                 cmp     [rsp+0E8h+var_DB], 0
.text:0000000000004F4E                 jz      short loc_4F60
.text:0000000000004F50                 test    al, al
.text:0000000000004F52                 mov     eax, 4
.text:0000000000004F57                 cmovz   eax, [rsp+0E8h+var_E0]
.text:0000000000004F5C                 mov     [rsp+0E8h+var_E0], eax
.text:0000000000004F60
.text:0000000000004F60 loc_4F60:                               ; CODE XREF: quotearg_buffer_restyled+B8E↑j
.text:0000000000004F60                                         ; quotearg_buffer_restyled+1205↓j
.text:0000000000004F60                 sub     rsp, 8
.text:0000000000004F64                 mov     rcx, rbp
.text:0000000000004F67                 mov     rsi, r13
.text:0000000000004F6A                 push    [rsp+0F0h+var_88]
.text:0000000000004F6E                 push    [rsp+0F8h+var_80]
.text:0000000000004F72                 mov     rdi, r14
.text:0000000000004F75                 push    0
.text:0000000000004F77                 mov     r9d, [rsp+108h+var_70]
.text:0000000000004F7F                 mov     r8d, [rsp+108h+var_E0]
.text:0000000000004F84                 mov     rdx, [rsp+108h+s]
.text:0000000000004F89                 and     r9d, 0FFFFFFFDh
.text:0000000000004F8D                 call    quotearg_buffer_restyled
.text:0000000000004F92                 add     rsp, 20h
.text:0000000000004F96                 mov     r15, rax
.text:0000000000004F99
.text:0000000000004F99 loc_4F99:                               ; CODE XREF: quotearg_buffer_restyled+1135↓j
.text:0000000000004F99                                         ; quotearg_buffer_restyled+1140↓j ...
.text:0000000000004F99                 mov     rbx, [rsp+0E8h+var_40]
.text:0000000000004FA1                 xor     rbx, fs:28h
.text:0000000000004FAA                 mov     rax, r15
.text:0000000000004FAD                 jnz     loc_55B3
.text:0000000000004FB3                 add     rsp, 0B8h
.text:0000000000004FBA                 pop     rbx
.text:0000000000004FBB                 pop     rbp
.text:0000000000004FBC                 pop     r12
.text:0000000000004FBE                 pop     r13
.text:0000000000004FC0                 pop     r14
.text:0000000000004FC2                 pop     r15
.text:0000000000004FC4                 retn
.text:0000000000004FC4 ; ---------------------------------------------------------------------------
.text:0000000000004FC5                 align 8
.text:0000000000004FC8
.text:0000000000004FC8 loc_4FC8:                               ; CODE XREF: quotearg_buffer_restyled+3B2↑j
.text:0000000000004FC8                 mov     rbp, r11
.text:0000000000004FCB                 jmp     loc_4F49
.text:0000000000004FD0 ; ---------------------------------------------------------------------------
.text:0000000000004FD0
.text:0000000000004FD0 loc_4FD0:                               ; CODE XREF: quotearg_buffer_restyled+80E↑j
.text:0000000000004FD0                                         ; quotearg_buffer_restyled+81C↑j
.text:0000000000004FD0                 cmp     r13, r15
.text:0000000000004FD3                 jbe     short loc_4FDA
.text:0000000000004FD5                 mov     byte ptr [r14+r15], 27h ; '''
.text:0000000000004FDA
.text:0000000000004FDA loc_4FDA:                               ; CODE XREF: quotearg_buffer_restyled+C13↑j
.text:0000000000004FDA                 lea     rax, [r15+1]
.text:0000000000004FDE                 cmp     r13, rax
.text:0000000000004FE1                 jbe     short loc_4FE9
.text:0000000000004FE3                 mov     byte ptr [r14+r15+1], 5Ch ; '\'
.text:0000000000004FE9
.text:0000000000004FE9 loc_4FE9:                               ; CODE XREF: quotearg_buffer_restyled+C21↑j
.text:0000000000004FE9                 lea     rax, [r15+2]
.text:0000000000004FED                 cmp     r13, rax
.text:0000000000004FF0                 jbe     loc_55E2
.text:0000000000004FF6                 mov     rdx, r13
.text:0000000000004FF9                 mov     byte ptr [r14+r15+2], 27h ; '''
.text:0000000000004FFF                 mov     r13, [rsp+0E8h+var_98]
.text:0000000000005004                 jmp     loc_4BE2
.text:0000000000005009 ; ---------------------------------------------------------------------------
.text:0000000000005009
.text:0000000000005009 loc_5009:                               ; CODE XREF: quotearg_buffer_restyled+643↑j
.text:0000000000005009                 mov     eax, r12d
.text:000000000000500C                 mov     ebx, 30h ; '0'
.text:0000000000005011                 xor     r12d, r12d
.text:0000000000005014                 jmp     loc_4619
.text:0000000000005019 ; ---------------------------------------------------------------------------
.text:0000000000005019
.text:0000000000005019 loc_5019:                               ; CODE XREF: quotearg_buffer_restyled+623↑j
.text:0000000000005019                 mov     byte ptr [r14+r15+2], 27h ; '''
.text:000000000000501F                 jmp     loc_49E9
.text:0000000000005024 ; ---------------------------------------------------------------------------
.text:0000000000005024
.text:0000000000005024 loc_5024:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000005024                                         ; DATA XREF: .rodata:jpt_4451↓o
.text:0000000000005024                 test    ebx, ebx        ; jumptable 00000000000121F1 case 4
.text:0000000000005026                 jnz     loc_4453        ; jumptable 00000000000121F1 case 1
.text:000000000000502C                 mov     [rsp+0E8h+var_DB], 1
.text:0000000000005031
.text:0000000000005031 loc_5031:                               ; CODE XREF: quotearg_buffer_restyled+11FD↓j
.text:0000000000005031                 test    r13, r13
.text:0000000000005034                 jnz     loc_55CA
.text:000000000000503A                 lea     rax, asc_83B5   ; "'"
.text:0000000000005041                 mov     [rsp+0E8h+var_98], 0
.text:000000000000504A                 mov     [rsp+0E8h+var_DA], 1
.text:000000000000504F                 mov     [rsp+0E8h+var_6C], 0
.text:0000000000005054                 xor     r12d, r12d
.text:0000000000005057                 mov     [rsp+0E8h+var_D9], 0
.text:000000000000505C                 mov     [rsp+0E8h+n], 1
.text:0000000000005065                 mov     [rsp+0E8h+s2], rax
.text:000000000000506A                 mov     r15d, 1
.text:0000000000005070                 mov     [rsp+0E8h+var_E0], 2
.text:0000000000005078                 jmp     loc_4493
.text:0000000000005078 ; ---------------------------------------------------------------------------
.text:000000000000507D                 align 20h
.text:0000000000005080
.text:0000000000005080 loc_5080:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000005080                                         ; DATA XREF: .rodata:jpt_4451↓o
.text:0000000000005080                 test    ebx, ebx        ; jumptable 00000000000121F1 case 5
.text:0000000000005082                 jnz     loc_547D
.text:0000000000005088                 test    r13, r13
.text:000000000000508B                 jz      loc_52B6
.text:0000000000005091                 mov     byte ptr [r14], 22h ; '"'
.text:0000000000005095                 mov     [rsp+0E8h+var_DA], 1
.text:000000000000509A                 xor     r12d, r12d
.text:000000000000509D                 mov     [rsp+0E8h+var_6C], 0
.text:00000000000050A2                 mov     [rsp+0E8h+var_98], 0
.text:00000000000050AB
.text:00000000000050AB loc_50AB:                               ; CODE XREF: quotearg_buffer_restyled+F0C↓j
.text:00000000000050AB                 lea     rax, unk_83B3
.text:00000000000050B2                 mov     [rsp+0E8h+var_D9], 0
.text:00000000000050B7                 mov     [rsp+0E8h+var_DB], 1
.text:00000000000050BC                 mov     [rsp+0E8h+n], 1
.text:00000000000050C5                 mov     r15d, 1
.text:00000000000050CB                 mov     [rsp+0E8h+s2], rax
.text:00000000000050D0                 jmp     loc_4493
.text:00000000000050D5 ; ---------------------------------------------------------------------------
.text:00000000000050D5
.text:00000000000050D5 loc_50D5:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:00000000000050D5                                         ; DATA XREF: .rodata:jpt_4451↓o
.text:00000000000050D5                 lea     rax, unk_83B3   ; jumptable 00000000000121F1 case 6
.text:00000000000050DC                 mov     [rsp+0E8h+var_DA], 1
.text:00000000000050E1                 mov     [rsp+0E8h+var_6C], 0
.text:00000000000050E6                 xor     r12d, r12d
.text:00000000000050E9                 mov     [rsp+0E8h+var_98], 0
.text:00000000000050F2                 mov     [rsp+0E8h+var_D9], 1
.text:00000000000050F7                 mov     [rsp+0E8h+var_DB], 1
.text:00000000000050FC                 mov     [rsp+0E8h+n], 1
.text:0000000000005105                 xor     r15d, r15d
.text:0000000000005108                 mov     [rsp+0E8h+s2], rax
.text:000000000000510D                 mov     [rsp+0E8h+var_E0], 5
.text:0000000000005115                 jmp     loc_4493
.text:000000000000511A ; ---------------------------------------------------------------------------
.text:000000000000511A
.text:000000000000511A loc_511A:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:000000000000511A                                         ; DATA XREF: .rodata:jpt_4451↓o
.text:000000000000511A                 mov     [rsp+0E8h+var_DA], 1 ; jumptable 00000000000121F1 case 7
.text:000000000000511F                 mov     [rsp+0E8h+var_6C], 0
.text:0000000000005124                 xor     r12d, r12d
.text:0000000000005127                 mov     [rsp+0E8h+var_98], 0
.text:0000000000005130                 mov     [rsp+0E8h+var_D9], 0
.text:0000000000005135                 xor     r15d, r15d
.text:0000000000005138                 mov     [rsp+0E8h+var_DB], 1
.text:000000000000513D                 mov     [rsp+0E8h+n], 0
.text:0000000000005146                 mov     [rsp+0E8h+s2], 0
.text:000000000000514F                 jmp     loc_4493
.text:0000000000005154 ; ---------------------------------------------------------------------------
.text:0000000000005154
.text:0000000000005154 loc_5154:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000005154                                         ; DATA XREF: .rodata:jpt_4451↓o
.text:0000000000005154                 cmp     [rsp+0E8h+var_E0], 0Ah ; jumptable 00000000000121F1 cases 8-10
.text:0000000000005159                 jz      short loc_51B1
.text:000000000000515B                 lea     rsi, asc_83B7   ; "`"
.text:0000000000005162                 xor     edi, edi        ; domainname
.text:0000000000005164                 mov     edx, 5          ; category
.text:0000000000005169                 call    _dcgettext
.text:000000000000516E                 mov     rcx, rax
.text:0000000000005171                 mov     [rsp+0E8h+var_80], rax
.text:0000000000005176                 lea     rax, asc_83B7   ; "`"
.text:000000000000517D                 cmp     rcx, rax
.text:0000000000005180                 jz      loc_551E
.text:0000000000005186
.text:0000000000005186 loc_5186:                               ; CODE XREF: quotearg_buffer_restyled+116F↓j
.text:0000000000005186                 lea     rsi, asc_83B5   ; "'"
.text:000000000000518D                 xor     edi, edi        ; domainname
.text:000000000000518F                 mov     edx, 5          ; category
.text:0000000000005194                 call    _dcgettext
.text:0000000000005199                 mov     rcx, rax
.text:000000000000519C                 mov     [rsp+0E8h+var_88], rax
.text:00000000000051A1                 lea     rax, asc_83B5   ; "'"
.text:00000000000051A8                 cmp     rcx, rax
.text:00000000000051AB                 jz      loc_5534
.text:00000000000051B1
.text:00000000000051B1 loc_51B1:                               ; CODE XREF: quotearg_buffer_restyled+D99↑j
.text:00000000000051B1                                         ; quotearg_buffer_restyled+1185↓j
.text:00000000000051B1                 xor     r15d, r15d
.text:00000000000051B4                 test    ebx, ebx
.text:00000000000051B6                 jz      loc_537D
.text:00000000000051BC
.text:00000000000051BC loc_51BC:                               ; CODE XREF: quotearg_buffer_restyled+FC7↓j
.text:00000000000051BC                                         ; quotearg_buffer_restyled+FE6↓j
.text:00000000000051BC                 test    ebx, ebx
.text:00000000000051BE                 mov     rbx, [rsp+0E8h+var_88]
.text:00000000000051C3                 setnz   [rsp+0E8h+var_D9]
.text:00000000000051C8                 xor     r12d, r12d
.text:00000000000051CB                 mov     rdi, rbx        ; s
.text:00000000000051CE                 call    _strlen
.text:00000000000051D3                 mov     [rsp+0E8h+s2], rbx
.text:00000000000051D8                 mov     [rsp+0E8h+n], rax
.text:00000000000051DD                 mov     [rsp+0E8h+var_DA], 1
.text:00000000000051E2                 mov     [rsp+0E8h+var_6C], 0
.text:00000000000051E7                 mov     [rsp+0E8h+var_98], 0
.text:00000000000051F0                 mov     [rsp+0E8h+var_DB], 1
.text:00000000000051F5                 jmp     loc_4493
.text:00000000000051FA ; ---------------------------------------------------------------------------
.text:00000000000051FA
.text:00000000000051FA loc_51FA:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:00000000000051FA                                         ; DATA XREF: .rodata:jpt_4451↓o
.text:00000000000051FA                 mov     [rsp+0E8h+var_DA], 1 ; jumptable 00000000000121F1 case 0
.text:00000000000051FF                 mov     [rsp+0E8h+var_6C], 0
.text:0000000000005204                 xor     r12d, r12d
.text:0000000000005207                 mov     [rsp+0E8h+var_98], 0
.text:0000000000005210                 mov     [rsp+0E8h+var_D9], 0
.text:0000000000005215                 xor     r15d, r15d
.text:0000000000005218                 mov     [rsp+0E8h+var_DB], 0
.text:000000000000521D                 mov     [rsp+0E8h+n], 0
.text:0000000000005226                 mov     [rsp+0E8h+s2], 0
.text:000000000000522F                 jmp     loc_4493
.text:0000000000005234 ; ---------------------------------------------------------------------------
.text:0000000000005234
.text:0000000000005234 loc_5234:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000005234                                         ; DATA XREF: .rodata:jpt_4451↓o
.text:0000000000005234                 mov     [rsp+0E8h+var_DA], 1 ; jumptable 00000000000121F1 case 3
.text:0000000000005239                 mov     [rsp+0E8h+var_6C], 0
.text:000000000000523E                 xor     r12d, r12d
.text:0000000000005241                 mov     [rsp+0E8h+var_98], 0
.text:000000000000524A                 mov     [rsp+0E8h+var_D9], 1
.text:000000000000524F                 mov     [rsp+0E8h+var_DB], 1
.text:0000000000005254                 jmp     loc_4473
.text:0000000000005259 ; ---------------------------------------------------------------------------
.text:0000000000005259
.text:0000000000005259 loc_5259:                               ; CODE XREF: quotearg_buffer_restyled+665↑j
.text:0000000000005259                 cmp     r13, r15
.text:000000000000525C                 jbe     short loc_5263
.text:000000000000525E                 mov     byte ptr [r14+r15], 30h ; '0'
.text:0000000000005263
.text:0000000000005263 loc_5263:                               ; CODE XREF: quotearg_buffer_restyled+E9C↑j
.text:0000000000005263                 lea     rax, [rcx+2]
.text:0000000000005267                 cmp     r13, rax
.text:000000000000526A                 jbe     short loc_5272
.text:000000000000526C                 mov     byte ptr [r14+rcx+2], 30h ; '0'
.text:0000000000005272
.text:0000000000005272 loc_5272:                               ; CODE XREF: quotearg_buffer_restyled+EAA↑j
.text:0000000000005272                 mov     eax, r12d
.text:0000000000005275                 lea     r15, [rcx+3]
.text:0000000000005279                 xor     r12d, r12d
.text:000000000000527C                 mov     ebx, 30h ; '0'
.text:0000000000005281                 jmp     loc_45E8
.text:0000000000005281 ; ---------------------------------------------------------------------------
.text:0000000000005286                 align 10h
.text:0000000000005290
.text:0000000000005290 loc_5290:                               ; CODE XREF: quotearg_buffer_restyled+A1B↑j
.text:0000000000005290                 movzx   ebx, [rsp+0E8h+var_D9]
.text:0000000000005295                 mov     rbp, r11
.text:0000000000005298                 mov     [rsp+0E8h+var_DB], bl
.text:000000000000529C                 jmp     loc_4F49
.text:00000000000052A1 ; ---------------------------------------------------------------------------
.text:00000000000052A1
.text:00000000000052A1 loc_52A1:                               ; CODE XREF: quotearg_buffer_restyled+549↑j
.text:00000000000052A1                 movzx   edx, [rsp+0E8h+var_DB]
.text:00000000000052A6                 xor     r12d, r12d
.text:00000000000052A9                 jmp     loc_4DB0
.text:00000000000052AE ; ---------------------------------------------------------------------------
.text:00000000000052AE
.text:00000000000052AE loc_52AE:                               ; CODE XREF: quotearg_buffer_restyled+AF0↑j
.text:00000000000052AE                 xor     r10d, r10d
.text:00000000000052B1                 jmp     loc_4E6D
.text:00000000000052B6 ; ---------------------------------------------------------------------------
.text:00000000000052B6
.text:00000000000052B6 loc_52B6:                               ; CODE XREF: quotearg_buffer_restyled+CCB↑j
.text:00000000000052B6                 mov     [rsp+0E8h+var_98], 0
.text:00000000000052BF                 mov     [rsp+0E8h+var_DA], 1
.text:00000000000052C4                 xor     r12d, r12d
.text:00000000000052C7                 mov     [rsp+0E8h+var_6C], 0
.text:00000000000052CC                 jmp     loc_50AB
.text:00000000000052D1 ; ---------------------------------------------------------------------------
.text:00000000000052D1
.text:00000000000052D1 loc_52D1:                               ; CODE XREF: quotearg_buffer_restyled+971↑j
.text:00000000000052D1                 mov     r11, [rsp+0E8h+var_B8]
.text:00000000000052D6                 mov     rsi, r14
.text:00000000000052D9                 mov     rcx, r13
.text:00000000000052DC                 mov     rax, rbx
.text:00000000000052DF                 mov     rdi, rbx
.text:00000000000052E2                 movzx   r8d, [rsp+0E8h+var_6B]
.text:00000000000052E8                 movzx   ebx, [rsp+0E8h+var_6A]
.text:00000000000052ED                 mov     r9, [rsp+0E8h+var_60]
.text:00000000000052F5                 cmp     rsi, r11
.text:00000000000052F8                 movzx   r10d, [rsp+0E8h+var_69]
.text:00000000000052FE                 mov     r15, [rsp+0E8h+var_68]
.text:0000000000005306                 mov     r14, [rsp+0E8h+var_A8]
.text:000000000000530B                 mov     r13, [rsp+0E8h+var_78]
.text:0000000000005310                 jnb     short loc_5338
.text:0000000000005312                 cmp     byte ptr [rcx], 0
.text:0000000000005315                 jnz     short loc_5327
.text:0000000000005317                 jmp     short loc_5338
.text:0000000000005317 ; ---------------------------------------------------------------------------
.text:0000000000005319                 align 20h
.text:0000000000005320
.text:0000000000005320 loc_5320:                               ; CODE XREF: quotearg_buffer_restyled+F73↓j
.text:0000000000005320                 cmp     byte ptr [r9+rax], 0
.text:0000000000005325                 jz      short loc_5335
.text:0000000000005327
.text:0000000000005327 loc_5327:                               ; CODE XREF: quotearg_buffer_restyled+F55↑j
.text:0000000000005327                 add     rax, 1
.text:000000000000532B                 lea     rdx, [rbp+rax+0]
.text:0000000000005330                 cmp     r11, rdx
.text:0000000000005333                 ja      short loc_5320
.text:0000000000005335
.text:0000000000005335 loc_5335:                               ; CODE XREF: quotearg_buffer_restyled+F65↑j
.text:0000000000005335                 mov     rdi, rax
.text:0000000000005338
.text:0000000000005338 loc_5338:                               ; CODE XREF: quotearg_buffer_restyled+F50↑j
.text:0000000000005338                                         ; quotearg_buffer_restyled+F57↑j
.text:0000000000005338                 movzx   edx, [rsp+0E8h+var_DB]
.text:000000000000533D                 xor     r12d, r12d
.text:0000000000005340                 jmp     loc_4DA6
.text:0000000000005345 ; ---------------------------------------------------------------------------
.text:0000000000005345
.text:0000000000005345 loc_5345:                               ; CODE XREF: quotearg_buffer_restyled+967↑j
.text:0000000000005345                 mov     rdi, rbx
.text:0000000000005348                 movzx   r8d, [rsp+0E8h+var_6B]
.text:000000000000534E                 movzx   ebx, [rsp+0E8h+var_6A]
.text:0000000000005353                 movzx   r10d, [rsp+0E8h+var_69]
.text:0000000000005359                 mov     r15, [rsp+0E8h+var_68]
.text:0000000000005361                 xor     r12d, r12d
.text:0000000000005364                 mov     r14, [rsp+0E8h+var_A8]
.text:0000000000005369                 mov     r13, [rsp+0E8h+var_78]
.text:000000000000536E                 mov     r11, [rsp+0E8h+var_B8]
.text:0000000000005373                 movzx   edx, [rsp+0E8h+var_DB]
.text:0000000000005378                 jmp     loc_4DA6
.text:000000000000537D ; ---------------------------------------------------------------------------
.text:000000000000537D
.text:000000000000537D loc_537D:                               ; CODE XREF: quotearg_buffer_restyled+DF6↑j
.text:000000000000537D                 mov     rdx, [rsp+0E8h+var_80]
.text:0000000000005382                 movzx   eax, byte ptr [rdx]
.text:0000000000005385                 test    al, al
.text:0000000000005387                 jz      loc_51BC
.text:000000000000538D                 nop     dword ptr [rax]
.text:0000000000005390
.text:0000000000005390 loc_5390:                               ; CODE XREF: quotearg_buffer_restyled+FE4↓j
.text:0000000000005390                 cmp     r13, r15
.text:0000000000005393                 jbe     short loc_5399
.text:0000000000005395                 mov     [r14+r15], al
.text:0000000000005399
.text:0000000000005399 loc_5399:                               ; CODE XREF: quotearg_buffer_restyled+FD3↑j
.text:0000000000005399                 add     r15, 1
.text:000000000000539D                 movzx   eax, byte ptr [rdx+r15]
.text:00000000000053A2                 test    al, al
.text:00000000000053A4                 jnz     short loc_5390
.text:00000000000053A6                 jmp     loc_51BC
.text:00000000000053AB ; ---------------------------------------------------------------------------
.text:00000000000053AB
.text:00000000000053AB loc_53AB:                               ; CODE XREF: quotearg_buffer_restyled+9EA↑j
.text:00000000000053AB                 mov     eax, edx
.text:00000000000053AD                 jmp     loc_4907
.text:00000000000053B2 ; ---------------------------------------------------------------------------
.text:00000000000053B2
.text:00000000000053B2 loc_53B2:                               ; CODE XREF: quotearg_buffer_restyled+862↑j
.text:00000000000053B2                 movzx   ebx, byte ptr [rax+rcx]
.text:00000000000053B6                 cmp     bl, 3Eh ; '>'
.text:00000000000053B9                 ja      loc_4C30
.text:00000000000053BF                 mov     rax, 7000A38200000000h
.text:00000000000053C9                 bt      rax, rbx
.text:00000000000053CD                 jnb     loc_4C30
.text:00000000000053D3                 cmp     [rsp+0E8h+var_D9], 0
.text:00000000000053D8                 jnz     loc_55C2
.text:00000000000053DE                 cmp     r13, r15
.text:00000000000053E1                 jbe     short loc_53E8
.text:00000000000053E3                 mov     byte ptr [r14+r15], 3Fh ; '?'
.text:00000000000053E8
.text:00000000000053E8 loc_53E8:                               ; CODE XREF: quotearg_buffer_restyled+1021↑j
.text:00000000000053E8                 lea     rax, [r15+1]
.text:00000000000053EC                 cmp     r13, rax
.text:00000000000053EF                 jbe     short loc_53F7
.text:00000000000053F1                 mov     byte ptr [r14+r15+1], 22h ; '"'
.text:00000000000053F7
.text:00000000000053F7 loc_53F7:                               ; CODE XREF: quotearg_buffer_restyled+102F↑j
.text:00000000000053F7                 lea     rax, [r15+2]
.text:00000000000053FB                 cmp     r13, rax
.text:00000000000053FE                 jbe     short loc_5406
.text:0000000000005400                 mov     byte ptr [r14+r15+2], 22h ; '"'
.text:0000000000005406
.text:0000000000005406 loc_5406:                               ; CODE XREF: quotearg_buffer_restyled+103E↑j
.text:0000000000005406                 lea     rax, [r15+3]
.text:000000000000540A                 cmp     r13, rax
.text:000000000000540D                 jbe     short loc_5415
.text:000000000000540F                 mov     byte ptr [r14+r15+3], 3Fh ; '?'
.text:0000000000005415
.text:0000000000005415 loc_5415:                               ; CODE XREF: quotearg_buffer_restyled+104D↑j
.text:0000000000005415                 add     r15, 4
.text:0000000000005419                 xor     edx, edx
.text:000000000000541B                 xor     r12d, r12d
.text:000000000000541E                 xor     eax, eax
.text:0000000000005420                 mov     rbp, rcx
.text:0000000000005423                 jmp     loc_45E8
.text:0000000000005428 ; ---------------------------------------------------------------------------
.text:0000000000005428
.text:0000000000005428 loc_5428:                               ; CODE XREF: quotearg_buffer_restyled+91↑j
.text:0000000000005428                                         ; DATA XREF: .rodata:jpt_4451↓o
.text:0000000000005428                 test    ebx, ebx        ; jumptable 00000000000121F1 case 2
.text:000000000000542A                 jz      loc_55B8
.text:0000000000005430                 lea     rax, asc_83B5   ; "'"
.text:0000000000005437                 mov     [rsp+0E8h+var_DA], 1
.text:000000000000543C                 mov     [rsp+0E8h+var_6C], 0
.text:0000000000005441                 xor     r12d, r12d
.text:0000000000005444                 mov     [rsp+0E8h+var_98], 0
.text:000000000000544D                 mov     [rsp+0E8h+var_D9], 1
.text:0000000000005452                 mov     [rsp+0E8h+var_DB], 0
.text:0000000000005457                 mov     [rsp+0E8h+n], 1
.text:0000000000005460                 xor     r15d, r15d
.text:0000000000005463                 mov     [rsp+0E8h+s2], rax
.text:0000000000005468                 jmp     loc_4493
.text:0000000000005468 ; ---------------------------------------------------------------------------
.text:000000000000546D                 align 10h
.text:0000000000005470
.text:0000000000005470 loc_5470:                               ; CODE XREF: quotearg_buffer_restyled+745↑j
.text:0000000000005470                                         ; quotearg_buffer_restyled+805↑j ...
.text:0000000000005470                 mov     rbp, r11
.text:0000000000005473                 movzx   eax, [rsp+0E8h+var_D9]
.text:0000000000005478                 jmp     loc_4F49
.text:000000000000547D ; ---------------------------------------------------------------------------
.text:000000000000547D
.text:000000000000547D loc_547D:                               ; CODE XREF: quotearg_buffer_restyled+CC2↑j
.text:000000000000547D                 lea     rax, unk_83B3
.text:0000000000005484                 mov     [rsp+0E8h+var_DA], 1
.text:0000000000005489                 mov     [rsp+0E8h+var_6C], 0
.text:000000000000548E                 xor     r12d, r12d
.text:0000000000005491                 mov     [rsp+0E8h+var_98], 0
.text:000000000000549A                 mov     [rsp+0E8h+var_D9], 1
.text:000000000000549F                 mov     [rsp+0E8h+var_DB], 1
.text:00000000000054A4                 mov     [rsp+0E8h+n], 1
.text:00000000000054AD                 xor     r15d, r15d
.text:00000000000054B0                 mov     [rsp+0E8h+s2], rax
.text:00000000000054B5                 jmp     loc_4493
.text:00000000000054BA ; ---------------------------------------------------------------------------
.text:00000000000054BA
.text:00000000000054BA loc_54BA:                               ; CODE XREF: quotearg_buffer_restyled+797↑j
.text:00000000000054BA                 mov     eax, edx
.text:00000000000054BC
.text:00000000000054BC loc_54BC:                               ; CODE XREF: quotearg_buffer_restyled+78C↑j
.text:00000000000054BC                                         ; quotearg_buffer_restyled+11E1↓j
.text:00000000000054BC                 mov     rbx, [rsp+0E8h+s2]
.text:00000000000054C1                 test    rbx, rbx
.text:00000000000054C4                 jz      short loc_54F2
.text:00000000000054C6                 test    al, al
.text:00000000000054C8                 jz      short loc_54F2
.text:00000000000054CA                 movzx   ecx, byte ptr [rbx]
.text:00000000000054CD                 mov     rax, rbx
.text:00000000000054D0                 test    cl, cl
.text:00000000000054D2                 jz      short loc_54F2
.text:00000000000054D4                 mov     rdx, r15
.text:00000000000054D7                 sub     rax, r15
.text:00000000000054DA
.text:00000000000054DA loc_54DA:                               ; CODE XREF: quotearg_buffer_restyled+112D↓j
.text:00000000000054DA                 cmp     r13, rdx
.text:00000000000054DD                 jbe     short loc_54E3
.text:00000000000054DF                 mov     [r14+rdx], cl
.text:00000000000054E3
.text:00000000000054E3 loc_54E3:                               ; CODE XREF: quotearg_buffer_restyled+111D↑j
.text:00000000000054E3                 add     rdx, 1
.text:00000000000054E7                 movzx   ecx, byte ptr [rax+rdx]
.text:00000000000054EB                 test    cl, cl
.text:00000000000054ED                 jnz     short loc_54DA
.text:00000000000054EF                 mov     r15, rdx
.text:00000000000054F2
.text:00000000000054F2 loc_54F2:                               ; CODE XREF: quotearg_buffer_restyled+1104↑j
.text:00000000000054F2                                         ; quotearg_buffer_restyled+1108↑j ...
.text:00000000000054F2                 cmp     r13, r15
.text:00000000000054F5                 jbe     loc_4F99
.text:00000000000054FB                 mov     byte ptr [r14+r15], 0
.text:0000000000005500                 jmp     loc_4F99
.text:0000000000005505 ; ---------------------------------------------------------------------------
.text:0000000000005505
.text:0000000000005505 loc_5505:                               ; CODE XREF: quotearg_buffer_restyled+1C2↑j
.text:0000000000005505                 cmp     [rsp+0E8h+var_E0], 2
.text:000000000000550A                 movzx   ebx, [rsp+0E8h+var_D9]
.text:000000000000550F                 mov     rbp, r11
.text:0000000000005512                 setz    al
.text:0000000000005515                 mov     [rsp+0E8h+var_DB], bl
.text:0000000000005519                 jmp     loc_4F49
.text:000000000000551E ; ---------------------------------------------------------------------------
.text:000000000000551E
.text:000000000000551E loc_551E:                               ; CODE XREF: quotearg_buffer_restyled+DC0↑j
.text:000000000000551E                 mov     esi, [rsp+0E8h+var_E0]
.text:0000000000005522                 mov     rdi, rcx
.text:0000000000005525                 call    gettext_quote
.text:000000000000552A                 mov     [rsp+0E8h+var_80], rax
.text:000000000000552F                 jmp     loc_5186
.text:0000000000005534 ; ---------------------------------------------------------------------------
.text:0000000000005534
.text:0000000000005534 loc_5534:                               ; CODE XREF: quotearg_buffer_restyled+DEB↑j
.text:0000000000005534                 mov     esi, [rsp+0E8h+var_E0]
.text:0000000000005538                 mov     rdi, rcx
.text:000000000000553B                 call    gettext_quote
.text:0000000000005540                 mov     [rsp+0E8h+var_88], rax
.text:0000000000005545                 jmp     loc_51B1
.text:000000000000554A ; ---------------------------------------------------------------------------
.text:000000000000554A
.text:000000000000554A loc_554A:                               ; CODE XREF: quotearg_buffer_restyled+5F0↑j
.text:000000000000554A                 movzx   ebx, [rsp+0E8h+var_D9]
.text:000000000000554F                 mov     rbp, r11
.text:0000000000005552                 mov     eax, edx
.text:0000000000005554                 mov     [rsp+0E8h+var_DB], bl
.text:0000000000005558                 jmp     loc_4F49
.text:000000000000555D ; ---------------------------------------------------------------------------
.text:000000000000555D
.text:000000000000555D loc_555D:                               ; CODE XREF: quotearg_buffer_restyled+7A2↑j
.text:000000000000555D                 sub     rsp, 8
.text:0000000000005561                 mov     r8d, 5
.text:0000000000005567                 mov     rcx, r11
.text:000000000000556A                 push    [rsp+0F0h+var_88]
.text:000000000000556E                 push    [rsp+0F8h+var_80]
.text:0000000000005572                 mov     rdi, r14
.text:0000000000005575                 push    [rsp+100h+var_C8]
.text:0000000000005579                 mov     r9d, [rsp+108h+var_70]
.text:0000000000005581                 mov     rdx, [rsp+108h+s]
.text:0000000000005586                 mov     rsi, [rsp+108h+var_98]
.text:000000000000558B                 call    quotearg_buffer_restyled
.text:0000000000005590                 add     rsp, 20h
.text:0000000000005594                 mov     r15, rax
.text:0000000000005597                 jmp     loc_4F99
.text:000000000000559C ; ---------------------------------------------------------------------------
.text:000000000000559C
.text:000000000000559C loc_559C:                               ; CODE XREF: quotearg_buffer_restyled+7B9↑j
.text:000000000000559C                 movzx   eax, [rsp+0E8h+var_6C]
.text:00000000000055A1                 jmp     loc_54BC
.text:00000000000055A6 ; ---------------------------------------------------------------------------
.text:00000000000055A6
.text:00000000000055A6 loc_55A6:                               ; CODE XREF: quotearg_buffer_restyled+77F↑j
.text:00000000000055A6                 mov     [rsp+0E8h+var_E0], 2
.text:00000000000055AE                 jmp     loc_4F49
.text:00000000000055B3 ; ---------------------------------------------------------------------------
.text:00000000000055B3
.text:00000000000055B3 loc_55B3:                               ; CODE XREF: quotearg_buffer_restyled+BED↑j
.text:00000000000055B3                 call    ___stack_chk_fail
.text:00000000000055B8 ; ---------------------------------------------------------------------------
.text:00000000000055B8
.text:00000000000055B8 loc_55B8:                               ; CODE XREF: quotearg_buffer_restyled+106A↑j
.text:00000000000055B8                 mov     [rsp+0E8h+var_DB], 0
.text:00000000000055BD                 jmp     loc_5031
.text:00000000000055C2 ; ---------------------------------------------------------------------------
.text:00000000000055C2
.text:00000000000055C2 loc_55C2:                               ; CODE XREF: quotearg_buffer_restyled+1018↑j
.text:00000000000055C2                 mov     rbp, r11
.text:00000000000055C5                 jmp     loc_4F60
.text:00000000000055CA ; ---------------------------------------------------------------------------
.text:00000000000055CA
.text:00000000000055CA loc_55CA:                               ; CODE XREF: quotearg_buffer_restyled+C74↑j
.text:00000000000055CA                 mov     [rsp+0E8h+var_DA], 1
.text:00000000000055CF                 xor     eax, eax
.text:00000000000055D1                 xor     r12d, r12d
.text:00000000000055D4                 mov     [rsp+0E8h+var_98], 0
.text:00000000000055DD                 jmp     loc_4B84
.text:00000000000055E2 ; ---------------------------------------------------------------------------
.text:00000000000055E2
.text:00000000000055E2 loc_55E2:                               ; CODE XREF: quotearg_buffer_restyled+C30↑j
.text:00000000000055E2                 mov     rdx, r13
.text:00000000000055E5                 mov     r13, [rsp+0E8h+var_98]
.text:00000000000055EA                 jmp     loc_4BE2
.text:00000000000055EF ; ---------------------------------------------------------------------------
.text:00000000000055EF
.text:00000000000055EF def_4451:                               ; CODE XREF: quotearg_buffer_restyled+7A↑j
.text:00000000000055EF                 call    _abort          ; jumptable 00000000000121F1 default case
.text:00000000000055EF ; } // starts at 43C0
.text:00000000000055EF quotearg_buffer_restyled endp
.text:00000000000055EF
.text:00000000000055EF ; ---------------------------------------------------------------------------
.text:00000000000055F4                 align 20h
.text:0000000000005600
.text:0000000000005600 ; =============== S U B R O U T I N E =======================================
.text:0000000000005600
.text:0000000000005600
.text:0000000000005600 quotearg_n_options proc near            ; CODE XREF: quotearg_n+E↓j
.text:0000000000005600                                         ; quotearg_n_mem+7↓j ...
.text:0000000000005600
.text:0000000000005600 var_50          = qword ptr -50h
.text:0000000000005600 var_48          = qword ptr -48h
.text:0000000000005600 var_40          = dword ptr -40h
.text:0000000000005600 var_3C          = dword ptr -3Ch
.text:0000000000005600
.text:0000000000005600 ; __unwind {
.text:0000000000005600                 push    r15
.text:0000000000005602                 push    r14
.text:0000000000005604                 movsxd  r15, edi
.text:0000000000005607                 push    r13
.text:0000000000005609                 push    r12
.text:000000000000560B                 mov     r14, rdx
.text:000000000000560E                 push    rbp
.text:000000000000560F                 push    rbx
.text:0000000000005610                 mov     rbp, rcx
.text:0000000000005613                 sub     rsp, 28h
.text:0000000000005617                 mov     [rsp+58h+var_50], rsi
.text:000000000000561C                 call    ___errno_location
.text:0000000000005621                 mov     r13, rax
.text:0000000000005624                 mov     eax, [rax]
.text:0000000000005626                 test    r15d, r15d
.text:0000000000005629                 mov     rbx, cs:slotvec
.text:0000000000005630                 mov     [rsp+58h+var_40], eax
.text:0000000000005634                 js      loc_57A1
.text:000000000000563A                 cmp     cs:nslots, r15d
.text:0000000000005641                 jg      short loc_56A5
.text:0000000000005643                 cmp     r15d, 7FFFFFFFh
.text:000000000000564A                 jz      loc_57A6
.text:0000000000005650                 lea     r12d, [r15+1]
.text:0000000000005654                 lea     rax, slotvec0
.text:000000000000565B                 movsxd  rsi, r12d
.text:000000000000565E                 shl     rsi, 4
.text:0000000000005662                 cmp     rbx, rax
.text:0000000000005665                 jz      loc_5780
.text:000000000000566B                 mov     rdi, rbx
.text:000000000000566E                 call    xrealloc
.text:0000000000005673                 mov     rbx, rax
.text:0000000000005676                 mov     cs:slotvec, rax
.text:000000000000567D
.text:000000000000567D loc_567D:                               ; CODE XREF: quotearg_n_options+19C↓j
.text:000000000000567D                 movsxd  rdi, cs:nslots
.text:0000000000005684                 mov     edx, r12d
.text:0000000000005687                 xor     esi, esi        ; c
.text:0000000000005689                 sub     edx, edi
.text:000000000000568B                 shl     rdi, 4
.text:000000000000568F                 movsxd  rdx, edx
.text:0000000000005692                 add     rdi, rbx        ; s
.text:0000000000005695                 shl     rdx, 4          ; n
.text:0000000000005699                 call    _memset
.text:000000000000569E                 mov     cs:nslots, r12d
.text:00000000000056A5
.text:00000000000056A5 loc_56A5:                               ; CODE XREF: quotearg_n_options+41↑j
.text:00000000000056A5                 mov     eax, [rbp+4]
.text:00000000000056A8                 shl     r15, 4
.text:00000000000056AC                 sub     rsp, 8
.text:00000000000056B0                 add     rbx, r15
.text:00000000000056B3                 lea     r15, [rbp+8]
.text:00000000000056B7                 mov     r8d, [rbp+0]
.text:00000000000056BB                 mov     r11, [rbx]
.text:00000000000056BE                 mov     r12, [rbx+8]
.text:00000000000056C2                 mov     rcx, r14
.text:00000000000056C5                 or      eax, 1
.text:00000000000056C8                 mov     [rsp+60h+var_3C], eax
.text:00000000000056CC                 push    qword ptr [rbp+30h]
.text:00000000000056CF                 mov     r9d, eax
.text:00000000000056D2                 push    qword ptr [rbp+28h]
.text:00000000000056D5                 push    r15
.text:00000000000056D7                 mov     rsi, r11
.text:00000000000056DA                 mov     rdx, [rsp+78h+var_50]
.text:00000000000056DF                 mov     rdi, r12
.text:00000000000056E2                 mov     [rsp+78h+var_48], r11
.text:00000000000056E7                 call    quotearg_buffer_restyled
.text:00000000000056EC                 add     rsp, 20h
.text:00000000000056F0                 mov     r11, [rsp+58h+var_48]
.text:00000000000056F5                 cmp     r11, rax
.text:00000000000056F8                 ja      short loc_5761
.text:00000000000056FA                 lea     rsi, [rax+1]
.text:00000000000056FE                 lea     rax, slot0
.text:0000000000005705                 cmp     r12, rax
.text:0000000000005708                 mov     [rbx], rsi
.text:000000000000570B                 jz      short loc_571F
.text:000000000000570D                 mov     rdi, r12        ; ptr
.text:0000000000005710                 mov     [rsp+58h+var_48], rsi
.text:0000000000005715                 call    _free
.text:000000000000571A                 mov     rsi, [rsp+58h+var_48]
.text:000000000000571F
.text:000000000000571F loc_571F:                               ; CODE XREF: quotearg_n_options+10B↑j
.text:000000000000571F                 mov     rdi, rsi
.text:0000000000005722                 mov     [rsp+58h+var_48], rsi
.text:0000000000005727                 call    xmalloc
.text:000000000000572C                 sub     rsp, 8
.text:0000000000005730                 mov     [rbx+8], rax
.text:0000000000005734                 mov     r8d, [rbp+0]
.text:0000000000005738                 push    qword ptr [rbp+30h]
.text:000000000000573B                 push    qword ptr [rbp+28h]
.text:000000000000573E                 mov     rcx, r14
.text:0000000000005741                 push    r15
.text:0000000000005743                 mov     r9d, [rsp+78h+var_3C]
.text:0000000000005748                 mov     rdi, rax
.text:000000000000574B                 mov     rdx, [rsp+78h+var_50]
.text:0000000000005750                 mov     rsi, [rsp+78h+var_48]
.text:0000000000005755                 mov     r12, rax
.text:0000000000005758                 call    quotearg_buffer_restyled
.text:000000000000575D                 add     rsp, 20h
.text:0000000000005761
.text:0000000000005761 loc_5761:                               ; CODE XREF: quotearg_n_options+F8↑j
.text:0000000000005761                 mov     eax, [rsp+58h+var_40]
.text:0000000000005765                 mov     [r13+0], eax
.text:0000000000005769                 add     rsp, 28h
.text:000000000000576D                 mov     rax, r12
.text:0000000000005770                 pop     rbx
.text:0000000000005771                 pop     rbp
.text:0000000000005772                 pop     r12
.text:0000000000005774                 pop     r13
.text:0000000000005776                 pop     r14
.text:0000000000005778                 pop     r15
.text:000000000000577A                 retn
.text:000000000000577A ; ---------------------------------------------------------------------------
.text:000000000000577B                 align 20h
.text:0000000000005780
.text:0000000000005780 loc_5780:                               ; CODE XREF: quotearg_n_options+65↑j
.text:0000000000005780                 xor     edi, edi
.text:0000000000005782                 call    xrealloc
.text:0000000000005787                 movdqa  xmm0, xmmword ptr cs:slotvec0
.text:000000000000578F                 mov     rbx, rax
.text:0000000000005792                 mov     cs:slotvec, rax
.text:0000000000005799                 movups  xmmword ptr [rax], xmm0
.text:000000000000579C                 jmp     loc_567D
.text:00000000000057A1 ; ---------------------------------------------------------------------------
.text:00000000000057A1
.text:00000000000057A1 loc_57A1:                               ; CODE XREF: quotearg_n_options+34↑j
.text:00000000000057A1                 call    _abort
.text:00000000000057A6 ; ---------------------------------------------------------------------------
.text:00000000000057A6
.text:00000000000057A6 loc_57A6:                               ; CODE XREF: quotearg_n_options+4A↑j
.text:00000000000057A6                 call    xalloc_die
.text:00000000000057A6 ; } // starts at 5600
.text:00000000000057A6 quotearg_n_options endp
.text:00000000000057A6
.text:00000000000057A6 ; ---------------------------------------------------------------------------
.text:00000000000057AB                 align 10h
.text:00000000000057B0
.text:00000000000057B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000057B0
.text:00000000000057B0 ; Attributes: info_from_lumina
.text:00000000000057B0
.text:00000000000057B0 ; quoting_options *__fastcall clone_quoting_options(quoting_options *o)
.text:00000000000057B0                 public clone_quoting_options
.text:00000000000057B0 clone_quoting_options proc near
.text:00000000000057B0 ; __unwind {
.text:00000000000057B0                 push    r12
.text:00000000000057B2                 push    rbp
.text:00000000000057B3                 push    rbx
.text:00000000000057B4                 mov     rbx, rdi
.text:00000000000057B7                 call    ___errno_location
.text:00000000000057BC                 mov     r12d, [rax]
.text:00000000000057BF                 mov     rbp, rax
.text:00000000000057C2                 lea     rax, default_quoting_options
.text:00000000000057C9                 test    rbx, rbx
.text:00000000000057CC                 mov     esi, 38h ; '8'  ; n
.text:00000000000057D1                 cmovz   rbx, rax
.text:00000000000057D5                 mov     rdi, rbx        ; src
.text:00000000000057D8                 call    xmemdup
.text:00000000000057DD                 mov     [rbp+0], r12d
.text:00000000000057E1                 pop     rbx
.text:00000000000057E2                 pop     rbp
.text:00000000000057E3                 pop     r12
.text:00000000000057E5                 retn
.text:00000000000057E5 ; } // starts at 57B0
.text:00000000000057E5 clone_quoting_options endp
.text:00000000000057E5
.text:00000000000057E5 ; ---------------------------------------------------------------------------
.text:00000000000057E6                 align 10h
.text:00000000000057F0
.text:00000000000057F0 ; =============== S U B R O U T I N E =======================================
.text:00000000000057F0
.text:00000000000057F0
.text:00000000000057F0                 public get_quoting_style
.text:00000000000057F0 get_quoting_style proc near
.text:00000000000057F0 ; __unwind {
.text:00000000000057F0                 lea     rax, default_quoting_options
.text:00000000000057F7                 test    rdi, rdi
.text:00000000000057FA                 cmovz   rdi, rax
.text:00000000000057FE                 mov     eax, [rdi]
.text:0000000000005800                 retn
.text:0000000000005800 ; } // starts at 57F0
.text:0000000000005800 get_quoting_style endp
.text:0000000000005800
.text:0000000000005800 ; ---------------------------------------------------------------------------
.text:0000000000005801                 align 10h
.text:0000000000005810
.text:0000000000005810 ; =============== S U B R O U T I N E =======================================
.text:0000000000005810
.text:0000000000005810
.text:0000000000005810                 public set_quoting_style
.text:0000000000005810 set_quoting_style proc near
.text:0000000000005810 ; __unwind {
.text:0000000000005810                 lea     rax, default_quoting_options
.text:0000000000005817                 test    rdi, rdi
.text:000000000000581A                 cmovz   rdi, rax
.text:000000000000581E                 mov     [rdi], esi
.text:0000000000005820                 retn
.text:0000000000005820 ; } // starts at 5810
.text:0000000000005820 set_quoting_style endp
.text:0000000000005820
.text:0000000000005820 ; ---------------------------------------------------------------------------
.text:0000000000005821                 align 10h
.text:0000000000005830
.text:0000000000005830 ; =============== S U B R O U T I N E =======================================
.text:0000000000005830
.text:0000000000005830 ; Attributes: info_from_lumina
.text:0000000000005830
.text:0000000000005830 ; int __fastcall set_char_quoting(quoting_options *o, char c, int i)
.text:0000000000005830                 public set_char_quoting
.text:0000000000005830 set_char_quoting proc near
.text:0000000000005830 ; __unwind {
.text:0000000000005830                 lea     rax, default_quoting_options
.text:0000000000005837                 test    rdi, rdi
.text:000000000000583A                 mov     ecx, esi
.text:000000000000583C                 cmovz   rdi, rax
.text:0000000000005840                 mov     eax, esi
.text:0000000000005842                 and     ecx, 1Fh
.text:0000000000005845                 shr     al, 5
.text:0000000000005848                 movzx   eax, al
.text:000000000000584B                 lea     rdi, [rdi+rax*4+8]
.text:0000000000005850                 mov     esi, [rdi]
.text:0000000000005852                 mov     eax, esi
.text:0000000000005854                 shr     eax, cl
.text:0000000000005856                 xor     edx, eax
.text:0000000000005858                 and     eax, 1
.text:000000000000585B                 and     edx, 1
.text:000000000000585E                 shl     edx, cl
.text:0000000000005860                 xor     edx, esi
.text:0000000000005862                 mov     [rdi], edx
.text:0000000000005864                 retn
.text:0000000000005864 ; } // starts at 5830
.text:0000000000005864 set_char_quoting endp
.text:0000000000005864
.text:0000000000005864 ; ---------------------------------------------------------------------------
.text:0000000000005865                 align 10h
.text:0000000000005870
.text:0000000000005870 ; =============== S U B R O U T I N E =======================================
.text:0000000000005870
.text:0000000000005870
.text:0000000000005870                 public set_quoting_flags
.text:0000000000005870 set_quoting_flags proc near
.text:0000000000005870 ; __unwind {
.text:0000000000005870                 lea     rax, default_quoting_options
.text:0000000000005877                 test    rdi, rdi
.text:000000000000587A                 cmovz   rdi, rax
.text:000000000000587E                 mov     eax, [rdi+4]
.text:0000000000005881                 mov     [rdi+4], esi
.text:0000000000005884                 retn
.text:0000000000005884 ; } // starts at 5870
.text:0000000000005884 set_quoting_flags endp
.text:0000000000005884
.text:0000000000005884 ; ---------------------------------------------------------------------------
.text:0000000000005885                 align 10h
.text:0000000000005890
.text:0000000000005890 ; =============== S U B R O U T I N E =======================================
.text:0000000000005890
.text:0000000000005890 ; Attributes: info_from_lumina
.text:0000000000005890
.text:0000000000005890 ; void __fastcall set_custom_quoting(quoting_options *o, const char *left_quote, const char *right_quote)
.text:0000000000005890                 public set_custom_quoting
.text:0000000000005890 set_custom_quoting proc near
.text:0000000000005890 ; __unwind {
.text:0000000000005890                 lea     rax, default_quoting_options
.text:0000000000005897                 test    rdi, rdi
.text:000000000000589A                 cmovz   rdi, rax
.text:000000000000589E                 test    rsi, rsi
.text:00000000000058A1                 mov     dword ptr [rdi], 0Ah
.text:00000000000058A7                 jz      short loc_58B7
.text:00000000000058A9                 test    rdx, rdx
.text:00000000000058AC                 jz      short loc_58B7
.text:00000000000058AE                 mov     [rdi+28h], rsi
.text:00000000000058B2                 mov     [rdi+30h], rdx
.text:00000000000058B6                 retn
.text:00000000000058B7 ; ---------------------------------------------------------------------------
.text:00000000000058B7
.text:00000000000058B7 loc_58B7:                               ; CODE XREF: set_custom_quoting+17↑j
.text:00000000000058B7                                         ; set_custom_quoting+1C↑j
.text:00000000000058B7                 sub     rsp, 8
.text:00000000000058BB                 call    _abort
.text:00000000000058BB ; } // starts at 5890
.text:00000000000058BB set_custom_quoting endp
.text:00000000000058BB
.text:00000000000058C0
.text:00000000000058C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000058C0
.text:00000000000058C0 ; Attributes: info_from_lumina
.text:00000000000058C0
.text:00000000000058C0 ; size_t __fastcall quotearg_buffer(char *buffer, size_t buffersize, const char *arg, size_t argsize, const quoting_options *o)
.text:00000000000058C0                 public quotearg_buffer
.text:00000000000058C0 quotearg_buffer proc near
.text:00000000000058C0
.text:00000000000058C0 var_40          = qword ptr -40h
.text:00000000000058C0
.text:00000000000058C0 ; __unwind {
.text:00000000000058C0                 push    r15
.text:00000000000058C2                 push    r14
.text:00000000000058C4                 lea     rax, default_quoting_options
.text:00000000000058CB                 push    r13
.text:00000000000058CD                 push    r12
.text:00000000000058CF                 mov     r13, rdi
.text:00000000000058D2                 push    rbp
.text:00000000000058D3                 push    rbx
.text:00000000000058D4                 mov     rbx, r8
.text:00000000000058D7                 mov     r14, rsi
.text:00000000000058DA                 mov     r15, rdx
.text:00000000000058DD                 sub     rsp, 18h
.text:00000000000058E1                 test    r8, r8
.text:00000000000058E4                 cmovz   rbx, rax
.text:00000000000058E8                 mov     [rsp+48h+var_40], rcx
.text:00000000000058ED                 call    ___errno_location
.text:00000000000058F2                 mov     r12d, [rax]
.text:00000000000058F5                 mov     rbp, rax
.text:00000000000058F8                 lea     rax, [rbx+8]
.text:00000000000058FC                 sub     rsp, 8
.text:0000000000005900                 mov     r9d, [rbx+4]
.text:0000000000005904                 push    qword ptr [rbx+30h]
.text:0000000000005907                 mov     r8d, [rbx]
.text:000000000000590A                 push    qword ptr [rbx+28h]
.text:000000000000590D                 mov     rdx, r15
.text:0000000000005910                 push    rax
.text:0000000000005911                 mov     rcx, [rsp+68h+var_40]
.text:0000000000005916                 mov     rsi, r14
.text:0000000000005919                 mov     rdi, r13
.text:000000000000591C                 call    quotearg_buffer_restyled
.text:0000000000005921                 mov     [rbp+0], r12d
.text:0000000000005925                 add     rsp, 38h
.text:0000000000005929                 pop     rbx
.text:000000000000592A                 pop     rbp
.text:000000000000592B                 pop     r12
.text:000000000000592D                 pop     r13
.text:000000000000592F                 pop     r14
.text:0000000000005931                 pop     r15
.text:0000000000005933                 retn
.text:0000000000005933 ; } // starts at 58C0
.text:0000000000005933 quotearg_buffer endp
.text:0000000000005933
.text:0000000000005933 ; ---------------------------------------------------------------------------
.text:0000000000005934                 align 20h
.text:0000000000005940
.text:0000000000005940 ; =============== S U B R O U T I N E =======================================
.text:0000000000005940
.text:0000000000005940 ; Attributes: info_from_lumina
.text:0000000000005940
.text:0000000000005940 ; char *__fastcall quotearg_alloc_mem(const char *arg, size_t argsize, size_t *size, const quoting_options *o)
.text:0000000000005940                 public quotearg_alloc_mem
.text:0000000000005940 quotearg_alloc_mem proc near            ; CODE XREF: quotearg_alloc+5↓j
.text:0000000000005940
.text:0000000000005940 var_5C          = dword ptr -5Ch
.text:0000000000005940 var_58          = qword ptr -58h
.text:0000000000005940 var_50          = qword ptr -50h
.text:0000000000005940 var_48          = qword ptr -48h
.text:0000000000005940 var_40          = qword ptr -40h
.text:0000000000005940
.text:0000000000005940 ; __unwind {
.text:0000000000005940                 push    r15
.text:0000000000005942                 push    r14
.text:0000000000005944                 lea     rax, default_quoting_options
.text:000000000000594B                 push    r13
.text:000000000000594D                 push    r12
.text:000000000000594F                 mov     r12, rdx
.text:0000000000005952                 push    rbp
.text:0000000000005953                 push    rbx
.text:0000000000005954                 mov     rbx, rcx
.text:0000000000005957                 mov     r14, rdi
.text:000000000000595A                 mov     r15, rsi
.text:000000000000595D                 sub     rsp, 38h
.text:0000000000005961                 test    rcx, rcx
.text:0000000000005964                 cmovz   rbx, rax
.text:0000000000005968                 xor     ebp, ebp
.text:000000000000596A                 call    ___errno_location
.text:000000000000596F                 test    r12, r12
.text:0000000000005972                 mov     r13, rax
.text:0000000000005975                 mov     eax, [rax]
.text:0000000000005977                 setz    bpl
.text:000000000000597B                 or      ebp, [rbx+4]
.text:000000000000597E                 lea     r10, [rbx+8]
.text:0000000000005982                 sub     rsp, 8
.text:0000000000005986                 mov     r8d, [rbx]
.text:0000000000005989                 mov     rcx, r15
.text:000000000000598C                 mov     [rsp+70h+var_5C], eax
.text:0000000000005990                 push    qword ptr [rbx+30h]
.text:0000000000005993                 mov     rdx, r14
.text:0000000000005996                 push    qword ptr [rbx+28h]
.text:0000000000005999                 push    r10
.text:000000000000599B                 xor     esi, esi
.text:000000000000599D                 mov     r9d, ebp
.text:00000000000059A0                 xor     edi, edi
.text:00000000000059A2                 mov     [rsp+88h+var_48], r10
.text:00000000000059A7                 call    quotearg_buffer_restyled
.text:00000000000059AC                 lea     rsi, [rax+1]
.text:00000000000059B0                 mov     [rsp+88h+var_40], rax
.text:00000000000059B5                 add     rsp, 20h
.text:00000000000059B9                 mov     rdi, rsi
.text:00000000000059BC                 mov     [rsp+68h+var_50], rsi
.text:00000000000059C1                 call    xmalloc
.text:00000000000059C6                 mov     [rsp+68h+var_58], rax
.text:00000000000059CB                 sub     rsp, 8
.text:00000000000059CF                 push    qword ptr [rbx+30h]
.text:00000000000059D2                 push    qword ptr [rbx+28h]
.text:00000000000059D5                 mov     r10, [rsp+80h+var_48]
.text:00000000000059DA                 mov     r9d, ebp
.text:00000000000059DD                 mov     r8d, [rbx]
.text:00000000000059E0                 mov     rcx, r15
.text:00000000000059E3                 mov     rdx, r14
.text:00000000000059E6                 mov     rdi, rax
.text:00000000000059E9                 push    r10
.text:00000000000059EB                 mov     rsi, [rsp+88h+var_50]
.text:00000000000059F0                 call    quotearg_buffer_restyled
.text:00000000000059F5                 mov     eax, [rsp+88h+var_5C]
.text:00000000000059F9                 add     rsp, 20h
.text:00000000000059FD                 test    r12, r12
.text:0000000000005A00                 mov     [r13+0], eax
.text:0000000000005A04                 jz      short loc_5A0F
.text:0000000000005A06                 mov     r11, [rsp+68h+var_40]
.text:0000000000005A0B                 mov     [r12], r11
.text:0000000000005A0F
.text:0000000000005A0F loc_5A0F:                               ; CODE XREF: quotearg_alloc_mem+C4↑j
.text:0000000000005A0F                 mov     rax, [rsp+68h+var_58]
.text:0000000000005A14                 add     rsp, 38h
.text:0000000000005A18                 pop     rbx
.text:0000000000005A19                 pop     rbp
.text:0000000000005A1A                 pop     r12
.text:0000000000005A1C                 pop     r13
.text:0000000000005A1E                 pop     r14
.text:0000000000005A20                 pop     r15
.text:0000000000005A22                 retn
.text:0000000000005A22 ; } // starts at 5940
.text:0000000000005A22 quotearg_alloc_mem endp
.text:0000000000005A22
.text:0000000000005A22 ; ---------------------------------------------------------------------------
.text:0000000000005A23                 align 10h
.text:0000000000005A30
.text:0000000000005A30 ; =============== S U B R O U T I N E =======================================
.text:0000000000005A30
.text:0000000000005A30
.text:0000000000005A30                 public quotearg_alloc
.text:0000000000005A30 quotearg_alloc  proc near
.text:0000000000005A30 ; __unwind {
.text:0000000000005A30                 mov     rcx, rdx
.text:0000000000005A33                 xor     edx, edx
.text:0000000000005A35                 jmp     quotearg_alloc_mem
.text:0000000000005A35 ; } // starts at 5A30
.text:0000000000005A35 quotearg_alloc  endp
.text:0000000000005A35
.text:0000000000005A35 ; ---------------------------------------------------------------------------
.text:0000000000005A3A                 align 20h
.text:0000000000005A40
.text:0000000000005A40 ; =============== S U B R O U T I N E =======================================
.text:0000000000005A40
.text:0000000000005A40 ; Attributes: info_from_lumina
.text:0000000000005A40
.text:0000000000005A40 ; void __cdecl quotearg_free()
.text:0000000000005A40                 public quotearg_free
.text:0000000000005A40 quotearg_free   proc near
.text:0000000000005A40 ; __unwind {
.text:0000000000005A40                 mov     eax, cs:nslots
.text:0000000000005A46                 push    r12
.text:0000000000005A48                 mov     r12, cs:slotvec
.text:0000000000005A4F                 push    rbp
.text:0000000000005A50                 push    rbx
.text:0000000000005A51                 cmp     eax, 1
.text:0000000000005A54                 jle     short loc_5A81
.text:0000000000005A56                 sub     eax, 2
.text:0000000000005A59                 lea     rbx, [r12+18h]
.text:0000000000005A5E                 shl     rax, 4
.text:0000000000005A62                 lea     rbp, [r12+rax+28h]
.text:0000000000005A67                 nop     word ptr [rax+rax+00000000h]
.text:0000000000005A70
.text:0000000000005A70 loc_5A70:                               ; CODE XREF: quotearg_free+3F↓j
.text:0000000000005A70                 mov     rdi, [rbx]      ; ptr
.text:0000000000005A73                 add     rbx, 10h
.text:0000000000005A77                 call    _free
.text:0000000000005A7C                 cmp     rbx, rbp
.text:0000000000005A7F                 jnz     short loc_5A70
.text:0000000000005A81
.text:0000000000005A81 loc_5A81:                               ; CODE XREF: quotearg_free+14↑j
.text:0000000000005A81                 mov     rdi, [r12+8]    ; ptr
.text:0000000000005A86                 lea     rbx, slot0
.text:0000000000005A8D                 cmp     rdi, rbx
.text:0000000000005A90                 jz      short loc_5AA9
.text:0000000000005A92                 call    _free
.text:0000000000005A97                 mov     cs:slotvec0, 100h
.text:0000000000005AA2                 mov     cs:off_20B078, rbx
.text:0000000000005AA9
.text:0000000000005AA9 loc_5AA9:                               ; CODE XREF: quotearg_free+50↑j
.text:0000000000005AA9                 lea     rbx, slotvec0
.text:0000000000005AB0                 cmp     r12, rbx
.text:0000000000005AB3                 jz      short loc_5AC4
.text:0000000000005AB5                 mov     rdi, r12        ; ptr
.text:0000000000005AB8                 call    _free
.text:0000000000005ABD                 mov     cs:slotvec, rbx
.text:0000000000005AC4
.text:0000000000005AC4 loc_5AC4:                               ; CODE XREF: quotearg_free+73↑j
.text:0000000000005AC4                 pop     rbx
.text:0000000000005AC5                 mov     cs:nslots, 1
.text:0000000000005ACF                 pop     rbp
.text:0000000000005AD0                 pop     r12
.text:0000000000005AD2                 retn
.text:0000000000005AD2 ; } // starts at 5A40
.text:0000000000005AD2 quotearg_free   endp
.text:0000000000005AD2
.text:0000000000005AD2 ; ---------------------------------------------------------------------------
.text:0000000000005AD3                 align 20h
.text:0000000000005AE0
.text:0000000000005AE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000005AE0
.text:0000000000005AE0
.text:0000000000005AE0                 public quotearg_n
.text:0000000000005AE0 quotearg_n      proc near
.text:0000000000005AE0 ; __unwind {
.text:0000000000005AE0                 lea     rcx, default_quoting_options
.text:0000000000005AE7                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000005AEE                 jmp     quotearg_n_options
.text:0000000000005AEE ; } // starts at 5AE0
.text:0000000000005AEE quotearg_n      endp
.text:0000000000005AEE
.text:0000000000005AEE ; ---------------------------------------------------------------------------
.text:0000000000005AF3                 align 20h
.text:0000000000005B00
.text:0000000000005B00 ; =============== S U B R O U T I N E =======================================
.text:0000000000005B00
.text:0000000000005B00
.text:0000000000005B00                 public quotearg_n_mem
.text:0000000000005B00 quotearg_n_mem  proc near
.text:0000000000005B00 ; __unwind {
.text:0000000000005B00                 lea     rcx, default_quoting_options
.text:0000000000005B07                 jmp     quotearg_n_options
.text:0000000000005B07 ; } // starts at 5B00
.text:0000000000005B07 quotearg_n_mem  endp
.text:0000000000005B07
.text:0000000000005B07 ; ---------------------------------------------------------------------------
.text:0000000000005B0C                 align 10h
.text:0000000000005B10
.text:0000000000005B10 ; =============== S U B R O U T I N E =======================================
.text:0000000000005B10
.text:0000000000005B10
.text:0000000000005B10                 public quotearg
.text:0000000000005B10 quotearg        proc near
.text:0000000000005B10 ; __unwind {
.text:0000000000005B10                 lea     rcx, default_quoting_options
.text:0000000000005B17                 mov     rsi, rdi
.text:0000000000005B1A                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000005B21                 xor     edi, edi
.text:0000000000005B23                 jmp     quotearg_n_options
.text:0000000000005B23 ; } // starts at 5B10
.text:0000000000005B23 quotearg        endp
.text:0000000000005B23
.text:0000000000005B23 ; ---------------------------------------------------------------------------
.text:0000000000005B28                 align 10h
.text:0000000000005B30
.text:0000000000005B30 ; =============== S U B R O U T I N E =======================================
.text:0000000000005B30
.text:0000000000005B30
.text:0000000000005B30                 public quotearg_mem
.text:0000000000005B30 quotearg_mem    proc near
.text:0000000000005B30 ; __unwind {
.text:0000000000005B30                 lea     rcx, default_quoting_options
.text:0000000000005B37                 mov     rdx, rsi
.text:0000000000005B3A                 mov     rsi, rdi
.text:0000000000005B3D                 xor     edi, edi
.text:0000000000005B3F                 jmp     quotearg_n_options
.text:0000000000005B3F ; } // starts at 5B30
.text:0000000000005B3F quotearg_mem    endp
.text:0000000000005B3F
.text:0000000000005B3F ; ---------------------------------------------------------------------------
.text:0000000000005B44                 align 10h
.text:0000000000005B50
.text:0000000000005B50 ; =============== S U B R O U T I N E =======================================
.text:0000000000005B50
.text:0000000000005B50 ; Attributes: info_from_lumina
.text:0000000000005B50
.text:0000000000005B50 ; char *__fastcall quotearg_n_style(int n, quoting_style s, const char *arg)
.text:0000000000005B50                 public quotearg_n_style
.text:0000000000005B50 quotearg_n_style proc near              ; CODE XREF: quotearg_style+7↓j
.text:0000000000005B50
.text:0000000000005B50 var_48          = dword ptr -48h
.text:0000000000005B50 var_44          = qword ptr -44h
.text:0000000000005B50 var_3C          = qword ptr -3Ch
.text:0000000000005B50 var_34          = qword ptr -34h
.text:0000000000005B50 var_2C          = qword ptr -2Ch
.text:0000000000005B50 var_24          = qword ptr -24h
.text:0000000000005B50 var_1C          = qword ptr -1Ch
.text:0000000000005B50 var_14          = dword ptr -14h
.text:0000000000005B50 var_10          = qword ptr -10h
.text:0000000000005B50
.text:0000000000005B50 ; __unwind {
.text:0000000000005B50                 sub     rsp, 48h
.text:0000000000005B54                 mov     rax, rdx
.text:0000000000005B57                 mov     rdx, fs:28h
.text:0000000000005B60                 mov     [rsp+48h+var_10], rdx
.text:0000000000005B65                 xor     edx, edx
.text:0000000000005B67                 cmp     esi, 0Ah
.text:0000000000005B6A                 jz      short loc_5BD4
.text:0000000000005B6C                 mov     [rsp+48h+var_48], esi
.text:0000000000005B6F                 mov     rcx, rsp
.text:0000000000005B72                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000005B79                 mov     rsi, rax
.text:0000000000005B7C                 mov     [rsp+48h+var_44], 0
.text:0000000000005B85                 mov     [rsp+48h+var_3C], 0
.text:0000000000005B8E                 mov     [rsp+48h+var_34], 0
.text:0000000000005B97                 mov     [rsp+48h+var_2C], 0
.text:0000000000005BA0                 mov     [rsp+48h+var_24], 0
.text:0000000000005BA9                 mov     [rsp+48h+var_1C], 0
.text:0000000000005BB2                 mov     [rsp+48h+var_14], 0
.text:0000000000005BBA                 call    quotearg_n_options
.text:0000000000005BBF                 mov     rcx, [rsp+48h+var_10]
.text:0000000000005BC4                 xor     rcx, fs:28h
.text:0000000000005BCD                 jnz     short loc_5BD9
.text:0000000000005BCF                 add     rsp, 48h
.text:0000000000005BD3                 retn
.text:0000000000005BD4 ; ---------------------------------------------------------------------------
.text:0000000000005BD4
.text:0000000000005BD4 loc_5BD4:                               ; CODE XREF: quotearg_n_style+1A↑j
.text:0000000000005BD4                 call    _abort
.text:0000000000005BD9 ; ---------------------------------------------------------------------------
.text:0000000000005BD9
.text:0000000000005BD9 loc_5BD9:                               ; CODE XREF: quotearg_n_style+7D↑j
.text:0000000000005BD9                 call    ___stack_chk_fail
.text:0000000000005BD9 ; } // starts at 5B50
.text:0000000000005BD9 quotearg_n_style endp
.text:0000000000005BD9
.text:0000000000005BD9 ; ---------------------------------------------------------------------------
.text:0000000000005BDE                 align 20h
.text:0000000000005BE0
.text:0000000000005BE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000005BE0
.text:0000000000005BE0 ; Attributes: info_from_lumina
.text:0000000000005BE0
.text:0000000000005BE0 ; char *__fastcall quotearg_n_style_mem(int n, quoting_style s, const char *arg, size_t argsize)
.text:0000000000005BE0                 public quotearg_n_style_mem
.text:0000000000005BE0 quotearg_n_style_mem proc near          ; CODE XREF: quotearg_style_mem+A↓j
.text:0000000000005BE0
.text:0000000000005BE0 var_48          = dword ptr -48h
.text:0000000000005BE0 var_44          = qword ptr -44h
.text:0000000000005BE0 var_3C          = qword ptr -3Ch
.text:0000000000005BE0 var_34          = qword ptr -34h
.text:0000000000005BE0 var_2C          = qword ptr -2Ch
.text:0000000000005BE0 var_24          = qword ptr -24h
.text:0000000000005BE0 var_1C          = qword ptr -1Ch
.text:0000000000005BE0 var_14          = dword ptr -14h
.text:0000000000005BE0 var_10          = qword ptr -10h
.text:0000000000005BE0
.text:0000000000005BE0 ; __unwind {
.text:0000000000005BE0                 sub     rsp, 48h
.text:0000000000005BE4                 mov     rax, rdx
.text:0000000000005BE7                 mov     rdx, rcx
.text:0000000000005BEA                 mov     rcx, fs:28h
.text:0000000000005BF3                 mov     [rsp+48h+var_10], rcx
.text:0000000000005BF8                 xor     ecx, ecx
.text:0000000000005BFA                 cmp     esi, 0Ah
.text:0000000000005BFD                 jz      short loc_5C60
.text:0000000000005BFF                 mov     [rsp+48h+var_48], esi
.text:0000000000005C02                 mov     rcx, rsp
.text:0000000000005C05                 mov     rsi, rax
.text:0000000000005C08                 mov     [rsp+48h+var_44], 0
.text:0000000000005C11                 mov     [rsp+48h+var_3C], 0
.text:0000000000005C1A                 mov     [rsp+48h+var_34], 0
.text:0000000000005C23                 mov     [rsp+48h+var_2C], 0
.text:0000000000005C2C                 mov     [rsp+48h+var_24], 0
.text:0000000000005C35                 mov     [rsp+48h+var_1C], 0
.text:0000000000005C3E                 mov     [rsp+48h+var_14], 0
.text:0000000000005C46                 call    quotearg_n_options
.text:0000000000005C4B                 mov     rdx, [rsp+48h+var_10]
.text:0000000000005C50                 xor     rdx, fs:28h
.text:0000000000005C59                 jnz     short loc_5C65
.text:0000000000005C5B                 add     rsp, 48h
.text:0000000000005C5F                 retn
.text:0000000000005C60 ; ---------------------------------------------------------------------------
.text:0000000000005C60
.text:0000000000005C60 loc_5C60:                               ; CODE XREF: quotearg_n_style_mem+1D↑j
.text:0000000000005C60                 call    _abort
.text:0000000000005C65 ; ---------------------------------------------------------------------------
.text:0000000000005C65
.text:0000000000005C65 loc_5C65:                               ; CODE XREF: quotearg_n_style_mem+79↑j
.text:0000000000005C65                 call    ___stack_chk_fail
.text:0000000000005C65 ; } // starts at 5BE0
.text:0000000000005C65 quotearg_n_style_mem endp
.text:0000000000005C65
.text:0000000000005C65 ; ---------------------------------------------------------------------------
.text:0000000000005C6A                 align 10h
.text:0000000000005C70
.text:0000000000005C70 ; =============== S U B R O U T I N E =======================================
.text:0000000000005C70
.text:0000000000005C70
.text:0000000000005C70                 public quotearg_style
.text:0000000000005C70 quotearg_style  proc near
.text:0000000000005C70 ; __unwind {
.text:0000000000005C70                 mov     rdx, rsi
.text:0000000000005C73                 mov     esi, edi
.text:0000000000005C75                 xor     edi, edi
.text:0000000000005C77                 jmp     quotearg_n_style
.text:0000000000005C77 ; } // starts at 5C70
.text:0000000000005C77 quotearg_style  endp
.text:0000000000005C77
.text:0000000000005C77 ; ---------------------------------------------------------------------------
.text:0000000000005C7C                 align 20h
.text:0000000000005C80
.text:0000000000005C80 ; =============== S U B R O U T I N E =======================================
.text:0000000000005C80
.text:0000000000005C80
.text:0000000000005C80                 public quotearg_style_mem
.text:0000000000005C80 quotearg_style_mem proc near
.text:0000000000005C80 ; __unwind {
.text:0000000000005C80                 mov     rcx, rdx
.text:0000000000005C83                 mov     rdx, rsi
.text:0000000000005C86                 mov     esi, edi
.text:0000000000005C88                 xor     edi, edi
.text:0000000000005C8A                 jmp     quotearg_n_style_mem
.text:0000000000005C8A ; } // starts at 5C80
.text:0000000000005C8A quotearg_style_mem endp
.text:0000000000005C8A
.text:0000000000005C8A ; ---------------------------------------------------------------------------
.text:0000000000005C8F                 align 10h
.text:0000000000005C90
.text:0000000000005C90 ; =============== S U B R O U T I N E =======================================
.text:0000000000005C90
.text:0000000000005C90 ; Attributes: info_from_lumina
.text:0000000000005C90
.text:0000000000005C90 ; char *__fastcall quotearg_char_mem(const char *arg, size_t argsize, char ch_0)
.text:0000000000005C90                 public quotearg_char_mem
.text:0000000000005C90 quotearg_char_mem proc near             ; CODE XREF: quotearg_char+B↓j
.text:0000000000005C90                                         ; quotearg_colon+C↓j ...
.text:0000000000005C90
.text:0000000000005C90 var_48          = xmmword ptr -48h
.text:0000000000005C90 var_38          = xmmword ptr -38h
.text:0000000000005C90 var_28          = xmmword ptr -28h
.text:0000000000005C90 var_18          = qword ptr -18h
.text:0000000000005C90 var_10          = qword ptr -10h
.text:0000000000005C90
.text:0000000000005C90 ; __unwind {
.text:0000000000005C90                 sub     rsp, 48h
.text:0000000000005C94                 mov     ecx, edx
.text:0000000000005C96                 mov     rax, fs:28h
.text:0000000000005C9F                 mov     [rsp+48h+var_10], rax
.text:0000000000005CA4                 xor     eax, eax
.text:0000000000005CA6                 mov     rax, cs:qword_20D530
.text:0000000000005CAD                 mov     r8, rsp
.text:0000000000005CB0                 and     ecx, 1Fh
.text:0000000000005CB3                 movdqa  xmm0, cs:default_quoting_options
.text:0000000000005CBB                 mov     [rsp+48h+var_18], rax
.text:0000000000005CC0                 mov     eax, edx
.text:0000000000005CC2                 movaps  [rsp+48h+var_48], xmm0
.text:0000000000005CC6                 shr     al, 5
.text:0000000000005CC9                 movzx   eax, al
.text:0000000000005CCC                 lea     r9, [r8+rax*4+8]
.text:0000000000005CD1                 movdqa  xmm0, cs:xmmword_20D510
.text:0000000000005CD9                 movaps  [rsp+48h+var_38], xmm0
.text:0000000000005CDE                 movdqa  xmm0, cs:xmmword_20D520
.text:0000000000005CE6                 movaps  [rsp+48h+var_28], xmm0
.text:0000000000005CEB                 mov     edx, [r9]
.text:0000000000005CEE                 mov     eax, edx
.text:0000000000005CF0                 shr     eax, cl
.text:0000000000005CF2                 not     eax
.text:0000000000005CF4                 and     eax, 1
.text:0000000000005CF7                 shl     eax, cl
.text:0000000000005CF9                 mov     rcx, r8
.text:0000000000005CFC                 xor     eax, edx
.text:0000000000005CFE                 mov     rdx, rsi
.text:0000000000005D01                 mov     rsi, rdi
.text:0000000000005D04                 mov     [r9], eax
.text:0000000000005D07                 xor     edi, edi
.text:0000000000005D09                 call    quotearg_n_options
.text:0000000000005D0E                 mov     rsi, [rsp+48h+var_10]
.text:0000000000005D13                 xor     rsi, fs:28h
.text:0000000000005D1C                 jnz     short loc_5D23
.text:0000000000005D1E                 add     rsp, 48h
.text:0000000000005D22                 retn
.text:0000000000005D23 ; ---------------------------------------------------------------------------
.text:0000000000005D23
.text:0000000000005D23 loc_5D23:                               ; CODE XREF: quotearg_char_mem+8C↑j
.text:0000000000005D23                 call    ___stack_chk_fail
.text:0000000000005D23 ; } // starts at 5C90
.text:0000000000005D23 quotearg_char_mem endp
.text:0000000000005D23
.text:0000000000005D23 ; ---------------------------------------------------------------------------
.text:0000000000005D28                 align 10h
.text:0000000000005D30
.text:0000000000005D30 ; =============== S U B R O U T I N E =======================================
.text:0000000000005D30
.text:0000000000005D30
.text:0000000000005D30                 public quotearg_char
.text:0000000000005D30 quotearg_char   proc near
.text:0000000000005D30 ; __unwind {
.text:0000000000005D30                 movsx   edx, sil
.text:0000000000005D34                 mov     rsi, 0FFFFFFFFFFFFFFFFh
.text:0000000000005D3B                 jmp     quotearg_char_mem
.text:0000000000005D3B ; } // starts at 5D30
.text:0000000000005D3B quotearg_char   endp
.text:0000000000005D3B
.text:0000000000005D40
.text:0000000000005D40 ; =============== S U B R O U T I N E =======================================
.text:0000000000005D40
.text:0000000000005D40
.text:0000000000005D40                 public quotearg_colon
.text:0000000000005D40 quotearg_colon  proc near               ; CODE XREF: close_stdout+65↑p
.text:0000000000005D40 ; __unwind {
.text:0000000000005D40                 mov     edx, 3Ah ; ':'
.text:0000000000005D45                 mov     rsi, 0FFFFFFFFFFFFFFFFh
.text:0000000000005D4C                 jmp     quotearg_char_mem
.text:0000000000005D4C ; } // starts at 5D40
.text:0000000000005D4C quotearg_colon  endp
.text:0000000000005D4C
.text:0000000000005D4C ; ---------------------------------------------------------------------------
.text:0000000000005D51                 align 20h
.text:0000000000005D60
.text:0000000000005D60 ; =============== S U B R O U T I N E =======================================
.text:0000000000005D60
.text:0000000000005D60
.text:0000000000005D60                 public quotearg_colon_mem
.text:0000000000005D60 quotearg_colon_mem proc near
.text:0000000000005D60 ; __unwind {
.text:0000000000005D60                 mov     edx, 3Ah ; ':'
.text:0000000000005D65                 jmp     quotearg_char_mem
.text:0000000000005D65 ; } // starts at 5D60
.text:0000000000005D65 quotearg_colon_mem endp
.text:0000000000005D65
.text:0000000000005D65 ; ---------------------------------------------------------------------------
.text:0000000000005D6A                 align 10h
.text:0000000000005D70
.text:0000000000005D70 ; =============== S U B R O U T I N E =======================================
.text:0000000000005D70
.text:0000000000005D70 ; Attributes: info_from_lumina
.text:0000000000005D70
.text:0000000000005D70 ; char *__fastcall quotearg_n_style_colon(int n, quoting_style s, const char *arg)
.text:0000000000005D70                 public quotearg_n_style_colon
.text:0000000000005D70 quotearg_n_style_colon proc near
.text:0000000000005D70
.text:0000000000005D70 var_48          = dword ptr -48h
.text:0000000000005D70 var_44          = qword ptr -44h
.text:0000000000005D70 var_3C          = qword ptr -3Ch
.text:0000000000005D70 var_34          = qword ptr -34h
.text:0000000000005D70 var_2C          = qword ptr -2Ch
.text:0000000000005D70 var_24          = qword ptr -24h
.text:0000000000005D70 var_1C          = qword ptr -1Ch
.text:0000000000005D70 var_14          = dword ptr -14h
.text:0000000000005D70 var_10          = qword ptr -10h
.text:0000000000005D70
.text:0000000000005D70 ; __unwind {
.text:0000000000005D70                 sub     rsp, 48h
.text:0000000000005D74                 mov     rax, rdx
.text:0000000000005D77                 mov     rdx, fs:28h
.text:0000000000005D80                 mov     [rsp+48h+var_10], rdx
.text:0000000000005D85                 xor     edx, edx
.text:0000000000005D87                 cmp     esi, 0Ah
.text:0000000000005D8A                 jz      short loc_5DF4
.text:0000000000005D8C                 mov     [rsp+48h+var_48], esi
.text:0000000000005D8F                 mov     rcx, rsp
.text:0000000000005D92                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000005D99                 mov     rsi, rax
.text:0000000000005D9C                 mov     [rsp+48h+var_44], 0
.text:0000000000005DA5                 mov     [rsp+48h+var_3C], 4000000h
.text:0000000000005DAE                 mov     [rsp+48h+var_34], 0
.text:0000000000005DB7                 mov     [rsp+48h+var_2C], 0
.text:0000000000005DC0                 mov     [rsp+48h+var_24], 0
.text:0000000000005DC9                 mov     [rsp+48h+var_1C], 0
.text:0000000000005DD2                 mov     [rsp+48h+var_14], 0
.text:0000000000005DDA                 call    quotearg_n_options
.text:0000000000005DDF                 mov     rcx, [rsp+48h+var_10]
.text:0000000000005DE4                 xor     rcx, fs:28h
.text:0000000000005DED                 jnz     short loc_5DF9
.text:0000000000005DEF                 add     rsp, 48h
.text:0000000000005DF3                 retn
.text:0000000000005DF4 ; ---------------------------------------------------------------------------
.text:0000000000005DF4
.text:0000000000005DF4 loc_5DF4:                               ; CODE XREF: quotearg_n_style_colon+1A↑j
.text:0000000000005DF4                 call    _abort
.text:0000000000005DF9 ; ---------------------------------------------------------------------------
.text:0000000000005DF9
.text:0000000000005DF9 loc_5DF9:                               ; CODE XREF: quotearg_n_style_colon+7D↑j
.text:0000000000005DF9                 call    ___stack_chk_fail
.text:0000000000005DF9 ; } // starts at 5D70
.text:0000000000005DF9 quotearg_n_style_colon endp
.text:0000000000005DF9
.text:0000000000005DF9 ; ---------------------------------------------------------------------------
.text:0000000000005DFE                 align 20h
.text:0000000000005E00
.text:0000000000005E00 ; =============== S U B R O U T I N E =======================================
.text:0000000000005E00
.text:0000000000005E00 ; Attributes: info_from_lumina
.text:0000000000005E00
.text:0000000000005E00 ; char *__fastcall quotearg_n_custom_mem(int n, const char *left_quote, const char *right_quote, const char *arg, size_t argsize)
.text:0000000000005E00                 public quotearg_n_custom_mem
.text:0000000000005E00 quotearg_n_custom_mem proc near         ; CODE XREF: quotearg_n_custom+7↓j
.text:0000000000005E00                                         ; quotearg_custom+12↓j ...
.text:0000000000005E00
.text:0000000000005E00 var_48          = xmmword ptr -48h
.text:0000000000005E00 var_38          = xmmword ptr -38h
.text:0000000000005E00 var_28          = xmmword ptr -28h
.text:0000000000005E00 var_18          = qword ptr -18h
.text:0000000000005E00 var_10          = qword ptr -10h
.text:0000000000005E00
.text:0000000000005E00 ; __unwind {
.text:0000000000005E00                 sub     rsp, 48h
.text:0000000000005E04                 mov     r9, rcx
.text:0000000000005E07                 mov     rcx, cs:qword_20D530
.text:0000000000005E0E                 movdqa  xmm0, cs:default_quoting_options
.text:0000000000005E16                 mov     rax, fs:28h
.text:0000000000005E1F                 mov     [rsp+48h+var_10], rax
.text:0000000000005E24                 xor     eax, eax
.text:0000000000005E26                 movaps  [rsp+48h+var_48], xmm0
.text:0000000000005E2A                 test    rsi, rsi
.text:0000000000005E2D                 mov     [rsp+48h+var_18], rcx
.text:0000000000005E32                 mov     dword ptr [rsp+48h+var_48], 0Ah
.text:0000000000005E39                 movdqa  xmm0, cs:xmmword_20D510
.text:0000000000005E41                 movaps  [rsp+48h+var_38], xmm0
.text:0000000000005E46                 movdqa  xmm0, cs:xmmword_20D520
.text:0000000000005E4E                 movaps  [rsp+48h+var_28], xmm0
.text:0000000000005E53                 jz      short loc_5E87
.text:0000000000005E55                 test    rdx, rdx
.text:0000000000005E58                 jz      short loc_5E87
.text:0000000000005E5A                 mov     qword ptr [rsp+48h+var_28+8], rsi
.text:0000000000005E5F                 mov     [rsp+48h+var_18], rdx
.text:0000000000005E64                 mov     rcx, rsp
.text:0000000000005E67                 mov     rdx, r8
.text:0000000000005E6A                 mov     rsi, r9
.text:0000000000005E6D                 call    quotearg_n_options
.text:0000000000005E72                 mov     rdi, [rsp+48h+var_10]
.text:0000000000005E77                 xor     rdi, fs:28h
.text:0000000000005E80                 jnz     short loc_5E8C
.text:0000000000005E82                 add     rsp, 48h
.text:0000000000005E86                 retn
.text:0000000000005E87 ; ---------------------------------------------------------------------------
.text:0000000000005E87
.text:0000000000005E87 loc_5E87:                               ; CODE XREF: quotearg_n_custom_mem+53↑j
.text:0000000000005E87                                         ; quotearg_n_custom_mem+58↑j
.text:0000000000005E87                 call    _abort
.text:0000000000005E8C ; ---------------------------------------------------------------------------
.text:0000000000005E8C
.text:0000000000005E8C loc_5E8C:                               ; CODE XREF: quotearg_n_custom_mem+80↑j
.text:0000000000005E8C                 call    ___stack_chk_fail
.text:0000000000005E8C ; } // starts at 5E00
.text:0000000000005E8C quotearg_n_custom_mem endp
.text:0000000000005E8C
.text:0000000000005E8C ; ---------------------------------------------------------------------------
.text:0000000000005E91                 align 20h
.text:0000000000005EA0
.text:0000000000005EA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000005EA0
.text:0000000000005EA0
.text:0000000000005EA0                 public quotearg_n_custom
.text:0000000000005EA0 quotearg_n_custom proc near
.text:0000000000005EA0 ; __unwind {
.text:0000000000005EA0                 mov     r8, 0FFFFFFFFFFFFFFFFh
.text:0000000000005EA7                 jmp     quotearg_n_custom_mem
.text:0000000000005EA7 ; } // starts at 5EA0
.text:0000000000005EA7 quotearg_n_custom endp
.text:0000000000005EA7
.text:0000000000005EA7 ; ---------------------------------------------------------------------------
.text:0000000000005EAC                 align 10h
.text:0000000000005EB0
.text:0000000000005EB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000005EB0
.text:0000000000005EB0
.text:0000000000005EB0                 public quotearg_custom
.text:0000000000005EB0 quotearg_custom proc near
.text:0000000000005EB0 ; __unwind {
.text:0000000000005EB0                 mov     rcx, rdx
.text:0000000000005EB3                 mov     r8, 0FFFFFFFFFFFFFFFFh
.text:0000000000005EBA                 mov     rdx, rsi
.text:0000000000005EBD                 mov     rsi, rdi
.text:0000000000005EC0                 xor     edi, edi
.text:0000000000005EC2                 jmp     quotearg_n_custom_mem
.text:0000000000005EC2 ; } // starts at 5EB0
.text:0000000000005EC2 quotearg_custom endp
.text:0000000000005EC2
.text:0000000000005EC2 ; ---------------------------------------------------------------------------
.text:0000000000005EC7                 align 10h
.text:0000000000005ED0
.text:0000000000005ED0 ; =============== S U B R O U T I N E =======================================
.text:0000000000005ED0
.text:0000000000005ED0
.text:0000000000005ED0                 public quotearg_custom_mem
.text:0000000000005ED0 quotearg_custom_mem proc near
.text:0000000000005ED0 ; __unwind {
.text:0000000000005ED0                 mov     r8, rcx
.text:0000000000005ED3                 mov     rcx, rdx
.text:0000000000005ED6                 mov     rdx, rsi
.text:0000000000005ED9                 mov     rsi, rdi
.text:0000000000005EDC                 xor     edi, edi
.text:0000000000005EDE                 jmp     quotearg_n_custom_mem
.text:0000000000005EDE ; } // starts at 5ED0
.text:0000000000005EDE quotearg_custom_mem endp
.text:0000000000005EDE
.text:0000000000005EDE ; ---------------------------------------------------------------------------
.text:0000000000005EE3                 align 10h
.text:0000000000005EF0
.text:0000000000005EF0 ; =============== S U B R O U T I N E =======================================
.text:0000000000005EF0
.text:0000000000005EF0
.text:0000000000005EF0                 public quote_n_mem
.text:0000000000005EF0 quote_n_mem     proc near
.text:0000000000005EF0 ; __unwind {
.text:0000000000005EF0                 lea     rcx, quote_quoting_options
.text:0000000000005EF7                 jmp     quotearg_n_options
.text:0000000000005EF7 ; } // starts at 5EF0
.text:0000000000005EF7 quote_n_mem     endp
.text:0000000000005EF7
.text:0000000000005EF7 ; ---------------------------------------------------------------------------
.text:0000000000005EFC                 align 20h
.text:0000000000005F00
.text:0000000000005F00 ; =============== S U B R O U T I N E =======================================
.text:0000000000005F00
.text:0000000000005F00
.text:0000000000005F00                 public quote_mem
.text:0000000000005F00 quote_mem       proc near
.text:0000000000005F00 ; __unwind {
.text:0000000000005F00                 lea     rcx, quote_quoting_options
.text:0000000000005F07                 mov     rdx, rsi
.text:0000000000005F0A                 mov     rsi, rdi
.text:0000000000005F0D                 xor     edi, edi
.text:0000000000005F0F                 jmp     quotearg_n_options
.text:0000000000005F0F ; } // starts at 5F00
.text:0000000000005F0F quote_mem       endp
.text:0000000000005F0F
.text:0000000000005F0F ; ---------------------------------------------------------------------------
.text:0000000000005F14                 align 20h
.text:0000000000005F20
.text:0000000000005F20 ; =============== S U B R O U T I N E =======================================
.text:0000000000005F20
.text:0000000000005F20
.text:0000000000005F20                 public quote_n
.text:0000000000005F20 quote_n         proc near
.text:0000000000005F20 ; __unwind {
.text:0000000000005F20                 lea     rcx, quote_quoting_options
.text:0000000000005F27                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000005F2E                 jmp     quotearg_n_options
.text:0000000000005F2E ; } // starts at 5F20
.text:0000000000005F2E quote_n         endp
.text:0000000000005F2E
.text:0000000000005F2E ; ---------------------------------------------------------------------------
.text:0000000000005F33                 align 20h
.text:0000000000005F40
.text:0000000000005F40 ; =============== S U B R O U T I N E =======================================
.text:0000000000005F40
.text:0000000000005F40
.text:0000000000005F40                 public quote
.text:0000000000005F40 quote           proc near               ; CODE XREF: main+C48↑p
.text:0000000000005F40                                         ; main+CC4↑p ...
.text:0000000000005F40 ; __unwind {
.text:0000000000005F40                 lea     rcx, quote_quoting_options
.text:0000000000005F47                 mov     rsi, rdi
.text:0000000000005F4A                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000000005F51                 xor     edi, edi
.text:0000000000005F53                 jmp     quotearg_n_options
.text:0000000000005F53 ; } // starts at 5F40
.text:0000000000005F53 quote           endp
.text:0000000000005F53
.text:0000000000005F53 ; ---------------------------------------------------------------------------
.text:0000000000005F58                 align 20h
.text:0000000000005F60
.text:0000000000005F60 ; =============== S U B R O U T I N E =======================================
.text:0000000000005F60
.text:0000000000005F60
.text:0000000000005F60 ; __int64 __fastcall safe_read(int fd, void *buf, size_t nbytes)
.text:0000000000005F60                 public safe_read
.text:0000000000005F60 safe_read       proc near               ; CODE XREF: plain_read+C↑p
.text:0000000000005F60                                         ; read_and_delete+20↑p ...
.text:0000000000005F60 ; __unwind {
.text:0000000000005F60                 push    r13
.text:0000000000005F62                 push    r12
.text:0000000000005F64                 mov     r13d, edi
.text:0000000000005F67                 push    rbp
.text:0000000000005F68                 push    rbx
.text:0000000000005F69                 mov     r12, rsi
.text:0000000000005F6C                 mov     rbx, rdx
.text:0000000000005F6F                 sub     rsp, 8
.text:0000000000005F73                 nop     dword ptr [rax+rax+00h]
.text:0000000000005F78
.text:0000000000005F78 loc_5F78:                               ; CODE XREF: safe_read+38↓j
.text:0000000000005F78                                         ; safe_read+4D↓j
.text:0000000000005F78                 mov     rdx, rbx        ; nbytes
.text:0000000000005F7B                 mov     rsi, r12        ; buf
.text:0000000000005F7E                 mov     edi, r13d       ; fd
.text:0000000000005F81                 call    _read
.text:0000000000005F86                 test    rax, rax
.text:0000000000005F89                 mov     rbp, rax
.text:0000000000005F8C                 jns     short loc_5FB0
.text:0000000000005F8E                 call    ___errno_location
.text:0000000000005F93                 mov     eax, [rax]
.text:0000000000005F95                 cmp     eax, 4
.text:0000000000005F98                 jz      short loc_5F78
.text:0000000000005F9A                 cmp     rbx, 7FF00000h
.text:0000000000005FA1                 jbe     short loc_5FB0
.text:0000000000005FA3                 cmp     eax, 16h
.text:0000000000005FA6                 jnz     short loc_5FB0
.text:0000000000005FA8                 mov     ebx, 7FF00000h
.text:0000000000005FAD                 jmp     short loc_5F78
.text:0000000000005FAD ; ---------------------------------------------------------------------------
.text:0000000000005FAF                 align 10h
.text:0000000000005FB0
.text:0000000000005FB0 loc_5FB0:                               ; CODE XREF: safe_read+2C↑j
.text:0000000000005FB0                                         ; safe_read+41↑j ...
.text:0000000000005FB0                 add     rsp, 8
.text:0000000000005FB4                 mov     rax, rbp
.text:0000000000005FB7                 pop     rbx
.text:0000000000005FB8                 pop     rbp
.text:0000000000005FB9                 pop     r12
.text:0000000000005FBB                 pop     r13
.text:0000000000005FBD                 retn
.text:0000000000005FBD ; } // starts at 5F60
.text:0000000000005FBD safe_read       endp
.text:0000000000005FBD
.text:0000000000005FBD ; ---------------------------------------------------------------------------
.text:0000000000005FBE                 align 20h
.text:0000000000005FC0
.text:0000000000005FC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000005FC0
.text:0000000000005FC0
.text:0000000000005FC0 ; __int64 __fastcall version_etc_arn(FILE *stream)
.text:0000000000005FC0                 public version_etc_arn
.text:0000000000005FC0 version_etc_arn proc near               ; CODE XREF: version_etc_ar:loc_63FB↓j
.text:0000000000005FC0                                         ; version_etc_va:loc_644B↓p ...
.text:0000000000005FC0
.text:0000000000005FC0 var_58          = qword ptr -58h
.text:0000000000005FC0 var_50          = qword ptr -50h
.text:0000000000005FC0 var_48          = qword ptr -48h
.text:0000000000005FC0 var_40          = qword ptr -40h
.text:0000000000005FC0
.text:0000000000005FC0 ; __unwind {
.text:0000000000005FC0                 push    r15
.text:0000000000005FC2                 push    r14
.text:0000000000005FC4                 push    r13
.text:0000000000005FC6                 push    r12
.text:0000000000005FC8                 mov     r12, r9
.text:0000000000005FCB                 push    rbp
.text:0000000000005FCC                 push    rbx
.text:0000000000005FCD                 mov     rbp, rdi
.text:0000000000005FD0                 mov     rbx, r8
.text:0000000000005FD3                 sub     rsp, 28h
.text:0000000000005FD7                 test    rsi, rsi
.text:0000000000005FDA                 jz      loc_60F8
.text:0000000000005FE0                 mov     r8, rdx
.text:0000000000005FE3                 lea     rdx, aSSS       ; "%s (%s) %s\n"
.text:0000000000005FEA                 mov     r9, rcx
.text:0000000000005FED                 xor     eax, eax
.text:0000000000005FEF                 mov     rcx, rsi
.text:0000000000005FF2                 mov     esi, 1
.text:0000000000005FF7                 call    ___fprintf_chk
.text:0000000000005FFC
.text:0000000000005FFC loc_5FFC:                               ; CODE XREF: version_etc_arn+151↓j
.text:0000000000005FFC                 lea     rsi, aC_0       ; "(C)"
.text:0000000000006003                 xor     edi, edi        ; domainname
.text:0000000000006005                 mov     edx, 5          ; category
.text:000000000000600A                 call    _dcgettext
.text:000000000000600F                 lea     rdx, version_etc_copyright ; "Copyright %s %d Free Software Foundatio"...
.text:0000000000006016                 mov     rcx, rax
.text:0000000000006019                 mov     r8d, 7E3h
.text:000000000000601F                 mov     esi, 1
.text:0000000000006024                 mov     rdi, rbp
.text:0000000000006027                 xor     eax, eax
.text:0000000000006029                 call    ___fprintf_chk
.text:000000000000602E                 lea     rsi, aLicenseGplv3Gn ; "\nLicense GPLv3+: GNU GPL version 3 or "...
.text:0000000000006035                 xor     edi, edi        ; domainname
.text:0000000000006037                 mov     edx, 5          ; category
.text:000000000000603C                 call    _dcgettext
.text:0000000000006041                 mov     rsi, rbp        ; stream
.text:0000000000006044                 mov     rdi, rax        ; s
.text:0000000000006047                 call    _fputs_unlocked
.text:000000000000604C                 cmp     r12, 9          ; switch 10 cases
.text:0000000000006050                 ja      def_6064        ; jumptable 0000000000006064 default case
.text:0000000000006056                 lea     rdx, jpt_6064
.text:000000000000605D                 movsxd  rax, ds:(jpt_6064 - 8B84h)[rdx+r12*4]
.text:0000000000006061                 add     rax, rdx
.text:0000000000006064                 jmp     rax             ; switch jump
.text:0000000000006064 ; ---------------------------------------------------------------------------
.text:0000000000006066                 align 10h
.text:0000000000006070
.text:0000000000006070 loc_6070:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000006070                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:0000000000006070                 mov     r9, [rbx+38h]   ; jumptable 0000000000006064 case 8
.text:0000000000006074                 mov     rax, [rbx+10h]
.text:0000000000006078                 lea     rsi, aWrittenBySSSSS ; "Written by %s, %s, %s,\n%s, %s, %s, %s,"...
.text:000000000000607F                 mov     r8, [rbx+8]
.text:0000000000006083                 mov     edx, 5          ; category
.text:0000000000006088                 xor     edi, edi        ; domainname
.text:000000000000608A                 mov     r13, [rbx+30h]
.text:000000000000608E                 mov     r12, [rbx+28h]
.text:0000000000006092                 mov     [rsp+58h+var_48], r9
.text:0000000000006097                 mov     r15, [rbx+20h]
.text:000000000000609B                 mov     r14, [rbx+18h]
.text:000000000000609F                 mov     [rsp+58h+var_58], rax
.text:00000000000060A3                 mov     [rsp+58h+var_50], r8
.text:00000000000060A8                 mov     rbx, [rbx]
.text:00000000000060AB                 call    _dcgettext
.text:00000000000060B0                 sub     rsp, 8
.text:00000000000060B4
.text:00000000000060B4 loc_60B4:                               ; CODE XREF: version_etc_arn+1B0↓j
.text:00000000000060B4                 mov     r9, [rsp+60h+var_48]
.text:00000000000060B9                 mov     rdx, rax
.text:00000000000060BC                 mov     rcx, rbx
.text:00000000000060BF                 mov     esi, 1
.text:00000000000060C4                 mov     rdi, rbp
.text:00000000000060C7                 xor     eax, eax
.text:00000000000060C9                 push    r9
.text:00000000000060CB                 push    r13
.text:00000000000060CD                 push    r12
.text:00000000000060CF                 push    r15
.text:00000000000060D1                 push    r14
.text:00000000000060D3                 mov     r9, [rsp+88h+var_58]
.text:00000000000060D8                 mov     r8, [rsp+88h+var_50]
.text:00000000000060DD                 call    ___fprintf_chk
.text:00000000000060E2                 add     rsp, 30h
.text:00000000000060E6
.text:00000000000060E6 loc_60E6:                               ; CODE XREF: version_etc_arn+A4↑j
.text:00000000000060E6                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:00000000000060E6                 add     rsp, 28h        ; jumptable 0000000000006064 case 0
.text:00000000000060EA                 pop     rbx
.text:00000000000060EB                 pop     rbp
.text:00000000000060EC                 pop     r12
.text:00000000000060EE                 pop     r13
.text:00000000000060F0                 pop     r14
.text:00000000000060F2                 pop     r15
.text:00000000000060F4                 retn
.text:00000000000060F4 ; ---------------------------------------------------------------------------
.text:00000000000060F5                 align 8
.text:00000000000060F8
.text:00000000000060F8 loc_60F8:                               ; CODE XREF: version_etc_arn+1A↑j
.text:00000000000060F8                 mov     r8, rcx
.text:00000000000060FB                 mov     rcx, rdx
.text:00000000000060FE                 lea     rdx, aSS_0      ; "%s %s\n"
.text:0000000000006105                 mov     esi, 1
.text:000000000000610A                 xor     eax, eax
.text:000000000000610C                 call    ___fprintf_chk
.text:0000000000006111                 jmp     loc_5FFC
.text:0000000000006111 ; ---------------------------------------------------------------------------
.text:0000000000006116                 align 20h
.text:0000000000006120
.text:0000000000006120 loc_6120:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000006120                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:0000000000006120                 mov     r10, [rbx+40h]  ; jumptable 0000000000006064 case 9
.text:0000000000006124                 mov     r9, [rbx+38h]
.text:0000000000006128                 lea     rsi, aWrittenBySSSSS_0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,"...
.text:000000000000612F                 mov     rax, [rbx+10h]
.text:0000000000006133                 mov     r8, [rbx+8]
.text:0000000000006137                 mov     edx, 5          ; category
.text:000000000000613C                 mov     r13, [rbx+30h]
.text:0000000000006140                 mov     r12, [rbx+28h]
.text:0000000000006144                 mov     r15, [rbx+20h]
.text:0000000000006148                 mov     r14, [rbx+18h]
.text:000000000000614C                 mov     rbx, [rbx]
.text:000000000000614F                 mov     [rsp+58h+var_40], r10
.text:0000000000006154                 mov     [rsp+58h+var_48], r9
.text:0000000000006159                 mov     [rsp+58h+var_58], rax
.text:000000000000615D                 mov     [rsp+58h+var_50], r8
.text:0000000000006162
.text:0000000000006162 loc_6162:                               ; CODE XREF: version_etc_arn+412↓j
.text:0000000000006162                 xor     edi, edi        ; domainname
.text:0000000000006164                 call    _dcgettext
.text:0000000000006169                 mov     r10, [rsp+58h+var_40]
.text:000000000000616E                 push    r10
.text:0000000000006170                 jmp     loc_60B4
.text:0000000000006170 ; ---------------------------------------------------------------------------
.text:0000000000006175                 align 8
.text:0000000000006178
.text:0000000000006178 loc_6178:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000006178                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:0000000000006178                 mov     rbx, [rbx]      ; jumptable 0000000000006064 case 1
.text:000000000000617B                 lea     rsi, aWrittenByS ; "Written by %s.\n"
.text:0000000000006182                 mov     edx, 5          ; category
.text:0000000000006187                 xor     edi, edi        ; domainname
.text:0000000000006189                 call    _dcgettext
.text:000000000000618E                 add     rsp, 28h
.text:0000000000006192                 mov     rcx, rbx
.text:0000000000006195                 mov     rdi, rbp
.text:0000000000006198                 pop     rbx
.text:0000000000006199                 pop     rbp
.text:000000000000619A                 pop     r12
.text:000000000000619C                 pop     r13
.text:000000000000619E                 pop     r14
.text:00000000000061A0                 pop     r15
.text:00000000000061A2                 mov     rdx, rax
.text:00000000000061A5                 mov     esi, 1
.text:00000000000061AA                 xor     eax, eax
.text:00000000000061AC                 jmp     ___fprintf_chk
.text:00000000000061AC ; ---------------------------------------------------------------------------
.text:00000000000061B1                 align 8
.text:00000000000061B8
.text:00000000000061B8 loc_61B8:                               ; CODE XREF: version_etc_arn+A4↑j
.text:00000000000061B8                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:00000000000061B8                 mov     r12, [rbx+8]    ; jumptable 0000000000006064 case 2
.text:00000000000061BC                 lea     rsi, aWrittenBySAndS ; "Written by %s and %s.\n"
.text:00000000000061C3                 mov     rbx, [rbx]
.text:00000000000061C6                 mov     edx, 5          ; category
.text:00000000000061CB                 xor     edi, edi        ; domainname
.text:00000000000061CD                 call    _dcgettext
.text:00000000000061D2                 add     rsp, 28h
.text:00000000000061D6                 mov     r8, r12
.text:00000000000061D9                 mov     rcx, rbx
.text:00000000000061DC                 mov     rdi, rbp
.text:00000000000061DF                 mov     rdx, rax
.text:00000000000061E2                 mov     esi, 1
.text:00000000000061E7                 pop     rbx
.text:00000000000061E8                 pop     rbp
.text:00000000000061E9                 pop     r12
.text:00000000000061EB                 pop     r13
.text:00000000000061ED                 pop     r14
.text:00000000000061EF                 pop     r15
.text:00000000000061F1                 xor     eax, eax
.text:00000000000061F3                 jmp     ___fprintf_chk
.text:00000000000061F3 ; ---------------------------------------------------------------------------
.text:00000000000061F8                 align 20h
.text:0000000000006200
.text:0000000000006200 loc_6200:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000006200                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:0000000000006200                 mov     r13, [rbx+10h]  ; jumptable 0000000000006064 case 3
.text:0000000000006204                 mov     r12, [rbx+8]
.text:0000000000006208                 lea     rsi, aWrittenBySSAnd ; "Written by %s, %s, and %s.\n"
.text:000000000000620F                 mov     rbx, [rbx]
.text:0000000000006212                 mov     edx, 5          ; category
.text:0000000000006217                 xor     edi, edi        ; domainname
.text:0000000000006219                 call    _dcgettext
.text:000000000000621E                 add     rsp, 28h
.text:0000000000006222                 mov     r9, r13
.text:0000000000006225                 mov     r8, r12
.text:0000000000006228                 mov     rcx, rbx
.text:000000000000622B                 mov     rdi, rbp
.text:000000000000622E                 mov     rdx, rax
.text:0000000000006231                 pop     rbx
.text:0000000000006232                 pop     rbp
.text:0000000000006233                 pop     r12
.text:0000000000006235                 pop     r13
.text:0000000000006237                 pop     r14
.text:0000000000006239                 pop     r15
.text:000000000000623B                 mov     esi, 1
.text:0000000000006240                 xor     eax, eax
.text:0000000000006242                 jmp     ___fprintf_chk
.text:0000000000006242 ; ---------------------------------------------------------------------------
.text:0000000000006247                 align 10h
.text:0000000000006250
.text:0000000000006250 loc_6250:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000006250                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:0000000000006250                 lea     rsi, aWrittenBySSSAn ; jumptable 0000000000006064 case 4
.text:0000000000006257                 mov     edx, 5          ; category
.text:000000000000625C                 xor     edi, edi        ; domainname
.text:000000000000625E                 mov     r14, [rbx+18h]
.text:0000000000006262                 mov     r13, [rbx+10h]
.text:0000000000006266                 mov     r12, [rbx+8]
.text:000000000000626A                 mov     rbx, [rbx]
.text:000000000000626D                 call    _dcgettext
.text:0000000000006272                 sub     rsp, 8
.text:0000000000006276
.text:0000000000006276 loc_6276:                               ; CODE XREF: version_etc_arn+310↓j
.text:0000000000006276                 push    r14
.text:0000000000006278                 mov     rdx, rax
.text:000000000000627B                 mov     r9, r13
.text:000000000000627E                 mov     r8, r12
.text:0000000000006281                 mov     rcx, rbx
.text:0000000000006284                 mov     rdi, rbp
.text:0000000000006287                 mov     esi, 1
.text:000000000000628C                 xor     eax, eax
.text:000000000000628E                 call    ___fprintf_chk
.text:0000000000006293                 pop     rax
.text:0000000000006294                 pop     rdx
.text:0000000000006295                 add     rsp, 28h
.text:0000000000006299                 pop     rbx
.text:000000000000629A                 pop     rbp
.text:000000000000629B                 pop     r12
.text:000000000000629D                 pop     r13
.text:000000000000629F                 pop     r14
.text:00000000000062A1                 pop     r15
.text:00000000000062A3                 retn
.text:00000000000062A3 ; ---------------------------------------------------------------------------
.text:00000000000062A4                 align 8
.text:00000000000062A8
.text:00000000000062A8 loc_62A8:                               ; CODE XREF: version_etc_arn+A4↑j
.text:00000000000062A8                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:00000000000062A8                 mov     r15, [rbx+20h]  ; jumptable 0000000000006064 case 5
.text:00000000000062AC                 lea     rsi, aWrittenBySSSSA ; "Written by %s, %s, %s,\n%s, and %s.\n"
.text:00000000000062B3                 mov     edx, 5          ; category
.text:00000000000062B8                 xor     edi, edi        ; domainname
.text:00000000000062BA                 mov     r14, [rbx+18h]
.text:00000000000062BE                 mov     r13, [rbx+10h]
.text:00000000000062C2                 mov     r12, [rbx+8]
.text:00000000000062C6                 mov     rbx, [rbx]
.text:00000000000062C9                 call    _dcgettext
.text:00000000000062CE                 push    r15
.text:00000000000062D0                 jmp     short loc_6276
.text:00000000000062D0 ; ---------------------------------------------------------------------------
.text:00000000000062D2                 align 8
.text:00000000000062D8
.text:00000000000062D8 loc_62D8:                               ; CODE XREF: version_etc_arn+A4↑j
.text:00000000000062D8                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:00000000000062D8                 mov     r8, [rbx+8]     ; jumptable 0000000000006064 case 6
.text:00000000000062DC                 mov     r12, [rbx+28h]
.text:00000000000062E0                 lea     rsi, aWrittenBySSSSS_1 ; "Written by %s, %s, %s,\n%s, %s, and %s."...
.text:00000000000062E7                 mov     r15, [rbx+20h]
.text:00000000000062EB                 mov     r14, [rbx+18h]
.text:00000000000062EF                 mov     edx, 5          ; category
.text:00000000000062F4                 mov     r13, [rbx+10h]
.text:00000000000062F8                 xor     edi, edi        ; domainname
.text:00000000000062FA                 mov     rbx, [rbx]
.text:00000000000062FD                 mov     [rsp+58h+var_58], r8
.text:0000000000006301                 call    _dcgettext
.text:0000000000006306                 sub     rsp, 8
.text:000000000000630A                 mov     r9, r13
.text:000000000000630D                 push    r12
.text:000000000000630F                 push    r15
.text:0000000000006311                 push    r14
.text:0000000000006313
.text:0000000000006313 loc_6313:                               ; CODE XREF: version_etc_arn+3C4↓j
.text:0000000000006313                 mov     r8, [rsp+78h+var_58]
.text:0000000000006318                 mov     rcx, rbx
.text:000000000000631B                 mov     rdx, rax
.text:000000000000631E                 mov     rdi, rbp
.text:0000000000006321                 mov     esi, 1
.text:0000000000006326                 xor     eax, eax
.text:0000000000006328                 call    ___fprintf_chk
.text:000000000000632D                 add     rsp, 20h
.text:0000000000006331                 add     rsp, 28h
.text:0000000000006335                 pop     rbx
.text:0000000000006336                 pop     rbp
.text:0000000000006337                 pop     r12
.text:0000000000006339                 pop     r13
.text:000000000000633B                 pop     r14
.text:000000000000633D                 pop     r15
.text:000000000000633F                 retn
.text:0000000000006340 ; ---------------------------------------------------------------------------
.text:0000000000006340
.text:0000000000006340 loc_6340:                               ; CODE XREF: version_etc_arn+A4↑j
.text:0000000000006340                                         ; DATA XREF: .rodata:jpt_6064↓o
.text:0000000000006340                 mov     r9, [rbx+10h]   ; jumptable 0000000000006064 case 7
.text:0000000000006344                 mov     r13, [rbx+30h]
.text:0000000000006348                 lea     rsi, aWrittenBySSSSS_2 ; "Written by %s, %s, %s,\n%s, %s, %s, and"...
.text:000000000000634F                 mov     r12, [rbx+28h]
.text:0000000000006353                 mov     r15, [rbx+20h]
.text:0000000000006357                 mov     edx, 5          ; category
.text:000000000000635C                 mov     r14, [rbx+18h]
.text:0000000000006360                 mov     r8, [rbx+8]
.text:0000000000006364                 xor     edi, edi        ; domainname
.text:0000000000006366                 mov     [rsp+58h+var_50], r9
.text:000000000000636B                 mov     rbx, [rbx]
.text:000000000000636E                 mov     [rsp+58h+var_58], r8
.text:0000000000006372                 call    _dcgettext
.text:0000000000006377                 push    r13
.text:0000000000006379                 push    r12
.text:000000000000637B                 push    r15
.text:000000000000637D                 push    r14
.text:000000000000637F                 mov     r9, [rsp+78h+var_50]
.text:0000000000006384                 jmp     short loc_6313
.text:0000000000006384 ; ---------------------------------------------------------------------------
.text:0000000000006386                 align 10h
.text:0000000000006390
.text:0000000000006390 def_6064:                               ; CODE XREF: version_etc_arn+90↑j
.text:0000000000006390                 mov     r10, [rbx+40h]  ; jumptable 0000000000006064 default case
.text:0000000000006394                 mov     r9, [rbx+38h]
.text:0000000000006398                 mov     edx, 5
.text:000000000000639D                 mov     rax, [rbx+10h]
.text:00000000000063A1                 mov     r8, [rbx+8]
.text:00000000000063A5                 lea     rsi, aWrittenBySSSSS_3 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,"...
.text:00000000000063AC                 mov     r13, [rbx+30h]
.text:00000000000063B0                 mov     r12, [rbx+28h]
.text:00000000000063B4                 mov     r15, [rbx+20h]
.text:00000000000063B8                 mov     r14, [rbx+18h]
.text:00000000000063BC                 mov     [rsp+58h+var_40], r10
.text:00000000000063C1                 mov     [rsp+58h+var_48], r9
.text:00000000000063C6                 mov     [rsp+58h+var_58], rax
.text:00000000000063CA                 mov     [rsp+58h+var_50], r8
.text:00000000000063CF                 mov     rbx, [rbx]
.text:00000000000063D2                 jmp     loc_6162
.text:00000000000063D2 ; } // starts at 5FC0
.text:00000000000063D2 version_etc_arn endp
.text:00000000000063D2
.text:00000000000063D2 ; ---------------------------------------------------------------------------
.text:00000000000063D7                 align 20h
.text:00000000000063E0
.text:00000000000063E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000063E0
.text:00000000000063E0 ; Attributes: info_from_lumina
.text:00000000000063E0
.text:00000000000063E0 ; void __fastcall version_etc_ar(FILE *stream, const char *command_name, const char *package, const char *version, const char *const *authors)
.text:00000000000063E0                 public version_etc_ar
.text:00000000000063E0 version_etc_ar  proc near
.text:00000000000063E0 ; __unwind {
.text:00000000000063E0                 xor     r9d, r9d
.text:00000000000063E3                 cmp     qword ptr [r8], 0
.text:00000000000063E7                 jz      short loc_63FB
.text:00000000000063E9                 nop     dword ptr [rax+00000000h]
.text:00000000000063F0
.text:00000000000063F0 loc_63F0:                               ; CODE XREF: version_etc_ar+19↓j
.text:00000000000063F0                 add     r9, 1
.text:00000000000063F4                 cmp     qword ptr [r8+r9*8], 0
.text:00000000000063F9                 jnz     short loc_63F0
.text:00000000000063FB
.text:00000000000063FB loc_63FB:                               ; CODE XREF: version_etc_ar+7↑j
.text:00000000000063FB                 jmp     version_etc_arn
.text:00000000000063FB ; } // starts at 63E0
.text:00000000000063FB version_etc_ar  endp
.text:00000000000063FB
.text:0000000000006400
.text:0000000000006400 ; =============== S U B R O U T I N E =======================================
.text:0000000000006400
.text:0000000000006400 ; Attributes: info_from_lumina
.text:0000000000006400
.text:0000000000006400 ; void __fastcall version_etc_va(FILE *stream, const char *command_name, const char *package, const char *version, __va_list_tag *authors)
.text:0000000000006400                 public version_etc_va
.text:0000000000006400 version_etc_va  proc near
.text:0000000000006400
.text:0000000000006400 authtab         = qword ptr -68h
.text:0000000000006400 var_10          = qword ptr -10h
.text:0000000000006400
.text:0000000000006400 ; __unwind {
.text:0000000000006400                 sub     rsp, 68h
.text:0000000000006404                 mov     r10, r8
.text:0000000000006407                 xor     r9d, r9d
.text:000000000000640A                 mov     rax, fs:28h
.text:0000000000006413                 mov     [rsp+68h+var_10], rax
.text:0000000000006418                 xor     eax, eax
.text:000000000000641A                 mov     r8, rsp
.text:000000000000641D                 nop     dword ptr [rax]
.text:0000000000006420
.text:0000000000006420 loc_6420:                               ; CODE XREF: version_etc_va+49↓j
.text:0000000000006420                 mov     eax, [r10]
.text:0000000000006423                 cmp     eax, 2Fh ; '/'
.text:0000000000006426                 ja      short loc_646A
.text:0000000000006428                 mov     r11d, eax
.text:000000000000642B                 add     r11, [r10+10h]
.text:000000000000642F                 add     eax, 8
.text:0000000000006432                 mov     [r10], eax
.text:0000000000006435
.text:0000000000006435 loc_6435:                               ; CODE XREF: version_etc_va+76↓j
.text:0000000000006435                 mov     rax, [r11]
.text:0000000000006438                 test    rax, rax
.text:000000000000643B                 mov     [r8+r9*8], rax
.text:000000000000643F                 jz      short loc_644B
.text:0000000000006441                 add     r9, 1
.text:0000000000006445                 cmp     r9, 0Ah
.text:0000000000006449                 jnz     short loc_6420
.text:000000000000644B
.text:000000000000644B loc_644B:                               ; CODE XREF: version_etc_va+3F↑j
.text:000000000000644B                 call    version_etc_arn
.text:0000000000006450                 mov     rax, [rsp+68h+var_10]
.text:0000000000006455                 xor     rax, fs:28h
.text:000000000000645E                 jnz     short loc_6465
.text:0000000000006460                 add     rsp, 68h
.text:0000000000006464                 retn
.text:0000000000006465 ; ---------------------------------------------------------------------------
.text:0000000000006465
.text:0000000000006465 loc_6465:                               ; CODE XREF: version_etc_va+5E↑j
.text:0000000000006465                 call    ___stack_chk_fail
.text:000000000000646A ; ---------------------------------------------------------------------------
.text:000000000000646A
.text:000000000000646A loc_646A:                               ; CODE XREF: version_etc_va+26↑j
.text:000000000000646A                 mov     r11, [r10+8]
.text:000000000000646E                 lea     rax, [r11+8]
.text:0000000000006472                 mov     [r10+8], rax
.text:0000000000006476                 jmp     short loc_6435
.text:0000000000006476 ; } // starts at 6400
.text:0000000000006476 version_etc_va  endp
.text:0000000000006476
.text:0000000000006476 ; ---------------------------------------------------------------------------
.text:0000000000006478                 align 20h
.text:0000000000006480
.text:0000000000006480 ; =============== S U B R O U T I N E =======================================
.text:0000000000006480
.text:0000000000006480 ; Attributes: info_from_lumina
.text:0000000000006480
.text:0000000000006480 ; void version_etc(FILE *stream, const char *command_name, const char *package, const char *version, ...)
.text:0000000000006480                 public version_etc
.text:0000000000006480 version_etc     proc near               ; CODE XREF: main+120↑p
.text:0000000000006480
.text:0000000000006480 var_C0          = dword ptr -0C0h
.text:0000000000006480 var_B8          = qword ptr -0B8h
.text:0000000000006480 var_B0          = qword ptr -0B0h
.text:0000000000006480 var_A8          = byte ptr -0A8h
.text:0000000000006480 var_50          = qword ptr -50h
.text:0000000000006480 var_48          = byte ptr -48h
.text:0000000000006480 var_28          = qword ptr -28h
.text:0000000000006480 var_20          = qword ptr -20h
.text:0000000000006480 arg_0           = byte ptr  8
.text:0000000000006480
.text:0000000000006480 ; __unwind {
.text:0000000000006480                 push    rbp
.text:0000000000006481                 push    rbx
.text:0000000000006482                 mov     r10d, 20h ; ' '
.text:0000000000006488                 xor     r11d, r11d
.text:000000000000648B                 sub     rsp, 0B8h
.text:0000000000006492                 mov     rax, fs:28h
.text:000000000000649B                 mov     [rsp+0C8h+var_50], rax
.text:00000000000064A0                 xor     eax, eax
.text:00000000000064A2                 lea     rax, [rsp+0C8h+arg_0]
.text:00000000000064AA                 mov     [rsp+0C8h+var_28], r8
.text:00000000000064B2                 lea     rbx, [rsp+0C8h+arg_0]
.text:00000000000064BA                 lea     r8, [rsp+0C8h+var_A8]
.text:00000000000064BF                 mov     [rsp+0C8h+var_20], r9
.text:00000000000064C7                 mov     [rsp+0C8h+var_C0], 20h ; ' '
.text:00000000000064CF                 mov     [rsp+0C8h+var_B8], rax
.text:00000000000064D4                 lea     rax, [rsp+0C8h+var_48]
.text:00000000000064DC                 xor     r9d, r9d
.text:00000000000064DF                 mov     [rsp+0C8h+var_B0], rax
.text:00000000000064E4                 mov     rbp, rax
.text:00000000000064E7                 nop     word ptr [rax+rax+00000000h]
.text:00000000000064F0
.text:00000000000064F0 loc_64F0:                               ; CODE XREF: version_etc+9A↓j
.text:00000000000064F0                 cmp     r10d, 2Fh ; '/'
.text:00000000000064F4                 ja      short loc_654C
.text:00000000000064F6                 mov     eax, r10d
.text:00000000000064F9                 mov     r11d, 1
.text:00000000000064FF                 add     r10d, 8
.text:0000000000006503                 add     rax, rbp
.text:0000000000006506
.text:0000000000006506 loc_6506:                               ; CODE XREF: version_etc+D3↓j
.text:0000000000006506                 mov     rax, [rax]
.text:0000000000006509                 test    rax, rax
.text:000000000000650C                 mov     [r8+r9*8], rax
.text:0000000000006510                 jz      short loc_651C
.text:0000000000006512                 add     r9, 1
.text:0000000000006516                 cmp     r9, 0Ah
.text:000000000000651A                 jnz     short loc_64F0
.text:000000000000651C
.text:000000000000651C loc_651C:                               ; CODE XREF: version_etc+90↑j
.text:000000000000651C                 test    r11b, r11b
.text:000000000000651F                 jnz     short loc_6545
.text:0000000000006521
.text:0000000000006521 loc_6521:                               ; CODE XREF: version_etc+CA↓j
.text:0000000000006521                 call    version_etc_arn
.text:0000000000006526                 mov     rax, [rsp+0C8h+var_50]
.text:000000000000652B                 xor     rax, fs:28h
.text:0000000000006534                 jnz     short loc_6540
.text:0000000000006536                 add     rsp, 0B8h
.text:000000000000653D                 pop     rbx
.text:000000000000653E                 pop     rbp
.text:000000000000653F                 retn
.text:0000000000006540 ; ---------------------------------------------------------------------------
.text:0000000000006540
.text:0000000000006540 loc_6540:                               ; CODE XREF: version_etc+B4↑j
.text:0000000000006540                 call    ___stack_chk_fail
.text:0000000000006545 ; ---------------------------------------------------------------------------
.text:0000000000006545
.text:0000000000006545 loc_6545:                               ; CODE XREF: version_etc+9F↑j
.text:0000000000006545                 mov     [rsp+0C8h+var_C0], r10d
.text:000000000000654A                 jmp     short loc_6521
.text:000000000000654C ; ---------------------------------------------------------------------------
.text:000000000000654C
.text:000000000000654C loc_654C:                               ; CODE XREF: version_etc+74↑j
.text:000000000000654C                 mov     rax, rbx
.text:000000000000654F                 add     rbx, 8
.text:0000000000006553                 jmp     short loc_6506
.text:0000000000006553 ; } // starts at 6480
.text:0000000000006553 version_etc     endp
.text:0000000000006553
.text:0000000000006553 ; ---------------------------------------------------------------------------
.text:0000000000006555                 align 20h
.text:0000000000006560
.text:0000000000006560 ; =============== S U B R O U T I N E =======================================
.text:0000000000006560
.text:0000000000006560 ; Attributes: info_from_lumina
.text:0000000000006560
.text:0000000000006560 ; void __cdecl emit_bug_reporting_address()
.text:0000000000006560                 public emit_bug_reporting_address
.text:0000000000006560 emit_bug_reporting_address proc near
.text:0000000000006560 ; __unwind {
.text:0000000000006560                 push    rbx
.text:0000000000006561                 lea     rsi, aReportBugsToS ; "\nReport bugs to: %s\n"
.text:0000000000006568                 mov     edx, 5          ; category
.text:000000000000656D                 xor     edi, edi        ; domainname
.text:000000000000656F                 call    _dcgettext
.text:0000000000006574                 lea     rdx, aBugCoreutilsGn ; "bug-coreutils@gnu.org"
.text:000000000000657B                 mov     rsi, rax
.text:000000000000657E                 mov     edi, 1
.text:0000000000006583                 xor     eax, eax
.text:0000000000006585                 call    ___printf_chk
.text:000000000000658A                 lea     rsi, aSHomePageS ; "%s home page: <%s>\n"
.text:0000000000006591                 mov     edx, 5          ; category
.text:0000000000006596                 xor     edi, edi        ; domainname
.text:0000000000006598                 call    _dcgettext
.text:000000000000659D                 lea     rcx, aHttpsWwwGnuOrg ; "https://www.gnu.org/software/coreutils/"
.text:00000000000065A4                 lea     rdx, unk_7119
.text:00000000000065AB                 mov     rsi, rax
.text:00000000000065AE                 mov     edi, 1
.text:00000000000065B3                 xor     eax, eax
.text:00000000000065B5                 call    ___printf_chk
.text:00000000000065BA                 mov     rbx, cs:stdout@@GLIBC_2_2_5
.text:00000000000065C1                 lea     rsi, aGeneralHelpUsi ; "General help using GNU software: <https"...
.text:00000000000065C8                 xor     edi, edi        ; domainname
.text:00000000000065CA                 mov     edx, 5          ; category
.text:00000000000065CF                 call    _dcgettext
.text:00000000000065D4                 mov     rsi, rbx        ; stream
.text:00000000000065D7                 mov     rdi, rax        ; s
.text:00000000000065DA                 pop     rbx
.text:00000000000065DB                 jmp     _fputs_unlocked
.text:00000000000065DB ; } // starts at 6560
.text:00000000000065DB emit_bug_reporting_address endp
.text:00000000000065DB
.text:00000000000065E0
.text:00000000000065E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000065E0
.text:00000000000065E0
.text:00000000000065E0                 public xmalloc
.text:00000000000065E0 xmalloc         proc near               ; CODE XREF: main+1DF↑p
.text:00000000000065E0                                         ; main+44C↑p ...
.text:00000000000065E0 ; __unwind {
.text:00000000000065E0                 push    rbx
.text:00000000000065E1                 mov     rbx, rdi
.text:00000000000065E4                 call    _malloc
.text:00000000000065E9                 test    rax, rax
.text:00000000000065EC                 jnz     short loc_65F3
.text:00000000000065EE                 test    rbx, rbx
.text:00000000000065F1                 jnz     short loc_65F5
.text:00000000000065F3
.text:00000000000065F3 loc_65F3:                               ; CODE XREF: xmalloc+C↑j
.text:00000000000065F3                 pop     rbx
.text:00000000000065F4                 retn
.text:00000000000065F5 ; ---------------------------------------------------------------------------
.text:00000000000065F5
.text:00000000000065F5 loc_65F5:                               ; CODE XREF: xmalloc+11↑j
.text:00000000000065F5                 call    xalloc_die
.text:00000000000065F5 ; } // starts at 65E0
.text:00000000000065F5 xmalloc         endp
.text:00000000000065F5
.text:00000000000065F5 ; ---------------------------------------------------------------------------
.text:00000000000065FA                 align 20h
.text:0000000000006600
.text:0000000000006600 ; =============== S U B R O U T I N E =======================================
.text:0000000000006600
.text:0000000000006600 ; Attributes: info_from_lumina
.text:0000000000006600
.text:0000000000006600 ; void *__fastcall xnmalloc(size_t n, size_t s)
.text:0000000000006600                 public xnmalloc
.text:0000000000006600 xnmalloc        proc near
.text:0000000000006600 ; __unwind {
.text:0000000000006600                 mov     rax, rdi
.text:0000000000006603                 mul     rsi
.text:0000000000006606                 mov     rdi, rax
.text:0000000000006609                 seto    al
.text:000000000000660C                 test    rdi, rdi
.text:000000000000660F                 js      short loc_661B
.text:0000000000006611                 movzx   eax, al
.text:0000000000006614                 test    rax, rax
.text:0000000000006617                 jnz     short loc_661B
.text:0000000000006619                 jmp     short xmalloc
.text:000000000000661B ; ---------------------------------------------------------------------------
.text:000000000000661B
.text:000000000000661B loc_661B:                               ; CODE XREF: xnmalloc+F↑j
.text:000000000000661B                                         ; xnmalloc+17↑j
.text:000000000000661B                 sub     rsp, 8
.text:000000000000661F                 call    xalloc_die
.text:000000000000661F ; } // starts at 6600
.text:000000000000661F xnmalloc        endp
.text:000000000000661F
.text:000000000000661F ; ---------------------------------------------------------------------------
.text:0000000000006624                 align 10h
.text:0000000000006630
.text:0000000000006630 ; =============== S U B R O U T I N E =======================================
.text:0000000000006630
.text:0000000000006630
.text:0000000000006630                 public xcharalloc
.text:0000000000006630 xcharalloc      proc near
.text:0000000000006630 ; __unwind {
.text:0000000000006630                 jmp     short xmalloc
.text:0000000000006630 ; } // starts at 6630
.text:0000000000006630 xcharalloc      endp
.text:0000000000006630
.text:0000000000006630 ; ---------------------------------------------------------------------------
.text:0000000000006632                 align 20h
.text:0000000000006640
.text:0000000000006640 ; =============== S U B R O U T I N E =======================================
.text:0000000000006640
.text:0000000000006640 ; Attributes: info_from_lumina
.text:0000000000006640
.text:0000000000006640 ; void *__fastcall xrealloc(void *p, size_t n)
.text:0000000000006640                 public xrealloc
.text:0000000000006640 xrealloc        proc near               ; CODE XREF: quotearg_n_options+6E↑p
.text:0000000000006640                                         ; quotearg_n_options+182↑p ...
.text:0000000000006640 ; __unwind {
.text:0000000000006640                 test    rsi, rsi
.text:0000000000006643                 push    rbx
.text:0000000000006644                 mov     rbx, rsi
.text:0000000000006647                 jnz     short loc_664E
.text:0000000000006649                 test    rdi, rdi
.text:000000000000664C                 jnz     short loc_6668
.text:000000000000664E
.text:000000000000664E loc_664E:                               ; CODE XREF: xrealloc+7↑j
.text:000000000000664E                 mov     rsi, rbx        ; size
.text:0000000000006651                 call    _realloc
.text:0000000000006656                 test    rax, rax
.text:0000000000006659                 jnz     short loc_6660
.text:000000000000665B                 test    rbx, rbx
.text:000000000000665E                 jnz     short loc_6671
.text:0000000000006660
.text:0000000000006660 loc_6660:                               ; CODE XREF: xrealloc+19↑j
.text:0000000000006660                 pop     rbx
.text:0000000000006661                 retn
.text:0000000000006661 ; ---------------------------------------------------------------------------
.text:0000000000006662                 align 8
.text:0000000000006668
.text:0000000000006668 loc_6668:                               ; CODE XREF: xrealloc+C↑j
.text:0000000000006668                 call    _free
.text:000000000000666D                 xor     eax, eax
.text:000000000000666F                 pop     rbx
.text:0000000000006670                 retn
.text:0000000000006671 ; ---------------------------------------------------------------------------
.text:0000000000006671
.text:0000000000006671 loc_6671:                               ; CODE XREF: xrealloc+1E↑j
.text:0000000000006671                 call    xalloc_die
.text:0000000000006671 ; } // starts at 6640
.text:0000000000006671 xrealloc        endp
.text:0000000000006671
.text:0000000000006671 ; ---------------------------------------------------------------------------
.text:0000000000006676                 align 20h
.text:0000000000006680
.text:0000000000006680 ; =============== S U B R O U T I N E =======================================
.text:0000000000006680
.text:0000000000006680 ; Attributes: info_from_lumina
.text:0000000000006680
.text:0000000000006680 ; void *__fastcall xnrealloc(void *p, size_t n, size_t s)
.text:0000000000006680                 public xnrealloc
.text:0000000000006680 xnrealloc       proc near
.text:0000000000006680 ; __unwind {
.text:0000000000006680                 mov     rax, rsi
.text:0000000000006683                 mul     rdx
.text:0000000000006686                 mov     rsi, rax
.text:0000000000006689                 seto    al
.text:000000000000668C                 test    rsi, rsi
.text:000000000000668F                 js      short loc_669B
.text:0000000000006691                 movzx   eax, al
.text:0000000000006694                 test    rax, rax
.text:0000000000006697                 jnz     short loc_669B
.text:0000000000006699                 jmp     short xrealloc
.text:000000000000669B ; ---------------------------------------------------------------------------
.text:000000000000669B
.text:000000000000669B loc_669B:                               ; CODE XREF: xnrealloc+F↑j
.text:000000000000669B                                         ; xnrealloc+17↑j
.text:000000000000669B                 sub     rsp, 8
.text:000000000000669F                 call    xalloc_die
.text:000000000000669F ; } // starts at 6680
.text:000000000000669F xnrealloc       endp
.text:000000000000669F
.text:000000000000669F ; ---------------------------------------------------------------------------
.text:00000000000066A4                 align 10h
.text:00000000000066B0
.text:00000000000066B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000066B0
.text:00000000000066B0 ; Attributes: info_from_lumina
.text:00000000000066B0
.text:00000000000066B0 ; void *__fastcall x2nrealloc(void *p, size_t *pn, size_t s)
.text:00000000000066B0                 public x2nrealloc
.text:00000000000066B0 x2nrealloc      proc near
.text:00000000000066B0 ; __unwind {
.text:00000000000066B0                 test    rdi, rdi
.text:00000000000066B3                 mov     r9, rdx
.text:00000000000066B6                 mov     rcx, [rsi]
.text:00000000000066B9                 jz      short loc_66F0
.text:00000000000066BB                 xor     edx, edx
.text:00000000000066BD                 mov     rax, 5555555555555554h
.text:00000000000066C7                 div     r9
.text:00000000000066CA                 cmp     rax, rcx
.text:00000000000066CD                 jbe     short loc_670B
.text:00000000000066CF                 mov     rax, rcx
.text:00000000000066D2                 shr     rax, 1
.text:00000000000066D5                 lea     rcx, [rax+rcx+1]
.text:00000000000066DA
.text:00000000000066DA loc_66DA:                               ; CODE XREF: x2nrealloc+59↓j
.text:00000000000066DA                 mov     [rsi], rcx
.text:00000000000066DD                 imul    rcx, r9
.text:00000000000066E1                 mov     rsi, rcx
.text:00000000000066E4                 jmp     xrealloc
.text:00000000000066E4 ; ---------------------------------------------------------------------------
.text:00000000000066E9                 align 10h
.text:00000000000066F0
.text:00000000000066F0 loc_66F0:                               ; CODE XREF: x2nrealloc+9↑j
.text:00000000000066F0                 test    rcx, rcx
.text:00000000000066F3                 jz      short loc_6718
.text:00000000000066F5
.text:00000000000066F5 loc_66F5:                               ; CODE XREF: x2nrealloc+80↓j
.text:00000000000066F5                 mov     rax, rcx
.text:00000000000066F8                 mul     r9
.text:00000000000066FB                 seto    dl
.text:00000000000066FE                 test    rax, rax
.text:0000000000006701                 movzx   edx, dl
.text:0000000000006704                 js      short loc_670B
.text:0000000000006706                 test    rdx, rdx
.text:0000000000006709                 jz      short loc_66DA
.text:000000000000670B
.text:000000000000670B loc_670B:                               ; CODE XREF: x2nrealloc+1D↑j
.text:000000000000670B                                         ; x2nrealloc+54↑j
.text:000000000000670B                 sub     rsp, 8
.text:000000000000670F                 call    xalloc_die
.text:000000000000670F ; ---------------------------------------------------------------------------
.text:0000000000006714                 align 8
.text:0000000000006718
.text:0000000000006718 loc_6718:                               ; CODE XREF: x2nrealloc+43↑j
.text:0000000000006718                 xor     edx, edx
.text:000000000000671A                 mov     eax, 80h
.text:000000000000671F                 xor     r8d, r8d
.text:0000000000006722                 div     r9
.text:0000000000006725                 test    rax, rax
.text:0000000000006728                 setz    r8b
.text:000000000000672C                 lea     rcx, [r8+rax]
.text:0000000000006730                 jmp     short loc_66F5
.text:0000000000006730 ; } // starts at 66B0
.text:0000000000006730 x2nrealloc      endp
.text:0000000000006730
.text:0000000000006730 ; ---------------------------------------------------------------------------
.text:0000000000006732                 align 20h
.text:0000000000006740
.text:0000000000006740 ; =============== S U B R O U T I N E =======================================
.text:0000000000006740
.text:0000000000006740 ; Attributes: info_from_lumina
.text:0000000000006740
.text:0000000000006740 ; void *__fastcall x2realloc(void *p, size_t *pn)
.text:0000000000006740                 public x2realloc
.text:0000000000006740 x2realloc       proc near
.text:0000000000006740 ; __unwind {
.text:0000000000006740                 test    rdi, rdi
.text:0000000000006743                 mov     rax, [rsi]
.text:0000000000006746                 jz      short loc_6770
.text:0000000000006748                 mov     rdx, 5555555555555553h
.text:0000000000006752                 cmp     rax, rdx
.text:0000000000006755                 ja      short loc_6781
.text:0000000000006757                 mov     rdx, rax
.text:000000000000675A                 shr     rdx, 1
.text:000000000000675D                 lea     rax, [rdx+rax+1]
.text:0000000000006762
.text:0000000000006762 loc_6762:                               ; CODE XREF: x2realloc+3F↓j
.text:0000000000006762                 mov     [rsi], rax
.text:0000000000006765                 mov     rsi, rax
.text:0000000000006768                 jmp     xrealloc
.text:0000000000006768 ; ---------------------------------------------------------------------------
.text:000000000000676D                 align 10h
.text:0000000000006770
.text:0000000000006770 loc_6770:                               ; CODE XREF: x2realloc+6↑j
.text:0000000000006770                 test    rax, rax
.text:0000000000006773                 mov     edx, 80h
.text:0000000000006778                 cmovz   rax, rdx
.text:000000000000677C                 test    rax, rax
.text:000000000000677F                 jns     short loc_6762
.text:0000000000006781
.text:0000000000006781 loc_6781:                               ; CODE XREF: x2realloc+15↑j
.text:0000000000006781                 sub     rsp, 8
.text:0000000000006785                 call    xalloc_die
.text:0000000000006785 ; } // starts at 6740
.text:0000000000006785 x2realloc       endp
.text:0000000000006785
.text:0000000000006785 ; ---------------------------------------------------------------------------
.text:000000000000678A                 align 10h
.text:0000000000006790
.text:0000000000006790 ; =============== S U B R O U T I N E =======================================
.text:0000000000006790
.text:0000000000006790
.text:0000000000006790 ; __int64 __fastcall xzalloc(size_t n)
.text:0000000000006790                 public xzalloc
.text:0000000000006790 xzalloc         proc near
.text:0000000000006790 ; __unwind {
.text:0000000000006790                 push    rbx
.text:0000000000006791                 mov     rbx, rdi
.text:0000000000006794                 call    xmalloc
.text:0000000000006799                 mov     rdx, rbx        ; n
.text:000000000000679C                 xor     esi, esi        ; c
.text:000000000000679E                 mov     rdi, rax        ; s
.text:00000000000067A1                 pop     rbx
.text:00000000000067A2                 jmp     _memset
.text:00000000000067A2 ; } // starts at 6790
.text:00000000000067A2 xzalloc         endp
.text:00000000000067A2
.text:00000000000067A2 ; ---------------------------------------------------------------------------
.text:00000000000067A7                 align 10h
.text:00000000000067B0
.text:00000000000067B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000067B0
.text:00000000000067B0 ; Attributes: info_from_lumina
.text:00000000000067B0
.text:00000000000067B0 ; void *__fastcall xcalloc(size_t n, size_t s)
.text:00000000000067B0                 public xcalloc
.text:00000000000067B0 xcalloc         proc near               ; CODE XREF: parse_str+54↑p
.text:00000000000067B0 ; __unwind {
.text:00000000000067B0                 mov     rax, rdi
.text:00000000000067B3                 sub     rsp, 8
.text:00000000000067B7                 mul     rsi
.text:00000000000067BA                 seto    dl
.text:00000000000067BD                 test    rax, rax
.text:00000000000067C0                 js      short loc_67D9
.text:00000000000067C2                 movzx   edx, dl
.text:00000000000067C5                 test    rdx, rdx
.text:00000000000067C8                 jnz     short loc_67D9
.text:00000000000067CA                 call    _calloc
.text:00000000000067CF                 test    rax, rax
.text:00000000000067D2                 jz      short loc_67D9
.text:00000000000067D4                 add     rsp, 8
.text:00000000000067D8                 retn
.text:00000000000067D9 ; ---------------------------------------------------------------------------
.text:00000000000067D9
.text:00000000000067D9 loc_67D9:                               ; CODE XREF: xcalloc+10↑j
.text:00000000000067D9                                         ; xcalloc+18↑j ...
.text:00000000000067D9                 call    xalloc_die
.text:00000000000067D9 ; } // starts at 67B0
.text:00000000000067D9 xcalloc         endp
.text:00000000000067D9
.text:00000000000067D9 ; ---------------------------------------------------------------------------
.text:00000000000067DE                 align 20h
.text:00000000000067E0
.text:00000000000067E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000067E0
.text:00000000000067E0 ; Attributes: info_from_lumina
.text:00000000000067E0
.text:00000000000067E0 ; void *__fastcall xmemdup(const void *p, size_t s)
.text:00000000000067E0                 public xmemdup
.text:00000000000067E0 xmemdup         proc near               ; CODE XREF: clone_quoting_options+28↑p
.text:00000000000067E0                                         ; xstrdup+11↓j
.text:00000000000067E0 ; __unwind {
.text:00000000000067E0                 push    rbp
.text:00000000000067E1                 push    rbx
.text:00000000000067E2                 mov     rbp, rdi
.text:00000000000067E5                 mov     rdi, rsi
.text:00000000000067E8                 mov     rbx, rsi
.text:00000000000067EB                 sub     rsp, 8
.text:00000000000067EF                 call    xmalloc
.text:00000000000067F4                 add     rsp, 8
.text:00000000000067F8                 mov     rdx, rbx        ; n
.text:00000000000067FB                 mov     rsi, rbp        ; src
.text:00000000000067FE                 pop     rbx
.text:00000000000067FF                 pop     rbp
.text:0000000000006800                 mov     rdi, rax        ; dest
.text:0000000000006803                 jmp     _memcpy
.text:0000000000006803 ; } // starts at 67E0
.text:0000000000006803 xmemdup         endp
.text:0000000000006803
.text:0000000000006803 ; ---------------------------------------------------------------------------
.text:0000000000006808                 align 10h
.text:0000000000006810
.text:0000000000006810 ; =============== S U B R O U T I N E =======================================
.text:0000000000006810
.text:0000000000006810
.text:0000000000006810 ; __int64 __fastcall xstrdup(void *src)
.text:0000000000006810                 public xstrdup
.text:0000000000006810 xstrdup         proc near
.text:0000000000006810 ; __unwind {
.text:0000000000006810                 push    rbx
.text:0000000000006811                 mov     rbx, rdi
.text:0000000000006814                 call    _strlen
.text:0000000000006819                 mov     rdi, rbx        ; src
.text:000000000000681C                 lea     rsi, [rax+1]    ; n
.text:0000000000006820                 pop     rbx
.text:0000000000006821                 jmp     short xmemdup
.text:0000000000006821 ; } // starts at 6810
.text:0000000000006821 xstrdup         endp
.text:0000000000006821
.text:0000000000006821 ; ---------------------------------------------------------------------------
.text:0000000000006823                 align 10h
.text:0000000000006830
.text:0000000000006830 ; =============== S U B R O U T I N E =======================================
.text:0000000000006830
.text:0000000000006830 ; Attributes: noreturn info_from_lumina
.text:0000000000006830
.text:0000000000006830 ; void __cdecl xalloc_die()
.text:0000000000006830                 public xalloc_die
.text:0000000000006830 xalloc_die      proc near               ; CODE XREF: make_printable_str:loc_2A3F↑p
.text:0000000000006830                                         ; quotearg_n_options:loc_57A6↑p ...
.text:0000000000006830 ; __unwind {
.text:0000000000006830                 lea     rsi, aMemoryExhauste ; "memory exhausted"
.text:0000000000006837                 sub     rsp, 8
.text:000000000000683B                 mov     edx, 5          ; category
.text:0000000000006840                 xor     edi, edi        ; domainname
.text:0000000000006842                 call    _dcgettext
.text:0000000000006847                 mov     edi, cs:exit_failure ; status
.text:000000000000684D                 lea     rdx, format+4   ; format
.text:0000000000006854                 mov     rcx, rax
.text:0000000000006857                 xor     esi, esi        ; errnum
.text:0000000000006859                 xor     eax, eax
.text:000000000000685B                 call    _error
.text:0000000000006860                 call    _abort
.text:0000000000006860 ; } // starts at 6830
.text:0000000000006860 xalloc_die      endp
.text:0000000000006860
.text:0000000000006860 ; ---------------------------------------------------------------------------
.text:0000000000006865                 align 10h
.text:0000000000006870
.text:0000000000006870 ; =============== S U B R O U T I N E =======================================
.text:0000000000006870
.text:0000000000006870
.text:0000000000006870 ; __int64 __fastcall xstrtoumax(char *nptr)
.text:0000000000006870                 public xstrtoumax
.text:0000000000006870 xstrtoumax      proc near               ; CODE XREF: parse_str+574↑p
.text:0000000000006870
.text:0000000000006870 base            = dword ptr -50h
.text:0000000000006870 endptr          = qword ptr -48h
.text:0000000000006870 var_40          = qword ptr -40h
.text:0000000000006870
.text:0000000000006870 ; __unwind {
.text:0000000000006870                 push    r15
.text:0000000000006872                 push    r14
.text:0000000000006874                 push    r13
.text:0000000000006876                 push    r12
.text:0000000000006878                 push    rbp
.text:0000000000006879                 push    rbx
.text:000000000000687A                 sub     rsp, 28h
.text:000000000000687E                 mov     rax, fs:28h
.text:0000000000006887                 mov     [rsp+58h+var_40], rax
.text:000000000000688C                 xor     eax, eax
.text:000000000000688E                 cmp     edx, 24h ; '$'
.text:0000000000006891                 ja      loc_6BF5
.text:0000000000006897                 lea     rax, [rsp+58h+endptr]
.text:000000000000689C                 mov     r15, rsi
.text:000000000000689F                 test    rsi, rsi
.text:00000000000068A2                 mov     rbp, rdi
.text:00000000000068A5                 mov     [rsp+58h+base], edx
.text:00000000000068A9                 mov     r14, rcx
.text:00000000000068AC                 mov     r13, r8
.text:00000000000068AF                 cmovz   r15, rax
.text:00000000000068B3                 call    ___errno_location
.text:00000000000068B8                 mov     dword ptr [rax], 0
.text:00000000000068BE                 mov     r12, rax
.text:00000000000068C1                 movzx   ebx, byte ptr [rbp+0]
.text:00000000000068C5                 call    ___ctype_b_loc
.text:00000000000068CA                 mov     edx, [rsp+58h+base] ; base
.text:00000000000068CE                 mov     rsi, [rax]
.text:00000000000068D1                 mov     rax, rbp
.text:00000000000068D4                 jmp     short loc_68E7
.text:00000000000068D4 ; ---------------------------------------------------------------------------
.text:00000000000068D6                 align 20h
.text:00000000000068E0
.text:00000000000068E0 loc_68E0:                               ; CODE XREF: xstrtoumax+7F↓j
.text:00000000000068E0                 add     rax, 1
.text:00000000000068E4                 movzx   ebx, byte ptr [rax]
.text:00000000000068E7
.text:00000000000068E7 loc_68E7:                               ; CODE XREF: xstrtoumax+64↑j
.text:00000000000068E7                 movzx   ecx, bl
.text:00000000000068EA                 test    byte ptr [rsi+rcx*2+1], 20h
.text:00000000000068EF                 jnz     short loc_68E0
.text:00000000000068F1                 cmp     bl, 2Dh ; '-'
.text:00000000000068F4                 jz      short loc_6948
.text:00000000000068F6                 xor     ecx, ecx        ; group
.text:00000000000068F8                 mov     rsi, r15        ; endptr
.text:00000000000068FB                 mov     rdi, rbp        ; nptr
.text:00000000000068FE                 call    ___strtoul_internal
.text:0000000000006903                 mov     rcx, [r15]
.text:0000000000006906                 mov     rbx, rax
.text:0000000000006909                 cmp     rcx, rbp
.text:000000000000690C                 jz      short loc_6938
.text:000000000000690E                 mov     eax, [r12]
.text:0000000000006912                 test    eax, eax
.text:0000000000006914                 jz      short loc_6978
.text:0000000000006916                 cmp     eax, 22h ; '"'
.text:0000000000006919                 mov     ebp, 1
.text:000000000000691E                 jnz     short loc_6948
.text:0000000000006920
.text:0000000000006920 loc_6920:                               ; CODE XREF: xstrtoumax+10A↓j
.text:0000000000006920                 test    r13, r13
.text:0000000000006923                 jz      short loc_692E
.text:0000000000006925                 movzx   r12d, byte ptr [rcx]
.text:0000000000006929                 test    r12b, r12b
.text:000000000000692C                 jnz     short loc_69A7
.text:000000000000692E
.text:000000000000692E loc_692E:                               ; CODE XREF: xstrtoumax+B3↑j
.text:000000000000692E                 mov     [r14], rbx
.text:0000000000006931                 jmp     short loc_694D
.text:0000000000006931 ; ---------------------------------------------------------------------------
.text:0000000000006933                 align 8
.text:0000000000006938
.text:0000000000006938 loc_6938:                               ; CODE XREF: xstrtoumax+9C↑j
.text:0000000000006938                 test    r13, r13
.text:000000000000693B                 mov     qword ptr [rsp+58h+base], rcx
.text:0000000000006940                 jnz     short loc_6980
.text:0000000000006942                 nop     word ptr [rax+rax+00h]
.text:0000000000006948
.text:0000000000006948 loc_6948:                               ; CODE XREF: xstrtoumax+84↑j
.text:0000000000006948                                         ; xstrtoumax+AE↑j ...
.text:0000000000006948                 mov     ebp, 4
.text:000000000000694D
.text:000000000000694D loc_694D:                               ; CODE XREF: xstrtoumax+C1↑j
.text:000000000000694D                                         ; xstrtoumax+217↓j ...
.text:000000000000694D                 mov     rdi, [rsp+58h+var_40]
.text:0000000000006952                 xor     rdi, fs:28h
.text:000000000000695B                 mov     eax, ebp
.text:000000000000695D                 jnz     loc_6BF0
.text:0000000000006963                 add     rsp, 28h
.text:0000000000006967                 pop     rbx
.text:0000000000006968                 pop     rbp
.text:0000000000006969                 pop     r12
.text:000000000000696B                 pop     r13
.text:000000000000696D                 pop     r14
.text:000000000000696F                 pop     r15
.text:0000000000006971                 retn
.text:0000000000006971 ; ---------------------------------------------------------------------------
.text:0000000000006972                 align 8
.text:0000000000006978
.text:0000000000006978 loc_6978:                               ; CODE XREF: xstrtoumax+A4↑j
.text:0000000000006978                 xor     ebp, ebp
.text:000000000000697A                 jmp     short loc_6920
.text:000000000000697A ; ---------------------------------------------------------------------------
.text:000000000000697C                 align 20h
.text:0000000000006980
.text:0000000000006980 loc_6980:                               ; CODE XREF: xstrtoumax+D0↑j
.text:0000000000006980                 movzx   r12d, byte ptr [rbp+0]
.text:0000000000006985                 test    r12b, r12b
.text:0000000000006988                 jz      short loc_6948
.text:000000000000698A                 movsx   esi, r12b       ; c
.text:000000000000698E                 mov     rdi, r13        ; s
.text:0000000000006991                 xor     ebp, ebp
.text:0000000000006993                 call    _strchr
.text:0000000000006998                 test    rax, rax
.text:000000000000699B                 mov     ebx, 1
.text:00000000000069A0                 mov     rcx, qword ptr [rsp+58h+base]
.text:00000000000069A5                 jz      short loc_6948
.text:00000000000069A7
.text:00000000000069A7 loc_69A7:                               ; CODE XREF: xstrtoumax+BC↑j
.text:00000000000069A7                 movsx   esi, r12b       ; c
.text:00000000000069AB                 mov     rdi, r13        ; s
.text:00000000000069AE                 mov     qword ptr [rsp+58h+base], rcx
.text:00000000000069B3                 call    _strchr
.text:00000000000069B8                 test    rax, rax
.text:00000000000069BB                 mov     rcx, qword ptr [rsp+58h+base]
.text:00000000000069C0                 jz      def_6A46        ; jumptable 0000000000006A46 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:00000000000069C6                 lea     eax, [r12-45h]
.text:00000000000069CB                 cmp     al, 2Fh ; '/'
.text:00000000000069CD                 ja      short loc_6A20
.text:00000000000069CF                 mov     rdx, 814400308945h
.text:00000000000069D9                 bt      rdx, rax
.text:00000000000069DD                 jnb     short loc_6A20
.text:00000000000069DF                 mov     esi, 30h ; '0'  ; c
.text:00000000000069E4                 mov     rdi, r13        ; s
.text:00000000000069E7                 mov     qword ptr [rsp+58h+base], rcx
.text:00000000000069EC                 call    _strchr
.text:00000000000069F1                 test    rax, rax
.text:00000000000069F4                 mov     rcx, qword ptr [rsp+58h+base]
.text:00000000000069F9                 jz      short loc_6A20
.text:00000000000069FB                 movzx   eax, byte ptr [rcx+1]
.text:00000000000069FF                 cmp     al, 44h ; 'D'
.text:0000000000006A01                 jz      short loc_6A0F
.text:0000000000006A03                 cmp     al, 69h ; 'i'
.text:0000000000006A05                 jz      loc_6BD8
.text:0000000000006A0B                 cmp     al, 42h ; 'B'
.text:0000000000006A0D                 jnz     short loc_6A20
.text:0000000000006A0F
.text:0000000000006A0F loc_6A0F:                               ; CODE XREF: xstrtoumax+191↑j
.text:0000000000006A0F                 mov     edi, 2
.text:0000000000006A14                 mov     esi, 3E8h
.text:0000000000006A19                 jmp     short loc_6A2A
.text:0000000000006A19 ; ---------------------------------------------------------------------------
.text:0000000000006A1B                 align 20h
.text:0000000000006A20
.text:0000000000006A20 loc_6A20:                               ; CODE XREF: xstrtoumax+15D↑j
.text:0000000000006A20                                         ; xstrtoumax+16D↑j ...
.text:0000000000006A20                 mov     edi, 1
.text:0000000000006A25                 mov     esi, 400h
.text:0000000000006A2A
.text:0000000000006A2A loc_6A2A:                               ; CODE XREF: xstrtoumax+1A9↑j
.text:0000000000006A2A                                         ; xstrtoumax+37B↓j
.text:0000000000006A2A                 sub     r12d, 42h ; 'B' ; switch 54 cases
.text:0000000000006A2E                 cmp     r12b, 35h
.text:0000000000006A32                 ja      short def_6A46  ; jumptable 0000000000006A46 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0000000000006A34                 lea     rdx, jpt_6A46
.text:0000000000006A3B                 movzx   r12d, r12b
.text:0000000000006A3F                 movsxd  rax, ds:(jpt_6A46 - 8C48h)[rdx+r12*4]
.text:0000000000006A43                 add     rax, rdx
.text:0000000000006A46                 jmp     rax             ; switch jump
.text:0000000000006A48 ; ---------------------------------------------------------------------------
.text:0000000000006A48
.text:0000000000006A48 loc_6A48:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006A48                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006A48                 mov     rax, rbx        ; jumptable 0000000000006A46 cases 77,109
.text:0000000000006A4B                 mul     rsi
.text:0000000000006A4E                 jo      loc_6C41
.text:0000000000006A54                 xor     r8d, r8d
.text:0000000000006A57
.text:0000000000006A57 loc_6A57:                               ; CODE XREF: xstrtoumax+34E↓j
.text:0000000000006A57                                         ; xstrtoumax+35E↓j ...
.text:0000000000006A57                 mul     rsi
.text:0000000000006A5A                 jo      loc_6C32
.text:0000000000006A60                 mov     rbx, rax
.text:0000000000006A63
.text:0000000000006A63 loc_6A63:                               ; CODE XREF: xstrtoumax+3CC↓j
.text:0000000000006A63                 or      ebp, r8d
.text:0000000000006A66                 db      2Eh
.text:0000000000006A66                 nop     word ptr [rax+rax+00000000h]
.text:0000000000006A70
.text:0000000000006A70 loc_6A70:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006A70                                         ; xstrtoumax+23B↓j ...
.text:0000000000006A70                 movsxd  rdi, edi        ; jumptable 0000000000006A46 case 99
.text:0000000000006A73                 mov     eax, ebp
.text:0000000000006A75                 add     rcx, rdi
.text:0000000000006A78                 or      eax, 2
.text:0000000000006A7B                 mov     [r15], rcx
.text:0000000000006A7E                 cmp     byte ptr [rcx], 0
.text:0000000000006A81                 mov     [r14], rbx
.text:0000000000006A84                 cmovnz  ebp, eax
.text:0000000000006A87                 jmp     loc_694D
.text:0000000000006A8C ; ---------------------------------------------------------------------------
.text:0000000000006A8C
.text:0000000000006A8C def_6A46:                               ; CODE XREF: xstrtoumax+150↑j
.text:0000000000006A8C                                         ; xstrtoumax+1C2↑j ...
.text:0000000000006A8C                 mov     [r14], rbx      ; jumptable 0000000000006A46 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0000000000006A8F                 or      ebp, 2
.text:0000000000006A92                 jmp     loc_694D
.text:0000000000006A97 ; ---------------------------------------------------------------------------
.text:0000000000006A97
.text:0000000000006A97 loc_6A97:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006A97                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006A97                 mov     edx, 2          ; jumptable 0000000000006A46 case 119
.text:0000000000006A9C                 mov     rax, rdx
.text:0000000000006A9F                 mul     rbx
.text:0000000000006AA2                 jo      loc_6B3E
.text:0000000000006AA8                 add     rbx, rbx
.text:0000000000006AAB                 jmp     short loc_6A70  ; jumptable 0000000000006A46 case 99
.text:0000000000006AAD ; ---------------------------------------------------------------------------
.text:0000000000006AAD
.text:0000000000006AAD loc_6AAD:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006AAD                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006AAD                 mov     edx, 200h       ; jumptable 0000000000006A46 case 98
.text:0000000000006AB2                 mov     rax, rdx
.text:0000000000006AB5                 mul     rbx
.text:0000000000006AB8                 jo      loc_6B3E
.text:0000000000006ABE                 shl     rbx, 9
.text:0000000000006AC2                 jmp     short loc_6A70  ; jumptable 0000000000006A46 case 99
.text:0000000000006AC4 ; ---------------------------------------------------------------------------
.text:0000000000006AC4
.text:0000000000006AC4 loc_6AC4:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006AC4                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006AC4                 mov     r8d, 7          ; jumptable 0000000000006A46 case 90
.text:0000000000006ACA                 xor     r9d, r9d
.text:0000000000006ACD                 nop     dword ptr [rax]
.text:0000000000006AD0
.text:0000000000006AD0 loc_6AD0:                               ; CODE XREF: xstrtoumax+273↓j
.text:0000000000006AD0                 mov     rax, rbx
.text:0000000000006AD3                 mul     rsi
.text:0000000000006AD6                 mov     rbx, rax
.text:0000000000006AD9                 jo      loc_6C6E
.text:0000000000006ADF
.text:0000000000006ADF loc_6ADF:                               ; CODE XREF: xstrtoumax+408↓j
.text:0000000000006ADF                 sub     r8d, 1
.text:0000000000006AE3                 jnz     short loc_6AD0
.text:0000000000006AE5
.text:0000000000006AE5 loc_6AE5:                               ; CODE XREF: xstrtoumax+29D↓j
.text:0000000000006AE5                                         ; xstrtoumax+2BD↓j ...
.text:0000000000006AE5                 or      ebp, r9d
.text:0000000000006AE8                 jmp     short loc_6A70  ; jumptable 0000000000006A46 case 99
.text:0000000000006AEA ; ---------------------------------------------------------------------------
.text:0000000000006AEA
.text:0000000000006AEA loc_6AEA:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006AEA                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006AEA                 mov     r8d, 8          ; jumptable 0000000000006A46 case 89
.text:0000000000006AF0                 xor     r9d, r9d
.text:0000000000006AF3                 nop     dword ptr [rax+rax+00h]
.text:0000000000006AF8
.text:0000000000006AF8 loc_6AF8:                               ; CODE XREF: xstrtoumax+29B↓j
.text:0000000000006AF8                 mov     rax, rbx
.text:0000000000006AFB                 mul     rsi
.text:0000000000006AFE                 mov     rbx, rax
.text:0000000000006B01                 jo      loc_6C50
.text:0000000000006B07
.text:0000000000006B07 loc_6B07:                               ; CODE XREF: xstrtoumax+3EA↓j
.text:0000000000006B07                 sub     r8d, 1
.text:0000000000006B0B                 jnz     short loc_6AF8
.text:0000000000006B0D                 jmp     short loc_6AE5
.text:0000000000006B0F ; ---------------------------------------------------------------------------
.text:0000000000006B0F
.text:0000000000006B0F loc_6B0F:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006B0F                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006B0F                 mov     r8d, 4          ; jumptable 0000000000006A46 cases 84,116
.text:0000000000006B15                 xor     r9d, r9d
.text:0000000000006B18
.text:0000000000006B18 loc_6B18:                               ; CODE XREF: xstrtoumax+2BB↓j
.text:0000000000006B18                 mov     rax, rbx
.text:0000000000006B1B                 mul     rsi
.text:0000000000006B1E                 mov     rbx, rax
.text:0000000000006B21                 jo      loc_6C23
.text:0000000000006B27
.text:0000000000006B27 loc_6B27:                               ; CODE XREF: xstrtoumax+3BD↓j
.text:0000000000006B27                 sub     r8d, 1
.text:0000000000006B2B                 jnz     short loc_6B18
.text:0000000000006B2D                 jmp     short loc_6AE5
.text:0000000000006B2F ; ---------------------------------------------------------------------------
.text:0000000000006B2F
.text:0000000000006B2F loc_6B2F:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006B2F                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006B2F                 mov     rax, rbx        ; jumptable 0000000000006A46 cases 75,107
.text:0000000000006B32                 mul     rsi
.text:0000000000006B35                 mov     rbx, rax
.text:0000000000006B38                 jno     loc_6A70        ; jumptable 0000000000006A46 case 99
.text:0000000000006B3E
.text:0000000000006B3E loc_6B3E:                               ; CODE XREF: xstrtoumax+232↑j
.text:0000000000006B3E                                         ; xstrtoumax+248↑j ...
.text:0000000000006B3E                 mov     ebp, 1
.text:0000000000006B43                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000006B47                 jmp     loc_6A70        ; jumptable 0000000000006A46 case 99
.text:0000000000006B47 ; ---------------------------------------------------------------------------
.text:0000000000006B4C                 align 10h
.text:0000000000006B50
.text:0000000000006B50 loc_6B50:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006B50                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006B50                 mov     r8d, 5          ; jumptable 0000000000006A46 case 80
.text:0000000000006B56                 xor     r9d, r9d
.text:0000000000006B59
.text:0000000000006B59 loc_6B59:                               ; CODE XREF: xstrtoumax+2FC↓j
.text:0000000000006B59                 mov     rax, rbx
.text:0000000000006B5C                 mul     rsi
.text:0000000000006B5F                 mov     rbx, rax
.text:0000000000006B62                 jo      loc_6C5F
.text:0000000000006B68
.text:0000000000006B68 loc_6B68:                               ; CODE XREF: xstrtoumax+3F9↓j
.text:0000000000006B68                 sub     r8d, 1
.text:0000000000006B6C                 jnz     short loc_6B59
.text:0000000000006B6E                 jmp     loc_6AE5
.text:0000000000006B73 ; ---------------------------------------------------------------------------
.text:0000000000006B73
.text:0000000000006B73 loc_6B73:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006B73                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006B73                 mov     r8d, 6          ; jumptable 0000000000006A46 case 69
.text:0000000000006B79                 xor     r9d, r9d
.text:0000000000006B7C
.text:0000000000006B7C loc_6B7C:                               ; CODE XREF: xstrtoumax+31F↓j
.text:0000000000006B7C                 mov     rax, rbx
.text:0000000000006B7F                 mul     rsi
.text:0000000000006B82                 mov     rbx, rax
.text:0000000000006B85                 jo      loc_6C14
.text:0000000000006B8B
.text:0000000000006B8B loc_6B8B:                               ; CODE XREF: xstrtoumax+3AE↓j
.text:0000000000006B8B                 sub     r8d, 1
.text:0000000000006B8F                 jnz     short loc_6B7C
.text:0000000000006B91                 jmp     loc_6AE5
.text:0000000000006B96 ; ---------------------------------------------------------------------------
.text:0000000000006B96
.text:0000000000006B96 loc_6B96:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006B96                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006B96                 mov     edx, 400h       ; jumptable 0000000000006A46 case 66
.text:0000000000006B9B                 mov     rax, rdx
.text:0000000000006B9E                 mul     rbx
.text:0000000000006BA1                 jo      short loc_6B3E
.text:0000000000006BA3                 shl     rbx, 0Ah
.text:0000000000006BA7                 jmp     loc_6A70        ; jumptable 0000000000006A46 case 99
.text:0000000000006BAC ; ---------------------------------------------------------------------------
.text:0000000000006BAC
.text:0000000000006BAC loc_6BAC:                               ; CODE XREF: xstrtoumax+1D6↑j
.text:0000000000006BAC                                         ; DATA XREF: .rodata:jpt_6A46↓o
.text:0000000000006BAC                 mov     rax, rbx        ; jumptable 0000000000006A46 cases 71,103
.text:0000000000006BAF                 mul     rsi
.text:0000000000006BB2                 jo      loc_6C7D
.text:0000000000006BB8                 xor     r8d, r8d
.text:0000000000006BBB
.text:0000000000006BBB loc_6BBB:                               ; CODE XREF: xstrtoumax+417↓j
.text:0000000000006BBB                 mul     rsi
.text:0000000000006BBE                 jno     loc_6A57
.text:0000000000006BC4                 mov     r8d, 1
.text:0000000000006BCA                 or      rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000006BCE                 jmp     loc_6A57
.text:0000000000006BCE ; ---------------------------------------------------------------------------
.text:0000000000006BD3                 align 8
.text:0000000000006BD8
.text:0000000000006BD8 loc_6BD8:                               ; CODE XREF: xstrtoumax+195↑j
.text:0000000000006BD8                 xor     edi, edi
.text:0000000000006BDA                 cmp     byte ptr [rcx+2], 42h ; 'B'
.text:0000000000006BDE                 mov     esi, 400h
.text:0000000000006BE3                 setz    dil
.text:0000000000006BE7                 lea     edi, [rdi+rdi+1]
.text:0000000000006BEB                 jmp     loc_6A2A
.text:0000000000006BF0 ; ---------------------------------------------------------------------------
.text:0000000000006BF0
.text:0000000000006BF0 loc_6BF0:                               ; CODE XREF: xstrtoumax+ED↑j
.text:0000000000006BF0                 call    ___stack_chk_fail
.text:0000000000006BF5 ; ---------------------------------------------------------------------------
.text:0000000000006BF5
.text:0000000000006BF5 loc_6BF5:                               ; CODE XREF: xstrtoumax+21↑j
.text:0000000000006BF5                 lea     rcx, __PRETTY_FUNCTION___4162 ; "xstrtoumax"
.text:0000000000006BFC                 lea     rsi, aCoreutils831Li ; "../coreutils-8.31/lib/xstrtol.c"
.text:0000000000006C03                 lea     rdi, a0StrtolBaseStr ; "0 <= strtol_base && strtol_base <= 36"
.text:0000000000006C0A                 mov     edx, 54h ; 'T'  ; line
.text:0000000000006C0F                 call    ___assert_fail
.text:0000000000006C14 ; ---------------------------------------------------------------------------
.text:0000000000006C14
.text:0000000000006C14 loc_6C14:                               ; CODE XREF: xstrtoumax+315↑j
.text:0000000000006C14                 mov     r9d, 1
.text:0000000000006C1A                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000006C1E                 jmp     loc_6B8B
.text:0000000000006C23 ; ---------------------------------------------------------------------------
.text:0000000000006C23
.text:0000000000006C23 loc_6C23:                               ; CODE XREF: xstrtoumax+2B1↑j
.text:0000000000006C23                 mov     r9d, 1
.text:0000000000006C29                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000006C2D                 jmp     loc_6B27
.text:0000000000006C32 ; ---------------------------------------------------------------------------
.text:0000000000006C32
.text:0000000000006C32 loc_6C32:                               ; CODE XREF: xstrtoumax+1EA↑j
.text:0000000000006C32                 mov     r8d, 1
.text:0000000000006C38                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000006C3C                 jmp     loc_6A63
.text:0000000000006C41 ; ---------------------------------------------------------------------------
.text:0000000000006C41
.text:0000000000006C41 loc_6C41:                               ; CODE XREF: xstrtoumax+1DE↑j
.text:0000000000006C41                 or      rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000006C45                 mov     r8d, 1
.text:0000000000006C4B                 jmp     loc_6A57
.text:0000000000006C50 ; ---------------------------------------------------------------------------
.text:0000000000006C50
.text:0000000000006C50 loc_6C50:                               ; CODE XREF: xstrtoumax+291↑j
.text:0000000000006C50                 mov     r9d, 1
.text:0000000000006C56                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000006C5A                 jmp     loc_6B07
.text:0000000000006C5F ; ---------------------------------------------------------------------------
.text:0000000000006C5F
.text:0000000000006C5F loc_6C5F:                               ; CODE XREF: xstrtoumax+2F2↑j
.text:0000000000006C5F                 mov     r9d, 1
.text:0000000000006C65                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000006C69                 jmp     loc_6B68
.text:0000000000006C6E ; ---------------------------------------------------------------------------
.text:0000000000006C6E
.text:0000000000006C6E loc_6C6E:                               ; CODE XREF: xstrtoumax+269↑j
.text:0000000000006C6E                 mov     r9d, 1
.text:0000000000006C74                 or      rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000000006C78                 jmp     loc_6ADF
.text:0000000000006C7D ; ---------------------------------------------------------------------------
.text:0000000000006C7D
.text:0000000000006C7D loc_6C7D:                               ; CODE XREF: xstrtoumax+342↑j
.text:0000000000006C7D                 mov     r8d, 1
.text:0000000000006C83                 or      rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000006C87                 jmp     loc_6BBB
.text:0000000000006C87 ; } // starts at 6870
.text:0000000000006C87 xstrtoumax      endp
.text:0000000000006C87
.text:0000000000006C87 ; ---------------------------------------------------------------------------
.text:0000000000006C8C                 align 10h
.text:0000000000006C90
.text:0000000000006C90 ; =============== S U B R O U T I N E =======================================
.text:0000000000006C90
.text:0000000000006C90 ; Attributes: info_from_lumina
.text:0000000000006C90
.text:0000000000006C90 ; size_t __fastcall rpl_mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *ps)
.text:0000000000006C90                 public rpl_mbrtowc
.text:0000000000006C90 rpl_mbrtowc     proc near               ; CODE XREF: quotearg_buffer_restyled+956↑p
.text:0000000000006C90
.text:0000000000006C90 pwc             = dword ptr -34h
.text:0000000000006C90 var_30          = qword ptr -30h
.text:0000000000006C90
.text:0000000000006C90 ; __unwind {
.text:0000000000006C90                 push    r13
.text:0000000000006C92                 push    r12
.text:0000000000006C94                 mov     r13, rsi
.text:0000000000006C97                 push    rbp
.text:0000000000006C98                 push    rbx
.text:0000000000006C99                 mov     rbx, rdi
.text:0000000000006C9C                 mov     r12, rdx
.text:0000000000006C9F                 sub     rsp, 18h
.text:0000000000006CA3                 mov     rax, fs:28h
.text:0000000000006CAC                 mov     [rsp+38h+var_30], rax
.text:0000000000006CB1                 xor     eax, eax
.text:0000000000006CB3                 lea     rax, [rsp+38h+pwc]
.text:0000000000006CB8                 test    rdi, rdi
.text:0000000000006CBB                 cmovz   rbx, rax
.text:0000000000006CBF                 mov     rdi, rbx        ; pwc
.text:0000000000006CC2                 call    _mbrtowc
.text:0000000000006CC7                 cmp     rax, 0FFFFFFFFFFFFFFFDh
.text:0000000000006CCB                 mov     rbp, rax
.text:0000000000006CCE                 jbe     short loc_6CF0
.text:0000000000006CD0                 test    r12, r12
.text:0000000000006CD3                 jz      short loc_6CF0
.text:0000000000006CD5                 xor     edi, edi
.text:0000000000006CD7                 call    hard_locale
.text:0000000000006CDC                 test    al, al
.text:0000000000006CDE                 jnz     short loc_6CF0
.text:0000000000006CE0                 movzx   eax, byte ptr [r13+0]
.text:0000000000006CE5                 mov     ebp, 1
.text:0000000000006CEA                 mov     [rbx], eax
.text:0000000000006CEC                 nop     dword ptr [rax+00h]
.text:0000000000006CF0
.text:0000000000006CF0 loc_6CF0:                               ; CODE XREF: rpl_mbrtowc+3E↑j
.text:0000000000006CF0                                         ; rpl_mbrtowc+43↑j ...
.text:0000000000006CF0                 mov     rdx, [rsp+38h+var_30]
.text:0000000000006CF5                 xor     rdx, fs:28h
.text:0000000000006CFE                 mov     rax, rbp
.text:0000000000006D01                 jnz     short loc_6D0E
.text:0000000000006D03                 add     rsp, 18h
.text:0000000000006D07                 pop     rbx
.text:0000000000006D08                 pop     rbp
.text:0000000000006D09                 pop     r12
.text:0000000000006D0B                 pop     r13
.text:0000000000006D0D                 retn
.text:0000000000006D0E ; ---------------------------------------------------------------------------
.text:0000000000006D0E
.text:0000000000006D0E loc_6D0E:                               ; CODE XREF: rpl_mbrtowc+71↑j
.text:0000000000006D0E                 call    ___stack_chk_fail
.text:0000000000006D0E ; } // starts at 6C90
.text:0000000000006D0E rpl_mbrtowc     endp
.text:0000000000006D0E
.text:0000000000006D0E ; ---------------------------------------------------------------------------
.text:0000000000006D13                 align 20h
.text:0000000000006D20
.text:0000000000006D20 ; =============== S U B R O U T I N E =======================================
.text:0000000000006D20
.text:0000000000006D20 ; Attributes: info_from_lumina
.text:0000000000006D20
.text:0000000000006D20 ; int __fastcall close_stream(FILE *stream)
.text:0000000000006D20                 public close_stream
.text:0000000000006D20 close_stream    proc near               ; CODE XREF: close_stdout+D↑p
.text:0000000000006D20                                         ; close_stdout+33↑p
.text:0000000000006D20 ; __unwind {
.text:0000000000006D20                 push    r12
.text:0000000000006D22                 push    rbp
.text:0000000000006D23                 mov     rbp, rdi
.text:0000000000006D26                 push    rbx
.text:0000000000006D27                 call    ___fpending
.text:0000000000006D2C                 mov     ebx, [rbp+0]
.text:0000000000006D2F                 mov     rdi, rbp        ; stream
.text:0000000000006D32                 mov     r12, rax
.text:0000000000006D35                 call    rpl_fclose
.text:0000000000006D3A                 and     ebx, 20h
.text:0000000000006D3D                 test    ebx, ebx
.text:0000000000006D3F                 jnz     short loc_6D58
.text:0000000000006D41                 test    eax, eax
.text:0000000000006D43                 jz      short loc_6D4F
.text:0000000000006D45                 test    r12, r12
.text:0000000000006D48                 mov     eax, 0FFFFFFFFh
.text:0000000000006D4D                 jz      short loc_6D88
.text:0000000000006D4F
.text:0000000000006D4F loc_6D4F:                               ; CODE XREF: close_stream+23↑j
.text:0000000000006D4F                 pop     rbx
.text:0000000000006D50                 pop     rbp
.text:0000000000006D51                 pop     r12
.text:0000000000006D53                 retn
.text:0000000000006D53 ; ---------------------------------------------------------------------------
.text:0000000000006D54                 align 8
.text:0000000000006D58
.text:0000000000006D58 loc_6D58:                               ; CODE XREF: close_stream+1F↑j
.text:0000000000006D58                 test    eax, eax
.text:0000000000006D5A                 jnz     short loc_6D78
.text:0000000000006D5C                 call    ___errno_location
.text:0000000000006D61                 mov     dword ptr [rax], 0
.text:0000000000006D67                 mov     eax, 0FFFFFFFFh
.text:0000000000006D6C                 pop     rbx
.text:0000000000006D6D                 pop     rbp
.text:0000000000006D6E                 pop     r12
.text:0000000000006D70                 retn
.text:0000000000006D70 ; ---------------------------------------------------------------------------
.text:0000000000006D71                 align 8
.text:0000000000006D78
.text:0000000000006D78 loc_6D78:                               ; CODE XREF: close_stream+3A↑j
.text:0000000000006D78                 pop     rbx
.text:0000000000006D79                 mov     eax, 0FFFFFFFFh
.text:0000000000006D7E                 pop     rbp
.text:0000000000006D7F                 pop     r12
.text:0000000000006D81                 retn
.text:0000000000006D81 ; ---------------------------------------------------------------------------
.text:0000000000006D82                 align 8
.text:0000000000006D88
.text:0000000000006D88 loc_6D88:                               ; CODE XREF: close_stream+2D↑j
.text:0000000000006D88                 call    ___errno_location
.text:0000000000006D8D                 cmp     dword ptr [rax], 9
.text:0000000000006D90                 pop     rbx
.text:0000000000006D91                 pop     rbp
.text:0000000000006D92                 pop     r12
.text:0000000000006D94                 setnz   al
.text:0000000000006D97                 movzx   eax, al
.text:0000000000006D9A                 neg     eax
.text:0000000000006D9C                 retn
.text:0000000000006D9C ; } // starts at 6D20
.text:0000000000006D9C close_stream    endp
.text:0000000000006D9C
.text:0000000000006D9C ; ---------------------------------------------------------------------------
.text:0000000000006D9D                 align 20h
.text:0000000000006DA0
.text:0000000000006DA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000006DA0
.text:0000000000006DA0
.text:0000000000006DA0                 public hard_locale
.text:0000000000006DA0 hard_locale     proc near               ; CODE XREF: rpl_mbrtowc+47↑p
.text:0000000000006DA0 ; __unwind {
.text:0000000000006DA0                 sub     rsp, 8
.text:0000000000006DA4                 xor     esi, esi        ; locale
.text:0000000000006DA6                 call    _setlocale
.text:0000000000006DAB                 mov     rdx, rax
.text:0000000000006DAE                 mov     eax, 1
.text:0000000000006DB3                 test    rdx, rdx
.text:0000000000006DB6                 jz      short loc_6DD5
.text:0000000000006DB8                 lea     rdi, locale     ; "C"
.text:0000000000006DBF                 mov     ecx, 2
.text:0000000000006DC4                 mov     rsi, rdx
.text:0000000000006DC7                 repe cmpsb
.text:0000000000006DC9                 setnbe  cl
.text:0000000000006DCC                 sbb     cl, 0
.text:0000000000006DCF                 xor     eax, eax
.text:0000000000006DD1                 test    cl, cl
.text:0000000000006DD3                 jnz     short loc_6DE0
.text:0000000000006DD5
.text:0000000000006DD5 loc_6DD5:                               ; CODE XREF: hard_locale+16↑j
.text:0000000000006DD5                 add     rsp, 8
.text:0000000000006DD9                 retn
.text:0000000000006DD9 ; ---------------------------------------------------------------------------
.text:0000000000006DDA                 align 20h
.text:0000000000006DE0
.text:0000000000006DE0 loc_6DE0:                               ; CODE XREF: hard_locale+33↑j
.text:0000000000006DE0                 lea     rdi, aPosix     ; "POSIX"
.text:0000000000006DE7                 mov     ecx, 6
.text:0000000000006DEC                 mov     rsi, rdx
.text:0000000000006DEF                 repe cmpsb
.text:0000000000006DF1                 setnbe  al
.text:0000000000006DF4                 sbb     al, 0
.text:0000000000006DF6                 test    al, al
.text:0000000000006DF8                 setnz   al
.text:0000000000006DFB                 add     rsp, 8
.text:0000000000006DFF                 retn
.text:0000000000006DFF ; } // starts at 6DA0
.text:0000000000006DFF hard_locale     endp
.text:0000000000006DFF
.text:0000000000006E00
.text:0000000000006E00 ; =============== S U B R O U T I N E =======================================
.text:0000000000006E00
.text:0000000000006E00
.text:0000000000006E00                 public locale_charset
.text:0000000000006E00 locale_charset  proc near               ; CODE XREF: gettext_quote+B↑p
.text:0000000000006E00 ; __unwind {
.text:0000000000006E00                 sub     rsp, 8
.text:0000000000006E04                 mov     edi, 0Eh        ; item
.text:0000000000006E09                 call    _nl_langinfo
.text:0000000000006E0E                 test    rax, rax
.text:0000000000006E11                 jz      short loc_6E30
.text:0000000000006E13                 cmp     byte ptr [rax], 0
.text:0000000000006E16                 lea     rdx, aAscii     ; "ASCII"
.text:0000000000006E1D                 cmovz   rax, rdx
.text:0000000000006E21                 add     rsp, 8
.text:0000000000006E25                 retn
.text:0000000000006E25 ; ---------------------------------------------------------------------------
.text:0000000000006E26                 align 10h
.text:0000000000006E30
.text:0000000000006E30 loc_6E30:                               ; CODE XREF: locale_charset+11↑j
.text:0000000000006E30                 lea     rax, aAscii     ; "ASCII"
.text:0000000000006E37                 add     rsp, 8
.text:0000000000006E3B                 retn
.text:0000000000006E3B ; } // starts at 6E00
.text:0000000000006E3B locale_charset  endp
.text:0000000000006E3B
.text:0000000000006E3B ; ---------------------------------------------------------------------------
.text:0000000000006E3C                 align 20h
.text:0000000000006E40
.text:0000000000006E40 ; =============== S U B R O U T I N E =======================================
.text:0000000000006E40
.text:0000000000006E40 ; Attributes: info_from_lumina
.text:0000000000006E40
.text:0000000000006E40 ; int __fastcall rpl_fclose(FILE *fp)
.text:0000000000006E40                 public rpl_fclose
.text:0000000000006E40 rpl_fclose      proc near               ; CODE XREF: close_stream+15↑p
.text:0000000000006E40 ; __unwind {
.text:0000000000006E40                 push    r12
.text:0000000000006E42                 push    rbp
.text:0000000000006E43                 push    rbx
.text:0000000000006E44                 mov     rbx, rdi
.text:0000000000006E47                 call    _fileno
.text:0000000000006E4C                 test    eax, eax
.text:0000000000006E4E                 mov     rdi, rbx        ; fp
.text:0000000000006E51                 js      short loc_6EA7
.text:0000000000006E53                 call    ___freading
.text:0000000000006E58                 test    eax, eax
.text:0000000000006E5A                 jnz     short loc_6E88
.text:0000000000006E5C
.text:0000000000006E5C loc_6E5C:                               ; CODE XREF: rpl_fclose+62↓j
.text:0000000000006E5C                 mov     rdi, rbx        ; stream
.text:0000000000006E5F                 call    rpl_fflush
.text:0000000000006E64                 test    eax, eax
.text:0000000000006E66                 jz      short loc_6EA4
.text:0000000000006E68                 call    ___errno_location
.text:0000000000006E6D                 mov     r12d, [rax]
.text:0000000000006E70                 mov     rdi, rbx        ; stream
.text:0000000000006E73                 mov     rbp, rax
.text:0000000000006E76                 call    _fclose
.text:0000000000006E7B                 test    r12d, r12d
.text:0000000000006E7E                 jnz     short loc_6EB0
.text:0000000000006E80
.text:0000000000006E80 loc_6E80:                               ; CODE XREF: rpl_fclose+79↓j
.text:0000000000006E80                 pop     rbx
.text:0000000000006E81                 pop     rbp
.text:0000000000006E82                 pop     r12
.text:0000000000006E84                 retn
.text:0000000000006E84 ; ---------------------------------------------------------------------------
.text:0000000000006E85                 align 8
.text:0000000000006E88
.text:0000000000006E88 loc_6E88:                               ; CODE XREF: rpl_fclose+1A↑j
.text:0000000000006E88                 mov     rdi, rbx        ; stream
.text:0000000000006E8B                 call    _fileno
.text:0000000000006E90                 xor     esi, esi        ; offset
.text:0000000000006E92                 mov     edx, 1          ; whence
.text:0000000000006E97                 mov     edi, eax        ; fd
.text:0000000000006E99                 call    _lseek
.text:0000000000006E9E                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000006EA2                 jnz     short loc_6E5C
.text:0000000000006EA4
.text:0000000000006EA4 loc_6EA4:                               ; CODE XREF: rpl_fclose+26↑j
.text:0000000000006EA4                 mov     rdi, rbx        ; stream
.text:0000000000006EA7
.text:0000000000006EA7 loc_6EA7:                               ; CODE XREF: rpl_fclose+11↑j
.text:0000000000006EA7                 pop     rbx
.text:0000000000006EA8                 pop     rbp
.text:0000000000006EA9                 pop     r12
.text:0000000000006EAB                 jmp     _fclose
.text:0000000000006EB0 ; ---------------------------------------------------------------------------
.text:0000000000006EB0
.text:0000000000006EB0 loc_6EB0:                               ; CODE XREF: rpl_fclose+3E↑j
.text:0000000000006EB0                 mov     [rbp+0], r12d
.text:0000000000006EB4                 mov     eax, 0FFFFFFFFh
.text:0000000000006EB9                 jmp     short loc_6E80
.text:0000000000006EB9 ; } // starts at 6E40
.text:0000000000006EB9 rpl_fclose      endp
.text:0000000000006EB9
.text:0000000000006EB9 ; ---------------------------------------------------------------------------
.text:0000000000006EBB                 align 20h
.text:0000000000006EC0
.text:0000000000006EC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000006EC0
.text:0000000000006EC0 ; Attributes: info_from_lumina
.text:0000000000006EC0
.text:0000000000006EC0 ; int __fastcall rpl_fflush(FILE *stream)
.text:0000000000006EC0                 public rpl_fflush
.text:0000000000006EC0 rpl_fflush      proc near               ; CODE XREF: rpl_fclose+1F↑p
.text:0000000000006EC0 ; __unwind {
.text:0000000000006EC0                 test    rdi, rdi
.text:0000000000006EC3                 push    rbx
.text:0000000000006EC4                 mov     rbx, rdi
.text:0000000000006EC7                 jz      short loc_6EDA
.text:0000000000006EC9                 call    ___freading
.text:0000000000006ECE                 test    eax, eax
.text:0000000000006ED0                 jz      short loc_6EDA
.text:0000000000006ED2                 test    dword ptr [rbx], 100h
.text:0000000000006ED8                 jnz     short loc_6EE8
.text:0000000000006EDA
.text:0000000000006EDA loc_6EDA:                               ; CODE XREF: rpl_fflush+7↑j
.text:0000000000006EDA                                         ; rpl_fflush+10↑j
.text:0000000000006EDA                 mov     rdi, rbx        ; stream
.text:0000000000006EDD                 pop     rbx
.text:0000000000006EDE                 jmp     _fflush
.text:0000000000006EDE ; ---------------------------------------------------------------------------
.text:0000000000006EE3                 align 8
.text:0000000000006EE8
.text:0000000000006EE8 loc_6EE8:                               ; CODE XREF: rpl_fflush+18↑j
.text:0000000000006EE8                 mov     rdi, rbx
.text:0000000000006EEB                 mov     edx, 1
.text:0000000000006EF0                 xor     esi, esi
.text:0000000000006EF2                 call    rpl_fseeko
.text:0000000000006EF7                 mov     rdi, rbx        ; stream
.text:0000000000006EFA                 pop     rbx
.text:0000000000006EFB                 jmp     _fflush
.text:0000000000006EFB ; } // starts at 6EC0
.text:0000000000006EFB rpl_fflush      endp
.text:0000000000006EFB
.text:0000000000006F00
.text:0000000000006F00 ; =============== S U B R O U T I N E =======================================
.text:0000000000006F00
.text:0000000000006F00 ; Attributes: info_from_lumina
.text:0000000000006F00
.text:0000000000006F00 ; int __fastcall rpl_fseeko(FILE *fp, off_t offset, int whence)
.text:0000000000006F00                 public rpl_fseeko
.text:0000000000006F00 rpl_fseeko      proc near               ; CODE XREF: rpl_fflush+32↑p
.text:0000000000006F00 ; __unwind {
.text:0000000000006F00                 mov     rax, [rdi+8]
.text:0000000000006F04                 cmp     [rdi+10h], rax
.text:0000000000006F08                 jz      short loc_6F10
.text:0000000000006F0A
.text:0000000000006F0A loc_6F0A:                               ; CODE XREF: rpl_fseeko+18↓j
.text:0000000000006F0A                                         ; rpl_fseeko+1F↓j
.text:0000000000006F0A                 jmp     _fseeko
.text:0000000000006F0A ; ---------------------------------------------------------------------------
.text:0000000000006F0F                 align 10h
.text:0000000000006F10
.text:0000000000006F10 loc_6F10:                               ; CODE XREF: rpl_fseeko+8↑j
.text:0000000000006F10                 mov     rax, [rdi+20h]
.text:0000000000006F14                 cmp     [rdi+28h], rax
.text:0000000000006F18                 jnz     short loc_6F0A
.text:0000000000006F1A                 cmp     qword ptr [rdi+48h], 0
.text:0000000000006F1F                 jnz     short loc_6F0A
.text:0000000000006F21                 push    r12
.text:0000000000006F23                 push    rbp
.text:0000000000006F24                 mov     r12d, edx
.text:0000000000006F27                 push    rbx
.text:0000000000006F28                 mov     rbp, rsi
.text:0000000000006F2B                 mov     rbx, rdi
.text:0000000000006F2E                 call    _fileno
.text:0000000000006F33                 mov     edx, r12d       ; whence
.text:0000000000006F36                 mov     rsi, rbp        ; offset
.text:0000000000006F39                 mov     edi, eax        ; fd
.text:0000000000006F3B                 call    _lseek
.text:0000000000006F40                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000006F44                 jz      short loc_6F52
.text:0000000000006F46                 and     dword ptr [rbx], 0FFFFFFEFh
.text:0000000000006F49                 mov     [rbx+90h], rax
.text:0000000000006F50                 xor     eax, eax
.text:0000000000006F52
.text:0000000000006F52 loc_6F52:                               ; CODE XREF: rpl_fseeko+44↑j
.text:0000000000006F52                 pop     rbx
.text:0000000000006F53                 pop     rbp
.text:0000000000006F54                 pop     r12
.text:0000000000006F56                 retn
.text:0000000000006F56 ; } // starts at 6F00
.text:0000000000006F56 rpl_fseeko      endp
.text:0000000000006F56
.text:0000000000006F56 ; ---------------------------------------------------------------------------
.text:0000000000006F57                 align 20h
.text:0000000000006F60
.text:0000000000006F60 ; =============== S U B R O U T I N E =======================================
.text:0000000000006F60
.text:0000000000006F60 ; Attributes: info_from_lumina
.text:0000000000006F60
.text:0000000000006F60 ; void _libc_csu_init(void)
.text:0000000000006F60                 public __libc_csu_init
.text:0000000000006F60 __libc_csu_init proc near               ; DATA XREF: start+16↑o
.text:0000000000006F60 ; __unwind {
.text:0000000000006F60                 push    r15
.text:0000000000006F62                 push    r14
.text:0000000000006F64                 mov     r15, rdx
.text:0000000000006F67                 push    r13
.text:0000000000006F69                 push    r12
.text:0000000000006F6B                 lea     r12, __frame_dummy_init_array_entry
.text:0000000000006F72                 push    rbp
.text:0000000000006F73                 lea     rbp, __do_global_dtors_aux_fini_array_entry
.text:0000000000006F7A                 push    rbx
.text:0000000000006F7B                 mov     r13d, edi
.text:0000000000006F7E                 mov     r14, rsi
.text:0000000000006F81                 sub     rbp, r12
.text:0000000000006F84                 sub     rsp, 8
.text:0000000000006F88                 sar     rbp, 3
.text:0000000000006F8C                 call    _init_proc
.text:0000000000006F91                 test    rbp, rbp
.text:0000000000006F94                 jz      short loc_6FB6
.text:0000000000006F96                 xor     ebx, ebx
.text:0000000000006F98                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000006FA0
.text:0000000000006FA0 loc_6FA0:                               ; CODE XREF: __libc_csu_init+54↓j
.text:0000000000006FA0                 mov     rdx, r15
.text:0000000000006FA3                 mov     rsi, r14
.text:0000000000006FA6                 mov     edi, r13d
.text:0000000000006FA9                 call    ds:(__frame_dummy_init_array_entry - 20AA90h)[r12+rbx*8]
.text:0000000000006FAD                 add     rbx, 1
.text:0000000000006FB1                 cmp     rbp, rbx
.text:0000000000006FB4                 jnz     short loc_6FA0
.text:0000000000006FB6
.text:0000000000006FB6 loc_6FB6:                               ; CODE XREF: __libc_csu_init+34↑j
.text:0000000000006FB6                 add     rsp, 8
.text:0000000000006FBA                 pop     rbx
.text:0000000000006FBB                 pop     rbp
.text:0000000000006FBC                 pop     r12
.text:0000000000006FBE                 pop     r13
.text:0000000000006FC0                 pop     r14
.text:0000000000006FC2                 pop     r15
.text:0000000000006FC4                 retn
.text:0000000000006FC4 ; } // starts at 6F60
.text:0000000000006FC4 __libc_csu_init endp
.text:0000000000006FC4
.text:0000000000006FC4 ; ---------------------------------------------------------------------------
.text:0000000000006FC5                 align 10h
.text:0000000000006FD0
.text:0000000000006FD0 ; =============== S U B R O U T I N E =======================================
.text:0000000000006FD0
.text:0000000000006FD0
.text:0000000000006FD0 ; void _libc_csu_fini(void)
.text:0000000000006FD0                 public __libc_csu_fini
.text:0000000000006FD0 __libc_csu_fini proc near               ; DATA XREF: start+F↑o
.text:0000000000006FD0 ; __unwind {
.text:0000000000006FD0                 rep retn
.text:0000000000006FD0 ; } // starts at 6FD0
.text:0000000000006FD0 __libc_csu_fini endp
.text:0000000000006FD0
.text:0000000000006FD0 ; ---------------------------------------------------------------------------
.text:0000000000006FD2                 align 20h
.text:0000000000006FE0
.text:0000000000006FE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000006FE0
.text:0000000000006FE0
.text:0000000000006FE0 atexit          proc near               ; CODE XREF: main+70↑p
.text:0000000000006FE0 ; __unwind {
.text:0000000000006FE0                 mov     rdx, cs:__dso_handle ; lpdso_handle
.text:0000000000006FE7                 xor     esi, esi        ; obj
.text:0000000000006FE9                 jmp     ___cxa_atexit
.text:0000000000006FE9 ; } // starts at 6FE0
.text:0000000000006FE9 atexit          endp
.text:0000000000006FE9
.text:0000000000006FE9 _text           ends
.text:0000000000006FE9
LOAD:0000000000006FEE ; ===========================================================================
LOAD:0000000000006FEE
LOAD:0000000000006FEE ; Segment type: Pure code
LOAD:0000000000006FEE ; Segment permissions: Read/Execute
LOAD:0000000000006FEE LOAD            segment byte public 'CODE' use64
LOAD:0000000000006FEE                 assume cs:LOAD
LOAD:0000000000006FEE                 ;org 6FEEh
LOAD:0000000000006FEE                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000006FEE                 align 10h
LOAD:0000000000006FEE LOAD            ends
LOAD:0000000000006FEE
.fini:0000000000006FF0 ; ===========================================================================
.fini:0000000000006FF0
.fini:0000000000006FF0 ; Segment type: Pure code
.fini:0000000000006FF0 ; Segment permissions: Read/Execute
.fini:0000000000006FF0 _fini           segment dword public 'CODE' use64
.fini:0000000000006FF0                 assume cs:_fini
.fini:0000000000006FF0                 ;org 6FF0h
.fini:0000000000006FF0                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.fini:0000000000006FF0
.fini:0000000000006FF0 ; =============== S U B R O U T I N E =======================================
.fini:0000000000006FF0
.fini:0000000000006FF0
.fini:0000000000006FF0                 public _term_proc
.fini:0000000000006FF0 _term_proc      proc near
.fini:0000000000006FF0                 sub     rsp, 8          ; _fini
.fini:0000000000006FF4                 add     rsp, 8
.fini:0000000000006FF8                 retn
.fini:0000000000006FF8 _term_proc      endp
.fini:0000000000006FF8
.fini:0000000000006FF8 _fini           ends
.fini:0000000000006FF8
LOAD:0000000000006FF9 ; ===========================================================================
LOAD:0000000000006FF9
LOAD:0000000000006FF9 ; Segment type: Pure code
LOAD:0000000000006FF9 ; Segment permissions: Read/Execute
LOAD:0000000000006FF9 LOAD            segment byte public 'CODE' use64
LOAD:0000000000006FF9                 assume cs:LOAD
LOAD:0000000000006FF9                 ;org 6FF9h
LOAD:0000000000006FF9                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000006FF9                 align 20h
LOAD:0000000000006FF9 LOAD            ends
LOAD:0000000000006FF9
.rodata:0000000000007000 ; ===========================================================================
.rodata:0000000000007000
.rodata:0000000000007000 ; Segment type: Pure data
.rodata:0000000000007000 ; Segment permissions: Read
.rodata:0000000000007000 _rodata         segment align_32 public 'CONST' use64
.rodata:0000000000007000                 assume cs:_rodata
.rodata:0000000000007000                 ;org 7000h
.rodata:0000000000007000                 public _IO_stdin_used
.rodata:0000000000007000 _IO_stdin_used  db    1
.rodata:0000000000007001                 db    0
.rodata:0000000000007002                 db    2
.rodata:0000000000007003                 db    0
.rodata:0000000000007004 a03o            db '\%03o',0            ; DATA XREF: make_printable_char:loc_2880↑o
.rodata:0000000000007004                                         ; make_printable_str+15D↑o
.rodata:000000000000700A ; const char src[]
.rodata:000000000000700A src             db '\',0                ; DATA XREF: make_printable_str+9F↑o
.rodata:000000000000700C aA              db '\a',0               ; DATA XREF: make_printable_str+EA↑o
.rodata:000000000000700F aB              db '\b',0               ; DATA XREF: make_printable_str+D4↑o
.rodata:0000000000007012 asc_7012        db '\f',0               ; DATA XREF: make_printable_str+68↑o
.rodata:0000000000007015 aN              db '\n',0               ; DATA XREF: make_printable_str:loc_29F8↑o
.rodata:0000000000007018 aR              db '\r',0               ; DATA XREF: make_printable_str+92↑o
.rodata:000000000000701B aT              db '\t',0               ; DATA XREF: make_printable_str+DD↑o
.rodata:000000000000701E aV              db '\v',0               ; DATA XREF: make_printable_str+6F↑o
.rodata:0000000000007021 ; const char file[]
.rodata:0000000000007021 file            db '../coreutils-8.31/src/tr.c',0
.rodata:0000000000007021                                         ; DATA XREF: append_repeated_char_part_8+7↑o
.rodata:0000000000007021                                         ; main+A0D↑o ...
.rodata:000000000000703C ; const char aTooManyCharact[]
.rodata:000000000000703C aTooManyCharact db 'too many characters in set',0
.rodata:000000000000703C                                         ; DATA XREF: get_spec_stats:loc_2D84↑o
.rodata:0000000000007057 ; const char aINChars[]
.rodata:0000000000007057 aINChars        db 'i < N_CHARS',0      ; DATA XREF: get_next+1F1↑o
.rodata:0000000000007063 ; const char aReadError[]
.rodata:0000000000007063 aReadError      db 'read error',0       ; DATA XREF: plain_read_part_5+1↑o
.rodata:000000000000706E ; const char assertion[]
.rodata:000000000000706E assertion       db 'list->tail',0       ; DATA XREF: append_repeated_char_part_8+E↑o
.rodata:000000000000706E                                         ; append_normal_char+4D↑o ...
.rodata:0000000000007079 aInvalidCharact db 'invalid character class %s',0
.rodata:0000000000007079                                         ; DATA XREF: parse_str+741↑o
.rodata:0000000000007094 ; const char aWriteError[]
.rodata:0000000000007094 aWriteError     db 'write error',0      ; DATA XREF: main+95B↑o
.rodata:0000000000007094                                         ; main+AC0↑o ...
.rodata:00000000000070A0 aTr             db 'tr',0               ; DATA XREF: main+114↑o
.rodata:00000000000070A0                                         ; usage+17B↑o ...
.rodata:00000000000070A3 asc_70A3        db '[',0                ; DATA XREF: usage+187↑o
.rodata:00000000000070A5 aTestInvocation db 'test invocation',0  ; DATA XREF: usage+1AE↑o
.rodata:00000000000070B5 aMultiCallInvoc db 'Multi-call invocation',0
.rodata:00000000000070B5                                         ; DATA XREF: usage+1DE↑o
.rodata:00000000000070B5                                         ; usage+2DC↑o ...
.rodata:00000000000070CB aSha224sum      db 'sha224sum',0        ; DATA XREF: usage+1EF↑o
.rodata:00000000000070D5 aSha2Utilities  db 'sha2 utilities',0   ; DATA XREF: usage+1FB↑o
.rodata:00000000000070E4 aSha256sum      db 'sha256sum',0        ; DATA XREF: usage+18E↑o
.rodata:00000000000070EE aSha384sum      db 'sha384sum',0        ; DATA XREF: usage+1BA↑o
.rodata:00000000000070F8 aSha512sum      db 'sha512sum',0        ; DATA XREF: usage+1D2↑o
.rodata:0000000000007102 ; const char aSOnlineHelpS[]
.rodata:0000000000007102 aSOnlineHelpS   db 0Ah                  ; DATA XREF: usage+24A↑o
.rodata:0000000000007102                 db '%s online help: <%s>',0Ah,0
.rodata:0000000000007119 unk_7119        db  47h ; G             ; DATA XREF: main+10D↑o
.rodata:0000000000007119                                         ; usage+266↑o ...
.rodata:000000000000711A                 db  4Eh ; N
.rodata:000000000000711B                 db  55h ; U
.rodata:000000000000711C                 db  20h
.rodata:000000000000711D ; const char domainname[]
.rodata:000000000000711D domainname      db 'coreutils',0        ; DATA XREF: main+51↑o
.rodata:000000000000711D                                         ; main+5D↑o ...
.rodata:0000000000007127 ; const char s2[]
.rodata:0000000000007127 s2              db 'en_',0              ; DATA XREF: usage+28D↑o
.rodata:0000000000007127                                         ; usage+34E↑o
.rodata:000000000000712B ; const char aFullDocumentat[]
.rodata:000000000000712B aFullDocumentat db 'Full documentation <%s%s>',0Ah,0
.rodata:000000000000712B                                         ; DATA XREF: usage:loc_3FE9↑o
.rodata:000000000000712B                                         ; usage:loc_40A6↑o
.rodata:0000000000007146 ; const char dirname[]
.rodata:0000000000007146 dirname         db '/usr/local/share/locale',0
.rodata:0000000000007146                                         ; DATA XREF: main+4A↑o
.rodata:000000000000715E ; const char locale[]
.rodata:000000000000715E locale          db 'C',0                ; DATA XREF: main:loc_1A70↑o
.rodata:000000000000715E                                         ; main+141↑o ...
.rodata:0000000000007160 aJimMeyering    db 'Jim Meyering',0     ; DATA XREF: main+106↑o
.rodata:000000000000716D ; const char shortopts[]
.rodata:000000000000716D shortopts       db '+AcCdst',0          ; DATA XREF: main:loc_19B8↑o
.rodata:0000000000007175 ; const char aMissingOperand[]
.rodata:0000000000007175 aMissingOperand db 'missing operand',0  ; DATA XREF: main+C1D↑o
.rodata:0000000000007185 ; const char aMissingOperand_0[]
.rodata:0000000000007185 aMissingOperand_0 db 'missing operand after %s',0
.rodata:0000000000007185                                         ; DATA XREF: main+C4D↑o
.rodata:000000000000719E ; const char aExtraOperandS[]
.rodata:000000000000719E aExtraOperandS  db 'extra operand %s',0 ; DATA XREF: main+CC9↑o
.rodata:00000000000071AF ; const char aCh1TruncateSet[]
.rodata:00000000000071AF aCh1TruncateSet db 'ch != -1 || truncate_set1',0
.rodata:00000000000071AF                                         ; DATA XREF: main+A14↑o
.rodata:00000000000071C9 ; const char aC11TruncateSet[]
.rodata:00000000000071C9 aC11TruncateSet db 'c1 == -1 || truncate_set1',0
.rodata:00000000000071C9                                         ; DATA XREF: main+BE3↑o
.rodata:00000000000071E3 ; const char msgid[]
.rodata:00000000000071E3 msgid           db 'standard input',0   ; DATA XREF: main+612↑o
.rodata:00000000000071F2 aComplement     db 'complement',0       ; DATA XREF: .data.rel.ro:long_options↓o
.rodata:00000000000071FD aDelete         db 'delete',0           ; DATA XREF: .data.rel.ro:000000000020AAC0↓o
.rodata:0000000000007204 aSqueezeRepeats db 'squeeze-repeats',0  ; DATA XREF: .data.rel.ro:000000000020AAE0↓o
.rodata:0000000000007214 aTruncateSet1   db 'truncate-set1',0    ; DATA XREF: .data.rel.ro:000000000020AB00↓o
.rodata:0000000000007222 aHelp           db 'help',0             ; DATA XREF: .data.rel.ro:000000000020AB20↓o
.rodata:0000000000007227 aVersion        db 'version',0          ; DATA XREF: .data.rel.ro:000000000020AB40↓o
.rodata:000000000000722F aAlnum          db 'alnum',0            ; DATA XREF: .data.rel.ro:char_class_name↓o
.rodata:0000000000007235 aAlpha          db 'alpha',0            ; DATA XREF: .data.rel.ro:000000000020AB88↓o
.rodata:000000000000723B aBlank          db 'blank',0            ; DATA XREF: .data.rel.ro:000000000020AB90↓o
.rodata:0000000000007241 aCntrl          db 'cntrl',0            ; DATA XREF: .data.rel.ro:000000000020AB98↓o
.rodata:0000000000007247 aGraph          db 'graph',0            ; DATA XREF: .data.rel.ro:000000000020ABA8↓o
.rodata:000000000000724D aLower          db 'lower',0            ; DATA XREF: .data.rel.ro:000000000020ABB0↓o
.rodata:0000000000007253 aPrint          db 'print',0            ; DATA XREF: .data.rel.ro:000000000020ABB8↓o
.rodata:0000000000007259 aPunct          db 'punct',0            ; DATA XREF: .data.rel.ro:000000000020ABC0↓o
.rodata:000000000000725F aSpace          db 'space',0            ; DATA XREF: .data.rel.ro:000000000020ABC8↓o
.rodata:0000000000007265 aUpper          db 'upper',0            ; DATA XREF: .data.rel.ro:000000000020ABD0↓o
.rodata:000000000000726B aXdigit         db 'xdigit',0           ; DATA XREF: .data.rel.ro:000000000020ABD8↓o
.rodata:000000000000726B                                         ; .data.rel.ro:000000000020ABA0↓o
.rodata:0000000000007272                 align 20h
.rodata:0000000000007280 jpt_2A6C        dd offset loc_2AB0 - 7280h
.rodata:0000000000007280                                         ; DATA XREF: is_char_class_member+A↑o
.rodata:0000000000007280                                         ; is_char_class_member+15↑r
.rodata:0000000000007280                 dd offset loc_2AD0 - 7280h ; jump table for switch statement
.rodata:0000000000007280                 dd offset loc_2AF0 - 7280h
.rodata:0000000000007280                 dd offset loc_2B08 - 7280h
.rodata:0000000000007280                 dd offset loc_2B28 - 7280h
.rodata:0000000000007280                 dd offset loc_2B48 - 7280h
.rodata:0000000000007280                 dd offset loc_2B68 - 7280h
.rodata:0000000000007280                 dd offset loc_2B88 - 7280h
.rodata:0000000000007280                 dd offset loc_2BA8 - 7280h
.rodata:0000000000007280                 dd offset loc_2BC8 - 7280h
.rodata:0000000000007280                 dd offset loc_2A70 - 7280h
.rodata:0000000000007280                 dd offset loc_2A90 - 7280h
.rodata:00000000000072B0 jpt_2C44        dd offset loc_2D30 - 72B0h
.rodata:00000000000072B0                                         ; DATA XREF: get_spec_stats+36↑o
.rodata:00000000000072B0                                         ; get_spec_stats+4D↑r
.rodata:00000000000072B0                 dd offset loc_2D10 - 72B0h ; jump table for switch statement
.rodata:00000000000072B0                 dd offset loc_2CB8 - 72B0h
.rodata:00000000000072B0                 dd offset loc_2C50 - 72B0h
.rodata:00000000000072B0                 dd offset loc_2D40 - 72B0h
.rodata:00000000000072C4 jpt_2E03        dd offset loc_2E08 - 72C4h
.rodata:00000000000072C4                                         ; DATA XREF: get_next+4↑o
.rodata:00000000000072C4                                         ; get_next+4C↑r
.rodata:00000000000072C4                 dd offset loc_2EE0 - 72C4h ; jump table for switch statement
.rodata:00000000000072C4                 dd offset loc_2E58 - 72C4h
.rodata:00000000000072C4                 dd offset loc_2E08 - 72C4h
.rodata:00000000000072C4                 dd offset loc_2E30 - 72C4h
.rodata:00000000000072D8 ; const char _PRETTY_FUNCTION___7229[]
.rodata:00000000000072D8 __PRETTY_FUNCTION___7229 db 'get_next',0
.rodata:00000000000072D8                                         ; DATA XREF: get_next:loc_2F93↑o
.rodata:00000000000072D8                                         ; get_next:loc_2FE3↑o
.rodata:00000000000072E1                 align 10h
.rodata:00000000000072F0 ; const char _PRETTY_FUNCTION___7270[]
.rodata:00000000000072F0 __PRETTY_FUNCTION___7270 db 'validate_case_classes',0
.rodata:00000000000072F0                                         ; DATA XREF: main:loc_2466↑o
.rodata:0000000000007306                 align 8
.rodata:0000000000007308 ; const char _PRETTY_FUNCTION___7281[]
.rodata:0000000000007308 __PRETTY_FUNCTION___7281 db 'get_spec_stats',0
.rodata:0000000000007308                                         ; DATA XREF: get_spec_stats:loc_2D65↑o
.rodata:0000000000007317                 align 20h
.rodata:0000000000007320 ; const char _PRETTY_FUNCTION___7119[]
.rodata:0000000000007320 __PRETTY_FUNCTION___7119 db 'append_normal_char',0
.rodata:0000000000007320                                         ; DATA XREF: append_normal_char:loc_31AF↑o
.rodata:0000000000007333                 align 8
.rodata:0000000000007338 ; const char _PRETTY_FUNCTION___7128[]
.rodata:0000000000007338 __PRETTY_FUNCTION___7128 db 'append_range',0
.rodata:0000000000007338                                         ; DATA XREF: parse_str:loc_3A89↑o
.rodata:0000000000007345                 align 10h
.rodata:0000000000007350 ; const char _PRETTY_FUNCTION___7143[]
.rodata:0000000000007350 __PRETTY_FUNCTION___7143 db 'append_repeated_char',0
.rodata:0000000000007350                                         ; DATA XREF: append_repeated_char_part_8↑o
.rodata:0000000000007365                 align 10h
.rodata:0000000000007370 ; const char _PRETTY_FUNCTION___7150[]
.rodata:0000000000007370 __PRETTY_FUNCTION___7150 db 'append_equiv_class',0
.rodata:0000000000007370                                         ; DATA XREF: parse_str+7F8↑o
.rodata:0000000000007383                 align 10h
.rodata:0000000000007390 ; const char _PRETTY_FUNCTION___7136[]
.rodata:0000000000007390 __PRETTY_FUNCTION___7136 db 'append_char_class',0
.rodata:0000000000007390                                         ; DATA XREF: parse_str:loc_3AAD↑o
.rodata:00000000000073A2 ; const char _PRETTY_FUNCTION___7483[]
.rodata:00000000000073A2 __PRETTY_FUNCTION___7483 db 'main',0    ; DATA XREF: main+A06↑o
.rodata:00000000000073A2                                         ; main:loc_2515↑o
.rodata:00000000000073A7                 align 8
.rodata:00000000000073A8 ; const char aPURangeLastCha[]
.rodata:00000000000073A8 aPURangeLastCha db 'p->u.range.last_char >= p->u.range.first_char',0
.rodata:00000000000073A8                                         ; DATA XREF: get_spec_stats+183↑o
.rodata:00000000000073D6                 align 8
.rodata:00000000000073D8 ; const char aIsCharClassMem[]
.rodata:00000000000073D8 aIsCharClassMem db 'is_char_class_member (p->u.char_class, s->state)',0
.rodata:00000000000073D8                                         ; DATA XREF: get_next+241↑o
.rodata:0000000000007409                 align 10h
.rodata:0000000000007410 ; const char aWarningTheAmbi[]
.rodata:0000000000007410 aWarningTheAmbi db 'warning: the ambiguous octal escape \%c%c%c is being',0Ah
.rodata:0000000000007410                                         ; DATA XREF: parse_str:loc_39F7↑o
.rodata:0000000000007410                 db 9,'interpreted as the 2-byte sequence \0%c%c, %c',0
.rodata:0000000000007474                 align 8
.rodata:0000000000007478 ; const char aWarningAnUnesc[]
.rodata:0000000000007478 aWarningAnUnesc db 'warning: an unescaped backslash at end of string is not portable',0
.rodata:0000000000007478                                         ; DATA XREF: parse_str+4C2↑o
.rodata:00000000000074B9                 align 20h
.rodata:00000000000074C0 aMissingCharact db 'missing character class name ',27h,'[::]',27h,0
.rodata:00000000000074C0                                         ; DATA XREF: parse_str:loc_3A80↑o
.rodata:00000000000074E4                 align 8
.rodata:00000000000074E8 ; const char aMissingEquival[]
.rodata:00000000000074E8 aMissingEquival db 'missing equivalence class character ',27h,'[==]',27h,0
.rodata:00000000000074E8                                         ; DATA XREF: parse_str+88F↑o
.rodata:0000000000007513                 align 8
.rodata:0000000000007518 ; const char aSEquivalenceCl[]
.rodata:0000000000007518 aSEquivalenceCl db '%s: equivalence class operand must be a single character',0
.rodata:0000000000007518                                         ; DATA XREF: parse_str+3F4↑o
.rodata:0000000000007551                 align 8
.rodata:0000000000007558 ; const char aInvalidRepeatC[]
.rodata:0000000000007558 aInvalidRepeatC db 'invalid repeat count %s in [c*n] construct',0
.rodata:0000000000007558                                         ; DATA XREF: parse_str+5B5↑o
.rodata:0000000000007583                 align 8
.rodata:0000000000007588 ; const char aRangeEndpoints[]
.rodata:0000000000007588 aRangeEndpoints db 'range-endpoints of ',27h,'%s-%s',27h,' are in reverse collating s'
.rodata:0000000000007588                                         ; DATA XREF: parse_str+42B↑o
.rodata:0000000000007588                 db 'equence order',0
.rodata:00000000000075CB                 align 10h
.rodata:00000000000075D0 ; const char aTrySHelpForMor[]
.rodata:00000000000075D0 aTrySHelpForMor db 'Try ',27h,'%s --help',27h,' for more information.',0Ah,0
.rodata:00000000000075D0                                         ; DATA XREF: usage+2F↑o
.rodata:00000000000075F7                 align 8
.rodata:00000000000075F8 ; const char aUsageSOptionSe[]
.rodata:00000000000075F8 aUsageSOptionSe db 'Usage: %s [OPTION]... SET1 [SET2]',0Ah,0
.rodata:00000000000075F8                                         ; DATA XREF: usage:loc_3D9D↑o
.rodata:000000000000761B                 align 20h
.rodata:0000000000007620 ; const char aTranslateSquee[]
.rodata:0000000000007620 aTranslateSquee db 'Translate, squeeze, and/or delete characters from standard input,'
.rodata:0000000000007620                                         ; DATA XREF: usage+84↑o
.rodata:0000000000007620                 db 0Ah
.rodata:0000000000007620                 db 'writing to standard output.',0Ah
.rodata:0000000000007620                 db 0Ah
.rodata:0000000000007620                 db '  -c, -C, --complement    use the complement of SET1',0Ah
.rodata:0000000000007620                 db '  -d, --delete            delete characters in SET1, do not trans'
.rodata:0000000000007620                 db 'late',0Ah
.rodata:0000000000007620                 db '  -s, --squeeze-repeats   replace each sequence of a repeated cha'
.rodata:0000000000007620                 db 'racter',0Ah
.rodata:0000000000007620                 db '                            that is listed in the last specified '
.rodata:0000000000007620                 db 'SET,',0Ah
.rodata:0000000000007620                 db '                            with a single occurrence of that char'
.rodata:0000000000007620                 db 'acter',0Ah
.rodata:0000000000007620                 db '  -t, --truncate-set1     first truncate SET1 to length of SET2',0Ah
.rodata:0000000000007620                 db 0
.rodata:0000000000007810 ; const char aHelpDisplayThi[]
.rodata:0000000000007810 aHelpDisplayThi db '      --help     display this help and exit',0Ah,0
.rodata:0000000000007810                                         ; DATA XREF: usage+A9↑o
.rodata:000000000000783D                 align 20h
.rodata:0000000000007840 ; const char aVersionOutputV[]
.rodata:0000000000007840 aVersionOutputV db '      --version  output version information and exit',0Ah,0
.rodata:0000000000007840                                         ; DATA XREF: usage+CE↑o
.rodata:0000000000007876                 align 8
.rodata:0000000000007878 ; const char aSetsAreSpecifi[]
.rodata:0000000000007878 aSetsAreSpecifi db 0Ah                  ; DATA XREF: usage+F3↑o
.rodata:0000000000007878                 db 'SETs are specified as strings of characters.  Most represent them'
.rodata:0000000000007878                 db 'selves.',0Ah
.rodata:0000000000007878                 db 'Interpreted sequences are:',0Ah
.rodata:0000000000007878                 db 0Ah
.rodata:0000000000007878                 db '  \NNN            character with octal value NNN (1 to 3 octal di'
.rodata:0000000000007878                 db 'gits)',0Ah
.rodata:0000000000007878                 db '  \\              backslash',0Ah
.rodata:0000000000007878                 db '  \a              audible BEL',0Ah
.rodata:0000000000007878                 db '  \b              backspace',0Ah
.rodata:0000000000007878                 db '  \f              form feed',0Ah
.rodata:0000000000007878                 db '  \n              new line',0Ah
.rodata:0000000000007878                 db '  \r              return',0Ah
.rodata:0000000000007878                 db '  \t              horizontal tab',0Ah,0
.rodata:00000000000079ED                 align 10h
.rodata:00000000000079F0 ; const char aVVerticalTabCh[]
.rodata:00000000000079F0 aVVerticalTabCh db '  \v              vertical tab',0Ah
.rodata:00000000000079F0                                         ; DATA XREF: usage+118↑o
.rodata:00000000000079F0                 db '  CHAR1-CHAR2     all characters from CHAR1 to CHAR2 in ascending'
.rodata:00000000000079F0                 db ' order',0Ah
.rodata:00000000000079F0                 db '  [CHAR*]         in SET2, copies of CHAR until length of SET1',0Ah
.rodata:00000000000079F0                 db '  [CHAR*REPEAT]   REPEAT copies of CHAR, REPEAT octal if starting'
.rodata:00000000000079F0                 db ' with 0',0Ah
.rodata:00000000000079F0                 db '  [:alnum:]       all letters and digits',0Ah
.rodata:00000000000079F0                 db '  [:alpha:]       all letters',0Ah
.rodata:00000000000079F0                 db '  [:blank:]       all horizontal whitespace',0Ah
.rodata:00000000000079F0                 db '  [:cntrl:]       all control characters',0Ah
.rodata:00000000000079F0                 db '  [:digit:]       all digits',0Ah,0
.rodata:0000000000007B99                 align 20h
.rodata:0000000000007BA0 ; const char aGraphAllPrinta[]
.rodata:0000000000007BA0 aGraphAllPrinta db '  [:graph:]       all printable characters, not including space',0Ah
.rodata:0000000000007BA0                                         ; DATA XREF: usage+13D↑o
.rodata:0000000000007BA0                 db '  [:lower:]       all lower case letters',0Ah
.rodata:0000000000007BA0                 db '  [:print:]       all printable characters, including space',0Ah
.rodata:0000000000007BA0                 db '  [:punct:]       all punctuation characters',0Ah
.rodata:0000000000007BA0                 db '  [:space:]       all horizontal or vertical whitespace',0Ah
.rodata:0000000000007BA0                 db '  [:upper:]       all upper case letters',0Ah
.rodata:0000000000007BA0                 db '  [:xdigit:]      all hexadecimal digits',0Ah
.rodata:0000000000007BA0                 db '  [=CHAR=]        all characters which are equivalent to CHAR',0Ah
.rodata:0000000000007BA0                 db 0
.rodata:0000000000007D3B                 align 20h
.rodata:0000000000007D40 ; const char aTranslationOcc[]
.rodata:0000000000007D40 aTranslationOcc db 0Ah                  ; DATA XREF: usage+162↑o
.rodata:0000000000007D40                 db 'Translation occurs if -d is not given and both SET1 and SET2 appe'
.rodata:0000000000007D40                 db 'ar.',0Ah
.rodata:0000000000007D40                 db '-t may be used only when translating.  SET2 is extended to length'
.rodata:0000000000007D40                 db ' of',0Ah
.rodata:0000000000007D40                 db 'SET1 by repeating its last character as necessary.  Excess charac'
.rodata:0000000000007D40                 db 'ters',0Ah
.rodata:0000000000007D40                 db 'of SET2 are ignored.  Only [:lower:] and [:upper:] are guaranteed'
.rodata:0000000000007D40                 db ' to',0Ah
.rodata:0000000000007D40                 db 'expand in ascending order; used in SET2 while translating, they m'
.rodata:0000000000007D40                 db 'ay',0Ah
.rodata:0000000000007D40                 db 'only be used in pairs to specify case conversion.  -s uses the la'
.rodata:0000000000007D40                 db 'st',0Ah
.rodata:0000000000007D40                 db 'specified SET, and occurs after translation or deletion.',0Ah,0
.rodata:0000000000007F18 aHttpsWwwGnuOrg db 'https://www.gnu.org/software/coreutils/',0
.rodata:0000000000007F18                                         ; DATA XREF: usage+25F↑o
.rodata:0000000000007F18                                         ; usage+2C3↑o ...
.rodata:0000000000007F40 ; const char aReportAnyTrans[]
.rodata:0000000000007F40 aReportAnyTrans db 'Report any translation bugs to <https://translationproject.org/te'
.rodata:0000000000007F40                                         ; DATA XREF: usage+3B7↑o
.rodata:0000000000007F40                 db 'am/>',0Ah,0
.rodata:0000000000007F87                 align 8
.rodata:0000000000007F88 ; const char aOrAvailableLoc[]
.rodata:0000000000007F88 aOrAvailableLoc db 'or available locally via: info ',27h,'(coreutils) %s%s',27h,0Ah,0
.rodata:0000000000007F88                                         ; DATA XREF: usage:loc_402E↑o
.rodata:0000000000007FBB                 align 20h
.rodata:0000000000007FC0 ; const char aTwoStringsMust_0[]
.rodata:0000000000007FC0 aTwoStringsMust_0 db 'Two strings must be given when both deleting and squeezing repeat'
.rodata:0000000000007FC0                                         ; DATA XREF: main+C82↑o
.rodata:0000000000007FC0                 db 's.',0
.rodata:0000000000008004                 align 8
.rodata:0000000000008008 aTwoStringsMust db 'Two strings must be given when translating.',0
.rodata:0000000000008008                                         ; DATA XREF: main+C7B↑o
.rodata:0000000000008034                 align 8
.rodata:0000000000008038 aOnlyOneStringM db 'Only one string may be given when deleting without squeezing repe'
.rodata:0000000000008038                                         ; DATA XREF: main+CF9↑o
.rodata:0000000000008038                 db 'ats.',0
.rodata:000000000000807E                 align 20h
.rodata:0000000000008080 ; const char aTheCRepeatCons[]
.rodata:0000000000008080 aTheCRepeatCons db 'the [c*] repeat construct may not appear in string1',0
.rodata:0000000000008080                                         ; DATA XREF: main:loc_24A9↑o
.rodata:00000000000080B4                 align 8
.rodata:00000000000080B8 ; const char aOnlyOneCRepeat[]
.rodata:00000000000080B8 aOnlyOneCRepeat db 'only one [c*] repeat construct may appear in string2',0
.rodata:00000000000080B8                                         ; DATA XREF: main:loc_2485↑o
.rodata:00000000000080ED                 align 10h
.rodata:00000000000080F0 ; const char aCExpressionsMa[]
.rodata:00000000000080F0 aCExpressionsMa db '[=c=] expressions may not appear in string2 when translating',0
.rodata:00000000000080F0                                         ; DATA XREF: main:loc_24F1↑o
.rodata:000000000000812D                 align 10h
.rodata:0000000000008130 ; const char aWhenTranslatin_0[]
.rodata:0000000000008130 aWhenTranslatin_0 db 'when translating, the only character classes that may appear in',0Ah
.rodata:0000000000008130                                         ; DATA XREF: main:loc_24CD↑o
.rodata:0000000000008130                 db 'string2 are ',27h,'upper',27h,' and ',27h,'lower',27h,0
.rodata:0000000000008190 ; const char aMisalignedUppe[]
.rodata:0000000000008190 aMisalignedUppe db 'misaligned [:upper:] and/or [:lower:] construct',0
.rodata:0000000000008190                                         ; DATA XREF: main:loc_2534↑o
.rodata:00000000000081C0 ; const char aOldS1LenS1Leng[]
.rodata:00000000000081C0 aOldS1LenS1Leng db 'old_s1_len >= s1->length && old_s2_len >= s2->length',0
.rodata:00000000000081C0                                         ; DATA XREF: main+B34↑o
.rodata:00000000000081F5                 align 8
.rodata:00000000000081F8 ; const char aWhenNotTruncat[]
.rodata:00000000000081F8 aWhenNotTruncat db 'when not truncating set1, string2 must be non-empty',0
.rodata:00000000000081F8                                         ; DATA XREF: main:loc_266C↑o
.rodata:000000000000822C                 align 10h
.rodata:0000000000008230 ; const char aWhenTranslatin_1[]
.rodata:0000000000008230 aWhenTranslatin_1 db 'when translating with string1 longer than string2,',0Ah
.rodata:0000000000008230                                         ; DATA XREF: main:loc_2648↑o
.rodata:0000000000008230                 db 'the latter string must not end with a character class',0
.rodata:0000000000008299                 align 20h
.rodata:00000000000082A0 ; const char aWhenTranslatin[]
.rodata:00000000000082A0 aWhenTranslatin db 'when translating with complemented character classes,',0Ah
.rodata:00000000000082A0                                         ; DATA XREF: main:loc_242C↑o
.rodata:00000000000082A0                 db 'string2 must map all characters in the domain to one',0
.rodata:000000000000830B                 align 10h
.rodata:0000000000008310 ; const char aTheCConstructM[]
.rodata:0000000000008310 aTheCConstructM db 'the [c*] construct may appear in string2 only when translating',0
.rodata:0000000000008310                                         ; DATA XREF: main:loc_2095↑o
.rodata:000000000000834F a831            db '8.31',0             ; DATA XREF: .data:Version↓o
.rodata:0000000000008354 ; const char format[]
.rodata:0000000000008354 format          db '%s: %s',0           ; DATA XREF: close_stdout+6C↑o
.rodata:0000000000008354                                         ; close_stdout+8F↑o ...
.rodata:000000000000835B                 align 20h
.rodata:0000000000008360 aANullArgv0WasP db 'A NULL argv[0] was passed through an exec system call.',0Ah,0
.rodata:0000000000008360                                         ; DATA XREF: set_program_name+84↑o
.rodata:0000000000008398 aLibs           db '/.libs/',0          ; DATA XREF: set_program_name+2C↑o
.rodata:00000000000083A0 aLt             db 'lt-',0              ; DATA XREF: set_program_name+44↑o
.rodata:00000000000083A4 unk_83A4        db 0E2h                 ; DATA XREF: gettext_quote+CE↑o
.rodata:00000000000083A5                 db  80h
.rodata:00000000000083A6                 db  98h
.rodata:00000000000083A7                 db    0
.rodata:00000000000083A8 unk_83A8        db 0E2h                 ; DATA XREF: gettext_quote+D5↑o
.rodata:00000000000083A9                 db  80h
.rodata:00000000000083AA                 db  99h
.rodata:00000000000083AB                 db    0
.rodata:00000000000083AC unk_83AC        db 0A1h                 ; DATA XREF: gettext_quote+74↑o
.rodata:00000000000083AD                 db    7
.rodata:00000000000083AE                 db  65h ; e
.rodata:00000000000083AF                 db    0
.rodata:00000000000083B0 unk_83B0        db 0A1h                 ; DATA XREF: gettext_quote+7B↑o
.rodata:00000000000083B1                 db 0AFh
.rodata:00000000000083B2                 db    0
.rodata:00000000000083B3 unk_83B3        db  22h ; "             ; DATA XREF: gettext_quote:loc_42F0↑o
.rodata:00000000000083B3                                         ; quotearg_buffer_restyled:loc_50AB↑o ...
.rodata:00000000000083B4                 db    0
.rodata:00000000000083B5 ; const char asc_83B5[2]
.rodata:00000000000083B5 asc_83B5        db 27h,0                ; DATA XREF: gettext_quote+27↑o
.rodata:00000000000083B5                                         ; quotearg_buffer_restyled:loc_4473↑o ...
.rodata:00000000000083B7 ; const char asc_83B7[2]
.rodata:00000000000083B7 asc_83B7        db '`',0                ; DATA XREF: quotearg_buffer_restyled+D9B↑o
.rodata:00000000000083B7                                         ; quotearg_buffer_restyled+DB6↑o
.rodata:00000000000083B9 aLiteral        db 'literal',0          ; DATA XREF: .data.rel.ro:quoting_style_args↓o
.rodata:00000000000083C1 aShell          db 'shell',0            ; DATA XREF: .data.rel.ro:000000000020ABE8↓o
.rodata:00000000000083C7 aShellAlways    db 'shell-always',0     ; DATA XREF: .data.rel.ro:000000000020ABF0↓o
.rodata:00000000000083D4 aShellEscape    db 'shell-escape',0     ; DATA XREF: .data.rel.ro:000000000020ABF8↓o
.rodata:00000000000083D4                                         ; .data.rel.ro:000000000020AC18↓o
.rodata:00000000000083E1 aShellEscapeAlw db 'shell-escape-always',0
.rodata:00000000000083E1                                         ; DATA XREF: .data.rel.ro:000000000020AC00↓o
.rodata:00000000000083F5 aCMaybe         db 'c-maybe',0          ; DATA XREF: .data.rel.ro:000000000020AC10↓o
.rodata:00000000000083FD aClocale        db 'clocale',0          ; DATA XREF: .data.rel.ro:000000000020AC28↓o
.rodata:0000000000008405                 align 20h
.rodata:0000000000008420 jpt_4451        dd offset loc_51FA - 8420h
.rodata:0000000000008420                                         ; DATA XREF: quotearg_buffer_restyled+80↑o
.rodata:0000000000008420                                         ; quotearg_buffer_restyled+8A↑r
.rodata:0000000000008420                 dd offset loc_4453 - 8420h ; jump table for switch statement
.rodata:0000000000008420                 dd offset loc_5428 - 8420h
.rodata:0000000000008420                 dd offset loc_5234 - 8420h
.rodata:0000000000008420                 dd offset loc_5024 - 8420h
.rodata:0000000000008420                 dd offset loc_5080 - 8420h
.rodata:0000000000008420                 dd offset loc_50D5 - 8420h
.rodata:0000000000008420                 dd offset loc_511A - 8420h
.rodata:0000000000008420                 dd offset loc_5154 - 8420h
.rodata:0000000000008420                 dd offset loc_5154 - 8420h
.rodata:0000000000008420                 dd offset loc_5154 - 8420h
.rodata:000000000000844C jpt_45AE        dd offset loc_47D0 - 844Ch, offset def_45AE - 844Ch, offset def_45AE - 844Ch
.rodata:000000000000844C                                         ; DATA XREF: quotearg_buffer_restyled+1DD↑o
.rodata:000000000000844C                                         ; quotearg_buffer_restyled+1E7↑r
.rodata:000000000000844C                 dd offset def_45AE - 844Ch, offset def_45AE - 844Ch, offset def_45AE - 844Ch ; jump table for switch statement
.rodata:000000000000844C                 dd offset def_45AE - 844Ch, offset loc_4810 - 844Ch, offset loc_4718 - 844Ch
.rodata:000000000000844C                 dd offset loc_46D8 - 844Ch, offset loc_48A0 - 844Ch, offset loc_4890 - 844Ch
.rodata:000000000000844C                 dd offset loc_4880 - 844Ch, offset loc_4870 - 844Ch, offset def_45AE - 844Ch
.rodata:000000000000844C                 dd offset def_45AE - 844Ch, offset def_45AE - 844Ch, offset def_45AE - 844Ch
.rodata:000000000000844C                 dd offset def_45AE - 844Ch, offset def_45AE - 844Ch, offset def_45AE - 844Ch
.rodata:000000000000844C                 dd offset def_45AE - 844Ch, offset def_45AE - 844Ch, offset def_45AE - 844Ch
.rodata:000000000000844C                 dd offset def_45AE - 844Ch, offset def_45AE - 844Ch, offset def_45AE - 844Ch
.rodata:000000000000844C                 dd offset def_45AE - 844Ch, offset def_45AE - 844Ch, offset def_45AE - 844Ch
.rodata:000000000000844C                 dd offset def_45AE - 844Ch, offset def_45AE - 844Ch, offset loc_4860 - 844Ch
.rodata:000000000000844C                 dd offset loc_4850 - 844Ch, offset loc_4850 - 844Ch, offset loc_4820 - 844Ch
.rodata:000000000000844C                 dd offset loc_4850 - 844Ch, offset loc_47F8 - 844Ch, offset loc_4850 - 844Ch
.rodata:000000000000844C                 dd offset loc_46B3 - 844Ch, offset loc_4850 - 844Ch, offset loc_4850 - 844Ch
.rodata:000000000000844C                 dd offset loc_4850 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_4850 - 844Ch
.rodata:000000000000844C                 dd offset loc_4850 - 844Ch, offset loc_4850 - 844Ch, offset loc_4850 - 844Ch
.rodata:000000000000844C                 dd offset loc_4683 - 844Ch, offset def_45AE - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_4850 - 844Ch, offset loc_4728 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_4850 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_4850 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch, offset loc_47F8 - 844Ch
.rodata:000000000000844C                 dd offset loc_45B3 - 844Ch, offset loc_4850 - 844Ch, offset loc_45B3 - 844Ch
.rodata:000000000000844C                 dd offset loc_4820 - 844Ch
.rodata:0000000000008648 jpt_493A        dd offset loc_49A0 - 8648h, offset def_493A - 8648h, offset def_493A - 8648h
.rodata:0000000000008648                                         ; DATA XREF: quotearg_buffer_restyled+569↑o
.rodata:0000000000008648                                         ; quotearg_buffer_restyled+573↑r
.rodata:0000000000008648                 dd offset def_493A - 8648h, offset def_493A - 8648h, offset def_493A - 8648h ; jump table for switch statement
.rodata:0000000000008648                 dd offset def_493A - 8648h, offset loc_4990 - 8648h, offset loc_4AE0 - 8648h
.rodata:0000000000008648                 dd offset loc_4AC8 - 8648h, offset loc_4978 - 8648h, offset loc_4AB8 - 8648h
.rodata:0000000000008648                 dd offset loc_4960 - 8648h, offset loc_4AA0 - 8648h, offset def_493A - 8648h
.rodata:0000000000008648                 dd offset def_493A - 8648h, offset def_493A - 8648h, offset def_493A - 8648h
.rodata:0000000000008648                 dd offset def_493A - 8648h, offset def_493A - 8648h, offset def_493A - 8648h
.rodata:0000000000008648                 dd offset def_493A - 8648h, offset def_493A - 8648h, offset def_493A - 8648h
.rodata:0000000000008648                 dd offset def_493A - 8648h, offset def_493A - 8648h, offset def_493A - 8648h
.rodata:0000000000008648                 dd offset def_493A - 8648h, offset def_493A - 8648h, offset def_493A - 8648h
.rodata:0000000000008648                 dd offset def_493A - 8648h, offset def_493A - 8648h, offset loc_4A88 - 8648h
.rodata:0000000000008648                 dd offset loc_4A70 - 8648h, offset loc_4A70 - 8648h, offset loc_4A58 - 8648h
.rodata:0000000000008648                 dd offset loc_4A70 - 8648h, offset loc_4A40 - 8648h, offset loc_4A70 - 8648h
.rodata:0000000000008648                 dd offset loc_46B0 - 8648h, offset loc_4A70 - 8648h, offset loc_4A70 - 8648h
.rodata:0000000000008648                 dd offset loc_4A70 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A70 - 8648h
.rodata:0000000000008648                 dd offset loc_4A70 - 8648h, offset loc_4A70 - 8648h, offset loc_4A70 - 8648h
.rodata:0000000000008648                 dd offset loc_4680 - 8648h, offset def_493A - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A70 - 8648h, offset loc_4940 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A70 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A70 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_4A40 - 8648h, offset loc_4A40 - 8648h, offset loc_4A40 - 8648h
.rodata:0000000000008648                 dd offset loc_45B0 - 8648h, offset loc_4A70 - 8648h, offset loc_45B0 - 8648h
.rodata:0000000000008648                 dd offset loc_4A58 - 8648h
.rodata:0000000000008844                 align 20h
.rodata:0000000000008860                 public quoting_style_vals
.rodata:0000000000008860 quoting_style_vals db    0
.rodata:0000000000008861                 db    0
.rodata:0000000000008862                 db    0
.rodata:0000000000008863                 db    0
.rodata:0000000000008864                 db    1
.rodata:0000000000008865                 db    0
.rodata:0000000000008866                 db    0
.rodata:0000000000008867                 db    0
.rodata:0000000000008868                 db    2
.rodata:0000000000008869                 db    0
.rodata:000000000000886A                 db    0
.rodata:000000000000886B                 db    0
.rodata:000000000000886C                 db    3
.rodata:000000000000886D                 db    0
.rodata:000000000000886E                 db    0
.rodata:000000000000886F                 db    0
.rodata:0000000000008870                 db    4
.rodata:0000000000008871                 db    0
.rodata:0000000000008872                 db    0
.rodata:0000000000008873                 db    0
.rodata:0000000000008874                 db    5
.rodata:0000000000008875                 db    0
.rodata:0000000000008876                 db    0
.rodata:0000000000008877                 db    0
.rodata:0000000000008878                 db    6
.rodata:0000000000008879                 db    0
.rodata:000000000000887A                 db    0
.rodata:000000000000887B                 db    0
.rodata:000000000000887C                 db    7
.rodata:000000000000887D                 db    0
.rodata:000000000000887E                 db    0
.rodata:000000000000887F                 db    0
.rodata:0000000000008880                 db    8
.rodata:0000000000008881                 db    0
.rodata:0000000000008882                 db    0
.rodata:0000000000008883                 db    0
.rodata:0000000000008884                 db    9
.rodata:0000000000008885                 db    0
.rodata:0000000000008886                 db    0
.rodata:0000000000008887                 db    0
.rodata:0000000000008888 aSSS            db '%s (%s) %s',0Ah,0   ; DATA XREF: version_etc_arn+23↑o
.rodata:0000000000008888                                         ; main+CA0↑o
.rodata:0000000000008894 aSS_0           db '%s %s',0Ah,0        ; DATA XREF: version_etc_arn+13E↑o
.rodata:000000000000889B ; const char aC_0[]
.rodata:000000000000889B aC_0            db '(C)',0              ; DATA XREF: version_etc_arn:loc_5FFC↑o
.rodata:000000000000889F ; const char aWrittenByS[]
.rodata:000000000000889F aWrittenByS     db 'Written by %s.',0Ah,0
.rodata:000000000000889F                                         ; DATA XREF: version_etc_arn+1BB↑o
.rodata:00000000000088AF ; const char aWrittenBySAndS[]
.rodata:00000000000088AF aWrittenBySAndS db 'Written by %s and %s.',0Ah,0
.rodata:00000000000088AF                                         ; DATA XREF: version_etc_arn+1FC↑o
.rodata:00000000000088C6 ; const char aWrittenBySSAnd[]
.rodata:00000000000088C6 aWrittenBySSAnd db 'Written by %s, %s, and %s.',0Ah,0
.rodata:00000000000088C6                                         ; DATA XREF: version_etc_arn+248↑o
.rodata:00000000000088E2 ; const char aReportBugsToS[]
.rodata:00000000000088E2 aReportBugsToS  db 0Ah                  ; DATA XREF: emit_bug_reporting_address+1↑o
.rodata:00000000000088E2                 db 'Report bugs to: %s',0Ah,0
.rodata:00000000000088F7 aBugCoreutilsGn db 'bug-coreutils@gnu.org',0
.rodata:00000000000088F7                                         ; DATA XREF: emit_bug_reporting_address+14↑o
.rodata:000000000000890D ; const char aSHomePageS[]
.rodata:000000000000890D aSHomePageS     db '%s home page: <%s>',0Ah,0
.rodata:000000000000890D                                         ; DATA XREF: emit_bug_reporting_address+2A↑o
.rodata:0000000000008921                 align 8
.rodata:0000000000008928 ; const char aLicenseGplv3Gn[]
.rodata:0000000000008928 aLicenseGplv3Gn db 0Ah                  ; DATA XREF: version_etc_arn+6E↑o
.rodata:0000000000008928                 db 'License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licen'
.rodata:0000000000008928                 db 'ses/gpl.html>.',0Ah
.rodata:0000000000008928                 db 'This is free software: you are free to change and redistribute it'
.rodata:0000000000008928                 db '.',0Ah
.rodata:0000000000008928                 db 'There is NO WARRANTY, to the extent permitted by law.',0Ah
.rodata:0000000000008928                 db 0Ah,0
.rodata:00000000000089F4                 align 8
.rodata:00000000000089F8 ; const char aWrittenBySSSAn[]
.rodata:00000000000089F8 aWrittenBySSSAn db 'Written by %s, %s, %s,',0Ah
.rodata:00000000000089F8                                         ; DATA XREF: version_etc_arn:loc_6250↑o
.rodata:00000000000089F8                 db 'and %s.',0Ah,0
.rodata:0000000000008A18 ; const char aWrittenBySSSSA[]
.rodata:0000000000008A18 aWrittenBySSSSA db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000008A18                                         ; DATA XREF: version_etc_arn+2EC↑o
.rodata:0000000000008A18                 db '%s, and %s.',0Ah,0
.rodata:0000000000008A3C                 align 20h
.rodata:0000000000008A40 ; const char aWrittenBySSSSS_1[]
.rodata:0000000000008A40 aWrittenBySSSSS_1 db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000008A40                                         ; DATA XREF: version_etc_arn+320↑o
.rodata:0000000000008A40                 db '%s, %s, and %s.',0Ah,0
.rodata:0000000000008A68 ; const char aWrittenBySSSSS_2[]
.rodata:0000000000008A68 aWrittenBySSSSS_2 db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000008A68                                         ; DATA XREF: version_etc_arn+388↑o
.rodata:0000000000008A68                 db '%s, %s, %s, and %s.',0Ah,0
.rodata:0000000000008A94                 align 8
.rodata:0000000000008A98 ; const char aWrittenBySSSSS[]
.rodata:0000000000008A98 aWrittenBySSSSS db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000008A98                                         ; DATA XREF: version_etc_arn+B8↑o
.rodata:0000000000008A98                 db '%s, %s, %s, %s,',0Ah
.rodata:0000000000008A98                 db 'and %s.',0Ah,0
.rodata:0000000000008AC8 ; const char aWrittenBySSSSS_0[]
.rodata:0000000000008AC8 aWrittenBySSSSS_0 db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000008AC8                                         ; DATA XREF: version_etc_arn+168↑o
.rodata:0000000000008AC8                 db '%s, %s, %s, %s,',0Ah
.rodata:0000000000008AC8                 db '%s, and %s.',0Ah,0
.rodata:0000000000008AFC                 align 20h
.rodata:0000000000008B00 aWrittenBySSSSS_3 db 'Written by %s, %s, %s,',0Ah
.rodata:0000000000008B00                                         ; DATA XREF: version_etc_arn+3E5↑o
.rodata:0000000000008B00                 db '%s, %s, %s, %s,',0Ah
.rodata:0000000000008B00                 db '%s, %s, and others.',0Ah,0
.rodata:0000000000008B3C                 align 20h
.rodata:0000000000008B40 ; const char aGeneralHelpUsi[]
.rodata:0000000000008B40 aGeneralHelpUsi db 'General help using GNU software: <https://www.gnu.org/gethelp/>',0Ah
.rodata:0000000000008B40                                         ; DATA XREF: emit_bug_reporting_address+61↑o
.rodata:0000000000008B40                 db 0
.rodata:0000000000008B81                 align 4
.rodata:0000000000008B84 jpt_6064        dd offset loc_60E6 - 8B84h
.rodata:0000000000008B84                                         ; DATA XREF: version_etc_arn+96↑o
.rodata:0000000000008B84                                         ; version_etc_arn+9D↑r
.rodata:0000000000008B84                 dd offset loc_6178 - 8B84h ; jump table for switch statement
.rodata:0000000000008B84                 dd offset loc_61B8 - 8B84h
.rodata:0000000000008B84                 dd offset loc_6200 - 8B84h
.rodata:0000000000008B84                 dd offset loc_6250 - 8B84h
.rodata:0000000000008B84                 dd offset loc_62A8 - 8B84h
.rodata:0000000000008B84                 dd offset loc_62D8 - 8B84h
.rodata:0000000000008B84                 dd offset loc_6340 - 8B84h
.rodata:0000000000008B84                 dd offset loc_6070 - 8B84h
.rodata:0000000000008B84                 dd offset loc_6120 - 8B84h
.rodata:0000000000008BAC                 align 20h
.rodata:0000000000008BC0                 public version_etc_copyright
.rodata:0000000000008BC0 version_etc_copyright db 'Copyright %s %d Free Software Foundation, Inc.',0
.rodata:0000000000008BC0                                         ; DATA XREF: version_etc_arn+4F↑o
.rodata:0000000000008BEF ; const char aMemoryExhauste[]
.rodata:0000000000008BEF aMemoryExhauste db 'memory exhausted',0 ; DATA XREF: xalloc_die↑o
.rodata:0000000000008C00 ; const char aCoreutils831Li[]
.rodata:0000000000008C00 aCoreutils831Li db '../coreutils-8.31/lib/xstrtol.c',0
.rodata:0000000000008C00                                         ; DATA XREF: xstrtoumax+38C↑o
.rodata:0000000000008C20 ; const char a0StrtolBaseStr[]
.rodata:0000000000008C20 a0StrtolBaseStr db '0 <= strtol_base && strtol_base <= 36',0
.rodata:0000000000008C20                                         ; DATA XREF: xstrtoumax+393↑o
.rodata:0000000000008C46                 align 8
.rodata:0000000000008C48 jpt_6A46        dd offset loc_6B96 - 8C48h, offset def_6A46 - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                                         ; DATA XREF: xstrtoumax+1C4↑o
.rodata:0000000000008C48                                         ; xstrtoumax+1CF↑r
.rodata:0000000000008C48                 dd offset loc_6B73 - 8C48h, offset def_6A46 - 8C48h, offset loc_6BAC - 8C48h ; jump table for switch statement
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                 dd offset loc_6B2F - 8C48h, offset def_6A46 - 8C48h, offset loc_6A48 - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset loc_6B50 - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                 dd offset loc_6B0F - 8C48h, offset def_6A46 - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset loc_6AEA - 8C48h
.rodata:0000000000008C48                 dd offset loc_6AC4 - 8C48h, offset def_6A46 - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset loc_6AAD - 8C48h
.rodata:0000000000008C48                 dd offset loc_6A70 - 8C48h, offset def_6A46 - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset loc_6BAC - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset loc_6B2F - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset loc_6A48 - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset def_6A46 - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset loc_6B0F - 8C48h
.rodata:0000000000008C48                 dd offset def_6A46 - 8C48h, offset def_6A46 - 8C48h, offset loc_6A97 - 8C48h
.rodata:0000000000008D20 ; const char _PRETTY_FUNCTION___4162[]
.rodata:0000000000008D20 __PRETTY_FUNCTION___4162 db 'xstrtoumax',0
.rodata:0000000000008D20                                         ; DATA XREF: xstrtoumax:loc_6BF5↑o
.rodata:0000000000008D2B aPosix          db 'POSIX',0            ; DATA XREF: hard_locale:loc_6DE0↑o
.rodata:0000000000008D31 aAscii          db 'ASCII',0            ; DATA XREF: locale_charset+16↑o
.rodata:0000000000008D31                                         ; locale_charset:loc_6E30↑o
.rodata:0000000000008D31 _rodata         ends
.rodata:0000000000008D31
LOAD:0000000000008D37 ; ===========================================================================
LOAD:0000000000008D37
LOAD:0000000000008D37 ; Segment type: Pure code
LOAD:0000000000008D37 ; Segment permissions: Read/Execute
LOAD:0000000000008D37 LOAD            segment byte public 'CODE' use64
LOAD:0000000000008D37                 assume cs:LOAD
LOAD:0000000000008D37                 ;org 8D37h
LOAD:0000000000008D37                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000008D37                 align 8
LOAD:0000000000008D37 LOAD            ends
LOAD:0000000000008D37
.eh_frame_hdr:0000000000008D38 ; ===========================================================================
.eh_frame_hdr:0000000000008D38
.eh_frame_hdr:0000000000008D38 ; Segment type: Pure data
.eh_frame_hdr:0000000000008D38 ; Segment permissions: Read
.eh_frame_hdr:0000000000008D38 _eh_frame_hdr   segment dword public 'CONST' use64
.eh_frame_hdr:0000000000008D38                 assume cs:_eh_frame_hdr
.eh_frame_hdr:0000000000008D38                 ;org 8D38h
.eh_frame_hdr:0000000000008D38 __GNU_EH_FRAME_HDR db    1              ; DATA XREF: LOAD:00000000000001A0↑o
.eh_frame_hdr:0000000000008D39                 db  1Bh
.eh_frame_hdr:0000000000008D3A                 db    3
.eh_frame_hdr:0000000000008D3B                 db  3Bh ; ;
.eh_frame_hdr:0000000000008D3C                 db 0D4h
.eh_frame_hdr:0000000000008D3D                 db    2
.eh_frame_hdr:0000000000008D3E                 db    0
.eh_frame_hdr:0000000000008D3F                 db    0
.eh_frame_hdr:0000000000008D40                 db  59h ; Y
.eh_frame_hdr:0000000000008D41                 db    0
.eh_frame_hdr:0000000000008D42                 db    0
.eh_frame_hdr:0000000000008D43                 db    0
.eh_frame_hdr:0000000000008D44                 db  98h
.eh_frame_hdr:0000000000008D45                 db  88h
.eh_frame_hdr:0000000000008D46                 db 0FFh
.eh_frame_hdr:0000000000008D47                 db 0FFh
.eh_frame_hdr:0000000000008D48                 db  20h
.eh_frame_hdr:0000000000008D49                 db    3
.eh_frame_hdr:0000000000008D4A                 db    0
.eh_frame_hdr:0000000000008D4B                 db    0
.eh_frame_hdr:0000000000008D4C                 db 0C8h
.eh_frame_hdr:0000000000008D4D                 db  8Bh
.eh_frame_hdr:0000000000008D4E                 db 0FFh
.eh_frame_hdr:0000000000008D4F                 db 0FFh
.eh_frame_hdr:0000000000008D50                 db  48h ; H
.eh_frame_hdr:0000000000008D51                 db    3
.eh_frame_hdr:0000000000008D52                 db    0
.eh_frame_hdr:0000000000008D53                 db    0
.eh_frame_hdr:0000000000008D54                 db 0D8h
.eh_frame_hdr:0000000000008D55                 db  8Bh
.eh_frame_hdr:0000000000008D56                 db 0FFh
.eh_frame_hdr:0000000000008D57                 db 0FFh
.eh_frame_hdr:0000000000008D58                 db  48h ; H
.eh_frame_hdr:0000000000008D59                 db    5
.eh_frame_hdr:0000000000008D5A                 db    0
.eh_frame_hdr:0000000000008D5B                 db    0
.eh_frame_hdr:0000000000008D5C                 db    8
.eh_frame_hdr:0000000000008D5D                 db  8Ch
.eh_frame_hdr:0000000000008D5E                 db 0FFh
.eh_frame_hdr:0000000000008D5F                 db 0FFh
.eh_frame_hdr:0000000000008D60                 db  90h
.eh_frame_hdr:0000000000008D61                 db    6
.eh_frame_hdr:0000000000008D62                 db    0
.eh_frame_hdr:0000000000008D63                 db    0
.eh_frame_hdr:0000000000008D64                 db  68h ; h
.eh_frame_hdr:0000000000008D65                 db  99h
.eh_frame_hdr:0000000000008D66                 db 0FFh
.eh_frame_hdr:0000000000008D67                 db 0FFh
.eh_frame_hdr:0000000000008D68                 db 0F0h
.eh_frame_hdr:0000000000008D69                 db    2
.eh_frame_hdr:0000000000008D6A                 db    0
.eh_frame_hdr:0000000000008D6B                 db    0
.eh_frame_hdr:0000000000008D6C                 db  78h ; x
.eh_frame_hdr:0000000000008D6D                 db  9Ah
.eh_frame_hdr:0000000000008D6E                 db 0FFh
.eh_frame_hdr:0000000000008D6F                 db 0FFh
.eh_frame_hdr:0000000000008D70                 db  60h ; `
.eh_frame_hdr:0000000000008D71                 db    3
.eh_frame_hdr:0000000000008D72                 db    0
.eh_frame_hdr:0000000000008D73                 db    0
.eh_frame_hdr:0000000000008D74                 db    8
.eh_frame_hdr:0000000000008D75                 db  9Bh
.eh_frame_hdr:0000000000008D76                 db 0FFh
.eh_frame_hdr:0000000000008D77                 db 0FFh
.eh_frame_hdr:0000000000008D78                 db  74h ; t
.eh_frame_hdr:0000000000008D79                 db    3
.eh_frame_hdr:0000000000008D7A                 db    0
.eh_frame_hdr:0000000000008D7B                 db    0
.eh_frame_hdr:0000000000008D7C                 db  78h ; x
.eh_frame_hdr:0000000000008D7D                 db  9Bh
.eh_frame_hdr:0000000000008D7E                 db 0FFh
.eh_frame_hdr:0000000000008D7F                 db 0FFh
.eh_frame_hdr:0000000000008D80                 db 0ACh
.eh_frame_hdr:0000000000008D81                 db    3
.eh_frame_hdr:0000000000008D82                 db    0
.eh_frame_hdr:0000000000008D83                 db    0
.eh_frame_hdr:0000000000008D84                 db  18h
.eh_frame_hdr:0000000000008D85                 db  9Dh
.eh_frame_hdr:0000000000008D86                 db 0FFh
.eh_frame_hdr:0000000000008D87                 db 0FFh
.eh_frame_hdr:0000000000008D88                 db 0F8h
.eh_frame_hdr:0000000000008D89                 db    3
.eh_frame_hdr:0000000000008D8A                 db    0
.eh_frame_hdr:0000000000008D8B                 db    0
.eh_frame_hdr:0000000000008D8C                 db 0B8h
.eh_frame_hdr:0000000000008D8D                 db  9Eh
.eh_frame_hdr:0000000000008D8E                 db 0FFh
.eh_frame_hdr:0000000000008D8F                 db 0FFh
.eh_frame_hdr:0000000000008D90                 db  14h
.eh_frame_hdr:0000000000008D91                 db    4
.eh_frame_hdr:0000000000008D92                 db    0
.eh_frame_hdr:0000000000008D93                 db    0
.eh_frame_hdr:0000000000008D94                 db  78h ; x
.eh_frame_hdr:0000000000008D95                 db 0A0h
.eh_frame_hdr:0000000000008D96                 db 0FFh
.eh_frame_hdr:0000000000008D97                 db 0FFh
.eh_frame_hdr:0000000000008D98                 db  60h ; `
.eh_frame_hdr:0000000000008D99                 db    4
.eh_frame_hdr:0000000000008D9A                 db    0
.eh_frame_hdr:0000000000008D9B                 db    0
.eh_frame_hdr:0000000000008D9C                 db 0D8h
.eh_frame_hdr:0000000000008D9D                 db 0A2h
.eh_frame_hdr:0000000000008D9E                 db 0FFh
.eh_frame_hdr:0000000000008D9F                 db 0FFh
.eh_frame_hdr:0000000000008DA0                 db 0C4h
.eh_frame_hdr:0000000000008DA1                 db    4
.eh_frame_hdr:0000000000008DA2                 db    0
.eh_frame_hdr:0000000000008DA3                 db    0
.eh_frame_hdr:0000000000008DA4                 db    8
.eh_frame_hdr:0000000000008DA5                 db 0A3h
.eh_frame_hdr:0000000000008DA6                 db 0FFh
.eh_frame_hdr:0000000000008DA7                 db 0FFh
.eh_frame_hdr:0000000000008DA8                 db 0DCh
.eh_frame_hdr:0000000000008DA9                 db    4
.eh_frame_hdr:0000000000008DAA                 db    0
.eh_frame_hdr:0000000000008DAB                 db    0
.eh_frame_hdr:0000000000008DAC                 db  38h ; 8
.eh_frame_hdr:0000000000008DAD                 db 0A3h
.eh_frame_hdr:0000000000008DAE                 db 0FFh
.eh_frame_hdr:0000000000008DAF                 db 0FFh
.eh_frame_hdr:0000000000008DB0                 db 0F8h
.eh_frame_hdr:0000000000008DB1                 db    4
.eh_frame_hdr:0000000000008DB2                 db    0
.eh_frame_hdr:0000000000008DB3                 db    0
.eh_frame_hdr:0000000000008DB4                 db 0E8h
.eh_frame_hdr:0000000000008DB5                 db 0A3h
.eh_frame_hdr:0000000000008DB6                 db 0FFh
.eh_frame_hdr:0000000000008DB7                 db 0FFh
.eh_frame_hdr:0000000000008DB8                 db  28h ; (
.eh_frame_hdr:0000000000008DB9                 db    5
.eh_frame_hdr:0000000000008DBA                 db    0
.eh_frame_hdr:0000000000008DBB                 db    0
.eh_frame_hdr:0000000000008DBC                 db  38h ; 8
.eh_frame_hdr:0000000000008DBD                 db 0A4h
.eh_frame_hdr:0000000000008DBE                 db 0FFh
.eh_frame_hdr:0000000000008DBF                 db 0FFh
.eh_frame_hdr:0000000000008DC0                 db  5Ch ; \
.eh_frame_hdr:0000000000008DC1                 db    5
.eh_frame_hdr:0000000000008DC2                 db    0
.eh_frame_hdr:0000000000008DC3                 db    0
.eh_frame_hdr:0000000000008DC4                 db  98h
.eh_frame_hdr:0000000000008DC5                 db 0A4h
.eh_frame_hdr:0000000000008DC6                 db 0FFh
.eh_frame_hdr:0000000000008DC7                 db 0FFh
.eh_frame_hdr:0000000000008DC8                 db  88h
.eh_frame_hdr:0000000000008DC9                 db    5
.eh_frame_hdr:0000000000008DCA                 db    0
.eh_frame_hdr:0000000000008DCB                 db    0
.eh_frame_hdr:0000000000008DCC                 db 0A8h
.eh_frame_hdr:0000000000008DCD                 db 0ADh
.eh_frame_hdr:0000000000008DCE                 db 0FFh
.eh_frame_hdr:0000000000008DCF                 db 0FFh
.eh_frame_hdr:0000000000008DD0                 db 0ECh
.eh_frame_hdr:0000000000008DD1                 db    5
.eh_frame_hdr:0000000000008DD2                 db    0
.eh_frame_hdr:0000000000008DD3                 db    0
.eh_frame_hdr:0000000000008DD4                 db    8
.eh_frame_hdr:0000000000008DD5                 db 0AEh
.eh_frame_hdr:0000000000008DD6                 db 0FFh
.eh_frame_hdr:0000000000008DD7                 db 0FFh
.eh_frame_hdr:0000000000008DD8                 db  18h
.eh_frame_hdr:0000000000008DD9                 db    6
.eh_frame_hdr:0000000000008DDA                 db    0
.eh_frame_hdr:0000000000008DDB                 db    0
.eh_frame_hdr:0000000000008DDC                 db    8
.eh_frame_hdr:0000000000008DDD                 db 0B0h
.eh_frame_hdr:0000000000008DDE                 db 0FFh
.eh_frame_hdr:0000000000008DDF                 db 0FFh
.eh_frame_hdr:0000000000008DE0                 db  64h ; d
.eh_frame_hdr:0000000000008DE1                 db    6
.eh_frame_hdr:0000000000008DE2                 db    0
.eh_frame_hdr:0000000000008DE3                 db    0
.eh_frame_hdr:0000000000008DE4                 db 0E8h
.eh_frame_hdr:0000000000008DE5                 db 0B3h
.eh_frame_hdr:0000000000008DE6                 db 0FFh
.eh_frame_hdr:0000000000008DE7                 db 0FFh
.eh_frame_hdr:0000000000008DE8                 db 0E0h
.eh_frame_hdr:0000000000008DE9                 db    6
.eh_frame_hdr:0000000000008DEA                 db    0
.eh_frame_hdr:0000000000008DEB                 db    0
.eh_frame_hdr:0000000000008DEC                 db 0F8h
.eh_frame_hdr:0000000000008DED                 db 0B3h
.eh_frame_hdr:0000000000008DEE                 db 0FFh
.eh_frame_hdr:0000000000008DEF                 db 0FFh
.eh_frame_hdr:0000000000008DF0                 db 0F4h
.eh_frame_hdr:0000000000008DF1                 db    6
.eh_frame_hdr:0000000000008DF2                 db    0
.eh_frame_hdr:0000000000008DF3                 db    0
.eh_frame_hdr:0000000000008DF4                 db    8
.eh_frame_hdr:0000000000008DF5                 db 0B4h
.eh_frame_hdr:0000000000008DF6                 db 0FFh
.eh_frame_hdr:0000000000008DF7                 db 0FFh
.eh_frame_hdr:0000000000008DF8                 db    8
.eh_frame_hdr:0000000000008DF9                 db    7
.eh_frame_hdr:0000000000008DFA                 db    0
.eh_frame_hdr:0000000000008DFB                 db    0
.eh_frame_hdr:0000000000008DFC                 db 0B8h
.eh_frame_hdr:0000000000008DFD                 db 0B4h
.eh_frame_hdr:0000000000008DFE                 db 0FFh
.eh_frame_hdr:0000000000008DFF                 db 0FFh
.eh_frame_hdr:0000000000008E00                 db  38h ; 8
.eh_frame_hdr:0000000000008E01                 db    7
.eh_frame_hdr:0000000000008E02                 db    0
.eh_frame_hdr:0000000000008E03                 db    0
.eh_frame_hdr:0000000000008E04                 db 0C8h
.eh_frame_hdr:0000000000008E05                 db 0B4h
.eh_frame_hdr:0000000000008E06                 db 0FFh
.eh_frame_hdr:0000000000008E07                 db 0FFh
.eh_frame_hdr:0000000000008E08                 db  4Ch ; L
.eh_frame_hdr:0000000000008E09                 db    7
.eh_frame_hdr:0000000000008E0A                 db    0
.eh_frame_hdr:0000000000008E0B                 db    0
.eh_frame_hdr:0000000000008E0C                 db 0F8h
.eh_frame_hdr:0000000000008E0D                 db 0B4h
.eh_frame_hdr:0000000000008E0E                 db 0FFh
.eh_frame_hdr:0000000000008E0F                 db 0FFh
.eh_frame_hdr:0000000000008E10                 db  68h ; h
.eh_frame_hdr:0000000000008E11                 db    7
.eh_frame_hdr:0000000000008E12                 db    0
.eh_frame_hdr:0000000000008E13                 db    0
.eh_frame_hdr:0000000000008E14                 db  98h
.eh_frame_hdr:0000000000008E15                 db 0B5h
.eh_frame_hdr:0000000000008E16                 db 0FFh
.eh_frame_hdr:0000000000008E17                 db 0FFh
.eh_frame_hdr:0000000000008E18                 db  88h
.eh_frame_hdr:0000000000008E19                 db    7
.eh_frame_hdr:0000000000008E1A                 db    0
.eh_frame_hdr:0000000000008E1B                 db    0
.eh_frame_hdr:0000000000008E1C                 db  88h
.eh_frame_hdr:0000000000008E1D                 db 0B6h
.eh_frame_hdr:0000000000008E1E                 db 0FFh
.eh_frame_hdr:0000000000008E1F                 db 0FFh
.eh_frame_hdr:0000000000008E20                 db 0CCh
.eh_frame_hdr:0000000000008E21                 db    7
.eh_frame_hdr:0000000000008E22                 db    0
.eh_frame_hdr:0000000000008E23                 db    0
.eh_frame_hdr:0000000000008E24                 db 0C8h
.eh_frame_hdr:0000000000008E25                 db 0C8h
.eh_frame_hdr:0000000000008E26                 db 0FFh
.eh_frame_hdr:0000000000008E27                 db 0FFh
.eh_frame_hdr:0000000000008E28                 db  44h ; D
.eh_frame_hdr:0000000000008E29                 db    8
.eh_frame_hdr:0000000000008E2A                 db    0
.eh_frame_hdr:0000000000008E2B                 db    0
.eh_frame_hdr:0000000000008E2C                 db  78h ; x
.eh_frame_hdr:0000000000008E2D                 db 0CAh
.eh_frame_hdr:0000000000008E2E                 db 0FFh
.eh_frame_hdr:0000000000008E2F                 db 0FFh
.eh_frame_hdr:0000000000008E30                 db 0B0h
.eh_frame_hdr:0000000000008E31                 db    8
.eh_frame_hdr:0000000000008E32                 db    0
.eh_frame_hdr:0000000000008E33                 db    0
.eh_frame_hdr:0000000000008E34                 db 0B8h
.eh_frame_hdr:0000000000008E35                 db 0CAh
.eh_frame_hdr:0000000000008E36                 db 0FFh
.eh_frame_hdr:0000000000008E37                 db 0FFh
.eh_frame_hdr:0000000000008E38                 db 0DCh
.eh_frame_hdr:0000000000008E39                 db    8
.eh_frame_hdr:0000000000008E3A                 db    0
.eh_frame_hdr:0000000000008E3B                 db    0
.eh_frame_hdr:0000000000008E3C                 db 0D8h
.eh_frame_hdr:0000000000008E3D                 db 0CAh
.eh_frame_hdr:0000000000008E3E                 db 0FFh
.eh_frame_hdr:0000000000008E3F                 db 0FFh
.eh_frame_hdr:0000000000008E40                 db 0F0h
.eh_frame_hdr:0000000000008E41                 db    8
.eh_frame_hdr:0000000000008E42                 db    0
.eh_frame_hdr:0000000000008E43                 db    0
.eh_frame_hdr:0000000000008E44                 db 0F8h
.eh_frame_hdr:0000000000008E45                 db 0CAh
.eh_frame_hdr:0000000000008E46                 db 0FFh
.eh_frame_hdr:0000000000008E47                 db 0FFh
.eh_frame_hdr:0000000000008E48                 db    4
.eh_frame_hdr:0000000000008E49                 db    9
.eh_frame_hdr:0000000000008E4A                 db    0
.eh_frame_hdr:0000000000008E4B                 db    0
.eh_frame_hdr:0000000000008E4C                 db  38h ; 8
.eh_frame_hdr:0000000000008E4D                 db 0CBh
.eh_frame_hdr:0000000000008E4E                 db 0FFh
.eh_frame_hdr:0000000000008E4F                 db 0FFh
.eh_frame_hdr:0000000000008E50                 db  18h
.eh_frame_hdr:0000000000008E51                 db    9
.eh_frame_hdr:0000000000008E52                 db    0
.eh_frame_hdr:0000000000008E53                 db    0
.eh_frame_hdr:0000000000008E54                 db  58h ; X
.eh_frame_hdr:0000000000008E55                 db 0CBh
.eh_frame_hdr:0000000000008E56                 db 0FFh
.eh_frame_hdr:0000000000008E57                 db 0FFh
.eh_frame_hdr:0000000000008E58                 db  2Ch ; ,
.eh_frame_hdr:0000000000008E59                 db    9
.eh_frame_hdr:0000000000008E5A                 db    0
.eh_frame_hdr:0000000000008E5B                 db    0
.eh_frame_hdr:0000000000008E5C                 db  88h
.eh_frame_hdr:0000000000008E5D                 db 0CBh
.eh_frame_hdr:0000000000008E5E                 db 0FFh
.eh_frame_hdr:0000000000008E5F                 db 0FFh
.eh_frame_hdr:0000000000008E60                 db  40h ; @
.eh_frame_hdr:0000000000008E61                 db    9
.eh_frame_hdr:0000000000008E62                 db    0
.eh_frame_hdr:0000000000008E63                 db    0
.eh_frame_hdr:0000000000008E64                 db    8
.eh_frame_hdr:0000000000008E65                 db 0CCh
.eh_frame_hdr:0000000000008E66                 db 0FFh
.eh_frame_hdr:0000000000008E67                 db 0FFh
.eh_frame_hdr:0000000000008E68                 db  94h
.eh_frame_hdr:0000000000008E69                 db    9
.eh_frame_hdr:0000000000008E6A                 db    0
.eh_frame_hdr:0000000000008E6B                 db    0
.eh_frame_hdr:0000000000008E6C                 db 0F8h
.eh_frame_hdr:0000000000008E6D                 db 0CCh
.eh_frame_hdr:0000000000008E6E                 db 0FFh
.eh_frame_hdr:0000000000008E6F                 db 0FFh
.eh_frame_hdr:0000000000008E70                 db    0
.eh_frame_hdr:0000000000008E71                 db  0Ah
.eh_frame_hdr:0000000000008E72                 db    0
.eh_frame_hdr:0000000000008E73                 db    0
.eh_frame_hdr:0000000000008E74                 db    8
.eh_frame_hdr:0000000000008E75                 db 0CDh
.eh_frame_hdr:0000000000008E76                 db 0FFh
.eh_frame_hdr:0000000000008E77                 db 0FFh
.eh_frame_hdr:0000000000008E78                 db  14h
.eh_frame_hdr:0000000000008E79                 db  0Ah
.eh_frame_hdr:0000000000008E7A                 db    0
.eh_frame_hdr:0000000000008E7B                 db    0
.eh_frame_hdr:0000000000008E7C                 db 0A8h
.eh_frame_hdr:0000000000008E7D                 db 0CDh
.eh_frame_hdr:0000000000008E7E                 db 0FFh
.eh_frame_hdr:0000000000008E7F                 db 0FFh
.eh_frame_hdr:0000000000008E80                 db  40h ; @
.eh_frame_hdr:0000000000008E81                 db  0Ah
.eh_frame_hdr:0000000000008E82                 db    0
.eh_frame_hdr:0000000000008E83                 db    0
.eh_frame_hdr:0000000000008E84                 db 0C8h
.eh_frame_hdr:0000000000008E85                 db 0CDh
.eh_frame_hdr:0000000000008E86                 db 0FFh
.eh_frame_hdr:0000000000008E87                 db 0FFh
.eh_frame_hdr:0000000000008E88                 db  54h ; T
.eh_frame_hdr:0000000000008E89                 db  0Ah
.eh_frame_hdr:0000000000008E8A                 db    0
.eh_frame_hdr:0000000000008E8B                 db    0
.eh_frame_hdr:0000000000008E8C                 db 0D8h
.eh_frame_hdr:0000000000008E8D                 db 0CDh
.eh_frame_hdr:0000000000008E8E                 db 0FFh
.eh_frame_hdr:0000000000008E8F                 db 0FFh
.eh_frame_hdr:0000000000008E90                 db  68h ; h
.eh_frame_hdr:0000000000008E91                 db  0Ah
.eh_frame_hdr:0000000000008E92                 db    0
.eh_frame_hdr:0000000000008E93                 db    0
.eh_frame_hdr:0000000000008E94                 db 0F8h
.eh_frame_hdr:0000000000008E95                 db 0CDh
.eh_frame_hdr:0000000000008E96                 db 0FFh
.eh_frame_hdr:0000000000008E97                 db 0FFh
.eh_frame_hdr:0000000000008E98                 db  7Ch ; |
.eh_frame_hdr:0000000000008E99                 db  0Ah
.eh_frame_hdr:0000000000008E9A                 db    0
.eh_frame_hdr:0000000000008E9B                 db    0
.eh_frame_hdr:0000000000008E9C                 db  18h
.eh_frame_hdr:0000000000008E9D                 db 0CEh
.eh_frame_hdr:0000000000008E9E                 db 0FFh
.eh_frame_hdr:0000000000008E9F                 db 0FFh
.eh_frame_hdr:0000000000008EA0                 db  90h
.eh_frame_hdr:0000000000008EA1                 db  0Ah
.eh_frame_hdr:0000000000008EA2                 db    0
.eh_frame_hdr:0000000000008EA3                 db    0
.eh_frame_hdr:0000000000008EA4                 db 0A8h
.eh_frame_hdr:0000000000008EA5                 db 0CEh
.eh_frame_hdr:0000000000008EA6                 db 0FFh
.eh_frame_hdr:0000000000008EA7                 db 0FFh
.eh_frame_hdr:0000000000008EA8                 db 0ACh
.eh_frame_hdr:0000000000008EA9                 db  0Ah
.eh_frame_hdr:0000000000008EAA                 db    0
.eh_frame_hdr:0000000000008EAB                 db    0
.eh_frame_hdr:0000000000008EAC                 db  38h ; 8
.eh_frame_hdr:0000000000008EAD                 db 0CFh
.eh_frame_hdr:0000000000008EAE                 db 0FFh
.eh_frame_hdr:0000000000008EAF                 db 0FFh
.eh_frame_hdr:0000000000008EB0                 db 0C8h
.eh_frame_hdr:0000000000008EB1                 db  0Ah
.eh_frame_hdr:0000000000008EB2                 db    0
.eh_frame_hdr:0000000000008EB3                 db    0
.eh_frame_hdr:0000000000008EB4                 db  48h ; H
.eh_frame_hdr:0000000000008EB5                 db 0CFh
.eh_frame_hdr:0000000000008EB6                 db 0FFh
.eh_frame_hdr:0000000000008EB7                 db 0FFh
.eh_frame_hdr:0000000000008EB8                 db 0DCh
.eh_frame_hdr:0000000000008EB9                 db  0Ah
.eh_frame_hdr:0000000000008EBA                 db    0
.eh_frame_hdr:0000000000008EBB                 db    0
.eh_frame_hdr:0000000000008EBC                 db  58h ; X
.eh_frame_hdr:0000000000008EBD                 db 0CFh
.eh_frame_hdr:0000000000008EBE                 db 0FFh
.eh_frame_hdr:0000000000008EBF                 db 0FFh
.eh_frame_hdr:0000000000008EC0                 db 0F0h
.eh_frame_hdr:0000000000008EC1                 db  0Ah
.eh_frame_hdr:0000000000008EC2                 db    0
.eh_frame_hdr:0000000000008EC3                 db    0
.eh_frame_hdr:0000000000008EC4                 db 0F8h
.eh_frame_hdr:0000000000008EC5                 db 0CFh
.eh_frame_hdr:0000000000008EC6                 db 0FFh
.eh_frame_hdr:0000000000008EC7                 db 0FFh
.eh_frame_hdr:0000000000008EC8                 db  0Ch
.eh_frame_hdr:0000000000008EC9                 db  0Bh
.eh_frame_hdr:0000000000008ECA                 db    0
.eh_frame_hdr:0000000000008ECB                 db    0
.eh_frame_hdr:0000000000008ECC                 db    8
.eh_frame_hdr:0000000000008ECD                 db 0D0h
.eh_frame_hdr:0000000000008ECE                 db 0FFh
.eh_frame_hdr:0000000000008ECF                 db 0FFh
.eh_frame_hdr:0000000000008ED0                 db  20h
.eh_frame_hdr:0000000000008ED1                 db  0Bh
.eh_frame_hdr:0000000000008ED2                 db    0
.eh_frame_hdr:0000000000008ED3                 db    0
.eh_frame_hdr:0000000000008ED4                 db  28h ; (
.eh_frame_hdr:0000000000008ED5                 db 0D0h
.eh_frame_hdr:0000000000008ED6                 db 0FFh
.eh_frame_hdr:0000000000008ED7                 db 0FFh
.eh_frame_hdr:0000000000008ED8                 db  34h ; 4
.eh_frame_hdr:0000000000008ED9                 db  0Bh
.eh_frame_hdr:0000000000008EDA                 db    0
.eh_frame_hdr:0000000000008EDB                 db    0
.eh_frame_hdr:0000000000008EDC                 db  38h ; 8
.eh_frame_hdr:0000000000008EDD                 db 0D0h
.eh_frame_hdr:0000000000008EDE                 db 0FFh
.eh_frame_hdr:0000000000008EDF                 db 0FFh
.eh_frame_hdr:0000000000008EE0                 db  48h ; H
.eh_frame_hdr:0000000000008EE1                 db  0Bh
.eh_frame_hdr:0000000000008EE2                 db    0
.eh_frame_hdr:0000000000008EE3                 db    0
.eh_frame_hdr:0000000000008EE4                 db 0C8h
.eh_frame_hdr:0000000000008EE5                 db 0D0h
.eh_frame_hdr:0000000000008EE6                 db 0FFh
.eh_frame_hdr:0000000000008EE7                 db 0FFh
.eh_frame_hdr:0000000000008EE8                 db  64h ; d
.eh_frame_hdr:0000000000008EE9                 db  0Bh
.eh_frame_hdr:0000000000008EEA                 db    0
.eh_frame_hdr:0000000000008EEB                 db    0
.eh_frame_hdr:0000000000008EEC                 db  68h ; h
.eh_frame_hdr:0000000000008EED                 db 0D1h
.eh_frame_hdr:0000000000008EEE                 db 0FFh
.eh_frame_hdr:0000000000008EEF                 db 0FFh
.eh_frame_hdr:0000000000008EF0                 db  80h
.eh_frame_hdr:0000000000008EF1                 db  0Bh
.eh_frame_hdr:0000000000008EF2                 db    0
.eh_frame_hdr:0000000000008EF3                 db    0
.eh_frame_hdr:0000000000008EF4                 db  78h ; x
.eh_frame_hdr:0000000000008EF5                 db 0D1h
.eh_frame_hdr:0000000000008EF6                 db 0FFh
.eh_frame_hdr:0000000000008EF7                 db 0FFh
.eh_frame_hdr:0000000000008EF8                 db  94h
.eh_frame_hdr:0000000000008EF9                 db  0Bh
.eh_frame_hdr:0000000000008EFA                 db    0
.eh_frame_hdr:0000000000008EFB                 db    0
.eh_frame_hdr:0000000000008EFC                 db  98h
.eh_frame_hdr:0000000000008EFD                 db 0D1h
.eh_frame_hdr:0000000000008EFE                 db 0FFh
.eh_frame_hdr:0000000000008EFF                 db 0FFh
.eh_frame_hdr:0000000000008F00                 db 0A8h
.eh_frame_hdr:0000000000008F01                 db  0Bh
.eh_frame_hdr:0000000000008F02                 db    0
.eh_frame_hdr:0000000000008F03                 db    0
.eh_frame_hdr:0000000000008F04                 db 0B8h
.eh_frame_hdr:0000000000008F05                 db 0D1h
.eh_frame_hdr:0000000000008F06                 db 0FFh
.eh_frame_hdr:0000000000008F07                 db 0FFh
.eh_frame_hdr:0000000000008F08                 db 0BCh
.eh_frame_hdr:0000000000008F09                 db  0Bh
.eh_frame_hdr:0000000000008F0A                 db    0
.eh_frame_hdr:0000000000008F0B                 db    0
.eh_frame_hdr:0000000000008F0C                 db 0C8h
.eh_frame_hdr:0000000000008F0D                 db 0D1h
.eh_frame_hdr:0000000000008F0E                 db 0FFh
.eh_frame_hdr:0000000000008F0F                 db 0FFh
.eh_frame_hdr:0000000000008F10                 db 0D0h
.eh_frame_hdr:0000000000008F11                 db  0Bh
.eh_frame_hdr:0000000000008F12                 db    0
.eh_frame_hdr:0000000000008F13                 db    0
.eh_frame_hdr:0000000000008F14                 db 0E8h
.eh_frame_hdr:0000000000008F15                 db 0D1h
.eh_frame_hdr:0000000000008F16                 db 0FFh
.eh_frame_hdr:0000000000008F17                 db 0FFh
.eh_frame_hdr:0000000000008F18                 db 0E4h
.eh_frame_hdr:0000000000008F19                 db  0Bh
.eh_frame_hdr:0000000000008F1A                 db    0
.eh_frame_hdr:0000000000008F1B                 db    0
.eh_frame_hdr:0000000000008F1C                 db    8
.eh_frame_hdr:0000000000008F1D                 db 0D2h
.eh_frame_hdr:0000000000008F1E                 db 0FFh
.eh_frame_hdr:0000000000008F1F                 db 0FFh
.eh_frame_hdr:0000000000008F20                 db 0F8h
.eh_frame_hdr:0000000000008F21                 db  0Bh
.eh_frame_hdr:0000000000008F22                 db    0
.eh_frame_hdr:0000000000008F23                 db    0
.eh_frame_hdr:0000000000008F24                 db  28h ; (
.eh_frame_hdr:0000000000008F25                 db 0D2h
.eh_frame_hdr:0000000000008F26                 db 0FFh
.eh_frame_hdr:0000000000008F27                 db 0FFh
.eh_frame_hdr:0000000000008F28                 db  10h
.eh_frame_hdr:0000000000008F29                 db  0Ch
.eh_frame_hdr:0000000000008F2A                 db    0
.eh_frame_hdr:0000000000008F2B                 db    0
.eh_frame_hdr:0000000000008F2C                 db  88h
.eh_frame_hdr:0000000000008F2D                 db 0D2h
.eh_frame_hdr:0000000000008F2E                 db 0FFh
.eh_frame_hdr:0000000000008F2F                 db 0FFh
.eh_frame_hdr:0000000000008F30                 db  48h ; H
.eh_frame_hdr:0000000000008F31                 db  0Ch
.eh_frame_hdr:0000000000008F32                 db    0
.eh_frame_hdr:0000000000008F33                 db    0
.eh_frame_hdr:0000000000008F34                 db 0A8h
.eh_frame_hdr:0000000000008F35                 db 0D6h
.eh_frame_hdr:0000000000008F36                 db 0FFh
.eh_frame_hdr:0000000000008F37                 db 0FFh
.eh_frame_hdr:0000000000008F38                 db  5Ch ; \
.eh_frame_hdr:0000000000008F39                 db  0Dh
.eh_frame_hdr:0000000000008F3A                 db    0
.eh_frame_hdr:0000000000008F3B                 db    0
.eh_frame_hdr:0000000000008F3C                 db 0C8h
.eh_frame_hdr:0000000000008F3D                 db 0D6h
.eh_frame_hdr:0000000000008F3E                 db 0FFh
.eh_frame_hdr:0000000000008F3F                 db 0FFh
.eh_frame_hdr:0000000000008F40                 db  70h ; p
.eh_frame_hdr:0000000000008F41                 db  0Dh
.eh_frame_hdr:0000000000008F42                 db    0
.eh_frame_hdr:0000000000008F43                 db    0
.eh_frame_hdr:0000000000008F44                 db  48h ; H
.eh_frame_hdr:0000000000008F45                 db 0D7h
.eh_frame_hdr:0000000000008F46                 db 0FFh
.eh_frame_hdr:0000000000008F47                 db 0FFh
.eh_frame_hdr:0000000000008F48                 db  8Ch
.eh_frame_hdr:0000000000008F49                 db  0Dh
.eh_frame_hdr:0000000000008F4A                 db    0
.eh_frame_hdr:0000000000008F4B                 db    0
.eh_frame_hdr:0000000000008F4C                 db  28h ; (
.eh_frame_hdr:0000000000008F4D                 db 0D8h
.eh_frame_hdr:0000000000008F4E                 db 0FFh
.eh_frame_hdr:0000000000008F4F                 db 0FFh
.eh_frame_hdr:0000000000008F50                 db 0B8h
.eh_frame_hdr:0000000000008F51                 db  0Dh
.eh_frame_hdr:0000000000008F52                 db    0
.eh_frame_hdr:0000000000008F53                 db    0
.eh_frame_hdr:0000000000008F54                 db 0A8h
.eh_frame_hdr:0000000000008F55                 db 0D8h
.eh_frame_hdr:0000000000008F56                 db 0FFh
.eh_frame_hdr:0000000000008F57                 db 0FFh
.eh_frame_hdr:0000000000008F58                 db 0D8h
.eh_frame_hdr:0000000000008F59                 db  0Dh
.eh_frame_hdr:0000000000008F5A                 db    0
.eh_frame_hdr:0000000000008F5B                 db    0
.eh_frame_hdr:0000000000008F5C                 db 0C8h
.eh_frame_hdr:0000000000008F5D                 db 0D8h
.eh_frame_hdr:0000000000008F5E                 db 0FFh
.eh_frame_hdr:0000000000008F5F                 db 0FFh
.eh_frame_hdr:0000000000008F60                 db 0F4h
.eh_frame_hdr:0000000000008F61                 db  0Dh
.eh_frame_hdr:0000000000008F62                 db    0
.eh_frame_hdr:0000000000008F63                 db    0
.eh_frame_hdr:0000000000008F64                 db 0F8h
.eh_frame_hdr:0000000000008F65                 db 0D8h
.eh_frame_hdr:0000000000008F66                 db 0FFh
.eh_frame_hdr:0000000000008F67                 db 0FFh
.eh_frame_hdr:0000000000008F68                 db    8
.eh_frame_hdr:0000000000008F69                 db  0Eh
.eh_frame_hdr:0000000000008F6A                 db    0
.eh_frame_hdr:0000000000008F6B                 db    0
.eh_frame_hdr:0000000000008F6C                 db    8
.eh_frame_hdr:0000000000008F6D                 db 0D9h
.eh_frame_hdr:0000000000008F6E                 db 0FFh
.eh_frame_hdr:0000000000008F6F                 db 0FFh
.eh_frame_hdr:0000000000008F70                 db  1Ch
.eh_frame_hdr:0000000000008F71                 db  0Eh
.eh_frame_hdr:0000000000008F72                 db    0
.eh_frame_hdr:0000000000008F73                 db    0
.eh_frame_hdr:0000000000008F74                 db  48h ; H
.eh_frame_hdr:0000000000008F75                 db 0D9h
.eh_frame_hdr:0000000000008F76                 db 0FFh
.eh_frame_hdr:0000000000008F77                 db 0FFh
.eh_frame_hdr:0000000000008F78                 db  40h ; @
.eh_frame_hdr:0000000000008F79                 db  0Eh
.eh_frame_hdr:0000000000008F7A                 db    0
.eh_frame_hdr:0000000000008F7B                 db    0
.eh_frame_hdr:0000000000008F7C                 db  78h ; x
.eh_frame_hdr:0000000000008F7D                 db 0D9h
.eh_frame_hdr:0000000000008F7E                 db 0FFh
.eh_frame_hdr:0000000000008F7F                 db 0FFh
.eh_frame_hdr:0000000000008F80                 db  54h ; T
.eh_frame_hdr:0000000000008F81                 db  0Eh
.eh_frame_hdr:0000000000008F82                 db    0
.eh_frame_hdr:0000000000008F83                 db    0
.eh_frame_hdr:0000000000008F84                 db    8
.eh_frame_hdr:0000000000008F85                 db 0DAh
.eh_frame_hdr:0000000000008F86                 db 0FFh
.eh_frame_hdr:0000000000008F87                 db 0FFh
.eh_frame_hdr:0000000000008F88                 db  6Ch ; l
.eh_frame_hdr:0000000000008F89                 db  0Eh
.eh_frame_hdr:0000000000008F8A                 db    0
.eh_frame_hdr:0000000000008F8B                 db    0
.eh_frame_hdr:0000000000008F8C                 db  58h ; X
.eh_frame_hdr:0000000000008F8D                 db 0DAh
.eh_frame_hdr:0000000000008F8E                 db 0FFh
.eh_frame_hdr:0000000000008F8F                 db 0FFh
.eh_frame_hdr:0000000000008F90                 db  84h
.eh_frame_hdr:0000000000008F91                 db  0Eh
.eh_frame_hdr:0000000000008F92                 db    0
.eh_frame_hdr:0000000000008F93                 db    0
.eh_frame_hdr:0000000000008F94                 db  78h ; x
.eh_frame_hdr:0000000000008F95                 db 0DAh
.eh_frame_hdr:0000000000008F96                 db 0FFh
.eh_frame_hdr:0000000000008F97                 db 0FFh
.eh_frame_hdr:0000000000008F98                 db 0A0h
.eh_frame_hdr:0000000000008F99                 db  0Eh
.eh_frame_hdr:0000000000008F9A                 db    0
.eh_frame_hdr:0000000000008F9B                 db    0
.eh_frame_hdr:0000000000008F9C                 db 0A8h
.eh_frame_hdr:0000000000008F9D                 db 0DAh
.eh_frame_hdr:0000000000008F9E                 db 0FFh
.eh_frame_hdr:0000000000008F9F                 db 0FFh
.eh_frame_hdr:0000000000008FA0                 db 0BCh
.eh_frame_hdr:0000000000008FA1                 db  0Eh
.eh_frame_hdr:0000000000008FA2                 db    0
.eh_frame_hdr:0000000000008FA3                 db    0
.eh_frame_hdr:0000000000008FA4                 db 0D8h
.eh_frame_hdr:0000000000008FA5                 db 0DAh
.eh_frame_hdr:0000000000008FA6                 db 0FFh
.eh_frame_hdr:0000000000008FA7                 db 0FFh
.eh_frame_hdr:0000000000008FA8                 db 0E4h
.eh_frame_hdr:0000000000008FA9                 db  0Eh
.eh_frame_hdr:0000000000008FAA                 db    0
.eh_frame_hdr:0000000000008FAB                 db    0
.eh_frame_hdr:0000000000008FAC                 db 0F8h
.eh_frame_hdr:0000000000008FAD                 db 0DAh
.eh_frame_hdr:0000000000008FAE                 db 0FFh
.eh_frame_hdr:0000000000008FAF                 db 0FFh
.eh_frame_hdr:0000000000008FB0                 db    0
.eh_frame_hdr:0000000000008FB1                 db  0Fh
.eh_frame_hdr:0000000000008FB2                 db    0
.eh_frame_hdr:0000000000008FB3                 db    0
.eh_frame_hdr:0000000000008FB4                 db  38h ; 8
.eh_frame_hdr:0000000000008FB5                 db 0DBh
.eh_frame_hdr:0000000000008FB6                 db 0FFh
.eh_frame_hdr:0000000000008FB7                 db 0FFh
.eh_frame_hdr:0000000000008FB8                 db  18h
.eh_frame_hdr:0000000000008FB9                 db  0Fh
.eh_frame_hdr:0000000000008FBA                 db    0
.eh_frame_hdr:0000000000008FBB                 db    0
.eh_frame_hdr:0000000000008FBC                 db  58h ; X
.eh_frame_hdr:0000000000008FBD                 db 0DFh
.eh_frame_hdr:0000000000008FBE                 db 0FFh
.eh_frame_hdr:0000000000008FBF                 db 0FFh
.eh_frame_hdr:0000000000008FC0                 db  68h ; h
.eh_frame_hdr:0000000000008FC1                 db  0Fh
.eh_frame_hdr:0000000000008FC2                 db    0
.eh_frame_hdr:0000000000008FC3                 db    0
.eh_frame_hdr:0000000000008FC4                 db 0E8h
.eh_frame_hdr:0000000000008FC5                 db 0DFh
.eh_frame_hdr:0000000000008FC6                 db 0FFh
.eh_frame_hdr:0000000000008FC7                 db 0FFh
.eh_frame_hdr:0000000000008FC8                 db 0A8h
.eh_frame_hdr:0000000000008FC9                 db  0Fh
.eh_frame_hdr:0000000000008FCA                 db    0
.eh_frame_hdr:0000000000008FCB                 db    0
.eh_frame_hdr:0000000000008FCC                 db  68h ; h
.eh_frame_hdr:0000000000008FCD                 db 0E0h
.eh_frame_hdr:0000000000008FCE                 db 0FFh
.eh_frame_hdr:0000000000008FCF                 db 0FFh
.eh_frame_hdr:0000000000008FD0                 db 0F8h
.eh_frame_hdr:0000000000008FD1                 db  0Fh
.eh_frame_hdr:0000000000008FD2                 db    0
.eh_frame_hdr:0000000000008FD3                 db    0
.eh_frame_hdr:0000000000008FD4                 db 0C8h
.eh_frame_hdr:0000000000008FD5                 db 0E0h
.eh_frame_hdr:0000000000008FD6                 db 0FFh
.eh_frame_hdr:0000000000008FD7                 db 0FFh
.eh_frame_hdr:0000000000008FD8                 db  18h
.eh_frame_hdr:0000000000008FD9                 db  10h
.eh_frame_hdr:0000000000008FDA                 db    0
.eh_frame_hdr:0000000000008FDB                 db    0
.eh_frame_hdr:0000000000008FDC                 db    8
.eh_frame_hdr:0000000000008FDD                 db 0E1h
.eh_frame_hdr:0000000000008FDE                 db 0FFh
.eh_frame_hdr:0000000000008FDF                 db 0FFh
.eh_frame_hdr:0000000000008FE0                 db  38h ; 8
.eh_frame_hdr:0000000000008FE1                 db  10h
.eh_frame_hdr:0000000000008FE2                 db    0
.eh_frame_hdr:0000000000008FE3                 db    0
.eh_frame_hdr:0000000000008FE4                 db  88h
.eh_frame_hdr:0000000000008FE5                 db 0E1h
.eh_frame_hdr:0000000000008FE6                 db 0FFh
.eh_frame_hdr:0000000000008FE7                 db 0FFh
.eh_frame_hdr:0000000000008FE8                 db  70h ; p
.eh_frame_hdr:0000000000008FE9                 db  10h
.eh_frame_hdr:0000000000008FEA                 db    0
.eh_frame_hdr:0000000000008FEB                 db    0
.eh_frame_hdr:0000000000008FEC                 db 0C8h
.eh_frame_hdr:0000000000008FED                 db 0E1h
.eh_frame_hdr:0000000000008FEE                 db 0FFh
.eh_frame_hdr:0000000000008FEF                 db 0FFh
.eh_frame_hdr:0000000000008FF0                 db  90h
.eh_frame_hdr:0000000000008FF1                 db  10h
.eh_frame_hdr:0000000000008FF2                 db    0
.eh_frame_hdr:0000000000008FF3                 db    0
.eh_frame_hdr:0000000000008FF4                 db  28h ; (
.eh_frame_hdr:0000000000008FF5                 db 0E2h
.eh_frame_hdr:0000000000008FF6                 db 0FFh
.eh_frame_hdr:0000000000008FF7                 db 0FFh
.eh_frame_hdr:0000000000008FF8                 db 0C0h
.eh_frame_hdr:0000000000008FF9                 db  10h
.eh_frame_hdr:0000000000008FFA                 db    0
.eh_frame_hdr:0000000000008FFB                 db    0
.eh_frame_hdr:0000000000008FFC                 db  98h
.eh_frame_hdr:0000000000008FFD                 db 0E2h
.eh_frame_hdr:0000000000008FFE                 db 0FFh
.eh_frame_hdr:0000000000008FFF                 db 0FFh
.eh_frame_hdr:0000000000009000                 db    8
.eh_frame_hdr:0000000000009001                 db  11h
.eh_frame_hdr:0000000000009002                 db    0
.eh_frame_hdr:0000000000009003                 db    0
.eh_frame_hdr:0000000000009004                 db 0A8h
.eh_frame_hdr:0000000000009005                 db 0E2h
.eh_frame_hdr:0000000000009006                 db 0FFh
.eh_frame_hdr:0000000000009007                 db 0FFh
.eh_frame_hdr:0000000000009008                 db  20h
.eh_frame_hdr:0000000000009009                 db  11h
.eh_frame_hdr:000000000000900A                 db    0
.eh_frame_hdr:000000000000900B                 db    0
.eh_frame_hdr:000000000000900B _eh_frame_hdr   ends
.eh_frame_hdr:000000000000900B
LOAD:000000000000900C ; ===========================================================================
LOAD:000000000000900C
LOAD:000000000000900C ; Segment type: Pure code
LOAD:000000000000900C ; Segment permissions: Read/Execute
LOAD:000000000000900C LOAD            segment byte public 'CODE' use64
LOAD:000000000000900C                 assume cs:LOAD
LOAD:000000000000900C                 ;org 900Ch
LOAD:000000000000900C                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:000000000000900C                 align 10h
LOAD:000000000000900C LOAD            ends
LOAD:000000000000900C
.eh_frame:0000000000009010 ; ===========================================================================
.eh_frame:0000000000009010
.eh_frame:0000000000009010 ; Segment type: Pure data
.eh_frame:0000000000009010 ; Segment permissions: Read
.eh_frame:0000000000009010 _eh_frame       segment qword public 'CONST' use64
.eh_frame:0000000000009010                 assume cs:_eh_frame
.eh_frame:0000000000009010                 ;org 9010h
.eh_frame:0000000000009010                 db  14h
.eh_frame:0000000000009011                 db    0
.eh_frame:0000000000009012                 db    0
.eh_frame:0000000000009013                 db    0
.eh_frame:0000000000009014                 db    0
.eh_frame:0000000000009015                 db    0
.eh_frame:0000000000009016                 db    0
.eh_frame:0000000000009017                 db    0
.eh_frame:0000000000009018                 db    1
.eh_frame:0000000000009019                 db  7Ah ; z
.eh_frame:000000000000901A                 db  52h ; R
.eh_frame:000000000000901B                 db    0
.eh_frame:000000000000901C                 db    1
.eh_frame:000000000000901D                 db  78h ; x
.eh_frame:000000000000901E                 db  10h
.eh_frame:000000000000901F                 db    1
.eh_frame:0000000000009020                 db  1Bh
.eh_frame:0000000000009021                 db  0Ch
.eh_frame:0000000000009022                 db    7
.eh_frame:0000000000009023                 db    8
.eh_frame:0000000000009024                 db  90h
.eh_frame:0000000000009025                 db    1
.eh_frame:0000000000009026                 db    7
.eh_frame:0000000000009027                 db  10h
.eh_frame:0000000000009028                 db  14h
.eh_frame:0000000000009029                 db    0
.eh_frame:000000000000902A                 db    0
.eh_frame:000000000000902B                 db    0
.eh_frame:000000000000902C                 db  1Ch
.eh_frame:000000000000902D                 db    0
.eh_frame:000000000000902E                 db    0
.eh_frame:000000000000902F                 db    0
.eh_frame:0000000000009030                 db  70h ; p
.eh_frame:0000000000009031                 db  96h
.eh_frame:0000000000009032                 db 0FFh
.eh_frame:0000000000009033                 db 0FFh
.eh_frame:0000000000009034                 db  2Bh ; +
.eh_frame:0000000000009035                 db    0
.eh_frame:0000000000009036                 db    0
.eh_frame:0000000000009037                 db    0
.eh_frame:0000000000009038                 db    0
.eh_frame:0000000000009039                 db    0
.eh_frame:000000000000903A                 db    0
.eh_frame:000000000000903B                 db    0
.eh_frame:000000000000903C                 db    0
.eh_frame:000000000000903D                 db    0
.eh_frame:000000000000903E                 db    0
.eh_frame:000000000000903F                 db    0
.eh_frame:0000000000009040                 db  14h
.eh_frame:0000000000009041                 db    0
.eh_frame:0000000000009042                 db    0
.eh_frame:0000000000009043                 db    0
.eh_frame:0000000000009044                 db    0
.eh_frame:0000000000009045                 db    0
.eh_frame:0000000000009046                 db    0
.eh_frame:0000000000009047                 db    0
.eh_frame:0000000000009048                 db    1
.eh_frame:0000000000009049                 db  7Ah ; z
.eh_frame:000000000000904A                 db  52h ; R
.eh_frame:000000000000904B                 db    0
.eh_frame:000000000000904C                 db    1
.eh_frame:000000000000904D                 db  78h ; x
.eh_frame:000000000000904E                 db  10h
.eh_frame:000000000000904F                 db    1
.eh_frame:0000000000009050                 db  1Bh
.eh_frame:0000000000009051                 db  0Ch
.eh_frame:0000000000009052                 db    7
.eh_frame:0000000000009053                 db    8
.eh_frame:0000000000009054                 db  90h
.eh_frame:0000000000009055                 db    1
.eh_frame:0000000000009056                 db    0
.eh_frame:0000000000009057                 db    0
.eh_frame:0000000000009058                 db  24h ; $
.eh_frame:0000000000009059                 db    0
.eh_frame:000000000000905A                 db    0
.eh_frame:000000000000905B                 db    0
.eh_frame:000000000000905C                 db  1Ch
.eh_frame:000000000000905D                 db    0
.eh_frame:000000000000905E                 db    0
.eh_frame:000000000000905F                 db    0
.eh_frame:0000000000009060                 db  70h ; p
.eh_frame:0000000000009061                 db  85h
.eh_frame:0000000000009062                 db 0FFh
.eh_frame:0000000000009063                 db 0FFh
.eh_frame:0000000000009064                 db  30h ; 0
.eh_frame:0000000000009065                 db    3
.eh_frame:0000000000009066                 db    0
.eh_frame:0000000000009067                 db    0
.eh_frame:0000000000009068                 db    0
.eh_frame:0000000000009069                 db  0Eh
.eh_frame:000000000000906A                 db  10h
.eh_frame:000000000000906B                 db  46h ; F
.eh_frame:000000000000906C                 db  0Eh
.eh_frame:000000000000906D                 db  18h
.eh_frame:000000000000906E                 db  4Ah ; J
.eh_frame:000000000000906F                 db  0Fh
.eh_frame:0000000000009070                 db  0Bh
.eh_frame:0000000000009071                 db  77h ; w
.eh_frame:0000000000009072                 db    8
.eh_frame:0000000000009073                 db  80h
.eh_frame:0000000000009074                 db    0
.eh_frame:0000000000009075                 db  3Fh ; ?
.eh_frame:0000000000009076                 db  1Ah
.eh_frame:0000000000009077                 db  3Bh ; ;
.eh_frame:0000000000009078                 db  2Ah ; *
.eh_frame:0000000000009079                 db  33h ; 3
.eh_frame:000000000000907A                 db  24h ; $
.eh_frame:000000000000907B                 db  22h ; "
.eh_frame:000000000000907C                 db    0
.eh_frame:000000000000907D                 db    0
.eh_frame:000000000000907E                 db    0
.eh_frame:000000000000907F                 db    0
.eh_frame:0000000000009080                 db  14h
.eh_frame:0000000000009081                 db    0
.eh_frame:0000000000009082                 db    0
.eh_frame:0000000000009083                 db    0
.eh_frame:0000000000009084                 db  44h ; D
.eh_frame:0000000000009085                 db    0
.eh_frame:0000000000009086                 db    0
.eh_frame:0000000000009087                 db    0
.eh_frame:0000000000009088                 db  78h ; x
.eh_frame:0000000000009089                 db  88h
.eh_frame:000000000000908A                 db 0FFh
.eh_frame:000000000000908B                 db 0FFh
.eh_frame:000000000000908C                 db    8
.eh_frame:000000000000908D                 db    0
.eh_frame:000000000000908E                 db    0
.eh_frame:000000000000908F                 db    0
.eh_frame:0000000000009090                 db    0
.eh_frame:0000000000009091                 db    0
.eh_frame:0000000000009092                 db    0
.eh_frame:0000000000009093                 db    0
.eh_frame:0000000000009094                 db    0
.eh_frame:0000000000009095                 db    0
.eh_frame:0000000000009096                 db    0
.eh_frame:0000000000009097                 db    0
.eh_frame:0000000000009098                 db  10h
.eh_frame:0000000000009099                 db    0
.eh_frame:000000000000909A                 db    0
.eh_frame:000000000000909B                 db    0
.eh_frame:000000000000909C                 db  5Ch ; \
.eh_frame:000000000000909D                 db    0
.eh_frame:000000000000909E                 db    0
.eh_frame:000000000000909F                 db    0
.eh_frame:00000000000090A0                 db  10h
.eh_frame:00000000000090A1                 db  97h
.eh_frame:00000000000090A2                 db 0FFh
.eh_frame:00000000000090A3                 db 0FFh
.eh_frame:00000000000090A4                 db  8Dh
.eh_frame:00000000000090A5                 db    0
.eh_frame:00000000000090A6                 db    0
.eh_frame:00000000000090A7                 db    0
.eh_frame:00000000000090A8                 db    0
.eh_frame:00000000000090A9                 db    0
.eh_frame:00000000000090AA                 db    0
.eh_frame:00000000000090AB                 db    0
.eh_frame:00000000000090AC                 db  34h ; 4
.eh_frame:00000000000090AD                 db    0
.eh_frame:00000000000090AE                 db    0
.eh_frame:00000000000090AF                 db    0
.eh_frame:00000000000090B0                 db  70h ; p
.eh_frame:00000000000090B1                 db    0
.eh_frame:00000000000090B2                 db    0
.eh_frame:00000000000090B3                 db    0
.eh_frame:00000000000090B4                 db  8Ch
.eh_frame:00000000000090B5                 db  97h
.eh_frame:00000000000090B6                 db 0FFh
.eh_frame:00000000000090B7                 db 0FFh
.eh_frame:00000000000090B8                 db  67h ; g
.eh_frame:00000000000090B9                 db    0
.eh_frame:00000000000090BA                 db    0
.eh_frame:00000000000090BB                 db    0
.eh_frame:00000000000090BC                 db    0
.eh_frame:00000000000090BD                 db  42h ; B
.eh_frame:00000000000090BE                 db  0Eh
.eh_frame:00000000000090BF                 db  10h
.eh_frame:00000000000090C0                 db  8Ch
.eh_frame:00000000000090C1                 db    2
.eh_frame:00000000000090C2                 db  41h ; A
.eh_frame:00000000000090C3                 db  0Eh
.eh_frame:00000000000090C4                 db  18h
.eh_frame:00000000000090C5                 db  86h
.eh_frame:00000000000090C6                 db    3
.eh_frame:00000000000090C7                 db  44h ; D
.eh_frame:00000000000090C8                 db  0Eh
.eh_frame:00000000000090C9                 db  20h
.eh_frame:00000000000090CA                 db  83h
.eh_frame:00000000000090CB                 db    4
.eh_frame:00000000000090CC                 db  6Ch ; l
.eh_frame:00000000000090CD                 db  0Ah
.eh_frame:00000000000090CE                 db  0Eh
.eh_frame:00000000000090CF                 db  18h
.eh_frame:00000000000090D0                 db  41h ; A
.eh_frame:00000000000090D1                 db  0Eh
.eh_frame:00000000000090D2                 db  10h
.eh_frame:00000000000090D3                 db  42h ; B
.eh_frame:00000000000090D4                 db  0Eh
.eh_frame:00000000000090D5                 db    8
.eh_frame:00000000000090D6                 db  4Ah ; J
.eh_frame:00000000000090D7                 db  0Bh
.eh_frame:00000000000090D8                 db  63h ; c
.eh_frame:00000000000090D9                 db  0Eh
.eh_frame:00000000000090DA                 db  18h
.eh_frame:00000000000090DB                 db  41h ; A
.eh_frame:00000000000090DC                 db  0Eh
.eh_frame:00000000000090DD                 db  10h
.eh_frame:00000000000090DE                 db  42h ; B
.eh_frame:00000000000090DF                 db  0Eh
.eh_frame:00000000000090E0                 db    8
.eh_frame:00000000000090E1                 db    0
.eh_frame:00000000000090E2                 db    0
.eh_frame:00000000000090E3                 db    0
.eh_frame:00000000000090E4                 db  48h ; H
.eh_frame:00000000000090E5                 db    0
.eh_frame:00000000000090E6                 db    0
.eh_frame:00000000000090E7                 db    0
.eh_frame:00000000000090E8                 db 0A8h
.eh_frame:00000000000090E9                 db    0
.eh_frame:00000000000090EA                 db    0
.eh_frame:00000000000090EB                 db    0
.eh_frame:00000000000090EC                 db 0C4h
.eh_frame:00000000000090ED                 db  97h
.eh_frame:00000000000090EE                 db 0FFh
.eh_frame:00000000000090EF                 db 0FFh
.eh_frame:00000000000090F0                 db  9Eh
.eh_frame:00000000000090F1                 db    1
.eh_frame:00000000000090F2                 db    0
.eh_frame:00000000000090F3                 db    0
.eh_frame:00000000000090F4                 db    0
.eh_frame:00000000000090F5                 db  42h ; B
.eh_frame:00000000000090F6                 db  0Eh
.eh_frame:00000000000090F7                 db  10h
.eh_frame:00000000000090F8                 db  8Fh
.eh_frame:00000000000090F9                 db    2
.eh_frame:00000000000090FA                 db  42h ; B
.eh_frame:00000000000090FB                 db  0Eh
.eh_frame:00000000000090FC                 db  18h
.eh_frame:00000000000090FD                 db  8Eh
.eh_frame:00000000000090FE                 db    3
.eh_frame:00000000000090FF                 db  47h ; G
.eh_frame:0000000000009100                 db  0Eh
.eh_frame:0000000000009101                 db  20h
.eh_frame:0000000000009102                 db  8Dh
.eh_frame:0000000000009103                 db    4
.eh_frame:0000000000009104                 db  42h ; B
.eh_frame:0000000000009105                 db  0Eh
.eh_frame:0000000000009106                 db  28h ; (
.eh_frame:0000000000009107                 db  8Ch
.eh_frame:0000000000009108                 db    5
.eh_frame:0000000000009109                 db  44h ; D
.eh_frame:000000000000910A                 db  0Eh
.eh_frame:000000000000910B                 db  30h ; 0
.eh_frame:000000000000910C                 db  86h
.eh_frame:000000000000910D                 db    6
.eh_frame:000000000000910E                 db  41h ; A
.eh_frame:000000000000910F                 db  0Eh
.eh_frame:0000000000009110                 db  38h ; 8
.eh_frame:0000000000009111                 db  83h
.eh_frame:0000000000009112                 db    7
.eh_frame:0000000000009113                 db  4Bh ; K
.eh_frame:0000000000009114                 db  0Eh
.eh_frame:0000000000009115                 db  60h ; `
.eh_frame:0000000000009116                 db    3
.eh_frame:0000000000009117                 db  1Ah
.eh_frame:0000000000009118                 db    1
.eh_frame:0000000000009119                 db  0Ah
.eh_frame:000000000000911A                 db  0Eh
.eh_frame:000000000000911B                 db  38h ; 8
.eh_frame:000000000000911C                 db  41h ; A
.eh_frame:000000000000911D                 db  0Eh
.eh_frame:000000000000911E                 db  30h ; 0
.eh_frame:000000000000911F                 db  41h ; A
.eh_frame:0000000000009120                 db  0Eh
.eh_frame:0000000000009121                 db  28h ; (
.eh_frame:0000000000009122                 db  42h ; B
.eh_frame:0000000000009123                 db  0Eh
.eh_frame:0000000000009124                 db  20h
.eh_frame:0000000000009125                 db  42h ; B
.eh_frame:0000000000009126                 db  0Eh
.eh_frame:0000000000009127                 db  18h
.eh_frame:0000000000009128                 db  42h ; B
.eh_frame:0000000000009129                 db  0Eh
.eh_frame:000000000000912A                 db  10h
.eh_frame:000000000000912B                 db  42h ; B
.eh_frame:000000000000912C                 db  0Eh
.eh_frame:000000000000912D                 db    8
.eh_frame:000000000000912E                 db  47h ; G
.eh_frame:000000000000912F                 db  0Bh
.eh_frame:0000000000009130                 db  18h
.eh_frame:0000000000009131                 db    0
.eh_frame:0000000000009132                 db    0
.eh_frame:0000000000009133                 db    0
.eh_frame:0000000000009134                 db 0F4h
.eh_frame:0000000000009135                 db    0
.eh_frame:0000000000009136                 db    0
.eh_frame:0000000000009137                 db    0
.eh_frame:0000000000009138                 db  18h
.eh_frame:0000000000009139                 db  99h
.eh_frame:000000000000913A                 db 0FFh
.eh_frame:000000000000913B                 db 0FFh
.eh_frame:000000000000913C                 db  98h
.eh_frame:000000000000913D                 db    1
.eh_frame:000000000000913E                 db    0
.eh_frame:000000000000913F                 db    0
.eh_frame:0000000000009140                 db    0
.eh_frame:0000000000009141                 db  44h ; D
.eh_frame:0000000000009142                 db  0Eh
.eh_frame:0000000000009143                 db  10h
.eh_frame:0000000000009144                 db  83h
.eh_frame:0000000000009145                 db    2
.eh_frame:0000000000009146                 db  78h ; x
.eh_frame:0000000000009147                 db  0Ah
.eh_frame:0000000000009148                 db  0Eh
.eh_frame:0000000000009149                 db    8
.eh_frame:000000000000914A                 db  44h ; D
.eh_frame:000000000000914B                 db  0Bh
.eh_frame:000000000000914C                 db  48h ; H
.eh_frame:000000000000914D                 db    0
.eh_frame:000000000000914E                 db    0
.eh_frame:000000000000914F                 db    0
.eh_frame:0000000000009150                 db  10h
.eh_frame:0000000000009151                 db    1
.eh_frame:0000000000009152                 db    0
.eh_frame:0000000000009153                 db    0
.eh_frame:0000000000009154                 db  9Ch
.eh_frame:0000000000009155                 db  9Ah
.eh_frame:0000000000009156                 db 0FFh
.eh_frame:0000000000009157                 db 0FFh
.eh_frame:0000000000009158                 db 0B8h
.eh_frame:0000000000009159                 db    1
.eh_frame:000000000000915A                 db    0
.eh_frame:000000000000915B                 db    0
.eh_frame:000000000000915C                 db    0
.eh_frame:000000000000915D                 db  42h ; B
.eh_frame:000000000000915E                 db  0Eh
.eh_frame:000000000000915F                 db  10h
.eh_frame:0000000000009160                 db  8Fh
.eh_frame:0000000000009161                 db    2
.eh_frame:0000000000009162                 db  42h ; B
.eh_frame:0000000000009163                 db  0Eh
.eh_frame:0000000000009164                 db  18h
.eh_frame:0000000000009165                 db  8Eh
.eh_frame:0000000000009166                 db    3
.eh_frame:0000000000009167                 db  45h ; E
.eh_frame:0000000000009168                 db  0Eh
.eh_frame:0000000000009169                 db  20h
.eh_frame:000000000000916A                 db  8Dh
.eh_frame:000000000000916B                 db    4
.eh_frame:000000000000916C                 db  42h ; B
.eh_frame:000000000000916D                 db  0Eh
.eh_frame:000000000000916E                 db  28h ; (
.eh_frame:000000000000916F                 db  8Ch
.eh_frame:0000000000009170                 db    5
.eh_frame:0000000000009171                 db  41h ; A
.eh_frame:0000000000009172                 db  0Eh
.eh_frame:0000000000009173                 db  30h ; 0
.eh_frame:0000000000009174                 db  86h
.eh_frame:0000000000009175                 db    6
.eh_frame:0000000000009176                 db  41h ; A
.eh_frame:0000000000009177                 db  0Eh
.eh_frame:0000000000009178                 db  38h ; 8
.eh_frame:0000000000009179                 db  83h
.eh_frame:000000000000917A                 db    7
.eh_frame:000000000000917B                 db  44h ; D
.eh_frame:000000000000917C                 db  0Eh
.eh_frame:000000000000917D                 db  50h ; P
.eh_frame:000000000000917E                 db    2
.eh_frame:000000000000917F                 db 0A8h
.eh_frame:0000000000009180                 db  0Ah
.eh_frame:0000000000009181                 db  0Eh
.eh_frame:0000000000009182                 db  38h ; 8
.eh_frame:0000000000009183                 db  41h ; A
.eh_frame:0000000000009184                 db  0Eh
.eh_frame:0000000000009185                 db  30h ; 0
.eh_frame:0000000000009186                 db  41h ; A
.eh_frame:0000000000009187                 db  0Eh
.eh_frame:0000000000009188                 db  28h ; (
.eh_frame:0000000000009189                 db  42h ; B
.eh_frame:000000000000918A                 db  0Eh
.eh_frame:000000000000918B                 db  20h
.eh_frame:000000000000918C                 db  42h ; B
.eh_frame:000000000000918D                 db  0Eh
.eh_frame:000000000000918E                 db  18h
.eh_frame:000000000000918F                 db  42h ; B
.eh_frame:0000000000009190                 db  0Eh
.eh_frame:0000000000009191                 db  10h
.eh_frame:0000000000009192                 db  42h ; B
.eh_frame:0000000000009193                 db  0Eh
.eh_frame:0000000000009194                 db    8
.eh_frame:0000000000009195                 db  45h ; E
.eh_frame:0000000000009196                 db  0Bh
.eh_frame:0000000000009197                 db    0
.eh_frame:0000000000009198                 db  60h ; `
.eh_frame:0000000000009199                 db    0
.eh_frame:000000000000919A                 db    0
.eh_frame:000000000000919B                 db    0
.eh_frame:000000000000919C                 db  5Ch ; \
.eh_frame:000000000000919D                 db    1
.eh_frame:000000000000919E                 db    0
.eh_frame:000000000000919F                 db    0
.eh_frame:00000000000091A0                 db  10h
.eh_frame:00000000000091A1                 db  9Ch
.eh_frame:00000000000091A2                 db 0FFh
.eh_frame:00000000000091A3                 db 0FFh
.eh_frame:00000000000091A4                 db  52h ; R
.eh_frame:00000000000091A5                 db    2
.eh_frame:00000000000091A6                 db    0
.eh_frame:00000000000091A7                 db    0
.eh_frame:00000000000091A8                 db    0
.eh_frame:00000000000091A9                 db  42h ; B
.eh_frame:00000000000091AA                 db  0Eh
.eh_frame:00000000000091AB                 db  10h
.eh_frame:00000000000091AC                 db  8Eh
.eh_frame:00000000000091AD                 db    2
.eh_frame:00000000000091AE                 db  42h ; B
.eh_frame:00000000000091AF                 db  0Eh
.eh_frame:00000000000091B0                 db  18h
.eh_frame:00000000000091B1                 db  8Dh
.eh_frame:00000000000091B2                 db    3
.eh_frame:00000000000091B3                 db  49h ; I
.eh_frame:00000000000091B4                 db  0Eh
.eh_frame:00000000000091B5                 db  20h
.eh_frame:00000000000091B6                 db  8Ch
.eh_frame:00000000000091B7                 db    4
.eh_frame:00000000000091B8                 db  41h ; A
.eh_frame:00000000000091B9                 db  0Eh
.eh_frame:00000000000091BA                 db  28h ; (
.eh_frame:00000000000091BB                 db  86h
.eh_frame:00000000000091BC                 db    5
.eh_frame:00000000000091BD                 db  44h ; D
.eh_frame:00000000000091BE                 db  0Eh
.eh_frame:00000000000091BF                 db  30h ; 0
.eh_frame:00000000000091C0                 db  83h
.eh_frame:00000000000091C1                 db    6
.eh_frame:00000000000091C2                 db    2
.eh_frame:00000000000091C3                 db  5Ch ; \
.eh_frame:00000000000091C4                 db  0Ah
.eh_frame:00000000000091C5                 db  0Eh
.eh_frame:00000000000091C6                 db  28h ; (
.eh_frame:00000000000091C7                 db  44h ; D
.eh_frame:00000000000091C8                 db  0Eh
.eh_frame:00000000000091C9                 db  20h
.eh_frame:00000000000091CA                 db  42h ; B
.eh_frame:00000000000091CB                 db  0Eh
.eh_frame:00000000000091CC                 db  18h
.eh_frame:00000000000091CD                 db  42h ; B
.eh_frame:00000000000091CE                 db  0Eh
.eh_frame:00000000000091CF                 db  10h
.eh_frame:00000000000091D0                 db  42h ; B
.eh_frame:00000000000091D1                 db  0Eh
.eh_frame:00000000000091D2                 db    8
.eh_frame:00000000000091D3                 db  48h ; H
.eh_frame:00000000000091D4                 db  0Bh
.eh_frame:00000000000091D5                 db    2
.eh_frame:00000000000091D6                 db 0A5h
.eh_frame:00000000000091D7                 db  0Ah
.eh_frame:00000000000091D8                 db  0Eh
.eh_frame:00000000000091D9                 db  28h ; (
.eh_frame:00000000000091DA                 db  41h ; A
.eh_frame:00000000000091DB                 db  0Eh
.eh_frame:00000000000091DC                 db  20h
.eh_frame:00000000000091DD                 db  42h ; B
.eh_frame:00000000000091DE                 db  0Eh
.eh_frame:00000000000091DF                 db  18h
.eh_frame:00000000000091E0                 db  42h ; B
.eh_frame:00000000000091E1                 db  0Eh
.eh_frame:00000000000091E2                 db  10h
.eh_frame:00000000000091E3                 db  42h ; B
.eh_frame:00000000000091E4                 db  0Eh
.eh_frame:00000000000091E5                 db    8
.eh_frame:00000000000091E6                 db  44h ; D
.eh_frame:00000000000091E7                 db  0Bh
.eh_frame:00000000000091E8                 db  6Fh ; o
.eh_frame:00000000000091E9                 db  0Ah
.eh_frame:00000000000091EA                 db  0Eh
.eh_frame:00000000000091EB                 db  28h ; (
.eh_frame:00000000000091EC                 db  41h ; A
.eh_frame:00000000000091ED                 db  0Eh
.eh_frame:00000000000091EE                 db  20h
.eh_frame:00000000000091EF                 db  49h ; I
.eh_frame:00000000000091F0                 db  0Eh
.eh_frame:00000000000091F1                 db  18h
.eh_frame:00000000000091F2                 db  42h ; B
.eh_frame:00000000000091F3                 db  0Eh
.eh_frame:00000000000091F4                 db  10h
.eh_frame:00000000000091F5                 db  42h ; B
.eh_frame:00000000000091F6                 db  0Eh
.eh_frame:00000000000091F7                 db    8
.eh_frame:00000000000091F8                 db  43h ; C
.eh_frame:00000000000091F9                 db  0Bh
.eh_frame:00000000000091FA                 db    0
.eh_frame:00000000000091FB                 db    0
.eh_frame:00000000000091FC                 db  14h
.eh_frame:00000000000091FD                 db    0
.eh_frame:00000000000091FE                 db    0
.eh_frame:00000000000091FF                 db    0
.eh_frame:0000000000009200                 db 0C0h
.eh_frame:0000000000009201                 db    1
.eh_frame:0000000000009202                 db    0
.eh_frame:0000000000009203                 db    0
.eh_frame:0000000000009204                 db  0Ch
.eh_frame:0000000000009205                 db  9Eh
.eh_frame:0000000000009206                 db 0FFh
.eh_frame:0000000000009207                 db 0FFh
.eh_frame:0000000000009208                 db  2Dh ; -
.eh_frame:0000000000009209                 db    0
.eh_frame:000000000000920A                 db    0
.eh_frame:000000000000920B                 db    0
.eh_frame:000000000000920C                 db    0
.eh_frame:000000000000920D                 db  41h ; A
.eh_frame:000000000000920E                 db  0Eh
.eh_frame:000000000000920F                 db  10h
.eh_frame:0000000000009210                 db  83h
.eh_frame:0000000000009211                 db    2
.eh_frame:0000000000009212                 db    0
.eh_frame:0000000000009213                 db    0
.eh_frame:0000000000009214                 db  18h
.eh_frame:0000000000009215                 db    0
.eh_frame:0000000000009216                 db    0
.eh_frame:0000000000009217                 db    0
.eh_frame:0000000000009218                 db 0D8h
.eh_frame:0000000000009219                 db    1
.eh_frame:000000000000921A                 db    0
.eh_frame:000000000000921B                 db    0
.eh_frame:000000000000921C                 db  24h ; $
.eh_frame:000000000000921D                 db  9Eh
.eh_frame:000000000000921E                 db 0FFh
.eh_frame:000000000000921F                 db 0FFh
.eh_frame:0000000000009220                 db  21h ; !
.eh_frame:0000000000009221                 db    0
.eh_frame:0000000000009222                 db    0
.eh_frame:0000000000009223                 db    0
.eh_frame:0000000000009224                 db    0
.eh_frame:0000000000009225                 db  44h ; D
.eh_frame:0000000000009226                 db  0Eh
.eh_frame:0000000000009227                 db  10h
.eh_frame:0000000000009228                 db  57h ; W
.eh_frame:0000000000009229                 db  0Ah
.eh_frame:000000000000922A                 db  0Eh
.eh_frame:000000000000922B                 db    8
.eh_frame:000000000000922C                 db  41h ; A
.eh_frame:000000000000922D                 db  0Bh
.eh_frame:000000000000922E                 db    0
.eh_frame:000000000000922F                 db    0
.eh_frame:0000000000009230                 db  2Ch ; ,
.eh_frame:0000000000009231                 db    0
.eh_frame:0000000000009232                 db    0
.eh_frame:0000000000009233                 db    0
.eh_frame:0000000000009234                 db 0F4h
.eh_frame:0000000000009235                 db    1
.eh_frame:0000000000009236                 db    0
.eh_frame:0000000000009237                 db    0
.eh_frame:0000000000009238                 db  38h ; 8
.eh_frame:0000000000009239                 db  9Eh
.eh_frame:000000000000923A                 db 0FFh
.eh_frame:000000000000923B                 db 0FFh
.eh_frame:000000000000923C                 db 0A6h
.eh_frame:000000000000923D                 db    0
.eh_frame:000000000000923E                 db    0
.eh_frame:000000000000923F                 db    0
.eh_frame:0000000000009240                 db    0
.eh_frame:0000000000009241                 db  42h ; B
.eh_frame:0000000000009242                 db  0Eh
.eh_frame:0000000000009243                 db  10h
.eh_frame:0000000000009244                 db  8Ch
.eh_frame:0000000000009245                 db    2
.eh_frame:0000000000009246                 db  41h ; A
.eh_frame:0000000000009247                 db  0Eh
.eh_frame:0000000000009248                 db  18h
.eh_frame:0000000000009249                 db  86h
.eh_frame:000000000000924A                 db    3
.eh_frame:000000000000924B                 db  48h ; H
.eh_frame:000000000000924C                 db  0Eh
.eh_frame:000000000000924D                 db  20h
.eh_frame:000000000000924E                 db  83h
.eh_frame:000000000000924F                 db    4
.eh_frame:0000000000009250                 db    2
.eh_frame:0000000000009251                 db  69h ; i
.eh_frame:0000000000009252                 db  0Ah
.eh_frame:0000000000009253                 db  0Eh
.eh_frame:0000000000009254                 db  18h
.eh_frame:0000000000009255                 db  41h ; A
.eh_frame:0000000000009256                 db  0Eh
.eh_frame:0000000000009257                 db  10h
.eh_frame:0000000000009258                 db  42h ; B
.eh_frame:0000000000009259                 db  0Eh
.eh_frame:000000000000925A                 db    8
.eh_frame:000000000000925B                 db  49h ; I
.eh_frame:000000000000925C                 db  0Bh
.eh_frame:000000000000925D                 db    0
.eh_frame:000000000000925E                 db    0
.eh_frame:000000000000925F                 db    0
.eh_frame:0000000000009260                 db  1Ch
.eh_frame:0000000000009261                 db    0
.eh_frame:0000000000009262                 db    0
.eh_frame:0000000000009263                 db    0
.eh_frame:0000000000009264                 db  24h ; $
.eh_frame:0000000000009265                 db    2
.eh_frame:0000000000009266                 db    0
.eh_frame:0000000000009267                 db    0
.eh_frame:0000000000009268                 db 0B8h
.eh_frame:0000000000009269                 db  9Eh
.eh_frame:000000000000926A                 db 0FFh
.eh_frame:000000000000926B                 db 0FFh
.eh_frame:000000000000926C                 db  4Ah ; J
.eh_frame:000000000000926D                 db    0
.eh_frame:000000000000926E                 db    0
.eh_frame:000000000000926F                 db    0
.eh_frame:0000000000009270                 db    0
.eh_frame:0000000000009271                 db  41h ; A
.eh_frame:0000000000009272                 db  0Eh
.eh_frame:0000000000009273                 db  10h
.eh_frame:0000000000009274                 db  83h
.eh_frame:0000000000009275                 db    2
.eh_frame:0000000000009276                 db    2
.eh_frame:0000000000009277                 db  43h ; C
.eh_frame:0000000000009278                 db  0Ah
.eh_frame:0000000000009279                 db  0Eh
.eh_frame:000000000000927A                 db    8
.eh_frame:000000000000927B                 db  41h ; A
.eh_frame:000000000000927C                 db  0Bh
.eh_frame:000000000000927D                 db    0
.eh_frame:000000000000927E                 db    0
.eh_frame:000000000000927F                 db    0
.eh_frame:0000000000009280                 db  10h
.eh_frame:0000000000009281                 db    0
.eh_frame:0000000000009282                 db    0
.eh_frame:0000000000009283                 db    0
.eh_frame:0000000000009284                 db  44h ; D
.eh_frame:0000000000009285                 db    2
.eh_frame:0000000000009286                 db    0
.eh_frame:0000000000009287                 db    0
.eh_frame:0000000000009288                 db  88h
.eh_frame:0000000000009289                 db  86h
.eh_frame:000000000000928A                 db 0FFh
.eh_frame:000000000000928B                 db 0FFh
.eh_frame:000000000000928C                 db  23h ; #
.eh_frame:000000000000928D                 db    0
.eh_frame:000000000000928E                 db    0
.eh_frame:000000000000928F                 db    0
.eh_frame:0000000000009290                 db    0
.eh_frame:0000000000009291                 db  59h ; Y
.eh_frame:0000000000009292                 db  0Eh
.eh_frame:0000000000009293                 db  10h
.eh_frame:0000000000009294                 db  28h ; (
.eh_frame:0000000000009295                 db    0
.eh_frame:0000000000009296                 db    0
.eh_frame:0000000000009297                 db    0
.eh_frame:0000000000009298                 db  58h ; X
.eh_frame:0000000000009299                 db    2
.eh_frame:000000000000929A                 db    0
.eh_frame:000000000000929B                 db    0
.eh_frame:000000000000929C                 db 0D4h
.eh_frame:000000000000929D                 db  9Eh
.eh_frame:000000000000929E                 db 0FFh
.eh_frame:000000000000929F                 db 0FFh
.eh_frame:00000000000092A0                 db  5Eh ; ^
.eh_frame:00000000000092A1                 db    0
.eh_frame:00000000000092A2                 db    0
.eh_frame:00000000000092A3                 db    0
.eh_frame:00000000000092A4                 db    0
.eh_frame:00000000000092A5                 db  41h ; A
.eh_frame:00000000000092A6                 db  0Eh
.eh_frame:00000000000092A7                 db  10h
.eh_frame:00000000000092A8                 db  86h
.eh_frame:00000000000092A9                 db    2
.eh_frame:00000000000092AA                 db  41h ; A
.eh_frame:00000000000092AB                 db  0Eh
.eh_frame:00000000000092AC                 db  18h
.eh_frame:00000000000092AD                 db  83h
.eh_frame:00000000000092AE                 db    3
.eh_frame:00000000000092AF                 db  4Eh ; N
.eh_frame:00000000000092B0                 db  0Eh
.eh_frame:00000000000092B1                 db  20h
.eh_frame:00000000000092B2                 db  6Ch ; l
.eh_frame:00000000000092B3                 db  0Ah
.eh_frame:00000000000092B4                 db  0Eh
.eh_frame:00000000000092B5                 db  18h
.eh_frame:00000000000092B6                 db  41h ; A
.eh_frame:00000000000092B7                 db  0Eh
.eh_frame:00000000000092B8                 db  10h
.eh_frame:00000000000092B9                 db  41h ; A
.eh_frame:00000000000092BA                 db  0Eh
.eh_frame:00000000000092BB                 db    8
.eh_frame:00000000000092BC                 db  41h ; A
.eh_frame:00000000000092BD                 db  0Bh
.eh_frame:00000000000092BE                 db    0
.eh_frame:00000000000092BF                 db    0
.eh_frame:00000000000092C0                 db  60h ; `
.eh_frame:00000000000092C1                 db    0
.eh_frame:00000000000092C2                 db    0
.eh_frame:00000000000092C3                 db    0
.eh_frame:00000000000092C4                 db  84h
.eh_frame:00000000000092C5                 db    2
.eh_frame:00000000000092C6                 db    0
.eh_frame:00000000000092C7                 db    0
.eh_frame:00000000000092C8                 db    8
.eh_frame:00000000000092C9                 db  9Fh
.eh_frame:00000000000092CA                 db 0FFh
.eh_frame:00000000000092CB                 db 0FFh
.eh_frame:00000000000092CC                 db    1
.eh_frame:00000000000092CD                 db    9
.eh_frame:00000000000092CE                 db    0
.eh_frame:00000000000092CF                 db    0
.eh_frame:00000000000092D0                 db    0
.eh_frame:00000000000092D1                 db  42h ; B
.eh_frame:00000000000092D2                 db  0Eh
.eh_frame:00000000000092D3                 db  10h
.eh_frame:00000000000092D4                 db  8Fh
.eh_frame:00000000000092D5                 db    2
.eh_frame:00000000000092D6                 db  42h ; B
.eh_frame:00000000000092D7                 db  0Eh
.eh_frame:00000000000092D8                 db  18h
.eh_frame:00000000000092D9                 db  8Eh
.eh_frame:00000000000092DA                 db    3
.eh_frame:00000000000092DB                 db  42h ; B
.eh_frame:00000000000092DC                 db  0Eh
.eh_frame:00000000000092DD                 db  20h
.eh_frame:00000000000092DE                 db  8Dh
.eh_frame:00000000000092DF                 db    4
.eh_frame:00000000000092E0                 db  42h ; B
.eh_frame:00000000000092E1                 db  0Eh
.eh_frame:00000000000092E2                 db  28h ; (
.eh_frame:00000000000092E3                 db  8Ch
.eh_frame:00000000000092E4                 db    5
.eh_frame:00000000000092E5                 db  41h ; A
.eh_frame:00000000000092E6                 db  0Eh
.eh_frame:00000000000092E7                 db  30h ; 0
.eh_frame:00000000000092E8                 db  86h
.eh_frame:00000000000092E9                 db    6
.eh_frame:00000000000092EA                 db  41h ; A
.eh_frame:00000000000092EB                 db  0Eh
.eh_frame:00000000000092EC                 db  38h ; 8
.eh_frame:00000000000092ED                 db  83h
.eh_frame:00000000000092EE                 db    7
.eh_frame:00000000000092EF                 db  4Ah ; J
.eh_frame:00000000000092F0                 db  0Eh
.eh_frame:00000000000092F1                 db 0E0h
.eh_frame:00000000000092F2                 db    1
.eh_frame:00000000000092F3                 db    3
.eh_frame:00000000000092F4                 db  84h
.eh_frame:00000000000092F5                 db    4
.eh_frame:00000000000092F6                 db  0Ah
.eh_frame:00000000000092F7                 db  0Eh
.eh_frame:00000000000092F8                 db  38h ; 8
.eh_frame:00000000000092F9                 db  41h ; A
.eh_frame:00000000000092FA                 db  0Eh
.eh_frame:00000000000092FB                 db  30h ; 0
.eh_frame:00000000000092FC                 db  41h ; A
.eh_frame:00000000000092FD                 db  0Eh
.eh_frame:00000000000092FE                 db  28h ; (
.eh_frame:00000000000092FF                 db  42h ; B
.eh_frame:0000000000009300                 db  0Eh
.eh_frame:0000000000009301                 db  20h
.eh_frame:0000000000009302                 db  42h ; B
.eh_frame:0000000000009303                 db  0Eh
.eh_frame:0000000000009304                 db  18h
.eh_frame:0000000000009305                 db  42h ; B
.eh_frame:0000000000009306                 db  0Eh
.eh_frame:0000000000009307                 db  10h
.eh_frame:0000000000009308                 db  42h ; B
.eh_frame:0000000000009309                 db  0Eh
.eh_frame:000000000000930A                 db    8
.eh_frame:000000000000930B                 db  46h ; F
.eh_frame:000000000000930C                 db  0Bh
.eh_frame:000000000000930D                 db    3
.eh_frame:000000000000930E                 db 0AEh
.eh_frame:000000000000930F                 db    3
.eh_frame:0000000000009310                 db  0Eh
.eh_frame:0000000000009311                 db 0E8h
.eh_frame:0000000000009312                 db    1
.eh_frame:0000000000009313                 db  50h ; P
.eh_frame:0000000000009314                 db  0Eh
.eh_frame:0000000000009315                 db 0F0h
.eh_frame:0000000000009316                 db    1
.eh_frame:0000000000009317                 db  47h ; G
.eh_frame:0000000000009318                 db  0Eh
.eh_frame:0000000000009319                 db 0F8h
.eh_frame:000000000000931A                 db    1
.eh_frame:000000000000931B                 db  41h ; A
.eh_frame:000000000000931C                 db  0Eh
.eh_frame:000000000000931D                 db  80h
.eh_frame:000000000000931E                 db    2
.eh_frame:000000000000931F                 db  49h ; I
.eh_frame:0000000000009320                 db  0Eh
.eh_frame:0000000000009321                 db 0E0h
.eh_frame:0000000000009322                 db    1
.eh_frame:0000000000009323                 db    0
.eh_frame:0000000000009324                 db  28h ; (
.eh_frame:0000000000009325                 db    0
.eh_frame:0000000000009326                 db    0
.eh_frame:0000000000009327                 db    0
.eh_frame:0000000000009328                 db 0E8h
.eh_frame:0000000000009329                 db    2
.eh_frame:000000000000932A                 db    0
.eh_frame:000000000000932B                 db    0
.eh_frame:000000000000932C                 db 0B4h
.eh_frame:000000000000932D                 db 0A7h
.eh_frame:000000000000932E                 db 0FFh
.eh_frame:000000000000932F                 db 0FFh
.eh_frame:0000000000009330                 db  59h ; Y
.eh_frame:0000000000009331                 db    0
.eh_frame:0000000000009332                 db    0
.eh_frame:0000000000009333                 db    0
.eh_frame:0000000000009334                 db    0
.eh_frame:0000000000009335                 db  42h ; B
.eh_frame:0000000000009336                 db  0Eh
.eh_frame:0000000000009337                 db  10h
.eh_frame:0000000000009338                 db  8Ch
.eh_frame:0000000000009339                 db    2
.eh_frame:000000000000933A                 db  44h ; D
.eh_frame:000000000000933B                 db  0Eh
.eh_frame:000000000000933C                 db  18h
.eh_frame:000000000000933D                 db  86h
.eh_frame:000000000000933E                 db    3
.eh_frame:000000000000933F                 db  44h ; D
.eh_frame:0000000000009340                 db  0Eh
.eh_frame:0000000000009341                 db  20h
.eh_frame:0000000000009342                 db  83h
.eh_frame:0000000000009343                 db    4
.eh_frame:0000000000009344                 db    2
.eh_frame:0000000000009345                 db  4Bh ; K
.eh_frame:0000000000009346                 db  0Eh
.eh_frame:0000000000009347                 db  18h
.eh_frame:0000000000009348                 db  41h ; A
.eh_frame:0000000000009349                 db  0Eh
.eh_frame:000000000000934A                 db  10h
.eh_frame:000000000000934B                 db  42h ; B
.eh_frame:000000000000934C                 db  0Eh
.eh_frame:000000000000934D                 db    8
.eh_frame:000000000000934E                 db    0
.eh_frame:000000000000934F                 db    0
.eh_frame:0000000000009350                 db  48h ; H
.eh_frame:0000000000009351                 db    0
.eh_frame:0000000000009352                 db    0
.eh_frame:0000000000009353                 db    0
.eh_frame:0000000000009354                 db  14h
.eh_frame:0000000000009355                 db    3
.eh_frame:0000000000009356                 db    0
.eh_frame:0000000000009357                 db    0
.eh_frame:0000000000009358                 db 0E8h
.eh_frame:0000000000009359                 db 0A7h
.eh_frame:000000000000935A                 db 0FFh
.eh_frame:000000000000935B                 db 0FFh
.eh_frame:000000000000935C                 db 0FCh
.eh_frame:000000000000935D                 db    1
.eh_frame:000000000000935E                 db    0
.eh_frame:000000000000935F                 db    0
.eh_frame:0000000000009360                 db    0
.eh_frame:0000000000009361                 db  42h ; B
.eh_frame:0000000000009362                 db  0Eh
.eh_frame:0000000000009363                 db  10h
.eh_frame:0000000000009364                 db  8Fh
.eh_frame:0000000000009365                 db    2
.eh_frame:0000000000009366                 db  42h ; B
.eh_frame:0000000000009367                 db  0Eh
.eh_frame:0000000000009368                 db  18h
.eh_frame:0000000000009369                 db  8Eh
.eh_frame:000000000000936A                 db    3
.eh_frame:000000000000936B                 db  49h ; I
.eh_frame:000000000000936C                 db  0Eh
.eh_frame:000000000000936D                 db  20h
.eh_frame:000000000000936E                 db  8Dh
.eh_frame:000000000000936F                 db    4
.eh_frame:0000000000009370                 db  42h ; B
.eh_frame:0000000000009371                 db  0Eh
.eh_frame:0000000000009372                 db  28h ; (
.eh_frame:0000000000009373                 db  8Ch
.eh_frame:0000000000009374                 db    5
.eh_frame:0000000000009375                 db  44h ; D
.eh_frame:0000000000009376                 db  0Eh
.eh_frame:0000000000009377                 db  30h ; 0
.eh_frame:0000000000009378                 db  86h
.eh_frame:0000000000009379                 db    6
.eh_frame:000000000000937A                 db  41h ; A
.eh_frame:000000000000937B                 db  0Eh
.eh_frame:000000000000937C                 db  38h ; 8
.eh_frame:000000000000937D                 db  83h
.eh_frame:000000000000937E                 db    7
.eh_frame:000000000000937F                 db  56h ; V
.eh_frame:0000000000009380                 db  0Eh
.eh_frame:0000000000009381                 db  50h ; P
.eh_frame:0000000000009382                 db    3
.eh_frame:0000000000009383                 db  82h
.eh_frame:0000000000009384                 db    1
.eh_frame:0000000000009385                 db  0Ah
.eh_frame:0000000000009386                 db  0Eh
.eh_frame:0000000000009387                 db  38h ; 8
.eh_frame:0000000000009388                 db  41h ; A
.eh_frame:0000000000009389                 db  0Eh
.eh_frame:000000000000938A                 db  30h ; 0
.eh_frame:000000000000938B                 db  41h ; A
.eh_frame:000000000000938C                 db  0Eh
.eh_frame:000000000000938D                 db  28h ; (
.eh_frame:000000000000938E                 db  42h ; B
.eh_frame:000000000000938F                 db  0Eh
.eh_frame:0000000000009390                 db  20h
.eh_frame:0000000000009391                 db  42h ; B
.eh_frame:0000000000009392                 db  0Eh
.eh_frame:0000000000009393                 db  18h
.eh_frame:0000000000009394                 db  42h ; B
.eh_frame:0000000000009395                 db  0Eh
.eh_frame:0000000000009396                 db  10h
.eh_frame:0000000000009397                 db  42h ; B
.eh_frame:0000000000009398                 db  0Eh
.eh_frame:0000000000009399                 db    8
.eh_frame:000000000000939A                 db  4Ah ; J
.eh_frame:000000000000939B                 db  0Bh
.eh_frame:000000000000939C                 db  28h ; (
.eh_frame:000000000000939D                 db    0
.eh_frame:000000000000939E                 db    0
.eh_frame:000000000000939F                 db    0
.eh_frame:00000000000093A0                 db  60h ; `
.eh_frame:00000000000093A1                 db    3
.eh_frame:00000000000093A2                 db    0
.eh_frame:00000000000093A3                 db    0
.eh_frame:00000000000093A4                 db  9Ch
.eh_frame:00000000000093A5                 db 0A9h
.eh_frame:00000000000093A6                 db 0FFh
.eh_frame:00000000000093A7                 db 0FFh
.eh_frame:00000000000093A8                 db 0DAh
.eh_frame:00000000000093A9                 db    3
.eh_frame:00000000000093AA                 db    0
.eh_frame:00000000000093AB                 db    0
.eh_frame:00000000000093AC                 db    0
.eh_frame:00000000000093AD                 db  42h ; B
.eh_frame:00000000000093AE                 db  0Eh
.eh_frame:00000000000093AF                 db  10h
.eh_frame:00000000000093B0                 db  8Dh
.eh_frame:00000000000093B1                 db    2
.eh_frame:00000000000093B2                 db  42h ; B
.eh_frame:00000000000093B3                 db  0Eh
.eh_frame:00000000000093B4                 db  18h
.eh_frame:00000000000093B5                 db  8Ch
.eh_frame:00000000000093B6                 db    3
.eh_frame:00000000000093B7                 db  46h ; F
.eh_frame:00000000000093B8                 db  0Eh
.eh_frame:00000000000093B9                 db  20h
.eh_frame:00000000000093BA                 db  86h
.eh_frame:00000000000093BB                 db    4
.eh_frame:00000000000093BC                 db  41h ; A
.eh_frame:00000000000093BD                 db  0Eh
.eh_frame:00000000000093BE                 db  28h ; (
.eh_frame:00000000000093BF                 db  83h
.eh_frame:00000000000093C0                 db    5
.eh_frame:00000000000093C1                 db  49h ; I
.eh_frame:00000000000093C2                 db  0Eh
.eh_frame:00000000000093C3                 db 0B0h
.eh_frame:00000000000093C4                 db    1
.eh_frame:00000000000093C5                 db    0
.eh_frame:00000000000093C6                 db    0
.eh_frame:00000000000093C7                 db    0
.eh_frame:00000000000093C8                 db  4Ch ; L
.eh_frame:00000000000093C9                 db    0
.eh_frame:00000000000093CA                 db    0
.eh_frame:00000000000093CB                 db    0
.eh_frame:00000000000093CC                 db  8Ch
.eh_frame:00000000000093CD                 db    3
.eh_frame:00000000000093CE                 db    0
.eh_frame:00000000000093CF                 db    0
.eh_frame:00000000000093D0                 db  70h ; p
.eh_frame:00000000000093D1                 db  85h
.eh_frame:00000000000093D2                 db 0FFh
.eh_frame:00000000000093D3                 db 0FFh
.eh_frame:00000000000093D4                 db  55h ; U
.eh_frame:00000000000093D5                 db  0Dh
.eh_frame:00000000000093D6                 db    0
.eh_frame:00000000000093D7                 db    0
.eh_frame:00000000000093D8                 db    0
.eh_frame:00000000000093D9                 db  42h ; B
.eh_frame:00000000000093DA                 db  0Eh
.eh_frame:00000000000093DB                 db  10h
.eh_frame:00000000000093DC                 db  8Fh
.eh_frame:00000000000093DD                 db    2
.eh_frame:00000000000093DE                 db  42h ; B
.eh_frame:00000000000093DF                 db  0Eh
.eh_frame:00000000000093E0                 db  18h
.eh_frame:00000000000093E1                 db  8Eh
.eh_frame:00000000000093E2                 db    3
.eh_frame:00000000000093E3                 db  42h ; B
.eh_frame:00000000000093E4                 db  0Eh
.eh_frame:00000000000093E5                 db  20h
.eh_frame:00000000000093E6                 db  8Dh
.eh_frame:00000000000093E7                 db    4
.eh_frame:00000000000093E8                 db  42h ; B
.eh_frame:00000000000093E9                 db  0Eh
.eh_frame:00000000000093EA                 db  28h ; (
.eh_frame:00000000000093EB                 db  8Ch
.eh_frame:00000000000093EC                 db    5
.eh_frame:00000000000093ED                 db  44h ; D
.eh_frame:00000000000093EE                 db  0Eh
.eh_frame:00000000000093EF                 db  30h ; 0
.eh_frame:00000000000093F0                 db  86h
.eh_frame:00000000000093F1                 db    6
.eh_frame:00000000000093F2                 db  41h ; A
.eh_frame:00000000000093F3                 db  0Eh
.eh_frame:00000000000093F4                 db  38h ; 8
.eh_frame:00000000000093F5                 db  83h
.eh_frame:00000000000093F6                 db    7
.eh_frame:00000000000093F7                 db  51h ; Q
.eh_frame:00000000000093F8                 db  0Eh
.eh_frame:00000000000093F9                 db 0A0h
.eh_frame:00000000000093FA                 db    4
.eh_frame:00000000000093FB                 db    3
.eh_frame:00000000000093FC                 db 0C6h
.eh_frame:00000000000093FD                 db    4
.eh_frame:00000000000093FE                 db  0Ah
.eh_frame:00000000000093FF                 db  0Eh
.eh_frame:0000000000009400                 db  38h ; 8
.eh_frame:0000000000009401                 db  41h ; A
.eh_frame:0000000000009402                 db  0Eh
.eh_frame:0000000000009403                 db  30h ; 0
.eh_frame:0000000000009404                 db  41h ; A
.eh_frame:0000000000009405                 db  0Eh
.eh_frame:0000000000009406                 db  28h ; (
.eh_frame:0000000000009407                 db  42h ; B
.eh_frame:0000000000009408                 db  0Eh
.eh_frame:0000000000009409                 db  20h
.eh_frame:000000000000940A                 db  42h ; B
.eh_frame:000000000000940B                 db  0Eh
.eh_frame:000000000000940C                 db  18h
.eh_frame:000000000000940D                 db  42h ; B
.eh_frame:000000000000940E                 db  0Eh
.eh_frame:000000000000940F                 db  10h
.eh_frame:0000000000009410                 db  42h ; B
.eh_frame:0000000000009411                 db  0Eh
.eh_frame:0000000000009412                 db    8
.eh_frame:0000000000009413                 db  41h ; A
.eh_frame:0000000000009414                 db  0Bh
.eh_frame:0000000000009415                 db    0
.eh_frame:0000000000009416                 db    0
.eh_frame:0000000000009417                 db    0
.eh_frame:0000000000009418                 db  10h
.eh_frame:0000000000009419                 db    0
.eh_frame:000000000000941A                 db    0
.eh_frame:000000000000941B                 db    0
.eh_frame:000000000000941C                 db 0DCh
.eh_frame:000000000000941D                 db    3
.eh_frame:000000000000941E                 db    0
.eh_frame:000000000000941F                 db    0
.eh_frame:0000000000009420                 db    0
.eh_frame:0000000000009421                 db 0ADh
.eh_frame:0000000000009422                 db 0FFh
.eh_frame:0000000000009423                 db 0FFh
.eh_frame:0000000000009424                 db    8
.eh_frame:0000000000009425                 db    0
.eh_frame:0000000000009426                 db    0
.eh_frame:0000000000009427                 db    0
.eh_frame:0000000000009428                 db    0
.eh_frame:0000000000009429                 db    0
.eh_frame:000000000000942A                 db    0
.eh_frame:000000000000942B                 db    0
.eh_frame:000000000000942C                 db  10h
.eh_frame:000000000000942D                 db    0
.eh_frame:000000000000942E                 db    0
.eh_frame:000000000000942F                 db    0
.eh_frame:0000000000009430                 db 0F0h
.eh_frame:0000000000009431                 db    3
.eh_frame:0000000000009432                 db    0
.eh_frame:0000000000009433                 db    0
.eh_frame:0000000000009434                 db 0FCh
.eh_frame:0000000000009435                 db 0ACh
.eh_frame:0000000000009436                 db 0FFh
.eh_frame:0000000000009437                 db 0FFh
.eh_frame:0000000000009438                 db    8
.eh_frame:0000000000009439                 db    0
.eh_frame:000000000000943A                 db    0
.eh_frame:000000000000943B                 db    0
.eh_frame:000000000000943C                 db    0
.eh_frame:000000000000943D                 db    0
.eh_frame:000000000000943E                 db    0
.eh_frame:000000000000943F                 db    0
.eh_frame:0000000000009440                 db  2Ch ; ,
.eh_frame:0000000000009441                 db    0
.eh_frame:0000000000009442                 db    0
.eh_frame:0000000000009443                 db    0
.eh_frame:0000000000009444                 db    4
.eh_frame:0000000000009445                 db    4
.eh_frame:0000000000009446                 db    0
.eh_frame:0000000000009447                 db    0
.eh_frame:0000000000009448                 db 0F8h
.eh_frame:0000000000009449                 db 0ACh
.eh_frame:000000000000944A                 db 0FFh
.eh_frame:000000000000944B                 db 0FFh
.eh_frame:000000000000944C                 db 0A4h
.eh_frame:000000000000944D                 db    0
.eh_frame:000000000000944E                 db    0
.eh_frame:000000000000944F                 db    0
.eh_frame:0000000000009450                 db    0
.eh_frame:0000000000009451                 db  41h ; A
.eh_frame:0000000000009452                 db  0Eh
.eh_frame:0000000000009453                 db  10h
.eh_frame:0000000000009454                 db  86h
.eh_frame:0000000000009455                 db    2
.eh_frame:0000000000009456                 db  41h ; A
.eh_frame:0000000000009457                 db  0Eh
.eh_frame:0000000000009458                 db  18h
.eh_frame:0000000000009459                 db  83h
.eh_frame:000000000000945A                 db    3
.eh_frame:000000000000945B                 db  44h ; D
.eh_frame:000000000000945C                 db  0Eh
.eh_frame:000000000000945D                 db  20h
.eh_frame:000000000000945E                 db  7Ah ; z
.eh_frame:000000000000945F                 db  0Ah
.eh_frame:0000000000009460                 db  0Eh
.eh_frame:0000000000009461                 db  18h
.eh_frame:0000000000009462                 db  41h ; A
.eh_frame:0000000000009463                 db  0Eh
.eh_frame:0000000000009464                 db  10h
.eh_frame:0000000000009465                 db  41h ; A
.eh_frame:0000000000009466                 db  0Eh
.eh_frame:0000000000009467                 db    8
.eh_frame:0000000000009468                 db  41h ; A
.eh_frame:0000000000009469                 db  0Bh
.eh_frame:000000000000946A                 db    0
.eh_frame:000000000000946B                 db    0
.eh_frame:000000000000946C                 db    0
.eh_frame:000000000000946D                 db    0
.eh_frame:000000000000946E                 db    0
.eh_frame:000000000000946F                 db    0
.eh_frame:0000000000009470                 db  10h
.eh_frame:0000000000009471                 db    0
.eh_frame:0000000000009472                 db    0
.eh_frame:0000000000009473                 db    0
.eh_frame:0000000000009474                 db  34h ; 4
.eh_frame:0000000000009475                 db    4
.eh_frame:0000000000009476                 db    0
.eh_frame:0000000000009477                 db    0
.eh_frame:0000000000009478                 db  78h ; x
.eh_frame:0000000000009479                 db 0ADh
.eh_frame:000000000000947A                 db 0FFh
.eh_frame:000000000000947B                 db 0FFh
.eh_frame:000000000000947C                 db    5
.eh_frame:000000000000947D                 db    0
.eh_frame:000000000000947E                 db    0
.eh_frame:000000000000947F                 db    0
.eh_frame:0000000000009480                 db    0
.eh_frame:0000000000009481                 db    0
.eh_frame:0000000000009482                 db    0
.eh_frame:0000000000009483                 db    0
.eh_frame:0000000000009484                 db  18h
.eh_frame:0000000000009485                 db    0
.eh_frame:0000000000009486                 db    0
.eh_frame:0000000000009487                 db    0
.eh_frame:0000000000009488                 db  48h ; H
.eh_frame:0000000000009489                 db    4
.eh_frame:000000000000948A                 db    0
.eh_frame:000000000000948B                 db    0
.eh_frame:000000000000948C                 db  74h ; t
.eh_frame:000000000000948D                 db 0ADh
.eh_frame:000000000000948E                 db 0FFh
.eh_frame:000000000000948F                 db 0FFh
.eh_frame:0000000000009490                 db  22h ; "
.eh_frame:0000000000009491                 db    0
.eh_frame:0000000000009492                 db    0
.eh_frame:0000000000009493                 db    0
.eh_frame:0000000000009494                 db    0
.eh_frame:0000000000009495                 db  46h ; F
.eh_frame:0000000000009496                 db  0Eh
.eh_frame:0000000000009497                 db  10h
.eh_frame:0000000000009498                 db  83h
.eh_frame:0000000000009499                 db    2
.eh_frame:000000000000949A                 db  4Eh ; N
.eh_frame:000000000000949B                 db 0C3h
.eh_frame:000000000000949C                 db  0Eh
.eh_frame:000000000000949D                 db    8
.eh_frame:000000000000949E                 db    0
.eh_frame:000000000000949F                 db    0
.eh_frame:00000000000094A0                 db  1Ch
.eh_frame:00000000000094A1                 db    0
.eh_frame:00000000000094A2                 db    0
.eh_frame:00000000000094A3                 db    0
.eh_frame:00000000000094A4                 db  64h ; d
.eh_frame:00000000000094A5                 db    4
.eh_frame:00000000000094A6                 db    0
.eh_frame:00000000000094A7                 db    0
.eh_frame:00000000000094A8                 db  88h
.eh_frame:00000000000094A9                 db 0ADh
.eh_frame:00000000000094AA                 db 0FFh
.eh_frame:00000000000094AB                 db 0FFh
.eh_frame:00000000000094AC                 db  9Fh
.eh_frame:00000000000094AD                 db    0
.eh_frame:00000000000094AE                 db    0
.eh_frame:00000000000094AF                 db    0
.eh_frame:00000000000094B0                 db    0
.eh_frame:00000000000094B1                 db  44h ; D
.eh_frame:00000000000094B2                 db  0Eh
.eh_frame:00000000000094B3                 db  10h
.eh_frame:00000000000094B4                 db  83h
.eh_frame:00000000000094B5                 db    2
.eh_frame:00000000000094B6                 db    2
.eh_frame:00000000000094B7                 db  78h ; x
.eh_frame:00000000000094B8                 db  0Ah
.eh_frame:00000000000094B9                 db  0Eh
.eh_frame:00000000000094BA                 db    8
.eh_frame:00000000000094BB                 db  41h ; A
.eh_frame:00000000000094BC                 db  0Bh
.eh_frame:00000000000094BD                 db    0
.eh_frame:00000000000094BE                 db    0
.eh_frame:00000000000094BF                 db    0
.eh_frame:00000000000094C0                 db  40h ; @
.eh_frame:00000000000094C1                 db    0
.eh_frame:00000000000094C2                 db    0
.eh_frame:00000000000094C3                 db    0
.eh_frame:00000000000094C4                 db  84h
.eh_frame:00000000000094C5                 db    4
.eh_frame:00000000000094C6                 db    0
.eh_frame:00000000000094C7                 db    0
.eh_frame:00000000000094C8                 db    8
.eh_frame:00000000000094C9                 db 0AEh
.eh_frame:00000000000094CA                 db 0FFh
.eh_frame:00000000000094CB                 db 0FFh
.eh_frame:00000000000094CC                 db 0E7h
.eh_frame:00000000000094CD                 db    0
.eh_frame:00000000000094CE                 db    0
.eh_frame:00000000000094CF                 db    0
.eh_frame:00000000000094D0                 db    0
.eh_frame:00000000000094D1                 db  41h ; A
.eh_frame:00000000000094D2                 db  0Eh
.eh_frame:00000000000094D3                 db  10h
.eh_frame:00000000000094D4                 db  86h
.eh_frame:00000000000094D5                 db    2
.eh_frame:00000000000094D6                 db  41h ; A
.eh_frame:00000000000094D7                 db  0Eh
.eh_frame:00000000000094D8                 db  18h
.eh_frame:00000000000094D9                 db  83h
.eh_frame:00000000000094DA                 db    3
.eh_frame:00000000000094DB                 db  49h ; I
.eh_frame:00000000000094DC                 db  0Eh
.eh_frame:00000000000094DD                 db  20h
.eh_frame:00000000000094DE                 db  6Eh ; n
.eh_frame:00000000000094DF                 db  0Ah
.eh_frame:00000000000094E0                 db  0Eh
.eh_frame:00000000000094E1                 db  18h
.eh_frame:00000000000094E2                 db  41h ; A
.eh_frame:00000000000094E3                 db  0Eh
.eh_frame:00000000000094E4                 db  10h
.eh_frame:00000000000094E5                 db  41h ; A
.eh_frame:00000000000094E6                 db  0Eh
.eh_frame:00000000000094E7                 db    8
.eh_frame:00000000000094E8                 db  45h ; E
.eh_frame:00000000000094E9                 db  0Bh
.eh_frame:00000000000094EA                 db    2
.eh_frame:00000000000094EB                 db  4Ah ; J
.eh_frame:00000000000094EC                 db  0Ah
.eh_frame:00000000000094ED                 db  0Eh
.eh_frame:00000000000094EE                 db  18h
.eh_frame:00000000000094EF                 db  41h ; A
.eh_frame:00000000000094F0                 db  0Eh
.eh_frame:00000000000094F1                 db  10h
.eh_frame:00000000000094F2                 db  41h ; A
.eh_frame:00000000000094F3                 db  0Eh
.eh_frame:00000000000094F4                 db    8
.eh_frame:00000000000094F5                 db  44h ; D
.eh_frame:00000000000094F6                 db  0Bh
.eh_frame:00000000000094F7                 db    2
.eh_frame:00000000000094F8                 db  54h ; T
.eh_frame:00000000000094F9                 db  0Eh
.eh_frame:00000000000094FA                 db  18h
.eh_frame:00000000000094FB                 db  41h ; A
.eh_frame:00000000000094FC                 db  0Eh
.eh_frame:00000000000094FD                 db  10h
.eh_frame:00000000000094FE                 db  41h ; A
.eh_frame:00000000000094FF                 db  0Eh
.eh_frame:0000000000009500                 db    8
.eh_frame:0000000000009501                 db    0
.eh_frame:0000000000009502                 db    0
.eh_frame:0000000000009503                 db    0
.eh_frame:0000000000009504                 db  74h ; t
.eh_frame:0000000000009505                 db    0
.eh_frame:0000000000009506                 db    0
.eh_frame:0000000000009507                 db    0
.eh_frame:0000000000009508                 db 0C8h
.eh_frame:0000000000009509                 db    4
.eh_frame:000000000000950A                 db    0
.eh_frame:000000000000950B                 db    0
.eh_frame:000000000000950C                 db 0B4h
.eh_frame:000000000000950D                 db 0AEh
.eh_frame:000000000000950E                 db 0FFh
.eh_frame:000000000000950F                 db 0FFh
.eh_frame:0000000000009510                 db  34h ; 4
.eh_frame:0000000000009511                 db  12h
.eh_frame:0000000000009512                 db    0
.eh_frame:0000000000009513                 db    0
.eh_frame:0000000000009514                 db    0
.eh_frame:0000000000009515                 db  42h ; B
.eh_frame:0000000000009516                 db  0Eh
.eh_frame:0000000000009517                 db  10h
.eh_frame:0000000000009518                 db  8Fh
.eh_frame:0000000000009519                 db    2
.eh_frame:000000000000951A                 db  42h ; B
.eh_frame:000000000000951B                 db  0Eh
.eh_frame:000000000000951C                 db  18h
.eh_frame:000000000000951D                 db  8Eh
.eh_frame:000000000000951E                 db    3
.eh_frame:000000000000951F                 db  45h ; E
.eh_frame:0000000000009520                 db  0Eh
.eh_frame:0000000000009521                 db  20h
.eh_frame:0000000000009522                 db  8Dh
.eh_frame:0000000000009523                 db    4
.eh_frame:0000000000009524                 db  42h ; B
.eh_frame:0000000000009525                 db  0Eh
.eh_frame:0000000000009526                 db  28h ; (
.eh_frame:0000000000009527                 db  8Ch
.eh_frame:0000000000009528                 db    5
.eh_frame:0000000000009529                 db  44h ; D
.eh_frame:000000000000952A                 db  0Eh
.eh_frame:000000000000952B                 db  30h ; 0
.eh_frame:000000000000952C                 db  86h
.eh_frame:000000000000952D                 db    6
.eh_frame:000000000000952E                 db  41h ; A
.eh_frame:000000000000952F                 db  0Eh
.eh_frame:0000000000009530                 db  38h ; 8
.eh_frame:0000000000009531                 db  83h
.eh_frame:0000000000009532                 db    7
.eh_frame:0000000000009533                 db  53h ; S
.eh_frame:0000000000009534                 db  0Eh
.eh_frame:0000000000009535                 db 0F0h
.eh_frame:0000000000009536                 db    1
.eh_frame:0000000000009537                 db    3
.eh_frame:0000000000009538                 db  81h
.eh_frame:0000000000009539                 db  0Bh
.eh_frame:000000000000953A                 db  0Eh
.eh_frame:000000000000953B                 db 0F8h
.eh_frame:000000000000953C                 db    1
.eh_frame:000000000000953D                 db  4Ah ; J
.eh_frame:000000000000953E                 db  0Eh
.eh_frame:000000000000953F                 db  80h
.eh_frame:0000000000009540                 db    2
.eh_frame:0000000000009541                 db  44h ; D
.eh_frame:0000000000009542                 db  0Eh
.eh_frame:0000000000009543                 db  88h
.eh_frame:0000000000009544                 db    2
.eh_frame:0000000000009545                 db  45h ; E
.eh_frame:0000000000009546                 db  0Eh
.eh_frame:0000000000009547                 db  90h
.eh_frame:0000000000009548                 db    2
.eh_frame:0000000000009549                 db  5Fh ; _
.eh_frame:000000000000954A                 db  0Eh
.eh_frame:000000000000954B                 db 0F0h
.eh_frame:000000000000954C                 db    1
.eh_frame:000000000000954D                 db  64h ; d
.eh_frame:000000000000954E                 db  0Ah
.eh_frame:000000000000954F                 db  0Eh
.eh_frame:0000000000009550                 db  38h ; 8
.eh_frame:0000000000009551                 db  41h ; A
.eh_frame:0000000000009552                 db  0Eh
.eh_frame:0000000000009553                 db  30h ; 0
.eh_frame:0000000000009554                 db  41h ; A
.eh_frame:0000000000009555                 db  0Eh
.eh_frame:0000000000009556                 db  28h ; (
.eh_frame:0000000000009557                 db  42h ; B
.eh_frame:0000000000009558                 db  0Eh
.eh_frame:0000000000009559                 db  20h
.eh_frame:000000000000955A                 db  42h ; B
.eh_frame:000000000000955B                 db  0Eh
.eh_frame:000000000000955C                 db  18h
.eh_frame:000000000000955D                 db  42h ; B
.eh_frame:000000000000955E                 db  0Eh
.eh_frame:000000000000955F                 db  10h
.eh_frame:0000000000009560                 db  42h ; B
.eh_frame:0000000000009561                 db  0Eh
.eh_frame:0000000000009562                 db    8
.eh_frame:0000000000009563                 db  44h ; D
.eh_frame:0000000000009564                 db  0Bh
.eh_frame:0000000000009565                 db    3
.eh_frame:0000000000009566                 db  99h
.eh_frame:0000000000009567                 db    5
.eh_frame:0000000000009568                 db  0Eh
.eh_frame:0000000000009569                 db 0F8h
.eh_frame:000000000000956A                 db    1
.eh_frame:000000000000956B                 db  4Dh ; M
.eh_frame:000000000000956C                 db  0Eh
.eh_frame:000000000000956D                 db  80h
.eh_frame:000000000000956E                 db    2
.eh_frame:000000000000956F                 db  44h ; D
.eh_frame:0000000000009570                 db  0Eh
.eh_frame:0000000000009571                 db  88h
.eh_frame:0000000000009572                 db    2
.eh_frame:0000000000009573                 db  47h ; G
.eh_frame:0000000000009574                 db  0Eh
.eh_frame:0000000000009575                 db  90h
.eh_frame:0000000000009576                 db    2
.eh_frame:0000000000009577                 db  5Bh ; [
.eh_frame:0000000000009578                 db  0Eh
.eh_frame:0000000000009579                 db 0F0h
.eh_frame:000000000000957A                 db    1
.eh_frame:000000000000957B                 db    0
.eh_frame:000000000000957C                 db  68h ; h
.eh_frame:000000000000957D                 db    0
.eh_frame:000000000000957E                 db    0
.eh_frame:000000000000957F                 db    0
.eh_frame:0000000000009580                 db  40h ; @
.eh_frame:0000000000009581                 db    5
.eh_frame:0000000000009582                 db    0
.eh_frame:0000000000009583                 db    0
.eh_frame:0000000000009584                 db  7Ch ; |
.eh_frame:0000000000009585                 db 0C0h
.eh_frame:0000000000009586                 db 0FFh
.eh_frame:0000000000009587                 db 0FFh
.eh_frame:0000000000009588                 db 0ABh
.eh_frame:0000000000009589                 db    1
.eh_frame:000000000000958A                 db    0
.eh_frame:000000000000958B                 db    0
.eh_frame:000000000000958C                 db    0
.eh_frame:000000000000958D                 db  42h ; B
.eh_frame:000000000000958E                 db  0Eh
.eh_frame:000000000000958F                 db  10h
.eh_frame:0000000000009590                 db  8Fh
.eh_frame:0000000000009591                 db    2
.eh_frame:0000000000009592                 db  42h ; B
.eh_frame:0000000000009593                 db  0Eh
.eh_frame:0000000000009594                 db  18h
.eh_frame:0000000000009595                 db  8Eh
.eh_frame:0000000000009596                 db    3
.eh_frame:0000000000009597                 db  45h ; E
.eh_frame:0000000000009598                 db  0Eh
.eh_frame:0000000000009599                 db  20h
.eh_frame:000000000000959A                 db  8Dh
.eh_frame:000000000000959B                 db    4
.eh_frame:000000000000959C                 db  42h ; B
.eh_frame:000000000000959D                 db  0Eh
.eh_frame:000000000000959E                 db  28h ; (
.eh_frame:000000000000959F                 db  8Ch
.eh_frame:00000000000095A0                 db    5
.eh_frame:00000000000095A1                 db  44h ; D
.eh_frame:00000000000095A2                 db  0Eh
.eh_frame:00000000000095A3                 db  30h ; 0
.eh_frame:00000000000095A4                 db  86h
.eh_frame:00000000000095A5                 db    6
.eh_frame:00000000000095A6                 db  41h ; A
.eh_frame:00000000000095A7                 db  0Eh
.eh_frame:00000000000095A8                 db  38h ; 8
.eh_frame:00000000000095A9                 db  83h
.eh_frame:00000000000095AA                 db    7
.eh_frame:00000000000095AB                 db  47h ; G
.eh_frame:00000000000095AC                 db  0Eh
.eh_frame:00000000000095AD                 db  60h ; `
.eh_frame:00000000000095AE                 db    2
.eh_frame:00000000000095AF                 db  99h
.eh_frame:00000000000095B0                 db  0Eh
.eh_frame:00000000000095B1                 db  68h ; h
.eh_frame:00000000000095B2                 db  5Fh ; _
.eh_frame:00000000000095B3                 db  0Eh
.eh_frame:00000000000095B4                 db  70h ; p
.eh_frame:00000000000095B5                 db  46h ; F
.eh_frame:00000000000095B6                 db  0Eh
.eh_frame:00000000000095B7                 db  78h ; x
.eh_frame:00000000000095B8                 db  42h ; B
.eh_frame:00000000000095B9                 db  0Eh
.eh_frame:00000000000095BA                 db  80h
.eh_frame:00000000000095BB                 db    1
.eh_frame:00000000000095BC                 db  59h ; Y
.eh_frame:00000000000095BD                 db  0Eh
.eh_frame:00000000000095BE                 db  60h ; `
.eh_frame:00000000000095BF                 db    2
.eh_frame:00000000000095C0                 db  40h ; @
.eh_frame:00000000000095C1                 db  0Eh
.eh_frame:00000000000095C2                 db  68h ; h
.eh_frame:00000000000095C3                 db  4Bh ; K
.eh_frame:00000000000095C4                 db  0Eh
.eh_frame:00000000000095C5                 db  70h ; p
.eh_frame:00000000000095C6                 db  43h ; C
.eh_frame:00000000000095C7                 db  0Eh
.eh_frame:00000000000095C8                 db  78h ; x
.eh_frame:00000000000095C9                 db  45h ; E
.eh_frame:00000000000095CA                 db  0Eh
.eh_frame:00000000000095CB                 db  80h
.eh_frame:00000000000095CC                 db    1
.eh_frame:00000000000095CD                 db  5Eh ; ^
.eh_frame:00000000000095CE                 db  0Eh
.eh_frame:00000000000095CF                 db  60h ; `
.eh_frame:00000000000095D0                 db  4Ch ; L
.eh_frame:00000000000095D1                 db  0Ah
.eh_frame:00000000000095D2                 db  0Eh
.eh_frame:00000000000095D3                 db  38h ; 8
.eh_frame:00000000000095D4                 db  44h ; D
.eh_frame:00000000000095D5                 db  0Eh
.eh_frame:00000000000095D6                 db  30h ; 0
.eh_frame:00000000000095D7                 db  41h ; A
.eh_frame:00000000000095D8                 db  0Eh
.eh_frame:00000000000095D9                 db  28h ; (
.eh_frame:00000000000095DA                 db  42h ; B
.eh_frame:00000000000095DB                 db  0Eh
.eh_frame:00000000000095DC                 db  20h
.eh_frame:00000000000095DD                 db  42h ; B
.eh_frame:00000000000095DE                 db  0Eh
.eh_frame:00000000000095DF                 db  18h
.eh_frame:00000000000095E0                 db  42h ; B
.eh_frame:00000000000095E1                 db  0Eh
.eh_frame:00000000000095E2                 db  10h
.eh_frame:00000000000095E3                 db  42h ; B
.eh_frame:00000000000095E4                 db  0Eh
.eh_frame:00000000000095E5                 db    8
.eh_frame:00000000000095E6                 db  46h ; F
.eh_frame:00000000000095E7                 db  0Bh
.eh_frame:00000000000095E8                 db  28h ; (
.eh_frame:00000000000095E9                 db    0
.eh_frame:00000000000095EA                 db    0
.eh_frame:00000000000095EB                 db    0
.eh_frame:00000000000095EC                 db 0ACh
.eh_frame:00000000000095ED                 db    5
.eh_frame:00000000000095EE                 db    0
.eh_frame:00000000000095EF                 db    0
.eh_frame:00000000000095F0                 db 0C0h
.eh_frame:00000000000095F1                 db 0C1h
.eh_frame:00000000000095F2                 db 0FFh
.eh_frame:00000000000095F3                 db 0FFh
.eh_frame:00000000000095F4                 db  36h ; 6
.eh_frame:00000000000095F5                 db    0
.eh_frame:00000000000095F6                 db    0
.eh_frame:00000000000095F7                 db    0
.eh_frame:00000000000095F8                 db    0
.eh_frame:00000000000095F9                 db  42h ; B
.eh_frame:00000000000095FA                 db  0Eh
.eh_frame:00000000000095FB                 db  10h
.eh_frame:00000000000095FC                 db  8Ch
.eh_frame:00000000000095FD                 db    2
.eh_frame:00000000000095FE                 db  41h ; A
.eh_frame:00000000000095FF                 db  0Eh
.eh_frame:0000000000009600                 db  18h
.eh_frame:0000000000009601                 db  86h
.eh_frame:0000000000009602                 db    3
.eh_frame:0000000000009603                 db  41h ; A
.eh_frame:0000000000009604                 db  0Eh
.eh_frame:0000000000009605                 db  20h
.eh_frame:0000000000009606                 db  83h
.eh_frame:0000000000009607                 db    4
.eh_frame:0000000000009608                 db  6Eh ; n
.eh_frame:0000000000009609                 db  0Eh
.eh_frame:000000000000960A                 db  18h
.eh_frame:000000000000960B                 db  41h ; A
.eh_frame:000000000000960C                 db  0Eh
.eh_frame:000000000000960D                 db  10h
.eh_frame:000000000000960E                 db  42h ; B
.eh_frame:000000000000960F                 db  0Eh
.eh_frame:0000000000009610                 db    8
.eh_frame:0000000000009611                 db    0
.eh_frame:0000000000009612                 db    0
.eh_frame:0000000000009613                 db    0
.eh_frame:0000000000009614                 db  10h
.eh_frame:0000000000009615                 db    0
.eh_frame:0000000000009616                 db    0
.eh_frame:0000000000009617                 db    0
.eh_frame:0000000000009618                 db 0D8h
.eh_frame:0000000000009619                 db    5
.eh_frame:000000000000961A                 db    0
.eh_frame:000000000000961B                 db    0
.eh_frame:000000000000961C                 db 0D4h
.eh_frame:000000000000961D                 db 0C1h
.eh_frame:000000000000961E                 db 0FFh
.eh_frame:000000000000961F                 db 0FFh
.eh_frame:0000000000009620                 db  11h
.eh_frame:0000000000009621                 db    0
.eh_frame:0000000000009622                 db    0
.eh_frame:0000000000009623                 db    0
.eh_frame:0000000000009624                 db    0
.eh_frame:0000000000009625                 db    0
.eh_frame:0000000000009626                 db    0
.eh_frame:0000000000009627                 db    0
.eh_frame:0000000000009628                 db  10h
.eh_frame:0000000000009629                 db    0
.eh_frame:000000000000962A                 db    0
.eh_frame:000000000000962B                 db    0
.eh_frame:000000000000962C                 db 0ECh
.eh_frame:000000000000962D                 db    5
.eh_frame:000000000000962E                 db    0
.eh_frame:000000000000962F                 db    0
.eh_frame:0000000000009630                 db 0E0h
.eh_frame:0000000000009631                 db 0C1h
.eh_frame:0000000000009632                 db 0FFh
.eh_frame:0000000000009633                 db 0FFh
.eh_frame:0000000000009634                 db  11h
.eh_frame:0000000000009635                 db    0
.eh_frame:0000000000009636                 db    0
.eh_frame:0000000000009637                 db    0
.eh_frame:0000000000009638                 db    0
.eh_frame:0000000000009639                 db    0
.eh_frame:000000000000963A                 db    0
.eh_frame:000000000000963B                 db    0
.eh_frame:000000000000963C                 db  10h
.eh_frame:000000000000963D                 db    0
.eh_frame:000000000000963E                 db    0
.eh_frame:000000000000963F                 db    0
.eh_frame:0000000000009640                 db    0
.eh_frame:0000000000009641                 db    6
.eh_frame:0000000000009642                 db    0
.eh_frame:0000000000009643                 db    0
.eh_frame:0000000000009644                 db 0ECh
.eh_frame:0000000000009645                 db 0C1h
.eh_frame:0000000000009646                 db 0FFh
.eh_frame:0000000000009647                 db 0FFh
.eh_frame:0000000000009648                 db  35h ; 5
.eh_frame:0000000000009649                 db    0
.eh_frame:000000000000964A                 db    0
.eh_frame:000000000000964B                 db    0
.eh_frame:000000000000964C                 db    0
.eh_frame:000000000000964D                 db    0
.eh_frame:000000000000964E                 db    0
.eh_frame:000000000000964F                 db    0
.eh_frame:0000000000009650                 db  10h
.eh_frame:0000000000009651                 db    0
.eh_frame:0000000000009652                 db    0
.eh_frame:0000000000009653                 db    0
.eh_frame:0000000000009654                 db  14h
.eh_frame:0000000000009655                 db    6
.eh_frame:0000000000009656                 db    0
.eh_frame:0000000000009657                 db    0
.eh_frame:0000000000009658                 db  18h
.eh_frame:0000000000009659                 db 0C2h
.eh_frame:000000000000965A                 db 0FFh
.eh_frame:000000000000965B                 db 0FFh
.eh_frame:000000000000965C                 db  15h
.eh_frame:000000000000965D                 db    0
.eh_frame:000000000000965E                 db    0
.eh_frame:000000000000965F                 db    0
.eh_frame:0000000000009660                 db    0
.eh_frame:0000000000009661                 db    0
.eh_frame:0000000000009662                 db    0
.eh_frame:0000000000009663                 db    0
.eh_frame:0000000000009664                 db  10h
.eh_frame:0000000000009665                 db    0
.eh_frame:0000000000009666                 db    0
.eh_frame:0000000000009667                 db    0
.eh_frame:0000000000009668                 db  28h ; (
.eh_frame:0000000000009669                 db    6
.eh_frame:000000000000966A                 db    0
.eh_frame:000000000000966B                 db    0
.eh_frame:000000000000966C                 db  24h ; $
.eh_frame:000000000000966D                 db 0C2h
.eh_frame:000000000000966E                 db 0FFh
.eh_frame:000000000000966F                 db 0FFh
.eh_frame:0000000000009670                 db  30h ; 0
.eh_frame:0000000000009671                 db    0
.eh_frame:0000000000009672                 db    0
.eh_frame:0000000000009673                 db    0
.eh_frame:0000000000009674                 db    0
.eh_frame:0000000000009675                 db  6Bh ; k
.eh_frame:0000000000009676                 db  0Eh
.eh_frame:0000000000009677                 db  10h
.eh_frame:0000000000009678                 db  50h ; P
.eh_frame:0000000000009679                 db    0
.eh_frame:000000000000967A                 db    0
.eh_frame:000000000000967B                 db    0
.eh_frame:000000000000967C                 db  3Ch ; <
.eh_frame:000000000000967D                 db    6
.eh_frame:000000000000967E                 db    0
.eh_frame:000000000000967F                 db    0
.eh_frame:0000000000009680                 db  40h ; @
.eh_frame:0000000000009681                 db 0C2h
.eh_frame:0000000000009682                 db 0FFh
.eh_frame:0000000000009683                 db 0FFh
.eh_frame:0000000000009684                 db  74h ; t
.eh_frame:0000000000009685                 db    0
.eh_frame:0000000000009686                 db    0
.eh_frame:0000000000009687                 db    0
.eh_frame:0000000000009688                 db    0
.eh_frame:0000000000009689                 db  42h ; B
.eh_frame:000000000000968A                 db  0Eh
.eh_frame:000000000000968B                 db  10h
.eh_frame:000000000000968C                 db  8Fh
.eh_frame:000000000000968D                 db    2
.eh_frame:000000000000968E                 db  42h ; B
.eh_frame:000000000000968F                 db  0Eh
.eh_frame:0000000000009690                 db  18h
.eh_frame:0000000000009691                 db  8Eh
.eh_frame:0000000000009692                 db    3
.eh_frame:0000000000009693                 db  49h ; I
.eh_frame:0000000000009694                 db  0Eh
.eh_frame:0000000000009695                 db  20h
.eh_frame:0000000000009696                 db  8Dh
.eh_frame:0000000000009697                 db    4
.eh_frame:0000000000009698                 db  42h ; B
.eh_frame:0000000000009699                 db  0Eh
.eh_frame:000000000000969A                 db  28h ; (
.eh_frame:000000000000969B                 db  8Ch
.eh_frame:000000000000969C                 db    5
.eh_frame:000000000000969D                 db  44h ; D
.eh_frame:000000000000969E                 db  0Eh
.eh_frame:000000000000969F                 db  30h ; 0
.eh_frame:00000000000096A0                 db  86h
.eh_frame:00000000000096A1                 db    6
.eh_frame:00000000000096A2                 db  41h ; A
.eh_frame:00000000000096A3                 db  0Eh
.eh_frame:00000000000096A4                 db  38h ; 8
.eh_frame:00000000000096A5                 db  83h
.eh_frame:00000000000096A6                 db    7
.eh_frame:00000000000096A7                 db  4Dh ; M
.eh_frame:00000000000096A8                 db  0Eh
.eh_frame:00000000000096A9                 db  50h ; P
.eh_frame:00000000000096AA                 db  5Fh ; _
.eh_frame:00000000000096AB                 db  0Eh
.eh_frame:00000000000096AC                 db  58h ; X
.eh_frame:00000000000096AD                 db  47h ; G
.eh_frame:00000000000096AE                 db  0Eh
.eh_frame:00000000000096AF                 db  60h ; `
.eh_frame:00000000000096B0                 db  46h ; F
.eh_frame:00000000000096B1                 db  0Eh
.eh_frame:00000000000096B2                 db  68h ; h
.eh_frame:00000000000096B3                 db  44h ; D
.eh_frame:00000000000096B4                 db  0Eh
.eh_frame:00000000000096B5                 db  70h ; p
.eh_frame:00000000000096B6                 db  58h ; X
.eh_frame:00000000000096B7                 db  0Eh
.eh_frame:00000000000096B8                 db  38h ; 8
.eh_frame:00000000000096B9                 db  41h ; A
.eh_frame:00000000000096BA                 db  0Eh
.eh_frame:00000000000096BB                 db  30h ; 0
.eh_frame:00000000000096BC                 db  41h ; A
.eh_frame:00000000000096BD                 db  0Eh
.eh_frame:00000000000096BE                 db  28h ; (
.eh_frame:00000000000096BF                 db  42h ; B
.eh_frame:00000000000096C0                 db  0Eh
.eh_frame:00000000000096C1                 db  20h
.eh_frame:00000000000096C2                 db  42h ; B
.eh_frame:00000000000096C3                 db  0Eh
.eh_frame:00000000000096C4                 db  18h
.eh_frame:00000000000096C5                 db  42h ; B
.eh_frame:00000000000096C6                 db  0Eh
.eh_frame:00000000000096C7                 db  10h
.eh_frame:00000000000096C8                 db  42h ; B
.eh_frame:00000000000096C9                 db  0Eh
.eh_frame:00000000000096CA                 db    8
.eh_frame:00000000000096CB                 db    0
.eh_frame:00000000000096CC                 db  68h ; h
.eh_frame:00000000000096CD                 db    0
.eh_frame:00000000000096CE                 db    0
.eh_frame:00000000000096CF                 db    0
.eh_frame:00000000000096D0                 db  90h
.eh_frame:00000000000096D1                 db    6
.eh_frame:00000000000096D2                 db    0
.eh_frame:00000000000096D3                 db    0
.eh_frame:00000000000096D4                 db  6Ch ; l
.eh_frame:00000000000096D5                 db 0C2h
.eh_frame:00000000000096D6                 db 0FFh
.eh_frame:00000000000096D7                 db 0FFh
.eh_frame:00000000000096D8                 db 0E3h
.eh_frame:00000000000096D9                 db    0
.eh_frame:00000000000096DA                 db    0
.eh_frame:00000000000096DB                 db    0
.eh_frame:00000000000096DC                 db    0
.eh_frame:00000000000096DD                 db  42h ; B
.eh_frame:00000000000096DE                 db  0Eh
.eh_frame:00000000000096DF                 db  10h
.eh_frame:00000000000096E0                 db  8Fh
.eh_frame:00000000000096E1                 db    2
.eh_frame:00000000000096E2                 db  42h ; B
.eh_frame:00000000000096E3                 db  0Eh
.eh_frame:00000000000096E4                 db  18h
.eh_frame:00000000000096E5                 db  8Eh
.eh_frame:00000000000096E6                 db    3
.eh_frame:00000000000096E7                 db  49h ; I
.eh_frame:00000000000096E8                 db  0Eh
.eh_frame:00000000000096E9                 db  20h
.eh_frame:00000000000096EA                 db  8Dh
.eh_frame:00000000000096EB                 db    4
.eh_frame:00000000000096EC                 db  42h ; B
.eh_frame:00000000000096ED                 db  0Eh
.eh_frame:00000000000096EE                 db  28h ; (
.eh_frame:00000000000096EF                 db  8Ch
.eh_frame:00000000000096F0                 db    5
.eh_frame:00000000000096F1                 db  44h ; D
.eh_frame:00000000000096F2                 db  0Eh
.eh_frame:00000000000096F3                 db  30h ; 0
.eh_frame:00000000000096F4                 db  86h
.eh_frame:00000000000096F5                 db    6
.eh_frame:00000000000096F6                 db  41h ; A
.eh_frame:00000000000096F7                 db  0Eh
.eh_frame:00000000000096F8                 db  38h ; 8
.eh_frame:00000000000096F9                 db  83h
.eh_frame:00000000000096FA                 db    7
.eh_frame:00000000000096FB                 db  4Dh ; M
.eh_frame:00000000000096FC                 db  0Eh
.eh_frame:00000000000096FD                 db  70h ; p
.eh_frame:00000000000096FE                 db  65h ; e
.eh_frame:00000000000096FF                 db  0Eh
.eh_frame:0000000000009700                 db  78h ; x
.eh_frame:0000000000009701                 db  4Dh ; M
.eh_frame:0000000000009702                 db  0Eh
.eh_frame:0000000000009703                 db  80h
.eh_frame:0000000000009704                 db    1
.eh_frame:0000000000009705                 db  46h ; F
.eh_frame:0000000000009706                 db  0Eh
.eh_frame:0000000000009707                 db  88h
.eh_frame:0000000000009708                 db    1
.eh_frame:0000000000009709                 db  42h ; B
.eh_frame:000000000000970A                 db  0Eh
.eh_frame:000000000000970B                 db  90h
.eh_frame:000000000000970C                 db    1
.eh_frame:000000000000970D                 db  5Eh ; ^
.eh_frame:000000000000970E                 db  0Eh
.eh_frame:000000000000970F                 db  70h ; p
.eh_frame:0000000000009710                 db  56h ; V
.eh_frame:0000000000009711                 db  0Eh
.eh_frame:0000000000009712                 db  78h ; x
.eh_frame:0000000000009713                 db  43h ; C
.eh_frame:0000000000009714                 db  0Eh
.eh_frame:0000000000009715                 db  80h
.eh_frame:0000000000009716                 db    1
.eh_frame:0000000000009717                 db  43h ; C
.eh_frame:0000000000009718                 db  0Eh
.eh_frame:0000000000009719                 db  88h
.eh_frame:000000000000971A                 db    1
.eh_frame:000000000000971B                 db  56h ; V
.eh_frame:000000000000971C                 db  0Eh
.eh_frame:000000000000971D                 db  90h
.eh_frame:000000000000971E                 db    1
.eh_frame:000000000000971F                 db  52h ; R
.eh_frame:0000000000009720                 db  0Eh
.eh_frame:0000000000009721                 db  70h ; p
.eh_frame:0000000000009722                 db  5Bh ; [
.eh_frame:0000000000009723                 db  0Eh
.eh_frame:0000000000009724                 db  38h ; 8
.eh_frame:0000000000009725                 db  41h ; A
.eh_frame:0000000000009726                 db  0Eh
.eh_frame:0000000000009727                 db  30h ; 0
.eh_frame:0000000000009728                 db  41h ; A
.eh_frame:0000000000009729                 db  0Eh
.eh_frame:000000000000972A                 db  28h ; (
.eh_frame:000000000000972B                 db  42h ; B
.eh_frame:000000000000972C                 db  0Eh
.eh_frame:000000000000972D                 db  20h
.eh_frame:000000000000972E                 db  42h ; B
.eh_frame:000000000000972F                 db  0Eh
.eh_frame:0000000000009730                 db  18h
.eh_frame:0000000000009731                 db  42h ; B
.eh_frame:0000000000009732                 db  0Eh
.eh_frame:0000000000009733                 db  10h
.eh_frame:0000000000009734                 db  42h ; B
.eh_frame:0000000000009735                 db  0Eh
.eh_frame:0000000000009736                 db    8
.eh_frame:0000000000009737                 db    0
.eh_frame:0000000000009738                 db  10h
.eh_frame:0000000000009739                 db    0
.eh_frame:000000000000973A                 db    0
.eh_frame:000000000000973B                 db    0
.eh_frame:000000000000973C                 db 0FCh
.eh_frame:000000000000973D                 db    6
.eh_frame:000000000000973E                 db    0
.eh_frame:000000000000973F                 db    0
.eh_frame:0000000000009740                 db 0F0h
.eh_frame:0000000000009741                 db 0C2h
.eh_frame:0000000000009742                 db 0FFh
.eh_frame:0000000000009743                 db 0FFh
.eh_frame:0000000000009744                 db  0Ah
.eh_frame:0000000000009745                 db    0
.eh_frame:0000000000009746                 db    0
.eh_frame:0000000000009747                 db    0
.eh_frame:0000000000009748                 db    0
.eh_frame:0000000000009749                 db    0
.eh_frame:000000000000974A                 db    0
.eh_frame:000000000000974B                 db    0
.eh_frame:000000000000974C                 db  28h ; (
.eh_frame:000000000000974D                 db    0
.eh_frame:000000000000974E                 db    0
.eh_frame:000000000000974F                 db    0
.eh_frame:0000000000009750                 db  10h
.eh_frame:0000000000009751                 db    7
.eh_frame:0000000000009752                 db    0
.eh_frame:0000000000009753                 db    0
.eh_frame:0000000000009754                 db 0ECh
.eh_frame:0000000000009755                 db 0C2h
.eh_frame:0000000000009756                 db 0FFh
.eh_frame:0000000000009757                 db 0FFh
.eh_frame:0000000000009758                 db  93h
.eh_frame:0000000000009759                 db    0
.eh_frame:000000000000975A                 db    0
.eh_frame:000000000000975B                 db    0
.eh_frame:000000000000975C                 db    0
.eh_frame:000000000000975D                 db  48h ; H
.eh_frame:000000000000975E                 db  0Eh
.eh_frame:000000000000975F                 db  10h
.eh_frame:0000000000009760                 db  8Ch
.eh_frame:0000000000009761                 db    2
.eh_frame:0000000000009762                 db  48h ; H
.eh_frame:0000000000009763                 db  0Eh
.eh_frame:0000000000009764                 db  18h
.eh_frame:0000000000009765                 db  86h
.eh_frame:0000000000009766                 db    3
.eh_frame:0000000000009767                 db  41h ; A
.eh_frame:0000000000009768                 db  0Eh
.eh_frame:0000000000009769                 db  20h
.eh_frame:000000000000976A                 db  83h
.eh_frame:000000000000976B                 db    4
.eh_frame:000000000000976C                 db    2
.eh_frame:000000000000976D                 db  74h ; t
.eh_frame:000000000000976E                 db  0Eh
.eh_frame:000000000000976F                 db  18h
.eh_frame:0000000000009770                 db  4Bh ; K
.eh_frame:0000000000009771                 db  0Eh
.eh_frame:0000000000009772                 db  10h
.eh_frame:0000000000009773                 db  42h ; B
.eh_frame:0000000000009774                 db  0Eh
.eh_frame:0000000000009775                 db    8
.eh_frame:0000000000009776                 db    0
.eh_frame:0000000000009777                 db    0
.eh_frame:0000000000009778                 db  10h
.eh_frame:0000000000009779                 db    0
.eh_frame:000000000000977A                 db    0
.eh_frame:000000000000977B                 db    0
.eh_frame:000000000000977C                 db  3Ch ; <
.eh_frame:000000000000977D                 db    7
.eh_frame:000000000000977E                 db    0
.eh_frame:000000000000977F                 db    0
.eh_frame:0000000000009780                 db  60h ; `
.eh_frame:0000000000009781                 db 0C3h
.eh_frame:0000000000009782                 db 0FFh
.eh_frame:0000000000009783                 db 0FFh
.eh_frame:0000000000009784                 db  13h
.eh_frame:0000000000009785                 db    0
.eh_frame:0000000000009786                 db    0
.eh_frame:0000000000009787                 db    0
.eh_frame:0000000000009788                 db    0
.eh_frame:0000000000009789                 db    0
.eh_frame:000000000000978A                 db    0
.eh_frame:000000000000978B                 db    0
.eh_frame:000000000000978C                 db  10h
.eh_frame:000000000000978D                 db    0
.eh_frame:000000000000978E                 db    0
.eh_frame:000000000000978F                 db    0
.eh_frame:0000000000009790                 db  50h ; P
.eh_frame:0000000000009791                 db    7
.eh_frame:0000000000009792                 db    0
.eh_frame:0000000000009793                 db    0
.eh_frame:0000000000009794                 db  6Ch ; l
.eh_frame:0000000000009795                 db 0C3h
.eh_frame:0000000000009796                 db 0FFh
.eh_frame:0000000000009797                 db 0FFh
.eh_frame:0000000000009798                 db  0Ch
.eh_frame:0000000000009799                 db    0
.eh_frame:000000000000979A                 db    0
.eh_frame:000000000000979B                 db    0
.eh_frame:000000000000979C                 db    0
.eh_frame:000000000000979D                 db    0
.eh_frame:000000000000979E                 db    0
.eh_frame:000000000000979F                 db    0
.eh_frame:00000000000097A0                 db  10h
.eh_frame:00000000000097A1                 db    0
.eh_frame:00000000000097A2                 db    0
.eh_frame:00000000000097A3                 db    0
.eh_frame:00000000000097A4                 db  64h ; d
.eh_frame:00000000000097A5                 db    7
.eh_frame:00000000000097A6                 db    0
.eh_frame:00000000000097A7                 db    0
.eh_frame:00000000000097A8                 db  68h ; h
.eh_frame:00000000000097A9                 db 0C3h
.eh_frame:00000000000097AA                 db 0FFh
.eh_frame:00000000000097AB                 db 0FFh
.eh_frame:00000000000097AC                 db  18h
.eh_frame:00000000000097AD                 db    0
.eh_frame:00000000000097AE                 db    0
.eh_frame:00000000000097AF                 db    0
.eh_frame:00000000000097B0                 db    0
.eh_frame:00000000000097B1                 db    0
.eh_frame:00000000000097B2                 db    0
.eh_frame:00000000000097B3                 db    0
.eh_frame:00000000000097B4                 db  10h
.eh_frame:00000000000097B5                 db    0
.eh_frame:00000000000097B6                 db    0
.eh_frame:00000000000097B7                 db    0
.eh_frame:00000000000097B8                 db  78h ; x
.eh_frame:00000000000097B9                 db    7
.eh_frame:00000000000097BA                 db    0
.eh_frame:00000000000097BB                 db    0
.eh_frame:00000000000097BC                 db  74h ; t
.eh_frame:00000000000097BD                 db 0C3h
.eh_frame:00000000000097BE                 db 0FFh
.eh_frame:00000000000097BF                 db 0FFh
.eh_frame:00000000000097C0                 db  14h
.eh_frame:00000000000097C1                 db    0
.eh_frame:00000000000097C2                 db    0
.eh_frame:00000000000097C3                 db    0
.eh_frame:00000000000097C4                 db    0
.eh_frame:00000000000097C5                 db    0
.eh_frame:00000000000097C6                 db    0
.eh_frame:00000000000097C7                 db    0
.eh_frame:00000000000097C8                 db  18h
.eh_frame:00000000000097C9                 db    0
.eh_frame:00000000000097CA                 db    0
.eh_frame:00000000000097CB                 db    0
.eh_frame:00000000000097CC                 db  8Ch
.eh_frame:00000000000097CD                 db    7
.eh_frame:00000000000097CE                 db    0
.eh_frame:00000000000097CF                 db    0
.eh_frame:00000000000097D0                 db  80h
.eh_frame:00000000000097D1                 db 0C3h
.eh_frame:00000000000097D2                 db 0FFh
.eh_frame:00000000000097D3                 db 0FFh
.eh_frame:00000000000097D4                 db  8Eh
.eh_frame:00000000000097D5                 db    0
.eh_frame:00000000000097D6                 db    0
.eh_frame:00000000000097D7                 db    0
.eh_frame:00000000000097D8                 db    0
.eh_frame:00000000000097D9                 db  44h ; D
.eh_frame:00000000000097DA                 db  0Eh
.eh_frame:00000000000097DB                 db  50h ; P
.eh_frame:00000000000097DC                 db    2
.eh_frame:00000000000097DD                 db  7Fh ; 
.eh_frame:00000000000097DE                 db  0Ah
.eh_frame:00000000000097DF                 db  0Eh
.eh_frame:00000000000097E0                 db    8
.eh_frame:00000000000097E1                 db  41h ; A
.eh_frame:00000000000097E2                 db  0Bh
.eh_frame:00000000000097E3                 db    0
.eh_frame:00000000000097E4                 db  18h
.eh_frame:00000000000097E5                 db    0
.eh_frame:00000000000097E6                 db    0
.eh_frame:00000000000097E7                 db    0
.eh_frame:00000000000097E8                 db 0A8h
.eh_frame:00000000000097E9                 db    7
.eh_frame:00000000000097EA                 db    0
.eh_frame:00000000000097EB                 db    0
.eh_frame:00000000000097EC                 db 0F4h
.eh_frame:00000000000097ED                 db 0C3h
.eh_frame:00000000000097EE                 db 0FFh
.eh_frame:00000000000097EF                 db 0FFh
.eh_frame:00000000000097F0                 db  8Ah
.eh_frame:00000000000097F1                 db    0
.eh_frame:00000000000097F2                 db    0
.eh_frame:00000000000097F3                 db    0
.eh_frame:00000000000097F4                 db    0
.eh_frame:00000000000097F5                 db  44h ; D
.eh_frame:00000000000097F6                 db  0Eh
.eh_frame:00000000000097F7                 db  50h ; P
.eh_frame:00000000000097F8                 db    2
.eh_frame:00000000000097F9                 db  7Bh ; {
.eh_frame:00000000000097FA                 db  0Ah
.eh_frame:00000000000097FB                 db  0Eh
.eh_frame:00000000000097FC                 db    8
.eh_frame:00000000000097FD                 db  41h ; A
.eh_frame:00000000000097FE                 db  0Bh
.eh_frame:00000000000097FF                 db    0
.eh_frame:0000000000009800                 db  10h
.eh_frame:0000000000009801                 db    0
.eh_frame:0000000000009802                 db    0
.eh_frame:0000000000009803                 db    0
.eh_frame:0000000000009804                 db 0C4h
.eh_frame:0000000000009805                 db    7
.eh_frame:0000000000009806                 db    0
.eh_frame:0000000000009807                 db    0
.eh_frame:0000000000009808                 db  68h ; h
.eh_frame:0000000000009809                 db 0C4h
.eh_frame:000000000000980A                 db 0FFh
.eh_frame:000000000000980B                 db 0FFh
.eh_frame:000000000000980C                 db  0Ch
.eh_frame:000000000000980D                 db    0
.eh_frame:000000000000980E                 db    0
.eh_frame:000000000000980F                 db    0
.eh_frame:0000000000009810                 db    0
.eh_frame:0000000000009811                 db    0
.eh_frame:0000000000009812                 db    0
.eh_frame:0000000000009813                 db    0
.eh_frame:0000000000009814                 db  10h
.eh_frame:0000000000009815                 db    0
.eh_frame:0000000000009816                 db    0
.eh_frame:0000000000009817                 db    0
.eh_frame:0000000000009818                 db 0D8h
.eh_frame:0000000000009819                 db    7
.eh_frame:000000000000981A                 db    0
.eh_frame:000000000000981B                 db    0
.eh_frame:000000000000981C                 db  64h ; d
.eh_frame:000000000000981D                 db 0C4h
.eh_frame:000000000000981E                 db 0FFh
.eh_frame:000000000000981F                 db 0FFh
.eh_frame:0000000000009820                 db  0Fh
.eh_frame:0000000000009821                 db    0
.eh_frame:0000000000009822                 db    0
.eh_frame:0000000000009823                 db    0
.eh_frame:0000000000009824                 db    0
.eh_frame:0000000000009825                 db    0
.eh_frame:0000000000009826                 db    0
.eh_frame:0000000000009827                 db    0
.eh_frame:0000000000009828                 db  18h
.eh_frame:0000000000009829                 db    0
.eh_frame:000000000000982A                 db    0
.eh_frame:000000000000982B                 db    0
.eh_frame:000000000000982C                 db 0ECh
.eh_frame:000000000000982D                 db    7
.eh_frame:000000000000982E                 db    0
.eh_frame:000000000000982F                 db    0
.eh_frame:0000000000009830                 db  60h ; `
.eh_frame:0000000000009831                 db 0C4h
.eh_frame:0000000000009832                 db 0FFh
.eh_frame:0000000000009833                 db 0FFh
.eh_frame:0000000000009834                 db  98h
.eh_frame:0000000000009835                 db    0
.eh_frame:0000000000009836                 db    0
.eh_frame:0000000000009837                 db    0
.eh_frame:0000000000009838                 db    0
.eh_frame:0000000000009839                 db  44h ; D
.eh_frame:000000000000983A                 db  0Eh
.eh_frame:000000000000983B                 db  50h ; P
.eh_frame:000000000000983C                 db    2
.eh_frame:000000000000983D                 db  8Eh
.eh_frame:000000000000983E                 db  0Ah
.eh_frame:000000000000983F                 db  0Eh
.eh_frame:0000000000009840                 db    8
.eh_frame:0000000000009841                 db  41h ; A
.eh_frame:0000000000009842                 db  0Bh
.eh_frame:0000000000009843                 db    0
.eh_frame:0000000000009844                 db  10h
.eh_frame:0000000000009845                 db    0
.eh_frame:0000000000009846                 db    0
.eh_frame:0000000000009847                 db    0
.eh_frame:0000000000009848                 db    8
.eh_frame:0000000000009849                 db    8
.eh_frame:000000000000984A                 db    0
.eh_frame:000000000000984B                 db    0
.eh_frame:000000000000984C                 db 0E4h
.eh_frame:000000000000984D                 db 0C4h
.eh_frame:000000000000984E                 db 0FFh
.eh_frame:000000000000984F                 db 0FFh
.eh_frame:0000000000009850                 db  10h
.eh_frame:0000000000009851                 db    0
.eh_frame:0000000000009852                 db    0
.eh_frame:0000000000009853                 db    0
.eh_frame:0000000000009854                 db    0
.eh_frame:0000000000009855                 db    0
.eh_frame:0000000000009856                 db    0
.eh_frame:0000000000009857                 db    0
.eh_frame:0000000000009858                 db  10h
.eh_frame:0000000000009859                 db    0
.eh_frame:000000000000985A                 db    0
.eh_frame:000000000000985B                 db    0
.eh_frame:000000000000985C                 db  1Ch
.eh_frame:000000000000985D                 db    8
.eh_frame:000000000000985E                 db    0
.eh_frame:000000000000985F                 db    0
.eh_frame:0000000000009860                 db 0E0h
.eh_frame:0000000000009861                 db 0C4h
.eh_frame:0000000000009862                 db 0FFh
.eh_frame:0000000000009863                 db 0FFh
.eh_frame:0000000000009864                 db  11h
.eh_frame:0000000000009865                 db    0
.eh_frame:0000000000009866                 db    0
.eh_frame:0000000000009867                 db    0
.eh_frame:0000000000009868                 db    0
.eh_frame:0000000000009869                 db    0
.eh_frame:000000000000986A                 db    0
.eh_frame:000000000000986B                 db    0
.eh_frame:000000000000986C                 db  10h
.eh_frame:000000000000986D                 db    0
.eh_frame:000000000000986E                 db    0
.eh_frame:000000000000986F                 db    0
.eh_frame:0000000000009870                 db  30h ; 0
.eh_frame:0000000000009871                 db    8
.eh_frame:0000000000009872                 db    0
.eh_frame:0000000000009873                 db    0
.eh_frame:0000000000009874                 db 0ECh
.eh_frame:0000000000009875                 db 0C4h
.eh_frame:0000000000009876                 db 0FFh
.eh_frame:0000000000009877                 db 0FFh
.eh_frame:0000000000009878                 db  0Ah
.eh_frame:0000000000009879                 db    0
.eh_frame:000000000000987A                 db    0
.eh_frame:000000000000987B                 db    0
.eh_frame:000000000000987C                 db    0
.eh_frame:000000000000987D                 db    0
.eh_frame:000000000000987E                 db    0
.eh_frame:000000000000987F                 db    0
.eh_frame:0000000000009880                 db  18h
.eh_frame:0000000000009881                 db    0
.eh_frame:0000000000009882                 db    0
.eh_frame:0000000000009883                 db    0
.eh_frame:0000000000009884                 db  44h ; D
.eh_frame:0000000000009885                 db    8
.eh_frame:0000000000009886                 db    0
.eh_frame:0000000000009887                 db    0
.eh_frame:0000000000009888                 db 0E8h
.eh_frame:0000000000009889                 db 0C4h
.eh_frame:000000000000988A                 db 0FFh
.eh_frame:000000000000988B                 db 0FFh
.eh_frame:000000000000988C                 db  8Eh
.eh_frame:000000000000988D                 db    0
.eh_frame:000000000000988E                 db    0
.eh_frame:000000000000988F                 db    0
.eh_frame:0000000000009890                 db    0
.eh_frame:0000000000009891                 db  44h ; D
.eh_frame:0000000000009892                 db  0Eh
.eh_frame:0000000000009893                 db  50h ; P
.eh_frame:0000000000009894                 db    2
.eh_frame:0000000000009895                 db  7Fh ; 
.eh_frame:0000000000009896                 db  0Ah
.eh_frame:0000000000009897                 db  0Eh
.eh_frame:0000000000009898                 db    8
.eh_frame:0000000000009899                 db  41h ; A
.eh_frame:000000000000989A                 db  0Bh
.eh_frame:000000000000989B                 db    0
.eh_frame:000000000000989C                 db  18h
.eh_frame:000000000000989D                 db    0
.eh_frame:000000000000989E                 db    0
.eh_frame:000000000000989F                 db    0
.eh_frame:00000000000098A0                 db  60h ; `
.eh_frame:00000000000098A1                 db    8
.eh_frame:00000000000098A2                 db    0
.eh_frame:00000000000098A3                 db    0
.eh_frame:00000000000098A4                 db  5Ch ; \
.eh_frame:00000000000098A5                 db 0C5h
.eh_frame:00000000000098A6                 db 0FFh
.eh_frame:00000000000098A7                 db 0FFh
.eh_frame:00000000000098A8                 db  91h
.eh_frame:00000000000098A9                 db    0
.eh_frame:00000000000098AA                 db    0
.eh_frame:00000000000098AB                 db    0
.eh_frame:00000000000098AC                 db    0
.eh_frame:00000000000098AD                 db  44h ; D
.eh_frame:00000000000098AE                 db  0Eh
.eh_frame:00000000000098AF                 db  50h ; P
.eh_frame:00000000000098B0                 db    2
.eh_frame:00000000000098B1                 db  82h
.eh_frame:00000000000098B2                 db  0Ah
.eh_frame:00000000000098B3                 db  0Eh
.eh_frame:00000000000098B4                 db    8
.eh_frame:00000000000098B5                 db  41h ; A
.eh_frame:00000000000098B6                 db  0Bh
.eh_frame:00000000000098B7                 db    0
.eh_frame:00000000000098B8                 db  10h
.eh_frame:00000000000098B9                 db    0
.eh_frame:00000000000098BA                 db    0
.eh_frame:00000000000098BB                 db    0
.eh_frame:00000000000098BC                 db  7Ch ; |
.eh_frame:00000000000098BD                 db    8
.eh_frame:00000000000098BE                 db    0
.eh_frame:00000000000098BF                 db    0
.eh_frame:00000000000098C0                 db 0E0h
.eh_frame:00000000000098C1                 db 0C5h
.eh_frame:00000000000098C2                 db 0FFh
.eh_frame:00000000000098C3                 db 0FFh
.eh_frame:00000000000098C4                 db  0Ch
.eh_frame:00000000000098C5                 db    0
.eh_frame:00000000000098C6                 db    0
.eh_frame:00000000000098C7                 db    0
.eh_frame:00000000000098C8                 db    0
.eh_frame:00000000000098C9                 db    0
.eh_frame:00000000000098CA                 db    0
.eh_frame:00000000000098CB                 db    0
.eh_frame:00000000000098CC                 db  10h
.eh_frame:00000000000098CD                 db    0
.eh_frame:00000000000098CE                 db    0
.eh_frame:00000000000098CF                 db    0
.eh_frame:00000000000098D0                 db  90h
.eh_frame:00000000000098D1                 db    8
.eh_frame:00000000000098D2                 db    0
.eh_frame:00000000000098D3                 db    0
.eh_frame:00000000000098D4                 db 0DCh
.eh_frame:00000000000098D5                 db 0C5h
.eh_frame:00000000000098D6                 db 0FFh
.eh_frame:00000000000098D7                 db 0FFh
.eh_frame:00000000000098D8                 db  17h
.eh_frame:00000000000098D9                 db    0
.eh_frame:00000000000098DA                 db    0
.eh_frame:00000000000098DB                 db    0
.eh_frame:00000000000098DC                 db    0
.eh_frame:00000000000098DD                 db    0
.eh_frame:00000000000098DE                 db    0
.eh_frame:00000000000098DF                 db    0
.eh_frame:00000000000098E0                 db  10h
.eh_frame:00000000000098E1                 db    0
.eh_frame:00000000000098E2                 db    0
.eh_frame:00000000000098E3                 db    0
.eh_frame:00000000000098E4                 db 0A4h
.eh_frame:00000000000098E5                 db    8
.eh_frame:00000000000098E6                 db    0
.eh_frame:00000000000098E7                 db    0
.eh_frame:00000000000098E8                 db 0E8h
.eh_frame:00000000000098E9                 db 0C5h
.eh_frame:00000000000098EA                 db 0FFh
.eh_frame:00000000000098EB                 db 0FFh
.eh_frame:00000000000098EC                 db  13h
.eh_frame:00000000000098ED                 db    0
.eh_frame:00000000000098EE                 db    0
.eh_frame:00000000000098EF                 db    0
.eh_frame:00000000000098F0                 db    0
.eh_frame:00000000000098F1                 db    0
.eh_frame:00000000000098F2                 db    0
.eh_frame:00000000000098F3                 db    0
.eh_frame:00000000000098F4                 db  10h
.eh_frame:00000000000098F5                 db    0
.eh_frame:00000000000098F6                 db    0
.eh_frame:00000000000098F7                 db    0
.eh_frame:00000000000098F8                 db 0B8h
.eh_frame:00000000000098F9                 db    8
.eh_frame:00000000000098FA                 db    0
.eh_frame:00000000000098FB                 db    0
.eh_frame:00000000000098FC                 db 0F4h
.eh_frame:00000000000098FD                 db 0C5h
.eh_frame:00000000000098FE                 db 0FFh
.eh_frame:00000000000098FF                 db 0FFh
.eh_frame:0000000000009900                 db  0Ch
.eh_frame:0000000000009901                 db    0
.eh_frame:0000000000009902                 db    0
.eh_frame:0000000000009903                 db    0
.eh_frame:0000000000009904                 db    0
.eh_frame:0000000000009905                 db    0
.eh_frame:0000000000009906                 db    0
.eh_frame:0000000000009907                 db    0
.eh_frame:0000000000009908                 db  10h
.eh_frame:0000000000009909                 db    0
.eh_frame:000000000000990A                 db    0
.eh_frame:000000000000990B                 db    0
.eh_frame:000000000000990C                 db 0CCh
.eh_frame:000000000000990D                 db    8
.eh_frame:000000000000990E                 db    0
.eh_frame:000000000000990F                 db    0
.eh_frame:0000000000009910                 db 0F0h
.eh_frame:0000000000009911                 db 0C5h
.eh_frame:0000000000009912                 db 0FFh
.eh_frame:0000000000009913                 db 0FFh
.eh_frame:0000000000009914                 db  14h
.eh_frame:0000000000009915                 db    0
.eh_frame:0000000000009916                 db    0
.eh_frame:0000000000009917                 db    0
.eh_frame:0000000000009918                 db    0
.eh_frame:0000000000009919                 db    0
.eh_frame:000000000000991A                 db    0
.eh_frame:000000000000991B                 db    0
.eh_frame:000000000000991C                 db  10h
.eh_frame:000000000000991D                 db    0
.eh_frame:000000000000991E                 db    0
.eh_frame:000000000000991F                 db    0
.eh_frame:0000000000009920                 db 0E0h
.eh_frame:0000000000009921                 db    8
.eh_frame:0000000000009922                 db    0
.eh_frame:0000000000009923                 db    0
.eh_frame:0000000000009924                 db 0FCh
.eh_frame:0000000000009925                 db 0C5h
.eh_frame:0000000000009926                 db 0FFh
.eh_frame:0000000000009927                 db 0FFh
.eh_frame:0000000000009928                 db  13h
.eh_frame:0000000000009929                 db    0
.eh_frame:000000000000992A                 db    0
.eh_frame:000000000000992B                 db    0
.eh_frame:000000000000992C                 db    0
.eh_frame:000000000000992D                 db    0
.eh_frame:000000000000992E                 db    0
.eh_frame:000000000000992F                 db    0
.eh_frame:0000000000009930                 db  14h
.eh_frame:0000000000009931                 db    0
.eh_frame:0000000000009932                 db    0
.eh_frame:0000000000009933                 db    0
.eh_frame:0000000000009934                 db 0F4h
.eh_frame:0000000000009935                 db    8
.eh_frame:0000000000009936                 db    0
.eh_frame:0000000000009937                 db    0
.eh_frame:0000000000009938                 db    8
.eh_frame:0000000000009939                 db 0C6h
.eh_frame:000000000000993A                 db 0FFh
.eh_frame:000000000000993B                 db 0FFh
.eh_frame:000000000000993C                 db  18h
.eh_frame:000000000000993D                 db    0
.eh_frame:000000000000993E                 db    0
.eh_frame:000000000000993F                 db    0
.eh_frame:0000000000009940                 db    0
.eh_frame:0000000000009941                 db    0
.eh_frame:0000000000009942                 db    0
.eh_frame:0000000000009943                 db    0
.eh_frame:0000000000009944                 db    0
.eh_frame:0000000000009945                 db    0
.eh_frame:0000000000009946                 db    0
.eh_frame:0000000000009947                 db    0
.eh_frame:0000000000009948                 db  34h ; 4
.eh_frame:0000000000009949                 db    0
.eh_frame:000000000000994A                 db    0
.eh_frame:000000000000994B                 db    0
.eh_frame:000000000000994C                 db  0Ch
.eh_frame:000000000000994D                 db    9
.eh_frame:000000000000994E                 db    0
.eh_frame:000000000000994F                 db    0
.eh_frame:0000000000009950                 db  10h
.eh_frame:0000000000009951                 db 0C6h
.eh_frame:0000000000009952                 db 0FFh
.eh_frame:0000000000009953                 db 0FFh
.eh_frame:0000000000009954                 db  5Eh ; ^
.eh_frame:0000000000009955                 db    0
.eh_frame:0000000000009956                 db    0
.eh_frame:0000000000009957                 db    0
.eh_frame:0000000000009958                 db    0
.eh_frame:0000000000009959                 db  42h ; B
.eh_frame:000000000000995A                 db  0Eh
.eh_frame:000000000000995B                 db  10h
.eh_frame:000000000000995C                 db  8Dh
.eh_frame:000000000000995D                 db    2
.eh_frame:000000000000995E                 db  42h ; B
.eh_frame:000000000000995F                 db  0Eh
.eh_frame:0000000000009960                 db  18h
.eh_frame:0000000000009961                 db  8Ch
.eh_frame:0000000000009962                 db    3
.eh_frame:0000000000009963                 db  44h ; D
.eh_frame:0000000000009964                 db  0Eh
.eh_frame:0000000000009965                 db  20h
.eh_frame:0000000000009966                 db  86h
.eh_frame:0000000000009967                 db    4
.eh_frame:0000000000009968                 db  41h ; A
.eh_frame:0000000000009969                 db  0Eh
.eh_frame:000000000000996A                 db  28h ; (
.eh_frame:000000000000996B                 db  83h
.eh_frame:000000000000996C                 db    5
.eh_frame:000000000000996D                 db  4Ah ; J
.eh_frame:000000000000996E                 db  0Eh
.eh_frame:000000000000996F                 db  30h ; 0
.eh_frame:0000000000009970                 db    2
.eh_frame:0000000000009971                 db  41h ; A
.eh_frame:0000000000009972                 db  0Eh
.eh_frame:0000000000009973                 db  28h ; (
.eh_frame:0000000000009974                 db  44h ; D
.eh_frame:0000000000009975                 db  0Eh
.eh_frame:0000000000009976                 db  20h
.eh_frame:0000000000009977                 db  41h ; A
.eh_frame:0000000000009978                 db  0Eh
.eh_frame:0000000000009979                 db  18h
.eh_frame:000000000000997A                 db  42h ; B
.eh_frame:000000000000997B                 db  0Eh
.eh_frame:000000000000997C                 db  10h
.eh_frame:000000000000997D                 db  42h ; B
.eh_frame:000000000000997E                 db  0Eh
.eh_frame:000000000000997F                 db    8
.eh_frame:0000000000009980                 db  10h
.eh_frame:0000000000009981                 db    1
.eh_frame:0000000000009982                 db    0
.eh_frame:0000000000009983                 db    0
.eh_frame:0000000000009984                 db  44h ; D
.eh_frame:0000000000009985                 db    9
.eh_frame:0000000000009986                 db    0
.eh_frame:0000000000009987                 db    0
.eh_frame:0000000000009988                 db  38h ; 8
.eh_frame:0000000000009989                 db 0C6h
.eh_frame:000000000000998A                 db 0FFh
.eh_frame:000000000000998B                 db 0FFh
.eh_frame:000000000000998C                 db  17h
.eh_frame:000000000000998D                 db    4
.eh_frame:000000000000998E                 db    0
.eh_frame:000000000000998F                 db    0
.eh_frame:0000000000009990                 db    0
.eh_frame:0000000000009991                 db  42h ; B
.eh_frame:0000000000009992                 db  0Eh
.eh_frame:0000000000009993                 db  10h
.eh_frame:0000000000009994                 db  8Fh
.eh_frame:0000000000009995                 db    2
.eh_frame:0000000000009996                 db  42h ; B
.eh_frame:0000000000009997                 db  0Eh
.eh_frame:0000000000009998                 db  18h
.eh_frame:0000000000009999                 db  8Eh
.eh_frame:000000000000999A                 db    3
.eh_frame:000000000000999B                 db  42h ; B
.eh_frame:000000000000999C                 db  0Eh
.eh_frame:000000000000999D                 db  20h
.eh_frame:000000000000999E                 db  8Dh
.eh_frame:000000000000999F                 db    4
.eh_frame:00000000000099A0                 db  42h ; B
.eh_frame:00000000000099A1                 db  0Eh
.eh_frame:00000000000099A2                 db  28h ; (
.eh_frame:00000000000099A3                 db  8Ch
.eh_frame:00000000000099A4                 db    5
.eh_frame:00000000000099A5                 db  44h ; D
.eh_frame:00000000000099A6                 db  0Eh
.eh_frame:00000000000099A7                 db  30h ; 0
.eh_frame:00000000000099A8                 db  86h
.eh_frame:00000000000099A9                 db    6
.eh_frame:00000000000099AA                 db  41h ; A
.eh_frame:00000000000099AB                 db  0Eh
.eh_frame:00000000000099AC                 db  38h ; 8
.eh_frame:00000000000099AD                 db  83h
.eh_frame:00000000000099AE                 db    7
.eh_frame:00000000000099AF                 db  4Ah ; J
.eh_frame:00000000000099B0                 db  0Eh
.eh_frame:00000000000099B1                 db  60h ; `
.eh_frame:00000000000099B2                 db    2
.eh_frame:00000000000099B3                 db 0DDh
.eh_frame:00000000000099B4                 db  0Eh
.eh_frame:00000000000099B5                 db  68h ; h
.eh_frame:00000000000099B6                 db  57h ; W
.eh_frame:00000000000099B7                 db  0Eh
.eh_frame:00000000000099B8                 db  70h ; p
.eh_frame:00000000000099B9                 db  42h ; B
.eh_frame:00000000000099BA                 db  0Eh
.eh_frame:00000000000099BB                 db  78h ; x
.eh_frame:00000000000099BC                 db  42h ; B
.eh_frame:00000000000099BD                 db  0Eh
.eh_frame:00000000000099BE                 db  80h
.eh_frame:00000000000099BF                 db    1
.eh_frame:00000000000099C0                 db  42h ; B
.eh_frame:00000000000099C1                 db  0Eh
.eh_frame:00000000000099C2                 db  88h
.eh_frame:00000000000099C3                 db    1
.eh_frame:00000000000099C4                 db  42h ; B
.eh_frame:00000000000099C5                 db  0Eh
.eh_frame:00000000000099C6                 db  90h
.eh_frame:00000000000099C7                 db    1
.eh_frame:00000000000099C8                 db  53h ; S
.eh_frame:00000000000099C9                 db  0Eh
.eh_frame:00000000000099CA                 db  60h ; `
.eh_frame:00000000000099CB                 db  44h ; D
.eh_frame:00000000000099CC                 db  0Ah
.eh_frame:00000000000099CD                 db  0Eh
.eh_frame:00000000000099CE                 db  38h ; 8
.eh_frame:00000000000099CF                 db  41h ; A
.eh_frame:00000000000099D0                 db  0Eh
.eh_frame:00000000000099D1                 db  30h ; 0
.eh_frame:00000000000099D2                 db  41h ; A
.eh_frame:00000000000099D3                 db  0Eh
.eh_frame:00000000000099D4                 db  28h ; (
.eh_frame:00000000000099D5                 db  42h ; B
.eh_frame:00000000000099D6                 db  0Eh
.eh_frame:00000000000099D7                 db  20h
.eh_frame:00000000000099D8                 db  42h ; B
.eh_frame:00000000000099D9                 db  0Eh
.eh_frame:00000000000099DA                 db  18h
.eh_frame:00000000000099DB                 db  42h ; B
.eh_frame:00000000000099DC                 db  0Eh
.eh_frame:00000000000099DD                 db  10h
.eh_frame:00000000000099DE                 db  42h ; B
.eh_frame:00000000000099DF                 db  0Eh
.eh_frame:00000000000099E0                 db    8
.eh_frame:00000000000099E1                 db  44h ; D
.eh_frame:00000000000099E2                 db  0Bh
.eh_frame:00000000000099E3                 db    2
.eh_frame:00000000000099E4                 db  78h ; x
.eh_frame:00000000000099E5                 db  0Ah
.eh_frame:00000000000099E6                 db  0Eh
.eh_frame:00000000000099E7                 db  68h ; h
.eh_frame:00000000000099E8                 db  48h ; H
.eh_frame:00000000000099E9                 db  0Bh
.eh_frame:00000000000099EA                 db  5Ah ; Z
.eh_frame:00000000000099EB                 db  0Ah
.eh_frame:00000000000099EC                 db  0Eh
.eh_frame:00000000000099ED                 db  38h ; 8
.eh_frame:00000000000099EE                 db  47h ; G
.eh_frame:00000000000099EF                 db  0Eh
.eh_frame:00000000000099F0                 db  30h ; 0
.eh_frame:00000000000099F1                 db  41h ; A
.eh_frame:00000000000099F2                 db  0Eh
.eh_frame:00000000000099F3                 db  28h ; (
.eh_frame:00000000000099F4                 db  42h ; B
.eh_frame:00000000000099F5                 db  0Eh
.eh_frame:00000000000099F6                 db  20h
.eh_frame:00000000000099F7                 db  42h ; B
.eh_frame:00000000000099F8                 db  0Eh
.eh_frame:00000000000099F9                 db  18h
.eh_frame:00000000000099FA                 db  42h ; B
.eh_frame:00000000000099FB                 db  0Eh
.eh_frame:00000000000099FC                 db  10h
.eh_frame:00000000000099FD                 db  42h ; B
.eh_frame:00000000000099FE                 db  0Eh
.eh_frame:00000000000099FF                 db    8
.eh_frame:0000000000009A00                 db  56h ; V
.eh_frame:0000000000009A01                 db  0Bh
.eh_frame:0000000000009A02                 db  5Eh ; ^
.eh_frame:0000000000009A03                 db  0Ah
.eh_frame:0000000000009A04                 db  0Eh
.eh_frame:0000000000009A05                 db  38h ; 8
.eh_frame:0000000000009A06                 db  52h ; R
.eh_frame:0000000000009A07                 db  0Eh
.eh_frame:0000000000009A08                 db  30h ; 0
.eh_frame:0000000000009A09                 db  41h ; A
.eh_frame:0000000000009A0A                 db  0Eh
.eh_frame:0000000000009A0B                 db  28h ; (
.eh_frame:0000000000009A0C                 db  42h ; B
.eh_frame:0000000000009A0D                 db  0Eh
.eh_frame:0000000000009A0E                 db  20h
.eh_frame:0000000000009A0F                 db  42h ; B
.eh_frame:0000000000009A10                 db  0Eh
.eh_frame:0000000000009A11                 db  18h
.eh_frame:0000000000009A12                 db  42h ; B
.eh_frame:0000000000009A13                 db  0Eh
.eh_frame:0000000000009A14                 db  10h
.eh_frame:0000000000009A15                 db  42h ; B
.eh_frame:0000000000009A16                 db  0Eh
.eh_frame:0000000000009A17                 db    8
.eh_frame:0000000000009A18                 db  4Fh ; O
.eh_frame:0000000000009A19                 db  0Bh
.eh_frame:0000000000009A1A                 db  62h ; b
.eh_frame:0000000000009A1B                 db  0Ah
.eh_frame:0000000000009A1C                 db  0Eh
.eh_frame:0000000000009A1D                 db  38h ; 8
.eh_frame:0000000000009A1E                 db  50h ; P
.eh_frame:0000000000009A1F                 db  0Eh
.eh_frame:0000000000009A20                 db  30h ; 0
.eh_frame:0000000000009A21                 db  41h ; A
.eh_frame:0000000000009A22                 db  0Eh
.eh_frame:0000000000009A23                 db  28h ; (
.eh_frame:0000000000009A24                 db  42h ; B
.eh_frame:0000000000009A25                 db  0Eh
.eh_frame:0000000000009A26                 db  20h
.eh_frame:0000000000009A27                 db  42h ; B
.eh_frame:0000000000009A28                 db  0Eh
.eh_frame:0000000000009A29                 db  18h
.eh_frame:0000000000009A2A                 db  42h ; B
.eh_frame:0000000000009A2B                 db  0Eh
.eh_frame:0000000000009A2C                 db  10h
.eh_frame:0000000000009A2D                 db  42h ; B
.eh_frame:0000000000009A2E                 db  0Eh
.eh_frame:0000000000009A2F                 db    8
.eh_frame:0000000000009A30                 db  55h ; U
.eh_frame:0000000000009A31                 db  0Bh
.eh_frame:0000000000009A32                 db  66h ; f
.eh_frame:0000000000009A33                 db  0Eh
.eh_frame:0000000000009A34                 db  68h ; h
.eh_frame:0000000000009A35                 db  42h ; B
.eh_frame:0000000000009A36                 db  0Eh
.eh_frame:0000000000009A37                 db  70h ; p
.eh_frame:0000000000009A38                 db  5Ch ; \
.eh_frame:0000000000009A39                 db  0Eh
.eh_frame:0000000000009A3A                 db  68h ; h
.eh_frame:0000000000009A3B                 db  41h ; A
.eh_frame:0000000000009A3C                 db  0Eh
.eh_frame:0000000000009A3D                 db  60h ; `
.eh_frame:0000000000009A3E                 db  44h ; D
.eh_frame:0000000000009A3F                 db  0Ah
.eh_frame:0000000000009A40                 db  0Eh
.eh_frame:0000000000009A41                 db  38h ; 8
.eh_frame:0000000000009A42                 db  41h ; A
.eh_frame:0000000000009A43                 db  0Eh
.eh_frame:0000000000009A44                 db  30h ; 0
.eh_frame:0000000000009A45                 db  41h ; A
.eh_frame:0000000000009A46                 db  0Eh
.eh_frame:0000000000009A47                 db  28h ; (
.eh_frame:0000000000009A48                 db  42h ; B
.eh_frame:0000000000009A49                 db  0Eh
.eh_frame:0000000000009A4A                 db  20h
.eh_frame:0000000000009A4B                 db  42h ; B
.eh_frame:0000000000009A4C                 db  0Eh
.eh_frame:0000000000009A4D                 db  18h
.eh_frame:0000000000009A4E                 db  42h ; B
.eh_frame:0000000000009A4F                 db  0Eh
.eh_frame:0000000000009A50                 db  10h
.eh_frame:0000000000009A51                 db  42h ; B
.eh_frame:0000000000009A52                 db  0Eh
.eh_frame:0000000000009A53                 db    8
.eh_frame:0000000000009A54                 db  45h ; E
.eh_frame:0000000000009A55                 db  0Bh
.eh_frame:0000000000009A56                 db  68h ; h
.eh_frame:0000000000009A57                 db  0Ah
.eh_frame:0000000000009A58                 db  0Eh
.eh_frame:0000000000009A59                 db  68h ; h
.eh_frame:0000000000009A5A                 db  48h ; H
.eh_frame:0000000000009A5B                 db  0Bh
.eh_frame:0000000000009A5C                 db  72h ; r
.eh_frame:0000000000009A5D                 db  0Eh
.eh_frame:0000000000009A5E                 db  68h ; h
.eh_frame:0000000000009A5F                 db  45h ; E
.eh_frame:0000000000009A60                 db  0Eh
.eh_frame:0000000000009A61                 db  70h ; p
.eh_frame:0000000000009A62                 db  42h ; B
.eh_frame:0000000000009A63                 db  0Eh
.eh_frame:0000000000009A64                 db  78h ; x
.eh_frame:0000000000009A65                 db  42h ; B
.eh_frame:0000000000009A66                 db  0Eh
.eh_frame:0000000000009A67                 db  80h
.eh_frame:0000000000009A68                 db    1
.eh_frame:0000000000009A69                 db  5Eh ; ^
.eh_frame:0000000000009A6A                 db  0Eh
.eh_frame:0000000000009A6B                 db  60h ; `
.eh_frame:0000000000009A6C                 db  44h ; D
.eh_frame:0000000000009A6D                 db  0Ah
.eh_frame:0000000000009A6E                 db  0Eh
.eh_frame:0000000000009A6F                 db  38h ; 8
.eh_frame:0000000000009A70                 db  41h ; A
.eh_frame:0000000000009A71                 db  0Eh
.eh_frame:0000000000009A72                 db  30h ; 0
.eh_frame:0000000000009A73                 db  41h ; A
.eh_frame:0000000000009A74                 db  0Eh
.eh_frame:0000000000009A75                 db  28h ; (
.eh_frame:0000000000009A76                 db  42h ; B
.eh_frame:0000000000009A77                 db  0Eh
.eh_frame:0000000000009A78                 db  20h
.eh_frame:0000000000009A79                 db  42h ; B
.eh_frame:0000000000009A7A                 db  0Eh
.eh_frame:0000000000009A7B                 db  18h
.eh_frame:0000000000009A7C                 db  42h ; B
.eh_frame:0000000000009A7D                 db  0Eh
.eh_frame:0000000000009A7E                 db  10h
.eh_frame:0000000000009A7F                 db  42h ; B
.eh_frame:0000000000009A80                 db  0Eh
.eh_frame:0000000000009A81                 db    8
.eh_frame:0000000000009A82                 db  41h ; A
.eh_frame:0000000000009A83                 db  0Bh
.eh_frame:0000000000009A84                 db  79h ; y
.eh_frame:0000000000009A85                 db  0Ah
.eh_frame:0000000000009A86                 db  0Eh
.eh_frame:0000000000009A87                 db  68h ; h
.eh_frame:0000000000009A88                 db  42h ; B
.eh_frame:0000000000009A89                 db  0Eh
.eh_frame:0000000000009A8A                 db  70h ; p
.eh_frame:0000000000009A8B                 db  42h ; B
.eh_frame:0000000000009A8C                 db  0Eh
.eh_frame:0000000000009A8D                 db  78h ; x
.eh_frame:0000000000009A8E                 db  42h ; B
.eh_frame:0000000000009A8F                 db  0Eh
.eh_frame:0000000000009A90                 db  80h
.eh_frame:0000000000009A91                 db    1
.eh_frame:0000000000009A92                 db  51h ; Q
.eh_frame:0000000000009A93                 db  0Bh
.eh_frame:0000000000009A94                 db  10h
.eh_frame:0000000000009A95                 db    0
.eh_frame:0000000000009A96                 db    0
.eh_frame:0000000000009A97                 db    0
.eh_frame:0000000000009A98                 db  58h ; X
.eh_frame:0000000000009A99                 db  0Ah
.eh_frame:0000000000009A9A                 db    0
.eh_frame:0000000000009A9B                 db    0
.eh_frame:0000000000009A9C                 db  44h ; D
.eh_frame:0000000000009A9D                 db 0C9h
.eh_frame:0000000000009A9E                 db 0FFh
.eh_frame:0000000000009A9F                 db 0FFh
.eh_frame:0000000000009AA0                 db  20h
.eh_frame:0000000000009AA1                 db    0
.eh_frame:0000000000009AA2                 db    0
.eh_frame:0000000000009AA3                 db    0
.eh_frame:0000000000009AA4                 db    0
.eh_frame:0000000000009AA5                 db    0
.eh_frame:0000000000009AA6                 db    0
.eh_frame:0000000000009AA7                 db    0
.eh_frame:0000000000009AA8                 db  18h
.eh_frame:0000000000009AA9                 db    0
.eh_frame:0000000000009AAA                 db    0
.eh_frame:0000000000009AAB                 db    0
.eh_frame:0000000000009AAC                 db  6Ch ; l
.eh_frame:0000000000009AAD                 db  0Ah
.eh_frame:0000000000009AAE                 db    0
.eh_frame:0000000000009AAF                 db    0
.eh_frame:0000000000009AB0                 db  50h ; P
.eh_frame:0000000000009AB1                 db 0C9h
.eh_frame:0000000000009AB2                 db 0FFh
.eh_frame:0000000000009AB3                 db 0FFh
.eh_frame:0000000000009AB4                 db  78h ; x
.eh_frame:0000000000009AB5                 db    0
.eh_frame:0000000000009AB6                 db    0
.eh_frame:0000000000009AB7                 db    0
.eh_frame:0000000000009AB8                 db    0
.eh_frame:0000000000009AB9                 db  44h ; D
.eh_frame:0000000000009ABA                 db  0Eh
.eh_frame:0000000000009ABB                 db  70h ; p
.eh_frame:0000000000009ABC                 db    2
.eh_frame:0000000000009ABD                 db  60h ; `
.eh_frame:0000000000009ABE                 db  0Ah
.eh_frame:0000000000009ABF                 db  0Eh
.eh_frame:0000000000009AC0                 db    8
.eh_frame:0000000000009AC1                 db  41h ; A
.eh_frame:0000000000009AC2                 db  0Bh
.eh_frame:0000000000009AC3                 db    0
.eh_frame:0000000000009AC4                 db  28h ; (
.eh_frame:0000000000009AC5                 db    0
.eh_frame:0000000000009AC6                 db    0
.eh_frame:0000000000009AC7                 db    0
.eh_frame:0000000000009AC8                 db  88h
.eh_frame:0000000000009AC9                 db  0Ah
.eh_frame:0000000000009ACA                 db    0
.eh_frame:0000000000009ACB                 db    0
.eh_frame:0000000000009ACC                 db 0B4h
.eh_frame:0000000000009ACD                 db 0C9h
.eh_frame:0000000000009ACE                 db 0FFh
.eh_frame:0000000000009ACF                 db 0FFh
.eh_frame:0000000000009AD0                 db 0D5h
.eh_frame:0000000000009AD1                 db    0
.eh_frame:0000000000009AD2                 db    0
.eh_frame:0000000000009AD3                 db    0
.eh_frame:0000000000009AD4                 db    0
.eh_frame:0000000000009AD5                 db  41h ; A
.eh_frame:0000000000009AD6                 db  0Eh
.eh_frame:0000000000009AD7                 db  10h
.eh_frame:0000000000009AD8                 db  86h
.eh_frame:0000000000009AD9                 db    2
.eh_frame:0000000000009ADA                 db  41h ; A
.eh_frame:0000000000009ADB                 db  0Eh
.eh_frame:0000000000009ADC                 db  18h
.eh_frame:0000000000009ADD                 db  83h
.eh_frame:0000000000009ADE                 db    3
.eh_frame:0000000000009ADF                 db  50h ; P
.eh_frame:0000000000009AE0                 db  0Eh
.eh_frame:0000000000009AE1                 db 0D0h
.eh_frame:0000000000009AE2                 db    1
.eh_frame:0000000000009AE3                 db    2
.eh_frame:0000000000009AE4                 db 0ABh
.eh_frame:0000000000009AE5                 db  0Ah
.eh_frame:0000000000009AE6                 db  0Eh
.eh_frame:0000000000009AE7                 db  18h
.eh_frame:0000000000009AE8                 db  41h ; A
.eh_frame:0000000000009AE9                 db  0Eh
.eh_frame:0000000000009AEA                 db  10h
.eh_frame:0000000000009AEB                 db  41h ; A
.eh_frame:0000000000009AEC                 db  0Eh
.eh_frame:0000000000009AED                 db    8
.eh_frame:0000000000009AEE                 db  41h ; A
.eh_frame:0000000000009AEF                 db  0Bh
.eh_frame:0000000000009AF0                 db  1Ch
.eh_frame:0000000000009AF1                 db    0
.eh_frame:0000000000009AF2                 db    0
.eh_frame:0000000000009AF3                 db    0
.eh_frame:0000000000009AF4                 db 0B4h
.eh_frame:0000000000009AF5                 db  0Ah
.eh_frame:0000000000009AF6                 db    0
.eh_frame:0000000000009AF7                 db    0
.eh_frame:0000000000009AF8                 db  68h ; h
.eh_frame:0000000000009AF9                 db 0CAh
.eh_frame:0000000000009AFA                 db 0FFh
.eh_frame:0000000000009AFB                 db 0FFh
.eh_frame:0000000000009AFC                 db  80h
.eh_frame:0000000000009AFD                 db    0
.eh_frame:0000000000009AFE                 db    0
.eh_frame:0000000000009AFF                 db    0
.eh_frame:0000000000009B00                 db    0
.eh_frame:0000000000009B01                 db  41h ; A
.eh_frame:0000000000009B02                 db  0Eh
.eh_frame:0000000000009B03                 db  10h
.eh_frame:0000000000009B04                 db  83h
.eh_frame:0000000000009B05                 db    2
.eh_frame:0000000000009B06                 db    2
.eh_frame:0000000000009B07                 db  7Ah ; z
.eh_frame:0000000000009B08                 db  0Eh
.eh_frame:0000000000009B09                 db    8
.eh_frame:0000000000009B0A                 db    0
.eh_frame:0000000000009B0B                 db    0
.eh_frame:0000000000009B0C                 db    0
.eh_frame:0000000000009B0D                 db    0
.eh_frame:0000000000009B0E                 db    0
.eh_frame:0000000000009B0F                 db    0
.eh_frame:0000000000009B10                 db  18h
.eh_frame:0000000000009B11                 db    0
.eh_frame:0000000000009B12                 db    0
.eh_frame:0000000000009B13                 db    0
.eh_frame:0000000000009B14                 db 0D4h
.eh_frame:0000000000009B15                 db  0Ah
.eh_frame:0000000000009B16                 db    0
.eh_frame:0000000000009B17                 db    0
.eh_frame:0000000000009B18                 db 0C8h
.eh_frame:0000000000009B19                 db 0CAh
.eh_frame:0000000000009B1A                 db 0FFh
.eh_frame:0000000000009B1B                 db 0FFh
.eh_frame:0000000000009B1C                 db  1Ah
.eh_frame:0000000000009B1D                 db    0
.eh_frame:0000000000009B1E                 db    0
.eh_frame:0000000000009B1F                 db    0
.eh_frame:0000000000009B20                 db    0
.eh_frame:0000000000009B21                 db  41h ; A
.eh_frame:0000000000009B22                 db  0Eh
.eh_frame:0000000000009B23                 db  10h
.eh_frame:0000000000009B24                 db  83h
.eh_frame:0000000000009B25                 db    2
.eh_frame:0000000000009B26                 db  53h ; S
.eh_frame:0000000000009B27                 db  0Ah
.eh_frame:0000000000009B28                 db  0Eh
.eh_frame:0000000000009B29                 db    8
.eh_frame:0000000000009B2A                 db  41h ; A
.eh_frame:0000000000009B2B                 db  0Bh
.eh_frame:0000000000009B2C                 db  10h
.eh_frame:0000000000009B2D                 db    0
.eh_frame:0000000000009B2E                 db    0
.eh_frame:0000000000009B2F                 db    0
.eh_frame:0000000000009B30                 db 0F0h
.eh_frame:0000000000009B31                 db  0Ah
.eh_frame:0000000000009B32                 db    0
.eh_frame:0000000000009B33                 db    0
.eh_frame:0000000000009B34                 db 0CCh
.eh_frame:0000000000009B35                 db 0CAh
.eh_frame:0000000000009B36                 db 0FFh
.eh_frame:0000000000009B37                 db 0FFh
.eh_frame:0000000000009B38                 db  24h ; $
.eh_frame:0000000000009B39                 db    0
.eh_frame:0000000000009B3A                 db    0
.eh_frame:0000000000009B3B                 db    0
.eh_frame:0000000000009B3C                 db    0
.eh_frame:0000000000009B3D                 db  5Fh ; _
.eh_frame:0000000000009B3E                 db  0Eh
.eh_frame:0000000000009B3F                 db  10h
.eh_frame:0000000000009B40                 db  10h
.eh_frame:0000000000009B41                 db    0
.eh_frame:0000000000009B42                 db    0
.eh_frame:0000000000009B43                 db    0
.eh_frame:0000000000009B44                 db    4
.eh_frame:0000000000009B45                 db  0Bh
.eh_frame:0000000000009B46                 db    0
.eh_frame:0000000000009B47                 db    0
.eh_frame:0000000000009B48                 db 0E8h
.eh_frame:0000000000009B49                 db 0CAh
.eh_frame:0000000000009B4A                 db 0FFh
.eh_frame:0000000000009B4B                 db 0FFh
.eh_frame:0000000000009B4C                 db    2
.eh_frame:0000000000009B4D                 db    0
.eh_frame:0000000000009B4E                 db    0
.eh_frame:0000000000009B4F                 db    0
.eh_frame:0000000000009B50                 db    0
.eh_frame:0000000000009B51                 db    0
.eh_frame:0000000000009B52                 db    0
.eh_frame:0000000000009B53                 db    0
.eh_frame:0000000000009B54                 db  20h
.eh_frame:0000000000009B55                 db    0
.eh_frame:0000000000009B56                 db    0
.eh_frame:0000000000009B57                 db    0
.eh_frame:0000000000009B58                 db  18h
.eh_frame:0000000000009B59                 db  0Bh
.eh_frame:0000000000009B5A                 db    0
.eh_frame:0000000000009B5B                 db    0
.eh_frame:0000000000009B5C                 db 0E4h
.eh_frame:0000000000009B5D                 db 0CAh
.eh_frame:0000000000009B5E                 db 0FFh
.eh_frame:0000000000009B5F                 db 0FFh
.eh_frame:0000000000009B60                 db  36h ; 6
.eh_frame:0000000000009B61                 db    0
.eh_frame:0000000000009B62                 db    0
.eh_frame:0000000000009B63                 db    0
.eh_frame:0000000000009B64                 db    0
.eh_frame:0000000000009B65                 db  44h ; D
.eh_frame:0000000000009B66                 db  0Eh
.eh_frame:0000000000009B67                 db  10h
.eh_frame:0000000000009B68                 db  83h
.eh_frame:0000000000009B69                 db    2
.eh_frame:0000000000009B6A                 db  5Dh ; ]
.eh_frame:0000000000009B6B                 db  0Ah
.eh_frame:0000000000009B6C                 db  0Eh
.eh_frame:0000000000009B6D                 db    8
.eh_frame:0000000000009B6E                 db  47h ; G
.eh_frame:0000000000009B6F                 db  0Bh
.eh_frame:0000000000009B70                 db  48h ; H
.eh_frame:0000000000009B71                 db  0Ah
.eh_frame:0000000000009B72                 db  0Eh
.eh_frame:0000000000009B73                 db    8
.eh_frame:0000000000009B74                 db  41h ; A
.eh_frame:0000000000009B75                 db  0Bh
.eh_frame:0000000000009B76                 db    0
.eh_frame:0000000000009B77                 db    0
.eh_frame:0000000000009B78                 db  10h
.eh_frame:0000000000009B79                 db    0
.eh_frame:0000000000009B7A                 db    0
.eh_frame:0000000000009B7B                 db    0
.eh_frame:0000000000009B7C                 db  3Ch ; <
.eh_frame:0000000000009B7D                 db  0Bh
.eh_frame:0000000000009B7E                 db    0
.eh_frame:0000000000009B7F                 db    0
.eh_frame:0000000000009B80                 db    0
.eh_frame:0000000000009B81                 db 0CBh
.eh_frame:0000000000009B82                 db 0FFh
.eh_frame:0000000000009B83                 db 0FFh
.eh_frame:0000000000009B84                 db  24h ; $
.eh_frame:0000000000009B85                 db    0
.eh_frame:0000000000009B86                 db    0
.eh_frame:0000000000009B87                 db    0
.eh_frame:0000000000009B88                 db    0
.eh_frame:0000000000009B89                 db  5Fh ; _
.eh_frame:0000000000009B8A                 db  0Eh
.eh_frame:0000000000009B8B                 db  10h
.eh_frame:0000000000009B8C                 db  14h
.eh_frame:0000000000009B8D                 db    0
.eh_frame:0000000000009B8E                 db    0
.eh_frame:0000000000009B8F                 db    0
.eh_frame:0000000000009B90                 db  50h ; P
.eh_frame:0000000000009B91                 db  0Bh
.eh_frame:0000000000009B92                 db    0
.eh_frame:0000000000009B93                 db    0
.eh_frame:0000000000009B94                 db  1Ch
.eh_frame:0000000000009B95                 db 0CBh
.eh_frame:0000000000009B96                 db 0FFh
.eh_frame:0000000000009B97                 db 0FFh
.eh_frame:0000000000009B98                 db  82h
.eh_frame:0000000000009B99                 db    0
.eh_frame:0000000000009B9A                 db    0
.eh_frame:0000000000009B9B                 db    0
.eh_frame:0000000000009B9C                 db    0
.eh_frame:0000000000009B9D                 db    2
.eh_frame:0000000000009B9E                 db  5Fh ; _
.eh_frame:0000000000009B9F                 db  0Eh
.eh_frame:0000000000009BA0                 db  10h
.eh_frame:0000000000009BA1                 db  49h ; I
.eh_frame:0000000000009BA2                 db  0Eh
.eh_frame:0000000000009BA3                 db    8
.eh_frame:0000000000009BA4                 db  14h
.eh_frame:0000000000009BA5                 db    0
.eh_frame:0000000000009BA6                 db    0
.eh_frame:0000000000009BA7                 db    0
.eh_frame:0000000000009BA8                 db  68h ; h
.eh_frame:0000000000009BA9                 db  0Bh
.eh_frame:0000000000009BAA                 db    0
.eh_frame:0000000000009BAB                 db    0
.eh_frame:0000000000009BAC                 db  94h
.eh_frame:0000000000009BAD                 db 0CBh
.eh_frame:0000000000009BAE                 db 0FFh
.eh_frame:0000000000009BAF                 db 0FFh
.eh_frame:0000000000009BB0                 db  4Ah ; J
.eh_frame:0000000000009BB1                 db    0
.eh_frame:0000000000009BB2                 db    0
.eh_frame:0000000000009BB3                 db    0
.eh_frame:0000000000009BB4                 db    0
.eh_frame:0000000000009BB5                 db    2
.eh_frame:0000000000009BB6                 db  45h ; E
.eh_frame:0000000000009BB7                 db  0Eh
.eh_frame:0000000000009BB8                 db  10h
.eh_frame:0000000000009BB9                 db    0
.eh_frame:0000000000009BBA                 db    0
.eh_frame:0000000000009BBB                 db    0
.eh_frame:0000000000009BBC                 db  18h
.eh_frame:0000000000009BBD                 db    0
.eh_frame:0000000000009BBE                 db    0
.eh_frame:0000000000009BBF                 db    0
.eh_frame:0000000000009BC0                 db  80h
.eh_frame:0000000000009BC1                 db  0Bh
.eh_frame:0000000000009BC2                 db    0
.eh_frame:0000000000009BC3                 db    0
.eh_frame:0000000000009BC4                 db 0CCh
.eh_frame:0000000000009BC5                 db 0CBh
.eh_frame:0000000000009BC6                 db 0FFh
.eh_frame:0000000000009BC7                 db 0FFh
.eh_frame:0000000000009BC8                 db  17h
.eh_frame:0000000000009BC9                 db    0
.eh_frame:0000000000009BCA                 db    0
.eh_frame:0000000000009BCB                 db    0
.eh_frame:0000000000009BCC                 db    0
.eh_frame:0000000000009BCD                 db  41h ; A
.eh_frame:0000000000009BCE                 db  0Eh
.eh_frame:0000000000009BCF                 db  10h
.eh_frame:0000000000009BD0                 db  83h
.eh_frame:0000000000009BD1                 db    2
.eh_frame:0000000000009BD2                 db  51h ; Q
.eh_frame:0000000000009BD3                 db  0Eh
.eh_frame:0000000000009BD4                 db    8
.eh_frame:0000000000009BD5                 db    0
.eh_frame:0000000000009BD6                 db    0
.eh_frame:0000000000009BD7                 db    0
.eh_frame:0000000000009BD8                 db  18h
.eh_frame:0000000000009BD9                 db    0
.eh_frame:0000000000009BDA                 db    0
.eh_frame:0000000000009BDB                 db    0
.eh_frame:0000000000009BDC                 db  9Ch
.eh_frame:0000000000009BDD                 db  0Bh
.eh_frame:0000000000009BDE                 db    0
.eh_frame:0000000000009BDF                 db    0
.eh_frame:0000000000009BE0                 db 0D0h
.eh_frame:0000000000009BE1                 db 0CBh
.eh_frame:0000000000009BE2                 db 0FFh
.eh_frame:0000000000009BE3                 db 0FFh
.eh_frame:0000000000009BE4                 db  2Eh ; .
.eh_frame:0000000000009BE5                 db    0
.eh_frame:0000000000009BE6                 db    0
.eh_frame:0000000000009BE7                 db    0
.eh_frame:0000000000009BE8                 db    0
.eh_frame:0000000000009BE9                 db  47h ; G
.eh_frame:0000000000009BEA                 db  0Eh
.eh_frame:0000000000009BEB                 db  10h
.eh_frame:0000000000009BEC                 db  61h ; a
.eh_frame:0000000000009BED                 db  0Ah
.eh_frame:0000000000009BEE                 db  0Eh
.eh_frame:0000000000009BEF                 db    8
.eh_frame:0000000000009BF0                 db  41h ; A
.eh_frame:0000000000009BF1                 db  0Bh
.eh_frame:0000000000009BF2                 db    0
.eh_frame:0000000000009BF3                 db    0
.eh_frame:0000000000009BF4                 db  24h ; $
.eh_frame:0000000000009BF5                 db    0
.eh_frame:0000000000009BF6                 db    0
.eh_frame:0000000000009BF7                 db    0
.eh_frame:0000000000009BF8                 db 0B8h
.eh_frame:0000000000009BF9                 db  0Bh
.eh_frame:0000000000009BFA                 db    0
.eh_frame:0000000000009BFB                 db    0
.eh_frame:0000000000009BFC                 db 0E4h
.eh_frame:0000000000009BFD                 db 0CBh
.eh_frame:0000000000009BFE                 db 0FFh
.eh_frame:0000000000009BFF                 db 0FFh
.eh_frame:0000000000009C00                 db  28h ; (
.eh_frame:0000000000009C01                 db    0
.eh_frame:0000000000009C02                 db    0
.eh_frame:0000000000009C03                 db    0
.eh_frame:0000000000009C04                 db    0
.eh_frame:0000000000009C05                 db  41h ; A
.eh_frame:0000000000009C06                 db  0Eh
.eh_frame:0000000000009C07                 db  10h
.eh_frame:0000000000009C08                 db  86h
.eh_frame:0000000000009C09                 db    2
.eh_frame:0000000000009C0A                 db  41h ; A
.eh_frame:0000000000009C0B                 db  0Eh
.eh_frame:0000000000009C0C                 db  18h
.eh_frame:0000000000009C0D                 db  83h
.eh_frame:0000000000009C0E                 db    3
.eh_frame:0000000000009C0F                 db  4Dh ; M
.eh_frame:0000000000009C10                 db  0Eh
.eh_frame:0000000000009C11                 db  20h
.eh_frame:0000000000009C12                 db  49h ; I
.eh_frame:0000000000009C13                 db  0Eh
.eh_frame:0000000000009C14                 db  18h
.eh_frame:0000000000009C15                 db  47h ; G
.eh_frame:0000000000009C16                 db  0Eh
.eh_frame:0000000000009C17                 db  10h
.eh_frame:0000000000009C18                 db  41h ; A
.eh_frame:0000000000009C19                 db  0Eh
.eh_frame:0000000000009C1A                 db    8
.eh_frame:0000000000009C1B                 db    0
.eh_frame:0000000000009C1C                 db  18h
.eh_frame:0000000000009C1D                 db    0
.eh_frame:0000000000009C1E                 db    0
.eh_frame:0000000000009C1F                 db    0
.eh_frame:0000000000009C20                 db 0E0h
.eh_frame:0000000000009C21                 db  0Bh
.eh_frame:0000000000009C22                 db    0
.eh_frame:0000000000009C23                 db    0
.eh_frame:0000000000009C24                 db 0ECh
.eh_frame:0000000000009C25                 db 0CBh
.eh_frame:0000000000009C26                 db 0FFh
.eh_frame:0000000000009C27                 db 0FFh
.eh_frame:0000000000009C28                 db  13h
.eh_frame:0000000000009C29                 db    0
.eh_frame:0000000000009C2A                 db    0
.eh_frame:0000000000009C2B                 db    0
.eh_frame:0000000000009C2C                 db    0
.eh_frame:0000000000009C2D                 db  41h ; A
.eh_frame:0000000000009C2E                 db  0Eh
.eh_frame:0000000000009C2F                 db  10h
.eh_frame:0000000000009C30                 db  83h
.eh_frame:0000000000009C31                 db    2
.eh_frame:0000000000009C32                 db  50h ; P
.eh_frame:0000000000009C33                 db  0Eh
.eh_frame:0000000000009C34                 db    8
.eh_frame:0000000000009C35                 db    0
.eh_frame:0000000000009C36                 db    0
.eh_frame:0000000000009C37                 db    0
.eh_frame:0000000000009C38                 db  14h
.eh_frame:0000000000009C39                 db    0
.eh_frame:0000000000009C3A                 db    0
.eh_frame:0000000000009C3B                 db    0
.eh_frame:0000000000009C3C                 db 0FCh
.eh_frame:0000000000009C3D                 db  0Bh
.eh_frame:0000000000009C3E                 db    0
.eh_frame:0000000000009C3F                 db    0
.eh_frame:0000000000009C40                 db 0F0h
.eh_frame:0000000000009C41                 db 0CBh
.eh_frame:0000000000009C42                 db 0FFh
.eh_frame:0000000000009C43                 db 0FFh
.eh_frame:0000000000009C44                 db  35h ; 5
.eh_frame:0000000000009C45                 db    0
.eh_frame:0000000000009C46                 db    0
.eh_frame:0000000000009C47                 db    0
.eh_frame:0000000000009C48                 db    0
.eh_frame:0000000000009C49                 db  4Bh ; K
.eh_frame:0000000000009C4A                 db  0Eh
.eh_frame:0000000000009C4B                 db  10h
.eh_frame:0000000000009C4C                 db    0
.eh_frame:0000000000009C4D                 db    0
.eh_frame:0000000000009C4E                 db    0
.eh_frame:0000000000009C4F                 db    0
.eh_frame:0000000000009C50                 db  4Ch ; L
.eh_frame:0000000000009C51                 db    0
.eh_frame:0000000000009C52                 db    0
.eh_frame:0000000000009C53                 db    0
.eh_frame:0000000000009C54                 db  14h
.eh_frame:0000000000009C55                 db  0Ch
.eh_frame:0000000000009C56                 db    0
.eh_frame:0000000000009C57                 db    0
.eh_frame:0000000000009C58                 db  18h
.eh_frame:0000000000009C59                 db 0CCh
.eh_frame:0000000000009C5A                 db 0FFh
.eh_frame:0000000000009C5B                 db 0FFh
.eh_frame:0000000000009C5C                 db  1Ch
.eh_frame:0000000000009C5D                 db    4
.eh_frame:0000000000009C5E                 db    0
.eh_frame:0000000000009C5F                 db    0
.eh_frame:0000000000009C60                 db    0
.eh_frame:0000000000009C61                 db  42h ; B
.eh_frame:0000000000009C62                 db  0Eh
.eh_frame:0000000000009C63                 db  10h
.eh_frame:0000000000009C64                 db  8Fh
.eh_frame:0000000000009C65                 db    2
.eh_frame:0000000000009C66                 db  42h ; B
.eh_frame:0000000000009C67                 db  0Eh
.eh_frame:0000000000009C68                 db  18h
.eh_frame:0000000000009C69                 db  8Eh
.eh_frame:0000000000009C6A                 db    3
.eh_frame:0000000000009C6B                 db  42h ; B
.eh_frame:0000000000009C6C                 db  0Eh
.eh_frame:0000000000009C6D                 db  20h
.eh_frame:0000000000009C6E                 db  8Dh
.eh_frame:0000000000009C6F                 db    4
.eh_frame:0000000000009C70                 db  42h ; B
.eh_frame:0000000000009C71                 db  0Eh
.eh_frame:0000000000009C72                 db  28h ; (
.eh_frame:0000000000009C73                 db  8Ch
.eh_frame:0000000000009C74                 db    5
.eh_frame:0000000000009C75                 db  41h ; A
.eh_frame:0000000000009C76                 db  0Eh
.eh_frame:0000000000009C77                 db  30h ; 0
.eh_frame:0000000000009C78                 db  86h
.eh_frame:0000000000009C79                 db    6
.eh_frame:0000000000009C7A                 db  41h ; A
.eh_frame:0000000000009C7B                 db  0Eh
.eh_frame:0000000000009C7C                 db  38h ; 8
.eh_frame:0000000000009C7D                 db  83h
.eh_frame:0000000000009C7E                 db    7
.eh_frame:0000000000009C7F                 db  44h ; D
.eh_frame:0000000000009C80                 db  0Eh
.eh_frame:0000000000009C81                 db  60h ; `
.eh_frame:0000000000009C82                 db    2
.eh_frame:0000000000009C83                 db 0E9h
.eh_frame:0000000000009C84                 db  0Ah
.eh_frame:0000000000009C85                 db  0Eh
.eh_frame:0000000000009C86                 db  38h ; 8
.eh_frame:0000000000009C87                 db  41h ; A
.eh_frame:0000000000009C88                 db  0Eh
.eh_frame:0000000000009C89                 db  30h ; 0
.eh_frame:0000000000009C8A                 db  41h ; A
.eh_frame:0000000000009C8B                 db  0Eh
.eh_frame:0000000000009C8C                 db  28h ; (
.eh_frame:0000000000009C8D                 db  42h ; B
.eh_frame:0000000000009C8E                 db  0Eh
.eh_frame:0000000000009C8F                 db  20h
.eh_frame:0000000000009C90                 db  42h ; B
.eh_frame:0000000000009C91                 db  0Eh
.eh_frame:0000000000009C92                 db  18h
.eh_frame:0000000000009C93                 db  42h ; B
.eh_frame:0000000000009C94                 db  0Eh
.eh_frame:0000000000009C95                 db  10h
.eh_frame:0000000000009C96                 db  42h ; B
.eh_frame:0000000000009C97                 db  0Eh
.eh_frame:0000000000009C98                 db    8
.eh_frame:0000000000009C99                 db  47h ; G
.eh_frame:0000000000009C9A                 db  0Bh
.eh_frame:0000000000009C9B                 db    0
.eh_frame:0000000000009C9C                 db    0
.eh_frame:0000000000009C9D                 db    0
.eh_frame:0000000000009C9E                 db    0
.eh_frame:0000000000009C9F                 db    0
.eh_frame:0000000000009CA0                 db  3Ch ; <
.eh_frame:0000000000009CA1                 db    0
.eh_frame:0000000000009CA2                 db    0
.eh_frame:0000000000009CA3                 db    0
.eh_frame:0000000000009CA4                 db  64h ; d
.eh_frame:0000000000009CA5                 db  0Ch
.eh_frame:0000000000009CA6                 db    0
.eh_frame:0000000000009CA7                 db    0
.eh_frame:0000000000009CA8                 db 0E8h
.eh_frame:0000000000009CA9                 db 0CFh
.eh_frame:0000000000009CAA                 db 0FFh
.eh_frame:0000000000009CAB                 db 0FFh
.eh_frame:0000000000009CAC                 db  83h
.eh_frame:0000000000009CAD                 db    0
.eh_frame:0000000000009CAE                 db    0
.eh_frame:0000000000009CAF                 db    0
.eh_frame:0000000000009CB0                 db    0
.eh_frame:0000000000009CB1                 db  42h ; B
.eh_frame:0000000000009CB2                 db  0Eh
.eh_frame:0000000000009CB3                 db  10h
.eh_frame:0000000000009CB4                 db  8Dh
.eh_frame:0000000000009CB5                 db    2
.eh_frame:0000000000009CB6                 db  42h ; B
.eh_frame:0000000000009CB7                 db  0Eh
.eh_frame:0000000000009CB8                 db  18h
.eh_frame:0000000000009CB9                 db  8Ch
.eh_frame:0000000000009CBA                 db    3
.eh_frame:0000000000009CBB                 db  44h ; D
.eh_frame:0000000000009CBC                 db  0Eh
.eh_frame:0000000000009CBD                 db  20h
.eh_frame:0000000000009CBE                 db  86h
.eh_frame:0000000000009CBF                 db    4
.eh_frame:0000000000009CC0                 db  41h ; A
.eh_frame:0000000000009CC1                 db  0Eh
.eh_frame:0000000000009CC2                 db  28h ; (
.eh_frame:0000000000009CC3                 db  83h
.eh_frame:0000000000009CC4                 db    5
.eh_frame:0000000000009CC5                 db  4Ah ; J
.eh_frame:0000000000009CC6                 db  0Eh
.eh_frame:0000000000009CC7                 db  40h ; @
.eh_frame:0000000000009CC8                 db    2
.eh_frame:0000000000009CC9                 db  64h ; d
.eh_frame:0000000000009CCA                 db  0Ah
.eh_frame:0000000000009CCB                 db  0Eh
.eh_frame:0000000000009CCC                 db  28h ; (
.eh_frame:0000000000009CCD                 db  41h ; A
.eh_frame:0000000000009CCE                 db  0Eh
.eh_frame:0000000000009CCF                 db  20h
.eh_frame:0000000000009CD0                 db  41h ; A
.eh_frame:0000000000009CD1                 db  0Eh
.eh_frame:0000000000009CD2                 db  18h
.eh_frame:0000000000009CD3                 db  42h ; B
.eh_frame:0000000000009CD4                 db  0Eh
.eh_frame:0000000000009CD5                 db  10h
.eh_frame:0000000000009CD6                 db  42h ; B
.eh_frame:0000000000009CD7                 db  0Eh
.eh_frame:0000000000009CD8                 db    8
.eh_frame:0000000000009CD9                 db  41h ; A
.eh_frame:0000000000009CDA                 db  0Bh
.eh_frame:0000000000009CDB                 db    0
.eh_frame:0000000000009CDC                 db    0
.eh_frame:0000000000009CDD                 db    0
.eh_frame:0000000000009CDE                 db    0
.eh_frame:0000000000009CDF                 db    0
.eh_frame:0000000000009CE0                 db  4Ch ; L
.eh_frame:0000000000009CE1                 db    0
.eh_frame:0000000000009CE2                 db    0
.eh_frame:0000000000009CE3                 db    0
.eh_frame:0000000000009CE4                 db 0A4h
.eh_frame:0000000000009CE5                 db  0Ch
.eh_frame:0000000000009CE6                 db    0
.eh_frame:0000000000009CE7                 db    0
.eh_frame:0000000000009CE8                 db  38h ; 8
.eh_frame:0000000000009CE9                 db 0D0h
.eh_frame:0000000000009CEA                 db 0FFh
.eh_frame:0000000000009CEB                 db 0FFh
.eh_frame:0000000000009CEC                 db  7Dh ; }
.eh_frame:0000000000009CED                 db    0
.eh_frame:0000000000009CEE                 db    0
.eh_frame:0000000000009CEF                 db    0
.eh_frame:0000000000009CF0                 db    0
.eh_frame:0000000000009CF1                 db  42h ; B
.eh_frame:0000000000009CF2                 db  0Eh
.eh_frame:0000000000009CF3                 db  10h
.eh_frame:0000000000009CF4                 db  8Ch
.eh_frame:0000000000009CF5                 db    2
.eh_frame:0000000000009CF6                 db  41h ; A
.eh_frame:0000000000009CF7                 db  0Eh
.eh_frame:0000000000009CF8                 db  18h
.eh_frame:0000000000009CF9                 db  86h
.eh_frame:0000000000009CFA                 db    3
.eh_frame:0000000000009CFB                 db  44h ; D
.eh_frame:0000000000009CFC                 db  0Eh
.eh_frame:0000000000009CFD                 db  20h
.eh_frame:0000000000009CFE                 db  83h
.eh_frame:0000000000009CFF                 db    4
.eh_frame:0000000000009D00                 db  69h ; i
.eh_frame:0000000000009D01                 db  0Ah
.eh_frame:0000000000009D02                 db  0Eh
.eh_frame:0000000000009D03                 db  18h
.eh_frame:0000000000009D04                 db  41h ; A
.eh_frame:0000000000009D05                 db  0Eh
.eh_frame:0000000000009D06                 db  10h
.eh_frame:0000000000009D07                 db  42h ; B
.eh_frame:0000000000009D08                 db  0Eh
.eh_frame:0000000000009D09                 db    8
.eh_frame:0000000000009D0A                 db  45h ; E
.eh_frame:0000000000009D0B                 db  0Bh
.eh_frame:0000000000009D0C                 db  55h ; U
.eh_frame:0000000000009D0D                 db  0Ah
.eh_frame:0000000000009D0E                 db  0Eh
.eh_frame:0000000000009D0F                 db  18h
.eh_frame:0000000000009D10                 db  41h ; A
.eh_frame:0000000000009D11                 db  0Eh
.eh_frame:0000000000009D12                 db  10h
.eh_frame:0000000000009D13                 db  42h ; B
.eh_frame:0000000000009D14                 db  0Eh
.eh_frame:0000000000009D15                 db    8
.eh_frame:0000000000009D16                 db  48h ; H
.eh_frame:0000000000009D17                 db  0Bh
.eh_frame:0000000000009D18                 db  41h ; A
.eh_frame:0000000000009D19                 db  0Ah
.eh_frame:0000000000009D1A                 db  0Eh
.eh_frame:0000000000009D1B                 db  18h
.eh_frame:0000000000009D1C                 db  46h ; F
.eh_frame:0000000000009D1D                 db  0Eh
.eh_frame:0000000000009D1E                 db  10h
.eh_frame:0000000000009D1F                 db  42h ; B
.eh_frame:0000000000009D20                 db  0Eh
.eh_frame:0000000000009D21                 db    8
.eh_frame:0000000000009D22                 db  47h ; G
.eh_frame:0000000000009D23                 db  0Bh
.eh_frame:0000000000009D24                 db  49h ; I
.eh_frame:0000000000009D25                 db  0Eh
.eh_frame:0000000000009D26                 db  18h
.eh_frame:0000000000009D27                 db  41h ; A
.eh_frame:0000000000009D28                 db  0Eh
.eh_frame:0000000000009D29                 db  10h
.eh_frame:0000000000009D2A                 db  42h ; B
.eh_frame:0000000000009D2B                 db  0Eh
.eh_frame:0000000000009D2C                 db    8
.eh_frame:0000000000009D2D                 db    0
.eh_frame:0000000000009D2E                 db    0
.eh_frame:0000000000009D2F                 db    0
.eh_frame:0000000000009D30                 db  1Ch
.eh_frame:0000000000009D31                 db    0
.eh_frame:0000000000009D32                 db    0
.eh_frame:0000000000009D33                 db    0
.eh_frame:0000000000009D34                 db 0F4h
.eh_frame:0000000000009D35                 db  0Ch
.eh_frame:0000000000009D36                 db    0
.eh_frame:0000000000009D37                 db    0
.eh_frame:0000000000009D38                 db  68h ; h
.eh_frame:0000000000009D39                 db 0D0h
.eh_frame:0000000000009D3A                 db 0FFh
.eh_frame:0000000000009D3B                 db 0FFh
.eh_frame:0000000000009D3C                 db  60h ; `
.eh_frame:0000000000009D3D                 db    0
.eh_frame:0000000000009D3E                 db    0
.eh_frame:0000000000009D3F                 db    0
.eh_frame:0000000000009D40                 db    0
.eh_frame:0000000000009D41                 db  44h ; D
.eh_frame:0000000000009D42                 db  0Eh
.eh_frame:0000000000009D43                 db  10h
.eh_frame:0000000000009D44                 db  75h ; u
.eh_frame:0000000000009D45                 db  0Ah
.eh_frame:0000000000009D46                 db  0Eh
.eh_frame:0000000000009D47                 db    8
.eh_frame:0000000000009D48                 db  47h ; G
.eh_frame:0000000000009D49                 db  0Bh
.eh_frame:0000000000009D4A                 db  5Fh ; _
.eh_frame:0000000000009D4B                 db  0Eh
.eh_frame:0000000000009D4C                 db    8
.eh_frame:0000000000009D4D                 db    0
.eh_frame:0000000000009D4E                 db    0
.eh_frame:0000000000009D4F                 db    0
.eh_frame:0000000000009D50                 db  1Ch
.eh_frame:0000000000009D51                 db    0
.eh_frame:0000000000009D52                 db    0
.eh_frame:0000000000009D53                 db    0
.eh_frame:0000000000009D54                 db  14h
.eh_frame:0000000000009D55                 db  0Dh
.eh_frame:0000000000009D56                 db    0
.eh_frame:0000000000009D57                 db    0
.eh_frame:0000000000009D58                 db 0A8h
.eh_frame:0000000000009D59                 db 0D0h
.eh_frame:0000000000009D5A                 db 0FFh
.eh_frame:0000000000009D5B                 db 0FFh
.eh_frame:0000000000009D5C                 db  3Ch ; <
.eh_frame:0000000000009D5D                 db    0
.eh_frame:0000000000009D5E                 db    0
.eh_frame:0000000000009D5F                 db    0
.eh_frame:0000000000009D60                 db    0
.eh_frame:0000000000009D61                 db  44h ; D
.eh_frame:0000000000009D62                 db  0Eh
.eh_frame:0000000000009D63                 db  10h
.eh_frame:0000000000009D64                 db  61h ; a
.eh_frame:0000000000009D65                 db  0Ah
.eh_frame:0000000000009D66                 db  0Eh
.eh_frame:0000000000009D67                 db    8
.eh_frame:0000000000009D68                 db  4Bh ; K
.eh_frame:0000000000009D69                 db  0Bh
.eh_frame:0000000000009D6A                 db  4Bh ; K
.eh_frame:0000000000009D6B                 db  0Eh
.eh_frame:0000000000009D6C                 db    8
.eh_frame:0000000000009D6D                 db    0
.eh_frame:0000000000009D6E                 db    0
.eh_frame:0000000000009D6F                 db    0
.eh_frame:0000000000009D70                 db  34h ; 4
.eh_frame:0000000000009D71                 db    0
.eh_frame:0000000000009D72                 db    0
.eh_frame:0000000000009D73                 db    0
.eh_frame:0000000000009D74                 db  34h ; 4
.eh_frame:0000000000009D75                 db  0Dh
.eh_frame:0000000000009D76                 db    0
.eh_frame:0000000000009D77                 db    0
.eh_frame:0000000000009D78                 db 0C8h
.eh_frame:0000000000009D79                 db 0D0h
.eh_frame:0000000000009D7A                 db 0FFh
.eh_frame:0000000000009D7B                 db 0FFh
.eh_frame:0000000000009D7C                 db  7Bh ; {
.eh_frame:0000000000009D7D                 db    0
.eh_frame:0000000000009D7E                 db    0
.eh_frame:0000000000009D7F                 db    0
.eh_frame:0000000000009D80                 db    0
.eh_frame:0000000000009D81                 db  42h ; B
.eh_frame:0000000000009D82                 db  0Eh
.eh_frame:0000000000009D83                 db  10h
.eh_frame:0000000000009D84                 db  8Ch
.eh_frame:0000000000009D85                 db    2
.eh_frame:0000000000009D86                 db  41h ; A
.eh_frame:0000000000009D87                 db  0Eh
.eh_frame:0000000000009D88                 db  18h
.eh_frame:0000000000009D89                 db  86h
.eh_frame:0000000000009D8A                 db    3
.eh_frame:0000000000009D8B                 db  41h ; A
.eh_frame:0000000000009D8C                 db  0Eh
.eh_frame:0000000000009D8D                 db  20h
.eh_frame:0000000000009D8E                 db  83h
.eh_frame:0000000000009D8F                 db    4
.eh_frame:0000000000009D90                 db  7Dh ; }
.eh_frame:0000000000009D91                 db  0Ah
.eh_frame:0000000000009D92                 db  0Eh
.eh_frame:0000000000009D93                 db  18h
.eh_frame:0000000000009D94                 db  41h ; A
.eh_frame:0000000000009D95                 db  0Eh
.eh_frame:0000000000009D96                 db  10h
.eh_frame:0000000000009D97                 db  42h ; B
.eh_frame:0000000000009D98                 db  0Eh
.eh_frame:0000000000009D99                 db    8
.eh_frame:0000000000009D9A                 db  44h ; D
.eh_frame:0000000000009D9B                 db  0Bh
.eh_frame:0000000000009D9C                 db  60h ; `
.eh_frame:0000000000009D9D                 db  0Ah
.eh_frame:0000000000009D9E                 db  0Eh
.eh_frame:0000000000009D9F                 db  18h
.eh_frame:0000000000009DA0                 db  41h ; A
.eh_frame:0000000000009DA1                 db  0Eh
.eh_frame:0000000000009DA2                 db  10h
.eh_frame:0000000000009DA3                 db  42h ; B
.eh_frame:0000000000009DA4                 db  0Eh
.eh_frame:0000000000009DA5                 db    8
.eh_frame:0000000000009DA6                 db  45h ; E
.eh_frame:0000000000009DA7                 db  0Bh
.eh_frame:0000000000009DA8                 db  1Ch
.eh_frame:0000000000009DA9                 db    0
.eh_frame:0000000000009DAA                 db    0
.eh_frame:0000000000009DAB                 db    0
.eh_frame:0000000000009DAC                 db  6Ch ; l
.eh_frame:0000000000009DAD                 db  0Dh
.eh_frame:0000000000009DAE                 db    0
.eh_frame:0000000000009DAF                 db    0
.eh_frame:0000000000009DB0                 db  10h
.eh_frame:0000000000009DB1                 db 0D1h
.eh_frame:0000000000009DB2                 db 0FFh
.eh_frame:0000000000009DB3                 db 0FFh
.eh_frame:0000000000009DB4                 db  40h ; @
.eh_frame:0000000000009DB5                 db    0
.eh_frame:0000000000009DB6                 db    0
.eh_frame:0000000000009DB7                 db    0
.eh_frame:0000000000009DB8                 db    0
.eh_frame:0000000000009DB9                 db  44h ; D
.eh_frame:0000000000009DBA                 db  0Eh
.eh_frame:0000000000009DBB                 db  10h
.eh_frame:0000000000009DBC                 db  83h
.eh_frame:0000000000009DBD                 db    2
.eh_frame:0000000000009DBE                 db  5Ah ; Z
.eh_frame:0000000000009DBF                 db  0Ah
.eh_frame:0000000000009DC0                 db  0Eh
.eh_frame:0000000000009DC1                 db    8
.eh_frame:0000000000009DC2                 db  4Ah ; J
.eh_frame:0000000000009DC3                 db  0Bh
.eh_frame:0000000000009DC4                 db  53h ; S
.eh_frame:0000000000009DC5                 db  0Eh
.eh_frame:0000000000009DC6                 db    8
.eh_frame:0000000000009DC7                 db    0
.eh_frame:0000000000009DC8                 db  2Ch ; ,
.eh_frame:0000000000009DC9                 db    0
.eh_frame:0000000000009DCA                 db    0
.eh_frame:0000000000009DCB                 db    0
.eh_frame:0000000000009DCC                 db  8Ch
.eh_frame:0000000000009DCD                 db  0Dh
.eh_frame:0000000000009DCE                 db    0
.eh_frame:0000000000009DCF                 db    0
.eh_frame:0000000000009DD0                 db  30h ; 0
.eh_frame:0000000000009DD1                 db 0D1h
.eh_frame:0000000000009DD2                 db 0FFh
.eh_frame:0000000000009DD3                 db 0FFh
.eh_frame:0000000000009DD4                 db  57h ; W
.eh_frame:0000000000009DD5                 db    0
.eh_frame:0000000000009DD6                 db    0
.eh_frame:0000000000009DD7                 db    0
.eh_frame:0000000000009DD8                 db    0
.eh_frame:0000000000009DD9                 db  63h ; c
.eh_frame:0000000000009DDA                 db  0Eh
.eh_frame:0000000000009DDB                 db  10h
.eh_frame:0000000000009DDC                 db  8Ch
.eh_frame:0000000000009DDD                 db    2
.eh_frame:0000000000009DDE                 db  41h ; A
.eh_frame:0000000000009DDF                 db  0Eh
.eh_frame:0000000000009DE0                 db  18h
.eh_frame:0000000000009DE1                 db  86h
.eh_frame:0000000000009DE2                 db    3
.eh_frame:0000000000009DE3                 db  44h ; D
.eh_frame:0000000000009DE4                 db  0Eh
.eh_frame:0000000000009DE5                 db  20h
.eh_frame:0000000000009DE6                 db  83h
.eh_frame:0000000000009DE7                 db    4
.eh_frame:0000000000009DE8                 db  6Bh ; k
.eh_frame:0000000000009DE9                 db  0Eh
.eh_frame:0000000000009DEA                 db  18h
.eh_frame:0000000000009DEB                 db  41h ; A
.eh_frame:0000000000009DEC                 db  0Eh
.eh_frame:0000000000009DED                 db  10h
.eh_frame:0000000000009DEE                 db  42h ; B
.eh_frame:0000000000009DEF                 db  0Eh
.eh_frame:0000000000009DF0                 db    8
.eh_frame:0000000000009DF1                 db    0
.eh_frame:0000000000009DF2                 db    0
.eh_frame:0000000000009DF3                 db    0
.eh_frame:0000000000009DF4                 db    0
.eh_frame:0000000000009DF5                 db    0
.eh_frame:0000000000009DF6                 db    0
.eh_frame:0000000000009DF7                 db    0
.eh_frame:0000000000009DF8                 db  44h ; D
.eh_frame:0000000000009DF9                 db    0
.eh_frame:0000000000009DFA                 db    0
.eh_frame:0000000000009DFB                 db    0
.eh_frame:0000000000009DFC                 db 0BCh
.eh_frame:0000000000009DFD                 db  0Dh
.eh_frame:0000000000009DFE                 db    0
.eh_frame:0000000000009DFF                 db    0
.eh_frame:0000000000009E00                 db  60h ; `
.eh_frame:0000000000009E01                 db 0D1h
.eh_frame:0000000000009E02                 db 0FFh
.eh_frame:0000000000009E03                 db 0FFh
.eh_frame:0000000000009E04                 db  65h ; e
.eh_frame:0000000000009E05                 db    0
.eh_frame:0000000000009E06                 db    0
.eh_frame:0000000000009E07                 db    0
.eh_frame:0000000000009E08                 db    0
.eh_frame:0000000000009E09                 db  42h ; B
.eh_frame:0000000000009E0A                 db  0Eh
.eh_frame:0000000000009E0B                 db  10h
.eh_frame:0000000000009E0C                 db  8Fh
.eh_frame:0000000000009E0D                 db    2
.eh_frame:0000000000009E0E                 db  42h ; B
.eh_frame:0000000000009E0F                 db  0Eh
.eh_frame:0000000000009E10                 db  18h
.eh_frame:0000000000009E11                 db  8Eh
.eh_frame:0000000000009E12                 db    3
.eh_frame:0000000000009E13                 db  45h ; E
.eh_frame:0000000000009E14                 db  0Eh
.eh_frame:0000000000009E15                 db  20h
.eh_frame:0000000000009E16                 db  8Dh
.eh_frame:0000000000009E17                 db    4
.eh_frame:0000000000009E18                 db  42h ; B
.eh_frame:0000000000009E19                 db  0Eh
.eh_frame:0000000000009E1A                 db  28h ; (
.eh_frame:0000000000009E1B                 db  8Ch
.eh_frame:0000000000009E1C                 db    5
.eh_frame:0000000000009E1D                 db  48h ; H
.eh_frame:0000000000009E1E                 db  0Eh
.eh_frame:0000000000009E1F                 db  30h ; 0
.eh_frame:0000000000009E20                 db  86h
.eh_frame:0000000000009E21                 db    6
.eh_frame:0000000000009E22                 db  48h ; H
.eh_frame:0000000000009E23                 db  0Eh
.eh_frame:0000000000009E24                 db  38h ; 8
.eh_frame:0000000000009E25                 db  83h
.eh_frame:0000000000009E26                 db    7
.eh_frame:0000000000009E27                 db  4Dh ; M
.eh_frame:0000000000009E28                 db  0Eh
.eh_frame:0000000000009E29                 db  40h ; @
.eh_frame:0000000000009E2A                 db  72h ; r
.eh_frame:0000000000009E2B                 db  0Eh
.eh_frame:0000000000009E2C                 db  38h ; 8
.eh_frame:0000000000009E2D                 db  41h ; A
.eh_frame:0000000000009E2E                 db  0Eh
.eh_frame:0000000000009E2F                 db  30h ; 0
.eh_frame:0000000000009E30                 db  41h ; A
.eh_frame:0000000000009E31                 db  0Eh
.eh_frame:0000000000009E32                 db  28h ; (
.eh_frame:0000000000009E33                 db  42h ; B
.eh_frame:0000000000009E34                 db  0Eh
.eh_frame:0000000000009E35                 db  20h
.eh_frame:0000000000009E36                 db  42h ; B
.eh_frame:0000000000009E37                 db  0Eh
.eh_frame:0000000000009E38                 db  18h
.eh_frame:0000000000009E39                 db  42h ; B
.eh_frame:0000000000009E3A                 db  0Eh
.eh_frame:0000000000009E3B                 db  10h
.eh_frame:0000000000009E3C                 db  42h ; B
.eh_frame:0000000000009E3D                 db  0Eh
.eh_frame:0000000000009E3E                 db    8
.eh_frame:0000000000009E3F                 db    0
.eh_frame:0000000000009E40                 db  14h
.eh_frame:0000000000009E41                 db    0
.eh_frame:0000000000009E42                 db    0
.eh_frame:0000000000009E43                 db    0
.eh_frame:0000000000009E44                 db    4
.eh_frame:0000000000009E45                 db  0Eh
.eh_frame:0000000000009E46                 db    0
.eh_frame:0000000000009E47                 db    0
.eh_frame:0000000000009E48                 db  88h
.eh_frame:0000000000009E49                 db 0D1h
.eh_frame:0000000000009E4A                 db 0FFh
.eh_frame:0000000000009E4B                 db 0FFh
.eh_frame:0000000000009E4C                 db    2
.eh_frame:0000000000009E4D                 db    0
.eh_frame:0000000000009E4E                 db    0
.eh_frame:0000000000009E4F                 db    0
.eh_frame:0000000000009E50                 db    0
.eh_frame:0000000000009E51                 db    0
.eh_frame:0000000000009E52                 db    0
.eh_frame:0000000000009E53                 db    0
.eh_frame:0000000000009E54                 db    0
.eh_frame:0000000000009E55                 db    0
.eh_frame:0000000000009E56                 db    0
.eh_frame:0000000000009E57                 db    0
.eh_frame:0000000000009E58                 db  10h
.eh_frame:0000000000009E59                 db    0
.eh_frame:0000000000009E5A                 db    0
.eh_frame:0000000000009E5B                 db    0
.eh_frame:0000000000009E5C                 db  1Ch
.eh_frame:0000000000009E5D                 db  0Eh
.eh_frame:0000000000009E5E                 db    0
.eh_frame:0000000000009E5F                 db    0
.eh_frame:0000000000009E60                 db  80h
.eh_frame:0000000000009E61                 db 0D1h
.eh_frame:0000000000009E62                 db 0FFh
.eh_frame:0000000000009E63                 db 0FFh
.eh_frame:0000000000009E64                 db  0Eh
.eh_frame:0000000000009E65                 db    0
.eh_frame:0000000000009E66                 db    0
.eh_frame:0000000000009E67                 db    0
.eh_frame:0000000000009E68                 db    0
.eh_frame:0000000000009E69                 db    0
.eh_frame:0000000000009E6A                 db    0
.eh_frame:0000000000009E6B                 db    0
.eh_frame:0000000000009E6C __FRAME_END__   db    0
.eh_frame:0000000000009E6D                 db    0
.eh_frame:0000000000009E6E                 db    0
.eh_frame:0000000000009E6F                 db    0
.eh_frame:0000000000009E6F _eh_frame       ends
.eh_frame:0000000000009E6F
.init_array:000000000020AA90 ; ELF Initialization Function Table
.init_array:000000000020AA90 ; ===========================================================================
.init_array:000000000020AA90
.init_array:000000000020AA90 ; Segment type: Pure data
.init_array:000000000020AA90 ; Segment permissions: Read/Write
.init_array:000000000020AA90 _init_array     segment qword public 'DATA' use64
.init_array:000000000020AA90                 assume cs:_init_array
.init_array:000000000020AA90                 ;org 20AA90h
.init_array:000000000020AA90 __frame_dummy_init_array_entry dq offset frame_dummy
.init_array:000000000020AA90                                         ; DATA XREF: LOAD:00000000000000F8↑o
.init_array:000000000020AA90                                         ; LOAD:0000000000000210↑o ...
.init_array:000000000020AA90 _init_array     ends                    ; Alternative name is '__init_array_start'
.init_array:000000000020AA90
.fini_array:000000000020AA98 ; ELF Termination Function Table
.fini_array:000000000020AA98 ; ===========================================================================
.fini_array:000000000020AA98
.fini_array:000000000020AA98 ; Segment type: Pure data
.fini_array:000000000020AA98 ; Segment permissions: Read/Write
.fini_array:000000000020AA98 _fini_array     segment qword public 'DATA' use64
.fini_array:000000000020AA98                 assume cs:_fini_array
.fini_array:000000000020AA98                 ;org 20AA98h
.fini_array:000000000020AA98 __do_global_dtors_aux_fini_array_entry dq offset __do_global_dtors_aux
.fini_array:000000000020AA98                                         ; DATA XREF: __libc_csu_init+13↑o
.fini_array:000000000020AA98 _fini_array     ends                    ; Alternative name is '__init_array_end'
.fini_array:000000000020AA98
.data.rel.ro:000000000020AAA0 ; ===========================================================================
.data.rel.ro:000000000020AAA0
.data.rel.ro:000000000020AAA0 ; Segment type: Pure data
.data.rel.ro:000000000020AAA0 ; Segment permissions: Read/Write
.data.rel.ro:000000000020AAA0 _data_rel_ro    segment align_32 public 'DATA' use64
.data.rel.ro:000000000020AAA0                 assume cs:_data_rel_ro
.data.rel.ro:000000000020AAA0                 ;org 20AAA0h
.data.rel.ro:000000000020AAA0 ; struct option long_options
.data.rel.ro:000000000020AAA0 long_options    dq offset aComplement   ; name
.data.rel.ro:000000000020AAA0                                         ; DATA XREF: main+10↑o
.data.rel.ro:000000000020AAA0                 dd 0                    ; has_arg ; "complement"
.data.rel.ro:000000000020AAA0                 db 4 dup(0)
.data.rel.ro:000000000020AAA0                 dq 0                    ; flag
.data.rel.ro:000000000020AAA0                 dd 63h                  ; val
.data.rel.ro:000000000020AAA0                 db 4 dup(0)
.data.rel.ro:000000000020AAC0                 dq offset aDelete       ; "delete"
.data.rel.ro:000000000020AAC8                 db    0
.data.rel.ro:000000000020AAC9                 db    0
.data.rel.ro:000000000020AACA                 db    0
.data.rel.ro:000000000020AACB                 db    0
.data.rel.ro:000000000020AACC                 db    0
.data.rel.ro:000000000020AACD                 db    0
.data.rel.ro:000000000020AACE                 db    0
.data.rel.ro:000000000020AACF                 db    0
.data.rel.ro:000000000020AAD0                 db    0
.data.rel.ro:000000000020AAD1                 db    0
.data.rel.ro:000000000020AAD2                 db    0
.data.rel.ro:000000000020AAD3                 db    0
.data.rel.ro:000000000020AAD4                 db    0
.data.rel.ro:000000000020AAD5                 db    0
.data.rel.ro:000000000020AAD6                 db    0
.data.rel.ro:000000000020AAD7                 db    0
.data.rel.ro:000000000020AAD8                 db  64h ; d
.data.rel.ro:000000000020AAD9                 db    0
.data.rel.ro:000000000020AADA                 db    0
.data.rel.ro:000000000020AADB                 db    0
.data.rel.ro:000000000020AADC                 db    0
.data.rel.ro:000000000020AADD                 db    0
.data.rel.ro:000000000020AADE                 db    0
.data.rel.ro:000000000020AADF                 db    0
.data.rel.ro:000000000020AAE0                 dq offset aSqueezeRepeats ; "squeeze-repeats"
.data.rel.ro:000000000020AAE8                 db    0
.data.rel.ro:000000000020AAE9                 db    0
.data.rel.ro:000000000020AAEA                 db    0
.data.rel.ro:000000000020AAEB                 db    0
.data.rel.ro:000000000020AAEC                 db    0
.data.rel.ro:000000000020AAED                 db    0
.data.rel.ro:000000000020AAEE                 db    0
.data.rel.ro:000000000020AAEF                 db    0
.data.rel.ro:000000000020AAF0                 db    0
.data.rel.ro:000000000020AAF1                 db    0
.data.rel.ro:000000000020AAF2                 db    0
.data.rel.ro:000000000020AAF3                 db    0
.data.rel.ro:000000000020AAF4                 db    0
.data.rel.ro:000000000020AAF5                 db    0
.data.rel.ro:000000000020AAF6                 db    0
.data.rel.ro:000000000020AAF7                 db    0
.data.rel.ro:000000000020AAF8                 db  73h ; s
.data.rel.ro:000000000020AAF9                 db    0
.data.rel.ro:000000000020AAFA                 db    0
.data.rel.ro:000000000020AAFB                 db    0
.data.rel.ro:000000000020AAFC                 db    0
.data.rel.ro:000000000020AAFD                 db    0
.data.rel.ro:000000000020AAFE                 db    0
.data.rel.ro:000000000020AAFF                 db    0
.data.rel.ro:000000000020AB00                 dq offset aTruncateSet1 ; "truncate-set1"
.data.rel.ro:000000000020AB08                 db    0
.data.rel.ro:000000000020AB09                 db    0
.data.rel.ro:000000000020AB0A                 db    0
.data.rel.ro:000000000020AB0B                 db    0
.data.rel.ro:000000000020AB0C                 db    0
.data.rel.ro:000000000020AB0D                 db    0
.data.rel.ro:000000000020AB0E                 db    0
.data.rel.ro:000000000020AB0F                 db    0
.data.rel.ro:000000000020AB10                 db    0
.data.rel.ro:000000000020AB11                 db    0
.data.rel.ro:000000000020AB12                 db    0
.data.rel.ro:000000000020AB13                 db    0
.data.rel.ro:000000000020AB14                 db    0
.data.rel.ro:000000000020AB15                 db    0
.data.rel.ro:000000000020AB16                 db    0
.data.rel.ro:000000000020AB17                 db    0
.data.rel.ro:000000000020AB18                 db  74h ; t
.data.rel.ro:000000000020AB19                 db    0
.data.rel.ro:000000000020AB1A                 db    0
.data.rel.ro:000000000020AB1B                 db    0
.data.rel.ro:000000000020AB1C                 db    0
.data.rel.ro:000000000020AB1D                 db    0
.data.rel.ro:000000000020AB1E                 db    0
.data.rel.ro:000000000020AB1F                 db    0
.data.rel.ro:000000000020AB20                 dq offset aHelp         ; "help"
.data.rel.ro:000000000020AB28                 db    0
.data.rel.ro:000000000020AB29                 db    0
.data.rel.ro:000000000020AB2A                 db    0
.data.rel.ro:000000000020AB2B                 db    0
.data.rel.ro:000000000020AB2C                 db    0
.data.rel.ro:000000000020AB2D                 db    0
.data.rel.ro:000000000020AB2E                 db    0
.data.rel.ro:000000000020AB2F                 db    0
.data.rel.ro:000000000020AB30                 db    0
.data.rel.ro:000000000020AB31                 db    0
.data.rel.ro:000000000020AB32                 db    0
.data.rel.ro:000000000020AB33                 db    0
.data.rel.ro:000000000020AB34                 db    0
.data.rel.ro:000000000020AB35                 db    0
.data.rel.ro:000000000020AB36                 db    0
.data.rel.ro:000000000020AB37                 db    0
.data.rel.ro:000000000020AB38                 db  7Eh ; ~
.data.rel.ro:000000000020AB39                 db 0FFh
.data.rel.ro:000000000020AB3A                 db 0FFh
.data.rel.ro:000000000020AB3B                 db 0FFh
.data.rel.ro:000000000020AB3C                 db    0
.data.rel.ro:000000000020AB3D                 db    0
.data.rel.ro:000000000020AB3E                 db    0
.data.rel.ro:000000000020AB3F                 db    0
.data.rel.ro:000000000020AB40                 dq offset aVersion      ; "version"
.data.rel.ro:000000000020AB48                 db    0
.data.rel.ro:000000000020AB49                 db    0
.data.rel.ro:000000000020AB4A                 db    0
.data.rel.ro:000000000020AB4B                 db    0
.data.rel.ro:000000000020AB4C                 db    0
.data.rel.ro:000000000020AB4D                 db    0
.data.rel.ro:000000000020AB4E                 db    0
.data.rel.ro:000000000020AB4F                 db    0
.data.rel.ro:000000000020AB50                 db    0
.data.rel.ro:000000000020AB51                 db    0
.data.rel.ro:000000000020AB52                 db    0
.data.rel.ro:000000000020AB53                 db    0
.data.rel.ro:000000000020AB54                 db    0
.data.rel.ro:000000000020AB55                 db    0
.data.rel.ro:000000000020AB56                 db    0
.data.rel.ro:000000000020AB57                 db    0
.data.rel.ro:000000000020AB58                 db  7Dh ; }
.data.rel.ro:000000000020AB59                 db 0FFh
.data.rel.ro:000000000020AB5A                 db 0FFh
.data.rel.ro:000000000020AB5B                 db 0FFh
.data.rel.ro:000000000020AB5C                 db    0
.data.rel.ro:000000000020AB5D                 db    0
.data.rel.ro:000000000020AB5E                 db    0
.data.rel.ro:000000000020AB5F                 db    0
.data.rel.ro:000000000020AB60                 db    0
.data.rel.ro:000000000020AB61                 db    0
.data.rel.ro:000000000020AB62                 db    0
.data.rel.ro:000000000020AB63                 db    0
.data.rel.ro:000000000020AB64                 db    0
.data.rel.ro:000000000020AB65                 db    0
.data.rel.ro:000000000020AB66                 db    0
.data.rel.ro:000000000020AB67                 db    0
.data.rel.ro:000000000020AB68                 db    0
.data.rel.ro:000000000020AB69                 db    0
.data.rel.ro:000000000020AB6A                 db    0
.data.rel.ro:000000000020AB6B                 db    0
.data.rel.ro:000000000020AB6C                 db    0
.data.rel.ro:000000000020AB6D                 db    0
.data.rel.ro:000000000020AB6E                 db    0
.data.rel.ro:000000000020AB6F                 db    0
.data.rel.ro:000000000020AB70                 db    0
.data.rel.ro:000000000020AB71                 db    0
.data.rel.ro:000000000020AB72                 db    0
.data.rel.ro:000000000020AB73                 db    0
.data.rel.ro:000000000020AB74                 db    0
.data.rel.ro:000000000020AB75                 db    0
.data.rel.ro:000000000020AB76                 db    0
.data.rel.ro:000000000020AB77                 db    0
.data.rel.ro:000000000020AB78                 db    0
.data.rel.ro:000000000020AB79                 db    0
.data.rel.ro:000000000020AB7A                 db    0
.data.rel.ro:000000000020AB7B                 db    0
.data.rel.ro:000000000020AB7C                 db    0
.data.rel.ro:000000000020AB7D                 db    0
.data.rel.ro:000000000020AB7E                 db    0
.data.rel.ro:000000000020AB7F                 db    0
.data.rel.ro:000000000020AB80 char_class_name dq offset aAlnum        ; DATA XREF: parse_str:loc_3870↑o
.data.rel.ro:000000000020AB80                                         ; "alnum"
.data.rel.ro:000000000020AB88                 dq offset aAlpha        ; "alpha"
.data.rel.ro:000000000020AB90                 dq offset aBlank        ; "blank"
.data.rel.ro:000000000020AB98                 dq offset aCntrl        ; "cntrl"
.data.rel.ro:000000000020ABA0                 dq offset aXdigit+1     ; "digit"
.data.rel.ro:000000000020ABA8                 dq offset aGraph        ; "graph"
.data.rel.ro:000000000020ABB0                 dq offset aLower        ; "lower"
.data.rel.ro:000000000020ABB8                 dq offset aPrint        ; "print"
.data.rel.ro:000000000020ABC0                 dq offset aPunct        ; "punct"
.data.rel.ro:000000000020ABC8                 dq offset aSpace        ; "space"
.data.rel.ro:000000000020ABD0                 dq offset aUpper        ; "upper"
.data.rel.ro:000000000020ABD8                 dq offset aXdigit       ; "xdigit"
.data.rel.ro:000000000020ABE0                 public quoting_style_args
.data.rel.ro:000000000020ABE0 quoting_style_args dq offset aLiteral   ; "literal"
.data.rel.ro:000000000020ABE8                 dq offset aShell        ; "shell"
.data.rel.ro:000000000020ABF0                 dq offset aShellAlways  ; "shell-always"
.data.rel.ro:000000000020ABF8                 dq offset aShellEscape  ; "shell-escape"
.data.rel.ro:000000000020AC00                 dq offset aShellEscapeAlw ; "shell-escape-always"
.data.rel.ro:000000000020AC08                 dq offset file+19h      ; "c"
.data.rel.ro:000000000020AC10                 dq offset aCMaybe       ; "c-maybe"
.data.rel.ro:000000000020AC18                 dq offset aShellEscape+6 ; "escape"
.data.rel.ro:000000000020AC20                 dq offset dirname+11h   ; "locale"
.data.rel.ro:000000000020AC28                 dq offset aClocale      ; "clocale"
.data.rel.ro:000000000020AC30                 db    0
.data.rel.ro:000000000020AC31                 db    0
.data.rel.ro:000000000020AC32                 db    0
.data.rel.ro:000000000020AC33                 db    0
.data.rel.ro:000000000020AC34                 db    0
.data.rel.ro:000000000020AC35                 db    0
.data.rel.ro:000000000020AC36                 db    0
.data.rel.ro:000000000020AC37                 db    0
.data.rel.ro:000000000020AC37 _data_rel_ro    ends
.data.rel.ro:000000000020AC37
LOAD:000000000020AC38 ; ELF Dynamic Information
LOAD:000000000020AC38 ; ===========================================================================
LOAD:000000000020AC38
LOAD:000000000020AC38 ; Segment type: Pure data
LOAD:000000000020AC38 ; Segment permissions: Read/Write
LOAD:000000000020AC38 LOAD            segment byte public 'DATA' use64
LOAD:000000000020AC38                 assume cs:LOAD
LOAD:000000000020AC38                 ;org 20AC38h
LOAD:000000000020AC38 _DYNAMIC        Elf64_Dyn <1, 1>        ; DATA XREF: LOAD:0000000000000130↑o
LOAD:000000000020AC38                                         ; .got:_GLOBAL_OFFSET_TABLE_↓o
LOAD:000000000020AC38                                         ; DT_NEEDED libc.so.6
LOAD:000000000020AC48                 Elf64_Dyn <0Ch, 15B0h>  ; DT_INIT
LOAD:000000000020AC58                 Elf64_Dyn <0Dh, 6FF0h>  ; DT_FINI
LOAD:000000000020AC68                 Elf64_Dyn <19h, 20AA90h> ; DT_INIT_ARRAY
LOAD:000000000020AC78                 Elf64_Dyn <1Bh, 8>      ; DT_INIT_ARRAYSZ
LOAD:000000000020AC88                 Elf64_Dyn <1Ah, 20AA98h> ; DT_FINI_ARRAY
LOAD:000000000020AC98                 Elf64_Dyn <1Ch, 8>      ; DT_FINI_ARRAYSZ
LOAD:000000000020ACA8                 Elf64_Dyn <6FFFFEF5h, 298h> ; DT_GNU_HASH
LOAD:000000000020ACB8                 Elf64_Dyn <5, 8E0h>     ; DT_STRTAB
LOAD:000000000020ACC8                 Elf64_Dyn <6, 2E0h>     ; DT_SYMTAB
LOAD:000000000020ACD8                 Elf64_Dyn <0Ah, 306h>   ; DT_STRSZ
LOAD:000000000020ACE8                 Elf64_Dyn <0Bh, 18h>    ; DT_SYMENT
LOAD:000000000020ACF8                 Elf64_Dyn <15h, 0>      ; DT_DEBUG
LOAD:000000000020AD08                 Elf64_Dyn <3, 20AE28h>  ; DT_PLTGOT
LOAD:000000000020AD18                 Elf64_Dyn <2, 4B0h>     ; DT_PLTRELSZ
LOAD:000000000020AD28                 Elf64_Dyn <14h, 7>      ; DT_PLTREL
LOAD:000000000020AD38                 Elf64_Dyn <17h, 1100h>  ; DT_JMPREL
LOAD:000000000020AD48                 Elf64_Dyn <7, 0CC8h>    ; DT_RELA
LOAD:000000000020AD58                 Elf64_Dyn <8, 438h>     ; DT_RELASZ
LOAD:000000000020AD68                 Elf64_Dyn <9, 18h>      ; DT_RELAENT
LOAD:000000000020AD78                 Elf64_Dyn <1Eh, 8>      ; DT_FLAGS
LOAD:000000000020AD88                 Elf64_Dyn <6FFFFFFBh, 8000001h> ; DT_FLAGS_1
LOAD:000000000020AD98                 Elf64_Dyn <6FFFFFFEh, 0C68h> ; DT_VERNEED
LOAD:000000000020ADA8                 Elf64_Dyn <6FFFFFFFh, 1> ; DT_VERNEEDNUM
LOAD:000000000020ADB8                 Elf64_Dyn <6FFFFFF0h, 0BE6h> ; DT_VERSYM
LOAD:000000000020ADC8                 Elf64_Dyn <6FFFFFF9h, 22h> ; DT_RELACOUNT
LOAD:000000000020ADD8                 Elf64_Dyn <0>           ; DT_NULL
LOAD:000000000020ADE8                 db    0
LOAD:000000000020ADE9                 db    0
LOAD:000000000020ADEA                 db    0
LOAD:000000000020ADEB                 db    0
LOAD:000000000020ADEC                 db    0
LOAD:000000000020ADED                 db    0
LOAD:000000000020ADEE                 db    0
LOAD:000000000020ADEF                 db    0
LOAD:000000000020ADF0                 db    0
LOAD:000000000020ADF1                 db    0
LOAD:000000000020ADF2                 db    0
LOAD:000000000020ADF3                 db    0
LOAD:000000000020ADF4                 db    0
LOAD:000000000020ADF5                 db    0
LOAD:000000000020ADF6                 db    0
LOAD:000000000020ADF7                 db    0
LOAD:000000000020ADF8                 db    0
LOAD:000000000020ADF9                 db    0
LOAD:000000000020ADFA                 db    0
LOAD:000000000020ADFB                 db    0
LOAD:000000000020ADFC                 db    0
LOAD:000000000020ADFD                 db    0
LOAD:000000000020ADFE                 db    0
LOAD:000000000020ADFF                 db    0
LOAD:000000000020AE00                 db    0
LOAD:000000000020AE01                 db    0
LOAD:000000000020AE02                 db    0
LOAD:000000000020AE03                 db    0
LOAD:000000000020AE04                 db    0
LOAD:000000000020AE05                 db    0
LOAD:000000000020AE06                 db    0
LOAD:000000000020AE07                 db    0
LOAD:000000000020AE08                 db    0
LOAD:000000000020AE09                 db    0
LOAD:000000000020AE0A                 db    0
LOAD:000000000020AE0B                 db    0
LOAD:000000000020AE0C                 db    0
LOAD:000000000020AE0D                 db    0
LOAD:000000000020AE0E                 db    0
LOAD:000000000020AE0F                 db    0
LOAD:000000000020AE10                 db    0
LOAD:000000000020AE11                 db    0
LOAD:000000000020AE12                 db    0
LOAD:000000000020AE13                 db    0
LOAD:000000000020AE14                 db    0
LOAD:000000000020AE15                 db    0
LOAD:000000000020AE16                 db    0
LOAD:000000000020AE17                 db    0
LOAD:000000000020AE18                 db    0
LOAD:000000000020AE19                 db    0
LOAD:000000000020AE1A                 db    0
LOAD:000000000020AE1B                 db    0
LOAD:000000000020AE1C                 db    0
LOAD:000000000020AE1D                 db    0
LOAD:000000000020AE1E                 db    0
LOAD:000000000020AE1F                 db    0
LOAD:000000000020AE20                 db    0
LOAD:000000000020AE21                 db    0
LOAD:000000000020AE22                 db    0
LOAD:000000000020AE23                 db    0
LOAD:000000000020AE24                 db    0
LOAD:000000000020AE25                 db    0
LOAD:000000000020AE26                 db    0
LOAD:000000000020AE27                 db    0
LOAD:000000000020AE27 LOAD            ends
LOAD:000000000020AE27
.got:000000000020AE28 ; ===========================================================================
.got:000000000020AE28
.got:000000000020AE28 ; Segment type: Pure data
.got:000000000020AE28 ; Segment permissions: Read/Write
.got:000000000020AE28 _got            segment qword public 'DATA' use64
.got:000000000020AE28                 assume cs:_got
.got:000000000020AE28                 ;org 20AE28h
.got:000000000020AE28 _GLOBAL_OFFSET_TABLE_ dq offset _DYNAMIC
.got:000000000020AE30 qword_20AE30    dq 0                    ; DATA XREF: sub_15D0↑r
.got:000000000020AE38 qword_20AE38    dq 0                    ; DATA XREF: sub_15D0+6↑r
.got:000000000020AE40 __ctype_toupper_loc_ptr dq offset __ctype_toupper_loc
.got:000000000020AE40                                         ; DATA XREF: ___ctype_toupper_loc↑r
.got:000000000020AE48 free_ptr        dq offset free          ; DATA XREF: _free↑r
.got:000000000020AE50 abort_ptr       dq offset abort         ; DATA XREF: _abort↑r
.got:000000000020AE58 __errno_location_ptr dq offset __errno_location
.got:000000000020AE58                                         ; DATA XREF: ___errno_location↑r
.got:000000000020AE60 strncmp_ptr     dq offset strncmp       ; DATA XREF: _strncmp↑r
.got:000000000020AE68 _exit_ptr       dq offset _exit         ; DATA XREF: __exit↑r
.got:000000000020AE70 __fpending_ptr  dq offset __fpending    ; DATA XREF: ___fpending↑r
.got:000000000020AE78 textdomain_ptr  dq offset textdomain    ; DATA XREF: _textdomain↑r
.got:000000000020AE80 fclose_ptr      dq offset fclose        ; DATA XREF: _fclose↑r
.got:000000000020AE88 bindtextdomain_ptr dq offset bindtextdomain
.got:000000000020AE88                                         ; DATA XREF: _bindtextdomain↑r
.got:000000000020AE90 stpcpy_ptr      dq offset stpcpy        ; DATA XREF: _stpcpy↑r
.got:000000000020AE98 dcgettext_ptr   dq offset dcgettext     ; DATA XREF: _dcgettext↑r
.got:000000000020AEA0 __ctype_get_mb_cur_max_ptr dq offset __ctype_get_mb_cur_max
.got:000000000020AEA0                                         ; DATA XREF: ___ctype_get_mb_cur_max↑r
.got:000000000020AEA8 strlen_ptr      dq offset strlen        ; DATA XREF: _strlen↑r
.got:000000000020AEB0 __stack_chk_fail_ptr dq offset __stack_chk_fail
.got:000000000020AEB0                                         ; DATA XREF: ___stack_chk_fail↑r
.got:000000000020AEB8 getopt_long_ptr dq offset getopt_long   ; DATA XREF: _getopt_long↑r
.got:000000000020AEC0 mbrtowc_ptr     dq offset mbrtowc       ; DATA XREF: _mbrtowc↑r
.got:000000000020AEC8 strchr_ptr      dq offset strchr        ; DATA XREF: _strchr↑r
.got:000000000020AED0 strrchr_ptr     dq offset strrchr       ; DATA XREF: _strrchr↑r
.got:000000000020AED8 lseek_ptr       dq offset lseek         ; DATA XREF: _lseek↑r
.got:000000000020AEE0 __assert_fail_ptr dq offset __assert_fail
.got:000000000020AEE0                                         ; DATA XREF: ___assert_fail↑r
.got:000000000020AEE8 __strtoul_internal_ptr dq offset __strtoul_internal
.got:000000000020AEE8                                         ; DATA XREF: ___strtoul_internal↑r
.got:000000000020AEF0 memset_ptr      dq offset memset        ; DATA XREF: _memset↑r
.got:000000000020AEF8 close_ptr       dq offset close         ; DATA XREF: _close↑r
.got:000000000020AF00 posix_fadvise_ptr dq offset posix_fadvise
.got:000000000020AF00                                         ; DATA XREF: _posix_fadvise↑r
.got:000000000020AF08 read_ptr        dq offset read          ; DATA XREF: _read↑r
.got:000000000020AF10 memcmp_ptr      dq offset memcmp        ; DATA XREF: _memcmp↑r
.got:000000000020AF18 fputs_unlocked_ptr dq offset fputs_unlocked
.got:000000000020AF18                                         ; DATA XREF: _fputs_unlocked↑r
.got:000000000020AF20 calloc_ptr      dq offset calloc        ; DATA XREF: _calloc↑r
.got:000000000020AF28 memcpy_ptr      dq offset memcpy        ; DATA XREF: _memcpy↑r
.got:000000000020AF30 fileno_ptr      dq offset fileno        ; DATA XREF: _fileno↑r
.got:000000000020AF38 malloc_ptr      dq offset malloc        ; DATA XREF: _malloc↑r
.got:000000000020AF40 fflush_ptr      dq offset fflush        ; DATA XREF: _fflush↑r
.got:000000000020AF48 nl_langinfo_ptr dq offset nl_langinfo   ; DATA XREF: _nl_langinfo↑r
.got:000000000020AF50 __freading_ptr  dq offset __freading    ; DATA XREF: ___freading↑r
.got:000000000020AF58 fwrite_unlocked_ptr dq offset fwrite_unlocked
.got:000000000020AF58                                         ; DATA XREF: _fwrite_unlocked↑r
.got:000000000020AF60 realloc_ptr     dq offset realloc       ; DATA XREF: _realloc↑r
.got:000000000020AF68 setlocale_ptr   dq offset setlocale     ; DATA XREF: _setlocale↑r
.got:000000000020AF70 __printf_chk_ptr dq offset __printf_chk ; DATA XREF: ___printf_chk↑r
.got:000000000020AF78 error_ptr       dq offset error         ; DATA XREF: _error↑r
.got:000000000020AF80 fseeko_ptr      dq offset fseeko        ; DATA XREF: _fseeko↑r
.got:000000000020AF88 __cxa_atexit_ptr dq offset __cxa_atexit ; DATA XREF: ___cxa_atexit↑r
.got:000000000020AF90 exit_ptr        dq offset exit          ; DATA XREF: _exit↑r
.got:000000000020AF98 fwrite_ptr      dq offset fwrite        ; DATA XREF: _fwrite↑r
.got:000000000020AFA0 __fprintf_chk_ptr dq offset __fprintf_chk
.got:000000000020AFA0                                         ; DATA XREF: ___fprintf_chk↑r
.got:000000000020AFA8 mbsinit_ptr     dq offset mbsinit       ; DATA XREF: _mbsinit↑r
.got:000000000020AFB0 iswprint_ptr    dq offset iswprint      ; DATA XREF: _iswprint↑r
.got:000000000020AFB8 __ctype_tolower_loc_ptr dq offset __ctype_tolower_loc
.got:000000000020AFB8                                         ; DATA XREF: ___ctype_tolower_loc↑r
.got:000000000020AFC0 __ctype_b_loc_ptr dq offset __ctype_b_loc
.got:000000000020AFC0                                         ; DATA XREF: ___ctype_b_loc↑r
.got:000000000020AFC8 __sprintf_chk_ptr dq offset __sprintf_chk
.got:000000000020AFC8                                         ; DATA XREF: ___sprintf_chk↑r
.got:000000000020AFD0 _ITM_deregisterTMCloneTable_ptr dq offset _ITM_deregisterTMCloneTable
.got:000000000020AFD0                                         ; DATA XREF: deregister_tm_clones+17↑r
.got:000000000020AFD8 __libc_start_main_ptr dq offset __libc_start_main
.got:000000000020AFD8                                         ; DATA XREF: start+24↑r
.got:000000000020AFE0 __gmon_start___ptr dq offset __gmon_start__
.got:000000000020AFE0                                         ; DATA XREF: _init_proc+4↑r
.got:000000000020AFE8 _ITM_registerTMCloneTable_ptr dq offset _ITM_registerTMCloneTable
.got:000000000020AFE8                                         ; DATA XREF: register_tm_clones+28↑r
.got:000000000020AFF0 __cxa_finalize_ptr dq offset __imp___cxa_finalize
.got:000000000020AFF0                                         ; DATA XREF: __cxa_finalize↑r
.got:000000000020AFF0                                         ; __do_global_dtors_aux+9↑r
.got:000000000020AFF0 _got            ends
.got:000000000020AFF0
LOAD:000000000020AFF8 ; ===========================================================================
LOAD:000000000020AFF8
LOAD:000000000020AFF8 ; Segment type: Pure data
LOAD:000000000020AFF8 ; Segment permissions: Read/Write
LOAD:000000000020AFF8 LOAD            segment byte public 'DATA' use64
LOAD:000000000020AFF8                 assume cs:LOAD
LOAD:000000000020AFF8                 ;org 20AFF8h
LOAD:000000000020AFF8                 align 20h
LOAD:000000000020AFF8 LOAD            ends
LOAD:000000000020AFF8
.data:000000000020B000 ; ===========================================================================
.data:000000000020B000
.data:000000000020B000 ; Segment type: Pure data
.data:000000000020B000 ; Segment permissions: Read/Write
.data:000000000020B000 _data           segment align_32 public 'DATA' use64
.data:000000000020B000                 assume cs:_data
.data:000000000020B000                 ;org 20B000h
.data:000000000020B000                 public __data_start ; weak
.data:000000000020B000 __data_start    db    0                 ; Alternative name is '__data_start'
.data:000000000020B000                                         ; data_start
.data:000000000020B001                 db    0
.data:000000000020B002                 db    0
.data:000000000020B003                 db    0
.data:000000000020B004                 db    0
.data:000000000020B005                 db    0
.data:000000000020B006                 db    0
.data:000000000020B007                 db    0
.data:000000000020B008                 public __dso_handle
.data:000000000020B008 ; void *_dso_handle
.data:000000000020B008 __dso_handle    dq offset __dso_handle  ; DATA XREF: __do_global_dtors_aux+17↑r
.data:000000000020B008                                         ; atexit↑r ...
.data:000000000020B010                 public Version
.data:000000000020B010 Version         dq offset a831          ; DATA XREF: main+FF↑r
.data:000000000020B010                                         ; "8.31"
.data:000000000020B018                 public exit_failure
.data:000000000020B018 ; int exit_failure
.data:000000000020B018 exit_failure    dd 1                    ; DATA XREF: close_stdout:loc_41C2↑r
.data:000000000020B018                                         ; xalloc_die+17↑r
.data:000000000020B01C                 align 20h
.data:000000000020B020                 public quote_quoting_options
.data:000000000020B020 quote_quoting_options db    8           ; DATA XREF: quote_n_mem↑o
.data:000000000020B020                                         ; quote_mem↑o ...
.data:000000000020B021                 db    0
.data:000000000020B022                 db    0
.data:000000000020B023                 db    0
.data:000000000020B024                 db    0
.data:000000000020B025                 db    0
.data:000000000020B026                 db    0
.data:000000000020B027                 db    0
.data:000000000020B028                 db    0
.data:000000000020B029                 db    0
.data:000000000020B02A                 db    0
.data:000000000020B02B                 db    0
.data:000000000020B02C                 db    0
.data:000000000020B02D                 db    0
.data:000000000020B02E                 db    0
.data:000000000020B02F                 db    0
.data:000000000020B030                 db    0
.data:000000000020B031                 db    0
.data:000000000020B032                 db    0
.data:000000000020B033                 db    0
.data:000000000020B034                 db    0
.data:000000000020B035                 db    0
.data:000000000020B036                 db    0
.data:000000000020B037                 db    0
.data:000000000020B038                 db    0
.data:000000000020B039                 db    0
.data:000000000020B03A                 db    0
.data:000000000020B03B                 db    0
.data:000000000020B03C                 db    0
.data:000000000020B03D                 db    0
.data:000000000020B03E                 db    0
.data:000000000020B03F                 db    0
.data:000000000020B040                 db    0
.data:000000000020B041                 db    0
.data:000000000020B042                 db    0
.data:000000000020B043                 db    0
.data:000000000020B044                 db    0
.data:000000000020B045                 db    0
.data:000000000020B046                 db    0
.data:000000000020B047                 db    0
.data:000000000020B048                 db    0
.data:000000000020B049                 db    0
.data:000000000020B04A                 db    0
.data:000000000020B04B                 db    0
.data:000000000020B04C                 db    0
.data:000000000020B04D                 db    0
.data:000000000020B04E                 db    0
.data:000000000020B04F                 db    0
.data:000000000020B050                 db    0
.data:000000000020B051                 db    0
.data:000000000020B052                 db    0
.data:000000000020B053                 db    0
.data:000000000020B054                 db    0
.data:000000000020B055                 db    0
.data:000000000020B056                 db    0
.data:000000000020B057                 db    0
.data:000000000020B058 nslots          dd 1                    ; DATA XREF: quotearg_n_options+3A↑r
.data:000000000020B058                                         ; quotearg_n_options:loc_567D↑r ...
.data:000000000020B05C                 align 20h
.data:000000000020B060 ; void *slotvec
.data:000000000020B060 slotvec         dq offset slotvec0      ; DATA XREF: quotearg_n_options+29↑r
.data:000000000020B060                                         ; quotearg_n_options+76↑w ...
.data:000000000020B068                 align 10h
.data:000000000020B070 slotvec0        dq offset qword_100     ; DATA XREF: quotearg_n_options+54↑o
.data:000000000020B070                                         ; quotearg_n_options+187↑r ...
.data:000000000020B078 off_20B078      dq offset slot0         ; DATA XREF: quotearg_free+62↑w
.data:000000000020B078 _data           ends
.data:000000000020B078
.bss:000000000020B080 ; ===========================================================================
.bss:000000000020B080
.bss:000000000020B080 ; Segment type: Uninitialized
.bss:000000000020B080 ; Segment permissions: Read/Write
.bss:000000000020B080 _bss            segment align_32 public 'BSS' use64
.bss:000000000020B080                 assume cs:_bss
.bss:000000000020B080                 ;org 20B080h
.bss:000000000020B080                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:000000000020B080                 public __bss_start ; weak
.bss:000000000020B080 __bss_start     dq ?                    ; DATA XREF: LOAD:0000000000000838↑o
.bss:000000000020B080                                         ; LOAD:0000000000000898↑o ...
.bss:000000000020B080                                         ; Alternative name is '__TMC_END__'
.bss:000000000020B080                                         ; program_invocation_short_name@@GLIBC_2.2.5
.bss:000000000020B080                                         ; _edata
.bss:000000000020B080                                         ; Copy of shared data
.bss:000000000020B088                 public stdout@@GLIBC_2_2_5
.bss:000000000020B088 ; FILE *stdout
.bss:000000000020B088 stdout@@GLIBC_2_2_5 dq ?                ; DATA XREF: LOAD:0000000000000820↑o
.bss:000000000020B088                                         ; main:loc_1A38↑r ...
.bss:000000000020B088                                         ; Alternative name is 'stdout'
.bss:000000000020B088                                         ; Copy of shared data
.bss:000000000020B090                 public stdin@@GLIBC_2_2_5
.bss:000000000020B090 stdin@@GLIBC_2_2_5 dq ?                 ; DATA XREF: LOAD:0000000000000850↑o
.bss:000000000020B090                                         ; main:loc_1ED1↑r
.bss:000000000020B090                                         ; Alternative name is 'stdin'
.bss:000000000020B090                                         ; Copy of shared data
.bss:000000000020B098                 public optind@@GLIBC_2_2_5
.bss:000000000020B098 optind@@GLIBC_2_2_5 dd ?                ; DATA XREF: LOAD:00000000000008C8↑o
.bss:000000000020B098                                         ; main:loc_1AC4↑r ...
.bss:000000000020B098                                         ; Alternative name is 'optind'
.bss:000000000020B098                                         ; Copy of shared data
.bss:000000000020B09C                 align 20h
.bss:000000000020B0A0                 public program_invocation_name@@GLIBC_2_2_5 ; weak
.bss:000000000020B0A0 program_invocation_name@@GLIBC_2_2_5 dq ?
.bss:000000000020B0A0                                         ; DATA XREF: LOAD:0000000000000868↑o
.bss:000000000020B0A0                                         ; LOAD:0000000000000880↑o ...
.bss:000000000020B0A0                                         ; Alternative name is '__progname_full@@GLIBC_2.2.5'
.bss:000000000020B0A0                                         ; Copy of shared data
.bss:000000000020B0A8                 align 20h
.bss:000000000020B0C0                 public stderr@@GLIBC_2_2_5
.bss:000000000020B0C0 ; FILE *stderr
.bss:000000000020B0C0 stderr@@GLIBC_2_2_5 dq ?                ; DATA XREF: LOAD:00000000000008B0↑o
.bss:000000000020B0C0                                         ; main+C99↑r ...
.bss:000000000020B0C0                                         ; Alternative name is 'stderr'
.bss:000000000020B0C0                                         ; Copy of shared data
.bss:000000000020B0C8 completed_7697  db ?                    ; DATA XREF: __do_global_dtors_aux↑r
.bss:000000000020B0C8                                         ; __do_global_dtors_aux+28↑w
.bss:000000000020B0C9                 align 20h
.bss:000000000020B0E0 xlate           db    ? ;               ; DATA XREF: main+667↑o
.bss:000000000020B0E0                                         ; main+993↑o ...
.bss:000000000020B0E1                 db    ? ;
.bss:000000000020B0E2                 db    ? ;
.bss:000000000020B0E3                 db    ? ;
.bss:000000000020B0E4                 db    ? ;
.bss:000000000020B0E5                 db    ? ;
.bss:000000000020B0E6                 db    ? ;
.bss:000000000020B0E7                 db    ? ;
.bss:000000000020B0E8                 db    ? ;
.bss:000000000020B0E9                 db    ? ;
.bss:000000000020B0EA                 db    ? ;
.bss:000000000020B0EB                 db    ? ;
.bss:000000000020B0EC                 db    ? ;
.bss:000000000020B0ED                 db    ? ;
.bss:000000000020B0EE                 db    ? ;
.bss:000000000020B0EF                 db    ? ;
.bss:000000000020B0F0                 db    ? ;
.bss:000000000020B0F1                 db    ? ;
.bss:000000000020B0F2                 db    ? ;
.bss:000000000020B0F3                 db    ? ;
.bss:000000000020B0F4                 db    ? ;
.bss:000000000020B0F5                 db    ? ;
.bss:000000000020B0F6                 db    ? ;
.bss:000000000020B0F7                 db    ? ;
.bss:000000000020B0F8                 db    ? ;
.bss:000000000020B0F9                 db    ? ;
.bss:000000000020B0FA                 db    ? ;
.bss:000000000020B0FB                 db    ? ;
.bss:000000000020B0FC                 db    ? ;
.bss:000000000020B0FD                 db    ? ;
.bss:000000000020B0FE                 db    ? ;
.bss:000000000020B0FF                 db    ? ;
.bss:000000000020B100                 db    ? ;
.bss:000000000020B101                 db    ? ;
.bss:000000000020B102                 db    ? ;
.bss:000000000020B103                 db    ? ;
.bss:000000000020B104                 db    ? ;
.bss:000000000020B105                 db    ? ;
.bss:000000000020B106                 db    ? ;
.bss:000000000020B107                 db    ? ;
.bss:000000000020B108                 db    ? ;
.bss:000000000020B109                 db    ? ;
.bss:000000000020B10A                 db    ? ;
.bss:000000000020B10B                 db    ? ;
.bss:000000000020B10C                 db    ? ;
.bss:000000000020B10D                 db    ? ;
.bss:000000000020B10E                 db    ? ;
.bss:000000000020B10F                 db    ? ;
.bss:000000000020B110                 db    ? ;
.bss:000000000020B111                 db    ? ;
.bss:000000000020B112                 db    ? ;
.bss:000000000020B113                 db    ? ;
.bss:000000000020B114                 db    ? ;
.bss:000000000020B115                 db    ? ;
.bss:000000000020B116                 db    ? ;
.bss:000000000020B117                 db    ? ;
.bss:000000000020B118                 db    ? ;
.bss:000000000020B119                 db    ? ;
.bss:000000000020B11A                 db    ? ;
.bss:000000000020B11B                 db    ? ;
.bss:000000000020B11C                 db    ? ;
.bss:000000000020B11D                 db    ? ;
.bss:000000000020B11E                 db    ? ;
.bss:000000000020B11F                 db    ? ;
.bss:000000000020B120                 db    ? ;
.bss:000000000020B121                 db    ? ;
.bss:000000000020B122                 db    ? ;
.bss:000000000020B123                 db    ? ;
.bss:000000000020B124                 db    ? ;
.bss:000000000020B125                 db    ? ;
.bss:000000000020B126                 db    ? ;
.bss:000000000020B127                 db    ? ;
.bss:000000000020B128                 db    ? ;
.bss:000000000020B129                 db    ? ;
.bss:000000000020B12A                 db    ? ;
.bss:000000000020B12B                 db    ? ;
.bss:000000000020B12C                 db    ? ;
.bss:000000000020B12D                 db    ? ;
.bss:000000000020B12E                 db    ? ;
.bss:000000000020B12F                 db    ? ;
.bss:000000000020B130                 db    ? ;
.bss:000000000020B131                 db    ? ;
.bss:000000000020B132                 db    ? ;
.bss:000000000020B133                 db    ? ;
.bss:000000000020B134                 db    ? ;
.bss:000000000020B135                 db    ? ;
.bss:000000000020B136                 db    ? ;
.bss:000000000020B137                 db    ? ;
.bss:000000000020B138                 db    ? ;
.bss:000000000020B139                 db    ? ;
.bss:000000000020B13A                 db    ? ;
.bss:000000000020B13B                 db    ? ;
.bss:000000000020B13C                 db    ? ;
.bss:000000000020B13D                 db    ? ;
.bss:000000000020B13E                 db    ? ;
.bss:000000000020B13F                 db    ? ;
.bss:000000000020B140                 db    ? ;
.bss:000000000020B141                 db    ? ;
.bss:000000000020B142                 db    ? ;
.bss:000000000020B143                 db    ? ;
.bss:000000000020B144                 db    ? ;
.bss:000000000020B145                 db    ? ;
.bss:000000000020B146                 db    ? ;
.bss:000000000020B147                 db    ? ;
.bss:000000000020B148                 db    ? ;
.bss:000000000020B149                 db    ? ;
.bss:000000000020B14A                 db    ? ;
.bss:000000000020B14B                 db    ? ;
.bss:000000000020B14C                 db    ? ;
.bss:000000000020B14D                 db    ? ;
.bss:000000000020B14E                 db    ? ;
.bss:000000000020B14F                 db    ? ;
.bss:000000000020B150                 db    ? ;
.bss:000000000020B151                 db    ? ;
.bss:000000000020B152                 db    ? ;
.bss:000000000020B153                 db    ? ;
.bss:000000000020B154                 db    ? ;
.bss:000000000020B155                 db    ? ;
.bss:000000000020B156                 db    ? ;
.bss:000000000020B157                 db    ? ;
.bss:000000000020B158                 db    ? ;
.bss:000000000020B159                 db    ? ;
.bss:000000000020B15A                 db    ? ;
.bss:000000000020B15B                 db    ? ;
.bss:000000000020B15C                 db    ? ;
.bss:000000000020B15D                 db    ? ;
.bss:000000000020B15E                 db    ? ;
.bss:000000000020B15F                 db    ? ;
.bss:000000000020B160                 db    ? ;
.bss:000000000020B161                 db    ? ;
.bss:000000000020B162                 db    ? ;
.bss:000000000020B163                 db    ? ;
.bss:000000000020B164                 db    ? ;
.bss:000000000020B165                 db    ? ;
.bss:000000000020B166                 db    ? ;
.bss:000000000020B167                 db    ? ;
.bss:000000000020B168                 db    ? ;
.bss:000000000020B169                 db    ? ;
.bss:000000000020B16A                 db    ? ;
.bss:000000000020B16B                 db    ? ;
.bss:000000000020B16C                 db    ? ;
.bss:000000000020B16D                 db    ? ;
.bss:000000000020B16E                 db    ? ;
.bss:000000000020B16F                 db    ? ;
.bss:000000000020B170                 db    ? ;
.bss:000000000020B171                 db    ? ;
.bss:000000000020B172                 db    ? ;
.bss:000000000020B173                 db    ? ;
.bss:000000000020B174                 db    ? ;
.bss:000000000020B175                 db    ? ;
.bss:000000000020B176                 db    ? ;
.bss:000000000020B177                 db    ? ;
.bss:000000000020B178                 db    ? ;
.bss:000000000020B179                 db    ? ;
.bss:000000000020B17A                 db    ? ;
.bss:000000000020B17B                 db    ? ;
.bss:000000000020B17C                 db    ? ;
.bss:000000000020B17D                 db    ? ;
.bss:000000000020B17E                 db    ? ;
.bss:000000000020B17F                 db    ? ;
.bss:000000000020B180                 db    ? ;
.bss:000000000020B181                 db    ? ;
.bss:000000000020B182                 db    ? ;
.bss:000000000020B183                 db    ? ;
.bss:000000000020B184                 db    ? ;
.bss:000000000020B185                 db    ? ;
.bss:000000000020B186                 db    ? ;
.bss:000000000020B187                 db    ? ;
.bss:000000000020B188                 db    ? ;
.bss:000000000020B189                 db    ? ;
.bss:000000000020B18A                 db    ? ;
.bss:000000000020B18B                 db    ? ;
.bss:000000000020B18C                 db    ? ;
.bss:000000000020B18D                 db    ? ;
.bss:000000000020B18E                 db    ? ;
.bss:000000000020B18F                 db    ? ;
.bss:000000000020B190                 db    ? ;
.bss:000000000020B191                 db    ? ;
.bss:000000000020B192                 db    ? ;
.bss:000000000020B193                 db    ? ;
.bss:000000000020B194                 db    ? ;
.bss:000000000020B195                 db    ? ;
.bss:000000000020B196                 db    ? ;
.bss:000000000020B197                 db    ? ;
.bss:000000000020B198                 db    ? ;
.bss:000000000020B199                 db    ? ;
.bss:000000000020B19A                 db    ? ;
.bss:000000000020B19B                 db    ? ;
.bss:000000000020B19C                 db    ? ;
.bss:000000000020B19D                 db    ? ;
.bss:000000000020B19E                 db    ? ;
.bss:000000000020B19F                 db    ? ;
.bss:000000000020B1A0                 db    ? ;
.bss:000000000020B1A1                 db    ? ;
.bss:000000000020B1A2                 db    ? ;
.bss:000000000020B1A3                 db    ? ;
.bss:000000000020B1A4                 db    ? ;
.bss:000000000020B1A5                 db    ? ;
.bss:000000000020B1A6                 db    ? ;
.bss:000000000020B1A7                 db    ? ;
.bss:000000000020B1A8                 db    ? ;
.bss:000000000020B1A9                 db    ? ;
.bss:000000000020B1AA                 db    ? ;
.bss:000000000020B1AB                 db    ? ;
.bss:000000000020B1AC                 db    ? ;
.bss:000000000020B1AD                 db    ? ;
.bss:000000000020B1AE                 db    ? ;
.bss:000000000020B1AF                 db    ? ;
.bss:000000000020B1B0                 db    ? ;
.bss:000000000020B1B1                 db    ? ;
.bss:000000000020B1B2                 db    ? ;
.bss:000000000020B1B3                 db    ? ;
.bss:000000000020B1B4                 db    ? ;
.bss:000000000020B1B5                 db    ? ;
.bss:000000000020B1B6                 db    ? ;
.bss:000000000020B1B7                 db    ? ;
.bss:000000000020B1B8                 db    ? ;
.bss:000000000020B1B9                 db    ? ;
.bss:000000000020B1BA                 db    ? ;
.bss:000000000020B1BB                 db    ? ;
.bss:000000000020B1BC                 db    ? ;
.bss:000000000020B1BD                 db    ? ;
.bss:000000000020B1BE                 db    ? ;
.bss:000000000020B1BF                 db    ? ;
.bss:000000000020B1C0                 db    ? ;
.bss:000000000020B1C1                 db    ? ;
.bss:000000000020B1C2                 db    ? ;
.bss:000000000020B1C3                 db    ? ;
.bss:000000000020B1C4                 db    ? ;
.bss:000000000020B1C5                 db    ? ;
.bss:000000000020B1C6                 db    ? ;
.bss:000000000020B1C7                 db    ? ;
.bss:000000000020B1C8                 db    ? ;
.bss:000000000020B1C9                 db    ? ;
.bss:000000000020B1CA                 db    ? ;
.bss:000000000020B1CB                 db    ? ;
.bss:000000000020B1CC                 db    ? ;
.bss:000000000020B1CD                 db    ? ;
.bss:000000000020B1CE                 db    ? ;
.bss:000000000020B1CF                 db    ? ;
.bss:000000000020B1D0                 db    ? ;
.bss:000000000020B1D1                 db    ? ;
.bss:000000000020B1D2                 db    ? ;
.bss:000000000020B1D3                 db    ? ;
.bss:000000000020B1D4                 db    ? ;
.bss:000000000020B1D5                 db    ? ;
.bss:000000000020B1D6                 db    ? ;
.bss:000000000020B1D7                 db    ? ;
.bss:000000000020B1D8                 db    ? ;
.bss:000000000020B1D9                 db    ? ;
.bss:000000000020B1DA                 db    ? ;
.bss:000000000020B1DB                 db    ? ;
.bss:000000000020B1DC                 db    ? ;
.bss:000000000020B1DD                 db    ? ;
.bss:000000000020B1DE                 db    ? ;
.bss:000000000020B1DF                 db    ? ;
.bss:000000000020B1E0 in_delete_set   db    ? ;               ; DATA XREF: main+5D7↑o
.bss:000000000020B1E0                                         ; main:loc_22C7↑o ...
.bss:000000000020B1E1                 db    ? ;
.bss:000000000020B1E2                 db    ? ;
.bss:000000000020B1E3                 db    ? ;
.bss:000000000020B1E4                 db    ? ;
.bss:000000000020B1E5                 db    ? ;
.bss:000000000020B1E6                 db    ? ;
.bss:000000000020B1E7                 db    ? ;
.bss:000000000020B1E8                 db    ? ;
.bss:000000000020B1E9                 db    ? ;
.bss:000000000020B1EA                 db    ? ;
.bss:000000000020B1EB                 db    ? ;
.bss:000000000020B1EC                 db    ? ;
.bss:000000000020B1ED                 db    ? ;
.bss:000000000020B1EE                 db    ? ;
.bss:000000000020B1EF                 db    ? ;
.bss:000000000020B1F0                 db    ? ;
.bss:000000000020B1F1                 db    ? ;
.bss:000000000020B1F2                 db    ? ;
.bss:000000000020B1F3                 db    ? ;
.bss:000000000020B1F4                 db    ? ;
.bss:000000000020B1F5                 db    ? ;
.bss:000000000020B1F6                 db    ? ;
.bss:000000000020B1F7                 db    ? ;
.bss:000000000020B1F8                 db    ? ;
.bss:000000000020B1F9                 db    ? ;
.bss:000000000020B1FA                 db    ? ;
.bss:000000000020B1FB                 db    ? ;
.bss:000000000020B1FC                 db    ? ;
.bss:000000000020B1FD                 db    ? ;
.bss:000000000020B1FE                 db    ? ;
.bss:000000000020B1FF                 db    ? ;
.bss:000000000020B200                 db    ? ;
.bss:000000000020B201                 db    ? ;
.bss:000000000020B202                 db    ? ;
.bss:000000000020B203                 db    ? ;
.bss:000000000020B204                 db    ? ;
.bss:000000000020B205                 db    ? ;
.bss:000000000020B206                 db    ? ;
.bss:000000000020B207                 db    ? ;
.bss:000000000020B208                 db    ? ;
.bss:000000000020B209                 db    ? ;
.bss:000000000020B20A                 db    ? ;
.bss:000000000020B20B                 db    ? ;
.bss:000000000020B20C                 db    ? ;
.bss:000000000020B20D                 db    ? ;
.bss:000000000020B20E                 db    ? ;
.bss:000000000020B20F                 db    ? ;
.bss:000000000020B210                 db    ? ;
.bss:000000000020B211                 db    ? ;
.bss:000000000020B212                 db    ? ;
.bss:000000000020B213                 db    ? ;
.bss:000000000020B214                 db    ? ;
.bss:000000000020B215                 db    ? ;
.bss:000000000020B216                 db    ? ;
.bss:000000000020B217                 db    ? ;
.bss:000000000020B218                 db    ? ;
.bss:000000000020B219                 db    ? ;
.bss:000000000020B21A                 db    ? ;
.bss:000000000020B21B                 db    ? ;
.bss:000000000020B21C                 db    ? ;
.bss:000000000020B21D                 db    ? ;
.bss:000000000020B21E                 db    ? ;
.bss:000000000020B21F                 db    ? ;
.bss:000000000020B220                 db    ? ;
.bss:000000000020B221                 db    ? ;
.bss:000000000020B222                 db    ? ;
.bss:000000000020B223                 db    ? ;
.bss:000000000020B224                 db    ? ;
.bss:000000000020B225                 db    ? ;
.bss:000000000020B226                 db    ? ;
.bss:000000000020B227                 db    ? ;
.bss:000000000020B228                 db    ? ;
.bss:000000000020B229                 db    ? ;
.bss:000000000020B22A                 db    ? ;
.bss:000000000020B22B                 db    ? ;
.bss:000000000020B22C                 db    ? ;
.bss:000000000020B22D                 db    ? ;
.bss:000000000020B22E                 db    ? ;
.bss:000000000020B22F                 db    ? ;
.bss:000000000020B230                 db    ? ;
.bss:000000000020B231                 db    ? ;
.bss:000000000020B232                 db    ? ;
.bss:000000000020B233                 db    ? ;
.bss:000000000020B234                 db    ? ;
.bss:000000000020B235                 db    ? ;
.bss:000000000020B236                 db    ? ;
.bss:000000000020B237                 db    ? ;
.bss:000000000020B238                 db    ? ;
.bss:000000000020B239                 db    ? ;
.bss:000000000020B23A                 db    ? ;
.bss:000000000020B23B                 db    ? ;
.bss:000000000020B23C                 db    ? ;
.bss:000000000020B23D                 db    ? ;
.bss:000000000020B23E                 db    ? ;
.bss:000000000020B23F                 db    ? ;
.bss:000000000020B240                 db    ? ;
.bss:000000000020B241                 db    ? ;
.bss:000000000020B242                 db    ? ;
.bss:000000000020B243                 db    ? ;
.bss:000000000020B244                 db    ? ;
.bss:000000000020B245                 db    ? ;
.bss:000000000020B246                 db    ? ;
.bss:000000000020B247                 db    ? ;
.bss:000000000020B248                 db    ? ;
.bss:000000000020B249                 db    ? ;
.bss:000000000020B24A                 db    ? ;
.bss:000000000020B24B                 db    ? ;
.bss:000000000020B24C                 db    ? ;
.bss:000000000020B24D                 db    ? ;
.bss:000000000020B24E                 db    ? ;
.bss:000000000020B24F                 db    ? ;
.bss:000000000020B250                 db    ? ;
.bss:000000000020B251                 db    ? ;
.bss:000000000020B252                 db    ? ;
.bss:000000000020B253                 db    ? ;
.bss:000000000020B254                 db    ? ;
.bss:000000000020B255                 db    ? ;
.bss:000000000020B256                 db    ? ;
.bss:000000000020B257                 db    ? ;
.bss:000000000020B258                 db    ? ;
.bss:000000000020B259                 db    ? ;
.bss:000000000020B25A                 db    ? ;
.bss:000000000020B25B                 db    ? ;
.bss:000000000020B25C                 db    ? ;
.bss:000000000020B25D                 db    ? ;
.bss:000000000020B25E                 db    ? ;
.bss:000000000020B25F                 db    ? ;
.bss:000000000020B260                 db    ? ;
.bss:000000000020B261                 db    ? ;
.bss:000000000020B262                 db    ? ;
.bss:000000000020B263                 db    ? ;
.bss:000000000020B264                 db    ? ;
.bss:000000000020B265                 db    ? ;
.bss:000000000020B266                 db    ? ;
.bss:000000000020B267                 db    ? ;
.bss:000000000020B268                 db    ? ;
.bss:000000000020B269                 db    ? ;
.bss:000000000020B26A                 db    ? ;
.bss:000000000020B26B                 db    ? ;
.bss:000000000020B26C                 db    ? ;
.bss:000000000020B26D                 db    ? ;
.bss:000000000020B26E                 db    ? ;
.bss:000000000020B26F                 db    ? ;
.bss:000000000020B270                 db    ? ;
.bss:000000000020B271                 db    ? ;
.bss:000000000020B272                 db    ? ;
.bss:000000000020B273                 db    ? ;
.bss:000000000020B274                 db    ? ;
.bss:000000000020B275                 db    ? ;
.bss:000000000020B276                 db    ? ;
.bss:000000000020B277                 db    ? ;
.bss:000000000020B278                 db    ? ;
.bss:000000000020B279                 db    ? ;
.bss:000000000020B27A                 db    ? ;
.bss:000000000020B27B                 db    ? ;
.bss:000000000020B27C                 db    ? ;
.bss:000000000020B27D                 db    ? ;
.bss:000000000020B27E                 db    ? ;
.bss:000000000020B27F                 db    ? ;
.bss:000000000020B280                 db    ? ;
.bss:000000000020B281                 db    ? ;
.bss:000000000020B282                 db    ? ;
.bss:000000000020B283                 db    ? ;
.bss:000000000020B284                 db    ? ;
.bss:000000000020B285                 db    ? ;
.bss:000000000020B286                 db    ? ;
.bss:000000000020B287                 db    ? ;
.bss:000000000020B288                 db    ? ;
.bss:000000000020B289                 db    ? ;
.bss:000000000020B28A                 db    ? ;
.bss:000000000020B28B                 db    ? ;
.bss:000000000020B28C                 db    ? ;
.bss:000000000020B28D                 db    ? ;
.bss:000000000020B28E                 db    ? ;
.bss:000000000020B28F                 db    ? ;
.bss:000000000020B290                 db    ? ;
.bss:000000000020B291                 db    ? ;
.bss:000000000020B292                 db    ? ;
.bss:000000000020B293                 db    ? ;
.bss:000000000020B294                 db    ? ;
.bss:000000000020B295                 db    ? ;
.bss:000000000020B296                 db    ? ;
.bss:000000000020B297                 db    ? ;
.bss:000000000020B298                 db    ? ;
.bss:000000000020B299                 db    ? ;
.bss:000000000020B29A                 db    ? ;
.bss:000000000020B29B                 db    ? ;
.bss:000000000020B29C                 db    ? ;
.bss:000000000020B29D                 db    ? ;
.bss:000000000020B29E                 db    ? ;
.bss:000000000020B29F                 db    ? ;
.bss:000000000020B2A0                 db    ? ;
.bss:000000000020B2A1                 db    ? ;
.bss:000000000020B2A2                 db    ? ;
.bss:000000000020B2A3                 db    ? ;
.bss:000000000020B2A4                 db    ? ;
.bss:000000000020B2A5                 db    ? ;
.bss:000000000020B2A6                 db    ? ;
.bss:000000000020B2A7                 db    ? ;
.bss:000000000020B2A8                 db    ? ;
.bss:000000000020B2A9                 db    ? ;
.bss:000000000020B2AA                 db    ? ;
.bss:000000000020B2AB                 db    ? ;
.bss:000000000020B2AC                 db    ? ;
.bss:000000000020B2AD                 db    ? ;
.bss:000000000020B2AE                 db    ? ;
.bss:000000000020B2AF                 db    ? ;
.bss:000000000020B2B0                 db    ? ;
.bss:000000000020B2B1                 db    ? ;
.bss:000000000020B2B2                 db    ? ;
.bss:000000000020B2B3                 db    ? ;
.bss:000000000020B2B4                 db    ? ;
.bss:000000000020B2B5                 db    ? ;
.bss:000000000020B2B6                 db    ? ;
.bss:000000000020B2B7                 db    ? ;
.bss:000000000020B2B8                 db    ? ;
.bss:000000000020B2B9                 db    ? ;
.bss:000000000020B2BA                 db    ? ;
.bss:000000000020B2BB                 db    ? ;
.bss:000000000020B2BC                 db    ? ;
.bss:000000000020B2BD                 db    ? ;
.bss:000000000020B2BE                 db    ? ;
.bss:000000000020B2BF                 db    ? ;
.bss:000000000020B2C0                 db    ? ;
.bss:000000000020B2C1                 db    ? ;
.bss:000000000020B2C2                 db    ? ;
.bss:000000000020B2C3                 db    ? ;
.bss:000000000020B2C4                 db    ? ;
.bss:000000000020B2C5                 db    ? ;
.bss:000000000020B2C6                 db    ? ;
.bss:000000000020B2C7                 db    ? ;
.bss:000000000020B2C8                 db    ? ;
.bss:000000000020B2C9                 db    ? ;
.bss:000000000020B2CA                 db    ? ;
.bss:000000000020B2CB                 db    ? ;
.bss:000000000020B2CC                 db    ? ;
.bss:000000000020B2CD                 db    ? ;
.bss:000000000020B2CE                 db    ? ;
.bss:000000000020B2CF                 db    ? ;
.bss:000000000020B2D0                 db    ? ;
.bss:000000000020B2D1                 db    ? ;
.bss:000000000020B2D2                 db    ? ;
.bss:000000000020B2D3                 db    ? ;
.bss:000000000020B2D4                 db    ? ;
.bss:000000000020B2D5                 db    ? ;
.bss:000000000020B2D6                 db    ? ;
.bss:000000000020B2D7                 db    ? ;
.bss:000000000020B2D8                 db    ? ;
.bss:000000000020B2D9                 db    ? ;
.bss:000000000020B2DA                 db    ? ;
.bss:000000000020B2DB                 db    ? ;
.bss:000000000020B2DC                 db    ? ;
.bss:000000000020B2DD                 db    ? ;
.bss:000000000020B2DE                 db    ? ;
.bss:000000000020B2DF                 db    ? ;
.bss:000000000020B2E0 in_squeeze_set  db    ? ;               ; DATA XREF: main+5E6↑o
.bss:000000000020B2E0                                         ; main:loc_2365↑o ...
.bss:000000000020B2E1                 db    ? ;
.bss:000000000020B2E2                 db    ? ;
.bss:000000000020B2E3                 db    ? ;
.bss:000000000020B2E4                 db    ? ;
.bss:000000000020B2E5                 db    ? ;
.bss:000000000020B2E6                 db    ? ;
.bss:000000000020B2E7                 db    ? ;
.bss:000000000020B2E8                 db    ? ;
.bss:000000000020B2E9                 db    ? ;
.bss:000000000020B2EA                 db    ? ;
.bss:000000000020B2EB                 db    ? ;
.bss:000000000020B2EC                 db    ? ;
.bss:000000000020B2ED                 db    ? ;
.bss:000000000020B2EE                 db    ? ;
.bss:000000000020B2EF                 db    ? ;
.bss:000000000020B2F0                 db    ? ;
.bss:000000000020B2F1                 db    ? ;
.bss:000000000020B2F2                 db    ? ;
.bss:000000000020B2F3                 db    ? ;
.bss:000000000020B2F4                 db    ? ;
.bss:000000000020B2F5                 db    ? ;
.bss:000000000020B2F6                 db    ? ;
.bss:000000000020B2F7                 db    ? ;
.bss:000000000020B2F8                 db    ? ;
.bss:000000000020B2F9                 db    ? ;
.bss:000000000020B2FA                 db    ? ;
.bss:000000000020B2FB                 db    ? ;
.bss:000000000020B2FC                 db    ? ;
.bss:000000000020B2FD                 db    ? ;
.bss:000000000020B2FE                 db    ? ;
.bss:000000000020B2FF                 db    ? ;
.bss:000000000020B300                 db    ? ;
.bss:000000000020B301                 db    ? ;
.bss:000000000020B302                 db    ? ;
.bss:000000000020B303                 db    ? ;
.bss:000000000020B304                 db    ? ;
.bss:000000000020B305                 db    ? ;
.bss:000000000020B306                 db    ? ;
.bss:000000000020B307                 db    ? ;
.bss:000000000020B308                 db    ? ;
.bss:000000000020B309                 db    ? ;
.bss:000000000020B30A                 db    ? ;
.bss:000000000020B30B                 db    ? ;
.bss:000000000020B30C                 db    ? ;
.bss:000000000020B30D                 db    ? ;
.bss:000000000020B30E                 db    ? ;
.bss:000000000020B30F                 db    ? ;
.bss:000000000020B310                 db    ? ;
.bss:000000000020B311                 db    ? ;
.bss:000000000020B312                 db    ? ;
.bss:000000000020B313                 db    ? ;
.bss:000000000020B314                 db    ? ;
.bss:000000000020B315                 db    ? ;
.bss:000000000020B316                 db    ? ;
.bss:000000000020B317                 db    ? ;
.bss:000000000020B318                 db    ? ;
.bss:000000000020B319                 db    ? ;
.bss:000000000020B31A                 db    ? ;
.bss:000000000020B31B                 db    ? ;
.bss:000000000020B31C                 db    ? ;
.bss:000000000020B31D                 db    ? ;
.bss:000000000020B31E                 db    ? ;
.bss:000000000020B31F                 db    ? ;
.bss:000000000020B320                 db    ? ;
.bss:000000000020B321                 db    ? ;
.bss:000000000020B322                 db    ? ;
.bss:000000000020B323                 db    ? ;
.bss:000000000020B324                 db    ? ;
.bss:000000000020B325                 db    ? ;
.bss:000000000020B326                 db    ? ;
.bss:000000000020B327                 db    ? ;
.bss:000000000020B328                 db    ? ;
.bss:000000000020B329                 db    ? ;
.bss:000000000020B32A                 db    ? ;
.bss:000000000020B32B                 db    ? ;
.bss:000000000020B32C                 db    ? ;
.bss:000000000020B32D                 db    ? ;
.bss:000000000020B32E                 db    ? ;
.bss:000000000020B32F                 db    ? ;
.bss:000000000020B330                 db    ? ;
.bss:000000000020B331                 db    ? ;
.bss:000000000020B332                 db    ? ;
.bss:000000000020B333                 db    ? ;
.bss:000000000020B334                 db    ? ;
.bss:000000000020B335                 db    ? ;
.bss:000000000020B336                 db    ? ;
.bss:000000000020B337                 db    ? ;
.bss:000000000020B338                 db    ? ;
.bss:000000000020B339                 db    ? ;
.bss:000000000020B33A                 db    ? ;
.bss:000000000020B33B                 db    ? ;
.bss:000000000020B33C                 db    ? ;
.bss:000000000020B33D                 db    ? ;
.bss:000000000020B33E                 db    ? ;
.bss:000000000020B33F                 db    ? ;
.bss:000000000020B340                 db    ? ;
.bss:000000000020B341                 db    ? ;
.bss:000000000020B342                 db    ? ;
.bss:000000000020B343                 db    ? ;
.bss:000000000020B344                 db    ? ;
.bss:000000000020B345                 db    ? ;
.bss:000000000020B346                 db    ? ;
.bss:000000000020B347                 db    ? ;
.bss:000000000020B348                 db    ? ;
.bss:000000000020B349                 db    ? ;
.bss:000000000020B34A                 db    ? ;
.bss:000000000020B34B                 db    ? ;
.bss:000000000020B34C                 db    ? ;
.bss:000000000020B34D                 db    ? ;
.bss:000000000020B34E                 db    ? ;
.bss:000000000020B34F                 db    ? ;
.bss:000000000020B350                 db    ? ;
.bss:000000000020B351                 db    ? ;
.bss:000000000020B352                 db    ? ;
.bss:000000000020B353                 db    ? ;
.bss:000000000020B354                 db    ? ;
.bss:000000000020B355                 db    ? ;
.bss:000000000020B356                 db    ? ;
.bss:000000000020B357                 db    ? ;
.bss:000000000020B358                 db    ? ;
.bss:000000000020B359                 db    ? ;
.bss:000000000020B35A                 db    ? ;
.bss:000000000020B35B                 db    ? ;
.bss:000000000020B35C                 db    ? ;
.bss:000000000020B35D                 db    ? ;
.bss:000000000020B35E                 db    ? ;
.bss:000000000020B35F                 db    ? ;
.bss:000000000020B360                 db    ? ;
.bss:000000000020B361                 db    ? ;
.bss:000000000020B362                 db    ? ;
.bss:000000000020B363                 db    ? ;
.bss:000000000020B364                 db    ? ;
.bss:000000000020B365                 db    ? ;
.bss:000000000020B366                 db    ? ;
.bss:000000000020B367                 db    ? ;
.bss:000000000020B368                 db    ? ;
.bss:000000000020B369                 db    ? ;
.bss:000000000020B36A                 db    ? ;
.bss:000000000020B36B                 db    ? ;
.bss:000000000020B36C                 db    ? ;
.bss:000000000020B36D                 db    ? ;
.bss:000000000020B36E                 db    ? ;
.bss:000000000020B36F                 db    ? ;
.bss:000000000020B370                 db    ? ;
.bss:000000000020B371                 db    ? ;
.bss:000000000020B372                 db    ? ;
.bss:000000000020B373                 db    ? ;
.bss:000000000020B374                 db    ? ;
.bss:000000000020B375                 db    ? ;
.bss:000000000020B376                 db    ? ;
.bss:000000000020B377                 db    ? ;
.bss:000000000020B378                 db    ? ;
.bss:000000000020B379                 db    ? ;
.bss:000000000020B37A                 db    ? ;
.bss:000000000020B37B                 db    ? ;
.bss:000000000020B37C                 db    ? ;
.bss:000000000020B37D                 db    ? ;
.bss:000000000020B37E                 db    ? ;
.bss:000000000020B37F                 db    ? ;
.bss:000000000020B380                 db    ? ;
.bss:000000000020B381                 db    ? ;
.bss:000000000020B382                 db    ? ;
.bss:000000000020B383                 db    ? ;
.bss:000000000020B384                 db    ? ;
.bss:000000000020B385                 db    ? ;
.bss:000000000020B386                 db    ? ;
.bss:000000000020B387                 db    ? ;
.bss:000000000020B388                 db    ? ;
.bss:000000000020B389                 db    ? ;
.bss:000000000020B38A                 db    ? ;
.bss:000000000020B38B                 db    ? ;
.bss:000000000020B38C                 db    ? ;
.bss:000000000020B38D                 db    ? ;
.bss:000000000020B38E                 db    ? ;
.bss:000000000020B38F                 db    ? ;
.bss:000000000020B390                 db    ? ;
.bss:000000000020B391                 db    ? ;
.bss:000000000020B392                 db    ? ;
.bss:000000000020B393                 db    ? ;
.bss:000000000020B394                 db    ? ;
.bss:000000000020B395                 db    ? ;
.bss:000000000020B396                 db    ? ;
.bss:000000000020B397                 db    ? ;
.bss:000000000020B398                 db    ? ;
.bss:000000000020B399                 db    ? ;
.bss:000000000020B39A                 db    ? ;
.bss:000000000020B39B                 db    ? ;
.bss:000000000020B39C                 db    ? ;
.bss:000000000020B39D                 db    ? ;
.bss:000000000020B39E                 db    ? ;
.bss:000000000020B39F                 db    ? ;
.bss:000000000020B3A0                 db    ? ;
.bss:000000000020B3A1                 db    ? ;
.bss:000000000020B3A2                 db    ? ;
.bss:000000000020B3A3                 db    ? ;
.bss:000000000020B3A4                 db    ? ;
.bss:000000000020B3A5                 db    ? ;
.bss:000000000020B3A6                 db    ? ;
.bss:000000000020B3A7                 db    ? ;
.bss:000000000020B3A8                 db    ? ;
.bss:000000000020B3A9                 db    ? ;
.bss:000000000020B3AA                 db    ? ;
.bss:000000000020B3AB                 db    ? ;
.bss:000000000020B3AC                 db    ? ;
.bss:000000000020B3AD                 db    ? ;
.bss:000000000020B3AE                 db    ? ;
.bss:000000000020B3AF                 db    ? ;
.bss:000000000020B3B0                 db    ? ;
.bss:000000000020B3B1                 db    ? ;
.bss:000000000020B3B2                 db    ? ;
.bss:000000000020B3B3                 db    ? ;
.bss:000000000020B3B4                 db    ? ;
.bss:000000000020B3B5                 db    ? ;
.bss:000000000020B3B6                 db    ? ;
.bss:000000000020B3B7                 db    ? ;
.bss:000000000020B3B8                 db    ? ;
.bss:000000000020B3B9                 db    ? ;
.bss:000000000020B3BA                 db    ? ;
.bss:000000000020B3BB                 db    ? ;
.bss:000000000020B3BC                 db    ? ;
.bss:000000000020B3BD                 db    ? ;
.bss:000000000020B3BE                 db    ? ;
.bss:000000000020B3BF                 db    ? ;
.bss:000000000020B3C0                 db    ? ;
.bss:000000000020B3C1                 db    ? ;
.bss:000000000020B3C2                 db    ? ;
.bss:000000000020B3C3                 db    ? ;
.bss:000000000020B3C4                 db    ? ;
.bss:000000000020B3C5                 db    ? ;
.bss:000000000020B3C6                 db    ? ;
.bss:000000000020B3C7                 db    ? ;
.bss:000000000020B3C8                 db    ? ;
.bss:000000000020B3C9                 db    ? ;
.bss:000000000020B3CA                 db    ? ;
.bss:000000000020B3CB                 db    ? ;
.bss:000000000020B3CC                 db    ? ;
.bss:000000000020B3CD                 db    ? ;
.bss:000000000020B3CE                 db    ? ;
.bss:000000000020B3CF                 db    ? ;
.bss:000000000020B3D0                 db    ? ;
.bss:000000000020B3D1                 db    ? ;
.bss:000000000020B3D2                 db    ? ;
.bss:000000000020B3D3                 db    ? ;
.bss:000000000020B3D4                 db    ? ;
.bss:000000000020B3D5                 db    ? ;
.bss:000000000020B3D6                 db    ? ;
.bss:000000000020B3D7                 db    ? ;
.bss:000000000020B3D8                 db    ? ;
.bss:000000000020B3D9                 db    ? ;
.bss:000000000020B3DA                 db    ? ;
.bss:000000000020B3DB                 db    ? ;
.bss:000000000020B3DC                 db    ? ;
.bss:000000000020B3DD                 db    ? ;
.bss:000000000020B3DE                 db    ? ;
.bss:000000000020B3DF unk_20B3DF      db    ? ;               ; DATA XREF: squeeze_filter_constprop_14+10B↑o
.bss:000000000020B3E0 io_buf          db    ? ;               ; DATA XREF: main+919↑o
.bss:000000000020B3E0                                         ; main+A7F↑o ...
.bss:000000000020B3E1                 db    ? ;
.bss:000000000020B3E2                 db    ? ;
.bss:000000000020B3E3                 db    ? ;
.bss:000000000020B3E4                 db    ? ;
.bss:000000000020B3E5                 db    ? ;
.bss:000000000020B3E6                 db    ? ;
.bss:000000000020B3E7                 db    ? ;
.bss:000000000020B3E8                 db    ? ;
.bss:000000000020B3E9                 db    ? ;
.bss:000000000020B3EA                 db    ? ;
.bss:000000000020B3EB                 db    ? ;
.bss:000000000020B3EC                 db    ? ;
.bss:000000000020B3ED                 db    ? ;
.bss:000000000020B3EE                 db    ? ;
.bss:000000000020B3EF                 db    ? ;
.bss:000000000020B3F0                 db    ? ;
.bss:000000000020B3F1                 db    ? ;
.bss:000000000020B3F2                 db    ? ;
.bss:000000000020B3F3                 db    ? ;
.bss:000000000020B3F4                 db    ? ;
.bss:000000000020B3F5                 db    ? ;
.bss:000000000020B3F6                 db    ? ;
.bss:000000000020B3F7                 db    ? ;
.bss:000000000020B3F8                 db    ? ;
.bss:000000000020B3F9                 db    ? ;
.bss:000000000020B3FA                 db    ? ;
.bss:000000000020B3FB                 db    ? ;
.bss:000000000020B3FC                 db    ? ;
.bss:000000000020B3FD                 db    ? ;
.bss:000000000020B3FE                 db    ? ;
.bss:000000000020B3FF                 db    ? ;
.bss:000000000020B400                 db    ? ;
.bss:000000000020B401                 db    ? ;
.bss:000000000020B402                 db    ? ;
.bss:000000000020B403                 db    ? ;
.bss:000000000020B404                 db    ? ;
.bss:000000000020B405                 db    ? ;
.bss:000000000020B406                 db    ? ;
.bss:000000000020B407                 db    ? ;
.bss:000000000020B408                 db    ? ;
.bss:000000000020B409                 db    ? ;
.bss:000000000020B40A                 db    ? ;
.bss:000000000020B40B                 db    ? ;
.bss:000000000020B40C                 db    ? ;
.bss:000000000020B40D                 db    ? ;
.bss:000000000020B40E                 db    ? ;
.bss:000000000020B40F                 db    ? ;
.bss:000000000020B410                 db    ? ;
.bss:000000000020B411                 db    ? ;
.bss:000000000020B412                 db    ? ;
.bss:000000000020B413                 db    ? ;
.bss:000000000020B414                 db    ? ;
.bss:000000000020B415                 db    ? ;
.bss:000000000020B416                 db    ? ;
.bss:000000000020B417                 db    ? ;
.bss:000000000020B418                 db    ? ;
.bss:000000000020B419                 db    ? ;
.bss:000000000020B41A                 db    ? ;
.bss:000000000020B41B                 db    ? ;
.bss:000000000020B41C                 db    ? ;
.bss:000000000020B41D                 db    ? ;
.bss:000000000020B41E                 db    ? ;
.bss:000000000020B41F                 db    ? ;
.bss:000000000020B420                 db    ? ;
.bss:000000000020B421                 db    ? ;
.bss:000000000020B422                 db    ? ;
.bss:000000000020B423                 db    ? ;
.bss:000000000020B424                 db    ? ;
.bss:000000000020B425                 db    ? ;
.bss:000000000020B426                 db    ? ;
.bss:000000000020B427                 db    ? ;
.bss:000000000020B428                 db    ? ;
.bss:000000000020B429                 db    ? ;
.bss:000000000020B42A                 db    ? ;
.bss:000000000020B42B                 db    ? ;
.bss:000000000020B42C                 db    ? ;
.bss:000000000020B42D                 db    ? ;
.bss:000000000020B42E                 db    ? ;
.bss:000000000020B42F                 db    ? ;
.bss:000000000020B430                 db    ? ;
.bss:000000000020B431                 db    ? ;
.bss:000000000020B432                 db    ? ;
.bss:000000000020B433                 db    ? ;
.bss:000000000020B434                 db    ? ;
.bss:000000000020B435                 db    ? ;
.bss:000000000020B436                 db    ? ;
.bss:000000000020B437                 db    ? ;
.bss:000000000020B438                 db    ? ;
.bss:000000000020B439                 db    ? ;
.bss:000000000020B43A                 db    ? ;
.bss:000000000020B43B                 db    ? ;
.bss:000000000020B43C                 db    ? ;
.bss:000000000020B43D                 db    ? ;
.bss:000000000020B43E                 db    ? ;
.bss:000000000020B43F                 db    ? ;
.bss:000000000020B440                 db    ? ;
.bss:000000000020B441                 db    ? ;
.bss:000000000020B442                 db    ? ;
.bss:000000000020B443                 db    ? ;
.bss:000000000020B444                 db    ? ;
.bss:000000000020B445                 db    ? ;
.bss:000000000020B446                 db    ? ;
.bss:000000000020B447                 db    ? ;
.bss:000000000020B448                 db    ? ;
.bss:000000000020B449                 db    ? ;
.bss:000000000020B44A                 db    ? ;
.bss:000000000020B44B                 db    ? ;
.bss:000000000020B44C                 db    ? ;
.bss:000000000020B44D                 db    ? ;
.bss:000000000020B44E                 db    ? ;
.bss:000000000020B44F                 db    ? ;
.bss:000000000020B450                 db    ? ;
.bss:000000000020B451                 db    ? ;
.bss:000000000020B452                 db    ? ;
.bss:000000000020B453                 db    ? ;
.bss:000000000020B454                 db    ? ;
.bss:000000000020B455                 db    ? ;
.bss:000000000020B456                 db    ? ;
.bss:000000000020B457                 db    ? ;
.bss:000000000020B458                 db    ? ;
.bss:000000000020B459                 db    ? ;
.bss:000000000020B45A                 db    ? ;
.bss:000000000020B45B                 db    ? ;
.bss:000000000020B45C                 db    ? ;
.bss:000000000020B45D                 db    ? ;
.bss:000000000020B45E                 db    ? ;
.bss:000000000020B45F                 db    ? ;
.bss:000000000020B460                 db    ? ;
.bss:000000000020B461                 db    ? ;
.bss:000000000020B462                 db    ? ;
.bss:000000000020B463                 db    ? ;
.bss:000000000020B464                 db    ? ;
.bss:000000000020B465                 db    ? ;
.bss:000000000020B466                 db    ? ;
.bss:000000000020B467                 db    ? ;
.bss:000000000020B468                 db    ? ;
.bss:000000000020B469                 db    ? ;
.bss:000000000020B46A                 db    ? ;
.bss:000000000020B46B                 db    ? ;
.bss:000000000020B46C                 db    ? ;
.bss:000000000020B46D                 db    ? ;
.bss:000000000020B46E                 db    ? ;
.bss:000000000020B46F                 db    ? ;
.bss:000000000020B470                 db    ? ;
.bss:000000000020B471                 db    ? ;
.bss:000000000020B472                 db    ? ;
.bss:000000000020B473                 db    ? ;
.bss:000000000020B474                 db    ? ;
.bss:000000000020B475                 db    ? ;
.bss:000000000020B476                 db    ? ;
.bss:000000000020B477                 db    ? ;
.bss:000000000020B478                 db    ? ;
.bss:000000000020B479                 db    ? ;
.bss:000000000020B47A                 db    ? ;
.bss:000000000020B47B                 db    ? ;
.bss:000000000020B47C                 db    ? ;
.bss:000000000020B47D                 db    ? ;
.bss:000000000020B47E                 db    ? ;
.bss:000000000020B47F                 db    ? ;
.bss:000000000020B480                 db    ? ;
.bss:000000000020B481                 db    ? ;
.bss:000000000020B482                 db    ? ;
.bss:000000000020B483                 db    ? ;
.bss:000000000020B484                 db    ? ;
.bss:000000000020B485                 db    ? ;
.bss:000000000020B486                 db    ? ;
.bss:000000000020B487                 db    ? ;
.bss:000000000020B488                 db    ? ;
.bss:000000000020B489                 db    ? ;
.bss:000000000020B48A                 db    ? ;
.bss:000000000020B48B                 db    ? ;
.bss:000000000020B48C                 db    ? ;
.bss:000000000020B48D                 db    ? ;
.bss:000000000020B48E                 db    ? ;
.bss:000000000020B48F                 db    ? ;
.bss:000000000020B490                 db    ? ;
.bss:000000000020B491                 db    ? ;
.bss:000000000020B492                 db    ? ;
.bss:000000000020B493                 db    ? ;
.bss:000000000020B494                 db    ? ;
.bss:000000000020B495                 db    ? ;
.bss:000000000020B496                 db    ? ;
.bss:000000000020B497                 db    ? ;
.bss:000000000020B498                 db    ? ;
.bss:000000000020B499                 db    ? ;
.bss:000000000020B49A                 db    ? ;
.bss:000000000020B49B                 db    ? ;
.bss:000000000020B49C                 db    ? ;
.bss:000000000020B49D                 db    ? ;
.bss:000000000020B49E                 db    ? ;
.bss:000000000020B49F                 db    ? ;
.bss:000000000020B4A0                 db    ? ;
.bss:000000000020B4A1                 db    ? ;
.bss:000000000020B4A2                 db    ? ;
.bss:000000000020B4A3                 db    ? ;
.bss:000000000020B4A4                 db    ? ;
.bss:000000000020B4A5                 db    ? ;
.bss:000000000020B4A6                 db    ? ;
.bss:000000000020B4A7                 db    ? ;
.bss:000000000020B4A8                 db    ? ;
.bss:000000000020B4A9                 db    ? ;
.bss:000000000020B4AA                 db    ? ;
.bss:000000000020B4AB                 db    ? ;
.bss:000000000020B4AC                 db    ? ;
.bss:000000000020B4AD                 db    ? ;
.bss:000000000020B4AE                 db    ? ;
.bss:000000000020B4AF                 db    ? ;
.bss:000000000020B4B0                 db    ? ;
.bss:000000000020B4B1                 db    ? ;
.bss:000000000020B4B2                 db    ? ;
.bss:000000000020B4B3                 db    ? ;
.bss:000000000020B4B4                 db    ? ;
.bss:000000000020B4B5                 db    ? ;
.bss:000000000020B4B6                 db    ? ;
.bss:000000000020B4B7                 db    ? ;
.bss:000000000020B4B8                 db    ? ;
.bss:000000000020B4B9                 db    ? ;
.bss:000000000020B4BA                 db    ? ;
.bss:000000000020B4BB                 db    ? ;
.bss:000000000020B4BC                 db    ? ;
.bss:000000000020B4BD                 db    ? ;
.bss:000000000020B4BE                 db    ? ;
.bss:000000000020B4BF                 db    ? ;
.bss:000000000020B4C0                 db    ? ;
.bss:000000000020B4C1                 db    ? ;
.bss:000000000020B4C2                 db    ? ;
.bss:000000000020B4C3                 db    ? ;
.bss:000000000020B4C4                 db    ? ;
.bss:000000000020B4C5                 db    ? ;
.bss:000000000020B4C6                 db    ? ;
.bss:000000000020B4C7                 db    ? ;
.bss:000000000020B4C8                 db    ? ;
.bss:000000000020B4C9                 db    ? ;
.bss:000000000020B4CA                 db    ? ;
.bss:000000000020B4CB                 db    ? ;
.bss:000000000020B4CC                 db    ? ;
.bss:000000000020B4CD                 db    ? ;
.bss:000000000020B4CE                 db    ? ;
.bss:000000000020B4CF                 db    ? ;
.bss:000000000020B4D0                 db    ? ;
.bss:000000000020B4D1                 db    ? ;
.bss:000000000020B4D2                 db    ? ;
.bss:000000000020B4D3                 db    ? ;
.bss:000000000020B4D4                 db    ? ;
.bss:000000000020B4D5                 db    ? ;
.bss:000000000020B4D6                 db    ? ;
.bss:000000000020B4D7                 db    ? ;
.bss:000000000020B4D8                 db    ? ;
.bss:000000000020B4D9                 db    ? ;
.bss:000000000020B4DA                 db    ? ;
.bss:000000000020B4DB                 db    ? ;
.bss:000000000020B4DC                 db    ? ;
.bss:000000000020B4DD                 db    ? ;
.bss:000000000020B4DE                 db    ? ;
.bss:000000000020B4DF                 db    ? ;
.bss:000000000020B4E0                 db    ? ;
.bss:000000000020B4E1                 db    ? ;
.bss:000000000020B4E2                 db    ? ;
.bss:000000000020B4E3                 db    ? ;
.bss:000000000020B4E4                 db    ? ;
.bss:000000000020B4E5                 db    ? ;
.bss:000000000020B4E6                 db    ? ;
.bss:000000000020B4E7                 db    ? ;
.bss:000000000020B4E8                 db    ? ;
.bss:000000000020B4E9                 db    ? ;
.bss:000000000020B4EA                 db    ? ;
.bss:000000000020B4EB                 db    ? ;
.bss:000000000020B4EC                 db    ? ;
.bss:000000000020B4ED                 db    ? ;
.bss:000000000020B4EE                 db    ? ;
.bss:000000000020B4EF                 db    ? ;
.bss:000000000020B4F0                 db    ? ;
.bss:000000000020B4F1                 db    ? ;
.bss:000000000020B4F2                 db    ? ;
.bss:000000000020B4F3                 db    ? ;
.bss:000000000020B4F4                 db    ? ;
.bss:000000000020B4F5                 db    ? ;
.bss:000000000020B4F6                 db    ? ;
.bss:000000000020B4F7                 db    ? ;
.bss:000000000020B4F8                 db    ? ;
.bss:000000000020B4F9                 db    ? ;
.bss:000000000020B4FA                 db    ? ;
.bss:000000000020B4FB                 db    ? ;
.bss:000000000020B4FC                 db    ? ;
.bss:000000000020B4FD                 db    ? ;
.bss:000000000020B4FE                 db    ? ;
.bss:000000000020B4FF                 db    ? ;
.bss:000000000020B500                 db    ? ;
.bss:000000000020B501                 db    ? ;
.bss:000000000020B502                 db    ? ;
.bss:000000000020B503                 db    ? ;
.bss:000000000020B504                 db    ? ;
.bss:000000000020B505                 db    ? ;
.bss:000000000020B506                 db    ? ;
.bss:000000000020B507                 db    ? ;
.bss:000000000020B508                 db    ? ;
.bss:000000000020B509                 db    ? ;
.bss:000000000020B50A                 db    ? ;
.bss:000000000020B50B                 db    ? ;
.bss:000000000020B50C                 db    ? ;
.bss:000000000020B50D                 db    ? ;
.bss:000000000020B50E                 db    ? ;
.bss:000000000020B50F                 db    ? ;
.bss:000000000020B510                 db    ? ;
.bss:000000000020B511                 db    ? ;
.bss:000000000020B512                 db    ? ;
.bss:000000000020B513                 db    ? ;
.bss:000000000020B514                 db    ? ;
.bss:000000000020B515                 db    ? ;
.bss:000000000020B516                 db    ? ;
.bss:000000000020B517                 db    ? ;
.bss:000000000020B518                 db    ? ;
.bss:000000000020B519                 db    ? ;
.bss:000000000020B51A                 db    ? ;
.bss:000000000020B51B                 db    ? ;
.bss:000000000020B51C                 db    ? ;
.bss:000000000020B51D                 db    ? ;
.bss:000000000020B51E                 db    ? ;
.bss:000000000020B51F                 db    ? ;
.bss:000000000020B520                 db    ? ;
.bss:000000000020B521                 db    ? ;
.bss:000000000020B522                 db    ? ;
.bss:000000000020B523                 db    ? ;
.bss:000000000020B524                 db    ? ;
.bss:000000000020B525                 db    ? ;
.bss:000000000020B526                 db    ? ;
.bss:000000000020B527                 db    ? ;
.bss:000000000020B528                 db    ? ;
.bss:000000000020B529                 db    ? ;
.bss:000000000020B52A                 db    ? ;
.bss:000000000020B52B                 db    ? ;
.bss:000000000020B52C                 db    ? ;
.bss:000000000020B52D                 db    ? ;
.bss:000000000020B52E                 db    ? ;
.bss:000000000020B52F                 db    ? ;
.bss:000000000020B530                 db    ? ;
.bss:000000000020B531                 db    ? ;
.bss:000000000020B532                 db    ? ;
.bss:000000000020B533                 db    ? ;
.bss:000000000020B534                 db    ? ;
.bss:000000000020B535                 db    ? ;
.bss:000000000020B536                 db    ? ;
.bss:000000000020B537                 db    ? ;
.bss:000000000020B538                 db    ? ;
.bss:000000000020B539                 db    ? ;
.bss:000000000020B53A                 db    ? ;
.bss:000000000020B53B                 db    ? ;
.bss:000000000020B53C                 db    ? ;
.bss:000000000020B53D                 db    ? ;
.bss:000000000020B53E                 db    ? ;
.bss:000000000020B53F                 db    ? ;
.bss:000000000020B540                 db    ? ;
.bss:000000000020B541                 db    ? ;
.bss:000000000020B542                 db    ? ;
.bss:000000000020B543                 db    ? ;
.bss:000000000020B544                 db    ? ;
.bss:000000000020B545                 db    ? ;
.bss:000000000020B546                 db    ? ;
.bss:000000000020B547                 db    ? ;
.bss:000000000020B548                 db    ? ;
.bss:000000000020B549                 db    ? ;
.bss:000000000020B54A                 db    ? ;
.bss:000000000020B54B                 db    ? ;
.bss:000000000020B54C                 db    ? ;
.bss:000000000020B54D                 db    ? ;
.bss:000000000020B54E                 db    ? ;
.bss:000000000020B54F                 db    ? ;
.bss:000000000020B550                 db    ? ;
.bss:000000000020B551                 db    ? ;
.bss:000000000020B552                 db    ? ;
.bss:000000000020B553                 db    ? ;
.bss:000000000020B554                 db    ? ;
.bss:000000000020B555                 db    ? ;
.bss:000000000020B556                 db    ? ;
.bss:000000000020B557                 db    ? ;
.bss:000000000020B558                 db    ? ;
.bss:000000000020B559                 db    ? ;
.bss:000000000020B55A                 db    ? ;
.bss:000000000020B55B                 db    ? ;
.bss:000000000020B55C                 db    ? ;
.bss:000000000020B55D                 db    ? ;
.bss:000000000020B55E                 db    ? ;
.bss:000000000020B55F                 db    ? ;
.bss:000000000020B560                 db    ? ;
.bss:000000000020B561                 db    ? ;
.bss:000000000020B562                 db    ? ;
.bss:000000000020B563                 db    ? ;
.bss:000000000020B564                 db    ? ;
.bss:000000000020B565                 db    ? ;
.bss:000000000020B566                 db    ? ;
.bss:000000000020B567                 db    ? ;
.bss:000000000020B568                 db    ? ;
.bss:000000000020B569                 db    ? ;
.bss:000000000020B56A                 db    ? ;
.bss:000000000020B56B                 db    ? ;
.bss:000000000020B56C                 db    ? ;
.bss:000000000020B56D                 db    ? ;
.bss:000000000020B56E                 db    ? ;
.bss:000000000020B56F                 db    ? ;
.bss:000000000020B570                 db    ? ;
.bss:000000000020B571                 db    ? ;
.bss:000000000020B572                 db    ? ;
.bss:000000000020B573                 db    ? ;
.bss:000000000020B574                 db    ? ;
.bss:000000000020B575                 db    ? ;
.bss:000000000020B576                 db    ? ;
.bss:000000000020B577                 db    ? ;
.bss:000000000020B578                 db    ? ;
.bss:000000000020B579                 db    ? ;
.bss:000000000020B57A                 db    ? ;
.bss:000000000020B57B                 db    ? ;
.bss:000000000020B57C                 db    ? ;
.bss:000000000020B57D                 db    ? ;
.bss:000000000020B57E                 db    ? ;
.bss:000000000020B57F                 db    ? ;
.bss:000000000020B580                 db    ? ;
.bss:000000000020B581                 db    ? ;
.bss:000000000020B582                 db    ? ;
.bss:000000000020B583                 db    ? ;
.bss:000000000020B584                 db    ? ;
.bss:000000000020B585                 db    ? ;
.bss:000000000020B586                 db    ? ;
.bss:000000000020B587                 db    ? ;
.bss:000000000020B588                 db    ? ;
.bss:000000000020B589                 db    ? ;
.bss:000000000020B58A                 db    ? ;
.bss:000000000020B58B                 db    ? ;
.bss:000000000020B58C                 db    ? ;
.bss:000000000020B58D                 db    ? ;
.bss:000000000020B58E                 db    ? ;
.bss:000000000020B58F                 db    ? ;
.bss:000000000020B590                 db    ? ;
.bss:000000000020B591                 db    ? ;
.bss:000000000020B592                 db    ? ;
.bss:000000000020B593                 db    ? ;
.bss:000000000020B594                 db    ? ;
.bss:000000000020B595                 db    ? ;
.bss:000000000020B596                 db    ? ;
.bss:000000000020B597                 db    ? ;
.bss:000000000020B598                 db    ? ;
.bss:000000000020B599                 db    ? ;
.bss:000000000020B59A                 db    ? ;
.bss:000000000020B59B                 db    ? ;
.bss:000000000020B59C                 db    ? ;
.bss:000000000020B59D                 db    ? ;
.bss:000000000020B59E                 db    ? ;
.bss:000000000020B59F                 db    ? ;
.bss:000000000020B5A0                 db    ? ;
.bss:000000000020B5A1                 db    ? ;
.bss:000000000020B5A2                 db    ? ;
.bss:000000000020B5A3                 db    ? ;
.bss:000000000020B5A4                 db    ? ;
.bss:000000000020B5A5                 db    ? ;
.bss:000000000020B5A6                 db    ? ;
.bss:000000000020B5A7                 db    ? ;
.bss:000000000020B5A8                 db    ? ;
.bss:000000000020B5A9                 db    ? ;
.bss:000000000020B5AA                 db    ? ;
.bss:000000000020B5AB                 db    ? ;
.bss:000000000020B5AC                 db    ? ;
.bss:000000000020B5AD                 db    ? ;
.bss:000000000020B5AE                 db    ? ;
.bss:000000000020B5AF                 db    ? ;
.bss:000000000020B5B0                 db    ? ;
.bss:000000000020B5B1                 db    ? ;
.bss:000000000020B5B2                 db    ? ;
.bss:000000000020B5B3                 db    ? ;
.bss:000000000020B5B4                 db    ? ;
.bss:000000000020B5B5                 db    ? ;
.bss:000000000020B5B6                 db    ? ;
.bss:000000000020B5B7                 db    ? ;
.bss:000000000020B5B8                 db    ? ;
.bss:000000000020B5B9                 db    ? ;
.bss:000000000020B5BA                 db    ? ;
.bss:000000000020B5BB                 db    ? ;
.bss:000000000020B5BC                 db    ? ;
.bss:000000000020B5BD                 db    ? ;
.bss:000000000020B5BE                 db    ? ;
.bss:000000000020B5BF                 db    ? ;
.bss:000000000020B5C0                 db    ? ;
.bss:000000000020B5C1                 db    ? ;
.bss:000000000020B5C2                 db    ? ;
.bss:000000000020B5C3                 db    ? ;
.bss:000000000020B5C4                 db    ? ;
.bss:000000000020B5C5                 db    ? ;
.bss:000000000020B5C6                 db    ? ;
.bss:000000000020B5C7                 db    ? ;
.bss:000000000020B5C8                 db    ? ;
.bss:000000000020B5C9                 db    ? ;
.bss:000000000020B5CA                 db    ? ;
.bss:000000000020B5CB                 db    ? ;
.bss:000000000020B5CC                 db    ? ;
.bss:000000000020B5CD                 db    ? ;
.bss:000000000020B5CE                 db    ? ;
.bss:000000000020B5CF                 db    ? ;
.bss:000000000020B5D0                 db    ? ;
.bss:000000000020B5D1                 db    ? ;
.bss:000000000020B5D2                 db    ? ;
.bss:000000000020B5D3                 db    ? ;
.bss:000000000020B5D4                 db    ? ;
.bss:000000000020B5D5                 db    ? ;
.bss:000000000020B5D6                 db    ? ;
.bss:000000000020B5D7                 db    ? ;
.bss:000000000020B5D8                 db    ? ;
.bss:000000000020B5D9                 db    ? ;
.bss:000000000020B5DA                 db    ? ;
.bss:000000000020B5DB                 db    ? ;
.bss:000000000020B5DC                 db    ? ;
.bss:000000000020B5DD                 db    ? ;
.bss:000000000020B5DE                 db    ? ;
.bss:000000000020B5DF                 db    ? ;
.bss:000000000020B5E0                 db    ? ;
.bss:000000000020B5E1                 db    ? ;
.bss:000000000020B5E2                 db    ? ;
.bss:000000000020B5E3                 db    ? ;
.bss:000000000020B5E4                 db    ? ;
.bss:000000000020B5E5                 db    ? ;
.bss:000000000020B5E6                 db    ? ;
.bss:000000000020B5E7                 db    ? ;
.bss:000000000020B5E8                 db    ? ;
.bss:000000000020B5E9                 db    ? ;
.bss:000000000020B5EA                 db    ? ;
.bss:000000000020B5EB                 db    ? ;
.bss:000000000020B5EC                 db    ? ;
.bss:000000000020B5ED                 db    ? ;
.bss:000000000020B5EE                 db    ? ;
.bss:000000000020B5EF                 db    ? ;
.bss:000000000020B5F0                 db    ? ;
.bss:000000000020B5F1                 db    ? ;
.bss:000000000020B5F2                 db    ? ;
.bss:000000000020B5F3                 db    ? ;
.bss:000000000020B5F4                 db    ? ;
.bss:000000000020B5F5                 db    ? ;
.bss:000000000020B5F6                 db    ? ;
.bss:000000000020B5F7                 db    ? ;
.bss:000000000020B5F8                 db    ? ;
.bss:000000000020B5F9                 db    ? ;
.bss:000000000020B5FA                 db    ? ;
.bss:000000000020B5FB                 db    ? ;
.bss:000000000020B5FC                 db    ? ;
.bss:000000000020B5FD                 db    ? ;
.bss:000000000020B5FE                 db    ? ;
.bss:000000000020B5FF                 db    ? ;
.bss:000000000020B600                 db    ? ;
.bss:000000000020B601                 db    ? ;
.bss:000000000020B602                 db    ? ;
.bss:000000000020B603                 db    ? ;
.bss:000000000020B604                 db    ? ;
.bss:000000000020B605                 db    ? ;
.bss:000000000020B606                 db    ? ;
.bss:000000000020B607                 db    ? ;
.bss:000000000020B608                 db    ? ;
.bss:000000000020B609                 db    ? ;
.bss:000000000020B60A                 db    ? ;
.bss:000000000020B60B                 db    ? ;
.bss:000000000020B60C                 db    ? ;
.bss:000000000020B60D                 db    ? ;
.bss:000000000020B60E                 db    ? ;
.bss:000000000020B60F                 db    ? ;
.bss:000000000020B610                 db    ? ;
.bss:000000000020B611                 db    ? ;
.bss:000000000020B612                 db    ? ;
.bss:000000000020B613                 db    ? ;
.bss:000000000020B614                 db    ? ;
.bss:000000000020B615                 db    ? ;
.bss:000000000020B616                 db    ? ;
.bss:000000000020B617                 db    ? ;
.bss:000000000020B618                 db    ? ;
.bss:000000000020B619                 db    ? ;
.bss:000000000020B61A                 db    ? ;
.bss:000000000020B61B                 db    ? ;
.bss:000000000020B61C                 db    ? ;
.bss:000000000020B61D                 db    ? ;
.bss:000000000020B61E                 db    ? ;
.bss:000000000020B61F                 db    ? ;
.bss:000000000020B620                 db    ? ;
.bss:000000000020B621                 db    ? ;
.bss:000000000020B622                 db    ? ;
.bss:000000000020B623                 db    ? ;
.bss:000000000020B624                 db    ? ;
.bss:000000000020B625                 db    ? ;
.bss:000000000020B626                 db    ? ;
.bss:000000000020B627                 db    ? ;
.bss:000000000020B628                 db    ? ;
.bss:000000000020B629                 db    ? ;
.bss:000000000020B62A                 db    ? ;
.bss:000000000020B62B                 db    ? ;
.bss:000000000020B62C                 db    ? ;
.bss:000000000020B62D                 db    ? ;
.bss:000000000020B62E                 db    ? ;
.bss:000000000020B62F                 db    ? ;
.bss:000000000020B630                 db    ? ;
.bss:000000000020B631                 db    ? ;
.bss:000000000020B632                 db    ? ;
.bss:000000000020B633                 db    ? ;
.bss:000000000020B634                 db    ? ;
.bss:000000000020B635                 db    ? ;
.bss:000000000020B636                 db    ? ;
.bss:000000000020B637                 db    ? ;
.bss:000000000020B638                 db    ? ;
.bss:000000000020B639                 db    ? ;
.bss:000000000020B63A                 db    ? ;
.bss:000000000020B63B                 db    ? ;
.bss:000000000020B63C                 db    ? ;
.bss:000000000020B63D                 db    ? ;
.bss:000000000020B63E                 db    ? ;
.bss:000000000020B63F                 db    ? ;
.bss:000000000020B640                 db    ? ;
.bss:000000000020B641                 db    ? ;
.bss:000000000020B642                 db    ? ;
.bss:000000000020B643                 db    ? ;
.bss:000000000020B644                 db    ? ;
.bss:000000000020B645                 db    ? ;
.bss:000000000020B646                 db    ? ;
.bss:000000000020B647                 db    ? ;
.bss:000000000020B648                 db    ? ;
.bss:000000000020B649                 db    ? ;
.bss:000000000020B64A                 db    ? ;
.bss:000000000020B64B                 db    ? ;
.bss:000000000020B64C                 db    ? ;
.bss:000000000020B64D                 db    ? ;
.bss:000000000020B64E                 db    ? ;
.bss:000000000020B64F                 db    ? ;
.bss:000000000020B650                 db    ? ;
.bss:000000000020B651                 db    ? ;
.bss:000000000020B652                 db    ? ;
.bss:000000000020B653                 db    ? ;
.bss:000000000020B654                 db    ? ;
.bss:000000000020B655                 db    ? ;
.bss:000000000020B656                 db    ? ;
.bss:000000000020B657                 db    ? ;
.bss:000000000020B658                 db    ? ;
.bss:000000000020B659                 db    ? ;
.bss:000000000020B65A                 db    ? ;
.bss:000000000020B65B                 db    ? ;
.bss:000000000020B65C                 db    ? ;
.bss:000000000020B65D                 db    ? ;
.bss:000000000020B65E                 db    ? ;
.bss:000000000020B65F                 db    ? ;
.bss:000000000020B660                 db    ? ;
.bss:000000000020B661                 db    ? ;
.bss:000000000020B662                 db    ? ;
.bss:000000000020B663                 db    ? ;
.bss:000000000020B664                 db    ? ;
.bss:000000000020B665                 db    ? ;
.bss:000000000020B666                 db    ? ;
.bss:000000000020B667                 db    ? ;
.bss:000000000020B668                 db    ? ;
.bss:000000000020B669                 db    ? ;
.bss:000000000020B66A                 db    ? ;
.bss:000000000020B66B                 db    ? ;
.bss:000000000020B66C                 db    ? ;
.bss:000000000020B66D                 db    ? ;
.bss:000000000020B66E                 db    ? ;
.bss:000000000020B66F                 db    ? ;
.bss:000000000020B670                 db    ? ;
.bss:000000000020B671                 db    ? ;
.bss:000000000020B672                 db    ? ;
.bss:000000000020B673                 db    ? ;
.bss:000000000020B674                 db    ? ;
.bss:000000000020B675                 db    ? ;
.bss:000000000020B676                 db    ? ;
.bss:000000000020B677                 db    ? ;
.bss:000000000020B678                 db    ? ;
.bss:000000000020B679                 db    ? ;
.bss:000000000020B67A                 db    ? ;
.bss:000000000020B67B                 db    ? ;
.bss:000000000020B67C                 db    ? ;
.bss:000000000020B67D                 db    ? ;
.bss:000000000020B67E                 db    ? ;
.bss:000000000020B67F                 db    ? ;
.bss:000000000020B680                 db    ? ;
.bss:000000000020B681                 db    ? ;
.bss:000000000020B682                 db    ? ;
.bss:000000000020B683                 db    ? ;
.bss:000000000020B684                 db    ? ;
.bss:000000000020B685                 db    ? ;
.bss:000000000020B686                 db    ? ;
.bss:000000000020B687                 db    ? ;
.bss:000000000020B688                 db    ? ;
.bss:000000000020B689                 db    ? ;
.bss:000000000020B68A                 db    ? ;
.bss:000000000020B68B                 db    ? ;
.bss:000000000020B68C                 db    ? ;
.bss:000000000020B68D                 db    ? ;
.bss:000000000020B68E                 db    ? ;
.bss:000000000020B68F                 db    ? ;
.bss:000000000020B690                 db    ? ;
.bss:000000000020B691                 db    ? ;
.bss:000000000020B692                 db    ? ;
.bss:000000000020B693                 db    ? ;
.bss:000000000020B694                 db    ? ;
.bss:000000000020B695                 db    ? ;
.bss:000000000020B696                 db    ? ;
.bss:000000000020B697                 db    ? ;
.bss:000000000020B698                 db    ? ;
.bss:000000000020B699                 db    ? ;
.bss:000000000020B69A                 db    ? ;
.bss:000000000020B69B                 db    ? ;
.bss:000000000020B69C                 db    ? ;
.bss:000000000020B69D                 db    ? ;
.bss:000000000020B69E                 db    ? ;
.bss:000000000020B69F                 db    ? ;
.bss:000000000020B6A0                 db    ? ;
.bss:000000000020B6A1                 db    ? ;
.bss:000000000020B6A2                 db    ? ;
.bss:000000000020B6A3                 db    ? ;
.bss:000000000020B6A4                 db    ? ;
.bss:000000000020B6A5                 db    ? ;
.bss:000000000020B6A6                 db    ? ;
.bss:000000000020B6A7                 db    ? ;
.bss:000000000020B6A8                 db    ? ;
.bss:000000000020B6A9                 db    ? ;
.bss:000000000020B6AA                 db    ? ;
.bss:000000000020B6AB                 db    ? ;
.bss:000000000020B6AC                 db    ? ;
.bss:000000000020B6AD                 db    ? ;
.bss:000000000020B6AE                 db    ? ;
.bss:000000000020B6AF                 db    ? ;
.bss:000000000020B6B0                 db    ? ;
.bss:000000000020B6B1                 db    ? ;
.bss:000000000020B6B2                 db    ? ;
.bss:000000000020B6B3                 db    ? ;
.bss:000000000020B6B4                 db    ? ;
.bss:000000000020B6B5                 db    ? ;
.bss:000000000020B6B6                 db    ? ;
.bss:000000000020B6B7                 db    ? ;
.bss:000000000020B6B8                 db    ? ;
.bss:000000000020B6B9                 db    ? ;
.bss:000000000020B6BA                 db    ? ;
.bss:000000000020B6BB                 db    ? ;
.bss:000000000020B6BC                 db    ? ;
.bss:000000000020B6BD                 db    ? ;
.bss:000000000020B6BE                 db    ? ;
.bss:000000000020B6BF                 db    ? ;
.bss:000000000020B6C0                 db    ? ;
.bss:000000000020B6C1                 db    ? ;
.bss:000000000020B6C2                 db    ? ;
.bss:000000000020B6C3                 db    ? ;
.bss:000000000020B6C4                 db    ? ;
.bss:000000000020B6C5                 db    ? ;
.bss:000000000020B6C6                 db    ? ;
.bss:000000000020B6C7                 db    ? ;
.bss:000000000020B6C8                 db    ? ;
.bss:000000000020B6C9                 db    ? ;
.bss:000000000020B6CA                 db    ? ;
.bss:000000000020B6CB                 db    ? ;
.bss:000000000020B6CC                 db    ? ;
.bss:000000000020B6CD                 db    ? ;
.bss:000000000020B6CE                 db    ? ;
.bss:000000000020B6CF                 db    ? ;
.bss:000000000020B6D0                 db    ? ;
.bss:000000000020B6D1                 db    ? ;
.bss:000000000020B6D2                 db    ? ;
.bss:000000000020B6D3                 db    ? ;
.bss:000000000020B6D4                 db    ? ;
.bss:000000000020B6D5                 db    ? ;
.bss:000000000020B6D6                 db    ? ;
.bss:000000000020B6D7                 db    ? ;
.bss:000000000020B6D8                 db    ? ;
.bss:000000000020B6D9                 db    ? ;
.bss:000000000020B6DA                 db    ? ;
.bss:000000000020B6DB                 db    ? ;
.bss:000000000020B6DC                 db    ? ;
.bss:000000000020B6DD                 db    ? ;
.bss:000000000020B6DE                 db    ? ;
.bss:000000000020B6DF                 db    ? ;
.bss:000000000020B6E0                 db    ? ;
.bss:000000000020B6E1                 db    ? ;
.bss:000000000020B6E2                 db    ? ;
.bss:000000000020B6E3                 db    ? ;
.bss:000000000020B6E4                 db    ? ;
.bss:000000000020B6E5                 db    ? ;
.bss:000000000020B6E6                 db    ? ;
.bss:000000000020B6E7                 db    ? ;
.bss:000000000020B6E8                 db    ? ;
.bss:000000000020B6E9                 db    ? ;
.bss:000000000020B6EA                 db    ? ;
.bss:000000000020B6EB                 db    ? ;
.bss:000000000020B6EC                 db    ? ;
.bss:000000000020B6ED                 db    ? ;
.bss:000000000020B6EE                 db    ? ;
.bss:000000000020B6EF                 db    ? ;
.bss:000000000020B6F0                 db    ? ;
.bss:000000000020B6F1                 db    ? ;
.bss:000000000020B6F2                 db    ? ;
.bss:000000000020B6F3                 db    ? ;
.bss:000000000020B6F4                 db    ? ;
.bss:000000000020B6F5                 db    ? ;
.bss:000000000020B6F6                 db    ? ;
.bss:000000000020B6F7                 db    ? ;
.bss:000000000020B6F8                 db    ? ;
.bss:000000000020B6F9                 db    ? ;
.bss:000000000020B6FA                 db    ? ;
.bss:000000000020B6FB                 db    ? ;
.bss:000000000020B6FC                 db    ? ;
.bss:000000000020B6FD                 db    ? ;
.bss:000000000020B6FE                 db    ? ;
.bss:000000000020B6FF                 db    ? ;
.bss:000000000020B700                 db    ? ;
.bss:000000000020B701                 db    ? ;
.bss:000000000020B702                 db    ? ;
.bss:000000000020B703                 db    ? ;
.bss:000000000020B704                 db    ? ;
.bss:000000000020B705                 db    ? ;
.bss:000000000020B706                 db    ? ;
.bss:000000000020B707                 db    ? ;
.bss:000000000020B708                 db    ? ;
.bss:000000000020B709                 db    ? ;
.bss:000000000020B70A                 db    ? ;
.bss:000000000020B70B                 db    ? ;
.bss:000000000020B70C                 db    ? ;
.bss:000000000020B70D                 db    ? ;
.bss:000000000020B70E                 db    ? ;
.bss:000000000020B70F                 db    ? ;
.bss:000000000020B710                 db    ? ;
.bss:000000000020B711                 db    ? ;
.bss:000000000020B712                 db    ? ;
.bss:000000000020B713                 db    ? ;
.bss:000000000020B714                 db    ? ;
.bss:000000000020B715                 db    ? ;
.bss:000000000020B716                 db    ? ;
.bss:000000000020B717                 db    ? ;
.bss:000000000020B718                 db    ? ;
.bss:000000000020B719                 db    ? ;
.bss:000000000020B71A                 db    ? ;
.bss:000000000020B71B                 db    ? ;
.bss:000000000020B71C                 db    ? ;
.bss:000000000020B71D                 db    ? ;
.bss:000000000020B71E                 db    ? ;
.bss:000000000020B71F                 db    ? ;
.bss:000000000020B720                 db    ? ;
.bss:000000000020B721                 db    ? ;
.bss:000000000020B722                 db    ? ;
.bss:000000000020B723                 db    ? ;
.bss:000000000020B724                 db    ? ;
.bss:000000000020B725                 db    ? ;
.bss:000000000020B726                 db    ? ;
.bss:000000000020B727                 db    ? ;
.bss:000000000020B728                 db    ? ;
.bss:000000000020B729                 db    ? ;
.bss:000000000020B72A                 db    ? ;
.bss:000000000020B72B                 db    ? ;
.bss:000000000020B72C                 db    ? ;
.bss:000000000020B72D                 db    ? ;
.bss:000000000020B72E                 db    ? ;
.bss:000000000020B72F                 db    ? ;
.bss:000000000020B730                 db    ? ;
.bss:000000000020B731                 db    ? ;
.bss:000000000020B732                 db    ? ;
.bss:000000000020B733                 db    ? ;
.bss:000000000020B734                 db    ? ;
.bss:000000000020B735                 db    ? ;
.bss:000000000020B736                 db    ? ;
.bss:000000000020B737                 db    ? ;
.bss:000000000020B738                 db    ? ;
.bss:000000000020B739                 db    ? ;
.bss:000000000020B73A                 db    ? ;
.bss:000000000020B73B                 db    ? ;
.bss:000000000020B73C                 db    ? ;
.bss:000000000020B73D                 db    ? ;
.bss:000000000020B73E                 db    ? ;
.bss:000000000020B73F                 db    ? ;
.bss:000000000020B740                 db    ? ;
.bss:000000000020B741                 db    ? ;
.bss:000000000020B742                 db    ? ;
.bss:000000000020B743                 db    ? ;
.bss:000000000020B744                 db    ? ;
.bss:000000000020B745                 db    ? ;
.bss:000000000020B746                 db    ? ;
.bss:000000000020B747                 db    ? ;
.bss:000000000020B748                 db    ? ;
.bss:000000000020B749                 db    ? ;
.bss:000000000020B74A                 db    ? ;
.bss:000000000020B74B                 db    ? ;
.bss:000000000020B74C                 db    ? ;
.bss:000000000020B74D                 db    ? ;
.bss:000000000020B74E                 db    ? ;
.bss:000000000020B74F                 db    ? ;
.bss:000000000020B750                 db    ? ;
.bss:000000000020B751                 db    ? ;
.bss:000000000020B752                 db    ? ;
.bss:000000000020B753                 db    ? ;
.bss:000000000020B754                 db    ? ;
.bss:000000000020B755                 db    ? ;
.bss:000000000020B756                 db    ? ;
.bss:000000000020B757                 db    ? ;
.bss:000000000020B758                 db    ? ;
.bss:000000000020B759                 db    ? ;
.bss:000000000020B75A                 db    ? ;
.bss:000000000020B75B                 db    ? ;
.bss:000000000020B75C                 db    ? ;
.bss:000000000020B75D                 db    ? ;
.bss:000000000020B75E                 db    ? ;
.bss:000000000020B75F                 db    ? ;
.bss:000000000020B760                 db    ? ;
.bss:000000000020B761                 db    ? ;
.bss:000000000020B762                 db    ? ;
.bss:000000000020B763                 db    ? ;
.bss:000000000020B764                 db    ? ;
.bss:000000000020B765                 db    ? ;
.bss:000000000020B766                 db    ? ;
.bss:000000000020B767                 db    ? ;
.bss:000000000020B768                 db    ? ;
.bss:000000000020B769                 db    ? ;
.bss:000000000020B76A                 db    ? ;
.bss:000000000020B76B                 db    ? ;
.bss:000000000020B76C                 db    ? ;
.bss:000000000020B76D                 db    ? ;
.bss:000000000020B76E                 db    ? ;
.bss:000000000020B76F                 db    ? ;
.bss:000000000020B770                 db    ? ;
.bss:000000000020B771                 db    ? ;
.bss:000000000020B772                 db    ? ;
.bss:000000000020B773                 db    ? ;
.bss:000000000020B774                 db    ? ;
.bss:000000000020B775                 db    ? ;
.bss:000000000020B776                 db    ? ;
.bss:000000000020B777                 db    ? ;
.bss:000000000020B778                 db    ? ;
.bss:000000000020B779                 db    ? ;
.bss:000000000020B77A                 db    ? ;
.bss:000000000020B77B                 db    ? ;
.bss:000000000020B77C                 db    ? ;
.bss:000000000020B77D                 db    ? ;
.bss:000000000020B77E                 db    ? ;
.bss:000000000020B77F                 db    ? ;
.bss:000000000020B780                 db    ? ;
.bss:000000000020B781                 db    ? ;
.bss:000000000020B782                 db    ? ;
.bss:000000000020B783                 db    ? ;
.bss:000000000020B784                 db    ? ;
.bss:000000000020B785                 db    ? ;
.bss:000000000020B786                 db    ? ;
.bss:000000000020B787                 db    ? ;
.bss:000000000020B788                 db    ? ;
.bss:000000000020B789                 db    ? ;
.bss:000000000020B78A                 db    ? ;
.bss:000000000020B78B                 db    ? ;
.bss:000000000020B78C                 db    ? ;
.bss:000000000020B78D                 db    ? ;
.bss:000000000020B78E                 db    ? ;
.bss:000000000020B78F                 db    ? ;
.bss:000000000020B790                 db    ? ;
.bss:000000000020B791                 db    ? ;
.bss:000000000020B792                 db    ? ;
.bss:000000000020B793                 db    ? ;
.bss:000000000020B794                 db    ? ;
.bss:000000000020B795                 db    ? ;
.bss:000000000020B796                 db    ? ;
.bss:000000000020B797                 db    ? ;
.bss:000000000020B798                 db    ? ;
.bss:000000000020B799                 db    ? ;
.bss:000000000020B79A                 db    ? ;
.bss:000000000020B79B                 db    ? ;
.bss:000000000020B79C                 db    ? ;
.bss:000000000020B79D                 db    ? ;
.bss:000000000020B79E                 db    ? ;
.bss:000000000020B79F                 db    ? ;
.bss:000000000020B7A0                 db    ? ;
.bss:000000000020B7A1                 db    ? ;
.bss:000000000020B7A2                 db    ? ;
.bss:000000000020B7A3                 db    ? ;
.bss:000000000020B7A4                 db    ? ;
.bss:000000000020B7A5                 db    ? ;
.bss:000000000020B7A6                 db    ? ;
.bss:000000000020B7A7                 db    ? ;
.bss:000000000020B7A8                 db    ? ;
.bss:000000000020B7A9                 db    ? ;
.bss:000000000020B7AA                 db    ? ;
.bss:000000000020B7AB                 db    ? ;
.bss:000000000020B7AC                 db    ? ;
.bss:000000000020B7AD                 db    ? ;
.bss:000000000020B7AE                 db    ? ;
.bss:000000000020B7AF                 db    ? ;
.bss:000000000020B7B0                 db    ? ;
.bss:000000000020B7B1                 db    ? ;
.bss:000000000020B7B2                 db    ? ;
.bss:000000000020B7B3                 db    ? ;
.bss:000000000020B7B4                 db    ? ;
.bss:000000000020B7B5                 db    ? ;
.bss:000000000020B7B6                 db    ? ;
.bss:000000000020B7B7                 db    ? ;
.bss:000000000020B7B8                 db    ? ;
.bss:000000000020B7B9                 db    ? ;
.bss:000000000020B7BA                 db    ? ;
.bss:000000000020B7BB                 db    ? ;
.bss:000000000020B7BC                 db    ? ;
.bss:000000000020B7BD                 db    ? ;
.bss:000000000020B7BE                 db    ? ;
.bss:000000000020B7BF                 db    ? ;
.bss:000000000020B7C0                 db    ? ;
.bss:000000000020B7C1                 db    ? ;
.bss:000000000020B7C2                 db    ? ;
.bss:000000000020B7C3                 db    ? ;
.bss:000000000020B7C4                 db    ? ;
.bss:000000000020B7C5                 db    ? ;
.bss:000000000020B7C6                 db    ? ;
.bss:000000000020B7C7                 db    ? ;
.bss:000000000020B7C8                 db    ? ;
.bss:000000000020B7C9                 db    ? ;
.bss:000000000020B7CA                 db    ? ;
.bss:000000000020B7CB                 db    ? ;
.bss:000000000020B7CC                 db    ? ;
.bss:000000000020B7CD                 db    ? ;
.bss:000000000020B7CE                 db    ? ;
.bss:000000000020B7CF                 db    ? ;
.bss:000000000020B7D0                 db    ? ;
.bss:000000000020B7D1                 db    ? ;
.bss:000000000020B7D2                 db    ? ;
.bss:000000000020B7D3                 db    ? ;
.bss:000000000020B7D4                 db    ? ;
.bss:000000000020B7D5                 db    ? ;
.bss:000000000020B7D6                 db    ? ;
.bss:000000000020B7D7                 db    ? ;
.bss:000000000020B7D8                 db    ? ;
.bss:000000000020B7D9                 db    ? ;
.bss:000000000020B7DA                 db    ? ;
.bss:000000000020B7DB                 db    ? ;
.bss:000000000020B7DC                 db    ? ;
.bss:000000000020B7DD                 db    ? ;
.bss:000000000020B7DE                 db    ? ;
.bss:000000000020B7DF                 db    ? ;
.bss:000000000020B7E0                 db    ? ;
.bss:000000000020B7E1                 db    ? ;
.bss:000000000020B7E2                 db    ? ;
.bss:000000000020B7E3                 db    ? ;
.bss:000000000020B7E4                 db    ? ;
.bss:000000000020B7E5                 db    ? ;
.bss:000000000020B7E6                 db    ? ;
.bss:000000000020B7E7                 db    ? ;
.bss:000000000020B7E8                 db    ? ;
.bss:000000000020B7E9                 db    ? ;
.bss:000000000020B7EA                 db    ? ;
.bss:000000000020B7EB                 db    ? ;
.bss:000000000020B7EC                 db    ? ;
.bss:000000000020B7ED                 db    ? ;
.bss:000000000020B7EE                 db    ? ;
.bss:000000000020B7EF                 db    ? ;
.bss:000000000020B7F0                 db    ? ;
.bss:000000000020B7F1                 db    ? ;
.bss:000000000020B7F2                 db    ? ;
.bss:000000000020B7F3                 db    ? ;
.bss:000000000020B7F4                 db    ? ;
.bss:000000000020B7F5                 db    ? ;
.bss:000000000020B7F6                 db    ? ;
.bss:000000000020B7F7                 db    ? ;
.bss:000000000020B7F8                 db    ? ;
.bss:000000000020B7F9                 db    ? ;
.bss:000000000020B7FA                 db    ? ;
.bss:000000000020B7FB                 db    ? ;
.bss:000000000020B7FC                 db    ? ;
.bss:000000000020B7FD                 db    ? ;
.bss:000000000020B7FE                 db    ? ;
.bss:000000000020B7FF                 db    ? ;
.bss:000000000020B800                 db    ? ;
.bss:000000000020B801                 db    ? ;
.bss:000000000020B802                 db    ? ;
.bss:000000000020B803                 db    ? ;
.bss:000000000020B804                 db    ? ;
.bss:000000000020B805                 db    ? ;
.bss:000000000020B806                 db    ? ;
.bss:000000000020B807                 db    ? ;
.bss:000000000020B808                 db    ? ;
.bss:000000000020B809                 db    ? ;
.bss:000000000020B80A                 db    ? ;
.bss:000000000020B80B                 db    ? ;
.bss:000000000020B80C                 db    ? ;
.bss:000000000020B80D                 db    ? ;
.bss:000000000020B80E                 db    ? ;
.bss:000000000020B80F                 db    ? ;
.bss:000000000020B810                 db    ? ;
.bss:000000000020B811                 db    ? ;
.bss:000000000020B812                 db    ? ;
.bss:000000000020B813                 db    ? ;
.bss:000000000020B814                 db    ? ;
.bss:000000000020B815                 db    ? ;
.bss:000000000020B816                 db    ? ;
.bss:000000000020B817                 db    ? ;
.bss:000000000020B818                 db    ? ;
.bss:000000000020B819                 db    ? ;
.bss:000000000020B81A                 db    ? ;
.bss:000000000020B81B                 db    ? ;
.bss:000000000020B81C                 db    ? ;
.bss:000000000020B81D                 db    ? ;
.bss:000000000020B81E                 db    ? ;
.bss:000000000020B81F                 db    ? ;
.bss:000000000020B820                 db    ? ;
.bss:000000000020B821                 db    ? ;
.bss:000000000020B822                 db    ? ;
.bss:000000000020B823                 db    ? ;
.bss:000000000020B824                 db    ? ;
.bss:000000000020B825                 db    ? ;
.bss:000000000020B826                 db    ? ;
.bss:000000000020B827                 db    ? ;
.bss:000000000020B828                 db    ? ;
.bss:000000000020B829                 db    ? ;
.bss:000000000020B82A                 db    ? ;
.bss:000000000020B82B                 db    ? ;
.bss:000000000020B82C                 db    ? ;
.bss:000000000020B82D                 db    ? ;
.bss:000000000020B82E                 db    ? ;
.bss:000000000020B82F                 db    ? ;
.bss:000000000020B830                 db    ? ;
.bss:000000000020B831                 db    ? ;
.bss:000000000020B832                 db    ? ;
.bss:000000000020B833                 db    ? ;
.bss:000000000020B834                 db    ? ;
.bss:000000000020B835                 db    ? ;
.bss:000000000020B836                 db    ? ;
.bss:000000000020B837                 db    ? ;
.bss:000000000020B838                 db    ? ;
.bss:000000000020B839                 db    ? ;
.bss:000000000020B83A                 db    ? ;
.bss:000000000020B83B                 db    ? ;
.bss:000000000020B83C                 db    ? ;
.bss:000000000020B83D                 db    ? ;
.bss:000000000020B83E                 db    ? ;
.bss:000000000020B83F                 db    ? ;
.bss:000000000020B840                 db    ? ;
.bss:000000000020B841                 db    ? ;
.bss:000000000020B842                 db    ? ;
.bss:000000000020B843                 db    ? ;
.bss:000000000020B844                 db    ? ;
.bss:000000000020B845                 db    ? ;
.bss:000000000020B846                 db    ? ;
.bss:000000000020B847                 db    ? ;
.bss:000000000020B848                 db    ? ;
.bss:000000000020B849                 db    ? ;
.bss:000000000020B84A                 db    ? ;
.bss:000000000020B84B                 db    ? ;
.bss:000000000020B84C                 db    ? ;
.bss:000000000020B84D                 db    ? ;
.bss:000000000020B84E                 db    ? ;
.bss:000000000020B84F                 db    ? ;
.bss:000000000020B850                 db    ? ;
.bss:000000000020B851                 db    ? ;
.bss:000000000020B852                 db    ? ;
.bss:000000000020B853                 db    ? ;
.bss:000000000020B854                 db    ? ;
.bss:000000000020B855                 db    ? ;
.bss:000000000020B856                 db    ? ;
.bss:000000000020B857                 db    ? ;
.bss:000000000020B858                 db    ? ;
.bss:000000000020B859                 db    ? ;
.bss:000000000020B85A                 db    ? ;
.bss:000000000020B85B                 db    ? ;
.bss:000000000020B85C                 db    ? ;
.bss:000000000020B85D                 db    ? ;
.bss:000000000020B85E                 db    ? ;
.bss:000000000020B85F                 db    ? ;
.bss:000000000020B860                 db    ? ;
.bss:000000000020B861                 db    ? ;
.bss:000000000020B862                 db    ? ;
.bss:000000000020B863                 db    ? ;
.bss:000000000020B864                 db    ? ;
.bss:000000000020B865                 db    ? ;
.bss:000000000020B866                 db    ? ;
.bss:000000000020B867                 db    ? ;
.bss:000000000020B868                 db    ? ;
.bss:000000000020B869                 db    ? ;
.bss:000000000020B86A                 db    ? ;
.bss:000000000020B86B                 db    ? ;
.bss:000000000020B86C                 db    ? ;
.bss:000000000020B86D                 db    ? ;
.bss:000000000020B86E                 db    ? ;
.bss:000000000020B86F                 db    ? ;
.bss:000000000020B870                 db    ? ;
.bss:000000000020B871                 db    ? ;
.bss:000000000020B872                 db    ? ;
.bss:000000000020B873                 db    ? ;
.bss:000000000020B874                 db    ? ;
.bss:000000000020B875                 db    ? ;
.bss:000000000020B876                 db    ? ;
.bss:000000000020B877                 db    ? ;
.bss:000000000020B878                 db    ? ;
.bss:000000000020B879                 db    ? ;
.bss:000000000020B87A                 db    ? ;
.bss:000000000020B87B                 db    ? ;
.bss:000000000020B87C                 db    ? ;
.bss:000000000020B87D                 db    ? ;
.bss:000000000020B87E                 db    ? ;
.bss:000000000020B87F                 db    ? ;
.bss:000000000020B880                 db    ? ;
.bss:000000000020B881                 db    ? ;
.bss:000000000020B882                 db    ? ;
.bss:000000000020B883                 db    ? ;
.bss:000000000020B884                 db    ? ;
.bss:000000000020B885                 db    ? ;
.bss:000000000020B886                 db    ? ;
.bss:000000000020B887                 db    ? ;
.bss:000000000020B888                 db    ? ;
.bss:000000000020B889                 db    ? ;
.bss:000000000020B88A                 db    ? ;
.bss:000000000020B88B                 db    ? ;
.bss:000000000020B88C                 db    ? ;
.bss:000000000020B88D                 db    ? ;
.bss:000000000020B88E                 db    ? ;
.bss:000000000020B88F                 db    ? ;
.bss:000000000020B890                 db    ? ;
.bss:000000000020B891                 db    ? ;
.bss:000000000020B892                 db    ? ;
.bss:000000000020B893                 db    ? ;
.bss:000000000020B894                 db    ? ;
.bss:000000000020B895                 db    ? ;
.bss:000000000020B896                 db    ? ;
.bss:000000000020B897                 db    ? ;
.bss:000000000020B898                 db    ? ;
.bss:000000000020B899                 db    ? ;
.bss:000000000020B89A                 db    ? ;
.bss:000000000020B89B                 db    ? ;
.bss:000000000020B89C                 db    ? ;
.bss:000000000020B89D                 db    ? ;
.bss:000000000020B89E                 db    ? ;
.bss:000000000020B89F                 db    ? ;
.bss:000000000020B8A0                 db    ? ;
.bss:000000000020B8A1                 db    ? ;
.bss:000000000020B8A2                 db    ? ;
.bss:000000000020B8A3                 db    ? ;
.bss:000000000020B8A4                 db    ? ;
.bss:000000000020B8A5                 db    ? ;
.bss:000000000020B8A6                 db    ? ;
.bss:000000000020B8A7                 db    ? ;
.bss:000000000020B8A8                 db    ? ;
.bss:000000000020B8A9                 db    ? ;
.bss:000000000020B8AA                 db    ? ;
.bss:000000000020B8AB                 db    ? ;
.bss:000000000020B8AC                 db    ? ;
.bss:000000000020B8AD                 db    ? ;
.bss:000000000020B8AE                 db    ? ;
.bss:000000000020B8AF                 db    ? ;
.bss:000000000020B8B0                 db    ? ;
.bss:000000000020B8B1                 db    ? ;
.bss:000000000020B8B2                 db    ? ;
.bss:000000000020B8B3                 db    ? ;
.bss:000000000020B8B4                 db    ? ;
.bss:000000000020B8B5                 db    ? ;
.bss:000000000020B8B6                 db    ? ;
.bss:000000000020B8B7                 db    ? ;
.bss:000000000020B8B8                 db    ? ;
.bss:000000000020B8B9                 db    ? ;
.bss:000000000020B8BA                 db    ? ;
.bss:000000000020B8BB                 db    ? ;
.bss:000000000020B8BC                 db    ? ;
.bss:000000000020B8BD                 db    ? ;
.bss:000000000020B8BE                 db    ? ;
.bss:000000000020B8BF                 db    ? ;
.bss:000000000020B8C0                 db    ? ;
.bss:000000000020B8C1                 db    ? ;
.bss:000000000020B8C2                 db    ? ;
.bss:000000000020B8C3                 db    ? ;
.bss:000000000020B8C4                 db    ? ;
.bss:000000000020B8C5                 db    ? ;
.bss:000000000020B8C6                 db    ? ;
.bss:000000000020B8C7                 db    ? ;
.bss:000000000020B8C8                 db    ? ;
.bss:000000000020B8C9                 db    ? ;
.bss:000000000020B8CA                 db    ? ;
.bss:000000000020B8CB                 db    ? ;
.bss:000000000020B8CC                 db    ? ;
.bss:000000000020B8CD                 db    ? ;
.bss:000000000020B8CE                 db    ? ;
.bss:000000000020B8CF                 db    ? ;
.bss:000000000020B8D0                 db    ? ;
.bss:000000000020B8D1                 db    ? ;
.bss:000000000020B8D2                 db    ? ;
.bss:000000000020B8D3                 db    ? ;
.bss:000000000020B8D4                 db    ? ;
.bss:000000000020B8D5                 db    ? ;
.bss:000000000020B8D6                 db    ? ;
.bss:000000000020B8D7                 db    ? ;
.bss:000000000020B8D8                 db    ? ;
.bss:000000000020B8D9                 db    ? ;
.bss:000000000020B8DA                 db    ? ;
.bss:000000000020B8DB                 db    ? ;
.bss:000000000020B8DC                 db    ? ;
.bss:000000000020B8DD                 db    ? ;
.bss:000000000020B8DE                 db    ? ;
.bss:000000000020B8DF                 db    ? ;
.bss:000000000020B8E0                 db    ? ;
.bss:000000000020B8E1                 db    ? ;
.bss:000000000020B8E2                 db    ? ;
.bss:000000000020B8E3                 db    ? ;
.bss:000000000020B8E4                 db    ? ;
.bss:000000000020B8E5                 db    ? ;
.bss:000000000020B8E6                 db    ? ;
.bss:000000000020B8E7                 db    ? ;
.bss:000000000020B8E8                 db    ? ;
.bss:000000000020B8E9                 db    ? ;
.bss:000000000020B8EA                 db    ? ;
.bss:000000000020B8EB                 db    ? ;
.bss:000000000020B8EC                 db    ? ;
.bss:000000000020B8ED                 db    ? ;
.bss:000000000020B8EE                 db    ? ;
.bss:000000000020B8EF                 db    ? ;
.bss:000000000020B8F0                 db    ? ;
.bss:000000000020B8F1                 db    ? ;
.bss:000000000020B8F2                 db    ? ;
.bss:000000000020B8F3                 db    ? ;
.bss:000000000020B8F4                 db    ? ;
.bss:000000000020B8F5                 db    ? ;
.bss:000000000020B8F6                 db    ? ;
.bss:000000000020B8F7                 db    ? ;
.bss:000000000020B8F8                 db    ? ;
.bss:000000000020B8F9                 db    ? ;
.bss:000000000020B8FA                 db    ? ;
.bss:000000000020B8FB                 db    ? ;
.bss:000000000020B8FC                 db    ? ;
.bss:000000000020B8FD                 db    ? ;
.bss:000000000020B8FE                 db    ? ;
.bss:000000000020B8FF                 db    ? ;
.bss:000000000020B900                 db    ? ;
.bss:000000000020B901                 db    ? ;
.bss:000000000020B902                 db    ? ;
.bss:000000000020B903                 db    ? ;
.bss:000000000020B904                 db    ? ;
.bss:000000000020B905                 db    ? ;
.bss:000000000020B906                 db    ? ;
.bss:000000000020B907                 db    ? ;
.bss:000000000020B908                 db    ? ;
.bss:000000000020B909                 db    ? ;
.bss:000000000020B90A                 db    ? ;
.bss:000000000020B90B                 db    ? ;
.bss:000000000020B90C                 db    ? ;
.bss:000000000020B90D                 db    ? ;
.bss:000000000020B90E                 db    ? ;
.bss:000000000020B90F                 db    ? ;
.bss:000000000020B910                 db    ? ;
.bss:000000000020B911                 db    ? ;
.bss:000000000020B912                 db    ? ;
.bss:000000000020B913                 db    ? ;
.bss:000000000020B914                 db    ? ;
.bss:000000000020B915                 db    ? ;
.bss:000000000020B916                 db    ? ;
.bss:000000000020B917                 db    ? ;
.bss:000000000020B918                 db    ? ;
.bss:000000000020B919                 db    ? ;
.bss:000000000020B91A                 db    ? ;
.bss:000000000020B91B                 db    ? ;
.bss:000000000020B91C                 db    ? ;
.bss:000000000020B91D                 db    ? ;
.bss:000000000020B91E                 db    ? ;
.bss:000000000020B91F                 db    ? ;
.bss:000000000020B920                 db    ? ;
.bss:000000000020B921                 db    ? ;
.bss:000000000020B922                 db    ? ;
.bss:000000000020B923                 db    ? ;
.bss:000000000020B924                 db    ? ;
.bss:000000000020B925                 db    ? ;
.bss:000000000020B926                 db    ? ;
.bss:000000000020B927                 db    ? ;
.bss:000000000020B928                 db    ? ;
.bss:000000000020B929                 db    ? ;
.bss:000000000020B92A                 db    ? ;
.bss:000000000020B92B                 db    ? ;
.bss:000000000020B92C                 db    ? ;
.bss:000000000020B92D                 db    ? ;
.bss:000000000020B92E                 db    ? ;
.bss:000000000020B92F                 db    ? ;
.bss:000000000020B930                 db    ? ;
.bss:000000000020B931                 db    ? ;
.bss:000000000020B932                 db    ? ;
.bss:000000000020B933                 db    ? ;
.bss:000000000020B934                 db    ? ;
.bss:000000000020B935                 db    ? ;
.bss:000000000020B936                 db    ? ;
.bss:000000000020B937                 db    ? ;
.bss:000000000020B938                 db    ? ;
.bss:000000000020B939                 db    ? ;
.bss:000000000020B93A                 db    ? ;
.bss:000000000020B93B                 db    ? ;
.bss:000000000020B93C                 db    ? ;
.bss:000000000020B93D                 db    ? ;
.bss:000000000020B93E                 db    ? ;
.bss:000000000020B93F                 db    ? ;
.bss:000000000020B940                 db    ? ;
.bss:000000000020B941                 db    ? ;
.bss:000000000020B942                 db    ? ;
.bss:000000000020B943                 db    ? ;
.bss:000000000020B944                 db    ? ;
.bss:000000000020B945                 db    ? ;
.bss:000000000020B946                 db    ? ;
.bss:000000000020B947                 db    ? ;
.bss:000000000020B948                 db    ? ;
.bss:000000000020B949                 db    ? ;
.bss:000000000020B94A                 db    ? ;
.bss:000000000020B94B                 db    ? ;
.bss:000000000020B94C                 db    ? ;
.bss:000000000020B94D                 db    ? ;
.bss:000000000020B94E                 db    ? ;
.bss:000000000020B94F                 db    ? ;
.bss:000000000020B950                 db    ? ;
.bss:000000000020B951                 db    ? ;
.bss:000000000020B952                 db    ? ;
.bss:000000000020B953                 db    ? ;
.bss:000000000020B954                 db    ? ;
.bss:000000000020B955                 db    ? ;
.bss:000000000020B956                 db    ? ;
.bss:000000000020B957                 db    ? ;
.bss:000000000020B958                 db    ? ;
.bss:000000000020B959                 db    ? ;
.bss:000000000020B95A                 db    ? ;
.bss:000000000020B95B                 db    ? ;
.bss:000000000020B95C                 db    ? ;
.bss:000000000020B95D                 db    ? ;
.bss:000000000020B95E                 db    ? ;
.bss:000000000020B95F                 db    ? ;
.bss:000000000020B960                 db    ? ;
.bss:000000000020B961                 db    ? ;
.bss:000000000020B962                 db    ? ;
.bss:000000000020B963                 db    ? ;
.bss:000000000020B964                 db    ? ;
.bss:000000000020B965                 db    ? ;
.bss:000000000020B966                 db    ? ;
.bss:000000000020B967                 db    ? ;
.bss:000000000020B968                 db    ? ;
.bss:000000000020B969                 db    ? ;
.bss:000000000020B96A                 db    ? ;
.bss:000000000020B96B                 db    ? ;
.bss:000000000020B96C                 db    ? ;
.bss:000000000020B96D                 db    ? ;
.bss:000000000020B96E                 db    ? ;
.bss:000000000020B96F                 db    ? ;
.bss:000000000020B970                 db    ? ;
.bss:000000000020B971                 db    ? ;
.bss:000000000020B972                 db    ? ;
.bss:000000000020B973                 db    ? ;
.bss:000000000020B974                 db    ? ;
.bss:000000000020B975                 db    ? ;
.bss:000000000020B976                 db    ? ;
.bss:000000000020B977                 db    ? ;
.bss:000000000020B978                 db    ? ;
.bss:000000000020B979                 db    ? ;
.bss:000000000020B97A                 db    ? ;
.bss:000000000020B97B                 db    ? ;
.bss:000000000020B97C                 db    ? ;
.bss:000000000020B97D                 db    ? ;
.bss:000000000020B97E                 db    ? ;
.bss:000000000020B97F                 db    ? ;
.bss:000000000020B980                 db    ? ;
.bss:000000000020B981                 db    ? ;
.bss:000000000020B982                 db    ? ;
.bss:000000000020B983                 db    ? ;
.bss:000000000020B984                 db    ? ;
.bss:000000000020B985                 db    ? ;
.bss:000000000020B986                 db    ? ;
.bss:000000000020B987                 db    ? ;
.bss:000000000020B988                 db    ? ;
.bss:000000000020B989                 db    ? ;
.bss:000000000020B98A                 db    ? ;
.bss:000000000020B98B                 db    ? ;
.bss:000000000020B98C                 db    ? ;
.bss:000000000020B98D                 db    ? ;
.bss:000000000020B98E                 db    ? ;
.bss:000000000020B98F                 db    ? ;
.bss:000000000020B990                 db    ? ;
.bss:000000000020B991                 db    ? ;
.bss:000000000020B992                 db    ? ;
.bss:000000000020B993                 db    ? ;
.bss:000000000020B994                 db    ? ;
.bss:000000000020B995                 db    ? ;
.bss:000000000020B996                 db    ? ;
.bss:000000000020B997                 db    ? ;
.bss:000000000020B998                 db    ? ;
.bss:000000000020B999                 db    ? ;
.bss:000000000020B99A                 db    ? ;
.bss:000000000020B99B                 db    ? ;
.bss:000000000020B99C                 db    ? ;
.bss:000000000020B99D                 db    ? ;
.bss:000000000020B99E                 db    ? ;
.bss:000000000020B99F                 db    ? ;
.bss:000000000020B9A0                 db    ? ;
.bss:000000000020B9A1                 db    ? ;
.bss:000000000020B9A2                 db    ? ;
.bss:000000000020B9A3                 db    ? ;
.bss:000000000020B9A4                 db    ? ;
.bss:000000000020B9A5                 db    ? ;
.bss:000000000020B9A6                 db    ? ;
.bss:000000000020B9A7                 db    ? ;
.bss:000000000020B9A8                 db    ? ;
.bss:000000000020B9A9                 db    ? ;
.bss:000000000020B9AA                 db    ? ;
.bss:000000000020B9AB                 db    ? ;
.bss:000000000020B9AC                 db    ? ;
.bss:000000000020B9AD                 db    ? ;
.bss:000000000020B9AE                 db    ? ;
.bss:000000000020B9AF                 db    ? ;
.bss:000000000020B9B0                 db    ? ;
.bss:000000000020B9B1                 db    ? ;
.bss:000000000020B9B2                 db    ? ;
.bss:000000000020B9B3                 db    ? ;
.bss:000000000020B9B4                 db    ? ;
.bss:000000000020B9B5                 db    ? ;
.bss:000000000020B9B6                 db    ? ;
.bss:000000000020B9B7                 db    ? ;
.bss:000000000020B9B8                 db    ? ;
.bss:000000000020B9B9                 db    ? ;
.bss:000000000020B9BA                 db    ? ;
.bss:000000000020B9BB                 db    ? ;
.bss:000000000020B9BC                 db    ? ;
.bss:000000000020B9BD                 db    ? ;
.bss:000000000020B9BE                 db    ? ;
.bss:000000000020B9BF                 db    ? ;
.bss:000000000020B9C0                 db    ? ;
.bss:000000000020B9C1                 db    ? ;
.bss:000000000020B9C2                 db    ? ;
.bss:000000000020B9C3                 db    ? ;
.bss:000000000020B9C4                 db    ? ;
.bss:000000000020B9C5                 db    ? ;
.bss:000000000020B9C6                 db    ? ;
.bss:000000000020B9C7                 db    ? ;
.bss:000000000020B9C8                 db    ? ;
.bss:000000000020B9C9                 db    ? ;
.bss:000000000020B9CA                 db    ? ;
.bss:000000000020B9CB                 db    ? ;
.bss:000000000020B9CC                 db    ? ;
.bss:000000000020B9CD                 db    ? ;
.bss:000000000020B9CE                 db    ? ;
.bss:000000000020B9CF                 db    ? ;
.bss:000000000020B9D0                 db    ? ;
.bss:000000000020B9D1                 db    ? ;
.bss:000000000020B9D2                 db    ? ;
.bss:000000000020B9D3                 db    ? ;
.bss:000000000020B9D4                 db    ? ;
.bss:000000000020B9D5                 db    ? ;
.bss:000000000020B9D6                 db    ? ;
.bss:000000000020B9D7                 db    ? ;
.bss:000000000020B9D8                 db    ? ;
.bss:000000000020B9D9                 db    ? ;
.bss:000000000020B9DA                 db    ? ;
.bss:000000000020B9DB                 db    ? ;
.bss:000000000020B9DC                 db    ? ;
.bss:000000000020B9DD                 db    ? ;
.bss:000000000020B9DE                 db    ? ;
.bss:000000000020B9DF                 db    ? ;
.bss:000000000020B9E0                 db    ? ;
.bss:000000000020B9E1                 db    ? ;
.bss:000000000020B9E2                 db    ? ;
.bss:000000000020B9E3                 db    ? ;
.bss:000000000020B9E4                 db    ? ;
.bss:000000000020B9E5                 db    ? ;
.bss:000000000020B9E6                 db    ? ;
.bss:000000000020B9E7                 db    ? ;
.bss:000000000020B9E8                 db    ? ;
.bss:000000000020B9E9                 db    ? ;
.bss:000000000020B9EA                 db    ? ;
.bss:000000000020B9EB                 db    ? ;
.bss:000000000020B9EC                 db    ? ;
.bss:000000000020B9ED                 db    ? ;
.bss:000000000020B9EE                 db    ? ;
.bss:000000000020B9EF                 db    ? ;
.bss:000000000020B9F0                 db    ? ;
.bss:000000000020B9F1                 db    ? ;
.bss:000000000020B9F2                 db    ? ;
.bss:000000000020B9F3                 db    ? ;
.bss:000000000020B9F4                 db    ? ;
.bss:000000000020B9F5                 db    ? ;
.bss:000000000020B9F6                 db    ? ;
.bss:000000000020B9F7                 db    ? ;
.bss:000000000020B9F8                 db    ? ;
.bss:000000000020B9F9                 db    ? ;
.bss:000000000020B9FA                 db    ? ;
.bss:000000000020B9FB                 db    ? ;
.bss:000000000020B9FC                 db    ? ;
.bss:000000000020B9FD                 db    ? ;
.bss:000000000020B9FE                 db    ? ;
.bss:000000000020B9FF                 db    ? ;
.bss:000000000020BA00                 db    ? ;
.bss:000000000020BA01                 db    ? ;
.bss:000000000020BA02                 db    ? ;
.bss:000000000020BA03                 db    ? ;
.bss:000000000020BA04                 db    ? ;
.bss:000000000020BA05                 db    ? ;
.bss:000000000020BA06                 db    ? ;
.bss:000000000020BA07                 db    ? ;
.bss:000000000020BA08                 db    ? ;
.bss:000000000020BA09                 db    ? ;
.bss:000000000020BA0A                 db    ? ;
.bss:000000000020BA0B                 db    ? ;
.bss:000000000020BA0C                 db    ? ;
.bss:000000000020BA0D                 db    ? ;
.bss:000000000020BA0E                 db    ? ;
.bss:000000000020BA0F                 db    ? ;
.bss:000000000020BA10                 db    ? ;
.bss:000000000020BA11                 db    ? ;
.bss:000000000020BA12                 db    ? ;
.bss:000000000020BA13                 db    ? ;
.bss:000000000020BA14                 db    ? ;
.bss:000000000020BA15                 db    ? ;
.bss:000000000020BA16                 db    ? ;
.bss:000000000020BA17                 db    ? ;
.bss:000000000020BA18                 db    ? ;
.bss:000000000020BA19                 db    ? ;
.bss:000000000020BA1A                 db    ? ;
.bss:000000000020BA1B                 db    ? ;
.bss:000000000020BA1C                 db    ? ;
.bss:000000000020BA1D                 db    ? ;
.bss:000000000020BA1E                 db    ? ;
.bss:000000000020BA1F                 db    ? ;
.bss:000000000020BA20                 db    ? ;
.bss:000000000020BA21                 db    ? ;
.bss:000000000020BA22                 db    ? ;
.bss:000000000020BA23                 db    ? ;
.bss:000000000020BA24                 db    ? ;
.bss:000000000020BA25                 db    ? ;
.bss:000000000020BA26                 db    ? ;
.bss:000000000020BA27                 db    ? ;
.bss:000000000020BA28                 db    ? ;
.bss:000000000020BA29                 db    ? ;
.bss:000000000020BA2A                 db    ? ;
.bss:000000000020BA2B                 db    ? ;
.bss:000000000020BA2C                 db    ? ;
.bss:000000000020BA2D                 db    ? ;
.bss:000000000020BA2E                 db    ? ;
.bss:000000000020BA2F                 db    ? ;
.bss:000000000020BA30                 db    ? ;
.bss:000000000020BA31                 db    ? ;
.bss:000000000020BA32                 db    ? ;
.bss:000000000020BA33                 db    ? ;
.bss:000000000020BA34                 db    ? ;
.bss:000000000020BA35                 db    ? ;
.bss:000000000020BA36                 db    ? ;
.bss:000000000020BA37                 db    ? ;
.bss:000000000020BA38                 db    ? ;
.bss:000000000020BA39                 db    ? ;
.bss:000000000020BA3A                 db    ? ;
.bss:000000000020BA3B                 db    ? ;
.bss:000000000020BA3C                 db    ? ;
.bss:000000000020BA3D                 db    ? ;
.bss:000000000020BA3E                 db    ? ;
.bss:000000000020BA3F                 db    ? ;
.bss:000000000020BA40                 db    ? ;
.bss:000000000020BA41                 db    ? ;
.bss:000000000020BA42                 db    ? ;
.bss:000000000020BA43                 db    ? ;
.bss:000000000020BA44                 db    ? ;
.bss:000000000020BA45                 db    ? ;
.bss:000000000020BA46                 db    ? ;
.bss:000000000020BA47                 db    ? ;
.bss:000000000020BA48                 db    ? ;
.bss:000000000020BA49                 db    ? ;
.bss:000000000020BA4A                 db    ? ;
.bss:000000000020BA4B                 db    ? ;
.bss:000000000020BA4C                 db    ? ;
.bss:000000000020BA4D                 db    ? ;
.bss:000000000020BA4E                 db    ? ;
.bss:000000000020BA4F                 db    ? ;
.bss:000000000020BA50                 db    ? ;
.bss:000000000020BA51                 db    ? ;
.bss:000000000020BA52                 db    ? ;
.bss:000000000020BA53                 db    ? ;
.bss:000000000020BA54                 db    ? ;
.bss:000000000020BA55                 db    ? ;
.bss:000000000020BA56                 db    ? ;
.bss:000000000020BA57                 db    ? ;
.bss:000000000020BA58                 db    ? ;
.bss:000000000020BA59                 db    ? ;
.bss:000000000020BA5A                 db    ? ;
.bss:000000000020BA5B                 db    ? ;
.bss:000000000020BA5C                 db    ? ;
.bss:000000000020BA5D                 db    ? ;
.bss:000000000020BA5E                 db    ? ;
.bss:000000000020BA5F                 db    ? ;
.bss:000000000020BA60                 db    ? ;
.bss:000000000020BA61                 db    ? ;
.bss:000000000020BA62                 db    ? ;
.bss:000000000020BA63                 db    ? ;
.bss:000000000020BA64                 db    ? ;
.bss:000000000020BA65                 db    ? ;
.bss:000000000020BA66                 db    ? ;
.bss:000000000020BA67                 db    ? ;
.bss:000000000020BA68                 db    ? ;
.bss:000000000020BA69                 db    ? ;
.bss:000000000020BA6A                 db    ? ;
.bss:000000000020BA6B                 db    ? ;
.bss:000000000020BA6C                 db    ? ;
.bss:000000000020BA6D                 db    ? ;
.bss:000000000020BA6E                 db    ? ;
.bss:000000000020BA6F                 db    ? ;
.bss:000000000020BA70                 db    ? ;
.bss:000000000020BA71                 db    ? ;
.bss:000000000020BA72                 db    ? ;
.bss:000000000020BA73                 db    ? ;
.bss:000000000020BA74                 db    ? ;
.bss:000000000020BA75                 db    ? ;
.bss:000000000020BA76                 db    ? ;
.bss:000000000020BA77                 db    ? ;
.bss:000000000020BA78                 db    ? ;
.bss:000000000020BA79                 db    ? ;
.bss:000000000020BA7A                 db    ? ;
.bss:000000000020BA7B                 db    ? ;
.bss:000000000020BA7C                 db    ? ;
.bss:000000000020BA7D                 db    ? ;
.bss:000000000020BA7E                 db    ? ;
.bss:000000000020BA7F                 db    ? ;
.bss:000000000020BA80                 db    ? ;
.bss:000000000020BA81                 db    ? ;
.bss:000000000020BA82                 db    ? ;
.bss:000000000020BA83                 db    ? ;
.bss:000000000020BA84                 db    ? ;
.bss:000000000020BA85                 db    ? ;
.bss:000000000020BA86                 db    ? ;
.bss:000000000020BA87                 db    ? ;
.bss:000000000020BA88                 db    ? ;
.bss:000000000020BA89                 db    ? ;
.bss:000000000020BA8A                 db    ? ;
.bss:000000000020BA8B                 db    ? ;
.bss:000000000020BA8C                 db    ? ;
.bss:000000000020BA8D                 db    ? ;
.bss:000000000020BA8E                 db    ? ;
.bss:000000000020BA8F                 db    ? ;
.bss:000000000020BA90                 db    ? ;
.bss:000000000020BA91                 db    ? ;
.bss:000000000020BA92                 db    ? ;
.bss:000000000020BA93                 db    ? ;
.bss:000000000020BA94                 db    ? ;
.bss:000000000020BA95                 db    ? ;
.bss:000000000020BA96                 db    ? ;
.bss:000000000020BA97                 db    ? ;
.bss:000000000020BA98                 db    ? ;
.bss:000000000020BA99                 db    ? ;
.bss:000000000020BA9A                 db    ? ;
.bss:000000000020BA9B                 db    ? ;
.bss:000000000020BA9C                 db    ? ;
.bss:000000000020BA9D                 db    ? ;
.bss:000000000020BA9E                 db    ? ;
.bss:000000000020BA9F                 db    ? ;
.bss:000000000020BAA0                 db    ? ;
.bss:000000000020BAA1                 db    ? ;
.bss:000000000020BAA2                 db    ? ;
.bss:000000000020BAA3                 db    ? ;
.bss:000000000020BAA4                 db    ? ;
.bss:000000000020BAA5                 db    ? ;
.bss:000000000020BAA6                 db    ? ;
.bss:000000000020BAA7                 db    ? ;
.bss:000000000020BAA8                 db    ? ;
.bss:000000000020BAA9                 db    ? ;
.bss:000000000020BAAA                 db    ? ;
.bss:000000000020BAAB                 db    ? ;
.bss:000000000020BAAC                 db    ? ;
.bss:000000000020BAAD                 db    ? ;
.bss:000000000020BAAE                 db    ? ;
.bss:000000000020BAAF                 db    ? ;
.bss:000000000020BAB0                 db    ? ;
.bss:000000000020BAB1                 db    ? ;
.bss:000000000020BAB2                 db    ? ;
.bss:000000000020BAB3                 db    ? ;
.bss:000000000020BAB4                 db    ? ;
.bss:000000000020BAB5                 db    ? ;
.bss:000000000020BAB6                 db    ? ;
.bss:000000000020BAB7                 db    ? ;
.bss:000000000020BAB8                 db    ? ;
.bss:000000000020BAB9                 db    ? ;
.bss:000000000020BABA                 db    ? ;
.bss:000000000020BABB                 db    ? ;
.bss:000000000020BABC                 db    ? ;
.bss:000000000020BABD                 db    ? ;
.bss:000000000020BABE                 db    ? ;
.bss:000000000020BABF                 db    ? ;
.bss:000000000020BAC0                 db    ? ;
.bss:000000000020BAC1                 db    ? ;
.bss:000000000020BAC2                 db    ? ;
.bss:000000000020BAC3                 db    ? ;
.bss:000000000020BAC4                 db    ? ;
.bss:000000000020BAC5                 db    ? ;
.bss:000000000020BAC6                 db    ? ;
.bss:000000000020BAC7                 db    ? ;
.bss:000000000020BAC8                 db    ? ;
.bss:000000000020BAC9                 db    ? ;
.bss:000000000020BACA                 db    ? ;
.bss:000000000020BACB                 db    ? ;
.bss:000000000020BACC                 db    ? ;
.bss:000000000020BACD                 db    ? ;
.bss:000000000020BACE                 db    ? ;
.bss:000000000020BACF                 db    ? ;
.bss:000000000020BAD0                 db    ? ;
.bss:000000000020BAD1                 db    ? ;
.bss:000000000020BAD2                 db    ? ;
.bss:000000000020BAD3                 db    ? ;
.bss:000000000020BAD4                 db    ? ;
.bss:000000000020BAD5                 db    ? ;
.bss:000000000020BAD6                 db    ? ;
.bss:000000000020BAD7                 db    ? ;
.bss:000000000020BAD8                 db    ? ;
.bss:000000000020BAD9                 db    ? ;
.bss:000000000020BADA                 db    ? ;
.bss:000000000020BADB                 db    ? ;
.bss:000000000020BADC                 db    ? ;
.bss:000000000020BADD                 db    ? ;
.bss:000000000020BADE                 db    ? ;
.bss:000000000020BADF                 db    ? ;
.bss:000000000020BAE0                 db    ? ;
.bss:000000000020BAE1                 db    ? ;
.bss:000000000020BAE2                 db    ? ;
.bss:000000000020BAE3                 db    ? ;
.bss:000000000020BAE4                 db    ? ;
.bss:000000000020BAE5                 db    ? ;
.bss:000000000020BAE6                 db    ? ;
.bss:000000000020BAE7                 db    ? ;
.bss:000000000020BAE8                 db    ? ;
.bss:000000000020BAE9                 db    ? ;
.bss:000000000020BAEA                 db    ? ;
.bss:000000000020BAEB                 db    ? ;
.bss:000000000020BAEC                 db    ? ;
.bss:000000000020BAED                 db    ? ;
.bss:000000000020BAEE                 db    ? ;
.bss:000000000020BAEF                 db    ? ;
.bss:000000000020BAF0                 db    ? ;
.bss:000000000020BAF1                 db    ? ;
.bss:000000000020BAF2                 db    ? ;
.bss:000000000020BAF3                 db    ? ;
.bss:000000000020BAF4                 db    ? ;
.bss:000000000020BAF5                 db    ? ;
.bss:000000000020BAF6                 db    ? ;
.bss:000000000020BAF7                 db    ? ;
.bss:000000000020BAF8                 db    ? ;
.bss:000000000020BAF9                 db    ? ;
.bss:000000000020BAFA                 db    ? ;
.bss:000000000020BAFB                 db    ? ;
.bss:000000000020BAFC                 db    ? ;
.bss:000000000020BAFD                 db    ? ;
.bss:000000000020BAFE                 db    ? ;
.bss:000000000020BAFF                 db    ? ;
.bss:000000000020BB00                 db    ? ;
.bss:000000000020BB01                 db    ? ;
.bss:000000000020BB02                 db    ? ;
.bss:000000000020BB03                 db    ? ;
.bss:000000000020BB04                 db    ? ;
.bss:000000000020BB05                 db    ? ;
.bss:000000000020BB06                 db    ? ;
.bss:000000000020BB07                 db    ? ;
.bss:000000000020BB08                 db    ? ;
.bss:000000000020BB09                 db    ? ;
.bss:000000000020BB0A                 db    ? ;
.bss:000000000020BB0B                 db    ? ;
.bss:000000000020BB0C                 db    ? ;
.bss:000000000020BB0D                 db    ? ;
.bss:000000000020BB0E                 db    ? ;
.bss:000000000020BB0F                 db    ? ;
.bss:000000000020BB10                 db    ? ;
.bss:000000000020BB11                 db    ? ;
.bss:000000000020BB12                 db    ? ;
.bss:000000000020BB13                 db    ? ;
.bss:000000000020BB14                 db    ? ;
.bss:000000000020BB15                 db    ? ;
.bss:000000000020BB16                 db    ? ;
.bss:000000000020BB17                 db    ? ;
.bss:000000000020BB18                 db    ? ;
.bss:000000000020BB19                 db    ? ;
.bss:000000000020BB1A                 db    ? ;
.bss:000000000020BB1B                 db    ? ;
.bss:000000000020BB1C                 db    ? ;
.bss:000000000020BB1D                 db    ? ;
.bss:000000000020BB1E                 db    ? ;
.bss:000000000020BB1F                 db    ? ;
.bss:000000000020BB20                 db    ? ;
.bss:000000000020BB21                 db    ? ;
.bss:000000000020BB22                 db    ? ;
.bss:000000000020BB23                 db    ? ;
.bss:000000000020BB24                 db    ? ;
.bss:000000000020BB25                 db    ? ;
.bss:000000000020BB26                 db    ? ;
.bss:000000000020BB27                 db    ? ;
.bss:000000000020BB28                 db    ? ;
.bss:000000000020BB29                 db    ? ;
.bss:000000000020BB2A                 db    ? ;
.bss:000000000020BB2B                 db    ? ;
.bss:000000000020BB2C                 db    ? ;
.bss:000000000020BB2D                 db    ? ;
.bss:000000000020BB2E                 db    ? ;
.bss:000000000020BB2F                 db    ? ;
.bss:000000000020BB30                 db    ? ;
.bss:000000000020BB31                 db    ? ;
.bss:000000000020BB32                 db    ? ;
.bss:000000000020BB33                 db    ? ;
.bss:000000000020BB34                 db    ? ;
.bss:000000000020BB35                 db    ? ;
.bss:000000000020BB36                 db    ? ;
.bss:000000000020BB37                 db    ? ;
.bss:000000000020BB38                 db    ? ;
.bss:000000000020BB39                 db    ? ;
.bss:000000000020BB3A                 db    ? ;
.bss:000000000020BB3B                 db    ? ;
.bss:000000000020BB3C                 db    ? ;
.bss:000000000020BB3D                 db    ? ;
.bss:000000000020BB3E                 db    ? ;
.bss:000000000020BB3F                 db    ? ;
.bss:000000000020BB40                 db    ? ;
.bss:000000000020BB41                 db    ? ;
.bss:000000000020BB42                 db    ? ;
.bss:000000000020BB43                 db    ? ;
.bss:000000000020BB44                 db    ? ;
.bss:000000000020BB45                 db    ? ;
.bss:000000000020BB46                 db    ? ;
.bss:000000000020BB47                 db    ? ;
.bss:000000000020BB48                 db    ? ;
.bss:000000000020BB49                 db    ? ;
.bss:000000000020BB4A                 db    ? ;
.bss:000000000020BB4B                 db    ? ;
.bss:000000000020BB4C                 db    ? ;
.bss:000000000020BB4D                 db    ? ;
.bss:000000000020BB4E                 db    ? ;
.bss:000000000020BB4F                 db    ? ;
.bss:000000000020BB50                 db    ? ;
.bss:000000000020BB51                 db    ? ;
.bss:000000000020BB52                 db    ? ;
.bss:000000000020BB53                 db    ? ;
.bss:000000000020BB54                 db    ? ;
.bss:000000000020BB55                 db    ? ;
.bss:000000000020BB56                 db    ? ;
.bss:000000000020BB57                 db    ? ;
.bss:000000000020BB58                 db    ? ;
.bss:000000000020BB59                 db    ? ;
.bss:000000000020BB5A                 db    ? ;
.bss:000000000020BB5B                 db    ? ;
.bss:000000000020BB5C                 db    ? ;
.bss:000000000020BB5D                 db    ? ;
.bss:000000000020BB5E                 db    ? ;
.bss:000000000020BB5F                 db    ? ;
.bss:000000000020BB60                 db    ? ;
.bss:000000000020BB61                 db    ? ;
.bss:000000000020BB62                 db    ? ;
.bss:000000000020BB63                 db    ? ;
.bss:000000000020BB64                 db    ? ;
.bss:000000000020BB65                 db    ? ;
.bss:000000000020BB66                 db    ? ;
.bss:000000000020BB67                 db    ? ;
.bss:000000000020BB68                 db    ? ;
.bss:000000000020BB69                 db    ? ;
.bss:000000000020BB6A                 db    ? ;
.bss:000000000020BB6B                 db    ? ;
.bss:000000000020BB6C                 db    ? ;
.bss:000000000020BB6D                 db    ? ;
.bss:000000000020BB6E                 db    ? ;
.bss:000000000020BB6F                 db    ? ;
.bss:000000000020BB70                 db    ? ;
.bss:000000000020BB71                 db    ? ;
.bss:000000000020BB72                 db    ? ;
.bss:000000000020BB73                 db    ? ;
.bss:000000000020BB74                 db    ? ;
.bss:000000000020BB75                 db    ? ;
.bss:000000000020BB76                 db    ? ;
.bss:000000000020BB77                 db    ? ;
.bss:000000000020BB78                 db    ? ;
.bss:000000000020BB79                 db    ? ;
.bss:000000000020BB7A                 db    ? ;
.bss:000000000020BB7B                 db    ? ;
.bss:000000000020BB7C                 db    ? ;
.bss:000000000020BB7D                 db    ? ;
.bss:000000000020BB7E                 db    ? ;
.bss:000000000020BB7F                 db    ? ;
.bss:000000000020BB80                 db    ? ;
.bss:000000000020BB81                 db    ? ;
.bss:000000000020BB82                 db    ? ;
.bss:000000000020BB83                 db    ? ;
.bss:000000000020BB84                 db    ? ;
.bss:000000000020BB85                 db    ? ;
.bss:000000000020BB86                 db    ? ;
.bss:000000000020BB87                 db    ? ;
.bss:000000000020BB88                 db    ? ;
.bss:000000000020BB89                 db    ? ;
.bss:000000000020BB8A                 db    ? ;
.bss:000000000020BB8B                 db    ? ;
.bss:000000000020BB8C                 db    ? ;
.bss:000000000020BB8D                 db    ? ;
.bss:000000000020BB8E                 db    ? ;
.bss:000000000020BB8F                 db    ? ;
.bss:000000000020BB90                 db    ? ;
.bss:000000000020BB91                 db    ? ;
.bss:000000000020BB92                 db    ? ;
.bss:000000000020BB93                 db    ? ;
.bss:000000000020BB94                 db    ? ;
.bss:000000000020BB95                 db    ? ;
.bss:000000000020BB96                 db    ? ;
.bss:000000000020BB97                 db    ? ;
.bss:000000000020BB98                 db    ? ;
.bss:000000000020BB99                 db    ? ;
.bss:000000000020BB9A                 db    ? ;
.bss:000000000020BB9B                 db    ? ;
.bss:000000000020BB9C                 db    ? ;
.bss:000000000020BB9D                 db    ? ;
.bss:000000000020BB9E                 db    ? ;
.bss:000000000020BB9F                 db    ? ;
.bss:000000000020BBA0                 db    ? ;
.bss:000000000020BBA1                 db    ? ;
.bss:000000000020BBA2                 db    ? ;
.bss:000000000020BBA3                 db    ? ;
.bss:000000000020BBA4                 db    ? ;
.bss:000000000020BBA5                 db    ? ;
.bss:000000000020BBA6                 db    ? ;
.bss:000000000020BBA7                 db    ? ;
.bss:000000000020BBA8                 db    ? ;
.bss:000000000020BBA9                 db    ? ;
.bss:000000000020BBAA                 db    ? ;
.bss:000000000020BBAB                 db    ? ;
.bss:000000000020BBAC                 db    ? ;
.bss:000000000020BBAD                 db    ? ;
.bss:000000000020BBAE                 db    ? ;
.bss:000000000020BBAF                 db    ? ;
.bss:000000000020BBB0                 db    ? ;
.bss:000000000020BBB1                 db    ? ;
.bss:000000000020BBB2                 db    ? ;
.bss:000000000020BBB3                 db    ? ;
.bss:000000000020BBB4                 db    ? ;
.bss:000000000020BBB5                 db    ? ;
.bss:000000000020BBB6                 db    ? ;
.bss:000000000020BBB7                 db    ? ;
.bss:000000000020BBB8                 db    ? ;
.bss:000000000020BBB9                 db    ? ;
.bss:000000000020BBBA                 db    ? ;
.bss:000000000020BBBB                 db    ? ;
.bss:000000000020BBBC                 db    ? ;
.bss:000000000020BBBD                 db    ? ;
.bss:000000000020BBBE                 db    ? ;
.bss:000000000020BBBF                 db    ? ;
.bss:000000000020BBC0                 db    ? ;
.bss:000000000020BBC1                 db    ? ;
.bss:000000000020BBC2                 db    ? ;
.bss:000000000020BBC3                 db    ? ;
.bss:000000000020BBC4                 db    ? ;
.bss:000000000020BBC5                 db    ? ;
.bss:000000000020BBC6                 db    ? ;
.bss:000000000020BBC7                 db    ? ;
.bss:000000000020BBC8                 db    ? ;
.bss:000000000020BBC9                 db    ? ;
.bss:000000000020BBCA                 db    ? ;
.bss:000000000020BBCB                 db    ? ;
.bss:000000000020BBCC                 db    ? ;
.bss:000000000020BBCD                 db    ? ;
.bss:000000000020BBCE                 db    ? ;
.bss:000000000020BBCF                 db    ? ;
.bss:000000000020BBD0                 db    ? ;
.bss:000000000020BBD1                 db    ? ;
.bss:000000000020BBD2                 db    ? ;
.bss:000000000020BBD3                 db    ? ;
.bss:000000000020BBD4                 db    ? ;
.bss:000000000020BBD5                 db    ? ;
.bss:000000000020BBD6                 db    ? ;
.bss:000000000020BBD7                 db    ? ;
.bss:000000000020BBD8                 db    ? ;
.bss:000000000020BBD9                 db    ? ;
.bss:000000000020BBDA                 db    ? ;
.bss:000000000020BBDB                 db    ? ;
.bss:000000000020BBDC                 db    ? ;
.bss:000000000020BBDD                 db    ? ;
.bss:000000000020BBDE                 db    ? ;
.bss:000000000020BBDF                 db    ? ;
.bss:000000000020BBE0                 db    ? ;
.bss:000000000020BBE1                 db    ? ;
.bss:000000000020BBE2                 db    ? ;
.bss:000000000020BBE3                 db    ? ;
.bss:000000000020BBE4                 db    ? ;
.bss:000000000020BBE5                 db    ? ;
.bss:000000000020BBE6                 db    ? ;
.bss:000000000020BBE7                 db    ? ;
.bss:000000000020BBE8                 db    ? ;
.bss:000000000020BBE9                 db    ? ;
.bss:000000000020BBEA                 db    ? ;
.bss:000000000020BBEB                 db    ? ;
.bss:000000000020BBEC                 db    ? ;
.bss:000000000020BBED                 db    ? ;
.bss:000000000020BBEE                 db    ? ;
.bss:000000000020BBEF                 db    ? ;
.bss:000000000020BBF0                 db    ? ;
.bss:000000000020BBF1                 db    ? ;
.bss:000000000020BBF2                 db    ? ;
.bss:000000000020BBF3                 db    ? ;
.bss:000000000020BBF4                 db    ? ;
.bss:000000000020BBF5                 db    ? ;
.bss:000000000020BBF6                 db    ? ;
.bss:000000000020BBF7                 db    ? ;
.bss:000000000020BBF8                 db    ? ;
.bss:000000000020BBF9                 db    ? ;
.bss:000000000020BBFA                 db    ? ;
.bss:000000000020BBFB                 db    ? ;
.bss:000000000020BBFC                 db    ? ;
.bss:000000000020BBFD                 db    ? ;
.bss:000000000020BBFE                 db    ? ;
.bss:000000000020BBFF                 db    ? ;
.bss:000000000020BC00                 db    ? ;
.bss:000000000020BC01                 db    ? ;
.bss:000000000020BC02                 db    ? ;
.bss:000000000020BC03                 db    ? ;
.bss:000000000020BC04                 db    ? ;
.bss:000000000020BC05                 db    ? ;
.bss:000000000020BC06                 db    ? ;
.bss:000000000020BC07                 db    ? ;
.bss:000000000020BC08                 db    ? ;
.bss:000000000020BC09                 db    ? ;
.bss:000000000020BC0A                 db    ? ;
.bss:000000000020BC0B                 db    ? ;
.bss:000000000020BC0C                 db    ? ;
.bss:000000000020BC0D                 db    ? ;
.bss:000000000020BC0E                 db    ? ;
.bss:000000000020BC0F                 db    ? ;
.bss:000000000020BC10                 db    ? ;
.bss:000000000020BC11                 db    ? ;
.bss:000000000020BC12                 db    ? ;
.bss:000000000020BC13                 db    ? ;
.bss:000000000020BC14                 db    ? ;
.bss:000000000020BC15                 db    ? ;
.bss:000000000020BC16                 db    ? ;
.bss:000000000020BC17                 db    ? ;
.bss:000000000020BC18                 db    ? ;
.bss:000000000020BC19                 db    ? ;
.bss:000000000020BC1A                 db    ? ;
.bss:000000000020BC1B                 db    ? ;
.bss:000000000020BC1C                 db    ? ;
.bss:000000000020BC1D                 db    ? ;
.bss:000000000020BC1E                 db    ? ;
.bss:000000000020BC1F                 db    ? ;
.bss:000000000020BC20                 db    ? ;
.bss:000000000020BC21                 db    ? ;
.bss:000000000020BC22                 db    ? ;
.bss:000000000020BC23                 db    ? ;
.bss:000000000020BC24                 db    ? ;
.bss:000000000020BC25                 db    ? ;
.bss:000000000020BC26                 db    ? ;
.bss:000000000020BC27                 db    ? ;
.bss:000000000020BC28                 db    ? ;
.bss:000000000020BC29                 db    ? ;
.bss:000000000020BC2A                 db    ? ;
.bss:000000000020BC2B                 db    ? ;
.bss:000000000020BC2C                 db    ? ;
.bss:000000000020BC2D                 db    ? ;
.bss:000000000020BC2E                 db    ? ;
.bss:000000000020BC2F                 db    ? ;
.bss:000000000020BC30                 db    ? ;
.bss:000000000020BC31                 db    ? ;
.bss:000000000020BC32                 db    ? ;
.bss:000000000020BC33                 db    ? ;
.bss:000000000020BC34                 db    ? ;
.bss:000000000020BC35                 db    ? ;
.bss:000000000020BC36                 db    ? ;
.bss:000000000020BC37                 db    ? ;
.bss:000000000020BC38                 db    ? ;
.bss:000000000020BC39                 db    ? ;
.bss:000000000020BC3A                 db    ? ;
.bss:000000000020BC3B                 db    ? ;
.bss:000000000020BC3C                 db    ? ;
.bss:000000000020BC3D                 db    ? ;
.bss:000000000020BC3E                 db    ? ;
.bss:000000000020BC3F                 db    ? ;
.bss:000000000020BC40                 db    ? ;
.bss:000000000020BC41                 db    ? ;
.bss:000000000020BC42                 db    ? ;
.bss:000000000020BC43                 db    ? ;
.bss:000000000020BC44                 db    ? ;
.bss:000000000020BC45                 db    ? ;
.bss:000000000020BC46                 db    ? ;
.bss:000000000020BC47                 db    ? ;
.bss:000000000020BC48                 db    ? ;
.bss:000000000020BC49                 db    ? ;
.bss:000000000020BC4A                 db    ? ;
.bss:000000000020BC4B                 db    ? ;
.bss:000000000020BC4C                 db    ? ;
.bss:000000000020BC4D                 db    ? ;
.bss:000000000020BC4E                 db    ? ;
.bss:000000000020BC4F                 db    ? ;
.bss:000000000020BC50                 db    ? ;
.bss:000000000020BC51                 db    ? ;
.bss:000000000020BC52                 db    ? ;
.bss:000000000020BC53                 db    ? ;
.bss:000000000020BC54                 db    ? ;
.bss:000000000020BC55                 db    ? ;
.bss:000000000020BC56                 db    ? ;
.bss:000000000020BC57                 db    ? ;
.bss:000000000020BC58                 db    ? ;
.bss:000000000020BC59                 db    ? ;
.bss:000000000020BC5A                 db    ? ;
.bss:000000000020BC5B                 db    ? ;
.bss:000000000020BC5C                 db    ? ;
.bss:000000000020BC5D                 db    ? ;
.bss:000000000020BC5E                 db    ? ;
.bss:000000000020BC5F                 db    ? ;
.bss:000000000020BC60                 db    ? ;
.bss:000000000020BC61                 db    ? ;
.bss:000000000020BC62                 db    ? ;
.bss:000000000020BC63                 db    ? ;
.bss:000000000020BC64                 db    ? ;
.bss:000000000020BC65                 db    ? ;
.bss:000000000020BC66                 db    ? ;
.bss:000000000020BC67                 db    ? ;
.bss:000000000020BC68                 db    ? ;
.bss:000000000020BC69                 db    ? ;
.bss:000000000020BC6A                 db    ? ;
.bss:000000000020BC6B                 db    ? ;
.bss:000000000020BC6C                 db    ? ;
.bss:000000000020BC6D                 db    ? ;
.bss:000000000020BC6E                 db    ? ;
.bss:000000000020BC6F                 db    ? ;
.bss:000000000020BC70                 db    ? ;
.bss:000000000020BC71                 db    ? ;
.bss:000000000020BC72                 db    ? ;
.bss:000000000020BC73                 db    ? ;
.bss:000000000020BC74                 db    ? ;
.bss:000000000020BC75                 db    ? ;
.bss:000000000020BC76                 db    ? ;
.bss:000000000020BC77                 db    ? ;
.bss:000000000020BC78                 db    ? ;
.bss:000000000020BC79                 db    ? ;
.bss:000000000020BC7A                 db    ? ;
.bss:000000000020BC7B                 db    ? ;
.bss:000000000020BC7C                 db    ? ;
.bss:000000000020BC7D                 db    ? ;
.bss:000000000020BC7E                 db    ? ;
.bss:000000000020BC7F                 db    ? ;
.bss:000000000020BC80                 db    ? ;
.bss:000000000020BC81                 db    ? ;
.bss:000000000020BC82                 db    ? ;
.bss:000000000020BC83                 db    ? ;
.bss:000000000020BC84                 db    ? ;
.bss:000000000020BC85                 db    ? ;
.bss:000000000020BC86                 db    ? ;
.bss:000000000020BC87                 db    ? ;
.bss:000000000020BC88                 db    ? ;
.bss:000000000020BC89                 db    ? ;
.bss:000000000020BC8A                 db    ? ;
.bss:000000000020BC8B                 db    ? ;
.bss:000000000020BC8C                 db    ? ;
.bss:000000000020BC8D                 db    ? ;
.bss:000000000020BC8E                 db    ? ;
.bss:000000000020BC8F                 db    ? ;
.bss:000000000020BC90                 db    ? ;
.bss:000000000020BC91                 db    ? ;
.bss:000000000020BC92                 db    ? ;
.bss:000000000020BC93                 db    ? ;
.bss:000000000020BC94                 db    ? ;
.bss:000000000020BC95                 db    ? ;
.bss:000000000020BC96                 db    ? ;
.bss:000000000020BC97                 db    ? ;
.bss:000000000020BC98                 db    ? ;
.bss:000000000020BC99                 db    ? ;
.bss:000000000020BC9A                 db    ? ;
.bss:000000000020BC9B                 db    ? ;
.bss:000000000020BC9C                 db    ? ;
.bss:000000000020BC9D                 db    ? ;
.bss:000000000020BC9E                 db    ? ;
.bss:000000000020BC9F                 db    ? ;
.bss:000000000020BCA0                 db    ? ;
.bss:000000000020BCA1                 db    ? ;
.bss:000000000020BCA2                 db    ? ;
.bss:000000000020BCA3                 db    ? ;
.bss:000000000020BCA4                 db    ? ;
.bss:000000000020BCA5                 db    ? ;
.bss:000000000020BCA6                 db    ? ;
.bss:000000000020BCA7                 db    ? ;
.bss:000000000020BCA8                 db    ? ;
.bss:000000000020BCA9                 db    ? ;
.bss:000000000020BCAA                 db    ? ;
.bss:000000000020BCAB                 db    ? ;
.bss:000000000020BCAC                 db    ? ;
.bss:000000000020BCAD                 db    ? ;
.bss:000000000020BCAE                 db    ? ;
.bss:000000000020BCAF                 db    ? ;
.bss:000000000020BCB0                 db    ? ;
.bss:000000000020BCB1                 db    ? ;
.bss:000000000020BCB2                 db    ? ;
.bss:000000000020BCB3                 db    ? ;
.bss:000000000020BCB4                 db    ? ;
.bss:000000000020BCB5                 db    ? ;
.bss:000000000020BCB6                 db    ? ;
.bss:000000000020BCB7                 db    ? ;
.bss:000000000020BCB8                 db    ? ;
.bss:000000000020BCB9                 db    ? ;
.bss:000000000020BCBA                 db    ? ;
.bss:000000000020BCBB                 db    ? ;
.bss:000000000020BCBC                 db    ? ;
.bss:000000000020BCBD                 db    ? ;
.bss:000000000020BCBE                 db    ? ;
.bss:000000000020BCBF                 db    ? ;
.bss:000000000020BCC0                 db    ? ;
.bss:000000000020BCC1                 db    ? ;
.bss:000000000020BCC2                 db    ? ;
.bss:000000000020BCC3                 db    ? ;
.bss:000000000020BCC4                 db    ? ;
.bss:000000000020BCC5                 db    ? ;
.bss:000000000020BCC6                 db    ? ;
.bss:000000000020BCC7                 db    ? ;
.bss:000000000020BCC8                 db    ? ;
.bss:000000000020BCC9                 db    ? ;
.bss:000000000020BCCA                 db    ? ;
.bss:000000000020BCCB                 db    ? ;
.bss:000000000020BCCC                 db    ? ;
.bss:000000000020BCCD                 db    ? ;
.bss:000000000020BCCE                 db    ? ;
.bss:000000000020BCCF                 db    ? ;
.bss:000000000020BCD0                 db    ? ;
.bss:000000000020BCD1                 db    ? ;
.bss:000000000020BCD2                 db    ? ;
.bss:000000000020BCD3                 db    ? ;
.bss:000000000020BCD4                 db    ? ;
.bss:000000000020BCD5                 db    ? ;
.bss:000000000020BCD6                 db    ? ;
.bss:000000000020BCD7                 db    ? ;
.bss:000000000020BCD8                 db    ? ;
.bss:000000000020BCD9                 db    ? ;
.bss:000000000020BCDA                 db    ? ;
.bss:000000000020BCDB                 db    ? ;
.bss:000000000020BCDC                 db    ? ;
.bss:000000000020BCDD                 db    ? ;
.bss:000000000020BCDE                 db    ? ;
.bss:000000000020BCDF                 db    ? ;
.bss:000000000020BCE0                 db    ? ;
.bss:000000000020BCE1                 db    ? ;
.bss:000000000020BCE2                 db    ? ;
.bss:000000000020BCE3                 db    ? ;
.bss:000000000020BCE4                 db    ? ;
.bss:000000000020BCE5                 db    ? ;
.bss:000000000020BCE6                 db    ? ;
.bss:000000000020BCE7                 db    ? ;
.bss:000000000020BCE8                 db    ? ;
.bss:000000000020BCE9                 db    ? ;
.bss:000000000020BCEA                 db    ? ;
.bss:000000000020BCEB                 db    ? ;
.bss:000000000020BCEC                 db    ? ;
.bss:000000000020BCED                 db    ? ;
.bss:000000000020BCEE                 db    ? ;
.bss:000000000020BCEF                 db    ? ;
.bss:000000000020BCF0                 db    ? ;
.bss:000000000020BCF1                 db    ? ;
.bss:000000000020BCF2                 db    ? ;
.bss:000000000020BCF3                 db    ? ;
.bss:000000000020BCF4                 db    ? ;
.bss:000000000020BCF5                 db    ? ;
.bss:000000000020BCF6                 db    ? ;
.bss:000000000020BCF7                 db    ? ;
.bss:000000000020BCF8                 db    ? ;
.bss:000000000020BCF9                 db    ? ;
.bss:000000000020BCFA                 db    ? ;
.bss:000000000020BCFB                 db    ? ;
.bss:000000000020BCFC                 db    ? ;
.bss:000000000020BCFD                 db    ? ;
.bss:000000000020BCFE                 db    ? ;
.bss:000000000020BCFF                 db    ? ;
.bss:000000000020BD00                 db    ? ;
.bss:000000000020BD01                 db    ? ;
.bss:000000000020BD02                 db    ? ;
.bss:000000000020BD03                 db    ? ;
.bss:000000000020BD04                 db    ? ;
.bss:000000000020BD05                 db    ? ;
.bss:000000000020BD06                 db    ? ;
.bss:000000000020BD07                 db    ? ;
.bss:000000000020BD08                 db    ? ;
.bss:000000000020BD09                 db    ? ;
.bss:000000000020BD0A                 db    ? ;
.bss:000000000020BD0B                 db    ? ;
.bss:000000000020BD0C                 db    ? ;
.bss:000000000020BD0D                 db    ? ;
.bss:000000000020BD0E                 db    ? ;
.bss:000000000020BD0F                 db    ? ;
.bss:000000000020BD10                 db    ? ;
.bss:000000000020BD11                 db    ? ;
.bss:000000000020BD12                 db    ? ;
.bss:000000000020BD13                 db    ? ;
.bss:000000000020BD14                 db    ? ;
.bss:000000000020BD15                 db    ? ;
.bss:000000000020BD16                 db    ? ;
.bss:000000000020BD17                 db    ? ;
.bss:000000000020BD18                 db    ? ;
.bss:000000000020BD19                 db    ? ;
.bss:000000000020BD1A                 db    ? ;
.bss:000000000020BD1B                 db    ? ;
.bss:000000000020BD1C                 db    ? ;
.bss:000000000020BD1D                 db    ? ;
.bss:000000000020BD1E                 db    ? ;
.bss:000000000020BD1F                 db    ? ;
.bss:000000000020BD20                 db    ? ;
.bss:000000000020BD21                 db    ? ;
.bss:000000000020BD22                 db    ? ;
.bss:000000000020BD23                 db    ? ;
.bss:000000000020BD24                 db    ? ;
.bss:000000000020BD25                 db    ? ;
.bss:000000000020BD26                 db    ? ;
.bss:000000000020BD27                 db    ? ;
.bss:000000000020BD28                 db    ? ;
.bss:000000000020BD29                 db    ? ;
.bss:000000000020BD2A                 db    ? ;
.bss:000000000020BD2B                 db    ? ;
.bss:000000000020BD2C                 db    ? ;
.bss:000000000020BD2D                 db    ? ;
.bss:000000000020BD2E                 db    ? ;
.bss:000000000020BD2F                 db    ? ;
.bss:000000000020BD30                 db    ? ;
.bss:000000000020BD31                 db    ? ;
.bss:000000000020BD32                 db    ? ;
.bss:000000000020BD33                 db    ? ;
.bss:000000000020BD34                 db    ? ;
.bss:000000000020BD35                 db    ? ;
.bss:000000000020BD36                 db    ? ;
.bss:000000000020BD37                 db    ? ;
.bss:000000000020BD38                 db    ? ;
.bss:000000000020BD39                 db    ? ;
.bss:000000000020BD3A                 db    ? ;
.bss:000000000020BD3B                 db    ? ;
.bss:000000000020BD3C                 db    ? ;
.bss:000000000020BD3D                 db    ? ;
.bss:000000000020BD3E                 db    ? ;
.bss:000000000020BD3F                 db    ? ;
.bss:000000000020BD40                 db    ? ;
.bss:000000000020BD41                 db    ? ;
.bss:000000000020BD42                 db    ? ;
.bss:000000000020BD43                 db    ? ;
.bss:000000000020BD44                 db    ? ;
.bss:000000000020BD45                 db    ? ;
.bss:000000000020BD46                 db    ? ;
.bss:000000000020BD47                 db    ? ;
.bss:000000000020BD48                 db    ? ;
.bss:000000000020BD49                 db    ? ;
.bss:000000000020BD4A                 db    ? ;
.bss:000000000020BD4B                 db    ? ;
.bss:000000000020BD4C                 db    ? ;
.bss:000000000020BD4D                 db    ? ;
.bss:000000000020BD4E                 db    ? ;
.bss:000000000020BD4F                 db    ? ;
.bss:000000000020BD50                 db    ? ;
.bss:000000000020BD51                 db    ? ;
.bss:000000000020BD52                 db    ? ;
.bss:000000000020BD53                 db    ? ;
.bss:000000000020BD54                 db    ? ;
.bss:000000000020BD55                 db    ? ;
.bss:000000000020BD56                 db    ? ;
.bss:000000000020BD57                 db    ? ;
.bss:000000000020BD58                 db    ? ;
.bss:000000000020BD59                 db    ? ;
.bss:000000000020BD5A                 db    ? ;
.bss:000000000020BD5B                 db    ? ;
.bss:000000000020BD5C                 db    ? ;
.bss:000000000020BD5D                 db    ? ;
.bss:000000000020BD5E                 db    ? ;
.bss:000000000020BD5F                 db    ? ;
.bss:000000000020BD60                 db    ? ;
.bss:000000000020BD61                 db    ? ;
.bss:000000000020BD62                 db    ? ;
.bss:000000000020BD63                 db    ? ;
.bss:000000000020BD64                 db    ? ;
.bss:000000000020BD65                 db    ? ;
.bss:000000000020BD66                 db    ? ;
.bss:000000000020BD67                 db    ? ;
.bss:000000000020BD68                 db    ? ;
.bss:000000000020BD69                 db    ? ;
.bss:000000000020BD6A                 db    ? ;
.bss:000000000020BD6B                 db    ? ;
.bss:000000000020BD6C                 db    ? ;
.bss:000000000020BD6D                 db    ? ;
.bss:000000000020BD6E                 db    ? ;
.bss:000000000020BD6F                 db    ? ;
.bss:000000000020BD70                 db    ? ;
.bss:000000000020BD71                 db    ? ;
.bss:000000000020BD72                 db    ? ;
.bss:000000000020BD73                 db    ? ;
.bss:000000000020BD74                 db    ? ;
.bss:000000000020BD75                 db    ? ;
.bss:000000000020BD76                 db    ? ;
.bss:000000000020BD77                 db    ? ;
.bss:000000000020BD78                 db    ? ;
.bss:000000000020BD79                 db    ? ;
.bss:000000000020BD7A                 db    ? ;
.bss:000000000020BD7B                 db    ? ;
.bss:000000000020BD7C                 db    ? ;
.bss:000000000020BD7D                 db    ? ;
.bss:000000000020BD7E                 db    ? ;
.bss:000000000020BD7F                 db    ? ;
.bss:000000000020BD80                 db    ? ;
.bss:000000000020BD81                 db    ? ;
.bss:000000000020BD82                 db    ? ;
.bss:000000000020BD83                 db    ? ;
.bss:000000000020BD84                 db    ? ;
.bss:000000000020BD85                 db    ? ;
.bss:000000000020BD86                 db    ? ;
.bss:000000000020BD87                 db    ? ;
.bss:000000000020BD88                 db    ? ;
.bss:000000000020BD89                 db    ? ;
.bss:000000000020BD8A                 db    ? ;
.bss:000000000020BD8B                 db    ? ;
.bss:000000000020BD8C                 db    ? ;
.bss:000000000020BD8D                 db    ? ;
.bss:000000000020BD8E                 db    ? ;
.bss:000000000020BD8F                 db    ? ;
.bss:000000000020BD90                 db    ? ;
.bss:000000000020BD91                 db    ? ;
.bss:000000000020BD92                 db    ? ;
.bss:000000000020BD93                 db    ? ;
.bss:000000000020BD94                 db    ? ;
.bss:000000000020BD95                 db    ? ;
.bss:000000000020BD96                 db    ? ;
.bss:000000000020BD97                 db    ? ;
.bss:000000000020BD98                 db    ? ;
.bss:000000000020BD99                 db    ? ;
.bss:000000000020BD9A                 db    ? ;
.bss:000000000020BD9B                 db    ? ;
.bss:000000000020BD9C                 db    ? ;
.bss:000000000020BD9D                 db    ? ;
.bss:000000000020BD9E                 db    ? ;
.bss:000000000020BD9F                 db    ? ;
.bss:000000000020BDA0                 db    ? ;
.bss:000000000020BDA1                 db    ? ;
.bss:000000000020BDA2                 db    ? ;
.bss:000000000020BDA3                 db    ? ;
.bss:000000000020BDA4                 db    ? ;
.bss:000000000020BDA5                 db    ? ;
.bss:000000000020BDA6                 db    ? ;
.bss:000000000020BDA7                 db    ? ;
.bss:000000000020BDA8                 db    ? ;
.bss:000000000020BDA9                 db    ? ;
.bss:000000000020BDAA                 db    ? ;
.bss:000000000020BDAB                 db    ? ;
.bss:000000000020BDAC                 db    ? ;
.bss:000000000020BDAD                 db    ? ;
.bss:000000000020BDAE                 db    ? ;
.bss:000000000020BDAF                 db    ? ;
.bss:000000000020BDB0                 db    ? ;
.bss:000000000020BDB1                 db    ? ;
.bss:000000000020BDB2                 db    ? ;
.bss:000000000020BDB3                 db    ? ;
.bss:000000000020BDB4                 db    ? ;
.bss:000000000020BDB5                 db    ? ;
.bss:000000000020BDB6                 db    ? ;
.bss:000000000020BDB7                 db    ? ;
.bss:000000000020BDB8                 db    ? ;
.bss:000000000020BDB9                 db    ? ;
.bss:000000000020BDBA                 db    ? ;
.bss:000000000020BDBB                 db    ? ;
.bss:000000000020BDBC                 db    ? ;
.bss:000000000020BDBD                 db    ? ;
.bss:000000000020BDBE                 db    ? ;
.bss:000000000020BDBF                 db    ? ;
.bss:000000000020BDC0                 db    ? ;
.bss:000000000020BDC1                 db    ? ;
.bss:000000000020BDC2                 db    ? ;
.bss:000000000020BDC3                 db    ? ;
.bss:000000000020BDC4                 db    ? ;
.bss:000000000020BDC5                 db    ? ;
.bss:000000000020BDC6                 db    ? ;
.bss:000000000020BDC7                 db    ? ;
.bss:000000000020BDC8                 db    ? ;
.bss:000000000020BDC9                 db    ? ;
.bss:000000000020BDCA                 db    ? ;
.bss:000000000020BDCB                 db    ? ;
.bss:000000000020BDCC                 db    ? ;
.bss:000000000020BDCD                 db    ? ;
.bss:000000000020BDCE                 db    ? ;
.bss:000000000020BDCF                 db    ? ;
.bss:000000000020BDD0                 db    ? ;
.bss:000000000020BDD1                 db    ? ;
.bss:000000000020BDD2                 db    ? ;
.bss:000000000020BDD3                 db    ? ;
.bss:000000000020BDD4                 db    ? ;
.bss:000000000020BDD5                 db    ? ;
.bss:000000000020BDD6                 db    ? ;
.bss:000000000020BDD7                 db    ? ;
.bss:000000000020BDD8                 db    ? ;
.bss:000000000020BDD9                 db    ? ;
.bss:000000000020BDDA                 db    ? ;
.bss:000000000020BDDB                 db    ? ;
.bss:000000000020BDDC                 db    ? ;
.bss:000000000020BDDD                 db    ? ;
.bss:000000000020BDDE                 db    ? ;
.bss:000000000020BDDF                 db    ? ;
.bss:000000000020BDE0                 db    ? ;
.bss:000000000020BDE1                 db    ? ;
.bss:000000000020BDE2                 db    ? ;
.bss:000000000020BDE3                 db    ? ;
.bss:000000000020BDE4                 db    ? ;
.bss:000000000020BDE5                 db    ? ;
.bss:000000000020BDE6                 db    ? ;
.bss:000000000020BDE7                 db    ? ;
.bss:000000000020BDE8                 db    ? ;
.bss:000000000020BDE9                 db    ? ;
.bss:000000000020BDEA                 db    ? ;
.bss:000000000020BDEB                 db    ? ;
.bss:000000000020BDEC                 db    ? ;
.bss:000000000020BDED                 db    ? ;
.bss:000000000020BDEE                 db    ? ;
.bss:000000000020BDEF                 db    ? ;
.bss:000000000020BDF0                 db    ? ;
.bss:000000000020BDF1                 db    ? ;
.bss:000000000020BDF2                 db    ? ;
.bss:000000000020BDF3                 db    ? ;
.bss:000000000020BDF4                 db    ? ;
.bss:000000000020BDF5                 db    ? ;
.bss:000000000020BDF6                 db    ? ;
.bss:000000000020BDF7                 db    ? ;
.bss:000000000020BDF8                 db    ? ;
.bss:000000000020BDF9                 db    ? ;
.bss:000000000020BDFA                 db    ? ;
.bss:000000000020BDFB                 db    ? ;
.bss:000000000020BDFC                 db    ? ;
.bss:000000000020BDFD                 db    ? ;
.bss:000000000020BDFE                 db    ? ;
.bss:000000000020BDFF                 db    ? ;
.bss:000000000020BE00                 db    ? ;
.bss:000000000020BE01                 db    ? ;
.bss:000000000020BE02                 db    ? ;
.bss:000000000020BE03                 db    ? ;
.bss:000000000020BE04                 db    ? ;
.bss:000000000020BE05                 db    ? ;
.bss:000000000020BE06                 db    ? ;
.bss:000000000020BE07                 db    ? ;
.bss:000000000020BE08                 db    ? ;
.bss:000000000020BE09                 db    ? ;
.bss:000000000020BE0A                 db    ? ;
.bss:000000000020BE0B                 db    ? ;
.bss:000000000020BE0C                 db    ? ;
.bss:000000000020BE0D                 db    ? ;
.bss:000000000020BE0E                 db    ? ;
.bss:000000000020BE0F                 db    ? ;
.bss:000000000020BE10                 db    ? ;
.bss:000000000020BE11                 db    ? ;
.bss:000000000020BE12                 db    ? ;
.bss:000000000020BE13                 db    ? ;
.bss:000000000020BE14                 db    ? ;
.bss:000000000020BE15                 db    ? ;
.bss:000000000020BE16                 db    ? ;
.bss:000000000020BE17                 db    ? ;
.bss:000000000020BE18                 db    ? ;
.bss:000000000020BE19                 db    ? ;
.bss:000000000020BE1A                 db    ? ;
.bss:000000000020BE1B                 db    ? ;
.bss:000000000020BE1C                 db    ? ;
.bss:000000000020BE1D                 db    ? ;
.bss:000000000020BE1E                 db    ? ;
.bss:000000000020BE1F                 db    ? ;
.bss:000000000020BE20                 db    ? ;
.bss:000000000020BE21                 db    ? ;
.bss:000000000020BE22                 db    ? ;
.bss:000000000020BE23                 db    ? ;
.bss:000000000020BE24                 db    ? ;
.bss:000000000020BE25                 db    ? ;
.bss:000000000020BE26                 db    ? ;
.bss:000000000020BE27                 db    ? ;
.bss:000000000020BE28                 db    ? ;
.bss:000000000020BE29                 db    ? ;
.bss:000000000020BE2A                 db    ? ;
.bss:000000000020BE2B                 db    ? ;
.bss:000000000020BE2C                 db    ? ;
.bss:000000000020BE2D                 db    ? ;
.bss:000000000020BE2E                 db    ? ;
.bss:000000000020BE2F                 db    ? ;
.bss:000000000020BE30                 db    ? ;
.bss:000000000020BE31                 db    ? ;
.bss:000000000020BE32                 db    ? ;
.bss:000000000020BE33                 db    ? ;
.bss:000000000020BE34                 db    ? ;
.bss:000000000020BE35                 db    ? ;
.bss:000000000020BE36                 db    ? ;
.bss:000000000020BE37                 db    ? ;
.bss:000000000020BE38                 db    ? ;
.bss:000000000020BE39                 db    ? ;
.bss:000000000020BE3A                 db    ? ;
.bss:000000000020BE3B                 db    ? ;
.bss:000000000020BE3C                 db    ? ;
.bss:000000000020BE3D                 db    ? ;
.bss:000000000020BE3E                 db    ? ;
.bss:000000000020BE3F                 db    ? ;
.bss:000000000020BE40                 db    ? ;
.bss:000000000020BE41                 db    ? ;
.bss:000000000020BE42                 db    ? ;
.bss:000000000020BE43                 db    ? ;
.bss:000000000020BE44                 db    ? ;
.bss:000000000020BE45                 db    ? ;
.bss:000000000020BE46                 db    ? ;
.bss:000000000020BE47                 db    ? ;
.bss:000000000020BE48                 db    ? ;
.bss:000000000020BE49                 db    ? ;
.bss:000000000020BE4A                 db    ? ;
.bss:000000000020BE4B                 db    ? ;
.bss:000000000020BE4C                 db    ? ;
.bss:000000000020BE4D                 db    ? ;
.bss:000000000020BE4E                 db    ? ;
.bss:000000000020BE4F                 db    ? ;
.bss:000000000020BE50                 db    ? ;
.bss:000000000020BE51                 db    ? ;
.bss:000000000020BE52                 db    ? ;
.bss:000000000020BE53                 db    ? ;
.bss:000000000020BE54                 db    ? ;
.bss:000000000020BE55                 db    ? ;
.bss:000000000020BE56                 db    ? ;
.bss:000000000020BE57                 db    ? ;
.bss:000000000020BE58                 db    ? ;
.bss:000000000020BE59                 db    ? ;
.bss:000000000020BE5A                 db    ? ;
.bss:000000000020BE5B                 db    ? ;
.bss:000000000020BE5C                 db    ? ;
.bss:000000000020BE5D                 db    ? ;
.bss:000000000020BE5E                 db    ? ;
.bss:000000000020BE5F                 db    ? ;
.bss:000000000020BE60                 db    ? ;
.bss:000000000020BE61                 db    ? ;
.bss:000000000020BE62                 db    ? ;
.bss:000000000020BE63                 db    ? ;
.bss:000000000020BE64                 db    ? ;
.bss:000000000020BE65                 db    ? ;
.bss:000000000020BE66                 db    ? ;
.bss:000000000020BE67                 db    ? ;
.bss:000000000020BE68                 db    ? ;
.bss:000000000020BE69                 db    ? ;
.bss:000000000020BE6A                 db    ? ;
.bss:000000000020BE6B                 db    ? ;
.bss:000000000020BE6C                 db    ? ;
.bss:000000000020BE6D                 db    ? ;
.bss:000000000020BE6E                 db    ? ;
.bss:000000000020BE6F                 db    ? ;
.bss:000000000020BE70                 db    ? ;
.bss:000000000020BE71                 db    ? ;
.bss:000000000020BE72                 db    ? ;
.bss:000000000020BE73                 db    ? ;
.bss:000000000020BE74                 db    ? ;
.bss:000000000020BE75                 db    ? ;
.bss:000000000020BE76                 db    ? ;
.bss:000000000020BE77                 db    ? ;
.bss:000000000020BE78                 db    ? ;
.bss:000000000020BE79                 db    ? ;
.bss:000000000020BE7A                 db    ? ;
.bss:000000000020BE7B                 db    ? ;
.bss:000000000020BE7C                 db    ? ;
.bss:000000000020BE7D                 db    ? ;
.bss:000000000020BE7E                 db    ? ;
.bss:000000000020BE7F                 db    ? ;
.bss:000000000020BE80                 db    ? ;
.bss:000000000020BE81                 db    ? ;
.bss:000000000020BE82                 db    ? ;
.bss:000000000020BE83                 db    ? ;
.bss:000000000020BE84                 db    ? ;
.bss:000000000020BE85                 db    ? ;
.bss:000000000020BE86                 db    ? ;
.bss:000000000020BE87                 db    ? ;
.bss:000000000020BE88                 db    ? ;
.bss:000000000020BE89                 db    ? ;
.bss:000000000020BE8A                 db    ? ;
.bss:000000000020BE8B                 db    ? ;
.bss:000000000020BE8C                 db    ? ;
.bss:000000000020BE8D                 db    ? ;
.bss:000000000020BE8E                 db    ? ;
.bss:000000000020BE8F                 db    ? ;
.bss:000000000020BE90                 db    ? ;
.bss:000000000020BE91                 db    ? ;
.bss:000000000020BE92                 db    ? ;
.bss:000000000020BE93                 db    ? ;
.bss:000000000020BE94                 db    ? ;
.bss:000000000020BE95                 db    ? ;
.bss:000000000020BE96                 db    ? ;
.bss:000000000020BE97                 db    ? ;
.bss:000000000020BE98                 db    ? ;
.bss:000000000020BE99                 db    ? ;
.bss:000000000020BE9A                 db    ? ;
.bss:000000000020BE9B                 db    ? ;
.bss:000000000020BE9C                 db    ? ;
.bss:000000000020BE9D                 db    ? ;
.bss:000000000020BE9E                 db    ? ;
.bss:000000000020BE9F                 db    ? ;
.bss:000000000020BEA0                 db    ? ;
.bss:000000000020BEA1                 db    ? ;
.bss:000000000020BEA2                 db    ? ;
.bss:000000000020BEA3                 db    ? ;
.bss:000000000020BEA4                 db    ? ;
.bss:000000000020BEA5                 db    ? ;
.bss:000000000020BEA6                 db    ? ;
.bss:000000000020BEA7                 db    ? ;
.bss:000000000020BEA8                 db    ? ;
.bss:000000000020BEA9                 db    ? ;
.bss:000000000020BEAA                 db    ? ;
.bss:000000000020BEAB                 db    ? ;
.bss:000000000020BEAC                 db    ? ;
.bss:000000000020BEAD                 db    ? ;
.bss:000000000020BEAE                 db    ? ;
.bss:000000000020BEAF                 db    ? ;
.bss:000000000020BEB0                 db    ? ;
.bss:000000000020BEB1                 db    ? ;
.bss:000000000020BEB2                 db    ? ;
.bss:000000000020BEB3                 db    ? ;
.bss:000000000020BEB4                 db    ? ;
.bss:000000000020BEB5                 db    ? ;
.bss:000000000020BEB6                 db    ? ;
.bss:000000000020BEB7                 db    ? ;
.bss:000000000020BEB8                 db    ? ;
.bss:000000000020BEB9                 db    ? ;
.bss:000000000020BEBA                 db    ? ;
.bss:000000000020BEBB                 db    ? ;
.bss:000000000020BEBC                 db    ? ;
.bss:000000000020BEBD                 db    ? ;
.bss:000000000020BEBE                 db    ? ;
.bss:000000000020BEBF                 db    ? ;
.bss:000000000020BEC0                 db    ? ;
.bss:000000000020BEC1                 db    ? ;
.bss:000000000020BEC2                 db    ? ;
.bss:000000000020BEC3                 db    ? ;
.bss:000000000020BEC4                 db    ? ;
.bss:000000000020BEC5                 db    ? ;
.bss:000000000020BEC6                 db    ? ;
.bss:000000000020BEC7                 db    ? ;
.bss:000000000020BEC8                 db    ? ;
.bss:000000000020BEC9                 db    ? ;
.bss:000000000020BECA                 db    ? ;
.bss:000000000020BECB                 db    ? ;
.bss:000000000020BECC                 db    ? ;
.bss:000000000020BECD                 db    ? ;
.bss:000000000020BECE                 db    ? ;
.bss:000000000020BECF                 db    ? ;
.bss:000000000020BED0                 db    ? ;
.bss:000000000020BED1                 db    ? ;
.bss:000000000020BED2                 db    ? ;
.bss:000000000020BED3                 db    ? ;
.bss:000000000020BED4                 db    ? ;
.bss:000000000020BED5                 db    ? ;
.bss:000000000020BED6                 db    ? ;
.bss:000000000020BED7                 db    ? ;
.bss:000000000020BED8                 db    ? ;
.bss:000000000020BED9                 db    ? ;
.bss:000000000020BEDA                 db    ? ;
.bss:000000000020BEDB                 db    ? ;
.bss:000000000020BEDC                 db    ? ;
.bss:000000000020BEDD                 db    ? ;
.bss:000000000020BEDE                 db    ? ;
.bss:000000000020BEDF                 db    ? ;
.bss:000000000020BEE0                 db    ? ;
.bss:000000000020BEE1                 db    ? ;
.bss:000000000020BEE2                 db    ? ;
.bss:000000000020BEE3                 db    ? ;
.bss:000000000020BEE4                 db    ? ;
.bss:000000000020BEE5                 db    ? ;
.bss:000000000020BEE6                 db    ? ;
.bss:000000000020BEE7                 db    ? ;
.bss:000000000020BEE8                 db    ? ;
.bss:000000000020BEE9                 db    ? ;
.bss:000000000020BEEA                 db    ? ;
.bss:000000000020BEEB                 db    ? ;
.bss:000000000020BEEC                 db    ? ;
.bss:000000000020BEED                 db    ? ;
.bss:000000000020BEEE                 db    ? ;
.bss:000000000020BEEF                 db    ? ;
.bss:000000000020BEF0                 db    ? ;
.bss:000000000020BEF1                 db    ? ;
.bss:000000000020BEF2                 db    ? ;
.bss:000000000020BEF3                 db    ? ;
.bss:000000000020BEF4                 db    ? ;
.bss:000000000020BEF5                 db    ? ;
.bss:000000000020BEF6                 db    ? ;
.bss:000000000020BEF7                 db    ? ;
.bss:000000000020BEF8                 db    ? ;
.bss:000000000020BEF9                 db    ? ;
.bss:000000000020BEFA                 db    ? ;
.bss:000000000020BEFB                 db    ? ;
.bss:000000000020BEFC                 db    ? ;
.bss:000000000020BEFD                 db    ? ;
.bss:000000000020BEFE                 db    ? ;
.bss:000000000020BEFF                 db    ? ;
.bss:000000000020BF00                 db    ? ;
.bss:000000000020BF01                 db    ? ;
.bss:000000000020BF02                 db    ? ;
.bss:000000000020BF03                 db    ? ;
.bss:000000000020BF04                 db    ? ;
.bss:000000000020BF05                 db    ? ;
.bss:000000000020BF06                 db    ? ;
.bss:000000000020BF07                 db    ? ;
.bss:000000000020BF08                 db    ? ;
.bss:000000000020BF09                 db    ? ;
.bss:000000000020BF0A                 db    ? ;
.bss:000000000020BF0B                 db    ? ;
.bss:000000000020BF0C                 db    ? ;
.bss:000000000020BF0D                 db    ? ;
.bss:000000000020BF0E                 db    ? ;
.bss:000000000020BF0F                 db    ? ;
.bss:000000000020BF10                 db    ? ;
.bss:000000000020BF11                 db    ? ;
.bss:000000000020BF12                 db    ? ;
.bss:000000000020BF13                 db    ? ;
.bss:000000000020BF14                 db    ? ;
.bss:000000000020BF15                 db    ? ;
.bss:000000000020BF16                 db    ? ;
.bss:000000000020BF17                 db    ? ;
.bss:000000000020BF18                 db    ? ;
.bss:000000000020BF19                 db    ? ;
.bss:000000000020BF1A                 db    ? ;
.bss:000000000020BF1B                 db    ? ;
.bss:000000000020BF1C                 db    ? ;
.bss:000000000020BF1D                 db    ? ;
.bss:000000000020BF1E                 db    ? ;
.bss:000000000020BF1F                 db    ? ;
.bss:000000000020BF20                 db    ? ;
.bss:000000000020BF21                 db    ? ;
.bss:000000000020BF22                 db    ? ;
.bss:000000000020BF23                 db    ? ;
.bss:000000000020BF24                 db    ? ;
.bss:000000000020BF25                 db    ? ;
.bss:000000000020BF26                 db    ? ;
.bss:000000000020BF27                 db    ? ;
.bss:000000000020BF28                 db    ? ;
.bss:000000000020BF29                 db    ? ;
.bss:000000000020BF2A                 db    ? ;
.bss:000000000020BF2B                 db    ? ;
.bss:000000000020BF2C                 db    ? ;
.bss:000000000020BF2D                 db    ? ;
.bss:000000000020BF2E                 db    ? ;
.bss:000000000020BF2F                 db    ? ;
.bss:000000000020BF30                 db    ? ;
.bss:000000000020BF31                 db    ? ;
.bss:000000000020BF32                 db    ? ;
.bss:000000000020BF33                 db    ? ;
.bss:000000000020BF34                 db    ? ;
.bss:000000000020BF35                 db    ? ;
.bss:000000000020BF36                 db    ? ;
.bss:000000000020BF37                 db    ? ;
.bss:000000000020BF38                 db    ? ;
.bss:000000000020BF39                 db    ? ;
.bss:000000000020BF3A                 db    ? ;
.bss:000000000020BF3B                 db    ? ;
.bss:000000000020BF3C                 db    ? ;
.bss:000000000020BF3D                 db    ? ;
.bss:000000000020BF3E                 db    ? ;
.bss:000000000020BF3F                 db    ? ;
.bss:000000000020BF40                 db    ? ;
.bss:000000000020BF41                 db    ? ;
.bss:000000000020BF42                 db    ? ;
.bss:000000000020BF43                 db    ? ;
.bss:000000000020BF44                 db    ? ;
.bss:000000000020BF45                 db    ? ;
.bss:000000000020BF46                 db    ? ;
.bss:000000000020BF47                 db    ? ;
.bss:000000000020BF48                 db    ? ;
.bss:000000000020BF49                 db    ? ;
.bss:000000000020BF4A                 db    ? ;
.bss:000000000020BF4B                 db    ? ;
.bss:000000000020BF4C                 db    ? ;
.bss:000000000020BF4D                 db    ? ;
.bss:000000000020BF4E                 db    ? ;
.bss:000000000020BF4F                 db    ? ;
.bss:000000000020BF50                 db    ? ;
.bss:000000000020BF51                 db    ? ;
.bss:000000000020BF52                 db    ? ;
.bss:000000000020BF53                 db    ? ;
.bss:000000000020BF54                 db    ? ;
.bss:000000000020BF55                 db    ? ;
.bss:000000000020BF56                 db    ? ;
.bss:000000000020BF57                 db    ? ;
.bss:000000000020BF58                 db    ? ;
.bss:000000000020BF59                 db    ? ;
.bss:000000000020BF5A                 db    ? ;
.bss:000000000020BF5B                 db    ? ;
.bss:000000000020BF5C                 db    ? ;
.bss:000000000020BF5D                 db    ? ;
.bss:000000000020BF5E                 db    ? ;
.bss:000000000020BF5F                 db    ? ;
.bss:000000000020BF60                 db    ? ;
.bss:000000000020BF61                 db    ? ;
.bss:000000000020BF62                 db    ? ;
.bss:000000000020BF63                 db    ? ;
.bss:000000000020BF64                 db    ? ;
.bss:000000000020BF65                 db    ? ;
.bss:000000000020BF66                 db    ? ;
.bss:000000000020BF67                 db    ? ;
.bss:000000000020BF68                 db    ? ;
.bss:000000000020BF69                 db    ? ;
.bss:000000000020BF6A                 db    ? ;
.bss:000000000020BF6B                 db    ? ;
.bss:000000000020BF6C                 db    ? ;
.bss:000000000020BF6D                 db    ? ;
.bss:000000000020BF6E                 db    ? ;
.bss:000000000020BF6F                 db    ? ;
.bss:000000000020BF70                 db    ? ;
.bss:000000000020BF71                 db    ? ;
.bss:000000000020BF72                 db    ? ;
.bss:000000000020BF73                 db    ? ;
.bss:000000000020BF74                 db    ? ;
.bss:000000000020BF75                 db    ? ;
.bss:000000000020BF76                 db    ? ;
.bss:000000000020BF77                 db    ? ;
.bss:000000000020BF78                 db    ? ;
.bss:000000000020BF79                 db    ? ;
.bss:000000000020BF7A                 db    ? ;
.bss:000000000020BF7B                 db    ? ;
.bss:000000000020BF7C                 db    ? ;
.bss:000000000020BF7D                 db    ? ;
.bss:000000000020BF7E                 db    ? ;
.bss:000000000020BF7F                 db    ? ;
.bss:000000000020BF80                 db    ? ;
.bss:000000000020BF81                 db    ? ;
.bss:000000000020BF82                 db    ? ;
.bss:000000000020BF83                 db    ? ;
.bss:000000000020BF84                 db    ? ;
.bss:000000000020BF85                 db    ? ;
.bss:000000000020BF86                 db    ? ;
.bss:000000000020BF87                 db    ? ;
.bss:000000000020BF88                 db    ? ;
.bss:000000000020BF89                 db    ? ;
.bss:000000000020BF8A                 db    ? ;
.bss:000000000020BF8B                 db    ? ;
.bss:000000000020BF8C                 db    ? ;
.bss:000000000020BF8D                 db    ? ;
.bss:000000000020BF8E                 db    ? ;
.bss:000000000020BF8F                 db    ? ;
.bss:000000000020BF90                 db    ? ;
.bss:000000000020BF91                 db    ? ;
.bss:000000000020BF92                 db    ? ;
.bss:000000000020BF93                 db    ? ;
.bss:000000000020BF94                 db    ? ;
.bss:000000000020BF95                 db    ? ;
.bss:000000000020BF96                 db    ? ;
.bss:000000000020BF97                 db    ? ;
.bss:000000000020BF98                 db    ? ;
.bss:000000000020BF99                 db    ? ;
.bss:000000000020BF9A                 db    ? ;
.bss:000000000020BF9B                 db    ? ;
.bss:000000000020BF9C                 db    ? ;
.bss:000000000020BF9D                 db    ? ;
.bss:000000000020BF9E                 db    ? ;
.bss:000000000020BF9F                 db    ? ;
.bss:000000000020BFA0                 db    ? ;
.bss:000000000020BFA1                 db    ? ;
.bss:000000000020BFA2                 db    ? ;
.bss:000000000020BFA3                 db    ? ;
.bss:000000000020BFA4                 db    ? ;
.bss:000000000020BFA5                 db    ? ;
.bss:000000000020BFA6                 db    ? ;
.bss:000000000020BFA7                 db    ? ;
.bss:000000000020BFA8                 db    ? ;
.bss:000000000020BFA9                 db    ? ;
.bss:000000000020BFAA                 db    ? ;
.bss:000000000020BFAB                 db    ? ;
.bss:000000000020BFAC                 db    ? ;
.bss:000000000020BFAD                 db    ? ;
.bss:000000000020BFAE                 db    ? ;
.bss:000000000020BFAF                 db    ? ;
.bss:000000000020BFB0                 db    ? ;
.bss:000000000020BFB1                 db    ? ;
.bss:000000000020BFB2                 db    ? ;
.bss:000000000020BFB3                 db    ? ;
.bss:000000000020BFB4                 db    ? ;
.bss:000000000020BFB5                 db    ? ;
.bss:000000000020BFB6                 db    ? ;
.bss:000000000020BFB7                 db    ? ;
.bss:000000000020BFB8                 db    ? ;
.bss:000000000020BFB9                 db    ? ;
.bss:000000000020BFBA                 db    ? ;
.bss:000000000020BFBB                 db    ? ;
.bss:000000000020BFBC                 db    ? ;
.bss:000000000020BFBD                 db    ? ;
.bss:000000000020BFBE                 db    ? ;
.bss:000000000020BFBF                 db    ? ;
.bss:000000000020BFC0                 db    ? ;
.bss:000000000020BFC1                 db    ? ;
.bss:000000000020BFC2                 db    ? ;
.bss:000000000020BFC3                 db    ? ;
.bss:000000000020BFC4                 db    ? ;
.bss:000000000020BFC5                 db    ? ;
.bss:000000000020BFC6                 db    ? ;
.bss:000000000020BFC7                 db    ? ;
.bss:000000000020BFC8                 db    ? ;
.bss:000000000020BFC9                 db    ? ;
.bss:000000000020BFCA                 db    ? ;
.bss:000000000020BFCB                 db    ? ;
.bss:000000000020BFCC                 db    ? ;
.bss:000000000020BFCD                 db    ? ;
.bss:000000000020BFCE                 db    ? ;
.bss:000000000020BFCF                 db    ? ;
.bss:000000000020BFD0                 db    ? ;
.bss:000000000020BFD1                 db    ? ;
.bss:000000000020BFD2                 db    ? ;
.bss:000000000020BFD3                 db    ? ;
.bss:000000000020BFD4                 db    ? ;
.bss:000000000020BFD5                 db    ? ;
.bss:000000000020BFD6                 db    ? ;
.bss:000000000020BFD7                 db    ? ;
.bss:000000000020BFD8                 db    ? ;
.bss:000000000020BFD9                 db    ? ;
.bss:000000000020BFDA                 db    ? ;
.bss:000000000020BFDB                 db    ? ;
.bss:000000000020BFDC                 db    ? ;
.bss:000000000020BFDD                 db    ? ;
.bss:000000000020BFDE                 db    ? ;
.bss:000000000020BFDF                 db    ? ;
.bss:000000000020BFE0                 db    ? ;
.bss:000000000020BFE1                 db    ? ;
.bss:000000000020BFE2                 db    ? ;
.bss:000000000020BFE3                 db    ? ;
.bss:000000000020BFE4                 db    ? ;
.bss:000000000020BFE5                 db    ? ;
.bss:000000000020BFE6                 db    ? ;
.bss:000000000020BFE7                 db    ? ;
.bss:000000000020BFE8                 db    ? ;
.bss:000000000020BFE9                 db    ? ;
.bss:000000000020BFEA                 db    ? ;
.bss:000000000020BFEB                 db    ? ;
.bss:000000000020BFEC                 db    ? ;
.bss:000000000020BFED                 db    ? ;
.bss:000000000020BFEE                 db    ? ;
.bss:000000000020BFEF                 db    ? ;
.bss:000000000020BFF0                 db    ? ;
.bss:000000000020BFF1                 db    ? ;
.bss:000000000020BFF2                 db    ? ;
.bss:000000000020BFF3                 db    ? ;
.bss:000000000020BFF4                 db    ? ;
.bss:000000000020BFF5                 db    ? ;
.bss:000000000020BFF6                 db    ? ;
.bss:000000000020BFF7                 db    ? ;
.bss:000000000020BFF8                 db    ? ;
.bss:000000000020BFF9                 db    ? ;
.bss:000000000020BFFA                 db    ? ;
.bss:000000000020BFFB                 db    ? ;
.bss:000000000020BFFC                 db    ? ;
.bss:000000000020BFFD                 db    ? ;
.bss:000000000020BFFE                 db    ? ;
.bss:000000000020BFFF                 db    ? ;
.bss:000000000020C000                 db    ? ;
.bss:000000000020C001                 db    ? ;
.bss:000000000020C002                 db    ? ;
.bss:000000000020C003                 db    ? ;
.bss:000000000020C004                 db    ? ;
.bss:000000000020C005                 db    ? ;
.bss:000000000020C006                 db    ? ;
.bss:000000000020C007                 db    ? ;
.bss:000000000020C008                 db    ? ;
.bss:000000000020C009                 db    ? ;
.bss:000000000020C00A                 db    ? ;
.bss:000000000020C00B                 db    ? ;
.bss:000000000020C00C                 db    ? ;
.bss:000000000020C00D                 db    ? ;
.bss:000000000020C00E                 db    ? ;
.bss:000000000020C00F                 db    ? ;
.bss:000000000020C010                 db    ? ;
.bss:000000000020C011                 db    ? ;
.bss:000000000020C012                 db    ? ;
.bss:000000000020C013                 db    ? ;
.bss:000000000020C014                 db    ? ;
.bss:000000000020C015                 db    ? ;
.bss:000000000020C016                 db    ? ;
.bss:000000000020C017                 db    ? ;
.bss:000000000020C018                 db    ? ;
.bss:000000000020C019                 db    ? ;
.bss:000000000020C01A                 db    ? ;
.bss:000000000020C01B                 db    ? ;
.bss:000000000020C01C                 db    ? ;
.bss:000000000020C01D                 db    ? ;
.bss:000000000020C01E                 db    ? ;
.bss:000000000020C01F                 db    ? ;
.bss:000000000020C020                 db    ? ;
.bss:000000000020C021                 db    ? ;
.bss:000000000020C022                 db    ? ;
.bss:000000000020C023                 db    ? ;
.bss:000000000020C024                 db    ? ;
.bss:000000000020C025                 db    ? ;
.bss:000000000020C026                 db    ? ;
.bss:000000000020C027                 db    ? ;
.bss:000000000020C028                 db    ? ;
.bss:000000000020C029                 db    ? ;
.bss:000000000020C02A                 db    ? ;
.bss:000000000020C02B                 db    ? ;
.bss:000000000020C02C                 db    ? ;
.bss:000000000020C02D                 db    ? ;
.bss:000000000020C02E                 db    ? ;
.bss:000000000020C02F                 db    ? ;
.bss:000000000020C030                 db    ? ;
.bss:000000000020C031                 db    ? ;
.bss:000000000020C032                 db    ? ;
.bss:000000000020C033                 db    ? ;
.bss:000000000020C034                 db    ? ;
.bss:000000000020C035                 db    ? ;
.bss:000000000020C036                 db    ? ;
.bss:000000000020C037                 db    ? ;
.bss:000000000020C038                 db    ? ;
.bss:000000000020C039                 db    ? ;
.bss:000000000020C03A                 db    ? ;
.bss:000000000020C03B                 db    ? ;
.bss:000000000020C03C                 db    ? ;
.bss:000000000020C03D                 db    ? ;
.bss:000000000020C03E                 db    ? ;
.bss:000000000020C03F                 db    ? ;
.bss:000000000020C040                 db    ? ;
.bss:000000000020C041                 db    ? ;
.bss:000000000020C042                 db    ? ;
.bss:000000000020C043                 db    ? ;
.bss:000000000020C044                 db    ? ;
.bss:000000000020C045                 db    ? ;
.bss:000000000020C046                 db    ? ;
.bss:000000000020C047                 db    ? ;
.bss:000000000020C048                 db    ? ;
.bss:000000000020C049                 db    ? ;
.bss:000000000020C04A                 db    ? ;
.bss:000000000020C04B                 db    ? ;
.bss:000000000020C04C                 db    ? ;
.bss:000000000020C04D                 db    ? ;
.bss:000000000020C04E                 db    ? ;
.bss:000000000020C04F                 db    ? ;
.bss:000000000020C050                 db    ? ;
.bss:000000000020C051                 db    ? ;
.bss:000000000020C052                 db    ? ;
.bss:000000000020C053                 db    ? ;
.bss:000000000020C054                 db    ? ;
.bss:000000000020C055                 db    ? ;
.bss:000000000020C056                 db    ? ;
.bss:000000000020C057                 db    ? ;
.bss:000000000020C058                 db    ? ;
.bss:000000000020C059                 db    ? ;
.bss:000000000020C05A                 db    ? ;
.bss:000000000020C05B                 db    ? ;
.bss:000000000020C05C                 db    ? ;
.bss:000000000020C05D                 db    ? ;
.bss:000000000020C05E                 db    ? ;
.bss:000000000020C05F                 db    ? ;
.bss:000000000020C060                 db    ? ;
.bss:000000000020C061                 db    ? ;
.bss:000000000020C062                 db    ? ;
.bss:000000000020C063                 db    ? ;
.bss:000000000020C064                 db    ? ;
.bss:000000000020C065                 db    ? ;
.bss:000000000020C066                 db    ? ;
.bss:000000000020C067                 db    ? ;
.bss:000000000020C068                 db    ? ;
.bss:000000000020C069                 db    ? ;
.bss:000000000020C06A                 db    ? ;
.bss:000000000020C06B                 db    ? ;
.bss:000000000020C06C                 db    ? ;
.bss:000000000020C06D                 db    ? ;
.bss:000000000020C06E                 db    ? ;
.bss:000000000020C06F                 db    ? ;
.bss:000000000020C070                 db    ? ;
.bss:000000000020C071                 db    ? ;
.bss:000000000020C072                 db    ? ;
.bss:000000000020C073                 db    ? ;
.bss:000000000020C074                 db    ? ;
.bss:000000000020C075                 db    ? ;
.bss:000000000020C076                 db    ? ;
.bss:000000000020C077                 db    ? ;
.bss:000000000020C078                 db    ? ;
.bss:000000000020C079                 db    ? ;
.bss:000000000020C07A                 db    ? ;
.bss:000000000020C07B                 db    ? ;
.bss:000000000020C07C                 db    ? ;
.bss:000000000020C07D                 db    ? ;
.bss:000000000020C07E                 db    ? ;
.bss:000000000020C07F                 db    ? ;
.bss:000000000020C080                 db    ? ;
.bss:000000000020C081                 db    ? ;
.bss:000000000020C082                 db    ? ;
.bss:000000000020C083                 db    ? ;
.bss:000000000020C084                 db    ? ;
.bss:000000000020C085                 db    ? ;
.bss:000000000020C086                 db    ? ;
.bss:000000000020C087                 db    ? ;
.bss:000000000020C088                 db    ? ;
.bss:000000000020C089                 db    ? ;
.bss:000000000020C08A                 db    ? ;
.bss:000000000020C08B                 db    ? ;
.bss:000000000020C08C                 db    ? ;
.bss:000000000020C08D                 db    ? ;
.bss:000000000020C08E                 db    ? ;
.bss:000000000020C08F                 db    ? ;
.bss:000000000020C090                 db    ? ;
.bss:000000000020C091                 db    ? ;
.bss:000000000020C092                 db    ? ;
.bss:000000000020C093                 db    ? ;
.bss:000000000020C094                 db    ? ;
.bss:000000000020C095                 db    ? ;
.bss:000000000020C096                 db    ? ;
.bss:000000000020C097                 db    ? ;
.bss:000000000020C098                 db    ? ;
.bss:000000000020C099                 db    ? ;
.bss:000000000020C09A                 db    ? ;
.bss:000000000020C09B                 db    ? ;
.bss:000000000020C09C                 db    ? ;
.bss:000000000020C09D                 db    ? ;
.bss:000000000020C09E                 db    ? ;
.bss:000000000020C09F                 db    ? ;
.bss:000000000020C0A0                 db    ? ;
.bss:000000000020C0A1                 db    ? ;
.bss:000000000020C0A2                 db    ? ;
.bss:000000000020C0A3                 db    ? ;
.bss:000000000020C0A4                 db    ? ;
.bss:000000000020C0A5                 db    ? ;
.bss:000000000020C0A6                 db    ? ;
.bss:000000000020C0A7                 db    ? ;
.bss:000000000020C0A8                 db    ? ;
.bss:000000000020C0A9                 db    ? ;
.bss:000000000020C0AA                 db    ? ;
.bss:000000000020C0AB                 db    ? ;
.bss:000000000020C0AC                 db    ? ;
.bss:000000000020C0AD                 db    ? ;
.bss:000000000020C0AE                 db    ? ;
.bss:000000000020C0AF                 db    ? ;
.bss:000000000020C0B0                 db    ? ;
.bss:000000000020C0B1                 db    ? ;
.bss:000000000020C0B2                 db    ? ;
.bss:000000000020C0B3                 db    ? ;
.bss:000000000020C0B4                 db    ? ;
.bss:000000000020C0B5                 db    ? ;
.bss:000000000020C0B6                 db    ? ;
.bss:000000000020C0B7                 db    ? ;
.bss:000000000020C0B8                 db    ? ;
.bss:000000000020C0B9                 db    ? ;
.bss:000000000020C0BA                 db    ? ;
.bss:000000000020C0BB                 db    ? ;
.bss:000000000020C0BC                 db    ? ;
.bss:000000000020C0BD                 db    ? ;
.bss:000000000020C0BE                 db    ? ;
.bss:000000000020C0BF                 db    ? ;
.bss:000000000020C0C0                 db    ? ;
.bss:000000000020C0C1                 db    ? ;
.bss:000000000020C0C2                 db    ? ;
.bss:000000000020C0C3                 db    ? ;
.bss:000000000020C0C4                 db    ? ;
.bss:000000000020C0C5                 db    ? ;
.bss:000000000020C0C6                 db    ? ;
.bss:000000000020C0C7                 db    ? ;
.bss:000000000020C0C8                 db    ? ;
.bss:000000000020C0C9                 db    ? ;
.bss:000000000020C0CA                 db    ? ;
.bss:000000000020C0CB                 db    ? ;
.bss:000000000020C0CC                 db    ? ;
.bss:000000000020C0CD                 db    ? ;
.bss:000000000020C0CE                 db    ? ;
.bss:000000000020C0CF                 db    ? ;
.bss:000000000020C0D0                 db    ? ;
.bss:000000000020C0D1                 db    ? ;
.bss:000000000020C0D2                 db    ? ;
.bss:000000000020C0D3                 db    ? ;
.bss:000000000020C0D4                 db    ? ;
.bss:000000000020C0D5                 db    ? ;
.bss:000000000020C0D6                 db    ? ;
.bss:000000000020C0D7                 db    ? ;
.bss:000000000020C0D8                 db    ? ;
.bss:000000000020C0D9                 db    ? ;
.bss:000000000020C0DA                 db    ? ;
.bss:000000000020C0DB                 db    ? ;
.bss:000000000020C0DC                 db    ? ;
.bss:000000000020C0DD                 db    ? ;
.bss:000000000020C0DE                 db    ? ;
.bss:000000000020C0DF                 db    ? ;
.bss:000000000020C0E0                 db    ? ;
.bss:000000000020C0E1                 db    ? ;
.bss:000000000020C0E2                 db    ? ;
.bss:000000000020C0E3                 db    ? ;
.bss:000000000020C0E4                 db    ? ;
.bss:000000000020C0E5                 db    ? ;
.bss:000000000020C0E6                 db    ? ;
.bss:000000000020C0E7                 db    ? ;
.bss:000000000020C0E8                 db    ? ;
.bss:000000000020C0E9                 db    ? ;
.bss:000000000020C0EA                 db    ? ;
.bss:000000000020C0EB                 db    ? ;
.bss:000000000020C0EC                 db    ? ;
.bss:000000000020C0ED                 db    ? ;
.bss:000000000020C0EE                 db    ? ;
.bss:000000000020C0EF                 db    ? ;
.bss:000000000020C0F0                 db    ? ;
.bss:000000000020C0F1                 db    ? ;
.bss:000000000020C0F2                 db    ? ;
.bss:000000000020C0F3                 db    ? ;
.bss:000000000020C0F4                 db    ? ;
.bss:000000000020C0F5                 db    ? ;
.bss:000000000020C0F6                 db    ? ;
.bss:000000000020C0F7                 db    ? ;
.bss:000000000020C0F8                 db    ? ;
.bss:000000000020C0F9                 db    ? ;
.bss:000000000020C0FA                 db    ? ;
.bss:000000000020C0FB                 db    ? ;
.bss:000000000020C0FC                 db    ? ;
.bss:000000000020C0FD                 db    ? ;
.bss:000000000020C0FE                 db    ? ;
.bss:000000000020C0FF                 db    ? ;
.bss:000000000020C100                 db    ? ;
.bss:000000000020C101                 db    ? ;
.bss:000000000020C102                 db    ? ;
.bss:000000000020C103                 db    ? ;
.bss:000000000020C104                 db    ? ;
.bss:000000000020C105                 db    ? ;
.bss:000000000020C106                 db    ? ;
.bss:000000000020C107                 db    ? ;
.bss:000000000020C108                 db    ? ;
.bss:000000000020C109                 db    ? ;
.bss:000000000020C10A                 db    ? ;
.bss:000000000020C10B                 db    ? ;
.bss:000000000020C10C                 db    ? ;
.bss:000000000020C10D                 db    ? ;
.bss:000000000020C10E                 db    ? ;
.bss:000000000020C10F                 db    ? ;
.bss:000000000020C110                 db    ? ;
.bss:000000000020C111                 db    ? ;
.bss:000000000020C112                 db    ? ;
.bss:000000000020C113                 db    ? ;
.bss:000000000020C114                 db    ? ;
.bss:000000000020C115                 db    ? ;
.bss:000000000020C116                 db    ? ;
.bss:000000000020C117                 db    ? ;
.bss:000000000020C118                 db    ? ;
.bss:000000000020C119                 db    ? ;
.bss:000000000020C11A                 db    ? ;
.bss:000000000020C11B                 db    ? ;
.bss:000000000020C11C                 db    ? ;
.bss:000000000020C11D                 db    ? ;
.bss:000000000020C11E                 db    ? ;
.bss:000000000020C11F                 db    ? ;
.bss:000000000020C120                 db    ? ;
.bss:000000000020C121                 db    ? ;
.bss:000000000020C122                 db    ? ;
.bss:000000000020C123                 db    ? ;
.bss:000000000020C124                 db    ? ;
.bss:000000000020C125                 db    ? ;
.bss:000000000020C126                 db    ? ;
.bss:000000000020C127                 db    ? ;
.bss:000000000020C128                 db    ? ;
.bss:000000000020C129                 db    ? ;
.bss:000000000020C12A                 db    ? ;
.bss:000000000020C12B                 db    ? ;
.bss:000000000020C12C                 db    ? ;
.bss:000000000020C12D                 db    ? ;
.bss:000000000020C12E                 db    ? ;
.bss:000000000020C12F                 db    ? ;
.bss:000000000020C130                 db    ? ;
.bss:000000000020C131                 db    ? ;
.bss:000000000020C132                 db    ? ;
.bss:000000000020C133                 db    ? ;
.bss:000000000020C134                 db    ? ;
.bss:000000000020C135                 db    ? ;
.bss:000000000020C136                 db    ? ;
.bss:000000000020C137                 db    ? ;
.bss:000000000020C138                 db    ? ;
.bss:000000000020C139                 db    ? ;
.bss:000000000020C13A                 db    ? ;
.bss:000000000020C13B                 db    ? ;
.bss:000000000020C13C                 db    ? ;
.bss:000000000020C13D                 db    ? ;
.bss:000000000020C13E                 db    ? ;
.bss:000000000020C13F                 db    ? ;
.bss:000000000020C140                 db    ? ;
.bss:000000000020C141                 db    ? ;
.bss:000000000020C142                 db    ? ;
.bss:000000000020C143                 db    ? ;
.bss:000000000020C144                 db    ? ;
.bss:000000000020C145                 db    ? ;
.bss:000000000020C146                 db    ? ;
.bss:000000000020C147                 db    ? ;
.bss:000000000020C148                 db    ? ;
.bss:000000000020C149                 db    ? ;
.bss:000000000020C14A                 db    ? ;
.bss:000000000020C14B                 db    ? ;
.bss:000000000020C14C                 db    ? ;
.bss:000000000020C14D                 db    ? ;
.bss:000000000020C14E                 db    ? ;
.bss:000000000020C14F                 db    ? ;
.bss:000000000020C150                 db    ? ;
.bss:000000000020C151                 db    ? ;
.bss:000000000020C152                 db    ? ;
.bss:000000000020C153                 db    ? ;
.bss:000000000020C154                 db    ? ;
.bss:000000000020C155                 db    ? ;
.bss:000000000020C156                 db    ? ;
.bss:000000000020C157                 db    ? ;
.bss:000000000020C158                 db    ? ;
.bss:000000000020C159                 db    ? ;
.bss:000000000020C15A                 db    ? ;
.bss:000000000020C15B                 db    ? ;
.bss:000000000020C15C                 db    ? ;
.bss:000000000020C15D                 db    ? ;
.bss:000000000020C15E                 db    ? ;
.bss:000000000020C15F                 db    ? ;
.bss:000000000020C160                 db    ? ;
.bss:000000000020C161                 db    ? ;
.bss:000000000020C162                 db    ? ;
.bss:000000000020C163                 db    ? ;
.bss:000000000020C164                 db    ? ;
.bss:000000000020C165                 db    ? ;
.bss:000000000020C166                 db    ? ;
.bss:000000000020C167                 db    ? ;
.bss:000000000020C168                 db    ? ;
.bss:000000000020C169                 db    ? ;
.bss:000000000020C16A                 db    ? ;
.bss:000000000020C16B                 db    ? ;
.bss:000000000020C16C                 db    ? ;
.bss:000000000020C16D                 db    ? ;
.bss:000000000020C16E                 db    ? ;
.bss:000000000020C16F                 db    ? ;
.bss:000000000020C170                 db    ? ;
.bss:000000000020C171                 db    ? ;
.bss:000000000020C172                 db    ? ;
.bss:000000000020C173                 db    ? ;
.bss:000000000020C174                 db    ? ;
.bss:000000000020C175                 db    ? ;
.bss:000000000020C176                 db    ? ;
.bss:000000000020C177                 db    ? ;
.bss:000000000020C178                 db    ? ;
.bss:000000000020C179                 db    ? ;
.bss:000000000020C17A                 db    ? ;
.bss:000000000020C17B                 db    ? ;
.bss:000000000020C17C                 db    ? ;
.bss:000000000020C17D                 db    ? ;
.bss:000000000020C17E                 db    ? ;
.bss:000000000020C17F                 db    ? ;
.bss:000000000020C180                 db    ? ;
.bss:000000000020C181                 db    ? ;
.bss:000000000020C182                 db    ? ;
.bss:000000000020C183                 db    ? ;
.bss:000000000020C184                 db    ? ;
.bss:000000000020C185                 db    ? ;
.bss:000000000020C186                 db    ? ;
.bss:000000000020C187                 db    ? ;
.bss:000000000020C188                 db    ? ;
.bss:000000000020C189                 db    ? ;
.bss:000000000020C18A                 db    ? ;
.bss:000000000020C18B                 db    ? ;
.bss:000000000020C18C                 db    ? ;
.bss:000000000020C18D                 db    ? ;
.bss:000000000020C18E                 db    ? ;
.bss:000000000020C18F                 db    ? ;
.bss:000000000020C190                 db    ? ;
.bss:000000000020C191                 db    ? ;
.bss:000000000020C192                 db    ? ;
.bss:000000000020C193                 db    ? ;
.bss:000000000020C194                 db    ? ;
.bss:000000000020C195                 db    ? ;
.bss:000000000020C196                 db    ? ;
.bss:000000000020C197                 db    ? ;
.bss:000000000020C198                 db    ? ;
.bss:000000000020C199                 db    ? ;
.bss:000000000020C19A                 db    ? ;
.bss:000000000020C19B                 db    ? ;
.bss:000000000020C19C                 db    ? ;
.bss:000000000020C19D                 db    ? ;
.bss:000000000020C19E                 db    ? ;
.bss:000000000020C19F                 db    ? ;
.bss:000000000020C1A0                 db    ? ;
.bss:000000000020C1A1                 db    ? ;
.bss:000000000020C1A2                 db    ? ;
.bss:000000000020C1A3                 db    ? ;
.bss:000000000020C1A4                 db    ? ;
.bss:000000000020C1A5                 db    ? ;
.bss:000000000020C1A6                 db    ? ;
.bss:000000000020C1A7                 db    ? ;
.bss:000000000020C1A8                 db    ? ;
.bss:000000000020C1A9                 db    ? ;
.bss:000000000020C1AA                 db    ? ;
.bss:000000000020C1AB                 db    ? ;
.bss:000000000020C1AC                 db    ? ;
.bss:000000000020C1AD                 db    ? ;
.bss:000000000020C1AE                 db    ? ;
.bss:000000000020C1AF                 db    ? ;
.bss:000000000020C1B0                 db    ? ;
.bss:000000000020C1B1                 db    ? ;
.bss:000000000020C1B2                 db    ? ;
.bss:000000000020C1B3                 db    ? ;
.bss:000000000020C1B4                 db    ? ;
.bss:000000000020C1B5                 db    ? ;
.bss:000000000020C1B6                 db    ? ;
.bss:000000000020C1B7                 db    ? ;
.bss:000000000020C1B8                 db    ? ;
.bss:000000000020C1B9                 db    ? ;
.bss:000000000020C1BA                 db    ? ;
.bss:000000000020C1BB                 db    ? ;
.bss:000000000020C1BC                 db    ? ;
.bss:000000000020C1BD                 db    ? ;
.bss:000000000020C1BE                 db    ? ;
.bss:000000000020C1BF                 db    ? ;
.bss:000000000020C1C0                 db    ? ;
.bss:000000000020C1C1                 db    ? ;
.bss:000000000020C1C2                 db    ? ;
.bss:000000000020C1C3                 db    ? ;
.bss:000000000020C1C4                 db    ? ;
.bss:000000000020C1C5                 db    ? ;
.bss:000000000020C1C6                 db    ? ;
.bss:000000000020C1C7                 db    ? ;
.bss:000000000020C1C8                 db    ? ;
.bss:000000000020C1C9                 db    ? ;
.bss:000000000020C1CA                 db    ? ;
.bss:000000000020C1CB                 db    ? ;
.bss:000000000020C1CC                 db    ? ;
.bss:000000000020C1CD                 db    ? ;
.bss:000000000020C1CE                 db    ? ;
.bss:000000000020C1CF                 db    ? ;
.bss:000000000020C1D0                 db    ? ;
.bss:000000000020C1D1                 db    ? ;
.bss:000000000020C1D2                 db    ? ;
.bss:000000000020C1D3                 db    ? ;
.bss:000000000020C1D4                 db    ? ;
.bss:000000000020C1D5                 db    ? ;
.bss:000000000020C1D6                 db    ? ;
.bss:000000000020C1D7                 db    ? ;
.bss:000000000020C1D8                 db    ? ;
.bss:000000000020C1D9                 db    ? ;
.bss:000000000020C1DA                 db    ? ;
.bss:000000000020C1DB                 db    ? ;
.bss:000000000020C1DC                 db    ? ;
.bss:000000000020C1DD                 db    ? ;
.bss:000000000020C1DE                 db    ? ;
.bss:000000000020C1DF                 db    ? ;
.bss:000000000020C1E0                 db    ? ;
.bss:000000000020C1E1                 db    ? ;
.bss:000000000020C1E2                 db    ? ;
.bss:000000000020C1E3                 db    ? ;
.bss:000000000020C1E4                 db    ? ;
.bss:000000000020C1E5                 db    ? ;
.bss:000000000020C1E6                 db    ? ;
.bss:000000000020C1E7                 db    ? ;
.bss:000000000020C1E8                 db    ? ;
.bss:000000000020C1E9                 db    ? ;
.bss:000000000020C1EA                 db    ? ;
.bss:000000000020C1EB                 db    ? ;
.bss:000000000020C1EC                 db    ? ;
.bss:000000000020C1ED                 db    ? ;
.bss:000000000020C1EE                 db    ? ;
.bss:000000000020C1EF                 db    ? ;
.bss:000000000020C1F0                 db    ? ;
.bss:000000000020C1F1                 db    ? ;
.bss:000000000020C1F2                 db    ? ;
.bss:000000000020C1F3                 db    ? ;
.bss:000000000020C1F4                 db    ? ;
.bss:000000000020C1F5                 db    ? ;
.bss:000000000020C1F6                 db    ? ;
.bss:000000000020C1F7                 db    ? ;
.bss:000000000020C1F8                 db    ? ;
.bss:000000000020C1F9                 db    ? ;
.bss:000000000020C1FA                 db    ? ;
.bss:000000000020C1FB                 db    ? ;
.bss:000000000020C1FC                 db    ? ;
.bss:000000000020C1FD                 db    ? ;
.bss:000000000020C1FE                 db    ? ;
.bss:000000000020C1FF                 db    ? ;
.bss:000000000020C200                 db    ? ;
.bss:000000000020C201                 db    ? ;
.bss:000000000020C202                 db    ? ;
.bss:000000000020C203                 db    ? ;
.bss:000000000020C204                 db    ? ;
.bss:000000000020C205                 db    ? ;
.bss:000000000020C206                 db    ? ;
.bss:000000000020C207                 db    ? ;
.bss:000000000020C208                 db    ? ;
.bss:000000000020C209                 db    ? ;
.bss:000000000020C20A                 db    ? ;
.bss:000000000020C20B                 db    ? ;
.bss:000000000020C20C                 db    ? ;
.bss:000000000020C20D                 db    ? ;
.bss:000000000020C20E                 db    ? ;
.bss:000000000020C20F                 db    ? ;
.bss:000000000020C210                 db    ? ;
.bss:000000000020C211                 db    ? ;
.bss:000000000020C212                 db    ? ;
.bss:000000000020C213                 db    ? ;
.bss:000000000020C214                 db    ? ;
.bss:000000000020C215                 db    ? ;
.bss:000000000020C216                 db    ? ;
.bss:000000000020C217                 db    ? ;
.bss:000000000020C218                 db    ? ;
.bss:000000000020C219                 db    ? ;
.bss:000000000020C21A                 db    ? ;
.bss:000000000020C21B                 db    ? ;
.bss:000000000020C21C                 db    ? ;
.bss:000000000020C21D                 db    ? ;
.bss:000000000020C21E                 db    ? ;
.bss:000000000020C21F                 db    ? ;
.bss:000000000020C220                 db    ? ;
.bss:000000000020C221                 db    ? ;
.bss:000000000020C222                 db    ? ;
.bss:000000000020C223                 db    ? ;
.bss:000000000020C224                 db    ? ;
.bss:000000000020C225                 db    ? ;
.bss:000000000020C226                 db    ? ;
.bss:000000000020C227                 db    ? ;
.bss:000000000020C228                 db    ? ;
.bss:000000000020C229                 db    ? ;
.bss:000000000020C22A                 db    ? ;
.bss:000000000020C22B                 db    ? ;
.bss:000000000020C22C                 db    ? ;
.bss:000000000020C22D                 db    ? ;
.bss:000000000020C22E                 db    ? ;
.bss:000000000020C22F                 db    ? ;
.bss:000000000020C230                 db    ? ;
.bss:000000000020C231                 db    ? ;
.bss:000000000020C232                 db    ? ;
.bss:000000000020C233                 db    ? ;
.bss:000000000020C234                 db    ? ;
.bss:000000000020C235                 db    ? ;
.bss:000000000020C236                 db    ? ;
.bss:000000000020C237                 db    ? ;
.bss:000000000020C238                 db    ? ;
.bss:000000000020C239                 db    ? ;
.bss:000000000020C23A                 db    ? ;
.bss:000000000020C23B                 db    ? ;
.bss:000000000020C23C                 db    ? ;
.bss:000000000020C23D                 db    ? ;
.bss:000000000020C23E                 db    ? ;
.bss:000000000020C23F                 db    ? ;
.bss:000000000020C240                 db    ? ;
.bss:000000000020C241                 db    ? ;
.bss:000000000020C242                 db    ? ;
.bss:000000000020C243                 db    ? ;
.bss:000000000020C244                 db    ? ;
.bss:000000000020C245                 db    ? ;
.bss:000000000020C246                 db    ? ;
.bss:000000000020C247                 db    ? ;
.bss:000000000020C248                 db    ? ;
.bss:000000000020C249                 db    ? ;
.bss:000000000020C24A                 db    ? ;
.bss:000000000020C24B                 db    ? ;
.bss:000000000020C24C                 db    ? ;
.bss:000000000020C24D                 db    ? ;
.bss:000000000020C24E                 db    ? ;
.bss:000000000020C24F                 db    ? ;
.bss:000000000020C250                 db    ? ;
.bss:000000000020C251                 db    ? ;
.bss:000000000020C252                 db    ? ;
.bss:000000000020C253                 db    ? ;
.bss:000000000020C254                 db    ? ;
.bss:000000000020C255                 db    ? ;
.bss:000000000020C256                 db    ? ;
.bss:000000000020C257                 db    ? ;
.bss:000000000020C258                 db    ? ;
.bss:000000000020C259                 db    ? ;
.bss:000000000020C25A                 db    ? ;
.bss:000000000020C25B                 db    ? ;
.bss:000000000020C25C                 db    ? ;
.bss:000000000020C25D                 db    ? ;
.bss:000000000020C25E                 db    ? ;
.bss:000000000020C25F                 db    ? ;
.bss:000000000020C260                 db    ? ;
.bss:000000000020C261                 db    ? ;
.bss:000000000020C262                 db    ? ;
.bss:000000000020C263                 db    ? ;
.bss:000000000020C264                 db    ? ;
.bss:000000000020C265                 db    ? ;
.bss:000000000020C266                 db    ? ;
.bss:000000000020C267                 db    ? ;
.bss:000000000020C268                 db    ? ;
.bss:000000000020C269                 db    ? ;
.bss:000000000020C26A                 db    ? ;
.bss:000000000020C26B                 db    ? ;
.bss:000000000020C26C                 db    ? ;
.bss:000000000020C26D                 db    ? ;
.bss:000000000020C26E                 db    ? ;
.bss:000000000020C26F                 db    ? ;
.bss:000000000020C270                 db    ? ;
.bss:000000000020C271                 db    ? ;
.bss:000000000020C272                 db    ? ;
.bss:000000000020C273                 db    ? ;
.bss:000000000020C274                 db    ? ;
.bss:000000000020C275                 db    ? ;
.bss:000000000020C276                 db    ? ;
.bss:000000000020C277                 db    ? ;
.bss:000000000020C278                 db    ? ;
.bss:000000000020C279                 db    ? ;
.bss:000000000020C27A                 db    ? ;
.bss:000000000020C27B                 db    ? ;
.bss:000000000020C27C                 db    ? ;
.bss:000000000020C27D                 db    ? ;
.bss:000000000020C27E                 db    ? ;
.bss:000000000020C27F                 db    ? ;
.bss:000000000020C280                 db    ? ;
.bss:000000000020C281                 db    ? ;
.bss:000000000020C282                 db    ? ;
.bss:000000000020C283                 db    ? ;
.bss:000000000020C284                 db    ? ;
.bss:000000000020C285                 db    ? ;
.bss:000000000020C286                 db    ? ;
.bss:000000000020C287                 db    ? ;
.bss:000000000020C288                 db    ? ;
.bss:000000000020C289                 db    ? ;
.bss:000000000020C28A                 db    ? ;
.bss:000000000020C28B                 db    ? ;
.bss:000000000020C28C                 db    ? ;
.bss:000000000020C28D                 db    ? ;
.bss:000000000020C28E                 db    ? ;
.bss:000000000020C28F                 db    ? ;
.bss:000000000020C290                 db    ? ;
.bss:000000000020C291                 db    ? ;
.bss:000000000020C292                 db    ? ;
.bss:000000000020C293                 db    ? ;
.bss:000000000020C294                 db    ? ;
.bss:000000000020C295                 db    ? ;
.bss:000000000020C296                 db    ? ;
.bss:000000000020C297                 db    ? ;
.bss:000000000020C298                 db    ? ;
.bss:000000000020C299                 db    ? ;
.bss:000000000020C29A                 db    ? ;
.bss:000000000020C29B                 db    ? ;
.bss:000000000020C29C                 db    ? ;
.bss:000000000020C29D                 db    ? ;
.bss:000000000020C29E                 db    ? ;
.bss:000000000020C29F                 db    ? ;
.bss:000000000020C2A0                 db    ? ;
.bss:000000000020C2A1                 db    ? ;
.bss:000000000020C2A2                 db    ? ;
.bss:000000000020C2A3                 db    ? ;
.bss:000000000020C2A4                 db    ? ;
.bss:000000000020C2A5                 db    ? ;
.bss:000000000020C2A6                 db    ? ;
.bss:000000000020C2A7                 db    ? ;
.bss:000000000020C2A8                 db    ? ;
.bss:000000000020C2A9                 db    ? ;
.bss:000000000020C2AA                 db    ? ;
.bss:000000000020C2AB                 db    ? ;
.bss:000000000020C2AC                 db    ? ;
.bss:000000000020C2AD                 db    ? ;
.bss:000000000020C2AE                 db    ? ;
.bss:000000000020C2AF                 db    ? ;
.bss:000000000020C2B0                 db    ? ;
.bss:000000000020C2B1                 db    ? ;
.bss:000000000020C2B2                 db    ? ;
.bss:000000000020C2B3                 db    ? ;
.bss:000000000020C2B4                 db    ? ;
.bss:000000000020C2B5                 db    ? ;
.bss:000000000020C2B6                 db    ? ;
.bss:000000000020C2B7                 db    ? ;
.bss:000000000020C2B8                 db    ? ;
.bss:000000000020C2B9                 db    ? ;
.bss:000000000020C2BA                 db    ? ;
.bss:000000000020C2BB                 db    ? ;
.bss:000000000020C2BC                 db    ? ;
.bss:000000000020C2BD                 db    ? ;
.bss:000000000020C2BE                 db    ? ;
.bss:000000000020C2BF                 db    ? ;
.bss:000000000020C2C0                 db    ? ;
.bss:000000000020C2C1                 db    ? ;
.bss:000000000020C2C2                 db    ? ;
.bss:000000000020C2C3                 db    ? ;
.bss:000000000020C2C4                 db    ? ;
.bss:000000000020C2C5                 db    ? ;
.bss:000000000020C2C6                 db    ? ;
.bss:000000000020C2C7                 db    ? ;
.bss:000000000020C2C8                 db    ? ;
.bss:000000000020C2C9                 db    ? ;
.bss:000000000020C2CA                 db    ? ;
.bss:000000000020C2CB                 db    ? ;
.bss:000000000020C2CC                 db    ? ;
.bss:000000000020C2CD                 db    ? ;
.bss:000000000020C2CE                 db    ? ;
.bss:000000000020C2CF                 db    ? ;
.bss:000000000020C2D0                 db    ? ;
.bss:000000000020C2D1                 db    ? ;
.bss:000000000020C2D2                 db    ? ;
.bss:000000000020C2D3                 db    ? ;
.bss:000000000020C2D4                 db    ? ;
.bss:000000000020C2D5                 db    ? ;
.bss:000000000020C2D6                 db    ? ;
.bss:000000000020C2D7                 db    ? ;
.bss:000000000020C2D8                 db    ? ;
.bss:000000000020C2D9                 db    ? ;
.bss:000000000020C2DA                 db    ? ;
.bss:000000000020C2DB                 db    ? ;
.bss:000000000020C2DC                 db    ? ;
.bss:000000000020C2DD                 db    ? ;
.bss:000000000020C2DE                 db    ? ;
.bss:000000000020C2DF                 db    ? ;
.bss:000000000020C2E0                 db    ? ;
.bss:000000000020C2E1                 db    ? ;
.bss:000000000020C2E2                 db    ? ;
.bss:000000000020C2E3                 db    ? ;
.bss:000000000020C2E4                 db    ? ;
.bss:000000000020C2E5                 db    ? ;
.bss:000000000020C2E6                 db    ? ;
.bss:000000000020C2E7                 db    ? ;
.bss:000000000020C2E8                 db    ? ;
.bss:000000000020C2E9                 db    ? ;
.bss:000000000020C2EA                 db    ? ;
.bss:000000000020C2EB                 db    ? ;
.bss:000000000020C2EC                 db    ? ;
.bss:000000000020C2ED                 db    ? ;
.bss:000000000020C2EE                 db    ? ;
.bss:000000000020C2EF                 db    ? ;
.bss:000000000020C2F0                 db    ? ;
.bss:000000000020C2F1                 db    ? ;
.bss:000000000020C2F2                 db    ? ;
.bss:000000000020C2F3                 db    ? ;
.bss:000000000020C2F4                 db    ? ;
.bss:000000000020C2F5                 db    ? ;
.bss:000000000020C2F6                 db    ? ;
.bss:000000000020C2F7                 db    ? ;
.bss:000000000020C2F8                 db    ? ;
.bss:000000000020C2F9                 db    ? ;
.bss:000000000020C2FA                 db    ? ;
.bss:000000000020C2FB                 db    ? ;
.bss:000000000020C2FC                 db    ? ;
.bss:000000000020C2FD                 db    ? ;
.bss:000000000020C2FE                 db    ? ;
.bss:000000000020C2FF                 db    ? ;
.bss:000000000020C300                 db    ? ;
.bss:000000000020C301                 db    ? ;
.bss:000000000020C302                 db    ? ;
.bss:000000000020C303                 db    ? ;
.bss:000000000020C304                 db    ? ;
.bss:000000000020C305                 db    ? ;
.bss:000000000020C306                 db    ? ;
.bss:000000000020C307                 db    ? ;
.bss:000000000020C308                 db    ? ;
.bss:000000000020C309                 db    ? ;
.bss:000000000020C30A                 db    ? ;
.bss:000000000020C30B                 db    ? ;
.bss:000000000020C30C                 db    ? ;
.bss:000000000020C30D                 db    ? ;
.bss:000000000020C30E                 db    ? ;
.bss:000000000020C30F                 db    ? ;
.bss:000000000020C310                 db    ? ;
.bss:000000000020C311                 db    ? ;
.bss:000000000020C312                 db    ? ;
.bss:000000000020C313                 db    ? ;
.bss:000000000020C314                 db    ? ;
.bss:000000000020C315                 db    ? ;
.bss:000000000020C316                 db    ? ;
.bss:000000000020C317                 db    ? ;
.bss:000000000020C318                 db    ? ;
.bss:000000000020C319                 db    ? ;
.bss:000000000020C31A                 db    ? ;
.bss:000000000020C31B                 db    ? ;
.bss:000000000020C31C                 db    ? ;
.bss:000000000020C31D                 db    ? ;
.bss:000000000020C31E                 db    ? ;
.bss:000000000020C31F                 db    ? ;
.bss:000000000020C320                 db    ? ;
.bss:000000000020C321                 db    ? ;
.bss:000000000020C322                 db    ? ;
.bss:000000000020C323                 db    ? ;
.bss:000000000020C324                 db    ? ;
.bss:000000000020C325                 db    ? ;
.bss:000000000020C326                 db    ? ;
.bss:000000000020C327                 db    ? ;
.bss:000000000020C328                 db    ? ;
.bss:000000000020C329                 db    ? ;
.bss:000000000020C32A                 db    ? ;
.bss:000000000020C32B                 db    ? ;
.bss:000000000020C32C                 db    ? ;
.bss:000000000020C32D                 db    ? ;
.bss:000000000020C32E                 db    ? ;
.bss:000000000020C32F                 db    ? ;
.bss:000000000020C330                 db    ? ;
.bss:000000000020C331                 db    ? ;
.bss:000000000020C332                 db    ? ;
.bss:000000000020C333                 db    ? ;
.bss:000000000020C334                 db    ? ;
.bss:000000000020C335                 db    ? ;
.bss:000000000020C336                 db    ? ;
.bss:000000000020C337                 db    ? ;
.bss:000000000020C338                 db    ? ;
.bss:000000000020C339                 db    ? ;
.bss:000000000020C33A                 db    ? ;
.bss:000000000020C33B                 db    ? ;
.bss:000000000020C33C                 db    ? ;
.bss:000000000020C33D                 db    ? ;
.bss:000000000020C33E                 db    ? ;
.bss:000000000020C33F                 db    ? ;
.bss:000000000020C340                 db    ? ;
.bss:000000000020C341                 db    ? ;
.bss:000000000020C342                 db    ? ;
.bss:000000000020C343                 db    ? ;
.bss:000000000020C344                 db    ? ;
.bss:000000000020C345                 db    ? ;
.bss:000000000020C346                 db    ? ;
.bss:000000000020C347                 db    ? ;
.bss:000000000020C348                 db    ? ;
.bss:000000000020C349                 db    ? ;
.bss:000000000020C34A                 db    ? ;
.bss:000000000020C34B                 db    ? ;
.bss:000000000020C34C                 db    ? ;
.bss:000000000020C34D                 db    ? ;
.bss:000000000020C34E                 db    ? ;
.bss:000000000020C34F                 db    ? ;
.bss:000000000020C350                 db    ? ;
.bss:000000000020C351                 db    ? ;
.bss:000000000020C352                 db    ? ;
.bss:000000000020C353                 db    ? ;
.bss:000000000020C354                 db    ? ;
.bss:000000000020C355                 db    ? ;
.bss:000000000020C356                 db    ? ;
.bss:000000000020C357                 db    ? ;
.bss:000000000020C358                 db    ? ;
.bss:000000000020C359                 db    ? ;
.bss:000000000020C35A                 db    ? ;
.bss:000000000020C35B                 db    ? ;
.bss:000000000020C35C                 db    ? ;
.bss:000000000020C35D                 db    ? ;
.bss:000000000020C35E                 db    ? ;
.bss:000000000020C35F                 db    ? ;
.bss:000000000020C360                 db    ? ;
.bss:000000000020C361                 db    ? ;
.bss:000000000020C362                 db    ? ;
.bss:000000000020C363                 db    ? ;
.bss:000000000020C364                 db    ? ;
.bss:000000000020C365                 db    ? ;
.bss:000000000020C366                 db    ? ;
.bss:000000000020C367                 db    ? ;
.bss:000000000020C368                 db    ? ;
.bss:000000000020C369                 db    ? ;
.bss:000000000020C36A                 db    ? ;
.bss:000000000020C36B                 db    ? ;
.bss:000000000020C36C                 db    ? ;
.bss:000000000020C36D                 db    ? ;
.bss:000000000020C36E                 db    ? ;
.bss:000000000020C36F                 db    ? ;
.bss:000000000020C370                 db    ? ;
.bss:000000000020C371                 db    ? ;
.bss:000000000020C372                 db    ? ;
.bss:000000000020C373                 db    ? ;
.bss:000000000020C374                 db    ? ;
.bss:000000000020C375                 db    ? ;
.bss:000000000020C376                 db    ? ;
.bss:000000000020C377                 db    ? ;
.bss:000000000020C378                 db    ? ;
.bss:000000000020C379                 db    ? ;
.bss:000000000020C37A                 db    ? ;
.bss:000000000020C37B                 db    ? ;
.bss:000000000020C37C                 db    ? ;
.bss:000000000020C37D                 db    ? ;
.bss:000000000020C37E                 db    ? ;
.bss:000000000020C37F                 db    ? ;
.bss:000000000020C380                 db    ? ;
.bss:000000000020C381                 db    ? ;
.bss:000000000020C382                 db    ? ;
.bss:000000000020C383                 db    ? ;
.bss:000000000020C384                 db    ? ;
.bss:000000000020C385                 db    ? ;
.bss:000000000020C386                 db    ? ;
.bss:000000000020C387                 db    ? ;
.bss:000000000020C388                 db    ? ;
.bss:000000000020C389                 db    ? ;
.bss:000000000020C38A                 db    ? ;
.bss:000000000020C38B                 db    ? ;
.bss:000000000020C38C                 db    ? ;
.bss:000000000020C38D                 db    ? ;
.bss:000000000020C38E                 db    ? ;
.bss:000000000020C38F                 db    ? ;
.bss:000000000020C390                 db    ? ;
.bss:000000000020C391                 db    ? ;
.bss:000000000020C392                 db    ? ;
.bss:000000000020C393                 db    ? ;
.bss:000000000020C394                 db    ? ;
.bss:000000000020C395                 db    ? ;
.bss:000000000020C396                 db    ? ;
.bss:000000000020C397                 db    ? ;
.bss:000000000020C398                 db    ? ;
.bss:000000000020C399                 db    ? ;
.bss:000000000020C39A                 db    ? ;
.bss:000000000020C39B                 db    ? ;
.bss:000000000020C39C                 db    ? ;
.bss:000000000020C39D                 db    ? ;
.bss:000000000020C39E                 db    ? ;
.bss:000000000020C39F                 db    ? ;
.bss:000000000020C3A0                 db    ? ;
.bss:000000000020C3A1                 db    ? ;
.bss:000000000020C3A2                 db    ? ;
.bss:000000000020C3A3                 db    ? ;
.bss:000000000020C3A4                 db    ? ;
.bss:000000000020C3A5                 db    ? ;
.bss:000000000020C3A6                 db    ? ;
.bss:000000000020C3A7                 db    ? ;
.bss:000000000020C3A8                 db    ? ;
.bss:000000000020C3A9                 db    ? ;
.bss:000000000020C3AA                 db    ? ;
.bss:000000000020C3AB                 db    ? ;
.bss:000000000020C3AC                 db    ? ;
.bss:000000000020C3AD                 db    ? ;
.bss:000000000020C3AE                 db    ? ;
.bss:000000000020C3AF                 db    ? ;
.bss:000000000020C3B0                 db    ? ;
.bss:000000000020C3B1                 db    ? ;
.bss:000000000020C3B2                 db    ? ;
.bss:000000000020C3B3                 db    ? ;
.bss:000000000020C3B4                 db    ? ;
.bss:000000000020C3B5                 db    ? ;
.bss:000000000020C3B6                 db    ? ;
.bss:000000000020C3B7                 db    ? ;
.bss:000000000020C3B8                 db    ? ;
.bss:000000000020C3B9                 db    ? ;
.bss:000000000020C3BA                 db    ? ;
.bss:000000000020C3BB                 db    ? ;
.bss:000000000020C3BC                 db    ? ;
.bss:000000000020C3BD                 db    ? ;
.bss:000000000020C3BE                 db    ? ;
.bss:000000000020C3BF                 db    ? ;
.bss:000000000020C3C0                 db    ? ;
.bss:000000000020C3C1                 db    ? ;
.bss:000000000020C3C2                 db    ? ;
.bss:000000000020C3C3                 db    ? ;
.bss:000000000020C3C4                 db    ? ;
.bss:000000000020C3C5                 db    ? ;
.bss:000000000020C3C6                 db    ? ;
.bss:000000000020C3C7                 db    ? ;
.bss:000000000020C3C8                 db    ? ;
.bss:000000000020C3C9                 db    ? ;
.bss:000000000020C3CA                 db    ? ;
.bss:000000000020C3CB                 db    ? ;
.bss:000000000020C3CC                 db    ? ;
.bss:000000000020C3CD                 db    ? ;
.bss:000000000020C3CE                 db    ? ;
.bss:000000000020C3CF                 db    ? ;
.bss:000000000020C3D0                 db    ? ;
.bss:000000000020C3D1                 db    ? ;
.bss:000000000020C3D2                 db    ? ;
.bss:000000000020C3D3                 db    ? ;
.bss:000000000020C3D4                 db    ? ;
.bss:000000000020C3D5                 db    ? ;
.bss:000000000020C3D6                 db    ? ;
.bss:000000000020C3D7                 db    ? ;
.bss:000000000020C3D8                 db    ? ;
.bss:000000000020C3D9                 db    ? ;
.bss:000000000020C3DA                 db    ? ;
.bss:000000000020C3DB                 db    ? ;
.bss:000000000020C3DC                 db    ? ;
.bss:000000000020C3DD                 db    ? ;
.bss:000000000020C3DE                 db    ? ;
.bss:000000000020C3DF                 db    ? ;
.bss:000000000020C3E0                 db    ? ;
.bss:000000000020C3E1                 db    ? ;
.bss:000000000020C3E2                 db    ? ;
.bss:000000000020C3E3                 db    ? ;
.bss:000000000020C3E4                 db    ? ;
.bss:000000000020C3E5                 db    ? ;
.bss:000000000020C3E6                 db    ? ;
.bss:000000000020C3E7                 db    ? ;
.bss:000000000020C3E8                 db    ? ;
.bss:000000000020C3E9                 db    ? ;
.bss:000000000020C3EA                 db    ? ;
.bss:000000000020C3EB                 db    ? ;
.bss:000000000020C3EC                 db    ? ;
.bss:000000000020C3ED                 db    ? ;
.bss:000000000020C3EE                 db    ? ;
.bss:000000000020C3EF                 db    ? ;
.bss:000000000020C3F0                 db    ? ;
.bss:000000000020C3F1                 db    ? ;
.bss:000000000020C3F2                 db    ? ;
.bss:000000000020C3F3                 db    ? ;
.bss:000000000020C3F4                 db    ? ;
.bss:000000000020C3F5                 db    ? ;
.bss:000000000020C3F6                 db    ? ;
.bss:000000000020C3F7                 db    ? ;
.bss:000000000020C3F8                 db    ? ;
.bss:000000000020C3F9                 db    ? ;
.bss:000000000020C3FA                 db    ? ;
.bss:000000000020C3FB                 db    ? ;
.bss:000000000020C3FC                 db    ? ;
.bss:000000000020C3FD                 db    ? ;
.bss:000000000020C3FE                 db    ? ;
.bss:000000000020C3FF                 db    ? ;
.bss:000000000020C400                 db    ? ;
.bss:000000000020C401                 db    ? ;
.bss:000000000020C402                 db    ? ;
.bss:000000000020C403                 db    ? ;
.bss:000000000020C404                 db    ? ;
.bss:000000000020C405                 db    ? ;
.bss:000000000020C406                 db    ? ;
.bss:000000000020C407                 db    ? ;
.bss:000000000020C408                 db    ? ;
.bss:000000000020C409                 db    ? ;
.bss:000000000020C40A                 db    ? ;
.bss:000000000020C40B                 db    ? ;
.bss:000000000020C40C                 db    ? ;
.bss:000000000020C40D                 db    ? ;
.bss:000000000020C40E                 db    ? ;
.bss:000000000020C40F                 db    ? ;
.bss:000000000020C410                 db    ? ;
.bss:000000000020C411                 db    ? ;
.bss:000000000020C412                 db    ? ;
.bss:000000000020C413                 db    ? ;
.bss:000000000020C414                 db    ? ;
.bss:000000000020C415                 db    ? ;
.bss:000000000020C416                 db    ? ;
.bss:000000000020C417                 db    ? ;
.bss:000000000020C418                 db    ? ;
.bss:000000000020C419                 db    ? ;
.bss:000000000020C41A                 db    ? ;
.bss:000000000020C41B                 db    ? ;
.bss:000000000020C41C                 db    ? ;
.bss:000000000020C41D                 db    ? ;
.bss:000000000020C41E                 db    ? ;
.bss:000000000020C41F                 db    ? ;
.bss:000000000020C420                 db    ? ;
.bss:000000000020C421                 db    ? ;
.bss:000000000020C422                 db    ? ;
.bss:000000000020C423                 db    ? ;
.bss:000000000020C424                 db    ? ;
.bss:000000000020C425                 db    ? ;
.bss:000000000020C426                 db    ? ;
.bss:000000000020C427                 db    ? ;
.bss:000000000020C428                 db    ? ;
.bss:000000000020C429                 db    ? ;
.bss:000000000020C42A                 db    ? ;
.bss:000000000020C42B                 db    ? ;
.bss:000000000020C42C                 db    ? ;
.bss:000000000020C42D                 db    ? ;
.bss:000000000020C42E                 db    ? ;
.bss:000000000020C42F                 db    ? ;
.bss:000000000020C430                 db    ? ;
.bss:000000000020C431                 db    ? ;
.bss:000000000020C432                 db    ? ;
.bss:000000000020C433                 db    ? ;
.bss:000000000020C434                 db    ? ;
.bss:000000000020C435                 db    ? ;
.bss:000000000020C436                 db    ? ;
.bss:000000000020C437                 db    ? ;
.bss:000000000020C438                 db    ? ;
.bss:000000000020C439                 db    ? ;
.bss:000000000020C43A                 db    ? ;
.bss:000000000020C43B                 db    ? ;
.bss:000000000020C43C                 db    ? ;
.bss:000000000020C43D                 db    ? ;
.bss:000000000020C43E                 db    ? ;
.bss:000000000020C43F                 db    ? ;
.bss:000000000020C440                 db    ? ;
.bss:000000000020C441                 db    ? ;
.bss:000000000020C442                 db    ? ;
.bss:000000000020C443                 db    ? ;
.bss:000000000020C444                 db    ? ;
.bss:000000000020C445                 db    ? ;
.bss:000000000020C446                 db    ? ;
.bss:000000000020C447                 db    ? ;
.bss:000000000020C448                 db    ? ;
.bss:000000000020C449                 db    ? ;
.bss:000000000020C44A                 db    ? ;
.bss:000000000020C44B                 db    ? ;
.bss:000000000020C44C                 db    ? ;
.bss:000000000020C44D                 db    ? ;
.bss:000000000020C44E                 db    ? ;
.bss:000000000020C44F                 db    ? ;
.bss:000000000020C450                 db    ? ;
.bss:000000000020C451                 db    ? ;
.bss:000000000020C452                 db    ? ;
.bss:000000000020C453                 db    ? ;
.bss:000000000020C454                 db    ? ;
.bss:000000000020C455                 db    ? ;
.bss:000000000020C456                 db    ? ;
.bss:000000000020C457                 db    ? ;
.bss:000000000020C458                 db    ? ;
.bss:000000000020C459                 db    ? ;
.bss:000000000020C45A                 db    ? ;
.bss:000000000020C45B                 db    ? ;
.bss:000000000020C45C                 db    ? ;
.bss:000000000020C45D                 db    ? ;
.bss:000000000020C45E                 db    ? ;
.bss:000000000020C45F                 db    ? ;
.bss:000000000020C460                 db    ? ;
.bss:000000000020C461                 db    ? ;
.bss:000000000020C462                 db    ? ;
.bss:000000000020C463                 db    ? ;
.bss:000000000020C464                 db    ? ;
.bss:000000000020C465                 db    ? ;
.bss:000000000020C466                 db    ? ;
.bss:000000000020C467                 db    ? ;
.bss:000000000020C468                 db    ? ;
.bss:000000000020C469                 db    ? ;
.bss:000000000020C46A                 db    ? ;
.bss:000000000020C46B                 db    ? ;
.bss:000000000020C46C                 db    ? ;
.bss:000000000020C46D                 db    ? ;
.bss:000000000020C46E                 db    ? ;
.bss:000000000020C46F                 db    ? ;
.bss:000000000020C470                 db    ? ;
.bss:000000000020C471                 db    ? ;
.bss:000000000020C472                 db    ? ;
.bss:000000000020C473                 db    ? ;
.bss:000000000020C474                 db    ? ;
.bss:000000000020C475                 db    ? ;
.bss:000000000020C476                 db    ? ;
.bss:000000000020C477                 db    ? ;
.bss:000000000020C478                 db    ? ;
.bss:000000000020C479                 db    ? ;
.bss:000000000020C47A                 db    ? ;
.bss:000000000020C47B                 db    ? ;
.bss:000000000020C47C                 db    ? ;
.bss:000000000020C47D                 db    ? ;
.bss:000000000020C47E                 db    ? ;
.bss:000000000020C47F                 db    ? ;
.bss:000000000020C480                 db    ? ;
.bss:000000000020C481                 db    ? ;
.bss:000000000020C482                 db    ? ;
.bss:000000000020C483                 db    ? ;
.bss:000000000020C484                 db    ? ;
.bss:000000000020C485                 db    ? ;
.bss:000000000020C486                 db    ? ;
.bss:000000000020C487                 db    ? ;
.bss:000000000020C488                 db    ? ;
.bss:000000000020C489                 db    ? ;
.bss:000000000020C48A                 db    ? ;
.bss:000000000020C48B                 db    ? ;
.bss:000000000020C48C                 db    ? ;
.bss:000000000020C48D                 db    ? ;
.bss:000000000020C48E                 db    ? ;
.bss:000000000020C48F                 db    ? ;
.bss:000000000020C490                 db    ? ;
.bss:000000000020C491                 db    ? ;
.bss:000000000020C492                 db    ? ;
.bss:000000000020C493                 db    ? ;
.bss:000000000020C494                 db    ? ;
.bss:000000000020C495                 db    ? ;
.bss:000000000020C496                 db    ? ;
.bss:000000000020C497                 db    ? ;
.bss:000000000020C498                 db    ? ;
.bss:000000000020C499                 db    ? ;
.bss:000000000020C49A                 db    ? ;
.bss:000000000020C49B                 db    ? ;
.bss:000000000020C49C                 db    ? ;
.bss:000000000020C49D                 db    ? ;
.bss:000000000020C49E                 db    ? ;
.bss:000000000020C49F                 db    ? ;
.bss:000000000020C4A0                 db    ? ;
.bss:000000000020C4A1                 db    ? ;
.bss:000000000020C4A2                 db    ? ;
.bss:000000000020C4A3                 db    ? ;
.bss:000000000020C4A4                 db    ? ;
.bss:000000000020C4A5                 db    ? ;
.bss:000000000020C4A6                 db    ? ;
.bss:000000000020C4A7                 db    ? ;
.bss:000000000020C4A8                 db    ? ;
.bss:000000000020C4A9                 db    ? ;
.bss:000000000020C4AA                 db    ? ;
.bss:000000000020C4AB                 db    ? ;
.bss:000000000020C4AC                 db    ? ;
.bss:000000000020C4AD                 db    ? ;
.bss:000000000020C4AE                 db    ? ;
.bss:000000000020C4AF                 db    ? ;
.bss:000000000020C4B0                 db    ? ;
.bss:000000000020C4B1                 db    ? ;
.bss:000000000020C4B2                 db    ? ;
.bss:000000000020C4B3                 db    ? ;
.bss:000000000020C4B4                 db    ? ;
.bss:000000000020C4B5                 db    ? ;
.bss:000000000020C4B6                 db    ? ;
.bss:000000000020C4B7                 db    ? ;
.bss:000000000020C4B8                 db    ? ;
.bss:000000000020C4B9                 db    ? ;
.bss:000000000020C4BA                 db    ? ;
.bss:000000000020C4BB                 db    ? ;
.bss:000000000020C4BC                 db    ? ;
.bss:000000000020C4BD                 db    ? ;
.bss:000000000020C4BE                 db    ? ;
.bss:000000000020C4BF                 db    ? ;
.bss:000000000020C4C0                 db    ? ;
.bss:000000000020C4C1                 db    ? ;
.bss:000000000020C4C2                 db    ? ;
.bss:000000000020C4C3                 db    ? ;
.bss:000000000020C4C4                 db    ? ;
.bss:000000000020C4C5                 db    ? ;
.bss:000000000020C4C6                 db    ? ;
.bss:000000000020C4C7                 db    ? ;
.bss:000000000020C4C8                 db    ? ;
.bss:000000000020C4C9                 db    ? ;
.bss:000000000020C4CA                 db    ? ;
.bss:000000000020C4CB                 db    ? ;
.bss:000000000020C4CC                 db    ? ;
.bss:000000000020C4CD                 db    ? ;
.bss:000000000020C4CE                 db    ? ;
.bss:000000000020C4CF                 db    ? ;
.bss:000000000020C4D0                 db    ? ;
.bss:000000000020C4D1                 db    ? ;
.bss:000000000020C4D2                 db    ? ;
.bss:000000000020C4D3                 db    ? ;
.bss:000000000020C4D4                 db    ? ;
.bss:000000000020C4D5                 db    ? ;
.bss:000000000020C4D6                 db    ? ;
.bss:000000000020C4D7                 db    ? ;
.bss:000000000020C4D8                 db    ? ;
.bss:000000000020C4D9                 db    ? ;
.bss:000000000020C4DA                 db    ? ;
.bss:000000000020C4DB                 db    ? ;
.bss:000000000020C4DC                 db    ? ;
.bss:000000000020C4DD                 db    ? ;
.bss:000000000020C4DE                 db    ? ;
.bss:000000000020C4DF                 db    ? ;
.bss:000000000020C4E0                 db    ? ;
.bss:000000000020C4E1                 db    ? ;
.bss:000000000020C4E2                 db    ? ;
.bss:000000000020C4E3                 db    ? ;
.bss:000000000020C4E4                 db    ? ;
.bss:000000000020C4E5                 db    ? ;
.bss:000000000020C4E6                 db    ? ;
.bss:000000000020C4E7                 db    ? ;
.bss:000000000020C4E8                 db    ? ;
.bss:000000000020C4E9                 db    ? ;
.bss:000000000020C4EA                 db    ? ;
.bss:000000000020C4EB                 db    ? ;
.bss:000000000020C4EC                 db    ? ;
.bss:000000000020C4ED                 db    ? ;
.bss:000000000020C4EE                 db    ? ;
.bss:000000000020C4EF                 db    ? ;
.bss:000000000020C4F0                 db    ? ;
.bss:000000000020C4F1                 db    ? ;
.bss:000000000020C4F2                 db    ? ;
.bss:000000000020C4F3                 db    ? ;
.bss:000000000020C4F4                 db    ? ;
.bss:000000000020C4F5                 db    ? ;
.bss:000000000020C4F6                 db    ? ;
.bss:000000000020C4F7                 db    ? ;
.bss:000000000020C4F8                 db    ? ;
.bss:000000000020C4F9                 db    ? ;
.bss:000000000020C4FA                 db    ? ;
.bss:000000000020C4FB                 db    ? ;
.bss:000000000020C4FC                 db    ? ;
.bss:000000000020C4FD                 db    ? ;
.bss:000000000020C4FE                 db    ? ;
.bss:000000000020C4FF                 db    ? ;
.bss:000000000020C500                 db    ? ;
.bss:000000000020C501                 db    ? ;
.bss:000000000020C502                 db    ? ;
.bss:000000000020C503                 db    ? ;
.bss:000000000020C504                 db    ? ;
.bss:000000000020C505                 db    ? ;
.bss:000000000020C506                 db    ? ;
.bss:000000000020C507                 db    ? ;
.bss:000000000020C508                 db    ? ;
.bss:000000000020C509                 db    ? ;
.bss:000000000020C50A                 db    ? ;
.bss:000000000020C50B                 db    ? ;
.bss:000000000020C50C                 db    ? ;
.bss:000000000020C50D                 db    ? ;
.bss:000000000020C50E                 db    ? ;
.bss:000000000020C50F                 db    ? ;
.bss:000000000020C510                 db    ? ;
.bss:000000000020C511                 db    ? ;
.bss:000000000020C512                 db    ? ;
.bss:000000000020C513                 db    ? ;
.bss:000000000020C514                 db    ? ;
.bss:000000000020C515                 db    ? ;
.bss:000000000020C516                 db    ? ;
.bss:000000000020C517                 db    ? ;
.bss:000000000020C518                 db    ? ;
.bss:000000000020C519                 db    ? ;
.bss:000000000020C51A                 db    ? ;
.bss:000000000020C51B                 db    ? ;
.bss:000000000020C51C                 db    ? ;
.bss:000000000020C51D                 db    ? ;
.bss:000000000020C51E                 db    ? ;
.bss:000000000020C51F                 db    ? ;
.bss:000000000020C520                 db    ? ;
.bss:000000000020C521                 db    ? ;
.bss:000000000020C522                 db    ? ;
.bss:000000000020C523                 db    ? ;
.bss:000000000020C524                 db    ? ;
.bss:000000000020C525                 db    ? ;
.bss:000000000020C526                 db    ? ;
.bss:000000000020C527                 db    ? ;
.bss:000000000020C528                 db    ? ;
.bss:000000000020C529                 db    ? ;
.bss:000000000020C52A                 db    ? ;
.bss:000000000020C52B                 db    ? ;
.bss:000000000020C52C                 db    ? ;
.bss:000000000020C52D                 db    ? ;
.bss:000000000020C52E                 db    ? ;
.bss:000000000020C52F                 db    ? ;
.bss:000000000020C530                 db    ? ;
.bss:000000000020C531                 db    ? ;
.bss:000000000020C532                 db    ? ;
.bss:000000000020C533                 db    ? ;
.bss:000000000020C534                 db    ? ;
.bss:000000000020C535                 db    ? ;
.bss:000000000020C536                 db    ? ;
.bss:000000000020C537                 db    ? ;
.bss:000000000020C538                 db    ? ;
.bss:000000000020C539                 db    ? ;
.bss:000000000020C53A                 db    ? ;
.bss:000000000020C53B                 db    ? ;
.bss:000000000020C53C                 db    ? ;
.bss:000000000020C53D                 db    ? ;
.bss:000000000020C53E                 db    ? ;
.bss:000000000020C53F                 db    ? ;
.bss:000000000020C540                 db    ? ;
.bss:000000000020C541                 db    ? ;
.bss:000000000020C542                 db    ? ;
.bss:000000000020C543                 db    ? ;
.bss:000000000020C544                 db    ? ;
.bss:000000000020C545                 db    ? ;
.bss:000000000020C546                 db    ? ;
.bss:000000000020C547                 db    ? ;
.bss:000000000020C548                 db    ? ;
.bss:000000000020C549                 db    ? ;
.bss:000000000020C54A                 db    ? ;
.bss:000000000020C54B                 db    ? ;
.bss:000000000020C54C                 db    ? ;
.bss:000000000020C54D                 db    ? ;
.bss:000000000020C54E                 db    ? ;
.bss:000000000020C54F                 db    ? ;
.bss:000000000020C550                 db    ? ;
.bss:000000000020C551                 db    ? ;
.bss:000000000020C552                 db    ? ;
.bss:000000000020C553                 db    ? ;
.bss:000000000020C554                 db    ? ;
.bss:000000000020C555                 db    ? ;
.bss:000000000020C556                 db    ? ;
.bss:000000000020C557                 db    ? ;
.bss:000000000020C558                 db    ? ;
.bss:000000000020C559                 db    ? ;
.bss:000000000020C55A                 db    ? ;
.bss:000000000020C55B                 db    ? ;
.bss:000000000020C55C                 db    ? ;
.bss:000000000020C55D                 db    ? ;
.bss:000000000020C55E                 db    ? ;
.bss:000000000020C55F                 db    ? ;
.bss:000000000020C560                 db    ? ;
.bss:000000000020C561                 db    ? ;
.bss:000000000020C562                 db    ? ;
.bss:000000000020C563                 db    ? ;
.bss:000000000020C564                 db    ? ;
.bss:000000000020C565                 db    ? ;
.bss:000000000020C566                 db    ? ;
.bss:000000000020C567                 db    ? ;
.bss:000000000020C568                 db    ? ;
.bss:000000000020C569                 db    ? ;
.bss:000000000020C56A                 db    ? ;
.bss:000000000020C56B                 db    ? ;
.bss:000000000020C56C                 db    ? ;
.bss:000000000020C56D                 db    ? ;
.bss:000000000020C56E                 db    ? ;
.bss:000000000020C56F                 db    ? ;
.bss:000000000020C570                 db    ? ;
.bss:000000000020C571                 db    ? ;
.bss:000000000020C572                 db    ? ;
.bss:000000000020C573                 db    ? ;
.bss:000000000020C574                 db    ? ;
.bss:000000000020C575                 db    ? ;
.bss:000000000020C576                 db    ? ;
.bss:000000000020C577                 db    ? ;
.bss:000000000020C578                 db    ? ;
.bss:000000000020C579                 db    ? ;
.bss:000000000020C57A                 db    ? ;
.bss:000000000020C57B                 db    ? ;
.bss:000000000020C57C                 db    ? ;
.bss:000000000020C57D                 db    ? ;
.bss:000000000020C57E                 db    ? ;
.bss:000000000020C57F                 db    ? ;
.bss:000000000020C580                 db    ? ;
.bss:000000000020C581                 db    ? ;
.bss:000000000020C582                 db    ? ;
.bss:000000000020C583                 db    ? ;
.bss:000000000020C584                 db    ? ;
.bss:000000000020C585                 db    ? ;
.bss:000000000020C586                 db    ? ;
.bss:000000000020C587                 db    ? ;
.bss:000000000020C588                 db    ? ;
.bss:000000000020C589                 db    ? ;
.bss:000000000020C58A                 db    ? ;
.bss:000000000020C58B                 db    ? ;
.bss:000000000020C58C                 db    ? ;
.bss:000000000020C58D                 db    ? ;
.bss:000000000020C58E                 db    ? ;
.bss:000000000020C58F                 db    ? ;
.bss:000000000020C590                 db    ? ;
.bss:000000000020C591                 db    ? ;
.bss:000000000020C592                 db    ? ;
.bss:000000000020C593                 db    ? ;
.bss:000000000020C594                 db    ? ;
.bss:000000000020C595                 db    ? ;
.bss:000000000020C596                 db    ? ;
.bss:000000000020C597                 db    ? ;
.bss:000000000020C598                 db    ? ;
.bss:000000000020C599                 db    ? ;
.bss:000000000020C59A                 db    ? ;
.bss:000000000020C59B                 db    ? ;
.bss:000000000020C59C                 db    ? ;
.bss:000000000020C59D                 db    ? ;
.bss:000000000020C59E                 db    ? ;
.bss:000000000020C59F                 db    ? ;
.bss:000000000020C5A0                 db    ? ;
.bss:000000000020C5A1                 db    ? ;
.bss:000000000020C5A2                 db    ? ;
.bss:000000000020C5A3                 db    ? ;
.bss:000000000020C5A4                 db    ? ;
.bss:000000000020C5A5                 db    ? ;
.bss:000000000020C5A6                 db    ? ;
.bss:000000000020C5A7                 db    ? ;
.bss:000000000020C5A8                 db    ? ;
.bss:000000000020C5A9                 db    ? ;
.bss:000000000020C5AA                 db    ? ;
.bss:000000000020C5AB                 db    ? ;
.bss:000000000020C5AC                 db    ? ;
.bss:000000000020C5AD                 db    ? ;
.bss:000000000020C5AE                 db    ? ;
.bss:000000000020C5AF                 db    ? ;
.bss:000000000020C5B0                 db    ? ;
.bss:000000000020C5B1                 db    ? ;
.bss:000000000020C5B2                 db    ? ;
.bss:000000000020C5B3                 db    ? ;
.bss:000000000020C5B4                 db    ? ;
.bss:000000000020C5B5                 db    ? ;
.bss:000000000020C5B6                 db    ? ;
.bss:000000000020C5B7                 db    ? ;
.bss:000000000020C5B8                 db    ? ;
.bss:000000000020C5B9                 db    ? ;
.bss:000000000020C5BA                 db    ? ;
.bss:000000000020C5BB                 db    ? ;
.bss:000000000020C5BC                 db    ? ;
.bss:000000000020C5BD                 db    ? ;
.bss:000000000020C5BE                 db    ? ;
.bss:000000000020C5BF                 db    ? ;
.bss:000000000020C5C0                 db    ? ;
.bss:000000000020C5C1                 db    ? ;
.bss:000000000020C5C2                 db    ? ;
.bss:000000000020C5C3                 db    ? ;
.bss:000000000020C5C4                 db    ? ;
.bss:000000000020C5C5                 db    ? ;
.bss:000000000020C5C6                 db    ? ;
.bss:000000000020C5C7                 db    ? ;
.bss:000000000020C5C8                 db    ? ;
.bss:000000000020C5C9                 db    ? ;
.bss:000000000020C5CA                 db    ? ;
.bss:000000000020C5CB                 db    ? ;
.bss:000000000020C5CC                 db    ? ;
.bss:000000000020C5CD                 db    ? ;
.bss:000000000020C5CE                 db    ? ;
.bss:000000000020C5CF                 db    ? ;
.bss:000000000020C5D0                 db    ? ;
.bss:000000000020C5D1                 db    ? ;
.bss:000000000020C5D2                 db    ? ;
.bss:000000000020C5D3                 db    ? ;
.bss:000000000020C5D4                 db    ? ;
.bss:000000000020C5D5                 db    ? ;
.bss:000000000020C5D6                 db    ? ;
.bss:000000000020C5D7                 db    ? ;
.bss:000000000020C5D8                 db    ? ;
.bss:000000000020C5D9                 db    ? ;
.bss:000000000020C5DA                 db    ? ;
.bss:000000000020C5DB                 db    ? ;
.bss:000000000020C5DC                 db    ? ;
.bss:000000000020C5DD                 db    ? ;
.bss:000000000020C5DE                 db    ? ;
.bss:000000000020C5DF                 db    ? ;
.bss:000000000020C5E0                 db    ? ;
.bss:000000000020C5E1                 db    ? ;
.bss:000000000020C5E2                 db    ? ;
.bss:000000000020C5E3                 db    ? ;
.bss:000000000020C5E4                 db    ? ;
.bss:000000000020C5E5                 db    ? ;
.bss:000000000020C5E6                 db    ? ;
.bss:000000000020C5E7                 db    ? ;
.bss:000000000020C5E8                 db    ? ;
.bss:000000000020C5E9                 db    ? ;
.bss:000000000020C5EA                 db    ? ;
.bss:000000000020C5EB                 db    ? ;
.bss:000000000020C5EC                 db    ? ;
.bss:000000000020C5ED                 db    ? ;
.bss:000000000020C5EE                 db    ? ;
.bss:000000000020C5EF                 db    ? ;
.bss:000000000020C5F0                 db    ? ;
.bss:000000000020C5F1                 db    ? ;
.bss:000000000020C5F2                 db    ? ;
.bss:000000000020C5F3                 db    ? ;
.bss:000000000020C5F4                 db    ? ;
.bss:000000000020C5F5                 db    ? ;
.bss:000000000020C5F6                 db    ? ;
.bss:000000000020C5F7                 db    ? ;
.bss:000000000020C5F8                 db    ? ;
.bss:000000000020C5F9                 db    ? ;
.bss:000000000020C5FA                 db    ? ;
.bss:000000000020C5FB                 db    ? ;
.bss:000000000020C5FC                 db    ? ;
.bss:000000000020C5FD                 db    ? ;
.bss:000000000020C5FE                 db    ? ;
.bss:000000000020C5FF                 db    ? ;
.bss:000000000020C600                 db    ? ;
.bss:000000000020C601                 db    ? ;
.bss:000000000020C602                 db    ? ;
.bss:000000000020C603                 db    ? ;
.bss:000000000020C604                 db    ? ;
.bss:000000000020C605                 db    ? ;
.bss:000000000020C606                 db    ? ;
.bss:000000000020C607                 db    ? ;
.bss:000000000020C608                 db    ? ;
.bss:000000000020C609                 db    ? ;
.bss:000000000020C60A                 db    ? ;
.bss:000000000020C60B                 db    ? ;
.bss:000000000020C60C                 db    ? ;
.bss:000000000020C60D                 db    ? ;
.bss:000000000020C60E                 db    ? ;
.bss:000000000020C60F                 db    ? ;
.bss:000000000020C610                 db    ? ;
.bss:000000000020C611                 db    ? ;
.bss:000000000020C612                 db    ? ;
.bss:000000000020C613                 db    ? ;
.bss:000000000020C614                 db    ? ;
.bss:000000000020C615                 db    ? ;
.bss:000000000020C616                 db    ? ;
.bss:000000000020C617                 db    ? ;
.bss:000000000020C618                 db    ? ;
.bss:000000000020C619                 db    ? ;
.bss:000000000020C61A                 db    ? ;
.bss:000000000020C61B                 db    ? ;
.bss:000000000020C61C                 db    ? ;
.bss:000000000020C61D                 db    ? ;
.bss:000000000020C61E                 db    ? ;
.bss:000000000020C61F                 db    ? ;
.bss:000000000020C620                 db    ? ;
.bss:000000000020C621                 db    ? ;
.bss:000000000020C622                 db    ? ;
.bss:000000000020C623                 db    ? ;
.bss:000000000020C624                 db    ? ;
.bss:000000000020C625                 db    ? ;
.bss:000000000020C626                 db    ? ;
.bss:000000000020C627                 db    ? ;
.bss:000000000020C628                 db    ? ;
.bss:000000000020C629                 db    ? ;
.bss:000000000020C62A                 db    ? ;
.bss:000000000020C62B                 db    ? ;
.bss:000000000020C62C                 db    ? ;
.bss:000000000020C62D                 db    ? ;
.bss:000000000020C62E                 db    ? ;
.bss:000000000020C62F                 db    ? ;
.bss:000000000020C630                 db    ? ;
.bss:000000000020C631                 db    ? ;
.bss:000000000020C632                 db    ? ;
.bss:000000000020C633                 db    ? ;
.bss:000000000020C634                 db    ? ;
.bss:000000000020C635                 db    ? ;
.bss:000000000020C636                 db    ? ;
.bss:000000000020C637                 db    ? ;
.bss:000000000020C638                 db    ? ;
.bss:000000000020C639                 db    ? ;
.bss:000000000020C63A                 db    ? ;
.bss:000000000020C63B                 db    ? ;
.bss:000000000020C63C                 db    ? ;
.bss:000000000020C63D                 db    ? ;
.bss:000000000020C63E                 db    ? ;
.bss:000000000020C63F                 db    ? ;
.bss:000000000020C640                 db    ? ;
.bss:000000000020C641                 db    ? ;
.bss:000000000020C642                 db    ? ;
.bss:000000000020C643                 db    ? ;
.bss:000000000020C644                 db    ? ;
.bss:000000000020C645                 db    ? ;
.bss:000000000020C646                 db    ? ;
.bss:000000000020C647                 db    ? ;
.bss:000000000020C648                 db    ? ;
.bss:000000000020C649                 db    ? ;
.bss:000000000020C64A                 db    ? ;
.bss:000000000020C64B                 db    ? ;
.bss:000000000020C64C                 db    ? ;
.bss:000000000020C64D                 db    ? ;
.bss:000000000020C64E                 db    ? ;
.bss:000000000020C64F                 db    ? ;
.bss:000000000020C650                 db    ? ;
.bss:000000000020C651                 db    ? ;
.bss:000000000020C652                 db    ? ;
.bss:000000000020C653                 db    ? ;
.bss:000000000020C654                 db    ? ;
.bss:000000000020C655                 db    ? ;
.bss:000000000020C656                 db    ? ;
.bss:000000000020C657                 db    ? ;
.bss:000000000020C658                 db    ? ;
.bss:000000000020C659                 db    ? ;
.bss:000000000020C65A                 db    ? ;
.bss:000000000020C65B                 db    ? ;
.bss:000000000020C65C                 db    ? ;
.bss:000000000020C65D                 db    ? ;
.bss:000000000020C65E                 db    ? ;
.bss:000000000020C65F                 db    ? ;
.bss:000000000020C660                 db    ? ;
.bss:000000000020C661                 db    ? ;
.bss:000000000020C662                 db    ? ;
.bss:000000000020C663                 db    ? ;
.bss:000000000020C664                 db    ? ;
.bss:000000000020C665                 db    ? ;
.bss:000000000020C666                 db    ? ;
.bss:000000000020C667                 db    ? ;
.bss:000000000020C668                 db    ? ;
.bss:000000000020C669                 db    ? ;
.bss:000000000020C66A                 db    ? ;
.bss:000000000020C66B                 db    ? ;
.bss:000000000020C66C                 db    ? ;
.bss:000000000020C66D                 db    ? ;
.bss:000000000020C66E                 db    ? ;
.bss:000000000020C66F                 db    ? ;
.bss:000000000020C670                 db    ? ;
.bss:000000000020C671                 db    ? ;
.bss:000000000020C672                 db    ? ;
.bss:000000000020C673                 db    ? ;
.bss:000000000020C674                 db    ? ;
.bss:000000000020C675                 db    ? ;
.bss:000000000020C676                 db    ? ;
.bss:000000000020C677                 db    ? ;
.bss:000000000020C678                 db    ? ;
.bss:000000000020C679                 db    ? ;
.bss:000000000020C67A                 db    ? ;
.bss:000000000020C67B                 db    ? ;
.bss:000000000020C67C                 db    ? ;
.bss:000000000020C67D                 db    ? ;
.bss:000000000020C67E                 db    ? ;
.bss:000000000020C67F                 db    ? ;
.bss:000000000020C680                 db    ? ;
.bss:000000000020C681                 db    ? ;
.bss:000000000020C682                 db    ? ;
.bss:000000000020C683                 db    ? ;
.bss:000000000020C684                 db    ? ;
.bss:000000000020C685                 db    ? ;
.bss:000000000020C686                 db    ? ;
.bss:000000000020C687                 db    ? ;
.bss:000000000020C688                 db    ? ;
.bss:000000000020C689                 db    ? ;
.bss:000000000020C68A                 db    ? ;
.bss:000000000020C68B                 db    ? ;
.bss:000000000020C68C                 db    ? ;
.bss:000000000020C68D                 db    ? ;
.bss:000000000020C68E                 db    ? ;
.bss:000000000020C68F                 db    ? ;
.bss:000000000020C690                 db    ? ;
.bss:000000000020C691                 db    ? ;
.bss:000000000020C692                 db    ? ;
.bss:000000000020C693                 db    ? ;
.bss:000000000020C694                 db    ? ;
.bss:000000000020C695                 db    ? ;
.bss:000000000020C696                 db    ? ;
.bss:000000000020C697                 db    ? ;
.bss:000000000020C698                 db    ? ;
.bss:000000000020C699                 db    ? ;
.bss:000000000020C69A                 db    ? ;
.bss:000000000020C69B                 db    ? ;
.bss:000000000020C69C                 db    ? ;
.bss:000000000020C69D                 db    ? ;
.bss:000000000020C69E                 db    ? ;
.bss:000000000020C69F                 db    ? ;
.bss:000000000020C6A0                 db    ? ;
.bss:000000000020C6A1                 db    ? ;
.bss:000000000020C6A2                 db    ? ;
.bss:000000000020C6A3                 db    ? ;
.bss:000000000020C6A4                 db    ? ;
.bss:000000000020C6A5                 db    ? ;
.bss:000000000020C6A6                 db    ? ;
.bss:000000000020C6A7                 db    ? ;
.bss:000000000020C6A8                 db    ? ;
.bss:000000000020C6A9                 db    ? ;
.bss:000000000020C6AA                 db    ? ;
.bss:000000000020C6AB                 db    ? ;
.bss:000000000020C6AC                 db    ? ;
.bss:000000000020C6AD                 db    ? ;
.bss:000000000020C6AE                 db    ? ;
.bss:000000000020C6AF                 db    ? ;
.bss:000000000020C6B0                 db    ? ;
.bss:000000000020C6B1                 db    ? ;
.bss:000000000020C6B2                 db    ? ;
.bss:000000000020C6B3                 db    ? ;
.bss:000000000020C6B4                 db    ? ;
.bss:000000000020C6B5                 db    ? ;
.bss:000000000020C6B6                 db    ? ;
.bss:000000000020C6B7                 db    ? ;
.bss:000000000020C6B8                 db    ? ;
.bss:000000000020C6B9                 db    ? ;
.bss:000000000020C6BA                 db    ? ;
.bss:000000000020C6BB                 db    ? ;
.bss:000000000020C6BC                 db    ? ;
.bss:000000000020C6BD                 db    ? ;
.bss:000000000020C6BE                 db    ? ;
.bss:000000000020C6BF                 db    ? ;
.bss:000000000020C6C0                 db    ? ;
.bss:000000000020C6C1                 db    ? ;
.bss:000000000020C6C2                 db    ? ;
.bss:000000000020C6C3                 db    ? ;
.bss:000000000020C6C4                 db    ? ;
.bss:000000000020C6C5                 db    ? ;
.bss:000000000020C6C6                 db    ? ;
.bss:000000000020C6C7                 db    ? ;
.bss:000000000020C6C8                 db    ? ;
.bss:000000000020C6C9                 db    ? ;
.bss:000000000020C6CA                 db    ? ;
.bss:000000000020C6CB                 db    ? ;
.bss:000000000020C6CC                 db    ? ;
.bss:000000000020C6CD                 db    ? ;
.bss:000000000020C6CE                 db    ? ;
.bss:000000000020C6CF                 db    ? ;
.bss:000000000020C6D0                 db    ? ;
.bss:000000000020C6D1                 db    ? ;
.bss:000000000020C6D2                 db    ? ;
.bss:000000000020C6D3                 db    ? ;
.bss:000000000020C6D4                 db    ? ;
.bss:000000000020C6D5                 db    ? ;
.bss:000000000020C6D6                 db    ? ;
.bss:000000000020C6D7                 db    ? ;
.bss:000000000020C6D8                 db    ? ;
.bss:000000000020C6D9                 db    ? ;
.bss:000000000020C6DA                 db    ? ;
.bss:000000000020C6DB                 db    ? ;
.bss:000000000020C6DC                 db    ? ;
.bss:000000000020C6DD                 db    ? ;
.bss:000000000020C6DE                 db    ? ;
.bss:000000000020C6DF                 db    ? ;
.bss:000000000020C6E0                 db    ? ;
.bss:000000000020C6E1                 db    ? ;
.bss:000000000020C6E2                 db    ? ;
.bss:000000000020C6E3                 db    ? ;
.bss:000000000020C6E4                 db    ? ;
.bss:000000000020C6E5                 db    ? ;
.bss:000000000020C6E6                 db    ? ;
.bss:000000000020C6E7                 db    ? ;
.bss:000000000020C6E8                 db    ? ;
.bss:000000000020C6E9                 db    ? ;
.bss:000000000020C6EA                 db    ? ;
.bss:000000000020C6EB                 db    ? ;
.bss:000000000020C6EC                 db    ? ;
.bss:000000000020C6ED                 db    ? ;
.bss:000000000020C6EE                 db    ? ;
.bss:000000000020C6EF                 db    ? ;
.bss:000000000020C6F0                 db    ? ;
.bss:000000000020C6F1                 db    ? ;
.bss:000000000020C6F2                 db    ? ;
.bss:000000000020C6F3                 db    ? ;
.bss:000000000020C6F4                 db    ? ;
.bss:000000000020C6F5                 db    ? ;
.bss:000000000020C6F6                 db    ? ;
.bss:000000000020C6F7                 db    ? ;
.bss:000000000020C6F8                 db    ? ;
.bss:000000000020C6F9                 db    ? ;
.bss:000000000020C6FA                 db    ? ;
.bss:000000000020C6FB                 db    ? ;
.bss:000000000020C6FC                 db    ? ;
.bss:000000000020C6FD                 db    ? ;
.bss:000000000020C6FE                 db    ? ;
.bss:000000000020C6FF                 db    ? ;
.bss:000000000020C700                 db    ? ;
.bss:000000000020C701                 db    ? ;
.bss:000000000020C702                 db    ? ;
.bss:000000000020C703                 db    ? ;
.bss:000000000020C704                 db    ? ;
.bss:000000000020C705                 db    ? ;
.bss:000000000020C706                 db    ? ;
.bss:000000000020C707                 db    ? ;
.bss:000000000020C708                 db    ? ;
.bss:000000000020C709                 db    ? ;
.bss:000000000020C70A                 db    ? ;
.bss:000000000020C70B                 db    ? ;
.bss:000000000020C70C                 db    ? ;
.bss:000000000020C70D                 db    ? ;
.bss:000000000020C70E                 db    ? ;
.bss:000000000020C70F                 db    ? ;
.bss:000000000020C710                 db    ? ;
.bss:000000000020C711                 db    ? ;
.bss:000000000020C712                 db    ? ;
.bss:000000000020C713                 db    ? ;
.bss:000000000020C714                 db    ? ;
.bss:000000000020C715                 db    ? ;
.bss:000000000020C716                 db    ? ;
.bss:000000000020C717                 db    ? ;
.bss:000000000020C718                 db    ? ;
.bss:000000000020C719                 db    ? ;
.bss:000000000020C71A                 db    ? ;
.bss:000000000020C71B                 db    ? ;
.bss:000000000020C71C                 db    ? ;
.bss:000000000020C71D                 db    ? ;
.bss:000000000020C71E                 db    ? ;
.bss:000000000020C71F                 db    ? ;
.bss:000000000020C720                 db    ? ;
.bss:000000000020C721                 db    ? ;
.bss:000000000020C722                 db    ? ;
.bss:000000000020C723                 db    ? ;
.bss:000000000020C724                 db    ? ;
.bss:000000000020C725                 db    ? ;
.bss:000000000020C726                 db    ? ;
.bss:000000000020C727                 db    ? ;
.bss:000000000020C728                 db    ? ;
.bss:000000000020C729                 db    ? ;
.bss:000000000020C72A                 db    ? ;
.bss:000000000020C72B                 db    ? ;
.bss:000000000020C72C                 db    ? ;
.bss:000000000020C72D                 db    ? ;
.bss:000000000020C72E                 db    ? ;
.bss:000000000020C72F                 db    ? ;
.bss:000000000020C730                 db    ? ;
.bss:000000000020C731                 db    ? ;
.bss:000000000020C732                 db    ? ;
.bss:000000000020C733                 db    ? ;
.bss:000000000020C734                 db    ? ;
.bss:000000000020C735                 db    ? ;
.bss:000000000020C736                 db    ? ;
.bss:000000000020C737                 db    ? ;
.bss:000000000020C738                 db    ? ;
.bss:000000000020C739                 db    ? ;
.bss:000000000020C73A                 db    ? ;
.bss:000000000020C73B                 db    ? ;
.bss:000000000020C73C                 db    ? ;
.bss:000000000020C73D                 db    ? ;
.bss:000000000020C73E                 db    ? ;
.bss:000000000020C73F                 db    ? ;
.bss:000000000020C740                 db    ? ;
.bss:000000000020C741                 db    ? ;
.bss:000000000020C742                 db    ? ;
.bss:000000000020C743                 db    ? ;
.bss:000000000020C744                 db    ? ;
.bss:000000000020C745                 db    ? ;
.bss:000000000020C746                 db    ? ;
.bss:000000000020C747                 db    ? ;
.bss:000000000020C748                 db    ? ;
.bss:000000000020C749                 db    ? ;
.bss:000000000020C74A                 db    ? ;
.bss:000000000020C74B                 db    ? ;
.bss:000000000020C74C                 db    ? ;
.bss:000000000020C74D                 db    ? ;
.bss:000000000020C74E                 db    ? ;
.bss:000000000020C74F                 db    ? ;
.bss:000000000020C750                 db    ? ;
.bss:000000000020C751                 db    ? ;
.bss:000000000020C752                 db    ? ;
.bss:000000000020C753                 db    ? ;
.bss:000000000020C754                 db    ? ;
.bss:000000000020C755                 db    ? ;
.bss:000000000020C756                 db    ? ;
.bss:000000000020C757                 db    ? ;
.bss:000000000020C758                 db    ? ;
.bss:000000000020C759                 db    ? ;
.bss:000000000020C75A                 db    ? ;
.bss:000000000020C75B                 db    ? ;
.bss:000000000020C75C                 db    ? ;
.bss:000000000020C75D                 db    ? ;
.bss:000000000020C75E                 db    ? ;
.bss:000000000020C75F                 db    ? ;
.bss:000000000020C760                 db    ? ;
.bss:000000000020C761                 db    ? ;
.bss:000000000020C762                 db    ? ;
.bss:000000000020C763                 db    ? ;
.bss:000000000020C764                 db    ? ;
.bss:000000000020C765                 db    ? ;
.bss:000000000020C766                 db    ? ;
.bss:000000000020C767                 db    ? ;
.bss:000000000020C768                 db    ? ;
.bss:000000000020C769                 db    ? ;
.bss:000000000020C76A                 db    ? ;
.bss:000000000020C76B                 db    ? ;
.bss:000000000020C76C                 db    ? ;
.bss:000000000020C76D                 db    ? ;
.bss:000000000020C76E                 db    ? ;
.bss:000000000020C76F                 db    ? ;
.bss:000000000020C770                 db    ? ;
.bss:000000000020C771                 db    ? ;
.bss:000000000020C772                 db    ? ;
.bss:000000000020C773                 db    ? ;
.bss:000000000020C774                 db    ? ;
.bss:000000000020C775                 db    ? ;
.bss:000000000020C776                 db    ? ;
.bss:000000000020C777                 db    ? ;
.bss:000000000020C778                 db    ? ;
.bss:000000000020C779                 db    ? ;
.bss:000000000020C77A                 db    ? ;
.bss:000000000020C77B                 db    ? ;
.bss:000000000020C77C                 db    ? ;
.bss:000000000020C77D                 db    ? ;
.bss:000000000020C77E                 db    ? ;
.bss:000000000020C77F                 db    ? ;
.bss:000000000020C780                 db    ? ;
.bss:000000000020C781                 db    ? ;
.bss:000000000020C782                 db    ? ;
.bss:000000000020C783                 db    ? ;
.bss:000000000020C784                 db    ? ;
.bss:000000000020C785                 db    ? ;
.bss:000000000020C786                 db    ? ;
.bss:000000000020C787                 db    ? ;
.bss:000000000020C788                 db    ? ;
.bss:000000000020C789                 db    ? ;
.bss:000000000020C78A                 db    ? ;
.bss:000000000020C78B                 db    ? ;
.bss:000000000020C78C                 db    ? ;
.bss:000000000020C78D                 db    ? ;
.bss:000000000020C78E                 db    ? ;
.bss:000000000020C78F                 db    ? ;
.bss:000000000020C790                 db    ? ;
.bss:000000000020C791                 db    ? ;
.bss:000000000020C792                 db    ? ;
.bss:000000000020C793                 db    ? ;
.bss:000000000020C794                 db    ? ;
.bss:000000000020C795                 db    ? ;
.bss:000000000020C796                 db    ? ;
.bss:000000000020C797                 db    ? ;
.bss:000000000020C798                 db    ? ;
.bss:000000000020C799                 db    ? ;
.bss:000000000020C79A                 db    ? ;
.bss:000000000020C79B                 db    ? ;
.bss:000000000020C79C                 db    ? ;
.bss:000000000020C79D                 db    ? ;
.bss:000000000020C79E                 db    ? ;
.bss:000000000020C79F                 db    ? ;
.bss:000000000020C7A0                 db    ? ;
.bss:000000000020C7A1                 db    ? ;
.bss:000000000020C7A2                 db    ? ;
.bss:000000000020C7A3                 db    ? ;
.bss:000000000020C7A4                 db    ? ;
.bss:000000000020C7A5                 db    ? ;
.bss:000000000020C7A6                 db    ? ;
.bss:000000000020C7A7                 db    ? ;
.bss:000000000020C7A8                 db    ? ;
.bss:000000000020C7A9                 db    ? ;
.bss:000000000020C7AA                 db    ? ;
.bss:000000000020C7AB                 db    ? ;
.bss:000000000020C7AC                 db    ? ;
.bss:000000000020C7AD                 db    ? ;
.bss:000000000020C7AE                 db    ? ;
.bss:000000000020C7AF                 db    ? ;
.bss:000000000020C7B0                 db    ? ;
.bss:000000000020C7B1                 db    ? ;
.bss:000000000020C7B2                 db    ? ;
.bss:000000000020C7B3                 db    ? ;
.bss:000000000020C7B4                 db    ? ;
.bss:000000000020C7B5                 db    ? ;
.bss:000000000020C7B6                 db    ? ;
.bss:000000000020C7B7                 db    ? ;
.bss:000000000020C7B8                 db    ? ;
.bss:000000000020C7B9                 db    ? ;
.bss:000000000020C7BA                 db    ? ;
.bss:000000000020C7BB                 db    ? ;
.bss:000000000020C7BC                 db    ? ;
.bss:000000000020C7BD                 db    ? ;
.bss:000000000020C7BE                 db    ? ;
.bss:000000000020C7BF                 db    ? ;
.bss:000000000020C7C0                 db    ? ;
.bss:000000000020C7C1                 db    ? ;
.bss:000000000020C7C2                 db    ? ;
.bss:000000000020C7C3                 db    ? ;
.bss:000000000020C7C4                 db    ? ;
.bss:000000000020C7C5                 db    ? ;
.bss:000000000020C7C6                 db    ? ;
.bss:000000000020C7C7                 db    ? ;
.bss:000000000020C7C8                 db    ? ;
.bss:000000000020C7C9                 db    ? ;
.bss:000000000020C7CA                 db    ? ;
.bss:000000000020C7CB                 db    ? ;
.bss:000000000020C7CC                 db    ? ;
.bss:000000000020C7CD                 db    ? ;
.bss:000000000020C7CE                 db    ? ;
.bss:000000000020C7CF                 db    ? ;
.bss:000000000020C7D0                 db    ? ;
.bss:000000000020C7D1                 db    ? ;
.bss:000000000020C7D2                 db    ? ;
.bss:000000000020C7D3                 db    ? ;
.bss:000000000020C7D4                 db    ? ;
.bss:000000000020C7D5                 db    ? ;
.bss:000000000020C7D6                 db    ? ;
.bss:000000000020C7D7                 db    ? ;
.bss:000000000020C7D8                 db    ? ;
.bss:000000000020C7D9                 db    ? ;
.bss:000000000020C7DA                 db    ? ;
.bss:000000000020C7DB                 db    ? ;
.bss:000000000020C7DC                 db    ? ;
.bss:000000000020C7DD                 db    ? ;
.bss:000000000020C7DE                 db    ? ;
.bss:000000000020C7DF                 db    ? ;
.bss:000000000020C7E0                 db    ? ;
.bss:000000000020C7E1                 db    ? ;
.bss:000000000020C7E2                 db    ? ;
.bss:000000000020C7E3                 db    ? ;
.bss:000000000020C7E4                 db    ? ;
.bss:000000000020C7E5                 db    ? ;
.bss:000000000020C7E6                 db    ? ;
.bss:000000000020C7E7                 db    ? ;
.bss:000000000020C7E8                 db    ? ;
.bss:000000000020C7E9                 db    ? ;
.bss:000000000020C7EA                 db    ? ;
.bss:000000000020C7EB                 db    ? ;
.bss:000000000020C7EC                 db    ? ;
.bss:000000000020C7ED                 db    ? ;
.bss:000000000020C7EE                 db    ? ;
.bss:000000000020C7EF                 db    ? ;
.bss:000000000020C7F0                 db    ? ;
.bss:000000000020C7F1                 db    ? ;
.bss:000000000020C7F2                 db    ? ;
.bss:000000000020C7F3                 db    ? ;
.bss:000000000020C7F4                 db    ? ;
.bss:000000000020C7F5                 db    ? ;
.bss:000000000020C7F6                 db    ? ;
.bss:000000000020C7F7                 db    ? ;
.bss:000000000020C7F8                 db    ? ;
.bss:000000000020C7F9                 db    ? ;
.bss:000000000020C7FA                 db    ? ;
.bss:000000000020C7FB                 db    ? ;
.bss:000000000020C7FC                 db    ? ;
.bss:000000000020C7FD                 db    ? ;
.bss:000000000020C7FE                 db    ? ;
.bss:000000000020C7FF                 db    ? ;
.bss:000000000020C800                 db    ? ;
.bss:000000000020C801                 db    ? ;
.bss:000000000020C802                 db    ? ;
.bss:000000000020C803                 db    ? ;
.bss:000000000020C804                 db    ? ;
.bss:000000000020C805                 db    ? ;
.bss:000000000020C806                 db    ? ;
.bss:000000000020C807                 db    ? ;
.bss:000000000020C808                 db    ? ;
.bss:000000000020C809                 db    ? ;
.bss:000000000020C80A                 db    ? ;
.bss:000000000020C80B                 db    ? ;
.bss:000000000020C80C                 db    ? ;
.bss:000000000020C80D                 db    ? ;
.bss:000000000020C80E                 db    ? ;
.bss:000000000020C80F                 db    ? ;
.bss:000000000020C810                 db    ? ;
.bss:000000000020C811                 db    ? ;
.bss:000000000020C812                 db    ? ;
.bss:000000000020C813                 db    ? ;
.bss:000000000020C814                 db    ? ;
.bss:000000000020C815                 db    ? ;
.bss:000000000020C816                 db    ? ;
.bss:000000000020C817                 db    ? ;
.bss:000000000020C818                 db    ? ;
.bss:000000000020C819                 db    ? ;
.bss:000000000020C81A                 db    ? ;
.bss:000000000020C81B                 db    ? ;
.bss:000000000020C81C                 db    ? ;
.bss:000000000020C81D                 db    ? ;
.bss:000000000020C81E                 db    ? ;
.bss:000000000020C81F                 db    ? ;
.bss:000000000020C820                 db    ? ;
.bss:000000000020C821                 db    ? ;
.bss:000000000020C822                 db    ? ;
.bss:000000000020C823                 db    ? ;
.bss:000000000020C824                 db    ? ;
.bss:000000000020C825                 db    ? ;
.bss:000000000020C826                 db    ? ;
.bss:000000000020C827                 db    ? ;
.bss:000000000020C828                 db    ? ;
.bss:000000000020C829                 db    ? ;
.bss:000000000020C82A                 db    ? ;
.bss:000000000020C82B                 db    ? ;
.bss:000000000020C82C                 db    ? ;
.bss:000000000020C82D                 db    ? ;
.bss:000000000020C82E                 db    ? ;
.bss:000000000020C82F                 db    ? ;
.bss:000000000020C830                 db    ? ;
.bss:000000000020C831                 db    ? ;
.bss:000000000020C832                 db    ? ;
.bss:000000000020C833                 db    ? ;
.bss:000000000020C834                 db    ? ;
.bss:000000000020C835                 db    ? ;
.bss:000000000020C836                 db    ? ;
.bss:000000000020C837                 db    ? ;
.bss:000000000020C838                 db    ? ;
.bss:000000000020C839                 db    ? ;
.bss:000000000020C83A                 db    ? ;
.bss:000000000020C83B                 db    ? ;
.bss:000000000020C83C                 db    ? ;
.bss:000000000020C83D                 db    ? ;
.bss:000000000020C83E                 db    ? ;
.bss:000000000020C83F                 db    ? ;
.bss:000000000020C840                 db    ? ;
.bss:000000000020C841                 db    ? ;
.bss:000000000020C842                 db    ? ;
.bss:000000000020C843                 db    ? ;
.bss:000000000020C844                 db    ? ;
.bss:000000000020C845                 db    ? ;
.bss:000000000020C846                 db    ? ;
.bss:000000000020C847                 db    ? ;
.bss:000000000020C848                 db    ? ;
.bss:000000000020C849                 db    ? ;
.bss:000000000020C84A                 db    ? ;
.bss:000000000020C84B                 db    ? ;
.bss:000000000020C84C                 db    ? ;
.bss:000000000020C84D                 db    ? ;
.bss:000000000020C84E                 db    ? ;
.bss:000000000020C84F                 db    ? ;
.bss:000000000020C850                 db    ? ;
.bss:000000000020C851                 db    ? ;
.bss:000000000020C852                 db    ? ;
.bss:000000000020C853                 db    ? ;
.bss:000000000020C854                 db    ? ;
.bss:000000000020C855                 db    ? ;
.bss:000000000020C856                 db    ? ;
.bss:000000000020C857                 db    ? ;
.bss:000000000020C858                 db    ? ;
.bss:000000000020C859                 db    ? ;
.bss:000000000020C85A                 db    ? ;
.bss:000000000020C85B                 db    ? ;
.bss:000000000020C85C                 db    ? ;
.bss:000000000020C85D                 db    ? ;
.bss:000000000020C85E                 db    ? ;
.bss:000000000020C85F                 db    ? ;
.bss:000000000020C860                 db    ? ;
.bss:000000000020C861                 db    ? ;
.bss:000000000020C862                 db    ? ;
.bss:000000000020C863                 db    ? ;
.bss:000000000020C864                 db    ? ;
.bss:000000000020C865                 db    ? ;
.bss:000000000020C866                 db    ? ;
.bss:000000000020C867                 db    ? ;
.bss:000000000020C868                 db    ? ;
.bss:000000000020C869                 db    ? ;
.bss:000000000020C86A                 db    ? ;
.bss:000000000020C86B                 db    ? ;
.bss:000000000020C86C                 db    ? ;
.bss:000000000020C86D                 db    ? ;
.bss:000000000020C86E                 db    ? ;
.bss:000000000020C86F                 db    ? ;
.bss:000000000020C870                 db    ? ;
.bss:000000000020C871                 db    ? ;
.bss:000000000020C872                 db    ? ;
.bss:000000000020C873                 db    ? ;
.bss:000000000020C874                 db    ? ;
.bss:000000000020C875                 db    ? ;
.bss:000000000020C876                 db    ? ;
.bss:000000000020C877                 db    ? ;
.bss:000000000020C878                 db    ? ;
.bss:000000000020C879                 db    ? ;
.bss:000000000020C87A                 db    ? ;
.bss:000000000020C87B                 db    ? ;
.bss:000000000020C87C                 db    ? ;
.bss:000000000020C87D                 db    ? ;
.bss:000000000020C87E                 db    ? ;
.bss:000000000020C87F                 db    ? ;
.bss:000000000020C880                 db    ? ;
.bss:000000000020C881                 db    ? ;
.bss:000000000020C882                 db    ? ;
.bss:000000000020C883                 db    ? ;
.bss:000000000020C884                 db    ? ;
.bss:000000000020C885                 db    ? ;
.bss:000000000020C886                 db    ? ;
.bss:000000000020C887                 db    ? ;
.bss:000000000020C888                 db    ? ;
.bss:000000000020C889                 db    ? ;
.bss:000000000020C88A                 db    ? ;
.bss:000000000020C88B                 db    ? ;
.bss:000000000020C88C                 db    ? ;
.bss:000000000020C88D                 db    ? ;
.bss:000000000020C88E                 db    ? ;
.bss:000000000020C88F                 db    ? ;
.bss:000000000020C890                 db    ? ;
.bss:000000000020C891                 db    ? ;
.bss:000000000020C892                 db    ? ;
.bss:000000000020C893                 db    ? ;
.bss:000000000020C894                 db    ? ;
.bss:000000000020C895                 db    ? ;
.bss:000000000020C896                 db    ? ;
.bss:000000000020C897                 db    ? ;
.bss:000000000020C898                 db    ? ;
.bss:000000000020C899                 db    ? ;
.bss:000000000020C89A                 db    ? ;
.bss:000000000020C89B                 db    ? ;
.bss:000000000020C89C                 db    ? ;
.bss:000000000020C89D                 db    ? ;
.bss:000000000020C89E                 db    ? ;
.bss:000000000020C89F                 db    ? ;
.bss:000000000020C8A0                 db    ? ;
.bss:000000000020C8A1                 db    ? ;
.bss:000000000020C8A2                 db    ? ;
.bss:000000000020C8A3                 db    ? ;
.bss:000000000020C8A4                 db    ? ;
.bss:000000000020C8A5                 db    ? ;
.bss:000000000020C8A6                 db    ? ;
.bss:000000000020C8A7                 db    ? ;
.bss:000000000020C8A8                 db    ? ;
.bss:000000000020C8A9                 db    ? ;
.bss:000000000020C8AA                 db    ? ;
.bss:000000000020C8AB                 db    ? ;
.bss:000000000020C8AC                 db    ? ;
.bss:000000000020C8AD                 db    ? ;
.bss:000000000020C8AE                 db    ? ;
.bss:000000000020C8AF                 db    ? ;
.bss:000000000020C8B0                 db    ? ;
.bss:000000000020C8B1                 db    ? ;
.bss:000000000020C8B2                 db    ? ;
.bss:000000000020C8B3                 db    ? ;
.bss:000000000020C8B4                 db    ? ;
.bss:000000000020C8B5                 db    ? ;
.bss:000000000020C8B6                 db    ? ;
.bss:000000000020C8B7                 db    ? ;
.bss:000000000020C8B8                 db    ? ;
.bss:000000000020C8B9                 db    ? ;
.bss:000000000020C8BA                 db    ? ;
.bss:000000000020C8BB                 db    ? ;
.bss:000000000020C8BC                 db    ? ;
.bss:000000000020C8BD                 db    ? ;
.bss:000000000020C8BE                 db    ? ;
.bss:000000000020C8BF                 db    ? ;
.bss:000000000020C8C0                 db    ? ;
.bss:000000000020C8C1                 db    ? ;
.bss:000000000020C8C2                 db    ? ;
.bss:000000000020C8C3                 db    ? ;
.bss:000000000020C8C4                 db    ? ;
.bss:000000000020C8C5                 db    ? ;
.bss:000000000020C8C6                 db    ? ;
.bss:000000000020C8C7                 db    ? ;
.bss:000000000020C8C8                 db    ? ;
.bss:000000000020C8C9                 db    ? ;
.bss:000000000020C8CA                 db    ? ;
.bss:000000000020C8CB                 db    ? ;
.bss:000000000020C8CC                 db    ? ;
.bss:000000000020C8CD                 db    ? ;
.bss:000000000020C8CE                 db    ? ;
.bss:000000000020C8CF                 db    ? ;
.bss:000000000020C8D0                 db    ? ;
.bss:000000000020C8D1                 db    ? ;
.bss:000000000020C8D2                 db    ? ;
.bss:000000000020C8D3                 db    ? ;
.bss:000000000020C8D4                 db    ? ;
.bss:000000000020C8D5                 db    ? ;
.bss:000000000020C8D6                 db    ? ;
.bss:000000000020C8D7                 db    ? ;
.bss:000000000020C8D8                 db    ? ;
.bss:000000000020C8D9                 db    ? ;
.bss:000000000020C8DA                 db    ? ;
.bss:000000000020C8DB                 db    ? ;
.bss:000000000020C8DC                 db    ? ;
.bss:000000000020C8DD                 db    ? ;
.bss:000000000020C8DE                 db    ? ;
.bss:000000000020C8DF                 db    ? ;
.bss:000000000020C8E0                 db    ? ;
.bss:000000000020C8E1                 db    ? ;
.bss:000000000020C8E2                 db    ? ;
.bss:000000000020C8E3                 db    ? ;
.bss:000000000020C8E4                 db    ? ;
.bss:000000000020C8E5                 db    ? ;
.bss:000000000020C8E6                 db    ? ;
.bss:000000000020C8E7                 db    ? ;
.bss:000000000020C8E8                 db    ? ;
.bss:000000000020C8E9                 db    ? ;
.bss:000000000020C8EA                 db    ? ;
.bss:000000000020C8EB                 db    ? ;
.bss:000000000020C8EC                 db    ? ;
.bss:000000000020C8ED                 db    ? ;
.bss:000000000020C8EE                 db    ? ;
.bss:000000000020C8EF                 db    ? ;
.bss:000000000020C8F0                 db    ? ;
.bss:000000000020C8F1                 db    ? ;
.bss:000000000020C8F2                 db    ? ;
.bss:000000000020C8F3                 db    ? ;
.bss:000000000020C8F4                 db    ? ;
.bss:000000000020C8F5                 db    ? ;
.bss:000000000020C8F6                 db    ? ;
.bss:000000000020C8F7                 db    ? ;
.bss:000000000020C8F8                 db    ? ;
.bss:000000000020C8F9                 db    ? ;
.bss:000000000020C8FA                 db    ? ;
.bss:000000000020C8FB                 db    ? ;
.bss:000000000020C8FC                 db    ? ;
.bss:000000000020C8FD                 db    ? ;
.bss:000000000020C8FE                 db    ? ;
.bss:000000000020C8FF                 db    ? ;
.bss:000000000020C900                 db    ? ;
.bss:000000000020C901                 db    ? ;
.bss:000000000020C902                 db    ? ;
.bss:000000000020C903                 db    ? ;
.bss:000000000020C904                 db    ? ;
.bss:000000000020C905                 db    ? ;
.bss:000000000020C906                 db    ? ;
.bss:000000000020C907                 db    ? ;
.bss:000000000020C908                 db    ? ;
.bss:000000000020C909                 db    ? ;
.bss:000000000020C90A                 db    ? ;
.bss:000000000020C90B                 db    ? ;
.bss:000000000020C90C                 db    ? ;
.bss:000000000020C90D                 db    ? ;
.bss:000000000020C90E                 db    ? ;
.bss:000000000020C90F                 db    ? ;
.bss:000000000020C910                 db    ? ;
.bss:000000000020C911                 db    ? ;
.bss:000000000020C912                 db    ? ;
.bss:000000000020C913                 db    ? ;
.bss:000000000020C914                 db    ? ;
.bss:000000000020C915                 db    ? ;
.bss:000000000020C916                 db    ? ;
.bss:000000000020C917                 db    ? ;
.bss:000000000020C918                 db    ? ;
.bss:000000000020C919                 db    ? ;
.bss:000000000020C91A                 db    ? ;
.bss:000000000020C91B                 db    ? ;
.bss:000000000020C91C                 db    ? ;
.bss:000000000020C91D                 db    ? ;
.bss:000000000020C91E                 db    ? ;
.bss:000000000020C91F                 db    ? ;
.bss:000000000020C920                 db    ? ;
.bss:000000000020C921                 db    ? ;
.bss:000000000020C922                 db    ? ;
.bss:000000000020C923                 db    ? ;
.bss:000000000020C924                 db    ? ;
.bss:000000000020C925                 db    ? ;
.bss:000000000020C926                 db    ? ;
.bss:000000000020C927                 db    ? ;
.bss:000000000020C928                 db    ? ;
.bss:000000000020C929                 db    ? ;
.bss:000000000020C92A                 db    ? ;
.bss:000000000020C92B                 db    ? ;
.bss:000000000020C92C                 db    ? ;
.bss:000000000020C92D                 db    ? ;
.bss:000000000020C92E                 db    ? ;
.bss:000000000020C92F                 db    ? ;
.bss:000000000020C930                 db    ? ;
.bss:000000000020C931                 db    ? ;
.bss:000000000020C932                 db    ? ;
.bss:000000000020C933                 db    ? ;
.bss:000000000020C934                 db    ? ;
.bss:000000000020C935                 db    ? ;
.bss:000000000020C936                 db    ? ;
.bss:000000000020C937                 db    ? ;
.bss:000000000020C938                 db    ? ;
.bss:000000000020C939                 db    ? ;
.bss:000000000020C93A                 db    ? ;
.bss:000000000020C93B                 db    ? ;
.bss:000000000020C93C                 db    ? ;
.bss:000000000020C93D                 db    ? ;
.bss:000000000020C93E                 db    ? ;
.bss:000000000020C93F                 db    ? ;
.bss:000000000020C940                 db    ? ;
.bss:000000000020C941                 db    ? ;
.bss:000000000020C942                 db    ? ;
.bss:000000000020C943                 db    ? ;
.bss:000000000020C944                 db    ? ;
.bss:000000000020C945                 db    ? ;
.bss:000000000020C946                 db    ? ;
.bss:000000000020C947                 db    ? ;
.bss:000000000020C948                 db    ? ;
.bss:000000000020C949                 db    ? ;
.bss:000000000020C94A                 db    ? ;
.bss:000000000020C94B                 db    ? ;
.bss:000000000020C94C                 db    ? ;
.bss:000000000020C94D                 db    ? ;
.bss:000000000020C94E                 db    ? ;
.bss:000000000020C94F                 db    ? ;
.bss:000000000020C950                 db    ? ;
.bss:000000000020C951                 db    ? ;
.bss:000000000020C952                 db    ? ;
.bss:000000000020C953                 db    ? ;
.bss:000000000020C954                 db    ? ;
.bss:000000000020C955                 db    ? ;
.bss:000000000020C956                 db    ? ;
.bss:000000000020C957                 db    ? ;
.bss:000000000020C958                 db    ? ;
.bss:000000000020C959                 db    ? ;
.bss:000000000020C95A                 db    ? ;
.bss:000000000020C95B                 db    ? ;
.bss:000000000020C95C                 db    ? ;
.bss:000000000020C95D                 db    ? ;
.bss:000000000020C95E                 db    ? ;
.bss:000000000020C95F                 db    ? ;
.bss:000000000020C960                 db    ? ;
.bss:000000000020C961                 db    ? ;
.bss:000000000020C962                 db    ? ;
.bss:000000000020C963                 db    ? ;
.bss:000000000020C964                 db    ? ;
.bss:000000000020C965                 db    ? ;
.bss:000000000020C966                 db    ? ;
.bss:000000000020C967                 db    ? ;
.bss:000000000020C968                 db    ? ;
.bss:000000000020C969                 db    ? ;
.bss:000000000020C96A                 db    ? ;
.bss:000000000020C96B                 db    ? ;
.bss:000000000020C96C                 db    ? ;
.bss:000000000020C96D                 db    ? ;
.bss:000000000020C96E                 db    ? ;
.bss:000000000020C96F                 db    ? ;
.bss:000000000020C970                 db    ? ;
.bss:000000000020C971                 db    ? ;
.bss:000000000020C972                 db    ? ;
.bss:000000000020C973                 db    ? ;
.bss:000000000020C974                 db    ? ;
.bss:000000000020C975                 db    ? ;
.bss:000000000020C976                 db    ? ;
.bss:000000000020C977                 db    ? ;
.bss:000000000020C978                 db    ? ;
.bss:000000000020C979                 db    ? ;
.bss:000000000020C97A                 db    ? ;
.bss:000000000020C97B                 db    ? ;
.bss:000000000020C97C                 db    ? ;
.bss:000000000020C97D                 db    ? ;
.bss:000000000020C97E                 db    ? ;
.bss:000000000020C97F                 db    ? ;
.bss:000000000020C980                 db    ? ;
.bss:000000000020C981                 db    ? ;
.bss:000000000020C982                 db    ? ;
.bss:000000000020C983                 db    ? ;
.bss:000000000020C984                 db    ? ;
.bss:000000000020C985                 db    ? ;
.bss:000000000020C986                 db    ? ;
.bss:000000000020C987                 db    ? ;
.bss:000000000020C988                 db    ? ;
.bss:000000000020C989                 db    ? ;
.bss:000000000020C98A                 db    ? ;
.bss:000000000020C98B                 db    ? ;
.bss:000000000020C98C                 db    ? ;
.bss:000000000020C98D                 db    ? ;
.bss:000000000020C98E                 db    ? ;
.bss:000000000020C98F                 db    ? ;
.bss:000000000020C990                 db    ? ;
.bss:000000000020C991                 db    ? ;
.bss:000000000020C992                 db    ? ;
.bss:000000000020C993                 db    ? ;
.bss:000000000020C994                 db    ? ;
.bss:000000000020C995                 db    ? ;
.bss:000000000020C996                 db    ? ;
.bss:000000000020C997                 db    ? ;
.bss:000000000020C998                 db    ? ;
.bss:000000000020C999                 db    ? ;
.bss:000000000020C99A                 db    ? ;
.bss:000000000020C99B                 db    ? ;
.bss:000000000020C99C                 db    ? ;
.bss:000000000020C99D                 db    ? ;
.bss:000000000020C99E                 db    ? ;
.bss:000000000020C99F                 db    ? ;
.bss:000000000020C9A0                 db    ? ;
.bss:000000000020C9A1                 db    ? ;
.bss:000000000020C9A2                 db    ? ;
.bss:000000000020C9A3                 db    ? ;
.bss:000000000020C9A4                 db    ? ;
.bss:000000000020C9A5                 db    ? ;
.bss:000000000020C9A6                 db    ? ;
.bss:000000000020C9A7                 db    ? ;
.bss:000000000020C9A8                 db    ? ;
.bss:000000000020C9A9                 db    ? ;
.bss:000000000020C9AA                 db    ? ;
.bss:000000000020C9AB                 db    ? ;
.bss:000000000020C9AC                 db    ? ;
.bss:000000000020C9AD                 db    ? ;
.bss:000000000020C9AE                 db    ? ;
.bss:000000000020C9AF                 db    ? ;
.bss:000000000020C9B0                 db    ? ;
.bss:000000000020C9B1                 db    ? ;
.bss:000000000020C9B2                 db    ? ;
.bss:000000000020C9B3                 db    ? ;
.bss:000000000020C9B4                 db    ? ;
.bss:000000000020C9B5                 db    ? ;
.bss:000000000020C9B6                 db    ? ;
.bss:000000000020C9B7                 db    ? ;
.bss:000000000020C9B8                 db    ? ;
.bss:000000000020C9B9                 db    ? ;
.bss:000000000020C9BA                 db    ? ;
.bss:000000000020C9BB                 db    ? ;
.bss:000000000020C9BC                 db    ? ;
.bss:000000000020C9BD                 db    ? ;
.bss:000000000020C9BE                 db    ? ;
.bss:000000000020C9BF                 db    ? ;
.bss:000000000020C9C0                 db    ? ;
.bss:000000000020C9C1                 db    ? ;
.bss:000000000020C9C2                 db    ? ;
.bss:000000000020C9C3                 db    ? ;
.bss:000000000020C9C4                 db    ? ;
.bss:000000000020C9C5                 db    ? ;
.bss:000000000020C9C6                 db    ? ;
.bss:000000000020C9C7                 db    ? ;
.bss:000000000020C9C8                 db    ? ;
.bss:000000000020C9C9                 db    ? ;
.bss:000000000020C9CA                 db    ? ;
.bss:000000000020C9CB                 db    ? ;
.bss:000000000020C9CC                 db    ? ;
.bss:000000000020C9CD                 db    ? ;
.bss:000000000020C9CE                 db    ? ;
.bss:000000000020C9CF                 db    ? ;
.bss:000000000020C9D0                 db    ? ;
.bss:000000000020C9D1                 db    ? ;
.bss:000000000020C9D2                 db    ? ;
.bss:000000000020C9D3                 db    ? ;
.bss:000000000020C9D4                 db    ? ;
.bss:000000000020C9D5                 db    ? ;
.bss:000000000020C9D6                 db    ? ;
.bss:000000000020C9D7                 db    ? ;
.bss:000000000020C9D8                 db    ? ;
.bss:000000000020C9D9                 db    ? ;
.bss:000000000020C9DA                 db    ? ;
.bss:000000000020C9DB                 db    ? ;
.bss:000000000020C9DC                 db    ? ;
.bss:000000000020C9DD                 db    ? ;
.bss:000000000020C9DE                 db    ? ;
.bss:000000000020C9DF                 db    ? ;
.bss:000000000020C9E0                 db    ? ;
.bss:000000000020C9E1                 db    ? ;
.bss:000000000020C9E2                 db    ? ;
.bss:000000000020C9E3                 db    ? ;
.bss:000000000020C9E4                 db    ? ;
.bss:000000000020C9E5                 db    ? ;
.bss:000000000020C9E6                 db    ? ;
.bss:000000000020C9E7                 db    ? ;
.bss:000000000020C9E8                 db    ? ;
.bss:000000000020C9E9                 db    ? ;
.bss:000000000020C9EA                 db    ? ;
.bss:000000000020C9EB                 db    ? ;
.bss:000000000020C9EC                 db    ? ;
.bss:000000000020C9ED                 db    ? ;
.bss:000000000020C9EE                 db    ? ;
.bss:000000000020C9EF                 db    ? ;
.bss:000000000020C9F0                 db    ? ;
.bss:000000000020C9F1                 db    ? ;
.bss:000000000020C9F2                 db    ? ;
.bss:000000000020C9F3                 db    ? ;
.bss:000000000020C9F4                 db    ? ;
.bss:000000000020C9F5                 db    ? ;
.bss:000000000020C9F6                 db    ? ;
.bss:000000000020C9F7                 db    ? ;
.bss:000000000020C9F8                 db    ? ;
.bss:000000000020C9F9                 db    ? ;
.bss:000000000020C9FA                 db    ? ;
.bss:000000000020C9FB                 db    ? ;
.bss:000000000020C9FC                 db    ? ;
.bss:000000000020C9FD                 db    ? ;
.bss:000000000020C9FE                 db    ? ;
.bss:000000000020C9FF                 db    ? ;
.bss:000000000020CA00                 db    ? ;
.bss:000000000020CA01                 db    ? ;
.bss:000000000020CA02                 db    ? ;
.bss:000000000020CA03                 db    ? ;
.bss:000000000020CA04                 db    ? ;
.bss:000000000020CA05                 db    ? ;
.bss:000000000020CA06                 db    ? ;
.bss:000000000020CA07                 db    ? ;
.bss:000000000020CA08                 db    ? ;
.bss:000000000020CA09                 db    ? ;
.bss:000000000020CA0A                 db    ? ;
.bss:000000000020CA0B                 db    ? ;
.bss:000000000020CA0C                 db    ? ;
.bss:000000000020CA0D                 db    ? ;
.bss:000000000020CA0E                 db    ? ;
.bss:000000000020CA0F                 db    ? ;
.bss:000000000020CA10                 db    ? ;
.bss:000000000020CA11                 db    ? ;
.bss:000000000020CA12                 db    ? ;
.bss:000000000020CA13                 db    ? ;
.bss:000000000020CA14                 db    ? ;
.bss:000000000020CA15                 db    ? ;
.bss:000000000020CA16                 db    ? ;
.bss:000000000020CA17                 db    ? ;
.bss:000000000020CA18                 db    ? ;
.bss:000000000020CA19                 db    ? ;
.bss:000000000020CA1A                 db    ? ;
.bss:000000000020CA1B                 db    ? ;
.bss:000000000020CA1C                 db    ? ;
.bss:000000000020CA1D                 db    ? ;
.bss:000000000020CA1E                 db    ? ;
.bss:000000000020CA1F                 db    ? ;
.bss:000000000020CA20                 db    ? ;
.bss:000000000020CA21                 db    ? ;
.bss:000000000020CA22                 db    ? ;
.bss:000000000020CA23                 db    ? ;
.bss:000000000020CA24                 db    ? ;
.bss:000000000020CA25                 db    ? ;
.bss:000000000020CA26                 db    ? ;
.bss:000000000020CA27                 db    ? ;
.bss:000000000020CA28                 db    ? ;
.bss:000000000020CA29                 db    ? ;
.bss:000000000020CA2A                 db    ? ;
.bss:000000000020CA2B                 db    ? ;
.bss:000000000020CA2C                 db    ? ;
.bss:000000000020CA2D                 db    ? ;
.bss:000000000020CA2E                 db    ? ;
.bss:000000000020CA2F                 db    ? ;
.bss:000000000020CA30                 db    ? ;
.bss:000000000020CA31                 db    ? ;
.bss:000000000020CA32                 db    ? ;
.bss:000000000020CA33                 db    ? ;
.bss:000000000020CA34                 db    ? ;
.bss:000000000020CA35                 db    ? ;
.bss:000000000020CA36                 db    ? ;
.bss:000000000020CA37                 db    ? ;
.bss:000000000020CA38                 db    ? ;
.bss:000000000020CA39                 db    ? ;
.bss:000000000020CA3A                 db    ? ;
.bss:000000000020CA3B                 db    ? ;
.bss:000000000020CA3C                 db    ? ;
.bss:000000000020CA3D                 db    ? ;
.bss:000000000020CA3E                 db    ? ;
.bss:000000000020CA3F                 db    ? ;
.bss:000000000020CA40                 db    ? ;
.bss:000000000020CA41                 db    ? ;
.bss:000000000020CA42                 db    ? ;
.bss:000000000020CA43                 db    ? ;
.bss:000000000020CA44                 db    ? ;
.bss:000000000020CA45                 db    ? ;
.bss:000000000020CA46                 db    ? ;
.bss:000000000020CA47                 db    ? ;
.bss:000000000020CA48                 db    ? ;
.bss:000000000020CA49                 db    ? ;
.bss:000000000020CA4A                 db    ? ;
.bss:000000000020CA4B                 db    ? ;
.bss:000000000020CA4C                 db    ? ;
.bss:000000000020CA4D                 db    ? ;
.bss:000000000020CA4E                 db    ? ;
.bss:000000000020CA4F                 db    ? ;
.bss:000000000020CA50                 db    ? ;
.bss:000000000020CA51                 db    ? ;
.bss:000000000020CA52                 db    ? ;
.bss:000000000020CA53                 db    ? ;
.bss:000000000020CA54                 db    ? ;
.bss:000000000020CA55                 db    ? ;
.bss:000000000020CA56                 db    ? ;
.bss:000000000020CA57                 db    ? ;
.bss:000000000020CA58                 db    ? ;
.bss:000000000020CA59                 db    ? ;
.bss:000000000020CA5A                 db    ? ;
.bss:000000000020CA5B                 db    ? ;
.bss:000000000020CA5C                 db    ? ;
.bss:000000000020CA5D                 db    ? ;
.bss:000000000020CA5E                 db    ? ;
.bss:000000000020CA5F                 db    ? ;
.bss:000000000020CA60                 db    ? ;
.bss:000000000020CA61                 db    ? ;
.bss:000000000020CA62                 db    ? ;
.bss:000000000020CA63                 db    ? ;
.bss:000000000020CA64                 db    ? ;
.bss:000000000020CA65                 db    ? ;
.bss:000000000020CA66                 db    ? ;
.bss:000000000020CA67                 db    ? ;
.bss:000000000020CA68                 db    ? ;
.bss:000000000020CA69                 db    ? ;
.bss:000000000020CA6A                 db    ? ;
.bss:000000000020CA6B                 db    ? ;
.bss:000000000020CA6C                 db    ? ;
.bss:000000000020CA6D                 db    ? ;
.bss:000000000020CA6E                 db    ? ;
.bss:000000000020CA6F                 db    ? ;
.bss:000000000020CA70                 db    ? ;
.bss:000000000020CA71                 db    ? ;
.bss:000000000020CA72                 db    ? ;
.bss:000000000020CA73                 db    ? ;
.bss:000000000020CA74                 db    ? ;
.bss:000000000020CA75                 db    ? ;
.bss:000000000020CA76                 db    ? ;
.bss:000000000020CA77                 db    ? ;
.bss:000000000020CA78                 db    ? ;
.bss:000000000020CA79                 db    ? ;
.bss:000000000020CA7A                 db    ? ;
.bss:000000000020CA7B                 db    ? ;
.bss:000000000020CA7C                 db    ? ;
.bss:000000000020CA7D                 db    ? ;
.bss:000000000020CA7E                 db    ? ;
.bss:000000000020CA7F                 db    ? ;
.bss:000000000020CA80                 db    ? ;
.bss:000000000020CA81                 db    ? ;
.bss:000000000020CA82                 db    ? ;
.bss:000000000020CA83                 db    ? ;
.bss:000000000020CA84                 db    ? ;
.bss:000000000020CA85                 db    ? ;
.bss:000000000020CA86                 db    ? ;
.bss:000000000020CA87                 db    ? ;
.bss:000000000020CA88                 db    ? ;
.bss:000000000020CA89                 db    ? ;
.bss:000000000020CA8A                 db    ? ;
.bss:000000000020CA8B                 db    ? ;
.bss:000000000020CA8C                 db    ? ;
.bss:000000000020CA8D                 db    ? ;
.bss:000000000020CA8E                 db    ? ;
.bss:000000000020CA8F                 db    ? ;
.bss:000000000020CA90                 db    ? ;
.bss:000000000020CA91                 db    ? ;
.bss:000000000020CA92                 db    ? ;
.bss:000000000020CA93                 db    ? ;
.bss:000000000020CA94                 db    ? ;
.bss:000000000020CA95                 db    ? ;
.bss:000000000020CA96                 db    ? ;
.bss:000000000020CA97                 db    ? ;
.bss:000000000020CA98                 db    ? ;
.bss:000000000020CA99                 db    ? ;
.bss:000000000020CA9A                 db    ? ;
.bss:000000000020CA9B                 db    ? ;
.bss:000000000020CA9C                 db    ? ;
.bss:000000000020CA9D                 db    ? ;
.bss:000000000020CA9E                 db    ? ;
.bss:000000000020CA9F                 db    ? ;
.bss:000000000020CAA0                 db    ? ;
.bss:000000000020CAA1                 db    ? ;
.bss:000000000020CAA2                 db    ? ;
.bss:000000000020CAA3                 db    ? ;
.bss:000000000020CAA4                 db    ? ;
.bss:000000000020CAA5                 db    ? ;
.bss:000000000020CAA6                 db    ? ;
.bss:000000000020CAA7                 db    ? ;
.bss:000000000020CAA8                 db    ? ;
.bss:000000000020CAA9                 db    ? ;
.bss:000000000020CAAA                 db    ? ;
.bss:000000000020CAAB                 db    ? ;
.bss:000000000020CAAC                 db    ? ;
.bss:000000000020CAAD                 db    ? ;
.bss:000000000020CAAE                 db    ? ;
.bss:000000000020CAAF                 db    ? ;
.bss:000000000020CAB0                 db    ? ;
.bss:000000000020CAB1                 db    ? ;
.bss:000000000020CAB2                 db    ? ;
.bss:000000000020CAB3                 db    ? ;
.bss:000000000020CAB4                 db    ? ;
.bss:000000000020CAB5                 db    ? ;
.bss:000000000020CAB6                 db    ? ;
.bss:000000000020CAB7                 db    ? ;
.bss:000000000020CAB8                 db    ? ;
.bss:000000000020CAB9                 db    ? ;
.bss:000000000020CABA                 db    ? ;
.bss:000000000020CABB                 db    ? ;
.bss:000000000020CABC                 db    ? ;
.bss:000000000020CABD                 db    ? ;
.bss:000000000020CABE                 db    ? ;
.bss:000000000020CABF                 db    ? ;
.bss:000000000020CAC0                 db    ? ;
.bss:000000000020CAC1                 db    ? ;
.bss:000000000020CAC2                 db    ? ;
.bss:000000000020CAC3                 db    ? ;
.bss:000000000020CAC4                 db    ? ;
.bss:000000000020CAC5                 db    ? ;
.bss:000000000020CAC6                 db    ? ;
.bss:000000000020CAC7                 db    ? ;
.bss:000000000020CAC8                 db    ? ;
.bss:000000000020CAC9                 db    ? ;
.bss:000000000020CACA                 db    ? ;
.bss:000000000020CACB                 db    ? ;
.bss:000000000020CACC                 db    ? ;
.bss:000000000020CACD                 db    ? ;
.bss:000000000020CACE                 db    ? ;
.bss:000000000020CACF                 db    ? ;
.bss:000000000020CAD0                 db    ? ;
.bss:000000000020CAD1                 db    ? ;
.bss:000000000020CAD2                 db    ? ;
.bss:000000000020CAD3                 db    ? ;
.bss:000000000020CAD4                 db    ? ;
.bss:000000000020CAD5                 db    ? ;
.bss:000000000020CAD6                 db    ? ;
.bss:000000000020CAD7                 db    ? ;
.bss:000000000020CAD8                 db    ? ;
.bss:000000000020CAD9                 db    ? ;
.bss:000000000020CADA                 db    ? ;
.bss:000000000020CADB                 db    ? ;
.bss:000000000020CADC                 db    ? ;
.bss:000000000020CADD                 db    ? ;
.bss:000000000020CADE                 db    ? ;
.bss:000000000020CADF                 db    ? ;
.bss:000000000020CAE0                 db    ? ;
.bss:000000000020CAE1                 db    ? ;
.bss:000000000020CAE2                 db    ? ;
.bss:000000000020CAE3                 db    ? ;
.bss:000000000020CAE4                 db    ? ;
.bss:000000000020CAE5                 db    ? ;
.bss:000000000020CAE6                 db    ? ;
.bss:000000000020CAE7                 db    ? ;
.bss:000000000020CAE8                 db    ? ;
.bss:000000000020CAE9                 db    ? ;
.bss:000000000020CAEA                 db    ? ;
.bss:000000000020CAEB                 db    ? ;
.bss:000000000020CAEC                 db    ? ;
.bss:000000000020CAED                 db    ? ;
.bss:000000000020CAEE                 db    ? ;
.bss:000000000020CAEF                 db    ? ;
.bss:000000000020CAF0                 db    ? ;
.bss:000000000020CAF1                 db    ? ;
.bss:000000000020CAF2                 db    ? ;
.bss:000000000020CAF3                 db    ? ;
.bss:000000000020CAF4                 db    ? ;
.bss:000000000020CAF5                 db    ? ;
.bss:000000000020CAF6                 db    ? ;
.bss:000000000020CAF7                 db    ? ;
.bss:000000000020CAF8                 db    ? ;
.bss:000000000020CAF9                 db    ? ;
.bss:000000000020CAFA                 db    ? ;
.bss:000000000020CAFB                 db    ? ;
.bss:000000000020CAFC                 db    ? ;
.bss:000000000020CAFD                 db    ? ;
.bss:000000000020CAFE                 db    ? ;
.bss:000000000020CAFF                 db    ? ;
.bss:000000000020CB00                 db    ? ;
.bss:000000000020CB01                 db    ? ;
.bss:000000000020CB02                 db    ? ;
.bss:000000000020CB03                 db    ? ;
.bss:000000000020CB04                 db    ? ;
.bss:000000000020CB05                 db    ? ;
.bss:000000000020CB06                 db    ? ;
.bss:000000000020CB07                 db    ? ;
.bss:000000000020CB08                 db    ? ;
.bss:000000000020CB09                 db    ? ;
.bss:000000000020CB0A                 db    ? ;
.bss:000000000020CB0B                 db    ? ;
.bss:000000000020CB0C                 db    ? ;
.bss:000000000020CB0D                 db    ? ;
.bss:000000000020CB0E                 db    ? ;
.bss:000000000020CB0F                 db    ? ;
.bss:000000000020CB10                 db    ? ;
.bss:000000000020CB11                 db    ? ;
.bss:000000000020CB12                 db    ? ;
.bss:000000000020CB13                 db    ? ;
.bss:000000000020CB14                 db    ? ;
.bss:000000000020CB15                 db    ? ;
.bss:000000000020CB16                 db    ? ;
.bss:000000000020CB17                 db    ? ;
.bss:000000000020CB18                 db    ? ;
.bss:000000000020CB19                 db    ? ;
.bss:000000000020CB1A                 db    ? ;
.bss:000000000020CB1B                 db    ? ;
.bss:000000000020CB1C                 db    ? ;
.bss:000000000020CB1D                 db    ? ;
.bss:000000000020CB1E                 db    ? ;
.bss:000000000020CB1F                 db    ? ;
.bss:000000000020CB20                 db    ? ;
.bss:000000000020CB21                 db    ? ;
.bss:000000000020CB22                 db    ? ;
.bss:000000000020CB23                 db    ? ;
.bss:000000000020CB24                 db    ? ;
.bss:000000000020CB25                 db    ? ;
.bss:000000000020CB26                 db    ? ;
.bss:000000000020CB27                 db    ? ;
.bss:000000000020CB28                 db    ? ;
.bss:000000000020CB29                 db    ? ;
.bss:000000000020CB2A                 db    ? ;
.bss:000000000020CB2B                 db    ? ;
.bss:000000000020CB2C                 db    ? ;
.bss:000000000020CB2D                 db    ? ;
.bss:000000000020CB2E                 db    ? ;
.bss:000000000020CB2F                 db    ? ;
.bss:000000000020CB30                 db    ? ;
.bss:000000000020CB31                 db    ? ;
.bss:000000000020CB32                 db    ? ;
.bss:000000000020CB33                 db    ? ;
.bss:000000000020CB34                 db    ? ;
.bss:000000000020CB35                 db    ? ;
.bss:000000000020CB36                 db    ? ;
.bss:000000000020CB37                 db    ? ;
.bss:000000000020CB38                 db    ? ;
.bss:000000000020CB39                 db    ? ;
.bss:000000000020CB3A                 db    ? ;
.bss:000000000020CB3B                 db    ? ;
.bss:000000000020CB3C                 db    ? ;
.bss:000000000020CB3D                 db    ? ;
.bss:000000000020CB3E                 db    ? ;
.bss:000000000020CB3F                 db    ? ;
.bss:000000000020CB40                 db    ? ;
.bss:000000000020CB41                 db    ? ;
.bss:000000000020CB42                 db    ? ;
.bss:000000000020CB43                 db    ? ;
.bss:000000000020CB44                 db    ? ;
.bss:000000000020CB45                 db    ? ;
.bss:000000000020CB46                 db    ? ;
.bss:000000000020CB47                 db    ? ;
.bss:000000000020CB48                 db    ? ;
.bss:000000000020CB49                 db    ? ;
.bss:000000000020CB4A                 db    ? ;
.bss:000000000020CB4B                 db    ? ;
.bss:000000000020CB4C                 db    ? ;
.bss:000000000020CB4D                 db    ? ;
.bss:000000000020CB4E                 db    ? ;
.bss:000000000020CB4F                 db    ? ;
.bss:000000000020CB50                 db    ? ;
.bss:000000000020CB51                 db    ? ;
.bss:000000000020CB52                 db    ? ;
.bss:000000000020CB53                 db    ? ;
.bss:000000000020CB54                 db    ? ;
.bss:000000000020CB55                 db    ? ;
.bss:000000000020CB56                 db    ? ;
.bss:000000000020CB57                 db    ? ;
.bss:000000000020CB58                 db    ? ;
.bss:000000000020CB59                 db    ? ;
.bss:000000000020CB5A                 db    ? ;
.bss:000000000020CB5B                 db    ? ;
.bss:000000000020CB5C                 db    ? ;
.bss:000000000020CB5D                 db    ? ;
.bss:000000000020CB5E                 db    ? ;
.bss:000000000020CB5F                 db    ? ;
.bss:000000000020CB60                 db    ? ;
.bss:000000000020CB61                 db    ? ;
.bss:000000000020CB62                 db    ? ;
.bss:000000000020CB63                 db    ? ;
.bss:000000000020CB64                 db    ? ;
.bss:000000000020CB65                 db    ? ;
.bss:000000000020CB66                 db    ? ;
.bss:000000000020CB67                 db    ? ;
.bss:000000000020CB68                 db    ? ;
.bss:000000000020CB69                 db    ? ;
.bss:000000000020CB6A                 db    ? ;
.bss:000000000020CB6B                 db    ? ;
.bss:000000000020CB6C                 db    ? ;
.bss:000000000020CB6D                 db    ? ;
.bss:000000000020CB6E                 db    ? ;
.bss:000000000020CB6F                 db    ? ;
.bss:000000000020CB70                 db    ? ;
.bss:000000000020CB71                 db    ? ;
.bss:000000000020CB72                 db    ? ;
.bss:000000000020CB73                 db    ? ;
.bss:000000000020CB74                 db    ? ;
.bss:000000000020CB75                 db    ? ;
.bss:000000000020CB76                 db    ? ;
.bss:000000000020CB77                 db    ? ;
.bss:000000000020CB78                 db    ? ;
.bss:000000000020CB79                 db    ? ;
.bss:000000000020CB7A                 db    ? ;
.bss:000000000020CB7B                 db    ? ;
.bss:000000000020CB7C                 db    ? ;
.bss:000000000020CB7D                 db    ? ;
.bss:000000000020CB7E                 db    ? ;
.bss:000000000020CB7F                 db    ? ;
.bss:000000000020CB80                 db    ? ;
.bss:000000000020CB81                 db    ? ;
.bss:000000000020CB82                 db    ? ;
.bss:000000000020CB83                 db    ? ;
.bss:000000000020CB84                 db    ? ;
.bss:000000000020CB85                 db    ? ;
.bss:000000000020CB86                 db    ? ;
.bss:000000000020CB87                 db    ? ;
.bss:000000000020CB88                 db    ? ;
.bss:000000000020CB89                 db    ? ;
.bss:000000000020CB8A                 db    ? ;
.bss:000000000020CB8B                 db    ? ;
.bss:000000000020CB8C                 db    ? ;
.bss:000000000020CB8D                 db    ? ;
.bss:000000000020CB8E                 db    ? ;
.bss:000000000020CB8F                 db    ? ;
.bss:000000000020CB90                 db    ? ;
.bss:000000000020CB91                 db    ? ;
.bss:000000000020CB92                 db    ? ;
.bss:000000000020CB93                 db    ? ;
.bss:000000000020CB94                 db    ? ;
.bss:000000000020CB95                 db    ? ;
.bss:000000000020CB96                 db    ? ;
.bss:000000000020CB97                 db    ? ;
.bss:000000000020CB98                 db    ? ;
.bss:000000000020CB99                 db    ? ;
.bss:000000000020CB9A                 db    ? ;
.bss:000000000020CB9B                 db    ? ;
.bss:000000000020CB9C                 db    ? ;
.bss:000000000020CB9D                 db    ? ;
.bss:000000000020CB9E                 db    ? ;
.bss:000000000020CB9F                 db    ? ;
.bss:000000000020CBA0                 db    ? ;
.bss:000000000020CBA1                 db    ? ;
.bss:000000000020CBA2                 db    ? ;
.bss:000000000020CBA3                 db    ? ;
.bss:000000000020CBA4                 db    ? ;
.bss:000000000020CBA5                 db    ? ;
.bss:000000000020CBA6                 db    ? ;
.bss:000000000020CBA7                 db    ? ;
.bss:000000000020CBA8                 db    ? ;
.bss:000000000020CBA9                 db    ? ;
.bss:000000000020CBAA                 db    ? ;
.bss:000000000020CBAB                 db    ? ;
.bss:000000000020CBAC                 db    ? ;
.bss:000000000020CBAD                 db    ? ;
.bss:000000000020CBAE                 db    ? ;
.bss:000000000020CBAF                 db    ? ;
.bss:000000000020CBB0                 db    ? ;
.bss:000000000020CBB1                 db    ? ;
.bss:000000000020CBB2                 db    ? ;
.bss:000000000020CBB3                 db    ? ;
.bss:000000000020CBB4                 db    ? ;
.bss:000000000020CBB5                 db    ? ;
.bss:000000000020CBB6                 db    ? ;
.bss:000000000020CBB7                 db    ? ;
.bss:000000000020CBB8                 db    ? ;
.bss:000000000020CBB9                 db    ? ;
.bss:000000000020CBBA                 db    ? ;
.bss:000000000020CBBB                 db    ? ;
.bss:000000000020CBBC                 db    ? ;
.bss:000000000020CBBD                 db    ? ;
.bss:000000000020CBBE                 db    ? ;
.bss:000000000020CBBF                 db    ? ;
.bss:000000000020CBC0                 db    ? ;
.bss:000000000020CBC1                 db    ? ;
.bss:000000000020CBC2                 db    ? ;
.bss:000000000020CBC3                 db    ? ;
.bss:000000000020CBC4                 db    ? ;
.bss:000000000020CBC5                 db    ? ;
.bss:000000000020CBC6                 db    ? ;
.bss:000000000020CBC7                 db    ? ;
.bss:000000000020CBC8                 db    ? ;
.bss:000000000020CBC9                 db    ? ;
.bss:000000000020CBCA                 db    ? ;
.bss:000000000020CBCB                 db    ? ;
.bss:000000000020CBCC                 db    ? ;
.bss:000000000020CBCD                 db    ? ;
.bss:000000000020CBCE                 db    ? ;
.bss:000000000020CBCF                 db    ? ;
.bss:000000000020CBD0                 db    ? ;
.bss:000000000020CBD1                 db    ? ;
.bss:000000000020CBD2                 db    ? ;
.bss:000000000020CBD3                 db    ? ;
.bss:000000000020CBD4                 db    ? ;
.bss:000000000020CBD5                 db    ? ;
.bss:000000000020CBD6                 db    ? ;
.bss:000000000020CBD7                 db    ? ;
.bss:000000000020CBD8                 db    ? ;
.bss:000000000020CBD9                 db    ? ;
.bss:000000000020CBDA                 db    ? ;
.bss:000000000020CBDB                 db    ? ;
.bss:000000000020CBDC                 db    ? ;
.bss:000000000020CBDD                 db    ? ;
.bss:000000000020CBDE                 db    ? ;
.bss:000000000020CBDF                 db    ? ;
.bss:000000000020CBE0                 db    ? ;
.bss:000000000020CBE1                 db    ? ;
.bss:000000000020CBE2                 db    ? ;
.bss:000000000020CBE3                 db    ? ;
.bss:000000000020CBE4                 db    ? ;
.bss:000000000020CBE5                 db    ? ;
.bss:000000000020CBE6                 db    ? ;
.bss:000000000020CBE7                 db    ? ;
.bss:000000000020CBE8                 db    ? ;
.bss:000000000020CBE9                 db    ? ;
.bss:000000000020CBEA                 db    ? ;
.bss:000000000020CBEB                 db    ? ;
.bss:000000000020CBEC                 db    ? ;
.bss:000000000020CBED                 db    ? ;
.bss:000000000020CBEE                 db    ? ;
.bss:000000000020CBEF                 db    ? ;
.bss:000000000020CBF0                 db    ? ;
.bss:000000000020CBF1                 db    ? ;
.bss:000000000020CBF2                 db    ? ;
.bss:000000000020CBF3                 db    ? ;
.bss:000000000020CBF4                 db    ? ;
.bss:000000000020CBF5                 db    ? ;
.bss:000000000020CBF6                 db    ? ;
.bss:000000000020CBF7                 db    ? ;
.bss:000000000020CBF8                 db    ? ;
.bss:000000000020CBF9                 db    ? ;
.bss:000000000020CBFA                 db    ? ;
.bss:000000000020CBFB                 db    ? ;
.bss:000000000020CBFC                 db    ? ;
.bss:000000000020CBFD                 db    ? ;
.bss:000000000020CBFE                 db    ? ;
.bss:000000000020CBFF                 db    ? ;
.bss:000000000020CC00                 db    ? ;
.bss:000000000020CC01                 db    ? ;
.bss:000000000020CC02                 db    ? ;
.bss:000000000020CC03                 db    ? ;
.bss:000000000020CC04                 db    ? ;
.bss:000000000020CC05                 db    ? ;
.bss:000000000020CC06                 db    ? ;
.bss:000000000020CC07                 db    ? ;
.bss:000000000020CC08                 db    ? ;
.bss:000000000020CC09                 db    ? ;
.bss:000000000020CC0A                 db    ? ;
.bss:000000000020CC0B                 db    ? ;
.bss:000000000020CC0C                 db    ? ;
.bss:000000000020CC0D                 db    ? ;
.bss:000000000020CC0E                 db    ? ;
.bss:000000000020CC0F                 db    ? ;
.bss:000000000020CC10                 db    ? ;
.bss:000000000020CC11                 db    ? ;
.bss:000000000020CC12                 db    ? ;
.bss:000000000020CC13                 db    ? ;
.bss:000000000020CC14                 db    ? ;
.bss:000000000020CC15                 db    ? ;
.bss:000000000020CC16                 db    ? ;
.bss:000000000020CC17                 db    ? ;
.bss:000000000020CC18                 db    ? ;
.bss:000000000020CC19                 db    ? ;
.bss:000000000020CC1A                 db    ? ;
.bss:000000000020CC1B                 db    ? ;
.bss:000000000020CC1C                 db    ? ;
.bss:000000000020CC1D                 db    ? ;
.bss:000000000020CC1E                 db    ? ;
.bss:000000000020CC1F                 db    ? ;
.bss:000000000020CC20                 db    ? ;
.bss:000000000020CC21                 db    ? ;
.bss:000000000020CC22                 db    ? ;
.bss:000000000020CC23                 db    ? ;
.bss:000000000020CC24                 db    ? ;
.bss:000000000020CC25                 db    ? ;
.bss:000000000020CC26                 db    ? ;
.bss:000000000020CC27                 db    ? ;
.bss:000000000020CC28                 db    ? ;
.bss:000000000020CC29                 db    ? ;
.bss:000000000020CC2A                 db    ? ;
.bss:000000000020CC2B                 db    ? ;
.bss:000000000020CC2C                 db    ? ;
.bss:000000000020CC2D                 db    ? ;
.bss:000000000020CC2E                 db    ? ;
.bss:000000000020CC2F                 db    ? ;
.bss:000000000020CC30                 db    ? ;
.bss:000000000020CC31                 db    ? ;
.bss:000000000020CC32                 db    ? ;
.bss:000000000020CC33                 db    ? ;
.bss:000000000020CC34                 db    ? ;
.bss:000000000020CC35                 db    ? ;
.bss:000000000020CC36                 db    ? ;
.bss:000000000020CC37                 db    ? ;
.bss:000000000020CC38                 db    ? ;
.bss:000000000020CC39                 db    ? ;
.bss:000000000020CC3A                 db    ? ;
.bss:000000000020CC3B                 db    ? ;
.bss:000000000020CC3C                 db    ? ;
.bss:000000000020CC3D                 db    ? ;
.bss:000000000020CC3E                 db    ? ;
.bss:000000000020CC3F                 db    ? ;
.bss:000000000020CC40                 db    ? ;
.bss:000000000020CC41                 db    ? ;
.bss:000000000020CC42                 db    ? ;
.bss:000000000020CC43                 db    ? ;
.bss:000000000020CC44                 db    ? ;
.bss:000000000020CC45                 db    ? ;
.bss:000000000020CC46                 db    ? ;
.bss:000000000020CC47                 db    ? ;
.bss:000000000020CC48                 db    ? ;
.bss:000000000020CC49                 db    ? ;
.bss:000000000020CC4A                 db    ? ;
.bss:000000000020CC4B                 db    ? ;
.bss:000000000020CC4C                 db    ? ;
.bss:000000000020CC4D                 db    ? ;
.bss:000000000020CC4E                 db    ? ;
.bss:000000000020CC4F                 db    ? ;
.bss:000000000020CC50                 db    ? ;
.bss:000000000020CC51                 db    ? ;
.bss:000000000020CC52                 db    ? ;
.bss:000000000020CC53                 db    ? ;
.bss:000000000020CC54                 db    ? ;
.bss:000000000020CC55                 db    ? ;
.bss:000000000020CC56                 db    ? ;
.bss:000000000020CC57                 db    ? ;
.bss:000000000020CC58                 db    ? ;
.bss:000000000020CC59                 db    ? ;
.bss:000000000020CC5A                 db    ? ;
.bss:000000000020CC5B                 db    ? ;
.bss:000000000020CC5C                 db    ? ;
.bss:000000000020CC5D                 db    ? ;
.bss:000000000020CC5E                 db    ? ;
.bss:000000000020CC5F                 db    ? ;
.bss:000000000020CC60                 db    ? ;
.bss:000000000020CC61                 db    ? ;
.bss:000000000020CC62                 db    ? ;
.bss:000000000020CC63                 db    ? ;
.bss:000000000020CC64                 db    ? ;
.bss:000000000020CC65                 db    ? ;
.bss:000000000020CC66                 db    ? ;
.bss:000000000020CC67                 db    ? ;
.bss:000000000020CC68                 db    ? ;
.bss:000000000020CC69                 db    ? ;
.bss:000000000020CC6A                 db    ? ;
.bss:000000000020CC6B                 db    ? ;
.bss:000000000020CC6C                 db    ? ;
.bss:000000000020CC6D                 db    ? ;
.bss:000000000020CC6E                 db    ? ;
.bss:000000000020CC6F                 db    ? ;
.bss:000000000020CC70                 db    ? ;
.bss:000000000020CC71                 db    ? ;
.bss:000000000020CC72                 db    ? ;
.bss:000000000020CC73                 db    ? ;
.bss:000000000020CC74                 db    ? ;
.bss:000000000020CC75                 db    ? ;
.bss:000000000020CC76                 db    ? ;
.bss:000000000020CC77                 db    ? ;
.bss:000000000020CC78                 db    ? ;
.bss:000000000020CC79                 db    ? ;
.bss:000000000020CC7A                 db    ? ;
.bss:000000000020CC7B                 db    ? ;
.bss:000000000020CC7C                 db    ? ;
.bss:000000000020CC7D                 db    ? ;
.bss:000000000020CC7E                 db    ? ;
.bss:000000000020CC7F                 db    ? ;
.bss:000000000020CC80                 db    ? ;
.bss:000000000020CC81                 db    ? ;
.bss:000000000020CC82                 db    ? ;
.bss:000000000020CC83                 db    ? ;
.bss:000000000020CC84                 db    ? ;
.bss:000000000020CC85                 db    ? ;
.bss:000000000020CC86                 db    ? ;
.bss:000000000020CC87                 db    ? ;
.bss:000000000020CC88                 db    ? ;
.bss:000000000020CC89                 db    ? ;
.bss:000000000020CC8A                 db    ? ;
.bss:000000000020CC8B                 db    ? ;
.bss:000000000020CC8C                 db    ? ;
.bss:000000000020CC8D                 db    ? ;
.bss:000000000020CC8E                 db    ? ;
.bss:000000000020CC8F                 db    ? ;
.bss:000000000020CC90                 db    ? ;
.bss:000000000020CC91                 db    ? ;
.bss:000000000020CC92                 db    ? ;
.bss:000000000020CC93                 db    ? ;
.bss:000000000020CC94                 db    ? ;
.bss:000000000020CC95                 db    ? ;
.bss:000000000020CC96                 db    ? ;
.bss:000000000020CC97                 db    ? ;
.bss:000000000020CC98                 db    ? ;
.bss:000000000020CC99                 db    ? ;
.bss:000000000020CC9A                 db    ? ;
.bss:000000000020CC9B                 db    ? ;
.bss:000000000020CC9C                 db    ? ;
.bss:000000000020CC9D                 db    ? ;
.bss:000000000020CC9E                 db    ? ;
.bss:000000000020CC9F                 db    ? ;
.bss:000000000020CCA0                 db    ? ;
.bss:000000000020CCA1                 db    ? ;
.bss:000000000020CCA2                 db    ? ;
.bss:000000000020CCA3                 db    ? ;
.bss:000000000020CCA4                 db    ? ;
.bss:000000000020CCA5                 db    ? ;
.bss:000000000020CCA6                 db    ? ;
.bss:000000000020CCA7                 db    ? ;
.bss:000000000020CCA8                 db    ? ;
.bss:000000000020CCA9                 db    ? ;
.bss:000000000020CCAA                 db    ? ;
.bss:000000000020CCAB                 db    ? ;
.bss:000000000020CCAC                 db    ? ;
.bss:000000000020CCAD                 db    ? ;
.bss:000000000020CCAE                 db    ? ;
.bss:000000000020CCAF                 db    ? ;
.bss:000000000020CCB0                 db    ? ;
.bss:000000000020CCB1                 db    ? ;
.bss:000000000020CCB2                 db    ? ;
.bss:000000000020CCB3                 db    ? ;
.bss:000000000020CCB4                 db    ? ;
.bss:000000000020CCB5                 db    ? ;
.bss:000000000020CCB6                 db    ? ;
.bss:000000000020CCB7                 db    ? ;
.bss:000000000020CCB8                 db    ? ;
.bss:000000000020CCB9                 db    ? ;
.bss:000000000020CCBA                 db    ? ;
.bss:000000000020CCBB                 db    ? ;
.bss:000000000020CCBC                 db    ? ;
.bss:000000000020CCBD                 db    ? ;
.bss:000000000020CCBE                 db    ? ;
.bss:000000000020CCBF                 db    ? ;
.bss:000000000020CCC0                 db    ? ;
.bss:000000000020CCC1                 db    ? ;
.bss:000000000020CCC2                 db    ? ;
.bss:000000000020CCC3                 db    ? ;
.bss:000000000020CCC4                 db    ? ;
.bss:000000000020CCC5                 db    ? ;
.bss:000000000020CCC6                 db    ? ;
.bss:000000000020CCC7                 db    ? ;
.bss:000000000020CCC8                 db    ? ;
.bss:000000000020CCC9                 db    ? ;
.bss:000000000020CCCA                 db    ? ;
.bss:000000000020CCCB                 db    ? ;
.bss:000000000020CCCC                 db    ? ;
.bss:000000000020CCCD                 db    ? ;
.bss:000000000020CCCE                 db    ? ;
.bss:000000000020CCCF                 db    ? ;
.bss:000000000020CCD0                 db    ? ;
.bss:000000000020CCD1                 db    ? ;
.bss:000000000020CCD2                 db    ? ;
.bss:000000000020CCD3                 db    ? ;
.bss:000000000020CCD4                 db    ? ;
.bss:000000000020CCD5                 db    ? ;
.bss:000000000020CCD6                 db    ? ;
.bss:000000000020CCD7                 db    ? ;
.bss:000000000020CCD8                 db    ? ;
.bss:000000000020CCD9                 db    ? ;
.bss:000000000020CCDA                 db    ? ;
.bss:000000000020CCDB                 db    ? ;
.bss:000000000020CCDC                 db    ? ;
.bss:000000000020CCDD                 db    ? ;
.bss:000000000020CCDE                 db    ? ;
.bss:000000000020CCDF                 db    ? ;
.bss:000000000020CCE0                 db    ? ;
.bss:000000000020CCE1                 db    ? ;
.bss:000000000020CCE2                 db    ? ;
.bss:000000000020CCE3                 db    ? ;
.bss:000000000020CCE4                 db    ? ;
.bss:000000000020CCE5                 db    ? ;
.bss:000000000020CCE6                 db    ? ;
.bss:000000000020CCE7                 db    ? ;
.bss:000000000020CCE8                 db    ? ;
.bss:000000000020CCE9                 db    ? ;
.bss:000000000020CCEA                 db    ? ;
.bss:000000000020CCEB                 db    ? ;
.bss:000000000020CCEC                 db    ? ;
.bss:000000000020CCED                 db    ? ;
.bss:000000000020CCEE                 db    ? ;
.bss:000000000020CCEF                 db    ? ;
.bss:000000000020CCF0                 db    ? ;
.bss:000000000020CCF1                 db    ? ;
.bss:000000000020CCF2                 db    ? ;
.bss:000000000020CCF3                 db    ? ;
.bss:000000000020CCF4                 db    ? ;
.bss:000000000020CCF5                 db    ? ;
.bss:000000000020CCF6                 db    ? ;
.bss:000000000020CCF7                 db    ? ;
.bss:000000000020CCF8                 db    ? ;
.bss:000000000020CCF9                 db    ? ;
.bss:000000000020CCFA                 db    ? ;
.bss:000000000020CCFB                 db    ? ;
.bss:000000000020CCFC                 db    ? ;
.bss:000000000020CCFD                 db    ? ;
.bss:000000000020CCFE                 db    ? ;
.bss:000000000020CCFF                 db    ? ;
.bss:000000000020CD00                 db    ? ;
.bss:000000000020CD01                 db    ? ;
.bss:000000000020CD02                 db    ? ;
.bss:000000000020CD03                 db    ? ;
.bss:000000000020CD04                 db    ? ;
.bss:000000000020CD05                 db    ? ;
.bss:000000000020CD06                 db    ? ;
.bss:000000000020CD07                 db    ? ;
.bss:000000000020CD08                 db    ? ;
.bss:000000000020CD09                 db    ? ;
.bss:000000000020CD0A                 db    ? ;
.bss:000000000020CD0B                 db    ? ;
.bss:000000000020CD0C                 db    ? ;
.bss:000000000020CD0D                 db    ? ;
.bss:000000000020CD0E                 db    ? ;
.bss:000000000020CD0F                 db    ? ;
.bss:000000000020CD10                 db    ? ;
.bss:000000000020CD11                 db    ? ;
.bss:000000000020CD12                 db    ? ;
.bss:000000000020CD13                 db    ? ;
.bss:000000000020CD14                 db    ? ;
.bss:000000000020CD15                 db    ? ;
.bss:000000000020CD16                 db    ? ;
.bss:000000000020CD17                 db    ? ;
.bss:000000000020CD18                 db    ? ;
.bss:000000000020CD19                 db    ? ;
.bss:000000000020CD1A                 db    ? ;
.bss:000000000020CD1B                 db    ? ;
.bss:000000000020CD1C                 db    ? ;
.bss:000000000020CD1D                 db    ? ;
.bss:000000000020CD1E                 db    ? ;
.bss:000000000020CD1F                 db    ? ;
.bss:000000000020CD20                 db    ? ;
.bss:000000000020CD21                 db    ? ;
.bss:000000000020CD22                 db    ? ;
.bss:000000000020CD23                 db    ? ;
.bss:000000000020CD24                 db    ? ;
.bss:000000000020CD25                 db    ? ;
.bss:000000000020CD26                 db    ? ;
.bss:000000000020CD27                 db    ? ;
.bss:000000000020CD28                 db    ? ;
.bss:000000000020CD29                 db    ? ;
.bss:000000000020CD2A                 db    ? ;
.bss:000000000020CD2B                 db    ? ;
.bss:000000000020CD2C                 db    ? ;
.bss:000000000020CD2D                 db    ? ;
.bss:000000000020CD2E                 db    ? ;
.bss:000000000020CD2F                 db    ? ;
.bss:000000000020CD30                 db    ? ;
.bss:000000000020CD31                 db    ? ;
.bss:000000000020CD32                 db    ? ;
.bss:000000000020CD33                 db    ? ;
.bss:000000000020CD34                 db    ? ;
.bss:000000000020CD35                 db    ? ;
.bss:000000000020CD36                 db    ? ;
.bss:000000000020CD37                 db    ? ;
.bss:000000000020CD38                 db    ? ;
.bss:000000000020CD39                 db    ? ;
.bss:000000000020CD3A                 db    ? ;
.bss:000000000020CD3B                 db    ? ;
.bss:000000000020CD3C                 db    ? ;
.bss:000000000020CD3D                 db    ? ;
.bss:000000000020CD3E                 db    ? ;
.bss:000000000020CD3F                 db    ? ;
.bss:000000000020CD40                 db    ? ;
.bss:000000000020CD41                 db    ? ;
.bss:000000000020CD42                 db    ? ;
.bss:000000000020CD43                 db    ? ;
.bss:000000000020CD44                 db    ? ;
.bss:000000000020CD45                 db    ? ;
.bss:000000000020CD46                 db    ? ;
.bss:000000000020CD47                 db    ? ;
.bss:000000000020CD48                 db    ? ;
.bss:000000000020CD49                 db    ? ;
.bss:000000000020CD4A                 db    ? ;
.bss:000000000020CD4B                 db    ? ;
.bss:000000000020CD4C                 db    ? ;
.bss:000000000020CD4D                 db    ? ;
.bss:000000000020CD4E                 db    ? ;
.bss:000000000020CD4F                 db    ? ;
.bss:000000000020CD50                 db    ? ;
.bss:000000000020CD51                 db    ? ;
.bss:000000000020CD52                 db    ? ;
.bss:000000000020CD53                 db    ? ;
.bss:000000000020CD54                 db    ? ;
.bss:000000000020CD55                 db    ? ;
.bss:000000000020CD56                 db    ? ;
.bss:000000000020CD57                 db    ? ;
.bss:000000000020CD58                 db    ? ;
.bss:000000000020CD59                 db    ? ;
.bss:000000000020CD5A                 db    ? ;
.bss:000000000020CD5B                 db    ? ;
.bss:000000000020CD5C                 db    ? ;
.bss:000000000020CD5D                 db    ? ;
.bss:000000000020CD5E                 db    ? ;
.bss:000000000020CD5F                 db    ? ;
.bss:000000000020CD60                 db    ? ;
.bss:000000000020CD61                 db    ? ;
.bss:000000000020CD62                 db    ? ;
.bss:000000000020CD63                 db    ? ;
.bss:000000000020CD64                 db    ? ;
.bss:000000000020CD65                 db    ? ;
.bss:000000000020CD66                 db    ? ;
.bss:000000000020CD67                 db    ? ;
.bss:000000000020CD68                 db    ? ;
.bss:000000000020CD69                 db    ? ;
.bss:000000000020CD6A                 db    ? ;
.bss:000000000020CD6B                 db    ? ;
.bss:000000000020CD6C                 db    ? ;
.bss:000000000020CD6D                 db    ? ;
.bss:000000000020CD6E                 db    ? ;
.bss:000000000020CD6F                 db    ? ;
.bss:000000000020CD70                 db    ? ;
.bss:000000000020CD71                 db    ? ;
.bss:000000000020CD72                 db    ? ;
.bss:000000000020CD73                 db    ? ;
.bss:000000000020CD74                 db    ? ;
.bss:000000000020CD75                 db    ? ;
.bss:000000000020CD76                 db    ? ;
.bss:000000000020CD77                 db    ? ;
.bss:000000000020CD78                 db    ? ;
.bss:000000000020CD79                 db    ? ;
.bss:000000000020CD7A                 db    ? ;
.bss:000000000020CD7B                 db    ? ;
.bss:000000000020CD7C                 db    ? ;
.bss:000000000020CD7D                 db    ? ;
.bss:000000000020CD7E                 db    ? ;
.bss:000000000020CD7F                 db    ? ;
.bss:000000000020CD80                 db    ? ;
.bss:000000000020CD81                 db    ? ;
.bss:000000000020CD82                 db    ? ;
.bss:000000000020CD83                 db    ? ;
.bss:000000000020CD84                 db    ? ;
.bss:000000000020CD85                 db    ? ;
.bss:000000000020CD86                 db    ? ;
.bss:000000000020CD87                 db    ? ;
.bss:000000000020CD88                 db    ? ;
.bss:000000000020CD89                 db    ? ;
.bss:000000000020CD8A                 db    ? ;
.bss:000000000020CD8B                 db    ? ;
.bss:000000000020CD8C                 db    ? ;
.bss:000000000020CD8D                 db    ? ;
.bss:000000000020CD8E                 db    ? ;
.bss:000000000020CD8F                 db    ? ;
.bss:000000000020CD90                 db    ? ;
.bss:000000000020CD91                 db    ? ;
.bss:000000000020CD92                 db    ? ;
.bss:000000000020CD93                 db    ? ;
.bss:000000000020CD94                 db    ? ;
.bss:000000000020CD95                 db    ? ;
.bss:000000000020CD96                 db    ? ;
.bss:000000000020CD97                 db    ? ;
.bss:000000000020CD98                 db    ? ;
.bss:000000000020CD99                 db    ? ;
.bss:000000000020CD9A                 db    ? ;
.bss:000000000020CD9B                 db    ? ;
.bss:000000000020CD9C                 db    ? ;
.bss:000000000020CD9D                 db    ? ;
.bss:000000000020CD9E                 db    ? ;
.bss:000000000020CD9F                 db    ? ;
.bss:000000000020CDA0                 db    ? ;
.bss:000000000020CDA1                 db    ? ;
.bss:000000000020CDA2                 db    ? ;
.bss:000000000020CDA3                 db    ? ;
.bss:000000000020CDA4                 db    ? ;
.bss:000000000020CDA5                 db    ? ;
.bss:000000000020CDA6                 db    ? ;
.bss:000000000020CDA7                 db    ? ;
.bss:000000000020CDA8                 db    ? ;
.bss:000000000020CDA9                 db    ? ;
.bss:000000000020CDAA                 db    ? ;
.bss:000000000020CDAB                 db    ? ;
.bss:000000000020CDAC                 db    ? ;
.bss:000000000020CDAD                 db    ? ;
.bss:000000000020CDAE                 db    ? ;
.bss:000000000020CDAF                 db    ? ;
.bss:000000000020CDB0                 db    ? ;
.bss:000000000020CDB1                 db    ? ;
.bss:000000000020CDB2                 db    ? ;
.bss:000000000020CDB3                 db    ? ;
.bss:000000000020CDB4                 db    ? ;
.bss:000000000020CDB5                 db    ? ;
.bss:000000000020CDB6                 db    ? ;
.bss:000000000020CDB7                 db    ? ;
.bss:000000000020CDB8                 db    ? ;
.bss:000000000020CDB9                 db    ? ;
.bss:000000000020CDBA                 db    ? ;
.bss:000000000020CDBB                 db    ? ;
.bss:000000000020CDBC                 db    ? ;
.bss:000000000020CDBD                 db    ? ;
.bss:000000000020CDBE                 db    ? ;
.bss:000000000020CDBF                 db    ? ;
.bss:000000000020CDC0                 db    ? ;
.bss:000000000020CDC1                 db    ? ;
.bss:000000000020CDC2                 db    ? ;
.bss:000000000020CDC3                 db    ? ;
.bss:000000000020CDC4                 db    ? ;
.bss:000000000020CDC5                 db    ? ;
.bss:000000000020CDC6                 db    ? ;
.bss:000000000020CDC7                 db    ? ;
.bss:000000000020CDC8                 db    ? ;
.bss:000000000020CDC9                 db    ? ;
.bss:000000000020CDCA                 db    ? ;
.bss:000000000020CDCB                 db    ? ;
.bss:000000000020CDCC                 db    ? ;
.bss:000000000020CDCD                 db    ? ;
.bss:000000000020CDCE                 db    ? ;
.bss:000000000020CDCF                 db    ? ;
.bss:000000000020CDD0                 db    ? ;
.bss:000000000020CDD1                 db    ? ;
.bss:000000000020CDD2                 db    ? ;
.bss:000000000020CDD3                 db    ? ;
.bss:000000000020CDD4                 db    ? ;
.bss:000000000020CDD5                 db    ? ;
.bss:000000000020CDD6                 db    ? ;
.bss:000000000020CDD7                 db    ? ;
.bss:000000000020CDD8                 db    ? ;
.bss:000000000020CDD9                 db    ? ;
.bss:000000000020CDDA                 db    ? ;
.bss:000000000020CDDB                 db    ? ;
.bss:000000000020CDDC                 db    ? ;
.bss:000000000020CDDD                 db    ? ;
.bss:000000000020CDDE                 db    ? ;
.bss:000000000020CDDF                 db    ? ;
.bss:000000000020CDE0                 db    ? ;
.bss:000000000020CDE1                 db    ? ;
.bss:000000000020CDE2                 db    ? ;
.bss:000000000020CDE3                 db    ? ;
.bss:000000000020CDE4                 db    ? ;
.bss:000000000020CDE5                 db    ? ;
.bss:000000000020CDE6                 db    ? ;
.bss:000000000020CDE7                 db    ? ;
.bss:000000000020CDE8                 db    ? ;
.bss:000000000020CDE9                 db    ? ;
.bss:000000000020CDEA                 db    ? ;
.bss:000000000020CDEB                 db    ? ;
.bss:000000000020CDEC                 db    ? ;
.bss:000000000020CDED                 db    ? ;
.bss:000000000020CDEE                 db    ? ;
.bss:000000000020CDEF                 db    ? ;
.bss:000000000020CDF0                 db    ? ;
.bss:000000000020CDF1                 db    ? ;
.bss:000000000020CDF2                 db    ? ;
.bss:000000000020CDF3                 db    ? ;
.bss:000000000020CDF4                 db    ? ;
.bss:000000000020CDF5                 db    ? ;
.bss:000000000020CDF6                 db    ? ;
.bss:000000000020CDF7                 db    ? ;
.bss:000000000020CDF8                 db    ? ;
.bss:000000000020CDF9                 db    ? ;
.bss:000000000020CDFA                 db    ? ;
.bss:000000000020CDFB                 db    ? ;
.bss:000000000020CDFC                 db    ? ;
.bss:000000000020CDFD                 db    ? ;
.bss:000000000020CDFE                 db    ? ;
.bss:000000000020CDFF                 db    ? ;
.bss:000000000020CE00                 db    ? ;
.bss:000000000020CE01                 db    ? ;
.bss:000000000020CE02                 db    ? ;
.bss:000000000020CE03                 db    ? ;
.bss:000000000020CE04                 db    ? ;
.bss:000000000020CE05                 db    ? ;
.bss:000000000020CE06                 db    ? ;
.bss:000000000020CE07                 db    ? ;
.bss:000000000020CE08                 db    ? ;
.bss:000000000020CE09                 db    ? ;
.bss:000000000020CE0A                 db    ? ;
.bss:000000000020CE0B                 db    ? ;
.bss:000000000020CE0C                 db    ? ;
.bss:000000000020CE0D                 db    ? ;
.bss:000000000020CE0E                 db    ? ;
.bss:000000000020CE0F                 db    ? ;
.bss:000000000020CE10                 db    ? ;
.bss:000000000020CE11                 db    ? ;
.bss:000000000020CE12                 db    ? ;
.bss:000000000020CE13                 db    ? ;
.bss:000000000020CE14                 db    ? ;
.bss:000000000020CE15                 db    ? ;
.bss:000000000020CE16                 db    ? ;
.bss:000000000020CE17                 db    ? ;
.bss:000000000020CE18                 db    ? ;
.bss:000000000020CE19                 db    ? ;
.bss:000000000020CE1A                 db    ? ;
.bss:000000000020CE1B                 db    ? ;
.bss:000000000020CE1C                 db    ? ;
.bss:000000000020CE1D                 db    ? ;
.bss:000000000020CE1E                 db    ? ;
.bss:000000000020CE1F                 db    ? ;
.bss:000000000020CE20                 db    ? ;
.bss:000000000020CE21                 db    ? ;
.bss:000000000020CE22                 db    ? ;
.bss:000000000020CE23                 db    ? ;
.bss:000000000020CE24                 db    ? ;
.bss:000000000020CE25                 db    ? ;
.bss:000000000020CE26                 db    ? ;
.bss:000000000020CE27                 db    ? ;
.bss:000000000020CE28                 db    ? ;
.bss:000000000020CE29                 db    ? ;
.bss:000000000020CE2A                 db    ? ;
.bss:000000000020CE2B                 db    ? ;
.bss:000000000020CE2C                 db    ? ;
.bss:000000000020CE2D                 db    ? ;
.bss:000000000020CE2E                 db    ? ;
.bss:000000000020CE2F                 db    ? ;
.bss:000000000020CE30                 db    ? ;
.bss:000000000020CE31                 db    ? ;
.bss:000000000020CE32                 db    ? ;
.bss:000000000020CE33                 db    ? ;
.bss:000000000020CE34                 db    ? ;
.bss:000000000020CE35                 db    ? ;
.bss:000000000020CE36                 db    ? ;
.bss:000000000020CE37                 db    ? ;
.bss:000000000020CE38                 db    ? ;
.bss:000000000020CE39                 db    ? ;
.bss:000000000020CE3A                 db    ? ;
.bss:000000000020CE3B                 db    ? ;
.bss:000000000020CE3C                 db    ? ;
.bss:000000000020CE3D                 db    ? ;
.bss:000000000020CE3E                 db    ? ;
.bss:000000000020CE3F                 db    ? ;
.bss:000000000020CE40                 db    ? ;
.bss:000000000020CE41                 db    ? ;
.bss:000000000020CE42                 db    ? ;
.bss:000000000020CE43                 db    ? ;
.bss:000000000020CE44                 db    ? ;
.bss:000000000020CE45                 db    ? ;
.bss:000000000020CE46                 db    ? ;
.bss:000000000020CE47                 db    ? ;
.bss:000000000020CE48                 db    ? ;
.bss:000000000020CE49                 db    ? ;
.bss:000000000020CE4A                 db    ? ;
.bss:000000000020CE4B                 db    ? ;
.bss:000000000020CE4C                 db    ? ;
.bss:000000000020CE4D                 db    ? ;
.bss:000000000020CE4E                 db    ? ;
.bss:000000000020CE4F                 db    ? ;
.bss:000000000020CE50                 db    ? ;
.bss:000000000020CE51                 db    ? ;
.bss:000000000020CE52                 db    ? ;
.bss:000000000020CE53                 db    ? ;
.bss:000000000020CE54                 db    ? ;
.bss:000000000020CE55                 db    ? ;
.bss:000000000020CE56                 db    ? ;
.bss:000000000020CE57                 db    ? ;
.bss:000000000020CE58                 db    ? ;
.bss:000000000020CE59                 db    ? ;
.bss:000000000020CE5A                 db    ? ;
.bss:000000000020CE5B                 db    ? ;
.bss:000000000020CE5C                 db    ? ;
.bss:000000000020CE5D                 db    ? ;
.bss:000000000020CE5E                 db    ? ;
.bss:000000000020CE5F                 db    ? ;
.bss:000000000020CE60                 db    ? ;
.bss:000000000020CE61                 db    ? ;
.bss:000000000020CE62                 db    ? ;
.bss:000000000020CE63                 db    ? ;
.bss:000000000020CE64                 db    ? ;
.bss:000000000020CE65                 db    ? ;
.bss:000000000020CE66                 db    ? ;
.bss:000000000020CE67                 db    ? ;
.bss:000000000020CE68                 db    ? ;
.bss:000000000020CE69                 db    ? ;
.bss:000000000020CE6A                 db    ? ;
.bss:000000000020CE6B                 db    ? ;
.bss:000000000020CE6C                 db    ? ;
.bss:000000000020CE6D                 db    ? ;
.bss:000000000020CE6E                 db    ? ;
.bss:000000000020CE6F                 db    ? ;
.bss:000000000020CE70                 db    ? ;
.bss:000000000020CE71                 db    ? ;
.bss:000000000020CE72                 db    ? ;
.bss:000000000020CE73                 db    ? ;
.bss:000000000020CE74                 db    ? ;
.bss:000000000020CE75                 db    ? ;
.bss:000000000020CE76                 db    ? ;
.bss:000000000020CE77                 db    ? ;
.bss:000000000020CE78                 db    ? ;
.bss:000000000020CE79                 db    ? ;
.bss:000000000020CE7A                 db    ? ;
.bss:000000000020CE7B                 db    ? ;
.bss:000000000020CE7C                 db    ? ;
.bss:000000000020CE7D                 db    ? ;
.bss:000000000020CE7E                 db    ? ;
.bss:000000000020CE7F                 db    ? ;
.bss:000000000020CE80                 db    ? ;
.bss:000000000020CE81                 db    ? ;
.bss:000000000020CE82                 db    ? ;
.bss:000000000020CE83                 db    ? ;
.bss:000000000020CE84                 db    ? ;
.bss:000000000020CE85                 db    ? ;
.bss:000000000020CE86                 db    ? ;
.bss:000000000020CE87                 db    ? ;
.bss:000000000020CE88                 db    ? ;
.bss:000000000020CE89                 db    ? ;
.bss:000000000020CE8A                 db    ? ;
.bss:000000000020CE8B                 db    ? ;
.bss:000000000020CE8C                 db    ? ;
.bss:000000000020CE8D                 db    ? ;
.bss:000000000020CE8E                 db    ? ;
.bss:000000000020CE8F                 db    ? ;
.bss:000000000020CE90                 db    ? ;
.bss:000000000020CE91                 db    ? ;
.bss:000000000020CE92                 db    ? ;
.bss:000000000020CE93                 db    ? ;
.bss:000000000020CE94                 db    ? ;
.bss:000000000020CE95                 db    ? ;
.bss:000000000020CE96                 db    ? ;
.bss:000000000020CE97                 db    ? ;
.bss:000000000020CE98                 db    ? ;
.bss:000000000020CE99                 db    ? ;
.bss:000000000020CE9A                 db    ? ;
.bss:000000000020CE9B                 db    ? ;
.bss:000000000020CE9C                 db    ? ;
.bss:000000000020CE9D                 db    ? ;
.bss:000000000020CE9E                 db    ? ;
.bss:000000000020CE9F                 db    ? ;
.bss:000000000020CEA0                 db    ? ;
.bss:000000000020CEA1                 db    ? ;
.bss:000000000020CEA2                 db    ? ;
.bss:000000000020CEA3                 db    ? ;
.bss:000000000020CEA4                 db    ? ;
.bss:000000000020CEA5                 db    ? ;
.bss:000000000020CEA6                 db    ? ;
.bss:000000000020CEA7                 db    ? ;
.bss:000000000020CEA8                 db    ? ;
.bss:000000000020CEA9                 db    ? ;
.bss:000000000020CEAA                 db    ? ;
.bss:000000000020CEAB                 db    ? ;
.bss:000000000020CEAC                 db    ? ;
.bss:000000000020CEAD                 db    ? ;
.bss:000000000020CEAE                 db    ? ;
.bss:000000000020CEAF                 db    ? ;
.bss:000000000020CEB0                 db    ? ;
.bss:000000000020CEB1                 db    ? ;
.bss:000000000020CEB2                 db    ? ;
.bss:000000000020CEB3                 db    ? ;
.bss:000000000020CEB4                 db    ? ;
.bss:000000000020CEB5                 db    ? ;
.bss:000000000020CEB6                 db    ? ;
.bss:000000000020CEB7                 db    ? ;
.bss:000000000020CEB8                 db    ? ;
.bss:000000000020CEB9                 db    ? ;
.bss:000000000020CEBA                 db    ? ;
.bss:000000000020CEBB                 db    ? ;
.bss:000000000020CEBC                 db    ? ;
.bss:000000000020CEBD                 db    ? ;
.bss:000000000020CEBE                 db    ? ;
.bss:000000000020CEBF                 db    ? ;
.bss:000000000020CEC0                 db    ? ;
.bss:000000000020CEC1                 db    ? ;
.bss:000000000020CEC2                 db    ? ;
.bss:000000000020CEC3                 db    ? ;
.bss:000000000020CEC4                 db    ? ;
.bss:000000000020CEC5                 db    ? ;
.bss:000000000020CEC6                 db    ? ;
.bss:000000000020CEC7                 db    ? ;
.bss:000000000020CEC8                 db    ? ;
.bss:000000000020CEC9                 db    ? ;
.bss:000000000020CECA                 db    ? ;
.bss:000000000020CECB                 db    ? ;
.bss:000000000020CECC                 db    ? ;
.bss:000000000020CECD                 db    ? ;
.bss:000000000020CECE                 db    ? ;
.bss:000000000020CECF                 db    ? ;
.bss:000000000020CED0                 db    ? ;
.bss:000000000020CED1                 db    ? ;
.bss:000000000020CED2                 db    ? ;
.bss:000000000020CED3                 db    ? ;
.bss:000000000020CED4                 db    ? ;
.bss:000000000020CED5                 db    ? ;
.bss:000000000020CED6                 db    ? ;
.bss:000000000020CED7                 db    ? ;
.bss:000000000020CED8                 db    ? ;
.bss:000000000020CED9                 db    ? ;
.bss:000000000020CEDA                 db    ? ;
.bss:000000000020CEDB                 db    ? ;
.bss:000000000020CEDC                 db    ? ;
.bss:000000000020CEDD                 db    ? ;
.bss:000000000020CEDE                 db    ? ;
.bss:000000000020CEDF                 db    ? ;
.bss:000000000020CEE0                 db    ? ;
.bss:000000000020CEE1                 db    ? ;
.bss:000000000020CEE2                 db    ? ;
.bss:000000000020CEE3                 db    ? ;
.bss:000000000020CEE4                 db    ? ;
.bss:000000000020CEE5                 db    ? ;
.bss:000000000020CEE6                 db    ? ;
.bss:000000000020CEE7                 db    ? ;
.bss:000000000020CEE8                 db    ? ;
.bss:000000000020CEE9                 db    ? ;
.bss:000000000020CEEA                 db    ? ;
.bss:000000000020CEEB                 db    ? ;
.bss:000000000020CEEC                 db    ? ;
.bss:000000000020CEED                 db    ? ;
.bss:000000000020CEEE                 db    ? ;
.bss:000000000020CEEF                 db    ? ;
.bss:000000000020CEF0                 db    ? ;
.bss:000000000020CEF1                 db    ? ;
.bss:000000000020CEF2                 db    ? ;
.bss:000000000020CEF3                 db    ? ;
.bss:000000000020CEF4                 db    ? ;
.bss:000000000020CEF5                 db    ? ;
.bss:000000000020CEF6                 db    ? ;
.bss:000000000020CEF7                 db    ? ;
.bss:000000000020CEF8                 db    ? ;
.bss:000000000020CEF9                 db    ? ;
.bss:000000000020CEFA                 db    ? ;
.bss:000000000020CEFB                 db    ? ;
.bss:000000000020CEFC                 db    ? ;
.bss:000000000020CEFD                 db    ? ;
.bss:000000000020CEFE                 db    ? ;
.bss:000000000020CEFF                 db    ? ;
.bss:000000000020CF00                 db    ? ;
.bss:000000000020CF01                 db    ? ;
.bss:000000000020CF02                 db    ? ;
.bss:000000000020CF03                 db    ? ;
.bss:000000000020CF04                 db    ? ;
.bss:000000000020CF05                 db    ? ;
.bss:000000000020CF06                 db    ? ;
.bss:000000000020CF07                 db    ? ;
.bss:000000000020CF08                 db    ? ;
.bss:000000000020CF09                 db    ? ;
.bss:000000000020CF0A                 db    ? ;
.bss:000000000020CF0B                 db    ? ;
.bss:000000000020CF0C                 db    ? ;
.bss:000000000020CF0D                 db    ? ;
.bss:000000000020CF0E                 db    ? ;
.bss:000000000020CF0F                 db    ? ;
.bss:000000000020CF10                 db    ? ;
.bss:000000000020CF11                 db    ? ;
.bss:000000000020CF12                 db    ? ;
.bss:000000000020CF13                 db    ? ;
.bss:000000000020CF14                 db    ? ;
.bss:000000000020CF15                 db    ? ;
.bss:000000000020CF16                 db    ? ;
.bss:000000000020CF17                 db    ? ;
.bss:000000000020CF18                 db    ? ;
.bss:000000000020CF19                 db    ? ;
.bss:000000000020CF1A                 db    ? ;
.bss:000000000020CF1B                 db    ? ;
.bss:000000000020CF1C                 db    ? ;
.bss:000000000020CF1D                 db    ? ;
.bss:000000000020CF1E                 db    ? ;
.bss:000000000020CF1F                 db    ? ;
.bss:000000000020CF20                 db    ? ;
.bss:000000000020CF21                 db    ? ;
.bss:000000000020CF22                 db    ? ;
.bss:000000000020CF23                 db    ? ;
.bss:000000000020CF24                 db    ? ;
.bss:000000000020CF25                 db    ? ;
.bss:000000000020CF26                 db    ? ;
.bss:000000000020CF27                 db    ? ;
.bss:000000000020CF28                 db    ? ;
.bss:000000000020CF29                 db    ? ;
.bss:000000000020CF2A                 db    ? ;
.bss:000000000020CF2B                 db    ? ;
.bss:000000000020CF2C                 db    ? ;
.bss:000000000020CF2D                 db    ? ;
.bss:000000000020CF2E                 db    ? ;
.bss:000000000020CF2F                 db    ? ;
.bss:000000000020CF30                 db    ? ;
.bss:000000000020CF31                 db    ? ;
.bss:000000000020CF32                 db    ? ;
.bss:000000000020CF33                 db    ? ;
.bss:000000000020CF34                 db    ? ;
.bss:000000000020CF35                 db    ? ;
.bss:000000000020CF36                 db    ? ;
.bss:000000000020CF37                 db    ? ;
.bss:000000000020CF38                 db    ? ;
.bss:000000000020CF39                 db    ? ;
.bss:000000000020CF3A                 db    ? ;
.bss:000000000020CF3B                 db    ? ;
.bss:000000000020CF3C                 db    ? ;
.bss:000000000020CF3D                 db    ? ;
.bss:000000000020CF3E                 db    ? ;
.bss:000000000020CF3F                 db    ? ;
.bss:000000000020CF40                 db    ? ;
.bss:000000000020CF41                 db    ? ;
.bss:000000000020CF42                 db    ? ;
.bss:000000000020CF43                 db    ? ;
.bss:000000000020CF44                 db    ? ;
.bss:000000000020CF45                 db    ? ;
.bss:000000000020CF46                 db    ? ;
.bss:000000000020CF47                 db    ? ;
.bss:000000000020CF48                 db    ? ;
.bss:000000000020CF49                 db    ? ;
.bss:000000000020CF4A                 db    ? ;
.bss:000000000020CF4B                 db    ? ;
.bss:000000000020CF4C                 db    ? ;
.bss:000000000020CF4D                 db    ? ;
.bss:000000000020CF4E                 db    ? ;
.bss:000000000020CF4F                 db    ? ;
.bss:000000000020CF50                 db    ? ;
.bss:000000000020CF51                 db    ? ;
.bss:000000000020CF52                 db    ? ;
.bss:000000000020CF53                 db    ? ;
.bss:000000000020CF54                 db    ? ;
.bss:000000000020CF55                 db    ? ;
.bss:000000000020CF56                 db    ? ;
.bss:000000000020CF57                 db    ? ;
.bss:000000000020CF58                 db    ? ;
.bss:000000000020CF59                 db    ? ;
.bss:000000000020CF5A                 db    ? ;
.bss:000000000020CF5B                 db    ? ;
.bss:000000000020CF5C                 db    ? ;
.bss:000000000020CF5D                 db    ? ;
.bss:000000000020CF5E                 db    ? ;
.bss:000000000020CF5F                 db    ? ;
.bss:000000000020CF60                 db    ? ;
.bss:000000000020CF61                 db    ? ;
.bss:000000000020CF62                 db    ? ;
.bss:000000000020CF63                 db    ? ;
.bss:000000000020CF64                 db    ? ;
.bss:000000000020CF65                 db    ? ;
.bss:000000000020CF66                 db    ? ;
.bss:000000000020CF67                 db    ? ;
.bss:000000000020CF68                 db    ? ;
.bss:000000000020CF69                 db    ? ;
.bss:000000000020CF6A                 db    ? ;
.bss:000000000020CF6B                 db    ? ;
.bss:000000000020CF6C                 db    ? ;
.bss:000000000020CF6D                 db    ? ;
.bss:000000000020CF6E                 db    ? ;
.bss:000000000020CF6F                 db    ? ;
.bss:000000000020CF70                 db    ? ;
.bss:000000000020CF71                 db    ? ;
.bss:000000000020CF72                 db    ? ;
.bss:000000000020CF73                 db    ? ;
.bss:000000000020CF74                 db    ? ;
.bss:000000000020CF75                 db    ? ;
.bss:000000000020CF76                 db    ? ;
.bss:000000000020CF77                 db    ? ;
.bss:000000000020CF78                 db    ? ;
.bss:000000000020CF79                 db    ? ;
.bss:000000000020CF7A                 db    ? ;
.bss:000000000020CF7B                 db    ? ;
.bss:000000000020CF7C                 db    ? ;
.bss:000000000020CF7D                 db    ? ;
.bss:000000000020CF7E                 db    ? ;
.bss:000000000020CF7F                 db    ? ;
.bss:000000000020CF80                 db    ? ;
.bss:000000000020CF81                 db    ? ;
.bss:000000000020CF82                 db    ? ;
.bss:000000000020CF83                 db    ? ;
.bss:000000000020CF84                 db    ? ;
.bss:000000000020CF85                 db    ? ;
.bss:000000000020CF86                 db    ? ;
.bss:000000000020CF87                 db    ? ;
.bss:000000000020CF88                 db    ? ;
.bss:000000000020CF89                 db    ? ;
.bss:000000000020CF8A                 db    ? ;
.bss:000000000020CF8B                 db    ? ;
.bss:000000000020CF8C                 db    ? ;
.bss:000000000020CF8D                 db    ? ;
.bss:000000000020CF8E                 db    ? ;
.bss:000000000020CF8F                 db    ? ;
.bss:000000000020CF90                 db    ? ;
.bss:000000000020CF91                 db    ? ;
.bss:000000000020CF92                 db    ? ;
.bss:000000000020CF93                 db    ? ;
.bss:000000000020CF94                 db    ? ;
.bss:000000000020CF95                 db    ? ;
.bss:000000000020CF96                 db    ? ;
.bss:000000000020CF97                 db    ? ;
.bss:000000000020CF98                 db    ? ;
.bss:000000000020CF99                 db    ? ;
.bss:000000000020CF9A                 db    ? ;
.bss:000000000020CF9B                 db    ? ;
.bss:000000000020CF9C                 db    ? ;
.bss:000000000020CF9D                 db    ? ;
.bss:000000000020CF9E                 db    ? ;
.bss:000000000020CF9F                 db    ? ;
.bss:000000000020CFA0                 db    ? ;
.bss:000000000020CFA1                 db    ? ;
.bss:000000000020CFA2                 db    ? ;
.bss:000000000020CFA3                 db    ? ;
.bss:000000000020CFA4                 db    ? ;
.bss:000000000020CFA5                 db    ? ;
.bss:000000000020CFA6                 db    ? ;
.bss:000000000020CFA7                 db    ? ;
.bss:000000000020CFA8                 db    ? ;
.bss:000000000020CFA9                 db    ? ;
.bss:000000000020CFAA                 db    ? ;
.bss:000000000020CFAB                 db    ? ;
.bss:000000000020CFAC                 db    ? ;
.bss:000000000020CFAD                 db    ? ;
.bss:000000000020CFAE                 db    ? ;
.bss:000000000020CFAF                 db    ? ;
.bss:000000000020CFB0                 db    ? ;
.bss:000000000020CFB1                 db    ? ;
.bss:000000000020CFB2                 db    ? ;
.bss:000000000020CFB3                 db    ? ;
.bss:000000000020CFB4                 db    ? ;
.bss:000000000020CFB5                 db    ? ;
.bss:000000000020CFB6                 db    ? ;
.bss:000000000020CFB7                 db    ? ;
.bss:000000000020CFB8                 db    ? ;
.bss:000000000020CFB9                 db    ? ;
.bss:000000000020CFBA                 db    ? ;
.bss:000000000020CFBB                 db    ? ;
.bss:000000000020CFBC                 db    ? ;
.bss:000000000020CFBD                 db    ? ;
.bss:000000000020CFBE                 db    ? ;
.bss:000000000020CFBF                 db    ? ;
.bss:000000000020CFC0                 db    ? ;
.bss:000000000020CFC1                 db    ? ;
.bss:000000000020CFC2                 db    ? ;
.bss:000000000020CFC3                 db    ? ;
.bss:000000000020CFC4                 db    ? ;
.bss:000000000020CFC5                 db    ? ;
.bss:000000000020CFC6                 db    ? ;
.bss:000000000020CFC7                 db    ? ;
.bss:000000000020CFC8                 db    ? ;
.bss:000000000020CFC9                 db    ? ;
.bss:000000000020CFCA                 db    ? ;
.bss:000000000020CFCB                 db    ? ;
.bss:000000000020CFCC                 db    ? ;
.bss:000000000020CFCD                 db    ? ;
.bss:000000000020CFCE                 db    ? ;
.bss:000000000020CFCF                 db    ? ;
.bss:000000000020CFD0                 db    ? ;
.bss:000000000020CFD1                 db    ? ;
.bss:000000000020CFD2                 db    ? ;
.bss:000000000020CFD3                 db    ? ;
.bss:000000000020CFD4                 db    ? ;
.bss:000000000020CFD5                 db    ? ;
.bss:000000000020CFD6                 db    ? ;
.bss:000000000020CFD7                 db    ? ;
.bss:000000000020CFD8                 db    ? ;
.bss:000000000020CFD9                 db    ? ;
.bss:000000000020CFDA                 db    ? ;
.bss:000000000020CFDB                 db    ? ;
.bss:000000000020CFDC                 db    ? ;
.bss:000000000020CFDD                 db    ? ;
.bss:000000000020CFDE                 db    ? ;
.bss:000000000020CFDF                 db    ? ;
.bss:000000000020CFE0                 db    ? ;
.bss:000000000020CFE1                 db    ? ;
.bss:000000000020CFE2                 db    ? ;
.bss:000000000020CFE3                 db    ? ;
.bss:000000000020CFE4                 db    ? ;
.bss:000000000020CFE5                 db    ? ;
.bss:000000000020CFE6                 db    ? ;
.bss:000000000020CFE7                 db    ? ;
.bss:000000000020CFE8                 db    ? ;
.bss:000000000020CFE9                 db    ? ;
.bss:000000000020CFEA                 db    ? ;
.bss:000000000020CFEB                 db    ? ;
.bss:000000000020CFEC                 db    ? ;
.bss:000000000020CFED                 db    ? ;
.bss:000000000020CFEE                 db    ? ;
.bss:000000000020CFEF                 db    ? ;
.bss:000000000020CFF0                 db    ? ;
.bss:000000000020CFF1                 db    ? ;
.bss:000000000020CFF2                 db    ? ;
.bss:000000000020CFF3                 db    ? ;
.bss:000000000020CFF4                 db    ? ;
.bss:000000000020CFF5                 db    ? ;
.bss:000000000020CFF6                 db    ? ;
.bss:000000000020CFF7                 db    ? ;
.bss:000000000020CFF8                 db    ? ;
.bss:000000000020CFF9                 db    ? ;
.bss:000000000020CFFA                 db    ? ;
.bss:000000000020CFFB                 db    ? ;
.bss:000000000020CFFC                 db    ? ;
.bss:000000000020CFFD                 db    ? ;
.bss:000000000020CFFE                 db    ? ;
.bss:000000000020CFFF                 db    ? ;
.bss:000000000020D000                 db    ? ;
.bss:000000000020D001                 db    ? ;
.bss:000000000020D002                 db    ? ;
.bss:000000000020D003                 db    ? ;
.bss:000000000020D004                 db    ? ;
.bss:000000000020D005                 db    ? ;
.bss:000000000020D006                 db    ? ;
.bss:000000000020D007                 db    ? ;
.bss:000000000020D008                 db    ? ;
.bss:000000000020D009                 db    ? ;
.bss:000000000020D00A                 db    ? ;
.bss:000000000020D00B                 db    ? ;
.bss:000000000020D00C                 db    ? ;
.bss:000000000020D00D                 db    ? ;
.bss:000000000020D00E                 db    ? ;
.bss:000000000020D00F                 db    ? ;
.bss:000000000020D010                 db    ? ;
.bss:000000000020D011                 db    ? ;
.bss:000000000020D012                 db    ? ;
.bss:000000000020D013                 db    ? ;
.bss:000000000020D014                 db    ? ;
.bss:000000000020D015                 db    ? ;
.bss:000000000020D016                 db    ? ;
.bss:000000000020D017                 db    ? ;
.bss:000000000020D018                 db    ? ;
.bss:000000000020D019                 db    ? ;
.bss:000000000020D01A                 db    ? ;
.bss:000000000020D01B                 db    ? ;
.bss:000000000020D01C                 db    ? ;
.bss:000000000020D01D                 db    ? ;
.bss:000000000020D01E                 db    ? ;
.bss:000000000020D01F                 db    ? ;
.bss:000000000020D020                 db    ? ;
.bss:000000000020D021                 db    ? ;
.bss:000000000020D022                 db    ? ;
.bss:000000000020D023                 db    ? ;
.bss:000000000020D024                 db    ? ;
.bss:000000000020D025                 db    ? ;
.bss:000000000020D026                 db    ? ;
.bss:000000000020D027                 db    ? ;
.bss:000000000020D028                 db    ? ;
.bss:000000000020D029                 db    ? ;
.bss:000000000020D02A                 db    ? ;
.bss:000000000020D02B                 db    ? ;
.bss:000000000020D02C                 db    ? ;
.bss:000000000020D02D                 db    ? ;
.bss:000000000020D02E                 db    ? ;
.bss:000000000020D02F                 db    ? ;
.bss:000000000020D030                 db    ? ;
.bss:000000000020D031                 db    ? ;
.bss:000000000020D032                 db    ? ;
.bss:000000000020D033                 db    ? ;
.bss:000000000020D034                 db    ? ;
.bss:000000000020D035                 db    ? ;
.bss:000000000020D036                 db    ? ;
.bss:000000000020D037                 db    ? ;
.bss:000000000020D038                 db    ? ;
.bss:000000000020D039                 db    ? ;
.bss:000000000020D03A                 db    ? ;
.bss:000000000020D03B                 db    ? ;
.bss:000000000020D03C                 db    ? ;
.bss:000000000020D03D                 db    ? ;
.bss:000000000020D03E                 db    ? ;
.bss:000000000020D03F                 db    ? ;
.bss:000000000020D040                 db    ? ;
.bss:000000000020D041                 db    ? ;
.bss:000000000020D042                 db    ? ;
.bss:000000000020D043                 db    ? ;
.bss:000000000020D044                 db    ? ;
.bss:000000000020D045                 db    ? ;
.bss:000000000020D046                 db    ? ;
.bss:000000000020D047                 db    ? ;
.bss:000000000020D048                 db    ? ;
.bss:000000000020D049                 db    ? ;
.bss:000000000020D04A                 db    ? ;
.bss:000000000020D04B                 db    ? ;
.bss:000000000020D04C                 db    ? ;
.bss:000000000020D04D                 db    ? ;
.bss:000000000020D04E                 db    ? ;
.bss:000000000020D04F                 db    ? ;
.bss:000000000020D050                 db    ? ;
.bss:000000000020D051                 db    ? ;
.bss:000000000020D052                 db    ? ;
.bss:000000000020D053                 db    ? ;
.bss:000000000020D054                 db    ? ;
.bss:000000000020D055                 db    ? ;
.bss:000000000020D056                 db    ? ;
.bss:000000000020D057                 db    ? ;
.bss:000000000020D058                 db    ? ;
.bss:000000000020D059                 db    ? ;
.bss:000000000020D05A                 db    ? ;
.bss:000000000020D05B                 db    ? ;
.bss:000000000020D05C                 db    ? ;
.bss:000000000020D05D                 db    ? ;
.bss:000000000020D05E                 db    ? ;
.bss:000000000020D05F                 db    ? ;
.bss:000000000020D060                 db    ? ;
.bss:000000000020D061                 db    ? ;
.bss:000000000020D062                 db    ? ;
.bss:000000000020D063                 db    ? ;
.bss:000000000020D064                 db    ? ;
.bss:000000000020D065                 db    ? ;
.bss:000000000020D066                 db    ? ;
.bss:000000000020D067                 db    ? ;
.bss:000000000020D068                 db    ? ;
.bss:000000000020D069                 db    ? ;
.bss:000000000020D06A                 db    ? ;
.bss:000000000020D06B                 db    ? ;
.bss:000000000020D06C                 db    ? ;
.bss:000000000020D06D                 db    ? ;
.bss:000000000020D06E                 db    ? ;
.bss:000000000020D06F                 db    ? ;
.bss:000000000020D070                 db    ? ;
.bss:000000000020D071                 db    ? ;
.bss:000000000020D072                 db    ? ;
.bss:000000000020D073                 db    ? ;
.bss:000000000020D074                 db    ? ;
.bss:000000000020D075                 db    ? ;
.bss:000000000020D076                 db    ? ;
.bss:000000000020D077                 db    ? ;
.bss:000000000020D078                 db    ? ;
.bss:000000000020D079                 db    ? ;
.bss:000000000020D07A                 db    ? ;
.bss:000000000020D07B                 db    ? ;
.bss:000000000020D07C                 db    ? ;
.bss:000000000020D07D                 db    ? ;
.bss:000000000020D07E                 db    ? ;
.bss:000000000020D07F                 db    ? ;
.bss:000000000020D080                 db    ? ;
.bss:000000000020D081                 db    ? ;
.bss:000000000020D082                 db    ? ;
.bss:000000000020D083                 db    ? ;
.bss:000000000020D084                 db    ? ;
.bss:000000000020D085                 db    ? ;
.bss:000000000020D086                 db    ? ;
.bss:000000000020D087                 db    ? ;
.bss:000000000020D088                 db    ? ;
.bss:000000000020D089                 db    ? ;
.bss:000000000020D08A                 db    ? ;
.bss:000000000020D08B                 db    ? ;
.bss:000000000020D08C                 db    ? ;
.bss:000000000020D08D                 db    ? ;
.bss:000000000020D08E                 db    ? ;
.bss:000000000020D08F                 db    ? ;
.bss:000000000020D090                 db    ? ;
.bss:000000000020D091                 db    ? ;
.bss:000000000020D092                 db    ? ;
.bss:000000000020D093                 db    ? ;
.bss:000000000020D094                 db    ? ;
.bss:000000000020D095                 db    ? ;
.bss:000000000020D096                 db    ? ;
.bss:000000000020D097                 db    ? ;
.bss:000000000020D098                 db    ? ;
.bss:000000000020D099                 db    ? ;
.bss:000000000020D09A                 db    ? ;
.bss:000000000020D09B                 db    ? ;
.bss:000000000020D09C                 db    ? ;
.bss:000000000020D09D                 db    ? ;
.bss:000000000020D09E                 db    ? ;
.bss:000000000020D09F                 db    ? ;
.bss:000000000020D0A0                 db    ? ;
.bss:000000000020D0A1                 db    ? ;
.bss:000000000020D0A2                 db    ? ;
.bss:000000000020D0A3                 db    ? ;
.bss:000000000020D0A4                 db    ? ;
.bss:000000000020D0A5                 db    ? ;
.bss:000000000020D0A6                 db    ? ;
.bss:000000000020D0A7                 db    ? ;
.bss:000000000020D0A8                 db    ? ;
.bss:000000000020D0A9                 db    ? ;
.bss:000000000020D0AA                 db    ? ;
.bss:000000000020D0AB                 db    ? ;
.bss:000000000020D0AC                 db    ? ;
.bss:000000000020D0AD                 db    ? ;
.bss:000000000020D0AE                 db    ? ;
.bss:000000000020D0AF                 db    ? ;
.bss:000000000020D0B0                 db    ? ;
.bss:000000000020D0B1                 db    ? ;
.bss:000000000020D0B2                 db    ? ;
.bss:000000000020D0B3                 db    ? ;
.bss:000000000020D0B4                 db    ? ;
.bss:000000000020D0B5                 db    ? ;
.bss:000000000020D0B6                 db    ? ;
.bss:000000000020D0B7                 db    ? ;
.bss:000000000020D0B8                 db    ? ;
.bss:000000000020D0B9                 db    ? ;
.bss:000000000020D0BA                 db    ? ;
.bss:000000000020D0BB                 db    ? ;
.bss:000000000020D0BC                 db    ? ;
.bss:000000000020D0BD                 db    ? ;
.bss:000000000020D0BE                 db    ? ;
.bss:000000000020D0BF                 db    ? ;
.bss:000000000020D0C0                 db    ? ;
.bss:000000000020D0C1                 db    ? ;
.bss:000000000020D0C2                 db    ? ;
.bss:000000000020D0C3                 db    ? ;
.bss:000000000020D0C4                 db    ? ;
.bss:000000000020D0C5                 db    ? ;
.bss:000000000020D0C6                 db    ? ;
.bss:000000000020D0C7                 db    ? ;
.bss:000000000020D0C8                 db    ? ;
.bss:000000000020D0C9                 db    ? ;
.bss:000000000020D0CA                 db    ? ;
.bss:000000000020D0CB                 db    ? ;
.bss:000000000020D0CC                 db    ? ;
.bss:000000000020D0CD                 db    ? ;
.bss:000000000020D0CE                 db    ? ;
.bss:000000000020D0CF                 db    ? ;
.bss:000000000020D0D0                 db    ? ;
.bss:000000000020D0D1                 db    ? ;
.bss:000000000020D0D2                 db    ? ;
.bss:000000000020D0D3                 db    ? ;
.bss:000000000020D0D4                 db    ? ;
.bss:000000000020D0D5                 db    ? ;
.bss:000000000020D0D6                 db    ? ;
.bss:000000000020D0D7                 db    ? ;
.bss:000000000020D0D8                 db    ? ;
.bss:000000000020D0D9                 db    ? ;
.bss:000000000020D0DA                 db    ? ;
.bss:000000000020D0DB                 db    ? ;
.bss:000000000020D0DC                 db    ? ;
.bss:000000000020D0DD                 db    ? ;
.bss:000000000020D0DE                 db    ? ;
.bss:000000000020D0DF                 db    ? ;
.bss:000000000020D0E0                 db    ? ;
.bss:000000000020D0E1                 db    ? ;
.bss:000000000020D0E2                 db    ? ;
.bss:000000000020D0E3                 db    ? ;
.bss:000000000020D0E4                 db    ? ;
.bss:000000000020D0E5                 db    ? ;
.bss:000000000020D0E6                 db    ? ;
.bss:000000000020D0E7                 db    ? ;
.bss:000000000020D0E8                 db    ? ;
.bss:000000000020D0E9                 db    ? ;
.bss:000000000020D0EA                 db    ? ;
.bss:000000000020D0EB                 db    ? ;
.bss:000000000020D0EC                 db    ? ;
.bss:000000000020D0ED                 db    ? ;
.bss:000000000020D0EE                 db    ? ;
.bss:000000000020D0EF                 db    ? ;
.bss:000000000020D0F0                 db    ? ;
.bss:000000000020D0F1                 db    ? ;
.bss:000000000020D0F2                 db    ? ;
.bss:000000000020D0F3                 db    ? ;
.bss:000000000020D0F4                 db    ? ;
.bss:000000000020D0F5                 db    ? ;
.bss:000000000020D0F6                 db    ? ;
.bss:000000000020D0F7                 db    ? ;
.bss:000000000020D0F8                 db    ? ;
.bss:000000000020D0F9                 db    ? ;
.bss:000000000020D0FA                 db    ? ;
.bss:000000000020D0FB                 db    ? ;
.bss:000000000020D0FC                 db    ? ;
.bss:000000000020D0FD                 db    ? ;
.bss:000000000020D0FE                 db    ? ;
.bss:000000000020D0FF                 db    ? ;
.bss:000000000020D100                 db    ? ;
.bss:000000000020D101                 db    ? ;
.bss:000000000020D102                 db    ? ;
.bss:000000000020D103                 db    ? ;
.bss:000000000020D104                 db    ? ;
.bss:000000000020D105                 db    ? ;
.bss:000000000020D106                 db    ? ;
.bss:000000000020D107                 db    ? ;
.bss:000000000020D108                 db    ? ;
.bss:000000000020D109                 db    ? ;
.bss:000000000020D10A                 db    ? ;
.bss:000000000020D10B                 db    ? ;
.bss:000000000020D10C                 db    ? ;
.bss:000000000020D10D                 db    ? ;
.bss:000000000020D10E                 db    ? ;
.bss:000000000020D10F                 db    ? ;
.bss:000000000020D110                 db    ? ;
.bss:000000000020D111                 db    ? ;
.bss:000000000020D112                 db    ? ;
.bss:000000000020D113                 db    ? ;
.bss:000000000020D114                 db    ? ;
.bss:000000000020D115                 db    ? ;
.bss:000000000020D116                 db    ? ;
.bss:000000000020D117                 db    ? ;
.bss:000000000020D118                 db    ? ;
.bss:000000000020D119                 db    ? ;
.bss:000000000020D11A                 db    ? ;
.bss:000000000020D11B                 db    ? ;
.bss:000000000020D11C                 db    ? ;
.bss:000000000020D11D                 db    ? ;
.bss:000000000020D11E                 db    ? ;
.bss:000000000020D11F                 db    ? ;
.bss:000000000020D120                 db    ? ;
.bss:000000000020D121                 db    ? ;
.bss:000000000020D122                 db    ? ;
.bss:000000000020D123                 db    ? ;
.bss:000000000020D124                 db    ? ;
.bss:000000000020D125                 db    ? ;
.bss:000000000020D126                 db    ? ;
.bss:000000000020D127                 db    ? ;
.bss:000000000020D128                 db    ? ;
.bss:000000000020D129                 db    ? ;
.bss:000000000020D12A                 db    ? ;
.bss:000000000020D12B                 db    ? ;
.bss:000000000020D12C                 db    ? ;
.bss:000000000020D12D                 db    ? ;
.bss:000000000020D12E                 db    ? ;
.bss:000000000020D12F                 db    ? ;
.bss:000000000020D130                 db    ? ;
.bss:000000000020D131                 db    ? ;
.bss:000000000020D132                 db    ? ;
.bss:000000000020D133                 db    ? ;
.bss:000000000020D134                 db    ? ;
.bss:000000000020D135                 db    ? ;
.bss:000000000020D136                 db    ? ;
.bss:000000000020D137                 db    ? ;
.bss:000000000020D138                 db    ? ;
.bss:000000000020D139                 db    ? ;
.bss:000000000020D13A                 db    ? ;
.bss:000000000020D13B                 db    ? ;
.bss:000000000020D13C                 db    ? ;
.bss:000000000020D13D                 db    ? ;
.bss:000000000020D13E                 db    ? ;
.bss:000000000020D13F                 db    ? ;
.bss:000000000020D140                 db    ? ;
.bss:000000000020D141                 db    ? ;
.bss:000000000020D142                 db    ? ;
.bss:000000000020D143                 db    ? ;
.bss:000000000020D144                 db    ? ;
.bss:000000000020D145                 db    ? ;
.bss:000000000020D146                 db    ? ;
.bss:000000000020D147                 db    ? ;
.bss:000000000020D148                 db    ? ;
.bss:000000000020D149                 db    ? ;
.bss:000000000020D14A                 db    ? ;
.bss:000000000020D14B                 db    ? ;
.bss:000000000020D14C                 db    ? ;
.bss:000000000020D14D                 db    ? ;
.bss:000000000020D14E                 db    ? ;
.bss:000000000020D14F                 db    ? ;
.bss:000000000020D150                 db    ? ;
.bss:000000000020D151                 db    ? ;
.bss:000000000020D152                 db    ? ;
.bss:000000000020D153                 db    ? ;
.bss:000000000020D154                 db    ? ;
.bss:000000000020D155                 db    ? ;
.bss:000000000020D156                 db    ? ;
.bss:000000000020D157                 db    ? ;
.bss:000000000020D158                 db    ? ;
.bss:000000000020D159                 db    ? ;
.bss:000000000020D15A                 db    ? ;
.bss:000000000020D15B                 db    ? ;
.bss:000000000020D15C                 db    ? ;
.bss:000000000020D15D                 db    ? ;
.bss:000000000020D15E                 db    ? ;
.bss:000000000020D15F                 db    ? ;
.bss:000000000020D160                 db    ? ;
.bss:000000000020D161                 db    ? ;
.bss:000000000020D162                 db    ? ;
.bss:000000000020D163                 db    ? ;
.bss:000000000020D164                 db    ? ;
.bss:000000000020D165                 db    ? ;
.bss:000000000020D166                 db    ? ;
.bss:000000000020D167                 db    ? ;
.bss:000000000020D168                 db    ? ;
.bss:000000000020D169                 db    ? ;
.bss:000000000020D16A                 db    ? ;
.bss:000000000020D16B                 db    ? ;
.bss:000000000020D16C                 db    ? ;
.bss:000000000020D16D                 db    ? ;
.bss:000000000020D16E                 db    ? ;
.bss:000000000020D16F                 db    ? ;
.bss:000000000020D170                 db    ? ;
.bss:000000000020D171                 db    ? ;
.bss:000000000020D172                 db    ? ;
.bss:000000000020D173                 db    ? ;
.bss:000000000020D174                 db    ? ;
.bss:000000000020D175                 db    ? ;
.bss:000000000020D176                 db    ? ;
.bss:000000000020D177                 db    ? ;
.bss:000000000020D178                 db    ? ;
.bss:000000000020D179                 db    ? ;
.bss:000000000020D17A                 db    ? ;
.bss:000000000020D17B                 db    ? ;
.bss:000000000020D17C                 db    ? ;
.bss:000000000020D17D                 db    ? ;
.bss:000000000020D17E                 db    ? ;
.bss:000000000020D17F                 db    ? ;
.bss:000000000020D180                 db    ? ;
.bss:000000000020D181                 db    ? ;
.bss:000000000020D182                 db    ? ;
.bss:000000000020D183                 db    ? ;
.bss:000000000020D184                 db    ? ;
.bss:000000000020D185                 db    ? ;
.bss:000000000020D186                 db    ? ;
.bss:000000000020D187                 db    ? ;
.bss:000000000020D188                 db    ? ;
.bss:000000000020D189                 db    ? ;
.bss:000000000020D18A                 db    ? ;
.bss:000000000020D18B                 db    ? ;
.bss:000000000020D18C                 db    ? ;
.bss:000000000020D18D                 db    ? ;
.bss:000000000020D18E                 db    ? ;
.bss:000000000020D18F                 db    ? ;
.bss:000000000020D190                 db    ? ;
.bss:000000000020D191                 db    ? ;
.bss:000000000020D192                 db    ? ;
.bss:000000000020D193                 db    ? ;
.bss:000000000020D194                 db    ? ;
.bss:000000000020D195                 db    ? ;
.bss:000000000020D196                 db    ? ;
.bss:000000000020D197                 db    ? ;
.bss:000000000020D198                 db    ? ;
.bss:000000000020D199                 db    ? ;
.bss:000000000020D19A                 db    ? ;
.bss:000000000020D19B                 db    ? ;
.bss:000000000020D19C                 db    ? ;
.bss:000000000020D19D                 db    ? ;
.bss:000000000020D19E                 db    ? ;
.bss:000000000020D19F                 db    ? ;
.bss:000000000020D1A0                 db    ? ;
.bss:000000000020D1A1                 db    ? ;
.bss:000000000020D1A2                 db    ? ;
.bss:000000000020D1A3                 db    ? ;
.bss:000000000020D1A4                 db    ? ;
.bss:000000000020D1A5                 db    ? ;
.bss:000000000020D1A6                 db    ? ;
.bss:000000000020D1A7                 db    ? ;
.bss:000000000020D1A8                 db    ? ;
.bss:000000000020D1A9                 db    ? ;
.bss:000000000020D1AA                 db    ? ;
.bss:000000000020D1AB                 db    ? ;
.bss:000000000020D1AC                 db    ? ;
.bss:000000000020D1AD                 db    ? ;
.bss:000000000020D1AE                 db    ? ;
.bss:000000000020D1AF                 db    ? ;
.bss:000000000020D1B0                 db    ? ;
.bss:000000000020D1B1                 db    ? ;
.bss:000000000020D1B2                 db    ? ;
.bss:000000000020D1B3                 db    ? ;
.bss:000000000020D1B4                 db    ? ;
.bss:000000000020D1B5                 db    ? ;
.bss:000000000020D1B6                 db    ? ;
.bss:000000000020D1B7                 db    ? ;
.bss:000000000020D1B8                 db    ? ;
.bss:000000000020D1B9                 db    ? ;
.bss:000000000020D1BA                 db    ? ;
.bss:000000000020D1BB                 db    ? ;
.bss:000000000020D1BC                 db    ? ;
.bss:000000000020D1BD                 db    ? ;
.bss:000000000020D1BE                 db    ? ;
.bss:000000000020D1BF                 db    ? ;
.bss:000000000020D1C0                 db    ? ;
.bss:000000000020D1C1                 db    ? ;
.bss:000000000020D1C2                 db    ? ;
.bss:000000000020D1C3                 db    ? ;
.bss:000000000020D1C4                 db    ? ;
.bss:000000000020D1C5                 db    ? ;
.bss:000000000020D1C6                 db    ? ;
.bss:000000000020D1C7                 db    ? ;
.bss:000000000020D1C8                 db    ? ;
.bss:000000000020D1C9                 db    ? ;
.bss:000000000020D1CA                 db    ? ;
.bss:000000000020D1CB                 db    ? ;
.bss:000000000020D1CC                 db    ? ;
.bss:000000000020D1CD                 db    ? ;
.bss:000000000020D1CE                 db    ? ;
.bss:000000000020D1CF                 db    ? ;
.bss:000000000020D1D0                 db    ? ;
.bss:000000000020D1D1                 db    ? ;
.bss:000000000020D1D2                 db    ? ;
.bss:000000000020D1D3                 db    ? ;
.bss:000000000020D1D4                 db    ? ;
.bss:000000000020D1D5                 db    ? ;
.bss:000000000020D1D6                 db    ? ;
.bss:000000000020D1D7                 db    ? ;
.bss:000000000020D1D8                 db    ? ;
.bss:000000000020D1D9                 db    ? ;
.bss:000000000020D1DA                 db    ? ;
.bss:000000000020D1DB                 db    ? ;
.bss:000000000020D1DC                 db    ? ;
.bss:000000000020D1DD                 db    ? ;
.bss:000000000020D1DE                 db    ? ;
.bss:000000000020D1DF                 db    ? ;
.bss:000000000020D1E0                 db    ? ;
.bss:000000000020D1E1                 db    ? ;
.bss:000000000020D1E2                 db    ? ;
.bss:000000000020D1E3                 db    ? ;
.bss:000000000020D1E4                 db    ? ;
.bss:000000000020D1E5                 db    ? ;
.bss:000000000020D1E6                 db    ? ;
.bss:000000000020D1E7                 db    ? ;
.bss:000000000020D1E8                 db    ? ;
.bss:000000000020D1E9                 db    ? ;
.bss:000000000020D1EA                 db    ? ;
.bss:000000000020D1EB                 db    ? ;
.bss:000000000020D1EC                 db    ? ;
.bss:000000000020D1ED                 db    ? ;
.bss:000000000020D1EE                 db    ? ;
.bss:000000000020D1EF                 db    ? ;
.bss:000000000020D1F0                 db    ? ;
.bss:000000000020D1F1                 db    ? ;
.bss:000000000020D1F2                 db    ? ;
.bss:000000000020D1F3                 db    ? ;
.bss:000000000020D1F4                 db    ? ;
.bss:000000000020D1F5                 db    ? ;
.bss:000000000020D1F6                 db    ? ;
.bss:000000000020D1F7                 db    ? ;
.bss:000000000020D1F8                 db    ? ;
.bss:000000000020D1F9                 db    ? ;
.bss:000000000020D1FA                 db    ? ;
.bss:000000000020D1FB                 db    ? ;
.bss:000000000020D1FC                 db    ? ;
.bss:000000000020D1FD                 db    ? ;
.bss:000000000020D1FE                 db    ? ;
.bss:000000000020D1FF                 db    ? ;
.bss:000000000020D200                 db    ? ;
.bss:000000000020D201                 db    ? ;
.bss:000000000020D202                 db    ? ;
.bss:000000000020D203                 db    ? ;
.bss:000000000020D204                 db    ? ;
.bss:000000000020D205                 db    ? ;
.bss:000000000020D206                 db    ? ;
.bss:000000000020D207                 db    ? ;
.bss:000000000020D208                 db    ? ;
.bss:000000000020D209                 db    ? ;
.bss:000000000020D20A                 db    ? ;
.bss:000000000020D20B                 db    ? ;
.bss:000000000020D20C                 db    ? ;
.bss:000000000020D20D                 db    ? ;
.bss:000000000020D20E                 db    ? ;
.bss:000000000020D20F                 db    ? ;
.bss:000000000020D210                 db    ? ;
.bss:000000000020D211                 db    ? ;
.bss:000000000020D212                 db    ? ;
.bss:000000000020D213                 db    ? ;
.bss:000000000020D214                 db    ? ;
.bss:000000000020D215                 db    ? ;
.bss:000000000020D216                 db    ? ;
.bss:000000000020D217                 db    ? ;
.bss:000000000020D218                 db    ? ;
.bss:000000000020D219                 db    ? ;
.bss:000000000020D21A                 db    ? ;
.bss:000000000020D21B                 db    ? ;
.bss:000000000020D21C                 db    ? ;
.bss:000000000020D21D                 db    ? ;
.bss:000000000020D21E                 db    ? ;
.bss:000000000020D21F                 db    ? ;
.bss:000000000020D220                 db    ? ;
.bss:000000000020D221                 db    ? ;
.bss:000000000020D222                 db    ? ;
.bss:000000000020D223                 db    ? ;
.bss:000000000020D224                 db    ? ;
.bss:000000000020D225                 db    ? ;
.bss:000000000020D226                 db    ? ;
.bss:000000000020D227                 db    ? ;
.bss:000000000020D228                 db    ? ;
.bss:000000000020D229                 db    ? ;
.bss:000000000020D22A                 db    ? ;
.bss:000000000020D22B                 db    ? ;
.bss:000000000020D22C                 db    ? ;
.bss:000000000020D22D                 db    ? ;
.bss:000000000020D22E                 db    ? ;
.bss:000000000020D22F                 db    ? ;
.bss:000000000020D230                 db    ? ;
.bss:000000000020D231                 db    ? ;
.bss:000000000020D232                 db    ? ;
.bss:000000000020D233                 db    ? ;
.bss:000000000020D234                 db    ? ;
.bss:000000000020D235                 db    ? ;
.bss:000000000020D236                 db    ? ;
.bss:000000000020D237                 db    ? ;
.bss:000000000020D238                 db    ? ;
.bss:000000000020D239                 db    ? ;
.bss:000000000020D23A                 db    ? ;
.bss:000000000020D23B                 db    ? ;
.bss:000000000020D23C                 db    ? ;
.bss:000000000020D23D                 db    ? ;
.bss:000000000020D23E                 db    ? ;
.bss:000000000020D23F                 db    ? ;
.bss:000000000020D240                 db    ? ;
.bss:000000000020D241                 db    ? ;
.bss:000000000020D242                 db    ? ;
.bss:000000000020D243                 db    ? ;
.bss:000000000020D244                 db    ? ;
.bss:000000000020D245                 db    ? ;
.bss:000000000020D246                 db    ? ;
.bss:000000000020D247                 db    ? ;
.bss:000000000020D248                 db    ? ;
.bss:000000000020D249                 db    ? ;
.bss:000000000020D24A                 db    ? ;
.bss:000000000020D24B                 db    ? ;
.bss:000000000020D24C                 db    ? ;
.bss:000000000020D24D                 db    ? ;
.bss:000000000020D24E                 db    ? ;
.bss:000000000020D24F                 db    ? ;
.bss:000000000020D250                 db    ? ;
.bss:000000000020D251                 db    ? ;
.bss:000000000020D252                 db    ? ;
.bss:000000000020D253                 db    ? ;
.bss:000000000020D254                 db    ? ;
.bss:000000000020D255                 db    ? ;
.bss:000000000020D256                 db    ? ;
.bss:000000000020D257                 db    ? ;
.bss:000000000020D258                 db    ? ;
.bss:000000000020D259                 db    ? ;
.bss:000000000020D25A                 db    ? ;
.bss:000000000020D25B                 db    ? ;
.bss:000000000020D25C                 db    ? ;
.bss:000000000020D25D                 db    ? ;
.bss:000000000020D25E                 db    ? ;
.bss:000000000020D25F                 db    ? ;
.bss:000000000020D260                 db    ? ;
.bss:000000000020D261                 db    ? ;
.bss:000000000020D262                 db    ? ;
.bss:000000000020D263                 db    ? ;
.bss:000000000020D264                 db    ? ;
.bss:000000000020D265                 db    ? ;
.bss:000000000020D266                 db    ? ;
.bss:000000000020D267                 db    ? ;
.bss:000000000020D268                 db    ? ;
.bss:000000000020D269                 db    ? ;
.bss:000000000020D26A                 db    ? ;
.bss:000000000020D26B                 db    ? ;
.bss:000000000020D26C                 db    ? ;
.bss:000000000020D26D                 db    ? ;
.bss:000000000020D26E                 db    ? ;
.bss:000000000020D26F                 db    ? ;
.bss:000000000020D270                 db    ? ;
.bss:000000000020D271                 db    ? ;
.bss:000000000020D272                 db    ? ;
.bss:000000000020D273                 db    ? ;
.bss:000000000020D274                 db    ? ;
.bss:000000000020D275                 db    ? ;
.bss:000000000020D276                 db    ? ;
.bss:000000000020D277                 db    ? ;
.bss:000000000020D278                 db    ? ;
.bss:000000000020D279                 db    ? ;
.bss:000000000020D27A                 db    ? ;
.bss:000000000020D27B                 db    ? ;
.bss:000000000020D27C                 db    ? ;
.bss:000000000020D27D                 db    ? ;
.bss:000000000020D27E                 db    ? ;
.bss:000000000020D27F                 db    ? ;
.bss:000000000020D280                 db    ? ;
.bss:000000000020D281                 db    ? ;
.bss:000000000020D282                 db    ? ;
.bss:000000000020D283                 db    ? ;
.bss:000000000020D284                 db    ? ;
.bss:000000000020D285                 db    ? ;
.bss:000000000020D286                 db    ? ;
.bss:000000000020D287                 db    ? ;
.bss:000000000020D288                 db    ? ;
.bss:000000000020D289                 db    ? ;
.bss:000000000020D28A                 db    ? ;
.bss:000000000020D28B                 db    ? ;
.bss:000000000020D28C                 db    ? ;
.bss:000000000020D28D                 db    ? ;
.bss:000000000020D28E                 db    ? ;
.bss:000000000020D28F                 db    ? ;
.bss:000000000020D290                 db    ? ;
.bss:000000000020D291                 db    ? ;
.bss:000000000020D292                 db    ? ;
.bss:000000000020D293                 db    ? ;
.bss:000000000020D294                 db    ? ;
.bss:000000000020D295                 db    ? ;
.bss:000000000020D296                 db    ? ;
.bss:000000000020D297                 db    ? ;
.bss:000000000020D298                 db    ? ;
.bss:000000000020D299                 db    ? ;
.bss:000000000020D29A                 db    ? ;
.bss:000000000020D29B                 db    ? ;
.bss:000000000020D29C                 db    ? ;
.bss:000000000020D29D                 db    ? ;
.bss:000000000020D29E                 db    ? ;
.bss:000000000020D29F                 db    ? ;
.bss:000000000020D2A0                 db    ? ;
.bss:000000000020D2A1                 db    ? ;
.bss:000000000020D2A2                 db    ? ;
.bss:000000000020D2A3                 db    ? ;
.bss:000000000020D2A4                 db    ? ;
.bss:000000000020D2A5                 db    ? ;
.bss:000000000020D2A6                 db    ? ;
.bss:000000000020D2A7                 db    ? ;
.bss:000000000020D2A8                 db    ? ;
.bss:000000000020D2A9                 db    ? ;
.bss:000000000020D2AA                 db    ? ;
.bss:000000000020D2AB                 db    ? ;
.bss:000000000020D2AC                 db    ? ;
.bss:000000000020D2AD                 db    ? ;
.bss:000000000020D2AE                 db    ? ;
.bss:000000000020D2AF                 db    ? ;
.bss:000000000020D2B0                 db    ? ;
.bss:000000000020D2B1                 db    ? ;
.bss:000000000020D2B2                 db    ? ;
.bss:000000000020D2B3                 db    ? ;
.bss:000000000020D2B4                 db    ? ;
.bss:000000000020D2B5                 db    ? ;
.bss:000000000020D2B6                 db    ? ;
.bss:000000000020D2B7                 db    ? ;
.bss:000000000020D2B8                 db    ? ;
.bss:000000000020D2B9                 db    ? ;
.bss:000000000020D2BA                 db    ? ;
.bss:000000000020D2BB                 db    ? ;
.bss:000000000020D2BC                 db    ? ;
.bss:000000000020D2BD                 db    ? ;
.bss:000000000020D2BE                 db    ? ;
.bss:000000000020D2BF                 db    ? ;
.bss:000000000020D2C0                 db    ? ;
.bss:000000000020D2C1                 db    ? ;
.bss:000000000020D2C2                 db    ? ;
.bss:000000000020D2C3                 db    ? ;
.bss:000000000020D2C4                 db    ? ;
.bss:000000000020D2C5                 db    ? ;
.bss:000000000020D2C6                 db    ? ;
.bss:000000000020D2C7                 db    ? ;
.bss:000000000020D2C8                 db    ? ;
.bss:000000000020D2C9                 db    ? ;
.bss:000000000020D2CA                 db    ? ;
.bss:000000000020D2CB                 db    ? ;
.bss:000000000020D2CC                 db    ? ;
.bss:000000000020D2CD                 db    ? ;
.bss:000000000020D2CE                 db    ? ;
.bss:000000000020D2CF                 db    ? ;
.bss:000000000020D2D0                 db    ? ;
.bss:000000000020D2D1                 db    ? ;
.bss:000000000020D2D2                 db    ? ;
.bss:000000000020D2D3                 db    ? ;
.bss:000000000020D2D4                 db    ? ;
.bss:000000000020D2D5                 db    ? ;
.bss:000000000020D2D6                 db    ? ;
.bss:000000000020D2D7                 db    ? ;
.bss:000000000020D2D8                 db    ? ;
.bss:000000000020D2D9                 db    ? ;
.bss:000000000020D2DA                 db    ? ;
.bss:000000000020D2DB                 db    ? ;
.bss:000000000020D2DC                 db    ? ;
.bss:000000000020D2DD                 db    ? ;
.bss:000000000020D2DE                 db    ? ;
.bss:000000000020D2DF                 db    ? ;
.bss:000000000020D2E0                 db    ? ;
.bss:000000000020D2E1                 db    ? ;
.bss:000000000020D2E2                 db    ? ;
.bss:000000000020D2E3                 db    ? ;
.bss:000000000020D2E4                 db    ? ;
.bss:000000000020D2E5                 db    ? ;
.bss:000000000020D2E6                 db    ? ;
.bss:000000000020D2E7                 db    ? ;
.bss:000000000020D2E8                 db    ? ;
.bss:000000000020D2E9                 db    ? ;
.bss:000000000020D2EA                 db    ? ;
.bss:000000000020D2EB                 db    ? ;
.bss:000000000020D2EC                 db    ? ;
.bss:000000000020D2ED                 db    ? ;
.bss:000000000020D2EE                 db    ? ;
.bss:000000000020D2EF                 db    ? ;
.bss:000000000020D2F0                 db    ? ;
.bss:000000000020D2F1                 db    ? ;
.bss:000000000020D2F2                 db    ? ;
.bss:000000000020D2F3                 db    ? ;
.bss:000000000020D2F4                 db    ? ;
.bss:000000000020D2F5                 db    ? ;
.bss:000000000020D2F6                 db    ? ;
.bss:000000000020D2F7                 db    ? ;
.bss:000000000020D2F8                 db    ? ;
.bss:000000000020D2F9                 db    ? ;
.bss:000000000020D2FA                 db    ? ;
.bss:000000000020D2FB                 db    ? ;
.bss:000000000020D2FC                 db    ? ;
.bss:000000000020D2FD                 db    ? ;
.bss:000000000020D2FE                 db    ? ;
.bss:000000000020D2FF                 db    ? ;
.bss:000000000020D300                 db    ? ;
.bss:000000000020D301                 db    ? ;
.bss:000000000020D302                 db    ? ;
.bss:000000000020D303                 db    ? ;
.bss:000000000020D304                 db    ? ;
.bss:000000000020D305                 db    ? ;
.bss:000000000020D306                 db    ? ;
.bss:000000000020D307                 db    ? ;
.bss:000000000020D308                 db    ? ;
.bss:000000000020D309                 db    ? ;
.bss:000000000020D30A                 db    ? ;
.bss:000000000020D30B                 db    ? ;
.bss:000000000020D30C                 db    ? ;
.bss:000000000020D30D                 db    ? ;
.bss:000000000020D30E                 db    ? ;
.bss:000000000020D30F                 db    ? ;
.bss:000000000020D310                 db    ? ;
.bss:000000000020D311                 db    ? ;
.bss:000000000020D312                 db    ? ;
.bss:000000000020D313                 db    ? ;
.bss:000000000020D314                 db    ? ;
.bss:000000000020D315                 db    ? ;
.bss:000000000020D316                 db    ? ;
.bss:000000000020D317                 db    ? ;
.bss:000000000020D318                 db    ? ;
.bss:000000000020D319                 db    ? ;
.bss:000000000020D31A                 db    ? ;
.bss:000000000020D31B                 db    ? ;
.bss:000000000020D31C                 db    ? ;
.bss:000000000020D31D                 db    ? ;
.bss:000000000020D31E                 db    ? ;
.bss:000000000020D31F                 db    ? ;
.bss:000000000020D320                 db    ? ;
.bss:000000000020D321                 db    ? ;
.bss:000000000020D322                 db    ? ;
.bss:000000000020D323                 db    ? ;
.bss:000000000020D324                 db    ? ;
.bss:000000000020D325                 db    ? ;
.bss:000000000020D326                 db    ? ;
.bss:000000000020D327                 db    ? ;
.bss:000000000020D328                 db    ? ;
.bss:000000000020D329                 db    ? ;
.bss:000000000020D32A                 db    ? ;
.bss:000000000020D32B                 db    ? ;
.bss:000000000020D32C                 db    ? ;
.bss:000000000020D32D                 db    ? ;
.bss:000000000020D32E                 db    ? ;
.bss:000000000020D32F                 db    ? ;
.bss:000000000020D330                 db    ? ;
.bss:000000000020D331                 db    ? ;
.bss:000000000020D332                 db    ? ;
.bss:000000000020D333                 db    ? ;
.bss:000000000020D334                 db    ? ;
.bss:000000000020D335                 db    ? ;
.bss:000000000020D336                 db    ? ;
.bss:000000000020D337                 db    ? ;
.bss:000000000020D338                 db    ? ;
.bss:000000000020D339                 db    ? ;
.bss:000000000020D33A                 db    ? ;
.bss:000000000020D33B                 db    ? ;
.bss:000000000020D33C                 db    ? ;
.bss:000000000020D33D                 db    ? ;
.bss:000000000020D33E                 db    ? ;
.bss:000000000020D33F                 db    ? ;
.bss:000000000020D340                 db    ? ;
.bss:000000000020D341                 db    ? ;
.bss:000000000020D342                 db    ? ;
.bss:000000000020D343                 db    ? ;
.bss:000000000020D344                 db    ? ;
.bss:000000000020D345                 db    ? ;
.bss:000000000020D346                 db    ? ;
.bss:000000000020D347                 db    ? ;
.bss:000000000020D348                 db    ? ;
.bss:000000000020D349                 db    ? ;
.bss:000000000020D34A                 db    ? ;
.bss:000000000020D34B                 db    ? ;
.bss:000000000020D34C                 db    ? ;
.bss:000000000020D34D                 db    ? ;
.bss:000000000020D34E                 db    ? ;
.bss:000000000020D34F                 db    ? ;
.bss:000000000020D350                 db    ? ;
.bss:000000000020D351                 db    ? ;
.bss:000000000020D352                 db    ? ;
.bss:000000000020D353                 db    ? ;
.bss:000000000020D354                 db    ? ;
.bss:000000000020D355                 db    ? ;
.bss:000000000020D356                 db    ? ;
.bss:000000000020D357                 db    ? ;
.bss:000000000020D358                 db    ? ;
.bss:000000000020D359                 db    ? ;
.bss:000000000020D35A                 db    ? ;
.bss:000000000020D35B                 db    ? ;
.bss:000000000020D35C                 db    ? ;
.bss:000000000020D35D                 db    ? ;
.bss:000000000020D35E                 db    ? ;
.bss:000000000020D35F                 db    ? ;
.bss:000000000020D360                 db    ? ;
.bss:000000000020D361                 db    ? ;
.bss:000000000020D362                 db    ? ;
.bss:000000000020D363                 db    ? ;
.bss:000000000020D364                 db    ? ;
.bss:000000000020D365                 db    ? ;
.bss:000000000020D366                 db    ? ;
.bss:000000000020D367                 db    ? ;
.bss:000000000020D368                 db    ? ;
.bss:000000000020D369                 db    ? ;
.bss:000000000020D36A                 db    ? ;
.bss:000000000020D36B                 db    ? ;
.bss:000000000020D36C                 db    ? ;
.bss:000000000020D36D                 db    ? ;
.bss:000000000020D36E                 db    ? ;
.bss:000000000020D36F                 db    ? ;
.bss:000000000020D370                 db    ? ;
.bss:000000000020D371                 db    ? ;
.bss:000000000020D372                 db    ? ;
.bss:000000000020D373                 db    ? ;
.bss:000000000020D374                 db    ? ;
.bss:000000000020D375                 db    ? ;
.bss:000000000020D376                 db    ? ;
.bss:000000000020D377                 db    ? ;
.bss:000000000020D378                 db    ? ;
.bss:000000000020D379                 db    ? ;
.bss:000000000020D37A                 db    ? ;
.bss:000000000020D37B                 db    ? ;
.bss:000000000020D37C                 db    ? ;
.bss:000000000020D37D                 db    ? ;
.bss:000000000020D37E                 db    ? ;
.bss:000000000020D37F                 db    ? ;
.bss:000000000020D380                 db    ? ;
.bss:000000000020D381                 db    ? ;
.bss:000000000020D382                 db    ? ;
.bss:000000000020D383                 db    ? ;
.bss:000000000020D384                 db    ? ;
.bss:000000000020D385                 db    ? ;
.bss:000000000020D386                 db    ? ;
.bss:000000000020D387                 db    ? ;
.bss:000000000020D388                 db    ? ;
.bss:000000000020D389                 db    ? ;
.bss:000000000020D38A                 db    ? ;
.bss:000000000020D38B                 db    ? ;
.bss:000000000020D38C                 db    ? ;
.bss:000000000020D38D                 db    ? ;
.bss:000000000020D38E                 db    ? ;
.bss:000000000020D38F                 db    ? ;
.bss:000000000020D390                 db    ? ;
.bss:000000000020D391                 db    ? ;
.bss:000000000020D392                 db    ? ;
.bss:000000000020D393                 db    ? ;
.bss:000000000020D394                 db    ? ;
.bss:000000000020D395                 db    ? ;
.bss:000000000020D396                 db    ? ;
.bss:000000000020D397                 db    ? ;
.bss:000000000020D398                 db    ? ;
.bss:000000000020D399                 db    ? ;
.bss:000000000020D39A                 db    ? ;
.bss:000000000020D39B                 db    ? ;
.bss:000000000020D39C                 db    ? ;
.bss:000000000020D39D                 db    ? ;
.bss:000000000020D39E                 db    ? ;
.bss:000000000020D39F                 db    ? ;
.bss:000000000020D3A0                 db    ? ;
.bss:000000000020D3A1                 db    ? ;
.bss:000000000020D3A2                 db    ? ;
.bss:000000000020D3A3                 db    ? ;
.bss:000000000020D3A4                 db    ? ;
.bss:000000000020D3A5                 db    ? ;
.bss:000000000020D3A6                 db    ? ;
.bss:000000000020D3A7                 db    ? ;
.bss:000000000020D3A8                 db    ? ;
.bss:000000000020D3A9                 db    ? ;
.bss:000000000020D3AA                 db    ? ;
.bss:000000000020D3AB                 db    ? ;
.bss:000000000020D3AC                 db    ? ;
.bss:000000000020D3AD                 db    ? ;
.bss:000000000020D3AE                 db    ? ;
.bss:000000000020D3AF                 db    ? ;
.bss:000000000020D3B0                 db    ? ;
.bss:000000000020D3B1                 db    ? ;
.bss:000000000020D3B2                 db    ? ;
.bss:000000000020D3B3                 db    ? ;
.bss:000000000020D3B4                 db    ? ;
.bss:000000000020D3B5                 db    ? ;
.bss:000000000020D3B6                 db    ? ;
.bss:000000000020D3B7                 db    ? ;
.bss:000000000020D3B8                 db    ? ;
.bss:000000000020D3B9                 db    ? ;
.bss:000000000020D3BA                 db    ? ;
.bss:000000000020D3BB                 db    ? ;
.bss:000000000020D3BC                 db    ? ;
.bss:000000000020D3BD                 db    ? ;
.bss:000000000020D3BE                 db    ? ;
.bss:000000000020D3BF                 db    ? ;
.bss:000000000020D3C0                 db    ? ;
.bss:000000000020D3C1                 db    ? ;
.bss:000000000020D3C2                 db    ? ;
.bss:000000000020D3C3                 db    ? ;
.bss:000000000020D3C4                 db    ? ;
.bss:000000000020D3C5                 db    ? ;
.bss:000000000020D3C6                 db    ? ;
.bss:000000000020D3C7                 db    ? ;
.bss:000000000020D3C8                 db    ? ;
.bss:000000000020D3C9                 db    ? ;
.bss:000000000020D3CA                 db    ? ;
.bss:000000000020D3CB                 db    ? ;
.bss:000000000020D3CC                 db    ? ;
.bss:000000000020D3CD                 db    ? ;
.bss:000000000020D3CE                 db    ? ;
.bss:000000000020D3CF                 db    ? ;
.bss:000000000020D3D0                 db    ? ;
.bss:000000000020D3D1                 db    ? ;
.bss:000000000020D3D2                 db    ? ;
.bss:000000000020D3D3                 db    ? ;
.bss:000000000020D3D4                 db    ? ;
.bss:000000000020D3D5                 db    ? ;
.bss:000000000020D3D6                 db    ? ;
.bss:000000000020D3D7                 db    ? ;
.bss:000000000020D3D8                 db    ? ;
.bss:000000000020D3D9                 db    ? ;
.bss:000000000020D3DA                 db    ? ;
.bss:000000000020D3DB                 db    ? ;
.bss:000000000020D3DC                 db    ? ;
.bss:000000000020D3DD                 db    ? ;
.bss:000000000020D3DE                 db    ? ;
.bss:000000000020D3DF                 db    ? ;
.bss:000000000020D3E0 translating     db ?                    ; DATA XREF: main+1AA↑w
.bss:000000000020D3E0                                         ; main+279↑r ...
.bss:000000000020D3E1 truncate_set1   db ?                    ; DATA XREF: main+C0↑w
.bss:000000000020D3E1                                         ; main+8BD↑r ...
.bss:000000000020D3E2 complement      db ?                    ; DATA XREF: main:loc_1A99↑w
.bss:000000000020D3E2                                         ; main+226↑r ...
.bss:000000000020D3E3 delete          db ?                    ; DATA XREF: main:loc_1AB8↑w
.bss:000000000020D3E3                                         ; main+18D↑r ...
.bss:000000000020D3E4 squeeze_repeats db ?                    ; DATA XREF: main:loc_1AA8↑w
.bss:000000000020D3E4                                         ; main+194↑r ...
.bss:000000000020D3E5                 align 8
.bss:000000000020D3E8 ignore_EPIPE    db ?                    ; DATA XREF: close_stdout_set_ignore_EPIPE↑w
.bss:000000000020D3E8                                         ; close_stdout+1B↑r
.bss:000000000020D3E9                 align 10h
.bss:000000000020D3F0 file_name       dq ?                    ; DATA XREF: close_stdout_set_file_name↑w
.bss:000000000020D3F0                                         ; close_stdout+56↑r
.bss:000000000020D3F8                 public program_name
.bss:000000000020D3F8 program_name    dq ?                    ; DATA XREF: usage+14↑r
.bss:000000000020D3F8                                         ; set_program_name:loc_429D↑w
.bss:000000000020D400 slot0           db    ? ;               ; DATA XREF: quotearg_n_options+FE↑o
.bss:000000000020D400                                         ; quotearg_free+46↑o ...
.bss:000000000020D401                 db    ? ;
.bss:000000000020D402                 db    ? ;
.bss:000000000020D403                 db    ? ;
.bss:000000000020D404                 db    ? ;
.bss:000000000020D405                 db    ? ;
.bss:000000000020D406                 db    ? ;
.bss:000000000020D407                 db    ? ;
.bss:000000000020D408                 db    ? ;
.bss:000000000020D409                 db    ? ;
.bss:000000000020D40A                 db    ? ;
.bss:000000000020D40B                 db    ? ;
.bss:000000000020D40C                 db    ? ;
.bss:000000000020D40D                 db    ? ;
.bss:000000000020D40E                 db    ? ;
.bss:000000000020D40F                 db    ? ;
.bss:000000000020D410                 db    ? ;
.bss:000000000020D411                 db    ? ;
.bss:000000000020D412                 db    ? ;
.bss:000000000020D413                 db    ? ;
.bss:000000000020D414                 db    ? ;
.bss:000000000020D415                 db    ? ;
.bss:000000000020D416                 db    ? ;
.bss:000000000020D417                 db    ? ;
.bss:000000000020D418                 db    ? ;
.bss:000000000020D419                 db    ? ;
.bss:000000000020D41A                 db    ? ;
.bss:000000000020D41B                 db    ? ;
.bss:000000000020D41C                 db    ? ;
.bss:000000000020D41D                 db    ? ;
.bss:000000000020D41E                 db    ? ;
.bss:000000000020D41F                 db    ? ;
.bss:000000000020D420                 db    ? ;
.bss:000000000020D421                 db    ? ;
.bss:000000000020D422                 db    ? ;
.bss:000000000020D423                 db    ? ;
.bss:000000000020D424                 db    ? ;
.bss:000000000020D425                 db    ? ;
.bss:000000000020D426                 db    ? ;
.bss:000000000020D427                 db    ? ;
.bss:000000000020D428                 db    ? ;
.bss:000000000020D429                 db    ? ;
.bss:000000000020D42A                 db    ? ;
.bss:000000000020D42B                 db    ? ;
.bss:000000000020D42C                 db    ? ;
.bss:000000000020D42D                 db    ? ;
.bss:000000000020D42E                 db    ? ;
.bss:000000000020D42F                 db    ? ;
.bss:000000000020D430                 db    ? ;
.bss:000000000020D431                 db    ? ;
.bss:000000000020D432                 db    ? ;
.bss:000000000020D433                 db    ? ;
.bss:000000000020D434                 db    ? ;
.bss:000000000020D435                 db    ? ;
.bss:000000000020D436                 db    ? ;
.bss:000000000020D437                 db    ? ;
.bss:000000000020D438                 db    ? ;
.bss:000000000020D439                 db    ? ;
.bss:000000000020D43A                 db    ? ;
.bss:000000000020D43B                 db    ? ;
.bss:000000000020D43C                 db    ? ;
.bss:000000000020D43D                 db    ? ;
.bss:000000000020D43E                 db    ? ;
.bss:000000000020D43F                 db    ? ;
.bss:000000000020D440                 db    ? ;
.bss:000000000020D441                 db    ? ;
.bss:000000000020D442                 db    ? ;
.bss:000000000020D443                 db    ? ;
.bss:000000000020D444                 db    ? ;
.bss:000000000020D445                 db    ? ;
.bss:000000000020D446                 db    ? ;
.bss:000000000020D447                 db    ? ;
.bss:000000000020D448                 db    ? ;
.bss:000000000020D449                 db    ? ;
.bss:000000000020D44A                 db    ? ;
.bss:000000000020D44B                 db    ? ;
.bss:000000000020D44C                 db    ? ;
.bss:000000000020D44D                 db    ? ;
.bss:000000000020D44E                 db    ? ;
.bss:000000000020D44F                 db    ? ;
.bss:000000000020D450                 db    ? ;
.bss:000000000020D451                 db    ? ;
.bss:000000000020D452                 db    ? ;
.bss:000000000020D453                 db    ? ;
.bss:000000000020D454                 db    ? ;
.bss:000000000020D455                 db    ? ;
.bss:000000000020D456                 db    ? ;
.bss:000000000020D457                 db    ? ;
.bss:000000000020D458                 db    ? ;
.bss:000000000020D459                 db    ? ;
.bss:000000000020D45A                 db    ? ;
.bss:000000000020D45B                 db    ? ;
.bss:000000000020D45C                 db    ? ;
.bss:000000000020D45D                 db    ? ;
.bss:000000000020D45E                 db    ? ;
.bss:000000000020D45F                 db    ? ;
.bss:000000000020D460                 db    ? ;
.bss:000000000020D461                 db    ? ;
.bss:000000000020D462                 db    ? ;
.bss:000000000020D463                 db    ? ;
.bss:000000000020D464                 db    ? ;
.bss:000000000020D465                 db    ? ;
.bss:000000000020D466                 db    ? ;
.bss:000000000020D467                 db    ? ;
.bss:000000000020D468                 db    ? ;
.bss:000000000020D469                 db    ? ;
.bss:000000000020D46A                 db    ? ;
.bss:000000000020D46B                 db    ? ;
.bss:000000000020D46C                 db    ? ;
.bss:000000000020D46D                 db    ? ;
.bss:000000000020D46E                 db    ? ;
.bss:000000000020D46F                 db    ? ;
.bss:000000000020D470                 db    ? ;
.bss:000000000020D471                 db    ? ;
.bss:000000000020D472                 db    ? ;
.bss:000000000020D473                 db    ? ;
.bss:000000000020D474                 db    ? ;
.bss:000000000020D475                 db    ? ;
.bss:000000000020D476                 db    ? ;
.bss:000000000020D477                 db    ? ;
.bss:000000000020D478                 db    ? ;
.bss:000000000020D479                 db    ? ;
.bss:000000000020D47A                 db    ? ;
.bss:000000000020D47B                 db    ? ;
.bss:000000000020D47C                 db    ? ;
.bss:000000000020D47D                 db    ? ;
.bss:000000000020D47E                 db    ? ;
.bss:000000000020D47F                 db    ? ;
.bss:000000000020D480                 db    ? ;
.bss:000000000020D481                 db    ? ;
.bss:000000000020D482                 db    ? ;
.bss:000000000020D483                 db    ? ;
.bss:000000000020D484                 db    ? ;
.bss:000000000020D485                 db    ? ;
.bss:000000000020D486                 db    ? ;
.bss:000000000020D487                 db    ? ;
.bss:000000000020D488                 db    ? ;
.bss:000000000020D489                 db    ? ;
.bss:000000000020D48A                 db    ? ;
.bss:000000000020D48B                 db    ? ;
.bss:000000000020D48C                 db    ? ;
.bss:000000000020D48D                 db    ? ;
.bss:000000000020D48E                 db    ? ;
.bss:000000000020D48F                 db    ? ;
.bss:000000000020D490                 db    ? ;
.bss:000000000020D491                 db    ? ;
.bss:000000000020D492                 db    ? ;
.bss:000000000020D493                 db    ? ;
.bss:000000000020D494                 db    ? ;
.bss:000000000020D495                 db    ? ;
.bss:000000000020D496                 db    ? ;
.bss:000000000020D497                 db    ? ;
.bss:000000000020D498                 db    ? ;
.bss:000000000020D499                 db    ? ;
.bss:000000000020D49A                 db    ? ;
.bss:000000000020D49B                 db    ? ;
.bss:000000000020D49C                 db    ? ;
.bss:000000000020D49D                 db    ? ;
.bss:000000000020D49E                 db    ? ;
.bss:000000000020D49F                 db    ? ;
.bss:000000000020D4A0                 db    ? ;
.bss:000000000020D4A1                 db    ? ;
.bss:000000000020D4A2                 db    ? ;
.bss:000000000020D4A3                 db    ? ;
.bss:000000000020D4A4                 db    ? ;
.bss:000000000020D4A5                 db    ? ;
.bss:000000000020D4A6                 db    ? ;
.bss:000000000020D4A7                 db    ? ;
.bss:000000000020D4A8                 db    ? ;
.bss:000000000020D4A9                 db    ? ;
.bss:000000000020D4AA                 db    ? ;
.bss:000000000020D4AB                 db    ? ;
.bss:000000000020D4AC                 db    ? ;
.bss:000000000020D4AD                 db    ? ;
.bss:000000000020D4AE                 db    ? ;
.bss:000000000020D4AF                 db    ? ;
.bss:000000000020D4B0                 db    ? ;
.bss:000000000020D4B1                 db    ? ;
.bss:000000000020D4B2                 db    ? ;
.bss:000000000020D4B3                 db    ? ;
.bss:000000000020D4B4                 db    ? ;
.bss:000000000020D4B5                 db    ? ;
.bss:000000000020D4B6                 db    ? ;
.bss:000000000020D4B7                 db    ? ;
.bss:000000000020D4B8                 db    ? ;
.bss:000000000020D4B9                 db    ? ;
.bss:000000000020D4BA                 db    ? ;
.bss:000000000020D4BB                 db    ? ;
.bss:000000000020D4BC                 db    ? ;
.bss:000000000020D4BD                 db    ? ;
.bss:000000000020D4BE                 db    ? ;
.bss:000000000020D4BF                 db    ? ;
.bss:000000000020D4C0                 db    ? ;
.bss:000000000020D4C1                 db    ? ;
.bss:000000000020D4C2                 db    ? ;
.bss:000000000020D4C3                 db    ? ;
.bss:000000000020D4C4                 db    ? ;
.bss:000000000020D4C5                 db    ? ;
.bss:000000000020D4C6                 db    ? ;
.bss:000000000020D4C7                 db    ? ;
.bss:000000000020D4C8                 db    ? ;
.bss:000000000020D4C9                 db    ? ;
.bss:000000000020D4CA                 db    ? ;
.bss:000000000020D4CB                 db    ? ;
.bss:000000000020D4CC                 db    ? ;
.bss:000000000020D4CD                 db    ? ;
.bss:000000000020D4CE                 db    ? ;
.bss:000000000020D4CF                 db    ? ;
.bss:000000000020D4D0                 db    ? ;
.bss:000000000020D4D1                 db    ? ;
.bss:000000000020D4D2                 db    ? ;
.bss:000000000020D4D3                 db    ? ;
.bss:000000000020D4D4                 db    ? ;
.bss:000000000020D4D5                 db    ? ;
.bss:000000000020D4D6                 db    ? ;
.bss:000000000020D4D7                 db    ? ;
.bss:000000000020D4D8                 db    ? ;
.bss:000000000020D4D9                 db    ? ;
.bss:000000000020D4DA                 db    ? ;
.bss:000000000020D4DB                 db    ? ;
.bss:000000000020D4DC                 db    ? ;
.bss:000000000020D4DD                 db    ? ;
.bss:000000000020D4DE                 db    ? ;
.bss:000000000020D4DF                 db    ? ;
.bss:000000000020D4E0                 db    ? ;
.bss:000000000020D4E1                 db    ? ;
.bss:000000000020D4E2                 db    ? ;
.bss:000000000020D4E3                 db    ? ;
.bss:000000000020D4E4                 db    ? ;
.bss:000000000020D4E5                 db    ? ;
.bss:000000000020D4E6                 db    ? ;
.bss:000000000020D4E7                 db    ? ;
.bss:000000000020D4E8                 db    ? ;
.bss:000000000020D4E9                 db    ? ;
.bss:000000000020D4EA                 db    ? ;
.bss:000000000020D4EB                 db    ? ;
.bss:000000000020D4EC                 db    ? ;
.bss:000000000020D4ED                 db    ? ;
.bss:000000000020D4EE                 db    ? ;
.bss:000000000020D4EF                 db    ? ;
.bss:000000000020D4F0                 db    ? ;
.bss:000000000020D4F1                 db    ? ;
.bss:000000000020D4F2                 db    ? ;
.bss:000000000020D4F3                 db    ? ;
.bss:000000000020D4F4                 db    ? ;
.bss:000000000020D4F5                 db    ? ;
.bss:000000000020D4F6                 db    ? ;
.bss:000000000020D4F7                 db    ? ;
.bss:000000000020D4F8                 db    ? ;
.bss:000000000020D4F9                 db    ? ;
.bss:000000000020D4FA                 db    ? ;
.bss:000000000020D4FB                 db    ? ;
.bss:000000000020D4FC                 db    ? ;
.bss:000000000020D4FD                 db    ? ;
.bss:000000000020D4FE                 db    ? ;
.bss:000000000020D4FF                 db    ? ;
.bss:000000000020D500 default_quoting_options xmmword ?       ; DATA XREF: clone_quoting_options+12↑o
.bss:000000000020D500                                         ; get_quoting_style↑o ...
.bss:000000000020D510 xmmword_20D510  xmmword ?               ; DATA XREF: quotearg_char_mem+41↑r
.bss:000000000020D510                                         ; quotearg_n_custom_mem+39↑r
.bss:000000000020D520 xmmword_20D520  xmmword ?               ; DATA XREF: quotearg_char_mem+4E↑r
.bss:000000000020D520                                         ; quotearg_n_custom_mem+46↑r
.bss:000000000020D530 qword_20D530    dq ?                    ; DATA XREF: quotearg_char_mem+16↑r
.bss:000000000020D530                                         ; quotearg_n_custom_mem+7↑r
.bss:000000000020D530 _bss            ends
.bss:000000000020D530
.prgend:000000000020D538 ; ===========================================================================
.prgend:000000000020D538
.prgend:000000000020D538 ; Segment type: Zero-length
.prgend:000000000020D538 _prgend         segment byte public '' use64
.prgend:000000000020D538 _end            label byte
.prgend:000000000020D538 _prgend         ends
.prgend:000000000020D538
extern:000000000020D540 ; ===========================================================================
extern:000000000020D540
extern:000000000020D540 ; Segment type: Externs
extern:000000000020D540 ; extern
extern:000000000020D540 ; const __int32_t **_ctype_toupper_loc(void)
extern:000000000020D540                 extrn __ctype_toupper_loc:near
extern:000000000020D540                                         ; CODE XREF: ___ctype_toupper_loc↑j
extern:000000000020D540                                         ; DATA XREF: .got:__ctype_toupper_loc_ptr↑o
extern:000000000020D548 ; void free(void *ptr)
extern:000000000020D548                 extrn free:near         ; CODE XREF: _free↑j
extern:000000000020D548                                         ; DATA XREF: .got:free_ptr↑o
extern:000000000020D550 ; void __noreturn abort(void)
extern:000000000020D550                 extrn abort:near        ; CODE XREF: _abort↑j
extern:000000000020D550                                         ; DATA XREF: .got:abort_ptr↑o
extern:000000000020D558 ; int *_errno_location(void)
extern:000000000020D558                 extrn __errno_location:near
extern:000000000020D558                                         ; CODE XREF: ___errno_location↑j
extern:000000000020D558                                         ; DATA XREF: .got:__errno_location_ptr↑o
extern:000000000020D560 ; int strncmp(const char *s1, const char *s2, size_t n)
extern:000000000020D560                 extrn strncmp:near      ; CODE XREF: _strncmp↑j
extern:000000000020D560                                         ; DATA XREF: .got:strncmp_ptr↑o
extern:000000000020D568 ; void __noreturn exit(int status)
extern:000000000020D568                 extrn _exit:near        ; CODE XREF: __exit↑j
extern:000000000020D568                                         ; DATA XREF: .got:_exit_ptr↑o
extern:000000000020D570 ; size_t _fpending(FILE *fp)
extern:000000000020D570                 extrn __fpending:near   ; CODE XREF: ___fpending↑j
extern:000000000020D570                                         ; DATA XREF: .got:__fpending_ptr↑o
extern:000000000020D578 ; char *textdomain(const char *domainname)
extern:000000000020D578                 extrn textdomain:near   ; CODE XREF: _textdomain↑j
extern:000000000020D578                                         ; DATA XREF: .got:textdomain_ptr↑o
extern:000000000020D580 ; int fclose(FILE *stream)
extern:000000000020D580                 extrn fclose:near       ; CODE XREF: _fclose↑j
extern:000000000020D580                                         ; DATA XREF: .got:fclose_ptr↑o
extern:000000000020D588 ; char *bindtextdomain(const char *domainname, const char *dirname)
extern:000000000020D588                 extrn bindtextdomain:near
extern:000000000020D588                                         ; CODE XREF: _bindtextdomain↑j
extern:000000000020D588                                         ; DATA XREF: .got:bindtextdomain_ptr↑o
extern:000000000020D590 ; char *stpcpy(char *dest, const char *src)
extern:000000000020D590                 extrn stpcpy:near       ; CODE XREF: _stpcpy↑j
extern:000000000020D590                                         ; DATA XREF: .got:stpcpy_ptr↑o
extern:000000000020D598 ; char *dcgettext(const char *domainname, const char *msgid, int category)
extern:000000000020D598                 extrn dcgettext:near    ; CODE XREF: _dcgettext↑j
extern:000000000020D598                                         ; DATA XREF: .got:dcgettext_ptr↑o
extern:000000000020D5A0 ; size_t _ctype_get_mb_cur_max(void)
extern:000000000020D5A0                 extrn __ctype_get_mb_cur_max:near
extern:000000000020D5A0                                         ; CODE XREF: ___ctype_get_mb_cur_max↑j
extern:000000000020D5A0                                         ; DATA XREF: .got:__ctype_get_mb_cur_max_ptr↑o
extern:000000000020D5A8 ; size_t strlen(const char *s)
extern:000000000020D5A8                 extrn strlen:near       ; CODE XREF: _strlen↑j
extern:000000000020D5A8                                         ; DATA XREF: .got:strlen_ptr↑o
extern:000000000020D5B0                 extrn __stack_chk_fail:near
extern:000000000020D5B0                                         ; CODE XREF: ___stack_chk_fail↑j
extern:000000000020D5B0                                         ; DATA XREF: .got:__stack_chk_fail_ptr↑o
extern:000000000020D5B8 ; int getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)
extern:000000000020D5B8                 extrn getopt_long:near  ; CODE XREF: _getopt_long↑j
extern:000000000020D5B8                                         ; DATA XREF: .got:getopt_long_ptr↑o
extern:000000000020D5C0 ; size_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)
extern:000000000020D5C0                 extrn mbrtowc:near      ; CODE XREF: _mbrtowc↑j
extern:000000000020D5C0                                         ; DATA XREF: .got:mbrtowc_ptr↑o
extern:000000000020D5C8 ; char *strchr(const char *s, int c)
extern:000000000020D5C8                 extrn strchr:near       ; CODE XREF: _strchr↑j
extern:000000000020D5C8                                         ; DATA XREF: .got:strchr_ptr↑o
extern:000000000020D5D0 ; char *strrchr(const char *s, int c)
extern:000000000020D5D0                 extrn strrchr:near      ; CODE XREF: _strrchr↑j
extern:000000000020D5D0                                         ; DATA XREF: .got:strrchr_ptr↑o
extern:000000000020D5D8 ; __off_t lseek(int fd, __off_t offset, int whence)
extern:000000000020D5D8                 extrn lseek:near        ; CODE XREF: _lseek↑j
extern:000000000020D5D8                                         ; DATA XREF: .got:lseek_ptr↑o
extern:000000000020D5E0 ; void __noreturn _assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)
extern:000000000020D5E0                 extrn __assert_fail:near
extern:000000000020D5E0                                         ; CODE XREF: ___assert_fail↑j
extern:000000000020D5E0                                         ; DATA XREF: .got:__assert_fail_ptr↑o
extern:000000000020D5E8 ; unsigned __int64 _strtoul_internal(const char *nptr, char **endptr, int base, int group)
extern:000000000020D5E8                 extrn __strtoul_internal:near
extern:000000000020D5E8                                         ; CODE XREF: ___strtoul_internal↑j
extern:000000000020D5E8                                         ; DATA XREF: .got:__strtoul_internal_ptr↑o
extern:000000000020D5F0 ; void *memset(void *s, int c, size_t n)
extern:000000000020D5F0                 extrn memset:near       ; CODE XREF: _memset↑j
extern:000000000020D5F0                                         ; DATA XREF: .got:memset_ptr↑o
extern:000000000020D5F8 ; int close(int fd)
extern:000000000020D5F8                 extrn close:near        ; CODE XREF: _close↑j
extern:000000000020D5F8                                         ; DATA XREF: .got:close_ptr↑o
extern:000000000020D600 ; int posix_fadvise(int fd, off_t offset, off_t len, int advise)
extern:000000000020D600                 extrn posix_fadvise:near
extern:000000000020D600                                         ; CODE XREF: _posix_fadvise↑j
extern:000000000020D600                                         ; DATA XREF: .got:posix_fadvise_ptr↑o
extern:000000000020D608 ; ssize_t read(int fd, void *buf, size_t nbytes)
extern:000000000020D608                 extrn read:near         ; CODE XREF: _read↑j
extern:000000000020D608                                         ; DATA XREF: .got:read_ptr↑o
extern:000000000020D610 ; int __fastcall _libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)
extern:000000000020D610                 extrn __libc_start_main:near
extern:000000000020D610                                         ; CODE XREF: start+24↑p
extern:000000000020D610                                         ; DATA XREF: .got:__libc_start_main_ptr↑o
extern:000000000020D618 ; int memcmp(const void *s1, const void *s2, size_t n)
extern:000000000020D618                 extrn memcmp:near       ; CODE XREF: _memcmp↑j
extern:000000000020D618                                         ; DATA XREF: .got:memcmp_ptr↑o
extern:000000000020D620 ; int fputs_unlocked(const char *s, FILE *stream)
extern:000000000020D620                 extrn fputs_unlocked:near
extern:000000000020D620                                         ; CODE XREF: _fputs_unlocked↑j
extern:000000000020D620                                         ; DATA XREF: .got:fputs_unlocked_ptr↑o
extern:000000000020D628 ; void *calloc(size_t nmemb, size_t size)
extern:000000000020D628                 extrn calloc:near       ; CODE XREF: _calloc↑j
extern:000000000020D628                                         ; DATA XREF: .got:calloc_ptr↑o
extern:000000000020D630 ; void *memcpy(void *dest, const void *src, size_t n)
extern:000000000020D630                 extrn memcpy:near       ; CODE XREF: _memcpy↑j
extern:000000000020D630                                         ; DATA XREF: .got:memcpy_ptr↑o
extern:000000000020D638 ; int fileno(FILE *stream)
extern:000000000020D638                 extrn fileno:near       ; CODE XREF: _fileno↑j
extern:000000000020D638                                         ; DATA XREF: .got:fileno_ptr↑o
extern:000000000020D640 ; void *malloc(size_t size)
extern:000000000020D640                 extrn malloc:near       ; CODE XREF: _malloc↑j
extern:000000000020D640                                         ; DATA XREF: .got:malloc_ptr↑o
extern:000000000020D648 ; int fflush(FILE *stream)
extern:000000000020D648                 extrn fflush:near       ; CODE XREF: _fflush↑j
extern:000000000020D648                                         ; DATA XREF: .got:fflush_ptr↑o
extern:000000000020D650 ; char *nl_langinfo(nl_item item)
extern:000000000020D650                 extrn nl_langinfo:near  ; CODE XREF: _nl_langinfo↑j
extern:000000000020D650                                         ; DATA XREF: .got:nl_langinfo_ptr↑o
extern:000000000020D658 ; int _freading(FILE *fp)
extern:000000000020D658                 extrn __freading:near   ; CODE XREF: ___freading↑j
extern:000000000020D658                                         ; DATA XREF: .got:__freading_ptr↑o
extern:000000000020D660 ; size_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)
extern:000000000020D660                 extrn fwrite_unlocked:near
extern:000000000020D660                                         ; CODE XREF: _fwrite_unlocked↑j
extern:000000000020D660                                         ; DATA XREF: .got:fwrite_unlocked_ptr↑o
extern:000000000020D668 ; void *realloc(void *ptr, size_t size)
extern:000000000020D668                 extrn realloc:near      ; CODE XREF: _realloc↑j
extern:000000000020D668                                         ; DATA XREF: .got:realloc_ptr↑o
extern:000000000020D670 ; char *setlocale(int category, const char *locale)
extern:000000000020D670                 extrn setlocale:near    ; CODE XREF: _setlocale↑j
extern:000000000020D670                                         ; DATA XREF: .got:setlocale_ptr↑o
extern:000000000020D678                 extrn __printf_chk:near ; CODE XREF: ___printf_chk↑j
extern:000000000020D678                                         ; DATA XREF: .got:__printf_chk_ptr↑o
extern:000000000020D680 ; void error(int status, int errnum, const char *format, ...)
extern:000000000020D680                 extrn error:near        ; CODE XREF: _error↑j
extern:000000000020D680                                         ; DATA XREF: .got:error_ptr↑o
extern:000000000020D688 ; int fseeko(FILE *stream, __off_t off, int whence)
extern:000000000020D688                 extrn fseeko:near       ; CODE XREF: _fseeko↑j
extern:000000000020D688                                         ; DATA XREF: .got:fseeko_ptr↑o
extern:000000000020D690 ; int __fastcall _cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)
extern:000000000020D690                 extrn __cxa_atexit:near ; CODE XREF: ___cxa_atexit↑j
extern:000000000020D690                                         ; DATA XREF: .got:__cxa_atexit_ptr↑o
extern:000000000020D698 ; void __noreturn exit(int status)
extern:000000000020D698                 extrn exit:near         ; CODE XREF: _exit↑j
extern:000000000020D698                                         ; DATA XREF: .got:exit_ptr↑o
extern:000000000020D6A0 ; size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)
extern:000000000020D6A0                 extrn fwrite:near       ; CODE XREF: _fwrite↑j
extern:000000000020D6A0                                         ; DATA XREF: .got:fwrite_ptr↑o
extern:000000000020D6A8                 extrn __fprintf_chk:near
extern:000000000020D6A8                                         ; CODE XREF: ___fprintf_chk↑j
extern:000000000020D6A8                                         ; DATA XREF: .got:__fprintf_chk_ptr↑o
extern:000000000020D6B0 ; int mbsinit(const mbstate_t *ps)
extern:000000000020D6B0                 extrn mbsinit:near      ; CODE XREF: _mbsinit↑j
extern:000000000020D6B0                                         ; DATA XREF: .got:mbsinit_ptr↑o
extern:000000000020D6B8 ; int iswprint(wint_t wc)
extern:000000000020D6B8                 extrn iswprint:near     ; CODE XREF: _iswprint↑j
extern:000000000020D6B8                                         ; DATA XREF: .got:iswprint_ptr↑o
extern:000000000020D6C0 ; int __fastcall __cxa_finalize(void *)
extern:000000000020D6C0                 extrn __imp___cxa_finalize:near ; weak
extern:000000000020D6C0                                         ; CODE XREF: __cxa_finalize↑j
extern:000000000020D6C0                                         ; DATA XREF: .got:__cxa_finalize_ptr↑o
extern:000000000020D6C8 ; const __int32_t **_ctype_tolower_loc(void)
extern:000000000020D6C8                 extrn __ctype_tolower_loc:near
extern:000000000020D6C8                                         ; CODE XREF: ___ctype_tolower_loc↑j
extern:000000000020D6C8                                         ; DATA XREF: .got:__ctype_tolower_loc_ptr↑o
extern:000000000020D6D0 ; const unsigned __int16 **_ctype_b_loc(void)
extern:000000000020D6D0                 extrn __ctype_b_loc:near
extern:000000000020D6D0                                         ; CODE XREF: ___ctype_b_loc↑j
extern:000000000020D6D0                                         ; DATA XREF: .got:__ctype_b_loc_ptr↑o
extern:000000000020D6D8                 extrn __sprintf_chk:near
extern:000000000020D6D8                                         ; CODE XREF: ___sprintf_chk↑j
extern:000000000020D6D8                                         ; DATA XREF: .got:__sprintf_chk_ptr↑o
extern:000000000020D6E0                 extrn _ITM_deregisterTMCloneTable ; weak
extern:000000000020D6E0                                         ; DATA XREF: .got:_ITM_deregisterTMCloneTable_ptr↑o
extern:000000000020D6E8                 extrn __gmon_start__:near ; weak
extern:000000000020D6E8                                         ; CODE XREF: _init_proc+10↑p
extern:000000000020D6E8                                         ; DATA XREF: .got:__gmon_start___ptr↑o
extern:000000000020D6F0                 extrn _ITM_registerTMCloneTable ; weak
extern:000000000020D6F0                                         ; DATA XREF: .got:_ITM_registerTMCloneTable_ptr↑o
extern:000000000020D6F0
extern:000000000020D6F0
extern:000000000020D6F0                 end start
