
"__ctype_toupper_loc@plt" :
1740(6): jmp 0x2086da(%rip)
1746(5): push $0x0

"__uflow@plt" :
1750(6): jmp 0x2086d2(%rip)
1756(5): push $0x1

"getenv@plt" :
1760(6): jmp 0x2086ca(%rip)
1766(5): push $0x2

"free@plt" :
1770(6): jmp 0x2086c2(%rip)
1776(5): push $0x3

"abort@plt" :
1780(6): jmp 0x2086ba(%rip)
1786(5): push $0x4

"__errno_location@plt" :
1790(6): jmp 0x2086b2(%rip)
1796(5): push $0x5

"strncmp@plt" :
17a0(6): jmp 0x2086aa(%rip)
17a6(5): push $0x6

"_exit@plt" :
17b0(6): jmp 0x2086a2(%rip)
17b6(5): push $0x7

"__fpending@plt" :
17c0(6): jmp 0x20869a(%rip)
17c6(5): push $0x8

"textdomain@plt" :
17d0(6): jmp 0x208692(%rip)
17d6(5): push $0x9

"fclose@plt" :
17e0(6): jmp 0x20868a(%rip)
17e6(5): push $0xa

"bindtextdomain@plt" :
17f0(6): jmp 0x208682(%rip)
17f6(5): push $0xb

"dcgettext@plt" :
1800(6): jmp 0x20867a(%rip)
1806(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
1810(6): jmp 0x208672(%rip)
1816(5): push $0xd

"strlen@plt" :
1820(6): jmp 0x20866a(%rip)
1826(5): push $0xe

"__stack_chk_fail@plt" :
1830(6): jmp 0x208662(%rip)
1836(5): push $0xf

"getopt_long@plt" :
1840(6): jmp 0x20865a(%rip)
1846(5): push $0x10

"mbrtowc@plt" :
1850(6): jmp 0x208652(%rip)
1856(5): push $0x11

"dup2@plt" :
1860(6): jmp 0x20864a(%rip)
1866(5): push $0x12

"strchr@plt" :
1870(6): jmp 0x208642(%rip)
1876(5): push $0x13

"__overflow@plt" :
1880(6): jmp 0x20863a(%rip)
1886(5): push $0x14

"strrchr@plt" :
1890(6): jmp 0x208632(%rip)
1896(5): push $0x15

"lseek@plt" :
18a0(6): jmp 0x20862a(%rip)
18a6(5): push $0x16

"__assert_fail@plt" :
18b0(6): jmp 0x208622(%rip)
18b6(5): push $0x17

"memset@plt" :
18c0(6): jmp 0x20861a(%rip)
18c6(5): push $0x18

"freopen@plt" :
18d0(6): jmp 0x208612(%rip)
18d6(5): push $0x19

"close@plt" :
18e0(6): jmp 0x20860a(%rip)
18e6(5): push $0x1a

"posix_fadvise@plt" :
18f0(6): jmp 0x208602(%rip)
18f6(5): push $0x1b

"memcmp@plt" :
1900(6): jmp 0x2085fa(%rip)
1906(5): push $0x1c

"fputs_unlocked@plt" :
1910(6): jmp 0x2085f2(%rip)
1916(5): push $0x1d

"calloc@plt" :
1920(6): jmp 0x2085ea(%rip)
1926(5): push $0x1e

"strcmp@plt" :
1930(6): jmp 0x2085e2(%rip)
1936(5): push $0x1f

"strtol@plt" :
1940(6): jmp 0x2085da(%rip)
1946(5): push $0x20

"memcpy@plt" :
1950(6): jmp 0x2085d2(%rip)
1956(5): push $0x21

"fileno@plt" :
1960(6): jmp 0x2085ca(%rip)
1966(5): push $0x22

"malloc@plt" :
1970(6): jmp 0x2085c2(%rip)
1976(5): push $0x23

"fflush@plt" :
1980(6): jmp 0x2085ba(%rip)
1986(5): push $0x24

"nl_langinfo@plt" :
1990(6): jmp 0x2085b2(%rip)
1996(5): push $0x25

"strcoll@plt" :
19a0(6): jmp 0x2085aa(%rip)
19a6(5): push $0x26

"__freading@plt" :
19b0(6): jmp 0x2085a2(%rip)
19b6(5): push $0x27

"fwrite_unlocked@plt" :
19c0(6): jmp 0x20859a(%rip)
19c6(5): push $0x28

"realloc@plt" :
19d0(6): jmp 0x208592(%rip)
19d6(5): push $0x29

"setlocale@plt" :
19e0(6): jmp 0x20858a(%rip)
19e6(5): push $0x2a

"__printf_chk@plt" :
19f0(6): jmp 0x208582(%rip)
19f6(5): push $0x2b

"error@plt" :
1a00(6): jmp 0x20857a(%rip)
1a06(5): push $0x2c

"open@plt" :
1a10(6): jmp 0x208572(%rip)
1a16(5): push $0x2d

"fseeko@plt" :
1a20(6): jmp 0x20856a(%rip)
1a26(5): push $0x2e

"strtoul@plt" :
1a30(6): jmp 0x208562(%rip)
1a36(5): push $0x2f

"__cxa_atexit@plt" :
1a40(6): jmp 0x20855a(%rip)
1a46(5): push $0x30

"exit@plt" :
1a50(6): jmp 0x208552(%rip)
1a56(5): push $0x31

"fwrite@plt" :
1a60(6): jmp 0x20854a(%rip)
1a66(5): push $0x32

"__fprintf_chk@plt" :
1a70(6): jmp 0x208542(%rip)
1a76(5): push $0x33

"mbsinit@plt" :
1a80(6): jmp 0x20853a(%rip)
1a86(5): push $0x34

"iswprint@plt" :
1a90(6): jmp 0x208532(%rip)
1a96(5): push $0x35

"__ctype_b_loc@plt" :
1aa0(6): jmp 0x20852a(%rip)
1aa6(5): push $0x36

".plt.got" :
1ab0(6): jmp 0x208542(%rip)
1ab6(2): nop 

"_init" :
1718(4): sub $0x8,%rsp
171c(7): mov 0x2088c5(%rip),%rax
1723(3): test %rax,%rax
1726(2): jz 0x4(%rip)
1728(2): call %rax
172a(4): add $0x8,%rsp
172e(1): ret near (%rsp)

"main" :
1ac0(2): push %r15
1ac2(2): push %r14
1ac4(3): mov %edi,%r14d
1ac7(2): push %r13
1ac9(2): push %r12
1acb(7): lea 0x4d27(%rip),%rdi
1ad2(1): push %rbp
1ad3(1): push %rbx
1ad4(3): mov %rsi,%r15
1ad7(7): sub $0xa8,%rsp
1ade(9): mov $0x28,%rax
1ae7(8): mov %rax,0x98(%rsp)
1aef(2): xor %eax,%eax
1af1(5): call 0xfffffc6f(%rip)
1af6(3): mov (%r15),%rdi
1af9(3): test %rax,%rax
1afc(7): lea 0x576f(%rip),%rax
1b03(4): setnz %r12b
1b07(3): xor %r13d,%r13d
1b0a(2): xor %ebx,%ebx
1b0c(8): mov %rax,0x88(%rsp)
1b14(8): mov %rax,0x80(%rsp)
1b1c(2): xor %ebp,%ebp
1b1e(5): call 0x1be2(%rip)
1b23(7): lea 0x5c77(%rip),%rsi
1b2a(5): mov $0x6,%edi
1b2f(5): call 0xfffffeb1(%rip)
1b34(7): lea 0x4cce(%rip),%rsi
1b3b(7): lea 0x4c8e(%rip),%rdi
1b42(5): call 0xfffffcae(%rip)
1b47(7): lea 0x4c82(%rip),%rdi
1b4e(5): call 0xfffffc82(%rip)
1b53(5): mov $0x3,%edi
1b58(5): call 0x1928(%rip)
1b5d(7): lea 0x162c(%rip),%rdi
1b64(6): mov %al,0x2085ae(%rip)
1b6a(5): call 0x4bb6(%rip)
1b6f(5): lea 0x60(%rsp),%rcx
1b74(7): mov $0xffffffff,%rax
1b7b(b): mov $0x0,0x208582(%rip)
1b86(b): mov $0x0,0x20857f(%rip)
1b91(7): mov %rax,0x208568(%rip)
1b98(7): mov $0x1,0x20855b(%rip)
1b9f(7): mov $0x1,0x208555(%rip)
1ba6(7): mov $0x0,0x20854c(%rip)
1bad(a): mov $0x1,0x208545(%rip)
1bb7(a): mov $0x0,0x208533(%rip)
1bc1(5): mov $0xa,0x27(%rsp)
1bc6(8): mov $0x0,0x8(%rsp)
1bce(5): mov %rcx,0x18(%rsp)
1bd3(5): mov %rax,0x10(%rsp)
1bd8(2): jmp 0x42(%rip)
1bda(6): nop 0x0(%rax,%rax,1)
1be0(3): test %r12b,%r12b
1be3(2): jz 0x40(%rip)
1be5(6): mov 0x2084cd(%rip),%eax
1beb(3): cmp %r14d,%eax
1bee(6): jnl 0x155(%rip)
1bf4(3): movsxd %eax,%rdx
1bf7(3): cmp $0x2,%ebx
1bfa(4): mov 0x0(%r15,%rdx,8),%rdi
1bfe(6): jz 0x8de(%rip)
1c04(3): add $0x1,%eax
1c07(6): mov %eax,0x2084ab(%rip)
1c0d(2): mov %ebx,%eax
1c0f(3): add $0x1,%ebx
1c12(8): mov %rdi,0x80(%rsp,%rax,8)
1c1a(3): cmp $0xff,%ebp
1c1d(2): jz 0xffffffc8(%rip)
1c1f(2): test %ebx,%ebx
1c21(2): jnz 0xffffffbf(%rip)
1c23(7): lea 0x207d96(%rip),%rcx
1c2a(7): lea 0x4bf0(%rip),%rdx
1c31(3): xor %r8d,%r8d
1c34(3): mov %r15,%rsi
1c37(3): mov %r14d,%edi
1c3a(5): call 0xfffffc06(%rip)
1c3f(3): cmp $0xff,%eax
1c42(2): mov %eax,%ebp
1c44(2): jz 0xffffffa1(%rip)
1c46(3): cmp $0x64,%eax
1c49(6): jz 0x540(%rip)
1c4f(2): jle 0x51(%rip)
1c51(3): cmp $0x75,%eax
1c54(6): jz 0x523(%rip)
1c5a(6): jnle 0x86(%rip)
1c60(3): cmp $0x69,%eax
1c63(6): jz 0x538(%rip)
1c69(3): cmp $0x73,%eax
1c6c(6): jz 0x369(%rip)
1c72(3): cmp $0x66,%eax
1c75(2): jnz 0x58(%rip)
1c77(7): mov 0x208442(%rip),%rdi
1c7e(7): lea 0x53db(%rip),%rsi
1c85(5): call 0xaab(%rip)
1c8a(8): mov $0x2,0x8(%rsp)
1c92(7): mov %rax,0x208477(%rip)
1c99(2): jmp 0xffffff86(%rip)
1c9b(5): nop 0x0(%rax,%rax,1)
1ca0(3): cmp $0x39,%eax
1ca3(2): jnle 0x7d(%rip)
1ca5(3): cmp $0x30,%eax
1ca8(6): jnl 0x4ff(%rip)
1cae(5): cmp $0xffffff7e,%eax
1cb3(6): jz 0x87b(%rip)
1cb9(3): cmp $0x1,%eax
1cbc(6): jz 0x2ee(%rip)
1cc2(5): cmp $0xffffff7d,%eax
1cc7(6): jz 0x51e(%rip)
1ccd(5): mov $0x1,%edi
1cd2(5): call 0xc4e(%rip)
1cd7(9): nop 0x0(%rax,%rax,1)
1ce0(3): cmp $0x7a,%eax
1ce3(6): jz 0x540(%rip)
1ce9(5): cmp $0x80,%eax
1cee(6): jz 0x366(%rip)
1cf4(3): cmp $0x77,%eax
1cf7(2): jnz 0xffffffd6(%rip)
1cf9(7): mov 0x2083c0(%rip),%rdi
1d00(7): lea 0x53a1(%rip),%rsi
1d07(5): call 0xa29(%rip)
1d0c(7): mov %rax,0x2083ed(%rip)
1d13(5): jmp 0xffffff0c(%rip)
1d18(8): nop 0x0(%rax,%rax,1)
1d20(3): cmp $0x44,%eax
1d23(6): jz 0x2d1(%rip)
1d29(3): cmp $0x63,%eax
1d2c(2): jnz 0xffffffa1(%rip)
1d2e(a): mov $0x0,0x2083c4(%rip)
1d38(6): mov $0x1,%r13d
1d3e(5): jmp 0xfffffee1(%rip)
1d43(7): cmp $0x0,0x2083a6(%rip)
1d4a(6): jz 0x356(%rip)
1d50(3): test %r13b,%r13b
1d53(6): jnz 0x7e2(%rip)
1d59(7): cmp $0x1,0x20839c(%rip)
1d60(5): mov $0x5,%edx
1d65(7): lea 0x5394(%rip),%rsi
1d6c(6): jnz 0x7d5(%rip)
1d72(5): movsx 0x27(%rsp),%eax
1d77(7): lea 0x54f4(%rip),%rsi
1d7e(8): mov 0x88(%rsp),%rbx
1d86(4): mov %eax,0x18(%rsp)
1d8a(8): mov 0x80(%rsp),%rax
1d92(3): mov %rax,%rdi
1d95(5): mov %rax,0x30(%rsp)
1d9a(5): call 0xfffffb96(%rip)
1d9f(2): test %eax,%eax
1da1(6): jnz 0x48c(%rip)
1da7(7): lea 0x54c4(%rip),%rsi
1dae(3): mov %rbx,%rdi
1db1(5): call 0xfffffb7f(%rip)
1db6(2): test %eax,%eax
1db8(2): jz 0x21(%rip)
1dba(7): mov 0x2082e7(%rip),%rdx
1dc1(7): lea 0x4abd(%rip),%rsi
1dc8(3): mov %rbx,%rdi
1dcb(5): call 0x1505(%rip)
1dd0(3): test %rax,%rax
1dd3(6): jz 0x78d(%rip)
1dd9(7): mov 0x2082d0(%rip),%rdi
1de0(5): lea 0x40(%rsp),%rbp
1de5(5): mov $0x2,%esi
1dea(5): lea 0x60(%rsp),%r13
1def(5): call 0x1461(%rip)
1df4(3): mov %rbp,%rdi
1df7(5): call 0x16e9(%rip)
1dfc(3): mov %r13,%rdi
1dff(5): call 0x16e1(%rip)
1e04(7): cmp $0x0,0x2082f0(%rip)
1e0b(2): jz 0x1a(%rip)
1e0d(7): movzx 0x2082e6(%rip),%ebx
1e14(2): test %bl,%bl
1e16(2): jz 0xf(%rip)
1e18(7): cmp $0x1,0x2082dd(%rip)
1e1f(6): jz 0x484(%rip)
1e25(4): mov 0x18(%rsp),%edx
1e29(7): mov 0x208280(%rip),%rsi
1e30(3): mov %r13,%rdi
1e33(5): call 0x16bd(%rip)
1e38(3): test %rax,%rax
1e3b(6): jz 0x113(%rip)
1e41(5): mov 0x70(%rsp),%r12
1e46(5): mov 0x68(%rsp),%rbx
1e4b(3): mov %r12,%rsi
1e4e(3): mov %rbx,%rdi
1e51(4): sub $0x1,%rbx
1e55(5): call 0x9eb(%rip)
1e5a(5): mov %rax,0x10(%rsp)
1e5f(3): sub %r12,%rax
1e62(5): mov $0x1,0x28(%rsp)
1e67(3): sub %rax,%rbx
1e6a(3): xor %r12d,%r12d
1e6d(5): mov %rbx,0x8(%rsp)
1e72(7): mov 0x208237(%rip),%rsi
1e79(3): test $0x10,(%rsi)
1e7c(6): jnz 0xc5(%rip)
1e82(4): mov 0x18(%rsp),%edx
1e86(3): mov %rbp,%rdi
1e89(5): call 0x1667(%rip)
1e8e(3): test %rax,%rax
1e91(6): jz 0x4e3(%rip)
1e97(4): mov 0x8(%rbp),%rbx
1e9b(4): mov 0x10(%rbp),%r15
1e9f(3): mov %rbx,%rdi
1ea2(3): mov %r15,%rsi
1ea5(4): sub $0x1,%rbx
1ea9(5): call 0x997(%rip)
1eae(5): mov 0x8(%rsp),%rcx
1eb3(3): mov %rax,%r14
1eb6(5): mov 0x10(%rsp),%rsi
1ebb(3): sub %r15,%rax
1ebe(3): mov %r14,%rdi
1ec1(3): sub %rax,%rbx
1ec4(3): mov %rbx,%rdx
1ec7(5): call 0x7d9(%rip)
1ecc(2): mov %eax,%edx
1ece(3): xor $0x1,%edx
1ed1(3): movzx %dl,%ecx
1ed4(3): movzx %dl,%edx
1ed7(3): add %rdx,%r12
1eda(4): cmp $0xffffffff,%r12
1ede(6): jz 0x232(%rip)
1ee4(6): mov 0x20820a(%rip),%edx
1eea(2): test %edx,%edx
1eec(6): jz 0x1e6(%rip)
1ef2(2): test %al,%al
1ef4(6): jz 0x242(%rip)
1efa(5): movzx 0x28(%rsp),%eax
1eff(3): test %r12,%r12
1f02(5): mov $0x0,%esi
1f07(3): cmovne %esi,%eax
1f0a(4): mov %al,0x28(%rsp)
1f0e(3): mov %r12,%rdx
1f11(2): mov %ecx,%esi
1f13(3): mov %r13,%rdi
1f16(5): call 0x8aa(%rip)
1f1b(7): mov 0x20818e(%rip),%rsi
1f22(3): xor %r12d,%r12d
1f25(3): mov %rbp,%rax
1f28(5): mov %rbx,0x8(%rsp)
1f2d(3): mov %r13,%rbp
1f30(5): mov %r14,0x10(%rsp)
1f35(3): mov %rax,%r13
1f38(3): test $0x10,(%rsi)
1f3b(6): jz 0xffffff47(%rip)
1f41(3): mov %r12,%rdx
1f44(2): xor %esi,%esi
1f46(3): mov %r13,%rdi
1f49(5): call 0x877(%rip)
1f4e(7): mov 0x20815b(%rip),%rdi
1f55(3): test $0x20,(%rdi)
1f58(6): jnz 0x42c(%rip)
1f5e(5): call 0x4302(%rip)
1f63(2): test %eax,%eax
1f65(6): jnz 0x41f(%rip)
1f6b(5): mov 0x50(%rsp),%rdi
1f70(5): call 0xfffff800(%rip)
1f75(5): mov 0x70(%rsp),%rdi
1f7a(5): call 0xfffff7f6(%rip)
1f7f(2): xor %eax,%eax
1f81(8): mov 0x98(%rsp),%rcx
1f89(9): xor $0x28,%rcx
1f92(6): jnz 0x5c9(%rip)
1f98(7): add $0xa8,%rsp
1f9f(1): pop %rbx
1fa0(1): pop %rbp
1fa1(2): pop %r12
1fa3(2): pop %r13
1fa5(2): pop %r14
1fa7(2): pop %r15
1fa9(1): ret near (%rsp)
1faa(7): mov 0x20810f(%rip),%rdi
1fb1(3): cmp $0x2b,(%rdi)
1fb4(6): jz 0x498(%rip)
1fba(3): cmp $0x2,%ebx
1fbd(6): jz 0x51f(%rip)
1fc3(2): mov %ebx,%eax
1fc5(3): add $0x1,%ebx
1fc8(8): mov %rdi,0x80(%rsp,%rax,8)
1fd0(5): jmp 0xfffffc4f(%rip)
1fd5(7): mov 0x2080e4(%rip),%rdi
1fdc(7): lea 0x50a5(%rip),%rsi
1fe3(5): call 0x74d(%rip)
1fe8(7): mov %rax,0x208119(%rip)
1fef(5): jmp 0xfffffc30(%rip)
1ff4(7): mov 0x2080c5(%rip),%rsi
1ffb(7): mov $0x0,0x2080f9(%rip)
2002(7): mov $0x1,0x2080f0(%rip)
2009(3): test %rsi,%rsi
200c(6): jz 0x273(%rip)
2012(7): mov 0x207fff(%rip),%r9
2019(7): lea 0x207b80(%rip),%rdx
2020(7): lea 0x5169(%rip),%rcx
2027(7): lea 0x481c(%rip),%rdi
202e(6): mov $0x4,%r8d
2034(6): mov $0x1,%r13d
203a(5): call 0x1076(%rip)
203f(7): lea 0x514a(%rip),%rdx
2046(3): mov 0x0(%rdx,%rax,4),%eax
2049(6): mov %eax,0x2080a5(%rip)
204f(5): jmp 0xfffffbd0(%rip)
2054(7): mov 0x208065(%rip),%rsi
205b(3): test %rsi,%rsi
205e(6): jz 0x236(%rip)
2064(7): mov 0x207fad(%rip),%r9
206b(7): lea 0x207aee(%rip),%rdx
2072(7): lea 0x5107(%rip),%rcx
2079(7): lea 0x47d9(%rip),%rdi
2080(6): mov $0x4,%r8d
2086(5): call 0x102a(%rip)
208b(7): lea 0x50ee(%rip),%rdx
2092(3): mov 0x0(%rdx,%rax,4),%eax
2095(6): mov %eax,0x208055(%rip)
209b(5): jmp 0xfffffb84(%rip)
20a0(7): cmp $0x0,0x208055(%rip)
20a7(6): jnz 0xfffffccb(%rip)
20ad(7): cmp $0x0,0x208045(%rip)
20b4(5): mov $0x5,%edx
20b9(7): lea 0x5078(%rip),%rsi
20c0(6): jz 0xfffffcb2(%rip)
20c6(5): jmp 0x47b(%rip)
20cb(7): mov $0xfffffffe,%r12
20d2(2): test %al,%al
20d4(6): jnz 0xfffffe3a(%rip)
20da(7): cmp $0x0,0x208018(%rip)
20e1(6): jz 0xfffffd91(%rip)
20e7(3): mov %r13,%rdi
20ea(3): mov %r12,%rdx
20ed(2): mov %ecx,%esi
20ef(5): call 0x6d1(%rip)
20f4(3): mov %rbp,%rax
20f7(5): mov %rbx,0x8(%rsp)
20fc(3): mov %r13,%rbp
20ff(5): mov %r14,0x10(%rsp)
2104(3): mov %rax,%r13
2107(5): jmp 0xfffffd6b(%rip)
210c(4): nop 0x0(%rax)
2110(6): mov 0x207fde(%rip),%edx
2116(2): test %edx,%edx
2118(2): jz 0xffffffb3(%rip)
211a(2): test %al,%al
211c(7): mov $0xfffffffe,%r12
2123(2): jz 0xffffffb7(%rip)
2125(5): mov $0x0,0x28(%rsp)
212a(7): mov $0xfffffffe,%r12
2131(5): jmp 0xfffffddd(%rip)
2136(4): cmp $0x1,%r12
213a(2): jnz 0xffffffa0(%rip)
213c(3): cmp $0x1,%edx
213f(2): jz 0xe(%rip)
2141(3): cmp $0x2,%edx
2144(2): jnz 0xffffff96(%rip)
2146(5): cmp $0x0,0x28(%rsp)
214b(2): jnz 0xffffff8f(%rip)
214d(7): mov 0x207f54(%rip),%rdi
2154(4): mov 0x28(%rdi),%rax
2158(4): cmp 0x30(%rdi),%rax
215c(6): jnb 0x36a(%rip)
2162(5): movzx 0x27(%rsp),%esi
2167(4): lea 0x1(%rax),%rdx
216b(4): mov %rdx,0x28(%rdi)
216f(3): mov %sil,(%rax)
2172(5): jmp 0xffffff68(%rip)
2177(7): mov $0x0,0x207f7c(%rip)
217e(6): mov $0x1,%r13d
2184(5): jmp 0xfffffa9b(%rip)
2189(7): mov $0x0,0x207f6b(%rip)
2190(6): mov $0x1,%r13d
2196(5): jmp 0xfffffa89(%rip)
219b(7): mov $0x1,0x207f56(%rip)
21a2(5): jmp 0xfffffa7d(%rip)
21a7(5): cmp $0x2,0x8(%rsp)
21ac(6): jz 0x240(%rip)
21b2(7): mov 0x207f57(%rip),%rax
21b9(a): mov $0x1844674407370955161,%rcx
21c3(3): cmp %rcx,%rax
21c6(6): jbe 0x196(%rip)
21cc(5): mov 0x10(%rsp),%rax
21d1(8): mov $0x1,0x8(%rsp)
21d9(7): mov %rax,0x207f30(%rip)
21e0(5): jmp 0xfffffa3a(%rip)
21e5(4): sub $0x8,%rsp
21e9(7): mov 0x207eb8(%rip),%rdi
21f0(7): mov 0x207e19(%rip),%rcx
21f7(2): push $0x0
21f9(7): lea 0x4661(%rip),%r9
2200(7): lea 0x466a(%rip),%r8
2207(7): lea 0x45be(%rip),%rdx
220e(7): lea 0x453c(%rip),%rsi
2215(2): xor %eax,%eax
2217(5): call 0x36d9(%rip)
221c(2): xor %edi,%edi
221e(5): call 0xfffff832(%rip)
2223(5): mov $0x0,0x27(%rsp)
2228(5): jmp 0xfffff9f7(%rip)
222d(7): mov 0x207e7c(%rip),%rdx
2234(5): mov 0x30(%rsp),%rdi
2239(7): lea 0x4fc5(%rip),%rsi
2240(5): call 0x1090(%rip)
2245(3): test %rax,%rax
2248(6): jnz 0xfffffb5f(%rip)
224e(5): mov 0x30(%rsp),%rdx
2253(5): mov $0x3,%esi
2258(2): xor %edi,%edi
225a(5): call 0x2fe6(%rip)
225f(3): mov %rax,%rbx
2262(5): call 0xfffff52e(%rip)
2267(2): mov (%rax),%esi
2269(7): lea 0x4f88(%rip),%rdx
2270(3): mov %rbx,%rcx
2273(5): mov $0x1,%edi
2278(2): xor %eax,%eax
227a(5): call 0xfffff786(%rip)
227f(a): mov $0x0,0x207e6b(%rip)
2289(6): mov $0x1,%r13d
228f(5): jmp 0xfffff990(%rip)
2294(a): mov $0x3,0x207e52(%rip)
229e(5): jmp 0xfffff981(%rip)
22a3(5): mov $0x0,0x8(%rsp)
22a8(7): mov 0x207e01(%rip),%rsi
22af(3): test $0x10,(%rsi)
22b2(6): jnz 0x154(%rip)
22b8(4): mov 0x18(%rsp),%edx
22bc(3): mov %rbp,%rdi
22bf(5): call 0x1231(%rip)
22c4(3): test %rax,%rax
22c7(6): jz 0x13f(%rip)
22cd(4): mov 0x8(%rbp),%r12
22d1(4): mov 0x10(%rbp),%r15
22d5(3): mov %r12,%rdi
22d8(3): mov %r15,%rsi
22db(4): sub $0x1,%r12
22df(5): call 0x561(%rip)
22e4(3): mov %rax,%r14
22e7(3): sub %r15,%rax
22ea(3): sub %rax,%r12
22ed(5): cmp $0x0,0x8(%r13)
22f2(6): jnz 0xcb(%rip)
22f8(6): mov 0x207df2(%rip),%eax
22fe(2): test %eax,%eax
2300(2): jz 0x27(%rip)
2302(3): cmp $0x1,%eax
2305(6): jz 0x164(%rip)
230b(3): cmp $0x4,%eax
230e(6): jz 0x15b(%rip)
2314(5): cmp $0x0,0x8(%rsp)
2319(2): jz 0xe(%rip)
231b(3): sub $0x2,%eax
231e(3): cmp $0x1,%eax
2321(6): jbe 0x148(%rip)
2327(4): mov 0x8(%rbp),%rdx
232b(4): mov 0x10(%rbp),%rdi
232f(5): mov $0x1,%esi
2334(7): mov 0x207d6d(%rip),%rcx
233b(5): call 0xfffff685(%rip)
2340(3): mov %rbp,%rax
2343(4): mov %bl,0x8(%rsp)
2347(3): mov %r13,%rbp
234a(5): mov %r12,0x38(%rsp)
234f(5): mov %r14,0x28(%rsp)
2354(3): mov %rax,%r13
2357(5): jmp 0xffffff51(%rip)
235c(4): imul %rax,$0xa,%rdx
2360(3): lea 0xffffffd0(%rbp),%ecx
2363(3): movsxd %ecx,%rcx
2366(3): add %rcx,%rdx
2369(3): cmp %rdx,%rax
236c(6): jnbe 0xfffffe60(%rip)
2372(2): jmp 0x80(%rip)
2374(7): mov 0x207d35(%rip),%rax
237b(3): test $0x20,(%rax)
237e(6): jz 0xfffffbc3(%rip)
2384(5): mov 0x30(%rsp),%rsi
2389(5): mov $0x4,%edi
238e(5): call 0x2db2(%rip)
2393(7): lea 0x44ed(%rip),%rsi
239a(3): mov %rax,%rbx
239d(5): mov $0x5,%edx
23a2(2): xor %edi,%edi
23a4(5): call 0xfffff45c(%rip)
23a9(3): mov %rbx,%rcx
23ac(3): mov %rax,%rdx
23af(2): xor %esi,%esi
23b1(5): mov $0x1,%edi
23b6(2): xor %eax,%eax
23b8(5): call 0xfffff648(%rip)
23bd(5): mov 0x38(%rsp),%rcx
23c2(5): mov 0x28(%rsp),%rsi
23c7(3): mov %r12,%rdx
23ca(3): mov %r14,%rdi
23cd(5): call 0x2d3(%rip)
23d2(2): test %al,%al
23d4(6): jnz 0xffffff24(%rip)
23da(7): cmp $0x0,0x207d0f(%rip)
23e1(6): jz 0xfffffec7(%rip)
23e7(5): jmp 0xffffff40(%rip)
23ec(3): lea 0xffffffd0(%rax),%edx
23ef(3): movsxd %edx,%rdx
23f2(7): mov %rdx,0x207d17(%rip)
23f9(8): mov $0x1,0x8(%rsp)
2401(5): jmp 0xfffff819(%rip)
2406(6): mov 0x207ce4(%rip),%eax
240c(3): sub $0x2,%eax
240f(3): and $0xfd,%eax
2412(6): jnz 0xfffffb3c(%rip)
2418(5): cmp $0x0,0x8(%rsp)
241d(6): jz 0xfffffb31(%rip)
2423(7): mov 0x207c7e(%rip),%rdi
242a(4): mov 0x28(%rdi),%rax
242e(4): cmp 0x30(%rdi),%rax
2432(6): jnb 0xee(%rip)
2438(5): movzx 0x27(%rsp),%ecx
243d(4): lea 0x1(%rax),%rdx
2441(4): mov %rdx,0x28(%rdi)
2445(2): mov %cl,(%rax)
2447(5): jmp 0xfffffb07(%rip)
244c(5): call 0x1224(%rip)
2451(5): sub $0x30db0,%eax
2456(5): cmp $0x2b8,%eax
245b(2): jnbe 0x37(%rip)
245d(7): mov 0x207c5c(%rip),%rdi
2464(5): jmp 0xfffffb56(%rip)
2469(7): mov 0x207c38(%rip),%rdi
2470(4): mov 0x28(%rdi),%rax
2474(4): cmp 0x30(%rdi),%rax
2478(6): jnb 0x9a(%rip)
247e(5): movzx 0x27(%rsp),%ecx
2483(4): lea 0x1(%rax),%rdx
2487(4): mov %rdx,0x28(%rdi)
248b(2): mov %cl,(%rax)
248d(5): jmp 0xfffffe9a(%rip)
2492(5): mov 0x18(%rsp),%rcx
2497(7): mov 0x207c22(%rip),%rdi
249e(7): lea 0x52fc(%rip),%r8
24a5(2): xor %esi,%esi
24a7(5): mov $0xa,%edx
24ac(5): call 0x3994(%rip)
24b1(2): test %eax,%eax
24b3(2): jnz 0xffffffaa(%rip)
24b5(5): mov 0x60(%rsp),%rax
24ba(7): mov %rax,0x207c47(%rip)
24c1(5): jmp 0xfffff75e(%rip)
24c6(4): mov 0x18(%rsp),%esi
24ca(4): mov %ecx,0x38(%rsp)
24ce(5): call 0xfffff3b2(%rip)
24d3(4): mov 0x38(%rsp),%ecx
24d7(5): jmp 0xfffffc03(%rip)
24dc(5): call 0x2f34(%rip)
24e1(7): lea 0x4351(%rip),%rsi
24e8(3): mov %rax,%rbx
24eb(5): mov $0x5,%edx
24f0(2): xor %edi,%edi
24f2(5): call 0xfffff30e(%rip)
24f7(2): xor %edi,%edi
24f9(3): mov %rax,%rdx
24fc(3): mov %rbx,%rcx
24ff(2): xor %esi,%esi
2501(2): xor %eax,%eax
2503(5): call 0xfffff4fd(%rip)
2508(5): mov $0x1,%edi
250d(5): call 0x413(%rip)
2512(4): mov 0x18(%rsp),%esi
2516(5): call 0xfffff36a(%rip)
251b(5): jmp 0xfffffe0c(%rip)
2520(4): mov 0x18(%rsp),%esi
2524(5): call 0xfffff35c(%rip)
2529(5): jmp 0xfffffa25(%rip)
252e(2): xor %edi,%edi
2530(5): call 0x3f0(%rip)
2535(7): lea 0x4b94(%rip),%rsi
253c(5): mov $0x5,%edx
2541(2): xor %edi,%edi
2543(5): call 0xfffff2bd(%rip)
2548(2): xor %esi,%esi
254a(3): mov %rax,%rdx
254d(2): xor %edi,%edi
254f(2): xor %eax,%eax
2551(5): call 0xfffff4af(%rip)
2556(5): jmp 0xfffff777(%rip)
255b(5): call 0xfffff2d5(%rip)
2560(3): mov %rbx,%rdx
2563(5): mov $0x3,%esi
2568(2): xor %edi,%edi
256a(5): call 0x2cd6(%rip)
256f(3): mov %rax,%rbx
2572(5): call 0xfffff21e(%rip)
2577(2): mov (%rax),%esi
2579(7): lea 0x4c78(%rip),%rdx
2580(3): mov %rbx,%rcx
2583(5): mov $0x1,%edi
2588(2): xor %eax,%eax
258a(5): call 0xfffff476(%rip)
258f(1): nop 
2590(2): xor %ebp,%ebp
2592(3): mov %rdx,%r9
2595(1): pop %rsi
2596(3): mov %rsp,%rdx
2599(4): and $0xfffffff0,%rsp
259d(1): push %rax
259e(1): push %rsp
259f(7): lea 0x416a(%rip),%r8
25a6(7): lea 0x40f3(%rip),%rcx
25ad(7): lea 0xfffff50c(%rip),%rdi
25b4(6): call 0x207a26(%rip)
25ba(1): hlt 

"_start" :
2590(2): xor %ebp,%ebp
2592(3): mov %rdx,%r9
2595(1): pop %rsi
2596(3): mov %rsp,%rdx
2599(4): and $0xfffffff0,%rsp
259d(1): push %rax
259e(1): push %rsp
259f(7): lea 0x416a(%rip),%r8
25a6(7): lea 0x40f3(%rip),%rcx
25ad(7): lea 0xfffff50c(%rip),%rdi
25b4(6): call 0x207a26(%rip)
25ba(1): hlt 

"deregister_tm_clones" :
25c0(7): lea 0x207ad9(%rip),%rdi
25c7(1): push %rbp
25c8(7): lea 0x207ad1(%rip),%rax
25cf(3): cmp %rdi,%rax
25d2(3): mov %rsp,%rbp
25d5(2): jz 0x1b(%rip)
25d7(7): mov 0x2079fa(%rip),%rax
25de(3): test %rax,%rax
25e1(2): jz 0xf(%rip)
25e3(1): pop %rbp
25e4(2): jmp %rax
25e6(a): nop 0x0(%rax,%rax,1)
25f0(1): pop %rbp
25f1(1): ret near (%rsp)

"register_tm_clones" :
2600(7): lea 0x207a99(%rip),%rdi
2607(7): lea 0x207a92(%rip),%rsi
260e(1): push %rbp
260f(3): sub %rdi,%rsi
2612(3): mov %rsp,%rbp
2615(4): sar $0x3,%rsi
2619(3): mov %rsi,%rax
261c(4): shr $0x3f,%rax
2620(3): add %rax,%rsi
2623(3): sar $0x1,%rsi
2626(2): jz 0x1a(%rip)
2628(7): mov 0x2079c1(%rip),%rax
262f(3): test %rax,%rax
2632(2): jz 0xe(%rip)
2634(1): pop %rbp
2635(2): jmp %rax
2637(9): nop 0x0(%rax,%rax,1)
2640(1): pop %rbp
2641(1): ret near (%rsp)

"__do_global_dtors_aux" :
2650(7): cmp $0x0,0x207a91(%rip)
2657(2): jnz 0x31(%rip)
2659(8): cmp $0x0,0x207997(%rip)
2661(1): push %rbp
2662(3): mov %rsp,%rbp
2665(2): jz 0xe(%rip)
2667(7): mov 0x20799a(%rip),%rdi
266e(5): call 0xfffff442(%rip)
2673(5): call 0xffffff4d(%rip)
2678(7): mov $0x1,0x207a69(%rip)
267f(1): pop %rbp
2680(1): ret near (%rsp)
2681(7): nop 0x0(%rax)
2688(2): REP ret near (%rsp)

"frame_dummy" :
2690(1): push %rbp
2691(3): mov %rsp,%rbp
2694(1): pop %rbp
2695(5): jmp 0xffffff6b(%rip)

"different" :
26a0(4): sub $0x8,%rsp
26a4(7): mov 0x207a55(%rip),%rax
26ab(3): cmp %rdx,%rax
26ae(4): cmovbe %rax,%rdx
26b2(3): cmp %rcx,%rax
26b5(4): cmovbe %rax,%rcx
26b9(7): movzx 0x207a38(%rip),%eax
26c0(3): mov %rdx,%r8
26c3(2): test %al,%al
26c5(2): jz 0x13(%rip)
26c7(3): cmp %rcx,%rdx
26ca(2): jz 0x36(%rip)
26cc(4): add $0x8,%rsp
26d0(1): ret near (%rsp)
26d1(7): nop 0x0(%rax)
26d8(7): cmp $0x0,0x207a39(%rip)
26df(2): jnz 0x31(%rip)
26e1(3): cmp %rcx,%rdx
26e4(5): mov $0x1,%eax
26e9(2): jnz 0xffffffe3(%rip)
26eb(5): call 0xfffff215(%rip)
26f0(2): test %eax,%eax
26f2(3): setnz %al
26f5(4): add $0x8,%rsp
26f9(1): ret near (%rsp)
26fa(6): nop 0x0(%rax,%rax,1)
2700(5): call 0xf20(%rip)
2705(2): test %eax,%eax
2707(3): setnz %al
270a(4): add $0x8,%rsp
270e(1): ret near (%rsp)
270f(1): nop 
2710(3): mov %rsi,%rdx
2713(3): mov %r8,%rsi
2716(5): call 0x368a(%rip)
271b(2): test %eax,%eax
271d(3): setnz %al
2720(4): add $0x8,%rsp
2724(1): ret near (%rsp)

"size_opt" :
2730(1): push %rbp
2731(1): push %rbx
2732(7): lea 0x5068(%rip),%r8
2739(3): mov %rsi,%rbp
273c(5): mov $0xa,%edx
2741(2): xor %esi,%esi
2743(4): sub $0x18,%rsp
2747(3): mov %rdi,%rbx
274a(3): mov %rsp,%rcx
274d(9): mov $0x28,%rax
2756(5): mov %rax,0x8(%rsp)
275b(2): xor %eax,%eax
275d(5): call 0x36e3(%rip)
2762(3): cmp $0x1,%eax
2765(2): jnbe 0x1d(%rip)
2767(5): mov 0x8(%rsp),%rdx
276c(9): xor $0x28,%rdx
2775(4): mov (%rsp),%rax
2779(2): jnz 0x33(%rip)
277b(4): add $0x18,%rsp
277f(1): pop %rbx
2780(1): pop %rbp
2781(1): ret near (%rsp)
2782(5): mov $0x5,%edx
2787(3): mov %rbp,%rsi
278a(2): xor %edi,%edi
278c(5): call 0xfffff074(%rip)
2791(7): lea 0x3fac(%rip),%rdx
2798(3): mov %rax,%r8
279b(3): mov %rbx,%rcx
279e(2): xor %esi,%esi
27a0(5): mov $0x1,%edi
27a5(2): xor %eax,%eax
27a7(5): call 0xfffff259(%rip)
27ac(5): call 0xfffff084(%rip)

"writeline" :
27c0(3): test %rdx,%rdx
27c3(2): jnz 0x3d(%rip)
27c5(7): movzx 0x20792f(%rip),%eax
27cc(3): xor $0x1,%eax
27cf(2): test %al,%al
27d1(2): jnz 0x42(%rip)
27d3(6): mov 0x207923(%rip),%ecx
27d9(1): push %rbx
27da(3): mov %rdi,%rbx
27dd(2): test %ecx,%ecx
27df(2): jz 0x49(%rip)
27e1(4): mov 0x8(%rbx),%rdx
27e5(4): mov 0x10(%rbx),%rdi
27e9(5): mov $0x1,%esi
27ee(1): pop %rbx
27ef(7): mov 0x2078b2(%rip),%rcx
27f6(5): jmp 0xfffff1ca(%rip)
27fb(5): nop 0x0(%rax,%rax,1)
2800(3): test %sil,%sil
2803(2): jnz 0x15(%rip)
2805(7): movzx 0x2078ee(%rip),%eax
280c(3): xor $0x1,%eax
280f(2): test %al,%al
2811(2): jz 0xffffffc2(%rip)
2813(2): REP ret near (%rsp)
2815(3): nop (%rax)
2818(7): movzx 0x2078da(%rip),%eax
281f(3): xor $0x1,%eax
2822(2): jmp 0xffffffad(%rip)
2824(4): nop 0x0(%rax)
2828(7): lea 0x3f1c(%rip),%rsi
282f(4): add $0x1,%rdx
2833(5): mov $0x1,%edi
2838(5): call 0xfffff1b8(%rip)
283d(2): jmp 0xffffffa4(%rip)

"find_field.isra.2" :
2840(2): push %r14
2842(2): push %r13
2844(3): mov %rsi,%r14
2847(7): mov 0x2078c2(%rip),%r13
284e(2): push %r12
2850(1): push %rbp
2851(4): lea 0xffffffff(%rdi),%rbp
2855(1): push %rbx
2856(3): test %r13,%r13
2859(6): jz 0xb6(%rip)
285f(3): test %rbp,%rbp
2862(6): jz 0xad(%rip)
2868(3): xor %r12d,%r12d
286b(2): xor %ebx,%ebx
286d(3): nop (%rax)
2870(5): call 0xfffff230(%rip)
2875(3): mov (%rax),%rdi
2878(8): nop 0x0(%rax,%rax,1)
2880(5): movzx 0x0(%r14,%rbx,1),%ecx
2885(3): mov %rcx,%rdx
2888(4): movzx 0x0(%rdi,%rcx,2),%ecx
288c(3): cmp $0xa,%dl
288f(2): jz 0x71(%rip)
2891(3): test $0x1,%cl
2894(2): jnz 0x6c(%rip)
2896(3): cmp %rbx,%rbp
2899(2): jnbe 0x21(%rip)
289b(2): jmp 0x3d(%rip)
289d(3): nop (%rax)
28a0(3): and $0x1,%ecx
28a3(2): jnz 0x1c(%rip)
28a5(4): add $0x1,%rbx
28a9(3): cmp %rbx,%rbp
28ac(2): jbe 0x2c(%rip)
28ae(5): movzx 0x0(%r14,%rbx,1),%eax
28b3(4): movzx 0x0(%rdi,%rax,2),%ecx
28b7(3): mov %rax,%rdx
28ba(3): cmp $0xa,%dl
28bd(2): jnz 0xffffffe3(%rip)
28bf(4): add $0x1,%r12
28c3(3): cmp %r13,%r12
28c6(2): jnb 0x12(%rip)
28c8(3): cmp %rbx,%rbp
28cb(2): jbe 0xd(%rip)
28cd(3): cmp %rbx,%rbp
28d0(2): jnbe 0xffffffa0(%rip)
28d2(6): nop 0x0(%rax,%rax,1)
28d8(3): sub %rbx,%rbp
28db(7): cmp %rbp,0x207826(%rip)
28e2(8): cmovbe 0x20781e(%rip),%rbp
28ea(3): add %rbp,%rbx
28ed(4): lea 0x0(%r14,%rbx,1),%rax
28f1(1): pop %rbx
28f2(1): pop %rbp
28f3(2): pop %r12
28f5(2): pop %r13
28f7(2): pop %r14
28f9(1): ret near (%rsp)
28fa(6): nop 0x0(%rax,%rax,1)
2900(4): add $0x1,%rbx
2904(3): cmp %rbx,%rbp
2907(6): jnbe 0xffffff79(%rip)
290d(2): jmp 0xffffffcb(%rip)
290f(2): xor %ebx,%ebx
2911(2): jmp 0xffffffca(%rip)

"usage" :
2920(2): push %r13
2922(2): push %r12
2924(5): mov $0x5,%edx
2929(1): push %rbp
292a(1): push %rbx
292b(2): mov %edi,%ebp
292d(7): sub $0x88,%rsp
2934(7): mov 0x2077f5(%rip),%rbx
293b(9): mov $0x28,%rax
2944(5): mov %rax,0x78(%rsp)
2949(2): xor %eax,%eax
294b(2): test %edi,%edi
294d(2): jz 0x30(%rip)
294f(7): lea 0x3fc2(%rip),%rsi
2956(2): xor %edi,%edi
2958(5): call 0xffffeea8(%rip)
295d(7): mov 0x20777c(%rip),%rdi
2964(3): mov %rax,%rdx
2967(3): mov %rbx,%rcx
296a(5): mov $0x1,%esi
296f(2): xor %eax,%eax
2971(5): call 0xfffff0ff(%rip)
2976(2): mov %ebp,%edi
2978(5): call 0xfffff0d8(%rip)
297d(7): lea 0x3fbc(%rip),%rsi
2984(2): xor %edi,%edi
2986(5): call 0xffffee7a(%rip)
298b(3): mov %rbx,%rdx
298e(3): mov %rax,%rsi
2991(5): mov $0x1,%edi
2996(2): xor %eax,%eax
2998(5): call 0xfffff058(%rip)
299d(7): mov 0x207704(%rip),%rbx
29a4(7): lea 0x3fbd(%rip),%rsi
29ab(5): mov $0x5,%edx
29b0(2): xor %edi,%edi
29b2(5): call 0xffffee4e(%rip)
29b7(3): mov %rbx,%rsi
29ba(3): mov %rax,%rdi
29bd(5): call 0xffffef53(%rip)
29c2(7): mov 0x2076df(%rip),%rbx
29c9(7): lea 0x4048(%rip),%rsi
29d0(5): mov $0x5,%edx
29d5(2): xor %edi,%edi
29d7(5): call 0xffffee29(%rip)
29dc(3): mov %rbx,%rsi
29df(3): mov %rax,%rdi
29e2(5): call 0xffffef2e(%rip)
29e7(7): mov 0x2076ba(%rip),%rbx
29ee(7): lea 0x4073(%rip),%rsi
29f5(5): mov $0x5,%edx
29fa(2): xor %edi,%edi
29fc(5): call 0xffffee04(%rip)
2a01(3): mov %rbx,%rsi
2a04(3): mov %rax,%rdi
2a07(5): call 0xffffef09(%rip)
2a0c(7): mov 0x207695(%rip),%rbx
2a13(7): lea 0x40de(%rip),%rsi
2a1a(5): mov $0x5,%edx
2a1f(2): xor %edi,%edi
2a21(5): call 0xffffeddf(%rip)
2a26(3): mov %rbx,%rsi
2a29(3): mov %rax,%rdi
2a2c(5): call 0xffffeee4(%rip)
2a31(7): mov 0x207670(%rip),%rbx
2a38(7): lea 0x41b1(%rip),%rsi
2a3f(5): mov $0x5,%edx
2a44(2): xor %edi,%edi
2a46(5): call 0xffffedba(%rip)
2a4b(3): mov %rbx,%rsi
2a4e(3): mov %rax,%rdi
2a51(5): call 0xffffeebf(%rip)
2a56(7): mov 0x20764b(%rip),%rbx
2a5d(7): lea 0x41cc(%rip),%rsi
2a64(5): mov $0x5,%edx
2a69(2): xor %edi,%edi
2a6b(5): call 0xffffed95(%rip)
2a70(3): mov %rbx,%rsi
2a73(3): mov %rax,%rdi
2a76(5): call 0xffffee9a(%rip)
2a7b(7): mov 0x207626(%rip),%rbx
2a82(7): lea 0x423f(%rip),%rsi
2a89(5): mov $0x5,%edx
2a8e(2): xor %edi,%edi
2a90(5): call 0xffffed70(%rip)
2a95(3): mov %rbx,%rsi
2a98(3): mov %rax,%rdi
2a9b(5): call 0xffffee75(%rip)
2aa0(7): mov 0x207601(%rip),%rbx
2aa7(7): lea 0x42d2(%rip),%rsi
2aae(5): mov $0x5,%edx
2ab3(2): xor %edi,%edi
2ab5(5): call 0xffffed4b(%rip)
2aba(3): mov %rbx,%rsi
2abd(3): mov %rax,%rdi
2ac0(5): call 0xffffee50(%rip)
2ac5(7): mov 0x2075dc(%rip),%rbx
2acc(7): lea 0x42ed(%rip),%rsi
2ad3(5): mov $0x5,%edx
2ad8(2): xor %edi,%edi
2ada(5): call 0xffffed26(%rip)
2adf(3): mov %rbx,%rsi
2ae2(3): mov %rax,%rdi
2ae5(5): call 0xffffee2b(%rip)
2aea(7): mov 0x2075b7(%rip),%rbx
2af1(7): lea 0x4310(%rip),%rsi
2af8(5): mov $0x5,%edx
2afd(2): xor %edi,%edi
2aff(5): call 0xffffed01(%rip)
2b04(3): mov %rbx,%rsi
2b07(3): mov %rax,%rdi
2b0a(5): call 0xffffee06(%rip)
2b0f(7): mov 0x207592(%rip),%rbx
2b16(7): lea 0x431b(%rip),%rsi
2b1d(5): mov $0x5,%edx
2b22(2): xor %edi,%edi
2b24(5): call 0xffffecdc(%rip)
2b29(3): mov %rbx,%rsi
2b2c(3): mov %rax,%rdi
2b2f(5): call 0xffffede1(%rip)
2b34(7): mov 0x20756d(%rip),%rbx
2b3b(7): lea 0x432e(%rip),%rsi
2b42(5): mov $0x5,%edx
2b47(2): xor %edi,%edi
2b49(5): call 0xffffecb7(%rip)
2b4e(3): mov %rbx,%rsi
2b51(3): mov %rax,%rdi
2b54(5): call 0xffffedbc(%rip)
2b59(7): mov 0x207548(%rip),%rbx
2b60(7): lea 0x4381(%rip),%rsi
2b67(5): mov $0x5,%edx
2b6c(2): xor %edi,%edi
2b6e(5): call 0xffffec92(%rip)
2b73(3): mov %rbx,%rsi
2b76(3): mov %rax,%rdi
2b79(7): lea 0x3bd1(%rip),%rbx
2b80(5): call 0xffffed90(%rip)
2b85(7): lea 0x3bca(%rip),%rax
2b8c(7): lea 0x3c04(%rip),%rcx
2b93(9): mov $0x0,0x60(%rsp)
2b9c(9): mov $0x0,0x68(%rsp)
2ba5(3): mov %rsp,%rdx
2ba8(4): mov %rax,(%rsp)
2bac(7): lea 0x3ba5(%rip),%rax
2bb3(5): mov %rcx,0x30(%rsp)
2bb8(7): lea 0x3be2(%rip),%rcx
2bbf(5): mov %rax,0x8(%rsp)
2bc4(7): lea 0x3c05(%rip),%rax
2bcb(5): mov %rcx,0x40(%rsp)
2bd0(7): lea 0x3bd4(%rip),%rcx
2bd7(5): mov %rax,0x10(%rsp)
2bdc(7): lea 0x3b85(%rip),%rax
2be3(5): mov %rcx,0x50(%rsp)
2be8(5): mov %rax,0x18(%rsp)
2bed(7): lea 0x3b8a(%rip),%rax
2bf4(5): mov %rax,0x20(%rsp)
2bf9(7): lea 0x3b88(%rip),%rax
2c00(5): mov %rax,0x28(%rsp)
2c05(5): mov %rax,0x38(%rsp)
2c0a(5): mov %rax,0x48(%rsp)
2c0f(5): mov %rax,0x58(%rsp)
2c14(4): nop 0x0(%rax)
2c18(4): add $0x10,%rdx
2c1c(3): mov (%rdx),%rdi
2c1f(3): test %rdi,%rdi
2c22(2): jz 0x15(%rip)
2c24(5): mov $0x5,%ecx
2c29(3): mov %rbx,%rsi
2c2c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2c2e(3): setnbe %al
2c31(2): sbb $0x0,%al
2c33(2): test %al,%al
2c35(2): jnz 0xffffffe3(%rip)
2c37(4): mov 0x8(%rdx),%r12
2c3b(2): xor %edi,%edi
2c3d(5): mov $0x5,%edx
2c42(7): lea 0x3b6c(%rip),%rsi
2c49(3): test %r12,%r12
2c4c(6): jz 0xc7(%rip)
2c52(5): call 0xffffebae(%rip)
2c57(7): lea 0x435a(%rip),%rcx
2c5e(7): lea 0x3b67(%rip),%rdx
2c65(3): mov %rax,%rsi
2c68(5): mov $0x1,%edi
2c6d(2): xor %eax,%eax
2c6f(5): call 0xffffed81(%rip)
2c74(2): xor %esi,%esi
2c76(5): mov $0x5,%edi
2c7b(5): call 0xffffed65(%rip)
2c80(3): test %rax,%rax
2c83(2): jz 0x1e(%rip)
2c85(7): lea 0x3b4e(%rip),%rsi
2c8c(5): mov $0x3,%edx
2c91(3): mov %rax,%rdi
2c94(5): call 0xffffeb0c(%rip)
2c99(2): test %eax,%eax
2c9b(6): jnz 0x10d(%rip)
2ca1(7): lea 0x3b36(%rip),%rsi
2ca8(2): xor %edi,%edi
2caa(5): mov $0x5,%edx
2caf(5): call 0xffffeb51(%rip)
2cb4(7): lea 0x3a96(%rip),%rcx
2cbb(7): lea 0x42f6(%rip),%rdx
2cc2(3): mov %rax,%rsi
2cc5(5): mov $0x1,%edi
2cca(2): xor %eax,%eax
2ccc(5): call 0xffffed24(%rip)
2cd1(3): cmp %rbx,%r12
2cd4(7): lea 0x3a97(%rip),%rcx
2cdb(7): lea 0x4abf(%rip),%rbx
2ce2(4): cmove %rcx,%rbx
2ce6(7): lea 0x433b(%rip),%rsi
2ced(2): xor %edi,%edi
2cef(5): mov $0x5,%edx
2cf4(5): call 0xffffeb0c(%rip)
2cf9(3): mov %rbx,%rcx
2cfc(3): mov %rax,%rsi
2cff(3): mov %r12,%rdx
2d02(5): mov $0x1,%edi
2d07(2): xor %eax,%eax
2d09(5): call 0xffffece7(%rip)
2d0e(5): jmp 0xfffffc68(%rip)
2d13(5): call 0xffffeaed(%rip)
2d18(7): lea 0x4299(%rip),%rcx
2d1f(7): lea 0x3aa6(%rip),%rdx
2d26(3): mov %rax,%rsi
2d29(5): mov $0x1,%edi
2d2e(2): xor %eax,%eax
2d30(5): call 0xffffecc0(%rip)
2d35(2): xor %esi,%esi
2d37(5): mov $0x5,%edi
2d3c(5): call 0xffffeca4(%rip)
2d41(3): test %rax,%rax
2d44(2): jz 0x1a(%rip)
2d46(7): lea 0x3a8d(%rip),%rsi
2d4d(5): mov $0x3,%edx
2d52(3): mov %rax,%rdi
2d55(5): call 0xffffea4b(%rip)
2d5a(2): test %eax,%eax
2d5c(2): jnz 0x45(%rip)
2d5e(7): lea 0x3a79(%rip),%rsi
2d65(5): mov $0x5,%edx
2d6a(2): xor %edi,%edi
2d6c(7): lea 0x39de(%rip),%r12
2d73(7): lea 0x39f8(%rip),%rbx
2d7a(5): call 0xffffea86(%rip)
2d7f(7): lea 0x39cb(%rip),%rcx
2d86(7): lea 0x422b(%rip),%rdx
2d8d(3): mov %rax,%rsi
2d90(5): mov $0x1,%edi
2d95(2): xor %eax,%eax
2d97(5): call 0xffffec59(%rip)
2d9c(5): jmp 0xffffff4a(%rip)
2da1(7): lea 0x39a9(%rip),%r12
2da8(7): mov 0x2072f9(%rip),%r13
2daf(7): lea 0x422a(%rip),%rsi
2db6(2): xor %edi,%edi
2db8(5): mov $0x5,%edx
2dbd(5): call 0xffffea43(%rip)
2dc2(3): mov %r13,%rsi
2dc5(3): mov %rax,%rdi
2dc8(5): call 0xffffeb48(%rip)
2dcd(5): jmp 0xfffffed4(%rip)

"__argmatch_die" :
2de0(5): mov $0x1,%edi
2de5(5): jmp 0xfffffb3b(%rip)

"argmatch" :
2df0(2): push %r15
2df2(2): push %r14
2df4(3): mov %rsi,%r15
2df7(2): push %r13
2df9(2): push %r12
2dfb(3): mov %rcx,%r13
2dfe(1): push %rbp
2dff(1): push %rbx
2e00(3): mov %rdx,%rbp
2e03(4): sub $0x28,%rsp
2e07(5): mov %rdi,0x8(%rsp)
2e0c(5): mov %rdx,0x18(%rsp)
2e11(5): call 0xffffea0f(%rip)
2e16(3): mov (%r15),%r14
2e19(8): mov $0xffffffff,(%rsp)
2e21(3): test %r14,%r14
2e24(6): jz 0xb9(%rip)
2e2a(3): mov %rax,%r12
2e2d(5): mov $0x0,0x17(%rsp)
2e32(2): xor %ebx,%ebx
2e34(2): jmp 0x53(%rip)
2e36(a): nop 0x0(%rax,%rax,1)
2e40(5): mov 0x18(%rsp),%rax
2e45(3): test %rax,%rax
2e48(6): jz 0xa8(%rip)
2e4e(4): mov (%rsp),%rdi
2e52(3): mov %r13,%rdx
2e55(3): mov %rbp,%rsi
2e58(4): imul %r13,%rdi
2e5c(3): add %rax,%rdi
2e5f(5): call 0xffffeaa1(%rip)
2e64(2): test %eax,%eax
2e66(5): movzx 0x17(%rsp),%eax
2e6b(5): mov $0x1,%ecx
2e70(3): cmovne %ecx,%eax
2e73(4): mov %al,0x17(%rsp)
2e77(4): add $0x1,%rbx
2e7b(3): add %r13,%rbp
2e7e(4): mov 0x0(%r15,%rbx,8),%r14
2e82(3): test %r14,%r14
2e85(2): jz 0x43(%rip)
2e87(5): mov 0x8(%rsp),%rsi
2e8c(3): mov %r12,%rdx
2e8f(3): mov %r14,%rdi
2e92(5): call 0xffffe90e(%rip)
2e97(2): test %eax,%eax
2e99(2): jnz 0xffffffde(%rip)
2e9b(3): mov %r14,%rdi
2e9e(5): call 0xffffe982(%rip)
2ea3(3): cmp %r12,%rax
2ea6(2): jz 0x5a(%rip)
2ea8(5): cmp $0xffffffff,(%rsp)
2ead(2): jnz 0xffffff93(%rip)
2eaf(4): mov %rbx,(%rsp)
2eb3(4): add $0x1,%rbx
2eb7(3): add %r13,%rbp
2eba(4): mov 0x0(%r15,%rbx,8),%r14
2ebe(3): test %r14,%r14
2ec1(2): jnz 0xffffffc6(%rip)
2ec3(5): nop 0x0(%rax,%rax,1)
2ec8(5): cmp $0x0,0x17(%rsp)
2ecd(7): mov $0xfffffffe,%rax
2ed4(5): cmove (%rsp),%rax
2ed9(4): mov %rax,(%rsp)
2edd(4): mov (%rsp),%rax
2ee1(4): add $0x28,%rsp
2ee5(1): pop %rbx
2ee6(1): pop %rbp
2ee7(2): pop %r12
2ee9(2): pop %r13
2eeb(2): pop %r14
2eed(2): pop %r15
2eef(1): ret near (%rsp)
2ef0(5): mov $0x1,0x17(%rsp)
2ef5(2): jmp 0xffffff82(%rip)
2ef7(9): nop 0x0(%rax,%rax,1)
2f00(4): mov %rbx,(%rsp)
2f04(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
2f10(4): cmp $0xffffffff,%rdx
2f14(2): push %r12
2f16(5): mov $0x5,%edx
2f1b(1): push %rbp
2f1c(3): mov %rsi,%r12
2f1f(1): push %rbx
2f20(3): mov %rdi,%rbp
2f23(2): jz 0x4d(%rip)
2f25(7): lea 0x4290(%rip),%rsi
2f2c(2): xor %edi,%edi
2f2e(5): call 0xffffe8d2(%rip)
2f33(3): mov %rax,%rbx
2f36(3): mov %rbp,%rsi
2f39(5): mov $0x1,%edi
2f3e(5): call 0x24b2(%rip)
2f43(3): mov %r12,%rdx
2f46(3): mov %rax,%rbp
2f49(5): mov $0x8,%esi
2f4e(2): xor %edi,%edi
2f50(5): call 0x20d0(%rip)
2f55(3): mov %rbp,%r8
2f58(3): mov %rbx,%rdx
2f5b(3): mov %rax,%rcx
2f5e(1): pop %rbx
2f5f(1): pop %rbp
2f60(2): pop %r12
2f62(2): xor %esi,%esi
2f64(2): xor %edi,%edi
2f66(2): xor %eax,%eax
2f68(5): jmp 0xffffea98(%rip)
2f6d(3): nop (%rax)
2f70(7): lea 0x422a(%rip),%rsi
2f77(2): xor %edi,%edi
2f79(5): call 0xffffe887(%rip)
2f7e(3): mov %rax,%rbx
2f81(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
2f90(2): push %r15
2f92(2): push %r14
2f94(3): mov %rdi,%r14
2f97(2): push %r13
2f99(2): push %r12
2f9b(2): xor %edi,%edi
2f9d(1): push %rbp
2f9e(1): push %rbx
2f9f(3): mov %rsi,%rbp
2fa2(7): lea 0x4230(%rip),%rsi
2fa9(3): mov %rdx,%r12
2fac(5): mov $0x5,%edx
2fb1(4): sub $0x8,%rsp
2fb5(7): mov 0x207124(%rip),%rbx
2fbc(5): call 0xffffe844(%rip)
2fc1(3): mov %rax,%rdi
2fc4(3): mov %rbx,%rsi
2fc7(5): call 0xffffe949(%rip)
2fcc(3): mov (%r14),%r15
2fcf(3): test %r15,%r15
2fd2(6): jz 0x96(%rip)
2fd8(3): xor %r13d,%r13d
2fdb(2): xor %ebx,%ebx
2fdd(2): jmp 0x3b(%rip)
2fdf(1): nop 
2fe0(3): mov %r15,%rdi
2fe3(4): add $0x1,%rbx
2fe7(3): mov %rbp,%r13
2fea(5): call 0x2426(%rip)
2fef(7): mov 0x2070ea(%rip),%rdi
2ff6(7): lea 0x41f1(%rip),%rdx
2ffd(3): mov %rax,%rcx
3000(5): mov $0x1,%esi
3005(2): xor %eax,%eax
3007(3): add %r12,%rbp
300a(5): call 0xffffea66(%rip)
300f(4): mov 0x0(%r14,%rbx,8),%r15
3013(3): test %r15,%r15
3016(2): jz 0x52(%rip)
3018(3): test %rbx,%rbx
301b(2): jz 0xffffffc5(%rip)
301d(3): mov %r12,%rdx
3020(3): mov %rbp,%rsi
3023(3): mov %r13,%rdi
3026(5): call 0xffffe8da(%rip)
302b(2): test %eax,%eax
302d(2): jnz 0xffffffb3(%rip)
302f(3): mov %r15,%rdi
3032(4): add $0x1,%rbx
3036(3): add %r12,%rbp
3039(5): call 0x23d7(%rip)
303e(7): mov 0x20709b(%rip),%rdi
3045(7): lea 0x41aa(%rip),%rdx
304c(3): mov %rax,%rcx
304f(5): mov $0x1,%esi
3054(2): xor %eax,%eax
3056(5): call 0xffffea1a(%rip)
305b(4): mov 0x0(%r14,%rbx,8),%r15
305f(3): test %r15,%r15
3062(2): jnz 0xffffffb6(%rip)
3064(4): nop 0x0(%rax)
3068(7): mov 0x207071(%rip),%rdi
306f(4): mov 0x28(%rdi),%rax
3073(4): cmp 0x30(%rdi),%rax
3077(2): jnb 0x21(%rip)
3079(4): lea 0x1(%rax),%rdx
307d(4): mov %rdx,0x28(%rdi)
3081(3): mov $0xa,(%rax)
3084(4): add $0x8,%rsp
3088(1): pop %rbx
3089(1): pop %rbp
308a(2): pop %r12
308c(2): pop %r13
308e(2): pop %r14
3090(2): pop %r15
3092(1): ret near (%rsp)
3093(5): nop 0x0(%rax,%rax,1)
3098(4): add $0x8,%rsp
309c(5): mov $0xa,%esi
30a1(1): pop %rbx
30a2(1): pop %rbp
30a3(2): pop %r12
30a5(2): pop %r13
30a7(2): pop %r14
30a9(2): pop %r15
30ab(5): jmp 0xffffe7d5(%rip)

"__xargmatch_internal" :
30b0(2): push %r15
30b2(2): push %r14
30b4(3): mov %rdi,%r14
30b7(2): push %r13
30b9(2): push %r12
30bb(3): mov %rsi,%r12
30be(1): push %rbp
30bf(1): push %rbx
30c0(3): mov %rcx,%rbp
30c3(3): mov %rdx,%rbx
30c6(3): mov %r8,%rcx
30c9(3): mov %rbp,%rdx
30cc(4): sub $0x8,%rsp
30d0(3): mov %rbx,%rsi
30d3(3): mov %r12,%rdi
30d6(3): mov %r8,%r15
30d9(3): mov %r9,%r13
30dc(5): call 0xfffffd14(%rip)
30e1(3): test %rax,%rax
30e4(2): js 0x11(%rip)
30e6(4): add $0x8,%rsp
30ea(1): pop %rbx
30eb(1): pop %rbp
30ec(2): pop %r12
30ee(2): pop %r13
30f0(2): pop %r14
30f2(2): pop %r15
30f4(1): ret near (%rsp)
30f5(3): mov %rax,%rdx
30f8(3): mov %r12,%rsi
30fb(3): mov %r14,%rdi
30fe(5): call 0xfffffe12(%rip)
3103(3): mov %r15,%rdx
3106(3): mov %rbp,%rsi
3109(3): mov %rbx,%rdi
310c(5): call 0xfffffe84(%rip)
3111(3): call %r13
3114(7): mov $0xffffffff,%rax
311b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
3120(2): push %r14
3122(2): push %r13
3124(2): push %r12
3126(1): push %rbp
3127(1): push %rbx
3128(3): mov (%rsi),%r14
312b(3): test %r14,%r14
312e(2): jz 0x33(%rip)
3130(3): mov %rcx,%r12
3133(3): mov %rdi,%r13
3136(3): mov %rdx,%rbp
3139(4): lea 0x8(%rsi),%rbx
313d(2): jmp 0x12(%rip)
313f(1): nop 
3140(3): mov (%rbx),%r14
3143(3): add %r12,%rbp
3146(4): add $0x8,%rbx
314a(3): test %r14,%r14
314d(2): jz 0x14(%rip)
314f(3): mov %r12,%rdx
3152(3): mov %rbp,%rsi
3155(3): mov %r13,%rdi
3158(5): call 0xffffe7a8(%rip)
315d(2): test %eax,%eax
315f(2): jnz 0xffffffe1(%rip)
3161(1): pop %rbx
3162(3): mov %r14,%rax
3165(1): pop %rbp
3166(2): pop %r12
3168(2): pop %r13
316a(2): pop %r14
316c(1): ret near (%rsp)

"close_stdout_set_file_name" :
3170(7): mov %rdi,0x206fb1(%rip)
3177(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3180(7): mov %dil,0x206f99(%rip)
3187(1): ret near (%rsp)

"close_stdout" :
3190(1): push %rbp
3191(1): push %rbx
3192(4): sub $0x8,%rsp
3196(7): mov 0x206f0b(%rip),%rdi
319d(5): call 0x3273(%rip)
31a2(2): test %eax,%eax
31a4(2): jz 0x18(%rip)
31a6(5): call 0xffffe5ea(%rip)
31ab(7): cmp $0x0,0x206f6e(%rip)
31b2(3): mov %rax,%rbx
31b5(2): jz 0x1e(%rip)
31b7(3): cmp $0x20,(%rax)
31ba(2): jnz 0x19(%rip)
31bc(7): mov 0x206f1d(%rip),%rdi
31c3(5): call 0x324d(%rip)
31c8(2): test %eax,%eax
31ca(2): jnz 0x48(%rip)
31cc(4): add $0x8,%rsp
31d0(1): pop %rbx
31d1(1): pop %rbp
31d2(1): ret near (%rsp)
31d3(7): lea 0x4021(%rip),%rsi
31da(2): xor %edi,%edi
31dc(5): mov $0x5,%edx
31e1(5): call 0xffffe61f(%rip)
31e6(7): mov 0x206f3b(%rip),%rdi
31ed(3): mov %rax,%rbp
31f0(3): test %rdi,%rdi
31f3(2): jz 0x2a(%rip)
31f5(5): call 0x201b(%rip)
31fa(2): mov (%rbx),%esi
31fc(7): lea 0x3541(%rip),%rdx
3203(3): mov %rax,%rcx
3206(3): mov %rbp,%r8
3209(2): xor %edi,%edi
320b(2): xor %eax,%eax
320d(5): call 0xffffe7f3(%rip)
3212(6): mov 0x206e08(%rip),%edi
3218(5): call 0xffffe598(%rip)
321d(2): mov (%rbx),%esi
321f(7): lea 0x3fd2(%rip),%rdx
3226(3): mov %rax,%rcx
3229(2): xor %edi,%edi
322b(2): xor %eax,%eax
322d(5): call 0xffffe7d3(%rip)
3232(2): jmp 0xffffffe0(%rip)

"fadvise" :
3250(3): test %rdi,%rdi
3253(2): jz 0x1d(%rip)
3255(1): push %rbx
3256(2): mov %esi,%ebx
3258(5): call 0xffffe708(%rip)
325d(2): mov %ebx,%ecx
325f(2): xor %edx,%edx
3261(2): xor %esi,%esi
3263(1): pop %rbx
3264(2): mov %eax,%edi
3266(5): jmp 0xffffe68a(%rip)
326b(5): nop 0x0(%rax,%rax,1)
3270(2): REP ret near (%rsp)

"protect_fd" :
3280(1): push %rbp
3281(1): push %rbx
3282(2): mov %edi,%ebp
3284(7): lea 0x3f7c(%rip),%rdi
328b(2): xor %esi,%esi
328d(2): xor %eax,%eax
328f(4): sub $0x8,%rsp
3293(5): mov $0x1,%ebx
3298(5): call 0xffffe778(%rip)
329d(2): cmp %eax,%ebp
329f(2): jz 0x1a(%rip)
32a1(2): xor %ebx,%ebx
32a3(2): test %eax,%eax
32a5(2): js 0x14(%rip)
32a7(2): mov %eax,%edi
32a9(5): call 0xffffe637(%rip)
32ae(5): call 0xffffe4e2(%rip)
32b3(6): mov $0x9,(%rax)
32b9(4): add $0x8,%rsp
32bd(2): mov %ebx,%eax
32bf(1): pop %rbx
32c0(1): pop %rbp
32c1(1): ret near (%rsp)

"freopen_safer" :
32d0(2): push %r15
32d2(2): push %r14
32d4(3): mov %rsi,%r15
32d7(2): push %r13
32d9(2): push %r12
32db(3): mov %rdx,%r12
32de(1): push %rbp
32df(1): push %rbx
32e0(4): sub $0x18,%rsp
32e4(5): mov %rdi,0x8(%rsp)
32e9(3): mov %rdx,%rdi
32ec(5): call 0xffffe674(%rip)
32f1(2): mov %eax,%ebx
32f3(5): call 0xffffe49d(%rip)
32f8(3): cmp $0x1,%ebx
32fb(3): mov %rax,%r14
32fe(6): jz 0x162(%rip)
3304(3): cmp $0x2,%ebx
3307(6): jz 0x149(%rip)
330d(2): test %ebx,%ebx
330f(6): jz 0xb9(%rip)
3315(5): mov $0x2,%esi
331a(5): mov $0x2,%edi
331f(5): call 0xffffe541(%rip)
3324(3): cmp $0x2,%eax
3327(3): setnz %bl
332a(5): mov $0x1,%esi
332f(5): mov $0x1,%edi
3334(5): call 0xffffe52c(%rip)
3339(3): cmp $0x1,%eax
333c(4): setnz %bpl
3340(2): xor %esi,%esi
3342(2): xor %edi,%edi
3344(5): call 0xffffe51c(%rip)
3349(2): test %eax,%eax
334b(6): jz 0x8d(%rip)
3351(2): xor %edi,%edi
3353(5): call 0xffffff2d(%rip)
3358(2): test %al,%al
335a(3): mov %eax,%r13d
335d(6): jz 0x113(%rip)
3363(3): test %bpl,%bpl
3366(2): jnz 0x7a(%rip)
3368(2): test %bl,%bl
336a(2): jz 0x16(%rip)
336c(5): mov $0x2,%edi
3371(5): call 0xffffff0f(%rip)
3376(2): test %al,%al
3378(2): mov %eax,%ebx
337a(6): jz 0xb6(%rip)
3380(5): mov 0x8(%rsp),%rdi
3385(3): mov %r12,%rdx
3388(3): mov %r15,%rsi
338b(5): call 0xffffe545(%rip)
3390(3): mov %rax,%r12
3393(2): test %bl,%bl
3395(3): mov (%r14),%r15d
3398(6): jnz 0xa8(%rip)
339e(3): test %bpl,%bpl
33a1(2): jnz 0x6f(%rip)
33a3(3): test %r13b,%r13b
33a6(2): jnz 0x79(%rip)
33a8(3): test %r12,%r12
33ab(2): jnz 0x5(%rip)
33ad(3): mov %r15d,(%r14)
33b0(4): add $0x18,%rsp
33b4(3): mov %r12,%rax
33b7(1): pop %rbx
33b8(1): pop %rbp
33b9(2): pop %r12
33bb(2): pop %r13
33bd(2): pop %r14
33bf(2): pop %r15
33c1(1): ret near (%rsp)
33c2(6): nop 0x0(%rax,%rax,1)
33c8(2): xor %ebx,%ebx
33ca(2): xor %ebp,%ebp
33cc(3): xor %r13d,%r13d
33cf(2): jmp 0xffffffb1(%rip)
33d1(7): nop 0x0(%rax)
33d8(3): xor %r13d,%r13d
33db(3): test %bpl,%bpl
33de(2): jz 0xffffff8a(%rip)
33e0(5): mov $0x1,%edi
33e5(5): call 0xfffffe9b(%rip)
33ea(2): test %al,%al
33ec(2): mov %eax,%ebp
33ee(6): jnz 0xffffff7a(%rip)
33f4(3): xor %r12d,%r12d
33f7(2): test %bl,%bl
33f9(3): mov (%r14),%r15d
33fc(2): jz 0x14(%rip)
33fe(5): mov $0x2,%edi
3403(5): call 0xffffe4dd(%rip)
3408(8): nop 0x0(%rax,%rax,1)
3410(5): mov $0x1,%edi
3415(5): call 0xffffe4cb(%rip)
341a(3): test %r13b,%r13b
341d(2): jz 0xffffff8b(%rip)
341f(2): xor %edi,%edi
3421(5): call 0xffffe4bf(%rip)
3426(2): jmp 0xffffff82(%rip)
3428(8): nop 0x0(%rax,%rax,1)
3430(3): mov (%r14),%r15d
3433(3): xor %r12d,%r12d
3436(a): nop 0x0(%rax,%rax,1)
3440(5): mov $0x2,%edi
3445(5): call 0xffffe49b(%rip)
344a(5): jmp 0xffffff54(%rip)
344f(1): nop 
3450(2): xor %ebx,%ebx
3452(5): jmp 0xfffffed8(%rip)
3457(9): nop 0x0(%rax,%rax,1)
3460(2): xor %ebx,%ebx
3462(2): xor %ebp,%ebp
3464(5): jmp 0xfffffedc(%rip)
3469(7): nop 0x0(%rax)
3470(6): mov $0x1,%r13d
3476(3): xor %r12d,%r12d
3479(5): jmp 0xffffff1a(%rip)

"hard_locale" :
3480(4): sub $0x8,%rsp
3484(2): xor %esi,%esi
3486(5): call 0xffffe55a(%rip)
348b(3): mov %rax,%rdx
348e(5): mov $0x1,%eax
3493(3): test %rdx,%rdx
3496(2): jz 0x1f(%rip)
3498(7): lea 0x3d72(%rip),%rdi
349f(5): mov $0x2,%ecx
34a4(3): mov %rdx,%rsi
34a7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
34a9(3): setnbe %cl
34ac(3): sbb $0x0,%cl
34af(2): xor %eax,%eax
34b1(2): test %cl,%cl
34b3(2): jnz 0xd(%rip)
34b5(4): add $0x8,%rsp
34b9(1): ret near (%rsp)
34ba(6): nop 0x0(%rax,%rax,1)
34c0(7): lea 0x3d4c(%rip),%rdi
34c7(5): mov $0x6,%ecx
34cc(3): mov %rdx,%rsi
34cf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
34d1(3): setnbe %al
34d4(2): sbb $0x0,%al
34d6(2): test %al,%al
34d8(3): setnz %al
34db(4): add $0x8,%rsp
34df(1): ret near (%rsp)

"initbuffer" :
34e0(4): pxor %xmm0,%xmm0
34e4(8): mov $0x0,0x10(%rdi)
34ec(3): movups %xmm0,(%rdi)
34ef(1): ret near (%rsp)

"readlinebuffer_delim" :
34f0(2): push %r15
34f2(2): push %r14
34f4(2): push %r13
34f6(2): push %r12
34f8(1): push %rbp
34f9(1): push %rbx
34fa(4): sub $0x18,%rsp
34fe(4): mov 0x10(%rdi),%r13
3502(3): mov (%rdi),%r8
3505(3): add %r13,%r8
3508(3): test $0x10,(%rsi)
350b(6): jnz 0xd5(%rip)
3511(3): mov %rdi,%r14
3514(3): mov %rsi,%rbp
3517(3): mov %r13,%rbx
351a(4): movsx %dl,%r15d
351e(2): jmp 0xd(%rip)
3520(3): cmp %r15d,%r12d
3523(4): lea 0x1(%rsi),%rbx
3527(2): mov %cl,(%rsi)
3529(2): jz 0x5d(%rip)
352b(4): mov 0x8(%rbp),%rcx
352f(4): cmp 0x10(%rbp),%rcx
3533(2): jnb 0x6d(%rip)
3535(4): lea 0x1(%rcx),%rax
3539(4): mov %rax,0x8(%rbp)
353d(4): movzx (%rcx),%r12d
3541(3): mov %r12d,%ecx
3544(3): cmp %r8,%rbx
3547(3): mov %rbx,%rsi
354a(2): jnz 0xffffffd6(%rip)
354c(3): mov (%r14),%rbx
354f(3): mov %r14,%rsi
3552(3): mov %r13,%rdi
3555(4): mov %dl,0xf(%rsp)
3559(3): mov %cl,(%rsp)
355c(5): call 0x2654(%rip)
3561(3): mov (%r14),%r8
3564(4): movzx (%rsp),%ecx
3568(4): lea 0x0(%rax,%rbx,1),%rsi
356c(4): mov %rax,0x10(%r14)
3570(3): mov %rax,%r13
3573(5): movzx 0xf(%rsp),%edx
3578(4): lea 0x1(%rsi),%rbx
357c(3): add %rax,%r8
357f(3): cmp %r15d,%r12d
3582(2): mov %cl,(%rsi)
3584(2): jnz 0xffffffa7(%rip)
3586(3): sub %r13,%rbx
3589(3): mov %r14,%rax
358c(4): mov %rbx,0x8(%r14)
3590(4): add $0x18,%rsp
3594(1): pop %rbx
3595(1): pop %rbp
3596(2): pop %r12
3598(2): pop %r13
359a(2): pop %r14
359c(2): pop %r15
359e(1): ret near (%rsp)
359f(1): nop 
35a0(3): mov %rbp,%rdi
35a3(4): mov %dl,0xf(%rsp)
35a7(4): mov %r8,(%rsp)
35ab(5): call 0xffffe1a5(%rip)
35b0(3): cmp $0xff,%eax
35b3(3): mov %eax,%r12d
35b6(4): mov (%rsp),%r8
35ba(5): movzx 0xf(%rsp),%edx
35bf(2): jnz 0x32(%rip)
35c1(3): cmp %rbx,%r13
35c4(2): jz 0x1c(%rip)
35c6(4): test $0x20,0x0(%rbp)
35ca(2): jnz 0x16(%rip)
35cc(3): cmp %dl,0xffffffff(%rbx)
35cf(2): jz 0xffffffb7(%rip)
35d1(3): mov %r15d,%r12d
35d4(2): mov %edx,%ecx
35d6(5): jmp 0xffffff6e(%rip)
35db(5): nop 0x0(%rax,%rax,1)
35e0(4): add $0x18,%rsp
35e4(2): xor %eax,%eax
35e6(1): pop %rbx
35e7(1): pop %rbp
35e8(2): pop %r12
35ea(2): pop %r13
35ec(2): pop %r14
35ee(2): pop %r15
35f0(1): ret near (%rsp)
35f1(2): mov %eax,%ecx
35f3(5): jmp 0xffffff51(%rip)

"readlinebuffer" :
3600(5): mov $0xa,%edx
3605(5): jmp 0xfffffeeb(%rip)

"freebuffer" :
3610(4): mov 0x10(%rdi),%rdi
3614(5): jmp 0xffffe15c(%rip)

"memcasecmp" :
3620(3): test %rdx,%rdx
3623(2): jz 0x45(%rip)
3625(2): push %r12
3627(1): push %rbp
3628(3): mov %rsi,%r12
362b(1): push %rbx
362c(3): mov %rdi,%rbp
362f(3): mov %rdx,%rbx
3632(5): call 0xffffe10e(%rip)
3637(2): xor %ecx,%ecx
3639(3): mov (%rax),%r8
363c(2): jmp 0xd(%rip)
363e(2): nop 
3640(4): add $0x1,%rcx
3644(3): cmp %rbx,%rcx
3647(2): jz 0x16(%rip)
3649(5): movzx 0x0(%rbp,%rcx,1),%eax
364e(5): movzx 0x0(%r12,%rcx,1),%r9d
3653(4): mov 0x0(%r8,%rax,4),%eax
3657(4): sub 0x0(%r8,%r9,4),%eax
365b(2): jz 0xffffffe5(%rip)
365d(1): pop %rbx
365e(1): pop %rbp
365f(2): pop %r12
3661(1): ret near (%rsp)
3662(6): nop 0x0(%rax,%rax,1)
3668(2): xor %eax,%eax
366a(1): ret near (%rsp)

"posix2_version" :
3670(1): push %rbx
3671(7): lea 0x3ba1(%rip),%rdi
3678(5): mov $0x31069,%ebx
367d(4): sub $0x10,%rsp
3681(9): mov $0x28,%rax
368a(5): mov %rax,0x8(%rsp)
368f(2): xor %eax,%eax
3691(5): call 0xffffe0cf(%rip)
3696(3): test %rax,%rax
3699(2): jz 0x7(%rip)
369b(3): cmp $0x0,(%rax)
369e(2): jnz 0x22(%rip)
36a0(5): mov 0x8(%rsp),%rcx
36a5(9): xor $0x28,%rcx
36ae(2): mov %ebx,%eax
36b0(2): jnz 0x49(%rip)
36b2(4): add $0x10,%rsp
36b6(1): pop %rbx
36b7(1): ret near (%rsp)
36b8(8): nop 0x0(%rax,%rax,1)
36c0(5): mov $0xa,%edx
36c5(3): mov %rsp,%rsi
36c8(3): mov %rax,%rdi
36cb(5): call 0xffffe275(%rip)
36d0(4): mov (%rsp),%rdx
36d4(3): cmp $0x0,(%rdx)
36d7(2): jnz 0xffffffc9(%rip)
36d9(6): cmp $0x80000000,%rax
36df(2): jl 0x13(%rip)
36e1(6): cmp $0x7fffffff,%rax
36e7(5): mov $0x7fffffff,%ebx
36ec(4): cmovng %rax,%rbx
36f0(2): jmp 0xffffffb0(%rip)
36f2(5): mov $0x80000000,%ebx
36f7(2): jmp 0xffffffa9(%rip)
36f9(5): call 0xffffe137(%rip)

"set_program_name" :
3700(3): test %rdi,%rdi
3703(1): push %rbx
3704(2): jz 0x79(%rip)
3706(5): mov $0x2f,%esi
370b(3): mov %rdi,%rbx
370e(5): call 0xffffe182(%rip)
3713(3): test %rax,%rax
3716(2): jz 0x57(%rip)
3718(4): lea 0x1(%rax),%r8
371c(3): mov %r8,%rdx
371f(3): sub %rbx,%rdx
3722(4): cmp $0x6,%rdx
3726(2): jle 0x47(%rip)
3728(4): lea 0xfffffffa(%rax),%rsi
372c(7): lea 0x3b35(%rip),%rdi
3733(5): mov $0x7,%ecx
3738(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
373a(3): setnbe %dl
373d(3): sbb $0x0,%dl
3740(2): test %dl,%dl
3742(2): jnz 0x2b(%rip)
3744(7): lea 0x3b25(%rip),%rdi
374b(5): mov $0x3,%ecx
3750(3): mov %r8,%rsi
3753(3): mov %r8,%rbx
3756(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3758(3): setnbe %dl
375b(3): sbb $0x0,%dl
375e(2): test %dl,%dl
3760(2): jnz 0xd(%rip)
3762(4): lea 0x4(%rax),%rbx
3766(7): mov %rbx,0x206933(%rip)
376d(7): mov %rbx,0x2069bc(%rip)
3774(7): mov %rbx,0x20694d(%rip)
377b(1): pop %rbx
377c(1): ret near (%rsp)
377d(7): mov 0x20695c(%rip),%rcx
3784(7): lea 0x3aa5(%rip),%rdi
378b(5): mov $0x37,%edx
3790(5): mov $0x1,%esi
3795(5): call 0xffffe2cb(%rip)
379a(5): call 0xffffdfe6(%rip)

"gettext_quote.part.1" :
37a0(1): push %rbp
37a1(1): push %rbx
37a2(3): mov %rdi,%rbp
37a5(2): mov %esi,%ebx
37a7(4): sub $0x8,%rsp
37ab(5): call 0x2ce5(%rip)
37b0(3): movzx (%rax),%edx
37b3(3): and $0xdf,%edx
37b6(3): cmp $0x55,%dl
37b9(2): jz 0x77(%rip)
37bb(3): cmp $0x47,%dl
37be(2): jz 0x22(%rip)
37c0(7): lea 0x3abc(%rip),%rax
37c7(7): lea 0x3ab7(%rip),%rdx
37ce(3): cmp $0x9,%ebx
37d1(4): cmovne %rdx,%rax
37d5(4): add $0x8,%rsp
37d9(1): pop %rbx
37da(1): pop %rbp
37db(1): ret near (%rsp)
37dc(4): nop 0x0(%rax)
37e0(4): movzx 0x1(%rax),%edx
37e4(3): and $0xdf,%edx
37e7(3): cmp $0x42,%dl
37ea(2): jnz 0xffffffd6(%rip)
37ec(4): cmp $0x31,0x2(%rax)
37f0(2): jnz 0xffffffd0(%rip)
37f2(4): cmp $0x38,0x3(%rax)
37f6(2): jnz 0xffffffca(%rip)
37f8(4): cmp $0x30,0x4(%rax)
37fc(2): jnz 0xffffffc4(%rip)
37fe(4): cmp $0x33,0x5(%rax)
3802(2): jnz 0xffffffbe(%rip)
3804(4): cmp $0x30,0x6(%rax)
3808(2): jnz 0xffffffb8(%rip)
380a(4): cmp $0x0,0x7(%rax)
380e(2): jnz 0xffffffb2(%rip)
3810(4): cmp $0x60,0x0(%rbp)
3814(7): lea 0x3a61(%rip),%rax
381b(7): lea 0x3a5e(%rip),%rdx
3822(4): cmovne %rdx,%rax
3826(4): add $0x8,%rsp
382a(1): pop %rbx
382b(1): pop %rbp
382c(1): ret near (%rsp)
382d(3): nop (%rax)
3830(4): movzx 0x1(%rax),%edx
3834(3): and $0xdf,%edx
3837(3): cmp $0x54,%dl
383a(2): jnz 0xffffff86(%rip)
383c(4): movzx 0x2(%rax),%edx
3840(3): and $0xdf,%edx
3843(3): cmp $0x46,%dl
3846(6): jnz 0xffffff7a(%rip)
384c(4): cmp $0x2d,0x3(%rax)
3850(6): jnz 0xffffff70(%rip)
3856(4): cmp $0x38,0x4(%rax)
385a(6): jnz 0xffffff66(%rip)
3860(4): cmp $0x0,0x5(%rax)
3864(6): jnz 0xffffff5c(%rip)
386a(4): cmp $0x60,0x0(%rbp)
386e(7): lea 0x39ff(%rip),%rax
3875(7): lea 0x39fc(%rip),%rdx
387c(4): cmovne %rdx,%rax
3880(4): add $0x8,%rsp
3884(1): pop %rbx
3885(1): pop %rbp
3886(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3890(2): push %r15
3892(2): push %r14
3894(3): mov %r8d,%r15d
3897(2): push %r13
3899(2): push %r12
389b(3): mov %rdi,%r14
389e(1): push %rbp
389f(1): push %rbx
38a0(3): mov %r9d,%ebx
38a3(3): mov %rsi,%r13
38a6(3): mov %rcx,%rbp
38a9(3): and $0x2,%ebx
38ac(7): sub $0xb8,%rsp
38b3(8): mov 0xf0(%rsp),%rax
38bb(5): mov %rdx,0x10(%rsp)
38c0(5): mov %r8d,0x8(%rsp)
38c5(5): mov %r9d,0x78(%rsp)
38ca(5): mov %rax,0x20(%rsp)
38cf(8): mov 0xf8(%rsp),%rax
38d7(5): mov %rax,0x68(%rsp)
38dc(8): mov 0x100(%rsp),%rax
38e4(5): mov %rax,0x60(%rsp)
38e9(9): mov $0x28,%rax
38f2(8): mov %rax,0xa8(%rsp)
38fa(2): xor %eax,%eax
38fc(5): call 0xffffdf14(%rip)
3901(4): cmp $0xa,%r15d
3905(5): mov %rax,0x58(%rsp)
390a(6): jnbe 0x11b5(%rip)
3910(7): lea 0x39c9(%rip),%rcx
3917(3): mov %r15d,%edx
391a(4): movsxd 0x0(%rcx,%rdx,4),%rax
391e(3): add %rcx,%rax
3921(2): jmp %rax
3923(5): mov $0x1,0xe(%rsp)
3928(5): mov $0x0,0x7c(%rsp)
392d(3): xor %r12d,%r12d
3930(9): mov $0x0,0x50(%rsp)
3939(5): mov $0x1,0xf(%rsp)
393e(5): mov $0x0,0xd(%rsp)
3943(7): lea 0x393b(%rip),%rax
394a(9): mov $0x1,0x18(%rsp)
3953(3): xor %r15d,%r15d
3956(8): mov $0x2,0x8(%rsp)
395e(5): mov %rax,0x48(%rsp)
3963(3): xor %r11d,%r11d
3966(3): mov %rbp,%rax
3969(3): mov %r12d,%r8d
396c(3): mov %r11,%rbp
396f(3): mov %rax,%r11
3972(6): nop 0x0(%rax,%rax,1)
3978(3): cmp %rbp,%r11
397b(4): setnz %r12b
397f(4): cmp $0xffffffff,%r11
3983(2): jnz 0xf(%rip)
3985(5): mov 0x10(%rsp),%rax
398a(4): cmp $0x0,0x0(%rax,%rbp,1)
398e(4): setnz %r12b
3992(3): test %r12b,%r12b
3995(6): jz 0x65b(%rip)
399b(5): cmp $0x2,0x8(%rsp)
39a0(5): mov 0x10(%rsp),%rdi
39a5(4): lea 0x0(%rdi,%rbp,1),%r9
39a9(3): setnz %al
39ac(4): and 0xd(%rsp),%al
39b0(3): mov %eax,%r10d
39b3(6): jz 0xad(%rip)
39b9(5): mov 0x18(%rsp),%rax
39be(3): test %rax,%rax
39c1(6): jz 0x42f(%rip)
39c7(4): cmp $0xffffffff,%r11
39cb(5): lea 0x0(%rbp,%rax,1),%rbx
39d0(2): jnz 0x30(%rip)
39d2(4): cmp $0x1,%rax
39d6(2): jbe 0x2a(%rip)
39d8(5): mov %r8b,0x38(%rsp)
39dd(5): mov %r10b,0x30(%rsp)
39e2(5): mov %r9,0x28(%rsp)
39e7(5): call 0xffffde39(%rip)
39ec(6): movzx 0x38(%rsp),%r8d
39f2(6): movzx 0x30(%rsp),%r10d
39f8(3): mov %rax,%r11
39fb(5): mov 0x28(%rsp),%r9
3a00(3): cmp %r11,%rbx
3a03(5): mov %r10b,0x28(%rsp)
3a08(6): jnbe 0x5b8(%rip)
3a0e(5): mov 0x18(%rsp),%rdx
3a13(5): mov 0x48(%rsp),%rsi
3a18(3): mov %r9,%rdi
3a1b(5): mov %r11,0x40(%rsp)
3a20(5): mov %r8b,0x38(%rsp)
3a25(5): mov %r9,0x30(%rsp)
3a2a(5): call 0xffffded6(%rip)
3a2f(2): test %eax,%eax
3a31(5): mov 0x30(%rsp),%r9
3a36(6): movzx 0x38(%rsp),%r8d
3a3c(5): mov 0x40(%rsp),%r11
3a41(6): jnz 0x57f(%rip)
3a47(5): cmp $0x0,0xf(%rsp)
3a4c(6): movzx 0x28(%rsp),%r10d
3a52(6): jnz 0xf83(%rip)
3a58(8): nop 0x0(%rax,%rax,1)
3a60(4): movzx (%r9),%ebx
3a64(3): cmp $0x7e,%bl
3a67(6): jnbe 0x321(%rip)
3a6d(7): lea 0x3898(%rip),%rcx
3a74(3): movzx %bl,%edx
3a77(4): movsxd 0x0(%rcx,%rdx,4),%rax
3a7b(3): add %rcx,%rax
3a7e(2): jmp %rax
3a80(3): xor %r10d,%r10d
3a83(4): cmp $0x1,%r11
3a87(3): setnz %al
3a8a(4): cmp $0xffffffff,%r11
3a8e(2): jnz 0xe(%rip)
3a90(5): mov 0x10(%rsp),%rax
3a95(4): cmp $0x0,0x1(%rax)
3a99(3): setnz %al
3a9c(5): cmp $0x2,0x8(%rsp)
3aa1(3): setz %dl
3aa4(2): test %al,%al
3aa6(6): jz 0x252(%rip)
3aac(3): xor %r12d,%r12d
3aaf(2): xor %eax,%eax
3ab1(7): nop 0x0(%rax)
3ab8(5): cmp $0x1,0xd(%rsp)
3abd(6): jnz 0x115(%rip)
3ac3(2): test %dl,%dl
3ac5(6): jnz 0x10d(%rip)
3acb(5): mov 0x20(%rsp),%rsi
3ad0(3): test %rsi,%rsi
3ad3(2): jz 0x16(%rip)
3ad5(2): mov %ebx,%edx
3ad7(3): shr $0x5,%dl
3ada(3): movzx %dl,%edx
3add(3): mov 0x0(%rsi,%rdx,4),%edx
3ae0(3): bt %ebx,%edx
3ae3(6): jb 0x150(%rip)
3ae9(3): test %r10b,%r10b
3aec(6): jnz 0x147(%rip)
3af2(3): xor $0x1,%eax
3af5(4): add $0x1,%rbp
3af9(3): and %r8d,%eax
3afc(2): test %al,%al
3afe(2): jz 0x22(%rip)
3b00(3): cmp %r15,%r13
3b03(2): jbe 0x7(%rip)
3b05(5): mov $0x27,0x0(%r14,%r15,1)
3b0a(4): lea 0x1(%r15),%rax
3b0e(3): cmp %rax,%r13
3b11(2): jbe 0x8(%rip)
3b13(6): mov $0x27,0x1(%r14,%r15,1)
3b19(4): add $0x2,%r15
3b1d(3): xor %r8d,%r8d
3b20(3): cmp %r13,%r15
3b23(2): jnb 0x6(%rip)
3b25(4): mov %bl,0x0(%r14,%r15,1)
3b29(5): movzx 0xe(%rsp),%edi
3b2e(4): add $0x1,%r15
3b32(5): mov $0x0,%eax
3b37(3): test %r12b,%r12b
3b3a(3): cmove %eax,%edi
3b3d(5): mov %dil,0xe(%rsp)
3b42(5): jmp 0xfffffe36(%rip)
3b47(9): nop 0x0(%rax,%rax,1)
3b50(3): xor %r10d,%r10d
3b53(4): mov 0x8(%rsp),%eax
3b57(3): cmp $0x2,%eax
3b5a(6): jz 0x5be(%rip)
3b60(3): cmp $0x5,%eax
3b63(6): jz 0x575(%rip)
3b69(3): cmp $0x2,%eax
3b6c(5): mov $0x3f,%ebx
3b71(3): setz %dl
3b74(3): xor %r12d,%r12d
3b77(2): xor %eax,%eax
3b79(5): jmp 0xffffff3f(%rip)
3b7e(2): nop 
3b80(3): xor %r10d,%r10d
3b83(5): cmp $0x2,0x8(%rsp)
3b88(6): jz 0x508(%rip)
3b8e(5): mov %r12b,0x7c(%rsp)
3b93(2): xor %edx,%edx
3b95(2): xor %eax,%eax
3b97(5): mov $0x27,%ebx
3b9c(5): jmp 0xffffff1c(%rip)
3ba1(7): nop 0x0(%rax)
3ba8(5): mov $0x9,%edx
3bad(5): mov $0x74,%ebx
3bb2(5): cmp $0x2,0x8(%rsp)
3bb7(3): setz %al
3bba(4): and 0xf(%rsp),%al
3bbe(6): jnz 0x150(%rip)
3bc4(5): cmp $0x0,0xd(%rsp)
3bc9(2): jnz 0x67(%rip)
3bcb(2): mov %edx,%ebx
3bcd(3): xor %r12d,%r12d
3bd0(2): xor %eax,%eax
3bd2(5): cmp $0x0,0xf(%rsp)
3bd7(6): jnz 0xfffffef4(%rip)
3bdd(5): jmp 0xffffff0c(%rip)
3be2(6): nop 0x0(%rax,%rax,1)
3be8(5): mov $0x8,%edx
3bed(5): mov $0x62,%ebx
3bf2(2): jmp 0xffffffd2(%rip)
3bf4(4): nop 0x0(%rax)
3bf8(5): cmp $0x2,0x8(%rsp)
3bfd(6): jz 0x3d3(%rip)
3c03(5): cmp $0x0,0xd(%rsp)
3c08(6): jz 0x218(%rip)
3c0e(5): cmp $0x0,0xf(%rsp)
3c13(6): jz 0x20d(%rip)
3c19(6): cmp $0x0,0x18(%rsp)
3c1f(6): jnz 0x3bc(%rip)
3c25(5): mov $0x5c,%ebx
3c2a(6): nop 0x0(%rax,%rax,1)
3c30(3): xor %r12d,%r12d
3c33(5): cmp $0x2,0x8(%rsp)
3c38(3): setz %dl
3c3b(5): cmp $0x0,0xf(%rsp)
3c40(2): mov %edx,%eax
3c42(6): jnz 0x856(%rip)
3c48(3): mov %r8d,%eax
3c4b(3): xor $0x1,%eax
3c4e(2): and %dl,%al
3c50(2): jz 0x31(%rip)
3c52(3): cmp %r15,%r13
3c55(2): jbe 0x7(%rip)
3c57(5): mov $0x27,0x0(%r14,%r15,1)
3c5c(4): lea 0x1(%r15),%rdx
3c60(3): cmp %rdx,%r13
3c63(2): jbe 0x8(%rip)
3c65(6): mov $0x24,0x1(%r14,%r15,1)
3c6b(4): lea 0x2(%r15),%rdx
3c6f(3): cmp %rdx,%r13
3c72(2): jbe 0x8(%rip)
3c74(6): mov $0x27,0x2(%r14,%r15,1)
3c7a(4): add $0x3,%r15
3c7e(3): mov %eax,%r8d
3c81(3): cmp %r15,%r13
3c84(2): jbe 0x7(%rip)
3c86(5): mov $0x5c,0x0(%r14,%r15,1)
3c8b(4): add $0x1,%r15
3c8f(4): add $0x1,%rbp
3c93(5): jmp 0xfffffe8d(%rip)
3c98(8): nop 0x0(%rax,%rax,1)
3ca0(5): cmp $0x0,0xd(%rsp)
3ca5(6): jnz 0x1ce(%rip)
3cab(2): xor %edx,%edx
3cad(5): test $0x1,0x78(%rsp)
3cb2(6): jz 0xffffff19(%rip)
3cb8(4): add $0x1,%rbp
3cbc(5): jmp 0xfffffcbc(%rip)
3cc1(7): nop 0x0(%rax)
3cc8(5): cmp $0x2,0x8(%rsp)
3ccd(3): setz %dl
3cd0(2): xor %eax,%eax
3cd2(5): jmp 0xfffffde6(%rip)
3cd7(9): nop 0x0(%rax,%rax,1)
3ce0(5): mov $0x7,%edx
3ce5(5): mov $0x61,%ebx
3cea(5): jmp 0xfffffeda(%rip)
3cef(1): nop 
3cf0(5): cmp $0x2,0x8(%rsp)
3cf5(3): setz %dl
3cf8(3): test %rbp,%rbp
3cfb(6): jnz 0xfffffdb1(%rip)
3d01(5): movzx 0xf(%rsp),%eax
3d06(2): and %dl,%al
3d08(6): jz 0xfffffdb0(%rip)
3d0e(3): mov %r11,%rbp
3d11(8): mov $0x2,0x8(%rsp)
3d19(5): jmp 0x700(%rip)
3d1e(2): nop 
3d20(5): cmp $0x2,0x8(%rsp)
3d25(3): setz %dl
3d28(3): xor %r12d,%r12d
3d2b(2): jmp 0xffffffd6(%rip)
3d2d(3): nop (%rax)
3d30(5): cmp $0x2,0x8(%rsp)
3d35(5): mov $0x20,%ebx
3d3a(3): setz %dl
3d3d(2): jmp 0xffffffc4(%rip)
3d3f(1): nop 
3d40(5): mov $0xd,%edx
3d45(5): mov $0x72,%ebx
3d4a(5): jmp 0xfffffe68(%rip)
3d4f(1): nop 
3d50(5): mov $0xc,%edx
3d55(5): mov $0x66,%ebx
3d5a(5): jmp 0xfffffe6a(%rip)
3d5f(1): nop 
3d60(5): mov $0xb,%edx
3d65(5): mov $0x76,%ebx
3d6a(5): jmp 0xfffffe5a(%rip)
3d6f(1): nop 
3d70(5): mov $0xa,%edx
3d75(5): mov $0x6e,%ebx
3d7a(5): jmp 0xfffffe38(%rip)
3d7f(1): nop 
3d80(3): xor %r10d,%r10d
3d83(5): nop 0x0(%rax,%rax,1)
3d88(6): cmp $0x1,0x58(%rsp)
3d8e(6): jnz 0x3aa(%rip)
3d94(5): mov %r11,0x38(%rsp)
3d99(5): mov %r8b,0x30(%rsp)
3d9e(5): mov %r10b,0x28(%rsp)
3da3(5): call 0xffffdcfd(%rip)
3da8(3): mov (%rax),%rcx
3dab(3): movzx %bl,%edx
3dae(6): movzx 0x28(%rsp),%r10d
3db4(6): movzx 0x30(%rsp),%r8d
3dba(5): mov 0x38(%rsp),%r11
3dbf(5): mov $0x1,%edi
3dc4(4): movzx 0x0(%rcx,%rdx,2),%eax
3dc8(4): and $0x4000,%ax
3dcc(4): setnz %r12b
3dd0(3): setz %al
3dd3(4): and 0xd(%rsp),%al
3dd7(2): test %al,%al
3dd9(6): jnz 0x998(%rip)
3ddf(5): cmp $0x2,0x8(%rsp)
3de4(3): setz %dl
3de7(5): jmp 0xfffffcd1(%rip)
3dec(4): nop 0x0(%rax)
3df0(4): movzx (%r9),%ebx
3df4(3): cmp $0x7e,%bl
3df7(2): jnbe 0xffffff89(%rip)
3df9(7): lea 0x3708(%rip),%rcx
3e00(3): movzx %bl,%edx
3e03(4): movsxd 0x0(%rcx,%rdx,4),%rax
3e07(3): add %rcx,%rax
3e0a(2): jmp %rax
3e0c(4): nop 0x0(%rax)
3e10(3): xor %r10d,%r10d
3e13(5): cmp $0x0,0xd(%rsp)
3e18(6): jnz 0xfffffdf6(%rip)
3e1e(2): nop 
3e20(5): mov $0x5c,%edx
3e25(5): mov $0x5c,%ebx
3e2a(5): jmp 0xfffffd9a(%rip)
3e2f(1): nop 
3e30(5): mov $0xc,%edx
3e35(3): xor %r10d,%r10d
3e38(5): mov $0x66,%ebx
3e3d(5): jmp 0xfffffd87(%rip)
3e42(6): nop 0x0(%rax,%rax,1)
3e48(5): mov $0xa,%edx
3e4d(3): xor %r10d,%r10d
3e50(5): mov $0x6e,%ebx
3e55(5): jmp 0xfffffd5d(%rip)
3e5a(6): nop 0x0(%rax,%rax,1)
3e60(5): mov $0x61,%ebx
3e65(5): jmp 0xfffffdcb(%rip)
3e6a(6): nop 0x0(%rax,%rax,1)
3e70(3): xor %r10d,%r10d
3e73(5): cmp $0x2,0x8(%rsp)
3e78(3): setz %dl
3e7b(5): cmp $0x0,0xf(%rsp)
3e80(6): jnz 0xb9a(%rip)
3e86(3): mov %r8d,%eax
3e89(3): mov %r15,%rcx
3e8c(3): xor $0x1,%eax
3e8f(2): and %dl,%al
3e91(2): jz 0x2f(%rip)
3e93(3): cmp %r15,%r13
3e96(2): jbe 0x7(%rip)
3e98(5): mov $0x27,0x0(%r14,%r15,1)
3e9d(4): lea 0x1(%r15),%rcx
3ea1(3): cmp %rcx,%r13
3ea4(2): jbe 0x8(%rip)
3ea6(6): mov $0x24,0x1(%r14,%r15,1)
3eac(4): lea 0x2(%r15),%rcx
3eb0(3): cmp %rcx,%r13
3eb3(6): jnbe 0x636(%rip)
3eb9(4): lea 0x3(%r15),%rcx
3ebd(3): mov %eax,%r8d
3ec0(3): cmp %rcx,%r13
3ec3(2): jbe 0x7(%rip)
3ec5(5): mov $0x5c,0x0(%r14,%rcx,1)
3eca(5): cmp $0x2,0x8(%rsp)
3ecf(4): lea 0x1(%rcx),%r15
3ed3(6): jz 0x606(%rip)
3ed9(4): lea 0x1(%rbp),%rax
3edd(3): cmp %r11,%rax
3ee0(2): jnb 0x1b(%rip)
3ee2(5): mov 0x10(%rsp),%rax
3ee7(5): movzx 0x1(%rax,%rbp,1),%eax
3eec(4): mov %al,0x28(%rsp)
3ef0(3): sub $0x30,%eax
3ef3(2): cmp $0x9,%al
3ef5(6): jbe 0x834(%rip)
3efb(3): mov %r12d,%eax
3efe(5): mov $0x30,%ebx
3f03(3): xor %r12d,%r12d
3f06(5): jmp 0xfffffbb2(%rip)
3f0b(5): nop 0x0(%rax,%rax,1)
3f10(5): cmp $0x2,0x8(%rsp)
3f15(3): mov %r10d,%r12d
3f18(3): setz %dl
3f1b(3): xor %r10d,%r10d
3f1e(2): xor %eax,%eax
3f20(5): jmp 0xfffffb98(%rip)
3f25(3): nop (%rax)
3f28(5): cmp $0x2,0x8(%rsp)
3f2d(3): setz %dl
3f30(3): xor %r10d,%r10d
3f33(5): jmp 0xfffffdc5(%rip)
3f38(8): nop 0x0(%rax,%rax,1)
3f40(5): cmp $0x2,0x8(%rsp)
3f45(3): setz %dl
3f48(3): xor %r10d,%r10d
3f4b(3): xor %r12d,%r12d
3f4e(5): jmp 0xfffffdb3(%rip)
3f53(5): nop 0x0(%rax,%rax,1)
3f58(5): cmp $0x2,0x8(%rsp)
3f5d(3): mov %r10d,%r12d
3f60(5): mov $0x20,%ebx
3f65(3): setz %dl
3f68(3): xor %r10d,%r10d
3f6b(5): jmp 0xfffffd96(%rip)
3f70(5): mov $0xd,%edx
3f75(3): xor %r10d,%r10d
3f78(5): mov $0x72,%ebx
3f7d(5): jmp 0xfffffc35(%rip)
3f82(6): nop 0x0(%rax,%rax,1)
3f88(5): mov $0x76,%ebx
3f8d(5): jmp 0xfffffca3(%rip)
3f92(6): nop 0x0(%rax,%rax,1)
3f98(5): mov $0x9,%edx
3f9d(3): xor %r10d,%r10d
3fa0(5): mov $0x74,%ebx
3fa5(5): jmp 0xfffffc0d(%rip)
3faa(6): nop 0x0(%rax,%rax,1)
3fb0(5): mov $0x62,%ebx
3fb5(5): jmp 0xfffffc7b(%rip)
3fba(6): nop 0x0(%rax,%rax,1)
3fc0(3): xor %r10d,%r10d
3fc3(5): jmp 0xfffffa9d(%rip)
3fc8(8): nop 0x0(%rax,%rax,1)
3fd0(5): cmp $0x0,0xf(%rsp)
3fd5(6): jnz 0x96b(%rip)
3fdb(4): add $0x1,%rbp
3fdf(3): mov %r8d,%eax
3fe2(3): xor %r12d,%r12d
3fe5(5): mov $0x5c,%ebx
3fea(5): jmp 0xfffffb12(%rip)
3fef(1): nop 
3ff0(5): cmp $0x2,0x8(%rsp)
3ff5(5): movzx 0xf(%rsp),%ebx
3ffa(3): mov %r8d,%r12d
3ffd(3): mov %r11,%rbp
4000(3): setz %dl
4003(2): mov %ebx,%eax
4005(3): test %r15,%r15
4008(3): setz %cl
400b(2): and %edx,%eax
400d(2): and %cl,%al
400f(6): jnz 0xa67(%rip)
4015(2): mov %ebx,%eax
4017(3): xor $0x1,%eax
401a(2): and %al,%dl
401c(6): jz 0x970(%rip)
4022(5): cmp $0x0,0x7c(%rsp)
4027(6): jz 0x963(%rip)
402d(5): cmp $0x0,0xe(%rsp)
4032(6): jnz 0x9fb(%rip)
4038(3): test %r13,%r13
403b(3): setz %al
403e(6): cmp $0x0,0x50(%rsp)
4044(3): setnz %dl
4047(2): and %dl,%al
4049(6): jz 0xa23(%rip)
404f(5): mov 0x50(%rsp),%r13
4054(7): lea 0x322a(%rip),%rbx
405b(4): mov $0x27,(%r14)
405f(8): mov $0x2,0x8(%rsp)
4067(6): mov $0x1,%r15d
406d(9): mov $0x1,0x18(%rsp)
4076(5): mov $0x0,0xf(%rsp)
407b(5): mov %rbx,0x48(%rsp)
4080(4): mov %al,0x7c(%rsp)
4084(5): jmp 0xfffff8df(%rip)
4089(7): nop 0x0(%rax)
4090(5): cmp $0x0,0xf(%rsp)
4095(6): jnz 0x8ab(%rip)
409b(3): test %r13,%r13
409e(6): jz 0x402(%rip)
40a4(2): xor %edx,%edx
40a6(6): cmp $0x0,0x50(%rsp)
40ac(6): jnz 0x3f4(%rip)
40b2(5): mov %r13,0x50(%rsp)
40b7(4): add $0x3,%r15
40bb(2): xor %eax,%eax
40bd(5): mov %r12b,0x7c(%rsp)
40c2(3): xor %r8d,%r8d
40c5(3): mov %rdx,%r13
40c8(5): mov $0x27,%ebx
40cd(5): jmp 0xfffffa1c(%rip)
40d2(6): nop 0x0(%rax,%rax,1)
40d8(5): test $0x4,0x78(%rsp)
40dd(2): jz 0x23(%rip)
40df(4): lea 0x2(%rbp),%rcx
40e3(3): cmp %r11,%rcx
40e6(2): jnb 0x1a(%rip)
40e8(5): mov 0x10(%rsp),%rax
40ed(5): cmp $0x3f,0x1(%rax,%rbp,1)
40f2(6): jz 0x790(%rip)
40f8(8): nop 0x0(%rax,%rax,1)
4100(2): xor %edx,%edx
4102(3): xor %r12d,%r12d
4105(2): xor %eax,%eax
4107(5): mov $0x3f,%ebx
410c(5): jmp 0xfffff9ac(%rip)
4111(7): nop 0x0(%rax)
4118(5): cmp $0x0,0xf(%rsp)
411d(6): jnz 0x823(%rip)
4123(3): xor %r12d,%r12d
4126(2): xor %eax,%eax
4128(5): mov $0x3f,%ebx
412d(5): jmp 0xfffff9bc(%rip)
4132(6): nop 0x0(%rax,%rax,1)
4138(8): lea 0xa0(%rsp),%rax
4140(4): cmp $0xffffffff,%r11
4144(c): mov $0x0,0xa0(%rsp)
4150(5): mov %rax,0x28(%rsp)
4155(2): jnz 0x2f(%rip)
4157(5): mov 0x10(%rsp),%rdi
415c(5): mov %r8b,0x40(%rsp)
4161(5): mov %r10b,0x38(%rsp)
4166(5): mov %r9,0x30(%rsp)
416b(5): call 0xffffd6b5(%rip)
4170(6): movzx 0x40(%rsp),%r8d
4176(6): movzx 0x38(%rsp),%r10d
417c(3): mov %rax,%r11
417f(5): mov 0x30(%rsp),%r9
4184(8): lea 0x9c(%rsp),%rax
418c(2): xor %ecx,%ecx
418e(4): mov %bl,0x7e(%rsp)
4192(5): mov %r8b,0x7d(%rsp)
4197(3): mov %rcx,%rbx
419a(8): mov %r9,0x88(%rsp)
41a2(5): mov %rax,0x38(%rsp)
41a7(5): mov %r10b,0x7f(%rsp)
41ac(8): mov %r15,0x80(%rsp)
41b4(5): mov %r14,0x40(%rsp)
41b9(5): mov %r13,0x70(%rsp)
41be(5): mov %r11,0x30(%rsp)
41c3(5): mov 0x10(%rsp),%rax
41c8(5): lea 0x0(%rbp,%rbx,1),%r14
41cd(5): mov 0x30(%rsp),%rdx
41d2(5): mov 0x28(%rsp),%rcx
41d7(5): mov 0x38(%rsp),%rdi
41dc(4): lea 0x0(%rax,%r14,1),%r13
41e0(3): sub %r14,%rdx
41e3(3): mov %r13,%rsi
41e6(5): call 0x219a(%rip)
41eb(3): test %rax,%rax
41ee(3): mov %rax,%r15
41f1(2): jz 0x50(%rip)
41f3(4): cmp $0xffffffff,%rax
41f7(6): jz 0x61e(%rip)
41fd(4): cmp $0xfffffffe,%rax
4201(6): jz 0x5a0(%rip)
4207(5): cmp $0x2,0x8(%rsp)
420c(3): setz %al
420f(4): and 0xf(%rsp),%al
4213(6): jnz 0x19d(%rip)
4219(7): mov 0x9c(%rsp),%edi
4220(5): call 0xffffd870(%rip)
4225(5): mov 0x28(%rsp),%rdi
422a(2): test %eax,%eax
422c(5): mov $0x0,%eax
4231(4): cmove %eax,%r12d
4235(3): add %r15,%rbx
4238(5): call 0xffffd848(%rip)
423d(2): test %eax,%eax
423f(2): jz 0xffffff84(%rip)
4241(3): mov %r12d,%edx
4244(3): mov %rbx,%rdi
4247(6): movzx 0x7d(%rsp),%r8d
424d(3): xor $0x1,%edx
4250(5): movzx 0x7e(%rsp),%ebx
4255(6): movzx 0x7f(%rsp),%r10d
425b(4): and 0xd(%rsp),%dl
425f(8): mov 0x80(%rsp),%r15
4267(5): mov 0x40(%rsp),%r14
426c(5): mov 0x70(%rsp),%r13
4271(5): mov 0x30(%rsp),%r11
4276(4): cmp $0x1,%rdi
427a(6): jbe 0x601(%rip)
4280(3): mov %rdi,%rcx
4283(2): xor %esi,%esi
4285(6): movzx 0xf(%rsp),%r9d
428b(3): add %rbp,%rcx
428e(5): mov 0x10(%rsp),%rdi
4293(5): jmp 0xbb(%rip)
4298(8): nop 0x0(%rax,%rax,1)
42a0(5): cmp $0x2,0x8(%rsp)
42a5(3): setz %al
42a8(3): test %r9b,%r9b
42ab(6): jnz 0x4b5(%rip)
42b1(3): mov %r8d,%esi
42b4(3): xor $0x1,%esi
42b7(3): and %sil,%al
42ba(2): jz 0x31(%rip)
42bc(3): cmp %r15,%r13
42bf(2): jbe 0x7(%rip)
42c1(5): mov $0x27,0x0(%r14,%r15,1)
42c6(4): lea 0x1(%r15),%rsi
42ca(3): cmp %rsi,%r13
42cd(2): jbe 0x8(%rip)
42cf(6): mov $0x24,0x1(%r14,%r15,1)
42d5(4): lea 0x2(%r15),%rsi
42d9(3): cmp %rsi,%r13
42dc(2): jbe 0x8(%rip)
42de(6): mov $0x27,0x2(%r14,%r15,1)
42e4(4): add $0x3,%r15
42e8(3): mov %eax,%r8d
42eb(3): cmp %r15,%r13
42ee(2): jbe 0x7(%rip)
42f0(5): mov $0x5c,0x0(%r14,%r15,1)
42f5(4): lea 0x1(%r15),%rax
42f9(3): cmp %rax,%r13
42fc(2): jbe 0xf(%rip)
42fe(2): mov %ebx,%eax
4300(3): shr $0x6,%al
4303(3): add $0x30,%eax
4306(5): mov %al,0x1(%r14,%r15,1)
430b(4): lea 0x2(%r15),%rax
430f(3): cmp %rax,%r13
4312(2): jbe 0x12(%rip)
4314(2): mov %ebx,%eax
4316(3): shr $0x3,%al
4319(3): and $0x7,%eax
431c(3): add $0x30,%eax
431f(5): mov %al,0x2(%r14,%r15,1)
4324(3): and $0x7,%ebx
4327(4): add $0x1,%rbp
432b(4): add $0x3,%r15
432f(3): add $0x30,%ebx
4332(3): cmp %rcx,%rbp
4335(6): jnb 0xfffff7eb(%rip)
433b(2): mov %edx,%esi
433d(3): cmp %r15,%r13
4340(2): jbe 0x6(%rip)
4342(4): mov %bl,0x0(%r14,%r15,1)
4346(4): movzx 0x0(%rdi,%rbp,1),%ebx
434a(4): add $0x1,%r15
434e(2): test %dl,%dl
4350(6): jnz 0xffffff50(%rip)
4356(2): mov %esi,%eax
4358(3): xor $0x1,%eax
435b(3): and %r8d,%eax
435e(3): test %r10b,%r10b
4361(2): jz 0x10(%rip)
4363(3): cmp %r15,%r13
4366(2): jbe 0x7(%rip)
4368(5): mov $0x5c,0x0(%r14,%r15,1)
436d(4): add $0x1,%r15
4371(4): add $0x1,%rbp
4375(3): cmp %rcx,%rbp
4378(6): jnb 0xfffff784(%rip)
437e(2): test %al,%al
4380(6): jz 0x3fe(%rip)
4386(3): cmp %r15,%r13
4389(2): jbe 0x7(%rip)
438b(5): mov $0x27,0x0(%r14,%r15,1)
4390(4): lea 0x1(%r15),%rax
4394(3): cmp %rax,%r13
4397(2): jbe 0x8(%rip)
4399(6): mov $0x27,0x1(%r14,%r15,1)
439f(4): add $0x2,%r15
43a3(3): xor %r10d,%r10d
43a6(3): xor %r8d,%r8d
43a9(2): jmp 0xffffff94(%rip)
43ab(5): nop 0x0(%rax,%rax,1)
43b0(4): cmp $0x1,%r15
43b4(6): jz 0xfffffe65(%rip)
43ba(5): mov 0x10(%rsp),%rdi
43bf(4): lea 0x0(%rdi,%r15,1),%rcx
43c3(5): lea 0x1(%rdi,%r14,1),%rdx
43c8(4): lea 0x0(%rcx,%r14,1),%r8
43cc(2): jmp 0x11(%rip)
43ce(2): nop 
43d0(4): add $0x1,%rdx
43d4(3): cmp %rdx,%r8
43d7(6): jz 0xfffffe42(%rip)
43dd(3): movzx (%rdx),%ecx
43e0(3): sub $0x5b,%ecx
43e3(3): cmp $0x21,%cl
43e6(2): jnbe 0xffffffea(%rip)
43e8(5): mov $0x1,%esi
43ed(3): shl/sal %cl,%rsi
43f0(3): mov %rsi,%rcx
43f3(a): mov $0x8589934635,%rsi
43fd(3): test %rsi,%rcx
4400(2): jz 0xffffffd0(%rip)
4402(5): mov 0x40(%rsp),%r14
4407(5): mov 0x70(%rsp),%r13
440c(5): mov 0x30(%rsp),%rbp
4411(8): mov $0x2,0x8(%rsp)
4419(5): cmp $0x0,0xd(%rsp)
441e(2): jz 0x12(%rip)
4420(2): test %al,%al
4422(5): mov $0x4,%eax
4427(5): cmove 0x8(%rsp),%eax
442c(4): mov %eax,0x8(%rsp)
4430(4): sub $0x8,%rsp
4434(3): mov %rbp,%rcx
4437(3): mov %r13,%rsi
443a(4): push 0x68(%rsp)
443e(4): push 0x78(%rsp)
4442(3): mov %r14,%rdi
4445(2): push $0x0
4447(8): mov 0x98(%rsp),%r9d
444f(5): mov 0x28(%rsp),%r8d
4454(5): mov 0x30(%rsp),%rdx
4459(4): and $0xfd,%r9d
445d(5): call 0xfffff433(%rip)
4462(4): add $0x20,%rsp
4466(3): mov %rax,%r15
4469(8): mov 0xa8(%rsp),%rbx
4471(9): xor $0x28,%rbx
447a(3): mov %r15,%rax
447d(6): jnz 0x606(%rip)
4483(7): add $0xb8,%rsp
448a(1): pop %rbx
448b(1): pop %rbp
448c(2): pop %r12
448e(2): pop %r13
4490(2): pop %r14
4492(2): pop %r15
4494(1): ret near (%rsp)
4495(3): nop (%rax)
4498(3): mov %r11,%rbp
449b(5): jmp 0xffffff7e(%rip)
44a0(3): cmp %r15,%r13
44a3(2): jbe 0x7(%rip)
44a5(5): mov $0x27,0x0(%r14,%r15,1)
44aa(4): lea 0x1(%r15),%rax
44ae(3): cmp %rax,%r13
44b1(2): jbe 0x8(%rip)
44b3(6): mov $0x5c,0x1(%r14,%r15,1)
44b9(4): lea 0x2(%r15),%rax
44bd(3): cmp %rax,%r13
44c0(6): jbe 0x5f2(%rip)
44c6(3): mov %r13,%rdx
44c9(6): mov $0x27,0x2(%r14,%r15,1)
44cf(5): mov 0x50(%rsp),%r13
44d4(5): jmp 0xfffffbde(%rip)
44d9(3): mov %r12d,%eax
44dc(5): mov $0x30,%ebx
44e1(3): xor %r12d,%r12d
44e4(5): jmp 0xfffff605(%rip)
44e9(6): mov $0x27,0x2(%r14,%r15,1)
44ef(5): jmp 0xfffff9ca(%rip)
44f4(2): test %ebx,%ebx
44f6(6): jnz 0xfffff42d(%rip)
44fc(5): mov $0x1,0xd(%rsp)
4501(3): test %r13,%r13
4504(6): jnz 0x596(%rip)
450a(7): lea 0x2d74(%rip),%rax
4511(9): mov $0x0,0x50(%rsp)
451a(5): mov $0x1,0xe(%rsp)
451f(5): mov $0x0,0x7c(%rsp)
4524(3): xor %r12d,%r12d
4527(5): mov $0x0,0xf(%rsp)
452c(9): mov $0x1,0x18(%rsp)
4535(5): mov %rax,0x48(%rsp)
453a(6): mov $0x1,%r15d
4540(8): mov $0x2,0x8(%rsp)
4548(5): jmp 0xfffff41b(%rip)
454d(3): nop (%rax)
4550(2): test %ebx,%ebx
4552(6): jnz 0x3fb(%rip)
4558(3): test %r13,%r13
455b(6): jz 0x22b(%rip)
4561(4): mov $0x22,(%r14)
4565(5): mov $0x1,0xe(%rsp)
456a(3): xor %r12d,%r12d
456d(5): mov $0x0,0x7c(%rsp)
4572(9): mov $0x0,0x50(%rsp)
457b(7): lea 0x2d01(%rip),%rax
4582(5): mov $0x0,0xf(%rsp)
4587(5): mov $0x1,0xd(%rsp)
458c(9): mov $0x1,0x18(%rsp)
4595(6): mov $0x1,%r15d
459b(5): mov %rax,0x48(%rsp)
45a0(5): jmp 0xfffff3c3(%rip)
45a5(7): lea 0x2cd7(%rip),%rax
45ac(5): mov $0x1,0xe(%rsp)
45b1(5): mov $0x0,0x7c(%rsp)
45b6(3): xor %r12d,%r12d
45b9(9): mov $0x0,0x50(%rsp)
45c2(5): mov $0x1,0xf(%rsp)
45c7(5): mov $0x1,0xd(%rsp)
45cc(9): mov $0x1,0x18(%rsp)
45d5(3): xor %r15d,%r15d
45d8(5): mov %rax,0x48(%rsp)
45dd(8): mov $0x5,0x8(%rsp)
45e5(5): jmp 0xfffff37e(%rip)
45ea(5): mov $0x1,0xe(%rsp)
45ef(5): mov $0x0,0x7c(%rsp)
45f4(3): xor %r12d,%r12d
45f7(9): mov $0x0,0x50(%rsp)
4600(5): mov $0x0,0xf(%rsp)
4605(3): xor %r15d,%r15d
4608(5): mov $0x1,0xd(%rsp)
460d(9): mov $0x0,0x18(%rsp)
4616(9): mov $0x0,0x48(%rsp)
461f(5): jmp 0xfffff344(%rip)
4624(5): cmp $0xa,0x8(%rsp)
4629(2): jz 0x58(%rip)
462b(7): lea 0x2c55(%rip),%rsi
4632(2): xor %edi,%edi
4634(5): mov $0x5,%edx
4639(5): call 0xffffd1c7(%rip)
463e(3): mov %rax,%rcx
4641(5): mov %rax,0x68(%rsp)
4646(7): lea 0x2c3a(%rip),%rax
464d(3): cmp %rax,%rcx
4650(6): jz 0x39e(%rip)
4656(7): lea 0x2c28(%rip),%rsi
465d(2): xor %edi,%edi
465f(5): mov $0x5,%edx
4664(5): call 0xffffd19c(%rip)
4669(3): mov %rax,%rcx
466c(5): mov %rax,0x60(%rsp)
4671(7): lea 0x2c0d(%rip),%rax
4678(3): cmp %rax,%rcx
467b(6): jz 0x389(%rip)
4681(3): xor %r15d,%r15d
4684(2): test %ebx,%ebx
4686(6): jz 0x1c7(%rip)
468c(2): test %ebx,%ebx
468e(5): mov 0x60(%rsp),%rbx
4693(5): setnz 0xf(%rsp)
4698(3): xor %r12d,%r12d
469b(3): mov %rbx,%rdi
469e(5): call 0xffffd182(%rip)
46a3(5): mov %rbx,0x48(%rsp)
46a8(5): mov %rax,0x18(%rsp)
46ad(5): mov $0x1,0xe(%rsp)
46b2(5): mov $0x0,0x7c(%rsp)
46b7(9): mov $0x0,0x50(%rsp)
46c0(5): mov $0x1,0xd(%rsp)
46c5(5): jmp 0xfffff29e(%rip)
46ca(5): mov $0x1,0xe(%rsp)
46cf(5): mov $0x0,0x7c(%rsp)
46d4(3): xor %r12d,%r12d
46d7(9): mov $0x0,0x50(%rsp)
46e0(5): mov $0x0,0xf(%rsp)
46e5(3): xor %r15d,%r15d
46e8(5): mov $0x0,0xd(%rsp)
46ed(9): mov $0x0,0x18(%rsp)
46f6(9): mov $0x0,0x48(%rsp)
46ff(5): jmp 0xfffff264(%rip)
4704(5): mov $0x1,0xe(%rsp)
4709(5): mov $0x0,0x7c(%rsp)
470e(3): xor %r12d,%r12d
4711(9): mov $0x0,0x50(%rsp)
471a(5): mov $0x1,0xf(%rsp)
471f(5): mov $0x1,0xd(%rsp)
4724(5): jmp 0xfffff21f(%rip)
4729(3): cmp %r15,%r13
472c(2): jbe 0x7(%rip)
472e(5): mov $0x30,0x0(%r14,%r15,1)
4733(4): lea 0x2(%rcx),%rax
4737(3): cmp %rax,%r13
473a(2): jbe 0x8(%rip)
473c(6): mov $0x30,0x2(%r14,%rcx,1)
4742(3): mov %r12d,%eax
4745(4): lea 0x3(%rcx),%r15
4749(3): xor %r12d,%r12d
474c(5): mov $0x30,%ebx
4751(5): jmp 0xfffff367(%rip)
4756(a): nop 0x0(%rax,%rax,1)
4760(5): movzx 0xf(%rsp),%ebx
4765(3): mov %r11,%rbp
4768(4): mov %bl,0xd(%rsp)
476c(5): jmp 0xfffffcad(%rip)
4771(5): movzx 0xd(%rsp),%edx
4776(3): xor %r12d,%r12d
4779(5): jmp 0xfffffb07(%rip)
477e(3): xor %r10d,%r10d
4781(5): jmp 0xfffffbbc(%rip)
4786(9): mov $0x0,0x50(%rsp)
478f(5): mov $0x1,0xe(%rsp)
4794(3): xor %r12d,%r12d
4797(5): mov $0x0,0x7c(%rsp)
479c(5): jmp 0xfffffddf(%rip)
47a1(5): mov 0x30(%rsp),%r11
47a6(3): mov %r14,%rsi
47a9(3): mov %r13,%rcx
47ac(3): mov %rbx,%rax
47af(3): mov %rbx,%rdi
47b2(6): movzx 0x7d(%rsp),%r8d
47b8(5): movzx 0x7e(%rsp),%ebx
47bd(8): mov 0x88(%rsp),%r9
47c5(3): cmp %r11,%rsi
47c8(6): movzx 0x7f(%rsp),%r10d
47ce(8): mov 0x80(%rsp),%r15
47d6(5): mov 0x40(%rsp),%r14
47db(5): mov 0x70(%rsp),%r13
47e0(2): jnb 0x28(%rip)
47e2(3): cmp $0x0,(%rcx)
47e5(2): jnz 0x12(%rip)
47e7(2): jmp 0x21(%rip)
47e9(7): nop 0x0(%rax)
47f0(5): cmp $0x0,0x0(%r9,%rax,1)
47f5(2): jz 0x10(%rip)
47f7(4): add $0x1,%rax
47fb(5): lea 0x0(%rbp,%rax,1),%rdx
4800(3): cmp %rdx,%r11
4803(2): jnbe 0xffffffed(%rip)
4805(3): mov %rax,%rdi
4808(5): movzx 0xd(%rsp),%edx
480d(3): xor %r12d,%r12d
4810(5): jmp 0xfffffa66(%rip)
4815(3): mov %rbx,%rdi
4818(6): movzx 0x7d(%rsp),%r8d
481e(5): movzx 0x7e(%rsp),%ebx
4823(6): movzx 0x7f(%rsp),%r10d
4829(8): mov 0x80(%rsp),%r15
4831(3): xor %r12d,%r12d
4834(5): mov 0x40(%rsp),%r14
4839(5): mov 0x70(%rsp),%r13
483e(5): mov 0x30(%rsp),%r11
4843(5): movzx 0xd(%rsp),%edx
4848(5): jmp 0xfffffa2e(%rip)
484d(5): mov 0x68(%rsp),%rdx
4852(3): movzx (%rdx),%eax
4855(2): test %al,%al
4857(6): jz 0xfffffe35(%rip)
485d(3): nop (%rax)
4860(3): cmp %r15,%r13
4863(2): jbe 0x6(%rip)
4865(4): mov %al,0x0(%r14,%r15,1)
4869(4): add $0x1,%r15
486d(5): movzx 0x0(%rdx,%r15,1),%eax
4872(2): test %al,%al
4874(2): jnz 0xffffffec(%rip)
4876(5): jmp 0xfffffe16(%rip)
487b(2): mov %edx,%eax
487d(5): jmp 0xfffff55a(%rip)
4882(4): movzx 0x0(%rax,%rcx,1),%ebx
4886(3): cmp $0x3e,%bl
4889(6): jnbe 0xfffff877(%rip)
488f(a): mov $0x8070630310989004800,%rax
4899(4): bt %rbx,%rax
489d(6): jnb 0xfffff863(%rip)
48a3(5): cmp $0x0,0xf(%rsp)
48a8(6): jnz 0x1ea(%rip)
48ae(3): cmp %r15,%r13
48b1(2): jbe 0x7(%rip)
48b3(5): mov $0x3f,0x0(%r14,%r15,1)
48b8(4): lea 0x1(%r15),%rax
48bc(3): cmp %rax,%r13
48bf(2): jbe 0x8(%rip)
48c1(6): mov $0x22,0x1(%r14,%r15,1)
48c7(4): lea 0x2(%r15),%rax
48cb(3): cmp %rax,%r13
48ce(2): jbe 0x8(%rip)
48d0(6): mov $0x22,0x2(%r14,%r15,1)
48d6(4): lea 0x3(%r15),%rax
48da(3): cmp %rax,%r13
48dd(2): jbe 0x8(%rip)
48df(6): mov $0x3f,0x3(%r14,%r15,1)
48e5(4): add $0x4,%r15
48e9(2): xor %edx,%edx
48eb(3): xor %r12d,%r12d
48ee(2): xor %eax,%eax
48f0(3): mov %rcx,%rbp
48f3(5): jmp 0xfffff1c5(%rip)
48f8(2): test %ebx,%ebx
48fa(6): jz 0x18e(%rip)
4900(7): lea 0x297e(%rip),%rax
4907(5): mov $0x1,0xe(%rsp)
490c(5): mov $0x0,0x7c(%rsp)
4911(3): xor %r12d,%r12d
4914(9): mov $0x0,0x50(%rsp)
491d(5): mov $0x1,0xf(%rsp)
4922(5): mov $0x0,0xd(%rsp)
4927(9): mov $0x1,0x18(%rsp)
4930(3): xor %r15d,%r15d
4933(5): mov %rax,0x48(%rsp)
4938(5): jmp 0xfffff02b(%rip)
493d(3): nop (%rax)
4940(3): mov %r11,%rbp
4943(5): movzx 0xf(%rsp),%eax
4948(5): jmp 0xfffffad1(%rip)
494d(7): lea 0x292f(%rip),%rax
4954(5): mov $0x1,0xe(%rsp)
4959(5): mov $0x0,0x7c(%rsp)
495e(3): xor %r12d,%r12d
4961(9): mov $0x0,0x50(%rsp)
496a(5): mov $0x1,0xf(%rsp)
496f(5): mov $0x1,0xd(%rsp)
4974(9): mov $0x1,0x18(%rsp)
497d(3): xor %r15d,%r15d
4980(5): mov %rax,0x48(%rsp)
4985(5): jmp 0xffffefde(%rip)
498a(2): mov %edx,%eax
498c(5): mov 0x48(%rsp),%rbx
4991(3): test %rbx,%rbx
4994(2): jz 0x2e(%rip)
4996(2): test %al,%al
4998(2): jz 0x2a(%rip)
499a(3): movzx (%rbx),%ecx
499d(3): mov %rbx,%rax
49a0(2): test %cl,%cl
49a2(2): jz 0x20(%rip)
49a4(3): mov %r15,%rdx
49a7(3): sub %r15,%rax
49aa(3): cmp %rdx,%r13
49ad(2): jbe 0x6(%rip)
49af(4): mov %cl,0x0(%r14,%rdx,1)
49b3(4): add $0x1,%rdx
49b7(4): movzx 0x0(%rax,%rdx,1),%ecx
49bb(2): test %cl,%cl
49bd(2): jnz 0xffffffed(%rip)
49bf(3): mov %rdx,%r15
49c2(3): cmp %r15,%r13
49c5(6): jbe 0xfffffaa4(%rip)
49cb(5): mov $0x0,0x0(%r14,%r15,1)
49d0(5): jmp 0xfffffa99(%rip)
49d5(5): cmp $0x2,0x8(%rsp)
49da(5): movzx 0xf(%rsp),%ebx
49df(3): mov %r11,%rbp
49e2(3): setz %al
49e5(4): mov %bl,0xd(%rsp)
49e9(5): jmp 0xfffffa30(%rip)
49ee(4): mov 0x8(%rsp),%esi
49f2(3): mov %rcx,%rdi
49f5(5): call 0xffffedab(%rip)
49fa(5): mov %rax,0x68(%rsp)
49ff(5): jmp 0xfffffc57(%rip)
4a04(4): mov 0x8(%rsp),%esi
4a08(3): mov %rcx,%rdi
4a0b(5): call 0xffffed95(%rip)
4a10(5): mov %rax,0x60(%rsp)
4a15(5): jmp 0xfffffc6c(%rip)
4a1a(5): movzx 0xf(%rsp),%ebx
4a1f(3): mov %r11,%rbp
4a22(2): mov %edx,%eax
4a24(4): mov %bl,0xd(%rsp)
4a28(5): jmp 0xfffff9f1(%rip)
4a2d(4): sub $0x8,%rsp
4a31(6): mov $0x5,%r8d
4a37(3): mov %r11,%rcx
4a3a(4): push 0x68(%rsp)
4a3e(4): push 0x78(%rsp)
4a42(3): mov %r14,%rdi
4a45(4): push 0x38(%rsp)
4a49(8): mov 0x98(%rsp),%r9d
4a51(5): mov 0x30(%rsp),%rdx
4a56(5): mov 0x70(%rsp),%rsi
4a5b(5): call 0xffffee35(%rip)
4a60(4): add $0x20,%rsp
4a64(3): mov %rax,%r15
4a67(5): jmp 0xfffffa02(%rip)
4a6c(5): movzx 0x7c(%rsp),%eax
4a71(5): jmp 0xffffff1b(%rip)
4a76(8): mov $0x2,0x8(%rsp)
4a7e(5): jmp 0xfffff99b(%rip)
4a83(5): call 0xffffcdad(%rip)
4a88(5): mov $0x0,0xd(%rsp)
4a8d(5): jmp 0xfffffa74(%rip)
4a92(3): mov %r11,%rbp
4a95(5): jmp 0xfffff99b(%rip)
4a9a(5): mov $0x1,0xe(%rsp)
4a9f(2): xor %eax,%eax
4aa1(3): xor %r12d,%r12d
4aa4(9): mov $0x0,0x50(%rsp)
4aad(5): jmp 0xfffff5a7(%rip)
4ab2(3): mov %r13,%rdx
4ab5(5): mov 0x50(%rsp),%r13
4aba(5): jmp 0xfffff5f8(%rip)
4abf(5): call 0xffffccc1(%rip)

"quotearg_n_options" :
4ad0(2): push %r15
4ad2(2): push %r14
4ad4(3): movsxd %edi,%r15
4ad7(2): push %r13
4ad9(2): push %r12
4adb(3): mov %rdx,%r14
4ade(1): push %rbp
4adf(1): push %rbx
4ae0(3): mov %rcx,%rbp
4ae3(4): sub $0x28,%rsp
4ae7(5): mov %rsi,0x8(%rsp)
4aec(5): call 0xffffcca4(%rip)
4af1(3): mov %rax,%r13
4af4(2): mov (%rax),%eax
4af6(3): test %r15d,%r15d
4af9(7): mov 0x205580(%rip),%rbx
4b00(4): mov %eax,0x18(%rsp)
4b04(6): js 0x16d(%rip)
4b0a(7): cmp %r15d,0x205567(%rip)
4b11(2): jnle 0x64(%rip)
4b13(7): cmp $0x7fffffff,%r15d
4b1a(6): jz 0x15c(%rip)
4b20(4): lea 0x1(%r15),%r12d
4b24(7): lea 0x205565(%rip),%rax
4b2b(3): movsxd %r12d,%rsi
4b2e(4): shl/sal $0x4,%rsi
4b32(3): cmp %rax,%rbx
4b35(6): jz 0x11b(%rip)
4b3b(3): mov %rbx,%rdi
4b3e(5): call 0xf72(%rip)
4b43(3): mov %rax,%rbx
4b46(7): mov %rax,0x205533(%rip)
4b4d(7): movsxd 0x205524(%rip),%rdi
4b54(3): mov %r12d,%edx
4b57(2): xor %esi,%esi
4b59(2): sub %edi,%edx
4b5b(4): shl/sal $0x4,%rdi
4b5f(3): movsxd %edx,%rdx
4b62(3): add %rbx,%rdi
4b65(4): shl/sal $0x4,%rdx
4b69(5): call 0xffffcd57(%rip)
4b6e(7): mov %r12d,0x205503(%rip)
4b75(3): mov 0x4(%rbp),%eax
4b78(4): shl/sal $0x4,%r15
4b7c(4): sub $0x8,%rsp
4b80(3): add %r15,%rbx
4b83(4): lea 0x8(%rbp),%r15
4b87(4): mov 0x0(%rbp),%r8d
4b8b(3): mov (%rbx),%r11
4b8e(4): mov 0x8(%rbx),%r12
4b92(3): mov %r14,%rcx
4b95(3): or $0x1,%eax
4b98(4): mov %eax,0x24(%rsp)
4b9c(3): push 0x30(%rbp)
4b9f(3): mov %eax,%r9d
4ba2(3): push 0x28(%rbp)
4ba5(2): push %r15
4ba7(3): mov %r11,%rsi
4baa(5): mov 0x28(%rsp),%rdx
4baf(3): mov %r12,%rdi
4bb2(5): mov %r11,0x30(%rsp)
4bb7(5): call 0xffffecd9(%rip)
4bbc(4): add $0x20,%rsp
4bc0(5): mov 0x10(%rsp),%r11
4bc5(3): cmp %rax,%r11
4bc8(2): jnbe 0x69(%rip)
4bca(4): lea 0x1(%rax),%rsi
4bce(7): lea 0x20556b(%rip),%rax
4bd5(3): cmp %rax,%r12
4bd8(3): mov %rsi,(%rbx)
4bdb(2): jz 0x14(%rip)
4bdd(3): mov %r12,%rdi
4be0(5): mov %rsi,0x10(%rsp)
4be5(5): call 0xffffcb8b(%rip)
4bea(5): mov 0x10(%rsp),%rsi
4bef(3): mov %rsi,%rdi
4bf2(5): mov %rsi,0x10(%rsp)
4bf7(5): call 0xe59(%rip)
4bfc(4): sub $0x8,%rsp
4c00(4): mov %rax,0x8(%rbx)
4c04(4): mov 0x0(%rbp),%r8d
4c08(3): push 0x30(%rbp)
4c0b(3): push 0x28(%rbp)
4c0e(3): mov %r14,%rcx
4c11(2): push %r15
4c13(5): mov 0x3c(%rsp),%r9d
4c18(3): mov %rax,%rdi
4c1b(5): mov 0x28(%rsp),%rdx
4c20(5): mov 0x30(%rsp),%rsi
4c25(3): mov %rax,%r12
4c28(5): call 0xffffec68(%rip)
4c2d(4): add $0x20,%rsp
4c31(4): mov 0x18(%rsp),%eax
4c35(4): mov %eax,0x0(%r13)
4c39(4): add $0x28,%rsp
4c3d(3): mov %r12,%rax
4c40(1): pop %rbx
4c41(1): pop %rbp
4c42(2): pop %r12
4c44(2): pop %r13
4c46(2): pop %r14
4c48(2): pop %r15
4c4a(1): ret near (%rsp)
4c4b(5): nop 0x0(%rax,%rax,1)
4c50(2): xor %edi,%edi
4c52(5): call 0xe5e(%rip)
4c57(8): movdqa 0x205431(%rip),%xmm0
4c5f(3): mov %rax,%rbx
4c62(7): mov %rax,0x205417(%rip)
4c69(3): movups %xmm0,(%rax)
4c6c(5): jmp 0xfffffee1(%rip)
4c71(5): call 0xffffcb0f(%rip)
4c76(5): call 0x102a(%rip)

"clone_quoting_options" :
4c80(2): push %r12
4c82(1): push %rbp
4c83(1): push %rbx
4c84(3): mov %rdi,%rbx
4c87(5): call 0xffffcb09(%rip)
4c8c(3): mov (%rax),%r12d
4c8f(3): mov %rax,%rbp
4c92(7): lea 0x2055a7(%rip),%rax
4c99(3): test %rbx,%rbx
4c9c(5): mov $0x38,%esi
4ca1(4): cmove %rax,%rbx
4ca5(3): mov %rbx,%rdi
4ca8(5): call 0xfa8(%rip)
4cad(4): mov %r12d,0x0(%rbp)
4cb1(1): pop %rbx
4cb2(1): pop %rbp
4cb3(2): pop %r12
4cb5(1): ret near (%rsp)

"get_quoting_style" :
4cc0(7): lea 0x205579(%rip),%rax
4cc7(3): test %rdi,%rdi
4cca(4): cmove %rax,%rdi
4cce(2): mov (%rdi),%eax
4cd0(1): ret near (%rsp)

"set_quoting_style" :
4ce0(7): lea 0x205559(%rip),%rax
4ce7(3): test %rdi,%rdi
4cea(4): cmove %rax,%rdi
4cee(2): mov %esi,(%rdi)
4cf0(1): ret near (%rsp)

"set_char_quoting" :
4d00(7): lea 0x205539(%rip),%rax
4d07(3): test %rdi,%rdi
4d0a(2): mov %esi,%ecx
4d0c(4): cmove %rax,%rdi
4d10(2): mov %esi,%eax
4d12(3): and $0x1f,%ecx
4d15(3): shr $0x5,%al
4d18(3): movzx %al,%eax
4d1b(5): lea 0x8(%rdi,%rax,4),%rdi
4d20(2): mov (%rdi),%esi
4d22(2): mov %esi,%eax
4d24(2): shr %cl,%eax
4d26(2): xor %eax,%edx
4d28(3): and $0x1,%eax
4d2b(3): and $0x1,%edx
4d2e(2): shl/sal %cl,%edx
4d30(2): xor %esi,%edx
4d32(2): mov %edx,(%rdi)
4d34(1): ret near (%rsp)

"set_quoting_flags" :
4d40(7): lea 0x2054f9(%rip),%rax
4d47(3): test %rdi,%rdi
4d4a(4): cmove %rax,%rdi
4d4e(3): mov 0x4(%rdi),%eax
4d51(3): mov %esi,0x4(%rdi)
4d54(1): ret near (%rsp)

"set_custom_quoting" :
4d60(7): lea 0x2054d9(%rip),%rax
4d67(3): test %rdi,%rdi
4d6a(4): cmove %rax,%rdi
4d6e(3): test %rsi,%rsi
4d71(6): mov $0xa,(%rdi)
4d77(2): jz 0x10(%rip)
4d79(3): test %rdx,%rdx
4d7c(2): jz 0xb(%rip)
4d7e(4): mov %rsi,0x28(%rdi)
4d82(4): mov %rdx,0x30(%rdi)
4d86(1): ret near (%rsp)
4d87(4): sub $0x8,%rsp
4d8b(5): call 0xffffc9f5(%rip)

"quotearg_buffer" :
4d90(2): push %r15
4d92(2): push %r14
4d94(7): lea 0x2054a5(%rip),%rax
4d9b(2): push %r13
4d9d(2): push %r12
4d9f(3): mov %rdi,%r13
4da2(1): push %rbp
4da3(1): push %rbx
4da4(3): mov %r8,%rbx
4da7(3): mov %rsi,%r14
4daa(3): mov %rdx,%r15
4dad(4): sub $0x18,%rsp
4db1(3): test %r8,%r8
4db4(4): cmove %rax,%rbx
4db8(5): mov %rcx,0x8(%rsp)
4dbd(5): call 0xffffc9d3(%rip)
4dc2(3): mov (%rax),%r12d
4dc5(3): mov %rax,%rbp
4dc8(4): lea 0x8(%rbx),%rax
4dcc(4): sub $0x8,%rsp
4dd0(4): mov 0x4(%rbx),%r9d
4dd4(3): push 0x30(%rbx)
4dd7(3): mov (%rbx),%r8d
4dda(3): push 0x28(%rbx)
4ddd(3): mov %r15,%rdx
4de0(1): push %rax
4de1(5): mov 0x28(%rsp),%rcx
4de6(3): mov %r14,%rsi
4de9(3): mov %r13,%rdi
4dec(5): call 0xffffeaa4(%rip)
4df1(4): mov %r12d,0x0(%rbp)
4df5(4): add $0x38,%rsp
4df9(1): pop %rbx
4dfa(1): pop %rbp
4dfb(2): pop %r12
4dfd(2): pop %r13
4dff(2): pop %r14
4e01(2): pop %r15
4e03(1): ret near (%rsp)

"quotearg_alloc_mem" :
4e10(2): push %r15
4e12(2): push %r14
4e14(7): lea 0x205425(%rip),%rax
4e1b(2): push %r13
4e1d(2): push %r12
4e1f(3): mov %rdx,%r12
4e22(1): push %rbp
4e23(1): push %rbx
4e24(3): mov %rcx,%rbx
4e27(3): mov %rdi,%r14
4e2a(3): mov %rsi,%r15
4e2d(4): sub $0x38,%rsp
4e31(3): test %rcx,%rcx
4e34(4): cmove %rax,%rbx
4e38(2): xor %ebp,%ebp
4e3a(5): call 0xffffc956(%rip)
4e3f(3): test %r12,%r12
4e42(3): mov %rax,%r13
4e45(2): mov (%rax),%eax
4e47(4): setz %bpl
4e4b(3): or 0x4(%rbx),%ebp
4e4e(4): lea 0x8(%rbx),%r10
4e52(4): sub $0x8,%rsp
4e56(3): mov (%rbx),%r8d
4e59(3): mov %r15,%rcx
4e5c(4): mov %eax,0x14(%rsp)
4e60(3): push 0x30(%rbx)
4e63(3): mov %r14,%rdx
4e66(3): push 0x28(%rbx)
4e69(2): push %r10
4e6b(2): xor %esi,%esi
4e6d(3): mov %ebp,%r9d
4e70(2): xor %edi,%edi
4e72(5): mov %r10,0x40(%rsp)
4e77(5): call 0xffffea19(%rip)
4e7c(4): lea 0x1(%rax),%rsi
4e80(5): mov %rax,0x48(%rsp)
4e85(4): add $0x20,%rsp
4e89(3): mov %rsi,%rdi
4e8c(5): mov %rsi,0x18(%rsp)
4e91(5): call 0xbbf(%rip)
4e96(5): mov %rax,0x10(%rsp)
4e9b(4): sub $0x8,%rsp
4e9f(3): push 0x30(%rbx)
4ea2(3): push 0x28(%rbx)
4ea5(5): mov 0x38(%rsp),%r10
4eaa(3): mov %ebp,%r9d
4ead(3): mov (%rbx),%r8d
4eb0(3): mov %r15,%rcx
4eb3(3): mov %r14,%rdx
4eb6(3): mov %rax,%rdi
4eb9(2): push %r10
4ebb(5): mov 0x38(%rsp),%rsi
4ec0(5): call 0xffffe9d0(%rip)
4ec5(4): mov 0x2c(%rsp),%eax
4ec9(4): add $0x20,%rsp
4ecd(3): test %r12,%r12
4ed0(4): mov %eax,0x0(%r13)
4ed4(2): jz 0xb(%rip)
4ed6(5): mov 0x28(%rsp),%r11
4edb(4): mov %r11,(%r12)
4edf(5): mov 0x10(%rsp),%rax
4ee4(4): add $0x38,%rsp
4ee8(1): pop %rbx
4ee9(1): pop %rbp
4eea(2): pop %r12
4eec(2): pop %r13
4eee(2): pop %r14
4ef0(2): pop %r15
4ef2(1): ret near (%rsp)

"quotearg_alloc" :
4f00(3): mov %rdx,%rcx
4f03(2): xor %edx,%edx
4f05(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4f10(6): mov 0x205162(%rip),%eax
4f16(2): push %r12
4f18(7): mov 0x205161(%rip),%r12
4f1f(1): push %rbp
4f20(1): push %rbx
4f21(3): cmp $0x1,%eax
4f24(2): jle 0x2d(%rip)
4f26(3): sub $0x2,%eax
4f29(5): lea 0x18(%r12),%rbx
4f2e(4): shl/sal $0x4,%rax
4f32(5): lea 0x28(%r12,%rax,1),%rbp
4f37(9): nop 0x0(%rax,%rax,1)
4f40(3): mov (%rbx),%rdi
4f43(4): add $0x10,%rbx
4f47(5): call 0xffffc829(%rip)
4f4c(3): cmp %rbp,%rbx
4f4f(2): jnz 0xfffffff1(%rip)
4f51(5): mov 0x8(%r12),%rdi
4f56(7): lea 0x2051e3(%rip),%rbx
4f5d(3): cmp %rbx,%rdi
4f60(2): jz 0x19(%rip)
4f62(5): call 0xffffc80e(%rip)
4f67(b): mov $0x100,0x20511e(%rip)
4f72(7): mov %rbx,0x20511f(%rip)
4f79(7): lea 0x205110(%rip),%rbx
4f80(3): cmp %rbx,%r12
4f83(2): jz 0x11(%rip)
4f85(3): mov %r12,%rdi
4f88(5): call 0xffffc7e8(%rip)
4f8d(7): mov %rbx,0x2050ec(%rip)
4f94(1): pop %rbx
4f95(a): mov $0x1,0x2050d9(%rip)
4f9f(1): pop %rbp
4fa0(2): pop %r12
4fa2(1): ret near (%rsp)

"quotearg_n" :
4fb0(7): lea 0x205289(%rip),%rcx
4fb7(7): mov $0xffffffff,%rdx
4fbe(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4fd0(7): lea 0x205269(%rip),%rcx
4fd7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4fe0(7): lea 0x205259(%rip),%rcx
4fe7(3): mov %rdi,%rsi
4fea(7): mov $0xffffffff,%rdx
4ff1(2): xor %edi,%edi
4ff3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5000(7): lea 0x205239(%rip),%rcx
5007(3): mov %rsi,%rdx
500a(3): mov %rdi,%rsi
500d(2): xor %edi,%edi
500f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5020(4): sub $0x48,%rsp
5024(3): mov %rdx,%rax
5027(9): mov $0x28,%rdx
5030(5): mov %rdx,0x38(%rsp)
5035(2): xor %edx,%edx
5037(3): cmp $0xa,%esi
503a(2): jz 0x6a(%rip)
503c(3): mov %esi,(%rsp)
503f(3): mov %rsp,%rcx
5042(7): mov $0xffffffff,%rdx
5049(3): mov %rax,%rsi
504c(9): mov $0x0,0x4(%rsp)
5055(9): mov $0x0,0xc(%rsp)
505e(9): mov $0x0,0x14(%rsp)
5067(9): mov $0x0,0x1c(%rsp)
5070(9): mov $0x0,0x24(%rsp)
5079(9): mov $0x0,0x2c(%rsp)
5082(8): mov $0x0,0x34(%rsp)
508a(5): call 0xfffffa46(%rip)
508f(5): mov 0x38(%rsp),%rcx
5094(9): xor $0x28,%rcx
509d(2): jnz 0xc(%rip)
509f(4): add $0x48,%rsp
50a3(1): ret near (%rsp)
50a4(5): call 0xffffc6dc(%rip)
50a9(5): call 0xffffc787(%rip)

"quotearg_n_style_mem" :
50b0(4): sub $0x48,%rsp
50b4(3): mov %rdx,%rax
50b7(3): mov %rcx,%rdx
50ba(9): mov $0x28,%rcx
50c3(5): mov %rcx,0x38(%rsp)
50c8(2): xor %ecx,%ecx
50ca(3): cmp $0xa,%esi
50cd(2): jz 0x63(%rip)
50cf(3): mov %esi,(%rsp)
50d2(3): mov %rsp,%rcx
50d5(3): mov %rax,%rsi
50d8(9): mov $0x0,0x4(%rsp)
50e1(9): mov $0x0,0xc(%rsp)
50ea(9): mov $0x0,0x14(%rsp)
50f3(9): mov $0x0,0x1c(%rsp)
50fc(9): mov $0x0,0x24(%rsp)
5105(9): mov $0x0,0x2c(%rsp)
510e(8): mov $0x0,0x34(%rsp)
5116(5): call 0xfffff9ba(%rip)
511b(5): mov 0x38(%rsp),%rdx
5120(9): xor $0x28,%rdx
5129(2): jnz 0xc(%rip)
512b(4): add $0x48,%rsp
512f(1): ret near (%rsp)
5130(5): call 0xffffc650(%rip)
5135(5): call 0xffffc6fb(%rip)

"quotearg_style" :
5140(3): mov %rsi,%rdx
5143(2): mov %edi,%esi
5145(2): xor %edi,%edi
5147(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5150(3): mov %rdx,%rcx
5153(3): mov %rsi,%rdx
5156(2): mov %edi,%esi
5158(2): xor %edi,%edi
515a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5160(4): sub $0x48,%rsp
5164(2): mov %edx,%ecx
5166(9): mov $0x28,%rax
516f(5): mov %rax,0x38(%rsp)
5174(2): xor %eax,%eax
5176(7): mov 0x2050f3(%rip),%rax
517d(3): mov %rsp,%r8
5180(3): and $0x1f,%ecx
5183(8): movdqa 0x2050b5(%rip),%xmm0
518b(5): mov %rax,0x30(%rsp)
5190(2): mov %edx,%eax
5192(4): movaps %xmm0,(%rsp)
5196(3): shr $0x5,%al
5199(3): movzx %al,%eax
519c(5): lea 0x8(%r8,%rax,4),%r9
51a1(8): movdqa 0x2050a7(%rip),%xmm0
51a9(5): movaps %xmm0,0x10(%rsp)
51ae(8): movdqa 0x2050aa(%rip),%xmm0
51b6(5): movaps %xmm0,0x20(%rsp)
51bb(3): mov (%r9),%edx
51be(2): mov %edx,%eax
51c0(2): shr %cl,%eax
51c2(2): not %eax
51c4(3): and $0x1,%eax
51c7(2): shl/sal %cl,%eax
51c9(3): mov %r8,%rcx
51cc(2): xor %edx,%eax
51ce(3): mov %rsi,%rdx
51d1(3): mov %rdi,%rsi
51d4(3): mov %eax,(%r9)
51d7(2): xor %edi,%edi
51d9(5): call 0xfffff8f7(%rip)
51de(5): mov 0x38(%rsp),%rsi
51e3(9): xor $0x28,%rsi
51ec(2): jnz 0x7(%rip)
51ee(4): add $0x48,%rsp
51f2(1): ret near (%rsp)
51f3(5): call 0xffffc63d(%rip)

"quotearg_char" :
5200(4): movsx %sil,%edx
5204(7): mov $0xffffffff,%rsi
520b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5210(5): mov $0x3a,%edx
5215(7): mov $0xffffffff,%rsi
521c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5230(5): mov $0x3a,%edx
5235(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5240(4): sub $0x48,%rsp
5244(3): mov %rdx,%rax
5247(9): mov $0x28,%rdx
5250(5): mov %rdx,0x38(%rsp)
5255(2): xor %edx,%edx
5257(3): cmp $0xa,%esi
525a(2): jz 0x6a(%rip)
525c(3): mov %esi,(%rsp)
525f(3): mov %rsp,%rcx
5262(7): mov $0xffffffff,%rdx
5269(3): mov %rax,%rsi
526c(9): mov $0x0,0x4(%rsp)
5275(9): mov $0x4000000,0xc(%rsp)
527e(9): mov $0x0,0x14(%rsp)
5287(9): mov $0x0,0x1c(%rsp)
5290(9): mov $0x0,0x24(%rsp)
5299(9): mov $0x0,0x2c(%rsp)
52a2(8): mov $0x0,0x34(%rsp)
52aa(5): call 0xfffff826(%rip)
52af(5): mov 0x38(%rsp),%rcx
52b4(9): xor $0x28,%rcx
52bd(2): jnz 0xc(%rip)
52bf(4): add $0x48,%rsp
52c3(1): ret near (%rsp)
52c4(5): call 0xffffc4bc(%rip)
52c9(5): call 0xffffc567(%rip)

"quotearg_n_custom_mem" :
52d0(4): sub $0x48,%rsp
52d4(3): mov %rcx,%r9
52d7(7): mov 0x204f92(%rip),%rcx
52de(8): movdqa 0x204f5a(%rip),%xmm0
52e6(9): mov $0x28,%rax
52ef(5): mov %rax,0x38(%rsp)
52f4(2): xor %eax,%eax
52f6(4): movaps %xmm0,(%rsp)
52fa(3): test %rsi,%rsi
52fd(5): mov %rcx,0x30(%rsp)
5302(7): mov $0xa,(%rsp)
5309(8): movdqa 0x204f3f(%rip),%xmm0
5311(5): movaps %xmm0,0x10(%rsp)
5316(8): movdqa 0x204f42(%rip),%xmm0
531e(5): movaps %xmm0,0x20(%rsp)
5323(2): jz 0x34(%rip)
5325(3): test %rdx,%rdx
5328(2): jz 0x2f(%rip)
532a(5): mov %rsi,0x28(%rsp)
532f(5): mov %rdx,0x30(%rsp)
5334(3): mov %rsp,%rcx
5337(3): mov %r8,%rdx
533a(3): mov %r9,%rsi
533d(5): call 0xfffff793(%rip)
5342(5): mov 0x38(%rsp),%rdi
5347(9): xor $0x28,%rdi
5350(2): jnz 0xc(%rip)
5352(4): add $0x48,%rsp
5356(1): ret near (%rsp)
5357(5): call 0xffffc429(%rip)
535c(5): call 0xffffc4d4(%rip)

"quotearg_n_custom" :
5370(7): mov $0xffffffff,%r8
5377(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5380(3): mov %rdx,%rcx
5383(7): mov $0xffffffff,%r8
538a(3): mov %rsi,%rdx
538d(3): mov %rdi,%rsi
5390(2): xor %edi,%edi
5392(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
53a0(3): mov %rcx,%r8
53a3(3): mov %rdx,%rcx
53a6(3): mov %rsi,%rdx
53a9(3): mov %rdi,%rsi
53ac(2): xor %edi,%edi
53ae(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
53c0(7): lea 0x204c79(%rip),%rcx
53c7(5): jmp 0xfffff709(%rip)

"quote_mem" :
53d0(7): lea 0x204c69(%rip),%rcx
53d7(3): mov %rsi,%rdx
53da(3): mov %rdi,%rsi
53dd(2): xor %edi,%edi
53df(5): jmp 0xfffff6f1(%rip)

"quote_n" :
53f0(7): lea 0x204c49(%rip),%rcx
53f7(7): mov $0xffffffff,%rdx
53fe(5): jmp 0xfffff6d2(%rip)

"quote" :
5410(7): lea 0x204c29(%rip),%rcx
5417(3): mov %rdi,%rsi
541a(7): mov $0xffffffff,%rdx
5421(2): xor %edi,%edi
5423(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
5430(2): push %r15
5432(2): push %r14
5434(2): push %r13
5436(2): push %r12
5438(3): mov %r9,%r12
543b(1): push %rbp
543c(1): push %rbx
543d(3): mov %rdi,%rbp
5440(3): mov %r8,%rbx
5443(4): sub $0x28,%rsp
5447(3): test %rsi,%rsi
544a(6): jz 0x11e(%rip)
5450(3): mov %rdx,%r8
5453(7): lea 0x22ee(%rip),%rdx
545a(3): mov %rcx,%r9
545d(2): xor %eax,%eax
545f(3): mov %rsi,%rcx
5462(5): mov $0x1,%esi
5467(5): call 0xffffc609(%rip)
546c(7): lea 0x22e8(%rip),%rsi
5473(2): xor %edi,%edi
5475(5): mov $0x5,%edx
547a(5): call 0xffffc386(%rip)
547f(7): lea 0x25fa(%rip),%rdx
5486(3): mov %rax,%rcx
5489(6): mov $0x7e3,%r8d
548f(5): mov $0x1,%esi
5494(3): mov %rbp,%rdi
5497(2): xor %eax,%eax
5499(5): call 0xffffc5d7(%rip)
549e(7): lea 0x2343(%rip),%rsi
54a5(2): xor %edi,%edi
54a7(5): mov $0x5,%edx
54ac(5): call 0xffffc354(%rip)
54b1(3): mov %rbp,%rsi
54b4(3): mov %rax,%rdi
54b7(5): call 0xffffc459(%rip)
54bc(4): cmp $0x9,%r12
54c0(6): jnbe 0x340(%rip)
54c6(7): lea 0x2577(%rip),%rdx
54cd(4): movsxd 0x0(%rdx,%r12,4),%rax
54d1(3): add %rdx,%rax
54d4(2): jmp %rax
54d6(a): nop 0x0(%rax,%rax,1)
54e0(4): mov 0x38(%rbx),%r9
54e4(4): mov 0x10(%rbx),%rax
54e8(7): lea 0x2469(%rip),%rsi
54ef(4): mov 0x8(%rbx),%r8
54f3(5): mov $0x5,%edx
54f8(2): xor %edi,%edi
54fa(4): mov 0x30(%rbx),%r13
54fe(4): mov 0x28(%rbx),%r12
5502(5): mov %r9,0x10(%rsp)
5507(4): mov 0x20(%rbx),%r15
550b(4): mov 0x18(%rbx),%r14
550f(4): mov %rax,(%rsp)
5513(5): mov %r8,0x8(%rsp)
5518(3): mov (%rbx),%rbx
551b(5): call 0xffffc2e5(%rip)
5520(4): sub $0x8,%rsp
5524(5): mov 0x18(%rsp),%r9
5529(3): mov %rax,%rdx
552c(3): mov %rbx,%rcx
552f(5): mov $0x1,%esi
5534(3): mov %rbp,%rdi
5537(2): xor %eax,%eax
5539(2): push %r9
553b(2): push %r13
553d(2): push %r12
553f(2): push %r15
5541(2): push %r14
5543(5): mov 0x30(%rsp),%r9
5548(5): mov 0x38(%rsp),%r8
554d(5): call 0xffffc523(%rip)
5552(4): add $0x30,%rsp
5556(4): add $0x28,%rsp
555a(1): pop %rbx
555b(1): pop %rbp
555c(2): pop %r12
555e(2): pop %r13
5560(2): pop %r14
5562(2): pop %r15
5564(1): ret near (%rsp)
5565(3): nop (%rax)
5568(3): mov %rcx,%r8
556b(3): mov %rdx,%rcx
556e(7): lea 0x21df(%rip),%rdx
5575(5): mov $0x1,%esi
557a(2): xor %eax,%eax
557c(5): call 0xffffc4f4(%rip)
5581(5): jmp 0xfffffeeb(%rip)
5586(a): nop 0x0(%rax,%rax,1)
5590(4): mov 0x40(%rbx),%r10
5594(4): mov 0x38(%rbx),%r9
5598(7): lea 0x23e9(%rip),%rsi
559f(4): mov 0x10(%rbx),%rax
55a3(4): mov 0x8(%rbx),%r8
55a7(5): mov $0x5,%edx
55ac(4): mov 0x30(%rbx),%r13
55b0(4): mov 0x28(%rbx),%r12
55b4(4): mov 0x20(%rbx),%r15
55b8(4): mov 0x18(%rbx),%r14
55bc(3): mov (%rbx),%rbx
55bf(5): mov %r10,0x18(%rsp)
55c4(5): mov %r9,0x10(%rsp)
55c9(4): mov %rax,(%rsp)
55cd(5): mov %r8,0x8(%rsp)
55d2(2): xor %edi,%edi
55d4(5): call 0xffffc22c(%rip)
55d9(5): mov 0x18(%rsp),%r10
55de(2): push %r10
55e0(5): jmp 0xffffff44(%rip)
55e5(3): nop (%rax)
55e8(3): mov (%rbx),%rbx
55eb(7): lea 0x216d(%rip),%rsi
55f2(5): mov $0x5,%edx
55f7(2): xor %edi,%edi
55f9(5): call 0xffffc207(%rip)
55fe(4): add $0x28,%rsp
5602(3): mov %rbx,%rcx
5605(3): mov %rbp,%rdi
5608(1): pop %rbx
5609(1): pop %rbp
560a(2): pop %r12
560c(2): pop %r13
560e(2): pop %r14
5610(2): pop %r15
5612(3): mov %rax,%rdx
5615(5): mov $0x1,%esi
561a(2): xor %eax,%eax
561c(5): jmp 0xffffc454(%rip)
5621(7): nop 0x0(%rax)
5628(4): mov 0x8(%rbx),%r12
562c(7): lea 0x213c(%rip),%rsi
5633(3): mov (%rbx),%rbx
5636(5): mov $0x5,%edx
563b(2): xor %edi,%edi
563d(5): call 0xffffc1c3(%rip)
5642(4): add $0x28,%rsp
5646(3): mov %r12,%r8
5649(3): mov %rbx,%rcx
564c(3): mov %rbp,%rdi
564f(3): mov %rax,%rdx
5652(5): mov $0x1,%esi
5657(1): pop %rbx
5658(1): pop %rbp
5659(2): pop %r12
565b(2): pop %r13
565d(2): pop %r14
565f(2): pop %r15
5661(2): xor %eax,%eax
5663(5): jmp 0xffffc40d(%rip)
5668(8): nop 0x0(%rax,%rax,1)
5670(4): mov 0x10(%rbx),%r13
5674(4): mov 0x8(%rbx),%r12
5678(7): lea 0x2107(%rip),%rsi
567f(3): mov (%rbx),%rbx
5682(5): mov $0x5,%edx
5687(2): xor %edi,%edi
5689(5): call 0xffffc177(%rip)
568e(4): add $0x28,%rsp
5692(3): mov %r13,%r9
5695(3): mov %r12,%r8
5698(3): mov %rbx,%rcx
569b(3): mov %rbp,%rdi
569e(3): mov %rax,%rdx
56a1(1): pop %rbx
56a2(1): pop %rbp
56a3(2): pop %r12
56a5(2): pop %r13
56a7(2): pop %r14
56a9(2): pop %r15
56ab(5): mov $0x1,%esi
56b0(2): xor %eax,%eax
56b2(5): jmp 0xffffc3be(%rip)
56b7(9): nop 0x0(%rax,%rax,1)
56c0(7): lea 0x21f1(%rip),%rsi
56c7(5): mov $0x5,%edx
56cc(2): xor %edi,%edi
56ce(4): mov 0x18(%rbx),%r14
56d2(4): mov 0x10(%rbx),%r13
56d6(4): mov 0x8(%rbx),%r12
56da(3): mov (%rbx),%rbx
56dd(5): call 0xffffc123(%rip)
56e2(4): sub $0x8,%rsp
56e6(2): push %r14
56e8(3): mov %rax,%rdx
56eb(3): mov %r13,%r9
56ee(3): mov %r12,%r8
56f1(3): mov %rbx,%rcx
56f4(3): mov %rbp,%rdi
56f7(5): mov $0x1,%esi
56fc(2): xor %eax,%eax
56fe(5): call 0xffffc372(%rip)
5703(1): pop %rax
5704(1): pop %rdx
5705(4): add $0x28,%rsp
5709(1): pop %rbx
570a(1): pop %rbp
570b(2): pop %r12
570d(2): pop %r13
570f(2): pop %r14
5711(2): pop %r15
5713(1): ret near (%rsp)
5714(4): nop 0x0(%rax)
5718(4): mov 0x20(%rbx),%r15
571c(7): lea 0x21b5(%rip),%rsi
5723(5): mov $0x5,%edx
5728(2): xor %edi,%edi
572a(4): mov 0x18(%rbx),%r14
572e(4): mov 0x10(%rbx),%r13
5732(4): mov 0x8(%rbx),%r12
5736(3): mov (%rbx),%rbx
5739(5): call 0xffffc0c7(%rip)
573e(2): push %r15
5740(2): jmp 0xffffffa6(%rip)
5742(6): nop 0x0(%rax,%rax,1)
5748(4): mov 0x8(%rbx),%r8
574c(4): mov 0x28(%rbx),%r12
5750(7): lea 0x21a9(%rip),%rsi
5757(4): mov 0x20(%rbx),%r15
575b(4): mov 0x18(%rbx),%r14
575f(5): mov $0x5,%edx
5764(4): mov 0x10(%rbx),%r13
5768(2): xor %edi,%edi
576a(3): mov (%rbx),%rbx
576d(4): mov %r8,(%rsp)
5771(5): call 0xffffc08f(%rip)
5776(4): sub $0x8,%rsp
577a(3): mov %r13,%r9
577d(2): push %r12
577f(2): push %r15
5781(2): push %r14
5783(5): mov 0x20(%rsp),%r8
5788(3): mov %rbx,%rcx
578b(3): mov %rax,%rdx
578e(3): mov %rbp,%rdi
5791(5): mov $0x1,%esi
5796(2): xor %eax,%eax
5798(5): call 0xffffc2d8(%rip)
579d(4): add $0x20,%rsp
57a1(4): add $0x28,%rsp
57a5(1): pop %rbx
57a6(1): pop %rbp
57a7(2): pop %r12
57a9(2): pop %r13
57ab(2): pop %r14
57ad(2): pop %r15
57af(1): ret near (%rsp)
57b0(4): mov 0x10(%rbx),%r9
57b4(4): mov 0x30(%rbx),%r13
57b8(7): lea 0x2169(%rip),%rsi
57bf(4): mov 0x28(%rbx),%r12
57c3(4): mov 0x20(%rbx),%r15
57c7(5): mov $0x5,%edx
57cc(4): mov 0x18(%rbx),%r14
57d0(4): mov 0x8(%rbx),%r8
57d4(2): xor %edi,%edi
57d6(5): mov %r9,0x8(%rsp)
57db(3): mov (%rbx),%rbx
57de(4): mov %r8,(%rsp)
57e2(5): call 0xffffc01e(%rip)
57e7(2): push %r13
57e9(2): push %r12
57eb(2): push %r15
57ed(2): push %r14
57ef(5): mov 0x28(%rsp),%r9
57f4(2): jmp 0xffffff8f(%rip)
57f6(a): nop 0x0(%rax,%rax,1)
5800(4): mov 0x40(%rbx),%r10
5804(4): mov 0x38(%rbx),%r9
5808(5): mov $0x5,%edx
580d(4): mov 0x10(%rbx),%rax
5811(4): mov 0x8(%rbx),%r8
5815(7): lea 0x21a4(%rip),%rsi
581c(4): mov 0x30(%rbx),%r13
5820(4): mov 0x28(%rbx),%r12
5824(4): mov 0x20(%rbx),%r15
5828(4): mov 0x18(%rbx),%r14
582c(5): mov %r10,0x18(%rsp)
5831(5): mov %r9,0x10(%rsp)
5836(4): mov %rax,(%rsp)
583a(5): mov %r8,0x8(%rsp)
583f(3): mov (%rbx),%rbx
5842(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5850(3): xor %r9d,%r9d
5853(4): cmp $0x0,(%r8)
5857(2): jz 0x14(%rip)
5859(7): nop 0x0(%rax)
5860(4): add $0x1,%r9
5864(5): cmp $0x0,0x0(%r8,%r9,8)
5869(2): jnz 0xfffffff7(%rip)
586b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5870(4): sub $0x68,%rsp
5874(3): mov %r8,%r10
5877(3): xor %r9d,%r9d
587a(9): mov $0x28,%rax
5883(5): mov %rax,0x58(%rsp)
5888(2): xor %eax,%eax
588a(3): mov %rsp,%r8
588d(3): nop (%rax)
5890(3): mov (%r10),%eax
5893(3): cmp $0x2f,%eax
5896(2): jnbe 0x44(%rip)
5898(3): mov %eax,%r11d
589b(4): add 0x10(%r10),%r11
589f(3): add $0x8,%eax
58a2(3): mov %eax,(%r10)
58a5(3): mov (%r11),%rax
58a8(3): test %rax,%rax
58ab(4): mov %rax,0x0(%r8,%r9,8)
58af(2): jz 0xc(%rip)
58b1(4): add $0x1,%r9
58b5(4): cmp $0xa,%r9
58b9(2): jnz 0xffffffd7(%rip)
58bb(5): call 0xfffffb75(%rip)
58c0(5): mov 0x58(%rsp),%rax
58c5(9): xor $0x28,%rax
58ce(2): jnz 0x7(%rip)
58d0(4): add $0x68,%rsp
58d4(1): ret near (%rsp)
58d5(5): call 0xffffbf5b(%rip)
58da(4): mov 0x8(%r10),%r11
58de(4): lea 0x8(%r11),%rax
58e2(4): mov %rax,0x8(%r10)
58e6(2): jmp 0xffffffbf(%rip)

"version_etc" :
58f0(1): push %rbp
58f1(1): push %rbx
58f2(6): mov $0x20,%r10d
58f8(3): xor %r11d,%r11d
58fb(7): sub $0xb8,%rsp
5902(9): mov $0x28,%rax
590b(5): mov %rax,0x78(%rsp)
5910(2): xor %eax,%eax
5912(8): lea 0xd0(%rsp),%rax
591a(8): mov %r8,0xa0(%rsp)
5922(8): lea 0xd0(%rsp),%rbx
592a(5): lea 0x20(%rsp),%r8
592f(8): mov %r9,0xa8(%rsp)
5937(8): mov $0x20,0x8(%rsp)
593f(5): mov %rax,0x10(%rsp)
5944(8): lea 0x80(%rsp),%rax
594c(3): xor %r9d,%r9d
594f(5): mov %rax,0x18(%rsp)
5954(3): mov %rax,%rbp
5957(9): nop 0x0(%rax,%rax,1)
5960(4): cmp $0x2f,%r10d
5964(2): jnbe 0x58(%rip)
5966(3): mov %r10d,%eax
5969(6): mov $0x1,%r11d
596f(4): add $0x8,%r10d
5973(3): add %rbp,%rax
5976(3): mov (%rax),%rax
5979(3): test %rax,%rax
597c(4): mov %rax,0x0(%r8,%r9,8)
5980(2): jz 0xc(%rip)
5982(4): add $0x1,%r9
5986(4): cmp $0xa,%r9
598a(2): jnz 0xffffffd6(%rip)
598c(3): test %r11b,%r11b
598f(2): jnz 0x26(%rip)
5991(5): call 0xfffffa9f(%rip)
5996(5): mov 0x78(%rsp),%rax
599b(9): xor $0x28,%rax
59a4(2): jnz 0xc(%rip)
59a6(7): add $0xb8,%rsp
59ad(1): pop %rbx
59ae(1): pop %rbp
59af(1): ret near (%rsp)
59b0(5): call 0xffffbe80(%rip)
59b5(5): mov %r10d,0x8(%rsp)
59ba(2): jmp 0xffffffd7(%rip)
59bc(3): mov %rbx,%rax
59bf(4): add $0x8,%rbx
59c3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
59d0(1): push %rbx
59d1(7): lea 0x1dca(%rip),%rsi
59d8(5): mov $0x5,%edx
59dd(2): xor %edi,%edi
59df(5): call 0xffffbe21(%rip)
59e4(7): lea 0x1dcc(%rip),%rdx
59eb(3): mov %rax,%rsi
59ee(5): mov $0x1,%edi
59f3(2): xor %eax,%eax
59f5(5): call 0xffffbffb(%rip)
59fa(7): lea 0x1dcc(%rip),%rsi
5a01(5): mov $0x5,%edx
5a06(2): xor %edi,%edi
5a08(5): call 0xffffbdf8(%rip)
5a0d(7): lea 0x15a4(%rip),%rcx
5a14(7): lea 0xdb1(%rip),%rdx
5a1b(3): mov %rax,%rsi
5a1e(5): mov $0x1,%edi
5a23(2): xor %eax,%eax
5a25(5): call 0xffffbfcb(%rip)
5a2a(7): mov 0x204677(%rip),%rbx
5a31(7): lea 0x1fc8(%rip),%rsi
5a38(2): xor %edi,%edi
5a3a(5): mov $0x5,%edx
5a3f(5): call 0xffffbdc1(%rip)
5a44(3): mov %rbx,%rsi
5a47(3): mov %rax,%rdi
5a4a(1): pop %rbx
5a4b(5): jmp 0xffffbec5(%rip)

"xmalloc" :
5a50(1): push %rbx
5a51(3): mov %rdi,%rbx
5a54(5): call 0xffffbf1c(%rip)
5a59(3): test %rax,%rax
5a5c(2): jnz 0x7(%rip)
5a5e(3): test %rbx,%rbx
5a61(2): jnz 0x4(%rip)
5a63(1): pop %rbx
5a64(1): ret near (%rsp)
5a65(5): call 0x23b(%rip)

"xnmalloc" :
5a70(3): mov %rdi,%rax
5a73(3): mul %rax,%rsi,%rdx
5a76(3): mov %rax,%rdi
5a79(3): seto %al
5a7c(3): test %rdi,%rdi
5a7f(2): js 0xc(%rip)
5a81(3): movzx %al,%eax
5a84(3): test %rax,%rax
5a87(2): jnz 0x4(%rip)
5a89(2): jmp 0xffffffc7(%rip)
5a8b(4): sub $0x8,%rsp
5a8f(5): call 0x211(%rip)

"xrealloc" :
5ab0(3): test %rsi,%rsi
5ab3(1): push %rbx
5ab4(3): mov %rsi,%rbx
5ab7(2): jnz 0x7(%rip)
5ab9(3): test %rdi,%rdi
5abc(2): jnz 0x1c(%rip)
5abe(3): mov %rbx,%rsi
5ac1(5): call 0xffffbf0f(%rip)
5ac6(3): test %rax,%rax
5ac9(2): jnz 0x7(%rip)
5acb(3): test %rbx,%rbx
5ace(2): jnz 0x13(%rip)
5ad0(1): pop %rbx
5ad1(1): ret near (%rsp)
5ad2(6): nop 0x0(%rax,%rax,1)
5ad8(5): call 0xffffbc98(%rip)
5add(2): xor %eax,%eax
5adf(1): pop %rbx
5ae0(1): ret near (%rsp)
5ae1(5): call 0x1bf(%rip)

"xnrealloc" :
5af0(3): mov %rsi,%rax
5af3(3): mul %rax,%rdx,%rdx
5af6(3): mov %rax,%rsi
5af9(3): seto %al
5afc(3): test %rsi,%rsi
5aff(2): js 0xc(%rip)
5b01(3): movzx %al,%eax
5b04(3): test %rax,%rax
5b07(2): jnz 0x4(%rip)
5b09(2): jmp 0xffffffa7(%rip)
5b0b(4): sub $0x8,%rsp
5b0f(5): call 0x191(%rip)

"x2nrealloc" :
5b20(3): test %rdi,%rdi
5b23(3): mov %rdx,%r9
5b26(3): mov (%rsi),%rcx
5b29(2): jz 0x37(%rip)
5b2b(2): xor %edx,%edx
5b2d(a): mov $0x6148914691236517204,%rax
5b37(3): div %r9,%rax
5b3a(3): cmp %rcx,%rax
5b3d(2): jbe 0x3e(%rip)
5b3f(3): mov %rcx,%rax
5b42(3): shr $0x1,%rax
5b45(5): lea 0x1(%rax,%rcx,1),%rcx
5b4a(3): mov %rcx,(%rsi)
5b4d(4): imul %r9,%rcx
5b51(3): mov %rcx,%rsi
5b54(5): jmp 0xffffff5c(%rip)
5b59(7): nop 0x0(%rax)
5b60(3): test %rcx,%rcx
5b63(2): jz 0x25(%rip)
5b65(3): mov %rcx,%rax
5b68(3): mul %rax,%r9,%rdx
5b6b(3): seto %dl
5b6e(3): test %rax,%rax
5b71(3): movzx %dl,%edx
5b74(2): js 0x7(%rip)
5b76(3): test %rdx,%rdx
5b79(2): jz 0xffffffd1(%rip)
5b7b(4): sub $0x8,%rsp
5b7f(5): call 0x121(%rip)
5b84(4): nop 0x0(%rax)
5b88(2): xor %edx,%edx
5b8a(5): mov $0x80,%eax
5b8f(3): xor %r8d,%r8d
5b92(3): div %r9,%rax
5b95(3): test %rax,%rax
5b98(4): setz %r8b
5b9c(4): lea 0x0(%r8,%rax,1),%rcx
5ba0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5bb0(3): test %rdi,%rdi
5bb3(3): mov (%rsi),%rax
5bb6(2): jz 0x2a(%rip)
5bb8(a): mov $0x6148914691236517203,%rdx
5bc2(3): cmp %rdx,%rax
5bc5(2): jnbe 0x2c(%rip)
5bc7(3): mov %rax,%rdx
5bca(3): shr $0x1,%rdx
5bcd(5): lea 0x1(%rdx,%rax,1),%rax
5bd2(3): mov %rax,(%rsi)
5bd5(3): mov %rax,%rsi
5bd8(5): jmp 0xfffffed8(%rip)
5bdd(3): nop (%rax)
5be0(3): test %rax,%rax
5be3(5): mov $0x80,%edx
5be8(4): cmove %rdx,%rax
5bec(3): test %rax,%rax
5bef(2): jns 0xffffffe3(%rip)
5bf1(4): sub $0x8,%rsp
5bf5(5): call 0xab(%rip)

"xzalloc" :
5c00(1): push %rbx
5c01(3): mov %rdi,%rbx
5c04(5): call 0xfffffe4c(%rip)
5c09(3): mov %rbx,%rdx
5c0c(2): xor %esi,%esi
5c0e(3): mov %rax,%rdi
5c11(1): pop %rbx
5c12(5): jmp 0xffffbcae(%rip)

"xcalloc" :
5c20(3): mov %rdi,%rax
5c23(4): sub $0x8,%rsp
5c27(3): mul %rax,%rsi,%rdx
5c2a(3): seto %dl
5c2d(3): test %rax,%rax
5c30(2): js 0x19(%rip)
5c32(3): movzx %dl,%edx
5c35(3): test %rdx,%rdx
5c38(2): jnz 0x11(%rip)
5c3a(5): call 0xffffbce6(%rip)
5c3f(3): test %rax,%rax
5c42(2): jz 0x7(%rip)
5c44(4): add $0x8,%rsp
5c48(1): ret near (%rsp)
5c49(5): call 0x57(%rip)

"xmemdup" :
5c50(1): push %rbp
5c51(1): push %rbx
5c52(3): mov %rdi,%rbp
5c55(3): mov %rsi,%rdi
5c58(3): mov %rsi,%rbx
5c5b(4): sub $0x8,%rsp
5c5f(5): call 0xfffffdf1(%rip)
5c64(4): add $0x8,%rsp
5c68(3): mov %rbx,%rdx
5c6b(3): mov %rbp,%rsi
5c6e(1): pop %rbx
5c6f(1): pop %rbp
5c70(3): mov %rax,%rdi
5c73(5): jmp 0xffffbcdd(%rip)

"xstrdup" :
5c80(1): push %rbx
5c81(3): mov %rdi,%rbx
5c84(5): call 0xffffbb9c(%rip)
5c89(3): mov %rbx,%rdi
5c8c(4): lea 0x1(%rax),%rsi
5c90(1): pop %rbx
5c91(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5ca0(7): lea 0x1e08(%rip),%rsi
5ca7(4): sub $0x8,%rsp
5cab(5): mov $0x5,%edx
5cb0(2): xor %edi,%edi
5cb2(5): call 0xffffbb4e(%rip)
5cb7(6): mov 0x204363(%rip),%edi
5cbd(7): lea 0x1534(%rip),%rdx
5cc4(3): mov %rax,%rcx
5cc7(2): xor %esi,%esi
5cc9(2): xor %eax,%eax
5ccb(5): call 0xffffbd35(%rip)
5cd0(5): call 0xffffbab0(%rip)

"collate_error" :
5ce0(2): push %r14
5ce2(2): push %r13
5ce4(3): mov %edi,%r14d
5ce7(2): push %r12
5ce9(1): push %rbp
5cea(3): mov %rdx,%r12
5ced(1): push %rbx
5cee(3): mov %rsi,%rbx
5cf1(7): lea 0x1dc8(%rip),%rsi
5cf8(5): mov $0x5,%edx
5cfd(2): xor %edi,%edi
5cff(3): mov %r8,%r13
5d02(3): mov %rcx,%rbp
5d05(5): call 0xffffbafb(%rip)
5d0a(3): mov %r14d,%esi
5d0d(3): mov %rax,%rdx
5d10(2): xor %edi,%edi
5d12(2): xor %eax,%eax
5d14(5): call 0xffffbcec(%rip)
5d19(7): lea 0x1dc0(%rip),%rsi
5d20(5): mov $0x5,%edx
5d25(2): xor %edi,%edi
5d27(5): call 0xffffbad9(%rip)
5d2c(2): xor %esi,%esi
5d2e(3): mov %rax,%rdx
5d31(2): xor %edi,%edi
5d33(2): xor %eax,%eax
5d35(5): call 0xffffbccb(%rip)
5d3a(3): mov %r13,%rcx
5d3d(3): mov %rbp,%rdx
5d40(5): mov $0x8,%esi
5d45(5): mov $0x1,%edi
5d4a(5): call 0xfffff366(%rip)
5d4f(3): mov %r12,%rcx
5d52(3): mov %rbx,%rdx
5d55(5): mov $0x8,%esi
5d5a(2): xor %edi,%edi
5d5c(3): mov %rax,%rbp
5d5f(5): call 0xfffff351(%rip)
5d64(7): lea 0x1da5(%rip),%rsi
5d6b(3): mov %rax,%rbx
5d6e(5): mov $0x5,%edx
5d73(2): xor %edi,%edi
5d75(5): call 0xffffba8b(%rip)
5d7a(3): mov %rbp,%r8
5d7d(3): mov %rbx,%rcx
5d80(6): mov 0x20429a(%rip),%edi
5d86(1): pop %rbx
5d87(1): pop %rbp
5d88(2): pop %r12
5d8a(2): pop %r13
5d8c(2): pop %r14
5d8e(3): mov %rax,%rdx
5d91(2): xor %esi,%esi
5d93(2): xor %eax,%eax
5d95(5): jmp 0xffffbc6b(%rip)

"xmemcoll" :
5da0(2): push %r14
5da2(2): push %r13
5da4(3): mov %rcx,%r13
5da7(2): push %r12
5da9(1): push %rbp
5daa(3): mov %rdx,%r12
5dad(1): push %rbx
5dae(3): mov %rsi,%rbp
5db1(3): mov %rdi,%rbx
5db4(5): call 0x7dc(%rip)
5db9(3): mov %eax,%r14d
5dbc(5): call 0xffffb9d4(%rip)
5dc1(2): mov (%rax),%edi
5dc3(2): test %edi,%edi
5dc5(2): jz 0x13(%rip)
5dc7(3): mov %r13,%r8
5dca(3): mov %r12,%rcx
5dcd(3): mov %rbp,%rdx
5dd0(3): mov %rbx,%rsi
5dd3(5): call 0xffffff0d(%rip)
5dd8(1): pop %rbx
5dd9(3): mov %r14d,%eax
5ddc(1): pop %rbp
5ddd(2): pop %r12
5ddf(2): pop %r13
5de1(2): pop %r14
5de3(1): ret near (%rsp)

"xmemcoll0" :
5df0(2): push %r14
5df2(2): push %r13
5df4(3): mov %rcx,%r14
5df7(2): push %r12
5df9(1): push %rbp
5dfa(3): mov %rdx,%r12
5dfd(1): push %rbx
5dfe(3): mov %rdi,%rbp
5e01(3): mov %rsi,%rbx
5e04(5): call 0x83c(%rip)
5e09(3): mov %eax,%r13d
5e0c(5): call 0xffffb984(%rip)
5e11(2): mov (%rax),%edi
5e13(2): test %edi,%edi
5e15(2): jz 0x15(%rip)
5e17(4): lea 0xffffffff(%rbx),%rdx
5e1b(4): lea 0xffffffff(%r14),%r8
5e1f(3): mov %r12,%rcx
5e22(3): mov %rbp,%rsi
5e25(5): call 0xfffffebb(%rip)
5e2a(1): pop %rbx
5e2b(3): mov %r13d,%eax
5e2e(1): pop %rbp
5e2f(2): pop %r12
5e31(2): pop %r13
5e33(2): pop %r14
5e35(1): ret near (%rsp)

"xstrtoul" :
5e40(2): push %r15
5e42(2): push %r14
5e44(2): push %r13
5e46(2): push %r12
5e48(1): push %rbp
5e49(1): push %rbx
5e4a(4): sub $0x28,%rsp
5e4e(9): mov $0x28,%rax
5e57(5): mov %rax,0x18(%rsp)
5e5c(2): xor %eax,%eax
5e5e(3): cmp $0x24,%edx
5e61(6): jnbe 0x364(%rip)
5e67(5): lea 0x10(%rsp),%rax
5e6c(3): mov %rsi,%r15
5e6f(3): test %rsi,%rsi
5e72(3): mov %rdi,%rbp
5e75(4): mov %edx,0x8(%rsp)
5e79(3): mov %rcx,%r14
5e7c(3): mov %r8,%r13
5e7f(4): cmove %rax,%r15
5e83(5): call 0xffffb90d(%rip)
5e88(6): mov $0x0,(%rax)
5e8e(3): mov %rax,%r12
5e91(4): movzx 0x0(%rbp),%ebx
5e95(5): call 0xffffbc0b(%rip)
5e9a(4): mov 0x8(%rsp),%edx
5e9e(3): mov (%rax),%rsi
5ea1(3): mov %rbp,%rax
5ea4(2): jmp 0x13(%rip)
5ea6(a): nop 0x0(%rax,%rax,1)
5eb0(4): add $0x1,%rax
5eb4(3): movzx (%rax),%ebx
5eb7(3): movzx %bl,%ecx
5eba(5): test $0x20,0x1(%rsi,%rcx,2)
5ebf(2): jnz 0xfffffff1(%rip)
5ec1(3): cmp $0x2d,%bl
5ec4(2): jz 0x54(%rip)
5ec6(3): mov %r15,%rsi
5ec9(3): mov %rbp,%rdi
5ecc(5): call 0xffffbb64(%rip)
5ed1(3): mov (%r15),%rcx
5ed4(3): mov %rax,%rbx
5ed7(3): cmp %rbp,%rcx
5eda(2): jz 0x2e(%rip)
5edc(4): mov (%r12),%eax
5ee0(2): test %eax,%eax
5ee2(2): jz 0x66(%rip)
5ee4(3): cmp $0x22,%eax
5ee7(5): mov $0x1,%ebp
5eec(2): jnz 0x2c(%rip)
5eee(3): test %r13,%r13
5ef1(2): jz 0xb(%rip)
5ef3(4): movzx (%rcx),%r12d
5ef7(3): test %r12b,%r12b
5efa(2): jnz 0x7d(%rip)
5efc(3): mov %rbx,(%r14)
5eff(2): jmp 0x1e(%rip)
5f01(7): nop 0x0(%rax)
5f08(3): test %r13,%r13
5f0b(5): mov %rcx,0x8(%rsp)
5f10(2): jnz 0x40(%rip)
5f12(6): nop 0x0(%rax,%rax,1)
5f18(5): mov $0x4,%ebp
5f1d(5): mov 0x18(%rsp),%rdi
5f22(9): xor $0x28,%rdi
5f2b(2): mov %ebp,%eax
5f2d(6): jnz 0x293(%rip)
5f33(4): add $0x28,%rsp
5f37(1): pop %rbx
5f38(1): pop %rbp
5f39(2): pop %r12
5f3b(2): pop %r13
5f3d(2): pop %r14
5f3f(2): pop %r15
5f41(1): ret near (%rsp)
5f42(6): nop 0x0(%rax,%rax,1)
5f48(2): xor %ebp,%ebp
5f4a(2): jmp 0xffffffa4(%rip)
5f4c(4): nop 0x0(%rax)
5f50(5): movzx 0x0(%rbp),%r12d
5f55(3): test %r12b,%r12b
5f58(2): jz 0xffffffc0(%rip)
5f5a(4): movsx %r12b,%esi
5f5e(3): mov %r13,%rdi
5f61(2): xor %ebp,%ebp
5f63(5): call 0xffffb90d(%rip)
5f68(3): test %rax,%rax
5f6b(5): mov $0x1,%ebx
5f70(5): mov 0x8(%rsp),%rcx
5f75(2): jz 0xffffffa3(%rip)
5f77(4): movsx %r12b,%esi
5f7b(3): mov %r13,%rdi
5f7e(5): mov %rcx,0x8(%rsp)
5f83(5): call 0xffffb8ed(%rip)
5f88(3): test %rax,%rax
5f8b(5): mov 0x8(%rsp),%rcx
5f90(6): jz 0xcc(%rip)
5f96(5): lea 0xffffffbb(%r12),%eax
5f9b(2): cmp $0x2f,%al
5f9d(2): jnbe 0x53(%rip)
5f9f(a): mov $0x142129060940101,%rdx
5fa9(4): bt %rax,%rdx
5fad(2): jnb 0x43(%rip)
5faf(5): mov $0x30,%esi
5fb4(3): mov %r13,%rdi
5fb7(5): mov %rcx,0x8(%rsp)
5fbc(5): call 0xffffb8b4(%rip)
5fc1(3): test %rax,%rax
5fc4(5): mov 0x8(%rsp),%rcx
5fc9(2): jz 0x27(%rip)
5fcb(4): movzx 0x1(%rcx),%eax
5fcf(2): cmp $0x44,%al
5fd1(2): jz 0xe(%rip)
5fd3(2): cmp $0x69,%al
5fd5(6): jz 0x1d3(%rip)
5fdb(2): cmp $0x42,%al
5fdd(2): jnz 0x13(%rip)
5fdf(5): mov $0x2,%edi
5fe4(5): mov $0x3e8,%esi
5fe9(2): jmp 0x11(%rip)
5feb(5): nop 0x0(%rax,%rax,1)
5ff0(5): mov $0x1,%edi
5ff5(5): mov $0x400,%esi
5ffa(4): sub $0x42,%r12d
5ffe(4): cmp $0x35,%r12b
6002(2): jnbe 0x5a(%rip)
6004(7): lea 0x1b75(%rip),%rdx
600b(4): movzx %r12b,%r12d
600f(4): movsxd 0x0(%rdx,%r12,4),%rax
6013(3): add %rdx,%rax
6016(2): jmp %rax
6018(3): mov %rbx,%rax
601b(3): mul %rax,%rsi,%rdx
601e(6): jo 0x1f3(%rip)
6024(3): xor %r8d,%r8d
6027(3): mul %rax,%rsi,%rdx
602a(6): jo 0x1d8(%rip)
6030(3): mov %rax,%rbx
6033(3): or %r8d,%ebp
6036(a): nop 0x0(%rax,%rax,1)
6040(3): movsxd %edi,%rdi
6043(2): mov %ebp,%eax
6045(3): add %rdi,%rcx
6048(3): or $0x2,%eax
604b(3): mov %rcx,(%r15)
604e(3): cmp $0x0,(%rcx)
6051(3): mov %rbx,(%r14)
6054(3): cmovne %eax,%ebp
6057(5): jmp 0xfffffec6(%rip)
605c(3): mov %rbx,(%r14)
605f(3): or $0x2,%ebp
6062(5): jmp 0xfffffebb(%rip)
6067(5): mov $0x2,%edx
606c(3): mov %rdx,%rax
606f(3): mul %rax,%rbx,%rdx
6072(6): jo 0x9c(%rip)
6078(3): add %rbx,%rbx
607b(2): jmp 0xffffffc5(%rip)
607d(5): mov $0x200,%edx
6082(3): mov %rdx,%rax
6085(3): mul %rax,%rbx,%rdx
6088(6): jo 0x86(%rip)
608e(4): shl/sal $0x9,%rbx
6092(2): jmp 0xffffffae(%rip)
6094(6): mov $0x7,%r8d
609a(3): xor %r9d,%r9d
609d(3): nop (%rax)
60a0(3): mov %rbx,%rax
60a3(3): mul %rax,%rsi,%rdx
60a6(3): mov %rax,%rbx
60a9(6): jo 0x195(%rip)
60af(4): sub $0x1,%r8d
60b3(2): jnz 0xffffffed(%rip)
60b5(3): or %r9d,%ebp
60b8(2): jmp 0xffffff88(%rip)
60ba(6): mov $0x8,%r8d
60c0(3): xor %r9d,%r9d
60c3(5): nop 0x0(%rax,%rax,1)
60c8(3): mov %rbx,%rax
60cb(3): mul %rax,%rsi,%rdx
60ce(3): mov %rax,%rbx
60d1(6): jo 0x14f(%rip)
60d7(4): sub $0x1,%r8d
60db(2): jnz 0xffffffed(%rip)
60dd(2): jmp 0xffffffd8(%rip)
60df(6): mov $0x4,%r8d
60e5(3): xor %r9d,%r9d
60e8(3): mov %rbx,%rax
60eb(3): mul %rax,%rsi,%rdx
60ee(3): mov %rax,%rbx
60f1(6): jo 0x102(%rip)
60f7(4): sub $0x1,%r8d
60fb(2): jnz 0xffffffed(%rip)
60fd(2): jmp 0xffffffb8(%rip)
60ff(3): mov %rbx,%rax
6102(3): mul %rax,%rsi,%rdx
6105(3): mov %rax,%rbx
6108(6): jno 0xffffff38(%rip)
610e(5): mov $0x1,%ebp
6113(4): or $0xffffffff,%rbx
6117(5): jmp 0xffffff29(%rip)
611c(4): nop 0x0(%rax)
6120(6): mov $0x5,%r8d
6126(3): xor %r9d,%r9d
6129(3): mov %rbx,%rax
612c(3): mul %rax,%rsi,%rdx
612f(3): mov %rax,%rbx
6132(6): jo 0xfd(%rip)
6138(4): sub $0x1,%r8d
613c(2): jnz 0xffffffed(%rip)
613e(5): jmp 0xffffff77(%rip)
6143(6): mov $0x6,%r8d
6149(3): xor %r9d,%r9d
614c(3): mov %rbx,%rax
614f(3): mul %rax,%rsi,%rdx
6152(3): mov %rax,%rbx
6155(6): jo 0x8f(%rip)
615b(4): sub $0x1,%r8d
615f(2): jnz 0xffffffed(%rip)
6161(5): jmp 0xffffff54(%rip)
6166(5): mov $0x400,%edx
616b(3): mov %rdx,%rax
616e(3): mul %rax,%rbx,%rdx
6171(2): jo 0xffffff9d(%rip)
6173(4): shl/sal $0xa,%rbx
6177(5): jmp 0xfffffec9(%rip)
617c(3): mov %rbx,%rax
617f(3): mul %rax,%rsi,%rdx
6182(6): jo 0xcb(%rip)
6188(3): xor %r8d,%r8d
618b(3): mul %rax,%rsi,%rdx
618e(6): jno 0xfffffe99(%rip)
6194(6): mov $0x1,%r8d
619a(4): or $0xffffffff,%rax
619e(5): jmp 0xfffffe89(%rip)
61a3(5): nop 0x0(%rax,%rax,1)
61a8(2): xor %edi,%edi
61aa(4): cmp $0x42,0x2(%rcx)
61ae(5): mov $0x400,%esi
61b3(4): setz %dil
61b7(4): lea 0x1(%rdi,%rdi,1),%edi
61bb(5): jmp 0xfffffe3f(%rip)
61c0(5): call 0xffffb670(%rip)
61c5(7): lea 0x1a8c(%rip),%rcx
61cc(7): lea 0x1965(%rip),%rsi
61d3(7): lea 0x197e(%rip),%rdi
61da(5): mov $0x54,%edx
61df(5): call 0xffffb6d1(%rip)
61e4(6): mov $0x1,%r9d
61ea(4): or $0xffffffff,%rbx
61ee(5): jmp 0xffffff6d(%rip)
61f3(6): mov $0x1,%r9d
61f9(4): or $0xffffffff,%rbx
61fd(5): jmp 0xfffffefa(%rip)
6202(6): mov $0x1,%r8d
6208(4): or $0xffffffff,%rbx
620c(5): jmp 0xfffffe27(%rip)
6211(4): or $0xffffffff,%rax
6215(6): mov $0x1,%r8d
621b(5): jmp 0xfffffe0c(%rip)
6220(6): mov $0x1,%r9d
6226(4): or $0xffffffff,%rbx
622a(5): jmp 0xfffffead(%rip)
622f(6): mov $0x1,%r9d
6235(4): or $0xffffffff,%rbx
6239(5): jmp 0xfffffeff(%rip)
623e(6): mov $0x1,%r9d
6244(4): or $0xffffffff,%rbx
6248(5): jmp 0xfffffe67(%rip)
624d(6): mov $0x1,%r8d
6253(4): or $0xffffffff,%rax
6257(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
6260(2): push %r12
6262(1): push %rbp
6263(1): push %rbx
6264(3): mov %rdi,%rbx
6267(5): call 0xffffb6f9(%rip)
626c(2): test %eax,%eax
626e(3): mov %rbx,%rdi
6271(2): js 0x56(%rip)
6273(5): call 0xffffb73d(%rip)
6278(2): test %eax,%eax
627a(2): jnz 0x2e(%rip)
627c(3): mov %rbx,%rdi
627f(5): call 0x61(%rip)
6284(2): test %eax,%eax
6286(2): jz 0x3e(%rip)
6288(5): call 0xffffb508(%rip)
628d(3): mov (%rax),%r12d
6290(3): mov %rbx,%rdi
6293(3): mov %rax,%rbp
6296(5): call 0xffffb54a(%rip)
629b(3): test %r12d,%r12d
629e(2): jnz 0x32(%rip)
62a0(1): pop %rbx
62a1(1): pop %rbp
62a2(2): pop %r12
62a4(1): ret near (%rsp)
62a5(3): nop (%rax)
62a8(3): mov %rbx,%rdi
62ab(5): call 0xffffb6b5(%rip)
62b0(2): xor %esi,%esi
62b2(5): mov $0x1,%edx
62b7(2): mov %eax,%edi
62b9(5): call 0xffffb5e7(%rip)
62be(4): cmp $0xffffffff,%rax
62c2(2): jnz 0xffffffba(%rip)
62c4(3): mov %rbx,%rdi
62c7(1): pop %rbx
62c8(1): pop %rbp
62c9(2): pop %r12
62cb(5): jmp 0xffffb515(%rip)
62d0(4): mov %r12d,0x0(%rbp)
62d4(5): mov $0xffffffff,%eax
62d9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
62e0(3): test %rdi,%rdi
62e3(1): push %rbx
62e4(3): mov %rdi,%rbx
62e7(2): jz 0x13(%rip)
62e9(5): call 0xffffb6c7(%rip)
62ee(2): test %eax,%eax
62f0(2): jz 0xa(%rip)
62f2(6): test $0x100,(%rbx)
62f8(2): jnz 0x10(%rip)
62fa(3): mov %rbx,%rdi
62fd(1): pop %rbx
62fe(5): jmp 0xffffb682(%rip)
6303(5): nop 0x0(%rax,%rax,1)
6308(3): mov %rbx,%rdi
630b(5): mov $0x1,%edx
6310(2): xor %esi,%esi
6312(5): call 0xe(%rip)
6317(3): mov %rbx,%rdi
631a(1): pop %rbx
631b(5): jmp 0xffffb665(%rip)

"rpl_fseeko" :
6320(4): mov 0x8(%rdi),%rax
6324(4): cmp %rax,0x10(%rdi)
6328(2): jz 0x8(%rip)
632a(5): jmp 0xffffb6f6(%rip)
632f(1): nop 
6330(4): mov 0x20(%rdi),%rax
6334(4): cmp %rax,0x28(%rdi)
6338(2): jnz 0xfffffff2(%rip)
633a(5): cmp $0x0,0x48(%rdi)
633f(2): jnz 0xffffffeb(%rip)
6341(2): push %r12
6343(1): push %rbp
6344(3): mov %edx,%r12d
6347(1): push %rbx
6348(3): mov %rsi,%rbp
634b(3): mov %rdi,%rbx
634e(5): call 0xffffb612(%rip)
6353(3): mov %r12d,%edx
6356(3): mov %rbp,%rsi
6359(2): mov %eax,%edi
635b(5): call 0xffffb545(%rip)
6360(4): cmp $0xffffffff,%rax
6364(2): jz 0xe(%rip)
6366(3): and $0xef,(%rbx)
6369(7): mov %rax,0x90(%rbx)
6370(2): xor %eax,%eax
6372(1): pop %rbx
6373(1): pop %rbp
6374(2): pop %r12
6376(1): ret near (%rsp)

"rpl_mbrtowc" :
6380(2): push %r13
6382(2): push %r12
6384(3): mov %rsi,%r13
6387(1): push %rbp
6388(1): push %rbx
6389(3): mov %rdi,%rbx
638c(3): mov %rdx,%r12
638f(4): sub $0x18,%rsp
6393(9): mov $0x28,%rax
639c(5): mov %rax,0x8(%rsp)
63a1(2): xor %eax,%eax
63a3(5): lea 0x4(%rsp),%rax
63a8(3): test %rdi,%rdi
63ab(4): cmove %rax,%rbx
63af(3): mov %rbx,%rdi
63b2(5): call 0xffffb49e(%rip)
63b7(4): cmp $0xfffffffd,%rax
63bb(3): mov %rax,%rbp
63be(2): jbe 0x22(%rip)
63c0(3): test %r12,%r12
63c3(2): jz 0x1d(%rip)
63c5(2): xor %edi,%edi
63c7(5): call 0xffffd0b9(%rip)
63cc(2): test %al,%al
63ce(2): jnz 0x12(%rip)
63d0(5): movzx 0x0(%r13),%eax
63d5(5): mov $0x1,%ebp
63da(2): mov %eax,(%rbx)
63dc(4): nop 0x0(%rax)
63e0(5): mov 0x8(%rsp),%rdx
63e5(9): xor $0x28,%rdx
63ee(3): mov %rbp,%rax
63f1(2): jnz 0xd(%rip)
63f3(4): add $0x18,%rsp
63f7(1): pop %rbx
63f8(1): pop %rbp
63f9(2): pop %r12
63fb(2): pop %r13
63fd(1): ret near (%rsp)
63fe(5): call 0xffffb432(%rip)

"close_stream" :
6410(2): push %r12
6412(1): push %rbp
6413(3): mov %rdi,%rbp
6416(1): push %rbx
6417(5): call 0xffffb3a9(%rip)
641c(3): mov 0x0(%rbp),%ebx
641f(3): mov %rbp,%rdi
6422(3): mov %rax,%r12
6425(5): call 0xfffffe3b(%rip)
642a(3): and $0x20,%ebx
642d(2): test %ebx,%ebx
642f(2): jnz 0x19(%rip)
6431(2): test %eax,%eax
6433(2): jz 0xc(%rip)
6435(3): test %r12,%r12
6438(5): mov $0xffffffff,%eax
643d(2): jz 0x3b(%rip)
643f(1): pop %rbx
6440(1): pop %rbp
6441(2): pop %r12
6443(1): ret near (%rsp)
6444(4): nop 0x0(%rax)
6448(2): test %eax,%eax
644a(2): jnz 0x1e(%rip)
644c(5): call 0xffffb344(%rip)
6451(6): mov $0x0,(%rax)
6457(5): mov $0xffffffff,%eax
645c(1): pop %rbx
645d(1): pop %rbp
645e(2): pop %r12
6460(1): ret near (%rsp)
6461(7): nop 0x0(%rax)
6468(1): pop %rbx
6469(5): mov $0xffffffff,%eax
646e(1): pop %rbp
646f(2): pop %r12
6471(1): ret near (%rsp)
6472(6): nop 0x0(%rax,%rax,1)
6478(5): call 0xffffb318(%rip)
647d(3): cmp $0x9,(%rax)
6480(1): pop %rbx
6481(1): pop %rbp
6482(2): pop %r12
6484(3): setnz %al
6487(3): movzx %al,%eax
648a(2): neg %eax
648c(1): ret near (%rsp)

"locale_charset" :
6490(4): sub $0x8,%rsp
6494(5): mov $0xe,%edi
6499(5): call 0xffffb4f7(%rip)
649e(3): test %rax,%rax
64a1(2): jz 0x1f(%rip)
64a3(3): cmp $0x0,(%rax)
64a6(7): lea 0x17b4(%rip),%rdx
64ad(4): cmove %rdx,%rax
64b1(4): add $0x8,%rsp
64b5(1): ret near (%rsp)
64b6(a): nop 0x0(%rax,%rax,1)
64c0(7): lea 0x179a(%rip),%rax
64c7(4): add $0x8,%rsp
64cb(1): ret near (%rsp)

"strcoll_loop" :
64d0(2): push %r15
64d2(2): push %r14
64d4(3): mov %rcx,%r14
64d7(2): push %r13
64d9(2): push %r12
64db(3): mov %rsi,%r13
64de(1): push %rbp
64df(1): push %rbx
64e0(3): mov %rdi,%r12
64e3(3): mov %rdx,%rbp
64e6(4): sub $0x8,%rsp
64ea(5): call 0xffffb2a6(%rip)
64ef(3): mov %rax,%r15
64f2(2): jmp 0x31(%rip)
64f4(4): nop 0x0(%rax)
64f8(3): mov %r12,%rdi
64fb(5): call 0xffffb325(%rip)
6500(3): mov %rbp,%rdi
6503(4): lea 0x1(%rax),%rbx
6507(5): call 0xffffb319(%rip)
650c(4): add $0x1,%rax
6510(3): add %rbx,%r12
6513(3): add %rax,%rbp
6516(3): sub %rax,%r14
6519(3): sub %rbx,%r13
651c(2): jz 0x34(%rip)
651e(3): test %r14,%r14
6521(2): jz 0x4f(%rip)
6523(7): mov $0x0,(%r15)
652a(3): mov %rbp,%rsi
652d(3): mov %r12,%rdi
6530(5): call 0xffffb470(%rip)
6535(2): test %eax,%eax
6537(2): jz 0xffffffc1(%rip)
6539(4): add $0x8,%rsp
653d(1): pop %rbx
653e(1): pop %rbp
653f(2): pop %r12
6541(2): pop %r13
6543(2): pop %r14
6545(2): pop %r15
6547(1): ret near (%rsp)
6548(8): nop 0x0(%rax,%rax,1)
6550(2): xor %eax,%eax
6552(3): test %r14,%r14
6555(3): setnz %al
6558(4): add $0x8,%rsp
655c(1): pop %rbx
655d(2): neg %eax
655f(1): pop %rbp
6560(2): pop %r12
6562(2): pop %r13
6564(2): pop %r14
6566(2): pop %r15
6568(1): ret near (%rsp)
6569(7): nop 0x0(%rax)
6570(4): add $0x8,%rsp
6574(5): mov $0x1,%eax
6579(1): pop %rbx
657a(1): pop %rbp
657b(2): pop %r12
657d(2): pop %r13
657f(2): pop %r14
6581(2): pop %r15
6583(1): ret near (%rsp)

"memcoll" :
6590(2): push %r15
6592(2): push %r14
6594(3): mov %rdx,%r15
6597(2): push %r13
6599(2): push %r12
659b(3): mov %rdi,%r14
659e(1): push %rbp
659f(1): push %rbx
65a0(3): mov %rcx,%rbp
65a3(3): mov %rsi,%rbx
65a6(4): sub $0x18,%rsp
65aa(3): cmp %rcx,%rsi
65ad(2): jnz 0x15(%rip)
65af(3): mov %rsi,%rdx
65b2(3): mov %r15,%rsi
65b5(5): call 0xffffb34b(%rip)
65ba(2): test %eax,%eax
65bc(4): mov %eax,0x8(%rsp)
65c0(2): jz 0x68(%rip)
65c2(4): lea 0x0(%r14,%rbx,1),%r13
65c6(4): lea 0x0(%r15,%rbp,1),%r12
65ca(4): lea 0x1(%rbp),%rcx
65ce(4): lea 0x1(%rbx),%rsi
65d2(3): mov %r15,%rdx
65d5(3): mov %r14,%rdi
65d8(5): movzx 0x0(%r13),%r9d
65dd(5): movzx (%r12),%r8d
65e2(5): mov $0x0,0x0(%r13)
65e7(5): mov $0x0,(%r12)
65ec(5): mov %r9b,0xf(%rsp)
65f1(5): mov %r8b,0x8(%rsp)
65f6(5): call 0xfffffeda(%rip)
65fb(6): movzx 0xf(%rsp),%r9d
6601(6): movzx 0x8(%rsp),%r8d
6607(2): mov %eax,%edx
6609(4): mov %r9b,0x0(%r13)
660d(4): mov %r8b,(%r12)
6611(4): add $0x18,%rsp
6615(2): mov %edx,%eax
6617(1): pop %rbx
6618(1): pop %rbp
6619(2): pop %r12
661b(2): pop %r13
661d(2): pop %r14
661f(2): pop %r15
6621(1): ret near (%rsp)
6622(6): nop 0x0(%rax,%rax,1)
6628(5): call 0xffffb168(%rip)
662d(4): mov 0x8(%rsp),%edx
6631(6): mov $0x0,(%rax)
6637(2): jmp 0xffffffda(%rip)

"memcoll0" :
6640(2): push %r12
6642(1): push %rbp
6643(3): mov %rdx,%r12
6646(1): push %rbx
6647(3): mov %rdi,%rbp
664a(3): mov %rsi,%rbx
664d(4): sub $0x10,%rsp
6651(3): cmp %rcx,%rsi
6654(2): jnz 0x1b(%rip)
6656(3): mov %rsi,%rdx
6659(3): mov %r12,%rsi
665c(5): mov %rcx,0x8(%rsp)
6661(5): call 0xffffb29f(%rip)
6666(2): test %eax,%eax
6668(5): mov 0x8(%rsp),%rcx
666d(2): jz 0x1b(%rip)
666f(4): add $0x10,%rsp
6673(3): mov %r12,%rdx
6676(3): mov %rbx,%rsi
6679(3): mov %rbp,%rdi
667c(1): pop %rbx
667d(1): pop %rbp
667e(2): pop %r12
6680(5): jmp 0xfffffe50(%rip)
6685(3): nop (%rax)
6688(5): call 0xffffb108(%rip)
668d(6): mov $0x0,(%rax)
6693(4): add $0x10,%rsp
6697(2): xor %eax,%eax
6699(1): pop %rbx
669a(1): pop %rbp
669b(2): pop %r12
669d(1): ret near (%rsp)

"__libc_csu_init" :
66a0(2): push %r15
66a2(2): push %r14
66a4(3): mov %rdx,%r15
66a7(2): push %r13
66a9(2): push %r12
66ab(7): lea 0x2032fe(%rip),%r12
66b2(1): push %rbp
66b3(7): lea 0x2032fe(%rip),%rbp
66ba(1): push %rbx
66bb(3): mov %edi,%r13d
66be(3): mov %rsi,%r14
66c1(3): sub %r12,%rbp
66c4(4): sub $0x8,%rsp
66c8(4): sar $0x3,%rbp
66cc(5): call 0xffffb04c(%rip)
66d1(3): test %rbp,%rbp
66d4(2): jz 0x22(%rip)
66d6(2): xor %ebx,%ebx
66d8(8): nop 0x0(%rax,%rax,1)
66e0(3): mov %r15,%rdx
66e3(3): mov %r14,%rsi
66e6(3): mov %r13d,%edi
66e9(4): call 0x0(%r12,%rbx,8)
66ed(4): add $0x1,%rbx
66f1(3): cmp %rbx,%rbp
66f4(2): jnz 0xffffffec(%rip)
66f6(4): add $0x8,%rsp
66fa(1): pop %rbx
66fb(1): pop %rbp
66fc(2): pop %r12
66fe(2): pop %r13
6700(2): pop %r14
6702(2): pop %r15
6704(1): ret near (%rsp)

"atexit" :
6720(7): mov 0x2038e1(%rip),%rdx
6727(2): xor %esi,%esi
6729(5): jmp 0xffffb317(%rip)

"_fini" :
6730(4): sub $0x8,%rsp
6734(4): add $0x8,%rsp
6738(1): ret near (%rsp)

