
"free@plt" :
14a0(6): jmp 0x20699a(%rip)
14a6(5): push $0x0

"abort@plt" :
14b0(6): jmp 0x206992(%rip)
14b6(5): push $0x1

"__errno_location@plt" :
14c0(6): jmp 0x20698a(%rip)
14c6(5): push $0x2

"strncmp@plt" :
14d0(6): jmp 0x206982(%rip)
14d6(5): push $0x3

"_exit@plt" :
14e0(6): jmp 0x20697a(%rip)
14e6(5): push $0x4

"strcpy@plt" :
14f0(6): jmp 0x206972(%rip)
14f6(5): push $0x5

"__fpending@plt" :
1500(6): jmp 0x20696a(%rip)
1506(5): push $0x6

"puts@plt" :
1510(6): jmp 0x206962(%rip)
1516(5): push $0x7

"textdomain@plt" :
1520(6): jmp 0x20695a(%rip)
1526(5): push $0x8

"__strtol_internal@plt" :
1530(6): jmp 0x206952(%rip)
1536(5): push $0x9

"fclose@plt" :
1540(6): jmp 0x20694a(%rip)
1546(5): push $0xa

"bindtextdomain@plt" :
1550(6): jmp 0x206942(%rip)
1556(5): push $0xb

"dcgettext@plt" :
1560(6): jmp 0x20693a(%rip)
1566(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
1570(6): jmp 0x206932(%rip)
1576(5): push $0xd

"strlen@plt" :
1580(6): jmp 0x20692a(%rip)
1586(5): push $0xe

"__stack_chk_fail@plt" :
1590(6): jmp 0x206922(%rip)
1596(5): push $0xf

"getopt_long@plt" :
15a0(6): jmp 0x20691a(%rip)
15a6(5): push $0x10

"mbrtowc@plt" :
15b0(6): jmp 0x206912(%rip)
15b6(5): push $0x11

"strchr@plt" :
15c0(6): jmp 0x20690a(%rip)
15c6(5): push $0x12

"strrchr@plt" :
15d0(6): jmp 0x206902(%rip)
15d6(5): push $0x13

"lseek@plt" :
15e0(6): jmp 0x2068fa(%rip)
15e6(5): push $0x14

"memset@plt" :
15f0(6): jmp 0x2068f2(%rip)
15f6(5): push $0x15

"memcmp@plt" :
1600(6): jmp 0x2068ea(%rip)
1606(5): push $0x16

"fputs_unlocked@plt" :
1610(6): jmp 0x2068e2(%rip)
1616(5): push $0x17

"calloc@plt" :
1620(6): jmp 0x2068da(%rip)
1626(5): push $0x18

"strcmp@plt" :
1630(6): jmp 0x2068d2(%rip)
1636(5): push $0x19

"strtol@plt" :
1640(6): jmp 0x2068ca(%rip)
1646(5): push $0x1a

"memcpy@plt" :
1650(6): jmp 0x2068c2(%rip)
1656(5): push $0x1b

"kill@plt" :
1660(6): jmp 0x2068ba(%rip)
1666(5): push $0x1c

"fileno@plt" :
1670(6): jmp 0x2068b2(%rip)
1676(5): push $0x1d

"malloc@plt" :
1680(6): jmp 0x2068aa(%rip)
1686(5): push $0x1e

"fflush@plt" :
1690(6): jmp 0x2068a2(%rip)
1696(5): push $0x1f

"nl_langinfo@plt" :
16a0(6): jmp 0x20689a(%rip)
16a6(5): push $0x20

"__freading@plt" :
16b0(6): jmp 0x206892(%rip)
16b6(5): push $0x21

"strsignal@plt" :
16c0(6): jmp 0x20688a(%rip)
16c6(5): push $0x22

"realloc@plt" :
16d0(6): jmp 0x206882(%rip)
16d6(5): push $0x23

"setlocale@plt" :
16e0(6): jmp 0x20687a(%rip)
16e6(5): push $0x24

"__printf_chk@plt" :
16f0(6): jmp 0x206872(%rip)
16f6(5): push $0x25

"error@plt" :
1700(6): jmp 0x20686a(%rip)
1706(5): push $0x26

"fseeko@plt" :
1710(6): jmp 0x206862(%rip)
1716(5): push $0x27

"__cxa_atexit@plt" :
1720(6): jmp 0x20685a(%rip)
1726(5): push $0x28

"__libc_current_sigrtmin@plt" :
1730(6): jmp 0x206852(%rip)
1736(5): push $0x29

"exit@plt" :
1740(6): jmp 0x20684a(%rip)
1746(5): push $0x2a

"fwrite@plt" :
1750(6): jmp 0x206842(%rip)
1756(5): push $0x2b

"__fprintf_chk@plt" :
1760(6): jmp 0x20683a(%rip)
1766(5): push $0x2c

"__libc_current_sigrtmax@plt" :
1770(6): jmp 0x206832(%rip)
1776(5): push $0x2d

"mbsinit@plt" :
1780(6): jmp 0x20682a(%rip)
1786(5): push $0x2e

"iswprint@plt" :
1790(6): jmp 0x206822(%rip)
1796(5): push $0x2f

"__ctype_b_loc@plt" :
17a0(6): jmp 0x20681a(%rip)
17a6(5): push $0x30

"__sprintf_chk@plt" :
17b0(6): jmp 0x206812(%rip)
17b6(5): push $0x31

".plt.got" :
17c0(6): jmp 0x20682a(%rip)
17c6(2): nop 

"_init" :
1470(4): sub $0x8,%rsp
1474(7): mov 0x206b65(%rip),%rax
147b(3): test %rax,%rax
147e(2): jz 0x4(%rip)
1480(2): call %rax
1482(4): add $0x8,%rsp
1486(1): ret near (%rsp)

"main" :
17d0(2): push %r15
17d2(2): push %r14
17d4(3): xor %r15d,%r15d
17d7(2): push %r13
17d9(2): push %r12
17db(3): mov %edi,%r12d
17de(1): push %rbp
17df(1): push %rbx
17e0(3): mov %rsi,%rbx
17e3(5): mov $0xffffffff,%ebp
17e8(3): xor %r13d,%r13d
17eb(4): sub $0x68,%rsp
17ef(3): mov (%rsi),%rdi
17f2(9): mov $0x28,%rax
17fb(5): mov %rax,0x58(%rsp)
1800(2): xor %eax,%eax
1802(5): lea 0x20(%rsp),%r14
1807(5): call 0xd59(%rip)
180c(7): lea 0x456e(%rip),%rsi
1813(5): mov $0x6,%edi
1818(5): call 0xfffffec8(%rip)
181d(7): lea 0x39aa(%rip),%rsi
1824(7): lea 0x3978(%rip),%rdi
182b(5): call 0xfffffd25(%rip)
1830(7): lea 0x396c(%rip),%rdi
1837(5): call 0xfffffce9(%rip)
183c(7): lea 0xc6d(%rip),%rdi
1843(5): call 0x38bd(%rip)
1848(8): nop 0x0(%rax,%rax,1)
1850(7): lea 0x2062c9(%rip),%rcx
1857(7): lea 0x3f02(%rip),%rdx
185e(3): xor %r8d,%r8d
1861(3): mov %rbx,%rsi
1864(3): mov %r12d,%edi
1867(5): call 0xfffffd39(%rip)
186c(3): cmp $0xff,%eax
186f(3): mov %eax,%r8d
1872(6): jz 0x15e(%rip)
1878(4): cmp $0x4c,%r8d
187c(2): jz 0x34(%rip)
187e(2): jle 0x52(%rip)
1880(4): cmp $0x6c,%r8d
1884(2): jz 0x32(%rip)
1886(6): jle 0x123(%rip)
188c(4): cmp $0x73,%r8d
1890(6): jz 0x98(%rip)
1896(4): cmp $0x74,%r8d
189a(2): jz 0x16(%rip)
189c(4): cmp $0x6e,%r8d
18a0(6): jz 0x88(%rip)
18a6(5): mov $0x1,%edi
18ab(5): call 0x615(%rip)
18b0(6): mov $0x1,%r15d
18b6(3): test %r13b,%r13b
18b9(6): jnz 0x487(%rip)
18bf(6): mov $0x1,%r13d
18c5(2): jmp 0xffffff8b(%rip)
18c7(9): nop 0x0(%rax,%rax,1)
18d0(4): cmp $0x39,%r8d
18d4(6): jnle 0xe8(%rip)
18da(4): cmp $0x30,%r8d
18de(2): jnl 0x72(%rip)
18e0(7): cmp $0xffffff7d,%r8d
18e7(6): jnz 0x40a(%rip)
18ed(7): mov 0x206954(%rip),%rdi
18f4(7): mov 0x206715(%rip),%rcx
18fb(7): lea 0x38f9(%rip),%r8
1902(7): lea 0x3896(%rip),%rdx
1909(7): lea 0x3814(%rip),%rsi
1910(3): xor %r9d,%r9d
1913(2): xor %eax,%eax
1915(5): call 0x2e3b(%rip)
191a(2): xor %edi,%edi
191c(5): call 0xfffffe24(%rip)
1921(7): nop 0x0(%rax)
1928(7): mov 0x206929(%rip),%rdi
192f(3): cmp $0xff,%ebp
1932(6): jnz 0x3d3(%rip)
1938(3): mov %r14,%rsi
193b(5): call 0x965(%rip)
1940(2): test %eax,%eax
1942(2): mov %eax,%ebp
1944(6): jns 0xffffff0c(%rip)
194a(5): jmp 0xffffff5c(%rip)
194f(1): nop 
1950(7): movsxd 0x2068f9(%rip),%rax
1957(3): cmp $0x2,%eax
195a(2): jnz 0x6d(%rip)
195c(7): mov 0x2068f5(%rip),%rcx
1963(5): lea 0xfffffff8(%rbx,%rax,8),%rsi
1968(3): mov (%rsi),%rdx
196b(3): test %rcx,%rcx
196e(2): jz 0x1c(%rip)
1970(4): lea 0x2(%rdx),%rax
1974(3): cmp %rax,%rcx
1977(6): jnz 0x3ef(%rip)
197d(4): lea 0x1(%rdx),%rdi
1981(7): mov %rdi,0x2068d0(%rip)
1988(2): jmp 0xffffffa7(%rip)
198a(3): mov %rdx,%rdi
198d(4): or $0xffffffff,%rcx
1991(2): xor %eax,%eax
1993(2): REPNZ scasb rdi(%es,10),%al
1995(3): not %rcx
1998(5): lea 0xffffffff(%rdx,%rcx,1),%rcx
199d(7): mov %rcx,0x2068b4(%rip)
19a4(3): mov (%rsi),%rdx
19a7(2): jmp 0xffffffc9(%rip)
19a9(4): cmp $0x5a,%r8d
19ad(6): jnle 0xfffffef9(%rip)
19b3(7): movsxd 0x206896(%rip),%rax
19ba(2): jmp 0xffffffa2(%rip)
19bc(4): cmp $0x41,%r8d
19c0(2): jnl 0xfffffff3(%rip)
19c2(5): jmp 0xfffffee4(%rip)
19c7(3): sub $0x1,%eax
19ca(6): mov %eax,0x206880(%rip)
19d0(3): cmp $0xff,%ebp
19d3(7): movsxd 0x206876(%rip),%rax
19da(6): jz 0x128(%rip)
19e0(3): test %r13b,%r13b
19e3(5): mov $0x5,%edx
19e8(7): lea 0x3d41(%rip),%rsi
19ef(6): jnz 0x35d(%rip)
19f5(3): cmp %r12d,%eax
19f8(5): mov $0x5,%edx
19fd(7): lea 0x3803(%rip),%rsi
1a04(6): jnl 0x348(%rip)
1a0a(4): lea 0x0(%rbx,%rax,8),%r13
1a0e(5): lea 0x18(%rsp),%r15
1a13(2): xor %ebx,%ebx
1a15(5): call 0xfffffaab(%rip)
1a1a(4): mov 0x0(%r13),%r12
1a1e(3): mov %rax,%r14
1a21(2): jmp 0x56(%rip)
1a23(5): mov 0x18(%rsp),%rdx
1a28(3): cmp %rdx,%r12
1a2b(2): jz 0xb(%rip)
1a2d(3): cmp $0x0,(%rdx)
1a30(6): jz 0x9d(%rip)
1a36(3): mov %r12,%rdi
1a39(5): call 0x2837(%rip)
1a3e(7): lea 0x37eb(%rip),%rsi
1a45(3): mov %rax,%rbx
1a48(5): mov $0x5,%edx
1a4d(2): xor %edi,%edi
1a4f(5): call 0xfffffb11(%rip)
1a54(3): mov %rbx,%rcx
1a57(3): mov %rax,%rdx
1a5a(2): xor %esi,%esi
1a5c(2): xor %edi,%edi
1a5e(2): xor %eax,%eax
1a60(5): mov $0x1,%ebx
1a65(5): call 0xfffffc9b(%rip)
1a6a(4): add $0x8,%r13
1a6e(4): mov 0x0(%r13),%r12
1a72(3): test %r12,%r12
1a75(2): jz 0x33(%rip)
1a77(2): xor %ecx,%ecx
1a79(7): mov $0x0,(%r14)
1a80(5): mov $0xa,%edx
1a85(3): mov %r15,%rsi
1a88(3): mov %r12,%rdi
1a8b(5): call 0xfffffaa5(%rip)
1a90(4): cmp $0x22,(%r14)
1a94(2): jz 0xffffffa2(%rip)
1a96(3): movsxd %eax,%rdx
1a99(3): cmp %rdx,%rax
1a9c(2): jnz 0xffffff9a(%rip)
1a9e(2): jmp 0xffffff85(%rip)
1aa0(2): xor %ebx,%ebx
1aa2(6): nop 0x0(%rax,%rax,1)
1aa8(5): mov 0x58(%rsp),%rsi
1aad(9): xor $0x28,%rsi
1ab6(2): mov %ebx,%eax
1ab8(6): jnz 0x283(%rip)
1abe(4): add $0x68,%rsp
1ac2(1): pop %rbx
1ac3(1): pop %rbp
1ac4(2): pop %r12
1ac6(2): pop %r13
1ac8(2): pop %r14
1aca(2): pop %r15
1acc(1): ret near (%rsp)
1acd(2): mov %ebp,%esi
1acf(2): mov %eax,%edi
1ad1(5): call 0xfffffb8f(%rip)
1ad6(2): test %eax,%eax
1ad8(2): jz 0xffffff92(%rip)
1ada(3): mov %r12,%rdi
1add(5): mov $0x1,%ebx
1ae2(5): call 0x278e(%rip)
1ae7(3): mov (%r14),%esi
1aea(7): lea 0x3d23(%rip),%rdx
1af1(3): mov %rax,%rcx
1af4(2): xor %edi,%edi
1af6(2): xor %eax,%eax
1af8(5): call 0xfffffc08(%rip)
1afd(5): jmp 0xffffff6d(%rip)
1b02(3): test %r13b,%r13b
1b05(6): jz 0x299(%rip)
1b0b(2): xor %ebp,%ebp
1b0d(3): cmp %eax,%r12d
1b10(2): jle 0x6(%rip)
1b12(4): lea 0x0(%rbx,%rax,8),%rbp
1b16(3): test %r15b,%r15b
1b19(6): jz 0xe2(%rip)
1b1f(5): lea 0x40(%rsp),%r12
1b24(3): xor %r13d,%r13d
1b27(5): mov $0x1,%ebx
1b2c(4): nop 0x0(%rax)
1b30(3): mov %r12,%rsi
1b33(2): mov %ebx,%edi
1b35(5): call 0x322b(%rip)
1b3a(2): test %eax,%eax
1b3c(2): jnz 0x47(%rip)
1b3e(3): mov %r12,%rdx
1b41(2): mov (%rdx),%ecx
1b43(4): add $0x4,%rdx
1b47(6): lea 0xfefefeff(%rcx),%eax
1b4d(2): not %ecx
1b4f(2): and %ecx,%eax
1b51(5): and $0x80808080,%eax
1b56(2): jz 0xffffffeb(%rip)
1b58(2): mov %eax,%ecx
1b5a(3): shr $0x10,%ecx
1b5d(5): test $0x8080,%eax
1b62(3): cmove %ecx,%eax
1b65(4): lea 0x2(%rdx),%rcx
1b69(2): mov %eax,%esi
1b6b(4): cmove %rcx,%rdx
1b6f(3): add %al,%sil
1b72(3): mov %r13d,%eax
1b75(4): sbb $0x3,%rdx
1b79(3): sub %r12,%rdx
1b7c(3): cmp %rax,%rdx
1b7f(4): cmovnbe %edx,%r13d
1b83(3): add $0x1,%ebx
1b86(3): cmp $0x41,%ebx
1b89(2): jnz 0xffffffa7(%rip)
1b8b(2): xor %ebx,%ebx
1b8d(3): test %rbp,%rbp
1b90(7): lea 0x3635(%rip),%r14
1b97(2): jnz 0x10(%rip)
1b99(5): jmp 0xf3(%rip)
1b9e(5): mov $0x1,%ebx
1ba3(4): add $0x8,%rbp
1ba7(4): mov 0x0(%rbp),%rdi
1bab(3): test %rdi,%rdi
1bae(6): jz 0xfffffefa(%rip)
1bb4(3): mov %r12,%rsi
1bb7(5): call 0x6e9(%rip)
1bbc(2): test %eax,%eax
1bbe(3): mov %eax,%r15d
1bc1(2): js 0xffffffdd(%rip)
1bc3(2): mov %eax,%edi
1bc5(5): call 0xfffffafb(%rip)
1bca(3): test %rax,%rax
1bcd(7): lea 0x364b(%rip),%rsi
1bd4(3): mov %r15d,%ecx
1bd7(4): cmove %r14,%rax
1bdb(4): sub $0x8,%rsp
1bdf(3): mov %r12,%r9
1be2(1): push %rax
1be3(3): mov %r13d,%r8d
1be6(5): mov $0x2,%edx
1beb(5): mov $0x1,%edi
1bf0(2): xor %eax,%eax
1bf2(5): call 0xfffffafe(%rip)
1bf7(1): pop %rcx
1bf8(1): pop %rsi
1bf9(2): jmp 0xffffffaa(%rip)
1bfb(2): xor %ebx,%ebx
1bfd(3): test %rbp,%rbp
1c00(5): lea 0x40(%rsp),%r12
1c05(2): jnz 0x1f(%rip)
1c07(2): jmp 0x54(%rip)
1c09(4): mov 0x0(%rbp),%rdx
1c0d(3): movsx (%rdx),%ecx
1c10(3): sub $0x30,%ecx
1c13(3): cmp $0x9,%ecx
1c16(2): jnbe 0x2e(%rip)
1c18(3): mov %r12,%rdi
1c1b(5): call 0xfffff8f5(%rip)
1c20(4): add $0x8,%rbp
1c24(4): mov 0x0(%rbp),%rdi
1c28(3): test %rdi,%rdi
1c2b(6): jz 0xfffffe7d(%rip)
1c31(3): mov %r12,%rsi
1c34(5): call 0x66c(%rip)
1c39(2): test %eax,%eax
1c3b(2): jns 0xffffffce(%rip)
1c3d(5): mov $0x1,%ebx
1c42(2): jmp 0xffffffde(%rip)
1c44(7): lea 0x35e1(%rip),%rsi
1c4b(2): mov %eax,%edx
1c4d(5): mov $0x1,%edi
1c52(2): xor %eax,%eax
1c54(5): call 0xfffffa9c(%rip)
1c59(2): jmp 0xffffffc7(%rip)
1c5b(5): mov $0x1,%ebx
1c60(2): jmp 0x14(%rip)
1c62(6): nop 0x0(%rax,%rax,1)
1c68(3): add $0x1,%ebx
1c6b(3): cmp $0x41,%ebx
1c6e(6): jz 0xfffffe32(%rip)
1c74(3): mov %r12,%rsi
1c77(2): mov %ebx,%edi
1c79(5): call 0x30e7(%rip)
1c7e(2): test %eax,%eax
1c80(2): jnz 0xffffffe8(%rip)
1c82(3): mov %r12,%rdi
1c85(5): call 0xfffff88b(%rip)
1c8a(2): jmp 0xffffffde(%rip)
1c8c(5): mov $0x1,%ebx
1c91(3): mov %r14,%rbp
1c94(2): jmp 0x18(%rip)
1c96(a): nop 0x0(%rax,%rax,1)
1ca0(3): add $0x1,%ebx
1ca3(3): cmp $0x41,%ebx
1ca6(6): jz 0xfffffdfa(%rip)
1cac(3): mov %r12,%rsi
1caf(2): mov %ebx,%edi
1cb1(5): call 0x30af(%rip)
1cb6(2): test %eax,%eax
1cb8(2): jnz 0xffffffe8(%rip)
1cba(2): mov %ebx,%edi
1cbc(5): call 0xfffffa04(%rip)
1cc1(3): test %rax,%rax
1cc4(7): lea 0x3554(%rip),%rsi
1ccb(5): mov $0x2,%edx
1cd0(4): cmove %rbp,%rax
1cd4(4): sub $0x8,%rsp
1cd8(3): mov %r12,%r9
1cdb(1): push %rax
1cdc(3): mov %r13d,%r8d
1cdf(2): mov %ebx,%ecx
1ce1(5): mov $0x1,%edi
1ce6(2): xor %eax,%eax
1ce8(5): call 0xfffffa08(%rip)
1ced(1): pop %rax
1cee(1): pop %rdx
1cef(2): jmp 0xffffffb1(%rip)
1cf1(7): cmp $0xffffff7e,%r8d
1cf8(6): jnz 0xfffffbae(%rip)
1cfe(2): xor %edi,%edi
1d00(5): call 0x1c0(%rip)
1d05(5): call 0x256b(%rip)
1d0a(7): lea 0x39d7(%rip),%rsi
1d11(3): mov %rax,%rbx
1d14(5): mov $0x5,%edx
1d19(2): xor %edi,%edi
1d1b(5): call 0xfffff845(%rip)
1d20(2): xor %edi,%edi
1d22(3): mov %rax,%rdx
1d25(3): mov %rbx,%rcx
1d28(2): xor %esi,%esi
1d2a(2): xor %eax,%eax
1d2c(5): call 0xfffff9d4(%rip)
1d31(5): mov $0x1,%edi
1d36(5): call 0x18a(%rip)
1d3b(5): call 0xfffff855(%rip)
1d40(7): lea 0x39c1(%rip),%rsi
1d47(5): mov $0x5,%edx
1d4c(2): xor %edi,%edi
1d4e(5): call 0xfffff812(%rip)
1d53(2): xor %esi,%esi
1d55(3): mov %rax,%rdx
1d58(2): xor %edi,%edi
1d5a(2): xor %eax,%eax
1d5c(5): call 0xfffff9a4(%rip)
1d61(5): jmp 0xfffffb45(%rip)
1d66(7): lea 0x3479(%rip),%rsi
1d6d(5): mov $0x5,%edx
1d72(2): xor %edi,%edi
1d74(5): mov %r8d,0xc(%rsp)
1d79(5): call 0xfffff7e7(%rip)
1d7e(5): mov 0xc(%rsp),%r8d
1d83(3): mov %rax,%rdx
1d86(2): xor %edi,%edi
1d88(2): xor %esi,%esi
1d8a(2): xor %eax,%eax
1d8c(3): mov %r8d,%ecx
1d8f(5): call 0xfffff971(%rip)
1d94(5): mov $0x1,%edi
1d99(5): call 0x127(%rip)
1d9e(5): mov $0xf,%ebp
1da3(5): jmp 0xfffffc52(%rip)

"_start" :
1db0(2): xor %ebp,%ebp
1db2(3): mov %rdx,%r9
1db5(1): pop %rsi
1db6(3): mov %rsp,%rdx
1db9(4): and $0xfffffff0,%rsp
1dbd(1): push %rax
1dbe(1): push %rsp
1dbf(7): lea 0x332a(%rip),%r8
1dc6(7): lea 0x32b3(%rip),%rcx
1dcd(7): lea 0xfffff9fc(%rip),%rdi
1dd4(6): call 0x2061fe(%rip)
1dda(1): hlt 

"deregister_tm_clones" :
1de0(7): lea 0x206441(%rip),%rdi
1de7(1): push %rbp
1de8(7): lea 0x206439(%rip),%rax
1def(3): cmp %rdi,%rax
1df2(3): mov %rsp,%rbp
1df5(2): jz 0x1b(%rip)
1df7(7): mov 0x2061d2(%rip),%rax
1dfe(3): test %rax,%rax
1e01(2): jz 0xf(%rip)
1e03(1): pop %rbp
1e04(2): jmp %rax
1e06(a): nop 0x0(%rax,%rax,1)
1e10(1): pop %rbp
1e11(1): ret near (%rsp)

"register_tm_clones" :
1e20(7): lea 0x206401(%rip),%rdi
1e27(7): lea 0x2063fa(%rip),%rsi
1e2e(1): push %rbp
1e2f(3): sub %rdi,%rsi
1e32(3): mov %rsp,%rbp
1e35(4): sar $0x3,%rsi
1e39(3): mov %rsi,%rax
1e3c(4): shr $0x3f,%rax
1e40(3): add %rax,%rsi
1e43(3): sar $0x1,%rsi
1e46(2): jz 0x1a(%rip)
1e48(7): mov 0x206199(%rip),%rax
1e4f(3): test %rax,%rax
1e52(2): jz 0xe(%rip)
1e54(1): pop %rbp
1e55(2): jmp %rax
1e57(9): nop 0x0(%rax,%rax,1)
1e60(1): pop %rbp
1e61(1): ret near (%rsp)

"__do_global_dtors_aux" :
1e70(7): cmp $0x0,0x206411(%rip)
1e77(2): jnz 0x31(%rip)
1e79(8): cmp $0x0,0x20616f(%rip)
1e81(1): push %rbp
1e82(3): mov %rsp,%rbp
1e85(2): jz 0xe(%rip)
1e87(7): mov 0x20617a(%rip),%rdi
1e8e(5): call 0xfffff932(%rip)
1e93(5): call 0xffffff4d(%rip)
1e98(7): mov $0x1,0x2063e9(%rip)
1e9f(1): pop %rbp
1ea0(1): ret near (%rsp)
1ea1(7): nop 0x0(%rax)
1ea8(2): REP ret near (%rsp)

"frame_dummy" :
1eb0(1): push %rbp
1eb1(3): mov %rsp,%rbp
1eb4(1): pop %rbp
1eb5(5): jmp 0xffffff6b(%rip)

"usage" :
1ec0(2): push %r13
1ec2(2): push %r12
1ec4(5): mov $0x5,%edx
1ec9(1): push %rbp
1eca(1): push %rbx
1ecb(2): mov %edi,%ebp
1ecd(7): sub $0x88,%rsp
1ed4(7): mov 0x2063c5(%rip),%rbx
1edb(9): mov $0x28,%rax
1ee4(5): mov %rax,0x78(%rsp)
1ee9(2): xor %eax,%eax
1eeb(2): test %edi,%edi
1eed(2): jz 0x30(%rip)
1eef(7): lea 0x336a(%rip),%rsi
1ef6(2): xor %edi,%edi
1ef8(5): call 0xfffff668(%rip)
1efd(7): mov 0x20637c(%rip),%rdi
1f04(3): mov %rax,%rdx
1f07(3): mov %rbx,%rcx
1f0a(5): mov $0x1,%esi
1f0f(2): xor %eax,%eax
1f11(5): call 0xfffff84f(%rip)
1f16(2): mov %ebp,%edi
1f18(5): call 0xfffff828(%rip)
1f1d(7): lea 0x3364(%rip),%rsi
1f24(2): xor %edi,%edi
1f26(5): call 0xfffff63a(%rip)
1f2b(3): mov %rbx,%rcx
1f2e(3): mov %rbx,%r8
1f31(3): mov %rbx,%rdx
1f34(3): mov %rax,%rsi
1f37(5): mov $0x1,%edi
1f3c(2): xor %eax,%eax
1f3e(5): call 0xfffff7b2(%rip)
1f43(7): mov 0x2062fe(%rip),%rbx
1f4a(7): lea 0x3397(%rip),%rsi
1f51(5): mov $0x5,%edx
1f56(2): xor %edi,%edi
1f58(5): call 0xfffff608(%rip)
1f5d(3): mov %rbx,%rsi
1f60(3): mov %rax,%rdi
1f63(5): call 0xfffff6ad(%rip)
1f68(7): mov 0x2062d9(%rip),%rbx
1f6f(7): lea 0x33a2(%rip),%rsi
1f76(5): mov $0x5,%edx
1f7b(2): xor %edi,%edi
1f7d(5): call 0xfffff5e3(%rip)
1f82(3): mov %rbx,%rsi
1f85(3): mov %rax,%rdi
1f88(5): call 0xfffff688(%rip)
1f8d(7): mov 0x2062b4(%rip),%rbx
1f94(7): lea 0x33cd(%rip),%rsi
1f9b(5): mov $0x5,%edx
1fa0(2): xor %edi,%edi
1fa2(5): call 0xfffff5be(%rip)
1fa7(3): mov %rbx,%rsi
1faa(3): mov %rax,%rdi
1fad(5): call 0xfffff663(%rip)
1fb2(7): mov 0x20628f(%rip),%rbx
1fb9(7): lea 0x3498(%rip),%rsi
1fc0(5): mov $0x5,%edx
1fc5(2): xor %edi,%edi
1fc7(5): call 0xfffff599(%rip)
1fcc(3): mov %rbx,%rsi
1fcf(3): mov %rax,%rdi
1fd2(5): call 0xfffff63e(%rip)
1fd7(7): mov 0x20626a(%rip),%rbx
1fde(7): lea 0x34a3(%rip),%rsi
1fe5(5): mov $0x5,%edx
1fea(2): xor %edi,%edi
1fec(5): call 0xfffff574(%rip)
1ff1(3): mov %rbx,%rsi
1ff4(3): mov %rax,%rdi
1ff7(5): call 0xfffff619(%rip)
1ffc(7): mov 0x206245(%rip),%rbx
2003(7): lea 0x34b6(%rip),%rsi
200a(5): mov $0x5,%edx
200f(2): xor %edi,%edi
2011(5): call 0xfffff54f(%rip)
2016(3): mov %rbx,%rsi
2019(3): mov %rax,%rdi
201c(7): lea 0x3101(%rip),%rbx
2023(5): call 0xfffff5ed(%rip)
2028(7): lea 0x3551(%rip),%rsi
202f(5): mov $0x5,%edx
2034(2): xor %edi,%edi
2036(5): call 0xfffff52a(%rip)
203b(7): lea 0x30e2(%rip),%rdx
2042(3): mov %rax,%rsi
2045(5): mov $0x1,%edi
204a(2): xor %eax,%eax
204c(5): call 0xfffff6a4(%rip)
2051(7): lea 0x30d1(%rip),%rax
2058(7): lea 0x310b(%rip),%rcx
205f(9): mov $0x0,0x60(%rsp)
2068(9): mov $0x0,0x68(%rsp)
2071(3): mov %rsp,%rdx
2074(4): mov %rax,(%rsp)
2078(7): lea 0x30ac(%rip),%rax
207f(5): mov %rcx,0x30(%rsp)
2084(7): lea 0x30e9(%rip),%rcx
208b(5): mov %rax,0x8(%rsp)
2090(7): lea 0x310c(%rip),%rax
2097(5): mov %rcx,0x40(%rsp)
209c(7): lea 0x30db(%rip),%rcx
20a3(5): mov %rax,0x10(%rsp)
20a8(7): lea 0x308c(%rip),%rax
20af(5): mov %rcx,0x50(%rsp)
20b4(5): mov %rax,0x18(%rsp)
20b9(7): lea 0x3091(%rip),%rax
20c0(5): mov %rax,0x20(%rsp)
20c5(7): lea 0x308f(%rip),%rax
20cc(5): mov %rax,0x28(%rsp)
20d1(5): mov %rax,0x38(%rsp)
20d6(5): mov %rax,0x48(%rsp)
20db(5): mov %rax,0x58(%rsp)
20e0(4): add $0x10,%rdx
20e4(3): mov (%rdx),%rdi
20e7(3): test %rdi,%rdi
20ea(2): jz 0x15(%rip)
20ec(5): mov $0x5,%ecx
20f1(3): mov %rbx,%rsi
20f4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
20f6(3): setnbe %al
20f9(2): sbb $0x0,%al
20fb(2): test %al,%al
20fd(2): jnz 0xffffffe3(%rip)
20ff(4): mov 0x8(%rdx),%r12
2103(2): xor %edi,%edi
2105(5): mov $0x5,%edx
210a(7): lea 0x3077(%rip),%rsi
2111(3): test %r12,%r12
2114(6): jz 0xc7(%rip)
211a(5): call 0xfffff446(%rip)
211f(7): lea 0x351a(%rip),%rcx
2126(7): lea 0x3072(%rip),%rdx
212d(3): mov %rax,%rsi
2130(5): mov $0x1,%edi
2135(2): xor %eax,%eax
2137(5): call 0xfffff5b9(%rip)
213c(2): xor %esi,%esi
213e(5): mov $0x5,%edi
2143(5): call 0xfffff59d(%rip)
2148(3): test %rax,%rax
214b(2): jz 0x1e(%rip)
214d(7): lea 0x3059(%rip),%rsi
2154(5): mov $0x3,%edx
2159(3): mov %rax,%rdi
215c(5): call 0xfffff374(%rip)
2161(2): test %eax,%eax
2163(6): jnz 0x10d(%rip)
2169(7): lea 0x3041(%rip),%rsi
2170(2): xor %edi,%edi
2172(5): mov $0x5,%edx
2177(5): call 0xfffff3e9(%rip)
217c(7): lea 0x2fa1(%rip),%rcx
2183(7): lea 0x34b6(%rip),%rdx
218a(3): mov %rax,%rsi
218d(5): mov $0x1,%edi
2192(2): xor %eax,%eax
2194(5): call 0xfffff55c(%rip)
2199(3): cmp %rbx,%r12
219c(7): lea 0x2fa2(%rip),%rcx
21a3(7): lea 0x3bd7(%rip),%rbx
21aa(4): cmove %rcx,%rbx
21ae(7): lea 0x34fb(%rip),%rsi
21b5(2): xor %edi,%edi
21b7(5): mov $0x5,%edx
21bc(5): call 0xfffff3a4(%rip)
21c1(3): mov %rbx,%rcx
21c4(3): mov %rax,%rsi
21c7(3): mov %r12,%rdx
21ca(5): mov $0x1,%edi
21cf(2): xor %eax,%eax
21d1(5): call 0xfffff51f(%rip)
21d6(5): jmp 0xfffffd40(%rip)
21db(5): call 0xfffff385(%rip)
21e0(7): lea 0x3459(%rip),%rcx
21e7(7): lea 0x2fb1(%rip),%rdx
21ee(3): mov %rax,%rsi
21f1(5): mov $0x1,%edi
21f6(2): xor %eax,%eax
21f8(5): call 0xfffff4f8(%rip)
21fd(2): xor %esi,%esi
21ff(5): mov $0x5,%edi
2204(5): call 0xfffff4dc(%rip)
2209(3): test %rax,%rax
220c(2): jz 0x1a(%rip)
220e(7): lea 0x2f98(%rip),%rsi
2215(5): mov $0x3,%edx
221a(3): mov %rax,%rdi
221d(5): call 0xfffff2b3(%rip)
2222(2): test %eax,%eax
2224(2): jnz 0x45(%rip)
2226(7): lea 0x2f84(%rip),%rsi
222d(5): mov $0x5,%edx
2232(2): xor %edi,%edi
2234(7): lea 0x2ee9(%rip),%r12
223b(7): lea 0x2f03(%rip),%rbx
2242(5): call 0xfffff31e(%rip)
2247(7): lea 0x2ed6(%rip),%rcx
224e(7): lea 0x33eb(%rip),%rdx
2255(3): mov %rax,%rsi
2258(5): mov $0x1,%edi
225d(2): xor %eax,%eax
225f(5): call 0xfffff491(%rip)
2264(5): jmp 0xffffff4a(%rip)
2269(7): lea 0x2eb4(%rip),%r12
2270(7): mov 0x205fd1(%rip),%r13
2277(7): lea 0x33ea(%rip),%rsi
227e(2): xor %edi,%edi
2280(5): mov $0x5,%edx
2285(5): call 0xfffff2db(%rip)
228a(3): mov %r13,%rsi
228d(3): mov %rax,%rdi
2290(5): call 0xfffff380(%rip)
2295(5): jmp 0xfffffed4(%rip)

"operand2sig" :
22a0(2): push %r15
22a2(2): push %r14
22a4(3): mov %rsi,%r14
22a7(2): push %r13
22a9(2): push %r12
22ab(1): push %rbp
22ac(1): push %rbx
22ad(3): mov %rdi,%rbp
22b0(4): sub $0x28,%rsp
22b4(9): mov $0x28,%rax
22bd(5): mov %rax,0x18(%rsp)
22c2(2): xor %eax,%eax
22c4(3): movsx (%rdi),%eax
22c7(3): sub $0x30,%eax
22ca(3): cmp $0x9,%eax
22cd(6): jnbe 0x93(%rip)
22d3(5): call 0xfffff1ed(%rip)
22d8(5): lea 0x10(%rsp),%rsi
22dd(5): mov $0xa,%edx
22e2(6): mov $0x0,(%rax)
22e8(3): mov %rbp,%rdi
22eb(3): mov %rax,%rbx
22ee(5): call 0xfffff352(%rip)
22f3(5): mov 0x10(%rsp),%rdx
22f8(3): cmp %rbp,%rdx
22fb(2): jz 0x1d(%rip)
22fd(3): cmp $0x0,(%rdx)
2300(2): jnz 0x18(%rip)
2302(2): mov (%rbx),%edx
2304(2): test %edx,%edx
2306(2): jnz 0x12(%rip)
2308(3): movsxd %eax,%rdx
230b(3): cmp %rax,%rdx
230e(6): jz 0x142(%rip)
2314(4): nop 0x0(%rax)
2318(8): mov $0xffffffff,0xc(%rsp)
2320(3): mov %rbp,%rdi
2323(5): call 0x1f4d(%rip)
2328(7): lea 0x34bd(%rip),%rsi
232f(3): mov %rax,%rbx
2332(5): mov $0x5,%edx
2337(2): xor %edi,%edi
2339(5): call 0xfffff227(%rip)
233e(3): mov %rbx,%rcx
2341(3): mov %rax,%rdx
2344(2): xor %esi,%esi
2346(2): xor %eax,%eax
2348(2): xor %edi,%edi
234a(5): call 0xfffff3b6(%rip)
234f(5): mov $0xffffffff,%eax
2354(5): jmp 0x8c(%rip)
2359(7): nop 0x0(%rax)
2360(5): call 0x2780(%rip)
2365(3): movzx (%rax),%ebx
2368(3): mov %rax,%r13
236b(2): test %bl,%bl
236d(2): jz 0x35(%rip)
236f(7): lea 0x345b(%rip),%r12
2376(3): mov %rax,%r15
2379(7): nop 0x0(%rax)
2380(3): movsx %bl,%esi
2383(3): mov %r12,%rdi
2386(5): call 0xfffff23a(%rip)
238b(3): test %rax,%rax
238e(2): jz 0x8(%rip)
2390(3): sub $0x20,%ebx
2393(3): mov %bl,(%r15)
2396(4): add $0x1,%r15
239a(4): movzx (%r15),%ebx
239e(2): test %bl,%bl
23a0(2): jnz 0xffffffe0(%rip)
23a2(5): lea 0xc(%rsp),%rbx
23a7(3): mov %r13,%rdi
23aa(3): mov %rbx,%rsi
23ad(5): call 0x2823(%rip)
23b2(2): test %eax,%eax
23b4(2): jnz 0x54(%rip)
23b6(4): mov 0xc(%rsp),%ebx
23ba(3): mov %r13,%rdi
23bd(5): call 0xfffff0e3(%rip)
23c2(2): test %ebx,%ebx
23c4(6): js 0xffffff5c(%rip)
23ca(3): mov %r14,%rsi
23cd(2): mov %ebx,%edi
23cf(5): call 0x2991(%rip)
23d4(2): test %eax,%eax
23d6(6): jnz 0xffffff4a(%rip)
23dc(4): mov 0xc(%rsp),%eax
23e0(5): mov 0x18(%rsp),%rcx
23e5(9): xor $0x28,%rcx
23ee(6): jnz 0x8e(%rip)
23f4(4): add $0x28,%rsp
23f8(1): pop %rbx
23f9(1): pop %rbp
23fa(2): pop %r12
23fc(2): pop %r13
23fe(2): pop %r14
2400(2): pop %r15
2402(1): ret near (%rsp)
2403(5): nop 0x0(%rax,%rax,1)
2408(5): cmp $0x53,0x0(%r13)
240d(2): jz 0x1b(%rip)
240f(3): mov %r13,%rdi
2412(8): mov $0xffffffff,0xc(%rsp)
241a(5): call 0xfffff086(%rip)
241f(5): jmp 0xffffff01(%rip)
2424(4): nop 0x0(%rax)
2428(5): cmp $0x49,0x1(%r13)
242d(2): jnz 0xffffffe2(%rip)
242f(5): cmp $0x47,0x2(%r13)
2434(2): jnz 0xffffffdb(%rip)
2436(4): lea 0x3(%r13),%rdi
243a(3): mov %rbx,%rsi
243d(5): call 0x2793(%rip)
2442(2): test %eax,%eax
2444(2): jnz 0xffffffcb(%rip)
2446(5): jmp 0xffffff70(%rip)
244b(5): nop 0x0(%rax,%rax,1)
2450(3): cmp $0xff,%edx
2453(2): jz 0x20(%rip)
2455(6): cmp $0xff,%edx
245b(5): mov $0x7f,%eax
2460(5): mov $0xff,%ebx
2465(3): cmovnge %eax,%ebx
2468(2): and %edx,%ebx
246a(4): mov %ebx,0xc(%rsp)
246e(5): jmp 0xffffff5c(%rip)
2473(4): mov %edx,0xc(%rsp)
2477(5): jmp 0xfffffea9(%rip)
247c(5): call 0xfffff114(%rip)

"close_stdout_set_file_name" :
2490(7): mov %rdi,0x205e01(%rip)
2497(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
24a0(7): mov %dil,0x205de9(%rip)
24a7(1): ret near (%rsp)

"close_stdout" :
24b0(1): push %rbp
24b1(1): push %rbx
24b2(4): sub $0x8,%rsp
24b6(7): mov 0x205d8b(%rip),%rdi
24bd(5): call 0x2983(%rip)
24c2(2): test %eax,%eax
24c4(2): jz 0x18(%rip)
24c6(5): call 0xffffeffa(%rip)
24cb(7): cmp $0x0,0x205dbe(%rip)
24d2(3): mov %rax,%rbx
24d5(2): jz 0x1e(%rip)
24d7(3): cmp $0x20,(%rax)
24da(2): jnz 0x19(%rip)
24dc(7): mov 0x205d9d(%rip),%rdi
24e3(5): call 0x295d(%rip)
24e8(2): test %eax,%eax
24ea(2): jnz 0x48(%rip)
24ec(4): add $0x8,%rsp
24f0(1): pop %rbx
24f1(1): pop %rbp
24f2(1): ret near (%rsp)
24f3(7): lea 0x330a(%rip),%rsi
24fa(2): xor %edi,%edi
24fc(5): mov $0x5,%edx
2501(5): call 0xfffff05f(%rip)
2506(7): mov 0x205d8b(%rip),%rdi
250d(3): mov %rax,%rbp
2510(3): test %rdi,%rdi
2513(2): jz 0x2a(%rip)
2515(5): call 0x1b5b(%rip)
251a(2): mov (%rbx),%esi
251c(7): lea 0x32ed(%rip),%rdx
2523(3): mov %rax,%rcx
2526(3): mov %rbp,%r8
2529(2): xor %edi,%edi
252b(2): xor %eax,%eax
252d(5): call 0xfffff1d3(%rip)
2532(6): mov 0x205ae0(%rip),%edi
2538(5): call 0xffffefa8(%rip)
253d(2): mov (%rbx),%esi
253f(7): lea 0x32ce(%rip),%rdx
2546(3): mov %rax,%rcx
2549(2): xor %edi,%edi
254b(2): xor %eax,%eax
254d(5): call 0xfffff1b3(%rip)
2552(2): jmp 0xffffffe0(%rip)

"set_program_name" :
2560(3): test %rdi,%rdi
2563(1): push %rbx
2564(2): jz 0x79(%rip)
2566(5): mov $0x2f,%esi
256b(3): mov %rdi,%rbx
256e(5): call 0xfffff062(%rip)
2573(3): test %rax,%rax
2576(2): jz 0x57(%rip)
2578(4): lea 0x1(%rax),%r8
257c(3): mov %r8,%rdx
257f(3): sub %rbx,%rdx
2582(4): cmp $0x6,%rdx
2586(2): jle 0x47(%rip)
2588(4): lea 0xfffffffa(%rax),%rsi
258c(7): lea 0x32bd(%rip),%rdi
2593(5): mov $0x7,%ecx
2598(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
259a(3): setnbe %dl
259d(3): sbb $0x0,%dl
25a0(2): test %dl,%dl
25a2(2): jnz 0x2b(%rip)
25a4(7): lea 0x32ad(%rip),%rdi
25ab(5): mov $0x3,%ecx
25b0(3): mov %r8,%rsi
25b3(3): mov %r8,%rbx
25b6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
25b8(3): setnbe %dl
25bb(3): sbb $0x0,%dl
25be(2): test %dl,%dl
25c0(2): jnz 0xd(%rip)
25c2(4): lea 0x4(%rax),%rbx
25c6(7): mov %rbx,0x205c73(%rip)
25cd(7): mov %rbx,0x205ccc(%rip)
25d4(7): mov %rbx,0x205c85(%rip)
25db(1): pop %rbx
25dc(1): ret near (%rsp)
25dd(7): mov 0x205c9c(%rip),%rcx
25e4(7): lea 0x322d(%rip),%rdi
25eb(5): mov $0x37,%edx
25f0(5): mov $0x1,%esi
25f5(5): call 0xfffff15b(%rip)
25fa(5): call 0xffffeeb6(%rip)

"gettext_quote.part.1" :
2600(1): push %rbp
2601(1): push %rbx
2602(3): mov %rdi,%rbp
2605(2): mov %esi,%ebx
2607(4): sub $0x8,%rsp
260b(5): call 0x2915(%rip)
2610(3): movzx (%rax),%edx
2613(3): and $0xdf,%edx
2616(3): cmp $0x55,%dl
2619(2): jz 0x77(%rip)
261b(3): cmp $0x47,%dl
261e(2): jz 0x22(%rip)
2620(7): lea 0x3244(%rip),%rax
2627(7): lea 0x323f(%rip),%rdx
262e(3): cmp $0x9,%ebx
2631(4): cmovne %rdx,%rax
2635(4): add $0x8,%rsp
2639(1): pop %rbx
263a(1): pop %rbp
263b(1): ret near (%rsp)
263c(4): nop 0x0(%rax)
2640(4): movzx 0x1(%rax),%edx
2644(3): and $0xdf,%edx
2647(3): cmp $0x42,%dl
264a(2): jnz 0xffffffd6(%rip)
264c(4): cmp $0x31,0x2(%rax)
2650(2): jnz 0xffffffd0(%rip)
2652(4): cmp $0x38,0x3(%rax)
2656(2): jnz 0xffffffca(%rip)
2658(4): cmp $0x30,0x4(%rax)
265c(2): jnz 0xffffffc4(%rip)
265e(4): cmp $0x33,0x5(%rax)
2662(2): jnz 0xffffffbe(%rip)
2664(4): cmp $0x30,0x6(%rax)
2668(2): jnz 0xffffffb8(%rip)
266a(4): cmp $0x0,0x7(%rax)
266e(2): jnz 0xffffffb2(%rip)
2670(4): cmp $0x60,0x0(%rbp)
2674(7): lea 0x31e9(%rip),%rax
267b(7): lea 0x31e6(%rip),%rdx
2682(4): cmovne %rdx,%rax
2686(4): add $0x8,%rsp
268a(1): pop %rbx
268b(1): pop %rbp
268c(1): ret near (%rsp)
268d(3): nop (%rax)
2690(4): movzx 0x1(%rax),%edx
2694(3): and $0xdf,%edx
2697(3): cmp $0x54,%dl
269a(2): jnz 0xffffff86(%rip)
269c(4): movzx 0x2(%rax),%edx
26a0(3): and $0xdf,%edx
26a3(3): cmp $0x46,%dl
26a6(6): jnz 0xffffff7a(%rip)
26ac(4): cmp $0x2d,0x3(%rax)
26b0(6): jnz 0xffffff70(%rip)
26b6(4): cmp $0x38,0x4(%rax)
26ba(6): jnz 0xffffff66(%rip)
26c0(4): cmp $0x0,0x5(%rax)
26c4(6): jnz 0xffffff5c(%rip)
26ca(4): cmp $0x60,0x0(%rbp)
26ce(7): lea 0x3187(%rip),%rax
26d5(7): lea 0x3184(%rip),%rdx
26dc(4): cmovne %rdx,%rax
26e0(4): add $0x8,%rsp
26e4(1): pop %rbx
26e5(1): pop %rbp
26e6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
26f0(2): push %r15
26f2(2): push %r14
26f4(3): mov %r8d,%r15d
26f7(2): push %r13
26f9(2): push %r12
26fb(3): mov %rdi,%r14
26fe(1): push %rbp
26ff(1): push %rbx
2700(3): mov %r9d,%ebx
2703(3): mov %rsi,%r13
2706(3): mov %rcx,%rbp
2709(3): and $0x2,%ebx
270c(7): sub $0xb8,%rsp
2713(8): mov 0xf0(%rsp),%rax
271b(5): mov %rdx,0x10(%rsp)
2720(5): mov %r8d,0x8(%rsp)
2725(5): mov %r9d,0x78(%rsp)
272a(5): mov %rax,0x20(%rsp)
272f(8): mov 0xf8(%rsp),%rax
2737(5): mov %rax,0x68(%rsp)
273c(8): mov 0x100(%rsp),%rax
2744(5): mov %rax,0x60(%rsp)
2749(9): mov $0x28,%rax
2752(8): mov %rax,0xa8(%rsp)
275a(2): xor %eax,%eax
275c(5): call 0xffffee14(%rip)
2761(4): cmp $0xa,%r15d
2765(5): mov %rax,0x58(%rsp)
276a(6): jnbe 0x11b5(%rip)
2770(7): lea 0x3149(%rip),%rcx
2777(3): mov %r15d,%edx
277a(4): movsxd 0x0(%rcx,%rdx,4),%rax
277e(3): add %rcx,%rax
2781(2): jmp %rax
2783(5): mov $0x1,0xe(%rsp)
2788(5): mov $0x0,0x7c(%rsp)
278d(3): xor %r12d,%r12d
2790(9): mov $0x0,0x50(%rsp)
2799(5): mov $0x1,0xf(%rsp)
279e(5): mov $0x0,0xd(%rsp)
27a3(7): lea 0x30c3(%rip),%rax
27aa(9): mov $0x1,0x18(%rsp)
27b3(3): xor %r15d,%r15d
27b6(8): mov $0x2,0x8(%rsp)
27be(5): mov %rax,0x48(%rsp)
27c3(3): xor %r11d,%r11d
27c6(3): mov %rbp,%rax
27c9(3): mov %r12d,%r8d
27cc(3): mov %r11,%rbp
27cf(3): mov %rax,%r11
27d2(6): nop 0x0(%rax,%rax,1)
27d8(3): cmp %rbp,%r11
27db(4): setnz %r12b
27df(4): cmp $0xffffffff,%r11
27e3(2): jnz 0xf(%rip)
27e5(5): mov 0x10(%rsp),%rax
27ea(4): cmp $0x0,0x0(%rax,%rbp,1)
27ee(4): setnz %r12b
27f2(3): test %r12b,%r12b
27f5(6): jz 0x65b(%rip)
27fb(5): cmp $0x2,0x8(%rsp)
2800(5): mov 0x10(%rsp),%rdi
2805(4): lea 0x0(%rdi,%rbp,1),%r9
2809(3): setnz %al
280c(4): and 0xd(%rsp),%al
2810(3): mov %eax,%r10d
2813(6): jz 0xad(%rip)
2819(5): mov 0x18(%rsp),%rax
281e(3): test %rax,%rax
2821(6): jz 0x42f(%rip)
2827(4): cmp $0xffffffff,%r11
282b(5): lea 0x0(%rbp,%rax,1),%rbx
2830(2): jnz 0x30(%rip)
2832(4): cmp $0x1,%rax
2836(2): jbe 0x2a(%rip)
2838(5): mov %r8b,0x38(%rsp)
283d(5): mov %r10b,0x30(%rsp)
2842(5): mov %r9,0x28(%rsp)
2847(5): call 0xffffed39(%rip)
284c(6): movzx 0x38(%rsp),%r8d
2852(6): movzx 0x30(%rsp),%r10d
2858(3): mov %rax,%r11
285b(5): mov 0x28(%rsp),%r9
2860(3): cmp %r11,%rbx
2863(5): mov %r10b,0x28(%rsp)
2868(6): jnbe 0x5b8(%rip)
286e(5): mov 0x18(%rsp),%rdx
2873(5): mov 0x48(%rsp),%rsi
2878(3): mov %r9,%rdi
287b(5): mov %r11,0x40(%rsp)
2880(5): mov %r8b,0x38(%rsp)
2885(5): mov %r9,0x30(%rsp)
288a(5): call 0xffffed76(%rip)
288f(2): test %eax,%eax
2891(5): mov 0x30(%rsp),%r9
2896(6): movzx 0x38(%rsp),%r8d
289c(5): mov 0x40(%rsp),%r11
28a1(6): jnz 0x57f(%rip)
28a7(5): cmp $0x0,0xf(%rsp)
28ac(6): movzx 0x28(%rsp),%r10d
28b2(6): jnz 0xf83(%rip)
28b8(8): nop 0x0(%rax,%rax,1)
28c0(4): movzx (%r9),%ebx
28c4(3): cmp $0x7e,%bl
28c7(6): jnbe 0x321(%rip)
28cd(7): lea 0x3018(%rip),%rcx
28d4(3): movzx %bl,%edx
28d7(4): movsxd 0x0(%rcx,%rdx,4),%rax
28db(3): add %rcx,%rax
28de(2): jmp %rax
28e0(3): xor %r10d,%r10d
28e3(4): cmp $0x1,%r11
28e7(3): setnz %al
28ea(4): cmp $0xffffffff,%r11
28ee(2): jnz 0xe(%rip)
28f0(5): mov 0x10(%rsp),%rax
28f5(4): cmp $0x0,0x1(%rax)
28f9(3): setnz %al
28fc(5): cmp $0x2,0x8(%rsp)
2901(3): setz %dl
2904(2): test %al,%al
2906(6): jz 0x252(%rip)
290c(3): xor %r12d,%r12d
290f(2): xor %eax,%eax
2911(7): nop 0x0(%rax)
2918(5): cmp $0x1,0xd(%rsp)
291d(6): jnz 0x115(%rip)
2923(2): test %dl,%dl
2925(6): jnz 0x10d(%rip)
292b(5): mov 0x20(%rsp),%rsi
2930(3): test %rsi,%rsi
2933(2): jz 0x16(%rip)
2935(2): mov %ebx,%edx
2937(3): shr $0x5,%dl
293a(3): movzx %dl,%edx
293d(3): mov 0x0(%rsi,%rdx,4),%edx
2940(3): bt %ebx,%edx
2943(6): jb 0x150(%rip)
2949(3): test %r10b,%r10b
294c(6): jnz 0x147(%rip)
2952(3): xor $0x1,%eax
2955(4): add $0x1,%rbp
2959(3): and %r8d,%eax
295c(2): test %al,%al
295e(2): jz 0x22(%rip)
2960(3): cmp %r15,%r13
2963(2): jbe 0x7(%rip)
2965(5): mov $0x27,0x0(%r14,%r15,1)
296a(4): lea 0x1(%r15),%rax
296e(3): cmp %rax,%r13
2971(2): jbe 0x8(%rip)
2973(6): mov $0x27,0x1(%r14,%r15,1)
2979(4): add $0x2,%r15
297d(3): xor %r8d,%r8d
2980(3): cmp %r13,%r15
2983(2): jnb 0x6(%rip)
2985(4): mov %bl,0x0(%r14,%r15,1)
2989(5): movzx 0xe(%rsp),%edi
298e(4): add $0x1,%r15
2992(5): mov $0x0,%eax
2997(3): test %r12b,%r12b
299a(3): cmove %eax,%edi
299d(5): mov %dil,0xe(%rsp)
29a2(5): jmp 0xfffffe36(%rip)
29a7(9): nop 0x0(%rax,%rax,1)
29b0(3): xor %r10d,%r10d
29b3(4): mov 0x8(%rsp),%eax
29b7(3): cmp $0x2,%eax
29ba(6): jz 0x5be(%rip)
29c0(3): cmp $0x5,%eax
29c3(6): jz 0x575(%rip)
29c9(3): cmp $0x2,%eax
29cc(5): mov $0x3f,%ebx
29d1(3): setz %dl
29d4(3): xor %r12d,%r12d
29d7(2): xor %eax,%eax
29d9(5): jmp 0xffffff3f(%rip)
29de(2): nop 
29e0(3): xor %r10d,%r10d
29e3(5): cmp $0x2,0x8(%rsp)
29e8(6): jz 0x508(%rip)
29ee(5): mov %r12b,0x7c(%rsp)
29f3(2): xor %edx,%edx
29f5(2): xor %eax,%eax
29f7(5): mov $0x27,%ebx
29fc(5): jmp 0xffffff1c(%rip)
2a01(7): nop 0x0(%rax)
2a08(5): mov $0x9,%edx
2a0d(5): mov $0x74,%ebx
2a12(5): cmp $0x2,0x8(%rsp)
2a17(3): setz %al
2a1a(4): and 0xf(%rsp),%al
2a1e(6): jnz 0x150(%rip)
2a24(5): cmp $0x0,0xd(%rsp)
2a29(2): jnz 0x67(%rip)
2a2b(2): mov %edx,%ebx
2a2d(3): xor %r12d,%r12d
2a30(2): xor %eax,%eax
2a32(5): cmp $0x0,0xf(%rsp)
2a37(6): jnz 0xfffffef4(%rip)
2a3d(5): jmp 0xffffff0c(%rip)
2a42(6): nop 0x0(%rax,%rax,1)
2a48(5): mov $0x8,%edx
2a4d(5): mov $0x62,%ebx
2a52(2): jmp 0xffffffd2(%rip)
2a54(4): nop 0x0(%rax)
2a58(5): cmp $0x2,0x8(%rsp)
2a5d(6): jz 0x3d3(%rip)
2a63(5): cmp $0x0,0xd(%rsp)
2a68(6): jz 0x218(%rip)
2a6e(5): cmp $0x0,0xf(%rsp)
2a73(6): jz 0x20d(%rip)
2a79(6): cmp $0x0,0x18(%rsp)
2a7f(6): jnz 0x3bc(%rip)
2a85(5): mov $0x5c,%ebx
2a8a(6): nop 0x0(%rax,%rax,1)
2a90(3): xor %r12d,%r12d
2a93(5): cmp $0x2,0x8(%rsp)
2a98(3): setz %dl
2a9b(5): cmp $0x0,0xf(%rsp)
2aa0(2): mov %edx,%eax
2aa2(6): jnz 0x856(%rip)
2aa8(3): mov %r8d,%eax
2aab(3): xor $0x1,%eax
2aae(2): and %dl,%al
2ab0(2): jz 0x31(%rip)
2ab2(3): cmp %r15,%r13
2ab5(2): jbe 0x7(%rip)
2ab7(5): mov $0x27,0x0(%r14,%r15,1)
2abc(4): lea 0x1(%r15),%rdx
2ac0(3): cmp %rdx,%r13
2ac3(2): jbe 0x8(%rip)
2ac5(6): mov $0x24,0x1(%r14,%r15,1)
2acb(4): lea 0x2(%r15),%rdx
2acf(3): cmp %rdx,%r13
2ad2(2): jbe 0x8(%rip)
2ad4(6): mov $0x27,0x2(%r14,%r15,1)
2ada(4): add $0x3,%r15
2ade(3): mov %eax,%r8d
2ae1(3): cmp %r15,%r13
2ae4(2): jbe 0x7(%rip)
2ae6(5): mov $0x5c,0x0(%r14,%r15,1)
2aeb(4): add $0x1,%r15
2aef(4): add $0x1,%rbp
2af3(5): jmp 0xfffffe8d(%rip)
2af8(8): nop 0x0(%rax,%rax,1)
2b00(5): cmp $0x0,0xd(%rsp)
2b05(6): jnz 0x1ce(%rip)
2b0b(2): xor %edx,%edx
2b0d(5): test $0x1,0x78(%rsp)
2b12(6): jz 0xffffff19(%rip)
2b18(4): add $0x1,%rbp
2b1c(5): jmp 0xfffffcbc(%rip)
2b21(7): nop 0x0(%rax)
2b28(5): cmp $0x2,0x8(%rsp)
2b2d(3): setz %dl
2b30(2): xor %eax,%eax
2b32(5): jmp 0xfffffde6(%rip)
2b37(9): nop 0x0(%rax,%rax,1)
2b40(5): mov $0x7,%edx
2b45(5): mov $0x61,%ebx
2b4a(5): jmp 0xfffffeda(%rip)
2b4f(1): nop 
2b50(5): cmp $0x2,0x8(%rsp)
2b55(3): setz %dl
2b58(3): test %rbp,%rbp
2b5b(6): jnz 0xfffffdb1(%rip)
2b61(5): movzx 0xf(%rsp),%eax
2b66(2): and %dl,%al
2b68(6): jz 0xfffffdb0(%rip)
2b6e(3): mov %r11,%rbp
2b71(8): mov $0x2,0x8(%rsp)
2b79(5): jmp 0x700(%rip)
2b7e(2): nop 
2b80(5): cmp $0x2,0x8(%rsp)
2b85(3): setz %dl
2b88(3): xor %r12d,%r12d
2b8b(2): jmp 0xffffffd6(%rip)
2b8d(3): nop (%rax)
2b90(5): cmp $0x2,0x8(%rsp)
2b95(5): mov $0x20,%ebx
2b9a(3): setz %dl
2b9d(2): jmp 0xffffffc4(%rip)
2b9f(1): nop 
2ba0(5): mov $0xd,%edx
2ba5(5): mov $0x72,%ebx
2baa(5): jmp 0xfffffe68(%rip)
2baf(1): nop 
2bb0(5): mov $0xc,%edx
2bb5(5): mov $0x66,%ebx
2bba(5): jmp 0xfffffe6a(%rip)
2bbf(1): nop 
2bc0(5): mov $0xb,%edx
2bc5(5): mov $0x76,%ebx
2bca(5): jmp 0xfffffe5a(%rip)
2bcf(1): nop 
2bd0(5): mov $0xa,%edx
2bd5(5): mov $0x6e,%ebx
2bda(5): jmp 0xfffffe38(%rip)
2bdf(1): nop 
2be0(3): xor %r10d,%r10d
2be3(5): nop 0x0(%rax,%rax,1)
2be8(6): cmp $0x1,0x58(%rsp)
2bee(6): jnz 0x3aa(%rip)
2bf4(5): mov %r11,0x38(%rsp)
2bf9(5): mov %r8b,0x30(%rsp)
2bfe(5): mov %r10b,0x28(%rsp)
2c03(5): call 0xffffeb9d(%rip)
2c08(3): mov (%rax),%rcx
2c0b(3): movzx %bl,%edx
2c0e(6): movzx 0x28(%rsp),%r10d
2c14(6): movzx 0x30(%rsp),%r8d
2c1a(5): mov 0x38(%rsp),%r11
2c1f(5): mov $0x1,%edi
2c24(4): movzx 0x0(%rcx,%rdx,2),%eax
2c28(4): and $0x4000,%ax
2c2c(4): setnz %r12b
2c30(3): setz %al
2c33(4): and 0xd(%rsp),%al
2c37(2): test %al,%al
2c39(6): jnz 0x998(%rip)
2c3f(5): cmp $0x2,0x8(%rsp)
2c44(3): setz %dl
2c47(5): jmp 0xfffffcd1(%rip)
2c4c(4): nop 0x0(%rax)
2c50(4): movzx (%r9),%ebx
2c54(3): cmp $0x7e,%bl
2c57(2): jnbe 0xffffff89(%rip)
2c59(7): lea 0x2e88(%rip),%rcx
2c60(3): movzx %bl,%edx
2c63(4): movsxd 0x0(%rcx,%rdx,4),%rax
2c67(3): add %rcx,%rax
2c6a(2): jmp %rax
2c6c(4): nop 0x0(%rax)
2c70(3): xor %r10d,%r10d
2c73(5): cmp $0x0,0xd(%rsp)
2c78(6): jnz 0xfffffdf6(%rip)
2c7e(2): nop 
2c80(5): mov $0x5c,%edx
2c85(5): mov $0x5c,%ebx
2c8a(5): jmp 0xfffffd9a(%rip)
2c8f(1): nop 
2c90(5): mov $0xc,%edx
2c95(3): xor %r10d,%r10d
2c98(5): mov $0x66,%ebx
2c9d(5): jmp 0xfffffd87(%rip)
2ca2(6): nop 0x0(%rax,%rax,1)
2ca8(5): mov $0xa,%edx
2cad(3): xor %r10d,%r10d
2cb0(5): mov $0x6e,%ebx
2cb5(5): jmp 0xfffffd5d(%rip)
2cba(6): nop 0x0(%rax,%rax,1)
2cc0(5): mov $0x61,%ebx
2cc5(5): jmp 0xfffffdcb(%rip)
2cca(6): nop 0x0(%rax,%rax,1)
2cd0(3): xor %r10d,%r10d
2cd3(5): cmp $0x2,0x8(%rsp)
2cd8(3): setz %dl
2cdb(5): cmp $0x0,0xf(%rsp)
2ce0(6): jnz 0xb9a(%rip)
2ce6(3): mov %r8d,%eax
2ce9(3): mov %r15,%rcx
2cec(3): xor $0x1,%eax
2cef(2): and %dl,%al
2cf1(2): jz 0x2f(%rip)
2cf3(3): cmp %r15,%r13
2cf6(2): jbe 0x7(%rip)
2cf8(5): mov $0x27,0x0(%r14,%r15,1)
2cfd(4): lea 0x1(%r15),%rcx
2d01(3): cmp %rcx,%r13
2d04(2): jbe 0x8(%rip)
2d06(6): mov $0x24,0x1(%r14,%r15,1)
2d0c(4): lea 0x2(%r15),%rcx
2d10(3): cmp %rcx,%r13
2d13(6): jnbe 0x636(%rip)
2d19(4): lea 0x3(%r15),%rcx
2d1d(3): mov %eax,%r8d
2d20(3): cmp %rcx,%r13
2d23(2): jbe 0x7(%rip)
2d25(5): mov $0x5c,0x0(%r14,%rcx,1)
2d2a(5): cmp $0x2,0x8(%rsp)
2d2f(4): lea 0x1(%rcx),%r15
2d33(6): jz 0x606(%rip)
2d39(4): lea 0x1(%rbp),%rax
2d3d(3): cmp %r11,%rax
2d40(2): jnb 0x1b(%rip)
2d42(5): mov 0x10(%rsp),%rax
2d47(5): movzx 0x1(%rax,%rbp,1),%eax
2d4c(4): mov %al,0x28(%rsp)
2d50(3): sub $0x30,%eax
2d53(2): cmp $0x9,%al
2d55(6): jbe 0x834(%rip)
2d5b(3): mov %r12d,%eax
2d5e(5): mov $0x30,%ebx
2d63(3): xor %r12d,%r12d
2d66(5): jmp 0xfffffbb2(%rip)
2d6b(5): nop 0x0(%rax,%rax,1)
2d70(5): cmp $0x2,0x8(%rsp)
2d75(3): mov %r10d,%r12d
2d78(3): setz %dl
2d7b(3): xor %r10d,%r10d
2d7e(2): xor %eax,%eax
2d80(5): jmp 0xfffffb98(%rip)
2d85(3): nop (%rax)
2d88(5): cmp $0x2,0x8(%rsp)
2d8d(3): setz %dl
2d90(3): xor %r10d,%r10d
2d93(5): jmp 0xfffffdc5(%rip)
2d98(8): nop 0x0(%rax,%rax,1)
2da0(5): cmp $0x2,0x8(%rsp)
2da5(3): setz %dl
2da8(3): xor %r10d,%r10d
2dab(3): xor %r12d,%r12d
2dae(5): jmp 0xfffffdb3(%rip)
2db3(5): nop 0x0(%rax,%rax,1)
2db8(5): cmp $0x2,0x8(%rsp)
2dbd(3): mov %r10d,%r12d
2dc0(5): mov $0x20,%ebx
2dc5(3): setz %dl
2dc8(3): xor %r10d,%r10d
2dcb(5): jmp 0xfffffd96(%rip)
2dd0(5): mov $0xd,%edx
2dd5(3): xor %r10d,%r10d
2dd8(5): mov $0x72,%ebx
2ddd(5): jmp 0xfffffc35(%rip)
2de2(6): nop 0x0(%rax,%rax,1)
2de8(5): mov $0x76,%ebx
2ded(5): jmp 0xfffffca3(%rip)
2df2(6): nop 0x0(%rax,%rax,1)
2df8(5): mov $0x9,%edx
2dfd(3): xor %r10d,%r10d
2e00(5): mov $0x74,%ebx
2e05(5): jmp 0xfffffc0d(%rip)
2e0a(6): nop 0x0(%rax,%rax,1)
2e10(5): mov $0x62,%ebx
2e15(5): jmp 0xfffffc7b(%rip)
2e1a(6): nop 0x0(%rax,%rax,1)
2e20(3): xor %r10d,%r10d
2e23(5): jmp 0xfffffa9d(%rip)
2e28(8): nop 0x0(%rax,%rax,1)
2e30(5): cmp $0x0,0xf(%rsp)
2e35(6): jnz 0x96b(%rip)
2e3b(4): add $0x1,%rbp
2e3f(3): mov %r8d,%eax
2e42(3): xor %r12d,%r12d
2e45(5): mov $0x5c,%ebx
2e4a(5): jmp 0xfffffb12(%rip)
2e4f(1): nop 
2e50(5): cmp $0x2,0x8(%rsp)
2e55(5): movzx 0xf(%rsp),%ebx
2e5a(3): mov %r8d,%r12d
2e5d(3): mov %r11,%rbp
2e60(3): setz %dl
2e63(2): mov %ebx,%eax
2e65(3): test %r15,%r15
2e68(3): setz %cl
2e6b(2): and %edx,%eax
2e6d(2): and %cl,%al
2e6f(6): jnz 0xa67(%rip)
2e75(2): mov %ebx,%eax
2e77(3): xor $0x1,%eax
2e7a(2): and %al,%dl
2e7c(6): jz 0x970(%rip)
2e82(5): cmp $0x0,0x7c(%rsp)
2e87(6): jz 0x963(%rip)
2e8d(5): cmp $0x0,0xe(%rsp)
2e92(6): jnz 0x9fb(%rip)
2e98(3): test %r13,%r13
2e9b(3): setz %al
2e9e(6): cmp $0x0,0x50(%rsp)
2ea4(3): setnz %dl
2ea7(2): and %dl,%al
2ea9(6): jz 0xa23(%rip)
2eaf(5): mov 0x50(%rsp),%r13
2eb4(7): lea 0x29b2(%rip),%rbx
2ebb(4): mov $0x27,(%r14)
2ebf(8): mov $0x2,0x8(%rsp)
2ec7(6): mov $0x1,%r15d
2ecd(9): mov $0x1,0x18(%rsp)
2ed6(5): mov $0x0,0xf(%rsp)
2edb(5): mov %rbx,0x48(%rsp)
2ee0(4): mov %al,0x7c(%rsp)
2ee4(5): jmp 0xfffff8df(%rip)
2ee9(7): nop 0x0(%rax)
2ef0(5): cmp $0x0,0xf(%rsp)
2ef5(6): jnz 0x8ab(%rip)
2efb(3): test %r13,%r13
2efe(6): jz 0x402(%rip)
2f04(2): xor %edx,%edx
2f06(6): cmp $0x0,0x50(%rsp)
2f0c(6): jnz 0x3f4(%rip)
2f12(5): mov %r13,0x50(%rsp)
2f17(4): add $0x3,%r15
2f1b(2): xor %eax,%eax
2f1d(5): mov %r12b,0x7c(%rsp)
2f22(3): xor %r8d,%r8d
2f25(3): mov %rdx,%r13
2f28(5): mov $0x27,%ebx
2f2d(5): jmp 0xfffffa1c(%rip)
2f32(6): nop 0x0(%rax,%rax,1)
2f38(5): test $0x4,0x78(%rsp)
2f3d(2): jz 0x23(%rip)
2f3f(4): lea 0x2(%rbp),%rcx
2f43(3): cmp %r11,%rcx
2f46(2): jnb 0x1a(%rip)
2f48(5): mov 0x10(%rsp),%rax
2f4d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2f52(6): jz 0x790(%rip)
2f58(8): nop 0x0(%rax,%rax,1)
2f60(2): xor %edx,%edx
2f62(3): xor %r12d,%r12d
2f65(2): xor %eax,%eax
2f67(5): mov $0x3f,%ebx
2f6c(5): jmp 0xfffff9ac(%rip)
2f71(7): nop 0x0(%rax)
2f78(5): cmp $0x0,0xf(%rsp)
2f7d(6): jnz 0x823(%rip)
2f83(3): xor %r12d,%r12d
2f86(2): xor %eax,%eax
2f88(5): mov $0x3f,%ebx
2f8d(5): jmp 0xfffff9bc(%rip)
2f92(6): nop 0x0(%rax,%rax,1)
2f98(8): lea 0xa0(%rsp),%rax
2fa0(4): cmp $0xffffffff,%r11
2fa4(c): mov $0x0,0xa0(%rsp)
2fb0(5): mov %rax,0x28(%rsp)
2fb5(2): jnz 0x2f(%rip)
2fb7(5): mov 0x10(%rsp),%rdi
2fbc(5): mov %r8b,0x40(%rsp)
2fc1(5): mov %r10b,0x38(%rsp)
2fc6(5): mov %r9,0x30(%rsp)
2fcb(5): call 0xffffe5b5(%rip)
2fd0(6): movzx 0x40(%rsp),%r8d
2fd6(6): movzx 0x38(%rsp),%r10d
2fdc(3): mov %rax,%r11
2fdf(5): mov 0x30(%rsp),%r9
2fe4(8): lea 0x9c(%rsp),%rax
2fec(2): xor %ecx,%ecx
2fee(4): mov %bl,0x7e(%rsp)
2ff2(5): mov %r8b,0x7d(%rsp)
2ff7(3): mov %rcx,%rbx
2ffa(8): mov %r9,0x88(%rsp)
3002(5): mov %rax,0x38(%rsp)
3007(5): mov %r10b,0x7f(%rsp)
300c(8): mov %r15,0x80(%rsp)
3014(5): mov %r14,0x40(%rsp)
3019(5): mov %r13,0x70(%rsp)
301e(5): mov %r11,0x30(%rsp)
3023(5): mov 0x10(%rsp),%rax
3028(5): lea 0x0(%rbp,%rbx,1),%r14
302d(5): mov 0x30(%rsp),%rdx
3032(5): mov 0x28(%rsp),%rcx
3037(5): mov 0x38(%rsp),%rdi
303c(4): lea 0x0(%rax,%r14,1),%r13
3040(3): sub %r14,%rdx
3043(3): mov %r13,%rsi
3046(5): call 0x1afa(%rip)
304b(3): test %rax,%rax
304e(3): mov %rax,%r15
3051(2): jz 0x50(%rip)
3053(4): cmp $0xffffffff,%rax
3057(6): jz 0x61e(%rip)
305d(4): cmp $0xfffffffe,%rax
3061(6): jz 0x5a0(%rip)
3067(5): cmp $0x2,0x8(%rsp)
306c(3): setz %al
306f(4): and 0xf(%rsp),%al
3073(6): jnz 0x19d(%rip)
3079(7): mov 0x9c(%rsp),%edi
3080(5): call 0xffffe710(%rip)
3085(5): mov 0x28(%rsp),%rdi
308a(2): test %eax,%eax
308c(5): mov $0x0,%eax
3091(4): cmove %eax,%r12d
3095(3): add %r15,%rbx
3098(5): call 0xffffe6e8(%rip)
309d(2): test %eax,%eax
309f(2): jz 0xffffff84(%rip)
30a1(3): mov %r12d,%edx
30a4(3): mov %rbx,%rdi
30a7(6): movzx 0x7d(%rsp),%r8d
30ad(3): xor $0x1,%edx
30b0(5): movzx 0x7e(%rsp),%ebx
30b5(6): movzx 0x7f(%rsp),%r10d
30bb(4): and 0xd(%rsp),%dl
30bf(8): mov 0x80(%rsp),%r15
30c7(5): mov 0x40(%rsp),%r14
30cc(5): mov 0x70(%rsp),%r13
30d1(5): mov 0x30(%rsp),%r11
30d6(4): cmp $0x1,%rdi
30da(6): jbe 0x601(%rip)
30e0(3): mov %rdi,%rcx
30e3(2): xor %esi,%esi
30e5(6): movzx 0xf(%rsp),%r9d
30eb(3): add %rbp,%rcx
30ee(5): mov 0x10(%rsp),%rdi
30f3(5): jmp 0xbb(%rip)
30f8(8): nop 0x0(%rax,%rax,1)
3100(5): cmp $0x2,0x8(%rsp)
3105(3): setz %al
3108(3): test %r9b,%r9b
310b(6): jnz 0x4b5(%rip)
3111(3): mov %r8d,%esi
3114(3): xor $0x1,%esi
3117(3): and %sil,%al
311a(2): jz 0x31(%rip)
311c(3): cmp %r15,%r13
311f(2): jbe 0x7(%rip)
3121(5): mov $0x27,0x0(%r14,%r15,1)
3126(4): lea 0x1(%r15),%rsi
312a(3): cmp %rsi,%r13
312d(2): jbe 0x8(%rip)
312f(6): mov $0x24,0x1(%r14,%r15,1)
3135(4): lea 0x2(%r15),%rsi
3139(3): cmp %rsi,%r13
313c(2): jbe 0x8(%rip)
313e(6): mov $0x27,0x2(%r14,%r15,1)
3144(4): add $0x3,%r15
3148(3): mov %eax,%r8d
314b(3): cmp %r15,%r13
314e(2): jbe 0x7(%rip)
3150(5): mov $0x5c,0x0(%r14,%r15,1)
3155(4): lea 0x1(%r15),%rax
3159(3): cmp %rax,%r13
315c(2): jbe 0xf(%rip)
315e(2): mov %ebx,%eax
3160(3): shr $0x6,%al
3163(3): add $0x30,%eax
3166(5): mov %al,0x1(%r14,%r15,1)
316b(4): lea 0x2(%r15),%rax
316f(3): cmp %rax,%r13
3172(2): jbe 0x12(%rip)
3174(2): mov %ebx,%eax
3176(3): shr $0x3,%al
3179(3): and $0x7,%eax
317c(3): add $0x30,%eax
317f(5): mov %al,0x2(%r14,%r15,1)
3184(3): and $0x7,%ebx
3187(4): add $0x1,%rbp
318b(4): add $0x3,%r15
318f(3): add $0x30,%ebx
3192(3): cmp %rcx,%rbp
3195(6): jnb 0xfffff7eb(%rip)
319b(2): mov %edx,%esi
319d(3): cmp %r15,%r13
31a0(2): jbe 0x6(%rip)
31a2(4): mov %bl,0x0(%r14,%r15,1)
31a6(4): movzx 0x0(%rdi,%rbp,1),%ebx
31aa(4): add $0x1,%r15
31ae(2): test %dl,%dl
31b0(6): jnz 0xffffff50(%rip)
31b6(2): mov %esi,%eax
31b8(3): xor $0x1,%eax
31bb(3): and %r8d,%eax
31be(3): test %r10b,%r10b
31c1(2): jz 0x10(%rip)
31c3(3): cmp %r15,%r13
31c6(2): jbe 0x7(%rip)
31c8(5): mov $0x5c,0x0(%r14,%r15,1)
31cd(4): add $0x1,%r15
31d1(4): add $0x1,%rbp
31d5(3): cmp %rcx,%rbp
31d8(6): jnb 0xfffff784(%rip)
31de(2): test %al,%al
31e0(6): jz 0x3fe(%rip)
31e6(3): cmp %r15,%r13
31e9(2): jbe 0x7(%rip)
31eb(5): mov $0x27,0x0(%r14,%r15,1)
31f0(4): lea 0x1(%r15),%rax
31f4(3): cmp %rax,%r13
31f7(2): jbe 0x8(%rip)
31f9(6): mov $0x27,0x1(%r14,%r15,1)
31ff(4): add $0x2,%r15
3203(3): xor %r10d,%r10d
3206(3): xor %r8d,%r8d
3209(2): jmp 0xffffff94(%rip)
320b(5): nop 0x0(%rax,%rax,1)
3210(4): cmp $0x1,%r15
3214(6): jz 0xfffffe65(%rip)
321a(5): mov 0x10(%rsp),%rdi
321f(4): lea 0x0(%rdi,%r15,1),%rcx
3223(5): lea 0x1(%rdi,%r14,1),%rdx
3228(4): lea 0x0(%rcx,%r14,1),%r8
322c(2): jmp 0x11(%rip)
322e(2): nop 
3230(4): add $0x1,%rdx
3234(3): cmp %rdx,%r8
3237(6): jz 0xfffffe42(%rip)
323d(3): movzx (%rdx),%ecx
3240(3): sub $0x5b,%ecx
3243(3): cmp $0x21,%cl
3246(2): jnbe 0xffffffea(%rip)
3248(5): mov $0x1,%esi
324d(3): shl/sal %cl,%rsi
3250(3): mov %rsi,%rcx
3253(a): mov $0x8589934635,%rsi
325d(3): test %rsi,%rcx
3260(2): jz 0xffffffd0(%rip)
3262(5): mov 0x40(%rsp),%r14
3267(5): mov 0x70(%rsp),%r13
326c(5): mov 0x30(%rsp),%rbp
3271(8): mov $0x2,0x8(%rsp)
3279(5): cmp $0x0,0xd(%rsp)
327e(2): jz 0x12(%rip)
3280(2): test %al,%al
3282(5): mov $0x4,%eax
3287(5): cmove 0x8(%rsp),%eax
328c(4): mov %eax,0x8(%rsp)
3290(4): sub $0x8,%rsp
3294(3): mov %rbp,%rcx
3297(3): mov %r13,%rsi
329a(4): push 0x68(%rsp)
329e(4): push 0x78(%rsp)
32a2(3): mov %r14,%rdi
32a5(2): push $0x0
32a7(8): mov 0x98(%rsp),%r9d
32af(5): mov 0x28(%rsp),%r8d
32b4(5): mov 0x30(%rsp),%rdx
32b9(4): and $0xfd,%r9d
32bd(5): call 0xfffff433(%rip)
32c2(4): add $0x20,%rsp
32c6(3): mov %rax,%r15
32c9(8): mov 0xa8(%rsp),%rbx
32d1(9): xor $0x28,%rbx
32da(3): mov %r15,%rax
32dd(6): jnz 0x606(%rip)
32e3(7): add $0xb8,%rsp
32ea(1): pop %rbx
32eb(1): pop %rbp
32ec(2): pop %r12
32ee(2): pop %r13
32f0(2): pop %r14
32f2(2): pop %r15
32f4(1): ret near (%rsp)
32f5(3): nop (%rax)
32f8(3): mov %r11,%rbp
32fb(5): jmp 0xffffff7e(%rip)
3300(3): cmp %r15,%r13
3303(2): jbe 0x7(%rip)
3305(5): mov $0x27,0x0(%r14,%r15,1)
330a(4): lea 0x1(%r15),%rax
330e(3): cmp %rax,%r13
3311(2): jbe 0x8(%rip)
3313(6): mov $0x5c,0x1(%r14,%r15,1)
3319(4): lea 0x2(%r15),%rax
331d(3): cmp %rax,%r13
3320(6): jbe 0x5f2(%rip)
3326(3): mov %r13,%rdx
3329(6): mov $0x27,0x2(%r14,%r15,1)
332f(5): mov 0x50(%rsp),%r13
3334(5): jmp 0xfffffbde(%rip)
3339(3): mov %r12d,%eax
333c(5): mov $0x30,%ebx
3341(3): xor %r12d,%r12d
3344(5): jmp 0xfffff605(%rip)
3349(6): mov $0x27,0x2(%r14,%r15,1)
334f(5): jmp 0xfffff9ca(%rip)
3354(2): test %ebx,%ebx
3356(6): jnz 0xfffff42d(%rip)
335c(5): mov $0x1,0xd(%rsp)
3361(3): test %r13,%r13
3364(6): jnz 0x596(%rip)
336a(7): lea 0x24fc(%rip),%rax
3371(9): mov $0x0,0x50(%rsp)
337a(5): mov $0x1,0xe(%rsp)
337f(5): mov $0x0,0x7c(%rsp)
3384(3): xor %r12d,%r12d
3387(5): mov $0x0,0xf(%rsp)
338c(9): mov $0x1,0x18(%rsp)
3395(5): mov %rax,0x48(%rsp)
339a(6): mov $0x1,%r15d
33a0(8): mov $0x2,0x8(%rsp)
33a8(5): jmp 0xfffff41b(%rip)
33ad(3): nop (%rax)
33b0(2): test %ebx,%ebx
33b2(6): jnz 0x3fb(%rip)
33b8(3): test %r13,%r13
33bb(6): jz 0x22b(%rip)
33c1(4): mov $0x22,(%r14)
33c5(5): mov $0x1,0xe(%rsp)
33ca(3): xor %r12d,%r12d
33cd(5): mov $0x0,0x7c(%rsp)
33d2(9): mov $0x0,0x50(%rsp)
33db(7): lea 0x2489(%rip),%rax
33e2(5): mov $0x0,0xf(%rsp)
33e7(5): mov $0x1,0xd(%rsp)
33ec(9): mov $0x1,0x18(%rsp)
33f5(6): mov $0x1,%r15d
33fb(5): mov %rax,0x48(%rsp)
3400(5): jmp 0xfffff3c3(%rip)
3405(7): lea 0x245f(%rip),%rax
340c(5): mov $0x1,0xe(%rsp)
3411(5): mov $0x0,0x7c(%rsp)
3416(3): xor %r12d,%r12d
3419(9): mov $0x0,0x50(%rsp)
3422(5): mov $0x1,0xf(%rsp)
3427(5): mov $0x1,0xd(%rsp)
342c(9): mov $0x1,0x18(%rsp)
3435(3): xor %r15d,%r15d
3438(5): mov %rax,0x48(%rsp)
343d(8): mov $0x5,0x8(%rsp)
3445(5): jmp 0xfffff37e(%rip)
344a(5): mov $0x1,0xe(%rsp)
344f(5): mov $0x0,0x7c(%rsp)
3454(3): xor %r12d,%r12d
3457(9): mov $0x0,0x50(%rsp)
3460(5): mov $0x0,0xf(%rsp)
3465(3): xor %r15d,%r15d
3468(5): mov $0x1,0xd(%rsp)
346d(9): mov $0x0,0x18(%rsp)
3476(9): mov $0x0,0x48(%rsp)
347f(5): jmp 0xfffff344(%rip)
3484(5): cmp $0xa,0x8(%rsp)
3489(2): jz 0x58(%rip)
348b(7): lea 0x23dd(%rip),%rsi
3492(2): xor %edi,%edi
3494(5): mov $0x5,%edx
3499(5): call 0xffffe0c7(%rip)
349e(3): mov %rax,%rcx
34a1(5): mov %rax,0x68(%rsp)
34a6(7): lea 0x23c2(%rip),%rax
34ad(3): cmp %rax,%rcx
34b0(6): jz 0x39e(%rip)
34b6(7): lea 0x23b0(%rip),%rsi
34bd(2): xor %edi,%edi
34bf(5): mov $0x5,%edx
34c4(5): call 0xffffe09c(%rip)
34c9(3): mov %rax,%rcx
34cc(5): mov %rax,0x60(%rsp)
34d1(7): lea 0x2395(%rip),%rax
34d8(3): cmp %rax,%rcx
34db(6): jz 0x389(%rip)
34e1(3): xor %r15d,%r15d
34e4(2): test %ebx,%ebx
34e6(6): jz 0x1c7(%rip)
34ec(2): test %ebx,%ebx
34ee(5): mov 0x60(%rsp),%rbx
34f3(5): setnz 0xf(%rsp)
34f8(3): xor %r12d,%r12d
34fb(3): mov %rbx,%rdi
34fe(5): call 0xffffe082(%rip)
3503(5): mov %rbx,0x48(%rsp)
3508(5): mov %rax,0x18(%rsp)
350d(5): mov $0x1,0xe(%rsp)
3512(5): mov $0x0,0x7c(%rsp)
3517(9): mov $0x0,0x50(%rsp)
3520(5): mov $0x1,0xd(%rsp)
3525(5): jmp 0xfffff29e(%rip)
352a(5): mov $0x1,0xe(%rsp)
352f(5): mov $0x0,0x7c(%rsp)
3534(3): xor %r12d,%r12d
3537(9): mov $0x0,0x50(%rsp)
3540(5): mov $0x0,0xf(%rsp)
3545(3): xor %r15d,%r15d
3548(5): mov $0x0,0xd(%rsp)
354d(9): mov $0x0,0x18(%rsp)
3556(9): mov $0x0,0x48(%rsp)
355f(5): jmp 0xfffff264(%rip)
3564(5): mov $0x1,0xe(%rsp)
3569(5): mov $0x0,0x7c(%rsp)
356e(3): xor %r12d,%r12d
3571(9): mov $0x0,0x50(%rsp)
357a(5): mov $0x1,0xf(%rsp)
357f(5): mov $0x1,0xd(%rsp)
3584(5): jmp 0xfffff21f(%rip)
3589(3): cmp %r15,%r13
358c(2): jbe 0x7(%rip)
358e(5): mov $0x30,0x0(%r14,%r15,1)
3593(4): lea 0x2(%rcx),%rax
3597(3): cmp %rax,%r13
359a(2): jbe 0x8(%rip)
359c(6): mov $0x30,0x2(%r14,%rcx,1)
35a2(3): mov %r12d,%eax
35a5(4): lea 0x3(%rcx),%r15
35a9(3): xor %r12d,%r12d
35ac(5): mov $0x30,%ebx
35b1(5): jmp 0xfffff367(%rip)
35b6(a): nop 0x0(%rax,%rax,1)
35c0(5): movzx 0xf(%rsp),%ebx
35c5(3): mov %r11,%rbp
35c8(4): mov %bl,0xd(%rsp)
35cc(5): jmp 0xfffffcad(%rip)
35d1(5): movzx 0xd(%rsp),%edx
35d6(3): xor %r12d,%r12d
35d9(5): jmp 0xfffffb07(%rip)
35de(3): xor %r10d,%r10d
35e1(5): jmp 0xfffffbbc(%rip)
35e6(9): mov $0x0,0x50(%rsp)
35ef(5): mov $0x1,0xe(%rsp)
35f4(3): xor %r12d,%r12d
35f7(5): mov $0x0,0x7c(%rsp)
35fc(5): jmp 0xfffffddf(%rip)
3601(5): mov 0x30(%rsp),%r11
3606(3): mov %r14,%rsi
3609(3): mov %r13,%rcx
360c(3): mov %rbx,%rax
360f(3): mov %rbx,%rdi
3612(6): movzx 0x7d(%rsp),%r8d
3618(5): movzx 0x7e(%rsp),%ebx
361d(8): mov 0x88(%rsp),%r9
3625(3): cmp %r11,%rsi
3628(6): movzx 0x7f(%rsp),%r10d
362e(8): mov 0x80(%rsp),%r15
3636(5): mov 0x40(%rsp),%r14
363b(5): mov 0x70(%rsp),%r13
3640(2): jnb 0x28(%rip)
3642(3): cmp $0x0,(%rcx)
3645(2): jnz 0x12(%rip)
3647(2): jmp 0x21(%rip)
3649(7): nop 0x0(%rax)
3650(5): cmp $0x0,0x0(%r9,%rax,1)
3655(2): jz 0x10(%rip)
3657(4): add $0x1,%rax
365b(5): lea 0x0(%rbp,%rax,1),%rdx
3660(3): cmp %rdx,%r11
3663(2): jnbe 0xffffffed(%rip)
3665(3): mov %rax,%rdi
3668(5): movzx 0xd(%rsp),%edx
366d(3): xor %r12d,%r12d
3670(5): jmp 0xfffffa66(%rip)
3675(3): mov %rbx,%rdi
3678(6): movzx 0x7d(%rsp),%r8d
367e(5): movzx 0x7e(%rsp),%ebx
3683(6): movzx 0x7f(%rsp),%r10d
3689(8): mov 0x80(%rsp),%r15
3691(3): xor %r12d,%r12d
3694(5): mov 0x40(%rsp),%r14
3699(5): mov 0x70(%rsp),%r13
369e(5): mov 0x30(%rsp),%r11
36a3(5): movzx 0xd(%rsp),%edx
36a8(5): jmp 0xfffffa2e(%rip)
36ad(5): mov 0x68(%rsp),%rdx
36b2(3): movzx (%rdx),%eax
36b5(2): test %al,%al
36b7(6): jz 0xfffffe35(%rip)
36bd(3): nop (%rax)
36c0(3): cmp %r15,%r13
36c3(2): jbe 0x6(%rip)
36c5(4): mov %al,0x0(%r14,%r15,1)
36c9(4): add $0x1,%r15
36cd(5): movzx 0x0(%rdx,%r15,1),%eax
36d2(2): test %al,%al
36d4(2): jnz 0xffffffec(%rip)
36d6(5): jmp 0xfffffe16(%rip)
36db(2): mov %edx,%eax
36dd(5): jmp 0xfffff55a(%rip)
36e2(4): movzx 0x0(%rax,%rcx,1),%ebx
36e6(3): cmp $0x3e,%bl
36e9(6): jnbe 0xfffff877(%rip)
36ef(a): mov $0x8070630310989004800,%rax
36f9(4): bt %rbx,%rax
36fd(6): jnb 0xfffff863(%rip)
3703(5): cmp $0x0,0xf(%rsp)
3708(6): jnz 0x1ea(%rip)
370e(3): cmp %r15,%r13
3711(2): jbe 0x7(%rip)
3713(5): mov $0x3f,0x0(%r14,%r15,1)
3718(4): lea 0x1(%r15),%rax
371c(3): cmp %rax,%r13
371f(2): jbe 0x8(%rip)
3721(6): mov $0x22,0x1(%r14,%r15,1)
3727(4): lea 0x2(%r15),%rax
372b(3): cmp %rax,%r13
372e(2): jbe 0x8(%rip)
3730(6): mov $0x22,0x2(%r14,%r15,1)
3736(4): lea 0x3(%r15),%rax
373a(3): cmp %rax,%r13
373d(2): jbe 0x8(%rip)
373f(6): mov $0x3f,0x3(%r14,%r15,1)
3745(4): add $0x4,%r15
3749(2): xor %edx,%edx
374b(3): xor %r12d,%r12d
374e(2): xor %eax,%eax
3750(3): mov %rcx,%rbp
3753(5): jmp 0xfffff1c5(%rip)
3758(2): test %ebx,%ebx
375a(6): jz 0x18e(%rip)
3760(7): lea 0x2106(%rip),%rax
3767(5): mov $0x1,0xe(%rsp)
376c(5): mov $0x0,0x7c(%rsp)
3771(3): xor %r12d,%r12d
3774(9): mov $0x0,0x50(%rsp)
377d(5): mov $0x1,0xf(%rsp)
3782(5): mov $0x0,0xd(%rsp)
3787(9): mov $0x1,0x18(%rsp)
3790(3): xor %r15d,%r15d
3793(5): mov %rax,0x48(%rsp)
3798(5): jmp 0xfffff02b(%rip)
379d(3): nop (%rax)
37a0(3): mov %r11,%rbp
37a3(5): movzx 0xf(%rsp),%eax
37a8(5): jmp 0xfffffad1(%rip)
37ad(7): lea 0x20b7(%rip),%rax
37b4(5): mov $0x1,0xe(%rsp)
37b9(5): mov $0x0,0x7c(%rsp)
37be(3): xor %r12d,%r12d
37c1(9): mov $0x0,0x50(%rsp)
37ca(5): mov $0x1,0xf(%rsp)
37cf(5): mov $0x1,0xd(%rsp)
37d4(9): mov $0x1,0x18(%rsp)
37dd(3): xor %r15d,%r15d
37e0(5): mov %rax,0x48(%rsp)
37e5(5): jmp 0xffffefde(%rip)
37ea(2): mov %edx,%eax
37ec(5): mov 0x48(%rsp),%rbx
37f1(3): test %rbx,%rbx
37f4(2): jz 0x2e(%rip)
37f6(2): test %al,%al
37f8(2): jz 0x2a(%rip)
37fa(3): movzx (%rbx),%ecx
37fd(3): mov %rbx,%rax
3800(2): test %cl,%cl
3802(2): jz 0x20(%rip)
3804(3): mov %r15,%rdx
3807(3): sub %r15,%rax
380a(3): cmp %rdx,%r13
380d(2): jbe 0x6(%rip)
380f(4): mov %cl,0x0(%r14,%rdx,1)
3813(4): add $0x1,%rdx
3817(4): movzx 0x0(%rax,%rdx,1),%ecx
381b(2): test %cl,%cl
381d(2): jnz 0xffffffed(%rip)
381f(3): mov %rdx,%r15
3822(3): cmp %r15,%r13
3825(6): jbe 0xfffffaa4(%rip)
382b(5): mov $0x0,0x0(%r14,%r15,1)
3830(5): jmp 0xfffffa99(%rip)
3835(5): cmp $0x2,0x8(%rsp)
383a(5): movzx 0xf(%rsp),%ebx
383f(3): mov %r11,%rbp
3842(3): setz %al
3845(4): mov %bl,0xd(%rsp)
3849(5): jmp 0xfffffa30(%rip)
384e(4): mov 0x8(%rsp),%esi
3852(3): mov %rcx,%rdi
3855(5): call 0xffffedab(%rip)
385a(5): mov %rax,0x68(%rsp)
385f(5): jmp 0xfffffc57(%rip)
3864(4): mov 0x8(%rsp),%esi
3868(3): mov %rcx,%rdi
386b(5): call 0xffffed95(%rip)
3870(5): mov %rax,0x60(%rsp)
3875(5): jmp 0xfffffc6c(%rip)
387a(5): movzx 0xf(%rsp),%ebx
387f(3): mov %r11,%rbp
3882(2): mov %edx,%eax
3884(4): mov %bl,0xd(%rsp)
3888(5): jmp 0xfffff9f1(%rip)
388d(4): sub $0x8,%rsp
3891(6): mov $0x5,%r8d
3897(3): mov %r11,%rcx
389a(4): push 0x68(%rsp)
389e(4): push 0x78(%rsp)
38a2(3): mov %r14,%rdi
38a5(4): push 0x38(%rsp)
38a9(8): mov 0x98(%rsp),%r9d
38b1(5): mov 0x30(%rsp),%rdx
38b6(5): mov 0x70(%rsp),%rsi
38bb(5): call 0xffffee35(%rip)
38c0(4): add $0x20,%rsp
38c4(3): mov %rax,%r15
38c7(5): jmp 0xfffffa02(%rip)
38cc(5): movzx 0x7c(%rsp),%eax
38d1(5): jmp 0xffffff1b(%rip)
38d6(8): mov $0x2,0x8(%rsp)
38de(5): jmp 0xfffff99b(%rip)
38e3(5): call 0xffffdcad(%rip)
38e8(5): mov $0x0,0xd(%rsp)
38ed(5): jmp 0xfffffa74(%rip)
38f2(3): mov %r11,%rbp
38f5(5): jmp 0xfffff99b(%rip)
38fa(5): mov $0x1,0xe(%rsp)
38ff(2): xor %eax,%eax
3901(3): xor %r12d,%r12d
3904(9): mov $0x0,0x50(%rsp)
390d(5): jmp 0xfffff5a7(%rip)
3912(3): mov %r13,%rdx
3915(5): mov 0x50(%rsp),%r13
391a(5): jmp 0xfffff5f8(%rip)
391f(5): call 0xffffdb91(%rip)

"quotearg_n_options" :
3930(2): push %r15
3932(2): push %r14
3934(3): movsxd %edi,%r15
3937(2): push %r13
3939(2): push %r12
393b(3): mov %rdx,%r14
393e(1): push %rbp
393f(1): push %rbx
3940(3): mov %rcx,%rbp
3943(4): sub $0x28,%rsp
3947(5): mov %rsi,0x8(%rsp)
394c(5): call 0xffffdb74(%rip)
3951(3): mov %rax,%r13
3954(2): mov (%rax),%eax
3956(3): test %r15d,%r15d
3959(7): mov 0x204700(%rip),%rbx
3960(4): mov %eax,0x18(%rsp)
3964(6): js 0x16d(%rip)
396a(7): cmp %r15d,0x2046e7(%rip)
3971(2): jnle 0x64(%rip)
3973(7): cmp $0x7fffffff,%r15d
397a(6): jz 0x15c(%rip)
3980(4): lea 0x1(%r15),%r12d
3984(7): lea 0x2046e5(%rip),%rax
398b(3): movsxd %r12d,%rsi
398e(4): shl/sal $0x4,%rsi
3992(3): cmp %rax,%rbx
3995(6): jz 0x11b(%rip)
399b(3): mov %rbx,%rdi
399e(5): call 0xf72(%rip)
39a3(3): mov %rax,%rbx
39a6(7): mov %rax,0x2046b3(%rip)
39ad(7): movsxd 0x2046a4(%rip),%rdi
39b4(3): mov %r12d,%edx
39b7(2): xor %esi,%esi
39b9(2): sub %edi,%edx
39bb(4): shl/sal $0x4,%rdi
39bf(3): movsxd %edx,%rdx
39c2(3): add %rbx,%rdi
39c5(4): shl/sal $0x4,%rdx
39c9(5): call 0xffffdc27(%rip)
39ce(7): mov %r12d,0x204683(%rip)
39d5(3): mov 0x4(%rbp),%eax
39d8(4): shl/sal $0x4,%r15
39dc(4): sub $0x8,%rsp
39e0(3): add %r15,%rbx
39e3(4): lea 0x8(%rbp),%r15
39e7(4): mov 0x0(%rbp),%r8d
39eb(3): mov (%rbx),%r11
39ee(4): mov 0x8(%rbx),%r12
39f2(3): mov %r14,%rcx
39f5(3): or $0x1,%eax
39f8(4): mov %eax,0x24(%rsp)
39fc(3): push 0x30(%rbp)
39ff(3): mov %eax,%r9d
3a02(3): push 0x28(%rbp)
3a05(2): push %r15
3a07(3): mov %r11,%rsi
3a0a(5): mov 0x28(%rsp),%rdx
3a0f(3): mov %r12,%rdi
3a12(5): mov %r11,0x30(%rsp)
3a17(5): call 0xffffecd9(%rip)
3a1c(4): add $0x20,%rsp
3a20(5): mov 0x10(%rsp),%r11
3a25(3): cmp %rax,%r11
3a28(2): jnbe 0x69(%rip)
3a2a(4): lea 0x1(%rax),%rsi
3a2e(7): lea 0x20488b(%rip),%rax
3a35(3): cmp %rax,%r12
3a38(3): mov %rsi,(%rbx)
3a3b(2): jz 0x14(%rip)
3a3d(3): mov %r12,%rdi
3a40(5): mov %rsi,0x10(%rsp)
3a45(5): call 0xffffda5b(%rip)
3a4a(5): mov 0x10(%rsp),%rsi
3a4f(3): mov %rsi,%rdi
3a52(5): mov %rsi,0x10(%rsp)
3a57(5): call 0xe59(%rip)
3a5c(4): sub $0x8,%rsp
3a60(4): mov %rax,0x8(%rbx)
3a64(4): mov 0x0(%rbp),%r8d
3a68(3): push 0x30(%rbp)
3a6b(3): push 0x28(%rbp)
3a6e(3): mov %r14,%rcx
3a71(2): push %r15
3a73(5): mov 0x3c(%rsp),%r9d
3a78(3): mov %rax,%rdi
3a7b(5): mov 0x28(%rsp),%rdx
3a80(5): mov 0x30(%rsp),%rsi
3a85(3): mov %rax,%r12
3a88(5): call 0xffffec68(%rip)
3a8d(4): add $0x20,%rsp
3a91(4): mov 0x18(%rsp),%eax
3a95(4): mov %eax,0x0(%r13)
3a99(4): add $0x28,%rsp
3a9d(3): mov %r12,%rax
3aa0(1): pop %rbx
3aa1(1): pop %rbp
3aa2(2): pop %r12
3aa4(2): pop %r13
3aa6(2): pop %r14
3aa8(2): pop %r15
3aaa(1): ret near (%rsp)
3aab(5): nop 0x0(%rax,%rax,1)
3ab0(2): xor %edi,%edi
3ab2(5): call 0xe5e(%rip)
3ab7(8): movdqa 0x2045b1(%rip),%xmm0
3abf(3): mov %rax,%rbx
3ac2(7): mov %rax,0x204597(%rip)
3ac9(3): movups %xmm0,(%rax)
3acc(5): jmp 0xfffffee1(%rip)
3ad1(5): call 0xffffd9df(%rip)
3ad6(5): call 0x102a(%rip)

"clone_quoting_options" :
3ae0(2): push %r12
3ae2(1): push %rbp
3ae3(1): push %rbx
3ae4(3): mov %rdi,%rbx
3ae7(5): call 0xffffd9d9(%rip)
3aec(3): mov (%rax),%r12d
3aef(3): mov %rax,%rbp
3af2(7): lea 0x2048c7(%rip),%rax
3af9(3): test %rbx,%rbx
3afc(5): mov $0x38,%esi
3b01(4): cmove %rax,%rbx
3b05(3): mov %rbx,%rdi
3b08(5): call 0xfa8(%rip)
3b0d(4): mov %r12d,0x0(%rbp)
3b11(1): pop %rbx
3b12(1): pop %rbp
3b13(2): pop %r12
3b15(1): ret near (%rsp)

"get_quoting_style" :
3b20(7): lea 0x204899(%rip),%rax
3b27(3): test %rdi,%rdi
3b2a(4): cmove %rax,%rdi
3b2e(2): mov (%rdi),%eax
3b30(1): ret near (%rsp)

"set_quoting_style" :
3b40(7): lea 0x204879(%rip),%rax
3b47(3): test %rdi,%rdi
3b4a(4): cmove %rax,%rdi
3b4e(2): mov %esi,(%rdi)
3b50(1): ret near (%rsp)

"set_char_quoting" :
3b60(7): lea 0x204859(%rip),%rax
3b67(3): test %rdi,%rdi
3b6a(2): mov %esi,%ecx
3b6c(4): cmove %rax,%rdi
3b70(2): mov %esi,%eax
3b72(3): and $0x1f,%ecx
3b75(3): shr $0x5,%al
3b78(3): movzx %al,%eax
3b7b(5): lea 0x8(%rdi,%rax,4),%rdi
3b80(2): mov (%rdi),%esi
3b82(2): mov %esi,%eax
3b84(2): shr %cl,%eax
3b86(2): xor %eax,%edx
3b88(3): and $0x1,%eax
3b8b(3): and $0x1,%edx
3b8e(2): shl/sal %cl,%edx
3b90(2): xor %esi,%edx
3b92(2): mov %edx,(%rdi)
3b94(1): ret near (%rsp)

"set_quoting_flags" :
3ba0(7): lea 0x204819(%rip),%rax
3ba7(3): test %rdi,%rdi
3baa(4): cmove %rax,%rdi
3bae(3): mov 0x4(%rdi),%eax
3bb1(3): mov %esi,0x4(%rdi)
3bb4(1): ret near (%rsp)

"set_custom_quoting" :
3bc0(7): lea 0x2047f9(%rip),%rax
3bc7(3): test %rdi,%rdi
3bca(4): cmove %rax,%rdi
3bce(3): test %rsi,%rsi
3bd1(6): mov $0xa,(%rdi)
3bd7(2): jz 0x10(%rip)
3bd9(3): test %rdx,%rdx
3bdc(2): jz 0xb(%rip)
3bde(4): mov %rsi,0x28(%rdi)
3be2(4): mov %rdx,0x30(%rdi)
3be6(1): ret near (%rsp)
3be7(4): sub $0x8,%rsp
3beb(5): call 0xffffd8c5(%rip)

"quotearg_buffer" :
3bf0(2): push %r15
3bf2(2): push %r14
3bf4(7): lea 0x2047c5(%rip),%rax
3bfb(2): push %r13
3bfd(2): push %r12
3bff(3): mov %rdi,%r13
3c02(1): push %rbp
3c03(1): push %rbx
3c04(3): mov %r8,%rbx
3c07(3): mov %rsi,%r14
3c0a(3): mov %rdx,%r15
3c0d(4): sub $0x18,%rsp
3c11(3): test %r8,%r8
3c14(4): cmove %rax,%rbx
3c18(5): mov %rcx,0x8(%rsp)
3c1d(5): call 0xffffd8a3(%rip)
3c22(3): mov (%rax),%r12d
3c25(3): mov %rax,%rbp
3c28(4): lea 0x8(%rbx),%rax
3c2c(4): sub $0x8,%rsp
3c30(4): mov 0x4(%rbx),%r9d
3c34(3): push 0x30(%rbx)
3c37(3): mov (%rbx),%r8d
3c3a(3): push 0x28(%rbx)
3c3d(3): mov %r15,%rdx
3c40(1): push %rax
3c41(5): mov 0x28(%rsp),%rcx
3c46(3): mov %r14,%rsi
3c49(3): mov %r13,%rdi
3c4c(5): call 0xffffeaa4(%rip)
3c51(4): mov %r12d,0x0(%rbp)
3c55(4): add $0x38,%rsp
3c59(1): pop %rbx
3c5a(1): pop %rbp
3c5b(2): pop %r12
3c5d(2): pop %r13
3c5f(2): pop %r14
3c61(2): pop %r15
3c63(1): ret near (%rsp)

"quotearg_alloc_mem" :
3c70(2): push %r15
3c72(2): push %r14
3c74(7): lea 0x204745(%rip),%rax
3c7b(2): push %r13
3c7d(2): push %r12
3c7f(3): mov %rdx,%r12
3c82(1): push %rbp
3c83(1): push %rbx
3c84(3): mov %rcx,%rbx
3c87(3): mov %rdi,%r14
3c8a(3): mov %rsi,%r15
3c8d(4): sub $0x38,%rsp
3c91(3): test %rcx,%rcx
3c94(4): cmove %rax,%rbx
3c98(2): xor %ebp,%ebp
3c9a(5): call 0xffffd826(%rip)
3c9f(3): test %r12,%r12
3ca2(3): mov %rax,%r13
3ca5(2): mov (%rax),%eax
3ca7(4): setz %bpl
3cab(3): or 0x4(%rbx),%ebp
3cae(4): lea 0x8(%rbx),%r10
3cb2(4): sub $0x8,%rsp
3cb6(3): mov (%rbx),%r8d
3cb9(3): mov %r15,%rcx
3cbc(4): mov %eax,0x14(%rsp)
3cc0(3): push 0x30(%rbx)
3cc3(3): mov %r14,%rdx
3cc6(3): push 0x28(%rbx)
3cc9(2): push %r10
3ccb(2): xor %esi,%esi
3ccd(3): mov %ebp,%r9d
3cd0(2): xor %edi,%edi
3cd2(5): mov %r10,0x40(%rsp)
3cd7(5): call 0xffffea19(%rip)
3cdc(4): lea 0x1(%rax),%rsi
3ce0(5): mov %rax,0x48(%rsp)
3ce5(4): add $0x20,%rsp
3ce9(3): mov %rsi,%rdi
3cec(5): mov %rsi,0x18(%rsp)
3cf1(5): call 0xbbf(%rip)
3cf6(5): mov %rax,0x10(%rsp)
3cfb(4): sub $0x8,%rsp
3cff(3): push 0x30(%rbx)
3d02(3): push 0x28(%rbx)
3d05(5): mov 0x38(%rsp),%r10
3d0a(3): mov %ebp,%r9d
3d0d(3): mov (%rbx),%r8d
3d10(3): mov %r15,%rcx
3d13(3): mov %r14,%rdx
3d16(3): mov %rax,%rdi
3d19(2): push %r10
3d1b(5): mov 0x38(%rsp),%rsi
3d20(5): call 0xffffe9d0(%rip)
3d25(4): mov 0x2c(%rsp),%eax
3d29(4): add $0x20,%rsp
3d2d(3): test %r12,%r12
3d30(4): mov %eax,0x0(%r13)
3d34(2): jz 0xb(%rip)
3d36(5): mov 0x28(%rsp),%r11
3d3b(4): mov %r11,(%r12)
3d3f(5): mov 0x10(%rsp),%rax
3d44(4): add $0x38,%rsp
3d48(1): pop %rbx
3d49(1): pop %rbp
3d4a(2): pop %r12
3d4c(2): pop %r13
3d4e(2): pop %r14
3d50(2): pop %r15
3d52(1): ret near (%rsp)

"quotearg_alloc" :
3d60(3): mov %rdx,%rcx
3d63(2): xor %edx,%edx
3d65(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3d70(6): mov 0x2042e2(%rip),%eax
3d76(2): push %r12
3d78(7): mov 0x2042e1(%rip),%r12
3d7f(1): push %rbp
3d80(1): push %rbx
3d81(3): cmp $0x1,%eax
3d84(2): jle 0x2d(%rip)
3d86(3): sub $0x2,%eax
3d89(5): lea 0x18(%r12),%rbx
3d8e(4): shl/sal $0x4,%rax
3d92(5): lea 0x28(%r12,%rax,1),%rbp
3d97(9): nop 0x0(%rax,%rax,1)
3da0(3): mov (%rbx),%rdi
3da3(4): add $0x10,%rbx
3da7(5): call 0xffffd6f9(%rip)
3dac(3): cmp %rbp,%rbx
3daf(2): jnz 0xfffffff1(%rip)
3db1(5): mov 0x8(%r12),%rdi
3db6(7): lea 0x204503(%rip),%rbx
3dbd(3): cmp %rbx,%rdi
3dc0(2): jz 0x19(%rip)
3dc2(5): call 0xffffd6de(%rip)
3dc7(b): mov $0x100,0x20429e(%rip)
3dd2(7): mov %rbx,0x20429f(%rip)
3dd9(7): lea 0x204290(%rip),%rbx
3de0(3): cmp %rbx,%r12
3de3(2): jz 0x11(%rip)
3de5(3): mov %r12,%rdi
3de8(5): call 0xffffd6b8(%rip)
3ded(7): mov %rbx,0x20426c(%rip)
3df4(1): pop %rbx
3df5(a): mov $0x1,0x204259(%rip)
3dff(1): pop %rbp
3e00(2): pop %r12
3e02(1): ret near (%rsp)

"quotearg_n" :
3e10(7): lea 0x2045a9(%rip),%rcx
3e17(7): mov $0xffffffff,%rdx
3e1e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3e30(7): lea 0x204589(%rip),%rcx
3e37(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3e40(7): lea 0x204579(%rip),%rcx
3e47(3): mov %rdi,%rsi
3e4a(7): mov $0xffffffff,%rdx
3e51(2): xor %edi,%edi
3e53(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3e60(7): lea 0x204559(%rip),%rcx
3e67(3): mov %rsi,%rdx
3e6a(3): mov %rdi,%rsi
3e6d(2): xor %edi,%edi
3e6f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3e80(4): sub $0x48,%rsp
3e84(3): mov %rdx,%rax
3e87(9): mov $0x28,%rdx
3e90(5): mov %rdx,0x38(%rsp)
3e95(2): xor %edx,%edx
3e97(3): cmp $0xa,%esi
3e9a(2): jz 0x6a(%rip)
3e9c(3): mov %esi,(%rsp)
3e9f(3): mov %rsp,%rcx
3ea2(7): mov $0xffffffff,%rdx
3ea9(3): mov %rax,%rsi
3eac(9): mov $0x0,0x4(%rsp)
3eb5(9): mov $0x0,0xc(%rsp)
3ebe(9): mov $0x0,0x14(%rsp)
3ec7(9): mov $0x0,0x1c(%rsp)
3ed0(9): mov $0x0,0x24(%rsp)
3ed9(9): mov $0x0,0x2c(%rsp)
3ee2(8): mov $0x0,0x34(%rsp)
3eea(5): call 0xfffffa46(%rip)
3eef(5): mov 0x38(%rsp),%rcx
3ef4(9): xor $0x28,%rcx
3efd(2): jnz 0xc(%rip)
3eff(4): add $0x48,%rsp
3f03(1): ret near (%rsp)
3f04(5): call 0xffffd5ac(%rip)
3f09(5): call 0xffffd687(%rip)

"quotearg_n_style_mem" :
3f10(4): sub $0x48,%rsp
3f14(3): mov %rdx,%rax
3f17(3): mov %rcx,%rdx
3f1a(9): mov $0x28,%rcx
3f23(5): mov %rcx,0x38(%rsp)
3f28(2): xor %ecx,%ecx
3f2a(3): cmp $0xa,%esi
3f2d(2): jz 0x63(%rip)
3f2f(3): mov %esi,(%rsp)
3f32(3): mov %rsp,%rcx
3f35(3): mov %rax,%rsi
3f38(9): mov $0x0,0x4(%rsp)
3f41(9): mov $0x0,0xc(%rsp)
3f4a(9): mov $0x0,0x14(%rsp)
3f53(9): mov $0x0,0x1c(%rsp)
3f5c(9): mov $0x0,0x24(%rsp)
3f65(9): mov $0x0,0x2c(%rsp)
3f6e(8): mov $0x0,0x34(%rsp)
3f76(5): call 0xfffff9ba(%rip)
3f7b(5): mov 0x38(%rsp),%rdx
3f80(9): xor $0x28,%rdx
3f89(2): jnz 0xc(%rip)
3f8b(4): add $0x48,%rsp
3f8f(1): ret near (%rsp)
3f90(5): call 0xffffd520(%rip)
3f95(5): call 0xffffd5fb(%rip)

"quotearg_style" :
3fa0(3): mov %rsi,%rdx
3fa3(2): mov %edi,%esi
3fa5(2): xor %edi,%edi
3fa7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3fb0(3): mov %rdx,%rcx
3fb3(3): mov %rsi,%rdx
3fb6(2): mov %edi,%esi
3fb8(2): xor %edi,%edi
3fba(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3fc0(4): sub $0x48,%rsp
3fc4(2): mov %edx,%ecx
3fc6(9): mov $0x28,%rax
3fcf(5): mov %rax,0x38(%rsp)
3fd4(2): xor %eax,%eax
3fd6(7): mov 0x204413(%rip),%rax
3fdd(3): mov %rsp,%r8
3fe0(3): and $0x1f,%ecx
3fe3(8): movdqa 0x2043d5(%rip),%xmm0
3feb(5): mov %rax,0x30(%rsp)
3ff0(2): mov %edx,%eax
3ff2(4): movaps %xmm0,(%rsp)
3ff6(3): shr $0x5,%al
3ff9(3): movzx %al,%eax
3ffc(5): lea 0x8(%r8,%rax,4),%r9
4001(8): movdqa 0x2043c7(%rip),%xmm0
4009(5): movaps %xmm0,0x10(%rsp)
400e(8): movdqa 0x2043ca(%rip),%xmm0
4016(5): movaps %xmm0,0x20(%rsp)
401b(3): mov (%r9),%edx
401e(2): mov %edx,%eax
4020(2): shr %cl,%eax
4022(2): not %eax
4024(3): and $0x1,%eax
4027(2): shl/sal %cl,%eax
4029(3): mov %r8,%rcx
402c(2): xor %edx,%eax
402e(3): mov %rsi,%rdx
4031(3): mov %rdi,%rsi
4034(3): mov %eax,(%r9)
4037(2): xor %edi,%edi
4039(5): call 0xfffff8f7(%rip)
403e(5): mov 0x38(%rsp),%rsi
4043(9): xor $0x28,%rsi
404c(2): jnz 0x7(%rip)
404e(4): add $0x48,%rsp
4052(1): ret near (%rsp)
4053(5): call 0xffffd53d(%rip)

"quotearg_char" :
4060(4): movsx %sil,%edx
4064(7): mov $0xffffffff,%rsi
406b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4070(5): mov $0x3a,%edx
4075(7): mov $0xffffffff,%rsi
407c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4090(5): mov $0x3a,%edx
4095(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
40a0(4): sub $0x48,%rsp
40a4(3): mov %rdx,%rax
40a7(9): mov $0x28,%rdx
40b0(5): mov %rdx,0x38(%rsp)
40b5(2): xor %edx,%edx
40b7(3): cmp $0xa,%esi
40ba(2): jz 0x6a(%rip)
40bc(3): mov %esi,(%rsp)
40bf(3): mov %rsp,%rcx
40c2(7): mov $0xffffffff,%rdx
40c9(3): mov %rax,%rsi
40cc(9): mov $0x0,0x4(%rsp)
40d5(9): mov $0x4000000,0xc(%rsp)
40de(9): mov $0x0,0x14(%rsp)
40e7(9): mov $0x0,0x1c(%rsp)
40f0(9): mov $0x0,0x24(%rsp)
40f9(9): mov $0x0,0x2c(%rsp)
4102(8): mov $0x0,0x34(%rsp)
410a(5): call 0xfffff826(%rip)
410f(5): mov 0x38(%rsp),%rcx
4114(9): xor $0x28,%rcx
411d(2): jnz 0xc(%rip)
411f(4): add $0x48,%rsp
4123(1): ret near (%rsp)
4124(5): call 0xffffd38c(%rip)
4129(5): call 0xffffd467(%rip)

"quotearg_n_custom_mem" :
4130(4): sub $0x48,%rsp
4134(3): mov %rcx,%r9
4137(7): mov 0x2042b2(%rip),%rcx
413e(8): movdqa 0x20427a(%rip),%xmm0
4146(9): mov $0x28,%rax
414f(5): mov %rax,0x38(%rsp)
4154(2): xor %eax,%eax
4156(4): movaps %xmm0,(%rsp)
415a(3): test %rsi,%rsi
415d(5): mov %rcx,0x30(%rsp)
4162(7): mov $0xa,(%rsp)
4169(8): movdqa 0x20425f(%rip),%xmm0
4171(5): movaps %xmm0,0x10(%rsp)
4176(8): movdqa 0x204262(%rip),%xmm0
417e(5): movaps %xmm0,0x20(%rsp)
4183(2): jz 0x34(%rip)
4185(3): test %rdx,%rdx
4188(2): jz 0x2f(%rip)
418a(5): mov %rsi,0x28(%rsp)
418f(5): mov %rdx,0x30(%rsp)
4194(3): mov %rsp,%rcx
4197(3): mov %r8,%rdx
419a(3): mov %r9,%rsi
419d(5): call 0xfffff793(%rip)
41a2(5): mov 0x38(%rsp),%rdi
41a7(9): xor $0x28,%rdi
41b0(2): jnz 0xc(%rip)
41b2(4): add $0x48,%rsp
41b6(1): ret near (%rsp)
41b7(5): call 0xffffd2f9(%rip)
41bc(5): call 0xffffd3d4(%rip)

"quotearg_n_custom" :
41d0(7): mov $0xffffffff,%r8
41d7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
41e0(3): mov %rdx,%rcx
41e3(7): mov $0xffffffff,%r8
41ea(3): mov %rsi,%rdx
41ed(3): mov %rdi,%rsi
41f0(2): xor %edi,%edi
41f2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4200(3): mov %rcx,%r8
4203(3): mov %rdx,%rcx
4206(3): mov %rsi,%rdx
4209(3): mov %rdi,%rsi
420c(2): xor %edi,%edi
420e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4220(7): lea 0x203df9(%rip),%rcx
4227(5): jmp 0xfffff709(%rip)

"quote_mem" :
4230(7): lea 0x203de9(%rip),%rcx
4237(3): mov %rsi,%rdx
423a(3): mov %rdi,%rsi
423d(2): xor %edi,%edi
423f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4250(7): lea 0x203dc9(%rip),%rcx
4257(7): mov $0xffffffff,%rdx
425e(5): jmp 0xfffff6d2(%rip)

"quote" :
4270(7): lea 0x203da9(%rip),%rcx
4277(3): mov %rdi,%rsi
427a(7): mov $0xffffffff,%rdx
4281(2): xor %edi,%edi
4283(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4290(2): push %r15
4292(2): push %r14
4294(2): push %r13
4296(2): push %r12
4298(3): mov %r9,%r12
429b(1): push %rbp
429c(1): push %rbx
429d(3): mov %rdi,%rbp
42a0(3): mov %r8,%rbx
42a3(4): sub $0x28,%rsp
42a7(3): test %rsi,%rsi
42aa(6): jz 0x11e(%rip)
42b0(3): mov %rdx,%r8
42b3(7): lea 0x1a6e(%rip),%rdx
42ba(3): mov %rcx,%r9
42bd(2): xor %eax,%eax
42bf(3): mov %rsi,%rcx
42c2(5): mov $0x1,%esi
42c7(5): call 0xffffd499(%rip)
42cc(7): lea 0x1a68(%rip),%rsi
42d3(2): xor %edi,%edi
42d5(5): mov $0x5,%edx
42da(5): call 0xffffd286(%rip)
42df(7): lea 0x1d7a(%rip),%rdx
42e6(3): mov %rax,%rcx
42e9(6): mov $0x7e3,%r8d
42ef(5): mov $0x1,%esi
42f4(3): mov %rbp,%rdi
42f7(2): xor %eax,%eax
42f9(5): call 0xffffd467(%rip)
42fe(7): lea 0x1ac3(%rip),%rsi
4305(2): xor %edi,%edi
4307(5): mov $0x5,%edx
430c(5): call 0xffffd254(%rip)
4311(3): mov %rbp,%rsi
4314(3): mov %rax,%rdi
4317(5): call 0xffffd2f9(%rip)
431c(4): cmp $0x9,%r12
4320(6): jnbe 0x340(%rip)
4326(7): lea 0x1cfb(%rip),%rdx
432d(4): movsxd 0x0(%rdx,%r12,4),%rax
4331(3): add %rdx,%rax
4334(2): jmp %rax
4336(a): nop 0x0(%rax,%rax,1)
4340(4): mov 0x38(%rbx),%r9
4344(4): mov 0x10(%rbx),%rax
4348(7): lea 0x1be9(%rip),%rsi
434f(4): mov 0x8(%rbx),%r8
4353(5): mov $0x5,%edx
4358(2): xor %edi,%edi
435a(4): mov 0x30(%rbx),%r13
435e(4): mov 0x28(%rbx),%r12
4362(5): mov %r9,0x10(%rsp)
4367(4): mov 0x20(%rbx),%r15
436b(4): mov 0x18(%rbx),%r14
436f(4): mov %rax,(%rsp)
4373(5): mov %r8,0x8(%rsp)
4378(3): mov (%rbx),%rbx
437b(5): call 0xffffd1e5(%rip)
4380(4): sub $0x8,%rsp
4384(5): mov 0x18(%rsp),%r9
4389(3): mov %rax,%rdx
438c(3): mov %rbx,%rcx
438f(5): mov $0x1,%esi
4394(3): mov %rbp,%rdi
4397(2): xor %eax,%eax
4399(2): push %r9
439b(2): push %r13
439d(2): push %r12
439f(2): push %r15
43a1(2): push %r14
43a3(5): mov 0x30(%rsp),%r9
43a8(5): mov 0x38(%rsp),%r8
43ad(5): call 0xffffd3b3(%rip)
43b2(4): add $0x30,%rsp
43b6(4): add $0x28,%rsp
43ba(1): pop %rbx
43bb(1): pop %rbp
43bc(2): pop %r12
43be(2): pop %r13
43c0(2): pop %r14
43c2(2): pop %r15
43c4(1): ret near (%rsp)
43c5(3): nop (%rax)
43c8(3): mov %rcx,%r8
43cb(3): mov %rdx,%rcx
43ce(7): lea 0x195f(%rip),%rdx
43d5(5): mov $0x1,%esi
43da(2): xor %eax,%eax
43dc(5): call 0xffffd384(%rip)
43e1(5): jmp 0xfffffeeb(%rip)
43e6(a): nop 0x0(%rax,%rax,1)
43f0(4): mov 0x40(%rbx),%r10
43f4(4): mov 0x38(%rbx),%r9
43f8(7): lea 0x1b69(%rip),%rsi
43ff(4): mov 0x10(%rbx),%rax
4403(4): mov 0x8(%rbx),%r8
4407(5): mov $0x5,%edx
440c(4): mov 0x30(%rbx),%r13
4410(4): mov 0x28(%rbx),%r12
4414(4): mov 0x20(%rbx),%r15
4418(4): mov 0x18(%rbx),%r14
441c(3): mov (%rbx),%rbx
441f(5): mov %r10,0x18(%rsp)
4424(5): mov %r9,0x10(%rsp)
4429(4): mov %rax,(%rsp)
442d(5): mov %r8,0x8(%rsp)
4432(2): xor %edi,%edi
4434(5): call 0xffffd12c(%rip)
4439(5): mov 0x18(%rsp),%r10
443e(2): push %r10
4440(5): jmp 0xffffff44(%rip)
4445(3): nop (%rax)
4448(3): mov (%rbx),%rbx
444b(7): lea 0x18ed(%rip),%rsi
4452(5): mov $0x5,%edx
4457(2): xor %edi,%edi
4459(5): call 0xffffd107(%rip)
445e(4): add $0x28,%rsp
4462(3): mov %rbx,%rcx
4465(3): mov %rbp,%rdi
4468(1): pop %rbx
4469(1): pop %rbp
446a(2): pop %r12
446c(2): pop %r13
446e(2): pop %r14
4470(2): pop %r15
4472(3): mov %rax,%rdx
4475(5): mov $0x1,%esi
447a(2): xor %eax,%eax
447c(5): jmp 0xffffd2e4(%rip)
4481(7): nop 0x0(%rax)
4488(4): mov 0x8(%rbx),%r12
448c(7): lea 0x18bc(%rip),%rsi
4493(3): mov (%rbx),%rbx
4496(5): mov $0x5,%edx
449b(2): xor %edi,%edi
449d(5): call 0xffffd0c3(%rip)
44a2(4): add $0x28,%rsp
44a6(3): mov %r12,%r8
44a9(3): mov %rbx,%rcx
44ac(3): mov %rbp,%rdi
44af(3): mov %rax,%rdx
44b2(5): mov $0x1,%esi
44b7(1): pop %rbx
44b8(1): pop %rbp
44b9(2): pop %r12
44bb(2): pop %r13
44bd(2): pop %r14
44bf(2): pop %r15
44c1(2): xor %eax,%eax
44c3(5): jmp 0xffffd29d(%rip)
44c8(8): nop 0x0(%rax,%rax,1)
44d0(4): mov 0x10(%rbx),%r13
44d4(4): mov 0x8(%rbx),%r12
44d8(7): lea 0x1887(%rip),%rsi
44df(3): mov (%rbx),%rbx
44e2(5): mov $0x5,%edx
44e7(2): xor %edi,%edi
44e9(5): call 0xffffd077(%rip)
44ee(4): add $0x28,%rsp
44f2(3): mov %r13,%r9
44f5(3): mov %r12,%r8
44f8(3): mov %rbx,%rcx
44fb(3): mov %rbp,%rdi
44fe(3): mov %rax,%rdx
4501(1): pop %rbx
4502(1): pop %rbp
4503(2): pop %r12
4505(2): pop %r13
4507(2): pop %r14
4509(2): pop %r15
450b(5): mov $0x1,%esi
4510(2): xor %eax,%eax
4512(5): jmp 0xffffd24e(%rip)
4517(9): nop 0x0(%rax,%rax,1)
4520(7): lea 0x1971(%rip),%rsi
4527(5): mov $0x5,%edx
452c(2): xor %edi,%edi
452e(4): mov 0x18(%rbx),%r14
4532(4): mov 0x10(%rbx),%r13
4536(4): mov 0x8(%rbx),%r12
453a(3): mov (%rbx),%rbx
453d(5): call 0xffffd023(%rip)
4542(4): sub $0x8,%rsp
4546(2): push %r14
4548(3): mov %rax,%rdx
454b(3): mov %r13,%r9
454e(3): mov %r12,%r8
4551(3): mov %rbx,%rcx
4554(3): mov %rbp,%rdi
4557(5): mov $0x1,%esi
455c(2): xor %eax,%eax
455e(5): call 0xffffd202(%rip)
4563(1): pop %rax
4564(1): pop %rdx
4565(4): add $0x28,%rsp
4569(1): pop %rbx
456a(1): pop %rbp
456b(2): pop %r12
456d(2): pop %r13
456f(2): pop %r14
4571(2): pop %r15
4573(1): ret near (%rsp)
4574(4): nop 0x0(%rax)
4578(4): mov 0x20(%rbx),%r15
457c(7): lea 0x1935(%rip),%rsi
4583(5): mov $0x5,%edx
4588(2): xor %edi,%edi
458a(4): mov 0x18(%rbx),%r14
458e(4): mov 0x10(%rbx),%r13
4592(4): mov 0x8(%rbx),%r12
4596(3): mov (%rbx),%rbx
4599(5): call 0xffffcfc7(%rip)
459e(2): push %r15
45a0(2): jmp 0xffffffa6(%rip)
45a2(6): nop 0x0(%rax,%rax,1)
45a8(4): mov 0x8(%rbx),%r8
45ac(4): mov 0x28(%rbx),%r12
45b0(7): lea 0x1929(%rip),%rsi
45b7(4): mov 0x20(%rbx),%r15
45bb(4): mov 0x18(%rbx),%r14
45bf(5): mov $0x5,%edx
45c4(4): mov 0x10(%rbx),%r13
45c8(2): xor %edi,%edi
45ca(3): mov (%rbx),%rbx
45cd(4): mov %r8,(%rsp)
45d1(5): call 0xffffcf8f(%rip)
45d6(4): sub $0x8,%rsp
45da(3): mov %r13,%r9
45dd(2): push %r12
45df(2): push %r15
45e1(2): push %r14
45e3(5): mov 0x20(%rsp),%r8
45e8(3): mov %rbx,%rcx
45eb(3): mov %rax,%rdx
45ee(3): mov %rbp,%rdi
45f1(5): mov $0x1,%esi
45f6(2): xor %eax,%eax
45f8(5): call 0xffffd168(%rip)
45fd(4): add $0x20,%rsp
4601(4): add $0x28,%rsp
4605(1): pop %rbx
4606(1): pop %rbp
4607(2): pop %r12
4609(2): pop %r13
460b(2): pop %r14
460d(2): pop %r15
460f(1): ret near (%rsp)
4610(4): mov 0x10(%rbx),%r9
4614(4): mov 0x30(%rbx),%r13
4618(7): lea 0x18e9(%rip),%rsi
461f(4): mov 0x28(%rbx),%r12
4623(4): mov 0x20(%rbx),%r15
4627(5): mov $0x5,%edx
462c(4): mov 0x18(%rbx),%r14
4630(4): mov 0x8(%rbx),%r8
4634(2): xor %edi,%edi
4636(5): mov %r9,0x8(%rsp)
463b(3): mov (%rbx),%rbx
463e(4): mov %r8,(%rsp)
4642(5): call 0xffffcf1e(%rip)
4647(2): push %r13
4649(2): push %r12
464b(2): push %r15
464d(2): push %r14
464f(5): mov 0x28(%rsp),%r9
4654(2): jmp 0xffffff8f(%rip)
4656(a): nop 0x0(%rax,%rax,1)
4660(4): mov 0x40(%rbx),%r10
4664(4): mov 0x38(%rbx),%r9
4668(5): mov $0x5,%edx
466d(4): mov 0x10(%rbx),%rax
4671(4): mov 0x8(%rbx),%r8
4675(7): lea 0x1924(%rip),%rsi
467c(4): mov 0x30(%rbx),%r13
4680(4): mov 0x28(%rbx),%r12
4684(4): mov 0x20(%rbx),%r15
4688(4): mov 0x18(%rbx),%r14
468c(5): mov %r10,0x18(%rsp)
4691(5): mov %r9,0x10(%rsp)
4696(4): mov %rax,(%rsp)
469a(5): mov %r8,0x8(%rsp)
469f(3): mov (%rbx),%rbx
46a2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
46b0(3): xor %r9d,%r9d
46b3(4): cmp $0x0,(%r8)
46b7(2): jz 0x14(%rip)
46b9(7): nop 0x0(%rax)
46c0(4): add $0x1,%r9
46c4(5): cmp $0x0,0x0(%r8,%r9,8)
46c9(2): jnz 0xfffffff7(%rip)
46cb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
46d0(4): sub $0x68,%rsp
46d4(3): mov %r8,%r10
46d7(3): xor %r9d,%r9d
46da(9): mov $0x28,%rax
46e3(5): mov %rax,0x58(%rsp)
46e8(2): xor %eax,%eax
46ea(3): mov %rsp,%r8
46ed(3): nop (%rax)
46f0(3): mov (%r10),%eax
46f3(3): cmp $0x2f,%eax
46f6(2): jnbe 0x44(%rip)
46f8(3): mov %eax,%r11d
46fb(4): add 0x10(%r10),%r11
46ff(3): add $0x8,%eax
4702(3): mov %eax,(%r10)
4705(3): mov (%r11),%rax
4708(3): test %rax,%rax
470b(4): mov %rax,0x0(%r8,%r9,8)
470f(2): jz 0xc(%rip)
4711(4): add $0x1,%r9
4715(4): cmp $0xa,%r9
4719(2): jnz 0xffffffd7(%rip)
471b(5): call 0xfffffb75(%rip)
4720(5): mov 0x58(%rsp),%rax
4725(9): xor $0x28,%rax
472e(2): jnz 0x7(%rip)
4730(4): add $0x68,%rsp
4734(1): ret near (%rsp)
4735(5): call 0xffffce5b(%rip)
473a(4): mov 0x8(%r10),%r11
473e(4): lea 0x8(%r11),%rax
4742(4): mov %rax,0x8(%r10)
4746(2): jmp 0xffffffbf(%rip)

"version_etc" :
4750(1): push %rbp
4751(1): push %rbx
4752(6): mov $0x20,%r10d
4758(3): xor %r11d,%r11d
475b(7): sub $0xb8,%rsp
4762(9): mov $0x28,%rax
476b(5): mov %rax,0x78(%rsp)
4770(2): xor %eax,%eax
4772(8): lea 0xd0(%rsp),%rax
477a(8): mov %r8,0xa0(%rsp)
4782(8): lea 0xd0(%rsp),%rbx
478a(5): lea 0x20(%rsp),%r8
478f(8): mov %r9,0xa8(%rsp)
4797(8): mov $0x20,0x8(%rsp)
479f(5): mov %rax,0x10(%rsp)
47a4(8): lea 0x80(%rsp),%rax
47ac(3): xor %r9d,%r9d
47af(5): mov %rax,0x18(%rsp)
47b4(3): mov %rax,%rbp
47b7(9): nop 0x0(%rax,%rax,1)
47c0(4): cmp $0x2f,%r10d
47c4(2): jnbe 0x58(%rip)
47c6(3): mov %r10d,%eax
47c9(6): mov $0x1,%r11d
47cf(4): add $0x8,%r10d
47d3(3): add %rbp,%rax
47d6(3): mov (%rax),%rax
47d9(3): test %rax,%rax
47dc(4): mov %rax,0x0(%r8,%r9,8)
47e0(2): jz 0xc(%rip)
47e2(4): add $0x1,%r9
47e6(4): cmp $0xa,%r9
47ea(2): jnz 0xffffffd6(%rip)
47ec(3): test %r11b,%r11b
47ef(2): jnz 0x26(%rip)
47f1(5): call 0xfffffa9f(%rip)
47f6(5): mov 0x78(%rsp),%rax
47fb(9): xor $0x28,%rax
4804(2): jnz 0xc(%rip)
4806(7): add $0xb8,%rsp
480d(1): pop %rbx
480e(1): pop %rbp
480f(1): ret near (%rsp)
4810(5): call 0xffffcd80(%rip)
4815(5): mov %r10d,0x8(%rsp)
481a(2): jmp 0xffffffd7(%rip)
481c(3): mov %rbx,%rax
481f(4): add $0x8,%rbx
4823(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4830(1): push %rbx
4831(7): lea 0x154a(%rip),%rsi
4838(5): mov $0x5,%edx
483d(2): xor %edi,%edi
483f(5): call 0xffffcd21(%rip)
4844(7): lea 0x154c(%rip),%rdx
484b(3): mov %rax,%rsi
484e(5): mov $0x1,%edi
4853(2): xor %eax,%eax
4855(5): call 0xffffce9b(%rip)
485a(7): lea 0x154c(%rip),%rsi
4861(5): mov $0x5,%edx
4866(2): xor %edi,%edi
4868(5): call 0xffffccf8(%rip)
486d(7): lea 0xdcc(%rip),%rcx
4874(7): lea 0x924(%rip),%rdx
487b(3): mov %rax,%rsi
487e(5): mov $0x1,%edi
4883(2): xor %eax,%eax
4885(5): call 0xffffce6b(%rip)
488a(7): mov 0x2039b7(%rip),%rbx
4891(7): lea 0x1748(%rip),%rsi
4898(2): xor %edi,%edi
489a(5): mov $0x5,%edx
489f(5): call 0xffffccc1(%rip)
48a4(3): mov %rbx,%rsi
48a7(3): mov %rax,%rdi
48aa(1): pop %rbx
48ab(5): jmp 0xffffcd65(%rip)

"xmalloc" :
48b0(1): push %rbx
48b1(3): mov %rdi,%rbx
48b4(5): call 0xffffcdcc(%rip)
48b9(3): test %rax,%rax
48bc(2): jnz 0x7(%rip)
48be(3): test %rbx,%rbx
48c1(2): jnz 0x4(%rip)
48c3(1): pop %rbx
48c4(1): ret near (%rsp)
48c5(5): call 0x23b(%rip)

"xnmalloc" :
48d0(3): mov %rdi,%rax
48d3(3): mul %rax,%rsi,%rdx
48d6(3): mov %rax,%rdi
48d9(3): seto %al
48dc(3): test %rdi,%rdi
48df(2): js 0xc(%rip)
48e1(3): movzx %al,%eax
48e4(3): test %rax,%rax
48e7(2): jnz 0x4(%rip)
48e9(2): jmp 0xffffffc7(%rip)
48eb(4): sub $0x8,%rsp
48ef(5): call 0x211(%rip)

"xrealloc" :
4910(3): test %rsi,%rsi
4913(1): push %rbx
4914(3): mov %rsi,%rbx
4917(2): jnz 0x7(%rip)
4919(3): test %rdi,%rdi
491c(2): jnz 0x1c(%rip)
491e(3): mov %rbx,%rsi
4921(5): call 0xffffcdaf(%rip)
4926(3): test %rax,%rax
4929(2): jnz 0x7(%rip)
492b(3): test %rbx,%rbx
492e(2): jnz 0x13(%rip)
4930(1): pop %rbx
4931(1): ret near (%rsp)
4932(6): nop 0x0(%rax,%rax,1)
4938(5): call 0xffffcb68(%rip)
493d(2): xor %eax,%eax
493f(1): pop %rbx
4940(1): ret near (%rsp)
4941(5): call 0x1bf(%rip)

"xnrealloc" :
4950(3): mov %rsi,%rax
4953(3): mul %rax,%rdx,%rdx
4956(3): mov %rax,%rsi
4959(3): seto %al
495c(3): test %rsi,%rsi
495f(2): js 0xc(%rip)
4961(3): movzx %al,%eax
4964(3): test %rax,%rax
4967(2): jnz 0x4(%rip)
4969(2): jmp 0xffffffa7(%rip)
496b(4): sub $0x8,%rsp
496f(5): call 0x191(%rip)

"x2nrealloc" :
4980(3): test %rdi,%rdi
4983(3): mov %rdx,%r9
4986(3): mov (%rsi),%rcx
4989(2): jz 0x37(%rip)
498b(2): xor %edx,%edx
498d(a): mov $0x6148914691236517204,%rax
4997(3): div %r9,%rax
499a(3): cmp %rcx,%rax
499d(2): jbe 0x3e(%rip)
499f(3): mov %rcx,%rax
49a2(3): shr $0x1,%rax
49a5(5): lea 0x1(%rax,%rcx,1),%rcx
49aa(3): mov %rcx,(%rsi)
49ad(4): imul %r9,%rcx
49b1(3): mov %rcx,%rsi
49b4(5): jmp 0xffffff5c(%rip)
49b9(7): nop 0x0(%rax)
49c0(3): test %rcx,%rcx
49c3(2): jz 0x25(%rip)
49c5(3): mov %rcx,%rax
49c8(3): mul %rax,%r9,%rdx
49cb(3): seto %dl
49ce(3): test %rax,%rax
49d1(3): movzx %dl,%edx
49d4(2): js 0x7(%rip)
49d6(3): test %rdx,%rdx
49d9(2): jz 0xffffffd1(%rip)
49db(4): sub $0x8,%rsp
49df(5): call 0x121(%rip)
49e4(4): nop 0x0(%rax)
49e8(2): xor %edx,%edx
49ea(5): mov $0x80,%eax
49ef(3): xor %r8d,%r8d
49f2(3): div %r9,%rax
49f5(3): test %rax,%rax
49f8(4): setz %r8b
49fc(4): lea 0x0(%r8,%rax,1),%rcx
4a00(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4a10(3): test %rdi,%rdi
4a13(3): mov (%rsi),%rax
4a16(2): jz 0x2a(%rip)
4a18(a): mov $0x6148914691236517203,%rdx
4a22(3): cmp %rdx,%rax
4a25(2): jnbe 0x2c(%rip)
4a27(3): mov %rax,%rdx
4a2a(3): shr $0x1,%rdx
4a2d(5): lea 0x1(%rdx,%rax,1),%rax
4a32(3): mov %rax,(%rsi)
4a35(3): mov %rax,%rsi
4a38(5): jmp 0xfffffed8(%rip)
4a3d(3): nop (%rax)
4a40(3): test %rax,%rax
4a43(5): mov $0x80,%edx
4a48(4): cmove %rdx,%rax
4a4c(3): test %rax,%rax
4a4f(2): jns 0xffffffe3(%rip)
4a51(4): sub $0x8,%rsp
4a55(5): call 0xab(%rip)

"xzalloc" :
4a60(1): push %rbx
4a61(3): mov %rdi,%rbx
4a64(5): call 0xfffffe4c(%rip)
4a69(3): mov %rbx,%rdx
4a6c(2): xor %esi,%esi
4a6e(3): mov %rax,%rdi
4a71(1): pop %rbx
4a72(5): jmp 0xffffcb7e(%rip)

"xcalloc" :
4a80(3): mov %rdi,%rax
4a83(4): sub $0x8,%rsp
4a87(3): mul %rax,%rsi,%rdx
4a8a(3): seto %dl
4a8d(3): test %rax,%rax
4a90(2): js 0x19(%rip)
4a92(3): movzx %dl,%edx
4a95(3): test %rdx,%rdx
4a98(2): jnz 0x11(%rip)
4a9a(5): call 0xffffcb86(%rip)
4a9f(3): test %rax,%rax
4aa2(2): jz 0x7(%rip)
4aa4(4): add $0x8,%rsp
4aa8(1): ret near (%rsp)
4aa9(5): call 0x57(%rip)

"xmemdup" :
4ab0(1): push %rbp
4ab1(1): push %rbx
4ab2(3): mov %rdi,%rbp
4ab5(3): mov %rsi,%rdi
4ab8(3): mov %rsi,%rbx
4abb(4): sub $0x8,%rsp
4abf(5): call 0xfffffdf1(%rip)
4ac4(4): add $0x8,%rsp
4ac8(3): mov %rbx,%rdx
4acb(3): mov %rbp,%rsi
4ace(1): pop %rbx
4acf(1): pop %rbp
4ad0(3): mov %rax,%rdi
4ad3(5): jmp 0xffffcb7d(%rip)

"xstrdup" :
4ae0(1): push %rbx
4ae1(3): mov %rdi,%rbx
4ae4(5): call 0xffffca9c(%rip)
4ae9(3): mov %rbx,%rdi
4aec(4): lea 0x1(%rax),%rsi
4af0(1): pop %rbx
4af1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4b00(7): lea 0x1588(%rip),%rsi
4b07(4): sub $0x8,%rsp
4b0b(5): mov $0x5,%edx
4b10(2): xor %edi,%edi
4b12(5): call 0xffffca4e(%rip)
4b17(6): mov 0x2034fb(%rip),%edi
4b1d(7): lea 0xcf0(%rip),%rdx
4b24(3): mov %rax,%rcx
4b27(2): xor %esi,%esi
4b29(2): xor %eax,%eax
4b2b(5): call 0xffffcbd5(%rip)
4b30(5): call 0xffffc980(%rip)

"rpl_mbrtowc" :
4b40(2): push %r13
4b42(2): push %r12
4b44(3): mov %rsi,%r13
4b47(1): push %rbp
4b48(1): push %rbx
4b49(3): mov %rdi,%rbx
4b4c(3): mov %rdx,%r12
4b4f(4): sub $0x18,%rsp
4b53(9): mov $0x28,%rax
4b5c(5): mov %rax,0x8(%rsp)
4b61(2): xor %eax,%eax
4b63(5): lea 0x4(%rsp),%rax
4b68(3): test %rdi,%rdi
4b6b(4): cmove %rax,%rbx
4b6f(3): mov %rbx,%rdi
4b72(5): call 0xffffca3e(%rip)
4b77(4): cmp $0xfffffffd,%rax
4b7b(3): mov %rax,%rbp
4b7e(2): jbe 0x22(%rip)
4b80(3): test %r12,%r12
4b83(2): jz 0x1d(%rip)
4b85(2): xor %edi,%edi
4b87(5): call 0x339(%rip)
4b8c(2): test %al,%al
4b8e(2): jnz 0x12(%rip)
4b90(5): movzx 0x0(%r13),%eax
4b95(5): mov $0x1,%ebp
4b9a(2): mov %eax,(%rbx)
4b9c(4): nop 0x0(%rax)
4ba0(5): mov 0x8(%rsp),%rdx
4ba5(9): xor $0x28,%rdx
4bae(3): mov %rbp,%rax
4bb1(2): jnz 0xd(%rip)
4bb3(4): add $0x18,%rsp
4bb7(1): pop %rbx
4bb8(1): pop %rbp
4bb9(2): pop %r12
4bbb(2): pop %r13
4bbd(1): ret near (%rsp)
4bbe(5): call 0xffffc9d2(%rip)

"str2sig" :
4bd0(2): push %r13
4bd2(2): push %r12
4bd4(3): mov %rsi,%r13
4bd7(1): push %rbp
4bd8(1): push %rbx
4bd9(2): xor %ebx,%ebx
4bdb(3): mov %rdi,%r12
4bde(7): lea 0x20349f(%rip),%rbp
4be5(4): sub $0x18,%rsp
4be9(9): mov $0x28,%rax
4bf2(5): mov %rax,0x8(%rsp)
4bf7(2): xor %eax,%eax
4bf9(3): movsx (%rdi),%eax
4bfc(3): sub $0x30,%eax
4bff(3): cmp $0x9,%eax
4c02(2): jnbe 0x1a(%rip)
4c04(2): jmp 0x5c(%rip)
4c06(a): nop 0x0(%rax,%rax,1)
4c10(3): add $0x1,%ebx
4c13(4): add $0xc,%rbp
4c17(3): cmp $0x23,%ebx
4c1a(2): jz 0x76(%rip)
4c1c(3): mov %r12,%rsi
4c1f(3): mov %rbp,%rdi
4c22(5): call 0xffffca0e(%rip)
4c27(2): test %eax,%eax
4c29(2): jnz 0xffffffe7(%rip)
4c2b(4): lea 0x0(%rbx,%rbx,2),%rdx
4c2f(7): lea 0x20344a(%rip),%rax
4c36(3): mov 0x0(%rax,%rdx,4),%eax
4c39(4): mov %eax,0x0(%r13)
4c3d(3): sar $0x1f,%eax
4c40(5): mov 0x8(%rsp),%rcx
4c45(9): xor $0x28,%rcx
4c4e(6): jnz 0x102(%rip)
4c54(4): add $0x18,%rsp
4c58(1): pop %rbx
4c59(1): pop %rbp
4c5a(2): pop %r12
4c5c(2): pop %r13
4c5e(1): ret near (%rsp)
4c5f(1): nop 
4c60(5): mov $0xa,%edx
4c65(3): mov %rsp,%rsi
4c68(5): call 0xffffc9d8(%rip)
4c6d(4): mov (%rsp),%rdx
4c71(3): cmp $0x0,(%rdx)
4c74(2): jnz 0x8(%rip)
4c76(4): cmp $0x40,%rax
4c7a(2): jle 0xffffffbf(%rip)
4c7c(8): mov $0xffffffff,0x0(%r13)
4c84(5): mov $0xffffffff,%eax
4c89(2): jmp 0xffffffb7(%rip)
4c8b(5): nop 0x0(%rax,%rax,1)
4c90(5): call 0xffffcaa0(%rip)
4c95(2): mov %eax,%ebp
4c97(5): call 0xffffcad9(%rip)
4c9c(2): test %ebp,%ebp
4c9e(2): mov %eax,%ebx
4ca0(2): jle 0x1c(%rip)
4ca2(7): lea 0x13f7(%rip),%rdi
4ca9(5): mov $0x5,%ecx
4cae(3): mov %r12,%rsi
4cb1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4cb3(3): setnbe %al
4cb6(2): sbb $0x0,%al
4cb8(2): test %al,%al
4cba(2): jz 0x59(%rip)
4cbc(2): test %ebx,%ebx
4cbe(2): jle 0xffffffbe(%rip)
4cc0(7): lea 0x13df(%rip),%rdi
4cc7(5): mov $0x5,%ecx
4ccc(3): mov %r12,%rsi
4ccf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4cd1(3): setnbe %al
4cd4(2): sbb $0x0,%al
4cd6(2): test %al,%al
4cd8(2): jnz 0xffffffa4(%rip)
4cda(5): lea 0x5(%r12),%rdi
4cdf(5): mov $0xa,%edx
4ce4(3): mov %rsp,%rsi
4ce7(5): call 0xffffc959(%rip)
4cec(4): mov (%rsp),%rdx
4cf0(3): cmp $0x0,(%rdx)
4cf3(2): jnz 0xffffff89(%rip)
4cf5(2): sub %ebx,%ebp
4cf7(3): movsxd %ebp,%rbp
4cfa(3): cmp %rbp,%rax
4cfd(6): jl 0xffffff7f(%rip)
4d03(3): test %rax,%rax
4d06(6): jnle 0xffffff76(%rip)
4d0c(2): add %ebx,%eax
4d0e(5): jmp 0xffffff2b(%rip)
4d13(5): lea 0x5(%r12),%rdi
4d18(5): mov $0xa,%edx
4d1d(3): mov %rsp,%rsi
4d20(5): call 0xffffc920(%rip)
4d25(4): mov (%rsp),%rdx
4d29(3): cmp $0x0,(%rdx)
4d2c(6): jnz 0xffffff50(%rip)
4d32(3): test %rax,%rax
4d35(6): js 0xffffff47(%rip)
4d3b(2): sub %ebp,%ebx
4d3d(3): movsxd %ebx,%rdx
4d40(3): cmp %rdx,%rax
4d43(6): jnle 0xffffff39(%rip)
4d49(2): add %ebp,%eax
4d4b(5): jmp 0xfffffeee(%rip)
4d50(5): call 0xffffc840(%rip)

"sig2str" :
4d60(1): push %rbp
4d61(7): lea 0x203318(%rip),%rax
4d68(1): push %rbx
4d69(2): xor %edx,%edx
4d6b(2): mov %edi,%ebx
4d6d(3): mov %rsi,%rdi
4d70(4): sub $0x18,%rsp
4d74(3): mov %rax,%rcx
4d77(2): jmp 0x15(%rip)
4d79(7): nop 0x0(%rax)
4d80(3): add $0x1,%edx
4d83(4): add $0xc,%rcx
4d87(3): cmp $0x23,%edx
4d8a(2): jz 0x26(%rip)
4d8c(2): cmp %ebx,(%rcx)
4d8e(2): jnz 0xfffffff2(%rip)
4d90(4): lea 0x0(%rdx,%rdx,2),%rdx
4d94(5): lea 0x4(%rax,%rdx,4),%rsi
4d99(5): call 0xffffc757(%rip)
4d9e(2): xor %eax,%eax
4da0(4): add $0x18,%rsp
4da4(1): pop %rbx
4da5(1): pop %rbp
4da6(1): ret near (%rsp)
4da7(9): nop 0x0(%rax,%rax,1)
4db0(5): mov %rdi,0x8(%rsp)
4db5(5): call 0xffffc97b(%rip)
4dba(2): mov %eax,%ebp
4dbc(5): call 0xffffc9b4(%rip)
4dc1(2): cmp %ebx,%ebp
4dc3(2): jnle 0x6e(%rip)
4dc5(2): cmp %ebx,%eax
4dc7(2): jl 0x6a(%rip)
4dc9(2): mov %eax,%edx
4dcb(5): mov 0x8(%rsp),%rdi
4dd0(2): sub %ebp,%edx
4dd2(2): sar $0x1,%edx
4dd4(2): add %ebp,%edx
4dd6(2): cmp %ebx,%edx
4dd8(2): jnl 0x48(%rip)
4dda(5): mov $0x58,%edx
4ddf(6): mov $0x414d5452,(%rdi)
4de5(2): mov %eax,%ebp
4de7(4): mov %dx,0x4(%rdi)
4deb(2): mov %ebx,%eax
4ded(2): sub %ebp,%eax
4def(2): jz 0xffffffb1(%rip)
4df1(7): lea 0x12b4(%rip),%rcx
4df8(3): mov %eax,%r8d
4dfb(4): add $0x5,%rdi
4dff(7): mov $0xffffffff,%rdx
4e06(5): mov $0x1,%esi
4e0b(2): xor %eax,%eax
4e0d(5): call 0xffffc9a3(%rip)
4e12(4): add $0x18,%rsp
4e16(2): xor %eax,%eax
4e18(1): pop %rbx
4e19(1): pop %rbp
4e1a(1): ret near (%rsp)
4e1b(5): nop 0x0(%rax,%rax,1)
4e20(5): mov $0x4e,%ecx
4e25(6): mov $0x494d5452,(%rdi)
4e2b(4): mov %cx,0x4(%rdi)
4e2f(2): jmp 0xffffffbc(%rip)
4e31(5): mov $0xffffffff,%eax
4e36(5): jmp 0xffffff6a(%rip)

"close_stream" :
4e40(2): push %r12
4e42(1): push %rbp
4e43(3): mov %rdi,%rbp
4e46(1): push %rbx
4e47(5): call 0xffffc6b9(%rip)
4e4c(3): mov 0x0(%rbp),%ebx
4e4f(3): mov %rbp,%rdi
4e52(3): mov %rax,%r12
4e55(5): call 0x10b(%rip)
4e5a(3): and $0x20,%ebx
4e5d(2): test %ebx,%ebx
4e5f(2): jnz 0x19(%rip)
4e61(2): test %eax,%eax
4e63(2): jz 0xc(%rip)
4e65(3): test %r12,%r12
4e68(5): mov $0xffffffff,%eax
4e6d(2): jz 0x3b(%rip)
4e6f(1): pop %rbx
4e70(1): pop %rbp
4e71(2): pop %r12
4e73(1): ret near (%rsp)
4e74(4): nop 0x0(%rax)
4e78(2): test %eax,%eax
4e7a(2): jnz 0x1e(%rip)
4e7c(5): call 0xffffc644(%rip)
4e81(6): mov $0x0,(%rax)
4e87(5): mov $0xffffffff,%eax
4e8c(1): pop %rbx
4e8d(1): pop %rbp
4e8e(2): pop %r12
4e90(1): ret near (%rsp)
4e91(7): nop 0x0(%rax)
4e98(1): pop %rbx
4e99(5): mov $0xffffffff,%eax
4e9e(1): pop %rbp
4e9f(2): pop %r12
4ea1(1): ret near (%rsp)
4ea2(6): nop 0x0(%rax,%rax,1)
4ea8(5): call 0xffffc618(%rip)
4ead(3): cmp $0x9,(%rax)
4eb0(1): pop %rbx
4eb1(1): pop %rbp
4eb2(2): pop %r12
4eb4(3): setnz %al
4eb7(3): movzx %al,%eax
4eba(2): neg %eax
4ebc(1): ret near (%rsp)

"hard_locale" :
4ec0(4): sub $0x8,%rsp
4ec4(2): xor %esi,%esi
4ec6(5): call 0xffffc81a(%rip)
4ecb(3): mov %rax,%rdx
4ece(5): mov $0x1,%eax
4ed3(3): test %rdx,%rdx
4ed6(2): jz 0x1f(%rip)
4ed8(7): lea 0x11d1(%rip),%rdi
4edf(5): mov $0x2,%ecx
4ee4(3): mov %rdx,%rsi
4ee7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4ee9(3): setnbe %cl
4eec(3): sbb $0x0,%cl
4eef(2): xor %eax,%eax
4ef1(2): test %cl,%cl
4ef3(2): jnz 0xd(%rip)
4ef5(4): add $0x8,%rsp
4ef9(1): ret near (%rsp)
4efa(6): nop 0x0(%rax,%rax,1)
4f00(7): lea 0x11ab(%rip),%rdi
4f07(5): mov $0x6,%ecx
4f0c(3): mov %rdx,%rsi
4f0f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4f11(3): setnbe %al
4f14(2): sbb $0x0,%al
4f16(2): test %al,%al
4f18(3): setnz %al
4f1b(4): add $0x8,%rsp
4f1f(1): ret near (%rsp)

"locale_charset" :
4f20(4): sub $0x8,%rsp
4f24(5): mov $0xe,%edi
4f29(5): call 0xffffc777(%rip)
4f2e(3): test %rax,%rax
4f31(2): jz 0x1f(%rip)
4f33(3): cmp $0x0,(%rax)
4f36(7): lea 0x117b(%rip),%rdx
4f3d(4): cmove %rdx,%rax
4f41(4): add $0x8,%rsp
4f45(1): ret near (%rsp)
4f46(a): nop 0x0(%rax,%rax,1)
4f50(7): lea 0x1161(%rip),%rax
4f57(4): add $0x8,%rsp
4f5b(1): ret near (%rsp)

"rpl_fclose" :
4f60(2): push %r12
4f62(1): push %rbp
4f63(1): push %rbx
4f64(3): mov %rdi,%rbx
4f67(5): call 0xffffc709(%rip)
4f6c(2): test %eax,%eax
4f6e(3): mov %rbx,%rdi
4f71(2): js 0x56(%rip)
4f73(5): call 0xffffc73d(%rip)
4f78(2): test %eax,%eax
4f7a(2): jnz 0x2e(%rip)
4f7c(3): mov %rbx,%rdi
4f7f(5): call 0x61(%rip)
4f84(2): test %eax,%eax
4f86(2): jz 0x3e(%rip)
4f88(5): call 0xffffc538(%rip)
4f8d(3): mov (%rax),%r12d
4f90(3): mov %rbx,%rdi
4f93(3): mov %rax,%rbp
4f96(5): call 0xffffc5aa(%rip)
4f9b(3): test %r12d,%r12d
4f9e(2): jnz 0x32(%rip)
4fa0(1): pop %rbx
4fa1(1): pop %rbp
4fa2(2): pop %r12
4fa4(1): ret near (%rsp)
4fa5(3): nop (%rax)
4fa8(3): mov %rbx,%rdi
4fab(5): call 0xffffc6c5(%rip)
4fb0(2): xor %esi,%esi
4fb2(5): mov $0x1,%edx
4fb7(2): mov %eax,%edi
4fb9(5): call 0xffffc627(%rip)
4fbe(4): cmp $0xffffffff,%rax
4fc2(2): jnz 0xffffffba(%rip)
4fc4(3): mov %rbx,%rdi
4fc7(1): pop %rbx
4fc8(1): pop %rbp
4fc9(2): pop %r12
4fcb(5): jmp 0xffffc575(%rip)
4fd0(4): mov %r12d,0x0(%rbp)
4fd4(5): mov $0xffffffff,%eax
4fd9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4fe0(3): test %rdi,%rdi
4fe3(1): push %rbx
4fe4(3): mov %rdi,%rbx
4fe7(2): jz 0x13(%rip)
4fe9(5): call 0xffffc6c7(%rip)
4fee(2): test %eax,%eax
4ff0(2): jz 0xa(%rip)
4ff2(6): test $0x100,(%rbx)
4ff8(2): jnz 0x10(%rip)
4ffa(3): mov %rbx,%rdi
4ffd(1): pop %rbx
4ffe(5): jmp 0xffffc692(%rip)
5003(5): nop 0x0(%rax,%rax,1)
5008(3): mov %rbx,%rdi
500b(5): mov $0x1,%edx
5010(2): xor %esi,%esi
5012(5): call 0xe(%rip)
5017(3): mov %rbx,%rdi
501a(1): pop %rbx
501b(5): jmp 0xffffc675(%rip)

"rpl_fseeko" :
5020(4): mov 0x8(%rdi),%rax
5024(4): cmp %rax,0x10(%rdi)
5028(2): jz 0x8(%rip)
502a(5): jmp 0xffffc6e6(%rip)
502f(1): nop 
5030(4): mov 0x20(%rdi),%rax
5034(4): cmp %rax,0x28(%rdi)
5038(2): jnz 0xfffffff2(%rip)
503a(5): cmp $0x0,0x48(%rdi)
503f(2): jnz 0xffffffeb(%rip)
5041(2): push %r12
5043(1): push %rbp
5044(3): mov %edx,%r12d
5047(1): push %rbx
5048(3): mov %rsi,%rbp
504b(3): mov %rdi,%rbx
504e(5): call 0xffffc622(%rip)
5053(3): mov %r12d,%edx
5056(3): mov %rbp,%rsi
5059(2): mov %eax,%edi
505b(5): call 0xffffc585(%rip)
5060(4): cmp $0xffffffff,%rax
5064(2): jz 0xe(%rip)
5066(3): and $0xef,(%rbx)
5069(7): mov %rax,0x90(%rbx)
5070(2): xor %eax,%eax
5072(1): pop %rbx
5073(1): pop %rbp
5074(2): pop %r12
5076(1): ret near (%rsp)

"__libc_csu_init" :
5080(2): push %r15
5082(2): push %r14
5084(3): mov %rdx,%r15
5087(2): push %r13
5089(2): push %r12
508b(7): lea 0x202a7e(%rip),%r12
5092(1): push %rbp
5093(7): lea 0x202a7e(%rip),%rbp
509a(1): push %rbx
509b(3): mov %edi,%r13d
509e(3): mov %rsi,%r14
50a1(3): sub %r12,%rbp
50a4(4): sub $0x8,%rsp
50a8(4): sar $0x3,%rbp
50ac(5): call 0xffffc3c4(%rip)
50b1(3): test %rbp,%rbp
50b4(2): jz 0x22(%rip)
50b6(2): xor %ebx,%ebx
50b8(8): nop 0x0(%rax,%rax,1)
50c0(3): mov %r15,%rdx
50c3(3): mov %r14,%rsi
50c6(3): mov %r13d,%edi
50c9(4): call 0x0(%r12,%rbx,8)
50cd(4): add $0x1,%rbx
50d1(3): cmp %rbx,%rbp
50d4(2): jnz 0xffffffec(%rip)
50d6(4): add $0x8,%rsp
50da(1): pop %rbx
50db(1): pop %rbp
50dc(2): pop %r12
50de(2): pop %r13
50e0(2): pop %r14
50e2(2): pop %r15
50e4(1): ret near (%rsp)

"atexit" :
5100(7): mov 0x202f01(%rip),%rdx
5107(2): xor %esi,%esi
5109(5): jmp 0xffffc617(%rip)

"_fini" :
5110(4): sub $0x8,%rsp
5114(4): add $0x8,%rsp
5118(1): ret near (%rsp)

