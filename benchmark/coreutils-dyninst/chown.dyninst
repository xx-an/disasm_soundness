
"endgrent@plt" :
19a0(6): jmp 0x20d3fa(%rip)
19a6(5): push $0x0

"abort@plt" :
19b0(6): jmp 0x20d3f2(%rip)
19b6(5): push $0x1

"__errno_location@plt" :
19c0(6): jmp 0x20d3ea(%rip)
19c6(5): push $0x2

"strncmp@plt" :
19d0(6): jmp 0x20d3e2(%rip)
19d6(5): push $0x3

"_exit@plt" :
19e0(6): jmp 0x20d3da(%rip)
19e6(5): push $0x4

"strcpy@plt" :
19f0(6): jmp 0x20d3d2(%rip)
19f6(5): push $0x5

"__fpending@plt" :
1a00(6): jmp 0x20d3ca(%rip)
1a06(5): push $0x6

"qsort@plt" :
1a10(6): jmp 0x20d3c2(%rip)
1a16(5): push $0x7

"fcntl@plt" :
1a20(6): jmp 0x20d3ba(%rip)
1a26(5): push $0x8

"textdomain@plt" :
1a30(6): jmp 0x20d3b2(%rip)
1a36(5): push $0x9

"fclose@plt" :
1a40(6): jmp 0x20d3aa(%rip)
1a46(5): push $0xa

"getpwuid@plt" :
1a50(6): jmp 0x20d3a2(%rip)
1a56(5): push $0xb

"bindtextdomain@plt" :
1a60(6): jmp 0x20d39a(%rip)
1a66(5): push $0xc

"stpcpy@plt" :
1a70(6): jmp 0x20d392(%rip)
1a76(5): push $0xd

"dcgettext@plt" :
1a80(6): jmp 0x20d38a(%rip)
1a86(5): push $0xe

"__ctype_get_mb_cur_max@plt" :
1a90(6): jmp 0x20d382(%rip)
1a96(5): push $0xf

"strlen@plt" :
1aa0(6): jmp 0x20d37a(%rip)
1aa6(5): push $0x10

"__lxstat@plt" :
1ab0(6): jmp 0x20d372(%rip)
1ab6(5): push $0x11

"openat@plt" :
1ac0(6): jmp 0x20d36a(%rip)
1ac6(5): push $0x12

"__stack_chk_fail@plt" :
1ad0(6): jmp 0x20d362(%rip)
1ad6(5): push $0x13

"getopt_long@plt" :
1ae0(6): jmp 0x20d35a(%rip)
1ae6(5): push $0x14

"mbrtowc@plt" :
1af0(6): jmp 0x20d352(%rip)
1af6(5): push $0x15

"strchr@plt" :
1b00(6): jmp 0x20d34a(%rip)
1b06(5): push $0x16

"getgrgid@plt" :
1b10(6): jmp 0x20d342(%rip)
1b16(5): push $0x17

"__fxstatat@plt" :
1b20(6): jmp 0x20d33a(%rip)
1b26(5): push $0x18

"strrchr@plt" :
1b30(6): jmp 0x20d332(%rip)
1b36(5): push $0x19

"lseek@plt" :
1b40(6): jmp 0x20d32a(%rip)
1b46(5): push $0x1a

"__assert_fail@plt" :
1b50(6): jmp 0x20d322(%rip)
1b56(5): push $0x1b

"memset@plt" :
1b60(6): jmp 0x20d31a(%rip)
1b66(5): push $0x1c

"close@plt" :
1b70(6): jmp 0x20d312(%rip)
1b76(5): push $0x1d

"__openat_2@plt" :
1b80(6): jmp 0x20d30a(%rip)
1b86(5): push $0x1e

"closedir@plt" :
1b90(6): jmp 0x20d302(%rip)
1b96(5): push $0x1f

"memcmp@plt" :
1ba0(6): jmp 0x20d2fa(%rip)
1ba6(5): push $0x20

"fputs_unlocked@plt" :
1bb0(6): jmp 0x20d2f2(%rip)
1bb6(5): push $0x21

"calloc@plt" :
1bc0(6): jmp 0x20d2ea(%rip)
1bc6(5): push $0x22

"dirfd@plt" :
1bd0(6): jmp 0x20d2e2(%rip)
1bd6(5): push $0x23

"getpwnam@plt" :
1be0(6): jmp 0x20d2da(%rip)
1be6(5): push $0x24

"memcpy@plt" :
1bf0(6): jmp 0x20d2d2(%rip)
1bf6(5): push $0x25

"getgrnam@plt" :
1c00(6): jmp 0x20d2ca(%rip)
1c06(5): push $0x26

"fileno@plt" :
1c10(6): jmp 0x20d2c2(%rip)
1c16(5): push $0x27

"__xstat@plt" :
1c20(6): jmp 0x20d2ba(%rip)
1c26(5): push $0x28

"readdir@plt" :
1c30(6): jmp 0x20d2b2(%rip)
1c36(5): push $0x29

"malloc@plt" :
1c40(6): jmp 0x20d2aa(%rip)
1c46(5): push $0x2a

"fflush@plt" :
1c50(6): jmp 0x20d2a2(%rip)
1c56(5): push $0x2b

"nl_langinfo@plt" :
1c60(6): jmp 0x20d29a(%rip)
1c66(5): push $0x2c

"__fxstat@plt" :
1c70(6): jmp 0x20d292(%rip)
1c76(5): push $0x2d

"endpwent@plt" :
1c80(6): jmp 0x20d28a(%rip)
1c86(5): push $0x2e

"__freading@plt" :
1c90(6): jmp 0x20d282(%rip)
1c96(5): push $0x2f

"fchdir@plt" :
1ca0(6): jmp 0x20d27a(%rip)
1ca6(5): push $0x30

"realloc@plt" :
1cb0(6): jmp 0x20d272(%rip)
1cb6(5): push $0x31

"setlocale@plt" :
1cc0(6): jmp 0x20d26a(%rip)
1cc6(5): push $0x32

"__printf_chk@plt" :
1cd0(6): jmp 0x20d262(%rip)
1cd6(5): push $0x33

"memmove@plt" :
1ce0(6): jmp 0x20d25a(%rip)
1ce6(5): push $0x34

"error@plt" :
1cf0(6): jmp 0x20d252(%rip)
1cf6(5): push $0x35

"open@plt" :
1d00(6): jmp 0x20d24a(%rip)
1d06(5): push $0x36

"fseeko@plt" :
1d10(6): jmp 0x20d242(%rip)
1d16(5): push $0x37

"fchown@plt" :
1d20(6): jmp 0x20d23a(%rip)
1d26(5): push $0x38

"fdopendir@plt" :
1d30(6): jmp 0x20d232(%rip)
1d36(5): push $0x39

"strtoul@plt" :
1d40(6): jmp 0x20d22a(%rip)
1d46(5): push $0x3a

"fstatfs@plt" :
1d50(6): jmp 0x20d222(%rip)
1d56(5): push $0x3b

"__cxa_atexit@plt" :
1d60(6): jmp 0x20d21a(%rip)
1d66(5): push $0x3c

"fchownat@plt" :
1d70(6): jmp 0x20d212(%rip)
1d76(5): push $0x3d

"exit@plt" :
1d80(6): jmp 0x20d20a(%rip)
1d86(5): push $0x3e

"fwrite@plt" :
1d90(6): jmp 0x20d202(%rip)
1d96(5): push $0x3f

"__fprintf_chk@plt" :
1da0(6): jmp 0x20d1fa(%rip)
1da6(5): push $0x40

"mbsinit@plt" :
1db0(6): jmp 0x20d1f2(%rip)
1db6(5): push $0x41

"iswprint@plt" :
1dc0(6): jmp 0x20d1ea(%rip)
1dc6(5): push $0x42

"__ctype_b_loc@plt" :
1dd0(6): jmp 0x20d1e2(%rip)
1dd6(5): push $0x43

".plt.got" :
1de0(6): jmp 0x20d1da(%rip)
1de6(2): nop 
1de8(6): jmp 0x20d1fa(%rip)
1dee(2): nop 

"_init" :
1970(4): sub $0x8,%rsp
1974(7): mov 0x20d65d(%rip),%rax
197b(3): test %rax,%rax
197e(2): jz 0x4(%rip)
1980(2): call %rax
1982(4): add $0x8,%rsp
1986(1): ret near (%rsp)

"main" :
1df0(2): push %r15
1df2(2): push %r14
1df4(3): xor %r14d,%r14d
1df7(2): push %r13
1df9(2): push %r12
1dfb(6): mov $0xffffffff,%r13d
1e01(1): push %rbp
1e02(1): push %rbx
1e03(3): movsxd %edi,%rbp
1e06(3): mov %rsi,%rbx
1e09(6): mov $0x10,%r12d
1e0f(7): sub $0xf8,%rsp
1e16(3): mov (%rsi),%rdi
1e19(9): mov $0x28,%rax
1e22(8): mov %rax,0xe8(%rsp)
1e2a(2): xor %eax,%eax
1e2c(8): mov $0xffffffff,0x10(%rsp)
1e34(8): mov $0xffffffff,0x14(%rsp)
1e3c(5): lea 0x20(%rsp),%r15
1e41(8): mov $0xffffffff,0x18(%rsp)
1e49(8): mov $0xffffffff,0x1c(%rsp)
1e51(5): call 0x1c6f(%rip)
1e56(7): lea 0xa1ec(%rip),%rsi
1e5d(5): mov $0x6,%edi
1e62(5): call 0xfffffe5e(%rip)
1e67(7): lea 0x8c9f(%rip),%rsi
1e6e(7): lea 0x8c6f(%rip),%rdi
1e75(5): call 0xfffffbeb(%rip)
1e7a(7): lea 0x8c63(%rip),%rdi
1e81(5): call 0xfffffbaf(%rip)
1e86(7): lea 0x1b33(%rip),%rdi
1e8d(5): call 0x8ba3(%rip)
1e92(3): mov %r15,%rdi
1e95(5): call 0xb4b(%rip)
1e9a(5): lea 0x1c(%rsp),%rax
1e9f(4): mov %rax,(%rsp)
1ea3(5): lea 0x18(%rsp),%rax
1ea8(5): mov %rax,0x8(%rsp)
1ead(3): nop (%rax)
1eb0(7): lea 0x20cac9(%rip),%rcx
1eb7(7): lea 0x8c8b(%rip),%rdx
1ebe(3): xor %r8d,%r8d
1ec1(3): mov %rbx,%rsi
1ec4(2): mov %ebp,%edi
1ec6(5): call 0xfffffc1a(%rip)
1ecb(3): cmp $0xff,%eax
1ece(6): jz 0x1ed(%rip)
1ed4(3): cmp $0x66,%eax
1ed7(6): jz 0x1b9(%rip)
1edd(2): jle 0x3b(%rip)
1edf(5): cmp $0x81,%eax
1ee4(6): jz 0x124(%rip)
1eea(2): jnle 0x5e(%rip)
1eec(3): cmp $0x76,%eax
1eef(6): jz 0x181(%rip)
1ef5(5): cmp $0x80,%eax
1efa(6): jz 0x166(%rip)
1f00(3): cmp $0x68,%eax
1f03(2): jz 0xd(%rip)
1f05(5): mov $0x1,%edi
1f0a(5): call 0x586(%rip)
1f0f(1): nop 
1f10(3): xor %r13d,%r13d
1f13(2): jmp 0xffffff9d(%rip)
1f15(3): nop (%rax)
1f18(3): cmp $0x4c,%eax
1f1b(6): jz 0x165(%rip)
1f21(2): jle 0x57(%rip)
1f23(3): cmp $0x52,%eax
1f26(6): jz 0xc2(%rip)
1f2c(3): cmp $0x63,%eax
1f2f(6): jz 0xc9(%rip)
1f35(3): cmp $0x50,%eax
1f38(2): jnz 0xffffffcd(%rip)
1f3a(6): mov $0x10,%r12d
1f40(5): jmp 0xffffff70(%rip)
1f45(3): nop (%rax)
1f48(5): cmp $0x83,%eax
1f4d(6): jz 0x163(%rip)
1f53(6): jl 0x14d(%rip)
1f59(5): cmp $0x84,%eax
1f5e(2): jnz 0xffffffa7(%rip)
1f60(7): mov 0x20d131(%rip),%rax
1f67(7): mov %rax,0x20d172(%rip)
1f6e(5): jmp 0xffffff42(%rip)
1f73(5): nop 0x0(%rax,%rax,1)
1f78(5): cmp $0xffffff7e,%eax
1f7d(6): jz 0x309(%rip)
1f83(3): cmp $0x48,%eax
1f86(2): jz 0x52(%rip)
1f88(5): cmp $0xffffff7d,%eax
1f8d(6): jnz 0xffffff78(%rip)
1f93(4): sub $0x8,%rsp
1f97(7): mov 0x20d0ea(%rip),%rdi
1f9e(7): mov 0x20d06b(%rip),%rcx
1fa5(2): push $0x0
1fa7(7): lea 0x8b7e(%rip),%r9
1fae(7): lea 0x8b84(%rip),%r8
1fb5(7): lea 0x8b24(%rip),%rdx
1fbc(7): lea 0x8aa1(%rip),%rsi
1fc3(2): xor %eax,%eax
1fc5(5): call 0x420b(%rip)
1fca(2): xor %edi,%edi
1fcc(5): call 0xfffffdb4(%rip)
1fd1(7): nop 0x0(%rax)
1fd8(6): mov $0x11,%r12d
1fde(5): jmp 0xfffffed2(%rip)
1fe3(5): nop 0x0(%rax,%rax,1)
1fe8(5): mov $0x1,0x24(%rsp)
1fed(5): jmp 0xfffffec3(%rip)
1ff2(6): nop 0x0(%rax,%rax,1)
1ff8(8): mov $0x1,0x20(%rsp)
2000(5): jmp 0xfffffeb0(%rip)
2005(3): nop (%rax)
2008(4): mov (%rsp),%rdx
200c(5): mov 0x8(%rsp),%rsi
2011(3): xor %r8d,%r8d
2014(7): mov 0x20d07d(%rip),%rdi
201b(2): xor %ecx,%ecx
201d(5): call 0x3c23(%rip)
2022(3): test %rax,%rax
2025(6): jz 0xfffffe8b(%rip)
202b(7): mov 0x20d066(%rip),%rdi
2032(4): mov %rax,(%rsp)
2036(5): call 0x379a(%rip)
203b(4): mov (%rsp),%rcx
203f(7): lea 0x8adf(%rip),%rdx
2046(3): mov %rax,%r8
2049(2): xor %esi,%esi
204b(5): mov $0x1,%edi
2050(2): xor %eax,%eax
2052(5): call 0xfffffc9e(%rip)
2057(9): nop 0x0(%rax,%rax,1)
2060(6): mov $0x1,%r13d
2066(5): jmp 0xfffffe4a(%rip)
206b(5): nop 0x0(%rax,%rax,1)
2070(8): mov $0x0,0x20(%rsp)
2078(5): jmp 0xfffffe38(%rip)
207d(3): nop (%rax)
2080(6): mov $0x2,%r12d
2086(5): jmp 0xfffffe2a(%rip)
208b(5): nop 0x0(%rax,%rax,1)
2090(5): mov $0x1,0x31(%rsp)
2095(5): jmp 0xfffffe1b(%rip)
209a(6): nop 0x0(%rax,%rax,1)
20a0(3): xor %r14d,%r14d
20a3(5): jmp 0xfffffe0d(%rip)
20a8(8): nop 0x0(%rax,%rax,1)
20b0(6): mov $0x1,%r14d
20b6(5): jmp 0xfffffdfa(%rip)
20bb(5): cmp $0x0,0x24(%rsp)
20c0(6): jnz 0xeb(%rip)
20c6(6): mov $0x10,%r12d
20cc(7): movsxd 0x20cfbd(%rip),%rax
20d3(3): test %r13d,%r13d
20d6(7): mov 0x20d003(%rip),%r13
20dd(2): mov %ebp,%edx
20df(5): setnz 0x30(%rsp)
20e4(2): sub %eax,%edx
20e6(3): test %r13,%r13
20e9(6): jz 0xde(%rip)
20ef(2): test %edx,%edx
20f1(6): jle 0x22f(%rip)
20f7(5): lea 0x50(%rsp),%rdx
20fc(3): mov %r13,%rsi
20ff(5): mov $0x1,%edi
2104(5): call 0xfffffb1c(%rip)
2109(2): test %eax,%eax
210b(6): jnz 0x1d6(%rip)
2111(4): mov 0x6c(%rsp),%edi
2115(4): mov 0x70(%rsp),%eax
2119(4): mov %edi,0x10(%rsp)
211d(4): mov %eax,0x14(%rsp)
2121(5): call 0x96f(%rip)
2126(4): mov 0x70(%rsp),%edi
212a(5): mov %rax,0x38(%rsp)
212f(5): call 0x901(%rip)
2134(5): mov %rax,0x40(%rsp)
2139(5): cmp $0x0,0x24(%rsp)
213e(2): jz 0xb(%rip)
2140(3): test %r14b,%r14b
2143(6): jnz 0xc8(%rip)
2149(7): movsxd 0x20cf40(%rip),%rax
2150(4): sub $0x8,%rsp
2154(3): mov %r12d,%esi
2157(2): push %r15
2159(5): mov 0x2c(%rsp),%r9d
215e(6): or $0x400,%esi
2164(5): mov 0x28(%rsp),%r8d
2169(4): mov 0x24(%rsp),%ecx
216d(4): mov 0x20(%rsp),%edx
2171(4): lea 0x0(%rbx,%rax,8),%rdi
2175(5): call 0x170b(%rip)
217a(1): pop %rdx
217b(1): pop %rcx
217c(3): xor $0x1,%eax
217f(3): movzx %al,%eax
2182(8): mov 0xe8(%rsp),%rbx
218a(9): xor $0x28,%rbx
2193(6): jnz 0x149(%rip)
2199(7): add $0xf8,%rsp
21a0(1): pop %rbx
21a1(1): pop %rbp
21a2(2): pop %r12
21a4(2): pop %r13
21a6(2): pop %r14
21a8(2): pop %r15
21aa(1): ret near (%rsp)
21ab(4): cmp $0x10,%r12d
21af(6): jnz 0xffffff1d(%rip)
21b5(4): sub $0x1,%r13d
21b9(6): jz 0xff(%rip)
21bf(3): xor %r13d,%r13d
21c2(5): jmp 0xffffff0a(%rip)
21c7(3): sub $0x1,%edx
21ca(6): jle 0x156(%rip)
21d0(4): mov 0x0(%rbx,%rax,8),%rdi
21d4(4): lea 0x18(%r15),%rcx
21d8(5): lea 0x14(%rsp),%rdx
21dd(5): lea 0x10(%rsp),%rsi
21e2(4): lea 0x20(%r15),%r8
21e6(5): call 0x3a5a(%rip)
21eb(3): test %rax,%rax
21ee(3): mov %rax,%rbp
21f1(6): jnz 0x9c(%rip)
21f7(6): cmp $0x0,0x38(%rsp)
21fd(2): jz 0x6b(%rip)
21ff(7): add $0x1,0x20ce8a(%rip)
2206(5): jmp 0xffffff33(%rip)
220b(7): lea 0x20cebe(%rip),%rdi
2212(5): call 0x35de(%rip)
2217(3): test %rax,%rax
221a(5): mov %rax,0x28(%rsp)
221f(6): jnz 0xffffff2a(%rip)
2225(7): lea 0x98ba(%rip),%rsi
222c(5): mov $0x4,%edi
2231(5): call 0x32cf(%rip)
2236(7): lea 0x943b(%rip),%rsi
223d(5): mov $0x5,%edx
2242(2): xor %edi,%edi
2244(3): mov %rax,%rbp
2247(5): call 0xfffff839(%rip)
224c(3): mov %rax,%rbx
224f(5): call 0xfffff771(%rip)
2254(2): mov (%rax),%esi
2256(3): mov %rbp,%rcx
2259(3): mov %rbx,%rdx
225c(5): mov $0x1,%edi
2261(2): xor %eax,%eax
2263(5): call 0xfffffa8d(%rip)
2268(6): cmp $0x0,0x40(%rsp)
226e(2): jz 0xffffff91(%rip)
2270(7): lea 0x9dd2(%rip),%rdi
2277(5): call 0x42e9(%rip)
227c(5): mov %rax,0x38(%rsp)
2281(5): jmp 0xffffff7e(%rip)
2286(2): xor %edi,%edi
2288(5): call 0x208(%rip)
228d(7): movsxd 0x20cdfc(%rip),%rax
2294(4): mov 0x0(%rbx,%rax,8),%rdi
2298(5): call 0x3538(%rip)
229d(7): lea 0x8881(%rip),%rdx
22a4(3): mov %rax,%r8
22a7(3): mov %rbp,%rcx
22aa(2): xor %esi,%esi
22ac(5): mov $0x1,%edi
22b1(2): xor %eax,%eax
22b3(5): call 0xfffffa3d(%rip)
22b8(7): lea 0x9389(%rip),%rsi
22bf(5): mov $0x5,%edx
22c4(2): xor %edi,%edi
22c6(5): call 0xfffff7ba(%rip)
22cb(2): xor %esi,%esi
22cd(3): mov %rax,%rdx
22d0(5): mov $0x1,%edi
22d5(2): xor %eax,%eax
22d7(5): call 0xfffffa19(%rip)
22dc(5): call 0xfffff7f4(%rip)
22e1(3): mov %r13,%rsi
22e4(5): mov $0x4,%edi
22e9(5): call 0x3217(%rip)
22ee(7): lea 0x9383(%rip),%rsi
22f5(5): mov $0x5,%edx
22fa(2): xor %edi,%edi
22fc(3): mov %rax,%rbp
22ff(5): call 0xfffff781(%rip)
2304(3): mov %rax,%rbx
2307(5): call 0xfffff6b9(%rip)
230c(2): mov (%rax),%esi
230e(3): mov %rbp,%rcx
2311(3): mov %rbx,%rdx
2314(5): mov $0x1,%edi
2319(2): xor %eax,%eax
231b(5): call 0xfffff9d5(%rip)
2320(2): cmp %ebp,%eax
2322(2): jl 0x28(%rip)
2324(7): lea 0x8827(%rip),%rsi
232b(2): xor %edi,%edi
232d(5): mov $0x5,%edx
2332(5): call 0xfffff74e(%rip)
2337(2): xor %esi,%esi
2339(3): mov %rax,%rdx
233c(2): xor %edi,%edi
233e(2): xor %eax,%eax
2340(5): call 0xfffff9b0(%rip)
2345(5): jmp 0xfffffbc0(%rip)
234a(5): mov 0xfffffff8(%rbx,%rbp,8),%rdi
234f(5): call 0x3481(%rip)
2354(7): lea 0x8807(%rip),%rsi
235b(3): mov %rax,%rbx
235e(2): xor %edi,%edi
2360(5): mov $0x5,%edx
2365(5): call 0xfffff71b(%rip)
236a(3): mov %rbx,%rcx
236d(3): mov %rax,%rdx
2370(2): xor %esi,%esi
2372(2): xor %edi,%edi
2374(2): xor %eax,%eax
2376(5): call 0xfffff97a(%rip)
237b(5): jmp 0xfffffb8a(%rip)

"_start" :
2380(2): xor %ebp,%ebp
2382(3): mov %rdx,%r9
2385(1): pop %rsi
2386(3): mov %rsp,%rdx
2389(4): and $0xfffffff0,%rsp
238d(1): push %rax
238e(1): push %rsp
238f(7): lea 0x868a(%rip),%r8
2396(7): lea 0x8613(%rip),%rcx
239d(7): lea 0xfffffa4c(%rip),%rdi
23a4(6): call 0x20cc26(%rip)
23aa(1): hlt 

"deregister_tm_clones" :
23b0(7): lea 0x20ccc9(%rip),%rdi
23b7(1): push %rbp
23b8(7): lea 0x20ccc1(%rip),%rax
23bf(3): cmp %rdi,%rax
23c2(3): mov %rsp,%rbp
23c5(2): jz 0x1b(%rip)
23c7(7): mov 0x20cbfa(%rip),%rax
23ce(3): test %rax,%rax
23d1(2): jz 0xf(%rip)
23d3(1): pop %rbp
23d4(2): jmp %rax
23d6(a): nop 0x0(%rax,%rax,1)
23e0(1): pop %rbp
23e1(1): ret near (%rsp)

"register_tm_clones" :
23f0(7): lea 0x20cc89(%rip),%rdi
23f7(7): lea 0x20cc82(%rip),%rsi
23fe(1): push %rbp
23ff(3): sub %rdi,%rsi
2402(3): mov %rsp,%rbp
2405(4): sar $0x3,%rsi
2409(3): mov %rsi,%rax
240c(4): shr $0x3f,%rax
2410(3): add %rax,%rsi
2413(3): sar $0x1,%rsi
2416(2): jz 0x1a(%rip)
2418(7): mov 0x20cbc1(%rip),%rax
241f(3): test %rax,%rax
2422(2): jz 0xe(%rip)
2424(1): pop %rbp
2425(2): jmp %rax
2427(9): nop 0x0(%rax,%rax,1)
2430(1): pop %rbp
2431(1): ret near (%rsp)

"__do_global_dtors_aux" :
2440(7): cmp $0x0,0x20cc81(%rip)
2447(2): jnz 0x31(%rip)
2449(8): cmp $0x0,0x20cb97(%rip)
2451(1): push %rbp
2452(3): mov %rsp,%rbp
2455(2): jz 0xe(%rip)
2457(7): mov 0x20cbaa(%rip),%rdi
245e(5): call 0xfffff98a(%rip)
2463(5): call 0xffffff4d(%rip)
2468(7): mov $0x1,0x20cc59(%rip)
246f(1): pop %rbp
2470(1): ret near (%rsp)
2471(7): nop 0x0(%rax)
2478(2): REP ret near (%rsp)

"frame_dummy" :
2480(1): push %rbp
2481(3): mov %rsp,%rbp
2484(1): pop %rbp
2485(5): jmp 0xffffff6b(%rip)

"usage" :
2490(2): push %r13
2492(2): push %r12
2494(5): mov $0x5,%edx
2499(1): push %rbp
249a(1): push %rbx
249b(2): mov %edi,%ebp
249d(7): sub $0x88,%rsp
24a4(7): mov 0x20cc4d(%rip),%rbx
24ab(9): mov $0x28,%rax
24b4(5): mov %rax,0x78(%rsp)
24b9(2): xor %eax,%eax
24bb(2): test %edi,%edi
24bd(2): jz 0x30(%rip)
24bf(7): lea 0x8712(%rip),%rsi
24c6(2): xor %edi,%edi
24c8(5): call 0xfffff5b8(%rip)
24cd(7): mov 0x20cbec(%rip),%rdi
24d4(3): mov %rax,%rdx
24d7(3): mov %rbx,%rcx
24da(5): mov $0x1,%esi
24df(2): xor %eax,%eax
24e1(5): call 0xfffff8bf(%rip)
24e6(2): mov %ebp,%edi
24e8(5): call 0xfffff898(%rip)
24ed(7): lea 0x870c(%rip),%rsi
24f4(2): xor %edi,%edi
24f6(5): call 0xfffff58a(%rip)
24fb(3): mov %rbx,%rcx
24fe(3): mov %rbx,%rdx
2501(3): mov %rax,%rsi
2504(5): mov $0x1,%edi
2509(2): xor %eax,%eax
250b(5): call 0xfffff7c5(%rip)
2510(7): mov 0x20cb71(%rip),%rbx
2517(7): lea 0x874a(%rip),%rsi
251e(5): mov $0x5,%edx
2523(2): xor %edi,%edi
2525(5): call 0xfffff55b(%rip)
252a(3): mov %rbx,%rsi
252d(3): mov %rax,%rdi
2530(5): call 0xfffff680(%rip)
2535(7): mov 0x20cb4c(%rip),%rbx
253c(7): lea 0x87bd(%rip),%rsi
2543(5): mov $0x5,%edx
2548(2): xor %edi,%edi
254a(5): call 0xfffff536(%rip)
254f(3): mov %rbx,%rsi
2552(3): mov %rax,%rdi
2555(5): call 0xfffff65b(%rip)
255a(7): mov 0x20cb27(%rip),%rbx
2561(7): lea 0x8868(%rip),%rsi
2568(5): mov $0x5,%edx
256d(2): xor %edi,%edi
256f(5): call 0xfffff511(%rip)
2574(3): mov %rbx,%rsi
2577(3): mov %rax,%rdi
257a(5): call 0xfffff636(%rip)
257f(7): mov 0x20cb02(%rip),%rbx
2586(7): lea 0x892b(%rip),%rsi
258d(5): mov $0x5,%edx
2592(2): xor %edi,%edi
2594(5): call 0xfffff4ec(%rip)
2599(3): mov %rbx,%rsi
259c(3): mov %rax,%rdi
259f(5): call 0xfffff611(%rip)
25a4(7): mov 0x20cadd(%rip),%rbx
25ab(7): lea 0x897e(%rip),%rsi
25b2(5): mov $0x5,%edx
25b7(2): xor %edi,%edi
25b9(5): call 0xfffff4c7(%rip)
25be(3): mov %rbx,%rsi
25c1(3): mov %rax,%rdi
25c4(5): call 0xfffff5ec(%rip)
25c9(7): mov 0x20cab8(%rip),%rbx
25d0(7): lea 0x8ab1(%rip),%rsi
25d7(5): mov $0x5,%edx
25dc(2): xor %edi,%edi
25de(5): call 0xfffff4a2(%rip)
25e3(3): mov %rbx,%rsi
25e6(3): mov %rax,%rdi
25e9(5): call 0xfffff5c7(%rip)
25ee(7): mov 0x20ca93(%rip),%rbx
25f5(7): lea 0x8b0c(%rip),%rsi
25fc(5): mov $0x5,%edx
2601(2): xor %edi,%edi
2603(5): call 0xfffff47d(%rip)
2608(3): mov %rbx,%rsi
260b(3): mov %rax,%rdi
260e(5): call 0xfffff5a2(%rip)
2613(7): mov 0x20ca6e(%rip),%rbx
261a(7): lea 0x8b67(%rip),%rsi
2621(5): mov $0x5,%edx
2626(2): xor %edi,%edi
2628(5): call 0xfffff458(%rip)
262d(3): mov %rbx,%rsi
2630(3): mov %rax,%rdi
2633(5): call 0xfffff57d(%rip)
2638(7): mov 0x20ca49(%rip),%rbx
263f(7): lea 0x8b8a(%rip),%rsi
2646(5): mov $0x5,%edx
264b(2): xor %edi,%edi
264d(5): call 0xfffff433(%rip)
2652(3): mov %rbx,%rsi
2655(3): mov %rax,%rdi
2658(5): call 0xfffff558(%rip)
265d(7): mov 0x20ca24(%rip),%rbx
2664(7): lea 0x8d3d(%rip),%rsi
266b(5): mov $0x5,%edx
2670(2): xor %edi,%edi
2672(5): call 0xfffff40e(%rip)
2677(3): mov %rbx,%rsi
267a(3): mov %rax,%rdi
267d(5): call 0xfffff533(%rip)
2682(7): mov 0x20c9ff(%rip),%rbx
2689(7): lea 0x8d48(%rip),%rsi
2690(5): mov $0x5,%edx
2695(2): xor %edi,%edi
2697(5): call 0xfffff3e9(%rip)
269c(3): mov %rbx,%rsi
269f(3): mov %rax,%rdi
26a2(5): call 0xfffff50e(%rip)
26a7(7): mov 0x20c9da(%rip),%rbx
26ae(7): lea 0x8d5b(%rip),%rsi
26b5(5): mov $0x5,%edx
26ba(2): xor %edi,%edi
26bc(5): call 0xfffff3c4(%rip)
26c1(3): mov %rbx,%rsi
26c4(3): mov %rax,%rdi
26c7(5): call 0xfffff4e9(%rip)
26cc(7): mov 0x20ca25(%rip),%rbx
26d3(7): lea 0x8df6(%rip),%rsi
26da(5): mov $0x5,%edx
26df(2): xor %edi,%edi
26e1(5): call 0xfffff39f(%rip)
26e6(3): mov %rbx,%rcx
26e9(3): mov %rbx,%rdx
26ec(3): mov %rbx,%r8
26ef(3): mov %rax,%rsi
26f2(5): mov $0x1,%edi
26f7(2): xor %eax,%eax
26f9(5): call 0xfffff5d7(%rip)
26fe(7): lea 0x8365(%rip),%rax
2705(7): lea 0x839f(%rip),%rcx
270c(7): lea 0x8351(%rip),%rbx
2713(9): mov $0x0,0x60(%rsp)
271c(9): mov $0x0,0x68(%rsp)
2725(3): mov %rsp,%rdx
2728(4): mov %rax,(%rsp)
272c(7): lea 0x8339(%rip),%rax
2733(5): mov %rcx,0x30(%rsp)
2738(7): lea 0x8376(%rip),%rcx
273f(5): mov %rax,0x8(%rsp)
2744(7): lea 0x8399(%rip),%rax
274b(5): mov %rcx,0x40(%rsp)
2750(7): lea 0x8368(%rip),%rcx
2757(5): mov %rax,0x10(%rsp)
275c(7): lea 0x8319(%rip),%rax
2763(5): mov %rcx,0x50(%rsp)
2768(5): mov %rax,0x18(%rsp)
276d(7): lea 0x831e(%rip),%rax
2774(5): mov %rax,0x20(%rsp)
2779(7): lea 0x831c(%rip),%rax
2780(5): mov %rax,0x28(%rsp)
2785(5): mov %rax,0x38(%rsp)
278a(5): mov %rax,0x48(%rsp)
278f(5): mov %rax,0x58(%rsp)
2794(4): nop 0x0(%rax)
2798(4): add $0x10,%rdx
279c(3): mov (%rdx),%rdi
279f(3): test %rdi,%rdi
27a2(2): jz 0x15(%rip)
27a4(5): mov $0x6,%ecx
27a9(3): mov %rbx,%rsi
27ac(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
27ae(3): setnbe %al
27b1(2): sbb $0x0,%al
27b3(2): test %al,%al
27b5(2): jnz 0xffffffe3(%rip)
27b7(4): mov 0x8(%rdx),%r12
27bb(2): xor %edi,%edi
27bd(5): mov $0x5,%edx
27c2(7): lea 0x8300(%rip),%rsi
27c9(3): test %r12,%r12
27cc(6): jz 0xc7(%rip)
27d2(5): call 0xfffff2ae(%rip)
27d7(7): lea 0x8dc2(%rip),%rcx
27de(7): lea 0x82fb(%rip),%rdx
27e5(3): mov %rax,%rsi
27e8(5): mov $0x1,%edi
27ed(2): xor %eax,%eax
27ef(5): call 0xfffff4e1(%rip)
27f4(2): xor %esi,%esi
27f6(5): mov $0x5,%edi
27fb(5): call 0xfffff4c5(%rip)
2800(3): test %rax,%rax
2803(2): jz 0x1e(%rip)
2805(7): lea 0x82e2(%rip),%rsi
280c(5): mov $0x3,%edx
2811(3): mov %rax,%rdi
2814(5): call 0xfffff1bc(%rip)
2819(2): test %eax,%eax
281b(6): jnz 0x10d(%rip)
2821(7): lea 0x82ca(%rip),%rsi
2828(2): xor %edi,%edi
282a(5): mov $0x5,%edx
282f(5): call 0xfffff251(%rip)
2834(7): lea 0x8229(%rip),%rcx
283b(7): lea 0x8d5e(%rip),%rdx
2842(3): mov %rax,%rsi
2845(5): mov $0x1,%edi
284a(2): xor %eax,%eax
284c(5): call 0xfffff484(%rip)
2851(3): cmp %rbx,%r12
2854(7): lea 0x822b(%rip),%rcx
285b(7): lea 0x97e7(%rip),%rbx
2862(4): cmove %rcx,%rbx
2866(7): lea 0x8da3(%rip),%rsi
286d(2): xor %edi,%edi
286f(5): mov $0x5,%edx
2874(5): call 0xfffff20c(%rip)
2879(3): mov %rbx,%rcx
287c(3): mov %rax,%rsi
287f(3): mov %r12,%rdx
2882(5): mov $0x1,%edi
2887(2): xor %eax,%eax
2889(5): call 0xfffff447(%rip)
288e(5): jmp 0xfffffc58(%rip)
2893(5): call 0xfffff1ed(%rip)
2898(7): lea 0x8d01(%rip),%rcx
289f(7): lea 0x823a(%rip),%rdx
28a6(3): mov %rax,%rsi
28a9(5): mov $0x1,%edi
28ae(2): xor %eax,%eax
28b0(5): call 0xfffff420(%rip)
28b5(2): xor %esi,%esi
28b7(5): mov $0x5,%edi
28bc(5): call 0xfffff404(%rip)
28c1(3): test %rax,%rax
28c4(2): jz 0x1a(%rip)
28c6(7): lea 0x8221(%rip),%rsi
28cd(5): mov $0x3,%edx
28d2(3): mov %rax,%rdi
28d5(5): call 0xfffff0fb(%rip)
28da(2): test %eax,%eax
28dc(2): jnz 0x45(%rip)
28de(7): lea 0x820d(%rip),%rsi
28e5(5): mov $0x5,%edx
28ea(2): xor %edi,%edi
28ec(7): lea 0x8171(%rip),%r12
28f3(7): lea 0x818c(%rip),%rbx
28fa(5): call 0xfffff186(%rip)
28ff(7): lea 0x815e(%rip),%rcx
2906(7): lea 0x8c93(%rip),%rdx
290d(3): mov %rax,%rsi
2910(5): mov $0x1,%edi
2915(2): xor %eax,%eax
2917(5): call 0xfffff3b9(%rip)
291c(5): jmp 0xffffff4a(%rip)
2921(7): lea 0x813c(%rip),%r12
2928(7): mov 0x20c759(%rip),%r13
292f(7): lea 0x8c92(%rip),%rsi
2936(2): xor %edi,%edi
2938(5): mov $0x5,%edx
293d(5): call 0xfffff143(%rip)
2942(3): mov %r13,%rsi
2945(3): mov %rax,%rdi
2948(5): call 0xfffff268(%rip)
294d(5): jmp 0xfffffed4(%rip)

"user_group_str" :
2960(3): test %rdi,%rdi
2963(2): push %r12
2965(1): push %rbp
2966(1): push %rbx
2967(2): jz 0x51(%rip)
2969(3): test %rsi,%rsi
296c(2): jz 0x54(%rip)
296e(3): mov %rsi,%rbx
2971(3): mov %rdi,%rbp
2974(5): call 0xfffff12c(%rip)
2979(3): mov %rbx,%rdi
297c(3): mov %rax,%r12
297f(5): call 0xfffff121(%rip)
2984(5): lea 0x2(%r12,%rax,1),%rdi
2989(5): call 0x39a7(%rip)
298e(3): mov %rbp,%rsi
2991(3): mov %rax,%rdi
2994(3): mov %rax,%r12
2997(5): call 0xfffff0d9(%rip)
299c(4): lea 0x1(%rax),%rdi
29a0(3): mov $0x3a,(%rax)
29a3(3): mov %rbx,%rsi
29a6(5): call 0xfffff04a(%rip)
29ab(3): mov %r12,%rax
29ae(1): pop %rbx
29af(1): pop %rbp
29b0(2): pop %r12
29b2(1): ret near (%rsp)
29b3(5): nop 0x0(%rax,%rax,1)
29b8(3): test %rsi,%rsi
29bb(2): jz 0x15(%rip)
29bd(3): mov %rsi,%rdi
29c0(1): pop %rbx
29c1(1): pop %rbp
29c2(2): pop %r12
29c4(5): jmp 0x3b9c(%rip)
29c9(7): nop 0x0(%rax)
29d0(3): xor %r12d,%r12d
29d3(2): jmp 0xffffffd8(%rip)

"chopt_init" :
29e0(6): mov $0x2,(%rdi)
29e6(8): mov $0x0,0x8(%rdi)
29ee(4): mov $0x1,0x10(%rdi)
29f2(4): mov $0x0,0x4(%rdi)
29f6(4): mov $0x0,0x11(%rdi)
29fa(8): mov $0x0,0x18(%rdi)
2a02(8): mov $0x0,0x20(%rdi)
2a0a(1): ret near (%rsp)

"chopt_free" :
2a10(1): push %rbx
2a11(3): mov %rdi,%rbx
2a14(4): mov 0x18(%rdi),%rdi
2a18(5): call 0xfffff3c8(%rip)
2a1d(4): mov 0x20(%rbx),%rdi
2a21(1): pop %rbx
2a22(5): jmp 0xfffff3be(%rip)

"gid_to_name" :
2a30(1): push %rbx
2a31(2): mov %edi,%ebx
2a33(4): sub $0x20,%rsp
2a37(9): mov $0x28,%rax
2a40(5): mov %rax,0x18(%rsp)
2a45(2): xor %eax,%eax
2a47(5): call 0xfffff0c9(%rip)
2a4c(3): test %rax,%rax
2a4f(2): jz 0x21(%rip)
2a51(3): mov (%rax),%rdi
2a54(5): call 0x3b0c(%rip)
2a59(5): mov 0x18(%rsp),%rdx
2a5e(9): xor $0x28,%rdx
2a67(2): jnz 0x18(%rip)
2a69(4): add $0x20,%rsp
2a6d(1): pop %rbx
2a6e(1): ret near (%rsp)
2a6f(1): nop 
2a70(2): mov %ebx,%edi
2a72(3): mov %rsp,%rsi
2a75(5): call 0xffb(%rip)
2a7a(3): mov %rax,%rdi
2a7d(2): jmp 0xffffffd7(%rip)
2a7f(5): call 0xfffff051(%rip)

"uid_to_name" :
2a90(1): push %rbx
2a91(2): mov %edi,%ebx
2a93(4): sub $0x20,%rsp
2a97(9): mov $0x28,%rax
2aa0(5): mov %rax,0x18(%rsp)
2aa5(2): xor %eax,%eax
2aa7(5): call 0xffffefa9(%rip)
2aac(3): test %rax,%rax
2aaf(2): jz 0x21(%rip)
2ab1(3): mov (%rax),%rdi
2ab4(5): call 0x3aac(%rip)
2ab9(5): mov 0x18(%rsp),%rdx
2abe(9): xor $0x28,%rdx
2ac7(2): jnz 0x18(%rip)
2ac9(4): add $0x20,%rsp
2acd(1): pop %rbx
2ace(1): ret near (%rsp)
2acf(1): nop 
2ad0(2): mov %ebx,%edi
2ad2(3): mov %rsp,%rsi
2ad5(5): call 0xf9b(%rip)
2ada(3): mov %rax,%rdi
2add(2): jmp 0xffffffd7(%rip)
2adf(5): call 0xffffeff1(%rip)

"change_file_owner" :
2af0(2): push %r15
2af2(2): push %r14
2af4(2): push %r13
2af6(2): push %r12
2af8(3): mov %r8d,%r12d
2afb(1): push %rbp
2afc(1): push %rbx
2afd(3): mov %rsi,%rbp
2b00(7): sub $0x178,%rsp
2b07(5): movzx 0x70(%rsi),%r14d
2b0c(9): mov $0x28,%rax
2b15(8): mov %rax,0x168(%rsp)
2b1d(2): xor %eax,%eax
2b1f(4): mov 0x38(%rsi),%rax
2b23(4): mov %rdi,(%rsp)
2b27(4): mov %edx,0x10(%rsp)
2b2b(4): mov %ecx,0x18(%rsp)
2b2f(5): cmp $0xa,%r14w
2b34(8): mov 0x1b0(%rsp),%rbx
2b3c(5): mov %rax,0x8(%rsp)
2b41(2): jnbe 0x3a(%rip)
2b43(7): lea 0x8f1e(%rip),%rcx
2b4a(4): movzx %r14w,%edx
2b4e(4): movsxd 0x0(%rcx,%rdx,4),%rax
2b52(3): add %rcx,%rax
2b55(2): jmp %rax
2b57(9): nop 0x0(%rax,%rax,1)
2b60(4): mov (%rsp),%rdi
2b64(5): mov %r9d,0x20(%rsp)
2b69(5): call 0x3aa7(%rip)
2b6e(2): test %al,%al
2b70(5): mov 0x20(%rsp),%r9d
2b75(6): jnz 0x7e3(%rip)
2b7b(4): cmp $0xff,%r12d
2b7f(4): mov 0x30(%rbp),%r11
2b83(4): movzx 0x10(%rbx),%ecx
2b87(3): setz %dl
2b8a(4): cmp $0xff,%r9d
2b8e(4): lea 0x78(%rbp),%r13
2b92(3): setz %al
2b95(2): and %al,%dl
2b97(3): mov %edx,%r15d
2b9a(2): jz 0x16(%rip)
2b9c(3): cmp $0x2,(%rbx)
2b9f(2): jnz 0x11(%rip)
2ba1(5): cmp $0x0,0x8(%rbx)
2ba6(6): jz 0x87a(%rip)
2bac(4): nop 0x0(%rax)
2bb0(2): test %cl,%cl
2bb2(6): jnz 0x206(%rip)
2bb8(3): mov %r14d,%eax
2bbb(3): and $0xfd,%eax
2bbe(4): cmp $0x4,%ax
2bc2(3): setz %al
2bc5(4): sub $0x1,%r14d
2bc9(5): cmp $0x1,%r14w
2bce(3): setbe %dl
2bd1(2): or %edx,%eax
2bd3(4): cmp $0xff,%r12d
2bd7(6): jz 0x1b1(%rip)
2bdd(4): cmp %r12d,0x1c(%r13)
2be1(6): jz 0x1a7(%rip)
2be7(2): test %al,%al
2be9(6): jz 0xa3d(%rip)
2bef(4): mov 0x8(%rbx),%rdx
2bf3(3): test %rdx,%rdx
2bf6(6): jz 0xc39(%rip)
2bfc(2): xor %ecx,%ecx
2bfe(3): mov (%rdx),%rax
2c01(4): cmp %rax,0x8(%r13)
2c05(6): jz 0x433(%rip)
2c0b(2): test %cl,%cl
2c0d(6): jz 0xc22(%rip)
2c13(4): movzx 0x10(%rbx),%ecx
2c17(4): mov (%rsp),%rax
2c1b(2): test %cl,%cl
2c1d(4): mov 0x2c(%rax),%r14d
2c21(6): jnz 0x4af(%rip)
2c27(4): mov 0x18(%rsp),%ecx
2c2b(4): mov 0x10(%rsp),%edx
2c2f(6): mov $0x100,%r8d
2c35(3): mov %r11,%rsi
2c38(3): mov %r14d,%edi
2c3b(5): call 0xfffff135(%rip)
2c40(2): test %eax,%eax
2c42(4): setz %r15b
2c46(2): jz 0x10(%rip)
2c48(5): call 0xffffed78(%rip)
2c4d(3): cmp $0x5f,(%rax)
2c50(6): jz 0x858(%rip)
2c56(3): test %r15b,%r15b
2c59(6): jnz 0x53f(%rip)
2c5f(5): movzx 0x11(%rbx),%r15d
2c64(3): test %r15b,%r15b
2c67(6): jz 0x611(%rip)
2c6d(2): mov (%rbx),%eax
2c6f(3): xor %r15d,%r15d
2c72(3): cmp $0x2,%eax
2c75(6): jz 0xed(%rip)
2c7b(2): test %eax,%eax
2c7d(6): jnz 0xe5(%rip)
2c83(8): mov $0x3,0x2c(%rsp)
2c8b(4): mov 0x1c(%r13),%edi
2c8f(5): call 0xfffffe01(%rip)
2c94(4): mov 0x20(%r13),%edi
2c98(5): mov %rax,0x10(%rsp)
2c9d(5): call 0xfffffd93(%rip)
2ca2(4): mov 0x20(%rbx),%r12
2ca6(4): mov 0x18(%rbx),%r14
2caa(3): mov %rax,%r13
2cad(3): mov %r12,%rsi
2cb0(3): mov %r14,%rdi
2cb3(5): call 0xfffffcad(%rip)
2cb8(3): test %r12,%r12
2cbb(5): mov $0x0,%esi
2cc0(5): mov %rax,0x18(%rsp)
2cc5(4): cmovne %r13,%rsi
2cc9(3): test %r14,%r14
2ccc(6): jz 0x564(%rip)
2cd2(5): mov 0x10(%rsp),%rdi
2cd7(5): call 0xfffffc89(%rip)
2cdc(5): mov %rax,0x20(%rsp)
2ce1(4): mov 0x2c(%rsp),%eax
2ce5(3): cmp $0x3,%eax
2ce8(6): jz 0x518(%rip)
2cee(3): cmp $0x4,%eax
2cf1(6): jnz 0x75f(%rip)
2cf7(7): lea 0x8d12(%rip),%rsi
2cfe(5): mov $0x5,%edx
2d03(2): xor %edi,%edi
2d05(5): call 0xffffed7b(%rip)
2d0a(3): mov %rax,%r12
2d0d(3): nop (%rax)
2d10(5): mov 0x8(%rsp),%rsi
2d15(5): mov $0x4,%edi
2d1a(5): call 0x27e6(%rip)
2d1f(5): mov 0x20(%rsp),%r14
2d24(5): mov 0x18(%rsp),%r8
2d29(3): mov %rax,%rdx
2d2c(3): mov %r12,%rsi
2d2f(5): mov $0x1,%edi
2d34(2): xor %eax,%eax
2d36(3): mov %r14,%rcx
2d39(5): call 0xffffef97(%rip)
2d3e(3): mov %r14,%rdi
2d41(5): call 0xfffff09f(%rip)
2d46(5): mov 0x18(%rsp),%rdi
2d4b(5): call 0xfffff095(%rip)
2d50(5): mov 0x10(%rsp),%rdi
2d55(5): call 0xfffff08b(%rip)
2d5a(3): mov %r13,%rdi
2d5d(5): call 0xfffff083(%rip)
2d62(4): cmp $0x0,0x4(%rbx)
2d66(6): jnz 0x27a(%rip)
2d6c(4): mov (%rsp),%rdi
2d70(5): mov $0x4,%edx
2d75(3): mov %rbp,%rsi
2d78(5): call 0x5f88(%rip)
2d7d(5): jmp 0x263(%rip)
2d82(6): nop 0x0(%rax,%rax,1)
2d88(4): cmp $0xff,%r9d
2d8c(6): jz 0x284(%rip)
2d92(4): cmp %r9d,0x20(%r13)
2d96(3): setz %cl
2d99(2): test %al,%al
2d9b(6): jz 0xfffffe70(%rip)
2da1(4): mov 0x8(%rbx),%rdx
2da5(3): test %rdx,%rdx
2da8(6): jz 0xfffffe63(%rip)
2dae(5): jmp 0xfffffe50(%rip)
2db3(5): nop 0x0(%rax,%rax,1)
2db8(6): mov 0x90(%rbp),%eax
2dbe(5): and $0xf000,%eax
2dc3(5): cmp $0xa000,%eax
2dc8(6): jnz 0xfffffdf0(%rip)
2dce(4): mov (%rsp),%rax
2dd2(5): lea 0x40(%rsp),%r13
2dd7(3): xor %r8d,%r8d
2dda(3): mov %r11,%rdx
2ddd(5): mov $0x1,%edi
2de2(5): mov %r9d,0x2c(%rsp)
2de7(3): mov %r13,%rcx
2dea(5): mov %r11,0x20(%rsp)
2def(3): mov 0x2c(%rax),%esi
2df2(5): call 0xffffed2e(%rip)
2df7(2): test %eax,%eax
2df9(6): jnz 0x77f(%rip)
2dff(5): movzx 0x70(%rbp),%r14d
2e04(5): mov 0x20(%rsp),%r11
2e09(5): mov 0x2c(%rsp),%r9d
2e0e(5): jmp 0xfffffdaa(%rip)
2e13(5): nop 0x0(%rax,%rax,1)
2e18(5): movzx 0x4(%rbx),%r15d
2e1d(3): test %r15b,%r15b
2e20(6): jz 0xfffffd5b(%rip)
2e26(4): mov 0x8(%rbx),%rax
2e2a(3): test %rax,%rax
2e2d(6): jz 0x1b3(%rip)
2e33(3): mov (%rax),%rbx
2e36(7): cmp %rbx,0x80(%rsi)
2e3d(6): jnz 0x1a3(%rip)
2e43(4): mov 0x8(%rax),%rax
2e47(4): cmp %rax,0x78(%rsi)
2e4b(6): jnz 0x195(%rip)
2e51(7): lea 0x8c8e(%rip),%rdx
2e58(5): mov 0x8(%rsp),%rsi
2e5d(5): mov $0x2,%ecx
2e62(3): mov %rdx,%rdi
2e65(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2e67(3): setnbe %al
2e6a(2): sbb $0x0,%al
2e6c(2): test %al,%al
2e6e(6): jnz 0x912(%rip)
2e74(5): mov 0x8(%rsp),%rsi
2e79(5): mov $0x4,%edi
2e7e(5): call 0x2682(%rip)
2e83(7): lea 0x88f6(%rip),%rsi
2e8a(3): mov %rax,%rbx
2e8d(5): mov $0x5,%edx
2e92(2): xor %edi,%edi
2e94(5): call 0xffffebec(%rip)
2e99(3): mov %rbx,%rcx
2e9c(3): mov %rax,%rdx
2e9f(2): xor %esi,%esi
2ea1(2): xor %edi,%edi
2ea3(2): xor %eax,%eax
2ea5(5): call 0xffffee4b(%rip)
2eaa(7): lea 0x893f(%rip),%rsi
2eb1(5): mov $0x5,%edx
2eb6(2): xor %edi,%edi
2eb8(3): xor %r15d,%r15d
2ebb(5): call 0xffffebc5(%rip)
2ec0(2): xor %esi,%esi
2ec2(3): mov %rax,%rdx
2ec5(2): xor %edi,%edi
2ec7(2): xor %eax,%eax
2ec9(5): call 0xffffee27(%rip)
2ece(4): mov (%rsp),%rbx
2ed2(5): mov $0x4,%edx
2ed7(3): mov %rbp,%rsi
2eda(3): mov %rbx,%rdi
2edd(5): call 0x5e23(%rip)
2ee2(3): mov %rbx,%rdi
2ee5(5): call 0x569b(%rip)
2eea(5): jmp 0xf6(%rip)
2eef(1): nop 
2ef0(5): movzx 0x11(%rbx),%r15d
2ef5(3): test %r15b,%r15b
2ef8(6): jz 0x578(%rip)
2efe(2): mov (%rbx),%eax
2f00(3): xor %r15d,%r15d
2f03(3): cmp $0x2,%eax
2f06(6): jz 0xfffffe5c(%rip)
2f0c(2): test %eax,%eax
2f0e(6): jnz 0xfffffe54(%rip)
2f14(3): xor %r15d,%r15d
2f17(8): mov $0x3,0x2c(%rsp)
2f1f(4): mov 0x20(%rbx),%r12
2f23(4): mov 0x18(%rbx),%r14
2f27(3): xor %r13d,%r13d
2f2a(9): mov $0x0,0x10(%rsp)
2f33(5): jmp 0xfffffd7a(%rip)
2f38(8): nop 0x0(%rax,%rax,1)
2f40(5): movzx 0x11(%rbx),%r15d
2f45(3): test %r15b,%r15b
2f48(2): jnz 0xffffffb6(%rip)
2f4a(5): mov 0x8(%rsp),%rdx
2f4f(5): mov $0x3,%esi
2f54(2): xor %edi,%edi
2f56(5): call 0x26aa(%rip)
2f5b(3): mov 0x40(%rbp),%esi
2f5e(7): lea 0x7bc4(%rip),%rdx
2f65(3): mov %rax,%rcx
2f68(2): xor %eax,%eax
2f6a(2): xor %edi,%edi
2f6c(5): call 0xffffed84(%rip)
2f71(2): mov (%rbx),%eax
2f73(3): cmp $0x2,%eax
2f76(2): jnz 0xffffff96(%rip)
2f78(5): jmp 0xfffffdea(%rip)
2f7d(3): nop (%rax)
2f80(5): cmp $0x0,0x58(%rsi)
2f85(2): jnz 0xd(%rip)
2f87(5): cmp $0x0,0x20(%rsi)
2f8c(6): jz 0x5cc(%rip)
2f92(5): movzx 0x11(%rbx),%r15d
2f97(3): test %r15b,%r15b
2f9a(6): jnz 0xffffff64(%rip)
2fa0(5): mov 0x8(%rsp),%rsi
2fa5(5): mov $0x4,%edi
2faa(5): call 0x2556(%rip)
2faf(7): lea 0x86e1(%rip),%rsi
2fb6(3): mov %rax,%r12
2fb9(5): mov $0x5,%edx
2fbe(2): xor %edi,%edi
2fc0(5): call 0xffffeac0(%rip)
2fc5(3): mov 0x40(%rbp),%esi
2fc8(3): mov %r12,%rcx
2fcb(3): mov %rax,%rdx
2fce(2): jmp 0xffffff9a(%rip)
2fd0(4): cmp $0x0,0x4(%rbx)
2fd4(6): jnz 0xfffffba7(%rip)
2fda(6): mov $0x1,%r15d
2fe0(8): mov 0x168(%rsp),%rbx
2fe8(9): xor $0x28,%rbx
2ff1(3): mov %r15d,%eax
2ff4(6): jnz 0x836(%rip)
2ffa(7): add $0x178,%rsp
3001(1): pop %rbx
3002(1): pop %rbp
3003(2): pop %r12
3005(2): pop %r13
3007(2): pop %r14
3009(2): pop %r15
300b(1): ret near (%rsp)
300c(4): nop 0x0(%rax)
3010(2): test %al,%al
3012(6): jz 0xfffffc01(%rip)
3018(4): mov 0x8(%rbx),%rdx
301c(3): test %rdx,%rdx
301f(6): jz 0xfffffbf4(%rip)
3025(3): mov (%rdx),%rdi
3028(4): cmp %rdi,0x8(%r13)
302c(6): jnz 0xfffffbe7(%rip)
3032(2): mov %eax,%ecx
3034(4): nop 0x0(%rax)
3038(4): mov 0x8(%rdx),%rax
303c(4): cmp %rax,0x0(%r13)
3040(6): jnz 0xfffffbcb(%rip)
3046(7): lea 0x8a99(%rip),%rdx
304d(5): mov 0x8(%rsp),%rsi
3052(5): mov $0x2,%ecx
3057(3): mov %rdx,%rdi
305a(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
305c(3): setnbe %al
305f(2): sbb $0x0,%al
3061(2): test %al,%al
3063(6): jnz 0x5e5(%rip)
3069(5): mov 0x8(%rsp),%rsi
306e(5): mov $0x4,%edi
3073(5): call 0x248d(%rip)
3078(7): lea 0x8701(%rip),%rsi
307f(3): mov %rax,%rbx
3082(5): mov $0x5,%edx
3087(2): xor %edi,%edi
3089(5): call 0xffffe9f7(%rip)
308e(3): mov %rbx,%rcx
3091(3): mov %rax,%rdx
3094(2): xor %esi,%esi
3096(2): xor %edi,%edi
3098(2): xor %eax,%eax
309a(5): call 0xffffec56(%rip)
309f(7): lea 0x874a(%rip),%rsi
30a6(5): mov $0x5,%edx
30ab(2): xor %edi,%edi
30ad(3): xor %r15d,%r15d
30b0(5): call 0xffffe9d0(%rip)
30b5(2): xor %esi,%esi
30b7(3): mov %rax,%rdx
30ba(2): xor %edi,%edi
30bc(2): xor %eax,%eax
30be(5): call 0xffffec32(%rip)
30c3(5): jmp 0xffffff1d(%rip)
30c8(8): nop 0x0(%rax,%rax,1)
30d0(3): test %r15b,%r15b
30d3(6): jnz 0x9d(%rip)
30d9(4): mov 0x18(%r13),%eax
30dd(5): and $0xf000,%eax
30e2(5): cmp $0x8000,%eax
30e7(6): jz 0x3b1(%rip)
30ed(5): cmp $0x4000,%eax
30f2(8): mov $0x10900,0x20(%rsp)
30fa(2): jnz 0x76(%rip)
30fc(4): mov 0x20(%rsp),%edx
3100(3): mov %r11,%rsi
3103(3): mov %r14d,%edi
3106(5): mov %r9d,0x30(%rsp)
310b(4): mov %cl,0x2c(%rsp)
310f(5): mov %r11,0x38(%rsp)
3114(5): call 0xffffea6c(%rip)
3119(2): test %eax,%eax
311b(3): mov %eax,%r8d
311e(5): movzx 0x2c(%rsp),%ecx
3123(5): mov 0x30(%rsp),%r9d
3128(6): jns 0x1b0(%rip)
312e(5): call 0xffffe892(%rip)
3133(3): cmp $0xd,(%rax)
3136(3): mov %rax,%r10
3139(5): movzx 0x2c(%rsp),%ecx
313e(5): mov 0x30(%rsp),%r9d
3143(5): mov 0x38(%rsp),%r11
3148(6): jnz 0xfffffb17(%rip)
314e(4): mov 0x18(%r13),%eax
3152(5): and $0xf000,%eax
3157(5): cmp $0x8000,%eax
315c(6): jz 0x5ca(%rip)
3162(4): mov (%rsp),%rax
3166(4): mov 0x2c(%rax),%r14d
316a(6): nop 0x0(%rax,%rax,1)
3170(4): mov 0x18(%rsp),%ecx
3174(4): mov 0x10(%rsp),%edx
3178(3): xor %r8d,%r8d
317b(3): mov %r11,%rsi
317e(3): mov %r14d,%edi
3181(5): call 0xffffebef(%rip)
3186(2): test %eax,%eax
3188(4): setz %r15b
318c(5): jmp 0xfffffaca(%rip)
3191(7): nop 0x0(%rax)
3198(2): mov (%rbx),%eax
319a(3): cmp $0x2,%eax
319d(6): jz 0xfffffbc5(%rip)
31a3(4): mov 0x10(%rsp),%esi
31a7(3): cmp $0xff,%esi
31aa(2): jz 0x1a(%rip)
31ac(4): cmp %esi,0x1c(%r13)
31b0(6): mov $0x1,%r15d
31b6(8): mov $0x2,0x2c(%rsp)
31be(6): jnz 0xfffffacd(%rip)
31c4(4): mov 0x18(%rsp),%esi
31c8(3): cmp $0xff,%esi
31cb(6): jz 0x225(%rip)
31d1(4): cmp %esi,0x20(%r13)
31d5(6): mov $0x1,%r15d
31db(8): mov $0x2,0x2c(%rsp)
31e3(6): jnz 0xfffffaa8(%rip)
31e9(2): test %eax,%eax
31eb(6): jnz 0xfffffb77(%rip)
31f1(8): mov $0x4,0x2c(%rsp)
31f9(5): jmp 0xfffffa92(%rip)
31fe(2): nop 
3200(6): cmp $0x0,0x20(%rsp)
3206(5): mov $0x5,%edx
320b(6): jz 0x315(%rip)
3211(3): test %r14,%r14
3214(6): jz 0x1b4(%rip)
321a(7): lea 0x8717(%rip),%rsi
3221(2): xor %edi,%edi
3223(5): call 0xffffe85d(%rip)
3228(3): mov %rax,%r12
322b(5): jmp 0xfffffae5(%rip)
3230(2): xor %edi,%edi
3232(5): call 0xfffff72e(%rip)
3237(5): mov %rax,0x20(%rsp)
323c(4): mov 0x2c(%rsp),%eax
3240(3): cmp $0x3,%eax
3243(2): jz 0xffffffbd(%rip)
3245(3): cmp $0x4,%eax
3248(6): jnz 0x158(%rip)
324e(3): test %r12,%r12
3251(5): mov $0x5,%edx
3256(6): jz 0x382(%rip)
325c(7): lea 0x84c0(%rip),%rsi
3263(2): xor %edi,%edi
3265(5): call 0xffffe81b(%rip)
326a(3): mov %rax,%r12
326d(5): jmp 0xfffffaa3(%rip)
3272(6): nop 0x0(%rax,%rax,1)
3278(5): mov 0x8(%rsp),%rsi
327d(5): mov $0x4,%edi
3282(5): call 0x227e(%rip)
3287(5): cmp $0xff,0x10(%rsp)
328c(3): mov %rax,%r14
328f(5): mov $0x5,%edx
3294(6): jz 0x174(%rip)
329a(7): lea 0x8436(%rip),%rsi
32a1(2): xor %edi,%edi
32a3(5): call 0xffffe7dd(%rip)
32a8(3): mov %rax,%r12
32ab(5): call 0xffffe715(%rip)
32b0(2): mov (%rax),%esi
32b2(2): xor %edi,%edi
32b4(2): xor %eax,%eax
32b6(3): mov %r14,%rcx
32b9(3): mov %r12,%rdx
32bc(5): call 0xffffea34(%rip)
32c1(2): mov (%rbx),%eax
32c3(3): cmp $0x2,%eax
32c6(6): jnz 0xfffff9b5(%rip)
32cc(5): jmp 0xfffffa96(%rip)
32d1(7): nop 0x0(%rax)
32d8(8): lea 0xd0(%rsp),%rdx
32e0(3): mov %r8d,%esi
32e3(5): mov $0x1,%edi
32e8(5): mov %r8d,0x20(%rsp)
32ed(5): mov %r9d,0x30(%rsp)
32f2(4): mov %cl,0x2c(%rsp)
32f6(5): call 0xffffe97a(%rip)
32fb(2): test %eax,%eax
32fd(5): mov 0x20(%rsp),%r8d
3302(6): jnz 0x2ae(%rip)
3308(8): mov 0xd8(%rsp),%rax
3310(4): cmp %rax,0x8(%r13)
3314(5): movzx 0x2c(%rsp),%ecx
3319(5): mov 0x30(%rsp),%r9d
331e(6): jz 0x382(%rip)
3324(5): mov %r8d,0x10(%rsp)
3329(5): call 0xffffe697(%rip)
332e(5): mov 0x10(%rsp),%r8d
3333(3): mov %rax,%r12
3336(3): mov (%rax),%r14d
3339(3): mov %r8d,%edi
333c(5): call 0xffffe834(%rip)
3341(2): mov (%rbx),%eax
3343(4): mov %r14d,(%r12)
3347(3): cmp $0x2,%eax
334a(6): jnz 0xfffff931(%rip)
3350(5): jmp 0xfffffa12(%rip)
3355(3): nop (%rax)
3358(5): mov 0x8(%rsp),%rdx
335d(5): mov $0x3,%esi
3362(2): xor %edi,%edi
3364(3): xor %r15d,%r15d
3367(5): call 0x2299(%rip)
336c(7): lea 0x84b5(%rip),%rsi
3373(3): mov %rax,%rbx
3376(5): mov $0x5,%edx
337b(2): xor %edi,%edi
337d(5): call 0xffffe703(%rip)
3382(3): mov %rbx,%rcx
3385(3): mov %rax,%rdx
3388(2): xor %esi,%esi
338a(2): xor %edi,%edi
338c(2): xor %eax,%eax
338e(5): call 0xffffe962(%rip)
3393(5): jmp 0xfffffc4d(%rip)
3398(8): nop 0x0(%rax,%rax,1)
33a0(3): test %r12,%r12
33a3(5): mov $0x5,%edx
33a8(6): jz 0x268(%rip)
33ae(7): lea 0x855b(%rip),%rsi
33b5(2): xor %edi,%edi
33b7(5): call 0xffffe6c9(%rip)
33bc(3): mov %rax,%r12
33bf(5): jmp 0xfffff951(%rip)
33c4(4): nop 0x0(%rax)
33c8(3): test %r12,%r12
33cb(6): jz 0x345(%rip)
33d1(7): lea 0x8590(%rip),%rsi
33d8(2): xor %edi,%edi
33da(5): call 0xffffe6a6(%rip)
33df(3): mov %rax,%r12
33e2(5): jmp 0xfffff92e(%rip)
33e7(9): nop 0x0(%rax,%rax,1)
33f0(2): test %eax,%eax
33f2(6): jnz 0x246(%rip)
33f8(6): mov $0x1,%r15d
33fe(5): jmp 0xfffffdf3(%rip)
3403(5): nop 0x0(%rax,%rax,1)
3408(7): lea 0x82e1(%rip),%rsi
340f(2): xor %edi,%edi
3411(5): call 0xffffe66f(%rip)
3416(3): mov %rax,%r12
3419(5): jmp 0xfffffe92(%rip)
341e(2): nop 
3420(2): test %cl,%cl
3422(6): jnz 0xfffff996(%rip)
3428(3): mov %r14d,%eax
342b(3): and $0xfd,%eax
342e(4): cmp $0x4,%ax
3432(2): jz 0x11(%rip)
3434(4): sub $0x1,%r14d
3438(5): cmp $0x1,%r14w
343d(6): jnbe 0xfffff7da(%rip)
3443(4): mov (%rsp),%rax
3447(4): mov 0x2c(%rax),%r14d
344b(5): jmp 0xfffff7dc(%rip)
3450(7): lea 0x8491(%rip),%rsi
3457(5): mov $0x5,%edx
345c(2): xor %edi,%edi
345e(5): call 0xffffe622(%rip)
3463(3): mov %rax,%r12
3466(5): jmp 0xfffff8aa(%rip)
346b(5): nop 0x0(%rax,%rax,1)
3470(5): mov 0x8(%rsp),%rsi
3475(5): mov $0x4,%edi
347a(5): call 0x2086(%rip)
347f(5): mov $0x5,%edx
3484(3): mov %rax,%r12
3487(7): lea 0x821a(%rip),%rsi
348e(5): jmp 0xfffffb30(%rip)
3493(5): nop 0x0(%rax,%rax,1)
3498(8): mov $0x900,0x20(%rsp)
34a0(5): jmp 0xfffffc5c(%rip)
34a5(3): nop (%rax)
34a8(2): mov (%rbx),%eax
34aa(6): mov $0x1,%r15d
34b0(3): cmp $0x2,%eax
34b3(6): jz 0xfffff8af(%rip)
34b9(2): test %eax,%eax
34bb(6): jnz 0xfffff8a7(%rip)
34c1(4): mov 0x1c(%r13),%edi
34c5(5): call 0xfffff5cb(%rip)
34ca(4): mov 0x20(%r13),%edi
34ce(5): mov %rax,0x10(%rsp)
34d3(5): call 0xfffff55d(%rip)
34d8(5): mov 0x8(%rsp),%rsi
34dd(5): mov $0x4,%edi
34e2(3): mov %rax,%r13
34e5(5): call 0x201b(%rip)
34ea(7): lea 0x853f(%rip),%rsi
34f1(3): mov %rax,%r12
34f4(2): xor %edi,%edi
34f6(5): mov $0x5,%edx
34fb(5): call 0xffffe585(%rip)
3500(3): mov %r12,%rdx
3503(3): mov %rax,%rsi
3506(5): mov $0x1,%edi
350b(2): xor %eax,%eax
350d(5): call 0xffffe7c3(%rip)
3512(5): jmp 0xfffff83e(%rip)
3517(9): nop 0x0(%rax,%rax,1)
3520(3): test %r14,%r14
3523(7): lea 0x8496(%rip),%rsi
352a(6): jz 0xc6(%rip)
3530(2): xor %edi,%edi
3532(5): call 0xffffe54e(%rip)
3537(3): mov %rax,%r12
353a(5): mov 0x18(%rsp),%rax
353f(9): mov $0x0,0x18(%rsp)
3548(5): mov %rax,0x20(%rsp)
354d(5): jmp 0xfffff7c3(%rip)
3552(6): nop 0x0(%rax,%rax,1)
3558(4): mov (%rsp),%rdi
355c(8): mov $0x1,0x20(%rsi)
3564(5): mov $0x1,%edx
3569(5): call 0x5797(%rip)
356e(5): jmp 0xfffffa6c(%rip)
3573(5): nop 0x0(%rax,%rax,1)
3578(5): movzx 0x11(%rbx),%r15d
357d(3): test %r15b,%r15b
3580(6): jnz 0xfffff6ed(%rip)
3586(5): mov 0x8(%rsp),%rsi
358b(5): mov $0x4,%edi
3590(5): call 0x1f70(%rip)
3595(5): mov $0x5,%edx
359a(3): mov %rax,%r14
359d(7): lea 0x811d(%rip),%rsi
35a4(5): jmp 0xfffffe6b(%rip)
35a9(7): nop 0x0(%rax)
35b0(5): mov %r8d,0x18(%rsp)
35b5(5): call 0xffffe40b(%rip)
35ba(5): mov 0x18(%rsp),%r8d
35bf(3): mov (%rax),%r12d
35c2(3): mov %rax,%r14
35c5(3): mov %r8d,%edi
35c8(5): call 0xffffe5a8(%rip)
35cd(3): mov %r12d,(%r14)
35d0(5): jmp 0xfffff68f(%rip)
35d5(3): nop (%rax)
35d8(7): lea 0x8160(%rip),%rsi
35df(2): xor %edi,%edi
35e1(5): call 0xffffe49f(%rip)
35e6(3): mov %rax,%r12
35e9(5): jmp 0xfffff727(%rip)
35ee(2): nop 
35f0(3): test %r12,%r12
35f3(7): lea 0x83ee(%rip),%rsi
35fa(6): jnz 0xffffff36(%rip)
3600(7): lea 0x8391(%rip),%rsi
3607(5): jmp 0xffffff29(%rip)
360c(4): nop 0x0(%rax)
3610(7): lea 0x80ee(%rip),%rsi
3617(2): xor %edi,%edi
3619(5): call 0xffffe467(%rip)
361e(3): mov %rax,%r12
3621(5): jmp 0xfffff6ef(%rip)
3626(2): mov (%rbx),%eax
3628(3): cmp $0x2,%eax
362b(2): jz 0xd(%rip)
362d(2): test %eax,%eax
362f(6): jz 0x219(%rip)
3635(3): nop (%rax)
3638(6): mov $0x1,%r15d
363e(5): jmp 0xfffff724(%rip)
3643(5): nop 0x0(%rax,%rax,1)
3648(5): mov $0x4,%esi
364d(5): mov $0x1,%edi
3652(5): call 0x1d8e(%rip)
3657(5): mov 0x8(%rsp),%rdx
365c(2): xor %edi,%edi
365e(5): mov $0x4,%esi
3663(3): mov %rax,%rbp
3666(5): call 0x1d7a(%rip)
366b(7): lea 0x813e(%rip),%rsi
3672(3): mov %rax,%rbx
3675(2): xor %edi,%edi
3677(5): mov $0x5,%edx
367c(5): call 0xffffe404(%rip)
3681(3): mov %rbp,%r8
3684(3): mov %rax,%rdx
3687(3): mov %rbx,%rcx
368a(2): xor %esi,%esi
368c(2): xor %edi,%edi
368e(2): xor %eax,%eax
3690(5): call 0xffffe660(%rip)
3695(5): jmp 0xfffffa0a(%rip)
369a(6): nop 0x0(%rax,%rax,1)
36a0(8): mov 0xd0(%rsp),%rax
36a8(4): cmp %rax,0x0(%r13)
36ac(6): jnz 0xfffffc78(%rip)
36b2(4): cmp $0xff,%r12d
36b6(6): jz 0x122(%rip)
36bc(8): cmp 0xec(%rsp),%r12d
36c4(6): jz 0x10e(%rip)
36ca(5): mov %r8d,0x2c(%rsp)
36cf(4): mov %cl,0x20(%rsp)
36d3(5): call 0xffffe2ed(%rip)
36d8(5): mov 0x2c(%rsp),%r8d
36dd(3): mov (%rax),%r14d
36e0(3): mov %rax,%r12
36e3(3): mov %r8d,%edi
36e6(5): call 0xffffe48a(%rip)
36eb(4): mov %r14d,(%r12)
36ef(2): mov (%rbx),%eax
36f1(5): movzx 0x20(%rsp),%ecx
36f6(3): cmp $0x2,%eax
36f9(6): jnz 0xfffffaaa(%rip)
36ff(3): mov %ecx,%r15d
3702(5): jmp 0xfffff660(%rip)
3707(9): nop 0x0(%rax,%rax,1)
3710(7): lea 0x8281(%rip),%rsi
3717(2): xor %edi,%edi
3719(5): call 0xffffe367(%rip)
371e(3): mov %rax,%r12
3721(5): jmp 0xfffff5ef(%rip)
3726(4): mov 0x20(%rsp),%edx
372a(3): mov %r11,%rsi
372d(3): mov %r14d,%edi
3730(5): mov %r9d,0x38(%rsp)
3735(5): mov %r10,0x30(%rsp)
373a(4): mov %cl,0x2c(%rsp)
373e(5): mov %r11,0x20(%rsp)
3743(3): or $0x1,%edx
3746(5): call 0xffffe43a(%rip)
374b(2): test %eax,%eax
374d(3): mov %eax,%r8d
3750(5): mov 0x20(%rsp),%r11
3755(5): movzx 0x2c(%rsp),%ecx
375a(5): mov 0x30(%rsp),%r10
375f(5): mov 0x38(%rsp),%r9d
3764(6): jns 0xfffffb74(%rip)
376a(4): cmp $0xd,(%r10)
376e(6): jz 0xfffff9f4(%rip)
3774(5): jmp 0xfffff4eb(%rip)
3779(7): nop 0x0(%rax)
3780(5): mov $0x4,%esi
3785(5): mov $0x1,%edi
378a(5): call 0x1c56(%rip)
378f(5): mov 0x8(%rsp),%rdx
3794(2): xor %edi,%edi
3796(5): mov $0x4,%esi
379b(3): mov %rax,%r12
379e(5): call 0x1c42(%rip)
37a3(7): lea 0x8006(%rip),%rsi
37aa(3): mov %rax,%rbx
37ad(2): xor %edi,%edi
37af(5): mov $0x5,%edx
37b4(5): call 0xffffe2cc(%rip)
37b9(3): mov %r12,%r8
37bc(3): mov %rax,%rdx
37bf(3): mov %rbx,%rcx
37c2(2): xor %esi,%esi
37c4(2): xor %edi,%edi
37c6(2): xor %eax,%eax
37c8(5): call 0xffffe528(%rip)
37cd(5): jmp 0xfffff6dd(%rip)
37d2(4): cmp $0xff,%r9d
37d6(2): jz 0x10(%rip)
37d8(8): cmp 0xf0(%rsp),%r9d
37e0(6): jnz 0xfffffeea(%rip)
37e6(4): mov 0x18(%rsp),%edx
37ea(4): mov 0x10(%rsp),%esi
37ee(3): mov %r8d,%edi
37f1(4): mov %cl,0x2c(%rsp)
37f5(5): mov %r8d,0x20(%rsp)
37fa(5): call 0xffffe526(%rip)
37ff(2): test %eax,%eax
3801(5): mov 0x20(%rsp),%r8d
3806(5): movzx 0x2c(%rsp),%ecx
380b(6): jnz 0xfffffda5(%rip)
3811(3): mov %r8d,%edi
3814(4): mov %cl,0x20(%rsp)
3818(5): call 0xffffe358(%rip)
381d(2): test %eax,%eax
381f(6): jnz 0xfffff440(%rip)
3825(5): jmp 0xfffffeca(%rip)
382a(5): call 0xffffe2a6(%rip)
382f(2): mov (%rbx),%eax
3831(6): mov $0x1,%r15d
3837(3): cmp $0x2,%eax
383a(6): jz 0xfffff528(%rip)
3840(2): test %eax,%eax
3842(6): jnz 0xfffff520(%rip)
3848(3): test %r13,%r13
384b(2): jnz 0x15(%rip)
384d(6): mov $0x1,%r15d
3853(8): mov $0x4,0x2c(%rsp)
385b(5): jmp 0xfffff6c4(%rip)
3860(8): mov $0x4,0x2c(%rsp)
3868(6): mov $0x1,%r15d
386e(5): jmp 0xfffff41d(%rip)

"chown_files" :
3880(2): push %r15
3882(2): push %r14
3884(3): mov %ecx,%r15d
3887(2): push %r13
3889(2): push %r12
388b(3): mov %r8d,%r13d
388e(1): push %rbp
388f(1): push %rbx
3890(3): mov %r9d,%r14d
3893(4): sub $0x18,%rsp
3897(4): cmp $0xff,%r8d
389b(4): mov %edx,0xc(%rsp)
389f(5): mov 0x50(%rsp),%r12
38a4(2): jnz 0x14(%rip)
38a6(4): cmp $0xff,%r9d
38aa(2): jnz 0xe(%rip)
38ac(6): cmp $0x0,0x10(%r12)
38b2(6): jz 0xae(%rip)
38b8(2): xor %edx,%edx
38ba(5): mov $0x1,%ebx
38bf(5): call 0x2d01(%rip)
38c4(3): mov %rax,%rbp
38c7(2): jmp 0x2b(%rip)
38c9(7): nop 0x0(%rax)
38d0(4): sub $0x8,%rsp
38d4(3): mov %r14d,%r9d
38d7(3): mov %r13d,%r8d
38da(2): push %r12
38dc(4): mov 0x1c(%rsp),%edx
38e0(3): mov %r15d,%ecx
38e3(3): mov %rax,%rsi
38e6(3): mov %rbp,%rdi
38e9(5): call 0xfffff207(%rip)
38ee(2): and %eax,%ebx
38f0(1): pop %rax
38f1(1): pop %rdx
38f2(3): mov %rbp,%rdi
38f5(5): call 0x4c8b(%rip)
38fa(3): test %rax,%rax
38fd(2): jnz 0xffffffd3(%rip)
38ff(5): call 0xffffe0c1(%rip)
3904(2): mov (%rax),%ecx
3906(3): mov %rax,%r13
3909(2): test %ecx,%ecx
390b(2): jz 0xe(%rip)
390d(6): movzx 0x11(%r12),%ebx
3913(2): test %bl,%bl
3915(2): jz 0x63(%rip)
3917(2): xor %ebx,%ebx
3919(3): mov %rbp,%rdi
391c(5): call 0x4ad4(%rip)
3921(2): test %eax,%eax
3923(2): jz 0x27(%rip)
3925(7): lea 0x7e3d(%rip),%rsi
392c(5): mov $0x5,%edx
3931(2): xor %edi,%edi
3933(2): xor %ebx,%ebx
3935(5): call 0xffffe14b(%rip)
393a(4): mov 0x0(%r13),%esi
393e(3): mov %rax,%rdx
3941(2): xor %edi,%edi
3943(2): xor %eax,%eax
3945(5): call 0xffffe3ab(%rip)
394a(4): add $0x18,%rsp
394e(2): mov %ebx,%eax
3950(1): pop %rbx
3951(1): pop %rbp
3952(2): pop %r12
3954(2): pop %r13
3956(2): pop %r14
3958(2): pop %r15
395a(1): ret near (%rsp)
395b(5): nop 0x0(%rax,%rax,1)
3960(2): mov %esi,%eax
3962(3): or $0x8,%eax
3965(5): cmp $0x2,(%r12)
396a(3): cmove %eax,%esi
396d(5): jmp 0xffffff4b(%rip)
3972(6): nop 0x0(%rax,%rax,1)
3978(7): lea 0x7dda(%rip),%rsi
397f(2): xor %edi,%edi
3981(5): mov $0x5,%edx
3986(5): call 0xffffe0fa(%rip)
398b(4): mov 0x0(%r13),%esi
398f(3): mov %rax,%rdx
3992(2): xor %edi,%edi
3994(2): xor %eax,%eax
3996(5): call 0xffffe35a(%rip)
399b(5): jmp 0xffffff7e(%rip)

"close_stdout_set_file_name" :
39a0(7): mov %rdi,0x20b749(%rip)
39a7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
39b0(7): mov %dil,0x20b731(%rip)
39b7(1): ret near (%rsp)

"close_stdout" :
39c0(1): push %rbp
39c1(1): push %rbx
39c2(4): sub $0x8,%rsp
39c6(7): mov 0x20b6bb(%rip),%rdi
39cd(5): call 0x5543(%rip)
39d2(2): test %eax,%eax
39d4(2): jz 0x18(%rip)
39d6(5): call 0xffffdfea(%rip)
39db(7): cmp $0x0,0x20b706(%rip)
39e2(3): mov %rax,%rbx
39e5(2): jz 0x1e(%rip)
39e7(3): cmp $0x20,(%rax)
39ea(2): jnz 0x19(%rip)
39ec(7): mov 0x20b6cd(%rip),%rdi
39f3(5): call 0x551d(%rip)
39f8(2): test %eax,%eax
39fa(2): jnz 0x48(%rip)
39fc(4): add $0x8,%rsp
3a00(1): pop %rbx
3a01(1): pop %rbp
3a02(1): ret near (%rsp)
3a03(7): lea 0x808f(%rip),%rsi
3a0a(2): xor %edi,%edi
3a0c(5): mov $0x5,%edx
3a11(5): call 0xffffe06f(%rip)
3a16(7): mov 0x20b6d3(%rip),%rdi
3a1d(3): mov %rax,%rbp
3a20(3): test %rdi,%rdi
3a23(2): jz 0x2a(%rip)
3a25(5): call 0x1bab(%rip)
3a2a(2): mov (%rbx),%esi
3a2c(7): lea 0x70f2(%rip),%rdx
3a33(3): mov %rax,%rcx
3a36(3): mov %rbp,%r8
3a39(2): xor %edi,%edi
3a3b(2): xor %eax,%eax
3a3d(5): call 0xffffe2b3(%rip)
3a42(6): mov 0x20b5d0(%rip),%edi
3a48(5): call 0xffffdf98(%rip)
3a4d(2): mov (%rbx),%esi
3a4f(7): lea 0x70d3(%rip),%rdx
3a56(3): mov %rax,%rcx
3a59(2): xor %edi,%edi
3a5b(2): xor %eax,%eax
3a5d(5): call 0xffffe293(%rip)
3a62(2): jmp 0xffffffe0(%rip)

"umaxtostr" :
3a70(4): lea 0x14(%rsi),%rcx
3a74(4): mov $0x0,0x14(%rsi)
3a78(a): mov $0x-3689348814741910323,%rsi
3a82(6): nop 0x0(%rax,%rax,1)
3a88(3): mov %rdi,%rax
3a8b(4): sub $0x1,%rcx
3a8f(3): mul %rax,%rsi,%rdx
3a92(4): shr $0x3,%rdx
3a96(4): lea 0x0(%rdx,%rdx,4),%rax
3a9a(3): add %rax,%rax
3a9d(3): sub %rax,%rdi
3aa0(3): add $0x30,%edi
3aa3(3): test %rdx,%rdx
3aa6(3): mov %dil,(%rcx)
3aa9(3): mov %rdx,%rdi
3aac(2): jnz 0xffffffdc(%rip)
3aae(3): mov %rcx,%rax
3ab1(1): ret near (%rsp)

"set_program_name" :
3ac0(3): test %rdi,%rdi
3ac3(1): push %rbx
3ac4(2): jz 0x79(%rip)
3ac6(5): mov $0x2f,%esi
3acb(3): mov %rdi,%rbx
3ace(5): call 0xffffe062(%rip)
3ad3(3): test %rax,%rax
3ad6(2): jz 0x57(%rip)
3ad8(4): lea 0x1(%rax),%r8
3adc(3): mov %r8,%rdx
3adf(3): sub %rbx,%rdx
3ae2(4): cmp $0x6,%rdx
3ae6(2): jle 0x47(%rip)
3ae8(4): lea 0xfffffffa(%rax),%rsi
3aec(7): lea 0x7fed(%rip),%rdi
3af3(5): mov $0x7,%ecx
3af8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3afa(3): setnbe %dl
3afd(3): sbb $0x0,%dl
3b00(2): test %dl,%dl
3b02(2): jnz 0x2b(%rip)
3b04(7): lea 0x7fdd(%rip),%rdi
3b0b(5): mov $0x3,%ecx
3b10(3): mov %r8,%rsi
3b13(3): mov %r8,%rbx
3b16(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3b18(3): setnbe %dl
3b1b(3): sbb $0x0,%dl
3b1e(2): test %dl,%dl
3b20(2): jnz 0xd(%rip)
3b22(4): lea 0x4(%rax),%rbx
3b26(7): mov %rbx,0x20b553(%rip)
3b2d(7): mov %rbx,0x20b5c4(%rip)
3b34(7): mov %rbx,0x20b565(%rip)
3b3b(1): pop %rbx
3b3c(1): ret near (%rsp)
3b3d(7): mov 0x20b57c(%rip),%rcx
3b44(7): lea 0x7f5d(%rip),%rdi
3b4b(5): mov $0x37,%edx
3b50(5): mov $0x1,%esi
3b55(5): call 0xffffe23b(%rip)
3b5a(5): call 0xffffde56(%rip)

"gettext_quote.part.1" :
3b60(1): push %rbp
3b61(1): push %rbx
3b62(3): mov %rdi,%rbp
3b65(2): mov %esi,%ebx
3b67(4): sub $0x8,%rsp
3b6b(5): call 0x6925(%rip)
3b70(3): movzx (%rax),%edx
3b73(3): and $0xdf,%edx
3b76(3): cmp $0x55,%dl
3b79(2): jz 0x77(%rip)
3b7b(3): cmp $0x47,%dl
3b7e(2): jz 0x22(%rip)
3b80(7): lea 0x7f74(%rip),%rax
3b87(7): lea 0x7f6f(%rip),%rdx
3b8e(3): cmp $0x9,%ebx
3b91(4): cmovne %rdx,%rax
3b95(4): add $0x8,%rsp
3b99(1): pop %rbx
3b9a(1): pop %rbp
3b9b(1): ret near (%rsp)
3b9c(4): nop 0x0(%rax)
3ba0(4): movzx 0x1(%rax),%edx
3ba4(3): and $0xdf,%edx
3ba7(3): cmp $0x42,%dl
3baa(2): jnz 0xffffffd6(%rip)
3bac(4): cmp $0x31,0x2(%rax)
3bb0(2): jnz 0xffffffd0(%rip)
3bb2(4): cmp $0x38,0x3(%rax)
3bb6(2): jnz 0xffffffca(%rip)
3bb8(4): cmp $0x30,0x4(%rax)
3bbc(2): jnz 0xffffffc4(%rip)
3bbe(4): cmp $0x33,0x5(%rax)
3bc2(2): jnz 0xffffffbe(%rip)
3bc4(4): cmp $0x30,0x6(%rax)
3bc8(2): jnz 0xffffffb8(%rip)
3bca(4): cmp $0x0,0x7(%rax)
3bce(2): jnz 0xffffffb2(%rip)
3bd0(4): cmp $0x60,0x0(%rbp)
3bd4(7): lea 0x7f19(%rip),%rax
3bdb(7): lea 0x7f16(%rip),%rdx
3be2(4): cmovne %rdx,%rax
3be6(4): add $0x8,%rsp
3bea(1): pop %rbx
3beb(1): pop %rbp
3bec(1): ret near (%rsp)
3bed(3): nop (%rax)
3bf0(4): movzx 0x1(%rax),%edx
3bf4(3): and $0xdf,%edx
3bf7(3): cmp $0x54,%dl
3bfa(2): jnz 0xffffff86(%rip)
3bfc(4): movzx 0x2(%rax),%edx
3c00(3): and $0xdf,%edx
3c03(3): cmp $0x46,%dl
3c06(6): jnz 0xffffff7a(%rip)
3c0c(4): cmp $0x2d,0x3(%rax)
3c10(6): jnz 0xffffff70(%rip)
3c16(4): cmp $0x38,0x4(%rax)
3c1a(6): jnz 0xffffff66(%rip)
3c20(4): cmp $0x0,0x5(%rax)
3c24(6): jnz 0xffffff5c(%rip)
3c2a(4): cmp $0x60,0x0(%rbp)
3c2e(7): lea 0x7eb7(%rip),%rax
3c35(7): lea 0x7eb4(%rip),%rdx
3c3c(4): cmovne %rdx,%rax
3c40(4): add $0x8,%rsp
3c44(1): pop %rbx
3c45(1): pop %rbp
3c46(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3c50(2): push %r15
3c52(2): push %r14
3c54(3): mov %r8d,%r15d
3c57(2): push %r13
3c59(2): push %r12
3c5b(3): mov %rdi,%r14
3c5e(1): push %rbp
3c5f(1): push %rbx
3c60(3): mov %r9d,%ebx
3c63(3): mov %rsi,%r13
3c66(3): mov %rcx,%rbp
3c69(3): and $0x2,%ebx
3c6c(7): sub $0xb8,%rsp
3c73(8): mov 0xf0(%rsp),%rax
3c7b(5): mov %rdx,0x10(%rsp)
3c80(5): mov %r8d,0x8(%rsp)
3c85(5): mov %r9d,0x78(%rsp)
3c8a(5): mov %rax,0x20(%rsp)
3c8f(8): mov 0xf8(%rsp),%rax
3c97(5): mov %rax,0x68(%rsp)
3c9c(8): mov 0x100(%rsp),%rax
3ca4(5): mov %rax,0x60(%rsp)
3ca9(9): mov $0x28,%rax
3cb2(8): mov %rax,0xa8(%rsp)
3cba(2): xor %eax,%eax
3cbc(5): call 0xffffddd4(%rip)
3cc1(4): cmp $0xa,%r15d
3cc5(5): mov %rax,0x58(%rsp)
3cca(6): jnbe 0x11b5(%rip)
3cd0(7): lea 0x7e89(%rip),%rcx
3cd7(3): mov %r15d,%edx
3cda(4): movsxd 0x0(%rcx,%rdx,4),%rax
3cde(3): add %rcx,%rax
3ce1(2): jmp %rax
3ce3(5): mov $0x1,0xe(%rsp)
3ce8(5): mov $0x0,0x7c(%rsp)
3ced(3): xor %r12d,%r12d
3cf0(9): mov $0x0,0x50(%rsp)
3cf9(5): mov $0x1,0xf(%rsp)
3cfe(5): mov $0x0,0xd(%rsp)
3d03(7): lea 0x7df3(%rip),%rax
3d0a(9): mov $0x1,0x18(%rsp)
3d13(3): xor %r15d,%r15d
3d16(8): mov $0x2,0x8(%rsp)
3d1e(5): mov %rax,0x48(%rsp)
3d23(3): xor %r11d,%r11d
3d26(3): mov %rbp,%rax
3d29(3): mov %r12d,%r8d
3d2c(3): mov %r11,%rbp
3d2f(3): mov %rax,%r11
3d32(6): nop 0x0(%rax,%rax,1)
3d38(3): cmp %rbp,%r11
3d3b(4): setnz %r12b
3d3f(4): cmp $0xffffffff,%r11
3d43(2): jnz 0xf(%rip)
3d45(5): mov 0x10(%rsp),%rax
3d4a(4): cmp $0x0,0x0(%rax,%rbp,1)
3d4e(4): setnz %r12b
3d52(3): test %r12b,%r12b
3d55(6): jz 0x65b(%rip)
3d5b(5): cmp $0x2,0x8(%rsp)
3d60(5): mov 0x10(%rsp),%rdi
3d65(4): lea 0x0(%rdi,%rbp,1),%r9
3d69(3): setnz %al
3d6c(4): and 0xd(%rsp),%al
3d70(3): mov %eax,%r10d
3d73(6): jz 0xad(%rip)
3d79(5): mov 0x18(%rsp),%rax
3d7e(3): test %rax,%rax
3d81(6): jz 0x42f(%rip)
3d87(4): cmp $0xffffffff,%r11
3d8b(5): lea 0x0(%rbp,%rax,1),%rbx
3d90(2): jnz 0x30(%rip)
3d92(4): cmp $0x1,%rax
3d96(2): jbe 0x2a(%rip)
3d98(5): mov %r8b,0x38(%rsp)
3d9d(5): mov %r10b,0x30(%rsp)
3da2(5): mov %r9,0x28(%rsp)
3da7(5): call 0xffffdcf9(%rip)
3dac(6): movzx 0x38(%rsp),%r8d
3db2(6): movzx 0x30(%rsp),%r10d
3db8(3): mov %rax,%r11
3dbb(5): mov 0x28(%rsp),%r9
3dc0(3): cmp %r11,%rbx
3dc3(5): mov %r10b,0x28(%rsp)
3dc8(6): jnbe 0x5b8(%rip)
3dce(5): mov 0x18(%rsp),%rdx
3dd3(5): mov 0x48(%rsp),%rsi
3dd8(3): mov %r9,%rdi
3ddb(5): mov %r11,0x40(%rsp)
3de0(5): mov %r8b,0x38(%rsp)
3de5(5): mov %r9,0x30(%rsp)
3dea(5): call 0xffffddb6(%rip)
3def(2): test %eax,%eax
3df1(5): mov 0x30(%rsp),%r9
3df6(6): movzx 0x38(%rsp),%r8d
3dfc(5): mov 0x40(%rsp),%r11
3e01(6): jnz 0x57f(%rip)
3e07(5): cmp $0x0,0xf(%rsp)
3e0c(6): movzx 0x28(%rsp),%r10d
3e12(6): jnz 0xf83(%rip)
3e18(8): nop 0x0(%rax,%rax,1)
3e20(4): movzx (%r9),%ebx
3e24(3): cmp $0x7e,%bl
3e27(6): jnbe 0x321(%rip)
3e2d(7): lea 0x7d58(%rip),%rcx
3e34(3): movzx %bl,%edx
3e37(4): movsxd 0x0(%rcx,%rdx,4),%rax
3e3b(3): add %rcx,%rax
3e3e(2): jmp %rax
3e40(3): xor %r10d,%r10d
3e43(4): cmp $0x1,%r11
3e47(3): setnz %al
3e4a(4): cmp $0xffffffff,%r11
3e4e(2): jnz 0xe(%rip)
3e50(5): mov 0x10(%rsp),%rax
3e55(4): cmp $0x0,0x1(%rax)
3e59(3): setnz %al
3e5c(5): cmp $0x2,0x8(%rsp)
3e61(3): setz %dl
3e64(2): test %al,%al
3e66(6): jz 0x252(%rip)
3e6c(3): xor %r12d,%r12d
3e6f(2): xor %eax,%eax
3e71(7): nop 0x0(%rax)
3e78(5): cmp $0x1,0xd(%rsp)
3e7d(6): jnz 0x115(%rip)
3e83(2): test %dl,%dl
3e85(6): jnz 0x10d(%rip)
3e8b(5): mov 0x20(%rsp),%rsi
3e90(3): test %rsi,%rsi
3e93(2): jz 0x16(%rip)
3e95(2): mov %ebx,%edx
3e97(3): shr $0x5,%dl
3e9a(3): movzx %dl,%edx
3e9d(3): mov 0x0(%rsi,%rdx,4),%edx
3ea0(3): bt %ebx,%edx
3ea3(6): jb 0x150(%rip)
3ea9(3): test %r10b,%r10b
3eac(6): jnz 0x147(%rip)
3eb2(3): xor $0x1,%eax
3eb5(4): add $0x1,%rbp
3eb9(3): and %r8d,%eax
3ebc(2): test %al,%al
3ebe(2): jz 0x22(%rip)
3ec0(3): cmp %r15,%r13
3ec3(2): jbe 0x7(%rip)
3ec5(5): mov $0x27,0x0(%r14,%r15,1)
3eca(4): lea 0x1(%r15),%rax
3ece(3): cmp %rax,%r13
3ed1(2): jbe 0x8(%rip)
3ed3(6): mov $0x27,0x1(%r14,%r15,1)
3ed9(4): add $0x2,%r15
3edd(3): xor %r8d,%r8d
3ee0(3): cmp %r13,%r15
3ee3(2): jnb 0x6(%rip)
3ee5(4): mov %bl,0x0(%r14,%r15,1)
3ee9(5): movzx 0xe(%rsp),%edi
3eee(4): add $0x1,%r15
3ef2(5): mov $0x0,%eax
3ef7(3): test %r12b,%r12b
3efa(3): cmove %eax,%edi
3efd(5): mov %dil,0xe(%rsp)
3f02(5): jmp 0xfffffe36(%rip)
3f07(9): nop 0x0(%rax,%rax,1)
3f10(3): xor %r10d,%r10d
3f13(4): mov 0x8(%rsp),%eax
3f17(3): cmp $0x2,%eax
3f1a(6): jz 0x5be(%rip)
3f20(3): cmp $0x5,%eax
3f23(6): jz 0x575(%rip)
3f29(3): cmp $0x2,%eax
3f2c(5): mov $0x3f,%ebx
3f31(3): setz %dl
3f34(3): xor %r12d,%r12d
3f37(2): xor %eax,%eax
3f39(5): jmp 0xffffff3f(%rip)
3f3e(2): nop 
3f40(3): xor %r10d,%r10d
3f43(5): cmp $0x2,0x8(%rsp)
3f48(6): jz 0x508(%rip)
3f4e(5): mov %r12b,0x7c(%rsp)
3f53(2): xor %edx,%edx
3f55(2): xor %eax,%eax
3f57(5): mov $0x27,%ebx
3f5c(5): jmp 0xffffff1c(%rip)
3f61(7): nop 0x0(%rax)
3f68(5): mov $0x9,%edx
3f6d(5): mov $0x74,%ebx
3f72(5): cmp $0x2,0x8(%rsp)
3f77(3): setz %al
3f7a(4): and 0xf(%rsp),%al
3f7e(6): jnz 0x150(%rip)
3f84(5): cmp $0x0,0xd(%rsp)
3f89(2): jnz 0x67(%rip)
3f8b(2): mov %edx,%ebx
3f8d(3): xor %r12d,%r12d
3f90(2): xor %eax,%eax
3f92(5): cmp $0x0,0xf(%rsp)
3f97(6): jnz 0xfffffef4(%rip)
3f9d(5): jmp 0xffffff0c(%rip)
3fa2(6): nop 0x0(%rax,%rax,1)
3fa8(5): mov $0x8,%edx
3fad(5): mov $0x62,%ebx
3fb2(2): jmp 0xffffffd2(%rip)
3fb4(4): nop 0x0(%rax)
3fb8(5): cmp $0x2,0x8(%rsp)
3fbd(6): jz 0x3d3(%rip)
3fc3(5): cmp $0x0,0xd(%rsp)
3fc8(6): jz 0x218(%rip)
3fce(5): cmp $0x0,0xf(%rsp)
3fd3(6): jz 0x20d(%rip)
3fd9(6): cmp $0x0,0x18(%rsp)
3fdf(6): jnz 0x3bc(%rip)
3fe5(5): mov $0x5c,%ebx
3fea(6): nop 0x0(%rax,%rax,1)
3ff0(3): xor %r12d,%r12d
3ff3(5): cmp $0x2,0x8(%rsp)
3ff8(3): setz %dl
3ffb(5): cmp $0x0,0xf(%rsp)
4000(2): mov %edx,%eax
4002(6): jnz 0x856(%rip)
4008(3): mov %r8d,%eax
400b(3): xor $0x1,%eax
400e(2): and %dl,%al
4010(2): jz 0x31(%rip)
4012(3): cmp %r15,%r13
4015(2): jbe 0x7(%rip)
4017(5): mov $0x27,0x0(%r14,%r15,1)
401c(4): lea 0x1(%r15),%rdx
4020(3): cmp %rdx,%r13
4023(2): jbe 0x8(%rip)
4025(6): mov $0x24,0x1(%r14,%r15,1)
402b(4): lea 0x2(%r15),%rdx
402f(3): cmp %rdx,%r13
4032(2): jbe 0x8(%rip)
4034(6): mov $0x27,0x2(%r14,%r15,1)
403a(4): add $0x3,%r15
403e(3): mov %eax,%r8d
4041(3): cmp %r15,%r13
4044(2): jbe 0x7(%rip)
4046(5): mov $0x5c,0x0(%r14,%r15,1)
404b(4): add $0x1,%r15
404f(4): add $0x1,%rbp
4053(5): jmp 0xfffffe8d(%rip)
4058(8): nop 0x0(%rax,%rax,1)
4060(5): cmp $0x0,0xd(%rsp)
4065(6): jnz 0x1ce(%rip)
406b(2): xor %edx,%edx
406d(5): test $0x1,0x78(%rsp)
4072(6): jz 0xffffff19(%rip)
4078(4): add $0x1,%rbp
407c(5): jmp 0xfffffcbc(%rip)
4081(7): nop 0x0(%rax)
4088(5): cmp $0x2,0x8(%rsp)
408d(3): setz %dl
4090(2): xor %eax,%eax
4092(5): jmp 0xfffffde6(%rip)
4097(9): nop 0x0(%rax,%rax,1)
40a0(5): mov $0x7,%edx
40a5(5): mov $0x61,%ebx
40aa(5): jmp 0xfffffeda(%rip)
40af(1): nop 
40b0(5): cmp $0x2,0x8(%rsp)
40b5(3): setz %dl
40b8(3): test %rbp,%rbp
40bb(6): jnz 0xfffffdb1(%rip)
40c1(5): movzx 0xf(%rsp),%eax
40c6(2): and %dl,%al
40c8(6): jz 0xfffffdb0(%rip)
40ce(3): mov %r11,%rbp
40d1(8): mov $0x2,0x8(%rsp)
40d9(5): jmp 0x700(%rip)
40de(2): nop 
40e0(5): cmp $0x2,0x8(%rsp)
40e5(3): setz %dl
40e8(3): xor %r12d,%r12d
40eb(2): jmp 0xffffffd6(%rip)
40ed(3): nop (%rax)
40f0(5): cmp $0x2,0x8(%rsp)
40f5(5): mov $0x20,%ebx
40fa(3): setz %dl
40fd(2): jmp 0xffffffc4(%rip)
40ff(1): nop 
4100(5): mov $0xd,%edx
4105(5): mov $0x72,%ebx
410a(5): jmp 0xfffffe68(%rip)
410f(1): nop 
4110(5): mov $0xc,%edx
4115(5): mov $0x66,%ebx
411a(5): jmp 0xfffffe6a(%rip)
411f(1): nop 
4120(5): mov $0xb,%edx
4125(5): mov $0x76,%ebx
412a(5): jmp 0xfffffe5a(%rip)
412f(1): nop 
4130(5): mov $0xa,%edx
4135(5): mov $0x6e,%ebx
413a(5): jmp 0xfffffe38(%rip)
413f(1): nop 
4140(3): xor %r10d,%r10d
4143(5): nop 0x0(%rax,%rax,1)
4148(6): cmp $0x1,0x58(%rsp)
414e(6): jnz 0x3aa(%rip)
4154(5): mov %r11,0x38(%rsp)
4159(5): mov %r8b,0x30(%rsp)
415e(5): mov %r10b,0x28(%rsp)
4163(5): call 0xffffdc6d(%rip)
4168(3): mov (%rax),%rcx
416b(3): movzx %bl,%edx
416e(6): movzx 0x28(%rsp),%r10d
4174(6): movzx 0x30(%rsp),%r8d
417a(5): mov 0x38(%rsp),%r11
417f(5): mov $0x1,%edi
4184(4): movzx 0x0(%rcx,%rdx,2),%eax
4188(4): and $0x4000,%ax
418c(4): setnz %r12b
4190(3): setz %al
4193(4): and 0xd(%rsp),%al
4197(2): test %al,%al
4199(6): jnz 0x998(%rip)
419f(5): cmp $0x2,0x8(%rsp)
41a4(3): setz %dl
41a7(5): jmp 0xfffffcd1(%rip)
41ac(4): nop 0x0(%rax)
41b0(4): movzx (%r9),%ebx
41b4(3): cmp $0x7e,%bl
41b7(2): jnbe 0xffffff89(%rip)
41b9(7): lea 0x7bc8(%rip),%rcx
41c0(3): movzx %bl,%edx
41c3(4): movsxd 0x0(%rcx,%rdx,4),%rax
41c7(3): add %rcx,%rax
41ca(2): jmp %rax
41cc(4): nop 0x0(%rax)
41d0(3): xor %r10d,%r10d
41d3(5): cmp $0x0,0xd(%rsp)
41d8(6): jnz 0xfffffdf6(%rip)
41de(2): nop 
41e0(5): mov $0x5c,%edx
41e5(5): mov $0x5c,%ebx
41ea(5): jmp 0xfffffd9a(%rip)
41ef(1): nop 
41f0(5): mov $0xc,%edx
41f5(3): xor %r10d,%r10d
41f8(5): mov $0x66,%ebx
41fd(5): jmp 0xfffffd87(%rip)
4202(6): nop 0x0(%rax,%rax,1)
4208(5): mov $0xa,%edx
420d(3): xor %r10d,%r10d
4210(5): mov $0x6e,%ebx
4215(5): jmp 0xfffffd5d(%rip)
421a(6): nop 0x0(%rax,%rax,1)
4220(5): mov $0x61,%ebx
4225(5): jmp 0xfffffdcb(%rip)
422a(6): nop 0x0(%rax,%rax,1)
4230(3): xor %r10d,%r10d
4233(5): cmp $0x2,0x8(%rsp)
4238(3): setz %dl
423b(5): cmp $0x0,0xf(%rsp)
4240(6): jnz 0xb9a(%rip)
4246(3): mov %r8d,%eax
4249(3): mov %r15,%rcx
424c(3): xor $0x1,%eax
424f(2): and %dl,%al
4251(2): jz 0x2f(%rip)
4253(3): cmp %r15,%r13
4256(2): jbe 0x7(%rip)
4258(5): mov $0x27,0x0(%r14,%r15,1)
425d(4): lea 0x1(%r15),%rcx
4261(3): cmp %rcx,%r13
4264(2): jbe 0x8(%rip)
4266(6): mov $0x24,0x1(%r14,%r15,1)
426c(4): lea 0x2(%r15),%rcx
4270(3): cmp %rcx,%r13
4273(6): jnbe 0x636(%rip)
4279(4): lea 0x3(%r15),%rcx
427d(3): mov %eax,%r8d
4280(3): cmp %rcx,%r13
4283(2): jbe 0x7(%rip)
4285(5): mov $0x5c,0x0(%r14,%rcx,1)
428a(5): cmp $0x2,0x8(%rsp)
428f(4): lea 0x1(%rcx),%r15
4293(6): jz 0x606(%rip)
4299(4): lea 0x1(%rbp),%rax
429d(3): cmp %r11,%rax
42a0(2): jnb 0x1b(%rip)
42a2(5): mov 0x10(%rsp),%rax
42a7(5): movzx 0x1(%rax,%rbp,1),%eax
42ac(4): mov %al,0x28(%rsp)
42b0(3): sub $0x30,%eax
42b3(2): cmp $0x9,%al
42b5(6): jbe 0x834(%rip)
42bb(3): mov %r12d,%eax
42be(5): mov $0x30,%ebx
42c3(3): xor %r12d,%r12d
42c6(5): jmp 0xfffffbb2(%rip)
42cb(5): nop 0x0(%rax,%rax,1)
42d0(5): cmp $0x2,0x8(%rsp)
42d5(3): mov %r10d,%r12d
42d8(3): setz %dl
42db(3): xor %r10d,%r10d
42de(2): xor %eax,%eax
42e0(5): jmp 0xfffffb98(%rip)
42e5(3): nop (%rax)
42e8(5): cmp $0x2,0x8(%rsp)
42ed(3): setz %dl
42f0(3): xor %r10d,%r10d
42f3(5): jmp 0xfffffdc5(%rip)
42f8(8): nop 0x0(%rax,%rax,1)
4300(5): cmp $0x2,0x8(%rsp)
4305(3): setz %dl
4308(3): xor %r10d,%r10d
430b(3): xor %r12d,%r12d
430e(5): jmp 0xfffffdb3(%rip)
4313(5): nop 0x0(%rax,%rax,1)
4318(5): cmp $0x2,0x8(%rsp)
431d(3): mov %r10d,%r12d
4320(5): mov $0x20,%ebx
4325(3): setz %dl
4328(3): xor %r10d,%r10d
432b(5): jmp 0xfffffd96(%rip)
4330(5): mov $0xd,%edx
4335(3): xor %r10d,%r10d
4338(5): mov $0x72,%ebx
433d(5): jmp 0xfffffc35(%rip)
4342(6): nop 0x0(%rax,%rax,1)
4348(5): mov $0x76,%ebx
434d(5): jmp 0xfffffca3(%rip)
4352(6): nop 0x0(%rax,%rax,1)
4358(5): mov $0x9,%edx
435d(3): xor %r10d,%r10d
4360(5): mov $0x74,%ebx
4365(5): jmp 0xfffffc0d(%rip)
436a(6): nop 0x0(%rax,%rax,1)
4370(5): mov $0x62,%ebx
4375(5): jmp 0xfffffc7b(%rip)
437a(6): nop 0x0(%rax,%rax,1)
4380(3): xor %r10d,%r10d
4383(5): jmp 0xfffffa9d(%rip)
4388(8): nop 0x0(%rax,%rax,1)
4390(5): cmp $0x0,0xf(%rsp)
4395(6): jnz 0x96b(%rip)
439b(4): add $0x1,%rbp
439f(3): mov %r8d,%eax
43a2(3): xor %r12d,%r12d
43a5(5): mov $0x5c,%ebx
43aa(5): jmp 0xfffffb12(%rip)
43af(1): nop 
43b0(5): cmp $0x2,0x8(%rsp)
43b5(5): movzx 0xf(%rsp),%ebx
43ba(3): mov %r8d,%r12d
43bd(3): mov %r11,%rbp
43c0(3): setz %dl
43c3(2): mov %ebx,%eax
43c5(3): test %r15,%r15
43c8(3): setz %cl
43cb(2): and %edx,%eax
43cd(2): and %cl,%al
43cf(6): jnz 0xa67(%rip)
43d5(2): mov %ebx,%eax
43d7(3): xor $0x1,%eax
43da(2): and %al,%dl
43dc(6): jz 0x970(%rip)
43e2(5): cmp $0x0,0x7c(%rsp)
43e7(6): jz 0x963(%rip)
43ed(5): cmp $0x0,0xe(%rsp)
43f2(6): jnz 0x9fb(%rip)
43f8(3): test %r13,%r13
43fb(3): setz %al
43fe(6): cmp $0x0,0x50(%rsp)
4404(3): setnz %dl
4407(2): and %dl,%al
4409(6): jz 0xa23(%rip)
440f(5): mov 0x50(%rsp),%r13
4414(7): lea 0x76e2(%rip),%rbx
441b(4): mov $0x27,(%r14)
441f(8): mov $0x2,0x8(%rsp)
4427(6): mov $0x1,%r15d
442d(9): mov $0x1,0x18(%rsp)
4436(5): mov $0x0,0xf(%rsp)
443b(5): mov %rbx,0x48(%rsp)
4440(4): mov %al,0x7c(%rsp)
4444(5): jmp 0xfffff8df(%rip)
4449(7): nop 0x0(%rax)
4450(5): cmp $0x0,0xf(%rsp)
4455(6): jnz 0x8ab(%rip)
445b(3): test %r13,%r13
445e(6): jz 0x402(%rip)
4464(2): xor %edx,%edx
4466(6): cmp $0x0,0x50(%rsp)
446c(6): jnz 0x3f4(%rip)
4472(5): mov %r13,0x50(%rsp)
4477(4): add $0x3,%r15
447b(2): xor %eax,%eax
447d(5): mov %r12b,0x7c(%rsp)
4482(3): xor %r8d,%r8d
4485(3): mov %rdx,%r13
4488(5): mov $0x27,%ebx
448d(5): jmp 0xfffffa1c(%rip)
4492(6): nop 0x0(%rax,%rax,1)
4498(5): test $0x4,0x78(%rsp)
449d(2): jz 0x23(%rip)
449f(4): lea 0x2(%rbp),%rcx
44a3(3): cmp %r11,%rcx
44a6(2): jnb 0x1a(%rip)
44a8(5): mov 0x10(%rsp),%rax
44ad(5): cmp $0x3f,0x1(%rax,%rbp,1)
44b2(6): jz 0x790(%rip)
44b8(8): nop 0x0(%rax,%rax,1)
44c0(2): xor %edx,%edx
44c2(3): xor %r12d,%r12d
44c5(2): xor %eax,%eax
44c7(5): mov $0x3f,%ebx
44cc(5): jmp 0xfffff9ac(%rip)
44d1(7): nop 0x0(%rax)
44d8(5): cmp $0x0,0xf(%rsp)
44dd(6): jnz 0x823(%rip)
44e3(3): xor %r12d,%r12d
44e6(2): xor %eax,%eax
44e8(5): mov $0x3f,%ebx
44ed(5): jmp 0xfffff9bc(%rip)
44f2(6): nop 0x0(%rax,%rax,1)
44f8(8): lea 0xa0(%rsp),%rax
4500(4): cmp $0xffffffff,%r11
4504(c): mov $0x0,0xa0(%rsp)
4510(5): mov %rax,0x28(%rsp)
4515(2): jnz 0x2f(%rip)
4517(5): mov 0x10(%rsp),%rdi
451c(5): mov %r8b,0x40(%rsp)
4521(5): mov %r10b,0x38(%rsp)
4526(5): mov %r9,0x30(%rsp)
452b(5): call 0xffffd575(%rip)
4530(6): movzx 0x40(%rsp),%r8d
4536(6): movzx 0x38(%rsp),%r10d
453c(3): mov %rax,%r11
453f(5): mov 0x30(%rsp),%r9
4544(8): lea 0x9c(%rsp),%rax
454c(2): xor %ecx,%ecx
454e(4): mov %bl,0x7e(%rsp)
4552(5): mov %r8b,0x7d(%rsp)
4557(3): mov %rcx,%rbx
455a(8): mov %r9,0x88(%rsp)
4562(5): mov %rax,0x38(%rsp)
4567(5): mov %r10b,0x7f(%rsp)
456c(8): mov %r15,0x80(%rsp)
4574(5): mov %r14,0x40(%rsp)
4579(5): mov %r13,0x70(%rsp)
457e(5): mov %r11,0x30(%rsp)
4583(5): mov 0x10(%rsp),%rax
4588(5): lea 0x0(%rbp,%rbx,1),%r14
458d(5): mov 0x30(%rsp),%rdx
4592(5): mov 0x28(%rsp),%rcx
4597(5): mov 0x38(%rsp),%rdi
459c(4): lea 0x0(%rax,%r14,1),%r13
45a0(3): sub %r14,%rdx
45a3(3): mov %r13,%rsi
45a6(5): call 0x48da(%rip)
45ab(3): test %rax,%rax
45ae(3): mov %rax,%r15
45b1(2): jz 0x50(%rip)
45b3(4): cmp $0xffffffff,%rax
45b7(6): jz 0x61e(%rip)
45bd(4): cmp $0xfffffffe,%rax
45c1(6): jz 0x5a0(%rip)
45c7(5): cmp $0x2,0x8(%rsp)
45cc(3): setz %al
45cf(4): and 0xf(%rsp),%al
45d3(6): jnz 0x19d(%rip)
45d9(7): mov 0x9c(%rsp),%edi
45e0(5): call 0xffffd7e0(%rip)
45e5(5): mov 0x28(%rsp),%rdi
45ea(2): test %eax,%eax
45ec(5): mov $0x0,%eax
45f1(4): cmove %eax,%r12d
45f5(3): add %r15,%rbx
45f8(5): call 0xffffd7b8(%rip)
45fd(2): test %eax,%eax
45ff(2): jz 0xffffff84(%rip)
4601(3): mov %r12d,%edx
4604(3): mov %rbx,%rdi
4607(6): movzx 0x7d(%rsp),%r8d
460d(3): xor $0x1,%edx
4610(5): movzx 0x7e(%rsp),%ebx
4615(6): movzx 0x7f(%rsp),%r10d
461b(4): and 0xd(%rsp),%dl
461f(8): mov 0x80(%rsp),%r15
4627(5): mov 0x40(%rsp),%r14
462c(5): mov 0x70(%rsp),%r13
4631(5): mov 0x30(%rsp),%r11
4636(4): cmp $0x1,%rdi
463a(6): jbe 0x601(%rip)
4640(3): mov %rdi,%rcx
4643(2): xor %esi,%esi
4645(6): movzx 0xf(%rsp),%r9d
464b(3): add %rbp,%rcx
464e(5): mov 0x10(%rsp),%rdi
4653(5): jmp 0xbb(%rip)
4658(8): nop 0x0(%rax,%rax,1)
4660(5): cmp $0x2,0x8(%rsp)
4665(3): setz %al
4668(3): test %r9b,%r9b
466b(6): jnz 0x4b5(%rip)
4671(3): mov %r8d,%esi
4674(3): xor $0x1,%esi
4677(3): and %sil,%al
467a(2): jz 0x31(%rip)
467c(3): cmp %r15,%r13
467f(2): jbe 0x7(%rip)
4681(5): mov $0x27,0x0(%r14,%r15,1)
4686(4): lea 0x1(%r15),%rsi
468a(3): cmp %rsi,%r13
468d(2): jbe 0x8(%rip)
468f(6): mov $0x24,0x1(%r14,%r15,1)
4695(4): lea 0x2(%r15),%rsi
4699(3): cmp %rsi,%r13
469c(2): jbe 0x8(%rip)
469e(6): mov $0x27,0x2(%r14,%r15,1)
46a4(4): add $0x3,%r15
46a8(3): mov %eax,%r8d
46ab(3): cmp %r15,%r13
46ae(2): jbe 0x7(%rip)
46b0(5): mov $0x5c,0x0(%r14,%r15,1)
46b5(4): lea 0x1(%r15),%rax
46b9(3): cmp %rax,%r13
46bc(2): jbe 0xf(%rip)
46be(2): mov %ebx,%eax
46c0(3): shr $0x6,%al
46c3(3): add $0x30,%eax
46c6(5): mov %al,0x1(%r14,%r15,1)
46cb(4): lea 0x2(%r15),%rax
46cf(3): cmp %rax,%r13
46d2(2): jbe 0x12(%rip)
46d4(2): mov %ebx,%eax
46d6(3): shr $0x3,%al
46d9(3): and $0x7,%eax
46dc(3): add $0x30,%eax
46df(5): mov %al,0x2(%r14,%r15,1)
46e4(3): and $0x7,%ebx
46e7(4): add $0x1,%rbp
46eb(4): add $0x3,%r15
46ef(3): add $0x30,%ebx
46f2(3): cmp %rcx,%rbp
46f5(6): jnb 0xfffff7eb(%rip)
46fb(2): mov %edx,%esi
46fd(3): cmp %r15,%r13
4700(2): jbe 0x6(%rip)
4702(4): mov %bl,0x0(%r14,%r15,1)
4706(4): movzx 0x0(%rdi,%rbp,1),%ebx
470a(4): add $0x1,%r15
470e(2): test %dl,%dl
4710(6): jnz 0xffffff50(%rip)
4716(2): mov %esi,%eax
4718(3): xor $0x1,%eax
471b(3): and %r8d,%eax
471e(3): test %r10b,%r10b
4721(2): jz 0x10(%rip)
4723(3): cmp %r15,%r13
4726(2): jbe 0x7(%rip)
4728(5): mov $0x5c,0x0(%r14,%r15,1)
472d(4): add $0x1,%r15
4731(4): add $0x1,%rbp
4735(3): cmp %rcx,%rbp
4738(6): jnb 0xfffff784(%rip)
473e(2): test %al,%al
4740(6): jz 0x3fe(%rip)
4746(3): cmp %r15,%r13
4749(2): jbe 0x7(%rip)
474b(5): mov $0x27,0x0(%r14,%r15,1)
4750(4): lea 0x1(%r15),%rax
4754(3): cmp %rax,%r13
4757(2): jbe 0x8(%rip)
4759(6): mov $0x27,0x1(%r14,%r15,1)
475f(4): add $0x2,%r15
4763(3): xor %r10d,%r10d
4766(3): xor %r8d,%r8d
4769(2): jmp 0xffffff94(%rip)
476b(5): nop 0x0(%rax,%rax,1)
4770(4): cmp $0x1,%r15
4774(6): jz 0xfffffe65(%rip)
477a(5): mov 0x10(%rsp),%rdi
477f(4): lea 0x0(%rdi,%r15,1),%rcx
4783(5): lea 0x1(%rdi,%r14,1),%rdx
4788(4): lea 0x0(%rcx,%r14,1),%r8
478c(2): jmp 0x11(%rip)
478e(2): nop 
4790(4): add $0x1,%rdx
4794(3): cmp %rdx,%r8
4797(6): jz 0xfffffe42(%rip)
479d(3): movzx (%rdx),%ecx
47a0(3): sub $0x5b,%ecx
47a3(3): cmp $0x21,%cl
47a6(2): jnbe 0xffffffea(%rip)
47a8(5): mov $0x1,%esi
47ad(3): shl/sal %cl,%rsi
47b0(3): mov %rsi,%rcx
47b3(a): mov $0x8589934635,%rsi
47bd(3): test %rsi,%rcx
47c0(2): jz 0xffffffd0(%rip)
47c2(5): mov 0x40(%rsp),%r14
47c7(5): mov 0x70(%rsp),%r13
47cc(5): mov 0x30(%rsp),%rbp
47d1(8): mov $0x2,0x8(%rsp)
47d9(5): cmp $0x0,0xd(%rsp)
47de(2): jz 0x12(%rip)
47e0(2): test %al,%al
47e2(5): mov $0x4,%eax
47e7(5): cmove 0x8(%rsp),%eax
47ec(4): mov %eax,0x8(%rsp)
47f0(4): sub $0x8,%rsp
47f4(3): mov %rbp,%rcx
47f7(3): mov %r13,%rsi
47fa(4): push 0x68(%rsp)
47fe(4): push 0x78(%rsp)
4802(3): mov %r14,%rdi
4805(2): push $0x0
4807(8): mov 0x98(%rsp),%r9d
480f(5): mov 0x28(%rsp),%r8d
4814(5): mov 0x30(%rsp),%rdx
4819(4): and $0xfd,%r9d
481d(5): call 0xfffff433(%rip)
4822(4): add $0x20,%rsp
4826(3): mov %rax,%r15
4829(8): mov 0xa8(%rsp),%rbx
4831(9): xor $0x28,%rbx
483a(3): mov %r15,%rax
483d(6): jnz 0x606(%rip)
4843(7): add $0xb8,%rsp
484a(1): pop %rbx
484b(1): pop %rbp
484c(2): pop %r12
484e(2): pop %r13
4850(2): pop %r14
4852(2): pop %r15
4854(1): ret near (%rsp)
4855(3): nop (%rax)
4858(3): mov %r11,%rbp
485b(5): jmp 0xffffff7e(%rip)
4860(3): cmp %r15,%r13
4863(2): jbe 0x7(%rip)
4865(5): mov $0x27,0x0(%r14,%r15,1)
486a(4): lea 0x1(%r15),%rax
486e(3): cmp %rax,%r13
4871(2): jbe 0x8(%rip)
4873(6): mov $0x5c,0x1(%r14,%r15,1)
4879(4): lea 0x2(%r15),%rax
487d(3): cmp %rax,%r13
4880(6): jbe 0x5f2(%rip)
4886(3): mov %r13,%rdx
4889(6): mov $0x27,0x2(%r14,%r15,1)
488f(5): mov 0x50(%rsp),%r13
4894(5): jmp 0xfffffbde(%rip)
4899(3): mov %r12d,%eax
489c(5): mov $0x30,%ebx
48a1(3): xor %r12d,%r12d
48a4(5): jmp 0xfffff605(%rip)
48a9(6): mov $0x27,0x2(%r14,%r15,1)
48af(5): jmp 0xfffff9ca(%rip)
48b4(2): test %ebx,%ebx
48b6(6): jnz 0xfffff42d(%rip)
48bc(5): mov $0x1,0xd(%rsp)
48c1(3): test %r13,%r13
48c4(6): jnz 0x596(%rip)
48ca(7): lea 0x722c(%rip),%rax
48d1(9): mov $0x0,0x50(%rsp)
48da(5): mov $0x1,0xe(%rsp)
48df(5): mov $0x0,0x7c(%rsp)
48e4(3): xor %r12d,%r12d
48e7(5): mov $0x0,0xf(%rsp)
48ec(9): mov $0x1,0x18(%rsp)
48f5(5): mov %rax,0x48(%rsp)
48fa(6): mov $0x1,%r15d
4900(8): mov $0x2,0x8(%rsp)
4908(5): jmp 0xfffff41b(%rip)
490d(3): nop (%rax)
4910(2): test %ebx,%ebx
4912(6): jnz 0x3fb(%rip)
4918(3): test %r13,%r13
491b(6): jz 0x22b(%rip)
4921(4): mov $0x22,(%r14)
4925(5): mov $0x1,0xe(%rsp)
492a(3): xor %r12d,%r12d
492d(5): mov $0x0,0x7c(%rsp)
4932(9): mov $0x0,0x50(%rsp)
493b(7): lea 0x71b9(%rip),%rax
4942(5): mov $0x0,0xf(%rsp)
4947(5): mov $0x1,0xd(%rsp)
494c(9): mov $0x1,0x18(%rsp)
4955(6): mov $0x1,%r15d
495b(5): mov %rax,0x48(%rsp)
4960(5): jmp 0xfffff3c3(%rip)
4965(7): lea 0x718f(%rip),%rax
496c(5): mov $0x1,0xe(%rsp)
4971(5): mov $0x0,0x7c(%rsp)
4976(3): xor %r12d,%r12d
4979(9): mov $0x0,0x50(%rsp)
4982(5): mov $0x1,0xf(%rsp)
4987(5): mov $0x1,0xd(%rsp)
498c(9): mov $0x1,0x18(%rsp)
4995(3): xor %r15d,%r15d
4998(5): mov %rax,0x48(%rsp)
499d(8): mov $0x5,0x8(%rsp)
49a5(5): jmp 0xfffff37e(%rip)
49aa(5): mov $0x1,0xe(%rsp)
49af(5): mov $0x0,0x7c(%rsp)
49b4(3): xor %r12d,%r12d
49b7(9): mov $0x0,0x50(%rsp)
49c0(5): mov $0x0,0xf(%rsp)
49c5(3): xor %r15d,%r15d
49c8(5): mov $0x1,0xd(%rsp)
49cd(9): mov $0x0,0x18(%rsp)
49d6(9): mov $0x0,0x48(%rsp)
49df(5): jmp 0xfffff344(%rip)
49e4(5): cmp $0xa,0x8(%rsp)
49e9(2): jz 0x58(%rip)
49eb(7): lea 0x710d(%rip),%rsi
49f2(2): xor %edi,%edi
49f4(5): mov $0x5,%edx
49f9(5): call 0xffffd087(%rip)
49fe(3): mov %rax,%rcx
4a01(5): mov %rax,0x68(%rsp)
4a06(7): lea 0x70f2(%rip),%rax
4a0d(3): cmp %rax,%rcx
4a10(6): jz 0x39e(%rip)
4a16(7): lea 0x70e0(%rip),%rsi
4a1d(2): xor %edi,%edi
4a1f(5): mov $0x5,%edx
4a24(5): call 0xffffd05c(%rip)
4a29(3): mov %rax,%rcx
4a2c(5): mov %rax,0x60(%rsp)
4a31(7): lea 0x70c5(%rip),%rax
4a38(3): cmp %rax,%rcx
4a3b(6): jz 0x389(%rip)
4a41(3): xor %r15d,%r15d
4a44(2): test %ebx,%ebx
4a46(6): jz 0x1c7(%rip)
4a4c(2): test %ebx,%ebx
4a4e(5): mov 0x60(%rsp),%rbx
4a53(5): setnz 0xf(%rsp)
4a58(3): xor %r12d,%r12d
4a5b(3): mov %rbx,%rdi
4a5e(5): call 0xffffd042(%rip)
4a63(5): mov %rbx,0x48(%rsp)
4a68(5): mov %rax,0x18(%rsp)
4a6d(5): mov $0x1,0xe(%rsp)
4a72(5): mov $0x0,0x7c(%rsp)
4a77(9): mov $0x0,0x50(%rsp)
4a80(5): mov $0x1,0xd(%rsp)
4a85(5): jmp 0xfffff29e(%rip)
4a8a(5): mov $0x1,0xe(%rsp)
4a8f(5): mov $0x0,0x7c(%rsp)
4a94(3): xor %r12d,%r12d
4a97(9): mov $0x0,0x50(%rsp)
4aa0(5): mov $0x0,0xf(%rsp)
4aa5(3): xor %r15d,%r15d
4aa8(5): mov $0x0,0xd(%rsp)
4aad(9): mov $0x0,0x18(%rsp)
4ab6(9): mov $0x0,0x48(%rsp)
4abf(5): jmp 0xfffff264(%rip)
4ac4(5): mov $0x1,0xe(%rsp)
4ac9(5): mov $0x0,0x7c(%rsp)
4ace(3): xor %r12d,%r12d
4ad1(9): mov $0x0,0x50(%rsp)
4ada(5): mov $0x1,0xf(%rsp)
4adf(5): mov $0x1,0xd(%rsp)
4ae4(5): jmp 0xfffff21f(%rip)
4ae9(3): cmp %r15,%r13
4aec(2): jbe 0x7(%rip)
4aee(5): mov $0x30,0x0(%r14,%r15,1)
4af3(4): lea 0x2(%rcx),%rax
4af7(3): cmp %rax,%r13
4afa(2): jbe 0x8(%rip)
4afc(6): mov $0x30,0x2(%r14,%rcx,1)
4b02(3): mov %r12d,%eax
4b05(4): lea 0x3(%rcx),%r15
4b09(3): xor %r12d,%r12d
4b0c(5): mov $0x30,%ebx
4b11(5): jmp 0xfffff367(%rip)
4b16(a): nop 0x0(%rax,%rax,1)
4b20(5): movzx 0xf(%rsp),%ebx
4b25(3): mov %r11,%rbp
4b28(4): mov %bl,0xd(%rsp)
4b2c(5): jmp 0xfffffcad(%rip)
4b31(5): movzx 0xd(%rsp),%edx
4b36(3): xor %r12d,%r12d
4b39(5): jmp 0xfffffb07(%rip)
4b3e(3): xor %r10d,%r10d
4b41(5): jmp 0xfffffbbc(%rip)
4b46(9): mov $0x0,0x50(%rsp)
4b4f(5): mov $0x1,0xe(%rsp)
4b54(3): xor %r12d,%r12d
4b57(5): mov $0x0,0x7c(%rsp)
4b5c(5): jmp 0xfffffddf(%rip)
4b61(5): mov 0x30(%rsp),%r11
4b66(3): mov %r14,%rsi
4b69(3): mov %r13,%rcx
4b6c(3): mov %rbx,%rax
4b6f(3): mov %rbx,%rdi
4b72(6): movzx 0x7d(%rsp),%r8d
4b78(5): movzx 0x7e(%rsp),%ebx
4b7d(8): mov 0x88(%rsp),%r9
4b85(3): cmp %r11,%rsi
4b88(6): movzx 0x7f(%rsp),%r10d
4b8e(8): mov 0x80(%rsp),%r15
4b96(5): mov 0x40(%rsp),%r14
4b9b(5): mov 0x70(%rsp),%r13
4ba0(2): jnb 0x28(%rip)
4ba2(3): cmp $0x0,(%rcx)
4ba5(2): jnz 0x12(%rip)
4ba7(2): jmp 0x21(%rip)
4ba9(7): nop 0x0(%rax)
4bb0(5): cmp $0x0,0x0(%r9,%rax,1)
4bb5(2): jz 0x10(%rip)
4bb7(4): add $0x1,%rax
4bbb(5): lea 0x0(%rbp,%rax,1),%rdx
4bc0(3): cmp %rdx,%r11
4bc3(2): jnbe 0xffffffed(%rip)
4bc5(3): mov %rax,%rdi
4bc8(5): movzx 0xd(%rsp),%edx
4bcd(3): xor %r12d,%r12d
4bd0(5): jmp 0xfffffa66(%rip)
4bd5(3): mov %rbx,%rdi
4bd8(6): movzx 0x7d(%rsp),%r8d
4bde(5): movzx 0x7e(%rsp),%ebx
4be3(6): movzx 0x7f(%rsp),%r10d
4be9(8): mov 0x80(%rsp),%r15
4bf1(3): xor %r12d,%r12d
4bf4(5): mov 0x40(%rsp),%r14
4bf9(5): mov 0x70(%rsp),%r13
4bfe(5): mov 0x30(%rsp),%r11
4c03(5): movzx 0xd(%rsp),%edx
4c08(5): jmp 0xfffffa2e(%rip)
4c0d(5): mov 0x68(%rsp),%rdx
4c12(3): movzx (%rdx),%eax
4c15(2): test %al,%al
4c17(6): jz 0xfffffe35(%rip)
4c1d(3): nop (%rax)
4c20(3): cmp %r15,%r13
4c23(2): jbe 0x6(%rip)
4c25(4): mov %al,0x0(%r14,%r15,1)
4c29(4): add $0x1,%r15
4c2d(5): movzx 0x0(%rdx,%r15,1),%eax
4c32(2): test %al,%al
4c34(2): jnz 0xffffffec(%rip)
4c36(5): jmp 0xfffffe16(%rip)
4c3b(2): mov %edx,%eax
4c3d(5): jmp 0xfffff55a(%rip)
4c42(4): movzx 0x0(%rax,%rcx,1),%ebx
4c46(3): cmp $0x3e,%bl
4c49(6): jnbe 0xfffff877(%rip)
4c4f(a): mov $0x8070630310989004800,%rax
4c59(4): bt %rbx,%rax
4c5d(6): jnb 0xfffff863(%rip)
4c63(5): cmp $0x0,0xf(%rsp)
4c68(6): jnz 0x1ea(%rip)
4c6e(3): cmp %r15,%r13
4c71(2): jbe 0x7(%rip)
4c73(5): mov $0x3f,0x0(%r14,%r15,1)
4c78(4): lea 0x1(%r15),%rax
4c7c(3): cmp %rax,%r13
4c7f(2): jbe 0x8(%rip)
4c81(6): mov $0x22,0x1(%r14,%r15,1)
4c87(4): lea 0x2(%r15),%rax
4c8b(3): cmp %rax,%r13
4c8e(2): jbe 0x8(%rip)
4c90(6): mov $0x22,0x2(%r14,%r15,1)
4c96(4): lea 0x3(%r15),%rax
4c9a(3): cmp %rax,%r13
4c9d(2): jbe 0x8(%rip)
4c9f(6): mov $0x3f,0x3(%r14,%r15,1)
4ca5(4): add $0x4,%r15
4ca9(2): xor %edx,%edx
4cab(3): xor %r12d,%r12d
4cae(2): xor %eax,%eax
4cb0(3): mov %rcx,%rbp
4cb3(5): jmp 0xfffff1c5(%rip)
4cb8(2): test %ebx,%ebx
4cba(6): jz 0x18e(%rip)
4cc0(7): lea 0x6e36(%rip),%rax
4cc7(5): mov $0x1,0xe(%rsp)
4ccc(5): mov $0x0,0x7c(%rsp)
4cd1(3): xor %r12d,%r12d
4cd4(9): mov $0x0,0x50(%rsp)
4cdd(5): mov $0x1,0xf(%rsp)
4ce2(5): mov $0x0,0xd(%rsp)
4ce7(9): mov $0x1,0x18(%rsp)
4cf0(3): xor %r15d,%r15d
4cf3(5): mov %rax,0x48(%rsp)
4cf8(5): jmp 0xfffff02b(%rip)
4cfd(3): nop (%rax)
4d00(3): mov %r11,%rbp
4d03(5): movzx 0xf(%rsp),%eax
4d08(5): jmp 0xfffffad1(%rip)
4d0d(7): lea 0x6de7(%rip),%rax
4d14(5): mov $0x1,0xe(%rsp)
4d19(5): mov $0x0,0x7c(%rsp)
4d1e(3): xor %r12d,%r12d
4d21(9): mov $0x0,0x50(%rsp)
4d2a(5): mov $0x1,0xf(%rsp)
4d2f(5): mov $0x1,0xd(%rsp)
4d34(9): mov $0x1,0x18(%rsp)
4d3d(3): xor %r15d,%r15d
4d40(5): mov %rax,0x48(%rsp)
4d45(5): jmp 0xffffefde(%rip)
4d4a(2): mov %edx,%eax
4d4c(5): mov 0x48(%rsp),%rbx
4d51(3): test %rbx,%rbx
4d54(2): jz 0x2e(%rip)
4d56(2): test %al,%al
4d58(2): jz 0x2a(%rip)
4d5a(3): movzx (%rbx),%ecx
4d5d(3): mov %rbx,%rax
4d60(2): test %cl,%cl
4d62(2): jz 0x20(%rip)
4d64(3): mov %r15,%rdx
4d67(3): sub %r15,%rax
4d6a(3): cmp %rdx,%r13
4d6d(2): jbe 0x6(%rip)
4d6f(4): mov %cl,0x0(%r14,%rdx,1)
4d73(4): add $0x1,%rdx
4d77(4): movzx 0x0(%rax,%rdx,1),%ecx
4d7b(2): test %cl,%cl
4d7d(2): jnz 0xffffffed(%rip)
4d7f(3): mov %rdx,%r15
4d82(3): cmp %r15,%r13
4d85(6): jbe 0xfffffaa4(%rip)
4d8b(5): mov $0x0,0x0(%r14,%r15,1)
4d90(5): jmp 0xfffffa99(%rip)
4d95(5): cmp $0x2,0x8(%rsp)
4d9a(5): movzx 0xf(%rsp),%ebx
4d9f(3): mov %r11,%rbp
4da2(3): setz %al
4da5(4): mov %bl,0xd(%rsp)
4da9(5): jmp 0xfffffa30(%rip)
4dae(4): mov 0x8(%rsp),%esi
4db2(3): mov %rcx,%rdi
4db5(5): call 0xffffedab(%rip)
4dba(5): mov %rax,0x68(%rsp)
4dbf(5): jmp 0xfffffc57(%rip)
4dc4(4): mov 0x8(%rsp),%esi
4dc8(3): mov %rcx,%rdi
4dcb(5): call 0xffffed95(%rip)
4dd0(5): mov %rax,0x60(%rsp)
4dd5(5): jmp 0xfffffc6c(%rip)
4dda(5): movzx 0xf(%rsp),%ebx
4ddf(3): mov %r11,%rbp
4de2(2): mov %edx,%eax
4de4(4): mov %bl,0xd(%rsp)
4de8(5): jmp 0xfffff9f1(%rip)
4ded(4): sub $0x8,%rsp
4df1(6): mov $0x5,%r8d
4df7(3): mov %r11,%rcx
4dfa(4): push 0x68(%rsp)
4dfe(4): push 0x78(%rsp)
4e02(3): mov %r14,%rdi
4e05(4): push 0x38(%rsp)
4e09(8): mov 0x98(%rsp),%r9d
4e11(5): mov 0x30(%rsp),%rdx
4e16(5): mov 0x70(%rsp),%rsi
4e1b(5): call 0xffffee35(%rip)
4e20(4): add $0x20,%rsp
4e24(3): mov %rax,%r15
4e27(5): jmp 0xfffffa02(%rip)
4e2c(5): movzx 0x7c(%rsp),%eax
4e31(5): jmp 0xffffff1b(%rip)
4e36(8): mov $0x2,0x8(%rsp)
4e3e(5): jmp 0xfffff99b(%rip)
4e43(5): call 0xffffcc8d(%rip)
4e48(5): mov $0x0,0xd(%rsp)
4e4d(5): jmp 0xfffffa74(%rip)
4e52(3): mov %r11,%rbp
4e55(5): jmp 0xfffff99b(%rip)
4e5a(5): mov $0x1,0xe(%rsp)
4e5f(2): xor %eax,%eax
4e61(3): xor %r12d,%r12d
4e64(9): mov $0x0,0x50(%rsp)
4e6d(5): jmp 0xfffff5a7(%rip)
4e72(3): mov %r13,%rdx
4e75(5): mov 0x50(%rsp),%r13
4e7a(5): jmp 0xfffff5f8(%rip)
4e7f(5): call 0xffffcb31(%rip)

"quotearg_n_options" :
4e90(2): push %r15
4e92(2): push %r14
4e94(3): movsxd %edi,%r15
4e97(2): push %r13
4e99(2): push %r12
4e9b(3): mov %rdx,%r14
4e9e(1): push %rbp
4e9f(1): push %rbx
4ea0(3): mov %rcx,%rbp
4ea3(4): sub $0x28,%rsp
4ea7(5): mov %rsi,0x8(%rsp)
4eac(5): call 0xffffcb14(%rip)
4eb1(3): mov %rax,%r13
4eb4(2): mov (%rax),%eax
4eb6(3): test %r15d,%r15d
4eb9(7): mov 0x20a1a0(%rip),%rbx
4ec0(4): mov %eax,0x18(%rsp)
4ec4(6): js 0x16d(%rip)
4eca(7): cmp %r15d,0x20a187(%rip)
4ed1(2): jnle 0x64(%rip)
4ed3(7): cmp $0x7fffffff,%r15d
4eda(6): jz 0x15c(%rip)
4ee0(4): lea 0x1(%r15),%r12d
4ee4(7): lea 0x20a185(%rip),%rax
4eeb(3): movsxd %r12d,%rsi
4eee(4): shl/sal $0x4,%rsi
4ef2(3): cmp %rax,%rbx
4ef5(6): jz 0x11b(%rip)
4efb(3): mov %rbx,%rdi
4efe(5): call 0x1492(%rip)
4f03(3): mov %rax,%rbx
4f06(7): mov %rax,0x20a153(%rip)
4f0d(7): movsxd 0x20a144(%rip),%rdi
4f14(3): mov %r12d,%edx
4f17(2): xor %esi,%esi
4f19(2): sub %edi,%edx
4f1b(4): shl/sal $0x4,%rdi
4f1f(3): movsxd %edx,%rdx
4f22(3): add %rbx,%rdi
4f25(4): shl/sal $0x4,%rdx
4f29(5): call 0xffffcc37(%rip)
4f2e(7): mov %r12d,0x20a123(%rip)
4f35(3): mov 0x4(%rbp),%eax
4f38(4): shl/sal $0x4,%r15
4f3c(4): sub $0x8,%rsp
4f40(3): add %r15,%rbx
4f43(4): lea 0x8(%rbp),%r15
4f47(4): mov 0x0(%rbp),%r8d
4f4b(3): mov (%rbx),%r11
4f4e(4): mov 0x8(%rbx),%r12
4f52(3): mov %r14,%rcx
4f55(3): or $0x1,%eax
4f58(4): mov %eax,0x24(%rsp)
4f5c(3): push 0x30(%rbp)
4f5f(3): mov %eax,%r9d
4f62(3): push 0x28(%rbp)
4f65(2): push %r15
4f67(3): mov %r11,%rsi
4f6a(5): mov 0x28(%rsp),%rdx
4f6f(3): mov %r12,%rdi
4f72(5): mov %r11,0x30(%rsp)
4f77(5): call 0xffffecd9(%rip)
4f7c(4): add $0x20,%rsp
4f80(5): mov 0x10(%rsp),%r11
4f85(3): cmp %rax,%r11
4f88(2): jnbe 0x69(%rip)
4f8a(4): lea 0x1(%rax),%rsi
4f8e(7): lea 0x20a16b(%rip),%rax
4f95(3): cmp %rax,%r12
4f98(3): mov %rsi,(%rbx)
4f9b(2): jz 0x14(%rip)
4f9d(3): mov %r12,%rdi
4fa0(5): mov %rsi,0x10(%rsp)
4fa5(5): call 0xffffce3b(%rip)
4faa(5): mov 0x10(%rsp),%rsi
4faf(3): mov %rsi,%rdi
4fb2(5): mov %rsi,0x10(%rsp)
4fb7(5): call 0x1379(%rip)
4fbc(4): sub $0x8,%rsp
4fc0(4): mov %rax,0x8(%rbx)
4fc4(4): mov 0x0(%rbp),%r8d
4fc8(3): push 0x30(%rbp)
4fcb(3): push 0x28(%rbp)
4fce(3): mov %r14,%rcx
4fd1(2): push %r15
4fd3(5): mov 0x3c(%rsp),%r9d
4fd8(3): mov %rax,%rdi
4fdb(5): mov 0x28(%rsp),%rdx
4fe0(5): mov 0x30(%rsp),%rsi
4fe5(3): mov %rax,%r12
4fe8(5): call 0xffffec68(%rip)
4fed(4): add $0x20,%rsp
4ff1(4): mov 0x18(%rsp),%eax
4ff5(4): mov %eax,0x0(%r13)
4ff9(4): add $0x28,%rsp
4ffd(3): mov %r12,%rax
5000(1): pop %rbx
5001(1): pop %rbp
5002(2): pop %r12
5004(2): pop %r13
5006(2): pop %r14
5008(2): pop %r15
500a(1): ret near (%rsp)
500b(5): nop 0x0(%rax,%rax,1)
5010(2): xor %edi,%edi
5012(5): call 0x137e(%rip)
5017(8): movdqa 0x20a051(%rip),%xmm0
501f(3): mov %rax,%rbx
5022(7): mov %rax,0x20a037(%rip)
5029(3): movups %xmm0,(%rax)
502c(5): jmp 0xfffffee1(%rip)
5031(5): call 0xffffc97f(%rip)
5036(5): call 0x154a(%rip)

"clone_quoting_options" :
5040(2): push %r12
5042(1): push %rbp
5043(1): push %rbx
5044(3): mov %rdi,%rbx
5047(5): call 0xffffc979(%rip)
504c(3): mov (%rax),%r12d
504f(3): mov %rax,%rbp
5052(7): lea 0x20a1a7(%rip),%rax
5059(3): test %rbx,%rbx
505c(5): mov $0x38,%esi
5061(4): cmove %rax,%rbx
5065(3): mov %rbx,%rdi
5068(5): call 0x14c8(%rip)
506d(4): mov %r12d,0x0(%rbp)
5071(1): pop %rbx
5072(1): pop %rbp
5073(2): pop %r12
5075(1): ret near (%rsp)

"get_quoting_style" :
5080(7): lea 0x20a179(%rip),%rax
5087(3): test %rdi,%rdi
508a(4): cmove %rax,%rdi
508e(2): mov (%rdi),%eax
5090(1): ret near (%rsp)

"set_quoting_style" :
50a0(7): lea 0x20a159(%rip),%rax
50a7(3): test %rdi,%rdi
50aa(4): cmove %rax,%rdi
50ae(2): mov %esi,(%rdi)
50b0(1): ret near (%rsp)

"set_char_quoting" :
50c0(7): lea 0x20a139(%rip),%rax
50c7(3): test %rdi,%rdi
50ca(2): mov %esi,%ecx
50cc(4): cmove %rax,%rdi
50d0(2): mov %esi,%eax
50d2(3): and $0x1f,%ecx
50d5(3): shr $0x5,%al
50d8(3): movzx %al,%eax
50db(5): lea 0x8(%rdi,%rax,4),%rdi
50e0(2): mov (%rdi),%esi
50e2(2): mov %esi,%eax
50e4(2): shr %cl,%eax
50e6(2): xor %eax,%edx
50e8(3): and $0x1,%eax
50eb(3): and $0x1,%edx
50ee(2): shl/sal %cl,%edx
50f0(2): xor %esi,%edx
50f2(2): mov %edx,(%rdi)
50f4(1): ret near (%rsp)

"set_quoting_flags" :
5100(7): lea 0x20a0f9(%rip),%rax
5107(3): test %rdi,%rdi
510a(4): cmove %rax,%rdi
510e(3): mov 0x4(%rdi),%eax
5111(3): mov %esi,0x4(%rdi)
5114(1): ret near (%rsp)

"set_custom_quoting" :
5120(7): lea 0x20a0d9(%rip),%rax
5127(3): test %rdi,%rdi
512a(4): cmove %rax,%rdi
512e(3): test %rsi,%rsi
5131(6): mov $0xa,(%rdi)
5137(2): jz 0x10(%rip)
5139(3): test %rdx,%rdx
513c(2): jz 0xb(%rip)
513e(4): mov %rsi,0x28(%rdi)
5142(4): mov %rdx,0x30(%rdi)
5146(1): ret near (%rsp)
5147(4): sub $0x8,%rsp
514b(5): call 0xffffc865(%rip)

"quotearg_buffer" :
5150(2): push %r15
5152(2): push %r14
5154(7): lea 0x20a0a5(%rip),%rax
515b(2): push %r13
515d(2): push %r12
515f(3): mov %rdi,%r13
5162(1): push %rbp
5163(1): push %rbx
5164(3): mov %r8,%rbx
5167(3): mov %rsi,%r14
516a(3): mov %rdx,%r15
516d(4): sub $0x18,%rsp
5171(3): test %r8,%r8
5174(4): cmove %rax,%rbx
5178(5): mov %rcx,0x8(%rsp)
517d(5): call 0xffffc843(%rip)
5182(3): mov (%rax),%r12d
5185(3): mov %rax,%rbp
5188(4): lea 0x8(%rbx),%rax
518c(4): sub $0x8,%rsp
5190(4): mov 0x4(%rbx),%r9d
5194(3): push 0x30(%rbx)
5197(3): mov (%rbx),%r8d
519a(3): push 0x28(%rbx)
519d(3): mov %r15,%rdx
51a0(1): push %rax
51a1(5): mov 0x28(%rsp),%rcx
51a6(3): mov %r14,%rsi
51a9(3): mov %r13,%rdi
51ac(5): call 0xffffeaa4(%rip)
51b1(4): mov %r12d,0x0(%rbp)
51b5(4): add $0x38,%rsp
51b9(1): pop %rbx
51ba(1): pop %rbp
51bb(2): pop %r12
51bd(2): pop %r13
51bf(2): pop %r14
51c1(2): pop %r15
51c3(1): ret near (%rsp)

"quotearg_alloc_mem" :
51d0(2): push %r15
51d2(2): push %r14
51d4(7): lea 0x20a025(%rip),%rax
51db(2): push %r13
51dd(2): push %r12
51df(3): mov %rdx,%r12
51e2(1): push %rbp
51e3(1): push %rbx
51e4(3): mov %rcx,%rbx
51e7(3): mov %rdi,%r14
51ea(3): mov %rsi,%r15
51ed(4): sub $0x38,%rsp
51f1(3): test %rcx,%rcx
51f4(4): cmove %rax,%rbx
51f8(2): xor %ebp,%ebp
51fa(5): call 0xffffc7c6(%rip)
51ff(3): test %r12,%r12
5202(3): mov %rax,%r13
5205(2): mov (%rax),%eax
5207(4): setz %bpl
520b(3): or 0x4(%rbx),%ebp
520e(4): lea 0x8(%rbx),%r10
5212(4): sub $0x8,%rsp
5216(3): mov (%rbx),%r8d
5219(3): mov %r15,%rcx
521c(4): mov %eax,0x14(%rsp)
5220(3): push 0x30(%rbx)
5223(3): mov %r14,%rdx
5226(3): push 0x28(%rbx)
5229(2): push %r10
522b(2): xor %esi,%esi
522d(3): mov %ebp,%r9d
5230(2): xor %edi,%edi
5232(5): mov %r10,0x40(%rsp)
5237(5): call 0xffffea19(%rip)
523c(4): lea 0x1(%rax),%rsi
5240(5): mov %rax,0x48(%rsp)
5245(4): add $0x20,%rsp
5249(3): mov %rsi,%rdi
524c(5): mov %rsi,0x18(%rsp)
5251(5): call 0x10df(%rip)
5256(5): mov %rax,0x10(%rsp)
525b(4): sub $0x8,%rsp
525f(3): push 0x30(%rbx)
5262(3): push 0x28(%rbx)
5265(5): mov 0x38(%rsp),%r10
526a(3): mov %ebp,%r9d
526d(3): mov (%rbx),%r8d
5270(3): mov %r15,%rcx
5273(3): mov %r14,%rdx
5276(3): mov %rax,%rdi
5279(2): push %r10
527b(5): mov 0x38(%rsp),%rsi
5280(5): call 0xffffe9d0(%rip)
5285(4): mov 0x2c(%rsp),%eax
5289(4): add $0x20,%rsp
528d(3): test %r12,%r12
5290(4): mov %eax,0x0(%r13)
5294(2): jz 0xb(%rip)
5296(5): mov 0x28(%rsp),%r11
529b(4): mov %r11,(%r12)
529f(5): mov 0x10(%rsp),%rax
52a4(4): add $0x38,%rsp
52a8(1): pop %rbx
52a9(1): pop %rbp
52aa(2): pop %r12
52ac(2): pop %r13
52ae(2): pop %r14
52b0(2): pop %r15
52b2(1): ret near (%rsp)

"quotearg_alloc" :
52c0(3): mov %rdx,%rcx
52c3(2): xor %edx,%edx
52c5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
52d0(6): mov 0x209d82(%rip),%eax
52d6(2): push %r12
52d8(7): mov 0x209d81(%rip),%r12
52df(1): push %rbp
52e0(1): push %rbx
52e1(3): cmp $0x1,%eax
52e4(2): jle 0x2d(%rip)
52e6(3): sub $0x2,%eax
52e9(5): lea 0x18(%r12),%rbx
52ee(4): shl/sal $0x4,%rax
52f2(5): lea 0x28(%r12,%rax,1),%rbp
52f7(9): nop 0x0(%rax,%rax,1)
5300(3): mov (%rbx),%rdi
5303(4): add $0x10,%rbx
5307(5): call 0xffffcad9(%rip)
530c(3): cmp %rbp,%rbx
530f(2): jnz 0xfffffff1(%rip)
5311(5): mov 0x8(%r12),%rdi
5316(7): lea 0x209de3(%rip),%rbx
531d(3): cmp %rbx,%rdi
5320(2): jz 0x19(%rip)
5322(5): call 0xffffcabe(%rip)
5327(b): mov $0x100,0x209d3e(%rip)
5332(7): mov %rbx,0x209d3f(%rip)
5339(7): lea 0x209d30(%rip),%rbx
5340(3): cmp %rbx,%r12
5343(2): jz 0x11(%rip)
5345(3): mov %r12,%rdi
5348(5): call 0xffffca98(%rip)
534d(7): mov %rbx,0x209d0c(%rip)
5354(1): pop %rbx
5355(a): mov $0x1,0x209cf9(%rip)
535f(1): pop %rbp
5360(2): pop %r12
5362(1): ret near (%rsp)

"quotearg_n" :
5370(7): lea 0x209e89(%rip),%rcx
5377(7): mov $0xffffffff,%rdx
537e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5390(7): lea 0x209e69(%rip),%rcx
5397(5): jmp 0xfffffaf9(%rip)

"quotearg" :
53a0(7): lea 0x209e59(%rip),%rcx
53a7(3): mov %rdi,%rsi
53aa(7): mov $0xffffffff,%rdx
53b1(2): xor %edi,%edi
53b3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
53c0(7): lea 0x209e39(%rip),%rcx
53c7(3): mov %rsi,%rdx
53ca(3): mov %rdi,%rsi
53cd(2): xor %edi,%edi
53cf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
53e0(4): sub $0x48,%rsp
53e4(3): mov %rdx,%rax
53e7(9): mov $0x28,%rdx
53f0(5): mov %rdx,0x38(%rsp)
53f5(2): xor %edx,%edx
53f7(3): cmp $0xa,%esi
53fa(2): jz 0x6a(%rip)
53fc(3): mov %esi,(%rsp)
53ff(3): mov %rsp,%rcx
5402(7): mov $0xffffffff,%rdx
5409(3): mov %rax,%rsi
540c(9): mov $0x0,0x4(%rsp)
5415(9): mov $0x0,0xc(%rsp)
541e(9): mov $0x0,0x14(%rsp)
5427(9): mov $0x0,0x1c(%rsp)
5430(9): mov $0x0,0x24(%rsp)
5439(9): mov $0x0,0x2c(%rsp)
5442(8): mov $0x0,0x34(%rsp)
544a(5): call 0xfffffa46(%rip)
544f(5): mov 0x38(%rsp),%rcx
5454(9): xor $0x28,%rcx
545d(2): jnz 0xc(%rip)
545f(4): add $0x48,%rsp
5463(1): ret near (%rsp)
5464(5): call 0xffffc54c(%rip)
5469(5): call 0xffffc667(%rip)

"quotearg_n_style_mem" :
5470(4): sub $0x48,%rsp
5474(3): mov %rdx,%rax
5477(3): mov %rcx,%rdx
547a(9): mov $0x28,%rcx
5483(5): mov %rcx,0x38(%rsp)
5488(2): xor %ecx,%ecx
548a(3): cmp $0xa,%esi
548d(2): jz 0x63(%rip)
548f(3): mov %esi,(%rsp)
5492(3): mov %rsp,%rcx
5495(3): mov %rax,%rsi
5498(9): mov $0x0,0x4(%rsp)
54a1(9): mov $0x0,0xc(%rsp)
54aa(9): mov $0x0,0x14(%rsp)
54b3(9): mov $0x0,0x1c(%rsp)
54bc(9): mov $0x0,0x24(%rsp)
54c5(9): mov $0x0,0x2c(%rsp)
54ce(8): mov $0x0,0x34(%rsp)
54d6(5): call 0xfffff9ba(%rip)
54db(5): mov 0x38(%rsp),%rdx
54e0(9): xor $0x28,%rdx
54e9(2): jnz 0xc(%rip)
54eb(4): add $0x48,%rsp
54ef(1): ret near (%rsp)
54f0(5): call 0xffffc4c0(%rip)
54f5(5): call 0xffffc5db(%rip)

"quotearg_style" :
5500(3): mov %rsi,%rdx
5503(2): mov %edi,%esi
5505(2): xor %edi,%edi
5507(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5510(3): mov %rdx,%rcx
5513(3): mov %rsi,%rdx
5516(2): mov %edi,%esi
5518(2): xor %edi,%edi
551a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5520(4): sub $0x48,%rsp
5524(2): mov %edx,%ecx
5526(9): mov $0x28,%rax
552f(5): mov %rax,0x38(%rsp)
5534(2): xor %eax,%eax
5536(7): mov 0x209cf3(%rip),%rax
553d(3): mov %rsp,%r8
5540(3): and $0x1f,%ecx
5543(8): movdqa 0x209cb5(%rip),%xmm0
554b(5): mov %rax,0x30(%rsp)
5550(2): mov %edx,%eax
5552(4): movaps %xmm0,(%rsp)
5556(3): shr $0x5,%al
5559(3): movzx %al,%eax
555c(5): lea 0x8(%r8,%rax,4),%r9
5561(8): movdqa 0x209ca7(%rip),%xmm0
5569(5): movaps %xmm0,0x10(%rsp)
556e(8): movdqa 0x209caa(%rip),%xmm0
5576(5): movaps %xmm0,0x20(%rsp)
557b(3): mov (%r9),%edx
557e(2): mov %edx,%eax
5580(2): shr %cl,%eax
5582(2): not %eax
5584(3): and $0x1,%eax
5587(2): shl/sal %cl,%eax
5589(3): mov %r8,%rcx
558c(2): xor %edx,%eax
558e(3): mov %rsi,%rdx
5591(3): mov %rdi,%rsi
5594(3): mov %eax,(%r9)
5597(2): xor %edi,%edi
5599(5): call 0xfffff8f7(%rip)
559e(5): mov 0x38(%rsp),%rsi
55a3(9): xor $0x28,%rsi
55ac(2): jnz 0x7(%rip)
55ae(4): add $0x48,%rsp
55b2(1): ret near (%rsp)
55b3(5): call 0xffffc51d(%rip)

"quotearg_char" :
55c0(4): movsx %sil,%edx
55c4(7): mov $0xffffffff,%rsi
55cb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
55d0(5): mov $0x3a,%edx
55d5(7): mov $0xffffffff,%rsi
55dc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
55f0(5): mov $0x3a,%edx
55f5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5600(4): sub $0x48,%rsp
5604(3): mov %rdx,%rax
5607(9): mov $0x28,%rdx
5610(5): mov %rdx,0x38(%rsp)
5615(2): xor %edx,%edx
5617(3): cmp $0xa,%esi
561a(2): jz 0x6a(%rip)
561c(3): mov %esi,(%rsp)
561f(3): mov %rsp,%rcx
5622(7): mov $0xffffffff,%rdx
5629(3): mov %rax,%rsi
562c(9): mov $0x0,0x4(%rsp)
5635(9): mov $0x4000000,0xc(%rsp)
563e(9): mov $0x0,0x14(%rsp)
5647(9): mov $0x0,0x1c(%rsp)
5650(9): mov $0x0,0x24(%rsp)
5659(9): mov $0x0,0x2c(%rsp)
5662(8): mov $0x0,0x34(%rsp)
566a(5): call 0xfffff826(%rip)
566f(5): mov 0x38(%rsp),%rcx
5674(9): xor $0x28,%rcx
567d(2): jnz 0xc(%rip)
567f(4): add $0x48,%rsp
5683(1): ret near (%rsp)
5684(5): call 0xffffc32c(%rip)
5689(5): call 0xffffc447(%rip)

"quotearg_n_custom_mem" :
5690(4): sub $0x48,%rsp
5694(3): mov %rcx,%r9
5697(7): mov 0x209b92(%rip),%rcx
569e(8): movdqa 0x209b5a(%rip),%xmm0
56a6(9): mov $0x28,%rax
56af(5): mov %rax,0x38(%rsp)
56b4(2): xor %eax,%eax
56b6(4): movaps %xmm0,(%rsp)
56ba(3): test %rsi,%rsi
56bd(5): mov %rcx,0x30(%rsp)
56c2(7): mov $0xa,(%rsp)
56c9(8): movdqa 0x209b3f(%rip),%xmm0
56d1(5): movaps %xmm0,0x10(%rsp)
56d6(8): movdqa 0x209b42(%rip),%xmm0
56de(5): movaps %xmm0,0x20(%rsp)
56e3(2): jz 0x34(%rip)
56e5(3): test %rdx,%rdx
56e8(2): jz 0x2f(%rip)
56ea(5): mov %rsi,0x28(%rsp)
56ef(5): mov %rdx,0x30(%rsp)
56f4(3): mov %rsp,%rcx
56f7(3): mov %r8,%rdx
56fa(3): mov %r9,%rsi
56fd(5): call 0xfffff793(%rip)
5702(5): mov 0x38(%rsp),%rdi
5707(9): xor $0x28,%rdi
5710(2): jnz 0xc(%rip)
5712(4): add $0x48,%rsp
5716(1): ret near (%rsp)
5717(5): call 0xffffc299(%rip)
571c(5): call 0xffffc3b4(%rip)

"quotearg_n_custom" :
5730(7): mov $0xffffffff,%r8
5737(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5740(3): mov %rdx,%rcx
5743(7): mov $0xffffffff,%r8
574a(3): mov %rsi,%rdx
574d(3): mov %rdi,%rsi
5750(2): xor %edi,%edi
5752(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5760(3): mov %rcx,%r8
5763(3): mov %rdx,%rcx
5766(3): mov %rsi,%rdx
5769(3): mov %rdi,%rsi
576c(2): xor %edi,%edi
576e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5780(7): lea 0x209899(%rip),%rcx
5787(5): jmp 0xfffff709(%rip)

"quote_mem" :
5790(7): lea 0x209889(%rip),%rcx
5797(3): mov %rsi,%rdx
579a(3): mov %rdi,%rsi
579d(2): xor %edi,%edi
579f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
57b0(7): lea 0x209869(%rip),%rcx
57b7(7): mov $0xffffffff,%rdx
57be(5): jmp 0xfffff6d2(%rip)

"quote" :
57d0(7): lea 0x209849(%rip),%rcx
57d7(3): mov %rdi,%rsi
57da(7): mov $0xffffffff,%rdx
57e1(2): xor %edi,%edi
57e3(5): jmp 0xfffff6ad(%rip)

"get_root_dev_ino" :
57f0(1): push %rbx
57f1(7): lea 0x62ee(%rip),%rsi
57f8(3): mov %rdi,%rbx
57fb(5): mov $0x1,%edi
5800(7): sub $0xa0,%rsp
5807(3): mov %rsp,%rdx
580a(9): mov $0x28,%rax
5813(8): mov %rax,0x98(%rsp)
581b(2): xor %eax,%eax
581d(5): call 0xffffc293(%rip)
5822(2): test %eax,%eax
5824(2): jnz 0x34(%rip)
5826(5): mov 0x8(%rsp),%rax
582b(3): mov %rax,(%rbx)
582e(4): mov (%rsp),%rax
5832(4): mov %rax,0x8(%rbx)
5836(3): mov %rbx,%rax
5839(8): mov 0x98(%rsp),%rcx
5841(9): xor $0x28,%rcx
584a(2): jnz 0x12(%rip)
584c(7): add $0xa0,%rsp
5853(1): pop %rbx
5854(1): ret near (%rsp)
5855(3): nop (%rax)
5858(2): xor %eax,%eax
585a(2): jmp 0xffffffdf(%rip)
585c(5): call 0xffffc274(%rip)

"parse_with_separator" :
5870(2): push %r15
5872(2): push %r14
5874(3): mov %rsi,%r10
5877(2): push %r13
5879(2): push %r12
587b(3): mov %rcx,%r12
587e(1): push %rbp
587f(1): push %rbx
5880(3): mov %r8,%r13
5883(3): mov %r9,%r14
5886(6): mov $0xffffffff,%r15d
588c(4): sub $0x58,%rsp
5890(2): mov (%rdx),%eax
5892(9): mov $0x28,%rcx
589b(5): mov %rcx,0x48(%rsp)
58a0(2): xor %ecx,%ecx
58a2(3): test %r12,%r12
58a5(5): mov %rdx,0x10(%rsp)
58aa(4): mov %eax,0x18(%rsp)
58ae(2): jz 0x6(%rip)
58b0(4): mov (%r12),%r15d
58b4(3): test %r13,%r13
58b7(2): jz 0xa(%rip)
58b9(8): mov $0x0,0x0(%r13)
58c1(3): test %r14,%r14
58c4(2): jz 0x9(%rip)
58c6(7): mov $0x0,(%r14)
58cd(3): test %r10,%r10
58d0(6): jz 0x198(%rip)
58d6(3): mov %r10,%rbx
58d9(3): sub %rdi,%rbx
58dc(6): jnz 0xd4(%rip)
58e2(5): cmp $0x0,0x1(%r10)
58e7(6): jz 0x211(%rip)
58ed(4): add $0x1,%r10
58f1(8): mov $0x0,(%rsp)
58f9(5): setnz 0x1e(%rsp)
58fe(5): mov %r10,0x8(%rsp)
5903(2): xor %ebp,%ebp
5905(2): xor %ebx,%ebx
5907(5): cmp $0x0,0x1e(%rsp)
590c(6): jz 0x2f4(%rip)
5912(5): mov 0x8(%rsp),%rax
5917(3): cmp $0x2b,(%rax)
591a(6): jz 0x176(%rip)
5920(5): mov 0x8(%rsp),%rdi
5925(5): call 0xffffc2db(%rip)
592a(3): test %rax,%rax
592d(6): jz 0x163(%rip)
5933(4): mov 0x10(%rax),%r15d
5937(5): call 0xffffc069(%rip)
593c(5): mov 0x8(%rsp),%rdi
5941(5): call 0xc1f(%rip)
5946(3): mov %rax,%rbx
5949(3): mov %rbp,%r10
594c(5): mov 0x10(%rsp),%rax
5951(4): mov 0x18(%rsp),%esi
5955(3): test %r12,%r12
5958(2): mov %esi,(%rax)
595a(2): jz 0x6(%rip)
595c(4): mov %r15d,(%r12)
5960(3): test %r13,%r13
5963(2): jz 0x9(%rip)
5965(4): mov %r10,0x0(%r13)
5969(3): xor %r10d,%r10d
596c(3): test %r14,%r14
596f(2): jz 0x7(%rip)
5971(3): mov %rbx,(%r14)
5974(2): xor %ebx,%ebx
5976(3): mov %r10,%rdi
5979(5): call 0xffffc467(%rip)
597e(3): mov %rbx,%rdi
5981(5): call 0xffffc45f(%rip)
5986(2): xor %eax,%eax
5988(5): mov 0x48(%rsp),%rdx
598d(9): xor $0x28,%rdx
5996(6): jnz 0x28f(%rip)
599c(4): add $0x58,%rsp
59a0(1): pop %rbx
59a1(1): pop %rbp
59a2(2): pop %r12
59a4(2): pop %r13
59a6(2): pop %r14
59a8(2): pop %r15
59aa(1): ret near (%rsp)
59ab(5): nop 0x0(%rax,%rax,1)
59b0(4): lea 0x1(%rbx),%rsi
59b4(4): mov %r10,(%rsp)
59b8(5): call 0xb78(%rip)
59bd(4): mov (%rsp),%r10
59c1(4): mov $0x0,0x0(%rax,%rbx,1)
59c5(3): mov %rax,%rbp
59c8(5): cmp $0x0,0x1(%r10)
59cd(6): jnz 0x153(%rip)
59d3(3): test %rbp,%rbp
59d6(6): jz 0x122(%rip)
59dc(5): mov $0x0,0x1e(%rsp)
59e1(5): mov $0x1,%eax
59e6(9): mov $0x0,0x8(%rsp)
59ef(3): test %r10,%r10
59f2(4): setnz %r9b
59f6(3): and %eax,%r9d
59f9(4): cmp $0x2b,0x0(%rbp)
59fd(2): jz 0x43(%rip)
59ff(3): mov %rbp,%rdi
5a02(4): mov %r9b,(%rsp)
5a06(5): call 0xffffc1da(%rip)
5a0b(3): test %rax,%rax
5a0e(5): movzx (%rsp),%r9d
5a13(2): jz 0x2d(%rip)
5a15(3): mov 0x10(%rax),%ecx
5a18(2): xor %ebx,%ebx
5a1a(3): test %r9b,%r9b
5a1d(8): mov $0x0,(%rsp)
5a25(4): mov %ecx,0x18(%rsp)
5a29(6): jnz 0x11f(%rip)
5a2f(5): call 0xffffc251(%rip)
5a34(5): jmp 0xfffffed3(%rip)
5a39(7): nop 0x0(%rax)
5a40(3): test %r9b,%r9b
5a43(6): jz 0x13d(%rip)
5a49(7): lea 0x6585(%rip),%rax
5a50(5): mov $0x0,0x1e(%rsp)
5a55(2): xor %ebx,%ebx
5a57(4): mov %rax,(%rsp)
5a5b(5): call 0xffffc225(%rip)
5a60(5): jmp 0xfffffea7(%rip)
5a65(3): nop (%rax)
5a68(2): xor %ebx,%ebx
5a6a(3): cmp $0x0,(%rdi)
5a6d(6): jz 0xfffffedf(%rip)
5a73(4): mov %r10,(%rsp)
5a77(5): call 0xae9(%rip)
5a7c(4): mov (%rsp),%r10
5a80(3): mov %rax,%rbp
5a83(5): jmp 0xffffff50(%rip)
5a88(8): nop 0x0(%rax,%rax,1)
5a90(5): mov 0x8(%rsp),%rdi
5a95(5): lea 0x28(%rsp),%rcx
5a9a(7): lea 0x65a8(%rip),%r8
5aa1(2): xor %esi,%esi
5aa3(5): mov $0xa,%edx
5aa8(5): call 0xb98(%rip)
5aad(2): test %eax,%eax
5aaf(2): jz 0x59(%rip)
5ab1(5): call 0xffffbeef(%rip)
5ab6(5): mov 0x8(%rsp),%rdi
5abb(5): call 0xaa5(%rip)
5ac0(3): mov %rax,%rbx
5ac3(7): lea 0x6518(%rip),%rax
5aca(4): mov %rax,(%rsp)
5ace(3): mov %rbp,%rdi
5ad1(5): call 0xffffc30f(%rip)
5ad6(3): mov %rbx,%rdi
5ad9(5): call 0xffffc307(%rip)
5ade(4): mov (%rsp),%rsi
5ae2(5): mov $0x5,%edx
5ae7(2): xor %edi,%edi
5ae9(5): call 0xffffbf97(%rip)
5aee(5): jmp 0xfffffe9a(%rip)
5af3(5): nop 0x0(%rax,%rax,1)
5af8(3): xor %r10d,%r10d
5afb(2): xor %ebx,%ebx
5afd(5): jmp 0xfffffe4f(%rip)
5b02(6): nop 0x0(%rax,%rax,1)
5b08(5): mov 0x28(%rsp),%rax
5b0d(5): mov $0xfffffffe,%edx
5b12(3): cmp %rdx,%rax
5b15(3): mov %eax,%r15d
5b18(6): jbe 0xfffffe1f(%rip)
5b1e(2): jmp 0xffffff93(%rip)
5b20(3): mov %r10,%rax
5b23(4): add $0x1,%rax
5b27(5): setnz 0x1e(%rsp)
5b2c(3): test %rbp,%rbp
5b2f(5): mov %rax,0x8(%rsp)
5b34(6): jz 0xf6(%rip)
5b3a(3): test %rax,%rax
5b3d(3): setz %al
5b40(5): jmp 0xfffffeaf(%rip)
5b45(3): nop (%rax)
5b48(4): mov 0x14(%rax),%r15d
5b4c(3): mov %r15d,%edi
5b4f(5): call 0xffffbfc1(%rip)
5b54(3): test %rax,%rax
5b57(6): jz 0xb9(%rip)
5b5d(3): mov (%rax),%rdi
5b60(5): call 0xa00(%rip)
5b65(3): mov %rax,%rbx
5b68(5): call 0xffffbe38(%rip)
5b6d(8): mov $0x0,(%rsp)
5b75(5): jmp 0xfffffeba(%rip)
5b7a(6): nop 0x0(%rax,%rax,1)
5b80(5): lea 0x28(%rsp),%rcx
5b85(7): lea 0x64bd(%rip),%r8
5b8c(2): xor %esi,%esi
5b8e(5): mov $0xa,%edx
5b93(3): mov %rbp,%rdi
5b96(5): mov %r9b,0x1f(%rsp)
5b9b(5): call 0xaa5(%rip)
5ba0(7): lea 0x6421(%rip),%rsi
5ba7(2): test %eax,%eax
5ba9(6): movzx 0x1f(%rsp),%r9d
5baf(4): mov %rsi,(%rsp)
5bb3(2): jnz 0x33(%rip)
5bb5(5): mov 0x28(%rsp),%rax
5bba(5): movzx 0x1e(%rsp),%ecx
5bbf(5): mov $0xfffffffe,%edx
5bc4(3): cmp %rdx,%rax
5bc7(4): cmovnbe %r9d,%ecx
5bcb(3): mov %ecx,%r9d
5bce(4): mov 0x18(%rsp),%ecx
5bd2(3): cmovbe %eax,%ecx
5bd5(5): mov $0x0,%eax
5bda(4): cmovnbe %rsi,%rax
5bde(4): mov %ecx,0x18(%rsp)
5be2(4): mov %rax,(%rsp)
5be6(5): mov %r9b,0x1e(%rsp)
5beb(2): xor %ebx,%ebx
5bed(5): call 0xffffc093(%rip)
5bf2(5): jmp 0xfffffd15(%rip)
5bf7(9): nop 0x0(%rax,%rax,1)
5c00(5): cmp $0x0,(%rsp)
5c05(6): jnz 0xfffffec9(%rip)
5c0b(5): jmp 0xfffffd3e(%rip)
5c10(5): lea 0x30(%rsp),%rsi
5c15(3): mov %r15d,%edi
5c18(5): call 0xffffde58(%rip)
5c1d(3): mov %rax,%rdi
5c20(5): jmp 0xffffff40(%rip)
5c25(5): call 0xffffbeab(%rip)
5c2a(2): xor %ebx,%ebx
5c2c(8): mov $0x0,(%rsp)
5c34(5): jmp 0xfffffcd3(%rip)

"parse_user_spec" :
5c40(3): test %rdx,%rdx
5c43(6): jz 0xad(%rip)
5c49(2): push %r15
5c4b(2): push %r14
5c4d(3): mov %rsi,%r14
5c50(2): push %r13
5c52(2): push %r12
5c54(3): mov %r8,%r13
5c57(1): push %rbp
5c58(1): push %rbx
5c59(3): mov %rcx,%r12
5c5c(3): mov %rdx,%rbp
5c5f(3): mov %rdi,%rbx
5c62(5): mov $0x3a,%esi
5c67(4): sub $0x18,%rsp
5c6b(5): call 0xffffbe95(%rip)
5c70(3): mov %r13,%r9
5c73(3): mov %rax,%r15
5c76(3): mov %r12,%r8
5c79(3): mov %rbp,%rcx
5c7c(3): mov %r14,%rdx
5c7f(3): mov %rax,%rsi
5c82(3): mov %rbx,%rdi
5c85(5): call 0xfffffbeb(%rip)
5c8a(3): test %r15,%r15
5c8d(3): mov %rax,%r10
5c90(2): jnz 0x44(%rip)
5c92(3): test %rax,%rax
5c95(5): mov %rax,0x8(%rsp)
5c9a(2): jz 0x6e(%rip)
5c9c(5): mov $0x2e,%esi
5ca1(3): mov %rbx,%rdi
5ca4(5): call 0xffffbe5c(%rip)
5ca9(3): test %rax,%rax
5cac(5): mov 0x8(%rsp),%r10
5cb1(2): jz 0x23(%rip)
5cb3(3): mov %r13,%r9
5cb6(3): mov %r12,%r8
5cb9(3): mov %rbp,%rcx
5cbc(3): mov %r14,%rdx
5cbf(3): mov %rax,%rsi
5cc2(3): mov %rbx,%rdi
5cc5(5): call 0xfffffbab(%rip)
5cca(3): test %rax,%rax
5ccd(5): mov 0x8(%rsp),%r10
5cd2(2): jz 0x36(%rip)
5cd4(4): add $0x18,%rsp
5cd8(3): mov %r10,%rax
5cdb(1): pop %rbx
5cdc(1): pop %rbp
5cdd(2): pop %r12
5cdf(2): pop %r13
5ce1(2): pop %r14
5ce3(2): pop %r15
5ce5(1): ret near (%rsp)
5ce6(a): nop 0x0(%rax,%rax,1)
5cf0(3): mov %r8,%r9
5cf3(3): mov %rsi,%rdx
5cf6(3): mov %rcx,%r8
5cf9(2): xor %esi,%esi
5cfb(2): xor %ecx,%ecx
5cfd(5): jmp 0xfffffb73(%rip)
5d02(6): nop 0x0(%rax,%rax,1)
5d08(3): xor %r10d,%r10d
5d0b(2): jmp 0xffffffc9(%rip)

"version_etc_arn" :
5d10(2): push %r15
5d12(2): push %r14
5d14(2): push %r13
5d16(2): push %r12
5d18(3): mov %r9,%r12
5d1b(1): push %rbp
5d1c(1): push %rbx
5d1d(3): mov %rdi,%rbp
5d20(3): mov %r8,%rbx
5d23(4): sub $0x28,%rsp
5d27(3): test %rsi,%rsi
5d2a(6): jz 0x11e(%rip)
5d30(3): mov %rdx,%r8
5d33(7): lea 0x62b6(%rip),%rdx
5d3a(3): mov %rcx,%r9
5d3d(2): xor %eax,%eax
5d3f(3): mov %rsi,%rcx
5d42(5): mov $0x1,%esi
5d47(5): call 0xffffc059(%rip)
5d4c(7): lea 0x62b0(%rip),%rsi
5d53(2): xor %edi,%edi
5d55(5): mov $0x5,%edx
5d5a(5): call 0xffffbd26(%rip)
5d5f(7): lea 0x65ba(%rip),%rdx
5d66(3): mov %rax,%rcx
5d69(6): mov $0x7e3,%r8d
5d6f(5): mov $0x1,%esi
5d74(3): mov %rbp,%rdi
5d77(2): xor %eax,%eax
5d79(5): call 0xffffc027(%rip)
5d7e(7): lea 0x630b(%rip),%rsi
5d85(2): xor %edi,%edi
5d87(5): mov $0x5,%edx
5d8c(5): call 0xffffbcf4(%rip)
5d91(3): mov %rbp,%rsi
5d94(3): mov %rax,%rdi
5d97(5): call 0xffffbe19(%rip)
5d9c(4): cmp $0x9,%r12
5da0(6): jnbe 0x340(%rip)
5da6(7): lea 0x653f(%rip),%rdx
5dad(4): movsxd 0x0(%rdx,%r12,4),%rax
5db1(3): add %rdx,%rax
5db4(2): jmp %rax
5db6(a): nop 0x0(%rax,%rax,1)
5dc0(4): mov 0x38(%rbx),%r9
5dc4(4): mov 0x10(%rbx),%rax
5dc8(7): lea 0x6431(%rip),%rsi
5dcf(4): mov 0x8(%rbx),%r8
5dd3(5): mov $0x5,%edx
5dd8(2): xor %edi,%edi
5dda(4): mov 0x30(%rbx),%r13
5dde(4): mov 0x28(%rbx),%r12
5de2(5): mov %r9,0x10(%rsp)
5de7(4): mov 0x20(%rbx),%r15
5deb(4): mov 0x18(%rbx),%r14
5def(4): mov %rax,(%rsp)
5df3(5): mov %r8,0x8(%rsp)
5df8(3): mov (%rbx),%rbx
5dfb(5): call 0xffffbc85(%rip)
5e00(4): sub $0x8,%rsp
5e04(5): mov 0x18(%rsp),%r9
5e09(3): mov %rax,%rdx
5e0c(3): mov %rbx,%rcx
5e0f(5): mov $0x1,%esi
5e14(3): mov %rbp,%rdi
5e17(2): xor %eax,%eax
5e19(2): push %r9
5e1b(2): push %r13
5e1d(2): push %r12
5e1f(2): push %r15
5e21(2): push %r14
5e23(5): mov 0x30(%rsp),%r9
5e28(5): mov 0x38(%rsp),%r8
5e2d(5): call 0xffffbf73(%rip)
5e32(4): add $0x30,%rsp
5e36(4): add $0x28,%rsp
5e3a(1): pop %rbx
5e3b(1): pop %rbp
5e3c(2): pop %r12
5e3e(2): pop %r13
5e40(2): pop %r14
5e42(2): pop %r15
5e44(1): ret near (%rsp)
5e45(3): nop (%rax)
5e48(3): mov %rcx,%r8
5e4b(3): mov %rdx,%rcx
5e4e(7): lea 0x61a7(%rip),%rdx
5e55(5): mov $0x1,%esi
5e5a(2): xor %eax,%eax
5e5c(5): call 0xffffbf44(%rip)
5e61(5): jmp 0xfffffeeb(%rip)
5e66(a): nop 0x0(%rax,%rax,1)
5e70(4): mov 0x40(%rbx),%r10
5e74(4): mov 0x38(%rbx),%r9
5e78(7): lea 0x63b1(%rip),%rsi
5e7f(4): mov 0x10(%rbx),%rax
5e83(4): mov 0x8(%rbx),%r8
5e87(5): mov $0x5,%edx
5e8c(4): mov 0x30(%rbx),%r13
5e90(4): mov 0x28(%rbx),%r12
5e94(4): mov 0x20(%rbx),%r15
5e98(4): mov 0x18(%rbx),%r14
5e9c(3): mov (%rbx),%rbx
5e9f(5): mov %r10,0x18(%rsp)
5ea4(5): mov %r9,0x10(%rsp)
5ea9(4): mov %rax,(%rsp)
5ead(5): mov %r8,0x8(%rsp)
5eb2(2): xor %edi,%edi
5eb4(5): call 0xffffbbcc(%rip)
5eb9(5): mov 0x18(%rsp),%r10
5ebe(2): push %r10
5ec0(5): jmp 0xffffff44(%rip)
5ec5(3): nop (%rax)
5ec8(3): mov (%rbx),%rbx
5ecb(7): lea 0x6135(%rip),%rsi
5ed2(5): mov $0x5,%edx
5ed7(2): xor %edi,%edi
5ed9(5): call 0xffffbba7(%rip)
5ede(4): add $0x28,%rsp
5ee2(3): mov %rbx,%rcx
5ee5(3): mov %rbp,%rdi
5ee8(1): pop %rbx
5ee9(1): pop %rbp
5eea(2): pop %r12
5eec(2): pop %r13
5eee(2): pop %r14
5ef0(2): pop %r15
5ef2(3): mov %rax,%rdx
5ef5(5): mov $0x1,%esi
5efa(2): xor %eax,%eax
5efc(5): jmp 0xffffbea4(%rip)
5f01(7): nop 0x0(%rax)
5f08(4): mov 0x8(%rbx),%r12
5f0c(7): lea 0x6104(%rip),%rsi
5f13(3): mov (%rbx),%rbx
5f16(5): mov $0x5,%edx
5f1b(2): xor %edi,%edi
5f1d(5): call 0xffffbb63(%rip)
5f22(4): add $0x28,%rsp
5f26(3): mov %r12,%r8
5f29(3): mov %rbx,%rcx
5f2c(3): mov %rbp,%rdi
5f2f(3): mov %rax,%rdx
5f32(5): mov $0x1,%esi
5f37(1): pop %rbx
5f38(1): pop %rbp
5f39(2): pop %r12
5f3b(2): pop %r13
5f3d(2): pop %r14
5f3f(2): pop %r15
5f41(2): xor %eax,%eax
5f43(5): jmp 0xffffbe5d(%rip)
5f48(8): nop 0x0(%rax,%rax,1)
5f50(4): mov 0x10(%rbx),%r13
5f54(4): mov 0x8(%rbx),%r12
5f58(7): lea 0x60cf(%rip),%rsi
5f5f(3): mov (%rbx),%rbx
5f62(5): mov $0x5,%edx
5f67(2): xor %edi,%edi
5f69(5): call 0xffffbb17(%rip)
5f6e(4): add $0x28,%rsp
5f72(3): mov %r13,%r9
5f75(3): mov %r12,%r8
5f78(3): mov %rbx,%rcx
5f7b(3): mov %rbp,%rdi
5f7e(3): mov %rax,%rdx
5f81(1): pop %rbx
5f82(1): pop %rbp
5f83(2): pop %r12
5f85(2): pop %r13
5f87(2): pop %r14
5f89(2): pop %r15
5f8b(5): mov $0x1,%esi
5f90(2): xor %eax,%eax
5f92(5): jmp 0xffffbe0e(%rip)
5f97(9): nop 0x0(%rax,%rax,1)
5fa0(7): lea 0x61b9(%rip),%rsi
5fa7(5): mov $0x5,%edx
5fac(2): xor %edi,%edi
5fae(4): mov 0x18(%rbx),%r14
5fb2(4): mov 0x10(%rbx),%r13
5fb6(4): mov 0x8(%rbx),%r12
5fba(3): mov (%rbx),%rbx
5fbd(5): call 0xffffbac3(%rip)
5fc2(4): sub $0x8,%rsp
5fc6(2): push %r14
5fc8(3): mov %rax,%rdx
5fcb(3): mov %r13,%r9
5fce(3): mov %r12,%r8
5fd1(3): mov %rbx,%rcx
5fd4(3): mov %rbp,%rdi
5fd7(5): mov $0x1,%esi
5fdc(2): xor %eax,%eax
5fde(5): call 0xffffbdc2(%rip)
5fe3(1): pop %rax
5fe4(1): pop %rdx
5fe5(4): add $0x28,%rsp
5fe9(1): pop %rbx
5fea(1): pop %rbp
5feb(2): pop %r12
5fed(2): pop %r13
5fef(2): pop %r14
5ff1(2): pop %r15
5ff3(1): ret near (%rsp)
5ff4(4): nop 0x0(%rax)
5ff8(4): mov 0x20(%rbx),%r15
5ffc(7): lea 0x617d(%rip),%rsi
6003(5): mov $0x5,%edx
6008(2): xor %edi,%edi
600a(4): mov 0x18(%rbx),%r14
600e(4): mov 0x10(%rbx),%r13
6012(4): mov 0x8(%rbx),%r12
6016(3): mov (%rbx),%rbx
6019(5): call 0xffffba67(%rip)
601e(2): push %r15
6020(2): jmp 0xffffffa6(%rip)
6022(6): nop 0x0(%rax,%rax,1)
6028(4): mov 0x8(%rbx),%r8
602c(4): mov 0x28(%rbx),%r12
6030(7): lea 0x6171(%rip),%rsi
6037(4): mov 0x20(%rbx),%r15
603b(4): mov 0x18(%rbx),%r14
603f(5): mov $0x5,%edx
6044(4): mov 0x10(%rbx),%r13
6048(2): xor %edi,%edi
604a(3): mov (%rbx),%rbx
604d(4): mov %r8,(%rsp)
6051(5): call 0xffffba2f(%rip)
6056(4): sub $0x8,%rsp
605a(3): mov %r13,%r9
605d(2): push %r12
605f(2): push %r15
6061(2): push %r14
6063(5): mov 0x20(%rsp),%r8
6068(3): mov %rbx,%rcx
606b(3): mov %rax,%rdx
606e(3): mov %rbp,%rdi
6071(5): mov $0x1,%esi
6076(2): xor %eax,%eax
6078(5): call 0xffffbd28(%rip)
607d(4): add $0x20,%rsp
6081(4): add $0x28,%rsp
6085(1): pop %rbx
6086(1): pop %rbp
6087(2): pop %r12
6089(2): pop %r13
608b(2): pop %r14
608d(2): pop %r15
608f(1): ret near (%rsp)
6090(4): mov 0x10(%rbx),%r9
6094(4): mov 0x30(%rbx),%r13
6098(7): lea 0x6131(%rip),%rsi
609f(4): mov 0x28(%rbx),%r12
60a3(4): mov 0x20(%rbx),%r15
60a7(5): mov $0x5,%edx
60ac(4): mov 0x18(%rbx),%r14
60b0(4): mov 0x8(%rbx),%r8
60b4(2): xor %edi,%edi
60b6(5): mov %r9,0x8(%rsp)
60bb(3): mov (%rbx),%rbx
60be(4): mov %r8,(%rsp)
60c2(5): call 0xffffb9be(%rip)
60c7(2): push %r13
60c9(2): push %r12
60cb(2): push %r15
60cd(2): push %r14
60cf(5): mov 0x28(%rsp),%r9
60d4(2): jmp 0xffffff8f(%rip)
60d6(a): nop 0x0(%rax,%rax,1)
60e0(4): mov 0x40(%rbx),%r10
60e4(4): mov 0x38(%rbx),%r9
60e8(5): mov $0x5,%edx
60ed(4): mov 0x10(%rbx),%rax
60f1(4): mov 0x8(%rbx),%r8
60f5(7): lea 0x616c(%rip),%rsi
60fc(4): mov 0x30(%rbx),%r13
6100(4): mov 0x28(%rbx),%r12
6104(4): mov 0x20(%rbx),%r15
6108(4): mov 0x18(%rbx),%r14
610c(5): mov %r10,0x18(%rsp)
6111(5): mov %r9,0x10(%rsp)
6116(4): mov %rax,(%rsp)
611a(5): mov %r8,0x8(%rsp)
611f(3): mov (%rbx),%rbx
6122(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
6130(3): xor %r9d,%r9d
6133(4): cmp $0x0,(%r8)
6137(2): jz 0x14(%rip)
6139(7): nop 0x0(%rax)
6140(4): add $0x1,%r9
6144(5): cmp $0x0,0x0(%r8,%r9,8)
6149(2): jnz 0xfffffff7(%rip)
614b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
6150(4): sub $0x68,%rsp
6154(3): mov %r8,%r10
6157(3): xor %r9d,%r9d
615a(9): mov $0x28,%rax
6163(5): mov %rax,0x58(%rsp)
6168(2): xor %eax,%eax
616a(3): mov %rsp,%r8
616d(3): nop (%rax)
6170(3): mov (%r10),%eax
6173(3): cmp $0x2f,%eax
6176(2): jnbe 0x44(%rip)
6178(3): mov %eax,%r11d
617b(4): add 0x10(%r10),%r11
617f(3): add $0x8,%eax
6182(3): mov %eax,(%r10)
6185(3): mov (%r11),%rax
6188(3): test %rax,%rax
618b(4): mov %rax,0x0(%r8,%r9,8)
618f(2): jz 0xc(%rip)
6191(4): add $0x1,%r9
6195(4): cmp $0xa,%r9
6199(2): jnz 0xffffffd7(%rip)
619b(5): call 0xfffffb75(%rip)
61a0(5): mov 0x58(%rsp),%rax
61a5(9): xor $0x28,%rax
61ae(2): jnz 0x7(%rip)
61b0(4): add $0x68,%rsp
61b4(1): ret near (%rsp)
61b5(5): call 0xffffb91b(%rip)
61ba(4): mov 0x8(%r10),%r11
61be(4): lea 0x8(%r11),%rax
61c2(4): mov %rax,0x8(%r10)
61c6(2): jmp 0xffffffbf(%rip)

"version_etc" :
61d0(1): push %rbp
61d1(1): push %rbx
61d2(6): mov $0x20,%r10d
61d8(3): xor %r11d,%r11d
61db(7): sub $0xb8,%rsp
61e2(9): mov $0x28,%rax
61eb(5): mov %rax,0x78(%rsp)
61f0(2): xor %eax,%eax
61f2(8): lea 0xd0(%rsp),%rax
61fa(8): mov %r8,0xa0(%rsp)
6202(8): lea 0xd0(%rsp),%rbx
620a(5): lea 0x20(%rsp),%r8
620f(8): mov %r9,0xa8(%rsp)
6217(8): mov $0x20,0x8(%rsp)
621f(5): mov %rax,0x10(%rsp)
6224(8): lea 0x80(%rsp),%rax
622c(3): xor %r9d,%r9d
622f(5): mov %rax,0x18(%rsp)
6234(3): mov %rax,%rbp
6237(9): nop 0x0(%rax,%rax,1)
6240(4): cmp $0x2f,%r10d
6244(2): jnbe 0x58(%rip)
6246(3): mov %r10d,%eax
6249(6): mov $0x1,%r11d
624f(4): add $0x8,%r10d
6253(3): add %rbp,%rax
6256(3): mov (%rax),%rax
6259(3): test %rax,%rax
625c(4): mov %rax,0x0(%r8,%r9,8)
6260(2): jz 0xc(%rip)
6262(4): add $0x1,%r9
6266(4): cmp $0xa,%r9
626a(2): jnz 0xffffffd6(%rip)
626c(3): test %r11b,%r11b
626f(2): jnz 0x26(%rip)
6271(5): call 0xfffffa9f(%rip)
6276(5): mov 0x78(%rsp),%rax
627b(9): xor $0x28,%rax
6284(2): jnz 0xc(%rip)
6286(7): add $0xb8,%rsp
628d(1): pop %rbx
628e(1): pop %rbp
628f(1): ret near (%rsp)
6290(5): call 0xffffb840(%rip)
6295(5): mov %r10d,0x8(%rsp)
629a(2): jmp 0xffffffd7(%rip)
629c(3): mov %rbx,%rax
629f(4): add $0x8,%rbx
62a3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
62b0(1): push %rbx
62b1(7): lea 0x5d92(%rip),%rsi
62b8(5): mov $0x5,%edx
62bd(2): xor %edi,%edi
62bf(5): call 0xffffb7c1(%rip)
62c4(7): lea 0x5d94(%rip),%rdx
62cb(3): mov %rax,%rsi
62ce(5): mov $0x1,%edi
62d3(2): xor %eax,%eax
62d5(5): call 0xffffb9fb(%rip)
62da(7): lea 0x5d94(%rip),%rsi
62e1(5): mov $0x5,%edx
62e6(2): xor %edi,%edi
62e8(5): call 0xffffb798(%rip)
62ed(7): lea 0x52ac(%rip),%rcx
62f4(7): lea 0x47e5(%rip),%rdx
62fb(3): mov %rax,%rsi
62fe(5): mov $0x1,%edi
6303(2): xor %eax,%eax
6305(5): call 0xffffb9cb(%rip)
630a(7): mov 0x208d77(%rip),%rbx
6311(7): lea 0x5f90(%rip),%rsi
6318(2): xor %edi,%edi
631a(5): mov $0x5,%edx
631f(5): call 0xffffb761(%rip)
6324(3): mov %rbx,%rsi
6327(3): mov %rax,%rdi
632a(1): pop %rbx
632b(5): jmp 0xffffb885(%rip)

"xmalloc" :
6330(1): push %rbx
6331(3): mov %rdi,%rbx
6334(5): call 0xffffb90c(%rip)
6339(3): test %rax,%rax
633c(2): jnz 0x7(%rip)
633e(3): test %rbx,%rbx
6341(2): jnz 0x4(%rip)
6343(1): pop %rbx
6344(1): ret near (%rsp)
6345(5): call 0x23b(%rip)

"xnmalloc" :
6350(3): mov %rdi,%rax
6353(3): mul %rax,%rsi,%rdx
6356(3): mov %rax,%rdi
6359(3): seto %al
635c(3): test %rdi,%rdi
635f(2): js 0xc(%rip)
6361(3): movzx %al,%eax
6364(3): test %rax,%rax
6367(2): jnz 0x4(%rip)
6369(2): jmp 0xffffffc7(%rip)
636b(4): sub $0x8,%rsp
636f(5): call 0x211(%rip)

"xrealloc" :
6390(3): test %rsi,%rsi
6393(1): push %rbx
6394(3): mov %rsi,%rbx
6397(2): jnz 0x7(%rip)
6399(3): test %rdi,%rdi
639c(2): jnz 0x1c(%rip)
639e(3): mov %rbx,%rsi
63a1(5): call 0xffffb90f(%rip)
63a6(3): test %rax,%rax
63a9(2): jnz 0x7(%rip)
63ab(3): test %rbx,%rbx
63ae(2): jnz 0x13(%rip)
63b0(1): pop %rbx
63b1(1): ret near (%rsp)
63b2(6): nop 0x0(%rax,%rax,1)
63b8(5): call 0xffffba28(%rip)
63bd(2): xor %eax,%eax
63bf(1): pop %rbx
63c0(1): ret near (%rsp)
63c1(5): call 0x1bf(%rip)

"xnrealloc" :
63d0(3): mov %rsi,%rax
63d3(3): mul %rax,%rdx,%rdx
63d6(3): mov %rax,%rsi
63d9(3): seto %al
63dc(3): test %rsi,%rsi
63df(2): js 0xc(%rip)
63e1(3): movzx %al,%eax
63e4(3): test %rax,%rax
63e7(2): jnz 0x4(%rip)
63e9(2): jmp 0xffffffa7(%rip)
63eb(4): sub $0x8,%rsp
63ef(5): call 0x191(%rip)

"x2nrealloc" :
6400(3): test %rdi,%rdi
6403(3): mov %rdx,%r9
6406(3): mov (%rsi),%rcx
6409(2): jz 0x37(%rip)
640b(2): xor %edx,%edx
640d(a): mov $0x6148914691236517204,%rax
6417(3): div %r9,%rax
641a(3): cmp %rcx,%rax
641d(2): jbe 0x3e(%rip)
641f(3): mov %rcx,%rax
6422(3): shr $0x1,%rax
6425(5): lea 0x1(%rax,%rcx,1),%rcx
642a(3): mov %rcx,(%rsi)
642d(4): imul %r9,%rcx
6431(3): mov %rcx,%rsi
6434(5): jmp 0xffffff5c(%rip)
6439(7): nop 0x0(%rax)
6440(3): test %rcx,%rcx
6443(2): jz 0x25(%rip)
6445(3): mov %rcx,%rax
6448(3): mul %rax,%r9,%rdx
644b(3): seto %dl
644e(3): test %rax,%rax
6451(3): movzx %dl,%edx
6454(2): js 0x7(%rip)
6456(3): test %rdx,%rdx
6459(2): jz 0xffffffd1(%rip)
645b(4): sub $0x8,%rsp
645f(5): call 0x121(%rip)
6464(4): nop 0x0(%rax)
6468(2): xor %edx,%edx
646a(5): mov $0x80,%eax
646f(3): xor %r8d,%r8d
6472(3): div %r9,%rax
6475(3): test %rax,%rax
6478(4): setz %r8b
647c(4): lea 0x0(%r8,%rax,1),%rcx
6480(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6490(3): test %rdi,%rdi
6493(3): mov (%rsi),%rax
6496(2): jz 0x2a(%rip)
6498(a): mov $0x6148914691236517203,%rdx
64a2(3): cmp %rdx,%rax
64a5(2): jnbe 0x2c(%rip)
64a7(3): mov %rax,%rdx
64aa(3): shr $0x1,%rdx
64ad(5): lea 0x1(%rdx,%rax,1),%rax
64b2(3): mov %rax,(%rsi)
64b5(3): mov %rax,%rsi
64b8(5): jmp 0xfffffed8(%rip)
64bd(3): nop (%rax)
64c0(3): test %rax,%rax
64c3(5): mov $0x80,%edx
64c8(4): cmove %rdx,%rax
64cc(3): test %rax,%rax
64cf(2): jns 0xffffffe3(%rip)
64d1(4): sub $0x8,%rsp
64d5(5): call 0xab(%rip)

"xzalloc" :
64e0(1): push %rbx
64e1(3): mov %rdi,%rbx
64e4(5): call 0xfffffe4c(%rip)
64e9(3): mov %rbx,%rdx
64ec(2): xor %esi,%esi
64ee(3): mov %rax,%rdi
64f1(1): pop %rbx
64f2(5): jmp 0xffffb66e(%rip)

"xcalloc" :
6500(3): mov %rdi,%rax
6503(4): sub $0x8,%rsp
6507(3): mul %rax,%rsi,%rdx
650a(3): seto %dl
650d(3): test %rax,%rax
6510(2): js 0x19(%rip)
6512(3): movzx %dl,%edx
6515(3): test %rdx,%rdx
6518(2): jnz 0x11(%rip)
651a(5): call 0xffffb6a6(%rip)
651f(3): test %rax,%rax
6522(2): jz 0x7(%rip)
6524(4): add $0x8,%rsp
6528(1): ret near (%rsp)
6529(5): call 0x57(%rip)

"xmemdup" :
6530(1): push %rbp
6531(1): push %rbx
6532(3): mov %rdi,%rbp
6535(3): mov %rsi,%rdi
6538(3): mov %rsi,%rbx
653b(4): sub $0x8,%rsp
653f(5): call 0xfffffdf1(%rip)
6544(4): add $0x8,%rsp
6548(3): mov %rbx,%rdx
654b(3): mov %rbp,%rsi
654e(1): pop %rbx
654f(1): pop %rbp
6550(3): mov %rax,%rdi
6553(5): jmp 0xffffb69d(%rip)

"xstrdup" :
6560(1): push %rbx
6561(3): mov %rdi,%rbx
6564(5): call 0xffffb53c(%rip)
6569(3): mov %rbx,%rdi
656c(4): lea 0x1(%rax),%rsi
6570(1): pop %rbx
6571(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
6580(7): lea 0x5dc8(%rip),%rsi
6587(4): sub $0x8,%rsp
658b(5): mov $0x5,%edx
6590(2): xor %edi,%edi
6592(5): call 0xffffb4ee(%rip)
6597(6): mov 0x208a7b(%rip),%edi
659d(7): lea 0x4585(%rip),%rdx
65a4(3): mov %rax,%rcx
65a7(2): xor %esi,%esi
65a9(2): xor %eax,%eax
65ab(5): call 0xffffb745(%rip)
65b0(5): call 0xffffb400(%rip)

"xfts_open" :
65c0(4): sub $0x8,%rsp
65c4(6): or $0x200,%esi
65ca(5): call 0x1a76(%rip)
65cf(3): test %rax,%rax
65d2(2): jz 0xe(%rip)
65d4(4): add $0x8,%rsp
65d8(1): ret near (%rsp)
65d9(7): nop 0x0(%rax)
65e0(5): call 0xffffb3e0(%rip)
65e5(3): cmp $0x16,(%rax)
65e8(2): jz 0x8(%rip)
65ea(5): call 0xffffff96(%rip)
65ef(1): nop 
65f0(7): lea 0x5d99(%rip),%rcx
65f7(7): lea 0x5d62(%rip),%rsi
65fe(7): lea 0x5d78(%rip),%rdi
6605(5): mov $0x29,%edx
660a(5): call 0xffffb546(%rip)

"cycle_warning_required" :
6610(3): mov 0x48(%rdi),%edx
6613(5): mov $0x1,%eax
6618(3): and $0x11,%edx
661b(3): cmp $0x10,%edx
661e(2): jz 0x9(%rip)
6620(2): xor %eax,%eax
6622(3): cmp $0x11,%edx
6625(2): jz 0xb(%rip)
6627(2): REP ret near (%rsp)
6629(7): nop 0x0(%rax)
6630(5): cmp $0x0,0x58(%rsi)
6635(3): setnz %al
6638(1): ret near (%rsp)

"xstrtoul" :
6640(2): push %r15
6642(2): push %r14
6644(2): push %r13
6646(2): push %r12
6648(1): push %rbp
6649(1): push %rbx
664a(4): sub $0x28,%rsp
664e(9): mov $0x28,%rax
6657(5): mov %rax,0x18(%rsp)
665c(2): xor %eax,%eax
665e(3): cmp $0x24,%edx
6661(6): jnbe 0x364(%rip)
6667(5): lea 0x10(%rsp),%rax
666c(3): mov %rsi,%r15
666f(3): test %rsi,%rsi
6672(3): mov %rdi,%rbp
6675(4): mov %edx,0x8(%rsp)
6679(3): mov %rcx,%r14
667c(3): mov %r8,%r13
667f(4): cmove %rax,%r15
6683(5): call 0xffffb33d(%rip)
6688(6): mov $0x0,(%rax)
668e(3): mov %rax,%r12
6691(4): movzx 0x0(%rbp),%ebx
6695(5): call 0xffffb73b(%rip)
669a(4): mov 0x8(%rsp),%edx
669e(3): mov (%rax),%rsi
66a1(3): mov %rbp,%rax
66a4(2): jmp 0x13(%rip)
66a6(a): nop 0x0(%rax,%rax,1)
66b0(4): add $0x1,%rax
66b4(3): movzx (%rax),%ebx
66b7(3): movzx %bl,%ecx
66ba(5): test $0x20,0x1(%rsi,%rcx,2)
66bf(2): jnz 0xfffffff1(%rip)
66c1(3): cmp $0x2d,%bl
66c4(2): jz 0x54(%rip)
66c6(3): mov %r15,%rsi
66c9(3): mov %rbp,%rdi
66cc(5): call 0xffffb674(%rip)
66d1(3): mov (%r15),%rcx
66d4(3): mov %rax,%rbx
66d7(3): cmp %rbp,%rcx
66da(2): jz 0x2e(%rip)
66dc(4): mov (%r12),%eax
66e0(2): test %eax,%eax
66e2(2): jz 0x66(%rip)
66e4(3): cmp $0x22,%eax
66e7(5): mov $0x1,%ebp
66ec(2): jnz 0x2c(%rip)
66ee(3): test %r13,%r13
66f1(2): jz 0xb(%rip)
66f3(4): movzx (%rcx),%r12d
66f7(3): test %r12b,%r12b
66fa(2): jnz 0x7d(%rip)
66fc(3): mov %rbx,(%r14)
66ff(2): jmp 0x1e(%rip)
6701(7): nop 0x0(%rax)
6708(3): test %r13,%r13
670b(5): mov %rcx,0x8(%rsp)
6710(2): jnz 0x40(%rip)
6712(6): nop 0x0(%rax,%rax,1)
6718(5): mov $0x4,%ebp
671d(5): mov 0x18(%rsp),%rdi
6722(9): xor $0x28,%rdi
672b(2): mov %ebp,%eax
672d(6): jnz 0x293(%rip)
6733(4): add $0x28,%rsp
6737(1): pop %rbx
6738(1): pop %rbp
6739(2): pop %r12
673b(2): pop %r13
673d(2): pop %r14
673f(2): pop %r15
6741(1): ret near (%rsp)
6742(6): nop 0x0(%rax,%rax,1)
6748(2): xor %ebp,%ebp
674a(2): jmp 0xffffffa4(%rip)
674c(4): nop 0x0(%rax)
6750(5): movzx 0x0(%rbp),%r12d
6755(3): test %r12b,%r12b
6758(2): jz 0xffffffc0(%rip)
675a(4): movsx %r12b,%esi
675e(3): mov %r13,%rdi
6761(2): xor %ebp,%ebp
6763(5): call 0xffffb39d(%rip)
6768(3): test %rax,%rax
676b(5): mov $0x1,%ebx
6770(5): mov 0x8(%rsp),%rcx
6775(2): jz 0xffffffa3(%rip)
6777(4): movsx %r12b,%esi
677b(3): mov %r13,%rdi
677e(5): mov %rcx,0x8(%rsp)
6783(5): call 0xffffb37d(%rip)
6788(3): test %rax,%rax
678b(5): mov 0x8(%rsp),%rcx
6790(6): jz 0xcc(%rip)
6796(5): lea 0xffffffbb(%r12),%eax
679b(2): cmp $0x2f,%al
679d(2): jnbe 0x53(%rip)
679f(a): mov $0x142129060940101,%rdx
67a9(4): bt %rax,%rdx
67ad(2): jnb 0x43(%rip)
67af(5): mov $0x30,%esi
67b4(3): mov %r13,%rdi
67b7(5): mov %rcx,0x8(%rsp)
67bc(5): call 0xffffb344(%rip)
67c1(3): test %rax,%rax
67c4(5): mov 0x8(%rsp),%rcx
67c9(2): jz 0x27(%rip)
67cb(4): movzx 0x1(%rcx),%eax
67cf(2): cmp $0x44,%al
67d1(2): jz 0xe(%rip)
67d3(2): cmp $0x69,%al
67d5(6): jz 0x1d3(%rip)
67db(2): cmp $0x42,%al
67dd(2): jnz 0x13(%rip)
67df(5): mov $0x2,%edi
67e4(5): mov $0x3e8,%esi
67e9(2): jmp 0x11(%rip)
67eb(5): nop 0x0(%rax,%rax,1)
67f0(5): mov $0x1,%edi
67f5(5): mov $0x400,%esi
67fa(4): sub $0x42,%r12d
67fe(4): cmp $0x35,%r12b
6802(2): jnbe 0x5a(%rip)
6804(7): lea 0x5bdd(%rip),%rdx
680b(4): movzx %r12b,%r12d
680f(4): movsxd 0x0(%rdx,%r12,4),%rax
6813(3): add %rdx,%rax
6816(2): jmp %rax
6818(3): mov %rbx,%rax
681b(3): mul %rax,%rsi,%rdx
681e(6): jo 0x1f3(%rip)
6824(3): xor %r8d,%r8d
6827(3): mul %rax,%rsi,%rdx
682a(6): jo 0x1d8(%rip)
6830(3): mov %rax,%rbx
6833(3): or %r8d,%ebp
6836(a): nop 0x0(%rax,%rax,1)
6840(3): movsxd %edi,%rdi
6843(2): mov %ebp,%eax
6845(3): add %rdi,%rcx
6848(3): or $0x2,%eax
684b(3): mov %rcx,(%r15)
684e(3): cmp $0x0,(%rcx)
6851(3): mov %rbx,(%r14)
6854(3): cmovne %eax,%ebp
6857(5): jmp 0xfffffec6(%rip)
685c(3): mov %rbx,(%r14)
685f(3): or $0x2,%ebp
6862(5): jmp 0xfffffebb(%rip)
6867(5): mov $0x2,%edx
686c(3): mov %rdx,%rax
686f(3): mul %rax,%rbx,%rdx
6872(6): jo 0x9c(%rip)
6878(3): add %rbx,%rbx
687b(2): jmp 0xffffffc5(%rip)
687d(5): mov $0x200,%edx
6882(3): mov %rdx,%rax
6885(3): mul %rax,%rbx,%rdx
6888(6): jo 0x86(%rip)
688e(4): shl/sal $0x9,%rbx
6892(2): jmp 0xffffffae(%rip)
6894(6): mov $0x7,%r8d
689a(3): xor %r9d,%r9d
689d(3): nop (%rax)
68a0(3): mov %rbx,%rax
68a3(3): mul %rax,%rsi,%rdx
68a6(3): mov %rax,%rbx
68a9(6): jo 0x195(%rip)
68af(4): sub $0x1,%r8d
68b3(2): jnz 0xffffffed(%rip)
68b5(3): or %r9d,%ebp
68b8(2): jmp 0xffffff88(%rip)
68ba(6): mov $0x8,%r8d
68c0(3): xor %r9d,%r9d
68c3(5): nop 0x0(%rax,%rax,1)
68c8(3): mov %rbx,%rax
68cb(3): mul %rax,%rsi,%rdx
68ce(3): mov %rax,%rbx
68d1(6): jo 0x14f(%rip)
68d7(4): sub $0x1,%r8d
68db(2): jnz 0xffffffed(%rip)
68dd(2): jmp 0xffffffd8(%rip)
68df(6): mov $0x4,%r8d
68e5(3): xor %r9d,%r9d
68e8(3): mov %rbx,%rax
68eb(3): mul %rax,%rsi,%rdx
68ee(3): mov %rax,%rbx
68f1(6): jo 0x102(%rip)
68f7(4): sub $0x1,%r8d
68fb(2): jnz 0xffffffed(%rip)
68fd(2): jmp 0xffffffb8(%rip)
68ff(3): mov %rbx,%rax
6902(3): mul %rax,%rsi,%rdx
6905(3): mov %rax,%rbx
6908(6): jno 0xffffff38(%rip)
690e(5): mov $0x1,%ebp
6913(4): or $0xffffffff,%rbx
6917(5): jmp 0xffffff29(%rip)
691c(4): nop 0x0(%rax)
6920(6): mov $0x5,%r8d
6926(3): xor %r9d,%r9d
6929(3): mov %rbx,%rax
692c(3): mul %rax,%rsi,%rdx
692f(3): mov %rax,%rbx
6932(6): jo 0xfd(%rip)
6938(4): sub $0x1,%r8d
693c(2): jnz 0xffffffed(%rip)
693e(5): jmp 0xffffff77(%rip)
6943(6): mov $0x6,%r8d
6949(3): xor %r9d,%r9d
694c(3): mov %rbx,%rax
694f(3): mul %rax,%rsi,%rdx
6952(3): mov %rax,%rbx
6955(6): jo 0x8f(%rip)
695b(4): sub $0x1,%r8d
695f(2): jnz 0xffffffed(%rip)
6961(5): jmp 0xffffff54(%rip)
6966(5): mov $0x400,%edx
696b(3): mov %rdx,%rax
696e(3): mul %rax,%rbx,%rdx
6971(2): jo 0xffffff9d(%rip)
6973(4): shl/sal $0xa,%rbx
6977(5): jmp 0xfffffec9(%rip)
697c(3): mov %rbx,%rax
697f(3): mul %rax,%rsi,%rdx
6982(6): jo 0xcb(%rip)
6988(3): xor %r8d,%r8d
698b(3): mul %rax,%rsi,%rdx
698e(6): jno 0xfffffe99(%rip)
6994(6): mov $0x1,%r8d
699a(4): or $0xffffffff,%rax
699e(5): jmp 0xfffffe89(%rip)
69a3(5): nop 0x0(%rax,%rax,1)
69a8(2): xor %edi,%edi
69aa(4): cmp $0x42,0x2(%rcx)
69ae(5): mov $0x400,%esi
69b3(4): setz %dil
69b7(4): lea 0x1(%rdi,%rdi,1),%edi
69bb(5): jmp 0xfffffe3f(%rip)
69c0(5): call 0xffffb110(%rip)
69c5(7): lea 0x5af4(%rip),%rcx
69cc(7): lea 0x59cd(%rip),%rsi
69d3(7): lea 0x59e6(%rip),%rdi
69da(5): mov $0x54,%edx
69df(5): call 0xffffb171(%rip)
69e4(6): mov $0x1,%r9d
69ea(4): or $0xffffffff,%rbx
69ee(5): jmp 0xffffff6d(%rip)
69f3(6): mov $0x1,%r9d
69f9(4): or $0xffffffff,%rbx
69fd(5): jmp 0xfffffefa(%rip)
6a02(6): mov $0x1,%r8d
6a08(4): or $0xffffffff,%rbx
6a0c(5): jmp 0xfffffe27(%rip)
6a11(4): or $0xffffffff,%rax
6a15(6): mov $0x1,%r8d
6a1b(5): jmp 0xfffffe0c(%rip)
6a20(6): mov $0x1,%r9d
6a26(4): or $0xffffffff,%rbx
6a2a(5): jmp 0xfffffead(%rip)
6a2f(6): mov $0x1,%r9d
6a35(4): or $0xffffffff,%rbx
6a39(5): jmp 0xfffffeff(%rip)
6a3e(6): mov $0x1,%r9d
6a44(4): or $0xffffffff,%rbx
6a48(5): jmp 0xfffffe67(%rip)
6a4d(6): mov $0x1,%r8d
6a53(4): or $0xffffffff,%rax
6a57(5): jmp 0xffffff34(%rip)

"AD_compare" :
6a60(2): xor %eax,%eax
6a62(4): mov 0x8(%rsi),%rdx
6a66(4): cmp %rdx,0x8(%rdi)
6a6a(2): jz 0x6(%rip)
6a6c(2): REP ret near (%rsp)
6a6e(2): nop 
6a70(3): mov (%rsi),%rax
6a73(3): cmp %rax,(%rdi)
6a76(3): setz %al
6a79(1): ret near (%rsp)

"AD_hash" :
6a80(4): mov 0x8(%rdi),%rax
6a84(2): xor %edx,%edx
6a86(3): div %rsi,%rax
6a89(3): mov %rdx,%rax
6a8c(1): ret near (%rsp)

"dev_type_hash" :
6a90(3): mov (%rdi),%rax
6a93(2): xor %edx,%edx
6a95(3): div %rsi,%rax
6a98(3): mov %rdx,%rax
6a9b(1): ret near (%rsp)

"dev_type_compare" :
6aa0(3): mov (%rsi),%rax
6aa3(3): cmp %rax,(%rdi)
6aa6(3): setz %al
6aa9(1): ret near (%rsp)

"fts_compare_ino" :
6ab0(3): mov (%rdi),%rdx
6ab3(3): mov (%rsi),%rax
6ab6(7): mov 0x80(%rax),%rax
6abd(7): cmp %rax,0x80(%rdx)
6ac4(2): jb 0xc(%rip)
6ac6(3): setnbe %al
6ac9(3): movzx %al,%eax
6acc(1): ret near (%rsp)
6acd(3): nop (%rax)
6ad0(5): mov $0xffffffff,%eax
6ad5(1): ret near (%rsp)

"fts_stat" :
6ae0(2): push %r12
6ae2(1): push %rbp
6ae3(3): mov %rsi,%rbp
6ae6(1): push %rbx
6ae7(5): cmp $0x0,0x58(%rbp)
6aec(4): lea 0x78(%rsi),%rbx
6af0(3): mov %rdi,%r12
6af3(3): mov 0x48(%rdi),%eax
6af6(4): mov 0x30(%rsi),%rsi
6afa(2): jnz 0x66(%rip)
6afc(2): test $0x1,%al
6afe(2): jz 0x62(%rip)
6b00(3): mov %rbx,%rdx
6b03(5): mov $0x1,%edi
6b08(5): call 0xffffb118(%rip)
6b0d(2): test %eax,%eax
6b0f(2): jz 0x7c(%rip)
6b11(5): call 0xffffaeaf(%rip)
6b16(3): mov %rax,%r12
6b19(2): mov (%rax),%eax
6b1b(3): cmp $0x2,%eax
6b1e(6): jz 0x112(%rip)
6b24(4): lea 0x8(%rbx),%rdi
6b28(3): mov %eax,0x40(%rbp)
6b2b(8): mov $0x0,0x78(%rbp)
6b33(b): mov $0x0,0x88(%rbx)
6b3e(2): xor %eax,%eax
6b40(4): and $0xfffffff8,%rdi
6b44(3): sub %rdi,%rbx
6b47(6): lea 0x90(%rbx),%ecx
6b4d(3): shr $0x3,%ecx
6b50(3): REP stosd %rax,rdi(%es,10)
6b53(5): mov $0xa,%eax
6b58(1): pop %rbx
6b59(1): pop %rbp
6b5a(2): pop %r12
6b5c(1): ret near (%rsp)
6b5d(3): nop (%rax)
6b60(2): test $0x2,%al
6b62(2): jnz 0xffffff9e(%rip)
6b64(2): test %dl,%dl
6b66(2): jnz 0xffffff9a(%rip)
6b68(3): mov %rsi,%rdx
6b6b(5): mov 0x2c(%r12),%esi
6b70(6): mov $0x100,%r8d
6b76(3): mov %rbx,%rcx
6b79(5): mov $0x1,%edi
6b7e(5): call 0xffffafa2(%rip)
6b83(2): test %eax,%eax
6b85(6): jnz 0x9b(%rip)
6b8b(6): mov 0x90(%rbp),%eax
6b91(5): and $0xf000,%eax
6b96(5): cmp $0x4000,%eax
6b9b(2): jz 0x25(%rip)
6b9d(5): cmp $0xa000,%eax
6ba2(6): jz 0xd6(%rip)
6ba8(5): cmp $0x8000,%eax
6bad(3): setz %al
6bb0(3): movzx %al,%eax
6bb3(1): pop %rbx
6bb4(4): lea 0x3(%rax,%rax,4),%eax
6bb8(1): pop %rbp
6bb9(2): pop %r12
6bbb(1): ret near (%rsp)
6bbc(4): nop 0x0(%rax)
6bc0(7): mov 0x88(%rbp),%rax
6bc7(4): cmp $0x1,%rax
6bcb(6): jbe 0x85(%rip)
6bd1(5): cmp $0x0,0x58(%rbp)
6bd6(2): jle 0x7a(%rip)
6bd8(6): test $0x20,0x48(%r12)
6bde(4): lea 0xfffffffe(%rax),%rdx
6be2(4): cmove %rdx,%rax
6be6(7): cmp $0x2e,0x108(%rbp)
6bed(4): mov %rax,0x68(%rbp)
6bf1(5): mov $0x1,%eax
6bf6(6): jnz 0xffffff62(%rip)
6bfc(7): cmp $0x0,0x109(%rbp)
6c03(6): jnz 0x85(%rip)
6c09(5): cmp $0x1,0x58(%rbp)
6c0e(2): sbb %eax,%eax
6c10(3): and $0xfc,%eax
6c13(3): add $0x5,%eax
6c16(5): jmp 0xffffff42(%rip)
6c1b(5): nop 0x0(%rax,%rax,1)
6c20(5): call 0xffffada0(%rip)
6c25(2): mov (%rax),%eax
6c27(5): jmp 0xfffffefd(%rip)
6c2c(4): nop 0x0(%rax)
6c30(4): mov 0x30(%rbp),%rsi
6c34(3): mov %rbx,%rdx
6c37(5): mov $0x1,%edi
6c3c(5): call 0xffffae74(%rip)
6c41(2): test %eax,%eax
6c43(2): jz 0x1d(%rip)
6c45(4): mov (%r12),%eax
6c49(5): jmp 0xfffffedb(%rip)
6c4e(2): nop 
6c50(7): mov $0xffffffff,%rax
6c57(2): jmp 0xffffff8f(%rip)
6c59(7): nop 0x0(%rax)
6c60(8): mov $0x0,(%r12)
6c68(5): mov $0xd,%eax
6c6d(5): jmp 0xfffffeeb(%rip)
6c72(6): nop 0x0(%rax,%rax,1)
6c78(5): mov $0xc,%eax
6c7d(5): jmp 0xfffffedb(%rip)
6c82(6): nop 0x0(%rax,%rax,1)
6c88(6): mov 0x108(%rbp),%edx
6c8e(6): and $0xffff00,%edx
6c94(6): cmp $0x2e00,%edx
6c9a(6): jnz 0xfffffebe(%rip)
6ca0(5): jmp 0xffffff69(%rip)

"fts_sort" :
6cb0(2): push %r13
6cb2(2): push %r12
6cb4(3): mov %rdx,%r12
6cb7(1): push %rbp
6cb8(1): push %rbx
6cb9(3): mov %rdi,%rbp
6cbc(3): mov %rsi,%rbx
6cbf(4): sub $0x8,%rsp
6cc3(4): cmp %rdx,0x38(%rbp)
6cc7(4): mov 0x40(%rdi),%r13
6ccb(4): mov 0x10(%rdi),%rdi
6ccf(2): jnb 0x36(%rip)
6cd1(4): lea 0x28(%rdx),%rsi
6cd5(a): mov $0x2305843009213693951,%rax
6cdf(3): cmp %rax,%rsi
6ce2(4): mov %rsi,0x38(%rbp)
6ce6(6): jnbe 0x9e(%rip)
6cec(4): shl/sal $0x3,%rsi
6cf0(5): call 0xffffafc0(%rip)
6cf5(3): test %rax,%rax
6cf8(3): mov %rax,%rdi
6cfb(6): jz 0x85(%rip)
6d01(4): mov %rax,0x10(%rbp)
6d05(3): test %rbx,%rbx
6d08(2): jz 0x19(%rip)
6d0a(3): mov %rdi,%rdx
6d0d(3): nop (%rax)
6d10(4): add $0x8,%rdx
6d14(4): mov %rbx,0xfffffff8(%rdx)
6d18(4): mov 0x10(%rbx),%rbx
6d1c(3): test %rbx,%rbx
6d1f(2): jnz 0xfffffff1(%rip)
6d21(3): mov %r13,%rcx
6d24(5): mov $0x8,%edx
6d29(3): mov %r12,%rsi
6d2c(5): call 0xfffface4(%rip)
6d31(4): mov 0x10(%rbp),%r8
6d35(3): mov %r12,%rcx
6d38(4): sub $0x1,%rcx
6d3c(3): mov (%r8),%rax
6d3f(2): jz 0x71(%rip)
6d41(3): mov %rax,%rdi
6d44(3): mov %r8,%rdx
6d47(2): jmp 0xc(%rip)
6d49(7): nop 0x0(%rax)
6d50(3): mov (%rdx),%rdi
6d53(4): mov 0x8(%rdx),%rsi
6d57(4): add $0x8,%rdx
6d5b(4): sub $0x1,%rcx
6d5f(4): mov %rsi,0x10(%rdi)
6d63(2): jnz 0xffffffed(%rip)
6d65(5): mov 0xfffffff8(%r8,%r12,8),%rdx
6d6a(8): mov $0x0,0x10(%rdx)
6d72(4): add $0x8,%rsp
6d76(1): pop %rbx
6d77(1): pop %rbp
6d78(2): pop %r12
6d7a(2): pop %r13
6d7c(1): ret near (%rsp)
6d7d(3): nop (%rax)
6d80(4): mov 0x10(%rbp),%rdi
6d84(5): call 0xffffb05c(%rip)
6d89(8): mov $0x0,0x10(%rbp)
6d91(8): mov $0x0,0x38(%rbp)
6d99(4): add $0x8,%rsp
6d9d(3): mov %rbx,%rax
6da0(1): pop %rbx
6da1(1): pop %rbp
6da2(2): pop %r12
6da4(2): pop %r13
6da6(1): ret near (%rsp)
6da7(9): nop 0x0(%rax,%rax,1)
6db0(3): mov %rax,%rdx
6db3(2): jmp 0xffffffb7(%rip)

"fts_alloc" :
6dc0(2): push %r13
6dc2(2): push %r12
6dc4(3): mov %rdi,%r12
6dc7(1): push %rbp
6dc8(7): lea 0x110(%rdx),%rdi
6dcf(1): push %rbx
6dd0(3): mov %rsi,%r13
6dd3(3): mov %rdx,%rbp
6dd6(4): sub $0x8,%rsp
6dda(4): and $0xfffffff8,%rdi
6dde(5): call 0xffffae62(%rip)
6de3(3): test %rax,%rax
6de6(3): mov %rax,%rbx
6de9(2): jz 0x53(%rip)
6deb(7): lea 0x108(%rax),%rdi
6df2(3): mov %rbp,%rdx
6df5(3): mov %r13,%rsi
6df8(5): call 0xffffadf8(%rip)
6dfd(5): mov 0x20(%r12),%rax
6e02(8): mov $0x0,0x108(%rbx,%rbp,1)
6e0a(4): mov %rbp,0x60(%rbx)
6e0e(4): mov %r12,0x50(%rbx)
6e12(7): mov $0x0,0x40(%rbx)
6e19(8): mov $0x0,0x18(%rbx)
6e21(4): mov %rax,0x38(%rbx)
6e25(7): mov $0x30000,0x72(%rbx)
6e2c(8): mov $0x0,0x20(%rbx)
6e34(8): mov $0x0,0x28(%rbx)
6e3c(4): add $0x8,%rsp
6e40(3): mov %rbx,%rax
6e43(1): pop %rbx
6e44(1): pop %rbp
6e45(2): pop %r12
6e47(2): pop %r13
6e49(1): ret near (%rsp)

"fts_lfree" :
6e50(3): test %rdi,%rdi
6e53(2): jz 0x3d(%rip)
6e55(1): push %rbp
6e56(1): push %rbx
6e57(3): mov %rdi,%rbx
6e5a(4): sub $0x8,%rsp
6e5e(2): nop 
6e60(4): mov 0x18(%rbx),%rdi
6e64(4): mov 0x10(%rbx),%rbp
6e68(3): test %rdi,%rdi
6e6b(2): jz 0x7(%rip)
6e6d(5): call 0xffffad23(%rip)
6e72(3): mov %rbx,%rdi
6e75(3): mov %rbp,%rbx
6e78(5): call 0xffffaf68(%rip)
6e7d(3): test %rbp,%rbp
6e80(2): jnz 0xffffffe0(%rip)
6e82(4): add $0x8,%rsp
6e86(1): pop %rbx
6e87(1): pop %rbp
6e88(1): ret near (%rsp)
6e89(7): nop 0x0(%rax)
6e90(2): REP ret near (%rsp)

"fd_ring_clear" :
6ea0(1): push %rbx
6ea1(3): mov %rdi,%rbx
6ea4(2): jmp 0x18(%rip)
6ea6(a): nop 0x0(%rax,%rax,1)
6eb0(3): mov %rbx,%rdi
6eb3(5): call 0x359d(%rip)
6eb8(2): test %eax,%eax
6eba(2): jns 0x16(%rip)
6ebc(3): mov %rbx,%rdi
6ebf(5): call 0x3541(%rip)
6ec4(2): test %al,%al
6ec6(2): jz 0xffffffea(%rip)
6ec8(1): pop %rbx
6ec9(1): ret near (%rsp)
6eca(6): nop 0x0(%rax,%rax,1)
6ed0(2): mov %eax,%edi
6ed2(5): call 0xffffac9e(%rip)
6ed7(2): jmp 0xffffffe5(%rip)

"filesystem_type" :
6ee0(2): push %r13
6ee2(2): push %r12
6ee4(1): push %rbp
6ee5(1): push %rbx
6ee6(7): sub $0x98,%rsp
6eed(4): mov 0x50(%rdi),%rbx
6ef1(9): mov $0x28,%rax
6efa(8): mov %rax,0x88(%rsp)
6f02(2): xor %eax,%eax
6f04(4): test $0x2,0x49(%rbx)
6f08(2): jz 0x6a(%rip)
6f0a(4): mov 0x50(%rbx),%r12
6f0e(3): mov %rdi,%rbp
6f11(3): mov %esi,%r13d
6f14(3): test %r12,%r12
6f17(2): jz 0x29(%rip)
6f19(4): mov 0x78(%rbp),%rax
6f1d(3): mov %rsp,%rsi
6f20(3): mov %r12,%rdi
6f23(4): mov %rax,(%rsp)
6f27(5): call 0x27d9(%rip)
6f2c(3): test %rax,%rax
6f2f(2): jz 0x3e(%rip)
6f31(4): mov 0x8(%rax),%rbx
6f35(2): jmp 0x3f(%rip)
6f37(9): nop 0x0(%rax,%rax,1)
6f40(7): mov 0x208079(%rip),%r8
6f47(7): lea 0xfffffb52(%rip),%rcx
6f4e(7): lea 0xfffffb3b(%rip),%rdx
6f55(2): xor %esi,%esi
6f57(5): mov $0xd,%edi
6f5c(5): call 0x2a14(%rip)
6f61(3): test %rax,%rax
6f64(3): mov %rax,%r12
6f67(4): mov %rax,0x50(%rbx)
6f6b(2): jnz 0xffffffae(%rip)
6f6d(3): test %r13d,%r13d
6f70(2): jns 0x30(%rip)
6f72(2): xor %ebx,%ebx
6f74(8): mov 0x88(%rsp),%rdx
6f7c(9): xor $0x28,%rdx
6f85(3): mov %rbx,%rax
6f88(2): jnz 0x7a(%rip)
6f8a(7): add $0x98,%rsp
6f91(1): pop %rbx
6f92(1): pop %rbp
6f93(2): pop %r12
6f95(2): pop %r13
6f97(1): ret near (%rsp)
6f98(8): nop 0x0(%rax,%rax,1)
6fa0(5): lea 0x10(%rsp),%rsi
6fa5(3): mov %r13d,%edi
6fa8(5): call 0xffffada8(%rip)
6fad(2): test %eax,%eax
6faf(2): jnz 0xffffffc3(%rip)
6fb1(3): test %r12,%r12
6fb4(5): mov 0x10(%rsp),%rbx
6fb9(2): jz 0xffffffbb(%rip)
6fbb(5): mov $0x10,%edi
6fc0(5): call 0xffffac80(%rip)
6fc5(3): test %rax,%rax
6fc8(3): mov %rax,%r13
6fcb(2): jz 0xffffffa9(%rip)
6fcd(4): mov 0x78(%rbp),%rax
6fd1(4): mov %rbx,0x8(%r13)
6fd5(3): mov %r13,%rsi
6fd8(3): mov %r12,%rdi
6fdb(4): mov %rax,0x0(%r13)
6fdf(5): call 0x3191(%rip)
6fe4(3): test %rax,%rax
6fe7(2): jz 0x11(%rip)
6fe9(3): cmp %rax,%r13
6fec(2): jnz 0x1b(%rip)
6fee(5): mov 0x10(%rsp),%rbx
6ff3(5): jmp 0xffffff81(%rip)
6ff8(3): mov %r13,%rdi
6ffb(5): call 0xffffade5(%rip)
7000(2): jmp 0xffffffee(%rip)
7002(5): call 0xffffaace(%rip)
7007(5): call 0xffffa9a9(%rip)

"leaf_optimization" :
7010(4): sub $0x8,%rsp
7014(5): call 0xfffffecc(%rip)
7019(6): cmp $0x52654973,%rax
701f(2): jz 0x51(%rip)
7021(2): jle 0x2f(%rip)
7023(6): cmp $0x58465342,%rax
7029(2): jz 0x47(%rip)
702b(5): mov $0xff534d42,%edx
7030(3): cmp %rdx,%rax
7033(2): jz 0x32(%rip)
7035(6): cmp $0x5346414f,%rax
703b(2): jz 0x2a(%rip)
703d(5): mov $0x1,%eax
7042(4): add $0x8,%rsp
7046(1): ret near (%rsp)
7047(9): nop 0x0(%rax,%rax,1)
7050(6): cmp $0x6969,%rax
7056(2): jz 0xf(%rip)
7058(6): cmp $0x9fa0,%rax
705e(2): jz 0x7(%rip)
7060(3): test %rax,%rax
7063(2): jnz 0xffffffda(%rip)
7065(2): xor %eax,%eax
7067(4): add $0x8,%rsp
706b(1): ret near (%rsp)
706c(4): nop 0x0(%rax)
7070(5): mov $0x2,%eax
7075(4): add $0x8,%rsp
7079(1): ret near (%rsp)

"cwd_advance_fd" :
7080(1): push %rbp
7081(1): push %rbx
7082(2): mov %esi,%ebp
7084(3): mov %rdi,%rbx
7087(4): sub $0x8,%rsp
708b(3): mov 0x2c(%rdi),%esi
708e(2): cmp %ebp,%esi
7090(2): jnz 0x7(%rip)
7092(3): cmp $0x9c,%esi
7095(2): jnz 0x4c(%rip)
7097(2): test %dl,%dl
7099(2): jnz 0x17(%rip)
709b(4): test $0x4,0x48(%rbx)
709f(2): jnz 0x6(%rip)
70a1(2): test %esi,%esi
70a3(2): jns 0x2d(%rip)
70a5(3): mov %ebp,0x2c(%rbx)
70a8(4): add $0x8,%rsp
70ac(1): pop %rbx
70ad(1): pop %rbp
70ae(1): ret near (%rsp)
70af(1): nop 
70b0(4): lea 0x60(%rbx),%rdi
70b4(5): call 0x335c(%rip)
70b9(2): test %eax,%eax
70bb(2): js 0xffffffea(%rip)
70bd(2): mov %eax,%edi
70bf(5): call 0xffffaab1(%rip)
70c4(3): mov %ebp,0x2c(%rbx)
70c7(4): add $0x8,%rsp
70cb(1): pop %rbx
70cc(1): pop %rbp
70cd(1): ret near (%rsp)
70ce(2): nop 
70d0(2): mov %esi,%edi
70d2(5): call 0xffffaa9e(%rip)
70d7(3): mov %ebp,0x2c(%rbx)
70da(4): add $0x8,%rsp
70de(1): pop %rbx
70df(1): pop %rbp
70e0(1): ret near (%rsp)
70e1(5): call 0xffffa8cf(%rip)

"restore_initial_cwd" :
70f0(1): push %rbp
70f1(1): push %rbx
70f2(3): mov %rdi,%rbx
70f5(4): sub $0x8,%rsp
70f9(3): mov 0x48(%rdi),%edx
70fc(2): mov %edx,%ebp
70fe(3): and $0x4,%ebp
7101(2): jnz 0x47(%rip)
7103(3): and $0x2,%dh
7106(2): jnz 0x2a(%rip)
7108(3): mov 0x28(%rdi),%edi
710b(2): xor %ebp,%ebp
710d(5): call 0xffffab93(%rip)
7112(2): test %eax,%eax
7114(4): setnz %bpl
7118(4): lea 0x60(%rbx),%rdi
711c(5): call 0xfffffd84(%rip)
7121(4): add $0x8,%rsp
7125(2): mov %ebp,%eax
7127(1): pop %rbx
7128(1): pop %rbp
7129(1): ret near (%rsp)
712a(6): nop 0x0(%rax,%rax,1)
7130(5): mov $0x1,%edx
7135(5): mov $0xffffff9c,%esi
713a(5): call 0xffffff46(%rip)
713f(2): jmp 0xffffffd9(%rip)
7141(7): nop 0x0(%rax)
7148(2): xor %ebp,%ebp
714a(2): jmp 0xffffffce(%rip)

"fts_palloc.isra.2" :
7150(1): push %rbx
7151(3): mov (%rsi),%rcx
7154(3): mov %rdi,%rbx
7157(3): mov (%rdi),%rdi
715a(8): lea 0x100(%rcx,%rdx,1),%rax
7162(3): cmp %rax,%rcx
7165(2): jnbe 0x23(%rip)
7167(3): mov %rax,(%rsi)
716a(3): mov %rax,%rsi
716d(5): call 0xffffab43(%rip)
7172(3): test %rax,%rax
7175(2): jz 0x33(%rip)
7177(3): mov %rax,(%rbx)
717a(5): mov $0x1,%eax
717f(1): pop %rbx
7180(1): ret near (%rsp)
7181(7): nop 0x0(%rax)
7188(5): call 0xffffac58(%rip)
718d(7): mov $0x0,(%rbx)
7194(5): call 0xffffa82c(%rip)
7199(6): mov $0x24,(%rax)
719f(2): xor %eax,%eax
71a1(1): pop %rbx
71a2(1): ret near (%rsp)
71a3(5): nop 0x0(%rax,%rax,1)
71a8(3): mov (%rbx),%rdi
71ab(5): call 0xffffac35(%rip)
71b0(7): mov $0x0,(%rbx)
71b7(2): xor %eax,%eax
71b9(1): pop %rbx
71ba(1): ret near (%rsp)

"setup_dir.isra.4" :
71c0(6): and $0x102,%edi
71c6(1): push %rbx
71c7(3): mov %rsi,%rbx
71ca(2): jz 0x36(%rip)
71cc(7): mov 0x207ded(%rip),%r8
71d3(7): lea 0xfffff886(%rip),%rcx
71da(7): lea 0xfffff89f(%rip),%rdx
71e1(2): xor %esi,%esi
71e3(5): mov $0x1f,%edi
71e8(5): call 0x2788(%rip)
71ed(3): test %rax,%rax
71f0(3): mov %rax,(%rbx)
71f3(3): setnz %al
71f6(1): pop %rbx
71f7(1): ret near (%rsp)
71f8(8): nop 0x0(%rax,%rax,1)
7200(5): mov $0x20,%edi
7205(5): call 0xffffaa3b(%rip)
720a(3): mov %rax,%rdi
720d(3): mov %rax,(%rbx)
7210(2): xor %eax,%eax
7212(3): test %rdi,%rdi
7215(2): jz 0xffffffe1(%rip)
7217(5): call 0x1d79(%rip)
721c(5): mov $0x1,%eax
7221(1): pop %rbx
7222(1): ret near (%rsp)

"diropen.isra.6" :
7230(3): mov %rdx,%rax
7233(2): mov %esi,%edx
7235(3): shl/sal $0xd,%edx
7238(6): and $0x20000,%edx
723e(6): or $0x90900,%edx
7244(6): and $0x200,%esi
724a(2): jnz 0x16(%rip)
724c(3): mov %rax,%rdi
724f(2): mov %edx,%esi
7251(2): xor %eax,%eax
7253(5): jmp 0x1ddd(%rip)
7258(8): nop 0x0(%rax,%rax,1)
7260(3): mov %rax,%rsi
7263(2): xor %eax,%eax
7265(5): jmp 0x326b(%rip)

"fts_safe_changedir" :
7270(2): push %r15
7272(2): push %r14
7274(3): mov %rsi,%r14
7277(2): push %r13
7279(2): push %r12
727b(3): mov %rdi,%r13
727e(1): push %rbp
727f(1): push %rbx
7280(3): mov %edx,%r12d
7283(3): mov %rcx,%rbp
7286(7): sub $0xb8,%rsp
728d(3): mov 0x48(%rdi),%ebx
7290(9): mov $0x28,%rax
7299(8): mov %rax,0xa8(%rsp)
72a1(2): xor %eax,%eax
72a3(3): mov %ebx,%r9d
72a6(4): and $0x4,%r9d
72aa(3): test %rcx,%rcx
72ad(6): jz 0xb3(%rip)
72b3(7): lea 0x520f(%rip),%rdx
72ba(5): mov $0x3,%ecx
72bf(3): mov %rbp,%rsi
72c2(3): mov %rdx,%rdi
72c5(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
72c7(3): setnbe %al
72ca(2): sbb $0x0,%al
72cc(2): test %al,%al
72ce(6): jnz 0x92(%rip)
72d4(3): test %r9d,%r9d
72d7(6): jnz 0x8e(%rip)
72dd(3): test %r12d,%r12d
72e0(6): jns 0x1ea(%rip)
72e6(3): test $0x2,%bh
72e9(6): jnz 0x147(%rip)
72ef(5): mov $0x1,0xf(%rsp)
72f4(4): mov 0x2c(%r13),%edi
72f8(3): mov %rbp,%rdx
72fb(2): mov %ebx,%esi
72fd(5): call 0xffffff33(%rip)
7302(2): test %eax,%eax
7304(3): mov %eax,%r15d
7307(6): js 0x1b4(%rip)
730d(4): mov 0x48(%r13),%ebx
7311(3): test $0x2,%bl
7314(6): jz 0xa6(%rip)
731a(6): nop 0x0(%rax,%rax,1)
7320(5): lea 0x10(%rsp),%rdx
7325(3): mov %r15d,%esi
7328(5): mov $0x1,%edi
732d(5): call 0xffffa943(%rip)
7332(2): test %eax,%eax
7334(6): jz 0xcc(%rip)
733a(5): mov $0xffffffff,%ebx
733f(3): test %r12d,%r12d
7342(2): jns 0x33(%rip)
7344(5): call 0xffffa67c(%rip)
7349(3): mov (%rax),%r12d
734c(3): mov %rax,%rbp
734f(3): mov %r15d,%edi
7352(5): call 0xffffa81e(%rip)
7357(4): mov %r12d,0x0(%rbp)
735b(2): jmp 0x1a(%rip)
735d(3): nop (%rax)
7360(3): test %r9d,%r9d
7363(2): jz 0x3d(%rip)
7365(3): and $0x2,%bh
7368(2): jz 0xb(%rip)
736a(3): test %r12d,%r12d
736d(6): jns 0xb3(%rip)
7373(2): xor %ebx,%ebx
7375(8): mov 0xa8(%rsp),%rcx
737d(9): xor $0x28,%rcx
7386(2): mov %ebx,%eax
7388(6): jnz 0x13d(%rip)
738e(7): add $0xb8,%rsp
7395(1): pop %rbx
7396(1): pop %rbp
7397(2): pop %r12
7399(2): pop %r13
739b(2): pop %r14
739d(2): pop %r15
739f(1): ret near (%rsp)
73a0(3): test %r12d,%r12d
73a3(6): js 0x13d(%rip)
73a9(3): test $0x2,%bl
73ac(3): mov %r12d,%r15d
73af(5): mov $0x0,0xf(%rsp)
73b4(6): jnz 0xffffff6c(%rip)
73ba(3): test %rbp,%rbp
73bd(2): jz 0x23(%rip)
73bf(7): lea 0x5103(%rip),%rdx
73c6(5): mov $0x3,%ecx
73cb(3): mov %rbp,%rsi
73ce(3): mov %rdx,%rdi
73d1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
73d3(3): setnbe %al
73d6(2): sbb $0x0,%al
73d8(2): test %al,%al
73da(6): jz 0xffffff46(%rip)
73e0(3): and $0x2,%bh
73e3(6): jnz 0x95(%rip)
73e9(3): mov %r15d,%edi
73ec(5): call 0xffffa8b4(%rip)
73f1(2): mov %eax,%ebx
73f3(5): jmp 0xffffff4c(%rip)
73f8(8): nop 0x0(%rax,%rax,1)
7400(5): mov 0x10(%rsp),%rax
7405(4): cmp %rax,0x78(%r14)
7409(6): jz 0x97(%rip)
740f(5): call 0xffffa5b1(%rip)
7414(6): mov $0x2,(%rax)
741a(5): jmp 0xffffff20(%rip)
741f(1): nop 
7420(3): mov %r12d,%edi
7423(2): xor %ebx,%ebx
7425(5): call 0xffffa74b(%rip)
742a(5): jmp 0xffffff4b(%rip)
742f(1): nop 
7430(4): lea 0x60(%r13),%r15
7434(3): mov %r15,%rdi
7437(5): call 0x2fc9(%rip)
743c(2): test %al,%al
743e(4): mov %al,0xf(%rsp)
7442(6): jnz 0xfffffeb2(%rip)
7448(3): mov %r15,%rdi
744b(5): call 0x3005(%rip)
7450(2): test %eax,%eax
7452(3): mov %eax,%r15d
7455(4): mov 0x48(%r13),%ebx
7459(6): js 0xfffffe96(%rip)
745f(3): test $0x2,%bl
7462(3): mov %eax,%r12d
7465(5): mov $0x1,0xf(%rsp)
746a(6): jz 0xffffff76(%rip)
7470(5): jmp 0xfffffeb0(%rip)
7475(3): nop (%rax)
7478(6): movzx 0xf(%rsp),%r14d
747e(3): mov %r15d,%esi
7481(3): mov %r13,%rdi
7484(2): xor %ebx,%ebx
7486(4): xor $0x1,%r14d
748a(4): movzx %r14b,%edx
748e(5): call 0xfffffbf2(%rip)
7493(5): jmp 0xfffffee2(%rip)
7498(8): nop 0x0(%rax,%rax,1)
74a0(5): mov 0x18(%rsp),%rax
74a5(7): cmp %rax,0x80(%r14)
74ac(6): jnz 0xffffff63(%rip)
74b2(4): mov 0x48(%r13),%ebx
74b6(5): jmp 0xffffff2a(%rip)
74bb(5): mov $0xffffffff,%ebx
74c0(5): jmp 0xfffffeb5(%rip)
74c5(5): call 0xffffa60b(%rip)
74ca(3): test $0x2,%bl
74cd(3): mov %r12d,%r15d
74d0(5): mov $0x1,0xf(%rsp)
74d5(6): jz 0xfffffef1(%rip)
74db(5): jmp 0xfffffe45(%rip)
74e0(5): mov $0x0,0xf(%rsp)
74e5(5): jmp 0xfffffe0f(%rip)

"enter_dir.isra.10" :
74f0(6): and $0x102,%edi
74f6(2): push %r12
74f8(3): mov %rsi,%r12
74fb(1): push %rbp
74fc(1): push %rbx
74fd(3): mov %rdx,%rbx
7500(2): jz 0x70(%rip)
7502(5): mov $0x18,%edi
7507(5): call 0xffffa739(%rip)
750c(3): test %rax,%rax
750f(3): mov %rax,%rbp
7512(6): jz 0x86(%rip)
7518(4): mov 0x78(%rbx),%rax
751c(4): mov (%r12),%rdi
7520(3): mov %rbp,%rsi
7523(4): mov %rbx,0x10(%rbp)
7527(4): mov %rax,0x0(%rbp)
752b(7): mov 0x80(%rbx),%rax
7532(4): mov %rax,0x8(%rbp)
7536(5): call 0x2c3a(%rip)
753b(3): cmp %rax,%rbp
753e(3): mov %rax,%r12
7541(2): jz 0x20(%rip)
7543(3): mov %rbp,%rdi
7546(5): call 0xffffa89a(%rip)
754b(3): test %r12,%r12
754e(2): jz 0x4a(%rip)
7550(5): mov 0x10(%r12),%rax
7555(5): mov $0x2,%ecx
755a(4): mov %cx,0x70(%rbx)
755e(3): mov %rax,(%rbx)
7561(1): pop %rbx
7562(5): mov $0x1,%eax
7567(1): pop %rbp
7568(2): pop %r12
756a(1): ret near (%rsp)
756b(5): nop 0x0(%rax,%rax,1)
7570(4): mov (%r12),%rdi
7574(4): lea 0x78(%rdx),%rsi
7578(5): call 0x1a28(%rip)
757d(2): test %al,%al
757f(2): jz 0xffffffe2(%rip)
7581(5): mov $0x2,%edx
7586(3): mov %rbx,(%rbx)
7589(4): mov %dx,0x70(%rbx)
758d(1): pop %rbx
758e(1): pop %rbp
758f(2): pop %r12
7591(1): ret near (%rsp)
7592(6): nop 0x0(%rax,%rax,1)
7598(1): pop %rbx
7599(2): xor %eax,%eax
759b(1): pop %rbp
759c(2): pop %r12
759e(1): ret near (%rsp)

"leave_dir.isra.12" :
75a0(4): sub $0x28,%rsp
75a4(3): mov %rsi,%rcx
75a7(9): mov $0x28,%rax
75b0(5): mov %rax,0x18(%rsp)
75b5(2): xor %eax,%eax
75b7(6): and $0x102,%edi
75bd(2): jnz 0x43(%rip)
75bf(4): mov 0x8(%rdx),%rax
75c3(3): test %rax,%rax
75c6(2): jz 0x1f(%rip)
75c8(5): cmp $0x0,0x58(%rax)
75cd(2): js 0x18(%rip)
75cf(3): mov (%rsi),%rcx
75d2(5): cmp $0x0,0x10(%rcx)
75d7(2): jz 0x7c(%rip)
75d9(7): mov 0x80(%rdx),%rsi
75e0(3): cmp %rsi,(%rcx)
75e3(2): jz 0x4d(%rip)
75e5(5): mov 0x18(%rsp),%rax
75ea(9): xor $0x28,%rax
75f3(2): jnz 0x5b(%rip)
75f5(4): add $0x28,%rsp
75f9(1): ret near (%rsp)
75fa(6): nop 0x0(%rax,%rax,1)
7600(4): mov 0x78(%rdx),%rax
7604(3): mov (%rcx),%rdi
7607(3): mov %rsp,%rsi
760a(4): mov %rax,(%rsp)
760e(7): mov 0x80(%rdx),%rax
7615(5): mov %rax,0x8(%rsp)
761a(5): call 0x2bb6(%rip)
761f(3): test %rax,%rax
7622(2): jz 0x31(%rip)
7624(3): mov %rax,%rdi
7627(5): call 0xffffa7b9(%rip)
762c(2): jmp 0xffffffb9(%rip)
762e(2): nop 
7630(4): mov 0x78(%rdx),%rsi
7634(4): cmp %rsi,0x8(%rcx)
7638(2): jnz 0xffffffad(%rip)
763a(4): mov 0x78(%rax),%rdx
763e(7): mov 0x80(%rax),%rax
7645(4): mov %rdx,0x8(%rcx)
7649(3): mov %rax,(%rcx)
764c(2): jmp 0xffffff99(%rip)
764e(5): call 0xffffa482(%rip)
7653(5): call 0xffffa35d(%rip)

"fts_build" :
7660(2): push %r15
7662(2): push %r14
7664(3): mov %rdi,%r15
7667(2): push %r13
7669(2): push %r12
766b(1): push %rbp
766c(1): push %rbx
766d(4): sub $0x78,%rsp
7671(3): mov (%rdi),%rbp
7674(9): mov $0x28,%rax
767d(5): mov %rax,0x68(%rsp)
7682(2): xor %eax,%eax
7684(4): mov %esi,0x58(%rsp)
7688(4): mov 0x18(%rbp),%rax
768c(3): test %rax,%rax
768f(5): mov %rax,0x50(%rsp)
7694(6): jz 0x43c(%rip)
769a(3): mov %rax,%rdi
769d(5): call 0xffffa533(%rip)
76a2(2): test %eax,%eax
76a4(4): mov %eax,0x64(%rsp)
76a8(6): js 0x558(%rip)
76ae(5): cmp $0x0,0x40(%r15)
76b3(6): jz 0x7d5(%rip)
76b9(9): mov $0xffffffff,0x38(%rsp)
76c2(4): mov 0x48(%r15),%edi
76c6(5): mov $0x1,0x5f(%rsp)
76cb(4): mov 0x48(%rbp),%rcx
76cf(4): mov 0x38(%rbp),%rdx
76d3(9): mov $0x0,0x40(%rsp)
76dc(5): cmp $0x2f,0xffffffff(%rdx,%rcx,1)
76e1(4): lea 0xffffffff(%rcx),%rax
76e5(4): cmovne %rcx,%rax
76e9(3): and $0x4,%edi
76ec(5): mov %rax,0x48(%rsp)
76f1(2): jz 0x12(%rip)
76f3(4): add 0x20(%r15),%rax
76f7(4): lea 0x1(%rax),%rbx
76fb(3): mov $0x2f,(%rax)
76fe(5): mov %rbx,0x40(%rsp)
7703(5): mov 0x48(%rsp),%rax
7708(4): mov 0x30(%r15),%rbx
770c(5): mov $0x0,0x5e(%rsp)
7711(5): mov $0x0,0x5d(%rsp)
7716(9): mov $0x0,0x8(%rsp)
771f(9): mov $0x0,0x10(%rsp)
7728(4): add $0x1,%rax
772c(5): mov %rbp,0x20(%rsp)
7731(3): sub %rax,%rbx
7734(5): mov %rax,0x18(%rsp)
7739(4): mov 0x58(%rbp),%rax
773d(5): mov %rbx,0x28(%rsp)
7742(2): xor %ebx,%ebx
7744(4): add $0x1,%rax
7748(5): mov %rax,0x30(%rsp)
774d(5): jmp 0xe2(%rip)
7752(6): nop 0x0(%rax,%rax,1)
7758(3): mov %r14,%r9
775b(5): add 0x18(%rsp),%r9
7760(6): jb 0x860(%rip)
7766(5): mov 0x30(%rsp),%rax
776b(7): lea 0x108(%r13),%rsi
7772(4): mov %rax,0x58(%r13)
7776(3): mov (%r15),%rax
7779(4): mov %r9,0x48(%r13)
777d(4): mov %rax,0x8(%r13)
7781(4): mov 0x0(%rbp),%rax
7785(7): mov %rax,0x80(%r13)
778c(4): mov 0x48(%r15),%eax
7790(2): test $0x4,%al
7792(6): jnz 0x26e(%rip)
7798(4): mov %rsi,0x30(%r13)
779c(5): cmp $0x0,0x40(%r15)
77a1(2): jz 0xb(%rip)
77a3(3): test $0x4,%ah
77a6(6): jz 0x302(%rip)
77ac(4): movzx 0x12(%rbp),%edx
77b0(3): and $0x18,%eax
77b3(2): mov %edx,%esi
77b5(3): sub $0x1,%edx
77b8(3): cmp $0x18,%eax
77bb(6): jz 0x2b5(%rip)
77c1(5): mov $0xb,%ecx
77c6(3): cmp $0xb,%edx
77c9(5): mov %cx,0x70(%r13)
77ce(6): jnbe 0x26a(%rip)
77d4(7): lea 0x4d05(%rip),%rax
77db(3): mov 0x0(%rax,%rdx,4),%eax
77de(7): mov %eax,0x90(%r13)
77e5(5): mov $0x2,%eax
77ea(7): mov %rax,0xa8(%r13)
77f1(6): cmp $0x0,0x10(%rsp)
77f7(8): mov $0x0,0x10(%r13)
77ff(6): jz 0x229(%rip)
7805(5): mov 0x8(%rsp),%rax
780a(4): mov %r13,0x10(%rax)
780e(7): cmp $0x2710,%rbx
7815(6): jz 0xfb(%rip)
781b(4): add $0x1,%rbx
781f(5): cmp 0x38(%rsp),%rbx
7824(6): jnb 0x144(%rip)
782a(5): mov %r13,0x8(%rsp)
782f(5): mov 0x20(%rsp),%rax
7834(4): mov 0x18(%rax),%r13
7838(3): test %r13,%r13
783b(6): jz 0x4cd(%rip)
7841(5): call 0xffffa17f(%rip)
7846(3): mov %r13,%rdi
7849(6): mov $0x0,(%rax)
784f(3): mov %rax,%r12
7852(5): call 0xffffa3de(%rip)
7857(3): test %rax,%rax
785a(3): mov %rax,%rbp
785d(6): jz 0x583(%rip)
7863(5): test $0x20,0x48(%r15)
7868(2): jnz 0xc(%rip)
786a(4): cmp $0x2e,0x13(%rax)
786e(6): jz 0x1e2(%rip)
7874(4): lea 0x13(%rbp),%r13
7878(3): mov %r13,%rdi
787b(5): call 0xffffa225(%rip)
7880(3): mov %r13,%rsi
7883(3): mov %rax,%rdx
7886(3): mov %r15,%rdi
7889(3): mov %rax,%r14
788c(5): call 0xfffff534(%rip)
7891(3): test %rax,%rax
7894(3): mov %rax,%r13
7897(6): jz 0x419(%rip)
789d(5): cmp %r14,0x28(%rsp)
78a2(6): jnbe 0xfffffeb6(%rip)
78a8(4): mov 0x20(%r15),%rax
78ac(4): lea 0x30(%r15),%rsi
78b0(4): lea 0x20(%r15),%rdi
78b4(5): mov %rax,0x28(%rsp)
78b9(5): mov 0x48(%rsp),%rax
78be(5): lea 0x2(%rax,%r14,1),%rdx
78c3(5): call 0xfffff88d(%rip)
78c8(2): test %al,%al
78ca(6): jz 0x3e6(%rip)
78d0(4): mov 0x20(%r15),%rdx
78d4(5): cmp 0x28(%rsp),%rdx
78d9(6): jz 0x1e7(%rip)
78df(5): add 0x18(%rsp),%rdx
78e4(5): test $0x4,0x48(%r15)
78e9(6): cmove 0x40(%rsp),%rdx
78ef(5): mov %rdx,0x40(%rsp)
78f4(4): mov 0x30(%r15),%rcx
78f8(5): sub 0x18(%rsp),%rcx
78fd(4): mov %al,0x5d(%rsp)
7901(5): mov %rcx,0x28(%rsp)
7906(5): jmp 0xfffffe52(%rip)
790b(5): nop 0x0(%rax,%rax,1)
7910(5): cmp $0x0,0x40(%r15)
7915(6): jnz 0xffffff06(%rip)
791b(4): mov 0x64(%rsp),%esi
791f(5): mov 0x20(%rsp),%rdi
7924(5): call 0xfffff5bc(%rip)
7929(6): cmp $0x1021994,%rax
792f(6): jz 0x371(%rip)
7935(5): mov $0xff534d42,%ecx
793a(3): cmp %rcx,%rax
793d(6): jz 0x363(%rip)
7943(6): cmp $0x6969,%rax
7949(6): jz 0x357(%rip)
794f(4): add $0x1,%rbx
7953(5): cmp 0x38(%rsp),%rbx
7958(5): mov $0x1,0x5e(%rsp)
795d(6): jb 0xfffffecd(%rip)
7963(5): nop 0x0(%rax,%rax,1)
7968(5): cmp $0x0,0x5d(%rsp)
796d(5): mov 0x20(%rsp),%rbp
7972(6): jz 0x3a4(%rip)
7978(4): mov 0x8(%r15),%rax
797c(4): mov 0x20(%r15),%rcx
7980(3): test %rax,%rax
7983(2): jz 0x2d(%rip)
7985(3): nop (%rax)
7988(4): mov 0x30(%rax),%rdx
798c(7): lea 0x108(%rax),%rsi
7993(3): cmp %rsi,%rdx
7996(2): jz 0xd(%rip)
7998(4): sub 0x38(%rax),%rdx
799c(3): add %rcx,%rdx
799f(4): mov %rdx,0x30(%rax)
79a3(4): mov %rcx,0x38(%rax)
79a7(4): mov 0x10(%rax),%rax
79ab(3): test %rax,%rax
79ae(2): jnz 0xffffffda(%rip)
79b0(5): mov 0x10(%rsp),%rax
79b5(2): jmp 0xe(%rip)
79b7(9): nop 0x0(%rax,%rax,1)
79c0(3): mov %rdx,%rax
79c3(5): cmp $0x0,0x58(%rax)
79c8(6): js 0x34e(%rip)
79ce(4): mov 0x30(%rax),%rdx
79d2(7): lea 0x108(%rax),%rsi
79d9(3): cmp %rsi,%rdx
79dc(2): jz 0xd(%rip)
79de(4): sub 0x38(%rax),%rdx
79e2(3): add %rcx,%rdx
79e5(4): mov %rdx,0x30(%rax)
79e9(4): mov 0x10(%rax),%rdx
79ed(4): mov %rcx,0x38(%rax)
79f1(3): test %rdx,%rdx
79f4(2): jnz 0xffffffcc(%rip)
79f6(4): mov 0x8(%rax),%rdx
79fa(2): jmp 0xffffffc6(%rip)
79fc(4): nop 0x0(%rax)
7a00(4): mov 0x38(%r13),%rax
7a04(5): mov 0x40(%rsp),%rdi
7a09(4): mov %rax,0x30(%r13)
7a0d(4): mov 0x60(%r13),%rax
7a11(4): lea 0x1(%rax),%rdx
7a15(5): call 0xffffa2cb(%rip)
7a1a(4): mov 0x48(%r15),%eax
7a1e(5): jmp 0xfffffd7e(%rip)
7a23(5): nop 0x0(%rax,%rax,1)
7a28(5): mov %r13,0x10(%rsp)
7a2d(5): jmp 0xfffffde1(%rip)
7a32(6): nop 0x0(%rax,%rax,1)
7a38(b): mov $0x0,0x90(%r13)
7a43(5): mov $0x2,%eax
7a48(5): jmp 0xfffffda2(%rip)
7a4d(3): nop (%rax)
7a50(4): cmp $0x0,0x14(%rax)
7a54(2): jz 0xd(%rip)
7a56(5): cmp $0x2e,0x14(%rax)
7a5b(6): jnz 0xfffffe19(%rip)
7a61(5): mov 0x8(%rsp),%r13
7a66(5): jmp 0xfffffdc4(%rip)
7a6b(5): nop 0x0(%rax,%rax,1)
7a70(6): and $0xfb,%esi
7a76(6): jz 0xfffffd4b(%rip)
7a7c(5): mov $0xb,%eax
7a81(3): cmp $0xb,%edx
7a84(5): mov %ax,0x70(%r13)
7a89(6): jbe 0x58d(%rip)
7a8f(b): mov $0x0,0x90(%r13)
7a9a(5): mov $0x1,%eax
7a9f(5): jmp 0xfffffd4b(%rip)
7aa4(4): nop 0x0(%rax)
7aa8(2): xor %edx,%edx
7aaa(3): mov %r13,%rsi
7aad(3): mov %r15,%rdi
7ab0(5): call 0xfffff030(%rip)
7ab5(5): mov %ax,0x70(%r13)
7aba(5): jmp 0xfffffd37(%rip)
7abf(1): nop 
7ac0(5): movzx 0x5d(%rsp),%eax
7ac5(5): jmp 0xfffffe2f(%rip)
7aca(6): nop 0x0(%rax,%rax,1)
7ad0(3): mov 0x48(%rdi),%eax
7ad3(2): mov %eax,%edx
7ad5(3): and $0x10,%edx
7ad8(2): jz 0xf(%rip)
7ada(2): test $0x1,%al
7adc(5): mov $0x20000,%edx
7ae1(6): jnz 0x107(%rip)
7ae7(5): and $0x204,%eax
7aec(4): mov 0x30(%rbp),%rsi
7af0(5): mov $0xffffff9c,%edi
7af5(5): cmp $0x200,%eax
7afa(2): jnz 0x6(%rip)
7afc(4): mov 0x2c(%r15),%edi
7b00(5): lea 0x64(%rsp),%rcx
7b05(5): call 0x2a3b(%rip)
7b0a(3): test %rax,%rax
7b0d(4): mov %rax,0x18(%rbp)
7b11(6): jz 0x31f(%rip)
7b17(5): cmp $0xb,0x70(%rbp)
7b1c(6): jz 0x394(%rip)
7b22(4): mov 0x48(%r15),%edi
7b26(6): test $0x100,%edi
7b2c(6): jnz 0x124(%rip)
7b32(5): cmp $0x1,0x40(%r15)
7b37(3): sbb %rax,%rax
7b3a(5): and $0x186a1,%eax
7b3f(4): sub $0x1,%rax
7b43(5): cmp $0x2,0x58(%rsp)
7b48(5): mov %rax,0x38(%rsp)
7b4d(6): jz 0x353(%rip)
7b53(4): mov 0x48(%r15),%edx
7b57(4): mov 0x64(%rsp),%eax
7b5b(3): and $0x38,%edx
7b5e(3): cmp $0x18,%edx
7b61(6): jz 0x3a3(%rip)
7b67(5): cmp $0x3,0x58(%rsp)
7b6c(6): mov $0x1,%r12d
7b72(3): setz %bl
7b75(5): test $0x2,0x49(%r15)
7b7a(6): jnz 0x3e2(%rip)
7b80(2): test %eax,%eax
7b82(6): jns 0x366(%rip)
7b88(2): test %bl,%bl
7b8a(2): jz 0x11(%rip)
7b8c(3): test %r12b,%r12b
7b8f(2): jz 0xc(%rip)
7b91(5): call 0xffff9e2f(%rip)
7b96(2): mov (%rax),%eax
7b98(3): mov %eax,0x40(%rbp)
7b9b(5): or $0x1,0x72(%rbp)
7ba0(4): mov 0x18(%rbp),%rdi
7ba4(5): call 0xffff9fec(%rip)
7ba9(4): mov 0x48(%r15),%edi
7bad(8): mov $0x0,0x18(%rbp)
7bb5(6): test $0x200,%edi
7bbb(2): jz 0x15(%rip)
7bbd(4): mov 0x64(%rsp),%eax
7bc1(2): test %eax,%eax
7bc3(2): js 0xd(%rip)
7bc5(2): mov %eax,%edi
7bc7(5): call 0xffff9fa9(%rip)
7bcc(4): mov 0x48(%r15),%edi
7bd0(8): mov $0x0,0x18(%rbp)
7bd8(5): mov $0x0,0x5f(%rsp)
7bdd(5): jmp 0xfffffaee(%rip)
7be2(6): nop 0x0(%rax,%rax,1)
7be8(2): xor %edx,%edx
7bea(5): cmp $0x0,0x58(%rbp)
7bef(3): setnz %dl
7bf2(3): shl/sal $0x11,%edx
7bf5(5): jmp 0xfffffef2(%rip)
7bfa(6): nop 0x0(%rax,%rax,1)
7c00(4): mov 0x18(%rbp),%rdi
7c04(5): call 0xffff9f8c(%rip)
7c09(5): cmp $0x3,0x58(%rsp)
7c0e(8): mov $0x0,0x18(%rbp)
7c16(6): jz 0x225(%rip)
7c1c(9): mov $0x0,0x10(%rsp)
7c25(5): mov 0x68(%rsp),%rbx
7c2a(9): xor $0x28,%rbx
7c33(5): mov 0x10(%rsp),%rax
7c38(6): jnz 0x3d9(%rip)
7c3e(4): add $0x78,%rsp
7c42(1): pop %rbx
7c43(1): pop %rbp
7c44(2): pop %r12
7c46(2): pop %r13
7c48(2): pop %r14
7c4a(2): pop %r15
7c4c(1): ret near (%rsp)
7c4d(3): nop (%rax)
7c50(4): lea 0x58(%r15),%rbx
7c54(3): mov %rbp,%rdx
7c57(3): mov %rbx,%rsi
7c5a(5): call 0xfffff946(%rip)
7c5f(2): xor %edx,%edx
7c61(3): mov %rbp,%rsi
7c64(3): mov %r15,%rdi
7c67(5): call 0xffffee79(%rip)
7c6c(4): mov 0x48(%r15),%edi
7c70(3): mov %rbp,%rdx
7c73(3): mov %rbx,%rsi
7c76(5): call 0xfffff87a(%rip)
7c7b(2): test %al,%al
7c7d(6): jnz 0xfffffeb5(%rip)
7c83(5): call 0xffff9d3d(%rip)
7c88(9): mov $0x0,0x10(%rsp)
7c91(6): mov $0xc,(%rax)
7c97(2): jmp 0xffffff8e(%rip)
7c99(7): nop 0x0(%rax)
7ca0(5): mov $0x0,0x5e(%rsp)
7ca5(5): jmp 0xfffffb76(%rip)
7caa(6): nop 0x0(%rax,%rax,1)
7cb0(3): mov %r13,%rdi
7cb3(5): mov 0x20(%rsp),%rbp
7cb8(4): mov (%r12),%ebx
7cbc(5): call 0xffffa124(%rip)
7cc1(5): mov 0x10(%rsp),%rdi
7cc6(5): call 0xfffff18a(%rip)
7ccb(4): mov 0x18(%rbp),%rdi
7ccf(5): call 0xffff9ec1(%rip)
7cd4(6): mov $0x7,%r9d
7cda(8): mov $0x0,0x18(%rbp)
7ce2(9): mov $0x0,0x10(%rsp)
7ceb(5): mov %r9w,0x70(%rbp)
7cf0(8): or $0x2000,0x48(%r15)
7cf8(4): mov %ebx,(%r12)
7cfc(5): jmp 0xffffff29(%rip)
7d01(7): nop 0x0(%rax)
7d08(3): mov %rax,%rbp
7d0b(5): cmp $0x0,0x5d(%rsp)
7d10(6): jnz 0xfffffc68(%rip)
7d16(5): test $0x4,0x48(%r15)
7d1b(2): jz 0x20(%rip)
7d1d(5): mov 0x18(%rsp),%rax
7d22(4): cmp %rax,0x30(%r15)
7d26(2): jz 0x7(%rip)
7d28(3): test %rbx,%rbx
7d2b(2): jnz 0x8(%rip)
7d2d(6): sub $0x1,0x40(%rsp)
7d33(5): mov 0x40(%rsp),%rax
7d38(3): mov $0x0,(%rax)
7d3b(6): cmp $0x0,0x50(%rsp)
7d41(2): jnz 0x6f(%rip)
7d43(5): cmp $0x0,0x5f(%rsp)
7d48(2): jz 0x68(%rip)
7d4a(5): cmp $0x1,0x58(%rsp)
7d4f(2): jz 0x41(%rip)
7d51(3): test %rbx,%rbx
7d54(2): jz 0x3c(%rip)
7d56(5): cmp $0x0,0x5e(%rsp)
7d5b(6): jnz 0xfd(%rip)
7d61(5): cmp $0x0,0x40(%r15)
7d66(6): jz 0xfffffebf(%rip)
7d6c(4): cmp $0x1,%rbx
7d70(6): jz 0xfffffeb5(%rip)
7d76(5): mov 0x10(%rsp),%rsi
7d7b(3): mov %rbx,%rdx
7d7e(3): mov %r15,%rdi
7d81(5): call 0xffffef2f(%rip)
7d86(5): mov %rax,0x10(%rsp)
7d8b(5): jmp 0xfffffe9a(%rip)
7d90(5): cmp $0x0,0x58(%rbp)
7d95(6): jnz 0x131(%rip)
7d9b(3): mov %r15,%rdi
7d9e(5): call 0xfffff352(%rip)
7da3(2): test %eax,%eax
7da5(3): setnz %al
7da8(2): test %al,%al
7daa(6): jnz 0x189(%rip)
7db0(3): test %rbx,%rbx
7db3(2): jnz 0xffffffa3(%rip)
7db5(5): cmp $0x3,0x58(%rsp)
7dba(6): jz 0x1be(%rip)
7dc0(5): mov 0x10(%rsp),%rdi
7dc5(5): call 0xfffff08b(%rip)
7dca(9): mov $0x0,0x10(%rsp)
7dd3(5): jmp 0xfffffe52(%rip)
7dd8(8): nop 0x0(%rax,%rax,1)
7de0(4): mov (%r12),%eax
7de4(5): mov 0x20(%rsp),%rbp
7de9(2): test %eax,%eax
7deb(2): jz 0x23(%rip)
7ded(3): test %rbx,%rbx
7df0(3): mov %eax,0x40(%rbp)
7df3(6): jnz 0x136(%rip)
7df9(6): cmp $0x0,0x50(%rsp)
7dff(5): mov $0x4,%eax
7e04(6): jnz 0x125(%rip)
7e0a(4): mov %ax,0x70(%rbp)
7e0e(4): mov 0x18(%rbp),%rdi
7e12(3): test %rdi,%rdi
7e15(6): jz 0xfffffef6(%rip)
7e1b(5): call 0xffff9d75(%rip)
7e20(8): mov $0x0,0x18(%rbp)
7e28(5): jmp 0xfffffee3(%rip)
7e2d(3): nop (%rax)
7e30(5): cmp $0x3,0x58(%rsp)
7e35(6): jnz 0xfffffde7(%rip)
7e3b(6): mov $0x4,%r10d
7e41(5): mov %r10w,0x70(%rbp)
7e46(5): call 0xffff9b7a(%rip)
7e4b(2): mov (%rax),%eax
7e4d(3): mov %eax,0x40(%rbp)
7e50(5): jmp 0xfffffdcc(%rip)
7e55(3): nop (%rax)
7e58(7): lea 0xffffec51(%rip),%rax
7e5f(5): mov 0x10(%rsp),%rsi
7e64(3): mov %rbx,%rdx
7e67(3): mov %r15,%rdi
7e6a(4): mov %rax,0x40(%r15)
7e6e(5): call 0xffffee42(%rip)
7e73(8): mov $0x0,0x40(%r15)
7e7b(5): mov %rax,0x10(%rsp)
7e80(5): jmp 0xfffffda5(%rip)
7e85(3): nop (%rax)
7e88(9): mov $0x186a0,0x38(%rsp)
7e91(5): mov $0x1,0x5f(%rsp)
7e96(4): mov 0x48(%r15),%edi
7e9a(5): jmp 0xfffff831(%rip)
7e9f(1): nop 
7ea0(5): mov $0x0,0x5f(%rsp)
7ea5(4): mov 0x48(%r15),%edi
7ea9(5): jmp 0xfffff822(%rip)
7eae(2): nop 
7eb0(2): xor %edx,%edx
7eb2(3): mov %rbp,%rsi
7eb5(3): mov %r15,%rdi
7eb8(5): call 0xffffec28(%rip)
7ebd(4): mov %ax,0x70(%rbp)
7ec1(5): jmp 0xfffffc71(%rip)
7ec6(4): mov 0x8(%rbp),%rsi
7eca(7): lea 0x45f8(%rip),%rcx
7ed1(5): mov $0xffffffff,%edx
7ed6(3): mov %r15,%rdi
7ed9(5): call 0xfffff397(%rip)
7ede(2): test %eax,%eax
7ee0(3): setnz %al
7ee3(5): jmp 0xfffffec5(%rip)
7ee8(2): xor %ecx,%ecx
7eea(2): mov %eax,%edx
7eec(3): mov %rbp,%rsi
7eef(3): mov %r15,%rdi
7ef2(5): call 0xfffff37e(%rip)
7ef7(2): test %eax,%eax
7ef9(6): jnz 0xfffffc8f(%rip)
7eff(5): jmp 0xfffff7c3(%rip)
7f04(8): cmp $0x2,0x88(%rbp)
7f0c(6): jnz 0xfffffc5b(%rip)
7f12(2): mov %eax,%esi
7f14(3): mov %rbp,%rdi
7f17(5): call 0xfffff0f9(%rip)
7f1c(2): test %eax,%eax
7f1e(2): jnz 0x80(%rip)
7f20(4): mov 0x64(%rsp),%eax
7f24(5): jmp 0xfffffc43(%rip)
7f29(5): mov $0x7,%eax
7f2e(5): jmp 0xfffffedc(%rip)
7f33(5): mov $0x7,%edi
7f38(4): mov %di,0x70(%rbp)
7f3c(8): or $0x2000,0x48(%r15)
7f44(5): mov 0x10(%rsp),%rdi
7f49(5): call 0xffffef07(%rip)
7f4e(9): mov $0x0,0x10(%rsp)
7f57(5): jmp 0xfffffcce(%rip)
7f5c(2): mov %eax,%edi
7f5e(5): mov $0x3,%edx
7f63(5): mov $0x406,%esi
7f68(2): xor %eax,%eax
7f6a(5): call 0x2716(%rip)
7f6f(4): mov %eax,0x64(%rsp)
7f73(5): jmp 0xfffffc0d(%rip)
7f78(4): movzx 0x70(%rbp),%eax
7f7c(4): cmp $0x7,%ax
7f80(6): jz 0xfffffe40(%rip)
7f86(4): cmp $0x4,%ax
7f8a(6): jz 0xfffffe36(%rip)
7f90(5): mov $0x6,%esi
7f95(4): mov %si,0x70(%rbp)
7f99(5): jmp 0xfffffe27(%rip)
7f9e(5): cmp $0x3,0x58(%rsp)
7fa3(6): jnz 0xfffffefd(%rip)
7fa9(4): mov 0x64(%rsp),%eax
7fad(3): xor %r12d,%r12d
7fb0(5): mov $0x1,%ebx
7fb5(5): jmp 0xfffffbc0(%rip)
7fba(6): nop 0x0(%rax,%rax,1)
7fc0(3): mov %r13,%rdi
7fc3(5): mov 0x20(%rsp),%rbp
7fc8(5): call 0xffff9e18(%rip)
7fcd(5): mov 0x10(%rsp),%rdi
7fd2(5): call 0xffffee7e(%rip)
7fd7(4): mov 0x18(%rbp),%rdi
7fdb(5): call 0xffff9bb5(%rip)
7fe0(6): mov $0x7,%r8d
7fe6(8): mov $0x0,0x18(%rbp)
7fee(9): mov $0x0,0x10(%rsp)
7ff7(5): mov %r8w,0x70(%rbp)
7ffc(8): or $0x2000,0x48(%r15)
8004(8): mov $0x24,(%r12)
800c(5): jmp 0xfffffc19(%rip)
8011(5): call 0xffff9abf(%rip)
8016(7): lea 0x44c3(%rip),%rax
801d(3): mov 0x0(%rax,%rdx,4),%eax
8020(7): mov %eax,0x90(%r13)
8027(5): mov $0x1,%eax
802c(5): jmp 0xfffff7be(%rip)

"rpl_fts_open" :
8040(2): push %r15
8042(2): push %r14
8044(2): push %r13
8046(2): push %r12
8048(1): push %rbp
8049(1): push %rbx
804a(4): sub $0x28,%rsp
804e(6): test $0xfffff000,%esi
8054(6): jnz 0x384(%rip)
805a(2): mov %esi,%eax
805c(2): mov %esi,%ebp
805e(5): and $0x204,%eax
8063(5): cmp $0x204,%eax
8068(6): jz 0x370(%rip)
806e(4): test $0x12,%sil
8072(6): jz 0x366(%rip)
8078(3): mov %rdi,%r13
807b(5): mov $0x1,%esi
8080(5): mov $0x80,%edi
8085(3): mov %rdx,%r14
8088(5): call 0xffff9b38(%rip)
808d(3): test %rax,%rax
8090(3): mov %rax,%rbx
8093(6): jz 0x25b(%rip)
8099(4): test $0x2,%bpl
809d(4): mov %r14,0x40(%rax)
80a1(6): jnz 0x25f(%rip)
80a7(4): mov 0x0(%r13),%rdi
80ab(3): mov %ebp,0x48(%rax)
80ae(7): mov $0xffffff9c,0x2c(%rbx)
80b5(3): test %rdi,%rdi
80b8(6): jz 0x267(%rip)
80be(3): mov %r13,%r15
80c1(3): xor %r12d,%r12d
80c4(4): nop 0x0(%rax)
80c8(5): call 0xffff99d8(%rip)
80cd(3): cmp %rax,%r12
80d0(4): cmovnae %rax,%r12
80d4(4): add $0x8,%r15
80d8(3): mov (%r15),%rdi
80db(3): test %rdi,%rdi
80de(2): jnz 0xffffffea(%rip)
80e0(5): lea 0x1(%r12),%rdx
80e5(5): mov $0x1000,%eax
80ea(7): cmp $0x1000,%rdx
80f1(4): cmovnae %rax,%rdx
80f5(4): lea 0x30(%rbx),%rsi
80f9(4): lea 0x20(%rbx),%rdi
80fd(5): call 0xfffff053(%rip)
8102(2): test %al,%al
8104(4): mov %al,0x16(%rsp)
8108(6): jz 0x2a1(%rip)
810e(4): mov 0x0(%r13),%rsi
8112(3): test %rsi,%rsi
8115(6): jz 0x2ab(%rip)
811b(7): lea 0x3f27(%rip),%rsi
8122(2): xor %edx,%edx
8124(3): mov %rbx,%rdi
8127(5): call 0xffffec99(%rip)
812c(3): test %rax,%rax
812f(3): mov %rax,%r15
8132(6): jz 0x26e(%rip)
8138(7): mov $0xffffffff,%rax
813f(3): test %r14,%r14
8142(4): mov 0x0(%r13),%rsi
8146(4): mov %rax,0x58(%r15)
814a(4): mov %rax,0x68(%r15)
814e(2): jz 0xf(%rip)
8150(3): mov 0x48(%rbx),%eax
8153(3): shr $0xa,%eax
8156(3): and $0x1,%eax
8159(4): mov %al,0x16(%rsp)
815d(3): test %rsi,%rsi
8160(6): jz 0x26c(%rip)
8166(3): shr $0xb,%ebp
8169(9): mov $0x0,0x18(%rsp)
8172(3): xor %r12d,%r12d
8175(3): xor $0x1,%ebp
8178(2): mov %ebp,%eax
817a(2): xor %ebp,%ebp
817c(3): and $0x1,%eax
817f(4): mov %al,0x17(%rsp)
8183(2): jmp 0x79(%rip)
8185(3): nop (%rax)
8188(3): mov %rax,%rdx
818b(3): mov %rbx,%rdi
818e(5): call 0xffffec32(%rip)
8193(3): test %rax,%rax
8196(3): mov %rax,%rcx
8199(6): jz 0x1f7(%rip)
819f(8): mov $0x0,0x58(%rax)
81a7(4): mov %r15,0x8(%rax)
81ab(7): lea 0x108(%rax),%rax
81b2(3): test %r12,%r12
81b5(4): mov %rax,0x30(%rcx)
81b9(6): jz 0x177(%rip)
81bf(5): cmp $0x0,0x16(%rsp)
81c4(6): jz 0x16c(%rip)
81ca(5): mov $0xb,%esi
81cf(3): test %r14,%r14
81d2(b): mov $0x2,0xa8(%rcx)
81dd(4): mov %si,0x70(%rcx)
81e1(6): jz 0x18f(%rip)
81e7(4): mov %r12,0x10(%rcx)
81eb(3): mov %rcx,%r12
81ee(4): add $0x1,%rbp
81f2(5): mov 0x0(%r13,%rbp,8),%rsi
81f7(3): test %rsi,%rsi
81fa(2): jz 0x56(%rip)
81fc(3): mov %rsi,%rdi
81ff(5): mov %rsi,0x8(%rsp)
8204(5): call 0xffff989c(%rip)
8209(4): cmp $0x2,%rax
820d(5): mov 0x8(%rsp),%rsi
8212(6): jbe 0xffffff76(%rip)
8218(5): cmp $0x0,0x17(%rsp)
821d(6): jz 0xffffff6b(%rip)
8223(5): cmp $0x2f,0xffffffff(%rsi,%rax,1)
8228(6): jnz 0xffffff60(%rip)
822e(2): nop 
8230(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
8235(6): jnz 0xffffff53(%rip)
823b(4): sub $0x1,%rax
823f(4): cmp $0x1,%rax
8243(2): jnz 0xffffffed(%rip)
8245(5): jmp 0xffffff43(%rip)
824a(6): nop 0x0(%rax,%rax,1)
8250(3): test %r14,%r14
8253(2): jz 0x19(%rip)
8255(4): cmp $0x1,%rbp
8259(2): jbe 0x13(%rip)
825b(3): mov %r12,%rsi
825e(3): mov %rbp,%rdx
8261(3): mov %rbx,%rdi
8264(5): call 0xffffea4c(%rip)
8269(3): mov %rax,%r12
826c(7): lea 0x3dd6(%rip),%rsi
8273(2): xor %edx,%edx
8275(3): mov %rbx,%rdi
8278(5): call 0xffffeb48(%rip)
827d(3): test %rax,%rax
8280(3): mov %rax,(%rbx)
8283(6): jz 0x10d(%rip)
8289(3): mov 0x48(%rbx),%edi
828c(5): mov $0x9,%edx
8291(4): lea 0x58(%rbx),%rsi
8295(4): mov %r12,0x10(%rax)
8299(4): mov %dx,0x70(%rax)
829d(8): mov $0x1,0x58(%rax)
82a5(5): call 0xffffef1b(%rip)
82aa(2): test %al,%al
82ac(6): jz 0xe4(%rip)
82b2(3): mov 0x48(%rbx),%esi
82b5(6): test $0x204,%esi
82bb(2): jnz 0x25(%rip)
82bd(3): mov 0x2c(%rbx),%edi
82c0(7): lea 0x4203(%rip),%rdx
82c7(5): call 0xffffef69(%rip)
82cc(2): test %eax,%eax
82ce(3): mov %eax,0x28(%rbx)
82d1(2): jns 0xf(%rip)
82d3(4): or $0x4,0x48(%rbx)
82d7(9): nop 0x0(%rax,%rax,1)
82e0(4): lea 0x60(%rbx),%rdi
82e4(5): mov $0xffffffff,%esi
82e9(5): call 0x20f7(%rip)
82ee(4): add $0x28,%rsp
82f2(3): mov %rbx,%rax
82f5(1): pop %rbx
82f6(1): pop %rbp
82f7(2): pop %r12
82f9(2): pop %r13
82fb(2): pop %r14
82fd(2): pop %r15
82ff(1): ret near (%rsp)
8300(4): mov 0x0(%r13),%rdi
8304(2): mov %ebp,%eax
8306(7): mov $0xffffff9c,0x2c(%rbx)
830d(3): and $0xfd,%ah
8310(3): or $0x4,%eax
8313(3): test %rdi,%rdi
8316(3): mov %eax,0x48(%rbx)
8319(6): jnz 0xfffffda5(%rip)
831f(5): mov $0x1000,%edx
8324(5): jmp 0xfffffdd1(%rip)
8329(7): nop 0x0(%rax)
8330(2): xor %edx,%edx
8332(3): mov %rcx,%rsi
8335(3): mov %rbx,%rdi
8338(5): mov %rcx,0x8(%rsp)
833d(5): call 0xffffe7a3(%rip)
8342(5): mov 0x8(%rsp),%rcx
8347(3): test %r14,%r14
834a(4): mov %ax,0x70(%rcx)
834e(6): jnz 0xfffffe99(%rip)
8354(3): test %r12,%r12
8357(8): mov $0x0,0x10(%rcx)
835f(2): jnz 0x19(%rip)
8361(5): mov %rcx,0x18(%rsp)
8366(3): mov %rcx,%r12
8369(5): jmp 0xfffffe85(%rip)
836e(2): nop 
8370(8): mov $0x0,0x10(%rcx)
8378(5): mov 0x18(%rsp),%rax
837d(5): mov %rcx,0x18(%rsp)
8382(4): mov %rcx,0x10(%rax)
8386(5): jmp 0xfffffe68(%rip)
838b(5): nop 0x0(%rax,%rax,1)
8390(3): mov %r12,%rdi
8393(5): call 0xffffeabd(%rip)
8398(3): mov %r15,%rdi
839b(5): call 0xffff9a45(%rip)
83a0(4): mov 0x20(%rbx),%rdi
83a4(5): call 0xffff9a3c(%rip)
83a9(3): mov %rbx,%rdi
83ac(2): xor %ebx,%ebx
83ae(5): call 0xffff9a32(%rip)
83b3(5): jmp 0xffffff3b(%rip)
83b8(8): nop 0x0(%rax,%rax,1)
83c0(3): xor %r15d,%r15d
83c3(3): test %r14,%r14
83c6(6): jnz 0xfffffd8a(%rip)
83cc(3): xor %r12d,%r12d
83cf(5): jmp 0xfffffe9d(%rip)
83d4(4): nop 0x0(%rax)
83d8(5): call 0xffff95e8(%rip)
83dd(2): xor %ebx,%ebx
83df(6): mov $0x16,(%rax)
83e5(5): jmp 0xffffff09(%rip)

"rpl_fts_close" :
83f0(2): push %r12
83f2(1): push %rbp
83f3(3): mov %rdi,%rbp
83f6(1): push %rbx
83f7(3): mov (%rdi),%rdi
83fa(3): test %rdi,%rdi
83fd(2): jz 0x46(%rip)
83ff(5): cmp $0x0,0x58(%rdi)
8404(2): jns 0x1b(%rip)
8406(5): jmp 0x11a(%rip)
840b(5): nop 0x0(%rax,%rax,1)
8410(5): call 0xffff99d0(%rip)
8415(5): cmp $0x0,0x58(%rbx)
841a(3): mov %rbx,%rdi
841d(2): js 0x1e(%rip)
841f(4): mov 0x10(%rdi),%rbx
8423(3): test %rbx,%rbx
8426(2): jnz 0xffffffea(%rip)
8428(4): mov 0x8(%rdi),%rbx
842c(5): call 0xffff99b4(%rip)
8431(5): cmp $0x0,0x58(%rbx)
8436(3): mov %rbx,%rdi
8439(2): jns 0xffffffe6(%rip)
843b(3): mov %rbx,%rdi
843e(5): call 0xffff99a2(%rip)
8443(4): mov 0x8(%rbp),%rdi
8447(3): test %rdi,%rdi
844a(2): jz 0x7(%rip)
844c(5): call 0xffffea04(%rip)
8451(4): mov 0x10(%rbp),%rdi
8455(5): call 0xffff998b(%rip)
845a(4): mov 0x20(%rbp),%rdi
845e(5): call 0xffff9982(%rip)
8463(3): mov 0x48(%rbp),%eax
8466(3): test $0x2,%ah
8469(2): jz 0x67(%rip)
846b(3): mov 0x2c(%rbp),%edi
846e(2): test %edi,%edi
8470(6): jns 0x90(%rip)
8476(2): xor %ebx,%ebx
8478(4): lea 0x60(%rbp),%rdi
847c(5): call 0xffffea24(%rip)
8481(4): mov 0x50(%rbp),%rdi
8485(3): test %rdi,%rdi
8488(2): jz 0x7(%rip)
848a(5): call 0x1736(%rip)
848f(7): test $0x102,0x48(%rbp)
8496(4): mov 0x58(%rbp),%rdi
849a(2): jz 0x26(%rip)
849c(3): test %rdi,%rdi
849f(2): jz 0x7(%rip)
84a1(5): call 0x171f(%rip)
84a6(3): mov %rbp,%rdi
84a9(5): call 0xffff9937(%rip)
84ae(2): test %ebx,%ebx
84b0(6): jnz 0xb1(%rip)
84b6(2): mov %ebx,%eax
84b8(1): pop %rbx
84b9(1): pop %rbp
84ba(2): pop %r12
84bc(1): ret near (%rsp)
84bd(3): nop (%rax)
84c0(5): call 0xffff9920(%rip)
84c5(2): jmp 0xffffffe1(%rip)
84c7(9): nop 0x0(%rax,%rax,1)
84d0(2): test $0x4,%al
84d2(2): jnz 0xffffffa4(%rip)
84d4(3): mov 0x28(%rbp),%edi
84d7(5): call 0xffff97c9(%rip)
84dc(2): test %eax,%eax
84de(2): jnz 0x52(%rip)
84e0(3): mov 0x28(%rbp),%edi
84e3(5): call 0xffff968d(%rip)
84e8(2): test %eax,%eax
84ea(2): jz 0xffffff8c(%rip)
84ec(5): call 0xffff94d4(%rip)
84f1(3): mov %rax,%r12
84f4(2): jmp 0x64(%rip)
84f6(a): nop 0x0(%rax,%rax,1)
8500(5): call 0xffff9670(%rip)
8505(2): test %eax,%eax
8507(6): jz 0xffffff6f(%rip)
850d(5): call 0xffff94b3(%rip)
8512(2): mov (%rax),%ebx
8514(5): jmp 0xffffff64(%rip)
8519(7): nop 0x0(%rax)
8520(3): mov %rdi,%rbx
8523(3): mov %rbx,%rdi
8526(5): call 0xffff98ba(%rip)
852b(5): jmp 0xffffff18(%rip)
8530(5): call 0xffff9490(%rip)
8535(3): mov 0x28(%rbp),%edi
8538(3): mov %rax,%r12
853b(2): mov (%rax),%ebx
853d(5): call 0xffff9633(%rip)
8542(2): test %eax,%eax
8544(6): jz 0xffffff34(%rip)
854a(2): test %ebx,%ebx
854c(6): jnz 0xffffff2c(%rip)
8552(6): nop 0x0(%rax,%rax,1)
8558(4): mov (%r12),%ebx
855c(5): jmp 0xffffff1c(%rip)
8561(5): call 0xffff945f(%rip)
8566(2): mov %ebx,(%rax)
8568(5): mov $0xffffffff,%ebx
856d(5): jmp 0xffffff49(%rip)

"rpl_fts_read" :
8580(2): push %r14
8582(2): push %r13
8584(2): push %r12
8586(1): push %rbp
8587(1): push %rbx
8588(3): mov (%rdi),%rbp
858b(3): test %rbp,%rbp
858e(6): jz 0x110(%rip)
8594(3): mov 0x48(%rdi),%edx
8597(3): test $0x20,%dh
859a(6): jnz 0x104(%rip)
85a0(4): movzx 0x74(%rbp),%eax
85a4(5): mov $0x3,%ebx
85a9(3): mov %rdi,%r12
85ac(4): mov %bx,0x74(%rbp)
85b0(4): cmp $0x1,%ax
85b4(6): jz 0x24c(%rip)
85ba(4): cmp $0x2,%ax
85be(4): movzx 0x70(%rbp),%ecx
85c2(6): jz 0xee(%rip)
85c8(4): cmp $0x1,%cx
85cc(2): jnz 0x34(%rip)
85ce(5): jmp 0x222(%rip)
85d3(5): nop 0x0(%rax,%rax,1)
85d8(4): mov %rbx,(%r12)
85dc(3): mov %rbp,%rdi
85df(5): call 0xffff9801(%rip)
85e4(5): cmp $0x0,0x58(%rbx)
85e9(6): jz 0x237(%rip)
85ef(4): movzx 0x74(%rbx),%eax
85f3(3): mov %rbx,%rbp
85f6(4): cmp $0x4,%ax
85fa(6): jnz 0x32e(%rip)
8600(4): mov 0x10(%rbp),%rbx
8604(3): test %rbx,%rbx
8607(2): jnz 0xffffffd1(%rip)
8609(4): mov 0x8(%rbp),%rbx
860d(5): cmp $0x0,0x18(%rbx)
8612(6): jnz 0x56e(%rip)
8618(4): mov %rbx,(%r12)
861c(3): mov %rbp,%rdi
861f(5): call 0xffff97c1(%rip)
8624(5): cmp $0xffffffff,0x58(%rbx)
8629(6): jz 0x4b9(%rip)
862f(5): cmp $0xb,0x70(%rbx)
8634(6): jz 0x13b(%rip)
863a(5): mov 0x20(%r12),%rdx
863f(4): mov 0x48(%rbx),%rax
8643(4): mov $0x0,0x0(%rdx,%rax,1)
8647(5): cmp $0x0,0x58(%rbx)
864c(6): jz 0x3c4(%rip)
8652(4): movzx 0x72(%rbx),%eax
8656(2): test $0x2,%al
8658(6): jz 0x370(%rip)
865e(5): mov 0x48(%r12),%eax
8663(3): mov 0x44(%rbx),%edi
8666(2): test $0x4,%al
8668(6): jz 0x404(%rip)
866e(5): call 0xffff9502(%rip)
8673(5): mov 0x48(%r12),%edi
8678(5): cmp $0x2,0x70(%rbx)
867d(2): jz 0x16(%rip)
867f(3): mov 0x40(%rbx),%ecx
8682(2): test %ecx,%ecx
8684(6): jz 0x3a4(%rip)
868a(5): mov $0x7,%edx
868f(4): mov %dx,0x70(%rbx)
8693(6): and $0x2000,%edi
8699(3): mov %rbx,%rbp
869c(2): jz 0x7e(%rip)
869e(2): xor %ebp,%ebp
86a0(1): pop %rbx
86a1(3): mov %rbp,%rax
86a4(1): pop %rbp
86a5(2): pop %r12
86a7(2): pop %r13
86a9(2): pop %r14
86ab(1): ret near (%rsp)
86ac(4): nop 0x0(%rax)
86b0(3): lea 0xfffffff4(%rcx),%eax
86b3(4): cmp $0x1,%ax
86b7(2): jbe 0x79(%rip)
86b9(4): cmp $0x1,%cx
86bd(6): jnz 0xffffff43(%rip)
86c3(3): test $0x40,%dl
86c6(6): jz 0xb2(%rip)
86cc(5): mov 0x18(%r12),%rax
86d1(4): cmp %rax,0x78(%rbp)
86d5(6): jz 0xa3(%rip)
86db(4): test $0x2,0x72(%rbp)
86df(6): jnz 0x4e1(%rip)
86e5(5): mov 0x8(%r12),%rdi
86ea(3): test %rdi,%rdi
86ed(2): jz 0x10(%rip)
86ef(5): call 0xffffe761(%rip)
86f4(9): mov $0x0,0x8(%r12)
86fd(5): mov 0x48(%r12),%edi
8702(6): mov $0x6,%r10d
8708(5): lea 0x58(%r12),%rsi
870d(5): mov %r10w,0x70(%rbp)
8712(3): mov %rbp,%rdx
8715(5): call 0xffffee8b(%rip)
871a(1): pop %rbx
871b(3): mov %rbp,%rax
871e(1): pop %rbp
871f(2): pop %r12
8721(2): pop %r13
8723(2): pop %r14
8725(1): ret near (%rsp)
8726(a): nop 0x0(%rax,%rax,1)
8730(5): mov $0x1,%edx
8735(3): mov %rbp,%rsi
8738(5): call 0xffffe3a8(%rip)
873d(4): cmp $0x1,%ax
8741(4): mov %ax,0x70(%rbp)
8745(6): jz 0x347(%rip)
874b(4): cmp $0xb,%ax
874f(4): mov %rbp,(%r12)
8753(2): jnz 0xffffffc7(%rip)
8755(3): nop (%rax)
8758(7): mov 0xa8(%rbp),%rax
875f(4): cmp $0x2,%rax
8763(6): jz 0x3a5(%rip)
8769(4): cmp $0x1,%rax
876d(2): jz 0xffffffad(%rip)
876f(5): call 0xffff9241(%rip)
8774(4): nop 0x0(%rax)
8778(5): mov 0x8(%r12),%rdi
877d(3): test %rdi,%rdi
8780(6): jz 0x218(%rip)
8786(3): test $0x10,%dh
8789(6): jnz 0x1f9(%rip)
878f(4): mov 0x30(%rbp),%rcx
8793(5): mov $0xffffffff,%edx
8798(3): mov %rbp,%rsi
879b(3): mov %r12,%rdi
879e(5): call 0xffffead2(%rip)
87a3(2): test %eax,%eax
87a5(6): jz 0x2bd(%rip)
87ab(5): call 0xffff9215(%rip)
87b0(2): mov (%rax),%eax
87b2(5): or $0x1,0x72(%rbp)
87b7(3): mov %eax,0x40(%rbp)
87ba(5): mov 0x8(%r12),%rbp
87bf(3): test %rbp,%rbp
87c2(6): jz 0x1f4(%rip)
87c8(3): mov %rbp,%rax
87cb(5): nop 0x0(%rax,%rax,1)
87d0(4): mov 0x8(%rax),%rdx
87d4(4): mov 0x30(%rdx),%rdx
87d8(4): mov %rdx,0x30(%rax)
87dc(4): mov 0x10(%rax),%rax
87e0(3): test %rax,%rax
87e3(2): jnz 0xffffffed(%rip)
87e5(5): jmp 0x1d1(%rip)
87ea(6): nop 0x0(%rax,%rax,1)
87f0(4): cmp $0x4,%ax
87f4(6): jnz 0xfffffecf(%rip)
87fa(5): jmp 0xfffffee1(%rip)
87ff(1): nop 
8800(3): mov %rbp,%rsi
8803(2): xor %edx,%edx
8805(5): call 0xffffe2db(%rip)
880a(4): mov %ax,0x70(%rbp)
880e(3): mov %rbp,%rax
8811(1): pop %rbx
8812(1): pop %rbp
8813(2): pop %r12
8815(2): pop %r13
8817(2): pop %r14
8819(1): ret near (%rsp)
881a(6): nop 0x0(%rax,%rax,1)
8820(3): mov %r12,%rdi
8823(5): call 0xffffe8cd(%rip)
8828(2): test %eax,%eax
882a(6): jnz 0x407(%rip)
8830(9): test $0x102,0x48(%r12)
8839(5): mov 0x58(%r12),%rdi
883e(6): jz 0x13a(%rip)
8844(3): test %rdi,%rdi
8847(2): jz 0x7(%rip)
8849(5): call 0x1377(%rip)
884e(4): mov 0x60(%rbx),%rdx
8852(7): lea 0x108(%rbx),%rbp
8859(5): mov 0x20(%r12),%rdi
885e(3): mov %rbp,%rsi
8861(4): mov %rdx,0x48(%rbx)
8865(4): add $0x1,%rdx
8869(5): call 0xffff9477(%rip)
886e(5): mov $0x2f,%esi
8873(3): mov %rbp,%rdi
8876(5): call 0xffff92ba(%rip)
887b(3): test %rax,%rax
887e(2): jz 0x2d(%rip)
8880(3): cmp %rax,%rbp
8883(6): jz 0x1cd(%rip)
8889(4): lea 0x1(%rax),%r13
888d(3): mov %r13,%rdi
8890(5): call 0xffff9210(%rip)
8895(4): lea 0x1(%rax),%rdx
8899(3): mov %rax,%r14
889c(3): mov %r13,%rsi
889f(3): mov %rbp,%rdi
88a2(5): call 0xffff943e(%rip)
88a7(4): mov %r14,0x60(%rbx)
88ab(5): mov 0x20(%r12),%rax
88b0(5): mov 0x48(%r12),%edi
88b5(5): lea 0x58(%r12),%rsi
88ba(3): mov %rbx,%rbp
88bd(4): mov %rax,0x38(%rbx)
88c1(4): mov %rax,0x30(%rbx)
88c5(5): call 0xffffe8fb(%rip)
88ca(4): movzx 0x70(%rbx),%eax
88ce(4): cmp $0xb,%ax
88d2(4): mov %rbp,(%r12)
88d6(6): jz 0xfffffe82(%rip)
88dc(4): cmp $0x1,%ax
88e0(6): jnz 0xfffffe3a(%rip)
88e6(5): cmp $0x0,0x58(%rbp)
88eb(2): jnz 0xb(%rip)
88ed(4): mov 0x78(%rbp),%rax
88f1(5): mov %rax,0x18(%r12)
88f6(5): mov 0x48(%r12),%edi
88fb(5): lea 0x58(%r12),%rsi
8900(3): mov %rbp,%rdx
8903(5): call 0xffffebed(%rip)
8908(2): test %al,%al
890a(6): jnz 0xfffffe10(%rip)
8910(5): call 0xffff90b0(%rip)
8915(2): xor %ebp,%ebp
8917(6): mov $0xc,(%rax)
891d(5): jmp 0xfffffdfd(%rip)
8922(6): nop 0x0(%rax,%rax,1)
8928(4): cmp $0x2,%ax
892c(6): jz 0x2a1(%rip)
8932(4): mov 0x8(%rbp),%rax
8936(7): lea 0x108(%rbp),%rsi
893d(4): mov 0x48(%rax),%rdi
8941(4): mov 0x38(%rax),%rax
8945(5): cmp $0x2f,0xffffffff(%rax,%rdi,1)
894a(4): lea 0xffffffff(%rdi),%rdx
894e(4): cmove %rdx,%rdi
8952(5): add 0x20(%r12),%rdi
8957(3): mov $0x2f,(%rdi)
895a(4): mov 0x60(%rbp),%rax
895e(4): add $0x1,%rdi
8962(4): lea 0x1(%rax),%rdx
8966(5): call 0xffff937a(%rip)
896b(4): movzx 0x70(%rbp),%eax
896f(5): jmp 0xffffff5f(%rip)
8974(4): nop 0x0(%rax)
8978(5): call 0xffff9468(%rip)
897d(5): jmp 0xfffffed1(%rip)
8982(3): and $0xef,%dh
8985(5): mov %edx,0x48(%r12)
898a(5): call 0xffffe4c6(%rip)
898f(9): mov $0x0,0x8(%r12)
8998(5): mov $0x3,%esi
899d(3): mov %r12,%rdi
89a0(5): call 0xffffecc0(%rip)
89a5(3): test %rax,%rax
89a8(5): mov %rax,0x8(%r12)
89ad(6): jz 0xf7(%rip)
89b3(3): mov %rax,%rbp
89b6(9): mov $0x0,0x8(%r12)
89bf(5): jmp 0xffffff73(%rip)
89c4(4): nop 0x0(%rax)
89c8(2): test $0x1,%al
89ca(6): jnz 0xfffffca9(%rip)
89d0(4): mov 0x8(%rbx),%rsi
89d4(7): lea 0x3aee(%rip),%rcx
89db(5): mov $0xffffffff,%edx
89e0(3): mov %r12,%rdi
89e3(5): call 0xffffe88d(%rip)
89e8(2): test %eax,%eax
89ea(6): jz 0xfffffc89(%rip)
89f0(5): call 0xffff8fd0(%rip)
89f5(5): mov 0x48(%r12),%edi
89fa(2): mov (%rax),%eax
89fc(6): or $0x2000,%edi
8a02(3): mov %eax,0x40(%rbx)
8a05(5): mov %edi,0x48(%r12)
8a0a(5): jmp 0xfffffc6e(%rip)
8a0f(1): nop 
8a10(3): mov %r12,%rdi
8a13(5): call 0xffffe6dd(%rip)
8a18(2): test %eax,%eax
8a1a(2): jnz 0xffffffd6(%rip)
8a1c(5): jmp 0xfffffc57(%rip)
8a21(7): nop 0x0(%rax)
8a28(5): mov $0x6,%eax
8a2d(5): lea 0x58(%r12),%rsi
8a32(3): mov %rbx,%rdx
8a35(4): mov %ax,0x70(%rbx)
8a39(5): call 0xffffeb67(%rip)
8a3e(5): mov 0x48(%r12),%edi
8a43(5): jmp 0xfffffc50(%rip)
8a48(8): nop 0x0(%rax,%rax,1)
8a50(7): cmp $0x0,0x109(%rbx)
8a57(6): jnz 0xfffffe32(%rip)
8a5d(5): jmp 0xfffffe4e(%rip)
8a62(5): mov 0x8(%r12),%rbp
8a67(5): jmp 0xffffff4f(%rip)
8a6c(3): test $0x2,%ah
8a6f(6): jz 0x19e(%rip)
8a75(2): mov %edi,%esi
8a77(5): mov $0x1,%edx
8a7c(3): mov %r12,%rdi
8a7f(5): call 0xffffe601(%rip)
8a84(3): mov 0x44(%rbx),%edi
8a87(5): jmp 0xfffffbe7(%rip)
8a8c(5): mov 0x48(%r12),%esi
8a91(4): test $0x4,%sil
8a95(6): jz 0x207(%rip)
8a9b(4): mov %rbp,(%r12)
8a9f(5): jmp 0xfffffe47(%rip)
8aa4(5): mov 0x48(%r12),%edi
8aa9(6): test $0x2000,%edi
8aaf(6): jnz 0xfffffbef(%rip)
8ab5(4): mov 0x40(%rbp),%r9d
8ab9(3): test %r9d,%r9d
8abc(2): jz 0x14(%rip)
8abe(5): cmp $0x4,0x70(%rbp)
8ac3(2): jz 0xd(%rip)
8ac5(6): mov $0x7,%r8d
8acb(5): mov %r8w,0x70(%rbp)
8ad0(5): lea 0x58(%r12),%rsi
8ad5(3): mov %rbp,%rdx
8ad8(5): call 0xffffeac8(%rip)
8add(5): jmp 0xfffffc3d(%rip)
8ae2(3): mov %rbx,%rdi
8ae5(2): xor %ebp,%ebp
8ae7(5): call 0xffff92f9(%rip)
8aec(5): call 0xffff8ed4(%rip)
8af1(6): mov $0x0,(%rax)
8af7(8): mov $0x0,(%r12)
8aff(5): jmp 0xfffffc1b(%rip)
8b04(4): nop 0x0(%rax)
8b08(4): mov 0x8(%rbp),%rbx
8b0c(5): cmp $0x0,0x68(%rbx)
8b11(2): jnz 0x13(%rip)
8b13(5): mov 0x48(%r12),%eax
8b18(3): and $0x18,%eax
8b1b(3): cmp $0x18,%eax
8b1e(6): jz 0x15f(%rip)
8b24(2): xor %edx,%edx
8b26(3): mov %rbp,%rsi
8b29(3): mov %r12,%rdi
8b2c(5): call 0xffffdfb4(%rip)
8b31(6): mov 0x90(%rbp),%edx
8b37(4): mov %ax,0x70(%rbp)
8b3b(6): and $0xf000,%edx
8b41(6): cmp $0x4000,%edx
8b47(6): jnz 0xfffffd95(%rip)
8b4d(5): cmp $0x0,0x58(%rbp)
8b52(6): jz 0x11c(%rip)
8b58(4): mov 0x68(%rbx),%rcx
8b5c(4): lea 0xffffffff(%rcx),%rdx
8b60(4): cmp $0xfffffffd,%rdx
8b64(2): jnbe 0x6(%rip)
8b66(4): mov %rdx,0x68(%rbx)
8b6a(4): cmp $0x1,%ax
8b6e(6): jnz 0xfffffbac(%rip)
8b74(5): jmp 0xfffffd82(%rip)
8b79(7): nop 0x0(%rax)
8b80(4): mov 0x48(%rbx),%rax
8b84(5): mov 0x20(%r12),%rdx
8b89(5): mov $0x3,%esi
8b8e(4): mov %rbx,(%r12)
8b92(3): mov %r12,%rdi
8b95(4): mov $0x0,0x0(%rdx,%rax,1)
8b99(5): call 0xffffeac7(%rip)
8b9e(3): test %rax,%rax
8ba1(3): mov %rax,%rbx
8ba4(2): jz 0x54(%rip)
8ba6(3): mov %rbp,%rdi
8ba9(3): mov %rbx,%rbp
8bac(5): call 0xffff9234(%rip)
8bb1(5): jmp 0xfffffd81(%rip)
8bb6(a): nop 0x0(%rax,%rax,1)
8bc0(3): mov 0x44(%rbp),%edi
8bc3(5): call 0xffff8fad(%rip)
8bc8(5): jmp 0xfffffb1d(%rip)
8bcd(5): mov $0x1,%edx
8bd2(3): mov %rbx,%rsi
8bd5(3): mov %r12,%rdi
8bd8(5): call 0xffffdf08(%rip)
8bdd(4): cmp $0x1,%ax
8be1(4): mov %ax,0x70(%rbx)
8be5(2): jz 0x5c(%rip)
8be7(5): mov $0x3,%esi
8bec(3): mov %rbx,%rbp
8bef(4): mov %si,0x74(%rbx)
8bf3(5): jmp 0xfffffd3f(%rip)
8bf8(6): test $0x20,0x49(%r12)
8bfe(6): jnz 0xfffffaa0(%rip)
8c04(4): mov 0x8(%rbp),%rbx
8c08(5): jmp 0xfffffa10(%rip)
8c0d(5): call 0xffff9093(%rip)
8c12(2): test %eax,%eax
8c14(2): jz 0x15(%rip)
8c16(5): call 0xffff8daa(%rip)
8c1b(2): mov (%rax),%eax
8c1d(3): mov %eax,0x40(%rbx)
8c20(9): or $0x2000,0x48(%r12)
8c29(3): mov 0x44(%rbx),%edi
8c2c(5): jmp 0xfffffa42(%rip)
8c31(9): or $0x2000,0x48(%r12)
8c3a(2): xor %ebp,%ebp
8c3c(5): jmp 0xfffffade(%rip)
8c41(5): mov 0x48(%r12),%esi
8c46(4): test $0x4,%sil
8c4a(2): jnz 0xffffff9d(%rip)
8c4c(5): mov 0x2c(%r12),%edi
8c51(7): lea 0x3872(%rip),%rdx
8c58(5): call 0xffffe5d8(%rip)
8c5d(2): test %eax,%eax
8c5f(3): mov %eax,0x44(%rbx)
8c62(2): js 0x7e(%rip)
8c64(5): or $0x2,0x72(%rbx)
8c69(5): jmp 0xffffff7e(%rip)
8c6e(4): cmp $0x1,%ax
8c72(6): jnz 0xfffffaa8(%rip)
8c78(5): jmp 0xfffffc75(%rip)
8c7d(5): mov 0x2c(%r12),%esi
8c82(3): mov %rbx,%rdi
8c85(5): call 0xffffe38b(%rip)
8c8a(3): cmp $0x2,%eax
8c8d(6): jnz 0xfffffe97(%rip)
8c93(4): movzx 0x70(%rbp),%eax
8c97(5): jmp 0xfffffc45(%rip)
8c9c(5): mov 0x2c(%r12),%edi
8ca1(7): lea 0x3822(%rip),%rdx
8ca8(5): call 0xffffe588(%rip)
8cad(2): test %eax,%eax
8caf(3): mov %eax,0x44(%rbp)
8cb2(2): js 0x10(%rip)
8cb4(5): or $0x2,0x72(%rbp)
8cb9(4): movzx 0x70(%rbp),%eax
8cbd(5): jmp 0xfffffc11(%rip)
8cc2(5): call 0xffff8cfe(%rip)
8cc7(2): mov (%rax),%eax
8cc9(6): mov $0x7,%r11d
8ccf(5): mov %r11w,0x70(%rbp)
8cd4(3): mov %eax,0x40(%rbp)
8cd7(4): mov %rbp,(%r12)
8cdb(5): jmp 0xfffffa3f(%rip)
8ce0(5): call 0xffff8ce0(%rip)
8ce5(2): mov (%rax),%eax
8ce7(5): mov $0x7,%edi
8cec(4): mov %di,0x70(%rbx)
8cf0(3): mov %eax,0x40(%rbx)
8cf3(5): jmp 0xfffffef4(%rip)

"rpl_fts_set" :
8d00(3): cmp $0x4,%edx
8d03(2): jnbe 0xd(%rip)
8d05(4): mov %dx,0x74(%rsi)
8d09(2): xor %eax,%eax
8d0b(1): ret near (%rsp)
8d0c(4): nop 0x0(%rax)
8d10(4): sub $0x8,%rsp
8d14(5): call 0xffff8cac(%rip)
8d19(6): mov $0x16,(%rax)
8d1f(5): mov $0x1,%eax
8d24(4): add $0x8,%rsp
8d28(1): ret near (%rsp)

"rpl_fts_children" :
8d30(2): push %r14
8d32(2): push %r13
8d34(2): push %r12
8d36(1): push %rbp
8d37(3): mov %esi,%r12d
8d3a(1): push %rbx
8d3b(3): mov %rdi,%rbx
8d3e(5): call 0xffff8c82(%rip)
8d43(7): test $0xffffefff,%r12d
8d4a(3): mov %rax,%r13
8d4d(6): jnz 0xeb(%rip)
8d53(3): mov (%rbx),%rbp
8d56(6): mov $0x0,(%rax)
8d5c(4): test $0x20,0x49(%rbx)
8d60(2): jnz 0x80(%rip)
8d62(4): movzx 0x70(%rbp),%eax
8d66(4): cmp $0x9,%ax
8d6a(2): jz 0x66(%rip)
8d6c(4): cmp $0x1,%ax
8d70(2): jnz 0x70(%rip)
8d72(4): mov 0x8(%rbx),%rdi
8d76(3): test %rdi,%rdi
8d79(2): jz 0x7(%rip)
8d7b(5): call 0xffffe0d5(%rip)
8d80(7): cmp $0x1000,%r12d
8d87(6): mov $0x1,%r14d
8d8d(2): jnz 0xf(%rip)
8d8f(7): or $0x1000,0x48(%rbx)
8d96(6): mov $0x2,%r14d
8d9c(5): cmp $0x0,0x58(%rbp)
8da1(2): jnz 0x14(%rip)
8da3(4): mov 0x30(%rbp),%rax
8da7(3): cmp $0x2f,(%rax)
8daa(2): jz 0xb(%rip)
8dac(3): mov 0x48(%rbx),%esi
8daf(4): test $0x4,%sil
8db3(2): jz 0x3d(%rip)
8db5(3): mov %r14d,%esi
8db8(3): mov %rbx,%rdi
8dbb(5): call 0xffffe8a5(%rip)
8dc0(4): mov %rax,0x8(%rbx)
8dc4(1): pop %rbx
8dc5(1): pop %rbp
8dc6(2): pop %r12
8dc8(2): pop %r13
8dca(2): pop %r14
8dcc(1): ret near (%rsp)
8dcd(3): nop (%rax)
8dd0(1): pop %rbx
8dd1(4): mov 0x10(%rbp),%rax
8dd5(1): pop %rbp
8dd6(2): pop %r12
8dd8(2): pop %r13
8dda(2): pop %r14
8ddc(1): ret near (%rsp)
8ddd(3): nop (%rax)
8de0(1): pop %rbx
8de1(2): xor %eax,%eax
8de3(1): pop %rbp
8de4(2): pop %r12
8de6(2): pop %r13
8de8(2): pop %r14
8dea(1): ret near (%rsp)
8deb(5): nop 0x0(%rax,%rax,1)
8df0(3): mov 0x2c(%rbx),%edi
8df3(7): lea 0x36d0(%rip),%rdx
8dfa(5): call 0xffffe436(%rip)
8dff(2): test %eax,%eax
8e01(2): mov %eax,%ebp
8e03(2): js 0x56(%rip)
8e05(3): mov %r14d,%esi
8e08(3): mov %rbx,%rdi
8e0b(5): call 0xffffe855(%rip)
8e10(4): test $0x2,0x49(%rbx)
8e14(4): mov %rax,0x8(%rbx)
8e18(2): jnz 0x30(%rip)
8e1a(2): mov %ebp,%edi
8e1c(5): call 0xffff8e84(%rip)
8e21(2): test %eax,%eax
8e23(2): jnz 0x45(%rip)
8e25(2): mov %ebp,%edi
8e27(5): call 0xffff8d49(%rip)
8e2c(4): mov 0x8(%rbx),%rax
8e30(2): jmp 0xffffff94(%rip)
8e32(6): nop 0x0(%rax,%rax,1)
8e38(6): mov $0x16,(%rax)
8e3e(2): xor %eax,%eax
8e40(5): jmp 0xffffff84(%rip)
8e45(3): nop (%rax)
8e48(5): mov $0x1,%edx
8e4d(2): mov %ebp,%esi
8e4f(3): mov %rbx,%rdi
8e52(5): call 0xffffe22e(%rip)
8e57(2): jmp 0xffffffd5(%rip)
8e59(8): mov $0x0,0x8(%rbx)
8e61(2): xor %eax,%eax
8e63(5): jmp 0xffffff61(%rip)
8e68(4): mov 0x0(%r13),%ebx
8e6c(2): mov %ebp,%edi
8e6e(5): call 0xffff8d02(%rip)
8e73(2): xor %eax,%eax
8e75(4): mov %ebx,0x0(%r13)
8e79(5): jmp 0xffffff4b(%rip)

"rpl_mbrtowc" :
8e80(2): push %r13
8e82(2): push %r12
8e84(3): mov %rsi,%r13
8e87(1): push %rbp
8e88(1): push %rbx
8e89(3): mov %rdi,%rbx
8e8c(3): mov %rdx,%r12
8e8f(4): sub $0x18,%rsp
8e93(9): mov $0x28,%rax
8e9c(5): mov %rax,0x8(%rsp)
8ea1(2): xor %eax,%eax
8ea3(5): lea 0x4(%rsp),%rax
8ea8(3): test %rdi,%rdi
8eab(4): cmove %rax,%rbx
8eaf(3): mov %rbx,%rdi
8eb2(5): call 0xffff8c3e(%rip)
8eb7(4): cmp $0xfffffffd,%rax
8ebb(3): mov %rax,%rbp
8ebe(2): jbe 0x22(%rip)
8ec0(3): test %r12,%r12
8ec3(2): jz 0x1d(%rip)
8ec5(2): xor %edi,%edi
8ec7(5): call 0x1d9(%rip)
8ecc(2): test %al,%al
8ece(2): jnz 0x12(%rip)
8ed0(5): movzx 0x0(%r13),%eax
8ed5(5): mov $0x1,%ebp
8eda(2): mov %eax,(%rbx)
8edc(4): nop 0x0(%rax)
8ee0(5): mov 0x8(%rsp),%rdx
8ee5(9): xor $0x28,%rdx
8eee(3): mov %rbp,%rax
8ef1(2): jnz 0xd(%rip)
8ef3(4): add $0x18,%rsp
8ef7(1): pop %rbx
8ef8(1): pop %rbp
8ef9(2): pop %r12
8efb(2): pop %r13
8efd(1): ret near (%rsp)
8efe(5): call 0xffff8bd2(%rip)

"close_stream" :
8f10(2): push %r12
8f12(1): push %rbp
8f13(3): mov %rdi,%rbp
8f16(1): push %rbx
8f17(5): call 0xffff8ae9(%rip)
8f1c(3): mov 0x0(%rbp),%ebx
8f1f(3): mov %rbp,%rdi
8f22(3): mov %rax,%r12
8f25(5): call 0x16db(%rip)
8f2a(3): and $0x20,%ebx
8f2d(2): test %ebx,%ebx
8f2f(2): jnz 0x19(%rip)
8f31(2): test %eax,%eax
8f33(2): jz 0xc(%rip)
8f35(3): test %r12,%r12
8f38(5): mov $0xffffffff,%eax
8f3d(2): jz 0x3b(%rip)
8f3f(1): pop %rbx
8f40(1): pop %rbp
8f41(2): pop %r12
8f43(1): ret near (%rsp)
8f44(4): nop 0x0(%rax)
8f48(2): test %eax,%eax
8f4a(2): jnz 0x1e(%rip)
8f4c(5): call 0xffff8a74(%rip)
8f51(6): mov $0x0,(%rax)
8f57(5): mov $0xffffffff,%eax
8f5c(1): pop %rbx
8f5d(1): pop %rbp
8f5e(2): pop %r12
8f60(1): ret near (%rsp)
8f61(7): nop 0x0(%rax)
8f68(1): pop %rbx
8f69(5): mov $0xffffffff,%eax
8f6e(1): pop %rbp
8f6f(2): pop %r12
8f71(1): ret near (%rsp)
8f72(6): nop 0x0(%rax,%rax,1)
8f78(5): call 0xffff8a48(%rip)
8f7d(3): cmp $0x9,(%rax)
8f80(1): pop %rbx
8f81(1): pop %rbp
8f82(2): pop %r12
8f84(3): setnz %al
8f87(3): movzx %al,%eax
8f8a(2): neg %eax
8f8c(1): ret near (%rsp)

"cycle_check_init" :
8f90(8): mov $0x0,0x10(%rdi)
8f98(7): mov $0x95f616,0x18(%rdi)
8f9f(1): ret near (%rsp)

"cycle_check" :
8fa0(7): cmp $0x95f616,0x18(%rdi)
8fa7(2): jnz 0x60(%rip)
8fa9(4): mov 0x10(%rdi),%rdx
8fad(4): mov 0x8(%rsi),%rcx
8fb1(3): test %rdx,%rdx
8fb4(2): jz 0x1c(%rip)
8fb6(3): cmp %rcx,(%rdi)
8fb9(2): jz 0x2f(%rip)
8fbb(4): lea 0x1(%rdx),%r8
8fbf(2): xor %eax,%eax
8fc1(3): test %r8,%rdx
8fc4(4): mov %r8,0x10(%rdi)
8fc8(2): jz 0x38(%rip)
8fca(2): REP ret near (%rsp)
8fcc(4): nop 0x0(%rax)
8fd0(8): mov $0x1,0x10(%rdi)
8fd8(3): mov (%rsi),%rax
8fdb(3): mov %rcx,(%rdi)
8fde(4): mov %rax,0x8(%rdi)
8fe2(2): xor %eax,%eax
8fe4(1): ret near (%rsp)
8fe5(3): nop (%rax)
8fe8(4): mov 0x8(%rdi),%rax
8fec(3): cmp %rax,(%rsi)
8fef(2): jnz 0xffffffcc(%rip)
8ff1(5): mov $0x1,%eax
8ff6(1): ret near (%rsp)
8ff7(9): nop 0x0(%rax,%rax,1)
9000(3): test %r8,%r8
9003(2): jz 0xffffffee(%rip)
9005(2): jmp 0xffffffd3(%rip)
9007(7): lea 0x3542(%rip),%rcx
900e(7): lea 0x34fb(%rip),%rsi
9015(7): lea 0x3518(%rip),%rdi
901c(4): sub $0x8,%rsp
9020(5): mov $0x3c,%edx
9025(5): call 0xffff8b2b(%rip)

"open_safer" :
9030(4): sub $0x58,%rsp
9034(5): mov %rdx,0x30(%rsp)
9039(2): xor %edx,%edx
903b(9): mov $0x28,%rax
9044(5): mov %rax,0x18(%rsp)
9049(2): xor %eax,%eax
904b(4): test $0x40,%sil
904f(2): jnz 0x29(%rip)
9051(2): xor %eax,%eax
9053(5): call 0xffff8cad(%rip)
9058(2): mov %eax,%edi
905a(5): call 0x1566(%rip)
905f(5): mov 0x18(%rsp),%rcx
9064(9): xor $0x28,%rcx
906d(2): jnz 0x2c(%rip)
906f(4): add $0x58,%rsp
9073(1): ret near (%rsp)
9074(4): nop 0x0(%rax)
9078(5): lea 0x60(%rsp),%rax
907d(7): mov $0x10,(%rsp)
9084(4): mov 0x30(%rsp),%edx
9088(5): mov %rax,0x8(%rsp)
908d(5): lea 0x20(%rsp),%rax
9092(5): mov %rax,0x10(%rsp)
9097(2): jmp 0xffffffba(%rip)
9099(5): call 0xffff8a37(%rip)

"hard_locale" :
90a0(4): sub $0x8,%rsp
90a4(2): xor %esi,%esi
90a6(5): call 0xffff8c1a(%rip)
90ab(3): mov %rax,%rdx
90ae(5): mov $0x1,%eax
90b3(3): test %rdx,%rdx
90b6(2): jz 0x1f(%rip)
90b8(7): lea 0x349d(%rip),%rdi
90bf(5): mov $0x2,%ecx
90c4(3): mov %rdx,%rsi
90c7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
90c9(3): setnbe %cl
90cc(3): sbb $0x0,%cl
90cf(2): xor %eax,%eax
90d1(2): test %cl,%cl
90d3(2): jnz 0xd(%rip)
90d5(4): add $0x8,%rsp
90d9(1): ret near (%rsp)
90da(6): nop 0x0(%rax,%rax,1)
90e0(7): lea 0x3477(%rip),%rdi
90e7(5): mov $0x6,%ecx
90ec(3): mov %rdx,%rsi
90ef(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
90f1(3): setnbe %al
90f4(2): sbb $0x0,%al
90f6(2): test %al,%al
90f8(3): setnz %al
90fb(4): add $0x8,%rsp
90ff(1): ret near (%rsp)

"next_prime" :
9100(4): cmp $0xa,%rdi
9104(5): mov $0xa,%eax
9109(a): mov $0x-6148914691236517205,%r9
9113(4): cmovnae %rax,%rdi
9117(4): or $0x1,%rdi
911b(4): cmp $0xffffffff,%rdi
911f(2): jz 0x70(%rip)
9121(7): nop 0x0(%rax)
9128(3): mov %rdi,%rax
912b(3): mov %rdi,%rcx
912e(3): mul %rax,%r9,%rdx
9131(3): mov %rdx,%rax
9134(3): shr $0x1,%rax
9137(4): lea 0x0(%rax,%rax,2),%rax
913b(3): sub %rax,%rcx
913e(4): cmp $0x9,%rdi
9142(3): mov %rcx,%rax
9145(2): jbe 0x3b(%rip)
9147(3): test %rcx,%rcx
914a(2): jz 0x3b(%rip)
914c(6): mov $0x10,%r8d
9152(5): mov $0x9,%esi
9157(5): mov $0x3,%ecx
915c(2): jmp 0xd(%rip)
915e(2): nop 
9160(4): add $0x8,%r8
9164(3): test %rdx,%rdx
9167(2): jz 0x1e(%rip)
9169(4): add $0x2,%rcx
916d(2): xor %edx,%edx
916f(3): mov %rdi,%rax
9172(3): div %rcx,%rax
9175(3): add %r8,%rsi
9178(3): cmp %rdi,%rsi
917b(3): mov %rdx,%rax
917e(2): jb 0xffffffe2(%rip)
9180(3): test %rax,%rax
9183(2): jnz 0xc(%rip)
9185(4): add $0x2,%rdi
9189(4): cmp $0xffffffff,%rdi
918d(2): jnz 0xffffff9b(%rip)
918f(3): mov %rdi,%rax
9192(1): ret near (%rsp)

"raw_hasher" :
91a0(3): mov %rdi,%rax
91a3(2): xor %edx,%edx
91a5(4): ror $0x3,%rax
91a9(3): div %rsi,%rax
91ac(3): mov %rdx,%rax
91af(1): ret near (%rsp)

"raw_comparator" :
91b0(3): cmp %rsi,%rdi
91b3(3): setz %al
91b6(1): ret near (%rsp)

"safe_hasher" :
91c0(1): push %rbx
91c1(3): mov %rdi,%rbx
91c4(3): mov %rsi,%rdi
91c7(4): mov 0x10(%rbx),%rsi
91cb(3): call 0x30(%rbx)
91ce(4): cmp %rax,0x10(%rbx)
91d2(2): jbe 0xb(%rip)
91d4(4): shl/sal $0x4,%rax
91d8(3): add (%rbx),%rax
91db(1): pop %rbx
91dc(1): ret near (%rsp)
91dd(5): call 0xffff87d3(%rip)

"hash_find_entry" :
91f0(2): push %r14
91f2(2): push %r13
91f4(3): mov %rdx,%r14
91f7(2): push %r12
91f9(1): push %rbp
91fa(3): mov %rdi,%r12
91fd(1): push %rbx
91fe(3): mov %rsi,%rbp
9201(3): mov %ecx,%r13d
9204(5): call 0xffffffbc(%rip)
9209(3): mov %rax,(%r14)
920c(3): mov (%rax),%rsi
920f(3): test %rsi,%rsi
9212(6): jz 0xee(%rip)
9218(3): cmp %rbp,%rsi
921b(3): mov %rax,%rbx
921e(6): jz 0x95(%rip)
9224(3): mov %rbp,%rdi
9227(5): call 0x38(%r12)
922c(2): test %al,%al
922e(6): jnz 0x82(%rip)
9234(4): mov 0x8(%rbx),%rax
9238(3): test %rax,%rax
923b(6): jz 0xc5(%rip)
9241(3): mov (%rax),%rsi
9244(3): cmp %rsi,%rbp
9247(2): jnz 0x22(%rip)
9249(2): jmp 0x33(%rip)
924b(5): nop 0x0(%rax,%rax,1)
9250(4): mov 0x8(%rbx),%rbx
9254(4): mov 0x8(%rbx),%rax
9258(3): test %rax,%rax
925b(6): jz 0xa5(%rip)
9261(3): mov (%rax),%rsi
9264(3): cmp %rbp,%rsi
9267(2): jz 0x15(%rip)
9269(3): mov %rbp,%rdi
926c(5): call 0x38(%r12)
9271(2): test %al,%al
9273(2): jz 0xffffffdd(%rip)
9275(4): mov 0x8(%rbx),%rax
9279(3): mov (%rax),%rsi
927c(3): test %r13b,%r13b
927f(2): jz 0x1f(%rip)
9281(4): mov 0x8(%rax),%rdx
9285(4): mov %rdx,0x8(%rbx)
9289(7): mov $0x0,(%rax)
9290(5): mov 0x48(%r12),%rdx
9295(4): mov %rdx,0x8(%rax)
9299(5): mov %rax,0x48(%r12)
929e(1): pop %rbx
929f(3): mov %rsi,%rax
92a2(1): pop %rbp
92a3(2): pop %r12
92a5(2): pop %r13
92a7(2): pop %r14
92a9(1): ret near (%rsp)
92aa(6): nop 0x0(%rax,%rax,1)
92b0(3): mov (%rbx),%rsi
92b3(3): test %r13b,%r13b
92b6(2): jz 0xffffffe8(%rip)
92b8(4): mov 0x8(%rbx),%rax
92bc(3): test %rax,%rax
92bf(2): jz 0x31(%rip)
92c1(4): movdqu (%rax),%xmm0
92c5(3): movups %xmm0,(%rbx)
92c8(7): mov $0x0,(%rax)
92cf(5): mov 0x48(%r12),%rdx
92d4(4): mov %rdx,0x8(%rax)
92d8(5): mov %rax,0x48(%r12)
92dd(3): mov %rsi,%rax
92e0(1): pop %rbx
92e1(1): pop %rbp
92e2(2): pop %r12
92e4(2): pop %r13
92e6(2): pop %r14
92e8(1): ret near (%rsp)
92e9(7): nop 0x0(%rax)
92f0(7): mov $0x0,(%rbx)
92f7(2): jmp 0xffffffa7(%rip)
92f9(7): nop 0x0(%rax)
9300(2): xor %esi,%esi
9302(1): pop %rbx
9303(3): mov %rsi,%rax
9306(1): pop %rbp
9307(2): pop %r12
9309(2): pop %r13
930b(2): pop %r14
930d(1): ret near (%rsp)

"check_tuning.isra.0" :
9310(3): mov (%rdi),%rdx
9313(7): lea 0x32c6(%rip),%rcx
931a(5): mov $0x1,%eax
931f(3): cmp %rcx,%rdx
9322(2): jz 0x63(%rip)
9324(5): movss 0x8(%rdx),%xmm0
9329(7): ucomiss 0x32c4(%rip),%xmm0
9330(2): jbe 0x50(%rip)
9332(8): movss 0x32be(%rip),%xmm1
933a(3): ucomiss %xmm0,%xmm1
933d(2): jbe 0x43(%rip)
933f(5): movss 0xc(%rdx),%xmm1
9344(7): ucomiss 0x32b1(%rip),%xmm1
934b(2): jbe 0x35(%rip)
934d(4): movss (%rdx),%xmm1
9351(7): ucomiss 0x32a8(%rip),%xmm1
9358(2): jb 0x28(%rip)
935a(8): addss 0x3292(%rip),%xmm1
9362(5): movss 0x4(%rdx),%xmm2
9367(3): ucomiss %xmm1,%xmm2
936a(2): jbe 0x16(%rip)
936c(8): movss 0x3290(%rip),%xmm3
9374(3): ucomiss %xmm2,%xmm3
9377(2): jb 0x9(%rip)
9379(3): ucomiss %xmm1,%xmm0
937c(2): jnbe 0x9(%rip)
937e(2): nop 
9380(3): mov %rcx,(%rdi)
9383(2): xor %eax,%eax
9385(2): REP ret near (%rsp)

"transfer_entries" :
9390(2): push %r15
9392(2): push %r14
9394(2): push %r13
9396(2): push %r12
9398(1): push %rbp
9399(1): push %rbx
939a(4): sub $0x8,%rsp
939e(3): mov (%rsi),%r12
93a1(4): cmp 0x8(%rsi),%r12
93a5(6): jnb 0xe3(%rip)
93ab(3): mov %rdi,%rbp
93ae(3): mov %rsi,%r13
93b1(3): mov %edx,%r14d
93b4(4): nop 0x0(%rax)
93b8(4): mov (%r12),%r15
93bc(3): test %r15,%r15
93bf(6): jz 0xbb(%rip)
93c5(5): mov 0x8(%r12),%rbx
93ca(3): test %rbx,%rbx
93cd(2): jnz 0x1f(%rip)
93cf(2): jmp 0x5c(%rip)
93d1(7): nop 0x0(%rax)
93d8(4): mov 0x8(%rax),%rcx
93dc(3): test %rdx,%rdx
93df(4): mov %rcx,0x8(%rbx)
93e3(4): mov %rbx,0x8(%rax)
93e7(3): mov %rdx,%rbx
93ea(2): jz 0x3d(%rip)
93ec(3): mov (%rbx),%r15
93ef(3): mov %rbp,%rdi
93f2(3): mov %r15,%rsi
93f5(5): call 0xfffffdcb(%rip)
93fa(4): cmp $0x0,(%rax)
93fe(4): mov 0x8(%rbx),%rdx
9402(2): jnz 0xffffffd6(%rip)
9404(3): mov %r15,(%rax)
9407(5): add $0x1,0x18(%rbp)
940c(3): test %rdx,%rdx
940f(7): mov $0x0,(%rbx)
9416(4): mov 0x48(%rbp),%rax
941a(4): mov %rax,0x8(%rbx)
941e(4): mov %rbx,0x48(%rbp)
9422(3): mov %rdx,%rbx
9425(2): jnz 0xffffffc7(%rip)
9427(4): mov (%r12),%r15
942b(3): test %r14b,%r14b
942e(9): mov $0x0,0x8(%r12)
9437(2): jnz 0x43(%rip)
9439(3): mov %r15,%rsi
943c(3): mov %rbp,%rdi
943f(5): call 0xfffffd81(%rip)
9444(4): cmp $0x0,(%rax)
9448(3): mov %rax,%rbx
944b(2): jz 0x55(%rip)
944d(4): mov 0x48(%rbp),%rax
9451(3): test %rax,%rax
9454(2): jz 0x5c(%rip)
9456(4): mov 0x8(%rax),%rdx
945a(4): mov %rdx,0x48(%rbp)
945e(4): mov 0x8(%rbx),%rdx
9462(3): mov %r15,(%rax)
9465(4): mov %rdx,0x8(%rax)
9469(4): mov %rax,0x8(%rbx)
946d(8): mov $0x0,(%r12)
9475(5): sub $0x1,0x18(%r13)
947a(4): add $0x10,%r12
947e(4): cmp %r12,0x8(%r13)
9482(6): jnbe 0xffffff36(%rip)
9488(4): add $0x8,%rsp
948c(5): mov $0x1,%eax
9491(1): pop %rbx
9492(1): pop %rbp
9493(2): pop %r12
9495(2): pop %r13
9497(2): pop %r14
9499(2): pop %r15
949b(1): ret near (%rsp)
949c(4): nop 0x0(%rax)
94a0(3): mov %r15,(%rax)
94a3(5): add $0x1,0x18(%rbp)
94a8(2): jmp 0xffffffc5(%rip)
94aa(6): nop 0x0(%rax,%rax,1)
94b0(5): mov $0x10,%edi
94b5(5): call 0xffff878b(%rip)
94ba(3): test %rax,%rax
94bd(2): jnz 0xffffffa1(%rip)
94bf(4): add $0x8,%rsp
94c3(2): xor %eax,%eax
94c5(1): pop %rbx
94c6(1): pop %rbp
94c7(2): pop %r12
94c9(2): pop %r13
94cb(2): pop %r14
94cd(2): pop %r15
94cf(1): ret near (%rsp)

"hash_get_n_buckets" :
94d0(4): mov 0x10(%rdi),%rax
94d4(1): ret near (%rsp)

"hash_get_n_buckets_used" :
94e0(4): mov 0x18(%rdi),%rax
94e4(1): ret near (%rsp)

"hash_get_n_entries" :
94f0(4): mov 0x20(%rdi),%rax
94f4(1): ret near (%rsp)

"hash_get_max_bucket_length" :
9500(3): mov (%rdi),%rsi
9503(4): mov 0x8(%rdi),%rdi
9507(2): xor %eax,%eax
9509(3): cmp %rdi,%rsi
950c(2): jnb 0x3b(%rip)
950e(2): nop 
9510(4): cmp $0x0,(%rsi)
9514(2): jz 0x28(%rip)
9516(4): mov 0x8(%rsi),%rdx
951a(5): mov $0x1,%ecx
951f(3): test %rdx,%rdx
9522(2): jz 0x13(%rip)
9524(4): nop 0x0(%rax)
9528(4): mov 0x8(%rdx),%rdx
952c(4): add $0x1,%rcx
9530(3): test %rdx,%rdx
9533(2): jnz 0xfffffff5(%rip)
9535(3): cmp %rcx,%rax
9538(4): cmovnae %rcx,%rax
953c(4): add $0x10,%rsi
9540(3): cmp %rdi,%rsi
9543(2): jb 0xffffffcd(%rip)
9545(2): REP ret near (%rsp)
9547(2): REP ret near (%rsp)

"hash_table_ok" :
9550(3): mov (%rdi),%rcx
9553(4): mov 0x8(%rdi),%r8
9557(2): xor %edx,%edx
9559(2): xor %esi,%esi
955b(3): cmp %r8,%rcx
955e(2): jnb 0x38(%rip)
9560(4): cmp $0x0,(%rcx)
9564(2): jz 0x29(%rip)
9566(4): mov 0x8(%rcx),%rax
956a(4): add $0x1,%rsi
956e(4): add $0x1,%rdx
9572(3): test %rax,%rax
9575(2): jz 0x18(%rip)
9577(9): nop 0x0(%rax,%rax,1)
9580(4): mov 0x8(%rax),%rax
9584(4): add $0x1,%rdx
9588(3): test %rax,%rax
958b(2): jnz 0xfffffff5(%rip)
958d(4): add $0x10,%rcx
9591(3): cmp %r8,%rcx
9594(2): jb 0xffffffcc(%rip)
9596(2): xor %eax,%eax
9598(4): cmp %rsi,0x18(%rdi)
959c(2): jz 0x4(%rip)
959e(2): REP ret near (%rsp)
95a0(4): cmp %rdx,0x20(%rdi)
95a4(3): setz %al
95a7(1): ret near (%rsp)

"hash_print_statistics" :
95b0(2): push %r13
95b2(2): push %r12
95b4(3): mov %rsi,%r12
95b7(1): push %rbp
95b8(1): push %rbx
95b9(2): xor %ebx,%ebx
95bb(4): sub $0x8,%rsp
95bf(3): mov (%rdi),%rsi
95c2(4): mov 0x20(%rdi),%rcx
95c6(4): mov 0x10(%rdi),%rbp
95ca(4): mov 0x18(%rdi),%r13
95ce(4): mov 0x8(%rdi),%rdi
95d2(3): cmp %rdi,%rsi
95d5(2): jnb 0x40(%rip)
95d7(9): nop 0x0(%rax,%rax,1)
95e0(4): cmp $0x0,(%rsi)
95e4(2): jz 0x28(%rip)
95e6(4): mov 0x8(%rsi),%rax
95ea(5): mov $0x1,%edx
95ef(3): test %rax,%rax
95f2(2): jz 0x13(%rip)
95f4(4): nop 0x0(%rax)
95f8(4): mov 0x8(%rax),%rax
95fc(4): add $0x1,%rdx
9600(3): test %rax,%rax
9603(2): jnz 0xfffffff5(%rip)
9605(3): cmp %rdx,%rbx
9608(4): cmovnae %rdx,%rbx
960c(4): add $0x10,%rsi
9610(3): cmp %rdi,%rsi
9613(2): jb 0xffffffcd(%rip)
9615(7): lea 0x2f48(%rip),%rdx
961c(5): mov $0x1,%esi
9621(3): mov %r12,%rdi
9624(2): xor %eax,%eax
9626(5): call 0xffff877a(%rip)
962b(7): lea 0x2f4a(%rip),%rdx
9632(2): xor %eax,%eax
9634(3): mov %rbp,%rcx
9637(5): mov $0x1,%esi
963c(3): mov %r12,%rdi
963f(5): call 0xffff8761(%rip)
9644(3): test %r13,%r13
9647(2): js 0x69(%rip)
9649(4): pxor %xmm0,%xmm0
964d(3): test %rbp,%rbp
9650(5): cvtsi2sd %r13,%xmm0
9655(8): mulsd 0x2fbb(%rip),%xmm0
965d(2): js 0x7c(%rip)
965f(4): pxor %xmm1,%xmm1
9663(5): cvtsi2sd %rbp,%xmm1
9668(4): divsd %xmm1,%xmm0
966c(7): lea 0x2f3d(%rip),%rdx
9673(3): mov %r13,%rcx
9676(3): mov %r12,%rdi
9679(5): mov $0x1,%esi
967e(5): mov $0x1,%eax
9683(5): call 0xffff871d(%rip)
9688(4): add $0x8,%rsp
968c(3): mov %rbx,%rcx
968f(3): mov %r12,%rdi
9692(1): pop %rbx
9693(1): pop %rbp
9694(2): pop %r12
9696(2): pop %r13
9698(7): lea 0x2ef5(%rip),%rdx
969f(5): mov $0x1,%esi
96a4(2): xor %eax,%eax
96a6(5): jmp 0xffff86fa(%rip)
96ab(5): nop 0x0(%rax,%rax,1)
96b0(3): mov %r13,%rax
96b3(3): mov %r13,%rdx
96b6(4): pxor %xmm0,%xmm0
96ba(3): shr $0x1,%rax
96bd(3): and $0x1,%edx
96c0(3): or %rdx,%rax
96c3(3): test %rbp,%rbp
96c6(5): cvtsi2sd %rax,%xmm0
96cb(4): addsd %xmm0,%xmm0
96cf(8): mulsd 0x2f41(%rip),%xmm0
96d7(2): jns 0xffffff88(%rip)
96d9(3): mov %rbp,%rax
96dc(4): pxor %xmm1,%xmm1
96e0(3): shr $0x1,%rax
96e3(3): and $0x1,%ebp
96e6(3): or %rbp,%rax
96e9(5): cvtsi2sd %rax,%xmm1
96ee(4): addsd %xmm1,%xmm1
96f2(5): jmp 0xffffff76(%rip)

"hash_lookup" :
9700(2): push %r12
9702(1): push %rbp
9703(3): mov %rdi,%r12
9706(1): push %rbx
9707(3): mov %rsi,%rbp
970a(5): call 0xfffffab6(%rip)
970f(3): mov (%rax),%rsi
9712(3): test %rsi,%rsi
9715(2): jz 0x28(%rip)
9717(3): mov %rax,%rbx
971a(2): jmp 0x9(%rip)
971c(4): nop 0x0(%rax)
9720(3): mov (%rbx),%rsi
9723(3): cmp %rbp,%rsi
9726(2): jz 0x19(%rip)
9728(3): mov %rbp,%rdi
972b(5): call 0x38(%r12)
9730(2): test %al,%al
9732(2): jnz 0x1e(%rip)
9734(4): mov 0x8(%rbx),%rbx
9738(3): test %rbx,%rbx
973b(2): jnz 0xffffffe5(%rip)
973d(2): xor %esi,%esi
973f(1): pop %rbx
9740(3): mov %rsi,%rax
9743(1): pop %rbp
9744(2): pop %r12
9746(1): ret near (%rsp)
9747(9): nop 0x0(%rax,%rax,1)
9750(3): mov (%rbx),%rsi
9753(1): pop %rbx
9754(1): pop %rbp
9755(3): mov %rsi,%rax
9758(2): pop %r12
975a(1): ret near (%rsp)

"hash_get_first" :
9760(5): cmp $0x0,0x20(%rdi)
9765(2): jz 0x2e(%rip)
9767(3): mov (%rdi),%rdx
976a(4): mov 0x8(%rdi),%rcx
976e(3): cmp %rcx,%rdx
9771(2): jnb 0x27(%rip)
9773(3): mov (%rdx),%rax
9776(3): test %rax,%rax
9779(2): jnz 0x1d(%rip)
977b(5): nop 0x0(%rax,%rax,1)
9780(4): add $0x10,%rdx
9784(3): cmp %rcx,%rdx
9787(2): jnb 0x11(%rip)
9789(3): mov (%rdx),%rax
978c(3): test %rax,%rax
978f(2): jz 0xfffffff1(%rip)
9791(2): REP ret near (%rsp)
9793(2): xor %eax,%eax
9795(1): ret near (%rsp)
9796(2): REP ret near (%rsp)
9798(4): sub $0x8,%rsp
979c(5): call 0xffff8214(%rip)

"hash_get_next" :
97b0(1): push %rbp
97b1(1): push %rbx
97b2(3): mov %rdi,%rbp
97b5(3): mov %rsi,%rbx
97b8(4): sub $0x8,%rsp
97bc(5): call 0xfffffa04(%rip)
97c1(3): mov %rax,%rdx
97c4(3): mov %rax,%rcx
97c7(3): mov (%rdx),%rax
97ca(4): mov 0x8(%rdx),%rdx
97ce(3): cmp %rbx,%rax
97d1(2): jz 0x18(%rip)
97d3(5): nop 0x0(%rax,%rax,1)
97d8(3): test %rdx,%rdx
97db(2): jz 0x13(%rip)
97dd(3): mov (%rdx),%rax
97e0(4): mov 0x8(%rdx),%rdx
97e4(3): cmp %rbx,%rax
97e7(2): jnz 0xfffffff1(%rip)
97e9(3): test %rdx,%rdx
97ec(2): jnz 0x2c(%rip)
97ee(4): mov 0x8(%rbp),%rdx
97f2(2): jmp 0xe(%rip)
97f4(4): nop 0x0(%rax)
97f8(3): mov (%rcx),%rax
97fb(3): test %rax,%rax
97fe(2): jnz 0xd(%rip)
9800(4): add $0x10,%rcx
9804(3): cmp %rcx,%rdx
9807(2): jnbe 0xfffffff1(%rip)
9809(2): xor %eax,%eax
980b(4): add $0x8,%rsp
980f(1): pop %rbx
9810(1): pop %rbp
9811(1): ret near (%rsp)
9812(6): nop 0x0(%rax,%rax,1)
9818(3): mov (%rdx),%rax
981b(4): add $0x8,%rsp
981f(1): pop %rbx
9820(1): pop %rbp
9821(1): ret near (%rsp)

"hash_get_entries" :
9830(3): mov (%rdi),%r9
9833(4): cmp %r9,0x8(%rdi)
9837(2): jbe 0x5b(%rip)
9839(3): xor %r8d,%r8d
983c(3): mov (%r9),%rcx
983f(3): test %rcx,%rcx
9842(2): jz 0x3b(%rip)
9844(3): cmp %r8,%rdx
9847(2): jbe 0x40(%rip)
9849(4): mov %rcx,0x0(%rsi,%r8,8)
984d(4): mov 0x8(%r9),%rcx
9851(4): lea 0x1(%r8),%rax
9855(3): test %rcx,%rcx
9858(2): jz 0x22(%rip)
985a(6): nop 0x0(%rax,%rax,1)
9860(3): cmp %rax,%rdx
9863(2): jz 0x2d(%rip)
9865(3): mov (%rcx),%r8
9868(4): add $0x1,%rax
986c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
9871(4): mov 0x8(%rcx),%rcx
9875(3): test %rcx,%rcx
9878(2): jnz 0xffffffe8(%rip)
987a(3): mov %rax,%r8
987d(4): add $0x10,%r9
9881(4): cmp %r9,0x8(%rdi)
9885(2): jnbe 0xffffffb7(%rip)
9887(3): mov %r8,%rax
988a(1): ret near (%rsp)
988b(5): nop 0x0(%rax,%rax,1)
9890(2): REP ret near (%rsp)
9892(2): xor %eax,%eax
9894(1): ret near (%rsp)

"hash_do_for_each" :
98a0(2): push %r15
98a2(2): push %r14
98a4(2): push %r13
98a6(2): push %r12
98a8(1): push %rbp
98a9(1): push %rbx
98aa(4): sub $0x8,%rsp
98ae(3): mov (%rdi),%r14
98b1(4): cmp %r14,0x8(%rdi)
98b5(2): jbe 0x51(%rip)
98b7(3): mov %rdx,%r13
98ba(3): mov %rsi,%r12
98bd(3): mov %rdi,%r15
98c0(2): xor %ebp,%ebp
98c2(3): mov (%r14),%rdi
98c5(3): test %rdi,%rdi
98c8(2): jz 0x22(%rip)
98ca(3): mov %r14,%rbx
98cd(2): jmp 0x6(%rip)
98cf(1): nop 
98d0(3): mov (%rbx),%rdi
98d3(3): mov %r13,%rsi
98d6(3): call %r12
98d9(2): test %al,%al
98db(2): jz 0x19(%rip)
98dd(4): mov 0x8(%rbx),%rbx
98e1(4): add $0x1,%rbp
98e5(3): test %rbx,%rbx
98e8(2): jnz 0xffffffe8(%rip)
98ea(4): add $0x10,%r14
98ee(4): cmp %r14,0x8(%r15)
98f2(2): jnbe 0xffffffd0(%rip)
98f4(4): add $0x8,%rsp
98f8(3): mov %rbp,%rax
98fb(1): pop %rbx
98fc(1): pop %rbp
98fd(2): pop %r12
98ff(2): pop %r13
9901(2): pop %r14
9903(2): pop %r15
9905(1): ret near (%rsp)
9906(2): xor %ebp,%ebp
9908(2): jmp 0xffffffec(%rip)

"hash_string" :
9910(3): movzx (%rdi),%ecx
9913(2): xor %edx,%edx
9915(2): test %cl,%cl
9917(2): jz 0x26(%rip)
9919(7): nop 0x0(%rax)
9920(3): mov %rdx,%rax
9923(4): add $0x1,%rdi
9927(4): shl/sal $0x5,%rax
992b(3): sub %rdx,%rax
992e(2): xor %edx,%edx
9930(3): add %rcx,%rax
9933(3): movzx (%rdi),%ecx
9936(3): div %rsi,%rax
9939(2): test %cl,%cl
993b(2): jnz 0xffffffe5(%rip)
993d(3): mov %rdx,%rax
9940(1): ret near (%rsp)

"hash_reset_tuning" :
9950(a): mov $0x4575657221408423936,%rax
995a(4): mov $0x0,0x10(%rdi)
995e(3): mov %rax,(%rdi)
9961(a): mov $0x4590573145673223373,%rax
996b(4): mov %rax,0x8(%rdi)
996f(1): ret near (%rsp)

"hash_initialize" :
9970(2): push %r15
9972(2): push %r14
9974(7): lea 0xfffff825(%rip),%rax
997b(2): push %r13
997d(2): push %r12
997f(3): mov %rdx,%r12
9982(1): push %rbp
9983(1): push %rbx
9984(3): mov %rcx,%r13
9987(3): mov %rdi,%rbp
998a(5): mov $0x50,%edi
998f(3): mov %rsi,%r15
9992(4): sub $0x8,%rsp
9996(3): test %rdx,%rdx
9999(3): mov %r8,%r14
999c(4): cmove %rax,%r12
99a0(7): lea 0xfffff809(%rip),%rax
99a7(3): test %rcx,%rcx
99aa(4): cmove %rax,%r13
99ae(5): call 0xffff8292(%rip)
99b3(3): test %rax,%rax
99b6(3): mov %rax,%rbx
99b9(6): jz 0xb1(%rip)
99bf(3): test %r15,%r15
99c2(4): lea 0x28(%rax),%rdi
99c6(6): jz 0xba(%rip)
99cc(4): mov %r15,0x28(%rax)
99d0(5): call 0xfffff940(%rip)
99d5(2): test %al,%al
99d7(6): jz 0x89(%rip)
99dd(5): cmp $0x0,0x10(%r15)
99e2(6): jz 0xfe(%rip)
99e8(3): mov %rbp,%rdi
99eb(5): call 0xfffff715(%rip)
99f0(5): mov $0x8,%edx
99f5(3): mov %rax,%rbp
99f8(2): xor %ecx,%ecx
99fa(3): mov %rdx,%rax
99fd(3): mul %rax,%rbp,%rdx
9a00(6): jo 0x11a(%rip)
9a06(3): test %rax,%rax
9a09(2): js 0x57(%rip)
9a0b(3): test %rcx,%rcx
9a0e(2): jnz 0x52(%rip)
9a10(3): test %rbp,%rbp
9a13(4): mov %rbp,0x10(%rbx)
9a17(2): jz 0x49(%rip)
9a19(5): mov $0x10,%esi
9a1e(3): mov %rbp,%rdi
9a21(5): call 0xffff819f(%rip)
9a26(3): test %rax,%rax
9a29(3): mov %rax,(%rbx)
9a2c(2): jz 0x34(%rip)
9a2e(4): shl/sal $0x4,%rbp
9a32(8): mov $0x0,0x18(%rbx)
9a3a(8): mov $0x0,0x20(%rbx)
9a42(3): add %rax,%rbp
9a45(4): mov %r12,0x30(%rbx)
9a49(4): mov %r13,0x38(%rbx)
9a4d(4): mov %rbp,0x8(%rbx)
9a51(4): mov %r14,0x40(%rbx)
9a55(8): mov $0x0,0x48(%rbx)
9a5d(2): jmp 0xd(%rip)
9a5f(1): nop 
9a60(3): mov %rbx,%rdi
9a63(2): xor %ebx,%ebx
9a65(5): call 0xffff837b(%rip)
9a6a(4): add $0x8,%rsp
9a6e(3): mov %rbx,%rax
9a71(1): pop %rbx
9a72(1): pop %rbp
9a73(2): pop %r12
9a75(2): pop %r13
9a77(2): pop %r14
9a79(2): pop %r15
9a7b(1): ret near (%rsp)
9a7c(4): nop 0x0(%rax)
9a80(7): lea 0x2b59(%rip),%rax
9a87(4): mov %rax,0x28(%rbx)
9a8b(5): call 0xfffff885(%rip)
9a90(2): test %al,%al
9a92(8): movss 0x2b6e(%rip),%xmm1
9a9a(2): jz 0xffffffc6(%rip)
9a9c(3): test %rbp,%rbp
9a9f(2): js 0x4c(%rip)
9aa1(4): pxor %xmm0,%xmm0
9aa5(5): cvtsi2ss %rbp,%xmm0
9aaa(4): divss %xmm1,%xmm0
9aae(7): ucomiss 0x2b57(%rip),%xmm0
9ab5(2): jnb 0xffffffab(%rip)
9ab7(7): ucomiss 0x2b52(%rip),%xmm0
9abe(2): jb 0x52(%rip)
9ac0(8): subss 0x2b48(%rip),%xmm0
9ac8(a): mov $0x-9223372036854775808,%rax
9ad2(5): cvttss2si %xmm0,%rbp
9ad7(3): xor %rax,%rbp
9ada(5): jmp 0xffffff0e(%rip)
9adf(1): nop 
9ae0(3): test %rbp,%rbp
9ae3(6): movss 0x8(%r15),%xmm1
9ae9(2): jns 0xffffffb8(%rip)
9aeb(3): mov %rbp,%rax
9aee(4): pxor %xmm0,%xmm0
9af2(3): shr $0x1,%rax
9af5(3): and $0x1,%ebp
9af8(3): or %rbp,%rax
9afb(5): cvtsi2ss %rax,%xmm0
9b00(4): addss %xmm0,%xmm0
9b04(2): jmp 0xffffffa6(%rip)
9b06(a): nop 0x0(%rax,%rax,1)
9b10(5): cvttss2si %xmm0,%rbp
9b15(5): jmp 0xfffffed3(%rip)
9b1a(5): mov $0x1,%ecx
9b1f(5): jmp 0xfffffee7(%rip)

"hash_clear" :
9b30(2): push %r12
9b32(1): push %rbp
9b33(3): mov %rdi,%rbp
9b36(1): push %rbx
9b37(3): mov (%rdi),%r12
9b3a(4): cmp 0x8(%rdi),%r12
9b3e(2): jnb 0x6d(%rip)
9b40(5): cmp $0x0,(%r12)
9b45(2): jz 0x5c(%rip)
9b47(5): mov 0x8(%r12),%rbx
9b4c(4): mov 0x40(%rbp),%rax
9b50(3): test %rbx,%rbx
9b53(2): jz 0x32(%rip)
9b55(3): nop (%rax)
9b58(3): test %rax,%rax
9b5b(2): jz 0xb(%rip)
9b5d(3): mov (%rbx),%rdi
9b60(2): call %rax
9b62(4): mov 0x40(%rbp),%rax
9b66(4): mov 0x8(%rbx),%rdx
9b6a(4): mov 0x48(%rbp),%rcx
9b6e(7): mov $0x0,(%rbx)
9b75(3): test %rdx,%rdx
9b78(4): mov %rcx,0x8(%rbx)
9b7c(4): mov %rbx,0x48(%rbp)
9b80(3): mov %rdx,%rbx
9b83(2): jnz 0xffffffd5(%rip)
9b85(3): test %rax,%rax
9b88(2): jz 0x8(%rip)
9b8a(4): mov (%r12),%rdi
9b8e(2): call %rax
9b90(8): mov $0x0,(%r12)
9b98(9): mov $0x0,0x8(%r12)
9ba1(4): add $0x10,%r12
9ba5(4): cmp %r12,0x8(%rbp)
9ba9(2): jnbe 0xffffff97(%rip)
9bab(8): mov $0x0,0x18(%rbp)
9bb3(8): mov $0x0,0x20(%rbp)
9bbb(1): pop %rbx
9bbc(1): pop %rbp
9bbd(2): pop %r12
9bbf(1): ret near (%rsp)

"hash_free" :
9bc0(2): push %r12
9bc2(1): push %rbp
9bc3(3): mov %rdi,%r12
9bc6(1): push %rbx
9bc7(5): cmp $0x0,0x40(%rdi)
9bcc(3): mov (%rdi),%rbp
9bcf(4): mov 0x8(%rdi),%rax
9bd3(2): jz 0x50(%rip)
9bd5(5): cmp $0x0,0x20(%rdi)
9bda(2): jz 0x49(%rip)
9bdc(3): cmp %rax,%rbp
9bdf(2): jnb 0x7d(%rip)
9be1(7): nop 0x0(%rax)
9be8(4): mov 0x0(%rbp),%rdi
9bec(3): test %rdi,%rdi
9bef(2): jz 0x27(%rip)
9bf1(3): mov %rbp,%rbx
9bf4(2): jmp 0xf(%rip)
9bf6(a): nop 0x0(%rax,%rax,1)
9c00(3): mov (%rbx),%rdi
9c03(5): call 0x40(%r12)
9c08(4): mov 0x8(%rbx),%rbx
9c0c(3): test %rbx,%rbx
9c0f(2): jnz 0xfffffff1(%rip)
9c11(5): mov 0x8(%r12),%rax
9c16(4): add $0x10,%rbp
9c1a(3): cmp %rbp,%rax
9c1d(2): jnbe 0xffffffcb(%rip)
9c1f(4): mov (%r12),%rbp
9c23(3): cmp %rax,%rbp
9c26(2): jnb 0x36(%rip)
9c28(8): nop 0x0(%rax,%rax,1)
9c30(4): mov 0x8(%rbp),%rdi
9c34(3): test %rdi,%rdi
9c37(2): jz 0x1a(%rip)
9c39(7): nop 0x0(%rax)
9c40(4): mov 0x8(%rdi),%rbx
9c44(5): call 0xffff819c(%rip)
9c49(3): test %rbx,%rbx
9c4c(3): mov %rbx,%rdi
9c4f(2): jnz 0xfffffff1(%rip)
9c51(4): add $0x10,%rbp
9c55(5): cmp %rbp,0x8(%r12)
9c5a(2): jnbe 0xffffffd6(%rip)
9c5c(5): mov 0x48(%r12),%rdi
9c61(3): test %rdi,%rdi
9c64(2): jz 0x1d(%rip)
9c66(a): nop 0x0(%rax,%rax,1)
9c70(4): mov 0x8(%rdi),%rbx
9c74(5): call 0xffff816c(%rip)
9c79(3): test %rbx,%rbx
9c7c(3): mov %rbx,%rdi
9c7f(2): jnz 0xfffffff1(%rip)
9c81(4): mov (%r12),%rdi
9c85(5): call 0xffff815b(%rip)
9c8a(1): pop %rbx
9c8b(3): mov %r12,%rdi
9c8e(1): pop %rbp
9c8f(2): pop %r12
9c91(5): jmp 0xffff814f(%rip)

"hash_rehash" :
9ca0(2): push %r12
9ca2(1): push %rbp
9ca3(3): mov %rdi,%rbp
9ca6(1): push %rbx
9ca7(4): sub $0x60,%rsp
9cab(4): mov 0x28(%rdi),%r12
9caf(9): mov $0x28,%rax
9cb8(5): mov %rax,0x58(%rsp)
9cbd(2): xor %eax,%eax
9cbf(6): cmp $0x0,0x10(%r12)
9cc5(2): jnz 0x53(%rip)
9cc7(3): test %rsi,%rsi
9cca(6): js 0x17e(%rip)
9cd0(4): pxor %xmm0,%xmm0
9cd4(5): cvtsi2ss %rsi,%xmm0
9cd9(7): divss 0x8(%r12),%xmm0
9ce0(7): ucomiss 0x2925(%rip),%xmm0
9ce7(6): jnb 0x139(%rip)
9ced(7): ucomiss 0x291c(%rip),%xmm0
9cf4(6): jb 0x17c(%rip)
9cfa(8): subss 0x290e(%rip),%xmm0
9d02(a): mov $0x-9223372036854775808,%rax
9d0c(5): cvttss2si %xmm0,%rsi
9d11(3): xor %rax,%rsi
9d14(4): nop 0x0(%rax)
9d18(3): mov %rsi,%rdi
9d1b(5): call 0xfffff3e5(%rip)
9d20(5): mov $0x8,%edx
9d25(3): mov %rax,%rbx
9d28(2): xor %ecx,%ecx
9d2a(3): mov %rdx,%rax
9d2d(3): mul %rax,%rbx,%rdx
9d30(6): jo 0x19f(%rip)
9d36(3): test %rax,%rax
9d39(5): mov $0x1,%eax
9d3e(4): cmovs %rax,%rcx
9d42(3): test %rbx,%rbx
9d45(6): jz 0xdb(%rip)
9d4b(3): and $0x1,%ecx
9d4e(6): jnz 0xd2(%rip)
9d54(4): cmp %rbx,0x10(%rbp)
9d58(6): jz 0x128(%rip)
9d5e(5): mov $0x10,%esi
9d63(3): mov %rbx,%rdi
9d66(5): call 0xffff7e5a(%rip)
9d6b(3): test %rax,%rax
9d6e(4): mov %rax,(%rsp)
9d72(6): jz 0xae(%rip)
9d78(5): mov %rbx,0x10(%rsp)
9d7d(4): shl/sal $0x4,%rbx
9d81(5): mov %r12,0x28(%rsp)
9d86(3): add %rax,%rbx
9d89(4): mov 0x30(%rbp),%rax
9d8d(3): mov %rsp,%r12
9d90(2): xor %edx,%edx
9d92(3): mov %rbp,%rsi
9d95(3): mov %r12,%rdi
9d98(5): mov %rbx,0x8(%rsp)
9d9d(9): mov $0x0,0x18(%rsp)
9da6(5): mov %rax,0x30(%rsp)
9dab(4): mov 0x38(%rbp),%rax
9daf(9): mov $0x0,0x20(%rsp)
9db8(5): mov %rax,0x38(%rsp)
9dbd(4): mov 0x40(%rbp),%rax
9dc1(5): mov %rax,0x40(%rsp)
9dc6(4): mov 0x48(%rbp),%rax
9dca(5): mov %rax,0x48(%rsp)
9dcf(5): call 0xfffff5c1(%rip)
9dd4(2): test %al,%al
9dd6(2): mov %eax,%ebx
9dd8(6): jnz 0xb8(%rip)
9dde(5): mov 0x48(%rsp),%rax
9de3(5): mov $0x1,%edx
9de8(3): mov %r12,%rsi
9deb(3): mov %rbp,%rdi
9dee(4): mov %rax,0x48(%rbp)
9df2(5): call 0xfffff59e(%rip)
9df7(2): test %al,%al
9df9(6): jz 0xe0(%rip)
9dff(2): xor %edx,%edx
9e01(3): mov %r12,%rsi
9e04(3): mov %rbp,%rdi
9e07(5): call 0xfffff589(%rip)
9e0c(2): test %al,%al
9e0e(6): jz 0xcb(%rip)
9e14(4): mov (%rsp),%rdi
9e18(5): call 0xffff7fc8(%rip)
9e1d(2): jmp 0x5(%rip)
9e1f(1): nop 
9e20(2): xor %ebx,%ebx
9e22(5): mov 0x58(%rsp),%rcx
9e27(9): xor $0x28,%rcx
9e30(2): mov %ebx,%eax
9e32(6): jnz 0x98(%rip)
9e38(4): add $0x60,%rsp
9e3c(1): pop %rbx
9e3d(1): pop %rbp
9e3e(2): pop %r12
9e40(1): ret near (%rsp)
9e41(7): nop 0x0(%rax)
9e48(3): mov %rsi,%rax
9e4b(4): pxor %xmm0,%xmm0
9e4f(3): shr $0x1,%rax
9e52(3): and $0x1,%esi
9e55(3): or %rsi,%rax
9e58(5): cvtsi2ss %rax,%xmm0
9e5d(4): addss %xmm0,%xmm0
9e61(5): jmp 0xfffffe78(%rip)
9e66(a): nop 0x0(%rax,%rax,1)
9e70(5): cvttss2si %xmm0,%rsi
9e75(5): jmp 0xfffffea3(%rip)
9e7a(6): nop 0x0(%rax,%rax,1)
9e80(5): mov $0x1,%ebx
9e85(2): jmp 0xffffff9d(%rip)
9e87(9): nop 0x0(%rax,%rax,1)
9e90(4): mov 0x0(%rbp),%rdi
9e94(5): call 0xffff7f4c(%rip)
9e99(4): mov (%rsp),%rax
9e9d(4): mov %rax,0x0(%rbp)
9ea1(5): mov 0x8(%rsp),%rax
9ea6(4): mov %rax,0x8(%rbp)
9eaa(5): mov 0x10(%rsp),%rax
9eaf(4): mov %rax,0x10(%rbp)
9eb3(5): mov 0x18(%rsp),%rax
9eb8(4): mov %rax,0x18(%rbp)
9ebc(5): mov 0x48(%rsp),%rax
9ec1(4): mov %rax,0x48(%rbp)
9ec5(5): jmp 0xffffff5d(%rip)
9eca(5): call 0xffff7c06(%rip)
9ecf(5): mov $0x1,%ecx
9ed4(5): jmp 0xfffffe62(%rip)
9ed9(5): call 0xffff7ad7(%rip)

"hash_insert_if_absent" :
9ee0(2): push %r13
9ee2(2): push %r12
9ee4(1): push %rbp
9ee5(1): push %rbx
9ee6(4): sub $0x18,%rsp
9eea(9): mov $0x28,%rax
9ef3(5): mov %rax,0x8(%rsp)
9ef8(2): xor %eax,%eax
9efa(3): test %rsi,%rsi
9efd(6): jz 0x1c0(%rip)
9f03(3): mov %rsp,%r12
9f06(2): xor %ecx,%ecx
9f08(3): mov %rdx,%r13
9f0b(3): mov %r12,%rdx
9f0e(3): mov %rdi,%rbx
9f11(3): mov %rsi,%rbp
9f14(5): call 0xfffff2dc(%rip)
9f19(3): test %rax,%rax
9f1c(3): mov %rax,%rdx
9f1f(2): jz 0x31(%rip)
9f21(2): xor %eax,%eax
9f23(3): test %r13,%r13
9f26(2): jz 0x6(%rip)
9f28(4): mov %rdx,0x0(%r13)
9f2c(5): mov 0x8(%rsp),%rcx
9f31(9): xor $0x28,%rcx
9f3a(6): jnz 0x225(%rip)
9f40(4): add $0x18,%rsp
9f44(1): pop %rbx
9f45(1): pop %rbp
9f46(2): pop %r12
9f48(2): pop %r13
9f4a(1): ret near (%rsp)
9f4b(5): nop 0x0(%rax,%rax,1)
9f50(4): mov 0x18(%rbx),%rax
9f54(3): test %rax,%rax
9f57(2): js 0x79(%rip)
9f59(4): pxor %xmm1,%xmm1
9f5d(4): mov 0x28(%rbx),%rdx
9f61(5): cvtsi2ss %rax,%xmm1
9f66(4): mov 0x10(%rbx),%rax
9f6a(3): test %rax,%rax
9f6d(6): js 0x8d(%rip)
9f73(4): pxor %xmm0,%xmm0
9f77(5): cvtsi2ss %rax,%xmm0
9f7c(5): mulss 0x8(%rdx),%xmm0
9f81(3): ucomiss %xmm0,%xmm1
9f84(6): jnbe 0x9c(%rip)
9f8a(4): mov (%rsp),%r12
9f8e(5): cmp $0x0,(%r12)
9f93(6): jz 0x135(%rip)
9f99(4): mov 0x48(%rbx),%rax
9f9d(3): test %rax,%rax
9fa0(6): jz 0x140(%rip)
9fa6(4): mov 0x8(%rax),%rdx
9faa(4): mov %rdx,0x48(%rbx)
9fae(5): mov 0x8(%r12),%rdx
9fb3(3): mov %rbp,(%rax)
9fb6(4): mov %rdx,0x8(%rax)
9fba(5): mov %rax,0x8(%r12)
9fbf(5): mov $0x1,%eax
9fc4(5): add $0x1,0x20(%rbx)
9fc9(5): jmp 0xffffff63(%rip)
9fce(2): nop 
9fd0(3): mov %rax,%rdx
9fd3(4): pxor %xmm1,%xmm1
9fd7(3): and $0x1,%eax
9fda(3): shr $0x1,%rdx
9fdd(3): or %rax,%rdx
9fe0(4): mov 0x10(%rbx),%rax
9fe4(5): cvtsi2ss %rdx,%xmm1
9fe9(4): mov 0x28(%rbx),%rdx
9fed(3): test %rax,%rax
9ff0(4): addss %xmm1,%xmm1
9ff4(6): jns 0xffffff7f(%rip)
9ffa(3): mov %rax,%rcx
9ffd(4): pxor %xmm0,%xmm0
a001(3): shr $0x1,%rcx
a004(3): and $0x1,%eax
a007(3): or %rax,%rcx
a00a(5): cvtsi2ss %rcx,%xmm0
a00f(4): addss %xmm0,%xmm0
a013(5): jmp 0xffffff69(%rip)
a018(8): nop 0x0(%rax,%rax,1)
a020(4): lea 0x28(%rbx),%rdi
a024(5): call 0xfffff2ec(%rip)
a029(4): mov 0x10(%rbx),%rax
a02d(4): mov 0x28(%rbx),%rdx
a031(3): test %rax,%rax
a034(5): movss 0x8(%rdx),%xmm2
a039(6): js 0xc7(%rip)
a03f(4): pxor %xmm0,%xmm0
a043(5): cvtsi2ss %rax,%xmm0
a048(4): mov 0x18(%rbx),%rax
a04c(3): test %rax,%rax
a04f(6): js 0xd1(%rip)
a055(4): pxor %xmm1,%xmm1
a059(5): cvtsi2ss %rax,%xmm1
a05e(3): movaps %xmm2,%xmm3
a061(4): mulss %xmm0,%xmm3
a065(3): ucomiss %xmm3,%xmm1
a068(6): jbe 0xffffff22(%rip)
a06e(4): cmp $0x0,0x10(%rdx)
a072(5): mulss 0xc(%rdx),%xmm0
a077(2): jnz 0x6(%rip)
a079(4): mulss %xmm2,%xmm0
a07d(7): ucomiss 0x2588(%rip),%xmm0
a084(2): jnb 0x6f(%rip)
a086(7): ucomiss 0x2583(%rip),%xmm0
a08d(6): jnb 0xb3(%rip)
a093(5): cvttss2si %xmm0,%rsi
a098(3): mov %rbx,%rdi
a09b(5): call 0xfffffc05(%rip)
a0a0(2): test %al,%al
a0a2(2): jz 0x51(%rip)
a0a4(2): xor %ecx,%ecx
a0a6(3): mov %r12,%rdx
a0a9(3): mov %rbp,%rsi
a0ac(3): mov %rbx,%rdi
a0af(5): call 0xfffff141(%rip)
a0b4(3): test %rax,%rax
a0b7(6): jz 0xfffffed3(%rip)
a0bd(5): call 0xffff78f3(%rip)
a0c2(6): nop 0x0(%rax,%rax,1)
a0c8(4): mov %rbp,(%r12)
a0cc(5): mov $0x1,%eax
a0d1(5): add $0x1,0x20(%rbx)
a0d6(5): add $0x1,0x18(%rbx)
a0db(5): jmp 0xfffffe51(%rip)
a0e0(5): mov $0x10,%edi
a0e5(5): call 0xffff7b5b(%rip)
a0ea(3): test %rax,%rax
a0ed(6): jnz 0xfffffec1(%rip)
a0f3(5): mov $0xffffffff,%eax
a0f8(5): jmp 0xfffffe34(%rip)
a0fd(3): nop (%rax)
a100(3): mov %rax,%rcx
a103(4): pxor %xmm0,%xmm0
a107(3): shr $0x1,%rcx
a10a(3): and $0x1,%eax
a10d(3): or %rax,%rcx
a110(5): cvtsi2ss %rcx,%xmm0
a115(4): addss %xmm0,%xmm0
a119(5): jmp 0xffffff2f(%rip)
a11e(2): nop 
a120(3): mov %rax,%rcx
a123(4): pxor %xmm1,%xmm1
a127(3): shr $0x1,%rcx
a12a(3): and $0x1,%eax
a12d(3): or %rax,%rcx
a130(5): cvtsi2ss %rcx,%xmm1
a135(4): addss %xmm1,%xmm1
a139(5): jmp 0xffffff25(%rip)
a13e(2): nop 
a140(8): subss 0x24c8(%rip),%xmm0
a148(a): mov $0x-9223372036854775808,%rax
a152(5): cvttss2si %xmm0,%rsi
a157(3): xor %rax,%rsi
a15a(5): jmp 0xffffff3e(%rip)
a15f(5): call 0xffff7971(%rip)

"hash_insert" :
a170(1): push %rbx
a171(3): mov %rsi,%rbx
a174(4): sub $0x10,%rsp
a178(3): mov %rsp,%rdx
a17b(9): mov $0x28,%rax
a184(5): mov %rax,0x8(%rsp)
a189(2): xor %eax,%eax
a18b(5): call 0xfffffd55(%rip)
a190(3): cmp $0xff,%eax
a193(2): jz 0x2d(%rip)
a195(2): test %eax,%eax
a197(2): jnz 0x6(%rip)
a199(4): mov (%rsp),%rbx
a19d(5): mov 0x8(%rsp),%rcx
a1a2(9): xor $0x28,%rcx
a1ab(3): mov %rbx,%rax
a1ae(2): jnz 0x16(%rip)
a1b0(4): add $0x10,%rsp
a1b4(1): pop %rbx
a1b5(1): ret near (%rsp)
a1b6(a): nop 0x0(%rax,%rax,1)
a1c0(2): xor %ebx,%ebx
a1c2(2): jmp 0xffffffdb(%rip)
a1c4(5): call 0xffff790c(%rip)

"hash_delete" :
a1d0(2): push %r12
a1d2(1): push %rbp
a1d3(5): mov $0x1,%ecx
a1d8(1): push %rbx
a1d9(3): mov %rdi,%rbx
a1dc(4): sub $0x10,%rsp
a1e0(3): mov %rsp,%rdx
a1e3(9): mov $0x28,%rax
a1ec(5): mov %rax,0x8(%rsp)
a1f1(2): xor %eax,%eax
a1f3(5): call 0xffffeffd(%rip)
a1f8(3): test %rax,%rax
a1fb(3): mov %rax,%rbp
a1fe(2): jz 0x11(%rip)
a200(4): mov (%rsp),%rax
a204(5): sub $0x1,0x20(%rbx)
a209(4): cmp $0x0,(%rax)
a20d(2): jz 0x23(%rip)
a20f(5): mov 0x8(%rsp),%rcx
a214(9): xor $0x28,%rcx
a21d(3): mov %rbp,%rax
a220(6): jnz 0x1ae(%rip)
a226(4): add $0x10,%rsp
a22a(1): pop %rbx
a22b(1): pop %rbp
a22c(2): pop %r12
a22e(1): ret near (%rsp)
a22f(1): nop 
a230(4): mov 0x18(%rbx),%rax
a234(4): sub $0x1,%rax
a238(3): test %rax,%rax
a23b(4): mov %rax,0x18(%rbx)
a23f(6): js 0x101(%rip)
a245(4): pxor %xmm0,%xmm0
a249(5): cvtsi2ss %rax,%xmm0
a24e(4): mov 0x10(%rbx),%rax
a252(4): mov 0x28(%rbx),%rdx
a256(3): test %rax,%rax
a259(6): js 0xc7(%rip)
a25f(4): pxor %xmm1,%xmm1
a263(5): cvtsi2ss %rax,%xmm1
a268(4): mulss (%rdx),%xmm1
a26c(3): ucomiss %xmm0,%xmm1
a26f(2): jbe 0xffffffa0(%rip)
a271(4): lea 0x28(%rbx),%rdi
a275(5): call 0xfffff09b(%rip)
a27a(4): mov 0x10(%rbx),%rax
a27e(4): mov 0x28(%rbx),%rdx
a282(3): test %rax,%rax
a285(6): js 0x12b(%rip)
a28b(4): pxor %xmm0,%xmm0
a28f(5): cvtsi2ss %rax,%xmm0
a294(4): mov 0x18(%rbx),%rax
a298(3): test %rax,%rax
a29b(6): js 0xf5(%rip)
a2a1(4): pxor %xmm1,%xmm1
a2a5(5): cvtsi2ss %rax,%xmm1
a2aa(4): movss (%rdx),%xmm2
a2ae(4): mulss %xmm0,%xmm2
a2b2(3): ucomiss %xmm1,%xmm2
a2b5(6): jbe 0xffffff5a(%rip)
a2bb(4): cmp $0x0,0x10(%rdx)
a2bf(5): mulss 0x4(%rdx),%xmm0
a2c4(6): jz 0xbc(%rip)
a2ca(7): ucomiss 0x233f(%rip),%xmm0
a2d1(6): jnb 0x8f(%rip)
a2d7(5): cvttss2si %xmm0,%rsi
a2dc(3): mov %rbx,%rdi
a2df(5): call 0xfffff9c1(%rip)
a2e4(2): test %al,%al
a2e6(6): jnz 0xffffff29(%rip)
a2ec(4): mov 0x48(%rbx),%rdi
a2f0(3): test %rdi,%rdi
a2f3(2): jz 0x16(%rip)
a2f5(3): nop (%rax)
a2f8(4): mov 0x8(%rdi),%r12
a2fc(5): call 0xffff7ae4(%rip)
a301(3): test %r12,%r12
a304(3): mov %r12,%rdi
a307(2): jnz 0xfffffff1(%rip)
a309(8): mov $0x0,0x48(%rbx)
a311(5): jmp 0xfffffefe(%rip)
a316(a): nop 0x0(%rax,%rax,1)
a320(3): mov %rax,%rcx
a323(4): pxor %xmm1,%xmm1
a327(3): shr $0x1,%rcx
a32a(3): and $0x1,%eax
a32d(3): or %rax,%rcx
a330(5): cvtsi2ss %rcx,%xmm1
a335(4): addss %xmm1,%xmm1
a339(5): jmp 0xffffff2f(%rip)
a33e(2): nop 
a340(3): mov %rax,%rdx
a343(4): pxor %xmm0,%xmm0
a347(3): shr $0x1,%rdx
a34a(3): and $0x1,%eax
a34d(3): or %rax,%rdx
a350(5): cvtsi2ss %rdx,%xmm0
a355(4): addss %xmm0,%xmm0
a359(5): jmp 0xfffffef5(%rip)
a35e(2): nop 
a360(8): subss 0x22a8(%rip),%xmm0
a368(a): mov $0x-9223372036854775808,%rax
a372(5): cvttss2si %xmm0,%rsi
a377(3): xor %rax,%rsi
a37a(5): jmp 0xffffff62(%rip)
a37f(1): nop 
a380(5): mulss 0x8(%rdx),%xmm0
a385(5): jmp 0xffffff45(%rip)
a38a(6): nop 0x0(%rax,%rax,1)
a390(3): mov %rax,%rcx
a393(4): pxor %xmm1,%xmm1
a397(3): shr $0x1,%rcx
a39a(3): and $0x1,%eax
a39d(3): or %rax,%rcx
a3a0(5): cvtsi2ss %rcx,%xmm1
a3a5(4): addss %xmm1,%xmm1
a3a9(5): jmp 0xffffff01(%rip)
a3ae(2): nop 
a3b0(3): mov %rax,%rcx
a3b3(4): pxor %xmm0,%xmm0
a3b7(3): shr $0x1,%rcx
a3ba(3): and $0x1,%eax
a3bd(3): or %rax,%rcx
a3c0(5): cvtsi2ss %rcx,%xmm0
a3c5(4): addss %xmm0,%xmm0
a3c9(5): jmp 0xfffffecb(%rip)
a3ce(5): call 0xffff7702(%rip)

"i_ring_init" :
a3e0(4): mov $0x1,0x1c(%rdi)
a3e4(8): mov $0x0,0x14(%rdi)
a3ec(2): mov %esi,(%rdi)
a3ee(3): mov %esi,0x4(%rdi)
a3f1(3): mov %esi,0x8(%rdi)
a3f4(3): mov %esi,0xc(%rdi)
a3f7(3): mov %esi,0x10(%rdi)
a3fa(1): ret near (%rsp)

"i_ring_empty" :
a400(4): movzx 0x1c(%rdi),%eax
a404(1): ret near (%rsp)

"i_ring_push" :
a410(4): movzx 0x1c(%rdi),%edx
a414(3): mov 0x14(%rdi),%ecx
a417(3): xor $0x1,%edx
a41a(3): movzx %dl,%edx
a41d(2): add %edx,%ecx
a41f(3): and $0x3,%ecx
a422(2): mov %ecx,%eax
a424(4): lea 0x0(%rdi,%rax,4),%r8
a428(3): mov (%r8),%eax
a42b(3): mov %esi,(%r8)
a42e(3): mov 0x18(%rdi),%esi
a431(3): mov %ecx,0x14(%rdi)
a434(2): cmp %ecx,%esi
a436(2): jnz 0xa(%rip)
a438(2): add %esi,%edx
a43a(3): and $0x3,%edx
a43d(3): mov %edx,0x18(%rdi)
a440(4): mov $0x0,0x1c(%rdi)
a444(1): ret near (%rsp)

"i_ring_pop" :
a450(4): cmp $0x0,0x1c(%rdi)
a454(2): jnz 0x31(%rip)
a456(3): mov 0x14(%rdi),%eax
a459(3): mov 0x10(%rdi),%esi
a45c(4): lea 0x0(%rdi,%rax,4),%rcx
a460(3): mov %rax,%rdx
a463(2): mov (%rcx),%eax
a465(2): mov %esi,(%rcx)
a467(3): cmp 0x18(%rdi),%edx
a46a(2): jz 0x16(%rip)
a46c(3): add $0x3,%edx
a46f(3): and $0x3,%edx
a472(3): mov %edx,0x14(%rdi)
a475(1): ret near (%rsp)
a476(a): nop 0x0(%rax,%rax,1)
a480(4): mov $0x1,0x1c(%rdi)
a484(1): ret near (%rsp)
a485(4): sub $0x8,%rsp
a489(5): call 0xffff7527(%rip)

"locale_charset" :
a490(4): sub $0x8,%rsp
a494(5): mov $0xe,%edi
a499(5): call 0xffff77c7(%rip)
a49e(3): test %rax,%rax
a4a1(2): jz 0x1f(%rip)
a4a3(3): cmp $0x0,(%rax)
a4a6(7): lea 0x2173(%rip),%rdx
a4ad(4): cmove %rdx,%rax
a4b1(4): add $0x8,%rsp
a4b5(1): ret near (%rsp)
a4b6(a): nop 0x0(%rax,%rax,1)
a4c0(7): lea 0x2159(%rip),%rax
a4c7(4): add $0x8,%rsp
a4cb(1): ret near (%rsp)

"openat_safer" :
a4d0(4): sub $0x58,%rsp
a4d4(5): mov %rcx,0x38(%rsp)
a4d9(2): xor %ecx,%ecx
a4db(9): mov $0x28,%rax
a4e4(5): mov %rax,0x18(%rsp)
a4e9(2): xor %eax,%eax
a4eb(3): test $0x40,%dl
a4ee(2): jnz 0x2a(%rip)
a4f0(2): xor %eax,%eax
a4f2(5): call 0xffff75ce(%rip)
a4f7(2): mov %eax,%edi
a4f9(5): call 0xc7(%rip)
a4fe(5): mov 0x18(%rsp),%rsi
a503(9): xor $0x28,%rsi
a50c(2): jnz 0x2d(%rip)
a50e(4): add $0x58,%rsp
a512(1): ret near (%rsp)
a513(5): nop 0x0(%rax,%rax,1)
a518(5): lea 0x60(%rsp),%rax
a51d(7): mov $0x18,(%rsp)
a524(4): mov 0x38(%rsp),%ecx
a528(5): mov %rax,0x8(%rsp)
a52d(5): lea 0x20(%rsp),%rax
a532(5): mov %rax,0x10(%rsp)
a537(2): jmp 0xffffffb9(%rip)
a539(5): call 0xffff7597(%rip)

"opendirat" :
a540(2): push %r13
a542(2): push %r12
a544(6): or $0x90900,%edx
a54a(1): push %rbp
a54b(1): push %rbx
a54c(2): xor %eax,%eax
a54e(3): mov %rcx,%r12
a551(4): sub $0x8,%rsp
a555(5): call 0xffffff7b(%rip)
a55a(2): test %eax,%eax
a55c(2): js 0x54(%rip)
a55e(2): mov %eax,%edi
a560(2): mov %eax,%ebx
a562(5): call 0xffff77ce(%rip)
a567(3): test %rax,%rax
a56a(3): mov %rax,%rbp
a56d(2): jz 0x1b(%rip)
a56f(4): mov %ebx,(%r12)
a573(4): add $0x8,%rsp
a577(3): mov %rbp,%rax
a57a(1): pop %rbx
a57b(1): pop %rbp
a57c(2): pop %r12
a57e(2): pop %r13
a580(1): ret near (%rsp)
a581(7): nop 0x0(%rax)
a588(5): call 0xffff7438(%rip)
a58d(3): mov (%rax),%r13d
a590(3): mov %rax,%r12
a593(2): mov %ebx,%edi
a595(5): call 0xffff75db(%rip)
a59a(3): mov %rbp,%rax
a59d(4): mov %r13d,(%r12)
a5a1(4): add $0x8,%rsp
a5a5(1): pop %rbx
a5a6(1): pop %rbp
a5a7(2): pop %r12
a5a9(2): pop %r13
a5ab(1): ret near (%rsp)
a5ac(4): nop 0x0(%rax)
a5b0(4): add $0x8,%rsp
a5b4(2): xor %ebp,%ebp
a5b6(1): pop %rbx
a5b7(3): mov %rbp,%rax
a5ba(1): pop %rbp
a5bb(2): pop %r12
a5bd(2): pop %r13
a5bf(1): ret near (%rsp)

"fd_safer" :
a5c0(2): push %r13
a5c2(2): push %r12
a5c4(1): push %rbp
a5c5(1): push %rbx
a5c6(2): mov %edi,%ebx
a5c8(4): sub $0x8,%rsp
a5cc(3): cmp $0x2,%edi
a5cf(2): jnbe 0x23(%rip)
a5d1(5): call 0x3cf(%rip)
a5d6(3): mov %eax,%r12d
a5d9(5): call 0xffff73e7(%rip)
a5de(3): mov (%rax),%r13d
a5e1(3): mov %rax,%rbp
a5e4(2): mov %ebx,%edi
a5e6(5): call 0xffff758a(%rip)
a5eb(3): mov %r12d,%ebx
a5ee(4): mov %r13d,0x0(%rbp)
a5f2(4): add $0x8,%rsp
a5f6(2): mov %ebx,%eax
a5f8(1): pop %rbx
a5f9(1): pop %rbp
a5fa(2): pop %r12
a5fc(2): pop %r13
a5fe(1): ret near (%rsp)

"rpl_fclose" :
a600(2): push %r12
a602(1): push %rbp
a603(1): push %rbx
a604(3): mov %rdi,%rbx
a607(5): call 0xffff7609(%rip)
a60c(2): test %eax,%eax
a60e(3): mov %rbx,%rdi
a611(2): js 0x56(%rip)
a613(5): call 0xffff767d(%rip)
a618(2): test %eax,%eax
a61a(2): jnz 0x2e(%rip)
a61c(3): mov %rbx,%rdi
a61f(5): call 0x2e1(%rip)
a624(2): test %eax,%eax
a626(2): jz 0x3e(%rip)
a628(5): call 0xffff7398(%rip)
a62d(3): mov (%rax),%r12d
a630(3): mov %rbx,%rdi
a633(3): mov %rax,%rbp
a636(5): call 0xffff740a(%rip)
a63b(3): test %r12d,%r12d
a63e(2): jnz 0x32(%rip)
a640(1): pop %rbx
a641(1): pop %rbp
a642(2): pop %r12
a644(1): ret near (%rsp)
a645(3): nop (%rax)
a648(3): mov %rbx,%rdi
a64b(5): call 0xffff75c5(%rip)
a650(2): xor %esi,%esi
a652(5): mov $0x1,%edx
a657(2): mov %eax,%edi
a659(5): call 0xffff74e7(%rip)
a65e(4): cmp $0xffffffff,%rax
a662(2): jnz 0xffffffba(%rip)
a664(3): mov %rbx,%rdi
a667(1): pop %rbx
a668(1): pop %rbp
a669(2): pop %r12
a66b(5): jmp 0xffff73d5(%rip)
a670(4): mov %r12d,0x0(%rbp)
a674(5): mov $0xffffffff,%eax
a679(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
a680(2): push %r12
a682(1): push %rbp
a683(2): mov %edi,%ebp
a685(1): push %rbx
a686(4): sub $0x50,%rsp
a68a(9): mov $0x28,%rax
a693(5): mov %rax,0x18(%rsp)
a698(2): xor %eax,%eax
a69a(5): lea 0x70(%rsp),%rax
a69f(2): test %esi,%esi
a6a1(5): mov %rdx,0x30(%rsp)
a6a6(5): mov %rcx,0x38(%rsp)
a6ab(5): mov %r8,0x40(%rsp)
a6b0(5): mov %rax,0x8(%rsp)
a6b5(5): lea 0x20(%rsp),%rax
a6ba(5): mov %r9,0x48(%rsp)
a6bf(7): mov $0x10,(%rsp)
a6c6(5): mov %rax,0x10(%rsp)
a6cb(6): jz 0x207(%rip)
a6d1(6): cmp $0x406,%esi
a6d7(2): jnz 0x49(%rip)
a6d9(5): mov 0x10(%rsp),%rax
a6de(7): cmp $0x0,0x204b53(%rip)
a6e5(7): mov $0x18,(%rsp)
a6ec(4): mov 0x10(%rax),%r12d
a6f0(3): mov %r12d,%edx
a6f3(6): js 0x130(%rip)
a6f9(2): xor %eax,%eax
a6fb(5): mov $0x406,%esi
a700(5): call 0xffff7320(%rip)
a705(2): test %eax,%eax
a707(2): mov %eax,%ebx
a709(6): js 0x18f(%rip)
a70f(a): mov $0x1,0x204b1f(%rip)
a719(2): jmp 0x47(%rip)
a71b(5): nop 0x0(%rax,%rax,1)
a720(3): cmp $0xb,%esi
a723(2): jz 0x2d(%rip)
a725(2): jnle 0x5b(%rip)
a727(3): cmp $0x4,%esi
a72a(6): jz 0xd6(%rip)
a730(6): jnle 0xc0(%rip)
a736(3): cmp $0x2,%esi
a739(6): jz 0xc7(%rip)
a73f(2): jnle 0x11(%rip)
a741(3): cmp $0x1,%esi
a744(2): jnz 0x64(%rip)
a746(a): nop 0x0(%rax,%rax,1)
a750(2): mov %ebp,%edi
a752(2): xor %eax,%eax
a754(5): call 0xffff72cc(%rip)
a759(2): mov %eax,%ebx
a75b(5): nop 0x0(%rax,%rax,1)
a760(5): mov 0x18(%rsp),%rcx
a765(9): xor $0x28,%rcx
a76e(2): mov %ebx,%eax
a770(6): jnz 0x15d(%rip)
a776(4): add $0x50,%rsp
a77a(1): pop %rbx
a77b(1): pop %rbp
a77c(2): pop %r12
a77e(1): ret near (%rsp)
a77f(1): nop 
a780(6): cmp $0x407,%esi
a786(2): jnle 0x4a(%rip)
a788(6): cmp $0x406,%esi
a78e(2): jnl 0x72(%rip)
a790(6): cmp $0x401,%esi
a796(2): jz 0xffffffba(%rip)
a798(6): cmp $0x402,%esi
a79e(2): jz 0x62(%rip)
a7a0(6): cmp $0x400,%esi
a7a6(2): jz 0x5a(%rip)
a7a8(3): mov (%rsp),%eax
a7ab(3): cmp $0x2f,%eax
a7ae(6): jnbe 0x13c(%rip)
a7b4(5): add 0x10(%rsp),%rax
a7b9(3): mov (%rax),%rdx
a7bc(2): mov %ebp,%edi
a7be(2): xor %eax,%eax
a7c0(5): call 0xffff7260(%rip)
a7c5(2): mov %eax,%ebx
a7c7(2): jmp 0xffffff99(%rip)
a7c9(7): nop 0x0(%rax)
a7d0(6): cmp $0x409,%esi
a7d6(2): jz 0x2a(%rip)
a7d8(6): jl 0xffffff78(%rip)
a7de(6): cmp $0x40a,%esi
a7e4(2): jnz 0xffffffc4(%rip)
a7e6(5): jmp 0xffffff6a(%rip)
a7eb(5): nop 0x0(%rax,%rax,1)
a7f0(3): cmp $0x9,%esi
a7f3(6): jz 0xffffff5d(%rip)
a7f9(2): jnle 0x7(%rip)
a7fb(3): cmp $0x8,%esi
a7fe(2): jnz 0xffffffaa(%rip)
a800(3): mov (%rsp),%eax
a803(3): cmp $0x2f,%eax
a806(6): jnbe 0xee(%rip)
a80c(5): add 0x10(%rsp),%rax
a811(2): mov (%rax),%edx
a813(2): mov %ebp,%edi
a815(2): xor %eax,%eax
a817(5): call 0xffff7209(%rip)
a81c(2): mov %eax,%ebx
a81e(5): jmp 0xffffff42(%rip)
a823(2): xor %esi,%esi
a825(2): xor %eax,%eax
a827(5): call 0xffff71f9(%rip)
a82c(2): test %eax,%eax
a82e(2): mov %eax,%ebx
a830(6): js 0xffffff30(%rip)
a836(7): cmp $0xff,0x2049fb(%rip)
a83d(6): jnz 0xffffff23(%rip)
a843(2): xor %eax,%eax
a845(5): mov $0x1,%esi
a84a(2): mov %ebx,%edi
a84c(5): call 0xffff71d4(%rip)
a851(2): test %eax,%eax
a853(2): js 0x1e(%rip)
a855(3): or $0x1,%eax
a858(5): mov $0x2,%esi
a85d(2): mov %ebx,%edi
a85f(2): mov %eax,%edx
a861(2): xor %eax,%eax
a863(5): call 0xffff71bd(%rip)
a868(3): cmp $0xff,%eax
a86b(6): jnz 0xfffffef5(%rip)
a871(5): call 0xffff714f(%rip)
a876(3): mov (%rax),%r12d
a879(3): mov %rax,%rbp
a87c(2): mov %ebx,%edi
a87e(5): call 0xffff72f2(%rip)
a883(5): mov $0xffffffff,%ebx
a888(4): mov %r12d,0x0(%rbp)
a88c(5): jmp 0xfffffed4(%rip)
a891(7): nop 0x0(%rax)
a898(5): call 0xffff7128(%rip)
a89d(3): cmp $0x16,(%rax)
a8a0(6): jnz 0xfffffe6f(%rip)
a8a6(2): xor %esi,%esi
a8a8(2): xor %eax,%eax
a8aa(3): mov %r12d,%edx
a8ad(2): mov %ebp,%edi
a8af(5): call 0xffff7171(%rip)
a8b4(2): test %eax,%eax
a8b6(2): mov %eax,%ebx
a8b8(6): js 0xfffffea8(%rip)
a8be(a): mov $0xffffffff,0x204970(%rip)
a8c8(5): jmp 0xffffff7b(%rip)
a8cd(5): call 0xffff7203(%rip)
a8d2(5): mov 0x10(%rsp),%rax
a8d7(2): xor %esi,%esi
a8d9(3): mov 0x10(%rax),%edx
a8dc(2): xor %eax,%eax
a8de(5): call 0xffff7142(%rip)
a8e3(2): mov %eax,%ebx
a8e5(5): jmp 0xfffffe7b(%rip)
a8ea(5): mov 0x8(%rsp),%rax
a8ef(5): jmp 0xfffffeca(%rip)
a8f4(5): mov 0x8(%rsp),%rax
a8f9(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
a900(3): test %rdi,%rdi
a903(1): push %rbx
a904(3): mov %rdi,%rbx
a907(2): jz 0x13(%rip)
a909(5): call 0xffff7387(%rip)
a90e(2): test %eax,%eax
a910(2): jz 0xa(%rip)
a912(6): test $0x100,(%rbx)
a918(2): jnz 0x10(%rip)
a91a(3): mov %rbx,%rdi
a91d(1): pop %rbx
a91e(5): jmp 0xffff7332(%rip)
a923(5): nop 0x0(%rax,%rax,1)
a928(3): mov %rbx,%rdi
a92b(5): mov $0x1,%edx
a930(2): xor %esi,%esi
a932(5): call 0xe(%rip)
a937(3): mov %rbx,%rdi
a93a(1): pop %rbx
a93b(5): jmp 0xffff7315(%rip)

"rpl_fseeko" :
a940(4): mov 0x8(%rdi),%rax
a944(4): cmp %rax,0x10(%rdi)
a948(2): jz 0x8(%rip)
a94a(5): jmp 0xffff73c6(%rip)
a94f(1): nop 
a950(4): mov 0x20(%rdi),%rax
a954(4): cmp %rax,0x28(%rdi)
a958(2): jnz 0xfffffff2(%rip)
a95a(5): cmp $0x0,0x48(%rdi)
a95f(2): jnz 0xffffffeb(%rip)
a961(2): push %r12
a963(1): push %rbp
a964(3): mov %edx,%r12d
a967(1): push %rbx
a968(3): mov %rsi,%rbp
a96b(3): mov %rdi,%rbx
a96e(5): call 0xffff72a2(%rip)
a973(3): mov %r12d,%edx
a976(3): mov %rbp,%rsi
a979(2): mov %eax,%edi
a97b(5): call 0xffff71c5(%rip)
a980(4): cmp $0xffffffff,%rax
a984(2): jz 0xe(%rip)
a986(3): and $0xef,(%rbx)
a989(7): mov %rax,0x90(%rbx)
a990(2): xor %eax,%eax
a992(1): pop %rbx
a993(1): pop %rbp
a994(2): pop %r12
a996(1): ret near (%rsp)

"dup_safer" :
a9a0(5): mov $0x3,%edx
a9a5(2): xor %esi,%esi
a9a7(2): xor %eax,%eax
a9a9(5): jmp 0xfffffcd7(%rip)

"__libc_csu_init" :
a9b0(2): push %r15
a9b2(2): push %r14
a9b4(3): mov %rdx,%r15
a9b7(2): push %r13
a9b9(2): push %r12
a9bb(7): lea 0x203fae(%rip),%r12
a9c2(1): push %rbp
a9c3(7): lea 0x203fae(%rip),%rbp
a9ca(1): push %rbx
a9cb(3): mov %edi,%r13d
a9ce(3): mov %rsi,%r14
a9d1(3): sub %r12,%rbp
a9d4(4): sub $0x8,%rsp
a9d8(4): sar $0x3,%rbp
a9dc(5): call 0xffff6f94(%rip)
a9e1(3): test %rbp,%rbp
a9e4(2): jz 0x22(%rip)
a9e6(2): xor %ebx,%ebx
a9e8(8): nop 0x0(%rax,%rax,1)
a9f0(3): mov %r15,%rdx
a9f3(3): mov %r14,%rsi
a9f6(3): mov %r13d,%edi
a9f9(4): call 0x0(%r12,%rbx,8)
a9fd(4): add $0x1,%rbx
aa01(3): cmp %rbx,%rbp
aa04(2): jnz 0xffffffec(%rip)
aa06(4): add $0x8,%rsp
aa0a(1): pop %rbx
aa0b(1): pop %rbp
aa0c(2): pop %r12
aa0e(2): pop %r13
aa10(2): pop %r14
aa12(2): pop %r15
aa14(1): ret near (%rsp)

"atexit" :
aa30(7): mov 0x2045d1(%rip),%rdx
aa37(2): xor %esi,%esi
aa39(5): jmp 0xffff7327(%rip)

"_fini" :
aa40(4): sub $0x8,%rsp
aa44(4): add $0x8,%rsp
aa48(1): ret near (%rsp)

