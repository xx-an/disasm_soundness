
"__uflow@plt" :
1470(6): jmp 0x2069ca(%rip)
1476(5): push $0x0

"free@plt" :
1480(6): jmp 0x2069c2(%rip)
1486(5): push $0x1

"abort@plt" :
1490(6): jmp 0x2069ba(%rip)
1496(5): push $0x2

"__errno_location@plt" :
14a0(6): jmp 0x2069b2(%rip)
14a6(5): push $0x3

"strncmp@plt" :
14b0(6): jmp 0x2069aa(%rip)
14b6(5): push $0x4

"_exit@plt" :
14c0(6): jmp 0x2069a2(%rip)
14c6(5): push $0x5

"__fpending@plt" :
14d0(6): jmp 0x20699a(%rip)
14d6(5): push $0x6

"clearerr_unlocked@plt" :
14e0(6): jmp 0x206992(%rip)
14e6(5): push $0x7

"textdomain@plt" :
14f0(6): jmp 0x20698a(%rip)
14f6(5): push $0x8

"fclose@plt" :
1500(6): jmp 0x206982(%rip)
1506(5): push $0x9

"bindtextdomain@plt" :
1510(6): jmp 0x20697a(%rip)
1516(5): push $0xa

"dcgettext@plt" :
1520(6): jmp 0x206972(%rip)
1526(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1530(6): jmp 0x20696a(%rip)
1536(5): push $0xc

"strlen@plt" :
1540(6): jmp 0x206962(%rip)
1546(5): push $0xd

"__stack_chk_fail@plt" :
1550(6): jmp 0x20695a(%rip)
1556(5): push $0xe

"getopt_long@plt" :
1560(6): jmp 0x206952(%rip)
1566(5): push $0xf

"mbrtowc@plt" :
1570(6): jmp 0x20694a(%rip)
1576(5): push $0x10

"__overflow@plt" :
1580(6): jmp 0x206942(%rip)
1586(5): push $0x11

"strrchr@plt" :
1590(6): jmp 0x20693a(%rip)
1596(5): push $0x12

"lseek@plt" :
15a0(6): jmp 0x206932(%rip)
15a6(5): push $0x13

"__assert_fail@plt" :
15b0(6): jmp 0x20692a(%rip)
15b6(5): push $0x14

"memset@plt" :
15c0(6): jmp 0x206922(%rip)
15c6(5): push $0x15

"strspn@plt" :
15d0(6): jmp 0x20691a(%rip)
15d6(5): push $0x16

"posix_fadvise@plt" :
15e0(6): jmp 0x206912(%rip)
15e6(5): push $0x17

"strndup@plt" :
15f0(6): jmp 0x20690a(%rip)
15f6(5): push $0x18

"memcmp@plt" :
1600(6): jmp 0x206902(%rip)
1606(5): push $0x19

"fputs_unlocked@plt" :
1610(6): jmp 0x2068fa(%rip)
1616(5): push $0x1a

"calloc@plt" :
1620(6): jmp 0x2068f2(%rip)
1626(5): push $0x1b

"memcpy@plt" :
1630(6): jmp 0x2068ea(%rip)
1636(5): push $0x1c

"fileno@plt" :
1640(6): jmp 0x2068e2(%rip)
1646(5): push $0x1d

"malloc@plt" :
1650(6): jmp 0x2068da(%rip)
1656(5): push $0x1e

"fflush@plt" :
1660(6): jmp 0x2068d2(%rip)
1666(5): push $0x1f

"nl_langinfo@plt" :
1670(6): jmp 0x2068ca(%rip)
1676(5): push $0x20

"__freading@plt" :
1680(6): jmp 0x2068c2(%rip)
1686(5): push $0x21

"fwrite_unlocked@plt" :
1690(6): jmp 0x2068ba(%rip)
1696(5): push $0x22

"realloc@plt" :
16a0(6): jmp 0x2068b2(%rip)
16a6(5): push $0x23

"setlocale@plt" :
16b0(6): jmp 0x2068aa(%rip)
16b6(5): push $0x24

"__printf_chk@plt" :
16c0(6): jmp 0x2068a2(%rip)
16c6(5): push $0x25

"error@plt" :
16d0(6): jmp 0x20689a(%rip)
16d6(5): push $0x26

"fseeko@plt" :
16e0(6): jmp 0x206892(%rip)
16e6(5): push $0x27

"fopen@plt" :
16f0(6): jmp 0x20688a(%rip)
16f6(5): push $0x28

"__cxa_atexit@plt" :
1700(6): jmp 0x206882(%rip)
1706(5): push $0x29

"exit@plt" :
1710(6): jmp 0x20687a(%rip)
1716(5): push $0x2a

"fwrite@plt" :
1720(6): jmp 0x206872(%rip)
1726(5): push $0x2b

"__fprintf_chk@plt" :
1730(6): jmp 0x20686a(%rip)
1736(5): push $0x2c

"mbsinit@plt" :
1740(6): jmp 0x206862(%rip)
1746(5): push $0x2d

"iswprint@plt" :
1750(6): jmp 0x20685a(%rip)
1756(5): push $0x2e

"__ctype_b_loc@plt" :
1760(6): jmp 0x206852(%rip)
1766(5): push $0x2f

".plt.got" :
1770(6): jmp 0x20686a(%rip)
1776(2): nop 

"_init" :
1448(4): sub $0x8,%rsp
144c(7): mov 0x206b7d(%rip),%rax
1453(3): test %rax,%rax
1456(2): jz 0x4(%rip)
1458(2): call %rax
145a(4): add $0x8,%rsp
145e(1): ret near (%rsp)

"main" :
1780(2): push %r15
1782(2): push %r14
1784(6): mov $0x1,%r14d
178a(2): push %r13
178c(2): push %r12
178e(7): lea 0x20638b(%rip),%r12
1795(1): push %rbp
1796(1): push %rbx
1797(2): mov %edi,%ebp
1799(3): mov %rsi,%rbx
179c(3): xor %r13d,%r13d
179f(4): sub $0x48,%rsp
17a3(3): mov (%rsi),%rdi
17a6(9): mov $0x28,%rax
17af(5): mov %rax,0x38(%rsp)
17b4(2): xor %eax,%eax
17b6(5): call 0x14ca(%rip)
17bb(7): lea 0x4b7f(%rip),%rsi
17c2(5): mov $0x6,%edi
17c7(5): call 0xfffffee9(%rip)
17cc(7): lea 0x3edd(%rip),%rsi
17d3(7): lea 0x3ead(%rip),%rdi
17da(5): call 0xfffffd36(%rip)
17df(7): lea 0x3ea1(%rip),%rdi
17e6(5): call 0xfffffd0a(%rip)
17eb(7): lea 0x139e(%rip),%rdi
17f2(5): call 0x3dde(%rip)
17f7(5): mov $0x0,0xe(%rsp)
17fc(4): nop 0x0(%rax)
1800(7): lea 0x3eed(%rip),%rdx
1807(3): xor %r8d,%r8d
180a(3): mov %r12,%rcx
180d(3): mov %rbx,%rsi
1810(2): mov %ebp,%edi
1812(5): call 0xfffffd4e(%rip)
1817(3): cmp $0xff,%eax
181a(6): jz 0x11f(%rip)
1820(3): cmp $0x3f,%eax
1823(6): jz 0x40b(%rip)
1829(2): jle 0x57(%rip)
182b(3): cmp $0x74,%eax
182e(6): jz 0xe2(%rip)
1834(5): cmp $0x80,%eax
1839(6): jz 0xc7(%rip)
183f(3): cmp $0x61,%eax
1842(6): jz 0x8e(%rip)
1848(3): test %r13b,%r13b
184b(6): jz 0xdd(%rip)
1851(a): mov $0x1844674407370955161,%rcx
185b(3): cmp %rcx,%r15
185e(6): jnbe 0x3da(%rip)
1864(4): imul %r15,$0xa,%rdx
1868(3): sub $0x30,%eax
186b(2): cwde 
186d(3): add %rdx,%rax
1870(3): cmp %r15,%rax
1873(6): jb 0x3c5(%rip)
1879(3): mov %rax,%r15
187c(2): jmp 0xffffff84(%rip)
187e(2): nop 
1880(5): cmp $0xffffff7e,%eax
1885(6): jz 0x3a2(%rip)
188b(3): cmp $0x2c,%eax
188e(2): jz 0x52(%rip)
1890(5): cmp $0xffffff7d,%eax
1895(2): jnz 0xffffffb3(%rip)
1897(7): mov 0x20680a(%rip),%rdi
189e(7): mov 0x20677b(%rip),%rcx
18a5(7): lea 0x3e1c(%rip),%r8
18ac(7): lea 0x3dd0(%rip),%rdx
18b3(7): lea 0x3d4a(%rip),%rsi
18ba(3): xor %r9d,%r9d
18bd(2): xor %eax,%eax
18bf(5): call 0x35b1(%rip)
18c4(2): xor %edi,%edi
18c6(5): call 0xfffffe4a(%rip)
18cb(5): nop 0x0(%rax,%rax,1)
18d0(7): mov %r14b,0x20681d(%rip)
18d7(5): jmp 0xffffff29(%rip)
18dc(4): nop 0x0(%rax)
18e0(3): test %r13b,%r13b
18e3(6): jz 0xffffff1d(%rip)
18e9(3): mov %r15,%rdi
18ec(3): xor %r13d,%r13d
18ef(5): call 0x941(%rip)
18f4(5): jmp 0xffffff0c(%rip)
18f9(7): nop 0x0(%rax)
1900(5): mov $0x1,0xe(%rsp)
1905(5): jmp 0xfffffefb(%rip)
190a(6): nop 0x0(%rax,%rax,1)
1910(7): mov 0x2067a9(%rip),%rdi
1917(7): mov %r14b,0x2067d6(%rip)
191e(5): call 0xa32(%rip)
1923(5): jmp 0xfffffedd(%rip)
1928(3): sub $0x30,%eax
192b(6): mov $0x1,%r13d
1931(3): movsxd %eax,%r15
1934(5): jmp 0xfffffecc(%rip)
1939(5): cmp $0x0,0xe(%rsp)
193e(2): jz 0x9(%rip)
1940(7): mov $0x0,0x2067ad(%rip)
1947(3): test %r13b,%r13b
194a(6): jnz 0x2d0(%rip)
1950(5): call 0xd60(%rip)
1955(7): movsxd 0x20675c(%rip),%rax
195c(2): xor %edi,%edi
195e(2): cmp %ebp,%eax
1960(2): jnl 0x6(%rip)
1962(4): lea 0x0(%rbx,%rax,8),%rdi
1966(5): call 0xf3a(%rip)
196b(2): xor %edi,%edi
196d(5): call 0xf53(%rip)
1972(3): test %rax,%rax
1975(3): mov %rax,%r15
1978(6): jz 0x23b(%rip)
197e(7): mov 0x206913(%rip),%rdi
1985(5): call 0x364b(%rip)
198a(4): mov %rax,(%rsp)
198e(5): lea 0x2f(%rsp),%rax
1993(5): mov %rax,0x10(%rsp)
1998(5): lea 0x30(%rsp),%rax
199d(5): mov %rax,0x18(%rsp)
19a2(9): mov $0x0,0x30(%rsp)
19ab(2): xor %ebp,%ebp
19ad(6): mov $0x1,%r13d
19b3(5): mov $0x0,0xe(%rsp)
19b8(3): xor %r12d,%r12d
19bb(5): mov $0x1,%ebx
19c0(5): jmp 0xaa(%rip)
19c5(3): nop (%rax)
19c8(4): cmp $0x8,%r14d
19cc(6): jz 0x149(%rip)
19d2(4): add $0x1,%r12
19d6(6): jz 0x2db(%rip)
19dc(3): test %rbp,%rbp
19df(2): jz 0x47(%rip)
19e1(4): cmp $0x1,%rbp
19e5(2): jbe 0x10(%rip)
19e7(5): cmp $0x0,0xe(%rsp)
19ec(2): jz 0x9(%rip)
19ee(4): mov (%rsp),%rax
19f2(3): mov $0x9,(%rax)
19f5(7): mov 0x2066ac(%rip),%rcx
19fc(4): mov (%rsp),%rdi
1a00(3): mov %rbp,%rdx
1a03(5): mov $0x1,%esi
1a08(5): mov %r10b,0xe(%rsp)
1a0d(5): call 0xfffffc83(%rip)
1a12(3): cmp %rax,%rbp
1a15(6): movzx 0xe(%rsp),%r10d
1a1b(6): jnz 0x26a(%rip)
1a21(5): mov $0x0,0xe(%rsp)
1a26(7): movzx 0x2066c7(%rip),%eax
1a2d(3): mov %r10d,%r13d
1a30(2): xor %ebp,%ebp
1a32(3): or %r10d,%eax
1a35(2): and %eax,%ebx
1a37(3): test %r14d,%r14d
1a3a(6): js 0x170(%rip)
1a40(7): mov 0x206661(%rip),%rdi
1a47(4): mov 0x28(%rdi),%rax
1a4b(4): cmp 0x30(%rdi),%rax
1a4f(6): jnb 0x117(%rip)
1a55(4): lea 0x1(%rax),%rdx
1a59(4): mov %rdx,0x28(%rdi)
1a5d(3): mov %r14b,(%rax)
1a60(4): cmp $0xa,%r14d
1a64(6): jz 0xffffff3e(%rip)
1a6a(4): mov 0x8(%r15),%rax
1a6e(4): cmp 0x10(%r15),%rax
1a72(6): jnb 0xc8(%rip)
1a78(4): lea 0x1(%rax),%rdx
1a7c(4): mov %rdx,0x8(%r15)
1a80(4): movzx (%rax),%r14d
1a84(2): test %bl,%bl
1a86(2): jz 0xffffffb1(%rip)
1a88(5): call 0xfffffcd8(%rip)
1a8d(3): mov (%rax),%rcx
1a90(3): movsxd %r14d,%rdx
1a93(4): movzx 0x0(%rcx,%rdx,2),%eax
1a97(3): mov %eax,%r10d
1a9a(4): and $0x1,%r10d
1a9e(2): test $0x1,%al
1aa0(6): jz 0xffffff28(%rip)
1aa6(5): mov 0x10(%rsp),%rdx
1aab(5): mov 0x18(%rsp),%rsi
1ab0(3): mov %r12,%rdi
1ab3(5): mov %r10b,0xf(%rsp)
1ab8(5): call 0xd38(%rip)
1abd(5): cmp $0x0,0x2f(%rsp)
1ac2(6): movzx 0xf(%rsp),%r10d
1ac8(6): jnz 0xdb(%rip)
1ace(3): cmp %rax,%r12
1ad1(6): jnbe 0x190(%rip)
1ad7(4): cmp $0x9,%r14d
1adb(6): jz 0x106(%rip)
1ae1(4): add $0x1,%r12
1ae5(4): xor $0x1,%r13d
1ae9(3): cmp %r12,%rax
1aec(3): setnz %dl
1aef(3): or %dl,%r13b
1af2(6): jnz 0x104(%rip)
1af8(4): mov (%rsp),%rax
1afc(3): mov $0x9,(%rax)
1aff(3): mov %r12,%rax
1b02(5): movzx 0xe(%rsp),%ebp
1b07(3): mov %rax,%r12
1b0a(6): mov $0x9,%r14d
1b10(5): jmp 0xfffffecc(%rip)
1b15(2): xor %eax,%eax
1b17(3): test %r12,%r12
1b1a(3): setnz %al
1b1d(2): xor %edx,%edx
1b1f(3): sub %rax,%r12
1b22(5): mov 0x30(%rsp),%rax
1b27(3): test %rax,%rax
1b2a(3): setnz %dl
1b2d(3): sub %rdx,%rax
1b30(5): mov %rax,0x30(%rsp)
1b35(5): jmp 0xfffffea7(%rip)
1b3a(3): mov %r15,%rdi
1b3d(5): call 0xfffff933(%rip)
1b42(2): test %eax,%eax
1b44(3): mov %eax,%r14d
1b47(6): jns 0xffffff3d(%rip)
1b4d(3): mov %r15,%rdi
1b50(5): call 0xd70(%rip)
1b55(3): test %rax,%rax
1b58(3): mov %rax,%r15
1b5b(6): jnz 0xffffff0f(%rip)
1b61(5): jmp 0xffffff23(%rip)
1b66(4): movzx %r14b,%esi
1b6a(5): call 0xfffffa16(%rip)
1b6f(2): test %eax,%eax
1b71(6): jns 0xfffffeef(%rip)
1b77(7): lea 0x3b9c(%rip),%rsi
1b7e(5): mov $0x5,%edx
1b83(2): xor %edi,%edi
1b85(5): call 0xfffff99b(%rip)
1b8a(3): mov %rax,%rbx
1b8d(5): call 0xfffff913(%rip)
1b92(2): mov (%rax),%esi
1b94(3): mov %rbx,%rdx
1b97(5): mov $0x1,%edi
1b9c(2): xor %eax,%eax
1b9e(5): call 0xfffffb32(%rip)
1ba3(2): xor %ebx,%ebx
1ba5(5): jmp 0xfffffe37(%rip)
1baa(4): mov (%rsp),%rdi
1bae(5): call 0xfffff8d2(%rip)
1bb3(5): call 0xf1d(%rip)
1bb8(5): mov 0x38(%rsp),%rcx
1bbd(9): xor $0x28,%rcx
1bc6(6): mov 0x206524(%rip),%eax
1bcc(6): jnz 0x90(%rip)
1bd2(4): add $0x48,%rsp
1bd6(1): pop %rbx
1bd7(1): pop %rbp
1bd8(2): pop %r12
1bda(2): pop %r13
1bdc(2): pop %r14
1bde(2): pop %r15
1be0(1): ret near (%rsp)
1be1(3): test %rbp,%rbp
1be4(6): jz 0xffffff1e(%rip)
1bea(4): mov (%rsp),%rcx
1bee(3): mov $0x9,(%rcx)
1bf1(5): jmp 0xffffff11(%rip)
1bf6(3): cmp %r12,%rax
1bf9(5): movzx 0xe(%rsp),%eax
1bfe(3): mov %r13d,%ebx
1c01(4): cmove %r13d,%eax
1c05(4): mov %al,0xe(%rsp)
1c09(4): mov (%rsp),%rax
1c0d(4): mov %r14b,0x0(%rax,%rbp,1)
1c11(4): add $0x1,%rbp
1c15(5): jmp 0xfffffe4b(%rip)
1c1a(3): mov %r15,%rdi
1c1d(5): call 0x613(%rip)
1c22(5): jmp 0xfffffd2e(%rip)
1c27(2): xor %edi,%edi
1c29(5): call 0x1c7(%rip)
1c2e(5): mov $0x1,%edi
1c33(5): call 0x1bd(%rip)
1c38(7): lea 0x3a99(%rip),%rsi
1c3f(5): mov $0x5,%edx
1c44(2): xor %edi,%edi
1c46(5): call 0xfffff8da(%rip)
1c4b(2): xor %esi,%esi
1c4d(3): mov %rax,%rdx
1c50(5): mov $0x1,%edi
1c55(2): xor %eax,%eax
1c57(5): call 0xfffffa79(%rip)
1c5c(5): call 0xfffff8f4(%rip)
1c61(7): lea 0x3a9b(%rip),%rsi
1c68(5): mov $0x5,%edx
1c6d(2): xor %edi,%edi
1c6f(5): call 0xfffff8b1(%rip)
1c74(2): xor %esi,%esi
1c76(3): mov %rax,%rdx
1c79(5): mov $0x1,%edi
1c7e(2): xor %eax,%eax
1c80(5): call 0xfffffa50(%rip)
1c85(7): lea 0x3a8e(%rip),%rsi
1c8c(5): mov $0x5,%edx
1c91(2): xor %edi,%edi
1c93(5): call 0xfffff88d(%rip)
1c98(3): mov %rax,%rbx
1c9b(5): call 0xfffff805(%rip)
1ca0(2): mov (%rax),%esi
1ca2(3): mov %rbx,%rdx
1ca5(5): mov $0x1,%edi
1caa(2): xor %eax,%eax
1cac(5): call 0xfffffa24(%rip)
1cb1(7): lea 0x3a4b(%rip),%rsi
1cb8(5): mov $0x5,%edx
1cbd(2): xor %edi,%edi
1cbf(5): call 0xfffff861(%rip)
1cc4(2): xor %esi,%esi
1cc6(3): mov %rax,%rdx
1cc9(5): mov $0x1,%edi
1cce(2): xor %eax,%eax
1cd0(5): call 0xfffffa00(%rip)
1cd5(a): nop 0x0(%rax,%rax,1)
1cdf(1): nop 
1ce0(2): xor %ebp,%ebp
1ce2(3): mov %rdx,%r9
1ce5(1): pop %rsi
1ce6(3): mov %rsp,%rdx
1ce9(4): and $0xfffffff0,%rsp
1ced(1): push %rax
1cee(1): push %rsp
1cef(7): lea 0x38ca(%rip),%r8
1cf6(7): lea 0x3853(%rip),%rcx
1cfd(7): lea 0xfffffa7c(%rip),%rdi
1d04(6): call 0x2062be(%rip)
1d0a(1): hlt 

"_start" :
1ce0(2): xor %ebp,%ebp
1ce2(3): mov %rdx,%r9
1ce5(1): pop %rsi
1ce6(3): mov %rsp,%rdx
1ce9(4): and $0xfffffff0,%rsp
1ced(1): push %rax
1cee(1): push %rsp
1cef(7): lea 0x38ca(%rip),%r8
1cf6(7): lea 0x3853(%rip),%rcx
1cfd(7): lea 0xfffffa7c(%rip),%rdi
1d04(6): call 0x2062be(%rip)
1d0a(1): hlt 

"deregister_tm_clones" :
1d10(7): lea 0x206389(%rip),%rdi
1d17(1): push %rbp
1d18(7): lea 0x206381(%rip),%rax
1d1f(3): cmp %rdi,%rax
1d22(3): mov %rsp,%rbp
1d25(2): jz 0x1b(%rip)
1d27(7): mov 0x206292(%rip),%rax
1d2e(3): test %rax,%rax
1d31(2): jz 0xf(%rip)
1d33(1): pop %rbp
1d34(2): jmp %rax
1d36(a): nop 0x0(%rax,%rax,1)
1d40(1): pop %rbp
1d41(1): ret near (%rsp)

"register_tm_clones" :
1d50(7): lea 0x206349(%rip),%rdi
1d57(7): lea 0x206342(%rip),%rsi
1d5e(1): push %rbp
1d5f(3): sub %rdi,%rsi
1d62(3): mov %rsp,%rbp
1d65(4): sar $0x3,%rsi
1d69(3): mov %rsi,%rax
1d6c(4): shr $0x3f,%rax
1d70(3): add %rax,%rsi
1d73(3): sar $0x1,%rsi
1d76(2): jz 0x1a(%rip)
1d78(7): mov 0x206259(%rip),%rax
1d7f(3): test %rax,%rax
1d82(2): jz 0xe(%rip)
1d84(1): pop %rbp
1d85(2): jmp %rax
1d87(9): nop 0x0(%rax,%rax,1)
1d90(1): pop %rbp
1d91(1): ret near (%rsp)

"__do_global_dtors_aux" :
1da0(7): cmp $0x0,0x206341(%rip)
1da7(2): jnz 0x31(%rip)
1da9(8): cmp $0x0,0x20622f(%rip)
1db1(1): push %rbp
1db2(3): mov %rsp,%rbp
1db5(2): jz 0xe(%rip)
1db7(7): mov 0x20624a(%rip),%rdi
1dbe(5): call 0xfffff9b2(%rip)
1dc3(5): call 0xffffff4d(%rip)
1dc8(7): mov $0x1,0x206319(%rip)
1dcf(1): pop %rbp
1dd0(1): ret near (%rsp)
1dd1(7): nop 0x0(%rax)
1dd8(2): REP ret near (%rsp)

"frame_dummy" :
1de0(1): push %rbp
1de1(3): mov %rsp,%rbp
1de4(1): pop %rbp
1de5(5): jmp 0xffffff6b(%rip)

"usage" :
1df0(2): push %r13
1df2(2): push %r12
1df4(5): mov $0x5,%edx
1df9(1): push %rbp
1dfa(1): push %rbx
1dfb(2): mov %edi,%ebp
1dfd(7): sub $0x88,%rsp
1e04(7): mov 0x206345(%rip),%rbx
1e0b(9): mov $0x28,%rax
1e14(5): mov %rax,0x78(%rsp)
1e19(2): xor %eax,%eax
1e1b(2): test %edi,%edi
1e1d(2): jz 0x30(%rip)
1e1f(7): lea 0x3922(%rip),%rsi
1e26(2): xor %edi,%edi
1e28(5): call 0xfffff6f8(%rip)
1e2d(7): mov 0x2062ac(%rip),%rdi
1e34(3): mov %rax,%rdx
1e37(3): mov %rbx,%rcx
1e3a(5): mov $0x1,%esi
1e3f(2): xor %eax,%eax
1e41(5): call 0xfffff8ef(%rip)
1e46(2): mov %ebp,%edi
1e48(5): call 0xfffff8c8(%rip)
1e4d(7): lea 0x391c(%rip),%rsi
1e54(2): xor %edi,%edi
1e56(5): call 0xfffff6ca(%rip)
1e5b(3): mov %rbx,%rdx
1e5e(3): mov %rax,%rsi
1e61(5): mov $0x1,%edi
1e66(2): xor %eax,%eax
1e68(5): call 0xfffff858(%rip)
1e6d(7): mov 0x206234(%rip),%rbx
1e74(7): lea 0x391d(%rip),%rsi
1e7b(5): mov $0x5,%edx
1e80(2): xor %edi,%edi
1e82(5): call 0xfffff69e(%rip)
1e87(3): mov %rbx,%rsi
1e8a(3): mov %rax,%rdi
1e8d(5): call 0xfffff783(%rip)
1e92(7): mov 0x20620f(%rip),%rbx
1e99(7): lea 0x3940(%rip),%rsi
1ea0(5): mov $0x5,%edx
1ea5(2): xor %edi,%edi
1ea7(5): call 0xfffff679(%rip)
1eac(3): mov %rbx,%rsi
1eaf(3): mov %rax,%rdi
1eb2(5): call 0xfffff75e(%rip)
1eb7(7): mov 0x2061ea(%rip),%rbx
1ebe(7): lea 0x3953(%rip),%rsi
1ec5(5): mov $0x5,%edx
1eca(2): xor %edi,%edi
1ecc(5): call 0xfffff654(%rip)
1ed1(3): mov %rbx,%rsi
1ed4(3): mov %rax,%rdi
1ed7(5): call 0xfffff739(%rip)
1edc(7): mov 0x2061c5(%rip),%rbx
1ee3(7): lea 0x397e(%rip),%rsi
1eea(5): mov $0x5,%edx
1eef(2): xor %edi,%edi
1ef1(5): call 0xfffff62f(%rip)
1ef6(3): mov %rbx,%rsi
1ef9(3): mov %rax,%rdi
1efc(5): call 0xfffff714(%rip)
1f01(5): call 0xc1f(%rip)
1f06(7): mov 0x20619b(%rip),%rbx
1f0d(7): lea 0x3a34(%rip),%rsi
1f14(5): mov $0x5,%edx
1f19(2): xor %edi,%edi
1f1b(5): call 0xfffff605(%rip)
1f20(3): mov %rbx,%rsi
1f23(3): mov %rax,%rdi
1f26(5): call 0xfffff6ea(%rip)
1f2b(7): mov 0x206176(%rip),%rbx
1f32(7): lea 0x3a3f(%rip),%rsi
1f39(5): mov $0x5,%edx
1f3e(2): xor %edi,%edi
1f40(5): call 0xfffff5e0(%rip)
1f45(3): mov %rbx,%rsi
1f48(3): mov %rax,%rdi
1f4b(7): lea 0x36b2(%rip),%rbx
1f52(5): call 0xfffff6be(%rip)
1f57(7): lea 0x36af(%rip),%rax
1f5e(7): lea 0x36e9(%rip),%rcx
1f65(9): mov $0x0,0x60(%rsp)
1f6e(9): mov $0x0,0x68(%rsp)
1f77(3): mov %rsp,%rdx
1f7a(4): mov %rax,(%rsp)
1f7e(7): lea 0x368a(%rip),%rax
1f85(5): mov %rcx,0x30(%rsp)
1f8a(7): lea 0x36c7(%rip),%rcx
1f91(5): mov %rax,0x8(%rsp)
1f96(7): lea 0x36ea(%rip),%rax
1f9d(5): mov %rcx,0x40(%rsp)
1fa2(7): lea 0x36b9(%rip),%rcx
1fa9(5): mov %rax,0x10(%rsp)
1fae(7): lea 0x366a(%rip),%rax
1fb5(5): mov %rcx,0x50(%rsp)
1fba(5): mov %rax,0x18(%rsp)
1fbf(7): lea 0x366f(%rip),%rax
1fc6(5): mov %rax,0x20(%rsp)
1fcb(7): lea 0x366d(%rip),%rax
1fd2(5): mov %rax,0x28(%rsp)
1fd7(5): mov %rax,0x38(%rsp)
1fdc(5): mov %rax,0x48(%rsp)
1fe1(5): mov %rax,0x58(%rsp)
1fe6(a): nop 0x0(%rax,%rax,1)
1ff0(4): add $0x10,%rdx
1ff4(3): mov (%rdx),%rdi
1ff7(3): test %rdi,%rdi
1ffa(2): jz 0x15(%rip)
1ffc(5): mov $0x9,%ecx
2001(3): mov %rbx,%rsi
2004(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2006(3): setnbe %al
2009(2): sbb $0x0,%al
200b(2): test %al,%al
200d(2): jnz 0xffffffe3(%rip)
200f(4): mov 0x8(%rdx),%r12
2013(2): xor %edi,%edi
2015(5): mov $0x5,%edx
201a(7): lea 0x364b(%rip),%rsi
2021(3): test %r12,%r12
2024(6): jz 0xc7(%rip)
202a(5): call 0xfffff4f6(%rip)
202f(7): lea 0x397a(%rip),%rcx
2036(7): lea 0x3646(%rip),%rdx
203d(3): mov %rax,%rsi
2040(5): mov $0x1,%edi
2045(2): xor %eax,%eax
2047(5): call 0xfffff679(%rip)
204c(2): xor %esi,%esi
204e(5): mov $0x5,%edi
2053(5): call 0xfffff65d(%rip)
2058(3): test %rax,%rax
205b(2): jz 0x1e(%rip)
205d(7): lea 0x362d(%rip),%rsi
2064(5): mov $0x3,%edx
2069(3): mov %rax,%rdi
206c(5): call 0xfffff444(%rip)
2071(2): test %eax,%eax
2073(6): jnz 0x10d(%rip)
2079(7): lea 0x3615(%rip),%rsi
2080(2): xor %edi,%edi
2082(5): mov $0x5,%edx
2087(5): call 0xfffff499(%rip)
208c(7): lea 0x3571(%rip),%rcx
2093(7): lea 0x3916(%rip),%rdx
209a(3): mov %rax,%rsi
209d(5): mov $0x1,%edi
20a2(2): xor %eax,%eax
20a4(5): call 0xfffff61c(%rip)
20a9(3): cmp %rbx,%r12
20ac(7): lea 0x3576(%rip),%rcx
20b3(7): lea 0x4287(%rip),%rbx
20ba(4): cmove %rcx,%rbx
20be(7): lea 0x395b(%rip),%rsi
20c5(2): xor %edi,%edi
20c7(5): mov $0x5,%edx
20cc(5): call 0xfffff454(%rip)
20d1(3): mov %rbx,%rcx
20d4(3): mov %rax,%rsi
20d7(3): mov %r12,%rdx
20da(5): mov $0x1,%edi
20df(2): xor %eax,%eax
20e1(5): call 0xfffff5df(%rip)
20e6(5): jmp 0xfffffd60(%rip)
20eb(5): call 0xfffff435(%rip)
20f0(7): lea 0x38b9(%rip),%rcx
20f7(7): lea 0x3585(%rip),%rdx
20fe(3): mov %rax,%rsi
2101(5): mov $0x1,%edi
2106(2): xor %eax,%eax
2108(5): call 0xfffff5b8(%rip)
210d(2): xor %esi,%esi
210f(5): mov $0x5,%edi
2114(5): call 0xfffff59c(%rip)
2119(3): test %rax,%rax
211c(2): jz 0x1a(%rip)
211e(7): lea 0x356c(%rip),%rsi
2125(5): mov $0x3,%edx
212a(3): mov %rax,%rdi
212d(5): call 0xfffff383(%rip)
2132(2): test %eax,%eax
2134(2): jnz 0x45(%rip)
2136(7): lea 0x3558(%rip),%rsi
213d(5): mov $0x5,%edx
2142(2): xor %edi,%edi
2144(7): lea 0x34b9(%rip),%r12
214b(7): lea 0x34d7(%rip),%rbx
2152(5): call 0xfffff3ce(%rip)
2157(7): lea 0x34a6(%rip),%rcx
215e(7): lea 0x384b(%rip),%rdx
2165(3): mov %rax,%rsi
2168(5): mov $0x1,%edi
216d(2): xor %eax,%eax
216f(5): call 0xfffff551(%rip)
2174(5): jmp 0xffffff4a(%rip)
2179(7): lea 0x3484(%rip),%r12
2180(7): mov 0x205f21(%rip),%r13
2187(7): lea 0x384a(%rip),%rsi
218e(2): xor %edi,%edi
2190(5): mov $0x5,%edx
2195(5): call 0xfffff38b(%rip)
219a(3): mov %r13,%rsi
219d(3): mov %rax,%rdi
21a0(5): call 0xfffff470(%rip)
21a5(5): jmp 0xfffffed4(%rip)

"set_extend_size" :
21b0(8): cmp $0x0,0x205f78(%rip)
21b8(1): push %rbx
21b9(5): mov $0x1,%eax
21be(3): mov %rdi,%rbx
21c1(2): jz 0x25(%rip)
21c3(7): lea 0x388e(%rip),%rsi
21ca(5): mov $0x5,%edx
21cf(2): xor %edi,%edi
21d1(5): call 0xfffff34f(%rip)
21d6(2): xor %esi,%esi
21d8(3): mov %rax,%rdx
21db(2): xor %edi,%edi
21dd(2): xor %eax,%eax
21df(5): call 0xfffff4f1(%rip)
21e4(2): xor %eax,%eax
21e6(7): mov %rbx,0x205f43(%rip)
21ed(1): pop %rbx
21ee(1): ret near (%rsp)

"set_increment_size" :
21f0(8): cmp $0x0,0x205f30(%rip)
21f8(1): push %rbx
21f9(5): mov $0x1,%eax
21fe(3): mov %rdi,%rbx
2201(2): jz 0x25(%rip)
2203(7): lea 0x387e(%rip),%rsi
220a(5): mov $0x5,%edx
220f(2): xor %edi,%edi
2211(5): call 0xfffff30f(%rip)
2216(2): xor %esi,%esi
2218(3): mov %rax,%rdx
221b(2): xor %edi,%edi
221d(2): xor %eax,%eax
221f(5): call 0xfffff4b1(%rip)
2224(2): xor %eax,%eax
2226(7): mov %rbx,0x205efb(%rip)
222d(1): pop %rbx
222e(1): ret near (%rsp)

"add_tab_stop" :
2230(1): push %rbp
2231(1): push %rbx
2232(3): mov %rdi,%rbx
2235(4): sub $0x8,%rsp
2239(7): mov 0x205ed0(%rip),%rax
2240(7): mov 0x205ed9(%rip),%rdi
2247(7): mov 0x205eca(%rip),%rsi
224e(3): test %rax,%rax
2251(2): jz 0x37(%rip)
2253(8): lea 0x0(,%rax,8),%rdx
225b(5): mov 0xfffffff8(%rdi,%rdx,1),%rcx
2260(3): cmp %rbx,%rcx
2263(6): jbe 0xcf(%rip)
2269(3): cmp %rsi,%rax
226c(2): jz 0x54(%rip)
226e(4): add $0x1,%rax
2272(4): mov %rbx,0x0(%rdi,%rdx,1)
2276(7): mov %rax,0x205e93(%rip)
227d(4): add $0x8,%rsp
2281(1): pop %rbx
2282(1): pop %rbp
2283(1): ret near (%rsp)
2284(4): nop 0x0(%rax)
2288(3): mov %rbx,%rbp
228b(3): cmp %rsi,%rax
228e(2): jz 0x34(%rip)
2290(4): mov %rbx,0x0(%rdi,%rax,8)
2294(7): cmp %rbp,0x205ffd(%rip)
229b(4): lea 0x1(%rax),%rdx
229f(7): mov %rdx,0x205e6a(%rip)
22a6(2): jnb 0x9(%rip)
22a8(7): mov %rbp,0x205fe9(%rip)
22af(4): add $0x8,%rsp
22b3(1): pop %rbx
22b4(1): pop %rbp
22b5(1): ret near (%rsp)
22b6(a): nop 0x0(%rax,%rax,1)
22c0(2): xor %ebp,%ebp
22c2(3): test %rdi,%rdi
22c5(2): jz 0x43(%rip)
22c7(a): mov $0x768614336404564649,%rax
22d1(3): cmp %rax,%rsi
22d4(2): jnbe 0x59(%rip)
22d6(3): mov %rsi,%rax
22d9(3): shr $0x1,%rax
22dc(5): lea 0x1(%rsi,%rax,1),%rsi
22e1(7): mov %rsi,0x205e30(%rip)
22e8(4): shl/sal $0x3,%rsi
22ec(5): call 0x2d44(%rip)
22f1(3): mov %rax,%rdi
22f4(7): mov %rax,0x205e25(%rip)
22fb(7): mov 0x205e0e(%rip),%rax
2302(2): jmp 0xffffff8e(%rip)
2304(4): nop 0x0(%rax)
2308(3): test %rsi,%rsi
230b(5): mov $0x10,%eax
2310(5): mov $0x8,%edx
2315(4): cmove %rax,%rsi
2319(3): mov %rdx,%rax
231c(2): xor %ecx,%ecx
231e(3): mul %rax,%rsi,%rdx
2321(2): jo 0x1c(%rip)
2323(3): test %rax,%rax
2326(2): js 0x7(%rip)
2328(3): test %rcx,%rcx
232b(2): jz 0xffffffb6(%rip)
232d(5): call 0x2ef3(%rip)
2332(3): mov %rbx,%rbp
2335(3): sub %rcx,%rbp
2338(5): jmp 0xffffff53(%rip)
233d(5): mov $0x1,%ecx
2342(2): jmp 0xffffffe1(%rip)

"parse_tab_stops" :
2350(2): push %r15
2352(2): push %r14
2354(2): push %r13
2356(2): push %r12
2358(1): push %rbp
2359(1): push %rbx
235a(4): sub $0x18,%rsp
235e(4): movzx (%rdi),%r15d
2362(3): test %r15b,%r15b
2365(6): jz 0x10c(%rip)
236b(3): mov %rdi,%rbx
236e(3): xor %r14d,%r14d
2371(5): mov $0x1,0x8(%rsp)
2376(8): mov $0x0,(%rsp)
237e(3): xor %r13d,%r13d
2381(3): xor %r12d,%r12d
2384(2): xor %ebp,%ebp
2386(2): jmp 0x68(%rip)
2388(8): nop 0x0(%rax,%rax,1)
2390(5): call 0xfffff3d0(%rip)
2395(3): mov (%rax),%rsi
2398(4): movzx %r15b,%ecx
239c(4): test $0x1,0x0(%rsi,%rcx,2)
23a0(2): jnz 0x54(%rip)
23a2(4): cmp $0x2f,%r15b
23a6(6): jz 0x122(%rip)
23ac(4): cmp $0x2b,%r15b
23b0(6): jz 0x158(%rip)
23b6(4): movsx %r15b,%edx
23ba(3): sub $0x30,%edx
23bd(3): cmp $0x9,%edx
23c0(6): jnbe 0x2b0(%rip)
23c6(3): test %bpl,%bpl
23c9(6): jnz 0x15f(%rip)
23cf(3): movsxd %edx,%r14
23d2(3): mov %rbx,%rax
23d5(4): mov %rbx,(%rsp)
23d9(5): mov $0x1,%ebp
23de(2): nop 
23e0(5): movzx 0x1(%rax),%r15d
23e5(4): lea 0x1(%rax),%rbx
23e9(3): test %r15b,%r15b
23ec(2): jz 0x4c(%rip)
23ee(4): cmp $0x2c,%r15b
23f2(2): jnz 0xffffff9e(%rip)
23f4(3): test %bpl,%bpl
23f7(6): jz 0xa9(%rip)
23fd(3): test %r12b,%r12b
2400(3): mov %r14,%rdi
2403(6): jnz 0xe5(%rip)
2409(3): test %r13b,%r13b
240c(6): jz 0xa4(%rip)
2412(5): call 0xfffffdde(%rip)
2417(2): test %al,%al
2419(3): mov %eax,%r13d
241c(6): jz 0x283(%rip)
2422(3): mov %rbx,%rax
2425(2): xor %ebp,%ebp
2427(5): movzx 0x1(%rax),%r15d
242c(4): lea 0x1(%rax),%rbx
2430(3): test %r15b,%r15b
2433(2): jnz 0xffffffbb(%rip)
2435(3): nop (%rax)
2438(3): test %bpl,%bpl
243b(2): jz 0x2b(%rip)
243d(5): cmp $0x0,0x8(%rsp)
2442(6): jz 0x25d(%rip)
2448(3): test %r12b,%r12b
244b(3): mov %r14,%rdi
244e(6): jnz 0x207(%rip)
2454(3): test %r13b,%r13b
2457(6): jz 0x1eb(%rip)
245d(5): call 0xfffffd93(%rip)
2462(4): mov %al,0x8(%rsp)
2466(5): cmp $0x0,0x8(%rsp)
246b(6): jz 0x234(%rip)
2471(4): add $0x18,%rsp
2475(1): pop %rbx
2476(1): pop %rbp
2477(2): pop %r12
2479(2): pop %r13
247b(2): pop %r14
247d(2): pop %r15
247f(1): ret near (%rsp)
2480(4): lea 0x0(%r14,%r14,4),%rax
2484(3): movsxd %edx,%rdx
2487(4): lea 0x0(%rdx,%rax,2),%rax
248b(3): cmp %r14,%rax
248e(6): jb 0xad(%rip)
2494(3): mov %rax,%r14
2497(9): nop 0x0(%rax,%rax,1)
24a0(3): mov %rbx,%rax
24a3(5): jmp 0xffffff3d(%rip)
24a8(8): nop 0x0(%rax,%rax,1)
24b0(5): call 0xfffffd80(%rip)
24b5(3): mov %r13d,%r12d
24b8(2): xor %ebp,%ebp
24ba(3): mov %rbx,%rax
24bd(5): jmp 0xffffff23(%rip)
24c2(6): nop 0x0(%rax,%rax,1)
24c8(3): test %bpl,%bpl
24cb(6): jnz 0xed(%rip)
24d1(3): xor %r13d,%r13d
24d4(3): mov %rbx,%rax
24d7(6): mov $0x1,%r12d
24dd(5): jmp 0xffffff03(%rip)
24e2(6): nop 0x0(%rax,%rax,1)
24e8(5): call 0xfffffcc8(%rip)
24ed(2): test %al,%al
24ef(3): mov %eax,%r12d
24f2(6): jz 0x1ad(%rip)
24f8(3): mov %rbx,%rax
24fb(2): xor %ebp,%ebp
24fd(5): jmp 0xfffffee3(%rip)
2502(6): nop 0x0(%rax,%rax,1)
2508(3): test %bpl,%bpl
250b(6): jnz 0xf5(%rip)
2511(3): xor %r12d,%r12d
2514(3): mov %rbx,%rax
2517(6): mov $0x1,%r13d
251d(5): jmp 0xfffffec3(%rip)
2522(6): nop 0x0(%rax,%rax,1)
2528(a): mov $0x1844674407370955161,%rax
2532(3): cmp %rax,%r14
2535(6): jbe 0xffffff4b(%rip)
253b(4): mov (%rsp),%r15
253f(7): lea 0x3807(%rip),%rsi
2546(3): mov %r15,%rdi
2549(5): call 0xfffff087(%rip)
254e(3): mov %r15,%rdi
2551(3): mov %rax,%rsi
2554(3): mov %rax,%rbx
2557(4): mov %r15,(%rsp)
255b(5): call 0x2d05(%rip)
2560(3): mov %rax,%rdi
2563(3): mov %rax,%r15
2566(5): call 0x242a(%rip)
256b(7): lea 0x37e6(%rip),%rsi
2572(5): mov $0x5,%edx
2577(2): xor %edi,%edi
2579(5): mov %rax,0x8(%rsp)
257e(5): call 0xffffefa2(%rip)
2583(5): mov 0x8(%rsp),%rcx
2588(3): mov %rax,%rdx
258b(2): xor %esi,%esi
258d(2): xor %eax,%eax
258f(2): xor %edi,%edi
2591(5): call 0xfffff13f(%rip)
2596(3): mov %r15,%rdi
2599(5): call 0xffffeee7(%rip)
259e(4): mov (%rsp),%rax
25a2(5): mov $0x0,0x8(%rsp)
25a7(5): lea 0xffffffff(%rax,%rbx,1),%rax
25ac(5): jmp 0xfffffe34(%rip)
25b1(7): nop 0x0(%rax)
25b8(3): mov %rbx,%rdi
25bb(3): xor %r13d,%r13d
25be(5): call 0x23d2(%rip)
25c3(7): lea 0x34ee(%rip),%rsi
25ca(3): mov %rax,%r12
25cd(5): mov $0x5,%edx
25d2(2): xor %edi,%edi
25d4(5): call 0xffffef4c(%rip)
25d9(3): mov %r12,%rcx
25dc(3): mov %rax,%rdx
25df(2): xor %esi,%esi
25e1(2): xor %eax,%eax
25e3(2): xor %edi,%edi
25e5(3): mov %ebp,%r12d
25e8(5): call 0xfffff0e8(%rip)
25ed(3): mov %rbx,%rax
25f0(5): mov $0x0,0x8(%rsp)
25f5(5): jmp 0xfffffdeb(%rip)
25fa(6): nop 0x0(%rax,%rax,1)
2600(3): mov %rbx,%rdi
2603(3): mov %ebp,%r13d
2606(5): call 0x238a(%rip)
260b(7): lea 0x34d6(%rip),%rsi
2612(3): mov %rax,%r12
2615(5): mov $0x5,%edx
261a(2): xor %edi,%edi
261c(5): call 0xffffef04(%rip)
2621(3): mov %r12,%rcx
2624(3): mov %rax,%rdx
2627(2): xor %esi,%esi
2629(2): xor %eax,%eax
262b(2): xor %edi,%edi
262d(3): xor %r12d,%r12d
2630(5): call 0xfffff0a0(%rip)
2635(3): mov %rbx,%rax
2638(5): mov $0x0,0x8(%rsp)
263d(5): jmp 0xfffffda3(%rip)
2642(4): add $0x18,%rsp
2646(1): pop %rbx
2647(1): pop %rbp
2648(2): pop %r12
264a(2): pop %r13
264c(2): pop %r14
264e(2): pop %r15
2650(5): jmp 0xfffffbe0(%rip)
2655(5): call 0xfffffb5b(%rip)
265a(4): mov %al,0x8(%rsp)
265e(5): cmp $0x0,0x8(%rsp)
2663(6): jnz 0xfffffe0e(%rip)
2669(2): jmp 0x36(%rip)
266b(5): nop 0x0(%rax,%rax,1)
2670(3): mov %rbx,%rdi
2673(5): call 0x231d(%rip)
2678(7): lea 0x3499(%rip),%rsi
267f(3): mov %rax,%rbx
2682(5): mov $0x5,%edx
2687(2): xor %edi,%edi
2689(5): call 0xffffee97(%rip)
268e(3): mov %rbx,%rcx
2691(3): mov %rax,%rdx
2694(2): xor %esi,%esi
2696(2): xor %edi,%edi
2698(2): xor %eax,%eax
269a(5): call 0xfffff036(%rip)
269f(5): mov $0x1,%edi
26a4(5): call 0xfffff06c(%rip)

"finalize_tab_stops" :
26b0(4): sub $0x8,%rsp
26b4(7): mov 0x205a55(%rip),%rsi
26bb(7): mov 0x205a5e(%rip),%rdi
26c2(3): test %rsi,%rsi
26c5(2): jz 0x7f(%rip)
26c7(3): mov (%rdi),%r8
26ca(3): test %r8,%r8
26cd(3): mov %r8,%rcx
26d0(6): jz 0xb0(%rip)
26d6(2): xor %eax,%eax
26d8(2): jmp 0x21(%rip)
26da(6): nop 0x0(%rax,%rax,1)
26e0(4): mov 0x0(%rdi,%rax,8),%rdx
26e4(3): test %rdx,%rdx
26e7(6): jz 0x99(%rip)
26ed(3): cmp %rdx,%rcx
26f0(6): jnb 0xb4(%rip)
26f6(3): mov %rdx,%rcx
26f9(4): add $0x1,%rax
26fd(3): cmp %rax,%rsi
2700(2): jnz 0xffffffe0(%rip)
2702(7): mov 0x205a1f(%rip),%rax
2709(3): test %rax,%rax
270c(2): jz 0x10(%rip)
270e(8): cmp $0x0,0x205a1a(%rip)
2716(6): jnz 0xb2(%rip)
271c(4): cmp $0x1,%rsi
2720(2): jz 0x12(%rip)
2722(b): mov $0x0,0x205a0b(%rip)
272d(4): add $0x8,%rsp
2731(1): ret near (%rsp)
2732(7): or 0x2059f7(%rip),%rax
2739(2): jnz 0xffffffe9(%rip)
273b(7): mov %r8,0x2059f6(%rip)
2742(2): jmp 0xffffffeb(%rip)
2744(7): mov 0x2059dd(%rip),%rdx
274b(7): mov 0x2059de(%rip),%rax
2752(3): test %rdx,%rdx
2755(2): jz 0x1d(%rip)
2757(3): test %rax,%rax
275a(2): jnz 0x6e(%rip)
275c(3): mov %rdx,%rax
275f(7): mov %rax,0x205b32(%rip)
2766(7): mov %rax,0x2059cb(%rip)
276d(4): add $0x8,%rsp
2771(1): ret near (%rsp)
2772(3): test %rax,%rax
2775(5): mov $0x8,%edx
277a(4): cmove %rdx,%rax
277e(2): jmp 0xffffffe1(%rip)
2780(7): lea 0x35ea(%rip),%rsi
2787(5): mov $0x5,%edx
278c(2): xor %edi,%edi
278e(5): call 0xffffed92(%rip)
2793(2): xor %esi,%esi
2795(3): mov %rax,%rdx
2798(5): mov $0x1,%edi
279d(2): xor %eax,%eax
279f(5): call 0xffffef31(%rip)
27a4(7): lea 0x35db(%rip),%rsi
27ab(5): mov $0x5,%edx
27b0(2): xor %edi,%edi
27b2(5): call 0xffffed6e(%rip)
27b7(2): xor %esi,%esi
27b9(3): mov %rax,%rdx
27bc(5): mov $0x1,%edi
27c1(2): xor %eax,%eax
27c3(5): call 0xffffef0d(%rip)
27c8(7): lea 0x3379(%rip),%rsi
27cf(5): mov $0x5,%edx
27d4(2): xor %edi,%edi
27d6(5): call 0xffffed4a(%rip)
27db(2): xor %esi,%esi
27dd(3): mov %rax,%rdx
27e0(5): mov $0x1,%edi
27e5(2): xor %eax,%eax
27e7(5): call 0xffffeee9(%rip)
27ec(4): nop 0x0(%rax)
27f0(7): mov 0x205941(%rip),%rcx
27f7(3): mov $0x0,(%rdx)
27fa(3): test %rcx,%rcx
27fd(2): jnz 0x63(%rip)
27ff(3): mov (%rsi),%rcx
2802(7): mov 0x205907(%rip),%rax
2809(3): cmp %rcx,%rax
280c(2): jbe 0x32(%rip)
280e(7): mov 0x20590b(%rip),%r9
2815(4): mov 0x0(%r9,%rcx,8),%r8
2819(3): cmp %r8,%rdi
281c(2): jb 0x53(%rip)
281e(4): add $0x1,%rcx
2822(2): jmp 0x14(%rip)
2824(4): nop 0x0(%rax)
2828(4): add $0x1,%rcx
282c(5): mov 0xfffffff8(%r9,%rcx,8),%r8
2831(3): cmp %r8,%rdi
2834(2): jb 0x3b(%rip)
2836(3): cmp %rcx,%rax
2839(3): mov %rcx,(%rsi)
283c(2): jnz 0xffffffec(%rip)
283e(7): mov 0x2058eb(%rip),%rcx
2845(3): test %rcx,%rcx
2848(2): jnz 0x18(%rip)
284a(7): mov 0x2058d7(%rip),%r8
2851(3): test %r8,%r8
2854(2): jnz 0x24(%rip)
2856(3): mov $0x1,(%rdx)
2859(2): jmp 0x16(%rip)
285b(5): nop 0x0(%rax,%rax,1)
2860(3): mov %rdi,%rax
2863(2): xor %edx,%edx
2865(4): lea 0x0(%rcx,%rdi,1),%r8
2869(3): div %rcx,%rax
286c(3): sub %rdx,%r8
286f(3): mov %r8,%rax
2872(1): ret near (%rsp)
2873(5): nop 0x0(%rax,%rax,1)
2878(7): mov 0x2058a1(%rip),%rdx
287f(4): lea 0x0(%r8,%rdi,1),%rcx
2883(5): sub 0xfffffff8(%rdx,%rax,8),%rdi
2888(2): xor %edx,%edx
288a(3): mov %rdi,%rax
288d(3): div %r8,%rax
2890(3): sub %rdx,%rcx
2893(3): mov %rcx,%r8
2896(2): jmp 0xffffffd9(%rip)

"get_next_tab_column" :
27f0(7): mov 0x205941(%rip),%rcx
27f7(3): mov $0x0,(%rdx)
27fa(3): test %rcx,%rcx
27fd(2): jnz 0x63(%rip)
27ff(3): mov (%rsi),%rcx
2802(7): mov 0x205907(%rip),%rax
2809(3): cmp %rcx,%rax
280c(2): jbe 0x32(%rip)
280e(7): mov 0x20590b(%rip),%r9
2815(4): mov 0x0(%r9,%rcx,8),%r8
2819(3): cmp %r8,%rdi
281c(2): jb 0x53(%rip)
281e(4): add $0x1,%rcx
2822(2): jmp 0x14(%rip)
2824(4): nop 0x0(%rax)
2828(4): add $0x1,%rcx
282c(5): mov 0xfffffff8(%r9,%rcx,8),%r8
2831(3): cmp %r8,%rdi
2834(2): jb 0x3b(%rip)
2836(3): cmp %rcx,%rax
2839(3): mov %rcx,(%rsi)
283c(2): jnz 0xffffffec(%rip)
283e(7): mov 0x2058eb(%rip),%rcx
2845(3): test %rcx,%rcx
2848(2): jnz 0x18(%rip)
284a(7): mov 0x2058d7(%rip),%r8
2851(3): test %r8,%r8
2854(2): jnz 0x24(%rip)
2856(3): mov $0x1,(%rdx)
2859(2): jmp 0x16(%rip)
285b(5): nop 0x0(%rax,%rax,1)
2860(3): mov %rdi,%rax
2863(2): xor %edx,%edx
2865(4): lea 0x0(%rcx,%rdi,1),%r8
2869(3): div %rcx,%rax
286c(3): sub %rdx,%r8
286f(3): mov %r8,%rax
2872(1): ret near (%rsp)
2873(5): nop 0x0(%rax,%rax,1)
2878(7): mov 0x2058a1(%rip),%rdx
287f(4): lea 0x0(%r8,%rdi,1),%rcx
2883(5): sub 0xfffffff8(%rdx,%rax,8),%rdi
2888(2): xor %edx,%edx
288a(3): mov %rdi,%rax
288d(3): div %r8,%rax
2890(3): sub %rdx,%rcx
2893(3): mov %rcx,%r8
2896(2): jmp 0xffffffd9(%rip)

"set_file_list" :
28a0(7): lea 0x205769(%rip),%rax
28a7(3): test %rdi,%rdi
28aa(7): mov $0x0,0x20584f(%rip)
28b1(4): cmove %rax,%rdi
28b5(7): mov %rdi,0x20584c(%rip)
28bc(1): ret near (%rsp)

"next_file" :
28c0(2): push %r12
28c2(1): push %rbp
28c3(1): push %rbx
28c4(4): sub $0x10,%rsp
28c8(3): test %rdi,%rdi
28cb(2): jz 0x44(%rip)
28cd(7): mov 0x205824(%rip),%rsi
28d4(3): test %rsi,%rsi
28d7(6): jz 0x1cb(%rip)
28dd(3): test $0x20,(%rdi)
28e0(3): mov %rdi,%rbp
28e3(6): jnz 0x17d(%rip)
28e9(7): lea 0x351a(%rip),%rbx
28f0(5): mov $0x2,%ecx
28f5(3): mov %rbx,%rdi
28f8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
28fa(3): mov %rbp,%rdi
28fd(3): setnbe %al
2900(2): sbb $0x0,%al
2902(2): test %al,%al
2904(6): jnz 0x10c(%rip)
290a(5): call 0xffffebd6(%rip)
290f(7): mov 0x2057f2(%rip),%rax
2916(4): lea 0x8(%rax),%rdx
291a(7): mov %rdx,0x2057e7(%rip)
2921(3): mov (%rax),%rdx
2924(3): test %rdx,%rdx
2927(6): jz 0xd9(%rip)
292d(7): lea 0x34d6(%rip),%rbx
2934(7): lea 0x2de9(%rip),%rbp
293b(2): jmp 0x65(%rip)
293d(3): nop (%rax)
2940(7): mov 0x205769(%rip),%rax
2947(7): mov $0x1,0x2057b2(%rip)
294e(3): test %rax,%rax
2951(2): jnz 0x7f(%rip)
2953(2): xor %edi,%edi
2955(5): mov $0x3,%esi
295a(5): call 0x1e66(%rip)
295f(3): mov %rax,%r12
2962(5): call 0xffffeb3e(%rip)
2967(2): mov (%rax),%esi
2969(7): lea 0x3453(%rip),%rdx
2970(2): xor %eax,%eax
2972(2): xor %edi,%edi
2974(3): mov %r12,%rcx
2977(5): call 0xffffed59(%rip)
297c(7): mov 0x205785(%rip),%rax
2983(a): mov $0x1,0x205763(%rip)
298d(4): lea 0x8(%rax),%rdx
2991(7): mov %rdx,0x205770(%rip)
2998(3): mov (%rax),%rdx
299b(3): test %rdx,%rdx
299e(2): jz 0x62(%rip)
29a0(5): mov $0x2,%ecx
29a5(3): mov %rdx,%rsi
29a8(3): mov %rbx,%rdi
29ab(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
29ad(3): setnbe %al
29b0(2): sbb $0x0,%al
29b2(2): test %al,%al
29b4(2): jz 0xffffff8c(%rip)
29b6(3): mov %rdx,%rdi
29b9(3): mov %rbp,%rsi
29bc(5): mov %rdx,0x8(%rsp)
29c1(5): call 0xffffed2f(%rip)
29c6(3): test %rax,%rax
29c9(5): mov 0x8(%rsp),%rdx
29ce(2): jz 0xffffff85(%rip)
29d0(3): mov %rax,%rdi
29d3(5): mov $0x2,%esi
29d8(5): mov %rax,0x8(%rsp)
29dd(7): mov %rdx,0x205714(%rip)
29e4(5): call 0x26c(%rip)
29e9(5): mov 0x8(%rsp),%rax
29ee(4): add $0x10,%rsp
29f2(1): pop %rbx
29f3(1): pop %rbp
29f4(2): pop %r12
29f6(1): ret near (%rsp)
29f7(9): nop 0x0(%rax,%rax,1)
2a00(4): add $0x10,%rsp
2a04(2): xor %eax,%eax
2a06(1): pop %rbx
2a07(1): pop %rbp
2a08(2): pop %r12
2a0a(1): ret near (%rsp)
2a0b(5): nop 0x0(%rax,%rax,1)
2a10(5): call 0x2870(%rip)
2a15(2): test %eax,%eax
2a17(6): jz 0xfffffef8(%rip)
2a1d(7): mov 0x2056d4(%rip),%rdx
2a24(5): mov $0x3,%esi
2a29(2): xor %edi,%edi
2a2b(5): call 0x1d95(%rip)
2a30(3): mov %rax,%rbx
2a33(5): call 0xffffea6d(%rip)
2a38(2): mov (%rax),%esi
2a3a(7): lea 0x3382(%rip),%rdx
2a41(3): mov %rbx,%rcx
2a44(2): xor %edi,%edi
2a46(2): xor %eax,%eax
2a48(5): call 0xffffec88(%rip)
2a4d(a): mov $0x1,0x205699(%rip)
2a57(5): jmp 0xfffffeb8(%rip)
2a5c(4): nop 0x0(%rax)
2a60(3): mov %rsi,%rdx
2a63(2): xor %edi,%edi
2a65(5): mov $0x3,%esi
2a6a(5): call 0x1d56(%rip)
2a6f(3): mov %rax,%rbx
2a72(5): call 0xffffea2e(%rip)
2a77(2): mov (%rax),%esi
2a79(7): lea 0x3343(%rip),%rdx
2a80(3): mov %rbx,%rcx
2a83(2): xor %edi,%edi
2a85(2): xor %eax,%eax
2a87(5): call 0xffffec49(%rip)
2a8c(a): mov $0x1,0x20565a(%rip)
2a96(7): mov 0x20565b(%rip),%rsi
2a9d(5): jmp 0xfffffe4c(%rip)
2aa2(7): lea 0x3307(%rip),%rcx
2aa9(7): lea 0x30c8(%rip),%rsi
2ab0(7): lea 0x32eb(%rip),%rdi
2ab7(5): mov $0x155,%edx
2abc(5): call 0xffffeaf4(%rip)

"cleanup_file_list_stdin" :
2ad0(7): cmp $0x0,0x205629(%rip)
2ad7(2): jnz 0x9(%rip)
2ad9(2): REP ret near (%rsp)
2adb(5): nop 0x0(%rax,%rax,1)
2ae0(4): sub $0x8,%rsp
2ae4(7): mov 0x2055c5(%rip),%rdi
2aeb(5): call 0x2795(%rip)
2af0(2): test %eax,%eax
2af2(2): jnz 0x7(%rip)
2af4(4): add $0x8,%rsp
2af8(1): ret near (%rsp)
2af9(5): call 0xffffe9a7(%rip)
2afe(2): mov (%rax),%esi
2b00(7): lea 0x3303(%rip),%rdx
2b07(5): mov $0x1,%edi
2b0c(2): xor %eax,%eax
2b0e(5): call 0xffffebc2(%rip)
2b13(3): nop (%rax)
2b16(a): nop 0x0(%rax,%rax,1)
2b20(1): push %rbx
2b21(7): mov 0x205580(%rip),%rbx
2b28(7): lea 0x3071(%rip),%rsi
2b2f(5): mov $0x5,%edx
2b34(2): xor %edi,%edi
2b36(5): call 0xffffe9ea(%rip)
2b3b(3): mov %rbx,%rsi
2b3e(3): mov %rax,%rdi
2b41(5): call 0xffffeacf(%rip)
2b46(7): mov 0x20555b(%rip),%rbx
2b4d(7): lea 0x308c(%rip),%rsi
2b54(2): xor %edi,%edi
2b56(5): mov $0x5,%edx
2b5b(5): call 0xffffe9c5(%rip)
2b60(3): mov %rbx,%rsi
2b63(3): mov %rax,%rdi
2b66(1): pop %rbx
2b67(5): jmp 0xffffeaa9(%rip)

"emit_tab_list_info" :
2b20(1): push %rbx
2b21(7): mov 0x205580(%rip),%rbx
2b28(7): lea 0x3071(%rip),%rsi
2b2f(5): mov $0x5,%edx
2b34(2): xor %edi,%edi
2b36(5): call 0xffffe9ea(%rip)
2b3b(3): mov %rbx,%rsi
2b3e(3): mov %rax,%rdi
2b41(5): call 0xffffeacf(%rip)
2b46(7): mov 0x20555b(%rip),%rbx
2b4d(7): lea 0x308c(%rip),%rsi
2b54(2): xor %edi,%edi
2b56(5): mov $0x5,%edx
2b5b(5): call 0xffffe9c5(%rip)
2b60(3): mov %rbx,%rsi
2b63(3): mov %rax,%rdi
2b66(1): pop %rbx
2b67(5): jmp 0xffffeaa9(%rip)

"close_stdout_set_file_name" :
2b70(7): mov %rdi,0x2055d1(%rip)
2b77(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2b80(7): mov %dil,0x2055b9(%rip)
2b87(1): ret near (%rsp)

"close_stdout" :
2b90(1): push %rbp
2b91(1): push %rbx
2b92(4): sub $0x8,%rsp
2b96(7): mov 0x20550b(%rip),%rdi
2b9d(5): call 0x2893(%rip)
2ba2(2): test %eax,%eax
2ba4(2): jz 0x18(%rip)
2ba6(5): call 0xffffe8fa(%rip)
2bab(7): cmp $0x0,0x20558e(%rip)
2bb2(3): mov %rax,%rbx
2bb5(2): jz 0x1e(%rip)
2bb7(3): cmp $0x20,(%rax)
2bba(2): jnz 0x19(%rip)
2bbc(7): mov 0x20551d(%rip),%rdi
2bc3(5): call 0x286d(%rip)
2bc8(2): test %eax,%eax
2bca(2): jnz 0x48(%rip)
2bcc(4): add $0x8,%rsp
2bd0(1): pop %rbx
2bd1(1): pop %rbp
2bd2(1): ret near (%rsp)
2bd3(7): lea 0x2b40(%rip),%rsi
2bda(2): xor %edi,%edi
2bdc(5): mov $0x5,%edx
2be1(5): call 0xffffe93f(%rip)
2be6(7): mov 0x20555b(%rip),%rdi
2bed(3): mov %rax,%rbp
2bf0(3): test %rdi,%rdi
2bf3(2): jz 0x2a(%rip)
2bf5(5): call 0x1b9b(%rip)
2bfa(2): mov (%rbx),%esi
2bfc(7): lea 0x31bc(%rip),%rdx
2c03(3): mov %rax,%rcx
2c06(3): mov %rbp,%r8
2c09(2): xor %edi,%edi
2c0b(2): xor %eax,%eax
2c0d(5): call 0xffffeac3(%rip)
2c12(6): mov 0x205410(%rip),%edi
2c18(5): call 0xffffe8a8(%rip)
2c1d(2): mov (%rbx),%esi
2c1f(7): lea 0x319d(%rip),%rdx
2c26(3): mov %rax,%rcx
2c29(2): xor %edi,%edi
2c2b(2): xor %eax,%eax
2c2d(5): call 0xffffeaa3(%rip)
2c32(2): jmp 0xffffffe0(%rip)

"fadvise" :
2c50(3): test %rdi,%rdi
2c53(2): jz 0x1d(%rip)
2c55(1): push %rbx
2c56(2): mov %esi,%ebx
2c58(5): call 0xffffe9e8(%rip)
2c5d(2): mov %ebx,%ecx
2c5f(2): xor %edx,%edx
2c61(2): xor %esi,%esi
2c63(1): pop %rbx
2c64(2): mov %eax,%edi
2c66(5): jmp 0xffffe97a(%rip)
2c6b(5): nop 0x0(%rax,%rax,1)
2c70(2): REP ret near (%rsp)

"set_program_name" :
2c80(3): test %rdi,%rdi
2c83(1): push %rbx
2c84(2): jz 0x79(%rip)
2c86(5): mov $0x2f,%esi
2c8b(3): mov %rdi,%rbx
2c8e(5): call 0xffffe902(%rip)
2c93(3): test %rax,%rax
2c96(2): jz 0x57(%rip)
2c98(4): lea 0x1(%rax),%r8
2c9c(3): mov %r8,%rdx
2c9f(3): sub %rbx,%rdx
2ca2(4): cmp $0x6,%rdx
2ca6(2): jle 0x47(%rip)
2ca8(4): lea 0xfffffffa(%rax),%rsi
2cac(7): lea 0x314d(%rip),%rdi
2cb3(5): mov $0x7,%ecx
2cb8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2cba(3): setnbe %dl
2cbd(3): sbb $0x0,%dl
2cc0(2): test %dl,%dl
2cc2(2): jnz 0x2b(%rip)
2cc4(7): lea 0x313d(%rip),%rdi
2ccb(5): mov $0x3,%ecx
2cd0(3): mov %r8,%rsi
2cd3(3): mov %r8,%rbx
2cd6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2cd8(3): setnbe %dl
2cdb(3): sbb $0x0,%dl
2cde(2): test %dl,%dl
2ce0(2): jnz 0xd(%rip)
2ce2(4): lea 0x4(%rax),%rbx
2ce6(7): mov %rbx,0x2053b3(%rip)
2ced(7): mov %rbx,0x20545c(%rip)
2cf4(7): mov %rbx,0x2053cd(%rip)
2cfb(1): pop %rbx
2cfc(1): ret near (%rsp)
2cfd(7): mov 0x2053dc(%rip),%rcx
2d04(7): lea 0x30bd(%rip),%rdi
2d0b(5): mov $0x37,%edx
2d10(5): mov $0x1,%esi
2d15(5): call 0xffffea0b(%rip)
2d1a(5): call 0xffffe776(%rip)

"gettext_quote.part.1" :
2d20(1): push %rbp
2d21(1): push %rbx
2d22(3): mov %rdi,%rbp
2d25(2): mov %esi,%ebx
2d27(4): sub $0x8,%rsp
2d2b(5): call 0x27e5(%rip)
2d30(3): movzx (%rax),%edx
2d33(3): and $0xdf,%edx
2d36(3): cmp $0x55,%dl
2d39(2): jz 0x77(%rip)
2d3b(3): cmp $0x47,%dl
2d3e(2): jz 0x22(%rip)
2d40(7): lea 0x30d4(%rip),%rax
2d47(7): lea 0x30cf(%rip),%rdx
2d4e(3): cmp $0x9,%ebx
2d51(4): cmovne %rdx,%rax
2d55(4): add $0x8,%rsp
2d59(1): pop %rbx
2d5a(1): pop %rbp
2d5b(1): ret near (%rsp)
2d5c(4): nop 0x0(%rax)
2d60(4): movzx 0x1(%rax),%edx
2d64(3): and $0xdf,%edx
2d67(3): cmp $0x42,%dl
2d6a(2): jnz 0xffffffd6(%rip)
2d6c(4): cmp $0x31,0x2(%rax)
2d70(2): jnz 0xffffffd0(%rip)
2d72(4): cmp $0x38,0x3(%rax)
2d76(2): jnz 0xffffffca(%rip)
2d78(4): cmp $0x30,0x4(%rax)
2d7c(2): jnz 0xffffffc4(%rip)
2d7e(4): cmp $0x33,0x5(%rax)
2d82(2): jnz 0xffffffbe(%rip)
2d84(4): cmp $0x30,0x6(%rax)
2d88(2): jnz 0xffffffb8(%rip)
2d8a(4): cmp $0x0,0x7(%rax)
2d8e(2): jnz 0xffffffb2(%rip)
2d90(4): cmp $0x60,0x0(%rbp)
2d94(7): lea 0x3079(%rip),%rax
2d9b(7): lea 0x3076(%rip),%rdx
2da2(4): cmovne %rdx,%rax
2da6(4): add $0x8,%rsp
2daa(1): pop %rbx
2dab(1): pop %rbp
2dac(1): ret near (%rsp)
2dad(3): nop (%rax)
2db0(4): movzx 0x1(%rax),%edx
2db4(3): and $0xdf,%edx
2db7(3): cmp $0x54,%dl
2dba(2): jnz 0xffffff86(%rip)
2dbc(4): movzx 0x2(%rax),%edx
2dc0(3): and $0xdf,%edx
2dc3(3): cmp $0x46,%dl
2dc6(6): jnz 0xffffff7a(%rip)
2dcc(4): cmp $0x2d,0x3(%rax)
2dd0(6): jnz 0xffffff70(%rip)
2dd6(4): cmp $0x38,0x4(%rax)
2dda(6): jnz 0xffffff66(%rip)
2de0(4): cmp $0x0,0x5(%rax)
2de4(6): jnz 0xffffff5c(%rip)
2dea(4): cmp $0x60,0x0(%rbp)
2dee(7): lea 0x3017(%rip),%rax
2df5(7): lea 0x3014(%rip),%rdx
2dfc(4): cmovne %rdx,%rax
2e00(4): add $0x8,%rsp
2e04(1): pop %rbx
2e05(1): pop %rbp
2e06(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2e10(2): push %r15
2e12(2): push %r14
2e14(3): mov %r8d,%r15d
2e17(2): push %r13
2e19(2): push %r12
2e1b(3): mov %rdi,%r14
2e1e(1): push %rbp
2e1f(1): push %rbx
2e20(3): mov %r9d,%ebx
2e23(3): mov %rsi,%r13
2e26(3): mov %rcx,%rbp
2e29(3): and $0x2,%ebx
2e2c(7): sub $0xb8,%rsp
2e33(8): mov 0xf0(%rsp),%rax
2e3b(5): mov %rdx,0x10(%rsp)
2e40(5): mov %r8d,0x8(%rsp)
2e45(5): mov %r9d,0x78(%rsp)
2e4a(5): mov %rax,0x20(%rsp)
2e4f(8): mov 0xf8(%rsp),%rax
2e57(5): mov %rax,0x68(%rsp)
2e5c(8): mov 0x100(%rsp),%rax
2e64(5): mov %rax,0x60(%rsp)
2e69(9): mov $0x28,%rax
2e72(8): mov %rax,0xa8(%rsp)
2e7a(2): xor %eax,%eax
2e7c(5): call 0xffffe6b4(%rip)
2e81(4): cmp $0xa,%r15d
2e85(5): mov %rax,0x58(%rsp)
2e8a(6): jnbe 0x11b5(%rip)
2e90(7): lea 0x2fe9(%rip),%rcx
2e97(3): mov %r15d,%edx
2e9a(4): movsxd 0x0(%rcx,%rdx,4),%rax
2e9e(3): add %rcx,%rax
2ea1(2): jmp %rax
2ea3(5): mov $0x1,0xe(%rsp)
2ea8(5): mov $0x0,0x7c(%rsp)
2ead(3): xor %r12d,%r12d
2eb0(9): mov $0x0,0x50(%rsp)
2eb9(5): mov $0x1,0xf(%rsp)
2ebe(5): mov $0x0,0xd(%rsp)
2ec3(7): lea 0x2f53(%rip),%rax
2eca(9): mov $0x1,0x18(%rsp)
2ed3(3): xor %r15d,%r15d
2ed6(8): mov $0x2,0x8(%rsp)
2ede(5): mov %rax,0x48(%rsp)
2ee3(3): xor %r11d,%r11d
2ee6(3): mov %rbp,%rax
2ee9(3): mov %r12d,%r8d
2eec(3): mov %r11,%rbp
2eef(3): mov %rax,%r11
2ef2(6): nop 0x0(%rax,%rax,1)
2ef8(3): cmp %rbp,%r11
2efb(4): setnz %r12b
2eff(4): cmp $0xffffffff,%r11
2f03(2): jnz 0xf(%rip)
2f05(5): mov 0x10(%rsp),%rax
2f0a(4): cmp $0x0,0x0(%rax,%rbp,1)
2f0e(4): setnz %r12b
2f12(3): test %r12b,%r12b
2f15(6): jz 0x65b(%rip)
2f1b(5): cmp $0x2,0x8(%rsp)
2f20(5): mov 0x10(%rsp),%rdi
2f25(4): lea 0x0(%rdi,%rbp,1),%r9
2f29(3): setnz %al
2f2c(4): and 0xd(%rsp),%al
2f30(3): mov %eax,%r10d
2f33(6): jz 0xad(%rip)
2f39(5): mov 0x18(%rsp),%rax
2f3e(3): test %rax,%rax
2f41(6): jz 0x42f(%rip)
2f47(4): cmp $0xffffffff,%r11
2f4b(5): lea 0x0(%rbp,%rax,1),%rbx
2f50(2): jnz 0x30(%rip)
2f52(4): cmp $0x1,%rax
2f56(2): jbe 0x2a(%rip)
2f58(5): mov %r8b,0x38(%rsp)
2f5d(5): mov %r10b,0x30(%rsp)
2f62(5): mov %r9,0x28(%rsp)
2f67(5): call 0xffffe5d9(%rip)
2f6c(6): movzx 0x38(%rsp),%r8d
2f72(6): movzx 0x30(%rsp),%r10d
2f78(3): mov %rax,%r11
2f7b(5): mov 0x28(%rsp),%r9
2f80(3): cmp %r11,%rbx
2f83(5): mov %r10b,0x28(%rsp)
2f88(6): jnbe 0x5b8(%rip)
2f8e(5): mov 0x18(%rsp),%rdx
2f93(5): mov 0x48(%rsp),%rsi
2f98(3): mov %r9,%rdi
2f9b(5): mov %r11,0x40(%rsp)
2fa0(5): mov %r8b,0x38(%rsp)
2fa5(5): mov %r9,0x30(%rsp)
2faa(5): call 0xffffe656(%rip)
2faf(2): test %eax,%eax
2fb1(5): mov 0x30(%rsp),%r9
2fb6(6): movzx 0x38(%rsp),%r8d
2fbc(5): mov 0x40(%rsp),%r11
2fc1(6): jnz 0x57f(%rip)
2fc7(5): cmp $0x0,0xf(%rsp)
2fcc(6): movzx 0x28(%rsp),%r10d
2fd2(6): jnz 0xf83(%rip)
2fd8(8): nop 0x0(%rax,%rax,1)
2fe0(4): movzx (%r9),%ebx
2fe4(3): cmp $0x7e,%bl
2fe7(6): jnbe 0x321(%rip)
2fed(7): lea 0x2eb8(%rip),%rcx
2ff4(3): movzx %bl,%edx
2ff7(4): movsxd 0x0(%rcx,%rdx,4),%rax
2ffb(3): add %rcx,%rax
2ffe(2): jmp %rax
3000(3): xor %r10d,%r10d
3003(4): cmp $0x1,%r11
3007(3): setnz %al
300a(4): cmp $0xffffffff,%r11
300e(2): jnz 0xe(%rip)
3010(5): mov 0x10(%rsp),%rax
3015(4): cmp $0x0,0x1(%rax)
3019(3): setnz %al
301c(5): cmp $0x2,0x8(%rsp)
3021(3): setz %dl
3024(2): test %al,%al
3026(6): jz 0x252(%rip)
302c(3): xor %r12d,%r12d
302f(2): xor %eax,%eax
3031(7): nop 0x0(%rax)
3038(5): cmp $0x1,0xd(%rsp)
303d(6): jnz 0x115(%rip)
3043(2): test %dl,%dl
3045(6): jnz 0x10d(%rip)
304b(5): mov 0x20(%rsp),%rsi
3050(3): test %rsi,%rsi
3053(2): jz 0x16(%rip)
3055(2): mov %ebx,%edx
3057(3): shr $0x5,%dl
305a(3): movzx %dl,%edx
305d(3): mov 0x0(%rsi,%rdx,4),%edx
3060(3): bt %ebx,%edx
3063(6): jb 0x150(%rip)
3069(3): test %r10b,%r10b
306c(6): jnz 0x147(%rip)
3072(3): xor $0x1,%eax
3075(4): add $0x1,%rbp
3079(3): and %r8d,%eax
307c(2): test %al,%al
307e(2): jz 0x22(%rip)
3080(3): cmp %r15,%r13
3083(2): jbe 0x7(%rip)
3085(5): mov $0x27,0x0(%r14,%r15,1)
308a(4): lea 0x1(%r15),%rax
308e(3): cmp %rax,%r13
3091(2): jbe 0x8(%rip)
3093(6): mov $0x27,0x1(%r14,%r15,1)
3099(4): add $0x2,%r15
309d(3): xor %r8d,%r8d
30a0(3): cmp %r13,%r15
30a3(2): jnb 0x6(%rip)
30a5(4): mov %bl,0x0(%r14,%r15,1)
30a9(5): movzx 0xe(%rsp),%edi
30ae(4): add $0x1,%r15
30b2(5): mov $0x0,%eax
30b7(3): test %r12b,%r12b
30ba(3): cmove %eax,%edi
30bd(5): mov %dil,0xe(%rsp)
30c2(5): jmp 0xfffffe36(%rip)
30c7(9): nop 0x0(%rax,%rax,1)
30d0(3): xor %r10d,%r10d
30d3(4): mov 0x8(%rsp),%eax
30d7(3): cmp $0x2,%eax
30da(6): jz 0x5be(%rip)
30e0(3): cmp $0x5,%eax
30e3(6): jz 0x575(%rip)
30e9(3): cmp $0x2,%eax
30ec(5): mov $0x3f,%ebx
30f1(3): setz %dl
30f4(3): xor %r12d,%r12d
30f7(2): xor %eax,%eax
30f9(5): jmp 0xffffff3f(%rip)
30fe(2): nop 
3100(3): xor %r10d,%r10d
3103(5): cmp $0x2,0x8(%rsp)
3108(6): jz 0x508(%rip)
310e(5): mov %r12b,0x7c(%rsp)
3113(2): xor %edx,%edx
3115(2): xor %eax,%eax
3117(5): mov $0x27,%ebx
311c(5): jmp 0xffffff1c(%rip)
3121(7): nop 0x0(%rax)
3128(5): mov $0x9,%edx
312d(5): mov $0x74,%ebx
3132(5): cmp $0x2,0x8(%rsp)
3137(3): setz %al
313a(4): and 0xf(%rsp),%al
313e(6): jnz 0x150(%rip)
3144(5): cmp $0x0,0xd(%rsp)
3149(2): jnz 0x67(%rip)
314b(2): mov %edx,%ebx
314d(3): xor %r12d,%r12d
3150(2): xor %eax,%eax
3152(5): cmp $0x0,0xf(%rsp)
3157(6): jnz 0xfffffef4(%rip)
315d(5): jmp 0xffffff0c(%rip)
3162(6): nop 0x0(%rax,%rax,1)
3168(5): mov $0x8,%edx
316d(5): mov $0x62,%ebx
3172(2): jmp 0xffffffd2(%rip)
3174(4): nop 0x0(%rax)
3178(5): cmp $0x2,0x8(%rsp)
317d(6): jz 0x3d3(%rip)
3183(5): cmp $0x0,0xd(%rsp)
3188(6): jz 0x218(%rip)
318e(5): cmp $0x0,0xf(%rsp)
3193(6): jz 0x20d(%rip)
3199(6): cmp $0x0,0x18(%rsp)
319f(6): jnz 0x3bc(%rip)
31a5(5): mov $0x5c,%ebx
31aa(6): nop 0x0(%rax,%rax,1)
31b0(3): xor %r12d,%r12d
31b3(5): cmp $0x2,0x8(%rsp)
31b8(3): setz %dl
31bb(5): cmp $0x0,0xf(%rsp)
31c0(2): mov %edx,%eax
31c2(6): jnz 0x856(%rip)
31c8(3): mov %r8d,%eax
31cb(3): xor $0x1,%eax
31ce(2): and %dl,%al
31d0(2): jz 0x31(%rip)
31d2(3): cmp %r15,%r13
31d5(2): jbe 0x7(%rip)
31d7(5): mov $0x27,0x0(%r14,%r15,1)
31dc(4): lea 0x1(%r15),%rdx
31e0(3): cmp %rdx,%r13
31e3(2): jbe 0x8(%rip)
31e5(6): mov $0x24,0x1(%r14,%r15,1)
31eb(4): lea 0x2(%r15),%rdx
31ef(3): cmp %rdx,%r13
31f2(2): jbe 0x8(%rip)
31f4(6): mov $0x27,0x2(%r14,%r15,1)
31fa(4): add $0x3,%r15
31fe(3): mov %eax,%r8d
3201(3): cmp %r15,%r13
3204(2): jbe 0x7(%rip)
3206(5): mov $0x5c,0x0(%r14,%r15,1)
320b(4): add $0x1,%r15
320f(4): add $0x1,%rbp
3213(5): jmp 0xfffffe8d(%rip)
3218(8): nop 0x0(%rax,%rax,1)
3220(5): cmp $0x0,0xd(%rsp)
3225(6): jnz 0x1ce(%rip)
322b(2): xor %edx,%edx
322d(5): test $0x1,0x78(%rsp)
3232(6): jz 0xffffff19(%rip)
3238(4): add $0x1,%rbp
323c(5): jmp 0xfffffcbc(%rip)
3241(7): nop 0x0(%rax)
3248(5): cmp $0x2,0x8(%rsp)
324d(3): setz %dl
3250(2): xor %eax,%eax
3252(5): jmp 0xfffffde6(%rip)
3257(9): nop 0x0(%rax,%rax,1)
3260(5): mov $0x7,%edx
3265(5): mov $0x61,%ebx
326a(5): jmp 0xfffffeda(%rip)
326f(1): nop 
3270(5): cmp $0x2,0x8(%rsp)
3275(3): setz %dl
3278(3): test %rbp,%rbp
327b(6): jnz 0xfffffdb1(%rip)
3281(5): movzx 0xf(%rsp),%eax
3286(2): and %dl,%al
3288(6): jz 0xfffffdb0(%rip)
328e(3): mov %r11,%rbp
3291(8): mov $0x2,0x8(%rsp)
3299(5): jmp 0x700(%rip)
329e(2): nop 
32a0(5): cmp $0x2,0x8(%rsp)
32a5(3): setz %dl
32a8(3): xor %r12d,%r12d
32ab(2): jmp 0xffffffd6(%rip)
32ad(3): nop (%rax)
32b0(5): cmp $0x2,0x8(%rsp)
32b5(5): mov $0x20,%ebx
32ba(3): setz %dl
32bd(2): jmp 0xffffffc4(%rip)
32bf(1): nop 
32c0(5): mov $0xd,%edx
32c5(5): mov $0x72,%ebx
32ca(5): jmp 0xfffffe68(%rip)
32cf(1): nop 
32d0(5): mov $0xc,%edx
32d5(5): mov $0x66,%ebx
32da(5): jmp 0xfffffe6a(%rip)
32df(1): nop 
32e0(5): mov $0xb,%edx
32e5(5): mov $0x76,%ebx
32ea(5): jmp 0xfffffe5a(%rip)
32ef(1): nop 
32f0(5): mov $0xa,%edx
32f5(5): mov $0x6e,%ebx
32fa(5): jmp 0xfffffe38(%rip)
32ff(1): nop 
3300(3): xor %r10d,%r10d
3303(5): nop 0x0(%rax,%rax,1)
3308(6): cmp $0x1,0x58(%rsp)
330e(6): jnz 0x3aa(%rip)
3314(5): mov %r11,0x38(%rsp)
3319(5): mov %r8b,0x30(%rsp)
331e(5): mov %r10b,0x28(%rsp)
3323(5): call 0xffffe43d(%rip)
3328(3): mov (%rax),%rcx
332b(3): movzx %bl,%edx
332e(6): movzx 0x28(%rsp),%r10d
3334(6): movzx 0x30(%rsp),%r8d
333a(5): mov 0x38(%rsp),%r11
333f(5): mov $0x1,%edi
3344(4): movzx 0x0(%rcx,%rdx,2),%eax
3348(4): and $0x4000,%ax
334c(4): setnz %r12b
3350(3): setz %al
3353(4): and 0xd(%rsp),%al
3357(2): test %al,%al
3359(6): jnz 0x998(%rip)
335f(5): cmp $0x2,0x8(%rsp)
3364(3): setz %dl
3367(5): jmp 0xfffffcd1(%rip)
336c(4): nop 0x0(%rax)
3370(4): movzx (%r9),%ebx
3374(3): cmp $0x7e,%bl
3377(2): jnbe 0xffffff89(%rip)
3379(7): lea 0x2d28(%rip),%rcx
3380(3): movzx %bl,%edx
3383(4): movsxd 0x0(%rcx,%rdx,4),%rax
3387(3): add %rcx,%rax
338a(2): jmp %rax
338c(4): nop 0x0(%rax)
3390(3): xor %r10d,%r10d
3393(5): cmp $0x0,0xd(%rsp)
3398(6): jnz 0xfffffdf6(%rip)
339e(2): nop 
33a0(5): mov $0x5c,%edx
33a5(5): mov $0x5c,%ebx
33aa(5): jmp 0xfffffd9a(%rip)
33af(1): nop 
33b0(5): mov $0xc,%edx
33b5(3): xor %r10d,%r10d
33b8(5): mov $0x66,%ebx
33bd(5): jmp 0xfffffd87(%rip)
33c2(6): nop 0x0(%rax,%rax,1)
33c8(5): mov $0xa,%edx
33cd(3): xor %r10d,%r10d
33d0(5): mov $0x6e,%ebx
33d5(5): jmp 0xfffffd5d(%rip)
33da(6): nop 0x0(%rax,%rax,1)
33e0(5): mov $0x61,%ebx
33e5(5): jmp 0xfffffdcb(%rip)
33ea(6): nop 0x0(%rax,%rax,1)
33f0(3): xor %r10d,%r10d
33f3(5): cmp $0x2,0x8(%rsp)
33f8(3): setz %dl
33fb(5): cmp $0x0,0xf(%rsp)
3400(6): jnz 0xb9a(%rip)
3406(3): mov %r8d,%eax
3409(3): mov %r15,%rcx
340c(3): xor $0x1,%eax
340f(2): and %dl,%al
3411(2): jz 0x2f(%rip)
3413(3): cmp %r15,%r13
3416(2): jbe 0x7(%rip)
3418(5): mov $0x27,0x0(%r14,%r15,1)
341d(4): lea 0x1(%r15),%rcx
3421(3): cmp %rcx,%r13
3424(2): jbe 0x8(%rip)
3426(6): mov $0x24,0x1(%r14,%r15,1)
342c(4): lea 0x2(%r15),%rcx
3430(3): cmp %rcx,%r13
3433(6): jnbe 0x636(%rip)
3439(4): lea 0x3(%r15),%rcx
343d(3): mov %eax,%r8d
3440(3): cmp %rcx,%r13
3443(2): jbe 0x7(%rip)
3445(5): mov $0x5c,0x0(%r14,%rcx,1)
344a(5): cmp $0x2,0x8(%rsp)
344f(4): lea 0x1(%rcx),%r15
3453(6): jz 0x606(%rip)
3459(4): lea 0x1(%rbp),%rax
345d(3): cmp %r11,%rax
3460(2): jnb 0x1b(%rip)
3462(5): mov 0x10(%rsp),%rax
3467(5): movzx 0x1(%rax,%rbp,1),%eax
346c(4): mov %al,0x28(%rsp)
3470(3): sub $0x30,%eax
3473(2): cmp $0x9,%al
3475(6): jbe 0x834(%rip)
347b(3): mov %r12d,%eax
347e(5): mov $0x30,%ebx
3483(3): xor %r12d,%r12d
3486(5): jmp 0xfffffbb2(%rip)
348b(5): nop 0x0(%rax,%rax,1)
3490(5): cmp $0x2,0x8(%rsp)
3495(3): mov %r10d,%r12d
3498(3): setz %dl
349b(3): xor %r10d,%r10d
349e(2): xor %eax,%eax
34a0(5): jmp 0xfffffb98(%rip)
34a5(3): nop (%rax)
34a8(5): cmp $0x2,0x8(%rsp)
34ad(3): setz %dl
34b0(3): xor %r10d,%r10d
34b3(5): jmp 0xfffffdc5(%rip)
34b8(8): nop 0x0(%rax,%rax,1)
34c0(5): cmp $0x2,0x8(%rsp)
34c5(3): setz %dl
34c8(3): xor %r10d,%r10d
34cb(3): xor %r12d,%r12d
34ce(5): jmp 0xfffffdb3(%rip)
34d3(5): nop 0x0(%rax,%rax,1)
34d8(5): cmp $0x2,0x8(%rsp)
34dd(3): mov %r10d,%r12d
34e0(5): mov $0x20,%ebx
34e5(3): setz %dl
34e8(3): xor %r10d,%r10d
34eb(5): jmp 0xfffffd96(%rip)
34f0(5): mov $0xd,%edx
34f5(3): xor %r10d,%r10d
34f8(5): mov $0x72,%ebx
34fd(5): jmp 0xfffffc35(%rip)
3502(6): nop 0x0(%rax,%rax,1)
3508(5): mov $0x76,%ebx
350d(5): jmp 0xfffffca3(%rip)
3512(6): nop 0x0(%rax,%rax,1)
3518(5): mov $0x9,%edx
351d(3): xor %r10d,%r10d
3520(5): mov $0x74,%ebx
3525(5): jmp 0xfffffc0d(%rip)
352a(6): nop 0x0(%rax,%rax,1)
3530(5): mov $0x62,%ebx
3535(5): jmp 0xfffffc7b(%rip)
353a(6): nop 0x0(%rax,%rax,1)
3540(3): xor %r10d,%r10d
3543(5): jmp 0xfffffa9d(%rip)
3548(8): nop 0x0(%rax,%rax,1)
3550(5): cmp $0x0,0xf(%rsp)
3555(6): jnz 0x96b(%rip)
355b(4): add $0x1,%rbp
355f(3): mov %r8d,%eax
3562(3): xor %r12d,%r12d
3565(5): mov $0x5c,%ebx
356a(5): jmp 0xfffffb12(%rip)
356f(1): nop 
3570(5): cmp $0x2,0x8(%rsp)
3575(5): movzx 0xf(%rsp),%ebx
357a(3): mov %r8d,%r12d
357d(3): mov %r11,%rbp
3580(3): setz %dl
3583(2): mov %ebx,%eax
3585(3): test %r15,%r15
3588(3): setz %cl
358b(2): and %edx,%eax
358d(2): and %cl,%al
358f(6): jnz 0xa67(%rip)
3595(2): mov %ebx,%eax
3597(3): xor $0x1,%eax
359a(2): and %al,%dl
359c(6): jz 0x970(%rip)
35a2(5): cmp $0x0,0x7c(%rsp)
35a7(6): jz 0x963(%rip)
35ad(5): cmp $0x0,0xe(%rsp)
35b2(6): jnz 0x9fb(%rip)
35b8(3): test %r13,%r13
35bb(3): setz %al
35be(6): cmp $0x0,0x50(%rsp)
35c4(3): setnz %dl
35c7(2): and %dl,%al
35c9(6): jz 0xa23(%rip)
35cf(5): mov 0x50(%rsp),%r13
35d4(7): lea 0x2842(%rip),%rbx
35db(4): mov $0x27,(%r14)
35df(8): mov $0x2,0x8(%rsp)
35e7(6): mov $0x1,%r15d
35ed(9): mov $0x1,0x18(%rsp)
35f6(5): mov $0x0,0xf(%rsp)
35fb(5): mov %rbx,0x48(%rsp)
3600(4): mov %al,0x7c(%rsp)
3604(5): jmp 0xfffff8df(%rip)
3609(7): nop 0x0(%rax)
3610(5): cmp $0x0,0xf(%rsp)
3615(6): jnz 0x8ab(%rip)
361b(3): test %r13,%r13
361e(6): jz 0x402(%rip)
3624(2): xor %edx,%edx
3626(6): cmp $0x0,0x50(%rsp)
362c(6): jnz 0x3f4(%rip)
3632(5): mov %r13,0x50(%rsp)
3637(4): add $0x3,%r15
363b(2): xor %eax,%eax
363d(5): mov %r12b,0x7c(%rsp)
3642(3): xor %r8d,%r8d
3645(3): mov %rdx,%r13
3648(5): mov $0x27,%ebx
364d(5): jmp 0xfffffa1c(%rip)
3652(6): nop 0x0(%rax,%rax,1)
3658(5): test $0x4,0x78(%rsp)
365d(2): jz 0x23(%rip)
365f(4): lea 0x2(%rbp),%rcx
3663(3): cmp %r11,%rcx
3666(2): jnb 0x1a(%rip)
3668(5): mov 0x10(%rsp),%rax
366d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3672(6): jz 0x790(%rip)
3678(8): nop 0x0(%rax,%rax,1)
3680(2): xor %edx,%edx
3682(3): xor %r12d,%r12d
3685(2): xor %eax,%eax
3687(5): mov $0x3f,%ebx
368c(5): jmp 0xfffff9ac(%rip)
3691(7): nop 0x0(%rax)
3698(5): cmp $0x0,0xf(%rsp)
369d(6): jnz 0x823(%rip)
36a3(3): xor %r12d,%r12d
36a6(2): xor %eax,%eax
36a8(5): mov $0x3f,%ebx
36ad(5): jmp 0xfffff9bc(%rip)
36b2(6): nop 0x0(%rax,%rax,1)
36b8(8): lea 0xa0(%rsp),%rax
36c0(4): cmp $0xffffffff,%r11
36c4(c): mov $0x0,0xa0(%rsp)
36d0(5): mov %rax,0x28(%rsp)
36d5(2): jnz 0x2f(%rip)
36d7(5): mov 0x10(%rsp),%rdi
36dc(5): mov %r8b,0x40(%rsp)
36e1(5): mov %r10b,0x38(%rsp)
36e6(5): mov %r9,0x30(%rsp)
36eb(5): call 0xffffde55(%rip)
36f0(6): movzx 0x40(%rsp),%r8d
36f6(6): movzx 0x38(%rsp),%r10d
36fc(3): mov %rax,%r11
36ff(5): mov 0x30(%rsp),%r9
3704(8): lea 0x9c(%rsp),%rax
370c(2): xor %ecx,%ecx
370e(4): mov %bl,0x7e(%rsp)
3712(5): mov %r8b,0x7d(%rsp)
3717(3): mov %rcx,%rbx
371a(8): mov %r9,0x88(%rsp)
3722(5): mov %rax,0x38(%rsp)
3727(5): mov %r10b,0x7f(%rsp)
372c(8): mov %r15,0x80(%rsp)
3734(5): mov %r14,0x40(%rsp)
3739(5): mov %r13,0x70(%rsp)
373e(5): mov %r11,0x30(%rsp)
3743(5): mov 0x10(%rsp),%rax
3748(5): lea 0x0(%rbp,%rbx,1),%r14
374d(5): mov 0x30(%rsp),%rdx
3752(5): mov 0x28(%rsp),%rcx
3757(5): mov 0x38(%rsp),%rdi
375c(4): lea 0x0(%rax,%r14,1),%r13
3760(3): sub %r14,%rdx
3763(3): mov %r13,%rsi
3766(5): call 0x1c3a(%rip)
376b(3): test %rax,%rax
376e(3): mov %rax,%r15
3771(2): jz 0x50(%rip)
3773(4): cmp $0xffffffff,%rax
3777(6): jz 0x61e(%rip)
377d(4): cmp $0xfffffffe,%rax
3781(6): jz 0x5a0(%rip)
3787(5): cmp $0x2,0x8(%rsp)
378c(3): setz %al
378f(4): and 0xf(%rsp),%al
3793(6): jnz 0x19d(%rip)
3799(7): mov 0x9c(%rsp),%edi
37a0(5): call 0xffffdfb0(%rip)
37a5(5): mov 0x28(%rsp),%rdi
37aa(2): test %eax,%eax
37ac(5): mov $0x0,%eax
37b1(4): cmove %eax,%r12d
37b5(3): add %r15,%rbx
37b8(5): call 0xffffdf88(%rip)
37bd(2): test %eax,%eax
37bf(2): jz 0xffffff84(%rip)
37c1(3): mov %r12d,%edx
37c4(3): mov %rbx,%rdi
37c7(6): movzx 0x7d(%rsp),%r8d
37cd(3): xor $0x1,%edx
37d0(5): movzx 0x7e(%rsp),%ebx
37d5(6): movzx 0x7f(%rsp),%r10d
37db(4): and 0xd(%rsp),%dl
37df(8): mov 0x80(%rsp),%r15
37e7(5): mov 0x40(%rsp),%r14
37ec(5): mov 0x70(%rsp),%r13
37f1(5): mov 0x30(%rsp),%r11
37f6(4): cmp $0x1,%rdi
37fa(6): jbe 0x601(%rip)
3800(3): mov %rdi,%rcx
3803(2): xor %esi,%esi
3805(6): movzx 0xf(%rsp),%r9d
380b(3): add %rbp,%rcx
380e(5): mov 0x10(%rsp),%rdi
3813(5): jmp 0xbb(%rip)
3818(8): nop 0x0(%rax,%rax,1)
3820(5): cmp $0x2,0x8(%rsp)
3825(3): setz %al
3828(3): test %r9b,%r9b
382b(6): jnz 0x4b5(%rip)
3831(3): mov %r8d,%esi
3834(3): xor $0x1,%esi
3837(3): and %sil,%al
383a(2): jz 0x31(%rip)
383c(3): cmp %r15,%r13
383f(2): jbe 0x7(%rip)
3841(5): mov $0x27,0x0(%r14,%r15,1)
3846(4): lea 0x1(%r15),%rsi
384a(3): cmp %rsi,%r13
384d(2): jbe 0x8(%rip)
384f(6): mov $0x24,0x1(%r14,%r15,1)
3855(4): lea 0x2(%r15),%rsi
3859(3): cmp %rsi,%r13
385c(2): jbe 0x8(%rip)
385e(6): mov $0x27,0x2(%r14,%r15,1)
3864(4): add $0x3,%r15
3868(3): mov %eax,%r8d
386b(3): cmp %r15,%r13
386e(2): jbe 0x7(%rip)
3870(5): mov $0x5c,0x0(%r14,%r15,1)
3875(4): lea 0x1(%r15),%rax
3879(3): cmp %rax,%r13
387c(2): jbe 0xf(%rip)
387e(2): mov %ebx,%eax
3880(3): shr $0x6,%al
3883(3): add $0x30,%eax
3886(5): mov %al,0x1(%r14,%r15,1)
388b(4): lea 0x2(%r15),%rax
388f(3): cmp %rax,%r13
3892(2): jbe 0x12(%rip)
3894(2): mov %ebx,%eax
3896(3): shr $0x3,%al
3899(3): and $0x7,%eax
389c(3): add $0x30,%eax
389f(5): mov %al,0x2(%r14,%r15,1)
38a4(3): and $0x7,%ebx
38a7(4): add $0x1,%rbp
38ab(4): add $0x3,%r15
38af(3): add $0x30,%ebx
38b2(3): cmp %rcx,%rbp
38b5(6): jnb 0xfffff7eb(%rip)
38bb(2): mov %edx,%esi
38bd(3): cmp %r15,%r13
38c0(2): jbe 0x6(%rip)
38c2(4): mov %bl,0x0(%r14,%r15,1)
38c6(4): movzx 0x0(%rdi,%rbp,1),%ebx
38ca(4): add $0x1,%r15
38ce(2): test %dl,%dl
38d0(6): jnz 0xffffff50(%rip)
38d6(2): mov %esi,%eax
38d8(3): xor $0x1,%eax
38db(3): and %r8d,%eax
38de(3): test %r10b,%r10b
38e1(2): jz 0x10(%rip)
38e3(3): cmp %r15,%r13
38e6(2): jbe 0x7(%rip)
38e8(5): mov $0x5c,0x0(%r14,%r15,1)
38ed(4): add $0x1,%r15
38f1(4): add $0x1,%rbp
38f5(3): cmp %rcx,%rbp
38f8(6): jnb 0xfffff784(%rip)
38fe(2): test %al,%al
3900(6): jz 0x3fe(%rip)
3906(3): cmp %r15,%r13
3909(2): jbe 0x7(%rip)
390b(5): mov $0x27,0x0(%r14,%r15,1)
3910(4): lea 0x1(%r15),%rax
3914(3): cmp %rax,%r13
3917(2): jbe 0x8(%rip)
3919(6): mov $0x27,0x1(%r14,%r15,1)
391f(4): add $0x2,%r15
3923(3): xor %r10d,%r10d
3926(3): xor %r8d,%r8d
3929(2): jmp 0xffffff94(%rip)
392b(5): nop 0x0(%rax,%rax,1)
3930(4): cmp $0x1,%r15
3934(6): jz 0xfffffe65(%rip)
393a(5): mov 0x10(%rsp),%rdi
393f(4): lea 0x0(%rdi,%r15,1),%rcx
3943(5): lea 0x1(%rdi,%r14,1),%rdx
3948(4): lea 0x0(%rcx,%r14,1),%r8
394c(2): jmp 0x11(%rip)
394e(2): nop 
3950(4): add $0x1,%rdx
3954(3): cmp %rdx,%r8
3957(6): jz 0xfffffe42(%rip)
395d(3): movzx (%rdx),%ecx
3960(3): sub $0x5b,%ecx
3963(3): cmp $0x21,%cl
3966(2): jnbe 0xffffffea(%rip)
3968(5): mov $0x1,%esi
396d(3): shl/sal %cl,%rsi
3970(3): mov %rsi,%rcx
3973(a): mov $0x8589934635,%rsi
397d(3): test %rsi,%rcx
3980(2): jz 0xffffffd0(%rip)
3982(5): mov 0x40(%rsp),%r14
3987(5): mov 0x70(%rsp),%r13
398c(5): mov 0x30(%rsp),%rbp
3991(8): mov $0x2,0x8(%rsp)
3999(5): cmp $0x0,0xd(%rsp)
399e(2): jz 0x12(%rip)
39a0(2): test %al,%al
39a2(5): mov $0x4,%eax
39a7(5): cmove 0x8(%rsp),%eax
39ac(4): mov %eax,0x8(%rsp)
39b0(4): sub $0x8,%rsp
39b4(3): mov %rbp,%rcx
39b7(3): mov %r13,%rsi
39ba(4): push 0x68(%rsp)
39be(4): push 0x78(%rsp)
39c2(3): mov %r14,%rdi
39c5(2): push $0x0
39c7(8): mov 0x98(%rsp),%r9d
39cf(5): mov 0x28(%rsp),%r8d
39d4(5): mov 0x30(%rsp),%rdx
39d9(4): and $0xfd,%r9d
39dd(5): call 0xfffff433(%rip)
39e2(4): add $0x20,%rsp
39e6(3): mov %rax,%r15
39e9(8): mov 0xa8(%rsp),%rbx
39f1(9): xor $0x28,%rbx
39fa(3): mov %r15,%rax
39fd(6): jnz 0x606(%rip)
3a03(7): add $0xb8,%rsp
3a0a(1): pop %rbx
3a0b(1): pop %rbp
3a0c(2): pop %r12
3a0e(2): pop %r13
3a10(2): pop %r14
3a12(2): pop %r15
3a14(1): ret near (%rsp)
3a15(3): nop (%rax)
3a18(3): mov %r11,%rbp
3a1b(5): jmp 0xffffff7e(%rip)
3a20(3): cmp %r15,%r13
3a23(2): jbe 0x7(%rip)
3a25(5): mov $0x27,0x0(%r14,%r15,1)
3a2a(4): lea 0x1(%r15),%rax
3a2e(3): cmp %rax,%r13
3a31(2): jbe 0x8(%rip)
3a33(6): mov $0x5c,0x1(%r14,%r15,1)
3a39(4): lea 0x2(%r15),%rax
3a3d(3): cmp %rax,%r13
3a40(6): jbe 0x5f2(%rip)
3a46(3): mov %r13,%rdx
3a49(6): mov $0x27,0x2(%r14,%r15,1)
3a4f(5): mov 0x50(%rsp),%r13
3a54(5): jmp 0xfffffbde(%rip)
3a59(3): mov %r12d,%eax
3a5c(5): mov $0x30,%ebx
3a61(3): xor %r12d,%r12d
3a64(5): jmp 0xfffff605(%rip)
3a69(6): mov $0x27,0x2(%r14,%r15,1)
3a6f(5): jmp 0xfffff9ca(%rip)
3a74(2): test %ebx,%ebx
3a76(6): jnz 0xfffff42d(%rip)
3a7c(5): mov $0x1,0xd(%rsp)
3a81(3): test %r13,%r13
3a84(6): jnz 0x596(%rip)
3a8a(7): lea 0x238c(%rip),%rax
3a91(9): mov $0x0,0x50(%rsp)
3a9a(5): mov $0x1,0xe(%rsp)
3a9f(5): mov $0x0,0x7c(%rsp)
3aa4(3): xor %r12d,%r12d
3aa7(5): mov $0x0,0xf(%rsp)
3aac(9): mov $0x1,0x18(%rsp)
3ab5(5): mov %rax,0x48(%rsp)
3aba(6): mov $0x1,%r15d
3ac0(8): mov $0x2,0x8(%rsp)
3ac8(5): jmp 0xfffff41b(%rip)
3acd(3): nop (%rax)
3ad0(2): test %ebx,%ebx
3ad2(6): jnz 0x3fb(%rip)
3ad8(3): test %r13,%r13
3adb(6): jz 0x22b(%rip)
3ae1(4): mov $0x22,(%r14)
3ae5(5): mov $0x1,0xe(%rsp)
3aea(3): xor %r12d,%r12d
3aed(5): mov $0x0,0x7c(%rsp)
3af2(9): mov $0x0,0x50(%rsp)
3afb(7): lea 0x2319(%rip),%rax
3b02(5): mov $0x0,0xf(%rsp)
3b07(5): mov $0x1,0xd(%rsp)
3b0c(9): mov $0x1,0x18(%rsp)
3b15(6): mov $0x1,%r15d
3b1b(5): mov %rax,0x48(%rsp)
3b20(5): jmp 0xfffff3c3(%rip)
3b25(7): lea 0x22ef(%rip),%rax
3b2c(5): mov $0x1,0xe(%rsp)
3b31(5): mov $0x0,0x7c(%rsp)
3b36(3): xor %r12d,%r12d
3b39(9): mov $0x0,0x50(%rsp)
3b42(5): mov $0x1,0xf(%rsp)
3b47(5): mov $0x1,0xd(%rsp)
3b4c(9): mov $0x1,0x18(%rsp)
3b55(3): xor %r15d,%r15d
3b58(5): mov %rax,0x48(%rsp)
3b5d(8): mov $0x5,0x8(%rsp)
3b65(5): jmp 0xfffff37e(%rip)
3b6a(5): mov $0x1,0xe(%rsp)
3b6f(5): mov $0x0,0x7c(%rsp)
3b74(3): xor %r12d,%r12d
3b77(9): mov $0x0,0x50(%rsp)
3b80(5): mov $0x0,0xf(%rsp)
3b85(3): xor %r15d,%r15d
3b88(5): mov $0x1,0xd(%rsp)
3b8d(9): mov $0x0,0x18(%rsp)
3b96(9): mov $0x0,0x48(%rsp)
3b9f(5): jmp 0xfffff344(%rip)
3ba4(5): cmp $0xa,0x8(%rsp)
3ba9(2): jz 0x58(%rip)
3bab(7): lea 0x226d(%rip),%rsi
3bb2(2): xor %edi,%edi
3bb4(5): mov $0x5,%edx
3bb9(5): call 0xffffd967(%rip)
3bbe(3): mov %rax,%rcx
3bc1(5): mov %rax,0x68(%rsp)
3bc6(7): lea 0x2252(%rip),%rax
3bcd(3): cmp %rax,%rcx
3bd0(6): jz 0x39e(%rip)
3bd6(7): lea 0x2240(%rip),%rsi
3bdd(2): xor %edi,%edi
3bdf(5): mov $0x5,%edx
3be4(5): call 0xffffd93c(%rip)
3be9(3): mov %rax,%rcx
3bec(5): mov %rax,0x60(%rsp)
3bf1(7): lea 0x2225(%rip),%rax
3bf8(3): cmp %rax,%rcx
3bfb(6): jz 0x389(%rip)
3c01(3): xor %r15d,%r15d
3c04(2): test %ebx,%ebx
3c06(6): jz 0x1c7(%rip)
3c0c(2): test %ebx,%ebx
3c0e(5): mov 0x60(%rsp),%rbx
3c13(5): setnz 0xf(%rsp)
3c18(3): xor %r12d,%r12d
3c1b(3): mov %rbx,%rdi
3c1e(5): call 0xffffd922(%rip)
3c23(5): mov %rbx,0x48(%rsp)
3c28(5): mov %rax,0x18(%rsp)
3c2d(5): mov $0x1,0xe(%rsp)
3c32(5): mov $0x0,0x7c(%rsp)
3c37(9): mov $0x0,0x50(%rsp)
3c40(5): mov $0x1,0xd(%rsp)
3c45(5): jmp 0xfffff29e(%rip)
3c4a(5): mov $0x1,0xe(%rsp)
3c4f(5): mov $0x0,0x7c(%rsp)
3c54(3): xor %r12d,%r12d
3c57(9): mov $0x0,0x50(%rsp)
3c60(5): mov $0x0,0xf(%rsp)
3c65(3): xor %r15d,%r15d
3c68(5): mov $0x0,0xd(%rsp)
3c6d(9): mov $0x0,0x18(%rsp)
3c76(9): mov $0x0,0x48(%rsp)
3c7f(5): jmp 0xfffff264(%rip)
3c84(5): mov $0x1,0xe(%rsp)
3c89(5): mov $0x0,0x7c(%rsp)
3c8e(3): xor %r12d,%r12d
3c91(9): mov $0x0,0x50(%rsp)
3c9a(5): mov $0x1,0xf(%rsp)
3c9f(5): mov $0x1,0xd(%rsp)
3ca4(5): jmp 0xfffff21f(%rip)
3ca9(3): cmp %r15,%r13
3cac(2): jbe 0x7(%rip)
3cae(5): mov $0x30,0x0(%r14,%r15,1)
3cb3(4): lea 0x2(%rcx),%rax
3cb7(3): cmp %rax,%r13
3cba(2): jbe 0x8(%rip)
3cbc(6): mov $0x30,0x2(%r14,%rcx,1)
3cc2(3): mov %r12d,%eax
3cc5(4): lea 0x3(%rcx),%r15
3cc9(3): xor %r12d,%r12d
3ccc(5): mov $0x30,%ebx
3cd1(5): jmp 0xfffff367(%rip)
3cd6(a): nop 0x0(%rax,%rax,1)
3ce0(5): movzx 0xf(%rsp),%ebx
3ce5(3): mov %r11,%rbp
3ce8(4): mov %bl,0xd(%rsp)
3cec(5): jmp 0xfffffcad(%rip)
3cf1(5): movzx 0xd(%rsp),%edx
3cf6(3): xor %r12d,%r12d
3cf9(5): jmp 0xfffffb07(%rip)
3cfe(3): xor %r10d,%r10d
3d01(5): jmp 0xfffffbbc(%rip)
3d06(9): mov $0x0,0x50(%rsp)
3d0f(5): mov $0x1,0xe(%rsp)
3d14(3): xor %r12d,%r12d
3d17(5): mov $0x0,0x7c(%rsp)
3d1c(5): jmp 0xfffffddf(%rip)
3d21(5): mov 0x30(%rsp),%r11
3d26(3): mov %r14,%rsi
3d29(3): mov %r13,%rcx
3d2c(3): mov %rbx,%rax
3d2f(3): mov %rbx,%rdi
3d32(6): movzx 0x7d(%rsp),%r8d
3d38(5): movzx 0x7e(%rsp),%ebx
3d3d(8): mov 0x88(%rsp),%r9
3d45(3): cmp %r11,%rsi
3d48(6): movzx 0x7f(%rsp),%r10d
3d4e(8): mov 0x80(%rsp),%r15
3d56(5): mov 0x40(%rsp),%r14
3d5b(5): mov 0x70(%rsp),%r13
3d60(2): jnb 0x28(%rip)
3d62(3): cmp $0x0,(%rcx)
3d65(2): jnz 0x12(%rip)
3d67(2): jmp 0x21(%rip)
3d69(7): nop 0x0(%rax)
3d70(5): cmp $0x0,0x0(%r9,%rax,1)
3d75(2): jz 0x10(%rip)
3d77(4): add $0x1,%rax
3d7b(5): lea 0x0(%rbp,%rax,1),%rdx
3d80(3): cmp %rdx,%r11
3d83(2): jnbe 0xffffffed(%rip)
3d85(3): mov %rax,%rdi
3d88(5): movzx 0xd(%rsp),%edx
3d8d(3): xor %r12d,%r12d
3d90(5): jmp 0xfffffa66(%rip)
3d95(3): mov %rbx,%rdi
3d98(6): movzx 0x7d(%rsp),%r8d
3d9e(5): movzx 0x7e(%rsp),%ebx
3da3(6): movzx 0x7f(%rsp),%r10d
3da9(8): mov 0x80(%rsp),%r15
3db1(3): xor %r12d,%r12d
3db4(5): mov 0x40(%rsp),%r14
3db9(5): mov 0x70(%rsp),%r13
3dbe(5): mov 0x30(%rsp),%r11
3dc3(5): movzx 0xd(%rsp),%edx
3dc8(5): jmp 0xfffffa2e(%rip)
3dcd(5): mov 0x68(%rsp),%rdx
3dd2(3): movzx (%rdx),%eax
3dd5(2): test %al,%al
3dd7(6): jz 0xfffffe35(%rip)
3ddd(3): nop (%rax)
3de0(3): cmp %r15,%r13
3de3(2): jbe 0x6(%rip)
3de5(4): mov %al,0x0(%r14,%r15,1)
3de9(4): add $0x1,%r15
3ded(5): movzx 0x0(%rdx,%r15,1),%eax
3df2(2): test %al,%al
3df4(2): jnz 0xffffffec(%rip)
3df6(5): jmp 0xfffffe16(%rip)
3dfb(2): mov %edx,%eax
3dfd(5): jmp 0xfffff55a(%rip)
3e02(4): movzx 0x0(%rax,%rcx,1),%ebx
3e06(3): cmp $0x3e,%bl
3e09(6): jnbe 0xfffff877(%rip)
3e0f(a): mov $0x8070630310989004800,%rax
3e19(4): bt %rbx,%rax
3e1d(6): jnb 0xfffff863(%rip)
3e23(5): cmp $0x0,0xf(%rsp)
3e28(6): jnz 0x1ea(%rip)
3e2e(3): cmp %r15,%r13
3e31(2): jbe 0x7(%rip)
3e33(5): mov $0x3f,0x0(%r14,%r15,1)
3e38(4): lea 0x1(%r15),%rax
3e3c(3): cmp %rax,%r13
3e3f(2): jbe 0x8(%rip)
3e41(6): mov $0x22,0x1(%r14,%r15,1)
3e47(4): lea 0x2(%r15),%rax
3e4b(3): cmp %rax,%r13
3e4e(2): jbe 0x8(%rip)
3e50(6): mov $0x22,0x2(%r14,%r15,1)
3e56(4): lea 0x3(%r15),%rax
3e5a(3): cmp %rax,%r13
3e5d(2): jbe 0x8(%rip)
3e5f(6): mov $0x3f,0x3(%r14,%r15,1)
3e65(4): add $0x4,%r15
3e69(2): xor %edx,%edx
3e6b(3): xor %r12d,%r12d
3e6e(2): xor %eax,%eax
3e70(3): mov %rcx,%rbp
3e73(5): jmp 0xfffff1c5(%rip)
3e78(2): test %ebx,%ebx
3e7a(6): jz 0x18e(%rip)
3e80(7): lea 0x1f96(%rip),%rax
3e87(5): mov $0x1,0xe(%rsp)
3e8c(5): mov $0x0,0x7c(%rsp)
3e91(3): xor %r12d,%r12d
3e94(9): mov $0x0,0x50(%rsp)
3e9d(5): mov $0x1,0xf(%rsp)
3ea2(5): mov $0x0,0xd(%rsp)
3ea7(9): mov $0x1,0x18(%rsp)
3eb0(3): xor %r15d,%r15d
3eb3(5): mov %rax,0x48(%rsp)
3eb8(5): jmp 0xfffff02b(%rip)
3ebd(3): nop (%rax)
3ec0(3): mov %r11,%rbp
3ec3(5): movzx 0xf(%rsp),%eax
3ec8(5): jmp 0xfffffad1(%rip)
3ecd(7): lea 0x1f47(%rip),%rax
3ed4(5): mov $0x1,0xe(%rsp)
3ed9(5): mov $0x0,0x7c(%rsp)
3ede(3): xor %r12d,%r12d
3ee1(9): mov $0x0,0x50(%rsp)
3eea(5): mov $0x1,0xf(%rsp)
3eef(5): mov $0x1,0xd(%rsp)
3ef4(9): mov $0x1,0x18(%rsp)
3efd(3): xor %r15d,%r15d
3f00(5): mov %rax,0x48(%rsp)
3f05(5): jmp 0xffffefde(%rip)
3f0a(2): mov %edx,%eax
3f0c(5): mov 0x48(%rsp),%rbx
3f11(3): test %rbx,%rbx
3f14(2): jz 0x2e(%rip)
3f16(2): test %al,%al
3f18(2): jz 0x2a(%rip)
3f1a(3): movzx (%rbx),%ecx
3f1d(3): mov %rbx,%rax
3f20(2): test %cl,%cl
3f22(2): jz 0x20(%rip)
3f24(3): mov %r15,%rdx
3f27(3): sub %r15,%rax
3f2a(3): cmp %rdx,%r13
3f2d(2): jbe 0x6(%rip)
3f2f(4): mov %cl,0x0(%r14,%rdx,1)
3f33(4): add $0x1,%rdx
3f37(4): movzx 0x0(%rax,%rdx,1),%ecx
3f3b(2): test %cl,%cl
3f3d(2): jnz 0xffffffed(%rip)
3f3f(3): mov %rdx,%r15
3f42(3): cmp %r15,%r13
3f45(6): jbe 0xfffffaa4(%rip)
3f4b(5): mov $0x0,0x0(%r14,%r15,1)
3f50(5): jmp 0xfffffa99(%rip)
3f55(5): cmp $0x2,0x8(%rsp)
3f5a(5): movzx 0xf(%rsp),%ebx
3f5f(3): mov %r11,%rbp
3f62(3): setz %al
3f65(4): mov %bl,0xd(%rsp)
3f69(5): jmp 0xfffffa30(%rip)
3f6e(4): mov 0x8(%rsp),%esi
3f72(3): mov %rcx,%rdi
3f75(5): call 0xffffedab(%rip)
3f7a(5): mov %rax,0x68(%rsp)
3f7f(5): jmp 0xfffffc57(%rip)
3f84(4): mov 0x8(%rsp),%esi
3f88(3): mov %rcx,%rdi
3f8b(5): call 0xffffed95(%rip)
3f90(5): mov %rax,0x60(%rsp)
3f95(5): jmp 0xfffffc6c(%rip)
3f9a(5): movzx 0xf(%rsp),%ebx
3f9f(3): mov %r11,%rbp
3fa2(2): mov %edx,%eax
3fa4(4): mov %bl,0xd(%rsp)
3fa8(5): jmp 0xfffff9f1(%rip)
3fad(4): sub $0x8,%rsp
3fb1(6): mov $0x5,%r8d
3fb7(3): mov %r11,%rcx
3fba(4): push 0x68(%rsp)
3fbe(4): push 0x78(%rsp)
3fc2(3): mov %r14,%rdi
3fc5(4): push 0x38(%rsp)
3fc9(8): mov 0x98(%rsp),%r9d
3fd1(5): mov 0x30(%rsp),%rdx
3fd6(5): mov 0x70(%rsp),%rsi
3fdb(5): call 0xffffee35(%rip)
3fe0(4): add $0x20,%rsp
3fe4(3): mov %rax,%r15
3fe7(5): jmp 0xfffffa02(%rip)
3fec(5): movzx 0x7c(%rsp),%eax
3ff1(5): jmp 0xffffff1b(%rip)
3ff6(8): mov $0x2,0x8(%rsp)
3ffe(5): jmp 0xfffff99b(%rip)
4003(5): call 0xffffd54d(%rip)
4008(5): mov $0x0,0xd(%rsp)
400d(5): jmp 0xfffffa74(%rip)
4012(3): mov %r11,%rbp
4015(5): jmp 0xfffff99b(%rip)
401a(5): mov $0x1,0xe(%rsp)
401f(2): xor %eax,%eax
4021(3): xor %r12d,%r12d
4024(9): mov $0x0,0x50(%rsp)
402d(5): jmp 0xfffff5a7(%rip)
4032(3): mov %r13,%rdx
4035(5): mov 0x50(%rsp),%r13
403a(5): jmp 0xfffff5f8(%rip)
403f(5): call 0xffffd451(%rip)

"quotearg_n_options" :
4050(2): push %r15
4052(2): push %r14
4054(3): movsxd %edi,%r15
4057(2): push %r13
4059(2): push %r12
405b(3): mov %rdx,%r14
405e(1): push %rbp
405f(1): push %rbx
4060(3): mov %rcx,%rbp
4063(4): sub $0x28,%rsp
4067(5): mov %rsi,0x8(%rsp)
406c(5): call 0xffffd434(%rip)
4071(3): mov %rax,%r13
4074(2): mov (%rax),%eax
4076(3): test %r15d,%r15d
4079(7): mov 0x204000(%rip),%rbx
4080(4): mov %eax,0x18(%rsp)
4084(6): js 0x16d(%rip)
408a(7): cmp %r15d,0x203fe7(%rip)
4091(2): jnle 0x64(%rip)
4093(7): cmp $0x7fffffff,%r15d
409a(6): jz 0x15c(%rip)
40a0(4): lea 0x1(%r15),%r12d
40a4(7): lea 0x203fe5(%rip),%rax
40ab(3): movsxd %r12d,%rsi
40ae(4): shl/sal $0x4,%rsi
40b2(3): cmp %rax,%rbx
40b5(6): jz 0x11b(%rip)
40bb(3): mov %rbx,%rdi
40be(5): call 0xf72(%rip)
40c3(3): mov %rax,%rbx
40c6(7): mov %rax,0x203fb3(%rip)
40cd(7): movsxd 0x203fa4(%rip),%rdi
40d4(3): mov %r12d,%edx
40d7(2): xor %esi,%esi
40d9(2): sub %edi,%edx
40db(4): shl/sal $0x4,%rdi
40df(3): movsxd %edx,%rdx
40e2(3): add %rbx,%rdi
40e5(4): shl/sal $0x4,%rdx
40e9(5): call 0xffffd4d7(%rip)
40ee(7): mov %r12d,0x203f83(%rip)
40f5(3): mov 0x4(%rbp),%eax
40f8(4): shl/sal $0x4,%r15
40fc(4): sub $0x8,%rsp
4100(3): add %r15,%rbx
4103(4): lea 0x8(%rbp),%r15
4107(4): mov 0x0(%rbp),%r8d
410b(3): mov (%rbx),%r11
410e(4): mov 0x8(%rbx),%r12
4112(3): mov %r14,%rcx
4115(3): or $0x1,%eax
4118(4): mov %eax,0x24(%rsp)
411c(3): push 0x30(%rbp)
411f(3): mov %eax,%r9d
4122(3): push 0x28(%rbp)
4125(2): push %r15
4127(3): mov %r11,%rsi
412a(5): mov 0x28(%rsp),%rdx
412f(3): mov %r12,%rdi
4132(5): mov %r11,0x30(%rsp)
4137(5): call 0xffffecd9(%rip)
413c(4): add $0x20,%rsp
4140(5): mov 0x10(%rsp),%r11
4145(3): cmp %rax,%r11
4148(2): jnbe 0x69(%rip)
414a(4): lea 0x1(%rax),%rsi
414e(7): lea 0x20400b(%rip),%rax
4155(3): cmp %rax,%r12
4158(3): mov %rsi,(%rbx)
415b(2): jz 0x14(%rip)
415d(3): mov %r12,%rdi
4160(5): mov %rsi,0x10(%rsp)
4165(5): call 0xffffd31b(%rip)
416a(5): mov 0x10(%rsp),%rsi
416f(3): mov %rsi,%rdi
4172(5): mov %rsi,0x10(%rsp)
4177(5): call 0xe59(%rip)
417c(4): sub $0x8,%rsp
4180(4): mov %rax,0x8(%rbx)
4184(4): mov 0x0(%rbp),%r8d
4188(3): push 0x30(%rbp)
418b(3): push 0x28(%rbp)
418e(3): mov %r14,%rcx
4191(2): push %r15
4193(5): mov 0x3c(%rsp),%r9d
4198(3): mov %rax,%rdi
419b(5): mov 0x28(%rsp),%rdx
41a0(5): mov 0x30(%rsp),%rsi
41a5(3): mov %rax,%r12
41a8(5): call 0xffffec68(%rip)
41ad(4): add $0x20,%rsp
41b1(4): mov 0x18(%rsp),%eax
41b5(4): mov %eax,0x0(%r13)
41b9(4): add $0x28,%rsp
41bd(3): mov %r12,%rax
41c0(1): pop %rbx
41c1(1): pop %rbp
41c2(2): pop %r12
41c4(2): pop %r13
41c6(2): pop %r14
41c8(2): pop %r15
41ca(1): ret near (%rsp)
41cb(5): nop 0x0(%rax,%rax,1)
41d0(2): xor %edi,%edi
41d2(5): call 0xe5e(%rip)
41d7(8): movdqa 0x203eb1(%rip),%xmm0
41df(3): mov %rax,%rbx
41e2(7): mov %rax,0x203e97(%rip)
41e9(3): movups %xmm0,(%rax)
41ec(5): jmp 0xfffffee1(%rip)
41f1(5): call 0xffffd29f(%rip)
41f6(5): call 0x102a(%rip)

"clone_quoting_options" :
4200(2): push %r12
4202(1): push %rbp
4203(1): push %rbx
4204(3): mov %rdi,%rbx
4207(5): call 0xffffd299(%rip)
420c(3): mov (%rax),%r12d
420f(3): mov %rax,%rbp
4212(7): lea 0x204047(%rip),%rax
4219(3): test %rbx,%rbx
421c(5): mov $0x38,%esi
4221(4): cmove %rax,%rbx
4225(3): mov %rbx,%rdi
4228(5): call 0xfa8(%rip)
422d(4): mov %r12d,0x0(%rbp)
4231(1): pop %rbx
4232(1): pop %rbp
4233(2): pop %r12
4235(1): ret near (%rsp)

"get_quoting_style" :
4240(7): lea 0x204019(%rip),%rax
4247(3): test %rdi,%rdi
424a(4): cmove %rax,%rdi
424e(2): mov (%rdi),%eax
4250(1): ret near (%rsp)

"set_quoting_style" :
4260(7): lea 0x203ff9(%rip),%rax
4267(3): test %rdi,%rdi
426a(4): cmove %rax,%rdi
426e(2): mov %esi,(%rdi)
4270(1): ret near (%rsp)

"set_char_quoting" :
4280(7): lea 0x203fd9(%rip),%rax
4287(3): test %rdi,%rdi
428a(2): mov %esi,%ecx
428c(4): cmove %rax,%rdi
4290(2): mov %esi,%eax
4292(3): and $0x1f,%ecx
4295(3): shr $0x5,%al
4298(3): movzx %al,%eax
429b(5): lea 0x8(%rdi,%rax,4),%rdi
42a0(2): mov (%rdi),%esi
42a2(2): mov %esi,%eax
42a4(2): shr %cl,%eax
42a6(2): xor %eax,%edx
42a8(3): and $0x1,%eax
42ab(3): and $0x1,%edx
42ae(2): shl/sal %cl,%edx
42b0(2): xor %esi,%edx
42b2(2): mov %edx,(%rdi)
42b4(1): ret near (%rsp)

"set_quoting_flags" :
42c0(7): lea 0x203f99(%rip),%rax
42c7(3): test %rdi,%rdi
42ca(4): cmove %rax,%rdi
42ce(3): mov 0x4(%rdi),%eax
42d1(3): mov %esi,0x4(%rdi)
42d4(1): ret near (%rsp)

"set_custom_quoting" :
42e0(7): lea 0x203f79(%rip),%rax
42e7(3): test %rdi,%rdi
42ea(4): cmove %rax,%rdi
42ee(3): test %rsi,%rsi
42f1(6): mov $0xa,(%rdi)
42f7(2): jz 0x10(%rip)
42f9(3): test %rdx,%rdx
42fc(2): jz 0xb(%rip)
42fe(4): mov %rsi,0x28(%rdi)
4302(4): mov %rdx,0x30(%rdi)
4306(1): ret near (%rsp)
4307(4): sub $0x8,%rsp
430b(5): call 0xffffd185(%rip)

"quotearg_buffer" :
4310(2): push %r15
4312(2): push %r14
4314(7): lea 0x203f45(%rip),%rax
431b(2): push %r13
431d(2): push %r12
431f(3): mov %rdi,%r13
4322(1): push %rbp
4323(1): push %rbx
4324(3): mov %r8,%rbx
4327(3): mov %rsi,%r14
432a(3): mov %rdx,%r15
432d(4): sub $0x18,%rsp
4331(3): test %r8,%r8
4334(4): cmove %rax,%rbx
4338(5): mov %rcx,0x8(%rsp)
433d(5): call 0xffffd163(%rip)
4342(3): mov (%rax),%r12d
4345(3): mov %rax,%rbp
4348(4): lea 0x8(%rbx),%rax
434c(4): sub $0x8,%rsp
4350(4): mov 0x4(%rbx),%r9d
4354(3): push 0x30(%rbx)
4357(3): mov (%rbx),%r8d
435a(3): push 0x28(%rbx)
435d(3): mov %r15,%rdx
4360(1): push %rax
4361(5): mov 0x28(%rsp),%rcx
4366(3): mov %r14,%rsi
4369(3): mov %r13,%rdi
436c(5): call 0xffffeaa4(%rip)
4371(4): mov %r12d,0x0(%rbp)
4375(4): add $0x38,%rsp
4379(1): pop %rbx
437a(1): pop %rbp
437b(2): pop %r12
437d(2): pop %r13
437f(2): pop %r14
4381(2): pop %r15
4383(1): ret near (%rsp)

"quotearg_alloc_mem" :
4390(2): push %r15
4392(2): push %r14
4394(7): lea 0x203ec5(%rip),%rax
439b(2): push %r13
439d(2): push %r12
439f(3): mov %rdx,%r12
43a2(1): push %rbp
43a3(1): push %rbx
43a4(3): mov %rcx,%rbx
43a7(3): mov %rdi,%r14
43aa(3): mov %rsi,%r15
43ad(4): sub $0x38,%rsp
43b1(3): test %rcx,%rcx
43b4(4): cmove %rax,%rbx
43b8(2): xor %ebp,%ebp
43ba(5): call 0xffffd0e6(%rip)
43bf(3): test %r12,%r12
43c2(3): mov %rax,%r13
43c5(2): mov (%rax),%eax
43c7(4): setz %bpl
43cb(3): or 0x4(%rbx),%ebp
43ce(4): lea 0x8(%rbx),%r10
43d2(4): sub $0x8,%rsp
43d6(3): mov (%rbx),%r8d
43d9(3): mov %r15,%rcx
43dc(4): mov %eax,0x14(%rsp)
43e0(3): push 0x30(%rbx)
43e3(3): mov %r14,%rdx
43e6(3): push 0x28(%rbx)
43e9(2): push %r10
43eb(2): xor %esi,%esi
43ed(3): mov %ebp,%r9d
43f0(2): xor %edi,%edi
43f2(5): mov %r10,0x40(%rsp)
43f7(5): call 0xffffea19(%rip)
43fc(4): lea 0x1(%rax),%rsi
4400(5): mov %rax,0x48(%rsp)
4405(4): add $0x20,%rsp
4409(3): mov %rsi,%rdi
440c(5): mov %rsi,0x18(%rsp)
4411(5): call 0xbbf(%rip)
4416(5): mov %rax,0x10(%rsp)
441b(4): sub $0x8,%rsp
441f(3): push 0x30(%rbx)
4422(3): push 0x28(%rbx)
4425(5): mov 0x38(%rsp),%r10
442a(3): mov %ebp,%r9d
442d(3): mov (%rbx),%r8d
4430(3): mov %r15,%rcx
4433(3): mov %r14,%rdx
4436(3): mov %rax,%rdi
4439(2): push %r10
443b(5): mov 0x38(%rsp),%rsi
4440(5): call 0xffffe9d0(%rip)
4445(4): mov 0x2c(%rsp),%eax
4449(4): add $0x20,%rsp
444d(3): test %r12,%r12
4450(4): mov %eax,0x0(%r13)
4454(2): jz 0xb(%rip)
4456(5): mov 0x28(%rsp),%r11
445b(4): mov %r11,(%r12)
445f(5): mov 0x10(%rsp),%rax
4464(4): add $0x38,%rsp
4468(1): pop %rbx
4469(1): pop %rbp
446a(2): pop %r12
446c(2): pop %r13
446e(2): pop %r14
4470(2): pop %r15
4472(1): ret near (%rsp)

"quotearg_alloc" :
4480(3): mov %rdx,%rcx
4483(2): xor %edx,%edx
4485(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4490(6): mov 0x203be2(%rip),%eax
4496(2): push %r12
4498(7): mov 0x203be1(%rip),%r12
449f(1): push %rbp
44a0(1): push %rbx
44a1(3): cmp $0x1,%eax
44a4(2): jle 0x2d(%rip)
44a6(3): sub $0x2,%eax
44a9(5): lea 0x18(%r12),%rbx
44ae(4): shl/sal $0x4,%rax
44b2(5): lea 0x28(%r12,%rax,1),%rbp
44b7(9): nop 0x0(%rax,%rax,1)
44c0(3): mov (%rbx),%rdi
44c3(4): add $0x10,%rbx
44c7(5): call 0xffffcfb9(%rip)
44cc(3): cmp %rbp,%rbx
44cf(2): jnz 0xfffffff1(%rip)
44d1(5): mov 0x8(%r12),%rdi
44d6(7): lea 0x203c83(%rip),%rbx
44dd(3): cmp %rbx,%rdi
44e0(2): jz 0x19(%rip)
44e2(5): call 0xffffcf9e(%rip)
44e7(b): mov $0x100,0x203b9e(%rip)
44f2(7): mov %rbx,0x203b9f(%rip)
44f9(7): lea 0x203b90(%rip),%rbx
4500(3): cmp %rbx,%r12
4503(2): jz 0x11(%rip)
4505(3): mov %r12,%rdi
4508(5): call 0xffffcf78(%rip)
450d(7): mov %rbx,0x203b6c(%rip)
4514(1): pop %rbx
4515(a): mov $0x1,0x203b59(%rip)
451f(1): pop %rbp
4520(2): pop %r12
4522(1): ret near (%rsp)

"quotearg_n" :
4530(7): lea 0x203d29(%rip),%rcx
4537(7): mov $0xffffffff,%rdx
453e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4550(7): lea 0x203d09(%rip),%rcx
4557(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4560(7): lea 0x203cf9(%rip),%rcx
4567(3): mov %rdi,%rsi
456a(7): mov $0xffffffff,%rdx
4571(2): xor %edi,%edi
4573(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4580(7): lea 0x203cd9(%rip),%rcx
4587(3): mov %rsi,%rdx
458a(3): mov %rdi,%rsi
458d(2): xor %edi,%edi
458f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
45a0(4): sub $0x48,%rsp
45a4(3): mov %rdx,%rax
45a7(9): mov $0x28,%rdx
45b0(5): mov %rdx,0x38(%rsp)
45b5(2): xor %edx,%edx
45b7(3): cmp $0xa,%esi
45ba(2): jz 0x6a(%rip)
45bc(3): mov %esi,(%rsp)
45bf(3): mov %rsp,%rcx
45c2(7): mov $0xffffffff,%rdx
45c9(3): mov %rax,%rsi
45cc(9): mov $0x0,0x4(%rsp)
45d5(9): mov $0x0,0xc(%rsp)
45de(9): mov $0x0,0x14(%rsp)
45e7(9): mov $0x0,0x1c(%rsp)
45f0(9): mov $0x0,0x24(%rsp)
45f9(9): mov $0x0,0x2c(%rsp)
4602(8): mov $0x0,0x34(%rsp)
460a(5): call 0xfffffa46(%rip)
460f(5): mov 0x38(%rsp),%rcx
4614(9): xor $0x28,%rcx
461d(2): jnz 0xc(%rip)
461f(4): add $0x48,%rsp
4623(1): ret near (%rsp)
4624(5): call 0xffffce6c(%rip)
4629(5): call 0xffffcf27(%rip)

"quotearg_n_style_mem" :
4630(4): sub $0x48,%rsp
4634(3): mov %rdx,%rax
4637(3): mov %rcx,%rdx
463a(9): mov $0x28,%rcx
4643(5): mov %rcx,0x38(%rsp)
4648(2): xor %ecx,%ecx
464a(3): cmp $0xa,%esi
464d(2): jz 0x63(%rip)
464f(3): mov %esi,(%rsp)
4652(3): mov %rsp,%rcx
4655(3): mov %rax,%rsi
4658(9): mov $0x0,0x4(%rsp)
4661(9): mov $0x0,0xc(%rsp)
466a(9): mov $0x0,0x14(%rsp)
4673(9): mov $0x0,0x1c(%rsp)
467c(9): mov $0x0,0x24(%rsp)
4685(9): mov $0x0,0x2c(%rsp)
468e(8): mov $0x0,0x34(%rsp)
4696(5): call 0xfffff9ba(%rip)
469b(5): mov 0x38(%rsp),%rdx
46a0(9): xor $0x28,%rdx
46a9(2): jnz 0xc(%rip)
46ab(4): add $0x48,%rsp
46af(1): ret near (%rsp)
46b0(5): call 0xffffcde0(%rip)
46b5(5): call 0xffffce9b(%rip)

"quotearg_style" :
46c0(3): mov %rsi,%rdx
46c3(2): mov %edi,%esi
46c5(2): xor %edi,%edi
46c7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
46d0(3): mov %rdx,%rcx
46d3(3): mov %rsi,%rdx
46d6(2): mov %edi,%esi
46d8(2): xor %edi,%edi
46da(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
46e0(4): sub $0x48,%rsp
46e4(2): mov %edx,%ecx
46e6(9): mov $0x28,%rax
46ef(5): mov %rax,0x38(%rsp)
46f4(2): xor %eax,%eax
46f6(7): mov 0x203b93(%rip),%rax
46fd(3): mov %rsp,%r8
4700(3): and $0x1f,%ecx
4703(8): movdqa 0x203b55(%rip),%xmm0
470b(5): mov %rax,0x30(%rsp)
4710(2): mov %edx,%eax
4712(4): movaps %xmm0,(%rsp)
4716(3): shr $0x5,%al
4719(3): movzx %al,%eax
471c(5): lea 0x8(%r8,%rax,4),%r9
4721(8): movdqa 0x203b47(%rip),%xmm0
4729(5): movaps %xmm0,0x10(%rsp)
472e(8): movdqa 0x203b4a(%rip),%xmm0
4736(5): movaps %xmm0,0x20(%rsp)
473b(3): mov (%r9),%edx
473e(2): mov %edx,%eax
4740(2): shr %cl,%eax
4742(2): not %eax
4744(3): and $0x1,%eax
4747(2): shl/sal %cl,%eax
4749(3): mov %r8,%rcx
474c(2): xor %edx,%eax
474e(3): mov %rsi,%rdx
4751(3): mov %rdi,%rsi
4754(3): mov %eax,(%r9)
4757(2): xor %edi,%edi
4759(5): call 0xfffff8f7(%rip)
475e(5): mov 0x38(%rsp),%rsi
4763(9): xor $0x28,%rsi
476c(2): jnz 0x7(%rip)
476e(4): add $0x48,%rsp
4772(1): ret near (%rsp)
4773(5): call 0xffffcddd(%rip)

"quotearg_char" :
4780(4): movsx %sil,%edx
4784(7): mov $0xffffffff,%rsi
478b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4790(5): mov $0x3a,%edx
4795(7): mov $0xffffffff,%rsi
479c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
47b0(5): mov $0x3a,%edx
47b5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
47c0(4): sub $0x48,%rsp
47c4(3): mov %rdx,%rax
47c7(9): mov $0x28,%rdx
47d0(5): mov %rdx,0x38(%rsp)
47d5(2): xor %edx,%edx
47d7(3): cmp $0xa,%esi
47da(2): jz 0x6a(%rip)
47dc(3): mov %esi,(%rsp)
47df(3): mov %rsp,%rcx
47e2(7): mov $0xffffffff,%rdx
47e9(3): mov %rax,%rsi
47ec(9): mov $0x0,0x4(%rsp)
47f5(9): mov $0x4000000,0xc(%rsp)
47fe(9): mov $0x0,0x14(%rsp)
4807(9): mov $0x0,0x1c(%rsp)
4810(9): mov $0x0,0x24(%rsp)
4819(9): mov $0x0,0x2c(%rsp)
4822(8): mov $0x0,0x34(%rsp)
482a(5): call 0xfffff826(%rip)
482f(5): mov 0x38(%rsp),%rcx
4834(9): xor $0x28,%rcx
483d(2): jnz 0xc(%rip)
483f(4): add $0x48,%rsp
4843(1): ret near (%rsp)
4844(5): call 0xffffcc4c(%rip)
4849(5): call 0xffffcd07(%rip)

"quotearg_n_custom_mem" :
4850(4): sub $0x48,%rsp
4854(3): mov %rcx,%r9
4857(7): mov 0x203a32(%rip),%rcx
485e(8): movdqa 0x2039fa(%rip),%xmm0
4866(9): mov $0x28,%rax
486f(5): mov %rax,0x38(%rsp)
4874(2): xor %eax,%eax
4876(4): movaps %xmm0,(%rsp)
487a(3): test %rsi,%rsi
487d(5): mov %rcx,0x30(%rsp)
4882(7): mov $0xa,(%rsp)
4889(8): movdqa 0x2039df(%rip),%xmm0
4891(5): movaps %xmm0,0x10(%rsp)
4896(8): movdqa 0x2039e2(%rip),%xmm0
489e(5): movaps %xmm0,0x20(%rsp)
48a3(2): jz 0x34(%rip)
48a5(3): test %rdx,%rdx
48a8(2): jz 0x2f(%rip)
48aa(5): mov %rsi,0x28(%rsp)
48af(5): mov %rdx,0x30(%rsp)
48b4(3): mov %rsp,%rcx
48b7(3): mov %r8,%rdx
48ba(3): mov %r9,%rsi
48bd(5): call 0xfffff793(%rip)
48c2(5): mov 0x38(%rsp),%rdi
48c7(9): xor $0x28,%rdi
48d0(2): jnz 0xc(%rip)
48d2(4): add $0x48,%rsp
48d6(1): ret near (%rsp)
48d7(5): call 0xffffcbb9(%rip)
48dc(5): call 0xffffcc74(%rip)

"quotearg_n_custom" :
48f0(7): mov $0xffffffff,%r8
48f7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4900(3): mov %rdx,%rcx
4903(7): mov $0xffffffff,%r8
490a(3): mov %rsi,%rdx
490d(3): mov %rdi,%rsi
4910(2): xor %edi,%edi
4912(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4920(3): mov %rcx,%r8
4923(3): mov %rdx,%rcx
4926(3): mov %rsi,%rdx
4929(3): mov %rdi,%rsi
492c(2): xor %edi,%edi
492e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4940(7): lea 0x2036f9(%rip),%rcx
4947(5): jmp 0xfffff709(%rip)

"quote_mem" :
4950(7): lea 0x2036e9(%rip),%rcx
4957(3): mov %rsi,%rdx
495a(3): mov %rdi,%rsi
495d(2): xor %edi,%edi
495f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4970(7): lea 0x2036c9(%rip),%rcx
4977(7): mov $0xffffffff,%rdx
497e(5): jmp 0xfffff6d2(%rip)

"quote" :
4990(7): lea 0x2036a9(%rip),%rcx
4997(3): mov %rdi,%rsi
499a(7): mov $0xffffffff,%rdx
49a1(2): xor %edi,%edi
49a3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
49b0(2): push %r15
49b2(2): push %r14
49b4(2): push %r13
49b6(2): push %r12
49b8(3): mov %r9,%r12
49bb(1): push %rbp
49bc(1): push %rbx
49bd(3): mov %rdi,%rbp
49c0(3): mov %r8,%rbx
49c3(4): sub $0x28,%rsp
49c7(3): test %rsi,%rsi
49ca(6): jz 0x11e(%rip)
49d0(3): mov %rdx,%r8
49d3(7): lea 0x190e(%rip),%rdx
49da(3): mov %rcx,%r9
49dd(2): xor %eax,%eax
49df(3): mov %rsi,%rcx
49e2(5): mov $0x1,%esi
49e7(5): call 0xffffcd49(%rip)
49ec(7): lea 0x1908(%rip),%rsi
49f3(2): xor %edi,%edi
49f5(5): mov $0x5,%edx
49fa(5): call 0xffffcb26(%rip)
49ff(7): lea 0x1c1a(%rip),%rdx
4a06(3): mov %rax,%rcx
4a09(6): mov $0x7e3,%r8d
4a0f(5): mov $0x1,%esi
4a14(3): mov %rbp,%rdi
4a17(2): xor %eax,%eax
4a19(5): call 0xffffcd17(%rip)
4a1e(7): lea 0x1963(%rip),%rsi
4a25(2): xor %edi,%edi
4a27(5): mov $0x5,%edx
4a2c(5): call 0xffffcaf4(%rip)
4a31(3): mov %rbp,%rsi
4a34(3): mov %rax,%rdi
4a37(5): call 0xffffcbd9(%rip)
4a3c(4): cmp $0x9,%r12
4a40(6): jnbe 0x340(%rip)
4a46(7): lea 0x1b9b(%rip),%rdx
4a4d(4): movsxd 0x0(%rdx,%r12,4),%rax
4a51(3): add %rdx,%rax
4a54(2): jmp %rax
4a56(a): nop 0x0(%rax,%rax,1)
4a60(4): mov 0x38(%rbx),%r9
4a64(4): mov 0x10(%rbx),%rax
4a68(7): lea 0x1a89(%rip),%rsi
4a6f(4): mov 0x8(%rbx),%r8
4a73(5): mov $0x5,%edx
4a78(2): xor %edi,%edi
4a7a(4): mov 0x30(%rbx),%r13
4a7e(4): mov 0x28(%rbx),%r12
4a82(5): mov %r9,0x10(%rsp)
4a87(4): mov 0x20(%rbx),%r15
4a8b(4): mov 0x18(%rbx),%r14
4a8f(4): mov %rax,(%rsp)
4a93(5): mov %r8,0x8(%rsp)
4a98(3): mov (%rbx),%rbx
4a9b(5): call 0xffffca85(%rip)
4aa0(4): sub $0x8,%rsp
4aa4(5): mov 0x18(%rsp),%r9
4aa9(3): mov %rax,%rdx
4aac(3): mov %rbx,%rcx
4aaf(5): mov $0x1,%esi
4ab4(3): mov %rbp,%rdi
4ab7(2): xor %eax,%eax
4ab9(2): push %r9
4abb(2): push %r13
4abd(2): push %r12
4abf(2): push %r15
4ac1(2): push %r14
4ac3(5): mov 0x30(%rsp),%r9
4ac8(5): mov 0x38(%rsp),%r8
4acd(5): call 0xffffcc63(%rip)
4ad2(4): add $0x30,%rsp
4ad6(4): add $0x28,%rsp
4ada(1): pop %rbx
4adb(1): pop %rbp
4adc(2): pop %r12
4ade(2): pop %r13
4ae0(2): pop %r14
4ae2(2): pop %r15
4ae4(1): ret near (%rsp)
4ae5(3): nop (%rax)
4ae8(3): mov %rcx,%r8
4aeb(3): mov %rdx,%rcx
4aee(7): lea 0x17ff(%rip),%rdx
4af5(5): mov $0x1,%esi
4afa(2): xor %eax,%eax
4afc(5): call 0xffffcc34(%rip)
4b01(5): jmp 0xfffffeeb(%rip)
4b06(a): nop 0x0(%rax,%rax,1)
4b10(4): mov 0x40(%rbx),%r10
4b14(4): mov 0x38(%rbx),%r9
4b18(7): lea 0x1a09(%rip),%rsi
4b1f(4): mov 0x10(%rbx),%rax
4b23(4): mov 0x8(%rbx),%r8
4b27(5): mov $0x5,%edx
4b2c(4): mov 0x30(%rbx),%r13
4b30(4): mov 0x28(%rbx),%r12
4b34(4): mov 0x20(%rbx),%r15
4b38(4): mov 0x18(%rbx),%r14
4b3c(3): mov (%rbx),%rbx
4b3f(5): mov %r10,0x18(%rsp)
4b44(5): mov %r9,0x10(%rsp)
4b49(4): mov %rax,(%rsp)
4b4d(5): mov %r8,0x8(%rsp)
4b52(2): xor %edi,%edi
4b54(5): call 0xffffc9cc(%rip)
4b59(5): mov 0x18(%rsp),%r10
4b5e(2): push %r10
4b60(5): jmp 0xffffff44(%rip)
4b65(3): nop (%rax)
4b68(3): mov (%rbx),%rbx
4b6b(7): lea 0x178d(%rip),%rsi
4b72(5): mov $0x5,%edx
4b77(2): xor %edi,%edi
4b79(5): call 0xffffc9a7(%rip)
4b7e(4): add $0x28,%rsp
4b82(3): mov %rbx,%rcx
4b85(3): mov %rbp,%rdi
4b88(1): pop %rbx
4b89(1): pop %rbp
4b8a(2): pop %r12
4b8c(2): pop %r13
4b8e(2): pop %r14
4b90(2): pop %r15
4b92(3): mov %rax,%rdx
4b95(5): mov $0x1,%esi
4b9a(2): xor %eax,%eax
4b9c(5): jmp 0xffffcb94(%rip)
4ba1(7): nop 0x0(%rax)
4ba8(4): mov 0x8(%rbx),%r12
4bac(7): lea 0x175c(%rip),%rsi
4bb3(3): mov (%rbx),%rbx
4bb6(5): mov $0x5,%edx
4bbb(2): xor %edi,%edi
4bbd(5): call 0xffffc963(%rip)
4bc2(4): add $0x28,%rsp
4bc6(3): mov %r12,%r8
4bc9(3): mov %rbx,%rcx
4bcc(3): mov %rbp,%rdi
4bcf(3): mov %rax,%rdx
4bd2(5): mov $0x1,%esi
4bd7(1): pop %rbx
4bd8(1): pop %rbp
4bd9(2): pop %r12
4bdb(2): pop %r13
4bdd(2): pop %r14
4bdf(2): pop %r15
4be1(2): xor %eax,%eax
4be3(5): jmp 0xffffcb4d(%rip)
4be8(8): nop 0x0(%rax,%rax,1)
4bf0(4): mov 0x10(%rbx),%r13
4bf4(4): mov 0x8(%rbx),%r12
4bf8(7): lea 0x1727(%rip),%rsi
4bff(3): mov (%rbx),%rbx
4c02(5): mov $0x5,%edx
4c07(2): xor %edi,%edi
4c09(5): call 0xffffc917(%rip)
4c0e(4): add $0x28,%rsp
4c12(3): mov %r13,%r9
4c15(3): mov %r12,%r8
4c18(3): mov %rbx,%rcx
4c1b(3): mov %rbp,%rdi
4c1e(3): mov %rax,%rdx
4c21(1): pop %rbx
4c22(1): pop %rbp
4c23(2): pop %r12
4c25(2): pop %r13
4c27(2): pop %r14
4c29(2): pop %r15
4c2b(5): mov $0x1,%esi
4c30(2): xor %eax,%eax
4c32(5): jmp 0xffffcafe(%rip)
4c37(9): nop 0x0(%rax,%rax,1)
4c40(7): lea 0x1811(%rip),%rsi
4c47(5): mov $0x5,%edx
4c4c(2): xor %edi,%edi
4c4e(4): mov 0x18(%rbx),%r14
4c52(4): mov 0x10(%rbx),%r13
4c56(4): mov 0x8(%rbx),%r12
4c5a(3): mov (%rbx),%rbx
4c5d(5): call 0xffffc8c3(%rip)
4c62(4): sub $0x8,%rsp
4c66(2): push %r14
4c68(3): mov %rax,%rdx
4c6b(3): mov %r13,%r9
4c6e(3): mov %r12,%r8
4c71(3): mov %rbx,%rcx
4c74(3): mov %rbp,%rdi
4c77(5): mov $0x1,%esi
4c7c(2): xor %eax,%eax
4c7e(5): call 0xffffcab2(%rip)
4c83(1): pop %rax
4c84(1): pop %rdx
4c85(4): add $0x28,%rsp
4c89(1): pop %rbx
4c8a(1): pop %rbp
4c8b(2): pop %r12
4c8d(2): pop %r13
4c8f(2): pop %r14
4c91(2): pop %r15
4c93(1): ret near (%rsp)
4c94(4): nop 0x0(%rax)
4c98(4): mov 0x20(%rbx),%r15
4c9c(7): lea 0x17d5(%rip),%rsi
4ca3(5): mov $0x5,%edx
4ca8(2): xor %edi,%edi
4caa(4): mov 0x18(%rbx),%r14
4cae(4): mov 0x10(%rbx),%r13
4cb2(4): mov 0x8(%rbx),%r12
4cb6(3): mov (%rbx),%rbx
4cb9(5): call 0xffffc867(%rip)
4cbe(2): push %r15
4cc0(2): jmp 0xffffffa6(%rip)
4cc2(6): nop 0x0(%rax,%rax,1)
4cc8(4): mov 0x8(%rbx),%r8
4ccc(4): mov 0x28(%rbx),%r12
4cd0(7): lea 0x17c9(%rip),%rsi
4cd7(4): mov 0x20(%rbx),%r15
4cdb(4): mov 0x18(%rbx),%r14
4cdf(5): mov $0x5,%edx
4ce4(4): mov 0x10(%rbx),%r13
4ce8(2): xor %edi,%edi
4cea(3): mov (%rbx),%rbx
4ced(4): mov %r8,(%rsp)
4cf1(5): call 0xffffc82f(%rip)
4cf6(4): sub $0x8,%rsp
4cfa(3): mov %r13,%r9
4cfd(2): push %r12
4cff(2): push %r15
4d01(2): push %r14
4d03(5): mov 0x20(%rsp),%r8
4d08(3): mov %rbx,%rcx
4d0b(3): mov %rax,%rdx
4d0e(3): mov %rbp,%rdi
4d11(5): mov $0x1,%esi
4d16(2): xor %eax,%eax
4d18(5): call 0xffffca18(%rip)
4d1d(4): add $0x20,%rsp
4d21(4): add $0x28,%rsp
4d25(1): pop %rbx
4d26(1): pop %rbp
4d27(2): pop %r12
4d29(2): pop %r13
4d2b(2): pop %r14
4d2d(2): pop %r15
4d2f(1): ret near (%rsp)
4d30(4): mov 0x10(%rbx),%r9
4d34(4): mov 0x30(%rbx),%r13
4d38(7): lea 0x1789(%rip),%rsi
4d3f(4): mov 0x28(%rbx),%r12
4d43(4): mov 0x20(%rbx),%r15
4d47(5): mov $0x5,%edx
4d4c(4): mov 0x18(%rbx),%r14
4d50(4): mov 0x8(%rbx),%r8
4d54(2): xor %edi,%edi
4d56(5): mov %r9,0x8(%rsp)
4d5b(3): mov (%rbx),%rbx
4d5e(4): mov %r8,(%rsp)
4d62(5): call 0xffffc7be(%rip)
4d67(2): push %r13
4d69(2): push %r12
4d6b(2): push %r15
4d6d(2): push %r14
4d6f(5): mov 0x28(%rsp),%r9
4d74(2): jmp 0xffffff8f(%rip)
4d76(a): nop 0x0(%rax,%rax,1)
4d80(4): mov 0x40(%rbx),%r10
4d84(4): mov 0x38(%rbx),%r9
4d88(5): mov $0x5,%edx
4d8d(4): mov 0x10(%rbx),%rax
4d91(4): mov 0x8(%rbx),%r8
4d95(7): lea 0x17c4(%rip),%rsi
4d9c(4): mov 0x30(%rbx),%r13
4da0(4): mov 0x28(%rbx),%r12
4da4(4): mov 0x20(%rbx),%r15
4da8(4): mov 0x18(%rbx),%r14
4dac(5): mov %r10,0x18(%rsp)
4db1(5): mov %r9,0x10(%rsp)
4db6(4): mov %rax,(%rsp)
4dba(5): mov %r8,0x8(%rsp)
4dbf(3): mov (%rbx),%rbx
4dc2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4dd0(3): xor %r9d,%r9d
4dd3(4): cmp $0x0,(%r8)
4dd7(2): jz 0x14(%rip)
4dd9(7): nop 0x0(%rax)
4de0(4): add $0x1,%r9
4de4(5): cmp $0x0,0x0(%r8,%r9,8)
4de9(2): jnz 0xfffffff7(%rip)
4deb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4df0(4): sub $0x68,%rsp
4df4(3): mov %r8,%r10
4df7(3): xor %r9d,%r9d
4dfa(9): mov $0x28,%rax
4e03(5): mov %rax,0x58(%rsp)
4e08(2): xor %eax,%eax
4e0a(3): mov %rsp,%r8
4e0d(3): nop (%rax)
4e10(3): mov (%r10),%eax
4e13(3): cmp $0x2f,%eax
4e16(2): jnbe 0x44(%rip)
4e18(3): mov %eax,%r11d
4e1b(4): add 0x10(%r10),%r11
4e1f(3): add $0x8,%eax
4e22(3): mov %eax,(%r10)
4e25(3): mov (%r11),%rax
4e28(3): test %rax,%rax
4e2b(4): mov %rax,0x0(%r8,%r9,8)
4e2f(2): jz 0xc(%rip)
4e31(4): add $0x1,%r9
4e35(4): cmp $0xa,%r9
4e39(2): jnz 0xffffffd7(%rip)
4e3b(5): call 0xfffffb75(%rip)
4e40(5): mov 0x58(%rsp),%rax
4e45(9): xor $0x28,%rax
4e4e(2): jnz 0x7(%rip)
4e50(4): add $0x68,%rsp
4e54(1): ret near (%rsp)
4e55(5): call 0xffffc6fb(%rip)
4e5a(4): mov 0x8(%r10),%r11
4e5e(4): lea 0x8(%r11),%rax
4e62(4): mov %rax,0x8(%r10)
4e66(2): jmp 0xffffffbf(%rip)

"version_etc" :
4e70(1): push %rbp
4e71(1): push %rbx
4e72(6): mov $0x20,%r10d
4e78(3): xor %r11d,%r11d
4e7b(7): sub $0xb8,%rsp
4e82(9): mov $0x28,%rax
4e8b(5): mov %rax,0x78(%rsp)
4e90(2): xor %eax,%eax
4e92(8): lea 0xd0(%rsp),%rax
4e9a(8): mov %r8,0xa0(%rsp)
4ea2(8): lea 0xd0(%rsp),%rbx
4eaa(5): lea 0x20(%rsp),%r8
4eaf(8): mov %r9,0xa8(%rsp)
4eb7(8): mov $0x20,0x8(%rsp)
4ebf(5): mov %rax,0x10(%rsp)
4ec4(8): lea 0x80(%rsp),%rax
4ecc(3): xor %r9d,%r9d
4ecf(5): mov %rax,0x18(%rsp)
4ed4(3): mov %rax,%rbp
4ed7(9): nop 0x0(%rax,%rax,1)
4ee0(4): cmp $0x2f,%r10d
4ee4(2): jnbe 0x58(%rip)
4ee6(3): mov %r10d,%eax
4ee9(6): mov $0x1,%r11d
4eef(4): add $0x8,%r10d
4ef3(3): add %rbp,%rax
4ef6(3): mov (%rax),%rax
4ef9(3): test %rax,%rax
4efc(4): mov %rax,0x0(%r8,%r9,8)
4f00(2): jz 0xc(%rip)
4f02(4): add $0x1,%r9
4f06(4): cmp $0xa,%r9
4f0a(2): jnz 0xffffffd6(%rip)
4f0c(3): test %r11b,%r11b
4f0f(2): jnz 0x26(%rip)
4f11(5): call 0xfffffa9f(%rip)
4f16(5): mov 0x78(%rsp),%rax
4f1b(9): xor $0x28,%rax
4f24(2): jnz 0xc(%rip)
4f26(7): add $0xb8,%rsp
4f2d(1): pop %rbx
4f2e(1): pop %rbp
4f2f(1): ret near (%rsp)
4f30(5): call 0xffffc620(%rip)
4f35(5): mov %r10d,0x8(%rsp)
4f3a(2): jmp 0xffffffd7(%rip)
4f3c(3): mov %rbx,%rax
4f3f(4): add $0x8,%rbx
4f43(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4f50(1): push %rbx
4f51(7): lea 0x13ea(%rip),%rsi
4f58(5): mov $0x5,%edx
4f5d(2): xor %edi,%edi
4f5f(5): call 0xffffc5c1(%rip)
4f64(7): lea 0x13ec(%rip),%rdx
4f6b(3): mov %rax,%rsi
4f6e(5): mov $0x1,%edi
4f73(2): xor %eax,%eax
4f75(5): call 0xffffc74b(%rip)
4f7a(7): lea 0x13ec(%rip),%rsi
4f81(5): mov $0x5,%edx
4f86(2): xor %edi,%edi
4f88(5): call 0xffffc598(%rip)
4f8d(7): lea 0xa1c(%rip),%rcx
4f94(7): lea 0x6e8(%rip),%rdx
4f9b(3): mov %rax,%rsi
4f9e(5): mov $0x1,%edi
4fa3(2): xor %eax,%eax
4fa5(5): call 0xffffc71b(%rip)
4faa(7): mov 0x2030f7(%rip),%rbx
4fb1(7): lea 0x15e8(%rip),%rsi
4fb8(2): xor %edi,%edi
4fba(5): mov $0x5,%edx
4fbf(5): call 0xffffc561(%rip)
4fc4(3): mov %rbx,%rsi
4fc7(3): mov %rax,%rdi
4fca(1): pop %rbx
4fcb(5): jmp 0xffffc645(%rip)

"xmalloc" :
4fd0(1): push %rbx
4fd1(3): mov %rdi,%rbx
4fd4(5): call 0xffffc67c(%rip)
4fd9(3): test %rax,%rax
4fdc(2): jnz 0x7(%rip)
4fde(3): test %rbx,%rbx
4fe1(2): jnz 0x4(%rip)
4fe3(1): pop %rbx
4fe4(1): ret near (%rsp)
4fe5(5): call 0x23b(%rip)

"xnmalloc" :
4ff0(3): mov %rdi,%rax
4ff3(3): mul %rax,%rsi,%rdx
4ff6(3): mov %rax,%rdi
4ff9(3): seto %al
4ffc(3): test %rdi,%rdi
4fff(2): js 0xc(%rip)
5001(3): movzx %al,%eax
5004(3): test %rax,%rax
5007(2): jnz 0x4(%rip)
5009(2): jmp 0xffffffc7(%rip)
500b(4): sub $0x8,%rsp
500f(5): call 0x211(%rip)

"xrealloc" :
5030(3): test %rsi,%rsi
5033(1): push %rbx
5034(3): mov %rsi,%rbx
5037(2): jnz 0x7(%rip)
5039(3): test %rdi,%rdi
503c(2): jnz 0x1c(%rip)
503e(3): mov %rbx,%rsi
5041(5): call 0xffffc65f(%rip)
5046(3): test %rax,%rax
5049(2): jnz 0x7(%rip)
504b(3): test %rbx,%rbx
504e(2): jnz 0x13(%rip)
5050(1): pop %rbx
5051(1): ret near (%rsp)
5052(6): nop 0x0(%rax,%rax,1)
5058(5): call 0xffffc428(%rip)
505d(2): xor %eax,%eax
505f(1): pop %rbx
5060(1): ret near (%rsp)
5061(5): call 0x1bf(%rip)

"xnrealloc" :
5070(3): mov %rsi,%rax
5073(3): mul %rax,%rdx,%rdx
5076(3): mov %rax,%rsi
5079(3): seto %al
507c(3): test %rsi,%rsi
507f(2): js 0xc(%rip)
5081(3): movzx %al,%eax
5084(3): test %rax,%rax
5087(2): jnz 0x4(%rip)
5089(2): jmp 0xffffffa7(%rip)
508b(4): sub $0x8,%rsp
508f(5): call 0x191(%rip)

"x2nrealloc" :
50a0(3): test %rdi,%rdi
50a3(3): mov %rdx,%r9
50a6(3): mov (%rsi),%rcx
50a9(2): jz 0x37(%rip)
50ab(2): xor %edx,%edx
50ad(a): mov $0x6148914691236517204,%rax
50b7(3): div %r9,%rax
50ba(3): cmp %rcx,%rax
50bd(2): jbe 0x3e(%rip)
50bf(3): mov %rcx,%rax
50c2(3): shr $0x1,%rax
50c5(5): lea 0x1(%rax,%rcx,1),%rcx
50ca(3): mov %rcx,(%rsi)
50cd(4): imul %r9,%rcx
50d1(3): mov %rcx,%rsi
50d4(5): jmp 0xffffff5c(%rip)
50d9(7): nop 0x0(%rax)
50e0(3): test %rcx,%rcx
50e3(2): jz 0x25(%rip)
50e5(3): mov %rcx,%rax
50e8(3): mul %rax,%r9,%rdx
50eb(3): seto %dl
50ee(3): test %rax,%rax
50f1(3): movzx %dl,%edx
50f4(2): js 0x7(%rip)
50f6(3): test %rdx,%rdx
50f9(2): jz 0xffffffd1(%rip)
50fb(4): sub $0x8,%rsp
50ff(5): call 0x121(%rip)
5104(4): nop 0x0(%rax)
5108(2): xor %edx,%edx
510a(5): mov $0x80,%eax
510f(3): xor %r8d,%r8d
5112(3): div %r9,%rax
5115(3): test %rax,%rax
5118(4): setz %r8b
511c(4): lea 0x0(%r8,%rax,1),%rcx
5120(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5130(3): test %rdi,%rdi
5133(3): mov (%rsi),%rax
5136(2): jz 0x2a(%rip)
5138(a): mov $0x6148914691236517203,%rdx
5142(3): cmp %rdx,%rax
5145(2): jnbe 0x2c(%rip)
5147(3): mov %rax,%rdx
514a(3): shr $0x1,%rdx
514d(5): lea 0x1(%rdx,%rax,1),%rax
5152(3): mov %rax,(%rsi)
5155(3): mov %rax,%rsi
5158(5): jmp 0xfffffed8(%rip)
515d(3): nop (%rax)
5160(3): test %rax,%rax
5163(5): mov $0x80,%edx
5168(4): cmove %rdx,%rax
516c(3): test %rax,%rax
516f(2): jns 0xffffffe3(%rip)
5171(4): sub $0x8,%rsp
5175(5): call 0xab(%rip)

"xzalloc" :
5180(1): push %rbx
5181(3): mov %rdi,%rbx
5184(5): call 0xfffffe4c(%rip)
5189(3): mov %rbx,%rdx
518c(2): xor %esi,%esi
518e(3): mov %rax,%rdi
5191(1): pop %rbx
5192(5): jmp 0xffffc42e(%rip)

"xcalloc" :
51a0(3): mov %rdi,%rax
51a3(4): sub $0x8,%rsp
51a7(3): mul %rax,%rsi,%rdx
51aa(3): seto %dl
51ad(3): test %rax,%rax
51b0(2): js 0x19(%rip)
51b2(3): movzx %dl,%edx
51b5(3): test %rdx,%rdx
51b8(2): jnz 0x11(%rip)
51ba(5): call 0xffffc466(%rip)
51bf(3): test %rax,%rax
51c2(2): jz 0x7(%rip)
51c4(4): add $0x8,%rsp
51c8(1): ret near (%rsp)
51c9(5): call 0x57(%rip)

"xmemdup" :
51d0(1): push %rbp
51d1(1): push %rbx
51d2(3): mov %rdi,%rbp
51d5(3): mov %rsi,%rdi
51d8(3): mov %rsi,%rbx
51db(4): sub $0x8,%rsp
51df(5): call 0xfffffdf1(%rip)
51e4(4): add $0x8,%rsp
51e8(3): mov %rbx,%rdx
51eb(3): mov %rbp,%rsi
51ee(1): pop %rbx
51ef(1): pop %rbp
51f0(3): mov %rax,%rdi
51f3(5): jmp 0xffffc43d(%rip)

"xstrdup" :
5200(1): push %rbx
5201(3): mov %rdi,%rbx
5204(5): call 0xffffc33c(%rip)
5209(3): mov %rbx,%rdi
520c(4): lea 0x1(%rax),%rsi
5210(1): pop %rbx
5211(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5220(7): lea 0x1428(%rip),%rsi
5227(4): sub $0x8,%rsp
522b(5): mov $0x5,%edx
5230(2): xor %edi,%edi
5232(5): call 0xffffc2ee(%rip)
5237(6): mov 0x202deb(%rip),%edi
523d(7): lea 0xb7f(%rip),%rdx
5244(3): mov %rax,%rcx
5247(2): xor %esi,%esi
5249(2): xor %eax,%eax
524b(5): call 0xffffc485(%rip)
5250(5): call 0xffffc240(%rip)

"xstrndup" :
5260(4): sub $0x8,%rsp
5264(5): call 0xffffc38c(%rip)
5269(3): test %rax,%rax
526c(2): jz 0x7(%rip)
526e(4): add $0x8,%rsp
5272(1): ret near (%rsp)
5273(5): call 0xffffffad(%rip)

"rpl_fclose" :
5280(2): push %r12
5282(1): push %rbp
5283(1): push %rbx
5284(3): mov %rdi,%rbx
5287(5): call 0xffffc3b9(%rip)
528c(2): test %eax,%eax
528e(3): mov %rbx,%rdi
5291(2): js 0x56(%rip)
5293(5): call 0xffffc3ed(%rip)
5298(2): test %eax,%eax
529a(2): jnz 0x2e(%rip)
529c(3): mov %rbx,%rdi
529f(5): call 0x61(%rip)
52a4(2): test %eax,%eax
52a6(2): jz 0x3e(%rip)
52a8(5): call 0xffffc1f8(%rip)
52ad(3): mov (%rax),%r12d
52b0(3): mov %rbx,%rdi
52b3(3): mov %rax,%rbp
52b6(5): call 0xffffc24a(%rip)
52bb(3): test %r12d,%r12d
52be(2): jnz 0x32(%rip)
52c0(1): pop %rbx
52c1(1): pop %rbp
52c2(2): pop %r12
52c4(1): ret near (%rsp)
52c5(3): nop (%rax)
52c8(3): mov %rbx,%rdi
52cb(5): call 0xffffc375(%rip)
52d0(2): xor %esi,%esi
52d2(5): mov $0x1,%edx
52d7(2): mov %eax,%edi
52d9(5): call 0xffffc2c7(%rip)
52de(4): cmp $0xffffffff,%rax
52e2(2): jnz 0xffffffba(%rip)
52e4(3): mov %rbx,%rdi
52e7(1): pop %rbx
52e8(1): pop %rbp
52e9(2): pop %r12
52eb(5): jmp 0xffffc215(%rip)
52f0(4): mov %r12d,0x0(%rbp)
52f4(5): mov $0xffffffff,%eax
52f9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5300(3): test %rdi,%rdi
5303(1): push %rbx
5304(3): mov %rdi,%rbx
5307(2): jz 0x13(%rip)
5309(5): call 0xffffc377(%rip)
530e(2): test %eax,%eax
5310(2): jz 0xa(%rip)
5312(6): test $0x100,(%rbx)
5318(2): jnz 0x10(%rip)
531a(3): mov %rbx,%rdi
531d(1): pop %rbx
531e(5): jmp 0xffffc342(%rip)
5323(5): nop 0x0(%rax,%rax,1)
5328(3): mov %rbx,%rdi
532b(5): mov $0x1,%edx
5330(2): xor %esi,%esi
5332(5): call 0xe(%rip)
5337(3): mov %rbx,%rdi
533a(1): pop %rbx
533b(5): jmp 0xffffc325(%rip)

"rpl_fseeko" :
5340(4): mov 0x8(%rdi),%rax
5344(4): cmp %rax,0x10(%rdi)
5348(2): jz 0x8(%rip)
534a(5): jmp 0xffffc396(%rip)
534f(1): nop 
5350(4): mov 0x20(%rdi),%rax
5354(4): cmp %rax,0x28(%rdi)
5358(2): jnz 0xfffffff2(%rip)
535a(5): cmp $0x0,0x48(%rdi)
535f(2): jnz 0xffffffeb(%rip)
5361(2): push %r12
5363(1): push %rbp
5364(3): mov %edx,%r12d
5367(1): push %rbx
5368(3): mov %rsi,%rbp
536b(3): mov %rdi,%rbx
536e(5): call 0xffffc2d2(%rip)
5373(3): mov %r12d,%edx
5376(3): mov %rbp,%rsi
5379(2): mov %eax,%edi
537b(5): call 0xffffc225(%rip)
5380(4): cmp $0xffffffff,%rax
5384(2): jz 0xe(%rip)
5386(3): and $0xef,(%rbx)
5389(7): mov %rax,0x90(%rbx)
5390(2): xor %eax,%eax
5392(1): pop %rbx
5393(1): pop %rbp
5394(2): pop %r12
5396(1): ret near (%rsp)

"rpl_mbrtowc" :
53a0(2): push %r13
53a2(2): push %r12
53a4(3): mov %rsi,%r13
53a7(1): push %rbp
53a8(1): push %rbx
53a9(3): mov %rdi,%rbx
53ac(3): mov %rdx,%r12
53af(4): sub $0x18,%rsp
53b3(9): mov $0x28,%rax
53bc(5): mov %rax,0x8(%rsp)
53c1(2): xor %eax,%eax
53c3(5): lea 0x4(%rsp),%rax
53c8(3): test %rdi,%rdi
53cb(4): cmove %rax,%rbx
53cf(3): mov %rbx,%rdi
53d2(5): call 0xffffc19e(%rip)
53d7(4): cmp $0xfffffffd,%rax
53db(3): mov %rax,%rbp
53de(2): jbe 0x22(%rip)
53e0(3): test %r12,%r12
53e3(2): jz 0x1d(%rip)
53e5(2): xor %edi,%edi
53e7(5): call 0xc9(%rip)
53ec(2): test %al,%al
53ee(2): jnz 0x12(%rip)
53f0(5): movzx 0x0(%r13),%eax
53f5(5): mov $0x1,%ebp
53fa(2): mov %eax,(%rbx)
53fc(4): nop 0x0(%rax)
5400(5): mov 0x8(%rsp),%rdx
5405(9): xor $0x28,%rdx
540e(3): mov %rbp,%rax
5411(2): jnz 0xd(%rip)
5413(4): add $0x18,%rsp
5417(1): pop %rbx
5418(1): pop %rbp
5419(2): pop %r12
541b(2): pop %r13
541d(1): ret near (%rsp)
541e(5): call 0xffffc132(%rip)

"close_stream" :
5430(2): push %r12
5432(1): push %rbp
5433(3): mov %rdi,%rbp
5436(1): push %rbx
5437(5): call 0xffffc099(%rip)
543c(3): mov 0x0(%rbp),%ebx
543f(3): mov %rbp,%rdi
5442(3): mov %rax,%r12
5445(5): call 0xfffffe3b(%rip)
544a(3): and $0x20,%ebx
544d(2): test %ebx,%ebx
544f(2): jnz 0x19(%rip)
5451(2): test %eax,%eax
5453(2): jz 0xc(%rip)
5455(3): test %r12,%r12
5458(5): mov $0xffffffff,%eax
545d(2): jz 0x3b(%rip)
545f(1): pop %rbx
5460(1): pop %rbp
5461(2): pop %r12
5463(1): ret near (%rsp)
5464(4): nop 0x0(%rax)
5468(2): test %eax,%eax
546a(2): jnz 0x1e(%rip)
546c(5): call 0xffffc034(%rip)
5471(6): mov $0x0,(%rax)
5477(5): mov $0xffffffff,%eax
547c(1): pop %rbx
547d(1): pop %rbp
547e(2): pop %r12
5480(1): ret near (%rsp)
5481(7): nop 0x0(%rax)
5488(1): pop %rbx
5489(5): mov $0xffffffff,%eax
548e(1): pop %rbp
548f(2): pop %r12
5491(1): ret near (%rsp)
5492(6): nop 0x0(%rax,%rax,1)
5498(5): call 0xffffc008(%rip)
549d(3): cmp $0x9,(%rax)
54a0(1): pop %rbx
54a1(1): pop %rbp
54a2(2): pop %r12
54a4(3): setnz %al
54a7(3): movzx %al,%eax
54aa(2): neg %eax
54ac(1): ret near (%rsp)

"hard_locale" :
54b0(4): sub $0x8,%rsp
54b4(2): xor %esi,%esi
54b6(5): call 0xffffc1fa(%rip)
54bb(3): mov %rax,%rdx
54be(5): mov $0x1,%eax
54c3(3): test %rdx,%rdx
54c6(2): jz 0x1f(%rip)
54c8(7): lea 0x1191(%rip),%rdi
54cf(5): mov $0x2,%ecx
54d4(3): mov %rdx,%rsi
54d7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
54d9(3): setnbe %cl
54dc(3): sbb $0x0,%cl
54df(2): xor %eax,%eax
54e1(2): test %cl,%cl
54e3(2): jnz 0xd(%rip)
54e5(4): add $0x8,%rsp
54e9(1): ret near (%rsp)
54ea(6): nop 0x0(%rax,%rax,1)
54f0(7): lea 0x116b(%rip),%rdi
54f7(5): mov $0x6,%ecx
54fc(3): mov %rdx,%rsi
54ff(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5501(3): setnbe %al
5504(2): sbb $0x0,%al
5506(2): test %al,%al
5508(3): setnz %al
550b(4): add $0x8,%rsp
550f(1): ret near (%rsp)

"locale_charset" :
5510(4): sub $0x8,%rsp
5514(5): mov $0xe,%edi
5519(5): call 0xffffc157(%rip)
551e(3): test %rax,%rax
5521(2): jz 0x1f(%rip)
5523(3): cmp $0x0,(%rax)
5526(7): lea 0x113b(%rip),%rdx
552d(4): cmove %rdx,%rax
5531(4): add $0x8,%rsp
5535(1): ret near (%rsp)
5536(a): nop 0x0(%rax,%rax,1)
5540(7): lea 0x1121(%rip),%rax
5547(4): add $0x8,%rsp
554b(1): ret near (%rsp)

"__libc_csu_init" :
5550(2): push %r15
5552(2): push %r14
5554(3): mov %rdx,%r15
5557(2): push %r13
5559(2): push %r12
555b(7): lea 0x2025ae(%rip),%r12
5562(1): push %rbp
5563(7): lea 0x2025ae(%rip),%rbp
556a(1): push %rbx
556b(3): mov %edi,%r13d
556e(3): mov %rsi,%r14
5571(3): sub %r12,%rbp
5574(4): sub $0x8,%rsp
5578(4): sar $0x3,%rbp
557c(5): call 0xffffbecc(%rip)
5581(3): test %rbp,%rbp
5584(2): jz 0x22(%rip)
5586(2): xor %ebx,%ebx
5588(8): nop 0x0(%rax,%rax,1)
5590(3): mov %r15,%rdx
5593(3): mov %r14,%rsi
5596(3): mov %r13d,%edi
5599(4): call 0x0(%r12,%rbx,8)
559d(4): add $0x1,%rbx
55a1(3): cmp %rbx,%rbp
55a4(2): jnz 0xffffffec(%rip)
55a6(4): add $0x8,%rsp
55aa(1): pop %rbx
55ab(1): pop %rbp
55ac(2): pop %r12
55ae(2): pop %r13
55b0(2): pop %r14
55b2(2): pop %r15
55b4(1): ret near (%rsp)

"atexit" :
55d0(7): mov 0x202a31(%rip),%rdx
55d7(2): xor %esi,%esi
55d9(5): jmp 0xffffc127(%rip)

"_fini" :
55e0(4): sub $0x8,%rsp
55e4(4): add $0x8,%rsp
55e8(1): ret near (%rsp)

