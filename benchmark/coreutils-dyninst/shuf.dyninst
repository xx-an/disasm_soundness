
"__uflow@plt" :
1990(6): jmp 0x20b40a(%rip)
1996(5): push $0x0

"abort@plt" :
19a0(6): jmp 0x20b402(%rip)
19a6(5): push $0x1

"__errno_location@plt" :
19b0(6): jmp 0x20b3fa(%rip)
19b6(5): push $0x2

"strncmp@plt" :
19c0(6): jmp 0x20b3f2(%rip)
19c6(5): push $0x3

"_exit@plt" :
19d0(6): jmp 0x20b3ea(%rip)
19d6(5): push $0x4

"ftello@plt" :
19e0(6): jmp 0x20b3e2(%rip)
19e6(5): push $0x5

"__fpending@plt" :
19f0(6): jmp 0x20b3da(%rip)
19f6(5): push $0x6

"__read_chk@plt" :
1a00(6): jmp 0x20b3d2(%rip)
1a06(5): push $0x7

"ferror@plt" :
1a10(6): jmp 0x20b3ca(%rip)
1a16(5): push $0x8

"fread@plt" :
1a20(6): jmp 0x20b3c2(%rip)
1a26(5): push $0x9

"fcntl@plt" :
1a30(6): jmp 0x20b3ba(%rip)
1a36(5): push $0xa

"getpid@plt" :
1a40(6): jmp 0x20b3b2(%rip)
1a46(5): push $0xb

"fread_unlocked@plt" :
1a50(6): jmp 0x20b3aa(%rip)
1a56(5): push $0xc

"textdomain@plt" :
1a60(6): jmp 0x20b3a2(%rip)
1a66(5): push $0xd

"fclose@plt" :
1a70(6): jmp 0x20b39a(%rip)
1a76(5): push $0xe

"bindtextdomain@plt" :
1a80(6): jmp 0x20b392(%rip)
1a86(5): push $0xf

"stpcpy@plt" :
1a90(6): jmp 0x20b38a(%rip)
1a96(5): push $0x10

"dcgettext@plt" :
1aa0(6): jmp 0x20b382(%rip)
1aa6(5): push $0x11

"__ctype_get_mb_cur_max@plt" :
1ab0(6): jmp 0x20b37a(%rip)
1ab6(5): push $0x12

"strlen@plt" :
1ac0(6): jmp 0x20b372(%rip)
1ac6(5): push $0x13

"__stack_chk_fail@plt" :
1ad0(6): jmp 0x20b36a(%rip)
1ad6(5): push $0x14

"getuid@plt" :
1ae0(6): jmp 0x20b362(%rip)
1ae6(5): push $0x15

"getopt_long@plt" :
1af0(6): jmp 0x20b35a(%rip)
1af6(5): push $0x16

"mbrtowc@plt" :
1b00(6): jmp 0x20b352(%rip)
1b06(5): push $0x17

"dup2@plt" :
1b10(6): jmp 0x20b34a(%rip)
1b16(5): push $0x18

"strchr@plt" :
1b20(6): jmp 0x20b342(%rip)
1b26(5): push $0x19

"strrchr@plt" :
1b30(6): jmp 0x20b33a(%rip)
1b36(5): push $0x1a

"lseek@plt" :
1b40(6): jmp 0x20b332(%rip)
1b46(5): push $0x1b

"gettimeofday@plt" :
1b50(6): jmp 0x20b32a(%rip)
1b56(5): push $0x1c

"__assert_fail@plt" :
1b60(6): jmp 0x20b322(%rip)
1b66(5): push $0x1d

"__strtoul_internal@plt" :
1b70(6): jmp 0x20b31a(%rip)
1b76(5): push $0x1e

"memset@plt" :
1b80(6): jmp 0x20b312(%rip)
1b86(5): push $0x1f

"freopen@plt" :
1b90(6): jmp 0x20b30a(%rip)
1b96(5): push $0x20

"close@plt" :
1ba0(6): jmp 0x20b302(%rip)
1ba6(5): push $0x21

"posix_fadvise@plt" :
1bb0(6): jmp 0x20b2fa(%rip)
1bb6(5): push $0x22

"memchr@plt" :
1bc0(6): jmp 0x20b2f2(%rip)
1bc6(5): push $0x23

"memcmp@plt" :
1bd0(6): jmp 0x20b2ea(%rip)
1bd6(5): push $0x24

"fputs_unlocked@plt" :
1be0(6): jmp 0x20b2e2(%rip)
1be6(5): push $0x25

"calloc@plt" :
1bf0(6): jmp 0x20b2da(%rip)
1bf6(5): push $0x26

"strcmp@plt" :
1c00(6): jmp 0x20b2d2(%rip)
1c06(5): push $0x27

"memcpy@plt" :
1c10(6): jmp 0x20b2ca(%rip)
1c16(5): push $0x28

"fileno@plt" :
1c20(6): jmp 0x20b2c2(%rip)
1c26(5): push $0x29

"getgid@plt" :
1c30(6): jmp 0x20b2ba(%rip)
1c36(5): push $0x2a

"malloc@plt" :
1c40(6): jmp 0x20b2b2(%rip)
1c46(5): push $0x2b

"fflush@plt" :
1c50(6): jmp 0x20b2aa(%rip)
1c56(5): push $0x2c

"nl_langinfo@plt" :
1c60(6): jmp 0x20b2a2(%rip)
1c66(5): push $0x2d

"__fxstat@plt" :
1c70(6): jmp 0x20b29a(%rip)
1c76(5): push $0x2e

"__freading@plt" :
1c80(6): jmp 0x20b292(%rip)
1c86(5): push $0x2f

"fwrite_unlocked@plt" :
1c90(6): jmp 0x20b28a(%rip)
1c96(5): push $0x30

"realloc@plt" :
1ca0(6): jmp 0x20b282(%rip)
1ca6(5): push $0x31

"fdopen@plt" :
1cb0(6): jmp 0x20b27a(%rip)
1cb6(5): push $0x32

"setlocale@plt" :
1cc0(6): jmp 0x20b272(%rip)
1cc6(5): push $0x33

"__printf_chk@plt" :
1cd0(6): jmp 0x20b26a(%rip)
1cd6(5): push $0x34

"setvbuf@plt" :
1ce0(6): jmp 0x20b262(%rip)
1ce6(5): push $0x35

"error@plt" :
1cf0(6): jmp 0x20b25a(%rip)
1cf6(5): push $0x36

"__explicit_bzero_chk@plt" :
1d00(6): jmp 0x20b252(%rip)
1d06(5): push $0x37

"open@plt" :
1d10(6): jmp 0x20b24a(%rip)
1d16(5): push $0x38

"fseeko@plt" :
1d20(6): jmp 0x20b242(%rip)
1d26(5): push $0x39

"fopen@plt" :
1d30(6): jmp 0x20b23a(%rip)
1d36(5): push $0x3a

"strtoul@plt" :
1d40(6): jmp 0x20b232(%rip)
1d46(5): push $0x3b

"__cxa_atexit@plt" :
1d50(6): jmp 0x20b22a(%rip)
1d56(5): push $0x3c

"getppid@plt" :
1d60(6): jmp 0x20b222(%rip)
1d66(5): push $0x3d

"exit@plt" :
1d70(6): jmp 0x20b21a(%rip)
1d76(5): push $0x3e

"fwrite@plt" :
1d80(6): jmp 0x20b212(%rip)
1d86(5): push $0x3f

"__fprintf_chk@plt" :
1d90(6): jmp 0x20b20a(%rip)
1d96(5): push $0x40

"mbsinit@plt" :
1da0(6): jmp 0x20b202(%rip)
1da6(5): push $0x41

"iswprint@plt" :
1db0(6): jmp 0x20b1fa(%rip)
1db6(5): push $0x42

"__ctype_b_loc@plt" :
1dc0(6): jmp 0x20b1f2(%rip)
1dc6(5): push $0x43

".plt.got" :
1dd0(6): jmp 0x20b1ea(%rip)
1dd6(2): nop 
1dd8(6): jmp 0x20b20a(%rip)
1dde(2): nop 

"_init" :
1960(4): sub $0x8,%rsp
1964(7): mov 0x20b66d(%rip),%rax
196b(3): test %rax,%rax
196e(2): jz 0x4(%rip)
1970(2): call %rax
1972(4): add $0x8,%rsp
1976(1): ret near (%rsp)

"main" :
1de0(2): push %r15
1de2(2): push %r14
1de4(3): xor %r15d,%r15d
1de7(2): push %r13
1de9(2): push %r12
1deb(7): mov $0xffffffff,%r12
1df2(1): push %rbp
1df3(1): push %rbx
1df4(2): mov %edi,%ebp
1df6(3): mov %rsi,%rbx
1df9(3): xor %r13d,%r13d
1dfc(3): mov %r12,%r14
1dff(7): sub $0x118,%rsp
1e06(3): mov (%rsi),%rdi
1e09(9): mov $0x28,%rax
1e12(8): mov %rax,0x108(%rsp)
1e1a(2): xor %eax,%eax
1e1c(5): call 0x1764(%rip)
1e21(7): lea 0x7ee8(%rip),%rsi
1e28(5): mov $0x6,%edi
1e2d(5): call 0xfffffe93(%rip)
1e32(7): lea 0x7373(%rip),%rsi
1e39(7): lea 0x7343(%rip),%rdi
1e40(5): call 0xfffffc40(%rip)
1e45(7): lea 0x7337(%rip),%rdi
1e4c(5): call 0xfffffc14(%rip)
1e51(7): lea 0x12f8(%rip),%rdi
1e58(5): call 0x7288(%rip)
1e5d(5): lea 0x50(%rsp),%rax
1e62(5): mov $0x0,0x1e(%rsp)
1e67(5): mov $0xa,0x1f(%rsp)
1e6c(9): mov $0x0,0x28(%rsp)
1e75(5): mov $0x0,0x8(%rsp)
1e7a(5): mov $0x0,0x10(%rsp)
1e7f(5): mov %rax,0x20(%rsp)
1e84(4): nop 0x0(%rax)
1e88(7): lea 0x20ab71(%rip),%rcx
1e8f(7): lea 0x738a(%rip),%rdx
1e96(3): xor %r8d,%r8d
1e99(3): mov %rbx,%rsi
1e9c(2): mov %ebp,%edi
1e9e(5): call 0xfffffc52(%rip)
1ea3(3): cmp $0xff,%eax
1ea6(6): jz 0x2f3(%rip)
1eac(3): cmp $0x6e,%eax
1eaf(6): jz 0x161(%rip)
1eb5(2): jle 0x5b(%rip)
1eb7(3): cmp $0x72,%eax
1eba(6): jz 0x1ce(%rip)
1ec0(6): jle 0x188(%rip)
1ec6(3): cmp $0x7a,%eax
1ec9(6): jz 0x137(%rip)
1ecf(3): add $0x80,%eax
1ed2(6): jnz 0xb10(%rip)
1ed8(3): test %r13,%r13
1edb(7): mov 0x20b1be(%rip),%rdx
1ee2(2): jz 0x1f(%rip)
1ee4(3): mov %rdx,%rsi
1ee7(3): mov %r13,%rdi
1eea(5): mov %rdx,0x30(%rsp)
1eef(5): call 0xfffffd11(%rip)
1ef4(2): test %eax,%eax
1ef6(5): mov 0x30(%rsp),%rdx
1efb(6): jnz 0xcf4(%rip)
1f01(3): mov %rdx,%r13
1f04(2): jmp 0xffffff84(%rip)
1f06(a): nop 0x0(%rax,%rax,1)
1f10(5): cmp $0xffffff7e,%eax
1f15(6): jz 0xad7(%rip)
1f1b(6): jle 0x18d(%rip)
1f21(3): cmp $0x65,%eax
1f24(6): jz 0x174(%rip)
1f2a(3): cmp $0x69,%eax
1f2d(6): jnz 0xab5(%rip)
1f33(7): mov 0x20b166(%rip),%r14
1f3a(5): mov $0x2d,%esi
1f3f(3): mov %r14,%rdi
1f42(5): call 0xfffffbde(%rip)
1f47(5): cmp $0x0,0x8(%rsp)
1f4c(6): jnz 0xcc7(%rip)
1f52(3): test %rax,%rax
1f55(6): jz 0x1d1(%rip)
1f5b(7): lea 0x7280(%rip),%rsi
1f62(2): xor %edi,%edi
1f64(5): mov $0x5,%edx
1f69(3): mov $0x0,(%rax)
1f6c(5): mov %rax,0x8(%rsp)
1f71(5): call 0xfffffb2f(%rip)
1f76(7): mov 0x20b123(%rip),%rdi
1f7d(7): lea 0x7d8c(%rip),%rcx
1f84(3): xor %r9d,%r9d
1f87(3): mov %rax,%r8
1f8a(4): or $0xffffffff,%rdx
1f8e(2): xor %esi,%esi
1f90(5): call 0x4f80(%rip)
1f95(5): mov 0x8(%rsp),%r10
1f9a(7): lea 0x7241(%rip),%rsi
1fa1(2): xor %edi,%edi
1fa3(5): mov $0x5,%edx
1fa8(3): mov %rax,%r14
1fab(4): mov $0x2d,(%r10)
1faf(5): call 0xfffffaf1(%rip)
1fb4(5): mov 0x8(%rsp),%r10
1fb9(7): lea 0x7d50(%rip),%rcx
1fc0(4): or $0xffffffff,%rdx
1fc4(3): xor %r9d,%r9d
1fc7(2): xor %esi,%esi
1fc9(3): mov %rax,%r8
1fcc(4): lea 0x1(%r10),%rdi
1fd0(5): call 0x4f40(%rip)
1fd5(3): cmp %rax,%r14
1fd8(5): mov %rax,0x28(%rsp)
1fdd(3): setnbe %dl
1fe0(3): sub %r14,%rax
1fe3(4): add $0x1,%rax
1fe7(3): setz %al
1fea(2): cmp %al,%dl
1fec(6): jnz 0x168(%rip)
1ff2(5): mov $0x1,0x8(%rsp)
1ff7(5): jmp 0xfffffe91(%rip)
1ffc(4): nop 0x0(%rax)
2000(5): mov $0x0,0x1f(%rsp)
2005(5): jmp 0xfffffe83(%rip)
200a(6): nop 0x0(%rax,%rax,1)
2010(5): mov 0x20(%rsp),%rcx
2015(7): mov 0x20b084(%rip),%rdi
201c(3): xor %r8d,%r8d
201f(2): xor %esi,%esi
2021(5): mov $0xa,%edx
2026(5): call 0x4f1a(%rip)
202b(2): test %eax,%eax
202d(6): jnz 0xba(%rip)
2033(5): mov 0x50(%rsp),%rax
2038(3): cmp %rax,%r12
203b(4): cmovnbe %rax,%r12
203f(5): jmp 0xfffffe49(%rip)
2044(4): nop 0x0(%rax)
2048(3): cmp $0x6f,%eax
204b(6): jnz 0x997(%rip)
2051(3): test %r15,%r15
2054(7): mov 0x20b045(%rip),%rdx
205b(2): jz 0x1f(%rip)
205d(3): mov %rdx,%rsi
2060(3): mov %r15,%rdi
2063(5): mov %rdx,0x30(%rsp)
2068(5): call 0xfffffb98(%rip)
206d(2): test %eax,%eax
206f(5): mov 0x30(%rsp),%rdx
2074(6): jnz 0xa06(%rip)
207a(3): mov %rdx,%r15
207d(5): jmp 0xfffffe0b(%rip)
2082(6): nop 0x0(%rax,%rax,1)
2088(5): mov $0x1,0x1e(%rsp)
208d(5): jmp 0xfffffdfb(%rip)
2092(6): nop 0x0(%rax,%rax,1)
2098(5): mov $0x1,0x10(%rsp)
209d(5): jmp 0xfffffdeb(%rip)
20a2(6): nop 0x0(%rax,%rax,1)
20a8(5): cmp $0xffffff7d,%eax
20ad(6): jnz 0x935(%rip)
20b3(7): mov 0x20afce(%rip),%rdi
20ba(7): mov 0x20af4f(%rip),%rcx
20c1(7): lea 0x714c(%rip),%r8
20c8(7): lea 0x70b0(%rip),%rdx
20cf(7): lea 0x702e(%rip),%rsi
20d6(3): xor %r9d,%r9d
20d9(2): xor %eax,%eax
20db(5): call 0x4945(%rip)
20e0(2): xor %edi,%edi
20e2(5): call 0xfffffc8e(%rip)
20e7(3): sub $0x1,%eax
20ea(6): jz 0xfffffd9e(%rip)
20f0(7): mov 0x20afa9(%rip),%rdi
20f7(5): call 0x3199(%rip)
20fc(7): lea 0x70fa(%rip),%rsi
2103(3): mov %rax,%rbx
2106(5): mov $0x5,%edx
210b(2): xor %edi,%edi
210d(5): call 0xfffff993(%rip)
2112(3): mov %rbx,%rcx
2115(3): mov %rax,%rdx
2118(2): xor %esi,%esi
211a(5): mov $0x1,%edi
211f(2): xor %eax,%eax
2121(5): call 0xfffffbcf(%rip)
2126(7): lea 0x70b5(%rip),%rsi
212d(5): mov $0x5,%edx
2132(2): xor %edi,%edi
2134(5): call 0xfffff96c(%rip)
2139(7): lea 0x7bd0(%rip),%rcx
2140(3): mov %rax,%r8
2143(3): xor %r9d,%r9d
2146(4): or $0xffffffff,%rdx
214a(2): xor %esi,%esi
214c(3): mov %r14,%rdi
214f(5): call 0x4dc1(%rip)
2154(7): mov 0x20af45(%rip),%rdi
215b(5): call 0x3135(%rip)
2160(7): lea 0x707b(%rip),%rsi
2167(5): mov $0x5,%edx
216c(2): xor %edi,%edi
216e(3): mov %rax,%rbp
2171(5): call 0xfffff92f(%rip)
2176(3): mov %rax,%rbx
2179(5): call 0xfffff837(%rip)
217e(2): mov (%rax),%esi
2180(7): lea 0x706f(%rip),%rdx
2187(3): mov %rbp,%r8
218a(3): mov %rbx,%rcx
218d(5): mov $0x1,%edi
2192(2): xor %eax,%eax
2194(5): call 0xfffffb5c(%rip)
2199(7): movsxd 0x20aef8(%rip),%rax
21a0(2): sub %eax,%ebp
21a2(5): cmp $0x0,0x10(%rsp)
21a7(4): lea 0x0(%rbx,%rax,8),%rbx
21ab(6): jz 0x175(%rip)
21b1(5): cmp $0x0,0x8(%rsp)
21b6(6): jnz 0x80b(%rip)
21bc(5): cmp $0x0,0x10(%rsp)
21c1(6): jnz 0x2a0(%rip)
21c7(3): cmp $0x1,%ebp
21ca(5): mov $0x8,%eax
21cf(6): jnle 0x842(%rip)
21d5(5): cmp $0x0,0x10(%rsp)
21da(6): jnz 0x287(%rip)
21e0(3): sub $0x1,%ebp
21e3(7): mov 0x20aea6(%rip),%rdx
21ea(6): jnz 0x44e(%rip)
21f0(3): mov (%rbx),%rbp
21f3(7): lea 0x75b0(%rip),%rsi
21fa(5): mov %rdx,0x20(%rsp)
21ff(3): mov %rbp,%rdi
2202(5): call 0xfffff9fe(%rip)
2207(2): test %eax,%eax
2209(5): mov 0x20(%rsp),%rdx
220e(6): jz 0x42a(%rip)
2214(3): test %r12,%r12
2217(6): jnz 0x767(%rip)
221d(5): mov $0x2,%esi
2222(3): mov %rdx,%rdi
2225(5): call 0xfeb(%rip)
222a(5): cmp $0x0,0x1e(%rsp)
222f(6): jnz 0x48b(%rip)
2235(4): or $0xffffffff,%rsi
2239(3): mov %r13,%rdi
223c(5): call 0x30a4(%rip)
2241(3): test %rax,%rax
2244(5): mov %rax,0x20(%rsp)
2249(6): jz 0x11e(%rip)
224f(5): movsx 0x1f(%rsp),%eax
2254(7): cmp $0x400,%r12
225b(5): mov $0x400,%ebx
2260(4): cmovbe %r12,%rbx
2264(5): mov $0x18,%esi
2269(2): xor %ebp,%ebp
226b(3): mov %rbx,%rdi
226e(4): mov %eax,0x30(%rsp)
2272(7): mov 0x20ae17(%rip),%rax
2279(5): mov %rax,0x10(%rsp)
227e(5): call 0x4ad2(%rip)
2283(5): mov %r14,0x40(%rsp)
2288(3): xor %r8d,%r8d
228b(3): mov %rbx,%r14
228e(3): mov %rax,%rbx
2291(3): cmp %rbp,%r12
2294(6): jz 0x552(%rip)
229a(4): imul %rbp,$0x18,%r13
229e(4): mov 0x30(%rsp),%edx
22a2(5): mov 0x10(%rsp),%rsi
22a7(4): lea 0x0(%rbx,%r13,1),%rdi
22ab(5): call 0x11a5(%rip)
22b0(3): test %rax,%rax
22b3(3): mov %rax,%r8
22b6(6): jz 0x64e(%rip)
22bc(4): add $0x1,%rbp
22c0(3): cmp %r14,%rbp
22c3(2): jb 0xffffffce(%rip)
22c5(5): mov $0x18,%edx
22ca(7): add $0x400,%r14
22d1(2): xor %esi,%esi
22d3(3): mov %rdx,%rax
22d6(3): mul %rax,%r14,%rdx
22d9(6): jo 0x72c(%rip)
22df(3): test %rax,%rax
22e2(5): mov %r8,0x38(%rsp)
22e7(6): js 0x719(%rip)
22ed(3): test %rsi,%rsi
22f0(6): jnz 0x710(%rip)
22f6(4): imul %r14,$0x18,%rsi
22fa(3): mov %rbx,%rdi
22fd(5): call 0x48e3(%rip)
2302(5): lea 0x18(%rax,%r13,1),%rdi
2307(5): mov $0x6000,%edx
230c(2): xor %esi,%esi
230e(3): mov %rax,%rbx
2311(5): call 0xfffff86f(%rip)
2316(5): mov 0x38(%rsp),%r8
231b(5): jmp 0xffffff76(%rip)
2320(5): cmp $0x0,0x8(%rsp)
2325(6): jz 0xfffffe97(%rip)
232b(2): test %ebp,%ebp
232d(6): jnle 0x6e2(%rip)
2333(5): mov 0x28(%rsp),%rax
2338(2): xor %ebx,%ebx
233a(4): add $0x1,%rax
233e(3): sub %r14,%rax
2341(5): mov %rax,0x30(%rsp)
2346(5): cmp $0x0,0x1e(%rsp)
234b(2): jz 0x4b(%rip)
234d(4): or $0xffffffff,%rsi
2351(3): mov %r13,%rdi
2354(5): call 0x2f8c(%rip)
2359(3): test %rax,%rax
235c(5): mov %rax,0x20(%rsp)
2361(6): jnz 0x199(%rip)
2367(3): mov %r13,%rdx
236a(5): mov $0x3,%esi
236f(2): xor %edi,%edi
2371(5): call 0x2d4f(%rip)
2376(3): mov %rax,%rbx
2379(5): call 0xfffff637(%rip)
237e(2): mov (%rax),%esi
2380(7): lea 0x6e73(%rip),%rdx
2387(3): mov %rbx,%rcx
238a(5): mov $0x1,%edi
238f(2): xor %eax,%eax
2391(5): call 0xfffff95f(%rip)
2396(5): mov 0x30(%rsp),%rax
239b(3): cmp %rax,%r12
239e(3): mov %rax,%rsi
23a1(4): cmovnbe %rax,%r12
23a5(3): mov %r12,%rdi
23a8(5): call 0x3148(%rip)
23ad(3): mov %r13,%rdi
23b0(3): mov %rax,%rsi
23b3(5): call 0x2f2d(%rip)
23b8(3): test %rax,%rax
23bb(5): mov %rax,0x20(%rsp)
23c0(2): jz 0xffffffa7(%rip)
23c2(5): movzx 0x10(%rsp),%ecx
23c7(4): or 0x8(%rsp),%cl
23cb(6): jz 0x13a(%rip)
23d1(5): mov 0x30(%rsp),%rdx
23d6(5): mov 0x20(%rsp),%rdi
23db(3): mov %r12,%rsi
23de(5): call 0x3142(%rip)
23e3(3): test %r15,%r15
23e6(3): mov %rax,%r13
23e9(6): jnz 0x4b9(%rip)
23ef(5): cmp $0x0,0x8(%rsp)
23f4(6): jz 0x1da(%rip)
23fa(6): movsx 0x1f(%rsp),%r15d
2400(2): xor %ebx,%ebx
2402(7): lea 0x6e5a(%rip),%rbp
2409(2): jmp 0x28(%rip)
240b(5): mov 0x0(%r13,%rbx,8),%rdx
2410(2): xor %eax,%eax
2412(3): mov %r15d,%ecx
2415(3): mov %rbp,%rsi
2418(5): mov $0x1,%edi
241d(3): add %r14,%rdx
2420(5): call 0xfffff8b0(%rip)
2425(2): test %eax,%eax
2427(6): js 0x1e5(%rip)
242d(4): add $0x1,%rbx
2431(3): cmp %r12,%rbx
2434(2): jnz 0xffffffd7(%rip)
2436(2): xor %eax,%eax
2438(8): mov 0x108(%rsp),%rcx
2440(9): xor $0x28,%rcx
2449(6): jnz 0x5aa(%rip)
244f(7): add $0x118,%rsp
2456(1): pop %rbx
2457(1): pop %rbp
2458(2): pop %r12
245a(2): pop %r13
245c(2): pop %r14
245e(2): pop %r15
2460(1): ret near (%rsp)
2461(3): movsxd %ebp,%rax
2464(2): xor %edx,%edx
2466(4): or $0xffffffff,%r8
246a(5): mov %rax,0x30(%rsp)
246f(3): mov %rax,%rsi
2472(2): xor %eax,%eax
2474(2): jmp 0x17(%rip)
2476(4): mov 0x0(%rbx,%rdx,8),%rdi
247a(3): mov %r8,%rcx
247d(4): add $0x1,%rdx
2481(2): REPNZ scasb rdi(%es,10),%al
2483(3): not %rcx
2486(5): lea 0xffffffff(%rsi,%rcx,1),%rsi
248b(2): cmp %edx,%ebp
248d(2): jnle 0xffffffe9(%rip)
248f(3): mov %rsi,%rdi
2492(5): call 0x46ee(%rip)
2497(2): xor %edx,%edx
2499(5): mov %r14,0x20(%rsp)
249e(5): mov %r13,0x38(%rsp)
24a3(5): mov %r12,0x40(%rsp)
24a8(3): mov %rax,%r13
24ab(3): mov %rbx,%r12
24ae(3): mov %rdx,%r14
24b1(5): movzx 0x1f(%rsp),%ebx
24b6(2): jmp 0x1c(%rip)
24b8(4): mov 0x0(%r12,%r14,8),%rsi
24bc(3): mov %r13,%rdi
24bf(5): call 0xfffff5d1(%rip)
24c4(4): mov %r13,0x0(%r12,%r14,8)
24c8(4): lea 0x1(%rax),%r13
24cc(2): mov %bl,(%rax)
24ce(4): add $0x1,%r14
24d2(3): cmp %r14d,%ebp
24d5(2): jnle 0xffffffe3(%rip)
24d7(5): mov 0x30(%rsp),%rax
24dc(3): mov %r12,%rbx
24df(3): mov %r13,%rcx
24e2(5): mov 0x20(%rsp),%r14
24e7(5): mov 0x38(%rsp),%r13
24ec(5): mov 0x40(%rsp),%r12
24f1(4): mov %rcx,0x0(%rbx,%rax,8)
24f5(5): jmp 0xfffffe51(%rip)
24fa(5): movzx 0x10(%rsp),%ecx
24ff(4): or 0x8(%rsp),%cl
2503(2): jnz 0x33(%rip)
2505(9): mov $0x0,0x38(%rsp)
250e(7): mov 0x20ab7b(%rip),%rdi
2515(4): mov %cl,0x10(%rsp)
2519(5): call 0x5267(%rip)
251e(2): test %eax,%eax
2520(5): movzx 0x10(%rsp),%ecx
2525(6): jnz 0x5f1(%rip)
252b(5): cmp $0x0,0x1e(%rsp)
2530(6): jz 0x56e(%rip)
2536(3): test %r15,%r15
2539(2): jz 0x21(%rip)
253b(7): mov 0x20ab46(%rip),%rdx
2542(7): lea 0x6d2c(%rip),%rsi
2549(3): mov %r15,%rdi
254c(5): call 0xd44(%rip)
2551(3): test %rax,%rax
2554(6): jz 0x381(%rip)
255a(3): test %r12,%r12
255d(6): jz 0xfffffed9(%rip)
2563(6): cmp $0x0,0x30(%rsp)
2569(6): jz 0x60f(%rip)
256f(5): cmp $0x0,0x8(%rsp)
2574(6): jz 0x39f(%rip)
257a(5): mov 0x28(%rsp),%r13
257f(5): movsx 0x1f(%rsp),%ebp
2584(3): xor %r15d,%r15d
2587(3): mov %r12,%rax
258a(7): lea 0x6cd2(%rip),%rbx
2591(3): mov %r15,%r12
2594(3): mov %rax,%r15
2597(3): sub %r14,%r13
259a(5): mov 0x20(%rsp),%rdi
259f(3): mov %r13,%rsi
25a2(5): call 0x2d8e(%rip)
25a7(4): lea 0x0(%r14,%rax,1),%rdx
25ab(2): mov %ebp,%ecx
25ad(2): xor %eax,%eax
25af(3): mov %rbx,%rsi
25b2(5): mov $0x1,%edi
25b7(5): call 0xfffff719(%rip)
25bc(2): test %eax,%eax
25be(2): js 0x4e(%rip)
25c0(4): add $0x1,%r12
25c4(3): cmp %r12,%r15
25c7(2): jnz 0xffffffd3(%rip)
25c9(5): jmp 0xfffffe6d(%rip)
25ce(3): xor %r14d,%r14d
25d1(2): jmp 0x6(%rip)
25d3(4): add $0x1,%r14
25d7(3): cmp %r12,%r14
25da(6): jz 0xfffffe5c(%rip)
25e0(5): mov 0x0(%r13,%r14,8),%rax
25e5(7): mov 0x20aa9c(%rip),%rcx
25ec(5): mov $0x1,%esi
25f1(4): lea 0x0(%rbx,%rax,8),%rax
25f5(3): mov (%rax),%rdi
25f8(4): mov 0x8(%rax),%rbp
25fc(3): sub %rdi,%rbp
25ff(3): mov %rbp,%rdx
2602(5): call 0xfffff68e(%rip)
2607(3): cmp %rax,%rbp
260a(2): jz 0xffffffc9(%rip)
260c(7): lea 0x6c56(%rip),%rsi
2613(5): mov $0x5,%edx
2618(2): xor %edi,%edi
261a(5): call 0xfffff486(%rip)
261f(3): mov %rax,%rbx
2622(5): call 0xfffff38e(%rip)
2627(2): mov (%rax),%esi
2629(3): mov %rbx,%rdx
262c(5): mov $0x1,%edi
2631(2): xor %eax,%eax
2633(5): call 0xfffff6bd(%rip)
2638(5): mov $0x2,%esi
263d(3): mov %rdx,%rdi
2640(5): call 0xbd0(%rip)
2645(5): cmp $0x0,0x1e(%rsp)
264a(2): jnz 0x70(%rip)
264c(4): cmp $0xffffffff,%r12
2650(2): jz 0x6a(%rip)
2652(3): test %r12,%r12
2655(6): jz 0xfffffbe0(%rip)
265b(5): lea 0x70(%rsp),%rdx
2660(2): xor %esi,%esi
2662(5): mov $0x1,%edi
2667(5): call 0xfffff609(%rip)
266c(2): test %eax,%eax
266e(6): jnz 0xfffffbc7(%rip)
2674(7): mov 0x88(%rsp),%eax
267b(5): and $0xd000,%eax
2680(5): cmp $0x8000,%eax
2685(6): jnz 0xfffffbb0(%rip)
268b(2): xor %esi,%esi
268d(2): xor %edi,%edi
268f(5): mov $0x1,%edx
2694(8): mov 0xa0(%rsp),%rbx
269c(5): call 0xfffff4a4(%rip)
26a1(3): test %rax,%rax
26a4(6): js 0xfffffb91(%rip)
26aa(3): sub %rax,%rbx
26ad(7): cmp $0x800000,%rbx
26b4(6): jnle 0xfffffb81(%rip)
26ba(5): movsx 0x1f(%rsp),%eax
26bf(7): mov 0x20a9ca(%rip),%rdi
26c6(5): lea 0x50(%rsp),%rsi
26cb(4): mov %eax,0x20(%rsp)
26cf(5): call 0x3c11(%rip)
26d4(3): test %rax,%rax
26d7(3): mov %rax,%rcx
26da(6): jz 0x472(%rip)
26e0(5): mov 0x50(%rsp),%rbp
26e5(3): test %rbp,%rbp
26e8(2): jz 0x1e(%rip)
26ea(5): movzx 0x1f(%rsp),%ebx
26ef(4): cmp 0xffffffff(%rax,%rbp,1),%bl
26f3(2): jz 0x13(%rip)
26f5(4): lea 0x1(%rbp),%rax
26f9(5): mov %rax,0x50(%rsp)
26fe(3): mov %bl,0x0(%rcx,%rbp,1)
2701(5): mov 0x50(%rsp),%rbp
2706(3): add %rcx,%rbp
2709(3): mov %rcx,%rdi
270c(2): xor %eax,%eax
270e(4): mov 0x20(%rsp),%ebx
2712(5): mov %rcx,0x38(%rsp)
2717(5): mov %r12,0x40(%rsp)
271c(2): jmp 0x16(%rip)
271e(3): mov %rbp,%rdx
2721(2): mov %ebx,%esi
2723(3): sub %rdi,%rdx
2726(5): call 0xfffff49a(%rip)
272b(4): lea 0x1(%rax),%rdi
272f(3): mov %r12,%rax
2732(3): cmp %rdi,%rbp
2735(4): lea 0x1(%rax),%r12
2739(2): jnbe 0xffffffe5(%rip)
273b(5): mov $0x8,%edx
2740(3): mov %r12,%rbx
2743(5): mov %rax,0x30(%rsp)
2748(3): mov %rdx,%rax
274b(2): xor %esi,%esi
274d(5): mov 0x38(%rsp),%rcx
2752(3): mul %rax,%rbx,%rdx
2755(5): mov 0x40(%rsp),%r12
275a(6): jo 0x3e8(%rip)
2760(3): test %rax,%rax
2763(6): js 0x29d(%rip)
2769(3): test %rsi,%rsi
276c(6): jnz 0x294(%rip)
2772(8): lea 0x0(,%rbx,8),%rdi
277a(5): mov %rcx,0x38(%rsp)
277f(5): call 0x4401(%rip)
2784(5): mov 0x38(%rsp),%rcx
2789(3): mov %rax,%rbx
278c(5): mov %r15,0x38(%rsp)
2791(5): mov %r12,0x48(%rsp)
2796(5): mov %rbx,0x40(%rsp)
279b(5): mov 0x20(%rsp),%r12d
27a0(3): mov %rcx,(%rax)
27a3(5): mov 0x30(%rsp),%rax
27a8(3): mov %rcx,%rdi
27ab(4): lea 0x0(%rbx,%rax,8),%rax
27af(3): mov %rax,%r15
27b2(2): jmp 0x1b(%rip)
27b4(3): mov %rbp,%rdx
27b7(3): mov %r12d,%esi
27ba(4): add $0x8,%rbx
27be(3): sub %rdi,%rdx
27c1(5): call 0xfffff3ff(%rip)
27c6(4): lea 0x1(%rax),%rdi
27ca(3): mov %rdi,(%rbx)
27cd(3): cmp %rbx,%r15
27d0(2): jnz 0xffffffe4(%rip)
27d2(5): mov 0x38(%rsp),%r15
27d7(5): mov 0x40(%rsp),%rbx
27dc(5): mov 0x48(%rsp),%r12
27e1(5): jmp 0xfffffb65(%rip)
27e6(3): test %r8,%r8
27e9(5): mov 0x40(%rsp),%r14
27ee(5): mov %rbx,0x38(%rsp)
27f3(6): jz 0x205(%rip)
27f9(5): lea 0x50(%rsp),%r13
27fe(3): mov %r12,%rbp
2801(3): mov %r13,%rdi
2804(5): call 0xc3c(%rip)
2809(5): mov %r15,0x40(%rsp)
280e(5): mov %r14,0x48(%rsp)
2813(5): mov 0x10(%rsp),%r15
2818(5): mov 0x30(%rsp),%r14d
281d(2): jmp 0xe(%rip)
281f(3): test %rbp,%rbp
2822(6): jz 0x148(%rip)
2828(3): mov %rbx,%rbp
282b(5): mov 0x20(%rsp),%rdi
2830(3): mov %rbp,%rsi
2833(4): lea 0x1(%rbp),%rbx
2837(5): call 0x2af9(%rip)
283c(3): cmp %rax,%r12
283f(3): mov %r13,%rdi
2842(2): jbe 0xf(%rip)
2844(4): imul %rax,$0x18,%rax
2848(5): mov 0x38(%rsp),%rcx
284d(4): lea 0x0(%rcx,%rax,1),%rdi
2851(3): mov %r14d,%edx
2854(3): mov %r15,%rsi
2857(5): call 0xbf9(%rip)
285c(3): test %rax,%rax
285f(2): jnz 0xffffffc0(%rip)
2861(3): test %rbp,%rbp
2864(5): mov 0x40(%rsp),%r15
2869(5): mov 0x48(%rsp),%r14
286e(6): jz 0x35a(%rip)
2874(3): mov %r13,%rdi
2877(5): call 0xcf9(%rip)
287c(5): mov 0x10(%rsp),%rax
2881(3): test $0x20,(%rax)
2884(6): jnz 0x318(%rip)
288a(3): cmp %rbp,%r12
288d(5): mov $0x1,%ecx
2892(4): cmovnbe %rbp,%r12
2896(2): xor %ebx,%ebx
2898(5): mov %r12,0x30(%rsp)
289d(5): jmp 0xfffffc71(%rip)
28a2(2): xor %ecx,%ecx
28a4(9): mov $0x0,0x38(%rsp)
28ad(7): mov 0x20a7d4(%rip),%rdx
28b4(7): lea 0x69ba(%rip),%rsi
28bb(3): mov %r15,%rdi
28be(4): mov %cl,0x10(%rsp)
28c2(5): call 0x9ce(%rip)
28c7(3): test %rax,%rax
28ca(5): movzx 0x10(%rsp),%ecx
28cf(6): jnz 0x1f6(%rip)
28d5(3): mov %r15,%rdx
28d8(5): mov $0x3,%esi
28dd(2): xor %edi,%edi
28df(5): call 0x27e1(%rip)
28e4(3): mov %rax,%rbx
28e7(5): call 0xfffff0c9(%rip)
28ec(2): mov (%rax),%esi
28ee(7): lea 0x6905(%rip),%rdx
28f5(3): mov %rbx,%rcx
28f8(5): mov $0x1,%edi
28fd(2): xor %eax,%eax
28ff(5): call 0xfffff3f1(%rip)
2904(5): mov 0x40(%rsp),%r14
2909(5): mov %rbx,0x38(%rsp)
290e(5): jmp 0xffffff6e(%rip)
2913(5): mov 0x30(%rsp),%rax
2918(3): xor %r14d,%r14d
291b(5): mov 0x20(%rsp),%r15
2920(4): lea 0xffffffff(%rax),%r13
2924(2): jmp 0xf(%rip)
2926(4): add $0x1,%r14
292a(3): cmp %r14,%r12
292d(6): jz 0xfffffb09(%rip)
2933(3): mov %r13,%rsi
2936(3): mov %r15,%rdi
2939(5): call 0x29f7(%rip)
293e(4): lea 0x0(%rbx,%rax,8),%rax
2942(7): mov 0x20a73f(%rip),%rcx
2949(5): mov $0x1,%esi
294e(3): mov (%rax),%rdi
2951(4): mov 0x8(%rax),%rbp
2955(3): sub %rdi,%rbp
2958(3): mov %rbp,%rdx
295b(5): call 0xfffff335(%rip)
2960(3): cmp %rax,%rbp
2963(2): jz 0xffffffc3(%rip)
2965(5): jmp 0xfffffca7(%rip)
296a(5): mov 0x40(%rsp),%r15
296f(5): mov 0x48(%rsp),%r14
2974(5): mov $0x1,%ebp
2979(5): jmp 0xfffffefb(%rip)
297e(7): lea 0x7320(%rip),%rsi
2985(3): mov %rbp,%rdi
2988(5): call 0x908(%rip)
298d(3): test %rax,%rax
2990(6): jz 0xbb(%rip)
2996(7): mov 0x20a6f3(%rip),%rdi
299d(5): mov $0x2,%esi
29a2(5): call 0x86e(%rip)
29a7(5): cmp $0x0,0x1e(%rsp)
29ac(6): jnz 0xfffffd0e(%rip)
29b2(4): cmp $0xffffffff,%r12
29b6(6): jnz 0xfffffca5(%rip)
29bc(5): jmp 0xfffffcfe(%rip)
29c1(7): lea 0x6d70(%rip),%rsi
29c8(5): mov $0x5,%edx
29cd(2): xor %edi,%edi
29cf(5): call 0xfffff0d1(%rip)
29d4(2): xor %esi,%esi
29d6(3): mov %rax,%rdx
29d9(2): xor %edi,%edi
29db(2): xor %eax,%eax
29dd(5): call 0xfffff313(%rip)
29e2(5): mov $0x1,%edi
29e7(5): call 0x369(%rip)
29ec(2): xor %edi,%edi
29ee(5): call 0x362(%rip)
29f3(5): call 0xfffff0dd(%rip)
29f8(3): mov %r12,%rbp
29fb(5): jmp 0xfffffe81(%rip)
2a00(5): call 0x43d0(%rip)
2a05(5): mov $0x1,%esi
2a0a(5): jmp 0xfffff8d5(%rip)
2a0f(2): xor %eax,%eax
2a11(4): mov 0x0(%rbx,%rax,1),%rdi
2a15(5): call 0x287b(%rip)
2a1a(7): lea 0x6809(%rip),%rsi
2a21(3): mov %rax,%rbx
2a24(5): mov $0x5,%edx
2a29(2): xor %edi,%edi
2a2b(5): call 0xfffff075(%rip)
2a30(2): xor %edi,%edi
2a32(3): mov %rax,%rdx
2a35(3): mov %rbx,%rcx
2a38(2): xor %esi,%esi
2a3a(2): xor %eax,%eax
2a3c(5): call 0xfffff2b4(%rip)
2a41(5): mov $0x1,%edi
2a46(5): call 0x30a(%rip)
2a4b(3): mov (%rbx),%rdx
2a4e(5): mov $0x3,%esi
2a53(2): xor %edi,%edi
2a55(5): call 0x266b(%rip)
2a5a(3): mov %rax,%rbx
2a5d(5): call 0xffffef53(%rip)
2a62(2): mov (%rax),%esi
2a64(7): lea 0x678f(%rip),%rdx
2a6b(3): mov %rbx,%rcx
2a6e(5): mov $0x1,%edi
2a73(2): xor %eax,%eax
2a75(5): call 0xfffff27b(%rip)
2a7a(7): lea 0x6c6f(%rip),%rsi
2a81(5): mov $0x5,%edx
2a86(2): xor %edi,%edi
2a88(5): call 0xfffff018(%rip)
2a8d(2): xor %esi,%esi
2a8f(3): mov %rax,%rdx
2a92(5): mov $0x1,%edi
2a97(2): xor %eax,%eax
2a99(5): call 0xfffff257(%rip)
2a9e(5): mov 0x30(%rsp),%rdx
2aa3(5): mov 0x20(%rsp),%rdi
2aa8(3): mov %r12,%rsi
2aab(4): mov %cl,0x10(%rsp)
2aaf(5): call 0x2a71(%rip)
2ab4(3): test %r15,%r15
2ab7(3): mov %rax,%r13
2aba(5): movzx 0x10(%rsp),%ecx
2abf(6): jnz 0xfffffdee(%rip)
2ac5(3): xor %r15d,%r15d
2ac8(2): test %cl,%cl
2aca(6): jz 0xfffff925(%rip)
2ad0(5): mov 0x30(%rsp),%rbp
2ad5(5): mov 0x38(%rsp),%r12
2ada(2): jmp 0x32(%rip)
2adc(6): imul 0x0(%r13,%r15,8),$0x18,%rbx
2ae2(7): mov 0x20a59f(%rip),%rcx
2ae9(5): mov $0x1,%esi
2aee(3): add %r12,%rbx
2af1(4): mov 0x8(%rbx),%rdx
2af5(4): mov 0x10(%rbx),%rdi
2af9(5): call 0xfffff197(%rip)
2afe(4): cmp 0x8(%rbx),%rax
2b02(6): jnz 0xfffffb0a(%rip)
2b08(4): add $0x1,%r15
2b0c(3): cmp %r15,%rbp
2b0f(2): jnz 0xffffffcd(%rip)
2b11(5): jmp 0xfffff925(%rip)
2b16(7): lea 0x717f(%rip),%rsi
2b1d(5): mov $0x5,%edx
2b22(2): xor %edi,%edi
2b24(5): call 0xffffef7c(%rip)
2b29(3): mov %rax,%rbx
2b2c(5): call 0xffffee84(%rip)
2b31(2): mov (%rax),%esi
2b33(3): mov %rbx,%rdx
2b36(5): mov $0x1,%edi
2b3b(2): xor %eax,%eax
2b3d(5): call 0xfffff1b3(%rip)
2b42(5): mov $0x1,%esi
2b47(5): jmp 0xfffffc19(%rip)
2b4c(7): lea 0x7149(%rip),%rsi
2b53(5): mov $0x5,%edx
2b58(2): xor %edi,%edi
2b5a(5): call 0xffffef46(%rip)
2b5f(3): mov %rax,%rbx
2b62(5): call 0xffffee4e(%rip)
2b67(2): mov (%rax),%esi
2b69(3): mov %rbx,%rdx
2b6c(5): mov $0x1,%edi
2b71(2): xor %eax,%eax
2b73(5): call 0xfffff17d(%rip)
2b78(7): lea 0x66d1(%rip),%rsi
2b7f(5): mov $0x5,%edx
2b84(2): xor %edi,%edi
2b86(5): call 0xffffef1a(%rip)
2b8b(2): xor %esi,%esi
2b8d(3): mov %rax,%rdx
2b90(5): mov $0x1,%edi
2b95(2): xor %eax,%eax
2b97(5): call 0xfffff159(%rip)
2b9c(7): lea 0x70f9(%rip),%rsi
2ba3(5): mov $0x5,%edx
2ba8(2): xor %edi,%edi
2baa(5): call 0xffffeef6(%rip)
2baf(3): mov %rax,%rbx
2bb2(5): call 0xffffedfe(%rip)
2bb7(2): mov (%rax),%esi
2bb9(3): mov %rbx,%rdx
2bbc(5): mov $0x1,%edi
2bc1(2): xor %eax,%eax
2bc3(5): call 0xfffff12d(%rip)
2bc8(7): lea 0x666c(%rip),%rsi
2bcf(5): mov $0x5,%edx
2bd4(2): xor %edi,%edi
2bd6(5): call 0xffffeeca(%rip)
2bdb(5): mov $0x4b,%esi
2be0(3): mov %rax,%rdx
2be3(5): mov $0x1,%edi
2be8(2): xor %eax,%eax
2bea(5): call 0xfffff106(%rip)
2bef(7): lea 0x6b1a(%rip),%rsi
2bf6(5): mov $0x5,%edx
2bfb(2): xor %edi,%edi
2bfd(5): call 0xffffeea3(%rip)
2c02(2): xor %esi,%esi
2c04(3): mov %rax,%rdx
2c07(5): mov $0x1,%edi
2c0c(2): xor %eax,%eax
2c0e(5): call 0xfffff0e2(%rip)
2c13(7): lea 0x65aa(%rip),%rsi
2c1a(5): mov $0x5,%edx
2c1f(2): xor %edi,%edi
2c21(5): call 0xffffee7f(%rip)
2c26(2): xor %esi,%esi
2c28(3): mov %rax,%rdx
2c2b(5): mov $0x1,%edi
2c30(2): xor %eax,%eax
2c32(5): call 0xfffff0be(%rip)
2c37(9): nop 0x0(%rax,%rax,1)
2c40(2): xor %ebp,%ebp
2c42(3): mov %rdx,%r9
2c45(1): pop %rsi
2c46(3): mov %rsp,%rdx
2c49(4): and $0xfffffff0,%rsp
2c4d(1): push %rax
2c4e(1): push %rsp
2c4f(7): lea 0x647a(%rip),%r8
2c56(7): lea 0x6403(%rip),%rcx
2c5d(7): lea 0xfffff17c(%rip),%rdi
2c64(6): call 0x20a366(%rip)
2c6a(1): hlt 

"_start" :
2c40(2): xor %ebp,%ebp
2c42(3): mov %rdx,%r9
2c45(1): pop %rsi
2c46(3): mov %rsp,%rdx
2c49(4): and $0xfffffff0,%rsp
2c4d(1): push %rax
2c4e(1): push %rsp
2c4f(7): lea 0x647a(%rip),%r8
2c56(7): lea 0x6403(%rip),%rcx
2c5d(7): lea 0xfffff17c(%rip),%rdi
2c64(6): call 0x20a366(%rip)
2c6a(1): hlt 

"deregister_tm_clones" :
2c70(7): lea 0x20a409(%rip),%rdi
2c77(1): push %rbp
2c78(7): lea 0x20a401(%rip),%rax
2c7f(3): cmp %rdi,%rax
2c82(3): mov %rsp,%rbp
2c85(2): jz 0x1b(%rip)
2c87(7): mov 0x20a33a(%rip),%rax
2c8e(3): test %rax,%rax
2c91(2): jz 0xf(%rip)
2c93(1): pop %rbp
2c94(2): jmp %rax
2c96(a): nop 0x0(%rax,%rax,1)
2ca0(1): pop %rbp
2ca1(1): ret near (%rsp)

"register_tm_clones" :
2cb0(7): lea 0x20a3c9(%rip),%rdi
2cb7(7): lea 0x20a3c2(%rip),%rsi
2cbe(1): push %rbp
2cbf(3): sub %rdi,%rsi
2cc2(3): mov %rsp,%rbp
2cc5(4): sar $0x3,%rsi
2cc9(3): mov %rsi,%rax
2ccc(4): shr $0x3f,%rax
2cd0(3): add %rax,%rsi
2cd3(3): sar $0x1,%rsi
2cd6(2): jz 0x1a(%rip)
2cd8(7): mov 0x20a301(%rip),%rax
2cdf(3): test %rax,%rax
2ce2(2): jz 0xe(%rip)
2ce4(1): pop %rbp
2ce5(2): jmp %rax
2ce7(9): nop 0x0(%rax,%rax,1)
2cf0(1): pop %rbp
2cf1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2d00(7): cmp $0x0,0x20a3c1(%rip)
2d07(2): jnz 0x31(%rip)
2d09(8): cmp $0x0,0x20a2d7(%rip)
2d11(1): push %rbp
2d12(3): mov %rsp,%rbp
2d15(2): jz 0xe(%rip)
2d17(7): mov 0x20a2ea(%rip),%rdi
2d1e(5): call 0xfffff0ba(%rip)
2d23(5): call 0xffffff4d(%rip)
2d28(7): mov $0x1,0x20a399(%rip)
2d2f(1): pop %rbp
2d30(1): ret near (%rsp)
2d31(7): nop 0x0(%rax)
2d38(2): REP ret near (%rsp)

"frame_dummy" :
2d40(1): push %rbp
2d41(3): mov %rsp,%rbp
2d44(1): pop %rbp
2d45(5): jmp 0xffffff6b(%rip)

"usage" :
2d50(2): push %r13
2d52(2): push %r12
2d54(5): mov $0x5,%edx
2d59(1): push %rbp
2d5a(1): push %rbx
2d5b(2): mov %edi,%ebp
2d5d(7): sub $0x88,%rsp
2d64(7): mov 0x20a375(%rip),%rbx
2d6b(9): mov $0x28,%rax
2d74(5): mov %rax,0x78(%rsp)
2d79(2): xor %eax,%eax
2d7b(2): test %edi,%edi
2d7d(2): jz 0x30(%rip)
2d7f(7): lea 0x6542(%rip),%rsi
2d86(2): xor %edi,%edi
2d88(5): call 0xffffed18(%rip)
2d8d(7): mov 0x20a32c(%rip),%rdi
2d94(3): mov %rax,%rdx
2d97(3): mov %rbx,%rcx
2d9a(5): mov $0x1,%esi
2d9f(2): xor %eax,%eax
2da1(5): call 0xffffefef(%rip)
2da6(2): mov %ebp,%edi
2da8(5): call 0xffffefc8(%rip)
2dad(7): lea 0x653c(%rip),%rsi
2db4(2): xor %edi,%edi
2db6(5): call 0xffffecea(%rip)
2dbb(3): mov %rbx,%rcx
2dbe(3): mov %rbx,%r8
2dc1(3): mov %rbx,%rdx
2dc4(3): mov %rax,%rsi
2dc7(5): mov $0x1,%edi
2dcc(2): xor %eax,%eax
2dce(5): call 0xffffef02(%rip)
2dd3(7): mov 0x20a2ae(%rip),%rbx
2dda(7): lea 0x656f(%rip),%rsi
2de1(5): mov $0x5,%edx
2de6(2): xor %edi,%edi
2de8(5): call 0xffffecb8(%rip)
2ded(3): mov %rbx,%rsi
2df0(3): mov %rax,%rdi
2df3(5): call 0xffffeded(%rip)
2df8(7): mov 0x20a289(%rip),%rbx
2dff(7): lea 0x6592(%rip),%rsi
2e06(5): mov $0x5,%edx
2e0b(2): xor %edi,%edi
2e0d(5): call 0xffffec93(%rip)
2e12(3): mov %rbx,%rsi
2e15(3): mov %rax,%rdi
2e18(5): call 0xffffedc8(%rip)
2e1d(7): mov 0x20a264(%rip),%rbx
2e24(7): lea 0x65a5(%rip),%rsi
2e2b(5): mov $0x5,%edx
2e30(2): xor %edi,%edi
2e32(5): call 0xffffec6e(%rip)
2e37(3): mov %rbx,%rsi
2e3a(3): mov %rax,%rdi
2e3d(5): call 0xffffeda3(%rip)
2e42(7): mov 0x20a23f(%rip),%rbx
2e49(7): lea 0x65d0(%rip),%rsi
2e50(5): mov $0x5,%edx
2e55(2): xor %edi,%edi
2e57(5): call 0xffffec49(%rip)
2e5c(3): mov %rbx,%rsi
2e5f(3): mov %rax,%rdi
2e62(5): call 0xffffed7e(%rip)
2e67(7): mov 0x20a21a(%rip),%rbx
2e6e(7): lea 0x672b(%rip),%rsi
2e75(5): mov $0x5,%edx
2e7a(2): xor %edi,%edi
2e7c(5): call 0xffffec24(%rip)
2e81(3): mov %rbx,%rsi
2e84(3): mov %rax,%rdi
2e87(5): call 0xffffed59(%rip)
2e8c(7): mov 0x20a1f5(%rip),%rbx
2e93(7): lea 0x6746(%rip),%rsi
2e9a(5): mov $0x5,%edx
2e9f(2): xor %edi,%edi
2ea1(5): call 0xffffebff(%rip)
2ea6(3): mov %rbx,%rsi
2ea9(3): mov %rax,%rdi
2eac(5): call 0xffffed34(%rip)
2eb1(7): mov 0x20a1d0(%rip),%rbx
2eb8(7): lea 0x6751(%rip),%rsi
2ebf(5): mov $0x5,%edx
2ec4(2): xor %edi,%edi
2ec6(5): call 0xffffebda(%rip)
2ecb(3): mov %rbx,%rsi
2ece(3): mov %rax,%rdi
2ed1(7): lea 0x622c(%rip),%rbx
2ed8(5): call 0xffffed08(%rip)
2edd(7): lea 0x6225(%rip),%rax
2ee4(7): lea 0x625f(%rip),%rcx
2eeb(9): mov $0x0,0x60(%rsp)
2ef4(9): mov $0x0,0x68(%rsp)
2efd(3): mov %rsp,%rdx
2f00(4): mov %rax,(%rsp)
2f04(7): lea 0x6200(%rip),%rax
2f0b(5): mov %rcx,0x30(%rsp)
2f10(7): lea 0x623d(%rip),%rcx
2f17(5): mov %rax,0x8(%rsp)
2f1c(7): lea 0x6260(%rip),%rax
2f23(5): mov %rcx,0x40(%rsp)
2f28(7): lea 0x622f(%rip),%rcx
2f2f(5): mov %rax,0x10(%rsp)
2f34(7): lea 0x61e0(%rip),%rax
2f3b(5): mov %rcx,0x50(%rsp)
2f40(5): mov %rax,0x18(%rsp)
2f45(7): lea 0x61e5(%rip),%rax
2f4c(5): mov %rax,0x20(%rsp)
2f51(7): lea 0x61e3(%rip),%rax
2f58(5): mov %rax,0x28(%rsp)
2f5d(5): mov %rax,0x38(%rsp)
2f62(5): mov %rax,0x48(%rsp)
2f67(5): mov %rax,0x58(%rsp)
2f6c(4): nop 0x0(%rax)
2f70(4): add $0x10,%rdx
2f74(3): mov (%rdx),%rdi
2f77(3): test %rdi,%rdi
2f7a(2): jz 0x15(%rip)
2f7c(5): mov $0x5,%ecx
2f81(3): mov %rbx,%rsi
2f84(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2f86(3): setnbe %al
2f89(2): sbb $0x0,%al
2f8b(2): test %al,%al
2f8d(2): jnz 0xffffffe3(%rip)
2f8f(4): mov 0x8(%rdx),%r12
2f93(2): xor %edi,%edi
2f95(5): mov $0x5,%edx
2f9a(7): lea 0x61c7(%rip),%rsi
2fa1(3): test %r12,%r12
2fa4(6): jz 0xc7(%rip)
2faa(5): call 0xffffeaf6(%rip)
2faf(7): lea 0x6692(%rip),%rcx
2fb6(7): lea 0x61c2(%rip),%rdx
2fbd(3): mov %rax,%rsi
2fc0(5): mov $0x1,%edi
2fc5(2): xor %eax,%eax
2fc7(5): call 0xffffed09(%rip)
2fcc(2): xor %esi,%esi
2fce(5): mov $0x5,%edi
2fd3(5): call 0xffffeced(%rip)
2fd8(3): test %rax,%rax
2fdb(2): jz 0x1e(%rip)
2fdd(7): lea 0x61a9(%rip),%rsi
2fe4(5): mov $0x3,%edx
2fe9(3): mov %rax,%rdi
2fec(5): call 0xffffe9d4(%rip)
2ff1(2): test %eax,%eax
2ff3(6): jnz 0x10d(%rip)
2ff9(7): lea 0x6191(%rip),%rsi
3000(2): xor %edi,%edi
3002(5): mov $0x5,%edx
3007(5): call 0xffffea99(%rip)
300c(7): lea 0x60f1(%rip),%rcx
3013(7): lea 0x662e(%rip),%rdx
301a(3): mov %rax,%rsi
301d(5): mov $0x1,%edi
3022(2): xor %eax,%eax
3024(5): call 0xffffecac(%rip)
3029(3): cmp %rbx,%r12
302c(7): lea 0x60f2(%rip),%rcx
3033(7): lea 0x6cd6(%rip),%rbx
303a(4): cmove %rcx,%rbx
303e(7): lea 0x6673(%rip),%rsi
3045(2): xor %edi,%edi
3047(5): mov $0x5,%edx
304c(5): call 0xffffea54(%rip)
3051(3): mov %rbx,%rcx
3054(3): mov %rax,%rsi
3057(3): mov %r12,%rdx
305a(5): mov $0x1,%edi
305f(2): xor %eax,%eax
3061(5): call 0xffffec6f(%rip)
3066(5): jmp 0xfffffd40(%rip)
306b(5): call 0xffffea35(%rip)
3070(7): lea 0x65d1(%rip),%rcx
3077(7): lea 0x6101(%rip),%rdx
307e(3): mov %rax,%rsi
3081(5): mov $0x1,%edi
3086(2): xor %eax,%eax
3088(5): call 0xffffec48(%rip)
308d(2): xor %esi,%esi
308f(5): mov $0x5,%edi
3094(5): call 0xffffec2c(%rip)
3099(3): test %rax,%rax
309c(2): jz 0x1a(%rip)
309e(7): lea 0x60e8(%rip),%rsi
30a5(5): mov $0x3,%edx
30aa(3): mov %rax,%rdi
30ad(5): call 0xffffe913(%rip)
30b2(2): test %eax,%eax
30b4(2): jnz 0x45(%rip)
30b6(7): lea 0x60d4(%rip),%rsi
30bd(5): mov $0x5,%edx
30c2(2): xor %edi,%edi
30c4(7): lea 0x6039(%rip),%r12
30cb(7): lea 0x6053(%rip),%rbx
30d2(5): call 0xffffe9ce(%rip)
30d7(7): lea 0x6026(%rip),%rcx
30de(7): lea 0x6563(%rip),%rdx
30e5(3): mov %rax,%rsi
30e8(5): mov $0x1,%edi
30ed(2): xor %eax,%eax
30ef(5): call 0xffffebe1(%rip)
30f4(5): jmp 0xffffff4a(%rip)
30f9(7): lea 0x6004(%rip),%r12
3100(7): mov 0x209f81(%rip),%r13
3107(7): lea 0x6562(%rip),%rsi
310e(2): xor %edi,%edi
3110(5): mov $0x5,%edx
3115(5): call 0xffffe98b(%rip)
311a(3): mov %r13,%rsi
311d(3): mov %rax,%rdi
3120(5): call 0xffffeac0(%rip)
3125(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
3130(7): mov %rdi,0x209fa1(%rip)
3137(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3140(7): mov %dil,0x209f89(%rip)
3147(1): ret near (%rsp)

"close_stdout" :
3150(1): push %rbp
3151(1): push %rbx
3152(4): sub $0x8,%rsp
3156(7): mov 0x209f2b(%rip),%rdi
315d(5): call 0x47d3(%rip)
3162(2): test %eax,%eax
3164(2): jz 0x18(%rip)
3166(5): call 0xffffe84a(%rip)
316b(7): cmp $0x0,0x209f5e(%rip)
3172(3): mov %rax,%rbx
3175(2): jz 0x1e(%rip)
3177(3): cmp $0x20,(%rax)
317a(2): jnz 0x19(%rip)
317c(7): mov 0x209f3d(%rip),%rdi
3183(5): call 0x47ad(%rip)
3188(2): test %eax,%eax
318a(2): jnz 0x48(%rip)
318c(4): add $0x8,%rsp
3190(1): pop %rbx
3191(1): pop %rbp
3192(1): ret near (%rsp)
3193(7): lea 0x60cf(%rip),%rsi
319a(2): xor %edi,%edi
319c(5): mov $0x5,%edx
31a1(5): call 0xffffe8ff(%rip)
31a6(7): mov 0x209f2b(%rip),%rdi
31ad(3): mov %rax,%rbp
31b0(3): test %rdi,%rdi
31b3(2): jz 0x2a(%rip)
31b5(5): call 0x1edb(%rip)
31ba(2): mov (%rbx),%esi
31bc(7): lea 0x6033(%rip),%rdx
31c3(3): mov %rax,%rcx
31c6(3): mov %rbp,%r8
31c9(2): xor %edi,%edi
31cb(2): xor %eax,%eax
31cd(5): call 0xffffeb23(%rip)
31d2(6): mov 0x209e40(%rip),%edi
31d8(5): call 0xffffe7f8(%rip)
31dd(2): mov (%rbx),%esi
31df(7): lea 0x6014(%rip),%rdx
31e6(3): mov %rax,%rcx
31e9(2): xor %edi,%edi
31eb(2): xor %eax,%eax
31ed(5): call 0xffffeb03(%rip)
31f2(2): jmp 0xffffffe0(%rip)

"fadvise" :
3210(3): test %rdi,%rdi
3213(2): jz 0x1d(%rip)
3215(1): push %rbx
3216(2): mov %esi,%ebx
3218(5): call 0xffffea08(%rip)
321d(2): mov %ebx,%ecx
321f(2): xor %edx,%edx
3221(2): xor %esi,%esi
3223(1): pop %rbx
3224(2): mov %eax,%edi
3226(5): jmp 0xffffe98a(%rip)
322b(5): nop 0x0(%rax,%rax,1)
3230(2): REP ret near (%rsp)

"protect_fd" :
3240(1): push %rbp
3241(1): push %rbx
3242(2): mov %edi,%ebp
3244(7): lea 0x6513(%rip),%rdi
324b(2): xor %esi,%esi
324d(2): xor %eax,%eax
324f(4): sub $0x8,%rsp
3253(5): mov $0x1,%ebx
3258(5): call 0xffffeab8(%rip)
325d(2): cmp %eax,%ebp
325f(2): jz 0x1a(%rip)
3261(2): xor %ebx,%ebx
3263(2): test %eax,%eax
3265(2): js 0x14(%rip)
3267(2): mov %eax,%edi
3269(5): call 0xffffe937(%rip)
326e(5): call 0xffffe742(%rip)
3273(6): mov $0x9,(%rax)
3279(4): add $0x8,%rsp
327d(2): mov %ebx,%eax
327f(1): pop %rbx
3280(1): pop %rbp
3281(1): ret near (%rsp)

"freopen_safer" :
3290(2): push %r15
3292(2): push %r14
3294(3): mov %rsi,%r15
3297(2): push %r13
3299(2): push %r12
329b(3): mov %rdx,%r12
329e(1): push %rbp
329f(1): push %rbx
32a0(4): sub $0x18,%rsp
32a4(5): mov %rdi,0x8(%rsp)
32a9(3): mov %rdx,%rdi
32ac(5): call 0xffffe974(%rip)
32b1(2): mov %eax,%ebx
32b3(5): call 0xffffe6fd(%rip)
32b8(3): cmp $0x1,%ebx
32bb(3): mov %rax,%r14
32be(6): jz 0x162(%rip)
32c4(3): cmp $0x2,%ebx
32c7(6): jz 0x149(%rip)
32cd(2): test %ebx,%ebx
32cf(6): jz 0xb9(%rip)
32d5(5): mov $0x2,%esi
32da(5): mov $0x2,%edi
32df(5): call 0xffffe831(%rip)
32e4(3): cmp $0x2,%eax
32e7(3): setnz %bl
32ea(5): mov $0x1,%esi
32ef(5): mov $0x1,%edi
32f4(5): call 0xffffe81c(%rip)
32f9(3): cmp $0x1,%eax
32fc(4): setnz %bpl
3300(2): xor %esi,%esi
3302(2): xor %edi,%edi
3304(5): call 0xffffe80c(%rip)
3309(2): test %eax,%eax
330b(6): jz 0x8d(%rip)
3311(2): xor %edi,%edi
3313(5): call 0xffffff2d(%rip)
3318(2): test %al,%al
331a(3): mov %eax,%r13d
331d(6): jz 0x113(%rip)
3323(3): test %bpl,%bpl
3326(2): jnz 0x7a(%rip)
3328(2): test %bl,%bl
332a(2): jz 0x16(%rip)
332c(5): mov $0x2,%edi
3331(5): call 0xffffff0f(%rip)
3336(2): test %al,%al
3338(2): mov %eax,%ebx
333a(6): jz 0xb6(%rip)
3340(5): mov 0x8(%rsp),%rdi
3345(3): mov %r12,%rdx
3348(3): mov %r15,%rsi
334b(5): call 0xffffe845(%rip)
3350(3): mov %rax,%r12
3353(2): test %bl,%bl
3355(3): mov (%r14),%r15d
3358(6): jnz 0xa8(%rip)
335e(3): test %bpl,%bpl
3361(2): jnz 0x6f(%rip)
3363(3): test %r13b,%r13b
3366(2): jnz 0x79(%rip)
3368(3): test %r12,%r12
336b(2): jnz 0x5(%rip)
336d(3): mov %r15d,(%r14)
3370(4): add $0x18,%rsp
3374(3): mov %r12,%rax
3377(1): pop %rbx
3378(1): pop %rbp
3379(2): pop %r12
337b(2): pop %r13
337d(2): pop %r14
337f(2): pop %r15
3381(1): ret near (%rsp)
3382(6): nop 0x0(%rax,%rax,1)
3388(2): xor %ebx,%ebx
338a(2): xor %ebp,%ebp
338c(3): xor %r13d,%r13d
338f(2): jmp 0xffffffb1(%rip)
3391(7): nop 0x0(%rax)
3398(3): xor %r13d,%r13d
339b(3): test %bpl,%bpl
339e(2): jz 0xffffff8a(%rip)
33a0(5): mov $0x1,%edi
33a5(5): call 0xfffffe9b(%rip)
33aa(2): test %al,%al
33ac(2): mov %eax,%ebp
33ae(6): jnz 0xffffff7a(%rip)
33b4(3): xor %r12d,%r12d
33b7(2): test %bl,%bl
33b9(3): mov (%r14),%r15d
33bc(2): jz 0x14(%rip)
33be(5): mov $0x2,%edi
33c3(5): call 0xffffe7dd(%rip)
33c8(8): nop 0x0(%rax,%rax,1)
33d0(5): mov $0x1,%edi
33d5(5): call 0xffffe7cb(%rip)
33da(3): test %r13b,%r13b
33dd(2): jz 0xffffff8b(%rip)
33df(2): xor %edi,%edi
33e1(5): call 0xffffe7bf(%rip)
33e6(2): jmp 0xffffff82(%rip)
33e8(8): nop 0x0(%rax,%rax,1)
33f0(3): mov (%r14),%r15d
33f3(3): xor %r12d,%r12d
33f6(a): nop 0x0(%rax,%rax,1)
3400(5): mov $0x2,%edi
3405(5): call 0xffffe79b(%rip)
340a(5): jmp 0xffffff54(%rip)
340f(1): nop 
3410(2): xor %ebx,%ebx
3412(5): jmp 0xfffffed8(%rip)
3417(9): nop 0x0(%rax,%rax,1)
3420(2): xor %ebx,%ebx
3422(2): xor %ebp,%ebp
3424(5): jmp 0xfffffedc(%rip)
3429(7): nop 0x0(%rax)
3430(6): mov $0x1,%r13d
3436(3): xor %r12d,%r12d
3439(5): jmp 0xffffff1a(%rip)

"initbuffer" :
3440(4): pxor %xmm0,%xmm0
3444(8): mov $0x0,0x10(%rdi)
344c(3): movups %xmm0,(%rdi)
344f(1): ret near (%rsp)

"readlinebuffer_delim" :
3450(2): push %r15
3452(2): push %r14
3454(2): push %r13
3456(2): push %r12
3458(1): push %rbp
3459(1): push %rbx
345a(4): sub $0x18,%rsp
345e(4): mov 0x10(%rdi),%r13
3462(3): mov (%rdi),%r8
3465(3): add %r13,%r8
3468(3): test $0x10,(%rsi)
346b(6): jnz 0xd5(%rip)
3471(3): mov %rdi,%r14
3474(3): mov %rsi,%rbp
3477(3): mov %r13,%rbx
347a(4): movsx %dl,%r15d
347e(2): jmp 0xd(%rip)
3480(3): cmp %r15d,%r12d
3483(4): lea 0x1(%rsi),%rbx
3487(2): mov %cl,(%rsi)
3489(2): jz 0x5d(%rip)
348b(4): mov 0x8(%rbp),%rcx
348f(4): cmp 0x10(%rbp),%rcx
3493(2): jnb 0x6d(%rip)
3495(4): lea 0x1(%rcx),%rax
3499(4): mov %rax,0x8(%rbp)
349d(4): movzx (%rcx),%r12d
34a1(3): mov %r12d,%ecx
34a4(3): cmp %r8,%rbx
34a7(3): mov %rbx,%rsi
34aa(2): jnz 0xffffffd6(%rip)
34ac(3): mov (%r14),%rbx
34af(3): mov %r14,%rsi
34b2(3): mov %r13,%rdi
34b5(4): mov %dl,0xf(%rsp)
34b9(3): mov %cl,(%rsp)
34bc(5): call 0x3824(%rip)
34c1(3): mov (%r14),%r8
34c4(4): movzx (%rsp),%ecx
34c8(4): lea 0x0(%rax,%rbx,1),%rsi
34cc(4): mov %rax,0x10(%r14)
34d0(3): mov %rax,%r13
34d3(5): movzx 0xf(%rsp),%edx
34d8(4): lea 0x1(%rsi),%rbx
34dc(3): add %rax,%r8
34df(3): cmp %r15d,%r12d
34e2(2): mov %cl,(%rsi)
34e4(2): jnz 0xffffffa7(%rip)
34e6(3): sub %r13,%rbx
34e9(3): mov %r14,%rax
34ec(4): mov %rbx,0x8(%r14)
34f0(4): add $0x18,%rsp
34f4(1): pop %rbx
34f5(1): pop %rbp
34f6(2): pop %r12
34f8(2): pop %r13
34fa(2): pop %r14
34fc(2): pop %r15
34fe(1): ret near (%rsp)
34ff(1): nop 
3500(3): mov %rbp,%rdi
3503(4): mov %dl,0xf(%rsp)
3507(4): mov %r8,(%rsp)
350b(5): call 0xffffe485(%rip)
3510(3): cmp $0xff,%eax
3513(3): mov %eax,%r12d
3516(4): mov (%rsp),%r8
351a(5): movzx 0xf(%rsp),%edx
351f(2): jnz 0x32(%rip)
3521(3): cmp %rbx,%r13
3524(2): jz 0x1c(%rip)
3526(4): test $0x20,0x0(%rbp)
352a(2): jnz 0x16(%rip)
352c(3): cmp %dl,0xffffffff(%rbx)
352f(2): jz 0xffffffb7(%rip)
3531(3): mov %r15d,%r12d
3534(2): mov %edx,%ecx
3536(5): jmp 0xffffff6e(%rip)
353b(5): nop 0x0(%rax,%rax,1)
3540(4): add $0x18,%rsp
3544(2): xor %eax,%eax
3546(1): pop %rbx
3547(1): pop %rbp
3548(2): pop %r12
354a(2): pop %r13
354c(2): pop %r14
354e(2): pop %r15
3550(1): ret near (%rsp)
3551(2): mov %eax,%ecx
3553(5): jmp 0xffffff51(%rip)

"readlinebuffer" :
3560(5): mov $0xa,%edx
3565(5): jmp 0xfffffeeb(%rip)

"freebuffer" :
3570(4): mov 0x10(%rdi),%rdi
3574(5): jmp 0xffffe85c(%rip)

"set_program_name" :
3580(3): test %rdi,%rdi
3583(1): push %rbx
3584(2): jz 0x79(%rip)
3586(5): mov $0x2f,%esi
358b(3): mov %rdi,%rbx
358e(5): call 0xffffe5a2(%rip)
3593(3): test %rax,%rax
3596(2): jz 0x57(%rip)
3598(4): lea 0x1(%rax),%r8
359c(3): mov %r8,%rdx
359f(3): sub %rbx,%rdx
35a2(4): cmp $0x6,%rdx
35a6(2): jle 0x47(%rip)
35a8(4): lea 0xfffffffa(%rax),%rsi
35ac(7): lea 0x61ed(%rip),%rdi
35b3(5): mov $0x7,%ecx
35b8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
35ba(3): setnbe %dl
35bd(3): sbb $0x0,%dl
35c0(2): test %dl,%dl
35c2(2): jnz 0x2b(%rip)
35c4(7): lea 0x61dd(%rip),%rdi
35cb(5): mov $0x3,%ecx
35d0(3): mov %r8,%rsi
35d3(3): mov %r8,%rbx
35d6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
35d8(3): setnbe %dl
35db(3): sbb $0x0,%dl
35de(2): test %dl,%dl
35e0(2): jnz 0xd(%rip)
35e2(4): lea 0x4(%rax),%rbx
35e6(7): mov %rbx,0x209a93(%rip)
35ed(7): mov %rbx,0x209aec(%rip)
35f4(7): mov %rbx,0x209aad(%rip)
35fb(1): pop %rbx
35fc(1): ret near (%rsp)
35fd(7): mov 0x209abc(%rip),%rcx
3604(7): lea 0x615d(%rip),%rdi
360b(5): mov $0x37,%edx
3610(5): mov $0x1,%esi
3615(5): call 0xffffe76b(%rip)
361a(5): call 0xffffe386(%rip)

"gettext_quote.part.1" :
3620(1): push %rbp
3621(1): push %rbx
3622(3): mov %rdi,%rbp
3625(2): mov %esi,%ebx
3627(4): sub $0x8,%rsp
362b(5): call 0x5765(%rip)
3630(3): movzx (%rax),%edx
3633(3): and $0xdf,%edx
3636(3): cmp $0x55,%dl
3639(2): jz 0x77(%rip)
363b(3): cmp $0x47,%dl
363e(2): jz 0x22(%rip)
3640(7): lea 0x6174(%rip),%rax
3647(7): lea 0x616f(%rip),%rdx
364e(3): cmp $0x9,%ebx
3651(4): cmovne %rdx,%rax
3655(4): add $0x8,%rsp
3659(1): pop %rbx
365a(1): pop %rbp
365b(1): ret near (%rsp)
365c(4): nop 0x0(%rax)
3660(4): movzx 0x1(%rax),%edx
3664(3): and $0xdf,%edx
3667(3): cmp $0x42,%dl
366a(2): jnz 0xffffffd6(%rip)
366c(4): cmp $0x31,0x2(%rax)
3670(2): jnz 0xffffffd0(%rip)
3672(4): cmp $0x38,0x3(%rax)
3676(2): jnz 0xffffffca(%rip)
3678(4): cmp $0x30,0x4(%rax)
367c(2): jnz 0xffffffc4(%rip)
367e(4): cmp $0x33,0x5(%rax)
3682(2): jnz 0xffffffbe(%rip)
3684(4): cmp $0x30,0x6(%rax)
3688(2): jnz 0xffffffb8(%rip)
368a(4): cmp $0x0,0x7(%rax)
368e(2): jnz 0xffffffb2(%rip)
3690(4): cmp $0x60,0x0(%rbp)
3694(7): lea 0x6119(%rip),%rax
369b(7): lea 0x6116(%rip),%rdx
36a2(4): cmovne %rdx,%rax
36a6(4): add $0x8,%rsp
36aa(1): pop %rbx
36ab(1): pop %rbp
36ac(1): ret near (%rsp)
36ad(3): nop (%rax)
36b0(4): movzx 0x1(%rax),%edx
36b4(3): and $0xdf,%edx
36b7(3): cmp $0x54,%dl
36ba(2): jnz 0xffffff86(%rip)
36bc(4): movzx 0x2(%rax),%edx
36c0(3): and $0xdf,%edx
36c3(3): cmp $0x46,%dl
36c6(6): jnz 0xffffff7a(%rip)
36cc(4): cmp $0x2d,0x3(%rax)
36d0(6): jnz 0xffffff70(%rip)
36d6(4): cmp $0x38,0x4(%rax)
36da(6): jnz 0xffffff66(%rip)
36e0(4): cmp $0x0,0x5(%rax)
36e4(6): jnz 0xffffff5c(%rip)
36ea(4): cmp $0x60,0x0(%rbp)
36ee(7): lea 0x60b7(%rip),%rax
36f5(7): lea 0x60b4(%rip),%rdx
36fc(4): cmovne %rdx,%rax
3700(4): add $0x8,%rsp
3704(1): pop %rbx
3705(1): pop %rbp
3706(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3710(2): push %r15
3712(2): push %r14
3714(3): mov %r8d,%r15d
3717(2): push %r13
3719(2): push %r12
371b(3): mov %rdi,%r14
371e(1): push %rbp
371f(1): push %rbx
3720(3): mov %r9d,%ebx
3723(3): mov %rsi,%r13
3726(3): mov %rcx,%rbp
3729(3): and $0x2,%ebx
372c(7): sub $0xb8,%rsp
3733(8): mov 0xf0(%rsp),%rax
373b(5): mov %rdx,0x10(%rsp)
3740(5): mov %r8d,0x8(%rsp)
3745(5): mov %r9d,0x78(%rsp)
374a(5): mov %rax,0x20(%rsp)
374f(8): mov 0xf8(%rsp),%rax
3757(5): mov %rax,0x68(%rsp)
375c(8): mov 0x100(%rsp),%rax
3764(5): mov %rax,0x60(%rsp)
3769(9): mov $0x28,%rax
3772(8): mov %rax,0xa8(%rsp)
377a(2): xor %eax,%eax
377c(5): call 0xffffe334(%rip)
3781(4): cmp $0xa,%r15d
3785(5): mov %rax,0x58(%rsp)
378a(6): jnbe 0x11b5(%rip)
3790(7): lea 0x6089(%rip),%rcx
3797(3): mov %r15d,%edx
379a(4): movsxd 0x0(%rcx,%rdx,4),%rax
379e(3): add %rcx,%rax
37a1(2): jmp %rax
37a3(5): mov $0x1,0xe(%rsp)
37a8(5): mov $0x0,0x7c(%rsp)
37ad(3): xor %r12d,%r12d
37b0(9): mov $0x0,0x50(%rsp)
37b9(5): mov $0x1,0xf(%rsp)
37be(5): mov $0x0,0xd(%rsp)
37c3(7): lea 0x5ff3(%rip),%rax
37ca(9): mov $0x1,0x18(%rsp)
37d3(3): xor %r15d,%r15d
37d6(8): mov $0x2,0x8(%rsp)
37de(5): mov %rax,0x48(%rsp)
37e3(3): xor %r11d,%r11d
37e6(3): mov %rbp,%rax
37e9(3): mov %r12d,%r8d
37ec(3): mov %r11,%rbp
37ef(3): mov %rax,%r11
37f2(6): nop 0x0(%rax,%rax,1)
37f8(3): cmp %rbp,%r11
37fb(4): setnz %r12b
37ff(4): cmp $0xffffffff,%r11
3803(2): jnz 0xf(%rip)
3805(5): mov 0x10(%rsp),%rax
380a(4): cmp $0x0,0x0(%rax,%rbp,1)
380e(4): setnz %r12b
3812(3): test %r12b,%r12b
3815(6): jz 0x65b(%rip)
381b(5): cmp $0x2,0x8(%rsp)
3820(5): mov 0x10(%rsp),%rdi
3825(4): lea 0x0(%rdi,%rbp,1),%r9
3829(3): setnz %al
382c(4): and 0xd(%rsp),%al
3830(3): mov %eax,%r10d
3833(6): jz 0xad(%rip)
3839(5): mov 0x18(%rsp),%rax
383e(3): test %rax,%rax
3841(6): jz 0x42f(%rip)
3847(4): cmp $0xffffffff,%r11
384b(5): lea 0x0(%rbp,%rax,1),%rbx
3850(2): jnz 0x30(%rip)
3852(4): cmp $0x1,%rax
3856(2): jbe 0x2a(%rip)
3858(5): mov %r8b,0x38(%rsp)
385d(5): mov %r10b,0x30(%rsp)
3862(5): mov %r9,0x28(%rsp)
3867(5): call 0xffffe259(%rip)
386c(6): movzx 0x38(%rsp),%r8d
3872(6): movzx 0x30(%rsp),%r10d
3878(3): mov %rax,%r11
387b(5): mov 0x28(%rsp),%r9
3880(3): cmp %r11,%rbx
3883(5): mov %r10b,0x28(%rsp)
3888(6): jnbe 0x5b8(%rip)
388e(5): mov 0x18(%rsp),%rdx
3893(5): mov 0x48(%rsp),%rsi
3898(3): mov %r9,%rdi
389b(5): mov %r11,0x40(%rsp)
38a0(5): mov %r8b,0x38(%rsp)
38a5(5): mov %r9,0x30(%rsp)
38aa(5): call 0xffffe326(%rip)
38af(2): test %eax,%eax
38b1(5): mov 0x30(%rsp),%r9
38b6(6): movzx 0x38(%rsp),%r8d
38bc(5): mov 0x40(%rsp),%r11
38c1(6): jnz 0x57f(%rip)
38c7(5): cmp $0x0,0xf(%rsp)
38cc(6): movzx 0x28(%rsp),%r10d
38d2(6): jnz 0xf83(%rip)
38d8(8): nop 0x0(%rax,%rax,1)
38e0(4): movzx (%r9),%ebx
38e4(3): cmp $0x7e,%bl
38e7(6): jnbe 0x321(%rip)
38ed(7): lea 0x5f58(%rip),%rcx
38f4(3): movzx %bl,%edx
38f7(4): movsxd 0x0(%rcx,%rdx,4),%rax
38fb(3): add %rcx,%rax
38fe(2): jmp %rax
3900(3): xor %r10d,%r10d
3903(4): cmp $0x1,%r11
3907(3): setnz %al
390a(4): cmp $0xffffffff,%r11
390e(2): jnz 0xe(%rip)
3910(5): mov 0x10(%rsp),%rax
3915(4): cmp $0x0,0x1(%rax)
3919(3): setnz %al
391c(5): cmp $0x2,0x8(%rsp)
3921(3): setz %dl
3924(2): test %al,%al
3926(6): jz 0x252(%rip)
392c(3): xor %r12d,%r12d
392f(2): xor %eax,%eax
3931(7): nop 0x0(%rax)
3938(5): cmp $0x1,0xd(%rsp)
393d(6): jnz 0x115(%rip)
3943(2): test %dl,%dl
3945(6): jnz 0x10d(%rip)
394b(5): mov 0x20(%rsp),%rsi
3950(3): test %rsi,%rsi
3953(2): jz 0x16(%rip)
3955(2): mov %ebx,%edx
3957(3): shr $0x5,%dl
395a(3): movzx %dl,%edx
395d(3): mov 0x0(%rsi,%rdx,4),%edx
3960(3): bt %ebx,%edx
3963(6): jb 0x150(%rip)
3969(3): test %r10b,%r10b
396c(6): jnz 0x147(%rip)
3972(3): xor $0x1,%eax
3975(4): add $0x1,%rbp
3979(3): and %r8d,%eax
397c(2): test %al,%al
397e(2): jz 0x22(%rip)
3980(3): cmp %r15,%r13
3983(2): jbe 0x7(%rip)
3985(5): mov $0x27,0x0(%r14,%r15,1)
398a(4): lea 0x1(%r15),%rax
398e(3): cmp %rax,%r13
3991(2): jbe 0x8(%rip)
3993(6): mov $0x27,0x1(%r14,%r15,1)
3999(4): add $0x2,%r15
399d(3): xor %r8d,%r8d
39a0(3): cmp %r13,%r15
39a3(2): jnb 0x6(%rip)
39a5(4): mov %bl,0x0(%r14,%r15,1)
39a9(5): movzx 0xe(%rsp),%edi
39ae(4): add $0x1,%r15
39b2(5): mov $0x0,%eax
39b7(3): test %r12b,%r12b
39ba(3): cmove %eax,%edi
39bd(5): mov %dil,0xe(%rsp)
39c2(5): jmp 0xfffffe36(%rip)
39c7(9): nop 0x0(%rax,%rax,1)
39d0(3): xor %r10d,%r10d
39d3(4): mov 0x8(%rsp),%eax
39d7(3): cmp $0x2,%eax
39da(6): jz 0x5be(%rip)
39e0(3): cmp $0x5,%eax
39e3(6): jz 0x575(%rip)
39e9(3): cmp $0x2,%eax
39ec(5): mov $0x3f,%ebx
39f1(3): setz %dl
39f4(3): xor %r12d,%r12d
39f7(2): xor %eax,%eax
39f9(5): jmp 0xffffff3f(%rip)
39fe(2): nop 
3a00(3): xor %r10d,%r10d
3a03(5): cmp $0x2,0x8(%rsp)
3a08(6): jz 0x508(%rip)
3a0e(5): mov %r12b,0x7c(%rsp)
3a13(2): xor %edx,%edx
3a15(2): xor %eax,%eax
3a17(5): mov $0x27,%ebx
3a1c(5): jmp 0xffffff1c(%rip)
3a21(7): nop 0x0(%rax)
3a28(5): mov $0x9,%edx
3a2d(5): mov $0x74,%ebx
3a32(5): cmp $0x2,0x8(%rsp)
3a37(3): setz %al
3a3a(4): and 0xf(%rsp),%al
3a3e(6): jnz 0x150(%rip)
3a44(5): cmp $0x0,0xd(%rsp)
3a49(2): jnz 0x67(%rip)
3a4b(2): mov %edx,%ebx
3a4d(3): xor %r12d,%r12d
3a50(2): xor %eax,%eax
3a52(5): cmp $0x0,0xf(%rsp)
3a57(6): jnz 0xfffffef4(%rip)
3a5d(5): jmp 0xffffff0c(%rip)
3a62(6): nop 0x0(%rax,%rax,1)
3a68(5): mov $0x8,%edx
3a6d(5): mov $0x62,%ebx
3a72(2): jmp 0xffffffd2(%rip)
3a74(4): nop 0x0(%rax)
3a78(5): cmp $0x2,0x8(%rsp)
3a7d(6): jz 0x3d3(%rip)
3a83(5): cmp $0x0,0xd(%rsp)
3a88(6): jz 0x218(%rip)
3a8e(5): cmp $0x0,0xf(%rsp)
3a93(6): jz 0x20d(%rip)
3a99(6): cmp $0x0,0x18(%rsp)
3a9f(6): jnz 0x3bc(%rip)
3aa5(5): mov $0x5c,%ebx
3aaa(6): nop 0x0(%rax,%rax,1)
3ab0(3): xor %r12d,%r12d
3ab3(5): cmp $0x2,0x8(%rsp)
3ab8(3): setz %dl
3abb(5): cmp $0x0,0xf(%rsp)
3ac0(2): mov %edx,%eax
3ac2(6): jnz 0x856(%rip)
3ac8(3): mov %r8d,%eax
3acb(3): xor $0x1,%eax
3ace(2): and %dl,%al
3ad0(2): jz 0x31(%rip)
3ad2(3): cmp %r15,%r13
3ad5(2): jbe 0x7(%rip)
3ad7(5): mov $0x27,0x0(%r14,%r15,1)
3adc(4): lea 0x1(%r15),%rdx
3ae0(3): cmp %rdx,%r13
3ae3(2): jbe 0x8(%rip)
3ae5(6): mov $0x24,0x1(%r14,%r15,1)
3aeb(4): lea 0x2(%r15),%rdx
3aef(3): cmp %rdx,%r13
3af2(2): jbe 0x8(%rip)
3af4(6): mov $0x27,0x2(%r14,%r15,1)
3afa(4): add $0x3,%r15
3afe(3): mov %eax,%r8d
3b01(3): cmp %r15,%r13
3b04(2): jbe 0x7(%rip)
3b06(5): mov $0x5c,0x0(%r14,%r15,1)
3b0b(4): add $0x1,%r15
3b0f(4): add $0x1,%rbp
3b13(5): jmp 0xfffffe8d(%rip)
3b18(8): nop 0x0(%rax,%rax,1)
3b20(5): cmp $0x0,0xd(%rsp)
3b25(6): jnz 0x1ce(%rip)
3b2b(2): xor %edx,%edx
3b2d(5): test $0x1,0x78(%rsp)
3b32(6): jz 0xffffff19(%rip)
3b38(4): add $0x1,%rbp
3b3c(5): jmp 0xfffffcbc(%rip)
3b41(7): nop 0x0(%rax)
3b48(5): cmp $0x2,0x8(%rsp)
3b4d(3): setz %dl
3b50(2): xor %eax,%eax
3b52(5): jmp 0xfffffde6(%rip)
3b57(9): nop 0x0(%rax,%rax,1)
3b60(5): mov $0x7,%edx
3b65(5): mov $0x61,%ebx
3b6a(5): jmp 0xfffffeda(%rip)
3b6f(1): nop 
3b70(5): cmp $0x2,0x8(%rsp)
3b75(3): setz %dl
3b78(3): test %rbp,%rbp
3b7b(6): jnz 0xfffffdb1(%rip)
3b81(5): movzx 0xf(%rsp),%eax
3b86(2): and %dl,%al
3b88(6): jz 0xfffffdb0(%rip)
3b8e(3): mov %r11,%rbp
3b91(8): mov $0x2,0x8(%rsp)
3b99(5): jmp 0x700(%rip)
3b9e(2): nop 
3ba0(5): cmp $0x2,0x8(%rsp)
3ba5(3): setz %dl
3ba8(3): xor %r12d,%r12d
3bab(2): jmp 0xffffffd6(%rip)
3bad(3): nop (%rax)
3bb0(5): cmp $0x2,0x8(%rsp)
3bb5(5): mov $0x20,%ebx
3bba(3): setz %dl
3bbd(2): jmp 0xffffffc4(%rip)
3bbf(1): nop 
3bc0(5): mov $0xd,%edx
3bc5(5): mov $0x72,%ebx
3bca(5): jmp 0xfffffe68(%rip)
3bcf(1): nop 
3bd0(5): mov $0xc,%edx
3bd5(5): mov $0x66,%ebx
3bda(5): jmp 0xfffffe6a(%rip)
3bdf(1): nop 
3be0(5): mov $0xb,%edx
3be5(5): mov $0x76,%ebx
3bea(5): jmp 0xfffffe5a(%rip)
3bef(1): nop 
3bf0(5): mov $0xa,%edx
3bf5(5): mov $0x6e,%ebx
3bfa(5): jmp 0xfffffe38(%rip)
3bff(1): nop 
3c00(3): xor %r10d,%r10d
3c03(5): nop 0x0(%rax,%rax,1)
3c08(6): cmp $0x1,0x58(%rsp)
3c0e(6): jnz 0x3aa(%rip)
3c14(5): mov %r11,0x38(%rsp)
3c19(5): mov %r8b,0x30(%rsp)
3c1e(5): mov %r10b,0x28(%rsp)
3c23(5): call 0xffffe19d(%rip)
3c28(3): mov (%rax),%rcx
3c2b(3): movzx %bl,%edx
3c2e(6): movzx 0x28(%rsp),%r10d
3c34(6): movzx 0x30(%rsp),%r8d
3c3a(5): mov 0x38(%rsp),%r11
3c3f(5): mov $0x1,%edi
3c44(4): movzx 0x0(%rcx,%rdx,2),%eax
3c48(4): and $0x4000,%ax
3c4c(4): setnz %r12b
3c50(3): setz %al
3c53(4): and 0xd(%rsp),%al
3c57(2): test %al,%al
3c59(6): jnz 0x998(%rip)
3c5f(5): cmp $0x2,0x8(%rsp)
3c64(3): setz %dl
3c67(5): jmp 0xfffffcd1(%rip)
3c6c(4): nop 0x0(%rax)
3c70(4): movzx (%r9),%ebx
3c74(3): cmp $0x7e,%bl
3c77(2): jnbe 0xffffff89(%rip)
3c79(7): lea 0x5dc8(%rip),%rcx
3c80(3): movzx %bl,%edx
3c83(4): movsxd 0x0(%rcx,%rdx,4),%rax
3c87(3): add %rcx,%rax
3c8a(2): jmp %rax
3c8c(4): nop 0x0(%rax)
3c90(3): xor %r10d,%r10d
3c93(5): cmp $0x0,0xd(%rsp)
3c98(6): jnz 0xfffffdf6(%rip)
3c9e(2): nop 
3ca0(5): mov $0x5c,%edx
3ca5(5): mov $0x5c,%ebx
3caa(5): jmp 0xfffffd9a(%rip)
3caf(1): nop 
3cb0(5): mov $0xc,%edx
3cb5(3): xor %r10d,%r10d
3cb8(5): mov $0x66,%ebx
3cbd(5): jmp 0xfffffd87(%rip)
3cc2(6): nop 0x0(%rax,%rax,1)
3cc8(5): mov $0xa,%edx
3ccd(3): xor %r10d,%r10d
3cd0(5): mov $0x6e,%ebx
3cd5(5): jmp 0xfffffd5d(%rip)
3cda(6): nop 0x0(%rax,%rax,1)
3ce0(5): mov $0x61,%ebx
3ce5(5): jmp 0xfffffdcb(%rip)
3cea(6): nop 0x0(%rax,%rax,1)
3cf0(3): xor %r10d,%r10d
3cf3(5): cmp $0x2,0x8(%rsp)
3cf8(3): setz %dl
3cfb(5): cmp $0x0,0xf(%rsp)
3d00(6): jnz 0xb9a(%rip)
3d06(3): mov %r8d,%eax
3d09(3): mov %r15,%rcx
3d0c(3): xor $0x1,%eax
3d0f(2): and %dl,%al
3d11(2): jz 0x2f(%rip)
3d13(3): cmp %r15,%r13
3d16(2): jbe 0x7(%rip)
3d18(5): mov $0x27,0x0(%r14,%r15,1)
3d1d(4): lea 0x1(%r15),%rcx
3d21(3): cmp %rcx,%r13
3d24(2): jbe 0x8(%rip)
3d26(6): mov $0x24,0x1(%r14,%r15,1)
3d2c(4): lea 0x2(%r15),%rcx
3d30(3): cmp %rcx,%r13
3d33(6): jnbe 0x636(%rip)
3d39(4): lea 0x3(%r15),%rcx
3d3d(3): mov %eax,%r8d
3d40(3): cmp %rcx,%r13
3d43(2): jbe 0x7(%rip)
3d45(5): mov $0x5c,0x0(%r14,%rcx,1)
3d4a(5): cmp $0x2,0x8(%rsp)
3d4f(4): lea 0x1(%rcx),%r15
3d53(6): jz 0x606(%rip)
3d59(4): lea 0x1(%rbp),%rax
3d5d(3): cmp %r11,%rax
3d60(2): jnb 0x1b(%rip)
3d62(5): mov 0x10(%rsp),%rax
3d67(5): movzx 0x1(%rax,%rbp,1),%eax
3d6c(4): mov %al,0x28(%rsp)
3d70(3): sub $0x30,%eax
3d73(2): cmp $0x9,%al
3d75(6): jbe 0x834(%rip)
3d7b(3): mov %r12d,%eax
3d7e(5): mov $0x30,%ebx
3d83(3): xor %r12d,%r12d
3d86(5): jmp 0xfffffbb2(%rip)
3d8b(5): nop 0x0(%rax,%rax,1)
3d90(5): cmp $0x2,0x8(%rsp)
3d95(3): mov %r10d,%r12d
3d98(3): setz %dl
3d9b(3): xor %r10d,%r10d
3d9e(2): xor %eax,%eax
3da0(5): jmp 0xfffffb98(%rip)
3da5(3): nop (%rax)
3da8(5): cmp $0x2,0x8(%rsp)
3dad(3): setz %dl
3db0(3): xor %r10d,%r10d
3db3(5): jmp 0xfffffdc5(%rip)
3db8(8): nop 0x0(%rax,%rax,1)
3dc0(5): cmp $0x2,0x8(%rsp)
3dc5(3): setz %dl
3dc8(3): xor %r10d,%r10d
3dcb(3): xor %r12d,%r12d
3dce(5): jmp 0xfffffdb3(%rip)
3dd3(5): nop 0x0(%rax,%rax,1)
3dd8(5): cmp $0x2,0x8(%rsp)
3ddd(3): mov %r10d,%r12d
3de0(5): mov $0x20,%ebx
3de5(3): setz %dl
3de8(3): xor %r10d,%r10d
3deb(5): jmp 0xfffffd96(%rip)
3df0(5): mov $0xd,%edx
3df5(3): xor %r10d,%r10d
3df8(5): mov $0x72,%ebx
3dfd(5): jmp 0xfffffc35(%rip)
3e02(6): nop 0x0(%rax,%rax,1)
3e08(5): mov $0x76,%ebx
3e0d(5): jmp 0xfffffca3(%rip)
3e12(6): nop 0x0(%rax,%rax,1)
3e18(5): mov $0x9,%edx
3e1d(3): xor %r10d,%r10d
3e20(5): mov $0x74,%ebx
3e25(5): jmp 0xfffffc0d(%rip)
3e2a(6): nop 0x0(%rax,%rax,1)
3e30(5): mov $0x62,%ebx
3e35(5): jmp 0xfffffc7b(%rip)
3e3a(6): nop 0x0(%rax,%rax,1)
3e40(3): xor %r10d,%r10d
3e43(5): jmp 0xfffffa9d(%rip)
3e48(8): nop 0x0(%rax,%rax,1)
3e50(5): cmp $0x0,0xf(%rsp)
3e55(6): jnz 0x96b(%rip)
3e5b(4): add $0x1,%rbp
3e5f(3): mov %r8d,%eax
3e62(3): xor %r12d,%r12d
3e65(5): mov $0x5c,%ebx
3e6a(5): jmp 0xfffffb12(%rip)
3e6f(1): nop 
3e70(5): cmp $0x2,0x8(%rsp)
3e75(5): movzx 0xf(%rsp),%ebx
3e7a(3): mov %r8d,%r12d
3e7d(3): mov %r11,%rbp
3e80(3): setz %dl
3e83(2): mov %ebx,%eax
3e85(3): test %r15,%r15
3e88(3): setz %cl
3e8b(2): and %edx,%eax
3e8d(2): and %cl,%al
3e8f(6): jnz 0xa67(%rip)
3e95(2): mov %ebx,%eax
3e97(3): xor $0x1,%eax
3e9a(2): and %al,%dl
3e9c(6): jz 0x970(%rip)
3ea2(5): cmp $0x0,0x7c(%rsp)
3ea7(6): jz 0x963(%rip)
3ead(5): cmp $0x0,0xe(%rsp)
3eb2(6): jnz 0x9fb(%rip)
3eb8(3): test %r13,%r13
3ebb(3): setz %al
3ebe(6): cmp $0x0,0x50(%rsp)
3ec4(3): setnz %dl
3ec7(2): and %dl,%al
3ec9(6): jz 0xa23(%rip)
3ecf(5): mov 0x50(%rsp),%r13
3ed4(7): lea 0x58e2(%rip),%rbx
3edb(4): mov $0x27,(%r14)
3edf(8): mov $0x2,0x8(%rsp)
3ee7(6): mov $0x1,%r15d
3eed(9): mov $0x1,0x18(%rsp)
3ef6(5): mov $0x0,0xf(%rsp)
3efb(5): mov %rbx,0x48(%rsp)
3f00(4): mov %al,0x7c(%rsp)
3f04(5): jmp 0xfffff8df(%rip)
3f09(7): nop 0x0(%rax)
3f10(5): cmp $0x0,0xf(%rsp)
3f15(6): jnz 0x8ab(%rip)
3f1b(3): test %r13,%r13
3f1e(6): jz 0x402(%rip)
3f24(2): xor %edx,%edx
3f26(6): cmp $0x0,0x50(%rsp)
3f2c(6): jnz 0x3f4(%rip)
3f32(5): mov %r13,0x50(%rsp)
3f37(4): add $0x3,%r15
3f3b(2): xor %eax,%eax
3f3d(5): mov %r12b,0x7c(%rsp)
3f42(3): xor %r8d,%r8d
3f45(3): mov %rdx,%r13
3f48(5): mov $0x27,%ebx
3f4d(5): jmp 0xfffffa1c(%rip)
3f52(6): nop 0x0(%rax,%rax,1)
3f58(5): test $0x4,0x78(%rsp)
3f5d(2): jz 0x23(%rip)
3f5f(4): lea 0x2(%rbp),%rcx
3f63(3): cmp %r11,%rcx
3f66(2): jnb 0x1a(%rip)
3f68(5): mov 0x10(%rsp),%rax
3f6d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3f72(6): jz 0x790(%rip)
3f78(8): nop 0x0(%rax,%rax,1)
3f80(2): xor %edx,%edx
3f82(3): xor %r12d,%r12d
3f85(2): xor %eax,%eax
3f87(5): mov $0x3f,%ebx
3f8c(5): jmp 0xfffff9ac(%rip)
3f91(7): nop 0x0(%rax)
3f98(5): cmp $0x0,0xf(%rsp)
3f9d(6): jnz 0x823(%rip)
3fa3(3): xor %r12d,%r12d
3fa6(2): xor %eax,%eax
3fa8(5): mov $0x3f,%ebx
3fad(5): jmp 0xfffff9bc(%rip)
3fb2(6): nop 0x0(%rax,%rax,1)
3fb8(8): lea 0xa0(%rsp),%rax
3fc0(4): cmp $0xffffffff,%r11
3fc4(c): mov $0x0,0xa0(%rsp)
3fd0(5): mov %rax,0x28(%rsp)
3fd5(2): jnz 0x2f(%rip)
3fd7(5): mov 0x10(%rsp),%rdi
3fdc(5): mov %r8b,0x40(%rsp)
3fe1(5): mov %r10b,0x38(%rsp)
3fe6(5): mov %r9,0x30(%rsp)
3feb(5): call 0xffffdad5(%rip)
3ff0(6): movzx 0x40(%rsp),%r8d
3ff6(6): movzx 0x38(%rsp),%r10d
3ffc(3): mov %rax,%r11
3fff(5): mov 0x30(%rsp),%r9
4004(8): lea 0x9c(%rsp),%rax
400c(2): xor %ecx,%ecx
400e(4): mov %bl,0x7e(%rsp)
4012(5): mov %r8b,0x7d(%rsp)
4017(3): mov %rcx,%rbx
401a(8): mov %r9,0x88(%rsp)
4022(5): mov %rax,0x38(%rsp)
4027(5): mov %r10b,0x7f(%rsp)
402c(8): mov %r15,0x80(%rsp)
4034(5): mov %r14,0x40(%rsp)
4039(5): mov %r13,0x70(%rsp)
403e(5): mov %r11,0x30(%rsp)
4043(5): mov 0x10(%rsp),%rax
4048(5): lea 0x0(%rbp,%rbx,1),%r14
404d(5): mov 0x30(%rsp),%rdx
4052(5): mov 0x28(%rsp),%rcx
4057(5): mov 0x38(%rsp),%rdi
405c(4): lea 0x0(%rax,%r14,1),%r13
4060(3): sub %r14,%rdx
4063(3): mov %r13,%rsi
4066(5): call 0x383a(%rip)
406b(3): test %rax,%rax
406e(3): mov %rax,%r15
4071(2): jz 0x50(%rip)
4073(4): cmp $0xffffffff,%rax
4077(6): jz 0x61e(%rip)
407d(4): cmp $0xfffffffe,%rax
4081(6): jz 0x5a0(%rip)
4087(5): cmp $0x2,0x8(%rsp)
408c(3): setz %al
408f(4): and 0xf(%rsp),%al
4093(6): jnz 0x19d(%rip)
4099(7): mov 0x9c(%rsp),%edi
40a0(5): call 0xffffdd10(%rip)
40a5(5): mov 0x28(%rsp),%rdi
40aa(2): test %eax,%eax
40ac(5): mov $0x0,%eax
40b1(4): cmove %eax,%r12d
40b5(3): add %r15,%rbx
40b8(5): call 0xffffdce8(%rip)
40bd(2): test %eax,%eax
40bf(2): jz 0xffffff84(%rip)
40c1(3): mov %r12d,%edx
40c4(3): mov %rbx,%rdi
40c7(6): movzx 0x7d(%rsp),%r8d
40cd(3): xor $0x1,%edx
40d0(5): movzx 0x7e(%rsp),%ebx
40d5(6): movzx 0x7f(%rsp),%r10d
40db(4): and 0xd(%rsp),%dl
40df(8): mov 0x80(%rsp),%r15
40e7(5): mov 0x40(%rsp),%r14
40ec(5): mov 0x70(%rsp),%r13
40f1(5): mov 0x30(%rsp),%r11
40f6(4): cmp $0x1,%rdi
40fa(6): jbe 0x601(%rip)
4100(3): mov %rdi,%rcx
4103(2): xor %esi,%esi
4105(6): movzx 0xf(%rsp),%r9d
410b(3): add %rbp,%rcx
410e(5): mov 0x10(%rsp),%rdi
4113(5): jmp 0xbb(%rip)
4118(8): nop 0x0(%rax,%rax,1)
4120(5): cmp $0x2,0x8(%rsp)
4125(3): setz %al
4128(3): test %r9b,%r9b
412b(6): jnz 0x4b5(%rip)
4131(3): mov %r8d,%esi
4134(3): xor $0x1,%esi
4137(3): and %sil,%al
413a(2): jz 0x31(%rip)
413c(3): cmp %r15,%r13
413f(2): jbe 0x7(%rip)
4141(5): mov $0x27,0x0(%r14,%r15,1)
4146(4): lea 0x1(%r15),%rsi
414a(3): cmp %rsi,%r13
414d(2): jbe 0x8(%rip)
414f(6): mov $0x24,0x1(%r14,%r15,1)
4155(4): lea 0x2(%r15),%rsi
4159(3): cmp %rsi,%r13
415c(2): jbe 0x8(%rip)
415e(6): mov $0x27,0x2(%r14,%r15,1)
4164(4): add $0x3,%r15
4168(3): mov %eax,%r8d
416b(3): cmp %r15,%r13
416e(2): jbe 0x7(%rip)
4170(5): mov $0x5c,0x0(%r14,%r15,1)
4175(4): lea 0x1(%r15),%rax
4179(3): cmp %rax,%r13
417c(2): jbe 0xf(%rip)
417e(2): mov %ebx,%eax
4180(3): shr $0x6,%al
4183(3): add $0x30,%eax
4186(5): mov %al,0x1(%r14,%r15,1)
418b(4): lea 0x2(%r15),%rax
418f(3): cmp %rax,%r13
4192(2): jbe 0x12(%rip)
4194(2): mov %ebx,%eax
4196(3): shr $0x3,%al
4199(3): and $0x7,%eax
419c(3): add $0x30,%eax
419f(5): mov %al,0x2(%r14,%r15,1)
41a4(3): and $0x7,%ebx
41a7(4): add $0x1,%rbp
41ab(4): add $0x3,%r15
41af(3): add $0x30,%ebx
41b2(3): cmp %rcx,%rbp
41b5(6): jnb 0xfffff7eb(%rip)
41bb(2): mov %edx,%esi
41bd(3): cmp %r15,%r13
41c0(2): jbe 0x6(%rip)
41c2(4): mov %bl,0x0(%r14,%r15,1)
41c6(4): movzx 0x0(%rdi,%rbp,1),%ebx
41ca(4): add $0x1,%r15
41ce(2): test %dl,%dl
41d0(6): jnz 0xffffff50(%rip)
41d6(2): mov %esi,%eax
41d8(3): xor $0x1,%eax
41db(3): and %r8d,%eax
41de(3): test %r10b,%r10b
41e1(2): jz 0x10(%rip)
41e3(3): cmp %r15,%r13
41e6(2): jbe 0x7(%rip)
41e8(5): mov $0x5c,0x0(%r14,%r15,1)
41ed(4): add $0x1,%r15
41f1(4): add $0x1,%rbp
41f5(3): cmp %rcx,%rbp
41f8(6): jnb 0xfffff784(%rip)
41fe(2): test %al,%al
4200(6): jz 0x3fe(%rip)
4206(3): cmp %r15,%r13
4209(2): jbe 0x7(%rip)
420b(5): mov $0x27,0x0(%r14,%r15,1)
4210(4): lea 0x1(%r15),%rax
4214(3): cmp %rax,%r13
4217(2): jbe 0x8(%rip)
4219(6): mov $0x27,0x1(%r14,%r15,1)
421f(4): add $0x2,%r15
4223(3): xor %r10d,%r10d
4226(3): xor %r8d,%r8d
4229(2): jmp 0xffffff94(%rip)
422b(5): nop 0x0(%rax,%rax,1)
4230(4): cmp $0x1,%r15
4234(6): jz 0xfffffe65(%rip)
423a(5): mov 0x10(%rsp),%rdi
423f(4): lea 0x0(%rdi,%r15,1),%rcx
4243(5): lea 0x1(%rdi,%r14,1),%rdx
4248(4): lea 0x0(%rcx,%r14,1),%r8
424c(2): jmp 0x11(%rip)
424e(2): nop 
4250(4): add $0x1,%rdx
4254(3): cmp %rdx,%r8
4257(6): jz 0xfffffe42(%rip)
425d(3): movzx (%rdx),%ecx
4260(3): sub $0x5b,%ecx
4263(3): cmp $0x21,%cl
4266(2): jnbe 0xffffffea(%rip)
4268(5): mov $0x1,%esi
426d(3): shl/sal %cl,%rsi
4270(3): mov %rsi,%rcx
4273(a): mov $0x8589934635,%rsi
427d(3): test %rsi,%rcx
4280(2): jz 0xffffffd0(%rip)
4282(5): mov 0x40(%rsp),%r14
4287(5): mov 0x70(%rsp),%r13
428c(5): mov 0x30(%rsp),%rbp
4291(8): mov $0x2,0x8(%rsp)
4299(5): cmp $0x0,0xd(%rsp)
429e(2): jz 0x12(%rip)
42a0(2): test %al,%al
42a2(5): mov $0x4,%eax
42a7(5): cmove 0x8(%rsp),%eax
42ac(4): mov %eax,0x8(%rsp)
42b0(4): sub $0x8,%rsp
42b4(3): mov %rbp,%rcx
42b7(3): mov %r13,%rsi
42ba(4): push 0x68(%rsp)
42be(4): push 0x78(%rsp)
42c2(3): mov %r14,%rdi
42c5(2): push $0x0
42c7(8): mov 0x98(%rsp),%r9d
42cf(5): mov 0x28(%rsp),%r8d
42d4(5): mov 0x30(%rsp),%rdx
42d9(4): and $0xfd,%r9d
42dd(5): call 0xfffff433(%rip)
42e2(4): add $0x20,%rsp
42e6(3): mov %rax,%r15
42e9(8): mov 0xa8(%rsp),%rbx
42f1(9): xor $0x28,%rbx
42fa(3): mov %r15,%rax
42fd(6): jnz 0x606(%rip)
4303(7): add $0xb8,%rsp
430a(1): pop %rbx
430b(1): pop %rbp
430c(2): pop %r12
430e(2): pop %r13
4310(2): pop %r14
4312(2): pop %r15
4314(1): ret near (%rsp)
4315(3): nop (%rax)
4318(3): mov %r11,%rbp
431b(5): jmp 0xffffff7e(%rip)
4320(3): cmp %r15,%r13
4323(2): jbe 0x7(%rip)
4325(5): mov $0x27,0x0(%r14,%r15,1)
432a(4): lea 0x1(%r15),%rax
432e(3): cmp %rax,%r13
4331(2): jbe 0x8(%rip)
4333(6): mov $0x5c,0x1(%r14,%r15,1)
4339(4): lea 0x2(%r15),%rax
433d(3): cmp %rax,%r13
4340(6): jbe 0x5f2(%rip)
4346(3): mov %r13,%rdx
4349(6): mov $0x27,0x2(%r14,%r15,1)
434f(5): mov 0x50(%rsp),%r13
4354(5): jmp 0xfffffbde(%rip)
4359(3): mov %r12d,%eax
435c(5): mov $0x30,%ebx
4361(3): xor %r12d,%r12d
4364(5): jmp 0xfffff605(%rip)
4369(6): mov $0x27,0x2(%r14,%r15,1)
436f(5): jmp 0xfffff9ca(%rip)
4374(2): test %ebx,%ebx
4376(6): jnz 0xfffff42d(%rip)
437c(5): mov $0x1,0xd(%rsp)
4381(3): test %r13,%r13
4384(6): jnz 0x596(%rip)
438a(7): lea 0x542c(%rip),%rax
4391(9): mov $0x0,0x50(%rsp)
439a(5): mov $0x1,0xe(%rsp)
439f(5): mov $0x0,0x7c(%rsp)
43a4(3): xor %r12d,%r12d
43a7(5): mov $0x0,0xf(%rsp)
43ac(9): mov $0x1,0x18(%rsp)
43b5(5): mov %rax,0x48(%rsp)
43ba(6): mov $0x1,%r15d
43c0(8): mov $0x2,0x8(%rsp)
43c8(5): jmp 0xfffff41b(%rip)
43cd(3): nop (%rax)
43d0(2): test %ebx,%ebx
43d2(6): jnz 0x3fb(%rip)
43d8(3): test %r13,%r13
43db(6): jz 0x22b(%rip)
43e1(4): mov $0x22,(%r14)
43e5(5): mov $0x1,0xe(%rsp)
43ea(3): xor %r12d,%r12d
43ed(5): mov $0x0,0x7c(%rsp)
43f2(9): mov $0x0,0x50(%rsp)
43fb(7): lea 0x53b9(%rip),%rax
4402(5): mov $0x0,0xf(%rsp)
4407(5): mov $0x1,0xd(%rsp)
440c(9): mov $0x1,0x18(%rsp)
4415(6): mov $0x1,%r15d
441b(5): mov %rax,0x48(%rsp)
4420(5): jmp 0xfffff3c3(%rip)
4425(7): lea 0x538f(%rip),%rax
442c(5): mov $0x1,0xe(%rsp)
4431(5): mov $0x0,0x7c(%rsp)
4436(3): xor %r12d,%r12d
4439(9): mov $0x0,0x50(%rsp)
4442(5): mov $0x1,0xf(%rsp)
4447(5): mov $0x1,0xd(%rsp)
444c(9): mov $0x1,0x18(%rsp)
4455(3): xor %r15d,%r15d
4458(5): mov %rax,0x48(%rsp)
445d(8): mov $0x5,0x8(%rsp)
4465(5): jmp 0xfffff37e(%rip)
446a(5): mov $0x1,0xe(%rsp)
446f(5): mov $0x0,0x7c(%rsp)
4474(3): xor %r12d,%r12d
4477(9): mov $0x0,0x50(%rsp)
4480(5): mov $0x0,0xf(%rsp)
4485(3): xor %r15d,%r15d
4488(5): mov $0x1,0xd(%rsp)
448d(9): mov $0x0,0x18(%rsp)
4496(9): mov $0x0,0x48(%rsp)
449f(5): jmp 0xfffff344(%rip)
44a4(5): cmp $0xa,0x8(%rsp)
44a9(2): jz 0x58(%rip)
44ab(7): lea 0x530d(%rip),%rsi
44b2(2): xor %edi,%edi
44b4(5): mov $0x5,%edx
44b9(5): call 0xffffd5e7(%rip)
44be(3): mov %rax,%rcx
44c1(5): mov %rax,0x68(%rsp)
44c6(7): lea 0x52f2(%rip),%rax
44cd(3): cmp %rax,%rcx
44d0(6): jz 0x39e(%rip)
44d6(7): lea 0x52e0(%rip),%rsi
44dd(2): xor %edi,%edi
44df(5): mov $0x5,%edx
44e4(5): call 0xffffd5bc(%rip)
44e9(3): mov %rax,%rcx
44ec(5): mov %rax,0x60(%rsp)
44f1(7): lea 0x52c5(%rip),%rax
44f8(3): cmp %rax,%rcx
44fb(6): jz 0x389(%rip)
4501(3): xor %r15d,%r15d
4504(2): test %ebx,%ebx
4506(6): jz 0x1c7(%rip)
450c(2): test %ebx,%ebx
450e(5): mov 0x60(%rsp),%rbx
4513(5): setnz 0xf(%rsp)
4518(3): xor %r12d,%r12d
451b(3): mov %rbx,%rdi
451e(5): call 0xffffd5a2(%rip)
4523(5): mov %rbx,0x48(%rsp)
4528(5): mov %rax,0x18(%rsp)
452d(5): mov $0x1,0xe(%rsp)
4532(5): mov $0x0,0x7c(%rsp)
4537(9): mov $0x0,0x50(%rsp)
4540(5): mov $0x1,0xd(%rsp)
4545(5): jmp 0xfffff29e(%rip)
454a(5): mov $0x1,0xe(%rsp)
454f(5): mov $0x0,0x7c(%rsp)
4554(3): xor %r12d,%r12d
4557(9): mov $0x0,0x50(%rsp)
4560(5): mov $0x0,0xf(%rsp)
4565(3): xor %r15d,%r15d
4568(5): mov $0x0,0xd(%rsp)
456d(9): mov $0x0,0x18(%rsp)
4576(9): mov $0x0,0x48(%rsp)
457f(5): jmp 0xfffff264(%rip)
4584(5): mov $0x1,0xe(%rsp)
4589(5): mov $0x0,0x7c(%rsp)
458e(3): xor %r12d,%r12d
4591(9): mov $0x0,0x50(%rsp)
459a(5): mov $0x1,0xf(%rsp)
459f(5): mov $0x1,0xd(%rsp)
45a4(5): jmp 0xfffff21f(%rip)
45a9(3): cmp %r15,%r13
45ac(2): jbe 0x7(%rip)
45ae(5): mov $0x30,0x0(%r14,%r15,1)
45b3(4): lea 0x2(%rcx),%rax
45b7(3): cmp %rax,%r13
45ba(2): jbe 0x8(%rip)
45bc(6): mov $0x30,0x2(%r14,%rcx,1)
45c2(3): mov %r12d,%eax
45c5(4): lea 0x3(%rcx),%r15
45c9(3): xor %r12d,%r12d
45cc(5): mov $0x30,%ebx
45d1(5): jmp 0xfffff367(%rip)
45d6(a): nop 0x0(%rax,%rax,1)
45e0(5): movzx 0xf(%rsp),%ebx
45e5(3): mov %r11,%rbp
45e8(4): mov %bl,0xd(%rsp)
45ec(5): jmp 0xfffffcad(%rip)
45f1(5): movzx 0xd(%rsp),%edx
45f6(3): xor %r12d,%r12d
45f9(5): jmp 0xfffffb07(%rip)
45fe(3): xor %r10d,%r10d
4601(5): jmp 0xfffffbbc(%rip)
4606(9): mov $0x0,0x50(%rsp)
460f(5): mov $0x1,0xe(%rsp)
4614(3): xor %r12d,%r12d
4617(5): mov $0x0,0x7c(%rsp)
461c(5): jmp 0xfffffddf(%rip)
4621(5): mov 0x30(%rsp),%r11
4626(3): mov %r14,%rsi
4629(3): mov %r13,%rcx
462c(3): mov %rbx,%rax
462f(3): mov %rbx,%rdi
4632(6): movzx 0x7d(%rsp),%r8d
4638(5): movzx 0x7e(%rsp),%ebx
463d(8): mov 0x88(%rsp),%r9
4645(3): cmp %r11,%rsi
4648(6): movzx 0x7f(%rsp),%r10d
464e(8): mov 0x80(%rsp),%r15
4656(5): mov 0x40(%rsp),%r14
465b(5): mov 0x70(%rsp),%r13
4660(2): jnb 0x28(%rip)
4662(3): cmp $0x0,(%rcx)
4665(2): jnz 0x12(%rip)
4667(2): jmp 0x21(%rip)
4669(7): nop 0x0(%rax)
4670(5): cmp $0x0,0x0(%r9,%rax,1)
4675(2): jz 0x10(%rip)
4677(4): add $0x1,%rax
467b(5): lea 0x0(%rbp,%rax,1),%rdx
4680(3): cmp %rdx,%r11
4683(2): jnbe 0xffffffed(%rip)
4685(3): mov %rax,%rdi
4688(5): movzx 0xd(%rsp),%edx
468d(3): xor %r12d,%r12d
4690(5): jmp 0xfffffa66(%rip)
4695(3): mov %rbx,%rdi
4698(6): movzx 0x7d(%rsp),%r8d
469e(5): movzx 0x7e(%rsp),%ebx
46a3(6): movzx 0x7f(%rsp),%r10d
46a9(8): mov 0x80(%rsp),%r15
46b1(3): xor %r12d,%r12d
46b4(5): mov 0x40(%rsp),%r14
46b9(5): mov 0x70(%rsp),%r13
46be(5): mov 0x30(%rsp),%r11
46c3(5): movzx 0xd(%rsp),%edx
46c8(5): jmp 0xfffffa2e(%rip)
46cd(5): mov 0x68(%rsp),%rdx
46d2(3): movzx (%rdx),%eax
46d5(2): test %al,%al
46d7(6): jz 0xfffffe35(%rip)
46dd(3): nop (%rax)
46e0(3): cmp %r15,%r13
46e3(2): jbe 0x6(%rip)
46e5(4): mov %al,0x0(%r14,%r15,1)
46e9(4): add $0x1,%r15
46ed(5): movzx 0x0(%rdx,%r15,1),%eax
46f2(2): test %al,%al
46f4(2): jnz 0xffffffec(%rip)
46f6(5): jmp 0xfffffe16(%rip)
46fb(2): mov %edx,%eax
46fd(5): jmp 0xfffff55a(%rip)
4702(4): movzx 0x0(%rax,%rcx,1),%ebx
4706(3): cmp $0x3e,%bl
4709(6): jnbe 0xfffff877(%rip)
470f(a): mov $0x8070630310989004800,%rax
4719(4): bt %rbx,%rax
471d(6): jnb 0xfffff863(%rip)
4723(5): cmp $0x0,0xf(%rsp)
4728(6): jnz 0x1ea(%rip)
472e(3): cmp %r15,%r13
4731(2): jbe 0x7(%rip)
4733(5): mov $0x3f,0x0(%r14,%r15,1)
4738(4): lea 0x1(%r15),%rax
473c(3): cmp %rax,%r13
473f(2): jbe 0x8(%rip)
4741(6): mov $0x22,0x1(%r14,%r15,1)
4747(4): lea 0x2(%r15),%rax
474b(3): cmp %rax,%r13
474e(2): jbe 0x8(%rip)
4750(6): mov $0x22,0x2(%r14,%r15,1)
4756(4): lea 0x3(%r15),%rax
475a(3): cmp %rax,%r13
475d(2): jbe 0x8(%rip)
475f(6): mov $0x3f,0x3(%r14,%r15,1)
4765(4): add $0x4,%r15
4769(2): xor %edx,%edx
476b(3): xor %r12d,%r12d
476e(2): xor %eax,%eax
4770(3): mov %rcx,%rbp
4773(5): jmp 0xfffff1c5(%rip)
4778(2): test %ebx,%ebx
477a(6): jz 0x18e(%rip)
4780(7): lea 0x5036(%rip),%rax
4787(5): mov $0x1,0xe(%rsp)
478c(5): mov $0x0,0x7c(%rsp)
4791(3): xor %r12d,%r12d
4794(9): mov $0x0,0x50(%rsp)
479d(5): mov $0x1,0xf(%rsp)
47a2(5): mov $0x0,0xd(%rsp)
47a7(9): mov $0x1,0x18(%rsp)
47b0(3): xor %r15d,%r15d
47b3(5): mov %rax,0x48(%rsp)
47b8(5): jmp 0xfffff02b(%rip)
47bd(3): nop (%rax)
47c0(3): mov %r11,%rbp
47c3(5): movzx 0xf(%rsp),%eax
47c8(5): jmp 0xfffffad1(%rip)
47cd(7): lea 0x4fe7(%rip),%rax
47d4(5): mov $0x1,0xe(%rsp)
47d9(5): mov $0x0,0x7c(%rsp)
47de(3): xor %r12d,%r12d
47e1(9): mov $0x0,0x50(%rsp)
47ea(5): mov $0x1,0xf(%rsp)
47ef(5): mov $0x1,0xd(%rsp)
47f4(9): mov $0x1,0x18(%rsp)
47fd(3): xor %r15d,%r15d
4800(5): mov %rax,0x48(%rsp)
4805(5): jmp 0xffffefde(%rip)
480a(2): mov %edx,%eax
480c(5): mov 0x48(%rsp),%rbx
4811(3): test %rbx,%rbx
4814(2): jz 0x2e(%rip)
4816(2): test %al,%al
4818(2): jz 0x2a(%rip)
481a(3): movzx (%rbx),%ecx
481d(3): mov %rbx,%rax
4820(2): test %cl,%cl
4822(2): jz 0x20(%rip)
4824(3): mov %r15,%rdx
4827(3): sub %r15,%rax
482a(3): cmp %rdx,%r13
482d(2): jbe 0x6(%rip)
482f(4): mov %cl,0x0(%r14,%rdx,1)
4833(4): add $0x1,%rdx
4837(4): movzx 0x0(%rax,%rdx,1),%ecx
483b(2): test %cl,%cl
483d(2): jnz 0xffffffed(%rip)
483f(3): mov %rdx,%r15
4842(3): cmp %r15,%r13
4845(6): jbe 0xfffffaa4(%rip)
484b(5): mov $0x0,0x0(%r14,%r15,1)
4850(5): jmp 0xfffffa99(%rip)
4855(5): cmp $0x2,0x8(%rsp)
485a(5): movzx 0xf(%rsp),%ebx
485f(3): mov %r11,%rbp
4862(3): setz %al
4865(4): mov %bl,0xd(%rsp)
4869(5): jmp 0xfffffa30(%rip)
486e(4): mov 0x8(%rsp),%esi
4872(3): mov %rcx,%rdi
4875(5): call 0xffffedab(%rip)
487a(5): mov %rax,0x68(%rsp)
487f(5): jmp 0xfffffc57(%rip)
4884(4): mov 0x8(%rsp),%esi
4888(3): mov %rcx,%rdi
488b(5): call 0xffffed95(%rip)
4890(5): mov %rax,0x60(%rsp)
4895(5): jmp 0xfffffc6c(%rip)
489a(5): movzx 0xf(%rsp),%ebx
489f(3): mov %r11,%rbp
48a2(2): mov %edx,%eax
48a4(4): mov %bl,0xd(%rsp)
48a8(5): jmp 0xfffff9f1(%rip)
48ad(4): sub $0x8,%rsp
48b1(6): mov $0x5,%r8d
48b7(3): mov %r11,%rcx
48ba(4): push 0x68(%rsp)
48be(4): push 0x78(%rsp)
48c2(3): mov %r14,%rdi
48c5(4): push 0x38(%rsp)
48c9(8): mov 0x98(%rsp),%r9d
48d1(5): mov 0x30(%rsp),%rdx
48d6(5): mov 0x70(%rsp),%rsi
48db(5): call 0xffffee35(%rip)
48e0(4): add $0x20,%rsp
48e4(3): mov %rax,%r15
48e7(5): jmp 0xfffffa02(%rip)
48ec(5): movzx 0x7c(%rsp),%eax
48f1(5): jmp 0xffffff1b(%rip)
48f6(8): mov $0x2,0x8(%rsp)
48fe(5): jmp 0xfffff99b(%rip)
4903(5): call 0xffffd1cd(%rip)
4908(5): mov $0x0,0xd(%rsp)
490d(5): jmp 0xfffffa74(%rip)
4912(3): mov %r11,%rbp
4915(5): jmp 0xfffff99b(%rip)
491a(5): mov $0x1,0xe(%rsp)
491f(2): xor %eax,%eax
4921(3): xor %r12d,%r12d
4924(9): mov $0x0,0x50(%rsp)
492d(5): jmp 0xfffff5a7(%rip)
4932(3): mov %r13,%rdx
4935(5): mov 0x50(%rsp),%r13
493a(5): jmp 0xfffff5f8(%rip)
493f(5): call 0xffffd061(%rip)

"quotearg_n_options" :
4950(2): push %r15
4952(2): push %r14
4954(3): movsxd %edi,%r15
4957(2): push %r13
4959(2): push %r12
495b(3): mov %rdx,%r14
495e(1): push %rbp
495f(1): push %rbx
4960(3): mov %rcx,%rbp
4963(4): sub $0x28,%rsp
4967(5): mov %rsi,0x8(%rsp)
496c(5): call 0xffffd044(%rip)
4971(3): mov %rax,%r13
4974(2): mov (%rax),%eax
4976(3): test %r15d,%r15d
4979(7): mov 0x2086e0(%rip),%rbx
4980(4): mov %eax,0x18(%rsp)
4984(6): js 0x16d(%rip)
498a(7): cmp %r15d,0x2086c7(%rip)
4991(2): jnle 0x64(%rip)
4993(7): cmp $0x7fffffff,%r15d
499a(6): jz 0x15c(%rip)
49a0(4): lea 0x1(%r15),%r12d
49a4(7): lea 0x2086c5(%rip),%rax
49ab(3): movsxd %r12d,%rsi
49ae(4): shl/sal $0x4,%rsi
49b2(3): cmp %rax,%rbx
49b5(6): jz 0x11b(%rip)
49bb(3): mov %rbx,%rdi
49be(5): call 0x2222(%rip)
49c3(3): mov %rax,%rbx
49c6(7): mov %rax,0x208693(%rip)
49cd(7): movsxd 0x208684(%rip),%rdi
49d4(3): mov %r12d,%edx
49d7(2): xor %esi,%esi
49d9(2): sub %edi,%edx
49db(4): shl/sal $0x4,%rdi
49df(3): movsxd %edx,%rdx
49e2(3): add %rbx,%rdi
49e5(4): shl/sal $0x4,%rdx
49e9(5): call 0xffffd197(%rip)
49ee(7): mov %r12d,0x208663(%rip)
49f5(3): mov 0x4(%rbp),%eax
49f8(4): shl/sal $0x4,%r15
49fc(4): sub $0x8,%rsp
4a00(3): add %r15,%rbx
4a03(4): lea 0x8(%rbp),%r15
4a07(4): mov 0x0(%rbp),%r8d
4a0b(3): mov (%rbx),%r11
4a0e(4): mov 0x8(%rbx),%r12
4a12(3): mov %r14,%rcx
4a15(3): or $0x1,%eax
4a18(4): mov %eax,0x24(%rsp)
4a1c(3): push 0x30(%rbp)
4a1f(3): mov %eax,%r9d
4a22(3): push 0x28(%rbp)
4a25(2): push %r15
4a27(3): mov %r11,%rsi
4a2a(5): mov 0x28(%rsp),%rdx
4a2f(3): mov %r12,%rdi
4a32(5): mov %r11,0x30(%rsp)
4a37(5): call 0xffffecd9(%rip)
4a3c(4): add $0x20,%rsp
4a40(5): mov 0x10(%rsp),%r11
4a45(3): cmp %rax,%r11
4a48(2): jnbe 0x69(%rip)
4a4a(4): lea 0x1(%rax),%rsi
4a4e(7): lea 0x2086ab(%rip),%rax
4a55(3): cmp %rax,%r12
4a58(3): mov %rsi,(%rbx)
4a5b(2): jz 0x14(%rip)
4a5d(3): mov %r12,%rdi
4a60(5): mov %rsi,0x10(%rsp)
4a65(5): call 0xffffd36b(%rip)
4a6a(5): mov 0x10(%rsp),%rsi
4a6f(3): mov %rsi,%rdi
4a72(5): mov %rsi,0x10(%rsp)
4a77(5): call 0x2109(%rip)
4a7c(4): sub $0x8,%rsp
4a80(4): mov %rax,0x8(%rbx)
4a84(4): mov 0x0(%rbp),%r8d
4a88(3): push 0x30(%rbp)
4a8b(3): push 0x28(%rbp)
4a8e(3): mov %r14,%rcx
4a91(2): push %r15
4a93(5): mov 0x3c(%rsp),%r9d
4a98(3): mov %rax,%rdi
4a9b(5): mov 0x28(%rsp),%rdx
4aa0(5): mov 0x30(%rsp),%rsi
4aa5(3): mov %rax,%r12
4aa8(5): call 0xffffec68(%rip)
4aad(4): add $0x20,%rsp
4ab1(4): mov 0x18(%rsp),%eax
4ab5(4): mov %eax,0x0(%r13)
4ab9(4): add $0x28,%rsp
4abd(3): mov %r12,%rax
4ac0(1): pop %rbx
4ac1(1): pop %rbp
4ac2(2): pop %r12
4ac4(2): pop %r13
4ac6(2): pop %r14
4ac8(2): pop %r15
4aca(1): ret near (%rsp)
4acb(5): nop 0x0(%rax,%rax,1)
4ad0(2): xor %edi,%edi
4ad2(5): call 0x210e(%rip)
4ad7(8): movdqa 0x208591(%rip),%xmm0
4adf(3): mov %rax,%rbx
4ae2(7): mov %rax,0x208577(%rip)
4ae9(3): movups %xmm0,(%rax)
4aec(5): jmp 0xfffffee1(%rip)
4af1(5): call 0xffffceaf(%rip)
4af6(5): call 0x22da(%rip)

"clone_quoting_options" :
4b00(2): push %r12
4b02(1): push %rbp
4b03(1): push %rbx
4b04(3): mov %rdi,%rbx
4b07(5): call 0xffffcea9(%rip)
4b0c(3): mov (%rax),%r12d
4b0f(3): mov %rax,%rbp
4b12(7): lea 0x2086e7(%rip),%rax
4b19(3): test %rbx,%rbx
4b1c(5): mov $0x38,%esi
4b21(4): cmove %rax,%rbx
4b25(3): mov %rbx,%rdi
4b28(5): call 0x2258(%rip)
4b2d(4): mov %r12d,0x0(%rbp)
4b31(1): pop %rbx
4b32(1): pop %rbp
4b33(2): pop %r12
4b35(1): ret near (%rsp)

"get_quoting_style" :
4b40(7): lea 0x2086b9(%rip),%rax
4b47(3): test %rdi,%rdi
4b4a(4): cmove %rax,%rdi
4b4e(2): mov (%rdi),%eax
4b50(1): ret near (%rsp)

"set_quoting_style" :
4b60(7): lea 0x208699(%rip),%rax
4b67(3): test %rdi,%rdi
4b6a(4): cmove %rax,%rdi
4b6e(2): mov %esi,(%rdi)
4b70(1): ret near (%rsp)

"set_char_quoting" :
4b80(7): lea 0x208679(%rip),%rax
4b87(3): test %rdi,%rdi
4b8a(2): mov %esi,%ecx
4b8c(4): cmove %rax,%rdi
4b90(2): mov %esi,%eax
4b92(3): and $0x1f,%ecx
4b95(3): shr $0x5,%al
4b98(3): movzx %al,%eax
4b9b(5): lea 0x8(%rdi,%rax,4),%rdi
4ba0(2): mov (%rdi),%esi
4ba2(2): mov %esi,%eax
4ba4(2): shr %cl,%eax
4ba6(2): xor %eax,%edx
4ba8(3): and $0x1,%eax
4bab(3): and $0x1,%edx
4bae(2): shl/sal %cl,%edx
4bb0(2): xor %esi,%edx
4bb2(2): mov %edx,(%rdi)
4bb4(1): ret near (%rsp)

"set_quoting_flags" :
4bc0(7): lea 0x208639(%rip),%rax
4bc7(3): test %rdi,%rdi
4bca(4): cmove %rax,%rdi
4bce(3): mov 0x4(%rdi),%eax
4bd1(3): mov %esi,0x4(%rdi)
4bd4(1): ret near (%rsp)

"set_custom_quoting" :
4be0(7): lea 0x208619(%rip),%rax
4be7(3): test %rdi,%rdi
4bea(4): cmove %rax,%rdi
4bee(3): test %rsi,%rsi
4bf1(6): mov $0xa,(%rdi)
4bf7(2): jz 0x10(%rip)
4bf9(3): test %rdx,%rdx
4bfc(2): jz 0xb(%rip)
4bfe(4): mov %rsi,0x28(%rdi)
4c02(4): mov %rdx,0x30(%rdi)
4c06(1): ret near (%rsp)
4c07(4): sub $0x8,%rsp
4c0b(5): call 0xffffcd95(%rip)

"quotearg_buffer" :
4c10(2): push %r15
4c12(2): push %r14
4c14(7): lea 0x2085e5(%rip),%rax
4c1b(2): push %r13
4c1d(2): push %r12
4c1f(3): mov %rdi,%r13
4c22(1): push %rbp
4c23(1): push %rbx
4c24(3): mov %r8,%rbx
4c27(3): mov %rsi,%r14
4c2a(3): mov %rdx,%r15
4c2d(4): sub $0x18,%rsp
4c31(3): test %r8,%r8
4c34(4): cmove %rax,%rbx
4c38(5): mov %rcx,0x8(%rsp)
4c3d(5): call 0xffffcd73(%rip)
4c42(3): mov (%rax),%r12d
4c45(3): mov %rax,%rbp
4c48(4): lea 0x8(%rbx),%rax
4c4c(4): sub $0x8,%rsp
4c50(4): mov 0x4(%rbx),%r9d
4c54(3): push 0x30(%rbx)
4c57(3): mov (%rbx),%r8d
4c5a(3): push 0x28(%rbx)
4c5d(3): mov %r15,%rdx
4c60(1): push %rax
4c61(5): mov 0x28(%rsp),%rcx
4c66(3): mov %r14,%rsi
4c69(3): mov %r13,%rdi
4c6c(5): call 0xffffeaa4(%rip)
4c71(4): mov %r12d,0x0(%rbp)
4c75(4): add $0x38,%rsp
4c79(1): pop %rbx
4c7a(1): pop %rbp
4c7b(2): pop %r12
4c7d(2): pop %r13
4c7f(2): pop %r14
4c81(2): pop %r15
4c83(1): ret near (%rsp)

"quotearg_alloc_mem" :
4c90(2): push %r15
4c92(2): push %r14
4c94(7): lea 0x208565(%rip),%rax
4c9b(2): push %r13
4c9d(2): push %r12
4c9f(3): mov %rdx,%r12
4ca2(1): push %rbp
4ca3(1): push %rbx
4ca4(3): mov %rcx,%rbx
4ca7(3): mov %rdi,%r14
4caa(3): mov %rsi,%r15
4cad(4): sub $0x38,%rsp
4cb1(3): test %rcx,%rcx
4cb4(4): cmove %rax,%rbx
4cb8(2): xor %ebp,%ebp
4cba(5): call 0xffffccf6(%rip)
4cbf(3): test %r12,%r12
4cc2(3): mov %rax,%r13
4cc5(2): mov (%rax),%eax
4cc7(4): setz %bpl
4ccb(3): or 0x4(%rbx),%ebp
4cce(4): lea 0x8(%rbx),%r10
4cd2(4): sub $0x8,%rsp
4cd6(3): mov (%rbx),%r8d
4cd9(3): mov %r15,%rcx
4cdc(4): mov %eax,0x14(%rsp)
4ce0(3): push 0x30(%rbx)
4ce3(3): mov %r14,%rdx
4ce6(3): push 0x28(%rbx)
4ce9(2): push %r10
4ceb(2): xor %esi,%esi
4ced(3): mov %ebp,%r9d
4cf0(2): xor %edi,%edi
4cf2(5): mov %r10,0x40(%rsp)
4cf7(5): call 0xffffea19(%rip)
4cfc(4): lea 0x1(%rax),%rsi
4d00(5): mov %rax,0x48(%rsp)
4d05(4): add $0x20,%rsp
4d09(3): mov %rsi,%rdi
4d0c(5): mov %rsi,0x18(%rsp)
4d11(5): call 0x1e6f(%rip)
4d16(5): mov %rax,0x10(%rsp)
4d1b(4): sub $0x8,%rsp
4d1f(3): push 0x30(%rbx)
4d22(3): push 0x28(%rbx)
4d25(5): mov 0x38(%rsp),%r10
4d2a(3): mov %ebp,%r9d
4d2d(3): mov (%rbx),%r8d
4d30(3): mov %r15,%rcx
4d33(3): mov %r14,%rdx
4d36(3): mov %rax,%rdi
4d39(2): push %r10
4d3b(5): mov 0x38(%rsp),%rsi
4d40(5): call 0xffffe9d0(%rip)
4d45(4): mov 0x2c(%rsp),%eax
4d49(4): add $0x20,%rsp
4d4d(3): test %r12,%r12
4d50(4): mov %eax,0x0(%r13)
4d54(2): jz 0xb(%rip)
4d56(5): mov 0x28(%rsp),%r11
4d5b(4): mov %r11,(%r12)
4d5f(5): mov 0x10(%rsp),%rax
4d64(4): add $0x38,%rsp
4d68(1): pop %rbx
4d69(1): pop %rbp
4d6a(2): pop %r12
4d6c(2): pop %r13
4d6e(2): pop %r14
4d70(2): pop %r15
4d72(1): ret near (%rsp)

"quotearg_alloc" :
4d80(3): mov %rdx,%rcx
4d83(2): xor %edx,%edx
4d85(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4d90(6): mov 0x2082c2(%rip),%eax
4d96(2): push %r12
4d98(7): mov 0x2082c1(%rip),%r12
4d9f(1): push %rbp
4da0(1): push %rbx
4da1(3): cmp $0x1,%eax
4da4(2): jle 0x2d(%rip)
4da6(3): sub $0x2,%eax
4da9(5): lea 0x18(%r12),%rbx
4dae(4): shl/sal $0x4,%rax
4db2(5): lea 0x28(%r12,%rax,1),%rbp
4db7(9): nop 0x0(%rax,%rax,1)
4dc0(3): mov (%rbx),%rdi
4dc3(4): add $0x10,%rbx
4dc7(5): call 0xffffd009(%rip)
4dcc(3): cmp %rbp,%rbx
4dcf(2): jnz 0xfffffff1(%rip)
4dd1(5): mov 0x8(%r12),%rdi
4dd6(7): lea 0x208323(%rip),%rbx
4ddd(3): cmp %rbx,%rdi
4de0(2): jz 0x19(%rip)
4de2(5): call 0xffffcfee(%rip)
4de7(b): mov $0x100,0x20827e(%rip)
4df2(7): mov %rbx,0x20827f(%rip)
4df9(7): lea 0x208270(%rip),%rbx
4e00(3): cmp %rbx,%r12
4e03(2): jz 0x11(%rip)
4e05(3): mov %r12,%rdi
4e08(5): call 0xffffcfc8(%rip)
4e0d(7): mov %rbx,0x20824c(%rip)
4e14(1): pop %rbx
4e15(a): mov $0x1,0x208239(%rip)
4e1f(1): pop %rbp
4e20(2): pop %r12
4e22(1): ret near (%rsp)

"quotearg_n" :
4e30(7): lea 0x2083c9(%rip),%rcx
4e37(7): mov $0xffffffff,%rdx
4e3e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4e50(7): lea 0x2083a9(%rip),%rcx
4e57(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4e60(7): lea 0x208399(%rip),%rcx
4e67(3): mov %rdi,%rsi
4e6a(7): mov $0xffffffff,%rdx
4e71(2): xor %edi,%edi
4e73(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4e80(7): lea 0x208379(%rip),%rcx
4e87(3): mov %rsi,%rdx
4e8a(3): mov %rdi,%rsi
4e8d(2): xor %edi,%edi
4e8f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4ea0(4): sub $0x48,%rsp
4ea4(3): mov %rdx,%rax
4ea7(9): mov $0x28,%rdx
4eb0(5): mov %rdx,0x38(%rsp)
4eb5(2): xor %edx,%edx
4eb7(3): cmp $0xa,%esi
4eba(2): jz 0x6a(%rip)
4ebc(3): mov %esi,(%rsp)
4ebf(3): mov %rsp,%rcx
4ec2(7): mov $0xffffffff,%rdx
4ec9(3): mov %rax,%rsi
4ecc(9): mov $0x0,0x4(%rsp)
4ed5(9): mov $0x0,0xc(%rsp)
4ede(9): mov $0x0,0x14(%rsp)
4ee7(9): mov $0x0,0x1c(%rsp)
4ef0(9): mov $0x0,0x24(%rsp)
4ef9(9): mov $0x0,0x2c(%rsp)
4f02(8): mov $0x0,0x34(%rsp)
4f0a(5): call 0xfffffa46(%rip)
4f0f(5): mov 0x38(%rsp),%rcx
4f14(9): xor $0x28,%rcx
4f1d(2): jnz 0xc(%rip)
4f1f(4): add $0x48,%rsp
4f23(1): ret near (%rsp)
4f24(5): call 0xffffca7c(%rip)
4f29(5): call 0xffffcba7(%rip)

"quotearg_n_style_mem" :
4f30(4): sub $0x48,%rsp
4f34(3): mov %rdx,%rax
4f37(3): mov %rcx,%rdx
4f3a(9): mov $0x28,%rcx
4f43(5): mov %rcx,0x38(%rsp)
4f48(2): xor %ecx,%ecx
4f4a(3): cmp $0xa,%esi
4f4d(2): jz 0x63(%rip)
4f4f(3): mov %esi,(%rsp)
4f52(3): mov %rsp,%rcx
4f55(3): mov %rax,%rsi
4f58(9): mov $0x0,0x4(%rsp)
4f61(9): mov $0x0,0xc(%rsp)
4f6a(9): mov $0x0,0x14(%rsp)
4f73(9): mov $0x0,0x1c(%rsp)
4f7c(9): mov $0x0,0x24(%rsp)
4f85(9): mov $0x0,0x2c(%rsp)
4f8e(8): mov $0x0,0x34(%rsp)
4f96(5): call 0xfffff9ba(%rip)
4f9b(5): mov 0x38(%rsp),%rdx
4fa0(9): xor $0x28,%rdx
4fa9(2): jnz 0xc(%rip)
4fab(4): add $0x48,%rsp
4faf(1): ret near (%rsp)
4fb0(5): call 0xffffc9f0(%rip)
4fb5(5): call 0xffffcb1b(%rip)

"quotearg_style" :
4fc0(3): mov %rsi,%rdx
4fc3(2): mov %edi,%esi
4fc5(2): xor %edi,%edi
4fc7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4fd0(3): mov %rdx,%rcx
4fd3(3): mov %rsi,%rdx
4fd6(2): mov %edi,%esi
4fd8(2): xor %edi,%edi
4fda(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4fe0(4): sub $0x48,%rsp
4fe4(2): mov %edx,%ecx
4fe6(9): mov $0x28,%rax
4fef(5): mov %rax,0x38(%rsp)
4ff4(2): xor %eax,%eax
4ff6(7): mov 0x208233(%rip),%rax
4ffd(3): mov %rsp,%r8
5000(3): and $0x1f,%ecx
5003(8): movdqa 0x2081f5(%rip),%xmm0
500b(5): mov %rax,0x30(%rsp)
5010(2): mov %edx,%eax
5012(4): movaps %xmm0,(%rsp)
5016(3): shr $0x5,%al
5019(3): movzx %al,%eax
501c(5): lea 0x8(%r8,%rax,4),%r9
5021(8): movdqa 0x2081e7(%rip),%xmm0
5029(5): movaps %xmm0,0x10(%rsp)
502e(8): movdqa 0x2081ea(%rip),%xmm0
5036(5): movaps %xmm0,0x20(%rsp)
503b(3): mov (%r9),%edx
503e(2): mov %edx,%eax
5040(2): shr %cl,%eax
5042(2): not %eax
5044(3): and $0x1,%eax
5047(2): shl/sal %cl,%eax
5049(3): mov %r8,%rcx
504c(2): xor %edx,%eax
504e(3): mov %rsi,%rdx
5051(3): mov %rdi,%rsi
5054(3): mov %eax,(%r9)
5057(2): xor %edi,%edi
5059(5): call 0xfffff8f7(%rip)
505e(5): mov 0x38(%rsp),%rsi
5063(9): xor $0x28,%rsi
506c(2): jnz 0x7(%rip)
506e(4): add $0x48,%rsp
5072(1): ret near (%rsp)
5073(5): call 0xffffca5d(%rip)

"quotearg_char" :
5080(4): movsx %sil,%edx
5084(7): mov $0xffffffff,%rsi
508b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5090(5): mov $0x3a,%edx
5095(7): mov $0xffffffff,%rsi
509c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
50b0(5): mov $0x3a,%edx
50b5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
50c0(4): sub $0x48,%rsp
50c4(3): mov %rdx,%rax
50c7(9): mov $0x28,%rdx
50d0(5): mov %rdx,0x38(%rsp)
50d5(2): xor %edx,%edx
50d7(3): cmp $0xa,%esi
50da(2): jz 0x6a(%rip)
50dc(3): mov %esi,(%rsp)
50df(3): mov %rsp,%rcx
50e2(7): mov $0xffffffff,%rdx
50e9(3): mov %rax,%rsi
50ec(9): mov $0x0,0x4(%rsp)
50f5(9): mov $0x4000000,0xc(%rsp)
50fe(9): mov $0x0,0x14(%rsp)
5107(9): mov $0x0,0x1c(%rsp)
5110(9): mov $0x0,0x24(%rsp)
5119(9): mov $0x0,0x2c(%rsp)
5122(8): mov $0x0,0x34(%rsp)
512a(5): call 0xfffff826(%rip)
512f(5): mov 0x38(%rsp),%rcx
5134(9): xor $0x28,%rcx
513d(2): jnz 0xc(%rip)
513f(4): add $0x48,%rsp
5143(1): ret near (%rsp)
5144(5): call 0xffffc85c(%rip)
5149(5): call 0xffffc987(%rip)

"quotearg_n_custom_mem" :
5150(4): sub $0x48,%rsp
5154(3): mov %rcx,%r9
5157(7): mov 0x2080d2(%rip),%rcx
515e(8): movdqa 0x20809a(%rip),%xmm0
5166(9): mov $0x28,%rax
516f(5): mov %rax,0x38(%rsp)
5174(2): xor %eax,%eax
5176(4): movaps %xmm0,(%rsp)
517a(3): test %rsi,%rsi
517d(5): mov %rcx,0x30(%rsp)
5182(7): mov $0xa,(%rsp)
5189(8): movdqa 0x20807f(%rip),%xmm0
5191(5): movaps %xmm0,0x10(%rsp)
5196(8): movdqa 0x208082(%rip),%xmm0
519e(5): movaps %xmm0,0x20(%rsp)
51a3(2): jz 0x34(%rip)
51a5(3): test %rdx,%rdx
51a8(2): jz 0x2f(%rip)
51aa(5): mov %rsi,0x28(%rsp)
51af(5): mov %rdx,0x30(%rsp)
51b4(3): mov %rsp,%rcx
51b7(3): mov %r8,%rdx
51ba(3): mov %r9,%rsi
51bd(5): call 0xfffff793(%rip)
51c2(5): mov 0x38(%rsp),%rdi
51c7(9): xor $0x28,%rdi
51d0(2): jnz 0xc(%rip)
51d2(4): add $0x48,%rsp
51d6(1): ret near (%rsp)
51d7(5): call 0xffffc7c9(%rip)
51dc(5): call 0xffffc8f4(%rip)

"quotearg_n_custom" :
51f0(7): mov $0xffffffff,%r8
51f7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5200(3): mov %rdx,%rcx
5203(7): mov $0xffffffff,%r8
520a(3): mov %rsi,%rdx
520d(3): mov %rdi,%rsi
5210(2): xor %edi,%edi
5212(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5220(3): mov %rcx,%r8
5223(3): mov %rdx,%rcx
5226(3): mov %rsi,%rdx
5229(3): mov %rdi,%rsi
522c(2): xor %edi,%edi
522e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5240(7): lea 0x207dd9(%rip),%rcx
5247(5): jmp 0xfffff709(%rip)

"quote_mem" :
5250(7): lea 0x207dc9(%rip),%rcx
5257(3): mov %rsi,%rdx
525a(3): mov %rdi,%rsi
525d(2): xor %edi,%edi
525f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5270(7): lea 0x207da9(%rip),%rcx
5277(7): mov $0xffffffff,%rdx
527e(5): jmp 0xfffff6d2(%rip)

"quote" :
5290(7): lea 0x207d89(%rip),%rcx
5297(3): mov %rdi,%rsi
529a(7): mov $0xffffffff,%rdx
52a1(2): xor %edi,%edi
52a3(5): jmp 0xfffff6ad(%rip)

"randint_new" :
52b0(1): push %rbx
52b1(3): mov %rdi,%rbx
52b4(5): mov $0x18,%edi
52b9(5): call 0x18c7(%rip)
52be(3): mov %rbx,(%rax)
52c1(8): mov $0x0,0x10(%rax)
52c9(8): mov $0x0,0x8(%rax)
52d1(1): pop %rbx
52d2(1): ret near (%rsp)

"randint_all_new" :
52e0(1): push %rbx
52e1(5): call 0x5ef(%rip)
52e6(3): test %rax,%rax
52e9(2): jz 0x27(%rip)
52eb(3): mov %rax,%rbx
52ee(5): mov $0x18,%edi
52f3(5): call 0x188d(%rip)
52f8(3): mov %rbx,(%rax)
52fb(8): mov $0x0,0x10(%rax)
5303(8): mov $0x0,0x8(%rax)
530b(1): pop %rbx
530c(1): ret near (%rsp)
530d(3): nop (%rax)
5310(2): xor %eax,%eax
5312(1): pop %rbx
5313(1): ret near (%rsp)

"randint_get_source" :
5320(3): mov (%rdi),%rax
5323(1): ret near (%rsp)

"randint_genmax" :
5330(2): push %r15
5332(2): push %r14
5334(4): lea 0x1(%rsi),%r15
5338(2): push %r13
533a(2): push %r12
533c(3): mov %rdi,%r13
533f(1): push %rbp
5340(1): push %rbx
5341(3): mov %rsi,%r14
5344(4): sub $0x28,%rsp
5348(4): mov 0x8(%rdi),%rbp
534c(4): mov 0x10(%rdi),%rbx
5350(9): mov $0x28,%rax
5359(5): mov %rax,0x18(%rsp)
535e(2): xor %eax,%eax
5360(3): mov (%rdi),%rax
5363(5): lea 0x10(%rsp),%r12
5368(5): mov %rax,0x8(%rsp)
536d(2): jmp 0x38(%rip)
536f(1): nop 
5370(3): cmp %r14,%rbx
5373(6): jz 0x8c(%rip)
5379(3): mov %rbx,%rax
537c(2): xor %edx,%edx
537e(3): sub %r14,%rax
5381(3): div %r15,%rax
5384(3): sub %rdx,%rbx
5387(3): mov %rdx,%rdi
538a(3): mov %rax,%rsi
538d(2): xor %edx,%edx
538f(3): mov %rbp,%rax
5392(3): div %r15,%rax
5395(3): cmp %rbx,%rbp
5398(6): jbe 0xa0(%rip)
539e(4): lea 0xffffffff(%rdi),%rbx
53a2(3): mov %rdx,%rbp
53a5(3): cmp %r14,%rbx
53a8(2): jnb 0xffffffc8(%rip)
53aa(3): mov %rbx,%rax
53ad(2): xor %edx,%edx
53af(1): nop 
53b0(4): shl/sal $0x8,%rax
53b4(4): add $0x1,%rdx
53b8(6): add $0xff,%rax
53be(3): cmp %rax,%r14
53c1(2): jnbe 0xffffffef(%rip)
53c3(5): mov 0x8(%rsp),%rdi
53c8(3): mov %r12,%rsi
53cb(5): call 0x855(%rip)
53d0(3): mov %r12,%rax
53d3(5): nop 0x0(%rax,%rax,1)
53d8(3): movzx (%rax),%edx
53db(4): shl/sal $0x8,%rbx
53df(4): shl/sal $0x8,%rbp
53e3(7): add $0xff,%rbx
53ea(4): add $0x1,%rax
53ee(3): add %rdx,%rbp
53f1(3): cmp %rbx,%r14
53f4(2): jnbe 0xffffffe4(%rip)
53f6(3): cmp %r14,%rbx
53f9(6): jnz 0xffffff80(%rip)
53ff(8): mov $0x0,0x10(%r13)
5407(8): mov $0x0,0x8(%r13)
540f(5): mov 0x18(%rsp),%rcx
5414(9): xor $0x28,%rcx
541d(3): mov %rbp,%rax
5420(2): jnz 0x25(%rip)
5422(4): add $0x28,%rsp
5426(1): pop %rbx
5427(1): pop %rbp
5428(2): pop %r12
542a(2): pop %r13
542c(2): pop %r14
542e(2): pop %r15
5430(1): ret near (%rsp)
5431(7): nop 0x0(%rax)
5438(4): mov %rax,0x8(%r13)
543c(4): mov %rsi,0x10(%r13)
5440(3): mov %rdx,%rbp
5443(2): jmp 0xffffffcc(%rip)
5445(5): call 0xffffc68b(%rip)

"randint_free" :
5450(1): push %rbx
5451(7): mov $0xffffffff,%rdx
5458(3): mov %rdi,%rbx
545b(5): mov $0x18,%esi
5460(5): call 0xffffc8a0(%rip)
5465(3): mov %rbx,%rdi
5468(1): pop %rbx
5469(5): jmp 0xffffc967(%rip)

"randint_all_free" :
5470(2): push %r13
5472(2): push %r12
5474(1): push %rbp
5475(1): push %rbx
5476(3): mov %rdi,%rbx
5479(4): sub $0x8,%rsp
547d(3): mov (%rdi),%rdi
5480(5): call 0x940(%rip)
5485(3): mov %eax,%r12d
5488(5): call 0xffffc528(%rip)
548d(3): mov (%rax),%r13d
5490(3): mov %rbx,%rdi
5493(7): mov $0xffffffff,%rdx
549a(5): mov $0x18,%esi
549f(3): mov %rax,%rbp
54a2(5): call 0xffffc85e(%rip)
54a7(3): mov %rbx,%rdi
54aa(5): call 0xffffc926(%rip)
54af(4): mov %r13d,0x0(%rbp)
54b3(4): add $0x8,%rsp
54b7(3): mov %r12d,%eax
54ba(1): pop %rbx
54bb(1): pop %rbp
54bc(2): pop %r12
54be(2): pop %r13
54c0(1): ret near (%rsp)

"sparse_hash_" :
54d0(3): mov (%rdi),%rax
54d3(2): xor %edx,%edx
54d5(3): div %rsi,%rax
54d8(3): mov %rdx,%rax
54db(1): ret near (%rsp)

"sparse_cmp_" :
54e0(3): mov (%rsi),%rax
54e3(3): cmp %rax,(%rdi)
54e6(3): setz %al
54e9(1): ret near (%rsp)

"randperm_bound" :
54f0(3): mov %rsi,%rax
54f3(4): sub $0x1,%rax
54f7(2): jz 0x1e(%rip)
54f9(2): xor %esi,%esi
54fb(5): nop 0x0(%rax,%rax,1)
5500(4): add $0x1,%rsi
5504(3): shr $0x1,%rax
5507(2): jnz 0xfffffff9(%rip)
5509(4): imul %rsi,%rdi
550d(4): lea 0x7(%rdi),%rax
5511(4): shr $0x3,%rax
5515(2): REP ret near (%rsp)

"randperm_new" :
5520(2): push %r15
5522(2): push %r14
5524(2): push %r13
5526(2): push %r12
5528(1): push %rbp
5529(1): push %rbx
552a(4): sub $0x68,%rsp
552e(9): mov $0x28,%rax
5537(5): mov %rax,0x58(%rsp)
553c(2): xor %eax,%eax
553e(3): test %rsi,%rsi
5541(6): jz 0x2a7(%rip)
5547(4): cmp $0x1,%rsi
554b(3): mov %rdi,%r13
554e(3): mov %rsi,%r12
5551(3): mov %rdx,%rbp
5554(2): jnz 0x4c(%rip)
5556(5): mov $0x8,%edi
555b(5): call 0x1625(%rip)
5560(4): lea 0xffffffff(%rbp),%rsi
5564(3): mov %rax,%rbx
5567(3): mov %r13,%rdi
556a(5): call 0xfffffdc6(%rip)
556f(3): mov %rax,(%rbx)
5572(5): mov 0x58(%rsp),%rdx
5577(9): xor $0x28,%rdx
5580(3): mov %rbx,%rax
5583(6): jnz 0x2c4(%rip)
5589(4): add $0x68,%rsp
558d(1): pop %rbx
558e(1): pop %rbp
558f(2): pop %r12
5591(2): pop %r13
5593(2): pop %r14
5595(2): pop %r15
5597(1): ret near (%rsp)
5598(8): nop 0x0(%rax,%rax,1)
55a0(7): cmp $0x1ffff,%rdx
55a7(2): jbe 0x81(%rip)
55a9(3): mov %rdx,%rax
55ac(2): xor %edx,%edx
55ae(3): div %rsi,%rax
55b1(4): cmp $0x1f,%rax
55b5(2): jbe 0x73(%rip)
55b7(7): mov 0x207a02(%rip),%r8
55be(4): lea 0x0(%rsi,%rsi,1),%rdi
55c2(7): lea 0xffffff17(%rip),%rcx
55c9(7): lea 0xffffff00(%rip),%rdx
55d0(2): xor %esi,%esi
55d2(5): call 0x2d4e(%rip)
55d7(3): test %rax,%rax
55da(5): mov %rax,0x8(%rsp)
55df(6): jz 0x26d(%rip)
55e5(5): mov $0x8,%edx
55ea(2): xor %ecx,%ecx
55ec(3): mov %rdx,%rax
55ef(3): mul %rax,%r12,%rdx
55f2(6): jo 0x269(%rip)
55f8(3): test %rax,%rax
55fb(6): js 0x251(%rip)
5601(3): test %rcx,%rcx
5604(6): jnz 0x248(%rip)
560a(8): lea 0x0(,%r12,8),%rdi
5612(5): call 0x156e(%rip)
5617(8): mov $0x1,0x4(%rsp)
561f(3): mov %rax,%rbx
5622(2): jmp 0x64(%rip)
5624(4): nop 0x0(%rax)
5628(5): mov $0x8,%edx
562d(2): xor %ecx,%ecx
562f(3): mov %rdx,%rax
5632(3): mul %rax,%rbp,%rdx
5635(6): jo 0x230(%rip)
563b(3): test %rax,%rax
563e(6): js 0x20e(%rip)
5644(3): test %rcx,%rcx
5647(6): jnz 0x205(%rip)
564d(8): lea 0x0(,%rbp,8),%rdi
5655(5): call 0x152b(%rip)
565a(3): test %rbp,%rbp
565d(3): mov %rax,%rbx
5660(2): jz 0x15(%rip)
5662(2): xor %eax,%eax
5664(4): nop 0x0(%rax)
5668(4): mov %rax,0x0(%rbx,%rax,8)
566c(4): add $0x1,%rax
5670(3): cmp %rax,%rbp
5673(2): jnz 0xfffffff5(%rip)
5675(8): mov $0x0,0x4(%rsp)
567d(9): mov $0x0,0x8(%rsp)
5686(4): lea 0xffffffff(%rbp),%rax
568a(2): xor %ebp,%ebp
568c(5): mov %rax,0x10(%rsp)
5691(5): lea 0x40(%rsp),%rax
5696(5): mov %rax,0x20(%rsp)
569b(5): lea 0x30(%rsp),%rax
56a0(5): mov %rax,0x28(%rsp)
56a5(2): jmp 0x2a(%rip)
56a7(9): nop 0x0(%rax,%rax,1)
56b0(4): lea 0x0(%rbx,%r14,8),%rax
56b4(4): mov 0x0(%rbx,%rbp,8),%rsi
56b8(3): mov (%rax),%rcx
56bb(4): mov %rcx,0x0(%rbx,%rbp,8)
56bf(4): add $0x1,%rbp
56c3(3): mov %rsi,(%rax)
56c6(3): cmp %rbp,%r12
56c9(6): jbe 0xd0(%rip)
56cf(5): mov 0x10(%rsp),%rsi
56d4(3): mov %r13,%rdi
56d7(3): sub %rbp,%rsi
56da(5): call 0xfffffc56(%rip)
56df(4): mov 0x4(%rsp),%edx
56e3(4): lea 0x0(%rax,%rbp,1),%r14
56e7(2): test %edx,%edx
56e9(2): jz 0xffffffc7(%rip)
56eb(5): mov 0x20(%rsp),%rsi
56f0(5): mov 0x8(%rsp),%rdi
56f5(5): mov %rbp,0x40(%rsp)
56fa(9): mov $0x0,0x48(%rsp)
5703(5): call 0x347d(%rip)
5708(5): mov 0x28(%rsp),%rsi
570d(5): mov 0x8(%rsp),%rdi
5712(3): mov %rax,%r15
5715(5): mov %r14,0x30(%rsp)
571a(9): mov $0x0,0x38(%rsp)
5723(5): call 0x345d(%rip)
5728(3): test %r15,%r15
572b(3): mov %rax,%r9
572e(6): jz 0xe2(%rip)
5734(3): test %r9,%r9
5737(6): jz 0xb9(%rip)
573d(4): mov 0x8(%r9),%r14
5741(4): mov 0x8(%r15),%rax
5745(4): mov %r14,0x8(%r15)
5749(3): mov %r15,%rsi
574c(5): mov 0x8(%rsp),%r14
5751(5): mov %r9,0x18(%rsp)
5756(4): mov %rax,0x8(%r9)
575a(3): mov %r14,%rdi
575d(5): call 0x33c3(%rip)
5762(3): test %rax,%rax
5765(6): jz 0xe7(%rip)
576b(5): mov 0x18(%rsp),%r9
5770(3): mov %r14,%rdi
5773(3): mov %r9,%rsi
5776(5): call 0x33aa(%rip)
577b(3): test %rax,%rax
577e(6): jz 0xce(%rip)
5784(4): mov 0x8(%r15),%rax
5788(4): mov %rax,0x0(%rbx,%rbp,8)
578c(4): add $0x1,%rbp
5790(3): cmp %rbp,%r12
5793(6): jnbe 0xffffff3c(%rip)
5799(4): mov 0x4(%rsp),%eax
579d(2): test %eax,%eax
579f(6): jnz 0x99(%rip)
57a5(5): mov $0x8,%edx
57aa(2): xor %ecx,%ecx
57ac(3): mov %rdx,%rax
57af(3): mul %rax,%r12,%rdx
57b2(6): jo 0x9f(%rip)
57b8(3): test %rax,%rax
57bb(6): js 0x91(%rip)
57c1(3): test %rcx,%rcx
57c4(6): jnz 0x88(%rip)
57ca(8): lea 0x0(,%r12,8),%rsi
57d2(3): mov %rbx,%rdi
57d5(5): call 0x140b(%rip)
57da(3): mov %rax,%rbx
57dd(5): jmp 0xfffffd95(%rip)
57e2(6): nop 0x0(%rax,%rax,1)
57e8(2): xor %ebx,%ebx
57ea(5): jmp 0xfffffd88(%rip)
57ef(1): nop 
57f0(5): mov $0x10,%edi
57f5(5): call 0x138b(%rip)
57fa(3): mov %rax,%r9
57fd(4): mov %r14,0x8(%rax)
5801(3): mov %r14,(%rax)
5804(5): jmp 0xffffff3d(%rip)
5809(7): nop 0x0(%rax)
5810(5): mov $0x10,%edi
5815(5): mov %rax,0x18(%rsp)
581a(5): call 0x1366(%rip)
581f(5): mov 0x18(%rsp),%r9
5824(3): mov %rax,%r15
5827(4): mov %rbp,0x8(%rax)
582b(3): mov %rbp,(%rax)
582e(5): jmp 0xffffff06(%rip)
5833(5): nop 0x0(%rax,%rax,1)
5838(5): mov 0x8(%rsp),%rdi
583d(5): call 0x2d33(%rip)
5842(5): jmp 0xfffffd30(%rip)
5847(5): call 0xffffc289(%rip)
584c(5): call 0x1584(%rip)
5851(5): mov $0x1,%ecx
5856(5): jmp 0xffffff62(%rip)
585b(5): mov $0x1,%ecx
5860(5): jmp 0xfffffd98(%rip)
5865(5): mov $0x1,%ecx
586a(5): jmp 0xfffffdd1(%rip)

"randread_error" :
5870(1): push %rbp
5871(1): push %rbx
5872(4): sub $0x8,%rsp
5876(3): test %rdi,%rdi
5879(2): jz 0x3f(%rip)
587b(5): call 0xfffffa15(%rip)
5880(3): mov %rax,%rbp
5883(5): call 0xffffc12d(%rip)
5888(3): cmp $0x0,(%rax)
588b(3): mov %rax,%rbx
588e(5): mov $0x5,%edx
5893(2): jz 0x2a(%rip)
5895(7): lea 0x43fc(%rip),%rsi
589c(2): xor %edi,%edi
589e(5): call 0xffffc202(%rip)
58a3(6): mov 0x20776f(%rip),%edi
58a9(2): mov (%rbx),%esi
58ab(3): mov %rax,%rdx
58ae(3): mov %rbp,%rcx
58b1(2): xor %eax,%eax
58b3(5): call 0xffffc43d(%rip)
58b8(5): call 0xffffc0e8(%rip)
58bd(7): lea 0x43c4(%rip),%rsi
58c4(2): xor %edi,%edi
58c6(5): call 0xffffc1da(%rip)
58cb(2): jmp 0xffffffd8(%rip)

"randread_new" :
58d0(2): push %r15
58d2(2): push %r14
58d4(2): push %r13
58d6(2): push %r12
58d8(1): push %rbp
58d9(1): push %rbx
58da(4): sub $0x38,%rsp
58de(9): mov $0x28,%rax
58e7(5): mov %rax,0x28(%rsp)
58ec(2): xor %eax,%eax
58ee(3): test %rsi,%rsi
58f1(6): jz 0x127(%rip)
58f7(3): test %rdi,%rdi
58fa(3): mov %rdi,%r12
58fd(3): mov %rsi,%rbp
5900(2): jz 0x80(%rip)
5902(7): lea 0x43ab(%rip),%rsi
5909(5): call 0x20a7(%rip)
590e(3): test %rax,%rax
5911(3): mov %rax,%r13
5914(6): jz 0x204(%rip)
591a(5): mov $0x1038,%edi
591f(5): call 0x1261(%rip)
5924(3): mov %rax,%rbx
5927(3): mov %r13,(%rax)
592a(7): lea 0xffffff3f(%rip),%rax
5931(7): cmp $0x1000,%rbp
5938(5): mov $0x1000,%ecx
593d(4): lea 0x18(%rbx),%rsi
5941(4): cmovbe %rbp,%rcx
5945(4): mov %rax,0x8(%rbx)
5949(4): mov %r12,0x10(%rbx)
594d(2): xor %edx,%edx
594f(3): mov %r13,%rdi
5952(5): call 0xffffc38e(%rip)
5957(5): mov 0x28(%rsp),%rdx
595c(9): xor $0x28,%rdx
5965(3): mov %rbx,%rax
5968(6): jnz 0x1b7(%rip)
596e(4): add $0x38,%rsp
5972(1): pop %rbx
5973(1): pop %rbp
5974(2): pop %r12
5976(2): pop %r13
5978(2): pop %r14
597a(2): pop %r15
597c(1): ret near (%rsp)
597d(3): nop (%rax)
5980(5): mov $0x1038,%edi
5985(5): call 0x11fb(%rip)
598a(3): mov %rax,%rbx
598d(7): mov $0x0,(%rax)
5994(7): lea 0xfffffed5(%rip),%rax
599b(7): lea 0x4305(%rip),%rdi
59a2(2): xor %esi,%esi
59a4(8): mov $0x0,0x10(%rbx)
59ac(4): mov %rax,0x8(%rbx)
59b0(8): mov $0x0,0x18(%rbx)
59b8(2): xor %eax,%eax
59ba(5): call 0xffffc356(%rip)
59bf(2): test %eax,%eax
59c1(4): lea 0x20(%rbx),%r13
59c5(3): mov %eax,%r15d
59c8(2): js 0x80(%rip)
59ca(7): cmp $0x800,%rbp
59d1(3): mov %rbp,%rdx
59d4(6): mov $0x800,%r14d
59da(4): cmovnbe %r14,%rdx
59de(5): mov $0x1018,%ecx
59e3(3): mov %r13,%rsi
59e6(2): mov %eax,%edi
59e8(5): call 0xffffc018(%rip)
59ed(3): mov %r15d,%edi
59f0(3): mov %rax,%rbp
59f3(5): call 0xffffc1ad(%rip)
59f8(7): cmp $0x7ff,%rbp
59ff(6): jle 0x125(%rip)
5a05(3): mov %r13,%rdi
5a08(5): call 0x698(%rip)
5a0d(5): jmp 0xffffff4a(%rip)
5a12(6): nop 0x0(%rax,%rax,1)
5a18(5): mov $0x1038,%edi
5a1d(5): call 0x1163(%rip)
5a22(3): mov %rax,%rbx
5a25(7): mov $0x0,(%rax)
5a2c(7): lea 0xfffffe3d(%rip),%rax
5a33(8): mov $0x0,0x10(%rbx)
5a3b(4): mov %rax,0x8(%rbx)
5a3f(5): jmp 0xffffff18(%rip)
5a44(4): nop 0x0(%rax)
5a48(5): lea 0x10(%rsp),%r12
5a4d(2): xor %esi,%esi
5a4f(6): mov $0x18,%r14d
5a55(3): mov %r12,%rdi
5a58(5): call 0xffffc0f8(%rip)
5a5d(6): movdqa 0x10(%rsp),%xmm0
5a63(4): movups %xmm0,0x20(%rbx)
5a67(5): call 0xffffbfd9(%rip)
5a6c(3): mov %eax,0x30(%rbx)
5a6f(4): mov %eax,0x10(%rsp)
5a73(5): call 0xffffc2ed(%rip)
5a78(4): mov %eax,0x10(%rsp)
5a7c(3): mov %eax,0x34(%rbx)
5a7f(5): mov $0x800,%ebp
5a84(5): mov $0x4,%eax
5a89(3): sub %r14,%rbp
5a8c(4): cmp $0x4,%rbp
5a90(4): cmovnbe %rax,%rbp
5a94(5): call 0xffffc04c(%rip)
5a99(2): test %ebp,%ebp
5a9b(4): mov %eax,0x10(%rsp)
5a9f(5): lea 0x0(%r13,%r14,1),%rcx
5aa4(2): mov %ebp,%esi
5aa6(2): jz 0x16(%rip)
5aa8(2): xor %eax,%eax
5aaa(2): mov %eax,%edx
5aac(3): add $0x1,%eax
5aaf(5): movzx 0x0(%r12,%rdx,1),%edi
5ab4(2): cmp %esi,%eax
5ab6(4): mov %dil,0x0(%rcx,%rdx,1)
5aba(2): jb 0xfffffff0(%rip)
5abc(3): add %r14,%rbp
5abf(7): cmp $0x7ff,%rbp
5ac6(6): jnbe 0xffffff3f(%rip)
5acc(5): call 0xffffc164(%rip)
5ad1(4): mov %eax,0x10(%rsp)
5ad5(5): mov $0x800,%eax
5ada(5): mov $0x4,%edx
5adf(3): sub %rbp,%rax
5ae2(5): lea 0x0(%r13,%rbp,1),%rcx
5ae7(4): cmp $0x4,%rax
5aeb(4): cmovnbe %rdx,%rax
5aef(2): test %eax,%eax
5af1(2): mov %eax,%esi
5af3(6): jz 0xffffff12(%rip)
5af9(2): xor %eax,%eax
5afb(2): mov %eax,%edx
5afd(3): add $0x1,%eax
5b00(5): movzx 0x0(%r12,%rdx,1),%edi
5b05(2): cmp %esi,%eax
5b07(4): mov %dil,0x0(%rcx,%rdx,1)
5b0b(2): jb 0xfffffff0(%rip)
5b0d(5): jmp 0xfffffef8(%rip)
5b12(6): nop 0x0(%rax,%rax,1)
5b18(2): xor %ebx,%ebx
5b1a(5): jmp 0xfffffe3d(%rip)
5b1f(5): call 0xffffbfb1(%rip)
5b24(3): test %rbp,%rbp
5b27(3): mov %r14,%r15
5b2a(5): mov $0x10,%eax
5b2f(4): cmovs %r12,%rbp
5b33(5): lea 0x10(%rsp),%r12
5b38(3): sub %rbp,%r15
5b3b(4): cmp $0x10,%r15
5b3f(3): mov %r12,%rdi
5b42(4): cmovnbe %rax,%r15
5b46(2): xor %esi,%esi
5b48(5): call 0xffffc008(%rip)
5b4d(5): lea 0x0(%r13,%rbp,1),%rax
5b52(3): add %r15,%rbp
5b55(3): mov %r15d,%ecx
5b58(7): cmp $0x7ff,%rbp
5b5f(3): mov %r12,%rsi
5b62(3): mov %rax,%rdi
5b65(2): REP movsb rsi(%ds,10),rdi(%es,10)
5b67(6): jnbe 0xfffffe9e(%rip)
5b6d(3): mov %r14,%r15
5b70(6): mov $0x4,%r8d
5b76(3): sub %rbp,%r15
5b79(5): mov %r8,0x8(%rsp)
5b7e(4): cmp $0x4,%r15
5b82(4): cmovnbe %r8,%r15
5b86(5): lea 0x0(%rbp,%r15,1),%rdx
5b8b(3): add %r13,%rbp
5b8e(4): mov %rdx,(%rsp)
5b92(5): call 0xffffbeae(%rip)
5b97(4): mov (%rsp),%rdx
5b9b(4): mov %eax,0x10(%rsp)
5b9f(3): mov %r15d,%ecx
5ba2(3): mov %rbp,%rdi
5ba5(3): mov %r12,%rsi
5ba8(5): mov 0x8(%rsp),%r8
5bad(2): REP movsb rsi(%ds,10),rdi(%es,10)
5baf(7): cmp $0x7ff,%rdx
5bb6(6): jnle 0xfffffe4f(%rip)
5bbc(3): sub %rdx,%r14
5bbf(4): cmp $0x4,%r14
5bc3(4): cmovnbe %r8,%r14
5bc7(5): call 0xffffc199(%rip)
5bcc(4): mov (%rsp),%rdx
5bd0(4): mov %eax,0x10(%rsp)
5bd4(3): mov %r14d,%ecx
5bd7(3): mov %r12,%rsi
5bda(5): lea 0x0(%r13,%rdx,1),%rax
5bdf(3): add %rdx,%r14
5be2(7): cmp $0x7ff,%r14
5be9(3): mov %rax,%rdi
5bec(2): REP movsb rsi(%ds,10),rdi(%es,10)
5bee(6): jnbe 0xfffffe17(%rip)
5bf4(5): jmp 0xfffffe8b(%rip)

"randread_set_handler" :
5c00(4): mov %rsi,0x8(%rdi)
5c04(1): ret near (%rsp)

"randread_set_handler_arg" :
5c10(4): mov %rsi,0x10(%rdi)
5c14(1): ret near (%rsp)

"randread" :
5c20(2): push %r15
5c22(2): push %r14
5c24(2): push %r13
5c26(2): push %r12
5c28(3): mov %rdi,%r12
5c2b(1): push %rbp
5c2c(1): push %rbx
5c2d(3): mov %rdx,%rbp
5c30(3): mov %rsi,%rbx
5c33(4): sub $0x18,%rsp
5c37(3): mov (%rdi),%rcx
5c3a(3): test %rcx,%rcx
5c3d(5): mov %rcx,0x8(%rsp)
5c42(2): jz 0x66(%rip)
5c44(5): call 0xffffbd6c(%rip)
5c49(5): mov 0x8(%rsp),%rcx
5c4e(3): mov %rax,%r13
5c51(2): jmp 0x25(%rip)
5c53(5): nop 0x0(%rax,%rax,1)
5c58(4): mov (%r12),%rax
5c5c(5): mov 0x10(%r12),%rdi
5c61(2): mov (%rax),%eax
5c63(3): and $0x20,%eax
5c66(3): cmovne %edx,%eax
5c69(4): mov %eax,0x0(%r13)
5c6d(5): call 0x8(%r12)
5c72(4): mov (%r12),%rcx
5c76(3): mov %rbp,%rdx
5c79(3): mov %rbx,%rdi
5c7c(5): mov $0x1,%esi
5c81(5): call 0xffffbdcf(%rip)
5c86(3): add %rax,%rbx
5c89(3): sub %rax,%rbp
5c8c(4): mov 0x0(%r13),%edx
5c90(2): jnz 0xffffffc8(%rip)
5c92(4): add $0x18,%rsp
5c96(1): pop %rbx
5c97(1): pop %rbp
5c98(2): pop %r12
5c9a(2): pop %r13
5c9c(2): pop %r14
5c9e(2): pop %r15
5ca0(1): ret near (%rsp)
5ca1(7): nop 0x0(%rax)
5ca8(4): mov 0x18(%rdi),%r14
5cac(7): lea 0x838(%rdi),%rax
5cb3(4): lea 0x20(%rdi),%r13
5cb7(5): mov %rax,0x8(%rsp)
5cbc(3): cmp %r14,%rdx
5cbf(6): jbe 0xe3(%rip)
5cc5(5): mov $0x800,%esi
5cca(3): mov %rbx,%rdi
5ccd(3): mov %r14,%rdx
5cd0(3): sub %r14,%rsi
5cd3(5): add 0x8(%rsp),%rsi
5cd8(3): add %r14,%rbx
5cdb(3): sub %r14,%rbp
5cde(5): call 0xffffbf32(%rip)
5ce3(3): test $0x7,%bl
5ce6(2): jnz 0x6a(%rip)
5ce8(7): cmp $0x7ff,%rbp
5cef(6): jbe 0xa4(%rip)
5cf5(7): lea 0xfffff800(%rbp),%r15
5cfc(3): mov %r15,%r14
5cff(7): and $0x7ff,%r14d
5d06(2): jmp 0x16(%rip)
5d08(8): nop 0x0(%rax,%rax,1)
5d10(3): cmp %r14,%r15
5d13(2): jz 0x3d(%rip)
5d15(7): sub $0x800,%r15
5d1c(3): mov %rbx,%rsi
5d1f(3): mov %r13,%rdi
5d22(7): add $0x800,%rbx
5d29(5): call 0xe7(%rip)
5d2e(3): test %r15,%r15
5d31(3): mov %r15,%rbp
5d34(2): jnz 0xffffffdc(%rip)
5d36(9): mov $0x0,0x18(%r12)
5d3f(4): add $0x18,%rsp
5d43(1): pop %rbx
5d44(1): pop %rbp
5d45(2): pop %r12
5d47(2): pop %r13
5d49(2): pop %r14
5d4b(2): pop %r15
5d4d(1): ret near (%rsp)
5d4e(2): nop 
5d50(5): mov 0x8(%rsp),%rsi
5d55(3): mov %r13,%rdi
5d58(6): mov $0x800,%r14d
5d5e(5): call 0xb2(%rip)
5d63(7): cmp $0x800,%rbp
5d6a(6): jnbe 0xffffff5b(%rip)
5d70(6): mov $0x800,%r14d
5d76(5): mov 0x8(%rsp),%rsi
5d7b(3): mov %rbp,%rdx
5d7e(3): mov %rbx,%rdi
5d81(3): sub %rbp,%r14
5d84(5): call 0xffffbe8c(%rip)
5d89(5): mov %r14,0x18(%r12)
5d8e(5): jmp 0xffffff04(%rip)
5d93(5): mov 0x8(%rsp),%rsi
5d98(3): mov %r13,%rdi
5d9b(5): call 0x75(%rip)
5da0(2): jmp 0xffffffd0(%rip)
5da2(3): mov %rax,%r15
5da5(3): sub %r14,%r15
5da8(7): lea 0x800(%r15),%rax
5daf(5): mov %rax,0x8(%rsp)
5db4(2): jmp 0xffffffc2(%rip)

"randread_free" :
5dc0(1): push %rbp
5dc1(1): push %rbx
5dc2(7): mov $0xffffffff,%rdx
5dc9(3): mov %rdi,%rbx
5dcc(5): mov $0x1038,%esi
5dd1(4): sub $0x8,%rsp
5dd5(3): mov (%rdi),%rbp
5dd8(5): call 0xffffbf28(%rip)
5ddd(3): mov %rbx,%rdi
5de0(5): call 0xffffbff0(%rip)
5de5(3): test %rbp,%rbp
5de8(2): jz 0x18(%rip)
5dea(4): add $0x8,%rsp
5dee(3): mov %rbp,%rdi
5df1(1): pop %rbx
5df2(1): pop %rbp
5df3(5): jmp 0x198d(%rip)
5df8(8): nop 0x0(%rax,%rax,1)
5e00(4): add $0x8,%rsp
5e04(2): xor %eax,%eax
5e06(1): pop %rbx
5e07(1): pop %rbp
5e08(1): ret near (%rsp)

"isaac_refill" :
5e10(7): mov 0x810(%rdi),%rax
5e17(7): mov 0x800(%rdi),%rdx
5e1e(7): lea 0x400(%rdi),%r9
5e25(4): lea 0x1(%rax),%rcx
5e29(3): mov %rdi,%rax
5e2c(7): mov %rcx,0x810(%rdi)
5e33(7): add 0x808(%rdi),%rcx
5e3a(6): nop 0x0(%rax,%rax,1)
5e40(3): mov %rdx,%r8
5e43(4): shl/sal $0x15,%r8
5e47(3): xor %r8,%rdx
5e4a(3): mov (%rax),%r8
5e4d(3): not %rdx
5e50(7): add 0x400(%rax),%rdx
5e57(3): mov %r8,%r10
5e5a(7): and $0x7f8,%r10d
5e61(4): mov 0x0(%rdi,%r10,1),%r11
5e65(3): mov %rdx,%r10
5e68(4): shr $0x5,%r10
5e6c(3): add %rdx,%r11
5e6f(3): xor %r10,%rdx
5e72(3): add %r11,%rcx
5e75(3): mov %rcx,(%rax)
5e78(4): shr $0x8,%rcx
5e7c(6): and $0x7f8,%ecx
5e82(4): mov 0x0(%rdi,%rcx,1),%r11
5e86(3): add %r8,%r11
5e89(3): mov %r11,(%rsi)
5e8c(7): add 0x408(%rax),%rdx
5e93(4): mov 0x8(%rax),%rcx
5e97(3): mov %rdx,%r10
5e9a(3): mov %rcx,%rdx
5e9d(6): and $0x7f8,%edx
5ea3(4): mov 0x0(%rdi,%rdx,1),%r8
5ea7(3): mov %r10,%rdx
5eaa(4): shl/sal $0xc,%rdx
5eae(3): xor %r10,%rdx
5eb1(3): add %r10,%r8
5eb4(3): add %r11,%r8
5eb7(4): mov %r8,0x8(%rax)
5ebb(4): shr $0x8,%r8
5ebf(7): and $0x7f8,%r8d
5ec6(4): add 0x0(%rdi,%r8,1),%rcx
5eca(4): mov %rcx,0x8(%rsi)
5ece(4): mov 0x10(%rax),%r8
5ed2(3): mov %rcx,%r11
5ed5(7): add 0x410(%rax),%rdx
5edc(3): mov %r8,%rcx
5edf(6): and $0x7f8,%ecx
5ee5(4): mov 0x0(%rdi,%rcx,1),%r10
5ee9(3): add %rdx,%r10
5eec(3): mov %r10,%rcx
5eef(3): add %r11,%rcx
5ef2(4): mov %rcx,0x10(%rax)
5ef6(4): shr $0x8,%rcx
5efa(6): and $0x7f8,%ecx
5f00(4): mov 0x0(%rdi,%rcx,1),%r10
5f04(3): mov %rdx,%rcx
5f07(4): shr $0x21,%rcx
5f0b(3): xor %rcx,%rdx
5f0e(3): add %r8,%r10
5f11(4): mov %r10,0x10(%rsi)
5f15(4): mov 0x18(%rax),%rcx
5f19(7): add 0x418(%rax),%rdx
5f20(3): mov %rcx,%r8
5f23(7): and $0x7f8,%r8d
5f2a(4): mov 0x0(%rdi,%r8,1),%r11
5f2e(3): add %rdx,%r11
5f31(3): mov %r11,%r8
5f34(3): add %r10,%r8
5f37(4): add $0x20,%rax
5f3b(4): add $0x20,%rsi
5f3f(4): mov %r8,0xfffffff8(%rax)
5f43(4): shr $0x8,%r8
5f47(7): and $0x7f8,%r8d
5f4e(4): add 0x0(%rdi,%r8,1),%rcx
5f52(4): mov %rcx,0xfffffff8(%rsi)
5f56(3): cmp %r9,%rax
5f59(6): jb 0xfffffee7(%rip)
5f5f(7): lea 0x800(%rdi),%r9
5f66(a): nop 0x0(%rax,%rax,1)
5f70(3): mov %rdx,%r8
5f73(4): shl/sal $0x15,%r8
5f77(3): xor %r8,%rdx
5f7a(3): mov (%rax),%r8
5f7d(3): not %rdx
5f80(7): add 0xfffffc00(%rax),%rdx
5f87(3): mov %r8,%r10
5f8a(7): and $0x7f8,%r10d
5f91(4): mov 0x0(%rdi,%r10,1),%r11
5f95(3): mov %rdx,%r10
5f98(4): shr $0x5,%r10
5f9c(3): add %rdx,%r11
5f9f(3): xor %r10,%rdx
5fa2(3): add %r11,%rcx
5fa5(3): mov %rcx,(%rax)
5fa8(4): shr $0x8,%rcx
5fac(6): and $0x7f8,%ecx
5fb2(4): mov 0x0(%rdi,%rcx,1),%r11
5fb6(3): add %r8,%r11
5fb9(3): mov %r11,(%rsi)
5fbc(7): add 0xfffffc08(%rax),%rdx
5fc3(4): mov 0x8(%rax),%rcx
5fc7(3): mov %rdx,%r10
5fca(3): mov %rcx,%rdx
5fcd(6): and $0x7f8,%edx
5fd3(4): mov 0x0(%rdi,%rdx,1),%r8
5fd7(3): mov %r10,%rdx
5fda(4): shl/sal $0xc,%rdx
5fde(3): xor %r10,%rdx
5fe1(3): add %r10,%r8
5fe4(3): add %r11,%r8
5fe7(4): mov %r8,0x8(%rax)
5feb(4): shr $0x8,%r8
5fef(7): and $0x7f8,%r8d
5ff6(4): add 0x0(%rdi,%r8,1),%rcx
5ffa(4): mov %rcx,0x8(%rsi)
5ffe(4): mov 0x10(%rax),%r8
6002(3): mov %rcx,%r11
6005(7): add 0xfffffc10(%rax),%rdx
600c(3): mov %r8,%rcx
600f(6): and $0x7f8,%ecx
6015(4): mov 0x0(%rdi,%rcx,1),%r10
6019(3): add %rdx,%r10
601c(3): mov %r10,%rcx
601f(3): add %r11,%rcx
6022(4): mov %rcx,0x10(%rax)
6026(4): shr $0x8,%rcx
602a(6): and $0x7f8,%ecx
6030(4): mov 0x0(%rdi,%rcx,1),%r10
6034(3): mov %rdx,%rcx
6037(4): shr $0x21,%rcx
603b(3): xor %rcx,%rdx
603e(3): add %r8,%r10
6041(4): mov %r10,0x10(%rsi)
6045(4): mov 0x18(%rax),%rcx
6049(7): add 0xfffffc18(%rax),%rdx
6050(3): mov %rcx,%r8
6053(7): and $0x7f8,%r8d
605a(4): mov 0x0(%rdi,%r8,1),%r11
605e(3): add %rdx,%r11
6061(3): mov %r11,%r8
6064(3): add %r10,%r8
6067(4): add $0x20,%rax
606b(4): add $0x20,%rsi
606f(4): mov %r8,0xfffffff8(%rax)
6073(4): shr $0x8,%r8
6077(7): and $0x7f8,%r8d
607e(4): add 0x0(%rdi,%r8,1),%rcx
6082(4): mov %rcx,0xfffffff8(%rsi)
6086(3): cmp %r9,%rax
6089(6): jb 0xfffffee7(%rip)
608f(7): mov %rdx,0x800(%rdi)
6096(7): mov %rcx,0x808(%rdi)
609d(1): ret near (%rsp)

"isaac_seed" :
60a0(2): push %r13
60a2(2): push %r12
60a4(7): lea 0x800(%rdi),%r12
60ab(1): push %rbp
60ac(3): mov %rdi,%rdx
60af(1): push %rbx
60b0(3): mov %rdi,%rax
60b3(a): mov $0x-7424904924229222229,%rcx
60bd(a): mov $0x-5865837416287532563,%r10
60c7(a): mov $0x5259722845879046933,%rbp
60d1(a): mov $0x-9011610652101975858,%rsi
60db(a): mov $0x-5576812576440232668,%r8
60e5(a): mov $0x-8354558816804203872,%rbx
60ef(a): mov $0x-5046086420515862430,%r11
60f9(a): mov $0x7240739780546808700,%r9
6103(5): nop 0x0(%rax,%rax,1)
6108(4): add 0x20(%rax),%rsi
610c(4): add 0x38(%rax),%rcx
6110(3): mov (%rax),%r13
6113(4): add 0x28(%rax),%rbp
6117(4): add 0x30(%rax),%r10
611b(3): sub %rsi,%r13
611e(3): add %r13,%r9
6121(3): mov %rcx,%r13
6124(4): shr $0x9,%r13
6128(3): add %r9,%rcx
612b(3): xor %r13,%rbp
612e(4): mov 0x8(%rax),%r13
6132(3): sub %rbp,%r13
6135(3): add %r13,%r11
6138(3): mov %r9,%r13
613b(4): shl/sal $0x9,%r13
613f(3): add %r11,%r9
6142(3): xor %r13,%r10
6145(4): mov 0x10(%rax),%r13
6149(3): sub %r10,%r13
614c(3): add %r13,%rbx
614f(3): mov %r11,%r13
6152(4): shr $0x17,%r13
6156(3): add %rbx,%r11
6159(3): xor %r13,%rcx
615c(4): mov 0x18(%rax),%r13
6160(3): sub %rcx,%r13
6163(3): add %r13,%r8
6166(3): mov %rbx,%r13
6169(4): shl/sal $0xf,%r13
616d(3): add %r8,%rbx
6170(3): xor %r13,%r9
6173(3): mov %r8,%r13
6176(3): sub %r9,%rsi
6179(4): shr $0xe,%r13
617d(3): mov %r9,(%rax)
6180(3): xor %r13,%r11
6183(3): mov %rsi,%r13
6186(3): add %rsi,%r8
6189(3): sub %r11,%rbp
618c(4): shl/sal $0x14,%r13
6190(4): mov %r11,0x8(%rax)
6194(3): xor %r13,%rbx
6197(4): lea 0x0(%rsi,%rbp,1),%r13
619b(3): mov %rbp,%rsi
619e(3): sub %rbx,%r10
61a1(4): shr $0x11,%rsi
61a5(4): mov %rbx,0x10(%rax)
61a9(3): xor %rsi,%r8
61ac(3): mov %r10,%rsi
61af(3): add %r10,%rbp
61b2(3): sub %r8,%rcx
61b5(4): shl/sal $0xe,%rsi
61b9(4): mov %r8,0x18(%rax)
61bd(3): xor %r13,%rsi
61c0(3): add %rcx,%r10
61c3(4): mov %rbp,0x28(%rax)
61c7(4): mov %rsi,0x20(%rax)
61cb(4): mov %r10,0x30(%rax)
61cf(4): add $0x40,%rax
61d3(4): mov %rcx,0xfffffff8(%rax)
61d7(3): cmp %rax,%r12
61da(6): jnz 0xffffff2e(%rip)
61e0(4): add 0x20(%rdx),%rsi
61e4(4): add 0x38(%rdx),%rcx
61e8(3): mov (%rdx),%r12
61eb(4): add 0x28(%rdx),%rbp
61ef(4): add 0x30(%rdx),%r10
61f3(3): sub %rsi,%r12
61f6(3): add %r12,%r9
61f9(3): mov %rcx,%r12
61fc(4): shr $0x9,%r12
6200(3): add %r9,%rcx
6203(3): xor %r12,%rbp
6206(4): mov 0x8(%rdx),%r12
620a(3): sub %rbp,%r12
620d(3): add %r12,%r11
6210(3): mov %r9,%r12
6213(4): shl/sal $0x9,%r12
6217(3): add %r11,%r9
621a(3): xor %r12,%r10
621d(4): mov 0x10(%rdx),%r12
6221(3): sub %r10,%r12
6224(3): add %r12,%rbx
6227(3): mov %r11,%r12
622a(4): shr $0x17,%r12
622e(3): add %rbx,%r11
6231(3): xor %r12,%rcx
6234(4): mov 0x18(%rdx),%r12
6238(3): sub %rcx,%r12
623b(3): add %r12,%r8
623e(3): mov %rbx,%r12
6241(4): shl/sal $0xf,%r12
6245(3): add %r8,%rbx
6248(3): xor %r12,%r9
624b(3): mov %r8,%r12
624e(3): sub %r9,%rsi
6251(4): shr $0xe,%r12
6255(3): mov %r9,(%rdx)
6258(3): xor %r12,%r11
625b(3): mov %rsi,%r12
625e(3): add %rsi,%r8
6261(3): sub %r11,%rbp
6264(4): shl/sal $0x14,%r12
6268(4): mov %r11,0x8(%rdx)
626c(3): xor %r12,%rbx
626f(4): lea 0x0(%rsi,%rbp,1),%r12
6273(3): mov %rbp,%rsi
6276(3): sub %rbx,%r10
6279(4): shr $0x11,%rsi
627d(4): mov %rbx,0x10(%rdx)
6281(3): xor %rsi,%r8
6284(3): mov %r10,%rsi
6287(3): add %r10,%rbp
628a(3): sub %r8,%rcx
628d(4): shl/sal $0xe,%rsi
6291(4): mov %r8,0x18(%rdx)
6295(3): xor %r12,%rsi
6298(3): add %rcx,%r10
629b(4): mov %rbp,0x28(%rdx)
629f(4): mov %rsi,0x20(%rdx)
62a3(4): mov %r10,0x30(%rdx)
62a7(4): add $0x40,%rdx
62ab(4): mov %rcx,0xfffffff8(%rdx)
62af(3): cmp %rdx,%rax
62b2(6): jnz 0xffffff2e(%rip)
62b8(1): pop %rbx
62b9(b): mov $0x0,0x810(%rdi)
62c4(b): mov $0x0,0x808(%rdi)
62cf(1): pop %rbp
62d0(b): mov $0x0,0x800(%rdi)
62db(2): pop %r12
62dd(2): pop %r13
62df(1): ret near (%rsp)

"fread_file" :
62e0(2): push %r15
62e2(2): push %r14
62e4(2): push %r13
62e6(2): push %r12
62e8(3): mov %rdi,%r13
62eb(1): push %rbp
62ec(1): push %rbx
62ed(7): sub $0xb8,%rsp
62f4(5): mov %rsi,0x8(%rsp)
62f9(9): mov $0x28,%rax
6302(8): mov %rax,0xa8(%rsp)
630a(2): xor %eax,%eax
630c(5): call 0xffffb914(%rip)
6311(5): lea 0x10(%rsp),%rdx
6316(2): mov %eax,%esi
6318(5): mov $0x1,%edi
631d(5): call 0xffffb953(%rip)
6322(2): test %eax,%eax
6324(2): js 0x16(%rip)
6326(4): mov 0x28(%rsp),%eax
632a(5): and $0xf000,%eax
632f(5): cmp $0x8000,%eax
6334(6): jz 0x154(%rip)
633a(5): mov $0x2000,%ebx
633f(3): mov %rbx,%rdi
6342(5): call 0xffffb8fe(%rip)
6347(3): test %rax,%rax
634a(3): mov %rax,%r12
634d(6): jz 0xa3(%rip)
6353(2): xor %ebp,%ebp
6355(7): mov $0xffffffff,%r15
635c(2): jmp 0x3e(%rip)
635e(2): nop 
6360(4): cmp $0xffffffff,%rbx
6364(6): jz 0xdc(%rip)
636a(3): mov %rbx,%rax
636d(3): mov %r12,%rdi
6370(3): shr $0x1,%rax
6373(3): mov %rax,%rdx
6376(3): add %rbx,%rax
6379(3): not %rdx
637c(3): cmp %rbx,%rdx
637f(4): cmovbe %r15,%rax
6383(3): mov %rax,%rsi
6386(3): mov %rax,%rbx
6389(5): call 0xffffb917(%rip)
638e(3): test %rax,%rax
6391(6): jz 0x8f(%rip)
6397(3): mov %rax,%r12
639a(3): mov %rbx,%r14
639d(4): lea 0x0(%r12,%rbp,1),%rdi
63a1(3): mov %r13,%rcx
63a4(3): sub %rbp,%r14
63a7(5): mov $0x1,%esi
63ac(3): mov %r14,%rdx
63af(5): call 0xffffb671(%rip)
63b4(3): add %rax,%rbp
63b7(3): cmp %rax,%r14
63ba(2): jz 0xffffffa6(%rip)
63bc(5): call 0xffffb5f4(%rip)
63c1(3): mov %r13,%rdi
63c4(3): mov %rax,%r14
63c7(3): mov (%rax),%r15d
63ca(5): call 0xffffb646(%rip)
63cf(2): test %eax,%eax
63d1(2): jnz 0x5a(%rip)
63d3(4): sub $0x1,%rbx
63d7(3): cmp %rbp,%rbx
63da(6): jnbe 0x86(%rip)
63e0(5): mov 0x8(%rsp),%rax
63e5(5): mov $0x0,0x0(%r12,%rbp,1)
63ea(3): mov %rbp,(%rax)
63ed(3): nop (%rax)
63f0(8): mov 0xa8(%rsp),%rcx
63f8(9): xor $0x28,%rcx
6401(3): mov %r12,%rax
6404(6): jnz 0xaf(%rip)
640a(7): add $0xb8,%rsp
6411(1): pop %rbx
6412(1): pop %rbp
6413(2): pop %r12
6415(2): pop %r13
6417(2): pop %r14
6419(2): pop %r15
641b(1): ret near (%rsp)
641c(4): nop 0x0(%rax)
6420(5): call 0xffffb590(%rip)
6425(3): mov (%rax),%r15d
6428(3): mov %rax,%r14
642b(3): mov %r12,%rdi
642e(3): xor %r12d,%r12d
6431(5): call 0xffffb99f(%rip)
6436(3): mov %r15d,(%r14)
6439(2): jmp 0xffffffb7(%rip)
643b(5): nop 0x0(%rax,%rax,1)
6440(5): call 0xffffb570(%rip)
6445(6): mov $0xc,%r15d
644b(3): mov %rax,%r14
644e(3): mov %r12,%rdi
6451(5): call 0xffffb97f(%rip)
6456(3): xor %r12d,%r12d
6459(3): mov %r15d,(%r14)
645c(2): jmp 0xffffff94(%rip)
645e(2): nop 
6460(4): lea 0x1(%rbp),%rsi
6464(3): mov %r12,%rdi
6467(5): call 0xffffb839(%rip)
646c(3): test %rax,%rax
646f(4): cmovne %rax,%r12
6473(5): mov 0x8(%rsp),%rax
6478(5): mov $0x0,0x0(%r12,%rbp,1)
647d(3): mov %rbp,(%rax)
6480(5): jmp 0xffffff70(%rip)
6485(3): nop (%rax)
6488(3): mov %r13,%rdi
648b(5): call 0xffffb555(%rip)
6490(3): test %rax,%rax
6493(6): js 0xfffffea7(%rip)
6499(5): mov 0x40(%rsp),%rbx
649e(3): cmp %rax,%rbx
64a1(6): jle 0xfffffe99(%rip)
64a7(3): sub %rax,%rbx
64aa(4): add $0x1,%rbx
64ae(5): jmp 0xfffffe91(%rip)
64b3(5): call 0xffffb61d(%rip)

"internal_read_file" :
64c0(2): push %r13
64c2(2): push %r12
64c4(1): push %rbp
64c5(1): push %rbx
64c6(3): mov %rsi,%rbp
64c9(3): mov %rdx,%rsi
64cc(4): sub $0x8,%rsp
64d0(5): call 0xffffb860(%rip)
64d5(3): test %rax,%rax
64d8(2): jz 0x58(%rip)
64da(3): mov %rbp,%rsi
64dd(3): mov %rax,%rdi
64e0(3): mov %rax,%rbx
64e3(5): call 0xfffffdfd(%rip)
64e8(3): mov %rax,%rbp
64eb(5): call 0xffffb4c5(%rip)
64f0(3): mov %rbx,%rdi
64f3(3): mov %rax,%r12
64f6(3): mov (%rax),%r13d
64f9(5): call 0x1287(%rip)
64fe(2): test %eax,%eax
6500(2): jnz 0x10(%rip)
6502(4): add $0x8,%rsp
6506(3): mov %rbp,%rax
6509(1): pop %rbx
650a(1): pop %rbp
650b(2): pop %r12
650d(2): pop %r13
650f(1): ret near (%rsp)
6510(3): test %rbp,%rbp
6513(2): jz 0xe(%rip)
6515(3): mov %rbp,%rdi
6518(4): mov (%r12),%r13d
651c(5): call 0xffffb8b4(%rip)
6521(4): mov %r13d,(%r12)
6525(2): xor %ebp,%ebp
6527(2): jmp 0xffffffdb(%rip)
6529(7): nop 0x0(%rax)
6530(2): xor %ebp,%ebp
6532(2): jmp 0xffffffd0(%rip)

"read_file" :
6540(7): lea 0x375e(%rip),%rdx
6547(5): jmp 0xffffff79(%rip)

"read_binary_file" :
6550(7): lea 0x375d(%rip),%rdx
6557(5): jmp 0xffffff69(%rip)

"version_etc_arn" :
6560(2): push %r15
6562(2): push %r14
6564(2): push %r13
6566(2): push %r12
6568(3): mov %r9,%r12
656b(1): push %rbp
656c(1): push %rbx
656d(3): mov %rdi,%rbp
6570(3): mov %r8,%rbx
6573(4): sub $0x28,%rsp
6577(3): test %rsi,%rsi
657a(6): jz 0x11e(%rip)
6580(3): mov %rdx,%r8
6583(7): lea 0x372d(%rip),%rdx
658a(3): mov %rcx,%r9
658d(2): xor %eax,%eax
658f(3): mov %rsi,%rcx
6592(5): mov $0x1,%esi
6597(5): call 0xffffb7f9(%rip)
659c(7): lea 0x3727(%rip),%rsi
65a3(2): xor %edi,%edi
65a5(5): mov $0x5,%edx
65aa(5): call 0xffffb4f6(%rip)
65af(7): lea 0x3a2a(%rip),%rdx
65b6(3): mov %rax,%rcx
65b9(6): mov $0x7e3,%r8d
65bf(5): mov $0x1,%esi
65c4(3): mov %rbp,%rdi
65c7(2): xor %eax,%eax
65c9(5): call 0xffffb7c7(%rip)
65ce(7): lea 0x377b(%rip),%rsi
65d5(2): xor %edi,%edi
65d7(5): mov $0x5,%edx
65dc(5): call 0xffffb4c4(%rip)
65e1(3): mov %rbp,%rsi
65e4(3): mov %rax,%rdi
65e7(5): call 0xffffb5f9(%rip)
65ec(4): cmp $0x9,%r12
65f0(6): jnbe 0x340(%rip)
65f6(7): lea 0x39af(%rip),%rdx
65fd(4): movsxd 0x0(%rdx,%r12,4),%rax
6601(3): add %rdx,%rax
6604(2): jmp %rax
6606(a): nop 0x0(%rax,%rax,1)
6610(4): mov 0x38(%rbx),%r9
6614(4): mov 0x10(%rbx),%rax
6618(7): lea 0x38a1(%rip),%rsi
661f(4): mov 0x8(%rbx),%r8
6623(5): mov $0x5,%edx
6628(2): xor %edi,%edi
662a(4): mov 0x30(%rbx),%r13
662e(4): mov 0x28(%rbx),%r12
6632(5): mov %r9,0x10(%rsp)
6637(4): mov 0x20(%rbx),%r15
663b(4): mov 0x18(%rbx),%r14
663f(4): mov %rax,(%rsp)
6643(5): mov %r8,0x8(%rsp)
6648(3): mov (%rbx),%rbx
664b(5): call 0xffffb455(%rip)
6650(4): sub $0x8,%rsp
6654(5): mov 0x18(%rsp),%r9
6659(3): mov %rax,%rdx
665c(3): mov %rbx,%rcx
665f(5): mov $0x1,%esi
6664(3): mov %rbp,%rdi
6667(2): xor %eax,%eax
6669(2): push %r9
666b(2): push %r13
666d(2): push %r12
666f(2): push %r15
6671(2): push %r14
6673(5): mov 0x30(%rsp),%r9
6678(5): mov 0x38(%rsp),%r8
667d(5): call 0xffffb713(%rip)
6682(4): add $0x30,%rsp
6686(4): add $0x28,%rsp
668a(1): pop %rbx
668b(1): pop %rbp
668c(2): pop %r12
668e(2): pop %r13
6690(2): pop %r14
6692(2): pop %r15
6694(1): ret near (%rsp)
6695(3): nop (%rax)
6698(3): mov %rcx,%r8
669b(3): mov %rdx,%rcx
669e(7): lea 0x361e(%rip),%rdx
66a5(5): mov $0x1,%esi
66aa(2): xor %eax,%eax
66ac(5): call 0xffffb6e4(%rip)
66b1(5): jmp 0xfffffeeb(%rip)
66b6(a): nop 0x0(%rax,%rax,1)
66c0(4): mov 0x40(%rbx),%r10
66c4(4): mov 0x38(%rbx),%r9
66c8(7): lea 0x3821(%rip),%rsi
66cf(4): mov 0x10(%rbx),%rax
66d3(4): mov 0x8(%rbx),%r8
66d7(5): mov $0x5,%edx
66dc(4): mov 0x30(%rbx),%r13
66e0(4): mov 0x28(%rbx),%r12
66e4(4): mov 0x20(%rbx),%r15
66e8(4): mov 0x18(%rbx),%r14
66ec(3): mov (%rbx),%rbx
66ef(5): mov %r10,0x18(%rsp)
66f4(5): mov %r9,0x10(%rsp)
66f9(4): mov %rax,(%rsp)
66fd(5): mov %r8,0x8(%rsp)
6702(2): xor %edi,%edi
6704(5): call 0xffffb39c(%rip)
6709(5): mov 0x18(%rsp),%r10
670e(2): push %r10
6710(5): jmp 0xffffff44(%rip)
6715(3): nop (%rax)
6718(3): mov (%rbx),%rbx
671b(7): lea 0x35ac(%rip),%rsi
6722(5): mov $0x5,%edx
6727(2): xor %edi,%edi
6729(5): call 0xffffb377(%rip)
672e(4): add $0x28,%rsp
6732(3): mov %rbx,%rcx
6735(3): mov %rbp,%rdi
6738(1): pop %rbx
6739(1): pop %rbp
673a(2): pop %r12
673c(2): pop %r13
673e(2): pop %r14
6740(2): pop %r15
6742(3): mov %rax,%rdx
6745(5): mov $0x1,%esi
674a(2): xor %eax,%eax
674c(5): jmp 0xffffb644(%rip)
6751(7): nop 0x0(%rax)
6758(4): mov 0x8(%rbx),%r12
675c(7): lea 0x357b(%rip),%rsi
6763(3): mov (%rbx),%rbx
6766(5): mov $0x5,%edx
676b(2): xor %edi,%edi
676d(5): call 0xffffb333(%rip)
6772(4): add $0x28,%rsp
6776(3): mov %r12,%r8
6779(3): mov %rbx,%rcx
677c(3): mov %rbp,%rdi
677f(3): mov %rax,%rdx
6782(5): mov $0x1,%esi
6787(1): pop %rbx
6788(1): pop %rbp
6789(2): pop %r12
678b(2): pop %r13
678d(2): pop %r14
678f(2): pop %r15
6791(2): xor %eax,%eax
6793(5): jmp 0xffffb5fd(%rip)
6798(8): nop 0x0(%rax,%rax,1)
67a0(4): mov 0x10(%rbx),%r13
67a4(4): mov 0x8(%rbx),%r12
67a8(7): lea 0x3546(%rip),%rsi
67af(3): mov (%rbx),%rbx
67b2(5): mov $0x5,%edx
67b7(2): xor %edi,%edi
67b9(5): call 0xffffb2e7(%rip)
67be(4): add $0x28,%rsp
67c2(3): mov %r13,%r9
67c5(3): mov %r12,%r8
67c8(3): mov %rbx,%rcx
67cb(3): mov %rbp,%rdi
67ce(3): mov %rax,%rdx
67d1(1): pop %rbx
67d2(1): pop %rbp
67d3(2): pop %r12
67d5(2): pop %r13
67d7(2): pop %r14
67d9(2): pop %r15
67db(5): mov $0x1,%esi
67e0(2): xor %eax,%eax
67e2(5): jmp 0xffffb5ae(%rip)
67e7(9): nop 0x0(%rax,%rax,1)
67f0(7): lea 0x3629(%rip),%rsi
67f7(5): mov $0x5,%edx
67fc(2): xor %edi,%edi
67fe(4): mov 0x18(%rbx),%r14
6802(4): mov 0x10(%rbx),%r13
6806(4): mov 0x8(%rbx),%r12
680a(3): mov (%rbx),%rbx
680d(5): call 0xffffb293(%rip)
6812(4): sub $0x8,%rsp
6816(2): push %r14
6818(3): mov %rax,%rdx
681b(3): mov %r13,%r9
681e(3): mov %r12,%r8
6821(3): mov %rbx,%rcx
6824(3): mov %rbp,%rdi
6827(5): mov $0x1,%esi
682c(2): xor %eax,%eax
682e(5): call 0xffffb562(%rip)
6833(1): pop %rax
6834(1): pop %rdx
6835(4): add $0x28,%rsp
6839(1): pop %rbx
683a(1): pop %rbp
683b(2): pop %r12
683d(2): pop %r13
683f(2): pop %r14
6841(2): pop %r15
6843(1): ret near (%rsp)
6844(4): nop 0x0(%rax)
6848(4): mov 0x20(%rbx),%r15
684c(7): lea 0x35ed(%rip),%rsi
6853(5): mov $0x5,%edx
6858(2): xor %edi,%edi
685a(4): mov 0x18(%rbx),%r14
685e(4): mov 0x10(%rbx),%r13
6862(4): mov 0x8(%rbx),%r12
6866(3): mov (%rbx),%rbx
6869(5): call 0xffffb237(%rip)
686e(2): push %r15
6870(2): jmp 0xffffffa6(%rip)
6872(6): nop 0x0(%rax,%rax,1)
6878(4): mov 0x8(%rbx),%r8
687c(4): mov 0x28(%rbx),%r12
6880(7): lea 0x35e1(%rip),%rsi
6887(4): mov 0x20(%rbx),%r15
688b(4): mov 0x18(%rbx),%r14
688f(5): mov $0x5,%edx
6894(4): mov 0x10(%rbx),%r13
6898(2): xor %edi,%edi
689a(3): mov (%rbx),%rbx
689d(4): mov %r8,(%rsp)
68a1(5): call 0xffffb1ff(%rip)
68a6(4): sub $0x8,%rsp
68aa(3): mov %r13,%r9
68ad(2): push %r12
68af(2): push %r15
68b1(2): push %r14
68b3(5): mov 0x20(%rsp),%r8
68b8(3): mov %rbx,%rcx
68bb(3): mov %rax,%rdx
68be(3): mov %rbp,%rdi
68c1(5): mov $0x1,%esi
68c6(2): xor %eax,%eax
68c8(5): call 0xffffb4c8(%rip)
68cd(4): add $0x20,%rsp
68d1(4): add $0x28,%rsp
68d5(1): pop %rbx
68d6(1): pop %rbp
68d7(2): pop %r12
68d9(2): pop %r13
68db(2): pop %r14
68dd(2): pop %r15
68df(1): ret near (%rsp)
68e0(4): mov 0x10(%rbx),%r9
68e4(4): mov 0x30(%rbx),%r13
68e8(7): lea 0x35a1(%rip),%rsi
68ef(4): mov 0x28(%rbx),%r12
68f3(4): mov 0x20(%rbx),%r15
68f7(5): mov $0x5,%edx
68fc(4): mov 0x18(%rbx),%r14
6900(4): mov 0x8(%rbx),%r8
6904(2): xor %edi,%edi
6906(5): mov %r9,0x8(%rsp)
690b(3): mov (%rbx),%rbx
690e(4): mov %r8,(%rsp)
6912(5): call 0xffffb18e(%rip)
6917(2): push %r13
6919(2): push %r12
691b(2): push %r15
691d(2): push %r14
691f(5): mov 0x28(%rsp),%r9
6924(2): jmp 0xffffff8f(%rip)
6926(a): nop 0x0(%rax,%rax,1)
6930(4): mov 0x40(%rbx),%r10
6934(4): mov 0x38(%rbx),%r9
6938(5): mov $0x5,%edx
693d(4): mov 0x10(%rbx),%rax
6941(4): mov 0x8(%rbx),%r8
6945(7): lea 0x35dc(%rip),%rsi
694c(4): mov 0x30(%rbx),%r13
6950(4): mov 0x28(%rbx),%r12
6954(4): mov 0x20(%rbx),%r15
6958(4): mov 0x18(%rbx),%r14
695c(5): mov %r10,0x18(%rsp)
6961(5): mov %r9,0x10(%rsp)
6966(4): mov %rax,(%rsp)
696a(5): mov %r8,0x8(%rsp)
696f(3): mov (%rbx),%rbx
6972(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
6980(3): xor %r9d,%r9d
6983(4): cmp $0x0,(%r8)
6987(2): jz 0x14(%rip)
6989(7): nop 0x0(%rax)
6990(4): add $0x1,%r9
6994(5): cmp $0x0,0x0(%r8,%r9,8)
6999(2): jnz 0xfffffff7(%rip)
699b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
69a0(4): sub $0x68,%rsp
69a4(3): mov %r8,%r10
69a7(3): xor %r9d,%r9d
69aa(9): mov $0x28,%rax
69b3(5): mov %rax,0x58(%rsp)
69b8(2): xor %eax,%eax
69ba(3): mov %rsp,%r8
69bd(3): nop (%rax)
69c0(3): mov (%r10),%eax
69c3(3): cmp $0x2f,%eax
69c6(2): jnbe 0x44(%rip)
69c8(3): mov %eax,%r11d
69cb(4): add 0x10(%r10),%r11
69cf(3): add $0x8,%eax
69d2(3): mov %eax,(%r10)
69d5(3): mov (%r11),%rax
69d8(3): test %rax,%rax
69db(4): mov %rax,0x0(%r8,%r9,8)
69df(2): jz 0xc(%rip)
69e1(4): add $0x1,%r9
69e5(4): cmp $0xa,%r9
69e9(2): jnz 0xffffffd7(%rip)
69eb(5): call 0xfffffb75(%rip)
69f0(5): mov 0x58(%rsp),%rax
69f5(9): xor $0x28,%rax
69fe(2): jnz 0x7(%rip)
6a00(4): add $0x68,%rsp
6a04(1): ret near (%rsp)
6a05(5): call 0xffffb0cb(%rip)
6a0a(4): mov 0x8(%r10),%r11
6a0e(4): lea 0x8(%r11),%rax
6a12(4): mov %rax,0x8(%r10)
6a16(2): jmp 0xffffffbf(%rip)

"version_etc" :
6a20(1): push %rbp
6a21(1): push %rbx
6a22(6): mov $0x20,%r10d
6a28(3): xor %r11d,%r11d
6a2b(7): sub $0xb8,%rsp
6a32(9): mov $0x28,%rax
6a3b(5): mov %rax,0x78(%rsp)
6a40(2): xor %eax,%eax
6a42(8): lea 0xd0(%rsp),%rax
6a4a(8): mov %r8,0xa0(%rsp)
6a52(8): lea 0xd0(%rsp),%rbx
6a5a(5): lea 0x20(%rsp),%r8
6a5f(8): mov %r9,0xa8(%rsp)
6a67(8): mov $0x20,0x8(%rsp)
6a6f(5): mov %rax,0x10(%rsp)
6a74(8): lea 0x80(%rsp),%rax
6a7c(3): xor %r9d,%r9d
6a7f(5): mov %rax,0x18(%rsp)
6a84(3): mov %rax,%rbp
6a87(9): nop 0x0(%rax,%rax,1)
6a90(4): cmp $0x2f,%r10d
6a94(2): jnbe 0x58(%rip)
6a96(3): mov %r10d,%eax
6a99(6): mov $0x1,%r11d
6a9f(4): add $0x8,%r10d
6aa3(3): add %rbp,%rax
6aa6(3): mov (%rax),%rax
6aa9(3): test %rax,%rax
6aac(4): mov %rax,0x0(%r8,%r9,8)
6ab0(2): jz 0xc(%rip)
6ab2(4): add $0x1,%r9
6ab6(4): cmp $0xa,%r9
6aba(2): jnz 0xffffffd6(%rip)
6abc(3): test %r11b,%r11b
6abf(2): jnz 0x26(%rip)
6ac1(5): call 0xfffffa9f(%rip)
6ac6(5): mov 0x78(%rsp),%rax
6acb(9): xor $0x28,%rax
6ad4(2): jnz 0xc(%rip)
6ad6(7): add $0xb8,%rsp
6add(1): pop %rbx
6ade(1): pop %rbp
6adf(1): ret near (%rsp)
6ae0(5): call 0xffffaff0(%rip)
6ae5(5): mov %r10d,0x8(%rsp)
6aea(2): jmp 0xffffffd7(%rip)
6aec(3): mov %rbx,%rax
6aef(4): add $0x8,%rbx
6af3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6b00(1): push %rbx
6b01(7): lea 0x3209(%rip),%rsi
6b08(5): mov $0x5,%edx
6b0d(2): xor %edi,%edi
6b0f(5): call 0xffffaf91(%rip)
6b14(7): lea 0x320b(%rip),%rdx
6b1b(3): mov %rax,%rsi
6b1e(5): mov $0x1,%edi
6b23(2): xor %eax,%eax
6b25(5): call 0xffffb1ab(%rip)
6b2a(7): lea 0x320b(%rip),%rsi
6b31(5): mov $0x5,%edx
6b36(2): xor %edi,%edi
6b38(5): call 0xffffaf68(%rip)
6b3d(7): lea 0x2b04(%rip),%rcx
6b44(7): lea 0x2634(%rip),%rdx
6b4b(3): mov %rax,%rsi
6b4e(5): mov $0x1,%edi
6b53(2): xor %eax,%eax
6b55(5): call 0xffffb17b(%rip)
6b5a(7): mov 0x206527(%rip),%rbx
6b61(7): lea 0x3400(%rip),%rsi
6b68(2): xor %edi,%edi
6b6a(5): mov $0x5,%edx
6b6f(5): call 0xffffaf31(%rip)
6b74(3): mov %rbx,%rsi
6b77(3): mov %rax,%rdi
6b7a(1): pop %rbx
6b7b(5): jmp 0xffffb065(%rip)

"xmalloc" :
6b80(1): push %rbx
6b81(3): mov %rdi,%rbx
6b84(5): call 0xffffb0bc(%rip)
6b89(3): test %rax,%rax
6b8c(2): jnz 0x7(%rip)
6b8e(3): test %rbx,%rbx
6b91(2): jnz 0x4(%rip)
6b93(1): pop %rbx
6b94(1): ret near (%rsp)
6b95(5): call 0x23b(%rip)

"xnmalloc" :
6ba0(3): mov %rdi,%rax
6ba3(3): mul %rax,%rsi,%rdx
6ba6(3): mov %rax,%rdi
6ba9(3): seto %al
6bac(3): test %rdi,%rdi
6baf(2): js 0xc(%rip)
6bb1(3): movzx %al,%eax
6bb4(3): test %rax,%rax
6bb7(2): jnz 0x4(%rip)
6bb9(2): jmp 0xffffffc7(%rip)
6bbb(4): sub $0x8,%rsp
6bbf(5): call 0x211(%rip)

"xrealloc" :
6be0(3): test %rsi,%rsi
6be3(1): push %rbx
6be4(3): mov %rsi,%rbx
6be7(2): jnz 0x7(%rip)
6be9(3): test %rdi,%rdi
6bec(2): jnz 0x1c(%rip)
6bee(3): mov %rbx,%rsi
6bf1(5): call 0xffffb0af(%rip)
6bf6(3): test %rax,%rax
6bf9(2): jnz 0x7(%rip)
6bfb(3): test %rbx,%rbx
6bfe(2): jnz 0x13(%rip)
6c00(1): pop %rbx
6c01(1): ret near (%rsp)
6c02(6): nop 0x0(%rax,%rax,1)
6c08(5): call 0xffffb1c8(%rip)
6c0d(2): xor %eax,%eax
6c0f(1): pop %rbx
6c10(1): ret near (%rsp)
6c11(5): call 0x1bf(%rip)

"xnrealloc" :
6c20(3): mov %rsi,%rax
6c23(3): mul %rax,%rdx,%rdx
6c26(3): mov %rax,%rsi
6c29(3): seto %al
6c2c(3): test %rsi,%rsi
6c2f(2): js 0xc(%rip)
6c31(3): movzx %al,%eax
6c34(3): test %rax,%rax
6c37(2): jnz 0x4(%rip)
6c39(2): jmp 0xffffffa7(%rip)
6c3b(4): sub $0x8,%rsp
6c3f(5): call 0x191(%rip)

"x2nrealloc" :
6c50(3): test %rdi,%rdi
6c53(3): mov %rdx,%r9
6c56(3): mov (%rsi),%rcx
6c59(2): jz 0x37(%rip)
6c5b(2): xor %edx,%edx
6c5d(a): mov $0x6148914691236517204,%rax
6c67(3): div %r9,%rax
6c6a(3): cmp %rcx,%rax
6c6d(2): jbe 0x3e(%rip)
6c6f(3): mov %rcx,%rax
6c72(3): shr $0x1,%rax
6c75(5): lea 0x1(%rax,%rcx,1),%rcx
6c7a(3): mov %rcx,(%rsi)
6c7d(4): imul %r9,%rcx
6c81(3): mov %rcx,%rsi
6c84(5): jmp 0xffffff5c(%rip)
6c89(7): nop 0x0(%rax)
6c90(3): test %rcx,%rcx
6c93(2): jz 0x25(%rip)
6c95(3): mov %rcx,%rax
6c98(3): mul %rax,%r9,%rdx
6c9b(3): seto %dl
6c9e(3): test %rax,%rax
6ca1(3): movzx %dl,%edx
6ca4(2): js 0x7(%rip)
6ca6(3): test %rdx,%rdx
6ca9(2): jz 0xffffffd1(%rip)
6cab(4): sub $0x8,%rsp
6caf(5): call 0x121(%rip)
6cb4(4): nop 0x0(%rax)
6cb8(2): xor %edx,%edx
6cba(5): mov $0x80,%eax
6cbf(3): xor %r8d,%r8d
6cc2(3): div %r9,%rax
6cc5(3): test %rax,%rax
6cc8(4): setz %r8b
6ccc(4): lea 0x0(%r8,%rax,1),%rcx
6cd0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6ce0(3): test %rdi,%rdi
6ce3(3): mov (%rsi),%rax
6ce6(2): jz 0x2a(%rip)
6ce8(a): mov $0x6148914691236517203,%rdx
6cf2(3): cmp %rdx,%rax
6cf5(2): jnbe 0x2c(%rip)
6cf7(3): mov %rax,%rdx
6cfa(3): shr $0x1,%rdx
6cfd(5): lea 0x1(%rdx,%rax,1),%rax
6d02(3): mov %rax,(%rsi)
6d05(3): mov %rax,%rsi
6d08(5): jmp 0xfffffed8(%rip)
6d0d(3): nop (%rax)
6d10(3): test %rax,%rax
6d13(5): mov $0x80,%edx
6d18(4): cmove %rdx,%rax
6d1c(3): test %rax,%rax
6d1f(2): jns 0xffffffe3(%rip)
6d21(4): sub $0x8,%rsp
6d25(5): call 0xab(%rip)

"xzalloc" :
6d30(1): push %rbx
6d31(3): mov %rdi,%rbx
6d34(5): call 0xfffffe4c(%rip)
6d39(3): mov %rbx,%rdx
6d3c(2): xor %esi,%esi
6d3e(3): mov %rax,%rdi
6d41(1): pop %rbx
6d42(5): jmp 0xffffae3e(%rip)

"xcalloc" :
6d50(3): mov %rdi,%rax
6d53(4): sub $0x8,%rsp
6d57(3): mul %rax,%rsi,%rdx
6d5a(3): seto %dl
6d5d(3): test %rax,%rax
6d60(2): js 0x19(%rip)
6d62(3): movzx %dl,%edx
6d65(3): test %rdx,%rdx
6d68(2): jnz 0x11(%rip)
6d6a(5): call 0xffffae86(%rip)
6d6f(3): test %rax,%rax
6d72(2): jz 0x7(%rip)
6d74(4): add $0x8,%rsp
6d78(1): ret near (%rsp)
6d79(5): call 0x57(%rip)

"xmemdup" :
6d80(1): push %rbp
6d81(1): push %rbx
6d82(3): mov %rdi,%rbp
6d85(3): mov %rsi,%rdi
6d88(3): mov %rsi,%rbx
6d8b(4): sub $0x8,%rsp
6d8f(5): call 0xfffffdf1(%rip)
6d94(4): add $0x8,%rsp
6d98(3): mov %rbx,%rdx
6d9b(3): mov %rbp,%rsi
6d9e(1): pop %rbx
6d9f(1): pop %rbp
6da0(3): mov %rax,%rdi
6da3(5): jmp 0xffffae6d(%rip)

"xstrdup" :
6db0(1): push %rbx
6db1(3): mov %rdi,%rbx
6db4(5): call 0xffffad0c(%rip)
6db9(3): mov %rbx,%rdi
6dbc(4): lea 0x1(%rax),%rsi
6dc0(1): pop %rbx
6dc1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
6dd0(7): lea 0x3238(%rip),%rsi
6dd7(4): sub $0x8,%rsp
6ddb(5): mov $0x5,%edx
6de0(2): xor %edi,%edi
6de2(5): call 0xffffacbe(%rip)
6de7(6): mov 0x20622b(%rip),%edi
6ded(7): lea 0x2406(%rip),%rdx
6df4(3): mov %rax,%rcx
6df7(2): xor %esi,%esi
6df9(2): xor %eax,%eax
6dfb(5): call 0xffffaef5(%rip)
6e00(5): call 0xffffaba0(%rip)

"xnumtoumax" :
6e10(2): push %r15
6e12(2): push %r14
6e14(3): mov %rcx,%r15
6e17(2): push %r13
6e19(2): push %r12
6e1b(3): mov %rdx,%r14
6e1e(1): push %rbp
6e1f(1): push %rbx
6e20(2): mov %esi,%edx
6e22(2): xor %esi,%esi
6e24(3): mov %rdi,%r12
6e27(3): mov %r9,%r13
6e2a(4): sub $0x18,%rsp
6e2e(3): mov %rsp,%rcx
6e31(4): mov 0x50(%rsp),%ebx
6e35(9): mov $0x28,%rax
6e3e(5): mov %rax,0x8(%rsp)
6e43(2): xor %eax,%eax
6e45(5): call 0x51b(%rip)
6e4a(2): test %eax,%eax
6e4c(6): jnz 0x94(%rip)
6e52(4): mov (%rsp),%rbp
6e56(3): cmp %r14,%rbp
6e59(2): jb 0x7(%rip)
6e5b(3): cmp %r15,%rbp
6e5e(2): jbe 0x56(%rip)
6e60(5): call 0xffffab50(%rip)
6e65(7): cmp $0x40000000,%rbp
6e6c(3): mov %rax,%r14
6e6f(2): sbb %eax,%eax
6e71(3): and $0xd7,%eax
6e74(3): add $0x4b,%eax
6e77(3): mov %eax,(%r14)
6e7a(3): mov %r12,%rdi
6e7d(5): call 0xffffe413(%rip)
6e82(3): mov (%r14),%esi
6e85(3): mov %rax,%r8
6e88(5): mov $0x0,%eax
6e8d(7): lea 0x2362(%rip),%rdx
6e94(3): mov %r13,%rcx
6e97(3): cmp $0x16,%esi
6e9a(3): cmove %eax,%esi
6e9d(2): test %ebx,%ebx
6e9f(5): mov $0x1,%eax
6ea4(3): cmove %eax,%ebx
6ea7(2): xor %eax,%eax
6ea9(2): mov %ebx,%edi
6eab(5): call 0xffffae45(%rip)
6eb0(4): mov (%rsp),%rbp
6eb4(5): mov 0x8(%rsp),%rdx
6eb9(9): xor $0x28,%rdx
6ec2(3): mov %rbp,%rax
6ec5(2): jnz 0x46(%rip)
6ec7(4): add $0x18,%rsp
6ecb(1): pop %rbx
6ecc(1): pop %rbp
6ecd(2): pop %r12
6ecf(2): pop %r13
6ed1(2): pop %r14
6ed3(2): pop %r15
6ed5(1): ret near (%rsp)
6ed6(a): nop 0x0(%rax,%rax,1)
6ee0(2): mov %eax,%ebp
6ee2(5): call 0xffffaace(%rip)
6ee7(3): cmp $0x1,%ebp
6eea(3): mov %rax,%r14
6eed(2): jz 0x13(%rip)
6eef(3): cmp $0x3,%ebp
6ef2(2): jnz 0xffffff88(%rip)
6ef4(6): mov $0x0,(%rax)
6efa(5): jmp 0xffffff80(%rip)
6eff(1): nop 
6f00(6): mov $0x4b,(%rax)
6f06(5): jmp 0xffffff74(%rip)
6f0b(5): call 0xffffabc5(%rip)

"xdectoumax" :
6f10(4): sub $0x10,%rsp
6f14(2): push %r9
6f16(3): mov %r8,%r9
6f19(3): mov %rcx,%r8
6f1c(3): mov %rdx,%rcx
6f1f(3): mov %rsi,%rdx
6f22(5): mov $0xa,%esi
6f27(5): call 0xfffffee9(%rip)
6f2c(4): add $0x18,%rsp
6f30(1): ret near (%rsp)

"xstrtoul" :
6f40(2): push %r15
6f42(2): push %r14
6f44(2): push %r13
6f46(2): push %r12
6f48(1): push %rbp
6f49(1): push %rbx
6f4a(4): sub $0x28,%rsp
6f4e(9): mov $0x28,%rax
6f57(5): mov %rax,0x18(%rsp)
6f5c(2): xor %eax,%eax
6f5e(3): cmp $0x24,%edx
6f61(6): jnbe 0x364(%rip)
6f67(5): lea 0x10(%rsp),%rax
6f6c(3): mov %rsi,%r15
6f6f(3): test %rsi,%rsi
6f72(3): mov %rdi,%rbp
6f75(4): mov %edx,0x8(%rsp)
6f79(3): mov %rcx,%r14
6f7c(3): mov %r8,%r13
6f7f(4): cmove %rax,%r15
6f83(5): call 0xffffaa2d(%rip)
6f88(6): mov $0x0,(%rax)
6f8e(3): mov %rax,%r12
6f91(4): movzx 0x0(%rbp),%ebx
6f95(5): call 0xffffae2b(%rip)
6f9a(4): mov 0x8(%rsp),%edx
6f9e(3): mov (%rax),%rsi
6fa1(3): mov %rbp,%rax
6fa4(2): jmp 0x13(%rip)
6fa6(a): nop 0x0(%rax,%rax,1)
6fb0(4): add $0x1,%rax
6fb4(3): movzx (%rax),%ebx
6fb7(3): movzx %bl,%ecx
6fba(5): test $0x20,0x1(%rsi,%rcx,2)
6fbf(2): jnz 0xfffffff1(%rip)
6fc1(3): cmp $0x2d,%bl
6fc4(2): jz 0x54(%rip)
6fc6(3): mov %r15,%rsi
6fc9(3): mov %rbp,%rdi
6fcc(5): call 0xffffad74(%rip)
6fd1(3): mov (%r15),%rcx
6fd4(3): mov %rax,%rbx
6fd7(3): cmp %rbp,%rcx
6fda(2): jz 0x2e(%rip)
6fdc(4): mov (%r12),%eax
6fe0(2): test %eax,%eax
6fe2(2): jz 0x66(%rip)
6fe4(3): cmp $0x22,%eax
6fe7(5): mov $0x1,%ebp
6fec(2): jnz 0x2c(%rip)
6fee(3): test %r13,%r13
6ff1(2): jz 0xb(%rip)
6ff3(4): movzx (%rcx),%r12d
6ff7(3): test %r12b,%r12b
6ffa(2): jnz 0x7d(%rip)
6ffc(3): mov %rbx,(%r14)
6fff(2): jmp 0x1e(%rip)
7001(7): nop 0x0(%rax)
7008(3): test %r13,%r13
700b(5): mov %rcx,0x8(%rsp)
7010(2): jnz 0x40(%rip)
7012(6): nop 0x0(%rax,%rax,1)
7018(5): mov $0x4,%ebp
701d(5): mov 0x18(%rsp),%rdi
7022(9): xor $0x28,%rdi
702b(2): mov %ebp,%eax
702d(6): jnz 0x293(%rip)
7033(4): add $0x28,%rsp
7037(1): pop %rbx
7038(1): pop %rbp
7039(2): pop %r12
703b(2): pop %r13
703d(2): pop %r14
703f(2): pop %r15
7041(1): ret near (%rsp)
7042(6): nop 0x0(%rax,%rax,1)
7048(2): xor %ebp,%ebp
704a(2): jmp 0xffffffa4(%rip)
704c(4): nop 0x0(%rax)
7050(5): movzx 0x0(%rbp),%r12d
7055(3): test %r12b,%r12b
7058(2): jz 0xffffffc0(%rip)
705a(4): movsx %r12b,%esi
705e(3): mov %r13,%rdi
7061(2): xor %ebp,%ebp
7063(5): call 0xffffaabd(%rip)
7068(3): test %rax,%rax
706b(5): mov $0x1,%ebx
7070(5): mov 0x8(%rsp),%rcx
7075(2): jz 0xffffffa3(%rip)
7077(4): movsx %r12b,%esi
707b(3): mov %r13,%rdi
707e(5): mov %rcx,0x8(%rsp)
7083(5): call 0xffffaa9d(%rip)
7088(3): test %rax,%rax
708b(5): mov 0x8(%rsp),%rcx
7090(6): jz 0xcc(%rip)
7096(5): lea 0xffffffbb(%r12),%eax
709b(2): cmp $0x2f,%al
709d(2): jnbe 0x53(%rip)
709f(a): mov $0x142129060940101,%rdx
70a9(4): bt %rax,%rdx
70ad(2): jnb 0x43(%rip)
70af(5): mov $0x30,%esi
70b4(3): mov %r13,%rdi
70b7(5): mov %rcx,0x8(%rsp)
70bc(5): call 0xffffaa64(%rip)
70c1(3): test %rax,%rax
70c4(5): mov 0x8(%rsp),%rcx
70c9(2): jz 0x27(%rip)
70cb(4): movzx 0x1(%rcx),%eax
70cf(2): cmp $0x44,%al
70d1(2): jz 0xe(%rip)
70d3(2): cmp $0x69,%al
70d5(6): jz 0x1d3(%rip)
70db(2): cmp $0x42,%al
70dd(2): jnz 0x13(%rip)
70df(5): mov $0x2,%edi
70e4(5): mov $0x3e8,%esi
70e9(2): jmp 0x11(%rip)
70eb(5): nop 0x0(%rax,%rax,1)
70f0(5): mov $0x1,%edi
70f5(5): mov $0x400,%esi
70fa(4): sub $0x42,%r12d
70fe(4): cmp $0x35,%r12b
7102(2): jnbe 0x5a(%rip)
7104(7): lea 0x2f5d(%rip),%rdx
710b(4): movzx %r12b,%r12d
710f(4): movsxd 0x0(%rdx,%r12,4),%rax
7113(3): add %rdx,%rax
7116(2): jmp %rax
7118(3): mov %rbx,%rax
711b(3): mul %rax,%rsi,%rdx
711e(6): jo 0x1f3(%rip)
7124(3): xor %r8d,%r8d
7127(3): mul %rax,%rsi,%rdx
712a(6): jo 0x1d8(%rip)
7130(3): mov %rax,%rbx
7133(3): or %r8d,%ebp
7136(a): nop 0x0(%rax,%rax,1)
7140(3): movsxd %edi,%rdi
7143(2): mov %ebp,%eax
7145(3): add %rdi,%rcx
7148(3): or $0x2,%eax
714b(3): mov %rcx,(%r15)
714e(3): cmp $0x0,(%rcx)
7151(3): mov %rbx,(%r14)
7154(3): cmovne %eax,%ebp
7157(5): jmp 0xfffffec6(%rip)
715c(3): mov %rbx,(%r14)
715f(3): or $0x2,%ebp
7162(5): jmp 0xfffffebb(%rip)
7167(5): mov $0x2,%edx
716c(3): mov %rdx,%rax
716f(3): mul %rax,%rbx,%rdx
7172(6): jo 0x9c(%rip)
7178(3): add %rbx,%rbx
717b(2): jmp 0xffffffc5(%rip)
717d(5): mov $0x200,%edx
7182(3): mov %rdx,%rax
7185(3): mul %rax,%rbx,%rdx
7188(6): jo 0x86(%rip)
718e(4): shl/sal $0x9,%rbx
7192(2): jmp 0xffffffae(%rip)
7194(6): mov $0x7,%r8d
719a(3): xor %r9d,%r9d
719d(3): nop (%rax)
71a0(3): mov %rbx,%rax
71a3(3): mul %rax,%rsi,%rdx
71a6(3): mov %rax,%rbx
71a9(6): jo 0x195(%rip)
71af(4): sub $0x1,%r8d
71b3(2): jnz 0xffffffed(%rip)
71b5(3): or %r9d,%ebp
71b8(2): jmp 0xffffff88(%rip)
71ba(6): mov $0x8,%r8d
71c0(3): xor %r9d,%r9d
71c3(5): nop 0x0(%rax,%rax,1)
71c8(3): mov %rbx,%rax
71cb(3): mul %rax,%rsi,%rdx
71ce(3): mov %rax,%rbx
71d1(6): jo 0x14f(%rip)
71d7(4): sub $0x1,%r8d
71db(2): jnz 0xffffffed(%rip)
71dd(2): jmp 0xffffffd8(%rip)
71df(6): mov $0x4,%r8d
71e5(3): xor %r9d,%r9d
71e8(3): mov %rbx,%rax
71eb(3): mul %rax,%rsi,%rdx
71ee(3): mov %rax,%rbx
71f1(6): jo 0x102(%rip)
71f7(4): sub $0x1,%r8d
71fb(2): jnz 0xffffffed(%rip)
71fd(2): jmp 0xffffffb8(%rip)
71ff(3): mov %rbx,%rax
7202(3): mul %rax,%rsi,%rdx
7205(3): mov %rax,%rbx
7208(6): jno 0xffffff38(%rip)
720e(5): mov $0x1,%ebp
7213(4): or $0xffffffff,%rbx
7217(5): jmp 0xffffff29(%rip)
721c(4): nop 0x0(%rax)
7220(6): mov $0x5,%r8d
7226(3): xor %r9d,%r9d
7229(3): mov %rbx,%rax
722c(3): mul %rax,%rsi,%rdx
722f(3): mov %rax,%rbx
7232(6): jo 0xfd(%rip)
7238(4): sub $0x1,%r8d
723c(2): jnz 0xffffffed(%rip)
723e(5): jmp 0xffffff77(%rip)
7243(6): mov $0x6,%r8d
7249(3): xor %r9d,%r9d
724c(3): mov %rbx,%rax
724f(3): mul %rax,%rsi,%rdx
7252(3): mov %rax,%rbx
7255(6): jo 0x8f(%rip)
725b(4): sub $0x1,%r8d
725f(2): jnz 0xffffffed(%rip)
7261(5): jmp 0xffffff54(%rip)
7266(5): mov $0x400,%edx
726b(3): mov %rdx,%rax
726e(3): mul %rax,%rbx,%rdx
7271(2): jo 0xffffff9d(%rip)
7273(4): shl/sal $0xa,%rbx
7277(5): jmp 0xfffffec9(%rip)
727c(3): mov %rbx,%rax
727f(3): mul %rax,%rsi,%rdx
7282(6): jo 0xcb(%rip)
7288(3): xor %r8d,%r8d
728b(3): mul %rax,%rsi,%rdx
728e(6): jno 0xfffffe99(%rip)
7294(6): mov $0x1,%r8d
729a(4): or $0xffffffff,%rax
729e(5): jmp 0xfffffe89(%rip)
72a3(5): nop 0x0(%rax,%rax,1)
72a8(2): xor %edi,%edi
72aa(4): cmp $0x42,0x2(%rcx)
72ae(5): mov $0x400,%esi
72b3(4): setz %dil
72b7(4): lea 0x1(%rdi,%rdi,1),%edi
72bb(5): jmp 0xfffffe3f(%rip)
72c0(5): call 0xffffa810(%rip)
72c5(7): lea 0x2e74(%rip),%rcx
72cc(7): lea 0x2d4d(%rip),%rsi
72d3(7): lea 0x2d66(%rip),%rdi
72da(5): mov $0x54,%edx
72df(5): call 0xffffa881(%rip)
72e4(6): mov $0x1,%r9d
72ea(4): or $0xffffffff,%rbx
72ee(5): jmp 0xffffff6d(%rip)
72f3(6): mov $0x1,%r9d
72f9(4): or $0xffffffff,%rbx
72fd(5): jmp 0xfffffefa(%rip)
7302(6): mov $0x1,%r8d
7308(4): or $0xffffffff,%rbx
730c(5): jmp 0xfffffe27(%rip)
7311(4): or $0xffffffff,%rax
7315(6): mov $0x1,%r8d
731b(5): jmp 0xfffffe0c(%rip)
7320(6): mov $0x1,%r9d
7326(4): or $0xffffffff,%rbx
732a(5): jmp 0xfffffead(%rip)
732f(6): mov $0x1,%r9d
7335(4): or $0xffffffff,%rbx
7339(5): jmp 0xfffffeff(%rip)
733e(6): mov $0x1,%r9d
7344(4): or $0xffffffff,%rbx
7348(5): jmp 0xfffffe67(%rip)
734d(6): mov $0x1,%r8d
7353(4): or $0xffffffff,%rax
7357(5): jmp 0xffffff34(%rip)

"xstrtoumax" :
7360(2): push %r15
7362(2): push %r14
7364(2): push %r13
7366(2): push %r12
7368(1): push %rbp
7369(1): push %rbx
736a(4): sub $0x28,%rsp
736e(9): mov $0x28,%rax
7377(5): mov %rax,0x18(%rsp)
737c(2): xor %eax,%eax
737e(3): cmp $0x24,%edx
7381(6): jnbe 0x364(%rip)
7387(5): lea 0x10(%rsp),%rax
738c(3): mov %rsi,%r15
738f(3): test %rsi,%rsi
7392(3): mov %rdi,%rbp
7395(4): mov %edx,0x8(%rsp)
7399(3): mov %rcx,%r14
739c(3): mov %r8,%r13
739f(4): cmove %rax,%r15
73a3(5): call 0xffffa60d(%rip)
73a8(6): mov $0x0,(%rax)
73ae(3): mov %rax,%r12
73b1(4): movzx 0x0(%rbp),%ebx
73b5(5): call 0xffffaa0b(%rip)
73ba(4): mov 0x8(%rsp),%edx
73be(3): mov (%rax),%rsi
73c1(3): mov %rbp,%rax
73c4(2): jmp 0x13(%rip)
73c6(a): nop 0x0(%rax,%rax,1)
73d0(4): add $0x1,%rax
73d4(3): movzx (%rax),%ebx
73d7(3): movzx %bl,%ecx
73da(5): test $0x20,0x1(%rsi,%rcx,2)
73df(2): jnz 0xfffffff1(%rip)
73e1(3): cmp $0x2d,%bl
73e4(2): jz 0x54(%rip)
73e6(2): xor %ecx,%ecx
73e8(3): mov %r15,%rsi
73eb(3): mov %rbp,%rdi
73ee(5): call 0xffffa782(%rip)
73f3(3): mov (%r15),%rcx
73f6(3): mov %rax,%rbx
73f9(3): cmp %rbp,%rcx
73fc(2): jz 0x2c(%rip)
73fe(4): mov (%r12),%eax
7402(2): test %eax,%eax
7404(2): jz 0x64(%rip)
7406(3): cmp $0x22,%eax
7409(5): mov $0x1,%ebp
740e(2): jnz 0x2a(%rip)
7410(3): test %r13,%r13
7413(2): jz 0xb(%rip)
7415(4): movzx (%rcx),%r12d
7419(3): test %r12b,%r12b
741c(2): jnz 0x7b(%rip)
741e(3): mov %rbx,(%r14)
7421(2): jmp 0x1c(%rip)
7423(5): nop 0x0(%rax,%rax,1)
7428(3): test %r13,%r13
742b(5): mov %rcx,0x8(%rsp)
7430(2): jnz 0x40(%rip)
7432(6): nop 0x0(%rax,%rax,1)
7438(5): mov $0x4,%ebp
743d(5): mov 0x18(%rsp),%rdi
7442(9): xor $0x28,%rdi
744b(2): mov %ebp,%eax
744d(6): jnz 0x293(%rip)
7453(4): add $0x28,%rsp
7457(1): pop %rbx
7458(1): pop %rbp
7459(2): pop %r12
745b(2): pop %r13
745d(2): pop %r14
745f(2): pop %r15
7461(1): ret near (%rsp)
7462(6): nop 0x0(%rax,%rax,1)
7468(2): xor %ebp,%ebp
746a(2): jmp 0xffffffa6(%rip)
746c(4): nop 0x0(%rax)
7470(5): movzx 0x0(%rbp),%r12d
7475(3): test %r12b,%r12b
7478(2): jz 0xffffffc0(%rip)
747a(4): movsx %r12b,%esi
747e(3): mov %r13,%rdi
7481(2): xor %ebp,%ebp
7483(5): call 0xffffa69d(%rip)
7488(3): test %rax,%rax
748b(5): mov $0x1,%ebx
7490(5): mov 0x8(%rsp),%rcx
7495(2): jz 0xffffffa3(%rip)
7497(4): movsx %r12b,%esi
749b(3): mov %r13,%rdi
749e(5): mov %rcx,0x8(%rsp)
74a3(5): call 0xffffa67d(%rip)
74a8(3): test %rax,%rax
74ab(5): mov 0x8(%rsp),%rcx
74b0(6): jz 0xcc(%rip)
74b6(5): lea 0xffffffbb(%r12),%eax
74bb(2): cmp $0x2f,%al
74bd(2): jnbe 0x53(%rip)
74bf(a): mov $0x142129060940101,%rdx
74c9(4): bt %rax,%rdx
74cd(2): jnb 0x43(%rip)
74cf(5): mov $0x30,%esi
74d4(3): mov %r13,%rdi
74d7(5): mov %rcx,0x8(%rsp)
74dc(5): call 0xffffa644(%rip)
74e1(3): test %rax,%rax
74e4(5): mov 0x8(%rsp),%rcx
74e9(2): jz 0x27(%rip)
74eb(4): movzx 0x1(%rcx),%eax
74ef(2): cmp $0x44,%al
74f1(2): jz 0xe(%rip)
74f3(2): cmp $0x69,%al
74f5(6): jz 0x1d3(%rip)
74fb(2): cmp $0x42,%al
74fd(2): jnz 0x13(%rip)
74ff(5): mov $0x2,%edi
7504(5): mov $0x3e8,%esi
7509(2): jmp 0x11(%rip)
750b(5): nop 0x0(%rax,%rax,1)
7510(5): mov $0x1,%edi
7515(5): mov $0x400,%esi
751a(4): sub $0x42,%r12d
751e(4): cmp $0x35,%r12b
7522(2): jnbe 0x5a(%rip)
7524(7): lea 0x2c25(%rip),%rdx
752b(4): movzx %r12b,%r12d
752f(4): movsxd 0x0(%rdx,%r12,4),%rax
7533(3): add %rdx,%rax
7536(2): jmp %rax
7538(3): mov %rbx,%rax
753b(3): mul %rax,%rsi,%rdx
753e(6): jo 0x1f3(%rip)
7544(3): xor %r8d,%r8d
7547(3): mul %rax,%rsi,%rdx
754a(6): jo 0x1d8(%rip)
7550(3): mov %rax,%rbx
7553(3): or %r8d,%ebp
7556(a): nop 0x0(%rax,%rax,1)
7560(3): movsxd %edi,%rdi
7563(2): mov %ebp,%eax
7565(3): add %rdi,%rcx
7568(3): or $0x2,%eax
756b(3): mov %rcx,(%r15)
756e(3): cmp $0x0,(%rcx)
7571(3): mov %rbx,(%r14)
7574(3): cmovne %eax,%ebp
7577(5): jmp 0xfffffec6(%rip)
757c(3): mov %rbx,(%r14)
757f(3): or $0x2,%ebp
7582(5): jmp 0xfffffebb(%rip)
7587(5): mov $0x2,%edx
758c(3): mov %rdx,%rax
758f(3): mul %rax,%rbx,%rdx
7592(6): jo 0x9c(%rip)
7598(3): add %rbx,%rbx
759b(2): jmp 0xffffffc5(%rip)
759d(5): mov $0x200,%edx
75a2(3): mov %rdx,%rax
75a5(3): mul %rax,%rbx,%rdx
75a8(6): jo 0x86(%rip)
75ae(4): shl/sal $0x9,%rbx
75b2(2): jmp 0xffffffae(%rip)
75b4(6): mov $0x7,%r8d
75ba(3): xor %r9d,%r9d
75bd(3): nop (%rax)
75c0(3): mov %rbx,%rax
75c3(3): mul %rax,%rsi,%rdx
75c6(3): mov %rax,%rbx
75c9(6): jo 0x195(%rip)
75cf(4): sub $0x1,%r8d
75d3(2): jnz 0xffffffed(%rip)
75d5(3): or %r9d,%ebp
75d8(2): jmp 0xffffff88(%rip)
75da(6): mov $0x8,%r8d
75e0(3): xor %r9d,%r9d
75e3(5): nop 0x0(%rax,%rax,1)
75e8(3): mov %rbx,%rax
75eb(3): mul %rax,%rsi,%rdx
75ee(3): mov %rax,%rbx
75f1(6): jo 0x14f(%rip)
75f7(4): sub $0x1,%r8d
75fb(2): jnz 0xffffffed(%rip)
75fd(2): jmp 0xffffffd8(%rip)
75ff(6): mov $0x4,%r8d
7605(3): xor %r9d,%r9d
7608(3): mov %rbx,%rax
760b(3): mul %rax,%rsi,%rdx
760e(3): mov %rax,%rbx
7611(6): jo 0x102(%rip)
7617(4): sub $0x1,%r8d
761b(2): jnz 0xffffffed(%rip)
761d(2): jmp 0xffffffb8(%rip)
761f(3): mov %rbx,%rax
7622(3): mul %rax,%rsi,%rdx
7625(3): mov %rax,%rbx
7628(6): jno 0xffffff38(%rip)
762e(5): mov $0x1,%ebp
7633(4): or $0xffffffff,%rbx
7637(5): jmp 0xffffff29(%rip)
763c(4): nop 0x0(%rax)
7640(6): mov $0x5,%r8d
7646(3): xor %r9d,%r9d
7649(3): mov %rbx,%rax
764c(3): mul %rax,%rsi,%rdx
764f(3): mov %rax,%rbx
7652(6): jo 0xfd(%rip)
7658(4): sub $0x1,%r8d
765c(2): jnz 0xffffffed(%rip)
765e(5): jmp 0xffffff77(%rip)
7663(6): mov $0x6,%r8d
7669(3): xor %r9d,%r9d
766c(3): mov %rbx,%rax
766f(3): mul %rax,%rsi,%rdx
7672(3): mov %rax,%rbx
7675(6): jo 0x8f(%rip)
767b(4): sub $0x1,%r8d
767f(2): jnz 0xffffffed(%rip)
7681(5): jmp 0xffffff54(%rip)
7686(5): mov $0x400,%edx
768b(3): mov %rdx,%rax
768e(3): mul %rax,%rbx,%rdx
7691(2): jo 0xffffff9d(%rip)
7693(4): shl/sal $0xa,%rbx
7697(5): jmp 0xfffffec9(%rip)
769c(3): mov %rbx,%rax
769f(3): mul %rax,%rsi,%rdx
76a2(6): jo 0xcb(%rip)
76a8(3): xor %r8d,%r8d
76ab(3): mul %rax,%rsi,%rdx
76ae(6): jno 0xfffffe99(%rip)
76b4(6): mov $0x1,%r8d
76ba(4): or $0xffffffff,%rax
76be(5): jmp 0xfffffe89(%rip)
76c3(5): nop 0x0(%rax,%rax,1)
76c8(2): xor %edi,%edi
76ca(4): cmp $0x42,0x2(%rcx)
76ce(5): mov $0x400,%esi
76d3(4): setz %dil
76d7(4): lea 0x1(%rdi,%rdi,1),%edi
76db(5): jmp 0xfffffe3f(%rip)
76e0(5): call 0xffffa3f0(%rip)
76e5(7): lea 0x2b3c(%rip),%rcx
76ec(7): lea 0x292d(%rip),%rsi
76f3(7): lea 0x2946(%rip),%rdi
76fa(5): mov $0x54,%edx
76ff(5): call 0xffffa461(%rip)
7704(6): mov $0x1,%r9d
770a(4): or $0xffffffff,%rbx
770e(5): jmp 0xffffff6d(%rip)
7713(6): mov $0x1,%r9d
7719(4): or $0xffffffff,%rbx
771d(5): jmp 0xfffffefa(%rip)
7722(6): mov $0x1,%r8d
7728(4): or $0xffffffff,%rbx
772c(5): jmp 0xfffffe27(%rip)
7731(4): or $0xffffffff,%rax
7735(6): mov $0x1,%r8d
773b(5): jmp 0xfffffe0c(%rip)
7740(6): mov $0x1,%r9d
7746(4): or $0xffffffff,%rbx
774a(5): jmp 0xfffffead(%rip)
774f(6): mov $0x1,%r9d
7755(4): or $0xffffffff,%rbx
7759(5): jmp 0xfffffeff(%rip)
775e(6): mov $0x1,%r9d
7764(4): or $0xffffffff,%rbx
7768(5): jmp 0xfffffe67(%rip)
776d(6): mov $0x1,%r8d
7773(4): or $0xffffffff,%rax
7777(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
7780(2): push %r12
7782(1): push %rbp
7783(1): push %rbx
7784(3): mov %rdi,%rbx
7787(5): call 0xffffa499(%rip)
778c(2): test %eax,%eax
778e(3): mov %rbx,%rdi
7791(2): js 0x56(%rip)
7793(5): call 0xffffa4ed(%rip)
7798(2): test %eax,%eax
779a(2): jnz 0x2e(%rip)
779c(3): mov %rbx,%rdi
779f(5): call 0x61(%rip)
77a4(2): test %eax,%eax
77a6(2): jz 0x3e(%rip)
77a8(5): call 0xffffa208(%rip)
77ad(3): mov (%rax),%r12d
77b0(3): mov %rbx,%rdi
77b3(3): mov %rax,%rbp
77b6(5): call 0xffffa2ba(%rip)
77bb(3): test %r12d,%r12d
77be(2): jnz 0x32(%rip)
77c0(1): pop %rbx
77c1(1): pop %rbp
77c2(2): pop %r12
77c4(1): ret near (%rsp)
77c5(3): nop (%rax)
77c8(3): mov %rbx,%rdi
77cb(5): call 0xffffa455(%rip)
77d0(2): xor %esi,%esi
77d2(5): mov $0x1,%edx
77d7(2): mov %eax,%edi
77d9(5): call 0xffffa367(%rip)
77de(4): cmp $0xffffffff,%rax
77e2(2): jnz 0xffffffba(%rip)
77e4(3): mov %rbx,%rdi
77e7(1): pop %rbx
77e8(1): pop %rbp
77e9(2): pop %r12
77eb(5): jmp 0xffffa285(%rip)
77f0(4): mov %r12d,0x0(%rbp)
77f4(5): mov $0xffffffff,%eax
77f9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
7800(3): test %rdi,%rdi
7803(1): push %rbx
7804(3): mov %rdi,%rbx
7807(2): jz 0x13(%rip)
7809(5): call 0xffffa477(%rip)
780e(2): test %eax,%eax
7810(2): jz 0xa(%rip)
7812(6): test $0x100,(%rbx)
7818(2): jnz 0x10(%rip)
781a(3): mov %rbx,%rdi
781d(1): pop %rbx
781e(5): jmp 0xffffa432(%rip)
7823(5): nop 0x0(%rax,%rax,1)
7828(3): mov %rbx,%rdi
782b(5): mov $0x1,%edx
7830(2): xor %esi,%esi
7832(5): call 0xe(%rip)
7837(3): mov %rbx,%rdi
783a(1): pop %rbx
783b(5): jmp 0xffffa415(%rip)

"rpl_fseeko" :
7840(4): mov 0x8(%rdi),%rax
7844(4): cmp %rax,0x10(%rdi)
7848(2): jz 0x8(%rip)
784a(5): jmp 0xffffa4d6(%rip)
784f(1): nop 
7850(4): mov 0x20(%rdi),%rax
7854(4): cmp %rax,0x28(%rdi)
7858(2): jnz 0xfffffff2(%rip)
785a(5): cmp $0x0,0x48(%rdi)
785f(2): jnz 0xffffffeb(%rip)
7861(2): push %r12
7863(1): push %rbp
7864(3): mov %edx,%r12d
7867(1): push %rbx
7868(3): mov %rsi,%rbp
786b(3): mov %rdi,%rbx
786e(5): call 0xffffa3b2(%rip)
7873(3): mov %r12d,%edx
7876(3): mov %rbp,%rsi
7879(2): mov %eax,%edi
787b(5): call 0xffffa2c5(%rip)
7880(4): cmp $0xffffffff,%rax
7884(2): jz 0xe(%rip)
7886(3): and $0xef,(%rbx)
7889(7): mov %rax,0x90(%rbx)
7890(2): xor %eax,%eax
7892(1): pop %rbx
7893(1): pop %rbp
7894(2): pop %r12
7896(1): ret near (%rsp)

"rpl_mbrtowc" :
78a0(2): push %r13
78a2(2): push %r12
78a4(3): mov %rsi,%r13
78a7(1): push %rbp
78a8(1): push %rbx
78a9(3): mov %rdi,%rbx
78ac(3): mov %rdx,%r12
78af(4): sub $0x18,%rsp
78b3(9): mov $0x28,%rax
78bc(5): mov %rax,0x8(%rsp)
78c1(2): xor %eax,%eax
78c3(5): lea 0x4(%rsp),%rax
78c8(3): test %rdi,%rdi
78cb(4): cmove %rax,%rbx
78cf(3): mov %rbx,%rdi
78d2(5): call 0xffffa22e(%rip)
78d7(4): cmp $0xfffffffd,%rax
78db(3): mov %rax,%rbp
78de(2): jbe 0x22(%rip)
78e0(3): test %r12,%r12
78e3(2): jz 0x1d(%rip)
78e5(2): xor %edi,%edi
78e7(5): call 0x169(%rip)
78ec(2): test %al,%al
78ee(2): jnz 0x12(%rip)
78f0(5): movzx 0x0(%r13),%eax
78f5(5): mov $0x1,%ebp
78fa(2): mov %eax,(%rbx)
78fc(4): nop 0x0(%rax)
7900(5): mov 0x8(%rsp),%rdx
7905(9): xor $0x28,%rdx
790e(3): mov %rbp,%rax
7911(2): jnz 0xd(%rip)
7913(4): add $0x18,%rsp
7917(1): pop %rbx
7918(1): pop %rbp
7919(2): pop %r12
791b(2): pop %r13
791d(1): ret near (%rsp)
791e(5): call 0xffffa1b2(%rip)

"close_stream" :
7930(2): push %r12
7932(1): push %rbp
7933(3): mov %rdi,%rbp
7936(1): push %rbx
7937(5): call 0xffffa0b9(%rip)
793c(3): mov 0x0(%rbp),%ebx
793f(3): mov %rbp,%rdi
7942(3): mov %rax,%r12
7945(5): call 0xfffffe3b(%rip)
794a(3): and $0x20,%ebx
794d(2): test %ebx,%ebx
794f(2): jnz 0x19(%rip)
7951(2): test %eax,%eax
7953(2): jz 0xc(%rip)
7955(3): test %r12,%r12
7958(5): mov $0xffffffff,%eax
795d(2): jz 0x3b(%rip)
795f(1): pop %rbx
7960(1): pop %rbp
7961(2): pop %r12
7963(1): ret near (%rsp)
7964(4): nop 0x0(%rax)
7968(2): test %eax,%eax
796a(2): jnz 0x1e(%rip)
796c(5): call 0xffffa044(%rip)
7971(6): mov $0x0,(%rax)
7977(5): mov $0xffffffff,%eax
797c(1): pop %rbx
797d(1): pop %rbp
797e(2): pop %r12
7980(1): ret near (%rsp)
7981(7): nop 0x0(%rax)
7988(1): pop %rbx
7989(5): mov $0xffffffff,%eax
798e(1): pop %rbp
798f(2): pop %r12
7991(1): ret near (%rsp)
7992(6): nop 0x0(%rax,%rax,1)
7998(5): call 0xffffa018(%rip)
799d(3): cmp $0x9,(%rax)
79a0(1): pop %rbx
79a1(1): pop %rbp
79a2(2): pop %r12
79a4(3): setnz %al
79a7(3): movzx %al,%eax
79aa(2): neg %eax
79ac(1): ret near (%rsp)

"fopen_safer" :
79b0(2): push %r12
79b2(1): push %rbp
79b3(3): mov %rsi,%rbp
79b6(1): push %rbx
79b7(5): call 0xffffa379(%rip)
79bc(3): test %rax,%rax
79bf(3): mov %rax,%rbx
79c2(2): jz 0xf(%rip)
79c4(3): mov %rax,%rdi
79c7(5): call 0xffffa259(%rip)
79cc(3): cmp $0x2,%eax
79cf(2): jbe 0x11(%rip)
79d1(3): mov %rbx,%rax
79d4(1): pop %rbx
79d5(1): pop %rbp
79d6(2): pop %r12
79d8(1): ret near (%rsp)
79d9(7): nop 0x0(%rax)
79e0(2): mov %eax,%edi
79e2(5): call 0x13ee(%rip)
79e7(2): test %eax,%eax
79e9(3): mov %eax,%r12d
79ec(2): js 0x3c(%rip)
79ee(3): mov %rbx,%rdi
79f1(5): call 0xfffffd8f(%rip)
79f6(2): test %eax,%eax
79f8(2): jnz 0x15(%rip)
79fa(3): mov %rbp,%rsi
79fd(3): mov %r12d,%edi
7a00(5): call 0xffffa2b0(%rip)
7a05(3): test %rax,%rax
7a08(3): mov %rax,%rbx
7a0b(2): jnz 0xffffffc6(%rip)
7a0d(5): call 0xffff9fa3(%rip)
7a12(2): mov (%rax),%ebp
7a14(3): mov %rax,%rbx
7a17(3): mov %r12d,%edi
7a1a(5): call 0xffffa186(%rip)
7a1f(2): mov %ebp,(%rbx)
7a21(2): xor %ebx,%ebx
7a23(2): jmp 0xffffffae(%rip)
7a25(3): nop (%rax)
7a28(5): call 0xffff9f88(%rip)
7a2d(3): mov (%rax),%r12d
7a30(3): mov %rax,%rbp
7a33(3): mov %rbx,%rdi
7a36(5): call 0xfffffd4a(%rip)
7a3b(2): xor %ebx,%ebx
7a3d(4): mov %r12d,0x0(%rbp)
7a41(2): jmp 0xffffff90(%rip)

"hard_locale" :
7a50(4): sub $0x8,%rsp
7a54(2): xor %esi,%esi
7a56(5): call 0xffffa26a(%rip)
7a5b(3): mov %rax,%rdx
7a5e(5): mov $0x1,%eax
7a63(3): test %rdx,%rdx
7a66(2): jz 0x1f(%rip)
7a68(7): lea 0x27c4(%rip),%rdi
7a6f(5): mov $0x2,%ecx
7a74(3): mov %rdx,%rsi
7a77(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7a79(3): setnbe %cl
7a7c(3): sbb $0x0,%cl
7a7f(2): xor %eax,%eax
7a81(2): test %cl,%cl
7a83(2): jnz 0xd(%rip)
7a85(4): add $0x8,%rsp
7a89(1): ret near (%rsp)
7a8a(6): nop 0x0(%rax,%rax,1)
7a90(7): lea 0x279e(%rip),%rdi
7a97(5): mov $0x6,%ecx
7a9c(3): mov %rdx,%rsi
7a9f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7aa1(3): setnbe %al
7aa4(2): sbb $0x0,%al
7aa6(2): test %al,%al
7aa8(3): setnz %al
7aab(4): add $0x8,%rsp
7aaf(1): ret near (%rsp)

"next_prime" :
7ab0(4): cmp $0xa,%rdi
7ab4(5): mov $0xa,%eax
7ab9(a): mov $0x-6148914691236517205,%r9
7ac3(4): cmovnae %rax,%rdi
7ac7(4): or $0x1,%rdi
7acb(4): cmp $0xffffffff,%rdi
7acf(2): jz 0x70(%rip)
7ad1(7): nop 0x0(%rax)
7ad8(3): mov %rdi,%rax
7adb(3): mov %rdi,%rcx
7ade(3): mul %rax,%r9,%rdx
7ae1(3): mov %rdx,%rax
7ae4(3): shr $0x1,%rax
7ae7(4): lea 0x0(%rax,%rax,2),%rax
7aeb(3): sub %rax,%rcx
7aee(4): cmp $0x9,%rdi
7af2(3): mov %rcx,%rax
7af5(2): jbe 0x3b(%rip)
7af7(3): test %rcx,%rcx
7afa(2): jz 0x3b(%rip)
7afc(6): mov $0x10,%r8d
7b02(5): mov $0x9,%esi
7b07(5): mov $0x3,%ecx
7b0c(2): jmp 0xd(%rip)
7b0e(2): nop 
7b10(4): add $0x8,%r8
7b14(3): test %rdx,%rdx
7b17(2): jz 0x1e(%rip)
7b19(4): add $0x2,%rcx
7b1d(2): xor %edx,%edx
7b1f(3): mov %rdi,%rax
7b22(3): div %rcx,%rax
7b25(3): add %r8,%rsi
7b28(3): cmp %rdi,%rsi
7b2b(3): mov %rdx,%rax
7b2e(2): jb 0xffffffe2(%rip)
7b30(3): test %rax,%rax
7b33(2): jnz 0xc(%rip)
7b35(4): add $0x2,%rdi
7b39(4): cmp $0xffffffff,%rdi
7b3d(2): jnz 0xffffff9b(%rip)
7b3f(3): mov %rdi,%rax
7b42(1): ret near (%rsp)

"raw_hasher" :
7b50(3): mov %rdi,%rax
7b53(2): xor %edx,%edx
7b55(4): ror $0x3,%rax
7b59(3): div %rsi,%rax
7b5c(3): mov %rdx,%rax
7b5f(1): ret near (%rsp)

"raw_comparator" :
7b60(3): cmp %rsi,%rdi
7b63(3): setz %al
7b66(1): ret near (%rsp)

"safe_hasher" :
7b70(1): push %rbx
7b71(3): mov %rdi,%rbx
7b74(3): mov %rsi,%rdi
7b77(4): mov 0x10(%rbx),%rsi
7b7b(3): call 0x30(%rbx)
7b7e(4): cmp %rax,0x10(%rbx)
7b82(2): jbe 0xb(%rip)
7b84(4): shl/sal $0x4,%rax
7b88(3): add (%rbx),%rax
7b8b(1): pop %rbx
7b8c(1): ret near (%rsp)
7b8d(5): call 0xffff9e13(%rip)

"hash_find_entry" :
7ba0(2): push %r14
7ba2(2): push %r13
7ba4(3): mov %rdx,%r14
7ba7(2): push %r12
7ba9(1): push %rbp
7baa(3): mov %rdi,%r12
7bad(1): push %rbx
7bae(3): mov %rsi,%rbp
7bb1(3): mov %ecx,%r13d
7bb4(5): call 0xffffffbc(%rip)
7bb9(3): mov %rax,(%r14)
7bbc(3): mov (%rax),%rsi
7bbf(3): test %rsi,%rsi
7bc2(6): jz 0xee(%rip)
7bc8(3): cmp %rbp,%rsi
7bcb(3): mov %rax,%rbx
7bce(6): jz 0x95(%rip)
7bd4(3): mov %rbp,%rdi
7bd7(5): call 0x38(%r12)
7bdc(2): test %al,%al
7bde(6): jnz 0x82(%rip)
7be4(4): mov 0x8(%rbx),%rax
7be8(3): test %rax,%rax
7beb(6): jz 0xc5(%rip)
7bf1(3): mov (%rax),%rsi
7bf4(3): cmp %rsi,%rbp
7bf7(2): jnz 0x22(%rip)
7bf9(2): jmp 0x33(%rip)
7bfb(5): nop 0x0(%rax,%rax,1)
7c00(4): mov 0x8(%rbx),%rbx
7c04(4): mov 0x8(%rbx),%rax
7c08(3): test %rax,%rax
7c0b(6): jz 0xa5(%rip)
7c11(3): mov (%rax),%rsi
7c14(3): cmp %rbp,%rsi
7c17(2): jz 0x15(%rip)
7c19(3): mov %rbp,%rdi
7c1c(5): call 0x38(%r12)
7c21(2): test %al,%al
7c23(2): jz 0xffffffdd(%rip)
7c25(4): mov 0x8(%rbx),%rax
7c29(3): mov (%rax),%rsi
7c2c(3): test %r13b,%r13b
7c2f(2): jz 0x1f(%rip)
7c31(4): mov 0x8(%rax),%rdx
7c35(4): mov %rdx,0x8(%rbx)
7c39(7): mov $0x0,(%rax)
7c40(5): mov 0x48(%r12),%rdx
7c45(4): mov %rdx,0x8(%rax)
7c49(5): mov %rax,0x48(%r12)
7c4e(1): pop %rbx
7c4f(3): mov %rsi,%rax
7c52(1): pop %rbp
7c53(2): pop %r12
7c55(2): pop %r13
7c57(2): pop %r14
7c59(1): ret near (%rsp)
7c5a(6): nop 0x0(%rax,%rax,1)
7c60(3): mov (%rbx),%rsi
7c63(3): test %r13b,%r13b
7c66(2): jz 0xffffffe8(%rip)
7c68(4): mov 0x8(%rbx),%rax
7c6c(3): test %rax,%rax
7c6f(2): jz 0x31(%rip)
7c71(4): movdqu (%rax),%xmm0
7c75(3): movups %xmm0,(%rbx)
7c78(7): mov $0x0,(%rax)
7c7f(5): mov 0x48(%r12),%rdx
7c84(4): mov %rdx,0x8(%rax)
7c88(5): mov %rax,0x48(%r12)
7c8d(3): mov %rsi,%rax
7c90(1): pop %rbx
7c91(1): pop %rbp
7c92(2): pop %r12
7c94(2): pop %r13
7c96(2): pop %r14
7c98(1): ret near (%rsp)
7c99(7): nop 0x0(%rax)
7ca0(7): mov $0x0,(%rbx)
7ca7(2): jmp 0xffffffa7(%rip)
7ca9(7): nop 0x0(%rax)
7cb0(2): xor %esi,%esi
7cb2(1): pop %rbx
7cb3(3): mov %rsi,%rax
7cb6(1): pop %rbp
7cb7(2): pop %r12
7cb9(2): pop %r13
7cbb(2): pop %r14
7cbd(1): ret near (%rsp)

"check_tuning.isra.0" :
7cc0(3): mov (%rdi),%rdx
7cc3(7): lea 0x25e6(%rip),%rcx
7cca(5): mov $0x1,%eax
7ccf(3): cmp %rcx,%rdx
7cd2(2): jz 0x63(%rip)
7cd4(5): movss 0x8(%rdx),%xmm0
7cd9(7): ucomiss 0x25e4(%rip),%xmm0
7ce0(2): jbe 0x50(%rip)
7ce2(8): movss 0x25de(%rip),%xmm1
7cea(3): ucomiss %xmm0,%xmm1
7ced(2): jbe 0x43(%rip)
7cef(5): movss 0xc(%rdx),%xmm1
7cf4(7): ucomiss 0x25d1(%rip),%xmm1
7cfb(2): jbe 0x35(%rip)
7cfd(4): movss (%rdx),%xmm1
7d01(7): ucomiss 0x25c8(%rip),%xmm1
7d08(2): jb 0x28(%rip)
7d0a(8): addss 0x25b2(%rip),%xmm1
7d12(5): movss 0x4(%rdx),%xmm2
7d17(3): ucomiss %xmm1,%xmm2
7d1a(2): jbe 0x16(%rip)
7d1c(8): movss 0x25b0(%rip),%xmm3
7d24(3): ucomiss %xmm2,%xmm3
7d27(2): jb 0x9(%rip)
7d29(3): ucomiss %xmm1,%xmm0
7d2c(2): jnbe 0x9(%rip)
7d2e(2): nop 
7d30(3): mov %rcx,(%rdi)
7d33(2): xor %eax,%eax
7d35(2): REP ret near (%rsp)

"transfer_entries" :
7d40(2): push %r15
7d42(2): push %r14
7d44(2): push %r13
7d46(2): push %r12
7d48(1): push %rbp
7d49(1): push %rbx
7d4a(4): sub $0x8,%rsp
7d4e(3): mov (%rsi),%r12
7d51(4): cmp 0x8(%rsi),%r12
7d55(6): jnb 0xe3(%rip)
7d5b(3): mov %rdi,%rbp
7d5e(3): mov %rsi,%r13
7d61(3): mov %edx,%r14d
7d64(4): nop 0x0(%rax)
7d68(4): mov (%r12),%r15
7d6c(3): test %r15,%r15
7d6f(6): jz 0xbb(%rip)
7d75(5): mov 0x8(%r12),%rbx
7d7a(3): test %rbx,%rbx
7d7d(2): jnz 0x1f(%rip)
7d7f(2): jmp 0x5c(%rip)
7d81(7): nop 0x0(%rax)
7d88(4): mov 0x8(%rax),%rcx
7d8c(3): test %rdx,%rdx
7d8f(4): mov %rcx,0x8(%rbx)
7d93(4): mov %rbx,0x8(%rax)
7d97(3): mov %rdx,%rbx
7d9a(2): jz 0x3d(%rip)
7d9c(3): mov (%rbx),%r15
7d9f(3): mov %rbp,%rdi
7da2(3): mov %r15,%rsi
7da5(5): call 0xfffffdcb(%rip)
7daa(4): cmp $0x0,(%rax)
7dae(4): mov 0x8(%rbx),%rdx
7db2(2): jnz 0xffffffd6(%rip)
7db4(3): mov %r15,(%rax)
7db7(5): add $0x1,0x18(%rbp)
7dbc(3): test %rdx,%rdx
7dbf(7): mov $0x0,(%rbx)
7dc6(4): mov 0x48(%rbp),%rax
7dca(4): mov %rax,0x8(%rbx)
7dce(4): mov %rbx,0x48(%rbp)
7dd2(3): mov %rdx,%rbx
7dd5(2): jnz 0xffffffc7(%rip)
7dd7(4): mov (%r12),%r15
7ddb(3): test %r14b,%r14b
7dde(9): mov $0x0,0x8(%r12)
7de7(2): jnz 0x43(%rip)
7de9(3): mov %r15,%rsi
7dec(3): mov %rbp,%rdi
7def(5): call 0xfffffd81(%rip)
7df4(4): cmp $0x0,(%rax)
7df8(3): mov %rax,%rbx
7dfb(2): jz 0x55(%rip)
7dfd(4): mov 0x48(%rbp),%rax
7e01(3): test %rax,%rax
7e04(2): jz 0x5c(%rip)
7e06(4): mov 0x8(%rax),%rdx
7e0a(4): mov %rdx,0x48(%rbp)
7e0e(4): mov 0x8(%rbx),%rdx
7e12(3): mov %r15,(%rax)
7e15(4): mov %rdx,0x8(%rax)
7e19(4): mov %rax,0x8(%rbx)
7e1d(8): mov $0x0,(%r12)
7e25(5): sub $0x1,0x18(%r13)
7e2a(4): add $0x10,%r12
7e2e(4): cmp %r12,0x8(%r13)
7e32(6): jnbe 0xffffff36(%rip)
7e38(4): add $0x8,%rsp
7e3c(5): mov $0x1,%eax
7e41(1): pop %rbx
7e42(1): pop %rbp
7e43(2): pop %r12
7e45(2): pop %r13
7e47(2): pop %r14
7e49(2): pop %r15
7e4b(1): ret near (%rsp)
7e4c(4): nop 0x0(%rax)
7e50(3): mov %r15,(%rax)
7e53(5): add $0x1,0x18(%rbp)
7e58(2): jmp 0xffffffc5(%rip)
7e5a(6): nop 0x0(%rax,%rax,1)
7e60(5): mov $0x10,%edi
7e65(5): call 0xffff9ddb(%rip)
7e6a(3): test %rax,%rax
7e6d(2): jnz 0xffffffa1(%rip)
7e6f(4): add $0x8,%rsp
7e73(2): xor %eax,%eax
7e75(1): pop %rbx
7e76(1): pop %rbp
7e77(2): pop %r12
7e79(2): pop %r13
7e7b(2): pop %r14
7e7d(2): pop %r15
7e7f(1): ret near (%rsp)

"hash_get_n_buckets" :
7e80(4): mov 0x10(%rdi),%rax
7e84(1): ret near (%rsp)

"hash_get_n_buckets_used" :
7e90(4): mov 0x18(%rdi),%rax
7e94(1): ret near (%rsp)

"hash_get_n_entries" :
7ea0(4): mov 0x20(%rdi),%rax
7ea4(1): ret near (%rsp)

"hash_get_max_bucket_length" :
7eb0(3): mov (%rdi),%rsi
7eb3(4): mov 0x8(%rdi),%rdi
7eb7(2): xor %eax,%eax
7eb9(3): cmp %rdi,%rsi
7ebc(2): jnb 0x3b(%rip)
7ebe(2): nop 
7ec0(4): cmp $0x0,(%rsi)
7ec4(2): jz 0x28(%rip)
7ec6(4): mov 0x8(%rsi),%rdx
7eca(5): mov $0x1,%ecx
7ecf(3): test %rdx,%rdx
7ed2(2): jz 0x13(%rip)
7ed4(4): nop 0x0(%rax)
7ed8(4): mov 0x8(%rdx),%rdx
7edc(4): add $0x1,%rcx
7ee0(3): test %rdx,%rdx
7ee3(2): jnz 0xfffffff5(%rip)
7ee5(3): cmp %rcx,%rax
7ee8(4): cmovnae %rcx,%rax
7eec(4): add $0x10,%rsi
7ef0(3): cmp %rdi,%rsi
7ef3(2): jb 0xffffffcd(%rip)
7ef5(2): REP ret near (%rsp)
7ef7(2): REP ret near (%rsp)

"hash_table_ok" :
7f00(3): mov (%rdi),%rcx
7f03(4): mov 0x8(%rdi),%r8
7f07(2): xor %edx,%edx
7f09(2): xor %esi,%esi
7f0b(3): cmp %r8,%rcx
7f0e(2): jnb 0x38(%rip)
7f10(4): cmp $0x0,(%rcx)
7f14(2): jz 0x29(%rip)
7f16(4): mov 0x8(%rcx),%rax
7f1a(4): add $0x1,%rsi
7f1e(4): add $0x1,%rdx
7f22(3): test %rax,%rax
7f25(2): jz 0x18(%rip)
7f27(9): nop 0x0(%rax,%rax,1)
7f30(4): mov 0x8(%rax),%rax
7f34(4): add $0x1,%rdx
7f38(3): test %rax,%rax
7f3b(2): jnz 0xfffffff5(%rip)
7f3d(4): add $0x10,%rcx
7f41(3): cmp %r8,%rcx
7f44(2): jb 0xffffffcc(%rip)
7f46(2): xor %eax,%eax
7f48(4): cmp %rsi,0x18(%rdi)
7f4c(2): jz 0x4(%rip)
7f4e(2): REP ret near (%rsp)
7f50(4): cmp %rdx,0x20(%rdi)
7f54(3): setz %al
7f57(1): ret near (%rsp)

"hash_print_statistics" :
7f60(2): push %r13
7f62(2): push %r12
7f64(3): mov %rsi,%r12
7f67(1): push %rbp
7f68(1): push %rbx
7f69(2): xor %ebx,%ebx
7f6b(4): sub $0x8,%rsp
7f6f(3): mov (%rdi),%rsi
7f72(4): mov 0x20(%rdi),%rcx
7f76(4): mov 0x10(%rdi),%rbp
7f7a(4): mov 0x18(%rdi),%r13
7f7e(4): mov 0x8(%rdi),%rdi
7f82(3): cmp %rdi,%rsi
7f85(2): jnb 0x40(%rip)
7f87(9): nop 0x0(%rax,%rax,1)
7f90(4): cmp $0x0,(%rsi)
7f94(2): jz 0x28(%rip)
7f96(4): mov 0x8(%rsi),%rax
7f9a(5): mov $0x1,%edx
7f9f(3): test %rax,%rax
7fa2(2): jz 0x13(%rip)
7fa4(4): nop 0x0(%rax)
7fa8(4): mov 0x8(%rax),%rax
7fac(4): add $0x1,%rdx
7fb0(3): test %rax,%rax
7fb3(2): jnz 0xfffffff5(%rip)
7fb5(3): cmp %rdx,%rbx
7fb8(4): cmovnae %rdx,%rbx
7fbc(4): add $0x10,%rsi
7fc0(3): cmp %rdi,%rsi
7fc3(2): jb 0xffffffcd(%rip)
7fc5(7): lea 0x226f(%rip),%rdx
7fcc(5): mov $0x1,%esi
7fd1(3): mov %r12,%rdi
7fd4(2): xor %eax,%eax
7fd6(5): call 0xffff9dba(%rip)
7fdb(7): lea 0x2271(%rip),%rdx
7fe2(2): xor %eax,%eax
7fe4(3): mov %rbp,%rcx
7fe7(5): mov $0x1,%esi
7fec(3): mov %r12,%rdi
7fef(5): call 0xffff9da1(%rip)
7ff4(3): test %r13,%r13
7ff7(2): js 0x69(%rip)
7ff9(4): pxor %xmm0,%xmm0
7ffd(3): test %rbp,%rbp
8000(5): cvtsi2sd %r13,%xmm0
8005(8): mulsd 0x22db(%rip),%xmm0
800d(2): js 0x7c(%rip)
800f(4): pxor %xmm1,%xmm1
8013(5): cvtsi2sd %rbp,%xmm1
8018(4): divsd %xmm1,%xmm0
801c(7): lea 0x2265(%rip),%rdx
8023(3): mov %r13,%rcx
8026(3): mov %r12,%rdi
8029(5): mov $0x1,%esi
802e(5): mov $0x1,%eax
8033(5): call 0xffff9d5d(%rip)
8038(4): add $0x8,%rsp
803c(3): mov %rbx,%rcx
803f(3): mov %r12,%rdi
8042(1): pop %rbx
8043(1): pop %rbp
8044(2): pop %r12
8046(2): pop %r13
8048(7): lea 0x221c(%rip),%rdx
804f(5): mov $0x1,%esi
8054(2): xor %eax,%eax
8056(5): jmp 0xffff9d3a(%rip)
805b(5): nop 0x0(%rax,%rax,1)
8060(3): mov %r13,%rax
8063(3): mov %r13,%rdx
8066(4): pxor %xmm0,%xmm0
806a(3): shr $0x1,%rax
806d(3): and $0x1,%edx
8070(3): or %rdx,%rax
8073(3): test %rbp,%rbp
8076(5): cvtsi2sd %rax,%xmm0
807b(4): addsd %xmm0,%xmm0
807f(8): mulsd 0x2261(%rip),%xmm0
8087(2): jns 0xffffff88(%rip)
8089(3): mov %rbp,%rax
808c(4): pxor %xmm1,%xmm1
8090(3): shr $0x1,%rax
8093(3): and $0x1,%ebp
8096(3): or %rbp,%rax
8099(5): cvtsi2sd %rax,%xmm1
809e(4): addsd %xmm1,%xmm1
80a2(5): jmp 0xffffff76(%rip)

"hash_lookup" :
80b0(2): push %r12
80b2(1): push %rbp
80b3(3): mov %rdi,%r12
80b6(1): push %rbx
80b7(3): mov %rsi,%rbp
80ba(5): call 0xfffffab6(%rip)
80bf(3): mov (%rax),%rsi
80c2(3): test %rsi,%rsi
80c5(2): jz 0x28(%rip)
80c7(3): mov %rax,%rbx
80ca(2): jmp 0x9(%rip)
80cc(4): nop 0x0(%rax)
80d0(3): mov (%rbx),%rsi
80d3(3): cmp %rbp,%rsi
80d6(2): jz 0x19(%rip)
80d8(3): mov %rbp,%rdi
80db(5): call 0x38(%r12)
80e0(2): test %al,%al
80e2(2): jnz 0x1e(%rip)
80e4(4): mov 0x8(%rbx),%rbx
80e8(3): test %rbx,%rbx
80eb(2): jnz 0xffffffe5(%rip)
80ed(2): xor %esi,%esi
80ef(1): pop %rbx
80f0(3): mov %rsi,%rax
80f3(1): pop %rbp
80f4(2): pop %r12
80f6(1): ret near (%rsp)
80f7(9): nop 0x0(%rax,%rax,1)
8100(3): mov (%rbx),%rsi
8103(1): pop %rbx
8104(1): pop %rbp
8105(3): mov %rsi,%rax
8108(2): pop %r12
810a(1): ret near (%rsp)

"hash_get_first" :
8110(5): cmp $0x0,0x20(%rdi)
8115(2): jz 0x2e(%rip)
8117(3): mov (%rdi),%rdx
811a(4): mov 0x8(%rdi),%rcx
811e(3): cmp %rcx,%rdx
8121(2): jnb 0x27(%rip)
8123(3): mov (%rdx),%rax
8126(3): test %rax,%rax
8129(2): jnz 0x1d(%rip)
812b(5): nop 0x0(%rax,%rax,1)
8130(4): add $0x10,%rdx
8134(3): cmp %rcx,%rdx
8137(2): jnb 0x11(%rip)
8139(3): mov (%rdx),%rax
813c(3): test %rax,%rax
813f(2): jz 0xfffffff1(%rip)
8141(2): REP ret near (%rsp)
8143(2): xor %eax,%eax
8145(1): ret near (%rsp)
8146(2): REP ret near (%rsp)
8148(4): sub $0x8,%rsp
814c(5): call 0xffff9854(%rip)

"hash_get_next" :
8160(1): push %rbp
8161(1): push %rbx
8162(3): mov %rdi,%rbp
8165(3): mov %rsi,%rbx
8168(4): sub $0x8,%rsp
816c(5): call 0xfffffa04(%rip)
8171(3): mov %rax,%rdx
8174(3): mov %rax,%rcx
8177(3): mov (%rdx),%rax
817a(4): mov 0x8(%rdx),%rdx
817e(3): cmp %rbx,%rax
8181(2): jz 0x18(%rip)
8183(5): nop 0x0(%rax,%rax,1)
8188(3): test %rdx,%rdx
818b(2): jz 0x13(%rip)
818d(3): mov (%rdx),%rax
8190(4): mov 0x8(%rdx),%rdx
8194(3): cmp %rbx,%rax
8197(2): jnz 0xfffffff1(%rip)
8199(3): test %rdx,%rdx
819c(2): jnz 0x2c(%rip)
819e(4): mov 0x8(%rbp),%rdx
81a2(2): jmp 0xe(%rip)
81a4(4): nop 0x0(%rax)
81a8(3): mov (%rcx),%rax
81ab(3): test %rax,%rax
81ae(2): jnz 0xd(%rip)
81b0(4): add $0x10,%rcx
81b4(3): cmp %rcx,%rdx
81b7(2): jnbe 0xfffffff1(%rip)
81b9(2): xor %eax,%eax
81bb(4): add $0x8,%rsp
81bf(1): pop %rbx
81c0(1): pop %rbp
81c1(1): ret near (%rsp)
81c2(6): nop 0x0(%rax,%rax,1)
81c8(3): mov (%rdx),%rax
81cb(4): add $0x8,%rsp
81cf(1): pop %rbx
81d0(1): pop %rbp
81d1(1): ret near (%rsp)

"hash_get_entries" :
81e0(3): mov (%rdi),%r9
81e3(4): cmp %r9,0x8(%rdi)
81e7(2): jbe 0x5b(%rip)
81e9(3): xor %r8d,%r8d
81ec(3): mov (%r9),%rcx
81ef(3): test %rcx,%rcx
81f2(2): jz 0x3b(%rip)
81f4(3): cmp %r8,%rdx
81f7(2): jbe 0x40(%rip)
81f9(4): mov %rcx,0x0(%rsi,%r8,8)
81fd(4): mov 0x8(%r9),%rcx
8201(4): lea 0x1(%r8),%rax
8205(3): test %rcx,%rcx
8208(2): jz 0x22(%rip)
820a(6): nop 0x0(%rax,%rax,1)
8210(3): cmp %rax,%rdx
8213(2): jz 0x2d(%rip)
8215(3): mov (%rcx),%r8
8218(4): add $0x1,%rax
821c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
8221(4): mov 0x8(%rcx),%rcx
8225(3): test %rcx,%rcx
8228(2): jnz 0xffffffe8(%rip)
822a(3): mov %rax,%r8
822d(4): add $0x10,%r9
8231(4): cmp %r9,0x8(%rdi)
8235(2): jnbe 0xffffffb7(%rip)
8237(3): mov %r8,%rax
823a(1): ret near (%rsp)
823b(5): nop 0x0(%rax,%rax,1)
8240(2): REP ret near (%rsp)
8242(2): xor %eax,%eax
8244(1): ret near (%rsp)

"hash_do_for_each" :
8250(2): push %r15
8252(2): push %r14
8254(2): push %r13
8256(2): push %r12
8258(1): push %rbp
8259(1): push %rbx
825a(4): sub $0x8,%rsp
825e(3): mov (%rdi),%r14
8261(4): cmp %r14,0x8(%rdi)
8265(2): jbe 0x51(%rip)
8267(3): mov %rdx,%r13
826a(3): mov %rsi,%r12
826d(3): mov %rdi,%r15
8270(2): xor %ebp,%ebp
8272(3): mov (%r14),%rdi
8275(3): test %rdi,%rdi
8278(2): jz 0x22(%rip)
827a(3): mov %r14,%rbx
827d(2): jmp 0x6(%rip)
827f(1): nop 
8280(3): mov (%rbx),%rdi
8283(3): mov %r13,%rsi
8286(3): call %r12
8289(2): test %al,%al
828b(2): jz 0x19(%rip)
828d(4): mov 0x8(%rbx),%rbx
8291(4): add $0x1,%rbp
8295(3): test %rbx,%rbx
8298(2): jnz 0xffffffe8(%rip)
829a(4): add $0x10,%r14
829e(4): cmp %r14,0x8(%r15)
82a2(2): jnbe 0xffffffd0(%rip)
82a4(4): add $0x8,%rsp
82a8(3): mov %rbp,%rax
82ab(1): pop %rbx
82ac(1): pop %rbp
82ad(2): pop %r12
82af(2): pop %r13
82b1(2): pop %r14
82b3(2): pop %r15
82b5(1): ret near (%rsp)
82b6(2): xor %ebp,%ebp
82b8(2): jmp 0xffffffec(%rip)

"hash_string" :
82c0(3): movzx (%rdi),%ecx
82c3(2): xor %edx,%edx
82c5(2): test %cl,%cl
82c7(2): jz 0x26(%rip)
82c9(7): nop 0x0(%rax)
82d0(3): mov %rdx,%rax
82d3(4): add $0x1,%rdi
82d7(4): shl/sal $0x5,%rax
82db(3): sub %rdx,%rax
82de(2): xor %edx,%edx
82e0(3): add %rcx,%rax
82e3(3): movzx (%rdi),%ecx
82e6(3): div %rsi,%rax
82e9(2): test %cl,%cl
82eb(2): jnz 0xffffffe5(%rip)
82ed(3): mov %rdx,%rax
82f0(1): ret near (%rsp)

"hash_reset_tuning" :
8300(a): mov $0x4575657221408423936,%rax
830a(4): mov $0x0,0x10(%rdi)
830e(3): mov %rax,(%rdi)
8311(a): mov $0x4590573145673223373,%rax
831b(4): mov %rax,0x8(%rdi)
831f(1): ret near (%rsp)

"hash_initialize" :
8320(2): push %r15
8322(2): push %r14
8324(7): lea 0xfffff825(%rip),%rax
832b(2): push %r13
832d(2): push %r12
832f(3): mov %rdx,%r12
8332(1): push %rbp
8333(1): push %rbx
8334(3): mov %rcx,%r13
8337(3): mov %rdi,%rbp
833a(5): mov $0x50,%edi
833f(3): mov %rsi,%r15
8342(4): sub $0x8,%rsp
8346(3): test %rdx,%rdx
8349(3): mov %r8,%r14
834c(4): cmove %rax,%r12
8350(7): lea 0xfffff809(%rip),%rax
8357(3): test %rcx,%rcx
835a(4): cmove %rax,%r13
835e(5): call 0xffff98e2(%rip)
8363(3): test %rax,%rax
8366(3): mov %rax,%rbx
8369(6): jz 0xb1(%rip)
836f(3): test %r15,%r15
8372(4): lea 0x28(%rax),%rdi
8376(6): jz 0xba(%rip)
837c(4): mov %r15,0x28(%rax)
8380(5): call 0xfffff940(%rip)
8385(2): test %al,%al
8387(6): jz 0x89(%rip)
838d(5): cmp $0x0,0x10(%r15)
8392(6): jz 0xfe(%rip)
8398(3): mov %rbp,%rdi
839b(5): call 0xfffff715(%rip)
83a0(5): mov $0x8,%edx
83a5(3): mov %rax,%rbp
83a8(2): xor %ecx,%ecx
83aa(3): mov %rdx,%rax
83ad(3): mul %rax,%rbp,%rdx
83b0(6): jo 0x11a(%rip)
83b6(3): test %rax,%rax
83b9(2): js 0x57(%rip)
83bb(3): test %rcx,%rcx
83be(2): jnz 0x52(%rip)
83c0(3): test %rbp,%rbp
83c3(4): mov %rbp,0x10(%rbx)
83c7(2): jz 0x49(%rip)
83c9(5): mov $0x10,%esi
83ce(3): mov %rbp,%rdi
83d1(5): call 0xffff981f(%rip)
83d6(3): test %rax,%rax
83d9(3): mov %rax,(%rbx)
83dc(2): jz 0x34(%rip)
83de(4): shl/sal $0x4,%rbp
83e2(8): mov $0x0,0x18(%rbx)
83ea(8): mov $0x0,0x20(%rbx)
83f2(3): add %rax,%rbp
83f5(4): mov %r12,0x30(%rbx)
83f9(4): mov %r13,0x38(%rbx)
83fd(4): mov %rbp,0x8(%rbx)
8401(4): mov %r14,0x40(%rbx)
8405(8): mov $0x0,0x48(%rbx)
840d(2): jmp 0xd(%rip)
840f(1): nop 
8410(3): mov %rbx,%rdi
8413(2): xor %ebx,%ebx
8415(5): call 0xffff99bb(%rip)
841a(4): add $0x8,%rsp
841e(3): mov %rbx,%rax
8421(1): pop %rbx
8422(1): pop %rbp
8423(2): pop %r12
8425(2): pop %r13
8427(2): pop %r14
8429(2): pop %r15
842b(1): ret near (%rsp)
842c(4): nop 0x0(%rax)
8430(7): lea 0x1e79(%rip),%rax
8437(4): mov %rax,0x28(%rbx)
843b(5): call 0xfffff885(%rip)
8440(2): test %al,%al
8442(8): movss 0x1e8e(%rip),%xmm1
844a(2): jz 0xffffffc6(%rip)
844c(3): test %rbp,%rbp
844f(2): js 0x4c(%rip)
8451(4): pxor %xmm0,%xmm0
8455(5): cvtsi2ss %rbp,%xmm0
845a(4): divss %xmm1,%xmm0
845e(7): ucomiss 0x1e77(%rip),%xmm0
8465(2): jnb 0xffffffab(%rip)
8467(7): ucomiss 0x1e72(%rip),%xmm0
846e(2): jb 0x52(%rip)
8470(8): subss 0x1e68(%rip),%xmm0
8478(a): mov $0x-9223372036854775808,%rax
8482(5): cvttss2si %xmm0,%rbp
8487(3): xor %rax,%rbp
848a(5): jmp 0xffffff0e(%rip)
848f(1): nop 
8490(3): test %rbp,%rbp
8493(6): movss 0x8(%r15),%xmm1
8499(2): jns 0xffffffb8(%rip)
849b(3): mov %rbp,%rax
849e(4): pxor %xmm0,%xmm0
84a2(3): shr $0x1,%rax
84a5(3): and $0x1,%ebp
84a8(3): or %rbp,%rax
84ab(5): cvtsi2ss %rax,%xmm0
84b0(4): addss %xmm0,%xmm0
84b4(2): jmp 0xffffffa6(%rip)
84b6(a): nop 0x0(%rax,%rax,1)
84c0(5): cvttss2si %xmm0,%rbp
84c5(5): jmp 0xfffffed3(%rip)
84ca(5): mov $0x1,%ecx
84cf(5): jmp 0xfffffee7(%rip)

"hash_clear" :
84e0(2): push %r12
84e2(1): push %rbp
84e3(3): mov %rdi,%rbp
84e6(1): push %rbx
84e7(3): mov (%rdi),%r12
84ea(4): cmp 0x8(%rdi),%r12
84ee(2): jnb 0x6d(%rip)
84f0(5): cmp $0x0,(%r12)
84f5(2): jz 0x5c(%rip)
84f7(5): mov 0x8(%r12),%rbx
84fc(4): mov 0x40(%rbp),%rax
8500(3): test %rbx,%rbx
8503(2): jz 0x32(%rip)
8505(3): nop (%rax)
8508(3): test %rax,%rax
850b(2): jz 0xb(%rip)
850d(3): mov (%rbx),%rdi
8510(2): call %rax
8512(4): mov 0x40(%rbp),%rax
8516(4): mov 0x8(%rbx),%rdx
851a(4): mov 0x48(%rbp),%rcx
851e(7): mov $0x0,(%rbx)
8525(3): test %rdx,%rdx
8528(4): mov %rcx,0x8(%rbx)
852c(4): mov %rbx,0x48(%rbp)
8530(3): mov %rdx,%rbx
8533(2): jnz 0xffffffd5(%rip)
8535(3): test %rax,%rax
8538(2): jz 0x8(%rip)
853a(4): mov (%r12),%rdi
853e(2): call %rax
8540(8): mov $0x0,(%r12)
8548(9): mov $0x0,0x8(%r12)
8551(4): add $0x10,%r12
8555(4): cmp %r12,0x8(%rbp)
8559(2): jnbe 0xffffff97(%rip)
855b(8): mov $0x0,0x18(%rbp)
8563(8): mov $0x0,0x20(%rbp)
856b(1): pop %rbx
856c(1): pop %rbp
856d(2): pop %r12
856f(1): ret near (%rsp)

"hash_free" :
8570(2): push %r12
8572(1): push %rbp
8573(3): mov %rdi,%r12
8576(1): push %rbx
8577(5): cmp $0x0,0x40(%rdi)
857c(3): mov (%rdi),%rbp
857f(4): mov 0x8(%rdi),%rax
8583(2): jz 0x50(%rip)
8585(5): cmp $0x0,0x20(%rdi)
858a(2): jz 0x49(%rip)
858c(3): cmp %rax,%rbp
858f(2): jnb 0x7d(%rip)
8591(7): nop 0x0(%rax)
8598(4): mov 0x0(%rbp),%rdi
859c(3): test %rdi,%rdi
859f(2): jz 0x27(%rip)
85a1(3): mov %rbp,%rbx
85a4(2): jmp 0xf(%rip)
85a6(a): nop 0x0(%rax,%rax,1)
85b0(3): mov (%rbx),%rdi
85b3(5): call 0x40(%r12)
85b8(4): mov 0x8(%rbx),%rbx
85bc(3): test %rbx,%rbx
85bf(2): jnz 0xfffffff1(%rip)
85c1(5): mov 0x8(%r12),%rax
85c6(4): add $0x10,%rbp
85ca(3): cmp %rbp,%rax
85cd(2): jnbe 0xffffffcb(%rip)
85cf(4): mov (%r12),%rbp
85d3(3): cmp %rax,%rbp
85d6(2): jnb 0x36(%rip)
85d8(8): nop 0x0(%rax,%rax,1)
85e0(4): mov 0x8(%rbp),%rdi
85e4(3): test %rdi,%rdi
85e7(2): jz 0x1a(%rip)
85e9(7): nop 0x0(%rax)
85f0(4): mov 0x8(%rdi),%rbx
85f4(5): call 0xffff97dc(%rip)
85f9(3): test %rbx,%rbx
85fc(3): mov %rbx,%rdi
85ff(2): jnz 0xfffffff1(%rip)
8601(4): add $0x10,%rbp
8605(5): cmp %rbp,0x8(%r12)
860a(2): jnbe 0xffffffd6(%rip)
860c(5): mov 0x48(%r12),%rdi
8611(3): test %rdi,%rdi
8614(2): jz 0x1d(%rip)
8616(a): nop 0x0(%rax,%rax,1)
8620(4): mov 0x8(%rdi),%rbx
8624(5): call 0xffff97ac(%rip)
8629(3): test %rbx,%rbx
862c(3): mov %rbx,%rdi
862f(2): jnz 0xfffffff1(%rip)
8631(4): mov (%r12),%rdi
8635(5): call 0xffff979b(%rip)
863a(1): pop %rbx
863b(3): mov %r12,%rdi
863e(1): pop %rbp
863f(2): pop %r12
8641(5): jmp 0xffff978f(%rip)

"hash_rehash" :
8650(2): push %r12
8652(1): push %rbp
8653(3): mov %rdi,%rbp
8656(1): push %rbx
8657(4): sub $0x60,%rsp
865b(4): mov 0x28(%rdi),%r12
865f(9): mov $0x28,%rax
8668(5): mov %rax,0x58(%rsp)
866d(2): xor %eax,%eax
866f(6): cmp $0x0,0x10(%r12)
8675(2): jnz 0x53(%rip)
8677(3): test %rsi,%rsi
867a(6): js 0x17e(%rip)
8680(4): pxor %xmm0,%xmm0
8684(5): cvtsi2ss %rsi,%xmm0
8689(7): divss 0x8(%r12),%xmm0
8690(7): ucomiss 0x1c45(%rip),%xmm0
8697(6): jnb 0x139(%rip)
869d(7): ucomiss 0x1c3c(%rip),%xmm0
86a4(6): jb 0x17c(%rip)
86aa(8): subss 0x1c2e(%rip),%xmm0
86b2(a): mov $0x-9223372036854775808,%rax
86bc(5): cvttss2si %xmm0,%rsi
86c1(3): xor %rax,%rsi
86c4(4): nop 0x0(%rax)
86c8(3): mov %rsi,%rdi
86cb(5): call 0xfffff3e5(%rip)
86d0(5): mov $0x8,%edx
86d5(3): mov %rax,%rbx
86d8(2): xor %ecx,%ecx
86da(3): mov %rdx,%rax
86dd(3): mul %rax,%rbx,%rdx
86e0(6): jo 0x19f(%rip)
86e6(3): test %rax,%rax
86e9(5): mov $0x1,%eax
86ee(4): cmovs %rax,%rcx
86f2(3): test %rbx,%rbx
86f5(6): jz 0xdb(%rip)
86fb(3): and $0x1,%ecx
86fe(6): jnz 0xd2(%rip)
8704(4): cmp %rbx,0x10(%rbp)
8708(6): jz 0x128(%rip)
870e(5): mov $0x10,%esi
8713(3): mov %rbx,%rdi
8716(5): call 0xffff94da(%rip)
871b(3): test %rax,%rax
871e(4): mov %rax,(%rsp)
8722(6): jz 0xae(%rip)
8728(5): mov %rbx,0x10(%rsp)
872d(4): shl/sal $0x4,%rbx
8731(5): mov %r12,0x28(%rsp)
8736(3): add %rax,%rbx
8739(4): mov 0x30(%rbp),%rax
873d(3): mov %rsp,%r12
8740(2): xor %edx,%edx
8742(3): mov %rbp,%rsi
8745(3): mov %r12,%rdi
8748(5): mov %rbx,0x8(%rsp)
874d(9): mov $0x0,0x18(%rsp)
8756(5): mov %rax,0x30(%rsp)
875b(4): mov 0x38(%rbp),%rax
875f(9): mov $0x0,0x20(%rsp)
8768(5): mov %rax,0x38(%rsp)
876d(4): mov 0x40(%rbp),%rax
8771(5): mov %rax,0x40(%rsp)
8776(4): mov 0x48(%rbp),%rax
877a(5): mov %rax,0x48(%rsp)
877f(5): call 0xfffff5c1(%rip)
8784(2): test %al,%al
8786(2): mov %eax,%ebx
8788(6): jnz 0xb8(%rip)
878e(5): mov 0x48(%rsp),%rax
8793(5): mov $0x1,%edx
8798(3): mov %r12,%rsi
879b(3): mov %rbp,%rdi
879e(4): mov %rax,0x48(%rbp)
87a2(5): call 0xfffff59e(%rip)
87a7(2): test %al,%al
87a9(6): jz 0xe0(%rip)
87af(2): xor %edx,%edx
87b1(3): mov %r12,%rsi
87b4(3): mov %rbp,%rdi
87b7(5): call 0xfffff589(%rip)
87bc(2): test %al,%al
87be(6): jz 0xcb(%rip)
87c4(4): mov (%rsp),%rdi
87c8(5): call 0xffff9608(%rip)
87cd(2): jmp 0x5(%rip)
87cf(1): nop 
87d0(2): xor %ebx,%ebx
87d2(5): mov 0x58(%rsp),%rcx
87d7(9): xor $0x28,%rcx
87e0(2): mov %ebx,%eax
87e2(6): jnz 0x98(%rip)
87e8(4): add $0x60,%rsp
87ec(1): pop %rbx
87ed(1): pop %rbp
87ee(2): pop %r12
87f0(1): ret near (%rsp)
87f1(7): nop 0x0(%rax)
87f8(3): mov %rsi,%rax
87fb(4): pxor %xmm0,%xmm0
87ff(3): shr $0x1,%rax
8802(3): and $0x1,%esi
8805(3): or %rsi,%rax
8808(5): cvtsi2ss %rax,%xmm0
880d(4): addss %xmm0,%xmm0
8811(5): jmp 0xfffffe78(%rip)
8816(a): nop 0x0(%rax,%rax,1)
8820(5): cvttss2si %xmm0,%rsi
8825(5): jmp 0xfffffea3(%rip)
882a(6): nop 0x0(%rax,%rax,1)
8830(5): mov $0x1,%ebx
8835(2): jmp 0xffffff9d(%rip)
8837(9): nop 0x0(%rax,%rax,1)
8840(4): mov 0x0(%rbp),%rdi
8844(5): call 0xffff958c(%rip)
8849(4): mov (%rsp),%rax
884d(4): mov %rax,0x0(%rbp)
8851(5): mov 0x8(%rsp),%rax
8856(4): mov %rax,0x8(%rbp)
885a(5): mov 0x10(%rsp),%rax
885f(4): mov %rax,0x10(%rbp)
8863(5): mov 0x18(%rsp),%rax
8868(4): mov %rax,0x18(%rbp)
886c(5): mov 0x48(%rsp),%rax
8871(4): mov %rax,0x48(%rbp)
8875(5): jmp 0xffffff5d(%rip)
887a(5): call 0xffff9256(%rip)
887f(5): mov $0x1,%ecx
8884(5): jmp 0xfffffe62(%rip)
8889(5): call 0xffff9117(%rip)

"hash_insert_if_absent" :
8890(2): push %r13
8892(2): push %r12
8894(1): push %rbp
8895(1): push %rbx
8896(4): sub $0x18,%rsp
889a(9): mov $0x28,%rax
88a3(5): mov %rax,0x8(%rsp)
88a8(2): xor %eax,%eax
88aa(3): test %rsi,%rsi
88ad(6): jz 0x1c0(%rip)
88b3(3): mov %rsp,%r12
88b6(2): xor %ecx,%ecx
88b8(3): mov %rdx,%r13
88bb(3): mov %r12,%rdx
88be(3): mov %rdi,%rbx
88c1(3): mov %rsi,%rbp
88c4(5): call 0xfffff2dc(%rip)
88c9(3): test %rax,%rax
88cc(3): mov %rax,%rdx
88cf(2): jz 0x31(%rip)
88d1(2): xor %eax,%eax
88d3(3): test %r13,%r13
88d6(2): jz 0x6(%rip)
88d8(4): mov %rdx,0x0(%r13)
88dc(5): mov 0x8(%rsp),%rcx
88e1(9): xor $0x28,%rcx
88ea(6): jnz 0x225(%rip)
88f0(4): add $0x18,%rsp
88f4(1): pop %rbx
88f5(1): pop %rbp
88f6(2): pop %r12
88f8(2): pop %r13
88fa(1): ret near (%rsp)
88fb(5): nop 0x0(%rax,%rax,1)
8900(4): mov 0x18(%rbx),%rax
8904(3): test %rax,%rax
8907(2): js 0x79(%rip)
8909(4): pxor %xmm1,%xmm1
890d(4): mov 0x28(%rbx),%rdx
8911(5): cvtsi2ss %rax,%xmm1
8916(4): mov 0x10(%rbx),%rax
891a(3): test %rax,%rax
891d(6): js 0x8d(%rip)
8923(4): pxor %xmm0,%xmm0
8927(5): cvtsi2ss %rax,%xmm0
892c(5): mulss 0x8(%rdx),%xmm0
8931(3): ucomiss %xmm0,%xmm1
8934(6): jnbe 0x9c(%rip)
893a(4): mov (%rsp),%r12
893e(5): cmp $0x0,(%r12)
8943(6): jz 0x135(%rip)
8949(4): mov 0x48(%rbx),%rax
894d(3): test %rax,%rax
8950(6): jz 0x140(%rip)
8956(4): mov 0x8(%rax),%rdx
895a(4): mov %rdx,0x48(%rbx)
895e(5): mov 0x8(%r12),%rdx
8963(3): mov %rbp,(%rax)
8966(4): mov %rdx,0x8(%rax)
896a(5): mov %rax,0x8(%r12)
896f(5): mov $0x1,%eax
8974(5): add $0x1,0x20(%rbx)
8979(5): jmp 0xffffff63(%rip)
897e(2): nop 
8980(3): mov %rax,%rdx
8983(4): pxor %xmm1,%xmm1
8987(3): and $0x1,%eax
898a(3): shr $0x1,%rdx
898d(3): or %rax,%rdx
8990(4): mov 0x10(%rbx),%rax
8994(5): cvtsi2ss %rdx,%xmm1
8999(4): mov 0x28(%rbx),%rdx
899d(3): test %rax,%rax
89a0(4): addss %xmm1,%xmm1
89a4(6): jns 0xffffff7f(%rip)
89aa(3): mov %rax,%rcx
89ad(4): pxor %xmm0,%xmm0
89b1(3): shr $0x1,%rcx
89b4(3): and $0x1,%eax
89b7(3): or %rax,%rcx
89ba(5): cvtsi2ss %rcx,%xmm0
89bf(4): addss %xmm0,%xmm0
89c3(5): jmp 0xffffff69(%rip)
89c8(8): nop 0x0(%rax,%rax,1)
89d0(4): lea 0x28(%rbx),%rdi
89d4(5): call 0xfffff2ec(%rip)
89d9(4): mov 0x10(%rbx),%rax
89dd(4): mov 0x28(%rbx),%rdx
89e1(3): test %rax,%rax
89e4(5): movss 0x8(%rdx),%xmm2
89e9(6): js 0xc7(%rip)
89ef(4): pxor %xmm0,%xmm0
89f3(5): cvtsi2ss %rax,%xmm0
89f8(4): mov 0x18(%rbx),%rax
89fc(3): test %rax,%rax
89ff(6): js 0xd1(%rip)
8a05(4): pxor %xmm1,%xmm1
8a09(5): cvtsi2ss %rax,%xmm1
8a0e(3): movaps %xmm2,%xmm3
8a11(4): mulss %xmm0,%xmm3
8a15(3): ucomiss %xmm3,%xmm1
8a18(6): jbe 0xffffff22(%rip)
8a1e(4): cmp $0x0,0x10(%rdx)
8a22(5): mulss 0xc(%rdx),%xmm0
8a27(2): jnz 0x6(%rip)
8a29(4): mulss %xmm2,%xmm0
8a2d(7): ucomiss 0x18a8(%rip),%xmm0
8a34(2): jnb 0x6f(%rip)
8a36(7): ucomiss 0x18a3(%rip),%xmm0
8a3d(6): jnb 0xb3(%rip)
8a43(5): cvttss2si %xmm0,%rsi
8a48(3): mov %rbx,%rdi
8a4b(5): call 0xfffffc05(%rip)
8a50(2): test %al,%al
8a52(2): jz 0x51(%rip)
8a54(2): xor %ecx,%ecx
8a56(3): mov %r12,%rdx
8a59(3): mov %rbp,%rsi
8a5c(3): mov %rbx,%rdi
8a5f(5): call 0xfffff141(%rip)
8a64(3): test %rax,%rax
8a67(6): jz 0xfffffed3(%rip)
8a6d(5): call 0xffff8f33(%rip)
8a72(6): nop 0x0(%rax,%rax,1)
8a78(4): mov %rbp,(%r12)
8a7c(5): mov $0x1,%eax
8a81(5): add $0x1,0x20(%rbx)
8a86(5): add $0x1,0x18(%rbx)
8a8b(5): jmp 0xfffffe51(%rip)
8a90(5): mov $0x10,%edi
8a95(5): call 0xffff91ab(%rip)
8a9a(3): test %rax,%rax
8a9d(6): jnz 0xfffffec1(%rip)
8aa3(5): mov $0xffffffff,%eax
8aa8(5): jmp 0xfffffe34(%rip)
8aad(3): nop (%rax)
8ab0(3): mov %rax,%rcx
8ab3(4): pxor %xmm0,%xmm0
8ab7(3): shr $0x1,%rcx
8aba(3): and $0x1,%eax
8abd(3): or %rax,%rcx
8ac0(5): cvtsi2ss %rcx,%xmm0
8ac5(4): addss %xmm0,%xmm0
8ac9(5): jmp 0xffffff2f(%rip)
8ace(2): nop 
8ad0(3): mov %rax,%rcx
8ad3(4): pxor %xmm1,%xmm1
8ad7(3): shr $0x1,%rcx
8ada(3): and $0x1,%eax
8add(3): or %rax,%rcx
8ae0(5): cvtsi2ss %rcx,%xmm1
8ae5(4): addss %xmm1,%xmm1
8ae9(5): jmp 0xffffff25(%rip)
8aee(2): nop 
8af0(8): subss 0x17e8(%rip),%xmm0
8af8(a): mov $0x-9223372036854775808,%rax
8b02(5): cvttss2si %xmm0,%rsi
8b07(3): xor %rax,%rsi
8b0a(5): jmp 0xffffff3e(%rip)
8b0f(5): call 0xffff8fc1(%rip)

"hash_insert" :
8b20(1): push %rbx
8b21(3): mov %rsi,%rbx
8b24(4): sub $0x10,%rsp
8b28(3): mov %rsp,%rdx
8b2b(9): mov $0x28,%rax
8b34(5): mov %rax,0x8(%rsp)
8b39(2): xor %eax,%eax
8b3b(5): call 0xfffffd55(%rip)
8b40(3): cmp $0xff,%eax
8b43(2): jz 0x2d(%rip)
8b45(2): test %eax,%eax
8b47(2): jnz 0x6(%rip)
8b49(4): mov (%rsp),%rbx
8b4d(5): mov 0x8(%rsp),%rcx
8b52(9): xor $0x28,%rcx
8b5b(3): mov %rbx,%rax
8b5e(2): jnz 0x16(%rip)
8b60(4): add $0x10,%rsp
8b64(1): pop %rbx
8b65(1): ret near (%rsp)
8b66(a): nop 0x0(%rax,%rax,1)
8b70(2): xor %ebx,%ebx
8b72(2): jmp 0xffffffdb(%rip)
8b74(5): call 0xffff8f5c(%rip)

"hash_delete" :
8b80(2): push %r12
8b82(1): push %rbp
8b83(5): mov $0x1,%ecx
8b88(1): push %rbx
8b89(3): mov %rdi,%rbx
8b8c(4): sub $0x10,%rsp
8b90(3): mov %rsp,%rdx
8b93(9): mov $0x28,%rax
8b9c(5): mov %rax,0x8(%rsp)
8ba1(2): xor %eax,%eax
8ba3(5): call 0xffffeffd(%rip)
8ba8(3): test %rax,%rax
8bab(3): mov %rax,%rbp
8bae(2): jz 0x11(%rip)
8bb0(4): mov (%rsp),%rax
8bb4(5): sub $0x1,0x20(%rbx)
8bb9(4): cmp $0x0,(%rax)
8bbd(2): jz 0x23(%rip)
8bbf(5): mov 0x8(%rsp),%rcx
8bc4(9): xor $0x28,%rcx
8bcd(3): mov %rbp,%rax
8bd0(6): jnz 0x1ae(%rip)
8bd6(4): add $0x10,%rsp
8bda(1): pop %rbx
8bdb(1): pop %rbp
8bdc(2): pop %r12
8bde(1): ret near (%rsp)
8bdf(1): nop 
8be0(4): mov 0x18(%rbx),%rax
8be4(4): sub $0x1,%rax
8be8(3): test %rax,%rax
8beb(4): mov %rax,0x18(%rbx)
8bef(6): js 0x101(%rip)
8bf5(4): pxor %xmm0,%xmm0
8bf9(5): cvtsi2ss %rax,%xmm0
8bfe(4): mov 0x10(%rbx),%rax
8c02(4): mov 0x28(%rbx),%rdx
8c06(3): test %rax,%rax
8c09(6): js 0xc7(%rip)
8c0f(4): pxor %xmm1,%xmm1
8c13(5): cvtsi2ss %rax,%xmm1
8c18(4): mulss (%rdx),%xmm1
8c1c(3): ucomiss %xmm0,%xmm1
8c1f(2): jbe 0xffffffa0(%rip)
8c21(4): lea 0x28(%rbx),%rdi
8c25(5): call 0xfffff09b(%rip)
8c2a(4): mov 0x10(%rbx),%rax
8c2e(4): mov 0x28(%rbx),%rdx
8c32(3): test %rax,%rax
8c35(6): js 0x12b(%rip)
8c3b(4): pxor %xmm0,%xmm0
8c3f(5): cvtsi2ss %rax,%xmm0
8c44(4): mov 0x18(%rbx),%rax
8c48(3): test %rax,%rax
8c4b(6): js 0xf5(%rip)
8c51(4): pxor %xmm1,%xmm1
8c55(5): cvtsi2ss %rax,%xmm1
8c5a(4): movss (%rdx),%xmm2
8c5e(4): mulss %xmm0,%xmm2
8c62(3): ucomiss %xmm1,%xmm2
8c65(6): jbe 0xffffff5a(%rip)
8c6b(4): cmp $0x0,0x10(%rdx)
8c6f(5): mulss 0x4(%rdx),%xmm0
8c74(6): jz 0xbc(%rip)
8c7a(7): ucomiss 0x165f(%rip),%xmm0
8c81(6): jnb 0x8f(%rip)
8c87(5): cvttss2si %xmm0,%rsi
8c8c(3): mov %rbx,%rdi
8c8f(5): call 0xfffff9c1(%rip)
8c94(2): test %al,%al
8c96(6): jnz 0xffffff29(%rip)
8c9c(4): mov 0x48(%rbx),%rdi
8ca0(3): test %rdi,%rdi
8ca3(2): jz 0x16(%rip)
8ca5(3): nop (%rax)
8ca8(4): mov 0x8(%rdi),%r12
8cac(5): call 0xffff9124(%rip)
8cb1(3): test %r12,%r12
8cb4(3): mov %r12,%rdi
8cb7(2): jnz 0xfffffff1(%rip)
8cb9(8): mov $0x0,0x48(%rbx)
8cc1(5): jmp 0xfffffefe(%rip)
8cc6(a): nop 0x0(%rax,%rax,1)
8cd0(3): mov %rax,%rcx
8cd3(4): pxor %xmm1,%xmm1
8cd7(3): shr $0x1,%rcx
8cda(3): and $0x1,%eax
8cdd(3): or %rax,%rcx
8ce0(5): cvtsi2ss %rcx,%xmm1
8ce5(4): addss %xmm1,%xmm1
8ce9(5): jmp 0xffffff2f(%rip)
8cee(2): nop 
8cf0(3): mov %rax,%rdx
8cf3(4): pxor %xmm0,%xmm0
8cf7(3): shr $0x1,%rdx
8cfa(3): and $0x1,%eax
8cfd(3): or %rax,%rdx
8d00(5): cvtsi2ss %rdx,%xmm0
8d05(4): addss %xmm0,%xmm0
8d09(5): jmp 0xfffffef5(%rip)
8d0e(2): nop 
8d10(8): subss 0x15c8(%rip),%xmm0
8d18(a): mov $0x-9223372036854775808,%rax
8d22(5): cvttss2si %xmm0,%rsi
8d27(3): xor %rax,%rsi
8d2a(5): jmp 0xffffff62(%rip)
8d2f(1): nop 
8d30(5): mulss 0x8(%rdx),%xmm0
8d35(5): jmp 0xffffff45(%rip)
8d3a(6): nop 0x0(%rax,%rax,1)
8d40(3): mov %rax,%rcx
8d43(4): pxor %xmm1,%xmm1
8d47(3): shr $0x1,%rcx
8d4a(3): and $0x1,%eax
8d4d(3): or %rax,%rcx
8d50(5): cvtsi2ss %rcx,%xmm1
8d55(4): addss %xmm1,%xmm1
8d59(5): jmp 0xffffff01(%rip)
8d5e(2): nop 
8d60(3): mov %rax,%rcx
8d63(4): pxor %xmm0,%xmm0
8d67(3): shr $0x1,%rcx
8d6a(3): and $0x1,%eax
8d6d(3): or %rax,%rcx
8d70(5): cvtsi2ss %rcx,%xmm0
8d75(4): addss %xmm0,%xmm0
8d79(5): jmp 0xfffffecb(%rip)
8d7e(5): call 0xffff8d52(%rip)

"locale_charset" :
8d90(4): sub $0x8,%rsp
8d94(5): mov $0xe,%edi
8d99(5): call 0xffff8ec7(%rip)
8d9e(3): test %rax,%rax
8da1(2): jz 0x1f(%rip)
8da3(3): cmp $0x0,(%rax)
8da6(7): lea 0x1543(%rip),%rdx
8dad(4): cmove %rdx,%rax
8db1(4): add $0x8,%rsp
8db5(1): ret near (%rsp)
8db6(a): nop 0x0(%rax,%rax,1)
8dc0(7): lea 0x1529(%rip),%rax
8dc7(4): add $0x8,%rsp
8dcb(1): ret near (%rsp)

"dup_safer" :
8dd0(5): mov $0x3,%edx
8dd5(2): xor %esi,%esi
8dd7(2): xor %eax,%eax
8dd9(5): jmp 0x7(%rip)

"rpl_fcntl" :
8de0(2): push %r12
8de2(1): push %rbp
8de3(2): mov %edi,%ebp
8de5(1): push %rbx
8de6(4): sub $0x50,%rsp
8dea(9): mov $0x28,%rax
8df3(5): mov %rax,0x18(%rsp)
8df8(2): xor %eax,%eax
8dfa(5): lea 0x70(%rsp),%rax
8dff(2): test %esi,%esi
8e01(5): mov %rdx,0x30(%rsp)
8e06(5): mov %rcx,0x38(%rsp)
8e0b(5): mov %r8,0x40(%rsp)
8e10(5): mov %rax,0x8(%rsp)
8e15(5): lea 0x20(%rsp),%rax
8e1a(5): mov %r9,0x48(%rsp)
8e1f(7): mov $0x10,(%rsp)
8e26(5): mov %rax,0x10(%rsp)
8e2b(6): jz 0x207(%rip)
8e31(6): cmp $0x406,%esi
8e37(2): jnz 0x49(%rip)
8e39(5): mov 0x10(%rsp),%rax
8e3e(7): cmp $0x0,0x2043f3(%rip)
8e45(7): mov $0x18,(%rsp)
8e4c(4): mov 0x10(%rax),%r12d
8e50(3): mov %r12d,%edx
8e53(6): js 0x130(%rip)
8e59(2): xor %eax,%eax
8e5b(5): mov $0x406,%esi
8e60(5): call 0xffff8bd0(%rip)
8e65(2): test %eax,%eax
8e67(2): mov %eax,%ebx
8e69(6): js 0x18f(%rip)
8e6f(a): mov $0x1,0x2043bf(%rip)
8e79(2): jmp 0x47(%rip)
8e7b(5): nop 0x0(%rax,%rax,1)
8e80(3): cmp $0xb,%esi
8e83(2): jz 0x2d(%rip)
8e85(2): jnle 0x5b(%rip)
8e87(3): cmp $0x4,%esi
8e8a(6): jz 0xd6(%rip)
8e90(6): jnle 0xc0(%rip)
8e96(3): cmp $0x2,%esi
8e99(6): jz 0xc7(%rip)
8e9f(2): jnle 0x11(%rip)
8ea1(3): cmp $0x1,%esi
8ea4(2): jnz 0x64(%rip)
8ea6(a): nop 0x0(%rax,%rax,1)
8eb0(2): mov %ebp,%edi
8eb2(2): xor %eax,%eax
8eb4(5): call 0xffff8b7c(%rip)
8eb9(2): mov %eax,%ebx
8ebb(5): nop 0x0(%rax,%rax,1)
8ec0(5): mov 0x18(%rsp),%rcx
8ec5(9): xor $0x28,%rcx
8ece(2): mov %ebx,%eax
8ed0(6): jnz 0x15d(%rip)
8ed6(4): add $0x50,%rsp
8eda(1): pop %rbx
8edb(1): pop %rbp
8edc(2): pop %r12
8ede(1): ret near (%rsp)
8edf(1): nop 
8ee0(6): cmp $0x407,%esi
8ee6(2): jnle 0x4a(%rip)
8ee8(6): cmp $0x406,%esi
8eee(2): jnl 0x72(%rip)
8ef0(6): cmp $0x401,%esi
8ef6(2): jz 0xffffffba(%rip)
8ef8(6): cmp $0x402,%esi
8efe(2): jz 0x62(%rip)
8f00(6): cmp $0x400,%esi
8f06(2): jz 0x5a(%rip)
8f08(3): mov (%rsp),%eax
8f0b(3): cmp $0x2f,%eax
8f0e(6): jnbe 0x13c(%rip)
8f14(5): add 0x10(%rsp),%rax
8f19(3): mov (%rax),%rdx
8f1c(2): mov %ebp,%edi
8f1e(2): xor %eax,%eax
8f20(5): call 0xffff8b10(%rip)
8f25(2): mov %eax,%ebx
8f27(2): jmp 0xffffff99(%rip)
8f29(7): nop 0x0(%rax)
8f30(6): cmp $0x409,%esi
8f36(2): jz 0x2a(%rip)
8f38(6): jl 0xffffff78(%rip)
8f3e(6): cmp $0x40a,%esi
8f44(2): jnz 0xffffffc4(%rip)
8f46(5): jmp 0xffffff6a(%rip)
8f4b(5): nop 0x0(%rax,%rax,1)
8f50(3): cmp $0x9,%esi
8f53(6): jz 0xffffff5d(%rip)
8f59(2): jnle 0x7(%rip)
8f5b(3): cmp $0x8,%esi
8f5e(2): jnz 0xffffffaa(%rip)
8f60(3): mov (%rsp),%eax
8f63(3): cmp $0x2f,%eax
8f66(6): jnbe 0xee(%rip)
8f6c(5): add 0x10(%rsp),%rax
8f71(2): mov (%rax),%edx
8f73(2): mov %ebp,%edi
8f75(2): xor %eax,%eax
8f77(5): call 0xffff8ab9(%rip)
8f7c(2): mov %eax,%ebx
8f7e(5): jmp 0xffffff42(%rip)
8f83(2): xor %esi,%esi
8f85(2): xor %eax,%eax
8f87(5): call 0xffff8aa9(%rip)
8f8c(2): test %eax,%eax
8f8e(2): mov %eax,%ebx
8f90(6): js 0xffffff30(%rip)
8f96(7): cmp $0xff,0x20429b(%rip)
8f9d(6): jnz 0xffffff23(%rip)
8fa3(2): xor %eax,%eax
8fa5(5): mov $0x1,%esi
8faa(2): mov %ebx,%edi
8fac(5): call 0xffff8a84(%rip)
8fb1(2): test %eax,%eax
8fb3(2): js 0x1e(%rip)
8fb5(3): or $0x1,%eax
8fb8(5): mov $0x2,%esi
8fbd(2): mov %ebx,%edi
8fbf(2): mov %eax,%edx
8fc1(2): xor %eax,%eax
8fc3(5): call 0xffff8a6d(%rip)
8fc8(3): cmp $0xff,%eax
8fcb(6): jnz 0xfffffef5(%rip)
8fd1(5): call 0xffff89df(%rip)
8fd6(3): mov (%rax),%r12d
8fd9(3): mov %rax,%rbp
8fdc(2): mov %ebx,%edi
8fde(5): call 0xffff8bc2(%rip)
8fe3(5): mov $0xffffffff,%ebx
8fe8(4): mov %r12d,0x0(%rbp)
8fec(5): jmp 0xfffffed4(%rip)
8ff1(7): nop 0x0(%rax)
8ff8(5): call 0xffff89b8(%rip)
8ffd(3): cmp $0x16,(%rax)
9000(6): jnz 0xfffffe6f(%rip)
9006(2): xor %esi,%esi
9008(2): xor %eax,%eax
900a(3): mov %r12d,%edx
900d(2): mov %ebp,%edi
900f(5): call 0xffff8a21(%rip)
9014(2): test %eax,%eax
9016(2): mov %eax,%ebx
9018(6): js 0xfffffea8(%rip)
901e(a): mov $0xffffffff,0x204210(%rip)
9028(5): jmp 0xffffff7b(%rip)
902d(5): call 0xffff8aa3(%rip)
9032(5): mov 0x10(%rsp),%rax
9037(2): xor %esi,%esi
9039(3): mov 0x10(%rax),%edx
903c(2): xor %eax,%eax
903e(5): call 0xffff89f2(%rip)
9043(2): mov %eax,%ebx
9045(5): jmp 0xfffffe7b(%rip)
904a(5): mov 0x8(%rsp),%rax
904f(5): jmp 0xfffffeca(%rip)
9054(5): mov 0x8(%rsp),%rax
9059(5): jmp 0xffffff18(%rip)

"__libc_csu_init" :
9060(2): push %r15
9062(2): push %r14
9064(3): mov %rdx,%r15
9067(2): push %r13
9069(2): push %r12
906b(7): lea 0x20397e(%rip),%r12
9072(1): push %rbp
9073(7): lea 0x20397e(%rip),%rbp
907a(1): push %rbx
907b(3): mov %edi,%r13d
907e(3): mov %rsi,%r14
9081(3): sub %r12,%rbp
9084(4): sub $0x8,%rsp
9088(4): sar $0x3,%rbp
908c(5): call 0xffff88d4(%rip)
9091(3): test %rbp,%rbp
9094(2): jz 0x22(%rip)
9096(2): xor %ebx,%ebx
9098(8): nop 0x0(%rax,%rax,1)
90a0(3): mov %r15,%rdx
90a3(3): mov %r14,%rsi
90a6(3): mov %r13d,%edi
90a9(4): call 0x0(%r12,%rbx,8)
90ad(4): add $0x1,%rbx
90b1(3): cmp %rbx,%rbp
90b4(2): jnz 0xffffffec(%rip)
90b6(4): add $0x8,%rsp
90ba(1): pop %rbx
90bb(1): pop %rbp
90bc(2): pop %r12
90be(2): pop %r13
90c0(2): pop %r14
90c2(2): pop %r15
90c4(1): ret near (%rsp)

"atexit" :
90e0(7): mov 0x203f21(%rip),%rdx
90e7(2): xor %esi,%esi
90e9(5): jmp 0xffff8c67(%rip)

"_fini" :
90f0(4): sub $0x8,%rsp
90f4(4): add $0x8,%rsp
90f8(1): ret near (%rsp)

