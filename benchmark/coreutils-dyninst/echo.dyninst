
"getenv@plt" :
11b0(6): jmp 0x205cca(%rip)
11b6(5): push $0x0

"free@plt" :
11c0(6): jmp 0x205cc2(%rip)
11c6(5): push $0x1

"abort@plt" :
11d0(6): jmp 0x205cba(%rip)
11d6(5): push $0x2

"__errno_location@plt" :
11e0(6): jmp 0x205cb2(%rip)
11e6(5): push $0x3

"strncmp@plt" :
11f0(6): jmp 0x205caa(%rip)
11f6(5): push $0x4

"_exit@plt" :
1200(6): jmp 0x205ca2(%rip)
1206(5): push $0x5

"__fpending@plt" :
1210(6): jmp 0x205c9a(%rip)
1216(5): push $0x6

"textdomain@plt" :
1220(6): jmp 0x205c92(%rip)
1226(5): push $0x7

"fclose@plt" :
1230(6): jmp 0x205c8a(%rip)
1236(5): push $0x8

"bindtextdomain@plt" :
1240(6): jmp 0x205c82(%rip)
1246(5): push $0x9

"dcgettext@plt" :
1250(6): jmp 0x205c7a(%rip)
1256(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1260(6): jmp 0x205c72(%rip)
1266(5): push $0xb

"strlen@plt" :
1270(6): jmp 0x205c6a(%rip)
1276(5): push $0xc

"__stack_chk_fail@plt" :
1280(6): jmp 0x205c62(%rip)
1286(5): push $0xd

"mbrtowc@plt" :
1290(6): jmp 0x205c5a(%rip)
1296(5): push $0xe

"__overflow@plt" :
12a0(6): jmp 0x205c52(%rip)
12a6(5): push $0xf

"strrchr@plt" :
12b0(6): jmp 0x205c4a(%rip)
12b6(5): push $0x10

"lseek@plt" :
12c0(6): jmp 0x205c42(%rip)
12c6(5): push $0x11

"__assert_fail@plt" :
12d0(6): jmp 0x205c3a(%rip)
12d6(5): push $0x12

"memset@plt" :
12e0(6): jmp 0x205c32(%rip)
12e6(5): push $0x13

"memcmp@plt" :
12f0(6): jmp 0x205c2a(%rip)
12f6(5): push $0x14

"fputs_unlocked@plt" :
1300(6): jmp 0x205c22(%rip)
1306(5): push $0x15

"calloc@plt" :
1310(6): jmp 0x205c1a(%rip)
1316(5): push $0x16

"strcmp@plt" :
1320(6): jmp 0x205c12(%rip)
1326(5): push $0x17

"memcpy@plt" :
1330(6): jmp 0x205c0a(%rip)
1336(5): push $0x18

"fileno@plt" :
1340(6): jmp 0x205c02(%rip)
1346(5): push $0x19

"malloc@plt" :
1350(6): jmp 0x205bfa(%rip)
1356(5): push $0x1a

"fflush@plt" :
1360(6): jmp 0x205bf2(%rip)
1366(5): push $0x1b

"nl_langinfo@plt" :
1370(6): jmp 0x205bea(%rip)
1376(5): push $0x1c

"__freading@plt" :
1380(6): jmp 0x205be2(%rip)
1386(5): push $0x1d

"realloc@plt" :
1390(6): jmp 0x205bda(%rip)
1396(5): push $0x1e

"setlocale@plt" :
13a0(6): jmp 0x205bd2(%rip)
13a6(5): push $0x1f

"__printf_chk@plt" :
13b0(6): jmp 0x205bca(%rip)
13b6(5): push $0x20

"error@plt" :
13c0(6): jmp 0x205bc2(%rip)
13c6(5): push $0x21

"fseeko@plt" :
13d0(6): jmp 0x205bba(%rip)
13d6(5): push $0x22

"__cxa_atexit@plt" :
13e0(6): jmp 0x205bb2(%rip)
13e6(5): push $0x23

"exit@plt" :
13f0(6): jmp 0x205baa(%rip)
13f6(5): push $0x24

"fwrite@plt" :
1400(6): jmp 0x205ba2(%rip)
1406(5): push $0x25

"__fprintf_chk@plt" :
1410(6): jmp 0x205b9a(%rip)
1416(5): push $0x26

"mbsinit@plt" :
1420(6): jmp 0x205b92(%rip)
1426(5): push $0x27

"iswprint@plt" :
1430(6): jmp 0x205b8a(%rip)
1436(5): push $0x28

"__ctype_b_loc@plt" :
1440(6): jmp 0x205b82(%rip)
1446(5): push $0x29

".plt.got" :
1450(6): jmp 0x205b9a(%rip)
1456(2): nop 

"_init" :
1188(4): sub $0x8,%rsp
118c(7): mov 0x205e4d(%rip),%rax
1193(3): test %rax,%rax
1196(2): jz 0x4(%rip)
1198(2): call %rax
119a(4): add $0x8,%rsp
119e(1): ret near (%rsp)

"main" :
1460(2): push %r15
1462(2): push %r14
1464(3): mov %rsi,%r15
1467(2): push %r13
1469(2): push %r12
146b(1): push %rbp
146c(1): push %rbx
146d(2): mov %edi,%ebp
146f(7): lea 0x376c(%rip),%rdi
1476(4): sub $0x18,%rsp
147a(5): call 0xfffffd36(%rip)
147f(3): test %rax,%rax
1482(3): mov %rax,%rbx
1485(6): jz 0xf9(%rip)
148b(3): cmp $0x1,%ebp
148e(2): jle 0x1a(%rip)
1490(4): mov 0x8(%r15),%rdi
1494(7): lea 0x3757(%rip),%rsi
149b(5): call 0xfffffe85(%rip)
14a0(2): test %eax,%eax
14a2(6): jz 0xdc(%rip)
14a8(3): mov (%r15),%rdi
14ab(3): sub $0x1,%ebp
14ae(4): add $0x8,%r15
14b2(5): call 0xb3e(%rip)
14b7(7): lea 0x41a3(%rip),%rsi
14be(5): mov $0x6,%edi
14c3(5): call 0xfffffedd(%rip)
14c8(7): lea 0x3726(%rip),%rsi
14cf(7): lea 0x36e3(%rip),%rdi
14d6(5): call 0xfffffd6a(%rip)
14db(7): lea 0x36d7(%rip),%rdi
14e2(5): call 0xfffffd3e(%rip)
14e7(7): lea 0xa52(%rip),%rdi
14ee(5): call 0x3432(%rip)
14f3(2): test %ebp,%ebp
14f5(5): mov $0x1,0xe(%rsp)
14fa(6): jle 0x1df(%rip)
1500(7): lea 0x34d5(%rip),%r12
1507(9): nop 0x0(%rax,%rax,1)
1510(3): mov (%r15),%rbx
1513(2): jmp 0x2a(%rip)
1515(3): nop (%rax)
1518(3): movzx %dl,%ebx
151b(7): mov 0x205b66(%rip),%rdi
1522(4): mov 0x28(%rdi),%rax
1526(4): cmp 0x30(%rdi),%rax
152a(6): jnb 0x2f6(%rip)
1530(4): lea 0x1(%rax),%rcx
1534(4): mov %rcx,0x28(%rdi)
1538(2): mov %dl,(%rax)
153a(3): mov %r13,%rbx
153d(3): movzx (%rbx),%edx
1540(4): lea 0x1(%rbx),%r13
1544(2): test %dl,%dl
1546(6): jz 0x2ea(%rip)
154c(3): cmp $0x5c,%dl
154f(2): jnz 0xffffffc9(%rip)
1551(5): movzx 0x1(%rbx),%r14d
1556(3): test %r14b,%r14b
1559(6): jz 0x16f(%rip)
155f(4): lea 0xffffffd0(%r14),%eax
1563(4): lea 0x2(%rbx),%r13
1567(3): mov %r14d,%ecx
156a(2): cmp $0x48,%al
156c(6): jnbe 0x23a(%rip)
1572(3): movzx %al,%eax
1575(4): movsxd 0x0(%r12,%rax,4),%rax
1579(3): add %r12,%rax
157c(2): jmp %rax
157e(3): mov (%r15),%rdi
1581(5): call 0xa6f(%rip)
1586(7): lea 0x40d4(%rip),%rsi
158d(5): mov $0x6,%edi
1592(5): call 0xfffffe0e(%rip)
1597(7): lea 0x3657(%rip),%rsi
159e(7): lea 0x3614(%rip),%rdi
15a5(5): call 0xfffffc9b(%rip)
15aa(7): lea 0x3608(%rip),%rdi
15b1(5): call 0xfffffc6f(%rip)
15b6(7): lea 0x983(%rip),%rdi
15bd(5): call 0x3363(%rip)
15c2(3): cmp $0x2,%ebp
15c5(2): jnz 0x34(%rip)
15c7(4): mov 0x8(%r15),%r12
15cb(7): lea 0x363b(%rip),%rsi
15d2(3): mov %r12,%rdi
15d5(5): call 0xfffffd4b(%rip)
15da(2): test %eax,%eax
15dc(6): jz 0x3a7(%rip)
15e2(7): lea 0x362b(%rip),%rsi
15e9(3): mov %r12,%rdi
15ec(5): call 0xfffffd34(%rip)
15f1(2): test %eax,%eax
15f3(6): jz 0x2df(%rip)
15f9(3): test %rbx,%rbx
15fc(5): mov $0x1,0xe(%rsp)
1601(6): mov $0x1,%r8d
1607(3): setnz %bl
160a(a): mov $0x2203318222849,%rdi
1614(3): sub $0x1,%ebp
1617(4): add $0x8,%r15
161b(3): xor %r10d,%r10d
161e(3): xor %r11d,%r11d
1621(2): test %ebp,%ebp
1623(6): jle 0xaf(%rip)
1629(3): mov (%r15),%rsi
162c(3): cmp $0x2d,(%rsi)
162f(6): jnz 0x233(%rip)
1635(4): movzx 0x1(%rsi),%edx
1639(4): lea 0x1(%rsi),%r9
163d(2): test %dl,%dl
163f(6): jz 0x223(%rip)
1645(3): lea 0xffffffbb(%rdx),%ecx
1648(3): cmp $0x29,%cl
164b(6): jnbe 0x217(%rip)
1651(3): mov %r8,%rax
1654(3): shl/sal %cl,%rax
1657(3): test %rdi,%rax
165a(6): jz 0x208(%rip)
1660(2): xor %eax,%eax
1662(2): jmp 0x21(%rip)
1664(4): nop 0x0(%rax)
1668(3): sub $0x45,%ecx
166b(3): cmp $0x29,%cl
166e(6): jnbe 0x1f4(%rip)
1674(3): mov %r8,%r14
1677(3): shl/sal %cl,%r14
167a(3): test %rdi,%r14
167d(6): jz 0x1e5(%rip)
1683(4): add $0x1,%rax
1687(5): movzx 0x1(%rsi,%rax,1),%ecx
168c(2): test %cl,%cl
168e(2): jnz 0xffffffda(%rip)
1690(2): jmp 0x24(%rip)
1692(6): nop 0x0(%rax,%rax,1)
1698(3): cmp $0x6e,%dl
169b(6): jz 0x221(%rip)
16a1(3): cmp $0x45,%dl
16a4(4): cmove %r11d,%r10d
16a8(4): movzx (%r9),%edx
16ac(2): test %dl,%dl
16ae(6): jz 0x218(%rip)
16b4(4): add $0x1,%r9
16b8(3): cmp $0x65,%dl
16bb(2): jnz 0xffffffdd(%rip)
16bd(6): mov $0x1,%r10d
16c3(2): jmp 0xffffffe5(%rip)
16c5(3): nop (%rax)
16c8(5): mov $0x5c,%ebx
16cd(5): jmp 0xfffffe4e(%rip)
16d2(5): cmp $0x0,0xe(%rsp)
16d7(2): jz 0x22(%rip)
16d9(7): mov 0x2059a8(%rip),%rdi
16e0(4): mov 0x28(%rdi),%rax
16e4(4): cmp 0x30(%rdi),%rax
16e8(6): jnb 0x28c(%rip)
16ee(4): lea 0x1(%rax),%rdx
16f2(4): mov %rdx,0x28(%rdi)
16f6(3): mov $0xa,(%rax)
16f9(4): add $0x18,%rsp
16fd(2): xor %eax,%eax
16ff(1): pop %rbx
1700(1): pop %rbp
1701(2): pop %r12
1703(2): pop %r13
1705(2): pop %r14
1707(2): pop %r15
1709(1): ret near (%rsp)
170a(5): mov $0x7,%ebx
170f(5): mov $0x7,%edx
1714(5): jmp 0xfffffe07(%rip)
1719(5): mov $0x1b,%ebx
171e(5): mov $0x1b,%edx
1723(5): jmp 0xfffffdf8(%rip)
1728(5): mov $0x8,%ebx
172d(5): mov $0x8,%edx
1732(5): jmp 0xfffffde9(%rip)
1737(4): movzx 0x2(%rbx),%eax
173b(3): sub $0x30,%eax
173e(3): lea 0xffffffd0(%rcx),%edx
1741(2): cmp $0x7,%al
1743(2): jnbe 0x9(%rip)
1745(3): lea 0x0(%rax,%rdx,8),%edx
1748(4): add $0x1,%r13
174c(5): movzx 0x0(%r13),%eax
1751(3): lea 0xffffffd0(%rax),%ecx
1754(3): cmp $0x7,%cl
1757(6): jnbe 0xfffffdc1(%rip)
175d(4): add $0x1,%r13
1761(4): lea 0xffffffd0(%rax,%rdx,8),%edx
1765(5): jmp 0xfffffdb3(%rip)
176a(4): movzx 0x2(%rbx),%ecx
176e(3): lea 0xffffffd0(%rcx),%eax
1771(2): cmp $0x7,%al
1773(6): jbe 0x1b9(%rip)
1779(2): xor %ebx,%ebx
177b(2): xor %edx,%edx
177d(5): jmp 0xfffffd9e(%rip)
1782(4): movzx 0x2(%rbx),%edi
1786(5): mov %dil,0xf(%rsp)
178b(5): call 0xfffffcb5(%rip)
1790(3): mov (%rax),%rcx
1793(5): movzx 0xf(%rsp),%eax
1798(5): test $0x10,0x1(%rcx,%rax,2)
179d(3): mov %rax,%rdi
17a0(6): jnz 0x16e(%rip)
17a6(7): mov 0x2058db(%rip),%rdi
17ad(4): movzx %r14b,%ebx
17b1(4): mov 0x28(%rdi),%rax
17b5(4): cmp %rax,0x30(%rdi)
17b9(6): jbe 0x1a9(%rip)
17bf(4): lea 0x1(%rax),%rdx
17c3(4): mov %rdx,0x28(%rdi)
17c7(3): mov $0x5c,(%rax)
17ca(3): mov %r14d,%edx
17cd(5): jmp 0xfffffd4e(%rip)
17d2(5): mov $0xb,%ebx
17d7(5): mov $0xb,%edx
17dc(5): jmp 0xfffffd3f(%rip)
17e1(5): mov $0x9,%ebx
17e6(5): mov $0x9,%edx
17eb(5): jmp 0xfffffd30(%rip)
17f0(5): mov $0xd,%ebx
17f5(5): mov $0xd,%edx
17fa(5): jmp 0xfffffd21(%rip)
17ff(5): mov $0xa,%ebx
1804(5): mov $0xa,%edx
1809(5): jmp 0xfffffd12(%rip)
180e(5): mov $0xc,%ebx
1813(5): mov $0xc,%edx
1818(5): jmp 0xfffffd03(%rip)
181d(3): nop (%rax)
1820(2): mov %ebx,%esi
1822(5): call 0xfffffa7e(%rip)
1827(5): jmp 0xfffffd13(%rip)
182c(4): nop 0x0(%rax)
1830(4): add $0x8,%r15
1834(3): sub $0x1,%ebp
1837(6): jz 0xfffffe9b(%rip)
183d(7): mov 0x205844(%rip),%rdi
1844(4): mov 0x28(%rdi),%rax
1848(4): cmp 0x30(%rdi),%rax
184c(6): jnb 0xed(%rip)
1852(4): lea 0x1(%rax),%rdx
1856(4): mov %rdx,0x28(%rdi)
185a(3): mov $0x20,(%rax)
185d(5): jmp 0xfffffcb3(%rip)
1862(3): test %r10b,%r10b
1865(6): jnz 0xfffffc9b(%rip)
186b(2): test %bl,%bl
186d(2): jz 0x16(%rip)
186f(5): jmp 0xfffffc91(%rip)
1874(4): nop 0x0(%rax)
1878(4): lea 0x1(%rax),%rdx
187c(4): mov %rdx,0x28(%rdi)
1880(3): mov $0x20,(%rax)
1883(3): mov (%r15),%rdi
1886(7): mov 0x2057fb(%rip),%rsi
188d(4): add $0x8,%r15
1891(5): call 0xfffffa6f(%rip)
1896(3): sub $0x1,%ebp
1899(6): jz 0xfffffe39(%rip)
189f(7): mov 0x2057e2(%rip),%rdi
18a6(4): mov 0x28(%rdi),%rax
18aa(4): cmp 0x30(%rdi),%rax
18ae(2): jb 0xffffffca(%rip)
18b0(5): mov $0x20,%esi
18b5(5): call 0xfffff9eb(%rip)
18ba(2): jmp 0xffffffc9(%rip)
18bc(5): mov $0x0,0xe(%rsp)
18c1(5): jmp 0xfffffde7(%rip)
18c6(3): sub $0x1,%ebp
18c9(4): add $0x8,%r15
18cd(5): jmp 0xfffffd54(%rip)
18d2(4): sub $0x8,%rsp
18d6(7): mov 0x205733(%rip),%rcx
18dd(7): mov 0x2057a4(%rip),%rdi
18e4(2): push $0x0
18e6(7): lea 0x32c8(%rip),%rdx
18ed(7): lea 0x332a(%rip),%r9
18f4(7): lea 0x332e(%rip),%r8
18fb(7): lea 0x3204(%rip),%rsi
1902(5): call 0x28de(%rip)
1907(1): pop %rax
1908(1): pop %rdx
1909(5): jmp 0xfffffdf0(%rip)
190e(5): call 0x192(%rip)
1913(4): movzx 0x3(%rbx),%edi
1917(2): mov %eax,%edx
1919(5): test $0x10,0x1(%rcx,%rdi,2)
191e(2): jnz 0x2a(%rip)
1920(4): lea 0x3(%rbx),%r13
1924(3): movzx %al,%ebx
1927(5): jmp 0xfffffbf4(%rip)
192c(4): lea 0x3(%rbx),%r13
1930(4): movzx 0x3(%rbx),%eax
1934(5): jmp 0xfffffe07(%rip)
1939(5): mov $0x20,%esi
193e(5): call 0xfffff962(%rip)
1943(5): jmp 0xfffffbcd(%rip)
1948(4): lea 0x4(%rbx),%r13
194c(2): mov %eax,%ebx
194e(4): movzx %dil,%edi
1952(3): shl/sal $0x4,%ebx
1955(5): call 0x14b(%rip)
195a(3): lea 0x0(%rbx,%rax,1),%edx
195d(5): jmp 0xfffffbbb(%rip)
1962(5): mov $0x5c,%esi
1967(5): call 0xfffff939(%rip)
196c(3): mov %r14d,%edx
196f(5): jmp 0xfffffbac(%rip)
1974(5): mov $0xa,%esi
1979(5): call 0xfffff927(%rip)
197e(5): jmp 0xfffffd7b(%rip)
1983(2): xor %edi,%edi
1985(5): call 0x1ab(%rip)

"_start" :
1990(2): xor %ebp,%ebp
1992(3): mov %rdx,%r9
1995(1): pop %rsi
1996(3): mov %rsp,%rdx
1999(4): and $0xfffffff0,%rsp
199d(1): push %rax
199e(1): push %rsp
199f(7): lea 0x2f6a(%rip),%r8
19a6(7): lea 0x2ef3(%rip),%rcx
19ad(7): lea 0xfffffaac(%rip),%rdi
19b4(6): call 0x20561e(%rip)
19ba(1): hlt 

"deregister_tm_clones" :
19c0(7): lea 0x2056b9(%rip),%rdi
19c7(1): push %rbp
19c8(7): lea 0x2056b1(%rip),%rax
19cf(3): cmp %rdi,%rax
19d2(3): mov %rsp,%rbp
19d5(2): jz 0x1b(%rip)
19d7(7): mov 0x2055f2(%rip),%rax
19de(3): test %rax,%rax
19e1(2): jz 0xf(%rip)
19e3(1): pop %rbp
19e4(2): jmp %rax
19e6(a): nop 0x0(%rax,%rax,1)
19f0(1): pop %rbp
19f1(1): ret near (%rsp)

"register_tm_clones" :
1a00(7): lea 0x205679(%rip),%rdi
1a07(7): lea 0x205672(%rip),%rsi
1a0e(1): push %rbp
1a0f(3): sub %rdi,%rsi
1a12(3): mov %rsp,%rbp
1a15(4): sar $0x3,%rsi
1a19(3): mov %rsi,%rax
1a1c(4): shr $0x3f,%rax
1a20(3): add %rax,%rsi
1a23(3): sar $0x1,%rsi
1a26(2): jz 0x1a(%rip)
1a28(7): mov 0x2055b9(%rip),%rax
1a2f(3): test %rax,%rax
1a32(2): jz 0xe(%rip)
1a34(1): pop %rbp
1a35(2): jmp %rax
1a37(9): nop 0x0(%rax,%rax,1)
1a40(1): pop %rbp
1a41(1): ret near (%rsp)

"__do_global_dtors_aux" :
1a50(7): cmp $0x0,0x205651(%rip)
1a57(2): jnz 0x31(%rip)
1a59(8): cmp $0x0,0x20558f(%rip)
1a61(1): push %rbp
1a62(3): mov %rsp,%rbp
1a65(2): jz 0xe(%rip)
1a67(7): mov 0x20559a(%rip),%rdi
1a6e(5): call 0xfffff9e2(%rip)
1a73(5): call 0xffffff4d(%rip)
1a78(7): mov $0x1,0x205629(%rip)
1a7f(1): pop %rbp
1a80(1): ret near (%rsp)
1a81(7): nop 0x0(%rax)
1a88(2): REP ret near (%rsp)

"frame_dummy" :
1a90(1): push %rbp
1a91(3): mov %rsp,%rbp
1a94(1): pop %rbp
1a95(5): jmp 0xffffff6b(%rip)

"hextobin" :
1aa0(3): lea 0xffffffbf(%rdi),%eax
1aa3(2): cmp $0x25,%al
1aa5(2): jnbe 0x7b(%rip)
1aa7(7): lea 0x2e96(%rip),%rdx
1aae(3): movzx %al,%eax
1ab1(4): movsxd 0x0(%rdx,%rax,4),%rax
1ab5(3): add %rdx,%rax
1ab8(2): jmp %rax
1aba(6): nop 0x0(%rax,%rax,1)
1ac0(5): mov $0xa,%eax
1ac5(1): ret near (%rsp)
1ac6(a): nop 0x0(%rax,%rax,1)
1ad0(5): mov $0xb,%eax
1ad5(1): ret near (%rsp)
1ad6(a): nop 0x0(%rax,%rax,1)
1ae0(5): mov $0xc,%eax
1ae5(1): ret near (%rsp)
1ae6(a): nop 0x0(%rax,%rax,1)
1af0(5): mov $0xd,%eax
1af5(1): ret near (%rsp)
1af6(a): nop 0x0(%rax,%rax,1)
1b00(5): mov $0xe,%eax
1b05(1): ret near (%rsp)
1b06(a): nop 0x0(%rax,%rax,1)
1b10(5): mov $0xf,%eax
1b15(1): ret near (%rsp)
1b16(a): nop 0x0(%rax,%rax,1)
1b20(4): movzx %dil,%edi
1b24(3): lea 0xffffffd0(%rdi),%eax
1b27(1): ret near (%rsp)

"usage" :
1b30(2): push %r12
1b32(1): push %rbp
1b33(1): push %rbx
1b34(4): add $0xffffff80,%rsp
1b38(9): mov $0x28,%rax
1b41(5): mov %rax,0x78(%rsp)
1b46(2): xor %eax,%eax
1b48(2): test %edi,%edi
1b4a(2): jz 0x21(%rip)
1b4c(7): lea 0x2fad(%rip),%rcx
1b53(7): lea 0x2fb1(%rip),%rsi
1b5a(7): lea 0x2fc7(%rip),%rdi
1b61(5): mov $0x28,%edx
1b66(5): call 0xfffff76a(%rip)
1b6b(7): mov 0x20554e(%rip),%rbx
1b72(7): lea 0x30bf(%rip),%rsi
1b79(5): mov $0x5,%edx
1b7e(2): xor %edi,%edi
1b80(5): call 0xfffff6d0(%rip)
1b85(3): mov %rbx,%rcx
1b88(3): mov %rbx,%rdx
1b8b(3): mov %rax,%rsi
1b8e(5): mov $0x1,%edi
1b93(2): xor %eax,%eax
1b95(5): call 0xfffff81b(%rip)
1b9a(7): mov 0x2054e7(%rip),%rbx
1ba1(7): lea 0x30d0(%rip),%rsi
1ba8(5): mov $0x5,%edx
1bad(2): xor %edi,%edi
1baf(5): call 0xfffff6a1(%rip)
1bb4(3): mov %rbx,%rsi
1bb7(3): mov %rax,%rdi
1bba(5): call 0xfffff746(%rip)
1bbf(7): mov 0x2054c2(%rip),%rbx
1bc6(7): lea 0x310b(%rip),%rsi
1bcd(5): mov $0x5,%edx
1bd2(2): xor %edi,%edi
1bd4(5): call 0xfffff67c(%rip)
1bd9(3): mov %rbx,%rsi
1bdc(3): mov %rax,%rdi
1bdf(5): call 0xfffff721(%rip)
1be4(7): mov 0x20549d(%rip),%rbx
1beb(7): lea 0x316e(%rip),%rsi
1bf2(5): mov $0x5,%edx
1bf7(2): xor %edi,%edi
1bf9(5): call 0xfffff657(%rip)
1bfe(3): mov %rbx,%rsi
1c01(3): mov %rax,%rdi
1c04(5): call 0xfffff6fc(%rip)
1c09(7): mov 0x205478(%rip),%rbx
1c10(7): lea 0x3179(%rip),%rsi
1c17(5): mov $0x5,%edx
1c1c(2): xor %edi,%edi
1c1e(5): call 0xfffff632(%rip)
1c23(3): mov %rbx,%rsi
1c26(3): mov %rax,%rdi
1c29(5): call 0xfffff6d7(%rip)
1c2e(7): mov 0x205453(%rip),%rbx
1c35(7): lea 0x318c(%rip),%rsi
1c3c(5): mov $0x5,%edx
1c41(2): xor %edi,%edi
1c43(5): call 0xfffff60d(%rip)
1c48(3): mov %rbx,%rsi
1c4b(3): mov %rax,%rdi
1c4e(5): call 0xfffff6b2(%rip)
1c53(7): mov 0x20542e(%rip),%rbx
1c5a(7): lea 0x31a7(%rip),%rsi
1c61(5): mov $0x5,%edx
1c66(2): xor %edi,%edi
1c68(5): call 0xfffff5e8(%rip)
1c6d(3): mov %rbx,%rsi
1c70(3): mov %rax,%rdi
1c73(5): call 0xfffff68d(%rip)
1c78(7): mov 0x205409(%rip),%rbx
1c7f(7): lea 0x326a(%rip),%rsi
1c86(5): mov $0x5,%edx
1c8b(2): xor %edi,%edi
1c8d(5): call 0xfffff5c3(%rip)
1c92(3): mov %rbx,%rsi
1c95(3): mov %rax,%rdi
1c98(7): lea 0x2e67(%rip),%rbx
1c9f(5): call 0xfffff661(%rip)
1ca4(7): lea 0x32b5(%rip),%rsi
1cab(5): mov $0x5,%edx
1cb0(2): xor %edi,%edi
1cb2(5): call 0xfffff59e(%rip)
1cb7(7): lea 0x2e48(%rip),%rdx
1cbe(3): mov %rax,%rsi
1cc1(5): mov $0x1,%edi
1cc6(2): xor %eax,%eax
1cc8(5): call 0xfffff6e8(%rip)
1ccd(7): lea 0x2e6b(%rip),%rax
1cd4(7): lea 0x2ea5(%rip),%rcx
1cdb(9): mov $0x0,0x60(%rsp)
1ce4(9): mov $0x0,0x68(%rsp)
1ced(3): mov %rsp,%rdx
1cf0(4): mov %rax,(%rsp)
1cf4(7): lea 0x2e46(%rip),%rax
1cfb(5): mov %rcx,0x30(%rsp)
1d00(7): lea 0x2e83(%rip),%rcx
1d07(5): mov %rax,0x8(%rsp)
1d0c(7): lea 0x2ea6(%rip),%rax
1d13(5): mov %rcx,0x40(%rsp)
1d18(7): lea 0x2e75(%rip),%rcx
1d1f(5): mov %rax,0x10(%rsp)
1d24(7): lea 0x2e26(%rip),%rax
1d2b(5): mov %rcx,0x50(%rsp)
1d30(5): mov %rax,0x18(%rsp)
1d35(7): lea 0x2e2b(%rip),%rax
1d3c(5): mov %rax,0x20(%rsp)
1d41(7): lea 0x2e29(%rip),%rax
1d48(5): mov %rax,0x28(%rsp)
1d4d(5): mov %rax,0x38(%rsp)
1d52(5): mov %rax,0x48(%rsp)
1d57(5): mov %rax,0x58(%rsp)
1d5c(4): nop 0x0(%rax)
1d60(4): add $0x10,%rdx
1d64(3): mov (%rdx),%rdi
1d67(3): test %rdi,%rdi
1d6a(2): jz 0x15(%rip)
1d6c(5): mov $0x5,%ecx
1d71(3): mov %rbx,%rsi
1d74(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d76(3): setnbe %al
1d79(2): sbb $0x0,%al
1d7b(2): test %al,%al
1d7d(2): jnz 0xffffffe3(%rip)
1d7f(4): mov 0x8(%rdx),%rbp
1d83(2): xor %edi,%edi
1d85(5): mov $0x5,%edx
1d8a(7): lea 0x2e0d(%rip),%rsi
1d91(3): test %rbp,%rbp
1d94(6): jz 0xc9(%rip)
1d9a(5): call 0xfffff4b6(%rip)
1d9f(7): lea 0x327a(%rip),%rcx
1da6(7): lea 0x2e08(%rip),%rdx
1dad(3): mov %rax,%rsi
1db0(5): mov $0x1,%edi
1db5(2): xor %eax,%eax
1db7(5): call 0xfffff5f9(%rip)
1dbc(2): xor %esi,%esi
1dbe(5): mov $0x5,%edi
1dc3(5): call 0xfffff5dd(%rip)
1dc8(3): test %rax,%rax
1dcb(2): jz 0x1e(%rip)
1dcd(7): lea 0x2def(%rip),%rsi
1dd4(5): mov $0x3,%edx
1dd9(3): mov %rax,%rdi
1ddc(5): call 0xfffff414(%rip)
1de1(2): test %eax,%eax
1de3(6): jnz 0x10f(%rip)
1de9(7): lea 0x2dd7(%rip),%rsi
1df0(2): xor %edi,%edi
1df2(5): mov $0x5,%edx
1df7(5): call 0xfffff459(%rip)
1dfc(7): lea 0x2d03(%rip),%rcx
1e03(7): lea 0x3216(%rip),%rdx
1e0a(3): mov %rax,%rsi
1e0d(5): mov $0x1,%edi
1e12(2): xor %eax,%eax
1e14(5): call 0xfffff59c(%rip)
1e19(3): cmp %rbx,%rbp
1e1c(7): lea 0x383e(%rip),%rcx
1e23(7): lea 0x2d31(%rip),%rbx
1e2a(4): cmovne %rcx,%rbx
1e2e(7): lea 0x325b(%rip),%rsi
1e35(5): mov $0x5,%edx
1e3a(2): xor %edi,%edi
1e3c(5): call 0xfffff414(%rip)
1e41(5): mov $0x1,%edi
1e46(3): mov %rax,%rsi
1e49(3): mov %rbx,%rcx
1e4c(3): mov %rbp,%rdx
1e4f(2): xor %eax,%eax
1e51(5): call 0xfffff55f(%rip)
1e56(2): xor %edi,%edi
1e58(5): call 0xfffff598(%rip)
1e5d(5): call 0xfffff3f3(%rip)
1e62(7): lea 0x31b7(%rip),%rcx
1e69(7): lea 0x2d45(%rip),%rdx
1e70(3): mov %rax,%rsi
1e73(5): mov $0x1,%edi
1e78(2): xor %eax,%eax
1e7a(5): call 0xfffff536(%rip)
1e7f(2): xor %esi,%esi
1e81(5): mov $0x5,%edi
1e86(5): call 0xfffff51a(%rip)
1e8b(3): test %rax,%rax
1e8e(2): jz 0x1a(%rip)
1e90(7): lea 0x2d2c(%rip),%rsi
1e97(5): mov $0x3,%edx
1e9c(3): mov %rax,%rdi
1e9f(5): call 0xfffff351(%rip)
1ea4(2): test %eax,%eax
1ea6(2): jnz 0x45(%rip)
1ea8(7): lea 0x2d18(%rip),%rsi
1eaf(5): mov $0x5,%edx
1eb4(2): xor %edi,%edi
1eb6(7): lea 0x2c49(%rip),%rbp
1ebd(7): lea 0x2c97(%rip),%rbx
1ec4(5): call 0xfffff38c(%rip)
1ec9(7): lea 0x2c36(%rip),%rcx
1ed0(7): lea 0x3149(%rip),%rdx
1ed7(3): mov %rax,%rsi
1eda(5): mov $0x1,%edi
1edf(2): xor %eax,%eax
1ee1(5): call 0xfffff4cf(%rip)
1ee6(5): jmp 0xffffff48(%rip)
1eeb(7): lea 0x2c14(%rip),%rbp
1ef2(7): mov 0x20518f(%rip),%r12
1ef9(7): lea 0x3148(%rip),%rsi
1f00(2): xor %edi,%edi
1f02(5): mov $0x5,%edx
1f07(5): call 0xfffff349(%rip)
1f0c(3): mov %r12,%rsi
1f0f(3): mov %rax,%rdi
1f12(5): call 0xfffff3ee(%rip)
1f17(5): jmp 0xfffffed2(%rip)

"close_stdout_set_file_name" :
1f20(7): mov %rdi,0x205191(%rip)
1f27(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1f30(7): mov %dil,0x205179(%rip)
1f37(1): ret near (%rsp)

"close_stdout" :
1f40(1): push %rbp
1f41(1): push %rbx
1f42(4): sub $0x8,%rsp
1f46(7): mov 0x20513b(%rip),%rdi
1f4d(5): call 0x2713(%rip)
1f52(2): test %eax,%eax
1f54(2): jz 0x18(%rip)
1f56(5): call 0xfffff28a(%rip)
1f5b(7): cmp $0x0,0x20514e(%rip)
1f62(3): mov %rax,%rbx
1f65(2): jz 0x1e(%rip)
1f67(3): cmp $0x20,(%rax)
1f6a(2): jnz 0x19(%rip)
1f6c(7): mov 0x20512d(%rip),%rdi
1f73(5): call 0x26ed(%rip)
1f78(2): test %eax,%eax
1f7a(2): jnz 0x48(%rip)
1f7c(4): add $0x8,%rsp
1f80(1): pop %rbx
1f81(1): pop %rbp
1f82(1): ret near (%rsp)
1f83(7): lea 0x313e(%rip),%rsi
1f8a(2): xor %edi,%edi
1f8c(5): mov $0x5,%edx
1f91(5): call 0xfffff2bf(%rip)
1f96(7): mov 0x20511b(%rip),%rdi
1f9d(3): mov %rax,%rbp
1fa0(3): test %rdi,%rdi
1fa3(2): jz 0x2a(%rip)
1fa5(5): call 0x1b5b(%rip)
1faa(2): mov (%rbx),%esi
1fac(7): lea 0x3121(%rip),%rdx
1fb3(3): mov %rax,%rcx
1fb6(3): mov %rbp,%r8
1fb9(2): xor %edi,%edi
1fbb(2): xor %eax,%eax
1fbd(5): call 0xfffff403(%rip)
1fc2(6): mov 0x205050(%rip),%edi
1fc8(5): call 0xfffff238(%rip)
1fcd(2): mov (%rbx),%esi
1fcf(7): lea 0x3102(%rip),%rdx
1fd6(3): mov %rax,%rcx
1fd9(2): xor %edi,%edi
1fdb(2): xor %eax,%eax
1fdd(5): call 0xfffff3e3(%rip)
1fe2(2): jmp 0xffffffe0(%rip)

"set_program_name" :
1ff0(3): test %rdi,%rdi
1ff3(1): push %rbx
1ff4(2): jz 0x79(%rip)
1ff6(5): mov $0x2f,%esi
1ffb(3): mov %rdi,%rbx
1ffe(5): call 0xfffff2b2(%rip)
2003(3): test %rax,%rax
2006(2): jz 0x57(%rip)
2008(4): lea 0x1(%rax),%r8
200c(3): mov %r8,%rdx
200f(3): sub %rbx,%rdx
2012(4): cmp $0x6,%rdx
2016(2): jle 0x47(%rip)
2018(4): lea 0xfffffffa(%rax),%rsi
201c(7): lea 0x30f5(%rip),%rdi
2023(5): mov $0x7,%ecx
2028(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
202a(3): setnbe %dl
202d(3): sbb $0x0,%dl
2030(2): test %dl,%dl
2032(2): jnz 0x2b(%rip)
2034(7): lea 0x30e5(%rip),%rdi
203b(5): mov $0x3,%ecx
2040(3): mov %r8,%rsi
2043(3): mov %r8,%rbx
2046(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2048(3): setnbe %dl
204b(3): sbb $0x0,%dl
204e(2): test %dl,%dl
2050(2): jnz 0xd(%rip)
2052(4): lea 0x4(%rax),%rbx
2056(7): mov %rbx,0x205023(%rip)
205d(7): mov %rbx,0x20505c(%rip)
2064(7): mov %rbx,0x205025(%rip)
206b(1): pop %rbx
206c(1): ret near (%rsp)
206d(7): mov 0x20502c(%rip),%rcx
2074(7): lea 0x3065(%rip),%rdi
207b(5): mov $0x37,%edx
2080(5): mov $0x1,%esi
2085(5): call 0xfffff37b(%rip)
208a(5): call 0xfffff146(%rip)

"gettext_quote.part.1" :
2090(1): push %rbp
2091(1): push %rbx
2092(3): mov %rdi,%rbp
2095(2): mov %esi,%ebx
2097(4): sub $0x8,%rsp
209b(5): call 0x26a5(%rip)
20a0(3): movzx (%rax),%edx
20a3(3): and $0xdf,%edx
20a6(3): cmp $0x55,%dl
20a9(2): jz 0x77(%rip)
20ab(3): cmp $0x47,%dl
20ae(2): jz 0x22(%rip)
20b0(7): lea 0x307c(%rip),%rax
20b7(7): lea 0x3077(%rip),%rdx
20be(3): cmp $0x9,%ebx
20c1(4): cmovne %rdx,%rax
20c5(4): add $0x8,%rsp
20c9(1): pop %rbx
20ca(1): pop %rbp
20cb(1): ret near (%rsp)
20cc(4): nop 0x0(%rax)
20d0(4): movzx 0x1(%rax),%edx
20d4(3): and $0xdf,%edx
20d7(3): cmp $0x42,%dl
20da(2): jnz 0xffffffd6(%rip)
20dc(4): cmp $0x31,0x2(%rax)
20e0(2): jnz 0xffffffd0(%rip)
20e2(4): cmp $0x38,0x3(%rax)
20e6(2): jnz 0xffffffca(%rip)
20e8(4): cmp $0x30,0x4(%rax)
20ec(2): jnz 0xffffffc4(%rip)
20ee(4): cmp $0x33,0x5(%rax)
20f2(2): jnz 0xffffffbe(%rip)
20f4(4): cmp $0x30,0x6(%rax)
20f8(2): jnz 0xffffffb8(%rip)
20fa(4): cmp $0x0,0x7(%rax)
20fe(2): jnz 0xffffffb2(%rip)
2100(4): cmp $0x60,0x0(%rbp)
2104(7): lea 0x3021(%rip),%rax
210b(7): lea 0x301e(%rip),%rdx
2112(4): cmovne %rdx,%rax
2116(4): add $0x8,%rsp
211a(1): pop %rbx
211b(1): pop %rbp
211c(1): ret near (%rsp)
211d(3): nop (%rax)
2120(4): movzx 0x1(%rax),%edx
2124(3): and $0xdf,%edx
2127(3): cmp $0x54,%dl
212a(2): jnz 0xffffff86(%rip)
212c(4): movzx 0x2(%rax),%edx
2130(3): and $0xdf,%edx
2133(3): cmp $0x46,%dl
2136(6): jnz 0xffffff7a(%rip)
213c(4): cmp $0x2d,0x3(%rax)
2140(6): jnz 0xffffff70(%rip)
2146(4): cmp $0x38,0x4(%rax)
214a(6): jnz 0xffffff66(%rip)
2150(4): cmp $0x0,0x5(%rax)
2154(6): jnz 0xffffff5c(%rip)
215a(4): cmp $0x60,0x0(%rbp)
215e(7): lea 0x2fbf(%rip),%rax
2165(7): lea 0x2fbc(%rip),%rdx
216c(4): cmovne %rdx,%rax
2170(4): add $0x8,%rsp
2174(1): pop %rbx
2175(1): pop %rbp
2176(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2180(2): push %r15
2182(2): push %r14
2184(3): mov %r8d,%r15d
2187(2): push %r13
2189(2): push %r12
218b(3): mov %rdi,%r14
218e(1): push %rbp
218f(1): push %rbx
2190(3): mov %r9d,%ebx
2193(3): mov %rsi,%r13
2196(3): mov %rcx,%rbp
2199(3): and $0x2,%ebx
219c(7): sub $0xb8,%rsp
21a3(8): mov 0xf0(%rsp),%rax
21ab(5): mov %rdx,0x10(%rsp)
21b0(5): mov %r8d,0x8(%rsp)
21b5(5): mov %r9d,0x78(%rsp)
21ba(5): mov %rax,0x20(%rsp)
21bf(8): mov 0xf8(%rsp),%rax
21c7(5): mov %rax,0x68(%rsp)
21cc(8): mov 0x100(%rsp),%rax
21d4(5): mov %rax,0x60(%rsp)
21d9(9): mov $0x28,%rax
21e2(8): mov %rax,0xa8(%rsp)
21ea(2): xor %eax,%eax
21ec(5): call 0xfffff074(%rip)
21f1(4): cmp $0xa,%r15d
21f5(5): mov %rax,0x58(%rsp)
21fa(6): jnbe 0x11b5(%rip)
2200(7): lea 0x2f99(%rip),%rcx
2207(3): mov %r15d,%edx
220a(4): movsxd 0x0(%rcx,%rdx,4),%rax
220e(3): add %rcx,%rax
2211(2): jmp %rax
2213(5): mov $0x1,0xe(%rsp)
2218(5): mov $0x0,0x7c(%rsp)
221d(3): xor %r12d,%r12d
2220(9): mov $0x0,0x50(%rsp)
2229(5): mov $0x1,0xf(%rsp)
222e(5): mov $0x0,0xd(%rsp)
2233(7): lea 0x2efb(%rip),%rax
223a(9): mov $0x1,0x18(%rsp)
2243(3): xor %r15d,%r15d
2246(8): mov $0x2,0x8(%rsp)
224e(5): mov %rax,0x48(%rsp)
2253(3): xor %r11d,%r11d
2256(3): mov %rbp,%rax
2259(3): mov %r12d,%r8d
225c(3): mov %r11,%rbp
225f(3): mov %rax,%r11
2262(6): nop 0x0(%rax,%rax,1)
2268(3): cmp %rbp,%r11
226b(4): setnz %r12b
226f(4): cmp $0xffffffff,%r11
2273(2): jnz 0xf(%rip)
2275(5): mov 0x10(%rsp),%rax
227a(4): cmp $0x0,0x0(%rax,%rbp,1)
227e(4): setnz %r12b
2282(3): test %r12b,%r12b
2285(6): jz 0x65b(%rip)
228b(5): cmp $0x2,0x8(%rsp)
2290(5): mov 0x10(%rsp),%rdi
2295(4): lea 0x0(%rdi,%rbp,1),%r9
2299(3): setnz %al
229c(4): and 0xd(%rsp),%al
22a0(3): mov %eax,%r10d
22a3(6): jz 0xad(%rip)
22a9(5): mov 0x18(%rsp),%rax
22ae(3): test %rax,%rax
22b1(6): jz 0x42f(%rip)
22b7(4): cmp $0xffffffff,%r11
22bb(5): lea 0x0(%rbp,%rax,1),%rbx
22c0(2): jnz 0x30(%rip)
22c2(4): cmp $0x1,%rax
22c6(2): jbe 0x2a(%rip)
22c8(5): mov %r8b,0x38(%rsp)
22cd(5): mov %r10b,0x30(%rsp)
22d2(5): mov %r9,0x28(%rsp)
22d7(5): call 0xffffef99(%rip)
22dc(6): movzx 0x38(%rsp),%r8d
22e2(6): movzx 0x30(%rsp),%r10d
22e8(3): mov %rax,%r11
22eb(5): mov 0x28(%rsp),%r9
22f0(3): cmp %r11,%rbx
22f3(5): mov %r10b,0x28(%rsp)
22f8(6): jnbe 0x5b8(%rip)
22fe(5): mov 0x18(%rsp),%rdx
2303(5): mov 0x48(%rsp),%rsi
2308(3): mov %r9,%rdi
230b(5): mov %r11,0x40(%rsp)
2310(5): mov %r8b,0x38(%rsp)
2315(5): mov %r9,0x30(%rsp)
231a(5): call 0xffffefd6(%rip)
231f(2): test %eax,%eax
2321(5): mov 0x30(%rsp),%r9
2326(6): movzx 0x38(%rsp),%r8d
232c(5): mov 0x40(%rsp),%r11
2331(6): jnz 0x57f(%rip)
2337(5): cmp $0x0,0xf(%rsp)
233c(6): movzx 0x28(%rsp),%r10d
2342(6): jnz 0xf83(%rip)
2348(8): nop 0x0(%rax,%rax,1)
2350(4): movzx (%r9),%ebx
2354(3): cmp $0x7e,%bl
2357(6): jnbe 0x321(%rip)
235d(7): lea 0x2e68(%rip),%rcx
2364(3): movzx %bl,%edx
2367(4): movsxd 0x0(%rcx,%rdx,4),%rax
236b(3): add %rcx,%rax
236e(2): jmp %rax
2370(3): xor %r10d,%r10d
2373(4): cmp $0x1,%r11
2377(3): setnz %al
237a(4): cmp $0xffffffff,%r11
237e(2): jnz 0xe(%rip)
2380(5): mov 0x10(%rsp),%rax
2385(4): cmp $0x0,0x1(%rax)
2389(3): setnz %al
238c(5): cmp $0x2,0x8(%rsp)
2391(3): setz %dl
2394(2): test %al,%al
2396(6): jz 0x252(%rip)
239c(3): xor %r12d,%r12d
239f(2): xor %eax,%eax
23a1(7): nop 0x0(%rax)
23a8(5): cmp $0x1,0xd(%rsp)
23ad(6): jnz 0x115(%rip)
23b3(2): test %dl,%dl
23b5(6): jnz 0x10d(%rip)
23bb(5): mov 0x20(%rsp),%rsi
23c0(3): test %rsi,%rsi
23c3(2): jz 0x16(%rip)
23c5(2): mov %ebx,%edx
23c7(3): shr $0x5,%dl
23ca(3): movzx %dl,%edx
23cd(3): mov 0x0(%rsi,%rdx,4),%edx
23d0(3): bt %ebx,%edx
23d3(6): jb 0x150(%rip)
23d9(3): test %r10b,%r10b
23dc(6): jnz 0x147(%rip)
23e2(3): xor $0x1,%eax
23e5(4): add $0x1,%rbp
23e9(3): and %r8d,%eax
23ec(2): test %al,%al
23ee(2): jz 0x22(%rip)
23f0(3): cmp %r15,%r13
23f3(2): jbe 0x7(%rip)
23f5(5): mov $0x27,0x0(%r14,%r15,1)
23fa(4): lea 0x1(%r15),%rax
23fe(3): cmp %rax,%r13
2401(2): jbe 0x8(%rip)
2403(6): mov $0x27,0x1(%r14,%r15,1)
2409(4): add $0x2,%r15
240d(3): xor %r8d,%r8d
2410(3): cmp %r13,%r15
2413(2): jnb 0x6(%rip)
2415(4): mov %bl,0x0(%r14,%r15,1)
2419(5): movzx 0xe(%rsp),%edi
241e(4): add $0x1,%r15
2422(5): mov $0x0,%eax
2427(3): test %r12b,%r12b
242a(3): cmove %eax,%edi
242d(5): mov %dil,0xe(%rsp)
2432(5): jmp 0xfffffe36(%rip)
2437(9): nop 0x0(%rax,%rax,1)
2440(3): xor %r10d,%r10d
2443(4): mov 0x8(%rsp),%eax
2447(3): cmp $0x2,%eax
244a(6): jz 0x5be(%rip)
2450(3): cmp $0x5,%eax
2453(6): jz 0x575(%rip)
2459(3): cmp $0x2,%eax
245c(5): mov $0x3f,%ebx
2461(3): setz %dl
2464(3): xor %r12d,%r12d
2467(2): xor %eax,%eax
2469(5): jmp 0xffffff3f(%rip)
246e(2): nop 
2470(3): xor %r10d,%r10d
2473(5): cmp $0x2,0x8(%rsp)
2478(6): jz 0x508(%rip)
247e(5): mov %r12b,0x7c(%rsp)
2483(2): xor %edx,%edx
2485(2): xor %eax,%eax
2487(5): mov $0x27,%ebx
248c(5): jmp 0xffffff1c(%rip)
2491(7): nop 0x0(%rax)
2498(5): mov $0x9,%edx
249d(5): mov $0x74,%ebx
24a2(5): cmp $0x2,0x8(%rsp)
24a7(3): setz %al
24aa(4): and 0xf(%rsp),%al
24ae(6): jnz 0x150(%rip)
24b4(5): cmp $0x0,0xd(%rsp)
24b9(2): jnz 0x67(%rip)
24bb(2): mov %edx,%ebx
24bd(3): xor %r12d,%r12d
24c0(2): xor %eax,%eax
24c2(5): cmp $0x0,0xf(%rsp)
24c7(6): jnz 0xfffffef4(%rip)
24cd(5): jmp 0xffffff0c(%rip)
24d2(6): nop 0x0(%rax,%rax,1)
24d8(5): mov $0x8,%edx
24dd(5): mov $0x62,%ebx
24e2(2): jmp 0xffffffd2(%rip)
24e4(4): nop 0x0(%rax)
24e8(5): cmp $0x2,0x8(%rsp)
24ed(6): jz 0x3d3(%rip)
24f3(5): cmp $0x0,0xd(%rsp)
24f8(6): jz 0x218(%rip)
24fe(5): cmp $0x0,0xf(%rsp)
2503(6): jz 0x20d(%rip)
2509(6): cmp $0x0,0x18(%rsp)
250f(6): jnz 0x3bc(%rip)
2515(5): mov $0x5c,%ebx
251a(6): nop 0x0(%rax,%rax,1)
2520(3): xor %r12d,%r12d
2523(5): cmp $0x2,0x8(%rsp)
2528(3): setz %dl
252b(5): cmp $0x0,0xf(%rsp)
2530(2): mov %edx,%eax
2532(6): jnz 0x856(%rip)
2538(3): mov %r8d,%eax
253b(3): xor $0x1,%eax
253e(2): and %dl,%al
2540(2): jz 0x31(%rip)
2542(3): cmp %r15,%r13
2545(2): jbe 0x7(%rip)
2547(5): mov $0x27,0x0(%r14,%r15,1)
254c(4): lea 0x1(%r15),%rdx
2550(3): cmp %rdx,%r13
2553(2): jbe 0x8(%rip)
2555(6): mov $0x24,0x1(%r14,%r15,1)
255b(4): lea 0x2(%r15),%rdx
255f(3): cmp %rdx,%r13
2562(2): jbe 0x8(%rip)
2564(6): mov $0x27,0x2(%r14,%r15,1)
256a(4): add $0x3,%r15
256e(3): mov %eax,%r8d
2571(3): cmp %r15,%r13
2574(2): jbe 0x7(%rip)
2576(5): mov $0x5c,0x0(%r14,%r15,1)
257b(4): add $0x1,%r15
257f(4): add $0x1,%rbp
2583(5): jmp 0xfffffe8d(%rip)
2588(8): nop 0x0(%rax,%rax,1)
2590(5): cmp $0x0,0xd(%rsp)
2595(6): jnz 0x1ce(%rip)
259b(2): xor %edx,%edx
259d(5): test $0x1,0x78(%rsp)
25a2(6): jz 0xffffff19(%rip)
25a8(4): add $0x1,%rbp
25ac(5): jmp 0xfffffcbc(%rip)
25b1(7): nop 0x0(%rax)
25b8(5): cmp $0x2,0x8(%rsp)
25bd(3): setz %dl
25c0(2): xor %eax,%eax
25c2(5): jmp 0xfffffde6(%rip)
25c7(9): nop 0x0(%rax,%rax,1)
25d0(5): mov $0x7,%edx
25d5(5): mov $0x61,%ebx
25da(5): jmp 0xfffffeda(%rip)
25df(1): nop 
25e0(5): cmp $0x2,0x8(%rsp)
25e5(3): setz %dl
25e8(3): test %rbp,%rbp
25eb(6): jnz 0xfffffdb1(%rip)
25f1(5): movzx 0xf(%rsp),%eax
25f6(2): and %dl,%al
25f8(6): jz 0xfffffdb0(%rip)
25fe(3): mov %r11,%rbp
2601(8): mov $0x2,0x8(%rsp)
2609(5): jmp 0x700(%rip)
260e(2): nop 
2610(5): cmp $0x2,0x8(%rsp)
2615(3): setz %dl
2618(3): xor %r12d,%r12d
261b(2): jmp 0xffffffd6(%rip)
261d(3): nop (%rax)
2620(5): cmp $0x2,0x8(%rsp)
2625(5): mov $0x20,%ebx
262a(3): setz %dl
262d(2): jmp 0xffffffc4(%rip)
262f(1): nop 
2630(5): mov $0xd,%edx
2635(5): mov $0x72,%ebx
263a(5): jmp 0xfffffe68(%rip)
263f(1): nop 
2640(5): mov $0xc,%edx
2645(5): mov $0x66,%ebx
264a(5): jmp 0xfffffe6a(%rip)
264f(1): nop 
2650(5): mov $0xb,%edx
2655(5): mov $0x76,%ebx
265a(5): jmp 0xfffffe5a(%rip)
265f(1): nop 
2660(5): mov $0xa,%edx
2665(5): mov $0x6e,%ebx
266a(5): jmp 0xfffffe38(%rip)
266f(1): nop 
2670(3): xor %r10d,%r10d
2673(5): nop 0x0(%rax,%rax,1)
2678(6): cmp $0x1,0x58(%rsp)
267e(6): jnz 0x3aa(%rip)
2684(5): mov %r11,0x38(%rsp)
2689(5): mov %r8b,0x30(%rsp)
268e(5): mov %r10b,0x28(%rsp)
2693(5): call 0xffffedad(%rip)
2698(3): mov (%rax),%rcx
269b(3): movzx %bl,%edx
269e(6): movzx 0x28(%rsp),%r10d
26a4(6): movzx 0x30(%rsp),%r8d
26aa(5): mov 0x38(%rsp),%r11
26af(5): mov $0x1,%edi
26b4(4): movzx 0x0(%rcx,%rdx,2),%eax
26b8(4): and $0x4000,%ax
26bc(4): setnz %r12b
26c0(3): setz %al
26c3(4): and 0xd(%rsp),%al
26c7(2): test %al,%al
26c9(6): jnz 0x998(%rip)
26cf(5): cmp $0x2,0x8(%rsp)
26d4(3): setz %dl
26d7(5): jmp 0xfffffcd1(%rip)
26dc(4): nop 0x0(%rax)
26e0(4): movzx (%r9),%ebx
26e4(3): cmp $0x7e,%bl
26e7(2): jnbe 0xffffff89(%rip)
26e9(7): lea 0x2cd8(%rip),%rcx
26f0(3): movzx %bl,%edx
26f3(4): movsxd 0x0(%rcx,%rdx,4),%rax
26f7(3): add %rcx,%rax
26fa(2): jmp %rax
26fc(4): nop 0x0(%rax)
2700(3): xor %r10d,%r10d
2703(5): cmp $0x0,0xd(%rsp)
2708(6): jnz 0xfffffdf6(%rip)
270e(2): nop 
2710(5): mov $0x5c,%edx
2715(5): mov $0x5c,%ebx
271a(5): jmp 0xfffffd9a(%rip)
271f(1): nop 
2720(5): mov $0xc,%edx
2725(3): xor %r10d,%r10d
2728(5): mov $0x66,%ebx
272d(5): jmp 0xfffffd87(%rip)
2732(6): nop 0x0(%rax,%rax,1)
2738(5): mov $0xa,%edx
273d(3): xor %r10d,%r10d
2740(5): mov $0x6e,%ebx
2745(5): jmp 0xfffffd5d(%rip)
274a(6): nop 0x0(%rax,%rax,1)
2750(5): mov $0x61,%ebx
2755(5): jmp 0xfffffdcb(%rip)
275a(6): nop 0x0(%rax,%rax,1)
2760(3): xor %r10d,%r10d
2763(5): cmp $0x2,0x8(%rsp)
2768(3): setz %dl
276b(5): cmp $0x0,0xf(%rsp)
2770(6): jnz 0xb9a(%rip)
2776(3): mov %r8d,%eax
2779(3): mov %r15,%rcx
277c(3): xor $0x1,%eax
277f(2): and %dl,%al
2781(2): jz 0x2f(%rip)
2783(3): cmp %r15,%r13
2786(2): jbe 0x7(%rip)
2788(5): mov $0x27,0x0(%r14,%r15,1)
278d(4): lea 0x1(%r15),%rcx
2791(3): cmp %rcx,%r13
2794(2): jbe 0x8(%rip)
2796(6): mov $0x24,0x1(%r14,%r15,1)
279c(4): lea 0x2(%r15),%rcx
27a0(3): cmp %rcx,%r13
27a3(6): jnbe 0x636(%rip)
27a9(4): lea 0x3(%r15),%rcx
27ad(3): mov %eax,%r8d
27b0(3): cmp %rcx,%r13
27b3(2): jbe 0x7(%rip)
27b5(5): mov $0x5c,0x0(%r14,%rcx,1)
27ba(5): cmp $0x2,0x8(%rsp)
27bf(4): lea 0x1(%rcx),%r15
27c3(6): jz 0x606(%rip)
27c9(4): lea 0x1(%rbp),%rax
27cd(3): cmp %r11,%rax
27d0(2): jnb 0x1b(%rip)
27d2(5): mov 0x10(%rsp),%rax
27d7(5): movzx 0x1(%rax,%rbp,1),%eax
27dc(4): mov %al,0x28(%rsp)
27e0(3): sub $0x30,%eax
27e3(2): cmp $0x9,%al
27e5(6): jbe 0x834(%rip)
27eb(3): mov %r12d,%eax
27ee(5): mov $0x30,%ebx
27f3(3): xor %r12d,%r12d
27f6(5): jmp 0xfffffbb2(%rip)
27fb(5): nop 0x0(%rax,%rax,1)
2800(5): cmp $0x2,0x8(%rsp)
2805(3): mov %r10d,%r12d
2808(3): setz %dl
280b(3): xor %r10d,%r10d
280e(2): xor %eax,%eax
2810(5): jmp 0xfffffb98(%rip)
2815(3): nop (%rax)
2818(5): cmp $0x2,0x8(%rsp)
281d(3): setz %dl
2820(3): xor %r10d,%r10d
2823(5): jmp 0xfffffdc5(%rip)
2828(8): nop 0x0(%rax,%rax,1)
2830(5): cmp $0x2,0x8(%rsp)
2835(3): setz %dl
2838(3): xor %r10d,%r10d
283b(3): xor %r12d,%r12d
283e(5): jmp 0xfffffdb3(%rip)
2843(5): nop 0x0(%rax,%rax,1)
2848(5): cmp $0x2,0x8(%rsp)
284d(3): mov %r10d,%r12d
2850(5): mov $0x20,%ebx
2855(3): setz %dl
2858(3): xor %r10d,%r10d
285b(5): jmp 0xfffffd96(%rip)
2860(5): mov $0xd,%edx
2865(3): xor %r10d,%r10d
2868(5): mov $0x72,%ebx
286d(5): jmp 0xfffffc35(%rip)
2872(6): nop 0x0(%rax,%rax,1)
2878(5): mov $0x76,%ebx
287d(5): jmp 0xfffffca3(%rip)
2882(6): nop 0x0(%rax,%rax,1)
2888(5): mov $0x9,%edx
288d(3): xor %r10d,%r10d
2890(5): mov $0x74,%ebx
2895(5): jmp 0xfffffc0d(%rip)
289a(6): nop 0x0(%rax,%rax,1)
28a0(5): mov $0x62,%ebx
28a5(5): jmp 0xfffffc7b(%rip)
28aa(6): nop 0x0(%rax,%rax,1)
28b0(3): xor %r10d,%r10d
28b3(5): jmp 0xfffffa9d(%rip)
28b8(8): nop 0x0(%rax,%rax,1)
28c0(5): cmp $0x0,0xf(%rsp)
28c5(6): jnz 0x96b(%rip)
28cb(4): add $0x1,%rbp
28cf(3): mov %r8d,%eax
28d2(3): xor %r12d,%r12d
28d5(5): mov $0x5c,%ebx
28da(5): jmp 0xfffffb12(%rip)
28df(1): nop 
28e0(5): cmp $0x2,0x8(%rsp)
28e5(5): movzx 0xf(%rsp),%ebx
28ea(3): mov %r8d,%r12d
28ed(3): mov %r11,%rbp
28f0(3): setz %dl
28f3(2): mov %ebx,%eax
28f5(3): test %r15,%r15
28f8(3): setz %cl
28fb(2): and %edx,%eax
28fd(2): and %cl,%al
28ff(6): jnz 0xa67(%rip)
2905(2): mov %ebx,%eax
2907(3): xor $0x1,%eax
290a(2): and %al,%dl
290c(6): jz 0x970(%rip)
2912(5): cmp $0x0,0x7c(%rsp)
2917(6): jz 0x963(%rip)
291d(5): cmp $0x0,0xe(%rsp)
2922(6): jnz 0x9fb(%rip)
2928(3): test %r13,%r13
292b(3): setz %al
292e(6): cmp $0x0,0x50(%rsp)
2934(3): setnz %dl
2937(2): and %dl,%al
2939(6): jz 0xa23(%rip)
293f(5): mov 0x50(%rsp),%r13
2944(7): lea 0x27ea(%rip),%rbx
294b(4): mov $0x27,(%r14)
294f(8): mov $0x2,0x8(%rsp)
2957(6): mov $0x1,%r15d
295d(9): mov $0x1,0x18(%rsp)
2966(5): mov $0x0,0xf(%rsp)
296b(5): mov %rbx,0x48(%rsp)
2970(4): mov %al,0x7c(%rsp)
2974(5): jmp 0xfffff8df(%rip)
2979(7): nop 0x0(%rax)
2980(5): cmp $0x0,0xf(%rsp)
2985(6): jnz 0x8ab(%rip)
298b(3): test %r13,%r13
298e(6): jz 0x402(%rip)
2994(2): xor %edx,%edx
2996(6): cmp $0x0,0x50(%rsp)
299c(6): jnz 0x3f4(%rip)
29a2(5): mov %r13,0x50(%rsp)
29a7(4): add $0x3,%r15
29ab(2): xor %eax,%eax
29ad(5): mov %r12b,0x7c(%rsp)
29b2(3): xor %r8d,%r8d
29b5(3): mov %rdx,%r13
29b8(5): mov $0x27,%ebx
29bd(5): jmp 0xfffffa1c(%rip)
29c2(6): nop 0x0(%rax,%rax,1)
29c8(5): test $0x4,0x78(%rsp)
29cd(2): jz 0x23(%rip)
29cf(4): lea 0x2(%rbp),%rcx
29d3(3): cmp %r11,%rcx
29d6(2): jnb 0x1a(%rip)
29d8(5): mov 0x10(%rsp),%rax
29dd(5): cmp $0x3f,0x1(%rax,%rbp,1)
29e2(6): jz 0x790(%rip)
29e8(8): nop 0x0(%rax,%rax,1)
29f0(2): xor %edx,%edx
29f2(3): xor %r12d,%r12d
29f5(2): xor %eax,%eax
29f7(5): mov $0x3f,%ebx
29fc(5): jmp 0xfffff9ac(%rip)
2a01(7): nop 0x0(%rax)
2a08(5): cmp $0x0,0xf(%rsp)
2a0d(6): jnz 0x823(%rip)
2a13(3): xor %r12d,%r12d
2a16(2): xor %eax,%eax
2a18(5): mov $0x3f,%ebx
2a1d(5): jmp 0xfffff9bc(%rip)
2a22(6): nop 0x0(%rax,%rax,1)
2a28(8): lea 0xa0(%rsp),%rax
2a30(4): cmp $0xffffffff,%r11
2a34(c): mov $0x0,0xa0(%rsp)
2a40(5): mov %rax,0x28(%rsp)
2a45(2): jnz 0x2f(%rip)
2a47(5): mov 0x10(%rsp),%rdi
2a4c(5): mov %r8b,0x40(%rsp)
2a51(5): mov %r10b,0x38(%rsp)
2a56(5): mov %r9,0x30(%rsp)
2a5b(5): call 0xffffe815(%rip)
2a60(6): movzx 0x40(%rsp),%r8d
2a66(6): movzx 0x38(%rsp),%r10d
2a6c(3): mov %rax,%r11
2a6f(5): mov 0x30(%rsp),%r9
2a74(8): lea 0x9c(%rsp),%rax
2a7c(2): xor %ecx,%ecx
2a7e(4): mov %bl,0x7e(%rsp)
2a82(5): mov %r8b,0x7d(%rsp)
2a87(3): mov %rcx,%rbx
2a8a(8): mov %r9,0x88(%rsp)
2a92(5): mov %rax,0x38(%rsp)
2a97(5): mov %r10b,0x7f(%rsp)
2a9c(8): mov %r15,0x80(%rsp)
2aa4(5): mov %r14,0x40(%rsp)
2aa9(5): mov %r13,0x70(%rsp)
2aae(5): mov %r11,0x30(%rsp)
2ab3(5): mov 0x10(%rsp),%rax
2ab8(5): lea 0x0(%rbp,%rbx,1),%r14
2abd(5): mov 0x30(%rsp),%rdx
2ac2(5): mov 0x28(%rsp),%rcx
2ac7(5): mov 0x38(%rsp),%rdi
2acc(4): lea 0x0(%rax,%r14,1),%r13
2ad0(3): sub %r14,%rdx
2ad3(3): mov %r13,%rsi
2ad6(5): call 0x1afa(%rip)
2adb(3): test %rax,%rax
2ade(3): mov %rax,%r15
2ae1(2): jz 0x50(%rip)
2ae3(4): cmp $0xffffffff,%rax
2ae7(6): jz 0x61e(%rip)
2aed(4): cmp $0xfffffffe,%rax
2af1(6): jz 0x5a0(%rip)
2af7(5): cmp $0x2,0x8(%rsp)
2afc(3): setz %al
2aff(4): and 0xf(%rsp),%al
2b03(6): jnz 0x19d(%rip)
2b09(7): mov 0x9c(%rsp),%edi
2b10(5): call 0xffffe920(%rip)
2b15(5): mov 0x28(%rsp),%rdi
2b1a(2): test %eax,%eax
2b1c(5): mov $0x0,%eax
2b21(4): cmove %eax,%r12d
2b25(3): add %r15,%rbx
2b28(5): call 0xffffe8f8(%rip)
2b2d(2): test %eax,%eax
2b2f(2): jz 0xffffff84(%rip)
2b31(3): mov %r12d,%edx
2b34(3): mov %rbx,%rdi
2b37(6): movzx 0x7d(%rsp),%r8d
2b3d(3): xor $0x1,%edx
2b40(5): movzx 0x7e(%rsp),%ebx
2b45(6): movzx 0x7f(%rsp),%r10d
2b4b(4): and 0xd(%rsp),%dl
2b4f(8): mov 0x80(%rsp),%r15
2b57(5): mov 0x40(%rsp),%r14
2b5c(5): mov 0x70(%rsp),%r13
2b61(5): mov 0x30(%rsp),%r11
2b66(4): cmp $0x1,%rdi
2b6a(6): jbe 0x601(%rip)
2b70(3): mov %rdi,%rcx
2b73(2): xor %esi,%esi
2b75(6): movzx 0xf(%rsp),%r9d
2b7b(3): add %rbp,%rcx
2b7e(5): mov 0x10(%rsp),%rdi
2b83(5): jmp 0xbb(%rip)
2b88(8): nop 0x0(%rax,%rax,1)
2b90(5): cmp $0x2,0x8(%rsp)
2b95(3): setz %al
2b98(3): test %r9b,%r9b
2b9b(6): jnz 0x4b5(%rip)
2ba1(3): mov %r8d,%esi
2ba4(3): xor $0x1,%esi
2ba7(3): and %sil,%al
2baa(2): jz 0x31(%rip)
2bac(3): cmp %r15,%r13
2baf(2): jbe 0x7(%rip)
2bb1(5): mov $0x27,0x0(%r14,%r15,1)
2bb6(4): lea 0x1(%r15),%rsi
2bba(3): cmp %rsi,%r13
2bbd(2): jbe 0x8(%rip)
2bbf(6): mov $0x24,0x1(%r14,%r15,1)
2bc5(4): lea 0x2(%r15),%rsi
2bc9(3): cmp %rsi,%r13
2bcc(2): jbe 0x8(%rip)
2bce(6): mov $0x27,0x2(%r14,%r15,1)
2bd4(4): add $0x3,%r15
2bd8(3): mov %eax,%r8d
2bdb(3): cmp %r15,%r13
2bde(2): jbe 0x7(%rip)
2be0(5): mov $0x5c,0x0(%r14,%r15,1)
2be5(4): lea 0x1(%r15),%rax
2be9(3): cmp %rax,%r13
2bec(2): jbe 0xf(%rip)
2bee(2): mov %ebx,%eax
2bf0(3): shr $0x6,%al
2bf3(3): add $0x30,%eax
2bf6(5): mov %al,0x1(%r14,%r15,1)
2bfb(4): lea 0x2(%r15),%rax
2bff(3): cmp %rax,%r13
2c02(2): jbe 0x12(%rip)
2c04(2): mov %ebx,%eax
2c06(3): shr $0x3,%al
2c09(3): and $0x7,%eax
2c0c(3): add $0x30,%eax
2c0f(5): mov %al,0x2(%r14,%r15,1)
2c14(3): and $0x7,%ebx
2c17(4): add $0x1,%rbp
2c1b(4): add $0x3,%r15
2c1f(3): add $0x30,%ebx
2c22(3): cmp %rcx,%rbp
2c25(6): jnb 0xfffff7eb(%rip)
2c2b(2): mov %edx,%esi
2c2d(3): cmp %r15,%r13
2c30(2): jbe 0x6(%rip)
2c32(4): mov %bl,0x0(%r14,%r15,1)
2c36(4): movzx 0x0(%rdi,%rbp,1),%ebx
2c3a(4): add $0x1,%r15
2c3e(2): test %dl,%dl
2c40(6): jnz 0xffffff50(%rip)
2c46(2): mov %esi,%eax
2c48(3): xor $0x1,%eax
2c4b(3): and %r8d,%eax
2c4e(3): test %r10b,%r10b
2c51(2): jz 0x10(%rip)
2c53(3): cmp %r15,%r13
2c56(2): jbe 0x7(%rip)
2c58(5): mov $0x5c,0x0(%r14,%r15,1)
2c5d(4): add $0x1,%r15
2c61(4): add $0x1,%rbp
2c65(3): cmp %rcx,%rbp
2c68(6): jnb 0xfffff784(%rip)
2c6e(2): test %al,%al
2c70(6): jz 0x3fe(%rip)
2c76(3): cmp %r15,%r13
2c79(2): jbe 0x7(%rip)
2c7b(5): mov $0x27,0x0(%r14,%r15,1)
2c80(4): lea 0x1(%r15),%rax
2c84(3): cmp %rax,%r13
2c87(2): jbe 0x8(%rip)
2c89(6): mov $0x27,0x1(%r14,%r15,1)
2c8f(4): add $0x2,%r15
2c93(3): xor %r10d,%r10d
2c96(3): xor %r8d,%r8d
2c99(2): jmp 0xffffff94(%rip)
2c9b(5): nop 0x0(%rax,%rax,1)
2ca0(4): cmp $0x1,%r15
2ca4(6): jz 0xfffffe65(%rip)
2caa(5): mov 0x10(%rsp),%rdi
2caf(4): lea 0x0(%rdi,%r15,1),%rcx
2cb3(5): lea 0x1(%rdi,%r14,1),%rdx
2cb8(4): lea 0x0(%rcx,%r14,1),%r8
2cbc(2): jmp 0x11(%rip)
2cbe(2): nop 
2cc0(4): add $0x1,%rdx
2cc4(3): cmp %rdx,%r8
2cc7(6): jz 0xfffffe42(%rip)
2ccd(3): movzx (%rdx),%ecx
2cd0(3): sub $0x5b,%ecx
2cd3(3): cmp $0x21,%cl
2cd6(2): jnbe 0xffffffea(%rip)
2cd8(5): mov $0x1,%esi
2cdd(3): shl/sal %cl,%rsi
2ce0(3): mov %rsi,%rcx
2ce3(a): mov $0x8589934635,%rsi
2ced(3): test %rsi,%rcx
2cf0(2): jz 0xffffffd0(%rip)
2cf2(5): mov 0x40(%rsp),%r14
2cf7(5): mov 0x70(%rsp),%r13
2cfc(5): mov 0x30(%rsp),%rbp
2d01(8): mov $0x2,0x8(%rsp)
2d09(5): cmp $0x0,0xd(%rsp)
2d0e(2): jz 0x12(%rip)
2d10(2): test %al,%al
2d12(5): mov $0x4,%eax
2d17(5): cmove 0x8(%rsp),%eax
2d1c(4): mov %eax,0x8(%rsp)
2d20(4): sub $0x8,%rsp
2d24(3): mov %rbp,%rcx
2d27(3): mov %r13,%rsi
2d2a(4): push 0x68(%rsp)
2d2e(4): push 0x78(%rsp)
2d32(3): mov %r14,%rdi
2d35(2): push $0x0
2d37(8): mov 0x98(%rsp),%r9d
2d3f(5): mov 0x28(%rsp),%r8d
2d44(5): mov 0x30(%rsp),%rdx
2d49(4): and $0xfd,%r9d
2d4d(5): call 0xfffff433(%rip)
2d52(4): add $0x20,%rsp
2d56(3): mov %rax,%r15
2d59(8): mov 0xa8(%rsp),%rbx
2d61(9): xor $0x28,%rbx
2d6a(3): mov %r15,%rax
2d6d(6): jnz 0x606(%rip)
2d73(7): add $0xb8,%rsp
2d7a(1): pop %rbx
2d7b(1): pop %rbp
2d7c(2): pop %r12
2d7e(2): pop %r13
2d80(2): pop %r14
2d82(2): pop %r15
2d84(1): ret near (%rsp)
2d85(3): nop (%rax)
2d88(3): mov %r11,%rbp
2d8b(5): jmp 0xffffff7e(%rip)
2d90(3): cmp %r15,%r13
2d93(2): jbe 0x7(%rip)
2d95(5): mov $0x27,0x0(%r14,%r15,1)
2d9a(4): lea 0x1(%r15),%rax
2d9e(3): cmp %rax,%r13
2da1(2): jbe 0x8(%rip)
2da3(6): mov $0x5c,0x1(%r14,%r15,1)
2da9(4): lea 0x2(%r15),%rax
2dad(3): cmp %rax,%r13
2db0(6): jbe 0x5f2(%rip)
2db6(3): mov %r13,%rdx
2db9(6): mov $0x27,0x2(%r14,%r15,1)
2dbf(5): mov 0x50(%rsp),%r13
2dc4(5): jmp 0xfffffbde(%rip)
2dc9(3): mov %r12d,%eax
2dcc(5): mov $0x30,%ebx
2dd1(3): xor %r12d,%r12d
2dd4(5): jmp 0xfffff605(%rip)
2dd9(6): mov $0x27,0x2(%r14,%r15,1)
2ddf(5): jmp 0xfffff9ca(%rip)
2de4(2): test %ebx,%ebx
2de6(6): jnz 0xfffff42d(%rip)
2dec(5): mov $0x1,0xd(%rsp)
2df1(3): test %r13,%r13
2df4(6): jnz 0x596(%rip)
2dfa(7): lea 0x2334(%rip),%rax
2e01(9): mov $0x0,0x50(%rsp)
2e0a(5): mov $0x1,0xe(%rsp)
2e0f(5): mov $0x0,0x7c(%rsp)
2e14(3): xor %r12d,%r12d
2e17(5): mov $0x0,0xf(%rsp)
2e1c(9): mov $0x1,0x18(%rsp)
2e25(5): mov %rax,0x48(%rsp)
2e2a(6): mov $0x1,%r15d
2e30(8): mov $0x2,0x8(%rsp)
2e38(5): jmp 0xfffff41b(%rip)
2e3d(3): nop (%rax)
2e40(2): test %ebx,%ebx
2e42(6): jnz 0x3fb(%rip)
2e48(3): test %r13,%r13
2e4b(6): jz 0x22b(%rip)
2e51(4): mov $0x22,(%r14)
2e55(5): mov $0x1,0xe(%rsp)
2e5a(3): xor %r12d,%r12d
2e5d(5): mov $0x0,0x7c(%rsp)
2e62(9): mov $0x0,0x50(%rsp)
2e6b(7): lea 0x22c1(%rip),%rax
2e72(5): mov $0x0,0xf(%rsp)
2e77(5): mov $0x1,0xd(%rsp)
2e7c(9): mov $0x1,0x18(%rsp)
2e85(6): mov $0x1,%r15d
2e8b(5): mov %rax,0x48(%rsp)
2e90(5): jmp 0xfffff3c3(%rip)
2e95(7): lea 0x2297(%rip),%rax
2e9c(5): mov $0x1,0xe(%rsp)
2ea1(5): mov $0x0,0x7c(%rsp)
2ea6(3): xor %r12d,%r12d
2ea9(9): mov $0x0,0x50(%rsp)
2eb2(5): mov $0x1,0xf(%rsp)
2eb7(5): mov $0x1,0xd(%rsp)
2ebc(9): mov $0x1,0x18(%rsp)
2ec5(3): xor %r15d,%r15d
2ec8(5): mov %rax,0x48(%rsp)
2ecd(8): mov $0x5,0x8(%rsp)
2ed5(5): jmp 0xfffff37e(%rip)
2eda(5): mov $0x1,0xe(%rsp)
2edf(5): mov $0x0,0x7c(%rsp)
2ee4(3): xor %r12d,%r12d
2ee7(9): mov $0x0,0x50(%rsp)
2ef0(5): mov $0x0,0xf(%rsp)
2ef5(3): xor %r15d,%r15d
2ef8(5): mov $0x1,0xd(%rsp)
2efd(9): mov $0x0,0x18(%rsp)
2f06(9): mov $0x0,0x48(%rsp)
2f0f(5): jmp 0xfffff344(%rip)
2f14(5): cmp $0xa,0x8(%rsp)
2f19(2): jz 0x58(%rip)
2f1b(7): lea 0x2215(%rip),%rsi
2f22(2): xor %edi,%edi
2f24(5): mov $0x5,%edx
2f29(5): call 0xffffe327(%rip)
2f2e(3): mov %rax,%rcx
2f31(5): mov %rax,0x68(%rsp)
2f36(7): lea 0x21fa(%rip),%rax
2f3d(3): cmp %rax,%rcx
2f40(6): jz 0x39e(%rip)
2f46(7): lea 0x21e8(%rip),%rsi
2f4d(2): xor %edi,%edi
2f4f(5): mov $0x5,%edx
2f54(5): call 0xffffe2fc(%rip)
2f59(3): mov %rax,%rcx
2f5c(5): mov %rax,0x60(%rsp)
2f61(7): lea 0x21cd(%rip),%rax
2f68(3): cmp %rax,%rcx
2f6b(6): jz 0x389(%rip)
2f71(3): xor %r15d,%r15d
2f74(2): test %ebx,%ebx
2f76(6): jz 0x1c7(%rip)
2f7c(2): test %ebx,%ebx
2f7e(5): mov 0x60(%rsp),%rbx
2f83(5): setnz 0xf(%rsp)
2f88(3): xor %r12d,%r12d
2f8b(3): mov %rbx,%rdi
2f8e(5): call 0xffffe2e2(%rip)
2f93(5): mov %rbx,0x48(%rsp)
2f98(5): mov %rax,0x18(%rsp)
2f9d(5): mov $0x1,0xe(%rsp)
2fa2(5): mov $0x0,0x7c(%rsp)
2fa7(9): mov $0x0,0x50(%rsp)
2fb0(5): mov $0x1,0xd(%rsp)
2fb5(5): jmp 0xfffff29e(%rip)
2fba(5): mov $0x1,0xe(%rsp)
2fbf(5): mov $0x0,0x7c(%rsp)
2fc4(3): xor %r12d,%r12d
2fc7(9): mov $0x0,0x50(%rsp)
2fd0(5): mov $0x0,0xf(%rsp)
2fd5(3): xor %r15d,%r15d
2fd8(5): mov $0x0,0xd(%rsp)
2fdd(9): mov $0x0,0x18(%rsp)
2fe6(9): mov $0x0,0x48(%rsp)
2fef(5): jmp 0xfffff264(%rip)
2ff4(5): mov $0x1,0xe(%rsp)
2ff9(5): mov $0x0,0x7c(%rsp)
2ffe(3): xor %r12d,%r12d
3001(9): mov $0x0,0x50(%rsp)
300a(5): mov $0x1,0xf(%rsp)
300f(5): mov $0x1,0xd(%rsp)
3014(5): jmp 0xfffff21f(%rip)
3019(3): cmp %r15,%r13
301c(2): jbe 0x7(%rip)
301e(5): mov $0x30,0x0(%r14,%r15,1)
3023(4): lea 0x2(%rcx),%rax
3027(3): cmp %rax,%r13
302a(2): jbe 0x8(%rip)
302c(6): mov $0x30,0x2(%r14,%rcx,1)
3032(3): mov %r12d,%eax
3035(4): lea 0x3(%rcx),%r15
3039(3): xor %r12d,%r12d
303c(5): mov $0x30,%ebx
3041(5): jmp 0xfffff367(%rip)
3046(a): nop 0x0(%rax,%rax,1)
3050(5): movzx 0xf(%rsp),%ebx
3055(3): mov %r11,%rbp
3058(4): mov %bl,0xd(%rsp)
305c(5): jmp 0xfffffcad(%rip)
3061(5): movzx 0xd(%rsp),%edx
3066(3): xor %r12d,%r12d
3069(5): jmp 0xfffffb07(%rip)
306e(3): xor %r10d,%r10d
3071(5): jmp 0xfffffbbc(%rip)
3076(9): mov $0x0,0x50(%rsp)
307f(5): mov $0x1,0xe(%rsp)
3084(3): xor %r12d,%r12d
3087(5): mov $0x0,0x7c(%rsp)
308c(5): jmp 0xfffffddf(%rip)
3091(5): mov 0x30(%rsp),%r11
3096(3): mov %r14,%rsi
3099(3): mov %r13,%rcx
309c(3): mov %rbx,%rax
309f(3): mov %rbx,%rdi
30a2(6): movzx 0x7d(%rsp),%r8d
30a8(5): movzx 0x7e(%rsp),%ebx
30ad(8): mov 0x88(%rsp),%r9
30b5(3): cmp %r11,%rsi
30b8(6): movzx 0x7f(%rsp),%r10d
30be(8): mov 0x80(%rsp),%r15
30c6(5): mov 0x40(%rsp),%r14
30cb(5): mov 0x70(%rsp),%r13
30d0(2): jnb 0x28(%rip)
30d2(3): cmp $0x0,(%rcx)
30d5(2): jnz 0x12(%rip)
30d7(2): jmp 0x21(%rip)
30d9(7): nop 0x0(%rax)
30e0(5): cmp $0x0,0x0(%r9,%rax,1)
30e5(2): jz 0x10(%rip)
30e7(4): add $0x1,%rax
30eb(5): lea 0x0(%rbp,%rax,1),%rdx
30f0(3): cmp %rdx,%r11
30f3(2): jnbe 0xffffffed(%rip)
30f5(3): mov %rax,%rdi
30f8(5): movzx 0xd(%rsp),%edx
30fd(3): xor %r12d,%r12d
3100(5): jmp 0xfffffa66(%rip)
3105(3): mov %rbx,%rdi
3108(6): movzx 0x7d(%rsp),%r8d
310e(5): movzx 0x7e(%rsp),%ebx
3113(6): movzx 0x7f(%rsp),%r10d
3119(8): mov 0x80(%rsp),%r15
3121(3): xor %r12d,%r12d
3124(5): mov 0x40(%rsp),%r14
3129(5): mov 0x70(%rsp),%r13
312e(5): mov 0x30(%rsp),%r11
3133(5): movzx 0xd(%rsp),%edx
3138(5): jmp 0xfffffa2e(%rip)
313d(5): mov 0x68(%rsp),%rdx
3142(3): movzx (%rdx),%eax
3145(2): test %al,%al
3147(6): jz 0xfffffe35(%rip)
314d(3): nop (%rax)
3150(3): cmp %r15,%r13
3153(2): jbe 0x6(%rip)
3155(4): mov %al,0x0(%r14,%r15,1)
3159(4): add $0x1,%r15
315d(5): movzx 0x0(%rdx,%r15,1),%eax
3162(2): test %al,%al
3164(2): jnz 0xffffffec(%rip)
3166(5): jmp 0xfffffe16(%rip)
316b(2): mov %edx,%eax
316d(5): jmp 0xfffff55a(%rip)
3172(4): movzx 0x0(%rax,%rcx,1),%ebx
3176(3): cmp $0x3e,%bl
3179(6): jnbe 0xfffff877(%rip)
317f(a): mov $0x8070630310989004800,%rax
3189(4): bt %rbx,%rax
318d(6): jnb 0xfffff863(%rip)
3193(5): cmp $0x0,0xf(%rsp)
3198(6): jnz 0x1ea(%rip)
319e(3): cmp %r15,%r13
31a1(2): jbe 0x7(%rip)
31a3(5): mov $0x3f,0x0(%r14,%r15,1)
31a8(4): lea 0x1(%r15),%rax
31ac(3): cmp %rax,%r13
31af(2): jbe 0x8(%rip)
31b1(6): mov $0x22,0x1(%r14,%r15,1)
31b7(4): lea 0x2(%r15),%rax
31bb(3): cmp %rax,%r13
31be(2): jbe 0x8(%rip)
31c0(6): mov $0x22,0x2(%r14,%r15,1)
31c6(4): lea 0x3(%r15),%rax
31ca(3): cmp %rax,%r13
31cd(2): jbe 0x8(%rip)
31cf(6): mov $0x3f,0x3(%r14,%r15,1)
31d5(4): add $0x4,%r15
31d9(2): xor %edx,%edx
31db(3): xor %r12d,%r12d
31de(2): xor %eax,%eax
31e0(3): mov %rcx,%rbp
31e3(5): jmp 0xfffff1c5(%rip)
31e8(2): test %ebx,%ebx
31ea(6): jz 0x18e(%rip)
31f0(7): lea 0x1f3e(%rip),%rax
31f7(5): mov $0x1,0xe(%rsp)
31fc(5): mov $0x0,0x7c(%rsp)
3201(3): xor %r12d,%r12d
3204(9): mov $0x0,0x50(%rsp)
320d(5): mov $0x1,0xf(%rsp)
3212(5): mov $0x0,0xd(%rsp)
3217(9): mov $0x1,0x18(%rsp)
3220(3): xor %r15d,%r15d
3223(5): mov %rax,0x48(%rsp)
3228(5): jmp 0xfffff02b(%rip)
322d(3): nop (%rax)
3230(3): mov %r11,%rbp
3233(5): movzx 0xf(%rsp),%eax
3238(5): jmp 0xfffffad1(%rip)
323d(7): lea 0x1eef(%rip),%rax
3244(5): mov $0x1,0xe(%rsp)
3249(5): mov $0x0,0x7c(%rsp)
324e(3): xor %r12d,%r12d
3251(9): mov $0x0,0x50(%rsp)
325a(5): mov $0x1,0xf(%rsp)
325f(5): mov $0x1,0xd(%rsp)
3264(9): mov $0x1,0x18(%rsp)
326d(3): xor %r15d,%r15d
3270(5): mov %rax,0x48(%rsp)
3275(5): jmp 0xffffefde(%rip)
327a(2): mov %edx,%eax
327c(5): mov 0x48(%rsp),%rbx
3281(3): test %rbx,%rbx
3284(2): jz 0x2e(%rip)
3286(2): test %al,%al
3288(2): jz 0x2a(%rip)
328a(3): movzx (%rbx),%ecx
328d(3): mov %rbx,%rax
3290(2): test %cl,%cl
3292(2): jz 0x20(%rip)
3294(3): mov %r15,%rdx
3297(3): sub %r15,%rax
329a(3): cmp %rdx,%r13
329d(2): jbe 0x6(%rip)
329f(4): mov %cl,0x0(%r14,%rdx,1)
32a3(4): add $0x1,%rdx
32a7(4): movzx 0x0(%rax,%rdx,1),%ecx
32ab(2): test %cl,%cl
32ad(2): jnz 0xffffffed(%rip)
32af(3): mov %rdx,%r15
32b2(3): cmp %r15,%r13
32b5(6): jbe 0xfffffaa4(%rip)
32bb(5): mov $0x0,0x0(%r14,%r15,1)
32c0(5): jmp 0xfffffa99(%rip)
32c5(5): cmp $0x2,0x8(%rsp)
32ca(5): movzx 0xf(%rsp),%ebx
32cf(3): mov %r11,%rbp
32d2(3): setz %al
32d5(4): mov %bl,0xd(%rsp)
32d9(5): jmp 0xfffffa30(%rip)
32de(4): mov 0x8(%rsp),%esi
32e2(3): mov %rcx,%rdi
32e5(5): call 0xffffedab(%rip)
32ea(5): mov %rax,0x68(%rsp)
32ef(5): jmp 0xfffffc57(%rip)
32f4(4): mov 0x8(%rsp),%esi
32f8(3): mov %rcx,%rdi
32fb(5): call 0xffffed95(%rip)
3300(5): mov %rax,0x60(%rsp)
3305(5): jmp 0xfffffc6c(%rip)
330a(5): movzx 0xf(%rsp),%ebx
330f(3): mov %r11,%rbp
3312(2): mov %edx,%eax
3314(4): mov %bl,0xd(%rsp)
3318(5): jmp 0xfffff9f1(%rip)
331d(4): sub $0x8,%rsp
3321(6): mov $0x5,%r8d
3327(3): mov %r11,%rcx
332a(4): push 0x68(%rsp)
332e(4): push 0x78(%rsp)
3332(3): mov %r14,%rdi
3335(4): push 0x38(%rsp)
3339(8): mov 0x98(%rsp),%r9d
3341(5): mov 0x30(%rsp),%rdx
3346(5): mov 0x70(%rsp),%rsi
334b(5): call 0xffffee35(%rip)
3350(4): add $0x20,%rsp
3354(3): mov %rax,%r15
3357(5): jmp 0xfffffa02(%rip)
335c(5): movzx 0x7c(%rsp),%eax
3361(5): jmp 0xffffff1b(%rip)
3366(8): mov $0x2,0x8(%rsp)
336e(5): jmp 0xfffff99b(%rip)
3373(5): call 0xffffdf0d(%rip)
3378(5): mov $0x0,0xd(%rsp)
337d(5): jmp 0xfffffa74(%rip)
3382(3): mov %r11,%rbp
3385(5): jmp 0xfffff99b(%rip)
338a(5): mov $0x1,0xe(%rsp)
338f(2): xor %eax,%eax
3391(3): xor %r12d,%r12d
3394(9): mov $0x0,0x50(%rsp)
339d(5): jmp 0xfffff5a7(%rip)
33a2(3): mov %r13,%rdx
33a5(5): mov 0x50(%rsp),%r13
33aa(5): jmp 0xfffff5f8(%rip)
33af(5): call 0xffffde21(%rip)

"quotearg_n_options" :
33c0(2): push %r15
33c2(2): push %r14
33c4(3): movsxd %edi,%r15
33c7(2): push %r13
33c9(2): push %r12
33cb(3): mov %rdx,%r14
33ce(1): push %rbp
33cf(1): push %rbx
33d0(3): mov %rcx,%rbp
33d3(4): sub $0x28,%rsp
33d7(5): mov %rsi,0x8(%rsp)
33dc(5): call 0xffffde04(%rip)
33e1(3): mov %rax,%r13
33e4(2): mov (%rax),%eax
33e6(3): test %r15d,%r15d
33e9(7): mov 0x203c70(%rip),%rbx
33f0(4): mov %eax,0x18(%rsp)
33f4(6): js 0x16d(%rip)
33fa(7): cmp %r15d,0x203c57(%rip)
3401(2): jnle 0x64(%rip)
3403(7): cmp $0x7fffffff,%r15d
340a(6): jz 0x15c(%rip)
3410(4): lea 0x1(%r15),%r12d
3414(7): lea 0x203c55(%rip),%rax
341b(3): movsxd %r12d,%rsi
341e(4): shl/sal $0x4,%rsi
3422(3): cmp %rax,%rbx
3425(6): jz 0x11b(%rip)
342b(3): mov %rbx,%rdi
342e(5): call 0xf72(%rip)
3433(3): mov %rax,%rbx
3436(7): mov %rax,0x203c23(%rip)
343d(7): movsxd 0x203c14(%rip),%rdi
3444(3): mov %r12d,%edx
3447(2): xor %esi,%esi
3449(2): sub %edi,%edx
344b(4): shl/sal $0x4,%rdi
344f(3): movsxd %edx,%rdx
3452(3): add %rbx,%rdi
3455(4): shl/sal $0x4,%rdx
3459(5): call 0xffffde87(%rip)
345e(7): mov %r12d,0x203bf3(%rip)
3465(3): mov 0x4(%rbp),%eax
3468(4): shl/sal $0x4,%r15
346c(4): sub $0x8,%rsp
3470(3): add %r15,%rbx
3473(4): lea 0x8(%rbp),%r15
3477(4): mov 0x0(%rbp),%r8d
347b(3): mov (%rbx),%r11
347e(4): mov 0x8(%rbx),%r12
3482(3): mov %r14,%rcx
3485(3): or $0x1,%eax
3488(4): mov %eax,0x24(%rsp)
348c(3): push 0x30(%rbp)
348f(3): mov %eax,%r9d
3492(3): push 0x28(%rbp)
3495(2): push %r15
3497(3): mov %r11,%rsi
349a(5): mov 0x28(%rsp),%rdx
349f(3): mov %r12,%rdi
34a2(5): mov %r11,0x30(%rsp)
34a7(5): call 0xffffecd9(%rip)
34ac(4): add $0x20,%rsp
34b0(5): mov 0x10(%rsp),%r11
34b5(3): cmp %rax,%r11
34b8(2): jnbe 0x69(%rip)
34ba(4): lea 0x1(%rax),%rsi
34be(7): lea 0x203c1b(%rip),%rax
34c5(3): cmp %rax,%r12
34c8(3): mov %rsi,(%rbx)
34cb(2): jz 0x14(%rip)
34cd(3): mov %r12,%rdi
34d0(5): mov %rsi,0x10(%rsp)
34d5(5): call 0xffffdceb(%rip)
34da(5): mov 0x10(%rsp),%rsi
34df(3): mov %rsi,%rdi
34e2(5): mov %rsi,0x10(%rsp)
34e7(5): call 0xe59(%rip)
34ec(4): sub $0x8,%rsp
34f0(4): mov %rax,0x8(%rbx)
34f4(4): mov 0x0(%rbp),%r8d
34f8(3): push 0x30(%rbp)
34fb(3): push 0x28(%rbp)
34fe(3): mov %r14,%rcx
3501(2): push %r15
3503(5): mov 0x3c(%rsp),%r9d
3508(3): mov %rax,%rdi
350b(5): mov 0x28(%rsp),%rdx
3510(5): mov 0x30(%rsp),%rsi
3515(3): mov %rax,%r12
3518(5): call 0xffffec68(%rip)
351d(4): add $0x20,%rsp
3521(4): mov 0x18(%rsp),%eax
3525(4): mov %eax,0x0(%r13)
3529(4): add $0x28,%rsp
352d(3): mov %r12,%rax
3530(1): pop %rbx
3531(1): pop %rbp
3532(2): pop %r12
3534(2): pop %r13
3536(2): pop %r14
3538(2): pop %r15
353a(1): ret near (%rsp)
353b(5): nop 0x0(%rax,%rax,1)
3540(2): xor %edi,%edi
3542(5): call 0xe5e(%rip)
3547(8): movdqa 0x203b21(%rip),%xmm0
354f(3): mov %rax,%rbx
3552(7): mov %rax,0x203b07(%rip)
3559(3): movups %xmm0,(%rax)
355c(5): jmp 0xfffffee1(%rip)
3561(5): call 0xffffdc6f(%rip)
3566(5): call 0x102a(%rip)

"clone_quoting_options" :
3570(2): push %r12
3572(1): push %rbp
3573(1): push %rbx
3574(3): mov %rdi,%rbx
3577(5): call 0xffffdc69(%rip)
357c(3): mov (%rax),%r12d
357f(3): mov %rax,%rbp
3582(7): lea 0x203c57(%rip),%rax
3589(3): test %rbx,%rbx
358c(5): mov $0x38,%esi
3591(4): cmove %rax,%rbx
3595(3): mov %rbx,%rdi
3598(5): call 0xfa8(%rip)
359d(4): mov %r12d,0x0(%rbp)
35a1(1): pop %rbx
35a2(1): pop %rbp
35a3(2): pop %r12
35a5(1): ret near (%rsp)

"get_quoting_style" :
35b0(7): lea 0x203c29(%rip),%rax
35b7(3): test %rdi,%rdi
35ba(4): cmove %rax,%rdi
35be(2): mov (%rdi),%eax
35c0(1): ret near (%rsp)

"set_quoting_style" :
35d0(7): lea 0x203c09(%rip),%rax
35d7(3): test %rdi,%rdi
35da(4): cmove %rax,%rdi
35de(2): mov %esi,(%rdi)
35e0(1): ret near (%rsp)

"set_char_quoting" :
35f0(7): lea 0x203be9(%rip),%rax
35f7(3): test %rdi,%rdi
35fa(2): mov %esi,%ecx
35fc(4): cmove %rax,%rdi
3600(2): mov %esi,%eax
3602(3): and $0x1f,%ecx
3605(3): shr $0x5,%al
3608(3): movzx %al,%eax
360b(5): lea 0x8(%rdi,%rax,4),%rdi
3610(2): mov (%rdi),%esi
3612(2): mov %esi,%eax
3614(2): shr %cl,%eax
3616(2): xor %eax,%edx
3618(3): and $0x1,%eax
361b(3): and $0x1,%edx
361e(2): shl/sal %cl,%edx
3620(2): xor %esi,%edx
3622(2): mov %edx,(%rdi)
3624(1): ret near (%rsp)

"set_quoting_flags" :
3630(7): lea 0x203ba9(%rip),%rax
3637(3): test %rdi,%rdi
363a(4): cmove %rax,%rdi
363e(3): mov 0x4(%rdi),%eax
3641(3): mov %esi,0x4(%rdi)
3644(1): ret near (%rsp)

"set_custom_quoting" :
3650(7): lea 0x203b89(%rip),%rax
3657(3): test %rdi,%rdi
365a(4): cmove %rax,%rdi
365e(3): test %rsi,%rsi
3661(6): mov $0xa,(%rdi)
3667(2): jz 0x10(%rip)
3669(3): test %rdx,%rdx
366c(2): jz 0xb(%rip)
366e(4): mov %rsi,0x28(%rdi)
3672(4): mov %rdx,0x30(%rdi)
3676(1): ret near (%rsp)
3677(4): sub $0x8,%rsp
367b(5): call 0xffffdb55(%rip)

"quotearg_buffer" :
3680(2): push %r15
3682(2): push %r14
3684(7): lea 0x203b55(%rip),%rax
368b(2): push %r13
368d(2): push %r12
368f(3): mov %rdi,%r13
3692(1): push %rbp
3693(1): push %rbx
3694(3): mov %r8,%rbx
3697(3): mov %rsi,%r14
369a(3): mov %rdx,%r15
369d(4): sub $0x18,%rsp
36a1(3): test %r8,%r8
36a4(4): cmove %rax,%rbx
36a8(5): mov %rcx,0x8(%rsp)
36ad(5): call 0xffffdb33(%rip)
36b2(3): mov (%rax),%r12d
36b5(3): mov %rax,%rbp
36b8(4): lea 0x8(%rbx),%rax
36bc(4): sub $0x8,%rsp
36c0(4): mov 0x4(%rbx),%r9d
36c4(3): push 0x30(%rbx)
36c7(3): mov (%rbx),%r8d
36ca(3): push 0x28(%rbx)
36cd(3): mov %r15,%rdx
36d0(1): push %rax
36d1(5): mov 0x28(%rsp),%rcx
36d6(3): mov %r14,%rsi
36d9(3): mov %r13,%rdi
36dc(5): call 0xffffeaa4(%rip)
36e1(4): mov %r12d,0x0(%rbp)
36e5(4): add $0x38,%rsp
36e9(1): pop %rbx
36ea(1): pop %rbp
36eb(2): pop %r12
36ed(2): pop %r13
36ef(2): pop %r14
36f1(2): pop %r15
36f3(1): ret near (%rsp)

"quotearg_alloc_mem" :
3700(2): push %r15
3702(2): push %r14
3704(7): lea 0x203ad5(%rip),%rax
370b(2): push %r13
370d(2): push %r12
370f(3): mov %rdx,%r12
3712(1): push %rbp
3713(1): push %rbx
3714(3): mov %rcx,%rbx
3717(3): mov %rdi,%r14
371a(3): mov %rsi,%r15
371d(4): sub $0x38,%rsp
3721(3): test %rcx,%rcx
3724(4): cmove %rax,%rbx
3728(2): xor %ebp,%ebp
372a(5): call 0xffffdab6(%rip)
372f(3): test %r12,%r12
3732(3): mov %rax,%r13
3735(2): mov (%rax),%eax
3737(4): setz %bpl
373b(3): or 0x4(%rbx),%ebp
373e(4): lea 0x8(%rbx),%r10
3742(4): sub $0x8,%rsp
3746(3): mov (%rbx),%r8d
3749(3): mov %r15,%rcx
374c(4): mov %eax,0x14(%rsp)
3750(3): push 0x30(%rbx)
3753(3): mov %r14,%rdx
3756(3): push 0x28(%rbx)
3759(2): push %r10
375b(2): xor %esi,%esi
375d(3): mov %ebp,%r9d
3760(2): xor %edi,%edi
3762(5): mov %r10,0x40(%rsp)
3767(5): call 0xffffea19(%rip)
376c(4): lea 0x1(%rax),%rsi
3770(5): mov %rax,0x48(%rsp)
3775(4): add $0x20,%rsp
3779(3): mov %rsi,%rdi
377c(5): mov %rsi,0x18(%rsp)
3781(5): call 0xbbf(%rip)
3786(5): mov %rax,0x10(%rsp)
378b(4): sub $0x8,%rsp
378f(3): push 0x30(%rbx)
3792(3): push 0x28(%rbx)
3795(5): mov 0x38(%rsp),%r10
379a(3): mov %ebp,%r9d
379d(3): mov (%rbx),%r8d
37a0(3): mov %r15,%rcx
37a3(3): mov %r14,%rdx
37a6(3): mov %rax,%rdi
37a9(2): push %r10
37ab(5): mov 0x38(%rsp),%rsi
37b0(5): call 0xffffe9d0(%rip)
37b5(4): mov 0x2c(%rsp),%eax
37b9(4): add $0x20,%rsp
37bd(3): test %r12,%r12
37c0(4): mov %eax,0x0(%r13)
37c4(2): jz 0xb(%rip)
37c6(5): mov 0x28(%rsp),%r11
37cb(4): mov %r11,(%r12)
37cf(5): mov 0x10(%rsp),%rax
37d4(4): add $0x38,%rsp
37d8(1): pop %rbx
37d9(1): pop %rbp
37da(2): pop %r12
37dc(2): pop %r13
37de(2): pop %r14
37e0(2): pop %r15
37e2(1): ret near (%rsp)

"quotearg_alloc" :
37f0(3): mov %rdx,%rcx
37f3(2): xor %edx,%edx
37f5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3800(6): mov 0x203852(%rip),%eax
3806(2): push %r12
3808(7): mov 0x203851(%rip),%r12
380f(1): push %rbp
3810(1): push %rbx
3811(3): cmp $0x1,%eax
3814(2): jle 0x2d(%rip)
3816(3): sub $0x2,%eax
3819(5): lea 0x18(%r12),%rbx
381e(4): shl/sal $0x4,%rax
3822(5): lea 0x28(%r12,%rax,1),%rbp
3827(9): nop 0x0(%rax,%rax,1)
3830(3): mov (%rbx),%rdi
3833(4): add $0x10,%rbx
3837(5): call 0xffffd989(%rip)
383c(3): cmp %rbp,%rbx
383f(2): jnz 0xfffffff1(%rip)
3841(5): mov 0x8(%r12),%rdi
3846(7): lea 0x203893(%rip),%rbx
384d(3): cmp %rbx,%rdi
3850(2): jz 0x19(%rip)
3852(5): call 0xffffd96e(%rip)
3857(b): mov $0x100,0x20380e(%rip)
3862(7): mov %rbx,0x20380f(%rip)
3869(7): lea 0x203800(%rip),%rbx
3870(3): cmp %rbx,%r12
3873(2): jz 0x11(%rip)
3875(3): mov %r12,%rdi
3878(5): call 0xffffd948(%rip)
387d(7): mov %rbx,0x2037dc(%rip)
3884(1): pop %rbx
3885(a): mov $0x1,0x2037c9(%rip)
388f(1): pop %rbp
3890(2): pop %r12
3892(1): ret near (%rsp)

"quotearg_n" :
38a0(7): lea 0x203939(%rip),%rcx
38a7(7): mov $0xffffffff,%rdx
38ae(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
38c0(7): lea 0x203919(%rip),%rcx
38c7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
38d0(7): lea 0x203909(%rip),%rcx
38d7(3): mov %rdi,%rsi
38da(7): mov $0xffffffff,%rdx
38e1(2): xor %edi,%edi
38e3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
38f0(7): lea 0x2038e9(%rip),%rcx
38f7(3): mov %rsi,%rdx
38fa(3): mov %rdi,%rsi
38fd(2): xor %edi,%edi
38ff(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3910(4): sub $0x48,%rsp
3914(3): mov %rdx,%rax
3917(9): mov $0x28,%rdx
3920(5): mov %rdx,0x38(%rsp)
3925(2): xor %edx,%edx
3927(3): cmp $0xa,%esi
392a(2): jz 0x6a(%rip)
392c(3): mov %esi,(%rsp)
392f(3): mov %rsp,%rcx
3932(7): mov $0xffffffff,%rdx
3939(3): mov %rax,%rsi
393c(9): mov $0x0,0x4(%rsp)
3945(9): mov $0x0,0xc(%rsp)
394e(9): mov $0x0,0x14(%rsp)
3957(9): mov $0x0,0x1c(%rsp)
3960(9): mov $0x0,0x24(%rsp)
3969(9): mov $0x0,0x2c(%rsp)
3972(8): mov $0x0,0x34(%rsp)
397a(5): call 0xfffffa46(%rip)
397f(5): mov 0x38(%rsp),%rcx
3984(9): xor $0x28,%rcx
398d(2): jnz 0xc(%rip)
398f(4): add $0x48,%rsp
3993(1): ret near (%rsp)
3994(5): call 0xffffd83c(%rip)
3999(5): call 0xffffd8e7(%rip)

"quotearg_n_style_mem" :
39a0(4): sub $0x48,%rsp
39a4(3): mov %rdx,%rax
39a7(3): mov %rcx,%rdx
39aa(9): mov $0x28,%rcx
39b3(5): mov %rcx,0x38(%rsp)
39b8(2): xor %ecx,%ecx
39ba(3): cmp $0xa,%esi
39bd(2): jz 0x63(%rip)
39bf(3): mov %esi,(%rsp)
39c2(3): mov %rsp,%rcx
39c5(3): mov %rax,%rsi
39c8(9): mov $0x0,0x4(%rsp)
39d1(9): mov $0x0,0xc(%rsp)
39da(9): mov $0x0,0x14(%rsp)
39e3(9): mov $0x0,0x1c(%rsp)
39ec(9): mov $0x0,0x24(%rsp)
39f5(9): mov $0x0,0x2c(%rsp)
39fe(8): mov $0x0,0x34(%rsp)
3a06(5): call 0xfffff9ba(%rip)
3a0b(5): mov 0x38(%rsp),%rdx
3a10(9): xor $0x28,%rdx
3a19(2): jnz 0xc(%rip)
3a1b(4): add $0x48,%rsp
3a1f(1): ret near (%rsp)
3a20(5): call 0xffffd7b0(%rip)
3a25(5): call 0xffffd85b(%rip)

"quotearg_style" :
3a30(3): mov %rsi,%rdx
3a33(2): mov %edi,%esi
3a35(2): xor %edi,%edi
3a37(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3a40(3): mov %rdx,%rcx
3a43(3): mov %rsi,%rdx
3a46(2): mov %edi,%esi
3a48(2): xor %edi,%edi
3a4a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3a50(4): sub $0x48,%rsp
3a54(2): mov %edx,%ecx
3a56(9): mov $0x28,%rax
3a5f(5): mov %rax,0x38(%rsp)
3a64(2): xor %eax,%eax
3a66(7): mov 0x2037a3(%rip),%rax
3a6d(3): mov %rsp,%r8
3a70(3): and $0x1f,%ecx
3a73(8): movdqa 0x203765(%rip),%xmm0
3a7b(5): mov %rax,0x30(%rsp)
3a80(2): mov %edx,%eax
3a82(4): movaps %xmm0,(%rsp)
3a86(3): shr $0x5,%al
3a89(3): movzx %al,%eax
3a8c(5): lea 0x8(%r8,%rax,4),%r9
3a91(8): movdqa 0x203757(%rip),%xmm0
3a99(5): movaps %xmm0,0x10(%rsp)
3a9e(8): movdqa 0x20375a(%rip),%xmm0
3aa6(5): movaps %xmm0,0x20(%rsp)
3aab(3): mov (%r9),%edx
3aae(2): mov %edx,%eax
3ab0(2): shr %cl,%eax
3ab2(2): not %eax
3ab4(3): and $0x1,%eax
3ab7(2): shl/sal %cl,%eax
3ab9(3): mov %r8,%rcx
3abc(2): xor %edx,%eax
3abe(3): mov %rsi,%rdx
3ac1(3): mov %rdi,%rsi
3ac4(3): mov %eax,(%r9)
3ac7(2): xor %edi,%edi
3ac9(5): call 0xfffff8f7(%rip)
3ace(5): mov 0x38(%rsp),%rsi
3ad3(9): xor $0x28,%rsi
3adc(2): jnz 0x7(%rip)
3ade(4): add $0x48,%rsp
3ae2(1): ret near (%rsp)
3ae3(5): call 0xffffd79d(%rip)

"quotearg_char" :
3af0(4): movsx %sil,%edx
3af4(7): mov $0xffffffff,%rsi
3afb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3b00(5): mov $0x3a,%edx
3b05(7): mov $0xffffffff,%rsi
3b0c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3b20(5): mov $0x3a,%edx
3b25(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3b30(4): sub $0x48,%rsp
3b34(3): mov %rdx,%rax
3b37(9): mov $0x28,%rdx
3b40(5): mov %rdx,0x38(%rsp)
3b45(2): xor %edx,%edx
3b47(3): cmp $0xa,%esi
3b4a(2): jz 0x6a(%rip)
3b4c(3): mov %esi,(%rsp)
3b4f(3): mov %rsp,%rcx
3b52(7): mov $0xffffffff,%rdx
3b59(3): mov %rax,%rsi
3b5c(9): mov $0x0,0x4(%rsp)
3b65(9): mov $0x4000000,0xc(%rsp)
3b6e(9): mov $0x0,0x14(%rsp)
3b77(9): mov $0x0,0x1c(%rsp)
3b80(9): mov $0x0,0x24(%rsp)
3b89(9): mov $0x0,0x2c(%rsp)
3b92(8): mov $0x0,0x34(%rsp)
3b9a(5): call 0xfffff826(%rip)
3b9f(5): mov 0x38(%rsp),%rcx
3ba4(9): xor $0x28,%rcx
3bad(2): jnz 0xc(%rip)
3baf(4): add $0x48,%rsp
3bb3(1): ret near (%rsp)
3bb4(5): call 0xffffd61c(%rip)
3bb9(5): call 0xffffd6c7(%rip)

"quotearg_n_custom_mem" :
3bc0(4): sub $0x48,%rsp
3bc4(3): mov %rcx,%r9
3bc7(7): mov 0x203642(%rip),%rcx
3bce(8): movdqa 0x20360a(%rip),%xmm0
3bd6(9): mov $0x28,%rax
3bdf(5): mov %rax,0x38(%rsp)
3be4(2): xor %eax,%eax
3be6(4): movaps %xmm0,(%rsp)
3bea(3): test %rsi,%rsi
3bed(5): mov %rcx,0x30(%rsp)
3bf2(7): mov $0xa,(%rsp)
3bf9(8): movdqa 0x2035ef(%rip),%xmm0
3c01(5): movaps %xmm0,0x10(%rsp)
3c06(8): movdqa 0x2035f2(%rip),%xmm0
3c0e(5): movaps %xmm0,0x20(%rsp)
3c13(2): jz 0x34(%rip)
3c15(3): test %rdx,%rdx
3c18(2): jz 0x2f(%rip)
3c1a(5): mov %rsi,0x28(%rsp)
3c1f(5): mov %rdx,0x30(%rsp)
3c24(3): mov %rsp,%rcx
3c27(3): mov %r8,%rdx
3c2a(3): mov %r9,%rsi
3c2d(5): call 0xfffff793(%rip)
3c32(5): mov 0x38(%rsp),%rdi
3c37(9): xor $0x28,%rdi
3c40(2): jnz 0xc(%rip)
3c42(4): add $0x48,%rsp
3c46(1): ret near (%rsp)
3c47(5): call 0xffffd589(%rip)
3c4c(5): call 0xffffd634(%rip)

"quotearg_n_custom" :
3c60(7): mov $0xffffffff,%r8
3c67(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3c70(3): mov %rdx,%rcx
3c73(7): mov $0xffffffff,%r8
3c7a(3): mov %rsi,%rdx
3c7d(3): mov %rdi,%rsi
3c80(2): xor %edi,%edi
3c82(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3c90(3): mov %rcx,%r8
3c93(3): mov %rdx,%rcx
3c96(3): mov %rsi,%rdx
3c99(3): mov %rdi,%rsi
3c9c(2): xor %edi,%edi
3c9e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3cb0(7): lea 0x203369(%rip),%rcx
3cb7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3cc0(7): lea 0x203359(%rip),%rcx
3cc7(3): mov %rsi,%rdx
3cca(3): mov %rdi,%rsi
3ccd(2): xor %edi,%edi
3ccf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3ce0(7): lea 0x203339(%rip),%rcx
3ce7(7): mov $0xffffffff,%rdx
3cee(5): jmp 0xfffff6d2(%rip)

"quote" :
3d00(7): lea 0x203319(%rip),%rcx
3d07(3): mov %rdi,%rsi
3d0a(7): mov $0xffffffff,%rdx
3d11(2): xor %edi,%edi
3d13(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3d20(2): push %r15
3d22(2): push %r14
3d24(2): push %r13
3d26(2): push %r12
3d28(3): mov %r9,%r12
3d2b(1): push %rbp
3d2c(1): push %rbx
3d2d(3): mov %rdi,%rbp
3d30(3): mov %r8,%rbx
3d33(4): sub $0x28,%rsp
3d37(3): test %rsi,%rsi
3d3a(6): jz 0x11e(%rip)
3d40(3): mov %rdx,%r8
3d43(7): lea 0x18be(%rip),%rdx
3d4a(3): mov %rcx,%r9
3d4d(2): xor %eax,%eax
3d4f(3): mov %rsi,%rcx
3d52(5): mov $0x1,%esi
3d57(5): call 0xffffd6b9(%rip)
3d5c(7): lea 0x18b8(%rip),%rsi
3d63(2): xor %edi,%edi
3d65(5): mov $0x5,%edx
3d6a(5): call 0xffffd4e6(%rip)
3d6f(7): lea 0x1bca(%rip),%rdx
3d76(3): mov %rax,%rcx
3d79(6): mov $0x7e3,%r8d
3d7f(5): mov $0x1,%esi
3d84(3): mov %rbp,%rdi
3d87(2): xor %eax,%eax
3d89(5): call 0xffffd687(%rip)
3d8e(7): lea 0x1913(%rip),%rsi
3d95(2): xor %edi,%edi
3d97(5): mov $0x5,%edx
3d9c(5): call 0xffffd4b4(%rip)
3da1(3): mov %rbp,%rsi
3da4(3): mov %rax,%rdi
3da7(5): call 0xffffd559(%rip)
3dac(4): cmp $0x9,%r12
3db0(6): jnbe 0x340(%rip)
3db6(7): lea 0x1b4b(%rip),%rdx
3dbd(4): movsxd 0x0(%rdx,%r12,4),%rax
3dc1(3): add %rdx,%rax
3dc4(2): jmp %rax
3dc6(a): nop 0x0(%rax,%rax,1)
3dd0(4): mov 0x38(%rbx),%r9
3dd4(4): mov 0x10(%rbx),%rax
3dd8(7): lea 0x1a39(%rip),%rsi
3ddf(4): mov 0x8(%rbx),%r8
3de3(5): mov $0x5,%edx
3de8(2): xor %edi,%edi
3dea(4): mov 0x30(%rbx),%r13
3dee(4): mov 0x28(%rbx),%r12
3df2(5): mov %r9,0x10(%rsp)
3df7(4): mov 0x20(%rbx),%r15
3dfb(4): mov 0x18(%rbx),%r14
3dff(4): mov %rax,(%rsp)
3e03(5): mov %r8,0x8(%rsp)
3e08(3): mov (%rbx),%rbx
3e0b(5): call 0xffffd445(%rip)
3e10(4): sub $0x8,%rsp
3e14(5): mov 0x18(%rsp),%r9
3e19(3): mov %rax,%rdx
3e1c(3): mov %rbx,%rcx
3e1f(5): mov $0x1,%esi
3e24(3): mov %rbp,%rdi
3e27(2): xor %eax,%eax
3e29(2): push %r9
3e2b(2): push %r13
3e2d(2): push %r12
3e2f(2): push %r15
3e31(2): push %r14
3e33(5): mov 0x30(%rsp),%r9
3e38(5): mov 0x38(%rsp),%r8
3e3d(5): call 0xffffd5d3(%rip)
3e42(4): add $0x30,%rsp
3e46(4): add $0x28,%rsp
3e4a(1): pop %rbx
3e4b(1): pop %rbp
3e4c(2): pop %r12
3e4e(2): pop %r13
3e50(2): pop %r14
3e52(2): pop %r15
3e54(1): ret near (%rsp)
3e55(3): nop (%rax)
3e58(3): mov %rcx,%r8
3e5b(3): mov %rdx,%rcx
3e5e(7): lea 0x17af(%rip),%rdx
3e65(5): mov $0x1,%esi
3e6a(2): xor %eax,%eax
3e6c(5): call 0xffffd5a4(%rip)
3e71(5): jmp 0xfffffeeb(%rip)
3e76(a): nop 0x0(%rax,%rax,1)
3e80(4): mov 0x40(%rbx),%r10
3e84(4): mov 0x38(%rbx),%r9
3e88(7): lea 0x19b9(%rip),%rsi
3e8f(4): mov 0x10(%rbx),%rax
3e93(4): mov 0x8(%rbx),%r8
3e97(5): mov $0x5,%edx
3e9c(4): mov 0x30(%rbx),%r13
3ea0(4): mov 0x28(%rbx),%r12
3ea4(4): mov 0x20(%rbx),%r15
3ea8(4): mov 0x18(%rbx),%r14
3eac(3): mov (%rbx),%rbx
3eaf(5): mov %r10,0x18(%rsp)
3eb4(5): mov %r9,0x10(%rsp)
3eb9(4): mov %rax,(%rsp)
3ebd(5): mov %r8,0x8(%rsp)
3ec2(2): xor %edi,%edi
3ec4(5): call 0xffffd38c(%rip)
3ec9(5): mov 0x18(%rsp),%r10
3ece(2): push %r10
3ed0(5): jmp 0xffffff44(%rip)
3ed5(3): nop (%rax)
3ed8(3): mov (%rbx),%rbx
3edb(7): lea 0x173d(%rip),%rsi
3ee2(5): mov $0x5,%edx
3ee7(2): xor %edi,%edi
3ee9(5): call 0xffffd367(%rip)
3eee(4): add $0x28,%rsp
3ef2(3): mov %rbx,%rcx
3ef5(3): mov %rbp,%rdi
3ef8(1): pop %rbx
3ef9(1): pop %rbp
3efa(2): pop %r12
3efc(2): pop %r13
3efe(2): pop %r14
3f00(2): pop %r15
3f02(3): mov %rax,%rdx
3f05(5): mov $0x1,%esi
3f0a(2): xor %eax,%eax
3f0c(5): jmp 0xffffd504(%rip)
3f11(7): nop 0x0(%rax)
3f18(4): mov 0x8(%rbx),%r12
3f1c(7): lea 0x170c(%rip),%rsi
3f23(3): mov (%rbx),%rbx
3f26(5): mov $0x5,%edx
3f2b(2): xor %edi,%edi
3f2d(5): call 0xffffd323(%rip)
3f32(4): add $0x28,%rsp
3f36(3): mov %r12,%r8
3f39(3): mov %rbx,%rcx
3f3c(3): mov %rbp,%rdi
3f3f(3): mov %rax,%rdx
3f42(5): mov $0x1,%esi
3f47(1): pop %rbx
3f48(1): pop %rbp
3f49(2): pop %r12
3f4b(2): pop %r13
3f4d(2): pop %r14
3f4f(2): pop %r15
3f51(2): xor %eax,%eax
3f53(5): jmp 0xffffd4bd(%rip)
3f58(8): nop 0x0(%rax,%rax,1)
3f60(4): mov 0x10(%rbx),%r13
3f64(4): mov 0x8(%rbx),%r12
3f68(7): lea 0x16d7(%rip),%rsi
3f6f(3): mov (%rbx),%rbx
3f72(5): mov $0x5,%edx
3f77(2): xor %edi,%edi
3f79(5): call 0xffffd2d7(%rip)
3f7e(4): add $0x28,%rsp
3f82(3): mov %r13,%r9
3f85(3): mov %r12,%r8
3f88(3): mov %rbx,%rcx
3f8b(3): mov %rbp,%rdi
3f8e(3): mov %rax,%rdx
3f91(1): pop %rbx
3f92(1): pop %rbp
3f93(2): pop %r12
3f95(2): pop %r13
3f97(2): pop %r14
3f99(2): pop %r15
3f9b(5): mov $0x1,%esi
3fa0(2): xor %eax,%eax
3fa2(5): jmp 0xffffd46e(%rip)
3fa7(9): nop 0x0(%rax,%rax,1)
3fb0(7): lea 0x17c1(%rip),%rsi
3fb7(5): mov $0x5,%edx
3fbc(2): xor %edi,%edi
3fbe(4): mov 0x18(%rbx),%r14
3fc2(4): mov 0x10(%rbx),%r13
3fc6(4): mov 0x8(%rbx),%r12
3fca(3): mov (%rbx),%rbx
3fcd(5): call 0xffffd283(%rip)
3fd2(4): sub $0x8,%rsp
3fd6(2): push %r14
3fd8(3): mov %rax,%rdx
3fdb(3): mov %r13,%r9
3fde(3): mov %r12,%r8
3fe1(3): mov %rbx,%rcx
3fe4(3): mov %rbp,%rdi
3fe7(5): mov $0x1,%esi
3fec(2): xor %eax,%eax
3fee(5): call 0xffffd422(%rip)
3ff3(1): pop %rax
3ff4(1): pop %rdx
3ff5(4): add $0x28,%rsp
3ff9(1): pop %rbx
3ffa(1): pop %rbp
3ffb(2): pop %r12
3ffd(2): pop %r13
3fff(2): pop %r14
4001(2): pop %r15
4003(1): ret near (%rsp)
4004(4): nop 0x0(%rax)
4008(4): mov 0x20(%rbx),%r15
400c(7): lea 0x1785(%rip),%rsi
4013(5): mov $0x5,%edx
4018(2): xor %edi,%edi
401a(4): mov 0x18(%rbx),%r14
401e(4): mov 0x10(%rbx),%r13
4022(4): mov 0x8(%rbx),%r12
4026(3): mov (%rbx),%rbx
4029(5): call 0xffffd227(%rip)
402e(2): push %r15
4030(2): jmp 0xffffffa6(%rip)
4032(6): nop 0x0(%rax,%rax,1)
4038(4): mov 0x8(%rbx),%r8
403c(4): mov 0x28(%rbx),%r12
4040(7): lea 0x1779(%rip),%rsi
4047(4): mov 0x20(%rbx),%r15
404b(4): mov 0x18(%rbx),%r14
404f(5): mov $0x5,%edx
4054(4): mov 0x10(%rbx),%r13
4058(2): xor %edi,%edi
405a(3): mov (%rbx),%rbx
405d(4): mov %r8,(%rsp)
4061(5): call 0xffffd1ef(%rip)
4066(4): sub $0x8,%rsp
406a(3): mov %r13,%r9
406d(2): push %r12
406f(2): push %r15
4071(2): push %r14
4073(5): mov 0x20(%rsp),%r8
4078(3): mov %rbx,%rcx
407b(3): mov %rax,%rdx
407e(3): mov %rbp,%rdi
4081(5): mov $0x1,%esi
4086(2): xor %eax,%eax
4088(5): call 0xffffd388(%rip)
408d(4): add $0x20,%rsp
4091(4): add $0x28,%rsp
4095(1): pop %rbx
4096(1): pop %rbp
4097(2): pop %r12
4099(2): pop %r13
409b(2): pop %r14
409d(2): pop %r15
409f(1): ret near (%rsp)
40a0(4): mov 0x10(%rbx),%r9
40a4(4): mov 0x30(%rbx),%r13
40a8(7): lea 0x1739(%rip),%rsi
40af(4): mov 0x28(%rbx),%r12
40b3(4): mov 0x20(%rbx),%r15
40b7(5): mov $0x5,%edx
40bc(4): mov 0x18(%rbx),%r14
40c0(4): mov 0x8(%rbx),%r8
40c4(2): xor %edi,%edi
40c6(5): mov %r9,0x8(%rsp)
40cb(3): mov (%rbx),%rbx
40ce(4): mov %r8,(%rsp)
40d2(5): call 0xffffd17e(%rip)
40d7(2): push %r13
40d9(2): push %r12
40db(2): push %r15
40dd(2): push %r14
40df(5): mov 0x28(%rsp),%r9
40e4(2): jmp 0xffffff8f(%rip)
40e6(a): nop 0x0(%rax,%rax,1)
40f0(4): mov 0x40(%rbx),%r10
40f4(4): mov 0x38(%rbx),%r9
40f8(5): mov $0x5,%edx
40fd(4): mov 0x10(%rbx),%rax
4101(4): mov 0x8(%rbx),%r8
4105(7): lea 0x1774(%rip),%rsi
410c(4): mov 0x30(%rbx),%r13
4110(4): mov 0x28(%rbx),%r12
4114(4): mov 0x20(%rbx),%r15
4118(4): mov 0x18(%rbx),%r14
411c(5): mov %r10,0x18(%rsp)
4121(5): mov %r9,0x10(%rsp)
4126(4): mov %rax,(%rsp)
412a(5): mov %r8,0x8(%rsp)
412f(3): mov (%rbx),%rbx
4132(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4140(3): xor %r9d,%r9d
4143(4): cmp $0x0,(%r8)
4147(2): jz 0x14(%rip)
4149(7): nop 0x0(%rax)
4150(4): add $0x1,%r9
4154(5): cmp $0x0,0x0(%r8,%r9,8)
4159(2): jnz 0xfffffff7(%rip)
415b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4160(4): sub $0x68,%rsp
4164(3): mov %r8,%r10
4167(3): xor %r9d,%r9d
416a(9): mov $0x28,%rax
4173(5): mov %rax,0x58(%rsp)
4178(2): xor %eax,%eax
417a(3): mov %rsp,%r8
417d(3): nop (%rax)
4180(3): mov (%r10),%eax
4183(3): cmp $0x2f,%eax
4186(2): jnbe 0x44(%rip)
4188(3): mov %eax,%r11d
418b(4): add 0x10(%r10),%r11
418f(3): add $0x8,%eax
4192(3): mov %eax,(%r10)
4195(3): mov (%r11),%rax
4198(3): test %rax,%rax
419b(4): mov %rax,0x0(%r8,%r9,8)
419f(2): jz 0xc(%rip)
41a1(4): add $0x1,%r9
41a5(4): cmp $0xa,%r9
41a9(2): jnz 0xffffffd7(%rip)
41ab(5): call 0xfffffb75(%rip)
41b0(5): mov 0x58(%rsp),%rax
41b5(9): xor $0x28,%rax
41be(2): jnz 0x7(%rip)
41c0(4): add $0x68,%rsp
41c4(1): ret near (%rsp)
41c5(5): call 0xffffd0bb(%rip)
41ca(4): mov 0x8(%r10),%r11
41ce(4): lea 0x8(%r11),%rax
41d2(4): mov %rax,0x8(%r10)
41d6(2): jmp 0xffffffbf(%rip)

"version_etc" :
41e0(1): push %rbp
41e1(1): push %rbx
41e2(6): mov $0x20,%r10d
41e8(3): xor %r11d,%r11d
41eb(7): sub $0xb8,%rsp
41f2(9): mov $0x28,%rax
41fb(5): mov %rax,0x78(%rsp)
4200(2): xor %eax,%eax
4202(8): lea 0xd0(%rsp),%rax
420a(8): mov %r8,0xa0(%rsp)
4212(8): lea 0xd0(%rsp),%rbx
421a(5): lea 0x20(%rsp),%r8
421f(8): mov %r9,0xa8(%rsp)
4227(8): mov $0x20,0x8(%rsp)
422f(5): mov %rax,0x10(%rsp)
4234(8): lea 0x80(%rsp),%rax
423c(3): xor %r9d,%r9d
423f(5): mov %rax,0x18(%rsp)
4244(3): mov %rax,%rbp
4247(9): nop 0x0(%rax,%rax,1)
4250(4): cmp $0x2f,%r10d
4254(2): jnbe 0x58(%rip)
4256(3): mov %r10d,%eax
4259(6): mov $0x1,%r11d
425f(4): add $0x8,%r10d
4263(3): add %rbp,%rax
4266(3): mov (%rax),%rax
4269(3): test %rax,%rax
426c(4): mov %rax,0x0(%r8,%r9,8)
4270(2): jz 0xc(%rip)
4272(4): add $0x1,%r9
4276(4): cmp $0xa,%r9
427a(2): jnz 0xffffffd6(%rip)
427c(3): test %r11b,%r11b
427f(2): jnz 0x26(%rip)
4281(5): call 0xfffffa9f(%rip)
4286(5): mov 0x78(%rsp),%rax
428b(9): xor $0x28,%rax
4294(2): jnz 0xc(%rip)
4296(7): add $0xb8,%rsp
429d(1): pop %rbx
429e(1): pop %rbp
429f(1): ret near (%rsp)
42a0(5): call 0xffffcfe0(%rip)
42a5(5): mov %r10d,0x8(%rsp)
42aa(2): jmp 0xffffffd7(%rip)
42ac(3): mov %rbx,%rax
42af(4): add $0x8,%rbx
42b3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
42c0(1): push %rbx
42c1(7): lea 0x139a(%rip),%rsi
42c8(5): mov $0x5,%edx
42cd(2): xor %edi,%edi
42cf(5): call 0xffffcf81(%rip)
42d4(7): lea 0x139c(%rip),%rdx
42db(3): mov %rax,%rsi
42de(5): mov $0x1,%edi
42e3(2): xor %eax,%eax
42e5(5): call 0xffffd0cb(%rip)
42ea(7): lea 0x139c(%rip),%rsi
42f1(5): mov $0x5,%edx
42f6(2): xor %edi,%edi
42f8(5): call 0xffffcf58(%rip)
42fd(7): lea 0xd1c(%rip),%rcx
4304(7): lea 0x8aa(%rip),%rdx
430b(3): mov %rax,%rsi
430e(5): mov $0x1,%edi
4313(2): xor %eax,%eax
4315(5): call 0xffffd09b(%rip)
431a(7): mov 0x202d67(%rip),%rbx
4321(7): lea 0x1598(%rip),%rsi
4328(2): xor %edi,%edi
432a(5): mov $0x5,%edx
432f(5): call 0xffffcf21(%rip)
4334(3): mov %rbx,%rsi
4337(3): mov %rax,%rdi
433a(1): pop %rbx
433b(5): jmp 0xffffcfc5(%rip)

"xmalloc" :
4340(1): push %rbx
4341(3): mov %rdi,%rbx
4344(5): call 0xffffd00c(%rip)
4349(3): test %rax,%rax
434c(2): jnz 0x7(%rip)
434e(3): test %rbx,%rbx
4351(2): jnz 0x4(%rip)
4353(1): pop %rbx
4354(1): ret near (%rsp)
4355(5): call 0x23b(%rip)

"xnmalloc" :
4360(3): mov %rdi,%rax
4363(3): mul %rax,%rsi,%rdx
4366(3): mov %rax,%rdi
4369(3): seto %al
436c(3): test %rdi,%rdi
436f(2): js 0xc(%rip)
4371(3): movzx %al,%eax
4374(3): test %rax,%rax
4377(2): jnz 0x4(%rip)
4379(2): jmp 0xffffffc7(%rip)
437b(4): sub $0x8,%rsp
437f(5): call 0x211(%rip)

"xrealloc" :
43a0(3): test %rsi,%rsi
43a3(1): push %rbx
43a4(3): mov %rsi,%rbx
43a7(2): jnz 0x7(%rip)
43a9(3): test %rdi,%rdi
43ac(2): jnz 0x1c(%rip)
43ae(3): mov %rbx,%rsi
43b1(5): call 0xffffcfdf(%rip)
43b6(3): test %rax,%rax
43b9(2): jnz 0x7(%rip)
43bb(3): test %rbx,%rbx
43be(2): jnz 0x13(%rip)
43c0(1): pop %rbx
43c1(1): ret near (%rsp)
43c2(6): nop 0x0(%rax,%rax,1)
43c8(5): call 0xffffcdf8(%rip)
43cd(2): xor %eax,%eax
43cf(1): pop %rbx
43d0(1): ret near (%rsp)
43d1(5): call 0x1bf(%rip)

"xnrealloc" :
43e0(3): mov %rsi,%rax
43e3(3): mul %rax,%rdx,%rdx
43e6(3): mov %rax,%rsi
43e9(3): seto %al
43ec(3): test %rsi,%rsi
43ef(2): js 0xc(%rip)
43f1(3): movzx %al,%eax
43f4(3): test %rax,%rax
43f7(2): jnz 0x4(%rip)
43f9(2): jmp 0xffffffa7(%rip)
43fb(4): sub $0x8,%rsp
43ff(5): call 0x191(%rip)

"x2nrealloc" :
4410(3): test %rdi,%rdi
4413(3): mov %rdx,%r9
4416(3): mov (%rsi),%rcx
4419(2): jz 0x37(%rip)
441b(2): xor %edx,%edx
441d(a): mov $0x6148914691236517204,%rax
4427(3): div %r9,%rax
442a(3): cmp %rcx,%rax
442d(2): jbe 0x3e(%rip)
442f(3): mov %rcx,%rax
4432(3): shr $0x1,%rax
4435(5): lea 0x1(%rax,%rcx,1),%rcx
443a(3): mov %rcx,(%rsi)
443d(4): imul %r9,%rcx
4441(3): mov %rcx,%rsi
4444(5): jmp 0xffffff5c(%rip)
4449(7): nop 0x0(%rax)
4450(3): test %rcx,%rcx
4453(2): jz 0x25(%rip)
4455(3): mov %rcx,%rax
4458(3): mul %rax,%r9,%rdx
445b(3): seto %dl
445e(3): test %rax,%rax
4461(3): movzx %dl,%edx
4464(2): js 0x7(%rip)
4466(3): test %rdx,%rdx
4469(2): jz 0xffffffd1(%rip)
446b(4): sub $0x8,%rsp
446f(5): call 0x121(%rip)
4474(4): nop 0x0(%rax)
4478(2): xor %edx,%edx
447a(5): mov $0x80,%eax
447f(3): xor %r8d,%r8d
4482(3): div %r9,%rax
4485(3): test %rax,%rax
4488(4): setz %r8b
448c(4): lea 0x0(%r8,%rax,1),%rcx
4490(2): jmp 0xffffffc5(%rip)

"x2realloc" :
44a0(3): test %rdi,%rdi
44a3(3): mov (%rsi),%rax
44a6(2): jz 0x2a(%rip)
44a8(a): mov $0x6148914691236517203,%rdx
44b2(3): cmp %rdx,%rax
44b5(2): jnbe 0x2c(%rip)
44b7(3): mov %rax,%rdx
44ba(3): shr $0x1,%rdx
44bd(5): lea 0x1(%rdx,%rax,1),%rax
44c2(3): mov %rax,(%rsi)
44c5(3): mov %rax,%rsi
44c8(5): jmp 0xfffffed8(%rip)
44cd(3): nop (%rax)
44d0(3): test %rax,%rax
44d3(5): mov $0x80,%edx
44d8(4): cmove %rdx,%rax
44dc(3): test %rax,%rax
44df(2): jns 0xffffffe3(%rip)
44e1(4): sub $0x8,%rsp
44e5(5): call 0xab(%rip)

"xzalloc" :
44f0(1): push %rbx
44f1(3): mov %rdi,%rbx
44f4(5): call 0xfffffe4c(%rip)
44f9(3): mov %rbx,%rdx
44fc(2): xor %esi,%esi
44fe(3): mov %rax,%rdi
4501(1): pop %rbx
4502(5): jmp 0xffffcdde(%rip)

"xcalloc" :
4510(3): mov %rdi,%rax
4513(4): sub $0x8,%rsp
4517(3): mul %rax,%rsi,%rdx
451a(3): seto %dl
451d(3): test %rax,%rax
4520(2): js 0x19(%rip)
4522(3): movzx %dl,%edx
4525(3): test %rdx,%rdx
4528(2): jnz 0x11(%rip)
452a(5): call 0xffffcde6(%rip)
452f(3): test %rax,%rax
4532(2): jz 0x7(%rip)
4534(4): add $0x8,%rsp
4538(1): ret near (%rsp)
4539(5): call 0x57(%rip)

"xmemdup" :
4540(1): push %rbp
4541(1): push %rbx
4542(3): mov %rdi,%rbp
4545(3): mov %rsi,%rdi
4548(3): mov %rsi,%rbx
454b(4): sub $0x8,%rsp
454f(5): call 0xfffffdf1(%rip)
4554(4): add $0x8,%rsp
4558(3): mov %rbx,%rdx
455b(3): mov %rbp,%rsi
455e(1): pop %rbx
455f(1): pop %rbp
4560(3): mov %rax,%rdi
4563(5): jmp 0xffffcdcd(%rip)

"xstrdup" :
4570(1): push %rbx
4571(3): mov %rdi,%rbx
4574(5): call 0xffffccfc(%rip)
4579(3): mov %rbx,%rdi
457c(4): lea 0x1(%rax),%rsi
4580(1): pop %rbx
4581(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4590(7): lea 0x13d8(%rip),%rsi
4597(4): sub $0x8,%rsp
459b(5): mov $0x5,%edx
45a0(2): xor %edi,%edi
45a2(5): call 0xffffccae(%rip)
45a7(6): mov 0x202a6b(%rip),%edi
45ad(7): lea 0xb24(%rip),%rdx
45b4(3): mov %rax,%rcx
45b7(2): xor %esi,%esi
45b9(2): xor %eax,%eax
45bb(5): call 0xffffce05(%rip)
45c0(5): call 0xffffcc10(%rip)

"rpl_mbrtowc" :
45d0(2): push %r13
45d2(2): push %r12
45d4(3): mov %rsi,%r13
45d7(1): push %rbp
45d8(1): push %rbx
45d9(3): mov %rdi,%rbx
45dc(3): mov %rdx,%r12
45df(4): sub $0x18,%rsp
45e3(9): mov $0x28,%rax
45ec(5): mov %rax,0x8(%rsp)
45f1(2): xor %eax,%eax
45f3(5): lea 0x4(%rsp),%rax
45f8(3): test %rdi,%rdi
45fb(4): cmove %rax,%rbx
45ff(3): mov %rbx,%rdi
4602(5): call 0xffffcc8e(%rip)
4607(4): cmp $0xfffffffd,%rax
460b(3): mov %rax,%rbp
460e(2): jbe 0x22(%rip)
4610(3): test %r12,%r12
4613(2): jz 0x1d(%rip)
4615(2): xor %edi,%edi
4617(5): call 0xc9(%rip)
461c(2): test %al,%al
461e(2): jnz 0x12(%rip)
4620(5): movzx 0x0(%r13),%eax
4625(5): mov $0x1,%ebp
462a(2): mov %eax,(%rbx)
462c(4): nop 0x0(%rax)
4630(5): mov 0x8(%rsp),%rdx
4635(9): xor $0x28,%rdx
463e(3): mov %rbp,%rax
4641(2): jnz 0xd(%rip)
4643(4): add $0x18,%rsp
4647(1): pop %rbx
4648(1): pop %rbp
4649(2): pop %r12
464b(2): pop %r13
464d(1): ret near (%rsp)
464e(5): call 0xffffcc32(%rip)

"close_stream" :
4660(2): push %r12
4662(1): push %rbp
4663(3): mov %rdi,%rbp
4666(1): push %rbx
4667(5): call 0xffffcba9(%rip)
466c(3): mov 0x0(%rbp),%ebx
466f(3): mov %rbp,%rdi
4672(3): mov %rax,%r12
4675(5): call 0x10b(%rip)
467a(3): and $0x20,%ebx
467d(2): test %ebx,%ebx
467f(2): jnz 0x19(%rip)
4681(2): test %eax,%eax
4683(2): jz 0xc(%rip)
4685(3): test %r12,%r12
4688(5): mov $0xffffffff,%eax
468d(2): jz 0x3b(%rip)
468f(1): pop %rbx
4690(1): pop %rbp
4691(2): pop %r12
4693(1): ret near (%rsp)
4694(4): nop 0x0(%rax)
4698(2): test %eax,%eax
469a(2): jnz 0x1e(%rip)
469c(5): call 0xffffcb44(%rip)
46a1(6): mov $0x0,(%rax)
46a7(5): mov $0xffffffff,%eax
46ac(1): pop %rbx
46ad(1): pop %rbp
46ae(2): pop %r12
46b0(1): ret near (%rsp)
46b1(7): nop 0x0(%rax)
46b8(1): pop %rbx
46b9(5): mov $0xffffffff,%eax
46be(1): pop %rbp
46bf(2): pop %r12
46c1(1): ret near (%rsp)
46c2(6): nop 0x0(%rax,%rax,1)
46c8(5): call 0xffffcb18(%rip)
46cd(3): cmp $0x9,(%rax)
46d0(1): pop %rbx
46d1(1): pop %rbp
46d2(2): pop %r12
46d4(3): setnz %al
46d7(3): movzx %al,%eax
46da(2): neg %eax
46dc(1): ret near (%rsp)

"hard_locale" :
46e0(4): sub $0x8,%rsp
46e4(2): xor %esi,%esi
46e6(5): call 0xffffccba(%rip)
46eb(3): mov %rax,%rdx
46ee(5): mov $0x1,%eax
46f3(3): test %rdx,%rdx
46f6(2): jz 0x1f(%rip)
46f8(7): lea 0x1281(%rip),%rdi
46ff(5): mov $0x2,%ecx
4704(3): mov %rdx,%rsi
4707(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4709(3): setnbe %cl
470c(3): sbb $0x0,%cl
470f(2): xor %eax,%eax
4711(2): test %cl,%cl
4713(2): jnz 0xd(%rip)
4715(4): add $0x8,%rsp
4719(1): ret near (%rsp)
471a(6): nop 0x0(%rax,%rax,1)
4720(7): lea 0x125b(%rip),%rdi
4727(5): mov $0x6,%ecx
472c(3): mov %rdx,%rsi
472f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4731(3): setnbe %al
4734(2): sbb $0x0,%al
4736(2): test %al,%al
4738(3): setnz %al
473b(4): add $0x8,%rsp
473f(1): ret near (%rsp)

"locale_charset" :
4740(4): sub $0x8,%rsp
4744(5): mov $0xe,%edi
4749(5): call 0xffffcc27(%rip)
474e(3): test %rax,%rax
4751(2): jz 0x1f(%rip)
4753(3): cmp $0x0,(%rax)
4756(7): lea 0x122b(%rip),%rdx
475d(4): cmove %rdx,%rax
4761(4): add $0x8,%rsp
4765(1): ret near (%rsp)
4766(a): nop 0x0(%rax,%rax,1)
4770(7): lea 0x1211(%rip),%rax
4777(4): add $0x8,%rsp
477b(1): ret near (%rsp)

"rpl_fclose" :
4780(2): push %r12
4782(1): push %rbp
4783(1): push %rbx
4784(3): mov %rdi,%rbx
4787(5): call 0xffffcbb9(%rip)
478c(2): test %eax,%eax
478e(3): mov %rbx,%rdi
4791(2): js 0x56(%rip)
4793(5): call 0xffffcbed(%rip)
4798(2): test %eax,%eax
479a(2): jnz 0x2e(%rip)
479c(3): mov %rbx,%rdi
479f(5): call 0x61(%rip)
47a4(2): test %eax,%eax
47a6(2): jz 0x3e(%rip)
47a8(5): call 0xffffca38(%rip)
47ad(3): mov (%rax),%r12d
47b0(3): mov %rbx,%rdi
47b3(3): mov %rax,%rbp
47b6(5): call 0xffffca7a(%rip)
47bb(3): test %r12d,%r12d
47be(2): jnz 0x32(%rip)
47c0(1): pop %rbx
47c1(1): pop %rbp
47c2(2): pop %r12
47c4(1): ret near (%rsp)
47c5(3): nop (%rax)
47c8(3): mov %rbx,%rdi
47cb(5): call 0xffffcb75(%rip)
47d0(2): xor %esi,%esi
47d2(5): mov $0x1,%edx
47d7(2): mov %eax,%edi
47d9(5): call 0xffffcae7(%rip)
47de(4): cmp $0xffffffff,%rax
47e2(2): jnz 0xffffffba(%rip)
47e4(3): mov %rbx,%rdi
47e7(1): pop %rbx
47e8(1): pop %rbp
47e9(2): pop %r12
47eb(5): jmp 0xffffca45(%rip)
47f0(4): mov %r12d,0x0(%rbp)
47f4(5): mov $0xffffffff,%eax
47f9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4800(3): test %rdi,%rdi
4803(1): push %rbx
4804(3): mov %rdi,%rbx
4807(2): jz 0x13(%rip)
4809(5): call 0xffffcb77(%rip)
480e(2): test %eax,%eax
4810(2): jz 0xa(%rip)
4812(6): test $0x100,(%rbx)
4818(2): jnz 0x10(%rip)
481a(3): mov %rbx,%rdi
481d(1): pop %rbx
481e(5): jmp 0xffffcb42(%rip)
4823(5): nop 0x0(%rax,%rax,1)
4828(3): mov %rbx,%rdi
482b(5): mov $0x1,%edx
4830(2): xor %esi,%esi
4832(5): call 0xe(%rip)
4837(3): mov %rbx,%rdi
483a(1): pop %rbx
483b(5): jmp 0xffffcb25(%rip)

"rpl_fseeko" :
4840(4): mov 0x8(%rdi),%rax
4844(4): cmp %rax,0x10(%rdi)
4848(2): jz 0x8(%rip)
484a(5): jmp 0xffffcb86(%rip)
484f(1): nop 
4850(4): mov 0x20(%rdi),%rax
4854(4): cmp %rax,0x28(%rdi)
4858(2): jnz 0xfffffff2(%rip)
485a(5): cmp $0x0,0x48(%rdi)
485f(2): jnz 0xffffffeb(%rip)
4861(2): push %r12
4863(1): push %rbp
4864(3): mov %edx,%r12d
4867(1): push %rbx
4868(3): mov %rsi,%rbp
486b(3): mov %rdi,%rbx
486e(5): call 0xffffcad2(%rip)
4873(3): mov %r12d,%edx
4876(3): mov %rbp,%rsi
4879(2): mov %eax,%edi
487b(5): call 0xffffca45(%rip)
4880(4): cmp $0xffffffff,%rax
4884(2): jz 0xe(%rip)
4886(3): and $0xef,(%rbx)
4889(7): mov %rax,0x90(%rbx)
4890(2): xor %eax,%eax
4892(1): pop %rbx
4893(1): pop %rbp
4894(2): pop %r12
4896(1): ret near (%rsp)

"__libc_csu_init" :
48a0(2): push %r15
48a2(2): push %r14
48a4(3): mov %rdx,%r15
48a7(2): push %r13
48a9(2): push %r12
48ab(7): lea 0x20235e(%rip),%r12
48b2(1): push %rbp
48b3(7): lea 0x20235e(%rip),%rbp
48ba(1): push %rbx
48bb(3): mov %edi,%r13d
48be(3): mov %rsi,%r14
48c1(3): sub %r12,%rbp
48c4(4): sub $0x8,%rsp
48c8(4): sar $0x3,%rbp
48cc(5): call 0xffffc8bc(%rip)
48d1(3): test %rbp,%rbp
48d4(2): jz 0x22(%rip)
48d6(2): xor %ebx,%ebx
48d8(8): nop 0x0(%rax,%rax,1)
48e0(3): mov %r15,%rdx
48e3(3): mov %r14,%rsi
48e6(3): mov %r13d,%edi
48e9(4): call 0x0(%r12,%rbx,8)
48ed(4): add $0x1,%rbx
48f1(3): cmp %rbx,%rbp
48f4(2): jnz 0xffffffec(%rip)
48f6(4): add $0x8,%rsp
48fa(1): pop %rbx
48fb(1): pop %rbp
48fc(2): pop %r12
48fe(2): pop %r13
4900(2): pop %r14
4902(2): pop %r15
4904(1): ret near (%rsp)

"atexit" :
4920(7): mov 0x2026e1(%rip),%rdx
4927(2): xor %esi,%esi
4929(5): jmp 0xffffcab7(%rip)

"_fini" :
4930(4): sub $0x8,%rsp
4934(4): add $0x8,%rsp
4938(1): ret near (%rsp)

