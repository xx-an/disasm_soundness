
"free@plt" :
11e0(6): jmp 0x205c9a(%rip)
11e6(5): push $0x0

"abort@plt" :
11f0(6): jmp 0x205c92(%rip)
11f6(5): push $0x1

"__errno_location@plt" :
1200(6): jmp 0x205c8a(%rip)
1206(5): push $0x2

"strncmp@plt" :
1210(6): jmp 0x205c82(%rip)
1216(5): push $0x3

"_exit@plt" :
1220(6): jmp 0x205c7a(%rip)
1226(5): push $0x4

"__fpending@plt" :
1230(6): jmp 0x205c72(%rip)
1236(5): push $0x5

"textdomain@plt" :
1240(6): jmp 0x205c6a(%rip)
1246(5): push $0x6

"fclose@plt" :
1250(6): jmp 0x205c62(%rip)
1256(5): push $0x7

"bindtextdomain@plt" :
1260(6): jmp 0x205c5a(%rip)
1266(5): push $0x8

"dcgettext@plt" :
1270(6): jmp 0x205c52(%rip)
1276(5): push $0x9

"__ctype_get_mb_cur_max@plt" :
1280(6): jmp 0x205c4a(%rip)
1286(5): push $0xa

"strlen@plt" :
1290(6): jmp 0x205c42(%rip)
1296(5): push $0xb

"__stack_chk_fail@plt" :
12a0(6): jmp 0x205c3a(%rip)
12a6(5): push $0xc

"getopt_long@plt" :
12b0(6): jmp 0x205c32(%rip)
12b6(5): push $0xd

"mbrtowc@plt" :
12c0(6): jmp 0x205c2a(%rip)
12c6(5): push $0xe

"strrchr@plt" :
12d0(6): jmp 0x205c22(%rip)
12d6(5): push $0xf

"lseek@plt" :
12e0(6): jmp 0x205c1a(%rip)
12e6(5): push $0x10

"memset@plt" :
12f0(6): jmp 0x205c12(%rip)
12f6(5): push $0x11

"memcmp@plt" :
1300(6): jmp 0x205c0a(%rip)
1306(5): push $0x12

"fputs_unlocked@plt" :
1310(6): jmp 0x205c02(%rip)
1316(5): push $0x13

"calloc@plt" :
1320(6): jmp 0x205bfa(%rip)
1326(5): push $0x14

"memcpy@plt" :
1330(6): jmp 0x205bf2(%rip)
1336(5): push $0x15

"fileno@plt" :
1340(6): jmp 0x205bea(%rip)
1346(5): push $0x16

"malloc@plt" :
1350(6): jmp 0x205be2(%rip)
1356(5): push $0x17

"fflush@plt" :
1360(6): jmp 0x205bda(%rip)
1366(5): push $0x18

"nl_langinfo@plt" :
1370(6): jmp 0x205bd2(%rip)
1376(5): push $0x19

"__freading@plt" :
1380(6): jmp 0x205bca(%rip)
1386(5): push $0x1a

"realloc@plt" :
1390(6): jmp 0x205bc2(%rip)
1396(5): push $0x1b

"setlocale@plt" :
13a0(6): jmp 0x205bba(%rip)
13a6(5): push $0x1c

"__printf_chk@plt" :
13b0(6): jmp 0x205bb2(%rip)
13b6(5): push $0x1d

"error@plt" :
13c0(6): jmp 0x205baa(%rip)
13c6(5): push $0x1e

"fseeko@plt" :
13d0(6): jmp 0x205ba2(%rip)
13d6(5): push $0x1f

"__cxa_atexit@plt" :
13e0(6): jmp 0x205b9a(%rip)
13e6(5): push $0x20

"link@plt" :
13f0(6): jmp 0x205b92(%rip)
13f6(5): push $0x21

"exit@plt" :
1400(6): jmp 0x205b8a(%rip)
1406(5): push $0x22

"fwrite@plt" :
1410(6): jmp 0x205b82(%rip)
1416(5): push $0x23

"__fprintf_chk@plt" :
1420(6): jmp 0x205b7a(%rip)
1426(5): push $0x24

"mbsinit@plt" :
1430(6): jmp 0x205b72(%rip)
1436(5): push $0x25

"iswprint@plt" :
1440(6): jmp 0x205b6a(%rip)
1446(5): push $0x26

"__ctype_b_loc@plt" :
1450(6): jmp 0x205b62(%rip)
1456(5): push $0x27

".plt.got" :
1460(6): jmp 0x205b7a(%rip)
1466(2): nop 

"_init" :
11b8(4): sub $0x8,%rsp
11bc(7): mov 0x205e0d(%rip),%rax
11c3(3): test %rax,%rax
11c6(2): jz 0x4(%rip)
11c8(2): call %rax
11ca(4): add $0x8,%rsp
11ce(1): ret near (%rsp)

"main" :
1470(2): push %r12
1472(1): push %rbp
1473(2): mov %edi,%ebp
1475(1): push %rbx
1476(3): mov (%rsi),%rdi
1479(3): mov %rsi,%rbx
147c(5): call 0x964(%rip)
1481(7): lea 0x3b39(%rip),%rsi
1488(5): mov $0x6,%edi
148d(5): call 0xffffff13(%rip)
1492(7): lea 0x3353(%rip),%rsi
1499(7): lea 0x3323(%rip),%rdi
14a0(5): call 0xfffffdc0(%rip)
14a5(7): lea 0x3317(%rip),%rdi
14ac(5): call 0xfffffd94(%rip)
14b1(7): lea 0x5f8(%rip),%rdi
14b8(5): call 0x3258(%rip)
14bd(7): lea 0x3340(%rip),%rax
14c4(4): sub $0x8,%rsp
14c8(7): mov 0x205b41(%rip),%r8
14cf(2): push $0x0
14d1(7): lea 0x326c(%rip),%rdx
14d8(7): lea 0x32e0(%rip),%rcx
14df(1): push %rax
14e0(7): lea 0x259(%rip),%rax
14e7(6): mov $0x1,%r9d
14ed(3): mov %rbx,%rsi
14f0(2): mov %ebp,%edi
14f2(1): push %rax
14f3(2): xor %eax,%eax
14f5(5): call 0x7ab(%rip)
14fa(7): movsxd 0x205b8f(%rip),%rax
1501(4): add $0x20,%rsp
1505(3): lea 0x1(%rax),%edx
1508(2): cmp %ebp,%edx
150a(2): jnl 0x2d(%rip)
150c(3): movsxd %eax,%rdx
150f(3): add $0x2,%eax
1512(2): cmp %ebp,%eax
1514(6): jl 0xc0(%rip)
151a(4): lea 0x1(%rdx),%rax
151e(4): mov 0x0(%rbx,%rax,8),%rsi
1522(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
1527(5): call 0xfffffec9(%rip)
152c(2): test %eax,%eax
152e(2): jnz 0x3c(%rip)
1530(1): pop %rbx
1531(2): xor %eax,%eax
1533(1): pop %rbp
1534(2): pop %r12
1536(1): ret near (%rsp)
1537(2): cmp %ebp,%eax
1539(6): jl 0xd1(%rip)
153f(7): lea 0x32cc(%rip),%rsi
1546(5): mov $0x5,%edx
154b(2): xor %edi,%edi
154d(5): call 0xfffffd23(%rip)
1552(2): xor %esi,%esi
1554(3): mov %rax,%rdx
1557(2): xor %edi,%edi
1559(2): xor %eax,%eax
155b(5): call 0xfffffe65(%rip)
1560(5): mov $0x1,%edi
1565(5): call 0x1db(%rip)
156a(7): movsxd 0x205b1f(%rip),%rax
1571(5): mov $0x4,%esi
1576(5): mov $0x1,%edi
157b(4): mov 0x0(%rbx,%rax,8),%rdx
157f(5): call 0x2181(%rip)
1584(3): mov %rax,%r12
1587(7): movsxd 0x205b02(%rip),%rax
158e(5): mov $0x4,%esi
1593(2): xor %edi,%edi
1595(5): mov 0x8(%rbx,%rax,8),%rdx
159a(5): call 0x2166(%rip)
159f(7): lea 0x32a6(%rip),%rsi
15a6(5): mov $0x5,%edx
15ab(2): xor %edi,%edi
15ad(3): mov %rax,%rbp
15b0(5): call 0xfffffcc0(%rip)
15b5(3): mov %rax,%rbx
15b8(5): call 0xfffffc48(%rip)
15bd(2): mov (%rax),%esi
15bf(3): mov %r12,%r8
15c2(3): mov %rbp,%rcx
15c5(3): mov %rbx,%rdx
15c8(5): mov $0x1,%edi
15cd(2): xor %eax,%eax
15cf(5): call 0xfffffdf1(%rip)
15d4(5): mov 0x10(%rbx,%rdx,8),%rdi
15d9(5): call 0x2517(%rip)
15de(7): lea 0x3256(%rip),%rsi
15e5(3): mov %rax,%rbx
15e8(5): mov $0x5,%edx
15ed(2): xor %edi,%edi
15ef(5): call 0xfffffc81(%rip)
15f4(3): mov %rbx,%rcx
15f7(3): mov %rax,%rdx
15fa(2): xor %esi,%esi
15fc(2): xor %edi,%edi
15fe(2): xor %eax,%eax
1600(5): call 0xfffffdc0(%rip)
1605(5): jmp 0xffffff5b(%rip)
160a(4): mov 0x0(%rbx,%rax,8),%rdi
160e(5): call 0x24e2(%rip)
1613(5): mov $0x5,%edx
1618(3): mov %rax,%rbx
161b(7): lea 0x3200(%rip),%rsi
1622(2): jmp 0xffffffcb(%rip)

"_start" :
1630(2): xor %ebp,%ebp
1632(3): mov %rdx,%r9
1635(1): pop %rsi
1636(3): mov %rsp,%rdx
1639(4): and $0xfffffff0,%rsp
163d(1): push %rax
163e(1): push %rsp
163f(7): lea 0x30ba(%rip),%r8
1646(7): lea 0x3043(%rip),%rcx
164d(7): lea 0xfffffe1c(%rip),%rdi
1654(6): call 0x20596e(%rip)
165a(1): hlt 

"deregister_tm_clones" :
1660(7): lea 0x205a19(%rip),%rdi
1667(1): push %rbp
1668(7): lea 0x205a11(%rip),%rax
166f(3): cmp %rdi,%rax
1672(3): mov %rsp,%rbp
1675(2): jz 0x1b(%rip)
1677(7): mov 0x205942(%rip),%rax
167e(3): test %rax,%rax
1681(2): jz 0xf(%rip)
1683(1): pop %rbp
1684(2): jmp %rax
1686(a): nop 0x0(%rax,%rax,1)
1690(1): pop %rbp
1691(1): ret near (%rsp)

"register_tm_clones" :
16a0(7): lea 0x2059d9(%rip),%rdi
16a7(7): lea 0x2059d2(%rip),%rsi
16ae(1): push %rbp
16af(3): sub %rdi,%rsi
16b2(3): mov %rsp,%rbp
16b5(4): sar $0x3,%rsi
16b9(3): mov %rsi,%rax
16bc(4): shr $0x3f,%rax
16c0(3): add %rax,%rsi
16c3(3): sar $0x1,%rsi
16c6(2): jz 0x1a(%rip)
16c8(7): mov 0x205909(%rip),%rax
16cf(3): test %rax,%rax
16d2(2): jz 0xe(%rip)
16d4(1): pop %rbp
16d5(2): jmp %rax
16d7(9): nop 0x0(%rax,%rax,1)
16e0(1): pop %rbp
16e1(1): ret near (%rsp)

"__do_global_dtors_aux" :
16f0(7): cmp $0x0,0x2059d1(%rip)
16f7(2): jnz 0x31(%rip)
16f9(8): cmp $0x0,0x2058df(%rip)
1701(1): push %rbp
1702(3): mov %rsp,%rbp
1705(2): jz 0xe(%rip)
1707(7): mov 0x2058fa(%rip),%rdi
170e(5): call 0xfffffd52(%rip)
1713(5): call 0xffffff4d(%rip)
1718(7): mov $0x1,0x2059a9(%rip)
171f(1): pop %rbp
1720(1): ret near (%rsp)
1721(7): nop 0x0(%rax)
1728(2): REP ret near (%rsp)

"frame_dummy" :
1730(1): push %rbp
1731(3): mov %rsp,%rbp
1734(1): pop %rbp
1735(5): jmp 0xffffff6b(%rip)

"usage" :
1740(2): push %r13
1742(2): push %r12
1744(5): mov $0x5,%edx
1749(1): push %rbp
174a(1): push %rbx
174b(2): mov %edi,%ebp
174d(7): sub $0x88,%rsp
1754(7): mov 0x205985(%rip),%rbx
175b(9): mov $0x28,%rax
1764(5): mov %rax,0x78(%rsp)
1769(2): xor %eax,%eax
176b(2): test %edi,%edi
176d(2): jz 0x30(%rip)
176f(7): lea 0x30f2(%rip),%rsi
1776(2): xor %edi,%edi
1778(5): call 0xfffffaf8(%rip)
177d(7): mov 0x20593c(%rip),%rdi
1784(3): mov %rax,%rdx
1787(3): mov %rbx,%rcx
178a(5): mov $0x1,%esi
178f(2): xor %eax,%eax
1791(5): call 0xfffffc8f(%rip)
1796(2): mov %ebp,%edi
1798(5): call 0xfffffc68(%rip)
179d(7): lea 0x30ec(%rip),%rsi
17a4(2): xor %edi,%edi
17a6(5): call 0xfffffaca(%rip)
17ab(3): mov %rbx,%rcx
17ae(3): mov %rbx,%rdx
17b1(3): mov %rax,%rsi
17b4(5): mov $0x1,%edi
17b9(2): xor %eax,%eax
17bb(5): call 0xfffffbf5(%rip)
17c0(7): mov 0x2058c1(%rip),%rbx
17c7(7): lea 0x30ea(%rip),%rsi
17ce(5): mov $0x5,%edx
17d3(2): xor %edi,%edi
17d5(5): call 0xfffffa9b(%rip)
17da(3): mov %rbx,%rsi
17dd(3): mov %rax,%rdi
17e0(5): call 0xfffffb30(%rip)
17e5(7): mov 0x20589c(%rip),%rbx
17ec(7): lea 0x3115(%rip),%rsi
17f3(5): mov $0x5,%edx
17f8(2): xor %edi,%edi
17fa(5): call 0xfffffa76(%rip)
17ff(3): mov %rbx,%rsi
1802(3): mov %rax,%rdi
1805(5): call 0xfffffb0b(%rip)
180a(7): mov 0x205877(%rip),%rbx
1811(7): lea 0x3120(%rip),%rsi
1818(5): mov $0x5,%edx
181d(2): xor %edi,%edi
181f(5): call 0xfffffa51(%rip)
1824(3): mov %rbx,%rsi
1827(3): mov %rax,%rdi
182a(7): lea 0x2f13(%rip),%rbx
1831(5): call 0xfffffadf(%rip)
1836(7): lea 0x2f0c(%rip),%rax
183d(7): lea 0x2f46(%rip),%rcx
1844(9): mov $0x0,0x60(%rsp)
184d(9): mov $0x0,0x68(%rsp)
1856(3): mov %rsp,%rdx
1859(4): mov %rax,(%rsp)
185d(7): lea 0x2ee7(%rip),%rax
1864(5): mov %rcx,0x30(%rsp)
1869(7): lea 0x2f24(%rip),%rcx
1870(5): mov %rax,0x8(%rsp)
1875(7): lea 0x2f47(%rip),%rax
187c(5): mov %rcx,0x40(%rsp)
1881(7): lea 0x2f16(%rip),%rcx
1888(5): mov %rax,0x10(%rsp)
188d(7): lea 0x2ec7(%rip),%rax
1894(5): mov %rcx,0x50(%rsp)
1899(5): mov %rax,0x18(%rsp)
189e(7): lea 0x2ecc(%rip),%rax
18a5(5): mov %rax,0x20(%rsp)
18aa(7): lea 0x2eca(%rip),%rax
18b1(5): mov %rax,0x28(%rsp)
18b6(5): mov %rax,0x38(%rsp)
18bb(5): mov %rax,0x48(%rsp)
18c0(5): mov %rax,0x58(%rsp)
18c5(3): nop (%rax)
18c8(4): add $0x10,%rdx
18cc(3): mov (%rdx),%rdi
18cf(3): test %rdi,%rdi
18d2(2): jz 0x15(%rip)
18d4(5): mov $0x5,%ecx
18d9(3): mov %rbx,%rsi
18dc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
18de(3): setnbe %al
18e1(2): sbb $0x0,%al
18e3(2): test %al,%al
18e5(2): jnz 0xffffffe3(%rip)
18e7(4): mov 0x8(%rdx),%r12
18eb(2): xor %edi,%edi
18ed(5): mov $0x5,%edx
18f2(7): lea 0x2eaf(%rip),%rsi
18f9(3): test %r12,%r12
18fc(6): jz 0xc7(%rip)
1902(5): call 0xfffff96e(%rip)
1907(7): lea 0x3062(%rip),%rcx
190e(7): lea 0x2eaa(%rip),%rdx
1915(3): mov %rax,%rsi
1918(5): mov $0x1,%edi
191d(2): xor %eax,%eax
191f(5): call 0xfffffa91(%rip)
1924(2): xor %esi,%esi
1926(5): mov $0x5,%edi
192b(5): call 0xfffffa75(%rip)
1930(3): test %rax,%rax
1933(2): jz 0x1e(%rip)
1935(7): lea 0x2e91(%rip),%rsi
193c(5): mov $0x3,%edx
1941(3): mov %rax,%rdi
1944(5): call 0xfffff8cc(%rip)
1949(2): test %eax,%eax
194b(6): jnz 0x10d(%rip)
1951(7): lea 0x2e79(%rip),%rsi
1958(2): xor %edi,%edi
195a(5): mov $0x5,%edx
195f(5): call 0xfffff911(%rip)
1964(7): lea 0x2dd9(%rip),%rcx
196b(7): lea 0x2ffe(%rip),%rdx
1972(3): mov %rax,%rsi
1975(5): mov $0x1,%edi
197a(2): xor %eax,%eax
197c(5): call 0xfffffa34(%rip)
1981(3): cmp %rbx,%r12
1984(7): lea 0x2dda(%rip),%rcx
198b(7): lea 0x362f(%rip),%rbx
1992(4): cmove %rcx,%rbx
1996(7): lea 0x3043(%rip),%rsi
199d(2): xor %edi,%edi
199f(5): mov $0x5,%edx
19a4(5): call 0xfffff8cc(%rip)
19a9(3): mov %rbx,%rcx
19ac(3): mov %rax,%rsi
19af(3): mov %r12,%rdx
19b2(5): mov $0x1,%edi
19b7(2): xor %eax,%eax
19b9(5): call 0xfffff9f7(%rip)
19be(5): jmp 0xfffffdd8(%rip)
19c3(5): call 0xfffff8ad(%rip)
19c8(7): lea 0x2fa1(%rip),%rcx
19cf(7): lea 0x2de9(%rip),%rdx
19d6(3): mov %rax,%rsi
19d9(5): mov $0x1,%edi
19de(2): xor %eax,%eax
19e0(5): call 0xfffff9d0(%rip)
19e5(2): xor %esi,%esi
19e7(5): mov $0x5,%edi
19ec(5): call 0xfffff9b4(%rip)
19f1(3): test %rax,%rax
19f4(2): jz 0x1a(%rip)
19f6(7): lea 0x2dd0(%rip),%rsi
19fd(5): mov $0x3,%edx
1a02(3): mov %rax,%rdi
1a05(5): call 0xfffff80b(%rip)
1a0a(2): test %eax,%eax
1a0c(2): jnz 0x45(%rip)
1a0e(7): lea 0x2dbc(%rip),%rsi
1a15(5): mov $0x5,%edx
1a1a(2): xor %edi,%edi
1a1c(7): lea 0x2d21(%rip),%r12
1a23(7): lea 0x2d3b(%rip),%rbx
1a2a(5): call 0xfffff846(%rip)
1a2f(7): lea 0x2d0e(%rip),%rcx
1a36(7): lea 0x2f33(%rip),%rdx
1a3d(3): mov %rax,%rsi
1a40(5): mov $0x1,%edi
1a45(2): xor %eax,%eax
1a47(5): call 0xfffff969(%rip)
1a4c(5): jmp 0xffffff4a(%rip)
1a51(7): lea 0x2cec(%rip),%r12
1a58(7): mov 0x205629(%rip),%r13
1a5f(7): lea 0x2f32(%rip),%rsi
1a66(2): xor %edi,%edi
1a68(5): mov $0x5,%edx
1a6d(5): call 0xfffff803(%rip)
1a72(3): mov %r13,%rsi
1a75(3): mov %rax,%rdi
1a78(5): call 0xfffff898(%rip)
1a7d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1a90(7): mov %rdi,0x205641(%rip)
1a97(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1aa0(7): mov %dil,0x205629(%rip)
1aa7(1): ret near (%rsp)

"close_stdout" :
1ab0(1): push %rbp
1ab1(1): push %rbx
1ab2(4): sub $0x8,%rsp
1ab6(7): mov 0x2055cb(%rip),%rdi
1abd(5): call 0x2993(%rip)
1ac2(2): test %eax,%eax
1ac4(2): jz 0x18(%rip)
1ac6(5): call 0xfffff73a(%rip)
1acb(7): cmp $0x0,0x2055fe(%rip)
1ad2(3): mov %rax,%rbx
1ad5(2): jz 0x1e(%rip)
1ad7(3): cmp $0x20,(%rax)
1ada(2): jnz 0x19(%rip)
1adc(7): mov 0x2055dd(%rip),%rdi
1ae3(5): call 0x296d(%rip)
1ae8(2): test %eax,%eax
1aea(2): jnz 0x48(%rip)
1aec(4): add $0x8,%rsp
1af0(1): pop %rbx
1af1(1): pop %rbp
1af2(1): ret near (%rsp)
1af3(7): lea 0x2f1e(%rip),%rsi
1afa(2): xor %edi,%edi
1afc(5): mov $0x5,%edx
1b01(5): call 0xfffff76f(%rip)
1b06(7): mov 0x2055cb(%rip),%rdi
1b0d(3): mov %rax,%rbp
1b10(3): test %rdi,%rdi
1b13(2): jz 0x2a(%rip)
1b15(5): call 0x1ddb(%rip)
1b1a(2): mov (%rbx),%esi
1b1c(7): lea 0x2f01(%rip),%rdx
1b23(3): mov %rax,%rcx
1b26(3): mov %rbp,%r8
1b29(2): xor %edi,%edi
1b2b(2): xor %eax,%eax
1b2d(5): call 0xfffff893(%rip)
1b32(6): mov 0x2054e0(%rip),%edi
1b38(5): call 0xfffff6e8(%rip)
1b3d(2): mov (%rbx),%esi
1b3f(7): lea 0x2ee2(%rip),%rdx
1b46(3): mov %rax,%rcx
1b49(2): xor %edi,%edi
1b4b(2): xor %eax,%eax
1b4d(5): call 0xfffff873(%rip)
1b52(2): jmp 0xffffffe0(%rip)

"parse_long_options" :
1b60(2): push %r13
1b62(2): push %r12
1b64(3): mov %r8,%r13
1b67(1): push %rbp
1b68(1): push %rbx
1b69(3): mov %rdx,%rbp
1b6c(3): mov %rcx,%r12
1b6f(7): sub $0xe8,%rsp
1b76(2): test %al,%al
1b78(2): jz 0x3c(%rip)
1b7a(5): movaps %xmm0,0x60(%rsp)
1b7f(5): movaps %xmm1,0x70(%rsp)
1b84(8): movaps %xmm2,0x80(%rsp)
1b8c(8): movaps %xmm3,0x90(%rsp)
1b94(8): movaps %xmm4,0xa0(%rsp)
1b9c(8): movaps %xmm5,0xb0(%rsp)
1ba4(8): movaps %xmm6,0xc0(%rsp)
1bac(8): movaps %xmm7,0xd0(%rsp)
1bb4(9): mov $0x28,%rax
1bbd(5): mov %rax,0x28(%rsp)
1bc2(2): xor %eax,%eax
1bc4(3): cmp $0x2,%edi
1bc7(6): mov 0x2054d3(%rip),%ebx
1bcd(a): mov $0x0,0x2054c9(%rip)
1bd7(2): jz 0x39(%rip)
1bd9(5): mov 0x28(%rsp),%rax
1bde(9): xor $0x28,%rax
1be7(6): mov %ebx,0x2054b3(%rip)
1bed(a): mov $0x0,0x205499(%rip)
1bf7(6): jnz 0xa3(%rip)
1bfd(7): add $0xe8,%rsp
1c04(1): pop %rbx
1c05(1): pop %rbp
1c06(2): pop %r12
1c08(2): pop %r13
1c0a(1): ret near (%rsp)
1c0b(5): nop 0x0(%rax,%rax,1)
1c10(7): lea 0x204fa9(%rip),%rcx
1c17(7): lea 0x2e0d(%rip),%rdx
1c1e(3): xor %r8d,%r8d
1c21(5): mov %r9,0x8(%rsp)
1c26(5): call 0xfffff68a(%rip)
1c2b(3): cmp $0xff,%eax
1c2e(2): jz 0xffffffab(%rip)
1c30(3): cmp $0x68,%eax
1c33(5): mov 0x8(%rsp),%r9
1c38(2): jz 0x58(%rip)
1c3a(3): cmp $0x76,%eax
1c3d(2): jnz 0xffffff9c(%rip)
1c3f(8): lea 0x110(%rsp),%rax
1c47(7): mov 0x20543a(%rip),%rdi
1c4e(5): lea 0x10(%rsp),%r8
1c53(3): mov %r13,%rcx
1c56(3): mov %r12,%rdx
1c59(3): mov %rbp,%rsi
1c5c(5): mov %rax,0x18(%rsp)
1c61(5): lea 0x30(%rsp),%rax
1c66(8): mov $0x30,0x10(%rsp)
1c6e(8): mov $0x30,0x14(%rsp)
1c76(5): mov %rax,0x20(%rsp)
1c7b(5): call 0x22d5(%rip)
1c80(2): xor %edi,%edi
1c82(5): call 0xfffff77e(%rip)
1c87(9): nop 0x0(%rax,%rax,1)
1c90(2): xor %edi,%edi
1c92(3): call %r9
1c95(5): jmp 0xffffff44(%rip)
1c9a(5): call 0xfffff606(%rip)

"parse_gnu_standard_options_only" :
1ca0(2): push %r14
1ca2(2): push %r13
1ca4(3): mov %r8,%r14
1ca7(2): push %r12
1ca9(1): push %rbp
1caa(3): mov %rdx,%r12
1cad(1): push %rbx
1cae(3): mov %rcx,%r13
1cb1(7): sub $0xd0,%rsp
1cb8(2): test %al,%al
1cba(8): mov 0x100(%rsp),%rbp
1cc2(2): jz 0x39(%rip)
1cc4(5): movaps %xmm0,0x50(%rsp)
1cc9(5): movaps %xmm1,0x60(%rsp)
1cce(5): movaps %xmm2,0x70(%rsp)
1cd3(8): movaps %xmm3,0x80(%rsp)
1cdb(8): movaps %xmm4,0x90(%rsp)
1ce3(8): movaps %xmm5,0xa0(%rsp)
1ceb(8): movaps %xmm6,0xb0(%rsp)
1cf3(8): movaps %xmm7,0xc0(%rsp)
1cfb(9): mov $0x28,%rax
1d04(5): mov %rax,0x18(%rsp)
1d09(2): xor %eax,%eax
1d0b(7): lea 0x32af(%rip),%rdx
1d12(7): lea 0x2d12(%rip),%rax
1d19(3): test %r9b,%r9b
1d1c(7): lea 0x204e9d(%rip),%rcx
1d23(4): cmove %rax,%rdx
1d27(3): xor %r8d,%r8d
1d2a(6): mov 0x205370(%rip),%ebx
1d30(a): mov $0x1,0x205366(%rip)
1d3a(5): call 0xfffff576(%rip)
1d3f(3): cmp $0xff,%eax
1d42(2): jz 0x66(%rip)
1d44(3): cmp $0x68,%eax
1d47(6): jz 0x89(%rip)
1d4d(3): cmp $0x76,%eax
1d50(2): jnz 0x50(%rip)
1d52(8): lea 0x108(%rsp),%rax
1d5a(7): mov 0x205327(%rip),%rdi
1d61(3): mov %rsp,%r8
1d64(3): mov %r14,%rcx
1d67(3): mov %r13,%rdx
1d6a(3): mov %r12,%rsi
1d6d(5): mov %rax,0x8(%rsp)
1d72(5): lea 0x20(%rsp),%rax
1d77(7): mov $0x30,(%rsp)
1d7e(8): mov $0x30,0x4(%rsp)
1d86(5): mov %rax,0x10(%rsp)
1d8b(5): call 0x21c5(%rip)
1d90(2): xor %edi,%edi
1d92(5): call 0xfffff66e(%rip)
1d97(9): nop 0x0(%rax,%rax,1)
1da0(6): mov 0x205272(%rip),%edi
1da6(2): call %rbp
1da8(5): mov 0x18(%rsp),%rax
1dad(9): xor $0x28,%rax
1db6(6): mov %ebx,0x2052e4(%rip)
1dbc(2): jnz 0x1a(%rip)
1dbe(7): add $0xd0,%rsp
1dc5(1): pop %rbx
1dc6(1): pop %rbp
1dc7(2): pop %r12
1dc9(2): pop %r13
1dcb(2): pop %r14
1dcd(1): ret near (%rsp)
1dce(2): nop 
1dd0(2): xor %edi,%edi
1dd2(2): call %rbp
1dd4(2): jmp 0xffffffd4(%rip)
1dd6(5): call 0xfffff4ca(%rip)

"set_program_name" :
1de0(3): test %rdi,%rdi
1de3(1): push %rbx
1de4(2): jz 0x79(%rip)
1de6(5): mov $0x2f,%esi
1deb(3): mov %rdi,%rbx
1dee(5): call 0xfffff4e2(%rip)
1df3(3): test %rax,%rax
1df6(2): jz 0x57(%rip)
1df8(4): lea 0x1(%rax),%r8
1dfc(3): mov %r8,%rdx
1dff(3): sub %rbx,%rdx
1e02(4): cmp $0x6,%rdx
1e06(2): jle 0x47(%rip)
1e08(4): lea 0xfffffffa(%rax),%rsi
1e0c(7): lea 0x2c65(%rip),%rdi
1e13(5): mov $0x7,%ecx
1e18(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e1a(3): setnbe %dl
1e1d(3): sbb $0x0,%dl
1e20(2): test %dl,%dl
1e22(2): jnz 0x2b(%rip)
1e24(7): lea 0x2c55(%rip),%rdi
1e2b(5): mov $0x3,%ecx
1e30(3): mov %r8,%rsi
1e33(3): mov %r8,%rbx
1e36(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e38(3): setnbe %dl
1e3b(3): sbb $0x0,%dl
1e3e(2): test %dl,%dl
1e40(2): jnz 0xd(%rip)
1e42(4): lea 0x4(%rax),%rbx
1e46(7): mov %rbx,0x205233(%rip)
1e4d(7): mov %rbx,0x20528c(%rip)
1e54(7): mov %rbx,0x20523d(%rip)
1e5b(1): pop %rbx
1e5c(1): ret near (%rsp)
1e5d(7): mov 0x20525c(%rip),%rcx
1e64(7): lea 0x2bd5(%rip),%rdi
1e6b(5): mov $0x37,%edx
1e70(5): mov $0x1,%esi
1e75(5): call 0xfffff59b(%rip)
1e7a(5): call 0xfffff376(%rip)

"gettext_quote.part.1" :
1e80(1): push %rbp
1e81(1): push %rbx
1e82(3): mov %rdi,%rbp
1e85(2): mov %esi,%ebx
1e87(4): sub $0x8,%rsp
1e8b(5): call 0x26a5(%rip)
1e90(3): movzx (%rax),%edx
1e93(3): and $0xdf,%edx
1e96(3): cmp $0x55,%dl
1e99(2): jz 0x77(%rip)
1e9b(3): cmp $0x47,%dl
1e9e(2): jz 0x22(%rip)
1ea0(7): lea 0x2bec(%rip),%rax
1ea7(7): lea 0x2be7(%rip),%rdx
1eae(3): cmp $0x9,%ebx
1eb1(4): cmovne %rdx,%rax
1eb5(4): add $0x8,%rsp
1eb9(1): pop %rbx
1eba(1): pop %rbp
1ebb(1): ret near (%rsp)
1ebc(4): nop 0x0(%rax)
1ec0(4): movzx 0x1(%rax),%edx
1ec4(3): and $0xdf,%edx
1ec7(3): cmp $0x42,%dl
1eca(2): jnz 0xffffffd6(%rip)
1ecc(4): cmp $0x31,0x2(%rax)
1ed0(2): jnz 0xffffffd0(%rip)
1ed2(4): cmp $0x38,0x3(%rax)
1ed6(2): jnz 0xffffffca(%rip)
1ed8(4): cmp $0x30,0x4(%rax)
1edc(2): jnz 0xffffffc4(%rip)
1ede(4): cmp $0x33,0x5(%rax)
1ee2(2): jnz 0xffffffbe(%rip)
1ee4(4): cmp $0x30,0x6(%rax)
1ee8(2): jnz 0xffffffb8(%rip)
1eea(4): cmp $0x0,0x7(%rax)
1eee(2): jnz 0xffffffb2(%rip)
1ef0(4): cmp $0x60,0x0(%rbp)
1ef4(7): lea 0x2b91(%rip),%rax
1efb(7): lea 0x2b8e(%rip),%rdx
1f02(4): cmovne %rdx,%rax
1f06(4): add $0x8,%rsp
1f0a(1): pop %rbx
1f0b(1): pop %rbp
1f0c(1): ret near (%rsp)
1f0d(3): nop (%rax)
1f10(4): movzx 0x1(%rax),%edx
1f14(3): and $0xdf,%edx
1f17(3): cmp $0x54,%dl
1f1a(2): jnz 0xffffff86(%rip)
1f1c(4): movzx 0x2(%rax),%edx
1f20(3): and $0xdf,%edx
1f23(3): cmp $0x46,%dl
1f26(6): jnz 0xffffff7a(%rip)
1f2c(4): cmp $0x2d,0x3(%rax)
1f30(6): jnz 0xffffff70(%rip)
1f36(4): cmp $0x38,0x4(%rax)
1f3a(6): jnz 0xffffff66(%rip)
1f40(4): cmp $0x0,0x5(%rax)
1f44(6): jnz 0xffffff5c(%rip)
1f4a(4): cmp $0x60,0x0(%rbp)
1f4e(7): lea 0x2b2f(%rip),%rax
1f55(7): lea 0x2b2c(%rip),%rdx
1f5c(4): cmovne %rdx,%rax
1f60(4): add $0x8,%rsp
1f64(1): pop %rbx
1f65(1): pop %rbp
1f66(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1f70(2): push %r15
1f72(2): push %r14
1f74(3): mov %r8d,%r15d
1f77(2): push %r13
1f79(2): push %r12
1f7b(3): mov %rdi,%r14
1f7e(1): push %rbp
1f7f(1): push %rbx
1f80(3): mov %r9d,%ebx
1f83(3): mov %rsi,%r13
1f86(3): mov %rcx,%rbp
1f89(3): and $0x2,%ebx
1f8c(7): sub $0xb8,%rsp
1f93(8): mov 0xf0(%rsp),%rax
1f9b(5): mov %rdx,0x10(%rsp)
1fa0(5): mov %r8d,0x8(%rsp)
1fa5(5): mov %r9d,0x78(%rsp)
1faa(5): mov %rax,0x20(%rsp)
1faf(8): mov 0xf8(%rsp),%rax
1fb7(5): mov %rax,0x68(%rsp)
1fbc(8): mov 0x100(%rsp),%rax
1fc4(5): mov %rax,0x60(%rsp)
1fc9(9): mov $0x28,%rax
1fd2(8): mov %rax,0xa8(%rsp)
1fda(2): xor %eax,%eax
1fdc(5): call 0xfffff2a4(%rip)
1fe1(4): cmp $0xa,%r15d
1fe5(5): mov %rax,0x58(%rsp)
1fea(6): jnbe 0x11b5(%rip)
1ff0(7): lea 0x2b09(%rip),%rcx
1ff7(3): mov %r15d,%edx
1ffa(4): movsxd 0x0(%rcx,%rdx,4),%rax
1ffe(3): add %rcx,%rax
2001(2): jmp %rax
2003(5): mov $0x1,0xe(%rsp)
2008(5): mov $0x0,0x7c(%rsp)
200d(3): xor %r12d,%r12d
2010(9): mov $0x0,0x50(%rsp)
2019(5): mov $0x1,0xf(%rsp)
201e(5): mov $0x0,0xd(%rsp)
2023(7): lea 0x2a6b(%rip),%rax
202a(9): mov $0x1,0x18(%rsp)
2033(3): xor %r15d,%r15d
2036(8): mov $0x2,0x8(%rsp)
203e(5): mov %rax,0x48(%rsp)
2043(3): xor %r11d,%r11d
2046(3): mov %rbp,%rax
2049(3): mov %r12d,%r8d
204c(3): mov %r11,%rbp
204f(3): mov %rax,%r11
2052(6): nop 0x0(%rax,%rax,1)
2058(3): cmp %rbp,%r11
205b(4): setnz %r12b
205f(4): cmp $0xffffffff,%r11
2063(2): jnz 0xf(%rip)
2065(5): mov 0x10(%rsp),%rax
206a(4): cmp $0x0,0x0(%rax,%rbp,1)
206e(4): setnz %r12b
2072(3): test %r12b,%r12b
2075(6): jz 0x65b(%rip)
207b(5): cmp $0x2,0x8(%rsp)
2080(5): mov 0x10(%rsp),%rdi
2085(4): lea 0x0(%rdi,%rbp,1),%r9
2089(3): setnz %al
208c(4): and 0xd(%rsp),%al
2090(3): mov %eax,%r10d
2093(6): jz 0xad(%rip)
2099(5): mov 0x18(%rsp),%rax
209e(3): test %rax,%rax
20a1(6): jz 0x42f(%rip)
20a7(4): cmp $0xffffffff,%r11
20ab(5): lea 0x0(%rbp,%rax,1),%rbx
20b0(2): jnz 0x30(%rip)
20b2(4): cmp $0x1,%rax
20b6(2): jbe 0x2a(%rip)
20b8(5): mov %r8b,0x38(%rsp)
20bd(5): mov %r10b,0x30(%rsp)
20c2(5): mov %r9,0x28(%rsp)
20c7(5): call 0xfffff1c9(%rip)
20cc(6): movzx 0x38(%rsp),%r8d
20d2(6): movzx 0x30(%rsp),%r10d
20d8(3): mov %rax,%r11
20db(5): mov 0x28(%rsp),%r9
20e0(3): cmp %r11,%rbx
20e3(5): mov %r10b,0x28(%rsp)
20e8(6): jnbe 0x5b8(%rip)
20ee(5): mov 0x18(%rsp),%rdx
20f3(5): mov 0x48(%rsp),%rsi
20f8(3): mov %r9,%rdi
20fb(5): mov %r11,0x40(%rsp)
2100(5): mov %r8b,0x38(%rsp)
2105(5): mov %r9,0x30(%rsp)
210a(5): call 0xfffff1f6(%rip)
210f(2): test %eax,%eax
2111(5): mov 0x30(%rsp),%r9
2116(6): movzx 0x38(%rsp),%r8d
211c(5): mov 0x40(%rsp),%r11
2121(6): jnz 0x57f(%rip)
2127(5): cmp $0x0,0xf(%rsp)
212c(6): movzx 0x28(%rsp),%r10d
2132(6): jnz 0xf83(%rip)
2138(8): nop 0x0(%rax,%rax,1)
2140(4): movzx (%r9),%ebx
2144(3): cmp $0x7e,%bl
2147(6): jnbe 0x321(%rip)
214d(7): lea 0x29d8(%rip),%rcx
2154(3): movzx %bl,%edx
2157(4): movsxd 0x0(%rcx,%rdx,4),%rax
215b(3): add %rcx,%rax
215e(2): jmp %rax
2160(3): xor %r10d,%r10d
2163(4): cmp $0x1,%r11
2167(3): setnz %al
216a(4): cmp $0xffffffff,%r11
216e(2): jnz 0xe(%rip)
2170(5): mov 0x10(%rsp),%rax
2175(4): cmp $0x0,0x1(%rax)
2179(3): setnz %al
217c(5): cmp $0x2,0x8(%rsp)
2181(3): setz %dl
2184(2): test %al,%al
2186(6): jz 0x252(%rip)
218c(3): xor %r12d,%r12d
218f(2): xor %eax,%eax
2191(7): nop 0x0(%rax)
2198(5): cmp $0x1,0xd(%rsp)
219d(6): jnz 0x115(%rip)
21a3(2): test %dl,%dl
21a5(6): jnz 0x10d(%rip)
21ab(5): mov 0x20(%rsp),%rsi
21b0(3): test %rsi,%rsi
21b3(2): jz 0x16(%rip)
21b5(2): mov %ebx,%edx
21b7(3): shr $0x5,%dl
21ba(3): movzx %dl,%edx
21bd(3): mov 0x0(%rsi,%rdx,4),%edx
21c0(3): bt %ebx,%edx
21c3(6): jb 0x150(%rip)
21c9(3): test %r10b,%r10b
21cc(6): jnz 0x147(%rip)
21d2(3): xor $0x1,%eax
21d5(4): add $0x1,%rbp
21d9(3): and %r8d,%eax
21dc(2): test %al,%al
21de(2): jz 0x22(%rip)
21e0(3): cmp %r15,%r13
21e3(2): jbe 0x7(%rip)
21e5(5): mov $0x27,0x0(%r14,%r15,1)
21ea(4): lea 0x1(%r15),%rax
21ee(3): cmp %rax,%r13
21f1(2): jbe 0x8(%rip)
21f3(6): mov $0x27,0x1(%r14,%r15,1)
21f9(4): add $0x2,%r15
21fd(3): xor %r8d,%r8d
2200(3): cmp %r13,%r15
2203(2): jnb 0x6(%rip)
2205(4): mov %bl,0x0(%r14,%r15,1)
2209(5): movzx 0xe(%rsp),%edi
220e(4): add $0x1,%r15
2212(5): mov $0x0,%eax
2217(3): test %r12b,%r12b
221a(3): cmove %eax,%edi
221d(5): mov %dil,0xe(%rsp)
2222(5): jmp 0xfffffe36(%rip)
2227(9): nop 0x0(%rax,%rax,1)
2230(3): xor %r10d,%r10d
2233(4): mov 0x8(%rsp),%eax
2237(3): cmp $0x2,%eax
223a(6): jz 0x5be(%rip)
2240(3): cmp $0x5,%eax
2243(6): jz 0x575(%rip)
2249(3): cmp $0x2,%eax
224c(5): mov $0x3f,%ebx
2251(3): setz %dl
2254(3): xor %r12d,%r12d
2257(2): xor %eax,%eax
2259(5): jmp 0xffffff3f(%rip)
225e(2): nop 
2260(3): xor %r10d,%r10d
2263(5): cmp $0x2,0x8(%rsp)
2268(6): jz 0x508(%rip)
226e(5): mov %r12b,0x7c(%rsp)
2273(2): xor %edx,%edx
2275(2): xor %eax,%eax
2277(5): mov $0x27,%ebx
227c(5): jmp 0xffffff1c(%rip)
2281(7): nop 0x0(%rax)
2288(5): mov $0x9,%edx
228d(5): mov $0x74,%ebx
2292(5): cmp $0x2,0x8(%rsp)
2297(3): setz %al
229a(4): and 0xf(%rsp),%al
229e(6): jnz 0x150(%rip)
22a4(5): cmp $0x0,0xd(%rsp)
22a9(2): jnz 0x67(%rip)
22ab(2): mov %edx,%ebx
22ad(3): xor %r12d,%r12d
22b0(2): xor %eax,%eax
22b2(5): cmp $0x0,0xf(%rsp)
22b7(6): jnz 0xfffffef4(%rip)
22bd(5): jmp 0xffffff0c(%rip)
22c2(6): nop 0x0(%rax,%rax,1)
22c8(5): mov $0x8,%edx
22cd(5): mov $0x62,%ebx
22d2(2): jmp 0xffffffd2(%rip)
22d4(4): nop 0x0(%rax)
22d8(5): cmp $0x2,0x8(%rsp)
22dd(6): jz 0x3d3(%rip)
22e3(5): cmp $0x0,0xd(%rsp)
22e8(6): jz 0x218(%rip)
22ee(5): cmp $0x0,0xf(%rsp)
22f3(6): jz 0x20d(%rip)
22f9(6): cmp $0x0,0x18(%rsp)
22ff(6): jnz 0x3bc(%rip)
2305(5): mov $0x5c,%ebx
230a(6): nop 0x0(%rax,%rax,1)
2310(3): xor %r12d,%r12d
2313(5): cmp $0x2,0x8(%rsp)
2318(3): setz %dl
231b(5): cmp $0x0,0xf(%rsp)
2320(2): mov %edx,%eax
2322(6): jnz 0x856(%rip)
2328(3): mov %r8d,%eax
232b(3): xor $0x1,%eax
232e(2): and %dl,%al
2330(2): jz 0x31(%rip)
2332(3): cmp %r15,%r13
2335(2): jbe 0x7(%rip)
2337(5): mov $0x27,0x0(%r14,%r15,1)
233c(4): lea 0x1(%r15),%rdx
2340(3): cmp %rdx,%r13
2343(2): jbe 0x8(%rip)
2345(6): mov $0x24,0x1(%r14,%r15,1)
234b(4): lea 0x2(%r15),%rdx
234f(3): cmp %rdx,%r13
2352(2): jbe 0x8(%rip)
2354(6): mov $0x27,0x2(%r14,%r15,1)
235a(4): add $0x3,%r15
235e(3): mov %eax,%r8d
2361(3): cmp %r15,%r13
2364(2): jbe 0x7(%rip)
2366(5): mov $0x5c,0x0(%r14,%r15,1)
236b(4): add $0x1,%r15
236f(4): add $0x1,%rbp
2373(5): jmp 0xfffffe8d(%rip)
2378(8): nop 0x0(%rax,%rax,1)
2380(5): cmp $0x0,0xd(%rsp)
2385(6): jnz 0x1ce(%rip)
238b(2): xor %edx,%edx
238d(5): test $0x1,0x78(%rsp)
2392(6): jz 0xffffff19(%rip)
2398(4): add $0x1,%rbp
239c(5): jmp 0xfffffcbc(%rip)
23a1(7): nop 0x0(%rax)
23a8(5): cmp $0x2,0x8(%rsp)
23ad(3): setz %dl
23b0(2): xor %eax,%eax
23b2(5): jmp 0xfffffde6(%rip)
23b7(9): nop 0x0(%rax,%rax,1)
23c0(5): mov $0x7,%edx
23c5(5): mov $0x61,%ebx
23ca(5): jmp 0xfffffeda(%rip)
23cf(1): nop 
23d0(5): cmp $0x2,0x8(%rsp)
23d5(3): setz %dl
23d8(3): test %rbp,%rbp
23db(6): jnz 0xfffffdb1(%rip)
23e1(5): movzx 0xf(%rsp),%eax
23e6(2): and %dl,%al
23e8(6): jz 0xfffffdb0(%rip)
23ee(3): mov %r11,%rbp
23f1(8): mov $0x2,0x8(%rsp)
23f9(5): jmp 0x700(%rip)
23fe(2): nop 
2400(5): cmp $0x2,0x8(%rsp)
2405(3): setz %dl
2408(3): xor %r12d,%r12d
240b(2): jmp 0xffffffd6(%rip)
240d(3): nop (%rax)
2410(5): cmp $0x2,0x8(%rsp)
2415(5): mov $0x20,%ebx
241a(3): setz %dl
241d(2): jmp 0xffffffc4(%rip)
241f(1): nop 
2420(5): mov $0xd,%edx
2425(5): mov $0x72,%ebx
242a(5): jmp 0xfffffe68(%rip)
242f(1): nop 
2430(5): mov $0xc,%edx
2435(5): mov $0x66,%ebx
243a(5): jmp 0xfffffe6a(%rip)
243f(1): nop 
2440(5): mov $0xb,%edx
2445(5): mov $0x76,%ebx
244a(5): jmp 0xfffffe5a(%rip)
244f(1): nop 
2450(5): mov $0xa,%edx
2455(5): mov $0x6e,%ebx
245a(5): jmp 0xfffffe38(%rip)
245f(1): nop 
2460(3): xor %r10d,%r10d
2463(5): nop 0x0(%rax,%rax,1)
2468(6): cmp $0x1,0x58(%rsp)
246e(6): jnz 0x3aa(%rip)
2474(5): mov %r11,0x38(%rsp)
2479(5): mov %r8b,0x30(%rsp)
247e(5): mov %r10b,0x28(%rsp)
2483(5): call 0xffffefcd(%rip)
2488(3): mov (%rax),%rcx
248b(3): movzx %bl,%edx
248e(6): movzx 0x28(%rsp),%r10d
2494(6): movzx 0x30(%rsp),%r8d
249a(5): mov 0x38(%rsp),%r11
249f(5): mov $0x1,%edi
24a4(4): movzx 0x0(%rcx,%rdx,2),%eax
24a8(4): and $0x4000,%ax
24ac(4): setnz %r12b
24b0(3): setz %al
24b3(4): and 0xd(%rsp),%al
24b7(2): test %al,%al
24b9(6): jnz 0x998(%rip)
24bf(5): cmp $0x2,0x8(%rsp)
24c4(3): setz %dl
24c7(5): jmp 0xfffffcd1(%rip)
24cc(4): nop 0x0(%rax)
24d0(4): movzx (%r9),%ebx
24d4(3): cmp $0x7e,%bl
24d7(2): jnbe 0xffffff89(%rip)
24d9(7): lea 0x2848(%rip),%rcx
24e0(3): movzx %bl,%edx
24e3(4): movsxd 0x0(%rcx,%rdx,4),%rax
24e7(3): add %rcx,%rax
24ea(2): jmp %rax
24ec(4): nop 0x0(%rax)
24f0(3): xor %r10d,%r10d
24f3(5): cmp $0x0,0xd(%rsp)
24f8(6): jnz 0xfffffdf6(%rip)
24fe(2): nop 
2500(5): mov $0x5c,%edx
2505(5): mov $0x5c,%ebx
250a(5): jmp 0xfffffd9a(%rip)
250f(1): nop 
2510(5): mov $0xc,%edx
2515(3): xor %r10d,%r10d
2518(5): mov $0x66,%ebx
251d(5): jmp 0xfffffd87(%rip)
2522(6): nop 0x0(%rax,%rax,1)
2528(5): mov $0xa,%edx
252d(3): xor %r10d,%r10d
2530(5): mov $0x6e,%ebx
2535(5): jmp 0xfffffd5d(%rip)
253a(6): nop 0x0(%rax,%rax,1)
2540(5): mov $0x61,%ebx
2545(5): jmp 0xfffffdcb(%rip)
254a(6): nop 0x0(%rax,%rax,1)
2550(3): xor %r10d,%r10d
2553(5): cmp $0x2,0x8(%rsp)
2558(3): setz %dl
255b(5): cmp $0x0,0xf(%rsp)
2560(6): jnz 0xb9a(%rip)
2566(3): mov %r8d,%eax
2569(3): mov %r15,%rcx
256c(3): xor $0x1,%eax
256f(2): and %dl,%al
2571(2): jz 0x2f(%rip)
2573(3): cmp %r15,%r13
2576(2): jbe 0x7(%rip)
2578(5): mov $0x27,0x0(%r14,%r15,1)
257d(4): lea 0x1(%r15),%rcx
2581(3): cmp %rcx,%r13
2584(2): jbe 0x8(%rip)
2586(6): mov $0x24,0x1(%r14,%r15,1)
258c(4): lea 0x2(%r15),%rcx
2590(3): cmp %rcx,%r13
2593(6): jnbe 0x636(%rip)
2599(4): lea 0x3(%r15),%rcx
259d(3): mov %eax,%r8d
25a0(3): cmp %rcx,%r13
25a3(2): jbe 0x7(%rip)
25a5(5): mov $0x5c,0x0(%r14,%rcx,1)
25aa(5): cmp $0x2,0x8(%rsp)
25af(4): lea 0x1(%rcx),%r15
25b3(6): jz 0x606(%rip)
25b9(4): lea 0x1(%rbp),%rax
25bd(3): cmp %r11,%rax
25c0(2): jnb 0x1b(%rip)
25c2(5): mov 0x10(%rsp),%rax
25c7(5): movzx 0x1(%rax,%rbp,1),%eax
25cc(4): mov %al,0x28(%rsp)
25d0(3): sub $0x30,%eax
25d3(2): cmp $0x9,%al
25d5(6): jbe 0x834(%rip)
25db(3): mov %r12d,%eax
25de(5): mov $0x30,%ebx
25e3(3): xor %r12d,%r12d
25e6(5): jmp 0xfffffbb2(%rip)
25eb(5): nop 0x0(%rax,%rax,1)
25f0(5): cmp $0x2,0x8(%rsp)
25f5(3): mov %r10d,%r12d
25f8(3): setz %dl
25fb(3): xor %r10d,%r10d
25fe(2): xor %eax,%eax
2600(5): jmp 0xfffffb98(%rip)
2605(3): nop (%rax)
2608(5): cmp $0x2,0x8(%rsp)
260d(3): setz %dl
2610(3): xor %r10d,%r10d
2613(5): jmp 0xfffffdc5(%rip)
2618(8): nop 0x0(%rax,%rax,1)
2620(5): cmp $0x2,0x8(%rsp)
2625(3): setz %dl
2628(3): xor %r10d,%r10d
262b(3): xor %r12d,%r12d
262e(5): jmp 0xfffffdb3(%rip)
2633(5): nop 0x0(%rax,%rax,1)
2638(5): cmp $0x2,0x8(%rsp)
263d(3): mov %r10d,%r12d
2640(5): mov $0x20,%ebx
2645(3): setz %dl
2648(3): xor %r10d,%r10d
264b(5): jmp 0xfffffd96(%rip)
2650(5): mov $0xd,%edx
2655(3): xor %r10d,%r10d
2658(5): mov $0x72,%ebx
265d(5): jmp 0xfffffc35(%rip)
2662(6): nop 0x0(%rax,%rax,1)
2668(5): mov $0x76,%ebx
266d(5): jmp 0xfffffca3(%rip)
2672(6): nop 0x0(%rax,%rax,1)
2678(5): mov $0x9,%edx
267d(3): xor %r10d,%r10d
2680(5): mov $0x74,%ebx
2685(5): jmp 0xfffffc0d(%rip)
268a(6): nop 0x0(%rax,%rax,1)
2690(5): mov $0x62,%ebx
2695(5): jmp 0xfffffc7b(%rip)
269a(6): nop 0x0(%rax,%rax,1)
26a0(3): xor %r10d,%r10d
26a3(5): jmp 0xfffffa9d(%rip)
26a8(8): nop 0x0(%rax,%rax,1)
26b0(5): cmp $0x0,0xf(%rsp)
26b5(6): jnz 0x96b(%rip)
26bb(4): add $0x1,%rbp
26bf(3): mov %r8d,%eax
26c2(3): xor %r12d,%r12d
26c5(5): mov $0x5c,%ebx
26ca(5): jmp 0xfffffb12(%rip)
26cf(1): nop 
26d0(5): cmp $0x2,0x8(%rsp)
26d5(5): movzx 0xf(%rsp),%ebx
26da(3): mov %r8d,%r12d
26dd(3): mov %r11,%rbp
26e0(3): setz %dl
26e3(2): mov %ebx,%eax
26e5(3): test %r15,%r15
26e8(3): setz %cl
26eb(2): and %edx,%eax
26ed(2): and %cl,%al
26ef(6): jnz 0xa67(%rip)
26f5(2): mov %ebx,%eax
26f7(3): xor $0x1,%eax
26fa(2): and %al,%dl
26fc(6): jz 0x970(%rip)
2702(5): cmp $0x0,0x7c(%rsp)
2707(6): jz 0x963(%rip)
270d(5): cmp $0x0,0xe(%rsp)
2712(6): jnz 0x9fb(%rip)
2718(3): test %r13,%r13
271b(3): setz %al
271e(6): cmp $0x0,0x50(%rsp)
2724(3): setnz %dl
2727(2): and %dl,%al
2729(6): jz 0xa23(%rip)
272f(5): mov 0x50(%rsp),%r13
2734(7): lea 0x235a(%rip),%rbx
273b(4): mov $0x27,(%r14)
273f(8): mov $0x2,0x8(%rsp)
2747(6): mov $0x1,%r15d
274d(9): mov $0x1,0x18(%rsp)
2756(5): mov $0x0,0xf(%rsp)
275b(5): mov %rbx,0x48(%rsp)
2760(4): mov %al,0x7c(%rsp)
2764(5): jmp 0xfffff8df(%rip)
2769(7): nop 0x0(%rax)
2770(5): cmp $0x0,0xf(%rsp)
2775(6): jnz 0x8ab(%rip)
277b(3): test %r13,%r13
277e(6): jz 0x402(%rip)
2784(2): xor %edx,%edx
2786(6): cmp $0x0,0x50(%rsp)
278c(6): jnz 0x3f4(%rip)
2792(5): mov %r13,0x50(%rsp)
2797(4): add $0x3,%r15
279b(2): xor %eax,%eax
279d(5): mov %r12b,0x7c(%rsp)
27a2(3): xor %r8d,%r8d
27a5(3): mov %rdx,%r13
27a8(5): mov $0x27,%ebx
27ad(5): jmp 0xfffffa1c(%rip)
27b2(6): nop 0x0(%rax,%rax,1)
27b8(5): test $0x4,0x78(%rsp)
27bd(2): jz 0x23(%rip)
27bf(4): lea 0x2(%rbp),%rcx
27c3(3): cmp %r11,%rcx
27c6(2): jnb 0x1a(%rip)
27c8(5): mov 0x10(%rsp),%rax
27cd(5): cmp $0x3f,0x1(%rax,%rbp,1)
27d2(6): jz 0x790(%rip)
27d8(8): nop 0x0(%rax,%rax,1)
27e0(2): xor %edx,%edx
27e2(3): xor %r12d,%r12d
27e5(2): xor %eax,%eax
27e7(5): mov $0x3f,%ebx
27ec(5): jmp 0xfffff9ac(%rip)
27f1(7): nop 0x0(%rax)
27f8(5): cmp $0x0,0xf(%rsp)
27fd(6): jnz 0x823(%rip)
2803(3): xor %r12d,%r12d
2806(2): xor %eax,%eax
2808(5): mov $0x3f,%ebx
280d(5): jmp 0xfffff9bc(%rip)
2812(6): nop 0x0(%rax,%rax,1)
2818(8): lea 0xa0(%rsp),%rax
2820(4): cmp $0xffffffff,%r11
2824(c): mov $0x0,0xa0(%rsp)
2830(5): mov %rax,0x28(%rsp)
2835(2): jnz 0x2f(%rip)
2837(5): mov 0x10(%rsp),%rdi
283c(5): mov %r8b,0x40(%rsp)
2841(5): mov %r10b,0x38(%rsp)
2846(5): mov %r9,0x30(%rsp)
284b(5): call 0xffffea45(%rip)
2850(6): movzx 0x40(%rsp),%r8d
2856(6): movzx 0x38(%rsp),%r10d
285c(3): mov %rax,%r11
285f(5): mov 0x30(%rsp),%r9
2864(8): lea 0x9c(%rsp),%rax
286c(2): xor %ecx,%ecx
286e(4): mov %bl,0x7e(%rsp)
2872(5): mov %r8b,0x7d(%rsp)
2877(3): mov %rcx,%rbx
287a(8): mov %r9,0x88(%rsp)
2882(5): mov %rax,0x38(%rsp)
2887(5): mov %r10b,0x7f(%rsp)
288c(8): mov %r15,0x80(%rsp)
2894(5): mov %r14,0x40(%rsp)
2899(5): mov %r13,0x70(%rsp)
289e(5): mov %r11,0x30(%rsp)
28a3(5): mov 0x10(%rsp),%rax
28a8(5): lea 0x0(%rbp,%rbx,1),%r14
28ad(5): mov 0x30(%rsp),%rdx
28b2(5): mov 0x28(%rsp),%rcx
28b7(5): mov 0x38(%rsp),%rdi
28bc(4): lea 0x0(%rax,%r14,1),%r13
28c0(3): sub %r14,%rdx
28c3(3): mov %r13,%rsi
28c6(5): call 0x1afa(%rip)
28cb(3): test %rax,%rax
28ce(3): mov %rax,%r15
28d1(2): jz 0x50(%rip)
28d3(4): cmp $0xffffffff,%rax
28d7(6): jz 0x61e(%rip)
28dd(4): cmp $0xfffffffe,%rax
28e1(6): jz 0x5a0(%rip)
28e7(5): cmp $0x2,0x8(%rsp)
28ec(3): setz %al
28ef(4): and 0xf(%rsp),%al
28f3(6): jnz 0x19d(%rip)
28f9(7): mov 0x9c(%rsp),%edi
2900(5): call 0xffffeb40(%rip)
2905(5): mov 0x28(%rsp),%rdi
290a(2): test %eax,%eax
290c(5): mov $0x0,%eax
2911(4): cmove %eax,%r12d
2915(3): add %r15,%rbx
2918(5): call 0xffffeb18(%rip)
291d(2): test %eax,%eax
291f(2): jz 0xffffff84(%rip)
2921(3): mov %r12d,%edx
2924(3): mov %rbx,%rdi
2927(6): movzx 0x7d(%rsp),%r8d
292d(3): xor $0x1,%edx
2930(5): movzx 0x7e(%rsp),%ebx
2935(6): movzx 0x7f(%rsp),%r10d
293b(4): and 0xd(%rsp),%dl
293f(8): mov 0x80(%rsp),%r15
2947(5): mov 0x40(%rsp),%r14
294c(5): mov 0x70(%rsp),%r13
2951(5): mov 0x30(%rsp),%r11
2956(4): cmp $0x1,%rdi
295a(6): jbe 0x601(%rip)
2960(3): mov %rdi,%rcx
2963(2): xor %esi,%esi
2965(6): movzx 0xf(%rsp),%r9d
296b(3): add %rbp,%rcx
296e(5): mov 0x10(%rsp),%rdi
2973(5): jmp 0xbb(%rip)
2978(8): nop 0x0(%rax,%rax,1)
2980(5): cmp $0x2,0x8(%rsp)
2985(3): setz %al
2988(3): test %r9b,%r9b
298b(6): jnz 0x4b5(%rip)
2991(3): mov %r8d,%esi
2994(3): xor $0x1,%esi
2997(3): and %sil,%al
299a(2): jz 0x31(%rip)
299c(3): cmp %r15,%r13
299f(2): jbe 0x7(%rip)
29a1(5): mov $0x27,0x0(%r14,%r15,1)
29a6(4): lea 0x1(%r15),%rsi
29aa(3): cmp %rsi,%r13
29ad(2): jbe 0x8(%rip)
29af(6): mov $0x24,0x1(%r14,%r15,1)
29b5(4): lea 0x2(%r15),%rsi
29b9(3): cmp %rsi,%r13
29bc(2): jbe 0x8(%rip)
29be(6): mov $0x27,0x2(%r14,%r15,1)
29c4(4): add $0x3,%r15
29c8(3): mov %eax,%r8d
29cb(3): cmp %r15,%r13
29ce(2): jbe 0x7(%rip)
29d0(5): mov $0x5c,0x0(%r14,%r15,1)
29d5(4): lea 0x1(%r15),%rax
29d9(3): cmp %rax,%r13
29dc(2): jbe 0xf(%rip)
29de(2): mov %ebx,%eax
29e0(3): shr $0x6,%al
29e3(3): add $0x30,%eax
29e6(5): mov %al,0x1(%r14,%r15,1)
29eb(4): lea 0x2(%r15),%rax
29ef(3): cmp %rax,%r13
29f2(2): jbe 0x12(%rip)
29f4(2): mov %ebx,%eax
29f6(3): shr $0x3,%al
29f9(3): and $0x7,%eax
29fc(3): add $0x30,%eax
29ff(5): mov %al,0x2(%r14,%r15,1)
2a04(3): and $0x7,%ebx
2a07(4): add $0x1,%rbp
2a0b(4): add $0x3,%r15
2a0f(3): add $0x30,%ebx
2a12(3): cmp %rcx,%rbp
2a15(6): jnb 0xfffff7eb(%rip)
2a1b(2): mov %edx,%esi
2a1d(3): cmp %r15,%r13
2a20(2): jbe 0x6(%rip)
2a22(4): mov %bl,0x0(%r14,%r15,1)
2a26(4): movzx 0x0(%rdi,%rbp,1),%ebx
2a2a(4): add $0x1,%r15
2a2e(2): test %dl,%dl
2a30(6): jnz 0xffffff50(%rip)
2a36(2): mov %esi,%eax
2a38(3): xor $0x1,%eax
2a3b(3): and %r8d,%eax
2a3e(3): test %r10b,%r10b
2a41(2): jz 0x10(%rip)
2a43(3): cmp %r15,%r13
2a46(2): jbe 0x7(%rip)
2a48(5): mov $0x5c,0x0(%r14,%r15,1)
2a4d(4): add $0x1,%r15
2a51(4): add $0x1,%rbp
2a55(3): cmp %rcx,%rbp
2a58(6): jnb 0xfffff784(%rip)
2a5e(2): test %al,%al
2a60(6): jz 0x3fe(%rip)
2a66(3): cmp %r15,%r13
2a69(2): jbe 0x7(%rip)
2a6b(5): mov $0x27,0x0(%r14,%r15,1)
2a70(4): lea 0x1(%r15),%rax
2a74(3): cmp %rax,%r13
2a77(2): jbe 0x8(%rip)
2a79(6): mov $0x27,0x1(%r14,%r15,1)
2a7f(4): add $0x2,%r15
2a83(3): xor %r10d,%r10d
2a86(3): xor %r8d,%r8d
2a89(2): jmp 0xffffff94(%rip)
2a8b(5): nop 0x0(%rax,%rax,1)
2a90(4): cmp $0x1,%r15
2a94(6): jz 0xfffffe65(%rip)
2a9a(5): mov 0x10(%rsp),%rdi
2a9f(4): lea 0x0(%rdi,%r15,1),%rcx
2aa3(5): lea 0x1(%rdi,%r14,1),%rdx
2aa8(4): lea 0x0(%rcx,%r14,1),%r8
2aac(2): jmp 0x11(%rip)
2aae(2): nop 
2ab0(4): add $0x1,%rdx
2ab4(3): cmp %rdx,%r8
2ab7(6): jz 0xfffffe42(%rip)
2abd(3): movzx (%rdx),%ecx
2ac0(3): sub $0x5b,%ecx
2ac3(3): cmp $0x21,%cl
2ac6(2): jnbe 0xffffffea(%rip)
2ac8(5): mov $0x1,%esi
2acd(3): shl/sal %cl,%rsi
2ad0(3): mov %rsi,%rcx
2ad3(a): mov $0x8589934635,%rsi
2add(3): test %rsi,%rcx
2ae0(2): jz 0xffffffd0(%rip)
2ae2(5): mov 0x40(%rsp),%r14
2ae7(5): mov 0x70(%rsp),%r13
2aec(5): mov 0x30(%rsp),%rbp
2af1(8): mov $0x2,0x8(%rsp)
2af9(5): cmp $0x0,0xd(%rsp)
2afe(2): jz 0x12(%rip)
2b00(2): test %al,%al
2b02(5): mov $0x4,%eax
2b07(5): cmove 0x8(%rsp),%eax
2b0c(4): mov %eax,0x8(%rsp)
2b10(4): sub $0x8,%rsp
2b14(3): mov %rbp,%rcx
2b17(3): mov %r13,%rsi
2b1a(4): push 0x68(%rsp)
2b1e(4): push 0x78(%rsp)
2b22(3): mov %r14,%rdi
2b25(2): push $0x0
2b27(8): mov 0x98(%rsp),%r9d
2b2f(5): mov 0x28(%rsp),%r8d
2b34(5): mov 0x30(%rsp),%rdx
2b39(4): and $0xfd,%r9d
2b3d(5): call 0xfffff433(%rip)
2b42(4): add $0x20,%rsp
2b46(3): mov %rax,%r15
2b49(8): mov 0xa8(%rsp),%rbx
2b51(9): xor $0x28,%rbx
2b5a(3): mov %r15,%rax
2b5d(6): jnz 0x606(%rip)
2b63(7): add $0xb8,%rsp
2b6a(1): pop %rbx
2b6b(1): pop %rbp
2b6c(2): pop %r12
2b6e(2): pop %r13
2b70(2): pop %r14
2b72(2): pop %r15
2b74(1): ret near (%rsp)
2b75(3): nop (%rax)
2b78(3): mov %r11,%rbp
2b7b(5): jmp 0xffffff7e(%rip)
2b80(3): cmp %r15,%r13
2b83(2): jbe 0x7(%rip)
2b85(5): mov $0x27,0x0(%r14,%r15,1)
2b8a(4): lea 0x1(%r15),%rax
2b8e(3): cmp %rax,%r13
2b91(2): jbe 0x8(%rip)
2b93(6): mov $0x5c,0x1(%r14,%r15,1)
2b99(4): lea 0x2(%r15),%rax
2b9d(3): cmp %rax,%r13
2ba0(6): jbe 0x5f2(%rip)
2ba6(3): mov %r13,%rdx
2ba9(6): mov $0x27,0x2(%r14,%r15,1)
2baf(5): mov 0x50(%rsp),%r13
2bb4(5): jmp 0xfffffbde(%rip)
2bb9(3): mov %r12d,%eax
2bbc(5): mov $0x30,%ebx
2bc1(3): xor %r12d,%r12d
2bc4(5): jmp 0xfffff605(%rip)
2bc9(6): mov $0x27,0x2(%r14,%r15,1)
2bcf(5): jmp 0xfffff9ca(%rip)
2bd4(2): test %ebx,%ebx
2bd6(6): jnz 0xfffff42d(%rip)
2bdc(5): mov $0x1,0xd(%rsp)
2be1(3): test %r13,%r13
2be4(6): jnz 0x596(%rip)
2bea(7): lea 0x1ea4(%rip),%rax
2bf1(9): mov $0x0,0x50(%rsp)
2bfa(5): mov $0x1,0xe(%rsp)
2bff(5): mov $0x0,0x7c(%rsp)
2c04(3): xor %r12d,%r12d
2c07(5): mov $0x0,0xf(%rsp)
2c0c(9): mov $0x1,0x18(%rsp)
2c15(5): mov %rax,0x48(%rsp)
2c1a(6): mov $0x1,%r15d
2c20(8): mov $0x2,0x8(%rsp)
2c28(5): jmp 0xfffff41b(%rip)
2c2d(3): nop (%rax)
2c30(2): test %ebx,%ebx
2c32(6): jnz 0x3fb(%rip)
2c38(3): test %r13,%r13
2c3b(6): jz 0x22b(%rip)
2c41(4): mov $0x22,(%r14)
2c45(5): mov $0x1,0xe(%rsp)
2c4a(3): xor %r12d,%r12d
2c4d(5): mov $0x0,0x7c(%rsp)
2c52(9): mov $0x0,0x50(%rsp)
2c5b(7): lea 0x1e31(%rip),%rax
2c62(5): mov $0x0,0xf(%rsp)
2c67(5): mov $0x1,0xd(%rsp)
2c6c(9): mov $0x1,0x18(%rsp)
2c75(6): mov $0x1,%r15d
2c7b(5): mov %rax,0x48(%rsp)
2c80(5): jmp 0xfffff3c3(%rip)
2c85(7): lea 0x1e07(%rip),%rax
2c8c(5): mov $0x1,0xe(%rsp)
2c91(5): mov $0x0,0x7c(%rsp)
2c96(3): xor %r12d,%r12d
2c99(9): mov $0x0,0x50(%rsp)
2ca2(5): mov $0x1,0xf(%rsp)
2ca7(5): mov $0x1,0xd(%rsp)
2cac(9): mov $0x1,0x18(%rsp)
2cb5(3): xor %r15d,%r15d
2cb8(5): mov %rax,0x48(%rsp)
2cbd(8): mov $0x5,0x8(%rsp)
2cc5(5): jmp 0xfffff37e(%rip)
2cca(5): mov $0x1,0xe(%rsp)
2ccf(5): mov $0x0,0x7c(%rsp)
2cd4(3): xor %r12d,%r12d
2cd7(9): mov $0x0,0x50(%rsp)
2ce0(5): mov $0x0,0xf(%rsp)
2ce5(3): xor %r15d,%r15d
2ce8(5): mov $0x1,0xd(%rsp)
2ced(9): mov $0x0,0x18(%rsp)
2cf6(9): mov $0x0,0x48(%rsp)
2cff(5): jmp 0xfffff344(%rip)
2d04(5): cmp $0xa,0x8(%rsp)
2d09(2): jz 0x58(%rip)
2d0b(7): lea 0x1d85(%rip),%rsi
2d12(2): xor %edi,%edi
2d14(5): mov $0x5,%edx
2d19(5): call 0xffffe557(%rip)
2d1e(3): mov %rax,%rcx
2d21(5): mov %rax,0x68(%rsp)
2d26(7): lea 0x1d6a(%rip),%rax
2d2d(3): cmp %rax,%rcx
2d30(6): jz 0x39e(%rip)
2d36(7): lea 0x1d58(%rip),%rsi
2d3d(2): xor %edi,%edi
2d3f(5): mov $0x5,%edx
2d44(5): call 0xffffe52c(%rip)
2d49(3): mov %rax,%rcx
2d4c(5): mov %rax,0x60(%rsp)
2d51(7): lea 0x1d3d(%rip),%rax
2d58(3): cmp %rax,%rcx
2d5b(6): jz 0x389(%rip)
2d61(3): xor %r15d,%r15d
2d64(2): test %ebx,%ebx
2d66(6): jz 0x1c7(%rip)
2d6c(2): test %ebx,%ebx
2d6e(5): mov 0x60(%rsp),%rbx
2d73(5): setnz 0xf(%rsp)
2d78(3): xor %r12d,%r12d
2d7b(3): mov %rbx,%rdi
2d7e(5): call 0xffffe512(%rip)
2d83(5): mov %rbx,0x48(%rsp)
2d88(5): mov %rax,0x18(%rsp)
2d8d(5): mov $0x1,0xe(%rsp)
2d92(5): mov $0x0,0x7c(%rsp)
2d97(9): mov $0x0,0x50(%rsp)
2da0(5): mov $0x1,0xd(%rsp)
2da5(5): jmp 0xfffff29e(%rip)
2daa(5): mov $0x1,0xe(%rsp)
2daf(5): mov $0x0,0x7c(%rsp)
2db4(3): xor %r12d,%r12d
2db7(9): mov $0x0,0x50(%rsp)
2dc0(5): mov $0x0,0xf(%rsp)
2dc5(3): xor %r15d,%r15d
2dc8(5): mov $0x0,0xd(%rsp)
2dcd(9): mov $0x0,0x18(%rsp)
2dd6(9): mov $0x0,0x48(%rsp)
2ddf(5): jmp 0xfffff264(%rip)
2de4(5): mov $0x1,0xe(%rsp)
2de9(5): mov $0x0,0x7c(%rsp)
2dee(3): xor %r12d,%r12d
2df1(9): mov $0x0,0x50(%rsp)
2dfa(5): mov $0x1,0xf(%rsp)
2dff(5): mov $0x1,0xd(%rsp)
2e04(5): jmp 0xfffff21f(%rip)
2e09(3): cmp %r15,%r13
2e0c(2): jbe 0x7(%rip)
2e0e(5): mov $0x30,0x0(%r14,%r15,1)
2e13(4): lea 0x2(%rcx),%rax
2e17(3): cmp %rax,%r13
2e1a(2): jbe 0x8(%rip)
2e1c(6): mov $0x30,0x2(%r14,%rcx,1)
2e22(3): mov %r12d,%eax
2e25(4): lea 0x3(%rcx),%r15
2e29(3): xor %r12d,%r12d
2e2c(5): mov $0x30,%ebx
2e31(5): jmp 0xfffff367(%rip)
2e36(a): nop 0x0(%rax,%rax,1)
2e40(5): movzx 0xf(%rsp),%ebx
2e45(3): mov %r11,%rbp
2e48(4): mov %bl,0xd(%rsp)
2e4c(5): jmp 0xfffffcad(%rip)
2e51(5): movzx 0xd(%rsp),%edx
2e56(3): xor %r12d,%r12d
2e59(5): jmp 0xfffffb07(%rip)
2e5e(3): xor %r10d,%r10d
2e61(5): jmp 0xfffffbbc(%rip)
2e66(9): mov $0x0,0x50(%rsp)
2e6f(5): mov $0x1,0xe(%rsp)
2e74(3): xor %r12d,%r12d
2e77(5): mov $0x0,0x7c(%rsp)
2e7c(5): jmp 0xfffffddf(%rip)
2e81(5): mov 0x30(%rsp),%r11
2e86(3): mov %r14,%rsi
2e89(3): mov %r13,%rcx
2e8c(3): mov %rbx,%rax
2e8f(3): mov %rbx,%rdi
2e92(6): movzx 0x7d(%rsp),%r8d
2e98(5): movzx 0x7e(%rsp),%ebx
2e9d(8): mov 0x88(%rsp),%r9
2ea5(3): cmp %r11,%rsi
2ea8(6): movzx 0x7f(%rsp),%r10d
2eae(8): mov 0x80(%rsp),%r15
2eb6(5): mov 0x40(%rsp),%r14
2ebb(5): mov 0x70(%rsp),%r13
2ec0(2): jnb 0x28(%rip)
2ec2(3): cmp $0x0,(%rcx)
2ec5(2): jnz 0x12(%rip)
2ec7(2): jmp 0x21(%rip)
2ec9(7): nop 0x0(%rax)
2ed0(5): cmp $0x0,0x0(%r9,%rax,1)
2ed5(2): jz 0x10(%rip)
2ed7(4): add $0x1,%rax
2edb(5): lea 0x0(%rbp,%rax,1),%rdx
2ee0(3): cmp %rdx,%r11
2ee3(2): jnbe 0xffffffed(%rip)
2ee5(3): mov %rax,%rdi
2ee8(5): movzx 0xd(%rsp),%edx
2eed(3): xor %r12d,%r12d
2ef0(5): jmp 0xfffffa66(%rip)
2ef5(3): mov %rbx,%rdi
2ef8(6): movzx 0x7d(%rsp),%r8d
2efe(5): movzx 0x7e(%rsp),%ebx
2f03(6): movzx 0x7f(%rsp),%r10d
2f09(8): mov 0x80(%rsp),%r15
2f11(3): xor %r12d,%r12d
2f14(5): mov 0x40(%rsp),%r14
2f19(5): mov 0x70(%rsp),%r13
2f1e(5): mov 0x30(%rsp),%r11
2f23(5): movzx 0xd(%rsp),%edx
2f28(5): jmp 0xfffffa2e(%rip)
2f2d(5): mov 0x68(%rsp),%rdx
2f32(3): movzx (%rdx),%eax
2f35(2): test %al,%al
2f37(6): jz 0xfffffe35(%rip)
2f3d(3): nop (%rax)
2f40(3): cmp %r15,%r13
2f43(2): jbe 0x6(%rip)
2f45(4): mov %al,0x0(%r14,%r15,1)
2f49(4): add $0x1,%r15
2f4d(5): movzx 0x0(%rdx,%r15,1),%eax
2f52(2): test %al,%al
2f54(2): jnz 0xffffffec(%rip)
2f56(5): jmp 0xfffffe16(%rip)
2f5b(2): mov %edx,%eax
2f5d(5): jmp 0xfffff55a(%rip)
2f62(4): movzx 0x0(%rax,%rcx,1),%ebx
2f66(3): cmp $0x3e,%bl
2f69(6): jnbe 0xfffff877(%rip)
2f6f(a): mov $0x8070630310989004800,%rax
2f79(4): bt %rbx,%rax
2f7d(6): jnb 0xfffff863(%rip)
2f83(5): cmp $0x0,0xf(%rsp)
2f88(6): jnz 0x1ea(%rip)
2f8e(3): cmp %r15,%r13
2f91(2): jbe 0x7(%rip)
2f93(5): mov $0x3f,0x0(%r14,%r15,1)
2f98(4): lea 0x1(%r15),%rax
2f9c(3): cmp %rax,%r13
2f9f(2): jbe 0x8(%rip)
2fa1(6): mov $0x22,0x1(%r14,%r15,1)
2fa7(4): lea 0x2(%r15),%rax
2fab(3): cmp %rax,%r13
2fae(2): jbe 0x8(%rip)
2fb0(6): mov $0x22,0x2(%r14,%r15,1)
2fb6(4): lea 0x3(%r15),%rax
2fba(3): cmp %rax,%r13
2fbd(2): jbe 0x8(%rip)
2fbf(6): mov $0x3f,0x3(%r14,%r15,1)
2fc5(4): add $0x4,%r15
2fc9(2): xor %edx,%edx
2fcb(3): xor %r12d,%r12d
2fce(2): xor %eax,%eax
2fd0(3): mov %rcx,%rbp
2fd3(5): jmp 0xfffff1c5(%rip)
2fd8(2): test %ebx,%ebx
2fda(6): jz 0x18e(%rip)
2fe0(7): lea 0x1aae(%rip),%rax
2fe7(5): mov $0x1,0xe(%rsp)
2fec(5): mov $0x0,0x7c(%rsp)
2ff1(3): xor %r12d,%r12d
2ff4(9): mov $0x0,0x50(%rsp)
2ffd(5): mov $0x1,0xf(%rsp)
3002(5): mov $0x0,0xd(%rsp)
3007(9): mov $0x1,0x18(%rsp)
3010(3): xor %r15d,%r15d
3013(5): mov %rax,0x48(%rsp)
3018(5): jmp 0xfffff02b(%rip)
301d(3): nop (%rax)
3020(3): mov %r11,%rbp
3023(5): movzx 0xf(%rsp),%eax
3028(5): jmp 0xfffffad1(%rip)
302d(7): lea 0x1a5f(%rip),%rax
3034(5): mov $0x1,0xe(%rsp)
3039(5): mov $0x0,0x7c(%rsp)
303e(3): xor %r12d,%r12d
3041(9): mov $0x0,0x50(%rsp)
304a(5): mov $0x1,0xf(%rsp)
304f(5): mov $0x1,0xd(%rsp)
3054(9): mov $0x1,0x18(%rsp)
305d(3): xor %r15d,%r15d
3060(5): mov %rax,0x48(%rsp)
3065(5): jmp 0xffffefde(%rip)
306a(2): mov %edx,%eax
306c(5): mov 0x48(%rsp),%rbx
3071(3): test %rbx,%rbx
3074(2): jz 0x2e(%rip)
3076(2): test %al,%al
3078(2): jz 0x2a(%rip)
307a(3): movzx (%rbx),%ecx
307d(3): mov %rbx,%rax
3080(2): test %cl,%cl
3082(2): jz 0x20(%rip)
3084(3): mov %r15,%rdx
3087(3): sub %r15,%rax
308a(3): cmp %rdx,%r13
308d(2): jbe 0x6(%rip)
308f(4): mov %cl,0x0(%r14,%rdx,1)
3093(4): add $0x1,%rdx
3097(4): movzx 0x0(%rax,%rdx,1),%ecx
309b(2): test %cl,%cl
309d(2): jnz 0xffffffed(%rip)
309f(3): mov %rdx,%r15
30a2(3): cmp %r15,%r13
30a5(6): jbe 0xfffffaa4(%rip)
30ab(5): mov $0x0,0x0(%r14,%r15,1)
30b0(5): jmp 0xfffffa99(%rip)
30b5(5): cmp $0x2,0x8(%rsp)
30ba(5): movzx 0xf(%rsp),%ebx
30bf(3): mov %r11,%rbp
30c2(3): setz %al
30c5(4): mov %bl,0xd(%rsp)
30c9(5): jmp 0xfffffa30(%rip)
30ce(4): mov 0x8(%rsp),%esi
30d2(3): mov %rcx,%rdi
30d5(5): call 0xffffedab(%rip)
30da(5): mov %rax,0x68(%rsp)
30df(5): jmp 0xfffffc57(%rip)
30e4(4): mov 0x8(%rsp),%esi
30e8(3): mov %rcx,%rdi
30eb(5): call 0xffffed95(%rip)
30f0(5): mov %rax,0x60(%rsp)
30f5(5): jmp 0xfffffc6c(%rip)
30fa(5): movzx 0xf(%rsp),%ebx
30ff(3): mov %r11,%rbp
3102(2): mov %edx,%eax
3104(4): mov %bl,0xd(%rsp)
3108(5): jmp 0xfffff9f1(%rip)
310d(4): sub $0x8,%rsp
3111(6): mov $0x5,%r8d
3117(3): mov %r11,%rcx
311a(4): push 0x68(%rsp)
311e(4): push 0x78(%rsp)
3122(3): mov %r14,%rdi
3125(4): push 0x38(%rsp)
3129(8): mov 0x98(%rsp),%r9d
3131(5): mov 0x30(%rsp),%rdx
3136(5): mov 0x70(%rsp),%rsi
313b(5): call 0xffffee35(%rip)
3140(4): add $0x20,%rsp
3144(3): mov %rax,%r15
3147(5): jmp 0xfffffa02(%rip)
314c(5): movzx 0x7c(%rsp),%eax
3151(5): jmp 0xffffff1b(%rip)
3156(8): mov $0x2,0x8(%rsp)
315e(5): jmp 0xfffff99b(%rip)
3163(5): call 0xffffe13d(%rip)
3168(5): mov $0x0,0xd(%rsp)
316d(5): jmp 0xfffffa74(%rip)
3172(3): mov %r11,%rbp
3175(5): jmp 0xfffff99b(%rip)
317a(5): mov $0x1,0xe(%rsp)
317f(2): xor %eax,%eax
3181(3): xor %r12d,%r12d
3184(9): mov $0x0,0x50(%rsp)
318d(5): jmp 0xfffff5a7(%rip)
3192(3): mov %r13,%rdx
3195(5): mov 0x50(%rsp),%r13
319a(5): jmp 0xfffff5f8(%rip)
319f(5): call 0xffffe051(%rip)

"quotearg_n_options" :
31b0(2): push %r15
31b2(2): push %r14
31b4(3): movsxd %edi,%r15
31b7(2): push %r13
31b9(2): push %r12
31bb(3): mov %rdx,%r14
31be(1): push %rbp
31bf(1): push %rbx
31c0(3): mov %rcx,%rbp
31c3(4): sub $0x28,%rsp
31c7(5): mov %rsi,0x8(%rsp)
31cc(5): call 0xffffe034(%rip)
31d1(3): mov %rax,%r13
31d4(2): mov (%rax),%eax
31d6(3): test %r15d,%r15d
31d9(7): mov 0x203e80(%rip),%rbx
31e0(4): mov %eax,0x18(%rsp)
31e4(6): js 0x16d(%rip)
31ea(7): cmp %r15d,0x203e67(%rip)
31f1(2): jnle 0x64(%rip)
31f3(7): cmp $0x7fffffff,%r15d
31fa(6): jz 0x15c(%rip)
3200(4): lea 0x1(%r15),%r12d
3204(7): lea 0x203e65(%rip),%rax
320b(3): movsxd %r12d,%rsi
320e(4): shl/sal $0x4,%rsi
3212(3): cmp %rax,%rbx
3215(6): jz 0x11b(%rip)
321b(3): mov %rbx,%rdi
321e(5): call 0xf72(%rip)
3223(3): mov %rax,%rbx
3226(7): mov %rax,0x203e33(%rip)
322d(7): movsxd 0x203e24(%rip),%rdi
3234(3): mov %r12d,%edx
3237(2): xor %esi,%esi
3239(2): sub %edi,%edx
323b(4): shl/sal $0x4,%rdi
323f(3): movsxd %edx,%rdx
3242(3): add %rbx,%rdi
3245(4): shl/sal $0x4,%rdx
3249(5): call 0xffffe0a7(%rip)
324e(7): mov %r12d,0x203e03(%rip)
3255(3): mov 0x4(%rbp),%eax
3258(4): shl/sal $0x4,%r15
325c(4): sub $0x8,%rsp
3260(3): add %r15,%rbx
3263(4): lea 0x8(%rbp),%r15
3267(4): mov 0x0(%rbp),%r8d
326b(3): mov (%rbx),%r11
326e(4): mov 0x8(%rbx),%r12
3272(3): mov %r14,%rcx
3275(3): or $0x1,%eax
3278(4): mov %eax,0x24(%rsp)
327c(3): push 0x30(%rbp)
327f(3): mov %eax,%r9d
3282(3): push 0x28(%rbp)
3285(2): push %r15
3287(3): mov %r11,%rsi
328a(5): mov 0x28(%rsp),%rdx
328f(3): mov %r12,%rdi
3292(5): mov %r11,0x30(%rsp)
3297(5): call 0xffffecd9(%rip)
329c(4): add $0x20,%rsp
32a0(5): mov 0x10(%rsp),%r11
32a5(3): cmp %rax,%r11
32a8(2): jnbe 0x69(%rip)
32aa(4): lea 0x1(%rax),%rsi
32ae(7): lea 0x203e4b(%rip),%rax
32b5(3): cmp %rax,%r12
32b8(3): mov %rsi,(%rbx)
32bb(2): jz 0x14(%rip)
32bd(3): mov %r12,%rdi
32c0(5): mov %rsi,0x10(%rsp)
32c5(5): call 0xffffdf1b(%rip)
32ca(5): mov 0x10(%rsp),%rsi
32cf(3): mov %rsi,%rdi
32d2(5): mov %rsi,0x10(%rsp)
32d7(5): call 0xe59(%rip)
32dc(4): sub $0x8,%rsp
32e0(4): mov %rax,0x8(%rbx)
32e4(4): mov 0x0(%rbp),%r8d
32e8(3): push 0x30(%rbp)
32eb(3): push 0x28(%rbp)
32ee(3): mov %r14,%rcx
32f1(2): push %r15
32f3(5): mov 0x3c(%rsp),%r9d
32f8(3): mov %rax,%rdi
32fb(5): mov 0x28(%rsp),%rdx
3300(5): mov 0x30(%rsp),%rsi
3305(3): mov %rax,%r12
3308(5): call 0xffffec68(%rip)
330d(4): add $0x20,%rsp
3311(4): mov 0x18(%rsp),%eax
3315(4): mov %eax,0x0(%r13)
3319(4): add $0x28,%rsp
331d(3): mov %r12,%rax
3320(1): pop %rbx
3321(1): pop %rbp
3322(2): pop %r12
3324(2): pop %r13
3326(2): pop %r14
3328(2): pop %r15
332a(1): ret near (%rsp)
332b(5): nop 0x0(%rax,%rax,1)
3330(2): xor %edi,%edi
3332(5): call 0xe5e(%rip)
3337(8): movdqa 0x203d31(%rip),%xmm0
333f(3): mov %rax,%rbx
3342(7): mov %rax,0x203d17(%rip)
3349(3): movups %xmm0,(%rax)
334c(5): jmp 0xfffffee1(%rip)
3351(5): call 0xffffde9f(%rip)
3356(5): call 0x102a(%rip)

"clone_quoting_options" :
3360(2): push %r12
3362(1): push %rbp
3363(1): push %rbx
3364(3): mov %rdi,%rbx
3367(5): call 0xffffde99(%rip)
336c(3): mov (%rax),%r12d
336f(3): mov %rax,%rbp
3372(7): lea 0x203e87(%rip),%rax
3379(3): test %rbx,%rbx
337c(5): mov $0x38,%esi
3381(4): cmove %rax,%rbx
3385(3): mov %rbx,%rdi
3388(5): call 0xfa8(%rip)
338d(4): mov %r12d,0x0(%rbp)
3391(1): pop %rbx
3392(1): pop %rbp
3393(2): pop %r12
3395(1): ret near (%rsp)

"get_quoting_style" :
33a0(7): lea 0x203e59(%rip),%rax
33a7(3): test %rdi,%rdi
33aa(4): cmove %rax,%rdi
33ae(2): mov (%rdi),%eax
33b0(1): ret near (%rsp)

"set_quoting_style" :
33c0(7): lea 0x203e39(%rip),%rax
33c7(3): test %rdi,%rdi
33ca(4): cmove %rax,%rdi
33ce(2): mov %esi,(%rdi)
33d0(1): ret near (%rsp)

"set_char_quoting" :
33e0(7): lea 0x203e19(%rip),%rax
33e7(3): test %rdi,%rdi
33ea(2): mov %esi,%ecx
33ec(4): cmove %rax,%rdi
33f0(2): mov %esi,%eax
33f2(3): and $0x1f,%ecx
33f5(3): shr $0x5,%al
33f8(3): movzx %al,%eax
33fb(5): lea 0x8(%rdi,%rax,4),%rdi
3400(2): mov (%rdi),%esi
3402(2): mov %esi,%eax
3404(2): shr %cl,%eax
3406(2): xor %eax,%edx
3408(3): and $0x1,%eax
340b(3): and $0x1,%edx
340e(2): shl/sal %cl,%edx
3410(2): xor %esi,%edx
3412(2): mov %edx,(%rdi)
3414(1): ret near (%rsp)

"set_quoting_flags" :
3420(7): lea 0x203dd9(%rip),%rax
3427(3): test %rdi,%rdi
342a(4): cmove %rax,%rdi
342e(3): mov 0x4(%rdi),%eax
3431(3): mov %esi,0x4(%rdi)
3434(1): ret near (%rsp)

"set_custom_quoting" :
3440(7): lea 0x203db9(%rip),%rax
3447(3): test %rdi,%rdi
344a(4): cmove %rax,%rdi
344e(3): test %rsi,%rsi
3451(6): mov $0xa,(%rdi)
3457(2): jz 0x10(%rip)
3459(3): test %rdx,%rdx
345c(2): jz 0xb(%rip)
345e(4): mov %rsi,0x28(%rdi)
3462(4): mov %rdx,0x30(%rdi)
3466(1): ret near (%rsp)
3467(4): sub $0x8,%rsp
346b(5): call 0xffffdd85(%rip)

"quotearg_buffer" :
3470(2): push %r15
3472(2): push %r14
3474(7): lea 0x203d85(%rip),%rax
347b(2): push %r13
347d(2): push %r12
347f(3): mov %rdi,%r13
3482(1): push %rbp
3483(1): push %rbx
3484(3): mov %r8,%rbx
3487(3): mov %rsi,%r14
348a(3): mov %rdx,%r15
348d(4): sub $0x18,%rsp
3491(3): test %r8,%r8
3494(4): cmove %rax,%rbx
3498(5): mov %rcx,0x8(%rsp)
349d(5): call 0xffffdd63(%rip)
34a2(3): mov (%rax),%r12d
34a5(3): mov %rax,%rbp
34a8(4): lea 0x8(%rbx),%rax
34ac(4): sub $0x8,%rsp
34b0(4): mov 0x4(%rbx),%r9d
34b4(3): push 0x30(%rbx)
34b7(3): mov (%rbx),%r8d
34ba(3): push 0x28(%rbx)
34bd(3): mov %r15,%rdx
34c0(1): push %rax
34c1(5): mov 0x28(%rsp),%rcx
34c6(3): mov %r14,%rsi
34c9(3): mov %r13,%rdi
34cc(5): call 0xffffeaa4(%rip)
34d1(4): mov %r12d,0x0(%rbp)
34d5(4): add $0x38,%rsp
34d9(1): pop %rbx
34da(1): pop %rbp
34db(2): pop %r12
34dd(2): pop %r13
34df(2): pop %r14
34e1(2): pop %r15
34e3(1): ret near (%rsp)

"quotearg_alloc_mem" :
34f0(2): push %r15
34f2(2): push %r14
34f4(7): lea 0x203d05(%rip),%rax
34fb(2): push %r13
34fd(2): push %r12
34ff(3): mov %rdx,%r12
3502(1): push %rbp
3503(1): push %rbx
3504(3): mov %rcx,%rbx
3507(3): mov %rdi,%r14
350a(3): mov %rsi,%r15
350d(4): sub $0x38,%rsp
3511(3): test %rcx,%rcx
3514(4): cmove %rax,%rbx
3518(2): xor %ebp,%ebp
351a(5): call 0xffffdce6(%rip)
351f(3): test %r12,%r12
3522(3): mov %rax,%r13
3525(2): mov (%rax),%eax
3527(4): setz %bpl
352b(3): or 0x4(%rbx),%ebp
352e(4): lea 0x8(%rbx),%r10
3532(4): sub $0x8,%rsp
3536(3): mov (%rbx),%r8d
3539(3): mov %r15,%rcx
353c(4): mov %eax,0x14(%rsp)
3540(3): push 0x30(%rbx)
3543(3): mov %r14,%rdx
3546(3): push 0x28(%rbx)
3549(2): push %r10
354b(2): xor %esi,%esi
354d(3): mov %ebp,%r9d
3550(2): xor %edi,%edi
3552(5): mov %r10,0x40(%rsp)
3557(5): call 0xffffea19(%rip)
355c(4): lea 0x1(%rax),%rsi
3560(5): mov %rax,0x48(%rsp)
3565(4): add $0x20,%rsp
3569(3): mov %rsi,%rdi
356c(5): mov %rsi,0x18(%rsp)
3571(5): call 0xbbf(%rip)
3576(5): mov %rax,0x10(%rsp)
357b(4): sub $0x8,%rsp
357f(3): push 0x30(%rbx)
3582(3): push 0x28(%rbx)
3585(5): mov 0x38(%rsp),%r10
358a(3): mov %ebp,%r9d
358d(3): mov (%rbx),%r8d
3590(3): mov %r15,%rcx
3593(3): mov %r14,%rdx
3596(3): mov %rax,%rdi
3599(2): push %r10
359b(5): mov 0x38(%rsp),%rsi
35a0(5): call 0xffffe9d0(%rip)
35a5(4): mov 0x2c(%rsp),%eax
35a9(4): add $0x20,%rsp
35ad(3): test %r12,%r12
35b0(4): mov %eax,0x0(%r13)
35b4(2): jz 0xb(%rip)
35b6(5): mov 0x28(%rsp),%r11
35bb(4): mov %r11,(%r12)
35bf(5): mov 0x10(%rsp),%rax
35c4(4): add $0x38,%rsp
35c8(1): pop %rbx
35c9(1): pop %rbp
35ca(2): pop %r12
35cc(2): pop %r13
35ce(2): pop %r14
35d0(2): pop %r15
35d2(1): ret near (%rsp)

"quotearg_alloc" :
35e0(3): mov %rdx,%rcx
35e3(2): xor %edx,%edx
35e5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
35f0(6): mov 0x203a62(%rip),%eax
35f6(2): push %r12
35f8(7): mov 0x203a61(%rip),%r12
35ff(1): push %rbp
3600(1): push %rbx
3601(3): cmp $0x1,%eax
3604(2): jle 0x2d(%rip)
3606(3): sub $0x2,%eax
3609(5): lea 0x18(%r12),%rbx
360e(4): shl/sal $0x4,%rax
3612(5): lea 0x28(%r12,%rax,1),%rbp
3617(9): nop 0x0(%rax,%rax,1)
3620(3): mov (%rbx),%rdi
3623(4): add $0x10,%rbx
3627(5): call 0xffffdbb9(%rip)
362c(3): cmp %rbp,%rbx
362f(2): jnz 0xfffffff1(%rip)
3631(5): mov 0x8(%r12),%rdi
3636(7): lea 0x203ac3(%rip),%rbx
363d(3): cmp %rbx,%rdi
3640(2): jz 0x19(%rip)
3642(5): call 0xffffdb9e(%rip)
3647(b): mov $0x100,0x203a1e(%rip)
3652(7): mov %rbx,0x203a1f(%rip)
3659(7): lea 0x203a10(%rip),%rbx
3660(3): cmp %rbx,%r12
3663(2): jz 0x11(%rip)
3665(3): mov %r12,%rdi
3668(5): call 0xffffdb78(%rip)
366d(7): mov %rbx,0x2039ec(%rip)
3674(1): pop %rbx
3675(a): mov $0x1,0x2039d9(%rip)
367f(1): pop %rbp
3680(2): pop %r12
3682(1): ret near (%rsp)

"quotearg_n" :
3690(7): lea 0x203b69(%rip),%rcx
3697(7): mov $0xffffffff,%rdx
369e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
36b0(7): lea 0x203b49(%rip),%rcx
36b7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
36c0(7): lea 0x203b39(%rip),%rcx
36c7(3): mov %rdi,%rsi
36ca(7): mov $0xffffffff,%rdx
36d1(2): xor %edi,%edi
36d3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
36e0(7): lea 0x203b19(%rip),%rcx
36e7(3): mov %rsi,%rdx
36ea(3): mov %rdi,%rsi
36ed(2): xor %edi,%edi
36ef(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3700(4): sub $0x48,%rsp
3704(3): mov %rdx,%rax
3707(9): mov $0x28,%rdx
3710(5): mov %rdx,0x38(%rsp)
3715(2): xor %edx,%edx
3717(3): cmp $0xa,%esi
371a(2): jz 0x6a(%rip)
371c(3): mov %esi,(%rsp)
371f(3): mov %rsp,%rcx
3722(7): mov $0xffffffff,%rdx
3729(3): mov %rax,%rsi
372c(9): mov $0x0,0x4(%rsp)
3735(9): mov $0x0,0xc(%rsp)
373e(9): mov $0x0,0x14(%rsp)
3747(9): mov $0x0,0x1c(%rsp)
3750(9): mov $0x0,0x24(%rsp)
3759(9): mov $0x0,0x2c(%rsp)
3762(8): mov $0x0,0x34(%rsp)
376a(5): call 0xfffffa46(%rip)
376f(5): mov 0x38(%rsp),%rcx
3774(9): xor $0x28,%rcx
377d(2): jnz 0xc(%rip)
377f(4): add $0x48,%rsp
3783(1): ret near (%rsp)
3784(5): call 0xffffda6c(%rip)
3789(5): call 0xffffdb17(%rip)

"quotearg_n_style_mem" :
3790(4): sub $0x48,%rsp
3794(3): mov %rdx,%rax
3797(3): mov %rcx,%rdx
379a(9): mov $0x28,%rcx
37a3(5): mov %rcx,0x38(%rsp)
37a8(2): xor %ecx,%ecx
37aa(3): cmp $0xa,%esi
37ad(2): jz 0x63(%rip)
37af(3): mov %esi,(%rsp)
37b2(3): mov %rsp,%rcx
37b5(3): mov %rax,%rsi
37b8(9): mov $0x0,0x4(%rsp)
37c1(9): mov $0x0,0xc(%rsp)
37ca(9): mov $0x0,0x14(%rsp)
37d3(9): mov $0x0,0x1c(%rsp)
37dc(9): mov $0x0,0x24(%rsp)
37e5(9): mov $0x0,0x2c(%rsp)
37ee(8): mov $0x0,0x34(%rsp)
37f6(5): call 0xfffff9ba(%rip)
37fb(5): mov 0x38(%rsp),%rdx
3800(9): xor $0x28,%rdx
3809(2): jnz 0xc(%rip)
380b(4): add $0x48,%rsp
380f(1): ret near (%rsp)
3810(5): call 0xffffd9e0(%rip)
3815(5): call 0xffffda8b(%rip)

"quotearg_style" :
3820(3): mov %rsi,%rdx
3823(2): mov %edi,%esi
3825(2): xor %edi,%edi
3827(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3830(3): mov %rdx,%rcx
3833(3): mov %rsi,%rdx
3836(2): mov %edi,%esi
3838(2): xor %edi,%edi
383a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3840(4): sub $0x48,%rsp
3844(2): mov %edx,%ecx
3846(9): mov $0x28,%rax
384f(5): mov %rax,0x38(%rsp)
3854(2): xor %eax,%eax
3856(7): mov 0x2039d3(%rip),%rax
385d(3): mov %rsp,%r8
3860(3): and $0x1f,%ecx
3863(8): movdqa 0x203995(%rip),%xmm0
386b(5): mov %rax,0x30(%rsp)
3870(2): mov %edx,%eax
3872(4): movaps %xmm0,(%rsp)
3876(3): shr $0x5,%al
3879(3): movzx %al,%eax
387c(5): lea 0x8(%r8,%rax,4),%r9
3881(8): movdqa 0x203987(%rip),%xmm0
3889(5): movaps %xmm0,0x10(%rsp)
388e(8): movdqa 0x20398a(%rip),%xmm0
3896(5): movaps %xmm0,0x20(%rsp)
389b(3): mov (%r9),%edx
389e(2): mov %edx,%eax
38a0(2): shr %cl,%eax
38a2(2): not %eax
38a4(3): and $0x1,%eax
38a7(2): shl/sal %cl,%eax
38a9(3): mov %r8,%rcx
38ac(2): xor %edx,%eax
38ae(3): mov %rsi,%rdx
38b1(3): mov %rdi,%rsi
38b4(3): mov %eax,(%r9)
38b7(2): xor %edi,%edi
38b9(5): call 0xfffff8f7(%rip)
38be(5): mov 0x38(%rsp),%rsi
38c3(9): xor $0x28,%rsi
38cc(2): jnz 0x7(%rip)
38ce(4): add $0x48,%rsp
38d2(1): ret near (%rsp)
38d3(5): call 0xffffd9cd(%rip)

"quotearg_char" :
38e0(4): movsx %sil,%edx
38e4(7): mov $0xffffffff,%rsi
38eb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
38f0(5): mov $0x3a,%edx
38f5(7): mov $0xffffffff,%rsi
38fc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3910(5): mov $0x3a,%edx
3915(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3920(4): sub $0x48,%rsp
3924(3): mov %rdx,%rax
3927(9): mov $0x28,%rdx
3930(5): mov %rdx,0x38(%rsp)
3935(2): xor %edx,%edx
3937(3): cmp $0xa,%esi
393a(2): jz 0x6a(%rip)
393c(3): mov %esi,(%rsp)
393f(3): mov %rsp,%rcx
3942(7): mov $0xffffffff,%rdx
3949(3): mov %rax,%rsi
394c(9): mov $0x0,0x4(%rsp)
3955(9): mov $0x4000000,0xc(%rsp)
395e(9): mov $0x0,0x14(%rsp)
3967(9): mov $0x0,0x1c(%rsp)
3970(9): mov $0x0,0x24(%rsp)
3979(9): mov $0x0,0x2c(%rsp)
3982(8): mov $0x0,0x34(%rsp)
398a(5): call 0xfffff826(%rip)
398f(5): mov 0x38(%rsp),%rcx
3994(9): xor $0x28,%rcx
399d(2): jnz 0xc(%rip)
399f(4): add $0x48,%rsp
39a3(1): ret near (%rsp)
39a4(5): call 0xffffd84c(%rip)
39a9(5): call 0xffffd8f7(%rip)

"quotearg_n_custom_mem" :
39b0(4): sub $0x48,%rsp
39b4(3): mov %rcx,%r9
39b7(7): mov 0x203872(%rip),%rcx
39be(8): movdqa 0x20383a(%rip),%xmm0
39c6(9): mov $0x28,%rax
39cf(5): mov %rax,0x38(%rsp)
39d4(2): xor %eax,%eax
39d6(4): movaps %xmm0,(%rsp)
39da(3): test %rsi,%rsi
39dd(5): mov %rcx,0x30(%rsp)
39e2(7): mov $0xa,(%rsp)
39e9(8): movdqa 0x20381f(%rip),%xmm0
39f1(5): movaps %xmm0,0x10(%rsp)
39f6(8): movdqa 0x203822(%rip),%xmm0
39fe(5): movaps %xmm0,0x20(%rsp)
3a03(2): jz 0x34(%rip)
3a05(3): test %rdx,%rdx
3a08(2): jz 0x2f(%rip)
3a0a(5): mov %rsi,0x28(%rsp)
3a0f(5): mov %rdx,0x30(%rsp)
3a14(3): mov %rsp,%rcx
3a17(3): mov %r8,%rdx
3a1a(3): mov %r9,%rsi
3a1d(5): call 0xfffff793(%rip)
3a22(5): mov 0x38(%rsp),%rdi
3a27(9): xor $0x28,%rdi
3a30(2): jnz 0xc(%rip)
3a32(4): add $0x48,%rsp
3a36(1): ret near (%rsp)
3a37(5): call 0xffffd7b9(%rip)
3a3c(5): call 0xffffd864(%rip)

"quotearg_n_custom" :
3a50(7): mov $0xffffffff,%r8
3a57(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3a60(3): mov %rdx,%rcx
3a63(7): mov $0xffffffff,%r8
3a6a(3): mov %rsi,%rdx
3a6d(3): mov %rdi,%rsi
3a70(2): xor %edi,%edi
3a72(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3a80(3): mov %rcx,%r8
3a83(3): mov %rdx,%rcx
3a86(3): mov %rsi,%rdx
3a89(3): mov %rdi,%rsi
3a8c(2): xor %edi,%edi
3a8e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3aa0(7): lea 0x203579(%rip),%rcx
3aa7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3ab0(7): lea 0x203569(%rip),%rcx
3ab7(3): mov %rsi,%rdx
3aba(3): mov %rdi,%rsi
3abd(2): xor %edi,%edi
3abf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3ad0(7): lea 0x203549(%rip),%rcx
3ad7(7): mov $0xffffffff,%rdx
3ade(5): jmp 0xfffff6d2(%rip)

"quote" :
3af0(7): lea 0x203529(%rip),%rcx
3af7(3): mov %rdi,%rsi
3afa(7): mov $0xffffffff,%rdx
3b01(2): xor %edi,%edi
3b03(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3b10(2): push %r15
3b12(2): push %r14
3b14(2): push %r13
3b16(2): push %r12
3b18(3): mov %r9,%r12
3b1b(1): push %rbp
3b1c(1): push %rbx
3b1d(3): mov %rdi,%rbp
3b20(3): mov %r8,%rbx
3b23(4): sub $0x28,%rsp
3b27(3): test %rsi,%rsi
3b2a(6): jz 0x11e(%rip)
3b30(3): mov %rdx,%r8
3b33(7): lea 0x142e(%rip),%rdx
3b3a(3): mov %rcx,%r9
3b3d(2): xor %eax,%eax
3b3f(3): mov %rsi,%rcx
3b42(5): mov $0x1,%esi
3b47(5): call 0xffffd8d9(%rip)
3b4c(7): lea 0x1428(%rip),%rsi
3b53(2): xor %edi,%edi
3b55(5): mov $0x5,%edx
3b5a(5): call 0xffffd716(%rip)
3b5f(7): lea 0x173a(%rip),%rdx
3b66(3): mov %rax,%rcx
3b69(6): mov $0x7e3,%r8d
3b6f(5): mov $0x1,%esi
3b74(3): mov %rbp,%rdi
3b77(2): xor %eax,%eax
3b79(5): call 0xffffd8a7(%rip)
3b7e(7): lea 0x1483(%rip),%rsi
3b85(2): xor %edi,%edi
3b87(5): mov $0x5,%edx
3b8c(5): call 0xffffd6e4(%rip)
3b91(3): mov %rbp,%rsi
3b94(3): mov %rax,%rdi
3b97(5): call 0xffffd779(%rip)
3b9c(4): cmp $0x9,%r12
3ba0(6): jnbe 0x340(%rip)
3ba6(7): lea 0x16bb(%rip),%rdx
3bad(4): movsxd 0x0(%rdx,%r12,4),%rax
3bb1(3): add %rdx,%rax
3bb4(2): jmp %rax
3bb6(a): nop 0x0(%rax,%rax,1)
3bc0(4): mov 0x38(%rbx),%r9
3bc4(4): mov 0x10(%rbx),%rax
3bc8(7): lea 0x15a9(%rip),%rsi
3bcf(4): mov 0x8(%rbx),%r8
3bd3(5): mov $0x5,%edx
3bd8(2): xor %edi,%edi
3bda(4): mov 0x30(%rbx),%r13
3bde(4): mov 0x28(%rbx),%r12
3be2(5): mov %r9,0x10(%rsp)
3be7(4): mov 0x20(%rbx),%r15
3beb(4): mov 0x18(%rbx),%r14
3bef(4): mov %rax,(%rsp)
3bf3(5): mov %r8,0x8(%rsp)
3bf8(3): mov (%rbx),%rbx
3bfb(5): call 0xffffd675(%rip)
3c00(4): sub $0x8,%rsp
3c04(5): mov 0x18(%rsp),%r9
3c09(3): mov %rax,%rdx
3c0c(3): mov %rbx,%rcx
3c0f(5): mov $0x1,%esi
3c14(3): mov %rbp,%rdi
3c17(2): xor %eax,%eax
3c19(2): push %r9
3c1b(2): push %r13
3c1d(2): push %r12
3c1f(2): push %r15
3c21(2): push %r14
3c23(5): mov 0x30(%rsp),%r9
3c28(5): mov 0x38(%rsp),%r8
3c2d(5): call 0xffffd7f3(%rip)
3c32(4): add $0x30,%rsp
3c36(4): add $0x28,%rsp
3c3a(1): pop %rbx
3c3b(1): pop %rbp
3c3c(2): pop %r12
3c3e(2): pop %r13
3c40(2): pop %r14
3c42(2): pop %r15
3c44(1): ret near (%rsp)
3c45(3): nop (%rax)
3c48(3): mov %rcx,%r8
3c4b(3): mov %rdx,%rcx
3c4e(7): lea 0x131f(%rip),%rdx
3c55(5): mov $0x1,%esi
3c5a(2): xor %eax,%eax
3c5c(5): call 0xffffd7c4(%rip)
3c61(5): jmp 0xfffffeeb(%rip)
3c66(a): nop 0x0(%rax,%rax,1)
3c70(4): mov 0x40(%rbx),%r10
3c74(4): mov 0x38(%rbx),%r9
3c78(7): lea 0x1529(%rip),%rsi
3c7f(4): mov 0x10(%rbx),%rax
3c83(4): mov 0x8(%rbx),%r8
3c87(5): mov $0x5,%edx
3c8c(4): mov 0x30(%rbx),%r13
3c90(4): mov 0x28(%rbx),%r12
3c94(4): mov 0x20(%rbx),%r15
3c98(4): mov 0x18(%rbx),%r14
3c9c(3): mov (%rbx),%rbx
3c9f(5): mov %r10,0x18(%rsp)
3ca4(5): mov %r9,0x10(%rsp)
3ca9(4): mov %rax,(%rsp)
3cad(5): mov %r8,0x8(%rsp)
3cb2(2): xor %edi,%edi
3cb4(5): call 0xffffd5bc(%rip)
3cb9(5): mov 0x18(%rsp),%r10
3cbe(2): push %r10
3cc0(5): jmp 0xffffff44(%rip)
3cc5(3): nop (%rax)
3cc8(3): mov (%rbx),%rbx
3ccb(7): lea 0x12ad(%rip),%rsi
3cd2(5): mov $0x5,%edx
3cd7(2): xor %edi,%edi
3cd9(5): call 0xffffd597(%rip)
3cde(4): add $0x28,%rsp
3ce2(3): mov %rbx,%rcx
3ce5(3): mov %rbp,%rdi
3ce8(1): pop %rbx
3ce9(1): pop %rbp
3cea(2): pop %r12
3cec(2): pop %r13
3cee(2): pop %r14
3cf0(2): pop %r15
3cf2(3): mov %rax,%rdx
3cf5(5): mov $0x1,%esi
3cfa(2): xor %eax,%eax
3cfc(5): jmp 0xffffd724(%rip)
3d01(7): nop 0x0(%rax)
3d08(4): mov 0x8(%rbx),%r12
3d0c(7): lea 0x127c(%rip),%rsi
3d13(3): mov (%rbx),%rbx
3d16(5): mov $0x5,%edx
3d1b(2): xor %edi,%edi
3d1d(5): call 0xffffd553(%rip)
3d22(4): add $0x28,%rsp
3d26(3): mov %r12,%r8
3d29(3): mov %rbx,%rcx
3d2c(3): mov %rbp,%rdi
3d2f(3): mov %rax,%rdx
3d32(5): mov $0x1,%esi
3d37(1): pop %rbx
3d38(1): pop %rbp
3d39(2): pop %r12
3d3b(2): pop %r13
3d3d(2): pop %r14
3d3f(2): pop %r15
3d41(2): xor %eax,%eax
3d43(5): jmp 0xffffd6dd(%rip)
3d48(8): nop 0x0(%rax,%rax,1)
3d50(4): mov 0x10(%rbx),%r13
3d54(4): mov 0x8(%rbx),%r12
3d58(7): lea 0x1247(%rip),%rsi
3d5f(3): mov (%rbx),%rbx
3d62(5): mov $0x5,%edx
3d67(2): xor %edi,%edi
3d69(5): call 0xffffd507(%rip)
3d6e(4): add $0x28,%rsp
3d72(3): mov %r13,%r9
3d75(3): mov %r12,%r8
3d78(3): mov %rbx,%rcx
3d7b(3): mov %rbp,%rdi
3d7e(3): mov %rax,%rdx
3d81(1): pop %rbx
3d82(1): pop %rbp
3d83(2): pop %r12
3d85(2): pop %r13
3d87(2): pop %r14
3d89(2): pop %r15
3d8b(5): mov $0x1,%esi
3d90(2): xor %eax,%eax
3d92(5): jmp 0xffffd68e(%rip)
3d97(9): nop 0x0(%rax,%rax,1)
3da0(7): lea 0x1331(%rip),%rsi
3da7(5): mov $0x5,%edx
3dac(2): xor %edi,%edi
3dae(4): mov 0x18(%rbx),%r14
3db2(4): mov 0x10(%rbx),%r13
3db6(4): mov 0x8(%rbx),%r12
3dba(3): mov (%rbx),%rbx
3dbd(5): call 0xffffd4b3(%rip)
3dc2(4): sub $0x8,%rsp
3dc6(2): push %r14
3dc8(3): mov %rax,%rdx
3dcb(3): mov %r13,%r9
3dce(3): mov %r12,%r8
3dd1(3): mov %rbx,%rcx
3dd4(3): mov %rbp,%rdi
3dd7(5): mov $0x1,%esi
3ddc(2): xor %eax,%eax
3dde(5): call 0xffffd642(%rip)
3de3(1): pop %rax
3de4(1): pop %rdx
3de5(4): add $0x28,%rsp
3de9(1): pop %rbx
3dea(1): pop %rbp
3deb(2): pop %r12
3ded(2): pop %r13
3def(2): pop %r14
3df1(2): pop %r15
3df3(1): ret near (%rsp)
3df4(4): nop 0x0(%rax)
3df8(4): mov 0x20(%rbx),%r15
3dfc(7): lea 0x12f5(%rip),%rsi
3e03(5): mov $0x5,%edx
3e08(2): xor %edi,%edi
3e0a(4): mov 0x18(%rbx),%r14
3e0e(4): mov 0x10(%rbx),%r13
3e12(4): mov 0x8(%rbx),%r12
3e16(3): mov (%rbx),%rbx
3e19(5): call 0xffffd457(%rip)
3e1e(2): push %r15
3e20(2): jmp 0xffffffa6(%rip)
3e22(6): nop 0x0(%rax,%rax,1)
3e28(4): mov 0x8(%rbx),%r8
3e2c(4): mov 0x28(%rbx),%r12
3e30(7): lea 0x12e9(%rip),%rsi
3e37(4): mov 0x20(%rbx),%r15
3e3b(4): mov 0x18(%rbx),%r14
3e3f(5): mov $0x5,%edx
3e44(4): mov 0x10(%rbx),%r13
3e48(2): xor %edi,%edi
3e4a(3): mov (%rbx),%rbx
3e4d(4): mov %r8,(%rsp)
3e51(5): call 0xffffd41f(%rip)
3e56(4): sub $0x8,%rsp
3e5a(3): mov %r13,%r9
3e5d(2): push %r12
3e5f(2): push %r15
3e61(2): push %r14
3e63(5): mov 0x20(%rsp),%r8
3e68(3): mov %rbx,%rcx
3e6b(3): mov %rax,%rdx
3e6e(3): mov %rbp,%rdi
3e71(5): mov $0x1,%esi
3e76(2): xor %eax,%eax
3e78(5): call 0xffffd5a8(%rip)
3e7d(4): add $0x20,%rsp
3e81(4): add $0x28,%rsp
3e85(1): pop %rbx
3e86(1): pop %rbp
3e87(2): pop %r12
3e89(2): pop %r13
3e8b(2): pop %r14
3e8d(2): pop %r15
3e8f(1): ret near (%rsp)
3e90(4): mov 0x10(%rbx),%r9
3e94(4): mov 0x30(%rbx),%r13
3e98(7): lea 0x12a9(%rip),%rsi
3e9f(4): mov 0x28(%rbx),%r12
3ea3(4): mov 0x20(%rbx),%r15
3ea7(5): mov $0x5,%edx
3eac(4): mov 0x18(%rbx),%r14
3eb0(4): mov 0x8(%rbx),%r8
3eb4(2): xor %edi,%edi
3eb6(5): mov %r9,0x8(%rsp)
3ebb(3): mov (%rbx),%rbx
3ebe(4): mov %r8,(%rsp)
3ec2(5): call 0xffffd3ae(%rip)
3ec7(2): push %r13
3ec9(2): push %r12
3ecb(2): push %r15
3ecd(2): push %r14
3ecf(5): mov 0x28(%rsp),%r9
3ed4(2): jmp 0xffffff8f(%rip)
3ed6(a): nop 0x0(%rax,%rax,1)
3ee0(4): mov 0x40(%rbx),%r10
3ee4(4): mov 0x38(%rbx),%r9
3ee8(5): mov $0x5,%edx
3eed(4): mov 0x10(%rbx),%rax
3ef1(4): mov 0x8(%rbx),%r8
3ef5(7): lea 0x12e4(%rip),%rsi
3efc(4): mov 0x30(%rbx),%r13
3f00(4): mov 0x28(%rbx),%r12
3f04(4): mov 0x20(%rbx),%r15
3f08(4): mov 0x18(%rbx),%r14
3f0c(5): mov %r10,0x18(%rsp)
3f11(5): mov %r9,0x10(%rsp)
3f16(4): mov %rax,(%rsp)
3f1a(5): mov %r8,0x8(%rsp)
3f1f(3): mov (%rbx),%rbx
3f22(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3f30(3): xor %r9d,%r9d
3f33(4): cmp $0x0,(%r8)
3f37(2): jz 0x14(%rip)
3f39(7): nop 0x0(%rax)
3f40(4): add $0x1,%r9
3f44(5): cmp $0x0,0x0(%r8,%r9,8)
3f49(2): jnz 0xfffffff7(%rip)
3f4b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3f50(4): sub $0x68,%rsp
3f54(3): mov %r8,%r10
3f57(3): xor %r9d,%r9d
3f5a(9): mov $0x28,%rax
3f63(5): mov %rax,0x58(%rsp)
3f68(2): xor %eax,%eax
3f6a(3): mov %rsp,%r8
3f6d(3): nop (%rax)
3f70(3): mov (%r10),%eax
3f73(3): cmp $0x2f,%eax
3f76(2): jnbe 0x44(%rip)
3f78(3): mov %eax,%r11d
3f7b(4): add 0x10(%r10),%r11
3f7f(3): add $0x8,%eax
3f82(3): mov %eax,(%r10)
3f85(3): mov (%r11),%rax
3f88(3): test %rax,%rax
3f8b(4): mov %rax,0x0(%r8,%r9,8)
3f8f(2): jz 0xc(%rip)
3f91(4): add $0x1,%r9
3f95(4): cmp $0xa,%r9
3f99(2): jnz 0xffffffd7(%rip)
3f9b(5): call 0xfffffb75(%rip)
3fa0(5): mov 0x58(%rsp),%rax
3fa5(9): xor $0x28,%rax
3fae(2): jnz 0x7(%rip)
3fb0(4): add $0x68,%rsp
3fb4(1): ret near (%rsp)
3fb5(5): call 0xffffd2eb(%rip)
3fba(4): mov 0x8(%r10),%r11
3fbe(4): lea 0x8(%r11),%rax
3fc2(4): mov %rax,0x8(%r10)
3fc6(2): jmp 0xffffffbf(%rip)

"version_etc" :
3fd0(1): push %rbp
3fd1(1): push %rbx
3fd2(6): mov $0x20,%r10d
3fd8(3): xor %r11d,%r11d
3fdb(7): sub $0xb8,%rsp
3fe2(9): mov $0x28,%rax
3feb(5): mov %rax,0x78(%rsp)
3ff0(2): xor %eax,%eax
3ff2(8): lea 0xd0(%rsp),%rax
3ffa(8): mov %r8,0xa0(%rsp)
4002(8): lea 0xd0(%rsp),%rbx
400a(5): lea 0x20(%rsp),%r8
400f(8): mov %r9,0xa8(%rsp)
4017(8): mov $0x20,0x8(%rsp)
401f(5): mov %rax,0x10(%rsp)
4024(8): lea 0x80(%rsp),%rax
402c(3): xor %r9d,%r9d
402f(5): mov %rax,0x18(%rsp)
4034(3): mov %rax,%rbp
4037(9): nop 0x0(%rax,%rax,1)
4040(4): cmp $0x2f,%r10d
4044(2): jnbe 0x58(%rip)
4046(3): mov %r10d,%eax
4049(6): mov $0x1,%r11d
404f(4): add $0x8,%r10d
4053(3): add %rbp,%rax
4056(3): mov (%rax),%rax
4059(3): test %rax,%rax
405c(4): mov %rax,0x0(%r8,%r9,8)
4060(2): jz 0xc(%rip)
4062(4): add $0x1,%r9
4066(4): cmp $0xa,%r9
406a(2): jnz 0xffffffd6(%rip)
406c(3): test %r11b,%r11b
406f(2): jnz 0x26(%rip)
4071(5): call 0xfffffa9f(%rip)
4076(5): mov 0x78(%rsp),%rax
407b(9): xor $0x28,%rax
4084(2): jnz 0xc(%rip)
4086(7): add $0xb8,%rsp
408d(1): pop %rbx
408e(1): pop %rbp
408f(1): ret near (%rsp)
4090(5): call 0xffffd210(%rip)
4095(5): mov %r10d,0x8(%rsp)
409a(2): jmp 0xffffffd7(%rip)
409c(3): mov %rbx,%rax
409f(4): add $0x8,%rbx
40a3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
40b0(1): push %rbx
40b1(7): lea 0xf0a(%rip),%rsi
40b8(5): mov $0x5,%edx
40bd(2): xor %edi,%edi
40bf(5): call 0xffffd1b1(%rip)
40c4(7): lea 0xf0c(%rip),%rdx
40cb(3): mov %rax,%rsi
40ce(5): mov $0x1,%edi
40d3(2): xor %eax,%eax
40d5(5): call 0xffffd2db(%rip)
40da(7): lea 0xf0c(%rip),%rsi
40e1(5): mov $0x5,%edx
40e6(2): xor %edi,%edi
40e8(5): call 0xffffd188(%rip)
40ed(7): lea 0x87c(%rip),%rcx
40f4(7): lea 0x6c4(%rip),%rdx
40fb(3): mov %rax,%rsi
40fe(5): mov $0x1,%edi
4103(2): xor %eax,%eax
4105(5): call 0xffffd2ab(%rip)
410a(7): mov 0x202f77(%rip),%rbx
4111(7): lea 0x1108(%rip),%rsi
4118(2): xor %edi,%edi
411a(5): mov $0x5,%edx
411f(5): call 0xffffd151(%rip)
4124(3): mov %rbx,%rsi
4127(3): mov %rax,%rdi
412a(1): pop %rbx
412b(5): jmp 0xffffd1e5(%rip)

"xmalloc" :
4130(1): push %rbx
4131(3): mov %rdi,%rbx
4134(5): call 0xffffd21c(%rip)
4139(3): test %rax,%rax
413c(2): jnz 0x7(%rip)
413e(3): test %rbx,%rbx
4141(2): jnz 0x4(%rip)
4143(1): pop %rbx
4144(1): ret near (%rsp)
4145(5): call 0x23b(%rip)

"xnmalloc" :
4150(3): mov %rdi,%rax
4153(3): mul %rax,%rsi,%rdx
4156(3): mov %rax,%rdi
4159(3): seto %al
415c(3): test %rdi,%rdi
415f(2): js 0xc(%rip)
4161(3): movzx %al,%eax
4164(3): test %rax,%rax
4167(2): jnz 0x4(%rip)
4169(2): jmp 0xffffffc7(%rip)
416b(4): sub $0x8,%rsp
416f(5): call 0x211(%rip)

"xrealloc" :
4190(3): test %rsi,%rsi
4193(1): push %rbx
4194(3): mov %rsi,%rbx
4197(2): jnz 0x7(%rip)
4199(3): test %rdi,%rdi
419c(2): jnz 0x1c(%rip)
419e(3): mov %rbx,%rsi
41a1(5): call 0xffffd1ef(%rip)
41a6(3): test %rax,%rax
41a9(2): jnz 0x7(%rip)
41ab(3): test %rbx,%rbx
41ae(2): jnz 0x13(%rip)
41b0(1): pop %rbx
41b1(1): ret near (%rsp)
41b2(6): nop 0x0(%rax,%rax,1)
41b8(5): call 0xffffd028(%rip)
41bd(2): xor %eax,%eax
41bf(1): pop %rbx
41c0(1): ret near (%rsp)
41c1(5): call 0x1bf(%rip)

"xnrealloc" :
41d0(3): mov %rsi,%rax
41d3(3): mul %rax,%rdx,%rdx
41d6(3): mov %rax,%rsi
41d9(3): seto %al
41dc(3): test %rsi,%rsi
41df(2): js 0xc(%rip)
41e1(3): movzx %al,%eax
41e4(3): test %rax,%rax
41e7(2): jnz 0x4(%rip)
41e9(2): jmp 0xffffffa7(%rip)
41eb(4): sub $0x8,%rsp
41ef(5): call 0x191(%rip)

"x2nrealloc" :
4200(3): test %rdi,%rdi
4203(3): mov %rdx,%r9
4206(3): mov (%rsi),%rcx
4209(2): jz 0x37(%rip)
420b(2): xor %edx,%edx
420d(a): mov $0x6148914691236517204,%rax
4217(3): div %r9,%rax
421a(3): cmp %rcx,%rax
421d(2): jbe 0x3e(%rip)
421f(3): mov %rcx,%rax
4222(3): shr $0x1,%rax
4225(5): lea 0x1(%rax,%rcx,1),%rcx
422a(3): mov %rcx,(%rsi)
422d(4): imul %r9,%rcx
4231(3): mov %rcx,%rsi
4234(5): jmp 0xffffff5c(%rip)
4239(7): nop 0x0(%rax)
4240(3): test %rcx,%rcx
4243(2): jz 0x25(%rip)
4245(3): mov %rcx,%rax
4248(3): mul %rax,%r9,%rdx
424b(3): seto %dl
424e(3): test %rax,%rax
4251(3): movzx %dl,%edx
4254(2): js 0x7(%rip)
4256(3): test %rdx,%rdx
4259(2): jz 0xffffffd1(%rip)
425b(4): sub $0x8,%rsp
425f(5): call 0x121(%rip)
4264(4): nop 0x0(%rax)
4268(2): xor %edx,%edx
426a(5): mov $0x80,%eax
426f(3): xor %r8d,%r8d
4272(3): div %r9,%rax
4275(3): test %rax,%rax
4278(4): setz %r8b
427c(4): lea 0x0(%r8,%rax,1),%rcx
4280(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4290(3): test %rdi,%rdi
4293(3): mov (%rsi),%rax
4296(2): jz 0x2a(%rip)
4298(a): mov $0x6148914691236517203,%rdx
42a2(3): cmp %rdx,%rax
42a5(2): jnbe 0x2c(%rip)
42a7(3): mov %rax,%rdx
42aa(3): shr $0x1,%rdx
42ad(5): lea 0x1(%rdx,%rax,1),%rax
42b2(3): mov %rax,(%rsi)
42b5(3): mov %rax,%rsi
42b8(5): jmp 0xfffffed8(%rip)
42bd(3): nop (%rax)
42c0(3): test %rax,%rax
42c3(5): mov $0x80,%edx
42c8(4): cmove %rdx,%rax
42cc(3): test %rax,%rax
42cf(2): jns 0xffffffe3(%rip)
42d1(4): sub $0x8,%rsp
42d5(5): call 0xab(%rip)

"xzalloc" :
42e0(1): push %rbx
42e1(3): mov %rdi,%rbx
42e4(5): call 0xfffffe4c(%rip)
42e9(3): mov %rbx,%rdx
42ec(2): xor %esi,%esi
42ee(3): mov %rax,%rdi
42f1(1): pop %rbx
42f2(5): jmp 0xffffcffe(%rip)

"xcalloc" :
4300(3): mov %rdi,%rax
4303(4): sub $0x8,%rsp
4307(3): mul %rax,%rsi,%rdx
430a(3): seto %dl
430d(3): test %rax,%rax
4310(2): js 0x19(%rip)
4312(3): movzx %dl,%edx
4315(3): test %rdx,%rdx
4318(2): jnz 0x11(%rip)
431a(5): call 0xffffd006(%rip)
431f(3): test %rax,%rax
4322(2): jz 0x7(%rip)
4324(4): add $0x8,%rsp
4328(1): ret near (%rsp)
4329(5): call 0x57(%rip)

"xmemdup" :
4330(1): push %rbp
4331(1): push %rbx
4332(3): mov %rdi,%rbp
4335(3): mov %rsi,%rdi
4338(3): mov %rsi,%rbx
433b(4): sub $0x8,%rsp
433f(5): call 0xfffffdf1(%rip)
4344(4): add $0x8,%rsp
4348(3): mov %rbx,%rdx
434b(3): mov %rbp,%rsi
434e(1): pop %rbx
434f(1): pop %rbp
4350(3): mov %rax,%rdi
4353(5): jmp 0xffffcfdd(%rip)

"xstrdup" :
4360(1): push %rbx
4361(3): mov %rdi,%rbx
4364(5): call 0xffffcf2c(%rip)
4369(3): mov %rbx,%rdi
436c(4): lea 0x1(%rax),%rsi
4370(1): pop %rbx
4371(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4380(7): lea 0xf48(%rip),%rsi
4387(4): sub $0x8,%rsp
438b(5): mov $0x5,%edx
4390(2): xor %edi,%edi
4392(5): call 0xffffcede(%rip)
4397(6): mov 0x202c7b(%rip),%edi
439d(7): lea 0x684(%rip),%rdx
43a4(3): mov %rax,%rcx
43a7(2): xor %esi,%esi
43a9(2): xor %eax,%eax
43ab(5): call 0xffffd015(%rip)
43b0(5): call 0xffffce40(%rip)

"rpl_mbrtowc" :
43c0(2): push %r13
43c2(2): push %r12
43c4(3): mov %rsi,%r13
43c7(1): push %rbp
43c8(1): push %rbx
43c9(3): mov %rdi,%rbx
43cc(3): mov %rdx,%r12
43cf(4): sub $0x18,%rsp
43d3(9): mov $0x28,%rax
43dc(5): mov %rax,0x8(%rsp)
43e1(2): xor %eax,%eax
43e3(5): lea 0x4(%rsp),%rax
43e8(3): test %rdi,%rdi
43eb(4): cmove %rax,%rbx
43ef(3): mov %rbx,%rdi
43f2(5): call 0xffffcece(%rip)
43f7(4): cmp $0xfffffffd,%rax
43fb(3): mov %rax,%rbp
43fe(2): jbe 0x22(%rip)
4400(3): test %r12,%r12
4403(2): jz 0x1d(%rip)
4405(2): xor %edi,%edi
4407(5): call 0xc9(%rip)
440c(2): test %al,%al
440e(2): jnz 0x12(%rip)
4410(5): movzx 0x0(%r13),%eax
4415(5): mov $0x1,%ebp
441a(2): mov %eax,(%rbx)
441c(4): nop 0x0(%rax)
4420(5): mov 0x8(%rsp),%rdx
4425(9): xor $0x28,%rdx
442e(3): mov %rbp,%rax
4431(2): jnz 0xd(%rip)
4433(4): add $0x18,%rsp
4437(1): pop %rbx
4438(1): pop %rbp
4439(2): pop %r12
443b(2): pop %r13
443d(1): ret near (%rsp)
443e(5): call 0xffffce62(%rip)

"close_stream" :
4450(2): push %r12
4452(1): push %rbp
4453(3): mov %rdi,%rbp
4456(1): push %rbx
4457(5): call 0xffffcdd9(%rip)
445c(3): mov 0x0(%rbp),%ebx
445f(3): mov %rbp,%rdi
4462(3): mov %rax,%r12
4465(5): call 0x10b(%rip)
446a(3): and $0x20,%ebx
446d(2): test %ebx,%ebx
446f(2): jnz 0x19(%rip)
4471(2): test %eax,%eax
4473(2): jz 0xc(%rip)
4475(3): test %r12,%r12
4478(5): mov $0xffffffff,%eax
447d(2): jz 0x3b(%rip)
447f(1): pop %rbx
4480(1): pop %rbp
4481(2): pop %r12
4483(1): ret near (%rsp)
4484(4): nop 0x0(%rax)
4488(2): test %eax,%eax
448a(2): jnz 0x1e(%rip)
448c(5): call 0xffffcd74(%rip)
4491(6): mov $0x0,(%rax)
4497(5): mov $0xffffffff,%eax
449c(1): pop %rbx
449d(1): pop %rbp
449e(2): pop %r12
44a0(1): ret near (%rsp)
44a1(7): nop 0x0(%rax)
44a8(1): pop %rbx
44a9(5): mov $0xffffffff,%eax
44ae(1): pop %rbp
44af(2): pop %r12
44b1(1): ret near (%rsp)
44b2(6): nop 0x0(%rax,%rax,1)
44b8(5): call 0xffffcd48(%rip)
44bd(3): cmp $0x9,(%rax)
44c0(1): pop %rbx
44c1(1): pop %rbp
44c2(2): pop %r12
44c4(3): setnz %al
44c7(3): movzx %al,%eax
44ca(2): neg %eax
44cc(1): ret near (%rsp)

"hard_locale" :
44d0(4): sub $0x8,%rsp
44d4(2): xor %esi,%esi
44d6(5): call 0xffffceca(%rip)
44db(3): mov %rax,%rdx
44de(5): mov $0x1,%eax
44e3(3): test %rdx,%rdx
44e6(2): jz 0x1f(%rip)
44e8(7): lea 0xdf1(%rip),%rdi
44ef(5): mov $0x2,%ecx
44f4(3): mov %rdx,%rsi
44f7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
44f9(3): setnbe %cl
44fc(3): sbb $0x0,%cl
44ff(2): xor %eax,%eax
4501(2): test %cl,%cl
4503(2): jnz 0xd(%rip)
4505(4): add $0x8,%rsp
4509(1): ret near (%rsp)
450a(6): nop 0x0(%rax,%rax,1)
4510(7): lea 0xdcb(%rip),%rdi
4517(5): mov $0x6,%ecx
451c(3): mov %rdx,%rsi
451f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4521(3): setnbe %al
4524(2): sbb $0x0,%al
4526(2): test %al,%al
4528(3): setnz %al
452b(4): add $0x8,%rsp
452f(1): ret near (%rsp)

"locale_charset" :
4530(4): sub $0x8,%rsp
4534(5): mov $0xe,%edi
4539(5): call 0xffffce37(%rip)
453e(3): test %rax,%rax
4541(2): jz 0x1f(%rip)
4543(3): cmp $0x0,(%rax)
4546(7): lea 0xd9b(%rip),%rdx
454d(4): cmove %rdx,%rax
4551(4): add $0x8,%rsp
4555(1): ret near (%rsp)
4556(a): nop 0x0(%rax,%rax,1)
4560(7): lea 0xd81(%rip),%rax
4567(4): add $0x8,%rsp
456b(1): ret near (%rsp)

"rpl_fclose" :
4570(2): push %r12
4572(1): push %rbp
4573(1): push %rbx
4574(3): mov %rdi,%rbx
4577(5): call 0xffffcdc9(%rip)
457c(2): test %eax,%eax
457e(3): mov %rbx,%rdi
4581(2): js 0x56(%rip)
4583(5): call 0xffffcdfd(%rip)
4588(2): test %eax,%eax
458a(2): jnz 0x2e(%rip)
458c(3): mov %rbx,%rdi
458f(5): call 0x61(%rip)
4594(2): test %eax,%eax
4596(2): jz 0x3e(%rip)
4598(5): call 0xffffcc68(%rip)
459d(3): mov (%rax),%r12d
45a0(3): mov %rbx,%rdi
45a3(3): mov %rax,%rbp
45a6(5): call 0xffffccaa(%rip)
45ab(3): test %r12d,%r12d
45ae(2): jnz 0x32(%rip)
45b0(1): pop %rbx
45b1(1): pop %rbp
45b2(2): pop %r12
45b4(1): ret near (%rsp)
45b5(3): nop (%rax)
45b8(3): mov %rbx,%rdi
45bb(5): call 0xffffcd85(%rip)
45c0(2): xor %esi,%esi
45c2(5): mov $0x1,%edx
45c7(2): mov %eax,%edi
45c9(5): call 0xffffcd17(%rip)
45ce(4): cmp $0xffffffff,%rax
45d2(2): jnz 0xffffffba(%rip)
45d4(3): mov %rbx,%rdi
45d7(1): pop %rbx
45d8(1): pop %rbp
45d9(2): pop %r12
45db(5): jmp 0xffffcc75(%rip)
45e0(4): mov %r12d,0x0(%rbp)
45e4(5): mov $0xffffffff,%eax
45e9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
45f0(3): test %rdi,%rdi
45f3(1): push %rbx
45f4(3): mov %rdi,%rbx
45f7(2): jz 0x13(%rip)
45f9(5): call 0xffffcd87(%rip)
45fe(2): test %eax,%eax
4600(2): jz 0xa(%rip)
4602(6): test $0x100,(%rbx)
4608(2): jnz 0x10(%rip)
460a(3): mov %rbx,%rdi
460d(1): pop %rbx
460e(5): jmp 0xffffcd52(%rip)
4613(5): nop 0x0(%rax,%rax,1)
4618(3): mov %rbx,%rdi
461b(5): mov $0x1,%edx
4620(2): xor %esi,%esi
4622(5): call 0xe(%rip)
4627(3): mov %rbx,%rdi
462a(1): pop %rbx
462b(5): jmp 0xffffcd35(%rip)

"rpl_fseeko" :
4630(4): mov 0x8(%rdi),%rax
4634(4): cmp %rax,0x10(%rdi)
4638(2): jz 0x8(%rip)
463a(5): jmp 0xffffcd96(%rip)
463f(1): nop 
4640(4): mov 0x20(%rdi),%rax
4644(4): cmp %rax,0x28(%rdi)
4648(2): jnz 0xfffffff2(%rip)
464a(5): cmp $0x0,0x48(%rdi)
464f(2): jnz 0xffffffeb(%rip)
4651(2): push %r12
4653(1): push %rbp
4654(3): mov %edx,%r12d
4657(1): push %rbx
4658(3): mov %rsi,%rbp
465b(3): mov %rdi,%rbx
465e(5): call 0xffffcce2(%rip)
4663(3): mov %r12d,%edx
4666(3): mov %rbp,%rsi
4669(2): mov %eax,%edi
466b(5): call 0xffffcc75(%rip)
4670(4): cmp $0xffffffff,%rax
4674(2): jz 0xe(%rip)
4676(3): and $0xef,(%rbx)
4679(7): mov %rax,0x90(%rbx)
4680(2): xor %eax,%eax
4682(1): pop %rbx
4683(1): pop %rbp
4684(2): pop %r12
4686(1): ret near (%rsp)

"__libc_csu_init" :
4690(2): push %r15
4692(2): push %r14
4694(3): mov %rdx,%r15
4697(2): push %r13
4699(2): push %r12
469b(7): lea 0x20250e(%rip),%r12
46a2(1): push %rbp
46a3(7): lea 0x20250e(%rip),%rbp
46aa(1): push %rbx
46ab(3): mov %edi,%r13d
46ae(3): mov %rsi,%r14
46b1(3): sub %r12,%rbp
46b4(4): sub $0x8,%rsp
46b8(4): sar $0x3,%rbp
46bc(5): call 0xffffcafc(%rip)
46c1(3): test %rbp,%rbp
46c4(2): jz 0x22(%rip)
46c6(2): xor %ebx,%ebx
46c8(8): nop 0x0(%rax,%rax,1)
46d0(3): mov %r15,%rdx
46d3(3): mov %r14,%rsi
46d6(3): mov %r13d,%edi
46d9(4): call 0x0(%r12,%rbx,8)
46dd(4): add $0x1,%rbx
46e1(3): cmp %rbx,%rbp
46e4(2): jnz 0xffffffec(%rip)
46e6(4): add $0x8,%rsp
46ea(1): pop %rbx
46eb(1): pop %rbp
46ec(2): pop %r12
46ee(2): pop %r13
46f0(2): pop %r14
46f2(2): pop %r15
46f4(1): ret near (%rsp)

"atexit" :
4710(7): mov 0x2028f1(%rip),%rdx
4717(2): xor %esi,%esi
4719(5): jmp 0xffffccc7(%rip)

"_fini" :
4720(4): sub $0x8,%rsp
4724(4): add $0x8,%rsp
4728(1): ret near (%rsp)

