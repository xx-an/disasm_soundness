
"getenv@plt" :
13f0(6): jmp 0x205a6a(%rip)
13f6(5): push $0x0

"free@plt" :
1400(6): jmp 0x205a62(%rip)
1406(5): push $0x1

"abort@plt" :
1410(6): jmp 0x205a5a(%rip)
1416(5): push $0x2

"__errno_location@plt" :
1420(6): jmp 0x205a52(%rip)
1426(5): push $0x3

"strncmp@plt" :
1430(6): jmp 0x205a4a(%rip)
1436(5): push $0x4

"_exit@plt" :
1440(6): jmp 0x205a42(%rip)
1446(5): push $0x5

"__fpending@plt" :
1450(6): jmp 0x205a3a(%rip)
1456(5): push $0x6

"textdomain@plt" :
1460(6): jmp 0x205a32(%rip)
1466(5): push $0x7

"fclose@plt" :
1470(6): jmp 0x205a2a(%rip)
1476(5): push $0x8

"__sched_cpucount@plt" :
1480(6): jmp 0x205a22(%rip)
1486(5): push $0x9

"bindtextdomain@plt" :
1490(6): jmp 0x205a1a(%rip)
1496(5): push $0xa

"dcgettext@plt" :
14a0(6): jmp 0x205a12(%rip)
14a6(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
14b0(6): jmp 0x205a0a(%rip)
14b6(5): push $0xc

"strlen@plt" :
14c0(6): jmp 0x205a02(%rip)
14c6(5): push $0xd

"__stack_chk_fail@plt" :
14d0(6): jmp 0x2059fa(%rip)
14d6(5): push $0xe

"getopt_long@plt" :
14e0(6): jmp 0x2059f2(%rip)
14e6(5): push $0xf

"mbrtowc@plt" :
14f0(6): jmp 0x2059ea(%rip)
14f6(5): push $0x10

"strchr@plt" :
1500(6): jmp 0x2059e2(%rip)
1506(5): push $0x11

"strrchr@plt" :
1510(6): jmp 0x2059da(%rip)
1516(5): push $0x12

"lseek@plt" :
1520(6): jmp 0x2059d2(%rip)
1526(5): push $0x13

"__assert_fail@plt" :
1530(6): jmp 0x2059ca(%rip)
1536(5): push $0x14

"__strtoul_internal@plt" :
1540(6): jmp 0x2059c2(%rip)
1546(5): push $0x15

"memset@plt" :
1550(6): jmp 0x2059ba(%rip)
1556(5): push $0x16

"memcmp@plt" :
1560(6): jmp 0x2059b2(%rip)
1566(5): push $0x17

"fputs_unlocked@plt" :
1570(6): jmp 0x2059aa(%rip)
1576(5): push $0x18

"calloc@plt" :
1580(6): jmp 0x2059a2(%rip)
1586(5): push $0x19

"memcpy@plt" :
1590(6): jmp 0x20599a(%rip)
1596(5): push $0x1a

"fileno@plt" :
15a0(6): jmp 0x205992(%rip)
15a6(5): push $0x1b

"malloc@plt" :
15b0(6): jmp 0x20598a(%rip)
15b6(5): push $0x1c

"fflush@plt" :
15c0(6): jmp 0x205982(%rip)
15c6(5): push $0x1d

"nl_langinfo@plt" :
15d0(6): jmp 0x20597a(%rip)
15d6(5): push $0x1e

"__freading@plt" :
15e0(6): jmp 0x205972(%rip)
15e6(5): push $0x1f

"realloc@plt" :
15f0(6): jmp 0x20596a(%rip)
15f6(5): push $0x20

"setlocale@plt" :
1600(6): jmp 0x205962(%rip)
1606(5): push $0x21

"__printf_chk@plt" :
1610(6): jmp 0x20595a(%rip)
1616(5): push $0x22

"error@plt" :
1620(6): jmp 0x205952(%rip)
1626(5): push $0x23

"fseeko@plt" :
1630(6): jmp 0x20594a(%rip)
1636(5): push $0x24

"sysconf@plt" :
1640(6): jmp 0x205942(%rip)
1646(5): push $0x25

"strtoul@plt" :
1650(6): jmp 0x20593a(%rip)
1656(5): push $0x26

"__cxa_atexit@plt" :
1660(6): jmp 0x205932(%rip)
1666(5): push $0x27

"exit@plt" :
1670(6): jmp 0x20592a(%rip)
1676(5): push $0x28

"fwrite@plt" :
1680(6): jmp 0x205922(%rip)
1686(5): push $0x29

"__fprintf_chk@plt" :
1690(6): jmp 0x20591a(%rip)
1696(5): push $0x2a

"sched_getaffinity@plt" :
16a0(6): jmp 0x205912(%rip)
16a6(5): push $0x2b

"mbsinit@plt" :
16b0(6): jmp 0x20590a(%rip)
16b6(5): push $0x2c

"iswprint@plt" :
16c0(6): jmp 0x205902(%rip)
16c6(5): push $0x2d

"__ctype_b_loc@plt" :
16d0(6): jmp 0x2058fa(%rip)
16d6(5): push $0x2e

".plt.got" :
16e0(6): jmp 0x205912(%rip)
16e6(2): nop 

"_init" :
13c0(4): sub $0x8,%rsp
13c4(7): mov 0x205c1d(%rip),%rax
13cb(3): test %rax,%rax
13ce(2): jz 0x4(%rip)
13d0(2): call %rax
13d2(4): add $0x8,%rsp
13d6(1): ret near (%rsp)

"main" :
16f0(2): push %r13
16f2(2): push %r12
16f4(6): mov $0x2,%r13d
16fa(1): push %rbp
16fb(1): push %rbx
16fc(2): mov %edi,%ebp
16fe(3): mov %rsi,%rbx
1701(3): xor %r12d,%r12d
1704(4): sub $0x8,%rsp
1708(3): mov (%rsi),%rdi
170b(5): call 0x9c5(%rip)
1710(7): lea 0x3889(%rip),%rsi
1717(5): mov $0x6,%edi
171c(5): call 0xfffffee4(%rip)
1721(7): lea 0x391c(%rip),%rsi
1728(7): lea 0x38ec(%rip),%rdi
172f(5): call 0xfffffd61(%rip)
1734(7): lea 0x38e0(%rip),%rdi
173b(5): call 0xfffffd25(%rip)
1740(7): lea 0x5f9(%rip),%rdi
1747(5): call 0x3809(%rip)
174c(7): lea 0x20540d(%rip),%rcx
1753(7): lea 0x3846(%rip),%rdx
175a(3): xor %r8d,%r8d
175d(3): mov %rbx,%rsi
1760(2): mov %ebp,%edi
1762(5): call 0xfffffd7e(%rip)
1767(3): cmp $0xff,%eax
176a(6): jz 0xae(%rip)
1770(5): cmp $0xffffff7e,%eax
1775(6): jz 0x11d(%rip)
177b(2): jle 0x55(%rip)
177d(5): cmp $0x80,%eax
1782(6): jz 0x8e(%rip)
1788(5): cmp $0x81,%eax
178d(6): jnz 0xfb(%rip)
1793(7): lea 0x38d4(%rip),%rsi
179a(5): mov $0x5,%edx
179f(2): xor %edi,%edi
17a1(5): call 0xfffffcff(%rip)
17a6(7): mov 0x2058eb(%rip),%rdi
17ad(7): lea 0x37ec(%rip),%rcx
17b4(3): mov %rax,%r8
17b7(3): xor %r9d,%r9d
17ba(7): mov $0xffffffff,%rdx
17c1(2): xor %esi,%esi
17c3(5): call 0x2fed(%rip)
17c8(3): mov %rax,%r12
17cb(5): jmp 0xffffff81(%rip)
17d0(5): cmp $0xffffff7d,%eax
17d5(6): jnz 0xb3(%rip)
17db(7): mov 0x2058a6(%rip),%rdi
17e2(7): mov 0x205827(%rip),%rcx
17e9(7): lea 0x386c(%rip),%r8
17f0(7): lea 0x3820(%rip),%rdx
17f7(7): lea 0x3786(%rip),%rsi
17fe(3): xor %r9d,%r9d
1801(2): xor %eax,%eax
1803(5): call 0x2abd(%rip)
1808(2): xor %edi,%edi
180a(5): call 0xfffffe66(%rip)
180f(1): nop 
1810(3): xor %r13d,%r13d
1813(5): jmp 0xffffff39(%rip)
1818(7): movsxd 0x205871(%rip),%rax
181f(2): cmp %ebp,%eax
1821(2): jnz 0x37(%rip)
1823(3): mov %r13d,%edi
1826(5): call 0x75a(%rip)
182b(3): cmp %rax,%r12
182e(5): mov $0x1,%edx
1833(2): jnb 0x8(%rip)
1835(3): sub %r12,%rax
1838(3): mov %rax,%rdx
183b(7): lea 0x384c(%rip),%rsi
1842(5): mov $0x1,%edi
1847(2): xor %eax,%eax
1849(5): call 0xfffffdc7(%rip)
184e(1): pop %rdx
184f(2): xor %eax,%eax
1851(1): pop %rbx
1852(1): pop %rbp
1853(2): pop %r12
1855(2): pop %r13
1857(1): ret near (%rsp)
1858(4): mov 0x0(%rbx,%rax,8),%rdi
185c(5): call 0x2584(%rip)
1861(7): lea 0x3815(%rip),%rsi
1868(3): mov %rax,%rbx
186b(5): mov $0x5,%edx
1870(2): xor %edi,%edi
1872(5): call 0xfffffc2e(%rip)
1877(3): mov %rbx,%rcx
187a(3): mov %rax,%rdx
187d(2): xor %esi,%esi
187f(2): xor %edi,%edi
1881(2): xor %eax,%eax
1883(5): call 0xfffffd9d(%rip)
1888(5): mov $0x1,%edi
188d(5): call 0x123(%rip)
1892(2): xor %edi,%edi
1894(5): call 0x11c(%rip)

"_start" :
18a0(2): xor %ebp,%ebp
18a2(3): mov %rdx,%r9
18a5(1): pop %rsi
18a6(3): mov %rsp,%rdx
18a9(4): and $0xfffffff0,%rsp
18ad(1): push %rax
18ae(1): push %rsp
18af(7): lea 0x368a(%rip),%r8
18b6(7): lea 0x3613(%rip),%rcx
18bd(7): lea 0xfffffe2c(%rip),%rdi
18c4(6): call 0x205716(%rip)
18ca(1): hlt 

"deregister_tm_clones" :
18d0(7): lea 0x2057a9(%rip),%rdi
18d7(1): push %rbp
18d8(7): lea 0x2057a1(%rip),%rax
18df(3): cmp %rdi,%rax
18e2(3): mov %rsp,%rbp
18e5(2): jz 0x1b(%rip)
18e7(7): mov 0x2056ea(%rip),%rax
18ee(3): test %rax,%rax
18f1(2): jz 0xf(%rip)
18f3(1): pop %rbp
18f4(2): jmp %rax
18f6(a): nop 0x0(%rax,%rax,1)
1900(1): pop %rbp
1901(1): ret near (%rsp)

"register_tm_clones" :
1910(7): lea 0x205769(%rip),%rdi
1917(7): lea 0x205762(%rip),%rsi
191e(1): push %rbp
191f(3): sub %rdi,%rsi
1922(3): mov %rsp,%rbp
1925(4): sar $0x3,%rsi
1929(3): mov %rsi,%rax
192c(4): shr $0x3f,%rax
1930(3): add %rax,%rsi
1933(3): sar $0x1,%rsi
1936(2): jz 0x1a(%rip)
1938(7): mov 0x2056b1(%rip),%rax
193f(3): test %rax,%rax
1942(2): jz 0xe(%rip)
1944(1): pop %rbp
1945(2): jmp %rax
1947(9): nop 0x0(%rax,%rax,1)
1950(1): pop %rbp
1951(1): ret near (%rsp)

"__do_global_dtors_aux" :
1960(7): cmp $0x0,0x205761(%rip)
1967(2): jnz 0x31(%rip)
1969(8): cmp $0x0,0x205687(%rip)
1971(1): push %rbp
1972(3): mov %rsp,%rbp
1975(2): jz 0xe(%rip)
1977(7): mov 0x20568a(%rip),%rdi
197e(5): call 0xfffffd62(%rip)
1983(5): call 0xffffff4d(%rip)
1988(7): mov $0x1,0x205739(%rip)
198f(1): pop %rbp
1990(1): ret near (%rsp)
1991(7): nop 0x0(%rax)
1998(2): REP ret near (%rsp)

"frame_dummy" :
19a0(1): push %rbp
19a1(3): mov %rsp,%rbp
19a4(1): pop %rbp
19a5(5): jmp 0xffffff6b(%rip)

"usage" :
19b0(2): push %r13
19b2(2): push %r12
19b4(5): mov $0x5,%edx
19b9(1): push %rbp
19ba(1): push %rbx
19bb(2): mov %edi,%ebp
19bd(7): sub $0x88,%rsp
19c4(7): mov 0x205715(%rip),%rbx
19cb(9): mov $0x28,%rax
19d4(5): mov %rax,0x78(%rsp)
19d9(2): xor %eax,%eax
19db(2): test %edi,%edi
19dd(2): jz 0x30(%rip)
19df(7): lea 0x36ca(%rip),%rsi
19e6(2): xor %edi,%edi
19e8(5): call 0xfffffab8(%rip)
19ed(7): mov 0x2056cc(%rip),%rdi
19f4(3): mov %rax,%rdx
19f7(3): mov %rbx,%rcx
19fa(5): mov $0x1,%esi
19ff(2): xor %eax,%eax
1a01(5): call 0xfffffc8f(%rip)
1a06(2): mov %ebp,%edi
1a08(5): call 0xfffffc68(%rip)
1a0d(7): lea 0x3576(%rip),%rsi
1a14(2): xor %edi,%edi
1a16(5): call 0xfffffa8a(%rip)
1a1b(3): mov %rbx,%rdx
1a1e(3): mov %rax,%rsi
1a21(5): mov $0x1,%edi
1a26(2): xor %eax,%eax
1a28(5): call 0xfffffbe8(%rip)
1a2d(7): mov 0x205654(%rip),%rbx
1a34(7): lea 0x369d(%rip),%rsi
1a3b(5): mov $0x5,%edx
1a40(2): xor %edi,%edi
1a42(5): call 0xfffffa5e(%rip)
1a47(3): mov %rbx,%rsi
1a4a(3): mov %rax,%rdi
1a4d(5): call 0xfffffb23(%rip)
1a52(7): mov 0x20562f(%rip),%rbx
1a59(7): lea 0x36f8(%rip),%rsi
1a60(5): mov $0x5,%edx
1a65(2): xor %edi,%edi
1a67(5): call 0xfffffa39(%rip)
1a6c(3): mov %rbx,%rsi
1a6f(3): mov %rax,%rdi
1a72(5): call 0xfffffafe(%rip)
1a77(7): mov 0x20560a(%rip),%rbx
1a7e(7): lea 0x374b(%rip),%rsi
1a85(5): mov $0x5,%edx
1a8a(2): xor %edi,%edi
1a8c(5): call 0xfffffa14(%rip)
1a91(3): mov %rbx,%rsi
1a94(3): mov %rax,%rdi
1a97(5): call 0xfffffad9(%rip)
1a9c(7): mov 0x2055e5(%rip),%rbx
1aa3(7): lea 0x3756(%rip),%rsi
1aaa(5): mov $0x5,%edx
1aaf(2): xor %edi,%edi
1ab1(5): call 0xfffff9ef(%rip)
1ab6(3): mov %rbx,%rsi
1ab9(3): mov %rax,%rdi
1abc(7): lea 0x34c1(%rip),%rbx
1ac3(5): call 0xfffffaad(%rip)
1ac8(7): lea 0x34d2(%rip),%rax
1acf(7): lea 0x350c(%rip),%rcx
1ad6(9): mov $0x0,0x60(%rsp)
1adf(9): mov $0x0,0x68(%rsp)
1ae8(3): mov %rsp,%rdx
1aeb(4): mov %rax,(%rsp)
1aef(7): lea 0x34ad(%rip),%rax
1af6(5): mov %rcx,0x30(%rsp)
1afb(7): lea 0x34ea(%rip),%rcx
1b02(5): mov %rax,0x8(%rsp)
1b07(7): lea 0x350d(%rip),%rax
1b0e(5): mov %rcx,0x40(%rsp)
1b13(7): lea 0x34dc(%rip),%rcx
1b1a(5): mov %rax,0x10(%rsp)
1b1f(7): lea 0x348d(%rip),%rax
1b26(5): mov %rcx,0x50(%rsp)
1b2b(5): mov %rax,0x18(%rsp)
1b30(7): lea 0x3492(%rip),%rax
1b37(5): mov %rax,0x20(%rsp)
1b3c(7): lea 0x3490(%rip),%rax
1b43(5): mov %rax,0x28(%rsp)
1b48(5): mov %rax,0x38(%rsp)
1b4d(5): mov %rax,0x48(%rsp)
1b52(5): mov %rax,0x58(%rsp)
1b57(9): nop 0x0(%rax,%rax,1)
1b60(4): add $0x10,%rdx
1b64(3): mov (%rdx),%rdi
1b67(3): test %rdi,%rdi
1b6a(2): jz 0x15(%rip)
1b6c(5): mov $0x6,%ecx
1b71(3): mov %rbx,%rsi
1b74(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1b76(3): setnbe %al
1b79(2): sbb $0x0,%al
1b7b(2): test %al,%al
1b7d(2): jnz 0xffffffe3(%rip)
1b7f(4): mov 0x8(%rdx),%r12
1b83(2): xor %edi,%edi
1b85(5): mov $0x5,%edx
1b8a(7): lea 0x346f(%rip),%rsi
1b91(3): test %r12,%r12
1b94(6): jz 0xc7(%rip)
1b9a(5): call 0xfffff906(%rip)
1b9f(7): lea 0x3692(%rip),%rcx
1ba6(7): lea 0x346a(%rip),%rdx
1bad(3): mov %rax,%rsi
1bb0(5): mov $0x1,%edi
1bb5(2): xor %eax,%eax
1bb7(5): call 0xfffffa59(%rip)
1bbc(2): xor %esi,%esi
1bbe(5): mov $0x5,%edi
1bc3(5): call 0xfffffa3d(%rip)
1bc8(3): test %rax,%rax
1bcb(2): jz 0x1e(%rip)
1bcd(7): lea 0x3451(%rip),%rsi
1bd4(5): mov $0x3,%edx
1bd9(3): mov %rax,%rdi
1bdc(5): call 0xfffff854(%rip)
1be1(2): test %eax,%eax
1be3(6): jnz 0x10d(%rip)
1be9(7): lea 0x3439(%rip),%rsi
1bf0(2): xor %edi,%edi
1bf2(5): mov $0x5,%edx
1bf7(5): call 0xfffff8a9(%rip)
1bfc(7): lea 0x3381(%rip),%rcx
1c03(7): lea 0x362e(%rip),%rdx
1c0a(3): mov %rax,%rsi
1c0d(5): mov $0x1,%edi
1c12(2): xor %eax,%eax
1c14(5): call 0xfffff9fc(%rip)
1c19(3): cmp %rbx,%r12
1c1c(7): lea 0x339a(%rip),%rcx
1c23(7): lea 0x3376(%rip),%rbx
1c2a(4): cmove %rcx,%rbx
1c2e(7): lea 0x3673(%rip),%rsi
1c35(2): xor %edi,%edi
1c37(5): mov $0x5,%edx
1c3c(5): call 0xfffff864(%rip)
1c41(3): mov %rbx,%rcx
1c44(3): mov %rax,%rsi
1c47(3): mov %r12,%rdx
1c4a(5): mov $0x1,%edi
1c4f(2): xor %eax,%eax
1c51(5): call 0xfffff9bf(%rip)
1c56(5): jmp 0xfffffdb0(%rip)
1c5b(5): call 0xfffff845(%rip)
1c60(7): lea 0x35d1(%rip),%rcx
1c67(7): lea 0x33a9(%rip),%rdx
1c6e(3): mov %rax,%rsi
1c71(5): mov $0x1,%edi
1c76(2): xor %eax,%eax
1c78(5): call 0xfffff998(%rip)
1c7d(2): xor %esi,%esi
1c7f(5): mov $0x5,%edi
1c84(5): call 0xfffff97c(%rip)
1c89(3): test %rax,%rax
1c8c(2): jz 0x1a(%rip)
1c8e(7): lea 0x3390(%rip),%rsi
1c95(5): mov $0x3,%edx
1c9a(3): mov %rax,%rdi
1c9d(5): call 0xfffff793(%rip)
1ca2(2): test %eax,%eax
1ca4(2): jnz 0x45(%rip)
1ca6(7): lea 0x337c(%rip),%rsi
1cad(5): mov $0x5,%edx
1cb2(2): xor %edi,%edi
1cb4(7): lea 0x32c9(%rip),%r12
1cbb(7): lea 0x32fb(%rip),%rbx
1cc2(5): call 0xfffff7de(%rip)
1cc7(7): lea 0x32b6(%rip),%rcx
1cce(7): lea 0x3563(%rip),%rdx
1cd5(3): mov %rax,%rsi
1cd8(5): mov $0x1,%edi
1cdd(2): xor %eax,%eax
1cdf(5): call 0xfffff931(%rip)
1ce4(5): jmp 0xffffff4a(%rip)
1ce9(7): lea 0x3294(%rip),%r12
1cf0(7): mov 0x205391(%rip),%r13
1cf7(7): lea 0x3562(%rip),%rsi
1cfe(2): xor %edi,%edi
1d00(5): mov $0x5,%edx
1d05(5): call 0xfffff79b(%rip)
1d0a(3): mov %r13,%rsi
1d0d(3): mov %rax,%rdi
1d10(5): call 0xfffff860(%rip)
1d15(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1d20(7): mov %rdi,0x2053b1(%rip)
1d27(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1d30(7): mov %dil,0x205399(%rip)
1d37(1): ret near (%rsp)

"close_stdout" :
1d40(1): push %rbp
1d41(1): push %rbx
1d42(4): sub $0x8,%rsp
1d46(7): mov 0x20533b(%rip),%rdi
1d4d(5): call 0x2f43(%rip)
1d52(2): test %eax,%eax
1d54(2): jz 0x18(%rip)
1d56(5): call 0xfffff6ca(%rip)
1d5b(7): cmp $0x0,0x20536e(%rip)
1d62(3): mov %rax,%rbx
1d65(2): jz 0x1e(%rip)
1d67(3): cmp $0x20,(%rax)
1d6a(2): jnz 0x19(%rip)
1d6c(7): mov 0x20534d(%rip),%rdi
1d73(5): call 0x2f1d(%rip)
1d78(2): test %eax,%eax
1d7a(2): jnz 0x48(%rip)
1d7c(4): add $0x8,%rsp
1d80(1): pop %rbx
1d81(1): pop %rbp
1d82(1): ret near (%rsp)
1d83(7): lea 0x3556(%rip),%rsi
1d8a(2): xor %edi,%edi
1d8c(5): mov $0x5,%edx
1d91(5): call 0xfffff70f(%rip)
1d96(7): mov 0x20533b(%rip),%rdi
1d9d(3): mov %rax,%rbp
1da0(3): test %rdi,%rdi
1da3(2): jz 0x2a(%rip)
1da5(5): call 0x1e3b(%rip)
1daa(2): mov (%rbx),%esi
1dac(7): lea 0x3539(%rip),%rdx
1db3(3): mov %rax,%rcx
1db6(3): mov %rbp,%r8
1db9(2): xor %edi,%edi
1dbb(2): xor %eax,%eax
1dbd(5): call 0xfffff863(%rip)
1dc2(6): mov 0x205250(%rip),%edi
1dc8(5): call 0xfffff678(%rip)
1dcd(2): mov (%rbx),%esi
1dcf(7): lea 0x351a(%rip),%rdx
1dd6(3): mov %rax,%rcx
1dd9(2): xor %edi,%edi
1ddb(2): xor %eax,%eax
1ddd(5): call 0xfffff843(%rip)
1de2(2): jmp 0xffffffe0(%rip)

"num_processors_via_affinity_mask" :
1df0(1): push %rbx
1df1(2): xor %edi,%edi
1df3(5): mov $0x80,%esi
1df8(7): sub $0x90,%rsp
1dff(3): mov %rsp,%rbx
1e02(3): mov %rbx,%rdx
1e05(9): mov $0x28,%rax
1e0e(8): mov %rax,0x88(%rsp)
1e16(2): xor %eax,%eax
1e18(5): call 0xfffff888(%rip)
1e1d(2): test %eax,%eax
1e1f(2): jz 0x21(%rip)
1e21(2): xor %eax,%eax
1e23(8): mov 0x88(%rsp),%rcx
1e2b(9): xor $0x28,%rcx
1e34(2): jnz 0x22(%rip)
1e36(7): add $0x90,%rsp
1e3d(1): pop %rbx
1e3e(1): ret near (%rsp)
1e3f(1): nop 
1e40(3): mov %rbx,%rsi
1e43(5): mov $0x80,%edi
1e48(5): call 0xfffff638(%rip)
1e4d(2): cwde 
1e4f(3): test %rax,%rax
1e52(2): jz 0xffffffcf(%rip)
1e54(2): jmp 0xffffffcf(%rip)
1e56(5): call 0xfffff67a(%rip)

"parse_omp_threads.part.0" :
1e60(4): sub $0x18,%rsp
1e64(3): movzx (%rdi),%ecx
1e67(9): mov $0x28,%rax
1e70(5): mov %rax,0x8(%rsp)
1e75(2): xor %eax,%eax
1e77(2): test %cl,%cl
1e79(2): jz 0x45(%rip)
1e7b(3): movsx %cl,%eax
1e7e(3): cmp $0x20,%eax
1e81(2): jnbe 0x5f(%rip)
1e83(a): mov $0x4294983168,%rax
1e8d(5): mov $0x1,%esi
1e92(4): bt %rcx,%rax
1e96(3): mov %rax,%rdx
1e99(2): jb 0x1a(%rip)
1e9b(2): jmp 0x45(%rip)
1e9d(3): nop (%rax)
1ea0(3): movsx %cl,%eax
1ea3(3): cmp $0x20,%eax
1ea6(2): jnbe 0x3a(%rip)
1ea8(3): mov %rsi,%rax
1eab(3): shl/sal %cl,%rax
1eae(3): test %rdx,%rax
1eb1(2): jz 0x2f(%rip)
1eb3(4): add $0x1,%rdi
1eb7(3): movzx (%rdi),%ecx
1eba(2): test %cl,%cl
1ebc(2): jnz 0xffffffe4(%rip)
1ebe(2): xor %eax,%eax
1ec0(5): mov 0x8(%rsp),%rdx
1ec5(9): xor $0x28,%rdx
1ece(6): jnz 0x9e(%rip)
1ed4(4): add $0x18,%rsp
1ed8(1): ret near (%rsp)
1ed9(7): nop 0x0(%rax)
1ee0(3): sub $0x30,%ecx
1ee3(2): xor %eax,%eax
1ee5(3): cmp $0x9,%cl
1ee8(2): jnbe 0xffffffd8(%rip)
1eea(5): mov $0xa,%edx
1eef(3): mov %rsp,%rsi
1ef2(8): mov $0x0,(%rsp)
1efa(5): call 0xfffff756(%rip)
1eff(4): mov (%rsp),%rdx
1f03(3): test %rdx,%rdx
1f06(2): jz 0xffffffb8(%rip)
1f08(3): movzx (%rdx),%ecx
1f0b(2): test %cl,%cl
1f0d(2): jz 0xffffffb3(%rip)
1f0f(3): movsx %cl,%esi
1f12(3): cmp $0x20,%esi
1f15(2): jnbe 0x49(%rip)
1f17(a): mov $0x4294983168,%rdi
1f21(4): bt %rcx,%rdi
1f25(2): jnb 0x39(%rip)
1f27(4): add $0x1,%rdx
1f2b(6): mov $0x1,%r8d
1f31(2): jmp 0x16(%rip)
1f33(5): nop 0x0(%rax,%rax,1)
1f38(3): mov %r8,%rsi
1f3b(4): add $0x1,%rdx
1f3f(3): shl/sal %cl,%rsi
1f42(3): test %rdi,%rsi
1f45(2): jz 0x19(%rip)
1f47(4): mov %rdx,(%rsp)
1f4b(3): movzx (%rdx),%ecx
1f4e(2): test %cl,%cl
1f50(6): jz 0xffffff70(%rip)
1f56(3): movsx %cl,%esi
1f59(3): cmp $0x20,%esi
1f5c(2): jbe 0xffffffdc(%rip)
1f5e(3): cmp $0x2c,%cl
1f61(6): jnz 0xffffff5d(%rip)
1f67(5): jmp 0xffffff59(%rip)
1f6c(5): call 0xfffff564(%rip)

"num_processors" :
1f80(1): push %rbp
1f81(1): push %rbx
1f82(4): sub $0x8,%rsp
1f86(3): cmp $0x2,%edi
1f89(2): jz 0x37(%rip)
1f8b(3): cmp $0x1,%edi
1f8e(6): jz 0x102(%rip)
1f94(5): mov $0x53,%edi
1f99(5): call 0xfffff6a7(%rip)
1f9e(4): cmp $0x1,%rax
1fa2(6): jz 0xc6(%rip)
1fa8(3): test %rax,%rax
1fab(5): mov $0x1,%edx
1fb0(4): cmovng %rdx,%rax
1fb4(4): add $0x8,%rsp
1fb8(1): pop %rbx
1fb9(1): pop %rbp
1fba(1): ret near (%rsp)
1fbb(5): nop 0x0(%rax,%rax,1)
1fc0(7): lea 0x332c(%rip),%rdi
1fc7(5): call 0xfffff429(%rip)
1fcc(3): test %rax,%rax
1fcf(2): jz 0x59(%rip)
1fd1(3): mov %rax,%rdi
1fd4(7): mov $0xffffffff,%rbp
1fdb(5): call 0xfffffe85(%rip)
1fe0(7): lea 0x331c(%rip),%rdi
1fe7(3): mov %rax,%rbx
1fea(5): call 0xfffff406(%rip)
1fef(3): test %rax,%rax
1ff2(2): jz 0x1b(%rip)
1ff4(3): mov %rax,%rdi
1ff7(5): call 0xfffffe69(%rip)
1ffc(3): mov %rax,%rbp
1fff(3): test %rax,%rax
2002(7): mov $0xffffffff,%rax
2009(4): cmove %rax,%rbp
200d(3): test %rbx,%rbx
2010(2): jz 0x39(%rip)
2012(3): cmp %rbx,%rbp
2015(3): mov %rbx,%rax
2018(4): cmovbe %rbp,%rax
201c(4): add $0x8,%rsp
2020(1): pop %rbx
2021(1): pop %rbp
2022(1): ret near (%rsp)
2023(5): nop 0x0(%rax,%rax,1)
2028(7): lea 0x32d4(%rip),%rdi
202f(5): call 0xfffff3c1(%rip)
2034(3): test %rax,%rax
2037(2): jz 0x59(%rip)
2039(3): mov %rax,%rdi
203c(5): call 0xfffffe24(%rip)
2041(3): test %rax,%rax
2044(3): mov %rax,%rbp
2047(2): jz 0x49(%rip)
2049(5): call 0xfffffda7(%rip)
204e(3): test %rax,%rax
2051(2): jz 0x50(%rip)
2053(3): cmp %rbp,%rax
2056(4): cmovnbe %rbp,%rax
205a(4): add $0x8,%rsp
205e(1): pop %rbx
205f(1): pop %rbp
2060(1): ret near (%rsp)
2061(7): nop 0x0(%rax)
2068(5): call 0xfffffd88(%rip)
206d(3): mov %rax,%rdx
2070(5): mov $0x1,%eax
2075(3): test %rdx,%rdx
2078(6): jz 0xffffff3c(%rip)
207e(3): mov %rdx,%rax
2081(5): jmp 0xffffff27(%rip)
2086(a): nop 0x0(%rax,%rax,1)
2090(5): call 0xfffffd60(%rip)
2095(3): test %rax,%rax
2098(7): mov $0xffffffff,%rbp
209f(2): jnz 0xffffffb4(%rip)
20a1(5): mov $0x54,%edi
20a6(5): call 0xfffff59a(%rip)
20ab(3): mov %rax,%rdx
20ae(5): mov $0x1,%eax
20b3(3): test %rdx,%rdx
20b6(6): jle 0xfffffefe(%rip)
20bc(3): cmp %rbp,%rdx
20bf(3): mov %rbp,%rax
20c2(4): cmovbe %rdx,%rax
20c6(5): jmp 0xfffffeee(%rip)

"set_program_name" :
20d0(3): test %rdi,%rdi
20d3(1): push %rbx
20d4(2): jz 0x79(%rip)
20d6(5): mov $0x2f,%esi
20db(3): mov %rdi,%rbx
20de(5): call 0xfffff432(%rip)
20e3(3): test %rax,%rax
20e6(2): jz 0x57(%rip)
20e8(4): lea 0x1(%rax),%r8
20ec(3): mov %r8,%rdx
20ef(3): sub %rbx,%rdx
20f2(4): cmp $0x6,%rdx
20f6(2): jle 0x47(%rip)
20f8(4): lea 0xfffffffa(%rax),%rsi
20fc(7): lea 0x324d(%rip),%rdi
2103(5): mov $0x7,%ecx
2108(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
210a(3): setnbe %dl
210d(3): sbb $0x0,%dl
2110(2): test %dl,%dl
2112(2): jnz 0x2b(%rip)
2114(7): lea 0x323d(%rip),%rdi
211b(5): mov $0x3,%ecx
2120(3): mov %r8,%rsi
2123(3): mov %r8,%rbx
2126(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2128(3): setnbe %dl
212b(3): sbb $0x0,%dl
212e(2): test %dl,%dl
2130(2): jnz 0xd(%rip)
2132(4): lea 0x4(%rax),%rbx
2136(7): mov %rbx,0x204f43(%rip)
213d(7): mov %rbx,0x204f9c(%rip)
2144(7): mov %rbx,0x204f55(%rip)
214b(1): pop %rbx
214c(1): ret near (%rsp)
214d(7): mov 0x204f6c(%rip),%rcx
2154(7): lea 0x31bd(%rip),%rdi
215b(5): mov $0x37,%edx
2160(5): mov $0x1,%esi
2165(5): call 0xfffff51b(%rip)
216a(5): call 0xfffff2a6(%rip)

"gettext_quote.part.1" :
2170(1): push %rbp
2171(1): push %rbx
2172(3): mov %rdi,%rbp
2175(2): mov %esi,%ebx
2177(4): sub $0x8,%rsp
217b(5): call 0x2bf5(%rip)
2180(3): movzx (%rax),%edx
2183(3): and $0xdf,%edx
2186(3): cmp $0x55,%dl
2189(2): jz 0x77(%rip)
218b(3): cmp $0x47,%dl
218e(2): jz 0x22(%rip)
2190(7): lea 0x31d4(%rip),%rax
2197(7): lea 0x31cf(%rip),%rdx
219e(3): cmp $0x9,%ebx
21a1(4): cmovne %rdx,%rax
21a5(4): add $0x8,%rsp
21a9(1): pop %rbx
21aa(1): pop %rbp
21ab(1): ret near (%rsp)
21ac(4): nop 0x0(%rax)
21b0(4): movzx 0x1(%rax),%edx
21b4(3): and $0xdf,%edx
21b7(3): cmp $0x42,%dl
21ba(2): jnz 0xffffffd6(%rip)
21bc(4): cmp $0x31,0x2(%rax)
21c0(2): jnz 0xffffffd0(%rip)
21c2(4): cmp $0x38,0x3(%rax)
21c6(2): jnz 0xffffffca(%rip)
21c8(4): cmp $0x30,0x4(%rax)
21cc(2): jnz 0xffffffc4(%rip)
21ce(4): cmp $0x33,0x5(%rax)
21d2(2): jnz 0xffffffbe(%rip)
21d4(4): cmp $0x30,0x6(%rax)
21d8(2): jnz 0xffffffb8(%rip)
21da(4): cmp $0x0,0x7(%rax)
21de(2): jnz 0xffffffb2(%rip)
21e0(4): cmp $0x60,0x0(%rbp)
21e4(7): lea 0x3179(%rip),%rax
21eb(7): lea 0x3176(%rip),%rdx
21f2(4): cmovne %rdx,%rax
21f6(4): add $0x8,%rsp
21fa(1): pop %rbx
21fb(1): pop %rbp
21fc(1): ret near (%rsp)
21fd(3): nop (%rax)
2200(4): movzx 0x1(%rax),%edx
2204(3): and $0xdf,%edx
2207(3): cmp $0x54,%dl
220a(2): jnz 0xffffff86(%rip)
220c(4): movzx 0x2(%rax),%edx
2210(3): and $0xdf,%edx
2213(3): cmp $0x46,%dl
2216(6): jnz 0xffffff7a(%rip)
221c(4): cmp $0x2d,0x3(%rax)
2220(6): jnz 0xffffff70(%rip)
2226(4): cmp $0x38,0x4(%rax)
222a(6): jnz 0xffffff66(%rip)
2230(4): cmp $0x0,0x5(%rax)
2234(6): jnz 0xffffff5c(%rip)
223a(4): cmp $0x60,0x0(%rbp)
223e(7): lea 0x3117(%rip),%rax
2245(7): lea 0x3114(%rip),%rdx
224c(4): cmovne %rdx,%rax
2250(4): add $0x8,%rsp
2254(1): pop %rbx
2255(1): pop %rbp
2256(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2260(2): push %r15
2262(2): push %r14
2264(3): mov %r8d,%r15d
2267(2): push %r13
2269(2): push %r12
226b(3): mov %rdi,%r14
226e(1): push %rbp
226f(1): push %rbx
2270(3): mov %r9d,%ebx
2273(3): mov %rsi,%r13
2276(3): mov %rcx,%rbp
2279(3): and $0x2,%ebx
227c(7): sub $0xb8,%rsp
2283(8): mov 0xf0(%rsp),%rax
228b(5): mov %rdx,0x10(%rsp)
2290(5): mov %r8d,0x8(%rsp)
2295(5): mov %r9d,0x78(%rsp)
229a(5): mov %rax,0x20(%rsp)
229f(8): mov 0xf8(%rsp),%rax
22a7(5): mov %rax,0x68(%rsp)
22ac(8): mov 0x100(%rsp),%rax
22b4(5): mov %rax,0x60(%rsp)
22b9(9): mov $0x28,%rax
22c2(8): mov %rax,0xa8(%rsp)
22ca(2): xor %eax,%eax
22cc(5): call 0xfffff1e4(%rip)
22d1(4): cmp $0xa,%r15d
22d5(5): mov %rax,0x58(%rsp)
22da(6): jnbe 0x11b5(%rip)
22e0(7): lea 0x30d9(%rip),%rcx
22e7(3): mov %r15d,%edx
22ea(4): movsxd 0x0(%rcx,%rdx,4),%rax
22ee(3): add %rcx,%rax
22f1(2): jmp %rax
22f3(5): mov $0x1,0xe(%rsp)
22f8(5): mov $0x0,0x7c(%rsp)
22fd(3): xor %r12d,%r12d
2300(9): mov $0x0,0x50(%rsp)
2309(5): mov $0x1,0xf(%rsp)
230e(5): mov $0x0,0xd(%rsp)
2313(7): lea 0x3053(%rip),%rax
231a(9): mov $0x1,0x18(%rsp)
2323(3): xor %r15d,%r15d
2326(8): mov $0x2,0x8(%rsp)
232e(5): mov %rax,0x48(%rsp)
2333(3): xor %r11d,%r11d
2336(3): mov %rbp,%rax
2339(3): mov %r12d,%r8d
233c(3): mov %r11,%rbp
233f(3): mov %rax,%r11
2342(6): nop 0x0(%rax,%rax,1)
2348(3): cmp %rbp,%r11
234b(4): setnz %r12b
234f(4): cmp $0xffffffff,%r11
2353(2): jnz 0xf(%rip)
2355(5): mov 0x10(%rsp),%rax
235a(4): cmp $0x0,0x0(%rax,%rbp,1)
235e(4): setnz %r12b
2362(3): test %r12b,%r12b
2365(6): jz 0x65b(%rip)
236b(5): cmp $0x2,0x8(%rsp)
2370(5): mov 0x10(%rsp),%rdi
2375(4): lea 0x0(%rdi,%rbp,1),%r9
2379(3): setnz %al
237c(4): and 0xd(%rsp),%al
2380(3): mov %eax,%r10d
2383(6): jz 0xad(%rip)
2389(5): mov 0x18(%rsp),%rax
238e(3): test %rax,%rax
2391(6): jz 0x42f(%rip)
2397(4): cmp $0xffffffff,%r11
239b(5): lea 0x0(%rbp,%rax,1),%rbx
23a0(2): jnz 0x30(%rip)
23a2(4): cmp $0x1,%rax
23a6(2): jbe 0x2a(%rip)
23a8(5): mov %r8b,0x38(%rsp)
23ad(5): mov %r10b,0x30(%rsp)
23b2(5): mov %r9,0x28(%rsp)
23b7(5): call 0xfffff109(%rip)
23bc(6): movzx 0x38(%rsp),%r8d
23c2(6): movzx 0x30(%rsp),%r10d
23c8(3): mov %rax,%r11
23cb(5): mov 0x28(%rsp),%r9
23d0(3): cmp %r11,%rbx
23d3(5): mov %r10b,0x28(%rsp)
23d8(6): jnbe 0x5b8(%rip)
23de(5): mov 0x18(%rsp),%rdx
23e3(5): mov 0x48(%rsp),%rsi
23e8(3): mov %r9,%rdi
23eb(5): mov %r11,0x40(%rsp)
23f0(5): mov %r8b,0x38(%rsp)
23f5(5): mov %r9,0x30(%rsp)
23fa(5): call 0xfffff166(%rip)
23ff(2): test %eax,%eax
2401(5): mov 0x30(%rsp),%r9
2406(6): movzx 0x38(%rsp),%r8d
240c(5): mov 0x40(%rsp),%r11
2411(6): jnz 0x57f(%rip)
2417(5): cmp $0x0,0xf(%rsp)
241c(6): movzx 0x28(%rsp),%r10d
2422(6): jnz 0xf83(%rip)
2428(8): nop 0x0(%rax,%rax,1)
2430(4): movzx (%r9),%ebx
2434(3): cmp $0x7e,%bl
2437(6): jnbe 0x321(%rip)
243d(7): lea 0x2fa8(%rip),%rcx
2444(3): movzx %bl,%edx
2447(4): movsxd 0x0(%rcx,%rdx,4),%rax
244b(3): add %rcx,%rax
244e(2): jmp %rax
2450(3): xor %r10d,%r10d
2453(4): cmp $0x1,%r11
2457(3): setnz %al
245a(4): cmp $0xffffffff,%r11
245e(2): jnz 0xe(%rip)
2460(5): mov 0x10(%rsp),%rax
2465(4): cmp $0x0,0x1(%rax)
2469(3): setnz %al
246c(5): cmp $0x2,0x8(%rsp)
2471(3): setz %dl
2474(2): test %al,%al
2476(6): jz 0x252(%rip)
247c(3): xor %r12d,%r12d
247f(2): xor %eax,%eax
2481(7): nop 0x0(%rax)
2488(5): cmp $0x1,0xd(%rsp)
248d(6): jnz 0x115(%rip)
2493(2): test %dl,%dl
2495(6): jnz 0x10d(%rip)
249b(5): mov 0x20(%rsp),%rsi
24a0(3): test %rsi,%rsi
24a3(2): jz 0x16(%rip)
24a5(2): mov %ebx,%edx
24a7(3): shr $0x5,%dl
24aa(3): movzx %dl,%edx
24ad(3): mov 0x0(%rsi,%rdx,4),%edx
24b0(3): bt %ebx,%edx
24b3(6): jb 0x150(%rip)
24b9(3): test %r10b,%r10b
24bc(6): jnz 0x147(%rip)
24c2(3): xor $0x1,%eax
24c5(4): add $0x1,%rbp
24c9(3): and %r8d,%eax
24cc(2): test %al,%al
24ce(2): jz 0x22(%rip)
24d0(3): cmp %r15,%r13
24d3(2): jbe 0x7(%rip)
24d5(5): mov $0x27,0x0(%r14,%r15,1)
24da(4): lea 0x1(%r15),%rax
24de(3): cmp %rax,%r13
24e1(2): jbe 0x8(%rip)
24e3(6): mov $0x27,0x1(%r14,%r15,1)
24e9(4): add $0x2,%r15
24ed(3): xor %r8d,%r8d
24f0(3): cmp %r13,%r15
24f3(2): jnb 0x6(%rip)
24f5(4): mov %bl,0x0(%r14,%r15,1)
24f9(5): movzx 0xe(%rsp),%edi
24fe(4): add $0x1,%r15
2502(5): mov $0x0,%eax
2507(3): test %r12b,%r12b
250a(3): cmove %eax,%edi
250d(5): mov %dil,0xe(%rsp)
2512(5): jmp 0xfffffe36(%rip)
2517(9): nop 0x0(%rax,%rax,1)
2520(3): xor %r10d,%r10d
2523(4): mov 0x8(%rsp),%eax
2527(3): cmp $0x2,%eax
252a(6): jz 0x5be(%rip)
2530(3): cmp $0x5,%eax
2533(6): jz 0x575(%rip)
2539(3): cmp $0x2,%eax
253c(5): mov $0x3f,%ebx
2541(3): setz %dl
2544(3): xor %r12d,%r12d
2547(2): xor %eax,%eax
2549(5): jmp 0xffffff3f(%rip)
254e(2): nop 
2550(3): xor %r10d,%r10d
2553(5): cmp $0x2,0x8(%rsp)
2558(6): jz 0x508(%rip)
255e(5): mov %r12b,0x7c(%rsp)
2563(2): xor %edx,%edx
2565(2): xor %eax,%eax
2567(5): mov $0x27,%ebx
256c(5): jmp 0xffffff1c(%rip)
2571(7): nop 0x0(%rax)
2578(5): mov $0x9,%edx
257d(5): mov $0x74,%ebx
2582(5): cmp $0x2,0x8(%rsp)
2587(3): setz %al
258a(4): and 0xf(%rsp),%al
258e(6): jnz 0x150(%rip)
2594(5): cmp $0x0,0xd(%rsp)
2599(2): jnz 0x67(%rip)
259b(2): mov %edx,%ebx
259d(3): xor %r12d,%r12d
25a0(2): xor %eax,%eax
25a2(5): cmp $0x0,0xf(%rsp)
25a7(6): jnz 0xfffffef4(%rip)
25ad(5): jmp 0xffffff0c(%rip)
25b2(6): nop 0x0(%rax,%rax,1)
25b8(5): mov $0x8,%edx
25bd(5): mov $0x62,%ebx
25c2(2): jmp 0xffffffd2(%rip)
25c4(4): nop 0x0(%rax)
25c8(5): cmp $0x2,0x8(%rsp)
25cd(6): jz 0x3d3(%rip)
25d3(5): cmp $0x0,0xd(%rsp)
25d8(6): jz 0x218(%rip)
25de(5): cmp $0x0,0xf(%rsp)
25e3(6): jz 0x20d(%rip)
25e9(6): cmp $0x0,0x18(%rsp)
25ef(6): jnz 0x3bc(%rip)
25f5(5): mov $0x5c,%ebx
25fa(6): nop 0x0(%rax,%rax,1)
2600(3): xor %r12d,%r12d
2603(5): cmp $0x2,0x8(%rsp)
2608(3): setz %dl
260b(5): cmp $0x0,0xf(%rsp)
2610(2): mov %edx,%eax
2612(6): jnz 0x856(%rip)
2618(3): mov %r8d,%eax
261b(3): xor $0x1,%eax
261e(2): and %dl,%al
2620(2): jz 0x31(%rip)
2622(3): cmp %r15,%r13
2625(2): jbe 0x7(%rip)
2627(5): mov $0x27,0x0(%r14,%r15,1)
262c(4): lea 0x1(%r15),%rdx
2630(3): cmp %rdx,%r13
2633(2): jbe 0x8(%rip)
2635(6): mov $0x24,0x1(%r14,%r15,1)
263b(4): lea 0x2(%r15),%rdx
263f(3): cmp %rdx,%r13
2642(2): jbe 0x8(%rip)
2644(6): mov $0x27,0x2(%r14,%r15,1)
264a(4): add $0x3,%r15
264e(3): mov %eax,%r8d
2651(3): cmp %r15,%r13
2654(2): jbe 0x7(%rip)
2656(5): mov $0x5c,0x0(%r14,%r15,1)
265b(4): add $0x1,%r15
265f(4): add $0x1,%rbp
2663(5): jmp 0xfffffe8d(%rip)
2668(8): nop 0x0(%rax,%rax,1)
2670(5): cmp $0x0,0xd(%rsp)
2675(6): jnz 0x1ce(%rip)
267b(2): xor %edx,%edx
267d(5): test $0x1,0x78(%rsp)
2682(6): jz 0xffffff19(%rip)
2688(4): add $0x1,%rbp
268c(5): jmp 0xfffffcbc(%rip)
2691(7): nop 0x0(%rax)
2698(5): cmp $0x2,0x8(%rsp)
269d(3): setz %dl
26a0(2): xor %eax,%eax
26a2(5): jmp 0xfffffde6(%rip)
26a7(9): nop 0x0(%rax,%rax,1)
26b0(5): mov $0x7,%edx
26b5(5): mov $0x61,%ebx
26ba(5): jmp 0xfffffeda(%rip)
26bf(1): nop 
26c0(5): cmp $0x2,0x8(%rsp)
26c5(3): setz %dl
26c8(3): test %rbp,%rbp
26cb(6): jnz 0xfffffdb1(%rip)
26d1(5): movzx 0xf(%rsp),%eax
26d6(2): and %dl,%al
26d8(6): jz 0xfffffdb0(%rip)
26de(3): mov %r11,%rbp
26e1(8): mov $0x2,0x8(%rsp)
26e9(5): jmp 0x700(%rip)
26ee(2): nop 
26f0(5): cmp $0x2,0x8(%rsp)
26f5(3): setz %dl
26f8(3): xor %r12d,%r12d
26fb(2): jmp 0xffffffd6(%rip)
26fd(3): nop (%rax)
2700(5): cmp $0x2,0x8(%rsp)
2705(5): mov $0x20,%ebx
270a(3): setz %dl
270d(2): jmp 0xffffffc4(%rip)
270f(1): nop 
2710(5): mov $0xd,%edx
2715(5): mov $0x72,%ebx
271a(5): jmp 0xfffffe68(%rip)
271f(1): nop 
2720(5): mov $0xc,%edx
2725(5): mov $0x66,%ebx
272a(5): jmp 0xfffffe6a(%rip)
272f(1): nop 
2730(5): mov $0xb,%edx
2735(5): mov $0x76,%ebx
273a(5): jmp 0xfffffe5a(%rip)
273f(1): nop 
2740(5): mov $0xa,%edx
2745(5): mov $0x6e,%ebx
274a(5): jmp 0xfffffe38(%rip)
274f(1): nop 
2750(3): xor %r10d,%r10d
2753(5): nop 0x0(%rax,%rax,1)
2758(6): cmp $0x1,0x58(%rsp)
275e(6): jnz 0x3aa(%rip)
2764(5): mov %r11,0x38(%rsp)
2769(5): mov %r8b,0x30(%rsp)
276e(5): mov %r10b,0x28(%rsp)
2773(5): call 0xffffef5d(%rip)
2778(3): mov (%rax),%rcx
277b(3): movzx %bl,%edx
277e(6): movzx 0x28(%rsp),%r10d
2784(6): movzx 0x30(%rsp),%r8d
278a(5): mov 0x38(%rsp),%r11
278f(5): mov $0x1,%edi
2794(4): movzx 0x0(%rcx,%rdx,2),%eax
2798(4): and $0x4000,%ax
279c(4): setnz %r12b
27a0(3): setz %al
27a3(4): and 0xd(%rsp),%al
27a7(2): test %al,%al
27a9(6): jnz 0x998(%rip)
27af(5): cmp $0x2,0x8(%rsp)
27b4(3): setz %dl
27b7(5): jmp 0xfffffcd1(%rip)
27bc(4): nop 0x0(%rax)
27c0(4): movzx (%r9),%ebx
27c4(3): cmp $0x7e,%bl
27c7(2): jnbe 0xffffff89(%rip)
27c9(7): lea 0x2e18(%rip),%rcx
27d0(3): movzx %bl,%edx
27d3(4): movsxd 0x0(%rcx,%rdx,4),%rax
27d7(3): add %rcx,%rax
27da(2): jmp %rax
27dc(4): nop 0x0(%rax)
27e0(3): xor %r10d,%r10d
27e3(5): cmp $0x0,0xd(%rsp)
27e8(6): jnz 0xfffffdf6(%rip)
27ee(2): nop 
27f0(5): mov $0x5c,%edx
27f5(5): mov $0x5c,%ebx
27fa(5): jmp 0xfffffd9a(%rip)
27ff(1): nop 
2800(5): mov $0xc,%edx
2805(3): xor %r10d,%r10d
2808(5): mov $0x66,%ebx
280d(5): jmp 0xfffffd87(%rip)
2812(6): nop 0x0(%rax,%rax,1)
2818(5): mov $0xa,%edx
281d(3): xor %r10d,%r10d
2820(5): mov $0x6e,%ebx
2825(5): jmp 0xfffffd5d(%rip)
282a(6): nop 0x0(%rax,%rax,1)
2830(5): mov $0x61,%ebx
2835(5): jmp 0xfffffdcb(%rip)
283a(6): nop 0x0(%rax,%rax,1)
2840(3): xor %r10d,%r10d
2843(5): cmp $0x2,0x8(%rsp)
2848(3): setz %dl
284b(5): cmp $0x0,0xf(%rsp)
2850(6): jnz 0xb9a(%rip)
2856(3): mov %r8d,%eax
2859(3): mov %r15,%rcx
285c(3): xor $0x1,%eax
285f(2): and %dl,%al
2861(2): jz 0x2f(%rip)
2863(3): cmp %r15,%r13
2866(2): jbe 0x7(%rip)
2868(5): mov $0x27,0x0(%r14,%r15,1)
286d(4): lea 0x1(%r15),%rcx
2871(3): cmp %rcx,%r13
2874(2): jbe 0x8(%rip)
2876(6): mov $0x24,0x1(%r14,%r15,1)
287c(4): lea 0x2(%r15),%rcx
2880(3): cmp %rcx,%r13
2883(6): jnbe 0x636(%rip)
2889(4): lea 0x3(%r15),%rcx
288d(3): mov %eax,%r8d
2890(3): cmp %rcx,%r13
2893(2): jbe 0x7(%rip)
2895(5): mov $0x5c,0x0(%r14,%rcx,1)
289a(5): cmp $0x2,0x8(%rsp)
289f(4): lea 0x1(%rcx),%r15
28a3(6): jz 0x606(%rip)
28a9(4): lea 0x1(%rbp),%rax
28ad(3): cmp %r11,%rax
28b0(2): jnb 0x1b(%rip)
28b2(5): mov 0x10(%rsp),%rax
28b7(5): movzx 0x1(%rax,%rbp,1),%eax
28bc(4): mov %al,0x28(%rsp)
28c0(3): sub $0x30,%eax
28c3(2): cmp $0x9,%al
28c5(6): jbe 0x834(%rip)
28cb(3): mov %r12d,%eax
28ce(5): mov $0x30,%ebx
28d3(3): xor %r12d,%r12d
28d6(5): jmp 0xfffffbb2(%rip)
28db(5): nop 0x0(%rax,%rax,1)
28e0(5): cmp $0x2,0x8(%rsp)
28e5(3): mov %r10d,%r12d
28e8(3): setz %dl
28eb(3): xor %r10d,%r10d
28ee(2): xor %eax,%eax
28f0(5): jmp 0xfffffb98(%rip)
28f5(3): nop (%rax)
28f8(5): cmp $0x2,0x8(%rsp)
28fd(3): setz %dl
2900(3): xor %r10d,%r10d
2903(5): jmp 0xfffffdc5(%rip)
2908(8): nop 0x0(%rax,%rax,1)
2910(5): cmp $0x2,0x8(%rsp)
2915(3): setz %dl
2918(3): xor %r10d,%r10d
291b(3): xor %r12d,%r12d
291e(5): jmp 0xfffffdb3(%rip)
2923(5): nop 0x0(%rax,%rax,1)
2928(5): cmp $0x2,0x8(%rsp)
292d(3): mov %r10d,%r12d
2930(5): mov $0x20,%ebx
2935(3): setz %dl
2938(3): xor %r10d,%r10d
293b(5): jmp 0xfffffd96(%rip)
2940(5): mov $0xd,%edx
2945(3): xor %r10d,%r10d
2948(5): mov $0x72,%ebx
294d(5): jmp 0xfffffc35(%rip)
2952(6): nop 0x0(%rax,%rax,1)
2958(5): mov $0x76,%ebx
295d(5): jmp 0xfffffca3(%rip)
2962(6): nop 0x0(%rax,%rax,1)
2968(5): mov $0x9,%edx
296d(3): xor %r10d,%r10d
2970(5): mov $0x74,%ebx
2975(5): jmp 0xfffffc0d(%rip)
297a(6): nop 0x0(%rax,%rax,1)
2980(5): mov $0x62,%ebx
2985(5): jmp 0xfffffc7b(%rip)
298a(6): nop 0x0(%rax,%rax,1)
2990(3): xor %r10d,%r10d
2993(5): jmp 0xfffffa9d(%rip)
2998(8): nop 0x0(%rax,%rax,1)
29a0(5): cmp $0x0,0xf(%rsp)
29a5(6): jnz 0x96b(%rip)
29ab(4): add $0x1,%rbp
29af(3): mov %r8d,%eax
29b2(3): xor %r12d,%r12d
29b5(5): mov $0x5c,%ebx
29ba(5): jmp 0xfffffb12(%rip)
29bf(1): nop 
29c0(5): cmp $0x2,0x8(%rsp)
29c5(5): movzx 0xf(%rsp),%ebx
29ca(3): mov %r8d,%r12d
29cd(3): mov %r11,%rbp
29d0(3): setz %dl
29d3(2): mov %ebx,%eax
29d5(3): test %r15,%r15
29d8(3): setz %cl
29db(2): and %edx,%eax
29dd(2): and %cl,%al
29df(6): jnz 0xa67(%rip)
29e5(2): mov %ebx,%eax
29e7(3): xor $0x1,%eax
29ea(2): and %al,%dl
29ec(6): jz 0x970(%rip)
29f2(5): cmp $0x0,0x7c(%rsp)
29f7(6): jz 0x963(%rip)
29fd(5): cmp $0x0,0xe(%rsp)
2a02(6): jnz 0x9fb(%rip)
2a08(3): test %r13,%r13
2a0b(3): setz %al
2a0e(6): cmp $0x0,0x50(%rsp)
2a14(3): setnz %dl
2a17(2): and %dl,%al
2a19(6): jz 0xa23(%rip)
2a1f(5): mov 0x50(%rsp),%r13
2a24(7): lea 0x2942(%rip),%rbx
2a2b(4): mov $0x27,(%r14)
2a2f(8): mov $0x2,0x8(%rsp)
2a37(6): mov $0x1,%r15d
2a3d(9): mov $0x1,0x18(%rsp)
2a46(5): mov $0x0,0xf(%rsp)
2a4b(5): mov %rbx,0x48(%rsp)
2a50(4): mov %al,0x7c(%rsp)
2a54(5): jmp 0xfffff8df(%rip)
2a59(7): nop 0x0(%rax)
2a60(5): cmp $0x0,0xf(%rsp)
2a65(6): jnz 0x8ab(%rip)
2a6b(3): test %r13,%r13
2a6e(6): jz 0x402(%rip)
2a74(2): xor %edx,%edx
2a76(6): cmp $0x0,0x50(%rsp)
2a7c(6): jnz 0x3f4(%rip)
2a82(5): mov %r13,0x50(%rsp)
2a87(4): add $0x3,%r15
2a8b(2): xor %eax,%eax
2a8d(5): mov %r12b,0x7c(%rsp)
2a92(3): xor %r8d,%r8d
2a95(3): mov %rdx,%r13
2a98(5): mov $0x27,%ebx
2a9d(5): jmp 0xfffffa1c(%rip)
2aa2(6): nop 0x0(%rax,%rax,1)
2aa8(5): test $0x4,0x78(%rsp)
2aad(2): jz 0x23(%rip)
2aaf(4): lea 0x2(%rbp),%rcx
2ab3(3): cmp %r11,%rcx
2ab6(2): jnb 0x1a(%rip)
2ab8(5): mov 0x10(%rsp),%rax
2abd(5): cmp $0x3f,0x1(%rax,%rbp,1)
2ac2(6): jz 0x790(%rip)
2ac8(8): nop 0x0(%rax,%rax,1)
2ad0(2): xor %edx,%edx
2ad2(3): xor %r12d,%r12d
2ad5(2): xor %eax,%eax
2ad7(5): mov $0x3f,%ebx
2adc(5): jmp 0xfffff9ac(%rip)
2ae1(7): nop 0x0(%rax)
2ae8(5): cmp $0x0,0xf(%rsp)
2aed(6): jnz 0x823(%rip)
2af3(3): xor %r12d,%r12d
2af6(2): xor %eax,%eax
2af8(5): mov $0x3f,%ebx
2afd(5): jmp 0xfffff9bc(%rip)
2b02(6): nop 0x0(%rax,%rax,1)
2b08(8): lea 0xa0(%rsp),%rax
2b10(4): cmp $0xffffffff,%r11
2b14(c): mov $0x0,0xa0(%rsp)
2b20(5): mov %rax,0x28(%rsp)
2b25(2): jnz 0x2f(%rip)
2b27(5): mov 0x10(%rsp),%rdi
2b2c(5): mov %r8b,0x40(%rsp)
2b31(5): mov %r10b,0x38(%rsp)
2b36(5): mov %r9,0x30(%rsp)
2b3b(5): call 0xffffe985(%rip)
2b40(6): movzx 0x40(%rsp),%r8d
2b46(6): movzx 0x38(%rsp),%r10d
2b4c(3): mov %rax,%r11
2b4f(5): mov 0x30(%rsp),%r9
2b54(8): lea 0x9c(%rsp),%rax
2b5c(2): xor %ecx,%ecx
2b5e(4): mov %bl,0x7e(%rsp)
2b62(5): mov %r8b,0x7d(%rsp)
2b67(3): mov %rcx,%rbx
2b6a(8): mov %r9,0x88(%rsp)
2b72(5): mov %rax,0x38(%rsp)
2b77(5): mov %r10b,0x7f(%rsp)
2b7c(8): mov %r15,0x80(%rsp)
2b84(5): mov %r14,0x40(%rsp)
2b89(5): mov %r13,0x70(%rsp)
2b8e(5): mov %r11,0x30(%rsp)
2b93(5): mov 0x10(%rsp),%rax
2b98(5): lea 0x0(%rbp,%rbx,1),%r14
2b9d(5): mov 0x30(%rsp),%rdx
2ba2(5): mov 0x28(%rsp),%rcx
2ba7(5): mov 0x38(%rsp),%rdi
2bac(4): lea 0x0(%rax,%r14,1),%r13
2bb0(3): sub %r14,%rdx
2bb3(3): mov %r13,%rsi
2bb6(5): call 0x204a(%rip)
2bbb(3): test %rax,%rax
2bbe(3): mov %rax,%r15
2bc1(2): jz 0x50(%rip)
2bc3(4): cmp $0xffffffff,%rax
2bc7(6): jz 0x61e(%rip)
2bcd(4): cmp $0xfffffffe,%rax
2bd1(6): jz 0x5a0(%rip)
2bd7(5): cmp $0x2,0x8(%rsp)
2bdc(3): setz %al
2bdf(4): and 0xf(%rsp),%al
2be3(6): jnz 0x19d(%rip)
2be9(7): mov 0x9c(%rsp),%edi
2bf0(5): call 0xffffead0(%rip)
2bf5(5): mov 0x28(%rsp),%rdi
2bfa(2): test %eax,%eax
2bfc(5): mov $0x0,%eax
2c01(4): cmove %eax,%r12d
2c05(3): add %r15,%rbx
2c08(5): call 0xffffeaa8(%rip)
2c0d(2): test %eax,%eax
2c0f(2): jz 0xffffff84(%rip)
2c11(3): mov %r12d,%edx
2c14(3): mov %rbx,%rdi
2c17(6): movzx 0x7d(%rsp),%r8d
2c1d(3): xor $0x1,%edx
2c20(5): movzx 0x7e(%rsp),%ebx
2c25(6): movzx 0x7f(%rsp),%r10d
2c2b(4): and 0xd(%rsp),%dl
2c2f(8): mov 0x80(%rsp),%r15
2c37(5): mov 0x40(%rsp),%r14
2c3c(5): mov 0x70(%rsp),%r13
2c41(5): mov 0x30(%rsp),%r11
2c46(4): cmp $0x1,%rdi
2c4a(6): jbe 0x601(%rip)
2c50(3): mov %rdi,%rcx
2c53(2): xor %esi,%esi
2c55(6): movzx 0xf(%rsp),%r9d
2c5b(3): add %rbp,%rcx
2c5e(5): mov 0x10(%rsp),%rdi
2c63(5): jmp 0xbb(%rip)
2c68(8): nop 0x0(%rax,%rax,1)
2c70(5): cmp $0x2,0x8(%rsp)
2c75(3): setz %al
2c78(3): test %r9b,%r9b
2c7b(6): jnz 0x4b5(%rip)
2c81(3): mov %r8d,%esi
2c84(3): xor $0x1,%esi
2c87(3): and %sil,%al
2c8a(2): jz 0x31(%rip)
2c8c(3): cmp %r15,%r13
2c8f(2): jbe 0x7(%rip)
2c91(5): mov $0x27,0x0(%r14,%r15,1)
2c96(4): lea 0x1(%r15),%rsi
2c9a(3): cmp %rsi,%r13
2c9d(2): jbe 0x8(%rip)
2c9f(6): mov $0x24,0x1(%r14,%r15,1)
2ca5(4): lea 0x2(%r15),%rsi
2ca9(3): cmp %rsi,%r13
2cac(2): jbe 0x8(%rip)
2cae(6): mov $0x27,0x2(%r14,%r15,1)
2cb4(4): add $0x3,%r15
2cb8(3): mov %eax,%r8d
2cbb(3): cmp %r15,%r13
2cbe(2): jbe 0x7(%rip)
2cc0(5): mov $0x5c,0x0(%r14,%r15,1)
2cc5(4): lea 0x1(%r15),%rax
2cc9(3): cmp %rax,%r13
2ccc(2): jbe 0xf(%rip)
2cce(2): mov %ebx,%eax
2cd0(3): shr $0x6,%al
2cd3(3): add $0x30,%eax
2cd6(5): mov %al,0x1(%r14,%r15,1)
2cdb(4): lea 0x2(%r15),%rax
2cdf(3): cmp %rax,%r13
2ce2(2): jbe 0x12(%rip)
2ce4(2): mov %ebx,%eax
2ce6(3): shr $0x3,%al
2ce9(3): and $0x7,%eax
2cec(3): add $0x30,%eax
2cef(5): mov %al,0x2(%r14,%r15,1)
2cf4(3): and $0x7,%ebx
2cf7(4): add $0x1,%rbp
2cfb(4): add $0x3,%r15
2cff(3): add $0x30,%ebx
2d02(3): cmp %rcx,%rbp
2d05(6): jnb 0xfffff7eb(%rip)
2d0b(2): mov %edx,%esi
2d0d(3): cmp %r15,%r13
2d10(2): jbe 0x6(%rip)
2d12(4): mov %bl,0x0(%r14,%r15,1)
2d16(4): movzx 0x0(%rdi,%rbp,1),%ebx
2d1a(4): add $0x1,%r15
2d1e(2): test %dl,%dl
2d20(6): jnz 0xffffff50(%rip)
2d26(2): mov %esi,%eax
2d28(3): xor $0x1,%eax
2d2b(3): and %r8d,%eax
2d2e(3): test %r10b,%r10b
2d31(2): jz 0x10(%rip)
2d33(3): cmp %r15,%r13
2d36(2): jbe 0x7(%rip)
2d38(5): mov $0x5c,0x0(%r14,%r15,1)
2d3d(4): add $0x1,%r15
2d41(4): add $0x1,%rbp
2d45(3): cmp %rcx,%rbp
2d48(6): jnb 0xfffff784(%rip)
2d4e(2): test %al,%al
2d50(6): jz 0x3fe(%rip)
2d56(3): cmp %r15,%r13
2d59(2): jbe 0x7(%rip)
2d5b(5): mov $0x27,0x0(%r14,%r15,1)
2d60(4): lea 0x1(%r15),%rax
2d64(3): cmp %rax,%r13
2d67(2): jbe 0x8(%rip)
2d69(6): mov $0x27,0x1(%r14,%r15,1)
2d6f(4): add $0x2,%r15
2d73(3): xor %r10d,%r10d
2d76(3): xor %r8d,%r8d
2d79(2): jmp 0xffffff94(%rip)
2d7b(5): nop 0x0(%rax,%rax,1)
2d80(4): cmp $0x1,%r15
2d84(6): jz 0xfffffe65(%rip)
2d8a(5): mov 0x10(%rsp),%rdi
2d8f(4): lea 0x0(%rdi,%r15,1),%rcx
2d93(5): lea 0x1(%rdi,%r14,1),%rdx
2d98(4): lea 0x0(%rcx,%r14,1),%r8
2d9c(2): jmp 0x11(%rip)
2d9e(2): nop 
2da0(4): add $0x1,%rdx
2da4(3): cmp %rdx,%r8
2da7(6): jz 0xfffffe42(%rip)
2dad(3): movzx (%rdx),%ecx
2db0(3): sub $0x5b,%ecx
2db3(3): cmp $0x21,%cl
2db6(2): jnbe 0xffffffea(%rip)
2db8(5): mov $0x1,%esi
2dbd(3): shl/sal %cl,%rsi
2dc0(3): mov %rsi,%rcx
2dc3(a): mov $0x8589934635,%rsi
2dcd(3): test %rsi,%rcx
2dd0(2): jz 0xffffffd0(%rip)
2dd2(5): mov 0x40(%rsp),%r14
2dd7(5): mov 0x70(%rsp),%r13
2ddc(5): mov 0x30(%rsp),%rbp
2de1(8): mov $0x2,0x8(%rsp)
2de9(5): cmp $0x0,0xd(%rsp)
2dee(2): jz 0x12(%rip)
2df0(2): test %al,%al
2df2(5): mov $0x4,%eax
2df7(5): cmove 0x8(%rsp),%eax
2dfc(4): mov %eax,0x8(%rsp)
2e00(4): sub $0x8,%rsp
2e04(3): mov %rbp,%rcx
2e07(3): mov %r13,%rsi
2e0a(4): push 0x68(%rsp)
2e0e(4): push 0x78(%rsp)
2e12(3): mov %r14,%rdi
2e15(2): push $0x0
2e17(8): mov 0x98(%rsp),%r9d
2e1f(5): mov 0x28(%rsp),%r8d
2e24(5): mov 0x30(%rsp),%rdx
2e29(4): and $0xfd,%r9d
2e2d(5): call 0xfffff433(%rip)
2e32(4): add $0x20,%rsp
2e36(3): mov %rax,%r15
2e39(8): mov 0xa8(%rsp),%rbx
2e41(9): xor $0x28,%rbx
2e4a(3): mov %r15,%rax
2e4d(6): jnz 0x606(%rip)
2e53(7): add $0xb8,%rsp
2e5a(1): pop %rbx
2e5b(1): pop %rbp
2e5c(2): pop %r12
2e5e(2): pop %r13
2e60(2): pop %r14
2e62(2): pop %r15
2e64(1): ret near (%rsp)
2e65(3): nop (%rax)
2e68(3): mov %r11,%rbp
2e6b(5): jmp 0xffffff7e(%rip)
2e70(3): cmp %r15,%r13
2e73(2): jbe 0x7(%rip)
2e75(5): mov $0x27,0x0(%r14,%r15,1)
2e7a(4): lea 0x1(%r15),%rax
2e7e(3): cmp %rax,%r13
2e81(2): jbe 0x8(%rip)
2e83(6): mov $0x5c,0x1(%r14,%r15,1)
2e89(4): lea 0x2(%r15),%rax
2e8d(3): cmp %rax,%r13
2e90(6): jbe 0x5f2(%rip)
2e96(3): mov %r13,%rdx
2e99(6): mov $0x27,0x2(%r14,%r15,1)
2e9f(5): mov 0x50(%rsp),%r13
2ea4(5): jmp 0xfffffbde(%rip)
2ea9(3): mov %r12d,%eax
2eac(5): mov $0x30,%ebx
2eb1(3): xor %r12d,%r12d
2eb4(5): jmp 0xfffff605(%rip)
2eb9(6): mov $0x27,0x2(%r14,%r15,1)
2ebf(5): jmp 0xfffff9ca(%rip)
2ec4(2): test %ebx,%ebx
2ec6(6): jnz 0xfffff42d(%rip)
2ecc(5): mov $0x1,0xd(%rsp)
2ed1(3): test %r13,%r13
2ed4(6): jnz 0x596(%rip)
2eda(7): lea 0x248c(%rip),%rax
2ee1(9): mov $0x0,0x50(%rsp)
2eea(5): mov $0x1,0xe(%rsp)
2eef(5): mov $0x0,0x7c(%rsp)
2ef4(3): xor %r12d,%r12d
2ef7(5): mov $0x0,0xf(%rsp)
2efc(9): mov $0x1,0x18(%rsp)
2f05(5): mov %rax,0x48(%rsp)
2f0a(6): mov $0x1,%r15d
2f10(8): mov $0x2,0x8(%rsp)
2f18(5): jmp 0xfffff41b(%rip)
2f1d(3): nop (%rax)
2f20(2): test %ebx,%ebx
2f22(6): jnz 0x3fb(%rip)
2f28(3): test %r13,%r13
2f2b(6): jz 0x22b(%rip)
2f31(4): mov $0x22,(%r14)
2f35(5): mov $0x1,0xe(%rsp)
2f3a(3): xor %r12d,%r12d
2f3d(5): mov $0x0,0x7c(%rsp)
2f42(9): mov $0x0,0x50(%rsp)
2f4b(7): lea 0x2419(%rip),%rax
2f52(5): mov $0x0,0xf(%rsp)
2f57(5): mov $0x1,0xd(%rsp)
2f5c(9): mov $0x1,0x18(%rsp)
2f65(6): mov $0x1,%r15d
2f6b(5): mov %rax,0x48(%rsp)
2f70(5): jmp 0xfffff3c3(%rip)
2f75(7): lea 0x23ef(%rip),%rax
2f7c(5): mov $0x1,0xe(%rsp)
2f81(5): mov $0x0,0x7c(%rsp)
2f86(3): xor %r12d,%r12d
2f89(9): mov $0x0,0x50(%rsp)
2f92(5): mov $0x1,0xf(%rsp)
2f97(5): mov $0x1,0xd(%rsp)
2f9c(9): mov $0x1,0x18(%rsp)
2fa5(3): xor %r15d,%r15d
2fa8(5): mov %rax,0x48(%rsp)
2fad(8): mov $0x5,0x8(%rsp)
2fb5(5): jmp 0xfffff37e(%rip)
2fba(5): mov $0x1,0xe(%rsp)
2fbf(5): mov $0x0,0x7c(%rsp)
2fc4(3): xor %r12d,%r12d
2fc7(9): mov $0x0,0x50(%rsp)
2fd0(5): mov $0x0,0xf(%rsp)
2fd5(3): xor %r15d,%r15d
2fd8(5): mov $0x1,0xd(%rsp)
2fdd(9): mov $0x0,0x18(%rsp)
2fe6(9): mov $0x0,0x48(%rsp)
2fef(5): jmp 0xfffff344(%rip)
2ff4(5): cmp $0xa,0x8(%rsp)
2ff9(2): jz 0x58(%rip)
2ffb(7): lea 0x236d(%rip),%rsi
3002(2): xor %edi,%edi
3004(5): mov $0x5,%edx
3009(5): call 0xffffe497(%rip)
300e(3): mov %rax,%rcx
3011(5): mov %rax,0x68(%rsp)
3016(7): lea 0x2352(%rip),%rax
301d(3): cmp %rax,%rcx
3020(6): jz 0x39e(%rip)
3026(7): lea 0x2340(%rip),%rsi
302d(2): xor %edi,%edi
302f(5): mov $0x5,%edx
3034(5): call 0xffffe46c(%rip)
3039(3): mov %rax,%rcx
303c(5): mov %rax,0x60(%rsp)
3041(7): lea 0x2325(%rip),%rax
3048(3): cmp %rax,%rcx
304b(6): jz 0x389(%rip)
3051(3): xor %r15d,%r15d
3054(2): test %ebx,%ebx
3056(6): jz 0x1c7(%rip)
305c(2): test %ebx,%ebx
305e(5): mov 0x60(%rsp),%rbx
3063(5): setnz 0xf(%rsp)
3068(3): xor %r12d,%r12d
306b(3): mov %rbx,%rdi
306e(5): call 0xffffe452(%rip)
3073(5): mov %rbx,0x48(%rsp)
3078(5): mov %rax,0x18(%rsp)
307d(5): mov $0x1,0xe(%rsp)
3082(5): mov $0x0,0x7c(%rsp)
3087(9): mov $0x0,0x50(%rsp)
3090(5): mov $0x1,0xd(%rsp)
3095(5): jmp 0xfffff29e(%rip)
309a(5): mov $0x1,0xe(%rsp)
309f(5): mov $0x0,0x7c(%rsp)
30a4(3): xor %r12d,%r12d
30a7(9): mov $0x0,0x50(%rsp)
30b0(5): mov $0x0,0xf(%rsp)
30b5(3): xor %r15d,%r15d
30b8(5): mov $0x0,0xd(%rsp)
30bd(9): mov $0x0,0x18(%rsp)
30c6(9): mov $0x0,0x48(%rsp)
30cf(5): jmp 0xfffff264(%rip)
30d4(5): mov $0x1,0xe(%rsp)
30d9(5): mov $0x0,0x7c(%rsp)
30de(3): xor %r12d,%r12d
30e1(9): mov $0x0,0x50(%rsp)
30ea(5): mov $0x1,0xf(%rsp)
30ef(5): mov $0x1,0xd(%rsp)
30f4(5): jmp 0xfffff21f(%rip)
30f9(3): cmp %r15,%r13
30fc(2): jbe 0x7(%rip)
30fe(5): mov $0x30,0x0(%r14,%r15,1)
3103(4): lea 0x2(%rcx),%rax
3107(3): cmp %rax,%r13
310a(2): jbe 0x8(%rip)
310c(6): mov $0x30,0x2(%r14,%rcx,1)
3112(3): mov %r12d,%eax
3115(4): lea 0x3(%rcx),%r15
3119(3): xor %r12d,%r12d
311c(5): mov $0x30,%ebx
3121(5): jmp 0xfffff367(%rip)
3126(a): nop 0x0(%rax,%rax,1)
3130(5): movzx 0xf(%rsp),%ebx
3135(3): mov %r11,%rbp
3138(4): mov %bl,0xd(%rsp)
313c(5): jmp 0xfffffcad(%rip)
3141(5): movzx 0xd(%rsp),%edx
3146(3): xor %r12d,%r12d
3149(5): jmp 0xfffffb07(%rip)
314e(3): xor %r10d,%r10d
3151(5): jmp 0xfffffbbc(%rip)
3156(9): mov $0x0,0x50(%rsp)
315f(5): mov $0x1,0xe(%rsp)
3164(3): xor %r12d,%r12d
3167(5): mov $0x0,0x7c(%rsp)
316c(5): jmp 0xfffffddf(%rip)
3171(5): mov 0x30(%rsp),%r11
3176(3): mov %r14,%rsi
3179(3): mov %r13,%rcx
317c(3): mov %rbx,%rax
317f(3): mov %rbx,%rdi
3182(6): movzx 0x7d(%rsp),%r8d
3188(5): movzx 0x7e(%rsp),%ebx
318d(8): mov 0x88(%rsp),%r9
3195(3): cmp %r11,%rsi
3198(6): movzx 0x7f(%rsp),%r10d
319e(8): mov 0x80(%rsp),%r15
31a6(5): mov 0x40(%rsp),%r14
31ab(5): mov 0x70(%rsp),%r13
31b0(2): jnb 0x28(%rip)
31b2(3): cmp $0x0,(%rcx)
31b5(2): jnz 0x12(%rip)
31b7(2): jmp 0x21(%rip)
31b9(7): nop 0x0(%rax)
31c0(5): cmp $0x0,0x0(%r9,%rax,1)
31c5(2): jz 0x10(%rip)
31c7(4): add $0x1,%rax
31cb(5): lea 0x0(%rbp,%rax,1),%rdx
31d0(3): cmp %rdx,%r11
31d3(2): jnbe 0xffffffed(%rip)
31d5(3): mov %rax,%rdi
31d8(5): movzx 0xd(%rsp),%edx
31dd(3): xor %r12d,%r12d
31e0(5): jmp 0xfffffa66(%rip)
31e5(3): mov %rbx,%rdi
31e8(6): movzx 0x7d(%rsp),%r8d
31ee(5): movzx 0x7e(%rsp),%ebx
31f3(6): movzx 0x7f(%rsp),%r10d
31f9(8): mov 0x80(%rsp),%r15
3201(3): xor %r12d,%r12d
3204(5): mov 0x40(%rsp),%r14
3209(5): mov 0x70(%rsp),%r13
320e(5): mov 0x30(%rsp),%r11
3213(5): movzx 0xd(%rsp),%edx
3218(5): jmp 0xfffffa2e(%rip)
321d(5): mov 0x68(%rsp),%rdx
3222(3): movzx (%rdx),%eax
3225(2): test %al,%al
3227(6): jz 0xfffffe35(%rip)
322d(3): nop (%rax)
3230(3): cmp %r15,%r13
3233(2): jbe 0x6(%rip)
3235(4): mov %al,0x0(%r14,%r15,1)
3239(4): add $0x1,%r15
323d(5): movzx 0x0(%rdx,%r15,1),%eax
3242(2): test %al,%al
3244(2): jnz 0xffffffec(%rip)
3246(5): jmp 0xfffffe16(%rip)
324b(2): mov %edx,%eax
324d(5): jmp 0xfffff55a(%rip)
3252(4): movzx 0x0(%rax,%rcx,1),%ebx
3256(3): cmp $0x3e,%bl
3259(6): jnbe 0xfffff877(%rip)
325f(a): mov $0x8070630310989004800,%rax
3269(4): bt %rbx,%rax
326d(6): jnb 0xfffff863(%rip)
3273(5): cmp $0x0,0xf(%rsp)
3278(6): jnz 0x1ea(%rip)
327e(3): cmp %r15,%r13
3281(2): jbe 0x7(%rip)
3283(5): mov $0x3f,0x0(%r14,%r15,1)
3288(4): lea 0x1(%r15),%rax
328c(3): cmp %rax,%r13
328f(2): jbe 0x8(%rip)
3291(6): mov $0x22,0x1(%r14,%r15,1)
3297(4): lea 0x2(%r15),%rax
329b(3): cmp %rax,%r13
329e(2): jbe 0x8(%rip)
32a0(6): mov $0x22,0x2(%r14,%r15,1)
32a6(4): lea 0x3(%r15),%rax
32aa(3): cmp %rax,%r13
32ad(2): jbe 0x8(%rip)
32af(6): mov $0x3f,0x3(%r14,%r15,1)
32b5(4): add $0x4,%r15
32b9(2): xor %edx,%edx
32bb(3): xor %r12d,%r12d
32be(2): xor %eax,%eax
32c0(3): mov %rcx,%rbp
32c3(5): jmp 0xfffff1c5(%rip)
32c8(2): test %ebx,%ebx
32ca(6): jz 0x18e(%rip)
32d0(7): lea 0x2096(%rip),%rax
32d7(5): mov $0x1,0xe(%rsp)
32dc(5): mov $0x0,0x7c(%rsp)
32e1(3): xor %r12d,%r12d
32e4(9): mov $0x0,0x50(%rsp)
32ed(5): mov $0x1,0xf(%rsp)
32f2(5): mov $0x0,0xd(%rsp)
32f7(9): mov $0x1,0x18(%rsp)
3300(3): xor %r15d,%r15d
3303(5): mov %rax,0x48(%rsp)
3308(5): jmp 0xfffff02b(%rip)
330d(3): nop (%rax)
3310(3): mov %r11,%rbp
3313(5): movzx 0xf(%rsp),%eax
3318(5): jmp 0xfffffad1(%rip)
331d(7): lea 0x2047(%rip),%rax
3324(5): mov $0x1,0xe(%rsp)
3329(5): mov $0x0,0x7c(%rsp)
332e(3): xor %r12d,%r12d
3331(9): mov $0x0,0x50(%rsp)
333a(5): mov $0x1,0xf(%rsp)
333f(5): mov $0x1,0xd(%rsp)
3344(9): mov $0x1,0x18(%rsp)
334d(3): xor %r15d,%r15d
3350(5): mov %rax,0x48(%rsp)
3355(5): jmp 0xffffefde(%rip)
335a(2): mov %edx,%eax
335c(5): mov 0x48(%rsp),%rbx
3361(3): test %rbx,%rbx
3364(2): jz 0x2e(%rip)
3366(2): test %al,%al
3368(2): jz 0x2a(%rip)
336a(3): movzx (%rbx),%ecx
336d(3): mov %rbx,%rax
3370(2): test %cl,%cl
3372(2): jz 0x20(%rip)
3374(3): mov %r15,%rdx
3377(3): sub %r15,%rax
337a(3): cmp %rdx,%r13
337d(2): jbe 0x6(%rip)
337f(4): mov %cl,0x0(%r14,%rdx,1)
3383(4): add $0x1,%rdx
3387(4): movzx 0x0(%rax,%rdx,1),%ecx
338b(2): test %cl,%cl
338d(2): jnz 0xffffffed(%rip)
338f(3): mov %rdx,%r15
3392(3): cmp %r15,%r13
3395(6): jbe 0xfffffaa4(%rip)
339b(5): mov $0x0,0x0(%r14,%r15,1)
33a0(5): jmp 0xfffffa99(%rip)
33a5(5): cmp $0x2,0x8(%rsp)
33aa(5): movzx 0xf(%rsp),%ebx
33af(3): mov %r11,%rbp
33b2(3): setz %al
33b5(4): mov %bl,0xd(%rsp)
33b9(5): jmp 0xfffffa30(%rip)
33be(4): mov 0x8(%rsp),%esi
33c2(3): mov %rcx,%rdi
33c5(5): call 0xffffedab(%rip)
33ca(5): mov %rax,0x68(%rsp)
33cf(5): jmp 0xfffffc57(%rip)
33d4(4): mov 0x8(%rsp),%esi
33d8(3): mov %rcx,%rdi
33db(5): call 0xffffed95(%rip)
33e0(5): mov %rax,0x60(%rsp)
33e5(5): jmp 0xfffffc6c(%rip)
33ea(5): movzx 0xf(%rsp),%ebx
33ef(3): mov %r11,%rbp
33f2(2): mov %edx,%eax
33f4(4): mov %bl,0xd(%rsp)
33f8(5): jmp 0xfffff9f1(%rip)
33fd(4): sub $0x8,%rsp
3401(6): mov $0x5,%r8d
3407(3): mov %r11,%rcx
340a(4): push 0x68(%rsp)
340e(4): push 0x78(%rsp)
3412(3): mov %r14,%rdi
3415(4): push 0x38(%rsp)
3419(8): mov 0x98(%rsp),%r9d
3421(5): mov 0x30(%rsp),%rdx
3426(5): mov 0x70(%rsp),%rsi
342b(5): call 0xffffee35(%rip)
3430(4): add $0x20,%rsp
3434(3): mov %rax,%r15
3437(5): jmp 0xfffffa02(%rip)
343c(5): movzx 0x7c(%rsp),%eax
3441(5): jmp 0xffffff1b(%rip)
3446(8): mov $0x2,0x8(%rsp)
344e(5): jmp 0xfffff99b(%rip)
3453(5): call 0xffffe07d(%rip)
3458(5): mov $0x0,0xd(%rsp)
345d(5): jmp 0xfffffa74(%rip)
3462(3): mov %r11,%rbp
3465(5): jmp 0xfffff99b(%rip)
346a(5): mov $0x1,0xe(%rsp)
346f(2): xor %eax,%eax
3471(3): xor %r12d,%r12d
3474(9): mov $0x0,0x50(%rsp)
347d(5): jmp 0xfffff5a7(%rip)
3482(3): mov %r13,%rdx
3485(5): mov 0x50(%rsp),%r13
348a(5): jmp 0xfffff5f8(%rip)
348f(5): call 0xffffdf81(%rip)

"quotearg_n_options" :
34a0(2): push %r15
34a2(2): push %r14
34a4(3): movsxd %edi,%r15
34a7(2): push %r13
34a9(2): push %r12
34ab(3): mov %rdx,%r14
34ae(1): push %rbp
34af(1): push %rbx
34b0(3): mov %rcx,%rbp
34b3(4): sub $0x28,%rsp
34b7(5): mov %rsi,0x8(%rsp)
34bc(5): call 0xffffdf64(%rip)
34c1(3): mov %rax,%r13
34c4(2): mov (%rax),%eax
34c6(3): test %r15d,%r15d
34c9(7): mov 0x203b90(%rip),%rbx
34d0(4): mov %eax,0x18(%rsp)
34d4(6): js 0x16d(%rip)
34da(7): cmp %r15d,0x203b77(%rip)
34e1(2): jnle 0x64(%rip)
34e3(7): cmp $0x7fffffff,%r15d
34ea(6): jz 0x15c(%rip)
34f0(4): lea 0x1(%r15),%r12d
34f4(7): lea 0x203b75(%rip),%rax
34fb(3): movsxd %r12d,%rsi
34fe(4): shl/sal $0x4,%rsi
3502(3): cmp %rax,%rbx
3505(6): jz 0x11b(%rip)
350b(3): mov %rbx,%rdi
350e(5): call 0xf72(%rip)
3513(3): mov %rax,%rbx
3516(7): mov %rax,0x203b43(%rip)
351d(7): movsxd 0x203b34(%rip),%rdi
3524(3): mov %r12d,%edx
3527(2): xor %esi,%esi
3529(2): sub %edi,%edx
352b(4): shl/sal $0x4,%rdi
352f(3): movsxd %edx,%rdx
3532(3): add %rbx,%rdi
3535(4): shl/sal $0x4,%rdx
3539(5): call 0xffffe017(%rip)
353e(7): mov %r12d,0x203b13(%rip)
3545(3): mov 0x4(%rbp),%eax
3548(4): shl/sal $0x4,%r15
354c(4): sub $0x8,%rsp
3550(3): add %r15,%rbx
3553(4): lea 0x8(%rbp),%r15
3557(4): mov 0x0(%rbp),%r8d
355b(3): mov (%rbx),%r11
355e(4): mov 0x8(%rbx),%r12
3562(3): mov %r14,%rcx
3565(3): or $0x1,%eax
3568(4): mov %eax,0x24(%rsp)
356c(3): push 0x30(%rbp)
356f(3): mov %eax,%r9d
3572(3): push 0x28(%rbp)
3575(2): push %r15
3577(3): mov %r11,%rsi
357a(5): mov 0x28(%rsp),%rdx
357f(3): mov %r12,%rdi
3582(5): mov %r11,0x30(%rsp)
3587(5): call 0xffffecd9(%rip)
358c(4): add $0x20,%rsp
3590(5): mov 0x10(%rsp),%r11
3595(3): cmp %rax,%r11
3598(2): jnbe 0x69(%rip)
359a(4): lea 0x1(%rax),%rsi
359e(7): lea 0x203b5b(%rip),%rax
35a5(3): cmp %rax,%r12
35a8(3): mov %rsi,(%rbx)
35ab(2): jz 0x14(%rip)
35ad(3): mov %r12,%rdi
35b0(5): mov %rsi,0x10(%rsp)
35b5(5): call 0xffffde4b(%rip)
35ba(5): mov 0x10(%rsp),%rsi
35bf(3): mov %rsi,%rdi
35c2(5): mov %rsi,0x10(%rsp)
35c7(5): call 0xe59(%rip)
35cc(4): sub $0x8,%rsp
35d0(4): mov %rax,0x8(%rbx)
35d4(4): mov 0x0(%rbp),%r8d
35d8(3): push 0x30(%rbp)
35db(3): push 0x28(%rbp)
35de(3): mov %r14,%rcx
35e1(2): push %r15
35e3(5): mov 0x3c(%rsp),%r9d
35e8(3): mov %rax,%rdi
35eb(5): mov 0x28(%rsp),%rdx
35f0(5): mov 0x30(%rsp),%rsi
35f5(3): mov %rax,%r12
35f8(5): call 0xffffec68(%rip)
35fd(4): add $0x20,%rsp
3601(4): mov 0x18(%rsp),%eax
3605(4): mov %eax,0x0(%r13)
3609(4): add $0x28,%rsp
360d(3): mov %r12,%rax
3610(1): pop %rbx
3611(1): pop %rbp
3612(2): pop %r12
3614(2): pop %r13
3616(2): pop %r14
3618(2): pop %r15
361a(1): ret near (%rsp)
361b(5): nop 0x0(%rax,%rax,1)
3620(2): xor %edi,%edi
3622(5): call 0xe5e(%rip)
3627(8): movdqa 0x203a41(%rip),%xmm0
362f(3): mov %rax,%rbx
3632(7): mov %rax,0x203a27(%rip)
3639(3): movups %xmm0,(%rax)
363c(5): jmp 0xfffffee1(%rip)
3641(5): call 0xffffddcf(%rip)
3646(5): call 0x102a(%rip)

"clone_quoting_options" :
3650(2): push %r12
3652(1): push %rbp
3653(1): push %rbx
3654(3): mov %rdi,%rbx
3657(5): call 0xffffddc9(%rip)
365c(3): mov (%rax),%r12d
365f(3): mov %rax,%rbp
3662(7): lea 0x203b97(%rip),%rax
3669(3): test %rbx,%rbx
366c(5): mov $0x38,%esi
3671(4): cmove %rax,%rbx
3675(3): mov %rbx,%rdi
3678(5): call 0xfa8(%rip)
367d(4): mov %r12d,0x0(%rbp)
3681(1): pop %rbx
3682(1): pop %rbp
3683(2): pop %r12
3685(1): ret near (%rsp)

"get_quoting_style" :
3690(7): lea 0x203b69(%rip),%rax
3697(3): test %rdi,%rdi
369a(4): cmove %rax,%rdi
369e(2): mov (%rdi),%eax
36a0(1): ret near (%rsp)

"set_quoting_style" :
36b0(7): lea 0x203b49(%rip),%rax
36b7(3): test %rdi,%rdi
36ba(4): cmove %rax,%rdi
36be(2): mov %esi,(%rdi)
36c0(1): ret near (%rsp)

"set_char_quoting" :
36d0(7): lea 0x203b29(%rip),%rax
36d7(3): test %rdi,%rdi
36da(2): mov %esi,%ecx
36dc(4): cmove %rax,%rdi
36e0(2): mov %esi,%eax
36e2(3): and $0x1f,%ecx
36e5(3): shr $0x5,%al
36e8(3): movzx %al,%eax
36eb(5): lea 0x8(%rdi,%rax,4),%rdi
36f0(2): mov (%rdi),%esi
36f2(2): mov %esi,%eax
36f4(2): shr %cl,%eax
36f6(2): xor %eax,%edx
36f8(3): and $0x1,%eax
36fb(3): and $0x1,%edx
36fe(2): shl/sal %cl,%edx
3700(2): xor %esi,%edx
3702(2): mov %edx,(%rdi)
3704(1): ret near (%rsp)

"set_quoting_flags" :
3710(7): lea 0x203ae9(%rip),%rax
3717(3): test %rdi,%rdi
371a(4): cmove %rax,%rdi
371e(3): mov 0x4(%rdi),%eax
3721(3): mov %esi,0x4(%rdi)
3724(1): ret near (%rsp)

"set_custom_quoting" :
3730(7): lea 0x203ac9(%rip),%rax
3737(3): test %rdi,%rdi
373a(4): cmove %rax,%rdi
373e(3): test %rsi,%rsi
3741(6): mov $0xa,(%rdi)
3747(2): jz 0x10(%rip)
3749(3): test %rdx,%rdx
374c(2): jz 0xb(%rip)
374e(4): mov %rsi,0x28(%rdi)
3752(4): mov %rdx,0x30(%rdi)
3756(1): ret near (%rsp)
3757(4): sub $0x8,%rsp
375b(5): call 0xffffdcb5(%rip)

"quotearg_buffer" :
3760(2): push %r15
3762(2): push %r14
3764(7): lea 0x203a95(%rip),%rax
376b(2): push %r13
376d(2): push %r12
376f(3): mov %rdi,%r13
3772(1): push %rbp
3773(1): push %rbx
3774(3): mov %r8,%rbx
3777(3): mov %rsi,%r14
377a(3): mov %rdx,%r15
377d(4): sub $0x18,%rsp
3781(3): test %r8,%r8
3784(4): cmove %rax,%rbx
3788(5): mov %rcx,0x8(%rsp)
378d(5): call 0xffffdc93(%rip)
3792(3): mov (%rax),%r12d
3795(3): mov %rax,%rbp
3798(4): lea 0x8(%rbx),%rax
379c(4): sub $0x8,%rsp
37a0(4): mov 0x4(%rbx),%r9d
37a4(3): push 0x30(%rbx)
37a7(3): mov (%rbx),%r8d
37aa(3): push 0x28(%rbx)
37ad(3): mov %r15,%rdx
37b0(1): push %rax
37b1(5): mov 0x28(%rsp),%rcx
37b6(3): mov %r14,%rsi
37b9(3): mov %r13,%rdi
37bc(5): call 0xffffeaa4(%rip)
37c1(4): mov %r12d,0x0(%rbp)
37c5(4): add $0x38,%rsp
37c9(1): pop %rbx
37ca(1): pop %rbp
37cb(2): pop %r12
37cd(2): pop %r13
37cf(2): pop %r14
37d1(2): pop %r15
37d3(1): ret near (%rsp)

"quotearg_alloc_mem" :
37e0(2): push %r15
37e2(2): push %r14
37e4(7): lea 0x203a15(%rip),%rax
37eb(2): push %r13
37ed(2): push %r12
37ef(3): mov %rdx,%r12
37f2(1): push %rbp
37f3(1): push %rbx
37f4(3): mov %rcx,%rbx
37f7(3): mov %rdi,%r14
37fa(3): mov %rsi,%r15
37fd(4): sub $0x38,%rsp
3801(3): test %rcx,%rcx
3804(4): cmove %rax,%rbx
3808(2): xor %ebp,%ebp
380a(5): call 0xffffdc16(%rip)
380f(3): test %r12,%r12
3812(3): mov %rax,%r13
3815(2): mov (%rax),%eax
3817(4): setz %bpl
381b(3): or 0x4(%rbx),%ebp
381e(4): lea 0x8(%rbx),%r10
3822(4): sub $0x8,%rsp
3826(3): mov (%rbx),%r8d
3829(3): mov %r15,%rcx
382c(4): mov %eax,0x14(%rsp)
3830(3): push 0x30(%rbx)
3833(3): mov %r14,%rdx
3836(3): push 0x28(%rbx)
3839(2): push %r10
383b(2): xor %esi,%esi
383d(3): mov %ebp,%r9d
3840(2): xor %edi,%edi
3842(5): mov %r10,0x40(%rsp)
3847(5): call 0xffffea19(%rip)
384c(4): lea 0x1(%rax),%rsi
3850(5): mov %rax,0x48(%rsp)
3855(4): add $0x20,%rsp
3859(3): mov %rsi,%rdi
385c(5): mov %rsi,0x18(%rsp)
3861(5): call 0xbbf(%rip)
3866(5): mov %rax,0x10(%rsp)
386b(4): sub $0x8,%rsp
386f(3): push 0x30(%rbx)
3872(3): push 0x28(%rbx)
3875(5): mov 0x38(%rsp),%r10
387a(3): mov %ebp,%r9d
387d(3): mov (%rbx),%r8d
3880(3): mov %r15,%rcx
3883(3): mov %r14,%rdx
3886(3): mov %rax,%rdi
3889(2): push %r10
388b(5): mov 0x38(%rsp),%rsi
3890(5): call 0xffffe9d0(%rip)
3895(4): mov 0x2c(%rsp),%eax
3899(4): add $0x20,%rsp
389d(3): test %r12,%r12
38a0(4): mov %eax,0x0(%r13)
38a4(2): jz 0xb(%rip)
38a6(5): mov 0x28(%rsp),%r11
38ab(4): mov %r11,(%r12)
38af(5): mov 0x10(%rsp),%rax
38b4(4): add $0x38,%rsp
38b8(1): pop %rbx
38b9(1): pop %rbp
38ba(2): pop %r12
38bc(2): pop %r13
38be(2): pop %r14
38c0(2): pop %r15
38c2(1): ret near (%rsp)

"quotearg_alloc" :
38d0(3): mov %rdx,%rcx
38d3(2): xor %edx,%edx
38d5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
38e0(6): mov 0x203772(%rip),%eax
38e6(2): push %r12
38e8(7): mov 0x203771(%rip),%r12
38ef(1): push %rbp
38f0(1): push %rbx
38f1(3): cmp $0x1,%eax
38f4(2): jle 0x2d(%rip)
38f6(3): sub $0x2,%eax
38f9(5): lea 0x18(%r12),%rbx
38fe(4): shl/sal $0x4,%rax
3902(5): lea 0x28(%r12,%rax,1),%rbp
3907(9): nop 0x0(%rax,%rax,1)
3910(3): mov (%rbx),%rdi
3913(4): add $0x10,%rbx
3917(5): call 0xffffdae9(%rip)
391c(3): cmp %rbp,%rbx
391f(2): jnz 0xfffffff1(%rip)
3921(5): mov 0x8(%r12),%rdi
3926(7): lea 0x2037d3(%rip),%rbx
392d(3): cmp %rbx,%rdi
3930(2): jz 0x19(%rip)
3932(5): call 0xffffdace(%rip)
3937(b): mov $0x100,0x20372e(%rip)
3942(7): mov %rbx,0x20372f(%rip)
3949(7): lea 0x203720(%rip),%rbx
3950(3): cmp %rbx,%r12
3953(2): jz 0x11(%rip)
3955(3): mov %r12,%rdi
3958(5): call 0xffffdaa8(%rip)
395d(7): mov %rbx,0x2036fc(%rip)
3964(1): pop %rbx
3965(a): mov $0x1,0x2036e9(%rip)
396f(1): pop %rbp
3970(2): pop %r12
3972(1): ret near (%rsp)

"quotearg_n" :
3980(7): lea 0x203879(%rip),%rcx
3987(7): mov $0xffffffff,%rdx
398e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
39a0(7): lea 0x203859(%rip),%rcx
39a7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
39b0(7): lea 0x203849(%rip),%rcx
39b7(3): mov %rdi,%rsi
39ba(7): mov $0xffffffff,%rdx
39c1(2): xor %edi,%edi
39c3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
39d0(7): lea 0x203829(%rip),%rcx
39d7(3): mov %rsi,%rdx
39da(3): mov %rdi,%rsi
39dd(2): xor %edi,%edi
39df(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
39f0(4): sub $0x48,%rsp
39f4(3): mov %rdx,%rax
39f7(9): mov $0x28,%rdx
3a00(5): mov %rdx,0x38(%rsp)
3a05(2): xor %edx,%edx
3a07(3): cmp $0xa,%esi
3a0a(2): jz 0x6a(%rip)
3a0c(3): mov %esi,(%rsp)
3a0f(3): mov %rsp,%rcx
3a12(7): mov $0xffffffff,%rdx
3a19(3): mov %rax,%rsi
3a1c(9): mov $0x0,0x4(%rsp)
3a25(9): mov $0x0,0xc(%rsp)
3a2e(9): mov $0x0,0x14(%rsp)
3a37(9): mov $0x0,0x1c(%rsp)
3a40(9): mov $0x0,0x24(%rsp)
3a49(9): mov $0x0,0x2c(%rsp)
3a52(8): mov $0x0,0x34(%rsp)
3a5a(5): call 0xfffffa46(%rip)
3a5f(5): mov 0x38(%rsp),%rcx
3a64(9): xor $0x28,%rcx
3a6d(2): jnz 0xc(%rip)
3a6f(4): add $0x48,%rsp
3a73(1): ret near (%rsp)
3a74(5): call 0xffffd99c(%rip)
3a79(5): call 0xffffda57(%rip)

"quotearg_n_style_mem" :
3a80(4): sub $0x48,%rsp
3a84(3): mov %rdx,%rax
3a87(3): mov %rcx,%rdx
3a8a(9): mov $0x28,%rcx
3a93(5): mov %rcx,0x38(%rsp)
3a98(2): xor %ecx,%ecx
3a9a(3): cmp $0xa,%esi
3a9d(2): jz 0x63(%rip)
3a9f(3): mov %esi,(%rsp)
3aa2(3): mov %rsp,%rcx
3aa5(3): mov %rax,%rsi
3aa8(9): mov $0x0,0x4(%rsp)
3ab1(9): mov $0x0,0xc(%rsp)
3aba(9): mov $0x0,0x14(%rsp)
3ac3(9): mov $0x0,0x1c(%rsp)
3acc(9): mov $0x0,0x24(%rsp)
3ad5(9): mov $0x0,0x2c(%rsp)
3ade(8): mov $0x0,0x34(%rsp)
3ae6(5): call 0xfffff9ba(%rip)
3aeb(5): mov 0x38(%rsp),%rdx
3af0(9): xor $0x28,%rdx
3af9(2): jnz 0xc(%rip)
3afb(4): add $0x48,%rsp
3aff(1): ret near (%rsp)
3b00(5): call 0xffffd910(%rip)
3b05(5): call 0xffffd9cb(%rip)

"quotearg_style" :
3b10(3): mov %rsi,%rdx
3b13(2): mov %edi,%esi
3b15(2): xor %edi,%edi
3b17(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3b20(3): mov %rdx,%rcx
3b23(3): mov %rsi,%rdx
3b26(2): mov %edi,%esi
3b28(2): xor %edi,%edi
3b2a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3b30(4): sub $0x48,%rsp
3b34(2): mov %edx,%ecx
3b36(9): mov $0x28,%rax
3b3f(5): mov %rax,0x38(%rsp)
3b44(2): xor %eax,%eax
3b46(7): mov 0x2036e3(%rip),%rax
3b4d(3): mov %rsp,%r8
3b50(3): and $0x1f,%ecx
3b53(8): movdqa 0x2036a5(%rip),%xmm0
3b5b(5): mov %rax,0x30(%rsp)
3b60(2): mov %edx,%eax
3b62(4): movaps %xmm0,(%rsp)
3b66(3): shr $0x5,%al
3b69(3): movzx %al,%eax
3b6c(5): lea 0x8(%r8,%rax,4),%r9
3b71(8): movdqa 0x203697(%rip),%xmm0
3b79(5): movaps %xmm0,0x10(%rsp)
3b7e(8): movdqa 0x20369a(%rip),%xmm0
3b86(5): movaps %xmm0,0x20(%rsp)
3b8b(3): mov (%r9),%edx
3b8e(2): mov %edx,%eax
3b90(2): shr %cl,%eax
3b92(2): not %eax
3b94(3): and $0x1,%eax
3b97(2): shl/sal %cl,%eax
3b99(3): mov %r8,%rcx
3b9c(2): xor %edx,%eax
3b9e(3): mov %rsi,%rdx
3ba1(3): mov %rdi,%rsi
3ba4(3): mov %eax,(%r9)
3ba7(2): xor %edi,%edi
3ba9(5): call 0xfffff8f7(%rip)
3bae(5): mov 0x38(%rsp),%rsi
3bb3(9): xor $0x28,%rsi
3bbc(2): jnz 0x7(%rip)
3bbe(4): add $0x48,%rsp
3bc2(1): ret near (%rsp)
3bc3(5): call 0xffffd90d(%rip)

"quotearg_char" :
3bd0(4): movsx %sil,%edx
3bd4(7): mov $0xffffffff,%rsi
3bdb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3be0(5): mov $0x3a,%edx
3be5(7): mov $0xffffffff,%rsi
3bec(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3c00(5): mov $0x3a,%edx
3c05(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3c10(4): sub $0x48,%rsp
3c14(3): mov %rdx,%rax
3c17(9): mov $0x28,%rdx
3c20(5): mov %rdx,0x38(%rsp)
3c25(2): xor %edx,%edx
3c27(3): cmp $0xa,%esi
3c2a(2): jz 0x6a(%rip)
3c2c(3): mov %esi,(%rsp)
3c2f(3): mov %rsp,%rcx
3c32(7): mov $0xffffffff,%rdx
3c39(3): mov %rax,%rsi
3c3c(9): mov $0x0,0x4(%rsp)
3c45(9): mov $0x4000000,0xc(%rsp)
3c4e(9): mov $0x0,0x14(%rsp)
3c57(9): mov $0x0,0x1c(%rsp)
3c60(9): mov $0x0,0x24(%rsp)
3c69(9): mov $0x0,0x2c(%rsp)
3c72(8): mov $0x0,0x34(%rsp)
3c7a(5): call 0xfffff826(%rip)
3c7f(5): mov 0x38(%rsp),%rcx
3c84(9): xor $0x28,%rcx
3c8d(2): jnz 0xc(%rip)
3c8f(4): add $0x48,%rsp
3c93(1): ret near (%rsp)
3c94(5): call 0xffffd77c(%rip)
3c99(5): call 0xffffd837(%rip)

"quotearg_n_custom_mem" :
3ca0(4): sub $0x48,%rsp
3ca4(3): mov %rcx,%r9
3ca7(7): mov 0x203582(%rip),%rcx
3cae(8): movdqa 0x20354a(%rip),%xmm0
3cb6(9): mov $0x28,%rax
3cbf(5): mov %rax,0x38(%rsp)
3cc4(2): xor %eax,%eax
3cc6(4): movaps %xmm0,(%rsp)
3cca(3): test %rsi,%rsi
3ccd(5): mov %rcx,0x30(%rsp)
3cd2(7): mov $0xa,(%rsp)
3cd9(8): movdqa 0x20352f(%rip),%xmm0
3ce1(5): movaps %xmm0,0x10(%rsp)
3ce6(8): movdqa 0x203532(%rip),%xmm0
3cee(5): movaps %xmm0,0x20(%rsp)
3cf3(2): jz 0x34(%rip)
3cf5(3): test %rdx,%rdx
3cf8(2): jz 0x2f(%rip)
3cfa(5): mov %rsi,0x28(%rsp)
3cff(5): mov %rdx,0x30(%rsp)
3d04(3): mov %rsp,%rcx
3d07(3): mov %r8,%rdx
3d0a(3): mov %r9,%rsi
3d0d(5): call 0xfffff793(%rip)
3d12(5): mov 0x38(%rsp),%rdi
3d17(9): xor $0x28,%rdi
3d20(2): jnz 0xc(%rip)
3d22(4): add $0x48,%rsp
3d26(1): ret near (%rsp)
3d27(5): call 0xffffd6e9(%rip)
3d2c(5): call 0xffffd7a4(%rip)

"quotearg_n_custom" :
3d40(7): mov $0xffffffff,%r8
3d47(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3d50(3): mov %rdx,%rcx
3d53(7): mov $0xffffffff,%r8
3d5a(3): mov %rsi,%rdx
3d5d(3): mov %rdi,%rsi
3d60(2): xor %edi,%edi
3d62(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3d70(3): mov %rcx,%r8
3d73(3): mov %rdx,%rcx
3d76(3): mov %rsi,%rdx
3d79(3): mov %rdi,%rsi
3d7c(2): xor %edi,%edi
3d7e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3d90(7): lea 0x203289(%rip),%rcx
3d97(5): jmp 0xfffff709(%rip)

"quote_mem" :
3da0(7): lea 0x203279(%rip),%rcx
3da7(3): mov %rsi,%rdx
3daa(3): mov %rdi,%rsi
3dad(2): xor %edi,%edi
3daf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3dc0(7): lea 0x203259(%rip),%rcx
3dc7(7): mov $0xffffffff,%rdx
3dce(5): jmp 0xfffff6d2(%rip)

"quote" :
3de0(7): lea 0x203239(%rip),%rcx
3de7(3): mov %rdi,%rsi
3dea(7): mov $0xffffffff,%rdx
3df1(2): xor %edi,%edi
3df3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3e00(2): push %r15
3e02(2): push %r14
3e04(2): push %r13
3e06(2): push %r12
3e08(3): mov %r9,%r12
3e0b(1): push %rbp
3e0c(1): push %rbx
3e0d(3): mov %rdi,%rbp
3e10(3): mov %r8,%rbx
3e13(4): sub $0x28,%rsp
3e17(3): test %rsi,%rsi
3e1a(6): jz 0x11e(%rip)
3e20(3): mov %rdx,%r8
3e23(7): lea 0x19fe(%rip),%rdx
3e2a(3): mov %rcx,%r9
3e2d(2): xor %eax,%eax
3e2f(3): mov %rsi,%rcx
3e32(5): mov $0x1,%esi
3e37(5): call 0xffffd859(%rip)
3e3c(7): lea 0x19f8(%rip),%rsi
3e43(2): xor %edi,%edi
3e45(5): mov $0x5,%edx
3e4a(5): call 0xffffd656(%rip)
3e4f(7): lea 0x1d0a(%rip),%rdx
3e56(3): mov %rax,%rcx
3e59(6): mov $0x7e3,%r8d
3e5f(5): mov $0x1,%esi
3e64(3): mov %rbp,%rdi
3e67(2): xor %eax,%eax
3e69(5): call 0xffffd827(%rip)
3e6e(7): lea 0x1a53(%rip),%rsi
3e75(2): xor %edi,%edi
3e77(5): mov $0x5,%edx
3e7c(5): call 0xffffd624(%rip)
3e81(3): mov %rbp,%rsi
3e84(3): mov %rax,%rdi
3e87(5): call 0xffffd6e9(%rip)
3e8c(4): cmp $0x9,%r12
3e90(6): jnbe 0x340(%rip)
3e96(7): lea 0x1c87(%rip),%rdx
3e9d(4): movsxd 0x0(%rdx,%r12,4),%rax
3ea1(3): add %rdx,%rax
3ea4(2): jmp %rax
3ea6(a): nop 0x0(%rax,%rax,1)
3eb0(4): mov 0x38(%rbx),%r9
3eb4(4): mov 0x10(%rbx),%rax
3eb8(7): lea 0x1b79(%rip),%rsi
3ebf(4): mov 0x8(%rbx),%r8
3ec3(5): mov $0x5,%edx
3ec8(2): xor %edi,%edi
3eca(4): mov 0x30(%rbx),%r13
3ece(4): mov 0x28(%rbx),%r12
3ed2(5): mov %r9,0x10(%rsp)
3ed7(4): mov 0x20(%rbx),%r15
3edb(4): mov 0x18(%rbx),%r14
3edf(4): mov %rax,(%rsp)
3ee3(5): mov %r8,0x8(%rsp)
3ee8(3): mov (%rbx),%rbx
3eeb(5): call 0xffffd5b5(%rip)
3ef0(4): sub $0x8,%rsp
3ef4(5): mov 0x18(%rsp),%r9
3ef9(3): mov %rax,%rdx
3efc(3): mov %rbx,%rcx
3eff(5): mov $0x1,%esi
3f04(3): mov %rbp,%rdi
3f07(2): xor %eax,%eax
3f09(2): push %r9
3f0b(2): push %r13
3f0d(2): push %r12
3f0f(2): push %r15
3f11(2): push %r14
3f13(5): mov 0x30(%rsp),%r9
3f18(5): mov 0x38(%rsp),%r8
3f1d(5): call 0xffffd773(%rip)
3f22(4): add $0x30,%rsp
3f26(4): add $0x28,%rsp
3f2a(1): pop %rbx
3f2b(1): pop %rbp
3f2c(2): pop %r12
3f2e(2): pop %r13
3f30(2): pop %r14
3f32(2): pop %r15
3f34(1): ret near (%rsp)
3f35(3): nop (%rax)
3f38(3): mov %rcx,%r8
3f3b(3): mov %rdx,%rcx
3f3e(7): lea 0x18ef(%rip),%rdx
3f45(5): mov $0x1,%esi
3f4a(2): xor %eax,%eax
3f4c(5): call 0xffffd744(%rip)
3f51(5): jmp 0xfffffeeb(%rip)
3f56(a): nop 0x0(%rax,%rax,1)
3f60(4): mov 0x40(%rbx),%r10
3f64(4): mov 0x38(%rbx),%r9
3f68(7): lea 0x1af9(%rip),%rsi
3f6f(4): mov 0x10(%rbx),%rax
3f73(4): mov 0x8(%rbx),%r8
3f77(5): mov $0x5,%edx
3f7c(4): mov 0x30(%rbx),%r13
3f80(4): mov 0x28(%rbx),%r12
3f84(4): mov 0x20(%rbx),%r15
3f88(4): mov 0x18(%rbx),%r14
3f8c(3): mov (%rbx),%rbx
3f8f(5): mov %r10,0x18(%rsp)
3f94(5): mov %r9,0x10(%rsp)
3f99(4): mov %rax,(%rsp)
3f9d(5): mov %r8,0x8(%rsp)
3fa2(2): xor %edi,%edi
3fa4(5): call 0xffffd4fc(%rip)
3fa9(5): mov 0x18(%rsp),%r10
3fae(2): push %r10
3fb0(5): jmp 0xffffff44(%rip)
3fb5(3): nop (%rax)
3fb8(3): mov (%rbx),%rbx
3fbb(7): lea 0x187d(%rip),%rsi
3fc2(5): mov $0x5,%edx
3fc7(2): xor %edi,%edi
3fc9(5): call 0xffffd4d7(%rip)
3fce(4): add $0x28,%rsp
3fd2(3): mov %rbx,%rcx
3fd5(3): mov %rbp,%rdi
3fd8(1): pop %rbx
3fd9(1): pop %rbp
3fda(2): pop %r12
3fdc(2): pop %r13
3fde(2): pop %r14
3fe0(2): pop %r15
3fe2(3): mov %rax,%rdx
3fe5(5): mov $0x1,%esi
3fea(2): xor %eax,%eax
3fec(5): jmp 0xffffd6a4(%rip)
3ff1(7): nop 0x0(%rax)
3ff8(4): mov 0x8(%rbx),%r12
3ffc(7): lea 0x184c(%rip),%rsi
4003(3): mov (%rbx),%rbx
4006(5): mov $0x5,%edx
400b(2): xor %edi,%edi
400d(5): call 0xffffd493(%rip)
4012(4): add $0x28,%rsp
4016(3): mov %r12,%r8
4019(3): mov %rbx,%rcx
401c(3): mov %rbp,%rdi
401f(3): mov %rax,%rdx
4022(5): mov $0x1,%esi
4027(1): pop %rbx
4028(1): pop %rbp
4029(2): pop %r12
402b(2): pop %r13
402d(2): pop %r14
402f(2): pop %r15
4031(2): xor %eax,%eax
4033(5): jmp 0xffffd65d(%rip)
4038(8): nop 0x0(%rax,%rax,1)
4040(4): mov 0x10(%rbx),%r13
4044(4): mov 0x8(%rbx),%r12
4048(7): lea 0x1817(%rip),%rsi
404f(3): mov (%rbx),%rbx
4052(5): mov $0x5,%edx
4057(2): xor %edi,%edi
4059(5): call 0xffffd447(%rip)
405e(4): add $0x28,%rsp
4062(3): mov %r13,%r9
4065(3): mov %r12,%r8
4068(3): mov %rbx,%rcx
406b(3): mov %rbp,%rdi
406e(3): mov %rax,%rdx
4071(1): pop %rbx
4072(1): pop %rbp
4073(2): pop %r12
4075(2): pop %r13
4077(2): pop %r14
4079(2): pop %r15
407b(5): mov $0x1,%esi
4080(2): xor %eax,%eax
4082(5): jmp 0xffffd60e(%rip)
4087(9): nop 0x0(%rax,%rax,1)
4090(7): lea 0x1901(%rip),%rsi
4097(5): mov $0x5,%edx
409c(2): xor %edi,%edi
409e(4): mov 0x18(%rbx),%r14
40a2(4): mov 0x10(%rbx),%r13
40a6(4): mov 0x8(%rbx),%r12
40aa(3): mov (%rbx),%rbx
40ad(5): call 0xffffd3f3(%rip)
40b2(4): sub $0x8,%rsp
40b6(2): push %r14
40b8(3): mov %rax,%rdx
40bb(3): mov %r13,%r9
40be(3): mov %r12,%r8
40c1(3): mov %rbx,%rcx
40c4(3): mov %rbp,%rdi
40c7(5): mov $0x1,%esi
40cc(2): xor %eax,%eax
40ce(5): call 0xffffd5c2(%rip)
40d3(1): pop %rax
40d4(1): pop %rdx
40d5(4): add $0x28,%rsp
40d9(1): pop %rbx
40da(1): pop %rbp
40db(2): pop %r12
40dd(2): pop %r13
40df(2): pop %r14
40e1(2): pop %r15
40e3(1): ret near (%rsp)
40e4(4): nop 0x0(%rax)
40e8(4): mov 0x20(%rbx),%r15
40ec(7): lea 0x18c5(%rip),%rsi
40f3(5): mov $0x5,%edx
40f8(2): xor %edi,%edi
40fa(4): mov 0x18(%rbx),%r14
40fe(4): mov 0x10(%rbx),%r13
4102(4): mov 0x8(%rbx),%r12
4106(3): mov (%rbx),%rbx
4109(5): call 0xffffd397(%rip)
410e(2): push %r15
4110(2): jmp 0xffffffa6(%rip)
4112(6): nop 0x0(%rax,%rax,1)
4118(4): mov 0x8(%rbx),%r8
411c(4): mov 0x28(%rbx),%r12
4120(7): lea 0x18b9(%rip),%rsi
4127(4): mov 0x20(%rbx),%r15
412b(4): mov 0x18(%rbx),%r14
412f(5): mov $0x5,%edx
4134(4): mov 0x10(%rbx),%r13
4138(2): xor %edi,%edi
413a(3): mov (%rbx),%rbx
413d(4): mov %r8,(%rsp)
4141(5): call 0xffffd35f(%rip)
4146(4): sub $0x8,%rsp
414a(3): mov %r13,%r9
414d(2): push %r12
414f(2): push %r15
4151(2): push %r14
4153(5): mov 0x20(%rsp),%r8
4158(3): mov %rbx,%rcx
415b(3): mov %rax,%rdx
415e(3): mov %rbp,%rdi
4161(5): mov $0x1,%esi
4166(2): xor %eax,%eax
4168(5): call 0xffffd528(%rip)
416d(4): add $0x20,%rsp
4171(4): add $0x28,%rsp
4175(1): pop %rbx
4176(1): pop %rbp
4177(2): pop %r12
4179(2): pop %r13
417b(2): pop %r14
417d(2): pop %r15
417f(1): ret near (%rsp)
4180(4): mov 0x10(%rbx),%r9
4184(4): mov 0x30(%rbx),%r13
4188(7): lea 0x1879(%rip),%rsi
418f(4): mov 0x28(%rbx),%r12
4193(4): mov 0x20(%rbx),%r15
4197(5): mov $0x5,%edx
419c(4): mov 0x18(%rbx),%r14
41a0(4): mov 0x8(%rbx),%r8
41a4(2): xor %edi,%edi
41a6(5): mov %r9,0x8(%rsp)
41ab(3): mov (%rbx),%rbx
41ae(4): mov %r8,(%rsp)
41b2(5): call 0xffffd2ee(%rip)
41b7(2): push %r13
41b9(2): push %r12
41bb(2): push %r15
41bd(2): push %r14
41bf(5): mov 0x28(%rsp),%r9
41c4(2): jmp 0xffffff8f(%rip)
41c6(a): nop 0x0(%rax,%rax,1)
41d0(4): mov 0x40(%rbx),%r10
41d4(4): mov 0x38(%rbx),%r9
41d8(5): mov $0x5,%edx
41dd(4): mov 0x10(%rbx),%rax
41e1(4): mov 0x8(%rbx),%r8
41e5(7): lea 0x18b4(%rip),%rsi
41ec(4): mov 0x30(%rbx),%r13
41f0(4): mov 0x28(%rbx),%r12
41f4(4): mov 0x20(%rbx),%r15
41f8(4): mov 0x18(%rbx),%r14
41fc(5): mov %r10,0x18(%rsp)
4201(5): mov %r9,0x10(%rsp)
4206(4): mov %rax,(%rsp)
420a(5): mov %r8,0x8(%rsp)
420f(3): mov (%rbx),%rbx
4212(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4220(3): xor %r9d,%r9d
4223(4): cmp $0x0,(%r8)
4227(2): jz 0x14(%rip)
4229(7): nop 0x0(%rax)
4230(4): add $0x1,%r9
4234(5): cmp $0x0,0x0(%r8,%r9,8)
4239(2): jnz 0xfffffff7(%rip)
423b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4240(4): sub $0x68,%rsp
4244(3): mov %r8,%r10
4247(3): xor %r9d,%r9d
424a(9): mov $0x28,%rax
4253(5): mov %rax,0x58(%rsp)
4258(2): xor %eax,%eax
425a(3): mov %rsp,%r8
425d(3): nop (%rax)
4260(3): mov (%r10),%eax
4263(3): cmp $0x2f,%eax
4266(2): jnbe 0x44(%rip)
4268(3): mov %eax,%r11d
426b(4): add 0x10(%r10),%r11
426f(3): add $0x8,%eax
4272(3): mov %eax,(%r10)
4275(3): mov (%r11),%rax
4278(3): test %rax,%rax
427b(4): mov %rax,0x0(%r8,%r9,8)
427f(2): jz 0xc(%rip)
4281(4): add $0x1,%r9
4285(4): cmp $0xa,%r9
4289(2): jnz 0xffffffd7(%rip)
428b(5): call 0xfffffb75(%rip)
4290(5): mov 0x58(%rsp),%rax
4295(9): xor $0x28,%rax
429e(2): jnz 0x7(%rip)
42a0(4): add $0x68,%rsp
42a4(1): ret near (%rsp)
42a5(5): call 0xffffd22b(%rip)
42aa(4): mov 0x8(%r10),%r11
42ae(4): lea 0x8(%r11),%rax
42b2(4): mov %rax,0x8(%r10)
42b6(2): jmp 0xffffffbf(%rip)

"version_etc" :
42c0(1): push %rbp
42c1(1): push %rbx
42c2(6): mov $0x20,%r10d
42c8(3): xor %r11d,%r11d
42cb(7): sub $0xb8,%rsp
42d2(9): mov $0x28,%rax
42db(5): mov %rax,0x78(%rsp)
42e0(2): xor %eax,%eax
42e2(8): lea 0xd0(%rsp),%rax
42ea(8): mov %r8,0xa0(%rsp)
42f2(8): lea 0xd0(%rsp),%rbx
42fa(5): lea 0x20(%rsp),%r8
42ff(8): mov %r9,0xa8(%rsp)
4307(8): mov $0x20,0x8(%rsp)
430f(5): mov %rax,0x10(%rsp)
4314(8): lea 0x80(%rsp),%rax
431c(3): xor %r9d,%r9d
431f(5): mov %rax,0x18(%rsp)
4324(3): mov %rax,%rbp
4327(9): nop 0x0(%rax,%rax,1)
4330(4): cmp $0x2f,%r10d
4334(2): jnbe 0x58(%rip)
4336(3): mov %r10d,%eax
4339(6): mov $0x1,%r11d
433f(4): add $0x8,%r10d
4343(3): add %rbp,%rax
4346(3): mov (%rax),%rax
4349(3): test %rax,%rax
434c(4): mov %rax,0x0(%r8,%r9,8)
4350(2): jz 0xc(%rip)
4352(4): add $0x1,%r9
4356(4): cmp $0xa,%r9
435a(2): jnz 0xffffffd6(%rip)
435c(3): test %r11b,%r11b
435f(2): jnz 0x26(%rip)
4361(5): call 0xfffffa9f(%rip)
4366(5): mov 0x78(%rsp),%rax
436b(9): xor $0x28,%rax
4374(2): jnz 0xc(%rip)
4376(7): add $0xb8,%rsp
437d(1): pop %rbx
437e(1): pop %rbp
437f(1): ret near (%rsp)
4380(5): call 0xffffd150(%rip)
4385(5): mov %r10d,0x8(%rsp)
438a(2): jmp 0xffffffd7(%rip)
438c(3): mov %rbx,%rax
438f(4): add $0x8,%rbx
4393(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
43a0(1): push %rbx
43a1(7): lea 0x14da(%rip),%rsi
43a8(5): mov $0x5,%edx
43ad(2): xor %edi,%edi
43af(5): call 0xffffd0f1(%rip)
43b4(7): lea 0x14dc(%rip),%rdx
43bb(3): mov %rax,%rsi
43be(5): mov $0x1,%edi
43c3(2): xor %eax,%eax
43c5(5): call 0xffffd24b(%rip)
43ca(7): lea 0x14dc(%rip),%rsi
43d1(5): mov $0x5,%edx
43d6(2): xor %edi,%edi
43d8(5): call 0xffffd0c8(%rip)
43dd(7): lea 0xe54(%rip),%rcx
43e4(7): lea 0xc2c(%rip),%rdx
43eb(3): mov %rax,%rsi
43ee(5): mov $0x1,%edi
43f3(2): xor %eax,%eax
43f5(5): call 0xffffd21b(%rip)
43fa(7): mov 0x202c87(%rip),%rbx
4401(7): lea 0x16d8(%rip),%rsi
4408(2): xor %edi,%edi
440a(5): mov $0x5,%edx
440f(5): call 0xffffd091(%rip)
4414(3): mov %rbx,%rsi
4417(3): mov %rax,%rdi
441a(1): pop %rbx
441b(5): jmp 0xffffd155(%rip)

"xmalloc" :
4420(1): push %rbx
4421(3): mov %rdi,%rbx
4424(5): call 0xffffd18c(%rip)
4429(3): test %rax,%rax
442c(2): jnz 0x7(%rip)
442e(3): test %rbx,%rbx
4431(2): jnz 0x4(%rip)
4433(1): pop %rbx
4434(1): ret near (%rsp)
4435(5): call 0x23b(%rip)

"xnmalloc" :
4440(3): mov %rdi,%rax
4443(3): mul %rax,%rsi,%rdx
4446(3): mov %rax,%rdi
4449(3): seto %al
444c(3): test %rdi,%rdi
444f(2): js 0xc(%rip)
4451(3): movzx %al,%eax
4454(3): test %rax,%rax
4457(2): jnz 0x4(%rip)
4459(2): jmp 0xffffffc7(%rip)
445b(4): sub $0x8,%rsp
445f(5): call 0x211(%rip)

"xrealloc" :
4480(3): test %rsi,%rsi
4483(1): push %rbx
4484(3): mov %rsi,%rbx
4487(2): jnz 0x7(%rip)
4489(3): test %rdi,%rdi
448c(2): jnz 0x1c(%rip)
448e(3): mov %rbx,%rsi
4491(5): call 0xffffd15f(%rip)
4496(3): test %rax,%rax
4499(2): jnz 0x7(%rip)
449b(3): test %rbx,%rbx
449e(2): jnz 0x13(%rip)
44a0(1): pop %rbx
44a1(1): ret near (%rsp)
44a2(6): nop 0x0(%rax,%rax,1)
44a8(5): call 0xffffcf58(%rip)
44ad(2): xor %eax,%eax
44af(1): pop %rbx
44b0(1): ret near (%rsp)
44b1(5): call 0x1bf(%rip)

"xnrealloc" :
44c0(3): mov %rsi,%rax
44c3(3): mul %rax,%rdx,%rdx
44c6(3): mov %rax,%rsi
44c9(3): seto %al
44cc(3): test %rsi,%rsi
44cf(2): js 0xc(%rip)
44d1(3): movzx %al,%eax
44d4(3): test %rax,%rax
44d7(2): jnz 0x4(%rip)
44d9(2): jmp 0xffffffa7(%rip)
44db(4): sub $0x8,%rsp
44df(5): call 0x191(%rip)

"x2nrealloc" :
44f0(3): test %rdi,%rdi
44f3(3): mov %rdx,%r9
44f6(3): mov (%rsi),%rcx
44f9(2): jz 0x37(%rip)
44fb(2): xor %edx,%edx
44fd(a): mov $0x6148914691236517204,%rax
4507(3): div %r9,%rax
450a(3): cmp %rcx,%rax
450d(2): jbe 0x3e(%rip)
450f(3): mov %rcx,%rax
4512(3): shr $0x1,%rax
4515(5): lea 0x1(%rax,%rcx,1),%rcx
451a(3): mov %rcx,(%rsi)
451d(4): imul %r9,%rcx
4521(3): mov %rcx,%rsi
4524(5): jmp 0xffffff5c(%rip)
4529(7): nop 0x0(%rax)
4530(3): test %rcx,%rcx
4533(2): jz 0x25(%rip)
4535(3): mov %rcx,%rax
4538(3): mul %rax,%r9,%rdx
453b(3): seto %dl
453e(3): test %rax,%rax
4541(3): movzx %dl,%edx
4544(2): js 0x7(%rip)
4546(3): test %rdx,%rdx
4549(2): jz 0xffffffd1(%rip)
454b(4): sub $0x8,%rsp
454f(5): call 0x121(%rip)
4554(4): nop 0x0(%rax)
4558(2): xor %edx,%edx
455a(5): mov $0x80,%eax
455f(3): xor %r8d,%r8d
4562(3): div %r9,%rax
4565(3): test %rax,%rax
4568(4): setz %r8b
456c(4): lea 0x0(%r8,%rax,1),%rcx
4570(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4580(3): test %rdi,%rdi
4583(3): mov (%rsi),%rax
4586(2): jz 0x2a(%rip)
4588(a): mov $0x6148914691236517203,%rdx
4592(3): cmp %rdx,%rax
4595(2): jnbe 0x2c(%rip)
4597(3): mov %rax,%rdx
459a(3): shr $0x1,%rdx
459d(5): lea 0x1(%rdx,%rax,1),%rax
45a2(3): mov %rax,(%rsi)
45a5(3): mov %rax,%rsi
45a8(5): jmp 0xfffffed8(%rip)
45ad(3): nop (%rax)
45b0(3): test %rax,%rax
45b3(5): mov $0x80,%edx
45b8(4): cmove %rdx,%rax
45bc(3): test %rax,%rax
45bf(2): jns 0xffffffe3(%rip)
45c1(4): sub $0x8,%rsp
45c5(5): call 0xab(%rip)

"xzalloc" :
45d0(1): push %rbx
45d1(3): mov %rdi,%rbx
45d4(5): call 0xfffffe4c(%rip)
45d9(3): mov %rbx,%rdx
45dc(2): xor %esi,%esi
45de(3): mov %rax,%rdi
45e1(1): pop %rbx
45e2(5): jmp 0xffffcf6e(%rip)

"xcalloc" :
45f0(3): mov %rdi,%rax
45f3(4): sub $0x8,%rsp
45f7(3): mul %rax,%rsi,%rdx
45fa(3): seto %dl
45fd(3): test %rax,%rax
4600(2): js 0x19(%rip)
4602(3): movzx %dl,%edx
4605(3): test %rdx,%rdx
4608(2): jnz 0x11(%rip)
460a(5): call 0xffffcf76(%rip)
460f(3): test %rax,%rax
4612(2): jz 0x7(%rip)
4614(4): add $0x8,%rsp
4618(1): ret near (%rsp)
4619(5): call 0x57(%rip)

"xmemdup" :
4620(1): push %rbp
4621(1): push %rbx
4622(3): mov %rdi,%rbp
4625(3): mov %rsi,%rdi
4628(3): mov %rsi,%rbx
462b(4): sub $0x8,%rsp
462f(5): call 0xfffffdf1(%rip)
4634(4): add $0x8,%rsp
4638(3): mov %rbx,%rdx
463b(3): mov %rbp,%rsi
463e(1): pop %rbx
463f(1): pop %rbp
4640(3): mov %rax,%rdi
4643(5): jmp 0xffffcf4d(%rip)

"xstrdup" :
4650(1): push %rbx
4651(3): mov %rdi,%rbx
4654(5): call 0xffffce6c(%rip)
4659(3): mov %rbx,%rdi
465c(4): lea 0x1(%rax),%rsi
4660(1): pop %rbx
4661(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4670(7): lea 0x1518(%rip),%rsi
4677(4): sub $0x8,%rsp
467b(5): mov $0x5,%edx
4680(2): xor %edi,%edi
4682(5): call 0xffffce1e(%rip)
4687(6): mov 0x20298b(%rip),%edi
468d(7): lea 0xc5c(%rip),%rdx
4694(3): mov %rax,%rcx
4697(2): xor %esi,%esi
4699(2): xor %eax,%eax
469b(5): call 0xffffcf85(%rip)
46a0(5): call 0xffffcd70(%rip)

"xnumtoumax" :
46b0(2): push %r15
46b2(2): push %r14
46b4(3): mov %rcx,%r15
46b7(2): push %r13
46b9(2): push %r12
46bb(3): mov %rdx,%r14
46be(1): push %rbp
46bf(1): push %rbx
46c0(2): mov %esi,%edx
46c2(2): xor %esi,%esi
46c4(3): mov %rdi,%r12
46c7(3): mov %r9,%r13
46ca(4): sub $0x18,%rsp
46ce(3): mov %rsp,%rcx
46d1(4): mov 0x50(%rsp),%ebx
46d5(9): mov $0x28,%rax
46de(5): mov %rax,0x8(%rsp)
46e3(2): xor %eax,%eax
46e5(5): call 0xfb(%rip)
46ea(2): test %eax,%eax
46ec(6): jnz 0x94(%rip)
46f2(4): mov (%rsp),%rbp
46f6(3): cmp %r14,%rbp
46f9(2): jb 0x7(%rip)
46fb(3): cmp %r15,%rbp
46fe(2): jbe 0x56(%rip)
4700(5): call 0xffffcd20(%rip)
4705(7): cmp $0x40000000,%rbp
470c(3): mov %rax,%r14
470f(2): sbb %eax,%eax
4711(3): and $0xd7,%eax
4714(3): add $0x4b,%eax
4717(3): mov %eax,(%r14)
471a(3): mov %r12,%rdi
471d(5): call 0xfffff6c3(%rip)
4722(3): mov (%r14),%esi
4725(3): mov %rax,%r8
4728(5): mov $0x0,%eax
472d(7): lea 0xbb8(%rip),%rdx
4734(3): mov %r13,%rcx
4737(3): cmp $0x16,%esi
473a(3): cmove %eax,%esi
473d(2): test %ebx,%ebx
473f(5): mov $0x1,%eax
4744(3): cmove %eax,%ebx
4747(2): xor %eax,%eax
4749(2): mov %ebx,%edi
474b(5): call 0xffffced5(%rip)
4750(4): mov (%rsp),%rbp
4754(5): mov 0x8(%rsp),%rdx
4759(9): xor $0x28,%rdx
4762(3): mov %rbp,%rax
4765(2): jnz 0x46(%rip)
4767(4): add $0x18,%rsp
476b(1): pop %rbx
476c(1): pop %rbp
476d(2): pop %r12
476f(2): pop %r13
4771(2): pop %r14
4773(2): pop %r15
4775(1): ret near (%rsp)
4776(a): nop 0x0(%rax,%rax,1)
4780(2): mov %eax,%ebp
4782(5): call 0xffffcc9e(%rip)
4787(3): cmp $0x1,%ebp
478a(3): mov %rax,%r14
478d(2): jz 0x13(%rip)
478f(3): cmp $0x3,%ebp
4792(2): jnz 0xffffff88(%rip)
4794(6): mov $0x0,(%rax)
479a(5): jmp 0xffffff80(%rip)
479f(1): nop 
47a0(6): mov $0x4b,(%rax)
47a6(5): jmp 0xffffff74(%rip)
47ab(5): call 0xffffcd25(%rip)

"xdectoumax" :
47b0(4): sub $0x10,%rsp
47b4(2): push %r9
47b6(3): mov %r8,%r9
47b9(3): mov %rcx,%r8
47bc(3): mov %rdx,%rcx
47bf(3): mov %rsi,%rdx
47c2(5): mov $0xa,%esi
47c7(5): call 0xfffffee9(%rip)
47cc(4): add $0x18,%rsp
47d0(1): ret near (%rsp)

"xstrtoumax" :
47e0(2): push %r15
47e2(2): push %r14
47e4(2): push %r13
47e6(2): push %r12
47e8(1): push %rbp
47e9(1): push %rbx
47ea(4): sub $0x28,%rsp
47ee(9): mov $0x28,%rax
47f7(5): mov %rax,0x18(%rsp)
47fc(2): xor %eax,%eax
47fe(3): cmp $0x24,%edx
4801(6): jnbe 0x364(%rip)
4807(5): lea 0x10(%rsp),%rax
480c(3): mov %rsi,%r15
480f(3): test %rsi,%rsi
4812(3): mov %rdi,%rbp
4815(4): mov %edx,0x8(%rsp)
4819(3): mov %rcx,%r14
481c(3): mov %r8,%r13
481f(4): cmove %rax,%r15
4823(5): call 0xffffcbfd(%rip)
4828(6): mov $0x0,(%rax)
482e(3): mov %rax,%r12
4831(4): movzx 0x0(%rbp),%ebx
4835(5): call 0xffffce9b(%rip)
483a(4): mov 0x8(%rsp),%edx
483e(3): mov (%rax),%rsi
4841(3): mov %rbp,%rax
4844(2): jmp 0x13(%rip)
4846(a): nop 0x0(%rax,%rax,1)
4850(4): add $0x1,%rax
4854(3): movzx (%rax),%ebx
4857(3): movzx %bl,%ecx
485a(5): test $0x20,0x1(%rsi,%rcx,2)
485f(2): jnz 0xfffffff1(%rip)
4861(3): cmp $0x2d,%bl
4864(2): jz 0x54(%rip)
4866(2): xor %ecx,%ecx
4868(3): mov %r15,%rsi
486b(3): mov %rbp,%rdi
486e(5): call 0xffffccd2(%rip)
4873(3): mov (%r15),%rcx
4876(3): mov %rax,%rbx
4879(3): cmp %rbp,%rcx
487c(2): jz 0x2c(%rip)
487e(4): mov (%r12),%eax
4882(2): test %eax,%eax
4884(2): jz 0x64(%rip)
4886(3): cmp $0x22,%eax
4889(5): mov $0x1,%ebp
488e(2): jnz 0x2a(%rip)
4890(3): test %r13,%r13
4893(2): jz 0xb(%rip)
4895(4): movzx (%rcx),%r12d
4899(3): test %r12b,%r12b
489c(2): jnz 0x7b(%rip)
489e(3): mov %rbx,(%r14)
48a1(2): jmp 0x1c(%rip)
48a3(5): nop 0x0(%rax,%rax,1)
48a8(3): test %r13,%r13
48ab(5): mov %rcx,0x8(%rsp)
48b0(2): jnz 0x40(%rip)
48b2(6): nop 0x0(%rax,%rax,1)
48b8(5): mov $0x4,%ebp
48bd(5): mov 0x18(%rsp),%rdi
48c2(9): xor $0x28,%rdi
48cb(2): mov %ebp,%eax
48cd(6): jnz 0x293(%rip)
48d3(4): add $0x28,%rsp
48d7(1): pop %rbx
48d8(1): pop %rbp
48d9(2): pop %r12
48db(2): pop %r13
48dd(2): pop %r14
48df(2): pop %r15
48e1(1): ret near (%rsp)
48e2(6): nop 0x0(%rax,%rax,1)
48e8(2): xor %ebp,%ebp
48ea(2): jmp 0xffffffa6(%rip)
48ec(4): nop 0x0(%rax)
48f0(5): movzx 0x0(%rbp),%r12d
48f5(3): test %r12b,%r12b
48f8(2): jz 0xffffffc0(%rip)
48fa(4): movsx %r12b,%esi
48fe(3): mov %r13,%rdi
4901(2): xor %ebp,%ebp
4903(5): call 0xffffcbfd(%rip)
4908(3): test %rax,%rax
490b(5): mov $0x1,%ebx
4910(5): mov 0x8(%rsp),%rcx
4915(2): jz 0xffffffa3(%rip)
4917(4): movsx %r12b,%esi
491b(3): mov %r13,%rdi
491e(5): mov %rcx,0x8(%rsp)
4923(5): call 0xffffcbdd(%rip)
4928(3): test %rax,%rax
492b(5): mov 0x8(%rsp),%rcx
4930(6): jz 0xcc(%rip)
4936(5): lea 0xffffffbb(%r12),%eax
493b(2): cmp $0x2f,%al
493d(2): jnbe 0x53(%rip)
493f(a): mov $0x142129060940101,%rdx
4949(4): bt %rax,%rdx
494d(2): jnb 0x43(%rip)
494f(5): mov $0x30,%esi
4954(3): mov %r13,%rdi
4957(5): mov %rcx,0x8(%rsp)
495c(5): call 0xffffcba4(%rip)
4961(3): test %rax,%rax
4964(5): mov 0x8(%rsp),%rcx
4969(2): jz 0x27(%rip)
496b(4): movzx 0x1(%rcx),%eax
496f(2): cmp $0x44,%al
4971(2): jz 0xe(%rip)
4973(2): cmp $0x69,%al
4975(6): jz 0x1d3(%rip)
497b(2): cmp $0x42,%al
497d(2): jnz 0x13(%rip)
497f(5): mov $0x2,%edi
4984(5): mov $0x3e8,%esi
4989(2): jmp 0x11(%rip)
498b(5): nop 0x0(%rax,%rax,1)
4990(5): mov $0x1,%edi
4995(5): mov $0x400,%esi
499a(4): sub $0x42,%r12d
499e(4): cmp $0x35,%r12b
49a2(2): jnbe 0x5a(%rip)
49a4(7): lea 0x123d(%rip),%rdx
49ab(4): movzx %r12b,%r12d
49af(4): movsxd 0x0(%rdx,%r12,4),%rax
49b3(3): add %rdx,%rax
49b6(2): jmp %rax
49b8(3): mov %rbx,%rax
49bb(3): mul %rax,%rsi,%rdx
49be(6): jo 0x1f3(%rip)
49c4(3): xor %r8d,%r8d
49c7(3): mul %rax,%rsi,%rdx
49ca(6): jo 0x1d8(%rip)
49d0(3): mov %rax,%rbx
49d3(3): or %r8d,%ebp
49d6(a): nop 0x0(%rax,%rax,1)
49e0(3): movsxd %edi,%rdi
49e3(2): mov %ebp,%eax
49e5(3): add %rdi,%rcx
49e8(3): or $0x2,%eax
49eb(3): mov %rcx,(%r15)
49ee(3): cmp $0x0,(%rcx)
49f1(3): mov %rbx,(%r14)
49f4(3): cmovne %eax,%ebp
49f7(5): jmp 0xfffffec6(%rip)
49fc(3): mov %rbx,(%r14)
49ff(3): or $0x2,%ebp
4a02(5): jmp 0xfffffebb(%rip)
4a07(5): mov $0x2,%edx
4a0c(3): mov %rdx,%rax
4a0f(3): mul %rax,%rbx,%rdx
4a12(6): jo 0x9c(%rip)
4a18(3): add %rbx,%rbx
4a1b(2): jmp 0xffffffc5(%rip)
4a1d(5): mov $0x200,%edx
4a22(3): mov %rdx,%rax
4a25(3): mul %rax,%rbx,%rdx
4a28(6): jo 0x86(%rip)
4a2e(4): shl/sal $0x9,%rbx
4a32(2): jmp 0xffffffae(%rip)
4a34(6): mov $0x7,%r8d
4a3a(3): xor %r9d,%r9d
4a3d(3): nop (%rax)
4a40(3): mov %rbx,%rax
4a43(3): mul %rax,%rsi,%rdx
4a46(3): mov %rax,%rbx
4a49(6): jo 0x195(%rip)
4a4f(4): sub $0x1,%r8d
4a53(2): jnz 0xffffffed(%rip)
4a55(3): or %r9d,%ebp
4a58(2): jmp 0xffffff88(%rip)
4a5a(6): mov $0x8,%r8d
4a60(3): xor %r9d,%r9d
4a63(5): nop 0x0(%rax,%rax,1)
4a68(3): mov %rbx,%rax
4a6b(3): mul %rax,%rsi,%rdx
4a6e(3): mov %rax,%rbx
4a71(6): jo 0x14f(%rip)
4a77(4): sub $0x1,%r8d
4a7b(2): jnz 0xffffffed(%rip)
4a7d(2): jmp 0xffffffd8(%rip)
4a7f(6): mov $0x4,%r8d
4a85(3): xor %r9d,%r9d
4a88(3): mov %rbx,%rax
4a8b(3): mul %rax,%rsi,%rdx
4a8e(3): mov %rax,%rbx
4a91(6): jo 0x102(%rip)
4a97(4): sub $0x1,%r8d
4a9b(2): jnz 0xffffffed(%rip)
4a9d(2): jmp 0xffffffb8(%rip)
4a9f(3): mov %rbx,%rax
4aa2(3): mul %rax,%rsi,%rdx
4aa5(3): mov %rax,%rbx
4aa8(6): jno 0xffffff38(%rip)
4aae(5): mov $0x1,%ebp
4ab3(4): or $0xffffffff,%rbx
4ab7(5): jmp 0xffffff29(%rip)
4abc(4): nop 0x0(%rax)
4ac0(6): mov $0x5,%r8d
4ac6(3): xor %r9d,%r9d
4ac9(3): mov %rbx,%rax
4acc(3): mul %rax,%rsi,%rdx
4acf(3): mov %rax,%rbx
4ad2(6): jo 0xfd(%rip)
4ad8(4): sub $0x1,%r8d
4adc(2): jnz 0xffffffed(%rip)
4ade(5): jmp 0xffffff77(%rip)
4ae3(6): mov $0x6,%r8d
4ae9(3): xor %r9d,%r9d
4aec(3): mov %rbx,%rax
4aef(3): mul %rax,%rsi,%rdx
4af2(3): mov %rax,%rbx
4af5(6): jo 0x8f(%rip)
4afb(4): sub $0x1,%r8d
4aff(2): jnz 0xffffffed(%rip)
4b01(5): jmp 0xffffff54(%rip)
4b06(5): mov $0x400,%edx
4b0b(3): mov %rdx,%rax
4b0e(3): mul %rax,%rbx,%rdx
4b11(2): jo 0xffffff9d(%rip)
4b13(4): shl/sal $0xa,%rbx
4b17(5): jmp 0xfffffec9(%rip)
4b1c(3): mov %rbx,%rax
4b1f(3): mul %rax,%rsi,%rdx
4b22(6): jo 0xcb(%rip)
4b28(3): xor %r8d,%r8d
4b2b(3): mul %rax,%rsi,%rdx
4b2e(6): jno 0xfffffe99(%rip)
4b34(6): mov $0x1,%r8d
4b3a(4): or $0xffffffff,%rax
4b3e(5): jmp 0xfffffe89(%rip)
4b43(5): nop 0x0(%rax,%rax,1)
4b48(2): xor %edi,%edi
4b4a(4): cmp $0x42,0x2(%rcx)
4b4e(5): mov $0x400,%esi
4b53(4): setz %dil
4b57(4): lea 0x1(%rdi,%rdi,1),%edi
4b5b(5): jmp 0xfffffe3f(%rip)
4b60(5): call 0xffffc970(%rip)
4b65(7): lea 0x1154(%rip),%rcx
4b6c(7): lea 0x102d(%rip),%rsi
4b73(7): lea 0x1046(%rip),%rdi
4b7a(5): mov $0x54,%edx
4b7f(5): call 0xffffc9b1(%rip)
4b84(6): mov $0x1,%r9d
4b8a(4): or $0xffffffff,%rbx
4b8e(5): jmp 0xffffff6d(%rip)
4b93(6): mov $0x1,%r9d
4b99(4): or $0xffffffff,%rbx
4b9d(5): jmp 0xfffffefa(%rip)
4ba2(6): mov $0x1,%r8d
4ba8(4): or $0xffffffff,%rbx
4bac(5): jmp 0xfffffe27(%rip)
4bb1(4): or $0xffffffff,%rax
4bb5(6): mov $0x1,%r8d
4bbb(5): jmp 0xfffffe0c(%rip)
4bc0(6): mov $0x1,%r9d
4bc6(4): or $0xffffffff,%rbx
4bca(5): jmp 0xfffffead(%rip)
4bcf(6): mov $0x1,%r9d
4bd5(4): or $0xffffffff,%rbx
4bd9(5): jmp 0xfffffeff(%rip)
4bde(6): mov $0x1,%r9d
4be4(4): or $0xffffffff,%rbx
4be8(5): jmp 0xfffffe67(%rip)
4bed(6): mov $0x1,%r8d
4bf3(4): or $0xffffffff,%rax
4bf7(5): jmp 0xffffff34(%rip)

"rpl_mbrtowc" :
4c00(2): push %r13
4c02(2): push %r12
4c04(3): mov %rsi,%r13
4c07(1): push %rbp
4c08(1): push %rbx
4c09(3): mov %rdi,%rbx
4c0c(3): mov %rdx,%r12
4c0f(4): sub $0x18,%rsp
4c13(9): mov $0x28,%rax
4c1c(5): mov %rax,0x8(%rsp)
4c21(2): xor %eax,%eax
4c23(5): lea 0x4(%rsp),%rax
4c28(3): test %rdi,%rdi
4c2b(4): cmove %rax,%rbx
4c2f(3): mov %rbx,%rdi
4c32(5): call 0xffffc8be(%rip)
4c37(4): cmp $0xfffffffd,%rax
4c3b(3): mov %rax,%rbp
4c3e(2): jbe 0x22(%rip)
4c40(3): test %r12,%r12
4c43(2): jz 0x1d(%rip)
4c45(2): xor %edi,%edi
4c47(5): call 0xc9(%rip)
4c4c(2): test %al,%al
4c4e(2): jnz 0x12(%rip)
4c50(5): movzx 0x0(%r13),%eax
4c55(5): mov $0x1,%ebp
4c5a(2): mov %eax,(%rbx)
4c5c(4): nop 0x0(%rax)
4c60(5): mov 0x8(%rsp),%rdx
4c65(9): xor $0x28,%rdx
4c6e(3): mov %rbp,%rax
4c71(2): jnz 0xd(%rip)
4c73(4): add $0x18,%rsp
4c77(1): pop %rbx
4c78(1): pop %rbp
4c79(2): pop %r12
4c7b(2): pop %r13
4c7d(1): ret near (%rsp)
4c7e(5): call 0xffffc852(%rip)

"close_stream" :
4c90(2): push %r12
4c92(1): push %rbp
4c93(3): mov %rdi,%rbp
4c96(1): push %rbx
4c97(5): call 0xffffc7b9(%rip)
4c9c(3): mov 0x0(%rbp),%ebx
4c9f(3): mov %rbp,%rdi
4ca2(3): mov %rax,%r12
4ca5(5): call 0x10b(%rip)
4caa(3): and $0x20,%ebx
4cad(2): test %ebx,%ebx
4caf(2): jnz 0x19(%rip)
4cb1(2): test %eax,%eax
4cb3(2): jz 0xc(%rip)
4cb5(3): test %r12,%r12
4cb8(5): mov $0xffffffff,%eax
4cbd(2): jz 0x3b(%rip)
4cbf(1): pop %rbx
4cc0(1): pop %rbp
4cc1(2): pop %r12
4cc3(1): ret near (%rsp)
4cc4(4): nop 0x0(%rax)
4cc8(2): test %eax,%eax
4cca(2): jnz 0x1e(%rip)
4ccc(5): call 0xffffc754(%rip)
4cd1(6): mov $0x0,(%rax)
4cd7(5): mov $0xffffffff,%eax
4cdc(1): pop %rbx
4cdd(1): pop %rbp
4cde(2): pop %r12
4ce0(1): ret near (%rsp)
4ce1(7): nop 0x0(%rax)
4ce8(1): pop %rbx
4ce9(5): mov $0xffffffff,%eax
4cee(1): pop %rbp
4cef(2): pop %r12
4cf1(1): ret near (%rsp)
4cf2(6): nop 0x0(%rax,%rax,1)
4cf8(5): call 0xffffc728(%rip)
4cfd(3): cmp $0x9,(%rax)
4d00(1): pop %rbx
4d01(1): pop %rbp
4d02(2): pop %r12
4d04(3): setnz %al
4d07(3): movzx %al,%eax
4d0a(2): neg %eax
4d0c(1): ret near (%rsp)

"hard_locale" :
4d10(4): sub $0x8,%rsp
4d14(2): xor %esi,%esi
4d16(5): call 0xffffc8ea(%rip)
4d1b(3): mov %rax,%rdx
4d1e(5): mov $0x1,%eax
4d23(3): test %rdx,%rdx
4d26(2): jz 0x1f(%rip)
4d28(7): lea 0xf9c(%rip),%rdi
4d2f(5): mov $0x2,%ecx
4d34(3): mov %rdx,%rsi
4d37(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4d39(3): setnbe %cl
4d3c(3): sbb $0x0,%cl
4d3f(2): xor %eax,%eax
4d41(2): test %cl,%cl
4d43(2): jnz 0xd(%rip)
4d45(4): add $0x8,%rsp
4d49(1): ret near (%rsp)
4d4a(6): nop 0x0(%rax,%rax,1)
4d50(7): lea 0xf76(%rip),%rdi
4d57(5): mov $0x6,%ecx
4d5c(3): mov %rdx,%rsi
4d5f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4d61(3): setnbe %al
4d64(2): sbb $0x0,%al
4d66(2): test %al,%al
4d68(3): setnz %al
4d6b(4): add $0x8,%rsp
4d6f(1): ret near (%rsp)

"locale_charset" :
4d70(4): sub $0x8,%rsp
4d74(5): mov $0xe,%edi
4d79(5): call 0xffffc857(%rip)
4d7e(3): test %rax,%rax
4d81(2): jz 0x1f(%rip)
4d83(3): cmp $0x0,(%rax)
4d86(7): lea 0xf46(%rip),%rdx
4d8d(4): cmove %rdx,%rax
4d91(4): add $0x8,%rsp
4d95(1): ret near (%rsp)
4d96(a): nop 0x0(%rax,%rax,1)
4da0(7): lea 0xf2c(%rip),%rax
4da7(4): add $0x8,%rsp
4dab(1): ret near (%rsp)

"rpl_fclose" :
4db0(2): push %r12
4db2(1): push %rbp
4db3(1): push %rbx
4db4(3): mov %rdi,%rbx
4db7(5): call 0xffffc7e9(%rip)
4dbc(2): test %eax,%eax
4dbe(3): mov %rbx,%rdi
4dc1(2): js 0x56(%rip)
4dc3(5): call 0xffffc81d(%rip)
4dc8(2): test %eax,%eax
4dca(2): jnz 0x2e(%rip)
4dcc(3): mov %rbx,%rdi
4dcf(5): call 0x61(%rip)
4dd4(2): test %eax,%eax
4dd6(2): jz 0x3e(%rip)
4dd8(5): call 0xffffc648(%rip)
4ddd(3): mov (%rax),%r12d
4de0(3): mov %rbx,%rdi
4de3(3): mov %rax,%rbp
4de6(5): call 0xffffc68a(%rip)
4deb(3): test %r12d,%r12d
4dee(2): jnz 0x32(%rip)
4df0(1): pop %rbx
4df1(1): pop %rbp
4df2(2): pop %r12
4df4(1): ret near (%rsp)
4df5(3): nop (%rax)
4df8(3): mov %rbx,%rdi
4dfb(5): call 0xffffc7a5(%rip)
4e00(2): xor %esi,%esi
4e02(5): mov $0x1,%edx
4e07(2): mov %eax,%edi
4e09(5): call 0xffffc717(%rip)
4e0e(4): cmp $0xffffffff,%rax
4e12(2): jnz 0xffffffba(%rip)
4e14(3): mov %rbx,%rdi
4e17(1): pop %rbx
4e18(1): pop %rbp
4e19(2): pop %r12
4e1b(5): jmp 0xffffc655(%rip)
4e20(4): mov %r12d,0x0(%rbp)
4e24(5): mov $0xffffffff,%eax
4e29(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4e30(3): test %rdi,%rdi
4e33(1): push %rbx
4e34(3): mov %rdi,%rbx
4e37(2): jz 0x13(%rip)
4e39(5): call 0xffffc7a7(%rip)
4e3e(2): test %eax,%eax
4e40(2): jz 0xa(%rip)
4e42(6): test $0x100,(%rbx)
4e48(2): jnz 0x10(%rip)
4e4a(3): mov %rbx,%rdi
4e4d(1): pop %rbx
4e4e(5): jmp 0xffffc772(%rip)
4e53(5): nop 0x0(%rax,%rax,1)
4e58(3): mov %rbx,%rdi
4e5b(5): mov $0x1,%edx
4e60(2): xor %esi,%esi
4e62(5): call 0xe(%rip)
4e67(3): mov %rbx,%rdi
4e6a(1): pop %rbx
4e6b(5): jmp 0xffffc755(%rip)

"rpl_fseeko" :
4e70(4): mov 0x8(%rdi),%rax
4e74(4): cmp %rax,0x10(%rdi)
4e78(2): jz 0x8(%rip)
4e7a(5): jmp 0xffffc7b6(%rip)
4e7f(1): nop 
4e80(4): mov 0x20(%rdi),%rax
4e84(4): cmp %rax,0x28(%rdi)
4e88(2): jnz 0xfffffff2(%rip)
4e8a(5): cmp $0x0,0x48(%rdi)
4e8f(2): jnz 0xffffffeb(%rip)
4e91(2): push %r12
4e93(1): push %rbp
4e94(3): mov %edx,%r12d
4e97(1): push %rbx
4e98(3): mov %rsi,%rbp
4e9b(3): mov %rdi,%rbx
4e9e(5): call 0xffffc702(%rip)
4ea3(3): mov %r12d,%edx
4ea6(3): mov %rbp,%rsi
4ea9(2): mov %eax,%edi
4eab(5): call 0xffffc675(%rip)
4eb0(4): cmp $0xffffffff,%rax
4eb4(2): jz 0xe(%rip)
4eb6(3): and $0xef,(%rbx)
4eb9(7): mov %rax,0x90(%rbx)
4ec0(2): xor %eax,%eax
4ec2(1): pop %rbx
4ec3(1): pop %rbp
4ec4(2): pop %r12
4ec6(1): ret near (%rsp)

"__libc_csu_init" :
4ed0(2): push %r15
4ed2(2): push %r14
4ed4(3): mov %rdx,%r15
4ed7(2): push %r13
4ed9(2): push %r12
4edb(7): lea 0x201c6e(%rip),%r12
4ee2(1): push %rbp
4ee3(7): lea 0x201c6e(%rip),%rbp
4eea(1): push %rbx
4eeb(3): mov %edi,%r13d
4eee(3): mov %rsi,%r14
4ef1(3): sub %r12,%rbp
4ef4(4): sub $0x8,%rsp
4ef8(4): sar $0x3,%rbp
4efc(5): call 0xffffc4c4(%rip)
4f01(3): test %rbp,%rbp
4f04(2): jz 0x22(%rip)
4f06(2): xor %ebx,%ebx
4f08(8): nop 0x0(%rax,%rax,1)
4f10(3): mov %r15,%rdx
4f13(3): mov %r14,%rsi
4f16(3): mov %r13d,%edi
4f19(4): call 0x0(%r12,%rbx,8)
4f1d(4): add $0x1,%rbx
4f21(3): cmp %rbx,%rbp
4f24(2): jnz 0xffffffec(%rip)
4f26(4): add $0x8,%rsp
4f2a(1): pop %rbx
4f2b(1): pop %rbp
4f2c(2): pop %r12
4f2e(2): pop %r13
4f30(2): pop %r14
4f32(2): pop %r15
4f34(1): ret near (%rsp)

"atexit" :
4f50(7): mov 0x2020b1(%rip),%rdx
4f57(2): xor %esi,%esi
4f59(5): jmp 0xffffc707(%rip)

"_fini" :
4f60(4): sub $0x8,%rsp
4f64(4): add $0x8,%rsp
4f68(1): ret near (%rsp)

