
"free@plt" :
1240(6): jmp 0x205c3a(%rip)
1246(5): push $0x0

"abort@plt" :
1250(6): jmp 0x205c32(%rip)
1256(5): push $0x1

"__errno_location@plt" :
1260(6): jmp 0x205c2a(%rip)
1266(5): push $0x2

"strncmp@plt" :
1270(6): jmp 0x205c22(%rip)
1276(5): push $0x3

"_exit@plt" :
1280(6): jmp 0x205c1a(%rip)
1286(5): push $0x4

"__fpending@plt" :
1290(6): jmp 0x205c12(%rip)
1296(5): push $0x5

"textdomain@plt" :
12a0(6): jmp 0x205c0a(%rip)
12a6(5): push $0x6

"fclose@plt" :
12b0(6): jmp 0x205c02(%rip)
12b6(5): push $0x7

"bindtextdomain@plt" :
12c0(6): jmp 0x205bfa(%rip)
12c6(5): push $0x8

"dcgettext@plt" :
12d0(6): jmp 0x205bf2(%rip)
12d6(5): push $0x9

"__ctype_get_mb_cur_max@plt" :
12e0(6): jmp 0x205bea(%rip)
12e6(5): push $0xa

"strlen@plt" :
12f0(6): jmp 0x205be2(%rip)
12f6(5): push $0xb

"__stack_chk_fail@plt" :
1300(6): jmp 0x205bda(%rip)
1306(5): push $0xc

"getopt_long@plt" :
1310(6): jmp 0x205bd2(%rip)
1316(5): push $0xd

"mbrtowc@plt" :
1320(6): jmp 0x205bca(%rip)
1326(5): push $0xe

"strchr@plt" :
1330(6): jmp 0x205bc2(%rip)
1336(5): push $0xf

"strrchr@plt" :
1340(6): jmp 0x205bba(%rip)
1346(5): push $0x10

"lseek@plt" :
1350(6): jmp 0x205bb2(%rip)
1356(5): push $0x11

"memset@plt" :
1360(6): jmp 0x205baa(%rip)
1366(5): push $0x12

"memcmp@plt" :
1370(6): jmp 0x205ba2(%rip)
1376(5): push $0x13

"fputs_unlocked@plt" :
1380(6): jmp 0x205b9a(%rip)
1386(5): push $0x14

"calloc@plt" :
1390(6): jmp 0x205b92(%rip)
1396(5): push $0x15

"memcpy@plt" :
13a0(6): jmp 0x205b8a(%rip)
13a6(5): push $0x16

"fileno@plt" :
13b0(6): jmp 0x205b82(%rip)
13b6(5): push $0x17

"malloc@plt" :
13c0(6): jmp 0x205b7a(%rip)
13c6(5): push $0x18

"fflush@plt" :
13d0(6): jmp 0x205b72(%rip)
13d6(5): push $0x19

"nl_langinfo@plt" :
13e0(6): jmp 0x205b6a(%rip)
13e6(5): push $0x1a

"__freading@plt" :
13f0(6): jmp 0x205b62(%rip)
13f6(5): push $0x1b

"realloc@plt" :
1400(6): jmp 0x205b5a(%rip)
1406(5): push $0x1c

"setlocale@plt" :
1410(6): jmp 0x205b52(%rip)
1416(5): push $0x1d

"__printf_chk@plt" :
1420(6): jmp 0x205b4a(%rip)
1426(5): push $0x1e

"error@plt" :
1430(6): jmp 0x205b42(%rip)
1436(5): push $0x1f

"fseeko@plt" :
1440(6): jmp 0x205b3a(%rip)
1446(5): push $0x20

"__cxa_atexit@plt" :
1450(6): jmp 0x205b32(%rip)
1456(5): push $0x21

"exit@plt" :
1460(6): jmp 0x205b2a(%rip)
1466(5): push $0x22

"fwrite@plt" :
1470(6): jmp 0x205b22(%rip)
1476(5): push $0x23

"__fprintf_chk@plt" :
1480(6): jmp 0x205b1a(%rip)
1486(5): push $0x24

"mbsinit@plt" :
1490(6): jmp 0x205b12(%rip)
1496(5): push $0x25

"iswprint@plt" :
14a0(6): jmp 0x205b0a(%rip)
14a6(5): push $0x26

"__ctype_b_loc@plt" :
14b0(6): jmp 0x205b02(%rip)
14b6(5): push $0x27

".plt.got" :
14c0(6): jmp 0x205b1a(%rip)
14c6(2): nop 

"_init" :
1218(4): sub $0x8,%rsp
121c(7): mov 0x205dad(%rip),%rax
1223(3): test %rax,%rax
1226(2): jz 0x4(%rip)
1228(2): call %rax
122a(4): add $0x8,%rsp
122e(1): ret near (%rsp)

"main" :
14d0(2): push %r15
14d2(2): push %r14
14d4(2): push %r13
14d6(2): push %r12
14d8(3): xor %r12d,%r12d
14db(1): push %rbp
14dc(1): push %rbx
14dd(2): mov %edi,%ebp
14df(3): mov %rsi,%rbx
14e2(4): sub $0x8,%rsp
14e6(3): mov (%rsi),%rdi
14e9(5): call 0x747(%rip)
14ee(7): lea 0x3a0c(%rip),%rsi
14f5(5): mov $0x6,%edi
14fa(5): call 0xffffff16(%rip)
14ff(7): lea 0x312a(%rip),%rsi
1506(7): lea 0x30fa(%rip),%rdi
150d(5): call 0xfffffdb3(%rip)
1512(7): lea 0x30ee(%rip),%rdi
1519(5): call 0xfffffd87(%rip)
151e(7): lea 0x65b(%rip),%rdi
1525(a): mov $0x2,0x205ae9(%rip)
152f(5): call 0x3031(%rip)
1534(7): lea 0x205665(%rip),%rcx
153b(7): lea 0x3127(%rip),%rdx
1542(3): xor %r8d,%r8d
1545(3): mov %rbx,%rsi
1548(2): mov %ebp,%edi
154a(5): call 0xfffffdc6(%rip)
154f(3): cmp $0xff,%eax
1552(2): jz 0x6c(%rip)
1554(5): cmp $0xffffff7e,%eax
1559(6): mov $0x1,%r12d
155f(6): jz 0x173(%rip)
1565(3): cmp $0x30,%eax
1568(2): jz 0xffffffcc(%rip)
156a(5): cmp $0xffffff7d,%eax
156f(2): jz 0x11(%rip)
1571(5): mov $0x2,%edi
1576(5): call 0x27a(%rip)
157b(5): nop 0x0(%rax,%rax,1)
1580(4): sub $0x8,%rsp
1584(7): mov 0x205afd(%rip),%rdi
158b(7): mov 0x205a7e(%rip),%rcx
1592(2): push $0x0
1594(7): lea 0x30ad(%rip),%r9
159b(7): lea 0x30b7(%rip),%r8
15a2(7): lea 0x305a(%rip),%rdx
15a9(7): lea 0x2fd4(%rip),%rsi
15b0(2): xor %eax,%eax
15b2(5): call 0x286e(%rip)
15b7(2): xor %edi,%edi
15b9(5): call 0xfffffea7(%rip)
15be(7): movsxd 0x205acb(%rip),%r15
15c5(3): cmp %ebp,%r15d
15c8(2): jl 0x4f(%rip)
15ca(4): cmp $0x1,%r12b
15ce(7): mov 0x205ac3(%rip),%rbx
15d5(7): lea 0x3093(%rip),%r12
15dc(2): sbb %ebp,%ebp
15de(3): and $0xa,%ebp
15e1(2): jmp 0x17(%rip)
15e3(2): mov %ebp,%ecx
15e5(3): mov %r12,%rsi
15e8(5): mov $0x1,%edi
15ed(2): xor %eax,%eax
15ef(4): add $0x8,%rbx
15f3(5): call 0xfffffe2d(%rip)
15f8(3): mov (%rbx),%rdx
15fb(3): test %rdx,%rdx
15fe(2): jnz 0xffffffe5(%rip)
1600(5): mov $0x1,%eax
1605(3): xor $0x1,%eax
1608(1): pop %rdx
1609(3): movzx %al,%eax
160c(1): pop %rbx
160d(1): pop %rbp
160e(2): pop %r12
1610(2): pop %r13
1612(2): pop %r14
1614(2): pop %r15
1616(1): ret near (%rsp)
1617(4): cmp $0x1,%r12b
161b(3): sbb %r13d,%r13d
161e(3): xor %r12d,%r12d
1621(4): and $0xa,%r13d
1625(2): jmp 0xb(%rip)
1627(4): add $0x1,%r15
162b(3): cmp %r15d,%ebp
162e(2): jle 0x71(%rip)
1630(4): mov 0x0(%rbx,%r15,8),%rdi
1634(5): mov $0x3d,%esi
1639(5): call 0xfffffcf7(%rip)
163e(3): test %rax,%rax
1641(2): jnz 0xffffffe6(%rip)
1643(7): mov 0x205a4e(%rip),%r14
164a(3): xor %r9d,%r9d
164d(3): mov (%r14),%rcx
1650(3): test %rcx,%rcx
1653(2): jz 0x47(%rip)
1655(4): mov 0x0(%rbx,%r15,8),%rdx
1659(3): movzx (%rcx),%eax
165c(2): jmp 0x7(%rip)
165e(2): nop 
1660(3): mov %rdi,%rcx
1663(2): test %al,%al
1665(2): jz 0x2f(%rip)
1667(3): movzx (%rdx),%esi
166a(3): test %sil,%sil
166d(2): jz 0x27(%rip)
166f(4): add $0x1,%rdx
1673(3): cmp %al,%sil
1676(4): lea 0x1(%rcx),%rdi
167a(2): jnz 0x1a(%rip)
167c(4): movzx 0x1(%rcx),%eax
1680(2): cmp $0x3d,%al
1682(2): jnz 0xffffffde(%rip)
1684(3): cmp $0x0,(%rdx)
1687(2): jz 0x29(%rip)
1689(3): movzx (%rdx),%esi
168c(3): mov %rdi,%rcx
168f(3): test %sil,%sil
1692(2): jnz 0xffffffdd(%rip)
1694(4): add $0x8,%r14
1698(2): jmp 0xffffffb5(%rip)
169a(3): add %r9d,%r12d
169d(2): jmp 0xffffff8a(%rip)
169f(6): sub 0x2059eb(%rip),%ebp
16a5(3): cmp %r12d,%ebp
16a8(3): setz %al
16ab(5): jmp 0xffffff5a(%rip)
16b0(4): lea 0x2(%rcx),%rdx
16b4(7): lea 0x2fb4(%rip),%rsi
16bb(3): mov %r13d,%ecx
16be(5): mov $0x1,%edi
16c3(2): xor %eax,%eax
16c5(5): call 0xfffffd5b(%rip)
16ca(6): mov $0x1,%r9d
16d0(2): jmp 0xffffffc4(%rip)
16d2(2): xor %edi,%edi
16d4(5): call 0x11c(%rip)

"_start" :
16e0(2): xor %ebp,%ebp
16e2(3): mov %rdx,%r9
16e5(1): pop %rsi
16e6(3): mov %rsp,%rdx
16e9(4): and $0xfffffff0,%rsp
16ed(1): push %rax
16ee(1): push %rsp
16ef(7): lea 0x2e5a(%rip),%r8
16f6(7): lea 0x2de3(%rip),%rcx
16fd(7): lea 0xfffffdcc(%rip),%rdi
1704(6): call 0x2058be(%rip)
170a(1): hlt 

"deregister_tm_clones" :
1710(7): lea 0x205969(%rip),%rdi
1717(1): push %rbp
1718(7): lea 0x205961(%rip),%rax
171f(3): cmp %rdi,%rax
1722(3): mov %rsp,%rbp
1725(2): jz 0x1b(%rip)
1727(7): mov 0x205892(%rip),%rax
172e(3): test %rax,%rax
1731(2): jz 0xf(%rip)
1733(1): pop %rbp
1734(2): jmp %rax
1736(a): nop 0x0(%rax,%rax,1)
1740(1): pop %rbp
1741(1): ret near (%rsp)

"register_tm_clones" :
1750(7): lea 0x205929(%rip),%rdi
1757(7): lea 0x205922(%rip),%rsi
175e(1): push %rbp
175f(3): sub %rdi,%rsi
1762(3): mov %rsp,%rbp
1765(4): sar $0x3,%rsi
1769(3): mov %rsi,%rax
176c(4): shr $0x3f,%rax
1770(3): add %rax,%rsi
1773(3): sar $0x1,%rsi
1776(2): jz 0x1a(%rip)
1778(7): mov 0x205859(%rip),%rax
177f(3): test %rax,%rax
1782(2): jz 0xe(%rip)
1784(1): pop %rbp
1785(2): jmp %rax
1787(9): nop 0x0(%rax,%rax,1)
1790(1): pop %rbp
1791(1): ret near (%rsp)

"__do_global_dtors_aux" :
17a0(7): cmp $0x0,0x205921(%rip)
17a7(2): jnz 0x31(%rip)
17a9(8): cmp $0x0,0x20582f(%rip)
17b1(1): push %rbp
17b2(3): mov %rsp,%rbp
17b5(2): jz 0xe(%rip)
17b7(7): mov 0x20584a(%rip),%rdi
17be(5): call 0xfffffd02(%rip)
17c3(5): call 0xffffff4d(%rip)
17c8(7): mov $0x1,0x2058f9(%rip)
17cf(1): pop %rbp
17d0(1): ret near (%rsp)
17d1(7): nop 0x0(%rax)
17d8(2): REP ret near (%rsp)

"frame_dummy" :
17e0(1): push %rbp
17e1(3): mov %rsp,%rbp
17e4(1): pop %rbp
17e5(5): jmp 0xffffff6b(%rip)

"usage" :
17f0(2): push %r13
17f2(2): push %r12
17f4(5): mov $0x5,%edx
17f9(1): push %rbp
17fa(1): push %rbx
17fb(2): mov %edi,%ebp
17fd(7): sub $0x88,%rsp
1804(7): mov 0x2058d5(%rip),%rbx
180b(9): mov $0x28,%rax
1814(5): mov %rax,0x78(%rsp)
1819(2): xor %eax,%eax
181b(2): test %edi,%edi
181d(2): jz 0x30(%rip)
181f(7): lea 0x2e62(%rip),%rsi
1826(2): xor %edi,%edi
1828(5): call 0xfffffaa8(%rip)
182d(7): mov 0x20588c(%rip),%rdi
1834(3): mov %rax,%rdx
1837(3): mov %rbx,%rcx
183a(5): mov $0x1,%esi
183f(2): xor %eax,%eax
1841(5): call 0xfffffc3f(%rip)
1846(2): mov %ebp,%edi
1848(5): call 0xfffffc18(%rip)
184d(7): lea 0x2e5c(%rip),%rsi
1854(2): xor %edi,%edi
1856(5): call 0xfffffa7a(%rip)
185b(3): mov %rbx,%rdx
185e(3): mov %rax,%rsi
1861(5): mov $0x1,%edi
1866(2): xor %eax,%eax
1868(5): call 0xfffffbb8(%rip)
186d(7): mov 0x205814(%rip),%rbx
1874(7): lea 0x2edd(%rip),%rsi
187b(5): mov $0x5,%edx
1880(2): xor %edi,%edi
1882(5): call 0xfffffa4e(%rip)
1887(3): mov %rbx,%rsi
188a(3): mov %rax,%rdi
188d(5): call 0xfffffaf3(%rip)
1892(7): mov 0x2057ef(%rip),%rbx
1899(7): lea 0x2ef8(%rip),%rsi
18a0(5): mov $0x5,%edx
18a5(2): xor %edi,%edi
18a7(5): call 0xfffffa29(%rip)
18ac(3): mov %rbx,%rsi
18af(3): mov %rax,%rdi
18b2(5): call 0xffffface(%rip)
18b7(7): mov 0x2057ca(%rip),%rbx
18be(7): lea 0x2f03(%rip),%rsi
18c5(5): mov $0x5,%edx
18ca(2): xor %edi,%edi
18cc(5): call 0xfffffa04(%rip)
18d1(3): mov %rbx,%rsi
18d4(3): mov %rax,%rdi
18d7(7): lea 0x2ca6(%rip),%rbx
18de(5): call 0xfffffaa2(%rip)
18e3(7): lea 0x2f16(%rip),%rsi
18ea(5): mov $0x5,%edx
18ef(2): xor %edi,%edi
18f1(5): call 0xfffff9df(%rip)
18f6(7): lea 0x2c87(%rip),%rdx
18fd(3): mov %rax,%rsi
1900(5): mov $0x1,%edi
1905(2): xor %eax,%eax
1907(5): call 0xfffffb19(%rip)
190c(7): lea 0x2c7a(%rip),%rax
1913(7): lea 0x2cb4(%rip),%rcx
191a(9): mov $0x0,0x60(%rsp)
1923(9): mov $0x0,0x68(%rsp)
192c(3): mov %rsp,%rdx
192f(4): mov %rax,(%rsp)
1933(7): lea 0x2c55(%rip),%rax
193a(5): mov %rcx,0x30(%rsp)
193f(7): lea 0x2c92(%rip),%rcx
1946(5): mov %rax,0x8(%rsp)
194b(7): lea 0x2cb5(%rip),%rax
1952(5): mov %rcx,0x40(%rsp)
1957(7): lea 0x2c84(%rip),%rcx
195e(5): mov %rax,0x10(%rsp)
1963(7): lea 0x2c35(%rip),%rax
196a(5): mov %rcx,0x50(%rsp)
196f(5): mov %rax,0x18(%rsp)
1974(7): lea 0x2c3a(%rip),%rax
197b(5): mov %rax,0x20(%rsp)
1980(7): lea 0x2c38(%rip),%rax
1987(5): mov %rax,0x28(%rsp)
198c(5): mov %rax,0x38(%rsp)
1991(5): mov %rax,0x48(%rsp)
1996(5): mov %rax,0x58(%rsp)
199b(5): nop 0x0(%rax,%rax,1)
19a0(4): add $0x10,%rdx
19a4(3): mov (%rdx),%rdi
19a7(3): test %rdi,%rdi
19aa(2): jz 0x15(%rip)
19ac(5): mov $0x9,%ecx
19b1(3): mov %rbx,%rsi
19b4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
19b6(3): setnbe %al
19b9(2): sbb $0x0,%al
19bb(2): test %al,%al
19bd(2): jnz 0xffffffe3(%rip)
19bf(4): mov 0x8(%rdx),%r12
19c3(2): xor %edi,%edi
19c5(5): mov $0x5,%edx
19ca(7): lea 0x2c1b(%rip),%rsi
19d1(3): test %r12,%r12
19d4(6): jz 0xc7(%rip)
19da(5): call 0xfffff8f6(%rip)
19df(7): lea 0x2eda(%rip),%rcx
19e6(7): lea 0x2c16(%rip),%rdx
19ed(3): mov %rax,%rsi
19f0(5): mov $0x1,%edi
19f5(2): xor %eax,%eax
19f7(5): call 0xfffffa29(%rip)
19fc(2): xor %esi,%esi
19fe(5): mov $0x5,%edi
1a03(5): call 0xfffffa0d(%rip)
1a08(3): test %rax,%rax
1a0b(2): jz 0x1e(%rip)
1a0d(7): lea 0x2bfd(%rip),%rsi
1a14(5): mov $0x3,%edx
1a19(3): mov %rax,%rdi
1a1c(5): call 0xfffff854(%rip)
1a21(2): test %eax,%eax
1a23(6): jnz 0x10d(%rip)
1a29(7): lea 0x2be5(%rip),%rsi
1a30(2): xor %edi,%edi
1a32(5): mov $0x5,%edx
1a37(5): call 0xfffff899(%rip)
1a3c(7): lea 0x2b41(%rip),%rcx
1a43(7): lea 0x2e76(%rip),%rdx
1a4a(3): mov %rax,%rsi
1a4d(5): mov $0x1,%edi
1a52(2): xor %eax,%eax
1a54(5): call 0xfffff9cc(%rip)
1a59(3): cmp %rbx,%r12
1a5c(7): lea 0x2b46(%rip),%rcx
1a63(7): lea 0x3497(%rip),%rbx
1a6a(4): cmove %rcx,%rbx
1a6e(7): lea 0x2ebb(%rip),%rsi
1a75(2): xor %edi,%edi
1a77(5): mov $0x5,%edx
1a7c(5): call 0xfffff854(%rip)
1a81(3): mov %rbx,%rcx
1a84(3): mov %rax,%rsi
1a87(3): mov %r12,%rdx
1a8a(5): mov $0x1,%edi
1a8f(2): xor %eax,%eax
1a91(5): call 0xfffff98f(%rip)
1a96(5): jmp 0xfffffdb0(%rip)
1a9b(5): call 0xfffff835(%rip)
1aa0(7): lea 0x2e19(%rip),%rcx
1aa7(7): lea 0x2b55(%rip),%rdx
1aae(3): mov %rax,%rsi
1ab1(5): mov $0x1,%edi
1ab6(2): xor %eax,%eax
1ab8(5): call 0xfffff968(%rip)
1abd(2): xor %esi,%esi
1abf(5): mov $0x5,%edi
1ac4(5): call 0xfffff94c(%rip)
1ac9(3): test %rax,%rax
1acc(2): jz 0x1a(%rip)
1ace(7): lea 0x2b3c(%rip),%rsi
1ad5(5): mov $0x3,%edx
1ada(3): mov %rax,%rdi
1add(5): call 0xfffff793(%rip)
1ae2(2): test %eax,%eax
1ae4(2): jnz 0x45(%rip)
1ae6(7): lea 0x2b28(%rip),%rsi
1aed(5): mov $0x5,%edx
1af2(2): xor %edi,%edi
1af4(7): lea 0x2a89(%rip),%r12
1afb(7): lea 0x2aa7(%rip),%rbx
1b02(5): call 0xfffff7ce(%rip)
1b07(7): lea 0x2a76(%rip),%rcx
1b0e(7): lea 0x2dab(%rip),%rdx
1b15(3): mov %rax,%rsi
1b18(5): mov $0x1,%edi
1b1d(2): xor %eax,%eax
1b1f(5): call 0xfffff901(%rip)
1b24(5): jmp 0xffffff4a(%rip)
1b29(7): lea 0x2a54(%rip),%r12
1b30(7): mov 0x205551(%rip),%r13
1b37(7): lea 0x2daa(%rip),%rsi
1b3e(2): xor %edi,%edi
1b40(5): mov $0x5,%edx
1b45(5): call 0xfffff78b(%rip)
1b4a(3): mov %r13,%rsi
1b4d(3): mov %rax,%rdi
1b50(5): call 0xfffff830(%rip)
1b55(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1b60(7): mov %rdi,0x205571(%rip)
1b67(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1b70(7): mov %dil,0x205559(%rip)
1b77(1): ret near (%rsp)

"close_stdout" :
1b80(1): push %rbp
1b81(1): push %rbx
1b82(4): sub $0x8,%rsp
1b86(7): mov 0x2054fb(%rip),%rdi
1b8d(5): call 0x2713(%rip)
1b92(2): test %eax,%eax
1b94(2): jz 0x18(%rip)
1b96(5): call 0xfffff6ca(%rip)
1b9b(7): cmp $0x0,0x20552e(%rip)
1ba2(3): mov %rax,%rbx
1ba5(2): jz 0x1e(%rip)
1ba7(3): cmp $0x20,(%rax)
1baa(2): jnz 0x19(%rip)
1bac(7): mov 0x20550d(%rip),%rdi
1bb3(5): call 0x26ed(%rip)
1bb8(2): test %eax,%eax
1bba(2): jnz 0x48(%rip)
1bbc(4): add $0x8,%rsp
1bc0(1): pop %rbx
1bc1(1): pop %rbp
1bc2(1): ret near (%rsp)
1bc3(7): lea 0x2d9e(%rip),%rsi
1bca(2): xor %edi,%edi
1bcc(5): mov $0x5,%edx
1bd1(5): call 0xfffff6ff(%rip)
1bd6(7): mov 0x2054fb(%rip),%rdi
1bdd(3): mov %rax,%rbp
1be0(3): test %rdi,%rdi
1be3(2): jz 0x2a(%rip)
1be5(5): call 0x1b5b(%rip)
1bea(2): mov (%rbx),%esi
1bec(7): lea 0x2d81(%rip),%rdx
1bf3(3): mov %rax,%rcx
1bf6(3): mov %rbp,%r8
1bf9(2): xor %edi,%edi
1bfb(2): xor %eax,%eax
1bfd(5): call 0xfffff833(%rip)
1c02(6): mov 0x205410(%rip),%edi
1c08(5): call 0xfffff678(%rip)
1c0d(2): mov (%rbx),%esi
1c0f(7): lea 0x2d62(%rip),%rdx
1c16(3): mov %rax,%rcx
1c19(2): xor %edi,%edi
1c1b(2): xor %eax,%eax
1c1d(5): call 0xfffff813(%rip)
1c22(2): jmp 0xffffffe0(%rip)

"set_program_name" :
1c30(3): test %rdi,%rdi
1c33(1): push %rbx
1c34(2): jz 0x79(%rip)
1c36(5): mov $0x2f,%esi
1c3b(3): mov %rdi,%rbx
1c3e(5): call 0xfffff702(%rip)
1c43(3): test %rax,%rax
1c46(2): jz 0x57(%rip)
1c48(4): lea 0x1(%rax),%r8
1c4c(3): mov %r8,%rdx
1c4f(3): sub %rbx,%rdx
1c52(4): cmp $0x6,%rdx
1c56(2): jle 0x47(%rip)
1c58(4): lea 0xfffffffa(%rax),%rsi
1c5c(7): lea 0x2d55(%rip),%rdi
1c63(5): mov $0x7,%ecx
1c68(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c6a(3): setnbe %dl
1c6d(3): sbb $0x0,%dl
1c70(2): test %dl,%dl
1c72(2): jnz 0x2b(%rip)
1c74(7): lea 0x2d45(%rip),%rdi
1c7b(5): mov $0x3,%ecx
1c80(3): mov %r8,%rsi
1c83(3): mov %r8,%rbx
1c86(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c88(3): setnbe %dl
1c8b(3): sbb $0x0,%dl
1c8e(2): test %dl,%dl
1c90(2): jnz 0xd(%rip)
1c92(4): lea 0x4(%rax),%rbx
1c96(7): mov %rbx,0x2053e3(%rip)
1c9d(7): mov %rbx,0x20543c(%rip)
1ca4(7): mov %rbx,0x2053f5(%rip)
1cab(1): pop %rbx
1cac(1): ret near (%rsp)
1cad(7): mov 0x20540c(%rip),%rcx
1cb4(7): lea 0x2cc5(%rip),%rdi
1cbb(5): mov $0x37,%edx
1cc0(5): mov $0x1,%esi
1cc5(5): call 0xfffff7ab(%rip)
1cca(5): call 0xfffff586(%rip)

"gettext_quote.part.1" :
1cd0(1): push %rbp
1cd1(1): push %rbx
1cd2(3): mov %rdi,%rbp
1cd5(2): mov %esi,%ebx
1cd7(4): sub $0x8,%rsp
1cdb(5): call 0x26a5(%rip)
1ce0(3): movzx (%rax),%edx
1ce3(3): and $0xdf,%edx
1ce6(3): cmp $0x55,%dl
1ce9(2): jz 0x77(%rip)
1ceb(3): cmp $0x47,%dl
1cee(2): jz 0x22(%rip)
1cf0(7): lea 0x2cdc(%rip),%rax
1cf7(7): lea 0x2cd7(%rip),%rdx
1cfe(3): cmp $0x9,%ebx
1d01(4): cmovne %rdx,%rax
1d05(4): add $0x8,%rsp
1d09(1): pop %rbx
1d0a(1): pop %rbp
1d0b(1): ret near (%rsp)
1d0c(4): nop 0x0(%rax)
1d10(4): movzx 0x1(%rax),%edx
1d14(3): and $0xdf,%edx
1d17(3): cmp $0x42,%dl
1d1a(2): jnz 0xffffffd6(%rip)
1d1c(4): cmp $0x31,0x2(%rax)
1d20(2): jnz 0xffffffd0(%rip)
1d22(4): cmp $0x38,0x3(%rax)
1d26(2): jnz 0xffffffca(%rip)
1d28(4): cmp $0x30,0x4(%rax)
1d2c(2): jnz 0xffffffc4(%rip)
1d2e(4): cmp $0x33,0x5(%rax)
1d32(2): jnz 0xffffffbe(%rip)
1d34(4): cmp $0x30,0x6(%rax)
1d38(2): jnz 0xffffffb8(%rip)
1d3a(4): cmp $0x0,0x7(%rax)
1d3e(2): jnz 0xffffffb2(%rip)
1d40(4): cmp $0x60,0x0(%rbp)
1d44(7): lea 0x2c81(%rip),%rax
1d4b(7): lea 0x2c7e(%rip),%rdx
1d52(4): cmovne %rdx,%rax
1d56(4): add $0x8,%rsp
1d5a(1): pop %rbx
1d5b(1): pop %rbp
1d5c(1): ret near (%rsp)
1d5d(3): nop (%rax)
1d60(4): movzx 0x1(%rax),%edx
1d64(3): and $0xdf,%edx
1d67(3): cmp $0x54,%dl
1d6a(2): jnz 0xffffff86(%rip)
1d6c(4): movzx 0x2(%rax),%edx
1d70(3): and $0xdf,%edx
1d73(3): cmp $0x46,%dl
1d76(6): jnz 0xffffff7a(%rip)
1d7c(4): cmp $0x2d,0x3(%rax)
1d80(6): jnz 0xffffff70(%rip)
1d86(4): cmp $0x38,0x4(%rax)
1d8a(6): jnz 0xffffff66(%rip)
1d90(4): cmp $0x0,0x5(%rax)
1d94(6): jnz 0xffffff5c(%rip)
1d9a(4): cmp $0x60,0x0(%rbp)
1d9e(7): lea 0x2c1f(%rip),%rax
1da5(7): lea 0x2c1c(%rip),%rdx
1dac(4): cmovne %rdx,%rax
1db0(4): add $0x8,%rsp
1db4(1): pop %rbx
1db5(1): pop %rbp
1db6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1dc0(2): push %r15
1dc2(2): push %r14
1dc4(3): mov %r8d,%r15d
1dc7(2): push %r13
1dc9(2): push %r12
1dcb(3): mov %rdi,%r14
1dce(1): push %rbp
1dcf(1): push %rbx
1dd0(3): mov %r9d,%ebx
1dd3(3): mov %rsi,%r13
1dd6(3): mov %rcx,%rbp
1dd9(3): and $0x2,%ebx
1ddc(7): sub $0xb8,%rsp
1de3(8): mov 0xf0(%rsp),%rax
1deb(5): mov %rdx,0x10(%rsp)
1df0(5): mov %r8d,0x8(%rsp)
1df5(5): mov %r9d,0x78(%rsp)
1dfa(5): mov %rax,0x20(%rsp)
1dff(8): mov 0xf8(%rsp),%rax
1e07(5): mov %rax,0x68(%rsp)
1e0c(8): mov 0x100(%rsp),%rax
1e14(5): mov %rax,0x60(%rsp)
1e19(9): mov $0x28,%rax
1e22(8): mov %rax,0xa8(%rsp)
1e2a(2): xor %eax,%eax
1e2c(5): call 0xfffff4b4(%rip)
1e31(4): cmp $0xa,%r15d
1e35(5): mov %rax,0x58(%rsp)
1e3a(6): jnbe 0x11b5(%rip)
1e40(7): lea 0x2bf9(%rip),%rcx
1e47(3): mov %r15d,%edx
1e4a(4): movsxd 0x0(%rcx,%rdx,4),%rax
1e4e(3): add %rcx,%rax
1e51(2): jmp %rax
1e53(5): mov $0x1,0xe(%rsp)
1e58(5): mov $0x0,0x7c(%rsp)
1e5d(3): xor %r12d,%r12d
1e60(9): mov $0x0,0x50(%rsp)
1e69(5): mov $0x1,0xf(%rsp)
1e6e(5): mov $0x0,0xd(%rsp)
1e73(7): lea 0x2b5b(%rip),%rax
1e7a(9): mov $0x1,0x18(%rsp)
1e83(3): xor %r15d,%r15d
1e86(8): mov $0x2,0x8(%rsp)
1e8e(5): mov %rax,0x48(%rsp)
1e93(3): xor %r11d,%r11d
1e96(3): mov %rbp,%rax
1e99(3): mov %r12d,%r8d
1e9c(3): mov %r11,%rbp
1e9f(3): mov %rax,%r11
1ea2(6): nop 0x0(%rax,%rax,1)
1ea8(3): cmp %rbp,%r11
1eab(4): setnz %r12b
1eaf(4): cmp $0xffffffff,%r11
1eb3(2): jnz 0xf(%rip)
1eb5(5): mov 0x10(%rsp),%rax
1eba(4): cmp $0x0,0x0(%rax,%rbp,1)
1ebe(4): setnz %r12b
1ec2(3): test %r12b,%r12b
1ec5(6): jz 0x65b(%rip)
1ecb(5): cmp $0x2,0x8(%rsp)
1ed0(5): mov 0x10(%rsp),%rdi
1ed5(4): lea 0x0(%rdi,%rbp,1),%r9
1ed9(3): setnz %al
1edc(4): and 0xd(%rsp),%al
1ee0(3): mov %eax,%r10d
1ee3(6): jz 0xad(%rip)
1ee9(5): mov 0x18(%rsp),%rax
1eee(3): test %rax,%rax
1ef1(6): jz 0x42f(%rip)
1ef7(4): cmp $0xffffffff,%r11
1efb(5): lea 0x0(%rbp,%rax,1),%rbx
1f00(2): jnz 0x30(%rip)
1f02(4): cmp $0x1,%rax
1f06(2): jbe 0x2a(%rip)
1f08(5): mov %r8b,0x38(%rsp)
1f0d(5): mov %r10b,0x30(%rsp)
1f12(5): mov %r9,0x28(%rsp)
1f17(5): call 0xfffff3d9(%rip)
1f1c(6): movzx 0x38(%rsp),%r8d
1f22(6): movzx 0x30(%rsp),%r10d
1f28(3): mov %rax,%r11
1f2b(5): mov 0x28(%rsp),%r9
1f30(3): cmp %r11,%rbx
1f33(5): mov %r10b,0x28(%rsp)
1f38(6): jnbe 0x5b8(%rip)
1f3e(5): mov 0x18(%rsp),%rdx
1f43(5): mov 0x48(%rsp),%rsi
1f48(3): mov %r9,%rdi
1f4b(5): mov %r11,0x40(%rsp)
1f50(5): mov %r8b,0x38(%rsp)
1f55(5): mov %r9,0x30(%rsp)
1f5a(5): call 0xfffff416(%rip)
1f5f(2): test %eax,%eax
1f61(5): mov 0x30(%rsp),%r9
1f66(6): movzx 0x38(%rsp),%r8d
1f6c(5): mov 0x40(%rsp),%r11
1f71(6): jnz 0x57f(%rip)
1f77(5): cmp $0x0,0xf(%rsp)
1f7c(6): movzx 0x28(%rsp),%r10d
1f82(6): jnz 0xf83(%rip)
1f88(8): nop 0x0(%rax,%rax,1)
1f90(4): movzx (%r9),%ebx
1f94(3): cmp $0x7e,%bl
1f97(6): jnbe 0x321(%rip)
1f9d(7): lea 0x2ac8(%rip),%rcx
1fa4(3): movzx %bl,%edx
1fa7(4): movsxd 0x0(%rcx,%rdx,4),%rax
1fab(3): add %rcx,%rax
1fae(2): jmp %rax
1fb0(3): xor %r10d,%r10d
1fb3(4): cmp $0x1,%r11
1fb7(3): setnz %al
1fba(4): cmp $0xffffffff,%r11
1fbe(2): jnz 0xe(%rip)
1fc0(5): mov 0x10(%rsp),%rax
1fc5(4): cmp $0x0,0x1(%rax)
1fc9(3): setnz %al
1fcc(5): cmp $0x2,0x8(%rsp)
1fd1(3): setz %dl
1fd4(2): test %al,%al
1fd6(6): jz 0x252(%rip)
1fdc(3): xor %r12d,%r12d
1fdf(2): xor %eax,%eax
1fe1(7): nop 0x0(%rax)
1fe8(5): cmp $0x1,0xd(%rsp)
1fed(6): jnz 0x115(%rip)
1ff3(2): test %dl,%dl
1ff5(6): jnz 0x10d(%rip)
1ffb(5): mov 0x20(%rsp),%rsi
2000(3): test %rsi,%rsi
2003(2): jz 0x16(%rip)
2005(2): mov %ebx,%edx
2007(3): shr $0x5,%dl
200a(3): movzx %dl,%edx
200d(3): mov 0x0(%rsi,%rdx,4),%edx
2010(3): bt %ebx,%edx
2013(6): jb 0x150(%rip)
2019(3): test %r10b,%r10b
201c(6): jnz 0x147(%rip)
2022(3): xor $0x1,%eax
2025(4): add $0x1,%rbp
2029(3): and %r8d,%eax
202c(2): test %al,%al
202e(2): jz 0x22(%rip)
2030(3): cmp %r15,%r13
2033(2): jbe 0x7(%rip)
2035(5): mov $0x27,0x0(%r14,%r15,1)
203a(4): lea 0x1(%r15),%rax
203e(3): cmp %rax,%r13
2041(2): jbe 0x8(%rip)
2043(6): mov $0x27,0x1(%r14,%r15,1)
2049(4): add $0x2,%r15
204d(3): xor %r8d,%r8d
2050(3): cmp %r13,%r15
2053(2): jnb 0x6(%rip)
2055(4): mov %bl,0x0(%r14,%r15,1)
2059(5): movzx 0xe(%rsp),%edi
205e(4): add $0x1,%r15
2062(5): mov $0x0,%eax
2067(3): test %r12b,%r12b
206a(3): cmove %eax,%edi
206d(5): mov %dil,0xe(%rsp)
2072(5): jmp 0xfffffe36(%rip)
2077(9): nop 0x0(%rax,%rax,1)
2080(3): xor %r10d,%r10d
2083(4): mov 0x8(%rsp),%eax
2087(3): cmp $0x2,%eax
208a(6): jz 0x5be(%rip)
2090(3): cmp $0x5,%eax
2093(6): jz 0x575(%rip)
2099(3): cmp $0x2,%eax
209c(5): mov $0x3f,%ebx
20a1(3): setz %dl
20a4(3): xor %r12d,%r12d
20a7(2): xor %eax,%eax
20a9(5): jmp 0xffffff3f(%rip)
20ae(2): nop 
20b0(3): xor %r10d,%r10d
20b3(5): cmp $0x2,0x8(%rsp)
20b8(6): jz 0x508(%rip)
20be(5): mov %r12b,0x7c(%rsp)
20c3(2): xor %edx,%edx
20c5(2): xor %eax,%eax
20c7(5): mov $0x27,%ebx
20cc(5): jmp 0xffffff1c(%rip)
20d1(7): nop 0x0(%rax)
20d8(5): mov $0x9,%edx
20dd(5): mov $0x74,%ebx
20e2(5): cmp $0x2,0x8(%rsp)
20e7(3): setz %al
20ea(4): and 0xf(%rsp),%al
20ee(6): jnz 0x150(%rip)
20f4(5): cmp $0x0,0xd(%rsp)
20f9(2): jnz 0x67(%rip)
20fb(2): mov %edx,%ebx
20fd(3): xor %r12d,%r12d
2100(2): xor %eax,%eax
2102(5): cmp $0x0,0xf(%rsp)
2107(6): jnz 0xfffffef4(%rip)
210d(5): jmp 0xffffff0c(%rip)
2112(6): nop 0x0(%rax,%rax,1)
2118(5): mov $0x8,%edx
211d(5): mov $0x62,%ebx
2122(2): jmp 0xffffffd2(%rip)
2124(4): nop 0x0(%rax)
2128(5): cmp $0x2,0x8(%rsp)
212d(6): jz 0x3d3(%rip)
2133(5): cmp $0x0,0xd(%rsp)
2138(6): jz 0x218(%rip)
213e(5): cmp $0x0,0xf(%rsp)
2143(6): jz 0x20d(%rip)
2149(6): cmp $0x0,0x18(%rsp)
214f(6): jnz 0x3bc(%rip)
2155(5): mov $0x5c,%ebx
215a(6): nop 0x0(%rax,%rax,1)
2160(3): xor %r12d,%r12d
2163(5): cmp $0x2,0x8(%rsp)
2168(3): setz %dl
216b(5): cmp $0x0,0xf(%rsp)
2170(2): mov %edx,%eax
2172(6): jnz 0x856(%rip)
2178(3): mov %r8d,%eax
217b(3): xor $0x1,%eax
217e(2): and %dl,%al
2180(2): jz 0x31(%rip)
2182(3): cmp %r15,%r13
2185(2): jbe 0x7(%rip)
2187(5): mov $0x27,0x0(%r14,%r15,1)
218c(4): lea 0x1(%r15),%rdx
2190(3): cmp %rdx,%r13
2193(2): jbe 0x8(%rip)
2195(6): mov $0x24,0x1(%r14,%r15,1)
219b(4): lea 0x2(%r15),%rdx
219f(3): cmp %rdx,%r13
21a2(2): jbe 0x8(%rip)
21a4(6): mov $0x27,0x2(%r14,%r15,1)
21aa(4): add $0x3,%r15
21ae(3): mov %eax,%r8d
21b1(3): cmp %r15,%r13
21b4(2): jbe 0x7(%rip)
21b6(5): mov $0x5c,0x0(%r14,%r15,1)
21bb(4): add $0x1,%r15
21bf(4): add $0x1,%rbp
21c3(5): jmp 0xfffffe8d(%rip)
21c8(8): nop 0x0(%rax,%rax,1)
21d0(5): cmp $0x0,0xd(%rsp)
21d5(6): jnz 0x1ce(%rip)
21db(2): xor %edx,%edx
21dd(5): test $0x1,0x78(%rsp)
21e2(6): jz 0xffffff19(%rip)
21e8(4): add $0x1,%rbp
21ec(5): jmp 0xfffffcbc(%rip)
21f1(7): nop 0x0(%rax)
21f8(5): cmp $0x2,0x8(%rsp)
21fd(3): setz %dl
2200(2): xor %eax,%eax
2202(5): jmp 0xfffffde6(%rip)
2207(9): nop 0x0(%rax,%rax,1)
2210(5): mov $0x7,%edx
2215(5): mov $0x61,%ebx
221a(5): jmp 0xfffffeda(%rip)
221f(1): nop 
2220(5): cmp $0x2,0x8(%rsp)
2225(3): setz %dl
2228(3): test %rbp,%rbp
222b(6): jnz 0xfffffdb1(%rip)
2231(5): movzx 0xf(%rsp),%eax
2236(2): and %dl,%al
2238(6): jz 0xfffffdb0(%rip)
223e(3): mov %r11,%rbp
2241(8): mov $0x2,0x8(%rsp)
2249(5): jmp 0x700(%rip)
224e(2): nop 
2250(5): cmp $0x2,0x8(%rsp)
2255(3): setz %dl
2258(3): xor %r12d,%r12d
225b(2): jmp 0xffffffd6(%rip)
225d(3): nop (%rax)
2260(5): cmp $0x2,0x8(%rsp)
2265(5): mov $0x20,%ebx
226a(3): setz %dl
226d(2): jmp 0xffffffc4(%rip)
226f(1): nop 
2270(5): mov $0xd,%edx
2275(5): mov $0x72,%ebx
227a(5): jmp 0xfffffe68(%rip)
227f(1): nop 
2280(5): mov $0xc,%edx
2285(5): mov $0x66,%ebx
228a(5): jmp 0xfffffe6a(%rip)
228f(1): nop 
2290(5): mov $0xb,%edx
2295(5): mov $0x76,%ebx
229a(5): jmp 0xfffffe5a(%rip)
229f(1): nop 
22a0(5): mov $0xa,%edx
22a5(5): mov $0x6e,%ebx
22aa(5): jmp 0xfffffe38(%rip)
22af(1): nop 
22b0(3): xor %r10d,%r10d
22b3(5): nop 0x0(%rax,%rax,1)
22b8(6): cmp $0x1,0x58(%rsp)
22be(6): jnz 0x3aa(%rip)
22c4(5): mov %r11,0x38(%rsp)
22c9(5): mov %r8b,0x30(%rsp)
22ce(5): mov %r10b,0x28(%rsp)
22d3(5): call 0xfffff1dd(%rip)
22d8(3): mov (%rax),%rcx
22db(3): movzx %bl,%edx
22de(6): movzx 0x28(%rsp),%r10d
22e4(6): movzx 0x30(%rsp),%r8d
22ea(5): mov 0x38(%rsp),%r11
22ef(5): mov $0x1,%edi
22f4(4): movzx 0x0(%rcx,%rdx,2),%eax
22f8(4): and $0x4000,%ax
22fc(4): setnz %r12b
2300(3): setz %al
2303(4): and 0xd(%rsp),%al
2307(2): test %al,%al
2309(6): jnz 0x998(%rip)
230f(5): cmp $0x2,0x8(%rsp)
2314(3): setz %dl
2317(5): jmp 0xfffffcd1(%rip)
231c(4): nop 0x0(%rax)
2320(4): movzx (%r9),%ebx
2324(3): cmp $0x7e,%bl
2327(2): jnbe 0xffffff89(%rip)
2329(7): lea 0x2938(%rip),%rcx
2330(3): movzx %bl,%edx
2333(4): movsxd 0x0(%rcx,%rdx,4),%rax
2337(3): add %rcx,%rax
233a(2): jmp %rax
233c(4): nop 0x0(%rax)
2340(3): xor %r10d,%r10d
2343(5): cmp $0x0,0xd(%rsp)
2348(6): jnz 0xfffffdf6(%rip)
234e(2): nop 
2350(5): mov $0x5c,%edx
2355(5): mov $0x5c,%ebx
235a(5): jmp 0xfffffd9a(%rip)
235f(1): nop 
2360(5): mov $0xc,%edx
2365(3): xor %r10d,%r10d
2368(5): mov $0x66,%ebx
236d(5): jmp 0xfffffd87(%rip)
2372(6): nop 0x0(%rax,%rax,1)
2378(5): mov $0xa,%edx
237d(3): xor %r10d,%r10d
2380(5): mov $0x6e,%ebx
2385(5): jmp 0xfffffd5d(%rip)
238a(6): nop 0x0(%rax,%rax,1)
2390(5): mov $0x61,%ebx
2395(5): jmp 0xfffffdcb(%rip)
239a(6): nop 0x0(%rax,%rax,1)
23a0(3): xor %r10d,%r10d
23a3(5): cmp $0x2,0x8(%rsp)
23a8(3): setz %dl
23ab(5): cmp $0x0,0xf(%rsp)
23b0(6): jnz 0xb9a(%rip)
23b6(3): mov %r8d,%eax
23b9(3): mov %r15,%rcx
23bc(3): xor $0x1,%eax
23bf(2): and %dl,%al
23c1(2): jz 0x2f(%rip)
23c3(3): cmp %r15,%r13
23c6(2): jbe 0x7(%rip)
23c8(5): mov $0x27,0x0(%r14,%r15,1)
23cd(4): lea 0x1(%r15),%rcx
23d1(3): cmp %rcx,%r13
23d4(2): jbe 0x8(%rip)
23d6(6): mov $0x24,0x1(%r14,%r15,1)
23dc(4): lea 0x2(%r15),%rcx
23e0(3): cmp %rcx,%r13
23e3(6): jnbe 0x636(%rip)
23e9(4): lea 0x3(%r15),%rcx
23ed(3): mov %eax,%r8d
23f0(3): cmp %rcx,%r13
23f3(2): jbe 0x7(%rip)
23f5(5): mov $0x5c,0x0(%r14,%rcx,1)
23fa(5): cmp $0x2,0x8(%rsp)
23ff(4): lea 0x1(%rcx),%r15
2403(6): jz 0x606(%rip)
2409(4): lea 0x1(%rbp),%rax
240d(3): cmp %r11,%rax
2410(2): jnb 0x1b(%rip)
2412(5): mov 0x10(%rsp),%rax
2417(5): movzx 0x1(%rax,%rbp,1),%eax
241c(4): mov %al,0x28(%rsp)
2420(3): sub $0x30,%eax
2423(2): cmp $0x9,%al
2425(6): jbe 0x834(%rip)
242b(3): mov %r12d,%eax
242e(5): mov $0x30,%ebx
2433(3): xor %r12d,%r12d
2436(5): jmp 0xfffffbb2(%rip)
243b(5): nop 0x0(%rax,%rax,1)
2440(5): cmp $0x2,0x8(%rsp)
2445(3): mov %r10d,%r12d
2448(3): setz %dl
244b(3): xor %r10d,%r10d
244e(2): xor %eax,%eax
2450(5): jmp 0xfffffb98(%rip)
2455(3): nop (%rax)
2458(5): cmp $0x2,0x8(%rsp)
245d(3): setz %dl
2460(3): xor %r10d,%r10d
2463(5): jmp 0xfffffdc5(%rip)
2468(8): nop 0x0(%rax,%rax,1)
2470(5): cmp $0x2,0x8(%rsp)
2475(3): setz %dl
2478(3): xor %r10d,%r10d
247b(3): xor %r12d,%r12d
247e(5): jmp 0xfffffdb3(%rip)
2483(5): nop 0x0(%rax,%rax,1)
2488(5): cmp $0x2,0x8(%rsp)
248d(3): mov %r10d,%r12d
2490(5): mov $0x20,%ebx
2495(3): setz %dl
2498(3): xor %r10d,%r10d
249b(5): jmp 0xfffffd96(%rip)
24a0(5): mov $0xd,%edx
24a5(3): xor %r10d,%r10d
24a8(5): mov $0x72,%ebx
24ad(5): jmp 0xfffffc35(%rip)
24b2(6): nop 0x0(%rax,%rax,1)
24b8(5): mov $0x76,%ebx
24bd(5): jmp 0xfffffca3(%rip)
24c2(6): nop 0x0(%rax,%rax,1)
24c8(5): mov $0x9,%edx
24cd(3): xor %r10d,%r10d
24d0(5): mov $0x74,%ebx
24d5(5): jmp 0xfffffc0d(%rip)
24da(6): nop 0x0(%rax,%rax,1)
24e0(5): mov $0x62,%ebx
24e5(5): jmp 0xfffffc7b(%rip)
24ea(6): nop 0x0(%rax,%rax,1)
24f0(3): xor %r10d,%r10d
24f3(5): jmp 0xfffffa9d(%rip)
24f8(8): nop 0x0(%rax,%rax,1)
2500(5): cmp $0x0,0xf(%rsp)
2505(6): jnz 0x96b(%rip)
250b(4): add $0x1,%rbp
250f(3): mov %r8d,%eax
2512(3): xor %r12d,%r12d
2515(5): mov $0x5c,%ebx
251a(5): jmp 0xfffffb12(%rip)
251f(1): nop 
2520(5): cmp $0x2,0x8(%rsp)
2525(5): movzx 0xf(%rsp),%ebx
252a(3): mov %r8d,%r12d
252d(3): mov %r11,%rbp
2530(3): setz %dl
2533(2): mov %ebx,%eax
2535(3): test %r15,%r15
2538(3): setz %cl
253b(2): and %edx,%eax
253d(2): and %cl,%al
253f(6): jnz 0xa67(%rip)
2545(2): mov %ebx,%eax
2547(3): xor $0x1,%eax
254a(2): and %al,%dl
254c(6): jz 0x970(%rip)
2552(5): cmp $0x0,0x7c(%rsp)
2557(6): jz 0x963(%rip)
255d(5): cmp $0x0,0xe(%rsp)
2562(6): jnz 0x9fb(%rip)
2568(3): test %r13,%r13
256b(3): setz %al
256e(6): cmp $0x0,0x50(%rsp)
2574(3): setnz %dl
2577(2): and %dl,%al
2579(6): jz 0xa23(%rip)
257f(5): mov 0x50(%rsp),%r13
2584(7): lea 0x244a(%rip),%rbx
258b(4): mov $0x27,(%r14)
258f(8): mov $0x2,0x8(%rsp)
2597(6): mov $0x1,%r15d
259d(9): mov $0x1,0x18(%rsp)
25a6(5): mov $0x0,0xf(%rsp)
25ab(5): mov %rbx,0x48(%rsp)
25b0(4): mov %al,0x7c(%rsp)
25b4(5): jmp 0xfffff8df(%rip)
25b9(7): nop 0x0(%rax)
25c0(5): cmp $0x0,0xf(%rsp)
25c5(6): jnz 0x8ab(%rip)
25cb(3): test %r13,%r13
25ce(6): jz 0x402(%rip)
25d4(2): xor %edx,%edx
25d6(6): cmp $0x0,0x50(%rsp)
25dc(6): jnz 0x3f4(%rip)
25e2(5): mov %r13,0x50(%rsp)
25e7(4): add $0x3,%r15
25eb(2): xor %eax,%eax
25ed(5): mov %r12b,0x7c(%rsp)
25f2(3): xor %r8d,%r8d
25f5(3): mov %rdx,%r13
25f8(5): mov $0x27,%ebx
25fd(5): jmp 0xfffffa1c(%rip)
2602(6): nop 0x0(%rax,%rax,1)
2608(5): test $0x4,0x78(%rsp)
260d(2): jz 0x23(%rip)
260f(4): lea 0x2(%rbp),%rcx
2613(3): cmp %r11,%rcx
2616(2): jnb 0x1a(%rip)
2618(5): mov 0x10(%rsp),%rax
261d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2622(6): jz 0x790(%rip)
2628(8): nop 0x0(%rax,%rax,1)
2630(2): xor %edx,%edx
2632(3): xor %r12d,%r12d
2635(2): xor %eax,%eax
2637(5): mov $0x3f,%ebx
263c(5): jmp 0xfffff9ac(%rip)
2641(7): nop 0x0(%rax)
2648(5): cmp $0x0,0xf(%rsp)
264d(6): jnz 0x823(%rip)
2653(3): xor %r12d,%r12d
2656(2): xor %eax,%eax
2658(5): mov $0x3f,%ebx
265d(5): jmp 0xfffff9bc(%rip)
2662(6): nop 0x0(%rax,%rax,1)
2668(8): lea 0xa0(%rsp),%rax
2670(4): cmp $0xffffffff,%r11
2674(c): mov $0x0,0xa0(%rsp)
2680(5): mov %rax,0x28(%rsp)
2685(2): jnz 0x2f(%rip)
2687(5): mov 0x10(%rsp),%rdi
268c(5): mov %r8b,0x40(%rsp)
2691(5): mov %r10b,0x38(%rsp)
2696(5): mov %r9,0x30(%rsp)
269b(5): call 0xffffec55(%rip)
26a0(6): movzx 0x40(%rsp),%r8d
26a6(6): movzx 0x38(%rsp),%r10d
26ac(3): mov %rax,%r11
26af(5): mov 0x30(%rsp),%r9
26b4(8): lea 0x9c(%rsp),%rax
26bc(2): xor %ecx,%ecx
26be(4): mov %bl,0x7e(%rsp)
26c2(5): mov %r8b,0x7d(%rsp)
26c7(3): mov %rcx,%rbx
26ca(8): mov %r9,0x88(%rsp)
26d2(5): mov %rax,0x38(%rsp)
26d7(5): mov %r10b,0x7f(%rsp)
26dc(8): mov %r15,0x80(%rsp)
26e4(5): mov %r14,0x40(%rsp)
26e9(5): mov %r13,0x70(%rsp)
26ee(5): mov %r11,0x30(%rsp)
26f3(5): mov 0x10(%rsp),%rax
26f8(5): lea 0x0(%rbp,%rbx,1),%r14
26fd(5): mov 0x30(%rsp),%rdx
2702(5): mov 0x28(%rsp),%rcx
2707(5): mov 0x38(%rsp),%rdi
270c(4): lea 0x0(%rax,%r14,1),%r13
2710(3): sub %r14,%rdx
2713(3): mov %r13,%rsi
2716(5): call 0x1afa(%rip)
271b(3): test %rax,%rax
271e(3): mov %rax,%r15
2721(2): jz 0x50(%rip)
2723(4): cmp $0xffffffff,%rax
2727(6): jz 0x61e(%rip)
272d(4): cmp $0xfffffffe,%rax
2731(6): jz 0x5a0(%rip)
2737(5): cmp $0x2,0x8(%rsp)
273c(3): setz %al
273f(4): and 0xf(%rsp),%al
2743(6): jnz 0x19d(%rip)
2749(7): mov 0x9c(%rsp),%edi
2750(5): call 0xffffed50(%rip)
2755(5): mov 0x28(%rsp),%rdi
275a(2): test %eax,%eax
275c(5): mov $0x0,%eax
2761(4): cmove %eax,%r12d
2765(3): add %r15,%rbx
2768(5): call 0xffffed28(%rip)
276d(2): test %eax,%eax
276f(2): jz 0xffffff84(%rip)
2771(3): mov %r12d,%edx
2774(3): mov %rbx,%rdi
2777(6): movzx 0x7d(%rsp),%r8d
277d(3): xor $0x1,%edx
2780(5): movzx 0x7e(%rsp),%ebx
2785(6): movzx 0x7f(%rsp),%r10d
278b(4): and 0xd(%rsp),%dl
278f(8): mov 0x80(%rsp),%r15
2797(5): mov 0x40(%rsp),%r14
279c(5): mov 0x70(%rsp),%r13
27a1(5): mov 0x30(%rsp),%r11
27a6(4): cmp $0x1,%rdi
27aa(6): jbe 0x601(%rip)
27b0(3): mov %rdi,%rcx
27b3(2): xor %esi,%esi
27b5(6): movzx 0xf(%rsp),%r9d
27bb(3): add %rbp,%rcx
27be(5): mov 0x10(%rsp),%rdi
27c3(5): jmp 0xbb(%rip)
27c8(8): nop 0x0(%rax,%rax,1)
27d0(5): cmp $0x2,0x8(%rsp)
27d5(3): setz %al
27d8(3): test %r9b,%r9b
27db(6): jnz 0x4b5(%rip)
27e1(3): mov %r8d,%esi
27e4(3): xor $0x1,%esi
27e7(3): and %sil,%al
27ea(2): jz 0x31(%rip)
27ec(3): cmp %r15,%r13
27ef(2): jbe 0x7(%rip)
27f1(5): mov $0x27,0x0(%r14,%r15,1)
27f6(4): lea 0x1(%r15),%rsi
27fa(3): cmp %rsi,%r13
27fd(2): jbe 0x8(%rip)
27ff(6): mov $0x24,0x1(%r14,%r15,1)
2805(4): lea 0x2(%r15),%rsi
2809(3): cmp %rsi,%r13
280c(2): jbe 0x8(%rip)
280e(6): mov $0x27,0x2(%r14,%r15,1)
2814(4): add $0x3,%r15
2818(3): mov %eax,%r8d
281b(3): cmp %r15,%r13
281e(2): jbe 0x7(%rip)
2820(5): mov $0x5c,0x0(%r14,%r15,1)
2825(4): lea 0x1(%r15),%rax
2829(3): cmp %rax,%r13
282c(2): jbe 0xf(%rip)
282e(2): mov %ebx,%eax
2830(3): shr $0x6,%al
2833(3): add $0x30,%eax
2836(5): mov %al,0x1(%r14,%r15,1)
283b(4): lea 0x2(%r15),%rax
283f(3): cmp %rax,%r13
2842(2): jbe 0x12(%rip)
2844(2): mov %ebx,%eax
2846(3): shr $0x3,%al
2849(3): and $0x7,%eax
284c(3): add $0x30,%eax
284f(5): mov %al,0x2(%r14,%r15,1)
2854(3): and $0x7,%ebx
2857(4): add $0x1,%rbp
285b(4): add $0x3,%r15
285f(3): add $0x30,%ebx
2862(3): cmp %rcx,%rbp
2865(6): jnb 0xfffff7eb(%rip)
286b(2): mov %edx,%esi
286d(3): cmp %r15,%r13
2870(2): jbe 0x6(%rip)
2872(4): mov %bl,0x0(%r14,%r15,1)
2876(4): movzx 0x0(%rdi,%rbp,1),%ebx
287a(4): add $0x1,%r15
287e(2): test %dl,%dl
2880(6): jnz 0xffffff50(%rip)
2886(2): mov %esi,%eax
2888(3): xor $0x1,%eax
288b(3): and %r8d,%eax
288e(3): test %r10b,%r10b
2891(2): jz 0x10(%rip)
2893(3): cmp %r15,%r13
2896(2): jbe 0x7(%rip)
2898(5): mov $0x5c,0x0(%r14,%r15,1)
289d(4): add $0x1,%r15
28a1(4): add $0x1,%rbp
28a5(3): cmp %rcx,%rbp
28a8(6): jnb 0xfffff784(%rip)
28ae(2): test %al,%al
28b0(6): jz 0x3fe(%rip)
28b6(3): cmp %r15,%r13
28b9(2): jbe 0x7(%rip)
28bb(5): mov $0x27,0x0(%r14,%r15,1)
28c0(4): lea 0x1(%r15),%rax
28c4(3): cmp %rax,%r13
28c7(2): jbe 0x8(%rip)
28c9(6): mov $0x27,0x1(%r14,%r15,1)
28cf(4): add $0x2,%r15
28d3(3): xor %r10d,%r10d
28d6(3): xor %r8d,%r8d
28d9(2): jmp 0xffffff94(%rip)
28db(5): nop 0x0(%rax,%rax,1)
28e0(4): cmp $0x1,%r15
28e4(6): jz 0xfffffe65(%rip)
28ea(5): mov 0x10(%rsp),%rdi
28ef(4): lea 0x0(%rdi,%r15,1),%rcx
28f3(5): lea 0x1(%rdi,%r14,1),%rdx
28f8(4): lea 0x0(%rcx,%r14,1),%r8
28fc(2): jmp 0x11(%rip)
28fe(2): nop 
2900(4): add $0x1,%rdx
2904(3): cmp %rdx,%r8
2907(6): jz 0xfffffe42(%rip)
290d(3): movzx (%rdx),%ecx
2910(3): sub $0x5b,%ecx
2913(3): cmp $0x21,%cl
2916(2): jnbe 0xffffffea(%rip)
2918(5): mov $0x1,%esi
291d(3): shl/sal %cl,%rsi
2920(3): mov %rsi,%rcx
2923(a): mov $0x8589934635,%rsi
292d(3): test %rsi,%rcx
2930(2): jz 0xffffffd0(%rip)
2932(5): mov 0x40(%rsp),%r14
2937(5): mov 0x70(%rsp),%r13
293c(5): mov 0x30(%rsp),%rbp
2941(8): mov $0x2,0x8(%rsp)
2949(5): cmp $0x0,0xd(%rsp)
294e(2): jz 0x12(%rip)
2950(2): test %al,%al
2952(5): mov $0x4,%eax
2957(5): cmove 0x8(%rsp),%eax
295c(4): mov %eax,0x8(%rsp)
2960(4): sub $0x8,%rsp
2964(3): mov %rbp,%rcx
2967(3): mov %r13,%rsi
296a(4): push 0x68(%rsp)
296e(4): push 0x78(%rsp)
2972(3): mov %r14,%rdi
2975(2): push $0x0
2977(8): mov 0x98(%rsp),%r9d
297f(5): mov 0x28(%rsp),%r8d
2984(5): mov 0x30(%rsp),%rdx
2989(4): and $0xfd,%r9d
298d(5): call 0xfffff433(%rip)
2992(4): add $0x20,%rsp
2996(3): mov %rax,%r15
2999(8): mov 0xa8(%rsp),%rbx
29a1(9): xor $0x28,%rbx
29aa(3): mov %r15,%rax
29ad(6): jnz 0x606(%rip)
29b3(7): add $0xb8,%rsp
29ba(1): pop %rbx
29bb(1): pop %rbp
29bc(2): pop %r12
29be(2): pop %r13
29c0(2): pop %r14
29c2(2): pop %r15
29c4(1): ret near (%rsp)
29c5(3): nop (%rax)
29c8(3): mov %r11,%rbp
29cb(5): jmp 0xffffff7e(%rip)
29d0(3): cmp %r15,%r13
29d3(2): jbe 0x7(%rip)
29d5(5): mov $0x27,0x0(%r14,%r15,1)
29da(4): lea 0x1(%r15),%rax
29de(3): cmp %rax,%r13
29e1(2): jbe 0x8(%rip)
29e3(6): mov $0x5c,0x1(%r14,%r15,1)
29e9(4): lea 0x2(%r15),%rax
29ed(3): cmp %rax,%r13
29f0(6): jbe 0x5f2(%rip)
29f6(3): mov %r13,%rdx
29f9(6): mov $0x27,0x2(%r14,%r15,1)
29ff(5): mov 0x50(%rsp),%r13
2a04(5): jmp 0xfffffbde(%rip)
2a09(3): mov %r12d,%eax
2a0c(5): mov $0x30,%ebx
2a11(3): xor %r12d,%r12d
2a14(5): jmp 0xfffff605(%rip)
2a19(6): mov $0x27,0x2(%r14,%r15,1)
2a1f(5): jmp 0xfffff9ca(%rip)
2a24(2): test %ebx,%ebx
2a26(6): jnz 0xfffff42d(%rip)
2a2c(5): mov $0x1,0xd(%rsp)
2a31(3): test %r13,%r13
2a34(6): jnz 0x596(%rip)
2a3a(7): lea 0x1f94(%rip),%rax
2a41(9): mov $0x0,0x50(%rsp)
2a4a(5): mov $0x1,0xe(%rsp)
2a4f(5): mov $0x0,0x7c(%rsp)
2a54(3): xor %r12d,%r12d
2a57(5): mov $0x0,0xf(%rsp)
2a5c(9): mov $0x1,0x18(%rsp)
2a65(5): mov %rax,0x48(%rsp)
2a6a(6): mov $0x1,%r15d
2a70(8): mov $0x2,0x8(%rsp)
2a78(5): jmp 0xfffff41b(%rip)
2a7d(3): nop (%rax)
2a80(2): test %ebx,%ebx
2a82(6): jnz 0x3fb(%rip)
2a88(3): test %r13,%r13
2a8b(6): jz 0x22b(%rip)
2a91(4): mov $0x22,(%r14)
2a95(5): mov $0x1,0xe(%rsp)
2a9a(3): xor %r12d,%r12d
2a9d(5): mov $0x0,0x7c(%rsp)
2aa2(9): mov $0x0,0x50(%rsp)
2aab(7): lea 0x1f21(%rip),%rax
2ab2(5): mov $0x0,0xf(%rsp)
2ab7(5): mov $0x1,0xd(%rsp)
2abc(9): mov $0x1,0x18(%rsp)
2ac5(6): mov $0x1,%r15d
2acb(5): mov %rax,0x48(%rsp)
2ad0(5): jmp 0xfffff3c3(%rip)
2ad5(7): lea 0x1ef7(%rip),%rax
2adc(5): mov $0x1,0xe(%rsp)
2ae1(5): mov $0x0,0x7c(%rsp)
2ae6(3): xor %r12d,%r12d
2ae9(9): mov $0x0,0x50(%rsp)
2af2(5): mov $0x1,0xf(%rsp)
2af7(5): mov $0x1,0xd(%rsp)
2afc(9): mov $0x1,0x18(%rsp)
2b05(3): xor %r15d,%r15d
2b08(5): mov %rax,0x48(%rsp)
2b0d(8): mov $0x5,0x8(%rsp)
2b15(5): jmp 0xfffff37e(%rip)
2b1a(5): mov $0x1,0xe(%rsp)
2b1f(5): mov $0x0,0x7c(%rsp)
2b24(3): xor %r12d,%r12d
2b27(9): mov $0x0,0x50(%rsp)
2b30(5): mov $0x0,0xf(%rsp)
2b35(3): xor %r15d,%r15d
2b38(5): mov $0x1,0xd(%rsp)
2b3d(9): mov $0x0,0x18(%rsp)
2b46(9): mov $0x0,0x48(%rsp)
2b4f(5): jmp 0xfffff344(%rip)
2b54(5): cmp $0xa,0x8(%rsp)
2b59(2): jz 0x58(%rip)
2b5b(7): lea 0x1e75(%rip),%rsi
2b62(2): xor %edi,%edi
2b64(5): mov $0x5,%edx
2b69(5): call 0xffffe767(%rip)
2b6e(3): mov %rax,%rcx
2b71(5): mov %rax,0x68(%rsp)
2b76(7): lea 0x1e5a(%rip),%rax
2b7d(3): cmp %rax,%rcx
2b80(6): jz 0x39e(%rip)
2b86(7): lea 0x1e48(%rip),%rsi
2b8d(2): xor %edi,%edi
2b8f(5): mov $0x5,%edx
2b94(5): call 0xffffe73c(%rip)
2b99(3): mov %rax,%rcx
2b9c(5): mov %rax,0x60(%rsp)
2ba1(7): lea 0x1e2d(%rip),%rax
2ba8(3): cmp %rax,%rcx
2bab(6): jz 0x389(%rip)
2bb1(3): xor %r15d,%r15d
2bb4(2): test %ebx,%ebx
2bb6(6): jz 0x1c7(%rip)
2bbc(2): test %ebx,%ebx
2bbe(5): mov 0x60(%rsp),%rbx
2bc3(5): setnz 0xf(%rsp)
2bc8(3): xor %r12d,%r12d
2bcb(3): mov %rbx,%rdi
2bce(5): call 0xffffe722(%rip)
2bd3(5): mov %rbx,0x48(%rsp)
2bd8(5): mov %rax,0x18(%rsp)
2bdd(5): mov $0x1,0xe(%rsp)
2be2(5): mov $0x0,0x7c(%rsp)
2be7(9): mov $0x0,0x50(%rsp)
2bf0(5): mov $0x1,0xd(%rsp)
2bf5(5): jmp 0xfffff29e(%rip)
2bfa(5): mov $0x1,0xe(%rsp)
2bff(5): mov $0x0,0x7c(%rsp)
2c04(3): xor %r12d,%r12d
2c07(9): mov $0x0,0x50(%rsp)
2c10(5): mov $0x0,0xf(%rsp)
2c15(3): xor %r15d,%r15d
2c18(5): mov $0x0,0xd(%rsp)
2c1d(9): mov $0x0,0x18(%rsp)
2c26(9): mov $0x0,0x48(%rsp)
2c2f(5): jmp 0xfffff264(%rip)
2c34(5): mov $0x1,0xe(%rsp)
2c39(5): mov $0x0,0x7c(%rsp)
2c3e(3): xor %r12d,%r12d
2c41(9): mov $0x0,0x50(%rsp)
2c4a(5): mov $0x1,0xf(%rsp)
2c4f(5): mov $0x1,0xd(%rsp)
2c54(5): jmp 0xfffff21f(%rip)
2c59(3): cmp %r15,%r13
2c5c(2): jbe 0x7(%rip)
2c5e(5): mov $0x30,0x0(%r14,%r15,1)
2c63(4): lea 0x2(%rcx),%rax
2c67(3): cmp %rax,%r13
2c6a(2): jbe 0x8(%rip)
2c6c(6): mov $0x30,0x2(%r14,%rcx,1)
2c72(3): mov %r12d,%eax
2c75(4): lea 0x3(%rcx),%r15
2c79(3): xor %r12d,%r12d
2c7c(5): mov $0x30,%ebx
2c81(5): jmp 0xfffff367(%rip)
2c86(a): nop 0x0(%rax,%rax,1)
2c90(5): movzx 0xf(%rsp),%ebx
2c95(3): mov %r11,%rbp
2c98(4): mov %bl,0xd(%rsp)
2c9c(5): jmp 0xfffffcad(%rip)
2ca1(5): movzx 0xd(%rsp),%edx
2ca6(3): xor %r12d,%r12d
2ca9(5): jmp 0xfffffb07(%rip)
2cae(3): xor %r10d,%r10d
2cb1(5): jmp 0xfffffbbc(%rip)
2cb6(9): mov $0x0,0x50(%rsp)
2cbf(5): mov $0x1,0xe(%rsp)
2cc4(3): xor %r12d,%r12d
2cc7(5): mov $0x0,0x7c(%rsp)
2ccc(5): jmp 0xfffffddf(%rip)
2cd1(5): mov 0x30(%rsp),%r11
2cd6(3): mov %r14,%rsi
2cd9(3): mov %r13,%rcx
2cdc(3): mov %rbx,%rax
2cdf(3): mov %rbx,%rdi
2ce2(6): movzx 0x7d(%rsp),%r8d
2ce8(5): movzx 0x7e(%rsp),%ebx
2ced(8): mov 0x88(%rsp),%r9
2cf5(3): cmp %r11,%rsi
2cf8(6): movzx 0x7f(%rsp),%r10d
2cfe(8): mov 0x80(%rsp),%r15
2d06(5): mov 0x40(%rsp),%r14
2d0b(5): mov 0x70(%rsp),%r13
2d10(2): jnb 0x28(%rip)
2d12(3): cmp $0x0,(%rcx)
2d15(2): jnz 0x12(%rip)
2d17(2): jmp 0x21(%rip)
2d19(7): nop 0x0(%rax)
2d20(5): cmp $0x0,0x0(%r9,%rax,1)
2d25(2): jz 0x10(%rip)
2d27(4): add $0x1,%rax
2d2b(5): lea 0x0(%rbp,%rax,1),%rdx
2d30(3): cmp %rdx,%r11
2d33(2): jnbe 0xffffffed(%rip)
2d35(3): mov %rax,%rdi
2d38(5): movzx 0xd(%rsp),%edx
2d3d(3): xor %r12d,%r12d
2d40(5): jmp 0xfffffa66(%rip)
2d45(3): mov %rbx,%rdi
2d48(6): movzx 0x7d(%rsp),%r8d
2d4e(5): movzx 0x7e(%rsp),%ebx
2d53(6): movzx 0x7f(%rsp),%r10d
2d59(8): mov 0x80(%rsp),%r15
2d61(3): xor %r12d,%r12d
2d64(5): mov 0x40(%rsp),%r14
2d69(5): mov 0x70(%rsp),%r13
2d6e(5): mov 0x30(%rsp),%r11
2d73(5): movzx 0xd(%rsp),%edx
2d78(5): jmp 0xfffffa2e(%rip)
2d7d(5): mov 0x68(%rsp),%rdx
2d82(3): movzx (%rdx),%eax
2d85(2): test %al,%al
2d87(6): jz 0xfffffe35(%rip)
2d8d(3): nop (%rax)
2d90(3): cmp %r15,%r13
2d93(2): jbe 0x6(%rip)
2d95(4): mov %al,0x0(%r14,%r15,1)
2d99(4): add $0x1,%r15
2d9d(5): movzx 0x0(%rdx,%r15,1),%eax
2da2(2): test %al,%al
2da4(2): jnz 0xffffffec(%rip)
2da6(5): jmp 0xfffffe16(%rip)
2dab(2): mov %edx,%eax
2dad(5): jmp 0xfffff55a(%rip)
2db2(4): movzx 0x0(%rax,%rcx,1),%ebx
2db6(3): cmp $0x3e,%bl
2db9(6): jnbe 0xfffff877(%rip)
2dbf(a): mov $0x8070630310989004800,%rax
2dc9(4): bt %rbx,%rax
2dcd(6): jnb 0xfffff863(%rip)
2dd3(5): cmp $0x0,0xf(%rsp)
2dd8(6): jnz 0x1ea(%rip)
2dde(3): cmp %r15,%r13
2de1(2): jbe 0x7(%rip)
2de3(5): mov $0x3f,0x0(%r14,%r15,1)
2de8(4): lea 0x1(%r15),%rax
2dec(3): cmp %rax,%r13
2def(2): jbe 0x8(%rip)
2df1(6): mov $0x22,0x1(%r14,%r15,1)
2df7(4): lea 0x2(%r15),%rax
2dfb(3): cmp %rax,%r13
2dfe(2): jbe 0x8(%rip)
2e00(6): mov $0x22,0x2(%r14,%r15,1)
2e06(4): lea 0x3(%r15),%rax
2e0a(3): cmp %rax,%r13
2e0d(2): jbe 0x8(%rip)
2e0f(6): mov $0x3f,0x3(%r14,%r15,1)
2e15(4): add $0x4,%r15
2e19(2): xor %edx,%edx
2e1b(3): xor %r12d,%r12d
2e1e(2): xor %eax,%eax
2e20(3): mov %rcx,%rbp
2e23(5): jmp 0xfffff1c5(%rip)
2e28(2): test %ebx,%ebx
2e2a(6): jz 0x18e(%rip)
2e30(7): lea 0x1b9e(%rip),%rax
2e37(5): mov $0x1,0xe(%rsp)
2e3c(5): mov $0x0,0x7c(%rsp)
2e41(3): xor %r12d,%r12d
2e44(9): mov $0x0,0x50(%rsp)
2e4d(5): mov $0x1,0xf(%rsp)
2e52(5): mov $0x0,0xd(%rsp)
2e57(9): mov $0x1,0x18(%rsp)
2e60(3): xor %r15d,%r15d
2e63(5): mov %rax,0x48(%rsp)
2e68(5): jmp 0xfffff02b(%rip)
2e6d(3): nop (%rax)
2e70(3): mov %r11,%rbp
2e73(5): movzx 0xf(%rsp),%eax
2e78(5): jmp 0xfffffad1(%rip)
2e7d(7): lea 0x1b4f(%rip),%rax
2e84(5): mov $0x1,0xe(%rsp)
2e89(5): mov $0x0,0x7c(%rsp)
2e8e(3): xor %r12d,%r12d
2e91(9): mov $0x0,0x50(%rsp)
2e9a(5): mov $0x1,0xf(%rsp)
2e9f(5): mov $0x1,0xd(%rsp)
2ea4(9): mov $0x1,0x18(%rsp)
2ead(3): xor %r15d,%r15d
2eb0(5): mov %rax,0x48(%rsp)
2eb5(5): jmp 0xffffefde(%rip)
2eba(2): mov %edx,%eax
2ebc(5): mov 0x48(%rsp),%rbx
2ec1(3): test %rbx,%rbx
2ec4(2): jz 0x2e(%rip)
2ec6(2): test %al,%al
2ec8(2): jz 0x2a(%rip)
2eca(3): movzx (%rbx),%ecx
2ecd(3): mov %rbx,%rax
2ed0(2): test %cl,%cl
2ed2(2): jz 0x20(%rip)
2ed4(3): mov %r15,%rdx
2ed7(3): sub %r15,%rax
2eda(3): cmp %rdx,%r13
2edd(2): jbe 0x6(%rip)
2edf(4): mov %cl,0x0(%r14,%rdx,1)
2ee3(4): add $0x1,%rdx
2ee7(4): movzx 0x0(%rax,%rdx,1),%ecx
2eeb(2): test %cl,%cl
2eed(2): jnz 0xffffffed(%rip)
2eef(3): mov %rdx,%r15
2ef2(3): cmp %r15,%r13
2ef5(6): jbe 0xfffffaa4(%rip)
2efb(5): mov $0x0,0x0(%r14,%r15,1)
2f00(5): jmp 0xfffffa99(%rip)
2f05(5): cmp $0x2,0x8(%rsp)
2f0a(5): movzx 0xf(%rsp),%ebx
2f0f(3): mov %r11,%rbp
2f12(3): setz %al
2f15(4): mov %bl,0xd(%rsp)
2f19(5): jmp 0xfffffa30(%rip)
2f1e(4): mov 0x8(%rsp),%esi
2f22(3): mov %rcx,%rdi
2f25(5): call 0xffffedab(%rip)
2f2a(5): mov %rax,0x68(%rsp)
2f2f(5): jmp 0xfffffc57(%rip)
2f34(4): mov 0x8(%rsp),%esi
2f38(3): mov %rcx,%rdi
2f3b(5): call 0xffffed95(%rip)
2f40(5): mov %rax,0x60(%rsp)
2f45(5): jmp 0xfffffc6c(%rip)
2f4a(5): movzx 0xf(%rsp),%ebx
2f4f(3): mov %r11,%rbp
2f52(2): mov %edx,%eax
2f54(4): mov %bl,0xd(%rsp)
2f58(5): jmp 0xfffff9f1(%rip)
2f5d(4): sub $0x8,%rsp
2f61(6): mov $0x5,%r8d
2f67(3): mov %r11,%rcx
2f6a(4): push 0x68(%rsp)
2f6e(4): push 0x78(%rsp)
2f72(3): mov %r14,%rdi
2f75(4): push 0x38(%rsp)
2f79(8): mov 0x98(%rsp),%r9d
2f81(5): mov 0x30(%rsp),%rdx
2f86(5): mov 0x70(%rsp),%rsi
2f8b(5): call 0xffffee35(%rip)
2f90(4): add $0x20,%rsp
2f94(3): mov %rax,%r15
2f97(5): jmp 0xfffffa02(%rip)
2f9c(5): movzx 0x7c(%rsp),%eax
2fa1(5): jmp 0xffffff1b(%rip)
2fa6(8): mov $0x2,0x8(%rsp)
2fae(5): jmp 0xfffff99b(%rip)
2fb3(5): call 0xffffe34d(%rip)
2fb8(5): mov $0x0,0xd(%rsp)
2fbd(5): jmp 0xfffffa74(%rip)
2fc2(3): mov %r11,%rbp
2fc5(5): jmp 0xfffff99b(%rip)
2fca(5): mov $0x1,0xe(%rsp)
2fcf(2): xor %eax,%eax
2fd1(3): xor %r12d,%r12d
2fd4(9): mov $0x0,0x50(%rsp)
2fdd(5): jmp 0xfffff5a7(%rip)
2fe2(3): mov %r13,%rdx
2fe5(5): mov 0x50(%rsp),%r13
2fea(5): jmp 0xfffff5f8(%rip)
2fef(5): call 0xffffe261(%rip)

"quotearg_n_options" :
3000(2): push %r15
3002(2): push %r14
3004(3): movsxd %edi,%r15
3007(2): push %r13
3009(2): push %r12
300b(3): mov %rdx,%r14
300e(1): push %rbp
300f(1): push %rbx
3010(3): mov %rcx,%rbp
3013(4): sub $0x28,%rsp
3017(5): mov %rsi,0x8(%rsp)
301c(5): call 0xffffe244(%rip)
3021(3): mov %rax,%r13
3024(2): mov (%rax),%eax
3026(3): test %r15d,%r15d
3029(7): mov 0x204030(%rip),%rbx
3030(4): mov %eax,0x18(%rsp)
3034(6): js 0x16d(%rip)
303a(7): cmp %r15d,0x204017(%rip)
3041(2): jnle 0x64(%rip)
3043(7): cmp $0x7fffffff,%r15d
304a(6): jz 0x15c(%rip)
3050(4): lea 0x1(%r15),%r12d
3054(7): lea 0x204015(%rip),%rax
305b(3): movsxd %r12d,%rsi
305e(4): shl/sal $0x4,%rsi
3062(3): cmp %rax,%rbx
3065(6): jz 0x11b(%rip)
306b(3): mov %rbx,%rdi
306e(5): call 0xf72(%rip)
3073(3): mov %rax,%rbx
3076(7): mov %rax,0x203fe3(%rip)
307d(7): movsxd 0x203fd4(%rip),%rdi
3084(3): mov %r12d,%edx
3087(2): xor %esi,%esi
3089(2): sub %edi,%edx
308b(4): shl/sal $0x4,%rdi
308f(3): movsxd %edx,%rdx
3092(3): add %rbx,%rdi
3095(4): shl/sal $0x4,%rdx
3099(5): call 0xffffe2c7(%rip)
309e(7): mov %r12d,0x203fb3(%rip)
30a5(3): mov 0x4(%rbp),%eax
30a8(4): shl/sal $0x4,%r15
30ac(4): sub $0x8,%rsp
30b0(3): add %r15,%rbx
30b3(4): lea 0x8(%rbp),%r15
30b7(4): mov 0x0(%rbp),%r8d
30bb(3): mov (%rbx),%r11
30be(4): mov 0x8(%rbx),%r12
30c2(3): mov %r14,%rcx
30c5(3): or $0x1,%eax
30c8(4): mov %eax,0x24(%rsp)
30cc(3): push 0x30(%rbp)
30cf(3): mov %eax,%r9d
30d2(3): push 0x28(%rbp)
30d5(2): push %r15
30d7(3): mov %r11,%rsi
30da(5): mov 0x28(%rsp),%rdx
30df(3): mov %r12,%rdi
30e2(5): mov %r11,0x30(%rsp)
30e7(5): call 0xffffecd9(%rip)
30ec(4): add $0x20,%rsp
30f0(5): mov 0x10(%rsp),%r11
30f5(3): cmp %rax,%r11
30f8(2): jnbe 0x69(%rip)
30fa(4): lea 0x1(%rax),%rsi
30fe(7): lea 0x203ffb(%rip),%rax
3105(3): cmp %rax,%r12
3108(3): mov %rsi,(%rbx)
310b(2): jz 0x14(%rip)
310d(3): mov %r12,%rdi
3110(5): mov %rsi,0x10(%rsp)
3115(5): call 0xffffe12b(%rip)
311a(5): mov 0x10(%rsp),%rsi
311f(3): mov %rsi,%rdi
3122(5): mov %rsi,0x10(%rsp)
3127(5): call 0xe59(%rip)
312c(4): sub $0x8,%rsp
3130(4): mov %rax,0x8(%rbx)
3134(4): mov 0x0(%rbp),%r8d
3138(3): push 0x30(%rbp)
313b(3): push 0x28(%rbp)
313e(3): mov %r14,%rcx
3141(2): push %r15
3143(5): mov 0x3c(%rsp),%r9d
3148(3): mov %rax,%rdi
314b(5): mov 0x28(%rsp),%rdx
3150(5): mov 0x30(%rsp),%rsi
3155(3): mov %rax,%r12
3158(5): call 0xffffec68(%rip)
315d(4): add $0x20,%rsp
3161(4): mov 0x18(%rsp),%eax
3165(4): mov %eax,0x0(%r13)
3169(4): add $0x28,%rsp
316d(3): mov %r12,%rax
3170(1): pop %rbx
3171(1): pop %rbp
3172(2): pop %r12
3174(2): pop %r13
3176(2): pop %r14
3178(2): pop %r15
317a(1): ret near (%rsp)
317b(5): nop 0x0(%rax,%rax,1)
3180(2): xor %edi,%edi
3182(5): call 0xe5e(%rip)
3187(8): movdqa 0x203ee1(%rip),%xmm0
318f(3): mov %rax,%rbx
3192(7): mov %rax,0x203ec7(%rip)
3199(3): movups %xmm0,(%rax)
319c(5): jmp 0xfffffee1(%rip)
31a1(5): call 0xffffe0af(%rip)
31a6(5): call 0x102a(%rip)

"clone_quoting_options" :
31b0(2): push %r12
31b2(1): push %rbp
31b3(1): push %rbx
31b4(3): mov %rdi,%rbx
31b7(5): call 0xffffe0a9(%rip)
31bc(3): mov (%rax),%r12d
31bf(3): mov %rax,%rbp
31c2(7): lea 0x204037(%rip),%rax
31c9(3): test %rbx,%rbx
31cc(5): mov $0x38,%esi
31d1(4): cmove %rax,%rbx
31d5(3): mov %rbx,%rdi
31d8(5): call 0xfa8(%rip)
31dd(4): mov %r12d,0x0(%rbp)
31e1(1): pop %rbx
31e2(1): pop %rbp
31e3(2): pop %r12
31e5(1): ret near (%rsp)

"get_quoting_style" :
31f0(7): lea 0x204009(%rip),%rax
31f7(3): test %rdi,%rdi
31fa(4): cmove %rax,%rdi
31fe(2): mov (%rdi),%eax
3200(1): ret near (%rsp)

"set_quoting_style" :
3210(7): lea 0x203fe9(%rip),%rax
3217(3): test %rdi,%rdi
321a(4): cmove %rax,%rdi
321e(2): mov %esi,(%rdi)
3220(1): ret near (%rsp)

"set_char_quoting" :
3230(7): lea 0x203fc9(%rip),%rax
3237(3): test %rdi,%rdi
323a(2): mov %esi,%ecx
323c(4): cmove %rax,%rdi
3240(2): mov %esi,%eax
3242(3): and $0x1f,%ecx
3245(3): shr $0x5,%al
3248(3): movzx %al,%eax
324b(5): lea 0x8(%rdi,%rax,4),%rdi
3250(2): mov (%rdi),%esi
3252(2): mov %esi,%eax
3254(2): shr %cl,%eax
3256(2): xor %eax,%edx
3258(3): and $0x1,%eax
325b(3): and $0x1,%edx
325e(2): shl/sal %cl,%edx
3260(2): xor %esi,%edx
3262(2): mov %edx,(%rdi)
3264(1): ret near (%rsp)

"set_quoting_flags" :
3270(7): lea 0x203f89(%rip),%rax
3277(3): test %rdi,%rdi
327a(4): cmove %rax,%rdi
327e(3): mov 0x4(%rdi),%eax
3281(3): mov %esi,0x4(%rdi)
3284(1): ret near (%rsp)

"set_custom_quoting" :
3290(7): lea 0x203f69(%rip),%rax
3297(3): test %rdi,%rdi
329a(4): cmove %rax,%rdi
329e(3): test %rsi,%rsi
32a1(6): mov $0xa,(%rdi)
32a7(2): jz 0x10(%rip)
32a9(3): test %rdx,%rdx
32ac(2): jz 0xb(%rip)
32ae(4): mov %rsi,0x28(%rdi)
32b2(4): mov %rdx,0x30(%rdi)
32b6(1): ret near (%rsp)
32b7(4): sub $0x8,%rsp
32bb(5): call 0xffffdf95(%rip)

"quotearg_buffer" :
32c0(2): push %r15
32c2(2): push %r14
32c4(7): lea 0x203f35(%rip),%rax
32cb(2): push %r13
32cd(2): push %r12
32cf(3): mov %rdi,%r13
32d2(1): push %rbp
32d3(1): push %rbx
32d4(3): mov %r8,%rbx
32d7(3): mov %rsi,%r14
32da(3): mov %rdx,%r15
32dd(4): sub $0x18,%rsp
32e1(3): test %r8,%r8
32e4(4): cmove %rax,%rbx
32e8(5): mov %rcx,0x8(%rsp)
32ed(5): call 0xffffdf73(%rip)
32f2(3): mov (%rax),%r12d
32f5(3): mov %rax,%rbp
32f8(4): lea 0x8(%rbx),%rax
32fc(4): sub $0x8,%rsp
3300(4): mov 0x4(%rbx),%r9d
3304(3): push 0x30(%rbx)
3307(3): mov (%rbx),%r8d
330a(3): push 0x28(%rbx)
330d(3): mov %r15,%rdx
3310(1): push %rax
3311(5): mov 0x28(%rsp),%rcx
3316(3): mov %r14,%rsi
3319(3): mov %r13,%rdi
331c(5): call 0xffffeaa4(%rip)
3321(4): mov %r12d,0x0(%rbp)
3325(4): add $0x38,%rsp
3329(1): pop %rbx
332a(1): pop %rbp
332b(2): pop %r12
332d(2): pop %r13
332f(2): pop %r14
3331(2): pop %r15
3333(1): ret near (%rsp)

"quotearg_alloc_mem" :
3340(2): push %r15
3342(2): push %r14
3344(7): lea 0x203eb5(%rip),%rax
334b(2): push %r13
334d(2): push %r12
334f(3): mov %rdx,%r12
3352(1): push %rbp
3353(1): push %rbx
3354(3): mov %rcx,%rbx
3357(3): mov %rdi,%r14
335a(3): mov %rsi,%r15
335d(4): sub $0x38,%rsp
3361(3): test %rcx,%rcx
3364(4): cmove %rax,%rbx
3368(2): xor %ebp,%ebp
336a(5): call 0xffffdef6(%rip)
336f(3): test %r12,%r12
3372(3): mov %rax,%r13
3375(2): mov (%rax),%eax
3377(4): setz %bpl
337b(3): or 0x4(%rbx),%ebp
337e(4): lea 0x8(%rbx),%r10
3382(4): sub $0x8,%rsp
3386(3): mov (%rbx),%r8d
3389(3): mov %r15,%rcx
338c(4): mov %eax,0x14(%rsp)
3390(3): push 0x30(%rbx)
3393(3): mov %r14,%rdx
3396(3): push 0x28(%rbx)
3399(2): push %r10
339b(2): xor %esi,%esi
339d(3): mov %ebp,%r9d
33a0(2): xor %edi,%edi
33a2(5): mov %r10,0x40(%rsp)
33a7(5): call 0xffffea19(%rip)
33ac(4): lea 0x1(%rax),%rsi
33b0(5): mov %rax,0x48(%rsp)
33b5(4): add $0x20,%rsp
33b9(3): mov %rsi,%rdi
33bc(5): mov %rsi,0x18(%rsp)
33c1(5): call 0xbbf(%rip)
33c6(5): mov %rax,0x10(%rsp)
33cb(4): sub $0x8,%rsp
33cf(3): push 0x30(%rbx)
33d2(3): push 0x28(%rbx)
33d5(5): mov 0x38(%rsp),%r10
33da(3): mov %ebp,%r9d
33dd(3): mov (%rbx),%r8d
33e0(3): mov %r15,%rcx
33e3(3): mov %r14,%rdx
33e6(3): mov %rax,%rdi
33e9(2): push %r10
33eb(5): mov 0x38(%rsp),%rsi
33f0(5): call 0xffffe9d0(%rip)
33f5(4): mov 0x2c(%rsp),%eax
33f9(4): add $0x20,%rsp
33fd(3): test %r12,%r12
3400(4): mov %eax,0x0(%r13)
3404(2): jz 0xb(%rip)
3406(5): mov 0x28(%rsp),%r11
340b(4): mov %r11,(%r12)
340f(5): mov 0x10(%rsp),%rax
3414(4): add $0x38,%rsp
3418(1): pop %rbx
3419(1): pop %rbp
341a(2): pop %r12
341c(2): pop %r13
341e(2): pop %r14
3420(2): pop %r15
3422(1): ret near (%rsp)

"quotearg_alloc" :
3430(3): mov %rdx,%rcx
3433(2): xor %edx,%edx
3435(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3440(6): mov 0x203c12(%rip),%eax
3446(2): push %r12
3448(7): mov 0x203c11(%rip),%r12
344f(1): push %rbp
3450(1): push %rbx
3451(3): cmp $0x1,%eax
3454(2): jle 0x2d(%rip)
3456(3): sub $0x2,%eax
3459(5): lea 0x18(%r12),%rbx
345e(4): shl/sal $0x4,%rax
3462(5): lea 0x28(%r12,%rax,1),%rbp
3467(9): nop 0x0(%rax,%rax,1)
3470(3): mov (%rbx),%rdi
3473(4): add $0x10,%rbx
3477(5): call 0xffffddc9(%rip)
347c(3): cmp %rbp,%rbx
347f(2): jnz 0xfffffff1(%rip)
3481(5): mov 0x8(%r12),%rdi
3486(7): lea 0x203c73(%rip),%rbx
348d(3): cmp %rbx,%rdi
3490(2): jz 0x19(%rip)
3492(5): call 0xffffddae(%rip)
3497(b): mov $0x100,0x203bce(%rip)
34a2(7): mov %rbx,0x203bcf(%rip)
34a9(7): lea 0x203bc0(%rip),%rbx
34b0(3): cmp %rbx,%r12
34b3(2): jz 0x11(%rip)
34b5(3): mov %r12,%rdi
34b8(5): call 0xffffdd88(%rip)
34bd(7): mov %rbx,0x203b9c(%rip)
34c4(1): pop %rbx
34c5(a): mov $0x1,0x203b89(%rip)
34cf(1): pop %rbp
34d0(2): pop %r12
34d2(1): ret near (%rsp)

"quotearg_n" :
34e0(7): lea 0x203d19(%rip),%rcx
34e7(7): mov $0xffffffff,%rdx
34ee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3500(7): lea 0x203cf9(%rip),%rcx
3507(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3510(7): lea 0x203ce9(%rip),%rcx
3517(3): mov %rdi,%rsi
351a(7): mov $0xffffffff,%rdx
3521(2): xor %edi,%edi
3523(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3530(7): lea 0x203cc9(%rip),%rcx
3537(3): mov %rsi,%rdx
353a(3): mov %rdi,%rsi
353d(2): xor %edi,%edi
353f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3550(4): sub $0x48,%rsp
3554(3): mov %rdx,%rax
3557(9): mov $0x28,%rdx
3560(5): mov %rdx,0x38(%rsp)
3565(2): xor %edx,%edx
3567(3): cmp $0xa,%esi
356a(2): jz 0x6a(%rip)
356c(3): mov %esi,(%rsp)
356f(3): mov %rsp,%rcx
3572(7): mov $0xffffffff,%rdx
3579(3): mov %rax,%rsi
357c(9): mov $0x0,0x4(%rsp)
3585(9): mov $0x0,0xc(%rsp)
358e(9): mov $0x0,0x14(%rsp)
3597(9): mov $0x0,0x1c(%rsp)
35a0(9): mov $0x0,0x24(%rsp)
35a9(9): mov $0x0,0x2c(%rsp)
35b2(8): mov $0x0,0x34(%rsp)
35ba(5): call 0xfffffa46(%rip)
35bf(5): mov 0x38(%rsp),%rcx
35c4(9): xor $0x28,%rcx
35cd(2): jnz 0xc(%rip)
35cf(4): add $0x48,%rsp
35d3(1): ret near (%rsp)
35d4(5): call 0xffffdc7c(%rip)
35d9(5): call 0xffffdd27(%rip)

"quotearg_n_style_mem" :
35e0(4): sub $0x48,%rsp
35e4(3): mov %rdx,%rax
35e7(3): mov %rcx,%rdx
35ea(9): mov $0x28,%rcx
35f3(5): mov %rcx,0x38(%rsp)
35f8(2): xor %ecx,%ecx
35fa(3): cmp $0xa,%esi
35fd(2): jz 0x63(%rip)
35ff(3): mov %esi,(%rsp)
3602(3): mov %rsp,%rcx
3605(3): mov %rax,%rsi
3608(9): mov $0x0,0x4(%rsp)
3611(9): mov $0x0,0xc(%rsp)
361a(9): mov $0x0,0x14(%rsp)
3623(9): mov $0x0,0x1c(%rsp)
362c(9): mov $0x0,0x24(%rsp)
3635(9): mov $0x0,0x2c(%rsp)
363e(8): mov $0x0,0x34(%rsp)
3646(5): call 0xfffff9ba(%rip)
364b(5): mov 0x38(%rsp),%rdx
3650(9): xor $0x28,%rdx
3659(2): jnz 0xc(%rip)
365b(4): add $0x48,%rsp
365f(1): ret near (%rsp)
3660(5): call 0xffffdbf0(%rip)
3665(5): call 0xffffdc9b(%rip)

"quotearg_style" :
3670(3): mov %rsi,%rdx
3673(2): mov %edi,%esi
3675(2): xor %edi,%edi
3677(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3680(3): mov %rdx,%rcx
3683(3): mov %rsi,%rdx
3686(2): mov %edi,%esi
3688(2): xor %edi,%edi
368a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3690(4): sub $0x48,%rsp
3694(2): mov %edx,%ecx
3696(9): mov $0x28,%rax
369f(5): mov %rax,0x38(%rsp)
36a4(2): xor %eax,%eax
36a6(7): mov 0x203b83(%rip),%rax
36ad(3): mov %rsp,%r8
36b0(3): and $0x1f,%ecx
36b3(8): movdqa 0x203b45(%rip),%xmm0
36bb(5): mov %rax,0x30(%rsp)
36c0(2): mov %edx,%eax
36c2(4): movaps %xmm0,(%rsp)
36c6(3): shr $0x5,%al
36c9(3): movzx %al,%eax
36cc(5): lea 0x8(%r8,%rax,4),%r9
36d1(8): movdqa 0x203b37(%rip),%xmm0
36d9(5): movaps %xmm0,0x10(%rsp)
36de(8): movdqa 0x203b3a(%rip),%xmm0
36e6(5): movaps %xmm0,0x20(%rsp)
36eb(3): mov (%r9),%edx
36ee(2): mov %edx,%eax
36f0(2): shr %cl,%eax
36f2(2): not %eax
36f4(3): and $0x1,%eax
36f7(2): shl/sal %cl,%eax
36f9(3): mov %r8,%rcx
36fc(2): xor %edx,%eax
36fe(3): mov %rsi,%rdx
3701(3): mov %rdi,%rsi
3704(3): mov %eax,(%r9)
3707(2): xor %edi,%edi
3709(5): call 0xfffff8f7(%rip)
370e(5): mov 0x38(%rsp),%rsi
3713(9): xor $0x28,%rsi
371c(2): jnz 0x7(%rip)
371e(4): add $0x48,%rsp
3722(1): ret near (%rsp)
3723(5): call 0xffffdbdd(%rip)

"quotearg_char" :
3730(4): movsx %sil,%edx
3734(7): mov $0xffffffff,%rsi
373b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3740(5): mov $0x3a,%edx
3745(7): mov $0xffffffff,%rsi
374c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3760(5): mov $0x3a,%edx
3765(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3770(4): sub $0x48,%rsp
3774(3): mov %rdx,%rax
3777(9): mov $0x28,%rdx
3780(5): mov %rdx,0x38(%rsp)
3785(2): xor %edx,%edx
3787(3): cmp $0xa,%esi
378a(2): jz 0x6a(%rip)
378c(3): mov %esi,(%rsp)
378f(3): mov %rsp,%rcx
3792(7): mov $0xffffffff,%rdx
3799(3): mov %rax,%rsi
379c(9): mov $0x0,0x4(%rsp)
37a5(9): mov $0x4000000,0xc(%rsp)
37ae(9): mov $0x0,0x14(%rsp)
37b7(9): mov $0x0,0x1c(%rsp)
37c0(9): mov $0x0,0x24(%rsp)
37c9(9): mov $0x0,0x2c(%rsp)
37d2(8): mov $0x0,0x34(%rsp)
37da(5): call 0xfffff826(%rip)
37df(5): mov 0x38(%rsp),%rcx
37e4(9): xor $0x28,%rcx
37ed(2): jnz 0xc(%rip)
37ef(4): add $0x48,%rsp
37f3(1): ret near (%rsp)
37f4(5): call 0xffffda5c(%rip)
37f9(5): call 0xffffdb07(%rip)

"quotearg_n_custom_mem" :
3800(4): sub $0x48,%rsp
3804(3): mov %rcx,%r9
3807(7): mov 0x203a22(%rip),%rcx
380e(8): movdqa 0x2039ea(%rip),%xmm0
3816(9): mov $0x28,%rax
381f(5): mov %rax,0x38(%rsp)
3824(2): xor %eax,%eax
3826(4): movaps %xmm0,(%rsp)
382a(3): test %rsi,%rsi
382d(5): mov %rcx,0x30(%rsp)
3832(7): mov $0xa,(%rsp)
3839(8): movdqa 0x2039cf(%rip),%xmm0
3841(5): movaps %xmm0,0x10(%rsp)
3846(8): movdqa 0x2039d2(%rip),%xmm0
384e(5): movaps %xmm0,0x20(%rsp)
3853(2): jz 0x34(%rip)
3855(3): test %rdx,%rdx
3858(2): jz 0x2f(%rip)
385a(5): mov %rsi,0x28(%rsp)
385f(5): mov %rdx,0x30(%rsp)
3864(3): mov %rsp,%rcx
3867(3): mov %r8,%rdx
386a(3): mov %r9,%rsi
386d(5): call 0xfffff793(%rip)
3872(5): mov 0x38(%rsp),%rdi
3877(9): xor $0x28,%rdi
3880(2): jnz 0xc(%rip)
3882(4): add $0x48,%rsp
3886(1): ret near (%rsp)
3887(5): call 0xffffd9c9(%rip)
388c(5): call 0xffffda74(%rip)

"quotearg_n_custom" :
38a0(7): mov $0xffffffff,%r8
38a7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
38b0(3): mov %rdx,%rcx
38b3(7): mov $0xffffffff,%r8
38ba(3): mov %rsi,%rdx
38bd(3): mov %rdi,%rsi
38c0(2): xor %edi,%edi
38c2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
38d0(3): mov %rcx,%r8
38d3(3): mov %rdx,%rcx
38d6(3): mov %rsi,%rdx
38d9(3): mov %rdi,%rsi
38dc(2): xor %edi,%edi
38de(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
38f0(7): lea 0x203729(%rip),%rcx
38f7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3900(7): lea 0x203719(%rip),%rcx
3907(3): mov %rsi,%rdx
390a(3): mov %rdi,%rsi
390d(2): xor %edi,%edi
390f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3920(7): lea 0x2036f9(%rip),%rcx
3927(7): mov $0xffffffff,%rdx
392e(5): jmp 0xfffff6d2(%rip)

"quote" :
3940(7): lea 0x2036d9(%rip),%rcx
3947(3): mov %rdi,%rsi
394a(7): mov $0xffffffff,%rdx
3951(2): xor %edi,%edi
3953(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3960(2): push %r15
3962(2): push %r14
3964(2): push %r13
3966(2): push %r12
3968(3): mov %r9,%r12
396b(1): push %rbp
396c(1): push %rbx
396d(3): mov %rdi,%rbp
3970(3): mov %r8,%rbx
3973(4): sub $0x28,%rsp
3977(3): test %rsi,%rsi
397a(6): jz 0x11e(%rip)
3980(3): mov %rdx,%r8
3983(7): lea 0x151e(%rip),%rdx
398a(3): mov %rcx,%r9
398d(2): xor %eax,%eax
398f(3): mov %rsi,%rcx
3992(5): mov $0x1,%esi
3997(5): call 0xffffdae9(%rip)
399c(7): lea 0x1518(%rip),%rsi
39a3(2): xor %edi,%edi
39a5(5): mov $0x5,%edx
39aa(5): call 0xffffd926(%rip)
39af(7): lea 0x182a(%rip),%rdx
39b6(3): mov %rax,%rcx
39b9(6): mov $0x7e3,%r8d
39bf(5): mov $0x1,%esi
39c4(3): mov %rbp,%rdi
39c7(2): xor %eax,%eax
39c9(5): call 0xffffdab7(%rip)
39ce(7): lea 0x1573(%rip),%rsi
39d5(2): xor %edi,%edi
39d7(5): mov $0x5,%edx
39dc(5): call 0xffffd8f4(%rip)
39e1(3): mov %rbp,%rsi
39e4(3): mov %rax,%rdi
39e7(5): call 0xffffd999(%rip)
39ec(4): cmp $0x9,%r12
39f0(6): jnbe 0x340(%rip)
39f6(7): lea 0x17ab(%rip),%rdx
39fd(4): movsxd 0x0(%rdx,%r12,4),%rax
3a01(3): add %rdx,%rax
3a04(2): jmp %rax
3a06(a): nop 0x0(%rax,%rax,1)
3a10(4): mov 0x38(%rbx),%r9
3a14(4): mov 0x10(%rbx),%rax
3a18(7): lea 0x1699(%rip),%rsi
3a1f(4): mov 0x8(%rbx),%r8
3a23(5): mov $0x5,%edx
3a28(2): xor %edi,%edi
3a2a(4): mov 0x30(%rbx),%r13
3a2e(4): mov 0x28(%rbx),%r12
3a32(5): mov %r9,0x10(%rsp)
3a37(4): mov 0x20(%rbx),%r15
3a3b(4): mov 0x18(%rbx),%r14
3a3f(4): mov %rax,(%rsp)
3a43(5): mov %r8,0x8(%rsp)
3a48(3): mov (%rbx),%rbx
3a4b(5): call 0xffffd885(%rip)
3a50(4): sub $0x8,%rsp
3a54(5): mov 0x18(%rsp),%r9
3a59(3): mov %rax,%rdx
3a5c(3): mov %rbx,%rcx
3a5f(5): mov $0x1,%esi
3a64(3): mov %rbp,%rdi
3a67(2): xor %eax,%eax
3a69(2): push %r9
3a6b(2): push %r13
3a6d(2): push %r12
3a6f(2): push %r15
3a71(2): push %r14
3a73(5): mov 0x30(%rsp),%r9
3a78(5): mov 0x38(%rsp),%r8
3a7d(5): call 0xffffda03(%rip)
3a82(4): add $0x30,%rsp
3a86(4): add $0x28,%rsp
3a8a(1): pop %rbx
3a8b(1): pop %rbp
3a8c(2): pop %r12
3a8e(2): pop %r13
3a90(2): pop %r14
3a92(2): pop %r15
3a94(1): ret near (%rsp)
3a95(3): nop (%rax)
3a98(3): mov %rcx,%r8
3a9b(3): mov %rdx,%rcx
3a9e(7): lea 0x140f(%rip),%rdx
3aa5(5): mov $0x1,%esi
3aaa(2): xor %eax,%eax
3aac(5): call 0xffffd9d4(%rip)
3ab1(5): jmp 0xfffffeeb(%rip)
3ab6(a): nop 0x0(%rax,%rax,1)
3ac0(4): mov 0x40(%rbx),%r10
3ac4(4): mov 0x38(%rbx),%r9
3ac8(7): lea 0x1619(%rip),%rsi
3acf(4): mov 0x10(%rbx),%rax
3ad3(4): mov 0x8(%rbx),%r8
3ad7(5): mov $0x5,%edx
3adc(4): mov 0x30(%rbx),%r13
3ae0(4): mov 0x28(%rbx),%r12
3ae4(4): mov 0x20(%rbx),%r15
3ae8(4): mov 0x18(%rbx),%r14
3aec(3): mov (%rbx),%rbx
3aef(5): mov %r10,0x18(%rsp)
3af4(5): mov %r9,0x10(%rsp)
3af9(4): mov %rax,(%rsp)
3afd(5): mov %r8,0x8(%rsp)
3b02(2): xor %edi,%edi
3b04(5): call 0xffffd7cc(%rip)
3b09(5): mov 0x18(%rsp),%r10
3b0e(2): push %r10
3b10(5): jmp 0xffffff44(%rip)
3b15(3): nop (%rax)
3b18(3): mov (%rbx),%rbx
3b1b(7): lea 0x139d(%rip),%rsi
3b22(5): mov $0x5,%edx
3b27(2): xor %edi,%edi
3b29(5): call 0xffffd7a7(%rip)
3b2e(4): add $0x28,%rsp
3b32(3): mov %rbx,%rcx
3b35(3): mov %rbp,%rdi
3b38(1): pop %rbx
3b39(1): pop %rbp
3b3a(2): pop %r12
3b3c(2): pop %r13
3b3e(2): pop %r14
3b40(2): pop %r15
3b42(3): mov %rax,%rdx
3b45(5): mov $0x1,%esi
3b4a(2): xor %eax,%eax
3b4c(5): jmp 0xffffd934(%rip)
3b51(7): nop 0x0(%rax)
3b58(4): mov 0x8(%rbx),%r12
3b5c(7): lea 0x136c(%rip),%rsi
3b63(3): mov (%rbx),%rbx
3b66(5): mov $0x5,%edx
3b6b(2): xor %edi,%edi
3b6d(5): call 0xffffd763(%rip)
3b72(4): add $0x28,%rsp
3b76(3): mov %r12,%r8
3b79(3): mov %rbx,%rcx
3b7c(3): mov %rbp,%rdi
3b7f(3): mov %rax,%rdx
3b82(5): mov $0x1,%esi
3b87(1): pop %rbx
3b88(1): pop %rbp
3b89(2): pop %r12
3b8b(2): pop %r13
3b8d(2): pop %r14
3b8f(2): pop %r15
3b91(2): xor %eax,%eax
3b93(5): jmp 0xffffd8ed(%rip)
3b98(8): nop 0x0(%rax,%rax,1)
3ba0(4): mov 0x10(%rbx),%r13
3ba4(4): mov 0x8(%rbx),%r12
3ba8(7): lea 0x1337(%rip),%rsi
3baf(3): mov (%rbx),%rbx
3bb2(5): mov $0x5,%edx
3bb7(2): xor %edi,%edi
3bb9(5): call 0xffffd717(%rip)
3bbe(4): add $0x28,%rsp
3bc2(3): mov %r13,%r9
3bc5(3): mov %r12,%r8
3bc8(3): mov %rbx,%rcx
3bcb(3): mov %rbp,%rdi
3bce(3): mov %rax,%rdx
3bd1(1): pop %rbx
3bd2(1): pop %rbp
3bd3(2): pop %r12
3bd5(2): pop %r13
3bd7(2): pop %r14
3bd9(2): pop %r15
3bdb(5): mov $0x1,%esi
3be0(2): xor %eax,%eax
3be2(5): jmp 0xffffd89e(%rip)
3be7(9): nop 0x0(%rax,%rax,1)
3bf0(7): lea 0x1421(%rip),%rsi
3bf7(5): mov $0x5,%edx
3bfc(2): xor %edi,%edi
3bfe(4): mov 0x18(%rbx),%r14
3c02(4): mov 0x10(%rbx),%r13
3c06(4): mov 0x8(%rbx),%r12
3c0a(3): mov (%rbx),%rbx
3c0d(5): call 0xffffd6c3(%rip)
3c12(4): sub $0x8,%rsp
3c16(2): push %r14
3c18(3): mov %rax,%rdx
3c1b(3): mov %r13,%r9
3c1e(3): mov %r12,%r8
3c21(3): mov %rbx,%rcx
3c24(3): mov %rbp,%rdi
3c27(5): mov $0x1,%esi
3c2c(2): xor %eax,%eax
3c2e(5): call 0xffffd852(%rip)
3c33(1): pop %rax
3c34(1): pop %rdx
3c35(4): add $0x28,%rsp
3c39(1): pop %rbx
3c3a(1): pop %rbp
3c3b(2): pop %r12
3c3d(2): pop %r13
3c3f(2): pop %r14
3c41(2): pop %r15
3c43(1): ret near (%rsp)
3c44(4): nop 0x0(%rax)
3c48(4): mov 0x20(%rbx),%r15
3c4c(7): lea 0x13e5(%rip),%rsi
3c53(5): mov $0x5,%edx
3c58(2): xor %edi,%edi
3c5a(4): mov 0x18(%rbx),%r14
3c5e(4): mov 0x10(%rbx),%r13
3c62(4): mov 0x8(%rbx),%r12
3c66(3): mov (%rbx),%rbx
3c69(5): call 0xffffd667(%rip)
3c6e(2): push %r15
3c70(2): jmp 0xffffffa6(%rip)
3c72(6): nop 0x0(%rax,%rax,1)
3c78(4): mov 0x8(%rbx),%r8
3c7c(4): mov 0x28(%rbx),%r12
3c80(7): lea 0x13d9(%rip),%rsi
3c87(4): mov 0x20(%rbx),%r15
3c8b(4): mov 0x18(%rbx),%r14
3c8f(5): mov $0x5,%edx
3c94(4): mov 0x10(%rbx),%r13
3c98(2): xor %edi,%edi
3c9a(3): mov (%rbx),%rbx
3c9d(4): mov %r8,(%rsp)
3ca1(5): call 0xffffd62f(%rip)
3ca6(4): sub $0x8,%rsp
3caa(3): mov %r13,%r9
3cad(2): push %r12
3caf(2): push %r15
3cb1(2): push %r14
3cb3(5): mov 0x20(%rsp),%r8
3cb8(3): mov %rbx,%rcx
3cbb(3): mov %rax,%rdx
3cbe(3): mov %rbp,%rdi
3cc1(5): mov $0x1,%esi
3cc6(2): xor %eax,%eax
3cc8(5): call 0xffffd7b8(%rip)
3ccd(4): add $0x20,%rsp
3cd1(4): add $0x28,%rsp
3cd5(1): pop %rbx
3cd6(1): pop %rbp
3cd7(2): pop %r12
3cd9(2): pop %r13
3cdb(2): pop %r14
3cdd(2): pop %r15
3cdf(1): ret near (%rsp)
3ce0(4): mov 0x10(%rbx),%r9
3ce4(4): mov 0x30(%rbx),%r13
3ce8(7): lea 0x1399(%rip),%rsi
3cef(4): mov 0x28(%rbx),%r12
3cf3(4): mov 0x20(%rbx),%r15
3cf7(5): mov $0x5,%edx
3cfc(4): mov 0x18(%rbx),%r14
3d00(4): mov 0x8(%rbx),%r8
3d04(2): xor %edi,%edi
3d06(5): mov %r9,0x8(%rsp)
3d0b(3): mov (%rbx),%rbx
3d0e(4): mov %r8,(%rsp)
3d12(5): call 0xffffd5be(%rip)
3d17(2): push %r13
3d19(2): push %r12
3d1b(2): push %r15
3d1d(2): push %r14
3d1f(5): mov 0x28(%rsp),%r9
3d24(2): jmp 0xffffff8f(%rip)
3d26(a): nop 0x0(%rax,%rax,1)
3d30(4): mov 0x40(%rbx),%r10
3d34(4): mov 0x38(%rbx),%r9
3d38(5): mov $0x5,%edx
3d3d(4): mov 0x10(%rbx),%rax
3d41(4): mov 0x8(%rbx),%r8
3d45(7): lea 0x13d4(%rip),%rsi
3d4c(4): mov 0x30(%rbx),%r13
3d50(4): mov 0x28(%rbx),%r12
3d54(4): mov 0x20(%rbx),%r15
3d58(4): mov 0x18(%rbx),%r14
3d5c(5): mov %r10,0x18(%rsp)
3d61(5): mov %r9,0x10(%rsp)
3d66(4): mov %rax,(%rsp)
3d6a(5): mov %r8,0x8(%rsp)
3d6f(3): mov (%rbx),%rbx
3d72(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3d80(3): xor %r9d,%r9d
3d83(4): cmp $0x0,(%r8)
3d87(2): jz 0x14(%rip)
3d89(7): nop 0x0(%rax)
3d90(4): add $0x1,%r9
3d94(5): cmp $0x0,0x0(%r8,%r9,8)
3d99(2): jnz 0xfffffff7(%rip)
3d9b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3da0(4): sub $0x68,%rsp
3da4(3): mov %r8,%r10
3da7(3): xor %r9d,%r9d
3daa(9): mov $0x28,%rax
3db3(5): mov %rax,0x58(%rsp)
3db8(2): xor %eax,%eax
3dba(3): mov %rsp,%r8
3dbd(3): nop (%rax)
3dc0(3): mov (%r10),%eax
3dc3(3): cmp $0x2f,%eax
3dc6(2): jnbe 0x44(%rip)
3dc8(3): mov %eax,%r11d
3dcb(4): add 0x10(%r10),%r11
3dcf(3): add $0x8,%eax
3dd2(3): mov %eax,(%r10)
3dd5(3): mov (%r11),%rax
3dd8(3): test %rax,%rax
3ddb(4): mov %rax,0x0(%r8,%r9,8)
3ddf(2): jz 0xc(%rip)
3de1(4): add $0x1,%r9
3de5(4): cmp $0xa,%r9
3de9(2): jnz 0xffffffd7(%rip)
3deb(5): call 0xfffffb75(%rip)
3df0(5): mov 0x58(%rsp),%rax
3df5(9): xor $0x28,%rax
3dfe(2): jnz 0x7(%rip)
3e00(4): add $0x68,%rsp
3e04(1): ret near (%rsp)
3e05(5): call 0xffffd4fb(%rip)
3e0a(4): mov 0x8(%r10),%r11
3e0e(4): lea 0x8(%r11),%rax
3e12(4): mov %rax,0x8(%r10)
3e16(2): jmp 0xffffffbf(%rip)

"version_etc" :
3e20(1): push %rbp
3e21(1): push %rbx
3e22(6): mov $0x20,%r10d
3e28(3): xor %r11d,%r11d
3e2b(7): sub $0xb8,%rsp
3e32(9): mov $0x28,%rax
3e3b(5): mov %rax,0x78(%rsp)
3e40(2): xor %eax,%eax
3e42(8): lea 0xd0(%rsp),%rax
3e4a(8): mov %r8,0xa0(%rsp)
3e52(8): lea 0xd0(%rsp),%rbx
3e5a(5): lea 0x20(%rsp),%r8
3e5f(8): mov %r9,0xa8(%rsp)
3e67(8): mov $0x20,0x8(%rsp)
3e6f(5): mov %rax,0x10(%rsp)
3e74(8): lea 0x80(%rsp),%rax
3e7c(3): xor %r9d,%r9d
3e7f(5): mov %rax,0x18(%rsp)
3e84(3): mov %rax,%rbp
3e87(9): nop 0x0(%rax,%rax,1)
3e90(4): cmp $0x2f,%r10d
3e94(2): jnbe 0x58(%rip)
3e96(3): mov %r10d,%eax
3e99(6): mov $0x1,%r11d
3e9f(4): add $0x8,%r10d
3ea3(3): add %rbp,%rax
3ea6(3): mov (%rax),%rax
3ea9(3): test %rax,%rax
3eac(4): mov %rax,0x0(%r8,%r9,8)
3eb0(2): jz 0xc(%rip)
3eb2(4): add $0x1,%r9
3eb6(4): cmp $0xa,%r9
3eba(2): jnz 0xffffffd6(%rip)
3ebc(3): test %r11b,%r11b
3ebf(2): jnz 0x26(%rip)
3ec1(5): call 0xfffffa9f(%rip)
3ec6(5): mov 0x78(%rsp),%rax
3ecb(9): xor $0x28,%rax
3ed4(2): jnz 0xc(%rip)
3ed6(7): add $0xb8,%rsp
3edd(1): pop %rbx
3ede(1): pop %rbp
3edf(1): ret near (%rsp)
3ee0(5): call 0xffffd420(%rip)
3ee5(5): mov %r10d,0x8(%rsp)
3eea(2): jmp 0xffffffd7(%rip)
3eec(3): mov %rbx,%rax
3eef(4): add $0x8,%rbx
3ef3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
3f00(1): push %rbx
3f01(7): lea 0xffa(%rip),%rsi
3f08(5): mov $0x5,%edx
3f0d(2): xor %edi,%edi
3f0f(5): call 0xffffd3c1(%rip)
3f14(7): lea 0xffc(%rip),%rdx
3f1b(3): mov %rax,%rsi
3f1e(5): mov $0x1,%edi
3f23(2): xor %eax,%eax
3f25(5): call 0xffffd4fb(%rip)
3f2a(7): lea 0xffc(%rip),%rsi
3f31(5): mov $0x5,%edx
3f36(2): xor %edi,%edi
3f38(5): call 0xffffd398(%rip)
3f3d(7): lea 0x97c(%rip),%rcx
3f44(7): lea 0x6b8(%rip),%rdx
3f4b(3): mov %rax,%rsi
3f4e(5): mov $0x1,%edi
3f53(2): xor %eax,%eax
3f55(5): call 0xffffd4cb(%rip)
3f5a(7): mov 0x203127(%rip),%rbx
3f61(7): lea 0x11f8(%rip),%rsi
3f68(2): xor %edi,%edi
3f6a(5): mov $0x5,%edx
3f6f(5): call 0xffffd361(%rip)
3f74(3): mov %rbx,%rsi
3f77(3): mov %rax,%rdi
3f7a(1): pop %rbx
3f7b(5): jmp 0xffffd405(%rip)

"xmalloc" :
3f80(1): push %rbx
3f81(3): mov %rdi,%rbx
3f84(5): call 0xffffd43c(%rip)
3f89(3): test %rax,%rax
3f8c(2): jnz 0x7(%rip)
3f8e(3): test %rbx,%rbx
3f91(2): jnz 0x4(%rip)
3f93(1): pop %rbx
3f94(1): ret near (%rsp)
3f95(5): call 0x23b(%rip)

"xnmalloc" :
3fa0(3): mov %rdi,%rax
3fa3(3): mul %rax,%rsi,%rdx
3fa6(3): mov %rax,%rdi
3fa9(3): seto %al
3fac(3): test %rdi,%rdi
3faf(2): js 0xc(%rip)
3fb1(3): movzx %al,%eax
3fb4(3): test %rax,%rax
3fb7(2): jnz 0x4(%rip)
3fb9(2): jmp 0xffffffc7(%rip)
3fbb(4): sub $0x8,%rsp
3fbf(5): call 0x211(%rip)

"xrealloc" :
3fe0(3): test %rsi,%rsi
3fe3(1): push %rbx
3fe4(3): mov %rsi,%rbx
3fe7(2): jnz 0x7(%rip)
3fe9(3): test %rdi,%rdi
3fec(2): jnz 0x1c(%rip)
3fee(3): mov %rbx,%rsi
3ff1(5): call 0xffffd40f(%rip)
3ff6(3): test %rax,%rax
3ff9(2): jnz 0x7(%rip)
3ffb(3): test %rbx,%rbx
3ffe(2): jnz 0x13(%rip)
4000(1): pop %rbx
4001(1): ret near (%rsp)
4002(6): nop 0x0(%rax,%rax,1)
4008(5): call 0xffffd238(%rip)
400d(2): xor %eax,%eax
400f(1): pop %rbx
4010(1): ret near (%rsp)
4011(5): call 0x1bf(%rip)

"xnrealloc" :
4020(3): mov %rsi,%rax
4023(3): mul %rax,%rdx,%rdx
4026(3): mov %rax,%rsi
4029(3): seto %al
402c(3): test %rsi,%rsi
402f(2): js 0xc(%rip)
4031(3): movzx %al,%eax
4034(3): test %rax,%rax
4037(2): jnz 0x4(%rip)
4039(2): jmp 0xffffffa7(%rip)
403b(4): sub $0x8,%rsp
403f(5): call 0x191(%rip)

"x2nrealloc" :
4050(3): test %rdi,%rdi
4053(3): mov %rdx,%r9
4056(3): mov (%rsi),%rcx
4059(2): jz 0x37(%rip)
405b(2): xor %edx,%edx
405d(a): mov $0x6148914691236517204,%rax
4067(3): div %r9,%rax
406a(3): cmp %rcx,%rax
406d(2): jbe 0x3e(%rip)
406f(3): mov %rcx,%rax
4072(3): shr $0x1,%rax
4075(5): lea 0x1(%rax,%rcx,1),%rcx
407a(3): mov %rcx,(%rsi)
407d(4): imul %r9,%rcx
4081(3): mov %rcx,%rsi
4084(5): jmp 0xffffff5c(%rip)
4089(7): nop 0x0(%rax)
4090(3): test %rcx,%rcx
4093(2): jz 0x25(%rip)
4095(3): mov %rcx,%rax
4098(3): mul %rax,%r9,%rdx
409b(3): seto %dl
409e(3): test %rax,%rax
40a1(3): movzx %dl,%edx
40a4(2): js 0x7(%rip)
40a6(3): test %rdx,%rdx
40a9(2): jz 0xffffffd1(%rip)
40ab(4): sub $0x8,%rsp
40af(5): call 0x121(%rip)
40b4(4): nop 0x0(%rax)
40b8(2): xor %edx,%edx
40ba(5): mov $0x80,%eax
40bf(3): xor %r8d,%r8d
40c2(3): div %r9,%rax
40c5(3): test %rax,%rax
40c8(4): setz %r8b
40cc(4): lea 0x0(%r8,%rax,1),%rcx
40d0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
40e0(3): test %rdi,%rdi
40e3(3): mov (%rsi),%rax
40e6(2): jz 0x2a(%rip)
40e8(a): mov $0x6148914691236517203,%rdx
40f2(3): cmp %rdx,%rax
40f5(2): jnbe 0x2c(%rip)
40f7(3): mov %rax,%rdx
40fa(3): shr $0x1,%rdx
40fd(5): lea 0x1(%rdx,%rax,1),%rax
4102(3): mov %rax,(%rsi)
4105(3): mov %rax,%rsi
4108(5): jmp 0xfffffed8(%rip)
410d(3): nop (%rax)
4110(3): test %rax,%rax
4113(5): mov $0x80,%edx
4118(4): cmove %rdx,%rax
411c(3): test %rax,%rax
411f(2): jns 0xffffffe3(%rip)
4121(4): sub $0x8,%rsp
4125(5): call 0xab(%rip)

"xzalloc" :
4130(1): push %rbx
4131(3): mov %rdi,%rbx
4134(5): call 0xfffffe4c(%rip)
4139(3): mov %rbx,%rdx
413c(2): xor %esi,%esi
413e(3): mov %rax,%rdi
4141(1): pop %rbx
4142(5): jmp 0xffffd21e(%rip)

"xcalloc" :
4150(3): mov %rdi,%rax
4153(4): sub $0x8,%rsp
4157(3): mul %rax,%rsi,%rdx
415a(3): seto %dl
415d(3): test %rax,%rax
4160(2): js 0x19(%rip)
4162(3): movzx %dl,%edx
4165(3): test %rdx,%rdx
4168(2): jnz 0x11(%rip)
416a(5): call 0xffffd226(%rip)
416f(3): test %rax,%rax
4172(2): jz 0x7(%rip)
4174(4): add $0x8,%rsp
4178(1): ret near (%rsp)
4179(5): call 0x57(%rip)

"xmemdup" :
4180(1): push %rbp
4181(1): push %rbx
4182(3): mov %rdi,%rbp
4185(3): mov %rsi,%rdi
4188(3): mov %rsi,%rbx
418b(4): sub $0x8,%rsp
418f(5): call 0xfffffdf1(%rip)
4194(4): add $0x8,%rsp
4198(3): mov %rbx,%rdx
419b(3): mov %rbp,%rsi
419e(1): pop %rbx
419f(1): pop %rbp
41a0(3): mov %rax,%rdi
41a3(5): jmp 0xffffd1fd(%rip)

"xstrdup" :
41b0(1): push %rbx
41b1(3): mov %rdi,%rbx
41b4(5): call 0xffffd13c(%rip)
41b9(3): mov %rbx,%rdi
41bc(4): lea 0x1(%rax),%rsi
41c0(1): pop %rbx
41c1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
41d0(7): lea 0x1038(%rip),%rsi
41d7(4): sub $0x8,%rsp
41db(5): mov $0x5,%edx
41e0(2): xor %edi,%edi
41e2(5): call 0xffffd0ee(%rip)
41e7(6): mov 0x202e2b(%rip),%edi
41ed(7): lea 0x784(%rip),%rdx
41f4(3): mov %rax,%rcx
41f7(2): xor %esi,%esi
41f9(2): xor %eax,%eax
41fb(5): call 0xffffd235(%rip)
4200(5): call 0xffffd050(%rip)

"rpl_mbrtowc" :
4210(2): push %r13
4212(2): push %r12
4214(3): mov %rsi,%r13
4217(1): push %rbp
4218(1): push %rbx
4219(3): mov %rdi,%rbx
421c(3): mov %rdx,%r12
421f(4): sub $0x18,%rsp
4223(9): mov $0x28,%rax
422c(5): mov %rax,0x8(%rsp)
4231(2): xor %eax,%eax
4233(5): lea 0x4(%rsp),%rax
4238(3): test %rdi,%rdi
423b(4): cmove %rax,%rbx
423f(3): mov %rbx,%rdi
4242(5): call 0xffffd0de(%rip)
4247(4): cmp $0xfffffffd,%rax
424b(3): mov %rax,%rbp
424e(2): jbe 0x22(%rip)
4250(3): test %r12,%r12
4253(2): jz 0x1d(%rip)
4255(2): xor %edi,%edi
4257(5): call 0xc9(%rip)
425c(2): test %al,%al
425e(2): jnz 0x12(%rip)
4260(5): movzx 0x0(%r13),%eax
4265(5): mov $0x1,%ebp
426a(2): mov %eax,(%rbx)
426c(4): nop 0x0(%rax)
4270(5): mov 0x8(%rsp),%rdx
4275(9): xor $0x28,%rdx
427e(3): mov %rbp,%rax
4281(2): jnz 0xd(%rip)
4283(4): add $0x18,%rsp
4287(1): pop %rbx
4288(1): pop %rbp
4289(2): pop %r12
428b(2): pop %r13
428d(1): ret near (%rsp)
428e(5): call 0xffffd072(%rip)

"close_stream" :
42a0(2): push %r12
42a2(1): push %rbp
42a3(3): mov %rdi,%rbp
42a6(1): push %rbx
42a7(5): call 0xffffcfe9(%rip)
42ac(3): mov 0x0(%rbp),%ebx
42af(3): mov %rbp,%rdi
42b2(3): mov %rax,%r12
42b5(5): call 0x10b(%rip)
42ba(3): and $0x20,%ebx
42bd(2): test %ebx,%ebx
42bf(2): jnz 0x19(%rip)
42c1(2): test %eax,%eax
42c3(2): jz 0xc(%rip)
42c5(3): test %r12,%r12
42c8(5): mov $0xffffffff,%eax
42cd(2): jz 0x3b(%rip)
42cf(1): pop %rbx
42d0(1): pop %rbp
42d1(2): pop %r12
42d3(1): ret near (%rsp)
42d4(4): nop 0x0(%rax)
42d8(2): test %eax,%eax
42da(2): jnz 0x1e(%rip)
42dc(5): call 0xffffcf84(%rip)
42e1(6): mov $0x0,(%rax)
42e7(5): mov $0xffffffff,%eax
42ec(1): pop %rbx
42ed(1): pop %rbp
42ee(2): pop %r12
42f0(1): ret near (%rsp)
42f1(7): nop 0x0(%rax)
42f8(1): pop %rbx
42f9(5): mov $0xffffffff,%eax
42fe(1): pop %rbp
42ff(2): pop %r12
4301(1): ret near (%rsp)
4302(6): nop 0x0(%rax,%rax,1)
4308(5): call 0xffffcf58(%rip)
430d(3): cmp $0x9,(%rax)
4310(1): pop %rbx
4311(1): pop %rbp
4312(2): pop %r12
4314(3): setnz %al
4317(3): movzx %al,%eax
431a(2): neg %eax
431c(1): ret near (%rsp)

"hard_locale" :
4320(4): sub $0x8,%rsp
4324(2): xor %esi,%esi
4326(5): call 0xffffd0ea(%rip)
432b(3): mov %rax,%rdx
432e(5): mov $0x1,%eax
4333(3): test %rdx,%rdx
4336(2): jz 0x1f(%rip)
4338(7): lea 0xee1(%rip),%rdi
433f(5): mov $0x2,%ecx
4344(3): mov %rdx,%rsi
4347(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4349(3): setnbe %cl
434c(3): sbb $0x0,%cl
434f(2): xor %eax,%eax
4351(2): test %cl,%cl
4353(2): jnz 0xd(%rip)
4355(4): add $0x8,%rsp
4359(1): ret near (%rsp)
435a(6): nop 0x0(%rax,%rax,1)
4360(7): lea 0xebb(%rip),%rdi
4367(5): mov $0x6,%ecx
436c(3): mov %rdx,%rsi
436f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4371(3): setnbe %al
4374(2): sbb $0x0,%al
4376(2): test %al,%al
4378(3): setnz %al
437b(4): add $0x8,%rsp
437f(1): ret near (%rsp)

"locale_charset" :
4380(4): sub $0x8,%rsp
4384(5): mov $0xe,%edi
4389(5): call 0xffffd057(%rip)
438e(3): test %rax,%rax
4391(2): jz 0x1f(%rip)
4393(3): cmp $0x0,(%rax)
4396(7): lea 0xe8b(%rip),%rdx
439d(4): cmove %rdx,%rax
43a1(4): add $0x8,%rsp
43a5(1): ret near (%rsp)
43a6(a): nop 0x0(%rax,%rax,1)
43b0(7): lea 0xe71(%rip),%rax
43b7(4): add $0x8,%rsp
43bb(1): ret near (%rsp)

"rpl_fclose" :
43c0(2): push %r12
43c2(1): push %rbp
43c3(1): push %rbx
43c4(3): mov %rdi,%rbx
43c7(5): call 0xffffcfe9(%rip)
43cc(2): test %eax,%eax
43ce(3): mov %rbx,%rdi
43d1(2): js 0x56(%rip)
43d3(5): call 0xffffd01d(%rip)
43d8(2): test %eax,%eax
43da(2): jnz 0x2e(%rip)
43dc(3): mov %rbx,%rdi
43df(5): call 0x61(%rip)
43e4(2): test %eax,%eax
43e6(2): jz 0x3e(%rip)
43e8(5): call 0xffffce78(%rip)
43ed(3): mov (%rax),%r12d
43f0(3): mov %rbx,%rdi
43f3(3): mov %rax,%rbp
43f6(5): call 0xffffceba(%rip)
43fb(3): test %r12d,%r12d
43fe(2): jnz 0x32(%rip)
4400(1): pop %rbx
4401(1): pop %rbp
4402(2): pop %r12
4404(1): ret near (%rsp)
4405(3): nop (%rax)
4408(3): mov %rbx,%rdi
440b(5): call 0xffffcfa5(%rip)
4410(2): xor %esi,%esi
4412(5): mov $0x1,%edx
4417(2): mov %eax,%edi
4419(5): call 0xffffcf37(%rip)
441e(4): cmp $0xffffffff,%rax
4422(2): jnz 0xffffffba(%rip)
4424(3): mov %rbx,%rdi
4427(1): pop %rbx
4428(1): pop %rbp
4429(2): pop %r12
442b(5): jmp 0xffffce85(%rip)
4430(4): mov %r12d,0x0(%rbp)
4434(5): mov $0xffffffff,%eax
4439(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4440(3): test %rdi,%rdi
4443(1): push %rbx
4444(3): mov %rdi,%rbx
4447(2): jz 0x13(%rip)
4449(5): call 0xffffcfa7(%rip)
444e(2): test %eax,%eax
4450(2): jz 0xa(%rip)
4452(6): test $0x100,(%rbx)
4458(2): jnz 0x10(%rip)
445a(3): mov %rbx,%rdi
445d(1): pop %rbx
445e(5): jmp 0xffffcf72(%rip)
4463(5): nop 0x0(%rax,%rax,1)
4468(3): mov %rbx,%rdi
446b(5): mov $0x1,%edx
4470(2): xor %esi,%esi
4472(5): call 0xe(%rip)
4477(3): mov %rbx,%rdi
447a(1): pop %rbx
447b(5): jmp 0xffffcf55(%rip)

"rpl_fseeko" :
4480(4): mov 0x8(%rdi),%rax
4484(4): cmp %rax,0x10(%rdi)
4488(2): jz 0x8(%rip)
448a(5): jmp 0xffffcfb6(%rip)
448f(1): nop 
4490(4): mov 0x20(%rdi),%rax
4494(4): cmp %rax,0x28(%rdi)
4498(2): jnz 0xfffffff2(%rip)
449a(5): cmp $0x0,0x48(%rdi)
449f(2): jnz 0xffffffeb(%rip)
44a1(2): push %r12
44a3(1): push %rbp
44a4(3): mov %edx,%r12d
44a7(1): push %rbx
44a8(3): mov %rsi,%rbp
44ab(3): mov %rdi,%rbx
44ae(5): call 0xffffcf02(%rip)
44b3(3): mov %r12d,%edx
44b6(3): mov %rbp,%rsi
44b9(2): mov %eax,%edi
44bb(5): call 0xffffce95(%rip)
44c0(4): cmp $0xffffffff,%rax
44c4(2): jz 0xe(%rip)
44c6(3): and $0xef,(%rbx)
44c9(7): mov %rax,0x90(%rbx)
44d0(2): xor %eax,%eax
44d2(1): pop %rbx
44d3(1): pop %rbp
44d4(2): pop %r12
44d6(1): ret near (%rsp)

"__libc_csu_init" :
44e0(2): push %r15
44e2(2): push %r14
44e4(3): mov %rdx,%r15
44e7(2): push %r13
44e9(2): push %r12
44eb(7): lea 0x20269e(%rip),%r12
44f2(1): push %rbp
44f3(7): lea 0x20269e(%rip),%rbp
44fa(1): push %rbx
44fb(3): mov %edi,%r13d
44fe(3): mov %rsi,%r14
4501(3): sub %r12,%rbp
4504(4): sub $0x8,%rsp
4508(4): sar $0x3,%rbp
450c(5): call 0xffffcd0c(%rip)
4511(3): test %rbp,%rbp
4514(2): jz 0x22(%rip)
4516(2): xor %ebx,%ebx
4518(8): nop 0x0(%rax,%rax,1)
4520(3): mov %r15,%rdx
4523(3): mov %r14,%rsi
4526(3): mov %r13d,%edi
4529(4): call 0x0(%r12,%rbx,8)
452d(4): add $0x1,%rbx
4531(3): cmp %rbx,%rbp
4534(2): jnz 0xffffffec(%rip)
4536(4): add $0x8,%rsp
453a(1): pop %rbx
453b(1): pop %rbp
453c(2): pop %r12
453e(2): pop %r13
4540(2): pop %r14
4542(2): pop %r15
4544(1): ret near (%rsp)

"atexit" :
4560(7): mov 0x202aa1(%rip),%rdx
4567(2): xor %esi,%esi
4569(5): jmp 0xffffcee7(%rip)

"_fini" :
4570(4): sub $0x8,%rsp
4574(4): add $0x8,%rsp
4578(1): ret near (%rsp)

