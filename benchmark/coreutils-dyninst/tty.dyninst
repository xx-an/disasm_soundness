
"free@plt" :
1250(6): jmp 0x205c2a(%rip)
1256(5): push $0x0

"abort@plt" :
1260(6): jmp 0x205c22(%rip)
1266(5): push $0x1

"__errno_location@plt" :
1270(6): jmp 0x205c1a(%rip)
1276(5): push $0x2

"strncmp@plt" :
1280(6): jmp 0x205c12(%rip)
1286(5): push $0x3

"_exit@plt" :
1290(6): jmp 0x205c0a(%rip)
1296(5): push $0x4

"__fpending@plt" :
12a0(6): jmp 0x205c02(%rip)
12a6(5): push $0x5

"puts@plt" :
12b0(6): jmp 0x205bfa(%rip)
12b6(5): push $0x6

"isatty@plt" :
12c0(6): jmp 0x205bf2(%rip)
12c6(5): push $0x7

"textdomain@plt" :
12d0(6): jmp 0x205bea(%rip)
12d6(5): push $0x8

"fclose@plt" :
12e0(6): jmp 0x205be2(%rip)
12e6(5): push $0x9

"bindtextdomain@plt" :
12f0(6): jmp 0x205bda(%rip)
12f6(5): push $0xa

"dcgettext@plt" :
1300(6): jmp 0x205bd2(%rip)
1306(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1310(6): jmp 0x205bca(%rip)
1316(5): push $0xc

"strlen@plt" :
1320(6): jmp 0x205bc2(%rip)
1326(5): push $0xd

"__stack_chk_fail@plt" :
1330(6): jmp 0x205bba(%rip)
1336(5): push $0xe

"getopt_long@plt" :
1340(6): jmp 0x205bb2(%rip)
1346(5): push $0xf

"mbrtowc@plt" :
1350(6): jmp 0x205baa(%rip)
1356(5): push $0x10

"strrchr@plt" :
1360(6): jmp 0x205ba2(%rip)
1366(5): push $0x11

"lseek@plt" :
1370(6): jmp 0x205b9a(%rip)
1376(5): push $0x12

"memset@plt" :
1380(6): jmp 0x205b92(%rip)
1386(5): push $0x13

"memcmp@plt" :
1390(6): jmp 0x205b8a(%rip)
1396(5): push $0x14

"fputs_unlocked@plt" :
13a0(6): jmp 0x205b82(%rip)
13a6(5): push $0x15

"calloc@plt" :
13b0(6): jmp 0x205b7a(%rip)
13b6(5): push $0x16

"memcpy@plt" :
13c0(6): jmp 0x205b72(%rip)
13c6(5): push $0x17

"fileno@plt" :
13d0(6): jmp 0x205b6a(%rip)
13d6(5): push $0x18

"malloc@plt" :
13e0(6): jmp 0x205b62(%rip)
13e6(5): push $0x19

"fflush@plt" :
13f0(6): jmp 0x205b5a(%rip)
13f6(5): push $0x1a

"nl_langinfo@plt" :
1400(6): jmp 0x205b52(%rip)
1406(5): push $0x1b

"__freading@plt" :
1410(6): jmp 0x205b4a(%rip)
1416(5): push $0x1c

"ttyname@plt" :
1420(6): jmp 0x205b42(%rip)
1426(5): push $0x1d

"realloc@plt" :
1430(6): jmp 0x205b3a(%rip)
1436(5): push $0x1e

"setlocale@plt" :
1440(6): jmp 0x205b32(%rip)
1446(5): push $0x1f

"__printf_chk@plt" :
1450(6): jmp 0x205b2a(%rip)
1456(5): push $0x20

"error@plt" :
1460(6): jmp 0x205b22(%rip)
1466(5): push $0x21

"fseeko@plt" :
1470(6): jmp 0x205b1a(%rip)
1476(5): push $0x22

"__cxa_atexit@plt" :
1480(6): jmp 0x205b12(%rip)
1486(5): push $0x23

"exit@plt" :
1490(6): jmp 0x205b0a(%rip)
1496(5): push $0x24

"fwrite@plt" :
14a0(6): jmp 0x205b02(%rip)
14a6(5): push $0x25

"__fprintf_chk@plt" :
14b0(6): jmp 0x205afa(%rip)
14b6(5): push $0x26

"mbsinit@plt" :
14c0(6): jmp 0x205af2(%rip)
14c6(5): push $0x27

"iswprint@plt" :
14d0(6): jmp 0x205aea(%rip)
14d6(5): push $0x28

"__ctype_b_loc@plt" :
14e0(6): jmp 0x205ae2(%rip)
14e6(5): push $0x29

".plt.got" :
14f0(6): jmp 0x205afa(%rip)
14f6(2): nop 

"_init" :
1220(4): sub $0x8,%rsp
1224(7): mov 0x205db5(%rip),%rax
122b(3): test %rax,%rax
122e(2): jz 0x4(%rip)
1230(2): call %rax
1232(4): add $0x8,%rsp
1236(1): ret near (%rsp)

"main" :
1500(2): push %r12
1502(1): push %rbp
1503(2): mov %edi,%ebp
1505(1): push %rbx
1506(3): mov (%rsi),%rdi
1509(3): mov %rsi,%rbx
150c(7): lea 0x20566d(%rip),%r12
1513(5): call 0x6ad(%rip)
1518(7): lea 0x301b(%rip),%rsi
151f(5): mov $0x6,%edi
1524(5): call 0xffffff1c(%rip)
1529(7): lea 0x30ae(%rip),%rsi
1530(7): lea 0x307e(%rip),%rdi
1537(5): call 0xfffffdb9(%rip)
153c(7): lea 0x3072(%rip),%rdi
1543(5): call 0xfffffd8d(%rip)
1548(7): lea 0x5c1(%rip),%rdi
154f(a): mov $0x3,0x205abf(%rip)
1559(5): call 0x2f97(%rip)
155e(7): mov $0x0,0x205b44(%rip)
1565(7): lea 0x32a5(%rip),%rdx
156c(3): xor %r8d,%r8d
156f(3): mov %r12,%rcx
1572(3): mov %rbx,%rsi
1575(2): mov %ebp,%edi
1577(5): call 0xfffffdc9(%rip)
157c(3): cmp $0xff,%eax
157f(2): jz 0x6d(%rip)
1581(5): cmp $0xffffff7e,%eax
1586(6): jz 0xca(%rip)
158c(3): cmp $0x73,%eax
158f(2): jz 0x51(%rip)
1591(5): cmp $0xffffff7d,%eax
1596(2): jz 0x12(%rip)
1598(5): mov $0x2,%edi
159d(5): call 0x203(%rip)
15a2(6): nop 0x0(%rax,%rax,1)
15a8(7): mov 0x205ad9(%rip),%rdi
15af(7): mov 0x205a5a(%rip),%rcx
15b6(7): lea 0x3039(%rip),%r8
15bd(7): lea 0x2fed(%rip),%rdx
15c4(7): lea 0x3052(%rip),%rsi
15cb(3): xor %r9d,%r9d
15ce(2): xor %eax,%eax
15d0(5): call 0x27e0(%rip)
15d5(2): xor %edi,%edi
15d7(5): call 0xfffffeb9(%rip)
15dc(4): nop 0x0(%rax)
15e0(7): mov $0x1,0x205ac2(%rip)
15e7(5): jmp 0xffffff7e(%rip)
15ec(7): movsxd 0x205a9d(%rip),%rax
15f3(2): cmp %ebp,%eax
15f5(2): jl 0x62(%rip)
15f7(5): call 0xfffffc79(%rip)
15fc(2): xor %edi,%edi
15fe(7): cmp $0x0,0x205aa4(%rip)
1605(6): mov $0x2,(%rax)
160b(2): jnz 0x1d(%rip)
160d(5): call 0xfffffe13(%rip)
1612(2): xor %ebx,%ebx
1614(3): test %rax,%rax
1617(2): jz 0x1f(%rip)
1619(3): mov %rax,%rdi
161c(5): call 0xfffffc94(%rip)
1621(2): mov %ebx,%eax
1623(1): pop %rbx
1624(1): pop %rbp
1625(2): pop %r12
1627(1): ret near (%rsp)
1628(2): xor %ebx,%ebx
162a(5): call 0xfffffc96(%rip)
162f(2): test %eax,%eax
1631(3): setz %bl
1634(2): jmp 0xffffffed(%rip)
1636(7): lea 0x2fda(%rip),%rsi
163d(5): mov $0x5,%edx
1642(2): xor %edi,%edi
1644(5): mov $0x1,%ebx
1649(5): call 0xfffffcb7(%rip)
164e(2): jmp 0xffffffcb(%rip)
1650(2): xor %edi,%edi
1652(5): call 0x14e(%rip)
1657(4): mov 0x0(%rbx,%rax,8),%rdi
165b(5): call 0x2275(%rip)
1660(7): lea 0x2f9f(%rip),%rsi
1667(3): mov %rax,%rbx
166a(2): xor %edi,%edi
166c(5): mov $0x5,%edx
1671(5): call 0xfffffc8f(%rip)
1676(3): mov %rbx,%rcx
1679(3): mov %rax,%rdx
167c(2): xor %esi,%esi
167e(2): xor %edi,%edi
1680(2): xor %eax,%eax
1682(5): call 0xfffffdde(%rip)
1687(5): jmp 0xffffff11(%rip)

"_start" :
1690(2): xor %ebp,%ebp
1692(3): mov %rdx,%r9
1695(1): pop %rsi
1696(3): mov %rsp,%rdx
1699(4): and $0xfffffff0,%rsp
169d(1): push %rax
169e(1): push %rsp
169f(7): lea 0x2e3a(%rip),%r8
16a6(7): lea 0x2dc3(%rip),%rcx
16ad(7): lea 0xfffffe4c(%rip),%rdi
16b4(6): call 0x20591e(%rip)
16ba(1): hlt 

"deregister_tm_clones" :
16c0(7): lea 0x2059b9(%rip),%rdi
16c7(1): push %rbp
16c8(7): lea 0x2059b1(%rip),%rax
16cf(3): cmp %rdi,%rax
16d2(3): mov %rsp,%rbp
16d5(2): jz 0x1b(%rip)
16d7(7): mov 0x2058f2(%rip),%rax
16de(3): test %rax,%rax
16e1(2): jz 0xf(%rip)
16e3(1): pop %rbp
16e4(2): jmp %rax
16e6(a): nop 0x0(%rax,%rax,1)
16f0(1): pop %rbp
16f1(1): ret near (%rsp)

"register_tm_clones" :
1700(7): lea 0x205979(%rip),%rdi
1707(7): lea 0x205972(%rip),%rsi
170e(1): push %rbp
170f(3): sub %rdi,%rsi
1712(3): mov %rsp,%rbp
1715(4): sar $0x3,%rsi
1719(3): mov %rsi,%rax
171c(4): shr $0x3f,%rax
1720(3): add %rax,%rsi
1723(3): sar $0x1,%rsi
1726(2): jz 0x1a(%rip)
1728(7): mov 0x2058b9(%rip),%rax
172f(3): test %rax,%rax
1732(2): jz 0xe(%rip)
1734(1): pop %rbp
1735(2): jmp %rax
1737(9): nop 0x0(%rax,%rax,1)
1740(1): pop %rbp
1741(1): ret near (%rsp)

"__do_global_dtors_aux" :
1750(7): cmp $0x0,0x205951(%rip)
1757(2): jnz 0x31(%rip)
1759(8): cmp $0x0,0x20588f(%rip)
1761(1): push %rbp
1762(3): mov %rsp,%rbp
1765(2): jz 0xe(%rip)
1767(7): mov 0x20589a(%rip),%rdi
176e(5): call 0xfffffd82(%rip)
1773(5): call 0xffffff4d(%rip)
1778(7): mov $0x1,0x205929(%rip)
177f(1): pop %rbp
1780(1): ret near (%rsp)
1781(7): nop 0x0(%rax)
1788(2): REP ret near (%rsp)

"frame_dummy" :
1790(1): push %rbp
1791(3): mov %rsp,%rbp
1794(1): pop %rbp
1795(5): jmp 0xffffff6b(%rip)

"usage" :
17a0(2): push %r13
17a2(2): push %r12
17a4(5): mov $0x5,%edx
17a9(1): push %rbp
17aa(1): push %rbx
17ab(2): mov %edi,%ebp
17ad(7): sub $0x88,%rsp
17b4(7): mov 0x205905(%rip),%rbx
17bb(9): mov $0x28,%rax
17c4(5): mov %rax,0x78(%rsp)
17c9(2): xor %eax,%eax
17cb(2): test %edi,%edi
17cd(2): jz 0x30(%rip)
17cf(7): lea 0x2e6a(%rip),%rsi
17d6(2): xor %edi,%edi
17d8(5): call 0xfffffb28(%rip)
17dd(7): mov 0x2058bc(%rip),%rdi
17e4(3): mov %rax,%rdx
17e7(3): mov %rbx,%rcx
17ea(5): mov $0x1,%esi
17ef(2): xor %eax,%eax
17f1(5): call 0xfffffcbf(%rip)
17f6(2): mov %ebp,%edi
17f8(5): call 0xfffffc98(%rip)
17fd(7): lea 0x2d20(%rip),%rsi
1804(2): xor %edi,%edi
1806(5): call 0xfffffafa(%rip)
180b(3): mov %rbx,%rdx
180e(3): mov %rax,%rsi
1811(5): mov $0x1,%edi
1816(2): xor %eax,%eax
1818(5): call 0xfffffc38(%rip)
181d(7): mov 0x205864(%rip),%rbx
1824(7): lea 0x2e3d(%rip),%rsi
182b(5): mov $0x5,%edx
1830(2): xor %edi,%edi
1832(5): call 0xffffface(%rip)
1837(3): mov %rbx,%rsi
183a(3): mov %rax,%rdi
183d(5): call 0xfffffb63(%rip)
1842(7): mov 0x20583f(%rip),%rbx
1849(7): lea 0x2ea0(%rip),%rsi
1850(5): mov $0x5,%edx
1855(2): xor %edi,%edi
1857(5): call 0xfffffaa9(%rip)
185c(3): mov %rbx,%rsi
185f(3): mov %rax,%rdi
1862(5): call 0xfffffb3e(%rip)
1867(7): mov 0x20581a(%rip),%rbx
186e(7): lea 0x2eab(%rip),%rsi
1875(5): mov $0x5,%edx
187a(2): xor %edi,%edi
187c(5): call 0xfffffa84(%rip)
1881(3): mov %rbx,%rsi
1884(3): mov %rax,%rdi
1887(7): lea 0x2d8f(%rip),%rbx
188e(5): call 0xfffffb12(%rip)
1893(7): lea 0x2ca1(%rip),%rax
189a(7): lea 0x2cdb(%rip),%rcx
18a1(9): mov $0x0,0x60(%rsp)
18aa(9): mov $0x0,0x68(%rsp)
18b3(3): mov %rsp,%rdx
18b6(4): mov %rax,(%rsp)
18ba(7): lea 0x2c7c(%rip),%rax
18c1(5): mov %rcx,0x30(%rsp)
18c6(7): lea 0x2cb9(%rip),%rcx
18cd(5): mov %rax,0x8(%rsp)
18d2(7): lea 0x2cdc(%rip),%rax
18d9(5): mov %rcx,0x40(%rsp)
18de(7): lea 0x2cab(%rip),%rcx
18e5(5): mov %rax,0x10(%rsp)
18ea(7): lea 0x2c5c(%rip),%rax
18f1(5): mov %rcx,0x50(%rsp)
18f6(5): mov %rax,0x18(%rsp)
18fb(7): lea 0x2c61(%rip),%rax
1902(5): mov %rax,0x20(%rsp)
1907(7): lea 0x2c5f(%rip),%rax
190e(5): mov %rax,0x28(%rsp)
1913(5): mov %rax,0x38(%rsp)
1918(5): mov %rax,0x48(%rsp)
191d(5): mov %rax,0x58(%rsp)
1922(6): nop 0x0(%rax,%rax,1)
1928(4): add $0x10,%rdx
192c(3): mov (%rdx),%rdi
192f(3): test %rdi,%rdi
1932(2): jz 0x15(%rip)
1934(5): mov $0x4,%ecx
1939(3): mov %rbx,%rsi
193c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
193e(3): setnbe %al
1941(2): sbb $0x0,%al
1943(2): test %al,%al
1945(2): jnz 0xffffffe3(%rip)
1947(4): mov 0x8(%rdx),%r12
194b(2): xor %edi,%edi
194d(5): mov $0x5,%edx
1952(7): lea 0x2c41(%rip),%rsi
1959(3): test %r12,%r12
195c(6): jz 0xc7(%rip)
1962(5): call 0xfffff99e(%rip)
1967(7): lea 0x2dea(%rip),%rcx
196e(7): lea 0x2c3c(%rip),%rdx
1975(3): mov %rax,%rsi
1978(5): mov $0x1,%edi
197d(2): xor %eax,%eax
197f(5): call 0xfffffad1(%rip)
1984(2): xor %esi,%esi
1986(5): mov $0x5,%edi
198b(5): call 0xfffffab5(%rip)
1990(3): test %rax,%rax
1993(2): jz 0x1e(%rip)
1995(7): lea 0x2c23(%rip),%rsi
199c(5): mov $0x3,%edx
19a1(3): mov %rax,%rdi
19a4(5): call 0xfffff8dc(%rip)
19a9(2): test %eax,%eax
19ab(6): jnz 0x10d(%rip)
19b1(7): lea 0x2c0b(%rip),%rsi
19b8(2): xor %edi,%edi
19ba(5): mov $0x5,%edx
19bf(5): call 0xfffff941(%rip)
19c4(7): lea 0x2c52(%rip),%rcx
19cb(7): lea 0x2d86(%rip),%rdx
19d2(3): mov %rax,%rsi
19d5(5): mov $0x1,%edi
19da(2): xor %eax,%eax
19dc(5): call 0xfffffa74(%rip)
19e1(3): cmp %rbx,%r12
19e4(7): lea 0x2b6c(%rip),%rcx
19eb(7): lea 0x2b48(%rip),%rbx
19f2(4): cmove %rcx,%rbx
19f6(7): lea 0x2dcb(%rip),%rsi
19fd(2): xor %edi,%edi
19ff(5): mov $0x5,%edx
1a04(5): call 0xfffff8fc(%rip)
1a09(3): mov %rbx,%rcx
1a0c(3): mov %rax,%rsi
1a0f(3): mov %r12,%rdx
1a12(5): mov $0x1,%edi
1a17(2): xor %eax,%eax
1a19(5): call 0xfffffa37(%rip)
1a1e(5): jmp 0xfffffdd8(%rip)
1a23(5): call 0xfffff8dd(%rip)
1a28(7): lea 0x2d29(%rip),%rcx
1a2f(7): lea 0x2b7b(%rip),%rdx
1a36(3): mov %rax,%rsi
1a39(5): mov $0x1,%edi
1a3e(2): xor %eax,%eax
1a40(5): call 0xfffffa10(%rip)
1a45(2): xor %esi,%esi
1a47(5): mov $0x5,%edi
1a4c(5): call 0xfffff9f4(%rip)
1a51(3): test %rax,%rax
1a54(2): jz 0x1a(%rip)
1a56(7): lea 0x2b62(%rip),%rsi
1a5d(5): mov $0x3,%edx
1a62(3): mov %rax,%rdi
1a65(5): call 0xfffff81b(%rip)
1a6a(2): test %eax,%eax
1a6c(2): jnz 0x45(%rip)
1a6e(7): lea 0x2b4e(%rip),%rsi
1a75(5): mov $0x5,%edx
1a7a(2): xor %edi,%edi
1a7c(7): lea 0x2b9a(%rip),%r12
1a83(7): lea 0x2acd(%rip),%rbx
1a8a(5): call 0xfffff876(%rip)
1a8f(7): lea 0x2b87(%rip),%rcx
1a96(7): lea 0x2cbb(%rip),%rdx
1a9d(3): mov %rax,%rsi
1aa0(5): mov $0x1,%edi
1aa5(2): xor %eax,%eax
1aa7(5): call 0xfffff9a9(%rip)
1aac(5): jmp 0xffffff4a(%rip)
1ab1(7): lea 0x2b65(%rip),%r12
1ab8(7): mov 0x2055c9(%rip),%r13
1abf(7): lea 0x2cba(%rip),%rsi
1ac6(2): xor %edi,%edi
1ac8(5): mov $0x5,%edx
1acd(5): call 0xfffff833(%rip)
1ad2(3): mov %r13,%rsi
1ad5(3): mov %rax,%rdi
1ad8(5): call 0xfffff8c8(%rip)
1add(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1af0(7): mov %rdi,0x2055c1(%rip)
1af7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1b00(7): mov %dil,0x2055a9(%rip)
1b07(1): ret near (%rsp)

"close_stdout" :
1b10(1): push %rbp
1b11(1): push %rbx
1b12(4): sub $0x8,%rsp
1b16(7): mov 0x20556b(%rip),%rdi
1b1d(5): call 0x2713(%rip)
1b22(2): test %eax,%eax
1b24(2): jz 0x18(%rip)
1b26(5): call 0xfffff74a(%rip)
1b2b(7): cmp $0x0,0x20557e(%rip)
1b32(3): mov %rax,%rbx
1b35(2): jz 0x1e(%rip)
1b37(3): cmp $0x20,(%rax)
1b3a(2): jnz 0x19(%rip)
1b3c(7): mov 0x20555d(%rip),%rdi
1b43(5): call 0x26ed(%rip)
1b48(2): test %eax,%eax
1b4a(2): jnz 0x48(%rip)
1b4c(4): add $0x8,%rsp
1b50(1): pop %rbx
1b51(1): pop %rbp
1b52(1): ret near (%rsp)
1b53(7): lea 0x2ca6(%rip),%rsi
1b5a(2): xor %edi,%edi
1b5c(5): mov $0x5,%edx
1b61(5): call 0xfffff79f(%rip)
1b66(7): mov 0x20554b(%rip),%rdi
1b6d(3): mov %rax,%rbp
1b70(3): test %rdi,%rdi
1b73(2): jz 0x2a(%rip)
1b75(5): call 0x1b5b(%rip)
1b7a(2): mov (%rbx),%esi
1b7c(7): lea 0x2c89(%rip),%rdx
1b83(3): mov %rax,%rcx
1b86(3): mov %rbp,%r8
1b89(2): xor %edi,%edi
1b8b(2): xor %eax,%eax
1b8d(5): call 0xfffff8d3(%rip)
1b92(6): mov 0x205480(%rip),%edi
1b98(5): call 0xfffff6f8(%rip)
1b9d(2): mov (%rbx),%esi
1b9f(7): lea 0x2c6a(%rip),%rdx
1ba6(3): mov %rax,%rcx
1ba9(2): xor %edi,%edi
1bab(2): xor %eax,%eax
1bad(5): call 0xfffff8b3(%rip)
1bb2(2): jmp 0xffffffe0(%rip)

"set_program_name" :
1bc0(3): test %rdi,%rdi
1bc3(1): push %rbx
1bc4(2): jz 0x79(%rip)
1bc6(5): mov $0x2f,%esi
1bcb(3): mov %rdi,%rbx
1bce(5): call 0xfffff792(%rip)
1bd3(3): test %rax,%rax
1bd6(2): jz 0x57(%rip)
1bd8(4): lea 0x1(%rax),%r8
1bdc(3): mov %r8,%rdx
1bdf(3): sub %rbx,%rdx
1be2(4): cmp $0x6,%rdx
1be6(2): jle 0x47(%rip)
1be8(4): lea 0xfffffffa(%rax),%rsi
1bec(7): lea 0x2c5d(%rip),%rdi
1bf3(5): mov $0x7,%ecx
1bf8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1bfa(3): setnbe %dl
1bfd(3): sbb $0x0,%dl
1c00(2): test %dl,%dl
1c02(2): jnz 0x2b(%rip)
1c04(7): lea 0x2c4d(%rip),%rdi
1c0b(5): mov $0x3,%ecx
1c10(3): mov %r8,%rsi
1c13(3): mov %r8,%rbx
1c16(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c18(3): setnbe %dl
1c1b(3): sbb $0x0,%dl
1c1e(2): test %dl,%dl
1c20(2): jnz 0xd(%rip)
1c22(4): lea 0x4(%rax),%rbx
1c26(7): mov %rbx,0x205453(%rip)
1c2d(7): mov %rbx,0x20548c(%rip)
1c34(7): mov %rbx,0x20545d(%rip)
1c3b(1): pop %rbx
1c3c(1): ret near (%rsp)
1c3d(7): mov 0x20545c(%rip),%rcx
1c44(7): lea 0x2bcd(%rip),%rdi
1c4b(5): mov $0x37,%edx
1c50(5): mov $0x1,%esi
1c55(5): call 0xfffff84b(%rip)
1c5a(5): call 0xfffff606(%rip)

"gettext_quote.part.1" :
1c60(1): push %rbp
1c61(1): push %rbx
1c62(3): mov %rdi,%rbp
1c65(2): mov %esi,%ebx
1c67(4): sub $0x8,%rsp
1c6b(5): call 0x26a5(%rip)
1c70(3): movzx (%rax),%edx
1c73(3): and $0xdf,%edx
1c76(3): cmp $0x55,%dl
1c79(2): jz 0x77(%rip)
1c7b(3): cmp $0x47,%dl
1c7e(2): jz 0x22(%rip)
1c80(7): lea 0x2be4(%rip),%rax
1c87(7): lea 0x2bdf(%rip),%rdx
1c8e(3): cmp $0x9,%ebx
1c91(4): cmovne %rdx,%rax
1c95(4): add $0x8,%rsp
1c99(1): pop %rbx
1c9a(1): pop %rbp
1c9b(1): ret near (%rsp)
1c9c(4): nop 0x0(%rax)
1ca0(4): movzx 0x1(%rax),%edx
1ca4(3): and $0xdf,%edx
1ca7(3): cmp $0x42,%dl
1caa(2): jnz 0xffffffd6(%rip)
1cac(4): cmp $0x31,0x2(%rax)
1cb0(2): jnz 0xffffffd0(%rip)
1cb2(4): cmp $0x38,0x3(%rax)
1cb6(2): jnz 0xffffffca(%rip)
1cb8(4): cmp $0x30,0x4(%rax)
1cbc(2): jnz 0xffffffc4(%rip)
1cbe(4): cmp $0x33,0x5(%rax)
1cc2(2): jnz 0xffffffbe(%rip)
1cc4(4): cmp $0x30,0x6(%rax)
1cc8(2): jnz 0xffffffb8(%rip)
1cca(4): cmp $0x0,0x7(%rax)
1cce(2): jnz 0xffffffb2(%rip)
1cd0(4): cmp $0x60,0x0(%rbp)
1cd4(7): lea 0x2b89(%rip),%rax
1cdb(7): lea 0x2b86(%rip),%rdx
1ce2(4): cmovne %rdx,%rax
1ce6(4): add $0x8,%rsp
1cea(1): pop %rbx
1ceb(1): pop %rbp
1cec(1): ret near (%rsp)
1ced(3): nop (%rax)
1cf0(4): movzx 0x1(%rax),%edx
1cf4(3): and $0xdf,%edx
1cf7(3): cmp $0x54,%dl
1cfa(2): jnz 0xffffff86(%rip)
1cfc(4): movzx 0x2(%rax),%edx
1d00(3): and $0xdf,%edx
1d03(3): cmp $0x46,%dl
1d06(6): jnz 0xffffff7a(%rip)
1d0c(4): cmp $0x2d,0x3(%rax)
1d10(6): jnz 0xffffff70(%rip)
1d16(4): cmp $0x38,0x4(%rax)
1d1a(6): jnz 0xffffff66(%rip)
1d20(4): cmp $0x0,0x5(%rax)
1d24(6): jnz 0xffffff5c(%rip)
1d2a(4): cmp $0x60,0x0(%rbp)
1d2e(7): lea 0x2b27(%rip),%rax
1d35(7): lea 0x2b24(%rip),%rdx
1d3c(4): cmovne %rdx,%rax
1d40(4): add $0x8,%rsp
1d44(1): pop %rbx
1d45(1): pop %rbp
1d46(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1d50(2): push %r15
1d52(2): push %r14
1d54(3): mov %r8d,%r15d
1d57(2): push %r13
1d59(2): push %r12
1d5b(3): mov %rdi,%r14
1d5e(1): push %rbp
1d5f(1): push %rbx
1d60(3): mov %r9d,%ebx
1d63(3): mov %rsi,%r13
1d66(3): mov %rcx,%rbp
1d69(3): and $0x2,%ebx
1d6c(7): sub $0xb8,%rsp
1d73(8): mov 0xf0(%rsp),%rax
1d7b(5): mov %rdx,0x10(%rsp)
1d80(5): mov %r8d,0x8(%rsp)
1d85(5): mov %r9d,0x78(%rsp)
1d8a(5): mov %rax,0x20(%rsp)
1d8f(8): mov 0xf8(%rsp),%rax
1d97(5): mov %rax,0x68(%rsp)
1d9c(8): mov 0x100(%rsp),%rax
1da4(5): mov %rax,0x60(%rsp)
1da9(9): mov $0x28,%rax
1db2(8): mov %rax,0xa8(%rsp)
1dba(2): xor %eax,%eax
1dbc(5): call 0xfffff554(%rip)
1dc1(4): cmp $0xa,%r15d
1dc5(5): mov %rax,0x58(%rsp)
1dca(6): jnbe 0x11b5(%rip)
1dd0(7): lea 0x2ae9(%rip),%rcx
1dd7(3): mov %r15d,%edx
1dda(4): movsxd 0x0(%rcx,%rdx,4),%rax
1dde(3): add %rcx,%rax
1de1(2): jmp %rax
1de3(5): mov $0x1,0xe(%rsp)
1de8(5): mov $0x0,0x7c(%rsp)
1ded(3): xor %r12d,%r12d
1df0(9): mov $0x0,0x50(%rsp)
1df9(5): mov $0x1,0xf(%rsp)
1dfe(5): mov $0x0,0xd(%rsp)
1e03(7): lea 0x2a63(%rip),%rax
1e0a(9): mov $0x1,0x18(%rsp)
1e13(3): xor %r15d,%r15d
1e16(8): mov $0x2,0x8(%rsp)
1e1e(5): mov %rax,0x48(%rsp)
1e23(3): xor %r11d,%r11d
1e26(3): mov %rbp,%rax
1e29(3): mov %r12d,%r8d
1e2c(3): mov %r11,%rbp
1e2f(3): mov %rax,%r11
1e32(6): nop 0x0(%rax,%rax,1)
1e38(3): cmp %rbp,%r11
1e3b(4): setnz %r12b
1e3f(4): cmp $0xffffffff,%r11
1e43(2): jnz 0xf(%rip)
1e45(5): mov 0x10(%rsp),%rax
1e4a(4): cmp $0x0,0x0(%rax,%rbp,1)
1e4e(4): setnz %r12b
1e52(3): test %r12b,%r12b
1e55(6): jz 0x65b(%rip)
1e5b(5): cmp $0x2,0x8(%rsp)
1e60(5): mov 0x10(%rsp),%rdi
1e65(4): lea 0x0(%rdi,%rbp,1),%r9
1e69(3): setnz %al
1e6c(4): and 0xd(%rsp),%al
1e70(3): mov %eax,%r10d
1e73(6): jz 0xad(%rip)
1e79(5): mov 0x18(%rsp),%rax
1e7e(3): test %rax,%rax
1e81(6): jz 0x42f(%rip)
1e87(4): cmp $0xffffffff,%r11
1e8b(5): lea 0x0(%rbp,%rax,1),%rbx
1e90(2): jnz 0x30(%rip)
1e92(4): cmp $0x1,%rax
1e96(2): jbe 0x2a(%rip)
1e98(5): mov %r8b,0x38(%rsp)
1e9d(5): mov %r10b,0x30(%rsp)
1ea2(5): mov %r9,0x28(%rsp)
1ea7(5): call 0xfffff479(%rip)
1eac(6): movzx 0x38(%rsp),%r8d
1eb2(6): movzx 0x30(%rsp),%r10d
1eb8(3): mov %rax,%r11
1ebb(5): mov 0x28(%rsp),%r9
1ec0(3): cmp %r11,%rbx
1ec3(5): mov %r10b,0x28(%rsp)
1ec8(6): jnbe 0x5b8(%rip)
1ece(5): mov 0x18(%rsp),%rdx
1ed3(5): mov 0x48(%rsp),%rsi
1ed8(3): mov %r9,%rdi
1edb(5): mov %r11,0x40(%rsp)
1ee0(5): mov %r8b,0x38(%rsp)
1ee5(5): mov %r9,0x30(%rsp)
1eea(5): call 0xfffff4a6(%rip)
1eef(2): test %eax,%eax
1ef1(5): mov 0x30(%rsp),%r9
1ef6(6): movzx 0x38(%rsp),%r8d
1efc(5): mov 0x40(%rsp),%r11
1f01(6): jnz 0x57f(%rip)
1f07(5): cmp $0x0,0xf(%rsp)
1f0c(6): movzx 0x28(%rsp),%r10d
1f12(6): jnz 0xf83(%rip)
1f18(8): nop 0x0(%rax,%rax,1)
1f20(4): movzx (%r9),%ebx
1f24(3): cmp $0x7e,%bl
1f27(6): jnbe 0x321(%rip)
1f2d(7): lea 0x29b8(%rip),%rcx
1f34(3): movzx %bl,%edx
1f37(4): movsxd 0x0(%rcx,%rdx,4),%rax
1f3b(3): add %rcx,%rax
1f3e(2): jmp %rax
1f40(3): xor %r10d,%r10d
1f43(4): cmp $0x1,%r11
1f47(3): setnz %al
1f4a(4): cmp $0xffffffff,%r11
1f4e(2): jnz 0xe(%rip)
1f50(5): mov 0x10(%rsp),%rax
1f55(4): cmp $0x0,0x1(%rax)
1f59(3): setnz %al
1f5c(5): cmp $0x2,0x8(%rsp)
1f61(3): setz %dl
1f64(2): test %al,%al
1f66(6): jz 0x252(%rip)
1f6c(3): xor %r12d,%r12d
1f6f(2): xor %eax,%eax
1f71(7): nop 0x0(%rax)
1f78(5): cmp $0x1,0xd(%rsp)
1f7d(6): jnz 0x115(%rip)
1f83(2): test %dl,%dl
1f85(6): jnz 0x10d(%rip)
1f8b(5): mov 0x20(%rsp),%rsi
1f90(3): test %rsi,%rsi
1f93(2): jz 0x16(%rip)
1f95(2): mov %ebx,%edx
1f97(3): shr $0x5,%dl
1f9a(3): movzx %dl,%edx
1f9d(3): mov 0x0(%rsi,%rdx,4),%edx
1fa0(3): bt %ebx,%edx
1fa3(6): jb 0x150(%rip)
1fa9(3): test %r10b,%r10b
1fac(6): jnz 0x147(%rip)
1fb2(3): xor $0x1,%eax
1fb5(4): add $0x1,%rbp
1fb9(3): and %r8d,%eax
1fbc(2): test %al,%al
1fbe(2): jz 0x22(%rip)
1fc0(3): cmp %r15,%r13
1fc3(2): jbe 0x7(%rip)
1fc5(5): mov $0x27,0x0(%r14,%r15,1)
1fca(4): lea 0x1(%r15),%rax
1fce(3): cmp %rax,%r13
1fd1(2): jbe 0x8(%rip)
1fd3(6): mov $0x27,0x1(%r14,%r15,1)
1fd9(4): add $0x2,%r15
1fdd(3): xor %r8d,%r8d
1fe0(3): cmp %r13,%r15
1fe3(2): jnb 0x6(%rip)
1fe5(4): mov %bl,0x0(%r14,%r15,1)
1fe9(5): movzx 0xe(%rsp),%edi
1fee(4): add $0x1,%r15
1ff2(5): mov $0x0,%eax
1ff7(3): test %r12b,%r12b
1ffa(3): cmove %eax,%edi
1ffd(5): mov %dil,0xe(%rsp)
2002(5): jmp 0xfffffe36(%rip)
2007(9): nop 0x0(%rax,%rax,1)
2010(3): xor %r10d,%r10d
2013(4): mov 0x8(%rsp),%eax
2017(3): cmp $0x2,%eax
201a(6): jz 0x5be(%rip)
2020(3): cmp $0x5,%eax
2023(6): jz 0x575(%rip)
2029(3): cmp $0x2,%eax
202c(5): mov $0x3f,%ebx
2031(3): setz %dl
2034(3): xor %r12d,%r12d
2037(2): xor %eax,%eax
2039(5): jmp 0xffffff3f(%rip)
203e(2): nop 
2040(3): xor %r10d,%r10d
2043(5): cmp $0x2,0x8(%rsp)
2048(6): jz 0x508(%rip)
204e(5): mov %r12b,0x7c(%rsp)
2053(2): xor %edx,%edx
2055(2): xor %eax,%eax
2057(5): mov $0x27,%ebx
205c(5): jmp 0xffffff1c(%rip)
2061(7): nop 0x0(%rax)
2068(5): mov $0x9,%edx
206d(5): mov $0x74,%ebx
2072(5): cmp $0x2,0x8(%rsp)
2077(3): setz %al
207a(4): and 0xf(%rsp),%al
207e(6): jnz 0x150(%rip)
2084(5): cmp $0x0,0xd(%rsp)
2089(2): jnz 0x67(%rip)
208b(2): mov %edx,%ebx
208d(3): xor %r12d,%r12d
2090(2): xor %eax,%eax
2092(5): cmp $0x0,0xf(%rsp)
2097(6): jnz 0xfffffef4(%rip)
209d(5): jmp 0xffffff0c(%rip)
20a2(6): nop 0x0(%rax,%rax,1)
20a8(5): mov $0x8,%edx
20ad(5): mov $0x62,%ebx
20b2(2): jmp 0xffffffd2(%rip)
20b4(4): nop 0x0(%rax)
20b8(5): cmp $0x2,0x8(%rsp)
20bd(6): jz 0x3d3(%rip)
20c3(5): cmp $0x0,0xd(%rsp)
20c8(6): jz 0x218(%rip)
20ce(5): cmp $0x0,0xf(%rsp)
20d3(6): jz 0x20d(%rip)
20d9(6): cmp $0x0,0x18(%rsp)
20df(6): jnz 0x3bc(%rip)
20e5(5): mov $0x5c,%ebx
20ea(6): nop 0x0(%rax,%rax,1)
20f0(3): xor %r12d,%r12d
20f3(5): cmp $0x2,0x8(%rsp)
20f8(3): setz %dl
20fb(5): cmp $0x0,0xf(%rsp)
2100(2): mov %edx,%eax
2102(6): jnz 0x856(%rip)
2108(3): mov %r8d,%eax
210b(3): xor $0x1,%eax
210e(2): and %dl,%al
2110(2): jz 0x31(%rip)
2112(3): cmp %r15,%r13
2115(2): jbe 0x7(%rip)
2117(5): mov $0x27,0x0(%r14,%r15,1)
211c(4): lea 0x1(%r15),%rdx
2120(3): cmp %rdx,%r13
2123(2): jbe 0x8(%rip)
2125(6): mov $0x24,0x1(%r14,%r15,1)
212b(4): lea 0x2(%r15),%rdx
212f(3): cmp %rdx,%r13
2132(2): jbe 0x8(%rip)
2134(6): mov $0x27,0x2(%r14,%r15,1)
213a(4): add $0x3,%r15
213e(3): mov %eax,%r8d
2141(3): cmp %r15,%r13
2144(2): jbe 0x7(%rip)
2146(5): mov $0x5c,0x0(%r14,%r15,1)
214b(4): add $0x1,%r15
214f(4): add $0x1,%rbp
2153(5): jmp 0xfffffe8d(%rip)
2158(8): nop 0x0(%rax,%rax,1)
2160(5): cmp $0x0,0xd(%rsp)
2165(6): jnz 0x1ce(%rip)
216b(2): xor %edx,%edx
216d(5): test $0x1,0x78(%rsp)
2172(6): jz 0xffffff19(%rip)
2178(4): add $0x1,%rbp
217c(5): jmp 0xfffffcbc(%rip)
2181(7): nop 0x0(%rax)
2188(5): cmp $0x2,0x8(%rsp)
218d(3): setz %dl
2190(2): xor %eax,%eax
2192(5): jmp 0xfffffde6(%rip)
2197(9): nop 0x0(%rax,%rax,1)
21a0(5): mov $0x7,%edx
21a5(5): mov $0x61,%ebx
21aa(5): jmp 0xfffffeda(%rip)
21af(1): nop 
21b0(5): cmp $0x2,0x8(%rsp)
21b5(3): setz %dl
21b8(3): test %rbp,%rbp
21bb(6): jnz 0xfffffdb1(%rip)
21c1(5): movzx 0xf(%rsp),%eax
21c6(2): and %dl,%al
21c8(6): jz 0xfffffdb0(%rip)
21ce(3): mov %r11,%rbp
21d1(8): mov $0x2,0x8(%rsp)
21d9(5): jmp 0x700(%rip)
21de(2): nop 
21e0(5): cmp $0x2,0x8(%rsp)
21e5(3): setz %dl
21e8(3): xor %r12d,%r12d
21eb(2): jmp 0xffffffd6(%rip)
21ed(3): nop (%rax)
21f0(5): cmp $0x2,0x8(%rsp)
21f5(5): mov $0x20,%ebx
21fa(3): setz %dl
21fd(2): jmp 0xffffffc4(%rip)
21ff(1): nop 
2200(5): mov $0xd,%edx
2205(5): mov $0x72,%ebx
220a(5): jmp 0xfffffe68(%rip)
220f(1): nop 
2210(5): mov $0xc,%edx
2215(5): mov $0x66,%ebx
221a(5): jmp 0xfffffe6a(%rip)
221f(1): nop 
2220(5): mov $0xb,%edx
2225(5): mov $0x76,%ebx
222a(5): jmp 0xfffffe5a(%rip)
222f(1): nop 
2230(5): mov $0xa,%edx
2235(5): mov $0x6e,%ebx
223a(5): jmp 0xfffffe38(%rip)
223f(1): nop 
2240(3): xor %r10d,%r10d
2243(5): nop 0x0(%rax,%rax,1)
2248(6): cmp $0x1,0x58(%rsp)
224e(6): jnz 0x3aa(%rip)
2254(5): mov %r11,0x38(%rsp)
2259(5): mov %r8b,0x30(%rsp)
225e(5): mov %r10b,0x28(%rsp)
2263(5): call 0xfffff27d(%rip)
2268(3): mov (%rax),%rcx
226b(3): movzx %bl,%edx
226e(6): movzx 0x28(%rsp),%r10d
2274(6): movzx 0x30(%rsp),%r8d
227a(5): mov 0x38(%rsp),%r11
227f(5): mov $0x1,%edi
2284(4): movzx 0x0(%rcx,%rdx,2),%eax
2288(4): and $0x4000,%ax
228c(4): setnz %r12b
2290(3): setz %al
2293(4): and 0xd(%rsp),%al
2297(2): test %al,%al
2299(6): jnz 0x998(%rip)
229f(5): cmp $0x2,0x8(%rsp)
22a4(3): setz %dl
22a7(5): jmp 0xfffffcd1(%rip)
22ac(4): nop 0x0(%rax)
22b0(4): movzx (%r9),%ebx
22b4(3): cmp $0x7e,%bl
22b7(2): jnbe 0xffffff89(%rip)
22b9(7): lea 0x2828(%rip),%rcx
22c0(3): movzx %bl,%edx
22c3(4): movsxd 0x0(%rcx,%rdx,4),%rax
22c7(3): add %rcx,%rax
22ca(2): jmp %rax
22cc(4): nop 0x0(%rax)
22d0(3): xor %r10d,%r10d
22d3(5): cmp $0x0,0xd(%rsp)
22d8(6): jnz 0xfffffdf6(%rip)
22de(2): nop 
22e0(5): mov $0x5c,%edx
22e5(5): mov $0x5c,%ebx
22ea(5): jmp 0xfffffd9a(%rip)
22ef(1): nop 
22f0(5): mov $0xc,%edx
22f5(3): xor %r10d,%r10d
22f8(5): mov $0x66,%ebx
22fd(5): jmp 0xfffffd87(%rip)
2302(6): nop 0x0(%rax,%rax,1)
2308(5): mov $0xa,%edx
230d(3): xor %r10d,%r10d
2310(5): mov $0x6e,%ebx
2315(5): jmp 0xfffffd5d(%rip)
231a(6): nop 0x0(%rax,%rax,1)
2320(5): mov $0x61,%ebx
2325(5): jmp 0xfffffdcb(%rip)
232a(6): nop 0x0(%rax,%rax,1)
2330(3): xor %r10d,%r10d
2333(5): cmp $0x2,0x8(%rsp)
2338(3): setz %dl
233b(5): cmp $0x0,0xf(%rsp)
2340(6): jnz 0xb9a(%rip)
2346(3): mov %r8d,%eax
2349(3): mov %r15,%rcx
234c(3): xor $0x1,%eax
234f(2): and %dl,%al
2351(2): jz 0x2f(%rip)
2353(3): cmp %r15,%r13
2356(2): jbe 0x7(%rip)
2358(5): mov $0x27,0x0(%r14,%r15,1)
235d(4): lea 0x1(%r15),%rcx
2361(3): cmp %rcx,%r13
2364(2): jbe 0x8(%rip)
2366(6): mov $0x24,0x1(%r14,%r15,1)
236c(4): lea 0x2(%r15),%rcx
2370(3): cmp %rcx,%r13
2373(6): jnbe 0x636(%rip)
2379(4): lea 0x3(%r15),%rcx
237d(3): mov %eax,%r8d
2380(3): cmp %rcx,%r13
2383(2): jbe 0x7(%rip)
2385(5): mov $0x5c,0x0(%r14,%rcx,1)
238a(5): cmp $0x2,0x8(%rsp)
238f(4): lea 0x1(%rcx),%r15
2393(6): jz 0x606(%rip)
2399(4): lea 0x1(%rbp),%rax
239d(3): cmp %r11,%rax
23a0(2): jnb 0x1b(%rip)
23a2(5): mov 0x10(%rsp),%rax
23a7(5): movzx 0x1(%rax,%rbp,1),%eax
23ac(4): mov %al,0x28(%rsp)
23b0(3): sub $0x30,%eax
23b3(2): cmp $0x9,%al
23b5(6): jbe 0x834(%rip)
23bb(3): mov %r12d,%eax
23be(5): mov $0x30,%ebx
23c3(3): xor %r12d,%r12d
23c6(5): jmp 0xfffffbb2(%rip)
23cb(5): nop 0x0(%rax,%rax,1)
23d0(5): cmp $0x2,0x8(%rsp)
23d5(3): mov %r10d,%r12d
23d8(3): setz %dl
23db(3): xor %r10d,%r10d
23de(2): xor %eax,%eax
23e0(5): jmp 0xfffffb98(%rip)
23e5(3): nop (%rax)
23e8(5): cmp $0x2,0x8(%rsp)
23ed(3): setz %dl
23f0(3): xor %r10d,%r10d
23f3(5): jmp 0xfffffdc5(%rip)
23f8(8): nop 0x0(%rax,%rax,1)
2400(5): cmp $0x2,0x8(%rsp)
2405(3): setz %dl
2408(3): xor %r10d,%r10d
240b(3): xor %r12d,%r12d
240e(5): jmp 0xfffffdb3(%rip)
2413(5): nop 0x0(%rax,%rax,1)
2418(5): cmp $0x2,0x8(%rsp)
241d(3): mov %r10d,%r12d
2420(5): mov $0x20,%ebx
2425(3): setz %dl
2428(3): xor %r10d,%r10d
242b(5): jmp 0xfffffd96(%rip)
2430(5): mov $0xd,%edx
2435(3): xor %r10d,%r10d
2438(5): mov $0x72,%ebx
243d(5): jmp 0xfffffc35(%rip)
2442(6): nop 0x0(%rax,%rax,1)
2448(5): mov $0x76,%ebx
244d(5): jmp 0xfffffca3(%rip)
2452(6): nop 0x0(%rax,%rax,1)
2458(5): mov $0x9,%edx
245d(3): xor %r10d,%r10d
2460(5): mov $0x74,%ebx
2465(5): jmp 0xfffffc0d(%rip)
246a(6): nop 0x0(%rax,%rax,1)
2470(5): mov $0x62,%ebx
2475(5): jmp 0xfffffc7b(%rip)
247a(6): nop 0x0(%rax,%rax,1)
2480(3): xor %r10d,%r10d
2483(5): jmp 0xfffffa9d(%rip)
2488(8): nop 0x0(%rax,%rax,1)
2490(5): cmp $0x0,0xf(%rsp)
2495(6): jnz 0x96b(%rip)
249b(4): add $0x1,%rbp
249f(3): mov %r8d,%eax
24a2(3): xor %r12d,%r12d
24a5(5): mov $0x5c,%ebx
24aa(5): jmp 0xfffffb12(%rip)
24af(1): nop 
24b0(5): cmp $0x2,0x8(%rsp)
24b5(5): movzx 0xf(%rsp),%ebx
24ba(3): mov %r8d,%r12d
24bd(3): mov %r11,%rbp
24c0(3): setz %dl
24c3(2): mov %ebx,%eax
24c5(3): test %r15,%r15
24c8(3): setz %cl
24cb(2): and %edx,%eax
24cd(2): and %cl,%al
24cf(6): jnz 0xa67(%rip)
24d5(2): mov %ebx,%eax
24d7(3): xor $0x1,%eax
24da(2): and %al,%dl
24dc(6): jz 0x970(%rip)
24e2(5): cmp $0x0,0x7c(%rsp)
24e7(6): jz 0x963(%rip)
24ed(5): cmp $0x0,0xe(%rsp)
24f2(6): jnz 0x9fb(%rip)
24f8(3): test %r13,%r13
24fb(3): setz %al
24fe(6): cmp $0x0,0x50(%rsp)
2504(3): setnz %dl
2507(2): and %dl,%al
2509(6): jz 0xa23(%rip)
250f(5): mov 0x50(%rsp),%r13
2514(7): lea 0x2352(%rip),%rbx
251b(4): mov $0x27,(%r14)
251f(8): mov $0x2,0x8(%rsp)
2527(6): mov $0x1,%r15d
252d(9): mov $0x1,0x18(%rsp)
2536(5): mov $0x0,0xf(%rsp)
253b(5): mov %rbx,0x48(%rsp)
2540(4): mov %al,0x7c(%rsp)
2544(5): jmp 0xfffff8df(%rip)
2549(7): nop 0x0(%rax)
2550(5): cmp $0x0,0xf(%rsp)
2555(6): jnz 0x8ab(%rip)
255b(3): test %r13,%r13
255e(6): jz 0x402(%rip)
2564(2): xor %edx,%edx
2566(6): cmp $0x0,0x50(%rsp)
256c(6): jnz 0x3f4(%rip)
2572(5): mov %r13,0x50(%rsp)
2577(4): add $0x3,%r15
257b(2): xor %eax,%eax
257d(5): mov %r12b,0x7c(%rsp)
2582(3): xor %r8d,%r8d
2585(3): mov %rdx,%r13
2588(5): mov $0x27,%ebx
258d(5): jmp 0xfffffa1c(%rip)
2592(6): nop 0x0(%rax,%rax,1)
2598(5): test $0x4,0x78(%rsp)
259d(2): jz 0x23(%rip)
259f(4): lea 0x2(%rbp),%rcx
25a3(3): cmp %r11,%rcx
25a6(2): jnb 0x1a(%rip)
25a8(5): mov 0x10(%rsp),%rax
25ad(5): cmp $0x3f,0x1(%rax,%rbp,1)
25b2(6): jz 0x790(%rip)
25b8(8): nop 0x0(%rax,%rax,1)
25c0(2): xor %edx,%edx
25c2(3): xor %r12d,%r12d
25c5(2): xor %eax,%eax
25c7(5): mov $0x3f,%ebx
25cc(5): jmp 0xfffff9ac(%rip)
25d1(7): nop 0x0(%rax)
25d8(5): cmp $0x0,0xf(%rsp)
25dd(6): jnz 0x823(%rip)
25e3(3): xor %r12d,%r12d
25e6(2): xor %eax,%eax
25e8(5): mov $0x3f,%ebx
25ed(5): jmp 0xfffff9bc(%rip)
25f2(6): nop 0x0(%rax,%rax,1)
25f8(8): lea 0xa0(%rsp),%rax
2600(4): cmp $0xffffffff,%r11
2604(c): mov $0x0,0xa0(%rsp)
2610(5): mov %rax,0x28(%rsp)
2615(2): jnz 0x2f(%rip)
2617(5): mov 0x10(%rsp),%rdi
261c(5): mov %r8b,0x40(%rsp)
2621(5): mov %r10b,0x38(%rsp)
2626(5): mov %r9,0x30(%rsp)
262b(5): call 0xffffecf5(%rip)
2630(6): movzx 0x40(%rsp),%r8d
2636(6): movzx 0x38(%rsp),%r10d
263c(3): mov %rax,%r11
263f(5): mov 0x30(%rsp),%r9
2644(8): lea 0x9c(%rsp),%rax
264c(2): xor %ecx,%ecx
264e(4): mov %bl,0x7e(%rsp)
2652(5): mov %r8b,0x7d(%rsp)
2657(3): mov %rcx,%rbx
265a(8): mov %r9,0x88(%rsp)
2662(5): mov %rax,0x38(%rsp)
2667(5): mov %r10b,0x7f(%rsp)
266c(8): mov %r15,0x80(%rsp)
2674(5): mov %r14,0x40(%rsp)
2679(5): mov %r13,0x70(%rsp)
267e(5): mov %r11,0x30(%rsp)
2683(5): mov 0x10(%rsp),%rax
2688(5): lea 0x0(%rbp,%rbx,1),%r14
268d(5): mov 0x30(%rsp),%rdx
2692(5): mov 0x28(%rsp),%rcx
2697(5): mov 0x38(%rsp),%rdi
269c(4): lea 0x0(%rax,%r14,1),%r13
26a0(3): sub %r14,%rdx
26a3(3): mov %r13,%rsi
26a6(5): call 0x1afa(%rip)
26ab(3): test %rax,%rax
26ae(3): mov %rax,%r15
26b1(2): jz 0x50(%rip)
26b3(4): cmp $0xffffffff,%rax
26b7(6): jz 0x61e(%rip)
26bd(4): cmp $0xfffffffe,%rax
26c1(6): jz 0x5a0(%rip)
26c7(5): cmp $0x2,0x8(%rsp)
26cc(3): setz %al
26cf(4): and 0xf(%rsp),%al
26d3(6): jnz 0x19d(%rip)
26d9(7): mov 0x9c(%rsp),%edi
26e0(5): call 0xffffedf0(%rip)
26e5(5): mov 0x28(%rsp),%rdi
26ea(2): test %eax,%eax
26ec(5): mov $0x0,%eax
26f1(4): cmove %eax,%r12d
26f5(3): add %r15,%rbx
26f8(5): call 0xffffedc8(%rip)
26fd(2): test %eax,%eax
26ff(2): jz 0xffffff84(%rip)
2701(3): mov %r12d,%edx
2704(3): mov %rbx,%rdi
2707(6): movzx 0x7d(%rsp),%r8d
270d(3): xor $0x1,%edx
2710(5): movzx 0x7e(%rsp),%ebx
2715(6): movzx 0x7f(%rsp),%r10d
271b(4): and 0xd(%rsp),%dl
271f(8): mov 0x80(%rsp),%r15
2727(5): mov 0x40(%rsp),%r14
272c(5): mov 0x70(%rsp),%r13
2731(5): mov 0x30(%rsp),%r11
2736(4): cmp $0x1,%rdi
273a(6): jbe 0x601(%rip)
2740(3): mov %rdi,%rcx
2743(2): xor %esi,%esi
2745(6): movzx 0xf(%rsp),%r9d
274b(3): add %rbp,%rcx
274e(5): mov 0x10(%rsp),%rdi
2753(5): jmp 0xbb(%rip)
2758(8): nop 0x0(%rax,%rax,1)
2760(5): cmp $0x2,0x8(%rsp)
2765(3): setz %al
2768(3): test %r9b,%r9b
276b(6): jnz 0x4b5(%rip)
2771(3): mov %r8d,%esi
2774(3): xor $0x1,%esi
2777(3): and %sil,%al
277a(2): jz 0x31(%rip)
277c(3): cmp %r15,%r13
277f(2): jbe 0x7(%rip)
2781(5): mov $0x27,0x0(%r14,%r15,1)
2786(4): lea 0x1(%r15),%rsi
278a(3): cmp %rsi,%r13
278d(2): jbe 0x8(%rip)
278f(6): mov $0x24,0x1(%r14,%r15,1)
2795(4): lea 0x2(%r15),%rsi
2799(3): cmp %rsi,%r13
279c(2): jbe 0x8(%rip)
279e(6): mov $0x27,0x2(%r14,%r15,1)
27a4(4): add $0x3,%r15
27a8(3): mov %eax,%r8d
27ab(3): cmp %r15,%r13
27ae(2): jbe 0x7(%rip)
27b0(5): mov $0x5c,0x0(%r14,%r15,1)
27b5(4): lea 0x1(%r15),%rax
27b9(3): cmp %rax,%r13
27bc(2): jbe 0xf(%rip)
27be(2): mov %ebx,%eax
27c0(3): shr $0x6,%al
27c3(3): add $0x30,%eax
27c6(5): mov %al,0x1(%r14,%r15,1)
27cb(4): lea 0x2(%r15),%rax
27cf(3): cmp %rax,%r13
27d2(2): jbe 0x12(%rip)
27d4(2): mov %ebx,%eax
27d6(3): shr $0x3,%al
27d9(3): and $0x7,%eax
27dc(3): add $0x30,%eax
27df(5): mov %al,0x2(%r14,%r15,1)
27e4(3): and $0x7,%ebx
27e7(4): add $0x1,%rbp
27eb(4): add $0x3,%r15
27ef(3): add $0x30,%ebx
27f2(3): cmp %rcx,%rbp
27f5(6): jnb 0xfffff7eb(%rip)
27fb(2): mov %edx,%esi
27fd(3): cmp %r15,%r13
2800(2): jbe 0x6(%rip)
2802(4): mov %bl,0x0(%r14,%r15,1)
2806(4): movzx 0x0(%rdi,%rbp,1),%ebx
280a(4): add $0x1,%r15
280e(2): test %dl,%dl
2810(6): jnz 0xffffff50(%rip)
2816(2): mov %esi,%eax
2818(3): xor $0x1,%eax
281b(3): and %r8d,%eax
281e(3): test %r10b,%r10b
2821(2): jz 0x10(%rip)
2823(3): cmp %r15,%r13
2826(2): jbe 0x7(%rip)
2828(5): mov $0x5c,0x0(%r14,%r15,1)
282d(4): add $0x1,%r15
2831(4): add $0x1,%rbp
2835(3): cmp %rcx,%rbp
2838(6): jnb 0xfffff784(%rip)
283e(2): test %al,%al
2840(6): jz 0x3fe(%rip)
2846(3): cmp %r15,%r13
2849(2): jbe 0x7(%rip)
284b(5): mov $0x27,0x0(%r14,%r15,1)
2850(4): lea 0x1(%r15),%rax
2854(3): cmp %rax,%r13
2857(2): jbe 0x8(%rip)
2859(6): mov $0x27,0x1(%r14,%r15,1)
285f(4): add $0x2,%r15
2863(3): xor %r10d,%r10d
2866(3): xor %r8d,%r8d
2869(2): jmp 0xffffff94(%rip)
286b(5): nop 0x0(%rax,%rax,1)
2870(4): cmp $0x1,%r15
2874(6): jz 0xfffffe65(%rip)
287a(5): mov 0x10(%rsp),%rdi
287f(4): lea 0x0(%rdi,%r15,1),%rcx
2883(5): lea 0x1(%rdi,%r14,1),%rdx
2888(4): lea 0x0(%rcx,%r14,1),%r8
288c(2): jmp 0x11(%rip)
288e(2): nop 
2890(4): add $0x1,%rdx
2894(3): cmp %rdx,%r8
2897(6): jz 0xfffffe42(%rip)
289d(3): movzx (%rdx),%ecx
28a0(3): sub $0x5b,%ecx
28a3(3): cmp $0x21,%cl
28a6(2): jnbe 0xffffffea(%rip)
28a8(5): mov $0x1,%esi
28ad(3): shl/sal %cl,%rsi
28b0(3): mov %rsi,%rcx
28b3(a): mov $0x8589934635,%rsi
28bd(3): test %rsi,%rcx
28c0(2): jz 0xffffffd0(%rip)
28c2(5): mov 0x40(%rsp),%r14
28c7(5): mov 0x70(%rsp),%r13
28cc(5): mov 0x30(%rsp),%rbp
28d1(8): mov $0x2,0x8(%rsp)
28d9(5): cmp $0x0,0xd(%rsp)
28de(2): jz 0x12(%rip)
28e0(2): test %al,%al
28e2(5): mov $0x4,%eax
28e7(5): cmove 0x8(%rsp),%eax
28ec(4): mov %eax,0x8(%rsp)
28f0(4): sub $0x8,%rsp
28f4(3): mov %rbp,%rcx
28f7(3): mov %r13,%rsi
28fa(4): push 0x68(%rsp)
28fe(4): push 0x78(%rsp)
2902(3): mov %r14,%rdi
2905(2): push $0x0
2907(8): mov 0x98(%rsp),%r9d
290f(5): mov 0x28(%rsp),%r8d
2914(5): mov 0x30(%rsp),%rdx
2919(4): and $0xfd,%r9d
291d(5): call 0xfffff433(%rip)
2922(4): add $0x20,%rsp
2926(3): mov %rax,%r15
2929(8): mov 0xa8(%rsp),%rbx
2931(9): xor $0x28,%rbx
293a(3): mov %r15,%rax
293d(6): jnz 0x606(%rip)
2943(7): add $0xb8,%rsp
294a(1): pop %rbx
294b(1): pop %rbp
294c(2): pop %r12
294e(2): pop %r13
2950(2): pop %r14
2952(2): pop %r15
2954(1): ret near (%rsp)
2955(3): nop (%rax)
2958(3): mov %r11,%rbp
295b(5): jmp 0xffffff7e(%rip)
2960(3): cmp %r15,%r13
2963(2): jbe 0x7(%rip)
2965(5): mov $0x27,0x0(%r14,%r15,1)
296a(4): lea 0x1(%r15),%rax
296e(3): cmp %rax,%r13
2971(2): jbe 0x8(%rip)
2973(6): mov $0x5c,0x1(%r14,%r15,1)
2979(4): lea 0x2(%r15),%rax
297d(3): cmp %rax,%r13
2980(6): jbe 0x5f2(%rip)
2986(3): mov %r13,%rdx
2989(6): mov $0x27,0x2(%r14,%r15,1)
298f(5): mov 0x50(%rsp),%r13
2994(5): jmp 0xfffffbde(%rip)
2999(3): mov %r12d,%eax
299c(5): mov $0x30,%ebx
29a1(3): xor %r12d,%r12d
29a4(5): jmp 0xfffff605(%rip)
29a9(6): mov $0x27,0x2(%r14,%r15,1)
29af(5): jmp 0xfffff9ca(%rip)
29b4(2): test %ebx,%ebx
29b6(6): jnz 0xfffff42d(%rip)
29bc(5): mov $0x1,0xd(%rsp)
29c1(3): test %r13,%r13
29c4(6): jnz 0x596(%rip)
29ca(7): lea 0x1e9c(%rip),%rax
29d1(9): mov $0x0,0x50(%rsp)
29da(5): mov $0x1,0xe(%rsp)
29df(5): mov $0x0,0x7c(%rsp)
29e4(3): xor %r12d,%r12d
29e7(5): mov $0x0,0xf(%rsp)
29ec(9): mov $0x1,0x18(%rsp)
29f5(5): mov %rax,0x48(%rsp)
29fa(6): mov $0x1,%r15d
2a00(8): mov $0x2,0x8(%rsp)
2a08(5): jmp 0xfffff41b(%rip)
2a0d(3): nop (%rax)
2a10(2): test %ebx,%ebx
2a12(6): jnz 0x3fb(%rip)
2a18(3): test %r13,%r13
2a1b(6): jz 0x22b(%rip)
2a21(4): mov $0x22,(%r14)
2a25(5): mov $0x1,0xe(%rsp)
2a2a(3): xor %r12d,%r12d
2a2d(5): mov $0x0,0x7c(%rsp)
2a32(9): mov $0x0,0x50(%rsp)
2a3b(7): lea 0x1e29(%rip),%rax
2a42(5): mov $0x0,0xf(%rsp)
2a47(5): mov $0x1,0xd(%rsp)
2a4c(9): mov $0x1,0x18(%rsp)
2a55(6): mov $0x1,%r15d
2a5b(5): mov %rax,0x48(%rsp)
2a60(5): jmp 0xfffff3c3(%rip)
2a65(7): lea 0x1dff(%rip),%rax
2a6c(5): mov $0x1,0xe(%rsp)
2a71(5): mov $0x0,0x7c(%rsp)
2a76(3): xor %r12d,%r12d
2a79(9): mov $0x0,0x50(%rsp)
2a82(5): mov $0x1,0xf(%rsp)
2a87(5): mov $0x1,0xd(%rsp)
2a8c(9): mov $0x1,0x18(%rsp)
2a95(3): xor %r15d,%r15d
2a98(5): mov %rax,0x48(%rsp)
2a9d(8): mov $0x5,0x8(%rsp)
2aa5(5): jmp 0xfffff37e(%rip)
2aaa(5): mov $0x1,0xe(%rsp)
2aaf(5): mov $0x0,0x7c(%rsp)
2ab4(3): xor %r12d,%r12d
2ab7(9): mov $0x0,0x50(%rsp)
2ac0(5): mov $0x0,0xf(%rsp)
2ac5(3): xor %r15d,%r15d
2ac8(5): mov $0x1,0xd(%rsp)
2acd(9): mov $0x0,0x18(%rsp)
2ad6(9): mov $0x0,0x48(%rsp)
2adf(5): jmp 0xfffff344(%rip)
2ae4(5): cmp $0xa,0x8(%rsp)
2ae9(2): jz 0x58(%rip)
2aeb(7): lea 0x1d7d(%rip),%rsi
2af2(2): xor %edi,%edi
2af4(5): mov $0x5,%edx
2af9(5): call 0xffffe807(%rip)
2afe(3): mov %rax,%rcx
2b01(5): mov %rax,0x68(%rsp)
2b06(7): lea 0x1d62(%rip),%rax
2b0d(3): cmp %rax,%rcx
2b10(6): jz 0x39e(%rip)
2b16(7): lea 0x1d50(%rip),%rsi
2b1d(2): xor %edi,%edi
2b1f(5): mov $0x5,%edx
2b24(5): call 0xffffe7dc(%rip)
2b29(3): mov %rax,%rcx
2b2c(5): mov %rax,0x60(%rsp)
2b31(7): lea 0x1d35(%rip),%rax
2b38(3): cmp %rax,%rcx
2b3b(6): jz 0x389(%rip)
2b41(3): xor %r15d,%r15d
2b44(2): test %ebx,%ebx
2b46(6): jz 0x1c7(%rip)
2b4c(2): test %ebx,%ebx
2b4e(5): mov 0x60(%rsp),%rbx
2b53(5): setnz 0xf(%rsp)
2b58(3): xor %r12d,%r12d
2b5b(3): mov %rbx,%rdi
2b5e(5): call 0xffffe7c2(%rip)
2b63(5): mov %rbx,0x48(%rsp)
2b68(5): mov %rax,0x18(%rsp)
2b6d(5): mov $0x1,0xe(%rsp)
2b72(5): mov $0x0,0x7c(%rsp)
2b77(9): mov $0x0,0x50(%rsp)
2b80(5): mov $0x1,0xd(%rsp)
2b85(5): jmp 0xfffff29e(%rip)
2b8a(5): mov $0x1,0xe(%rsp)
2b8f(5): mov $0x0,0x7c(%rsp)
2b94(3): xor %r12d,%r12d
2b97(9): mov $0x0,0x50(%rsp)
2ba0(5): mov $0x0,0xf(%rsp)
2ba5(3): xor %r15d,%r15d
2ba8(5): mov $0x0,0xd(%rsp)
2bad(9): mov $0x0,0x18(%rsp)
2bb6(9): mov $0x0,0x48(%rsp)
2bbf(5): jmp 0xfffff264(%rip)
2bc4(5): mov $0x1,0xe(%rsp)
2bc9(5): mov $0x0,0x7c(%rsp)
2bce(3): xor %r12d,%r12d
2bd1(9): mov $0x0,0x50(%rsp)
2bda(5): mov $0x1,0xf(%rsp)
2bdf(5): mov $0x1,0xd(%rsp)
2be4(5): jmp 0xfffff21f(%rip)
2be9(3): cmp %r15,%r13
2bec(2): jbe 0x7(%rip)
2bee(5): mov $0x30,0x0(%r14,%r15,1)
2bf3(4): lea 0x2(%rcx),%rax
2bf7(3): cmp %rax,%r13
2bfa(2): jbe 0x8(%rip)
2bfc(6): mov $0x30,0x2(%r14,%rcx,1)
2c02(3): mov %r12d,%eax
2c05(4): lea 0x3(%rcx),%r15
2c09(3): xor %r12d,%r12d
2c0c(5): mov $0x30,%ebx
2c11(5): jmp 0xfffff367(%rip)
2c16(a): nop 0x0(%rax,%rax,1)
2c20(5): movzx 0xf(%rsp),%ebx
2c25(3): mov %r11,%rbp
2c28(4): mov %bl,0xd(%rsp)
2c2c(5): jmp 0xfffffcad(%rip)
2c31(5): movzx 0xd(%rsp),%edx
2c36(3): xor %r12d,%r12d
2c39(5): jmp 0xfffffb07(%rip)
2c3e(3): xor %r10d,%r10d
2c41(5): jmp 0xfffffbbc(%rip)
2c46(9): mov $0x0,0x50(%rsp)
2c4f(5): mov $0x1,0xe(%rsp)
2c54(3): xor %r12d,%r12d
2c57(5): mov $0x0,0x7c(%rsp)
2c5c(5): jmp 0xfffffddf(%rip)
2c61(5): mov 0x30(%rsp),%r11
2c66(3): mov %r14,%rsi
2c69(3): mov %r13,%rcx
2c6c(3): mov %rbx,%rax
2c6f(3): mov %rbx,%rdi
2c72(6): movzx 0x7d(%rsp),%r8d
2c78(5): movzx 0x7e(%rsp),%ebx
2c7d(8): mov 0x88(%rsp),%r9
2c85(3): cmp %r11,%rsi
2c88(6): movzx 0x7f(%rsp),%r10d
2c8e(8): mov 0x80(%rsp),%r15
2c96(5): mov 0x40(%rsp),%r14
2c9b(5): mov 0x70(%rsp),%r13
2ca0(2): jnb 0x28(%rip)
2ca2(3): cmp $0x0,(%rcx)
2ca5(2): jnz 0x12(%rip)
2ca7(2): jmp 0x21(%rip)
2ca9(7): nop 0x0(%rax)
2cb0(5): cmp $0x0,0x0(%r9,%rax,1)
2cb5(2): jz 0x10(%rip)
2cb7(4): add $0x1,%rax
2cbb(5): lea 0x0(%rbp,%rax,1),%rdx
2cc0(3): cmp %rdx,%r11
2cc3(2): jnbe 0xffffffed(%rip)
2cc5(3): mov %rax,%rdi
2cc8(5): movzx 0xd(%rsp),%edx
2ccd(3): xor %r12d,%r12d
2cd0(5): jmp 0xfffffa66(%rip)
2cd5(3): mov %rbx,%rdi
2cd8(6): movzx 0x7d(%rsp),%r8d
2cde(5): movzx 0x7e(%rsp),%ebx
2ce3(6): movzx 0x7f(%rsp),%r10d
2ce9(8): mov 0x80(%rsp),%r15
2cf1(3): xor %r12d,%r12d
2cf4(5): mov 0x40(%rsp),%r14
2cf9(5): mov 0x70(%rsp),%r13
2cfe(5): mov 0x30(%rsp),%r11
2d03(5): movzx 0xd(%rsp),%edx
2d08(5): jmp 0xfffffa2e(%rip)
2d0d(5): mov 0x68(%rsp),%rdx
2d12(3): movzx (%rdx),%eax
2d15(2): test %al,%al
2d17(6): jz 0xfffffe35(%rip)
2d1d(3): nop (%rax)
2d20(3): cmp %r15,%r13
2d23(2): jbe 0x6(%rip)
2d25(4): mov %al,0x0(%r14,%r15,1)
2d29(4): add $0x1,%r15
2d2d(5): movzx 0x0(%rdx,%r15,1),%eax
2d32(2): test %al,%al
2d34(2): jnz 0xffffffec(%rip)
2d36(5): jmp 0xfffffe16(%rip)
2d3b(2): mov %edx,%eax
2d3d(5): jmp 0xfffff55a(%rip)
2d42(4): movzx 0x0(%rax,%rcx,1),%ebx
2d46(3): cmp $0x3e,%bl
2d49(6): jnbe 0xfffff877(%rip)
2d4f(a): mov $0x8070630310989004800,%rax
2d59(4): bt %rbx,%rax
2d5d(6): jnb 0xfffff863(%rip)
2d63(5): cmp $0x0,0xf(%rsp)
2d68(6): jnz 0x1ea(%rip)
2d6e(3): cmp %r15,%r13
2d71(2): jbe 0x7(%rip)
2d73(5): mov $0x3f,0x0(%r14,%r15,1)
2d78(4): lea 0x1(%r15),%rax
2d7c(3): cmp %rax,%r13
2d7f(2): jbe 0x8(%rip)
2d81(6): mov $0x22,0x1(%r14,%r15,1)
2d87(4): lea 0x2(%r15),%rax
2d8b(3): cmp %rax,%r13
2d8e(2): jbe 0x8(%rip)
2d90(6): mov $0x22,0x2(%r14,%r15,1)
2d96(4): lea 0x3(%r15),%rax
2d9a(3): cmp %rax,%r13
2d9d(2): jbe 0x8(%rip)
2d9f(6): mov $0x3f,0x3(%r14,%r15,1)
2da5(4): add $0x4,%r15
2da9(2): xor %edx,%edx
2dab(3): xor %r12d,%r12d
2dae(2): xor %eax,%eax
2db0(3): mov %rcx,%rbp
2db3(5): jmp 0xfffff1c5(%rip)
2db8(2): test %ebx,%ebx
2dba(6): jz 0x18e(%rip)
2dc0(7): lea 0x1aa6(%rip),%rax
2dc7(5): mov $0x1,0xe(%rsp)
2dcc(5): mov $0x0,0x7c(%rsp)
2dd1(3): xor %r12d,%r12d
2dd4(9): mov $0x0,0x50(%rsp)
2ddd(5): mov $0x1,0xf(%rsp)
2de2(5): mov $0x0,0xd(%rsp)
2de7(9): mov $0x1,0x18(%rsp)
2df0(3): xor %r15d,%r15d
2df3(5): mov %rax,0x48(%rsp)
2df8(5): jmp 0xfffff02b(%rip)
2dfd(3): nop (%rax)
2e00(3): mov %r11,%rbp
2e03(5): movzx 0xf(%rsp),%eax
2e08(5): jmp 0xfffffad1(%rip)
2e0d(7): lea 0x1a57(%rip),%rax
2e14(5): mov $0x1,0xe(%rsp)
2e19(5): mov $0x0,0x7c(%rsp)
2e1e(3): xor %r12d,%r12d
2e21(9): mov $0x0,0x50(%rsp)
2e2a(5): mov $0x1,0xf(%rsp)
2e2f(5): mov $0x1,0xd(%rsp)
2e34(9): mov $0x1,0x18(%rsp)
2e3d(3): xor %r15d,%r15d
2e40(5): mov %rax,0x48(%rsp)
2e45(5): jmp 0xffffefde(%rip)
2e4a(2): mov %edx,%eax
2e4c(5): mov 0x48(%rsp),%rbx
2e51(3): test %rbx,%rbx
2e54(2): jz 0x2e(%rip)
2e56(2): test %al,%al
2e58(2): jz 0x2a(%rip)
2e5a(3): movzx (%rbx),%ecx
2e5d(3): mov %rbx,%rax
2e60(2): test %cl,%cl
2e62(2): jz 0x20(%rip)
2e64(3): mov %r15,%rdx
2e67(3): sub %r15,%rax
2e6a(3): cmp %rdx,%r13
2e6d(2): jbe 0x6(%rip)
2e6f(4): mov %cl,0x0(%r14,%rdx,1)
2e73(4): add $0x1,%rdx
2e77(4): movzx 0x0(%rax,%rdx,1),%ecx
2e7b(2): test %cl,%cl
2e7d(2): jnz 0xffffffed(%rip)
2e7f(3): mov %rdx,%r15
2e82(3): cmp %r15,%r13
2e85(6): jbe 0xfffffaa4(%rip)
2e8b(5): mov $0x0,0x0(%r14,%r15,1)
2e90(5): jmp 0xfffffa99(%rip)
2e95(5): cmp $0x2,0x8(%rsp)
2e9a(5): movzx 0xf(%rsp),%ebx
2e9f(3): mov %r11,%rbp
2ea2(3): setz %al
2ea5(4): mov %bl,0xd(%rsp)
2ea9(5): jmp 0xfffffa30(%rip)
2eae(4): mov 0x8(%rsp),%esi
2eb2(3): mov %rcx,%rdi
2eb5(5): call 0xffffedab(%rip)
2eba(5): mov %rax,0x68(%rsp)
2ebf(5): jmp 0xfffffc57(%rip)
2ec4(4): mov 0x8(%rsp),%esi
2ec8(3): mov %rcx,%rdi
2ecb(5): call 0xffffed95(%rip)
2ed0(5): mov %rax,0x60(%rsp)
2ed5(5): jmp 0xfffffc6c(%rip)
2eda(5): movzx 0xf(%rsp),%ebx
2edf(3): mov %r11,%rbp
2ee2(2): mov %edx,%eax
2ee4(4): mov %bl,0xd(%rsp)
2ee8(5): jmp 0xfffff9f1(%rip)
2eed(4): sub $0x8,%rsp
2ef1(6): mov $0x5,%r8d
2ef7(3): mov %r11,%rcx
2efa(4): push 0x68(%rsp)
2efe(4): push 0x78(%rsp)
2f02(3): mov %r14,%rdi
2f05(4): push 0x38(%rsp)
2f09(8): mov 0x98(%rsp),%r9d
2f11(5): mov 0x30(%rsp),%rdx
2f16(5): mov 0x70(%rsp),%rsi
2f1b(5): call 0xffffee35(%rip)
2f20(4): add $0x20,%rsp
2f24(3): mov %rax,%r15
2f27(5): jmp 0xfffffa02(%rip)
2f2c(5): movzx 0x7c(%rsp),%eax
2f31(5): jmp 0xffffff1b(%rip)
2f36(8): mov $0x2,0x8(%rsp)
2f3e(5): jmp 0xfffff99b(%rip)
2f43(5): call 0xffffe3ed(%rip)
2f48(5): mov $0x0,0xd(%rsp)
2f4d(5): jmp 0xfffffa74(%rip)
2f52(3): mov %r11,%rbp
2f55(5): jmp 0xfffff99b(%rip)
2f5a(5): mov $0x1,0xe(%rsp)
2f5f(2): xor %eax,%eax
2f61(3): xor %r12d,%r12d
2f64(9): mov $0x0,0x50(%rsp)
2f6d(5): jmp 0xfffff5a7(%rip)
2f72(3): mov %r13,%rdx
2f75(5): mov 0x50(%rsp),%r13
2f7a(5): jmp 0xfffff5f8(%rip)
2f7f(5): call 0xffffe2e1(%rip)

"quotearg_n_options" :
2f90(2): push %r15
2f92(2): push %r14
2f94(3): movsxd %edi,%r15
2f97(2): push %r13
2f99(2): push %r12
2f9b(3): mov %rdx,%r14
2f9e(1): push %rbp
2f9f(1): push %rbx
2fa0(3): mov %rcx,%rbp
2fa3(4): sub $0x28,%rsp
2fa7(5): mov %rsi,0x8(%rsp)
2fac(5): call 0xffffe2c4(%rip)
2fb1(3): mov %rax,%r13
2fb4(2): mov (%rax),%eax
2fb6(3): test %r15d,%r15d
2fb9(7): mov 0x2040a0(%rip),%rbx
2fc0(4): mov %eax,0x18(%rsp)
2fc4(6): js 0x16d(%rip)
2fca(7): cmp %r15d,0x204087(%rip)
2fd1(2): jnle 0x64(%rip)
2fd3(7): cmp $0x7fffffff,%r15d
2fda(6): jz 0x15c(%rip)
2fe0(4): lea 0x1(%r15),%r12d
2fe4(7): lea 0x204085(%rip),%rax
2feb(3): movsxd %r12d,%rsi
2fee(4): shl/sal $0x4,%rsi
2ff2(3): cmp %rax,%rbx
2ff5(6): jz 0x11b(%rip)
2ffb(3): mov %rbx,%rdi
2ffe(5): call 0xf72(%rip)
3003(3): mov %rax,%rbx
3006(7): mov %rax,0x204053(%rip)
300d(7): movsxd 0x204044(%rip),%rdi
3014(3): mov %r12d,%edx
3017(2): xor %esi,%esi
3019(2): sub %edi,%edx
301b(4): shl/sal $0x4,%rdi
301f(3): movsxd %edx,%rdx
3022(3): add %rbx,%rdi
3025(4): shl/sal $0x4,%rdx
3029(5): call 0xffffe357(%rip)
302e(7): mov %r12d,0x204023(%rip)
3035(3): mov 0x4(%rbp),%eax
3038(4): shl/sal $0x4,%r15
303c(4): sub $0x8,%rsp
3040(3): add %r15,%rbx
3043(4): lea 0x8(%rbp),%r15
3047(4): mov 0x0(%rbp),%r8d
304b(3): mov (%rbx),%r11
304e(4): mov 0x8(%rbx),%r12
3052(3): mov %r14,%rcx
3055(3): or $0x1,%eax
3058(4): mov %eax,0x24(%rsp)
305c(3): push 0x30(%rbp)
305f(3): mov %eax,%r9d
3062(3): push 0x28(%rbp)
3065(2): push %r15
3067(3): mov %r11,%rsi
306a(5): mov 0x28(%rsp),%rdx
306f(3): mov %r12,%rdi
3072(5): mov %r11,0x30(%rsp)
3077(5): call 0xffffecd9(%rip)
307c(4): add $0x20,%rsp
3080(5): mov 0x10(%rsp),%r11
3085(3): cmp %rax,%r11
3088(2): jnbe 0x69(%rip)
308a(4): lea 0x1(%rax),%rsi
308e(7): lea 0x20404b(%rip),%rax
3095(3): cmp %rax,%r12
3098(3): mov %rsi,(%rbx)
309b(2): jz 0x14(%rip)
309d(3): mov %r12,%rdi
30a0(5): mov %rsi,0x10(%rsp)
30a5(5): call 0xffffe1ab(%rip)
30aa(5): mov 0x10(%rsp),%rsi
30af(3): mov %rsi,%rdi
30b2(5): mov %rsi,0x10(%rsp)
30b7(5): call 0xe59(%rip)
30bc(4): sub $0x8,%rsp
30c0(4): mov %rax,0x8(%rbx)
30c4(4): mov 0x0(%rbp),%r8d
30c8(3): push 0x30(%rbp)
30cb(3): push 0x28(%rbp)
30ce(3): mov %r14,%rcx
30d1(2): push %r15
30d3(5): mov 0x3c(%rsp),%r9d
30d8(3): mov %rax,%rdi
30db(5): mov 0x28(%rsp),%rdx
30e0(5): mov 0x30(%rsp),%rsi
30e5(3): mov %rax,%r12
30e8(5): call 0xffffec68(%rip)
30ed(4): add $0x20,%rsp
30f1(4): mov 0x18(%rsp),%eax
30f5(4): mov %eax,0x0(%r13)
30f9(4): add $0x28,%rsp
30fd(3): mov %r12,%rax
3100(1): pop %rbx
3101(1): pop %rbp
3102(2): pop %r12
3104(2): pop %r13
3106(2): pop %r14
3108(2): pop %r15
310a(1): ret near (%rsp)
310b(5): nop 0x0(%rax,%rax,1)
3110(2): xor %edi,%edi
3112(5): call 0xe5e(%rip)
3117(8): movdqa 0x203f51(%rip),%xmm0
311f(3): mov %rax,%rbx
3122(7): mov %rax,0x203f37(%rip)
3129(3): movups %xmm0,(%rax)
312c(5): jmp 0xfffffee1(%rip)
3131(5): call 0xffffe12f(%rip)
3136(5): call 0x102a(%rip)

"clone_quoting_options" :
3140(2): push %r12
3142(1): push %rbp
3143(1): push %rbx
3144(3): mov %rdi,%rbx
3147(5): call 0xffffe129(%rip)
314c(3): mov (%rax),%r12d
314f(3): mov %rax,%rbp
3152(7): lea 0x204087(%rip),%rax
3159(3): test %rbx,%rbx
315c(5): mov $0x38,%esi
3161(4): cmove %rax,%rbx
3165(3): mov %rbx,%rdi
3168(5): call 0xfa8(%rip)
316d(4): mov %r12d,0x0(%rbp)
3171(1): pop %rbx
3172(1): pop %rbp
3173(2): pop %r12
3175(1): ret near (%rsp)

"get_quoting_style" :
3180(7): lea 0x204059(%rip),%rax
3187(3): test %rdi,%rdi
318a(4): cmove %rax,%rdi
318e(2): mov (%rdi),%eax
3190(1): ret near (%rsp)

"set_quoting_style" :
31a0(7): lea 0x204039(%rip),%rax
31a7(3): test %rdi,%rdi
31aa(4): cmove %rax,%rdi
31ae(2): mov %esi,(%rdi)
31b0(1): ret near (%rsp)

"set_char_quoting" :
31c0(7): lea 0x204019(%rip),%rax
31c7(3): test %rdi,%rdi
31ca(2): mov %esi,%ecx
31cc(4): cmove %rax,%rdi
31d0(2): mov %esi,%eax
31d2(3): and $0x1f,%ecx
31d5(3): shr $0x5,%al
31d8(3): movzx %al,%eax
31db(5): lea 0x8(%rdi,%rax,4),%rdi
31e0(2): mov (%rdi),%esi
31e2(2): mov %esi,%eax
31e4(2): shr %cl,%eax
31e6(2): xor %eax,%edx
31e8(3): and $0x1,%eax
31eb(3): and $0x1,%edx
31ee(2): shl/sal %cl,%edx
31f0(2): xor %esi,%edx
31f2(2): mov %edx,(%rdi)
31f4(1): ret near (%rsp)

"set_quoting_flags" :
3200(7): lea 0x203fd9(%rip),%rax
3207(3): test %rdi,%rdi
320a(4): cmove %rax,%rdi
320e(3): mov 0x4(%rdi),%eax
3211(3): mov %esi,0x4(%rdi)
3214(1): ret near (%rsp)

"set_custom_quoting" :
3220(7): lea 0x203fb9(%rip),%rax
3227(3): test %rdi,%rdi
322a(4): cmove %rax,%rdi
322e(3): test %rsi,%rsi
3231(6): mov $0xa,(%rdi)
3237(2): jz 0x10(%rip)
3239(3): test %rdx,%rdx
323c(2): jz 0xb(%rip)
323e(4): mov %rsi,0x28(%rdi)
3242(4): mov %rdx,0x30(%rdi)
3246(1): ret near (%rsp)
3247(4): sub $0x8,%rsp
324b(5): call 0xffffe015(%rip)

"quotearg_buffer" :
3250(2): push %r15
3252(2): push %r14
3254(7): lea 0x203f85(%rip),%rax
325b(2): push %r13
325d(2): push %r12
325f(3): mov %rdi,%r13
3262(1): push %rbp
3263(1): push %rbx
3264(3): mov %r8,%rbx
3267(3): mov %rsi,%r14
326a(3): mov %rdx,%r15
326d(4): sub $0x18,%rsp
3271(3): test %r8,%r8
3274(4): cmove %rax,%rbx
3278(5): mov %rcx,0x8(%rsp)
327d(5): call 0xffffdff3(%rip)
3282(3): mov (%rax),%r12d
3285(3): mov %rax,%rbp
3288(4): lea 0x8(%rbx),%rax
328c(4): sub $0x8,%rsp
3290(4): mov 0x4(%rbx),%r9d
3294(3): push 0x30(%rbx)
3297(3): mov (%rbx),%r8d
329a(3): push 0x28(%rbx)
329d(3): mov %r15,%rdx
32a0(1): push %rax
32a1(5): mov 0x28(%rsp),%rcx
32a6(3): mov %r14,%rsi
32a9(3): mov %r13,%rdi
32ac(5): call 0xffffeaa4(%rip)
32b1(4): mov %r12d,0x0(%rbp)
32b5(4): add $0x38,%rsp
32b9(1): pop %rbx
32ba(1): pop %rbp
32bb(2): pop %r12
32bd(2): pop %r13
32bf(2): pop %r14
32c1(2): pop %r15
32c3(1): ret near (%rsp)

"quotearg_alloc_mem" :
32d0(2): push %r15
32d2(2): push %r14
32d4(7): lea 0x203f05(%rip),%rax
32db(2): push %r13
32dd(2): push %r12
32df(3): mov %rdx,%r12
32e2(1): push %rbp
32e3(1): push %rbx
32e4(3): mov %rcx,%rbx
32e7(3): mov %rdi,%r14
32ea(3): mov %rsi,%r15
32ed(4): sub $0x38,%rsp
32f1(3): test %rcx,%rcx
32f4(4): cmove %rax,%rbx
32f8(2): xor %ebp,%ebp
32fa(5): call 0xffffdf76(%rip)
32ff(3): test %r12,%r12
3302(3): mov %rax,%r13
3305(2): mov (%rax),%eax
3307(4): setz %bpl
330b(3): or 0x4(%rbx),%ebp
330e(4): lea 0x8(%rbx),%r10
3312(4): sub $0x8,%rsp
3316(3): mov (%rbx),%r8d
3319(3): mov %r15,%rcx
331c(4): mov %eax,0x14(%rsp)
3320(3): push 0x30(%rbx)
3323(3): mov %r14,%rdx
3326(3): push 0x28(%rbx)
3329(2): push %r10
332b(2): xor %esi,%esi
332d(3): mov %ebp,%r9d
3330(2): xor %edi,%edi
3332(5): mov %r10,0x40(%rsp)
3337(5): call 0xffffea19(%rip)
333c(4): lea 0x1(%rax),%rsi
3340(5): mov %rax,0x48(%rsp)
3345(4): add $0x20,%rsp
3349(3): mov %rsi,%rdi
334c(5): mov %rsi,0x18(%rsp)
3351(5): call 0xbbf(%rip)
3356(5): mov %rax,0x10(%rsp)
335b(4): sub $0x8,%rsp
335f(3): push 0x30(%rbx)
3362(3): push 0x28(%rbx)
3365(5): mov 0x38(%rsp),%r10
336a(3): mov %ebp,%r9d
336d(3): mov (%rbx),%r8d
3370(3): mov %r15,%rcx
3373(3): mov %r14,%rdx
3376(3): mov %rax,%rdi
3379(2): push %r10
337b(5): mov 0x38(%rsp),%rsi
3380(5): call 0xffffe9d0(%rip)
3385(4): mov 0x2c(%rsp),%eax
3389(4): add $0x20,%rsp
338d(3): test %r12,%r12
3390(4): mov %eax,0x0(%r13)
3394(2): jz 0xb(%rip)
3396(5): mov 0x28(%rsp),%r11
339b(4): mov %r11,(%r12)
339f(5): mov 0x10(%rsp),%rax
33a4(4): add $0x38,%rsp
33a8(1): pop %rbx
33a9(1): pop %rbp
33aa(2): pop %r12
33ac(2): pop %r13
33ae(2): pop %r14
33b0(2): pop %r15
33b2(1): ret near (%rsp)

"quotearg_alloc" :
33c0(3): mov %rdx,%rcx
33c3(2): xor %edx,%edx
33c5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
33d0(6): mov 0x203c82(%rip),%eax
33d6(2): push %r12
33d8(7): mov 0x203c81(%rip),%r12
33df(1): push %rbp
33e0(1): push %rbx
33e1(3): cmp $0x1,%eax
33e4(2): jle 0x2d(%rip)
33e6(3): sub $0x2,%eax
33e9(5): lea 0x18(%r12),%rbx
33ee(4): shl/sal $0x4,%rax
33f2(5): lea 0x28(%r12,%rax,1),%rbp
33f7(9): nop 0x0(%rax,%rax,1)
3400(3): mov (%rbx),%rdi
3403(4): add $0x10,%rbx
3407(5): call 0xffffde49(%rip)
340c(3): cmp %rbp,%rbx
340f(2): jnz 0xfffffff1(%rip)
3411(5): mov 0x8(%r12),%rdi
3416(7): lea 0x203cc3(%rip),%rbx
341d(3): cmp %rbx,%rdi
3420(2): jz 0x19(%rip)
3422(5): call 0xffffde2e(%rip)
3427(b): mov $0x100,0x203c3e(%rip)
3432(7): mov %rbx,0x203c3f(%rip)
3439(7): lea 0x203c30(%rip),%rbx
3440(3): cmp %rbx,%r12
3443(2): jz 0x11(%rip)
3445(3): mov %r12,%rdi
3448(5): call 0xffffde08(%rip)
344d(7): mov %rbx,0x203c0c(%rip)
3454(1): pop %rbx
3455(a): mov $0x1,0x203bf9(%rip)
345f(1): pop %rbp
3460(2): pop %r12
3462(1): ret near (%rsp)

"quotearg_n" :
3470(7): lea 0x203d69(%rip),%rcx
3477(7): mov $0xffffffff,%rdx
347e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3490(7): lea 0x203d49(%rip),%rcx
3497(5): jmp 0xfffffaf9(%rip)

"quotearg" :
34a0(7): lea 0x203d39(%rip),%rcx
34a7(3): mov %rdi,%rsi
34aa(7): mov $0xffffffff,%rdx
34b1(2): xor %edi,%edi
34b3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
34c0(7): lea 0x203d19(%rip),%rcx
34c7(3): mov %rsi,%rdx
34ca(3): mov %rdi,%rsi
34cd(2): xor %edi,%edi
34cf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
34e0(4): sub $0x48,%rsp
34e4(3): mov %rdx,%rax
34e7(9): mov $0x28,%rdx
34f0(5): mov %rdx,0x38(%rsp)
34f5(2): xor %edx,%edx
34f7(3): cmp $0xa,%esi
34fa(2): jz 0x6a(%rip)
34fc(3): mov %esi,(%rsp)
34ff(3): mov %rsp,%rcx
3502(7): mov $0xffffffff,%rdx
3509(3): mov %rax,%rsi
350c(9): mov $0x0,0x4(%rsp)
3515(9): mov $0x0,0xc(%rsp)
351e(9): mov $0x0,0x14(%rsp)
3527(9): mov $0x0,0x1c(%rsp)
3530(9): mov $0x0,0x24(%rsp)
3539(9): mov $0x0,0x2c(%rsp)
3542(8): mov $0x0,0x34(%rsp)
354a(5): call 0xfffffa46(%rip)
354f(5): mov 0x38(%rsp),%rcx
3554(9): xor $0x28,%rcx
355d(2): jnz 0xc(%rip)
355f(4): add $0x48,%rsp
3563(1): ret near (%rsp)
3564(5): call 0xffffdcfc(%rip)
3569(5): call 0xffffddc7(%rip)

"quotearg_n_style_mem" :
3570(4): sub $0x48,%rsp
3574(3): mov %rdx,%rax
3577(3): mov %rcx,%rdx
357a(9): mov $0x28,%rcx
3583(5): mov %rcx,0x38(%rsp)
3588(2): xor %ecx,%ecx
358a(3): cmp $0xa,%esi
358d(2): jz 0x63(%rip)
358f(3): mov %esi,(%rsp)
3592(3): mov %rsp,%rcx
3595(3): mov %rax,%rsi
3598(9): mov $0x0,0x4(%rsp)
35a1(9): mov $0x0,0xc(%rsp)
35aa(9): mov $0x0,0x14(%rsp)
35b3(9): mov $0x0,0x1c(%rsp)
35bc(9): mov $0x0,0x24(%rsp)
35c5(9): mov $0x0,0x2c(%rsp)
35ce(8): mov $0x0,0x34(%rsp)
35d6(5): call 0xfffff9ba(%rip)
35db(5): mov 0x38(%rsp),%rdx
35e0(9): xor $0x28,%rdx
35e9(2): jnz 0xc(%rip)
35eb(4): add $0x48,%rsp
35ef(1): ret near (%rsp)
35f0(5): call 0xffffdc70(%rip)
35f5(5): call 0xffffdd3b(%rip)

"quotearg_style" :
3600(3): mov %rsi,%rdx
3603(2): mov %edi,%esi
3605(2): xor %edi,%edi
3607(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3610(3): mov %rdx,%rcx
3613(3): mov %rsi,%rdx
3616(2): mov %edi,%esi
3618(2): xor %edi,%edi
361a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3620(4): sub $0x48,%rsp
3624(2): mov %edx,%ecx
3626(9): mov $0x28,%rax
362f(5): mov %rax,0x38(%rsp)
3634(2): xor %eax,%eax
3636(7): mov 0x203bd3(%rip),%rax
363d(3): mov %rsp,%r8
3640(3): and $0x1f,%ecx
3643(8): movdqa 0x203b95(%rip),%xmm0
364b(5): mov %rax,0x30(%rsp)
3650(2): mov %edx,%eax
3652(4): movaps %xmm0,(%rsp)
3656(3): shr $0x5,%al
3659(3): movzx %al,%eax
365c(5): lea 0x8(%r8,%rax,4),%r9
3661(8): movdqa 0x203b87(%rip),%xmm0
3669(5): movaps %xmm0,0x10(%rsp)
366e(8): movdqa 0x203b8a(%rip),%xmm0
3676(5): movaps %xmm0,0x20(%rsp)
367b(3): mov (%r9),%edx
367e(2): mov %edx,%eax
3680(2): shr %cl,%eax
3682(2): not %eax
3684(3): and $0x1,%eax
3687(2): shl/sal %cl,%eax
3689(3): mov %r8,%rcx
368c(2): xor %edx,%eax
368e(3): mov %rsi,%rdx
3691(3): mov %rdi,%rsi
3694(3): mov %eax,(%r9)
3697(2): xor %edi,%edi
3699(5): call 0xfffff8f7(%rip)
369e(5): mov 0x38(%rsp),%rsi
36a3(9): xor $0x28,%rsi
36ac(2): jnz 0x7(%rip)
36ae(4): add $0x48,%rsp
36b2(1): ret near (%rsp)
36b3(5): call 0xffffdc7d(%rip)

"quotearg_char" :
36c0(4): movsx %sil,%edx
36c4(7): mov $0xffffffff,%rsi
36cb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
36d0(5): mov $0x3a,%edx
36d5(7): mov $0xffffffff,%rsi
36dc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
36f0(5): mov $0x3a,%edx
36f5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3700(4): sub $0x48,%rsp
3704(3): mov %rdx,%rax
3707(9): mov $0x28,%rdx
3710(5): mov %rdx,0x38(%rsp)
3715(2): xor %edx,%edx
3717(3): cmp $0xa,%esi
371a(2): jz 0x6a(%rip)
371c(3): mov %esi,(%rsp)
371f(3): mov %rsp,%rcx
3722(7): mov $0xffffffff,%rdx
3729(3): mov %rax,%rsi
372c(9): mov $0x0,0x4(%rsp)
3735(9): mov $0x4000000,0xc(%rsp)
373e(9): mov $0x0,0x14(%rsp)
3747(9): mov $0x0,0x1c(%rsp)
3750(9): mov $0x0,0x24(%rsp)
3759(9): mov $0x0,0x2c(%rsp)
3762(8): mov $0x0,0x34(%rsp)
376a(5): call 0xfffff826(%rip)
376f(5): mov 0x38(%rsp),%rcx
3774(9): xor $0x28,%rcx
377d(2): jnz 0xc(%rip)
377f(4): add $0x48,%rsp
3783(1): ret near (%rsp)
3784(5): call 0xffffdadc(%rip)
3789(5): call 0xffffdba7(%rip)

"quotearg_n_custom_mem" :
3790(4): sub $0x48,%rsp
3794(3): mov %rcx,%r9
3797(7): mov 0x203a72(%rip),%rcx
379e(8): movdqa 0x203a3a(%rip),%xmm0
37a6(9): mov $0x28,%rax
37af(5): mov %rax,0x38(%rsp)
37b4(2): xor %eax,%eax
37b6(4): movaps %xmm0,(%rsp)
37ba(3): test %rsi,%rsi
37bd(5): mov %rcx,0x30(%rsp)
37c2(7): mov $0xa,(%rsp)
37c9(8): movdqa 0x203a1f(%rip),%xmm0
37d1(5): movaps %xmm0,0x10(%rsp)
37d6(8): movdqa 0x203a22(%rip),%xmm0
37de(5): movaps %xmm0,0x20(%rsp)
37e3(2): jz 0x34(%rip)
37e5(3): test %rdx,%rdx
37e8(2): jz 0x2f(%rip)
37ea(5): mov %rsi,0x28(%rsp)
37ef(5): mov %rdx,0x30(%rsp)
37f4(3): mov %rsp,%rcx
37f7(3): mov %r8,%rdx
37fa(3): mov %r9,%rsi
37fd(5): call 0xfffff793(%rip)
3802(5): mov 0x38(%rsp),%rdi
3807(9): xor $0x28,%rdi
3810(2): jnz 0xc(%rip)
3812(4): add $0x48,%rsp
3816(1): ret near (%rsp)
3817(5): call 0xffffda49(%rip)
381c(5): call 0xffffdb14(%rip)

"quotearg_n_custom" :
3830(7): mov $0xffffffff,%r8
3837(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3840(3): mov %rdx,%rcx
3843(7): mov $0xffffffff,%r8
384a(3): mov %rsi,%rdx
384d(3): mov %rdi,%rsi
3850(2): xor %edi,%edi
3852(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3860(3): mov %rcx,%r8
3863(3): mov %rdx,%rcx
3866(3): mov %rsi,%rdx
3869(3): mov %rdi,%rsi
386c(2): xor %edi,%edi
386e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3880(7): lea 0x203799(%rip),%rcx
3887(5): jmp 0xfffff709(%rip)

"quote_mem" :
3890(7): lea 0x203789(%rip),%rcx
3897(3): mov %rsi,%rdx
389a(3): mov %rdi,%rsi
389d(2): xor %edi,%edi
389f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
38b0(7): lea 0x203769(%rip),%rcx
38b7(7): mov $0xffffffff,%rdx
38be(5): jmp 0xfffff6d2(%rip)

"quote" :
38d0(7): lea 0x203749(%rip),%rcx
38d7(3): mov %rdi,%rsi
38da(7): mov $0xffffffff,%rdx
38e1(2): xor %edi,%edi
38e3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
38f0(2): push %r15
38f2(2): push %r14
38f4(2): push %r13
38f6(2): push %r12
38f8(3): mov %r9,%r12
38fb(1): push %rbp
38fc(1): push %rbx
38fd(3): mov %rdi,%rbp
3900(3): mov %r8,%rbx
3903(4): sub $0x28,%rsp
3907(3): test %rsi,%rsi
390a(6): jz 0x11e(%rip)
3910(3): mov %rdx,%r8
3913(7): lea 0x140e(%rip),%rdx
391a(3): mov %rcx,%r9
391d(2): xor %eax,%eax
391f(3): mov %rsi,%rcx
3922(5): mov $0x1,%esi
3927(5): call 0xffffdb89(%rip)
392c(7): lea 0x1408(%rip),%rsi
3933(2): xor %edi,%edi
3935(5): mov $0x5,%edx
393a(5): call 0xffffd9c6(%rip)
393f(7): lea 0x171a(%rip),%rdx
3946(3): mov %rax,%rcx
3949(6): mov $0x7e3,%r8d
394f(5): mov $0x1,%esi
3954(3): mov %rbp,%rdi
3957(2): xor %eax,%eax
3959(5): call 0xffffdb57(%rip)
395e(7): lea 0x1463(%rip),%rsi
3965(2): xor %edi,%edi
3967(5): mov $0x5,%edx
396c(5): call 0xffffd994(%rip)
3971(3): mov %rbp,%rsi
3974(3): mov %rax,%rdi
3977(5): call 0xffffda29(%rip)
397c(4): cmp $0x9,%r12
3980(6): jnbe 0x340(%rip)
3986(7): lea 0x169b(%rip),%rdx
398d(4): movsxd 0x0(%rdx,%r12,4),%rax
3991(3): add %rdx,%rax
3994(2): jmp %rax
3996(a): nop 0x0(%rax,%rax,1)
39a0(4): mov 0x38(%rbx),%r9
39a4(4): mov 0x10(%rbx),%rax
39a8(7): lea 0x1589(%rip),%rsi
39af(4): mov 0x8(%rbx),%r8
39b3(5): mov $0x5,%edx
39b8(2): xor %edi,%edi
39ba(4): mov 0x30(%rbx),%r13
39be(4): mov 0x28(%rbx),%r12
39c2(5): mov %r9,0x10(%rsp)
39c7(4): mov 0x20(%rbx),%r15
39cb(4): mov 0x18(%rbx),%r14
39cf(4): mov %rax,(%rsp)
39d3(5): mov %r8,0x8(%rsp)
39d8(3): mov (%rbx),%rbx
39db(5): call 0xffffd925(%rip)
39e0(4): sub $0x8,%rsp
39e4(5): mov 0x18(%rsp),%r9
39e9(3): mov %rax,%rdx
39ec(3): mov %rbx,%rcx
39ef(5): mov $0x1,%esi
39f4(3): mov %rbp,%rdi
39f7(2): xor %eax,%eax
39f9(2): push %r9
39fb(2): push %r13
39fd(2): push %r12
39ff(2): push %r15
3a01(2): push %r14
3a03(5): mov 0x30(%rsp),%r9
3a08(5): mov 0x38(%rsp),%r8
3a0d(5): call 0xffffdaa3(%rip)
3a12(4): add $0x30,%rsp
3a16(4): add $0x28,%rsp
3a1a(1): pop %rbx
3a1b(1): pop %rbp
3a1c(2): pop %r12
3a1e(2): pop %r13
3a20(2): pop %r14
3a22(2): pop %r15
3a24(1): ret near (%rsp)
3a25(3): nop (%rax)
3a28(3): mov %rcx,%r8
3a2b(3): mov %rdx,%rcx
3a2e(7): lea 0x12ff(%rip),%rdx
3a35(5): mov $0x1,%esi
3a3a(2): xor %eax,%eax
3a3c(5): call 0xffffda74(%rip)
3a41(5): jmp 0xfffffeeb(%rip)
3a46(a): nop 0x0(%rax,%rax,1)
3a50(4): mov 0x40(%rbx),%r10
3a54(4): mov 0x38(%rbx),%r9
3a58(7): lea 0x1509(%rip),%rsi
3a5f(4): mov 0x10(%rbx),%rax
3a63(4): mov 0x8(%rbx),%r8
3a67(5): mov $0x5,%edx
3a6c(4): mov 0x30(%rbx),%r13
3a70(4): mov 0x28(%rbx),%r12
3a74(4): mov 0x20(%rbx),%r15
3a78(4): mov 0x18(%rbx),%r14
3a7c(3): mov (%rbx),%rbx
3a7f(5): mov %r10,0x18(%rsp)
3a84(5): mov %r9,0x10(%rsp)
3a89(4): mov %rax,(%rsp)
3a8d(5): mov %r8,0x8(%rsp)
3a92(2): xor %edi,%edi
3a94(5): call 0xffffd86c(%rip)
3a99(5): mov 0x18(%rsp),%r10
3a9e(2): push %r10
3aa0(5): jmp 0xffffff44(%rip)
3aa5(3): nop (%rax)
3aa8(3): mov (%rbx),%rbx
3aab(7): lea 0x128d(%rip),%rsi
3ab2(5): mov $0x5,%edx
3ab7(2): xor %edi,%edi
3ab9(5): call 0xffffd847(%rip)
3abe(4): add $0x28,%rsp
3ac2(3): mov %rbx,%rcx
3ac5(3): mov %rbp,%rdi
3ac8(1): pop %rbx
3ac9(1): pop %rbp
3aca(2): pop %r12
3acc(2): pop %r13
3ace(2): pop %r14
3ad0(2): pop %r15
3ad2(3): mov %rax,%rdx
3ad5(5): mov $0x1,%esi
3ada(2): xor %eax,%eax
3adc(5): jmp 0xffffd9d4(%rip)
3ae1(7): nop 0x0(%rax)
3ae8(4): mov 0x8(%rbx),%r12
3aec(7): lea 0x125c(%rip),%rsi
3af3(3): mov (%rbx),%rbx
3af6(5): mov $0x5,%edx
3afb(2): xor %edi,%edi
3afd(5): call 0xffffd803(%rip)
3b02(4): add $0x28,%rsp
3b06(3): mov %r12,%r8
3b09(3): mov %rbx,%rcx
3b0c(3): mov %rbp,%rdi
3b0f(3): mov %rax,%rdx
3b12(5): mov $0x1,%esi
3b17(1): pop %rbx
3b18(1): pop %rbp
3b19(2): pop %r12
3b1b(2): pop %r13
3b1d(2): pop %r14
3b1f(2): pop %r15
3b21(2): xor %eax,%eax
3b23(5): jmp 0xffffd98d(%rip)
3b28(8): nop 0x0(%rax,%rax,1)
3b30(4): mov 0x10(%rbx),%r13
3b34(4): mov 0x8(%rbx),%r12
3b38(7): lea 0x1227(%rip),%rsi
3b3f(3): mov (%rbx),%rbx
3b42(5): mov $0x5,%edx
3b47(2): xor %edi,%edi
3b49(5): call 0xffffd7b7(%rip)
3b4e(4): add $0x28,%rsp
3b52(3): mov %r13,%r9
3b55(3): mov %r12,%r8
3b58(3): mov %rbx,%rcx
3b5b(3): mov %rbp,%rdi
3b5e(3): mov %rax,%rdx
3b61(1): pop %rbx
3b62(1): pop %rbp
3b63(2): pop %r12
3b65(2): pop %r13
3b67(2): pop %r14
3b69(2): pop %r15
3b6b(5): mov $0x1,%esi
3b70(2): xor %eax,%eax
3b72(5): jmp 0xffffd93e(%rip)
3b77(9): nop 0x0(%rax,%rax,1)
3b80(7): lea 0x1311(%rip),%rsi
3b87(5): mov $0x5,%edx
3b8c(2): xor %edi,%edi
3b8e(4): mov 0x18(%rbx),%r14
3b92(4): mov 0x10(%rbx),%r13
3b96(4): mov 0x8(%rbx),%r12
3b9a(3): mov (%rbx),%rbx
3b9d(5): call 0xffffd763(%rip)
3ba2(4): sub $0x8,%rsp
3ba6(2): push %r14
3ba8(3): mov %rax,%rdx
3bab(3): mov %r13,%r9
3bae(3): mov %r12,%r8
3bb1(3): mov %rbx,%rcx
3bb4(3): mov %rbp,%rdi
3bb7(5): mov $0x1,%esi
3bbc(2): xor %eax,%eax
3bbe(5): call 0xffffd8f2(%rip)
3bc3(1): pop %rax
3bc4(1): pop %rdx
3bc5(4): add $0x28,%rsp
3bc9(1): pop %rbx
3bca(1): pop %rbp
3bcb(2): pop %r12
3bcd(2): pop %r13
3bcf(2): pop %r14
3bd1(2): pop %r15
3bd3(1): ret near (%rsp)
3bd4(4): nop 0x0(%rax)
3bd8(4): mov 0x20(%rbx),%r15
3bdc(7): lea 0x12d5(%rip),%rsi
3be3(5): mov $0x5,%edx
3be8(2): xor %edi,%edi
3bea(4): mov 0x18(%rbx),%r14
3bee(4): mov 0x10(%rbx),%r13
3bf2(4): mov 0x8(%rbx),%r12
3bf6(3): mov (%rbx),%rbx
3bf9(5): call 0xffffd707(%rip)
3bfe(2): push %r15
3c00(2): jmp 0xffffffa6(%rip)
3c02(6): nop 0x0(%rax,%rax,1)
3c08(4): mov 0x8(%rbx),%r8
3c0c(4): mov 0x28(%rbx),%r12
3c10(7): lea 0x12c9(%rip),%rsi
3c17(4): mov 0x20(%rbx),%r15
3c1b(4): mov 0x18(%rbx),%r14
3c1f(5): mov $0x5,%edx
3c24(4): mov 0x10(%rbx),%r13
3c28(2): xor %edi,%edi
3c2a(3): mov (%rbx),%rbx
3c2d(4): mov %r8,(%rsp)
3c31(5): call 0xffffd6cf(%rip)
3c36(4): sub $0x8,%rsp
3c3a(3): mov %r13,%r9
3c3d(2): push %r12
3c3f(2): push %r15
3c41(2): push %r14
3c43(5): mov 0x20(%rsp),%r8
3c48(3): mov %rbx,%rcx
3c4b(3): mov %rax,%rdx
3c4e(3): mov %rbp,%rdi
3c51(5): mov $0x1,%esi
3c56(2): xor %eax,%eax
3c58(5): call 0xffffd858(%rip)
3c5d(4): add $0x20,%rsp
3c61(4): add $0x28,%rsp
3c65(1): pop %rbx
3c66(1): pop %rbp
3c67(2): pop %r12
3c69(2): pop %r13
3c6b(2): pop %r14
3c6d(2): pop %r15
3c6f(1): ret near (%rsp)
3c70(4): mov 0x10(%rbx),%r9
3c74(4): mov 0x30(%rbx),%r13
3c78(7): lea 0x1289(%rip),%rsi
3c7f(4): mov 0x28(%rbx),%r12
3c83(4): mov 0x20(%rbx),%r15
3c87(5): mov $0x5,%edx
3c8c(4): mov 0x18(%rbx),%r14
3c90(4): mov 0x8(%rbx),%r8
3c94(2): xor %edi,%edi
3c96(5): mov %r9,0x8(%rsp)
3c9b(3): mov (%rbx),%rbx
3c9e(4): mov %r8,(%rsp)
3ca2(5): call 0xffffd65e(%rip)
3ca7(2): push %r13
3ca9(2): push %r12
3cab(2): push %r15
3cad(2): push %r14
3caf(5): mov 0x28(%rsp),%r9
3cb4(2): jmp 0xffffff8f(%rip)
3cb6(a): nop 0x0(%rax,%rax,1)
3cc0(4): mov 0x40(%rbx),%r10
3cc4(4): mov 0x38(%rbx),%r9
3cc8(5): mov $0x5,%edx
3ccd(4): mov 0x10(%rbx),%rax
3cd1(4): mov 0x8(%rbx),%r8
3cd5(7): lea 0x12c4(%rip),%rsi
3cdc(4): mov 0x30(%rbx),%r13
3ce0(4): mov 0x28(%rbx),%r12
3ce4(4): mov 0x20(%rbx),%r15
3ce8(4): mov 0x18(%rbx),%r14
3cec(5): mov %r10,0x18(%rsp)
3cf1(5): mov %r9,0x10(%rsp)
3cf6(4): mov %rax,(%rsp)
3cfa(5): mov %r8,0x8(%rsp)
3cff(3): mov (%rbx),%rbx
3d02(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3d10(3): xor %r9d,%r9d
3d13(4): cmp $0x0,(%r8)
3d17(2): jz 0x14(%rip)
3d19(7): nop 0x0(%rax)
3d20(4): add $0x1,%r9
3d24(5): cmp $0x0,0x0(%r8,%r9,8)
3d29(2): jnz 0xfffffff7(%rip)
3d2b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3d30(4): sub $0x68,%rsp
3d34(3): mov %r8,%r10
3d37(3): xor %r9d,%r9d
3d3a(9): mov $0x28,%rax
3d43(5): mov %rax,0x58(%rsp)
3d48(2): xor %eax,%eax
3d4a(3): mov %rsp,%r8
3d4d(3): nop (%rax)
3d50(3): mov (%r10),%eax
3d53(3): cmp $0x2f,%eax
3d56(2): jnbe 0x44(%rip)
3d58(3): mov %eax,%r11d
3d5b(4): add 0x10(%r10),%r11
3d5f(3): add $0x8,%eax
3d62(3): mov %eax,(%r10)
3d65(3): mov (%r11),%rax
3d68(3): test %rax,%rax
3d6b(4): mov %rax,0x0(%r8,%r9,8)
3d6f(2): jz 0xc(%rip)
3d71(4): add $0x1,%r9
3d75(4): cmp $0xa,%r9
3d79(2): jnz 0xffffffd7(%rip)
3d7b(5): call 0xfffffb75(%rip)
3d80(5): mov 0x58(%rsp),%rax
3d85(9): xor $0x28,%rax
3d8e(2): jnz 0x7(%rip)
3d90(4): add $0x68,%rsp
3d94(1): ret near (%rsp)
3d95(5): call 0xffffd59b(%rip)
3d9a(4): mov 0x8(%r10),%r11
3d9e(4): lea 0x8(%r11),%rax
3da2(4): mov %rax,0x8(%r10)
3da6(2): jmp 0xffffffbf(%rip)

"version_etc" :
3db0(1): push %rbp
3db1(1): push %rbx
3db2(6): mov $0x20,%r10d
3db8(3): xor %r11d,%r11d
3dbb(7): sub $0xb8,%rsp
3dc2(9): mov $0x28,%rax
3dcb(5): mov %rax,0x78(%rsp)
3dd0(2): xor %eax,%eax
3dd2(8): lea 0xd0(%rsp),%rax
3dda(8): mov %r8,0xa0(%rsp)
3de2(8): lea 0xd0(%rsp),%rbx
3dea(5): lea 0x20(%rsp),%r8
3def(8): mov %r9,0xa8(%rsp)
3df7(8): mov $0x20,0x8(%rsp)
3dff(5): mov %rax,0x10(%rsp)
3e04(8): lea 0x80(%rsp),%rax
3e0c(3): xor %r9d,%r9d
3e0f(5): mov %rax,0x18(%rsp)
3e14(3): mov %rax,%rbp
3e17(9): nop 0x0(%rax,%rax,1)
3e20(4): cmp $0x2f,%r10d
3e24(2): jnbe 0x58(%rip)
3e26(3): mov %r10d,%eax
3e29(6): mov $0x1,%r11d
3e2f(4): add $0x8,%r10d
3e33(3): add %rbp,%rax
3e36(3): mov (%rax),%rax
3e39(3): test %rax,%rax
3e3c(4): mov %rax,0x0(%r8,%r9,8)
3e40(2): jz 0xc(%rip)
3e42(4): add $0x1,%r9
3e46(4): cmp $0xa,%r9
3e4a(2): jnz 0xffffffd6(%rip)
3e4c(3): test %r11b,%r11b
3e4f(2): jnz 0x26(%rip)
3e51(5): call 0xfffffa9f(%rip)
3e56(5): mov 0x78(%rsp),%rax
3e5b(9): xor $0x28,%rax
3e64(2): jnz 0xc(%rip)
3e66(7): add $0xb8,%rsp
3e6d(1): pop %rbx
3e6e(1): pop %rbp
3e6f(1): ret near (%rsp)
3e70(5): call 0xffffd4c0(%rip)
3e75(5): mov %r10d,0x8(%rsp)
3e7a(2): jmp 0xffffffd7(%rip)
3e7c(3): mov %rbx,%rax
3e7f(4): add $0x8,%rbx
3e83(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
3e90(1): push %rbx
3e91(7): lea 0xeea(%rip),%rsi
3e98(5): mov $0x5,%edx
3e9d(2): xor %edi,%edi
3e9f(5): call 0xffffd461(%rip)
3ea4(7): lea 0xeec(%rip),%rdx
3eab(3): mov %rax,%rsi
3eae(5): mov $0x1,%edi
3eb3(2): xor %eax,%eax
3eb5(5): call 0xffffd59b(%rip)
3eba(7): lea 0xeec(%rip),%rsi
3ec1(5): mov $0x5,%edx
3ec6(2): xor %edi,%edi
3ec8(5): call 0xffffd438(%rip)
3ecd(7): lea 0x884(%rip),%rcx
3ed4(7): lea 0x6d6(%rip),%rdx
3edb(3): mov %rax,%rsi
3ede(5): mov $0x1,%edi
3ee3(2): xor %eax,%eax
3ee5(5): call 0xffffd56b(%rip)
3eea(7): mov 0x203197(%rip),%rbx
3ef1(7): lea 0x10e8(%rip),%rsi
3ef8(2): xor %edi,%edi
3efa(5): mov $0x5,%edx
3eff(5): call 0xffffd401(%rip)
3f04(3): mov %rbx,%rsi
3f07(3): mov %rax,%rdi
3f0a(1): pop %rbx
3f0b(5): jmp 0xffffd495(%rip)

"xmalloc" :
3f10(1): push %rbx
3f11(3): mov %rdi,%rbx
3f14(5): call 0xffffd4cc(%rip)
3f19(3): test %rax,%rax
3f1c(2): jnz 0x7(%rip)
3f1e(3): test %rbx,%rbx
3f21(2): jnz 0x4(%rip)
3f23(1): pop %rbx
3f24(1): ret near (%rsp)
3f25(5): call 0x23b(%rip)

"xnmalloc" :
3f30(3): mov %rdi,%rax
3f33(3): mul %rax,%rsi,%rdx
3f36(3): mov %rax,%rdi
3f39(3): seto %al
3f3c(3): test %rdi,%rdi
3f3f(2): js 0xc(%rip)
3f41(3): movzx %al,%eax
3f44(3): test %rax,%rax
3f47(2): jnz 0x4(%rip)
3f49(2): jmp 0xffffffc7(%rip)
3f4b(4): sub $0x8,%rsp
3f4f(5): call 0x211(%rip)

"xrealloc" :
3f70(3): test %rsi,%rsi
3f73(1): push %rbx
3f74(3): mov %rsi,%rbx
3f77(2): jnz 0x7(%rip)
3f79(3): test %rdi,%rdi
3f7c(2): jnz 0x1c(%rip)
3f7e(3): mov %rbx,%rsi
3f81(5): call 0xffffd4af(%rip)
3f86(3): test %rax,%rax
3f89(2): jnz 0x7(%rip)
3f8b(3): test %rbx,%rbx
3f8e(2): jnz 0x13(%rip)
3f90(1): pop %rbx
3f91(1): ret near (%rsp)
3f92(6): nop 0x0(%rax,%rax,1)
3f98(5): call 0xffffd2b8(%rip)
3f9d(2): xor %eax,%eax
3f9f(1): pop %rbx
3fa0(1): ret near (%rsp)
3fa1(5): call 0x1bf(%rip)

"xnrealloc" :
3fb0(3): mov %rsi,%rax
3fb3(3): mul %rax,%rdx,%rdx
3fb6(3): mov %rax,%rsi
3fb9(3): seto %al
3fbc(3): test %rsi,%rsi
3fbf(2): js 0xc(%rip)
3fc1(3): movzx %al,%eax
3fc4(3): test %rax,%rax
3fc7(2): jnz 0x4(%rip)
3fc9(2): jmp 0xffffffa7(%rip)
3fcb(4): sub $0x8,%rsp
3fcf(5): call 0x191(%rip)

"x2nrealloc" :
3fe0(3): test %rdi,%rdi
3fe3(3): mov %rdx,%r9
3fe6(3): mov (%rsi),%rcx
3fe9(2): jz 0x37(%rip)
3feb(2): xor %edx,%edx
3fed(a): mov $0x6148914691236517204,%rax
3ff7(3): div %r9,%rax
3ffa(3): cmp %rcx,%rax
3ffd(2): jbe 0x3e(%rip)
3fff(3): mov %rcx,%rax
4002(3): shr $0x1,%rax
4005(5): lea 0x1(%rax,%rcx,1),%rcx
400a(3): mov %rcx,(%rsi)
400d(4): imul %r9,%rcx
4011(3): mov %rcx,%rsi
4014(5): jmp 0xffffff5c(%rip)
4019(7): nop 0x0(%rax)
4020(3): test %rcx,%rcx
4023(2): jz 0x25(%rip)
4025(3): mov %rcx,%rax
4028(3): mul %rax,%r9,%rdx
402b(3): seto %dl
402e(3): test %rax,%rax
4031(3): movzx %dl,%edx
4034(2): js 0x7(%rip)
4036(3): test %rdx,%rdx
4039(2): jz 0xffffffd1(%rip)
403b(4): sub $0x8,%rsp
403f(5): call 0x121(%rip)
4044(4): nop 0x0(%rax)
4048(2): xor %edx,%edx
404a(5): mov $0x80,%eax
404f(3): xor %r8d,%r8d
4052(3): div %r9,%rax
4055(3): test %rax,%rax
4058(4): setz %r8b
405c(4): lea 0x0(%r8,%rax,1),%rcx
4060(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4070(3): test %rdi,%rdi
4073(3): mov (%rsi),%rax
4076(2): jz 0x2a(%rip)
4078(a): mov $0x6148914691236517203,%rdx
4082(3): cmp %rdx,%rax
4085(2): jnbe 0x2c(%rip)
4087(3): mov %rax,%rdx
408a(3): shr $0x1,%rdx
408d(5): lea 0x1(%rdx,%rax,1),%rax
4092(3): mov %rax,(%rsi)
4095(3): mov %rax,%rsi
4098(5): jmp 0xfffffed8(%rip)
409d(3): nop (%rax)
40a0(3): test %rax,%rax
40a3(5): mov $0x80,%edx
40a8(4): cmove %rdx,%rax
40ac(3): test %rax,%rax
40af(2): jns 0xffffffe3(%rip)
40b1(4): sub $0x8,%rsp
40b5(5): call 0xab(%rip)

"xzalloc" :
40c0(1): push %rbx
40c1(3): mov %rdi,%rbx
40c4(5): call 0xfffffe4c(%rip)
40c9(3): mov %rbx,%rdx
40cc(2): xor %esi,%esi
40ce(3): mov %rax,%rdi
40d1(1): pop %rbx
40d2(5): jmp 0xffffd2ae(%rip)

"xcalloc" :
40e0(3): mov %rdi,%rax
40e3(4): sub $0x8,%rsp
40e7(3): mul %rax,%rsi,%rdx
40ea(3): seto %dl
40ed(3): test %rax,%rax
40f0(2): js 0x19(%rip)
40f2(3): movzx %dl,%edx
40f5(3): test %rdx,%rdx
40f8(2): jnz 0x11(%rip)
40fa(5): call 0xffffd2b6(%rip)
40ff(3): test %rax,%rax
4102(2): jz 0x7(%rip)
4104(4): add $0x8,%rsp
4108(1): ret near (%rsp)
4109(5): call 0x57(%rip)

"xmemdup" :
4110(1): push %rbp
4111(1): push %rbx
4112(3): mov %rdi,%rbp
4115(3): mov %rsi,%rdi
4118(3): mov %rsi,%rbx
411b(4): sub $0x8,%rsp
411f(5): call 0xfffffdf1(%rip)
4124(4): add $0x8,%rsp
4128(3): mov %rbx,%rdx
412b(3): mov %rbp,%rsi
412e(1): pop %rbx
412f(1): pop %rbp
4130(3): mov %rax,%rdi
4133(5): jmp 0xffffd28d(%rip)

"xstrdup" :
4140(1): push %rbx
4141(3): mov %rdi,%rbx
4144(5): call 0xffffd1dc(%rip)
4149(3): mov %rbx,%rdi
414c(4): lea 0x1(%rax),%rsi
4150(1): pop %rbx
4151(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4160(7): lea 0xf28(%rip),%rsi
4167(4): sub $0x8,%rsp
416b(5): mov $0x5,%edx
4170(2): xor %edi,%edi
4172(5): call 0xffffd18e(%rip)
4177(6): mov 0x202e9b(%rip),%edi
417d(7): lea 0x68c(%rip),%rdx
4184(3): mov %rax,%rcx
4187(2): xor %esi,%esi
4189(2): xor %eax,%eax
418b(5): call 0xffffd2d5(%rip)
4190(5): call 0xffffd0d0(%rip)

"rpl_mbrtowc" :
41a0(2): push %r13
41a2(2): push %r12
41a4(3): mov %rsi,%r13
41a7(1): push %rbp
41a8(1): push %rbx
41a9(3): mov %rdi,%rbx
41ac(3): mov %rdx,%r12
41af(4): sub $0x18,%rsp
41b3(9): mov $0x28,%rax
41bc(5): mov %rax,0x8(%rsp)
41c1(2): xor %eax,%eax
41c3(5): lea 0x4(%rsp),%rax
41c8(3): test %rdi,%rdi
41cb(4): cmove %rax,%rbx
41cf(3): mov %rbx,%rdi
41d2(5): call 0xffffd17e(%rip)
41d7(4): cmp $0xfffffffd,%rax
41db(3): mov %rax,%rbp
41de(2): jbe 0x22(%rip)
41e0(3): test %r12,%r12
41e3(2): jz 0x1d(%rip)
41e5(2): xor %edi,%edi
41e7(5): call 0xc9(%rip)
41ec(2): test %al,%al
41ee(2): jnz 0x12(%rip)
41f0(5): movzx 0x0(%r13),%eax
41f5(5): mov $0x1,%ebp
41fa(2): mov %eax,(%rbx)
41fc(4): nop 0x0(%rax)
4200(5): mov 0x8(%rsp),%rdx
4205(9): xor $0x28,%rdx
420e(3): mov %rbp,%rax
4211(2): jnz 0xd(%rip)
4213(4): add $0x18,%rsp
4217(1): pop %rbx
4218(1): pop %rbp
4219(2): pop %r12
421b(2): pop %r13
421d(1): ret near (%rsp)
421e(5): call 0xffffd112(%rip)

"close_stream" :
4230(2): push %r12
4232(1): push %rbp
4233(3): mov %rdi,%rbp
4236(1): push %rbx
4237(5): call 0xffffd069(%rip)
423c(3): mov 0x0(%rbp),%ebx
423f(3): mov %rbp,%rdi
4242(3): mov %rax,%r12
4245(5): call 0x10b(%rip)
424a(3): and $0x20,%ebx
424d(2): test %ebx,%ebx
424f(2): jnz 0x19(%rip)
4251(2): test %eax,%eax
4253(2): jz 0xc(%rip)
4255(3): test %r12,%r12
4258(5): mov $0xffffffff,%eax
425d(2): jz 0x3b(%rip)
425f(1): pop %rbx
4260(1): pop %rbp
4261(2): pop %r12
4263(1): ret near (%rsp)
4264(4): nop 0x0(%rax)
4268(2): test %eax,%eax
426a(2): jnz 0x1e(%rip)
426c(5): call 0xffffd004(%rip)
4271(6): mov $0x0,(%rax)
4277(5): mov $0xffffffff,%eax
427c(1): pop %rbx
427d(1): pop %rbp
427e(2): pop %r12
4280(1): ret near (%rsp)
4281(7): nop 0x0(%rax)
4288(1): pop %rbx
4289(5): mov $0xffffffff,%eax
428e(1): pop %rbp
428f(2): pop %r12
4291(1): ret near (%rsp)
4292(6): nop 0x0(%rax,%rax,1)
4298(5): call 0xffffcfd8(%rip)
429d(3): cmp $0x9,(%rax)
42a0(1): pop %rbx
42a1(1): pop %rbp
42a2(2): pop %r12
42a4(3): setnz %al
42a7(3): movzx %al,%eax
42aa(2): neg %eax
42ac(1): ret near (%rsp)

"hard_locale" :
42b0(4): sub $0x8,%rsp
42b4(2): xor %esi,%esi
42b6(5): call 0xffffd18a(%rip)
42bb(3): mov %rax,%rdx
42be(5): mov $0x1,%eax
42c3(3): test %rdx,%rdx
42c6(2): jz 0x1f(%rip)
42c8(7): lea 0xdd1(%rip),%rdi
42cf(5): mov $0x2,%ecx
42d4(3): mov %rdx,%rsi
42d7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
42d9(3): setnbe %cl
42dc(3): sbb $0x0,%cl
42df(2): xor %eax,%eax
42e1(2): test %cl,%cl
42e3(2): jnz 0xd(%rip)
42e5(4): add $0x8,%rsp
42e9(1): ret near (%rsp)
42ea(6): nop 0x0(%rax,%rax,1)
42f0(7): lea 0xdab(%rip),%rdi
42f7(5): mov $0x6,%ecx
42fc(3): mov %rdx,%rsi
42ff(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4301(3): setnbe %al
4304(2): sbb $0x0,%al
4306(2): test %al,%al
4308(3): setnz %al
430b(4): add $0x8,%rsp
430f(1): ret near (%rsp)

"locale_charset" :
4310(4): sub $0x8,%rsp
4314(5): mov $0xe,%edi
4319(5): call 0xffffd0e7(%rip)
431e(3): test %rax,%rax
4321(2): jz 0x1f(%rip)
4323(3): cmp $0x0,(%rax)
4326(7): lea 0xd7b(%rip),%rdx
432d(4): cmove %rdx,%rax
4331(4): add $0x8,%rsp
4335(1): ret near (%rsp)
4336(a): nop 0x0(%rax,%rax,1)
4340(7): lea 0xd61(%rip),%rax
4347(4): add $0x8,%rsp
434b(1): ret near (%rsp)

"rpl_fclose" :
4350(2): push %r12
4352(1): push %rbp
4353(1): push %rbx
4354(3): mov %rdi,%rbx
4357(5): call 0xffffd079(%rip)
435c(2): test %eax,%eax
435e(3): mov %rbx,%rdi
4361(2): js 0x56(%rip)
4363(5): call 0xffffd0ad(%rip)
4368(2): test %eax,%eax
436a(2): jnz 0x2e(%rip)
436c(3): mov %rbx,%rdi
436f(5): call 0x61(%rip)
4374(2): test %eax,%eax
4376(2): jz 0x3e(%rip)
4378(5): call 0xffffcef8(%rip)
437d(3): mov (%rax),%r12d
4380(3): mov %rbx,%rdi
4383(3): mov %rax,%rbp
4386(5): call 0xffffcf5a(%rip)
438b(3): test %r12d,%r12d
438e(2): jnz 0x32(%rip)
4390(1): pop %rbx
4391(1): pop %rbp
4392(2): pop %r12
4394(1): ret near (%rsp)
4395(3): nop (%rax)
4398(3): mov %rbx,%rdi
439b(5): call 0xffffd035(%rip)
43a0(2): xor %esi,%esi
43a2(5): mov $0x1,%edx
43a7(2): mov %eax,%edi
43a9(5): call 0xffffcfc7(%rip)
43ae(4): cmp $0xffffffff,%rax
43b2(2): jnz 0xffffffba(%rip)
43b4(3): mov %rbx,%rdi
43b7(1): pop %rbx
43b8(1): pop %rbp
43b9(2): pop %r12
43bb(5): jmp 0xffffcf25(%rip)
43c0(4): mov %r12d,0x0(%rbp)
43c4(5): mov $0xffffffff,%eax
43c9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
43d0(3): test %rdi,%rdi
43d3(1): push %rbx
43d4(3): mov %rdi,%rbx
43d7(2): jz 0x13(%rip)
43d9(5): call 0xffffd037(%rip)
43de(2): test %eax,%eax
43e0(2): jz 0xa(%rip)
43e2(6): test $0x100,(%rbx)
43e8(2): jnz 0x10(%rip)
43ea(3): mov %rbx,%rdi
43ed(1): pop %rbx
43ee(5): jmp 0xffffd002(%rip)
43f3(5): nop 0x0(%rax,%rax,1)
43f8(3): mov %rbx,%rdi
43fb(5): mov $0x1,%edx
4400(2): xor %esi,%esi
4402(5): call 0xe(%rip)
4407(3): mov %rbx,%rdi
440a(1): pop %rbx
440b(5): jmp 0xffffcfe5(%rip)

"rpl_fseeko" :
4410(4): mov 0x8(%rdi),%rax
4414(4): cmp %rax,0x10(%rdi)
4418(2): jz 0x8(%rip)
441a(5): jmp 0xffffd056(%rip)
441f(1): nop 
4420(4): mov 0x20(%rdi),%rax
4424(4): cmp %rax,0x28(%rdi)
4428(2): jnz 0xfffffff2(%rip)
442a(5): cmp $0x0,0x48(%rdi)
442f(2): jnz 0xffffffeb(%rip)
4431(2): push %r12
4433(1): push %rbp
4434(3): mov %edx,%r12d
4437(1): push %rbx
4438(3): mov %rsi,%rbp
443b(3): mov %rdi,%rbx
443e(5): call 0xffffcf92(%rip)
4443(3): mov %r12d,%edx
4446(3): mov %rbp,%rsi
4449(2): mov %eax,%edi
444b(5): call 0xffffcf25(%rip)
4450(4): cmp $0xffffffff,%rax
4454(2): jz 0xe(%rip)
4456(3): and $0xef,(%rbx)
4459(7): mov %rax,0x90(%rbx)
4460(2): xor %eax,%eax
4462(1): pop %rbx
4463(1): pop %rbp
4464(2): pop %r12
4466(1): ret near (%rsp)

"__libc_csu_init" :
4470(2): push %r15
4472(2): push %r14
4474(3): mov %rdx,%r15
4477(2): push %r13
4479(2): push %r12
447b(7): lea 0x2026ee(%rip),%r12
4482(1): push %rbp
4483(7): lea 0x2026ee(%rip),%rbp
448a(1): push %rbx
448b(3): mov %edi,%r13d
448e(3): mov %rsi,%r14
4491(3): sub %r12,%rbp
4494(4): sub $0x8,%rsp
4498(4): sar $0x3,%rbp
449c(5): call 0xffffcd84(%rip)
44a1(3): test %rbp,%rbp
44a4(2): jz 0x22(%rip)
44a6(2): xor %ebx,%ebx
44a8(8): nop 0x0(%rax,%rax,1)
44b0(3): mov %r15,%rdx
44b3(3): mov %r14,%rsi
44b6(3): mov %r13d,%edi
44b9(4): call 0x0(%r12,%rbx,8)
44bd(4): add $0x1,%rbx
44c1(3): cmp %rbx,%rbp
44c4(2): jnz 0xffffffec(%rip)
44c6(4): add $0x8,%rsp
44ca(1): pop %rbx
44cb(1): pop %rbp
44cc(2): pop %r12
44ce(2): pop %r13
44d0(2): pop %r14
44d2(2): pop %r15
44d4(1): ret near (%rsp)

"atexit" :
44f0(7): mov 0x202b11(%rip),%rdx
44f7(2): xor %esi,%esi
44f9(5): jmp 0xffffcf87(%rip)

"_fini" :
4500(4): sub $0x8,%rsp
4504(4): add $0x8,%rsp
4508(1): ret near (%rsp)

