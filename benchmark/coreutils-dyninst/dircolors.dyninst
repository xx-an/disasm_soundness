
"getenv@plt" :
1d00(6): jmp 0x20813a(%rip)
1d06(5): push $0x0

"abort@plt" :
1d10(6): jmp 0x208132(%rip)
1d16(5): push $0x1

"__errno_location@plt" :
1d20(6): jmp 0x20812a(%rip)
1d26(5): push $0x2

"strncmp@plt" :
1d30(6): jmp 0x208122(%rip)
1d36(5): push $0x3

"_exit@plt" :
1d40(6): jmp 0x20811a(%rip)
1d46(5): push $0x4

"__fpending@plt" :
1d50(6): jmp 0x208112(%rip)
1d56(5): push $0x5

"puts@plt" :
1d60(6): jmp 0x20810a(%rip)
1d66(5): push $0x6

"textdomain@plt" :
1d70(6): jmp 0x208102(%rip)
1d76(5): push $0x7

"fclose@plt" :
1d80(6): jmp 0x2080fa(%rip)
1d86(5): push $0x8

"bindtextdomain@plt" :
1d90(6): jmp 0x2080f2(%rip)
1d96(5): push $0x9

"dcgettext@plt" :
1da0(6): jmp 0x2080ea(%rip)
1da6(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1db0(6): jmp 0x2080e2(%rip)
1db6(5): push $0xb

"strlen@plt" :
1dc0(6): jmp 0x2080da(%rip)
1dc6(5): push $0xc

"__stack_chk_fail@plt" :
1dd0(6): jmp 0x2080d2(%rip)
1dd6(5): push $0xd

"getopt_long@plt" :
1de0(6): jmp 0x2080ca(%rip)
1de6(5): push $0xe

"mbrtowc@plt" :
1df0(6): jmp 0x2080c2(%rip)
1df6(5): push $0xf

"dup2@plt" :
1e00(6): jmp 0x2080ba(%rip)
1e06(5): push $0x10

"strrchr@plt" :
1e10(6): jmp 0x2080b2(%rip)
1e16(5): push $0x11

"lseek@plt" :
1e20(6): jmp 0x2080aa(%rip)
1e26(5): push $0x12

"fnmatch@plt" :
1e30(6): jmp 0x2080a2(%rip)
1e36(5): push $0x13

"memset@plt" :
1e40(6): jmp 0x20809a(%rip)
1e46(5): push $0x14

"freopen@plt" :
1e50(6): jmp 0x208092(%rip)
1e56(5): push $0x15

"close@plt" :
1e60(6): jmp 0x20808a(%rip)
1e66(5): push $0x16

"strndup@plt" :
1e70(6): jmp 0x208082(%rip)
1e76(5): push $0x17

"memcmp@plt" :
1e80(6): jmp 0x20807a(%rip)
1e86(5): push $0x18

"fputs_unlocked@plt" :
1e90(6): jmp 0x208072(%rip)
1e96(5): push $0x19

"calloc@plt" :
1ea0(6): jmp 0x20806a(%rip)
1ea6(5): push $0x1a

"__getdelim@plt" :
1eb0(6): jmp 0x208062(%rip)
1eb6(5): push $0x1b

"strcmp@plt" :
1ec0(6): jmp 0x20805a(%rip)
1ec6(5): push $0x1c

"memcpy@plt" :
1ed0(6): jmp 0x208052(%rip)
1ed6(5): push $0x1d

"fileno@plt" :
1ee0(6): jmp 0x20804a(%rip)
1ee6(5): push $0x1e

"fflush@plt" :
1ef0(6): jmp 0x208042(%rip)
1ef6(5): push $0x1f

"nl_langinfo@plt" :
1f00(6): jmp 0x20803a(%rip)
1f06(5): push $0x20

"__freading@plt" :
1f10(6): jmp 0x208032(%rip)
1f16(5): push $0x21

"fwrite_unlocked@plt" :
1f20(6): jmp 0x20802a(%rip)
1f26(5): push $0x22

"realloc@plt" :
1f30(6): jmp 0x208022(%rip)
1f36(5): push $0x23

"setlocale@plt" :
1f40(6): jmp 0x20801a(%rip)
1f46(5): push $0x24

"__printf_chk@plt" :
1f50(6): jmp 0x208012(%rip)
1f56(5): push $0x25

"error@plt" :
1f60(6): jmp 0x20800a(%rip)
1f66(5): push $0x26

"open@plt" :
1f70(6): jmp 0x208002(%rip)
1f76(5): push $0x27

"fseeko@plt" :
1f80(6): jmp 0x207ffa(%rip)
1f86(5): push $0x28

"__cxa_atexit@plt" :
1f90(6): jmp 0x207ff2(%rip)
1f96(5): push $0x29

"exit@plt" :
1fa0(6): jmp 0x207fea(%rip)
1fa6(5): push $0x2a

"fwrite@plt" :
1fb0(6): jmp 0x207fe2(%rip)
1fb6(5): push $0x2b

"__fprintf_chk@plt" :
1fc0(6): jmp 0x207fda(%rip)
1fc6(5): push $0x2c

"mbsinit@plt" :
1fd0(6): jmp 0x207fd2(%rip)
1fd6(5): push $0x2d

"iswprint@plt" :
1fe0(6): jmp 0x207fca(%rip)
1fe6(5): push $0x2e

"__ctype_b_loc@plt" :
1ff0(6): jmp 0x207fc2(%rip)
1ff6(5): push $0x2f

"free@plt" :
2000(6): jmp 0x207fba(%rip)
2006(2): nop 

"malloc@plt" :
2008(6): jmp 0x207fd2(%rip)
200e(2): nop 

"__cxa_finalize@plt" :
2010(6): jmp 0x207fda(%rip)
2016(2): nop 

".plt.got" :
2000(6): jmp 0x207fba(%rip)
2006(2): nop 
2008(6): jmp 0x207fd2(%rip)
200e(2): nop 
2010(6): jmp 0x207fda(%rip)
2016(2): nop 

"_init" :
1cd0(4): sub $0x8,%rsp
1cd4(7): mov 0x2082fd(%rip),%rax
1cdb(3): test %rax,%rax
1cde(2): jz 0x4(%rip)
1ce0(2): call %rax
1ce2(4): add $0x8,%rsp
1ce6(1): ret near (%rsp)

"main" :
2020(2): push %r14
2022(2): push %r13
2024(6): mov $0x2,%r13d
202a(2): push %r12
202c(1): push %rbp
202d(2): mov %edi,%ebp
202f(1): push %rbx
2030(3): mov (%rsi),%rdi
2033(3): mov %rsi,%rbx
2036(3): xor %r12d,%r12d
2039(5): call 0x14d7(%rip)
203e(7): lea 0x4280(%rip),%rsi
2045(5): mov $0x6,%edi
204a(5): call 0xfffffef6(%rip)
204f(7): lea 0x4283(%rip),%rsi
2056(7): lea 0x421c(%rip),%rdi
205d(5): call 0xfffffd33(%rip)
2062(7): lea 0x4210(%rip),%rdi
2069(5): call 0xfffffd07(%rip)
206e(7): lea 0x113b(%rip),%rdi
2075(5): call 0x410b(%rip)
207a(7): lea 0x2077df(%rip),%rcx
2081(7): lea 0x4278(%rip),%rdx
2088(3): xor %r8d,%r8d
208b(3): mov %rbx,%rsi
208e(2): mov %ebp,%edi
2090(5): call 0xfffffd50(%rip)
2095(3): cmp $0xff,%eax
2098(6): jz 0x83(%rip)
209e(3): cmp $0x62,%eax
20a1(2): jz 0x5f(%rip)
20a3(2): jle 0x1d(%rip)
20a5(3): cmp $0x63,%eax
20a8(2): jz 0x68(%rip)
20aa(3): cmp $0x70,%eax
20ad(6): jnz 0x33b(%rip)
20b3(6): mov $0x1,%r12d
20b9(2): jmp 0xffffffc1(%rip)
20bb(5): nop 0x0(%rax,%rax,1)
20c0(5): cmp $0xffffff7d,%eax
20c5(6): jnz 0x2dc(%rip)
20cb(7): mov 0x207fd6(%rip),%rdi
20d2(7): mov 0x207f37(%rip),%rcx
20d9(7): lea 0x4211(%rip),%r8
20e0(7): lea 0x418e(%rip),%rdx
20e7(7): lea 0x40e9(%rip),%rsi
20ee(3): xor %r9d,%r9d
20f1(2): xor %eax,%eax
20f3(5): call 0x360d(%rip)
20f8(2): xor %edi,%edi
20fa(5): call 0xfffffea6(%rip)
20ff(1): nop 
2100(3): xor %r13d,%r13d
2103(5): jmp 0xffffff77(%rip)
2108(8): nop 0x0(%rax,%rax,1)
2110(6): mov $0x1,%r13d
2116(5): jmp 0xffffff64(%rip)
211b(7): movsxd 0x207f96(%rip),%rax
2122(2): sub %eax,%ebp
2124(4): cmp $0x2,%r13d
2128(4): lea 0x0(%rbx,%rax,8),%rbx
212c(2): jz 0xb(%rip)
212e(3): test %r12b,%r12b
2131(6): jnz 0x2e5(%rip)
2137(3): mov %r12d,%eax
213a(3): xor $0x1,%eax
213d(3): movzx %al,%eax
2140(2): cmp %ebp,%eax
2142(6): jl 0x26d(%rip)
2148(3): test %r12b,%r12b
214b(2): jz 0x4c(%rip)
214d(7): lea 0x478c(%rip),%rbx
2154(4): or $0xffffffff,%rbp
2158(3): mov %rbx,%r13
215b(2): jmp 0x1d(%rip)
215d(3): mov %r13,%rdi
2160(5): call 0xfffffc00(%rip)
2165(2): xor %eax,%eax
2167(3): mov %r13,%rdi
216a(3): mov %rbp,%rcx
216d(2): REPNZ scasb rdi(%es,10),%al
216f(3): mov %rcx,%rax
2172(3): not %rax
2175(3): add %rax,%r13
2178(3): mov %r13,%rax
217b(3): sub %rbx,%rax
217e(6): cmp $0x10c3,%rax
2184(2): jbe 0xffffffd9(%rip)
2186(4): xor $0x1,%r12d
218a(1): pop %rbx
218b(4): movzx %r12b,%eax
218f(1): pop %rbp
2190(2): pop %r12
2192(2): pop %r13
2194(2): pop %r14
2196(1): ret near (%rsp)
2197(4): cmp $0x2,%r13d
219b(6): jz 0x166(%rip)
21a1(7): mov 0x207e18(%rip),%r8
21a8(7): mov 0x207e31(%rip),%rcx
21af(7): lea 0x207f4a(%rip),%rdi
21b6(2): xor %edx,%edx
21b8(2): xor %esi,%esi
21ba(5): call 0x3c16(%rip)
21bf(2): test %ebp,%ebp
21c1(6): jz 0x12f(%rip)
21c7(3): mov (%rbx),%rbx
21ca(7): lea 0x5839(%rip),%rsi
21d1(3): mov %rbx,%rdi
21d4(5): call 0xfffffcec(%rip)
21d9(2): test %eax,%eax
21db(2): jz 0x21(%rip)
21dd(7): mov 0x207ecc(%rip),%rdx
21e4(7): lea 0x57c8(%rip),%rsi
21eb(3): mov %rbx,%rdi
21ee(5): call 0x1172(%rip)
21f3(3): test %rax,%rax
21f6(6): jz 0x16e(%rip)
21fc(7): mov 0x207ead(%rip),%rdi
2203(3): mov %rbx,%rsi
2206(5): call 0x59a(%rip)
220b(7): mov 0x207e9e(%rip),%rdi
2212(2): mov %eax,%ebp
2214(5): call 0x38fc(%rip)
2219(2): test %eax,%eax
221b(6): jnz 0x149(%rip)
2221(3): mov %ebp,%r12d
2224(3): test %r12b,%r12b
2227(6): jz 0xffffff5f(%rip)
222d(7): mov 0x207ee4(%rip),%rax
2234(7): mov 0x207ed5(%rip),%rbp
223b(3): mov %rax,%rbx
223e(3): sub %rbp,%rbx
2241(3): cmp %rbp,%rax
2244(6): jz 0x151(%rip)
224a(7): mov 0x207edf(%rip),%rdx
2251(7): mov 0x207ec8(%rip),%rcx
2258(3): add %rdx,%rax
225b(3): not %rdx
225e(3): mov %rcx,%rsi
2261(3): and %rdx,%rax
2264(7): mov 0x207e9d(%rip),%rdx
226b(7): mov %rax,0x207ea6(%rip)
2272(3): sub %rdx,%rsi
2275(3): sub %rdx,%rax
2278(3): cmp %rsi,%rax
227b(2): jbe 0x9(%rip)
227d(7): mov %rcx,0x207e94(%rip)
2284(7): mov 0x207e8d(%rip),%rax
228b(7): lea 0x4031(%rip),%r14
2292(3): test %r13d,%r13d
2295(7): mov 0x207e0c(%rip),%rsi
229c(7): lea 0x4023(%rip),%rdi
22a3(7): mov %rax,0x207e66(%rip)
22aa(7): lea 0x3ff1(%rip),%rax
22b1(4): cmove %rax,%r14
22b5(7): lea 0x3ffb(%rip),%rax
22bc(4): cmove %rax,%rdi
22c0(5): call 0xfffffbd0(%rip)
22c5(7): mov 0x207ddc(%rip),%rcx
22cc(3): mov %rbp,%rdi
22cf(3): mov %rbx,%rdx
22d2(5): mov $0x1,%esi
22d7(5): call 0xfffffc49(%rip)
22dc(7): mov 0x207dc5(%rip),%rsi
22e3(3): mov %r14,%rdi
22e6(5): call 0xfffffbaa(%rip)
22eb(5): jmp 0xfffffe9b(%rip)
22f0(2): xor %esi,%esi
22f2(2): xor %edi,%edi
22f4(5): call 0x4ac(%rip)
22f9(3): mov %eax,%r12d
22fc(5): jmp 0xffffff28(%rip)
2301(7): lea 0x3ffc(%rip),%rdi
2308(5): call 0xfffff9f8(%rip)
230d(3): test %rax,%rax
2310(6): jz 0xe2(%rip)
2316(3): cmp $0x0,(%rax)
2319(6): jz 0xd9(%rip)
231f(3): mov %rax,%rdi
2322(6): mov $0x1,%r13d
2328(5): call 0xf38(%rip)
232d(7): lea 0x3fd7(%rip),%rsi
2334(3): mov %rax,%rdi
2337(3): mov %rax,%r14
233a(5): call 0xfffffb86(%rip)
233f(2): test %eax,%eax
2341(6): jz 0xfffffe60(%rip)
2347(7): lea 0x3fbc(%rip),%rsi
234e(3): mov %r14,%rdi
2351(3): xor %r13d,%r13d
2354(5): call 0xfffffb6c(%rip)
2359(2): test %eax,%eax
235b(4): setz %r13b
235f(5): jmp 0xfffffe42(%rip)
2364(3): mov %rbx,%rdx
2367(2): xor %edi,%edi
2369(5): mov $0x3,%esi
236e(5): call 0x2ce2(%rip)
2373(3): mov %rax,%rbx
2376(5): call 0xfffff9aa(%rip)
237b(2): mov (%rax),%esi
237d(7): lea 0x5635(%rip),%rdx
2384(3): mov %rbx,%rcx
2387(2): xor %edi,%edi
2389(2): xor %eax,%eax
238b(5): call 0xfffffbd5(%rip)
2390(5): jmp 0xfffffdf6(%rip)
2395(7): or $0x2,0x207db4(%rip)
239c(5): jmp 0xfffffeae(%rip)
23a1(5): cmp $0xffffff7e,%eax
23a6(2): jnz 0x42(%rip)
23a8(2): xor %edi,%edi
23aa(5): call 0xa26(%rip)
23af(3): test %r12b,%r12b
23b2(6): jnz 0x87(%rip)
23b8(4): mov 0x8(%rbx),%rdi
23bc(5): call 0x2e64(%rip)
23c1(7): lea 0x3f47(%rip),%rsi
23c8(3): mov %rax,%rbx
23cb(5): mov $0x5,%edx
23d0(2): xor %edi,%edi
23d2(5): call 0xfffff9ce(%rip)
23d7(3): mov %rbx,%rcx
23da(3): mov %rax,%rdx
23dd(2): xor %esi,%esi
23df(2): xor %edi,%edi
23e1(2): xor %eax,%eax
23e3(5): call 0xfffffb7d(%rip)
23e8(5): mov $0x1,%edi
23ed(5): call 0x9e3(%rip)
23f2(7): lea 0x4467(%rip),%rsi
23f9(5): mov $0x5,%edx
23fe(2): xor %edi,%edi
2400(5): call 0xfffff9a0(%rip)
2405(2): xor %esi,%esi
2407(3): mov %rax,%rdx
240a(5): mov $0x1,%edi
240f(2): xor %eax,%eax
2411(5): call 0xfffffb4f(%rip)
2416(7): lea 0x43db(%rip),%rsi
241d(2): xor %edi,%edi
241f(5): mov $0x5,%edx
2424(5): call 0xfffff97c(%rip)
2429(2): xor %esi,%esi
242b(3): mov %rax,%rdx
242e(2): xor %edi,%edi
2430(2): xor %eax,%eax
2432(5): call 0xfffffb2e(%rip)
2437(2): jmp 0xffffffb1(%rip)
2439(3): mov (%rbx),%rdi
243c(5): call 0x2de4(%rip)
2441(7): lea 0x3ec7(%rip),%rsi
2448(3): mov %rax,%rbx
244b(2): xor %edi,%edi
244d(5): mov $0x5,%edx
2452(5): call 0xfffff94e(%rip)
2457(3): mov %rbx,%rcx
245a(3): mov %rax,%rdx
245d(2): xor %esi,%esi
245f(2): xor %edi,%edi
2461(2): xor %eax,%eax
2463(5): call 0xfffffafd(%rip)
2468(7): lea 0x4431(%rip),%rsi
246f(2): xor %edi,%edi
2471(5): mov $0x5,%edx
2476(5): call 0xfffff92a(%rip)
247b(7): mov 0x207c5e(%rip),%rdi
2482(7): lea 0x5a67(%rip),%rdx
2489(3): mov %rax,%rcx
248c(5): mov $0x1,%esi
2491(2): xor %eax,%eax
2493(5): call 0xfffffb2d(%rip)
2498(5): jmp 0xffffff50(%rip)

"_start" :
24a0(2): xor %ebp,%ebp
24a2(3): mov %rdx,%r9
24a5(1): pop %rsi
24a6(3): mov %rsp,%rdx
24a9(4): and $0xfffffff0,%rsp
24ad(1): push %rax
24ae(1): push %rsp
24af(7): lea 0x3cba(%rip),%r8
24b6(7): lea 0x3c43(%rip),%rcx
24bd(7): lea 0xfffffb5c(%rip),%rdi
24c4(6): call 0x207b06(%rip)
24ca(1): hlt 

"deregister_tm_clones" :
24d0(7): lea 0x207bb1(%rip),%rdi
24d7(1): push %rbp
24d8(7): lea 0x207ba9(%rip),%rax
24df(3): cmp %rdi,%rax
24e2(3): mov %rsp,%rbp
24e5(2): jz 0x1b(%rip)
24e7(7): mov 0x207ada(%rip),%rax
24ee(3): test %rax,%rax
24f1(2): jz 0xf(%rip)
24f3(1): pop %rbp
24f4(2): jmp %rax
24f6(a): nop 0x0(%rax,%rax,1)
2500(1): pop %rbp
2501(1): ret near (%rsp)

"register_tm_clones" :
2510(7): lea 0x207b71(%rip),%rdi
2517(7): lea 0x207b6a(%rip),%rsi
251e(1): push %rbp
251f(3): sub %rdi,%rsi
2522(3): mov %rsp,%rbp
2525(4): sar $0x3,%rsi
2529(3): mov %rsi,%rax
252c(4): shr $0x3f,%rax
2530(3): add %rax,%rsi
2533(3): sar $0x1,%rsi
2536(2): jz 0x1a(%rip)
2538(7): mov 0x207aa9(%rip),%rax
253f(3): test %rax,%rax
2542(2): jz 0xe(%rip)
2544(1): pop %rbp
2545(2): jmp %rax
2547(9): nop 0x0(%rax,%rax,1)
2550(1): pop %rbp
2551(1): ret near (%rsp)

"__do_global_dtors_aux" :
2560(7): cmp $0x0,0x207b81(%rip)
2567(2): jnz 0x31(%rip)
2569(8): cmp $0x0,0x207a7f(%rip)
2571(1): push %rbp
2572(3): mov %rsp,%rbp
2575(2): jz 0xe(%rip)
2577(7): mov 0x207a8a(%rip),%rdi
257e(5): call 0xfffffa92(%rip)
2583(5): call 0xffffff4d(%rip)
2588(7): mov $0x1,0x207b59(%rip)
258f(1): pop %rbp
2590(1): ret near (%rsp)
2591(7): nop 0x0(%rax)
2598(2): REP ret near (%rsp)

"frame_dummy" :
25a0(1): push %rbp
25a1(3): mov %rsp,%rbp
25a4(1): pop %rbp
25a5(5): jmp 0xffffff6b(%rip)

"append_quoted" :
25b0(3): movzx (%rdi),%edx
25b3(2): test %dl,%dl
25b5(6): jz 0x1bb(%rip)
25bb(2): push %r12
25bd(6): mov $0x1,%r12d
25c3(1): push %rbp
25c4(7): lea 0x207b35(%rip),%rbp
25cb(1): push %rbx
25cc(3): mov %rdi,%rbx
25cf(2): jmp 0x76(%rip)
25d1(7): nop 0x0(%rax)
25d8(3): cmp $0x27,%dl
25db(6): jz 0xc5(%rip)
25e1(3): cmp $0x3a,%dl
25e4(6): jnz 0xac(%rip)
25ea(3): test %r12b,%r12b
25ed(6): jz 0xa3(%rip)
25f3(3): cmp %rax,%rcx
25f6(6): jz 0x182(%rip)
25fc(4): lea 0x1(%rax),%rdx
2600(7): mov %rdx,0x207b11(%rip)
2607(3): mov $0x5c,(%rax)
260a(7): mov 0x207b0f(%rip),%rcx
2611(7): mov 0x207b00(%rip),%rax
2618(8): nop 0x0(%rax,%rax,1)
2620(3): cmp %rax,%rcx
2623(2): jz 0x4e(%rip)
2625(4): lea 0x1(%rax),%rdx
2629(4): add $0x1,%rbx
262d(7): mov %rdx,0x207ae4(%rip)
2634(4): movzx 0xffffffff(%rbx),%edx
2638(2): mov %dl,(%rax)
263a(3): movzx (%rbx),%edx
263d(2): test %dl,%dl
263f(6): jz 0xd1(%rip)
2645(3): cmp $0x3d,%dl
2648(7): mov 0x207ad1(%rip),%rcx
264f(7): mov 0x207ac2(%rip),%rax
2656(2): jz 0xffffff94(%rip)
2658(6): jle 0xffffff80(%rip)
265e(3): cmp $0x5c,%dl
2661(2): jz 0x7(%rip)
2663(3): cmp $0x5e,%dl
2666(2): jnz 0x2a(%rip)
2668(4): xor $0x1,%r12d
266c(3): cmp %rax,%rcx
266f(2): jnz 0xffffffb6(%rip)
2671(5): mov $0x1,%esi
2676(3): mov %rbp,%rdi
2679(5): call 0x3797(%rip)
267e(7): mov 0x207a93(%rip),%rax
2685(2): jmp 0xffffffa0(%rip)
2687(9): nop 0x0(%rax,%rax,1)
2690(6): mov $0x1,%r12d
2696(2): jmp 0xffffff8a(%rip)
2698(8): nop 0x0(%rax,%rax,1)
26a0(3): cmp %rax,%rcx
26a3(2): jz 0x75(%rip)
26a5(4): lea 0x1(%rax),%rdx
26a9(7): mov %rdx,0x207a68(%rip)
26b0(3): mov $0x27,(%rax)
26b3(7): mov 0x207a5e(%rip),%rax
26ba(7): cmp %rax,0x207a5f(%rip)
26c1(6): jz 0x8f(%rip)
26c7(4): lea 0x1(%rax),%rdx
26cb(7): mov %rdx,0x207a46(%rip)
26d2(3): mov $0x5c,(%rax)
26d5(7): mov 0x207a3c(%rip),%rax
26dc(7): cmp %rax,0x207a3d(%rip)
26e3(2): jz 0x55(%rip)
26e5(4): lea 0x1(%rax),%rdx
26e9(6): mov $0x1,%r12d
26ef(7): mov %rdx,0x207a22(%rip)
26f6(3): mov $0x27,(%rax)
26f9(7): mov 0x207a20(%rip),%rcx
2700(7): mov 0x207a11(%rip),%rax
2707(5): jmp 0xffffff19(%rip)
270c(4): nop 0x0(%rax)
2710(1): pop %rbx
2711(1): pop %rbp
2712(2): pop %r12
2714(1): ret near (%rsp)
2715(3): nop (%rax)
2718(5): mov $0x1,%esi
271d(3): mov %rbp,%rdi
2720(5): call 0x36f0(%rip)
2725(7): mov 0x2079ec(%rip),%rax
272c(5): jmp 0xffffff79(%rip)
2731(7): nop 0x0(%rax)
2738(5): mov $0x1,%esi
273d(3): mov %rbp,%rdi
2740(5): call 0x36d0(%rip)
2745(7): mov 0x2079cc(%rip),%rax
274c(2): jmp 0xffffff99(%rip)
274e(2): nop 
2750(5): mov $0x1,%esi
2755(3): mov %rbp,%rdi
2758(5): call 0x36b8(%rip)
275d(7): mov 0x2079b4(%rip),%rax
2764(5): jmp 0xffffff63(%rip)
2769(7): nop 0x0(%rax)
2770(2): REP ret near (%rsp)
2772(6): nop 0x0(%rax,%rax,1)
2778(5): mov $0x1,%esi
277d(3): mov %rbp,%rdi
2780(5): call 0x3690(%rip)
2785(7): mov 0x20798c(%rip),%rax
278c(5): jmp 0xfffffe70(%rip)

"dc_parse_stream" :
27a0(2): push %r15
27a2(2): push %r14
27a4(3): mov %rdi,%r14
27a7(2): push %r13
27a9(2): push %r12
27ab(7): lea 0x39fe(%rip),%rdi
27b2(1): push %rbp
27b3(1): push %rbx
27b4(4): sub $0x48,%rsp
27b8(9): mov $0x28,%rax
27c1(5): mov %rax,0x38(%rsp)
27c6(2): xor %eax,%eax
27c8(5): mov %rsi,0x8(%rsp)
27cd(9): mov $0x0,0x28(%rsp)
27d6(9): mov $0x0,0x30(%rsp)
27df(5): call 0xfffff521(%rip)
27e4(3): test %rax,%rax
27e7(6): jz 0x401(%rip)
27ed(3): cmp $0x0,(%rax)
27f0(3): mov %rax,%rdi
27f3(7): lea 0x39aa(%rip),%rax
27fa(4): cmovne %rdi,%rax
27fe(5): mov %rax,0x10(%rsp)
2803(7): lea 0x40d6(%rip),%r12
280a(7): mov $0x3,(%rsp)
2811(5): mov $0x1,0x7(%rsp)
2816(2): xor %ebp,%ebp
2818(8): nop 0x0(%rax,%rax,1)
2820(4): add $0x1,%rbp
2824(3): test %r14,%r14
2827(6): jz 0x1a6(%rip)
282d(5): lea 0x30(%rsp),%rsi
2832(5): lea 0x28(%rsp),%rdi
2837(3): mov %r14,%rcx
283a(5): mov $0xa,%edx
283f(5): call 0xfffff671(%rip)
2844(3): test %rax,%rax
2847(6): jle 0x307(%rip)
284d(5): mov 0x28(%rsp),%r15
2852(5): call 0xfffff79e(%rip)
2857(3): mov (%rax),%rcx
285a(3): mov %rax,%r13
285d(4): movzx (%r15),%edx
2861(5): test $0x20,0x1(%rcx,%rdx,2)
2866(6): jnz 0x1aa(%rip)
286c(2): test %dl,%dl
286e(2): jz 0xffffffb2(%rip)
2870(3): cmp $0x23,%dl
2873(2): jz 0xffffffad(%rip)
2875(3): mov %r15,%rbx
2878(8): nop 0x0(%rax,%rax,1)
2880(4): add $0x1,%rbx
2884(3): movzx (%rbx),%eax
2887(3): mov %rax,%rdx
288a(4): movzx 0x0(%rcx,%rax,2),%eax
288e(4): shr $0xd,%ax
2892(3): xor $0x1,%eax
2895(2): test %dl,%dl
2897(3): setnz %dl
289a(2): test %al,%dl
289c(2): jnz 0xffffffe4(%rip)
289e(3): mov %rbx,%rsi
28a1(3): mov %r15,%rdi
28a4(3): sub %r15,%rsi
28a7(5): call 0x3249(%rip)
28ac(3): cmp $0x0,(%rbx)
28af(3): mov %rax,%r15
28b2(6): jz 0x16e(%rip)
28b8(4): mov 0x0(%r13),%rcx
28bc(4): nop 0x0(%rax)
28c0(4): add $0x1,%rbx
28c4(3): movzx (%rbx),%edx
28c7(5): test $0x20,0x1(%rcx,%rdx,2)
28cc(3): mov %rdx,%rax
28cf(2): jnz 0xfffffff1(%rip)
28d1(2): test %dl,%dl
28d3(6): jz 0x14d(%rip)
28d9(2): cmp $0x23,%al
28db(3): mov %rbx,%rdx
28de(2): jnz 0xd(%rip)
28e0(5): jmp 0x140(%rip)
28e5(3): nop (%rax)
28e8(3): mov %rsi,%rdx
28eb(4): movzx 0x1(%rdx),%eax
28ef(4): lea 0x1(%rdx),%rsi
28f3(2): test %al,%al
28f5(4): setnz %dil
28f9(2): cmp $0x23,%al
28fb(3): setnz %al
28fe(3): test %al,%dil
2901(2): jnz 0xffffffe7(%rip)
2903(4): movzx 0xffffffff(%rsi),%eax
2907(5): test $0x20,0x1(%rcx,%rax,2)
290c(6): jnz 0xec(%rip)
2912(3): sub %rbx,%rsi
2915(3): mov %rbx,%rdi
2918(5): call 0x31d8(%rip)
291d(3): test %r15,%r15
2920(3): mov %rax,%rbx
2923(6): jz 0xfffffefd(%rip)
2929(3): test %rax,%rax
292c(6): jz 0xfd(%rip)
2932(7): lea 0x3877(%rip),%rsi
2939(3): mov %r15,%rdi
293c(5): call 0x804(%rip)
2941(2): test %eax,%eax
2943(6): jz 0x13d(%rip)
2949(3): mov (%rsp),%eax
294c(3): cmp $0x2,%eax
294f(6): jz 0x161(%rip)
2955(2): test %eax,%eax
2957(2): jz 0x59(%rip)
2959(4): movzx (%r15),%eax
295d(2): cmp $0x2e,%al
295f(6): jz 0x164(%rip)
2965(2): cmp $0x2a,%al
2967(6): jz 0x219(%rip)
296d(7): lea 0x3841(%rip),%rsi
2974(3): mov %r15,%rdi
2977(5): call 0x7c9(%rip)
297c(2): test %eax,%eax
297e(2): jz 0x32(%rip)
2980(7): lea 0x3836(%rip),%rsi
2987(3): mov %r15,%rdi
298a(5): call 0x7b6(%rip)
298f(2): test %eax,%eax
2991(2): jz 0x1f(%rip)
2993(7): lea 0x3829(%rip),%rsi
299a(3): mov %r15,%rdi
299d(5): call 0x7a3(%rip)
29a2(2): test %eax,%eax
29a4(6): jnz 0x28f(%rip)
29aa(6): nop 0x0(%rax,%rax,1)
29b0(3): mov %r15,%rdi
29b3(5): call 0xfffff64d(%rip)
29b8(3): mov %rbx,%rdi
29bb(5): call 0xfffff645(%rip)
29c0(4): add $0x1,%rbp
29c4(3): test %r14,%r14
29c7(6): jnz 0xfffffe66(%rip)
29cd(7): lea 0x4fd0(%rip),%rax
29d4(3): cmp %rax,%r12
29d7(6): jz 0x181(%rip)
29dd(3): mov %r12,%rdi
29e0(3): mov %r12,%r15
29e3(5): call 0xfffff3dd(%rip)
29e8(5): lea 0x1(%r12,%rax,1),%r12
29ed(5): jmp 0xfffffe65(%rip)
29f2(6): nop 0x0(%rax,%rax,1)
29f8(4): sub $0x1,%rdx
29fc(3): movzx (%rdx),%eax
29ff(5): test $0x20,0x1(%rcx,%rax,2)
2a04(2): jnz 0xfffffff4(%rip)
2a06(4): lea 0x1(%rdx),%rsi
2a0a(5): jmp 0xffffff08(%rip)
2a0f(1): nop 
2a10(4): add $0x1,%r15
2a14(5): jmp 0xfffffe49(%rip)
2a19(7): nop 0x0(%rax)
2a20(3): test %r15,%r15
2a23(6): jz 0xfffffdfd(%rip)
2a29(5): mov 0x8(%rsp),%rdx
2a2e(5): mov $0x3,%esi
2a33(2): xor %edi,%edi
2a35(5): call 0x261b(%rip)
2a3a(7): lea 0x3a37(%rip),%rsi
2a41(3): mov %rax,%rbx
2a44(5): mov $0x5,%edx
2a49(2): xor %edi,%edi
2a4b(5): call 0xfffff355(%rip)
2a50(3): mov %rbp,%r8
2a53(3): mov %rax,%rdx
2a56(3): mov %rbx,%rcx
2a59(2): xor %esi,%esi
2a5b(2): xor %edi,%edi
2a5d(2): xor %eax,%eax
2a5f(5): call 0xfffff501(%rip)
2a64(3): mov %r15,%rdi
2a67(5): call 0xfffff599(%rip)
2a6c(5): mov $0x0,0x7(%rsp)
2a71(5): jmp 0xfffffdaf(%rip)
2a76(a): nop 0x0(%rax,%rax,1)
2a80(5): mov 0x10(%rsp),%rsi
2a85(2): xor %edx,%edx
2a87(3): mov %rbx,%rdi
2a8a(5): call 0xfffff3a6(%rip)
2a8f(2): test %eax,%eax
2a91(2): jz 0x13(%rip)
2a93(4): cmp $0x2,(%rsp)
2a97(7): mov $0x0,(%rsp)
2a9e(6): jnz 0xffffff12(%rip)
2aa4(7): mov $0x2,(%rsp)
2aab(5): jmp 0xffffff05(%rip)
2ab0(4): movzx (%r15),%eax
2ab4(7): mov $0x1,(%rsp)
2abb(2): cmp $0x2e,%al
2abd(6): jnz 0xfffffea8(%rip)
2ac3(7): mov 0x20764e(%rip),%rax
2aca(7): cmp %rax,0x20764f(%rip)
2ad1(6): jz 0x145(%rip)
2ad7(4): lea 0x1(%rax),%rdx
2adb(3): mov %r15,%rdi
2ade(7): mov %rdx,0x207633(%rip)
2ae5(3): mov $0x2a,(%rax)
2ae8(5): call 0xfffffac8(%rip)
2aed(7): mov 0x207624(%rip),%rax
2af4(7): cmp %rax,0x207625(%rip)
2afb(6): jz 0xfe(%rip)
2b01(4): lea 0x1(%rax),%rdx
2b05(3): mov %rbx,%rdi
2b08(7): mov %rdx,0x207609(%rip)
2b0f(3): mov $0x3d,(%rax)
2b12(5): call 0xfffffa9e(%rip)
2b17(7): mov 0x2075fa(%rip),%rax
2b1e(7): cmp %rax,0x2075fb(%rip)
2b25(6): jz 0xb0(%rip)
2b2b(4): lea 0x1(%rax),%rdx
2b2f(3): mov %r15,%rdi
2b32(7): mov %rdx,0x2075df(%rip)
2b39(3): mov $0x3a,(%rax)
2b3c(5): call 0xfffff4c4(%rip)
2b41(3): mov %rbx,%rdi
2b44(5): call 0xfffff4bc(%rip)
2b49(5): jmp 0xfffffe77(%rip)
2b4e(5): mov 0x28(%rsp),%rdi
2b53(5): call 0xfffff4ad(%rip)
2b58(5): mov 0x38(%rsp),%rdi
2b5d(9): xor $0x28,%rdi
2b66(5): movzx 0x7(%rsp),%eax
2b6b(6): jnz 0x253(%rip)
2b71(4): add $0x48,%rsp
2b75(1): pop %rbx
2b76(1): pop %rbp
2b77(2): pop %r12
2b79(2): pop %r13
2b7b(2): pop %r14
2b7d(2): pop %r15
2b7f(1): ret near (%rsp)
2b80(3): mov %r15,%rdi
2b83(5): call 0xfffffa2d(%rip)
2b88(7): mov 0x207589(%rip),%rax
2b8f(7): cmp %rax,0x20758a(%rip)
2b96(6): jz 0x162(%rip)
2b9c(7): mov 0x207575(%rip),%rax
2ba3(3): mov %rbx,%rdi
2ba6(4): lea 0x1(%rax),%rdx
2baa(7): mov %rdx,0x207567(%rip)
2bb1(3): mov $0x3d,(%rax)
2bb4(5): call 0xfffff9fc(%rip)
2bb9(7): mov 0x207558(%rip),%rax
2bc0(7): cmp %rax,0x207559(%rip)
2bc7(2): jz 0xe(%rip)
2bc9(7): mov 0x207548(%rip),%rax
2bd0(5): jmp 0xffffff5b(%rip)
2bd5(7): lea 0x207524(%rip),%rdi
2bdc(5): mov $0x1,%esi
2be1(5): call 0x322f(%rip)
2be6(2): jmp 0xffffffe3(%rip)
2be8(7): lea 0x35b5(%rip),%rax
2bef(5): mov %rax,0x10(%rsp)
2bf4(5): jmp 0xfffffc0f(%rip)
2bf9(7): lea 0x207500(%rip),%rdi
2c00(5): mov $0x1,%esi
2c05(5): call 0x320b(%rip)
2c0a(7): mov 0x207507(%rip),%rax
2c11(5): jmp 0xfffffef0(%rip)
2c16(7): lea 0x2074e3(%rip),%rdi
2c1d(5): mov $0x1,%esi
2c22(5): call 0x31ee(%rip)
2c27(7): mov 0x2074ea(%rip),%rax
2c2e(5): jmp 0xfffffea9(%rip)
2c33(3): xor %r13d,%r13d
2c36(5): mov %rbx,0x18(%rsp)
2c3b(7): lea 0x3567(%rip),%rsi
2c42(3): mov %r13,%rbx
2c45(2): jmp 0x23(%rip)
2c47(9): nop 0x0(%rax,%rax,1)
2c50(7): lea 0x206e49(%rip),%rax
2c57(4): add $0x1,%rbx
2c5b(4): mov 0x0(%rax,%rbx,8),%rsi
2c5f(3): test %rsi,%rsi
2c62(6): jz 0xac(%rip)
2c68(3): mov %r15,%rdi
2c6b(3): mov %ebx,%r13d
2c6e(5): call 0x4d2(%rip)
2c73(2): test %eax,%eax
2c75(2): jnz 0xffffffdb(%rip)
2c77(7): mov 0x20749a(%rip),%rax
2c7e(7): cmp %rax,0x20749b(%rip)
2c85(5): mov 0x18(%rsp),%rbx
2c8a(6): jz 0x108(%rip)
2c90(7): lea 0x206cc9(%rip),%rax
2c97(3): movsxd %r13d,%r13
2c9a(4): mov 0x0(%rax,%r13,8),%r13
2c9e(7): mov 0x207473(%rip),%rax
2ca5(4): lea 0x1(%rax),%rdx
2ca9(7): mov %rdx,0x207468(%rip)
2cb0(5): movzx 0x0(%r13),%edx
2cb5(2): mov %dl,(%rax)
2cb7(7): mov 0x20745a(%rip),%rax
2cbe(7): cmp %rax,0x20745b(%rip)
2cc5(6): jz 0xe3(%rip)
2ccb(7): mov 0x207446(%rip),%rax
2cd2(4): lea 0x1(%rax),%rdx
2cd6(7): mov %rdx,0x20743b(%rip)
2cdd(5): movzx 0x1(%r13),%edx
2ce2(2): mov %dl,(%rax)
2ce4(7): mov 0x20742d(%rip),%rax
2ceb(7): cmp %rax,0x20742e(%rip)
2cf2(6): jnz 0xfffffeaa(%rip)
2cf8(7): lea 0x207401(%rip),%rdi
2cff(5): mov $0x1,%esi
2d04(5): call 0x310c(%rip)
2d09(5): jmp 0xfffffe93(%rip)
2d0e(4): cmp $0x3,(%rsp)
2d12(5): mov 0x18(%rsp),%rbx
2d17(6): jz 0xfffffc99(%rip)
2d1d(5): mov 0x8(%rsp),%rdx
2d22(3): test %rdx,%rdx
2d25(2): jz 0x55(%rip)
2d27(5): mov $0x3,%esi
2d2c(2): xor %edi,%edi
2d2e(5): call 0x2322(%rip)
2d33(3): mov %rax,%r13
2d36(7): lea 0x376b(%rip),%rsi
2d3d(2): xor %edi,%edi
2d3f(5): mov $0x5,%edx
2d44(5): call 0xfffff05c(%rip)
2d49(3): mov %r15,%r9
2d4c(3): mov %rax,%rdx
2d4f(3): mov %rbp,%r8
2d52(3): mov %r13,%rcx
2d55(2): xor %esi,%esi
2d57(2): xor %edi,%edi
2d59(2): xor %eax,%eax
2d5b(5): call 0xfffff205(%rip)
2d60(3): mov %r15,%rdi
2d63(5): mov $0x0,0x7(%rsp)
2d68(5): call 0xfffff298(%rip)
2d6d(3): mov %rbx,%rdi
2d70(5): call 0xfffff290(%rip)
2d75(5): jmp 0xfffffc4b(%rip)
2d7a(7): lea 0x344b(%rip),%rsi
2d81(5): mov $0x5,%edx
2d86(2): xor %edi,%edi
2d88(5): call 0xfffff018(%rip)
2d8d(3): mov %rax,%r13
2d90(2): jmp 0xffffffa6(%rip)
2d92(7): lea 0x207367(%rip),%rdi
2d99(5): mov $0x1,%esi
2d9e(5): call 0x3072(%rip)
2da3(5): jmp 0xfffffeed(%rip)
2da8(7): lea 0x207351(%rip),%rdi
2daf(5): mov $0x1,%esi
2db4(5): call 0x305c(%rip)
2db9(5): jmp 0xffffff12(%rip)
2dbe(5): call 0xfffff012(%rip)

"usage" :
2dd0(2): push %r13
2dd2(2): push %r12
2dd4(5): mov $0x5,%edx
2dd9(1): push %rbp
2dda(1): push %rbx
2ddb(2): mov %edi,%ebp
2ddd(7): sub $0x88,%rsp
2de4(7): mov 0x20737d(%rip),%rbx
2deb(9): mov $0x28,%rax
2df4(5): mov %rax,0x78(%rsp)
2df9(2): xor %eax,%eax
2dfb(2): test %edi,%edi
2dfd(2): jz 0x30(%rip)
2dff(7): lea 0x36c2(%rip),%rsi
2e06(2): xor %edi,%edi
2e08(5): call 0xffffef98(%rip)
2e0d(7): mov 0x2072cc(%rip),%rdi
2e14(3): mov %rax,%rdx
2e17(3): mov %rbx,%rcx
2e1a(5): mov $0x1,%esi
2e1f(2): xor %eax,%eax
2e21(5): call 0xfffff19f(%rip)
2e26(2): mov %ebp,%edi
2e28(5): call 0xfffff178(%rip)
2e2d(7): lea 0x33ad(%rip),%rsi
2e34(2): xor %edi,%edi
2e36(5): call 0xffffef6a(%rip)
2e3b(3): mov %rbx,%rdx
2e3e(3): mov %rax,%rsi
2e41(5): mov $0x1,%edi
2e46(2): xor %eax,%eax
2e48(5): call 0xfffff108(%rip)
2e4d(7): mov 0x207254(%rip),%rbx
2e54(7): lea 0x3695(%rip),%rsi
2e5b(5): mov $0x5,%edx
2e60(2): xor %edi,%edi
2e62(5): call 0xffffef3e(%rip)
2e67(3): mov %rbx,%rsi
2e6a(3): mov %rax,%rdi
2e6d(5): call 0xfffff023(%rip)
2e72(7): mov 0x20722f(%rip),%rbx
2e79(7): lea 0x3788(%rip),%rsi
2e80(5): mov $0x5,%edx
2e85(2): xor %edi,%edi
2e87(5): call 0xffffef19(%rip)
2e8c(3): mov %rbx,%rsi
2e8f(3): mov %rax,%rdi
2e92(5): call 0xffffeffe(%rip)
2e97(7): mov 0x20720a(%rip),%rbx
2e9e(7): lea 0x3793(%rip),%rsi
2ea5(5): mov $0x5,%edx
2eaa(2): xor %edi,%edi
2eac(5): call 0xffffeef4(%rip)
2eb1(3): mov %rbx,%rsi
2eb4(3): mov %rax,%rdi
2eb7(5): call 0xffffefd9(%rip)
2ebc(7): mov 0x2071e5(%rip),%rbx
2ec3(7): lea 0x37a6(%rip),%rsi
2eca(5): mov $0x5,%edx
2ecf(2): xor %edi,%edi
2ed1(5): call 0xffffeecf(%rip)
2ed6(3): mov %rbx,%rsi
2ed9(3): mov %rax,%rdi
2edc(7): lea 0x32f4(%rip),%rbx
2ee3(5): call 0xffffefad(%rip)
2ee8(7): lea 0x3310(%rip),%rax
2eef(7): lea 0x334a(%rip),%rcx
2ef6(9): mov $0x0,0x60(%rsp)
2eff(9): mov $0x0,0x68(%rsp)
2f08(3): mov %rsp,%rdx
2f0b(4): mov %rax,(%rsp)
2f0f(7): lea 0x32eb(%rip),%rax
2f16(5): mov %rcx,0x30(%rsp)
2f1b(7): lea 0x3328(%rip),%rcx
2f22(5): mov %rax,0x8(%rsp)
2f27(7): lea 0x334b(%rip),%rax
2f2e(5): mov %rcx,0x40(%rsp)
2f33(7): lea 0x331a(%rip),%rcx
2f3a(5): mov %rax,0x10(%rsp)
2f3f(7): lea 0x32cb(%rip),%rax
2f46(5): mov %rcx,0x50(%rsp)
2f4b(5): mov %rax,0x18(%rsp)
2f50(7): lea 0x32d0(%rip),%rax
2f57(5): mov %rax,0x20(%rsp)
2f5c(7): lea 0x32ce(%rip),%rax
2f63(5): mov %rax,0x28(%rsp)
2f68(5): mov %rax,0x38(%rsp)
2f6d(5): mov %rax,0x48(%rsp)
2f72(5): mov %rax,0x58(%rsp)
2f77(9): nop 0x0(%rax,%rax,1)
2f80(4): add $0x10,%rdx
2f84(3): mov (%rdx),%rdi
2f87(3): test %rdi,%rdi
2f8a(2): jz 0x15(%rip)
2f8c(5): mov $0xa,%ecx
2f91(3): mov %rbx,%rsi
2f94(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2f96(3): setnbe %al
2f99(2): sbb $0x0,%al
2f9b(2): test %al,%al
2f9d(2): jnz 0xffffffe3(%rip)
2f9f(4): mov 0x8(%rdx),%r12
2fa3(2): xor %edi,%edi
2fa5(5): mov $0x5,%edx
2faa(7): lea 0x32ad(%rip),%rsi
2fb1(3): test %r12,%r12
2fb4(6): jz 0xc7(%rip)
2fba(5): call 0xffffede6(%rip)
2fbf(7): lea 0x378a(%rip),%rcx
2fc6(7): lea 0x32a8(%rip),%rdx
2fcd(3): mov %rax,%rsi
2fd0(5): mov $0x1,%edi
2fd5(2): xor %eax,%eax
2fd7(5): call 0xffffef79(%rip)
2fdc(2): xor %esi,%esi
2fde(5): mov $0x5,%edi
2fe3(5): call 0xffffef5d(%rip)
2fe8(3): test %rax,%rax
2feb(2): jz 0x1e(%rip)
2fed(7): lea 0x328f(%rip),%rsi
2ff4(5): mov $0x3,%edx
2ff9(3): mov %rax,%rdi
2ffc(5): call 0xffffed34(%rip)
3001(2): test %eax,%eax
3003(6): jnz 0x10d(%rip)
3009(7): lea 0x3277(%rip),%rsi
3010(2): xor %edi,%edi
3012(5): mov $0x5,%edx
3017(5): call 0xffffed89(%rip)
301c(7): lea 0x31b4(%rip),%rcx
3023(7): lea 0x3726(%rip),%rdx
302a(3): mov %rax,%rsi
302d(5): mov $0x1,%edi
3032(2): xor %eax,%eax
3034(5): call 0xffffef1c(%rip)
3039(3): cmp %rbx,%r12
303c(7): lea 0x31d8(%rip),%rcx
3043(7): lea 0x327b(%rip),%rbx
304a(4): cmove %rcx,%rbx
304e(7): lea 0x376b(%rip),%rsi
3055(2): xor %edi,%edi
3057(5): mov $0x5,%edx
305c(5): call 0xffffed44(%rip)
3061(3): mov %rbx,%rcx
3064(3): mov %rax,%rsi
3067(3): mov %r12,%rdx
306a(5): mov $0x1,%edi
306f(2): xor %eax,%eax
3071(5): call 0xffffeedf(%rip)
3076(5): jmp 0xfffffdb0(%rip)
307b(5): call 0xffffed25(%rip)
3080(7): lea 0x36c9(%rip),%rcx
3087(7): lea 0x31e7(%rip),%rdx
308e(3): mov %rax,%rsi
3091(5): mov $0x1,%edi
3096(2): xor %eax,%eax
3098(5): call 0xffffeeb8(%rip)
309d(2): xor %esi,%esi
309f(5): mov $0x5,%edi
30a4(5): call 0xffffee9c(%rip)
30a9(3): test %rax,%rax
30ac(2): jz 0x1a(%rip)
30ae(7): lea 0x31ce(%rip),%rsi
30b5(5): mov $0x3,%edx
30ba(3): mov %rax,%rdi
30bd(5): call 0xffffec73(%rip)
30c2(2): test %eax,%eax
30c4(2): jnz 0x45(%rip)
30c6(7): lea 0x31ba(%rip),%rsi
30cd(5): mov $0x5,%edx
30d2(2): xor %edi,%edi
30d4(7): lea 0x30fc(%rip),%r12
30db(7): lea 0x3139(%rip),%rbx
30e2(5): call 0xffffecbe(%rip)
30e7(7): lea 0x30e9(%rip),%rcx
30ee(7): lea 0x365b(%rip),%rdx
30f5(3): mov %rax,%rsi
30f8(5): mov $0x1,%edi
30fd(2): xor %eax,%eax
30ff(5): call 0xffffee51(%rip)
3104(5): jmp 0xffffff4a(%rip)
3109(7): lea 0x30c7(%rip),%r12
3110(7): mov 0x206f91(%rip),%r13
3117(7): lea 0x365a(%rip),%rsi
311e(2): xor %edi,%edi
3120(5): mov $0x5,%edx
3125(5): call 0xffffec7b(%rip)
312a(3): mov %r13,%rsi
312d(3): mov %rax,%rdi
3130(5): call 0xffffed60(%rip)
3135(5): jmp 0xfffffed4(%rip)

"c_strcasecmp" :
3140(2): xor %eax,%eax
3142(3): cmp %rsi,%rdi
3145(2): jnz 0x17(%rip)
3147(2): jmp 0x45(%rip)
3149(7): nop 0x0(%rax)
3150(4): add $0x1,%rdi
3154(4): add $0x1,%rsi
3158(2): cmp %dl,%al
315a(2): jnz 0x2a(%rip)
315c(3): movzx (%rdi),%eax
315f(2): mov %eax,%edx
3161(3): lea 0x20(%rax),%ecx
3164(3): sub $0x41,%edx
3167(3): cmp $0x1a,%dl
316a(3): movzx (%rsi),%edx
316d(3): cmovnae %ecx,%eax
3170(2): mov %edx,%ecx
3172(4): lea 0x20(%rdx),%r9d
3176(3): sub $0x41,%ecx
3179(3): cmp $0x1a,%cl
317c(4): cmovnae %r9d,%edx
3180(2): test %al,%al
3182(2): jnz 0xffffffce(%rip)
3184(3): movzx %al,%eax
3187(3): movzx %dl,%edx
318a(2): sub %edx,%eax
318c(2): REP ret near (%rsp)

"close_stdout_set_file_name" :
3190(7): mov %rdi,0x206fc9(%rip)
3197(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
31a0(7): mov %dil,0x206fb1(%rip)
31a7(1): ret near (%rsp)

"close_stdout" :
31b0(1): push %rbp
31b1(1): push %rbx
31b2(4): sub $0x8,%rsp
31b6(7): mov 0x206eeb(%rip),%rdi
31bd(5): call 0x2e23(%rip)
31c2(2): test %eax,%eax
31c4(2): jz 0x18(%rip)
31c6(5): call 0xffffeb5a(%rip)
31cb(7): cmp $0x0,0x206f86(%rip)
31d2(3): mov %rax,%rbx
31d5(2): jz 0x1e(%rip)
31d7(3): cmp $0x20,(%rax)
31da(2): jnz 0x19(%rip)
31dc(7): mov 0x206efd(%rip),%rdi
31e3(5): call 0x2dfd(%rip)
31e8(2): test %eax,%eax
31ea(2): jnz 0x48(%rip)
31ec(4): add $0x8,%rsp
31f0(1): pop %rbx
31f1(1): pop %rbp
31f2(1): ret near (%rsp)
31f3(7): lea 0x47af(%rip),%rsi
31fa(2): xor %edi,%edi
31fc(5): mov $0x5,%edx
3201(5): call 0xffffeb9f(%rip)
3206(7): mov 0x206f53(%rip),%rdi
320d(3): mov %rax,%rbp
3210(3): test %rdi,%rdi
3213(2): jz 0x2a(%rip)
3215(5): call 0x1e0b(%rip)
321a(2): mov (%rbx),%esi
321c(7): lea 0x4792(%rip),%rdx
3223(3): mov %rax,%rcx
3226(3): mov %rbp,%r8
3229(2): xor %edi,%edi
322b(2): xor %eax,%eax
322d(5): call 0xffffed33(%rip)
3232(6): mov 0x206de0(%rip),%edi
3238(5): call 0xffffeb08(%rip)
323d(2): mov (%rbx),%esi
323f(7): lea 0x4773(%rip),%rdx
3246(3): mov %rax,%rcx
3249(2): xor %edi,%edi
324b(2): xor %eax,%eax
324d(5): call 0xffffed13(%rip)
3252(2): jmp 0xffffffe0(%rip)

"last_component" :
3260(3): movzx (%rdi),%edx
3263(3): mov %rdi,%rax
3266(3): cmp $0x2f,%dl
3269(2): jnz 0x13(%rip)
326b(5): nop 0x0(%rax,%rax,1)
3270(4): add $0x1,%rax
3274(3): movzx (%rax),%edx
3277(3): cmp $0x2f,%dl
327a(2): jz 0xfffffff6(%rip)
327c(2): test %dl,%dl
327e(2): jz 0x3c(%rip)
3280(3): mov %rax,%rcx
3283(2): xor %esi,%esi
3285(2): jmp 0x20(%rip)
3287(9): nop 0x0(%rax,%rax,1)
3290(3): test %sil,%sil
3293(2): jz 0x7(%rip)
3295(3): mov %rcx,%rax
3298(2): xor %esi,%esi
329a(4): add $0x1,%rcx
329e(3): movzx (%rcx),%edx
32a1(2): test %dl,%dl
32a3(2): jz 0x17(%rip)
32a5(3): cmp $0x2f,%dl
32a8(2): jnz 0xffffffe8(%rip)
32aa(4): add $0x1,%rcx
32ae(3): movzx (%rcx),%edx
32b1(5): mov $0x1,%esi
32b6(2): test %dl,%dl
32b8(2): jnz 0xffffffed(%rip)
32ba(2): REP ret near (%rsp)

"base_len" :
32c0(1): push %rbx
32c1(3): mov %rdi,%rbx
32c4(5): call 0xffffeafc(%rip)
32c9(4): cmp $0x1,%rax
32cd(2): jbe 0xd(%rip)
32cf(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
32d4(4): lea 0xffffffff(%rax),%rdx
32d8(2): jz 0x10(%rip)
32da(1): pop %rbx
32db(1): ret near (%rsp)
32dc(4): nop 0x0(%rax)
32e0(3): mov %rax,%rdx
32e3(5): nop 0x0(%rax,%rax,1)
32e8(4): cmp $0x1,%rdx
32ec(2): jz 0x14(%rip)
32ee(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
32f3(4): lea 0xffffffff(%rdx),%rax
32f7(2): jz 0xffffffe9(%rip)
32f9(3): mov %rdx,%rax
32fc(1): pop %rbx
32fd(1): ret near (%rsp)
32fe(2): nop 
3300(5): mov $0x1,%eax
3305(1): pop %rbx
3306(1): ret near (%rsp)

"protect_fd" :
3310(1): push %rbp
3311(1): push %rbx
3312(2): mov %edi,%ebp
3314(7): lea 0x46a1(%rip),%rdi
331b(2): xor %esi,%esi
331d(2): xor %eax,%eax
331f(4): sub $0x8,%rsp
3323(5): mov $0x1,%ebx
3328(5): call 0xffffec48(%rip)
332d(2): cmp %eax,%ebp
332f(2): jz 0x1a(%rip)
3331(2): xor %ebx,%ebx
3333(2): test %eax,%eax
3335(2): js 0x14(%rip)
3337(2): mov %eax,%edi
3339(5): call 0xffffeb27(%rip)
333e(5): call 0xffffe9e2(%rip)
3343(6): mov $0x9,(%rax)
3349(4): add $0x8,%rsp
334d(2): mov %ebx,%eax
334f(1): pop %rbx
3350(1): pop %rbp
3351(1): ret near (%rsp)

"freopen_safer" :
3360(2): push %r15
3362(2): push %r14
3364(3): mov %rsi,%r15
3367(2): push %r13
3369(2): push %r12
336b(3): mov %rdx,%r12
336e(1): push %rbp
336f(1): push %rbx
3370(4): sub $0x18,%rsp
3374(5): mov %rdi,0x8(%rsp)
3379(3): mov %rdx,%rdi
337c(5): call 0xffffeb64(%rip)
3381(2): mov %eax,%ebx
3383(5): call 0xffffe99d(%rip)
3388(3): cmp $0x1,%ebx
338b(3): mov %rax,%r14
338e(6): jz 0x162(%rip)
3394(3): cmp $0x2,%ebx
3397(6): jz 0x149(%rip)
339d(2): test %ebx,%ebx
339f(6): jz 0xb9(%rip)
33a5(5): mov $0x2,%esi
33aa(5): mov $0x2,%edi
33af(5): call 0xffffea51(%rip)
33b4(3): cmp $0x2,%eax
33b7(3): setnz %bl
33ba(5): mov $0x1,%esi
33bf(5): mov $0x1,%edi
33c4(5): call 0xffffea3c(%rip)
33c9(3): cmp $0x1,%eax
33cc(4): setnz %bpl
33d0(2): xor %esi,%esi
33d2(2): xor %edi,%edi
33d4(5): call 0xffffea2c(%rip)
33d9(2): test %eax,%eax
33db(6): jz 0x8d(%rip)
33e1(2): xor %edi,%edi
33e3(5): call 0xffffff2d(%rip)
33e8(2): test %al,%al
33ea(3): mov %eax,%r13d
33ed(6): jz 0x113(%rip)
33f3(3): test %bpl,%bpl
33f6(2): jnz 0x7a(%rip)
33f8(2): test %bl,%bl
33fa(2): jz 0x16(%rip)
33fc(5): mov $0x2,%edi
3401(5): call 0xffffff0f(%rip)
3406(2): test %al,%al
3408(2): mov %eax,%ebx
340a(6): jz 0xb6(%rip)
3410(5): mov 0x8(%rsp),%rdi
3415(3): mov %r12,%rdx
3418(3): mov %r15,%rsi
341b(5): call 0xffffea35(%rip)
3420(3): mov %rax,%r12
3423(2): test %bl,%bl
3425(3): mov (%r14),%r15d
3428(6): jnz 0xa8(%rip)
342e(3): test %bpl,%bpl
3431(2): jnz 0x6f(%rip)
3433(3): test %r13b,%r13b
3436(2): jnz 0x79(%rip)
3438(3): test %r12,%r12
343b(2): jnz 0x5(%rip)
343d(3): mov %r15d,(%r14)
3440(4): add $0x18,%rsp
3444(3): mov %r12,%rax
3447(1): pop %rbx
3448(1): pop %rbp
3449(2): pop %r12
344b(2): pop %r13
344d(2): pop %r14
344f(2): pop %r15
3451(1): ret near (%rsp)
3452(6): nop 0x0(%rax,%rax,1)
3458(2): xor %ebx,%ebx
345a(2): xor %ebp,%ebp
345c(3): xor %r13d,%r13d
345f(2): jmp 0xffffffb1(%rip)
3461(7): nop 0x0(%rax)
3468(3): xor %r13d,%r13d
346b(3): test %bpl,%bpl
346e(2): jz 0xffffff8a(%rip)
3470(5): mov $0x1,%edi
3475(5): call 0xfffffe9b(%rip)
347a(2): test %al,%al
347c(2): mov %eax,%ebp
347e(6): jnz 0xffffff7a(%rip)
3484(3): xor %r12d,%r12d
3487(2): test %bl,%bl
3489(3): mov (%r14),%r15d
348c(2): jz 0x14(%rip)
348e(5): mov $0x2,%edi
3493(5): call 0xffffe9cd(%rip)
3498(8): nop 0x0(%rax,%rax,1)
34a0(5): mov $0x1,%edi
34a5(5): call 0xffffe9bb(%rip)
34aa(3): test %r13b,%r13b
34ad(2): jz 0xffffff8b(%rip)
34af(2): xor %edi,%edi
34b1(5): call 0xffffe9af(%rip)
34b6(2): jmp 0xffffff82(%rip)
34b8(8): nop 0x0(%rax,%rax,1)
34c0(3): mov (%r14),%r15d
34c3(3): xor %r12d,%r12d
34c6(a): nop 0x0(%rax,%rax,1)
34d0(5): mov $0x2,%edi
34d5(5): call 0xffffe98b(%rip)
34da(5): jmp 0xffffff54(%rip)
34df(1): nop 
34e0(2): xor %ebx,%ebx
34e2(5): jmp 0xfffffed8(%rip)
34e7(9): nop 0x0(%rax,%rax,1)
34f0(2): xor %ebx,%ebx
34f2(2): xor %ebp,%ebp
34f4(5): jmp 0xfffffedc(%rip)
34f9(7): nop 0x0(%rax)
3500(6): mov $0x1,%r13d
3506(3): xor %r12d,%r12d
3509(5): jmp 0xffffff1a(%rip)

"set_program_name" :
3510(3): test %rdi,%rdi
3513(1): push %rbx
3514(2): jz 0x79(%rip)
3516(5): mov $0x2f,%esi
351b(3): mov %rdi,%rbx
351e(5): call 0xffffe8f2(%rip)
3523(3): test %rax,%rax
3526(2): jz 0x57(%rip)
3528(4): lea 0x1(%rax),%r8
352c(3): mov %r8,%rdx
352f(3): sub %rbx,%rdx
3532(4): cmp $0x6,%rdx
3536(2): jle 0x47(%rip)
3538(4): lea 0xfffffffa(%rax),%rsi
353c(7): lea 0x44bd(%rip),%rdi
3543(5): mov $0x7,%ecx
3548(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
354a(3): setnbe %dl
354d(3): sbb $0x0,%dl
3550(2): test %dl,%dl
3552(2): jnz 0x2b(%rip)
3554(7): lea 0x44ad(%rip),%rdi
355b(5): mov $0x3,%ecx
3560(3): mov %r8,%rsi
3563(3): mov %r8,%rbx
3566(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3568(3): setnbe %dl
356b(3): sbb $0x0,%dl
356e(2): test %dl,%dl
3570(2): jnz 0xd(%rip)
3572(4): lea 0x4(%rax),%rbx
3576(7): mov %rbx,0x206b23(%rip)
357d(7): mov %rbx,0x206be4(%rip)
3584(7): mov %rbx,0x206b35(%rip)
358b(1): pop %rbx
358c(1): ret near (%rsp)
358d(7): mov 0x206b4c(%rip),%rcx
3594(7): lea 0x442d(%rip),%rdi
359b(5): mov $0x37,%edx
35a0(5): mov $0x1,%esi
35a5(5): call 0xffffea0b(%rip)
35aa(5): call 0xffffe766(%rip)

"gettext_quote.part.1" :
35b0(1): push %rbp
35b1(1): push %rbx
35b2(3): mov %rdi,%rbp
35b5(2): mov %esi,%ebx
35b7(4): sub $0x8,%rsp
35bb(5): call 0x2b05(%rip)
35c0(3): movzx (%rax),%edx
35c3(3): and $0xdf,%edx
35c6(3): cmp $0x55,%dl
35c9(2): jz 0x77(%rip)
35cb(3): cmp $0x47,%dl
35ce(2): jz 0x22(%rip)
35d0(7): lea 0x4444(%rip),%rax
35d7(7): lea 0x2cf9(%rip),%rdx
35de(3): cmp $0x9,%ebx
35e1(4): cmovne %rdx,%rax
35e5(4): add $0x8,%rsp
35e9(1): pop %rbx
35ea(1): pop %rbp
35eb(1): ret near (%rsp)
35ec(4): nop 0x0(%rax)
35f0(4): movzx 0x1(%rax),%edx
35f4(3): and $0xdf,%edx
35f7(3): cmp $0x42,%dl
35fa(2): jnz 0xffffffd6(%rip)
35fc(4): cmp $0x31,0x2(%rax)
3600(2): jnz 0xffffffd0(%rip)
3602(4): cmp $0x38,0x3(%rax)
3606(2): jnz 0xffffffca(%rip)
3608(4): cmp $0x30,0x4(%rax)
360c(2): jnz 0xffffffc4(%rip)
360e(4): cmp $0x33,0x5(%rax)
3612(2): jnz 0xffffffbe(%rip)
3614(4): cmp $0x30,0x6(%rax)
3618(2): jnz 0xffffffb8(%rip)
361a(4): cmp $0x0,0x7(%rax)
361e(2): jnz 0xffffffb2(%rip)
3620(4): cmp $0x60,0x0(%rbp)
3624(7): lea 0x43e9(%rip),%rax
362b(7): lea 0x43e6(%rip),%rdx
3632(4): cmovne %rdx,%rax
3636(4): add $0x8,%rsp
363a(1): pop %rbx
363b(1): pop %rbp
363c(1): ret near (%rsp)
363d(3): nop (%rax)
3640(4): movzx 0x1(%rax),%edx
3644(3): and $0xdf,%edx
3647(3): cmp $0x54,%dl
364a(2): jnz 0xffffff86(%rip)
364c(4): movzx 0x2(%rax),%edx
3650(3): and $0xdf,%edx
3653(3): cmp $0x46,%dl
3656(6): jnz 0xffffff7a(%rip)
365c(4): cmp $0x2d,0x3(%rax)
3660(6): jnz 0xffffff70(%rip)
3666(4): cmp $0x38,0x4(%rax)
366a(6): jnz 0xffffff66(%rip)
3670(4): cmp $0x0,0x5(%rax)
3674(6): jnz 0xffffff5c(%rip)
367a(4): cmp $0x60,0x0(%rbp)
367e(7): lea 0x4387(%rip),%rax
3685(7): lea 0x4384(%rip),%rdx
368c(4): cmovne %rdx,%rax
3690(4): add $0x8,%rsp
3694(1): pop %rbx
3695(1): pop %rbp
3696(1): ret near (%rsp)

"quotearg_buffer_restyled" :
36a0(2): push %r15
36a2(2): push %r14
36a4(3): mov %r8d,%r15d
36a7(2): push %r13
36a9(2): push %r12
36ab(3): mov %rdi,%r14
36ae(1): push %rbp
36af(1): push %rbx
36b0(3): mov %r9d,%ebx
36b3(3): mov %rsi,%r13
36b6(3): mov %rcx,%rbp
36b9(3): and $0x2,%ebx
36bc(7): sub $0xb8,%rsp
36c3(8): mov 0xf0(%rsp),%rax
36cb(5): mov %rdx,0x10(%rsp)
36d0(5): mov %r8d,0x8(%rsp)
36d5(5): mov %r9d,0x78(%rsp)
36da(5): mov %rax,0x20(%rsp)
36df(8): mov 0xf8(%rsp),%rax
36e7(5): mov %rax,0x68(%rsp)
36ec(8): mov 0x100(%rsp),%rax
36f4(5): mov %rax,0x60(%rsp)
36f9(9): mov $0x28,%rax
3702(8): mov %rax,0xa8(%rsp)
370a(2): xor %eax,%eax
370c(5): call 0xffffe6a4(%rip)
3711(4): cmp $0xa,%r15d
3715(5): mov %rax,0x58(%rsp)
371a(6): jnbe 0x11b5(%rip)
3720(7): lea 0x4359(%rip),%rcx
3727(3): mov %r15d,%edx
372a(4): movsxd 0x0(%rcx,%rdx,4),%rax
372e(3): add %rcx,%rax
3731(2): jmp %rax
3733(5): mov $0x1,0xe(%rsp)
3738(5): mov $0x0,0x7c(%rsp)
373d(3): xor %r12d,%r12d
3740(9): mov $0x0,0x50(%rsp)
3749(5): mov $0x1,0xf(%rsp)
374e(5): mov $0x0,0xd(%rsp)
3753(7): lea 0x2b7d(%rip),%rax
375a(9): mov $0x1,0x18(%rsp)
3763(3): xor %r15d,%r15d
3766(8): mov $0x2,0x8(%rsp)
376e(5): mov %rax,0x48(%rsp)
3773(3): xor %r11d,%r11d
3776(3): mov %rbp,%rax
3779(3): mov %r12d,%r8d
377c(3): mov %r11,%rbp
377f(3): mov %rax,%r11
3782(6): nop 0x0(%rax,%rax,1)
3788(3): cmp %rbp,%r11
378b(4): setnz %r12b
378f(4): cmp $0xffffffff,%r11
3793(2): jnz 0xf(%rip)
3795(5): mov 0x10(%rsp),%rax
379a(4): cmp $0x0,0x0(%rax,%rbp,1)
379e(4): setnz %r12b
37a2(3): test %r12b,%r12b
37a5(6): jz 0x65b(%rip)
37ab(5): cmp $0x2,0x8(%rsp)
37b0(5): mov 0x10(%rsp),%rdi
37b5(4): lea 0x0(%rdi,%rbp,1),%r9
37b9(3): setnz %al
37bc(4): and 0xd(%rsp),%al
37c0(3): mov %eax,%r10d
37c3(6): jz 0xad(%rip)
37c9(5): mov 0x18(%rsp),%rax
37ce(3): test %rax,%rax
37d1(6): jz 0x42f(%rip)
37d7(4): cmp $0xffffffff,%r11
37db(5): lea 0x0(%rbp,%rax,1),%rbx
37e0(2): jnz 0x30(%rip)
37e2(4): cmp $0x1,%rax
37e6(2): jbe 0x2a(%rip)
37e8(5): mov %r8b,0x38(%rsp)
37ed(5): mov %r10b,0x30(%rsp)
37f2(5): mov %r9,0x28(%rsp)
37f7(5): call 0xffffe5c9(%rip)
37fc(6): movzx 0x38(%rsp),%r8d
3802(6): movzx 0x30(%rsp),%r10d
3808(3): mov %rax,%r11
380b(5): mov 0x28(%rsp),%r9
3810(3): cmp %r11,%rbx
3813(5): mov %r10b,0x28(%rsp)
3818(6): jnbe 0x5b8(%rip)
381e(5): mov 0x18(%rsp),%rdx
3823(5): mov 0x48(%rsp),%rsi
3828(3): mov %r9,%rdi
382b(5): mov %r11,0x40(%rsp)
3830(5): mov %r8b,0x38(%rsp)
3835(5): mov %r9,0x30(%rsp)
383a(5): call 0xffffe646(%rip)
383f(2): test %eax,%eax
3841(5): mov 0x30(%rsp),%r9
3846(6): movzx 0x38(%rsp),%r8d
384c(5): mov 0x40(%rsp),%r11
3851(6): jnz 0x57f(%rip)
3857(5): cmp $0x0,0xf(%rsp)
385c(6): movzx 0x28(%rsp),%r10d
3862(6): jnz 0xf83(%rip)
3868(8): nop 0x0(%rax,%rax,1)
3870(4): movzx (%r9),%ebx
3874(3): cmp $0x7e,%bl
3877(6): jnbe 0x321(%rip)
387d(7): lea 0x4228(%rip),%rcx
3884(3): movzx %bl,%edx
3887(4): movsxd 0x0(%rcx,%rdx,4),%rax
388b(3): add %rcx,%rax
388e(2): jmp %rax
3890(3): xor %r10d,%r10d
3893(4): cmp $0x1,%r11
3897(3): setnz %al
389a(4): cmp $0xffffffff,%r11
389e(2): jnz 0xe(%rip)
38a0(5): mov 0x10(%rsp),%rax
38a5(4): cmp $0x0,0x1(%rax)
38a9(3): setnz %al
38ac(5): cmp $0x2,0x8(%rsp)
38b1(3): setz %dl
38b4(2): test %al,%al
38b6(6): jz 0x252(%rip)
38bc(3): xor %r12d,%r12d
38bf(2): xor %eax,%eax
38c1(7): nop 0x0(%rax)
38c8(5): cmp $0x1,0xd(%rsp)
38cd(6): jnz 0x115(%rip)
38d3(2): test %dl,%dl
38d5(6): jnz 0x10d(%rip)
38db(5): mov 0x20(%rsp),%rsi
38e0(3): test %rsi,%rsi
38e3(2): jz 0x16(%rip)
38e5(2): mov %ebx,%edx
38e7(3): shr $0x5,%dl
38ea(3): movzx %dl,%edx
38ed(3): mov 0x0(%rsi,%rdx,4),%edx
38f0(3): bt %ebx,%edx
38f3(6): jb 0x150(%rip)
38f9(3): test %r10b,%r10b
38fc(6): jnz 0x147(%rip)
3902(3): xor $0x1,%eax
3905(4): add $0x1,%rbp
3909(3): and %r8d,%eax
390c(2): test %al,%al
390e(2): jz 0x22(%rip)
3910(3): cmp %r15,%r13
3913(2): jbe 0x7(%rip)
3915(5): mov $0x27,0x0(%r14,%r15,1)
391a(4): lea 0x1(%r15),%rax
391e(3): cmp %rax,%r13
3921(2): jbe 0x8(%rip)
3923(6): mov $0x27,0x1(%r14,%r15,1)
3929(4): add $0x2,%r15
392d(3): xor %r8d,%r8d
3930(3): cmp %r13,%r15
3933(2): jnb 0x6(%rip)
3935(4): mov %bl,0x0(%r14,%r15,1)
3939(5): movzx 0xe(%rsp),%edi
393e(4): add $0x1,%r15
3942(5): mov $0x0,%eax
3947(3): test %r12b,%r12b
394a(3): cmove %eax,%edi
394d(5): mov %dil,0xe(%rsp)
3952(5): jmp 0xfffffe36(%rip)
3957(9): nop 0x0(%rax,%rax,1)
3960(3): xor %r10d,%r10d
3963(4): mov 0x8(%rsp),%eax
3967(3): cmp $0x2,%eax
396a(6): jz 0x5be(%rip)
3970(3): cmp $0x5,%eax
3973(6): jz 0x575(%rip)
3979(3): cmp $0x2,%eax
397c(5): mov $0x3f,%ebx
3981(3): setz %dl
3984(3): xor %r12d,%r12d
3987(2): xor %eax,%eax
3989(5): jmp 0xffffff3f(%rip)
398e(2): nop 
3990(3): xor %r10d,%r10d
3993(5): cmp $0x2,0x8(%rsp)
3998(6): jz 0x508(%rip)
399e(5): mov %r12b,0x7c(%rsp)
39a3(2): xor %edx,%edx
39a5(2): xor %eax,%eax
39a7(5): mov $0x27,%ebx
39ac(5): jmp 0xffffff1c(%rip)
39b1(7): nop 0x0(%rax)
39b8(5): mov $0x9,%edx
39bd(5): mov $0x74,%ebx
39c2(5): cmp $0x2,0x8(%rsp)
39c7(3): setz %al
39ca(4): and 0xf(%rsp),%al
39ce(6): jnz 0x150(%rip)
39d4(5): cmp $0x0,0xd(%rsp)
39d9(2): jnz 0x67(%rip)
39db(2): mov %edx,%ebx
39dd(3): xor %r12d,%r12d
39e0(2): xor %eax,%eax
39e2(5): cmp $0x0,0xf(%rsp)
39e7(6): jnz 0xfffffef4(%rip)
39ed(5): jmp 0xffffff0c(%rip)
39f2(6): nop 0x0(%rax,%rax,1)
39f8(5): mov $0x8,%edx
39fd(5): mov $0x62,%ebx
3a02(2): jmp 0xffffffd2(%rip)
3a04(4): nop 0x0(%rax)
3a08(5): cmp $0x2,0x8(%rsp)
3a0d(6): jz 0x3d3(%rip)
3a13(5): cmp $0x0,0xd(%rsp)
3a18(6): jz 0x218(%rip)
3a1e(5): cmp $0x0,0xf(%rsp)
3a23(6): jz 0x20d(%rip)
3a29(6): cmp $0x0,0x18(%rsp)
3a2f(6): jnz 0x3bc(%rip)
3a35(5): mov $0x5c,%ebx
3a3a(6): nop 0x0(%rax,%rax,1)
3a40(3): xor %r12d,%r12d
3a43(5): cmp $0x2,0x8(%rsp)
3a48(3): setz %dl
3a4b(5): cmp $0x0,0xf(%rsp)
3a50(2): mov %edx,%eax
3a52(6): jnz 0x856(%rip)
3a58(3): mov %r8d,%eax
3a5b(3): xor $0x1,%eax
3a5e(2): and %dl,%al
3a60(2): jz 0x31(%rip)
3a62(3): cmp %r15,%r13
3a65(2): jbe 0x7(%rip)
3a67(5): mov $0x27,0x0(%r14,%r15,1)
3a6c(4): lea 0x1(%r15),%rdx
3a70(3): cmp %rdx,%r13
3a73(2): jbe 0x8(%rip)
3a75(6): mov $0x24,0x1(%r14,%r15,1)
3a7b(4): lea 0x2(%r15),%rdx
3a7f(3): cmp %rdx,%r13
3a82(2): jbe 0x8(%rip)
3a84(6): mov $0x27,0x2(%r14,%r15,1)
3a8a(4): add $0x3,%r15
3a8e(3): mov %eax,%r8d
3a91(3): cmp %r15,%r13
3a94(2): jbe 0x7(%rip)
3a96(5): mov $0x5c,0x0(%r14,%r15,1)
3a9b(4): add $0x1,%r15
3a9f(4): add $0x1,%rbp
3aa3(5): jmp 0xfffffe8d(%rip)
3aa8(8): nop 0x0(%rax,%rax,1)
3ab0(5): cmp $0x0,0xd(%rsp)
3ab5(6): jnz 0x1ce(%rip)
3abb(2): xor %edx,%edx
3abd(5): test $0x1,0x78(%rsp)
3ac2(6): jz 0xffffff19(%rip)
3ac8(4): add $0x1,%rbp
3acc(5): jmp 0xfffffcbc(%rip)
3ad1(7): nop 0x0(%rax)
3ad8(5): cmp $0x2,0x8(%rsp)
3add(3): setz %dl
3ae0(2): xor %eax,%eax
3ae2(5): jmp 0xfffffde6(%rip)
3ae7(9): nop 0x0(%rax,%rax,1)
3af0(5): mov $0x7,%edx
3af5(5): mov $0x61,%ebx
3afa(5): jmp 0xfffffeda(%rip)
3aff(1): nop 
3b00(5): cmp $0x2,0x8(%rsp)
3b05(3): setz %dl
3b08(3): test %rbp,%rbp
3b0b(6): jnz 0xfffffdb1(%rip)
3b11(5): movzx 0xf(%rsp),%eax
3b16(2): and %dl,%al
3b18(6): jz 0xfffffdb0(%rip)
3b1e(3): mov %r11,%rbp
3b21(8): mov $0x2,0x8(%rsp)
3b29(5): jmp 0x700(%rip)
3b2e(2): nop 
3b30(5): cmp $0x2,0x8(%rsp)
3b35(3): setz %dl
3b38(3): xor %r12d,%r12d
3b3b(2): jmp 0xffffffd6(%rip)
3b3d(3): nop (%rax)
3b40(5): cmp $0x2,0x8(%rsp)
3b45(5): mov $0x20,%ebx
3b4a(3): setz %dl
3b4d(2): jmp 0xffffffc4(%rip)
3b4f(1): nop 
3b50(5): mov $0xd,%edx
3b55(5): mov $0x72,%ebx
3b5a(5): jmp 0xfffffe68(%rip)
3b5f(1): nop 
3b60(5): mov $0xc,%edx
3b65(5): mov $0x66,%ebx
3b6a(5): jmp 0xfffffe6a(%rip)
3b6f(1): nop 
3b70(5): mov $0xb,%edx
3b75(5): mov $0x76,%ebx
3b7a(5): jmp 0xfffffe5a(%rip)
3b7f(1): nop 
3b80(5): mov $0xa,%edx
3b85(5): mov $0x6e,%ebx
3b8a(5): jmp 0xfffffe38(%rip)
3b8f(1): nop 
3b90(3): xor %r10d,%r10d
3b93(5): nop 0x0(%rax,%rax,1)
3b98(6): cmp $0x1,0x58(%rsp)
3b9e(6): jnz 0x3aa(%rip)
3ba4(5): mov %r11,0x38(%rsp)
3ba9(5): mov %r8b,0x30(%rsp)
3bae(5): mov %r10b,0x28(%rsp)
3bb3(5): call 0xffffe43d(%rip)
3bb8(3): mov (%rax),%rcx
3bbb(3): movzx %bl,%edx
3bbe(6): movzx 0x28(%rsp),%r10d
3bc4(6): movzx 0x30(%rsp),%r8d
3bca(5): mov 0x38(%rsp),%r11
3bcf(5): mov $0x1,%edi
3bd4(4): movzx 0x0(%rcx,%rdx,2),%eax
3bd8(4): and $0x4000,%ax
3bdc(4): setnz %r12b
3be0(3): setz %al
3be3(4): and 0xd(%rsp),%al
3be7(2): test %al,%al
3be9(6): jnz 0x998(%rip)
3bef(5): cmp $0x2,0x8(%rsp)
3bf4(3): setz %dl
3bf7(5): jmp 0xfffffcd1(%rip)
3bfc(4): nop 0x0(%rax)
3c00(4): movzx (%r9),%ebx
3c04(3): cmp $0x7e,%bl
3c07(2): jnbe 0xffffff89(%rip)
3c09(7): lea 0x4098(%rip),%rcx
3c10(3): movzx %bl,%edx
3c13(4): movsxd 0x0(%rcx,%rdx,4),%rax
3c17(3): add %rcx,%rax
3c1a(2): jmp %rax
3c1c(4): nop 0x0(%rax)
3c20(3): xor %r10d,%r10d
3c23(5): cmp $0x0,0xd(%rsp)
3c28(6): jnz 0xfffffdf6(%rip)
3c2e(2): nop 
3c30(5): mov $0x5c,%edx
3c35(5): mov $0x5c,%ebx
3c3a(5): jmp 0xfffffd9a(%rip)
3c3f(1): nop 
3c40(5): mov $0xc,%edx
3c45(3): xor %r10d,%r10d
3c48(5): mov $0x66,%ebx
3c4d(5): jmp 0xfffffd87(%rip)
3c52(6): nop 0x0(%rax,%rax,1)
3c58(5): mov $0xa,%edx
3c5d(3): xor %r10d,%r10d
3c60(5): mov $0x6e,%ebx
3c65(5): jmp 0xfffffd5d(%rip)
3c6a(6): nop 0x0(%rax,%rax,1)
3c70(5): mov $0x61,%ebx
3c75(5): jmp 0xfffffdcb(%rip)
3c7a(6): nop 0x0(%rax,%rax,1)
3c80(3): xor %r10d,%r10d
3c83(5): cmp $0x2,0x8(%rsp)
3c88(3): setz %dl
3c8b(5): cmp $0x0,0xf(%rsp)
3c90(6): jnz 0xb9a(%rip)
3c96(3): mov %r8d,%eax
3c99(3): mov %r15,%rcx
3c9c(3): xor $0x1,%eax
3c9f(2): and %dl,%al
3ca1(2): jz 0x2f(%rip)
3ca3(3): cmp %r15,%r13
3ca6(2): jbe 0x7(%rip)
3ca8(5): mov $0x27,0x0(%r14,%r15,1)
3cad(4): lea 0x1(%r15),%rcx
3cb1(3): cmp %rcx,%r13
3cb4(2): jbe 0x8(%rip)
3cb6(6): mov $0x24,0x1(%r14,%r15,1)
3cbc(4): lea 0x2(%r15),%rcx
3cc0(3): cmp %rcx,%r13
3cc3(6): jnbe 0x636(%rip)
3cc9(4): lea 0x3(%r15),%rcx
3ccd(3): mov %eax,%r8d
3cd0(3): cmp %rcx,%r13
3cd3(2): jbe 0x7(%rip)
3cd5(5): mov $0x5c,0x0(%r14,%rcx,1)
3cda(5): cmp $0x2,0x8(%rsp)
3cdf(4): lea 0x1(%rcx),%r15
3ce3(6): jz 0x606(%rip)
3ce9(4): lea 0x1(%rbp),%rax
3ced(3): cmp %r11,%rax
3cf0(2): jnb 0x1b(%rip)
3cf2(5): mov 0x10(%rsp),%rax
3cf7(5): movzx 0x1(%rax,%rbp,1),%eax
3cfc(4): mov %al,0x28(%rsp)
3d00(3): sub $0x30,%eax
3d03(2): cmp $0x9,%al
3d05(6): jbe 0x834(%rip)
3d0b(3): mov %r12d,%eax
3d0e(5): mov $0x30,%ebx
3d13(3): xor %r12d,%r12d
3d16(5): jmp 0xfffffbb2(%rip)
3d1b(5): nop 0x0(%rax,%rax,1)
3d20(5): cmp $0x2,0x8(%rsp)
3d25(3): mov %r10d,%r12d
3d28(3): setz %dl
3d2b(3): xor %r10d,%r10d
3d2e(2): xor %eax,%eax
3d30(5): jmp 0xfffffb98(%rip)
3d35(3): nop (%rax)
3d38(5): cmp $0x2,0x8(%rsp)
3d3d(3): setz %dl
3d40(3): xor %r10d,%r10d
3d43(5): jmp 0xfffffdc5(%rip)
3d48(8): nop 0x0(%rax,%rax,1)
3d50(5): cmp $0x2,0x8(%rsp)
3d55(3): setz %dl
3d58(3): xor %r10d,%r10d
3d5b(3): xor %r12d,%r12d
3d5e(5): jmp 0xfffffdb3(%rip)
3d63(5): nop 0x0(%rax,%rax,1)
3d68(5): cmp $0x2,0x8(%rsp)
3d6d(3): mov %r10d,%r12d
3d70(5): mov $0x20,%ebx
3d75(3): setz %dl
3d78(3): xor %r10d,%r10d
3d7b(5): jmp 0xfffffd96(%rip)
3d80(5): mov $0xd,%edx
3d85(3): xor %r10d,%r10d
3d88(5): mov $0x72,%ebx
3d8d(5): jmp 0xfffffc35(%rip)
3d92(6): nop 0x0(%rax,%rax,1)
3d98(5): mov $0x76,%ebx
3d9d(5): jmp 0xfffffca3(%rip)
3da2(6): nop 0x0(%rax,%rax,1)
3da8(5): mov $0x9,%edx
3dad(3): xor %r10d,%r10d
3db0(5): mov $0x74,%ebx
3db5(5): jmp 0xfffffc0d(%rip)
3dba(6): nop 0x0(%rax,%rax,1)
3dc0(5): mov $0x62,%ebx
3dc5(5): jmp 0xfffffc7b(%rip)
3dca(6): nop 0x0(%rax,%rax,1)
3dd0(3): xor %r10d,%r10d
3dd3(5): jmp 0xfffffa9d(%rip)
3dd8(8): nop 0x0(%rax,%rax,1)
3de0(5): cmp $0x0,0xf(%rsp)
3de5(6): jnz 0x96b(%rip)
3deb(4): add $0x1,%rbp
3def(3): mov %r8d,%eax
3df2(3): xor %r12d,%r12d
3df5(5): mov $0x5c,%ebx
3dfa(5): jmp 0xfffffb12(%rip)
3dff(1): nop 
3e00(5): cmp $0x2,0x8(%rsp)
3e05(5): movzx 0xf(%rsp),%ebx
3e0a(3): mov %r8d,%r12d
3e0d(3): mov %r11,%rbp
3e10(3): setz %dl
3e13(2): mov %ebx,%eax
3e15(3): test %r15,%r15
3e18(3): setz %cl
3e1b(2): and %edx,%eax
3e1d(2): and %cl,%al
3e1f(6): jnz 0xa67(%rip)
3e25(2): mov %ebx,%eax
3e27(3): xor $0x1,%eax
3e2a(2): and %al,%dl
3e2c(6): jz 0x970(%rip)
3e32(5): cmp $0x0,0x7c(%rsp)
3e37(6): jz 0x963(%rip)
3e3d(5): cmp $0x0,0xe(%rsp)
3e42(6): jnz 0x9fb(%rip)
3e48(3): test %r13,%r13
3e4b(3): setz %al
3e4e(6): cmp $0x0,0x50(%rsp)
3e54(3): setnz %dl
3e57(2): and %dl,%al
3e59(6): jz 0xa23(%rip)
3e5f(5): mov 0x50(%rsp),%r13
3e64(7): lea 0x246c(%rip),%rbx
3e6b(4): mov $0x27,(%r14)
3e6f(8): mov $0x2,0x8(%rsp)
3e77(6): mov $0x1,%r15d
3e7d(9): mov $0x1,0x18(%rsp)
3e86(5): mov $0x0,0xf(%rsp)
3e8b(5): mov %rbx,0x48(%rsp)
3e90(4): mov %al,0x7c(%rsp)
3e94(5): jmp 0xfffff8df(%rip)
3e99(7): nop 0x0(%rax)
3ea0(5): cmp $0x0,0xf(%rsp)
3ea5(6): jnz 0x8ab(%rip)
3eab(3): test %r13,%r13
3eae(6): jz 0x402(%rip)
3eb4(2): xor %edx,%edx
3eb6(6): cmp $0x0,0x50(%rsp)
3ebc(6): jnz 0x3f4(%rip)
3ec2(5): mov %r13,0x50(%rsp)
3ec7(4): add $0x3,%r15
3ecb(2): xor %eax,%eax
3ecd(5): mov %r12b,0x7c(%rsp)
3ed2(3): xor %r8d,%r8d
3ed5(3): mov %rdx,%r13
3ed8(5): mov $0x27,%ebx
3edd(5): jmp 0xfffffa1c(%rip)
3ee2(6): nop 0x0(%rax,%rax,1)
3ee8(5): test $0x4,0x78(%rsp)
3eed(2): jz 0x23(%rip)
3eef(4): lea 0x2(%rbp),%rcx
3ef3(3): cmp %r11,%rcx
3ef6(2): jnb 0x1a(%rip)
3ef8(5): mov 0x10(%rsp),%rax
3efd(5): cmp $0x3f,0x1(%rax,%rbp,1)
3f02(6): jz 0x790(%rip)
3f08(8): nop 0x0(%rax,%rax,1)
3f10(2): xor %edx,%edx
3f12(3): xor %r12d,%r12d
3f15(2): xor %eax,%eax
3f17(5): mov $0x3f,%ebx
3f1c(5): jmp 0xfffff9ac(%rip)
3f21(7): nop 0x0(%rax)
3f28(5): cmp $0x0,0xf(%rsp)
3f2d(6): jnz 0x823(%rip)
3f33(3): xor %r12d,%r12d
3f36(2): xor %eax,%eax
3f38(5): mov $0x3f,%ebx
3f3d(5): jmp 0xfffff9bc(%rip)
3f42(6): nop 0x0(%rax,%rax,1)
3f48(8): lea 0xa0(%rsp),%rax
3f50(4): cmp $0xffffffff,%r11
3f54(c): mov $0x0,0xa0(%rsp)
3f60(5): mov %rax,0x28(%rsp)
3f65(2): jnz 0x2f(%rip)
3f67(5): mov 0x10(%rsp),%rdi
3f6c(5): mov %r8b,0x40(%rsp)
3f71(5): mov %r10b,0x38(%rsp)
3f76(5): mov %r9,0x30(%rsp)
3f7b(5): call 0xffffde45(%rip)
3f80(6): movzx 0x40(%rsp),%r8d
3f86(6): movzx 0x38(%rsp),%r10d
3f8c(3): mov %rax,%r11
3f8f(5): mov 0x30(%rsp),%r9
3f94(8): lea 0x9c(%rsp),%rax
3f9c(2): xor %ecx,%ecx
3f9e(4): mov %bl,0x7e(%rsp)
3fa2(5): mov %r8b,0x7d(%rsp)
3fa7(3): mov %rcx,%rbx
3faa(8): mov %r9,0x88(%rsp)
3fb2(5): mov %rax,0x38(%rsp)
3fb7(5): mov %r10b,0x7f(%rsp)
3fbc(8): mov %r15,0x80(%rsp)
3fc4(5): mov %r14,0x40(%rsp)
3fc9(5): mov %r13,0x70(%rsp)
3fce(5): mov %r11,0x30(%rsp)
3fd3(5): mov 0x10(%rsp),%rax
3fd8(5): lea 0x0(%rbp,%rbx,1),%r14
3fdd(5): mov 0x30(%rsp),%rdx
3fe2(5): mov 0x28(%rsp),%rcx
3fe7(5): mov 0x38(%rsp),%rdi
3fec(4): lea 0x0(%rax,%r14,1),%r13
3ff0(3): sub %r14,%rdx
3ff3(3): mov %r13,%rsi
3ff6(5): call 0x1c3a(%rip)
3ffb(3): test %rax,%rax
3ffe(3): mov %rax,%r15
4001(2): jz 0x50(%rip)
4003(4): cmp $0xffffffff,%rax
4007(6): jz 0x61e(%rip)
400d(4): cmp $0xfffffffe,%rax
4011(6): jz 0x5a0(%rip)
4017(5): cmp $0x2,0x8(%rsp)
401c(3): setz %al
401f(4): and 0xf(%rsp),%al
4023(6): jnz 0x19d(%rip)
4029(7): mov 0x9c(%rsp),%edi
4030(5): call 0xffffdfb0(%rip)
4035(5): mov 0x28(%rsp),%rdi
403a(2): test %eax,%eax
403c(5): mov $0x0,%eax
4041(4): cmove %eax,%r12d
4045(3): add %r15,%rbx
4048(5): call 0xffffdf88(%rip)
404d(2): test %eax,%eax
404f(2): jz 0xffffff84(%rip)
4051(3): mov %r12d,%edx
4054(3): mov %rbx,%rdi
4057(6): movzx 0x7d(%rsp),%r8d
405d(3): xor $0x1,%edx
4060(5): movzx 0x7e(%rsp),%ebx
4065(6): movzx 0x7f(%rsp),%r10d
406b(4): and 0xd(%rsp),%dl
406f(8): mov 0x80(%rsp),%r15
4077(5): mov 0x40(%rsp),%r14
407c(5): mov 0x70(%rsp),%r13
4081(5): mov 0x30(%rsp),%r11
4086(4): cmp $0x1,%rdi
408a(6): jbe 0x601(%rip)
4090(3): mov %rdi,%rcx
4093(2): xor %esi,%esi
4095(6): movzx 0xf(%rsp),%r9d
409b(3): add %rbp,%rcx
409e(5): mov 0x10(%rsp),%rdi
40a3(5): jmp 0xbb(%rip)
40a8(8): nop 0x0(%rax,%rax,1)
40b0(5): cmp $0x2,0x8(%rsp)
40b5(3): setz %al
40b8(3): test %r9b,%r9b
40bb(6): jnz 0x4b5(%rip)
40c1(3): mov %r8d,%esi
40c4(3): xor $0x1,%esi
40c7(3): and %sil,%al
40ca(2): jz 0x31(%rip)
40cc(3): cmp %r15,%r13
40cf(2): jbe 0x7(%rip)
40d1(5): mov $0x27,0x0(%r14,%r15,1)
40d6(4): lea 0x1(%r15),%rsi
40da(3): cmp %rsi,%r13
40dd(2): jbe 0x8(%rip)
40df(6): mov $0x24,0x1(%r14,%r15,1)
40e5(4): lea 0x2(%r15),%rsi
40e9(3): cmp %rsi,%r13
40ec(2): jbe 0x8(%rip)
40ee(6): mov $0x27,0x2(%r14,%r15,1)
40f4(4): add $0x3,%r15
40f8(3): mov %eax,%r8d
40fb(3): cmp %r15,%r13
40fe(2): jbe 0x7(%rip)
4100(5): mov $0x5c,0x0(%r14,%r15,1)
4105(4): lea 0x1(%r15),%rax
4109(3): cmp %rax,%r13
410c(2): jbe 0xf(%rip)
410e(2): mov %ebx,%eax
4110(3): shr $0x6,%al
4113(3): add $0x30,%eax
4116(5): mov %al,0x1(%r14,%r15,1)
411b(4): lea 0x2(%r15),%rax
411f(3): cmp %rax,%r13
4122(2): jbe 0x12(%rip)
4124(2): mov %ebx,%eax
4126(3): shr $0x3,%al
4129(3): and $0x7,%eax
412c(3): add $0x30,%eax
412f(5): mov %al,0x2(%r14,%r15,1)
4134(3): and $0x7,%ebx
4137(4): add $0x1,%rbp
413b(4): add $0x3,%r15
413f(3): add $0x30,%ebx
4142(3): cmp %rcx,%rbp
4145(6): jnb 0xfffff7eb(%rip)
414b(2): mov %edx,%esi
414d(3): cmp %r15,%r13
4150(2): jbe 0x6(%rip)
4152(4): mov %bl,0x0(%r14,%r15,1)
4156(4): movzx 0x0(%rdi,%rbp,1),%ebx
415a(4): add $0x1,%r15
415e(2): test %dl,%dl
4160(6): jnz 0xffffff50(%rip)
4166(2): mov %esi,%eax
4168(3): xor $0x1,%eax
416b(3): and %r8d,%eax
416e(3): test %r10b,%r10b
4171(2): jz 0x10(%rip)
4173(3): cmp %r15,%r13
4176(2): jbe 0x7(%rip)
4178(5): mov $0x5c,0x0(%r14,%r15,1)
417d(4): add $0x1,%r15
4181(4): add $0x1,%rbp
4185(3): cmp %rcx,%rbp
4188(6): jnb 0xfffff784(%rip)
418e(2): test %al,%al
4190(6): jz 0x3fe(%rip)
4196(3): cmp %r15,%r13
4199(2): jbe 0x7(%rip)
419b(5): mov $0x27,0x0(%r14,%r15,1)
41a0(4): lea 0x1(%r15),%rax
41a4(3): cmp %rax,%r13
41a7(2): jbe 0x8(%rip)
41a9(6): mov $0x27,0x1(%r14,%r15,1)
41af(4): add $0x2,%r15
41b3(3): xor %r10d,%r10d
41b6(3): xor %r8d,%r8d
41b9(2): jmp 0xffffff94(%rip)
41bb(5): nop 0x0(%rax,%rax,1)
41c0(4): cmp $0x1,%r15
41c4(6): jz 0xfffffe65(%rip)
41ca(5): mov 0x10(%rsp),%rdi
41cf(4): lea 0x0(%rdi,%r15,1),%rcx
41d3(5): lea 0x1(%rdi,%r14,1),%rdx
41d8(4): lea 0x0(%rcx,%r14,1),%r8
41dc(2): jmp 0x11(%rip)
41de(2): nop 
41e0(4): add $0x1,%rdx
41e4(3): cmp %rdx,%r8
41e7(6): jz 0xfffffe42(%rip)
41ed(3): movzx (%rdx),%ecx
41f0(3): sub $0x5b,%ecx
41f3(3): cmp $0x21,%cl
41f6(2): jnbe 0xffffffea(%rip)
41f8(5): mov $0x1,%esi
41fd(3): shl/sal %cl,%rsi
4200(3): mov %rsi,%rcx
4203(a): mov $0x8589934635,%rsi
420d(3): test %rsi,%rcx
4210(2): jz 0xffffffd0(%rip)
4212(5): mov 0x40(%rsp),%r14
4217(5): mov 0x70(%rsp),%r13
421c(5): mov 0x30(%rsp),%rbp
4221(8): mov $0x2,0x8(%rsp)
4229(5): cmp $0x0,0xd(%rsp)
422e(2): jz 0x12(%rip)
4230(2): test %al,%al
4232(5): mov $0x4,%eax
4237(5): cmove 0x8(%rsp),%eax
423c(4): mov %eax,0x8(%rsp)
4240(4): sub $0x8,%rsp
4244(3): mov %rbp,%rcx
4247(3): mov %r13,%rsi
424a(4): push 0x68(%rsp)
424e(4): push 0x78(%rsp)
4252(3): mov %r14,%rdi
4255(2): push $0x0
4257(8): mov 0x98(%rsp),%r9d
425f(5): mov 0x28(%rsp),%r8d
4264(5): mov 0x30(%rsp),%rdx
4269(4): and $0xfd,%r9d
426d(5): call 0xfffff433(%rip)
4272(4): add $0x20,%rsp
4276(3): mov %rax,%r15
4279(8): mov 0xa8(%rsp),%rbx
4281(9): xor $0x28,%rbx
428a(3): mov %r15,%rax
428d(6): jnz 0x606(%rip)
4293(7): add $0xb8,%rsp
429a(1): pop %rbx
429b(1): pop %rbp
429c(2): pop %r12
429e(2): pop %r13
42a0(2): pop %r14
42a2(2): pop %r15
42a4(1): ret near (%rsp)
42a5(3): nop (%rax)
42a8(3): mov %r11,%rbp
42ab(5): jmp 0xffffff7e(%rip)
42b0(3): cmp %r15,%r13
42b3(2): jbe 0x7(%rip)
42b5(5): mov $0x27,0x0(%r14,%r15,1)
42ba(4): lea 0x1(%r15),%rax
42be(3): cmp %rax,%r13
42c1(2): jbe 0x8(%rip)
42c3(6): mov $0x5c,0x1(%r14,%r15,1)
42c9(4): lea 0x2(%r15),%rax
42cd(3): cmp %rax,%r13
42d0(6): jbe 0x5f2(%rip)
42d6(3): mov %r13,%rdx
42d9(6): mov $0x27,0x2(%r14,%r15,1)
42df(5): mov 0x50(%rsp),%r13
42e4(5): jmp 0xfffffbde(%rip)
42e9(3): mov %r12d,%eax
42ec(5): mov $0x30,%ebx
42f1(3): xor %r12d,%r12d
42f4(5): jmp 0xfffff605(%rip)
42f9(6): mov $0x27,0x2(%r14,%r15,1)
42ff(5): jmp 0xfffff9ca(%rip)
4304(2): test %ebx,%ebx
4306(6): jnz 0xfffff42d(%rip)
430c(5): mov $0x1,0xd(%rsp)
4311(3): test %r13,%r13
4314(6): jnz 0x596(%rip)
431a(7): lea 0x1fb6(%rip),%rax
4321(9): mov $0x0,0x50(%rsp)
432a(5): mov $0x1,0xe(%rsp)
432f(5): mov $0x0,0x7c(%rsp)
4334(3): xor %r12d,%r12d
4337(5): mov $0x0,0xf(%rsp)
433c(9): mov $0x1,0x18(%rsp)
4345(5): mov %rax,0x48(%rsp)
434a(6): mov $0x1,%r15d
4350(8): mov $0x2,0x8(%rsp)
4358(5): jmp 0xfffff41b(%rip)
435d(3): nop (%rax)
4360(2): test %ebx,%ebx
4362(6): jnz 0x3fb(%rip)
4368(3): test %r13,%r13
436b(6): jz 0x22b(%rip)
4371(4): mov $0x22,(%r14)
4375(5): mov $0x1,0xe(%rsp)
437a(3): xor %r12d,%r12d
437d(5): mov $0x0,0x7c(%rsp)
4382(9): mov $0x0,0x50(%rsp)
438b(7): lea 0x3689(%rip),%rax
4392(5): mov $0x0,0xf(%rsp)
4397(5): mov $0x1,0xd(%rsp)
439c(9): mov $0x1,0x18(%rsp)
43a5(6): mov $0x1,%r15d
43ab(5): mov %rax,0x48(%rsp)
43b0(5): jmp 0xfffff3c3(%rip)
43b5(7): lea 0x365f(%rip),%rax
43bc(5): mov $0x1,0xe(%rsp)
43c1(5): mov $0x0,0x7c(%rsp)
43c6(3): xor %r12d,%r12d
43c9(9): mov $0x0,0x50(%rsp)
43d2(5): mov $0x1,0xf(%rsp)
43d7(5): mov $0x1,0xd(%rsp)
43dc(9): mov $0x1,0x18(%rsp)
43e5(3): xor %r15d,%r15d
43e8(5): mov %rax,0x48(%rsp)
43ed(8): mov $0x5,0x8(%rsp)
43f5(5): jmp 0xfffff37e(%rip)
43fa(5): mov $0x1,0xe(%rsp)
43ff(5): mov $0x0,0x7c(%rsp)
4404(3): xor %r12d,%r12d
4407(9): mov $0x0,0x50(%rsp)
4410(5): mov $0x0,0xf(%rsp)
4415(3): xor %r15d,%r15d
4418(5): mov $0x1,0xd(%rsp)
441d(9): mov $0x0,0x18(%rsp)
4426(9): mov $0x0,0x48(%rsp)
442f(5): jmp 0xfffff344(%rip)
4434(5): cmp $0xa,0x8(%rsp)
4439(2): jz 0x58(%rip)
443b(7): lea 0x35db(%rip),%rsi
4442(2): xor %edi,%edi
4444(5): mov $0x5,%edx
4449(5): call 0xffffd957(%rip)
444e(3): mov %rax,%rcx
4451(5): mov %rax,0x68(%rsp)
4456(7): lea 0x35c0(%rip),%rax
445d(3): cmp %rax,%rcx
4460(6): jz 0x39e(%rip)
4466(7): lea 0x1e6a(%rip),%rsi
446d(2): xor %edi,%edi
446f(5): mov $0x5,%edx
4474(5): call 0xffffd92c(%rip)
4479(3): mov %rax,%rcx
447c(5): mov %rax,0x60(%rsp)
4481(7): lea 0x1e4f(%rip),%rax
4488(3): cmp %rax,%rcx
448b(6): jz 0x389(%rip)
4491(3): xor %r15d,%r15d
4494(2): test %ebx,%ebx
4496(6): jz 0x1c7(%rip)
449c(2): test %ebx,%ebx
449e(5): mov 0x60(%rsp),%rbx
44a3(5): setnz 0xf(%rsp)
44a8(3): xor %r12d,%r12d
44ab(3): mov %rbx,%rdi
44ae(5): call 0xffffd912(%rip)
44b3(5): mov %rbx,0x48(%rsp)
44b8(5): mov %rax,0x18(%rsp)
44bd(5): mov $0x1,0xe(%rsp)
44c2(5): mov $0x0,0x7c(%rsp)
44c7(9): mov $0x0,0x50(%rsp)
44d0(5): mov $0x1,0xd(%rsp)
44d5(5): jmp 0xfffff29e(%rip)
44da(5): mov $0x1,0xe(%rsp)
44df(5): mov $0x0,0x7c(%rsp)
44e4(3): xor %r12d,%r12d
44e7(9): mov $0x0,0x50(%rsp)
44f0(5): mov $0x0,0xf(%rsp)
44f5(3): xor %r15d,%r15d
44f8(5): mov $0x0,0xd(%rsp)
44fd(9): mov $0x0,0x18(%rsp)
4506(9): mov $0x0,0x48(%rsp)
450f(5): jmp 0xfffff264(%rip)
4514(5): mov $0x1,0xe(%rsp)
4519(5): mov $0x0,0x7c(%rsp)
451e(3): xor %r12d,%r12d
4521(9): mov $0x0,0x50(%rsp)
452a(5): mov $0x1,0xf(%rsp)
452f(5): mov $0x1,0xd(%rsp)
4534(5): jmp 0xfffff21f(%rip)
4539(3): cmp %r15,%r13
453c(2): jbe 0x7(%rip)
453e(5): mov $0x30,0x0(%r14,%r15,1)
4543(4): lea 0x2(%rcx),%rax
4547(3): cmp %rax,%r13
454a(2): jbe 0x8(%rip)
454c(6): mov $0x30,0x2(%r14,%rcx,1)
4552(3): mov %r12d,%eax
4555(4): lea 0x3(%rcx),%r15
4559(3): xor %r12d,%r12d
455c(5): mov $0x30,%ebx
4561(5): jmp 0xfffff367(%rip)
4566(a): nop 0x0(%rax,%rax,1)
4570(5): movzx 0xf(%rsp),%ebx
4575(3): mov %r11,%rbp
4578(4): mov %bl,0xd(%rsp)
457c(5): jmp 0xfffffcad(%rip)
4581(5): movzx 0xd(%rsp),%edx
4586(3): xor %r12d,%r12d
4589(5): jmp 0xfffffb07(%rip)
458e(3): xor %r10d,%r10d
4591(5): jmp 0xfffffbbc(%rip)
4596(9): mov $0x0,0x50(%rsp)
459f(5): mov $0x1,0xe(%rsp)
45a4(3): xor %r12d,%r12d
45a7(5): mov $0x0,0x7c(%rsp)
45ac(5): jmp 0xfffffddf(%rip)
45b1(5): mov 0x30(%rsp),%r11
45b6(3): mov %r14,%rsi
45b9(3): mov %r13,%rcx
45bc(3): mov %rbx,%rax
45bf(3): mov %rbx,%rdi
45c2(6): movzx 0x7d(%rsp),%r8d
45c8(5): movzx 0x7e(%rsp),%ebx
45cd(8): mov 0x88(%rsp),%r9
45d5(3): cmp %r11,%rsi
45d8(6): movzx 0x7f(%rsp),%r10d
45de(8): mov 0x80(%rsp),%r15
45e6(5): mov 0x40(%rsp),%r14
45eb(5): mov 0x70(%rsp),%r13
45f0(2): jnb 0x28(%rip)
45f2(3): cmp $0x0,(%rcx)
45f5(2): jnz 0x12(%rip)
45f7(2): jmp 0x21(%rip)
45f9(7): nop 0x0(%rax)
4600(5): cmp $0x0,0x0(%r9,%rax,1)
4605(2): jz 0x10(%rip)
4607(4): add $0x1,%rax
460b(5): lea 0x0(%rbp,%rax,1),%rdx
4610(3): cmp %rdx,%r11
4613(2): jnbe 0xffffffed(%rip)
4615(3): mov %rax,%rdi
4618(5): movzx 0xd(%rsp),%edx
461d(3): xor %r12d,%r12d
4620(5): jmp 0xfffffa66(%rip)
4625(3): mov %rbx,%rdi
4628(6): movzx 0x7d(%rsp),%r8d
462e(5): movzx 0x7e(%rsp),%ebx
4633(6): movzx 0x7f(%rsp),%r10d
4639(8): mov 0x80(%rsp),%r15
4641(3): xor %r12d,%r12d
4644(5): mov 0x40(%rsp),%r14
4649(5): mov 0x70(%rsp),%r13
464e(5): mov 0x30(%rsp),%r11
4653(5): movzx 0xd(%rsp),%edx
4658(5): jmp 0xfffffa2e(%rip)
465d(5): mov 0x68(%rsp),%rdx
4662(3): movzx (%rdx),%eax
4665(2): test %al,%al
4667(6): jz 0xfffffe35(%rip)
466d(3): nop (%rax)
4670(3): cmp %r15,%r13
4673(2): jbe 0x6(%rip)
4675(4): mov %al,0x0(%r14,%r15,1)
4679(4): add $0x1,%r15
467d(5): movzx 0x0(%rdx,%r15,1),%eax
4682(2): test %al,%al
4684(2): jnz 0xffffffec(%rip)
4686(5): jmp 0xfffffe16(%rip)
468b(2): mov %edx,%eax
468d(5): jmp 0xfffff55a(%rip)
4692(4): movzx 0x0(%rax,%rcx,1),%ebx
4696(3): cmp $0x3e,%bl
4699(6): jnbe 0xfffff877(%rip)
469f(a): mov $0x8070630310989004800,%rax
46a9(4): bt %rbx,%rax
46ad(6): jnb 0xfffff863(%rip)
46b3(5): cmp $0x0,0xf(%rsp)
46b8(6): jnz 0x1ea(%rip)
46be(3): cmp %r15,%r13
46c1(2): jbe 0x7(%rip)
46c3(5): mov $0x3f,0x0(%r14,%r15,1)
46c8(4): lea 0x1(%r15),%rax
46cc(3): cmp %rax,%r13
46cf(2): jbe 0x8(%rip)
46d1(6): mov $0x22,0x1(%r14,%r15,1)
46d7(4): lea 0x2(%r15),%rax
46db(3): cmp %rax,%r13
46de(2): jbe 0x8(%rip)
46e0(6): mov $0x22,0x2(%r14,%r15,1)
46e6(4): lea 0x3(%r15),%rax
46ea(3): cmp %rax,%r13
46ed(2): jbe 0x8(%rip)
46ef(6): mov $0x3f,0x3(%r14,%r15,1)
46f5(4): add $0x4,%r15
46f9(2): xor %edx,%edx
46fb(3): xor %r12d,%r12d
46fe(2): xor %eax,%eax
4700(3): mov %rcx,%rbp
4703(5): jmp 0xfffff1c5(%rip)
4708(2): test %ebx,%ebx
470a(6): jz 0x18e(%rip)
4710(7): lea 0x1bc0(%rip),%rax
4717(5): mov $0x1,0xe(%rsp)
471c(5): mov $0x0,0x7c(%rsp)
4721(3): xor %r12d,%r12d
4724(9): mov $0x0,0x50(%rsp)
472d(5): mov $0x1,0xf(%rsp)
4732(5): mov $0x0,0xd(%rsp)
4737(9): mov $0x1,0x18(%rsp)
4740(3): xor %r15d,%r15d
4743(5): mov %rax,0x48(%rsp)
4748(5): jmp 0xfffff02b(%rip)
474d(3): nop (%rax)
4750(3): mov %r11,%rbp
4753(5): movzx 0xf(%rsp),%eax
4758(5): jmp 0xfffffad1(%rip)
475d(7): lea 0x32b7(%rip),%rax
4764(5): mov $0x1,0xe(%rsp)
4769(5): mov $0x0,0x7c(%rsp)
476e(3): xor %r12d,%r12d
4771(9): mov $0x0,0x50(%rsp)
477a(5): mov $0x1,0xf(%rsp)
477f(5): mov $0x1,0xd(%rsp)
4784(9): mov $0x1,0x18(%rsp)
478d(3): xor %r15d,%r15d
4790(5): mov %rax,0x48(%rsp)
4795(5): jmp 0xffffefde(%rip)
479a(2): mov %edx,%eax
479c(5): mov 0x48(%rsp),%rbx
47a1(3): test %rbx,%rbx
47a4(2): jz 0x2e(%rip)
47a6(2): test %al,%al
47a8(2): jz 0x2a(%rip)
47aa(3): movzx (%rbx),%ecx
47ad(3): mov %rbx,%rax
47b0(2): test %cl,%cl
47b2(2): jz 0x20(%rip)
47b4(3): mov %r15,%rdx
47b7(3): sub %r15,%rax
47ba(3): cmp %rdx,%r13
47bd(2): jbe 0x6(%rip)
47bf(4): mov %cl,0x0(%r14,%rdx,1)
47c3(4): add $0x1,%rdx
47c7(4): movzx 0x0(%rax,%rdx,1),%ecx
47cb(2): test %cl,%cl
47cd(2): jnz 0xffffffed(%rip)
47cf(3): mov %rdx,%r15
47d2(3): cmp %r15,%r13
47d5(6): jbe 0xfffffaa4(%rip)
47db(5): mov $0x0,0x0(%r14,%r15,1)
47e0(5): jmp 0xfffffa99(%rip)
47e5(5): cmp $0x2,0x8(%rsp)
47ea(5): movzx 0xf(%rsp),%ebx
47ef(3): mov %r11,%rbp
47f2(3): setz %al
47f5(4): mov %bl,0xd(%rsp)
47f9(5): jmp 0xfffffa30(%rip)
47fe(4): mov 0x8(%rsp),%esi
4802(3): mov %rcx,%rdi
4805(5): call 0xffffedab(%rip)
480a(5): mov %rax,0x68(%rsp)
480f(5): jmp 0xfffffc57(%rip)
4814(4): mov 0x8(%rsp),%esi
4818(3): mov %rcx,%rdi
481b(5): call 0xffffed95(%rip)
4820(5): mov %rax,0x60(%rsp)
4825(5): jmp 0xfffffc6c(%rip)
482a(5): movzx 0xf(%rsp),%ebx
482f(3): mov %r11,%rbp
4832(2): mov %edx,%eax
4834(4): mov %bl,0xd(%rsp)
4838(5): jmp 0xfffff9f1(%rip)
483d(4): sub $0x8,%rsp
4841(6): mov $0x5,%r8d
4847(3): mov %r11,%rcx
484a(4): push 0x68(%rsp)
484e(4): push 0x78(%rsp)
4852(3): mov %r14,%rdi
4855(4): push 0x38(%rsp)
4859(8): mov 0x98(%rsp),%r9d
4861(5): mov 0x30(%rsp),%rdx
4866(5): mov 0x70(%rsp),%rsi
486b(5): call 0xffffee35(%rip)
4870(4): add $0x20,%rsp
4874(3): mov %rax,%r15
4877(5): jmp 0xfffffa02(%rip)
487c(5): movzx 0x7c(%rsp),%eax
4881(5): jmp 0xffffff1b(%rip)
4886(8): mov $0x2,0x8(%rsp)
488e(5): jmp 0xfffff99b(%rip)
4893(5): call 0xffffd53d(%rip)
4898(5): mov $0x0,0xd(%rsp)
489d(5): jmp 0xfffffa74(%rip)
48a2(3): mov %r11,%rbp
48a5(5): jmp 0xfffff99b(%rip)
48aa(5): mov $0x1,0xe(%rsp)
48af(2): xor %eax,%eax
48b1(3): xor %r12d,%r12d
48b4(9): mov $0x0,0x50(%rsp)
48bd(5): jmp 0xfffff5a7(%rip)
48c2(3): mov %r13,%rdx
48c5(5): mov 0x50(%rsp),%r13
48ca(5): jmp 0xfffff5f8(%rip)
48cf(5): call 0xffffd441(%rip)

"quotearg_n_options" :
48e0(2): push %r15
48e2(2): push %r14
48e4(3): movsxd %edi,%r15
48e7(2): push %r13
48e9(2): push %r12
48eb(3): mov %rdx,%r14
48ee(1): push %rbp
48ef(1): push %rbx
48f0(3): mov %rcx,%rbp
48f3(4): sub $0x28,%rsp
48f7(5): mov %rsi,0x8(%rsp)
48fc(5): call 0xffffd424(%rip)
4901(3): mov %rax,%r13
4904(2): mov (%rax),%eax
4906(3): test %r15d,%r15d
4909(7): mov 0x205750(%rip),%rbx
4910(4): mov %eax,0x18(%rsp)
4914(6): js 0x16d(%rip)
491a(7): cmp %r15d,0x205737(%rip)
4921(2): jnle 0x64(%rip)
4923(7): cmp $0x7fffffff,%r15d
492a(6): jz 0x15c(%rip)
4930(4): lea 0x1(%r15),%r12d
4934(7): lea 0x205735(%rip),%rax
493b(3): movsxd %r12d,%rsi
493e(4): shl/sal $0x4,%rsi
4942(3): cmp %rax,%rbx
4945(6): jz 0x11b(%rip)
494b(3): mov %rbx,%rdi
494e(5): call 0xf72(%rip)
4953(3): mov %rax,%rbx
4956(7): mov %rax,0x205703(%rip)
495d(7): movsxd 0x2056f4(%rip),%rdi
4964(3): mov %r12d,%edx
4967(2): xor %esi,%esi
4969(2): sub %edi,%edx
496b(4): shl/sal $0x4,%rdi
496f(3): movsxd %edx,%rdx
4972(3): add %rbx,%rdi
4975(4): shl/sal $0x4,%rdx
4979(5): call 0xffffd4c7(%rip)
497e(7): mov %r12d,0x2056d3(%rip)
4985(3): mov 0x4(%rbp),%eax
4988(4): shl/sal $0x4,%r15
498c(4): sub $0x8,%rsp
4990(3): add %r15,%rbx
4993(4): lea 0x8(%rbp),%r15
4997(4): mov 0x0(%rbp),%r8d
499b(3): mov (%rbx),%r11
499e(4): mov 0x8(%rbx),%r12
49a2(3): mov %r14,%rcx
49a5(3): or $0x1,%eax
49a8(4): mov %eax,0x24(%rsp)
49ac(3): push 0x30(%rbp)
49af(3): mov %eax,%r9d
49b2(3): push 0x28(%rbp)
49b5(2): push %r15
49b7(3): mov %r11,%rsi
49ba(5): mov 0x28(%rsp),%rdx
49bf(3): mov %r12,%rdi
49c2(5): mov %r11,0x30(%rsp)
49c7(5): call 0xffffecd9(%rip)
49cc(4): add $0x20,%rsp
49d0(5): mov 0x10(%rsp),%r11
49d5(3): cmp %rax,%r11
49d8(2): jnbe 0x69(%rip)
49da(4): lea 0x1(%rax),%rsi
49de(7): lea 0x20579b(%rip),%rax
49e5(3): cmp %rax,%r12
49e8(3): mov %rsi,(%rbx)
49eb(2): jz 0x14(%rip)
49ed(3): mov %r12,%rdi
49f0(5): mov %rsi,0x10(%rsp)
49f5(5): call 0xffffd60b(%rip)
49fa(5): mov 0x10(%rsp),%rsi
49ff(3): mov %rsi,%rdi
4a02(5): mov %rsi,0x10(%rsp)
4a07(5): call 0xe59(%rip)
4a0c(4): sub $0x8,%rsp
4a10(4): mov %rax,0x8(%rbx)
4a14(4): mov 0x0(%rbp),%r8d
4a18(3): push 0x30(%rbp)
4a1b(3): push 0x28(%rbp)
4a1e(3): mov %r14,%rcx
4a21(2): push %r15
4a23(5): mov 0x3c(%rsp),%r9d
4a28(3): mov %rax,%rdi
4a2b(5): mov 0x28(%rsp),%rdx
4a30(5): mov 0x30(%rsp),%rsi
4a35(3): mov %rax,%r12
4a38(5): call 0xffffec68(%rip)
4a3d(4): add $0x20,%rsp
4a41(4): mov 0x18(%rsp),%eax
4a45(4): mov %eax,0x0(%r13)
4a49(4): add $0x28,%rsp
4a4d(3): mov %r12,%rax
4a50(1): pop %rbx
4a51(1): pop %rbp
4a52(2): pop %r12
4a54(2): pop %r13
4a56(2): pop %r14
4a58(2): pop %r15
4a5a(1): ret near (%rsp)
4a5b(5): nop 0x0(%rax,%rax,1)
4a60(2): xor %edi,%edi
4a62(5): call 0xe5e(%rip)
4a67(8): movdqa 0x205601(%rip),%xmm0
4a6f(3): mov %rax,%rbx
4a72(7): mov %rax,0x2055e7(%rip)
4a79(3): movups %xmm0,(%rax)
4a7c(5): jmp 0xfffffee1(%rip)
4a81(5): call 0xffffd28f(%rip)
4a86(5): call 0x102a(%rip)

"clone_quoting_options" :
4a90(2): push %r12
4a92(1): push %rbp
4a93(1): push %rbx
4a94(3): mov %rdi,%rbx
4a97(5): call 0xffffd289(%rip)
4a9c(3): mov (%rax),%r12d
4a9f(3): mov %rax,%rbp
4aa2(7): lea 0x2057d7(%rip),%rax
4aa9(3): test %rbx,%rbx
4aac(5): mov $0x38,%esi
4ab1(4): cmove %rax,%rbx
4ab5(3): mov %rbx,%rdi
4ab8(5): call 0xfa8(%rip)
4abd(4): mov %r12d,0x0(%rbp)
4ac1(1): pop %rbx
4ac2(1): pop %rbp
4ac3(2): pop %r12
4ac5(1): ret near (%rsp)

"get_quoting_style" :
4ad0(7): lea 0x2057a9(%rip),%rax
4ad7(3): test %rdi,%rdi
4ada(4): cmove %rax,%rdi
4ade(2): mov (%rdi),%eax
4ae0(1): ret near (%rsp)

"set_quoting_style" :
4af0(7): lea 0x205789(%rip),%rax
4af7(3): test %rdi,%rdi
4afa(4): cmove %rax,%rdi
4afe(2): mov %esi,(%rdi)
4b00(1): ret near (%rsp)

"set_char_quoting" :
4b10(7): lea 0x205769(%rip),%rax
4b17(3): test %rdi,%rdi
4b1a(2): mov %esi,%ecx
4b1c(4): cmove %rax,%rdi
4b20(2): mov %esi,%eax
4b22(3): and $0x1f,%ecx
4b25(3): shr $0x5,%al
4b28(3): movzx %al,%eax
4b2b(5): lea 0x8(%rdi,%rax,4),%rdi
4b30(2): mov (%rdi),%esi
4b32(2): mov %esi,%eax
4b34(2): shr %cl,%eax
4b36(2): xor %eax,%edx
4b38(3): and $0x1,%eax
4b3b(3): and $0x1,%edx
4b3e(2): shl/sal %cl,%edx
4b40(2): xor %esi,%edx
4b42(2): mov %edx,(%rdi)
4b44(1): ret near (%rsp)

"set_quoting_flags" :
4b50(7): lea 0x205729(%rip),%rax
4b57(3): test %rdi,%rdi
4b5a(4): cmove %rax,%rdi
4b5e(3): mov 0x4(%rdi),%eax
4b61(3): mov %esi,0x4(%rdi)
4b64(1): ret near (%rsp)

"set_custom_quoting" :
4b70(7): lea 0x205709(%rip),%rax
4b77(3): test %rdi,%rdi
4b7a(4): cmove %rax,%rdi
4b7e(3): test %rsi,%rsi
4b81(6): mov $0xa,(%rdi)
4b87(2): jz 0x10(%rip)
4b89(3): test %rdx,%rdx
4b8c(2): jz 0xb(%rip)
4b8e(4): mov %rsi,0x28(%rdi)
4b92(4): mov %rdx,0x30(%rdi)
4b96(1): ret near (%rsp)
4b97(4): sub $0x8,%rsp
4b9b(5): call 0xffffd175(%rip)

"quotearg_buffer" :
4ba0(2): push %r15
4ba2(2): push %r14
4ba4(7): lea 0x2056d5(%rip),%rax
4bab(2): push %r13
4bad(2): push %r12
4baf(3): mov %rdi,%r13
4bb2(1): push %rbp
4bb3(1): push %rbx
4bb4(3): mov %r8,%rbx
4bb7(3): mov %rsi,%r14
4bba(3): mov %rdx,%r15
4bbd(4): sub $0x18,%rsp
4bc1(3): test %r8,%r8
4bc4(4): cmove %rax,%rbx
4bc8(5): mov %rcx,0x8(%rsp)
4bcd(5): call 0xffffd153(%rip)
4bd2(3): mov (%rax),%r12d
4bd5(3): mov %rax,%rbp
4bd8(4): lea 0x8(%rbx),%rax
4bdc(4): sub $0x8,%rsp
4be0(4): mov 0x4(%rbx),%r9d
4be4(3): push 0x30(%rbx)
4be7(3): mov (%rbx),%r8d
4bea(3): push 0x28(%rbx)
4bed(3): mov %r15,%rdx
4bf0(1): push %rax
4bf1(5): mov 0x28(%rsp),%rcx
4bf6(3): mov %r14,%rsi
4bf9(3): mov %r13,%rdi
4bfc(5): call 0xffffeaa4(%rip)
4c01(4): mov %r12d,0x0(%rbp)
4c05(4): add $0x38,%rsp
4c09(1): pop %rbx
4c0a(1): pop %rbp
4c0b(2): pop %r12
4c0d(2): pop %r13
4c0f(2): pop %r14
4c11(2): pop %r15
4c13(1): ret near (%rsp)

"quotearg_alloc_mem" :
4c20(2): push %r15
4c22(2): push %r14
4c24(7): lea 0x205655(%rip),%rax
4c2b(2): push %r13
4c2d(2): push %r12
4c2f(3): mov %rdx,%r12
4c32(1): push %rbp
4c33(1): push %rbx
4c34(3): mov %rcx,%rbx
4c37(3): mov %rdi,%r14
4c3a(3): mov %rsi,%r15
4c3d(4): sub $0x38,%rsp
4c41(3): test %rcx,%rcx
4c44(4): cmove %rax,%rbx
4c48(2): xor %ebp,%ebp
4c4a(5): call 0xffffd0d6(%rip)
4c4f(3): test %r12,%r12
4c52(3): mov %rax,%r13
4c55(2): mov (%rax),%eax
4c57(4): setz %bpl
4c5b(3): or 0x4(%rbx),%ebp
4c5e(4): lea 0x8(%rbx),%r10
4c62(4): sub $0x8,%rsp
4c66(3): mov (%rbx),%r8d
4c69(3): mov %r15,%rcx
4c6c(4): mov %eax,0x14(%rsp)
4c70(3): push 0x30(%rbx)
4c73(3): mov %r14,%rdx
4c76(3): push 0x28(%rbx)
4c79(2): push %r10
4c7b(2): xor %esi,%esi
4c7d(3): mov %ebp,%r9d
4c80(2): xor %edi,%edi
4c82(5): mov %r10,0x40(%rsp)
4c87(5): call 0xffffea19(%rip)
4c8c(4): lea 0x1(%rax),%rsi
4c90(5): mov %rax,0x48(%rsp)
4c95(4): add $0x20,%rsp
4c99(3): mov %rsi,%rdi
4c9c(5): mov %rsi,0x18(%rsp)
4ca1(5): call 0xbbf(%rip)
4ca6(5): mov %rax,0x10(%rsp)
4cab(4): sub $0x8,%rsp
4caf(3): push 0x30(%rbx)
4cb2(3): push 0x28(%rbx)
4cb5(5): mov 0x38(%rsp),%r10
4cba(3): mov %ebp,%r9d
4cbd(3): mov (%rbx),%r8d
4cc0(3): mov %r15,%rcx
4cc3(3): mov %r14,%rdx
4cc6(3): mov %rax,%rdi
4cc9(2): push %r10
4ccb(5): mov 0x38(%rsp),%rsi
4cd0(5): call 0xffffe9d0(%rip)
4cd5(4): mov 0x2c(%rsp),%eax
4cd9(4): add $0x20,%rsp
4cdd(3): test %r12,%r12
4ce0(4): mov %eax,0x0(%r13)
4ce4(2): jz 0xb(%rip)
4ce6(5): mov 0x28(%rsp),%r11
4ceb(4): mov %r11,(%r12)
4cef(5): mov 0x10(%rsp),%rax
4cf4(4): add $0x38,%rsp
4cf8(1): pop %rbx
4cf9(1): pop %rbp
4cfa(2): pop %r12
4cfc(2): pop %r13
4cfe(2): pop %r14
4d00(2): pop %r15
4d02(1): ret near (%rsp)

"quotearg_alloc" :
4d10(3): mov %rdx,%rcx
4d13(2): xor %edx,%edx
4d15(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4d20(6): mov 0x205332(%rip),%eax
4d26(2): push %r12
4d28(7): mov 0x205331(%rip),%r12
4d2f(1): push %rbp
4d30(1): push %rbx
4d31(3): cmp $0x1,%eax
4d34(2): jle 0x2d(%rip)
4d36(3): sub $0x2,%eax
4d39(5): lea 0x18(%r12),%rbx
4d3e(4): shl/sal $0x4,%rax
4d42(5): lea 0x28(%r12,%rax,1),%rbp
4d47(9): nop 0x0(%rax,%rax,1)
4d50(3): mov (%rbx),%rdi
4d53(4): add $0x10,%rbx
4d57(5): call 0xffffd2a9(%rip)
4d5c(3): cmp %rbp,%rbx
4d5f(2): jnz 0xfffffff1(%rip)
4d61(5): mov 0x8(%r12),%rdi
4d66(7): lea 0x205413(%rip),%rbx
4d6d(3): cmp %rbx,%rdi
4d70(2): jz 0x19(%rip)
4d72(5): call 0xffffd28e(%rip)
4d77(b): mov $0x100,0x2052ee(%rip)
4d82(7): mov %rbx,0x2052ef(%rip)
4d89(7): lea 0x2052e0(%rip),%rbx
4d90(3): cmp %rbx,%r12
4d93(2): jz 0x11(%rip)
4d95(3): mov %r12,%rdi
4d98(5): call 0xffffd268(%rip)
4d9d(7): mov %rbx,0x2052bc(%rip)
4da4(1): pop %rbx
4da5(a): mov $0x1,0x2052a9(%rip)
4daf(1): pop %rbp
4db0(2): pop %r12
4db2(1): ret near (%rsp)

"quotearg_n" :
4dc0(7): lea 0x2054b9(%rip),%rcx
4dc7(7): mov $0xffffffff,%rdx
4dce(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4de0(7): lea 0x205499(%rip),%rcx
4de7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4df0(7): lea 0x205489(%rip),%rcx
4df7(3): mov %rdi,%rsi
4dfa(7): mov $0xffffffff,%rdx
4e01(2): xor %edi,%edi
4e03(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4e10(7): lea 0x205469(%rip),%rcx
4e17(3): mov %rsi,%rdx
4e1a(3): mov %rdi,%rsi
4e1d(2): xor %edi,%edi
4e1f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4e30(4): sub $0x48,%rsp
4e34(3): mov %rdx,%rax
4e37(9): mov $0x28,%rdx
4e40(5): mov %rdx,0x38(%rsp)
4e45(2): xor %edx,%edx
4e47(3): cmp $0xa,%esi
4e4a(2): jz 0x6a(%rip)
4e4c(3): mov %esi,(%rsp)
4e4f(3): mov %rsp,%rcx
4e52(7): mov $0xffffffff,%rdx
4e59(3): mov %rax,%rsi
4e5c(9): mov $0x0,0x4(%rsp)
4e65(9): mov $0x0,0xc(%rsp)
4e6e(9): mov $0x0,0x14(%rsp)
4e77(9): mov $0x0,0x1c(%rsp)
4e80(9): mov $0x0,0x24(%rsp)
4e89(9): mov $0x0,0x2c(%rsp)
4e92(8): mov $0x0,0x34(%rsp)
4e9a(5): call 0xfffffa46(%rip)
4e9f(5): mov 0x38(%rsp),%rcx
4ea4(9): xor $0x28,%rcx
4ead(2): jnz 0xc(%rip)
4eaf(4): add $0x48,%rsp
4eb3(1): ret near (%rsp)
4eb4(5): call 0xffffce5c(%rip)
4eb9(5): call 0xffffcf17(%rip)

"quotearg_n_style_mem" :
4ec0(4): sub $0x48,%rsp
4ec4(3): mov %rdx,%rax
4ec7(3): mov %rcx,%rdx
4eca(9): mov $0x28,%rcx
4ed3(5): mov %rcx,0x38(%rsp)
4ed8(2): xor %ecx,%ecx
4eda(3): cmp $0xa,%esi
4edd(2): jz 0x63(%rip)
4edf(3): mov %esi,(%rsp)
4ee2(3): mov %rsp,%rcx
4ee5(3): mov %rax,%rsi
4ee8(9): mov $0x0,0x4(%rsp)
4ef1(9): mov $0x0,0xc(%rsp)
4efa(9): mov $0x0,0x14(%rsp)
4f03(9): mov $0x0,0x1c(%rsp)
4f0c(9): mov $0x0,0x24(%rsp)
4f15(9): mov $0x0,0x2c(%rsp)
4f1e(8): mov $0x0,0x34(%rsp)
4f26(5): call 0xfffff9ba(%rip)
4f2b(5): mov 0x38(%rsp),%rdx
4f30(9): xor $0x28,%rdx
4f39(2): jnz 0xc(%rip)
4f3b(4): add $0x48,%rsp
4f3f(1): ret near (%rsp)
4f40(5): call 0xffffcdd0(%rip)
4f45(5): call 0xffffce8b(%rip)

"quotearg_style" :
4f50(3): mov %rsi,%rdx
4f53(2): mov %edi,%esi
4f55(2): xor %edi,%edi
4f57(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4f60(3): mov %rdx,%rcx
4f63(3): mov %rsi,%rdx
4f66(2): mov %edi,%esi
4f68(2): xor %edi,%edi
4f6a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4f70(4): sub $0x48,%rsp
4f74(2): mov %edx,%ecx
4f76(9): mov $0x28,%rax
4f7f(5): mov %rax,0x38(%rsp)
4f84(2): xor %eax,%eax
4f86(7): mov 0x205323(%rip),%rax
4f8d(3): mov %rsp,%r8
4f90(3): and $0x1f,%ecx
4f93(8): movdqa 0x2052e5(%rip),%xmm0
4f9b(5): mov %rax,0x30(%rsp)
4fa0(2): mov %edx,%eax
4fa2(4): movaps %xmm0,(%rsp)
4fa6(3): shr $0x5,%al
4fa9(3): movzx %al,%eax
4fac(5): lea 0x8(%r8,%rax,4),%r9
4fb1(8): movdqa 0x2052d7(%rip),%xmm0
4fb9(5): movaps %xmm0,0x10(%rsp)
4fbe(8): movdqa 0x2052da(%rip),%xmm0
4fc6(5): movaps %xmm0,0x20(%rsp)
4fcb(3): mov (%r9),%edx
4fce(2): mov %edx,%eax
4fd0(2): shr %cl,%eax
4fd2(2): not %eax
4fd4(3): and $0x1,%eax
4fd7(2): shl/sal %cl,%eax
4fd9(3): mov %r8,%rcx
4fdc(2): xor %edx,%eax
4fde(3): mov %rsi,%rdx
4fe1(3): mov %rdi,%rsi
4fe4(3): mov %eax,(%r9)
4fe7(2): xor %edi,%edi
4fe9(5): call 0xfffff8f7(%rip)
4fee(5): mov 0x38(%rsp),%rsi
4ff3(9): xor $0x28,%rsi
4ffc(2): jnz 0x7(%rip)
4ffe(4): add $0x48,%rsp
5002(1): ret near (%rsp)
5003(5): call 0xffffcdcd(%rip)

"quotearg_char" :
5010(4): movsx %sil,%edx
5014(7): mov $0xffffffff,%rsi
501b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5020(5): mov $0x3a,%edx
5025(7): mov $0xffffffff,%rsi
502c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5040(5): mov $0x3a,%edx
5045(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5050(4): sub $0x48,%rsp
5054(3): mov %rdx,%rax
5057(9): mov $0x28,%rdx
5060(5): mov %rdx,0x38(%rsp)
5065(2): xor %edx,%edx
5067(3): cmp $0xa,%esi
506a(2): jz 0x6a(%rip)
506c(3): mov %esi,(%rsp)
506f(3): mov %rsp,%rcx
5072(7): mov $0xffffffff,%rdx
5079(3): mov %rax,%rsi
507c(9): mov $0x0,0x4(%rsp)
5085(9): mov $0x4000000,0xc(%rsp)
508e(9): mov $0x0,0x14(%rsp)
5097(9): mov $0x0,0x1c(%rsp)
50a0(9): mov $0x0,0x24(%rsp)
50a9(9): mov $0x0,0x2c(%rsp)
50b2(8): mov $0x0,0x34(%rsp)
50ba(5): call 0xfffff826(%rip)
50bf(5): mov 0x38(%rsp),%rcx
50c4(9): xor $0x28,%rcx
50cd(2): jnz 0xc(%rip)
50cf(4): add $0x48,%rsp
50d3(1): ret near (%rsp)
50d4(5): call 0xffffcc3c(%rip)
50d9(5): call 0xffffccf7(%rip)

"quotearg_n_custom_mem" :
50e0(4): sub $0x48,%rsp
50e4(3): mov %rcx,%r9
50e7(7): mov 0x2051c2(%rip),%rcx
50ee(8): movdqa 0x20518a(%rip),%xmm0
50f6(9): mov $0x28,%rax
50ff(5): mov %rax,0x38(%rsp)
5104(2): xor %eax,%eax
5106(4): movaps %xmm0,(%rsp)
510a(3): test %rsi,%rsi
510d(5): mov %rcx,0x30(%rsp)
5112(7): mov $0xa,(%rsp)
5119(8): movdqa 0x20516f(%rip),%xmm0
5121(5): movaps %xmm0,0x10(%rsp)
5126(8): movdqa 0x205172(%rip),%xmm0
512e(5): movaps %xmm0,0x20(%rsp)
5133(2): jz 0x34(%rip)
5135(3): test %rdx,%rdx
5138(2): jz 0x2f(%rip)
513a(5): mov %rsi,0x28(%rsp)
513f(5): mov %rdx,0x30(%rsp)
5144(3): mov %rsp,%rcx
5147(3): mov %r8,%rdx
514a(3): mov %r9,%rsi
514d(5): call 0xfffff793(%rip)
5152(5): mov 0x38(%rsp),%rdi
5157(9): xor $0x28,%rdi
5160(2): jnz 0xc(%rip)
5162(4): add $0x48,%rsp
5166(1): ret near (%rsp)
5167(5): call 0xffffcba9(%rip)
516c(5): call 0xffffcc64(%rip)

"quotearg_n_custom" :
5180(7): mov $0xffffffff,%r8
5187(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5190(3): mov %rdx,%rcx
5193(7): mov $0xffffffff,%r8
519a(3): mov %rsi,%rdx
519d(3): mov %rdi,%rsi
51a0(2): xor %edi,%edi
51a2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
51b0(3): mov %rcx,%r8
51b3(3): mov %rdx,%rcx
51b6(3): mov %rsi,%rdx
51b9(3): mov %rdi,%rsi
51bc(2): xor %edi,%edi
51be(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
51d0(7): lea 0x204e49(%rip),%rcx
51d7(5): jmp 0xfffff709(%rip)

"quote_mem" :
51e0(7): lea 0x204e39(%rip),%rcx
51e7(3): mov %rsi,%rdx
51ea(3): mov %rdi,%rsi
51ed(2): xor %edi,%edi
51ef(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5200(7): lea 0x204e19(%rip),%rcx
5207(7): mov $0xffffffff,%rdx
520e(5): jmp 0xfffff6d2(%rip)

"quote" :
5220(7): lea 0x204df9(%rip),%rcx
5227(3): mov %rdi,%rsi
522a(7): mov $0xffffffff,%rdx
5231(2): xor %edi,%edi
5233(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
5240(2): push %r15
5242(2): push %r14
5244(2): push %r13
5246(2): push %r12
5248(3): mov %r9,%r12
524b(1): push %rbp
524c(1): push %rbx
524d(3): mov %rdi,%rbp
5250(3): mov %r8,%rbx
5253(4): sub $0x28,%rsp
5257(3): test %rsi,%rsi
525a(6): jz 0x11e(%rip)
5260(3): mov %rdx,%r8
5263(7): lea 0x2c7e(%rip),%rdx
526a(3): mov %rcx,%r9
526d(2): xor %eax,%eax
526f(3): mov %rsi,%rcx
5272(5): mov $0x1,%esi
5277(5): call 0xffffcd49(%rip)
527c(7): lea 0x2c78(%rip),%rsi
5283(2): xor %edi,%edi
5285(5): mov $0x5,%edx
528a(5): call 0xffffcb16(%rip)
528f(7): lea 0x2f8a(%rip),%rdx
5296(3): mov %rax,%rcx
5299(6): mov $0x7e3,%r8d
529f(5): mov $0x1,%esi
52a4(3): mov %rbp,%rdi
52a7(2): xor %eax,%eax
52a9(5): call 0xffffcd17(%rip)
52ae(7): lea 0x2cd3(%rip),%rsi
52b5(2): xor %edi,%edi
52b7(5): mov $0x5,%edx
52bc(5): call 0xffffcae4(%rip)
52c1(3): mov %rbp,%rsi
52c4(3): mov %rax,%rdi
52c7(5): call 0xffffcbc9(%rip)
52cc(4): cmp $0x9,%r12
52d0(6): jnbe 0x340(%rip)
52d6(7): lea 0x2f0b(%rip),%rdx
52dd(4): movsxd 0x0(%rdx,%r12,4),%rax
52e1(3): add %rdx,%rax
52e4(2): jmp %rax
52e6(a): nop 0x0(%rax,%rax,1)
52f0(4): mov 0x38(%rbx),%r9
52f4(4): mov 0x10(%rbx),%rax
52f8(7): lea 0x2df9(%rip),%rsi
52ff(4): mov 0x8(%rbx),%r8
5303(5): mov $0x5,%edx
5308(2): xor %edi,%edi
530a(4): mov 0x30(%rbx),%r13
530e(4): mov 0x28(%rbx),%r12
5312(5): mov %r9,0x10(%rsp)
5317(4): mov 0x20(%rbx),%r15
531b(4): mov 0x18(%rbx),%r14
531f(4): mov %rax,(%rsp)
5323(5): mov %r8,0x8(%rsp)
5328(3): mov (%rbx),%rbx
532b(5): call 0xffffca75(%rip)
5330(4): sub $0x8,%rsp
5334(5): mov 0x18(%rsp),%r9
5339(3): mov %rax,%rdx
533c(3): mov %rbx,%rcx
533f(5): mov $0x1,%esi
5344(3): mov %rbp,%rdi
5347(2): xor %eax,%eax
5349(2): push %r9
534b(2): push %r13
534d(2): push %r12
534f(2): push %r15
5351(2): push %r14
5353(5): mov 0x30(%rsp),%r9
5358(5): mov 0x38(%rsp),%r8
535d(5): call 0xffffcc63(%rip)
5362(4): add $0x30,%rsp
5366(4): add $0x28,%rsp
536a(1): pop %rbx
536b(1): pop %rbp
536c(2): pop %r12
536e(2): pop %r13
5370(2): pop %r14
5372(2): pop %r15
5374(1): ret near (%rsp)
5375(3): nop (%rax)
5378(3): mov %rcx,%r8
537b(3): mov %rdx,%rcx
537e(7): lea 0x2b6f(%rip),%rdx
5385(5): mov $0x1,%esi
538a(2): xor %eax,%eax
538c(5): call 0xffffcc34(%rip)
5391(5): jmp 0xfffffeeb(%rip)
5396(a): nop 0x0(%rax,%rax,1)
53a0(4): mov 0x40(%rbx),%r10
53a4(4): mov 0x38(%rbx),%r9
53a8(7): lea 0x2d79(%rip),%rsi
53af(4): mov 0x10(%rbx),%rax
53b3(4): mov 0x8(%rbx),%r8
53b7(5): mov $0x5,%edx
53bc(4): mov 0x30(%rbx),%r13
53c0(4): mov 0x28(%rbx),%r12
53c4(4): mov 0x20(%rbx),%r15
53c8(4): mov 0x18(%rbx),%r14
53cc(3): mov (%rbx),%rbx
53cf(5): mov %r10,0x18(%rsp)
53d4(5): mov %r9,0x10(%rsp)
53d9(4): mov %rax,(%rsp)
53dd(5): mov %r8,0x8(%rsp)
53e2(2): xor %edi,%edi
53e4(5): call 0xffffc9bc(%rip)
53e9(5): mov 0x18(%rsp),%r10
53ee(2): push %r10
53f0(5): jmp 0xffffff44(%rip)
53f5(3): nop (%rax)
53f8(3): mov (%rbx),%rbx
53fb(7): lea 0x2afd(%rip),%rsi
5402(5): mov $0x5,%edx
5407(2): xor %edi,%edi
5409(5): call 0xffffc997(%rip)
540e(4): add $0x28,%rsp
5412(3): mov %rbx,%rcx
5415(3): mov %rbp,%rdi
5418(1): pop %rbx
5419(1): pop %rbp
541a(2): pop %r12
541c(2): pop %r13
541e(2): pop %r14
5420(2): pop %r15
5422(3): mov %rax,%rdx
5425(5): mov $0x1,%esi
542a(2): xor %eax,%eax
542c(5): jmp 0xffffcb94(%rip)
5431(7): nop 0x0(%rax)
5438(4): mov 0x8(%rbx),%r12
543c(7): lea 0x2acc(%rip),%rsi
5443(3): mov (%rbx),%rbx
5446(5): mov $0x5,%edx
544b(2): xor %edi,%edi
544d(5): call 0xffffc953(%rip)
5452(4): add $0x28,%rsp
5456(3): mov %r12,%r8
5459(3): mov %rbx,%rcx
545c(3): mov %rbp,%rdi
545f(3): mov %rax,%rdx
5462(5): mov $0x1,%esi
5467(1): pop %rbx
5468(1): pop %rbp
5469(2): pop %r12
546b(2): pop %r13
546d(2): pop %r14
546f(2): pop %r15
5471(2): xor %eax,%eax
5473(5): jmp 0xffffcb4d(%rip)
5478(8): nop 0x0(%rax,%rax,1)
5480(4): mov 0x10(%rbx),%r13
5484(4): mov 0x8(%rbx),%r12
5488(7): lea 0x2a97(%rip),%rsi
548f(3): mov (%rbx),%rbx
5492(5): mov $0x5,%edx
5497(2): xor %edi,%edi
5499(5): call 0xffffc907(%rip)
549e(4): add $0x28,%rsp
54a2(3): mov %r13,%r9
54a5(3): mov %r12,%r8
54a8(3): mov %rbx,%rcx
54ab(3): mov %rbp,%rdi
54ae(3): mov %rax,%rdx
54b1(1): pop %rbx
54b2(1): pop %rbp
54b3(2): pop %r12
54b5(2): pop %r13
54b7(2): pop %r14
54b9(2): pop %r15
54bb(5): mov $0x1,%esi
54c0(2): xor %eax,%eax
54c2(5): jmp 0xffffcafe(%rip)
54c7(9): nop 0x0(%rax,%rax,1)
54d0(7): lea 0x2b81(%rip),%rsi
54d7(5): mov $0x5,%edx
54dc(2): xor %edi,%edi
54de(4): mov 0x18(%rbx),%r14
54e2(4): mov 0x10(%rbx),%r13
54e6(4): mov 0x8(%rbx),%r12
54ea(3): mov (%rbx),%rbx
54ed(5): call 0xffffc8b3(%rip)
54f2(4): sub $0x8,%rsp
54f6(2): push %r14
54f8(3): mov %rax,%rdx
54fb(3): mov %r13,%r9
54fe(3): mov %r12,%r8
5501(3): mov %rbx,%rcx
5504(3): mov %rbp,%rdi
5507(5): mov $0x1,%esi
550c(2): xor %eax,%eax
550e(5): call 0xffffcab2(%rip)
5513(1): pop %rax
5514(1): pop %rdx
5515(4): add $0x28,%rsp
5519(1): pop %rbx
551a(1): pop %rbp
551b(2): pop %r12
551d(2): pop %r13
551f(2): pop %r14
5521(2): pop %r15
5523(1): ret near (%rsp)
5524(4): nop 0x0(%rax)
5528(4): mov 0x20(%rbx),%r15
552c(7): lea 0x2b45(%rip),%rsi
5533(5): mov $0x5,%edx
5538(2): xor %edi,%edi
553a(4): mov 0x18(%rbx),%r14
553e(4): mov 0x10(%rbx),%r13
5542(4): mov 0x8(%rbx),%r12
5546(3): mov (%rbx),%rbx
5549(5): call 0xffffc857(%rip)
554e(2): push %r15
5550(2): jmp 0xffffffa6(%rip)
5552(6): nop 0x0(%rax,%rax,1)
5558(4): mov 0x8(%rbx),%r8
555c(4): mov 0x28(%rbx),%r12
5560(7): lea 0x2b39(%rip),%rsi
5567(4): mov 0x20(%rbx),%r15
556b(4): mov 0x18(%rbx),%r14
556f(5): mov $0x5,%edx
5574(4): mov 0x10(%rbx),%r13
5578(2): xor %edi,%edi
557a(3): mov (%rbx),%rbx
557d(4): mov %r8,(%rsp)
5581(5): call 0xffffc81f(%rip)
5586(4): sub $0x8,%rsp
558a(3): mov %r13,%r9
558d(2): push %r12
558f(2): push %r15
5591(2): push %r14
5593(5): mov 0x20(%rsp),%r8
5598(3): mov %rbx,%rcx
559b(3): mov %rax,%rdx
559e(3): mov %rbp,%rdi
55a1(5): mov $0x1,%esi
55a6(2): xor %eax,%eax
55a8(5): call 0xffffca18(%rip)
55ad(4): add $0x20,%rsp
55b1(4): add $0x28,%rsp
55b5(1): pop %rbx
55b6(1): pop %rbp
55b7(2): pop %r12
55b9(2): pop %r13
55bb(2): pop %r14
55bd(2): pop %r15
55bf(1): ret near (%rsp)
55c0(4): mov 0x10(%rbx),%r9
55c4(4): mov 0x30(%rbx),%r13
55c8(7): lea 0x2af9(%rip),%rsi
55cf(4): mov 0x28(%rbx),%r12
55d3(4): mov 0x20(%rbx),%r15
55d7(5): mov $0x5,%edx
55dc(4): mov 0x18(%rbx),%r14
55e0(4): mov 0x8(%rbx),%r8
55e4(2): xor %edi,%edi
55e6(5): mov %r9,0x8(%rsp)
55eb(3): mov (%rbx),%rbx
55ee(4): mov %r8,(%rsp)
55f2(5): call 0xffffc7ae(%rip)
55f7(2): push %r13
55f9(2): push %r12
55fb(2): push %r15
55fd(2): push %r14
55ff(5): mov 0x28(%rsp),%r9
5604(2): jmp 0xffffff8f(%rip)
5606(a): nop 0x0(%rax,%rax,1)
5610(4): mov 0x40(%rbx),%r10
5614(4): mov 0x38(%rbx),%r9
5618(5): mov $0x5,%edx
561d(4): mov 0x10(%rbx),%rax
5621(4): mov 0x8(%rbx),%r8
5625(7): lea 0x2b34(%rip),%rsi
562c(4): mov 0x30(%rbx),%r13
5630(4): mov 0x28(%rbx),%r12
5634(4): mov 0x20(%rbx),%r15
5638(4): mov 0x18(%rbx),%r14
563c(5): mov %r10,0x18(%rsp)
5641(5): mov %r9,0x10(%rsp)
5646(4): mov %rax,(%rsp)
564a(5): mov %r8,0x8(%rsp)
564f(3): mov (%rbx),%rbx
5652(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5660(3): xor %r9d,%r9d
5663(4): cmp $0x0,(%r8)
5667(2): jz 0x14(%rip)
5669(7): nop 0x0(%rax)
5670(4): add $0x1,%r9
5674(5): cmp $0x0,0x0(%r8,%r9,8)
5679(2): jnz 0xfffffff7(%rip)
567b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5680(4): sub $0x68,%rsp
5684(3): mov %r8,%r10
5687(3): xor %r9d,%r9d
568a(9): mov $0x28,%rax
5693(5): mov %rax,0x58(%rsp)
5698(2): xor %eax,%eax
569a(3): mov %rsp,%r8
569d(3): nop (%rax)
56a0(3): mov (%r10),%eax
56a3(3): cmp $0x2f,%eax
56a6(2): jnbe 0x44(%rip)
56a8(3): mov %eax,%r11d
56ab(4): add 0x10(%r10),%r11
56af(3): add $0x8,%eax
56b2(3): mov %eax,(%r10)
56b5(3): mov (%r11),%rax
56b8(3): test %rax,%rax
56bb(4): mov %rax,0x0(%r8,%r9,8)
56bf(2): jz 0xc(%rip)
56c1(4): add $0x1,%r9
56c5(4): cmp $0xa,%r9
56c9(2): jnz 0xffffffd7(%rip)
56cb(5): call 0xfffffb75(%rip)
56d0(5): mov 0x58(%rsp),%rax
56d5(9): xor $0x28,%rax
56de(2): jnz 0x7(%rip)
56e0(4): add $0x68,%rsp
56e4(1): ret near (%rsp)
56e5(5): call 0xffffc6eb(%rip)
56ea(4): mov 0x8(%r10),%r11
56ee(4): lea 0x8(%r11),%rax
56f2(4): mov %rax,0x8(%r10)
56f6(2): jmp 0xffffffbf(%rip)

"version_etc" :
5700(1): push %rbp
5701(1): push %rbx
5702(6): mov $0x20,%r10d
5708(3): xor %r11d,%r11d
570b(7): sub $0xb8,%rsp
5712(9): mov $0x28,%rax
571b(5): mov %rax,0x78(%rsp)
5720(2): xor %eax,%eax
5722(8): lea 0xd0(%rsp),%rax
572a(8): mov %r8,0xa0(%rsp)
5732(8): lea 0xd0(%rsp),%rbx
573a(5): lea 0x20(%rsp),%r8
573f(8): mov %r9,0xa8(%rsp)
5747(8): mov $0x20,0x8(%rsp)
574f(5): mov %rax,0x10(%rsp)
5754(8): lea 0x80(%rsp),%rax
575c(3): xor %r9d,%r9d
575f(5): mov %rax,0x18(%rsp)
5764(3): mov %rax,%rbp
5767(9): nop 0x0(%rax,%rax,1)
5770(4): cmp $0x2f,%r10d
5774(2): jnbe 0x58(%rip)
5776(3): mov %r10d,%eax
5779(6): mov $0x1,%r11d
577f(4): add $0x8,%r10d
5783(3): add %rbp,%rax
5786(3): mov (%rax),%rax
5789(3): test %rax,%rax
578c(4): mov %rax,0x0(%r8,%r9,8)
5790(2): jz 0xc(%rip)
5792(4): add $0x1,%r9
5796(4): cmp $0xa,%r9
579a(2): jnz 0xffffffd6(%rip)
579c(3): test %r11b,%r11b
579f(2): jnz 0x26(%rip)
57a1(5): call 0xfffffa9f(%rip)
57a6(5): mov 0x78(%rsp),%rax
57ab(9): xor $0x28,%rax
57b4(2): jnz 0xc(%rip)
57b6(7): add $0xb8,%rsp
57bd(1): pop %rbx
57be(1): pop %rbp
57bf(1): ret near (%rsp)
57c0(5): call 0xffffc610(%rip)
57c5(5): mov %r10d,0x8(%rsp)
57ca(2): jmp 0xffffffd7(%rip)
57cc(3): mov %rbx,%rax
57cf(4): add $0x8,%rbx
57d3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
57e0(1): push %rbx
57e1(7): lea 0x275a(%rip),%rsi
57e8(5): mov $0x5,%edx
57ed(2): xor %edi,%edi
57ef(5): call 0xffffc5b1(%rip)
57f4(7): lea 0x275c(%rip),%rdx
57fb(3): mov %rax,%rsi
57fe(5): mov $0x1,%edi
5803(2): xor %eax,%eax
5805(5): call 0xffffc74b(%rip)
580a(7): lea 0x275c(%rip),%rsi
5811(5): mov $0x5,%edx
5816(2): xor %edi,%edi
5818(5): call 0xffffc588(%rip)
581d(7): lea 0xf2c(%rip),%rcx
5824(7): lea 0xa4a(%rip),%rdx
582b(3): mov %rax,%rsi
582e(5): mov $0x1,%edi
5833(2): xor %eax,%eax
5835(5): call 0xffffc71b(%rip)
583a(7): mov 0x204867(%rip),%rbx
5841(7): lea 0x2958(%rip),%rsi
5848(2): xor %edi,%edi
584a(5): mov $0x5,%edx
584f(5): call 0xffffc551(%rip)
5854(3): mov %rbx,%rsi
5857(3): mov %rax,%rdi
585a(1): pop %rbx
585b(5): jmp 0xffffc635(%rip)

"xmalloc" :
5860(1): push %rbx
5861(3): mov %rdi,%rbx
5864(5): call 0xffffc7a4(%rip)
5869(3): test %rax,%rax
586c(2): jnz 0x7(%rip)
586e(3): test %rbx,%rbx
5871(2): jnz 0x4(%rip)
5873(1): pop %rbx
5874(1): ret near (%rsp)
5875(5): call 0x23b(%rip)

"xnmalloc" :
5880(3): mov %rdi,%rax
5883(3): mul %rax,%rsi,%rdx
5886(3): mov %rax,%rdi
5889(3): seto %al
588c(3): test %rdi,%rdi
588f(2): js 0xc(%rip)
5891(3): movzx %al,%eax
5894(3): test %rax,%rax
5897(2): jnz 0x4(%rip)
5899(2): jmp 0xffffffc7(%rip)
589b(4): sub $0x8,%rsp
589f(5): call 0x211(%rip)

"xrealloc" :
58c0(3): test %rsi,%rsi
58c3(1): push %rbx
58c4(3): mov %rsi,%rbx
58c7(2): jnz 0x7(%rip)
58c9(3): test %rdi,%rdi
58cc(2): jnz 0x1c(%rip)
58ce(3): mov %rbx,%rsi
58d1(5): call 0xffffc65f(%rip)
58d6(3): test %rax,%rax
58d9(2): jnz 0x7(%rip)
58db(3): test %rbx,%rbx
58de(2): jnz 0x13(%rip)
58e0(1): pop %rbx
58e1(1): ret near (%rsp)
58e2(6): nop 0x0(%rax,%rax,1)
58e8(5): call 0xffffc718(%rip)
58ed(2): xor %eax,%eax
58ef(1): pop %rbx
58f0(1): ret near (%rsp)
58f1(5): call 0x1bf(%rip)

"xnrealloc" :
5900(3): mov %rsi,%rax
5903(3): mul %rax,%rdx,%rdx
5906(3): mov %rax,%rsi
5909(3): seto %al
590c(3): test %rsi,%rsi
590f(2): js 0xc(%rip)
5911(3): movzx %al,%eax
5914(3): test %rax,%rax
5917(2): jnz 0x4(%rip)
5919(2): jmp 0xffffffa7(%rip)
591b(4): sub $0x8,%rsp
591f(5): call 0x191(%rip)

"x2nrealloc" :
5930(3): test %rdi,%rdi
5933(3): mov %rdx,%r9
5936(3): mov (%rsi),%rcx
5939(2): jz 0x37(%rip)
593b(2): xor %edx,%edx
593d(a): mov $0x6148914691236517204,%rax
5947(3): div %r9,%rax
594a(3): cmp %rcx,%rax
594d(2): jbe 0x3e(%rip)
594f(3): mov %rcx,%rax
5952(3): shr $0x1,%rax
5955(5): lea 0x1(%rax,%rcx,1),%rcx
595a(3): mov %rcx,(%rsi)
595d(4): imul %r9,%rcx
5961(3): mov %rcx,%rsi
5964(5): jmp 0xffffff5c(%rip)
5969(7): nop 0x0(%rax)
5970(3): test %rcx,%rcx
5973(2): jz 0x25(%rip)
5975(3): mov %rcx,%rax
5978(3): mul %rax,%r9,%rdx
597b(3): seto %dl
597e(3): test %rax,%rax
5981(3): movzx %dl,%edx
5984(2): js 0x7(%rip)
5986(3): test %rdx,%rdx
5989(2): jz 0xffffffd1(%rip)
598b(4): sub $0x8,%rsp
598f(5): call 0x121(%rip)
5994(4): nop 0x0(%rax)
5998(2): xor %edx,%edx
599a(5): mov $0x80,%eax
599f(3): xor %r8d,%r8d
59a2(3): div %r9,%rax
59a5(3): test %rax,%rax
59a8(4): setz %r8b
59ac(4): lea 0x0(%r8,%rax,1),%rcx
59b0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
59c0(3): test %rdi,%rdi
59c3(3): mov (%rsi),%rax
59c6(2): jz 0x2a(%rip)
59c8(a): mov $0x6148914691236517203,%rdx
59d2(3): cmp %rdx,%rax
59d5(2): jnbe 0x2c(%rip)
59d7(3): mov %rax,%rdx
59da(3): shr $0x1,%rdx
59dd(5): lea 0x1(%rdx,%rax,1),%rax
59e2(3): mov %rax,(%rsi)
59e5(3): mov %rax,%rsi
59e8(5): jmp 0xfffffed8(%rip)
59ed(3): nop (%rax)
59f0(3): test %rax,%rax
59f3(5): mov $0x80,%edx
59f8(4): cmove %rdx,%rax
59fc(3): test %rax,%rax
59ff(2): jns 0xffffffe3(%rip)
5a01(4): sub $0x8,%rsp
5a05(5): call 0xab(%rip)

"xzalloc" :
5a10(1): push %rbx
5a11(3): mov %rdi,%rbx
5a14(5): call 0xfffffe4c(%rip)
5a19(3): mov %rbx,%rdx
5a1c(2): xor %esi,%esi
5a1e(3): mov %rax,%rdi
5a21(1): pop %rbx
5a22(5): jmp 0xffffc41e(%rip)

"xcalloc" :
5a30(3): mov %rdi,%rax
5a33(4): sub $0x8,%rsp
5a37(3): mul %rax,%rsi,%rdx
5a3a(3): seto %dl
5a3d(3): test %rax,%rax
5a40(2): js 0x19(%rip)
5a42(3): movzx %dl,%edx
5a45(3): test %rdx,%rdx
5a48(2): jnz 0x11(%rip)
5a4a(5): call 0xffffc456(%rip)
5a4f(3): test %rax,%rax
5a52(2): jz 0x7(%rip)
5a54(4): add $0x8,%rsp
5a58(1): ret near (%rsp)
5a59(5): call 0x57(%rip)

"xmemdup" :
5a60(1): push %rbp
5a61(1): push %rbx
5a62(3): mov %rdi,%rbp
5a65(3): mov %rsi,%rdi
5a68(3): mov %rsi,%rbx
5a6b(4): sub $0x8,%rsp
5a6f(5): call 0xfffffdf1(%rip)
5a74(4): add $0x8,%rsp
5a78(3): mov %rbx,%rdx
5a7b(3): mov %rbp,%rsi
5a7e(1): pop %rbx
5a7f(1): pop %rbp
5a80(3): mov %rax,%rdi
5a83(5): jmp 0xffffc44d(%rip)

"xstrdup" :
5a90(1): push %rbx
5a91(3): mov %rdi,%rbx
5a94(5): call 0xffffc32c(%rip)
5a99(3): mov %rbx,%rdi
5a9c(4): lea 0x1(%rax),%rsi
5aa0(1): pop %rbx
5aa1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5ab0(7): lea 0x2798(%rip),%rsi
5ab7(4): sub $0x8,%rsp
5abb(5): mov $0x5,%edx
5ac0(2): xor %edi,%edi
5ac2(5): call 0xffffc2de(%rip)
5ac7(6): mov 0x20454b(%rip),%edi
5acd(7): lea 0x1ee5(%rip),%rdx
5ad4(3): mov %rax,%rcx
5ad7(2): xor %esi,%esi
5ad9(2): xor %eax,%eax
5adb(5): call 0xffffc485(%rip)
5ae0(5): call 0xffffc230(%rip)

"xstrndup" :
5af0(4): sub $0x8,%rsp
5af4(5): call 0xffffc37c(%rip)
5af9(3): test %rax,%rax
5afc(2): jz 0x7(%rip)
5afe(4): add $0x8,%rsp
5b02(1): ret near (%rsp)
5b03(5): call 0xffffffad(%rip)

"rpl_fclose" :
5b10(2): push %r12
5b12(1): push %rbp
5b13(1): push %rbx
5b14(3): mov %rdi,%rbx
5b17(5): call 0xffffc3c9(%rip)
5b1c(2): test %eax,%eax
5b1e(3): mov %rbx,%rdi
5b21(2): js 0x56(%rip)
5b23(5): call 0xffffc3ed(%rip)
5b28(2): test %eax,%eax
5b2a(2): jnz 0x2e(%rip)
5b2c(3): mov %rbx,%rdi
5b2f(5): call 0x61(%rip)
5b34(2): test %eax,%eax
5b36(2): jz 0x3e(%rip)
5b38(5): call 0xffffc1e8(%rip)
5b3d(3): mov (%rax),%r12d
5b40(3): mov %rbx,%rdi
5b43(3): mov %rax,%rbp
5b46(5): call 0xffffc23a(%rip)
5b4b(3): test %r12d,%r12d
5b4e(2): jnz 0x32(%rip)
5b50(1): pop %rbx
5b51(1): pop %rbp
5b52(2): pop %r12
5b54(1): ret near (%rsp)
5b55(3): nop (%rax)
5b58(3): mov %rbx,%rdi
5b5b(5): call 0xffffc385(%rip)
5b60(2): xor %esi,%esi
5b62(5): mov $0x1,%edx
5b67(2): mov %eax,%edi
5b69(5): call 0xffffc2b7(%rip)
5b6e(4): cmp $0xffffffff,%rax
5b72(2): jnz 0xffffffba(%rip)
5b74(3): mov %rbx,%rdi
5b77(1): pop %rbx
5b78(1): pop %rbp
5b79(2): pop %r12
5b7b(5): jmp 0xffffc205(%rip)
5b80(4): mov %r12d,0x0(%rbp)
5b84(5): mov $0xffffffff,%eax
5b89(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5b90(3): test %rdi,%rdi
5b93(1): push %rbx
5b94(3): mov %rdi,%rbx
5b97(2): jz 0x13(%rip)
5b99(5): call 0xffffc377(%rip)
5b9e(2): test %eax,%eax
5ba0(2): jz 0xa(%rip)
5ba2(6): test $0x100,(%rbx)
5ba8(2): jnz 0x10(%rip)
5baa(3): mov %rbx,%rdi
5bad(1): pop %rbx
5bae(5): jmp 0xffffc342(%rip)
5bb3(5): nop 0x0(%rax,%rax,1)
5bb8(3): mov %rbx,%rdi
5bbb(5): mov $0x1,%edx
5bc0(2): xor %esi,%esi
5bc2(5): call 0xe(%rip)
5bc7(3): mov %rbx,%rdi
5bca(1): pop %rbx
5bcb(5): jmp 0xffffc325(%rip)

"rpl_fseeko" :
5bd0(4): mov 0x8(%rdi),%rax
5bd4(4): cmp %rax,0x10(%rdi)
5bd8(2): jz 0x8(%rip)
5bda(5): jmp 0xffffc3a6(%rip)
5bdf(1): nop 
5be0(4): mov 0x20(%rdi),%rax
5be4(4): cmp %rax,0x28(%rdi)
5be8(2): jnz 0xfffffff2(%rip)
5bea(5): cmp $0x0,0x48(%rdi)
5bef(2): jnz 0xffffffeb(%rip)
5bf1(2): push %r12
5bf3(1): push %rbp
5bf4(3): mov %edx,%r12d
5bf7(1): push %rbx
5bf8(3): mov %rsi,%rbp
5bfb(3): mov %rdi,%rbx
5bfe(5): call 0xffffc2e2(%rip)
5c03(3): mov %r12d,%edx
5c06(3): mov %rbp,%rsi
5c09(2): mov %eax,%edi
5c0b(5): call 0xffffc215(%rip)
5c10(4): cmp $0xffffffff,%rax
5c14(2): jz 0xe(%rip)
5c16(3): and $0xef,(%rbx)
5c19(7): mov %rax,0x90(%rbx)
5c20(2): xor %eax,%eax
5c22(1): pop %rbx
5c23(1): pop %rbp
5c24(2): pop %r12
5c26(1): ret near (%rsp)

"rpl_mbrtowc" :
5c30(2): push %r13
5c32(2): push %r12
5c34(3): mov %rsi,%r13
5c37(1): push %rbp
5c38(1): push %rbx
5c39(3): mov %rdi,%rbx
5c3c(3): mov %rdx,%r12
5c3f(4): sub $0x18,%rsp
5c43(9): mov $0x28,%rax
5c4c(5): mov %rax,0x8(%rsp)
5c51(2): xor %eax,%eax
5c53(5): lea 0x4(%rsp),%rax
5c58(3): test %rdi,%rdi
5c5b(4): cmove %rax,%rbx
5c5f(3): mov %rbx,%rdi
5c62(5): call 0xffffc18e(%rip)
5c67(4): cmp $0xfffffffd,%rax
5c6b(3): mov %rax,%rbp
5c6e(2): jbe 0x22(%rip)
5c70(3): test %r12,%r12
5c73(2): jz 0x1d(%rip)
5c75(2): xor %edi,%edi
5c77(5): call 0x3e9(%rip)
5c7c(2): test %al,%al
5c7e(2): jnz 0x12(%rip)
5c80(5): movzx 0x0(%r13),%eax
5c85(5): mov $0x1,%ebp
5c8a(2): mov %eax,(%rbx)
5c8c(4): nop 0x0(%rax)
5c90(5): mov 0x8(%rsp),%rdx
5c95(9): xor $0x28,%rdx
5c9e(3): mov %rbp,%rax
5ca1(2): jnz 0xd(%rip)
5ca3(4): add $0x18,%rsp
5ca7(1): pop %rbx
5ca8(1): pop %rbp
5ca9(2): pop %r12
5cab(2): pop %r13
5cad(1): ret near (%rsp)
5cae(5): call 0xffffc122(%rip)

"print_and_abort" :
5cc0(7): lea 0x2588(%rip),%rsi
5cc7(4): sub $0x8,%rsp
5ccb(5): mov $0x5,%edx
5cd0(2): xor %edi,%edi
5cd2(5): call 0xffffc0ce(%rip)
5cd7(7): mov 0x204402(%rip),%rdi
5cde(7): lea 0x220b(%rip),%rdx
5ce5(3): mov %rax,%rcx
5ce8(5): mov $0x1,%esi
5ced(2): xor %eax,%eax
5cef(5): call 0xffffc2d1(%rip)
5cf4(6): mov 0x20431e(%rip),%edi
5cfa(5): call 0xffffc2a6(%rip)

"call_chunkfun" :
5d00(4): test $0x1,0x50(%rdi)
5d04(4): mov 0x38(%rdi),%rax
5d08(2): jnz 0x8(%rip)
5d0a(3): mov %rsi,%rdi
5d0d(2): jmp %rax
5d0f(1): nop 
5d10(4): mov 0x48(%rdi),%rdi
5d14(2): jmp %rax

"call_freefun" :
5d20(4): test $0x1,0x50(%rdi)
5d24(4): mov 0x40(%rdi),%rax
5d28(2): jnz 0x8(%rip)
5d2a(3): mov %rsi,%rdi
5d2d(2): jmp %rax
5d2f(1): nop 
5d30(4): mov 0x48(%rdi),%rdi
5d34(2): jmp %rax

"_obstack_begin_worker" :
5d40(3): test %rdx,%rdx
5d43(2): push %r12
5d45(1): push %rbp
5d46(1): push %rbx
5d47(3): mov %rdi,%rbx
5d4a(2): jz 0x66(%rip)
5d4c(4): lea 0xffffffff(%rdx),%r12
5d50(3): mov %rdx,%rbp
5d53(3): test %rsi,%rsi
5d56(5): mov $0xfe0,%eax
5d5b(4): mov %r12,0x30(%rbx)
5d5f(4): cmove %rax,%rsi
5d63(3): mov %rbx,%rdi
5d66(3): mov %rsi,(%rbx)
5d69(5): call 0xffffff97(%rip)
5d6e(3): test %rax,%rax
5d71(4): mov %rax,0x8(%rbx)
5d75(2): jz 0x48(%rip)
5d77(5): lea 0x10(%rax,%r12,1),%rdx
5d7c(3): neg %rbp
5d7f(3): and %rdx,%rbp
5d82(3): mov (%rbx),%rdx
5d85(4): mov %rbp,0x10(%rbx)
5d89(4): mov %rbp,0x18(%rbx)
5d8d(3): add %rax,%rdx
5d90(3): mov %rdx,(%rax)
5d93(4): mov %rdx,0x20(%rbx)
5d97(8): mov $0x0,0x8(%rax)
5d9f(5): mov $0x1,%eax
5da4(4): and $0xf9,0x50(%rbx)
5da8(1): pop %rbx
5da9(1): pop %rbp
5daa(2): pop %r12
5dac(1): ret near (%rsp)
5dad(3): nop (%rax)
5db0(6): mov $0xf,%r12d
5db6(5): mov $0x10,%ebp
5dbb(2): jmp 0xffffff98(%rip)
5dbd(6): call 0x2042bd(%rip)
5dc3(3): nop (%rax)
5dc6(a): nop 0x0(%rax,%rax,1)
5dd0(4): and $0xfe,0x50(%rdi)
5dd4(4): mov %rcx,0x38(%rdi)
5dd8(4): mov %r8,0x40(%rdi)
5ddc(5): jmp 0xffffff64(%rip)

"_obstack_begin" :
5dd0(4): and $0xfe,0x50(%rdi)
5dd4(4): mov %rcx,0x38(%rdi)
5dd8(4): mov %r8,0x40(%rdi)
5ddc(5): jmp 0xffffff64(%rip)

"_obstack_begin_1" :
5df0(4): or $0x1,0x50(%rdi)
5df4(4): mov %rcx,0x38(%rdi)
5df8(4): mov %r8,0x40(%rdi)
5dfc(4): mov %r9,0x48(%rdi)
5e00(5): jmp 0xffffff40(%rip)

"_obstack_newchunk" :
5e10(2): push %r14
5e12(2): push %r13
5e14(2): xor %edx,%edx
5e16(2): push %r12
5e18(1): push %rbp
5e19(1): push %rbx
5e1a(4): mov 0x18(%rdi),%rbx
5e1e(4): sub 0x10(%rdi),%rbx
5e22(4): mov 0x8(%rdi),%rbp
5e26(3): add %rbx,%rsi
5e29(3): mov %rbx,%rcx
5e2c(3): setb %dl
5e2f(4): add 0x30(%rdi),%rsi
5e33(3): setb %al
5e36(4): shr $0x3,%rcx
5e3a(3): cmp %rsi,(%rdi)
5e3d(5): lea 0x64(%rsi,%rcx,1),%r12
5e42(4): cmovnb (%rdi),%rsi
5e46(3): cmp %r12,%rsi
5e49(4): cmovnb %rsi,%r12
5e4d(3): test %rdx,%rdx
5e50(6): jnz 0xa5(%rip)
5e56(3): movzx %al,%eax
5e59(3): test %rax,%rax
5e5c(6): jnz 0x99(%rip)
5e62(3): mov %r12,%rsi
5e65(3): mov %rdi,%r13
5e68(5): call 0xfffffe98(%rip)
5e6d(3): test %rax,%rax
5e70(3): mov %rax,%r14
5e73(6): jz 0x82(%rip)
5e79(4): lea 0x0(%rax,%r12,1),%rsi
5e7d(4): mov %rax,0x8(%r13)
5e81(4): mov %rbp,0x8(%rax)
5e85(3): mov %rbx,%rdx
5e88(4): mov %rsi,0x20(%r13)
5e8c(3): mov %rsi,(%rax)
5e8f(4): mov 0x30(%r13),%rax
5e93(4): mov 0x10(%r13),%rsi
5e97(5): lea 0x10(%r14,%rax,1),%r12
5e9c(3): not %rax
5e9f(3): and %rax,%r12
5ea2(3): mov %r12,%rdi
5ea5(5): call 0xffffc02b(%rip)
5eaa(5): test $0x2,0x50(%r13)
5eaf(2): jnz 0x17(%rip)
5eb1(4): mov 0x30(%r13),%rax
5eb5(5): lea 0x10(%rbp,%rax,1),%rdx
5eba(3): not %rax
5ebd(3): and %rdx,%rax
5ec0(4): cmp %rax,0x10(%r13)
5ec4(2): jz 0x1c(%rip)
5ec6(5): and $0xfd,0x50(%r13)
5ecb(3): add %r12,%rbx
5ece(4): mov %r12,0x10(%r13)
5ed2(4): mov %rbx,0x18(%r13)
5ed6(1): pop %rbx
5ed7(1): pop %rbp
5ed8(2): pop %r12
5eda(2): pop %r13
5edc(2): pop %r14
5ede(1): ret near (%rsp)
5edf(1): nop 
5ee0(4): mov 0x8(%rbp),%rax
5ee4(3): mov %rbp,%rsi
5ee7(3): mov %r13,%rdi
5eea(4): mov %rax,0x8(%r14)
5eee(5): call 0xfffffe32(%rip)
5ef3(2): jmp 0xffffffd3(%rip)
5ef5(6): call 0x204185(%rip)
5efb(5): nop 0x0(%rax,%rax,1)
5f00(4): mov 0x8(%rdi),%rax
5f04(3): test %rax,%rax
5f07(2): jz 0x2f(%rip)
5f09(7): nop 0x0(%rax)
5f10(3): cmp %rax,%rsi
5f13(2): jbe 0x7(%rip)
5f15(3): cmp %rsi,(%rax)
5f18(2): jnb 0x18(%rip)
5f1a(4): mov 0x8(%rax),%rax
5f1e(3): test %rax,%rax
5f21(2): jnz 0xffffffef(%rip)
5f23(2): xor %eax,%eax
5f25(1): ret near (%rsp)
5f26(a): nop 0x0(%rax,%rax,1)
5f30(5): mov $0x1,%eax
5f35(1): ret near (%rsp)
5f36(2): REP ret near (%rsp)

"_obstack_allocated_p" :
5f00(4): mov 0x8(%rdi),%rax
5f04(3): test %rax,%rax
5f07(2): jz 0x2f(%rip)
5f09(7): nop 0x0(%rax)
5f10(3): cmp %rax,%rsi
5f13(2): jbe 0x7(%rip)
5f15(3): cmp %rsi,(%rax)
5f18(2): jnb 0x18(%rip)
5f1a(4): mov 0x8(%rax),%rax
5f1e(3): test %rax,%rax
5f21(2): jnz 0xffffffef(%rip)
5f23(2): xor %eax,%eax
5f25(1): ret near (%rsp)
5f26(a): nop 0x0(%rax,%rax,1)
5f30(5): mov $0x1,%eax
5f35(1): ret near (%rsp)
5f36(2): REP ret near (%rsp)

"_obstack_free" :
5f40(2): push %r12
5f42(1): push %rbp
5f43(3): mov %rsi,%rbp
5f46(1): push %rbx
5f47(4): mov 0x8(%rdi),%rsi
5f4b(3): mov %rdi,%rbx
5f4e(3): test %rsi,%rsi
5f51(2): jz 0x2c(%rip)
5f53(5): nop 0x0(%rax,%rax,1)
5f58(3): cmp %rbp,%rsi
5f5b(2): jnb 0xa(%rip)
5f5d(3): mov (%rsi),%rax
5f60(3): cmp %rbp,%rax
5f63(2): jnb 0x2d(%rip)
5f65(4): mov 0x8(%rsi),%r12
5f69(3): mov %rbx,%rdi
5f6c(5): call 0xfffffdb4(%rip)
5f71(4): or $0x2,0x50(%rbx)
5f75(3): test %r12,%r12
5f78(3): mov %r12,%rsi
5f7b(2): jnz 0xffffffdd(%rip)
5f7d(3): test %rbp,%rbp
5f80(2): jnz 0x25(%rip)
5f82(1): pop %rbx
5f83(1): pop %rbp
5f84(2): pop %r12
5f86(1): ret near (%rsp)
5f87(9): nop 0x0(%rax,%rax,1)
5f90(4): mov %rbp,0x18(%rbx)
5f94(4): mov %rbp,0x10(%rbx)
5f98(4): mov %rax,0x20(%rbx)
5f9c(4): mov %rsi,0x8(%rbx)
5fa0(1): pop %rbx
5fa1(1): pop %rbp
5fa2(2): pop %r12
5fa4(1): ret near (%rsp)
5fa5(5): call 0xffffbd6b(%rip)

"_obstack_memory_used" :
5fb0(4): mov 0x8(%rdi),%rdx
5fb4(2): xor %eax,%eax
5fb6(3): test %rdx,%rdx
5fb9(2): jz 0x1f(%rip)
5fbb(5): nop 0x0(%rax,%rax,1)
5fc0(3): mov (%rdx),%rcx
5fc3(3): sub %rdx,%rcx
5fc6(4): mov 0x8(%rdx),%rdx
5fca(3): add %rcx,%rax
5fcd(3): test %rdx,%rdx
5fd0(2): jnz 0xfffffff0(%rip)
5fd2(2): REP ret near (%rsp)
5fd4(4): nop 0x0(%rax)
5fd8(2): REP ret near (%rsp)

"close_stream" :
5fe0(2): push %r12
5fe2(1): push %rbp
5fe3(3): mov %rdi,%rbp
5fe6(1): push %rbx
5fe7(5): call 0xffffbd69(%rip)
5fec(3): mov 0x0(%rbp),%ebx
5fef(3): mov %rbp,%rdi
5ff2(3): mov %rax,%r12
5ff5(5): call 0xfffffb1b(%rip)
5ffa(3): and $0x20,%ebx
5ffd(2): test %ebx,%ebx
5fff(2): jnz 0x19(%rip)
6001(2): test %eax,%eax
6003(2): jz 0xc(%rip)
6005(3): test %r12,%r12
6008(5): mov $0xffffffff,%eax
600d(2): jz 0x3b(%rip)
600f(1): pop %rbx
6010(1): pop %rbp
6011(2): pop %r12
6013(1): ret near (%rsp)
6014(4): nop 0x0(%rax)
6018(2): test %eax,%eax
601a(2): jnz 0x1e(%rip)
601c(5): call 0xffffbd04(%rip)
6021(6): mov $0x0,(%rax)
6027(5): mov $0xffffffff,%eax
602c(1): pop %rbx
602d(1): pop %rbp
602e(2): pop %r12
6030(1): ret near (%rsp)
6031(7): nop 0x0(%rax)
6038(1): pop %rbx
6039(5): mov $0xffffffff,%eax
603e(1): pop %rbp
603f(2): pop %r12
6041(1): ret near (%rsp)
6042(6): nop 0x0(%rax,%rax,1)
6048(5): call 0xffffbcd8(%rip)
604d(3): cmp $0x9,(%rax)
6050(1): pop %rbx
6051(1): pop %rbp
6052(2): pop %r12
6054(3): setnz %al
6057(3): movzx %al,%eax
605a(2): neg %eax
605c(1): ret near (%rsp)

"hard_locale" :
6060(4): sub $0x8,%rsp
6064(2): xor %esi,%esi
6066(5): call 0xffffbeda(%rip)
606b(3): mov %rax,%rdx
606e(5): mov $0x1,%eax
6073(3): test %rdx,%rdx
6076(2): jz 0x1f(%rip)
6078(7): lea 0x36d(%rip),%rdi
607f(5): mov $0x2,%ecx
6084(3): mov %rdx,%rsi
6087(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6089(3): setnbe %cl
608c(3): sbb $0x0,%cl
608f(2): xor %eax,%eax
6091(2): test %cl,%cl
6093(2): jnz 0xd(%rip)
6095(4): add $0x8,%rsp
6099(1): ret near (%rsp)
609a(6): nop 0x0(%rax,%rax,1)
60a0(7): lea 0x21b9(%rip),%rdi
60a7(5): mov $0x6,%ecx
60ac(3): mov %rdx,%rsi
60af(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
60b1(3): setnbe %al
60b4(2): sbb $0x0,%al
60b6(2): test %al,%al
60b8(3): setnz %al
60bb(4): add $0x8,%rsp
60bf(1): ret near (%rsp)

"locale_charset" :
60c0(4): sub $0x8,%rsp
60c4(5): mov $0xe,%edi
60c9(5): call 0xffffbe37(%rip)
60ce(3): test %rax,%rax
60d1(2): jz 0x1f(%rip)
60d3(3): cmp $0x0,(%rax)
60d6(7): lea 0x2189(%rip),%rdx
60dd(4): cmove %rdx,%rax
60e1(4): add $0x8,%rsp
60e5(1): ret near (%rsp)
60e6(a): nop 0x0(%rax,%rax,1)
60f0(7): lea 0x216f(%rip),%rax
60f7(4): add $0x8,%rsp
60fb(1): ret near (%rsp)

"__libc_csu_init" :
6100(2): push %r15
6102(2): push %r14
6104(3): mov %rdx,%r15
6107(2): push %r13
6109(2): push %r12
610b(7): lea 0x20373e(%rip),%r12
6112(1): push %rbp
6113(7): lea 0x20373e(%rip),%rbp
611a(1): push %rbx
611b(3): mov %edi,%r13d
611e(3): mov %rsi,%r14
6121(3): sub %r12,%rbp
6124(4): sub $0x8,%rsp
6128(4): sar $0x3,%rbp
612c(5): call 0xffffbba4(%rip)
6131(3): test %rbp,%rbp
6134(2): jz 0x22(%rip)
6136(2): xor %ebx,%ebx
6138(8): nop 0x0(%rax,%rax,1)
6140(3): mov %r15,%rdx
6143(3): mov %r14,%rsi
6146(3): mov %r13d,%edi
6149(4): call 0x0(%r12,%rbx,8)
614d(4): add $0x1,%rbx
6151(3): cmp %rbx,%rbp
6154(2): jnz 0xffffffec(%rip)
6156(4): add $0x8,%rsp
615a(1): pop %rbx
615b(1): pop %rbp
615c(2): pop %r12
615e(2): pop %r13
6160(2): pop %r14
6162(2): pop %r15
6164(1): ret near (%rsp)

"atexit" :
6180(7): mov 0x203e81(%rip),%rdx
6187(2): xor %esi,%esi
6189(5): jmp 0xffffbe07(%rip)

"_fini" :
6190(4): sub $0x8,%rsp
6194(4): add $0x8,%rsp
6198(1): ret near (%rsp)

