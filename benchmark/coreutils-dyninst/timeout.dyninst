
"sigprocmask@plt" :
1920(6): jmp 0x20749a(%rip)
1926(5): push $0x0

"__snprintf_chk@plt" :
1930(6): jmp 0x207492(%rip)
1936(5): push $0x1

"raise@plt" :
1940(6): jmp 0x20748a(%rip)
1946(5): push $0x2

"free@plt" :
1950(6): jmp 0x207482(%rip)
1956(5): push $0x3

"abort@plt" :
1960(6): jmp 0x20747a(%rip)
1966(5): push $0x4

"__errno_location@plt" :
1970(6): jmp 0x207472(%rip)
1976(5): push $0x5

"strncmp@plt" :
1980(6): jmp 0x20746a(%rip)
1986(5): push $0x6

"_exit@plt" :
1990(6): jmp 0x207462(%rip)
1996(5): push $0x7

"strcpy@plt" :
19a0(6): jmp 0x20745a(%rip)
19a6(5): push $0x8

"__fpending@plt" :
19b0(6): jmp 0x207452(%rip)
19b6(5): push $0x9

"sigaction@plt" :
19c0(6): jmp 0x20744a(%rip)
19c6(5): push $0xa

"strtod@plt" :
19d0(6): jmp 0x207442(%rip)
19d6(5): push $0xb

"textdomain@plt" :
19e0(6): jmp 0x20743a(%rip)
19e6(5): push $0xc

"strtod_l@plt" :
19f0(6): jmp 0x207432(%rip)
19f6(5): push $0xd

"fclose@plt" :
1a00(6): jmp 0x20742a(%rip)
1a06(5): push $0xe

"bindtextdomain@plt" :
1a10(6): jmp 0x207422(%rip)
1a16(5): push $0xf

"dcgettext@plt" :
1a20(6): jmp 0x20741a(%rip)
1a26(5): push $0x10

"__ctype_get_mb_cur_max@plt" :
1a30(6): jmp 0x207412(%rip)
1a36(5): push $0x11

"strlen@plt" :
1a40(6): jmp 0x20740a(%rip)
1a46(5): push $0x12

"__stack_chk_fail@plt" :
1a50(6): jmp 0x207402(%rip)
1a56(5): push $0x13

"getopt_long@plt" :
1a60(6): jmp 0x2073fa(%rip)
1a66(5): push $0x14

"mbrtowc@plt" :
1a70(6): jmp 0x2073f2(%rip)
1a76(5): push $0x15

"strchr@plt" :
1a80(6): jmp 0x2073ea(%rip)
1a86(5): push $0x16

"newlocale@plt" :
1a90(6): jmp 0x2073e2(%rip)
1a96(5): push $0x17

"strrchr@plt" :
1aa0(6): jmp 0x2073da(%rip)
1aa6(5): push $0x18

"lseek@plt" :
1ab0(6): jmp 0x2073d2(%rip)
1ab6(5): push $0x19

"memset@plt" :
1ac0(6): jmp 0x2073ca(%rip)
1ac6(5): push $0x1a

"alarm@plt" :
1ad0(6): jmp 0x2073c2(%rip)
1ad6(5): push $0x1b

"memcmp@plt" :
1ae0(6): jmp 0x2073ba(%rip)
1ae6(5): push $0x1c

"fputs_unlocked@plt" :
1af0(6): jmp 0x2073b2(%rip)
1af6(5): push $0x1d

"calloc@plt" :
1b00(6): jmp 0x2073aa(%rip)
1b06(5): push $0x1e

"strcmp@plt" :
1b10(6): jmp 0x2073a2(%rip)
1b16(5): push $0x1f

"signal@plt" :
1b20(6): jmp 0x20739a(%rip)
1b26(5): push $0x20

"sigemptyset@plt" :
1b30(6): jmp 0x207392(%rip)
1b36(5): push $0x21

"strtol@plt" :
1b40(6): jmp 0x20738a(%rip)
1b46(5): push $0x22

"memcpy@plt" :
1b50(6): jmp 0x207382(%rip)
1b56(5): push $0x23

"prctl@plt" :
1b60(6): jmp 0x20737a(%rip)
1b66(5): push $0x24

"kill@plt" :
1b70(6): jmp 0x207372(%rip)
1b76(5): push $0x25

"fileno@plt" :
1b80(6): jmp 0x20736a(%rip)
1b86(5): push $0x26

"malloc@plt" :
1b90(6): jmp 0x207362(%rip)
1b96(5): push $0x27

"fflush@plt" :
1ba0(6): jmp 0x20735a(%rip)
1ba6(5): push $0x28

"nl_langinfo@plt" :
1bb0(6): jmp 0x207352(%rip)
1bb6(5): push $0x29

"sigsuspend@plt" :
1bc0(6): jmp 0x20734a(%rip)
1bc6(5): push $0x2a

"__freading@plt" :
1bd0(6): jmp 0x207342(%rip)
1bd6(5): push $0x2b

"realloc@plt" :
1be0(6): jmp 0x20733a(%rip)
1be6(5): push $0x2c

"setlocale@plt" :
1bf0(6): jmp 0x207332(%rip)
1bf6(5): push $0x2d

"__printf_chk@plt" :
1c00(6): jmp 0x20732a(%rip)
1c06(5): push $0x2e

"error@plt" :
1c10(6): jmp 0x207322(%rip)
1c16(5): push $0x2f

"waitpid@plt" :
1c20(6): jmp 0x20731a(%rip)
1c26(5): push $0x30

"fseeko@plt" :
1c30(6): jmp 0x207312(%rip)
1c36(5): push $0x31

"timer_settime@plt" :
1c40(6): jmp 0x20730a(%rip)
1c46(5): push $0x32

"timer_create@plt" :
1c50(6): jmp 0x207302(%rip)
1c56(5): push $0x33

"execvp@plt" :
1c60(6): jmp 0x2072fa(%rip)
1c66(5): push $0x34

"__cxa_atexit@plt" :
1c70(6): jmp 0x2072f2(%rip)
1c76(5): push $0x35

"setpgid@plt" :
1c80(6): jmp 0x2072ea(%rip)
1c86(5): push $0x36

"__libc_current_sigrtmin@plt" :
1c90(6): jmp 0x2072e2(%rip)
1c96(5): push $0x37

"exit@plt" :
1ca0(6): jmp 0x2072da(%rip)
1ca6(5): push $0x38

"fwrite@plt" :
1cb0(6): jmp 0x2072d2(%rip)
1cb6(5): push $0x39

"timer_delete@plt" :
1cc0(6): jmp 0x2072ca(%rip)
1cc6(5): push $0x3a

"__fprintf_chk@plt" :
1cd0(6): jmp 0x2072c2(%rip)
1cd6(5): push $0x3b

"__libc_current_sigrtmax@plt" :
1ce0(6): jmp 0x2072ba(%rip)
1ce6(5): push $0x3c

"mbsinit@plt" :
1cf0(6): jmp 0x2072b2(%rip)
1cf6(5): push $0x3d

"iswprint@plt" :
1d00(6): jmp 0x2072aa(%rip)
1d06(5): push $0x3e

"sigaddset@plt" :
1d10(6): jmp 0x2072a2(%rip)
1d16(5): push $0x3f

"fork@plt" :
1d20(6): jmp 0x20729a(%rip)
1d26(5): push $0x40

"__ctype_b_loc@plt" :
1d30(6): jmp 0x207292(%rip)
1d36(5): push $0x41

"__sprintf_chk@plt" :
1d40(6): jmp 0x20728a(%rip)
1d46(5): push $0x42

".plt.got" :
1d50(6): jmp 0x2072a2(%rip)
1d56(2): nop 

"_init" :
18f8(4): sub $0x8,%rsp
18fc(7): mov 0x2076e5(%rip),%rax
1903(3): test %rax,%rax
1906(2): jz 0x4(%rip)
1908(2): call %rax
190a(4): add $0x8,%rsp
190e(1): ret near (%rsp)

"main" :
1d60(2): push %r13
1d62(2): push %r12
1d64(1): push %rbp
1d65(1): push %rbx
1d66(2): mov %edi,%ebp
1d68(3): mov %rsi,%rbx
1d6b(7): sub $0x168,%rsp
1d72(3): mov (%rsi),%rdi
1d75(9): mov $0x28,%rax
1d7e(8): mov %rax,0x158(%rsp)
1d86(2): xor %eax,%eax
1d88(8): lea 0x140(%rsp),%r12
1d90(5): call 0x13f0(%rip)
1d95(7): lea 0x50c5(%rip),%rsi
1d9c(5): mov $0x6,%edi
1da1(5): call 0xfffffe4f(%rip)
1da6(7): lea 0x41e0(%rip),%rsi
1dad(7): lea 0x4197(%rip),%rdi
1db4(5): call 0xfffffc5c(%rip)
1db9(7): lea 0x418b(%rip),%rdi
1dc0(5): call 0xfffffc20(%rip)
1dc5(7): lea 0x1244(%rip),%rdi
1dcc(a): mov $0x7d,0x20724a(%rip)
1dd6(5): call 0x408a(%rip)
1ddb(5): nop 0x0(%rax,%rax,1)
1de0(7): lea 0x206c59(%rip),%rcx
1de7(7): lea 0x41c5(%rip),%rdx
1dee(3): xor %r8d,%r8d
1df1(3): mov %rbx,%rsi
1df4(2): mov %ebp,%edi
1df6(5): call 0xfffffc6a(%rip)
1dfb(3): cmp $0xff,%eax
1dfe(6): jz 0xfe(%rip)
1e04(3): cmp $0x73,%eax
1e07(6): jz 0xb1(%rip)
1e0d(2): jle 0x3b(%rip)
1e0f(5): cmp $0x80,%eax
1e14(6): jz 0xdc(%rip)
1e1a(5): cmp $0x81,%eax
1e1f(6): jz 0xc1(%rip)
1e25(3): cmp $0x76,%eax
1e28(2): jz 0x10(%rip)
1e2a(5): mov $0x7d,%edi
1e2f(5): call 0xa21(%rip)
1e34(4): nop 0x0(%rax)
1e38(7): mov $0x1,0x207479(%rip)
1e3f(2): jmp 0xffffffa1(%rip)
1e41(7): nop 0x0(%rax)
1e48(5): cmp $0xffffff7e,%eax
1e4d(6): jz 0x503(%rip)
1e53(3): cmp $0x6b,%eax
1e56(2): jz 0x42(%rip)
1e58(5): cmp $0xffffff7d,%eax
1e5d(2): jnz 0xffffffcd(%rip)
1e5f(7): mov 0x207402(%rip),%rdi
1e66(7): mov 0x2071ab(%rip),%rcx
1e6d(7): lea 0x4131(%rip),%r8
1e74(7): lea 0x40cc(%rip),%rdx
1e7b(7): lea 0x4047(%rip),%rsi
1e82(3): xor %r9d,%r9d
1e85(2): xor %eax,%eax
1e87(5): call 0x34e9(%rip)
1e8c(2): xor %edi,%edi
1e8e(5): call 0xfffffe12(%rip)
1e93(5): nop 0x0(%rax,%rax,1)
1e98(7): mov 0x2073d9(%rip),%rdi
1e9f(5): call 0xdb1(%rip)
1ea4(8): movsd %xmm0,0x207414(%rip)
1eac(5): jmp 0xffffff34(%rip)
1eb1(7): nop 0x0(%rax)
1eb8(7): mov 0x2073b9(%rip),%rdi
1ebf(3): mov %r12,%rsi
1ec2(5): call 0xe7e(%rip)
1ec7(3): cmp $0xff,%eax
1eca(6): mov %eax,0x207140(%rip)
1ed0(6): jnz 0xffffff10(%rip)
1ed6(5): jmp 0xffffff54(%rip)
1edb(5): nop 0x0(%rax,%rax,1)
1ee0(7): mov $0x1,0x2073d2(%rip)
1ee7(5): jmp 0xfffffef9(%rip)
1eec(4): nop 0x0(%rax)
1ef0(7): mov $0x1,0x2073c3(%rip)
1ef7(5): jmp 0xfffffee9(%rip)
1efc(7): movsxd 0x20736d(%rip),%rax
1f03(2): sub %eax,%ebp
1f05(3): sub $0x1,%ebp
1f08(6): jle 0xffffff22(%rip)
1f0e(4): mov 0x0(%rbx,%rax,8),%rdi
1f12(3): lea 0x1(%rax),%edx
1f15(6): mov %edx,0x207355(%rip)
1f1b(5): call 0xd35(%rip)
1f20(7): movsxd 0x207349(%rip),%rax
1f27(7): cmp $0x0,0x20738c(%rip)
1f2e(6): movsd %xmm0,0x8(%rsp)
1f34(4): lea 0x0(%rbx,%rax,8),%r12
1f38(4): mov (%r12),%rax
1f3c(7): mov %rax,0x20736d(%rip)
1f43(6): jz 0x2d3(%rip)
1f49(8): lea 0xa0(%rsp),%rbx
1f51(7): mov 0x2070b8(%rip),%r13d
1f58(4): lea 0x8(%rbx),%rbp
1f5c(3): mov %rbp,%rdi
1f5f(5): call 0xfffffbd1(%rip)
1f64(7): lea 0x6f5(%rip),%rax
1f6b(2): xor %edx,%edx
1f6d(3): mov %rbx,%rsi
1f70(5): mov $0xe,%edi
1f75(b): mov $0x10000000,0x128(%rsp)
1f80(8): mov %rax,0xa0(%rsp)
1f88(5): call 0xfffffa38(%rip)
1f8d(2): xor %edx,%edx
1f8f(3): mov %rbx,%rsi
1f92(5): mov $0x2,%edi
1f97(5): call 0xfffffa29(%rip)
1f9c(2): xor %edx,%edx
1f9e(3): mov %rbx,%rsi
1fa1(5): mov $0x3,%edi
1fa6(5): call 0xfffffa1a(%rip)
1fab(2): xor %edx,%edx
1fad(3): mov %rbx,%rsi
1fb0(5): mov $0x1,%edi
1fb5(5): call 0xfffffa0b(%rip)
1fba(2): xor %edx,%edx
1fbc(3): mov %rbx,%rsi
1fbf(5): mov $0xf,%edi
1fc4(5): call 0xfffff9fc(%rip)
1fc9(2): xor %edx,%edx
1fcb(3): mov %rbx,%rsi
1fce(3): mov %r13d,%edi
1fd1(5): call 0xfffff9ef(%rip)
1fd6(5): mov $0x1,%esi
1fdb(5): mov $0x15,%edi
1fe0(5): call 0xfffffb40(%rip)
1fe5(5): mov $0x1,%esi
1fea(5): mov $0x16,%edi
1fef(5): call 0xfffffb31(%rip)
1ff4(3): mov %rbp,%rdi
1ff7(5): call 0xfffffb39(%rip)
1ffc(7): lea 0x46d(%rip),%rax
2003(2): xor %edx,%edx
2005(3): mov %rbx,%rsi
2008(5): mov $0x11,%edi
200d(b): mov $0x10000000,0x128(%rsp)
2018(8): mov %rax,0xa0(%rsp)
2020(5): call 0xfffff9a0(%rip)
2025(5): mov $0x11,%edi
202a(5): call 0x596(%rip)
202f(5): call 0xfffffcf1(%rip)
2034(3): cmp $0xff,%eax
2037(6): mov %eax,0x20728b(%rip)
203d(6): jz 0x21e(%rip)
2043(2): test %eax,%eax
2045(6): jnz 0x98(%rip)
204b(2): xor %esi,%esi
204d(5): mov $0x15,%edi
2052(2): xor %ebx,%ebx
2054(5): call 0xfffffacc(%rip)
2059(2): xor %esi,%esi
205b(5): mov $0x16,%edi
2060(5): call 0xfffffac0(%rip)
2065(4): mov (%r12),%rdi
2069(3): mov %r12,%rsi
206c(5): call 0xfffffbf4(%rip)
2071(5): call 0xfffff8ff(%rip)
2076(3): cmp $0x2,(%rax)
2079(7): mov 0x207230(%rip),%rdi
2080(3): mov %rax,%rbp
2083(3): setz %bl
2086(5): call 0x2e0a(%rip)
208b(7): lea 0x3f40(%rip),%rsi
2092(5): mov $0x5,%edx
2097(2): xor %edi,%edi
2099(3): mov %rax,%r12
209c(3): add $0x7e,%ebx
209f(5): call 0xfffff981(%rip)
20a4(3): mov 0x0(%rbp),%esi
20a7(3): mov %rax,%rdx
20aa(3): mov %r12,%rcx
20ad(2): xor %edi,%edi
20af(2): xor %eax,%eax
20b1(5): call 0xfffffb5f(%rip)
20b6(8): mov 0x158(%rsp),%rcx
20be(9): xor $0x28,%rcx
20c7(2): mov %ebx,%eax
20c9(6): jnz 0x28e(%rip)
20cf(7): add $0x168,%rsp
20d6(1): pop %rbx
20d7(1): pop %rbp
20d8(2): pop %r12
20da(2): pop %r13
20dc(1): ret near (%rsp)
20dd(5): mov $0xe,%edi
20e2(5): call 0x4de(%rip)
20e7(6): movsd 0x8(%rsp),%xmm0
20ed(5): mov $0x1,%edi
20f2(5): call 0x38e(%rip)
20f7(3): mov %rbx,%rdi
20fa(6): mov 0x206f10(%rip),%ebp
2100(5): call 0xfffffa30(%rip)
2105(5): mov $0xe,%esi
210a(3): mov %rbx,%rdi
210d(5): call 0xfffffc03(%rip)
2112(5): mov $0x2,%esi
2117(3): mov %rbx,%rdi
211a(5): call 0xfffffbf6(%rip)
211f(5): mov $0x3,%esi
2124(3): mov %rbx,%rdi
2127(5): call 0xfffffbe9(%rip)
212c(5): mov $0x1,%esi
2131(3): mov %rbx,%rdi
2134(5): call 0xfffffbdc(%rip)
2139(5): mov $0xf,%esi
213e(3): mov %rbx,%rdi
2141(5): call 0xfffffbcf(%rip)
2146(2): mov %ebp,%esi
2148(3): mov %rbx,%rdi
214b(5): lea 0x20(%rsp),%rbp
2150(5): call 0xfffffbc0(%rip)
2155(5): mov $0x11,%esi
215a(3): mov %rbx,%rdi
215d(5): call 0xfffffbb3(%rip)
2162(2): xor %edi,%edi
2164(3): mov %rbp,%rdx
2167(3): mov %rbx,%rsi
216a(5): call 0xfffff7b6(%rip)
216f(2): test %eax,%eax
2171(6): jnz 0xbc(%rip)
2177(5): lea 0x1c(%rsp),%rbx
217c(2): jmp 0xa(%rip)
217e(3): mov %rbp,%rdi
2181(5): call 0xfffffa3f(%rip)
2186(6): mov 0x20713c(%rip),%edi
218c(5): mov $0x1,%edx
2191(3): mov %rbx,%rsi
2194(5): call 0xfffffa8c(%rip)
2199(2): test %eax,%eax
219b(2): jz 0xffffffe3(%rip)
219d(6): js 0xf1(%rip)
21a3(4): mov 0x1c(%rsp),%ebx
21a7(2): mov %ebx,%ebp
21a9(3): and $0x7f,%ebp
21ac(2): jz 0x78(%rip)
21ae(3): lea 0x1(%rbp),%eax
21b1(2): sub $0x1,%al
21b3(6): jle 0x13f(%rip)
21b9(3): and $0x80,%bl
21bc(2): jz 0x23(%rip)
21be(7): lea 0x4633(%rip),%rsi
21c5(5): mov $0x5,%edx
21ca(2): xor %edi,%edi
21cc(5): call 0xfffff854(%rip)
21d1(2): xor %esi,%esi
21d3(3): mov %rax,%rdx
21d6(2): xor %edi,%edi
21d8(2): xor %eax,%eax
21da(5): call 0xfffffa36(%rip)
21df(7): cmp $0x0,0x2070e6(%rip)
21e6(6): jz 0xde(%rip)
21ec(3): sub $0x80,%ebp
21ef(4): mov %ebp,0x1c(%rsp)
21f3(7): cmp $0x0,0x2070d2(%rip)
21fa(2): jz 0x13(%rip)
21fc(7): cmp $0x0,0x2070b6(%rip)
2203(2): jnz 0xa(%rip)
2205(8): mov $0x7c,0x1c(%rsp)
220d(4): mov 0x1c(%rsp),%ebx
2211(5): jmp 0xfffffea5(%rip)
2216(2): xor %esi,%esi
2218(2): xor %edi,%edi
221a(5): call 0xfffffa66(%rip)
221f(5): jmp 0xfffffd2a(%rip)
2224(3): movzx %bh,%ebx
2227(4): mov %ebx,0x1c(%rsp)
222b(2): jmp 0xffffffc8(%rip)
222d(7): lea 0x3c7d(%rip),%rsi
2234(2): xor %edi,%edi
2236(5): mov $0x5,%edx
223b(5): call 0xfffff7e5(%rip)
2240(3): mov %rax,%rbx
2243(5): call 0xfffff72d(%rip)
2248(2): mov (%rax),%esi
224a(3): mov %rbx,%rdx
224d(2): xor %edi,%edi
224f(2): xor %eax,%eax
2251(5): call 0xfffff9bf(%rip)
2256(5): jmp 0xffffff21(%rip)
225b(7): lea 0x3d58(%rip),%rsi
2262(5): mov $0x5,%edx
2267(2): xor %edi,%edi
2269(5): call 0xfffff7b7(%rip)
226e(3): mov %rax,%rbx
2271(5): call 0xfffff6ff(%rip)
2276(2): mov (%rax),%esi
2278(3): mov %rbx,%rdx
227b(2): xor %edi,%edi
227d(2): xor %eax,%eax
227f(5): mov $0x7d,%ebx
2284(5): call 0xfffff98c(%rip)
2289(5): jmp 0xfffffe2d(%rip)
228e(7): lea 0x3d56(%rip),%rsi
2295(5): mov $0x5,%edx
229a(2): xor %edi,%edi
229c(5): call 0xfffff784(%rip)
22a1(3): mov %rax,%rbx
22a4(5): call 0xfffff6cc(%rip)
22a9(2): mov (%rax),%esi
22ab(3): mov %rbx,%rdx
22ae(2): xor %edi,%edi
22b0(2): xor %eax,%eax
22b2(5): call 0xfffff95e(%rip)
22b7(8): mov $0x7d,0x1c(%rsp)
22bf(5): jmp 0xffffff34(%rip)
22c4(2): xor %esi,%esi
22c6(2): xor %eax,%eax
22c8(5): mov $0x4,%edi
22cd(5): call 0xfffff893(%rip)
22d2(2): test %eax,%eax
22d4(2): jnz 0x4e(%rip)
22d6(2): xor %esi,%esi
22d8(2): mov %ebp,%edi
22da(5): call 0xfffff846(%rip)
22df(2): mov %ebp,%edi
22e1(5): call 0x2df(%rip)
22e6(2): mov %ebp,%edi
22e8(5): call 0xfffff658(%rip)
22ed(5): jmp 0xfffffeff(%rip)
22f2(7): lea 0x454f(%rip),%rsi
22f9(5): mov $0x5,%edx
22fe(2): xor %edi,%edi
2300(5): call 0xfffff720(%rip)
2305(2): mov %ebx,%ecx
2307(3): mov %rax,%rdx
230a(2): xor %esi,%esi
230c(2): xor %edi,%edi
230e(2): xor %eax,%eax
2310(5): call 0xfffff900(%rip)
2315(8): mov $0x1,0x1c(%rsp)
231d(5): jmp 0xfffffed6(%rip)
2322(7): lea 0x44f7(%rip),%rsi
2329(2): xor %edi,%edi
232b(5): mov $0x5,%edx
2330(5): call 0xfffff6f0(%rip)
2335(3): mov %rax,%rbx
2338(5): call 0xfffff638(%rip)
233d(2): mov (%rax),%esi
233f(3): mov %rbx,%rdx
2342(2): xor %edi,%edi
2344(2): xor %eax,%eax
2346(5): call 0xfffff8ca(%rip)
234b(5): jmp 0xfffffea1(%rip)
2350(2): xor %edi,%edi
2352(5): call 0x4fe(%rip)
2357(5): call 0xfffff6f9(%rip)

"_start" :
2360(2): xor %ebp,%ebp
2362(3): mov %rdx,%r9
2365(1): pop %rsi
2366(3): mov %rsp,%rdx
2369(4): and $0xfffffff0,%rsp
236d(1): push %rax
236e(1): push %rsp
236f(7): lea 0x3ada(%rip),%r8
2376(7): lea 0x3a63(%rip),%rcx
237d(7): lea 0xfffff9dc(%rip),%rdi
2384(6): call 0x206c56(%rip)
238a(1): hlt 

"deregister_tm_clones" :
2390(7): lea 0x206eb1(%rip),%rdi
2397(1): push %rbp
2398(7): lea 0x206ea9(%rip),%rax
239f(3): cmp %rdi,%rax
23a2(3): mov %rsp,%rbp
23a5(2): jz 0x1b(%rip)
23a7(7): mov 0x206c2a(%rip),%rax
23ae(3): test %rax,%rax
23b1(2): jz 0xf(%rip)
23b3(1): pop %rbp
23b4(2): jmp %rax
23b6(a): nop 0x0(%rax,%rax,1)
23c0(1): pop %rbp
23c1(1): ret near (%rsp)

"register_tm_clones" :
23d0(7): lea 0x206e71(%rip),%rdi
23d7(7): lea 0x206e6a(%rip),%rsi
23de(1): push %rbp
23df(3): sub %rdi,%rsi
23e2(3): mov %rsp,%rbp
23e5(4): sar $0x3,%rsi
23e9(3): mov %rsi,%rax
23ec(4): shr $0x3f,%rax
23f0(3): add %rax,%rsi
23f3(3): sar $0x1,%rsi
23f6(2): jz 0x1a(%rip)
23f8(7): mov 0x206bf1(%rip),%rax
23ff(3): test %rax,%rax
2402(2): jz 0xe(%rip)
2404(1): pop %rbp
2405(2): jmp %rax
2407(9): nop 0x0(%rax,%rax,1)
2410(1): pop %rbp
2411(1): ret near (%rsp)

"__do_global_dtors_aux" :
2420(7): cmp $0x0,0x206e81(%rip)
2427(2): jnz 0x31(%rip)
2429(8): cmp $0x0,0x206bc7(%rip)
2431(1): push %rbp
2432(3): mov %rsp,%rbp
2435(2): jz 0xe(%rip)
2437(7): mov 0x206bca(%rip),%rdi
243e(5): call 0xfffff912(%rip)
2443(5): call 0xffffff4d(%rip)
2448(7): mov $0x1,0x206e59(%rip)
244f(1): pop %rbp
2450(1): ret near (%rsp)
2451(7): nop 0x0(%rax)
2458(2): REP ret near (%rsp)

"frame_dummy" :
2460(1): push %rbp
2461(3): mov %rsp,%rbp
2464(1): pop %rbp
2465(5): jmp 0xffffff6b(%rip)

"settimeout" :
2480(1): push %rbx
2481(2): mov %edi,%ebx
2483(4): sub $0x50,%rsp
2487(6): movsd %xmm0,0x8(%rsp)
248d(9): mov $0x28,%rax
2496(5): mov %rax,0x48(%rsp)
249b(2): xor %eax,%eax
249d(5): call 0xc23(%rip)
24a2(5): mov %rdx,0x38(%rsp)
24a7(5): lea 0x18(%rsp),%rdx
24ac(2): xor %esi,%esi
24ae(2): xor %edi,%edi
24b0(9): mov $0x0,0x20(%rsp)
24b9(9): mov $0x0,0x28(%rsp)
24c2(5): mov %rax,0x30(%rsp)
24c7(5): call 0xfffff789(%rip)
24cc(2): test %eax,%eax
24ce(2): jz 0x6a(%rip)
24d0(2): test %bl,%bl
24d2(2): jz 0xf(%rip)
24d4(5): call 0xfffff49c(%rip)
24d9(3): cmp $0x26,(%rax)
24dc(3): mov %rax,%rbx
24df(2): jnz 0x81(%rip)
24e1(6): movsd 0x8(%rsp),%xmm1
24e7(5): mov $0xffffffff,%edi
24ec(8): ucomisd 0x437c(%rip),%xmm1
24f4(2): jnb 0x1e(%rip)
24f6(5): cvttsd2si %xmm1,%rdx
24fb(4): pxor %xmm0,%xmm0
24ff(2): xor %edi,%edi
2501(2): mov %edx,%eax
2503(5): cvtsi2sd %rax,%xmm0
2508(4): ucomisd %xmm0,%xmm1
250c(4): setnbe %dil
2510(2): add %edx,%edi
2512(5): call 0xfffff5be(%rip)
2517(5): mov 0x48(%rsp),%rax
251c(9): xor $0x28,%rax
2525(6): jnz 0x96(%rip)
252b(4): add $0x50,%rsp
252f(1): pop %rbx
2530(1): ret near (%rsp)
2531(7): nop 0x0(%rax)
2538(5): mov 0x18(%rsp),%rdi
253d(5): lea 0x20(%rsp),%rdx
2542(2): xor %ecx,%ecx
2544(2): xor %esi,%esi
2546(5): call 0xfffff6fa(%rip)
254b(2): test %eax,%eax
254d(2): jz 0xffffffca(%rip)
254f(2): test %bl,%bl
2551(2): jnz 0x3f(%rip)
2553(5): mov 0x18(%rsp),%rdi
2558(5): call 0xfffff768(%rip)
255d(2): jmp 0xffffff84(%rip)
255f(1): nop 
2560(7): lea 0x3934(%rip),%rsi
2567(2): xor %edi,%edi
2569(5): mov $0x5,%edx
256e(5): call 0xfffff4b2(%rip)
2573(2): mov (%rbx),%esi
2575(3): mov %rax,%rdx
2578(2): xor %edi,%edi
257a(2): xor %eax,%eax
257c(5): call 0xfffff694(%rip)
2581(5): jmp 0xffffff60(%rip)
2586(a): nop 0x0(%rax,%rax,1)
2590(7): lea 0x38ed(%rip),%rsi
2597(2): xor %edi,%edi
2599(5): mov $0x5,%edx
259e(5): call 0xfffff482(%rip)
25a3(3): mov %rax,%rbx
25a6(5): call 0xfffff3ca(%rip)
25ab(2): mov (%rax),%esi
25ad(3): mov %rbx,%rdx
25b0(2): xor %edi,%edi
25b2(2): xor %eax,%eax
25b4(5): call 0xfffff65c(%rip)
25b9(2): jmp 0xffffff9a(%rip)
25bb(5): call 0xfffff495(%rip)

"unblock_signal" :
25c0(1): push %rbp
25c1(1): push %rbx
25c2(2): mov %edi,%ebp
25c4(7): sub $0x98,%rsp
25cb(3): mov %rsp,%rbx
25ce(3): mov %rbx,%rdi
25d1(9): mov $0x28,%rax
25da(8): mov %rax,0x88(%rsp)
25e2(2): xor %eax,%eax
25e4(5): call 0xfffff54c(%rip)
25e9(2): mov %ebp,%esi
25eb(3): mov %rbx,%rdi
25ee(5): call 0xfffff722(%rip)
25f3(2): xor %edx,%edx
25f5(3): mov %rbx,%rsi
25f8(5): mov $0x1,%edi
25fd(5): call 0xfffff323(%rip)
2602(2): test %eax,%eax
2604(2): jz 0x2b(%rip)
2606(7): lea 0x38a4(%rip),%rsi
260d(5): mov $0x5,%edx
2612(2): xor %edi,%edi
2614(5): call 0xfffff40c(%rip)
2619(3): mov %rax,%rbx
261c(5): call 0xfffff354(%rip)
2621(2): mov (%rax),%esi
2623(3): mov %rbx,%rdx
2626(2): xor %edi,%edi
2628(2): xor %eax,%eax
262a(5): call 0xfffff5e6(%rip)
262f(8): mov 0x88(%rsp),%rax
2637(9): xor $0x28,%rax
2640(2): jnz 0xc(%rip)
2642(7): add $0x98,%rsp
2649(1): pop %rbx
264a(1): pop %rbp
264b(1): ret near (%rsp)
264c(5): call 0xfffff404(%rip)

"cleanup" :
2660(2): push %r12
2662(1): push %rbp
2663(1): push %rbx
2664(2): mov %edi,%ebx
2666(4): sub $0x30,%rsp
266a(9): mov $0x28,%rax
2673(5): mov %rax,0x28(%rsp)
2678(2): xor %eax,%eax
267a(3): cmp $0xe,%edi
267d(2): jnz 0x12(%rip)
267f(6): mov 0x20698b(%rip),%ebx
2685(a): mov $0x1,0x206c3d(%rip)
268f(6): mov 0x206c33(%rip),%ebp
2695(2): test %ebp,%ebp
2697(6): jz 0x1a1(%rip)
269d(8): movsd 0x206c1b(%rip),%xmm0
26a5(8): ucomisd 0x41cb(%rip),%xmm0
26ad(2): jp 0x43(%rip)
26af(2): jnz 0x41(%rip)
26b1(7): cmp $0x0,0x206c00(%rip)
26b8(2): jnz 0x78(%rip)
26ba(2): mov %ebx,%esi
26bc(2): mov %ebp,%edi
26be(5): call 0xfffff4b2(%rip)
26c3(7): cmp $0x0,0x206bf0(%rip)
26ca(6): jz 0xd6(%rip)
26d0(5): mov 0x28(%rsp),%rax
26d5(9): xor $0x28,%rax
26de(6): jnz 0x165(%rip)
26e4(4): add $0x30,%rsp
26e8(1): pop %rbx
26e9(1): pop %rbp
26ea(2): pop %r12
26ec(1): ret near (%rsp)
26ed(3): nop (%rax)
26f0(6): movsd %xmm0,0x8(%rsp)
26f6(5): call 0xfffff27a(%rip)
26fb(6): movsd 0x8(%rsp),%xmm0
2701(2): xor %edi,%edi
2703(3): mov %rax,%rbp
2706(3): mov (%rax),%r12d
2709(a): mov $0x9,0x2068fd(%rip)
2713(5): call 0xfffffd6d(%rip)
2718(7): cmp $0x0,0x206b99(%rip)
271f(b): mov $0x0,0x206b96(%rip)
272a(4): mov %r12d,0x0(%rbp)
272e(2): jz 0x4f(%rip)
2730(5): lea 0x10(%rsp),%rbp
2735(2): mov %ebx,%edi
2737(3): mov %rbp,%rsi
273a(5): call 0x3316(%rip)
273f(2): test %eax,%eax
2741(6): jnz 0xcf(%rip)
2747(7): mov 0x206b62(%rip),%rdi
274e(5): call 0x2742(%rip)
2753(7): lea 0x38e6(%rip),%rsi
275a(3): mov %rax,%r12
275d(5): mov $0x5,%edx
2762(2): xor %edi,%edi
2764(5): call 0xfffff2bc(%rip)
2769(3): mov %r12,%r8
276c(3): mov %rax,%rdx
276f(3): mov %rbp,%rcx
2772(2): xor %esi,%esi
2774(2): xor %edi,%edi
2776(2): xor %eax,%eax
2778(5): call 0xfffff498(%rip)
277d(6): mov 0x206b45(%rip),%ebp
2783(2): test %ebp,%ebp
2785(6): jnz 0xffffff35(%rip)
278b(5): mov $0x1,%esi
2790(2): mov %ebx,%edi
2792(5): call 0xfffff38e(%rip)
2797(5): jmp 0xffffff23(%rip)
279c(4): nop 0x0(%rax)
27a0(5): mov $0x1,%esi
27a5(2): mov %ebx,%edi
27a7(5): call 0xfffff379(%rip)
27ac(2): xor %edi,%edi
27ae(2): mov %ebx,%esi
27b0(5): call 0xfffff3c0(%rip)
27b5(3): cmp $0x9,%ebx
27b8(6): jz 0xffffff18(%rip)
27be(3): cmp $0x12,%ebx
27c1(6): jz 0xffffff0f(%rip)
27c7(2): test %ebp,%ebp
27c9(2): jnz 0x11(%rip)
27cb(5): mov $0x1,%esi
27d0(5): mov $0x12,%edi
27d5(5): call 0xfffff34b(%rip)
27da(2): mov %ebp,%edi
27dc(5): mov $0x12,%esi
27e1(5): call 0xfffff38f(%rip)
27e6(5): mov $0x1,%esi
27eb(5): mov $0x12,%edi
27f0(5): call 0xfffff330(%rip)
27f5(5): mov $0x12,%esi
27fa(2): xor %edi,%edi
27fc(5): call 0xfffff374(%rip)
2801(5): jmp 0xfffffecf(%rip)
2806(a): nop 0x0(%rax,%rax,1)
2810(7): lea 0x36af(%rip),%r8
2817(3): mov %ebx,%r9d
281a(5): mov $0x13,%ecx
281f(5): mov $0x1,%edx
2824(5): mov $0x13,%esi
2829(3): mov %rbp,%rdi
282c(2): xor %eax,%eax
282e(5): call 0xfffff102(%rip)
2833(5): jmp 0xffffff14(%rip)
2838(6): lea 0x80(%rbx),%edi
283e(5): call 0xfffff152(%rip)
2843(5): call 0xfffff20d(%rip)

"usage" :
2850(2): push %r13
2852(2): push %r12
2854(5): mov $0x5,%edx
2859(1): push %rbp
285a(1): push %rbx
285b(2): mov %edi,%ebp
285d(7): sub $0x88,%rsp
2864(7): mov 0x206a75(%rip),%rbx
286b(9): mov $0x28,%rax
2874(5): mov %rax,0x78(%rsp)
2879(2): xor %eax,%eax
287b(2): test %edi,%edi
287d(2): jz 0x30(%rip)
287f(7): lea 0x37da(%rip),%rsi
2886(2): xor %edi,%edi
2888(5): call 0xfffff198(%rip)
288d(7): mov 0x206a0c(%rip),%rdi
2894(3): mov %rax,%rdx
2897(3): mov %rbx,%rcx
289a(5): mov $0x1,%esi
289f(2): xor %eax,%eax
28a1(5): call 0xfffff42f(%rip)
28a6(2): mov %ebp,%edi
28a8(5): call 0xfffff3f8(%rip)
28ad(7): lea 0x37d4(%rip),%rsi
28b4(2): xor %edi,%edi
28b6(5): call 0xfffff16a(%rip)
28bb(3): mov %rbx,%rcx
28be(3): mov %rbx,%rdx
28c1(3): mov %rax,%rsi
28c4(5): mov $0x1,%edi
28c9(2): xor %eax,%eax
28cb(5): call 0xfffff335(%rip)
28d0(7): mov 0x206991(%rip),%rbx
28d7(7): lea 0x37f2(%rip),%rsi
28de(5): mov $0x5,%edx
28e3(2): xor %edi,%edi
28e5(5): call 0xfffff13b(%rip)
28ea(3): mov %rbx,%rsi
28ed(3): mov %rax,%rdi
28f0(5): call 0xfffff200(%rip)
28f5(7): mov 0x20696c(%rip),%rbx
28fc(7): lea 0x380d(%rip),%rsi
2903(5): mov $0x5,%edx
2908(2): xor %edi,%edi
290a(5): call 0xfffff116(%rip)
290f(3): mov %rbx,%rsi
2912(3): mov %rax,%rdi
2915(5): call 0xfffff1db(%rip)
291a(7): mov 0x206947(%rip),%rbx
2921(7): lea 0x3838(%rip),%rsi
2928(5): mov $0x5,%edx
292d(2): xor %edi,%edi
292f(5): call 0xfffff0f1(%rip)
2934(3): mov %rbx,%rsi
2937(3): mov %rax,%rdi
293a(5): call 0xfffff1b6(%rip)
293f(7): mov 0x206922(%rip),%rbx
2946(7): lea 0x3af3(%rip),%rsi
294d(5): mov $0x5,%edx
2952(2): xor %edi,%edi
2954(5): call 0xfffff0cc(%rip)
2959(3): mov %rbx,%rsi
295c(3): mov %rax,%rdi
295f(5): call 0xfffff191(%rip)
2964(7): mov 0x2068fd(%rip),%rbx
296b(7): lea 0x3b16(%rip),%rsi
2972(5): mov $0x5,%edx
2977(2): xor %edi,%edi
2979(5): call 0xfffff0a7(%rip)
297e(3): mov %rbx,%rsi
2981(3): mov %rax,%rdi
2984(5): call 0xfffff16c(%rip)
2989(7): mov 0x2068d8(%rip),%rbx
2990(7): lea 0x3b21(%rip),%rsi
2997(5): mov $0x5,%edx
299c(2): xor %edi,%edi
299e(5): call 0xfffff082(%rip)
29a3(3): mov %rbx,%rsi
29a6(3): mov %rax,%rdi
29a9(5): call 0xfffff147(%rip)
29ae(7): mov 0x2068b3(%rip),%rbx
29b5(7): lea 0x3b34(%rip),%rsi
29bc(5): mov $0x5,%edx
29c1(2): xor %edi,%edi
29c3(5): call 0xfffff05d(%rip)
29c8(3): mov %rbx,%rsi
29cb(3): mov %rax,%rdi
29ce(5): call 0xfffff122(%rip)
29d3(7): mov 0x20688e(%rip),%rbx
29da(7): lea 0x3bcf(%rip),%rsi
29e1(5): mov $0x5,%edx
29e6(2): xor %edi,%edi
29e8(5): call 0xfffff038(%rip)
29ed(3): mov %rbx,%rsi
29f0(3): mov %rax,%rdi
29f3(7): lea 0x34cf(%rip),%rbx
29fa(5): call 0xfffff0f6(%rip)
29ff(7): lea 0x34cb(%rip),%rax
2a06(7): lea 0x3505(%rip),%rcx
2a0d(9): mov $0x0,0x60(%rsp)
2a16(9): mov $0x0,0x68(%rsp)
2a1f(3): mov %rsp,%rdx
2a22(4): mov %rax,(%rsp)
2a26(7): lea 0x34a6(%rip),%rax
2a2d(5): mov %rcx,0x30(%rsp)
2a32(7): lea 0x34e3(%rip),%rcx
2a39(5): mov %rax,0x8(%rsp)
2a3e(7): lea 0x3506(%rip),%rax
2a45(5): mov %rcx,0x40(%rsp)
2a4a(7): lea 0x34d5(%rip),%rcx
2a51(5): mov %rax,0x10(%rsp)
2a56(7): lea 0x3486(%rip),%rax
2a5d(5): mov %rcx,0x50(%rsp)
2a62(5): mov %rax,0x18(%rsp)
2a67(7): lea 0x348b(%rip),%rax
2a6e(5): mov %rax,0x20(%rsp)
2a73(7): lea 0x3489(%rip),%rax
2a7a(5): mov %rax,0x28(%rsp)
2a7f(5): mov %rax,0x38(%rsp)
2a84(5): mov %rax,0x48(%rsp)
2a89(5): mov %rax,0x58(%rsp)
2a8e(2): nop 
2a90(4): add $0x10,%rdx
2a94(3): mov (%rdx),%rdi
2a97(3): test %rdi,%rdi
2a9a(2): jz 0x15(%rip)
2a9c(5): mov $0x8,%ecx
2aa1(3): mov %rbx,%rsi
2aa4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2aa6(3): setnbe %al
2aa9(2): sbb $0x0,%al
2aab(2): test %al,%al
2aad(2): jnz 0xffffffe3(%rip)
2aaf(4): mov 0x8(%rdx),%r12
2ab3(2): xor %edi,%edi
2ab5(5): mov $0x5,%edx
2aba(7): lea 0x346f(%rip),%rsi
2ac1(3): test %r12,%r12
2ac4(6): jz 0xc7(%rip)
2aca(5): call 0xffffef56(%rip)
2acf(7): lea 0x3c7a(%rip),%rcx
2ad6(7): lea 0x346a(%rip),%rdx
2add(3): mov %rax,%rsi
2ae0(5): mov $0x1,%edi
2ae5(2): xor %eax,%eax
2ae7(5): call 0xfffff119(%rip)
2aec(2): xor %esi,%esi
2aee(5): mov $0x5,%edi
2af3(5): call 0xfffff0fd(%rip)
2af8(3): test %rax,%rax
2afb(2): jz 0x1e(%rip)
2afd(7): lea 0x3451(%rip),%rsi
2b04(5): mov $0x3,%edx
2b09(3): mov %rax,%rdi
2b0c(5): call 0xffffee74(%rip)
2b11(2): test %eax,%eax
2b13(6): jnz 0x10d(%rip)
2b19(7): lea 0x3439(%rip),%rsi
2b20(2): xor %edi,%edi
2b22(5): mov $0x5,%edx
2b27(5): call 0xffffeef9(%rip)
2b2c(7): lea 0x3396(%rip),%rcx
2b33(7): lea 0x3c16(%rip),%rdx
2b3a(3): mov %rax,%rsi
2b3d(5): mov $0x1,%edi
2b42(2): xor %eax,%eax
2b44(5): call 0xfffff0bc(%rip)
2b49(3): cmp %rbx,%r12
2b4c(7): lea 0x339a(%rip),%rcx
2b53(7): lea 0x4307(%rip),%rbx
2b5a(4): cmove %rcx,%rbx
2b5e(7): lea 0x3c5b(%rip),%rsi
2b65(2): xor %edi,%edi
2b67(5): mov $0x5,%edx
2b6c(5): call 0xffffeeb4(%rip)
2b71(3): mov %rbx,%rcx
2b74(3): mov %rax,%rsi
2b77(3): mov %r12,%rdx
2b7a(5): mov $0x1,%edi
2b7f(2): xor %eax,%eax
2b81(5): call 0xfffff07f(%rip)
2b86(5): jmp 0xfffffd20(%rip)
2b8b(5): call 0xffffee95(%rip)
2b90(7): lea 0x3bb9(%rip),%rcx
2b97(7): lea 0x33a9(%rip),%rdx
2b9e(3): mov %rax,%rsi
2ba1(5): mov $0x1,%edi
2ba6(2): xor %eax,%eax
2ba8(5): call 0xfffff058(%rip)
2bad(2): xor %esi,%esi
2baf(5): mov $0x5,%edi
2bb4(5): call 0xfffff03c(%rip)
2bb9(3): test %rax,%rax
2bbc(2): jz 0x1a(%rip)
2bbe(7): lea 0x3390(%rip),%rsi
2bc5(5): mov $0x3,%edx
2bca(3): mov %rax,%rdi
2bcd(5): call 0xffffedb3(%rip)
2bd2(2): test %eax,%eax
2bd4(2): jnz 0x45(%rip)
2bd6(7): lea 0x337c(%rip),%rsi
2bdd(5): mov $0x5,%edx
2be2(2): xor %edi,%edi
2be4(7): lea 0x32de(%rip),%r12
2beb(7): lea 0x32fb(%rip),%rbx
2bf2(5): call 0xffffee2e(%rip)
2bf7(7): lea 0x32cb(%rip),%rcx
2bfe(7): lea 0x3b4b(%rip),%rdx
2c05(3): mov %rax,%rsi
2c08(5): mov $0x1,%edi
2c0d(2): xor %eax,%eax
2c0f(5): call 0xffffeff1(%rip)
2c14(5): jmp 0xffffff4a(%rip)
2c19(7): lea 0x32a9(%rip),%r12
2c20(7): mov 0x206641(%rip),%r13
2c27(7): lea 0x3b4a(%rip),%rsi
2c2e(2): xor %edi,%edi
2c30(5): mov $0x5,%edx
2c35(5): call 0xffffedeb(%rip)
2c3a(3): mov %r13,%rsi
2c3d(3): mov %rax,%rdi
2c40(5): call 0xffffeeb0(%rip)
2c45(5): jmp 0xfffffed4(%rip)

"parse_duration" :
2c50(1): push %rbx
2c51(3): mov %rdi,%rbx
2c54(4): sub $0x20,%rsp
2c58(7): lea 0x2d1(%rip),%rcx
2c5f(5): lea 0x8(%rsp),%rdx
2c64(5): lea 0x10(%rsp),%rsi
2c69(9): mov $0x28,%rax
2c72(5): mov %rax,0x18(%rsp)
2c77(2): xor %eax,%eax
2c79(5): call 0x2ae7(%rip)
2c7e(2): test %al,%al
2c80(2): jnz 0xc(%rip)
2c82(5): call 0xffffecee(%rip)
2c87(3): cmp $0x22,(%rax)
2c8a(2): jnz 0x78(%rip)
2c8c(6): movsd 0x8(%rsp),%xmm0
2c92(8): ucomisd 0x3bde(%rip),%xmm0
2c9a(2): jb 0x68(%rip)
2c9c(5): mov 0x10(%rsp),%rdx
2ca1(3): movzx (%rdx),%eax
2ca4(2): test %al,%al
2ca6(2): jz 0x1a(%rip)
2ca8(4): cmp $0x0,0x1(%rdx)
2cac(2): jnz 0x56(%rip)
2cae(2): cmp $0x68,%al
2cb0(2): jz 0x30(%rip)
2cb2(2): jnle 0x3e(%rip)
2cb4(2): cmp $0x64,%al
2cb6(2): jnz 0x4c(%rip)
2cb8(8): mulsd 0x3bd0(%rip),%xmm0
2cc0(5): mov 0x18(%rsp),%rax
2cc5(9): xor $0x28,%rax
2cce(2): jnz 0x6d(%rip)
2cd0(4): add $0x20,%rsp
2cd4(1): pop %rbx
2cd5(1): ret near (%rsp)
2cd6(a): nop 0x0(%rax,%rax,1)
2ce0(8): mulsd 0x3ba0(%rip),%xmm0
2ce8(2): jmp 0xffffffd8(%rip)
2cea(6): nop 0x0(%rax,%rax,1)
2cf0(2): cmp $0x6d,%al
2cf2(2): jnz 0xc(%rip)
2cf4(8): mulsd 0x3b84(%rip),%xmm0
2cfc(2): jmp 0xffffffc4(%rip)
2cfe(2): cmp $0x73,%al
2d00(2): jz 0xffffffc0(%rip)
2d02(3): mov %rbx,%rdi
2d05(5): call 0x218b(%rip)
2d0a(7): lea 0x3263(%rip),%rsi
2d11(3): mov %rax,%rbx
2d14(5): mov $0x5,%edx
2d19(2): xor %edi,%edi
2d1b(5): call 0xffffed05(%rip)
2d20(2): xor %edi,%edi
2d22(3): mov %rax,%rdx
2d25(3): mov %rbx,%rcx
2d28(2): xor %esi,%esi
2d2a(2): xor %eax,%eax
2d2c(5): call 0xffffeee4(%rip)
2d31(5): mov $0x7d,%edi
2d36(5): call 0xfffffb1a(%rip)
2d3b(5): call 0xffffed15(%rip)

"operand2sig" :
2d40(2): push %r15
2d42(2): push %r14
2d44(3): mov %rsi,%r14
2d47(2): push %r13
2d49(2): push %r12
2d4b(1): push %rbp
2d4c(1): push %rbx
2d4d(3): mov %rdi,%rbp
2d50(4): sub $0x28,%rsp
2d54(9): mov $0x28,%rax
2d5d(5): mov %rax,0x18(%rsp)
2d62(2): xor %eax,%eax
2d64(3): movsx (%rdi),%eax
2d67(3): sub $0x30,%eax
2d6a(3): cmp $0x9,%eax
2d6d(6): jnbe 0x93(%rip)
2d73(5): call 0xffffebfd(%rip)
2d78(5): lea 0x10(%rsp),%rsi
2d7d(5): mov $0xa,%edx
2d82(6): mov $0x0,(%rax)
2d88(3): mov %rbp,%rdi
2d8b(3): mov %rax,%rbx
2d8e(5): call 0xffffedb2(%rip)
2d93(5): mov 0x10(%rsp),%rdx
2d98(3): cmp %rbp,%rdx
2d9b(2): jz 0x1d(%rip)
2d9d(3): cmp $0x0,(%rdx)
2da0(2): jnz 0x18(%rip)
2da2(2): mov (%rbx),%edx
2da4(2): test %edx,%edx
2da6(2): jnz 0x12(%rip)
2da8(3): movsxd %eax,%rdx
2dab(3): cmp %rax,%rdx
2dae(6): jz 0x142(%rip)
2db4(4): nop 0x0(%rax)
2db8(8): mov $0xffffffff,0xc(%rsp)
2dc0(3): mov %rbp,%rdi
2dc3(5): call 0x20cd(%rip)
2dc8(7): lea 0x3ae4(%rip),%rsi
2dcf(3): mov %rax,%rbx
2dd2(5): mov $0x5,%edx
2dd7(2): xor %edi,%edi
2dd9(5): call 0xffffec47(%rip)
2dde(3): mov %rbx,%rcx
2de1(3): mov %rax,%rdx
2de4(2): xor %esi,%esi
2de6(2): xor %eax,%eax
2de8(2): xor %edi,%edi
2dea(5): call 0xffffee26(%rip)
2def(5): mov $0xffffffff,%eax
2df4(5): jmp 0x8c(%rip)
2df9(7): nop 0x0(%rax)
2e00(5): call 0x2900(%rip)
2e05(3): movzx (%rax),%ebx
2e08(3): mov %rax,%r13
2e0b(2): test %bl,%bl
2e0d(2): jz 0x35(%rip)
2e0f(7): lea 0x3a82(%rip),%r12
2e16(3): mov %rax,%r15
2e19(7): nop 0x0(%rax)
2e20(3): movsx %bl,%esi
2e23(3): mov %r12,%rdi
2e26(5): call 0xffffec5a(%rip)
2e2b(3): test %rax,%rax
2e2e(2): jz 0x8(%rip)
2e30(3): sub $0x20,%ebx
2e33(3): mov %bl,(%r15)
2e36(4): add $0x1,%r15
2e3a(4): movzx (%r15),%ebx
2e3e(2): test %bl,%bl
2e40(2): jnz 0xffffffe0(%rip)
2e42(5): lea 0xc(%rsp),%rbx
2e47(3): mov %r13,%rdi
2e4a(3): mov %rbx,%rsi
2e4d(5): call 0x2a73(%rip)
2e52(2): test %eax,%eax
2e54(2): jnz 0x54(%rip)
2e56(4): mov 0xc(%rsp),%ebx
2e5a(3): mov %r13,%rdi
2e5d(5): call 0xffffeaf3(%rip)
2e62(2): test %ebx,%ebx
2e64(6): js 0xffffff5c(%rip)
2e6a(3): mov %r14,%rsi
2e6d(2): mov %ebx,%edi
2e6f(5): call 0x2be1(%rip)
2e74(2): test %eax,%eax
2e76(6): jnz 0xffffff4a(%rip)
2e7c(4): mov 0xc(%rsp),%eax
2e80(5): mov 0x18(%rsp),%rcx
2e85(9): xor $0x28,%rcx
2e8e(6): jnz 0x8e(%rip)
2e94(4): add $0x28,%rsp
2e98(1): pop %rbx
2e99(1): pop %rbp
2e9a(2): pop %r12
2e9c(2): pop %r13
2e9e(2): pop %r14
2ea0(2): pop %r15
2ea2(1): ret near (%rsp)
2ea3(5): nop 0x0(%rax,%rax,1)
2ea8(5): cmp $0x53,0x0(%r13)
2ead(2): jz 0x1b(%rip)
2eaf(3): mov %r13,%rdi
2eb2(8): mov $0xffffffff,0xc(%rsp)
2eba(5): call 0xffffea96(%rip)
2ebf(5): jmp 0xffffff01(%rip)
2ec4(4): nop 0x0(%rax)
2ec8(5): cmp $0x49,0x1(%r13)
2ecd(2): jnz 0xffffffe2(%rip)
2ecf(5): cmp $0x47,0x2(%r13)
2ed4(2): jnz 0xffffffdb(%rip)
2ed6(4): lea 0x3(%r13),%rdi
2eda(3): mov %rbx,%rsi
2edd(5): call 0x29e3(%rip)
2ee2(2): test %eax,%eax
2ee4(2): jnz 0xffffffcb(%rip)
2ee6(5): jmp 0xffffff70(%rip)
2eeb(5): nop 0x0(%rax,%rax,1)
2ef0(3): cmp $0xff,%edx
2ef3(2): jz 0x20(%rip)
2ef5(6): cmp $0xff,%edx
2efb(5): mov $0x7f,%eax
2f00(5): mov $0xff,%ebx
2f05(3): cmovnge %eax,%ebx
2f08(2): and %edx,%ebx
2f0a(4): mov %ebx,0xc(%rsp)
2f0e(5): jmp 0xffffff5c(%rip)
2f13(4): mov %edx,0xc(%rsp)
2f17(5): jmp 0xfffffea9(%rip)
2f1c(5): call 0xffffeb34(%rip)

"cl_strtod" :
2f30(2): push %r13
2f32(2): push %r12
2f34(1): push %rbp
2f35(1): push %rbx
2f36(3): mov %rsi,%rbx
2f39(3): mov %rdi,%rbp
2f3c(4): sub $0x38,%rsp
2f40(5): lea 0x18(%rsp),%rsi
2f45(9): mov $0x28,%rax
2f4e(5): mov %rax,0x28(%rsp)
2f53(2): xor %eax,%eax
2f55(5): call 0xffffea7b(%rip)
2f5a(5): mov 0x18(%rsp),%rax
2f5f(4): movapd %xmm0,%xmm1
2f63(3): cmp $0x0,(%rax)
2f66(2): jnz 0x32(%rip)
2f68(3): test %rbx,%rbx
2f6b(2): jz 0xa(%rip)
2f6d(5): mov 0x18(%rsp),%rax
2f72(3): mov %rax,(%rbx)
2f75(5): mov 0x28(%rsp),%rax
2f7a(9): xor $0x28,%rax
2f83(4): movapd %xmm1,%xmm0
2f87(2): jnz 0x57(%rip)
2f89(4): add $0x38,%rsp
2f8d(1): pop %rbx
2f8e(1): pop %rbp
2f8f(2): pop %r12
2f91(2): pop %r13
2f93(1): ret near (%rsp)
2f94(4): nop 0x0(%rax)
2f98(6): movsd %xmm0,0x8(%rsp)
2f9e(5): call 0xffffe9d2(%rip)
2fa3(5): lea 0x20(%rsp),%rsi
2fa8(3): mov %rbp,%rdi
2fab(3): mov %rax,%r12
2fae(3): mov (%rax),%r13d
2fb1(5): call 0x2b7f(%rip)
2fb6(5): mov 0x20(%rsp),%rax
2fbb(5): cmp %rax,0x18(%rsp)
2fc0(6): movsd 0x8(%rsp),%xmm1
2fc6(2): jnb 0x12(%rip)
2fc8(5): mov %rax,0x18(%rsp)
2fcd(4): movapd %xmm0,%xmm1
2fd1(2): jmp 0xffffff97(%rip)
2fd3(5): nop 0x0(%rax,%rax,1)
2fd8(4): mov %r13d,(%r12)
2fdc(2): jmp 0xffffff8c(%rip)
2fde(5): call 0xffffea72(%rip)

"close_stdout_set_file_name" :
2ff0(7): mov %rdi,0x2062e1(%rip)
2ff7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3000(7): mov %dil,0x2062c9(%rip)
3007(1): ret near (%rsp)

"close_stdout" :
3010(1): push %rbp
3011(1): push %rbx
3012(4): sub $0x8,%rsp
3016(7): mov 0x20624b(%rip),%rdi
301d(5): call 0x2b83(%rip)
3022(2): test %eax,%eax
3024(2): jz 0x18(%rip)
3026(5): call 0xffffe94a(%rip)
302b(7): cmp $0x0,0x20629e(%rip)
3032(3): mov %rax,%rbx
3035(2): jz 0x1e(%rip)
3037(3): cmp $0x20,(%rax)
303a(2): jnz 0x19(%rip)
303c(7): mov 0x20625d(%rip),%rdi
3043(5): call 0x2b5d(%rip)
3048(2): test %eax,%eax
304a(2): jnz 0x48(%rip)
304c(4): add $0x8,%rsp
3050(1): pop %rbx
3051(1): pop %rbp
3052(1): ret near (%rsp)
3053(7): lea 0x3871(%rip),%rsi
305a(2): xor %edi,%edi
305c(5): mov $0x5,%edx
3061(5): call 0xffffe9bf(%rip)
3066(7): mov 0x20626b(%rip),%rdi
306d(3): mov %rax,%rbp
3070(3): test %rdi,%rdi
3073(2): jz 0x2a(%rip)
3075(5): call 0x1c1b(%rip)
307a(2): mov (%rbx),%esi
307c(7): lea 0x3854(%rip),%rdx
3083(3): mov %rax,%rcx
3086(3): mov %rbp,%r8
3089(2): xor %edi,%edi
308b(2): xor %eax,%eax
308d(5): call 0xffffeb83(%rip)
3092(6): mov 0x205f88(%rip),%edi
3098(5): call 0xffffe8f8(%rip)
309d(2): mov (%rbx),%esi
309f(7): lea 0x3835(%rip),%rdx
30a6(3): mov %rax,%rcx
30a9(2): xor %edi,%edi
30ab(2): xor %eax,%eax
30ad(5): call 0xffffeb63(%rip)
30b2(2): jmp 0xffffffe0(%rip)

"dtotimespec" :
30c0(8): ucomisd 0x3818(%rip),%xmm0
30c8(6): jbe 0x98(%rip)
30ce(8): movsd 0x3812(%rip),%xmm1
30d6(4): ucomisd %xmm0,%xmm1
30da(2): jbe 0x6e(%rip)
30dc(5): cvttsd2si %xmm0,%rsi
30e1(4): pxor %xmm1,%xmm1
30e5(2): xor %ecx,%ecx
30e7(5): cvtsi2sd %rsi,%xmm1
30ec(4): subsd %xmm1,%xmm0
30f0(4): pxor %xmm1,%xmm1
30f4(8): mulsd 0x37f4(%rip),%xmm0
30fc(5): cvttsd2si %xmm0,%rdx
3101(5): cvtsi2sd %rdx,%xmm1
3106(4): ucomisd %xmm1,%xmm0
310a(3): setnbe %cl
310d(3): add %rdx,%rcx
3110(a): mov $0x1237940039285380275,%rdx
311a(3): mov %rcx,%rax
311d(3): imul %rax,%rdx,%rdx
3120(3): mov %rcx,%rax
3123(4): sar $0x3f,%rax
3127(4): sar $0x1a,%rdx
312b(3): sub %rax,%rdx
312e(4): lea 0x0(%rdx,%rsi,1),%rax
3132(7): imul %rdx,$0x3b9aca00,%rdx
3139(3): sub %rdx,%rcx
313c(3): mov %rcx,%rdx
313f(2): js 0x31(%rip)
3141(2): REP ret near (%rsp)
3143(5): nop 0x0(%rax,%rax,1)
3148(a): mov $0x9223372036854775807,%rax
3152(5): mov $0x3b9ac9ff,%edx
3157(1): ret near (%rsp)
3158(8): nop 0x0(%rax,%rax,1)
3160(a): mov $0x-9223372036854775808,%rax
316a(2): xor %edx,%edx
316c(1): ret near (%rsp)
316d(3): nop (%rax)
3170(4): sub $0x1,%rax
3174(7): add $0x3b9aca00,%rdx
317b(1): ret near (%rsp)

"set_program_name" :
3180(3): test %rdi,%rdi
3183(1): push %rbx
3184(2): jz 0x79(%rip)
3186(5): mov $0x2f,%esi
318b(3): mov %rdi,%rbx
318e(5): call 0xffffe912(%rip)
3193(3): test %rax,%rax
3196(2): jz 0x57(%rip)
3198(4): lea 0x1(%rax),%r8
319c(3): mov %r8,%rdx
319f(3): sub %rbx,%rdx
31a2(4): cmp $0x6,%rdx
31a6(2): jle 0x47(%rip)
31a8(4): lea 0xfffffffa(%rax),%rsi
31ac(7): lea 0x377d(%rip),%rdi
31b3(5): mov $0x7,%ecx
31b8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
31ba(3): setnbe %dl
31bd(3): sbb $0x0,%dl
31c0(2): test %dl,%dl
31c2(2): jnz 0x2b(%rip)
31c4(7): lea 0x376d(%rip),%rdi
31cb(5): mov $0x3,%ecx
31d0(3): mov %r8,%rsi
31d3(3): mov %r8,%rbx
31d6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
31d8(3): setnbe %dl
31db(3): sbb $0x0,%dl
31de(2): test %dl,%dl
31e0(2): jnz 0xd(%rip)
31e2(4): lea 0x4(%rax),%rbx
31e6(7): mov %rbx,0x206073(%rip)
31ed(7): mov %rbx,0x2060ec(%rip)
31f4(7): mov %rbx,0x206085(%rip)
31fb(1): pop %rbx
31fc(1): ret near (%rsp)
31fd(7): mov 0x20609c(%rip),%rcx
3204(7): lea 0x36ed(%rip),%rdi
320b(5): mov $0x37,%edx
3210(5): mov $0x1,%esi
3215(5): call 0xffffea9b(%rip)
321a(5): call 0xffffe746(%rip)

"gettext_quote.part.1" :
3220(1): push %rbp
3221(1): push %rbx
3222(3): mov %rdi,%rbp
3225(2): mov %esi,%ebx
3227(4): sub $0x8,%rsp
322b(5): call 0x2a55(%rip)
3230(3): movzx (%rax),%edx
3233(3): and $0xdf,%edx
3236(3): cmp $0x55,%dl
3239(2): jz 0x77(%rip)
323b(3): cmp $0x47,%dl
323e(2): jz 0x22(%rip)
3240(7): lea 0x3704(%rip),%rax
3247(7): lea 0x36ff(%rip),%rdx
324e(3): cmp $0x9,%ebx
3251(4): cmovne %rdx,%rax
3255(4): add $0x8,%rsp
3259(1): pop %rbx
325a(1): pop %rbp
325b(1): ret near (%rsp)
325c(4): nop 0x0(%rax)
3260(4): movzx 0x1(%rax),%edx
3264(3): and $0xdf,%edx
3267(3): cmp $0x42,%dl
326a(2): jnz 0xffffffd6(%rip)
326c(4): cmp $0x31,0x2(%rax)
3270(2): jnz 0xffffffd0(%rip)
3272(4): cmp $0x38,0x3(%rax)
3276(2): jnz 0xffffffca(%rip)
3278(4): cmp $0x30,0x4(%rax)
327c(2): jnz 0xffffffc4(%rip)
327e(4): cmp $0x33,0x5(%rax)
3282(2): jnz 0xffffffbe(%rip)
3284(4): cmp $0x30,0x6(%rax)
3288(2): jnz 0xffffffb8(%rip)
328a(4): cmp $0x0,0x7(%rax)
328e(2): jnz 0xffffffb2(%rip)
3290(4): cmp $0x60,0x0(%rbp)
3294(7): lea 0x36a9(%rip),%rax
329b(7): lea 0x36a6(%rip),%rdx
32a2(4): cmovne %rdx,%rax
32a6(4): add $0x8,%rsp
32aa(1): pop %rbx
32ab(1): pop %rbp
32ac(1): ret near (%rsp)
32ad(3): nop (%rax)
32b0(4): movzx 0x1(%rax),%edx
32b4(3): and $0xdf,%edx
32b7(3): cmp $0x54,%dl
32ba(2): jnz 0xffffff86(%rip)
32bc(4): movzx 0x2(%rax),%edx
32c0(3): and $0xdf,%edx
32c3(3): cmp $0x46,%dl
32c6(6): jnz 0xffffff7a(%rip)
32cc(4): cmp $0x2d,0x3(%rax)
32d0(6): jnz 0xffffff70(%rip)
32d6(4): cmp $0x38,0x4(%rax)
32da(6): jnz 0xffffff66(%rip)
32e0(4): cmp $0x0,0x5(%rax)
32e4(6): jnz 0xffffff5c(%rip)
32ea(4): cmp $0x60,0x0(%rbp)
32ee(7): lea 0x3647(%rip),%rax
32f5(7): lea 0x3644(%rip),%rdx
32fc(4): cmovne %rdx,%rax
3300(4): add $0x8,%rsp
3304(1): pop %rbx
3305(1): pop %rbp
3306(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3310(2): push %r15
3312(2): push %r14
3314(3): mov %r8d,%r15d
3317(2): push %r13
3319(2): push %r12
331b(3): mov %rdi,%r14
331e(1): push %rbp
331f(1): push %rbx
3320(3): mov %r9d,%ebx
3323(3): mov %rsi,%r13
3326(3): mov %rcx,%rbp
3329(3): and $0x2,%ebx
332c(7): sub $0xb8,%rsp
3333(8): mov 0xf0(%rsp),%rax
333b(5): mov %rdx,0x10(%rsp)
3340(5): mov %r8d,0x8(%rsp)
3345(5): mov %r9d,0x78(%rsp)
334a(5): mov %rax,0x20(%rsp)
334f(8): mov 0xf8(%rsp),%rax
3357(5): mov %rax,0x68(%rsp)
335c(8): mov 0x100(%rsp),%rax
3364(5): mov %rax,0x60(%rsp)
3369(9): mov $0x28,%rax
3372(8): mov %rax,0xa8(%rsp)
337a(2): xor %eax,%eax
337c(5): call 0xffffe6b4(%rip)
3381(4): cmp $0xa,%r15d
3385(5): mov %rax,0x58(%rsp)
338a(6): jnbe 0x11b5(%rip)
3390(7): lea 0x3609(%rip),%rcx
3397(3): mov %r15d,%edx
339a(4): movsxd 0x0(%rcx,%rdx,4),%rax
339e(3): add %rcx,%rax
33a1(2): jmp %rax
33a3(5): mov $0x1,0xe(%rsp)
33a8(5): mov $0x0,0x7c(%rsp)
33ad(3): xor %r12d,%r12d
33b0(9): mov $0x0,0x50(%rsp)
33b9(5): mov $0x1,0xf(%rsp)
33be(5): mov $0x0,0xd(%rsp)
33c3(7): lea 0x3583(%rip),%rax
33ca(9): mov $0x1,0x18(%rsp)
33d3(3): xor %r15d,%r15d
33d6(8): mov $0x2,0x8(%rsp)
33de(5): mov %rax,0x48(%rsp)
33e3(3): xor %r11d,%r11d
33e6(3): mov %rbp,%rax
33e9(3): mov %r12d,%r8d
33ec(3): mov %r11,%rbp
33ef(3): mov %rax,%r11
33f2(6): nop 0x0(%rax,%rax,1)
33f8(3): cmp %rbp,%r11
33fb(4): setnz %r12b
33ff(4): cmp $0xffffffff,%r11
3403(2): jnz 0xf(%rip)
3405(5): mov 0x10(%rsp),%rax
340a(4): cmp $0x0,0x0(%rax,%rbp,1)
340e(4): setnz %r12b
3412(3): test %r12b,%r12b
3415(6): jz 0x65b(%rip)
341b(5): cmp $0x2,0x8(%rsp)
3420(5): mov 0x10(%rsp),%rdi
3425(4): lea 0x0(%rdi,%rbp,1),%r9
3429(3): setnz %al
342c(4): and 0xd(%rsp),%al
3430(3): mov %eax,%r10d
3433(6): jz 0xad(%rip)
3439(5): mov 0x18(%rsp),%rax
343e(3): test %rax,%rax
3441(6): jz 0x42f(%rip)
3447(4): cmp $0xffffffff,%r11
344b(5): lea 0x0(%rbp,%rax,1),%rbx
3450(2): jnz 0x30(%rip)
3452(4): cmp $0x1,%rax
3456(2): jbe 0x2a(%rip)
3458(5): mov %r8b,0x38(%rsp)
345d(5): mov %r10b,0x30(%rsp)
3462(5): mov %r9,0x28(%rsp)
3467(5): call 0xffffe5d9(%rip)
346c(6): movzx 0x38(%rsp),%r8d
3472(6): movzx 0x30(%rsp),%r10d
3478(3): mov %rax,%r11
347b(5): mov 0x28(%rsp),%r9
3480(3): cmp %r11,%rbx
3483(5): mov %r10b,0x28(%rsp)
3488(6): jnbe 0x5b8(%rip)
348e(5): mov 0x18(%rsp),%rdx
3493(5): mov 0x48(%rsp),%rsi
3498(3): mov %r9,%rdi
349b(5): mov %r11,0x40(%rsp)
34a0(5): mov %r8b,0x38(%rsp)
34a5(5): mov %r9,0x30(%rsp)
34aa(5): call 0xffffe636(%rip)
34af(2): test %eax,%eax
34b1(5): mov 0x30(%rsp),%r9
34b6(6): movzx 0x38(%rsp),%r8d
34bc(5): mov 0x40(%rsp),%r11
34c1(6): jnz 0x57f(%rip)
34c7(5): cmp $0x0,0xf(%rsp)
34cc(6): movzx 0x28(%rsp),%r10d
34d2(6): jnz 0xf83(%rip)
34d8(8): nop 0x0(%rax,%rax,1)
34e0(4): movzx (%r9),%ebx
34e4(3): cmp $0x7e,%bl
34e7(6): jnbe 0x321(%rip)
34ed(7): lea 0x34d8(%rip),%rcx
34f4(3): movzx %bl,%edx
34f7(4): movsxd 0x0(%rcx,%rdx,4),%rax
34fb(3): add %rcx,%rax
34fe(2): jmp %rax
3500(3): xor %r10d,%r10d
3503(4): cmp $0x1,%r11
3507(3): setnz %al
350a(4): cmp $0xffffffff,%r11
350e(2): jnz 0xe(%rip)
3510(5): mov 0x10(%rsp),%rax
3515(4): cmp $0x0,0x1(%rax)
3519(3): setnz %al
351c(5): cmp $0x2,0x8(%rsp)
3521(3): setz %dl
3524(2): test %al,%al
3526(6): jz 0x252(%rip)
352c(3): xor %r12d,%r12d
352f(2): xor %eax,%eax
3531(7): nop 0x0(%rax)
3538(5): cmp $0x1,0xd(%rsp)
353d(6): jnz 0x115(%rip)
3543(2): test %dl,%dl
3545(6): jnz 0x10d(%rip)
354b(5): mov 0x20(%rsp),%rsi
3550(3): test %rsi,%rsi
3553(2): jz 0x16(%rip)
3555(2): mov %ebx,%edx
3557(3): shr $0x5,%dl
355a(3): movzx %dl,%edx
355d(3): mov 0x0(%rsi,%rdx,4),%edx
3560(3): bt %ebx,%edx
3563(6): jb 0x150(%rip)
3569(3): test %r10b,%r10b
356c(6): jnz 0x147(%rip)
3572(3): xor $0x1,%eax
3575(4): add $0x1,%rbp
3579(3): and %r8d,%eax
357c(2): test %al,%al
357e(2): jz 0x22(%rip)
3580(3): cmp %r15,%r13
3583(2): jbe 0x7(%rip)
3585(5): mov $0x27,0x0(%r14,%r15,1)
358a(4): lea 0x1(%r15),%rax
358e(3): cmp %rax,%r13
3591(2): jbe 0x8(%rip)
3593(6): mov $0x27,0x1(%r14,%r15,1)
3599(4): add $0x2,%r15
359d(3): xor %r8d,%r8d
35a0(3): cmp %r13,%r15
35a3(2): jnb 0x6(%rip)
35a5(4): mov %bl,0x0(%r14,%r15,1)
35a9(5): movzx 0xe(%rsp),%edi
35ae(4): add $0x1,%r15
35b2(5): mov $0x0,%eax
35b7(3): test %r12b,%r12b
35ba(3): cmove %eax,%edi
35bd(5): mov %dil,0xe(%rsp)
35c2(5): jmp 0xfffffe36(%rip)
35c7(9): nop 0x0(%rax,%rax,1)
35d0(3): xor %r10d,%r10d
35d3(4): mov 0x8(%rsp),%eax
35d7(3): cmp $0x2,%eax
35da(6): jz 0x5be(%rip)
35e0(3): cmp $0x5,%eax
35e3(6): jz 0x575(%rip)
35e9(3): cmp $0x2,%eax
35ec(5): mov $0x3f,%ebx
35f1(3): setz %dl
35f4(3): xor %r12d,%r12d
35f7(2): xor %eax,%eax
35f9(5): jmp 0xffffff3f(%rip)
35fe(2): nop 
3600(3): xor %r10d,%r10d
3603(5): cmp $0x2,0x8(%rsp)
3608(6): jz 0x508(%rip)
360e(5): mov %r12b,0x7c(%rsp)
3613(2): xor %edx,%edx
3615(2): xor %eax,%eax
3617(5): mov $0x27,%ebx
361c(5): jmp 0xffffff1c(%rip)
3621(7): nop 0x0(%rax)
3628(5): mov $0x9,%edx
362d(5): mov $0x74,%ebx
3632(5): cmp $0x2,0x8(%rsp)
3637(3): setz %al
363a(4): and 0xf(%rsp),%al
363e(6): jnz 0x150(%rip)
3644(5): cmp $0x0,0xd(%rsp)
3649(2): jnz 0x67(%rip)
364b(2): mov %edx,%ebx
364d(3): xor %r12d,%r12d
3650(2): xor %eax,%eax
3652(5): cmp $0x0,0xf(%rsp)
3657(6): jnz 0xfffffef4(%rip)
365d(5): jmp 0xffffff0c(%rip)
3662(6): nop 0x0(%rax,%rax,1)
3668(5): mov $0x8,%edx
366d(5): mov $0x62,%ebx
3672(2): jmp 0xffffffd2(%rip)
3674(4): nop 0x0(%rax)
3678(5): cmp $0x2,0x8(%rsp)
367d(6): jz 0x3d3(%rip)
3683(5): cmp $0x0,0xd(%rsp)
3688(6): jz 0x218(%rip)
368e(5): cmp $0x0,0xf(%rsp)
3693(6): jz 0x20d(%rip)
3699(6): cmp $0x0,0x18(%rsp)
369f(6): jnz 0x3bc(%rip)
36a5(5): mov $0x5c,%ebx
36aa(6): nop 0x0(%rax,%rax,1)
36b0(3): xor %r12d,%r12d
36b3(5): cmp $0x2,0x8(%rsp)
36b8(3): setz %dl
36bb(5): cmp $0x0,0xf(%rsp)
36c0(2): mov %edx,%eax
36c2(6): jnz 0x856(%rip)
36c8(3): mov %r8d,%eax
36cb(3): xor $0x1,%eax
36ce(2): and %dl,%al
36d0(2): jz 0x31(%rip)
36d2(3): cmp %r15,%r13
36d5(2): jbe 0x7(%rip)
36d7(5): mov $0x27,0x0(%r14,%r15,1)
36dc(4): lea 0x1(%r15),%rdx
36e0(3): cmp %rdx,%r13
36e3(2): jbe 0x8(%rip)
36e5(6): mov $0x24,0x1(%r14,%r15,1)
36eb(4): lea 0x2(%r15),%rdx
36ef(3): cmp %rdx,%r13
36f2(2): jbe 0x8(%rip)
36f4(6): mov $0x27,0x2(%r14,%r15,1)
36fa(4): add $0x3,%r15
36fe(3): mov %eax,%r8d
3701(3): cmp %r15,%r13
3704(2): jbe 0x7(%rip)
3706(5): mov $0x5c,0x0(%r14,%r15,1)
370b(4): add $0x1,%r15
370f(4): add $0x1,%rbp
3713(5): jmp 0xfffffe8d(%rip)
3718(8): nop 0x0(%rax,%rax,1)
3720(5): cmp $0x0,0xd(%rsp)
3725(6): jnz 0x1ce(%rip)
372b(2): xor %edx,%edx
372d(5): test $0x1,0x78(%rsp)
3732(6): jz 0xffffff19(%rip)
3738(4): add $0x1,%rbp
373c(5): jmp 0xfffffcbc(%rip)
3741(7): nop 0x0(%rax)
3748(5): cmp $0x2,0x8(%rsp)
374d(3): setz %dl
3750(2): xor %eax,%eax
3752(5): jmp 0xfffffde6(%rip)
3757(9): nop 0x0(%rax,%rax,1)
3760(5): mov $0x7,%edx
3765(5): mov $0x61,%ebx
376a(5): jmp 0xfffffeda(%rip)
376f(1): nop 
3770(5): cmp $0x2,0x8(%rsp)
3775(3): setz %dl
3778(3): test %rbp,%rbp
377b(6): jnz 0xfffffdb1(%rip)
3781(5): movzx 0xf(%rsp),%eax
3786(2): and %dl,%al
3788(6): jz 0xfffffdb0(%rip)
378e(3): mov %r11,%rbp
3791(8): mov $0x2,0x8(%rsp)
3799(5): jmp 0x700(%rip)
379e(2): nop 
37a0(5): cmp $0x2,0x8(%rsp)
37a5(3): setz %dl
37a8(3): xor %r12d,%r12d
37ab(2): jmp 0xffffffd6(%rip)
37ad(3): nop (%rax)
37b0(5): cmp $0x2,0x8(%rsp)
37b5(5): mov $0x20,%ebx
37ba(3): setz %dl
37bd(2): jmp 0xffffffc4(%rip)
37bf(1): nop 
37c0(5): mov $0xd,%edx
37c5(5): mov $0x72,%ebx
37ca(5): jmp 0xfffffe68(%rip)
37cf(1): nop 
37d0(5): mov $0xc,%edx
37d5(5): mov $0x66,%ebx
37da(5): jmp 0xfffffe6a(%rip)
37df(1): nop 
37e0(5): mov $0xb,%edx
37e5(5): mov $0x76,%ebx
37ea(5): jmp 0xfffffe5a(%rip)
37ef(1): nop 
37f0(5): mov $0xa,%edx
37f5(5): mov $0x6e,%ebx
37fa(5): jmp 0xfffffe38(%rip)
37ff(1): nop 
3800(3): xor %r10d,%r10d
3803(5): nop 0x0(%rax,%rax,1)
3808(6): cmp $0x1,0x58(%rsp)
380e(6): jnz 0x3aa(%rip)
3814(5): mov %r11,0x38(%rsp)
3819(5): mov %r8b,0x30(%rsp)
381e(5): mov %r10b,0x28(%rsp)
3823(5): call 0xffffe50d(%rip)
3828(3): mov (%rax),%rcx
382b(3): movzx %bl,%edx
382e(6): movzx 0x28(%rsp),%r10d
3834(6): movzx 0x30(%rsp),%r8d
383a(5): mov 0x38(%rsp),%r11
383f(5): mov $0x1,%edi
3844(4): movzx 0x0(%rcx,%rdx,2),%eax
3848(4): and $0x4000,%ax
384c(4): setnz %r12b
3850(3): setz %al
3853(4): and 0xd(%rsp),%al
3857(2): test %al,%al
3859(6): jnz 0x998(%rip)
385f(5): cmp $0x2,0x8(%rsp)
3864(3): setz %dl
3867(5): jmp 0xfffffcd1(%rip)
386c(4): nop 0x0(%rax)
3870(4): movzx (%r9),%ebx
3874(3): cmp $0x7e,%bl
3877(2): jnbe 0xffffff89(%rip)
3879(7): lea 0x3348(%rip),%rcx
3880(3): movzx %bl,%edx
3883(4): movsxd 0x0(%rcx,%rdx,4),%rax
3887(3): add %rcx,%rax
388a(2): jmp %rax
388c(4): nop 0x0(%rax)
3890(3): xor %r10d,%r10d
3893(5): cmp $0x0,0xd(%rsp)
3898(6): jnz 0xfffffdf6(%rip)
389e(2): nop 
38a0(5): mov $0x5c,%edx
38a5(5): mov $0x5c,%ebx
38aa(5): jmp 0xfffffd9a(%rip)
38af(1): nop 
38b0(5): mov $0xc,%edx
38b5(3): xor %r10d,%r10d
38b8(5): mov $0x66,%ebx
38bd(5): jmp 0xfffffd87(%rip)
38c2(6): nop 0x0(%rax,%rax,1)
38c8(5): mov $0xa,%edx
38cd(3): xor %r10d,%r10d
38d0(5): mov $0x6e,%ebx
38d5(5): jmp 0xfffffd5d(%rip)
38da(6): nop 0x0(%rax,%rax,1)
38e0(5): mov $0x61,%ebx
38e5(5): jmp 0xfffffdcb(%rip)
38ea(6): nop 0x0(%rax,%rax,1)
38f0(3): xor %r10d,%r10d
38f3(5): cmp $0x2,0x8(%rsp)
38f8(3): setz %dl
38fb(5): cmp $0x0,0xf(%rsp)
3900(6): jnz 0xb9a(%rip)
3906(3): mov %r8d,%eax
3909(3): mov %r15,%rcx
390c(3): xor $0x1,%eax
390f(2): and %dl,%al
3911(2): jz 0x2f(%rip)
3913(3): cmp %r15,%r13
3916(2): jbe 0x7(%rip)
3918(5): mov $0x27,0x0(%r14,%r15,1)
391d(4): lea 0x1(%r15),%rcx
3921(3): cmp %rcx,%r13
3924(2): jbe 0x8(%rip)
3926(6): mov $0x24,0x1(%r14,%r15,1)
392c(4): lea 0x2(%r15),%rcx
3930(3): cmp %rcx,%r13
3933(6): jnbe 0x636(%rip)
3939(4): lea 0x3(%r15),%rcx
393d(3): mov %eax,%r8d
3940(3): cmp %rcx,%r13
3943(2): jbe 0x7(%rip)
3945(5): mov $0x5c,0x0(%r14,%rcx,1)
394a(5): cmp $0x2,0x8(%rsp)
394f(4): lea 0x1(%rcx),%r15
3953(6): jz 0x606(%rip)
3959(4): lea 0x1(%rbp),%rax
395d(3): cmp %r11,%rax
3960(2): jnb 0x1b(%rip)
3962(5): mov 0x10(%rsp),%rax
3967(5): movzx 0x1(%rax,%rbp,1),%eax
396c(4): mov %al,0x28(%rsp)
3970(3): sub $0x30,%eax
3973(2): cmp $0x9,%al
3975(6): jbe 0x834(%rip)
397b(3): mov %r12d,%eax
397e(5): mov $0x30,%ebx
3983(3): xor %r12d,%r12d
3986(5): jmp 0xfffffbb2(%rip)
398b(5): nop 0x0(%rax,%rax,1)
3990(5): cmp $0x2,0x8(%rsp)
3995(3): mov %r10d,%r12d
3998(3): setz %dl
399b(3): xor %r10d,%r10d
399e(2): xor %eax,%eax
39a0(5): jmp 0xfffffb98(%rip)
39a5(3): nop (%rax)
39a8(5): cmp $0x2,0x8(%rsp)
39ad(3): setz %dl
39b0(3): xor %r10d,%r10d
39b3(5): jmp 0xfffffdc5(%rip)
39b8(8): nop 0x0(%rax,%rax,1)
39c0(5): cmp $0x2,0x8(%rsp)
39c5(3): setz %dl
39c8(3): xor %r10d,%r10d
39cb(3): xor %r12d,%r12d
39ce(5): jmp 0xfffffdb3(%rip)
39d3(5): nop 0x0(%rax,%rax,1)
39d8(5): cmp $0x2,0x8(%rsp)
39dd(3): mov %r10d,%r12d
39e0(5): mov $0x20,%ebx
39e5(3): setz %dl
39e8(3): xor %r10d,%r10d
39eb(5): jmp 0xfffffd96(%rip)
39f0(5): mov $0xd,%edx
39f5(3): xor %r10d,%r10d
39f8(5): mov $0x72,%ebx
39fd(5): jmp 0xfffffc35(%rip)
3a02(6): nop 0x0(%rax,%rax,1)
3a08(5): mov $0x76,%ebx
3a0d(5): jmp 0xfffffca3(%rip)
3a12(6): nop 0x0(%rax,%rax,1)
3a18(5): mov $0x9,%edx
3a1d(3): xor %r10d,%r10d
3a20(5): mov $0x74,%ebx
3a25(5): jmp 0xfffffc0d(%rip)
3a2a(6): nop 0x0(%rax,%rax,1)
3a30(5): mov $0x62,%ebx
3a35(5): jmp 0xfffffc7b(%rip)
3a3a(6): nop 0x0(%rax,%rax,1)
3a40(3): xor %r10d,%r10d
3a43(5): jmp 0xfffffa9d(%rip)
3a48(8): nop 0x0(%rax,%rax,1)
3a50(5): cmp $0x0,0xf(%rsp)
3a55(6): jnz 0x96b(%rip)
3a5b(4): add $0x1,%rbp
3a5f(3): mov %r8d,%eax
3a62(3): xor %r12d,%r12d
3a65(5): mov $0x5c,%ebx
3a6a(5): jmp 0xfffffb12(%rip)
3a6f(1): nop 
3a70(5): cmp $0x2,0x8(%rsp)
3a75(5): movzx 0xf(%rsp),%ebx
3a7a(3): mov %r8d,%r12d
3a7d(3): mov %r11,%rbp
3a80(3): setz %dl
3a83(2): mov %ebx,%eax
3a85(3): test %r15,%r15
3a88(3): setz %cl
3a8b(2): and %edx,%eax
3a8d(2): and %cl,%al
3a8f(6): jnz 0xa67(%rip)
3a95(2): mov %ebx,%eax
3a97(3): xor $0x1,%eax
3a9a(2): and %al,%dl
3a9c(6): jz 0x970(%rip)
3aa2(5): cmp $0x0,0x7c(%rsp)
3aa7(6): jz 0x963(%rip)
3aad(5): cmp $0x0,0xe(%rsp)
3ab2(6): jnz 0x9fb(%rip)
3ab8(3): test %r13,%r13
3abb(3): setz %al
3abe(6): cmp $0x0,0x50(%rsp)
3ac4(3): setnz %dl
3ac7(2): and %dl,%al
3ac9(6): jz 0xa23(%rip)
3acf(5): mov 0x50(%rsp),%r13
3ad4(7): lea 0x2e72(%rip),%rbx
3adb(4): mov $0x27,(%r14)
3adf(8): mov $0x2,0x8(%rsp)
3ae7(6): mov $0x1,%r15d
3aed(9): mov $0x1,0x18(%rsp)
3af6(5): mov $0x0,0xf(%rsp)
3afb(5): mov %rbx,0x48(%rsp)
3b00(4): mov %al,0x7c(%rsp)
3b04(5): jmp 0xfffff8df(%rip)
3b09(7): nop 0x0(%rax)
3b10(5): cmp $0x0,0xf(%rsp)
3b15(6): jnz 0x8ab(%rip)
3b1b(3): test %r13,%r13
3b1e(6): jz 0x402(%rip)
3b24(2): xor %edx,%edx
3b26(6): cmp $0x0,0x50(%rsp)
3b2c(6): jnz 0x3f4(%rip)
3b32(5): mov %r13,0x50(%rsp)
3b37(4): add $0x3,%r15
3b3b(2): xor %eax,%eax
3b3d(5): mov %r12b,0x7c(%rsp)
3b42(3): xor %r8d,%r8d
3b45(3): mov %rdx,%r13
3b48(5): mov $0x27,%ebx
3b4d(5): jmp 0xfffffa1c(%rip)
3b52(6): nop 0x0(%rax,%rax,1)
3b58(5): test $0x4,0x78(%rsp)
3b5d(2): jz 0x23(%rip)
3b5f(4): lea 0x2(%rbp),%rcx
3b63(3): cmp %r11,%rcx
3b66(2): jnb 0x1a(%rip)
3b68(5): mov 0x10(%rsp),%rax
3b6d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3b72(6): jz 0x790(%rip)
3b78(8): nop 0x0(%rax,%rax,1)
3b80(2): xor %edx,%edx
3b82(3): xor %r12d,%r12d
3b85(2): xor %eax,%eax
3b87(5): mov $0x3f,%ebx
3b8c(5): jmp 0xfffff9ac(%rip)
3b91(7): nop 0x0(%rax)
3b98(5): cmp $0x0,0xf(%rsp)
3b9d(6): jnz 0x823(%rip)
3ba3(3): xor %r12d,%r12d
3ba6(2): xor %eax,%eax
3ba8(5): mov $0x3f,%ebx
3bad(5): jmp 0xfffff9bc(%rip)
3bb2(6): nop 0x0(%rax,%rax,1)
3bb8(8): lea 0xa0(%rsp),%rax
3bc0(4): cmp $0xffffffff,%r11
3bc4(c): mov $0x0,0xa0(%rsp)
3bd0(5): mov %rax,0x28(%rsp)
3bd5(2): jnz 0x2f(%rip)
3bd7(5): mov 0x10(%rsp),%rdi
3bdc(5): mov %r8b,0x40(%rsp)
3be1(5): mov %r10b,0x38(%rsp)
3be6(5): mov %r9,0x30(%rsp)
3beb(5): call 0xffffde55(%rip)
3bf0(6): movzx 0x40(%rsp),%r8d
3bf6(6): movzx 0x38(%rsp),%r10d
3bfc(3): mov %rax,%r11
3bff(5): mov 0x30(%rsp),%r9
3c04(8): lea 0x9c(%rsp),%rax
3c0c(2): xor %ecx,%ecx
3c0e(4): mov %bl,0x7e(%rsp)
3c12(5): mov %r8b,0x7d(%rsp)
3c17(3): mov %rcx,%rbx
3c1a(8): mov %r9,0x88(%rsp)
3c22(5): mov %rax,0x38(%rsp)
3c27(5): mov %r10b,0x7f(%rsp)
3c2c(8): mov %r15,0x80(%rsp)
3c34(5): mov %r14,0x40(%rsp)
3c39(5): mov %r13,0x70(%rsp)
3c3e(5): mov %r11,0x30(%rsp)
3c43(5): mov 0x10(%rsp),%rax
3c48(5): lea 0x0(%rbp,%rbx,1),%r14
3c4d(5): mov 0x30(%rsp),%rdx
3c52(5): mov 0x28(%rsp),%rcx
3c57(5): mov 0x38(%rsp),%rdi
3c5c(4): lea 0x0(%rax,%r14,1),%r13
3c60(3): sub %r14,%rdx
3c63(3): mov %r13,%rsi
3c66(5): call 0x1bca(%rip)
3c6b(3): test %rax,%rax
3c6e(3): mov %rax,%r15
3c71(2): jz 0x50(%rip)
3c73(4): cmp $0xffffffff,%rax
3c77(6): jz 0x61e(%rip)
3c7d(4): cmp $0xfffffffe,%rax
3c81(6): jz 0x5a0(%rip)
3c87(5): cmp $0x2,0x8(%rsp)
3c8c(3): setz %al
3c8f(4): and 0xf(%rsp),%al
3c93(6): jnz 0x19d(%rip)
3c99(7): mov 0x9c(%rsp),%edi
3ca0(5): call 0xffffe060(%rip)
3ca5(5): mov 0x28(%rsp),%rdi
3caa(2): test %eax,%eax
3cac(5): mov $0x0,%eax
3cb1(4): cmove %eax,%r12d
3cb5(3): add %r15,%rbx
3cb8(5): call 0xffffe038(%rip)
3cbd(2): test %eax,%eax
3cbf(2): jz 0xffffff84(%rip)
3cc1(3): mov %r12d,%edx
3cc4(3): mov %rbx,%rdi
3cc7(6): movzx 0x7d(%rsp),%r8d
3ccd(3): xor $0x1,%edx
3cd0(5): movzx 0x7e(%rsp),%ebx
3cd5(6): movzx 0x7f(%rsp),%r10d
3cdb(4): and 0xd(%rsp),%dl
3cdf(8): mov 0x80(%rsp),%r15
3ce7(5): mov 0x40(%rsp),%r14
3cec(5): mov 0x70(%rsp),%r13
3cf1(5): mov 0x30(%rsp),%r11
3cf6(4): cmp $0x1,%rdi
3cfa(6): jbe 0x601(%rip)
3d00(3): mov %rdi,%rcx
3d03(2): xor %esi,%esi
3d05(6): movzx 0xf(%rsp),%r9d
3d0b(3): add %rbp,%rcx
3d0e(5): mov 0x10(%rsp),%rdi
3d13(5): jmp 0xbb(%rip)
3d18(8): nop 0x0(%rax,%rax,1)
3d20(5): cmp $0x2,0x8(%rsp)
3d25(3): setz %al
3d28(3): test %r9b,%r9b
3d2b(6): jnz 0x4b5(%rip)
3d31(3): mov %r8d,%esi
3d34(3): xor $0x1,%esi
3d37(3): and %sil,%al
3d3a(2): jz 0x31(%rip)
3d3c(3): cmp %r15,%r13
3d3f(2): jbe 0x7(%rip)
3d41(5): mov $0x27,0x0(%r14,%r15,1)
3d46(4): lea 0x1(%r15),%rsi
3d4a(3): cmp %rsi,%r13
3d4d(2): jbe 0x8(%rip)
3d4f(6): mov $0x24,0x1(%r14,%r15,1)
3d55(4): lea 0x2(%r15),%rsi
3d59(3): cmp %rsi,%r13
3d5c(2): jbe 0x8(%rip)
3d5e(6): mov $0x27,0x2(%r14,%r15,1)
3d64(4): add $0x3,%r15
3d68(3): mov %eax,%r8d
3d6b(3): cmp %r15,%r13
3d6e(2): jbe 0x7(%rip)
3d70(5): mov $0x5c,0x0(%r14,%r15,1)
3d75(4): lea 0x1(%r15),%rax
3d79(3): cmp %rax,%r13
3d7c(2): jbe 0xf(%rip)
3d7e(2): mov %ebx,%eax
3d80(3): shr $0x6,%al
3d83(3): add $0x30,%eax
3d86(5): mov %al,0x1(%r14,%r15,1)
3d8b(4): lea 0x2(%r15),%rax
3d8f(3): cmp %rax,%r13
3d92(2): jbe 0x12(%rip)
3d94(2): mov %ebx,%eax
3d96(3): shr $0x3,%al
3d99(3): and $0x7,%eax
3d9c(3): add $0x30,%eax
3d9f(5): mov %al,0x2(%r14,%r15,1)
3da4(3): and $0x7,%ebx
3da7(4): add $0x1,%rbp
3dab(4): add $0x3,%r15
3daf(3): add $0x30,%ebx
3db2(3): cmp %rcx,%rbp
3db5(6): jnb 0xfffff7eb(%rip)
3dbb(2): mov %edx,%esi
3dbd(3): cmp %r15,%r13
3dc0(2): jbe 0x6(%rip)
3dc2(4): mov %bl,0x0(%r14,%r15,1)
3dc6(4): movzx 0x0(%rdi,%rbp,1),%ebx
3dca(4): add $0x1,%r15
3dce(2): test %dl,%dl
3dd0(6): jnz 0xffffff50(%rip)
3dd6(2): mov %esi,%eax
3dd8(3): xor $0x1,%eax
3ddb(3): and %r8d,%eax
3dde(3): test %r10b,%r10b
3de1(2): jz 0x10(%rip)
3de3(3): cmp %r15,%r13
3de6(2): jbe 0x7(%rip)
3de8(5): mov $0x5c,0x0(%r14,%r15,1)
3ded(4): add $0x1,%r15
3df1(4): add $0x1,%rbp
3df5(3): cmp %rcx,%rbp
3df8(6): jnb 0xfffff784(%rip)
3dfe(2): test %al,%al
3e00(6): jz 0x3fe(%rip)
3e06(3): cmp %r15,%r13
3e09(2): jbe 0x7(%rip)
3e0b(5): mov $0x27,0x0(%r14,%r15,1)
3e10(4): lea 0x1(%r15),%rax
3e14(3): cmp %rax,%r13
3e17(2): jbe 0x8(%rip)
3e19(6): mov $0x27,0x1(%r14,%r15,1)
3e1f(4): add $0x2,%r15
3e23(3): xor %r10d,%r10d
3e26(3): xor %r8d,%r8d
3e29(2): jmp 0xffffff94(%rip)
3e2b(5): nop 0x0(%rax,%rax,1)
3e30(4): cmp $0x1,%r15
3e34(6): jz 0xfffffe65(%rip)
3e3a(5): mov 0x10(%rsp),%rdi
3e3f(4): lea 0x0(%rdi,%r15,1),%rcx
3e43(5): lea 0x1(%rdi,%r14,1),%rdx
3e48(4): lea 0x0(%rcx,%r14,1),%r8
3e4c(2): jmp 0x11(%rip)
3e4e(2): nop 
3e50(4): add $0x1,%rdx
3e54(3): cmp %rdx,%r8
3e57(6): jz 0xfffffe42(%rip)
3e5d(3): movzx (%rdx),%ecx
3e60(3): sub $0x5b,%ecx
3e63(3): cmp $0x21,%cl
3e66(2): jnbe 0xffffffea(%rip)
3e68(5): mov $0x1,%esi
3e6d(3): shl/sal %cl,%rsi
3e70(3): mov %rsi,%rcx
3e73(a): mov $0x8589934635,%rsi
3e7d(3): test %rsi,%rcx
3e80(2): jz 0xffffffd0(%rip)
3e82(5): mov 0x40(%rsp),%r14
3e87(5): mov 0x70(%rsp),%r13
3e8c(5): mov 0x30(%rsp),%rbp
3e91(8): mov $0x2,0x8(%rsp)
3e99(5): cmp $0x0,0xd(%rsp)
3e9e(2): jz 0x12(%rip)
3ea0(2): test %al,%al
3ea2(5): mov $0x4,%eax
3ea7(5): cmove 0x8(%rsp),%eax
3eac(4): mov %eax,0x8(%rsp)
3eb0(4): sub $0x8,%rsp
3eb4(3): mov %rbp,%rcx
3eb7(3): mov %r13,%rsi
3eba(4): push 0x68(%rsp)
3ebe(4): push 0x78(%rsp)
3ec2(3): mov %r14,%rdi
3ec5(2): push $0x0
3ec7(8): mov 0x98(%rsp),%r9d
3ecf(5): mov 0x28(%rsp),%r8d
3ed4(5): mov 0x30(%rsp),%rdx
3ed9(4): and $0xfd,%r9d
3edd(5): call 0xfffff433(%rip)
3ee2(4): add $0x20,%rsp
3ee6(3): mov %rax,%r15
3ee9(8): mov 0xa8(%rsp),%rbx
3ef1(9): xor $0x28,%rbx
3efa(3): mov %r15,%rax
3efd(6): jnz 0x606(%rip)
3f03(7): add $0xb8,%rsp
3f0a(1): pop %rbx
3f0b(1): pop %rbp
3f0c(2): pop %r12
3f0e(2): pop %r13
3f10(2): pop %r14
3f12(2): pop %r15
3f14(1): ret near (%rsp)
3f15(3): nop (%rax)
3f18(3): mov %r11,%rbp
3f1b(5): jmp 0xffffff7e(%rip)
3f20(3): cmp %r15,%r13
3f23(2): jbe 0x7(%rip)
3f25(5): mov $0x27,0x0(%r14,%r15,1)
3f2a(4): lea 0x1(%r15),%rax
3f2e(3): cmp %rax,%r13
3f31(2): jbe 0x8(%rip)
3f33(6): mov $0x5c,0x1(%r14,%r15,1)
3f39(4): lea 0x2(%r15),%rax
3f3d(3): cmp %rax,%r13
3f40(6): jbe 0x5f2(%rip)
3f46(3): mov %r13,%rdx
3f49(6): mov $0x27,0x2(%r14,%r15,1)
3f4f(5): mov 0x50(%rsp),%r13
3f54(5): jmp 0xfffffbde(%rip)
3f59(3): mov %r12d,%eax
3f5c(5): mov $0x30,%ebx
3f61(3): xor %r12d,%r12d
3f64(5): jmp 0xfffff605(%rip)
3f69(6): mov $0x27,0x2(%r14,%r15,1)
3f6f(5): jmp 0xfffff9ca(%rip)
3f74(2): test %ebx,%ebx
3f76(6): jnz 0xfffff42d(%rip)
3f7c(5): mov $0x1,0xd(%rsp)
3f81(3): test %r13,%r13
3f84(6): jnz 0x596(%rip)
3f8a(7): lea 0x29bc(%rip),%rax
3f91(9): mov $0x0,0x50(%rsp)
3f9a(5): mov $0x1,0xe(%rsp)
3f9f(5): mov $0x0,0x7c(%rsp)
3fa4(3): xor %r12d,%r12d
3fa7(5): mov $0x0,0xf(%rsp)
3fac(9): mov $0x1,0x18(%rsp)
3fb5(5): mov %rax,0x48(%rsp)
3fba(6): mov $0x1,%r15d
3fc0(8): mov $0x2,0x8(%rsp)
3fc8(5): jmp 0xfffff41b(%rip)
3fcd(3): nop (%rax)
3fd0(2): test %ebx,%ebx
3fd2(6): jnz 0x3fb(%rip)
3fd8(3): test %r13,%r13
3fdb(6): jz 0x22b(%rip)
3fe1(4): mov $0x22,(%r14)
3fe5(5): mov $0x1,0xe(%rsp)
3fea(3): xor %r12d,%r12d
3fed(5): mov $0x0,0x7c(%rsp)
3ff2(9): mov $0x0,0x50(%rsp)
3ffb(7): lea 0x2949(%rip),%rax
4002(5): mov $0x0,0xf(%rsp)
4007(5): mov $0x1,0xd(%rsp)
400c(9): mov $0x1,0x18(%rsp)
4015(6): mov $0x1,%r15d
401b(5): mov %rax,0x48(%rsp)
4020(5): jmp 0xfffff3c3(%rip)
4025(7): lea 0x291f(%rip),%rax
402c(5): mov $0x1,0xe(%rsp)
4031(5): mov $0x0,0x7c(%rsp)
4036(3): xor %r12d,%r12d
4039(9): mov $0x0,0x50(%rsp)
4042(5): mov $0x1,0xf(%rsp)
4047(5): mov $0x1,0xd(%rsp)
404c(9): mov $0x1,0x18(%rsp)
4055(3): xor %r15d,%r15d
4058(5): mov %rax,0x48(%rsp)
405d(8): mov $0x5,0x8(%rsp)
4065(5): jmp 0xfffff37e(%rip)
406a(5): mov $0x1,0xe(%rsp)
406f(5): mov $0x0,0x7c(%rsp)
4074(3): xor %r12d,%r12d
4077(9): mov $0x0,0x50(%rsp)
4080(5): mov $0x0,0xf(%rsp)
4085(3): xor %r15d,%r15d
4088(5): mov $0x1,0xd(%rsp)
408d(9): mov $0x0,0x18(%rsp)
4096(9): mov $0x0,0x48(%rsp)
409f(5): jmp 0xfffff344(%rip)
40a4(5): cmp $0xa,0x8(%rsp)
40a9(2): jz 0x58(%rip)
40ab(7): lea 0x289d(%rip),%rsi
40b2(2): xor %edi,%edi
40b4(5): mov $0x5,%edx
40b9(5): call 0xffffd967(%rip)
40be(3): mov %rax,%rcx
40c1(5): mov %rax,0x68(%rsp)
40c6(7): lea 0x2882(%rip),%rax
40cd(3): cmp %rax,%rcx
40d0(6): jz 0x39e(%rip)
40d6(7): lea 0x2870(%rip),%rsi
40dd(2): xor %edi,%edi
40df(5): mov $0x5,%edx
40e4(5): call 0xffffd93c(%rip)
40e9(3): mov %rax,%rcx
40ec(5): mov %rax,0x60(%rsp)
40f1(7): lea 0x2855(%rip),%rax
40f8(3): cmp %rax,%rcx
40fb(6): jz 0x389(%rip)
4101(3): xor %r15d,%r15d
4104(2): test %ebx,%ebx
4106(6): jz 0x1c7(%rip)
410c(2): test %ebx,%ebx
410e(5): mov 0x60(%rsp),%rbx
4113(5): setnz 0xf(%rsp)
4118(3): xor %r12d,%r12d
411b(3): mov %rbx,%rdi
411e(5): call 0xffffd922(%rip)
4123(5): mov %rbx,0x48(%rsp)
4128(5): mov %rax,0x18(%rsp)
412d(5): mov $0x1,0xe(%rsp)
4132(5): mov $0x0,0x7c(%rsp)
4137(9): mov $0x0,0x50(%rsp)
4140(5): mov $0x1,0xd(%rsp)
4145(5): jmp 0xfffff29e(%rip)
414a(5): mov $0x1,0xe(%rsp)
414f(5): mov $0x0,0x7c(%rsp)
4154(3): xor %r12d,%r12d
4157(9): mov $0x0,0x50(%rsp)
4160(5): mov $0x0,0xf(%rsp)
4165(3): xor %r15d,%r15d
4168(5): mov $0x0,0xd(%rsp)
416d(9): mov $0x0,0x18(%rsp)
4176(9): mov $0x0,0x48(%rsp)
417f(5): jmp 0xfffff264(%rip)
4184(5): mov $0x1,0xe(%rsp)
4189(5): mov $0x0,0x7c(%rsp)
418e(3): xor %r12d,%r12d
4191(9): mov $0x0,0x50(%rsp)
419a(5): mov $0x1,0xf(%rsp)
419f(5): mov $0x1,0xd(%rsp)
41a4(5): jmp 0xfffff21f(%rip)
41a9(3): cmp %r15,%r13
41ac(2): jbe 0x7(%rip)
41ae(5): mov $0x30,0x0(%r14,%r15,1)
41b3(4): lea 0x2(%rcx),%rax
41b7(3): cmp %rax,%r13
41ba(2): jbe 0x8(%rip)
41bc(6): mov $0x30,0x2(%r14,%rcx,1)
41c2(3): mov %r12d,%eax
41c5(4): lea 0x3(%rcx),%r15
41c9(3): xor %r12d,%r12d
41cc(5): mov $0x30,%ebx
41d1(5): jmp 0xfffff367(%rip)
41d6(a): nop 0x0(%rax,%rax,1)
41e0(5): movzx 0xf(%rsp),%ebx
41e5(3): mov %r11,%rbp
41e8(4): mov %bl,0xd(%rsp)
41ec(5): jmp 0xfffffcad(%rip)
41f1(5): movzx 0xd(%rsp),%edx
41f6(3): xor %r12d,%r12d
41f9(5): jmp 0xfffffb07(%rip)
41fe(3): xor %r10d,%r10d
4201(5): jmp 0xfffffbbc(%rip)
4206(9): mov $0x0,0x50(%rsp)
420f(5): mov $0x1,0xe(%rsp)
4214(3): xor %r12d,%r12d
4217(5): mov $0x0,0x7c(%rsp)
421c(5): jmp 0xfffffddf(%rip)
4221(5): mov 0x30(%rsp),%r11
4226(3): mov %r14,%rsi
4229(3): mov %r13,%rcx
422c(3): mov %rbx,%rax
422f(3): mov %rbx,%rdi
4232(6): movzx 0x7d(%rsp),%r8d
4238(5): movzx 0x7e(%rsp),%ebx
423d(8): mov 0x88(%rsp),%r9
4245(3): cmp %r11,%rsi
4248(6): movzx 0x7f(%rsp),%r10d
424e(8): mov 0x80(%rsp),%r15
4256(5): mov 0x40(%rsp),%r14
425b(5): mov 0x70(%rsp),%r13
4260(2): jnb 0x28(%rip)
4262(3): cmp $0x0,(%rcx)
4265(2): jnz 0x12(%rip)
4267(2): jmp 0x21(%rip)
4269(7): nop 0x0(%rax)
4270(5): cmp $0x0,0x0(%r9,%rax,1)
4275(2): jz 0x10(%rip)
4277(4): add $0x1,%rax
427b(5): lea 0x0(%rbp,%rax,1),%rdx
4280(3): cmp %rdx,%r11
4283(2): jnbe 0xffffffed(%rip)
4285(3): mov %rax,%rdi
4288(5): movzx 0xd(%rsp),%edx
428d(3): xor %r12d,%r12d
4290(5): jmp 0xfffffa66(%rip)
4295(3): mov %rbx,%rdi
4298(6): movzx 0x7d(%rsp),%r8d
429e(5): movzx 0x7e(%rsp),%ebx
42a3(6): movzx 0x7f(%rsp),%r10d
42a9(8): mov 0x80(%rsp),%r15
42b1(3): xor %r12d,%r12d
42b4(5): mov 0x40(%rsp),%r14
42b9(5): mov 0x70(%rsp),%r13
42be(5): mov 0x30(%rsp),%r11
42c3(5): movzx 0xd(%rsp),%edx
42c8(5): jmp 0xfffffa2e(%rip)
42cd(5): mov 0x68(%rsp),%rdx
42d2(3): movzx (%rdx),%eax
42d5(2): test %al,%al
42d7(6): jz 0xfffffe35(%rip)
42dd(3): nop (%rax)
42e0(3): cmp %r15,%r13
42e3(2): jbe 0x6(%rip)
42e5(4): mov %al,0x0(%r14,%r15,1)
42e9(4): add $0x1,%r15
42ed(5): movzx 0x0(%rdx,%r15,1),%eax
42f2(2): test %al,%al
42f4(2): jnz 0xffffffec(%rip)
42f6(5): jmp 0xfffffe16(%rip)
42fb(2): mov %edx,%eax
42fd(5): jmp 0xfffff55a(%rip)
4302(4): movzx 0x0(%rax,%rcx,1),%ebx
4306(3): cmp $0x3e,%bl
4309(6): jnbe 0xfffff877(%rip)
430f(a): mov $0x8070630310989004800,%rax
4319(4): bt %rbx,%rax
431d(6): jnb 0xfffff863(%rip)
4323(5): cmp $0x0,0xf(%rsp)
4328(6): jnz 0x1ea(%rip)
432e(3): cmp %r15,%r13
4331(2): jbe 0x7(%rip)
4333(5): mov $0x3f,0x0(%r14,%r15,1)
4338(4): lea 0x1(%r15),%rax
433c(3): cmp %rax,%r13
433f(2): jbe 0x8(%rip)
4341(6): mov $0x22,0x1(%r14,%r15,1)
4347(4): lea 0x2(%r15),%rax
434b(3): cmp %rax,%r13
434e(2): jbe 0x8(%rip)
4350(6): mov $0x22,0x2(%r14,%r15,1)
4356(4): lea 0x3(%r15),%rax
435a(3): cmp %rax,%r13
435d(2): jbe 0x8(%rip)
435f(6): mov $0x3f,0x3(%r14,%r15,1)
4365(4): add $0x4,%r15
4369(2): xor %edx,%edx
436b(3): xor %r12d,%r12d
436e(2): xor %eax,%eax
4370(3): mov %rcx,%rbp
4373(5): jmp 0xfffff1c5(%rip)
4378(2): test %ebx,%ebx
437a(6): jz 0x18e(%rip)
4380(7): lea 0x25c6(%rip),%rax
4387(5): mov $0x1,0xe(%rsp)
438c(5): mov $0x0,0x7c(%rsp)
4391(3): xor %r12d,%r12d
4394(9): mov $0x0,0x50(%rsp)
439d(5): mov $0x1,0xf(%rsp)
43a2(5): mov $0x0,0xd(%rsp)
43a7(9): mov $0x1,0x18(%rsp)
43b0(3): xor %r15d,%r15d
43b3(5): mov %rax,0x48(%rsp)
43b8(5): jmp 0xfffff02b(%rip)
43bd(3): nop (%rax)
43c0(3): mov %r11,%rbp
43c3(5): movzx 0xf(%rsp),%eax
43c8(5): jmp 0xfffffad1(%rip)
43cd(7): lea 0x2577(%rip),%rax
43d4(5): mov $0x1,0xe(%rsp)
43d9(5): mov $0x0,0x7c(%rsp)
43de(3): xor %r12d,%r12d
43e1(9): mov $0x0,0x50(%rsp)
43ea(5): mov $0x1,0xf(%rsp)
43ef(5): mov $0x1,0xd(%rsp)
43f4(9): mov $0x1,0x18(%rsp)
43fd(3): xor %r15d,%r15d
4400(5): mov %rax,0x48(%rsp)
4405(5): jmp 0xffffefde(%rip)
440a(2): mov %edx,%eax
440c(5): mov 0x48(%rsp),%rbx
4411(3): test %rbx,%rbx
4414(2): jz 0x2e(%rip)
4416(2): test %al,%al
4418(2): jz 0x2a(%rip)
441a(3): movzx (%rbx),%ecx
441d(3): mov %rbx,%rax
4420(2): test %cl,%cl
4422(2): jz 0x20(%rip)
4424(3): mov %r15,%rdx
4427(3): sub %r15,%rax
442a(3): cmp %rdx,%r13
442d(2): jbe 0x6(%rip)
442f(4): mov %cl,0x0(%r14,%rdx,1)
4433(4): add $0x1,%rdx
4437(4): movzx 0x0(%rax,%rdx,1),%ecx
443b(2): test %cl,%cl
443d(2): jnz 0xffffffed(%rip)
443f(3): mov %rdx,%r15
4442(3): cmp %r15,%r13
4445(6): jbe 0xfffffaa4(%rip)
444b(5): mov $0x0,0x0(%r14,%r15,1)
4450(5): jmp 0xfffffa99(%rip)
4455(5): cmp $0x2,0x8(%rsp)
445a(5): movzx 0xf(%rsp),%ebx
445f(3): mov %r11,%rbp
4462(3): setz %al
4465(4): mov %bl,0xd(%rsp)
4469(5): jmp 0xfffffa30(%rip)
446e(4): mov 0x8(%rsp),%esi
4472(3): mov %rcx,%rdi
4475(5): call 0xffffedab(%rip)
447a(5): mov %rax,0x68(%rsp)
447f(5): jmp 0xfffffc57(%rip)
4484(4): mov 0x8(%rsp),%esi
4488(3): mov %rcx,%rdi
448b(5): call 0xffffed95(%rip)
4490(5): mov %rax,0x60(%rsp)
4495(5): jmp 0xfffffc6c(%rip)
449a(5): movzx 0xf(%rsp),%ebx
449f(3): mov %r11,%rbp
44a2(2): mov %edx,%eax
44a4(4): mov %bl,0xd(%rsp)
44a8(5): jmp 0xfffff9f1(%rip)
44ad(4): sub $0x8,%rsp
44b1(6): mov $0x5,%r8d
44b7(3): mov %r11,%rcx
44ba(4): push 0x68(%rsp)
44be(4): push 0x78(%rsp)
44c2(3): mov %r14,%rdi
44c5(4): push 0x38(%rsp)
44c9(8): mov 0x98(%rsp),%r9d
44d1(5): mov 0x30(%rsp),%rdx
44d6(5): mov 0x70(%rsp),%rsi
44db(5): call 0xffffee35(%rip)
44e0(4): add $0x20,%rsp
44e4(3): mov %rax,%r15
44e7(5): jmp 0xfffffa02(%rip)
44ec(5): movzx 0x7c(%rsp),%eax
44f1(5): jmp 0xffffff1b(%rip)
44f6(8): mov $0x2,0x8(%rsp)
44fe(5): jmp 0xfffff99b(%rip)
4503(5): call 0xffffd54d(%rip)
4508(5): mov $0x0,0xd(%rsp)
450d(5): jmp 0xfffffa74(%rip)
4512(3): mov %r11,%rbp
4515(5): jmp 0xfffff99b(%rip)
451a(5): mov $0x1,0xe(%rsp)
451f(2): xor %eax,%eax
4521(3): xor %r12d,%r12d
4524(9): mov $0x0,0x50(%rsp)
452d(5): jmp 0xfffff5a7(%rip)
4532(3): mov %r13,%rdx
4535(5): mov 0x50(%rsp),%r13
453a(5): jmp 0xfffff5f8(%rip)
453f(5): call 0xffffd421(%rip)

"quotearg_n_options" :
4550(2): push %r15
4552(2): push %r14
4554(3): movsxd %edi,%r15
4557(2): push %r13
4559(2): push %r12
455b(3): mov %rdx,%r14
455e(1): push %rbp
455f(1): push %rbx
4560(3): mov %rcx,%rbp
4563(4): sub $0x28,%rsp
4567(5): mov %rsi,0x8(%rsp)
456c(5): call 0xffffd404(%rip)
4571(3): mov %rax,%r13
4574(2): mov (%rax),%eax
4576(3): test %r15d,%r15d
4579(7): mov 0x204b00(%rip),%rbx
4580(4): mov %eax,0x18(%rsp)
4584(6): js 0x16d(%rip)
458a(7): cmp %r15d,0x204ae7(%rip)
4591(2): jnle 0x64(%rip)
4593(7): cmp $0x7fffffff,%r15d
459a(6): jz 0x15c(%rip)
45a0(4): lea 0x1(%r15),%r12d
45a4(7): lea 0x204ae5(%rip),%rax
45ab(3): movsxd %r12d,%rsi
45ae(4): shl/sal $0x4,%rsi
45b2(3): cmp %rax,%rbx
45b5(6): jz 0x11b(%rip)
45bb(3): mov %rbx,%rdi
45be(5): call 0xf72(%rip)
45c3(3): mov %rax,%rbx
45c6(7): mov %rax,0x204ab3(%rip)
45cd(7): movsxd 0x204aa4(%rip),%rdi
45d4(3): mov %r12d,%edx
45d7(2): xor %esi,%esi
45d9(2): sub %edi,%edx
45db(4): shl/sal $0x4,%rdi
45df(3): movsxd %edx,%rdx
45e2(3): add %rbx,%rdi
45e5(4): shl/sal $0x4,%rdx
45e9(5): call 0xffffd4d7(%rip)
45ee(7): mov %r12d,0x204a83(%rip)
45f5(3): mov 0x4(%rbp),%eax
45f8(4): shl/sal $0x4,%r15
45fc(4): sub $0x8,%rsp
4600(3): add %r15,%rbx
4603(4): lea 0x8(%rbp),%r15
4607(4): mov 0x0(%rbp),%r8d
460b(3): mov (%rbx),%r11
460e(4): mov 0x8(%rbx),%r12
4612(3): mov %r14,%rcx
4615(3): or $0x1,%eax
4618(4): mov %eax,0x24(%rsp)
461c(3): push 0x30(%rbp)
461f(3): mov %eax,%r9d
4622(3): push 0x28(%rbp)
4625(2): push %r15
4627(3): mov %r11,%rsi
462a(5): mov 0x28(%rsp),%rdx
462f(3): mov %r12,%rdi
4632(5): mov %r11,0x30(%rsp)
4637(5): call 0xffffecd9(%rip)
463c(4): add $0x20,%rsp
4640(5): mov 0x10(%rsp),%r11
4645(3): cmp %rax,%r11
4648(2): jnbe 0x69(%rip)
464a(4): lea 0x1(%rax),%rsi
464e(7): lea 0x204cab(%rip),%rax
4655(3): cmp %rax,%r12
4658(3): mov %rsi,(%rbx)
465b(2): jz 0x14(%rip)
465d(3): mov %r12,%rdi
4660(5): mov %rsi,0x10(%rsp)
4665(5): call 0xffffd2eb(%rip)
466a(5): mov 0x10(%rsp),%rsi
466f(3): mov %rsi,%rdi
4672(5): mov %rsi,0x10(%rsp)
4677(5): call 0xe59(%rip)
467c(4): sub $0x8,%rsp
4680(4): mov %rax,0x8(%rbx)
4684(4): mov 0x0(%rbp),%r8d
4688(3): push 0x30(%rbp)
468b(3): push 0x28(%rbp)
468e(3): mov %r14,%rcx
4691(2): push %r15
4693(5): mov 0x3c(%rsp),%r9d
4698(3): mov %rax,%rdi
469b(5): mov 0x28(%rsp),%rdx
46a0(5): mov 0x30(%rsp),%rsi
46a5(3): mov %rax,%r12
46a8(5): call 0xffffec68(%rip)
46ad(4): add $0x20,%rsp
46b1(4): mov 0x18(%rsp),%eax
46b5(4): mov %eax,0x0(%r13)
46b9(4): add $0x28,%rsp
46bd(3): mov %r12,%rax
46c0(1): pop %rbx
46c1(1): pop %rbp
46c2(2): pop %r12
46c4(2): pop %r13
46c6(2): pop %r14
46c8(2): pop %r15
46ca(1): ret near (%rsp)
46cb(5): nop 0x0(%rax,%rax,1)
46d0(2): xor %edi,%edi
46d2(5): call 0xe5e(%rip)
46d7(8): movdqa 0x2049b1(%rip),%xmm0
46df(3): mov %rax,%rbx
46e2(7): mov %rax,0x204997(%rip)
46e9(3): movups %xmm0,(%rax)
46ec(5): jmp 0xfffffee1(%rip)
46f1(5): call 0xffffd26f(%rip)
46f6(5): call 0x102a(%rip)

"clone_quoting_options" :
4700(2): push %r12
4702(1): push %rbp
4703(1): push %rbx
4704(3): mov %rdi,%rbx
4707(5): call 0xffffd269(%rip)
470c(3): mov (%rax),%r12d
470f(3): mov %rax,%rbp
4712(7): lea 0x204ce7(%rip),%rax
4719(3): test %rbx,%rbx
471c(5): mov $0x38,%esi
4721(4): cmove %rax,%rbx
4725(3): mov %rbx,%rdi
4728(5): call 0xfa8(%rip)
472d(4): mov %r12d,0x0(%rbp)
4731(1): pop %rbx
4732(1): pop %rbp
4733(2): pop %r12
4735(1): ret near (%rsp)

"get_quoting_style" :
4740(7): lea 0x204cb9(%rip),%rax
4747(3): test %rdi,%rdi
474a(4): cmove %rax,%rdi
474e(2): mov (%rdi),%eax
4750(1): ret near (%rsp)

"set_quoting_style" :
4760(7): lea 0x204c99(%rip),%rax
4767(3): test %rdi,%rdi
476a(4): cmove %rax,%rdi
476e(2): mov %esi,(%rdi)
4770(1): ret near (%rsp)

"set_char_quoting" :
4780(7): lea 0x204c79(%rip),%rax
4787(3): test %rdi,%rdi
478a(2): mov %esi,%ecx
478c(4): cmove %rax,%rdi
4790(2): mov %esi,%eax
4792(3): and $0x1f,%ecx
4795(3): shr $0x5,%al
4798(3): movzx %al,%eax
479b(5): lea 0x8(%rdi,%rax,4),%rdi
47a0(2): mov (%rdi),%esi
47a2(2): mov %esi,%eax
47a4(2): shr %cl,%eax
47a6(2): xor %eax,%edx
47a8(3): and $0x1,%eax
47ab(3): and $0x1,%edx
47ae(2): shl/sal %cl,%edx
47b0(2): xor %esi,%edx
47b2(2): mov %edx,(%rdi)
47b4(1): ret near (%rsp)

"set_quoting_flags" :
47c0(7): lea 0x204c39(%rip),%rax
47c7(3): test %rdi,%rdi
47ca(4): cmove %rax,%rdi
47ce(3): mov 0x4(%rdi),%eax
47d1(3): mov %esi,0x4(%rdi)
47d4(1): ret near (%rsp)

"set_custom_quoting" :
47e0(7): lea 0x204c19(%rip),%rax
47e7(3): test %rdi,%rdi
47ea(4): cmove %rax,%rdi
47ee(3): test %rsi,%rsi
47f1(6): mov $0xa,(%rdi)
47f7(2): jz 0x10(%rip)
47f9(3): test %rdx,%rdx
47fc(2): jz 0xb(%rip)
47fe(4): mov %rsi,0x28(%rdi)
4802(4): mov %rdx,0x30(%rdi)
4806(1): ret near (%rsp)
4807(4): sub $0x8,%rsp
480b(5): call 0xffffd155(%rip)

"quotearg_buffer" :
4810(2): push %r15
4812(2): push %r14
4814(7): lea 0x204be5(%rip),%rax
481b(2): push %r13
481d(2): push %r12
481f(3): mov %rdi,%r13
4822(1): push %rbp
4823(1): push %rbx
4824(3): mov %r8,%rbx
4827(3): mov %rsi,%r14
482a(3): mov %rdx,%r15
482d(4): sub $0x18,%rsp
4831(3): test %r8,%r8
4834(4): cmove %rax,%rbx
4838(5): mov %rcx,0x8(%rsp)
483d(5): call 0xffffd133(%rip)
4842(3): mov (%rax),%r12d
4845(3): mov %rax,%rbp
4848(4): lea 0x8(%rbx),%rax
484c(4): sub $0x8,%rsp
4850(4): mov 0x4(%rbx),%r9d
4854(3): push 0x30(%rbx)
4857(3): mov (%rbx),%r8d
485a(3): push 0x28(%rbx)
485d(3): mov %r15,%rdx
4860(1): push %rax
4861(5): mov 0x28(%rsp),%rcx
4866(3): mov %r14,%rsi
4869(3): mov %r13,%rdi
486c(5): call 0xffffeaa4(%rip)
4871(4): mov %r12d,0x0(%rbp)
4875(4): add $0x38,%rsp
4879(1): pop %rbx
487a(1): pop %rbp
487b(2): pop %r12
487d(2): pop %r13
487f(2): pop %r14
4881(2): pop %r15
4883(1): ret near (%rsp)

"quotearg_alloc_mem" :
4890(2): push %r15
4892(2): push %r14
4894(7): lea 0x204b65(%rip),%rax
489b(2): push %r13
489d(2): push %r12
489f(3): mov %rdx,%r12
48a2(1): push %rbp
48a3(1): push %rbx
48a4(3): mov %rcx,%rbx
48a7(3): mov %rdi,%r14
48aa(3): mov %rsi,%r15
48ad(4): sub $0x38,%rsp
48b1(3): test %rcx,%rcx
48b4(4): cmove %rax,%rbx
48b8(2): xor %ebp,%ebp
48ba(5): call 0xffffd0b6(%rip)
48bf(3): test %r12,%r12
48c2(3): mov %rax,%r13
48c5(2): mov (%rax),%eax
48c7(4): setz %bpl
48cb(3): or 0x4(%rbx),%ebp
48ce(4): lea 0x8(%rbx),%r10
48d2(4): sub $0x8,%rsp
48d6(3): mov (%rbx),%r8d
48d9(3): mov %r15,%rcx
48dc(4): mov %eax,0x14(%rsp)
48e0(3): push 0x30(%rbx)
48e3(3): mov %r14,%rdx
48e6(3): push 0x28(%rbx)
48e9(2): push %r10
48eb(2): xor %esi,%esi
48ed(3): mov %ebp,%r9d
48f0(2): xor %edi,%edi
48f2(5): mov %r10,0x40(%rsp)
48f7(5): call 0xffffea19(%rip)
48fc(4): lea 0x1(%rax),%rsi
4900(5): mov %rax,0x48(%rsp)
4905(4): add $0x20,%rsp
4909(3): mov %rsi,%rdi
490c(5): mov %rsi,0x18(%rsp)
4911(5): call 0xbbf(%rip)
4916(5): mov %rax,0x10(%rsp)
491b(4): sub $0x8,%rsp
491f(3): push 0x30(%rbx)
4922(3): push 0x28(%rbx)
4925(5): mov 0x38(%rsp),%r10
492a(3): mov %ebp,%r9d
492d(3): mov (%rbx),%r8d
4930(3): mov %r15,%rcx
4933(3): mov %r14,%rdx
4936(3): mov %rax,%rdi
4939(2): push %r10
493b(5): mov 0x38(%rsp),%rsi
4940(5): call 0xffffe9d0(%rip)
4945(4): mov 0x2c(%rsp),%eax
4949(4): add $0x20,%rsp
494d(3): test %r12,%r12
4950(4): mov %eax,0x0(%r13)
4954(2): jz 0xb(%rip)
4956(5): mov 0x28(%rsp),%r11
495b(4): mov %r11,(%r12)
495f(5): mov 0x10(%rsp),%rax
4964(4): add $0x38,%rsp
4968(1): pop %rbx
4969(1): pop %rbp
496a(2): pop %r12
496c(2): pop %r13
496e(2): pop %r14
4970(2): pop %r15
4972(1): ret near (%rsp)

"quotearg_alloc" :
4980(3): mov %rdx,%rcx
4983(2): xor %edx,%edx
4985(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4990(6): mov 0x2046e2(%rip),%eax
4996(2): push %r12
4998(7): mov 0x2046e1(%rip),%r12
499f(1): push %rbp
49a0(1): push %rbx
49a1(3): cmp $0x1,%eax
49a4(2): jle 0x2d(%rip)
49a6(3): sub $0x2,%eax
49a9(5): lea 0x18(%r12),%rbx
49ae(4): shl/sal $0x4,%rax
49b2(5): lea 0x28(%r12,%rax,1),%rbp
49b7(9): nop 0x0(%rax,%rax,1)
49c0(3): mov (%rbx),%rdi
49c3(4): add $0x10,%rbx
49c7(5): call 0xffffcf89(%rip)
49cc(3): cmp %rbp,%rbx
49cf(2): jnz 0xfffffff1(%rip)
49d1(5): mov 0x8(%r12),%rdi
49d6(7): lea 0x204923(%rip),%rbx
49dd(3): cmp %rbx,%rdi
49e0(2): jz 0x19(%rip)
49e2(5): call 0xffffcf6e(%rip)
49e7(b): mov $0x100,0x20469e(%rip)
49f2(7): mov %rbx,0x20469f(%rip)
49f9(7): lea 0x204690(%rip),%rbx
4a00(3): cmp %rbx,%r12
4a03(2): jz 0x11(%rip)
4a05(3): mov %r12,%rdi
4a08(5): call 0xffffcf48(%rip)
4a0d(7): mov %rbx,0x20466c(%rip)
4a14(1): pop %rbx
4a15(a): mov $0x1,0x204659(%rip)
4a1f(1): pop %rbp
4a20(2): pop %r12
4a22(1): ret near (%rsp)

"quotearg_n" :
4a30(7): lea 0x2049c9(%rip),%rcx
4a37(7): mov $0xffffffff,%rdx
4a3e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4a50(7): lea 0x2049a9(%rip),%rcx
4a57(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4a60(7): lea 0x204999(%rip),%rcx
4a67(3): mov %rdi,%rsi
4a6a(7): mov $0xffffffff,%rdx
4a71(2): xor %edi,%edi
4a73(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4a80(7): lea 0x204979(%rip),%rcx
4a87(3): mov %rsi,%rdx
4a8a(3): mov %rdi,%rsi
4a8d(2): xor %edi,%edi
4a8f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4aa0(4): sub $0x48,%rsp
4aa4(3): mov %rdx,%rax
4aa7(9): mov $0x28,%rdx
4ab0(5): mov %rdx,0x38(%rsp)
4ab5(2): xor %edx,%edx
4ab7(3): cmp $0xa,%esi
4aba(2): jz 0x6a(%rip)
4abc(3): mov %esi,(%rsp)
4abf(3): mov %rsp,%rcx
4ac2(7): mov $0xffffffff,%rdx
4ac9(3): mov %rax,%rsi
4acc(9): mov $0x0,0x4(%rsp)
4ad5(9): mov $0x0,0xc(%rsp)
4ade(9): mov $0x0,0x14(%rsp)
4ae7(9): mov $0x0,0x1c(%rsp)
4af0(9): mov $0x0,0x24(%rsp)
4af9(9): mov $0x0,0x2c(%rsp)
4b02(8): mov $0x0,0x34(%rsp)
4b0a(5): call 0xfffffa46(%rip)
4b0f(5): mov 0x38(%rsp),%rcx
4b14(9): xor $0x28,%rcx
4b1d(2): jnz 0xc(%rip)
4b1f(4): add $0x48,%rsp
4b23(1): ret near (%rsp)
4b24(5): call 0xffffce3c(%rip)
4b29(5): call 0xffffcf27(%rip)

"quotearg_n_style_mem" :
4b30(4): sub $0x48,%rsp
4b34(3): mov %rdx,%rax
4b37(3): mov %rcx,%rdx
4b3a(9): mov $0x28,%rcx
4b43(5): mov %rcx,0x38(%rsp)
4b48(2): xor %ecx,%ecx
4b4a(3): cmp $0xa,%esi
4b4d(2): jz 0x63(%rip)
4b4f(3): mov %esi,(%rsp)
4b52(3): mov %rsp,%rcx
4b55(3): mov %rax,%rsi
4b58(9): mov $0x0,0x4(%rsp)
4b61(9): mov $0x0,0xc(%rsp)
4b6a(9): mov $0x0,0x14(%rsp)
4b73(9): mov $0x0,0x1c(%rsp)
4b7c(9): mov $0x0,0x24(%rsp)
4b85(9): mov $0x0,0x2c(%rsp)
4b8e(8): mov $0x0,0x34(%rsp)
4b96(5): call 0xfffff9ba(%rip)
4b9b(5): mov 0x38(%rsp),%rdx
4ba0(9): xor $0x28,%rdx
4ba9(2): jnz 0xc(%rip)
4bab(4): add $0x48,%rsp
4baf(1): ret near (%rsp)
4bb0(5): call 0xffffcdb0(%rip)
4bb5(5): call 0xffffce9b(%rip)

"quotearg_style" :
4bc0(3): mov %rsi,%rdx
4bc3(2): mov %edi,%esi
4bc5(2): xor %edi,%edi
4bc7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4bd0(3): mov %rdx,%rcx
4bd3(3): mov %rsi,%rdx
4bd6(2): mov %edi,%esi
4bd8(2): xor %edi,%edi
4bda(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4be0(4): sub $0x48,%rsp
4be4(2): mov %edx,%ecx
4be6(9): mov $0x28,%rax
4bef(5): mov %rax,0x38(%rsp)
4bf4(2): xor %eax,%eax
4bf6(7): mov 0x204833(%rip),%rax
4bfd(3): mov %rsp,%r8
4c00(3): and $0x1f,%ecx
4c03(8): movdqa 0x2047f5(%rip),%xmm0
4c0b(5): mov %rax,0x30(%rsp)
4c10(2): mov %edx,%eax
4c12(4): movaps %xmm0,(%rsp)
4c16(3): shr $0x5,%al
4c19(3): movzx %al,%eax
4c1c(5): lea 0x8(%r8,%rax,4),%r9
4c21(8): movdqa 0x2047e7(%rip),%xmm0
4c29(5): movaps %xmm0,0x10(%rsp)
4c2e(8): movdqa 0x2047ea(%rip),%xmm0
4c36(5): movaps %xmm0,0x20(%rsp)
4c3b(3): mov (%r9),%edx
4c3e(2): mov %edx,%eax
4c40(2): shr %cl,%eax
4c42(2): not %eax
4c44(3): and $0x1,%eax
4c47(2): shl/sal %cl,%eax
4c49(3): mov %r8,%rcx
4c4c(2): xor %edx,%eax
4c4e(3): mov %rsi,%rdx
4c51(3): mov %rdi,%rsi
4c54(3): mov %eax,(%r9)
4c57(2): xor %edi,%edi
4c59(5): call 0xfffff8f7(%rip)
4c5e(5): mov 0x38(%rsp),%rsi
4c63(9): xor $0x28,%rsi
4c6c(2): jnz 0x7(%rip)
4c6e(4): add $0x48,%rsp
4c72(1): ret near (%rsp)
4c73(5): call 0xffffcddd(%rip)

"quotearg_char" :
4c80(4): movsx %sil,%edx
4c84(7): mov $0xffffffff,%rsi
4c8b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4c90(5): mov $0x3a,%edx
4c95(7): mov $0xffffffff,%rsi
4c9c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4cb0(5): mov $0x3a,%edx
4cb5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4cc0(4): sub $0x48,%rsp
4cc4(3): mov %rdx,%rax
4cc7(9): mov $0x28,%rdx
4cd0(5): mov %rdx,0x38(%rsp)
4cd5(2): xor %edx,%edx
4cd7(3): cmp $0xa,%esi
4cda(2): jz 0x6a(%rip)
4cdc(3): mov %esi,(%rsp)
4cdf(3): mov %rsp,%rcx
4ce2(7): mov $0xffffffff,%rdx
4ce9(3): mov %rax,%rsi
4cec(9): mov $0x0,0x4(%rsp)
4cf5(9): mov $0x4000000,0xc(%rsp)
4cfe(9): mov $0x0,0x14(%rsp)
4d07(9): mov $0x0,0x1c(%rsp)
4d10(9): mov $0x0,0x24(%rsp)
4d19(9): mov $0x0,0x2c(%rsp)
4d22(8): mov $0x0,0x34(%rsp)
4d2a(5): call 0xfffff826(%rip)
4d2f(5): mov 0x38(%rsp),%rcx
4d34(9): xor $0x28,%rcx
4d3d(2): jnz 0xc(%rip)
4d3f(4): add $0x48,%rsp
4d43(1): ret near (%rsp)
4d44(5): call 0xffffcc1c(%rip)
4d49(5): call 0xffffcd07(%rip)

"quotearg_n_custom_mem" :
4d50(4): sub $0x48,%rsp
4d54(3): mov %rcx,%r9
4d57(7): mov 0x2046d2(%rip),%rcx
4d5e(8): movdqa 0x20469a(%rip),%xmm0
4d66(9): mov $0x28,%rax
4d6f(5): mov %rax,0x38(%rsp)
4d74(2): xor %eax,%eax
4d76(4): movaps %xmm0,(%rsp)
4d7a(3): test %rsi,%rsi
4d7d(5): mov %rcx,0x30(%rsp)
4d82(7): mov $0xa,(%rsp)
4d89(8): movdqa 0x20467f(%rip),%xmm0
4d91(5): movaps %xmm0,0x10(%rsp)
4d96(8): movdqa 0x204682(%rip),%xmm0
4d9e(5): movaps %xmm0,0x20(%rsp)
4da3(2): jz 0x34(%rip)
4da5(3): test %rdx,%rdx
4da8(2): jz 0x2f(%rip)
4daa(5): mov %rsi,0x28(%rsp)
4daf(5): mov %rdx,0x30(%rsp)
4db4(3): mov %rsp,%rcx
4db7(3): mov %r8,%rdx
4dba(3): mov %r9,%rsi
4dbd(5): call 0xfffff793(%rip)
4dc2(5): mov 0x38(%rsp),%rdi
4dc7(9): xor $0x28,%rdi
4dd0(2): jnz 0xc(%rip)
4dd2(4): add $0x48,%rsp
4dd6(1): ret near (%rsp)
4dd7(5): call 0xffffcb89(%rip)
4ddc(5): call 0xffffcc74(%rip)

"quotearg_n_custom" :
4df0(7): mov $0xffffffff,%r8
4df7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4e00(3): mov %rdx,%rcx
4e03(7): mov $0xffffffff,%r8
4e0a(3): mov %rsi,%rdx
4e0d(3): mov %rdi,%rsi
4e10(2): xor %edi,%edi
4e12(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4e20(3): mov %rcx,%r8
4e23(3): mov %rdx,%rcx
4e26(3): mov %rsi,%rdx
4e29(3): mov %rdi,%rsi
4e2c(2): xor %edi,%edi
4e2e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4e40(7): lea 0x2041f9(%rip),%rcx
4e47(5): jmp 0xfffff709(%rip)

"quote_mem" :
4e50(7): lea 0x2041e9(%rip),%rcx
4e57(3): mov %rsi,%rdx
4e5a(3): mov %rdi,%rsi
4e5d(2): xor %edi,%edi
4e5f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4e70(7): lea 0x2041c9(%rip),%rcx
4e77(7): mov $0xffffffff,%rdx
4e7e(5): jmp 0xfffff6d2(%rip)

"quote" :
4e90(7): lea 0x2041a9(%rip),%rcx
4e97(3): mov %rdi,%rsi
4e9a(7): mov $0xffffffff,%rdx
4ea1(2): xor %edi,%edi
4ea3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4eb0(2): push %r15
4eb2(2): push %r14
4eb4(2): push %r13
4eb6(2): push %r12
4eb8(3): mov %r9,%r12
4ebb(1): push %rbp
4ebc(1): push %rbx
4ebd(3): mov %rdi,%rbp
4ec0(3): mov %r8,%rbx
4ec3(4): sub $0x28,%rsp
4ec7(3): test %rsi,%rsi
4eca(6): jz 0x11e(%rip)
4ed0(3): mov %rdx,%r8
4ed3(7): lea 0x1f2e(%rip),%rdx
4eda(3): mov %rcx,%r9
4edd(2): xor %eax,%eax
4edf(3): mov %rsi,%rcx
4ee2(5): mov $0x1,%esi
4ee7(5): call 0xffffcde9(%rip)
4eec(7): lea 0x1f28(%rip),%rsi
4ef3(2): xor %edi,%edi
4ef5(5): mov $0x5,%edx
4efa(5): call 0xffffcb26(%rip)
4eff(7): lea 0x223a(%rip),%rdx
4f06(3): mov %rax,%rcx
4f09(6): mov $0x7e3,%r8d
4f0f(5): mov $0x1,%esi
4f14(3): mov %rbp,%rdi
4f17(2): xor %eax,%eax
4f19(5): call 0xffffcdb7(%rip)
4f1e(7): lea 0x1f83(%rip),%rsi
4f25(2): xor %edi,%edi
4f27(5): mov $0x5,%edx
4f2c(5): call 0xffffcaf4(%rip)
4f31(3): mov %rbp,%rsi
4f34(3): mov %rax,%rdi
4f37(5): call 0xffffcbb9(%rip)
4f3c(4): cmp $0x9,%r12
4f40(6): jnbe 0x340(%rip)
4f46(7): lea 0x21bb(%rip),%rdx
4f4d(4): movsxd 0x0(%rdx,%r12,4),%rax
4f51(3): add %rdx,%rax
4f54(2): jmp %rax
4f56(a): nop 0x0(%rax,%rax,1)
4f60(4): mov 0x38(%rbx),%r9
4f64(4): mov 0x10(%rbx),%rax
4f68(7): lea 0x20a9(%rip),%rsi
4f6f(4): mov 0x8(%rbx),%r8
4f73(5): mov $0x5,%edx
4f78(2): xor %edi,%edi
4f7a(4): mov 0x30(%rbx),%r13
4f7e(4): mov 0x28(%rbx),%r12
4f82(5): mov %r9,0x10(%rsp)
4f87(4): mov 0x20(%rbx),%r15
4f8b(4): mov 0x18(%rbx),%r14
4f8f(4): mov %rax,(%rsp)
4f93(5): mov %r8,0x8(%rsp)
4f98(3): mov (%rbx),%rbx
4f9b(5): call 0xffffca85(%rip)
4fa0(4): sub $0x8,%rsp
4fa4(5): mov 0x18(%rsp),%r9
4fa9(3): mov %rax,%rdx
4fac(3): mov %rbx,%rcx
4faf(5): mov $0x1,%esi
4fb4(3): mov %rbp,%rdi
4fb7(2): xor %eax,%eax
4fb9(2): push %r9
4fbb(2): push %r13
4fbd(2): push %r12
4fbf(2): push %r15
4fc1(2): push %r14
4fc3(5): mov 0x30(%rsp),%r9
4fc8(5): mov 0x38(%rsp),%r8
4fcd(5): call 0xffffcd03(%rip)
4fd2(4): add $0x30,%rsp
4fd6(4): add $0x28,%rsp
4fda(1): pop %rbx
4fdb(1): pop %rbp
4fdc(2): pop %r12
4fde(2): pop %r13
4fe0(2): pop %r14
4fe2(2): pop %r15
4fe4(1): ret near (%rsp)
4fe5(3): nop (%rax)
4fe8(3): mov %rcx,%r8
4feb(3): mov %rdx,%rcx
4fee(7): lea 0x1e1f(%rip),%rdx
4ff5(5): mov $0x1,%esi
4ffa(2): xor %eax,%eax
4ffc(5): call 0xffffccd4(%rip)
5001(5): jmp 0xfffffeeb(%rip)
5006(a): nop 0x0(%rax,%rax,1)
5010(4): mov 0x40(%rbx),%r10
5014(4): mov 0x38(%rbx),%r9
5018(7): lea 0x2029(%rip),%rsi
501f(4): mov 0x10(%rbx),%rax
5023(4): mov 0x8(%rbx),%r8
5027(5): mov $0x5,%edx
502c(4): mov 0x30(%rbx),%r13
5030(4): mov 0x28(%rbx),%r12
5034(4): mov 0x20(%rbx),%r15
5038(4): mov 0x18(%rbx),%r14
503c(3): mov (%rbx),%rbx
503f(5): mov %r10,0x18(%rsp)
5044(5): mov %r9,0x10(%rsp)
5049(4): mov %rax,(%rsp)
504d(5): mov %r8,0x8(%rsp)
5052(2): xor %edi,%edi
5054(5): call 0xffffc9cc(%rip)
5059(5): mov 0x18(%rsp),%r10
505e(2): push %r10
5060(5): jmp 0xffffff44(%rip)
5065(3): nop (%rax)
5068(3): mov (%rbx),%rbx
506b(7): lea 0x1dad(%rip),%rsi
5072(5): mov $0x5,%edx
5077(2): xor %edi,%edi
5079(5): call 0xffffc9a7(%rip)
507e(4): add $0x28,%rsp
5082(3): mov %rbx,%rcx
5085(3): mov %rbp,%rdi
5088(1): pop %rbx
5089(1): pop %rbp
508a(2): pop %r12
508c(2): pop %r13
508e(2): pop %r14
5090(2): pop %r15
5092(3): mov %rax,%rdx
5095(5): mov $0x1,%esi
509a(2): xor %eax,%eax
509c(5): jmp 0xffffcc34(%rip)
50a1(7): nop 0x0(%rax)
50a8(4): mov 0x8(%rbx),%r12
50ac(7): lea 0x1d7c(%rip),%rsi
50b3(3): mov (%rbx),%rbx
50b6(5): mov $0x5,%edx
50bb(2): xor %edi,%edi
50bd(5): call 0xffffc963(%rip)
50c2(4): add $0x28,%rsp
50c6(3): mov %r12,%r8
50c9(3): mov %rbx,%rcx
50cc(3): mov %rbp,%rdi
50cf(3): mov %rax,%rdx
50d2(5): mov $0x1,%esi
50d7(1): pop %rbx
50d8(1): pop %rbp
50d9(2): pop %r12
50db(2): pop %r13
50dd(2): pop %r14
50df(2): pop %r15
50e1(2): xor %eax,%eax
50e3(5): jmp 0xffffcbed(%rip)
50e8(8): nop 0x0(%rax,%rax,1)
50f0(4): mov 0x10(%rbx),%r13
50f4(4): mov 0x8(%rbx),%r12
50f8(7): lea 0x1d47(%rip),%rsi
50ff(3): mov (%rbx),%rbx
5102(5): mov $0x5,%edx
5107(2): xor %edi,%edi
5109(5): call 0xffffc917(%rip)
510e(4): add $0x28,%rsp
5112(3): mov %r13,%r9
5115(3): mov %r12,%r8
5118(3): mov %rbx,%rcx
511b(3): mov %rbp,%rdi
511e(3): mov %rax,%rdx
5121(1): pop %rbx
5122(1): pop %rbp
5123(2): pop %r12
5125(2): pop %r13
5127(2): pop %r14
5129(2): pop %r15
512b(5): mov $0x1,%esi
5130(2): xor %eax,%eax
5132(5): jmp 0xffffcb9e(%rip)
5137(9): nop 0x0(%rax,%rax,1)
5140(7): lea 0x1e31(%rip),%rsi
5147(5): mov $0x5,%edx
514c(2): xor %edi,%edi
514e(4): mov 0x18(%rbx),%r14
5152(4): mov 0x10(%rbx),%r13
5156(4): mov 0x8(%rbx),%r12
515a(3): mov (%rbx),%rbx
515d(5): call 0xffffc8c3(%rip)
5162(4): sub $0x8,%rsp
5166(2): push %r14
5168(3): mov %rax,%rdx
516b(3): mov %r13,%r9
516e(3): mov %r12,%r8
5171(3): mov %rbx,%rcx
5174(3): mov %rbp,%rdi
5177(5): mov $0x1,%esi
517c(2): xor %eax,%eax
517e(5): call 0xffffcb52(%rip)
5183(1): pop %rax
5184(1): pop %rdx
5185(4): add $0x28,%rsp
5189(1): pop %rbx
518a(1): pop %rbp
518b(2): pop %r12
518d(2): pop %r13
518f(2): pop %r14
5191(2): pop %r15
5193(1): ret near (%rsp)
5194(4): nop 0x0(%rax)
5198(4): mov 0x20(%rbx),%r15
519c(7): lea 0x1df5(%rip),%rsi
51a3(5): mov $0x5,%edx
51a8(2): xor %edi,%edi
51aa(4): mov 0x18(%rbx),%r14
51ae(4): mov 0x10(%rbx),%r13
51b2(4): mov 0x8(%rbx),%r12
51b6(3): mov (%rbx),%rbx
51b9(5): call 0xffffc867(%rip)
51be(2): push %r15
51c0(2): jmp 0xffffffa6(%rip)
51c2(6): nop 0x0(%rax,%rax,1)
51c8(4): mov 0x8(%rbx),%r8
51cc(4): mov 0x28(%rbx),%r12
51d0(7): lea 0x1de9(%rip),%rsi
51d7(4): mov 0x20(%rbx),%r15
51db(4): mov 0x18(%rbx),%r14
51df(5): mov $0x5,%edx
51e4(4): mov 0x10(%rbx),%r13
51e8(2): xor %edi,%edi
51ea(3): mov (%rbx),%rbx
51ed(4): mov %r8,(%rsp)
51f1(5): call 0xffffc82f(%rip)
51f6(4): sub $0x8,%rsp
51fa(3): mov %r13,%r9
51fd(2): push %r12
51ff(2): push %r15
5201(2): push %r14
5203(5): mov 0x20(%rsp),%r8
5208(3): mov %rbx,%rcx
520b(3): mov %rax,%rdx
520e(3): mov %rbp,%rdi
5211(5): mov $0x1,%esi
5216(2): xor %eax,%eax
5218(5): call 0xffffcab8(%rip)
521d(4): add $0x20,%rsp
5221(4): add $0x28,%rsp
5225(1): pop %rbx
5226(1): pop %rbp
5227(2): pop %r12
5229(2): pop %r13
522b(2): pop %r14
522d(2): pop %r15
522f(1): ret near (%rsp)
5230(4): mov 0x10(%rbx),%r9
5234(4): mov 0x30(%rbx),%r13
5238(7): lea 0x1da9(%rip),%rsi
523f(4): mov 0x28(%rbx),%r12
5243(4): mov 0x20(%rbx),%r15
5247(5): mov $0x5,%edx
524c(4): mov 0x18(%rbx),%r14
5250(4): mov 0x8(%rbx),%r8
5254(2): xor %edi,%edi
5256(5): mov %r9,0x8(%rsp)
525b(3): mov (%rbx),%rbx
525e(4): mov %r8,(%rsp)
5262(5): call 0xffffc7be(%rip)
5267(2): push %r13
5269(2): push %r12
526b(2): push %r15
526d(2): push %r14
526f(5): mov 0x28(%rsp),%r9
5274(2): jmp 0xffffff8f(%rip)
5276(a): nop 0x0(%rax,%rax,1)
5280(4): mov 0x40(%rbx),%r10
5284(4): mov 0x38(%rbx),%r9
5288(5): mov $0x5,%edx
528d(4): mov 0x10(%rbx),%rax
5291(4): mov 0x8(%rbx),%r8
5295(7): lea 0x1de4(%rip),%rsi
529c(4): mov 0x30(%rbx),%r13
52a0(4): mov 0x28(%rbx),%r12
52a4(4): mov 0x20(%rbx),%r15
52a8(4): mov 0x18(%rbx),%r14
52ac(5): mov %r10,0x18(%rsp)
52b1(5): mov %r9,0x10(%rsp)
52b6(4): mov %rax,(%rsp)
52ba(5): mov %r8,0x8(%rsp)
52bf(3): mov (%rbx),%rbx
52c2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
52d0(3): xor %r9d,%r9d
52d3(4): cmp $0x0,(%r8)
52d7(2): jz 0x14(%rip)
52d9(7): nop 0x0(%rax)
52e0(4): add $0x1,%r9
52e4(5): cmp $0x0,0x0(%r8,%r9,8)
52e9(2): jnz 0xfffffff7(%rip)
52eb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
52f0(4): sub $0x68,%rsp
52f4(3): mov %r8,%r10
52f7(3): xor %r9d,%r9d
52fa(9): mov $0x28,%rax
5303(5): mov %rax,0x58(%rsp)
5308(2): xor %eax,%eax
530a(3): mov %rsp,%r8
530d(3): nop (%rax)
5310(3): mov (%r10),%eax
5313(3): cmp $0x2f,%eax
5316(2): jnbe 0x44(%rip)
5318(3): mov %eax,%r11d
531b(4): add 0x10(%r10),%r11
531f(3): add $0x8,%eax
5322(3): mov %eax,(%r10)
5325(3): mov (%r11),%rax
5328(3): test %rax,%rax
532b(4): mov %rax,0x0(%r8,%r9,8)
532f(2): jz 0xc(%rip)
5331(4): add $0x1,%r9
5335(4): cmp $0xa,%r9
5339(2): jnz 0xffffffd7(%rip)
533b(5): call 0xfffffb75(%rip)
5340(5): mov 0x58(%rsp),%rax
5345(9): xor $0x28,%rax
534e(2): jnz 0x7(%rip)
5350(4): add $0x68,%rsp
5354(1): ret near (%rsp)
5355(5): call 0xffffc6fb(%rip)
535a(4): mov 0x8(%r10),%r11
535e(4): lea 0x8(%r11),%rax
5362(4): mov %rax,0x8(%r10)
5366(2): jmp 0xffffffbf(%rip)

"version_etc" :
5370(1): push %rbp
5371(1): push %rbx
5372(6): mov $0x20,%r10d
5378(3): xor %r11d,%r11d
537b(7): sub $0xb8,%rsp
5382(9): mov $0x28,%rax
538b(5): mov %rax,0x78(%rsp)
5390(2): xor %eax,%eax
5392(8): lea 0xd0(%rsp),%rax
539a(8): mov %r8,0xa0(%rsp)
53a2(8): lea 0xd0(%rsp),%rbx
53aa(5): lea 0x20(%rsp),%r8
53af(8): mov %r9,0xa8(%rsp)
53b7(8): mov $0x20,0x8(%rsp)
53bf(5): mov %rax,0x10(%rsp)
53c4(8): lea 0x80(%rsp),%rax
53cc(3): xor %r9d,%r9d
53cf(5): mov %rax,0x18(%rsp)
53d4(3): mov %rax,%rbp
53d7(9): nop 0x0(%rax,%rax,1)
53e0(4): cmp $0x2f,%r10d
53e4(2): jnbe 0x58(%rip)
53e6(3): mov %r10d,%eax
53e9(6): mov $0x1,%r11d
53ef(4): add $0x8,%r10d
53f3(3): add %rbp,%rax
53f6(3): mov (%rax),%rax
53f9(3): test %rax,%rax
53fc(4): mov %rax,0x0(%r8,%r9,8)
5400(2): jz 0xc(%rip)
5402(4): add $0x1,%r9
5406(4): cmp $0xa,%r9
540a(2): jnz 0xffffffd6(%rip)
540c(3): test %r11b,%r11b
540f(2): jnz 0x26(%rip)
5411(5): call 0xfffffa9f(%rip)
5416(5): mov 0x78(%rsp),%rax
541b(9): xor $0x28,%rax
5424(2): jnz 0xc(%rip)
5426(7): add $0xb8,%rsp
542d(1): pop %rbx
542e(1): pop %rbp
542f(1): ret near (%rsp)
5430(5): call 0xffffc620(%rip)
5435(5): mov %r10d,0x8(%rsp)
543a(2): jmp 0xffffffd7(%rip)
543c(3): mov %rbx,%rax
543f(4): add $0x8,%rbx
5443(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5450(1): push %rbx
5451(7): lea 0x1a0a(%rip),%rsi
5458(5): mov $0x5,%edx
545d(2): xor %edi,%edi
545f(5): call 0xffffc5c1(%rip)
5464(7): lea 0x1a0c(%rip),%rdx
546b(3): mov %rax,%rsi
546e(5): mov $0x1,%edi
5473(2): xor %eax,%eax
5475(5): call 0xffffc78b(%rip)
547a(7): lea 0x1a0c(%rip),%rsi
5481(5): mov $0x5,%edx
5486(2): xor %edi,%edi
5488(5): call 0xffffc598(%rip)
548d(7): lea 0x12bc(%rip),%rcx
5494(7): lea 0xaac(%rip),%rdx
549b(3): mov %rax,%rsi
549e(5): mov $0x1,%edi
54a3(2): xor %eax,%eax
54a5(5): call 0xffffc75b(%rip)
54aa(7): mov 0x203db7(%rip),%rbx
54b1(7): lea 0x1c08(%rip),%rsi
54b8(2): xor %edi,%edi
54ba(5): mov $0x5,%edx
54bf(5): call 0xffffc561(%rip)
54c4(3): mov %rbx,%rsi
54c7(3): mov %rax,%rdi
54ca(1): pop %rbx
54cb(5): jmp 0xffffc625(%rip)

"xmalloc" :
54d0(1): push %rbx
54d1(3): mov %rdi,%rbx
54d4(5): call 0xffffc6bc(%rip)
54d9(3): test %rax,%rax
54dc(2): jnz 0x7(%rip)
54de(3): test %rbx,%rbx
54e1(2): jnz 0x4(%rip)
54e3(1): pop %rbx
54e4(1): ret near (%rsp)
54e5(5): call 0x23b(%rip)

"xnmalloc" :
54f0(3): mov %rdi,%rax
54f3(3): mul %rax,%rsi,%rdx
54f6(3): mov %rax,%rdi
54f9(3): seto %al
54fc(3): test %rdi,%rdi
54ff(2): js 0xc(%rip)
5501(3): movzx %al,%eax
5504(3): test %rax,%rax
5507(2): jnz 0x4(%rip)
5509(2): jmp 0xffffffc7(%rip)
550b(4): sub $0x8,%rsp
550f(5): call 0x211(%rip)

"xrealloc" :
5530(3): test %rsi,%rsi
5533(1): push %rbx
5534(3): mov %rsi,%rbx
5537(2): jnz 0x7(%rip)
5539(3): test %rdi,%rdi
553c(2): jnz 0x1c(%rip)
553e(3): mov %rbx,%rsi
5541(5): call 0xffffc69f(%rip)
5546(3): test %rax,%rax
5549(2): jnz 0x7(%rip)
554b(3): test %rbx,%rbx
554e(2): jnz 0x13(%rip)
5550(1): pop %rbx
5551(1): ret near (%rsp)
5552(6): nop 0x0(%rax,%rax,1)
5558(5): call 0xffffc3f8(%rip)
555d(2): xor %eax,%eax
555f(1): pop %rbx
5560(1): ret near (%rsp)
5561(5): call 0x1bf(%rip)

"xnrealloc" :
5570(3): mov %rsi,%rax
5573(3): mul %rax,%rdx,%rdx
5576(3): mov %rax,%rsi
5579(3): seto %al
557c(3): test %rsi,%rsi
557f(2): js 0xc(%rip)
5581(3): movzx %al,%eax
5584(3): test %rax,%rax
5587(2): jnz 0x4(%rip)
5589(2): jmp 0xffffffa7(%rip)
558b(4): sub $0x8,%rsp
558f(5): call 0x191(%rip)

"x2nrealloc" :
55a0(3): test %rdi,%rdi
55a3(3): mov %rdx,%r9
55a6(3): mov (%rsi),%rcx
55a9(2): jz 0x37(%rip)
55ab(2): xor %edx,%edx
55ad(a): mov $0x6148914691236517204,%rax
55b7(3): div %r9,%rax
55ba(3): cmp %rcx,%rax
55bd(2): jbe 0x3e(%rip)
55bf(3): mov %rcx,%rax
55c2(3): shr $0x1,%rax
55c5(5): lea 0x1(%rax,%rcx,1),%rcx
55ca(3): mov %rcx,(%rsi)
55cd(4): imul %r9,%rcx
55d1(3): mov %rcx,%rsi
55d4(5): jmp 0xffffff5c(%rip)
55d9(7): nop 0x0(%rax)
55e0(3): test %rcx,%rcx
55e3(2): jz 0x25(%rip)
55e5(3): mov %rcx,%rax
55e8(3): mul %rax,%r9,%rdx
55eb(3): seto %dl
55ee(3): test %rax,%rax
55f1(3): movzx %dl,%edx
55f4(2): js 0x7(%rip)
55f6(3): test %rdx,%rdx
55f9(2): jz 0xffffffd1(%rip)
55fb(4): sub $0x8,%rsp
55ff(5): call 0x121(%rip)
5604(4): nop 0x0(%rax)
5608(2): xor %edx,%edx
560a(5): mov $0x80,%eax
560f(3): xor %r8d,%r8d
5612(3): div %r9,%rax
5615(3): test %rax,%rax
5618(4): setz %r8b
561c(4): lea 0x0(%r8,%rax,1),%rcx
5620(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5630(3): test %rdi,%rdi
5633(3): mov (%rsi),%rax
5636(2): jz 0x2a(%rip)
5638(a): mov $0x6148914691236517203,%rdx
5642(3): cmp %rdx,%rax
5645(2): jnbe 0x2c(%rip)
5647(3): mov %rax,%rdx
564a(3): shr $0x1,%rdx
564d(5): lea 0x1(%rdx,%rax,1),%rax
5652(3): mov %rax,(%rsi)
5655(3): mov %rax,%rsi
5658(5): jmp 0xfffffed8(%rip)
565d(3): nop (%rax)
5660(3): test %rax,%rax
5663(5): mov $0x80,%edx
5668(4): cmove %rdx,%rax
566c(3): test %rax,%rax
566f(2): jns 0xffffffe3(%rip)
5671(4): sub $0x8,%rsp
5675(5): call 0xab(%rip)

"xzalloc" :
5680(1): push %rbx
5681(3): mov %rdi,%rbx
5684(5): call 0xfffffe4c(%rip)
5689(3): mov %rbx,%rdx
568c(2): xor %esi,%esi
568e(3): mov %rax,%rdi
5691(1): pop %rbx
5692(5): jmp 0xffffc42e(%rip)

"xcalloc" :
56a0(3): mov %rdi,%rax
56a3(4): sub $0x8,%rsp
56a7(3): mul %rax,%rsi,%rdx
56aa(3): seto %dl
56ad(3): test %rax,%rax
56b0(2): js 0x19(%rip)
56b2(3): movzx %dl,%edx
56b5(3): test %rdx,%rdx
56b8(2): jnz 0x11(%rip)
56ba(5): call 0xffffc446(%rip)
56bf(3): test %rax,%rax
56c2(2): jz 0x7(%rip)
56c4(4): add $0x8,%rsp
56c8(1): ret near (%rsp)
56c9(5): call 0x57(%rip)

"xmemdup" :
56d0(1): push %rbp
56d1(1): push %rbx
56d2(3): mov %rdi,%rbp
56d5(3): mov %rsi,%rdi
56d8(3): mov %rsi,%rbx
56db(4): sub $0x8,%rsp
56df(5): call 0xfffffdf1(%rip)
56e4(4): add $0x8,%rsp
56e8(3): mov %rbx,%rdx
56eb(3): mov %rbp,%rsi
56ee(1): pop %rbx
56ef(1): pop %rbp
56f0(3): mov %rax,%rdi
56f3(5): jmp 0xffffc45d(%rip)

"xstrdup" :
5700(1): push %rbx
5701(3): mov %rdi,%rbx
5704(5): call 0xffffc33c(%rip)
5709(3): mov %rbx,%rdi
570c(4): lea 0x1(%rax),%rsi
5710(1): pop %rbx
5711(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5720(7): lea 0x1a48(%rip),%rsi
5727(4): sub $0x8,%rsp
572b(5): mov $0x5,%edx
5730(2): xor %edi,%edi
5732(5): call 0xffffc2ee(%rip)
5737(6): mov 0x2038e3(%rip),%edi
573d(7): lea 0x1197(%rip),%rdx
5744(3): mov %rax,%rcx
5747(2): xor %esi,%esi
5749(2): xor %eax,%eax
574b(5): call 0xffffc4c5(%rip)
5750(5): call 0xffffc210(%rip)

"xstrtod" :
5760(2): push %r14
5762(2): push %r13
5764(3): mov %rcx,%r14
5767(2): push %r12
5769(1): push %rbp
576a(3): mov %rdi,%rbp
576d(1): push %rbx
576e(3): mov %rdx,%r13
5771(3): mov %rsi,%rbx
5774(4): sub $0x10,%rsp
5778(9): mov $0x28,%rax
5781(5): mov %rax,0x8(%rsp)
5786(2): xor %eax,%eax
5788(5): call 0xffffc1e8(%rip)
578d(3): mov %rsp,%rsi
5790(3): mov %rax,%r12
5793(6): mov $0x0,(%rax)
5799(3): mov %rbp,%rdi
579c(3): call %r14
579f(4): mov (%rsp),%rcx
57a3(3): cmp %rbp,%rcx
57a6(2): jz 0x72(%rip)
57a8(3): test %rbx,%rbx
57ab(2): jz 0x4d(%rip)
57ad(8): ucomisd 0x10c3(%rip),%xmm0
57b5(2): jp 0x9(%rip)
57b7(5): mov $0x1,%eax
57bc(2): jz 0xf(%rip)
57be(5): cmp $0x22,(%r12)
57c3(3): setnz %al
57c6(3): test %rbx,%rbx
57c9(2): jz 0x5(%rip)
57cb(3): mov %rcx,(%rbx)
57ce(5): mov 0x8(%rsp),%rdx
57d3(9): xor $0x28,%rdx
57dc(6): movsd %xmm0,0x0(%r13)
57e2(2): jnz 0x3a(%rip)
57e4(4): add $0x10,%rsp
57e8(1): pop %rbx
57e9(1): pop %rbp
57ea(2): pop %r12
57ec(2): pop %r13
57ee(2): pop %r14
57f0(1): ret near (%rsp)
57f1(7): nop 0x0(%rax)
57f8(2): xor %eax,%eax
57fa(3): cmp $0x0,(%rcx)
57fd(2): jnz 0xffffffd1(%rip)
57ff(8): ucomisd 0x1071(%rip),%xmm0
5807(2): jp 0xffffffb7(%rip)
5809(2): jnz 0xffffffb5(%rip)
580b(5): mov $0x1,%eax
5810(2): jmp 0xffffffbe(%rip)
5812(6): nop 0x0(%rax,%rax,1)
5818(2): xor %eax,%eax
581a(2): jmp 0xffffffac(%rip)
581c(5): call 0xffffc234(%rip)

"rpl_mbrtowc" :
5830(2): push %r13
5832(2): push %r12
5834(3): mov %rsi,%r13
5837(1): push %rbp
5838(1): push %rbx
5839(3): mov %rdi,%rbx
583c(3): mov %rdx,%r12
583f(4): sub $0x18,%rsp
5843(9): mov $0x28,%rax
584c(5): mov %rax,0x8(%rsp)
5851(2): xor %eax,%eax
5853(5): lea 0x4(%rsp),%rax
5858(3): test %rdi,%rdi
585b(4): cmove %rax,%rbx
585f(3): mov %rbx,%rdi
5862(5): call 0xffffc20e(%rip)
5867(4): cmp $0xfffffffd,%rax
586b(3): mov %rax,%rbp
586e(2): jbe 0x22(%rip)
5870(3): test %r12,%r12
5873(2): jz 0x1d(%rip)
5875(2): xor %edi,%edi
5877(5): call 0x3a9(%rip)
587c(2): test %al,%al
587e(2): jnz 0x12(%rip)
5880(5): movzx 0x0(%r13),%eax
5885(5): mov $0x1,%ebp
588a(2): mov %eax,(%rbx)
588c(4): nop 0x0(%rax)
5890(5): mov 0x8(%rsp),%rdx
5895(9): xor $0x28,%rdx
589e(3): mov %rbp,%rax
58a1(2): jnz 0xd(%rip)
58a3(4): add $0x18,%rsp
58a7(1): pop %rbx
58a8(1): pop %rbp
58a9(2): pop %r12
58ab(2): pop %r13
58ad(1): ret near (%rsp)
58ae(5): call 0xffffc1a2(%rip)

"str2sig" :
58c0(2): push %r13
58c2(2): push %r12
58c4(3): mov %rsi,%r13
58c7(1): push %rbp
58c8(1): push %rbx
58c9(2): xor %ebx,%ebx
58cb(3): mov %rdi,%r12
58ce(7): lea 0x2037cf(%rip),%rbp
58d5(4): sub $0x18,%rsp
58d9(9): mov $0x28,%rax
58e2(5): mov %rax,0x8(%rsp)
58e7(2): xor %eax,%eax
58e9(3): movsx (%rdi),%eax
58ec(3): sub $0x30,%eax
58ef(3): cmp $0x9,%eax
58f2(2): jnbe 0x1a(%rip)
58f4(2): jmp 0x5c(%rip)
58f6(a): nop 0x0(%rax,%rax,1)
5900(3): add $0x1,%ebx
5903(4): add $0xc,%rbp
5907(3): cmp $0x23,%ebx
590a(2): jz 0x76(%rip)
590c(3): mov %r12,%rsi
590f(3): mov %rbp,%rdi
5912(5): call 0xffffc1fe(%rip)
5917(2): test %eax,%eax
5919(2): jnz 0xffffffe7(%rip)
591b(4): lea 0x0(%rbx,%rbx,2),%rdx
591f(7): lea 0x20377a(%rip),%rax
5926(3): mov 0x0(%rax,%rdx,4),%eax
5929(4): mov %eax,0x0(%r13)
592d(3): sar $0x1f,%eax
5930(5): mov 0x8(%rsp),%rcx
5935(9): xor $0x28,%rcx
593e(6): jnz 0x102(%rip)
5944(4): add $0x18,%rsp
5948(1): pop %rbx
5949(1): pop %rbp
594a(2): pop %r12
594c(2): pop %r13
594e(1): ret near (%rsp)
594f(1): nop 
5950(5): mov $0xa,%edx
5955(3): mov %rsp,%rsi
5958(5): call 0xffffc1e8(%rip)
595d(4): mov (%rsp),%rdx
5961(3): cmp $0x0,(%rdx)
5964(2): jnz 0x8(%rip)
5966(4): cmp $0x40,%rax
596a(2): jle 0xffffffbf(%rip)
596c(8): mov $0xffffffff,0x0(%r13)
5974(5): mov $0xffffffff,%eax
5979(2): jmp 0xffffffb7(%rip)
597b(5): nop 0x0(%rax,%rax,1)
5980(5): call 0xffffc310(%rip)
5985(2): mov %eax,%ebp
5987(5): call 0xffffc359(%rip)
598c(2): test %ebp,%ebp
598e(2): mov %eax,%ebx
5990(2): jle 0x1c(%rip)
5992(7): lea 0x17e7(%rip),%rdi
5999(5): mov $0x5,%ecx
599e(3): mov %r12,%rsi
59a1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
59a3(3): setnbe %al
59a6(2): sbb $0x0,%al
59a8(2): test %al,%al
59aa(2): jz 0x59(%rip)
59ac(2): test %ebx,%ebx
59ae(2): jle 0xffffffbe(%rip)
59b0(7): lea 0x17cf(%rip),%rdi
59b7(5): mov $0x5,%ecx
59bc(3): mov %r12,%rsi
59bf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
59c1(3): setnbe %al
59c4(2): sbb $0x0,%al
59c6(2): test %al,%al
59c8(2): jnz 0xffffffa4(%rip)
59ca(5): lea 0x5(%r12),%rdi
59cf(5): mov $0xa,%edx
59d4(3): mov %rsp,%rsi
59d7(5): call 0xffffc169(%rip)
59dc(4): mov (%rsp),%rdx
59e0(3): cmp $0x0,(%rdx)
59e3(2): jnz 0xffffff89(%rip)
59e5(2): sub %ebx,%ebp
59e7(3): movsxd %ebp,%rbp
59ea(3): cmp %rbp,%rax
59ed(6): jl 0xffffff7f(%rip)
59f3(3): test %rax,%rax
59f6(6): jnle 0xffffff76(%rip)
59fc(2): add %ebx,%eax
59fe(5): jmp 0xffffff2b(%rip)
5a03(5): lea 0x5(%r12),%rdi
5a08(5): mov $0xa,%edx
5a0d(3): mov %rsp,%rsi
5a10(5): call 0xffffc130(%rip)
5a15(4): mov (%rsp),%rdx
5a19(3): cmp $0x0,(%rdx)
5a1c(6): jnz 0xffffff50(%rip)
5a22(3): test %rax,%rax
5a25(6): js 0xffffff47(%rip)
5a2b(2): sub %ebp,%ebx
5a2d(3): movsxd %ebx,%rdx
5a30(3): cmp %rdx,%rax
5a33(6): jnle 0xffffff39(%rip)
5a39(2): add %ebp,%eax
5a3b(5): jmp 0xfffffeee(%rip)
5a40(5): call 0xffffc010(%rip)

"sig2str" :
5a50(1): push %rbp
5a51(7): lea 0x203648(%rip),%rax
5a58(1): push %rbx
5a59(2): xor %edx,%edx
5a5b(2): mov %edi,%ebx
5a5d(3): mov %rsi,%rdi
5a60(4): sub $0x18,%rsp
5a64(3): mov %rax,%rcx
5a67(2): jmp 0x15(%rip)
5a69(7): nop 0x0(%rax)
5a70(3): add $0x1,%edx
5a73(4): add $0xc,%rcx
5a77(3): cmp $0x23,%edx
5a7a(2): jz 0x26(%rip)
5a7c(2): cmp %ebx,(%rcx)
5a7e(2): jnz 0xfffffff2(%rip)
5a80(4): lea 0x0(%rdx,%rdx,2),%rdx
5a84(5): lea 0x4(%rax,%rdx,4),%rsi
5a89(5): call 0xffffbf17(%rip)
5a8e(2): xor %eax,%eax
5a90(4): add $0x18,%rsp
5a94(1): pop %rbx
5a95(1): pop %rbp
5a96(1): ret near (%rsp)
5a97(9): nop 0x0(%rax,%rax,1)
5aa0(5): mov %rdi,0x8(%rsp)
5aa5(5): call 0xffffc1eb(%rip)
5aaa(2): mov %eax,%ebp
5aac(5): call 0xffffc234(%rip)
5ab1(2): cmp %ebx,%ebp
5ab3(2): jnle 0x6e(%rip)
5ab5(2): cmp %ebx,%eax
5ab7(2): jl 0x6a(%rip)
5ab9(2): mov %eax,%edx
5abb(5): mov 0x8(%rsp),%rdi
5ac0(2): sub %ebp,%edx
5ac2(2): sar $0x1,%edx
5ac4(2): add %ebp,%edx
5ac6(2): cmp %ebx,%edx
5ac8(2): jnl 0x48(%rip)
5aca(5): mov $0x58,%edx
5acf(6): mov $0x414d5452,(%rdi)
5ad5(2): mov %eax,%ebp
5ad7(4): mov %dx,0x4(%rdi)
5adb(2): mov %ebx,%eax
5add(2): sub %ebp,%eax
5adf(2): jz 0xffffffb1(%rip)
5ae1(7): lea 0x16a4(%rip),%rcx
5ae8(3): mov %eax,%r8d
5aeb(4): add $0x5,%rdi
5aef(7): mov $0xffffffff,%rdx
5af6(5): mov $0x1,%esi
5afb(2): xor %eax,%eax
5afd(5): call 0xffffc243(%rip)
5b02(4): add $0x18,%rsp
5b06(2): xor %eax,%eax
5b08(1): pop %rbx
5b09(1): pop %rbp
5b0a(1): ret near (%rsp)
5b0b(5): nop 0x0(%rax,%rax,1)
5b10(5): mov $0x4e,%ecx
5b15(6): mov $0x494d5452,(%rdi)
5b1b(4): mov %cx,0x4(%rdi)
5b1f(2): jmp 0xffffffbc(%rip)
5b21(5): mov $0xffffffff,%eax
5b26(5): jmp 0xffffff6a(%rip)

"c_strtod" :
5b30(1): push %rbp
5b31(1): push %rbx
5b32(3): mov %rdi,%rbp
5b35(3): mov %rsi,%rbx
5b38(4): sub $0x8,%rsp
5b3c(7): mov 0x2038f5(%rip),%rax
5b43(3): test %rax,%rax
5b46(2): jz 0x3a(%rip)
5b48(7): mov 0x2038e9(%rip),%rdx
5b4f(3): test %rdx,%rdx
5b52(2): jz 0x16(%rip)
5b54(4): add $0x8,%rsp
5b58(3): mov %rbx,%rsi
5b5b(3): mov %rbp,%rdi
5b5e(1): pop %rbx
5b5f(1): pop %rbp
5b60(5): jmp 0xffffbe90(%rip)
5b65(3): nop (%rax)
5b68(3): test %rbx,%rbx
5b6b(4): pxor %xmm0,%xmm0
5b6f(2): jz 0x9(%rip)
5b71(4): pxor %xmm0,%xmm0
5b75(3): mov %rbp,(%rbx)
5b78(4): add $0x8,%rsp
5b7c(1): pop %rbx
5b7d(1): pop %rbp
5b7e(1): ret near (%rsp)
5b7f(1): nop 
5b80(7): lea 0x1609(%rip),%rsi
5b87(2): xor %edx,%edx
5b89(5): mov $0x1fbf,%edi
5b8e(5): call 0xffffbf02(%rip)
5b93(7): mov %rax,0x20389e(%rip)
5b9a(2): jmp 0xffffffae(%rip)

"close_stream" :
5ba0(2): push %r12
5ba2(1): push %rbp
5ba3(3): mov %rdi,%rbp
5ba6(1): push %rbx
5ba7(5): call 0xffffbe09(%rip)
5bac(3): mov 0x0(%rbp),%ebx
5baf(3): mov %rbp,%rdi
5bb2(3): mov %rax,%r12
5bb5(5): call 0x10b(%rip)
5bba(3): and $0x20,%ebx
5bbd(2): test %ebx,%ebx
5bbf(2): jnz 0x19(%rip)
5bc1(2): test %eax,%eax
5bc3(2): jz 0xc(%rip)
5bc5(3): test %r12,%r12
5bc8(5): mov $0xffffffff,%eax
5bcd(2): jz 0x3b(%rip)
5bcf(1): pop %rbx
5bd0(1): pop %rbp
5bd1(2): pop %r12
5bd3(1): ret near (%rsp)
5bd4(4): nop 0x0(%rax)
5bd8(2): test %eax,%eax
5bda(2): jnz 0x1e(%rip)
5bdc(5): call 0xffffbd94(%rip)
5be1(6): mov $0x0,(%rax)
5be7(5): mov $0xffffffff,%eax
5bec(1): pop %rbx
5bed(1): pop %rbp
5bee(2): pop %r12
5bf0(1): ret near (%rsp)
5bf1(7): nop 0x0(%rax)
5bf8(1): pop %rbx
5bf9(5): mov $0xffffffff,%eax
5bfe(1): pop %rbp
5bff(2): pop %r12
5c01(1): ret near (%rsp)
5c02(6): nop 0x0(%rax,%rax,1)
5c08(5): call 0xffffbd68(%rip)
5c0d(3): cmp $0x9,(%rax)
5c10(1): pop %rbx
5c11(1): pop %rbp
5c12(2): pop %r12
5c14(3): setnz %al
5c17(3): movzx %al,%eax
5c1a(2): neg %eax
5c1c(1): ret near (%rsp)

"hard_locale" :
5c20(4): sub $0x8,%rsp
5c24(2): xor %esi,%esi
5c26(5): call 0xffffbfca(%rip)
5c2b(3): mov %rax,%rdx
5c2e(5): mov $0x1,%eax
5c33(3): test %rdx,%rdx
5c36(2): jz 0x1f(%rip)
5c38(7): lea 0x1551(%rip),%rdi
5c3f(5): mov $0x2,%ecx
5c44(3): mov %rdx,%rsi
5c47(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5c49(3): setnbe %cl
5c4c(3): sbb $0x0,%cl
5c4f(2): xor %eax,%eax
5c51(2): test %cl,%cl
5c53(2): jnz 0xd(%rip)
5c55(4): add $0x8,%rsp
5c59(1): ret near (%rsp)
5c5a(6): nop 0x0(%rax,%rax,1)
5c60(7): lea 0x152b(%rip),%rdi
5c67(5): mov $0x6,%ecx
5c6c(3): mov %rdx,%rsi
5c6f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5c71(3): setnbe %al
5c74(2): sbb $0x0,%al
5c76(2): test %al,%al
5c78(3): setnz %al
5c7b(4): add $0x8,%rsp
5c7f(1): ret near (%rsp)

"locale_charset" :
5c80(4): sub $0x8,%rsp
5c84(5): mov $0xe,%edi
5c89(5): call 0xffffbf27(%rip)
5c8e(3): test %rax,%rax
5c91(2): jz 0x1f(%rip)
5c93(3): cmp $0x0,(%rax)
5c96(7): lea 0x14fb(%rip),%rdx
5c9d(4): cmove %rdx,%rax
5ca1(4): add $0x8,%rsp
5ca5(1): ret near (%rsp)
5ca6(a): nop 0x0(%rax,%rax,1)
5cb0(7): lea 0x14e1(%rip),%rax
5cb7(4): add $0x8,%rsp
5cbb(1): ret near (%rsp)

"rpl_fclose" :
5cc0(2): push %r12
5cc2(1): push %rbp
5cc3(1): push %rbx
5cc4(3): mov %rdi,%rbx
5cc7(5): call 0xffffbeb9(%rip)
5ccc(2): test %eax,%eax
5cce(3): mov %rbx,%rdi
5cd1(2): js 0x56(%rip)
5cd3(5): call 0xffffbefd(%rip)
5cd8(2): test %eax,%eax
5cda(2): jnz 0x2e(%rip)
5cdc(3): mov %rbx,%rdi
5cdf(5): call 0x61(%rip)
5ce4(2): test %eax,%eax
5ce6(2): jz 0x3e(%rip)
5ce8(5): call 0xffffbc88(%rip)
5ced(3): mov (%rax),%r12d
5cf0(3): mov %rbx,%rdi
5cf3(3): mov %rax,%rbp
5cf6(5): call 0xffffbd0a(%rip)
5cfb(3): test %r12d,%r12d
5cfe(2): jnz 0x32(%rip)
5d00(1): pop %rbx
5d01(1): pop %rbp
5d02(2): pop %r12
5d04(1): ret near (%rsp)
5d05(3): nop (%rax)
5d08(3): mov %rbx,%rdi
5d0b(5): call 0xffffbe75(%rip)
5d10(2): xor %esi,%esi
5d12(5): mov $0x1,%edx
5d17(2): mov %eax,%edi
5d19(5): call 0xffffbd97(%rip)
5d1e(4): cmp $0xffffffff,%rax
5d22(2): jnz 0xffffffba(%rip)
5d24(3): mov %rbx,%rdi
5d27(1): pop %rbx
5d28(1): pop %rbp
5d29(2): pop %r12
5d2b(5): jmp 0xffffbcd5(%rip)
5d30(4): mov %r12d,0x0(%rbp)
5d34(5): mov $0xffffffff,%eax
5d39(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5d40(3): test %rdi,%rdi
5d43(1): push %rbx
5d44(3): mov %rdi,%rbx
5d47(2): jz 0x13(%rip)
5d49(5): call 0xffffbe87(%rip)
5d4e(2): test %eax,%eax
5d50(2): jz 0xa(%rip)
5d52(6): test $0x100,(%rbx)
5d58(2): jnz 0x10(%rip)
5d5a(3): mov %rbx,%rdi
5d5d(1): pop %rbx
5d5e(5): jmp 0xffffbe42(%rip)
5d63(5): nop 0x0(%rax,%rax,1)
5d68(3): mov %rbx,%rdi
5d6b(5): mov $0x1,%edx
5d70(2): xor %esi,%esi
5d72(5): call 0xe(%rip)
5d77(3): mov %rbx,%rdi
5d7a(1): pop %rbx
5d7b(5): jmp 0xffffbe25(%rip)

"rpl_fseeko" :
5d80(4): mov 0x8(%rdi),%rax
5d84(4): cmp %rax,0x10(%rdi)
5d88(2): jz 0x8(%rip)
5d8a(5): jmp 0xffffbea6(%rip)
5d8f(1): nop 
5d90(4): mov 0x20(%rdi),%rax
5d94(4): cmp %rax,0x28(%rdi)
5d98(2): jnz 0xfffffff2(%rip)
5d9a(5): cmp $0x0,0x48(%rdi)
5d9f(2): jnz 0xffffffeb(%rip)
5da1(2): push %r12
5da3(1): push %rbp
5da4(3): mov %edx,%r12d
5da7(1): push %rbx
5da8(3): mov %rsi,%rbp
5dab(3): mov %rdi,%rbx
5dae(5): call 0xffffbdd2(%rip)
5db3(3): mov %r12d,%edx
5db6(3): mov %rbp,%rsi
5db9(2): mov %eax,%edi
5dbb(5): call 0xffffbcf5(%rip)
5dc0(4): cmp $0xffffffff,%rax
5dc4(2): jz 0xe(%rip)
5dc6(3): and $0xef,(%rbx)
5dc9(7): mov %rax,0x90(%rbx)
5dd0(2): xor %eax,%eax
5dd2(1): pop %rbx
5dd3(1): pop %rbp
5dd4(2): pop %r12
5dd6(1): ret near (%rsp)

"__libc_csu_init" :
5de0(2): push %r15
5de2(2): push %r14
5de4(3): mov %rdx,%r15
5de7(2): push %r13
5de9(2): push %r12
5deb(7): lea 0x202c3e(%rip),%r12
5df2(1): push %rbp
5df3(7): lea 0x202c3e(%rip),%rbp
5dfa(1): push %rbx
5dfb(3): mov %edi,%r13d
5dfe(3): mov %rsi,%r14
5e01(3): sub %r12,%rbp
5e04(4): sub $0x8,%rsp
5e08(4): sar $0x3,%rbp
5e0c(5): call 0xffffbaec(%rip)
5e11(3): test %rbp,%rbp
5e14(2): jz 0x22(%rip)
5e16(2): xor %ebx,%ebx
5e18(8): nop 0x0(%rax,%rax,1)
5e20(3): mov %r15,%rdx
5e23(3): mov %r14,%rsi
5e26(3): mov %r13d,%edi
5e29(4): call 0x0(%r12,%rbx,8)
5e2d(4): add $0x1,%rbx
5e31(3): cmp %rbx,%rbp
5e34(2): jnz 0xffffffec(%rip)
5e36(4): add $0x8,%rsp
5e3a(1): pop %rbx
5e3b(1): pop %rbp
5e3c(2): pop %r12
5e3e(2): pop %r13
5e40(2): pop %r14
5e42(2): pop %r15
5e44(1): ret near (%rsp)

"atexit" :
5e60(7): mov 0x2031a1(%rip),%rdx
5e67(2): xor %esi,%esi
5e69(5): jmp 0xffffbe07(%rip)

"_fini" :
5e70(4): sub $0x8,%rsp
5e74(4): add $0x8,%rsp
5e78(1): ret near (%rsp)

