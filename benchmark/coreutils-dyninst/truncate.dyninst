
"free@plt" :
13e0(6): jmp 0x206a7a(%rip)
13e6(5): push $0x0

"abort@plt" :
13f0(6): jmp 0x206a72(%rip)
13f6(5): push $0x1

"__errno_location@plt" :
1400(6): jmp 0x206a6a(%rip)
1406(5): push $0x2

"strncmp@plt" :
1410(6): jmp 0x206a62(%rip)
1416(5): push $0x3

"_exit@plt" :
1420(6): jmp 0x206a5a(%rip)
1426(5): push $0x4

"__fpending@plt" :
1430(6): jmp 0x206a52(%rip)
1436(5): push $0x5

"textdomain@plt" :
1440(6): jmp 0x206a4a(%rip)
1446(5): push $0x6

"__strtol_internal@plt" :
1450(6): jmp 0x206a42(%rip)
1456(5): push $0x7

"fclose@plt" :
1460(6): jmp 0x206a3a(%rip)
1466(5): push $0x8

"bindtextdomain@plt" :
1470(6): jmp 0x206a32(%rip)
1476(5): push $0x9

"dcgettext@plt" :
1480(6): jmp 0x206a2a(%rip)
1486(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1490(6): jmp 0x206a22(%rip)
1496(5): push $0xb

"strlen@plt" :
14a0(6): jmp 0x206a1a(%rip)
14a6(5): push $0xc

"__stack_chk_fail@plt" :
14b0(6): jmp 0x206a12(%rip)
14b6(5): push $0xd

"getopt_long@plt" :
14c0(6): jmp 0x206a0a(%rip)
14c6(5): push $0xe

"mbrtowc@plt" :
14d0(6): jmp 0x206a02(%rip)
14d6(5): push $0xf

"strchr@plt" :
14e0(6): jmp 0x2069fa(%rip)
14e6(5): push $0x10

"strrchr@plt" :
14f0(6): jmp 0x2069f2(%rip)
14f6(5): push $0x11

"ftruncate@plt" :
1500(6): jmp 0x2069ea(%rip)
1506(5): push $0x12

"lseek@plt" :
1510(6): jmp 0x2069e2(%rip)
1516(5): push $0x13

"__assert_fail@plt" :
1520(6): jmp 0x2069da(%rip)
1526(5): push $0x14

"memset@plt" :
1530(6): jmp 0x2069d2(%rip)
1536(5): push $0x15

"close@plt" :
1540(6): jmp 0x2069ca(%rip)
1546(5): push $0x16

"memcmp@plt" :
1550(6): jmp 0x2069c2(%rip)
1556(5): push $0x17

"fputs_unlocked@plt" :
1560(6): jmp 0x2069ba(%rip)
1566(5): push $0x18

"calloc@plt" :
1570(6): jmp 0x2069b2(%rip)
1576(5): push $0x19

"memcpy@plt" :
1580(6): jmp 0x2069aa(%rip)
1586(5): push $0x1a

"fileno@plt" :
1590(6): jmp 0x2069a2(%rip)
1596(5): push $0x1b

"__xstat@plt" :
15a0(6): jmp 0x20699a(%rip)
15a6(5): push $0x1c

"malloc@plt" :
15b0(6): jmp 0x206992(%rip)
15b6(5): push $0x1d

"fflush@plt" :
15c0(6): jmp 0x20698a(%rip)
15c6(5): push $0x1e

"nl_langinfo@plt" :
15d0(6): jmp 0x206982(%rip)
15d6(5): push $0x1f

"__fxstat@plt" :
15e0(6): jmp 0x20697a(%rip)
15e6(5): push $0x20

"__freading@plt" :
15f0(6): jmp 0x206972(%rip)
15f6(5): push $0x21

"realloc@plt" :
1600(6): jmp 0x20696a(%rip)
1606(5): push $0x22

"setlocale@plt" :
1610(6): jmp 0x206962(%rip)
1616(5): push $0x23

"__printf_chk@plt" :
1620(6): jmp 0x20695a(%rip)
1626(5): push $0x24

"error@plt" :
1630(6): jmp 0x206952(%rip)
1636(5): push $0x25

"open@plt" :
1640(6): jmp 0x20694a(%rip)
1646(5): push $0x26

"fseeko@plt" :
1650(6): jmp 0x206942(%rip)
1656(5): push $0x27

"__cxa_atexit@plt" :
1660(6): jmp 0x20693a(%rip)
1666(5): push $0x28

"exit@plt" :
1670(6): jmp 0x206932(%rip)
1676(5): push $0x29

"fwrite@plt" :
1680(6): jmp 0x20692a(%rip)
1686(5): push $0x2a

"__fprintf_chk@plt" :
1690(6): jmp 0x206922(%rip)
1696(5): push $0x2b

"mbsinit@plt" :
16a0(6): jmp 0x20691a(%rip)
16a6(5): push $0x2c

"iswprint@plt" :
16b0(6): jmp 0x206912(%rip)
16b6(5): push $0x2d

"__ctype_b_loc@plt" :
16c0(6): jmp 0x20690a(%rip)
16c6(5): push $0x2e

".plt.got" :
16d0(6): jmp 0x206922(%rip)
16d6(2): nop 

"_init" :
13b8(4): sub $0x8,%rsp
13bc(7): mov 0x206c25(%rip),%rax
13c3(3): test %rax,%rax
13c6(2): jz 0x4(%rip)
13c8(2): call %rax
13ca(4): add $0x8,%rsp
13ce(1): ret near (%rsp)

"main" :
16e0(2): push %r15
16e2(2): push %r14
16e4(2): push %r13
16e6(2): push %r12
16e8(3): mov %edi,%r13d
16eb(1): push %rbp
16ec(1): push %rbx
16ed(3): mov %rsi,%rbp
16f0(2): xor %ebx,%ebx
16f2(3): xor %r12d,%r12d
16f5(7): sub $0xd8,%rsp
16fc(3): mov (%rsi),%rdi
16ff(9): mov $0x28,%rax
1708(8): mov %rax,0xc8(%rsp)
1710(2): xor %eax,%eax
1712(5): call 0xfae(%rip)
1717(7): lea 0x412b(%rip),%rsi
171e(5): mov $0x6,%edi
1723(5): call 0xfffffeed(%rip)
1728(7): lea 0x41be(%rip),%rsi
172f(7): lea 0x418e(%rip),%rdi
1736(5): call 0xfffffd3a(%rip)
173b(7): lea 0x4182(%rip),%rdi
1742(5): call 0xfffffcfe(%rip)
1747(7): lea 0xec2(%rip),%rdi
174e(5): call 0x40b2(%rip)
1753(7): lea 0x2063c6(%rip),%rcx
175a(7): lea 0x41e0(%rip),%rdx
1761(3): xor %r8d,%r8d
1764(3): mov %rbp,%rsi
1767(3): mov %r13d,%edi
176a(5): call 0xfffffd56(%rip)
176f(3): cmp $0xff,%eax
1772(6): jz 0x23c(%rip)
1778(3): cmp $0x63,%eax
177b(2): jz 0x75(%rip)
177d(2): jle 0x33(%rip)
177f(3): cmp $0x72,%eax
1782(6): jz 0x176(%rip)
1788(3): cmp $0x73,%eax
178b(2): jz 0x75(%rip)
178d(3): cmp $0x6f,%eax
1790(2): jz 0x10(%rip)
1792(5): mov $0x1,%edi
1797(5): call 0xa39(%rip)
179c(4): nop 0x0(%rax)
17a0(7): mov $0x1,0x206931(%rip)
17a7(2): jmp 0xffffffac(%rip)
17a9(7): nop 0x0(%rax)
17b0(5): cmp $0xffffff7d,%eax
17b5(6): jnz 0x848(%rip)
17bb(7): mov 0x2068c6(%rip),%rdi
17c2(7): mov 0x206847(%rip),%rcx
17c9(7): lea 0x4163(%rip),%r8
17d0(7): lea 0x40e9(%rip),%rdx
17d7(7): lea 0x4046(%rip),%rsi
17de(3): xor %r9d,%r9d
17e1(2): xor %eax,%eax
17e3(5): call 0x30cd(%rip)
17e8(2): xor %edi,%edi
17ea(5): call 0xfffffe86(%rip)
17ef(1): nop 
17f0(7): mov $0x1,0x2068e2(%rip)
17f7(5): jmp 0xffffff5c(%rip)
17fc(4): nop 0x0(%rax)
1800(5): call 0xfffffec0(%rip)
1805(3): mov (%rax),%rcx
1808(7): mov 0x206889(%rip),%rax
180f(2): jmp 0x10(%rip)
1811(7): nop 0x0(%rax)
1818(7): mov %rax,0x206879(%rip)
181f(3): movzx (%rax),%esi
1822(3): mov %rax,%rdi
1825(4): add $0x1,%rax
1829(5): test $0x20,0x1(%rcx,%rsi,2)
182e(2): jnz 0xffffffea(%rip)
1830(4): cmp $0x2f,%sil
1834(6): jz 0x150(%rip)
183a(6): jle 0xd1(%rip)
1840(4): cmp $0x3c,%sil
1844(6): jz 0x155(%rip)
184a(4): cmp $0x3e,%sil
184e(2): jnz 0x12(%rip)
1850(4): add $0x1,%rdi
1854(5): mov $0x2,%ebx
1859(7): mov %rdi,0x206838(%rip)
1860(7): mov 0x206831(%rip),%rax
1867(2): jmp 0x10(%rip)
1869(7): nop 0x0(%rax)
1870(7): mov %rax,0x206821(%rip)
1877(3): movzx (%rax),%esi
187a(4): add $0x1,%rax
187e(5): test $0x20,0x1(%rcx,%rsi,2)
1883(3): mov %rsi,%rdx
1886(2): jnz 0xffffffea(%rip)
1888(3): sub $0x2b,%edx
188b(6): and $0xfd,%edx
1891(5): mov $0x5,%edx
1896(6): jnz 0x94(%rip)
189c(2): test %ebx,%ebx
189e(6): jnz 0x80f(%rip)
18a4(7): lea 0x405a(%rip),%rsi
18ab(2): xor %edi,%edi
18ad(5): mov $0x1,%ebx
18b2(6): mov $0x1,%r12d
18b8(5): call 0xfffffbc8(%rip)
18bd(7): mov 0x2067d4(%rip),%rdi
18c4(7): lea 0x4049(%rip),%rcx
18cb(3): mov %rax,%r8
18ce(3): xor %r9d,%r9d
18d1(a): mov $0x9223372036854775807,%rdx
18db(a): mov $0x-9223372036854775808,%rsi
18e5(5): call 0x34db(%rip)
18ea(3): mov %rax,%r15
18ed(5): jmp 0xfffffe66(%rip)
18f2(6): nop 0x0(%rax,%rax,1)
18f8(7): mov 0x206799(%rip),%rax
18ff(7): mov %rax,0x2067ca(%rip)
1906(5): jmp 0xfffffe4d(%rip)
190b(4): cmp $0x25,%sil
190f(6): jnz 0xffffff51(%rip)
1915(4): add $0x1,%rdi
1919(5): mov $0x5,%ebx
191e(7): mov %rdi,0x206773(%rip)
1925(5): jmp 0xffffff3b(%rip)
192a(7): lea 0x3fd4(%rip),%rsi
1931(2): xor %edi,%edi
1933(5): call 0xfffffb4d(%rip)
1938(7): mov 0x206759(%rip),%rdi
193f(7): lea 0x3fce(%rip),%rcx
1946(3): xor %r9d,%r9d
1949(3): mov %rax,%r8
194c(a): mov $0x9223372036854775807,%rdx
1956(a): mov $0x-9223372036854775808,%rsi
1960(5): call 0x3460(%rip)
1965(3): mov %rax,%r15
1968(3): lea 0xfffffffc(%rbx),%eax
196b(3): cmp $0x1,%eax
196e(2): jnbe 0xb(%rip)
1970(3): test %r15,%r15
1973(6): jz 0x6d7(%rip)
1979(6): mov $0x1,%r12d
197f(5): jmp 0xfffffdd4(%rip)
1984(4): add $0x1,%rdi
1988(5): mov $0x4,%ebx
198d(7): mov %rdi,0x206704(%rip)
1994(5): jmp 0xfffffecc(%rip)
1999(4): add $0x1,%rdi
199d(5): mov $0x3,%ebx
19a2(7): mov %rdi,0x2066ef(%rip)
19a9(5): jmp 0xfffffeb7(%rip)
19ae(7): movsxd 0x2066db(%rip),%rdx
19b5(7): mov 0x206714(%rip),%r14
19bc(3): sub %edx,%r13d
19bf(3): test %r14,%r14
19c2(5): lea 0x0(%rbp,%rdx,8),%rbp
19c7(6): jz 0x54d(%rip)
19cd(2): test %ebx,%ebx
19cf(2): jnz 0x58(%rip)
19d1(3): test %r12b,%r12b
19d4(2): jz 0x53(%rip)
19d6(7): lea 0x3f6b(%rip),%rsi
19dd(5): mov $0x1,%edi
19e2(5): call 0x29ce(%rip)
19e7(7): lea 0x3f66(%rip),%rsi
19ee(2): xor %edi,%edi
19f0(3): mov %rax,%rbp
19f3(5): call 0x29bd(%rip)
19f8(7): lea 0x4579(%rip),%rsi
19ff(3): mov %rax,%rbx
1a02(5): mov $0x5,%edx
1a07(2): xor %edi,%edi
1a09(5): call 0xfffffa77(%rip)
1a0e(3): mov %rbp,%r8
1a11(3): mov %rax,%rdx
1a14(3): mov %rbx,%rcx
1a17(2): xor %esi,%esi
1a19(2): xor %edi,%edi
1a1b(2): xor %eax,%eax
1a1d(5): call 0xfffffc13(%rip)
1a22(5): jmp 0xfffffd70(%rip)
1a27(7): cmp $0x1,0x2066aa(%rip)
1a2e(2): jnz 0x3a(%rip)
1a30(3): test %r12b,%r12b
1a33(2): jnz 0x35(%rip)
1a35(7): lea 0x3f18(%rip),%rsi
1a3c(5): mov $0x1,%edi
1a41(5): call 0x296f(%rip)
1a46(7): lea 0x3f0e(%rip),%rsi
1a4d(2): xor %edi,%edi
1a4f(3): mov %rax,%rbp
1a52(5): call 0x295e(%rip)
1a57(5): mov $0x5,%edx
1a5c(3): mov %rax,%rbx
1a5f(7): lea 0x453a(%rip),%rsi
1a66(2): jmp 0xffffffa1(%rip)
1a68(3): test %r13d,%r13d
1a6b(6): jle 0x4bb(%rip)
1a71(5): lea 0x30(%rsp),%rdx
1a76(3): mov %r14,%rsi
1a79(5): mov $0x1,%edi
1a7e(5): call 0xfffffb22(%rip)
1a83(2): test %eax,%eax
1a85(6): jnz 0x5e9(%rip)
1a8b(4): mov 0x48(%rsp),%eax
1a8f(5): and $0xd000,%eax
1a94(5): cmp $0x8000,%eax
1a99(6): jnz 0x11e(%rip)
1a9f(5): mov 0x60(%rsp),%rax
1aa4(3): test %rax,%rax
1aa7(5): mov %rax,0x18(%rsp)
1aac(6): js 0x15d(%rip)
1ab2(3): test %r12b,%r12b
1ab5(2): jnz 0x10(%rip)
1ab7(5): mov 0x18(%rsp),%r15
1abc(9): mov $0xffffffff,0x18(%rsp)
1ac5(7): cmp $0x1,0x20660d(%rip)
1acc(5): mov $0x0,0x10(%rsp)
1ad1(5): mov %r15,0x8(%rsp)
1ad6(2): sbb %eax,%eax
1ad8(3): and $0x40,%eax
1adb(5): add $0x801,%eax
1ae0(4): mov %eax,0x14(%rsp)
1ae4(5): lea 0x30(%rsp),%rax
1ae9(5): mov %rax,0x20(%rsp)
1aee(2): nop 
1af0(4): add $0x8,%rbp
1af4(4): mov 0xfffffff8(%rbp),%r13
1af8(3): test %r13,%r13
1afb(6): jz 0x33d(%rip)
1b01(4): mov 0x14(%rsp),%esi
1b05(2): xor %eax,%eax
1b07(5): mov $0x1b6,%edx
1b0c(3): mov %r13,%rdi
1b0f(5): call 0xfffffb31(%rip)
1b14(3): cmp $0xff,%eax
1b17(3): mov %eax,%r15d
1b1a(6): jz 0x132(%rip)
1b20(7): cmp $0x0,0x2065b1(%rip)
1b27(6): jnz 0x1fd(%rip)
1b2d(2): test %ebx,%ebx
1b2f(6): jz 0x177(%rip)
1b35(6): cmp $0x0,0x18(%rsp)
1b3b(6): jns 0x16b(%rip)
1b41(5): mov 0x20(%rsp),%rdx
1b46(2): mov %eax,%esi
1b48(5): mov $0x1,%edi
1b4d(5): call 0xfffffa93(%rip)
1b52(2): test %eax,%eax
1b54(6): jz 0x28e(%rip)
1b5a(3): mov %r13,%rsi
1b5d(5): mov $0x4,%edi
1b62(5): call 0x259e(%rip)
1b67(7): lea 0x3e52(%rip),%rsi
1b6e(3): mov %rax,%r12
1b71(5): mov $0x5,%edx
1b76(2): xor %edi,%edi
1b78(5): call 0xfffff908(%rip)
1b7d(3): mov %rax,%r14
1b80(5): call 0xfffff880(%rip)
1b85(2): mov (%rax),%esi
1b87(3): mov %r14,%rdx
1b8a(3): mov %r12,%rcx
1b8d(2): xor %edi,%edi
1b8f(2): xor %eax,%eax
1b91(3): xor %r14d,%r14d
1b94(5): call 0xfffffa9c(%rip)
1b99(3): mov %r15d,%edi
1b9c(5): call 0xfffff9a4(%rip)
1ba1(2): test %eax,%eax
1ba3(6): jnz 0x1f9(%rip)
1ba9(4): xor $0x1,%r14d
1bad(5): or %r14b,0x10(%rsp)
1bb2(5): jmp 0xffffff3e(%rip)
1bb7(2): xor %esi,%esi
1bb9(3): mov %r14,%rdi
1bbc(2): xor %eax,%eax
1bbe(5): call 0xfffffa82(%rip)
1bc3(3): mov %eax,%r13d
1bc6(5): call 0xfffff83a(%rip)
1bcb(3): test %r13d,%r13d
1bce(3): mov %rax,%r14
1bd1(2): js 0x38(%rip)
1bd3(2): xor %esi,%esi
1bd5(5): mov $0x2,%edx
1bda(3): mov %r13d,%edi
1bdd(5): call 0xfffff933(%rip)
1be2(3): mov (%r14),%ecx
1be5(3): mov %r13d,%edi
1be8(5): mov %rax,0x18(%rsp)
1bed(4): mov %ecx,0x10(%rsp)
1bf1(5): call 0xfffff94f(%rip)
1bf6(6): cmp $0x0,0x18(%rsp)
1bfc(6): jns 0xfffffeb6(%rip)
1c02(4): mov 0x10(%rsp),%eax
1c06(3): mov %eax,(%r14)
1c09(7): mov 0x2064c0(%rip),%rsi
1c10(5): mov $0x4,%edi
1c15(5): call 0x24eb(%rip)
1c1a(7): lea 0x3d6a(%rip),%rsi
1c21(5): mov $0x5,%edx
1c26(2): xor %edi,%edi
1c28(3): mov %rax,%rbp
1c2b(5): call 0xfffff855(%rip)
1c30(3): mov %rax,%rbx
1c33(5): call 0xfffff7cd(%rip)
1c38(2): mov (%rax),%esi
1c3a(3): mov %rbp,%rcx
1c3d(3): mov %rbx,%rdx
1c40(5): mov $0x1,%edi
1c45(2): xor %eax,%eax
1c47(5): call 0xfffff9e9(%rip)
1c4c(5): call 0xfffff7b4(%rip)
1c51(7): cmp $0x0,0x206481(%rip)
1c58(3): mov %rax,%r12
1c5b(2): jz 0xb(%rip)
1c5d(3): cmp $0x2,(%rax)
1c60(6): jz 0xfffffe90(%rip)
1c66(3): mov %r13,%rsi
1c69(5): mov $0x4,%edi
1c6e(5): call 0x2492(%rip)
1c73(7): lea 0x3d2b(%rip),%rsi
1c7a(5): mov $0x5,%edx
1c7f(2): xor %edi,%edi
1c81(3): mov %rax,%r13
1c84(5): call 0xfffff7fc(%rip)
1c89(4): mov (%r12),%esi
1c8d(3): mov %rax,%rdx
1c90(3): mov %r13,%rcx
1c93(2): xor %edi,%edi
1c95(2): xor %eax,%eax
1c97(5): call 0xfffff999(%rip)
1c9c(5): mov $0x1,0x10(%rsp)
1ca1(5): jmp 0xfffffe4f(%rip)
1ca6(5): mov 0x8(%rsp),%r12
1cab(2): test %ebx,%ebx
1cad(6): jnz 0x13a(%rip)
1cb3(3): test %r12,%r12
1cb6(5): mov $0x0,%eax
1cbb(4): cmovs %rax,%r12
1cbf(3): mov %r12,%rsi
1cc2(3): mov %r15d,%edi
1cc5(6): mov $0x1,%r14d
1ccb(5): call 0xfffff835(%rip)
1cd0(3): add $0x1,%eax
1cd3(6): jnz 0xfffffec6(%rip)
1cd9(3): mov %r13,%rsi
1cdc(5): mov $0x4,%edi
1ce1(5): call 0x241f(%rip)
1ce6(7): lea 0x4383(%rip),%rsi
1ced(5): mov $0x5,%edx
1cf2(2): xor %edi,%edi
1cf4(3): mov %rax,%r14
1cf7(5): call 0xfffff789(%rip)
1cfc(5): mov %rax,0x28(%rsp)
1d01(5): call 0xfffff6ff(%rip)
1d06(5): mov 0x28(%rsp),%rdx
1d0b(2): mov (%rax),%esi
1d0d(3): mov %r14,%rcx
1d10(3): mov %r12,%r8
1d13(2): xor %edi,%edi
1d15(2): xor %eax,%eax
1d17(3): xor %r14d,%r14d
1d1a(5): call 0xfffff916(%rip)
1d1f(5): jmp 0xfffffe7a(%rip)
1d24(5): mov 0x20(%rsp),%rdx
1d29(2): mov %eax,%esi
1d2b(5): mov $0x1,%edi
1d30(5): call 0xfffff8b0(%rip)
1d35(2): test %eax,%eax
1d37(6): jnz 0xfffffe23(%rip)
1d3d(5): mov 0x68(%rsp),%r12
1d42(a): mov $0x2305843009213693951,%rcx
1d4c(5): lea 0xffffffff(%r12),%rax
1d51(3): cmp %rcx,%rax
1d54(5): mov $0x200,%eax
1d59(4): cmovnbe %rax,%r12
1d5d(a): mov $0x-9223372036854775808,%rax
1d67(2): cdq %rax
1d69(3): idiv %r12,%rax
1d6c(5): cmp %rax,0x8(%rsp)
1d71(6): jl 0xf5(%rip)
1d77(a): mov $0x9223372036854775807,%rax
1d81(2): cdq %rax
1d83(3): idiv %r12,%rax
1d86(5): cmp %rax,0x8(%rsp)
1d8b(6): jnle 0xdb(%rip)
1d91(6): imul 0x8(%rsp),%r12
1d97(5): jmp 0xffffff14(%rip)
1d9c(3): mov %r13,%rsi
1d9f(5): mov $0x4,%edi
1da4(5): call 0x235c(%rip)
1da9(7): lea 0x3c20(%rip),%rsi
1db0(5): mov $0x5,%edx
1db5(2): xor %edi,%edi
1db7(3): mov %rax,%r13
1dba(5): call 0xfffff6c6(%rip)
1dbf(3): mov %rax,%r12
1dc2(5): call 0xfffff63e(%rip)
1dc7(2): mov (%rax),%esi
1dc9(3): mov %r13,%rcx
1dcc(3): mov %r12,%rdx
1dcf(2): xor %edi,%edi
1dd1(2): xor %eax,%eax
1dd3(5): call 0xfffff85d(%rip)
1dd8(5): mov $0x1,0x10(%rsp)
1ddd(5): jmp 0xfffffd13(%rip)
1de2(5): mov 0x8(%rsp),%r12
1de7(5): mov 0x18(%rsp),%rax
1dec(4): cmp $0xffffffff,%rax
1df0(6): jz 0xba(%rip)
1df6(3): cmp $0x2,%ebx
1df9(6): jz 0x10f(%rip)
1dff(3): cmp $0x3,%ebx
1e02(6): jz 0x14f(%rip)
1e08(3): cmp $0x4,%ebx
1e0b(6): jz 0x152(%rip)
1e11(3): cmp $0x5,%ebx
1e14(6): jz 0x190(%rip)
1e1a(a): mov $0x9223372036854775807,%rdx
1e24(3): sub %rax,%rdx
1e27(3): cmp %rdx,%r12
1e2a(6): jnle 0x1b2(%rip)
1e30(3): add %rax,%r12
1e33(5): jmp 0xfffffe80(%rip)
1e38(8): mov 0xc8(%rsp),%rbx
1e40(9): xor $0x28,%rbx
1e49(5): movzx 0x10(%rsp),%eax
1e4e(6): jnz 0x1c1(%rip)
1e54(7): add $0xd8,%rsp
1e5b(1): pop %rbx
1e5c(1): pop %rbp
1e5d(2): pop %r12
1e5f(2): pop %r13
1e61(2): pop %r14
1e63(2): pop %r15
1e65(1): ret near (%rsp)
1e66(3): mov %r13,%rsi
1e69(5): mov $0x4,%edi
1e6e(5): call 0x2292(%rip)
1e73(7): lea 0x4146(%rip),%rsi
1e7a(5): mov $0x5,%edx
1e7f(2): xor %edi,%edi
1e81(3): mov %rax,%r14
1e84(5): call 0xfffff5fc(%rip)
1e89(5): mov 0x8(%rsp),%rcx
1e8e(3): mov %r14,%r9
1e91(3): mov %rax,%rdx
1e94(3): mov %r12,%r8
1e97(2): xor %esi,%esi
1e99(2): xor %edi,%edi
1e9b(2): xor %eax,%eax
1e9d(3): xor %r14d,%r14d
1ea0(5): call 0xfffff790(%rip)
1ea5(5): jmp 0xfffffcf4(%rip)
1eaa(4): mov 0x48(%rsp),%eax
1eae(5): and $0xd000,%eax
1eb3(5): cmp $0x8000,%eax
1eb8(6): jnz 0xb3(%rip)
1ebe(5): mov 0x60(%rsp),%rax
1ec3(3): test %rax,%rax
1ec6(6): jns 0xffffff30(%rip)
1ecc(3): mov %r13,%rsi
1ecf(5): mov $0x4,%edi
1ed4(5): call 0x222c(%rip)
1ed9(7): lea 0x4110(%rip),%rsi
1ee0(3): mov %rax,%r12
1ee3(5): mov $0x5,%edx
1ee8(2): xor %edi,%edi
1eea(3): xor %r14d,%r14d
1eed(5): call 0xfffff593(%rip)
1ef2(3): mov %r12,%rcx
1ef5(3): mov %rax,%rdx
1ef8(2): xor %esi,%esi
1efa(2): xor %edi,%edi
1efc(2): xor %eax,%eax
1efe(5): call 0xfffff732(%rip)
1f03(5): jmp 0xfffffc96(%rip)
1f08(3): cmp %rax,%r12
1f0b(4): cmovnae %rax,%r12
1f0f(5): jmp 0xfffffda4(%rip)
1f14(3): test %r12b,%r12b
1f17(6): jz 0xfd(%rip)
1f1d(3): test %r13d,%r13d
1f20(6): jnle 0xfffffb9c(%rip)
1f26(7): lea 0x3a3a(%rip),%rsi
1f2d(5): mov $0x5,%edx
1f32(2): xor %edi,%edi
1f34(5): call 0xfffff54c(%rip)
1f39(2): xor %edi,%edi
1f3b(3): mov %rax,%rdx
1f3e(2): xor %esi,%esi
1f40(2): xor %eax,%eax
1f42(5): call 0xfffff6ee(%rip)
1f47(5): mov $0x1,%edi
1f4c(5): call 0x284(%rip)
1f51(3): cmp %rax,%r12
1f54(4): cmovnbe %rax,%r12
1f58(5): jmp 0xfffffd67(%rip)
1f5d(2): xor %edx,%edx
1f5f(3): div %r12,%rax
1f62(4): imul %rax,%r12
1f66(5): jmp 0xfffffd4d(%rip)
1f6b(2): xor %esi,%esi
1f6d(5): mov $0x2,%edx
1f72(3): mov %r15d,%edi
1f75(5): call 0xfffff59b(%rip)
1f7a(3): test %rax,%rax
1f7d(6): jns 0xfffffe79(%rip)
1f83(3): mov %r13,%rsi
1f86(5): mov $0x4,%edi
1f8b(5): call 0x2175(%rip)
1f90(5): mov $0x5,%edx
1f95(3): mov %rax,%r12
1f98(7): lea 0x39ec(%rip),%rsi
1f9f(5): jmp 0xfffffbd7(%rip)
1fa4(5): lea 0xffffffff(%r12,%rax,1),%rax
1fa9(2): xor %edx,%edx
1fab(3): div %r12,%rax
1fae(4): imul %rax,%r12
1fb2(3): test %r12,%r12
1fb5(6): jns 0xfffffd0a(%rip)
1fbb(3): mov %r13,%rsi
1fbe(5): mov $0x4,%edi
1fc3(5): call 0x213d(%rip)
1fc8(5): mov $0x5,%edx
1fcd(3): mov %rax,%r12
1fd0(7): lea 0x4049(%rip),%rsi
1fd7(5): jmp 0xffffff11(%rip)
1fdc(3): mov %r13,%rsi
1fdf(5): mov $0x4,%edi
1fe4(5): call 0x211c(%rip)
1fe9(5): mov $0x5,%edx
1fee(3): mov %rax,%r12
1ff1(7): lea 0x4050(%rip),%rsi
1ff8(5): jmp 0xfffffef0(%rip)
1ffd(5): cmp $0xffffff7e,%eax
2002(6): jnz 0xfffff790(%rip)
2008(2): xor %edi,%edi
200a(5): call 0x1c6(%rip)
200f(5): call 0xfffff4a1(%rip)
2014(7): lea 0x392d(%rip),%rsi
201b(5): mov $0x1,%edi
2020(5): call 0x2390(%rip)
2025(7): lea 0x3928(%rip),%rsi
202c(2): xor %edi,%edi
202e(3): mov %rax,%rbp
2031(5): call 0x237f(%rip)
2036(5): mov $0x5,%edx
203b(3): mov %rax,%rbx
203e(7): lea 0x3f0b(%rip),%rsi
2045(5): jmp 0xfffff9c2(%rip)
204a(7): lea 0x38d1(%rip),%rsi
2051(5): mov $0x5,%edx
2056(2): xor %edi,%edi
2058(5): call 0xfffff428(%rip)
205d(2): xor %esi,%esi
205f(3): mov %rax,%rdx
2062(5): mov $0x1,%edi
2067(2): xor %eax,%eax
2069(5): call 0xfffff5c7(%rip)
206e(3): mov %r14,%rsi
2071(5): mov $0x4,%edi
2076(5): call 0x208a(%rip)
207b(7): lea 0x38fa(%rip),%rsi
2082(5): mov $0x5,%edx
2087(2): xor %edi,%edi
2089(3): mov %rax,%rbp
208c(5): call 0xfffff3f4(%rip)
2091(3): mov %rax,%rbx
2094(5): call 0xfffff36c(%rip)
2099(2): mov (%rax),%esi
209b(3): mov %rbp,%rcx
209e(3): mov %rbx,%rdx
20a1(5): mov $0x1,%edi
20a6(2): xor %eax,%eax
20a8(5): call 0xfffff588(%rip)
20ad(7): lea 0x3e74(%rip),%rsi
20b4(5): jmp 0xfffffe7e(%rip)

"_start" :
20c0(2): xor %ebp,%ebp
20c2(3): mov %rdx,%r9
20c5(1): pop %rsi
20c6(3): mov %rsp,%rdx
20c9(4): and $0xfffffff0,%rsp
20cd(1): push %rax
20ce(1): push %rsp
20cf(7): lea 0x371a(%rip),%r8
20d6(7): lea 0x36a3(%rip),%rcx
20dd(7): lea 0xfffff5fc(%rip),%rdi
20e4(6): call 0x205ef6(%rip)
20ea(1): hlt 

"deregister_tm_clones" :
20f0(7): lea 0x205f89(%rip),%rdi
20f7(1): push %rbp
20f8(7): lea 0x205f81(%rip),%rax
20ff(3): cmp %rdi,%rax
2102(3): mov %rsp,%rbp
2105(2): jz 0x1b(%rip)
2107(7): mov 0x205eca(%rip),%rax
210e(3): test %rax,%rax
2111(2): jz 0xf(%rip)
2113(1): pop %rbp
2114(2): jmp %rax
2116(a): nop 0x0(%rax,%rax,1)
2120(1): pop %rbp
2121(1): ret near (%rsp)

"register_tm_clones" :
2130(7): lea 0x205f49(%rip),%rdi
2137(7): lea 0x205f42(%rip),%rsi
213e(1): push %rbp
213f(3): sub %rdi,%rsi
2142(3): mov %rsp,%rbp
2145(4): sar $0x3,%rsi
2149(3): mov %rsi,%rax
214c(4): shr $0x3f,%rax
2150(3): add %rax,%rsi
2153(3): sar $0x1,%rsi
2156(2): jz 0x1a(%rip)
2158(7): mov 0x205e91(%rip),%rax
215f(3): test %rax,%rax
2162(2): jz 0xe(%rip)
2164(1): pop %rbp
2165(2): jmp %rax
2167(9): nop 0x0(%rax,%rax,1)
2170(1): pop %rbp
2171(1): ret near (%rsp)

"__do_global_dtors_aux" :
2180(7): cmp $0x0,0x205f41(%rip)
2187(2): jnz 0x31(%rip)
2189(8): cmp $0x0,0x205e67(%rip)
2191(1): push %rbp
2192(3): mov %rsp,%rbp
2195(2): jz 0xe(%rip)
2197(7): mov 0x205e6a(%rip),%rdi
219e(5): call 0xfffff532(%rip)
21a3(5): call 0xffffff4d(%rip)
21a8(7): mov $0x1,0x205f19(%rip)
21af(1): pop %rbp
21b0(1): ret near (%rsp)
21b1(7): nop 0x0(%rax)
21b8(2): REP ret near (%rsp)

"frame_dummy" :
21c0(1): push %rbp
21c1(3): mov %rsp,%rbp
21c4(1): pop %rbp
21c5(5): jmp 0xffffff6b(%rip)

"usage" :
21d0(2): push %r13
21d2(2): push %r12
21d4(5): mov $0x5,%edx
21d9(1): push %rbp
21da(1): push %rbx
21db(2): mov %edi,%ebp
21dd(7): sub $0x88,%rsp
21e4(7): mov 0x205f05(%rip),%rbx
21eb(9): mov $0x28,%rax
21f4(5): mov %rax,0x78(%rsp)
21f9(2): xor %eax,%eax
21fb(2): test %edi,%edi
21fd(2): jz 0x30(%rip)
21ff(7): lea 0x37fa(%rip),%rsi
2206(2): xor %edi,%edi
2208(5): call 0xfffff278(%rip)
220d(7): mov 0x205eac(%rip),%rdi
2214(3): mov %rax,%rdx
2217(3): mov %rbx,%rcx
221a(5): mov $0x1,%esi
221f(2): xor %eax,%eax
2221(5): call 0xfffff46f(%rip)
2226(2): mov %ebp,%edi
2228(5): call 0xfffff448(%rip)
222d(7): lea 0x35f9(%rip),%rsi
2234(2): xor %edi,%edi
2236(5): call 0xfffff24a(%rip)
223b(3): mov %rbx,%rdx
223e(3): mov %rax,%rsi
2241(5): mov $0x1,%edi
2246(2): xor %eax,%eax
2248(5): call 0xfffff3d8(%rip)
224d(7): mov 0x205e34(%rip),%rbx
2254(7): lea 0x37cd(%rip),%rsi
225b(5): mov $0x5,%edx
2260(2): xor %edi,%edi
2262(5): call 0xfffff21e(%rip)
2267(3): mov %rbx,%rsi
226a(3): mov %rax,%rdi
226d(5): call 0xfffff2f3(%rip)
2272(7): mov 0x205e0f(%rip),%rbx
2279(7): lea 0x38b8(%rip),%rsi
2280(5): mov $0x5,%edx
2285(2): xor %edi,%edi
2287(5): call 0xfffff1f9(%rip)
228c(3): mov %rbx,%rsi
228f(3): mov %rax,%rdi
2292(5): call 0xfffff2ce(%rip)
2297(7): mov 0x205dea(%rip),%rbx
229e(7): lea 0x38e3(%rip),%rsi
22a5(5): mov $0x5,%edx
22aa(2): xor %edi,%edi
22ac(5): call 0xfffff1d4(%rip)
22b1(3): mov %rbx,%rsi
22b4(3): mov %rax,%rdi
22b7(5): call 0xfffff2a9(%rip)
22bc(7): mov 0x205dc5(%rip),%rbx
22c3(7): lea 0x38f6(%rip),%rsi
22ca(5): mov $0x5,%edx
22cf(2): xor %edi,%edi
22d1(5): call 0xfffff1af(%rip)
22d6(3): mov %rbx,%rsi
22d9(3): mov %rax,%rdi
22dc(5): call 0xfffff284(%rip)
22e1(7): mov 0x205da0(%rip),%rbx
22e8(7): lea 0x3921(%rip),%rsi
22ef(5): mov $0x5,%edx
22f4(2): xor %edi,%edi
22f6(5): call 0xfffff18a(%rip)
22fb(3): mov %rbx,%rsi
22fe(3): mov %rax,%rdi
2301(5): call 0xfffff25f(%rip)
2306(7): mov 0x205d7b(%rip),%rbx
230d(7): lea 0x396c(%rip),%rsi
2314(5): mov $0x5,%edx
2319(2): xor %edi,%edi
231b(5): call 0xfffff165(%rip)
2320(3): mov %rbx,%rsi
2323(3): mov %rax,%rdi
2326(5): call 0xfffff23a(%rip)
232b(7): mov 0x205d56(%rip),%rbx
2332(7): lea 0x3977(%rip),%rsi
2339(5): mov $0x5,%edx
233e(2): xor %edi,%edi
2340(5): call 0xfffff140(%rip)
2345(3): mov %rbx,%rsi
2348(3): mov %rax,%rdi
234b(5): call 0xfffff215(%rip)
2350(7): mov 0x205d31(%rip),%rbx
2357(7): lea 0x398a(%rip),%rsi
235e(5): mov $0x5,%edx
2363(2): xor %edi,%edi
2365(5): call 0xfffff11b(%rip)
236a(3): mov %rbx,%rsi
236d(3): mov %rax,%rdi
2370(5): call 0xfffff1f0(%rip)
2375(7): mov 0x205d0c(%rip),%rbx
237c(7): lea 0x3a3d(%rip),%rsi
2383(5): mov $0x5,%edx
2388(2): xor %edi,%edi
238a(5): call 0xfffff0f6(%rip)
238f(3): mov %rbx,%rsi
2392(3): mov %rax,%rdi
2395(7): lea 0x3488(%rip),%rbx
239c(5): call 0xfffff1c4(%rip)
23a1(7): lea 0x34a2(%rip),%rax
23a8(7): lea 0x34dc(%rip),%rcx
23af(9): mov $0x0,0x60(%rsp)
23b8(9): mov $0x0,0x68(%rsp)
23c1(3): mov %rsp,%rdx
23c4(4): mov %rax,(%rsp)
23c8(7): lea 0x347d(%rip),%rax
23cf(5): mov %rcx,0x30(%rsp)
23d4(7): lea 0x34ba(%rip),%rcx
23db(5): mov %rax,0x8(%rsp)
23e0(7): lea 0x34dd(%rip),%rax
23e7(5): mov %rcx,0x40(%rsp)
23ec(7): lea 0x34ac(%rip),%rcx
23f3(5): mov %rax,0x10(%rsp)
23f8(7): lea 0x345d(%rip),%rax
23ff(5): mov %rcx,0x50(%rsp)
2404(5): mov %rax,0x18(%rsp)
2409(7): lea 0x3462(%rip),%rax
2410(5): mov %rax,0x20(%rsp)
2415(7): lea 0x3460(%rip),%rax
241c(5): mov %rax,0x28(%rsp)
2421(5): mov %rax,0x38(%rsp)
2426(5): mov %rax,0x48(%rsp)
242b(5): mov %rax,0x58(%rsp)
2430(4): add $0x10,%rdx
2434(3): mov (%rdx),%rdi
2437(3): test %rdi,%rdi
243a(2): jz 0x15(%rip)
243c(5): mov $0x9,%ecx
2441(3): mov %rbx,%rsi
2444(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2446(3): setnbe %al
2449(2): sbb $0x0,%al
244b(2): test %al,%al
244d(2): jnz 0xffffffe3(%rip)
244f(4): mov 0x8(%rdx),%r12
2453(2): xor %edi,%edi
2455(5): mov $0x5,%edx
245a(7): lea 0x3448(%rip),%rsi
2461(3): test %r12,%r12
2464(6): jz 0xc7(%rip)
246a(5): call 0xfffff016(%rip)
246f(7): lea 0x3a0a(%rip),%rcx
2476(7): lea 0x3443(%rip),%rdx
247d(3): mov %rax,%rsi
2480(5): mov $0x1,%edi
2485(2): xor %eax,%eax
2487(5): call 0xfffff199(%rip)
248c(2): xor %esi,%esi
248e(5): mov $0x5,%edi
2493(5): call 0xfffff17d(%rip)
2498(3): test %rax,%rax
249b(2): jz 0x1e(%rip)
249d(7): lea 0x342a(%rip),%rsi
24a4(5): mov $0x3,%edx
24a9(3): mov %rax,%rdi
24ac(5): call 0xffffef64(%rip)
24b1(2): test %eax,%eax
24b3(6): jnz 0x10d(%rip)
24b9(7): lea 0x3412(%rip),%rsi
24c0(2): xor %edi,%edi
24c2(5): mov $0x5,%edx
24c7(5): call 0xffffefb9(%rip)
24cc(7): lea 0x3351(%rip),%rcx
24d3(7): lea 0x39a6(%rip),%rdx
24da(3): mov %rax,%rsi
24dd(5): mov $0x1,%edi
24e2(2): xor %eax,%eax
24e4(5): call 0xfffff13c(%rip)
24e9(3): cmp %rbx,%r12
24ec(7): lea 0x3373(%rip),%rcx
24f3(7): lea 0x334f(%rip),%rbx
24fa(4): cmove %rcx,%rbx
24fe(7): lea 0x39eb(%rip),%rsi
2505(2): xor %edi,%edi
2507(5): mov $0x5,%edx
250c(5): call 0xffffef74(%rip)
2511(3): mov %rbx,%rcx
2514(3): mov %rax,%rsi
2517(3): mov %r12,%rdx
251a(5): mov $0x1,%edi
251f(2): xor %eax,%eax
2521(5): call 0xfffff0ff(%rip)
2526(5): jmp 0xfffffd00(%rip)
252b(5): call 0xffffef55(%rip)
2530(7): lea 0x3949(%rip),%rcx
2537(7): lea 0x3382(%rip),%rdx
253e(3): mov %rax,%rsi
2541(5): mov $0x1,%edi
2546(2): xor %eax,%eax
2548(5): call 0xfffff0d8(%rip)
254d(2): xor %esi,%esi
254f(5): mov $0x5,%edi
2554(5): call 0xfffff0bc(%rip)
2559(3): test %rax,%rax
255c(2): jz 0x1a(%rip)
255e(7): lea 0x3369(%rip),%rsi
2565(5): mov $0x3,%edx
256a(3): mov %rax,%rdi
256d(5): call 0xffffeea3(%rip)
2572(2): test %eax,%eax
2574(2): jnz 0x45(%rip)
2576(7): lea 0x3355(%rip),%rsi
257d(5): mov $0x5,%edx
2582(2): xor %edi,%edi
2584(7): lea 0x3299(%rip),%r12
258b(7): lea 0x32d4(%rip),%rbx
2592(5): call 0xffffeeee(%rip)
2597(7): lea 0x3286(%rip),%rcx
259e(7): lea 0x38db(%rip),%rdx
25a5(3): mov %rax,%rsi
25a8(5): mov $0x1,%edi
25ad(2): xor %eax,%eax
25af(5): call 0xfffff071(%rip)
25b4(5): jmp 0xffffff4a(%rip)
25b9(7): lea 0x3264(%rip),%r12
25c0(7): mov 0x205ac1(%rip),%r13
25c7(7): lea 0x38da(%rip),%rsi
25ce(2): xor %edi,%edi
25d0(5): mov $0x5,%edx
25d5(5): call 0xffffeeab(%rip)
25da(3): mov %r13,%rsi
25dd(3): mov %rax,%rdi
25e0(5): call 0xffffef80(%rip)
25e5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
25f0(7): mov %rdi,0x205af1(%rip)
25f7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2600(7): mov %dil,0x205ad9(%rip)
2607(1): ret near (%rsp)

"close_stdout" :
2610(1): push %rbp
2611(1): push %rbx
2612(4): sub $0x8,%rsp
2616(7): mov 0x205a6b(%rip),%rdi
261d(5): call 0x2f23(%rip)
2622(2): test %eax,%eax
2624(2): jz 0x18(%rip)
2626(5): call 0xffffedda(%rip)
262b(7): cmp $0x0,0x205aae(%rip)
2632(3): mov %rax,%rbx
2635(2): jz 0x1e(%rip)
2637(3): cmp $0x20,(%rax)
263a(2): jnz 0x19(%rip)
263c(7): mov 0x205a7d(%rip),%rdi
2643(5): call 0x2efd(%rip)
2648(2): test %eax,%eax
264a(2): jnz 0x48(%rip)
264c(4): add $0x8,%rsp
2650(1): pop %rbx
2651(1): pop %rbp
2652(1): ret near (%rsp)
2653(7): lea 0x3a3e(%rip),%rsi
265a(2): xor %edi,%edi
265c(5): mov $0x5,%edx
2661(5): call 0xffffee1f(%rip)
2666(7): mov 0x205a7b(%rip),%rdi
266d(3): mov %rax,%rbp
2670(3): test %rdi,%rdi
2673(2): jz 0x2a(%rip)
2675(5): call 0x1b5b(%rip)
267a(2): mov (%rbx),%esi
267c(7): lea 0x3a21(%rip),%rdx
2683(3): mov %rax,%rcx
2686(3): mov %rbp,%r8
2689(2): xor %edi,%edi
268b(2): xor %eax,%eax
268d(5): call 0xffffefa3(%rip)
2692(6): mov 0x205980(%rip),%edi
2698(5): call 0xffffed88(%rip)
269d(2): mov (%rbx),%esi
269f(7): lea 0x3a02(%rip),%rdx
26a6(3): mov %rax,%rcx
26a9(2): xor %edi,%edi
26ab(2): xor %eax,%eax
26ad(5): call 0xffffef83(%rip)
26b2(2): jmp 0xffffffe0(%rip)

"set_program_name" :
26c0(3): test %rdi,%rdi
26c3(1): push %rbx
26c4(2): jz 0x79(%rip)
26c6(5): mov $0x2f,%esi
26cb(3): mov %rdi,%rbx
26ce(5): call 0xffffee22(%rip)
26d3(3): test %rax,%rax
26d6(2): jz 0x57(%rip)
26d8(4): lea 0x1(%rax),%r8
26dc(3): mov %r8,%rdx
26df(3): sub %rbx,%rdx
26e2(4): cmp $0x6,%rdx
26e6(2): jle 0x47(%rip)
26e8(4): lea 0xfffffffa(%rax),%rsi
26ec(7): lea 0x39f5(%rip),%rdi
26f3(5): mov $0x7,%ecx
26f8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
26fa(3): setnbe %dl
26fd(3): sbb $0x0,%dl
2700(2): test %dl,%dl
2702(2): jnz 0x2b(%rip)
2704(7): lea 0x39e5(%rip),%rdi
270b(5): mov $0x3,%ecx
2710(3): mov %r8,%rsi
2713(3): mov %r8,%rbx
2716(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2718(3): setnbe %dl
271b(3): sbb $0x0,%dl
271e(2): test %dl,%dl
2720(2): jnz 0xd(%rip)
2722(4): lea 0x4(%rax),%rbx
2726(7): mov %rbx,0x205953(%rip)
272d(7): mov %rbx,0x2059bc(%rip)
2734(7): mov %rbx,0x205965(%rip)
273b(1): pop %rbx
273c(1): ret near (%rsp)
273d(7): mov 0x20597c(%rip),%rcx
2744(7): lea 0x3965(%rip),%rdi
274b(5): mov $0x37,%edx
2750(5): mov $0x1,%esi
2755(5): call 0xffffef2b(%rip)
275a(5): call 0xffffec96(%rip)

"gettext_quote.part.1" :
2760(1): push %rbp
2761(1): push %rbx
2762(3): mov %rdi,%rbp
2765(2): mov %esi,%ebx
2767(4): sub $0x8,%rsp
276b(5): call 0x2eb5(%rip)
2770(3): movzx (%rax),%edx
2773(3): and $0xdf,%edx
2776(3): cmp $0x55,%dl
2779(2): jz 0x77(%rip)
277b(3): cmp $0x47,%dl
277e(2): jz 0x22(%rip)
2780(7): lea 0x397c(%rip),%rax
2787(7): lea 0x3977(%rip),%rdx
278e(3): cmp $0x9,%ebx
2791(4): cmovne %rdx,%rax
2795(4): add $0x8,%rsp
2799(1): pop %rbx
279a(1): pop %rbp
279b(1): ret near (%rsp)
279c(4): nop 0x0(%rax)
27a0(4): movzx 0x1(%rax),%edx
27a4(3): and $0xdf,%edx
27a7(3): cmp $0x42,%dl
27aa(2): jnz 0xffffffd6(%rip)
27ac(4): cmp $0x31,0x2(%rax)
27b0(2): jnz 0xffffffd0(%rip)
27b2(4): cmp $0x38,0x3(%rax)
27b6(2): jnz 0xffffffca(%rip)
27b8(4): cmp $0x30,0x4(%rax)
27bc(2): jnz 0xffffffc4(%rip)
27be(4): cmp $0x33,0x5(%rax)
27c2(2): jnz 0xffffffbe(%rip)
27c4(4): cmp $0x30,0x6(%rax)
27c8(2): jnz 0xffffffb8(%rip)
27ca(4): cmp $0x0,0x7(%rax)
27ce(2): jnz 0xffffffb2(%rip)
27d0(4): cmp $0x60,0x0(%rbp)
27d4(7): lea 0x3921(%rip),%rax
27db(7): lea 0x391e(%rip),%rdx
27e2(4): cmovne %rdx,%rax
27e6(4): add $0x8,%rsp
27ea(1): pop %rbx
27eb(1): pop %rbp
27ec(1): ret near (%rsp)
27ed(3): nop (%rax)
27f0(4): movzx 0x1(%rax),%edx
27f4(3): and $0xdf,%edx
27f7(3): cmp $0x54,%dl
27fa(2): jnz 0xffffff86(%rip)
27fc(4): movzx 0x2(%rax),%edx
2800(3): and $0xdf,%edx
2803(3): cmp $0x46,%dl
2806(6): jnz 0xffffff7a(%rip)
280c(4): cmp $0x2d,0x3(%rax)
2810(6): jnz 0xffffff70(%rip)
2816(4): cmp $0x38,0x4(%rax)
281a(6): jnz 0xffffff66(%rip)
2820(4): cmp $0x0,0x5(%rax)
2824(6): jnz 0xffffff5c(%rip)
282a(4): cmp $0x60,0x0(%rbp)
282e(7): lea 0x38bf(%rip),%rax
2835(7): lea 0x38bc(%rip),%rdx
283c(4): cmovne %rdx,%rax
2840(4): add $0x8,%rsp
2844(1): pop %rbx
2845(1): pop %rbp
2846(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2850(2): push %r15
2852(2): push %r14
2854(3): mov %r8d,%r15d
2857(2): push %r13
2859(2): push %r12
285b(3): mov %rdi,%r14
285e(1): push %rbp
285f(1): push %rbx
2860(3): mov %r9d,%ebx
2863(3): mov %rsi,%r13
2866(3): mov %rcx,%rbp
2869(3): and $0x2,%ebx
286c(7): sub $0xb8,%rsp
2873(8): mov 0xf0(%rsp),%rax
287b(5): mov %rdx,0x10(%rsp)
2880(5): mov %r8d,0x8(%rsp)
2885(5): mov %r9d,0x78(%rsp)
288a(5): mov %rax,0x20(%rsp)
288f(8): mov 0xf8(%rsp),%rax
2897(5): mov %rax,0x68(%rsp)
289c(8): mov 0x100(%rsp),%rax
28a4(5): mov %rax,0x60(%rsp)
28a9(9): mov $0x28,%rax
28b2(8): mov %rax,0xa8(%rsp)
28ba(2): xor %eax,%eax
28bc(5): call 0xffffebd4(%rip)
28c1(4): cmp $0xa,%r15d
28c5(5): mov %rax,0x58(%rsp)
28ca(6): jnbe 0x11b5(%rip)
28d0(7): lea 0x3889(%rip),%rcx
28d7(3): mov %r15d,%edx
28da(4): movsxd 0x0(%rcx,%rdx,4),%rax
28de(3): add %rcx,%rax
28e1(2): jmp %rax
28e3(5): mov $0x1,0xe(%rsp)
28e8(5): mov $0x0,0x7c(%rsp)
28ed(3): xor %r12d,%r12d
28f0(9): mov $0x0,0x50(%rsp)
28f9(5): mov $0x1,0xf(%rsp)
28fe(5): mov $0x0,0xd(%rsp)
2903(7): lea 0x37fb(%rip),%rax
290a(9): mov $0x1,0x18(%rsp)
2913(3): xor %r15d,%r15d
2916(8): mov $0x2,0x8(%rsp)
291e(5): mov %rax,0x48(%rsp)
2923(3): xor %r11d,%r11d
2926(3): mov %rbp,%rax
2929(3): mov %r12d,%r8d
292c(3): mov %r11,%rbp
292f(3): mov %rax,%r11
2932(6): nop 0x0(%rax,%rax,1)
2938(3): cmp %rbp,%r11
293b(4): setnz %r12b
293f(4): cmp $0xffffffff,%r11
2943(2): jnz 0xf(%rip)
2945(5): mov 0x10(%rsp),%rax
294a(4): cmp $0x0,0x0(%rax,%rbp,1)
294e(4): setnz %r12b
2952(3): test %r12b,%r12b
2955(6): jz 0x65b(%rip)
295b(5): cmp $0x2,0x8(%rsp)
2960(5): mov 0x10(%rsp),%rdi
2965(4): lea 0x0(%rdi,%rbp,1),%r9
2969(3): setnz %al
296c(4): and 0xd(%rsp),%al
2970(3): mov %eax,%r10d
2973(6): jz 0xad(%rip)
2979(5): mov 0x18(%rsp),%rax
297e(3): test %rax,%rax
2981(6): jz 0x42f(%rip)
2987(4): cmp $0xffffffff,%r11
298b(5): lea 0x0(%rbp,%rax,1),%rbx
2990(2): jnz 0x30(%rip)
2992(4): cmp $0x1,%rax
2996(2): jbe 0x2a(%rip)
2998(5): mov %r8b,0x38(%rsp)
299d(5): mov %r10b,0x30(%rsp)
29a2(5): mov %r9,0x28(%rsp)
29a7(5): call 0xffffeaf9(%rip)
29ac(6): movzx 0x38(%rsp),%r8d
29b2(6): movzx 0x30(%rsp),%r10d
29b8(3): mov %rax,%r11
29bb(5): mov 0x28(%rsp),%r9
29c0(3): cmp %r11,%rbx
29c3(5): mov %r10b,0x28(%rsp)
29c8(6): jnbe 0x5b8(%rip)
29ce(5): mov 0x18(%rsp),%rdx
29d3(5): mov 0x48(%rsp),%rsi
29d8(3): mov %r9,%rdi
29db(5): mov %r11,0x40(%rsp)
29e0(5): mov %r8b,0x38(%rsp)
29e5(5): mov %r9,0x30(%rsp)
29ea(5): call 0xffffeb66(%rip)
29ef(2): test %eax,%eax
29f1(5): mov 0x30(%rsp),%r9
29f6(6): movzx 0x38(%rsp),%r8d
29fc(5): mov 0x40(%rsp),%r11
2a01(6): jnz 0x57f(%rip)
2a07(5): cmp $0x0,0xf(%rsp)
2a0c(6): movzx 0x28(%rsp),%r10d
2a12(6): jnz 0xf83(%rip)
2a18(8): nop 0x0(%rax,%rax,1)
2a20(4): movzx (%r9),%ebx
2a24(3): cmp $0x7e,%bl
2a27(6): jnbe 0x321(%rip)
2a2d(7): lea 0x3758(%rip),%rcx
2a34(3): movzx %bl,%edx
2a37(4): movsxd 0x0(%rcx,%rdx,4),%rax
2a3b(3): add %rcx,%rax
2a3e(2): jmp %rax
2a40(3): xor %r10d,%r10d
2a43(4): cmp $0x1,%r11
2a47(3): setnz %al
2a4a(4): cmp $0xffffffff,%r11
2a4e(2): jnz 0xe(%rip)
2a50(5): mov 0x10(%rsp),%rax
2a55(4): cmp $0x0,0x1(%rax)
2a59(3): setnz %al
2a5c(5): cmp $0x2,0x8(%rsp)
2a61(3): setz %dl
2a64(2): test %al,%al
2a66(6): jz 0x252(%rip)
2a6c(3): xor %r12d,%r12d
2a6f(2): xor %eax,%eax
2a71(7): nop 0x0(%rax)
2a78(5): cmp $0x1,0xd(%rsp)
2a7d(6): jnz 0x115(%rip)
2a83(2): test %dl,%dl
2a85(6): jnz 0x10d(%rip)
2a8b(5): mov 0x20(%rsp),%rsi
2a90(3): test %rsi,%rsi
2a93(2): jz 0x16(%rip)
2a95(2): mov %ebx,%edx
2a97(3): shr $0x5,%dl
2a9a(3): movzx %dl,%edx
2a9d(3): mov 0x0(%rsi,%rdx,4),%edx
2aa0(3): bt %ebx,%edx
2aa3(6): jb 0x150(%rip)
2aa9(3): test %r10b,%r10b
2aac(6): jnz 0x147(%rip)
2ab2(3): xor $0x1,%eax
2ab5(4): add $0x1,%rbp
2ab9(3): and %r8d,%eax
2abc(2): test %al,%al
2abe(2): jz 0x22(%rip)
2ac0(3): cmp %r15,%r13
2ac3(2): jbe 0x7(%rip)
2ac5(5): mov $0x27,0x0(%r14,%r15,1)
2aca(4): lea 0x1(%r15),%rax
2ace(3): cmp %rax,%r13
2ad1(2): jbe 0x8(%rip)
2ad3(6): mov $0x27,0x1(%r14,%r15,1)
2ad9(4): add $0x2,%r15
2add(3): xor %r8d,%r8d
2ae0(3): cmp %r13,%r15
2ae3(2): jnb 0x6(%rip)
2ae5(4): mov %bl,0x0(%r14,%r15,1)
2ae9(5): movzx 0xe(%rsp),%edi
2aee(4): add $0x1,%r15
2af2(5): mov $0x0,%eax
2af7(3): test %r12b,%r12b
2afa(3): cmove %eax,%edi
2afd(5): mov %dil,0xe(%rsp)
2b02(5): jmp 0xfffffe36(%rip)
2b07(9): nop 0x0(%rax,%rax,1)
2b10(3): xor %r10d,%r10d
2b13(4): mov 0x8(%rsp),%eax
2b17(3): cmp $0x2,%eax
2b1a(6): jz 0x5be(%rip)
2b20(3): cmp $0x5,%eax
2b23(6): jz 0x575(%rip)
2b29(3): cmp $0x2,%eax
2b2c(5): mov $0x3f,%ebx
2b31(3): setz %dl
2b34(3): xor %r12d,%r12d
2b37(2): xor %eax,%eax
2b39(5): jmp 0xffffff3f(%rip)
2b3e(2): nop 
2b40(3): xor %r10d,%r10d
2b43(5): cmp $0x2,0x8(%rsp)
2b48(6): jz 0x508(%rip)
2b4e(5): mov %r12b,0x7c(%rsp)
2b53(2): xor %edx,%edx
2b55(2): xor %eax,%eax
2b57(5): mov $0x27,%ebx
2b5c(5): jmp 0xffffff1c(%rip)
2b61(7): nop 0x0(%rax)
2b68(5): mov $0x9,%edx
2b6d(5): mov $0x74,%ebx
2b72(5): cmp $0x2,0x8(%rsp)
2b77(3): setz %al
2b7a(4): and 0xf(%rsp),%al
2b7e(6): jnz 0x150(%rip)
2b84(5): cmp $0x0,0xd(%rsp)
2b89(2): jnz 0x67(%rip)
2b8b(2): mov %edx,%ebx
2b8d(3): xor %r12d,%r12d
2b90(2): xor %eax,%eax
2b92(5): cmp $0x0,0xf(%rsp)
2b97(6): jnz 0xfffffef4(%rip)
2b9d(5): jmp 0xffffff0c(%rip)
2ba2(6): nop 0x0(%rax,%rax,1)
2ba8(5): mov $0x8,%edx
2bad(5): mov $0x62,%ebx
2bb2(2): jmp 0xffffffd2(%rip)
2bb4(4): nop 0x0(%rax)
2bb8(5): cmp $0x2,0x8(%rsp)
2bbd(6): jz 0x3d3(%rip)
2bc3(5): cmp $0x0,0xd(%rsp)
2bc8(6): jz 0x218(%rip)
2bce(5): cmp $0x0,0xf(%rsp)
2bd3(6): jz 0x20d(%rip)
2bd9(6): cmp $0x0,0x18(%rsp)
2bdf(6): jnz 0x3bc(%rip)
2be5(5): mov $0x5c,%ebx
2bea(6): nop 0x0(%rax,%rax,1)
2bf0(3): xor %r12d,%r12d
2bf3(5): cmp $0x2,0x8(%rsp)
2bf8(3): setz %dl
2bfb(5): cmp $0x0,0xf(%rsp)
2c00(2): mov %edx,%eax
2c02(6): jnz 0x856(%rip)
2c08(3): mov %r8d,%eax
2c0b(3): xor $0x1,%eax
2c0e(2): and %dl,%al
2c10(2): jz 0x31(%rip)
2c12(3): cmp %r15,%r13
2c15(2): jbe 0x7(%rip)
2c17(5): mov $0x27,0x0(%r14,%r15,1)
2c1c(4): lea 0x1(%r15),%rdx
2c20(3): cmp %rdx,%r13
2c23(2): jbe 0x8(%rip)
2c25(6): mov $0x24,0x1(%r14,%r15,1)
2c2b(4): lea 0x2(%r15),%rdx
2c2f(3): cmp %rdx,%r13
2c32(2): jbe 0x8(%rip)
2c34(6): mov $0x27,0x2(%r14,%r15,1)
2c3a(4): add $0x3,%r15
2c3e(3): mov %eax,%r8d
2c41(3): cmp %r15,%r13
2c44(2): jbe 0x7(%rip)
2c46(5): mov $0x5c,0x0(%r14,%r15,1)
2c4b(4): add $0x1,%r15
2c4f(4): add $0x1,%rbp
2c53(5): jmp 0xfffffe8d(%rip)
2c58(8): nop 0x0(%rax,%rax,1)
2c60(5): cmp $0x0,0xd(%rsp)
2c65(6): jnz 0x1ce(%rip)
2c6b(2): xor %edx,%edx
2c6d(5): test $0x1,0x78(%rsp)
2c72(6): jz 0xffffff19(%rip)
2c78(4): add $0x1,%rbp
2c7c(5): jmp 0xfffffcbc(%rip)
2c81(7): nop 0x0(%rax)
2c88(5): cmp $0x2,0x8(%rsp)
2c8d(3): setz %dl
2c90(2): xor %eax,%eax
2c92(5): jmp 0xfffffde6(%rip)
2c97(9): nop 0x0(%rax,%rax,1)
2ca0(5): mov $0x7,%edx
2ca5(5): mov $0x61,%ebx
2caa(5): jmp 0xfffffeda(%rip)
2caf(1): nop 
2cb0(5): cmp $0x2,0x8(%rsp)
2cb5(3): setz %dl
2cb8(3): test %rbp,%rbp
2cbb(6): jnz 0xfffffdb1(%rip)
2cc1(5): movzx 0xf(%rsp),%eax
2cc6(2): and %dl,%al
2cc8(6): jz 0xfffffdb0(%rip)
2cce(3): mov %r11,%rbp
2cd1(8): mov $0x2,0x8(%rsp)
2cd9(5): jmp 0x700(%rip)
2cde(2): nop 
2ce0(5): cmp $0x2,0x8(%rsp)
2ce5(3): setz %dl
2ce8(3): xor %r12d,%r12d
2ceb(2): jmp 0xffffffd6(%rip)
2ced(3): nop (%rax)
2cf0(5): cmp $0x2,0x8(%rsp)
2cf5(5): mov $0x20,%ebx
2cfa(3): setz %dl
2cfd(2): jmp 0xffffffc4(%rip)
2cff(1): nop 
2d00(5): mov $0xd,%edx
2d05(5): mov $0x72,%ebx
2d0a(5): jmp 0xfffffe68(%rip)
2d0f(1): nop 
2d10(5): mov $0xc,%edx
2d15(5): mov $0x66,%ebx
2d1a(5): jmp 0xfffffe6a(%rip)
2d1f(1): nop 
2d20(5): mov $0xb,%edx
2d25(5): mov $0x76,%ebx
2d2a(5): jmp 0xfffffe5a(%rip)
2d2f(1): nop 
2d30(5): mov $0xa,%edx
2d35(5): mov $0x6e,%ebx
2d3a(5): jmp 0xfffffe38(%rip)
2d3f(1): nop 
2d40(3): xor %r10d,%r10d
2d43(5): nop 0x0(%rax,%rax,1)
2d48(6): cmp $0x1,0x58(%rsp)
2d4e(6): jnz 0x3aa(%rip)
2d54(5): mov %r11,0x38(%rsp)
2d59(5): mov %r8b,0x30(%rsp)
2d5e(5): mov %r10b,0x28(%rsp)
2d63(5): call 0xffffe95d(%rip)
2d68(3): mov (%rax),%rcx
2d6b(3): movzx %bl,%edx
2d6e(6): movzx 0x28(%rsp),%r10d
2d74(6): movzx 0x30(%rsp),%r8d
2d7a(5): mov 0x38(%rsp),%r11
2d7f(5): mov $0x1,%edi
2d84(4): movzx 0x0(%rcx,%rdx,2),%eax
2d88(4): and $0x4000,%ax
2d8c(4): setnz %r12b
2d90(3): setz %al
2d93(4): and 0xd(%rsp),%al
2d97(2): test %al,%al
2d99(6): jnz 0x998(%rip)
2d9f(5): cmp $0x2,0x8(%rsp)
2da4(3): setz %dl
2da7(5): jmp 0xfffffcd1(%rip)
2dac(4): nop 0x0(%rax)
2db0(4): movzx (%r9),%ebx
2db4(3): cmp $0x7e,%bl
2db7(2): jnbe 0xffffff89(%rip)
2db9(7): lea 0x35c8(%rip),%rcx
2dc0(3): movzx %bl,%edx
2dc3(4): movsxd 0x0(%rcx,%rdx,4),%rax
2dc7(3): add %rcx,%rax
2dca(2): jmp %rax
2dcc(4): nop 0x0(%rax)
2dd0(3): xor %r10d,%r10d
2dd3(5): cmp $0x0,0xd(%rsp)
2dd8(6): jnz 0xfffffdf6(%rip)
2dde(2): nop 
2de0(5): mov $0x5c,%edx
2de5(5): mov $0x5c,%ebx
2dea(5): jmp 0xfffffd9a(%rip)
2def(1): nop 
2df0(5): mov $0xc,%edx
2df5(3): xor %r10d,%r10d
2df8(5): mov $0x66,%ebx
2dfd(5): jmp 0xfffffd87(%rip)
2e02(6): nop 0x0(%rax,%rax,1)
2e08(5): mov $0xa,%edx
2e0d(3): xor %r10d,%r10d
2e10(5): mov $0x6e,%ebx
2e15(5): jmp 0xfffffd5d(%rip)
2e1a(6): nop 0x0(%rax,%rax,1)
2e20(5): mov $0x61,%ebx
2e25(5): jmp 0xfffffdcb(%rip)
2e2a(6): nop 0x0(%rax,%rax,1)
2e30(3): xor %r10d,%r10d
2e33(5): cmp $0x2,0x8(%rsp)
2e38(3): setz %dl
2e3b(5): cmp $0x0,0xf(%rsp)
2e40(6): jnz 0xb9a(%rip)
2e46(3): mov %r8d,%eax
2e49(3): mov %r15,%rcx
2e4c(3): xor $0x1,%eax
2e4f(2): and %dl,%al
2e51(2): jz 0x2f(%rip)
2e53(3): cmp %r15,%r13
2e56(2): jbe 0x7(%rip)
2e58(5): mov $0x27,0x0(%r14,%r15,1)
2e5d(4): lea 0x1(%r15),%rcx
2e61(3): cmp %rcx,%r13
2e64(2): jbe 0x8(%rip)
2e66(6): mov $0x24,0x1(%r14,%r15,1)
2e6c(4): lea 0x2(%r15),%rcx
2e70(3): cmp %rcx,%r13
2e73(6): jnbe 0x636(%rip)
2e79(4): lea 0x3(%r15),%rcx
2e7d(3): mov %eax,%r8d
2e80(3): cmp %rcx,%r13
2e83(2): jbe 0x7(%rip)
2e85(5): mov $0x5c,0x0(%r14,%rcx,1)
2e8a(5): cmp $0x2,0x8(%rsp)
2e8f(4): lea 0x1(%rcx),%r15
2e93(6): jz 0x606(%rip)
2e99(4): lea 0x1(%rbp),%rax
2e9d(3): cmp %r11,%rax
2ea0(2): jnb 0x1b(%rip)
2ea2(5): mov 0x10(%rsp),%rax
2ea7(5): movzx 0x1(%rax,%rbp,1),%eax
2eac(4): mov %al,0x28(%rsp)
2eb0(3): sub $0x30,%eax
2eb3(2): cmp $0x9,%al
2eb5(6): jbe 0x834(%rip)
2ebb(3): mov %r12d,%eax
2ebe(5): mov $0x30,%ebx
2ec3(3): xor %r12d,%r12d
2ec6(5): jmp 0xfffffbb2(%rip)
2ecb(5): nop 0x0(%rax,%rax,1)
2ed0(5): cmp $0x2,0x8(%rsp)
2ed5(3): mov %r10d,%r12d
2ed8(3): setz %dl
2edb(3): xor %r10d,%r10d
2ede(2): xor %eax,%eax
2ee0(5): jmp 0xfffffb98(%rip)
2ee5(3): nop (%rax)
2ee8(5): cmp $0x2,0x8(%rsp)
2eed(3): setz %dl
2ef0(3): xor %r10d,%r10d
2ef3(5): jmp 0xfffffdc5(%rip)
2ef8(8): nop 0x0(%rax,%rax,1)
2f00(5): cmp $0x2,0x8(%rsp)
2f05(3): setz %dl
2f08(3): xor %r10d,%r10d
2f0b(3): xor %r12d,%r12d
2f0e(5): jmp 0xfffffdb3(%rip)
2f13(5): nop 0x0(%rax,%rax,1)
2f18(5): cmp $0x2,0x8(%rsp)
2f1d(3): mov %r10d,%r12d
2f20(5): mov $0x20,%ebx
2f25(3): setz %dl
2f28(3): xor %r10d,%r10d
2f2b(5): jmp 0xfffffd96(%rip)
2f30(5): mov $0xd,%edx
2f35(3): xor %r10d,%r10d
2f38(5): mov $0x72,%ebx
2f3d(5): jmp 0xfffffc35(%rip)
2f42(6): nop 0x0(%rax,%rax,1)
2f48(5): mov $0x76,%ebx
2f4d(5): jmp 0xfffffca3(%rip)
2f52(6): nop 0x0(%rax,%rax,1)
2f58(5): mov $0x9,%edx
2f5d(3): xor %r10d,%r10d
2f60(5): mov $0x74,%ebx
2f65(5): jmp 0xfffffc0d(%rip)
2f6a(6): nop 0x0(%rax,%rax,1)
2f70(5): mov $0x62,%ebx
2f75(5): jmp 0xfffffc7b(%rip)
2f7a(6): nop 0x0(%rax,%rax,1)
2f80(3): xor %r10d,%r10d
2f83(5): jmp 0xfffffa9d(%rip)
2f88(8): nop 0x0(%rax,%rax,1)
2f90(5): cmp $0x0,0xf(%rsp)
2f95(6): jnz 0x96b(%rip)
2f9b(4): add $0x1,%rbp
2f9f(3): mov %r8d,%eax
2fa2(3): xor %r12d,%r12d
2fa5(5): mov $0x5c,%ebx
2faa(5): jmp 0xfffffb12(%rip)
2faf(1): nop 
2fb0(5): cmp $0x2,0x8(%rsp)
2fb5(5): movzx 0xf(%rsp),%ebx
2fba(3): mov %r8d,%r12d
2fbd(3): mov %r11,%rbp
2fc0(3): setz %dl
2fc3(2): mov %ebx,%eax
2fc5(3): test %r15,%r15
2fc8(3): setz %cl
2fcb(2): and %edx,%eax
2fcd(2): and %cl,%al
2fcf(6): jnz 0xa67(%rip)
2fd5(2): mov %ebx,%eax
2fd7(3): xor $0x1,%eax
2fda(2): and %al,%dl
2fdc(6): jz 0x970(%rip)
2fe2(5): cmp $0x0,0x7c(%rsp)
2fe7(6): jz 0x963(%rip)
2fed(5): cmp $0x0,0xe(%rsp)
2ff2(6): jnz 0x9fb(%rip)
2ff8(3): test %r13,%r13
2ffb(3): setz %al
2ffe(6): cmp $0x0,0x50(%rsp)
3004(3): setnz %dl
3007(2): and %dl,%al
3009(6): jz 0xa23(%rip)
300f(5): mov 0x50(%rsp),%r13
3014(7): lea 0x30ea(%rip),%rbx
301b(4): mov $0x27,(%r14)
301f(8): mov $0x2,0x8(%rsp)
3027(6): mov $0x1,%r15d
302d(9): mov $0x1,0x18(%rsp)
3036(5): mov $0x0,0xf(%rsp)
303b(5): mov %rbx,0x48(%rsp)
3040(4): mov %al,0x7c(%rsp)
3044(5): jmp 0xfffff8df(%rip)
3049(7): nop 0x0(%rax)
3050(5): cmp $0x0,0xf(%rsp)
3055(6): jnz 0x8ab(%rip)
305b(3): test %r13,%r13
305e(6): jz 0x402(%rip)
3064(2): xor %edx,%edx
3066(6): cmp $0x0,0x50(%rsp)
306c(6): jnz 0x3f4(%rip)
3072(5): mov %r13,0x50(%rsp)
3077(4): add $0x3,%r15
307b(2): xor %eax,%eax
307d(5): mov %r12b,0x7c(%rsp)
3082(3): xor %r8d,%r8d
3085(3): mov %rdx,%r13
3088(5): mov $0x27,%ebx
308d(5): jmp 0xfffffa1c(%rip)
3092(6): nop 0x0(%rax,%rax,1)
3098(5): test $0x4,0x78(%rsp)
309d(2): jz 0x23(%rip)
309f(4): lea 0x2(%rbp),%rcx
30a3(3): cmp %r11,%rcx
30a6(2): jnb 0x1a(%rip)
30a8(5): mov 0x10(%rsp),%rax
30ad(5): cmp $0x3f,0x1(%rax,%rbp,1)
30b2(6): jz 0x790(%rip)
30b8(8): nop 0x0(%rax,%rax,1)
30c0(2): xor %edx,%edx
30c2(3): xor %r12d,%r12d
30c5(2): xor %eax,%eax
30c7(5): mov $0x3f,%ebx
30cc(5): jmp 0xfffff9ac(%rip)
30d1(7): nop 0x0(%rax)
30d8(5): cmp $0x0,0xf(%rsp)
30dd(6): jnz 0x823(%rip)
30e3(3): xor %r12d,%r12d
30e6(2): xor %eax,%eax
30e8(5): mov $0x3f,%ebx
30ed(5): jmp 0xfffff9bc(%rip)
30f2(6): nop 0x0(%rax,%rax,1)
30f8(8): lea 0xa0(%rsp),%rax
3100(4): cmp $0xffffffff,%r11
3104(c): mov $0x0,0xa0(%rsp)
3110(5): mov %rax,0x28(%rsp)
3115(2): jnz 0x2f(%rip)
3117(5): mov 0x10(%rsp),%rdi
311c(5): mov %r8b,0x40(%rsp)
3121(5): mov %r10b,0x38(%rsp)
3126(5): mov %r9,0x30(%rsp)
312b(5): call 0xffffe375(%rip)
3130(6): movzx 0x40(%rsp),%r8d
3136(6): movzx 0x38(%rsp),%r10d
313c(3): mov %rax,%r11
313f(5): mov 0x30(%rsp),%r9
3144(8): lea 0x9c(%rsp),%rax
314c(2): xor %ecx,%ecx
314e(4): mov %bl,0x7e(%rsp)
3152(5): mov %r8b,0x7d(%rsp)
3157(3): mov %rcx,%rbx
315a(8): mov %r9,0x88(%rsp)
3162(5): mov %rax,0x38(%rsp)
3167(5): mov %r10b,0x7f(%rsp)
316c(8): mov %r15,0x80(%rsp)
3174(5): mov %r14,0x40(%rsp)
3179(5): mov %r13,0x70(%rsp)
317e(5): mov %r11,0x30(%rsp)
3183(5): mov 0x10(%rsp),%rax
3188(5): lea 0x0(%rbp,%rbx,1),%r14
318d(5): mov 0x30(%rsp),%rdx
3192(5): mov 0x28(%rsp),%rcx
3197(5): mov 0x38(%rsp),%rdi
319c(4): lea 0x0(%rax,%r14,1),%r13
31a0(3): sub %r14,%rdx
31a3(3): mov %r13,%rsi
31a6(5): call 0x230a(%rip)
31ab(3): test %rax,%rax
31ae(3): mov %rax,%r15
31b1(2): jz 0x50(%rip)
31b3(4): cmp $0xffffffff,%rax
31b7(6): jz 0x61e(%rip)
31bd(4): cmp $0xfffffffe,%rax
31c1(6): jz 0x5a0(%rip)
31c7(5): cmp $0x2,0x8(%rsp)
31cc(3): setz %al
31cf(4): and 0xf(%rsp),%al
31d3(6): jnz 0x19d(%rip)
31d9(7): mov 0x9c(%rsp),%edi
31e0(5): call 0xffffe4d0(%rip)
31e5(5): mov 0x28(%rsp),%rdi
31ea(2): test %eax,%eax
31ec(5): mov $0x0,%eax
31f1(4): cmove %eax,%r12d
31f5(3): add %r15,%rbx
31f8(5): call 0xffffe4a8(%rip)
31fd(2): test %eax,%eax
31ff(2): jz 0xffffff84(%rip)
3201(3): mov %r12d,%edx
3204(3): mov %rbx,%rdi
3207(6): movzx 0x7d(%rsp),%r8d
320d(3): xor $0x1,%edx
3210(5): movzx 0x7e(%rsp),%ebx
3215(6): movzx 0x7f(%rsp),%r10d
321b(4): and 0xd(%rsp),%dl
321f(8): mov 0x80(%rsp),%r15
3227(5): mov 0x40(%rsp),%r14
322c(5): mov 0x70(%rsp),%r13
3231(5): mov 0x30(%rsp),%r11
3236(4): cmp $0x1,%rdi
323a(6): jbe 0x601(%rip)
3240(3): mov %rdi,%rcx
3243(2): xor %esi,%esi
3245(6): movzx 0xf(%rsp),%r9d
324b(3): add %rbp,%rcx
324e(5): mov 0x10(%rsp),%rdi
3253(5): jmp 0xbb(%rip)
3258(8): nop 0x0(%rax,%rax,1)
3260(5): cmp $0x2,0x8(%rsp)
3265(3): setz %al
3268(3): test %r9b,%r9b
326b(6): jnz 0x4b5(%rip)
3271(3): mov %r8d,%esi
3274(3): xor $0x1,%esi
3277(3): and %sil,%al
327a(2): jz 0x31(%rip)
327c(3): cmp %r15,%r13
327f(2): jbe 0x7(%rip)
3281(5): mov $0x27,0x0(%r14,%r15,1)
3286(4): lea 0x1(%r15),%rsi
328a(3): cmp %rsi,%r13
328d(2): jbe 0x8(%rip)
328f(6): mov $0x24,0x1(%r14,%r15,1)
3295(4): lea 0x2(%r15),%rsi
3299(3): cmp %rsi,%r13
329c(2): jbe 0x8(%rip)
329e(6): mov $0x27,0x2(%r14,%r15,1)
32a4(4): add $0x3,%r15
32a8(3): mov %eax,%r8d
32ab(3): cmp %r15,%r13
32ae(2): jbe 0x7(%rip)
32b0(5): mov $0x5c,0x0(%r14,%r15,1)
32b5(4): lea 0x1(%r15),%rax
32b9(3): cmp %rax,%r13
32bc(2): jbe 0xf(%rip)
32be(2): mov %ebx,%eax
32c0(3): shr $0x6,%al
32c3(3): add $0x30,%eax
32c6(5): mov %al,0x1(%r14,%r15,1)
32cb(4): lea 0x2(%r15),%rax
32cf(3): cmp %rax,%r13
32d2(2): jbe 0x12(%rip)
32d4(2): mov %ebx,%eax
32d6(3): shr $0x3,%al
32d9(3): and $0x7,%eax
32dc(3): add $0x30,%eax
32df(5): mov %al,0x2(%r14,%r15,1)
32e4(3): and $0x7,%ebx
32e7(4): add $0x1,%rbp
32eb(4): add $0x3,%r15
32ef(3): add $0x30,%ebx
32f2(3): cmp %rcx,%rbp
32f5(6): jnb 0xfffff7eb(%rip)
32fb(2): mov %edx,%esi
32fd(3): cmp %r15,%r13
3300(2): jbe 0x6(%rip)
3302(4): mov %bl,0x0(%r14,%r15,1)
3306(4): movzx 0x0(%rdi,%rbp,1),%ebx
330a(4): add $0x1,%r15
330e(2): test %dl,%dl
3310(6): jnz 0xffffff50(%rip)
3316(2): mov %esi,%eax
3318(3): xor $0x1,%eax
331b(3): and %r8d,%eax
331e(3): test %r10b,%r10b
3321(2): jz 0x10(%rip)
3323(3): cmp %r15,%r13
3326(2): jbe 0x7(%rip)
3328(5): mov $0x5c,0x0(%r14,%r15,1)
332d(4): add $0x1,%r15
3331(4): add $0x1,%rbp
3335(3): cmp %rcx,%rbp
3338(6): jnb 0xfffff784(%rip)
333e(2): test %al,%al
3340(6): jz 0x3fe(%rip)
3346(3): cmp %r15,%r13
3349(2): jbe 0x7(%rip)
334b(5): mov $0x27,0x0(%r14,%r15,1)
3350(4): lea 0x1(%r15),%rax
3354(3): cmp %rax,%r13
3357(2): jbe 0x8(%rip)
3359(6): mov $0x27,0x1(%r14,%r15,1)
335f(4): add $0x2,%r15
3363(3): xor %r10d,%r10d
3366(3): xor %r8d,%r8d
3369(2): jmp 0xffffff94(%rip)
336b(5): nop 0x0(%rax,%rax,1)
3370(4): cmp $0x1,%r15
3374(6): jz 0xfffffe65(%rip)
337a(5): mov 0x10(%rsp),%rdi
337f(4): lea 0x0(%rdi,%r15,1),%rcx
3383(5): lea 0x1(%rdi,%r14,1),%rdx
3388(4): lea 0x0(%rcx,%r14,1),%r8
338c(2): jmp 0x11(%rip)
338e(2): nop 
3390(4): add $0x1,%rdx
3394(3): cmp %rdx,%r8
3397(6): jz 0xfffffe42(%rip)
339d(3): movzx (%rdx),%ecx
33a0(3): sub $0x5b,%ecx
33a3(3): cmp $0x21,%cl
33a6(2): jnbe 0xffffffea(%rip)
33a8(5): mov $0x1,%esi
33ad(3): shl/sal %cl,%rsi
33b0(3): mov %rsi,%rcx
33b3(a): mov $0x8589934635,%rsi
33bd(3): test %rsi,%rcx
33c0(2): jz 0xffffffd0(%rip)
33c2(5): mov 0x40(%rsp),%r14
33c7(5): mov 0x70(%rsp),%r13
33cc(5): mov 0x30(%rsp),%rbp
33d1(8): mov $0x2,0x8(%rsp)
33d9(5): cmp $0x0,0xd(%rsp)
33de(2): jz 0x12(%rip)
33e0(2): test %al,%al
33e2(5): mov $0x4,%eax
33e7(5): cmove 0x8(%rsp),%eax
33ec(4): mov %eax,0x8(%rsp)
33f0(4): sub $0x8,%rsp
33f4(3): mov %rbp,%rcx
33f7(3): mov %r13,%rsi
33fa(4): push 0x68(%rsp)
33fe(4): push 0x78(%rsp)
3402(3): mov %r14,%rdi
3405(2): push $0x0
3407(8): mov 0x98(%rsp),%r9d
340f(5): mov 0x28(%rsp),%r8d
3414(5): mov 0x30(%rsp),%rdx
3419(4): and $0xfd,%r9d
341d(5): call 0xfffff433(%rip)
3422(4): add $0x20,%rsp
3426(3): mov %rax,%r15
3429(8): mov 0xa8(%rsp),%rbx
3431(9): xor $0x28,%rbx
343a(3): mov %r15,%rax
343d(6): jnz 0x606(%rip)
3443(7): add $0xb8,%rsp
344a(1): pop %rbx
344b(1): pop %rbp
344c(2): pop %r12
344e(2): pop %r13
3450(2): pop %r14
3452(2): pop %r15
3454(1): ret near (%rsp)
3455(3): nop (%rax)
3458(3): mov %r11,%rbp
345b(5): jmp 0xffffff7e(%rip)
3460(3): cmp %r15,%r13
3463(2): jbe 0x7(%rip)
3465(5): mov $0x27,0x0(%r14,%r15,1)
346a(4): lea 0x1(%r15),%rax
346e(3): cmp %rax,%r13
3471(2): jbe 0x8(%rip)
3473(6): mov $0x5c,0x1(%r14,%r15,1)
3479(4): lea 0x2(%r15),%rax
347d(3): cmp %rax,%r13
3480(6): jbe 0x5f2(%rip)
3486(3): mov %r13,%rdx
3489(6): mov $0x27,0x2(%r14,%r15,1)
348f(5): mov 0x50(%rsp),%r13
3494(5): jmp 0xfffffbde(%rip)
3499(3): mov %r12d,%eax
349c(5): mov $0x30,%ebx
34a1(3): xor %r12d,%r12d
34a4(5): jmp 0xfffff605(%rip)
34a9(6): mov $0x27,0x2(%r14,%r15,1)
34af(5): jmp 0xfffff9ca(%rip)
34b4(2): test %ebx,%ebx
34b6(6): jnz 0xfffff42d(%rip)
34bc(5): mov $0x1,0xd(%rsp)
34c1(3): test %r13,%r13
34c4(6): jnz 0x596(%rip)
34ca(7): lea 0x2c34(%rip),%rax
34d1(9): mov $0x0,0x50(%rsp)
34da(5): mov $0x1,0xe(%rsp)
34df(5): mov $0x0,0x7c(%rsp)
34e4(3): xor %r12d,%r12d
34e7(5): mov $0x0,0xf(%rsp)
34ec(9): mov $0x1,0x18(%rsp)
34f5(5): mov %rax,0x48(%rsp)
34fa(6): mov $0x1,%r15d
3500(8): mov $0x2,0x8(%rsp)
3508(5): jmp 0xfffff41b(%rip)
350d(3): nop (%rax)
3510(2): test %ebx,%ebx
3512(6): jnz 0x3fb(%rip)
3518(3): test %r13,%r13
351b(6): jz 0x22b(%rip)
3521(4): mov $0x22,(%r14)
3525(5): mov $0x1,0xe(%rsp)
352a(3): xor %r12d,%r12d
352d(5): mov $0x0,0x7c(%rsp)
3532(9): mov $0x0,0x50(%rsp)
353b(7): lea 0x2bc1(%rip),%rax
3542(5): mov $0x0,0xf(%rsp)
3547(5): mov $0x1,0xd(%rsp)
354c(9): mov $0x1,0x18(%rsp)
3555(6): mov $0x1,%r15d
355b(5): mov %rax,0x48(%rsp)
3560(5): jmp 0xfffff3c3(%rip)
3565(7): lea 0x2b97(%rip),%rax
356c(5): mov $0x1,0xe(%rsp)
3571(5): mov $0x0,0x7c(%rsp)
3576(3): xor %r12d,%r12d
3579(9): mov $0x0,0x50(%rsp)
3582(5): mov $0x1,0xf(%rsp)
3587(5): mov $0x1,0xd(%rsp)
358c(9): mov $0x1,0x18(%rsp)
3595(3): xor %r15d,%r15d
3598(5): mov %rax,0x48(%rsp)
359d(8): mov $0x5,0x8(%rsp)
35a5(5): jmp 0xfffff37e(%rip)
35aa(5): mov $0x1,0xe(%rsp)
35af(5): mov $0x0,0x7c(%rsp)
35b4(3): xor %r12d,%r12d
35b7(9): mov $0x0,0x50(%rsp)
35c0(5): mov $0x0,0xf(%rsp)
35c5(3): xor %r15d,%r15d
35c8(5): mov $0x1,0xd(%rsp)
35cd(9): mov $0x0,0x18(%rsp)
35d6(9): mov $0x0,0x48(%rsp)
35df(5): jmp 0xfffff344(%rip)
35e4(5): cmp $0xa,0x8(%rsp)
35e9(2): jz 0x58(%rip)
35eb(7): lea 0x2b15(%rip),%rsi
35f2(2): xor %edi,%edi
35f4(5): mov $0x5,%edx
35f9(5): call 0xffffde87(%rip)
35fe(3): mov %rax,%rcx
3601(5): mov %rax,0x68(%rsp)
3606(7): lea 0x2afa(%rip),%rax
360d(3): cmp %rax,%rcx
3610(6): jz 0x39e(%rip)
3616(7): lea 0x2ae8(%rip),%rsi
361d(2): xor %edi,%edi
361f(5): mov $0x5,%edx
3624(5): call 0xffffde5c(%rip)
3629(3): mov %rax,%rcx
362c(5): mov %rax,0x60(%rsp)
3631(7): lea 0x2acd(%rip),%rax
3638(3): cmp %rax,%rcx
363b(6): jz 0x389(%rip)
3641(3): xor %r15d,%r15d
3644(2): test %ebx,%ebx
3646(6): jz 0x1c7(%rip)
364c(2): test %ebx,%ebx
364e(5): mov 0x60(%rsp),%rbx
3653(5): setnz 0xf(%rsp)
3658(3): xor %r12d,%r12d
365b(3): mov %rbx,%rdi
365e(5): call 0xffffde42(%rip)
3663(5): mov %rbx,0x48(%rsp)
3668(5): mov %rax,0x18(%rsp)
366d(5): mov $0x1,0xe(%rsp)
3672(5): mov $0x0,0x7c(%rsp)
3677(9): mov $0x0,0x50(%rsp)
3680(5): mov $0x1,0xd(%rsp)
3685(5): jmp 0xfffff29e(%rip)
368a(5): mov $0x1,0xe(%rsp)
368f(5): mov $0x0,0x7c(%rsp)
3694(3): xor %r12d,%r12d
3697(9): mov $0x0,0x50(%rsp)
36a0(5): mov $0x0,0xf(%rsp)
36a5(3): xor %r15d,%r15d
36a8(5): mov $0x0,0xd(%rsp)
36ad(9): mov $0x0,0x18(%rsp)
36b6(9): mov $0x0,0x48(%rsp)
36bf(5): jmp 0xfffff264(%rip)
36c4(5): mov $0x1,0xe(%rsp)
36c9(5): mov $0x0,0x7c(%rsp)
36ce(3): xor %r12d,%r12d
36d1(9): mov $0x0,0x50(%rsp)
36da(5): mov $0x1,0xf(%rsp)
36df(5): mov $0x1,0xd(%rsp)
36e4(5): jmp 0xfffff21f(%rip)
36e9(3): cmp %r15,%r13
36ec(2): jbe 0x7(%rip)
36ee(5): mov $0x30,0x0(%r14,%r15,1)
36f3(4): lea 0x2(%rcx),%rax
36f7(3): cmp %rax,%r13
36fa(2): jbe 0x8(%rip)
36fc(6): mov $0x30,0x2(%r14,%rcx,1)
3702(3): mov %r12d,%eax
3705(4): lea 0x3(%rcx),%r15
3709(3): xor %r12d,%r12d
370c(5): mov $0x30,%ebx
3711(5): jmp 0xfffff367(%rip)
3716(a): nop 0x0(%rax,%rax,1)
3720(5): movzx 0xf(%rsp),%ebx
3725(3): mov %r11,%rbp
3728(4): mov %bl,0xd(%rsp)
372c(5): jmp 0xfffffcad(%rip)
3731(5): movzx 0xd(%rsp),%edx
3736(3): xor %r12d,%r12d
3739(5): jmp 0xfffffb07(%rip)
373e(3): xor %r10d,%r10d
3741(5): jmp 0xfffffbbc(%rip)
3746(9): mov $0x0,0x50(%rsp)
374f(5): mov $0x1,0xe(%rsp)
3754(3): xor %r12d,%r12d
3757(5): mov $0x0,0x7c(%rsp)
375c(5): jmp 0xfffffddf(%rip)
3761(5): mov 0x30(%rsp),%r11
3766(3): mov %r14,%rsi
3769(3): mov %r13,%rcx
376c(3): mov %rbx,%rax
376f(3): mov %rbx,%rdi
3772(6): movzx 0x7d(%rsp),%r8d
3778(5): movzx 0x7e(%rsp),%ebx
377d(8): mov 0x88(%rsp),%r9
3785(3): cmp %r11,%rsi
3788(6): movzx 0x7f(%rsp),%r10d
378e(8): mov 0x80(%rsp),%r15
3796(5): mov 0x40(%rsp),%r14
379b(5): mov 0x70(%rsp),%r13
37a0(2): jnb 0x28(%rip)
37a2(3): cmp $0x0,(%rcx)
37a5(2): jnz 0x12(%rip)
37a7(2): jmp 0x21(%rip)
37a9(7): nop 0x0(%rax)
37b0(5): cmp $0x0,0x0(%r9,%rax,1)
37b5(2): jz 0x10(%rip)
37b7(4): add $0x1,%rax
37bb(5): lea 0x0(%rbp,%rax,1),%rdx
37c0(3): cmp %rdx,%r11
37c3(2): jnbe 0xffffffed(%rip)
37c5(3): mov %rax,%rdi
37c8(5): movzx 0xd(%rsp),%edx
37cd(3): xor %r12d,%r12d
37d0(5): jmp 0xfffffa66(%rip)
37d5(3): mov %rbx,%rdi
37d8(6): movzx 0x7d(%rsp),%r8d
37de(5): movzx 0x7e(%rsp),%ebx
37e3(6): movzx 0x7f(%rsp),%r10d
37e9(8): mov 0x80(%rsp),%r15
37f1(3): xor %r12d,%r12d
37f4(5): mov 0x40(%rsp),%r14
37f9(5): mov 0x70(%rsp),%r13
37fe(5): mov 0x30(%rsp),%r11
3803(5): movzx 0xd(%rsp),%edx
3808(5): jmp 0xfffffa2e(%rip)
380d(5): mov 0x68(%rsp),%rdx
3812(3): movzx (%rdx),%eax
3815(2): test %al,%al
3817(6): jz 0xfffffe35(%rip)
381d(3): nop (%rax)
3820(3): cmp %r15,%r13
3823(2): jbe 0x6(%rip)
3825(4): mov %al,0x0(%r14,%r15,1)
3829(4): add $0x1,%r15
382d(5): movzx 0x0(%rdx,%r15,1),%eax
3832(2): test %al,%al
3834(2): jnz 0xffffffec(%rip)
3836(5): jmp 0xfffffe16(%rip)
383b(2): mov %edx,%eax
383d(5): jmp 0xfffff55a(%rip)
3842(4): movzx 0x0(%rax,%rcx,1),%ebx
3846(3): cmp $0x3e,%bl
3849(6): jnbe 0xfffff877(%rip)
384f(a): mov $0x8070630310989004800,%rax
3859(4): bt %rbx,%rax
385d(6): jnb 0xfffff863(%rip)
3863(5): cmp $0x0,0xf(%rsp)
3868(6): jnz 0x1ea(%rip)
386e(3): cmp %r15,%r13
3871(2): jbe 0x7(%rip)
3873(5): mov $0x3f,0x0(%r14,%r15,1)
3878(4): lea 0x1(%r15),%rax
387c(3): cmp %rax,%r13
387f(2): jbe 0x8(%rip)
3881(6): mov $0x22,0x1(%r14,%r15,1)
3887(4): lea 0x2(%r15),%rax
388b(3): cmp %rax,%r13
388e(2): jbe 0x8(%rip)
3890(6): mov $0x22,0x2(%r14,%r15,1)
3896(4): lea 0x3(%r15),%rax
389a(3): cmp %rax,%r13
389d(2): jbe 0x8(%rip)
389f(6): mov $0x3f,0x3(%r14,%r15,1)
38a5(4): add $0x4,%r15
38a9(2): xor %edx,%edx
38ab(3): xor %r12d,%r12d
38ae(2): xor %eax,%eax
38b0(3): mov %rcx,%rbp
38b3(5): jmp 0xfffff1c5(%rip)
38b8(2): test %ebx,%ebx
38ba(6): jz 0x18e(%rip)
38c0(7): lea 0x283e(%rip),%rax
38c7(5): mov $0x1,0xe(%rsp)
38cc(5): mov $0x0,0x7c(%rsp)
38d1(3): xor %r12d,%r12d
38d4(9): mov $0x0,0x50(%rsp)
38dd(5): mov $0x1,0xf(%rsp)
38e2(5): mov $0x0,0xd(%rsp)
38e7(9): mov $0x1,0x18(%rsp)
38f0(3): xor %r15d,%r15d
38f3(5): mov %rax,0x48(%rsp)
38f8(5): jmp 0xfffff02b(%rip)
38fd(3): nop (%rax)
3900(3): mov %r11,%rbp
3903(5): movzx 0xf(%rsp),%eax
3908(5): jmp 0xfffffad1(%rip)
390d(7): lea 0x27ef(%rip),%rax
3914(5): mov $0x1,0xe(%rsp)
3919(5): mov $0x0,0x7c(%rsp)
391e(3): xor %r12d,%r12d
3921(9): mov $0x0,0x50(%rsp)
392a(5): mov $0x1,0xf(%rsp)
392f(5): mov $0x1,0xd(%rsp)
3934(9): mov $0x1,0x18(%rsp)
393d(3): xor %r15d,%r15d
3940(5): mov %rax,0x48(%rsp)
3945(5): jmp 0xffffefde(%rip)
394a(2): mov %edx,%eax
394c(5): mov 0x48(%rsp),%rbx
3951(3): test %rbx,%rbx
3954(2): jz 0x2e(%rip)
3956(2): test %al,%al
3958(2): jz 0x2a(%rip)
395a(3): movzx (%rbx),%ecx
395d(3): mov %rbx,%rax
3960(2): test %cl,%cl
3962(2): jz 0x20(%rip)
3964(3): mov %r15,%rdx
3967(3): sub %r15,%rax
396a(3): cmp %rdx,%r13
396d(2): jbe 0x6(%rip)
396f(4): mov %cl,0x0(%r14,%rdx,1)
3973(4): add $0x1,%rdx
3977(4): movzx 0x0(%rax,%rdx,1),%ecx
397b(2): test %cl,%cl
397d(2): jnz 0xffffffed(%rip)
397f(3): mov %rdx,%r15
3982(3): cmp %r15,%r13
3985(6): jbe 0xfffffaa4(%rip)
398b(5): mov $0x0,0x0(%r14,%r15,1)
3990(5): jmp 0xfffffa99(%rip)
3995(5): cmp $0x2,0x8(%rsp)
399a(5): movzx 0xf(%rsp),%ebx
399f(3): mov %r11,%rbp
39a2(3): setz %al
39a5(4): mov %bl,0xd(%rsp)
39a9(5): jmp 0xfffffa30(%rip)
39ae(4): mov 0x8(%rsp),%esi
39b2(3): mov %rcx,%rdi
39b5(5): call 0xffffedab(%rip)
39ba(5): mov %rax,0x68(%rsp)
39bf(5): jmp 0xfffffc57(%rip)
39c4(4): mov 0x8(%rsp),%esi
39c8(3): mov %rcx,%rdi
39cb(5): call 0xffffed95(%rip)
39d0(5): mov %rax,0x60(%rsp)
39d5(5): jmp 0xfffffc6c(%rip)
39da(5): movzx 0xf(%rsp),%ebx
39df(3): mov %r11,%rbp
39e2(2): mov %edx,%eax
39e4(4): mov %bl,0xd(%rsp)
39e8(5): jmp 0xfffff9f1(%rip)
39ed(4): sub $0x8,%rsp
39f1(6): mov $0x5,%r8d
39f7(3): mov %r11,%rcx
39fa(4): push 0x68(%rsp)
39fe(4): push 0x78(%rsp)
3a02(3): mov %r14,%rdi
3a05(4): push 0x38(%rsp)
3a09(8): mov 0x98(%rsp),%r9d
3a11(5): mov 0x30(%rsp),%rdx
3a16(5): mov 0x70(%rsp),%rsi
3a1b(5): call 0xffffee35(%rip)
3a20(4): add $0x20,%rsp
3a24(3): mov %rax,%r15
3a27(5): jmp 0xfffffa02(%rip)
3a2c(5): movzx 0x7c(%rsp),%eax
3a31(5): jmp 0xffffff1b(%rip)
3a36(8): mov $0x2,0x8(%rsp)
3a3e(5): jmp 0xfffff99b(%rip)
3a43(5): call 0xffffda6d(%rip)
3a48(5): mov $0x0,0xd(%rsp)
3a4d(5): jmp 0xfffffa74(%rip)
3a52(3): mov %r11,%rbp
3a55(5): jmp 0xfffff99b(%rip)
3a5a(5): mov $0x1,0xe(%rsp)
3a5f(2): xor %eax,%eax
3a61(3): xor %r12d,%r12d
3a64(9): mov $0x0,0x50(%rsp)
3a6d(5): jmp 0xfffff5a7(%rip)
3a72(3): mov %r13,%rdx
3a75(5): mov 0x50(%rsp),%r13
3a7a(5): jmp 0xfffff5f8(%rip)
3a7f(5): call 0xffffd971(%rip)

"quotearg_n_options" :
3a90(2): push %r15
3a92(2): push %r14
3a94(3): movsxd %edi,%r15
3a97(2): push %r13
3a99(2): push %r12
3a9b(3): mov %rdx,%r14
3a9e(1): push %rbp
3a9f(1): push %rbx
3aa0(3): mov %rcx,%rbp
3aa3(4): sub $0x28,%rsp
3aa7(5): mov %rsi,0x8(%rsp)
3aac(5): call 0xffffd954(%rip)
3ab1(3): mov %rax,%r13
3ab4(2): mov (%rax),%eax
3ab6(3): test %r15d,%r15d
3ab9(7): mov 0x2045a0(%rip),%rbx
3ac0(4): mov %eax,0x18(%rsp)
3ac4(6): js 0x16d(%rip)
3aca(7): cmp %r15d,0x204587(%rip)
3ad1(2): jnle 0x64(%rip)
3ad3(7): cmp $0x7fffffff,%r15d
3ada(6): jz 0x15c(%rip)
3ae0(4): lea 0x1(%r15),%r12d
3ae4(7): lea 0x204585(%rip),%rax
3aeb(3): movsxd %r12d,%rsi
3aee(4): shl/sal $0x4,%rsi
3af2(3): cmp %rax,%rbx
3af5(6): jz 0x11b(%rip)
3afb(3): mov %rbx,%rdi
3afe(5): call 0xf72(%rip)
3b03(3): mov %rax,%rbx
3b06(7): mov %rax,0x204553(%rip)
3b0d(7): movsxd 0x204544(%rip),%rdi
3b14(3): mov %r12d,%edx
3b17(2): xor %esi,%esi
3b19(2): sub %edi,%edx
3b1b(4): shl/sal $0x4,%rdi
3b1f(3): movsxd %edx,%rdx
3b22(3): add %rbx,%rdi
3b25(4): shl/sal $0x4,%rdx
3b29(5): call 0xffffda07(%rip)
3b2e(7): mov %r12d,0x204523(%rip)
3b35(3): mov 0x4(%rbp),%eax
3b38(4): shl/sal $0x4,%r15
3b3c(4): sub $0x8,%rsp
3b40(3): add %r15,%rbx
3b43(4): lea 0x8(%rbp),%r15
3b47(4): mov 0x0(%rbp),%r8d
3b4b(3): mov (%rbx),%r11
3b4e(4): mov 0x8(%rbx),%r12
3b52(3): mov %r14,%rcx
3b55(3): or $0x1,%eax
3b58(4): mov %eax,0x24(%rsp)
3b5c(3): push 0x30(%rbp)
3b5f(3): mov %eax,%r9d
3b62(3): push 0x28(%rbp)
3b65(2): push %r15
3b67(3): mov %r11,%rsi
3b6a(5): mov 0x28(%rsp),%rdx
3b6f(3): mov %r12,%rdi
3b72(5): mov %r11,0x30(%rsp)
3b77(5): call 0xffffecd9(%rip)
3b7c(4): add $0x20,%rsp
3b80(5): mov 0x10(%rsp),%r11
3b85(3): cmp %rax,%r11
3b88(2): jnbe 0x69(%rip)
3b8a(4): lea 0x1(%rax),%rsi
3b8e(7): lea 0x20456b(%rip),%rax
3b95(3): cmp %rax,%r12
3b98(3): mov %rsi,(%rbx)
3b9b(2): jz 0x14(%rip)
3b9d(3): mov %r12,%rdi
3ba0(5): mov %rsi,0x10(%rsp)
3ba5(5): call 0xffffd83b(%rip)
3baa(5): mov 0x10(%rsp),%rsi
3baf(3): mov %rsi,%rdi
3bb2(5): mov %rsi,0x10(%rsp)
3bb7(5): call 0xe59(%rip)
3bbc(4): sub $0x8,%rsp
3bc0(4): mov %rax,0x8(%rbx)
3bc4(4): mov 0x0(%rbp),%r8d
3bc8(3): push 0x30(%rbp)
3bcb(3): push 0x28(%rbp)
3bce(3): mov %r14,%rcx
3bd1(2): push %r15
3bd3(5): mov 0x3c(%rsp),%r9d
3bd8(3): mov %rax,%rdi
3bdb(5): mov 0x28(%rsp),%rdx
3be0(5): mov 0x30(%rsp),%rsi
3be5(3): mov %rax,%r12
3be8(5): call 0xffffec68(%rip)
3bed(4): add $0x20,%rsp
3bf1(4): mov 0x18(%rsp),%eax
3bf5(4): mov %eax,0x0(%r13)
3bf9(4): add $0x28,%rsp
3bfd(3): mov %r12,%rax
3c00(1): pop %rbx
3c01(1): pop %rbp
3c02(2): pop %r12
3c04(2): pop %r13
3c06(2): pop %r14
3c08(2): pop %r15
3c0a(1): ret near (%rsp)
3c0b(5): nop 0x0(%rax,%rax,1)
3c10(2): xor %edi,%edi
3c12(5): call 0xe5e(%rip)
3c17(8): movdqa 0x204451(%rip),%xmm0
3c1f(3): mov %rax,%rbx
3c22(7): mov %rax,0x204437(%rip)
3c29(3): movups %xmm0,(%rax)
3c2c(5): jmp 0xfffffee1(%rip)
3c31(5): call 0xffffd7bf(%rip)
3c36(5): call 0x102a(%rip)

"clone_quoting_options" :
3c40(2): push %r12
3c42(1): push %rbp
3c43(1): push %rbx
3c44(3): mov %rdi,%rbx
3c47(5): call 0xffffd7b9(%rip)
3c4c(3): mov (%rax),%r12d
3c4f(3): mov %rax,%rbp
3c52(7): lea 0x2045a7(%rip),%rax
3c59(3): test %rbx,%rbx
3c5c(5): mov $0x38,%esi
3c61(4): cmove %rax,%rbx
3c65(3): mov %rbx,%rdi
3c68(5): call 0xfa8(%rip)
3c6d(4): mov %r12d,0x0(%rbp)
3c71(1): pop %rbx
3c72(1): pop %rbp
3c73(2): pop %r12
3c75(1): ret near (%rsp)

"get_quoting_style" :
3c80(7): lea 0x204579(%rip),%rax
3c87(3): test %rdi,%rdi
3c8a(4): cmove %rax,%rdi
3c8e(2): mov (%rdi),%eax
3c90(1): ret near (%rsp)

"set_quoting_style" :
3ca0(7): lea 0x204559(%rip),%rax
3ca7(3): test %rdi,%rdi
3caa(4): cmove %rax,%rdi
3cae(2): mov %esi,(%rdi)
3cb0(1): ret near (%rsp)

"set_char_quoting" :
3cc0(7): lea 0x204539(%rip),%rax
3cc7(3): test %rdi,%rdi
3cca(2): mov %esi,%ecx
3ccc(4): cmove %rax,%rdi
3cd0(2): mov %esi,%eax
3cd2(3): and $0x1f,%ecx
3cd5(3): shr $0x5,%al
3cd8(3): movzx %al,%eax
3cdb(5): lea 0x8(%rdi,%rax,4),%rdi
3ce0(2): mov (%rdi),%esi
3ce2(2): mov %esi,%eax
3ce4(2): shr %cl,%eax
3ce6(2): xor %eax,%edx
3ce8(3): and $0x1,%eax
3ceb(3): and $0x1,%edx
3cee(2): shl/sal %cl,%edx
3cf0(2): xor %esi,%edx
3cf2(2): mov %edx,(%rdi)
3cf4(1): ret near (%rsp)

"set_quoting_flags" :
3d00(7): lea 0x2044f9(%rip),%rax
3d07(3): test %rdi,%rdi
3d0a(4): cmove %rax,%rdi
3d0e(3): mov 0x4(%rdi),%eax
3d11(3): mov %esi,0x4(%rdi)
3d14(1): ret near (%rsp)

"set_custom_quoting" :
3d20(7): lea 0x2044d9(%rip),%rax
3d27(3): test %rdi,%rdi
3d2a(4): cmove %rax,%rdi
3d2e(3): test %rsi,%rsi
3d31(6): mov $0xa,(%rdi)
3d37(2): jz 0x10(%rip)
3d39(3): test %rdx,%rdx
3d3c(2): jz 0xb(%rip)
3d3e(4): mov %rsi,0x28(%rdi)
3d42(4): mov %rdx,0x30(%rdi)
3d46(1): ret near (%rsp)
3d47(4): sub $0x8,%rsp
3d4b(5): call 0xffffd6a5(%rip)

"quotearg_buffer" :
3d50(2): push %r15
3d52(2): push %r14
3d54(7): lea 0x2044a5(%rip),%rax
3d5b(2): push %r13
3d5d(2): push %r12
3d5f(3): mov %rdi,%r13
3d62(1): push %rbp
3d63(1): push %rbx
3d64(3): mov %r8,%rbx
3d67(3): mov %rsi,%r14
3d6a(3): mov %rdx,%r15
3d6d(4): sub $0x18,%rsp
3d71(3): test %r8,%r8
3d74(4): cmove %rax,%rbx
3d78(5): mov %rcx,0x8(%rsp)
3d7d(5): call 0xffffd683(%rip)
3d82(3): mov (%rax),%r12d
3d85(3): mov %rax,%rbp
3d88(4): lea 0x8(%rbx),%rax
3d8c(4): sub $0x8,%rsp
3d90(4): mov 0x4(%rbx),%r9d
3d94(3): push 0x30(%rbx)
3d97(3): mov (%rbx),%r8d
3d9a(3): push 0x28(%rbx)
3d9d(3): mov %r15,%rdx
3da0(1): push %rax
3da1(5): mov 0x28(%rsp),%rcx
3da6(3): mov %r14,%rsi
3da9(3): mov %r13,%rdi
3dac(5): call 0xffffeaa4(%rip)
3db1(4): mov %r12d,0x0(%rbp)
3db5(4): add $0x38,%rsp
3db9(1): pop %rbx
3dba(1): pop %rbp
3dbb(2): pop %r12
3dbd(2): pop %r13
3dbf(2): pop %r14
3dc1(2): pop %r15
3dc3(1): ret near (%rsp)

"quotearg_alloc_mem" :
3dd0(2): push %r15
3dd2(2): push %r14
3dd4(7): lea 0x204425(%rip),%rax
3ddb(2): push %r13
3ddd(2): push %r12
3ddf(3): mov %rdx,%r12
3de2(1): push %rbp
3de3(1): push %rbx
3de4(3): mov %rcx,%rbx
3de7(3): mov %rdi,%r14
3dea(3): mov %rsi,%r15
3ded(4): sub $0x38,%rsp
3df1(3): test %rcx,%rcx
3df4(4): cmove %rax,%rbx
3df8(2): xor %ebp,%ebp
3dfa(5): call 0xffffd606(%rip)
3dff(3): test %r12,%r12
3e02(3): mov %rax,%r13
3e05(2): mov (%rax),%eax
3e07(4): setz %bpl
3e0b(3): or 0x4(%rbx),%ebp
3e0e(4): lea 0x8(%rbx),%r10
3e12(4): sub $0x8,%rsp
3e16(3): mov (%rbx),%r8d
3e19(3): mov %r15,%rcx
3e1c(4): mov %eax,0x14(%rsp)
3e20(3): push 0x30(%rbx)
3e23(3): mov %r14,%rdx
3e26(3): push 0x28(%rbx)
3e29(2): push %r10
3e2b(2): xor %esi,%esi
3e2d(3): mov %ebp,%r9d
3e30(2): xor %edi,%edi
3e32(5): mov %r10,0x40(%rsp)
3e37(5): call 0xffffea19(%rip)
3e3c(4): lea 0x1(%rax),%rsi
3e40(5): mov %rax,0x48(%rsp)
3e45(4): add $0x20,%rsp
3e49(3): mov %rsi,%rdi
3e4c(5): mov %rsi,0x18(%rsp)
3e51(5): call 0xbbf(%rip)
3e56(5): mov %rax,0x10(%rsp)
3e5b(4): sub $0x8,%rsp
3e5f(3): push 0x30(%rbx)
3e62(3): push 0x28(%rbx)
3e65(5): mov 0x38(%rsp),%r10
3e6a(3): mov %ebp,%r9d
3e6d(3): mov (%rbx),%r8d
3e70(3): mov %r15,%rcx
3e73(3): mov %r14,%rdx
3e76(3): mov %rax,%rdi
3e79(2): push %r10
3e7b(5): mov 0x38(%rsp),%rsi
3e80(5): call 0xffffe9d0(%rip)
3e85(4): mov 0x2c(%rsp),%eax
3e89(4): add $0x20,%rsp
3e8d(3): test %r12,%r12
3e90(4): mov %eax,0x0(%r13)
3e94(2): jz 0xb(%rip)
3e96(5): mov 0x28(%rsp),%r11
3e9b(4): mov %r11,(%r12)
3e9f(5): mov 0x10(%rsp),%rax
3ea4(4): add $0x38,%rsp
3ea8(1): pop %rbx
3ea9(1): pop %rbp
3eaa(2): pop %r12
3eac(2): pop %r13
3eae(2): pop %r14
3eb0(2): pop %r15
3eb2(1): ret near (%rsp)

"quotearg_alloc" :
3ec0(3): mov %rdx,%rcx
3ec3(2): xor %edx,%edx
3ec5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3ed0(6): mov 0x204182(%rip),%eax
3ed6(2): push %r12
3ed8(7): mov 0x204181(%rip),%r12
3edf(1): push %rbp
3ee0(1): push %rbx
3ee1(3): cmp $0x1,%eax
3ee4(2): jle 0x2d(%rip)
3ee6(3): sub $0x2,%eax
3ee9(5): lea 0x18(%r12),%rbx
3eee(4): shl/sal $0x4,%rax
3ef2(5): lea 0x28(%r12,%rax,1),%rbp
3ef7(9): nop 0x0(%rax,%rax,1)
3f00(3): mov (%rbx),%rdi
3f03(4): add $0x10,%rbx
3f07(5): call 0xffffd4d9(%rip)
3f0c(3): cmp %rbp,%rbx
3f0f(2): jnz 0xfffffff1(%rip)
3f11(5): mov 0x8(%r12),%rdi
3f16(7): lea 0x2041e3(%rip),%rbx
3f1d(3): cmp %rbx,%rdi
3f20(2): jz 0x19(%rip)
3f22(5): call 0xffffd4be(%rip)
3f27(b): mov $0x100,0x20413e(%rip)
3f32(7): mov %rbx,0x20413f(%rip)
3f39(7): lea 0x204130(%rip),%rbx
3f40(3): cmp %rbx,%r12
3f43(2): jz 0x11(%rip)
3f45(3): mov %r12,%rdi
3f48(5): call 0xffffd498(%rip)
3f4d(7): mov %rbx,0x20410c(%rip)
3f54(1): pop %rbx
3f55(a): mov $0x1,0x2040f9(%rip)
3f5f(1): pop %rbp
3f60(2): pop %r12
3f62(1): ret near (%rsp)

"quotearg_n" :
3f70(7): lea 0x204289(%rip),%rcx
3f77(7): mov $0xffffffff,%rdx
3f7e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3f90(7): lea 0x204269(%rip),%rcx
3f97(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3fa0(7): lea 0x204259(%rip),%rcx
3fa7(3): mov %rdi,%rsi
3faa(7): mov $0xffffffff,%rdx
3fb1(2): xor %edi,%edi
3fb3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3fc0(7): lea 0x204239(%rip),%rcx
3fc7(3): mov %rsi,%rdx
3fca(3): mov %rdi,%rsi
3fcd(2): xor %edi,%edi
3fcf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3fe0(4): sub $0x48,%rsp
3fe4(3): mov %rdx,%rax
3fe7(9): mov $0x28,%rdx
3ff0(5): mov %rdx,0x38(%rsp)
3ff5(2): xor %edx,%edx
3ff7(3): cmp $0xa,%esi
3ffa(2): jz 0x6a(%rip)
3ffc(3): mov %esi,(%rsp)
3fff(3): mov %rsp,%rcx
4002(7): mov $0xffffffff,%rdx
4009(3): mov %rax,%rsi
400c(9): mov $0x0,0x4(%rsp)
4015(9): mov $0x0,0xc(%rsp)
401e(9): mov $0x0,0x14(%rsp)
4027(9): mov $0x0,0x1c(%rsp)
4030(9): mov $0x0,0x24(%rsp)
4039(9): mov $0x0,0x2c(%rsp)
4042(8): mov $0x0,0x34(%rsp)
404a(5): call 0xfffffa46(%rip)
404f(5): mov 0x38(%rsp),%rcx
4054(9): xor $0x28,%rcx
405d(2): jnz 0xc(%rip)
405f(4): add $0x48,%rsp
4063(1): ret near (%rsp)
4064(5): call 0xffffd38c(%rip)
4069(5): call 0xffffd447(%rip)

"quotearg_n_style_mem" :
4070(4): sub $0x48,%rsp
4074(3): mov %rdx,%rax
4077(3): mov %rcx,%rdx
407a(9): mov $0x28,%rcx
4083(5): mov %rcx,0x38(%rsp)
4088(2): xor %ecx,%ecx
408a(3): cmp $0xa,%esi
408d(2): jz 0x63(%rip)
408f(3): mov %esi,(%rsp)
4092(3): mov %rsp,%rcx
4095(3): mov %rax,%rsi
4098(9): mov $0x0,0x4(%rsp)
40a1(9): mov $0x0,0xc(%rsp)
40aa(9): mov $0x0,0x14(%rsp)
40b3(9): mov $0x0,0x1c(%rsp)
40bc(9): mov $0x0,0x24(%rsp)
40c5(9): mov $0x0,0x2c(%rsp)
40ce(8): mov $0x0,0x34(%rsp)
40d6(5): call 0xfffff9ba(%rip)
40db(5): mov 0x38(%rsp),%rdx
40e0(9): xor $0x28,%rdx
40e9(2): jnz 0xc(%rip)
40eb(4): add $0x48,%rsp
40ef(1): ret near (%rsp)
40f0(5): call 0xffffd300(%rip)
40f5(5): call 0xffffd3bb(%rip)

"quotearg_style" :
4100(3): mov %rsi,%rdx
4103(2): mov %edi,%esi
4105(2): xor %edi,%edi
4107(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4110(3): mov %rdx,%rcx
4113(3): mov %rsi,%rdx
4116(2): mov %edi,%esi
4118(2): xor %edi,%edi
411a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4120(4): sub $0x48,%rsp
4124(2): mov %edx,%ecx
4126(9): mov $0x28,%rax
412f(5): mov %rax,0x38(%rsp)
4134(2): xor %eax,%eax
4136(7): mov 0x2040f3(%rip),%rax
413d(3): mov %rsp,%r8
4140(3): and $0x1f,%ecx
4143(8): movdqa 0x2040b5(%rip),%xmm0
414b(5): mov %rax,0x30(%rsp)
4150(2): mov %edx,%eax
4152(4): movaps %xmm0,(%rsp)
4156(3): shr $0x5,%al
4159(3): movzx %al,%eax
415c(5): lea 0x8(%r8,%rax,4),%r9
4161(8): movdqa 0x2040a7(%rip),%xmm0
4169(5): movaps %xmm0,0x10(%rsp)
416e(8): movdqa 0x2040aa(%rip),%xmm0
4176(5): movaps %xmm0,0x20(%rsp)
417b(3): mov (%r9),%edx
417e(2): mov %edx,%eax
4180(2): shr %cl,%eax
4182(2): not %eax
4184(3): and $0x1,%eax
4187(2): shl/sal %cl,%eax
4189(3): mov %r8,%rcx
418c(2): xor %edx,%eax
418e(3): mov %rsi,%rdx
4191(3): mov %rdi,%rsi
4194(3): mov %eax,(%r9)
4197(2): xor %edi,%edi
4199(5): call 0xfffff8f7(%rip)
419e(5): mov 0x38(%rsp),%rsi
41a3(9): xor $0x28,%rsi
41ac(2): jnz 0x7(%rip)
41ae(4): add $0x48,%rsp
41b2(1): ret near (%rsp)
41b3(5): call 0xffffd2fd(%rip)

"quotearg_char" :
41c0(4): movsx %sil,%edx
41c4(7): mov $0xffffffff,%rsi
41cb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
41d0(5): mov $0x3a,%edx
41d5(7): mov $0xffffffff,%rsi
41dc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
41f0(5): mov $0x3a,%edx
41f5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4200(4): sub $0x48,%rsp
4204(3): mov %rdx,%rax
4207(9): mov $0x28,%rdx
4210(5): mov %rdx,0x38(%rsp)
4215(2): xor %edx,%edx
4217(3): cmp $0xa,%esi
421a(2): jz 0x6a(%rip)
421c(3): mov %esi,(%rsp)
421f(3): mov %rsp,%rcx
4222(7): mov $0xffffffff,%rdx
4229(3): mov %rax,%rsi
422c(9): mov $0x0,0x4(%rsp)
4235(9): mov $0x4000000,0xc(%rsp)
423e(9): mov $0x0,0x14(%rsp)
4247(9): mov $0x0,0x1c(%rsp)
4250(9): mov $0x0,0x24(%rsp)
4259(9): mov $0x0,0x2c(%rsp)
4262(8): mov $0x0,0x34(%rsp)
426a(5): call 0xfffff826(%rip)
426f(5): mov 0x38(%rsp),%rcx
4274(9): xor $0x28,%rcx
427d(2): jnz 0xc(%rip)
427f(4): add $0x48,%rsp
4283(1): ret near (%rsp)
4284(5): call 0xffffd16c(%rip)
4289(5): call 0xffffd227(%rip)

"quotearg_n_custom_mem" :
4290(4): sub $0x48,%rsp
4294(3): mov %rcx,%r9
4297(7): mov 0x203f92(%rip),%rcx
429e(8): movdqa 0x203f5a(%rip),%xmm0
42a6(9): mov $0x28,%rax
42af(5): mov %rax,0x38(%rsp)
42b4(2): xor %eax,%eax
42b6(4): movaps %xmm0,(%rsp)
42ba(3): test %rsi,%rsi
42bd(5): mov %rcx,0x30(%rsp)
42c2(7): mov $0xa,(%rsp)
42c9(8): movdqa 0x203f3f(%rip),%xmm0
42d1(5): movaps %xmm0,0x10(%rsp)
42d6(8): movdqa 0x203f42(%rip),%xmm0
42de(5): movaps %xmm0,0x20(%rsp)
42e3(2): jz 0x34(%rip)
42e5(3): test %rdx,%rdx
42e8(2): jz 0x2f(%rip)
42ea(5): mov %rsi,0x28(%rsp)
42ef(5): mov %rdx,0x30(%rsp)
42f4(3): mov %rsp,%rcx
42f7(3): mov %r8,%rdx
42fa(3): mov %r9,%rsi
42fd(5): call 0xfffff793(%rip)
4302(5): mov 0x38(%rsp),%rdi
4307(9): xor $0x28,%rdi
4310(2): jnz 0xc(%rip)
4312(4): add $0x48,%rsp
4316(1): ret near (%rsp)
4317(5): call 0xffffd0d9(%rip)
431c(5): call 0xffffd194(%rip)

"quotearg_n_custom" :
4330(7): mov $0xffffffff,%r8
4337(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4340(3): mov %rdx,%rcx
4343(7): mov $0xffffffff,%r8
434a(3): mov %rsi,%rdx
434d(3): mov %rdi,%rsi
4350(2): xor %edi,%edi
4352(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4360(3): mov %rcx,%r8
4363(3): mov %rdx,%rcx
4366(3): mov %rsi,%rdx
4369(3): mov %rdi,%rsi
436c(2): xor %edi,%edi
436e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4380(7): lea 0x203c99(%rip),%rcx
4387(5): jmp 0xfffff709(%rip)

"quote_mem" :
4390(7): lea 0x203c89(%rip),%rcx
4397(3): mov %rsi,%rdx
439a(3): mov %rdi,%rsi
439d(2): xor %edi,%edi
439f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
43b0(7): lea 0x203c69(%rip),%rcx
43b7(7): mov $0xffffffff,%rdx
43be(5): jmp 0xfffff6d2(%rip)

"quote" :
43d0(7): lea 0x203c49(%rip),%rcx
43d7(3): mov %rdi,%rsi
43da(7): mov $0xffffffff,%rdx
43e1(2): xor %edi,%edi
43e3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
43f0(2): push %r15
43f2(2): push %r14
43f4(2): push %r13
43f6(2): push %r12
43f8(3): mov %r9,%r12
43fb(1): push %rbp
43fc(1): push %rbx
43fd(3): mov %rdi,%rbp
4400(3): mov %r8,%rbx
4403(4): sub $0x28,%rsp
4407(3): test %rsi,%rsi
440a(6): jz 0x11e(%rip)
4410(3): mov %rdx,%r8
4413(7): lea 0x21ae(%rip),%rdx
441a(3): mov %rcx,%r9
441d(2): xor %eax,%eax
441f(3): mov %rsi,%rcx
4422(5): mov $0x1,%esi
4427(5): call 0xffffd269(%rip)
442c(7): lea 0x21a8(%rip),%rsi
4433(2): xor %edi,%edi
4435(5): mov $0x5,%edx
443a(5): call 0xffffd046(%rip)
443f(7): lea 0x24ba(%rip),%rdx
4446(3): mov %rax,%rcx
4449(6): mov $0x7e3,%r8d
444f(5): mov $0x1,%esi
4454(3): mov %rbp,%rdi
4457(2): xor %eax,%eax
4459(5): call 0xffffd237(%rip)
445e(7): lea 0x2203(%rip),%rsi
4465(2): xor %edi,%edi
4467(5): mov $0x5,%edx
446c(5): call 0xffffd014(%rip)
4471(3): mov %rbp,%rsi
4474(3): mov %rax,%rdi
4477(5): call 0xffffd0e9(%rip)
447c(4): cmp $0x9,%r12
4480(6): jnbe 0x340(%rip)
4486(7): lea 0x2437(%rip),%rdx
448d(4): movsxd 0x0(%rdx,%r12,4),%rax
4491(3): add %rdx,%rax
4494(2): jmp %rax
4496(a): nop 0x0(%rax,%rax,1)
44a0(4): mov 0x38(%rbx),%r9
44a4(4): mov 0x10(%rbx),%rax
44a8(7): lea 0x2329(%rip),%rsi
44af(4): mov 0x8(%rbx),%r8
44b3(5): mov $0x5,%edx
44b8(2): xor %edi,%edi
44ba(4): mov 0x30(%rbx),%r13
44be(4): mov 0x28(%rbx),%r12
44c2(5): mov %r9,0x10(%rsp)
44c7(4): mov 0x20(%rbx),%r15
44cb(4): mov 0x18(%rbx),%r14
44cf(4): mov %rax,(%rsp)
44d3(5): mov %r8,0x8(%rsp)
44d8(3): mov (%rbx),%rbx
44db(5): call 0xffffcfa5(%rip)
44e0(4): sub $0x8,%rsp
44e4(5): mov 0x18(%rsp),%r9
44e9(3): mov %rax,%rdx
44ec(3): mov %rbx,%rcx
44ef(5): mov $0x1,%esi
44f4(3): mov %rbp,%rdi
44f7(2): xor %eax,%eax
44f9(2): push %r9
44fb(2): push %r13
44fd(2): push %r12
44ff(2): push %r15
4501(2): push %r14
4503(5): mov 0x30(%rsp),%r9
4508(5): mov 0x38(%rsp),%r8
450d(5): call 0xffffd183(%rip)
4512(4): add $0x30,%rsp
4516(4): add $0x28,%rsp
451a(1): pop %rbx
451b(1): pop %rbp
451c(2): pop %r12
451e(2): pop %r13
4520(2): pop %r14
4522(2): pop %r15
4524(1): ret near (%rsp)
4525(3): nop (%rax)
4528(3): mov %rcx,%r8
452b(3): mov %rdx,%rcx
452e(7): lea 0x209f(%rip),%rdx
4535(5): mov $0x1,%esi
453a(2): xor %eax,%eax
453c(5): call 0xffffd154(%rip)
4541(5): jmp 0xfffffeeb(%rip)
4546(a): nop 0x0(%rax,%rax,1)
4550(4): mov 0x40(%rbx),%r10
4554(4): mov 0x38(%rbx),%r9
4558(7): lea 0x22a9(%rip),%rsi
455f(4): mov 0x10(%rbx),%rax
4563(4): mov 0x8(%rbx),%r8
4567(5): mov $0x5,%edx
456c(4): mov 0x30(%rbx),%r13
4570(4): mov 0x28(%rbx),%r12
4574(4): mov 0x20(%rbx),%r15
4578(4): mov 0x18(%rbx),%r14
457c(3): mov (%rbx),%rbx
457f(5): mov %r10,0x18(%rsp)
4584(5): mov %r9,0x10(%rsp)
4589(4): mov %rax,(%rsp)
458d(5): mov %r8,0x8(%rsp)
4592(2): xor %edi,%edi
4594(5): call 0xffffceec(%rip)
4599(5): mov 0x18(%rsp),%r10
459e(2): push %r10
45a0(5): jmp 0xffffff44(%rip)
45a5(3): nop (%rax)
45a8(3): mov (%rbx),%rbx
45ab(7): lea 0x202d(%rip),%rsi
45b2(5): mov $0x5,%edx
45b7(2): xor %edi,%edi
45b9(5): call 0xffffcec7(%rip)
45be(4): add $0x28,%rsp
45c2(3): mov %rbx,%rcx
45c5(3): mov %rbp,%rdi
45c8(1): pop %rbx
45c9(1): pop %rbp
45ca(2): pop %r12
45cc(2): pop %r13
45ce(2): pop %r14
45d0(2): pop %r15
45d2(3): mov %rax,%rdx
45d5(5): mov $0x1,%esi
45da(2): xor %eax,%eax
45dc(5): jmp 0xffffd0b4(%rip)
45e1(7): nop 0x0(%rax)
45e8(4): mov 0x8(%rbx),%r12
45ec(7): lea 0x1ffc(%rip),%rsi
45f3(3): mov (%rbx),%rbx
45f6(5): mov $0x5,%edx
45fb(2): xor %edi,%edi
45fd(5): call 0xffffce83(%rip)
4602(4): add $0x28,%rsp
4606(3): mov %r12,%r8
4609(3): mov %rbx,%rcx
460c(3): mov %rbp,%rdi
460f(3): mov %rax,%rdx
4612(5): mov $0x1,%esi
4617(1): pop %rbx
4618(1): pop %rbp
4619(2): pop %r12
461b(2): pop %r13
461d(2): pop %r14
461f(2): pop %r15
4621(2): xor %eax,%eax
4623(5): jmp 0xffffd06d(%rip)
4628(8): nop 0x0(%rax,%rax,1)
4630(4): mov 0x10(%rbx),%r13
4634(4): mov 0x8(%rbx),%r12
4638(7): lea 0x1fc7(%rip),%rsi
463f(3): mov (%rbx),%rbx
4642(5): mov $0x5,%edx
4647(2): xor %edi,%edi
4649(5): call 0xffffce37(%rip)
464e(4): add $0x28,%rsp
4652(3): mov %r13,%r9
4655(3): mov %r12,%r8
4658(3): mov %rbx,%rcx
465b(3): mov %rbp,%rdi
465e(3): mov %rax,%rdx
4661(1): pop %rbx
4662(1): pop %rbp
4663(2): pop %r12
4665(2): pop %r13
4667(2): pop %r14
4669(2): pop %r15
466b(5): mov $0x1,%esi
4670(2): xor %eax,%eax
4672(5): jmp 0xffffd01e(%rip)
4677(9): nop 0x0(%rax,%rax,1)
4680(7): lea 0x20b1(%rip),%rsi
4687(5): mov $0x5,%edx
468c(2): xor %edi,%edi
468e(4): mov 0x18(%rbx),%r14
4692(4): mov 0x10(%rbx),%r13
4696(4): mov 0x8(%rbx),%r12
469a(3): mov (%rbx),%rbx
469d(5): call 0xffffcde3(%rip)
46a2(4): sub $0x8,%rsp
46a6(2): push %r14
46a8(3): mov %rax,%rdx
46ab(3): mov %r13,%r9
46ae(3): mov %r12,%r8
46b1(3): mov %rbx,%rcx
46b4(3): mov %rbp,%rdi
46b7(5): mov $0x1,%esi
46bc(2): xor %eax,%eax
46be(5): call 0xffffcfd2(%rip)
46c3(1): pop %rax
46c4(1): pop %rdx
46c5(4): add $0x28,%rsp
46c9(1): pop %rbx
46ca(1): pop %rbp
46cb(2): pop %r12
46cd(2): pop %r13
46cf(2): pop %r14
46d1(2): pop %r15
46d3(1): ret near (%rsp)
46d4(4): nop 0x0(%rax)
46d8(4): mov 0x20(%rbx),%r15
46dc(7): lea 0x2075(%rip),%rsi
46e3(5): mov $0x5,%edx
46e8(2): xor %edi,%edi
46ea(4): mov 0x18(%rbx),%r14
46ee(4): mov 0x10(%rbx),%r13
46f2(4): mov 0x8(%rbx),%r12
46f6(3): mov (%rbx),%rbx
46f9(5): call 0xffffcd87(%rip)
46fe(2): push %r15
4700(2): jmp 0xffffffa6(%rip)
4702(6): nop 0x0(%rax,%rax,1)
4708(4): mov 0x8(%rbx),%r8
470c(4): mov 0x28(%rbx),%r12
4710(7): lea 0x2069(%rip),%rsi
4717(4): mov 0x20(%rbx),%r15
471b(4): mov 0x18(%rbx),%r14
471f(5): mov $0x5,%edx
4724(4): mov 0x10(%rbx),%r13
4728(2): xor %edi,%edi
472a(3): mov (%rbx),%rbx
472d(4): mov %r8,(%rsp)
4731(5): call 0xffffcd4f(%rip)
4736(4): sub $0x8,%rsp
473a(3): mov %r13,%r9
473d(2): push %r12
473f(2): push %r15
4741(2): push %r14
4743(5): mov 0x20(%rsp),%r8
4748(3): mov %rbx,%rcx
474b(3): mov %rax,%rdx
474e(3): mov %rbp,%rdi
4751(5): mov $0x1,%esi
4756(2): xor %eax,%eax
4758(5): call 0xffffcf38(%rip)
475d(4): add $0x20,%rsp
4761(4): add $0x28,%rsp
4765(1): pop %rbx
4766(1): pop %rbp
4767(2): pop %r12
4769(2): pop %r13
476b(2): pop %r14
476d(2): pop %r15
476f(1): ret near (%rsp)
4770(4): mov 0x10(%rbx),%r9
4774(4): mov 0x30(%rbx),%r13
4778(7): lea 0x2029(%rip),%rsi
477f(4): mov 0x28(%rbx),%r12
4783(4): mov 0x20(%rbx),%r15
4787(5): mov $0x5,%edx
478c(4): mov 0x18(%rbx),%r14
4790(4): mov 0x8(%rbx),%r8
4794(2): xor %edi,%edi
4796(5): mov %r9,0x8(%rsp)
479b(3): mov (%rbx),%rbx
479e(4): mov %r8,(%rsp)
47a2(5): call 0xffffccde(%rip)
47a7(2): push %r13
47a9(2): push %r12
47ab(2): push %r15
47ad(2): push %r14
47af(5): mov 0x28(%rsp),%r9
47b4(2): jmp 0xffffff8f(%rip)
47b6(a): nop 0x0(%rax,%rax,1)
47c0(4): mov 0x40(%rbx),%r10
47c4(4): mov 0x38(%rbx),%r9
47c8(5): mov $0x5,%edx
47cd(4): mov 0x10(%rbx),%rax
47d1(4): mov 0x8(%rbx),%r8
47d5(7): lea 0x2064(%rip),%rsi
47dc(4): mov 0x30(%rbx),%r13
47e0(4): mov 0x28(%rbx),%r12
47e4(4): mov 0x20(%rbx),%r15
47e8(4): mov 0x18(%rbx),%r14
47ec(5): mov %r10,0x18(%rsp)
47f1(5): mov %r9,0x10(%rsp)
47f6(4): mov %rax,(%rsp)
47fa(5): mov %r8,0x8(%rsp)
47ff(3): mov (%rbx),%rbx
4802(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4810(3): xor %r9d,%r9d
4813(4): cmp $0x0,(%r8)
4817(2): jz 0x14(%rip)
4819(7): nop 0x0(%rax)
4820(4): add $0x1,%r9
4824(5): cmp $0x0,0x0(%r8,%r9,8)
4829(2): jnz 0xfffffff7(%rip)
482b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4830(4): sub $0x68,%rsp
4834(3): mov %r8,%r10
4837(3): xor %r9d,%r9d
483a(9): mov $0x28,%rax
4843(5): mov %rax,0x58(%rsp)
4848(2): xor %eax,%eax
484a(3): mov %rsp,%r8
484d(3): nop (%rax)
4850(3): mov (%r10),%eax
4853(3): cmp $0x2f,%eax
4856(2): jnbe 0x44(%rip)
4858(3): mov %eax,%r11d
485b(4): add 0x10(%r10),%r11
485f(3): add $0x8,%eax
4862(3): mov %eax,(%r10)
4865(3): mov (%r11),%rax
4868(3): test %rax,%rax
486b(4): mov %rax,0x0(%r8,%r9,8)
486f(2): jz 0xc(%rip)
4871(4): add $0x1,%r9
4875(4): cmp $0xa,%r9
4879(2): jnz 0xffffffd7(%rip)
487b(5): call 0xfffffb75(%rip)
4880(5): mov 0x58(%rsp),%rax
4885(9): xor $0x28,%rax
488e(2): jnz 0x7(%rip)
4890(4): add $0x68,%rsp
4894(1): ret near (%rsp)
4895(5): call 0xffffcc1b(%rip)
489a(4): mov 0x8(%r10),%r11
489e(4): lea 0x8(%r11),%rax
48a2(4): mov %rax,0x8(%r10)
48a6(2): jmp 0xffffffbf(%rip)

"version_etc" :
48b0(1): push %rbp
48b1(1): push %rbx
48b2(6): mov $0x20,%r10d
48b8(3): xor %r11d,%r11d
48bb(7): sub $0xb8,%rsp
48c2(9): mov $0x28,%rax
48cb(5): mov %rax,0x78(%rsp)
48d0(2): xor %eax,%eax
48d2(8): lea 0xd0(%rsp),%rax
48da(8): mov %r8,0xa0(%rsp)
48e2(8): lea 0xd0(%rsp),%rbx
48ea(5): lea 0x20(%rsp),%r8
48ef(8): mov %r9,0xa8(%rsp)
48f7(8): mov $0x20,0x8(%rsp)
48ff(5): mov %rax,0x10(%rsp)
4904(8): lea 0x80(%rsp),%rax
490c(3): xor %r9d,%r9d
490f(5): mov %rax,0x18(%rsp)
4914(3): mov %rax,%rbp
4917(9): nop 0x0(%rax,%rax,1)
4920(4): cmp $0x2f,%r10d
4924(2): jnbe 0x58(%rip)
4926(3): mov %r10d,%eax
4929(6): mov $0x1,%r11d
492f(4): add $0x8,%r10d
4933(3): add %rbp,%rax
4936(3): mov (%rax),%rax
4939(3): test %rax,%rax
493c(4): mov %rax,0x0(%r8,%r9,8)
4940(2): jz 0xc(%rip)
4942(4): add $0x1,%r9
4946(4): cmp $0xa,%r9
494a(2): jnz 0xffffffd6(%rip)
494c(3): test %r11b,%r11b
494f(2): jnz 0x26(%rip)
4951(5): call 0xfffffa9f(%rip)
4956(5): mov 0x78(%rsp),%rax
495b(9): xor $0x28,%rax
4964(2): jnz 0xc(%rip)
4966(7): add $0xb8,%rsp
496d(1): pop %rbx
496e(1): pop %rbp
496f(1): ret near (%rsp)
4970(5): call 0xffffcb40(%rip)
4975(5): mov %r10d,0x8(%rsp)
497a(2): jmp 0xffffffd7(%rip)
497c(3): mov %rbx,%rax
497f(4): add $0x8,%rbx
4983(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4990(1): push %rbx
4991(7): lea 0x1c8a(%rip),%rsi
4998(5): mov $0x5,%edx
499d(2): xor %edi,%edi
499f(5): call 0xffffcae1(%rip)
49a4(7): lea 0x1c8c(%rip),%rdx
49ab(3): mov %rax,%rsi
49ae(5): mov $0x1,%edi
49b3(2): xor %eax,%eax
49b5(5): call 0xffffcc6b(%rip)
49ba(7): lea 0x1c8c(%rip),%rsi
49c1(5): mov $0x5,%edx
49c6(2): xor %edi,%edi
49c8(5): call 0xffffcab8(%rip)
49cd(7): lea 0x14ac(%rip),%rcx
49d4(7): lea 0xee5(%rip),%rdx
49db(3): mov %rax,%rsi
49de(5): mov $0x1,%edi
49e3(2): xor %eax,%eax
49e5(5): call 0xffffcc3b(%rip)
49ea(7): mov 0x203697(%rip),%rbx
49f1(7): lea 0x1e88(%rip),%rsi
49f8(2): xor %edi,%edi
49fa(5): mov $0x5,%edx
49ff(5): call 0xffffca81(%rip)
4a04(3): mov %rbx,%rsi
4a07(3): mov %rax,%rdi
4a0a(1): pop %rbx
4a0b(5): jmp 0xffffcb55(%rip)

"xmalloc" :
4a10(1): push %rbx
4a11(3): mov %rdi,%rbx
4a14(5): call 0xffffcb9c(%rip)
4a19(3): test %rax,%rax
4a1c(2): jnz 0x7(%rip)
4a1e(3): test %rbx,%rbx
4a21(2): jnz 0x4(%rip)
4a23(1): pop %rbx
4a24(1): ret near (%rsp)
4a25(5): call 0x23b(%rip)

"xnmalloc" :
4a30(3): mov %rdi,%rax
4a33(3): mul %rax,%rsi,%rdx
4a36(3): mov %rax,%rdi
4a39(3): seto %al
4a3c(3): test %rdi,%rdi
4a3f(2): js 0xc(%rip)
4a41(3): movzx %al,%eax
4a44(3): test %rax,%rax
4a47(2): jnz 0x4(%rip)
4a49(2): jmp 0xffffffc7(%rip)
4a4b(4): sub $0x8,%rsp
4a4f(5): call 0x211(%rip)

"xrealloc" :
4a70(3): test %rsi,%rsi
4a73(1): push %rbx
4a74(3): mov %rsi,%rbx
4a77(2): jnz 0x7(%rip)
4a79(3): test %rdi,%rdi
4a7c(2): jnz 0x1c(%rip)
4a7e(3): mov %rbx,%rsi
4a81(5): call 0xffffcb7f(%rip)
4a86(3): test %rax,%rax
4a89(2): jnz 0x7(%rip)
4a8b(3): test %rbx,%rbx
4a8e(2): jnz 0x13(%rip)
4a90(1): pop %rbx
4a91(1): ret near (%rsp)
4a92(6): nop 0x0(%rax,%rax,1)
4a98(5): call 0xffffc948(%rip)
4a9d(2): xor %eax,%eax
4a9f(1): pop %rbx
4aa0(1): ret near (%rsp)
4aa1(5): call 0x1bf(%rip)

"xnrealloc" :
4ab0(3): mov %rsi,%rax
4ab3(3): mul %rax,%rdx,%rdx
4ab6(3): mov %rax,%rsi
4ab9(3): seto %al
4abc(3): test %rsi,%rsi
4abf(2): js 0xc(%rip)
4ac1(3): movzx %al,%eax
4ac4(3): test %rax,%rax
4ac7(2): jnz 0x4(%rip)
4ac9(2): jmp 0xffffffa7(%rip)
4acb(4): sub $0x8,%rsp
4acf(5): call 0x191(%rip)

"x2nrealloc" :
4ae0(3): test %rdi,%rdi
4ae3(3): mov %rdx,%r9
4ae6(3): mov (%rsi),%rcx
4ae9(2): jz 0x37(%rip)
4aeb(2): xor %edx,%edx
4aed(a): mov $0x6148914691236517204,%rax
4af7(3): div %r9,%rax
4afa(3): cmp %rcx,%rax
4afd(2): jbe 0x3e(%rip)
4aff(3): mov %rcx,%rax
4b02(3): shr $0x1,%rax
4b05(5): lea 0x1(%rax,%rcx,1),%rcx
4b0a(3): mov %rcx,(%rsi)
4b0d(4): imul %r9,%rcx
4b11(3): mov %rcx,%rsi
4b14(5): jmp 0xffffff5c(%rip)
4b19(7): nop 0x0(%rax)
4b20(3): test %rcx,%rcx
4b23(2): jz 0x25(%rip)
4b25(3): mov %rcx,%rax
4b28(3): mul %rax,%r9,%rdx
4b2b(3): seto %dl
4b2e(3): test %rax,%rax
4b31(3): movzx %dl,%edx
4b34(2): js 0x7(%rip)
4b36(3): test %rdx,%rdx
4b39(2): jz 0xffffffd1(%rip)
4b3b(4): sub $0x8,%rsp
4b3f(5): call 0x121(%rip)
4b44(4): nop 0x0(%rax)
4b48(2): xor %edx,%edx
4b4a(5): mov $0x80,%eax
4b4f(3): xor %r8d,%r8d
4b52(3): div %r9,%rax
4b55(3): test %rax,%rax
4b58(4): setz %r8b
4b5c(4): lea 0x0(%r8,%rax,1),%rcx
4b60(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4b70(3): test %rdi,%rdi
4b73(3): mov (%rsi),%rax
4b76(2): jz 0x2a(%rip)
4b78(a): mov $0x6148914691236517203,%rdx
4b82(3): cmp %rdx,%rax
4b85(2): jnbe 0x2c(%rip)
4b87(3): mov %rax,%rdx
4b8a(3): shr $0x1,%rdx
4b8d(5): lea 0x1(%rdx,%rax,1),%rax
4b92(3): mov %rax,(%rsi)
4b95(3): mov %rax,%rsi
4b98(5): jmp 0xfffffed8(%rip)
4b9d(3): nop (%rax)
4ba0(3): test %rax,%rax
4ba3(5): mov $0x80,%edx
4ba8(4): cmove %rdx,%rax
4bac(3): test %rax,%rax
4baf(2): jns 0xffffffe3(%rip)
4bb1(4): sub $0x8,%rsp
4bb5(5): call 0xab(%rip)

"xzalloc" :
4bc0(1): push %rbx
4bc1(3): mov %rdi,%rbx
4bc4(5): call 0xfffffe4c(%rip)
4bc9(3): mov %rbx,%rdx
4bcc(2): xor %esi,%esi
4bce(3): mov %rax,%rdi
4bd1(1): pop %rbx
4bd2(5): jmp 0xffffc95e(%rip)

"xcalloc" :
4be0(3): mov %rdi,%rax
4be3(4): sub $0x8,%rsp
4be7(3): mul %rax,%rsi,%rdx
4bea(3): seto %dl
4bed(3): test %rax,%rax
4bf0(2): js 0x19(%rip)
4bf2(3): movzx %dl,%edx
4bf5(3): test %rdx,%rdx
4bf8(2): jnz 0x11(%rip)
4bfa(5): call 0xffffc976(%rip)
4bff(3): test %rax,%rax
4c02(2): jz 0x7(%rip)
4c04(4): add $0x8,%rsp
4c08(1): ret near (%rsp)
4c09(5): call 0x57(%rip)

"xmemdup" :
4c10(1): push %rbp
4c11(1): push %rbx
4c12(3): mov %rdi,%rbp
4c15(3): mov %rsi,%rdi
4c18(3): mov %rsi,%rbx
4c1b(4): sub $0x8,%rsp
4c1f(5): call 0xfffffdf1(%rip)
4c24(4): add $0x8,%rsp
4c28(3): mov %rbx,%rdx
4c2b(3): mov %rbp,%rsi
4c2e(1): pop %rbx
4c2f(1): pop %rbp
4c30(3): mov %rax,%rdi
4c33(5): jmp 0xffffc94d(%rip)

"xstrdup" :
4c40(1): push %rbx
4c41(3): mov %rdi,%rbx
4c44(5): call 0xffffc85c(%rip)
4c49(3): mov %rbx,%rdi
4c4c(4): lea 0x1(%rax),%rsi
4c50(1): pop %rbx
4c51(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4c60(7): lea 0x1cc8(%rip),%rsi
4c67(4): sub $0x8,%rsp
4c6b(5): mov $0x5,%edx
4c70(2): xor %edi,%edi
4c72(5): call 0xffffc80e(%rip)
4c77(6): mov 0x20339b(%rip),%edi
4c7d(7): lea 0x1424(%rip),%rdx
4c84(3): mov %rax,%rcx
4c87(2): xor %esi,%esi
4c89(2): xor %eax,%eax
4c8b(5): call 0xffffc9a5(%rip)
4c90(5): call 0xffffc760(%rip)

"xnumtoimax" :
4ca0(2): push %r15
4ca2(2): push %r14
4ca4(3): mov %rcx,%r15
4ca7(2): push %r13
4ca9(2): push %r12
4cab(3): mov %rdx,%r14
4cae(1): push %rbp
4caf(1): push %rbx
4cb0(2): mov %esi,%edx
4cb2(2): xor %esi,%esi
4cb4(3): mov %rdi,%r12
4cb7(3): mov %r9,%r13
4cba(4): sub $0x18,%rsp
4cbe(3): mov %rsp,%rcx
4cc1(4): mov 0x50(%rsp),%ebx
4cc5(9): mov $0x28,%rax
4cce(5): mov %rax,0x8(%rsp)
4cd3(2): xor %eax,%eax
4cd5(5): call 0x11b(%rip)
4cda(2): test %eax,%eax
4cdc(6): jnz 0x94(%rip)
4ce2(4): mov (%rsp),%rbp
4ce6(3): cmp %r14,%rbp
4ce9(2): jl 0x7(%rip)
4ceb(3): cmp %r15,%rbp
4cee(2): jle 0x58(%rip)
4cf0(5): call 0xffffc710(%rip)
4cf5(7): cmp $0x3fffffff,%rbp
4cfc(3): mov %rax,%r14
4cff(6): jle 0x91(%rip)
4d05(7): mov $0x4b,(%r14)
4d0c(3): mov %r12,%rdi
4d0f(5): call 0xfffff6c1(%rip)
4d14(3): mov (%r14),%esi
4d17(3): mov %rax,%r8
4d1a(5): mov $0x0,%eax
4d1f(7): lea 0x137e(%rip),%rdx
4d26(3): mov %r13,%rcx
4d29(3): cmp $0x16,%esi
4d2c(3): cmove %eax,%esi
4d2f(2): test %ebx,%ebx
4d31(5): mov $0x1,%eax
4d36(3): cmove %eax,%ebx
4d39(2): xor %eax,%eax
4d3b(2): mov %ebx,%edi
4d3d(5): call 0xffffc8f3(%rip)
4d42(4): mov (%rsp),%rbp
4d46(5): mov 0x8(%rsp),%rdx
4d4b(9): xor $0x28,%rdx
4d54(3): mov %rbp,%rax
4d57(2): jnz 0x55(%rip)
4d59(4): add $0x18,%rsp
4d5d(1): pop %rbx
4d5e(1): pop %rbp
4d5f(2): pop %r12
4d61(2): pop %r13
4d63(2): pop %r14
4d65(2): pop %r15
4d67(1): ret near (%rsp)
4d68(8): nop 0x0(%rax,%rax,1)
4d70(2): mov %eax,%ebp
4d72(5): call 0xffffc68e(%rip)
4d77(3): cmp $0x1,%ebp
4d7a(3): mov %rax,%r14
4d7d(2): jz 0xffffff88(%rip)
4d7f(3): cmp $0x3,%ebp
4d82(2): jnz 0xffffff8a(%rip)
4d84(6): mov $0x0,(%rax)
4d8a(2): jmp 0xffffff82(%rip)
4d8c(4): nop 0x0(%rax)
4d90(7): cmp $0xbfffffff,%rbp
4d97(5): mov $0x22,%eax
4d9c(5): mov $0x4b,%edx
4da1(3): cmovng %edx,%eax
4da4(3): mov %eax,(%r14)
4da7(5): jmp 0xffffff65(%rip)
4dac(5): call 0xffffc704(%rip)

"xdectoimax" :
4dc0(4): sub $0x10,%rsp
4dc4(2): push %r9
4dc6(3): mov %r8,%r9
4dc9(3): mov %rcx,%r8
4dcc(3): mov %rdx,%rcx
4dcf(3): mov %rsi,%rdx
4dd2(5): mov $0xa,%esi
4dd7(5): call 0xfffffec9(%rip)
4ddc(4): add $0x18,%rsp
4de0(1): ret near (%rsp)

"xstrtoimax" :
4df0(2): push %r15
4df2(2): push %r14
4df4(2): push %r13
4df6(2): push %r12
4df8(1): push %rbp
4df9(1): push %rbx
4dfa(4): sub $0x28,%rsp
4dfe(9): mov $0x28,%rax
4e07(5): mov %rax,0x18(%rsp)
4e0c(2): xor %eax,%eax
4e0e(3): cmp $0x24,%edx
4e11(6): jnbe 0x66e(%rip)
4e17(5): lea 0x10(%rsp),%rax
4e1c(3): test %rsi,%rsi
4e1f(3): mov %rsi,%rbx
4e22(3): mov %rdi,%r12
4e25(2): mov %edx,%ebp
4e27(3): mov %rcx,%r14
4e2a(4): cmove %rax,%rbx
4e2e(3): mov %r8,%r15
4e31(5): call 0xffffc5cf(%rip)
4e36(2): xor %ecx,%ecx
4e38(2): mov %ebp,%edx
4e3a(6): mov $0x0,(%rax)
4e40(3): mov %rbx,%rsi
4e43(3): mov %r12,%rdi
4e46(3): mov %rax,%r13
4e49(5): call 0xffffc607(%rip)
4e4e(3): mov (%rbx),%rcx
4e51(3): mov %rax,%rbp
4e54(3): cmp %r12,%rcx
4e57(2): jz 0x61(%rip)
4e59(4): mov 0x0(%r13),%eax
4e5d(2): test %eax,%eax
4e5f(2): jnz 0x41(%rip)
4e61(3): xor %r12d,%r12d
4e64(3): test %r15,%r15
4e67(2): jz 0xf(%rip)
4e69(4): movzx (%rcx),%r13d
4e6d(3): test %r13b,%r13b
4e70(6): jnz 0x83(%rip)
4e76(3): mov %rbp,(%r14)
4e79(5): mov 0x18(%rsp),%rdi
4e7e(9): xor $0x28,%rdi
4e87(3): mov %r12d,%eax
4e8a(6): jnz 0x614(%rip)
4e90(4): add $0x28,%rsp
4e94(1): pop %rbx
4e95(1): pop %rbp
4e96(2): pop %r12
4e98(2): pop %r13
4e9a(2): pop %r14
4e9c(2): pop %r15
4e9e(1): ret near (%rsp)
4e9f(1): nop 
4ea0(3): cmp $0x22,%eax
4ea3(6): mov $0x4,%r12d
4ea9(2): jnz 0xffffffd0(%rip)
4eab(6): mov $0x1,%r12d
4eb1(2): jmp 0xffffffb3(%rip)
4eb3(5): nop 0x0(%rax,%rax,1)
4eb8(3): test %r15,%r15
4ebb(6): jz 0x495(%rip)
4ec1(4): movzx (%rcx),%r13d
4ec5(5): mov %rcx,0x8(%rsp)
4eca(6): mov $0x4,%r12d
4ed0(3): test %r13b,%r13b
4ed3(2): jz 0xffffffa6(%rip)
4ed5(4): movsx %r13b,%esi
4ed9(3): mov %r15,%rdi
4edc(5): call 0xffffc604(%rip)
4ee1(3): test %rax,%rax
4ee4(5): mov 0x8(%rsp),%rcx
4ee9(2): jz 0xffffff90(%rip)
4eeb(5): mov $0x1,%ebp
4ef0(3): xor %r12d,%r12d
4ef3(4): movsx %r13b,%esi
4ef7(3): mov %r15,%rdi
4efa(5): mov %rcx,0x8(%rsp)
4eff(5): call 0xffffc5e1(%rip)
4f04(3): test %rax,%rax
4f07(5): mov 0x8(%rsp),%rcx
4f0c(2): jz 0x5c(%rip)
4f0e(4): lea 0xffffffbb(%r13),%eax
4f12(2): cmp $0x2f,%al
4f14(2): jnbe 0x64(%rip)
4f16(a): mov $0x142129060940101,%rdx
4f20(4): bt %rax,%rdx
4f24(2): jnb 0x54(%rip)
4f26(5): mov $0x30,%esi
4f2b(3): mov %r15,%rdi
4f2e(5): mov %rcx,0x8(%rsp)
4f33(5): call 0xffffc5ad(%rip)
4f38(3): test %rax,%rax
4f3b(5): mov 0x8(%rsp),%rcx
4f40(2): jz 0x38(%rip)
4f42(4): movzx 0x1(%rcx),%eax
4f46(2): cmp $0x44,%al
4f48(2): jz 0xe(%rip)
4f4a(2): cmp $0x69,%al
4f4c(6): jz 0x4ec(%rip)
4f52(2): cmp $0x42,%al
4f54(2): jnz 0x24(%rip)
4f56(5): mov $0x2,%edi
4f5b(5): mov $0x3e8,%eax
4f60(2): jmp 0x22(%rip)
4f62(6): nop 0x0(%rax,%rax,1)
4f68(3): mov %rbp,(%r14)
4f6b(4): or $0x2,%r12d
4f6f(5): jmp 0xffffff0a(%rip)
4f74(4): nop 0x0(%rax)
4f78(5): mov $0x1,%edi
4f7d(5): mov $0x400,%eax
4f82(4): sub $0x42,%r13d
4f86(4): cmp $0x35,%r13b
4f8a(2): jnbe 0xffffffde(%rip)
4f8c(7): lea 0x19f5(%rip),%rsi
4f93(4): movzx %r13b,%r13d
4f97(4): movsxd 0x0(%rsi,%r13,4),%rdx
4f9b(3): add %rsi,%rdx
4f9e(2): jmp %rdx
4fa0(a): mov $0x-9223372036854775808,%r8
4faa(3): movsxd %eax,%rsi
4fad(3): mov %r8,%rax
4fb0(2): cdq %rax
4fb2(3): idiv %rsi,%rax
4fb5(3): cmp %rax,%rbp
4fb8(3): mov %rax,%r9
4fbb(6): jl 0x4aa(%rip)
4fc1(a): mov $0x9223372036854775807,%r10
4fcb(3): mov %r10,%rax
4fce(2): cdq %rax
4fd0(3): idiv %rsi,%rax
4fd3(3): cmp %rax,%rbp
4fd6(6): jnle 0x49c(%rip)
4fdc(4): imul %rsi,%rbp
4fe0(3): cmp %rbp,%r9
4fe3(6): jnle 0x482(%rip)
4fe9(3): cmp %rbp,%rax
4fec(6): jl 0x486(%rip)
4ff2(4): imul %rsi,%rbp
4ff6(2): xor %eax,%eax
4ff8(3): or %eax,%r12d
4ffb(5): nop 0x0(%rax,%rax,1)
5000(3): movsxd %edi,%rax
5003(3): add %rax,%rcx
5006(3): mov %r12d,%eax
5009(3): or $0x2,%eax
500c(3): mov %rcx,(%rbx)
500f(3): cmp $0x0,(%rcx)
5012(4): cmovne %eax,%r12d
5016(5): jmp 0xfffffe60(%rip)
501b(5): nop 0x0(%rax,%rax,1)
5020(a): mov $0x-4611686018427387904,%rax
502a(3): cmp %rax,%rbp
502d(6): jl 0x333(%rip)
5033(a): mov $0x4611686018427387903,%rax
503d(3): cmp %rax,%rbp
5040(6): jnle 0x3e0(%rip)
5046(3): add %rbp,%rbp
5049(2): jmp 0xffffffb7(%rip)
504b(5): nop 0x0(%rax,%rax,1)
5050(a): mov $0x-18014398509481984,%rax
505a(3): cmp %rax,%rbp
505d(6): jl 0x303(%rip)
5063(a): mov $0x18014398509481983,%rax
506d(3): cmp %rax,%rbp
5070(6): jnle 0x3b0(%rip)
5076(4): shl/sal $0x9,%rbp
507a(2): jmp 0xffffff86(%rip)
507c(4): nop 0x0(%rax)
5080(3): movsxd %eax,%rsi
5083(a): mov $0x-9223372036854775808,%rax
508d(6): mov $0x7,%r8d
5093(2): cdq %rax
5095(3): xor %r11d,%r11d
5098(a): mov $0x9223372036854775807,%r9
50a2(3): idiv %rsi,%rax
50a5(3): mov %rax,%r10
50a8(2): jmp 0x27(%rip)
50aa(6): nop 0x0(%rax,%rax,1)
50b0(3): mov %r9,%rax
50b3(2): cdq %rax
50b5(3): idiv %rsi,%rax
50b8(3): cmp %rbp,%rax
50bb(6): jl 0x2ed(%rip)
50c1(4): imul %rsi,%rbp
50c5(4): sub $0x1,%r8d
50c9(6): jz 0x127(%rip)
50cf(3): cmp %rbp,%r10
50d2(2): jle 0xffffffde(%rip)
50d4(6): mov $0x1,%r11d
50da(a): mov $0x-9223372036854775808,%rbp
50e4(2): jmp 0xffffffe1(%rip)
50e6(a): nop 0x0(%rax,%rax,1)
50f0(3): movsxd %eax,%rsi
50f3(a): mov $0x-9223372036854775808,%rax
50fd(6): mov $0x8,%r8d
5103(2): cdq %rax
5105(3): xor %r11d,%r11d
5108(a): mov $0x9223372036854775807,%r9
5112(3): idiv %rsi,%rax
5115(3): mov %rax,%r10
5118(2): jmp 0x27(%rip)
511a(6): nop 0x0(%rax,%rax,1)
5120(3): mov %r9,%rax
5123(2): cdq %rax
5125(3): idiv %rsi,%rax
5128(3): cmp %rbp,%rax
512b(6): jl 0x24d(%rip)
5131(4): imul %rsi,%rbp
5135(4): sub $0x1,%r8d
5139(6): jz 0xb7(%rip)
513f(3): cmp %rbp,%r10
5142(2): jle 0xffffffde(%rip)
5144(6): mov $0x1,%r11d
514a(a): mov $0x-9223372036854775808,%rbp
5154(2): jmp 0xffffffe1(%rip)
5156(a): nop 0x0(%rax,%rax,1)
5160(a): mov $0x-9223372036854775808,%r8
516a(3): movsxd %eax,%rsi
516d(3): mov %r8,%rax
5170(2): cdq %rax
5172(3): idiv %rsi,%rax
5175(3): cmp %rax,%rbp
5178(6): jl 0x1e8(%rip)
517e(4): sub $0x1,%r8
5182(3): mov %r8,%rax
5185(2): cdq %rax
5187(3): idiv %rsi,%rax
518a(3): cmp %rax,%rbp
518d(6): jnle 0x293(%rip)
5193(4): imul %rsi,%rbp
5197(5): jmp 0xfffffe69(%rip)
519c(4): nop 0x0(%rax)
51a0(3): movsxd %eax,%rsi
51a3(a): mov $0x-9223372036854775808,%rax
51ad(6): mov $0x3,%r8d
51b3(2): cdq %rax
51b5(3): xor %r11d,%r11d
51b8(a): mov $0x9223372036854775807,%r9
51c2(3): idiv %rsi,%rax
51c5(3): mov %rax,%r10
51c8(3): cmp %rbp,%r10
51cb(6): jnle 0x1f5(%rip)
51d1(3): mov %r9,%rax
51d4(2): cdq %rax
51d6(3): idiv %rsi,%rax
51d9(3): cmp %rbp,%rax
51dc(6): jl 0x274(%rip)
51e2(4): imul %rsi,%rbp
51e6(4): sub $0x1,%r8d
51ea(2): jnz 0xffffffde(%rip)
51ec(4): nop 0x0(%rax)
51f0(3): or %r11d,%r12d
51f3(5): jmp 0xfffffe0d(%rip)
51f8(8): nop 0x0(%rax,%rax,1)
5200(3): movsxd %eax,%rsi
5203(a): mov $0x-9223372036854775808,%rax
520d(6): mov $0x6,%r8d
5213(2): cdq %rax
5215(3): xor %r11d,%r11d
5218(a): mov $0x9223372036854775807,%r9
5222(3): idiv %rsi,%rax
5225(3): mov %rax,%r10
5228(2): jmp 0x23(%rip)
522a(6): nop 0x0(%rax,%rax,1)
5230(3): mov %r9,%rax
5233(2): cdq %rax
5235(3): idiv %rsi,%rax
5238(3): cmp %rbp,%rax
523b(6): jl 0x19d(%rip)
5241(4): imul %rsi,%rbp
5245(4): sub $0x1,%r8d
5249(2): jz 0xffffffa7(%rip)
524b(3): cmp %rbp,%r10
524e(2): jle 0xffffffe2(%rip)
5250(6): mov $0x1,%r11d
5256(a): mov $0x-9223372036854775808,%rbp
5260(2): jmp 0xffffffe5(%rip)
5262(6): nop 0x0(%rax,%rax,1)
5268(3): movsxd %eax,%rsi
526b(a): mov $0x-9223372036854775808,%rax
5275(6): mov $0x5,%r8d
527b(2): cdq %rax
527d(3): xor %r11d,%r11d
5280(a): mov $0x9223372036854775807,%r9
528a(3): idiv %rsi,%rax
528d(3): mov %rax,%r10
5290(2): jmp 0x27(%rip)
5292(6): nop 0x0(%rax,%rax,1)
5298(3): mov %r9,%rax
529b(2): cdq %rax
529d(3): idiv %rsi,%rax
52a0(3): cmp %rbp,%rax
52a3(6): jl 0x14d(%rip)
52a9(4): imul %rsi,%rbp
52ad(4): sub $0x1,%r8d
52b1(6): jz 0xffffff3f(%rip)
52b7(3): cmp %rbp,%r10
52ba(2): jle 0xffffffde(%rip)
52bc(6): mov $0x1,%r11d
52c2(a): mov $0x-9223372036854775808,%rbp
52cc(2): jmp 0xffffffe1(%rip)
52ce(2): nop 
52d0(a): mov $0x-9007199254740992,%rax
52da(3): cmp %rax,%rbp
52dd(6): jl 0x83(%rip)
52e3(a): mov $0x9007199254740991,%rax
52ed(3): cmp %rax,%rbp
52f0(6): jnle 0x130(%rip)
52f6(4): shl/sal $0xa,%rbp
52fa(5): jmp 0xfffffd06(%rip)
52ff(1): nop 
5300(3): movsxd %eax,%rsi
5303(a): mov $0x-9223372036854775808,%rax
530d(6): mov $0x4,%r8d
5313(2): cdq %rax
5315(3): xor %r11d,%r11d
5318(a): mov $0x9223372036854775807,%r9
5322(3): idiv %rsi,%rax
5325(3): mov %rax,%r10
5328(3): cmp %rbp,%r10
532b(2): jnle 0x65(%rip)
532d(3): mov %r9,%rax
5330(2): cdq %rax
5332(3): idiv %rsi,%rax
5335(3): cmp %rbp,%rax
5338(6): jl 0xd0(%rip)
533e(4): imul %rsi,%rbp
5342(4): sub $0x1,%r8d
5346(2): jnz 0xffffffe2(%rip)
5348(5): jmp 0xfffffea8(%rip)
534d(3): nop (%rax)
5350(6): mov $0x4,%r12d
5356(5): jmp 0xfffffb23(%rip)
535b(5): nop 0x0(%rax,%rax,1)
5360(6): mov $0x1,%r12d
5366(a): mov $0x-9223372036854775808,%rbp
5370(5): jmp 0xfffffc90(%rip)
5375(3): nop (%rax)
5378(6): mov $0x1,%r11d
537e(a): mov $0x9223372036854775807,%rbp
5388(5): jmp 0xfffffdad(%rip)
538d(3): nop (%rax)
5390(6): mov $0x1,%r11d
5396(a): mov $0x-9223372036854775808,%rbp
53a0(2): jmp 0xffffffa2(%rip)
53a2(6): nop 0x0(%rax,%rax,1)
53a8(6): mov $0x1,%r11d
53ae(a): mov $0x9223372036854775807,%rbp
53b8(5): jmp 0xfffffd0d(%rip)
53bd(3): nop (%rax)
53c0(6): mov $0x1,%r11d
53c6(a): mov $0x-9223372036854775808,%rbp
53d0(5): jmp 0xfffffe16(%rip)
53d5(3): nop (%rax)
53d8(6): mov $0x1,%r11d
53de(a): mov $0x9223372036854775807,%rbp
53e8(5): jmp 0xfffffe5d(%rip)
53ed(3): nop (%rax)
53f0(6): mov $0x1,%r11d
53f6(a): mov $0x9223372036854775807,%rbp
5400(5): jmp 0xfffffead(%rip)
5405(3): nop (%rax)
5408(6): mov $0x1,%r11d
540e(a): mov $0x9223372036854775807,%rbp
5418(5): jmp 0xffffff2a(%rip)
541d(3): nop (%rax)
5420(6): mov $0x1,%r12d
5426(a): mov $0x9223372036854775807,%rbp
5430(5): jmp 0xfffffbd0(%rip)
5435(3): nop (%rax)
5438(2): xor %edi,%edi
543a(4): cmp $0x42,0x2(%rcx)
543e(5): mov $0x400,%eax
5443(4): setz %dil
5447(4): lea 0x1(%rdi,%rdi,1),%edi
544b(5): jmp 0xfffffb37(%rip)
5450(6): mov $0x1,%r11d
5456(a): mov $0x9223372036854775807,%rbp
5460(5): jmp 0xfffffd86(%rip)
5465(5): mov $0x1,%eax
546a(3): mov %r8,%rbp
546d(5): jmp 0xfffffb8b(%rip)
5472(5): mov $0x1,%eax
5477(3): mov %r10,%rbp
547a(5): jmp 0xfffffb7e(%rip)
547f(7): lea 0x15da(%rip),%rcx
5486(7): lea 0x14b3(%rip),%rsi
548d(7): lea 0x14cc(%rip),%rdi
5494(5): mov $0x54,%edx
5499(5): call 0xffffc087(%rip)
549e(5): call 0xffffc012(%rip)

"rpl_mbrtowc" :
54b0(2): push %r13
54b2(2): push %r12
54b4(3): mov %rsi,%r13
54b7(1): push %rbp
54b8(1): push %rbx
54b9(3): mov %rdi,%rbx
54bc(3): mov %rdx,%r12
54bf(4): sub $0x18,%rsp
54c3(9): mov $0x28,%rax
54cc(5): mov %rax,0x8(%rsp)
54d1(2): xor %eax,%eax
54d3(5): lea 0x4(%rsp),%rax
54d8(3): test %rdi,%rdi
54db(4): cmove %rax,%rbx
54df(3): mov %rbx,%rdi
54e2(5): call 0xffffbfee(%rip)
54e7(4): cmp $0xfffffffd,%rax
54eb(3): mov %rax,%rbp
54ee(2): jbe 0x22(%rip)
54f0(3): test %r12,%r12
54f3(2): jz 0x1d(%rip)
54f5(2): xor %edi,%edi
54f7(5): call 0xc9(%rip)
54fc(2): test %al,%al
54fe(2): jnz 0x12(%rip)
5500(5): movzx 0x0(%r13),%eax
5505(5): mov $0x1,%ebp
550a(2): mov %eax,(%rbx)
550c(4): nop 0x0(%rax)
5510(5): mov 0x8(%rsp),%rdx
5515(9): xor $0x28,%rdx
551e(3): mov %rbp,%rax
5521(2): jnz 0xd(%rip)
5523(4): add $0x18,%rsp
5527(1): pop %rbx
5528(1): pop %rbp
5529(2): pop %r12
552b(2): pop %r13
552d(1): ret near (%rsp)
552e(5): call 0xffffbf82(%rip)

"close_stream" :
5540(2): push %r12
5542(1): push %rbp
5543(3): mov %rdi,%rbp
5546(1): push %rbx
5547(5): call 0xffffbee9(%rip)
554c(3): mov 0x0(%rbp),%ebx
554f(3): mov %rbp,%rdi
5552(3): mov %rax,%r12
5555(5): call 0x10b(%rip)
555a(3): and $0x20,%ebx
555d(2): test %ebx,%ebx
555f(2): jnz 0x19(%rip)
5561(2): test %eax,%eax
5563(2): jz 0xc(%rip)
5565(3): test %r12,%r12
5568(5): mov $0xffffffff,%eax
556d(2): jz 0x3b(%rip)
556f(1): pop %rbx
5570(1): pop %rbp
5571(2): pop %r12
5573(1): ret near (%rsp)
5574(4): nop 0x0(%rax)
5578(2): test %eax,%eax
557a(2): jnz 0x1e(%rip)
557c(5): call 0xffffbe84(%rip)
5581(6): mov $0x0,(%rax)
5587(5): mov $0xffffffff,%eax
558c(1): pop %rbx
558d(1): pop %rbp
558e(2): pop %r12
5590(1): ret near (%rsp)
5591(7): nop 0x0(%rax)
5598(1): pop %rbx
5599(5): mov $0xffffffff,%eax
559e(1): pop %rbp
559f(2): pop %r12
55a1(1): ret near (%rsp)
55a2(6): nop 0x0(%rax,%rax,1)
55a8(5): call 0xffffbe58(%rip)
55ad(3): cmp $0x9,(%rax)
55b0(1): pop %rbx
55b1(1): pop %rbp
55b2(2): pop %r12
55b4(3): setnz %al
55b7(3): movzx %al,%eax
55ba(2): neg %eax
55bc(1): ret near (%rsp)

"hard_locale" :
55c0(4): sub $0x8,%rsp
55c4(2): xor %esi,%esi
55c6(5): call 0xffffc04a(%rip)
55cb(3): mov %rax,%rdx
55ce(5): mov $0x1,%eax
55d3(3): test %rdx,%rdx
55d6(2): jz 0x1f(%rip)
55d8(7): lea 0x148c(%rip),%rdi
55df(5): mov $0x2,%ecx
55e4(3): mov %rdx,%rsi
55e7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
55e9(3): setnbe %cl
55ec(3): sbb $0x0,%cl
55ef(2): xor %eax,%eax
55f1(2): test %cl,%cl
55f3(2): jnz 0xd(%rip)
55f5(4): add $0x8,%rsp
55f9(1): ret near (%rsp)
55fa(6): nop 0x0(%rax,%rax,1)
5600(7): lea 0x1466(%rip),%rdi
5607(5): mov $0x6,%ecx
560c(3): mov %rdx,%rsi
560f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5611(3): setnbe %al
5614(2): sbb $0x0,%al
5616(2): test %al,%al
5618(3): setnz %al
561b(4): add $0x8,%rsp
561f(1): ret near (%rsp)

"locale_charset" :
5620(4): sub $0x8,%rsp
5624(5): mov $0xe,%edi
5629(5): call 0xffffbfa7(%rip)
562e(3): test %rax,%rax
5631(2): jz 0x1f(%rip)
5633(3): cmp $0x0,(%rax)
5636(7): lea 0x1436(%rip),%rdx
563d(4): cmove %rdx,%rax
5641(4): add $0x8,%rsp
5645(1): ret near (%rsp)
5646(a): nop 0x0(%rax,%rax,1)
5650(7): lea 0x141c(%rip),%rax
5657(4): add $0x8,%rsp
565b(1): ret near (%rsp)

"rpl_fclose" :
5660(2): push %r12
5662(1): push %rbp
5663(1): push %rbx
5664(3): mov %rdi,%rbx
5667(5): call 0xffffbf29(%rip)
566c(2): test %eax,%eax
566e(3): mov %rbx,%rdi
5671(2): js 0x56(%rip)
5673(5): call 0xffffbf7d(%rip)
5678(2): test %eax,%eax
567a(2): jnz 0x2e(%rip)
567c(3): mov %rbx,%rdi
567f(5): call 0x61(%rip)
5684(2): test %eax,%eax
5686(2): jz 0x3e(%rip)
5688(5): call 0xffffbd78(%rip)
568d(3): mov (%rax),%r12d
5690(3): mov %rbx,%rdi
5693(3): mov %rax,%rbp
5696(5): call 0xffffbdca(%rip)
569b(3): test %r12d,%r12d
569e(2): jnz 0x32(%rip)
56a0(1): pop %rbx
56a1(1): pop %rbp
56a2(2): pop %r12
56a4(1): ret near (%rsp)
56a5(3): nop (%rax)
56a8(3): mov %rbx,%rdi
56ab(5): call 0xffffbee5(%rip)
56b0(2): xor %esi,%esi
56b2(5): mov $0x1,%edx
56b7(2): mov %eax,%edi
56b9(5): call 0xffffbe57(%rip)
56be(4): cmp $0xffffffff,%rax
56c2(2): jnz 0xffffffba(%rip)
56c4(3): mov %rbx,%rdi
56c7(1): pop %rbx
56c8(1): pop %rbp
56c9(2): pop %r12
56cb(5): jmp 0xffffbd95(%rip)
56d0(4): mov %r12d,0x0(%rbp)
56d4(5): mov $0xffffffff,%eax
56d9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
56e0(3): test %rdi,%rdi
56e3(1): push %rbx
56e4(3): mov %rdi,%rbx
56e7(2): jz 0x13(%rip)
56e9(5): call 0xffffbf07(%rip)
56ee(2): test %eax,%eax
56f0(2): jz 0xa(%rip)
56f2(6): test $0x100,(%rbx)
56f8(2): jnz 0x10(%rip)
56fa(3): mov %rbx,%rdi
56fd(1): pop %rbx
56fe(5): jmp 0xffffbec2(%rip)
5703(5): nop 0x0(%rax,%rax,1)
5708(3): mov %rbx,%rdi
570b(5): mov $0x1,%edx
5710(2): xor %esi,%esi
5712(5): call 0xe(%rip)
5717(3): mov %rbx,%rdi
571a(1): pop %rbx
571b(5): jmp 0xffffbea5(%rip)

"rpl_fseeko" :
5720(4): mov 0x8(%rdi),%rax
5724(4): cmp %rax,0x10(%rdi)
5728(2): jz 0x8(%rip)
572a(5): jmp 0xffffbf26(%rip)
572f(1): nop 
5730(4): mov 0x20(%rdi),%rax
5734(4): cmp %rax,0x28(%rdi)
5738(2): jnz 0xfffffff2(%rip)
573a(5): cmp $0x0,0x48(%rdi)
573f(2): jnz 0xffffffeb(%rip)
5741(2): push %r12
5743(1): push %rbp
5744(3): mov %edx,%r12d
5747(1): push %rbx
5748(3): mov %rsi,%rbp
574b(3): mov %rdi,%rbx
574e(5): call 0xffffbe42(%rip)
5753(3): mov %r12d,%edx
5756(3): mov %rbp,%rsi
5759(2): mov %eax,%edi
575b(5): call 0xffffbdb5(%rip)
5760(4): cmp $0xffffffff,%rax
5764(2): jz 0xe(%rip)
5766(3): and $0xef,(%rbx)
5769(7): mov %rax,0x90(%rbx)
5770(2): xor %eax,%eax
5772(1): pop %rbx
5773(1): pop %rbp
5774(2): pop %r12
5776(1): ret near (%rsp)

"__libc_csu_init" :
5780(2): push %r15
5782(2): push %r14
5784(3): mov %rdx,%r15
5787(2): push %r13
5789(2): push %r12
578b(7): lea 0x20237e(%rip),%r12
5792(1): push %rbp
5793(7): lea 0x20237e(%rip),%rbp
579a(1): push %rbx
579b(3): mov %edi,%r13d
579e(3): mov %rsi,%r14
57a1(3): sub %r12,%rbp
57a4(4): sub $0x8,%rsp
57a8(4): sar $0x3,%rbp
57ac(5): call 0xffffbc0c(%rip)
57b1(3): test %rbp,%rbp
57b4(2): jz 0x22(%rip)
57b6(2): xor %ebx,%ebx
57b8(8): nop 0x0(%rax,%rax,1)
57c0(3): mov %r15,%rdx
57c3(3): mov %r14,%rsi
57c6(3): mov %r13d,%edi
57c9(4): call 0x0(%r12,%rbx,8)
57cd(4): add $0x1,%rbx
57d1(3): cmp %rbx,%rbp
57d4(2): jnz 0xffffffec(%rip)
57d6(4): add $0x8,%rsp
57da(1): pop %rbx
57db(1): pop %rbp
57dc(2): pop %r12
57de(2): pop %r13
57e0(2): pop %r14
57e2(2): pop %r15
57e4(1): ret near (%rsp)

"atexit" :
5800(7): mov 0x202801(%rip),%rdx
5807(2): xor %esi,%esi
5809(5): jmp 0xffffbe57(%rip)

"_fini" :
5810(4): sub $0x8,%rsp
5814(4): add $0x8,%rsp
5818(1): ret near (%rsp)

