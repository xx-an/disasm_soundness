
"__ctype_toupper_loc@plt" :
1860(6): jmp 0x21755a(%rip)
1866(5): push $0x0

"getenv@plt" :
1870(6): jmp 0x217552(%rip)
1876(5): push $0x1

"free@plt" :
1880(6): jmp 0x21754a(%rip)
1886(5): push $0x2

"abort@plt" :
1890(6): jmp 0x217542(%rip)
1896(5): push $0x3

"__errno_location@plt" :
18a0(6): jmp 0x21753a(%rip)
18a6(5): push $0x4

"unlink@plt" :
18b0(6): jmp 0x217532(%rip)
18b6(5): push $0x5

"strncmp@plt" :
18c0(6): jmp 0x21752a(%rip)
18c6(5): push $0x6

"_exit@plt" :
18d0(6): jmp 0x217522(%rip)
18d6(5): push $0x7

"__fpending@plt" :
18e0(6): jmp 0x21751a(%rip)
18e6(5): push $0x8

"isatty@plt" :
18f0(6): jmp 0x217512(%rip)
18f6(5): push $0x9

"fcntl@plt" :
1900(6): jmp 0x21750a(%rip)
1906(5): push $0xa

"clearerr_unlocked@plt" :
1910(6): jmp 0x217502(%rip)
1916(5): push $0xb

"textdomain@plt" :
1920(6): jmp 0x2174fa(%rip)
1926(5): push $0xc

"iswctype@plt" :
1930(6): jmp 0x2174f2(%rip)
1936(5): push $0xd

"fclose@plt" :
1940(6): jmp 0x2174ea(%rip)
1946(5): push $0xe

"bindtextdomain@plt" :
1950(6): jmp 0x2174e2(%rip)
1956(5): push $0xf

"dcgettext@plt" :
1960(6): jmp 0x2174da(%rip)
1966(5): push $0x10

"__ctype_get_mb_cur_max@plt" :
1970(6): jmp 0x2174d2(%rip)
1976(5): push $0x11

"strlen@plt" :
1980(6): jmp 0x2174ca(%rip)
1986(5): push $0x12

"__stack_chk_fail@plt" :
1990(6): jmp 0x2174c2(%rip)
1996(5): push $0x13

"getopt_long@plt" :
19a0(6): jmp 0x2174ba(%rip)
19a6(5): push $0x14

"mbrtowc@plt" :
19b0(6): jmp 0x2174b2(%rip)
19b6(5): push $0x15

"strrchr@plt" :
19c0(6): jmp 0x2174aa(%rip)
19c6(5): push $0x16

"ftruncate@plt" :
19d0(6): jmp 0x2174a2(%rip)
19d6(5): push $0x17

"mkostemp@plt" :
19e0(6): jmp 0x21749a(%rip)
19e6(5): push $0x18

"lseek@plt" :
19f0(6): jmp 0x217492(%rip)
19f6(5): push $0x19

"__assert_fail@plt" :
1a00(6): jmp 0x21748a(%rip)
1a06(5): push $0x1a

"memset@plt" :
1a10(6): jmp 0x217482(%rip)
1a16(5): push $0x1b

"close@plt" :
1a20(6): jmp 0x21747a(%rip)
1a26(5): push $0x1c

"read@plt" :
1a30(6): jmp 0x217472(%rip)
1a36(5): push $0x1d

"memcmp@plt" :
1a40(6): jmp 0x21746a(%rip)
1a46(5): push $0x1e

"wctype@plt" :
1a50(6): jmp 0x217462(%rip)
1a56(5): push $0x1f

"fputs_unlocked@plt" :
1a60(6): jmp 0x21745a(%rip)
1a66(5): push $0x20

"calloc@plt" :
1a70(6): jmp 0x217452(%rip)
1a76(5): push $0x21

"strcmp@plt" :
1a80(6): jmp 0x21744a(%rip)
1a86(5): push $0x22

"memcpy@plt" :
1a90(6): jmp 0x217442(%rip)
1a96(5): push $0x23

"fileno@plt" :
1aa0(6): jmp 0x21743a(%rip)
1aa6(5): push $0x24

"iswalnum@plt" :
1ab0(6): jmp 0x217432(%rip)
1ab6(5): push $0x25

"malloc@plt" :
1ac0(6): jmp 0x21742a(%rip)
1ac6(5): push $0x26

"wcrtomb@plt" :
1ad0(6): jmp 0x217422(%rip)
1ad6(5): push $0x27

"fflush@plt" :
1ae0(6): jmp 0x21741a(%rip)
1ae6(5): push $0x28

"nl_langinfo@plt" :
1af0(6): jmp 0x217412(%rip)
1af6(5): push $0x29

"mkstemp@plt" :
1b00(6): jmp 0x21740a(%rip)
1b06(5): push $0x2a

"__freading@plt" :
1b10(6): jmp 0x217402(%rip)
1b16(5): push $0x2b

"fwrite_unlocked@plt" :
1b20(6): jmp 0x2173fa(%rip)
1b26(5): push $0x2c

"realloc@plt" :
1b30(6): jmp 0x2173f2(%rip)
1b36(5): push $0x2d

"fdopen@plt" :
1b40(6): jmp 0x2173ea(%rip)
1b46(5): push $0x2e

"setlocale@plt" :
1b50(6): jmp 0x2173e2(%rip)
1b56(5): push $0x2f

"__printf_chk@plt" :
1b60(6): jmp 0x2173da(%rip)
1b66(5): push $0x30

"btowc@plt" :
1b70(6): jmp 0x2173d2(%rip)
1b76(5): push $0x31

"mempcpy@plt" :
1b80(6): jmp 0x2173ca(%rip)
1b86(5): push $0x32

"memmove@plt" :
1b90(6): jmp 0x2173c2(%rip)
1b96(5): push $0x33

"error@plt" :
1ba0(6): jmp 0x2173ba(%rip)
1ba6(5): push $0x34

"open@plt" :
1bb0(6): jmp 0x2173b2(%rip)
1bb6(5): push $0x35

"fseeko@plt" :
1bc0(6): jmp 0x2173aa(%rip)
1bc6(5): push $0x36

"towlower@plt" :
1bd0(6): jmp 0x2173a2(%rip)
1bd6(5): push $0x37

"towupper@plt" :
1be0(6): jmp 0x21739a(%rip)
1be6(5): push $0x38

"__cxa_atexit@plt" :
1bf0(6): jmp 0x217392(%rip)
1bf6(5): push $0x39

"exit@plt" :
1c00(6): jmp 0x21738a(%rip)
1c06(5): push $0x3a

"fwrite@plt" :
1c10(6): jmp 0x217382(%rip)
1c16(5): push $0x3b

"__fprintf_chk@plt" :
1c20(6): jmp 0x21737a(%rip)
1c26(5): push $0x3c

"fflush_unlocked@plt" :
1c30(6): jmp 0x217372(%rip)
1c36(5): push $0x3d

"mbsinit@plt" :
1c40(6): jmp 0x21736a(%rip)
1c46(5): push $0x3e

"iswprint@plt" :
1c50(6): jmp 0x217362(%rip)
1c56(5): push $0x3f

"__ctype_tolower_loc@plt" :
1c60(6): jmp 0x21735a(%rip)
1c66(5): push $0x40

"__ctype_b_loc@plt" :
1c70(6): jmp 0x217352(%rip)
1c76(5): push $0x41

".plt.got" :
1c80(6): jmp 0x21736a(%rip)
1c86(2): nop 

"_init" :
1838(4): sub $0x8,%rsp
183c(7): mov 0x21779d(%rip),%rax
1843(3): test %rax,%rax
1846(2): jz 0x4(%rip)
1848(2): call %rax
184a(4): add $0x8,%rsp
184e(1): ret near (%rsp)

"main" :
1c90(2): push %r15
1c92(2): push %r14
1c94(2): push %r13
1c96(2): push %r12
1c98(7): lea 0x216e01(%rip),%r12
1c9f(1): push %rbp
1ca0(1): push %rbx
1ca1(2): mov %edi,%ebp
1ca3(3): mov %rsi,%rbx
1ca6(4): sub $0x28,%rsp
1caa(3): mov (%rsi),%rdi
1cad(5): call 0x14b3(%rip)
1cb2(7): lea 0x12f48(%rip),%rsi
1cb9(5): mov $0x6,%edi
1cbe(5): call 0xfffffe92(%rip)
1cc3(7): lea 0x12556(%rip),%rsi
1cca(7): lea 0x12521(%rip),%rdi
1cd1(5): call 0xfffffc7f(%rip)
1cd6(7): lea 0x12515(%rip),%rdi
1cdd(5): call 0xfffffc43(%rip)
1ce2(7): lea 0x12c7(%rip),%rdi
1ce9(5): call 0x12437(%rip)
1cee(7): lea 0x12f0b(%rip),%rax
1cf5(b): mov $0x1,0x219580(%rip)
1d00(7): mov $0x1,0x219581(%rip)
1d07(7): mov %rax,0x219582(%rip)
1d0e(7): lea 0x1253f(%rip),%rdx
1d15(3): xor %r8d,%r8d
1d18(3): mov %r12,%rcx
1d1b(3): mov %rbx,%rsi
1d1e(2): mov %ebp,%edi
1d20(5): call 0xfffffc80(%rip)
1d25(3): cmp $0xff,%eax
1d28(6): jz 0xa0(%rip)
1d2e(3): cmp $0x62,%eax
1d31(2): jz 0x77(%rip)
1d33(2): jle 0x25(%rip)
1d35(3): cmp $0x72,%eax
1d38(2): jz 0x80(%rip)
1d3a(3): cmp $0x73,%eax
1d3d(6): jnz 0x68e(%rip)
1d43(7): mov 0x21734e(%rip),%rax
1d4a(7): mov %rax,0x21953f(%rip)
1d51(2): jmp 0xffffffbd(%rip)
1d53(5): nop 0x0(%rax,%rax,1)
1d58(5): cmp $0xffffff7d,%eax
1d5d(6): jnz 0x654(%rip)
1d63(4): sub $0x8,%rsp
1d67(7): mov 0x21731a(%rip),%rdi
1d6e(7): mov 0x21729b(%rip),%rcx
1d75(2): push $0x0
1d77(7): lea 0x124ba(%rip),%r9
1d7e(7): lea 0x124c3(%rip),%r8
1d85(7): lea 0x12462(%rip),%rdx
1d8c(7): lea 0x123e1(%rip),%rsi
1d93(2): xor %eax,%eax
1d95(5): call 0x369b(%rip)
1d9a(2): xor %edi,%edi
1d9c(5): call 0xfffffe64(%rip)
1da1(7): nop 0x0(%rax)
1da8(7): mov $0x0,0x2194d9(%rip)
1daf(5): jmp 0xffffff5f(%rip)
1db4(4): nop 0x0(%rax)
1db8(b): mov $0x0,0x2194bd(%rip)
1dc3(5): jmp 0xffffff4b(%rip)
1dc8(8): cmp $0x0,0x2194b0(%rip)
1dd0(7): mov 0x2194b9(%rip),%r8
1dd7(4): movzx (%r8),%edx
1ddb(6): jnz 0x12a(%rip)
1de1(2): test %dl,%dl
1de3(6): jz 0x5f2(%rip)
1de9(7): lea 0x219330(%rip),%rax
1df0(3): mov %r8,%rdi
1df3(b): mov $0x0,0x219422(%rip)
1dfe(b): mov $0x0,0x21941f(%rip)
1e09(b): mov $0x0,0x219434(%rip)
1e14(4): or $0xffffffff,%rcx
1e18(7): mov %rax,0x219421(%rip)
1e1f(2): xor %eax,%eax
1e21(7): lea 0x2193f8(%rip),%rdx
1e28(2): REPNZ scasb rdi(%es,10),%al
1e2a(3): mov %r8,%rdi
1e2d(3): mov %rcx,%rax
1e30(3): not %rax
1e33(4): lea 0xffffffff(%rax),%rsi
1e37(5): call 0x11299(%rip)
1e3c(3): test %rax,%rax
1e3f(6): jnz 0x5ba(%rip)
1e45(7): mov 0x219434(%rip),%rsi
1e4c(b): mov $0x2000,0x219411(%rip)
1e57(5): mov $0x32,%edx
1e5c(5): mov $0x2000,%eax
1e61(7): cmp $0xfff,%rsi
1e68(2): jnbe 0x11(%rip)
1e6a(2): jmp 0x24(%rip)
1e6c(4): nop 0x0(%rax)
1e70(3): sub $0x1,%edx
1e73(6): jz 0x54c(%rip)
1e79(3): add %rax,%rax
1e7c(3): mov %rax,%rcx
1e7f(3): shr $0x1,%rcx
1e82(3): cmp %rsi,%rcx
1e85(2): jbe 0xffffffeb(%rip)
1e87(7): mov %rax,0x2193da(%rip)
1e8e(5): lea 0x1(%rax,%rsi,1),%rdx
1e93(4): lea 0x0(%rdx,%rdx,1),%rdi
1e97(3): cmp %rax,%rdx
1e9a(3): setbe %cl
1e9d(3): cmp %rdx,%rdi
1ea0(7): mov %rdi,0x2193b9(%rip)
1ea7(3): setbe %al
1eaa(2): or %al,%cl
1eac(6): jnz 0x51a(%rip)
1eb2(5): call 0x36de(%rip)
1eb7(7): mov 0x2193c2(%rip),%r12
1ebe(3): mov %rax,%rcx
1ec1(7): mov %rax,0x2193a8(%rip)
1ec8(3): test %r12,%r12
1ecb(6): jnz 0x410(%rip)
1ed1(4): add $0x1,%rcx
1ed5(7): mov %rcx,0x219394(%rip)
1edc(7): movsxd 0x2171ad(%rip),%rax
1ee3(2): cmp %ebp,%eax
1ee5(2): jnl 0x51(%rip)
1ee7(4): lea 0x0(%rbx,%rax,8),%r15
1eeb(3): mov (%r15),%r14
1eee(3): test %r14,%r14
1ef1(6): jz 0x3e0(%rip)
1ef7(7): lea 0x127cc(%rip),%rax
1efe(5): mov %rax,0x10(%rsp)
1f03(2): jmp 0x49(%rip)
1f05(2): test %dl,%dl
1f07(5): mov $0x1,%eax
1f0c(2): jz 0x17(%rip)
1f0e(2): xor %eax,%eax
1f10(4): or $0xffffffff,%rcx
1f14(3): mov %r8,%rdi
1f17(2): REPNZ scasb rdi(%es,10),%al
1f19(3): mov %rcx,%rax
1f1c(3): not %rax
1f1f(4): sub $0x1,%rax
1f23(7): mov %rax,0x219356(%rip)
1f2a(7): mov %rax,0x219347(%rip)
1f31(5): jmp 0xffffff14(%rip)
1f36(7): lea 0x1278d(%rip),%rax
1f3d(7): lea 0x216b3c(%rip),%r15
1f44(5): mov %rax,0x10(%rsp)
1f49(3): mov %rax,%r14
1f4c(4): lea 0x8(%r15),%rax
1f50(5): mov $0x1,0xf(%rsp)
1f55(4): mov %rax,(%rsp)
1f59(7): nop 0x0(%rax)
1f60(5): mov 0x10(%rsp),%rdi
1f65(5): mov $0x2,%ecx
1f6a(3): mov %r14,%rsi
1f6d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1f6f(4): setnbe %r12b
1f73(4): sbb $0x0,%r12b
1f77(4): movsx %r12b,%r12d
1f7b(3): test %r12d,%r12d
1f7e(6): jnz 0x1c8(%rip)
1f84(7): lea 0x122e8(%rip),%rsi
1f8b(5): mov $0x5,%edx
1f90(2): xor %edi,%edi
1f92(7): mov $0x1,0x2192f0(%rip)
1f99(2): xor %ebp,%ebp
1f9b(5): call 0xfffff9c5(%rip)
1fa0(3): mov %rax,%r14
1fa3(2): xor %esi,%esi
1fa5(5): mov $0x2,%edx
1faa(2): mov %ebp,%edi
1fac(5): call 0xfffffa44(%rip)
1fb1(3): test %rax,%rax
1fb4(3): mov %rax,%rbx
1fb7(2): js 0x11(%rip)
1fb9(2): mov %ebp,%edi
1fbb(5): call 0xfffff935(%rip)
1fc0(2): test %eax,%eax
1fc2(6): jz 0x2cb(%rip)
1fc8(8): cmp $0x0,0x219120(%rip)
1fd0(6): jz 0x246(%rip)
1fd6(7): mov 0x21910b(%rip),%rbx
1fdd(3): mov %rbx,%rdi
1fe0(5): call 0xfffff930(%rip)
1fe5(2): xor %edx,%edx
1fe7(2): xor %esi,%esi
1fe9(3): mov %rbx,%rdi
1fec(5): call 0x3834(%rip)
1ff1(2): test %eax,%eax
1ff3(6): js 0x10c(%rip)
1ff9(7): mov 0x2190e8(%rip),%rdi
2000(5): call 0xfffffaa0(%rip)
2005(2): xor %esi,%esi
2007(2): mov %eax,%edi
2009(5): call 0xfffff9c7(%rip)
200e(2): test %eax,%eax
2010(6): js 0xef(%rip)
2016(7): mov 0x2190d3(%rip),%rax
201d(7): mov 0x2190c4(%rip),%r13
2024(2): xor %ebx,%ebx
2026(5): mov %rax,0x18(%rsp)
202b(2): jmp 0x32(%rip)
202d(3): nop (%rax)
2030(4): cmp $0xffffffff,%rax
2034(6): jz 0x19a(%rip)
203a(7): mov 0x21922f(%rip),%rdi
2041(3): mov %r13,%rcx
2044(3): mov %rax,%rdx
2047(5): mov $0x1,%esi
204c(5): call 0xfffffad4(%rip)
2051(3): cmp %rax,%r15
2054(6): jnz 0x19d(%rip)
205a(3): add %r15,%rbx
205d(7): mov 0x219204(%rip),%rdx
2064(7): mov 0x219205(%rip),%rsi
206b(2): mov %ebp,%edi
206d(5): call 0x2e23(%rip)
2072(3): test %rax,%rax
2075(3): mov %rax,%r15
2078(2): jnz 0xffffffb8(%rip)
207a(3): mov %r13,%rdi
207d(5): call 0xfffffbb3(%rip)
2082(2): test %eax,%eax
2084(6): jnz 0x16d(%rip)
208a(3): test %rbx,%rbx
208d(6): js 0xb2(%rip)
2093(3): mov %r13,%rdi
2096(5): call 0xfffffa0a(%rip)
209b(5): mov 0x18(%rsp),%rsi
20a0(3): mov %rbx,%rdx
20a3(2): mov %eax,%edi
20a5(5): call 0x58b(%rip)
20aa(2): mov %eax,%ebx
20ac(3): test %r12d,%r12d
20af(6): jnz 0xf0(%rip)
20b5(5): add $0x8,(%rsp)
20ba(4): and %bl,0xf(%rsp)
20be(4): mov (%rsp),%rax
20c2(4): mov 0xfffffff8(%rax),%r14
20c6(3): test %r14,%r14
20c9(6): jnz 0xfffffe97(%rip)
20cf(2): xor %esi,%esi
20d1(2): xor %edi,%edi
20d3(5): call 0x45d(%rip)
20d8(7): cmp $0x0,0x2191aa(%rip)
20df(6): jnz 0x1c2(%rip)
20e5(5): movzx 0xf(%rsp),%eax
20ea(4): add $0x28,%rsp
20ee(1): pop %rbx
20ef(1): pop %rbp
20f0(2): pop %r12
20f2(3): xor $0x1,%eax
20f5(2): pop %r13
20f7(3): movzx %al,%eax
20fa(2): pop %r14
20fc(2): pop %r15
20fe(1): ret near (%rsp)
20ff(7): mov 0x218fea(%rip),%rsi
2106(5): mov $0x4,%edi
210b(5): call 0x2a95(%rip)
2110(7): lea 0x12541(%rip),%rsi
2117(3): mov %rax,%rbx
211a(5): mov $0x5,%edx
211f(2): xor %edi,%edi
2121(5): call 0xfffff83f(%rip)
2126(3): mov %rax,%r13
2129(5): call 0xfffff777(%rip)
212e(2): mov (%rax),%esi
2130(3): mov %rbx,%rcx
2133(3): mov %r13,%rdx
2136(2): xor %edi,%edi
2138(2): xor %eax,%eax
213a(5): call 0xfffffa66(%rip)
213f(2): xor %ebx,%ebx
2141(5): jmp 0xffffff6b(%rip)
2146(2): xor %esi,%esi
2148(2): xor %eax,%eax
214a(3): mov %r14,%rdi
214d(5): call 0xfffffa63(%rip)
2152(2): test %eax,%eax
2154(2): mov %eax,%ebp
2156(6): jns 0xfffffe4d(%rip)
215c(3): mov %r14,%rsi
215f(5): mov $0x4,%edi
2164(5): call 0x2a3c(%rip)
2169(7): lea 0x12112(%rip),%rsi
2170(3): mov %rax,%rbp
2173(5): mov $0x5,%edx
2178(2): xor %edi,%edi
217a(5): call 0xfffff7e6(%rip)
217f(3): mov %rax,%rbx
2182(5): call 0xfffff71e(%rip)
2187(2): mov (%rax),%esi
2189(3): mov %rbx,%rdx
218c(3): mov %rbp,%rcx
218f(2): xor %edi,%edi
2191(2): xor %eax,%eax
2193(2): xor %ebx,%ebx
2195(5): call 0xfffffa0b(%rip)
219a(5): jmp 0xffffff1b(%rip)
219f(2): mov %ebp,%edi
21a1(5): call 0xfffff87f(%rip)
21a6(2): test %eax,%eax
21a8(6): jz 0xffffff0d(%rip)
21ae(3): mov %r14,%rdx
21b1(5): mov $0x3,%esi
21b6(2): xor %edi,%edi
21b8(5): call 0x2ae8(%rip)
21bd(5): mov $0x5,%edx
21c2(3): mov %rax,%rbp
21c5(7): lea 0x11f88(%rip),%rsi
21cc(2): jmp 0xffffffac(%rip)
21ce(3): mov %r14,%rdx
21d1(5): mov $0x3,%esi
21d6(2): xor %edi,%edi
21d8(5): call 0x2ac8(%rip)
21dd(5): mov $0x5,%edx
21e2(3): mov %rax,%rbx
21e5(7): lea 0x11f68(%rip),%rsi
21ec(5): jmp 0xffffff33(%rip)
21f1(5): mov 0x18(%rsp),%rdx
21f6(5): mov $0x3,%esi
21fb(2): xor %edi,%edi
21fd(5): call 0x2aa3(%rip)
2202(5): mov $0x5,%edx
2207(3): mov %rax,%rbx
220a(7): lea 0x120b7(%rip),%rsi
2211(5): jmp 0xffffff0e(%rip)
2216(7): lea 0x12083(%rip),%rdi
221d(5): call 0xfffff653(%rip)
2222(3): test %rax,%rax
2225(3): mov %rax,%rbx
2228(7): lea 0x11fec(%rip),%rax
222f(7): lea 0x120a2(%rip),%rsi
2236(4): cmove %rax,%rbx
223a(2): xor %edx,%edx
223c(3): mov %rbx,%rdi
223f(5): call 0xe21(%rip)
2244(3): mov %rax,%rdi
2247(7): mov %rax,0x218ea2(%rip)
224e(5): call 0x2ca2(%rip)
2253(2): test %eax,%eax
2255(3): mov %eax,%r13d
2258(6): js 0xa9(%rip)
225e(7): lea 0x12042(%rip),%rsi
2265(2): mov %eax,%edi
2267(5): call 0xfffff8d9(%rip)
226c(3): test %rax,%rax
226f(7): mov %rax,0x218e72(%rip)
2276(7): mov 0x218e73(%rip),%rdi
227d(6): jz 0xde(%rip)
2283(5): call 0xfffff62d(%rip)
2288(5): jmp 0xfffffd8e(%rip)
228d(3): mov %rbx,%rdx
2290(3): mov %r14,%rsi
2293(2): mov %ebp,%edi
2295(5): call 0x39b(%rip)
229a(2): mov %eax,%ebx
229c(5): jmp 0xfffffe10(%rip)
22a1(2): xor %edi,%edi
22a3(5): call 0xfffff77d(%rip)
22a8(2): test %eax,%eax
22aa(6): jns 0xfffffe3b(%rip)
22b0(5): call 0xfffff5f0(%rip)
22b5(2): mov (%rax),%esi
22b7(7): lea 0x1240c(%rip),%rdx
22be(2): xor %edi,%edi
22c0(2): xor %eax,%eax
22c2(5): call 0xfffff8de(%rip)
22c7(5): mov $0x0,0xf(%rsp)
22cc(5): jmp 0xfffffe19(%rip)
22d1(5): mov $0x1,0xf(%rsp)
22d6(5): jmp 0xfffffdf9(%rip)
22db(7): mov 0x218fae(%rip),%rsi
22e2(5): lea 0x1(%r12),%rdx
22e7(3): mov %rax,%rdi
22ea(5): call 0xfffff7a6(%rip)
22ef(3): mov %rax,%rcx
22f2(3): add %r12,%rcx
22f5(7): mov %rcx,0x218f74(%rip)
22fc(5): jmp 0xfffffbe0(%rip)
2301(3): mov %rbx,%rsi
2304(5): mov $0x4,%edi
2309(5): call 0x2897(%rip)
230e(7): lea 0x1231b(%rip),%rsi
2315(5): mov $0x5,%edx
231a(2): xor %edi,%edi
231c(3): mov %rax,%rbx
231f(5): call 0xfffff641(%rip)
2324(3): mov %rax,%r13
2327(5): call 0xfffff579(%rip)
232c(2): mov (%rax),%esi
232e(3): mov %rbx,%rcx
2331(3): mov %r13,%rdx
2334(2): xor %edi,%edi
2336(2): xor %eax,%eax
2338(5): call 0xfffff868(%rip)
233d(7): mov 0x218dac(%rip),%rdi
2344(2): xor %ebx,%ebx
2346(5): call 0xfffff53a(%rip)
234b(b): mov $0x0,0x218d9a(%rip)
2356(5): jmp 0xfffffd56(%rip)
235b(3): mov %rdi,%rsi
235e(5): mov $0x4,%edi
2363(5): call 0x283d(%rip)
2368(7): lea 0x11f3b(%rip),%rsi
236f(2): xor %edi,%edi
2371(5): mov $0x5,%edx
2376(3): mov %rax,%rbx
2379(5): call 0xfffff5e7(%rip)
237e(5): mov %rax,0x18(%rsp)
2383(5): call 0xfffff51d(%rip)
2388(5): mov 0x18(%rsp),%rdx
238d(2): mov (%rax),%esi
238f(3): mov %rbx,%rcx
2392(2): xor %edi,%edi
2394(2): xor %eax,%eax
2396(5): call 0xfffff80a(%rip)
239b(3): mov %r13d,%edi
239e(5): call 0xfffff682(%rip)
23a3(7): mov 0x218d46(%rip),%rdi
23aa(5): call 0xfffff506(%rip)
23af(2): jmp 0xffffff8e(%rip)
23b1(5): cmp $0xffffff7e,%eax
23b6(2): jnz 0x15(%rip)
23b8(2): xor %edi,%edi
23ba(5): call 0x816(%rip)
23bf(7): mov %rax,0x218ea2(%rip)
23c6(5): call 0x341a(%rip)
23cb(5): mov $0x1,%edi
23d0(5): call 0x800(%rip)
23d5(7): lea 0x11e7d(%rip),%rsi
23dc(5): mov $0x5,%edx
23e1(2): xor %edi,%edi
23e3(5): call 0xfffff57d(%rip)
23e8(2): xor %esi,%esi
23ea(3): mov %rax,%rdx
23ed(5): mov $0x1,%edi
23f2(2): xor %eax,%eax
23f4(5): call 0xfffff7ac(%rip)
23f9(7): lea 0x12280(%rip),%rdx
2400(3): mov %rax,%rcx
2403(2): xor %esi,%esi
2405(5): mov $0x1,%edi
240a(2): xor %eax,%eax
240c(5): call 0xfffff794(%rip)
2411(a): nop 0x0(%rax,%rax,1)
241b(5): nop 0x0(%rax,%rax,1)
2420(2): xor %ebp,%ebp
2422(3): mov %rdx,%r9
2425(1): pop %rsi
2426(3): mov %rsp,%rdx
2429(4): and $0xfffffff0,%rsp
242d(1): push %rax
242e(1): push %rsp
242f(7): lea 0x11cda(%rip),%r8
2436(7): lea 0x11c63(%rip),%rcx
243d(7): lea 0xfffff84c(%rip),%rdi
2444(6): call 0x216b8e(%rip)
244a(1): hlt 

"_start" :
2420(2): xor %ebp,%ebp
2422(3): mov %rdx,%r9
2425(1): pop %rsi
2426(3): mov %rsp,%rdx
2429(4): and $0xfffffff0,%rsp
242d(1): push %rax
242e(1): push %rsp
242f(7): lea 0x11cda(%rip),%r8
2436(7): lea 0x11c63(%rip),%rcx
243d(7): lea 0xfffff84c(%rip),%rdi
2444(6): call 0x216b8e(%rip)
244a(1): hlt 

"deregister_tm_clones" :
2450(7): lea 0x216c29(%rip),%rdi
2457(1): push %rbp
2458(7): lea 0x216c21(%rip),%rax
245f(3): cmp %rdi,%rax
2462(3): mov %rsp,%rbp
2465(2): jz 0x1b(%rip)
2467(7): mov 0x216b62(%rip),%rax
246e(3): test %rax,%rax
2471(2): jz 0xf(%rip)
2473(1): pop %rbp
2474(2): jmp %rax
2476(a): nop 0x0(%rax,%rax,1)
2480(1): pop %rbp
2481(1): ret near (%rsp)

"register_tm_clones" :
2490(7): lea 0x216be9(%rip),%rdi
2497(7): lea 0x216be2(%rip),%rsi
249e(1): push %rbp
249f(3): sub %rdi,%rsi
24a2(3): mov %rsp,%rbp
24a5(4): sar $0x3,%rsi
24a9(3): mov %rsi,%rax
24ac(4): shr $0x3f,%rax
24b0(3): add %rax,%rsi
24b3(3): sar $0x1,%rsi
24b6(2): jz 0x1a(%rip)
24b8(7): mov 0x216b29(%rip),%rax
24bf(3): test %rax,%rax
24c2(2): jz 0xe(%rip)
24c4(1): pop %rbp
24c5(2): jmp %rax
24c7(9): nop 0x0(%rax,%rax,1)
24d0(1): pop %rbp
24d1(1): ret near (%rsp)

"__do_global_dtors_aux" :
24e0(7): cmp $0x0,0x216be1(%rip)
24e7(2): jnz 0x31(%rip)
24e9(8): cmp $0x0,0x216aff(%rip)
24f1(1): push %rbp
24f2(3): mov %rsp,%rbp
24f5(2): jz 0xe(%rip)
24f7(7): mov 0x216b0a(%rip),%rdi
24fe(5): call 0xfffff782(%rip)
2503(5): call 0xffffff4d(%rip)
2508(7): mov $0x1,0x216bb9(%rip)
250f(1): pop %rbp
2510(1): ret near (%rsp)
2511(7): nop 0x0(%rax)
2518(2): REP ret near (%rsp)

"frame_dummy" :
2520(1): push %rbp
2521(3): mov %rsp,%rbp
2524(1): pop %rbp
2525(5): jmp 0xffffff6b(%rip)

"output" :
2530(2): push %r15
2532(2): push %r14
2534(2): push %r13
2536(2): push %r12
2538(1): push %rbp
2539(1): push %rbx
253a(4): sub $0x8,%rsp
253e(3): test %rdi,%rdi
2541(7): mov 0x218b98(%rip),%rbx
2548(6): jz 0xa8(%rip)
254e(6): mov $0x2000,%r15d
2554(3): sub %rdi,%rsi
2557(7): lea 0x216b82(%rip),%r13
255e(3): sub %rbx,%r15
2561(3): mov %rdi,%r12
2564(3): mov %rsi,%rbp
2567(3): cmp %r15,%rsi
256a(3): mov %r13,%r14
256d(6): jb 0xbb(%rip)
2573(5): nop 0x0(%rax,%rax,1)
2578(5): lea 0x0(%r13,%rbx,1),%rdi
257d(3): mov %r15,%rdx
2580(3): mov %r12,%rsi
2583(3): sub %r15,%rbp
2586(3): add %r15,%r12
2589(2): xor %ebx,%ebx
258b(5): call 0xfffff505(%rip)
2590(7): mov 0x216af1(%rip),%rcx
2597(5): mov $0x2000,%edx
259c(5): mov $0x1,%esi
25a1(3): mov %r14,%rdi
25a4(6): mov $0x2000,%r15d
25aa(5): call 0xfffff576(%rip)
25af(7): cmp $0x1fff,%rbp
25b6(b): mov $0x0,0x218b1f(%rip)
25c1(2): jnbe 0xffffffb7(%rip)
25c3(7): lea 0x216b16(%rip),%rdi
25ca(3): add %rbp,%rbx
25cd(3): mov %rbp,%rdx
25d0(3): mov %r12,%rsi
25d3(5): call 0xfffff4bd(%rip)
25d8(7): mov %rbx,0x218b01(%rip)
25df(4): add $0x8,%rsp
25e3(1): pop %rbx
25e4(1): pop %rbp
25e5(2): pop %r12
25e7(2): pop %r13
25e9(2): pop %r14
25eb(2): pop %r15
25ed(1): ret near (%rsp)
25ee(2): nop 
25f0(7): mov 0x216a91(%rip),%rcx
25f7(7): lea 0x216ae2(%rip),%rdi
25fe(3): mov %rbx,%rdx
2601(5): mov $0x1,%esi
2606(5): call 0xfffff51a(%rip)
260b(b): mov $0x0,0x218aca(%rip)
2616(4): add $0x8,%rsp
261a(1): pop %rbx
261b(1): pop %rbp
261c(2): pop %r12
261e(2): pop %r13
2620(2): pop %r14
2622(2): pop %r15
2624(1): ret near (%rsp)
2625(3): nop (%rax)
2628(4): lea 0x0(%rbx,%r13,1),%rdi
262c(2): jmp 0xffffff9e(%rip)

"tac_seekable" :
2630(2): push %r15
2632(2): push %r14
2634(3): mov %rdx,%r14
2637(2): push %r13
2639(2): push %r12
263b(1): push %rbp
263c(1): push %rbx
263d(4): sub $0x38,%rsp
2641(7): mov 0x218c48(%rip),%r15
2648(7): mov 0x218c19(%rip),%rbx
264f(4): mov %edi,0x1c(%rsp)
2653(5): mov %rsi,0x28(%rsp)
2658(4): lea 0x1(%r15),%rax
265c(4): movzx (%r15),%ebp
2660(5): mov %rax,0x8(%rsp)
2665(7): mov 0x218c0c(%rip),%rax
266c(5): mov %rax,0x20(%rsp)
2671(4): lea 0xffffffff(%rax),%r13
2675(3): mov %rdx,%rax
2678(2): xor %edx,%edx
267a(3): div %rbx,%rax
267d(3): test %rdx,%rdx
2680(6): jnz 0x499(%rip)
2686(7): lea 0x11ab7(%rip),%r12
268d(2): jmp 0x6(%rip)
268f(1): nop 
2690(3): sub %rbx,%r14
2693(7): mov 0x218bd6(%rip),%rsi
269a(4): mov 0x1c(%rsp),%edi
269e(3): mov %rbx,%rdx
26a1(5): call 0x27ef(%rip)
26a6(3): test %rax,%rax
26a9(3): mov %rax,%rdx
26ac(7): mov 0x218bb5(%rip),%rbx
26b3(2): jnz 0x6c(%rip)
26b5(3): test %r14,%r14
26b8(6): jz 0x426(%rip)
26be(4): mov 0x1c(%rsp),%edi
26c2(3): mov %rbx,%rsi
26c5(5): mov $0x1,%edx
26ca(3): neg %rsi
26cd(5): call 0xfffff323(%rip)
26d2(3): test %rax,%rax
26d5(2): jns 0xffffffbb(%rip)
26d7(5): mov 0x28(%rsp),%rdx
26dc(5): mov $0x3,%esi
26e1(2): xor %edi,%edi
26e3(5): call 0x25bd(%rip)
26e8(5): mov $0x5,%edx
26ed(3): mov %r12,%rsi
26f0(2): xor %edi,%edi
26f2(3): mov %rax,%rbx
26f5(5): call 0xfffff26b(%rip)
26fa(3): mov %rax,%r15
26fd(5): call 0xfffff1a3(%rip)
2702(2): mov (%rax),%esi
2704(3): mov %rbx,%rcx
2707(3): mov %r15,%rdx
270a(2): xor %edi,%edi
270c(2): xor %eax,%eax
270e(5): call 0xfffff492(%rip)
2713(7): mov 0x218b4e(%rip),%rbx
271a(5): jmp 0xffffff76(%rip)
271f(3): cmp %rbx,%rax
2722(2): jz 0x2a(%rip)
2724(5): jmp 0x457(%rip)
2729(7): nop 0x0(%rax)
2730(4): cmp $0xffffffff,%rax
2734(6): jz 0x359(%rip)
273a(7): mov 0x218b27(%rip),%rdx
2741(3): add %rax,%r14
2744(3): mov %rax,%rbx
2747(3): cmp %rax,%rdx
274a(2): jnz 0x21(%rip)
274c(7): mov 0x218b1d(%rip),%rsi
2753(4): mov 0x1c(%rsp),%edi
2757(5): call 0x2739(%rip)
275c(3): test %rax,%rax
275f(2): jnz 0xffffffd1(%rip)
2761(4): cmp $0xffffffff,%rbx
2765(6): jz 0x328(%rip)
276b(7): mov 0x218afe(%rip),%r12
2772(7): mov 0x218b07(%rip),%rax
2779(4): lea 0x0(%r12,%rbx,1),%rcx
277d(3): mov %rcx,%rdx
2780(5): mov %rcx,0x10(%rsp)
2785(5): sub 0x20(%rsp),%rcx
278a(5): mov $0x1,0x20(%rsp)
278f(4): add $0x1,%rcx
2793(3): test %rax,%rax
2796(4): cmovne %rcx,%rdx
279a(3): mov %rdx,%r15
279d(3): nop (%rax)
27a0(3): test %rax,%rax
27a3(6): jnz 0x1a0(%rip)
27a9(3): sub %r12,%r15
27ac(6): mov $0x1,%r8d
27b2(3): sub %r15,%r8
27b5(4): cmp $0x1,%r8
27b9(6): jnle 0x3f3(%rip)
27bf(6): jz 0x218(%rip)
27c5(4): lea 0xffffffff(%r15),%rcx
27c9(7): lea 0x218930(%rip),%r9
27d0(7): lea 0x218a49(%rip),%rdi
27d7(3): mov %r15,%rdx
27da(3): mov %r12,%rsi
27dd(5): call 0x11293(%rip)
27e2(4): cmp $0xffffffff,%rax
27e6(6): jz 0x1ea(%rip)
27ec(4): cmp $0xfffffffe,%rax
27f0(6): jz 0x398(%rip)
27f6(7): mov 0x21890b(%rip),%rax
27fd(7): mov 0x218a6c(%rip),%r12
2804(3): mov (%rax),%rdx
2807(7): mov 0x218902(%rip),%rax
280e(3): mov (%rax),%rax
2811(4): lea 0x0(%r12,%rdx,1),%rbx
2815(3): sub %rdx,%rax
2818(7): mov %rax,0x218a59(%rip)
281f(3): cmp %r12,%rbx
2822(6): jnb 0x156(%rip)
2828(3): test %r14,%r14
282b(6): jz 0x2cd(%rip)
2831(5): mov 0x10(%rsp),%rbx
2836(7): mov 0x218a2b(%rip),%rax
283d(3): sub %r12,%rbx
2840(3): cmp %rbx,%rax
2843(2): jnb 0x59(%rip)
2845(7): mov 0x218a34(%rip),%rdx
284c(4): lea 0x0(%rax,%rax,1),%rsi
2850(7): mov 0x218a09(%rip),%rdi
2857(6): mov $0x1,%r15d
285d(7): mov %rsi,0x218a04(%rip)
2864(5): lea 0x2(%rdx,%rax,4),%rsi
2869(3): test %rdx,%rdx
286c(4): cmovne %rdx,%r15
2870(3): cmp %rdi,%rsi
2873(7): mov %rsi,0x2189e6(%rip)
287a(6): jb 0x309(%rip)
2880(3): mov %r12,%rdi
2883(3): sub %r15,%rdi
2886(5): call 0x2d6a(%rip)
288b(3): add %r15,%rax
288e(7): mov %rax,0x2189db(%rip)
2895(7): mov 0x2189cc(%rip),%rax
289c(3): cmp %rax,%r14
289f(6): jb 0x149(%rip)
28a5(3): sub %rax,%r14
28a8(4): mov 0x1c(%rsp),%edi
28ac(2): xor %edx,%edx
28ae(3): mov %r14,%rsi
28b1(5): call 0xfffff13f(%rip)
28b6(3): test %rax,%rax
28b9(6): js 0x18f(%rip)
28bf(7): mov 0x2189aa(%rip),%r12
28c6(7): mov 0x21899b(%rip),%r8
28cd(3): mov %rbx,%rdx
28d0(4): lea 0x0(%r12,%r8,1),%r15
28d4(3): mov %r12,%rsi
28d7(5): mov %r8,0x10(%rsp)
28dc(3): mov %r15,%rdi
28df(5): call 0xfffff2b1(%rip)
28e4(5): mov 0x10(%rsp),%r8
28e9(4): mov 0x1c(%rsp),%edi
28ed(3): mov %r12,%rsi
28f0(3): add %r8,%rbx
28f3(8): cmp $0x0,0x218985(%rip)
28fb(3): mov %r8,%rdx
28fe(4): lea 0x0(%r12,%rbx,1),%rax
2902(5): mov %rax,0x10(%rsp)
2907(4): cmove %rax,%r15
290b(5): call 0x2585(%rip)
2910(7): cmp 0x218951(%rip),%rax
2917(6): jnz 0x176(%rip)
291d(7): mov 0x21895c(%rip),%rax
2924(7): mov 0x218945(%rip),%r12
292b(3): test %rax,%rax
292e(6): jz 0xfffffe7b(%rip)
2934(4): cmp %bpl,0xffffffff(%r15)
2938(4): lea 0xffffffff(%r15),%rbx
293c(2): jz 0x11(%rip)
293e(2): nop 
2940(3): mov %rbx,%r15
2943(4): cmp %bpl,0xffffffff(%r15)
2947(4): lea 0xffffffff(%r15),%rbx
294b(2): jnz 0xfffffff5(%rip)
294d(3): test %r13,%r13
2950(6): jz 0xfffffecf(%rip)
2956(5): mov 0x8(%rsp),%rsi
295b(3): mov %r13,%rdx
295e(3): mov %r15,%rdi
2961(5): call 0xffffef5f(%rip)
2966(2): test %eax,%eax
2968(2): jnz 0xffffffd8(%rip)
296a(3): cmp %r12,%rbx
296d(6): jb 0xfffffebb(%rip)
2973(5): nop 0x0(%rax,%rax,1)
2978(7): cmp $0x0,0x218909(%rip)
297f(2): jz 0x81(%rip)
2981(5): movzx 0x20(%rsp),%ecx
2986(7): mov 0x2188eb(%rip),%r15
298d(3): add %rbx,%r15
2990(3): xor $0x1,%ecx
2993(5): cmp %r15,0x10(%rsp)
2998(3): setnz %dl
299b(2): or %dl,%cl
299d(4): mov %cl,0x20(%rsp)
29a1(2): jnz 0x7f(%rip)
29a3(5): mov %r15,0x10(%rsp)
29a8(7): mov 0x2188d1(%rip),%rax
29af(3): mov %rbx,%r15
29b2(3): test %rax,%rax
29b5(6): jz 0xfffffdf4(%rip)
29bb(5): mov $0x1,%edx
29c0(7): sub 0x2188b1(%rip),%rdx
29c7(3): add %rdx,%r15
29ca(5): jmp 0xfffffdd6(%rip)
29cf(1): nop 
29d0(7): mov 0x218899(%rip),%r12
29d7(5): lea 0xffffffff(%r12),%rbx
29dc(5): jmp 0xfffffe43(%rip)
29e1(7): nop 0x0(%rax)
29e8(7): mov %r14,0x218879(%rip)
29ef(3): xor %r14d,%r14d
29f2(5): jmp 0xfffffeb6(%rip)
29f7(9): nop 0x0(%rax,%rax,1)
2a00(5): mov 0x10(%rsp),%rsi
2a05(3): mov %rbx,%rdi
2a08(5): call 0xfffffb28(%rip)
2a0d(7): mov 0x21885c(%rip),%r12
2a14(5): mov %rbx,0x10(%rsp)
2a19(2): jmp 0xffffff8f(%rip)
2a1b(5): nop 0x0(%rax,%rax,1)
2a20(5): mov 0x10(%rsp),%rsi
2a25(3): mov %r15,%rdi
2a28(5): call 0xfffffb08(%rip)
2a2d(7): mov 0x21883c(%rip),%r12
2a34(5): mov %r15,0x10(%rsp)
2a39(5): mov $0x0,0x20(%rsp)
2a3e(5): jmp 0xffffff6a(%rip)
2a43(5): nop 0x0(%rax,%rax,1)
2a48(5): mov 0x28(%rsp),%rdx
2a4d(2): xor %edi,%edi
2a4f(5): mov $0x3,%esi
2a54(5): call 0x224c(%rip)
2a59(7): lea 0x116e4(%rip),%rsi
2a60(2): xor %edi,%edi
2a62(5): mov $0x5,%edx
2a67(3): mov %rax,%r12
2a6a(5): call 0xffffeef6(%rip)
2a6f(3): mov %rax,%r15
2a72(5): call 0xffffee2e(%rip)
2a77(2): mov (%rax),%esi
2a79(3): mov %r12,%rcx
2a7c(3): mov %r15,%rdx
2a7f(2): xor %edi,%edi
2a81(2): xor %eax,%eax
2a83(5): call 0xfffff11d(%rip)
2a88(5): jmp 0xfffffe37(%rip)
2a8d(5): mov 0x28(%rsp),%rdx
2a92(5): mov $0x3,%esi
2a97(2): xor %edi,%edi
2a99(5): call 0x2207(%rip)
2a9e(7): lea 0x116af(%rip),%rsi
2aa5(5): mov $0x5,%edx
2aaa(2): xor %edi,%edi
2aac(3): mov %rax,%rbp
2aaf(5): call 0xffffeeb1(%rip)
2ab4(3): mov %rax,%rbx
2ab7(5): call 0xffffede9(%rip)
2abc(2): mov (%rax),%esi
2abe(3): mov %rbp,%rcx
2ac1(3): mov %rbx,%rdx
2ac4(2): xor %eax,%eax
2ac6(2): xor %edi,%edi
2ac8(5): call 0xfffff0d8(%rip)
2acd(4): add $0x38,%rsp
2ad1(2): xor %eax,%eax
2ad3(1): pop %rbx
2ad4(1): pop %rbp
2ad5(2): pop %r12
2ad7(2): pop %r13
2ad9(2): pop %r14
2adb(2): pop %r15
2add(1): ret near (%rsp)
2ade(3): test %rbx,%rbx
2ae1(3): mov %r14,%rdx
2ae4(6): jz 0xfffffc68(%rip)
2aea(2): xor %ebx,%ebx
2aec(5): jmp 0xfffffc7f(%rip)
2af1(7): nop 0x0(%rax)
2af8(5): mov 0x10(%rsp),%rsi
2afd(3): mov %r12,%rdi
2b00(5): call 0xfffffa30(%rip)
2b05(4): add $0x38,%rsp
2b09(5): mov $0x1,%eax
2b0e(1): pop %rbx
2b0f(1): pop %rbp
2b10(2): pop %r12
2b12(2): pop %r13
2b14(2): pop %r14
2b16(2): pop %r15
2b18(1): ret near (%rsp)
2b19(3): sub %rdx,%r14
2b1c(2): xor %edx,%edx
2b1e(3): mov %r14,%rsi
2b21(5): call 0xffffeecf(%rip)
2b26(3): test %rax,%rax
2b29(6): jns 0xfffffb5d(%rip)
2b2f(5): mov 0x28(%rsp),%rdx
2b34(5): mov $0x3,%esi
2b39(2): xor %edi,%edi
2b3b(5): call 0x2165(%rip)
2b40(7): lea 0x115fd(%rip),%rsi
2b47(5): mov $0x5,%edx
2b4c(2): xor %edi,%edi
2b4e(3): mov %rax,%rbx
2b51(5): call 0xffffee0f(%rip)
2b56(3): mov %rax,%r12
2b59(5): call 0xffffed47(%rip)
2b5e(2): mov (%rax),%esi
2b60(3): mov %rbx,%rcx
2b63(3): mov %r12,%rdx
2b66(2): xor %edi,%edi
2b68(2): xor %eax,%eax
2b6a(5): call 0xfffff036(%rip)
2b6f(7): mov 0x2186f2(%rip),%rbx
2b76(5): jmp 0xfffffb10(%rip)
2b7b(3): mov %rax,%rbx
2b7e(5): jmp 0xfffffbe3(%rip)
2b83(5): call 0x2c5d(%rip)
2b88(7): lea 0x11779(%rip),%rsi
2b8f(5): mov $0x5,%edx
2b94(2): xor %edi,%edi
2b96(5): call 0xffffedca(%rip)
2b9b(2): xor %esi,%esi
2b9d(3): mov %rax,%rdx
2ba0(5): mov $0x1,%edi
2ba5(2): xor %eax,%eax
2ba7(5): call 0xffffeff9(%rip)
2bac(7): lea 0x115b0(%rip),%rsi
2bb3(5): mov $0x5,%edx
2bb8(2): xor %edi,%edi
2bba(5): call 0xffffeda6(%rip)
2bbf(2): xor %esi,%esi
2bc1(3): mov %rax,%rdx
2bc4(5): mov $0x1,%edi
2bc9(2): xor %eax,%eax
2bcb(5): call 0xffffefd5(%rip)
2bd0(2): push %r13
2bd2(2): push %r12
2bd4(5): mov $0x5,%edx
2bd9(1): push %rbp
2bda(1): push %rbx
2bdb(2): mov %edi,%ebp
2bdd(7): sub $0x88,%rsp
2be4(7): mov 0x2186bd(%rip),%rbx
2beb(9): mov $0x28,%rax
2bf4(5): mov %rax,0x78(%rsp)
2bf9(2): xor %eax,%eax
2bfb(2): test %edi,%edi
2bfd(2): jz 0x30(%rip)
2bff(7): lea 0x1172a(%rip),%rsi
2c06(2): xor %edi,%edi
2c08(5): call 0xffffed58(%rip)
2c0d(7): mov 0x2164ac(%rip),%rdi
2c14(3): mov %rax,%rdx
2c17(3): mov %rbx,%rcx
2c1a(5): mov $0x1,%esi
2c1f(2): xor %eax,%eax
2c21(5): call 0xffffefff(%rip)
2c26(2): mov %ebp,%edi
2c28(5): call 0xffffefd8(%rip)
2c2d(7): lea 0x11724(%rip),%rsi
2c34(2): xor %edi,%edi
2c36(5): call 0xffffed2a(%rip)
2c3b(3): mov %rbx,%rdx
2c3e(3): mov %rax,%rsi
2c41(5): mov $0x1,%edi
2c46(2): xor %eax,%eax
2c48(5): call 0xffffef18(%rip)
2c4d(7): mov 0x216434(%rip),%rbx
2c54(7): lea 0x11725(%rip),%rsi
2c5b(5): mov $0x5,%edx
2c60(2): xor %edi,%edi
2c62(5): call 0xffffecfe(%rip)
2c67(3): mov %rbx,%rsi
2c6a(3): mov %rax,%rdi
2c6d(5): call 0xffffedf3(%rip)
2c72(7): mov 0x21640f(%rip),%rbx
2c79(7): lea 0x11738(%rip),%rsi
2c80(5): mov $0x5,%edx
2c85(2): xor %edi,%edi
2c87(5): call 0xffffecd9(%rip)
2c8c(3): mov %rbx,%rsi
2c8f(3): mov %rax,%rdi
2c92(5): call 0xffffedce(%rip)
2c97(7): mov 0x2163ea(%rip),%rbx
2c9e(7): lea 0x1174b(%rip),%rsi
2ca5(5): mov $0x5,%edx
2caa(2): xor %edi,%edi
2cac(5): call 0xffffecb4(%rip)
2cb1(3): mov %rbx,%rsi
2cb4(3): mov %rax,%rdi
2cb7(5): call 0xffffeda9(%rip)
2cbc(7): mov 0x2163c5(%rip),%rbx
2cc3(7): lea 0x11776(%rip),%rsi
2cca(5): mov $0x5,%edx
2ccf(2): xor %edi,%edi
2cd1(5): call 0xffffec8f(%rip)
2cd6(3): mov %rbx,%rsi
2cd9(3): mov %rax,%rdi
2cdc(5): call 0xffffed84(%rip)
2ce1(7): mov 0x2163a0(%rip),%rbx
2ce8(7): lea 0x11831(%rip),%rsi
2cef(5): mov $0x5,%edx
2cf4(2): xor %edi,%edi
2cf6(5): call 0xffffec6a(%rip)
2cfb(3): mov %rbx,%rsi
2cfe(3): mov %rax,%rdi
2d01(5): call 0xffffed5f(%rip)
2d06(7): mov 0x21637b(%rip),%rbx
2d0d(7): lea 0x1183c(%rip),%rsi
2d14(5): mov $0x5,%edx
2d19(2): xor %edi,%edi
2d1b(5): call 0xffffec45(%rip)
2d20(3): mov %rbx,%rsi
2d23(3): mov %rax,%rdi
2d26(7): lea 0x11447(%rip),%rbx
2d2d(5): call 0xffffed33(%rip)
2d32(7): lea 0x1143f(%rip),%rax
2d39(7): lea 0x11479(%rip),%rcx
2d40(9): mov $0x0,0x60(%rsp)
2d49(9): mov $0x0,0x68(%rsp)
2d52(3): mov %rsp,%rdx
2d55(4): mov %rax,(%rsp)
2d59(7): lea 0x1141a(%rip),%rax
2d60(5): mov %rcx,0x30(%rsp)
2d65(7): lea 0x11457(%rip),%rcx
2d6c(5): mov %rax,0x8(%rsp)
2d71(7): lea 0x1147a(%rip),%rax
2d78(5): mov %rcx,0x40(%rsp)
2d7d(7): lea 0x11449(%rip),%rcx
2d84(5): mov %rax,0x10(%rsp)
2d89(7): lea 0x113fa(%rip),%rax
2d90(5): mov %rcx,0x50(%rsp)
2d95(5): mov %rax,0x18(%rsp)
2d9a(7): lea 0x113ff(%rip),%rax
2da1(5): mov %rax,0x20(%rsp)
2da6(7): lea 0x113fd(%rip),%rax
2dad(5): mov %rax,0x28(%rsp)
2db2(5): mov %rax,0x38(%rsp)
2db7(5): mov %rax,0x48(%rsp)
2dbc(5): mov %rax,0x58(%rsp)
2dc1(7): nop 0x0(%rax)
2dc8(4): add $0x10,%rdx
2dcc(3): mov (%rdx),%rdi
2dcf(3): test %rdi,%rdi
2dd2(2): jz 0x15(%rip)
2dd4(5): mov $0x4,%ecx
2dd9(3): mov %rbx,%rsi
2ddc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2dde(3): setnbe %al
2de1(2): sbb $0x0,%al
2de3(2): test %al,%al
2de5(2): jnz 0xffffffe3(%rip)
2de7(4): mov 0x8(%rdx),%r12
2deb(2): xor %edi,%edi
2ded(5): mov $0x5,%edx
2df2(7): lea 0x113de(%rip),%rsi
2df9(3): test %r12,%r12
2dfc(6): jz 0xc7(%rip)
2e02(5): call 0xffffeb5e(%rip)
2e07(7): lea 0x1177a(%rip),%rcx
2e0e(7): lea 0x113d9(%rip),%rdx
2e15(3): mov %rax,%rsi
2e18(5): mov $0x1,%edi
2e1d(2): xor %eax,%eax
2e1f(5): call 0xffffed41(%rip)
2e24(2): xor %esi,%esi
2e26(5): mov $0x5,%edi
2e2b(5): call 0xffffed25(%rip)
2e30(3): test %rax,%rax
2e33(2): jz 0x1e(%rip)
2e35(7): lea 0x113c0(%rip),%rsi
2e3c(5): mov $0x3,%edx
2e41(3): mov %rax,%rdi
2e44(5): call 0xffffea7c(%rip)
2e49(2): test %eax,%eax
2e4b(6): jnz 0x10d(%rip)
2e51(7): lea 0x113a8(%rip),%rsi
2e58(2): xor %edi,%edi
2e5a(5): mov $0x5,%edx
2e5f(5): call 0xffffeb01(%rip)
2e64(7): lea 0x11309(%rip),%rcx
2e6b(7): lea 0x11716(%rip),%rdx
2e72(3): mov %rax,%rsi
2e75(5): mov $0x1,%edi
2e7a(2): xor %eax,%eax
2e7c(5): call 0xffffece4(%rip)
2e81(3): cmp %rbx,%r12
2e84(7): lea 0x11309(%rip),%rcx
2e8b(7): lea 0x11d6f(%rip),%rbx
2e92(4): cmove %rcx,%rbx
2e96(7): lea 0x1175b(%rip),%rsi
2e9d(2): xor %edi,%edi
2e9f(5): mov $0x5,%edx
2ea4(5): call 0xffffeabc(%rip)
2ea9(3): mov %rbx,%rcx
2eac(3): mov %rax,%rsi
2eaf(3): mov %r12,%rdx
2eb2(5): mov $0x1,%edi
2eb7(2): xor %eax,%eax
2eb9(5): call 0xffffeca7(%rip)
2ebe(5): jmp 0xfffffd68(%rip)
2ec3(5): call 0xffffea9d(%rip)
2ec8(7): lea 0x116b9(%rip),%rcx
2ecf(7): lea 0x11318(%rip),%rdx
2ed6(3): mov %rax,%rsi
2ed9(5): mov $0x1,%edi
2ede(2): xor %eax,%eax
2ee0(5): call 0xffffec80(%rip)
2ee5(2): xor %esi,%esi
2ee7(5): mov $0x5,%edi
2eec(5): call 0xffffec64(%rip)
2ef1(3): test %rax,%rax
2ef4(2): jz 0x1a(%rip)
2ef6(7): lea 0x112ff(%rip),%rsi
2efd(5): mov $0x3,%edx
2f02(3): mov %rax,%rdi
2f05(5): call 0xffffe9bb(%rip)
2f0a(2): test %eax,%eax
2f0c(2): jnz 0x45(%rip)
2f0e(7): lea 0x112eb(%rip),%rsi
2f15(5): mov $0x5,%edx
2f1a(2): xor %edi,%edi
2f1c(7): lea 0x11251(%rip),%r12
2f23(7): lea 0x1126a(%rip),%rbx
2f2a(5): call 0xffffea36(%rip)
2f2f(7): lea 0x1123e(%rip),%rcx
2f36(7): lea 0x1164b(%rip),%rdx
2f3d(3): mov %rax,%rsi
2f40(5): mov $0x1,%edi
2f45(2): xor %eax,%eax
2f47(5): call 0xffffec19(%rip)
2f4c(5): jmp 0xffffff4a(%rip)
2f51(7): lea 0x1121c(%rip),%r12
2f58(7): mov 0x216129(%rip),%r13
2f5f(7): lea 0x1164a(%rip),%rsi
2f66(2): xor %edi,%edi
2f68(5): mov $0x5,%edx
2f6d(5): call 0xffffe9f3(%rip)
2f72(3): mov %r13,%rsi
2f75(3): mov %rax,%rdi
2f78(5): call 0xffffeae8(%rip)
2f7d(5): jmp 0xfffffed4(%rip)

"usage" :
2bd0(2): push %r13
2bd2(2): push %r12
2bd4(5): mov $0x5,%edx
2bd9(1): push %rbp
2bda(1): push %rbx
2bdb(2): mov %edi,%ebp
2bdd(7): sub $0x88,%rsp
2be4(7): mov 0x2186bd(%rip),%rbx
2beb(9): mov $0x28,%rax
2bf4(5): mov %rax,0x78(%rsp)
2bf9(2): xor %eax,%eax
2bfb(2): test %edi,%edi
2bfd(2): jz 0x30(%rip)
2bff(7): lea 0x1172a(%rip),%rsi
2c06(2): xor %edi,%edi
2c08(5): call 0xffffed58(%rip)
2c0d(7): mov 0x2164ac(%rip),%rdi
2c14(3): mov %rax,%rdx
2c17(3): mov %rbx,%rcx
2c1a(5): mov $0x1,%esi
2c1f(2): xor %eax,%eax
2c21(5): call 0xffffefff(%rip)
2c26(2): mov %ebp,%edi
2c28(5): call 0xffffefd8(%rip)
2c2d(7): lea 0x11724(%rip),%rsi
2c34(2): xor %edi,%edi
2c36(5): call 0xffffed2a(%rip)
2c3b(3): mov %rbx,%rdx
2c3e(3): mov %rax,%rsi
2c41(5): mov $0x1,%edi
2c46(2): xor %eax,%eax
2c48(5): call 0xffffef18(%rip)
2c4d(7): mov 0x216434(%rip),%rbx
2c54(7): lea 0x11725(%rip),%rsi
2c5b(5): mov $0x5,%edx
2c60(2): xor %edi,%edi
2c62(5): call 0xffffecfe(%rip)
2c67(3): mov %rbx,%rsi
2c6a(3): mov %rax,%rdi
2c6d(5): call 0xffffedf3(%rip)
2c72(7): mov 0x21640f(%rip),%rbx
2c79(7): lea 0x11738(%rip),%rsi
2c80(5): mov $0x5,%edx
2c85(2): xor %edi,%edi
2c87(5): call 0xffffecd9(%rip)
2c8c(3): mov %rbx,%rsi
2c8f(3): mov %rax,%rdi
2c92(5): call 0xffffedce(%rip)
2c97(7): mov 0x2163ea(%rip),%rbx
2c9e(7): lea 0x1174b(%rip),%rsi
2ca5(5): mov $0x5,%edx
2caa(2): xor %edi,%edi
2cac(5): call 0xffffecb4(%rip)
2cb1(3): mov %rbx,%rsi
2cb4(3): mov %rax,%rdi
2cb7(5): call 0xffffeda9(%rip)
2cbc(7): mov 0x2163c5(%rip),%rbx
2cc3(7): lea 0x11776(%rip),%rsi
2cca(5): mov $0x5,%edx
2ccf(2): xor %edi,%edi
2cd1(5): call 0xffffec8f(%rip)
2cd6(3): mov %rbx,%rsi
2cd9(3): mov %rax,%rdi
2cdc(5): call 0xffffed84(%rip)
2ce1(7): mov 0x2163a0(%rip),%rbx
2ce8(7): lea 0x11831(%rip),%rsi
2cef(5): mov $0x5,%edx
2cf4(2): xor %edi,%edi
2cf6(5): call 0xffffec6a(%rip)
2cfb(3): mov %rbx,%rsi
2cfe(3): mov %rax,%rdi
2d01(5): call 0xffffed5f(%rip)
2d06(7): mov 0x21637b(%rip),%rbx
2d0d(7): lea 0x1183c(%rip),%rsi
2d14(5): mov $0x5,%edx
2d19(2): xor %edi,%edi
2d1b(5): call 0xffffec45(%rip)
2d20(3): mov %rbx,%rsi
2d23(3): mov %rax,%rdi
2d26(7): lea 0x11447(%rip),%rbx
2d2d(5): call 0xffffed33(%rip)
2d32(7): lea 0x1143f(%rip),%rax
2d39(7): lea 0x11479(%rip),%rcx
2d40(9): mov $0x0,0x60(%rsp)
2d49(9): mov $0x0,0x68(%rsp)
2d52(3): mov %rsp,%rdx
2d55(4): mov %rax,(%rsp)
2d59(7): lea 0x1141a(%rip),%rax
2d60(5): mov %rcx,0x30(%rsp)
2d65(7): lea 0x11457(%rip),%rcx
2d6c(5): mov %rax,0x8(%rsp)
2d71(7): lea 0x1147a(%rip),%rax
2d78(5): mov %rcx,0x40(%rsp)
2d7d(7): lea 0x11449(%rip),%rcx
2d84(5): mov %rax,0x10(%rsp)
2d89(7): lea 0x113fa(%rip),%rax
2d90(5): mov %rcx,0x50(%rsp)
2d95(5): mov %rax,0x18(%rsp)
2d9a(7): lea 0x113ff(%rip),%rax
2da1(5): mov %rax,0x20(%rsp)
2da6(7): lea 0x113fd(%rip),%rax
2dad(5): mov %rax,0x28(%rsp)
2db2(5): mov %rax,0x38(%rsp)
2db7(5): mov %rax,0x48(%rsp)
2dbc(5): mov %rax,0x58(%rsp)
2dc1(7): nop 0x0(%rax)
2dc8(4): add $0x10,%rdx
2dcc(3): mov (%rdx),%rdi
2dcf(3): test %rdi,%rdi
2dd2(2): jz 0x15(%rip)
2dd4(5): mov $0x4,%ecx
2dd9(3): mov %rbx,%rsi
2ddc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2dde(3): setnbe %al
2de1(2): sbb $0x0,%al
2de3(2): test %al,%al
2de5(2): jnz 0xffffffe3(%rip)
2de7(4): mov 0x8(%rdx),%r12
2deb(2): xor %edi,%edi
2ded(5): mov $0x5,%edx
2df2(7): lea 0x113de(%rip),%rsi
2df9(3): test %r12,%r12
2dfc(6): jz 0xc7(%rip)
2e02(5): call 0xffffeb5e(%rip)
2e07(7): lea 0x1177a(%rip),%rcx
2e0e(7): lea 0x113d9(%rip),%rdx
2e15(3): mov %rax,%rsi
2e18(5): mov $0x1,%edi
2e1d(2): xor %eax,%eax
2e1f(5): call 0xffffed41(%rip)
2e24(2): xor %esi,%esi
2e26(5): mov $0x5,%edi
2e2b(5): call 0xffffed25(%rip)
2e30(3): test %rax,%rax
2e33(2): jz 0x1e(%rip)
2e35(7): lea 0x113c0(%rip),%rsi
2e3c(5): mov $0x3,%edx
2e41(3): mov %rax,%rdi
2e44(5): call 0xffffea7c(%rip)
2e49(2): test %eax,%eax
2e4b(6): jnz 0x10d(%rip)
2e51(7): lea 0x113a8(%rip),%rsi
2e58(2): xor %edi,%edi
2e5a(5): mov $0x5,%edx
2e5f(5): call 0xffffeb01(%rip)
2e64(7): lea 0x11309(%rip),%rcx
2e6b(7): lea 0x11716(%rip),%rdx
2e72(3): mov %rax,%rsi
2e75(5): mov $0x1,%edi
2e7a(2): xor %eax,%eax
2e7c(5): call 0xffffece4(%rip)
2e81(3): cmp %rbx,%r12
2e84(7): lea 0x11309(%rip),%rcx
2e8b(7): lea 0x11d6f(%rip),%rbx
2e92(4): cmove %rcx,%rbx
2e96(7): lea 0x1175b(%rip),%rsi
2e9d(2): xor %edi,%edi
2e9f(5): mov $0x5,%edx
2ea4(5): call 0xffffeabc(%rip)
2ea9(3): mov %rbx,%rcx
2eac(3): mov %rax,%rsi
2eaf(3): mov %r12,%rdx
2eb2(5): mov $0x1,%edi
2eb7(2): xor %eax,%eax
2eb9(5): call 0xffffeca7(%rip)
2ebe(5): jmp 0xfffffd68(%rip)
2ec3(5): call 0xffffea9d(%rip)
2ec8(7): lea 0x116b9(%rip),%rcx
2ecf(7): lea 0x11318(%rip),%rdx
2ed6(3): mov %rax,%rsi
2ed9(5): mov $0x1,%edi
2ede(2): xor %eax,%eax
2ee0(5): call 0xffffec80(%rip)
2ee5(2): xor %esi,%esi
2ee7(5): mov $0x5,%edi
2eec(5): call 0xffffec64(%rip)
2ef1(3): test %rax,%rax
2ef4(2): jz 0x1a(%rip)
2ef6(7): lea 0x112ff(%rip),%rsi
2efd(5): mov $0x3,%edx
2f02(3): mov %rax,%rdi
2f05(5): call 0xffffe9bb(%rip)
2f0a(2): test %eax,%eax
2f0c(2): jnz 0x45(%rip)
2f0e(7): lea 0x112eb(%rip),%rsi
2f15(5): mov $0x5,%edx
2f1a(2): xor %edi,%edi
2f1c(7): lea 0x11251(%rip),%r12
2f23(7): lea 0x1126a(%rip),%rbx
2f2a(5): call 0xffffea36(%rip)
2f2f(7): lea 0x1123e(%rip),%rcx
2f36(7): lea 0x1164b(%rip),%rdx
2f3d(3): mov %rax,%rsi
2f40(5): mov $0x1,%edi
2f45(2): xor %eax,%eax
2f47(5): call 0xffffec19(%rip)
2f4c(5): jmp 0xffffff4a(%rip)
2f51(7): lea 0x1121c(%rip),%r12
2f58(7): mov 0x216129(%rip),%r13
2f5f(7): lea 0x1164a(%rip),%rsi
2f66(2): xor %edi,%edi
2f68(5): mov $0x5,%edx
2f6d(5): call 0xffffe9f3(%rip)
2f72(3): mov %r13,%rsi
2f75(3): mov %rax,%rdi
2f78(5): call 0xffffeae8(%rip)
2f7d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2f90(7): mov %rdi,0x218309(%rip)
2f97(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2fa0(7): mov %dil,0x2182f1(%rip)
2fa7(1): ret near (%rsp)

"close_stdout" :
2fb0(1): push %rbp
2fb1(1): push %rbx
2fb2(4): sub $0x8,%rsp
2fb6(7): mov 0x2160cb(%rip),%rdi
2fbd(5): call 0x10b63(%rip)
2fc2(2): test %eax,%eax
2fc4(2): jz 0x18(%rip)
2fc6(5): call 0xffffe8da(%rip)
2fcb(7): cmp $0x0,0x2182c6(%rip)
2fd2(3): mov %rax,%rbx
2fd5(2): jz 0x1e(%rip)
2fd7(3): cmp $0x20,(%rax)
2fda(2): jnz 0x19(%rip)
2fdc(7): mov 0x2160dd(%rip),%rdi
2fe3(5): call 0x10b3d(%rip)
2fe8(2): test %eax,%eax
2fea(2): jnz 0x48(%rip)
2fec(4): add $0x8,%rsp
2ff0(1): pop %rbx
2ff1(1): pop %rbp
2ff2(1): ret near (%rsp)
2ff3(7): lea 0x112d2(%rip),%rsi
2ffa(2): xor %edi,%edi
2ffc(5): mov $0x5,%edx
3001(5): call 0xffffe95f(%rip)
3006(7): mov 0x218293(%rip),%rdi
300d(3): mov %rax,%rbp
3010(3): test %rdi,%rdi
3013(2): jz 0x2a(%rip)
3015(5): call 0x1c5b(%rip)
301a(2): mov (%rbx),%esi
301c(7): lea 0x11659(%rip),%rdx
3023(3): mov %rax,%rcx
3026(3): mov %rbp,%r8
3029(2): xor %edi,%edi
302b(2): xor %eax,%eax
302d(5): call 0xffffeb73(%rip)
3032(6): mov 0x215fe0(%rip),%edi
3038(5): call 0xffffe898(%rip)
303d(2): mov (%rbx),%esi
303f(7): lea 0x1163a(%rip),%rdx
3046(3): mov %rax,%rcx
3049(2): xor %edi,%edi
304b(2): xor %eax,%eax
304d(5): call 0xffffeb53(%rip)
3052(2): jmp 0xffffffe0(%rip)

"mfile_name_concat" :
3060(2): push %r15
3062(2): push %r14
3064(3): mov %rdx,%r15
3067(2): push %r13
3069(2): push %r12
306b(3): mov %rdi,%r12
306e(1): push %rbp
306f(1): push %rbx
3070(3): mov %rsi,%rbp
3073(4): sub $0x18,%rsp
3077(5): call 0x10b29(%rip)
307c(3): mov %rax,%rbx
307f(3): mov %rax,%rdi
3082(5): call 0x10b7e(%rip)
3087(3): sub %r12,%rbx
308a(3): mov %rax,%r13
308d(3): mov %rbp,%rdi
3090(3): add %rax,%rbx
3093(5): call 0xffffe8ed(%rip)
3098(3): test %r13,%r13
309b(3): mov %rax,%r14
309e(2): jz 0x32(%rip)
30a0(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
30a6(6): jz 0xaa(%rip)
30ac(2): xor %eax,%eax
30ae(4): cmp $0x2f,0x0(%rbp)
30b2(5): mov $0x0,%edx
30b7(3): setnz %al
30ba(4): mov %rax,(%rsp)
30be(5): mov $0x2f,%eax
30c3(3): cmove %edx,%eax
30c6(4): mov %al,0xf(%rsp)
30ca(2): jmp 0x24(%rip)
30cc(4): nop 0x0(%rax)
30d0(2): xor %eax,%eax
30d2(4): cmp $0x2f,0x0(%rbp)
30d6(5): mov $0x0,%edx
30db(3): setz %al
30de(4): mov %rax,(%rsp)
30e2(5): mov $0x2e,%eax
30e7(3): cmovne %edx,%eax
30ea(4): mov %al,0xf(%rsp)
30ee(5): lea 0x1(%rbx,%r14,1),%rdi
30f3(4): add (%rsp),%rdi
30f7(5): call 0xffffe9c9(%rip)
30fc(3): test %rax,%rax
30ff(3): mov %rax,%r13
3102(2): jz 0x34(%rip)
3104(3): mov %rax,%rdi
3107(3): mov %rbx,%rdx
310a(3): mov %r12,%rsi
310d(5): call 0xffffea73(%rip)
3112(5): movzx 0xf(%rsp),%ecx
3117(4): mov (%rsp),%rdi
311b(3): add %rax,%rdi
311e(3): test %r15,%r15
3121(2): mov %cl,(%rax)
3123(2): jz 0x5(%rip)
3125(3): mov %rdi,(%r15)
3128(3): mov %r14,%rdx
312b(3): mov %rbp,%rsi
312e(5): call 0xffffea52(%rip)
3133(3): mov $0x0,(%rax)
3136(4): add $0x18,%rsp
313a(3): mov %r13,%rax
313d(1): pop %rbx
313e(1): pop %rbp
313f(2): pop %r12
3141(2): pop %r13
3143(2): pop %r14
3145(2): pop %r15
3147(1): ret near (%rsp)
3148(8): nop 0x0(%rax,%rax,1)
3150(8): mov $0x0,(%rsp)
3158(5): mov $0x0,0xf(%rsp)
315d(2): jmp 0xffffff91(%rip)

"set_program_name" :
3160(3): test %rdi,%rdi
3163(1): push %rbx
3164(2): jz 0x79(%rip)
3166(5): mov $0x2f,%esi
316b(3): mov %rdi,%rbx
316e(5): call 0xffffe852(%rip)
3173(3): test %rax,%rax
3176(2): jz 0x57(%rip)
3178(4): lea 0x1(%rax),%r8
317c(3): mov %r8,%rdx
317f(3): sub %rbx,%rdx
3182(4): cmp $0x6,%rdx
3186(2): jle 0x47(%rip)
3188(4): lea 0xfffffffa(%rax),%rsi
318c(7): lea 0x1152d(%rip),%rdi
3193(5): mov $0x7,%ecx
3198(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
319a(3): setnbe %dl
319d(3): sbb $0x0,%dl
31a0(2): test %dl,%dl
31a2(2): jnz 0x2b(%rip)
31a4(7): lea 0x1151d(%rip),%rdi
31ab(5): mov $0x3,%ecx
31b0(3): mov %r8,%rsi
31b3(3): mov %r8,%rbx
31b6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
31b8(3): setnbe %dl
31bb(3): sbb $0x0,%dl
31be(2): test %dl,%dl
31c0(2): jnz 0xd(%rip)
31c2(4): lea 0x4(%rax),%rbx
31c6(7): mov %rbx,0x215eb3(%rip)
31cd(7): mov %rbx,0x2180d4(%rip)
31d4(7): mov %rbx,0x215ec5(%rip)
31db(1): pop %rbx
31dc(1): ret near (%rsp)
31dd(7): mov 0x215edc(%rip),%rcx
31e4(7): lea 0x1149d(%rip),%rdi
31eb(5): mov $0x37,%edx
31f0(5): mov $0x1,%esi
31f5(5): call 0xffffea1b(%rip)
31fa(5): call 0xffffe696(%rip)

"gettext_quote.part.1" :
3200(1): push %rbp
3201(1): push %rbx
3202(3): mov %rdi,%rbp
3205(2): mov %esi,%ebx
3207(4): sub $0x8,%rsp
320b(5): call 0x10b05(%rip)
3210(3): movzx (%rax),%edx
3213(3): and $0xdf,%edx
3216(3): cmp $0x55,%dl
3219(2): jz 0x77(%rip)
321b(3): cmp $0x47,%dl
321e(2): jz 0x22(%rip)
3220(7): lea 0x114b4(%rip),%rax
3227(7): lea 0x114af(%rip),%rdx
322e(3): cmp $0x9,%ebx
3231(4): cmovne %rdx,%rax
3235(4): add $0x8,%rsp
3239(1): pop %rbx
323a(1): pop %rbp
323b(1): ret near (%rsp)
323c(4): nop 0x0(%rax)
3240(4): movzx 0x1(%rax),%edx
3244(3): and $0xdf,%edx
3247(3): cmp $0x42,%dl
324a(2): jnz 0xffffffd6(%rip)
324c(4): cmp $0x31,0x2(%rax)
3250(2): jnz 0xffffffd0(%rip)
3252(4): cmp $0x38,0x3(%rax)
3256(2): jnz 0xffffffca(%rip)
3258(4): cmp $0x30,0x4(%rax)
325c(2): jnz 0xffffffc4(%rip)
325e(4): cmp $0x33,0x5(%rax)
3262(2): jnz 0xffffffbe(%rip)
3264(4): cmp $0x30,0x6(%rax)
3268(2): jnz 0xffffffb8(%rip)
326a(4): cmp $0x0,0x7(%rax)
326e(2): jnz 0xffffffb2(%rip)
3270(4): cmp $0x60,0x0(%rbp)
3274(7): lea 0x11459(%rip),%rax
327b(7): lea 0x11456(%rip),%rdx
3282(4): cmovne %rdx,%rax
3286(4): add $0x8,%rsp
328a(1): pop %rbx
328b(1): pop %rbp
328c(1): ret near (%rsp)
328d(3): nop (%rax)
3290(4): movzx 0x1(%rax),%edx
3294(3): and $0xdf,%edx
3297(3): cmp $0x54,%dl
329a(2): jnz 0xffffff86(%rip)
329c(4): movzx 0x2(%rax),%edx
32a0(3): and $0xdf,%edx
32a3(3): cmp $0x46,%dl
32a6(6): jnz 0xffffff7a(%rip)
32ac(4): cmp $0x2d,0x3(%rax)
32b0(6): jnz 0xffffff70(%rip)
32b6(4): cmp $0x38,0x4(%rax)
32ba(6): jnz 0xffffff66(%rip)
32c0(4): cmp $0x0,0x5(%rax)
32c4(6): jnz 0xffffff5c(%rip)
32ca(4): cmp $0x60,0x0(%rbp)
32ce(7): lea 0x113f7(%rip),%rax
32d5(7): lea 0x113f4(%rip),%rdx
32dc(4): cmovne %rdx,%rax
32e0(4): add $0x8,%rsp
32e4(1): pop %rbx
32e5(1): pop %rbp
32e6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
32f0(2): push %r15
32f2(2): push %r14
32f4(3): mov %r8d,%r15d
32f7(2): push %r13
32f9(2): push %r12
32fb(3): mov %rdi,%r14
32fe(1): push %rbp
32ff(1): push %rbx
3300(3): mov %r9d,%ebx
3303(3): mov %rsi,%r13
3306(3): mov %rcx,%rbp
3309(3): and $0x2,%ebx
330c(7): sub $0xb8,%rsp
3313(8): mov 0xf0(%rsp),%rax
331b(5): mov %rdx,0x10(%rsp)
3320(5): mov %r8d,0x8(%rsp)
3325(5): mov %r9d,0x78(%rsp)
332a(5): mov %rax,0x20(%rsp)
332f(8): mov 0xf8(%rsp),%rax
3337(5): mov %rax,0x68(%rsp)
333c(8): mov 0x100(%rsp),%rax
3344(5): mov %rax,0x60(%rsp)
3349(9): mov $0x28,%rax
3352(8): mov %rax,0xa8(%rsp)
335a(2): xor %eax,%eax
335c(5): call 0xffffe614(%rip)
3361(4): cmp $0xa,%r15d
3365(5): mov %rax,0x58(%rsp)
336a(6): jnbe 0x11b5(%rip)
3370(7): lea 0x113c9(%rip),%rcx
3377(3): mov %r15d,%edx
337a(4): movsxd 0x0(%rcx,%rdx,4),%rax
337e(3): add %rcx,%rax
3381(2): jmp %rax
3383(5): mov $0x1,0xe(%rsp)
3388(5): mov $0x0,0x7c(%rsp)
338d(3): xor %r12d,%r12d
3390(9): mov $0x0,0x50(%rsp)
3399(5): mov $0x1,0xf(%rsp)
339e(5): mov $0x0,0xd(%rsp)
33a3(7): lea 0x11333(%rip),%rax
33aa(9): mov $0x1,0x18(%rsp)
33b3(3): xor %r15d,%r15d
33b6(8): mov $0x2,0x8(%rsp)
33be(5): mov %rax,0x48(%rsp)
33c3(3): xor %r11d,%r11d
33c6(3): mov %rbp,%rax
33c9(3): mov %r12d,%r8d
33cc(3): mov %r11,%rbp
33cf(3): mov %rax,%r11
33d2(6): nop 0x0(%rax,%rax,1)
33d8(3): cmp %rbp,%r11
33db(4): setnz %r12b
33df(4): cmp $0xffffffff,%r11
33e3(2): jnz 0xf(%rip)
33e5(5): mov 0x10(%rsp),%rax
33ea(4): cmp $0x0,0x0(%rax,%rbp,1)
33ee(4): setnz %r12b
33f2(3): test %r12b,%r12b
33f5(6): jz 0x65b(%rip)
33fb(5): cmp $0x2,0x8(%rsp)
3400(5): mov 0x10(%rsp),%rdi
3405(4): lea 0x0(%rdi,%rbp,1),%r9
3409(3): setnz %al
340c(4): and 0xd(%rsp),%al
3410(3): mov %eax,%r10d
3413(6): jz 0xad(%rip)
3419(5): mov 0x18(%rsp),%rax
341e(3): test %rax,%rax
3421(6): jz 0x42f(%rip)
3427(4): cmp $0xffffffff,%r11
342b(5): lea 0x0(%rbp,%rax,1),%rbx
3430(2): jnz 0x30(%rip)
3432(4): cmp $0x1,%rax
3436(2): jbe 0x2a(%rip)
3438(5): mov %r8b,0x38(%rsp)
343d(5): mov %r10b,0x30(%rsp)
3442(5): mov %r9,0x28(%rsp)
3447(5): call 0xffffe539(%rip)
344c(6): movzx 0x38(%rsp),%r8d
3452(6): movzx 0x30(%rsp),%r10d
3458(3): mov %rax,%r11
345b(5): mov 0x28(%rsp),%r9
3460(3): cmp %r11,%rbx
3463(5): mov %r10b,0x28(%rsp)
3468(6): jnbe 0x5b8(%rip)
346e(5): mov 0x18(%rsp),%rdx
3473(5): mov 0x48(%rsp),%rsi
3478(3): mov %r9,%rdi
347b(5): mov %r11,0x40(%rsp)
3480(5): mov %r8b,0x38(%rsp)
3485(5): mov %r9,0x30(%rsp)
348a(5): call 0xffffe5b6(%rip)
348f(2): test %eax,%eax
3491(5): mov 0x30(%rsp),%r9
3496(6): movzx 0x38(%rsp),%r8d
349c(5): mov 0x40(%rsp),%r11
34a1(6): jnz 0x57f(%rip)
34a7(5): cmp $0x0,0xf(%rsp)
34ac(6): movzx 0x28(%rsp),%r10d
34b2(6): jnz 0xf83(%rip)
34b8(8): nop 0x0(%rax,%rax,1)
34c0(4): movzx (%r9),%ebx
34c4(3): cmp $0x7e,%bl
34c7(6): jnbe 0x321(%rip)
34cd(7): lea 0x11298(%rip),%rcx
34d4(3): movzx %bl,%edx
34d7(4): movsxd 0x0(%rcx,%rdx,4),%rax
34db(3): add %rcx,%rax
34de(2): jmp %rax
34e0(3): xor %r10d,%r10d
34e3(4): cmp $0x1,%r11
34e7(3): setnz %al
34ea(4): cmp $0xffffffff,%r11
34ee(2): jnz 0xe(%rip)
34f0(5): mov 0x10(%rsp),%rax
34f5(4): cmp $0x0,0x1(%rax)
34f9(3): setnz %al
34fc(5): cmp $0x2,0x8(%rsp)
3501(3): setz %dl
3504(2): test %al,%al
3506(6): jz 0x252(%rip)
350c(3): xor %r12d,%r12d
350f(2): xor %eax,%eax
3511(7): nop 0x0(%rax)
3518(5): cmp $0x1,0xd(%rsp)
351d(6): jnz 0x115(%rip)
3523(2): test %dl,%dl
3525(6): jnz 0x10d(%rip)
352b(5): mov 0x20(%rsp),%rsi
3530(3): test %rsi,%rsi
3533(2): jz 0x16(%rip)
3535(2): mov %ebx,%edx
3537(3): shr $0x5,%dl
353a(3): movzx %dl,%edx
353d(3): mov 0x0(%rsi,%rdx,4),%edx
3540(3): bt %ebx,%edx
3543(6): jb 0x150(%rip)
3549(3): test %r10b,%r10b
354c(6): jnz 0x147(%rip)
3552(3): xor $0x1,%eax
3555(4): add $0x1,%rbp
3559(3): and %r8d,%eax
355c(2): test %al,%al
355e(2): jz 0x22(%rip)
3560(3): cmp %r15,%r13
3563(2): jbe 0x7(%rip)
3565(5): mov $0x27,0x0(%r14,%r15,1)
356a(4): lea 0x1(%r15),%rax
356e(3): cmp %rax,%r13
3571(2): jbe 0x8(%rip)
3573(6): mov $0x27,0x1(%r14,%r15,1)
3579(4): add $0x2,%r15
357d(3): xor %r8d,%r8d
3580(3): cmp %r13,%r15
3583(2): jnb 0x6(%rip)
3585(4): mov %bl,0x0(%r14,%r15,1)
3589(5): movzx 0xe(%rsp),%edi
358e(4): add $0x1,%r15
3592(5): mov $0x0,%eax
3597(3): test %r12b,%r12b
359a(3): cmove %eax,%edi
359d(5): mov %dil,0xe(%rsp)
35a2(5): jmp 0xfffffe36(%rip)
35a7(9): nop 0x0(%rax,%rax,1)
35b0(3): xor %r10d,%r10d
35b3(4): mov 0x8(%rsp),%eax
35b7(3): cmp $0x2,%eax
35ba(6): jz 0x5be(%rip)
35c0(3): cmp $0x5,%eax
35c3(6): jz 0x575(%rip)
35c9(3): cmp $0x2,%eax
35cc(5): mov $0x3f,%ebx
35d1(3): setz %dl
35d4(3): xor %r12d,%r12d
35d7(2): xor %eax,%eax
35d9(5): jmp 0xffffff3f(%rip)
35de(2): nop 
35e0(3): xor %r10d,%r10d
35e3(5): cmp $0x2,0x8(%rsp)
35e8(6): jz 0x508(%rip)
35ee(5): mov %r12b,0x7c(%rsp)
35f3(2): xor %edx,%edx
35f5(2): xor %eax,%eax
35f7(5): mov $0x27,%ebx
35fc(5): jmp 0xffffff1c(%rip)
3601(7): nop 0x0(%rax)
3608(5): mov $0x9,%edx
360d(5): mov $0x74,%ebx
3612(5): cmp $0x2,0x8(%rsp)
3617(3): setz %al
361a(4): and 0xf(%rsp),%al
361e(6): jnz 0x150(%rip)
3624(5): cmp $0x0,0xd(%rsp)
3629(2): jnz 0x67(%rip)
362b(2): mov %edx,%ebx
362d(3): xor %r12d,%r12d
3630(2): xor %eax,%eax
3632(5): cmp $0x0,0xf(%rsp)
3637(6): jnz 0xfffffef4(%rip)
363d(5): jmp 0xffffff0c(%rip)
3642(6): nop 0x0(%rax,%rax,1)
3648(5): mov $0x8,%edx
364d(5): mov $0x62,%ebx
3652(2): jmp 0xffffffd2(%rip)
3654(4): nop 0x0(%rax)
3658(5): cmp $0x2,0x8(%rsp)
365d(6): jz 0x3d3(%rip)
3663(5): cmp $0x0,0xd(%rsp)
3668(6): jz 0x218(%rip)
366e(5): cmp $0x0,0xf(%rsp)
3673(6): jz 0x20d(%rip)
3679(6): cmp $0x0,0x18(%rsp)
367f(6): jnz 0x3bc(%rip)
3685(5): mov $0x5c,%ebx
368a(6): nop 0x0(%rax,%rax,1)
3690(3): xor %r12d,%r12d
3693(5): cmp $0x2,0x8(%rsp)
3698(3): setz %dl
369b(5): cmp $0x0,0xf(%rsp)
36a0(2): mov %edx,%eax
36a2(6): jnz 0x856(%rip)
36a8(3): mov %r8d,%eax
36ab(3): xor $0x1,%eax
36ae(2): and %dl,%al
36b0(2): jz 0x31(%rip)
36b2(3): cmp %r15,%r13
36b5(2): jbe 0x7(%rip)
36b7(5): mov $0x27,0x0(%r14,%r15,1)
36bc(4): lea 0x1(%r15),%rdx
36c0(3): cmp %rdx,%r13
36c3(2): jbe 0x8(%rip)
36c5(6): mov $0x24,0x1(%r14,%r15,1)
36cb(4): lea 0x2(%r15),%rdx
36cf(3): cmp %rdx,%r13
36d2(2): jbe 0x8(%rip)
36d4(6): mov $0x27,0x2(%r14,%r15,1)
36da(4): add $0x3,%r15
36de(3): mov %eax,%r8d
36e1(3): cmp %r15,%r13
36e4(2): jbe 0x7(%rip)
36e6(5): mov $0x5c,0x0(%r14,%r15,1)
36eb(4): add $0x1,%r15
36ef(4): add $0x1,%rbp
36f3(5): jmp 0xfffffe8d(%rip)
36f8(8): nop 0x0(%rax,%rax,1)
3700(5): cmp $0x0,0xd(%rsp)
3705(6): jnz 0x1ce(%rip)
370b(2): xor %edx,%edx
370d(5): test $0x1,0x78(%rsp)
3712(6): jz 0xffffff19(%rip)
3718(4): add $0x1,%rbp
371c(5): jmp 0xfffffcbc(%rip)
3721(7): nop 0x0(%rax)
3728(5): cmp $0x2,0x8(%rsp)
372d(3): setz %dl
3730(2): xor %eax,%eax
3732(5): jmp 0xfffffde6(%rip)
3737(9): nop 0x0(%rax,%rax,1)
3740(5): mov $0x7,%edx
3745(5): mov $0x61,%ebx
374a(5): jmp 0xfffffeda(%rip)
374f(1): nop 
3750(5): cmp $0x2,0x8(%rsp)
3755(3): setz %dl
3758(3): test %rbp,%rbp
375b(6): jnz 0xfffffdb1(%rip)
3761(5): movzx 0xf(%rsp),%eax
3766(2): and %dl,%al
3768(6): jz 0xfffffdb0(%rip)
376e(3): mov %r11,%rbp
3771(8): mov $0x2,0x8(%rsp)
3779(5): jmp 0x700(%rip)
377e(2): nop 
3780(5): cmp $0x2,0x8(%rsp)
3785(3): setz %dl
3788(3): xor %r12d,%r12d
378b(2): jmp 0xffffffd6(%rip)
378d(3): nop (%rax)
3790(5): cmp $0x2,0x8(%rsp)
3795(5): mov $0x20,%ebx
379a(3): setz %dl
379d(2): jmp 0xffffffc4(%rip)
379f(1): nop 
37a0(5): mov $0xd,%edx
37a5(5): mov $0x72,%ebx
37aa(5): jmp 0xfffffe68(%rip)
37af(1): nop 
37b0(5): mov $0xc,%edx
37b5(5): mov $0x66,%ebx
37ba(5): jmp 0xfffffe6a(%rip)
37bf(1): nop 
37c0(5): mov $0xb,%edx
37c5(5): mov $0x76,%ebx
37ca(5): jmp 0xfffffe5a(%rip)
37cf(1): nop 
37d0(5): mov $0xa,%edx
37d5(5): mov $0x6e,%ebx
37da(5): jmp 0xfffffe38(%rip)
37df(1): nop 
37e0(3): xor %r10d,%r10d
37e3(5): nop 0x0(%rax,%rax,1)
37e8(6): cmp $0x1,0x58(%rsp)
37ee(6): jnz 0x3aa(%rip)
37f4(5): mov %r11,0x38(%rsp)
37f9(5): mov %r8b,0x30(%rsp)
37fe(5): mov %r10b,0x28(%rsp)
3803(5): call 0xffffe46d(%rip)
3808(3): mov (%rax),%rcx
380b(3): movzx %bl,%edx
380e(6): movzx 0x28(%rsp),%r10d
3814(6): movzx 0x30(%rsp),%r8d
381a(5): mov 0x38(%rsp),%r11
381f(5): mov $0x1,%edi
3824(4): movzx 0x0(%rcx,%rdx,2),%eax
3828(4): and $0x4000,%ax
382c(4): setnz %r12b
3830(3): setz %al
3833(4): and 0xd(%rsp),%al
3837(2): test %al,%al
3839(6): jnz 0x998(%rip)
383f(5): cmp $0x2,0x8(%rsp)
3844(3): setz %dl
3847(5): jmp 0xfffffcd1(%rip)
384c(4): nop 0x0(%rax)
3850(4): movzx (%r9),%ebx
3854(3): cmp $0x7e,%bl
3857(2): jnbe 0xffffff89(%rip)
3859(7): lea 0x11108(%rip),%rcx
3860(3): movzx %bl,%edx
3863(4): movsxd 0x0(%rcx,%rdx,4),%rax
3867(3): add %rcx,%rax
386a(2): jmp %rax
386c(4): nop 0x0(%rax)
3870(3): xor %r10d,%r10d
3873(5): cmp $0x0,0xd(%rsp)
3878(6): jnz 0xfffffdf6(%rip)
387e(2): nop 
3880(5): mov $0x5c,%edx
3885(5): mov $0x5c,%ebx
388a(5): jmp 0xfffffd9a(%rip)
388f(1): nop 
3890(5): mov $0xc,%edx
3895(3): xor %r10d,%r10d
3898(5): mov $0x66,%ebx
389d(5): jmp 0xfffffd87(%rip)
38a2(6): nop 0x0(%rax,%rax,1)
38a8(5): mov $0xa,%edx
38ad(3): xor %r10d,%r10d
38b0(5): mov $0x6e,%ebx
38b5(5): jmp 0xfffffd5d(%rip)
38ba(6): nop 0x0(%rax,%rax,1)
38c0(5): mov $0x61,%ebx
38c5(5): jmp 0xfffffdcb(%rip)
38ca(6): nop 0x0(%rax,%rax,1)
38d0(3): xor %r10d,%r10d
38d3(5): cmp $0x2,0x8(%rsp)
38d8(3): setz %dl
38db(5): cmp $0x0,0xf(%rsp)
38e0(6): jnz 0xb9a(%rip)
38e6(3): mov %r8d,%eax
38e9(3): mov %r15,%rcx
38ec(3): xor $0x1,%eax
38ef(2): and %dl,%al
38f1(2): jz 0x2f(%rip)
38f3(3): cmp %r15,%r13
38f6(2): jbe 0x7(%rip)
38f8(5): mov $0x27,0x0(%r14,%r15,1)
38fd(4): lea 0x1(%r15),%rcx
3901(3): cmp %rcx,%r13
3904(2): jbe 0x8(%rip)
3906(6): mov $0x24,0x1(%r14,%r15,1)
390c(4): lea 0x2(%r15),%rcx
3910(3): cmp %rcx,%r13
3913(6): jnbe 0x636(%rip)
3919(4): lea 0x3(%r15),%rcx
391d(3): mov %eax,%r8d
3920(3): cmp %rcx,%r13
3923(2): jbe 0x7(%rip)
3925(5): mov $0x5c,0x0(%r14,%rcx,1)
392a(5): cmp $0x2,0x8(%rsp)
392f(4): lea 0x1(%rcx),%r15
3933(6): jz 0x606(%rip)
3939(4): lea 0x1(%rbp),%rax
393d(3): cmp %r11,%rax
3940(2): jnb 0x1b(%rip)
3942(5): mov 0x10(%rsp),%rax
3947(5): movzx 0x1(%rax,%rbp,1),%eax
394c(4): mov %al,0x28(%rsp)
3950(3): sub $0x30,%eax
3953(2): cmp $0x9,%al
3955(6): jbe 0x834(%rip)
395b(3): mov %r12d,%eax
395e(5): mov $0x30,%ebx
3963(3): xor %r12d,%r12d
3966(5): jmp 0xfffffbb2(%rip)
396b(5): nop 0x0(%rax,%rax,1)
3970(5): cmp $0x2,0x8(%rsp)
3975(3): mov %r10d,%r12d
3978(3): setz %dl
397b(3): xor %r10d,%r10d
397e(2): xor %eax,%eax
3980(5): jmp 0xfffffb98(%rip)
3985(3): nop (%rax)
3988(5): cmp $0x2,0x8(%rsp)
398d(3): setz %dl
3990(3): xor %r10d,%r10d
3993(5): jmp 0xfffffdc5(%rip)
3998(8): nop 0x0(%rax,%rax,1)
39a0(5): cmp $0x2,0x8(%rsp)
39a5(3): setz %dl
39a8(3): xor %r10d,%r10d
39ab(3): xor %r12d,%r12d
39ae(5): jmp 0xfffffdb3(%rip)
39b3(5): nop 0x0(%rax,%rax,1)
39b8(5): cmp $0x2,0x8(%rsp)
39bd(3): mov %r10d,%r12d
39c0(5): mov $0x20,%ebx
39c5(3): setz %dl
39c8(3): xor %r10d,%r10d
39cb(5): jmp 0xfffffd96(%rip)
39d0(5): mov $0xd,%edx
39d5(3): xor %r10d,%r10d
39d8(5): mov $0x72,%ebx
39dd(5): jmp 0xfffffc35(%rip)
39e2(6): nop 0x0(%rax,%rax,1)
39e8(5): mov $0x76,%ebx
39ed(5): jmp 0xfffffca3(%rip)
39f2(6): nop 0x0(%rax,%rax,1)
39f8(5): mov $0x9,%edx
39fd(3): xor %r10d,%r10d
3a00(5): mov $0x74,%ebx
3a05(5): jmp 0xfffffc0d(%rip)
3a0a(6): nop 0x0(%rax,%rax,1)
3a10(5): mov $0x62,%ebx
3a15(5): jmp 0xfffffc7b(%rip)
3a1a(6): nop 0x0(%rax,%rax,1)
3a20(3): xor %r10d,%r10d
3a23(5): jmp 0xfffffa9d(%rip)
3a28(8): nop 0x0(%rax,%rax,1)
3a30(5): cmp $0x0,0xf(%rsp)
3a35(6): jnz 0x96b(%rip)
3a3b(4): add $0x1,%rbp
3a3f(3): mov %r8d,%eax
3a42(3): xor %r12d,%r12d
3a45(5): mov $0x5c,%ebx
3a4a(5): jmp 0xfffffb12(%rip)
3a4f(1): nop 
3a50(5): cmp $0x2,0x8(%rsp)
3a55(5): movzx 0xf(%rsp),%ebx
3a5a(3): mov %r8d,%r12d
3a5d(3): mov %r11,%rbp
3a60(3): setz %dl
3a63(2): mov %ebx,%eax
3a65(3): test %r15,%r15
3a68(3): setz %cl
3a6b(2): and %edx,%eax
3a6d(2): and %cl,%al
3a6f(6): jnz 0xa67(%rip)
3a75(2): mov %ebx,%eax
3a77(3): xor $0x1,%eax
3a7a(2): and %al,%dl
3a7c(6): jz 0x970(%rip)
3a82(5): cmp $0x0,0x7c(%rsp)
3a87(6): jz 0x963(%rip)
3a8d(5): cmp $0x0,0xe(%rsp)
3a92(6): jnz 0x9fb(%rip)
3a98(3): test %r13,%r13
3a9b(3): setz %al
3a9e(6): cmp $0x0,0x50(%rsp)
3aa4(3): setnz %dl
3aa7(2): and %dl,%al
3aa9(6): jz 0xa23(%rip)
3aaf(5): mov 0x50(%rsp),%r13
3ab4(7): lea 0x10c22(%rip),%rbx
3abb(4): mov $0x27,(%r14)
3abf(8): mov $0x2,0x8(%rsp)
3ac7(6): mov $0x1,%r15d
3acd(9): mov $0x1,0x18(%rsp)
3ad6(5): mov $0x0,0xf(%rsp)
3adb(5): mov %rbx,0x48(%rsp)
3ae0(4): mov %al,0x7c(%rsp)
3ae4(5): jmp 0xfffff8df(%rip)
3ae9(7): nop 0x0(%rax)
3af0(5): cmp $0x0,0xf(%rsp)
3af5(6): jnz 0x8ab(%rip)
3afb(3): test %r13,%r13
3afe(6): jz 0x402(%rip)
3b04(2): xor %edx,%edx
3b06(6): cmp $0x0,0x50(%rsp)
3b0c(6): jnz 0x3f4(%rip)
3b12(5): mov %r13,0x50(%rsp)
3b17(4): add $0x3,%r15
3b1b(2): xor %eax,%eax
3b1d(5): mov %r12b,0x7c(%rsp)
3b22(3): xor %r8d,%r8d
3b25(3): mov %rdx,%r13
3b28(5): mov $0x27,%ebx
3b2d(5): jmp 0xfffffa1c(%rip)
3b32(6): nop 0x0(%rax,%rax,1)
3b38(5): test $0x4,0x78(%rsp)
3b3d(2): jz 0x23(%rip)
3b3f(4): lea 0x2(%rbp),%rcx
3b43(3): cmp %r11,%rcx
3b46(2): jnb 0x1a(%rip)
3b48(5): mov 0x10(%rsp),%rax
3b4d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3b52(6): jz 0x790(%rip)
3b58(8): nop 0x0(%rax,%rax,1)
3b60(2): xor %edx,%edx
3b62(3): xor %r12d,%r12d
3b65(2): xor %eax,%eax
3b67(5): mov $0x3f,%ebx
3b6c(5): jmp 0xfffff9ac(%rip)
3b71(7): nop 0x0(%rax)
3b78(5): cmp $0x0,0xf(%rsp)
3b7d(6): jnz 0x823(%rip)
3b83(3): xor %r12d,%r12d
3b86(2): xor %eax,%eax
3b88(5): mov $0x3f,%ebx
3b8d(5): jmp 0xfffff9bc(%rip)
3b92(6): nop 0x0(%rax,%rax,1)
3b98(8): lea 0xa0(%rsp),%rax
3ba0(4): cmp $0xffffffff,%r11
3ba4(c): mov $0x0,0xa0(%rsp)
3bb0(5): mov %rax,0x28(%rsp)
3bb5(2): jnz 0x2f(%rip)
3bb7(5): mov 0x10(%rsp),%rdi
3bbc(5): mov %r8b,0x40(%rsp)
3bc1(5): mov %r10b,0x38(%rsp)
3bc6(5): mov %r9,0x30(%rsp)
3bcb(5): call 0xffffddb5(%rip)
3bd0(6): movzx 0x40(%rsp),%r8d
3bd6(6): movzx 0x38(%rsp),%r10d
3bdc(3): mov %rax,%r11
3bdf(5): mov 0x30(%rsp),%r9
3be4(8): lea 0x9c(%rsp),%rax
3bec(2): xor %ecx,%ecx
3bee(4): mov %bl,0x7e(%rsp)
3bf2(5): mov %r8b,0x7d(%rsp)
3bf7(3): mov %rcx,%rbx
3bfa(8): mov %r9,0x88(%rsp)
3c02(5): mov %rax,0x38(%rsp)
3c07(5): mov %r10b,0x7f(%rsp)
3c0c(8): mov %r15,0x80(%rsp)
3c14(5): mov %r14,0x40(%rsp)
3c19(5): mov %r13,0x70(%rsp)
3c1e(5): mov %r11,0x30(%rsp)
3c23(5): mov 0x10(%rsp),%rax
3c28(5): lea 0x0(%rbp,%rbx,1),%r14
3c2d(5): mov 0x30(%rsp),%rdx
3c32(5): mov 0x28(%rsp),%rcx
3c37(5): mov 0x38(%rsp),%rdi
3c3c(4): lea 0x0(%rax,%r14,1),%r13
3c40(3): sub %r14,%rdx
3c43(3): mov %r13,%rsi
3c46(5): call 0x1c3a(%rip)
3c4b(3): test %rax,%rax
3c4e(3): mov %rax,%r15
3c51(2): jz 0x50(%rip)
3c53(4): cmp $0xffffffff,%rax
3c57(6): jz 0x61e(%rip)
3c5d(4): cmp $0xfffffffe,%rax
3c61(6): jz 0x5a0(%rip)
3c67(5): cmp $0x2,0x8(%rsp)
3c6c(3): setz %al
3c6f(4): and 0xf(%rsp),%al
3c73(6): jnz 0x19d(%rip)
3c79(7): mov 0x9c(%rsp),%edi
3c80(5): call 0xffffdfd0(%rip)
3c85(5): mov 0x28(%rsp),%rdi
3c8a(2): test %eax,%eax
3c8c(5): mov $0x0,%eax
3c91(4): cmove %eax,%r12d
3c95(3): add %r15,%rbx
3c98(5): call 0xffffdfa8(%rip)
3c9d(2): test %eax,%eax
3c9f(2): jz 0xffffff84(%rip)
3ca1(3): mov %r12d,%edx
3ca4(3): mov %rbx,%rdi
3ca7(6): movzx 0x7d(%rsp),%r8d
3cad(3): xor $0x1,%edx
3cb0(5): movzx 0x7e(%rsp),%ebx
3cb5(6): movzx 0x7f(%rsp),%r10d
3cbb(4): and 0xd(%rsp),%dl
3cbf(8): mov 0x80(%rsp),%r15
3cc7(5): mov 0x40(%rsp),%r14
3ccc(5): mov 0x70(%rsp),%r13
3cd1(5): mov 0x30(%rsp),%r11
3cd6(4): cmp $0x1,%rdi
3cda(6): jbe 0x601(%rip)
3ce0(3): mov %rdi,%rcx
3ce3(2): xor %esi,%esi
3ce5(6): movzx 0xf(%rsp),%r9d
3ceb(3): add %rbp,%rcx
3cee(5): mov 0x10(%rsp),%rdi
3cf3(5): jmp 0xbb(%rip)
3cf8(8): nop 0x0(%rax,%rax,1)
3d00(5): cmp $0x2,0x8(%rsp)
3d05(3): setz %al
3d08(3): test %r9b,%r9b
3d0b(6): jnz 0x4b5(%rip)
3d11(3): mov %r8d,%esi
3d14(3): xor $0x1,%esi
3d17(3): and %sil,%al
3d1a(2): jz 0x31(%rip)
3d1c(3): cmp %r15,%r13
3d1f(2): jbe 0x7(%rip)
3d21(5): mov $0x27,0x0(%r14,%r15,1)
3d26(4): lea 0x1(%r15),%rsi
3d2a(3): cmp %rsi,%r13
3d2d(2): jbe 0x8(%rip)
3d2f(6): mov $0x24,0x1(%r14,%r15,1)
3d35(4): lea 0x2(%r15),%rsi
3d39(3): cmp %rsi,%r13
3d3c(2): jbe 0x8(%rip)
3d3e(6): mov $0x27,0x2(%r14,%r15,1)
3d44(4): add $0x3,%r15
3d48(3): mov %eax,%r8d
3d4b(3): cmp %r15,%r13
3d4e(2): jbe 0x7(%rip)
3d50(5): mov $0x5c,0x0(%r14,%r15,1)
3d55(4): lea 0x1(%r15),%rax
3d59(3): cmp %rax,%r13
3d5c(2): jbe 0xf(%rip)
3d5e(2): mov %ebx,%eax
3d60(3): shr $0x6,%al
3d63(3): add $0x30,%eax
3d66(5): mov %al,0x1(%r14,%r15,1)
3d6b(4): lea 0x2(%r15),%rax
3d6f(3): cmp %rax,%r13
3d72(2): jbe 0x12(%rip)
3d74(2): mov %ebx,%eax
3d76(3): shr $0x3,%al
3d79(3): and $0x7,%eax
3d7c(3): add $0x30,%eax
3d7f(5): mov %al,0x2(%r14,%r15,1)
3d84(3): and $0x7,%ebx
3d87(4): add $0x1,%rbp
3d8b(4): add $0x3,%r15
3d8f(3): add $0x30,%ebx
3d92(3): cmp %rcx,%rbp
3d95(6): jnb 0xfffff7eb(%rip)
3d9b(2): mov %edx,%esi
3d9d(3): cmp %r15,%r13
3da0(2): jbe 0x6(%rip)
3da2(4): mov %bl,0x0(%r14,%r15,1)
3da6(4): movzx 0x0(%rdi,%rbp,1),%ebx
3daa(4): add $0x1,%r15
3dae(2): test %dl,%dl
3db0(6): jnz 0xffffff50(%rip)
3db6(2): mov %esi,%eax
3db8(3): xor $0x1,%eax
3dbb(3): and %r8d,%eax
3dbe(3): test %r10b,%r10b
3dc1(2): jz 0x10(%rip)
3dc3(3): cmp %r15,%r13
3dc6(2): jbe 0x7(%rip)
3dc8(5): mov $0x5c,0x0(%r14,%r15,1)
3dcd(4): add $0x1,%r15
3dd1(4): add $0x1,%rbp
3dd5(3): cmp %rcx,%rbp
3dd8(6): jnb 0xfffff784(%rip)
3dde(2): test %al,%al
3de0(6): jz 0x3fe(%rip)
3de6(3): cmp %r15,%r13
3de9(2): jbe 0x7(%rip)
3deb(5): mov $0x27,0x0(%r14,%r15,1)
3df0(4): lea 0x1(%r15),%rax
3df4(3): cmp %rax,%r13
3df7(2): jbe 0x8(%rip)
3df9(6): mov $0x27,0x1(%r14,%r15,1)
3dff(4): add $0x2,%r15
3e03(3): xor %r10d,%r10d
3e06(3): xor %r8d,%r8d
3e09(2): jmp 0xffffff94(%rip)
3e0b(5): nop 0x0(%rax,%rax,1)
3e10(4): cmp $0x1,%r15
3e14(6): jz 0xfffffe65(%rip)
3e1a(5): mov 0x10(%rsp),%rdi
3e1f(4): lea 0x0(%rdi,%r15,1),%rcx
3e23(5): lea 0x1(%rdi,%r14,1),%rdx
3e28(4): lea 0x0(%rcx,%r14,1),%r8
3e2c(2): jmp 0x11(%rip)
3e2e(2): nop 
3e30(4): add $0x1,%rdx
3e34(3): cmp %rdx,%r8
3e37(6): jz 0xfffffe42(%rip)
3e3d(3): movzx (%rdx),%ecx
3e40(3): sub $0x5b,%ecx
3e43(3): cmp $0x21,%cl
3e46(2): jnbe 0xffffffea(%rip)
3e48(5): mov $0x1,%esi
3e4d(3): shl/sal %cl,%rsi
3e50(3): mov %rsi,%rcx
3e53(a): mov $0x8589934635,%rsi
3e5d(3): test %rsi,%rcx
3e60(2): jz 0xffffffd0(%rip)
3e62(5): mov 0x40(%rsp),%r14
3e67(5): mov 0x70(%rsp),%r13
3e6c(5): mov 0x30(%rsp),%rbp
3e71(8): mov $0x2,0x8(%rsp)
3e79(5): cmp $0x0,0xd(%rsp)
3e7e(2): jz 0x12(%rip)
3e80(2): test %al,%al
3e82(5): mov $0x4,%eax
3e87(5): cmove 0x8(%rsp),%eax
3e8c(4): mov %eax,0x8(%rsp)
3e90(4): sub $0x8,%rsp
3e94(3): mov %rbp,%rcx
3e97(3): mov %r13,%rsi
3e9a(4): push 0x68(%rsp)
3e9e(4): push 0x78(%rsp)
3ea2(3): mov %r14,%rdi
3ea5(2): push $0x0
3ea7(8): mov 0x98(%rsp),%r9d
3eaf(5): mov 0x28(%rsp),%r8d
3eb4(5): mov 0x30(%rsp),%rdx
3eb9(4): and $0xfd,%r9d
3ebd(5): call 0xfffff433(%rip)
3ec2(4): add $0x20,%rsp
3ec6(3): mov %rax,%r15
3ec9(8): mov 0xa8(%rsp),%rbx
3ed1(9): xor $0x28,%rbx
3eda(3): mov %r15,%rax
3edd(6): jnz 0x606(%rip)
3ee3(7): add $0xb8,%rsp
3eea(1): pop %rbx
3eeb(1): pop %rbp
3eec(2): pop %r12
3eee(2): pop %r13
3ef0(2): pop %r14
3ef2(2): pop %r15
3ef4(1): ret near (%rsp)
3ef5(3): nop (%rax)
3ef8(3): mov %r11,%rbp
3efb(5): jmp 0xffffff7e(%rip)
3f00(3): cmp %r15,%r13
3f03(2): jbe 0x7(%rip)
3f05(5): mov $0x27,0x0(%r14,%r15,1)
3f0a(4): lea 0x1(%r15),%rax
3f0e(3): cmp %rax,%r13
3f11(2): jbe 0x8(%rip)
3f13(6): mov $0x5c,0x1(%r14,%r15,1)
3f19(4): lea 0x2(%r15),%rax
3f1d(3): cmp %rax,%r13
3f20(6): jbe 0x5f2(%rip)
3f26(3): mov %r13,%rdx
3f29(6): mov $0x27,0x2(%r14,%r15,1)
3f2f(5): mov 0x50(%rsp),%r13
3f34(5): jmp 0xfffffbde(%rip)
3f39(3): mov %r12d,%eax
3f3c(5): mov $0x30,%ebx
3f41(3): xor %r12d,%r12d
3f44(5): jmp 0xfffff605(%rip)
3f49(6): mov $0x27,0x2(%r14,%r15,1)
3f4f(5): jmp 0xfffff9ca(%rip)
3f54(2): test %ebx,%ebx
3f56(6): jnz 0xfffff42d(%rip)
3f5c(5): mov $0x1,0xd(%rsp)
3f61(3): test %r13,%r13
3f64(6): jnz 0x596(%rip)
3f6a(7): lea 0x1076c(%rip),%rax
3f71(9): mov $0x0,0x50(%rsp)
3f7a(5): mov $0x1,0xe(%rsp)
3f7f(5): mov $0x0,0x7c(%rsp)
3f84(3): xor %r12d,%r12d
3f87(5): mov $0x0,0xf(%rsp)
3f8c(9): mov $0x1,0x18(%rsp)
3f95(5): mov %rax,0x48(%rsp)
3f9a(6): mov $0x1,%r15d
3fa0(8): mov $0x2,0x8(%rsp)
3fa8(5): jmp 0xfffff41b(%rip)
3fad(3): nop (%rax)
3fb0(2): test %ebx,%ebx
3fb2(6): jnz 0x3fb(%rip)
3fb8(3): test %r13,%r13
3fbb(6): jz 0x22b(%rip)
3fc1(4): mov $0x22,(%r14)
3fc5(5): mov $0x1,0xe(%rsp)
3fca(3): xor %r12d,%r12d
3fcd(5): mov $0x0,0x7c(%rsp)
3fd2(9): mov $0x0,0x50(%rsp)
3fdb(7): lea 0x106f9(%rip),%rax
3fe2(5): mov $0x0,0xf(%rsp)
3fe7(5): mov $0x1,0xd(%rsp)
3fec(9): mov $0x1,0x18(%rsp)
3ff5(6): mov $0x1,%r15d
3ffb(5): mov %rax,0x48(%rsp)
4000(5): jmp 0xfffff3c3(%rip)
4005(7): lea 0x106cf(%rip),%rax
400c(5): mov $0x1,0xe(%rsp)
4011(5): mov $0x0,0x7c(%rsp)
4016(3): xor %r12d,%r12d
4019(9): mov $0x0,0x50(%rsp)
4022(5): mov $0x1,0xf(%rsp)
4027(5): mov $0x1,0xd(%rsp)
402c(9): mov $0x1,0x18(%rsp)
4035(3): xor %r15d,%r15d
4038(5): mov %rax,0x48(%rsp)
403d(8): mov $0x5,0x8(%rsp)
4045(5): jmp 0xfffff37e(%rip)
404a(5): mov $0x1,0xe(%rsp)
404f(5): mov $0x0,0x7c(%rsp)
4054(3): xor %r12d,%r12d
4057(9): mov $0x0,0x50(%rsp)
4060(5): mov $0x0,0xf(%rsp)
4065(3): xor %r15d,%r15d
4068(5): mov $0x1,0xd(%rsp)
406d(9): mov $0x0,0x18(%rsp)
4076(9): mov $0x0,0x48(%rsp)
407f(5): jmp 0xfffff344(%rip)
4084(5): cmp $0xa,0x8(%rsp)
4089(2): jz 0x58(%rip)
408b(7): lea 0x1064d(%rip),%rsi
4092(2): xor %edi,%edi
4094(5): mov $0x5,%edx
4099(5): call 0xffffd8c7(%rip)
409e(3): mov %rax,%rcx
40a1(5): mov %rax,0x68(%rsp)
40a6(7): lea 0x10632(%rip),%rax
40ad(3): cmp %rax,%rcx
40b0(6): jz 0x39e(%rip)
40b6(7): lea 0x10620(%rip),%rsi
40bd(2): xor %edi,%edi
40bf(5): mov $0x5,%edx
40c4(5): call 0xffffd89c(%rip)
40c9(3): mov %rax,%rcx
40cc(5): mov %rax,0x60(%rsp)
40d1(7): lea 0x10605(%rip),%rax
40d8(3): cmp %rax,%rcx
40db(6): jz 0x389(%rip)
40e1(3): xor %r15d,%r15d
40e4(2): test %ebx,%ebx
40e6(6): jz 0x1c7(%rip)
40ec(2): test %ebx,%ebx
40ee(5): mov 0x60(%rsp),%rbx
40f3(5): setnz 0xf(%rsp)
40f8(3): xor %r12d,%r12d
40fb(3): mov %rbx,%rdi
40fe(5): call 0xffffd882(%rip)
4103(5): mov %rbx,0x48(%rsp)
4108(5): mov %rax,0x18(%rsp)
410d(5): mov $0x1,0xe(%rsp)
4112(5): mov $0x0,0x7c(%rsp)
4117(9): mov $0x0,0x50(%rsp)
4120(5): mov $0x1,0xd(%rsp)
4125(5): jmp 0xfffff29e(%rip)
412a(5): mov $0x1,0xe(%rsp)
412f(5): mov $0x0,0x7c(%rsp)
4134(3): xor %r12d,%r12d
4137(9): mov $0x0,0x50(%rsp)
4140(5): mov $0x0,0xf(%rsp)
4145(3): xor %r15d,%r15d
4148(5): mov $0x0,0xd(%rsp)
414d(9): mov $0x0,0x18(%rsp)
4156(9): mov $0x0,0x48(%rsp)
415f(5): jmp 0xfffff264(%rip)
4164(5): mov $0x1,0xe(%rsp)
4169(5): mov $0x0,0x7c(%rsp)
416e(3): xor %r12d,%r12d
4171(9): mov $0x0,0x50(%rsp)
417a(5): mov $0x1,0xf(%rsp)
417f(5): mov $0x1,0xd(%rsp)
4184(5): jmp 0xfffff21f(%rip)
4189(3): cmp %r15,%r13
418c(2): jbe 0x7(%rip)
418e(5): mov $0x30,0x0(%r14,%r15,1)
4193(4): lea 0x2(%rcx),%rax
4197(3): cmp %rax,%r13
419a(2): jbe 0x8(%rip)
419c(6): mov $0x30,0x2(%r14,%rcx,1)
41a2(3): mov %r12d,%eax
41a5(4): lea 0x3(%rcx),%r15
41a9(3): xor %r12d,%r12d
41ac(5): mov $0x30,%ebx
41b1(5): jmp 0xfffff367(%rip)
41b6(a): nop 0x0(%rax,%rax,1)
41c0(5): movzx 0xf(%rsp),%ebx
41c5(3): mov %r11,%rbp
41c8(4): mov %bl,0xd(%rsp)
41cc(5): jmp 0xfffffcad(%rip)
41d1(5): movzx 0xd(%rsp),%edx
41d6(3): xor %r12d,%r12d
41d9(5): jmp 0xfffffb07(%rip)
41de(3): xor %r10d,%r10d
41e1(5): jmp 0xfffffbbc(%rip)
41e6(9): mov $0x0,0x50(%rsp)
41ef(5): mov $0x1,0xe(%rsp)
41f4(3): xor %r12d,%r12d
41f7(5): mov $0x0,0x7c(%rsp)
41fc(5): jmp 0xfffffddf(%rip)
4201(5): mov 0x30(%rsp),%r11
4206(3): mov %r14,%rsi
4209(3): mov %r13,%rcx
420c(3): mov %rbx,%rax
420f(3): mov %rbx,%rdi
4212(6): movzx 0x7d(%rsp),%r8d
4218(5): movzx 0x7e(%rsp),%ebx
421d(8): mov 0x88(%rsp),%r9
4225(3): cmp %r11,%rsi
4228(6): movzx 0x7f(%rsp),%r10d
422e(8): mov 0x80(%rsp),%r15
4236(5): mov 0x40(%rsp),%r14
423b(5): mov 0x70(%rsp),%r13
4240(2): jnb 0x28(%rip)
4242(3): cmp $0x0,(%rcx)
4245(2): jnz 0x12(%rip)
4247(2): jmp 0x21(%rip)
4249(7): nop 0x0(%rax)
4250(5): cmp $0x0,0x0(%r9,%rax,1)
4255(2): jz 0x10(%rip)
4257(4): add $0x1,%rax
425b(5): lea 0x0(%rbp,%rax,1),%rdx
4260(3): cmp %rdx,%r11
4263(2): jnbe 0xffffffed(%rip)
4265(3): mov %rax,%rdi
4268(5): movzx 0xd(%rsp),%edx
426d(3): xor %r12d,%r12d
4270(5): jmp 0xfffffa66(%rip)
4275(3): mov %rbx,%rdi
4278(6): movzx 0x7d(%rsp),%r8d
427e(5): movzx 0x7e(%rsp),%ebx
4283(6): movzx 0x7f(%rsp),%r10d
4289(8): mov 0x80(%rsp),%r15
4291(3): xor %r12d,%r12d
4294(5): mov 0x40(%rsp),%r14
4299(5): mov 0x70(%rsp),%r13
429e(5): mov 0x30(%rsp),%r11
42a3(5): movzx 0xd(%rsp),%edx
42a8(5): jmp 0xfffffa2e(%rip)
42ad(5): mov 0x68(%rsp),%rdx
42b2(3): movzx (%rdx),%eax
42b5(2): test %al,%al
42b7(6): jz 0xfffffe35(%rip)
42bd(3): nop (%rax)
42c0(3): cmp %r15,%r13
42c3(2): jbe 0x6(%rip)
42c5(4): mov %al,0x0(%r14,%r15,1)
42c9(4): add $0x1,%r15
42cd(5): movzx 0x0(%rdx,%r15,1),%eax
42d2(2): test %al,%al
42d4(2): jnz 0xffffffec(%rip)
42d6(5): jmp 0xfffffe16(%rip)
42db(2): mov %edx,%eax
42dd(5): jmp 0xfffff55a(%rip)
42e2(4): movzx 0x0(%rax,%rcx,1),%ebx
42e6(3): cmp $0x3e,%bl
42e9(6): jnbe 0xfffff877(%rip)
42ef(a): mov $0x8070630310989004800,%rax
42f9(4): bt %rbx,%rax
42fd(6): jnb 0xfffff863(%rip)
4303(5): cmp $0x0,0xf(%rsp)
4308(6): jnz 0x1ea(%rip)
430e(3): cmp %r15,%r13
4311(2): jbe 0x7(%rip)
4313(5): mov $0x3f,0x0(%r14,%r15,1)
4318(4): lea 0x1(%r15),%rax
431c(3): cmp %rax,%r13
431f(2): jbe 0x8(%rip)
4321(6): mov $0x22,0x1(%r14,%r15,1)
4327(4): lea 0x2(%r15),%rax
432b(3): cmp %rax,%r13
432e(2): jbe 0x8(%rip)
4330(6): mov $0x22,0x2(%r14,%r15,1)
4336(4): lea 0x3(%r15),%rax
433a(3): cmp %rax,%r13
433d(2): jbe 0x8(%rip)
433f(6): mov $0x3f,0x3(%r14,%r15,1)
4345(4): add $0x4,%r15
4349(2): xor %edx,%edx
434b(3): xor %r12d,%r12d
434e(2): xor %eax,%eax
4350(3): mov %rcx,%rbp
4353(5): jmp 0xfffff1c5(%rip)
4358(2): test %ebx,%ebx
435a(6): jz 0x18e(%rip)
4360(7): lea 0x10376(%rip),%rax
4367(5): mov $0x1,0xe(%rsp)
436c(5): mov $0x0,0x7c(%rsp)
4371(3): xor %r12d,%r12d
4374(9): mov $0x0,0x50(%rsp)
437d(5): mov $0x1,0xf(%rsp)
4382(5): mov $0x0,0xd(%rsp)
4387(9): mov $0x1,0x18(%rsp)
4390(3): xor %r15d,%r15d
4393(5): mov %rax,0x48(%rsp)
4398(5): jmp 0xfffff02b(%rip)
439d(3): nop (%rax)
43a0(3): mov %r11,%rbp
43a3(5): movzx 0xf(%rsp),%eax
43a8(5): jmp 0xfffffad1(%rip)
43ad(7): lea 0x10327(%rip),%rax
43b4(5): mov $0x1,0xe(%rsp)
43b9(5): mov $0x0,0x7c(%rsp)
43be(3): xor %r12d,%r12d
43c1(9): mov $0x0,0x50(%rsp)
43ca(5): mov $0x1,0xf(%rsp)
43cf(5): mov $0x1,0xd(%rsp)
43d4(9): mov $0x1,0x18(%rsp)
43dd(3): xor %r15d,%r15d
43e0(5): mov %rax,0x48(%rsp)
43e5(5): jmp 0xffffefde(%rip)
43ea(2): mov %edx,%eax
43ec(5): mov 0x48(%rsp),%rbx
43f1(3): test %rbx,%rbx
43f4(2): jz 0x2e(%rip)
43f6(2): test %al,%al
43f8(2): jz 0x2a(%rip)
43fa(3): movzx (%rbx),%ecx
43fd(3): mov %rbx,%rax
4400(2): test %cl,%cl
4402(2): jz 0x20(%rip)
4404(3): mov %r15,%rdx
4407(3): sub %r15,%rax
440a(3): cmp %rdx,%r13
440d(2): jbe 0x6(%rip)
440f(4): mov %cl,0x0(%r14,%rdx,1)
4413(4): add $0x1,%rdx
4417(4): movzx 0x0(%rax,%rdx,1),%ecx
441b(2): test %cl,%cl
441d(2): jnz 0xffffffed(%rip)
441f(3): mov %rdx,%r15
4422(3): cmp %r15,%r13
4425(6): jbe 0xfffffaa4(%rip)
442b(5): mov $0x0,0x0(%r14,%r15,1)
4430(5): jmp 0xfffffa99(%rip)
4435(5): cmp $0x2,0x8(%rsp)
443a(5): movzx 0xf(%rsp),%ebx
443f(3): mov %r11,%rbp
4442(3): setz %al
4445(4): mov %bl,0xd(%rsp)
4449(5): jmp 0xfffffa30(%rip)
444e(4): mov 0x8(%rsp),%esi
4452(3): mov %rcx,%rdi
4455(5): call 0xffffedab(%rip)
445a(5): mov %rax,0x68(%rsp)
445f(5): jmp 0xfffffc57(%rip)
4464(4): mov 0x8(%rsp),%esi
4468(3): mov %rcx,%rdi
446b(5): call 0xffffed95(%rip)
4470(5): mov %rax,0x60(%rsp)
4475(5): jmp 0xfffffc6c(%rip)
447a(5): movzx 0xf(%rsp),%ebx
447f(3): mov %r11,%rbp
4482(2): mov %edx,%eax
4484(4): mov %bl,0xd(%rsp)
4488(5): jmp 0xfffff9f1(%rip)
448d(4): sub $0x8,%rsp
4491(6): mov $0x5,%r8d
4497(3): mov %r11,%rcx
449a(4): push 0x68(%rsp)
449e(4): push 0x78(%rsp)
44a2(3): mov %r14,%rdi
44a5(4): push 0x38(%rsp)
44a9(8): mov 0x98(%rsp),%r9d
44b1(5): mov 0x30(%rsp),%rdx
44b6(5): mov 0x70(%rsp),%rsi
44bb(5): call 0xffffee35(%rip)
44c0(4): add $0x20,%rsp
44c4(3): mov %rax,%r15
44c7(5): jmp 0xfffffa02(%rip)
44cc(5): movzx 0x7c(%rsp),%eax
44d1(5): jmp 0xffffff1b(%rip)
44d6(8): mov $0x2,0x8(%rsp)
44de(5): jmp 0xfffff99b(%rip)
44e3(5): call 0xffffd4ad(%rip)
44e8(5): mov $0x0,0xd(%rsp)
44ed(5): jmp 0xfffffa74(%rip)
44f2(3): mov %r11,%rbp
44f5(5): jmp 0xfffff99b(%rip)
44fa(5): mov $0x1,0xe(%rsp)
44ff(2): xor %eax,%eax
4501(3): xor %r12d,%r12d
4504(9): mov $0x0,0x50(%rsp)
450d(5): jmp 0xfffff5a7(%rip)
4512(3): mov %r13,%rdx
4515(5): mov 0x50(%rsp),%r13
451a(5): jmp 0xfffff5f8(%rip)
451f(5): call 0xffffd371(%rip)

"quotearg_n_options" :
4530(2): push %r15
4532(2): push %r14
4534(3): movsxd %edi,%r15
4537(2): push %r13
4539(2): push %r12
453b(3): mov %rdx,%r14
453e(1): push %rbp
453f(1): push %rbx
4540(3): mov %rcx,%rbp
4543(4): sub $0x28,%rsp
4547(5): mov %rsi,0x8(%rsp)
454c(5): call 0xffffd354(%rip)
4551(3): mov %rax,%r13
4554(2): mov (%rax),%eax
4556(3): test %r15d,%r15d
4559(7): mov 0x214b00(%rip),%rbx
4560(4): mov %eax,0x18(%rsp)
4564(6): js 0x16d(%rip)
456a(7): cmp %r15d,0x214ae7(%rip)
4571(2): jnle 0x64(%rip)
4573(7): cmp $0x7fffffff,%r15d
457a(6): jz 0x15c(%rip)
4580(4): lea 0x1(%r15),%r12d
4584(7): lea 0x214ae5(%rip),%rax
458b(3): movsxd %r12d,%rsi
458e(4): shl/sal $0x4,%rsi
4592(3): cmp %rax,%rbx
4595(6): jz 0x11b(%rip)
459b(3): mov %rbx,%rdi
459e(5): call 0x1052(%rip)
45a3(3): mov %rax,%rbx
45a6(7): mov %rax,0x214ab3(%rip)
45ad(7): movsxd 0x214aa4(%rip),%rdi
45b4(3): mov %r12d,%edx
45b7(2): xor %esi,%esi
45b9(2): sub %edi,%edx
45bb(4): shl/sal $0x4,%rdi
45bf(3): movsxd %edx,%rdx
45c2(3): add %rbx,%rdi
45c5(4): shl/sal $0x4,%rdx
45c9(5): call 0xffffd447(%rip)
45ce(7): mov %r12d,0x214a83(%rip)
45d5(3): mov 0x4(%rbp),%eax
45d8(4): shl/sal $0x4,%r15
45dc(4): sub $0x8,%rsp
45e0(3): add %r15,%rbx
45e3(4): lea 0x8(%rbp),%r15
45e7(4): mov 0x0(%rbp),%r8d
45eb(3): mov (%rbx),%r11
45ee(4): mov 0x8(%rbx),%r12
45f2(3): mov %r14,%rcx
45f5(3): or $0x1,%eax
45f8(4): mov %eax,0x24(%rsp)
45fc(3): push 0x30(%rbp)
45ff(3): mov %eax,%r9d
4602(3): push 0x28(%rbp)
4605(2): push %r15
4607(3): mov %r11,%rsi
460a(5): mov 0x28(%rsp),%rdx
460f(3): mov %r12,%rdi
4612(5): mov %r11,0x30(%rsp)
4617(5): call 0xffffecd9(%rip)
461c(4): add $0x20,%rsp
4620(5): mov 0x10(%rsp),%r11
4625(3): cmp %rax,%r11
4628(2): jnbe 0x69(%rip)
462a(4): lea 0x1(%rax),%rsi
462e(7): lea 0x216c8b(%rip),%rax
4635(3): cmp %rax,%r12
4638(3): mov %rsi,(%rbx)
463b(2): jz 0x14(%rip)
463d(3): mov %r12,%rdi
4640(5): mov %rsi,0x10(%rsp)
4645(5): call 0xffffd23b(%rip)
464a(5): mov 0x10(%rsp),%rsi
464f(3): mov %rsi,%rdi
4652(5): mov %rsi,0x10(%rsp)
4657(5): call 0xf39(%rip)
465c(4): sub $0x8,%rsp
4660(4): mov %rax,0x8(%rbx)
4664(4): mov 0x0(%rbp),%r8d
4668(3): push 0x30(%rbp)
466b(3): push 0x28(%rbp)
466e(3): mov %r14,%rcx
4671(2): push %r15
4673(5): mov 0x3c(%rsp),%r9d
4678(3): mov %rax,%rdi
467b(5): mov 0x28(%rsp),%rdx
4680(5): mov 0x30(%rsp),%rsi
4685(3): mov %rax,%r12
4688(5): call 0xffffec68(%rip)
468d(4): add $0x20,%rsp
4691(4): mov 0x18(%rsp),%eax
4695(4): mov %eax,0x0(%r13)
4699(4): add $0x28,%rsp
469d(3): mov %r12,%rax
46a0(1): pop %rbx
46a1(1): pop %rbp
46a2(2): pop %r12
46a4(2): pop %r13
46a6(2): pop %r14
46a8(2): pop %r15
46aa(1): ret near (%rsp)
46ab(5): nop 0x0(%rax,%rax,1)
46b0(2): xor %edi,%edi
46b2(5): call 0xf3e(%rip)
46b7(8): movdqa 0x2149b1(%rip),%xmm0
46bf(3): mov %rax,%rbx
46c2(7): mov %rax,0x214997(%rip)
46c9(3): movups %xmm0,(%rax)
46cc(5): jmp 0xfffffee1(%rip)
46d1(5): call 0xffffd1bf(%rip)
46d6(5): call 0x110a(%rip)

"clone_quoting_options" :
46e0(2): push %r12
46e2(1): push %rbp
46e3(1): push %rbx
46e4(3): mov %rdi,%rbx
46e7(5): call 0xffffd1b9(%rip)
46ec(3): mov (%rax),%r12d
46ef(3): mov %rax,%rbp
46f2(7): lea 0x216cc7(%rip),%rax
46f9(3): test %rbx,%rbx
46fc(5): mov $0x38,%esi
4701(4): cmove %rax,%rbx
4705(3): mov %rbx,%rdi
4708(5): call 0x1088(%rip)
470d(4): mov %r12d,0x0(%rbp)
4711(1): pop %rbx
4712(1): pop %rbp
4713(2): pop %r12
4715(1): ret near (%rsp)

"get_quoting_style" :
4720(7): lea 0x216c99(%rip),%rax
4727(3): test %rdi,%rdi
472a(4): cmove %rax,%rdi
472e(2): mov (%rdi),%eax
4730(1): ret near (%rsp)

"set_quoting_style" :
4740(7): lea 0x216c79(%rip),%rax
4747(3): test %rdi,%rdi
474a(4): cmove %rax,%rdi
474e(2): mov %esi,(%rdi)
4750(1): ret near (%rsp)

"set_char_quoting" :
4760(7): lea 0x216c59(%rip),%rax
4767(3): test %rdi,%rdi
476a(2): mov %esi,%ecx
476c(4): cmove %rax,%rdi
4770(2): mov %esi,%eax
4772(3): and $0x1f,%ecx
4775(3): shr $0x5,%al
4778(3): movzx %al,%eax
477b(5): lea 0x8(%rdi,%rax,4),%rdi
4780(2): mov (%rdi),%esi
4782(2): mov %esi,%eax
4784(2): shr %cl,%eax
4786(2): xor %eax,%edx
4788(3): and $0x1,%eax
478b(3): and $0x1,%edx
478e(2): shl/sal %cl,%edx
4790(2): xor %esi,%edx
4792(2): mov %edx,(%rdi)
4794(1): ret near (%rsp)

"set_quoting_flags" :
47a0(7): lea 0x216c19(%rip),%rax
47a7(3): test %rdi,%rdi
47aa(4): cmove %rax,%rdi
47ae(3): mov 0x4(%rdi),%eax
47b1(3): mov %esi,0x4(%rdi)
47b4(1): ret near (%rsp)

"set_custom_quoting" :
47c0(7): lea 0x216bf9(%rip),%rax
47c7(3): test %rdi,%rdi
47ca(4): cmove %rax,%rdi
47ce(3): test %rsi,%rsi
47d1(6): mov $0xa,(%rdi)
47d7(2): jz 0x10(%rip)
47d9(3): test %rdx,%rdx
47dc(2): jz 0xb(%rip)
47de(4): mov %rsi,0x28(%rdi)
47e2(4): mov %rdx,0x30(%rdi)
47e6(1): ret near (%rsp)
47e7(4): sub $0x8,%rsp
47eb(5): call 0xffffd0a5(%rip)

"quotearg_buffer" :
47f0(2): push %r15
47f2(2): push %r14
47f4(7): lea 0x216bc5(%rip),%rax
47fb(2): push %r13
47fd(2): push %r12
47ff(3): mov %rdi,%r13
4802(1): push %rbp
4803(1): push %rbx
4804(3): mov %r8,%rbx
4807(3): mov %rsi,%r14
480a(3): mov %rdx,%r15
480d(4): sub $0x18,%rsp
4811(3): test %r8,%r8
4814(4): cmove %rax,%rbx
4818(5): mov %rcx,0x8(%rsp)
481d(5): call 0xffffd083(%rip)
4822(3): mov (%rax),%r12d
4825(3): mov %rax,%rbp
4828(4): lea 0x8(%rbx),%rax
482c(4): sub $0x8,%rsp
4830(4): mov 0x4(%rbx),%r9d
4834(3): push 0x30(%rbx)
4837(3): mov (%rbx),%r8d
483a(3): push 0x28(%rbx)
483d(3): mov %r15,%rdx
4840(1): push %rax
4841(5): mov 0x28(%rsp),%rcx
4846(3): mov %r14,%rsi
4849(3): mov %r13,%rdi
484c(5): call 0xffffeaa4(%rip)
4851(4): mov %r12d,0x0(%rbp)
4855(4): add $0x38,%rsp
4859(1): pop %rbx
485a(1): pop %rbp
485b(2): pop %r12
485d(2): pop %r13
485f(2): pop %r14
4861(2): pop %r15
4863(1): ret near (%rsp)

"quotearg_alloc_mem" :
4870(2): push %r15
4872(2): push %r14
4874(7): lea 0x216b45(%rip),%rax
487b(2): push %r13
487d(2): push %r12
487f(3): mov %rdx,%r12
4882(1): push %rbp
4883(1): push %rbx
4884(3): mov %rcx,%rbx
4887(3): mov %rdi,%r14
488a(3): mov %rsi,%r15
488d(4): sub $0x38,%rsp
4891(3): test %rcx,%rcx
4894(4): cmove %rax,%rbx
4898(2): xor %ebp,%ebp
489a(5): call 0xffffd006(%rip)
489f(3): test %r12,%r12
48a2(3): mov %rax,%r13
48a5(2): mov (%rax),%eax
48a7(4): setz %bpl
48ab(3): or 0x4(%rbx),%ebp
48ae(4): lea 0x8(%rbx),%r10
48b2(4): sub $0x8,%rsp
48b6(3): mov (%rbx),%r8d
48b9(3): mov %r15,%rcx
48bc(4): mov %eax,0x14(%rsp)
48c0(3): push 0x30(%rbx)
48c3(3): mov %r14,%rdx
48c6(3): push 0x28(%rbx)
48c9(2): push %r10
48cb(2): xor %esi,%esi
48cd(3): mov %ebp,%r9d
48d0(2): xor %edi,%edi
48d2(5): mov %r10,0x40(%rsp)
48d7(5): call 0xffffea19(%rip)
48dc(4): lea 0x1(%rax),%rsi
48e0(5): mov %rax,0x48(%rsp)
48e5(4): add $0x20,%rsp
48e9(3): mov %rsi,%rdi
48ec(5): mov %rsi,0x18(%rsp)
48f1(5): call 0xc9f(%rip)
48f6(5): mov %rax,0x10(%rsp)
48fb(4): sub $0x8,%rsp
48ff(3): push 0x30(%rbx)
4902(3): push 0x28(%rbx)
4905(5): mov 0x38(%rsp),%r10
490a(3): mov %ebp,%r9d
490d(3): mov (%rbx),%r8d
4910(3): mov %r15,%rcx
4913(3): mov %r14,%rdx
4916(3): mov %rax,%rdi
4919(2): push %r10
491b(5): mov 0x38(%rsp),%rsi
4920(5): call 0xffffe9d0(%rip)
4925(4): mov 0x2c(%rsp),%eax
4929(4): add $0x20,%rsp
492d(3): test %r12,%r12
4930(4): mov %eax,0x0(%r13)
4934(2): jz 0xb(%rip)
4936(5): mov 0x28(%rsp),%r11
493b(4): mov %r11,(%r12)
493f(5): mov 0x10(%rsp),%rax
4944(4): add $0x38,%rsp
4948(1): pop %rbx
4949(1): pop %rbp
494a(2): pop %r12
494c(2): pop %r13
494e(2): pop %r14
4950(2): pop %r15
4952(1): ret near (%rsp)

"quotearg_alloc" :
4960(3): mov %rdx,%rcx
4963(2): xor %edx,%edx
4965(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4970(6): mov 0x2146e2(%rip),%eax
4976(2): push %r12
4978(7): mov 0x2146e1(%rip),%r12
497f(1): push %rbp
4980(1): push %rbx
4981(3): cmp $0x1,%eax
4984(2): jle 0x2d(%rip)
4986(3): sub $0x2,%eax
4989(5): lea 0x18(%r12),%rbx
498e(4): shl/sal $0x4,%rax
4992(5): lea 0x28(%r12,%rax,1),%rbp
4997(9): nop 0x0(%rax,%rax,1)
49a0(3): mov (%rbx),%rdi
49a3(4): add $0x10,%rbx
49a7(5): call 0xffffced9(%rip)
49ac(3): cmp %rbp,%rbx
49af(2): jnz 0xfffffff1(%rip)
49b1(5): mov 0x8(%r12),%rdi
49b6(7): lea 0x216903(%rip),%rbx
49bd(3): cmp %rbx,%rdi
49c0(2): jz 0x19(%rip)
49c2(5): call 0xffffcebe(%rip)
49c7(b): mov $0x100,0x21469e(%rip)
49d2(7): mov %rbx,0x21469f(%rip)
49d9(7): lea 0x214690(%rip),%rbx
49e0(3): cmp %rbx,%r12
49e3(2): jz 0x11(%rip)
49e5(3): mov %r12,%rdi
49e8(5): call 0xffffce98(%rip)
49ed(7): mov %rbx,0x21466c(%rip)
49f4(1): pop %rbx
49f5(a): mov $0x1,0x214659(%rip)
49ff(1): pop %rbp
4a00(2): pop %r12
4a02(1): ret near (%rsp)

"quotearg_n" :
4a10(7): lea 0x2169a9(%rip),%rcx
4a17(7): mov $0xffffffff,%rdx
4a1e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4a30(7): lea 0x216989(%rip),%rcx
4a37(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4a40(7): lea 0x216979(%rip),%rcx
4a47(3): mov %rdi,%rsi
4a4a(7): mov $0xffffffff,%rdx
4a51(2): xor %edi,%edi
4a53(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4a60(7): lea 0x216959(%rip),%rcx
4a67(3): mov %rsi,%rdx
4a6a(3): mov %rdi,%rsi
4a6d(2): xor %edi,%edi
4a6f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4a80(4): sub $0x48,%rsp
4a84(3): mov %rdx,%rax
4a87(9): mov $0x28,%rdx
4a90(5): mov %rdx,0x38(%rsp)
4a95(2): xor %edx,%edx
4a97(3): cmp $0xa,%esi
4a9a(2): jz 0x6a(%rip)
4a9c(3): mov %esi,(%rsp)
4a9f(3): mov %rsp,%rcx
4aa2(7): mov $0xffffffff,%rdx
4aa9(3): mov %rax,%rsi
4aac(9): mov $0x0,0x4(%rsp)
4ab5(9): mov $0x0,0xc(%rsp)
4abe(9): mov $0x0,0x14(%rsp)
4ac7(9): mov $0x0,0x1c(%rsp)
4ad0(9): mov $0x0,0x24(%rsp)
4ad9(9): mov $0x0,0x2c(%rsp)
4ae2(8): mov $0x0,0x34(%rsp)
4aea(5): call 0xfffffa46(%rip)
4aef(5): mov 0x38(%rsp),%rcx
4af4(9): xor $0x28,%rcx
4afd(2): jnz 0xc(%rip)
4aff(4): add $0x48,%rsp
4b03(1): ret near (%rsp)
4b04(5): call 0xffffcd8c(%rip)
4b09(5): call 0xffffce87(%rip)

"quotearg_n_style_mem" :
4b10(4): sub $0x48,%rsp
4b14(3): mov %rdx,%rax
4b17(3): mov %rcx,%rdx
4b1a(9): mov $0x28,%rcx
4b23(5): mov %rcx,0x38(%rsp)
4b28(2): xor %ecx,%ecx
4b2a(3): cmp $0xa,%esi
4b2d(2): jz 0x63(%rip)
4b2f(3): mov %esi,(%rsp)
4b32(3): mov %rsp,%rcx
4b35(3): mov %rax,%rsi
4b38(9): mov $0x0,0x4(%rsp)
4b41(9): mov $0x0,0xc(%rsp)
4b4a(9): mov $0x0,0x14(%rsp)
4b53(9): mov $0x0,0x1c(%rsp)
4b5c(9): mov $0x0,0x24(%rsp)
4b65(9): mov $0x0,0x2c(%rsp)
4b6e(8): mov $0x0,0x34(%rsp)
4b76(5): call 0xfffff9ba(%rip)
4b7b(5): mov 0x38(%rsp),%rdx
4b80(9): xor $0x28,%rdx
4b89(2): jnz 0xc(%rip)
4b8b(4): add $0x48,%rsp
4b8f(1): ret near (%rsp)
4b90(5): call 0xffffcd00(%rip)
4b95(5): call 0xffffcdfb(%rip)

"quotearg_style" :
4ba0(3): mov %rsi,%rdx
4ba3(2): mov %edi,%esi
4ba5(2): xor %edi,%edi
4ba7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4bb0(3): mov %rdx,%rcx
4bb3(3): mov %rsi,%rdx
4bb6(2): mov %edi,%esi
4bb8(2): xor %edi,%edi
4bba(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4bc0(4): sub $0x48,%rsp
4bc4(2): mov %edx,%ecx
4bc6(9): mov $0x28,%rax
4bcf(5): mov %rax,0x38(%rsp)
4bd4(2): xor %eax,%eax
4bd6(7): mov 0x216813(%rip),%rax
4bdd(3): mov %rsp,%r8
4be0(3): and $0x1f,%ecx
4be3(8): movdqa 0x2167d5(%rip),%xmm0
4beb(5): mov %rax,0x30(%rsp)
4bf0(2): mov %edx,%eax
4bf2(4): movaps %xmm0,(%rsp)
4bf6(3): shr $0x5,%al
4bf9(3): movzx %al,%eax
4bfc(5): lea 0x8(%r8,%rax,4),%r9
4c01(8): movdqa 0x2167c7(%rip),%xmm0
4c09(5): movaps %xmm0,0x10(%rsp)
4c0e(8): movdqa 0x2167ca(%rip),%xmm0
4c16(5): movaps %xmm0,0x20(%rsp)
4c1b(3): mov (%r9),%edx
4c1e(2): mov %edx,%eax
4c20(2): shr %cl,%eax
4c22(2): not %eax
4c24(3): and $0x1,%eax
4c27(2): shl/sal %cl,%eax
4c29(3): mov %r8,%rcx
4c2c(2): xor %edx,%eax
4c2e(3): mov %rsi,%rdx
4c31(3): mov %rdi,%rsi
4c34(3): mov %eax,(%r9)
4c37(2): xor %edi,%edi
4c39(5): call 0xfffff8f7(%rip)
4c3e(5): mov 0x38(%rsp),%rsi
4c43(9): xor $0x28,%rsi
4c4c(2): jnz 0x7(%rip)
4c4e(4): add $0x48,%rsp
4c52(1): ret near (%rsp)
4c53(5): call 0xffffcd3d(%rip)

"quotearg_char" :
4c60(4): movsx %sil,%edx
4c64(7): mov $0xffffffff,%rsi
4c6b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4c70(5): mov $0x3a,%edx
4c75(7): mov $0xffffffff,%rsi
4c7c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4c90(5): mov $0x3a,%edx
4c95(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4ca0(4): sub $0x48,%rsp
4ca4(3): mov %rdx,%rax
4ca7(9): mov $0x28,%rdx
4cb0(5): mov %rdx,0x38(%rsp)
4cb5(2): xor %edx,%edx
4cb7(3): cmp $0xa,%esi
4cba(2): jz 0x6a(%rip)
4cbc(3): mov %esi,(%rsp)
4cbf(3): mov %rsp,%rcx
4cc2(7): mov $0xffffffff,%rdx
4cc9(3): mov %rax,%rsi
4ccc(9): mov $0x0,0x4(%rsp)
4cd5(9): mov $0x4000000,0xc(%rsp)
4cde(9): mov $0x0,0x14(%rsp)
4ce7(9): mov $0x0,0x1c(%rsp)
4cf0(9): mov $0x0,0x24(%rsp)
4cf9(9): mov $0x0,0x2c(%rsp)
4d02(8): mov $0x0,0x34(%rsp)
4d0a(5): call 0xfffff826(%rip)
4d0f(5): mov 0x38(%rsp),%rcx
4d14(9): xor $0x28,%rcx
4d1d(2): jnz 0xc(%rip)
4d1f(4): add $0x48,%rsp
4d23(1): ret near (%rsp)
4d24(5): call 0xffffcb6c(%rip)
4d29(5): call 0xffffcc67(%rip)

"quotearg_n_custom_mem" :
4d30(4): sub $0x48,%rsp
4d34(3): mov %rcx,%r9
4d37(7): mov 0x2166b2(%rip),%rcx
4d3e(8): movdqa 0x21667a(%rip),%xmm0
4d46(9): mov $0x28,%rax
4d4f(5): mov %rax,0x38(%rsp)
4d54(2): xor %eax,%eax
4d56(4): movaps %xmm0,(%rsp)
4d5a(3): test %rsi,%rsi
4d5d(5): mov %rcx,0x30(%rsp)
4d62(7): mov $0xa,(%rsp)
4d69(8): movdqa 0x21665f(%rip),%xmm0
4d71(5): movaps %xmm0,0x10(%rsp)
4d76(8): movdqa 0x216662(%rip),%xmm0
4d7e(5): movaps %xmm0,0x20(%rsp)
4d83(2): jz 0x34(%rip)
4d85(3): test %rdx,%rdx
4d88(2): jz 0x2f(%rip)
4d8a(5): mov %rsi,0x28(%rsp)
4d8f(5): mov %rdx,0x30(%rsp)
4d94(3): mov %rsp,%rcx
4d97(3): mov %r8,%rdx
4d9a(3): mov %r9,%rsi
4d9d(5): call 0xfffff793(%rip)
4da2(5): mov 0x38(%rsp),%rdi
4da7(9): xor $0x28,%rdi
4db0(2): jnz 0xc(%rip)
4db2(4): add $0x48,%rsp
4db6(1): ret near (%rsp)
4db7(5): call 0xffffcad9(%rip)
4dbc(5): call 0xffffcbd4(%rip)

"quotearg_n_custom" :
4dd0(7): mov $0xffffffff,%r8
4dd7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4de0(3): mov %rdx,%rcx
4de3(7): mov $0xffffffff,%r8
4dea(3): mov %rsi,%rdx
4ded(3): mov %rdi,%rsi
4df0(2): xor %edi,%edi
4df2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4e00(3): mov %rcx,%r8
4e03(3): mov %rdx,%rcx
4e06(3): mov %rsi,%rdx
4e09(3): mov %rdi,%rsi
4e0c(2): xor %edi,%edi
4e0e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4e20(7): lea 0x2141f9(%rip),%rcx
4e27(5): jmp 0xfffff709(%rip)

"quote_mem" :
4e30(7): lea 0x2141e9(%rip),%rcx
4e37(3): mov %rsi,%rdx
4e3a(3): mov %rdi,%rsi
4e3d(2): xor %edi,%edi
4e3f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4e50(7): lea 0x2141c9(%rip),%rcx
4e57(7): mov $0xffffffff,%rdx
4e5e(5): jmp 0xfffff6d2(%rip)

"quote" :
4e70(7): lea 0x2141a9(%rip),%rcx
4e77(3): mov %rdi,%rsi
4e7a(7): mov $0xffffffff,%rdx
4e81(2): xor %edi,%edi
4e83(5): jmp 0xfffff6ad(%rip)

"safe_read" :
4e90(2): push %r13
4e92(2): push %r12
4e94(3): mov %edi,%r13d
4e97(1): push %rbp
4e98(1): push %rbx
4e99(3): mov %rsi,%r12
4e9c(3): mov %rdx,%rbx
4e9f(4): sub $0x8,%rsp
4ea3(5): nop 0x0(%rax,%rax,1)
4ea8(3): mov %rbx,%rdx
4eab(3): mov %r12,%rsi
4eae(3): mov %r13d,%edi
4eb1(5): call 0xffffcb7f(%rip)
4eb6(3): test %rax,%rax
4eb9(3): mov %rax,%rbp
4ebc(2): jns 0x24(%rip)
4ebe(5): call 0xffffc9e2(%rip)
4ec3(2): mov (%rax),%eax
4ec5(3): cmp $0x4,%eax
4ec8(2): jz 0xffffffe0(%rip)
4eca(7): cmp $0x7ff00000,%rbx
4ed1(2): jbe 0xf(%rip)
4ed3(3): cmp $0x16,%eax
4ed6(2): jnz 0xa(%rip)
4ed8(5): mov $0x7ff00000,%ebx
4edd(2): jmp 0xffffffcb(%rip)
4edf(1): nop 
4ee0(4): add $0x8,%rsp
4ee4(3): mov %rbp,%rax
4ee7(1): pop %rbx
4ee8(1): pop %rbp
4ee9(2): pop %r12
4eeb(2): pop %r13
4eed(1): ret near (%rsp)

"mkstemp_safer" :
4ef0(4): sub $0x8,%rsp
4ef4(5): call 0xffffcc0c(%rip)
4ef9(4): add $0x8,%rsp
4efd(2): mov %eax,%edi
4eff(5): jmp 0x31(%rip)

"mkostemp_safer" :
4f10(1): push %rbx
4f11(2): mov %esi,%ebx
4f13(5): call 0xffffcacd(%rip)
4f18(2): mov %ebx,%esi
4f1a(2): mov %eax,%edi
4f1c(1): pop %rbx
4f1d(5): jmp 0xed33(%rip)

"fd_safer" :
4f30(2): push %r13
4f32(2): push %r12
4f34(1): push %rbp
4f35(1): push %rbx
4f36(2): mov %edi,%ebx
4f38(4): sub $0x8,%rsp
4f3c(3): cmp $0x2,%edi
4f3f(2): jnbe 0x23(%rip)
4f41(5): call 0xee0f(%rip)
4f46(3): mov %eax,%r12d
4f49(5): call 0xffffc957(%rip)
4f4e(3): mov (%rax),%r13d
4f51(3): mov %rax,%rbp
4f54(2): mov %ebx,%edi
4f56(5): call 0xffffcaca(%rip)
4f5b(3): mov %r12d,%ebx
4f5e(4): mov %r13d,0x0(%rbp)
4f62(4): add $0x8,%rsp
4f66(2): mov %ebx,%eax
4f68(1): pop %rbx
4f69(1): pop %rbp
4f6a(2): pop %r12
4f6c(2): pop %r13
4f6e(1): ret near (%rsp)

"version_etc_arn" :
4f70(2): push %r15
4f72(2): push %r14
4f74(2): push %r13
4f76(2): push %r12
4f78(3): mov %r9,%r12
4f7b(1): push %rbp
4f7c(1): push %rbx
4f7d(3): mov %rdi,%rbp
4f80(3): mov %r8,%rbx
4f83(4): sub $0x28,%rsp
4f87(3): test %rsi,%rsi
4f8a(6): jz 0x11e(%rip)
4f90(3): mov %rdx,%r8
4f93(7): lea 0xfc0e(%rip),%rdx
4f9a(3): mov %rcx,%r9
4f9d(2): xor %eax,%eax
4f9f(3): mov %rsi,%rcx
4fa2(5): mov $0x1,%esi
4fa7(5): call 0xffffcc79(%rip)
4fac(7): lea 0xfc08(%rip),%rsi
4fb3(2): xor %edi,%edi
4fb5(5): mov $0x5,%edx
4fba(5): call 0xffffc9a6(%rip)
4fbf(7): lea 0xff1a(%rip),%rdx
4fc6(3): mov %rax,%rcx
4fc9(6): mov $0x7e3,%r8d
4fcf(5): mov $0x1,%esi
4fd4(3): mov %rbp,%rdi
4fd7(2): xor %eax,%eax
4fd9(5): call 0xffffcc47(%rip)
4fde(7): lea 0xfc63(%rip),%rsi
4fe5(2): xor %edi,%edi
4fe7(5): mov $0x5,%edx
4fec(5): call 0xffffc974(%rip)
4ff1(3): mov %rbp,%rsi
4ff4(3): mov %rax,%rdi
4ff7(5): call 0xffffca69(%rip)
4ffc(4): cmp $0x9,%r12
5000(6): jnbe 0x340(%rip)
5006(7): lea 0xfe97(%rip),%rdx
500d(4): movsxd 0x0(%rdx,%r12,4),%rax
5011(3): add %rdx,%rax
5014(2): jmp %rax
5016(a): nop 0x0(%rax,%rax,1)
5020(4): mov 0x38(%rbx),%r9
5024(4): mov 0x10(%rbx),%rax
5028(7): lea 0xfd89(%rip),%rsi
502f(4): mov 0x8(%rbx),%r8
5033(5): mov $0x5,%edx
5038(2): xor %edi,%edi
503a(4): mov 0x30(%rbx),%r13
503e(4): mov 0x28(%rbx),%r12
5042(5): mov %r9,0x10(%rsp)
5047(4): mov 0x20(%rbx),%r15
504b(4): mov 0x18(%rbx),%r14
504f(4): mov %rax,(%rsp)
5053(5): mov %r8,0x8(%rsp)
5058(3): mov (%rbx),%rbx
505b(5): call 0xffffc905(%rip)
5060(4): sub $0x8,%rsp
5064(5): mov 0x18(%rsp),%r9
5069(3): mov %rax,%rdx
506c(3): mov %rbx,%rcx
506f(5): mov $0x1,%esi
5074(3): mov %rbp,%rdi
5077(2): xor %eax,%eax
5079(2): push %r9
507b(2): push %r13
507d(2): push %r12
507f(2): push %r15
5081(2): push %r14
5083(5): mov 0x30(%rsp),%r9
5088(5): mov 0x38(%rsp),%r8
508d(5): call 0xffffcb93(%rip)
5092(4): add $0x30,%rsp
5096(4): add $0x28,%rsp
509a(1): pop %rbx
509b(1): pop %rbp
509c(2): pop %r12
509e(2): pop %r13
50a0(2): pop %r14
50a2(2): pop %r15
50a4(1): ret near (%rsp)
50a5(3): nop (%rax)
50a8(3): mov %rcx,%r8
50ab(3): mov %rdx,%rcx
50ae(7): lea 0xfaff(%rip),%rdx
50b5(5): mov $0x1,%esi
50ba(2): xor %eax,%eax
50bc(5): call 0xffffcb64(%rip)
50c1(5): jmp 0xfffffeeb(%rip)
50c6(a): nop 0x0(%rax,%rax,1)
50d0(4): mov 0x40(%rbx),%r10
50d4(4): mov 0x38(%rbx),%r9
50d8(7): lea 0xfd09(%rip),%rsi
50df(4): mov 0x10(%rbx),%rax
50e3(4): mov 0x8(%rbx),%r8
50e7(5): mov $0x5,%edx
50ec(4): mov 0x30(%rbx),%r13
50f0(4): mov 0x28(%rbx),%r12
50f4(4): mov 0x20(%rbx),%r15
50f8(4): mov 0x18(%rbx),%r14
50fc(3): mov (%rbx),%rbx
50ff(5): mov %r10,0x18(%rsp)
5104(5): mov %r9,0x10(%rsp)
5109(4): mov %rax,(%rsp)
510d(5): mov %r8,0x8(%rsp)
5112(2): xor %edi,%edi
5114(5): call 0xffffc84c(%rip)
5119(5): mov 0x18(%rsp),%r10
511e(2): push %r10
5120(5): jmp 0xffffff44(%rip)
5125(3): nop (%rax)
5128(3): mov (%rbx),%rbx
512b(7): lea 0xfa8d(%rip),%rsi
5132(5): mov $0x5,%edx
5137(2): xor %edi,%edi
5139(5): call 0xffffc827(%rip)
513e(4): add $0x28,%rsp
5142(3): mov %rbx,%rcx
5145(3): mov %rbp,%rdi
5148(1): pop %rbx
5149(1): pop %rbp
514a(2): pop %r12
514c(2): pop %r13
514e(2): pop %r14
5150(2): pop %r15
5152(3): mov %rax,%rdx
5155(5): mov $0x1,%esi
515a(2): xor %eax,%eax
515c(5): jmp 0xffffcac4(%rip)
5161(7): nop 0x0(%rax)
5168(4): mov 0x8(%rbx),%r12
516c(7): lea 0xfa5c(%rip),%rsi
5173(3): mov (%rbx),%rbx
5176(5): mov $0x5,%edx
517b(2): xor %edi,%edi
517d(5): call 0xffffc7e3(%rip)
5182(4): add $0x28,%rsp
5186(3): mov %r12,%r8
5189(3): mov %rbx,%rcx
518c(3): mov %rbp,%rdi
518f(3): mov %rax,%rdx
5192(5): mov $0x1,%esi
5197(1): pop %rbx
5198(1): pop %rbp
5199(2): pop %r12
519b(2): pop %r13
519d(2): pop %r14
519f(2): pop %r15
51a1(2): xor %eax,%eax
51a3(5): jmp 0xffffca7d(%rip)
51a8(8): nop 0x0(%rax,%rax,1)
51b0(4): mov 0x10(%rbx),%r13
51b4(4): mov 0x8(%rbx),%r12
51b8(7): lea 0xfa27(%rip),%rsi
51bf(3): mov (%rbx),%rbx
51c2(5): mov $0x5,%edx
51c7(2): xor %edi,%edi
51c9(5): call 0xffffc797(%rip)
51ce(4): add $0x28,%rsp
51d2(3): mov %r13,%r9
51d5(3): mov %r12,%r8
51d8(3): mov %rbx,%rcx
51db(3): mov %rbp,%rdi
51de(3): mov %rax,%rdx
51e1(1): pop %rbx
51e2(1): pop %rbp
51e3(2): pop %r12
51e5(2): pop %r13
51e7(2): pop %r14
51e9(2): pop %r15
51eb(5): mov $0x1,%esi
51f0(2): xor %eax,%eax
51f2(5): jmp 0xffffca2e(%rip)
51f7(9): nop 0x0(%rax,%rax,1)
5200(7): lea 0xfb11(%rip),%rsi
5207(5): mov $0x5,%edx
520c(2): xor %edi,%edi
520e(4): mov 0x18(%rbx),%r14
5212(4): mov 0x10(%rbx),%r13
5216(4): mov 0x8(%rbx),%r12
521a(3): mov (%rbx),%rbx
521d(5): call 0xffffc743(%rip)
5222(4): sub $0x8,%rsp
5226(2): push %r14
5228(3): mov %rax,%rdx
522b(3): mov %r13,%r9
522e(3): mov %r12,%r8
5231(3): mov %rbx,%rcx
5234(3): mov %rbp,%rdi
5237(5): mov $0x1,%esi
523c(2): xor %eax,%eax
523e(5): call 0xffffc9e2(%rip)
5243(1): pop %rax
5244(1): pop %rdx
5245(4): add $0x28,%rsp
5249(1): pop %rbx
524a(1): pop %rbp
524b(2): pop %r12
524d(2): pop %r13
524f(2): pop %r14
5251(2): pop %r15
5253(1): ret near (%rsp)
5254(4): nop 0x0(%rax)
5258(4): mov 0x20(%rbx),%r15
525c(7): lea 0xfad5(%rip),%rsi
5263(5): mov $0x5,%edx
5268(2): xor %edi,%edi
526a(4): mov 0x18(%rbx),%r14
526e(4): mov 0x10(%rbx),%r13
5272(4): mov 0x8(%rbx),%r12
5276(3): mov (%rbx),%rbx
5279(5): call 0xffffc6e7(%rip)
527e(2): push %r15
5280(2): jmp 0xffffffa6(%rip)
5282(6): nop 0x0(%rax,%rax,1)
5288(4): mov 0x8(%rbx),%r8
528c(4): mov 0x28(%rbx),%r12
5290(7): lea 0xfac9(%rip),%rsi
5297(4): mov 0x20(%rbx),%r15
529b(4): mov 0x18(%rbx),%r14
529f(5): mov $0x5,%edx
52a4(4): mov 0x10(%rbx),%r13
52a8(2): xor %edi,%edi
52aa(3): mov (%rbx),%rbx
52ad(4): mov %r8,(%rsp)
52b1(5): call 0xffffc6af(%rip)
52b6(4): sub $0x8,%rsp
52ba(3): mov %r13,%r9
52bd(2): push %r12
52bf(2): push %r15
52c1(2): push %r14
52c3(5): mov 0x20(%rsp),%r8
52c8(3): mov %rbx,%rcx
52cb(3): mov %rax,%rdx
52ce(3): mov %rbp,%rdi
52d1(5): mov $0x1,%esi
52d6(2): xor %eax,%eax
52d8(5): call 0xffffc948(%rip)
52dd(4): add $0x20,%rsp
52e1(4): add $0x28,%rsp
52e5(1): pop %rbx
52e6(1): pop %rbp
52e7(2): pop %r12
52e9(2): pop %r13
52eb(2): pop %r14
52ed(2): pop %r15
52ef(1): ret near (%rsp)
52f0(4): mov 0x10(%rbx),%r9
52f4(4): mov 0x30(%rbx),%r13
52f8(7): lea 0xfa89(%rip),%rsi
52ff(4): mov 0x28(%rbx),%r12
5303(4): mov 0x20(%rbx),%r15
5307(5): mov $0x5,%edx
530c(4): mov 0x18(%rbx),%r14
5310(4): mov 0x8(%rbx),%r8
5314(2): xor %edi,%edi
5316(5): mov %r9,0x8(%rsp)
531b(3): mov (%rbx),%rbx
531e(4): mov %r8,(%rsp)
5322(5): call 0xffffc63e(%rip)
5327(2): push %r13
5329(2): push %r12
532b(2): push %r15
532d(2): push %r14
532f(5): mov 0x28(%rsp),%r9
5334(2): jmp 0xffffff8f(%rip)
5336(a): nop 0x0(%rax,%rax,1)
5340(4): mov 0x40(%rbx),%r10
5344(4): mov 0x38(%rbx),%r9
5348(5): mov $0x5,%edx
534d(4): mov 0x10(%rbx),%rax
5351(4): mov 0x8(%rbx),%r8
5355(7): lea 0xfac4(%rip),%rsi
535c(4): mov 0x30(%rbx),%r13
5360(4): mov 0x28(%rbx),%r12
5364(4): mov 0x20(%rbx),%r15
5368(4): mov 0x18(%rbx),%r14
536c(5): mov %r10,0x18(%rsp)
5371(5): mov %r9,0x10(%rsp)
5376(4): mov %rax,(%rsp)
537a(5): mov %r8,0x8(%rsp)
537f(3): mov (%rbx),%rbx
5382(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5390(3): xor %r9d,%r9d
5393(4): cmp $0x0,(%r8)
5397(2): jz 0x14(%rip)
5399(7): nop 0x0(%rax)
53a0(4): add $0x1,%r9
53a4(5): cmp $0x0,0x0(%r8,%r9,8)
53a9(2): jnz 0xfffffff7(%rip)
53ab(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
53b0(4): sub $0x68,%rsp
53b4(3): mov %r8,%r10
53b7(3): xor %r9d,%r9d
53ba(9): mov $0x28,%rax
53c3(5): mov %rax,0x58(%rsp)
53c8(2): xor %eax,%eax
53ca(3): mov %rsp,%r8
53cd(3): nop (%rax)
53d0(3): mov (%r10),%eax
53d3(3): cmp $0x2f,%eax
53d6(2): jnbe 0x44(%rip)
53d8(3): mov %eax,%r11d
53db(4): add 0x10(%r10),%r11
53df(3): add $0x8,%eax
53e2(3): mov %eax,(%r10)
53e5(3): mov (%r11),%rax
53e8(3): test %rax,%rax
53eb(4): mov %rax,0x0(%r8,%r9,8)
53ef(2): jz 0xc(%rip)
53f1(4): add $0x1,%r9
53f5(4): cmp $0xa,%r9
53f9(2): jnz 0xffffffd7(%rip)
53fb(5): call 0xfffffb75(%rip)
5400(5): mov 0x58(%rsp),%rax
5405(9): xor $0x28,%rax
540e(2): jnz 0x7(%rip)
5410(4): add $0x68,%rsp
5414(1): ret near (%rsp)
5415(5): call 0xffffc57b(%rip)
541a(4): mov 0x8(%r10),%r11
541e(4): lea 0x8(%r11),%rax
5422(4): mov %rax,0x8(%r10)
5426(2): jmp 0xffffffbf(%rip)

"version_etc" :
5430(1): push %rbp
5431(1): push %rbx
5432(6): mov $0x20,%r10d
5438(3): xor %r11d,%r11d
543b(7): sub $0xb8,%rsp
5442(9): mov $0x28,%rax
544b(5): mov %rax,0x78(%rsp)
5450(2): xor %eax,%eax
5452(8): lea 0xd0(%rsp),%rax
545a(8): mov %r8,0xa0(%rsp)
5462(8): lea 0xd0(%rsp),%rbx
546a(5): lea 0x20(%rsp),%r8
546f(8): mov %r9,0xa8(%rsp)
5477(8): mov $0x20,0x8(%rsp)
547f(5): mov %rax,0x10(%rsp)
5484(8): lea 0x80(%rsp),%rax
548c(3): xor %r9d,%r9d
548f(5): mov %rax,0x18(%rsp)
5494(3): mov %rax,%rbp
5497(9): nop 0x0(%rax,%rax,1)
54a0(4): cmp $0x2f,%r10d
54a4(2): jnbe 0x58(%rip)
54a6(3): mov %r10d,%eax
54a9(6): mov $0x1,%r11d
54af(4): add $0x8,%r10d
54b3(3): add %rbp,%rax
54b6(3): mov (%rax),%rax
54b9(3): test %rax,%rax
54bc(4): mov %rax,0x0(%r8,%r9,8)
54c0(2): jz 0xc(%rip)
54c2(4): add $0x1,%r9
54c6(4): cmp $0xa,%r9
54ca(2): jnz 0xffffffd6(%rip)
54cc(3): test %r11b,%r11b
54cf(2): jnz 0x26(%rip)
54d1(5): call 0xfffffa9f(%rip)
54d6(5): mov 0x78(%rsp),%rax
54db(9): xor $0x28,%rax
54e4(2): jnz 0xc(%rip)
54e6(7): add $0xb8,%rsp
54ed(1): pop %rbx
54ee(1): pop %rbp
54ef(1): ret near (%rsp)
54f0(5): call 0xffffc4a0(%rip)
54f5(5): mov %r10d,0x8(%rsp)
54fa(2): jmp 0xffffffd7(%rip)
54fc(3): mov %rbx,%rax
54ff(4): add $0x8,%rbx
5503(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5510(1): push %rbx
5511(7): lea 0xf6ea(%rip),%rsi
5518(5): mov $0x5,%edx
551d(2): xor %edi,%edi
551f(5): call 0xffffc441(%rip)
5524(7): lea 0xf6ec(%rip),%rdx
552b(3): mov %rax,%rsi
552e(5): mov $0x1,%edi
5533(2): xor %eax,%eax
5535(5): call 0xffffc62b(%rip)
553a(7): lea 0xf6ec(%rip),%rsi
5541(5): mov $0x5,%edx
5546(2): xor %edi,%edi
5548(5): call 0xffffc418(%rip)
554d(7): lea 0xf034(%rip),%rcx
5554(7): lea 0xec93(%rip),%rdx
555b(3): mov %rax,%rsi
555e(5): mov $0x1,%edi
5563(2): xor %eax,%eax
5565(5): call 0xffffc5fb(%rip)
556a(7): mov 0x213b17(%rip),%rbx
5571(7): lea 0xf8e8(%rip),%rsi
5578(2): xor %edi,%edi
557a(5): mov $0x5,%edx
557f(5): call 0xffffc3e1(%rip)
5584(3): mov %rbx,%rsi
5587(3): mov %rax,%rdi
558a(1): pop %rbx
558b(5): jmp 0xffffc4d5(%rip)

"xmalloc" :
5590(1): push %rbx
5591(3): mov %rdi,%rbx
5594(5): call 0xffffc52c(%rip)
5599(3): test %rax,%rax
559c(2): jnz 0x7(%rip)
559e(3): test %rbx,%rbx
55a1(2): jnz 0x4(%rip)
55a3(1): pop %rbx
55a4(1): ret near (%rsp)
55a5(5): call 0x23b(%rip)

"xnmalloc" :
55b0(3): mov %rdi,%rax
55b3(3): mul %rax,%rsi,%rdx
55b6(3): mov %rax,%rdi
55b9(3): seto %al
55bc(3): test %rdi,%rdi
55bf(2): js 0xc(%rip)
55c1(3): movzx %al,%eax
55c4(3): test %rax,%rax
55c7(2): jnz 0x4(%rip)
55c9(2): jmp 0xffffffc7(%rip)
55cb(4): sub $0x8,%rsp
55cf(5): call 0x211(%rip)

"xrealloc" :
55f0(3): test %rsi,%rsi
55f3(1): push %rbx
55f4(3): mov %rsi,%rbx
55f7(2): jnz 0x7(%rip)
55f9(3): test %rdi,%rdi
55fc(2): jnz 0x1c(%rip)
55fe(3): mov %rbx,%rsi
5601(5): call 0xffffc52f(%rip)
5606(3): test %rax,%rax
5609(2): jnz 0x7(%rip)
560b(3): test %rbx,%rbx
560e(2): jnz 0x13(%rip)
5610(1): pop %rbx
5611(1): ret near (%rsp)
5612(6): nop 0x0(%rax,%rax,1)
5618(5): call 0xffffc268(%rip)
561d(2): xor %eax,%eax
561f(1): pop %rbx
5620(1): ret near (%rsp)
5621(5): call 0x1bf(%rip)

"xnrealloc" :
5630(3): mov %rsi,%rax
5633(3): mul %rax,%rdx,%rdx
5636(3): mov %rax,%rsi
5639(3): seto %al
563c(3): test %rsi,%rsi
563f(2): js 0xc(%rip)
5641(3): movzx %al,%eax
5644(3): test %rax,%rax
5647(2): jnz 0x4(%rip)
5649(2): jmp 0xffffffa7(%rip)
564b(4): sub $0x8,%rsp
564f(5): call 0x191(%rip)

"x2nrealloc" :
5660(3): test %rdi,%rdi
5663(3): mov %rdx,%r9
5666(3): mov (%rsi),%rcx
5669(2): jz 0x37(%rip)
566b(2): xor %edx,%edx
566d(a): mov $0x6148914691236517204,%rax
5677(3): div %r9,%rax
567a(3): cmp %rcx,%rax
567d(2): jbe 0x3e(%rip)
567f(3): mov %rcx,%rax
5682(3): shr $0x1,%rax
5685(5): lea 0x1(%rax,%rcx,1),%rcx
568a(3): mov %rcx,(%rsi)
568d(4): imul %r9,%rcx
5691(3): mov %rcx,%rsi
5694(5): jmp 0xffffff5c(%rip)
5699(7): nop 0x0(%rax)
56a0(3): test %rcx,%rcx
56a3(2): jz 0x25(%rip)
56a5(3): mov %rcx,%rax
56a8(3): mul %rax,%r9,%rdx
56ab(3): seto %dl
56ae(3): test %rax,%rax
56b1(3): movzx %dl,%edx
56b4(2): js 0x7(%rip)
56b6(3): test %rdx,%rdx
56b9(2): jz 0xffffffd1(%rip)
56bb(4): sub $0x8,%rsp
56bf(5): call 0x121(%rip)
56c4(4): nop 0x0(%rax)
56c8(2): xor %edx,%edx
56ca(5): mov $0x80,%eax
56cf(3): xor %r8d,%r8d
56d2(3): div %r9,%rax
56d5(3): test %rax,%rax
56d8(4): setz %r8b
56dc(4): lea 0x0(%r8,%rax,1),%rcx
56e0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
56f0(3): test %rdi,%rdi
56f3(3): mov (%rsi),%rax
56f6(2): jz 0x2a(%rip)
56f8(a): mov $0x6148914691236517203,%rdx
5702(3): cmp %rdx,%rax
5705(2): jnbe 0x2c(%rip)
5707(3): mov %rax,%rdx
570a(3): shr $0x1,%rdx
570d(5): lea 0x1(%rdx,%rax,1),%rax
5712(3): mov %rax,(%rsi)
5715(3): mov %rax,%rsi
5718(5): jmp 0xfffffed8(%rip)
571d(3): nop (%rax)
5720(3): test %rax,%rax
5723(5): mov $0x80,%edx
5728(4): cmove %rdx,%rax
572c(3): test %rax,%rax
572f(2): jns 0xffffffe3(%rip)
5731(4): sub $0x8,%rsp
5735(5): call 0xab(%rip)

"xzalloc" :
5740(1): push %rbx
5741(3): mov %rdi,%rbx
5744(5): call 0xfffffe4c(%rip)
5749(3): mov %rbx,%rdx
574c(2): xor %esi,%esi
574e(3): mov %rax,%rdi
5751(1): pop %rbx
5752(5): jmp 0xffffc2be(%rip)

"xcalloc" :
5760(3): mov %rdi,%rax
5763(4): sub $0x8,%rsp
5767(3): mul %rax,%rsi,%rdx
576a(3): seto %dl
576d(3): test %rax,%rax
5770(2): js 0x19(%rip)
5772(3): movzx %dl,%edx
5775(3): test %rdx,%rdx
5778(2): jnz 0x11(%rip)
577a(5): call 0xffffc2f6(%rip)
577f(3): test %rax,%rax
5782(2): jz 0x7(%rip)
5784(4): add $0x8,%rsp
5788(1): ret near (%rsp)
5789(5): call 0x57(%rip)

"xmemdup" :
5790(1): push %rbp
5791(1): push %rbx
5792(3): mov %rdi,%rbp
5795(3): mov %rsi,%rdi
5798(3): mov %rsi,%rbx
579b(4): sub $0x8,%rsp
579f(5): call 0xfffffdf1(%rip)
57a4(4): add $0x8,%rsp
57a8(3): mov %rbx,%rdx
57ab(3): mov %rbp,%rsi
57ae(1): pop %rbx
57af(1): pop %rbp
57b0(3): mov %rax,%rdi
57b3(5): jmp 0xffffc2dd(%rip)

"xstrdup" :
57c0(1): push %rbx
57c1(3): mov %rdi,%rbx
57c4(5): call 0xffffc1bc(%rip)
57c9(3): mov %rbx,%rdi
57cc(4): lea 0x1(%rax),%rsi
57d0(1): pop %rbx
57d1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
57e0(7): lea 0xf728(%rip),%rsi
57e7(4): sub $0x8,%rsp
57eb(5): mov $0x5,%edx
57f0(2): xor %edi,%edi
57f2(5): call 0xffffc16e(%rip)
57f7(6): mov 0x21381b(%rip),%edi
57fd(7): lea 0xee7c(%rip),%rdx
5804(3): mov %rax,%rcx
5807(2): xor %esi,%esi
5809(2): xor %eax,%eax
580b(5): call 0xffffc395(%rip)
5810(5): call 0xffffc080(%rip)

"rpl_fseeko" :
5820(4): mov 0x8(%rdi),%rax
5824(4): cmp %rax,0x10(%rdi)
5828(2): jz 0x8(%rip)
582a(5): jmp 0xffffc396(%rip)
582f(1): nop 
5830(4): mov 0x20(%rdi),%rax
5834(4): cmp %rax,0x28(%rdi)
5838(2): jnz 0xfffffff2(%rip)
583a(5): cmp $0x0,0x48(%rdi)
583f(2): jnz 0xffffffeb(%rip)
5841(2): push %r12
5843(1): push %rbp
5844(3): mov %edx,%r12d
5847(1): push %rbx
5848(3): mov %rsi,%rbp
584b(3): mov %rdi,%rbx
584e(5): call 0xffffc252(%rip)
5853(3): mov %r12d,%edx
5856(3): mov %rbp,%rsi
5859(2): mov %eax,%edi
585b(5): call 0xffffc195(%rip)
5860(4): cmp $0xffffffff,%rax
5864(2): jz 0xe(%rip)
5866(3): and $0xef,(%rbx)
5869(7): mov %rax,0x90(%rbx)
5870(2): xor %eax,%eax
5872(1): pop %rbx
5873(1): pop %rbp
5874(2): pop %r12
5876(1): ret near (%rsp)

"rpl_mbrtowc" :
5880(2): push %r13
5882(2): push %r12
5884(3): mov %rsi,%r13
5887(1): push %rbp
5888(1): push %rbx
5889(3): mov %rdi,%rbx
588c(3): mov %rdx,%r12
588f(4): sub $0x18,%rsp
5893(9): mov $0x28,%rax
589c(5): mov %rax,0x8(%rsp)
58a1(2): xor %eax,%eax
58a3(5): lea 0x4(%rsp),%rax
58a8(3): test %rdi,%rdi
58ab(4): cmove %rax,%rbx
58af(3): mov %rbx,%rdi
58b2(5): call 0xffffc0fe(%rip)
58b7(4): cmp $0xfffffffd,%rax
58bb(3): mov %rax,%rbp
58be(2): jbe 0x22(%rip)
58c0(3): test %r12,%r12
58c3(2): jz 0x1d(%rip)
58c5(2): xor %edi,%edi
58c7(5): call 0xe3e9(%rip)
58cc(2): test %al,%al
58ce(2): jnz 0x12(%rip)
58d0(5): movzx 0x0(%r13),%eax
58d5(5): mov $0x1,%ebp
58da(2): mov %eax,(%rbx)
58dc(4): nop 0x0(%rax)
58e0(5): mov 0x8(%rsp),%rdx
58e5(9): xor $0x28,%rdx
58ee(3): mov %rbp,%rax
58f1(2): jnz 0xd(%rip)
58f3(4): add $0x18,%rsp
58f7(1): pop %rbx
58f8(1): pop %rbp
58f9(2): pop %r12
58fb(2): pop %r13
58fd(1): ret near (%rsp)
58fe(5): call 0xffffc092(%rip)

"peek_token_bracket" :
5910(4): mov 0x48(%rsi),%rax
5914(4): cmp %rax,0x68(%rsi)
5918(2): jle 0x58(%rip)
591a(4): mov 0x8(%rsi),%r8
591e(7): cmp $0x1,0x90(%rsi)
5925(5): movzx 0x0(%r8,%rax,1),%ecx
592a(2): mov %cl,(%rdi)
592c(2): jle 0x17(%rip)
592e(4): cmp 0x30(%rsi),%rax
5932(2): jz 0x11(%rip)
5934(4): mov 0x10(%rsi),%r9
5938(5): cmp $0xff,0x0(%r9,%rax,4)
593d(6): jz 0x82(%rip)
5943(3): cmp $0x5c,%cl
5946(2): jz 0x6a(%rip)
5948(3): cmp $0x5b,%cl
594b(2): jz 0x35(%rip)
594d(3): cmp $0x5d,%cl
5950(6): jz 0xa0(%rip)
5956(3): cmp $0x5e,%cl
5959(6): jz 0x87(%rip)
595f(3): cmp $0x2d,%cl
5962(2): jnz 0x5d(%rip)
5964(4): mov $0x16,0x8(%rdi)
5968(5): mov $0x1,%eax
596d(1): ret near (%rsp)
596e(2): nop 
5970(4): mov $0x2,0x8(%rdi)
5974(2): xor %eax,%eax
5976(1): ret near (%rsp)
5977(9): nop 0x0(%rax,%rax,1)
5980(4): lea 0x1(%rax),%rcx
5984(4): cmp 0x58(%rsi),%rcx
5988(2): jnl 0x48(%rip)
598a(6): movzx 0x1(%r8,%rax,1),%eax
5990(2): cmp $0x3a,%al
5992(2): mov %al,(%rdi)
5994(6): jz 0x9c(%rip)
599a(2): cmp $0x3d,%al
599c(6): jz 0x84(%rip)
59a2(2): cmp $0x2e,%al
59a4(2): jnz 0x2c(%rip)
59a6(4): mov $0x1a,0x8(%rdi)
59aa(5): mov $0x2,%eax
59af(1): ret near (%rsp)
59b0(3): and $0x1,%edx
59b3(2): jz 0xc(%rip)
59b5(4): lea 0x1(%rax),%rdx
59b9(4): cmp 0x58(%rsi),%rdx
59bd(2): jl 0x43(%rip)
59bf(4): mov $0x1,0x8(%rdi)
59c3(5): mov $0x1,%eax
59c8(1): ret near (%rsp)
59c9(7): nop 0x0(%rax)
59d0(4): mov $0x1,0x8(%rdi)
59d4(3): mov $0x5b,(%rdi)
59d7(5): mov $0x1,%eax
59dc(1): ret near (%rsp)
59dd(3): nop (%rax)
59e0(4): mov $0x19,0x8(%rdi)
59e4(5): mov $0x1,%eax
59e9(1): ret near (%rsp)
59ea(6): nop 0x0(%rax,%rax,1)
59f0(4): mov $0x15,0x8(%rdi)
59f4(5): mov $0x1,%eax
59f9(1): ret near (%rsp)
59fa(6): nop 0x0(%rax,%rax,1)
5a00(4): mov %rdx,0x48(%rsi)
5a04(6): movzx 0x1(%r8,%rax,1),%eax
5a0a(4): mov $0x1,0x8(%rdi)
5a0e(2): mov %al,(%rdi)
5a10(5): mov $0x1,%eax
5a15(1): ret near (%rsp)
5a16(a): nop 0x0(%rax,%rax,1)
5a20(4): mov $0x1c,0x8(%rdi)
5a24(5): mov $0x2,%eax
5a29(1): ret near (%rsp)
5a2a(6): nop 0x0(%rax,%rax,1)
5a30(3): and $0x4,%edx
5a33(2): jz 0xffffff9d(%rip)
5a35(4): mov $0x1e,0x8(%rdi)
5a39(5): mov $0x2,%eax
5a3e(1): ret near (%rsp)

"mark_opt_subexp" :
5a40(4): cmp $0x11,0x30(%rsi)
5a44(2): jz 0xc(%rip)
5a46(2): xor %eax,%eax
5a48(1): ret near (%rsp)
5a49(7): nop 0x0(%rax)
5a50(4): cmp 0x28(%rsi),%rdi
5a54(2): jnz 0xfffffff2(%rip)
5a56(4): or $0x8,0x32(%rsi)
5a5a(2): xor %eax,%eax
5a5c(1): ret near (%rsp)

"check_dst_limits_calc_pos_1" :
5a60(2): push %r15
5a62(2): push %r14
5a64(3): mov %rdx,%r9
5a67(2): push %r13
5a69(2): push %r12
5a6b(4): lea 0x0(%rcx,%rcx,2),%rdx
5a6f(1): push %rbp
5a70(1): push %rbx
5a71(3): mov %esi,%r15d
5a74(4): sub $0x48,%rsp
5a78(7): mov 0x98(%rdi),%r14
5a7f(4): mov %rdi,(%rsp)
5a83(4): mov 0x30(%r14),%rax
5a87(4): lea 0x0(%rax,%rdx,8),%r12
5a8b(6): cmp $0x0,0x8(%r12)
5a91(6): jle 0x194(%rip)
5a97(4): lea 0x0(%r8,%r8,4),%rax
5a9b(3): mov %rcx,%r11
5a9e(3): mov %r9d,%ecx
5aa1(3): mov %r8,%r10
5aa4(2): xor %ebx,%ebx
5aa6(4): mov %esi,0x20(%rsp)
5aaa(4): shl/sal $0x3,%rax
5aae(3): mov %r9,%r15
5ab1(5): mov %r11,0x10(%rsp)
5ab6(5): mov %rax,0x28(%rsp)
5abb(5): mov $0x1,%eax
5ac0(3): shl/sal %cl,%rax
5ac3(5): mov %rax,0x18(%rsp)
5ac8(2): not %eax
5aca(5): mov %ax,0x26(%rsp)
5acf(2): mov %esi,%eax
5ad1(3): and $0x1,%eax
5ad4(4): mov %eax,0xc(%rsp)
5ad8(2): mov %esi,%eax
5ada(3): and $0x2,%eax
5add(4): mov %eax,0x8(%rsp)
5ae1(2): jmp 0x24(%rip)
5ae3(5): nop 0x0(%rax,%rax,1)
5ae8(3): cmp $0x9,%dl
5aeb(6): jz 0x155(%rip)
5af1(3): cmp $0x4,%dl
5af4(2): jz 0x54(%rip)
5af6(4): add $0x1,%rbx
5afa(5): cmp %rbx,0x8(%r12)
5aff(6): jle 0x121(%rip)
5b05(5): mov 0x10(%r12),%rax
5b0a(4): mov 0x0(%rax,%rbx,8),%rbp
5b0e(3): mov %rbp,%rax
5b11(4): shl/sal $0x4,%rax
5b15(3): add (%r14),%rax
5b18(4): movzx 0x8(%rax),%edx
5b1c(3): cmp $0x8,%dl
5b1f(2): jnz 0xffffffc9(%rip)
5b21(4): mov 0xc(%rsp),%ecx
5b25(2): test %ecx,%ecx
5b27(2): jz 0xffffffcf(%rip)
5b29(3): cmp %r15,(%rax)
5b2c(2): jnz 0xffffffca(%rip)
5b2e(4): add $0x48,%rsp
5b32(5): mov $0xffffffff,%eax
5b37(1): pop %rbx
5b38(1): pop %rbp
5b39(2): pop %r12
5b3b(2): pop %r13
5b3d(2): pop %r14
5b3f(2): pop %r15
5b41(1): ret near (%rsp)
5b42(6): nop 0x0(%rax,%rax,1)
5b48(4): cmp $0xffffffff,%r10
5b4c(2): jz 0xffffffaa(%rip)
5b4e(4): mov (%rsp),%rax
5b52(5): mov 0x28(%rsp),%r13
5b57(3): mov %rbp,%rdi
5b5a(5): mov %r12,0x30(%rsp)
5b5f(5): mov %rbx,0x38(%rsp)
5b64(3): mov %r10,%r12
5b67(7): add 0xd8(%rax),%r13
5b6e(5): lea 0x0(%rbp,%rbp,2),%rax
5b73(3): mov %r14,%rbp
5b76(3): mov %rdi,%r14
5b79(4): shl/sal $0x3,%rax
5b7d(3): mov %rax,%rbx
5b80(4): cmp %r14,0x0(%r13)
5b84(2): jnz 0x6c(%rip)
5b86(4): cmp $0x3f,%r15
5b8a(2): jnle 0xe(%rip)
5b8c(5): movzx 0x22(%r13),%eax
5b91(5): test %rax,0x18(%rsp)
5b96(2): jz 0x5a(%rip)
5b98(4): mov 0x28(%rbp),%rax
5b9c(5): mov 0x10(%rax,%rbx,1),%rax
5ba1(3): mov (%rax),%rcx
5ba4(5): cmp %rcx,0x10(%rsp)
5ba9(6): jz 0xc7(%rip)
5baf(4): mov 0x20(%rsp),%esi
5bb3(4): mov (%rsp),%rdi
5bb7(3): mov %r12,%r8
5bba(3): mov %r15,%rdx
5bbd(5): call 0xfffffea3(%rip)
5bc2(3): cmp $0xff,%eax
5bc5(6): jz 0xffffff69(%rip)
5bcb(2): test %eax,%eax
5bcd(2): jnz 0xa(%rip)
5bcf(4): mov 0x8(%rsp),%esi
5bd3(2): test %esi,%esi
5bd5(2): jnz 0x80(%rip)
5bd7(4): cmp $0x3f,%r15
5bdb(2): jnle 0x15(%rip)
5bdd(5): movzx 0x26(%rsp),%eax
5be2(5): and %ax,0x22(%r13)
5be7(9): nop 0x0(%rax,%rax,1)
5bf0(4): add $0x28,%r13
5bf4(5): cmp $0x0,0xfffffff8(%r13)
5bf9(2): jnz 0xffffff87(%rip)
5bfb(5): mov 0x38(%rsp),%rbx
5c00(3): mov %r12,%r10
5c03(5): mov 0x30(%rsp),%r12
5c08(3): mov %rbp,%r14
5c0b(4): add $0x1,%rbx
5c0f(5): cmp %rbx,0x8(%r12)
5c14(6): jnle 0xfffffef1(%rip)
5c1a(6): nop 0x0(%rax,%rax,1)
5c20(5): mov 0x20(%rsp),%r15d
5c25(4): add $0x48,%rsp
5c29(3): mov %r15d,%eax
5c2c(1): pop %rbx
5c2d(2): sar $0x1,%eax
5c2f(1): pop %rbp
5c30(2): pop %r12
5c32(2): pop %r13
5c34(2): pop %r14
5c36(2): pop %r15
5c38(1): ret near (%rsp)
5c39(7): nop 0x0(%rax)
5c40(4): mov 0x8(%rsp),%edx
5c44(2): test %edx,%edx
5c46(6): jz 0xfffffeb0(%rip)
5c4c(3): cmp %r15,(%rax)
5c4f(6): jnz 0xfffffea7(%rip)
5c55(4): add $0x48,%rsp
5c59(2): xor %eax,%eax
5c5b(1): pop %rbx
5c5c(1): pop %rbp
5c5d(2): pop %r12
5c5f(2): pop %r13
5c61(2): pop %r14
5c63(2): pop %r15
5c65(1): ret near (%rsp)
5c66(a): nop 0x0(%rax,%rax,1)
5c70(5): mov 0x20(%rsp),%r15d
5c75(4): add $0x48,%rsp
5c79(1): pop %rbx
5c7a(1): pop %rbp
5c7b(3): mov %r15d,%eax
5c7e(3): and $0x1,%eax
5c81(2): pop %r12
5c83(2): neg %eax
5c85(2): pop %r13
5c87(2): pop %r14
5c89(2): pop %r15
5c8b(1): ret near (%rsp)

"check_dst_limits_calc_pos" :
5c90(7): mov 0xd8(%rdi),%rax
5c97(4): lea 0x0(%rsi,%rsi,4),%rsi
5c9b(4): lea 0x0(%rax,%rsi,8),%rax
5c9f(4): mov 0x10(%rax),%r10
5ca3(3): cmp %r8,%r10
5ca6(2): jnle 0x4a(%rip)
5ca8(4): mov 0x18(%rax),%rax
5cac(3): cmp %r8,%rax
5caf(2): jl 0x21(%rip)
5cb1(2): xor %esi,%esi
5cb3(3): cmp %r8,%r10
5cb6(4): setz %sil
5cba(3): or $0x2,%esi
5cbd(3): cmp %r8,%rax
5cc0(2): jz 0x25(%rip)
5cc2(2): xor %eax,%eax
5cc4(3): cmp %r8,%r10
5cc7(2): jz 0x19(%rip)
5cc9(2): REP ret near (%rsp)
5ccb(5): nop 0x0(%rax,%rax,1)
5cd0(5): mov $0x1,%eax
5cd5(1): ret near (%rsp)
5cd6(a): nop 0x0(%rax,%rax,1)
5ce0(5): mov $0x1,%esi
5ce5(3): mov %r9,%r8
5ce8(5): jmp 0xfffffd78(%rip)
5ced(3): nop (%rax)
5cf0(5): mov $0xffffffff,%eax
5cf5(1): ret near (%rsp)

"postorder" :
5d00(2): push %r12
5d02(3): mov %rsi,%r12
5d05(1): push %rbp
5d06(3): mov %rdx,%rbp
5d09(1): push %rbx
5d0a(3): mov %rdi,%rbx
5d0d(2): jmp 0x6(%rip)
5d0f(1): nop 
5d10(3): mov %rax,%rbx
5d13(4): mov 0x8(%rbx),%rax
5d17(3): test %rax,%rax
5d1a(2): jnz 0xfffffff6(%rip)
5d1c(4): mov 0x10(%rbx),%rax
5d20(3): test %rax,%rax
5d23(2): jnz 0xffffffed(%rip)
5d25(3): mov %rbx,%rsi
5d28(3): mov %rbp,%rdi
5d2b(3): call %r12
5d2e(2): test %eax,%eax
5d30(2): jnz 0x36(%rip)
5d32(6): nop 0x0(%rax,%rax,1)
5d38(3): mov (%rbx),%rdx
5d3b(3): test %rdx,%rdx
5d3e(2): jz 0x28(%rip)
5d40(4): mov 0x10(%rdx),%rax
5d44(3): cmp %rbx,%rax
5d47(3): mov %rdx,%rbx
5d4a(4): setz %sil
5d4e(3): test %rax,%rax
5d51(3): setz %cl
5d54(3): or %cl,%sil
5d57(2): jz 0xffffffb9(%rip)
5d59(3): mov %rbx,%rsi
5d5c(3): mov %rbp,%rdi
5d5f(3): call %r12
5d62(2): test %eax,%eax
5d64(2): jz 0xffffffd4(%rip)
5d66(1): pop %rbx
5d67(1): pop %rbp
5d68(2): pop %r12
5d6a(1): ret near (%rsp)

"preorder" :
5d70(2): push %r12
5d72(3): mov %rsi,%r12
5d75(1): push %rbp
5d76(3): mov %rdx,%rbp
5d79(1): push %rbx
5d7a(3): mov %rdi,%rbx
5d7d(2): jmp 0x6(%rip)
5d7f(1): nop 
5d80(3): mov %rdx,%rbx
5d83(3): mov %rbx,%rsi
5d86(3): mov %rbp,%rdi
5d89(3): call %r12
5d8c(2): test %eax,%eax
5d8e(2): jnz 0x2e(%rip)
5d90(4): mov 0x8(%rbx),%rdx
5d94(2): xor %ecx,%ecx
5d96(3): test %rdx,%rdx
5d99(2): jnz 0xffffffe7(%rip)
5d9b(2): jmp 0x8(%rip)
5d9d(3): nop (%rax)
5da0(3): mov %rdx,%rbx
5da3(4): mov 0x10(%rbx),%rdx
5da7(3): cmp %rcx,%rdx
5daa(2): jz 0x7(%rip)
5dac(3): test %rdx,%rdx
5daf(2): jnz 0xffffffd1(%rip)
5db1(3): mov (%rbx),%rdx
5db4(3): mov %rbx,%rcx
5db7(3): test %rdx,%rdx
5dba(2): jnz 0xffffffe6(%rip)
5dbc(1): pop %rbx
5dbd(1): pop %rbp
5dbe(2): pop %r12
5dc0(1): ret near (%rsp)

"re_string_realloc_buffers" :
5dd0(1): push %rbp
5dd1(1): push %rbx
5dd2(3): mov %rsi,%rbp
5dd5(3): mov %rdi,%rbx
5dd8(4): sub $0x8,%rsp
5ddc(7): cmp $0x1,0x90(%rdi)
5de3(2): jle 0x4a(%rip)
5de5(a): mov $0x2305843009213693951,%rax
5def(3): cmp %rax,%rsi
5df2(2): jnbe 0x6e(%rip)
5df4(4): mov 0x10(%rdi),%rdi
5df8(8): lea 0x0(,%rsi,4),%rsi
5e00(5): call 0xffffbd30(%rip)
5e05(3): test %rax,%rax
5e08(2): jz 0x58(%rip)
5e0a(4): mov 0x18(%rbx),%rdi
5e0e(4): mov %rax,0x10(%rbx)
5e12(3): test %rdi,%rdi
5e15(2): jz 0x18(%rip)
5e17(8): lea 0x0(,%rbp,8),%rsi
5e1f(5): call 0xffffbd11(%rip)
5e24(3): test %rax,%rax
5e27(2): jz 0x39(%rip)
5e29(4): mov %rax,0x18(%rbx)
5e2d(7): cmp $0x0,0x8b(%rbx)
5e34(2): jnz 0x14(%rip)
5e36(4): mov %rbp,0x40(%rbx)
5e3a(4): add $0x8,%rsp
5e3e(2): xor %eax,%eax
5e40(1): pop %rbx
5e41(1): pop %rbp
5e42(1): ret near (%rsp)
5e43(5): nop 0x0(%rax,%rax,1)
5e48(4): mov 0x8(%rbx),%rdi
5e4c(3): mov %rbp,%rsi
5e4f(5): call 0xffffbce1(%rip)
5e54(3): test %rax,%rax
5e57(2): jz 0x9(%rip)
5e59(4): mov %rax,0x8(%rbx)
5e5d(2): jmp 0xffffffd9(%rip)
5e5f(1): nop 
5e60(4): add $0x8,%rsp
5e64(5): mov $0xc,%eax
5e69(1): pop %rbx
5e6a(1): pop %rbp
5e6b(1): ret near (%rsp)

"re_node_set_insert_last" :
5e70(1): push %rbp
5e71(1): push %rbx
5e72(3): mov %rsi,%rbp
5e75(3): mov %rdi,%rbx
5e78(4): sub $0x8,%rsp
5e7c(4): mov 0x8(%rdi),%rsi
5e80(3): cmp %rsi,(%rdi)
5e83(4): mov 0x10(%rdi),%rax
5e87(2): jz 0x21(%rip)
5e89(4): lea 0x1(%rsi),%rdx
5e8d(4): mov %rdx,0x8(%rbx)
5e91(4): mov %rbp,0x0(%rax,%rsi,8)
5e95(5): mov $0x1,%eax
5e9a(4): add $0x8,%rsp
5e9e(1): pop %rbx
5e9f(1): pop %rbp
5ea0(1): ret near (%rsp)
5ea1(7): nop 0x0(%rax)
5ea8(4): add $0x1,%rsi
5eac(4): lea 0x0(%rsi,%rsi,1),%rdx
5eb0(4): shl/sal $0x4,%rsi
5eb4(3): mov %rdx,(%rdi)
5eb7(3): mov %rax,%rdi
5eba(5): call 0xffffbc76(%rip)
5ebf(3): test %rax,%rax
5ec2(2): jz 0xe(%rip)
5ec4(4): mov %rax,0x10(%rbx)
5ec8(4): mov 0x8(%rbx),%rsi
5ecc(2): jmp 0xffffffbd(%rip)
5ece(2): nop 
5ed0(2): xor %eax,%eax
5ed2(2): jmp 0xffffffc8(%rip)

"re_node_set_insert" :
5ee0(1): push %rbp
5ee1(1): push %rbx
5ee2(3): mov %rsi,%rbp
5ee5(3): mov %rdi,%rbx
5ee8(4): sub $0x8,%rsp
5eec(3): mov (%rdi),%rdx
5eef(3): test %rdx,%rdx
5ef2(2): jz 0x26(%rip)
5ef4(4): mov 0x8(%rdi),%rsi
5ef8(4): mov 0x10(%rdi),%rax
5efc(3): test %rsi,%rsi
5eff(2): jnz 0x51(%rip)
5f01(3): mov %rbp,(%rax)
5f04(5): add $0x1,0x8(%rdi)
5f09(5): mov $0x1,%eax
5f0e(4): add $0x8,%rsp
5f12(1): pop %rbx
5f13(1): pop %rbp
5f14(1): ret near (%rsp)
5f15(3): nop (%rax)
5f18(7): mov $0x1,(%rdi)
5f1f(8): mov $0x1,0x8(%rdi)
5f27(5): mov $0x8,%edi
5f2c(5): call 0xffffbb94(%rip)
5f31(3): test %rax,%rax
5f34(4): mov %rax,0x10(%rbx)
5f38(6): jz 0x90(%rip)
5f3e(3): mov %rbp,(%rax)
5f41(4): add $0x8,%rsp
5f45(5): mov $0x1,%eax
5f4a(1): pop %rbx
5f4b(1): pop %rbp
5f4c(1): ret near (%rsp)
5f4d(3): nop (%rax)
5f50(3): cmp %rsi,%rdx
5f53(6): jz 0x8d(%rip)
5f59(3): cmp %rbp,(%rax)
5f5c(8): lea 0x0(,%rsi,8),%rdx
5f64(2): jle 0x3c(%rip)
5f66(3): test %rsi,%rsi
5f69(2): jle 0x1a(%rip)
5f6b(3): add %rax,%rdx
5f6e(2): nop 
5f70(4): mov 0xfffffff8(%rdx),%rcx
5f74(4): sub $0x8,%rdx
5f78(4): mov %rcx,0x8(%rdx)
5f7c(3): cmp %rdx,%rax
5f7f(2): jnz 0xfffffff1(%rip)
5f81(2): xor %edx,%edx
5f83(4): mov %rbp,0x0(%rax,%rdx,1)
5f87(5): mov $0x1,%eax
5f8c(5): add $0x1,0x8(%rbx)
5f91(5): jmp 0xffffff7d(%rip)
5f96(a): nop 0x0(%rax,%rax,1)
5fa0(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
5fa5(3): cmp %rcx,%rbp
5fa8(2): jnl 0xffffffdb(%rip)
5faa(6): nop 0x0(%rax,%rax,1)
5fb0(4): mov %rcx,0x0(%rax,%rdx,1)
5fb4(4): sub $0x8,%rdx
5fb8(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
5fbd(3): cmp %rbp,%rcx
5fc0(2): jnle 0xfffffff0(%rip)
5fc2(2): jmp 0xffffffc1(%rip)
5fc4(4): nop 0x0(%rax)
5fc8(8): mov $0x0,0x8(%rbx)
5fd0(7): mov $0x0,(%rbx)
5fd7(5): jmp 0xffffff37(%rip)
5fdc(4): nop 0x0(%rax)
5fe0(4): lea 0x0(%rsi,%rsi,1),%rdx
5fe4(4): shl/sal $0x4,%rsi
5fe8(3): mov %rdx,(%rdi)
5feb(3): mov %rax,%rdi
5fee(5): call 0xffffbb42(%rip)
5ff3(3): test %rax,%rax
5ff6(2): jz 0xf(%rip)
5ff8(4): mov %rax,0x10(%rbx)
5ffc(4): mov 0x8(%rbx),%rsi
6000(5): jmp 0xffffff59(%rip)
6005(2): xor %eax,%eax
6007(5): jmp 0xffffff07(%rip)

"register_state" :
6010(2): push %r14
6012(2): push %r13
6014(3): mov %rdi,%r14
6017(2): push %r12
6019(1): push %rbp
601a(3): mov %rdx,%r12
601d(1): push %rbx
601e(4): mov 0x10(%rsi),%rbx
6022(3): mov %rsi,%rbp
6025(3): mov %rdx,(%rsi)
6028(8): mov $0x0,0x28(%rsi)
6030(4): lea 0x20(%rsi),%r13
6034(8): lea 0x0(,%rbx,8),%rdi
603c(4): mov %rbx,0x20(%rsi)
6040(5): call 0xffffba80(%rip)
6045(3): test %rax,%rax
6048(4): mov %rax,0x30(%rbp)
604c(2): jz 0x42(%rip)
604e(3): test %rbx,%rbx
6051(2): jle 0x4f(%rip)
6053(2): xor %ebx,%ebx
6055(2): jmp 0x15(%rip)
6057(9): nop 0x0(%rax,%rax,1)
6060(4): add $0x1,%rbx
6064(4): cmp %rbx,0x10(%rbp)
6068(2): jle 0x38(%rip)
606a(4): mov 0x18(%rbp),%rax
606e(4): mov 0x0(%rax,%rbx,8),%rsi
6072(3): mov %rsi,%rax
6075(4): shl/sal $0x4,%rax
6079(3): add (%r14),%rax
607c(4): test $0x8,0x8(%rax)
6080(2): jnz 0xffffffe0(%rip)
6082(3): mov %r13,%rdi
6085(5): call 0xfffffdeb(%rip)
608a(2): test %al,%al
608c(2): jnz 0xffffffd4(%rip)
608e(1): pop %rbx
608f(5): mov $0xc,%eax
6094(1): pop %rbp
6095(2): pop %r12
6097(2): pop %r13
6099(2): pop %r14
609b(1): ret near (%rsp)
609c(4): nop 0x0(%rax)
60a0(7): and 0x88(%r14),%r12
60a7(4): mov 0x40(%r14),%rax
60ab(4): lea 0x0(%r12,%r12,2),%rdx
60af(4): lea 0x0(%rax,%rdx,8),%rbx
60b3(3): mov (%rbx),%rdx
60b6(4): cmp %rdx,0x8(%rbx)
60ba(4): mov 0x10(%rbx),%rax
60be(4): lea 0x1(%rdx),%rsi
60c2(2): jle 0x14(%rip)
60c4(3): mov %rsi,(%rbx)
60c7(4): mov %rbp,0x0(%rax,%rdx,8)
60cb(2): xor %eax,%eax
60cd(1): pop %rbx
60ce(1): pop %rbp
60cf(2): pop %r12
60d1(2): pop %r13
60d3(2): pop %r14
60d5(1): ret near (%rsp)
60d6(4): lea 0x0(%rsi,%rsi,1),%r12
60da(3): mov %rax,%rdi
60dd(4): shl/sal $0x4,%rsi
60e1(5): call 0xffffba4f(%rip)
60e6(3): test %rax,%rax
60e9(2): jz 0xffffffa5(%rip)
60eb(3): mov (%rbx),%rdx
60ee(4): mov %rax,0x10(%rbx)
60f2(4): mov %r12,0x8(%rbx)
60f6(4): lea 0x1(%rdx),%rsi
60fa(2): jmp 0xffffffca(%rip)

"build_upper_buffer" :
6100(2): push %r12
6102(4): mov 0x58(%rdi),%r12
6106(4): cmp %r12,0x40(%rdi)
610a(1): push %rbp
610b(3): mov %rdi,%rbp
610e(5): cmovng 0x40(%rdi),%r12
6113(1): push %rbx
6114(4): mov 0x30(%rdi),%rbx
6118(3): cmp %rbx,%r12
611b(2): jle 0x3a(%rip)
611d(5): call 0xffffb743(%rip)
6122(6): nop 0x0(%rax,%rax,1)
6128(4): mov 0x0(%rbp),%rdx
612c(4): mov 0x78(%rbp),%rcx
6130(3): add %rbx,%rdx
6133(4): add 0x28(%rbp),%rdx
6137(3): test %rcx,%rcx
613a(3): movzx (%rdx),%edx
613d(2): jnz 0x2b(%rip)
613f(3): mov (%rax),%rsi
6142(4): mov 0x8(%rbp),%rcx
6146(3): mov 0x0(%rsi,%rdx,4),%edx
6149(3): mov %dl,0x0(%rcx,%rbx,1)
614c(4): add $0x1,%rbx
6150(3): cmp %rbx,%r12
6153(2): jnz 0xffffffd5(%rip)
6155(4): mov %rbx,0x30(%rbp)
6159(4): mov %rbx,0x38(%rbp)
615d(1): pop %rbx
615e(1): pop %rbp
615f(2): pop %r12
6161(1): ret near (%rsp)
6162(6): nop 0x0(%rax,%rax,1)
6168(4): movzx 0x0(%rcx,%rdx,1),%edx
616c(2): jmp 0xffffffd3(%rip)

"build_wcs_buffer" :
6170(2): push %r15
6172(2): push %r14
6174(2): push %r13
6176(2): push %r12
6178(1): push %rbp
6179(1): push %rbx
617a(3): mov %rdi,%rbx
617d(4): sub $0x68,%rsp
6181(4): mov 0x58(%rdi),%r12
6185(4): mov 0x30(%rdi),%rbp
6189(9): mov $0x28,%rax
6192(5): mov %rax,0x58(%rsp)
6197(2): xor %eax,%eax
6199(4): cmp %r12,0x40(%rdi)
619d(5): cmovng 0x40(%rdi),%r12
61a2(3): cmp %rbp,%r12
61a5(6): jle 0x8f(%rip)
61ab(4): lea 0x20(%rdi),%r14
61af(5): lea 0xc(%rsp),%r13
61b4(4): nop 0x0(%rax)
61b8(4): mov 0x78(%rbx),%rdi
61bc(3): mov %r12,%rdx
61bf(4): mov 0x20(%rbx),%r15
61c3(3): sub %rbp,%rdx
61c6(3): test %rdi,%rdi
61c9(6): jnz 0xe7(%rip)
61cf(4): mov 0x28(%rbx),%rsi
61d3(3): add %rbp,%rsi
61d6(3): add (%rbx),%rsi
61d9(3): mov %r14,%rcx
61dc(3): mov %r13,%rdi
61df(5): call 0xfffff6a1(%rip)
61e4(4): lea 0xffffffff(%rax),%rdx
61e8(4): cmp $0xfffffffd,%rdx
61ec(6): jnbe 0x94(%rip)
61f2(4): cmp $0xfffffffe,%rax
61f6(4): mov 0xc(%rsp),%edx
61fa(2): jz 0x76(%rip)
61fc(4): mov 0x10(%rbx),%rcx
6200(4): lea 0x1(%rbp),%rsi
6204(8): lea 0x0(,%rbp,4),%rdi
620c(3): mov %edx,0x0(%rcx,%rbp,4)
620f(3): add %rax,%rbp
6212(3): cmp %rbp,%rsi
6215(2): jnl 0x4b(%rip)
6217(5): lea 0x4(%rcx,%rdi,1),%rdx
621c(4): lea 0x0(%rcx,%rbp,4),%rax
6220(6): mov $0xffffffff,(%rdx)
6226(4): add $0x4,%rdx
622a(3): cmp %rdx,%rax
622d(2): jnz 0xfffffff3(%rip)
622f(3): cmp %r12,%rbp
6232(2): jl 0xffffff86(%rip)
6234(5): mov 0x58(%rsp),%rax
6239(9): xor $0x28,%rax
6242(4): mov %rbp,0x30(%rbx)
6246(4): mov %rbp,0x38(%rbx)
624a(6): jnz 0xe4(%rip)
6250(4): add $0x68,%rsp
6254(1): pop %rbx
6255(1): pop %rbp
6256(2): pop %r12
6258(2): pop %r13
625a(2): pop %r14
625c(2): pop %r15
625e(1): ret near (%rsp)
625f(1): nop 
6260(3): mov %rsi,%rbp
6263(3): cmp %r12,%rbp
6266(6): jl 0xffffff52(%rip)
626c(2): jmp 0xffffffc8(%rip)
626e(2): nop 
6270(4): mov 0x58(%rbx),%rax
6274(4): cmp %rax,0x40(%rbx)
6278(6): jl 0xa0(%rip)
627e(2): nop 
6280(3): mov (%rbx),%rax
6283(4): mov 0x78(%rbx),%rcx
6287(3): add %rbp,%rax
628a(4): add 0x28(%rbx),%rax
628e(3): test %rcx,%rcx
6291(3): movzx (%rax),%edx
6294(4): mov %edx,0xc(%rsp)
6298(6): jnz 0x89(%rip)
629e(4): mov %r15,0x20(%rbx)
62a2(5): mov $0x1,%eax
62a7(5): jmp 0xffffff55(%rip)
62ac(4): nop 0x0(%rax)
62b0(6): mov 0x90(%rbx),%ecx
62b6(2): xor %eax,%eax
62b8(5): lea 0x10(%rsp),%rsi
62bd(2): test %ecx,%ecx
62bf(2): jnle 0x22(%rip)
62c1(5): jmp 0xffffff18(%rip)
62c6(a): nop 0x0(%rax,%rax,1)
62d0(4): add $0x1,%rax
62d4(3): cmp %rax,%rdx
62d7(6): jz 0xffffff02(%rip)
62dd(4): mov 0x78(%rbx),%rdi
62e1(3): mov (%rbx),%rcx
62e4(3): add %rbp,%rcx
62e7(3): add %rax,%rcx
62ea(4): add 0x28(%rbx),%rcx
62ee(3): movzx (%rcx),%ecx
62f1(4): movzx 0x0(%rdi,%rcx,1),%ecx
62f5(4): mov 0x8(%rbx),%rdi
62f9(3): add %rbp,%rdi
62fc(3): mov %cl,0x0(%rdi,%rax,1)
62ff(3): mov %cl,0x0(%rsi,%rax,1)
6302(3): lea 0x1(%rax),%ecx
6305(6): cmp 0x90(%rbx),%ecx
630b(2): jl 0xffffffc5(%rip)
630d(5): jmp 0xfffffecc(%rip)
6312(6): nop 0x0(%rax,%rax,1)
6318(4): mov %r15,0x20(%rbx)
631c(5): jmp 0xffffff18(%rip)
6321(4): movzx 0x0(%rcx,%rdx,1),%edx
6325(4): mov %edx,0xc(%rsp)
6329(5): jmp 0xffffff75(%rip)
632e(5): call 0xffffb662(%rip)

"build_wcs_upper_buffer" :
6340(2): push %r15
6342(2): push %r14
6344(3): mov %rdi,%r14
6347(2): push %r13
6349(2): push %r12
634b(1): push %rbp
634c(1): push %rbx
634d(7): sub $0xa8,%rsp
6354(4): mov 0x58(%rdi),%rbx
6358(4): mov 0x30(%rdi),%r15
635c(9): mov $0x28,%rax
6365(8): mov %rax,0x98(%rsp)
636d(2): xor %eax,%eax
636f(4): cmp %rbx,0x40(%rdi)
6373(5): cmovng 0x40(%rdi),%rbx
6378(7): cmp $0x0,0x8a(%rdi)
637f(2): jnz 0xd(%rip)
6381(5): cmp $0x0,0x78(%rdi)
6386(6): jz 0x18a(%rip)
638c(4): mov 0x38(%r14),%r13
6390(3): cmp %rbx,%r15
6393(2): jl 0x3d(%rip)
6395(4): mov %r15,0x30(%r14)
6399(4): mov %r13,0x38(%r14)
639d(2): xor %eax,%eax
639f(8): mov 0x98(%rsp),%rcx
63a7(9): xor $0x28,%rcx
63b0(6): jnz 0x58a(%rip)
63b6(7): add $0xa8,%rsp
63bd(1): pop %rbx
63be(1): pop %rbp
63bf(2): pop %r12
63c1(2): pop %r13
63c3(2): pop %r14
63c5(2): pop %r15
63c7(1): ret near (%rsp)
63c8(8): nop 0x0(%rax,%rax,1)
63d0(4): lea 0x20(%r14),%rax
63d4(5): mov %rax,0x8(%rsp)
63d9(3): mov %rbx,%rax
63dc(3): sub %r15,%rax
63df(5): mov %rax,0x10(%rsp)
63e4(5): lea 0x44(%rsp),%rax
63e9(5): mov %rax,0x20(%rsp)
63ee(4): mov 0x78(%r14),%rdx
63f2(4): mov 0x20(%r14),%rax
63f6(3): test %rdx,%rdx
63f9(5): mov %rax,0x48(%rsp)
63fe(6): jnz 0x30b(%rip)
6404(4): mov 0x28(%r14),%rbp
6408(3): add %r13,%rbp
640b(3): add (%r14),%rbp
640e(5): mov %rbp,0x18(%rsp)
6413(5): mov 0x8(%rsp),%rcx
6418(5): mov 0x10(%rsp),%rdx
641d(5): mov 0x18(%rsp),%rsi
6422(5): mov 0x20(%rsp),%rdi
6427(5): call 0xfffff459(%rip)
642c(3): mov %rax,%rbp
642f(4): lea 0xffffffff(%rax),%rax
6433(4): cmp $0xfffffffc,%rax
6437(5): mov %rax,0x20(%rsp)
643c(6): jnbe 0x33d(%rip)
6442(4): mov 0x44(%rsp),%edx
6446(2): mov %edx,%edi
6448(4): mov %edx,0x10(%rsp)
644c(5): call 0xffffb794(%rip)
6451(4): mov 0x10(%rsp),%edx
6455(3): mov %eax,%r12d
6458(5): mov %r15,0x8(%rsp)
645d(2): cmp %eax,%edx
645f(6): jz 0x301(%rip)
6465(5): lea 0x50(%rsp),%rcx
646a(5): lea 0x48(%rsp),%rdx
646f(2): mov %eax,%esi
6471(3): mov %rcx,%rdi
6474(5): mov %rcx,0x10(%rsp)
6479(5): call 0xffffb657(%rip)
647e(3): cmp %rax,%rbp
6481(3): mov %rax,%r11
6484(5): mov 0x10(%rsp),%rcx
6489(6): jnz 0x38d(%rip)
648f(4): mov 0x8(%r14),%rdi
6493(3): mov %rbp,%rdx
6496(3): mov %rcx,%rsi
6499(3): add %r15,%rdi
649c(5): call 0xffffb5f4(%rip)
64a1(8): cmp $0x0,0x8c(%r14)
64a9(5): lea 0x0(%rbp,%r13,1),%rax
64ae(6): jnz 0x337(%rip)
64b4(4): add $0x1,%r15
64b8(5): mov 0x8(%rsp),%rsi
64bd(4): mov 0x10(%r14),%rdx
64c1(5): lea 0xffffffff(%r15,%rbp,1),%rcx
64c6(3): mov %rax,%r13
64c9(3): cmp %rcx,%r15
64cc(8): lea 0x0(,%rsi,4),%rax
64d4(4): mov %r12d,0x0(%rdx,%rsi,4)
64d8(6): jnl 0xfffffeb8(%rip)
64de(5): lea 0x4(%rdx,%rax,1),%rax
64e3(4): lea 0x0(%rdx,%rcx,4),%rdx
64e7(9): nop 0x0(%rax,%rax,1)
64f0(6): mov $0xffffffff,(%rax)
64f6(4): add $0x4,%rax
64fa(3): cmp %rax,%rdx
64fd(2): jnz 0xfffffff3(%rip)
64ff(3): mov %rcx,%r15
6502(5): jmp 0xfffffe8e(%rip)
6507(9): nop 0x0(%rax,%rax,1)
6510(7): cmp $0x0,0x8c(%rdi)
6517(6): jnz 0xfffffe75(%rip)
651d(3): cmp %rbx,%r15
6520(6): jnl 0x198(%rip)
6526(4): lea 0x20(%rdi),%rax
652a(5): mov %rax,0x8(%rsp)
652f(5): lea 0x44(%rsp),%rax
6534(5): mov %rax,0x30(%rsp)
6539(5): lea 0x48(%rsp),%rax
653e(5): mov %rax,0x38(%rsp)
6543(5): lea 0x50(%rsp),%rax
6548(5): mov %rax,0x28(%rsp)
654d(3): nop (%rax)
6550(4): mov 0x28(%r14),%rbp
6554(3): mov %r15,%r13
6557(3): add %r15,%rbp
655a(3): add (%r14),%rbp
655d(5): movzx 0x0(%rbp),%r12d
6562(4): test $0x80,%r12b
6566(2): jnz 0x14(%rip)
6568(5): mov 0x8(%rsp),%rdi
656d(5): call 0xffffb6d3(%rip)
6572(2): test %eax,%eax
6574(6): jnz 0xf4(%rip)
657a(4): mov 0x20(%r14),%rax
657e(5): mov 0x30(%rsp),%rdi
6583(3): mov %rbx,%rdx
6586(5): mov 0x8(%rsp),%rcx
658b(3): sub %r15,%rdx
658e(3): mov %rbp,%rsi
6591(5): mov %rdx,0x10(%rsp)
6596(5): mov %rax,0x48(%rsp)
659b(5): mov %rdi,0x20(%rsp)
65a0(5): call 0xfffff2e0(%rip)
65a5(3): mov %rax,%rbp
65a8(4): lea 0xffffffff(%rax),%rax
65ac(4): cmp $0xfffffffc,%rax
65b0(6): jnbe 0xe8(%rip)
65b6(4): mov 0x44(%rsp),%edx
65ba(2): mov %edx,%edi
65bc(4): mov %edx,0x18(%rsp)
65c0(5): call 0xffffb620(%rip)
65c5(4): mov 0x18(%rsp),%edx
65c9(3): mov %eax,%r12d
65cc(2): cmp %eax,%edx
65ce(2): jz 0x7a(%rip)
65d0(5): mov 0x38(%rsp),%rdx
65d5(5): mov 0x28(%rsp),%rdi
65da(2): mov %eax,%esi
65dc(5): call 0xffffb4f4(%rip)
65e1(3): cmp %rax,%rbp
65e4(6): jnz 0x174(%rip)
65ea(4): mov 0x8(%r14),%rdi
65ee(5): mov 0x28(%rsp),%rsi
65f3(3): mov %rbp,%rdx
65f6(3): add %r15,%rdi
65f9(5): call 0xffffb497(%rip)
65fe(4): add $0x1,%r15
6602(4): mov 0x10(%r14),%rdx
6606(8): lea 0x0(,%r13,4),%rax
660e(5): lea 0xffffffff(%r15,%rbp,1),%rcx
6613(3): cmp %rcx,%r15
6616(4): mov %r12d,0x0(%rdx,%r13,4)
661a(2): jnl 0x20(%rip)
661c(5): lea 0x4(%rdx,%rax,1),%rax
6621(4): lea 0x0(%rdx,%rcx,4),%rdx
6625(3): nop (%rax)
6628(6): mov $0xffffffff,(%rax)
662e(4): add $0x4,%rax
6632(3): cmp %rax,%rdx
6635(2): jnz 0xfffffff3(%rip)
6637(3): mov %rcx,%r15
663a(3): cmp %r15,%rbx
663d(6): jnle 0xffffff13(%rip)
6643(2): jmp 0x75(%rip)
6645(3): nop (%rax)
6648(4): mov 0x28(%r14),%rsi
664c(4): mov 0x8(%r14),%rdi
6650(3): mov %rbp,%rdx
6653(3): add %r15,%rsi
6656(3): add (%r14),%rsi
6659(3): add %r15,%rdi
665c(5): call 0xffffb434(%rip)
6661(2): jmp 0xffffff9d(%rip)
6663(5): nop 0x0(%rax,%rax,1)
6668(5): call 0xffffb1f8(%rip)
666d(3): mov (%rax),%rax
6670(4): mov 0x8(%r14),%rdx
6674(4): mov 0x0(%rax,%r12,4),%eax
6678(4): mov %al,0x0(%rdx,%r15,1)
667c(4): mov 0x8(%r14),%rdx
6680(4): mov 0x10(%r14),%rax
6684(5): movzx 0x0(%rdx,%r15,1),%edx
6689(4): mov %edx,0x0(%rax,%r15,4)
668d(4): add $0x1,%r15
6691(2): jmp 0xffffffa9(%rip)
6693(5): nop 0x0(%rax,%rax,1)
6698(4): cmp $0xfffffffd,%rax
669c(2): jnz 0x34(%rip)
669e(4): mov 0x58(%r14),%rax
66a2(4): cmp %rax,0x40(%r14)
66a6(2): jnl 0x2a(%rip)
66a8(5): mov 0x48(%rsp),%rax
66ad(4): mov %rax,0x20(%r14)
66b1(7): nop 0x0(%rax)
66b8(4): mov %r15,0x30(%r14)
66bc(4): mov %r15,0x38(%r14)
66c0(2): xor %eax,%eax
66c2(5): jmp 0xfffffcdd(%rip)
66c7(9): nop 0x0(%rax,%rax,1)
66d0(3): mov (%r14),%rax
66d3(4): mov 0x8(%r14),%rdx
66d7(3): add %r15,%rax
66da(4): add 0x28(%r14),%rax
66de(3): movzx (%rax),%eax
66e1(4): mov %al,0x0(%rdx,%r15,1)
66e5(4): mov 0x10(%r14),%rdx
66e9(4): add $0x1,%r15
66ed(4): cmp $0xffffffff,%rbp
66f1(4): mov %eax,0x0(%rdx,%r13,4)
66f5(6): jnz 0xffffff45(%rip)
66fb(5): mov 0x48(%rsp),%rax
6700(4): mov %rax,0x20(%r14)
6704(5): jmp 0xffffff36(%rip)
6709(7): mov 0x90(%r14),%eax
6710(2): test %eax,%eax
6712(6): jle 0x21e(%rip)
6718(4): mov 0x28(%r14),%rdi
671c(4): lea 0xffffffff(%rax),%r11d
6720(5): lea 0x50(%rsp),%rcx
6725(2): xor %eax,%eax
6727(3): add %r13,%rdi
672a(3): add (%r14),%rdi
672d(2): jmp 0xd(%rip)
672f(4): add $0x1,%rax
6733(5): cmp %rax,0x10(%rsp)
6738(2): jz 0x13(%rip)
673a(4): movzx 0x0(%rdi,%rax,1),%esi
673e(3): cmp %rax,%r11
6741(4): movzx 0x0(%rdx,%rsi,1),%esi
6745(4): mov %sil,0x0(%rcx,%rax,1)
6749(2): jnz 0xffffffe6(%rip)
674b(5): mov %rcx,0x18(%rsp)
6750(5): jmp 0xfffffcc3(%rip)
6755(3): nop (%rax)
6758(3): mov %r15,%r13
675b(5): jmp 0xfffffc93(%rip)
6760(4): mov 0x8(%r14),%rdi
6764(5): mov 0x18(%rsp),%rsi
6769(3): mov %rbp,%rdx
676c(3): add %r15,%rdi
676f(5): call 0xffffb321(%rip)
6774(5): jmp 0xfffffd2d(%rip)
6779(6): cmp $0xfffffffd,0x20(%rsp)
677f(2): jnz 0xc(%rip)
6781(4): mov 0x58(%r14),%rax
6785(4): cmp %rax,0x40(%r14)
6789(2): jl 0x7f(%rip)
678b(3): mov (%r14),%rax
678e(4): mov 0x78(%r14),%rdx
6792(3): add %r13,%rax
6795(4): add 0x28(%r14),%rax
6799(3): test %rdx,%rdx
679c(3): movzx (%rax),%eax
679f(6): jnz 0x1ad(%rip)
67a5(4): mov 0x8(%r14),%rdx
67a9(3): mov %r15,%rcx
67ac(4): mov %al,0x0(%rdx,%r15,1)
67b0(8): cmp $0x0,0x8c(%r14)
67b8(6): jnz 0x187(%rip)
67be(4): mov 0x10(%r14),%rdx
67c2(4): add $0x1,%r13
67c6(4): add $0x1,%r15
67ca(4): cmp $0xffffffff,%rbp
67ce(3): mov %eax,0x0(%rdx,%rcx,4)
67d1(6): jnz 0xfffffbbf(%rip)
67d7(5): mov 0x48(%rsp),%rax
67dc(4): mov %rax,0x20(%r14)
67e0(5): jmp 0xfffffbb0(%rip)
67e5(4): mov 0x18(%r14),%rdx
67e9(3): mov %r15,%rcx
67ec(3): mov %r13,%r10
67ef(3): sub %r13,%rcx
67f2(4): lea 0x0(%rdx,%rcx,8),%rdx
67f6(4): mov %r10,0x0(%rdx,%r10,8)
67fa(4): add $0x1,%r10
67fe(3): cmp %r10,%rax
6801(2): jnz 0xfffffff5(%rip)
6803(5): jmp 0xfffffcb1(%rip)
6808(5): mov 0x48(%rsp),%rax
680d(4): mov %rax,0x20(%r14)
6811(5): jmp 0xfffffb84(%rip)
6816(4): cmp $0xffffffff,%rax
681a(6): jz 0xffffff46(%rip)
6820(4): lea 0x0(%rax,%r15,1),%rax
6824(3): mov %rax,%rsi
6827(5): mov %rax,0x8(%rsp)
682c(4): mov 0x40(%r14),%rax
6830(3): cmp %rax,%rsi
6833(2): jnbe 0xffffffd5(%rip)
6835(5): cmp $0x0,0x18(%r14)
683a(6): jz 0xbe(%rip)
6840(8): cmp $0x0,0x8c(%r14)
6848(2): jnz 0x22(%rip)
684a(3): test %r15,%r15
684d(2): jz 0x15(%rip)
684f(4): mov 0x18(%r14),%rdx
6853(2): xor %eax,%eax
6855(4): mov %rax,0x0(%rdx,%rax,8)
6859(4): add $0x1,%rax
685d(3): cmp %r15,%rax
6860(2): jnz 0xfffffff5(%rip)
6862(8): mov $0x1,0x8c(%r14)
686a(4): mov 0x8(%r14),%rdi
686e(3): mov %rcx,%rsi
6871(3): mov %r11,%rdx
6874(5): mov %r11,0x10(%rsp)
6879(3): add %r15,%rdi
687c(5): call 0xffffb214(%rip)
6881(4): mov 0x10(%r14),%rax
6885(5): mov 0x10(%rsp),%r11
688a(4): lea 0x0(%rax,%r15,4),%rcx
688e(4): mov 0x18(%r14),%rax
6892(4): cmp $0x1,%r11
6896(3): mov %r12d,(%rcx)
6899(4): lea 0x0(%rax,%r15,8),%rsi
689d(3): mov %r13,(%rsi)
68a0(2): jbe 0x2a(%rip)
68a2(5): mov $0x1,%eax
68a7(5): mov 0x20(%rsp),%rdx
68ac(3): cmp %rbp,%rax
68af(4): cmovnae %rax,%rdx
68b3(3): add %r13,%rdx
68b6(4): mov %rdx,0x0(%rsi,%rax,8)
68ba(7): mov $0xffffffff,0x0(%rcx,%rax,4)
68c1(4): add $0x1,%rax
68c5(3): cmp %r11,%rax
68c8(2): jnz 0xffffffdf(%rip)
68ca(4): mov 0x58(%r14),%rbx
68ce(3): sub %rbp,%r11
68d1(3): add %r11,%rbx
68d4(4): cmp 0x60(%r14),%r13
68d8(4): mov %rbx,0x58(%r14)
68dc(2): jnl 0x6(%rip)
68de(4): add %r11,0x68(%r14)
68e2(4): cmp %rbx,0x40(%r14)
68e6(5): mov 0x8(%rsp),%r15
68eb(5): cmovng 0x40(%r14),%rbx
68f0(3): add %rbp,%r13
68f3(5): jmp 0xfffffa9d(%rip)
68f8(8): lea 0x0(,%rax,8),%rdi
6900(5): mov %rcx,0x18(%rsp)
6905(5): mov %r11,0x10(%rsp)
690a(5): call 0xffffb1b6(%rip)
690f(3): test %rax,%rax
6912(4): mov %rax,0x18(%r14)
6916(5): mov 0x10(%rsp),%r11
691b(5): mov 0x18(%rsp),%rcx
6920(6): jnz 0xffffff20(%rip)
6926(5): mov $0xc,%eax
692b(5): jmp 0xfffffa74(%rip)
6930(5): lea 0x50(%rsp),%rcx
6935(5): jmp 0xfffffe16(%rip)
693a(5): call 0xffffb056(%rip)
693f(4): mov 0x18(%r14),%rdx
6943(4): mov %r13,0x0(%rdx,%r15,8)
6947(5): jmp 0xfffffe77(%rip)
694c(4): movzx 0x0(%rdx,%rax,1),%eax
6950(5): jmp 0xfffffe55(%rip)

"extend_buffers" :
6960(1): push %rbp
6961(1): push %rbx
6962(a): mov $0x1152921504606846974,%rdx
696c(4): sub $0x8,%rsp
6970(4): mov 0x40(%rdi),%rax
6974(3): cmp %rdx,%rax
6977(6): jnbe 0x111(%rip)
697d(4): mov 0x58(%rdi),%rdx
6981(3): add %rax,%rax
6984(3): movsxd %esi,%rsi
6987(3): mov %rdi,%rbx
698a(3): cmp %rdx,%rax
698d(4): cmovnl %rdx,%rax
6991(3): cmp %rsi,%rax
6994(4): cmovnl %rax,%rsi
6998(5): call 0xfffff438(%rip)
699d(2): test %eax,%eax
699f(2): mov %eax,%ebp
69a1(6): jnz 0xbc(%rip)
69a7(7): mov 0xb8(%rbx),%rdi
69ae(3): test %rdi,%rdi
69b1(2): jz 0x23(%rip)
69b3(4): mov 0x40(%rbx),%rax
69b7(8): lea 0x8(,%rax,8),%rsi
69bf(5): call 0xffffb171(%rip)
69c4(3): test %rax,%rax
69c7(6): jz 0xc1(%rip)
69cd(7): mov %rax,0xb8(%rbx)
69d4(7): cmp $0x0,0x88(%rbx)
69db(6): mov 0x90(%rbx),%eax
69e1(2): jz 0x1f(%rip)
69e3(3): cmp $0x1,%eax
69e6(3): mov %rbx,%rdi
69e9(6): jle 0xb7(%rip)
69ef(4): add $0x8,%rsp
69f3(1): pop %rbx
69f4(1): pop %rbp
69f5(5): jmp 0xfffff94b(%rip)
69fa(6): nop 0x0(%rax,%rax,1)
6a00(3): cmp $0x1,%eax
6a03(2): jnle 0x6d(%rip)
6a05(4): mov 0x78(%rbx),%rcx
6a09(3): test %rcx,%rcx
6a0c(2): jz 0x51(%rip)
6a0e(4): mov 0x58(%rbx),%rsi
6a12(4): cmp %rsi,0x40(%rbx)
6a16(5): cmovng 0x40(%rbx),%rsi
6a1b(4): mov 0x30(%rbx),%rax
6a1f(3): cmp %rax,%rsi
6a22(2): jnle 0x12(%rip)
6a24(2): jmp 0x31(%rip)
6a26(a): nop 0x0(%rax,%rax,1)
6a30(4): mov 0x78(%rbx),%rcx
6a34(3): mov (%rbx),%rdx
6a37(3): add %rax,%rdx
6a3a(4): add 0x28(%rbx),%rdx
6a3e(3): movzx (%rdx),%edx
6a41(4): movzx 0x0(%rcx,%rdx,1),%ecx
6a45(4): mov 0x8(%rbx),%rdx
6a49(3): mov %cl,0x0(%rdx,%rax,1)
6a4c(4): add $0x1,%rax
6a50(3): cmp %rax,%rsi
6a53(2): jnz 0xffffffdd(%rip)
6a55(4): mov %rax,0x30(%rbx)
6a59(4): mov %rax,0x38(%rbx)
6a5d(4): add $0x8,%rsp
6a61(2): mov %ebp,%eax
6a63(1): pop %rbx
6a64(1): pop %rbp
6a65(1): ret near (%rsp)
6a66(a): nop 0x0(%rax,%rax,1)
6a70(3): mov %rbx,%rdi
6a73(5): call 0xfffff6fd(%rip)
6a78(4): add $0x8,%rsp
6a7c(2): mov %ebp,%eax
6a7e(1): pop %rbx
6a7f(1): pop %rbp
6a80(1): ret near (%rsp)
6a81(7): nop 0x0(%rax)
6a88(5): mov $0xc,%ebp
6a8d(4): add $0x8,%rsp
6a91(2): mov %ebp,%eax
6a93(1): pop %rbx
6a94(1): pop %rbp
6a95(1): ret near (%rsp)
6a96(a): nop 0x0(%rax,%rax,1)
6aa0(5): call 0xfffff660(%rip)
6aa5(4): add $0x8,%rsp
6aa9(2): mov %ebp,%eax
6aab(1): pop %rbx
6aac(1): pop %rbp
6aad(1): ret near (%rsp)

"clean_state_log_if_needed" :
6ab0(2): push %r12
6ab2(1): push %rbp
6ab3(3): mov %rsi,%rbp
6ab6(1): push %rbx
6ab7(4): mov 0x40(%rdi),%rax
6abb(3): mov %rdi,%rbx
6abe(7): mov 0xc0(%rdi),%r12
6ac5(3): cmp %rsi,%rax
6ac8(2): jnle 0x28(%rip)
6aca(4): cmp 0x58(%rdi),%rax
6ace(2): jnl 0x22(%rip)
6ad0(3): lea 0x1(%rbp),%esi
6ad3(3): mov %rbx,%rdi
6ad6(5): call 0xfffffe8a(%rip)
6adb(2): test %eax,%eax
6add(2): jnz 0x9(%rip)
6adf(3): cmp %rbp,%r12
6ae2(2): jl 0x2e(%rip)
6ae4(2): xor %eax,%eax
6ae6(1): pop %rbx
6ae7(1): pop %rbp
6ae8(2): pop %r12
6aea(1): ret near (%rsp)
6aeb(5): nop 0x0(%rax,%rax,1)
6af0(4): mov 0x30(%rbx),%rax
6af4(3): cmp %rbp,%rax
6af7(2): jnle 0xffffffe8(%rip)
6af9(4): cmp 0x58(%rbx),%rax
6afd(2): jnl 0xffffffe2(%rip)
6aff(3): lea 0x1(%rbp),%esi
6b02(3): mov %rbx,%rdi
6b05(5): call 0xfffffe5b(%rip)
6b0a(2): test %eax,%eax
6b0c(2): jz 0xffffffd3(%rip)
6b0e(2): jmp 0xffffffd8(%rip)
6b10(7): mov 0xb8(%rbx),%rax
6b17(3): mov %rbp,%rdx
6b1a(2): xor %esi,%esi
6b1c(3): sub %r12,%rdx
6b1f(4): shl/sal $0x3,%rdx
6b23(5): lea 0x8(%rax,%r12,8),%rdi
6b28(5): call 0xffffaee8(%rip)
6b2d(7): mov %rbp,0xc0(%rbx)
6b34(2): jmp 0xffffffb0(%rip)

"free_charset" :
6b40(1): push %rbx
6b41(3): mov %rdi,%rbx
6b44(3): mov (%rdi),%rdi
6b47(5): call 0xffffad39(%rip)
6b4c(4): mov 0x8(%rbx),%rdi
6b50(5): call 0xffffad30(%rip)
6b55(4): mov 0x10(%rbx),%rdi
6b59(5): call 0xffffad27(%rip)
6b5e(4): mov 0x18(%rbx),%rdi
6b62(5): call 0xffffad1e(%rip)
6b67(3): mov %rbx,%rdi
6b6a(1): pop %rbx
6b6b(5): jmp 0xffffad15(%rip)

"free_token" :
6b70(3): mov 0x8(%rdi),%eax
6b73(5): and $0x400ff,%eax
6b78(3): cmp $0x6,%eax
6b7b(2): jz 0x15(%rip)
6b7d(3): cmp $0x3,%eax
6b80(2): jz 0x8(%rip)
6b82(2): REP ret near (%rsp)
6b84(4): nop 0x0(%rax)
6b88(3): mov (%rdi),%rdi
6b8b(5): jmp 0xffffacf5(%rip)
6b90(3): mov (%rdi),%rdi
6b93(2): jmp 0xffffffad(%rip)

"free_tree" :
6ba0(4): lea 0x28(%rsi),%rdi
6ba4(4): sub $0x8,%rsp
6ba8(5): call 0xffffffc8(%rip)
6bad(2): xor %eax,%eax
6baf(4): add $0x8,%rsp
6bb3(1): ret near (%rsp)

"re_dfa_add_node" :
6bc0(2): push %r15
6bc2(2): push %r14
6bc4(3): mov %rsi,%r14
6bc7(2): push %r13
6bc9(2): push %r12
6bcb(1): push %rbp
6bcc(1): push %rbx
6bcd(3): mov %rdi,%rbx
6bd0(4): sub $0x18,%rsp
6bd4(4): mov 0x10(%rdi),%rsi
6bd8(4): mov 0x8(%rdi),%rbp
6bdc(3): cmp %rbp,%rsi
6bdf(6): jnb 0xb1(%rip)
6be5(4): mov 0x18(%rdi),%r12
6be9(4): mov 0x28(%rdi),%rbp
6bed(3): mov %rsi,%rax
6bf0(2): mov %edx,%ecx
6bf2(4): shl/sal $0x4,%rax
6bf6(3): add (%rbx),%rax
6bf9(6): and $0xfffc00ff,%ecx
6bff(4): mov %rdx,0x8(%rax)
6c03(3): mov %ecx,0x8(%rax)
6c06(2): xor %ecx,%ecx
6c08(3): cmp $0x6,%dl
6c0b(3): mov %r14,(%rax)
6c0e(3): setz %cl
6c11(3): cmp $0x5,%dl
6c14(2): jnz 0xe(%rip)
6c16(2): xor %ecx,%ecx
6c18(7): cmp $0x1,0xb4(%rbx)
6c1f(3): setnle %cl
6c22(4): movzx 0xa(%rax),%edx
6c26(3): shl/sal $0x4,%ecx
6c29(4): pxor %xmm0,%xmm0
6c2d(3): and $0xef,%edx
6c30(2): or %ecx,%edx
6c32(3): mov %dl,0xa(%rax)
6c35(8): mov $0xffffffff,0x0(%r12,%rsi,8)
6c3d(4): mov 0x10(%rbx),%rax
6c41(4): lea 0x0(%rax,%rax,2),%rax
6c45(5): lea 0x0(%rbp,%rax,8),%rax
6c4a(3): movups %xmm0,(%rax)
6c4d(8): mov $0x0,0x10(%rax)
6c55(4): mov 0x10(%rbx),%rax
6c59(4): lea 0x0(%rax,%rax,2),%rdx
6c5d(4): mov 0x30(%rbx),%rax
6c61(4): lea 0x0(%rax,%rdx,8),%rax
6c65(3): movups %xmm0,(%rax)
6c68(8): mov $0x0,0x10(%rax)
6c70(4): mov 0x10(%rbx),%rax
6c74(4): lea 0x1(%rax),%rdx
6c78(4): mov %rdx,0x10(%rbx)
6c7c(4): add $0x18,%rsp
6c80(1): pop %rbx
6c81(1): pop %rbp
6c82(2): pop %r12
6c84(2): pop %r13
6c86(2): pop %r14
6c88(2): pop %r15
6c8a(1): ret near (%rsp)
6c8b(5): nop 0x0(%rax,%rax,1)
6c90(5): lea 0x0(%rbp,%rbp,1),%r13
6c95(a): mov $0x768614336404564650,%rax
6c9f(3): cmp %rax,%r13
6ca2(6): jnbe 0xe0(%rip)
6ca8(3): mov (%rdi),%rdi
6cab(3): mov %rbp,%rsi
6cae(5): mov %rdx,0x8(%rsp)
6cb3(4): shl/sal $0x5,%rsi
6cb7(5): call 0xffffae79(%rip)
6cbc(3): test %rax,%rax
6cbf(6): jz 0xc3(%rip)
6cc5(3): mov %rbp,%r15
6cc8(4): mov 0x18(%rbx),%rdi
6ccc(3): mov %rax,(%rbx)
6ccf(4): shl/sal $0x4,%r15
6cd3(3): mov %r15,%rsi
6cd6(5): call 0xffffae5a(%rip)
6cdb(4): mov 0x20(%rbx),%rdi
6cdf(3): mov %r15,%rsi
6ce2(5): lea 0x0(%r13,%rbp,4),%r15
6ce7(3): mov %rax,%r12
6cea(4): shl/sal $0x3,%r15
6cee(5): call 0xffffae42(%rip)
6cf3(4): mov 0x28(%rbx),%rdi
6cf7(3): mov %r15,%rsi
6cfa(4): mov %rax,(%rsp)
6cfe(5): call 0xffffae32(%rip)
6d03(4): mov 0x30(%rbx),%rdi
6d07(3): mov %r15,%rsi
6d0a(3): mov %rax,%rbp
6d0d(5): call 0xffffae23(%rip)
6d12(3): test %r12,%r12
6d15(4): mov (%rsp),%rcx
6d19(2): jz 0x37(%rip)
6d1b(3): test %rcx,%rcx
6d1e(2): jz 0x32(%rip)
6d20(3): test %rbp,%rbp
6d23(2): jz 0x2d(%rip)
6d25(3): test %rax,%rax
6d28(5): mov 0x8(%rsp),%rdx
6d2d(2): jz 0x23(%rip)
6d2f(4): mov %r12,0x18(%rbx)
6d33(4): mov %rcx,0x20(%rbx)
6d37(4): mov %rbp,0x28(%rbx)
6d3b(4): mov %rax,0x30(%rbx)
6d3f(4): mov %r13,0x8(%rbx)
6d43(4): mov 0x10(%rbx),%rsi
6d47(5): jmp 0xfffffea6(%rip)
6d4c(4): nop 0x0(%rax)
6d50(3): mov %r12,%rdi
6d53(5): mov %rax,0x8(%rsp)
6d58(4): mov %rcx,(%rsp)
6d5c(5): call 0xffffab24(%rip)
6d61(4): mov (%rsp),%rcx
6d65(3): mov %rcx,%rdi
6d68(5): call 0xffffab18(%rip)
6d6d(3): mov %rbp,%rdi
6d70(5): call 0xffffab10(%rip)
6d75(5): mov 0x8(%rsp),%rax
6d7a(3): mov %rax,%rdi
6d7d(5): call 0xffffab03(%rip)
6d82(7): mov $0xffffffff,%rax
6d89(5): jmp 0xfffffef3(%rip)

"duplicate_node" :
6d90(2): push %r13
6d92(2): push %r12
6d94(3): mov %rsi,%r13
6d97(1): push %rbp
6d98(1): push %rbx
6d99(4): shl/sal $0x4,%r13
6d9d(3): mov %rsi,%rbp
6da0(3): mov %edx,%r12d
6da3(3): mov %rdi,%rbx
6da6(4): sub $0x8,%rsp
6daa(3): mov (%rdi),%rax
6dad(4): mov 0x0(%rax,%r13,1),%rsi
6db1(5): mov 0x8(%rax,%r13,1),%rdx
6db6(5): call 0xfffffe0a(%rip)
6dbb(4): cmp $0xffffffff,%rax
6dbf(2): jz 0x65(%rip)
6dc1(3): mov %r12d,%edi
6dc4(3): mov (%rbx),%r8
6dc7(3): mov %rax,%rsi
6dca(5): and $0x3ff,%di
6dcf(4): shl/sal $0x4,%rsi
6dd3(2): mov %edi,%ecx
6dd5(6): and $0x3ff,%ecx
6ddb(3): add %r8,%rsi
6dde(3): shl/sal $0x8,%ecx
6de1(2): mov %ecx,%edx
6de3(3): mov 0x8(%rsi),%ecx
6de6(6): and $0xfffc00ff,%ecx
6dec(2): or %edx,%ecx
6dee(3): mov %ecx,0x8(%rsi)
6df1(5): mov 0x8(%r8,%r13,1),%edx
6df6(6): and $0xfffc00ff,%ecx
6dfc(3): shr $0x8,%edx
6dff(2): or %edi,%edx
6e01(6): and $0x3ff,%edx
6e07(3): shl/sal $0x8,%edx
6e0a(2): or %ecx,%edx
6e0c(2): mov %edx,%ecx
6e0e(3): mov %edx,0x8(%rsi)
6e11(3): shr $0x10,%ecx
6e14(2): mov %ecx,%edx
6e16(3): or $0x4,%edx
6e19(3): mov %dl,0xa(%rsi)
6e1c(4): mov 0x20(%rbx),%rdx
6e20(4): mov %rbp,0x0(%rdx,%rax,8)
6e24(4): add $0x8,%rsp
6e28(1): pop %rbx
6e29(1): pop %rbp
6e2a(2): pop %r12
6e2c(2): pop %r13
6e2e(1): ret near (%rsp)

"duplicate_node_closure" :
6e30(2): push %r15
6e32(2): push %r14
6e34(3): mov %rsi,%r9
6e37(2): push %r13
6e39(2): push %r12
6e3b(3): mov %rdi,%r14
6e3e(1): push %rbp
6e3f(1): push %rbx
6e40(3): mov %rdx,%r13
6e43(3): mov %r8d,%ebp
6e46(4): sub $0x18,%rsp
6e4a(5): mov %rcx,0x8(%rsp)
6e4f(3): mov (%r14),%r8
6e52(3): mov %r9,%rax
6e55(4): mov 0x28(%r14),%rdi
6e59(4): shl/sal $0x4,%rax
6e5d(3): mov %r13,%r12
6e60(3): add %r8,%rax
6e63(4): cmp $0x4,0x8(%rax)
6e67(6): jz 0x1b9(%rip)
6e6d(4): lea 0x0(%r9,%r9,2),%r12
6e71(4): shl/sal $0x3,%r12
6e75(4): lea 0x0(%rdi,%r12,1),%rsi
6e79(4): mov 0x8(%rsi),%rcx
6e7d(3): test %rcx,%rcx
6e80(6): jz 0x1f9(%rip)
6e86(5): lea 0x0(%r13,%r13,2),%rbx
6e8b(4): mov 0x10(%rsi),%rsi
6e8f(4): shl/sal $0x3,%rbx
6e93(3): add %rbx,%rdi
6e96(4): cmp $0x1,%rcx
6e9a(3): mov (%rsi),%r15
6e9d(8): mov $0x0,0x8(%rdi)
6ea5(6): jz 0x11b(%rip)
6eab(4): mov 0x10(%r14),%rdx
6eaf(4): lea 0xffffffff(%rdx),%rsi
6eb3(3): mov %rsi,%rax
6eb6(4): shl/sal $0x4,%rax
6eba(3): add %r8,%rax
6ebd(4): test $0x4,0xa(%rax)
6ec1(6): jz 0xaf(%rip)
6ec7(3): test %rsi,%rsi
6eca(6): jle 0xa6(%rip)
6ed0(4): shl/sal $0x4,%rdx
6ed4(3): sub %rax,%r8
6ed7(4): mov 0x20(%r14),%rcx
6edb(5): lea 0xffffffe0(%r8,%rdx,1),%r8
6ee0(2): jmp 0x1a(%rip)
6ee2(6): nop 0x0(%rax,%rax,1)
6ee8(3): add %r8,%rax
6eeb(4): sub $0x1,%rsi
6eef(4): test $0x4,0xa(%rax)
6ef3(2): jz 0x7d(%rip)
6ef5(3): test %rsi,%rsi
6ef8(2): jle 0x78(%rip)
6efa(4): cmp %r15,0x0(%rcx,%rsi,8)
6efe(2): jnz 0xffffffea(%rip)
6f00(3): mov 0x8(%rax),%edx
6f03(3): shr $0x8,%edx
6f06(6): and $0x3ff,%edx
6f0c(2): cmp %edx,%ebp
6f0e(2): jnz 0xffffffda(%rip)
6f10(5): call 0xffffefd0(%rip)
6f15(2): test %al,%al
6f17(2): jz 0x44(%rip)
6f19(4): mov 0x28(%r14),%rax
6f1d(2): mov %ebp,%edx
6f1f(3): mov %r14,%rdi
6f22(5): mov 0x10(%rax,%r12,1),%rax
6f27(4): mov 0x8(%rax),%r9
6f2b(3): mov %r9,%rsi
6f2e(4): mov %r9,(%rsp)
6f32(5): call 0xfffffe5e(%rip)
6f37(4): cmp $0xffffffff,%rax
6f3b(3): mov %rax,%r13
6f3e(2): jz 0x1d(%rip)
6f40(4): add 0x28(%r14),%rbx
6f44(3): mov %r13,%rsi
6f47(3): mov %rbx,%rdi
6f4a(5): call 0xffffef96(%rip)
6f4f(2): test %al,%al
6f51(4): mov (%rsp),%r9
6f55(6): jnz 0xfffffefa(%rip)
6f5b(5): mov $0xc,%eax
6f60(4): add $0x18,%rsp
6f64(1): pop %rbx
6f65(1): pop %rbp
6f66(2): pop %r12
6f68(2): pop %r13
6f6a(2): pop %r14
6f6c(2): pop %r15
6f6e(1): ret near (%rsp)
6f6f(1): nop 
6f70(2): mov %ebp,%edx
6f72(3): mov %r15,%rsi
6f75(3): mov %r14,%rdi
6f78(5): call 0xfffffe18(%rip)
6f7d(4): cmp $0xffffffff,%rax
6f81(3): mov %rax,%r13
6f84(2): jz 0xffffffd7(%rip)
6f86(4): mov 0x28(%r14),%rdi
6f8a(3): mov %r13,%rsi
6f8d(3): add %rbx,%rdi
6f90(5): call 0xffffef50(%rip)
6f95(2): test %al,%al
6f97(2): jz 0xffffffc4(%rip)
6f99(5): mov 0x8(%rsp),%rcx
6f9e(3): mov %ebp,%r8d
6fa1(3): mov %r13,%rdx
6fa4(3): mov %r15,%rsi
6fa7(3): mov %r14,%rdi
6faa(5): call 0xfffffe86(%rip)
6faf(2): test %eax,%eax
6fb1(6): jz 0xffffff68(%rip)
6fb7(2): jmp 0xffffffa9(%rip)
6fb9(7): nop 0x0(%rax)
6fc0(5): cmp 0x8(%rsp),%r9
6fc5(2): jnz 0xb(%rip)
6fc7(3): cmp %r13,%r9
6fca(6): jnz 0xc2(%rip)
6fd0(3): mov 0x8(%rax),%eax
6fd3(3): mov %r15,%rsi
6fd6(3): mov %r14,%rdi
6fd9(3): shr $0x8,%eax
6fdc(5): and $0x3ff,%eax
6fe1(2): or %eax,%ebp
6fe3(2): mov %ebp,%edx
6fe5(5): call 0xfffffdab(%rip)
6fea(4): cmp $0xffffffff,%rax
6fee(3): mov %rax,%r13
6ff1(6): jz 0xffffff6a(%rip)
6ff7(4): add 0x28(%r14),%rbx
6ffb(3): mov %rax,%rsi
6ffe(3): mov %rbx,%rdi
7001(5): call 0xffffeedf(%rip)
7006(2): test %al,%al
7008(6): jz 0xffffff53(%rip)
700e(3): mov %r15,%r9
7011(5): jmp 0xfffffe3e(%rip)
7016(a): nop 0x0(%rax,%rax,1)
7020(4): mov 0x18(%r14),%rax
7024(5): lea 0x0(%r13,%r13,2),%rbx
7029(8): lea 0x0(,%r9,8),%r15
7031(2): mov %ebp,%edx
7033(4): shl/sal $0x3,%rbx
7037(4): mov 0x0(%rax,%r9,8),%r9
703b(9): mov $0x0,0x8(%rdi,%rbx,1)
7044(3): mov %r14,%rdi
7047(3): mov %r9,%rsi
704a(4): mov %r9,(%rsp)
704e(5): call 0xfffffd42(%rip)
7053(4): cmp $0xffffffff,%rax
7057(3): mov %rax,%r13
705a(4): mov (%rsp),%r9
705e(6): jz 0xfffffefd(%rip)
7064(4): mov 0x18(%r14),%rax
7068(4): mov %r9,(%rsp)
706c(4): mov 0x0(%rax,%r15,1),%rcx
7070(4): mov %rcx,0x0(%rax,%r12,8)
7074(5): jmp 0xfffffecc(%rip)
7079(4): mov 0x18(%r14),%rax
707d(4): mov 0x0(%rax,%r9,8),%rcx
7081(4): mov %rcx,0x0(%rax,%r13,8)
7085(2): xor %eax,%eax
7087(5): jmp 0xfffffed9(%rip)
708c(3): mov %r15,%rsi
708f(5): call 0xffffee51(%rip)
7094(2): mov %eax,%edx
7096(2): xor %eax,%eax
7098(2): test %dl,%dl
709a(6): jnz 0xfffffec6(%rip)
70a0(5): jmp 0xfffffebb(%rip)

"free_state" :
70b0(1): push %rbx
70b1(3): mov %rdi,%rbx
70b4(4): mov 0x30(%rdi),%rdi
70b8(5): call 0xffffa7c8(%rip)
70bd(4): mov 0x48(%rbx),%rdi
70c1(5): call 0xffffa7bf(%rip)
70c6(4): mov 0x50(%rbx),%rax
70ca(4): lea 0x8(%rbx),%rdx
70ce(3): cmp %rdx,%rax
70d1(2): jz 0x14(%rip)
70d3(4): mov 0x10(%rax),%rdi
70d7(5): call 0xffffa7a9(%rip)
70dc(4): mov 0x50(%rbx),%rdi
70e0(5): call 0xffffa7a0(%rip)
70e5(4): mov 0x18(%rbx),%rdi
70e9(5): call 0xffffa797(%rip)
70ee(4): mov 0x60(%rbx),%rdi
70f2(5): call 0xffffa78e(%rip)
70f7(4): mov 0x58(%rbx),%rdi
70fb(5): call 0xffffa785(%rip)
7100(3): mov %rbx,%rdi
7103(1): pop %rbx
7104(5): jmp 0xffffa77c(%rip)

"re_string_destruct" :
7110(1): push %rbx
7111(3): mov %rdi,%rbx
7114(4): mov 0x10(%rdi),%rdi
7118(5): call 0xffffa768(%rip)
711d(4): mov 0x18(%rbx),%rdi
7121(5): call 0xffffa75f(%rip)
7126(7): cmp $0x0,0x8b(%rbx)
712d(2): jnz 0xb(%rip)
712f(1): pop %rbx
7130(1): ret near (%rsp)
7131(7): nop 0x0(%rax)
7138(4): mov 0x8(%rbx),%rdi
713c(1): pop %rbx
713d(5): jmp 0xffffa743(%rip)

"free_dfa_content" :
7150(2): push %r14
7152(2): push %r13
7154(2): push %r12
7156(3): mov %rdi,%r12
7159(1): push %rbp
715a(1): push %rbx
715b(3): mov (%rdi),%rdi
715e(3): test %rdi,%rdi
7161(2): jz 0x2d(%rip)
7163(6): cmp $0x0,0x10(%r12)
7169(2): jz 0x25(%rip)
716b(2): xor %ebx,%ebx
716d(2): jmp 0x7(%rip)
716f(1): nop 
7170(4): mov (%r12),%rdi
7174(3): mov %rbx,%rax
7177(4): add $0x1,%rbx
717b(4): shl/sal $0x4,%rax
717f(3): add %rax,%rdi
7182(5): call 0xfffff9ee(%rip)
7187(5): cmp %rbx,0x10(%r12)
718c(2): jnbe 0xffffffe4(%rip)
718e(5): mov 0x18(%r12),%rdi
7193(5): call 0xffffa6ed(%rip)
7198(6): cmp $0x0,0x10(%r12)
719e(2): jz 0x55(%rip)
71a0(2): xor %ebx,%ebx
71a2(2): xor %ebp,%ebp
71a4(4): nop 0x0(%rax)
71a8(5): mov 0x30(%r12),%rax
71ad(3): test %rax,%rax
71b0(2): jz 0xc(%rip)
71b2(5): mov 0x10(%rax,%rbx,1),%rdi
71b7(5): call 0xffffa6c9(%rip)
71bc(5): mov 0x38(%r12),%rax
71c1(3): test %rax,%rax
71c4(2): jz 0xc(%rip)
71c6(5): mov 0x10(%rax,%rbx,1),%rdi
71cb(5): call 0xffffa6b5(%rip)
71d0(5): mov 0x28(%r12),%rax
71d5(3): test %rax,%rax
71d8(2): jz 0xc(%rip)
71da(5): mov 0x10(%rax,%rbx,1),%rdi
71df(5): call 0xffffa6a1(%rip)
71e4(4): add $0x1,%rbp
71e8(4): add $0x18,%rbx
71ec(5): cmp %rbp,0x10(%r12)
71f1(2): jnbe 0xffffffb7(%rip)
71f3(5): mov 0x28(%r12),%rdi
71f8(5): call 0xffffa688(%rip)
71fd(5): mov 0x30(%r12),%rdi
7202(5): call 0xffffa67e(%rip)
7207(5): mov 0x38(%r12),%rdi
720c(5): call 0xffffa674(%rip)
7211(4): mov (%r12),%rdi
7215(5): call 0xffffa66b(%rip)
721a(5): mov 0x40(%r12),%rdi
721f(3): test %rdi,%rdi
7222(2): jz 0x55(%rip)
7224(3): xor %r14d,%r14d
7227(3): xor %r13d,%r13d
722a(6): nop 0x0(%rax,%rax,1)
7230(4): lea 0x0(%rdi,%r14,1),%rbp
7234(5): cmp $0x0,0x0(%rbp)
7239(2): jle 0x1e(%rip)
723b(2): xor %ebx,%ebx
723d(3): nop (%rax)
7240(4): mov 0x10(%rbp),%rax
7244(4): mov 0x0(%rax,%rbx,8),%rdi
7248(4): add $0x1,%rbx
724c(5): call 0xfffffe64(%rip)
7251(4): cmp %rbx,0x0(%rbp)
7255(2): jnle 0xffffffeb(%rip)
7257(4): mov 0x10(%rbp),%rdi
725b(4): add $0x1,%r13
725f(4): add $0x18,%r14
7263(5): call 0xffffa61d(%rip)
7268(8): cmp %r13,0x88(%r12)
7270(5): mov 0x40(%r12),%rdi
7275(2): jnb 0xffffffbb(%rip)
7277(5): call 0xffffa609(%rip)
727c(5): mov 0x78(%r12),%rdi
7281(7): lea 0xe2b8(%rip),%rax
7288(3): cmp %rax,%rdi
728b(2): jz 0x7(%rip)
728d(5): call 0xffffa5f3(%rip)
7292(8): mov 0xe0(%r12),%rdi
729a(5): call 0xffffa5e6(%rip)
729f(1): pop %rbx
72a0(3): mov %r12,%rdi
72a3(1): pop %rbp
72a4(2): pop %r12
72a6(2): pop %r13
72a8(2): pop %r14
72aa(5): jmp 0xffffa5d6(%rip)

"match_ctx_clean" :
72b0(2): push %r14
72b2(2): push %r13
72b4(3): mov %rdi,%r14
72b7(2): push %r12
72b9(1): push %rbp
72ba(1): push %rbx
72bb(8): cmp $0x0,0xe8(%rdi)
72c3(6): jle 0x86(%rip)
72c9(3): xor %r13d,%r13d
72cc(4): nop 0x0(%rax)
72d0(7): mov 0xf8(%r14),%rax
72d7(4): mov 0x0(%rax,%r13,8),%r12
72db(6): cmp $0x0,0x20(%r12)
72e1(2): jle 0x2c(%rip)
72e3(2): xor %ebx,%ebx
72e5(3): nop (%rax)
72e8(5): mov 0x28(%r12),%rax
72ed(4): mov 0x0(%rax,%rbx,8),%rbp
72f1(4): add $0x1,%rbx
72f5(4): mov 0x20(%rbp),%rdi
72f9(5): call 0xffffa587(%rip)
72fe(3): mov %rbp,%rdi
7301(5): call 0xffffa57f(%rip)
7306(5): cmp %rbx,0x20(%r12)
730b(2): jnle 0xffffffdd(%rip)
730d(5): mov 0x28(%r12),%rdi
7312(5): call 0xffffa56e(%rip)
7317(5): mov 0x10(%r12),%rax
731c(3): test %rax,%rax
731f(2): jz 0x15(%rip)
7321(4): mov 0x10(%rax),%rdi
7325(5): call 0xffffa55b(%rip)
732a(5): mov 0x10(%r12),%rdi
732f(5): call 0xffffa551(%rip)
7334(3): mov %r12,%rdi
7337(4): add $0x1,%r13
733b(5): call 0xffffa545(%rip)
7340(7): cmp %r13,0xe8(%r14)
7347(2): jnle 0xffffff89(%rip)
7349(1): pop %rbx
734a(b): mov $0x0,0xe8(%r14)
7355(b): mov $0x0,0xc8(%r14)
7360(1): pop %rbp
7361(2): pop %r12
7363(2): pop %r13
7365(2): pop %r14
7367(1): ret near (%rsp)

"re_string_char_size_at.part.0" :
7370(4): mov 0x30(%rdi),%rcx
7374(4): lea 0x1(%rsi),%rax
7378(3): cmp %rcx,%rax
737b(2): jnl 0x3d(%rip)
737d(4): mov 0x10(%rdi),%rdx
7381(8): lea 0x0(,%rax,4),%rdi
7389(4): cmp $0xff,0x0(%rdx,%rax,4)
738d(2): jnz 0x2b(%rip)
738f(3): sub %rsi,%rcx
7392(5): lea 0xfffffffc(%rdx,%rdi,1),%rsi
7397(5): mov $0x2,%edx
739c(2): jmp 0xf(%rip)
739e(2): nop 
73a0(4): add $0x1,%rdx
73a4(5): cmp $0xff,0xfffffffc(%rsi,%rdx,4)
73a9(2): jnz 0x14(%rip)
73ab(3): cmp %rcx,%rdx
73ae(2): mov %edx,%eax
73b0(2): jnz 0xfffffff0(%rip)
73b2(2): REP ret near (%rsp)
73b4(4): nop 0x0(%rax)
73b8(5): mov $0x1,%eax
73bd(2): REP ret near (%rsp)

"re_node_set_compare.part.2" :
73c0(4): mov 0x8(%rdi),%rdx
73c4(2): xor %eax,%eax
73c6(4): cmp 0x8(%rsi),%rdx
73ca(2): jz 0x6(%rip)
73cc(2): REP ret near (%rsp)
73ce(2): nop 
73d0(4): lea 0xffffffff(%rdx),%rax
73d4(8): lea 0x0(,%rax,8),%rdx
73dc(2): jmp 0x21(%rip)
73de(2): nop 
73e0(4): mov 0x10(%rdi),%rcx
73e4(4): mov 0x0(%rcx,%rdx,1),%r8
73e8(4): mov 0x10(%rsi),%rcx
73ec(4): mov 0x0(%rcx,%rdx,1),%rcx
73f0(4): sub $0x8,%rdx
73f4(3): cmp %rcx,%r8
73f7(2): jnz 0x19(%rip)
73f9(4): sub $0x1,%rax
73fd(3): test %rax,%rax
7400(2): jns 0xffffffe0(%rip)
7402(5): mov $0x1,%eax
7407(1): ret near (%rsp)
7408(8): nop 0x0(%rax,%rax,1)
7410(2): xor %eax,%eax
7412(1): ret near (%rsp)

"re_node_set_contains.isra.3" :
7420(2): xor %eax,%eax
7422(3): test %rdi,%rdi
7425(2): jle 0x40(%rip)
7427(3): mov (%rsi),%r8
742a(4): sub $0x1,%rdi
742e(2): xor %esi,%esi
7430(3): cmp %rdi,%rsi
7433(2): jnb 0x2a(%rip)
7435(4): lea 0x0(%rsi,%rdi,1),%rcx
7439(3): shr $0x1,%rcx
743c(4): cmp 0x0(%r8,%rcx,8),%rdx
7440(2): jle 0x18(%rip)
7442(2): jmp 0x2e(%rip)
7444(4): nop 0x0(%rax)
7448(4): lea 0x0(%rsi,%rcx,1),%rax
744c(3): shr $0x1,%rax
744f(4): cmp %rdx,0x0(%r8,%rax,8)
7453(2): jl 0x2d(%rip)
7455(3): mov %rax,%rcx
7458(3): cmp %rcx,%rsi
745b(2): jb 0xffffffed(%rip)
745d(2): xor %eax,%eax
745f(4): cmp 0x0(%r8,%rsi,8),%rdx
7463(2): jz 0x2d(%rip)
7465(2): REP ret near (%rsp)
7467(9): nop 0x0(%rax,%rax,1)
7470(3): mov %rcx,%rax
7473(3): mov %rdi,%rcx
7476(a): nop 0x0(%rax,%rax,1)
7480(4): lea 0x1(%rax),%rsi
7484(3): mov %rcx,%rdi
7487(2): jmp 0xffffffa9(%rip)
7489(7): nop 0x0(%rax)
7490(4): lea 0x1(%rsi),%rax
7494(1): ret near (%rsp)

"check_arrival_expand_ecl_sub" :
74a0(2): push %r15
74a2(2): push %r14
74a4(4): lea 0x10(%rsi),%r14
74a8(2): push %r13
74aa(2): push %r12
74ac(3): mov %rcx,%r15
74af(1): push %rbp
74b0(1): push %rbx
74b1(3): mov %rdi,%r12
74b4(3): mov %rsi,%rbp
74b7(3): mov %rdx,%rbx
74ba(3): mov %r8d,%r13d
74bd(4): sub $0x8,%rsp
74c1(4): mov 0x8(%rbp),%rdi
74c5(3): mov %rbx,%rdx
74c8(3): mov %r14,%rsi
74cb(5): call 0xffffff55(%rip)
74d0(3): test %rax,%rax
74d3(2): jnz 0x6d(%rip)
74d5(3): mov %rbx,%rax
74d8(4): shl/sal $0x4,%rax
74dc(4): add (%r12),%rax
74e0(4): movzx 0x8(%rax),%edx
74e4(3): cmp %r13d,%edx
74e7(2): jnz 0x7(%rip)
74e9(3): cmp %r15,(%rax)
74ec(2): jz 0x3c(%rip)
74ee(3): mov %rbx,%rsi
74f1(3): mov %rbp,%rdi
74f4(5): call 0xffffe9ec(%rip)
74f9(2): test %al,%al
74fb(2): jz 0x5d(%rip)
74fd(4): lea 0x0(%rbx,%rbx,2),%rbx
7501(5): mov 0x28(%r12),%rdx
7506(4): shl/sal $0x3,%rbx
750a(3): add %rbx,%rdx
750d(4): mov 0x8(%rdx),%rax
7511(3): test %rax,%rax
7514(2): jz 0x2c(%rip)
7516(4): cmp $0x2,%rax
751a(4): mov 0x10(%rdx),%rdx
751e(2): jz 0x52(%rip)
7520(3): mov (%rdx),%rbx
7523(2): jmp 0xffffff9e(%rip)
7525(3): nop (%rax)
7528(4): cmp $0x9,%r13d
752c(2): jnz 0x14(%rip)
752e(3): mov %rbx,%rsi
7531(3): mov %rbp,%rdi
7534(5): call 0xffffe9ac(%rip)
7539(2): test %al,%al
753b(2): jz 0x1d(%rip)
753d(3): nop (%rax)
7540(2): xor %eax,%eax
7542(4): add $0x8,%rsp
7546(1): pop %rbx
7547(1): pop %rbp
7548(2): pop %r12
754a(2): pop %r13
754c(2): pop %r14
754e(2): pop %r15
7550(1): ret near (%rsp)
7551(7): nop 0x0(%rax)
7558(4): add $0x8,%rsp
755c(5): mov $0xc,%eax
7561(1): pop %rbx
7562(1): pop %rbp
7563(2): pop %r12
7565(2): pop %r13
7567(2): pop %r14
7569(2): pop %r15
756b(1): ret near (%rsp)
756c(4): nop 0x0(%rax)
7570(4): mov 0x8(%rdx),%rdx
7574(3): mov %r13d,%r8d
7577(3): mov %r15,%rcx
757a(3): mov %rbp,%rsi
757d(3): mov %r12,%rdi
7580(5): call 0xffffff20(%rip)
7585(2): test %eax,%eax
7587(2): jnz 0xffffffbb(%rip)
7589(5): mov 0x28(%r12),%rax
758e(5): mov 0x10(%rax,%rbx,1),%rdx
7593(2): jmp 0xffffff8d(%rip)

"re_node_set_remove_at.isra.4.part.5" :
75a0(3): mov (%rdi),%rax
75a3(3): cmp %rdx,%rax
75a6(2): jle 0x2c(%rip)
75a8(4): sub $0x1,%rax
75ac(3): cmp %rax,%rdx
75af(3): mov %rax,(%rdi)
75b2(2): jnl 0x20(%rip)
75b4(3): mov (%rsi),%rax
75b7(9): nop 0x0(%rax,%rax,1)
75c0(5): mov 0x8(%rax,%rdx,8),%rcx
75c5(4): mov %rcx,0x0(%rax,%rdx,8)
75c9(4): add $0x1,%rdx
75cd(3): cmp (%rdi),%rdx
75d0(2): jl 0xfffffff0(%rip)
75d2(2): REP ret near (%rsp)

"optimize_subexps" :
75e0(4): movzx 0x30(%rsi),%eax
75e4(2): cmp $0x4,%al
75e6(2): jz 0x5a(%rip)
75e8(2): cmp $0x11,%al
75ea(2): jz 0x6(%rip)
75ec(2): xor %eax,%eax
75ee(1): ret near (%rsp)
75ef(1): nop 
75f0(4): mov 0x8(%rsi),%rax
75f4(3): test %rax,%rax
75f7(2): jz 0xfffffff5(%rip)
75f9(4): cmp $0x11,0x30(%rax)
75fd(2): jnz 0xffffffef(%rip)
75ff(4): mov 0x28(%rax),%rcx
7603(4): mov 0x8(%rax),%rax
7607(3): test %rax,%rax
760a(4): mov %rax,0x8(%rsi)
760e(2): jz 0x5(%rip)
7610(3): mov %rsi,(%rax)
7613(7): mov 0xe0(%rdi),%rax
761a(4): mov 0x28(%rsi),%rdx
761e(4): cmp $0x3f,%rcx
7622(4): mov 0x0(%rax,%rdx,8),%rdx
7626(4): mov %rdx,0x0(%rax,%rcx,8)
762a(2): jnle 0xffffffc2(%rip)
762c(7): mov $0xfffffffe,%rax
7633(3): rol %cl,%rax
7636(7): and %rax,0xa0(%rdi)
763d(2): jmp 0xffffffaf(%rip)
763f(1): nop 
7640(7): mov 0xe0(%rdi),%rax
7647(3): test %rax,%rax
764a(2): jz 0xffffffa2(%rip)
764c(4): movsxd 0x28(%rsi),%rdx
7650(4): mov 0x0(%rax,%rdx,8),%rcx
7654(5): mov $0x1,%eax
7659(2): shl/sal %cl,%eax
765b(4): mov %rcx,0x28(%rsi)
765f(2): cwde 
7661(7): or %rax,0xa0(%rdi)
7668(2): xor %eax,%eax
766a(1): ret near (%rsp)

"calc_next" :
7670(4): movzx 0x30(%rsi),%eax
7674(4): mov 0x8(%rsi),%rdx
7678(2): cmp $0xb,%al
767a(2): jz 0x46(%rip)
767c(2): cmp $0x10,%al
767e(2): jz 0x2a(%rip)
7680(3): test %rdx,%rdx
7683(2): jz 0xa(%rip)
7685(4): mov 0x20(%rsi),%rax
7689(4): mov %rax,0x20(%rdx)
768d(4): mov 0x10(%rsi),%rax
7691(3): test %rax,%rax
7694(2): jz 0xa(%rip)
7696(4): mov 0x20(%rsi),%rdx
769a(4): mov %rdx,0x20(%rax)
769e(2): xor %eax,%eax
76a0(1): ret near (%rsp)
76a1(7): nop 0x0(%rax)
76a8(4): mov 0x10(%rsi),%rax
76ac(4): mov 0x18(%rax),%rcx
76b0(4): mov %rcx,0x20(%rdx)
76b4(4): mov 0x20(%rsi),%rdx
76b8(4): mov %rdx,0x20(%rax)
76bc(2): xor %eax,%eax
76be(1): ret near (%rsp)
76bf(1): nop 
76c0(4): mov %rsi,0x20(%rdx)
76c4(2): xor %eax,%eax
76c6(1): ret near (%rsp)

"check_dst_limits.isra.13" :
76d0(2): push %r15
76d2(2): push %r14
76d4(2): push %r13
76d6(2): push %r12
76d8(1): push %rbp
76d9(1): push %rbx
76da(2): xor %ebx,%ebx
76dc(4): sub $0x48,%rsp
76e0(7): mov 0x98(%rdi),%rax
76e7(7): mov 0xc8(%rdi),%r15
76ee(8): mov 0x80(%rsp),%r12
76f6(5): mov %rax,0x8(%rsp)
76fb(3): mov %r15,%rbp
76fe(3): cmp %rbp,%rbx
7701(2): jnl 0x5a(%rip)
7703(4): lea 0x0(%rbx,%rbp,1),%rax
7707(7): mov 0xd8(%rdi),%r13
770e(3): mov %rax,%r10
7711(4): shr $0x3f,%r10
7715(3): add %rax,%r10
7718(3): sar $0x1,%r10
771b(4): lea 0x0(%r10,%r10,4),%rax
771f(5): cmp 0x8(%r13,%rax,8),%r8
7724(2): jle 0x32(%rip)
7726(5): jmp 0x19a(%rip)
772b(5): nop 0x0(%rax,%rax,1)
7730(4): lea 0x0(%rbx,%r10,1),%r11
7734(3): mov %r11,%rax
7737(4): shr $0x3f,%rax
773b(3): add %r11,%rax
773e(3): sar $0x1,%rax
7741(4): lea 0x0(%rax,%rax,4),%r11
7745(3): mov %rax,%r14
7748(5): cmp %r8,0x8(%r13,%r11,8)
774d(6): jl 0x183(%rip)
7753(3): mov %rax,%r10
7756(3): cmp %r10,%rbx
7759(2): jl 0xffffffd7(%rip)
775b(3): cmp %rbx,%r15
775e(6): jle 0x1a2(%rip)
7764(7): mov 0xd8(%rdi),%r11
776b(4): lea 0x0(%rbx,%rbx,4),%rax
776f(4): lea 0x0(%r11,%rax,8),%rax
7773(4): cmp 0x8(%rax),%r8
7777(7): mov $0xffffffff,%rax
777e(4): cmovne %rax,%rbx
7782(3): mov %r15,%rax
7785(2): xor %ebp,%ebp
7787(3): cmp %rax,%rbp
778a(2): jnl 0x5a(%rip)
778c(5): lea 0x0(%rbp,%rax,1),%r11
7791(3): mov %r11,%r10
7794(4): shr $0x3f,%r10
7798(3): add %r11,%r10
779b(7): mov 0xd8(%rdi),%r11
77a2(3): sar $0x1,%r10
77a5(4): lea 0x0(%r10,%r10,4),%r13
77a9(5): cmp 0x8(%r11,%r13,8),%r12
77ae(2): jle 0x31(%rip)
77b0(5): jmp 0x130(%rip)
77b5(3): nop (%rax)
77b8(5): lea 0x0(%rbp,%r10,1),%r13
77bd(3): mov %r13,%rax
77c0(4): shr $0x3f,%rax
77c4(3): add %r13,%rax
77c7(3): sar $0x1,%rax
77ca(4): lea 0x0(%rax,%rax,4),%r13
77ce(3): mov %rax,%r14
77d1(5): cmp %r12,0x8(%r11,%r13,8)
77d6(6): jl 0x11a(%rip)
77dc(3): mov %rax,%r10
77df(3): cmp %r10,%rbp
77e2(2): jl 0xffffffd6(%rip)
77e4(3): cmp %rbp,%r15
77e7(6): jle 0x129(%rip)
77ed(7): mov 0xd8(%rdi),%r10
77f4(5): lea 0x0(%rbp,%rbp,4),%rax
77f9(4): lea 0x0(%r10,%rax,8),%rax
77fd(4): cmp 0x8(%rax),%r12
7801(7): mov $0xffffffff,%rax
7808(4): cmovne %rax,%rbp
780c(4): cmp $0x0,(%rsi)
7810(6): jle 0x122(%rip)
7816(5): mov %rbp,0x30(%rsp)
781b(5): mov %r9,0x20(%rsp)
7820(3): mov %rdi,%r13
7823(5): mov %r8,0x18(%rsp)
7828(5): mov %rcx,0x10(%rsp)
782d(3): xor %r14d,%r14d
7830(5): mov %rsi,0x38(%rsp)
7835(5): mov %rbx,0x28(%rsp)
783a(3): mov %rdx,%rbp
783d(3): mov %r12,%r15
7840(4): mov 0x0(%rbp),%rax
7844(7): mov 0xd8(%r13),%rdx
784b(3): mov %r13,%rdi
784e(5): mov 0x28(%rsp),%r9
7853(5): mov 0x18(%rsp),%r8
7858(5): mov 0x10(%rsp),%rcx
785d(4): mov 0x0(%rax,%r14,8),%rsi
7861(4): lea 0x0(%rsi,%rsi,4),%rax
7865(4): lea 0x0(%rdx,%rax,8),%rax
7869(5): mov 0x8(%rsp),%rdx
786e(3): mov (%rax),%rax
7871(4): shl/sal $0x4,%rax
7875(3): add (%rdx),%rax
7878(3): mov (%rax),%r12
787b(3): mov %r12,%rdx
787e(5): call 0xffffe412(%rip)
7883(2): mov %eax,%ebx
7885(4): mov 0x0(%rbp),%rax
7889(5): mov 0x30(%rsp),%r9
788e(5): mov 0x20(%rsp),%rcx
7893(3): mov %r15,%r8
7896(3): mov %r12,%rdx
7899(3): mov %r13,%rdi
789c(4): mov 0x0(%rax,%r14,8),%rsi
78a0(5): call 0xffffe3f0(%rip)
78a5(2): cmp %eax,%ebx
78a7(2): jz 0x79(%rip)
78a9(5): mov $0x1,%eax
78ae(4): add $0x48,%rsp
78b2(1): pop %rbx
78b3(1): pop %rbp
78b4(2): pop %r12
78b6(2): pop %r13
78b8(2): pop %r14
78ba(2): pop %r15
78bc(1): ret near (%rsp)
78bd(3): nop (%rax)
78c0(3): mov %r10,%r14
78c3(3): mov %rbp,%r10
78c6(a): nop 0x0(%rax,%rax,1)
78d0(4): lea 0x1(%r14),%rbx
78d4(3): mov %r10,%rbp
78d7(5): jmp 0xfffffe27(%rip)
78dc(4): nop 0x0(%rax)
78e0(3): mov %r10,%r14
78e3(3): mov %rax,%r10
78e6(a): nop 0x0(%rax,%rax,1)
78f0(4): lea 0x1(%r14),%rbp
78f4(3): mov %r10,%rax
78f7(5): jmp 0xfffffe90(%rip)
78fc(4): nop 0x0(%rax)
7900(7): mov $0xffffffff,%rbx
7907(5): jmp 0xfffffe7b(%rip)
790c(4): nop 0x0(%rax)
7910(7): mov $0xffffffff,%rbp
7917(5): jmp 0xfffffef5(%rip)
791c(4): nop 0x0(%rax)
7920(5): mov 0x38(%rsp),%rax
7925(4): add $0x1,%r14
7929(3): cmp (%rax),%r14
792c(6): jl 0xffffff14(%rip)
7932(2): xor %eax,%eax
7934(5): jmp 0xffffff7a(%rip)

"re_node_set_merge" :
7940(3): test %rsi,%rsi
7943(6): jz 0xf5(%rip)
7949(4): mov 0x8(%rsi),%rdx
794d(3): test %rdx,%rdx
7950(6): jz 0xe8(%rip)
7956(2): push %r12
7958(1): push %rbp
7959(3): mov %rsi,%r12
795c(1): push %rbx
795d(4): mov 0x8(%rdi),%rax
7961(3): mov %rdi,%rbx
7964(3): mov (%rdi),%rsi
7967(4): lea 0x0(%rax,%rdx,2),%rcx
796b(3): cmp %rcx,%rsi
796e(6): jl 0x14a(%rip)
7974(3): test %rax,%rax
7977(6): jz 0x179(%rip)
797d(4): lea 0x0(%rax,%rdx,2),%rbp
7981(4): sub $0x1,%rdx
7985(4): sub $0x1,%rax
7989(3): mov %rdx,%rdi
798c(3): not %rdi
798f(3): test %rdi,%rdi
7992(2): jns 0x3e(%rip)
7994(3): test %rax,%rax
7997(2): js 0x39(%rip)
7999(4): mov 0x10(%rbx),%rcx
799d(5): mov 0x10(%r12),%rsi
79a2(4): mov 0x0(%rsi,%rdx,8),%rsi
79a6(4): cmp %rsi,0x0(%rcx,%rax,8)
79aa(6): jz 0x96(%rip)
79b0(6): jnl 0xa8(%rip)
79b6(4): sub $0x1,%rdx
79ba(4): sub $0x1,%rbp
79be(3): mov %rdx,%rdi
79c1(4): mov %rsi,0x0(%rcx,%rbp,8)
79c5(3): not %rdi
79c8(3): test %rdi,%rdi
79cb(2): js 0xffffffc9(%rip)
79cd(3): nop (%rax)
79d0(3): test %rdx,%rdx
79d3(6): jns 0x95(%rip)
79d9(4): mov 0x8(%rbx),%rcx
79dd(5): mov 0x8(%r12),%rax
79e2(5): lea 0xffffffff(%rcx,%rax,2),%r8
79e7(3): mov %r8,%rdx
79ea(3): sub %rbp,%rdx
79ed(4): add $0x1,%rdx
79f1(2): jz 0x39(%rip)
79f3(4): mov 0x10(%rbx),%rdi
79f7(4): lea 0xffffffff(%rcx),%rax
79fb(3): add %rdx,%rcx
79fe(4): mov %rcx,0x8(%rbx)
7a02(6): nop 0x0(%rax,%rax,1)
7a08(4): mov 0x0(%rdi,%r8,8),%rsi
7a0c(4): mov 0x0(%rdi,%rax,8),%rcx
7a10(4): lea 0x0(%rax,%rdx,1),%r9
7a14(4): lea 0x0(%rdi,%r9,8),%r9
7a18(3): cmp %rcx,%rsi
7a1b(2): jle 0x75(%rip)
7a1d(4): sub $0x1,%r8
7a21(4): sub $0x1,%rdx
7a25(3): mov %rsi,(%r9)
7a28(2): jnz 0xffffffe0(%rip)
7a2a(2): xor %eax,%eax
7a2c(1): pop %rbx
7a2d(1): pop %rbp
7a2e(2): pop %r12
7a30(1): ret near (%rsp)
7a31(7): nop 0x0(%rax)
7a38(2): xor %eax,%eax
7a3a(1): ret near (%rsp)
7a3b(5): nop 0x0(%rax,%rax,1)
7a40(4): sub $0x1,%rdx
7a44(4): sub $0x1,%rax
7a48(3): mov %rdx,%rdi
7a4b(3): not %rdi
7a4e(5): jmp 0xffffff41(%rip)
7a53(5): nop 0x0(%rax,%rax,1)
7a58(4): sub $0x1,%rax
7a5c(5): jmp 0xffffff33(%rip)
7a61(7): nop 0x0(%rax)
7a68(4): mov 0x10(%rbx),%rax
7a6c(4): add $0x1,%rdx
7a70(5): mov 0x10(%r12),%rsi
7a75(3): sub %rdx,%rbp
7a78(4): shl/sal $0x3,%rdx
7a7c(4): lea 0x0(%rax,%rbp,8),%rdi
7a80(5): call 0xffffa010(%rip)
7a85(5): jmp 0xffffff54(%rip)
7a8a(6): nop 0x0(%rax,%rax,1)
7a90(4): sub $0x1,%rax
7a94(3): mov %rcx,(%r9)
7a97(6): jns 0xffffff71(%rip)
7a9d(4): lea 0x0(%rdi,%rbp,8),%rsi
7aa1(4): shl/sal $0x3,%rdx
7aa5(5): call 0xffff9feb(%rip)
7aaa(2): xor %eax,%eax
7aac(5): jmp 0xffffff80(%rip)
7ab1(7): nop 0x0(%rax)
7ab8(3): add %rsi,%rdx
7abb(4): mov 0x10(%rdi),%rdi
7abf(4): lea 0x0(%rdx,%rdx,1),%rbp
7ac3(4): shl/sal $0x4,%rdx
7ac7(3): mov %rdx,%rsi
7aca(5): call 0xffffa066(%rip)
7acf(3): test %rax,%rax
7ad2(2): jz 0x42(%rip)
7ad4(4): mov %rax,0x10(%rbx)
7ad8(3): mov %rbp,(%rbx)
7adb(4): mov 0x8(%rbx),%rax
7adf(5): mov 0x8(%r12),%rdx
7ae4(5): jmp 0xfffffe90(%rip)
7ae9(7): nop 0x0(%rax)
7af0(4): mov %rdx,0x8(%rbx)
7af4(5): mov 0x8(%r12),%rax
7af9(4): mov 0x10(%rbx),%rdi
7afd(5): mov 0x10(%r12),%rsi
7b02(8): lea 0x0(,%rax,8),%rdx
7b0a(5): call 0xffff9f86(%rip)
7b0f(5): jmp 0xffffff1b(%rip)
7b14(5): mov $0xc,%eax
7b19(5): jmp 0xffffff13(%rip)

"calc_eclosure_iter" :
7b20(2): push %r15
7b22(2): push %r14
7b24(3): mov %rsi,%r15
7b27(2): push %r13
7b29(2): push %r12
7b2b(1): push %rbp
7b2c(1): push %rbx
7b2d(4): lea 0x0(%rdx,%rdx,2),%rbx
7b31(3): mov %rdx,%rbp
7b34(4): sub $0x68,%rsp
7b38(4): mov 0x28(%rsi),%r12
7b3c(4): shl/sal $0x3,%rbx
7b40(9): mov $0x28,%rax
7b49(5): mov %rax,0x58(%rsp)
7b4e(2): xor %eax,%eax
7b50(5): mov %rdi,0x10(%rsp)
7b55(4): mov %ecx,0x1c(%rsp)
7b59(3): add %rbx,%r12
7b5c(5): mov 0x8(%r12),%rax
7b61(9): mov $0x0,0x28(%rsp)
7b6a(4): lea 0x1(%rax),%rdi
7b6e(5): mov %rdi,0x20(%rsp)
7b73(4): shl/sal $0x3,%rdi
7b77(5): call 0xffff9f49(%rip)
7b7c(3): test %rax,%rax
7b7f(5): mov %rax,0x30(%rsp)
7b84(6): jz 0x23c(%rip)
7b8a(4): mov 0x30(%r15),%rax
7b8e(3): mov (%r15),%rdx
7b91(3): mov %rbp,%r13
7b94(4): shl/sal $0x4,%r13
7b98(9): mov $0xffffffff,0x8(%rax,%rbx,1)
7ba1(4): lea 0x0(%rdx,%r13,1),%rax
7ba5(4): mov 0x8(%rax),%r8d
7ba9(7): test $0x3ff00,%r8d
7bb0(6): jnz 0x1a0(%rip)
7bb6(4): test $0x8,0x8(%rax)
7bba(6): jz 0xc6(%rip)
7bc0(4): mov 0x28(%r15),%rsi
7bc4(4): lea 0x0(%rsi,%rbx,1),%rax
7bc8(5): cmp $0x0,0x8(%rax)
7bcd(6): jle 0xb3(%rip)
7bd3(5): lea 0x20(%rsp),%rdx
7bd8(5): mov $0x0,0x1b(%rsp)
7bdd(3): xor %r14d,%r14d
7be0(5): lea 0x40(%rsp),%r12
7be5(5): mov %rdx,0x8(%rsp)
7bea(2): jmp 0x1c(%rip)
7bec(4): nop 0x0(%rax)
7bf0(4): mov 0x28(%r15),%rsi
7bf4(4): add $0x1,%r14
7bf8(4): lea 0x0(%rsi,%rbx,1),%rax
7bfc(4): cmp %r14,0x8(%rax)
7c00(6): jle 0x107(%rip)
7c06(4): mov 0x10(%rax),%rax
7c0a(4): mov 0x0(%rax,%r14,8),%rdx
7c0e(4): mov 0x30(%r15),%rax
7c12(4): lea 0x0(%rdx,%rdx,2),%r8
7c16(8): lea 0x0(,%r8,8),%r13
7c1e(3): add %r13,%rax
7c21(4): mov 0x8(%rax),%rcx
7c25(4): cmp $0xffffffff,%rcx
7c29(6): jz 0xc7(%rip)
7c2f(3): test %rcx,%rcx
7c32(6): jz 0x176(%rip)
7c38(4): movdqu (%rax),%xmm0
7c3c(5): movaps %xmm0,0x40(%rsp)
7c41(4): mov 0x10(%rax),%rax
7c45(5): mov %rax,0x50(%rsp)
7c4a(5): mov 0x8(%rsp),%rdi
7c4f(3): mov %r12,%rsi
7c52(5): call 0xfffffcee(%rip)
7c57(2): test %eax,%eax
7c59(2): jnz 0x6d(%rip)
7c5b(4): mov 0x30(%r15),%rax
7c5f(6): cmp $0x0,0x8(%rax,%r13,1)
7c65(2): jnz 0xffffff8b(%rip)
7c67(5): mov 0x50(%rsp),%rdi
7c6c(5): call 0xffff9c14(%rip)
7c71(5): mov $0x1,0x1b(%rsp)
7c76(5): jmp 0xffffff7a(%rip)
7c7b(5): nop 0x0(%rax,%rax,1)
7c80(5): lea 0x20(%rsp),%rdi
7c85(3): mov %rbp,%rsi
7c88(5): call 0xffffe258(%rip)
7c8d(2): test %al,%al
7c8f(6): jz 0x131(%rip)
7c95(4): mov 0x30(%r15),%rax
7c99(6): movdqa 0x20(%rsp),%xmm0
7c9f(4): movups %xmm0,0x0(%rax,%rbx,1)
7ca3(5): mov 0x30(%rsp),%rdx
7ca8(5): mov %rdx,0x10(%rax,%rbx,1)
7cad(5): mov 0x10(%rsp),%rbx
7cb2(5): mov 0x30(%rsp),%rax
7cb7(6): movdqa 0x20(%rsp),%xmm0
7cbd(3): movaps %xmm0,(%rbx)
7cc0(4): mov %rax,0x10(%rbx)
7cc4(2): xor %eax,%eax
7cc6(5): mov 0x58(%rsp),%rsi
7ccb(9): xor $0x28,%rsi
7cd4(6): jnz 0xf6(%rip)
7cda(4): add $0x68,%rsp
7cde(1): pop %rbx
7cdf(1): pop %rbp
7ce0(2): pop %r12
7ce2(2): pop %r13
7ce4(2): pop %r14
7ce6(2): pop %r15
7ce8(1): ret near (%rsp)
7ce9(7): nop 0x0(%rax)
7cf0(4): lea 0x0(%rsi,%rbx,1),%rax
7cf4(4): add $0x1,%r14
7cf8(5): mov $0x1,0x1b(%rsp)
7cfd(4): cmp %r14,0x8(%rax)
7d01(6): jnle 0xffffff05(%rip)
7d07(5): lea 0x20(%rsp),%rdi
7d0c(3): mov %rbp,%rsi
7d0f(5): call 0xffffe1d1(%rip)
7d14(2): test %al,%al
7d16(6): jz 0xaa(%rip)
7d1c(5): cmp $0x1,0x1c(%rsp)
7d21(4): mov 0x30(%r15),%rax
7d25(4): lea 0x0(%rax,%rbx,1),%rdx
7d29(6): jz 0xffffff70(%rip)
7d2f(5): cmp $0x0,0x1b(%rsp)
7d34(6): jz 0xffffff65(%rip)
7d3a(8): mov $0x0,0x8(%rdx)
7d42(5): jmp 0xffffff6b(%rip)
7d47(9): nop 0x0(%rax,%rax,1)
7d50(6): cmp $0x0,0x8(%r12)
7d56(6): jz 0xffffff2a(%rip)
7d5c(5): mov 0x10(%r12),%rcx
7d61(3): mov (%rcx),%rcx
7d64(4): shl/sal $0x4,%rcx
7d68(5): test $0x4,0xa(%rdx,%rcx,1)
7d6d(6): jnz 0xfffffe49(%rip)
7d73(4): shr $0x8,%r8d
7d77(3): mov %rbp,%rcx
7d7a(3): mov %rbp,%rdx
7d7d(7): and $0x3ff,%r8d
7d84(3): mov %rbp,%rsi
7d87(3): mov %r15,%rdi
7d8a(5): call 0xfffff0a6(%rip)
7d8f(2): test %eax,%eax
7d91(6): jnz 0xffffff35(%rip)
7d97(3): mov (%r15),%rax
7d9a(3): add %r13,%rax
7d9d(5): jmp 0xfffffe19(%rip)
7da2(6): nop 0x0(%rax,%rax,1)
7da8(3): mov %r15,%rsi
7dab(3): mov %r12,%rdi
7dae(5): call 0xfffffd72(%rip)
7db3(2): test %eax,%eax
7db5(6): jz 0xfffffe95(%rip)
7dbb(5): jmp 0xffffff0b(%rip)
7dc0(5): mov $0xc,%eax
7dc5(5): jmp 0xffffff01(%rip)
7dca(5): call 0xffff9bc6(%rip)

"check_arrival_expand_ecl" :
7dd0(2): push %r15
7dd2(2): push %r14
7dd4(3): mov %rdi,%r14
7dd7(2): push %r13
7dd9(2): push %r12
7ddb(3): mov %rsi,%r15
7dde(1): push %rbp
7ddf(1): push %rbx
7de0(3): mov %rdx,%rbp
7de3(2): mov %ecx,%ebx
7de5(4): sub $0x38,%rsp
7de9(4): mov 0x8(%rsi),%r12
7ded(9): mov $0x28,%rax
7df6(5): mov %rax,0x28(%rsp)
7dfb(2): xor %eax,%eax
7dfd(9): mov $0x0,0x18(%rsp)
7e06(8): lea 0x0(,%r12,8),%rdi
7e0e(5): mov %r12,0x10(%rsp)
7e13(5): call 0xffff9cad(%rip)
7e18(3): test %rax,%rax
7e1b(5): mov %rax,0x20(%rsp)
7e20(6): jz 0xfd(%rip)
7e26(3): test %r12,%r12
7e29(6): jle 0x92(%rip)
7e2f(5): lea 0x10(%rsp),%r12
7e34(3): xor %r13d,%r13d
7e37(9): nop 0x0(%rax,%rax,1)
7e40(4): mov 0x10(%r15),%rax
7e44(4): mov 0x0(%rax,%r13,8),%rdx
7e48(4): mov 0x30(%r14),%rax
7e4c(4): lea 0x0(%rdx,%rdx,2),%rcx
7e50(4): lea 0x0(%rax,%rcx,8),%rsi
7e54(4): mov 0x8(%rsi),%r8
7e58(3): test %r8,%r8
7e5b(6): jle 0x85(%rip)
7e61(4): mov 0x10(%rsi),%r10
7e65(3): mov (%r14),%r9
7e68(2): xor %ecx,%ecx
7e6a(2): jmp 0xf(%rip)
7e6c(4): nop 0x0(%rax)
7e70(4): add $0x1,%rcx
7e74(3): cmp %rcx,%r8
7e77(2): jz 0x69(%rip)
7e79(4): mov 0x0(%r10,%rcx,8),%rdi
7e7d(3): mov %rdi,%rax
7e80(4): shl/sal $0x4,%rax
7e84(3): add %r9,%rax
7e87(5): movzx 0x8(%rax),%r11d
7e8c(3): cmp %r11d,%ebx
7e8f(2): jnz 0xffffffe1(%rip)
7e91(3): cmp (%rax),%rbp
7e94(2): jnz 0xffffffdc(%rip)
7e96(4): cmp $0xffffffff,%rdi
7e9a(2): jz 0x46(%rip)
7e9c(3): mov %ebx,%r8d
7e9f(3): mov %rbp,%rcx
7ea2(3): mov %r12,%rsi
7ea5(3): mov %r14,%rdi
7ea8(5): call 0xfffff5f8(%rip)
7ead(2): test %eax,%eax
7eaf(2): jnz 0x3d(%rip)
7eb1(4): add $0x1,%r13
7eb5(4): cmp %r13,0x8(%r15)
7eb9(2): jnle 0xffffff87(%rip)
7ebb(4): mov 0x10(%r15),%rdi
7ebf(5): call 0xffff99c1(%rip)
7ec4(5): mov 0x20(%rsp),%rax
7ec9(6): movdqa 0x10(%rsp),%xmm0
7ecf(4): mov %rax,0x10(%r15)
7ed3(2): xor %eax,%eax
7ed5(4): movaps %xmm0,(%r15)
7ed9(2): jmp 0x25(%rip)
7edb(5): nop 0x0(%rax,%rax,1)
7ee0(3): mov %r12,%rdi
7ee3(5): call 0xfffffa5d(%rip)
7ee8(2): test %eax,%eax
7eea(2): jz 0xffffffc7(%rip)
7eec(5): mov 0x20(%rsp),%rdi
7ef1(4): mov %eax,0xc(%rsp)
7ef5(5): call 0xffff998b(%rip)
7efa(4): mov 0xc(%rsp),%eax
7efe(5): mov 0x28(%rsp),%rdx
7f03(9): xor $0x28,%rdx
7f0c(2): jnz 0x18(%rip)
7f0e(4): add $0x38,%rsp
7f12(1): pop %rbx
7f13(1): pop %rbp
7f14(2): pop %r12
7f16(2): pop %r13
7f18(2): pop %r14
7f1a(2): pop %r15
7f1c(1): ret near (%rsp)
7f1d(5): mov $0xc,%eax
7f22(2): jmp 0xffffffdc(%rip)
7f24(5): call 0xffff9a6c(%rip)

"re_node_set_add_intersect" :
7f30(4): mov 0x8(%rsi),%r9
7f34(2): xor %eax,%eax
7f36(3): test %r9,%r9
7f39(6): jz 0xbf(%rip)
7f3f(4): mov 0x8(%rdx),%r11
7f43(3): test %r11,%r11
7f46(6): jz 0xb2(%rip)
7f4c(2): push %r13
7f4e(2): push %r12
7f50(4): lea 0x0(%r9,%r11,1),%rax
7f54(1): push %rbp
7f55(1): push %rbx
7f56(3): mov %rdx,%r12
7f59(3): mov %rdi,%rbx
7f5c(3): mov %rsi,%rbp
7f5f(4): sub $0x8,%rsp
7f63(4): mov 0x8(%rdi),%rcx
7f67(3): mov (%rdi),%r13
7f6a(4): mov 0x10(%rdi),%rdi
7f6e(4): lea 0x0(%rax,%rcx,1),%rdx
7f72(3): cmp %r13,%rdx
7f75(6): jnle 0x12b(%rip)
7f7b(4): lea 0x0(%rcx,%r9,1),%rsi
7f7f(4): mov 0x10(%rbp),%r13
7f83(5): mov 0x10(%r12),%rdx
7f88(4): sub $0x1,%r9
7f8c(4): sub $0x1,%rcx
7f90(3): add %r11,%rsi
7f93(4): sub $0x1,%r11
7f97(5): mov 0x0(%r13,%r9,8),%rax
7f9c(4): mov 0x0(%rdx,%r11,8),%r8
7fa0(3): cmp %r8,%rax
7fa3(2): jz 0x13(%rip)
7fa5(2): jnl 0x5b(%rip)
7fa7(4): sub $0x1,%r11
7fab(2): js 0x65(%rip)
7fad(4): mov 0x0(%rdx,%r11,8),%r8
7fb1(3): cmp %r8,%rax
7fb4(2): jnz 0xfffffff1(%rip)
7fb6(3): test %rcx,%rcx
7fb9(2): jns 0x11(%rip)
7fbb(2): jmp 0x1d(%rip)
7fbd(3): nop (%rax)
7fc0(4): sub $0x1,%rcx
7fc4(4): cmp $0xffffffff,%rcx
7fc8(2): jz 0x10(%rip)
7fca(4): mov 0x0(%rdi,%rcx,8),%r10
7fce(3): cmp %r8,%r10
7fd1(2): jnle 0xffffffef(%rip)
7fd3(3): cmp %r8,%r10
7fd6(2): jz 0xa(%rip)
7fd8(4): sub $0x1,%rsi
7fdc(4): mov %r8,0x0(%rdi,%rsi,8)
7fe0(4): sub $0x1,%r9
7fe4(2): js 0x2c(%rip)
7fe6(4): sub $0x1,%r11
7fea(2): js 0x26(%rip)
7fec(5): mov 0x0(%r13,%r9,8),%rax
7ff1(2): jmp 0xffffffbc(%rip)
7ff3(5): nop 0x0(%rax,%rax,1)
7ff8(2): REP ret near (%rsp)
7ffa(6): nop 0x0(%rax,%rax,1)
8000(4): sub $0x1,%r9
8004(2): js 0xc(%rip)
8006(5): mov 0x0(%r13,%r9,8),%rax
800b(2): jmp 0xffffff95(%rip)
800d(3): nop (%rax)
8010(4): mov 0x8(%rbx),%rcx
8014(4): mov 0x8(%rbp),%rdx
8018(3): add %rcx,%rdx
801b(5): add 0x8(%r12),%rdx
8020(4): lea 0xffffffff(%rcx),%rax
8024(4): lea 0xffffffff(%rdx),%r9
8028(3): sub %rsi,%rdx
802b(3): add %rdx,%rcx
802e(3): test %rdx,%rdx
8031(4): mov %rcx,0x8(%rbx)
8035(2): jle 0x48(%rip)
8037(3): test %rax,%rax
803a(2): js 0x43(%rip)
803c(4): nop 0x0(%rax)
8040(4): mov 0x0(%rdi,%r9,8),%r8
8044(4): mov 0x0(%rdi,%rax,8),%rcx
8048(4): lea 0x0(%rax,%rdx,1),%r10
804c(4): lea 0x0(%rdi,%r10,8),%r10
8050(3): cmp %rcx,%r8
8053(2): jle 0x1d(%rip)
8055(4): sub $0x1,%r9
8059(4): sub $0x1,%rdx
805d(3): mov %r8,(%r10)
8060(2): jnz 0xffffffe0(%rip)
8062(2): xor %edx,%edx
8064(2): jmp 0x1d(%rip)
8066(a): nop 0x0(%rax,%rax,1)
8070(4): sub $0x1,%rax
8074(3): mov %rcx,(%r10)
8077(4): cmp $0xffffffff,%rax
807b(2): jnz 0xffffffc5(%rip)
807d(4): shl/sal $0x3,%rdx
8081(4): lea 0x0(%rdi,%rsi,8),%rsi
8085(5): call 0xffff9a0b(%rip)
808a(2): xor %eax,%eax
808c(4): add $0x8,%rsp
8090(1): pop %rbx
8091(1): pop %rbp
8092(2): pop %r12
8094(2): pop %r13
8096(1): ret near (%rsp)
8097(9): nop 0x0(%rax,%rax,1)
80a0(3): add %rax,%r13
80a3(8): lea 0x0(,%r13,8),%rsi
80ab(5): call 0xffff9a85(%rip)
80b0(3): test %rax,%rax
80b3(3): mov %rax,%rdi
80b6(2): jz 0x1b(%rip)
80b8(4): mov %rax,0x10(%rbx)
80bc(3): mov %r13,(%rbx)
80bf(4): mov 0x8(%rbx),%rcx
80c3(4): mov 0x8(%rbp),%r9
80c7(5): mov 0x8(%r12),%r11
80cc(5): jmp 0xfffffeaf(%rip)
80d1(5): mov $0xc,%eax
80d6(2): jmp 0xffffffb6(%rip)

"create_token_tree.isra.16" :
80e0(1): push %rbx
80e1(3): mov %rdi,%rbx
80e4(4): sub $0x20,%rsp
80e8(2): mov (%rsi),%eax
80ea(3): cmp $0xf,%eax
80ed(2): jz 0x7b(%rip)
80ef(3): movsxd %eax,%r9
80f2(4): lea 0x1(%rax),%r10d
80f6(3): mov (%rdi),%rdi
80f9(3): mov %r9,%rax
80fc(4): shl/sal $0x6,%rax
8100(4): add $0x8,%rax
8104(4): shl/sal $0x6,%r9
8108(3): mov %r10d,(%rsi)
810b(3): add %rdi,%rax
810e(4): lea 0x0(%rdi,%r9,1),%rsi
8112(8): mov $0x0,0x8(%rsi)
811a(4): mov %rdx,0x10(%rsi)
811e(4): lea 0x20(%rsi),%rdi
8122(4): mov %rcx,0x18(%rsi)
8126(5): movdqu (%r8),%xmm0
812b(4): movups %xmm0,0x30(%rsi)
812f(4): and $0xf3,0x1a(%rdi)
8133(3): test %rdx,%rdx
8136(8): mov $0x0,0x20(%rsi)
813e(8): mov $0x0,0x28(%rsi)
8146(8): mov $0xffffffff,0x40(%rsi)
814e(2): jz 0x5(%rip)
8150(3): mov %rax,(%rdx)
8153(3): test %rcx,%rcx
8156(2): jz 0x5(%rip)
8158(3): mov %rax,(%rcx)
815b(4): add $0x20,%rsp
815f(1): pop %rbx
8160(1): ret near (%rsp)
8161(7): nop 0x0(%rax)
8168(5): mov $0x3c8,%edi
816d(5): mov %r8,0x18(%rsp)
8172(5): mov %rcx,0x10(%rsp)
8177(5): mov %rdx,0x8(%rsp)
817c(4): mov %rsi,(%rsp)
8180(5): call 0xffff9940(%rip)
8185(3): test %rax,%rax
8188(3): mov %rax,%rdi
818b(2): jz 0x31(%rip)
818d(3): mov (%rbx),%rax
8190(6): mov $0x1,%r10d
8196(3): mov %rdi,(%rbx)
8199(3): xor %r9d,%r9d
819c(5): mov 0x18(%rsp),%r8
81a1(5): mov 0x10(%rsp),%rcx
81a6(5): mov 0x8(%rsp),%rdx
81ab(4): mov (%rsp),%rsi
81af(3): mov %rax,(%rdi)
81b2(5): mov $0x8,%eax
81b7(5): jmp 0xffffff4d(%rip)
81bc(2): xor %eax,%eax
81be(2): jmp 0xffffff9d(%rip)

"duplicate_tree" :
81c0(2): push %r14
81c2(2): push %r13
81c4(4): lea 0x70(%rsi),%r13
81c8(2): push %r12
81ca(1): push %rbp
81cb(7): lea 0x80(%rsi),%r12
81d2(1): push %rbx
81d3(3): mov %rdi,%rbx
81d6(4): sub $0x10,%rsp
81da(3): mov (%rdi),%rbp
81dd(9): mov $0x28,%rax
81e6(5): mov %rax,0x8(%rsp)
81eb(2): xor %eax,%eax
81ed(3): mov %rsp,%r14
81f0(4): lea 0x28(%rbx),%r8
81f4(2): xor %ecx,%ecx
81f6(2): xor %edx,%edx
81f8(3): mov %r12,%rsi
81fb(3): mov %r13,%rdi
81fe(5): call 0xfffffee2(%rip)
8203(3): test %rax,%rax
8206(3): mov %rax,(%r14)
8209(2): jz 0x53(%rip)
820b(3): mov %rbp,(%rax)
820e(3): mov (%r14),%rbp
8211(4): or $0x4,0x32(%rbp)
8215(4): mov 0x8(%rbx),%rax
8219(3): test %rax,%rax
821c(2): jz 0x14(%rip)
821e(4): lea 0x8(%rbp),%r14
8222(3): mov %rax,%rbx
8225(2): jmp 0xffffffcb(%rip)
8227(9): nop 0x0(%rax,%rax,1)
8230(2): xor %edx,%edx
8232(2): jmp 0x9(%rip)
8234(4): nop 0x0(%rax)
8238(3): mov %rax,%rbx
823b(4): mov 0x10(%rbx),%rax
823f(3): test %rax,%rax
8242(2): jz 0x7(%rip)
8244(3): cmp %rdx,%rax
8247(2): jnz 0x39(%rip)
8249(3): mov (%rbx),%rax
824c(4): mov 0x0(%rbp),%rbp
8250(3): mov %rbx,%rdx
8253(3): test %rax,%rax
8256(2): jnz 0xffffffe2(%rip)
8258(4): mov (%rsp),%rax
825c(5): mov 0x8(%rsp),%rcx
8261(9): xor $0x28,%rcx
826a(2): jnz 0x22(%rip)
826c(4): add $0x10,%rsp
8270(1): pop %rbx
8271(1): pop %rbp
8272(2): pop %r12
8274(2): pop %r13
8276(2): pop %r14
8278(1): ret near (%rsp)
8279(7): nop 0x0(%rax)
8280(4): lea 0x10(%rbp),%r14
8284(3): mov %rax,%rbx
8287(5): jmp 0xffffff69(%rip)
828c(5): call 0xffff9704(%rip)

"lower_subexp" :
82a0(2): push %r15
82a2(2): push %r14
82a4(2): push %r13
82a6(2): push %r12
82a8(3): mov %rdx,%r13
82ab(1): push %rbp
82ac(1): push %rbx
82ad(4): sub $0x48,%rsp
82b1(3): mov (%rsi),%rbx
82b4(4): mov 0x8(%rdx),%rbp
82b8(9): mov $0x28,%rax
82c1(5): mov %rax,0x38(%rsp)
82c6(2): xor %eax,%eax
82c8(4): test $0x10,0x38(%rsi)
82cc(5): mov %rdi,0x18(%rsp)
82d1(6): jz 0x177(%rip)
82d7(3): test %rbp,%rbp
82da(2): jz 0x76(%rip)
82dc(4): mov 0x28(%rdx),%rax
82e0(4): cmp $0x3f,%rax
82e4(6): jnle 0x139(%rip)
82ea(7): mov 0xa0(%rbx),%rdx
82f1(4): bt %rax,%rdx
82f5(6): jnb 0x128(%rip)
82fb(4): lea 0x70(%rbx),%rax
82ff(5): lea 0x20(%rsp),%r14
8304(4): sub $0xffffff80,%rbx
8308(2): xor %ecx,%ecx
830a(2): xor %edx,%edx
830c(3): mov %rbx,%rsi
830f(3): mov %rax,%r15
8312(3): mov %r14,%r8
8315(3): mov %rax,%rdi
8318(5): mov $0x8,0x28(%rsp)
831d(5): mov %rax,0x8(%rsp)
8322(5): call 0xfffffdbe(%rip)
8327(3): mov %r15,%rdi
832a(3): mov %r14,%r8
832d(2): xor %ecx,%ecx
832f(2): xor %edx,%edx
8331(3): mov %rbx,%rsi
8334(3): mov %rax,%r12
8337(5): mov $0x9,0x28(%rsp)
833c(5): call 0xfffffda4(%rip)
8341(3): mov %rax,%r15
8344(5): jmp 0x159(%rip)
8349(7): nop 0x0(%rax)
8350(4): lea 0x70(%rbx),%rax
8354(5): lea 0x20(%rsp),%r14
8359(4): sub $0xffffff80,%rbx
835d(2): xor %ecx,%ecx
835f(2): xor %edx,%edx
8361(3): mov %rbx,%rsi
8364(3): mov %rax,%r15
8367(3): mov %r14,%r8
836a(3): mov %rax,%rdi
836d(5): mov $0x8,0x28(%rsp)
8372(5): mov %rax,0x8(%rsp)
8377(5): call 0xfffffd69(%rip)
837c(3): mov %r15,%rdi
837f(3): mov %r14,%r8
8382(2): xor %ecx,%ecx
8384(2): xor %edx,%edx
8386(3): mov %rbx,%rsi
8389(3): mov %rax,%r12
838c(5): mov $0x9,0x28(%rsp)
8391(5): call 0xfffffd4f(%rip)
8396(3): mov %rax,%r11
8399(3): mov %rax,%r15
839c(5): mov 0x8(%rsp),%rdi
83a1(3): mov %r14,%r8
83a4(3): mov %r11,%rcx
83a7(3): mov %r12,%rdx
83aa(3): mov %rbx,%rsi
83ad(5): mov $0x10,0x28(%rsp)
83b2(5): mov %r11,0x10(%rsp)
83b7(5): call 0xfffffd29(%rip)
83bc(3): test %rax,%rax
83bf(3): mov %rax,%rbp
83c2(6): jz 0xfe(%rip)
83c8(5): mov 0x10(%rsp),%r11
83cd(3): test %r11,%r11
83d0(6): jz 0xf0(%rip)
83d6(3): test %r12,%r12
83d9(6): jz 0xe7(%rip)
83df(3): test %r15,%r15
83e2(6): jz 0xde(%rip)
83e8(4): mov 0x28(%r13),%rax
83ec(4): mov %rax,0x28(%r15)
83f0(5): mov %rax,0x28(%r12)
83f5(5): movzx 0x32(%r13),%eax
83fa(5): movzx 0x32(%r15),%edx
83ff(3): and $0x8,%eax
8402(3): and $0xf7,%edx
8405(2): mov %eax,%ecx
8407(2): or %ecx,%edx
8409(4): mov %dl,0x32(%r15)
840d(6): movzx 0x32(%r12),%eax
8413(3): and $0xf7,%eax
8416(2): or %ecx,%eax
8418(5): mov %al,0x32(%r12)
841d(5): mov 0x38(%rsp),%rdi
8422(9): xor $0x28,%rdi
842b(3): mov %rbp,%rax
842e(6): jnz 0xa4(%rip)
8434(4): add $0x48,%rsp
8438(1): pop %rbx
8439(1): pop %rbp
843a(2): pop %r12
843c(2): pop %r13
843e(2): pop %r14
8440(2): pop %r15
8442(1): ret near (%rsp)
8443(5): nop 0x0(%rax,%rax,1)
8448(4): lea 0x70(%rbx),%rax
844c(5): lea 0x20(%rsp),%r14
8451(4): sub $0xffffff80,%rbx
8455(2): xor %ecx,%ecx
8457(2): xor %edx,%edx
8459(3): mov %rbx,%rsi
845c(3): mov %rax,%r15
845f(3): mov %r14,%r8
8462(3): mov %rax,%rdi
8465(5): mov $0x8,0x28(%rsp)
846a(5): mov %rax,0x8(%rsp)
846f(5): call 0xfffffc71(%rip)
8474(2): xor %ecx,%ecx
8476(2): xor %edx,%edx
8478(3): mov %r15,%rdi
847b(3): mov %r14,%r8
847e(3): mov %rbx,%rsi
8481(3): mov %rax,%r12
8484(5): mov $0x9,0x28(%rsp)
8489(5): call 0xfffffc57(%rip)
848e(3): test %rbp,%rbp
8491(3): mov %rax,%r15
8494(3): mov %rax,%r11
8497(6): jz 0xffffff05(%rip)
849d(5): mov 0x8(%rsp),%rdi
84a2(3): mov %r14,%r8
84a5(3): mov %r15,%rcx
84a8(3): mov %rbp,%rdx
84ab(3): mov %rbx,%rsi
84ae(5): mov $0x10,0x28(%rsp)
84b3(5): call 0xfffffc2d(%rip)
84b8(3): mov %rax,%r11
84bb(5): jmp 0xfffffee1(%rip)
84c0(5): mov 0x18(%rsp),%rax
84c5(2): xor %ebp,%ebp
84c7(6): mov $0xc,(%rax)
84cd(5): jmp 0xffffff50(%rip)
84d2(5): call 0xffff94be(%rip)

"lower_subexps" :
84e0(1): push %rbp
84e1(1): push %rbx
84e2(3): mov %rdi,%rbp
84e5(3): mov %rsi,%rbx
84e8(4): sub $0x18,%rsp
84ec(4): mov 0x8(%rsi),%rdx
84f0(9): mov $0x28,%rax
84f9(5): mov %rax,0x8(%rsp)
84fe(2): xor %eax,%eax
8500(8): mov $0x0,0x4(%rsp)
8508(3): test %rdx,%rdx
850b(2): jz 0x8(%rip)
850d(4): cmp $0x11,0x30(%rdx)
8511(2): jz 0x4f(%rip)
8513(4): mov 0x10(%rbx),%rdx
8517(3): test %rdx,%rdx
851a(2): jz 0x8(%rip)
851c(4): cmp $0x11,0x30(%rdx)
8520(2): jz 0x20(%rip)
8522(5): mov 0x8(%rsp),%rcx
8527(9): xor $0x28,%rcx
8530(4): mov 0x4(%rsp),%eax
8534(2): jnz 0x47(%rip)
8536(4): add $0x18,%rsp
853a(1): pop %rbx
853b(1): pop %rbp
853c(1): ret near (%rsp)
853d(3): nop (%rax)
8540(5): lea 0x4(%rsp),%rdi
8545(3): mov %rbp,%rsi
8548(5): call 0xfffffd58(%rip)
854d(3): test %rax,%rax
8550(4): mov %rax,0x10(%rbx)
8554(2): jz 0xffffffce(%rip)
8556(3): mov %rbx,(%rax)
8559(2): jmp 0xffffffc9(%rip)
855b(5): nop 0x0(%rax,%rax,1)
8560(5): lea 0x4(%rsp),%rdi
8565(3): mov %rbp,%rsi
8568(5): call 0xfffffd38(%rip)
856d(3): test %rax,%rax
8570(4): mov %rax,0x8(%rbx)
8574(2): jz 0xffffff9f(%rip)
8576(3): mov %rbx,(%rax)
8579(2): jmp 0xffffff9a(%rip)
857b(5): call 0xffff9415(%rip)

"re_node_set_init_copy" :
8580(2): push %r12
8582(1): push %rbp
8583(1): push %rbx
8584(4): mov 0x8(%rsi),%rax
8588(4): mov %rax,0x8(%rdi)
858c(4): mov 0x8(%rsi),%r12
8590(3): test %r12,%r12
8593(2): jle 0x3d(%rip)
8595(3): mov %rdi,%rbx
8598(3): mov %rax,(%rdi)
859b(8): lea 0x0(,%rax,8),%rdi
85a3(3): mov %rsi,%rbp
85a6(5): call 0xffff951a(%rip)
85ab(3): test %rax,%rax
85ae(4): mov %rax,0x10(%rbx)
85b2(2): jz 0x3e(%rip)
85b4(4): mov 0x10(%rbp),%rsi
85b8(8): lea 0x0(,%r12,8),%rdx
85c0(3): mov %rax,%rdi
85c3(5): call 0xffff94cd(%rip)
85c8(2): xor %eax,%eax
85ca(1): pop %rbx
85cb(1): pop %rbp
85cc(2): pop %r12
85ce(1): ret near (%rsp)
85cf(1): nop 
85d0(4): pxor %xmm0,%xmm0
85d4(8): mov $0x0,0x10(%rdi)
85dc(2): xor %eax,%eax
85de(3): movups %xmm0,(%rdi)
85e1(1): pop %rbx
85e2(1): pop %rbp
85e3(2): pop %r12
85e5(1): ret near (%rsp)
85e6(a): nop 0x0(%rax,%rax,1)
85f0(8): mov $0x0,0x8(%rbx)
85f8(7): mov $0x0,(%rbx)
85ff(5): mov $0xc,%eax
8604(2): jmp 0xffffffc6(%rip)

"re_node_set_init_union" :
8610(3): test %rsi,%rsi
8613(2): push %r14
8615(2): push %r13
8617(2): push %r12
8619(1): push %rbp
861a(1): push %rbx
861b(6): jz 0xaa(%rip)
8621(3): test %rdx,%rdx
8624(4): mov 0x8(%rsi),%r13
8628(6): jz 0x98(%rip)
862e(3): test %r13,%r13
8631(6): jle 0x8f(%rip)
8637(4): mov 0x8(%rdx),%r14
863b(3): test %r14,%r14
863e(6): jle 0xb5(%rip)
8644(3): mov %rdi,%r12
8647(5): lea 0x0(%r13,%r14,1),%rdi
864c(3): mov %rdx,%rbx
864f(3): mov %rsi,%rbp
8652(4): mov %rdi,(%r12)
8656(4): shl/sal $0x3,%rdi
865a(5): call 0xffff9466(%rip)
865f(3): test %rax,%rax
8662(5): mov %rax,0x10(%r12)
8667(6): jz 0xf1(%rip)
866d(4): mov 0x10(%rbx),%r9
8671(4): mov 0x10(%rbp),%r8
8675(2): xor %ebx,%ebx
8677(2): xor %ecx,%ecx
8679(2): xor %esi,%esi
867b(2): jmp 0x23(%rip)
867d(3): nop (%rax)
8680(4): setz %dil
8684(5): mov %rdx,0xfffffff8(%rax,%rbx,8)
8689(4): add $0x1,%rsi
868d(4): movzx %dil,%edi
8691(3): add %rdi,%rcx
8694(3): cmp %rsi,%r13
8697(2): jle 0x69(%rip)
8699(3): cmp %rcx,%r14
869c(2): jle 0x7c(%rip)
869e(4): mov 0x0(%r8,%rsi,8),%rdx
86a2(4): mov 0x0(%r9,%rcx,8),%rdi
86a6(4): add $0x1,%rbx
86aa(3): cmp %rdi,%rdx
86ad(2): jle 0xffffffd3(%rip)
86af(4): add $0x1,%rcx
86b3(5): mov %rdi,0xfffffff8(%rax,%rbx,8)
86b8(2): jmp 0xffffffdc(%rip)
86ba(6): nop 0x0(%rax,%rax,1)
86c0(3): test %r13,%r13
86c3(2): jnle 0x30(%rip)
86c5(3): test %rdx,%rdx
86c8(2): jz 0x9(%rip)
86ca(5): cmp $0x0,0x8(%rdx)
86cf(2): jnle 0x21(%rip)
86d1(4): pxor %xmm0,%xmm0
86d5(8): mov $0x0,0x10(%rdi)
86dd(2): xor %eax,%eax
86df(3): movaps %xmm0,(%rdi)
86e2(1): pop %rbx
86e3(1): pop %rbp
86e4(2): pop %r12
86e6(2): pop %r13
86e8(2): pop %r14
86ea(1): ret near (%rsp)
86eb(5): nop 0x0(%rax,%rax,1)
86f0(3): mov %rdx,%rsi
86f3(1): pop %rbx
86f4(1): pop %rbp
86f5(2): pop %r12
86f7(2): pop %r13
86f9(2): pop %r14
86fb(5): jmp 0xfffffe85(%rip)
8700(3): cmp %rcx,%r14
8703(2): jnle 0x35(%rip)
8705(5): mov %rbx,0x8(%r12)
870a(2): xor %eax,%eax
870c(1): pop %rbx
870d(1): pop %rbp
870e(2): pop %r12
8710(2): pop %r13
8712(2): pop %r14
8714(1): ret near (%rsp)
8715(3): nop (%rax)
8718(3): sub %rsi,%r13
871b(4): lea 0x0(%rax,%rbx,8),%rdi
871f(4): lea 0x0(%r8,%rsi,8),%rsi
8723(8): lea 0x0(,%r13,8),%rdx
872b(3): add %r13,%rbx
872e(5): call 0xffff9362(%rip)
8733(2): jmp 0xffffffd2(%rip)
8735(3): nop (%rax)
8738(3): sub %rcx,%r14
873b(4): lea 0x0(%rax,%rbx,8),%rdi
873f(4): lea 0x0(%r9,%rcx,8),%rsi
8743(8): lea 0x0(,%r14,8),%rdx
874b(3): add %r14,%rbx
874e(5): call 0xffff9342(%rip)
8753(2): jmp 0xffffffb2(%rip)
8755(3): nop (%rax)
8758(5): mov $0xc,%eax
875d(5): jmp 0xffffff85(%rip)

"re_acquire_state_context" :
8770(2): push %r15
8772(2): push %r14
8774(2): push %r13
8776(2): push %r12
8778(1): push %rbp
8779(1): push %rbx
877a(4): sub $0x28,%rsp
877e(4): mov 0x8(%rdx),%r10
8782(3): test %r10,%r10
8785(6): jz 0x28a(%rip)
878b(3): mov %ecx,%r8d
878e(3): test %r10,%r10
8791(4): lea 0x0(%r8,%r10,1),%r12
8795(2): jle 0x17(%rip)
8797(4): mov 0x10(%rdx),%rax
879b(4): lea 0x0(%rax,%r10,8),%r10
879f(1): nop 
87a0(3): add (%rax),%r12
87a3(4): add $0x8,%rax
87a7(3): cmp %rax,%r10
87aa(2): jnz 0xfffffff6(%rip)
87ac(7): mov 0x88(%rsi),%rax
87b3(3): mov %rdx,%rbp
87b6(4): mov %ecx,0x4(%rsp)
87ba(3): mov %rsi,%r13
87bd(5): mov %rdi,0x18(%rsp)
87c2(3): and %r12,%rax
87c5(4): lea 0x0(%rax,%rax,2),%rdx
87c9(4): mov 0x40(%rsi),%rax
87cd(4): lea 0x0(%rax,%rdx,8),%rax
87d1(3): mov (%rax),%r11
87d4(3): test %r11,%r11
87d7(2): jle 0x59(%rip)
87d9(4): mov 0x10(%rax),%rbx
87dd(3): xor %r10d,%r10d
87e0(3): mov %ecx,%r9d
87e3(2): jmp 0xe(%rip)
87e5(3): nop (%rax)
87e8(4): add $0x1,%r10
87ec(3): cmp %r11,%r10
87ef(2): jz 0x41(%rip)
87f1(4): mov 0x0(%rbx,%r10,8),%r14
87f5(3): cmp %r12,(%r14)
87f8(2): jnz 0xfffffff0(%rip)
87fa(5): movzx 0x68(%r14),%eax
87ff(3): and $0xf,%eax
8802(3): cmp %r9d,%eax
8805(2): jnz 0xffffffe3(%rip)
8807(4): mov 0x50(%r14),%rdi
880b(3): test %rdi,%rdi
880e(2): jz 0xffffffda(%rip)
8810(3): mov %rbp,%rsi
8813(5): call 0xffffebad(%rip)
8818(2): test %al,%al
881a(2): jz 0xffffffce(%rip)
881c(4): add $0x28,%rsp
8820(3): mov %r14,%rax
8823(1): pop %rbx
8824(1): pop %rbp
8825(2): pop %r12
8827(2): pop %r13
8829(2): pop %r14
882b(2): pop %r15
882d(1): ret near (%rsp)
882e(2): nop 
8830(5): mov $0x1,%esi
8835(5): mov $0x70,%edi
883a(5): call 0xffff9236(%rip)
883f(3): test %rax,%rax
8842(3): mov %rax,%r14
8845(6): jz 0x141(%rip)
884b(4): lea 0x8(%rax),%rax
884f(3): mov %rbp,%rsi
8852(3): mov %rax,%rdi
8855(3): mov %rax,%rbx
8858(5): call 0xfffffd28(%rip)
885d(2): test %eax,%eax
885f(6): jnz 0x1be(%rip)
8865(5): movzx 0x68(%r14),%eax
886a(5): movzx 0x4(%rsp),%edx
886f(4): mov %rbx,0x50(%r14)
8873(3): and $0xf,%edx
8876(3): and $0xf0,%eax
8879(2): or %edx,%eax
887b(5): cmp $0x0,0x8(%rbp)
8880(4): mov %al,0x68(%r14)
8884(6): jle 0xe4(%rip)
888a(4): lea 0x18(%r14),%rcx
888e(3): xor %r15d,%r15d
8891(5): mov %r12,0x10(%rsp)
8896(3): xor %r10d,%r10d
8899(3): mov %r13,%r12
889c(3): mov %r15,%r13
889f(5): mov %rcx,0x8(%rsp)
88a4(3): mov %rbx,%r15
88a7(9): nop 0x0(%rax,%rax,1)
88b0(4): mov 0x10(%rbp),%rax
88b4(4): mov 0x0(%rax,%r13,8),%rax
88b8(4): shl/sal $0x4,%rax
88bc(4): add (%r12),%rax
88c0(4): movzx 0x8(%rax),%esi
88c4(3): mov 0x8(%rax),%ebx
88c7(3): shr $0x8,%ebx
88ca(5): and $0x3ff,%bx
88cf(3): cmp $0x1,%esi
88d2(3): movzx %bx,%edi
88d5(2): jnz 0x6(%rip)
88d7(2): test %edi,%edi
88d9(2): jz 0x79(%rip)
88db(5): movzx 0x68(%r14),%edx
88e0(4): movzx 0xa(%rax),%eax
88e4(3): mov %edx,%r9d
88e7(3): shr $0x4,%al
88ea(3): and $0xdf,%edx
88ed(4): shr $0x5,%r9b
88f1(3): or %r9d,%eax
88f4(3): and $0x1,%eax
88f7(3): shl/sal $0x5,%eax
88fa(2): or %edx,%eax
88fc(3): cmp $0x2,%esi
88ff(4): mov %al,0x68(%r14)
8903(6): jz 0xcd(%rip)
8909(3): cmp $0x4,%esi
890c(2): jnz 0x9(%rip)
890e(3): or $0x40,%eax
8911(4): mov %al,0x68(%r14)
8915(2): test %edi,%edi
8917(2): jz 0x3b(%rip)
8919(4): cmp 0x50(%r14),%r15
891d(6): jz 0xc3(%rip)
8923(3): test $0x1,%bl
8926(2): jz 0x7a(%rip)
8928(5): test $0x1,0x4(%rsp)
892d(2): jz 0xb(%rip)
892f(3): test $0x2,%bl
8932(2): jz 0x7a(%rip)
8934(4): nop 0x0(%rax)
8938(3): mov %r13,%rdx
893b(3): sub %r10,%rdx
893e(2): js 0x10(%rip)
8940(5): mov 0x8(%rsp),%rsi
8945(4): lea 0x10(%r14),%rdi
8949(5): call 0xffffec57(%rip)
894e(4): add $0x1,%r10
8952(4): add $0x1,%r13
8956(4): cmp 0x8(%rbp),%r13
895a(6): jl 0xffffff56(%rip)
8960(3): mov %r12,%r13
8963(5): mov 0x10(%rsp),%r12
8968(3): mov %r12,%rdx
896b(3): mov %r14,%rsi
896e(3): mov %r13,%rdi
8971(5): call 0xffffd69f(%rip)
8976(2): test %eax,%eax
8978(6): jz 0xfffffea4(%rip)
897e(3): mov %r14,%rdi
8981(5): call 0xffffe72f(%rip)
8986(5): mov 0x18(%rsp),%rax
898b(3): xor %r14d,%r14d
898e(6): mov $0xc,(%rax)
8994(5): jmp 0xfffffe88(%rip)
8999(7): nop 0x0(%rax)
89a0(3): test $0x2,%bl
89a3(2): jz 0x9(%rip)
89a5(5): test $0x1,0x4(%rsp)
89aa(2): jnz 0xffffff8e(%rip)
89ac(3): test $0x10,%bl
89af(2): jz 0x9(%rip)
89b1(5): test $0x2,0x4(%rsp)
89b6(2): jz 0xffffff82(%rip)
89b8(3): and $0x40,%ebx
89bb(2): jz 0xffffff97(%rip)
89bd(5): test $0x4,0x4(%rsp)
89c2(2): jnz 0xffffff90(%rip)
89c4(5): jmp 0xffffff74(%rip)
89c9(7): nop 0x0(%rax)
89d0(3): or $0x10,%eax
89d3(4): mov %al,0x68(%r14)
89d7(5): jmp 0xffffff3e(%rip)
89dc(4): nop 0x0(%rax)
89e0(5): mov $0x18,%edi
89e5(5): call 0xffff90db(%rip)
89ea(3): test %rax,%rax
89ed(4): mov %rax,0x50(%r14)
89f1(2): jz 0xffffff8d(%rip)
89f3(3): mov %rbp,%rsi
89f6(3): mov %rax,%rdi
89f9(5): call 0xfffffb87(%rip)
89fe(2): test %eax,%eax
8a00(2): jnz 0xffffff86(%rip)
8a02(5): or $0x80,0x68(%r14)
8a07(3): xor %r10d,%r10d
8a0a(5): jmp 0xffffff19(%rip)
8a0f(6): mov $0x0,(%rdi)
8a15(3): xor %r14d,%r14d
8a18(5): jmp 0xfffffe04(%rip)
8a1d(3): mov %r14,%rdi
8a20(5): call 0xffff8e60(%rip)
8a25(5): jmp 0xffffff61(%rip)

"re_acquire_state" :
8a30(2): push %r15
8a32(2): push %r14
8a34(2): push %r13
8a36(2): push %r12
8a38(1): push %rbp
8a39(1): push %rbx
8a3a(4): sub $0x8,%rsp
8a3e(4): mov 0x8(%rdx),%rbp
8a42(3): test %rbp,%rbp
8a45(6): jz 0x1db(%rip)
8a4b(3): test %rbp,%rbp
8a4e(2): jle 0x1e(%rip)
8a50(4): mov 0x10(%rdx),%rax
8a54(4): lea 0x0(%rax,%rbp,8),%rcx
8a58(8): nop 0x0(%rax,%rax,1)
8a60(3): add (%rax),%rbp
8a63(4): add $0x8,%rax
8a67(3): cmp %rax,%rcx
8a6a(2): jnz 0xfffffff6(%rip)
8a6c(7): mov 0x88(%rsi),%rax
8a73(3): mov %rdx,%r14
8a76(3): mov %rsi,%r12
8a79(3): mov %rdi,%r13
8a7c(3): and %rbp,%rax
8a7f(4): lea 0x0(%rax,%rax,2),%rdx
8a83(4): mov 0x40(%rsi),%rax
8a87(4): lea 0x0(%rax,%rdx,8),%rax
8a8b(3): mov (%rax),%r10
8a8e(3): test %r10,%r10
8a91(2): jle 0x35(%rip)
8a93(4): mov 0x10(%rax),%r11
8a97(3): xor %r9d,%r9d
8a9a(6): nop 0x0(%rax,%rax,1)
8aa0(4): mov 0x0(%r11,%r9,8),%rbx
8aa4(3): cmp %rbp,(%rbx)
8aa7(2): jnz 0x16(%rip)
8aa9(4): lea 0x8(%rbx),%rdi
8aad(3): mov %r14,%rsi
8ab0(5): call 0xffffe910(%rip)
8ab5(2): test %al,%al
8ab7(6): jnz 0x108(%rip)
8abd(4): add $0x1,%r9
8ac1(3): cmp %r9,%r10
8ac4(2): jnz 0xffffffdc(%rip)
8ac6(5): mov $0x1,%esi
8acb(5): mov $0x70,%edi
8ad0(5): call 0xffff8fa0(%rip)
8ad5(3): test %rax,%rax
8ad8(3): mov %rax,%rbx
8adb(6): jz 0x12d(%rip)
8ae1(4): lea 0x8(%rax),%r15
8ae5(3): mov %r14,%rsi
8ae8(3): mov %r15,%rdi
8aeb(5): call 0xfffffa95(%rip)
8af0(2): test %eax,%eax
8af2(6): jnz 0x10e(%rip)
8af8(4): mov 0x8(%r14),%rax
8afc(4): mov %r15,0x50(%rbx)
8b00(3): test %rax,%rax
8b03(6): jle 0xaa(%rip)
8b09(4): mov 0x10(%r14),%rsi
8b0d(4): mov (%r12),%r8
8b11(4): lea 0x0(%rsi,%rax,8),%r9
8b15(2): jmp 0x4f(%rip)
8b17(9): nop 0x0(%rax,%rax,1)
8b20(4): movzx 0x68(%rbx),%ecx
8b24(4): movzx 0xa(%rax),%edx
8b28(3): mov %ecx,%r10d
8b2b(3): shr $0x4,%dl
8b2e(3): and $0xdf,%ecx
8b31(4): shr $0x5,%r10b
8b35(3): or %r10d,%edx
8b38(3): and $0x1,%edx
8b3b(3): shl/sal $0x5,%edx
8b3e(2): or %ecx,%edx
8b40(3): cmp $0x2,%edi
8b43(3): mov %dl,0x68(%rbx)
8b46(6): jz 0x92(%rip)
8b4c(3): cmp $0x4,%edi
8b4f(6): jnz 0x99(%rip)
8b55(3): or $0x40,%edx
8b58(3): mov %dl,0x68(%rbx)
8b5b(4): add $0x8,%rsi
8b5f(3): cmp %rsi,%r9
8b62(2): jz 0x4b(%rip)
8b64(3): mov (%rsi),%rax
8b67(4): shl/sal $0x4,%rax
8b6b(3): add %r8,%rax
8b6e(4): movzx 0x8(%rax),%edi
8b72(3): cmp $0x1,%edi
8b75(2): jnz 0xffffffab(%rip)
8b77(7): test $0x3ff00,0x8(%rax)
8b7e(2): jz 0xffffffdd(%rip)
8b80(4): movzx 0x68(%rbx),%edx
8b84(4): movzx 0xa(%rax),%eax
8b88(2): mov %edx,%ecx
8b8a(3): shr $0x4,%al
8b8d(3): and $0xdf,%edx
8b90(3): shr $0x5,%cl
8b93(2): or %ecx,%eax
8b95(3): and $0x1,%eax
8b98(3): shl/sal $0x5,%eax
8b9b(2): or %edx,%eax
8b9d(3): mov %al,0x68(%rbx)
8ba0(4): add $0x8,%rsi
8ba4(4): or $0x80,0x68(%rbx)
8ba8(3): cmp %rsi,%r9
8bab(2): jnz 0xffffffb9(%rip)
8bad(3): mov %rbp,%rdx
8bb0(3): mov %rbx,%rsi
8bb3(3): mov %r12,%rdi
8bb6(5): call 0xffffd45a(%rip)
8bbb(2): test %eax,%eax
8bbd(2): jnz 0x57(%rip)
8bbf(4): add $0x8,%rsp
8bc3(3): mov %rbx,%rax
8bc6(1): pop %rbx
8bc7(1): pop %rbp
8bc8(2): pop %r12
8bca(2): pop %r13
8bcc(2): pop %r14
8bce(2): pop %r15
8bd0(1): ret near (%rsp)
8bd1(7): nop 0x0(%rax)
8bd8(3): or $0x10,%edx
8bdb(3): mov %dl,0x68(%rbx)
8bde(5): jmp 0xffffff7d(%rip)
8be3(5): nop 0x0(%rax,%rax,1)
8be8(3): cmp $0xc,%edi
8beb(2): jz 0xffffffb5(%rip)
8bed(7): test $0x3ff00,0x8(%rax)
8bf4(6): jz 0xffffff67(%rip)
8bfa(2): jmp 0xffffffa6(%rip)
8bfc(4): nop 0x0(%rax)
8c00(3): mov %rbx,%rdi
8c03(5): call 0xffff8c7d(%rip)
8c08(8): mov $0xc,0x0(%r13)
8c10(2): xor %ebx,%ebx
8c12(2): jmp 0xffffffad(%rip)
8c14(3): mov %rbx,%rdi
8c17(5): call 0xffffe499(%rip)
8c1c(2): jmp 0xffffffec(%rip)
8c1e(2): nop 
8c20(6): mov $0x0,(%rdi)
8c26(2): xor %ebx,%ebx
8c28(2): jmp 0xffffff97(%rip)

"merge_state_array" :
8c30(2): push %r15
8c32(2): push %r14
8c34(2): push %r13
8c36(2): push %r12
8c38(1): push %rbp
8c39(1): push %rbx
8c3a(4): sub $0x48,%rsp
8c3e(9): mov $0x28,%rax
8c47(5): mov %rax,0x38(%rsp)
8c4c(2): xor %eax,%eax
8c4e(3): test %rcx,%rcx
8c51(6): jle 0x95(%rip)
8c57(5): lea 0x1c(%rsp),%rax
8c5c(3): mov %rdi,%r14
8c5f(3): mov %rsi,%rbx
8c62(3): mov %rdx,%r12
8c65(3): mov %rcx,%rbp
8c68(3): xor %r15d,%r15d
8c6b(5): lea 0x20(%rsp),%r13
8c70(5): mov %rax,0x8(%rsp)
8c75(2): jmp 0x57(%rip)
8c77(9): nop 0x0(%rax,%rax,1)
8c80(3): test %rdx,%rdx
8c83(2): jz 0x40(%rip)
8c85(4): add $0x8,%rdx
8c89(4): add $0x8,%rsi
8c8d(3): mov %r13,%rdi
8c90(5): call 0xfffff980(%rip)
8c95(2): test %eax,%eax
8c97(4): mov %eax,0x1c(%rsp)
8c9b(2): jnz 0x4d(%rip)
8c9d(5): mov 0x8(%rsp),%rdi
8ca2(3): mov %r13,%rdx
8ca5(3): mov %r14,%rsi
8ca8(5): call 0xfffffd88(%rip)
8cad(5): mov 0x30(%rsp),%rdi
8cb2(4): mov %rax,0x0(%rbx,%r15,8)
8cb6(5): call 0xffff8bca(%rip)
8cbb(4): mov 0x1c(%rsp),%eax
8cbf(2): test %eax,%eax
8cc1(2): jnz 0x27(%rip)
8cc3(4): add $0x1,%r15
8cc7(3): cmp %r15,%rbp
8cca(2): jz 0x1c(%rip)
8ccc(4): mov 0x0(%rbx,%r15,8),%rsi
8cd0(4): mov 0x0(%r12,%r15,8),%rdx
8cd4(3): test %rsi,%rsi
8cd7(2): jnz 0xffffffa9(%rip)
8cd9(4): mov %rdx,0x0(%rbx,%r15,8)
8cdd(4): add $0x1,%r15
8ce1(3): cmp %r15,%rbp
8ce4(2): jnz 0xffffffe8(%rip)
8ce6(2): xor %eax,%eax
8ce8(5): mov 0x38(%rsp),%rcx
8ced(9): xor $0x28,%rcx
8cf6(2): jnz 0x11(%rip)
8cf8(4): add $0x48,%rsp
8cfc(1): pop %rbx
8cfd(1): pop %rbp
8cfe(2): pop %r12
8d00(2): pop %r13
8d02(2): pop %r14
8d04(2): pop %r15
8d06(1): ret near (%rsp)
8d07(5): call 0xffff8c89(%rip)

"expand_bkref_cache" :
8d10(2): push %r15
8d12(2): push %r14
8d14(2): push %r13
8d16(2): push %r12
8d18(3): mov %rdx,%r12
8d1b(1): push %rbp
8d1c(1): push %rbx
8d1d(3): mov %rdi,%rbx
8d20(3): mov %rsi,%rbp
8d23(2): xor %esi,%esi
8d25(4): sub $0x78,%rsp
8d29(7): mov 0xc8(%rdi),%rdi
8d30(9): mov $0x28,%rax
8d39(5): mov %rax,0x68(%rsp)
8d3e(2): xor %eax,%eax
8d40(5): mov %rcx,0x20(%rsp)
8d45(5): mov %r8d,0x2c(%rsp)
8d4a(3): mov %rdi,%rdx
8d4d(3): cmp %rdx,%rsi
8d50(2): jnl 0x57(%rip)
8d52(4): lea 0x0(%rsi,%rdx,1),%rax
8d56(7): mov 0xd8(%rbx),%r8
8d5d(3): mov %rax,%rcx
8d60(4): shr $0x3f,%rcx
8d64(3): add %rax,%rcx
8d67(3): sar $0x1,%rcx
8d6a(4): lea 0x0(%rcx,%rcx,4),%rax
8d6e(5): cmp 0x8(%r8,%rax,8),%r12
8d73(2): jle 0x2f(%rip)
8d75(5): jmp 0x83(%rip)
8d7a(6): nop 0x0(%rax,%rax,1)
8d80(4): lea 0x0(%rsi,%rcx,1),%rdx
8d84(3): mov %rdx,%rax
8d87(4): shr $0x3f,%rax
8d8b(3): add %rdx,%rax
8d8e(3): sar $0x1,%rax
8d91(4): lea 0x0(%rax,%rax,4),%rdx
8d95(3): mov %rax,%r9
8d98(5): cmp 0x8(%r8,%rdx,8),%r12
8d9d(2): jnle 0x63(%rip)
8d9f(3): mov %rax,%rcx
8da2(3): cmp %rcx,%rsi
8da5(2): jl 0xffffffdb(%rip)
8da7(3): cmp %rsi,%rdi
8daa(2): jle 0x23(%rip)
8dac(7): mov 0xd8(%rbx),%rcx
8db3(4): lea 0x0(%rsi,%rsi,4),%rax
8db7(4): shl/sal $0x3,%rax
8dbb(5): cmp %r12,0x8(%rcx,%rax,1)
8dc0(5): mov %rax,0x30(%rsp)
8dc5(2): jnz 0x8(%rip)
8dc7(4): cmp $0xffffffff,%rsi
8dcb(2): jnz 0x45(%rip)
8dcd(2): xor %eax,%eax
8dcf(5): mov 0x68(%rsp),%rbx
8dd4(9): xor $0x28,%rbx
8ddd(6): jnz 0x2cc(%rip)
8de3(4): add $0x78,%rsp
8de7(1): pop %rbx
8de8(1): pop %rbp
8de9(2): pop %r12
8deb(2): pop %r13
8ded(2): pop %r14
8def(2): pop %r15
8df1(1): ret near (%rsp)
8df2(6): nop 0x0(%rax,%rax,1)
8df8(3): mov %rcx,%r9
8dfb(3): mov %rdx,%rcx
8dfe(2): nop 
8e00(4): lea 0x1(%r9),%rsi
8e04(3): mov %rcx,%rdx
8e07(5): jmp 0xffffff46(%rip)
8e0c(4): nop 0x0(%rax)
8e10(4): lea 0x10(%rbp),%rax
8e14(7): mov 0x98(%rbx),%r13
8e1b(4): mov %rax,(%rsp)
8e1f(5): lea 0x4c(%rsp),%rax
8e24(5): mov %rax,0x38(%rsp)
8e29(5): lea 0x50(%rsp),%rax
8e2e(5): mov %rax,0x10(%rsp)
8e33(5): mov 0x30(%rsp),%rax
8e38(4): lea 0x0(%rcx,%rax,1),%r15
8e3c(5): jmp 0xdc(%rip)
8e41(7): nop 0x0(%rax)
8e48(4): mov 0x18(%r13),%rax
8e4c(4): mov 0x0(%rax,%r10,8),%rcx
8e50(7): mov 0xb8(%rbx),%r10
8e57(8): lea 0x0(,%r14,8),%rax
8e5f(5): mov %rax,0x18(%rsp)
8e64(3): add %rax,%r10
8e67(5): mov %rcx,0x8(%rsp)
8e6c(3): mov (%r10),%r9
8e6f(3): test %r9,%r9
8e72(6): jz 0x18e(%rip)
8e78(4): mov 0x10(%r9),%rdi
8e7c(4): lea 0x18(%r9),%rsi
8e80(3): mov %rcx,%rdx
8e83(5): call 0xffffe59d(%rip)
8e88(3): test %rax,%rax
8e8b(2): jnz 0x7e(%rip)
8e8d(5): mov 0x10(%rsp),%rdi
8e92(4): lea 0x8(%r9),%rsi
8e96(5): call 0xfffff6ea(%rip)
8e9b(5): mov 0x8(%rsp),%rsi
8ea0(5): mov 0x10(%rsp),%rdi
8ea5(4): mov %eax,0x4c(%rsp)
8ea9(5): call 0xffffd037(%rip)
8eae(4): mov 0x4c(%rsp),%edx
8eb2(2): test %edx,%edx
8eb4(6): jnz 0x1a2(%rip)
8eba(2): cmp $0x1,%al
8ebc(6): jnz 0x19a(%rip)
8ec2(5): mov 0x18(%rsp),%r10
8ec7(7): add 0xb8(%rbx),%r10
8ece(5): mov 0x10(%rsp),%rdx
8ed3(5): mov 0x38(%rsp),%rdi
8ed8(3): mov %r13,%rsi
8edb(5): mov %r10,0x8(%rsp)
8ee0(5): call 0xfffffb50(%rip)
8ee5(5): mov 0x8(%rsp),%r10
8eea(5): mov 0x60(%rsp),%rdi
8eef(3): mov %rax,(%r10)
8ef2(5): call 0xffff898e(%rip)
8ef7(7): mov 0xb8(%rbx),%rax
8efe(5): cmp $0x0,0x0(%rax,%r14,8)
8f03(6): jz 0x142(%rip)
8f09(4): add $0x28,%r15
8f0d(5): cmp $0x0,0xfffffff8(%r15)
8f12(6): jz 0xfffffebb(%rip)
8f18(3): mov (%r15),%r10
8f1b(4): mov 0x8(%rbp),%r9
8f1f(4): mov (%rsp),%rsi
8f23(3): mov %r10,%rdx
8f26(3): mov %r9,%rdi
8f29(5): call 0xffffe4f7(%rip)
8f2e(3): test %rax,%rax
8f31(2): jz 0xffffffd8(%rip)
8f33(4): mov 0x18(%r15),%r8
8f37(3): add %r12,%r8
8f3a(3): mov %r8,%r14
8f3d(4): sub 0x10(%r15),%r14
8f41(3): cmp %r14,%r12
8f44(6): jnz 0xffffff04(%rip)
8f4a(4): mov 0x28(%r13),%rcx
8f4e(4): lea 0x0(%r10,%r10,2),%rax
8f52(4): mov (%rsp),%rsi
8f56(3): mov %r9,%rdi
8f59(4): lea 0x0(%rcx,%rax,8),%rax
8f5d(4): mov 0x10(%rax),%rax
8f61(3): mov (%rax),%r14
8f64(3): mov %r14,%rdx
8f67(5): call 0xffffe4b9(%rip)
8f6c(3): test %rax,%rax
8f6f(2): jnz 0xffffff9a(%rip)
8f71(5): mov $0x8,%edi
8f76(9): mov $0x1,0x50(%rsp)
8f7f(9): mov $0x1,0x58(%rsp)
8f88(5): call 0xffff8b38(%rip)
8f8d(3): test %rax,%rax
8f90(5): mov %rax,0x60(%rsp)
8f95(6): jz 0xf8(%rip)
8f9b(3): mov %r14,(%rax)
8f9e(2): xor %eax,%eax
8fa0(5): mov 0x10(%rsp),%r15
8fa5(5): mov 0x20(%rsp),%rdx
8faa(3): mov %r13,%rdi
8fad(4): mov 0x2c(%rsp),%ecx
8fb1(4): mov %eax,0x4c(%rsp)
8fb5(3): mov %r15,%rsi
8fb8(5): call 0xffffee18(%rip)
8fbd(3): mov %r15,%rsi
8fc0(3): mov %rbp,%rdi
8fc3(3): mov %eax,%r14d
8fc6(5): call 0xffffe97a(%rip)
8fcb(5): mov 0x60(%rsp),%rdi
8fd0(3): mov %eax,%r15d
8fd3(5): call 0xffff88ad(%rip)
8fd8(4): mov 0x4c(%rsp),%eax
8fdc(3): mov %r14d,%edx
8fdf(3): or %r15d,%edx
8fe2(2): or %eax,%edx
8fe4(6): jnz 0x92(%rip)
8fea(7): mov 0xd8(%rbx),%rcx
8ff1(5): jmp 0xfffffe42(%rip)
8ff6(a): nop 0x0(%rax,%rax,1)
9000(5): mov $0x8,%edi
9005(5): mov %r10,0x18(%rsp)
900a(9): mov $0x1,0x50(%rsp)
9013(9): mov $0x1,0x58(%rsp)
901c(5): call 0xffff8aa4(%rip)
9021(3): test %rax,%rax
9024(5): mov %rax,0x60(%rsp)
9029(2): jz 0x43(%rip)
902b(5): mov 0x8(%rsp),%rdi
9030(8): mov $0x0,0x4c(%rsp)
9038(5): mov 0x18(%rsp),%r10
903d(3): mov %rdi,(%rax)
9040(5): jmp 0xfffffe8e(%rip)
9045(4): mov 0x4c(%rsp),%eax
9049(2): test %eax,%eax
904b(6): jz 0xfffffebe(%rip)
9051(5): jmp 0xfffffd7e(%rip)
9056(5): mov 0x60(%rsp),%rdi
905b(5): call 0xffff8825(%rip)
9060(4): mov 0x4c(%rsp),%eax
9064(2): test %eax,%eax
9066(6): jnz 0xfffffd69(%rip)
906c(5): mov $0xc,%eax
9071(5): jmp 0xfffffd5e(%rip)
9076(2): test %eax,%eax
9078(6): jnz 0xfffffd57(%rip)
907e(3): test %r14d,%r14d
9081(3): mov %r14d,%eax
9084(4): cmove %r15d,%eax
9088(5): jmp 0xfffffd47(%rip)
908d(9): mov $0x0,0x58(%rsp)
9096(9): mov $0x0,0x50(%rsp)
909f(5): mov $0xc,%eax
90a4(5): jmp 0xfffffefc(%rip)
90a9(5): call 0xffff88e7(%rip)

"check_subexp_matching_top.isra.18" :
90b0(2): push %r15
90b2(2): push %r14
90b4(2): push %r13
90b6(2): push %r12
90b8(1): push %rbp
90b9(1): push %rbx
90ba(4): sub $0x28,%rsp
90be(4): cmp $0x0,(%rsi)
90c2(7): mov 0x98(%rdi),%r13
90c9(6): jle 0xc7(%rip)
90cf(3): mov %rdx,%r14
90d2(3): mov %rsi,%r12
90d5(3): mov %rdi,%r15
90d8(2): xor %ebx,%ebx
90da(2): jmp 0x14(%rip)
90dc(4): nop 0x0(%rax)
90e0(4): add $0x1,%rbx
90e4(4): cmp (%r12),%rbx
90e8(6): jnl 0xa8(%rip)
90ee(3): mov (%r14),%rax
90f1(4): mov 0x0(%rax,%rbx,8),%rbp
90f5(3): mov %rbp,%rax
90f8(4): shl/sal $0x4,%rax
90fc(4): add 0x0(%r13),%rax
9100(4): cmp $0x8,0x8(%rax)
9104(2): jnz 0xffffffdc(%rip)
9106(3): mov (%rax),%rax
9109(4): cmp $0x3f,%rax
910d(2): jnle 0xffffffd3(%rip)
910f(7): mov 0xa0(%r13),%rsi
9116(4): bt %rax,%rsi
911a(2): jnb 0xffffffc6(%rip)
911c(7): mov 0xe8(%r15),%r8
9123(7): cmp 0xf0(%r15),%r8
912a(7): mov 0xf8(%r15),%r9
9131(2): jz 0x77(%rip)
9133(5): mov $0x30,%esi
9138(5): mov $0x1,%edi
913d(5): mov %r9,0x10(%rsp)
9142(5): mov %r8,0x8(%rsp)
9147(5): mov %rcx,0x18(%rsp)
914c(5): call 0xffff8924(%rip)
9151(5): mov 0x8(%rsp),%r8
9156(5): mov 0x10(%rsp),%r9
915b(3): test %rax,%rax
915e(4): mov %rax,0x0(%r9,%r8,8)
9162(2): jz 0x3f(%rip)
9164(4): add $0x1,%r8
9168(4): add $0x1,%rbx
916c(5): mov 0x18(%rsp),%rcx
9171(7): mov %r8,0xe8(%r15)
9178(4): cmp (%r12),%rbx
917c(4): mov %rbp,0x8(%rax)
9180(3): mov %rcx,(%rax)
9183(6): jl 0xffffff6b(%rip)
9189(7): nop 0x0(%rax)
9190(2): xor %eax,%eax
9192(4): add $0x28,%rsp
9196(1): pop %rbx
9197(1): pop %rbp
9198(2): pop %r12
919a(2): pop %r13
919c(2): pop %r14
919e(2): pop %r15
91a0(1): ret near (%rsp)
91a1(5): mov $0xc,%eax
91a6(2): jmp 0xffffffec(%rip)
91a8(4): lea 0x0(%r8,%r8,1),%rax
91ac(3): mov %r8,%rsi
91af(3): mov %r9,%rdi
91b2(4): shl/sal $0x4,%rsi
91b6(5): mov %rcx,0x8(%rsp)
91bb(5): mov %rax,0x10(%rsp)
91c0(5): call 0xffff8970(%rip)
91c5(3): test %rax,%rax
91c8(3): mov %rax,%r9
91cb(5): mov 0x8(%rsp),%rcx
91d0(2): jz 0xffffffd1(%rip)
91d2(7): mov %rax,0xf8(%r15)
91d9(5): mov 0x10(%rsp),%rax
91de(7): mov 0xe8(%r15),%r8
91e5(7): mov %rax,0xf0(%r15)
91ec(5): jmp 0xffffff47(%rip)

"re_string_context_at" :
9200(1): push %rbp
9201(1): push %rbx
9202(3): mov %rdi,%rbp
9205(4): sub $0x8,%rsp
9209(3): test %rsi,%rsi
920c(2): js 0x54(%rip)
920e(4): cmp %rsi,0x58(%rdi)
9212(6): jz 0xa6(%rip)
9218(7): cmp $0x1,0x90(%rdi)
921f(2): jle 0x51(%rip)
9221(4): mov 0x10(%rdi),%rax
9225(2): jmp 0x15(%rip)
9227(9): nop 0x0(%rax,%rax,1)
9230(4): sub $0x1,%rsi
9234(4): cmp $0xffffffff,%rsi
9238(2): jz 0x28(%rip)
923a(3): mov 0x0(%rax,%rsi,4),%ebx
923d(3): cmp $0xff,%ebx
9240(2): jz 0xfffffff0(%rip)
9242(7): cmp $0x0,0x8e(%rbp)
9249(2): jnz 0x7f(%rip)
924b(2): xor %eax,%eax
924d(3): cmp $0xa,%ebx
9250(2): jz 0x4c(%rip)
9252(4): add $0x8,%rsp
9256(1): pop %rbx
9257(1): pop %rbp
9258(1): ret near (%rsp)
9259(7): nop 0x0(%rax)
9260(3): mov 0x70(%rbp),%eax
9263(4): add $0x8,%rsp
9267(1): pop %rbx
9268(1): pop %rbp
9269(1): ret near (%rsp)
926a(6): nop 0x0(%rax,%rax,1)
9270(4): mov 0x8(%rdi),%rax
9274(7): mov 0x80(%rdi),%rcx
927b(4): movzx 0x0(%rax,%rsi,1),%eax
927f(3): mov %rax,%rdx
9282(4): sar $0x6,%rax
9286(4): mov 0x0(%rcx,%rax,8),%rcx
928a(5): mov $0x1,%eax
928f(4): bt %rdx,%rcx
9293(2): jb 0xffffffbf(%rip)
9295(2): xor %eax,%eax
9297(3): cmp $0xa,%dl
929a(2): jnz 0xffffffb8(%rip)
929c(2): xor %eax,%eax
929e(7): cmp $0x0,0x8d(%rbp)
92a5(3): setnz %al
92a8(4): add $0x8,%rsp
92ac(2): add %eax,%eax
92ae(1): pop %rbx
92af(1): pop %rbp
92b0(1): ret near (%rsp)
92b1(7): nop 0x0(%rax)
92b8(3): and $0x2,%edx
92bb(3): cmp $0x1,%edx
92be(2): sbb %eax,%eax
92c0(3): and $0x2,%eax
92c3(3): add $0x8,%eax
92c6(2): jmp 0xffffff8c(%rip)
92c8(2): mov %ebx,%edi
92ca(5): call 0xffff87e6(%rip)
92cf(2): test %eax,%eax
92d1(2): jnz 0xb(%rip)
92d3(3): cmp $0x5f,%ebx
92d6(6): jnz 0xffffff75(%rip)
92dc(5): mov $0x1,%eax
92e1(5): jmp 0xffffff71(%rip)

"check_node_accept" :
92f0(4): mov 0x8(%rdi),%rax
92f4(4): movzx 0x0(%rax,%rdx,1),%ecx
92f8(4): movzx 0x8(%rsi),%eax
92fc(2): cmp $0x3,%al
92fe(6): jz 0xba(%rip)
9304(6): jbe 0x9c(%rip)
930a(2): cmp $0x5,%al
930c(2): jz 0x14(%rip)
930e(2): cmp $0x7,%al
9310(6): jnz 0xa0(%rip)
9316(2): xor %eax,%eax
9318(2): test %cl,%cl
931a(6): js 0x90(%rip)
9320(3): cmp $0xa,%cl
9323(6): jz 0xc5(%rip)
9329(2): test %cl,%cl
932b(2): jnz 0x15(%rip)
932d(7): mov 0x98(%rdi),%rcx
9334(2): xor %eax,%eax
9336(7): test $0x80,0xd8(%rcx)
933d(2): jnz 0x6d(%rip)
933f(1): nop 
9340(1): push %rbx
9341(3): mov 0x8(%rsi),%ebx
9344(5): mov $0x1,%eax
9349(6): test $0x3ff00,%ebx
934f(2): jz 0x4d(%rip)
9351(3): mov %rdx,%rsi
9354(6): mov 0xa0(%rdi),%edx
935a(3): shr $0x8,%ebx
935d(5): call 0xfffffea3(%rip)
9362(2): mov %ebx,%ecx
9364(2): mov %eax,%edx
9366(5): and $0x3ff,%cx
936b(3): test $0x4,%bl
936e(2): jz 0x6a(%rip)
9370(2): xor %eax,%eax
9372(3): test $0x1,%dl
9375(2): jz 0x27(%rip)
9377(3): and $0x8,%ebx
937a(2): jnz 0x22(%rip)
937c(3): test $0x20,%cl
937f(2): jz 0x9(%rip)
9381(2): xor %eax,%eax
9383(3): test $0x2,%dl
9386(2): jz 0x16(%rip)
9388(3): shr $0x3,%edx
938b(5): mov $0x1,%eax
9390(3): and $0x1,%edx
9393(6): and $0x80,%ecx
9399(3): cmovne %edx,%eax
939c(1): pop %rbx
939d(1): ret near (%rsp)
939e(2): nop 
93a0(2): cmp $0x1,%al
93a2(2): jnz 0xe(%rip)
93a4(2): xor %eax,%eax
93a6(2): cmp %cl,(%rsi)
93a8(2): jz 0xffffff98(%rip)
93aa(2): REP ret near (%rsp)
93ac(4): nop 0x0(%rax)
93b0(2): xor %eax,%eax
93b2(1): ret near (%rsp)
93b3(5): nop 0x0(%rax,%rax,1)
93b8(3): mov (%rsi),%r8
93bb(3): movzx %cl,%eax
93be(4): sar $0x6,%rax
93c2(4): mov 0x0(%r8,%rax,8),%r8
93c6(2): xor %eax,%eax
93c8(4): bt %rcx,%r8
93cc(6): jb 0xffffff74(%rip)
93d2(2): REP ret near (%rsp)
93d4(4): nop 0x0(%rax)
93d8(3): and $0x8,%ebx
93db(2): jz 0xffffffa1(%rip)
93dd(2): test $0x1,%al
93df(2): jz 0xffffff9d(%rip)
93e1(2): xor %eax,%eax
93e3(1): pop %rbx
93e4(1): ret near (%rsp)
93e5(3): nop (%rax)
93e8(7): mov 0x98(%rdi),%rcx
93ef(2): xor %eax,%eax
93f1(7): test $0x40,0xd8(%rcx)
93f8(6): jnz 0xffffff48(%rip)
93fe(2): REP ret near (%rsp)

"check_halt_state_context.isra.20" :
9400(2): push %r12
9402(3): mov %rdx,%r12
9405(1): push %rbp
9406(1): push %rbx
9407(6): mov 0xa0(%rdi),%edx
940d(3): mov %rsi,%rbx
9410(3): mov %rcx,%rsi
9413(3): mov %rdi,%rbp
9416(5): call 0xfffffdea(%rip)
941b(3): test %rbx,%rbx
941e(6): jle 0xaa(%rip)
9424(7): mov 0x98(%rbp),%rdx
942b(3): mov %eax,%r11d
942e(2): mov %eax,%ebp
9430(3): and $0x1,%eax
9433(4): mov (%r12),%r9
9437(2): xor %esi,%esi
9439(3): and $0x8,%ebp
943c(4): and $0x2,%r11d
9440(3): mov %eax,%r10d
9443(3): mov (%rdx),%r8
9446(2): jmp 0x13(%rip)
9448(8): nop 0x0(%rax,%rax,1)
9450(4): add $0x1,%rsi
9454(3): cmp %rbx,%rsi
9457(2): jz 0x71(%rip)
9459(4): mov 0x0(%r9,%rsi,8),%rax
945d(3): mov %rax,%rdx
9460(4): shl/sal $0x4,%rdx
9464(3): add %r8,%rdx
9467(3): mov 0x8(%rdx),%ecx
946a(3): shr $0x8,%ecx
946d(2): mov %ecx,%edi
946f(5): and $0x3ff,%di
9474(4): cmp $0x2,0x8(%rdx)
9478(2): jnz 0xffffffd8(%rip)
947a(3): test %di,%di
947d(2): jz 0x28(%rip)
947f(3): test $0x4,%cl
9482(2): jz 0x2e(%rip)
9484(3): test %r10d,%r10d
9487(2): jz 0xffffffc9(%rip)
9489(3): and $0x8,%ecx
948c(2): jnz 0xffffffc4(%rip)
948e(4): test $0x20,%dil
9492(2): jz 0x7(%rip)
9494(3): test %r11d,%r11d
9497(2): jz 0xffffffb9(%rip)
9499(6): and $0x80,%edi
949f(2): jz 0x6(%rip)
94a1(2): test %ebp,%ebp
94a3(2): jz 0xffffffad(%rip)
94a5(1): pop %rbx
94a6(1): pop %rbp
94a7(2): pop %r12
94a9(1): ret near (%rsp)
94aa(6): nop 0x0(%rax,%rax,1)
94b0(3): and $0x8,%ecx
94b3(2): jz 0xffffffdb(%rip)
94b5(3): test %r10d,%r10d
94b8(2): jnz 0xffffff98(%rip)
94ba(4): test $0x20,%dil
94be(2): jz 0xffffffdb(%rip)
94c0(2): jmp 0xffffffd4(%rip)
94c2(6): nop 0x0(%rax,%rax,1)
94c8(1): pop %rbx
94c9(2): xor %eax,%eax
94cb(1): pop %rbp
94cc(2): pop %r12
94ce(1): ret near (%rsp)

"re_string_reconstruct" :
94d0(2): push %r15
94d2(2): push %r14
94d4(3): mov %rsi,%r15
94d7(2): push %r13
94d9(2): push %r12
94db(3): mov %edx,%r10d
94de(1): push %rbp
94df(1): push %rbx
94e0(3): mov %rsi,%rbp
94e3(3): mov %rdi,%rbx
94e6(4): sub $0x48,%rsp
94ea(9): mov $0x28,%rax
94f3(5): mov %rax,0x38(%rsp)
94f8(2): xor %eax,%eax
94fa(4): mov 0x28(%rdi),%rax
94fe(3): sub %rax,%rbp
9501(3): cmp %rsi,%rax
9504(2): jle 0x62(%rip)
9506(7): cmp $0x1,0x90(%rdi)
950d(6): jnle 0x133(%rip)
9513(4): mov 0x50(%rbx),%rax
9517(8): mov $0x0,0x30(%rbx)
951f(3): mov %r15,%rbp
9522(8): mov $0x0,0x28(%rbx)
952a(8): mov $0x0,0x38(%rbx)
9532(7): mov $0x0,0x8c(%rbx)
9539(4): mov %rax,0x58(%rbx)
953d(4): mov 0x60(%rbx),%rax
9541(4): mov %rax,0x68(%rbx)
9545(3): mov %r10d,%eax
9548(3): and $0x1,%eax
954b(3): cmp $0x1,%eax
954e(2): sbb %eax,%eax
9550(3): and $0x2,%eax
9553(3): add $0x4,%eax
9556(7): cmp $0x0,0x8b(%rbx)
955d(3): mov %eax,0x70(%rbx)
9560(6): jz 0xd0(%rip)
9566(3): test %rbp,%rbp
9569(2): jz 0x65(%rip)
956b(4): mov 0x38(%rbx),%rax
956f(7): movzx 0x8c(%rbx),%edx
9576(4): mov 0x30(%rbx),%r8
957a(3): cmp %rbp,%rax
957d(6): jle 0x123(%rip)
9583(2): test %dl,%dl
9585(6): jnz 0x213(%rip)
958b(4): lea 0xffffffff(%rbp),%rsi
958f(3): mov %r10d,%edx
9592(3): mov %rbx,%rdi
9595(4): mov %r8,(%rsp)
9599(5): call 0xfffffc67(%rip)
959e(4): mov (%rsp),%r8
95a2(3): mov %eax,0x70(%rbx)
95a5(3): sub %rbp,%r8
95a8(7): cmp $0x1,0x90(%rbx)
95af(6): jnle 0xa1(%rip)
95b5(7): cmp $0x0,0x8b(%rbx)
95bc(6): jnz 0x3a4(%rip)
95c2(4): sub %rbp,0x38(%rbx)
95c6(4): mov %r8,0x30(%rbx)
95ca(4): add %rbp,0x8(%rbx)
95ce(4): mov 0x58(%rbx),%rax
95d2(4): sub %rbp,0x68(%rbx)
95d6(4): mov %r15,0x28(%rbx)
95da(3): sub %rbp,%rax
95dd(7): cmp $0x1,0x90(%rbx)
95e4(4): mov %rax,0x58(%rbx)
95e8(6): jle 0xa0(%rip)
95ee(7): cmp $0x0,0x88(%rbx)
95f5(3): mov %rbx,%rdi
95f8(2): jz 0x80(%rip)
95fa(5): call 0xffffcd46(%rip)
95ff(2): test %eax,%eax
9601(2): jnz 0xc(%rip)
9603(8): mov $0x0,0x48(%rbx)
960b(2): xor %eax,%eax
960d(5): mov 0x38(%rsp),%rcx
9612(9): xor $0x28,%rcx
961b(6): jnz 0x64f(%rip)
9621(4): add $0x48,%rsp
9625(1): pop %rbx
9626(1): pop %rbp
9627(2): pop %r12
9629(2): pop %r13
962b(2): pop %r14
962d(2): pop %r15
962f(1): ret near (%rsp)
9630(3): mov (%rbx),%rax
9633(4): mov %rax,0x8(%rbx)
9637(5): jmp 0xffffff2f(%rip)
963c(4): nop 0x0(%rax)
9640(8): mov $0x0,0x20(%rdi)
9648(5): jmp 0xfffffecb(%rip)
964d(3): nop (%rax)
9650(4): mov 0x10(%rbx),%rdi
9654(8): lea 0x0(,%r8,4),%rdx
965c(4): lea 0x0(%rdi,%rbp,4),%rsi
9660(5): call 0xffff8530(%rip)
9665(4): mov 0x30(%rbx),%r8
9669(3): sub %rbp,%r8
966c(5): jmp 0xffffff49(%rip)
9671(7): nop 0x0(%rax)
9678(5): call 0xffffcaf8(%rip)
967d(5): jmp 0xffffff86(%rip)
9682(6): nop 0x0(%rax,%rax,1)
9688(7): cmp $0x0,0x8b(%rbx)
968f(6): jnz 0x3b1(%rip)
9695(4): mov %rax,0x30(%rbx)
9699(5): jmp 0xffffff6a(%rip)
969e(2): nop 
96a0(2): test %dl,%dl
96a2(6): jnz 0x4ab(%rip)
96a8(7): movsxd 0x90(%rbx),%rdx
96af(8): mov $0x0,0x30(%rbx)
96b7(4): mov 0x28(%rbx),%r11
96bb(3): cmp $0x1,%edx
96be(6): jle 0x3ea(%rip)
96c4(7): cmp $0x0,0x89(%rbx)
96cb(6): jnz 0x2bd(%rip)
96d1(4): lea 0x0(%r11,%rax,1),%r14
96d5(3): cmp %r14,%r15
96d8(6): jle 0x447(%rip)
96de(4): lea 0x20(%rbx),%rax
96e2(5): lea 0x24(%rsp),%r13
96e7(5): mov %rax,0x10(%rsp)
96ec(4): nop 0x0(%rax)
96f0(4): mov 0x50(%rbx),%r12
96f4(3): mov (%rbx),%rsi
96f7(3): mov %r13,%rdi
96fa(4): mov 0x20(%rbx),%rax
96fe(5): mov 0x10(%rsp),%rcx
9703(5): mov %r10d,0xc(%rsp)
9708(4): mov %r8,(%rsp)
970c(3): sub %r14,%r12
970f(3): add %r14,%rsi
9712(3): mov %r12,%rdx
9715(5): mov %rax,0x18(%rsp)
971a(5): call 0xffffc166(%rip)
971f(4): lea 0xffffffff(%rax),%rcx
9723(4): mov 0x24(%rsp),%edx
9727(4): mov (%rsp),%r8
972b(5): mov 0xc(%rsp),%r10d
9730(4): cmp $0xfffffffc,%rcx
9734(6): jnbe 0x441(%rip)
973a(3): add %rax,%r14
973d(3): cmp %r14,%r15
9740(2): jnle 0xffffffb0(%rip)
9742(3): sub %r15,%r14
9745(3): cmp $0xff,%edx
9748(3): mov %r14,%r12
974b(4): mov %r14,0x30(%rbx)
974f(6): jz 0x3da(%rip)
9755(7): cmp $0x0,0x8e(%rbx)
975c(6): jnz 0x46d(%rip)
9762(2): xor %eax,%eax
9764(3): cmp $0xa,%edx
9767(2): jnz 0x10(%rip)
9769(2): xor %eax,%eax
976b(7): cmp $0x0,0x8d(%rbx)
9772(3): setnz %al
9775(2): add %eax,%eax
9777(3): mov %eax,0x70(%rbx)
977a(4): cmp $0x0,%r12
977e(6): jnz 0x41c(%rip)
9784(7): movzx 0x8b(%rbx),%eax
978b(4): mov %r12,0x38(%rbx)
978f(5): jmp 0x1bd(%rip)
9794(4): nop 0x0(%rax)
9798(4): mov 0x18(%rbx),%r14
979c(3): mov %r8,%rcx
979f(2): xor %esi,%esi
97a1(2): jmp 0x12(%rip)
97a3(5): nop 0x0(%rax,%rax,1)
97a8(2): jnl 0x3b(%rip)
97aa(4): lea 0x1(%rax),%rsi
97ae(3): cmp %rcx,%rsi
97b1(2): jnl 0x27(%rip)
97b3(4): lea 0x0(%rsi,%rcx,1),%rdx
97b7(3): mov %rdx,%rax
97ba(4): shr $0x3f,%rax
97be(3): add %rdx,%rax
97c1(3): sar $0x1,%rax
97c4(4): mov 0x0(%r14,%rax,8),%rdx
97c8(3): mov %rax,%r12
97cb(3): cmp %rbp,%rdx
97ce(2): jle 0xffffffda(%rip)
97d0(3): mov %rax,%rcx
97d3(2): jmp 0xffffffdb(%rip)
97d5(3): nop (%rax)
97d8(4): lea 0x1(%rax),%r12
97dc(3): cmp %rbp,%rdx
97df(4): cmovnl %rax,%r12
97e3(5): lea 0xffffffff(%r12),%r13
97e8(3): mov %r10d,%edx
97eb(3): mov %rbx,%rdi
97ee(4): mov %r8,(%rsp)
97f2(3): mov %r13,%rsi
97f5(5): call 0xfffffa0b(%rip)
97fa(3): cmp %r12,%rbp
97fd(3): mov %eax,0x70(%rbx)
9800(4): mov (%rsp),%r8
9804(6): jnz 0x84(%rip)
980a(3): cmp %r8,%rbp
980d(2): jnl 0x7b(%rip)
980f(4): cmp %rbp,0x0(%r14,%r12,8)
9813(2): jnz 0x75(%rip)
9815(4): mov 0x10(%rbx),%rdi
9819(3): sub %rbp,%r8
981c(8): lea 0x0(,%r8,4),%rdx
9824(4): lea 0x0(%rdi,%rbp,4),%rsi
9828(5): call 0xffff8368(%rip)
982d(4): mov 0x8(%rbx),%rdi
9831(4): mov 0x30(%rbx),%rdx
9835(4): lea 0x0(%rdi,%rbp,1),%rsi
9839(3): sub %rbp,%rdx
983c(5): call 0xffff8354(%rip)
9841(4): mov 0x30(%rbx),%rax
9845(4): sub %rbp,0x38(%rbx)
9849(3): sub %rbp,%rax
984c(3): test %rax,%rax
984f(4): mov %rax,0x30(%rbx)
9853(2): jle 0x25(%rip)
9855(4): mov 0x18(%rbx),%rcx
9859(2): xor %eax,%eax
985b(4): lea 0x0(%rcx,%rbp,8),%rsi
985f(1): nop 
9860(4): mov 0x0(%rsi,%rax,8),%rdx
9864(3): sub %rbp,%rdx
9867(4): mov %rdx,0x0(%rcx,%rax,8)
986b(4): add $0x1,%rax
986f(4): cmp %rax,0x30(%rbx)
9873(2): jnle 0xffffffed(%rip)
9875(3): nop (%rax)
9878(7): movzx 0x8b(%rbx),%eax
987f(5): jmp 0xcd(%rip)
9884(4): nop 0x0(%rax)
9888(4): mov 0x50(%rbx),%rax
988c(7): mov $0x0,0x8c(%rbx)
9893(3): add %rbp,%rax
9896(3): sub %r15,%rax
9899(4): mov %rax,0x58(%rbx)
989d(4): mov 0x60(%rbx),%rax
98a1(3): add %rbp,%rax
98a4(3): sub %r15,%rax
98a7(3): test %r12,%r12
98aa(4): mov %rax,0x68(%rbx)
98ae(2): jle 0x25(%rip)
98b0(5): cmp %rbp,0xfffffff8(%r14,%r12,8)
98b5(2): jz 0x16(%rip)
98b7(2): jmp 0x1c(%rip)
98b9(7): nop 0x0(%rax)
98c0(5): cmp %rbp,0xfffffff8(%r14,%r13,8)
98c5(2): jnz 0xe(%rip)
98c7(4): sub $0x1,%r13
98cb(3): test %r13,%r13
98ce(3): mov %r13,%r12
98d1(2): jnz 0xffffffef(%rip)
98d3(3): cmp %r8,%r12
98d6(6): jnl 0x232(%rip)
98dc(4): mov 0x10(%rbx),%rax
98e0(2): jmp 0x15(%rip)
98e2(6): nop 0x0(%rax,%rax,1)
98e8(4): add $0x1,%r12
98ec(3): cmp %r8,%r12
98ef(6): jz 0x221(%rip)
98f5(5): cmp $0xff,0x0(%rax,%r12,4)
98fa(2): jz 0xffffffee(%rip)
98fc(4): mov 0x0(%r14,%r12,8),%rdx
9900(3): sub %rbp,%rdx
9903(4): cmp $0x0,%rdx
9907(4): mov %rdx,0x30(%rbx)
990b(2): jz 0x36(%rip)
990d(2): jle 0x22(%rip)
990f(4): mov 0x10(%rbx),%rax
9913(4): lea 0x0(%rax,%rdx,4),%rcx
9917(9): nop 0x0(%rax,%rax,1)
9920(6): mov $0xffffffff,(%rax)
9926(4): add $0x4,%rax
992a(3): cmp %rax,%rcx
992d(2): jnz 0xfffffff3(%rip)
992f(4): mov 0x8(%rbx),%rdi
9933(5): mov $0xff,%esi
9938(5): call 0xffff80d8(%rip)
993d(4): mov 0x30(%rbx),%rdx
9941(7): movzx 0x8b(%rbx),%eax
9948(4): mov %rdx,0x38(%rbx)
994c(2): test %al,%al
994e(6): jz 0xfffffc7c(%rip)
9954(5): jmp 0xfffffc7a(%rip)
9959(7): nop 0x0(%rax)
9960(4): mov 0x8(%rbx),%rdi
9964(3): mov %r8,%rdx
9967(4): lea 0x0(%rdi,%rbp,1),%rsi
996b(5): call 0xffff8225(%rip)
9970(7): movzx 0x8b(%rbx),%eax
9977(4): sub %rbp,0x30(%rbx)
997b(4): sub %rbp,0x38(%rbx)
997f(2): jmp 0xffffffcd(%rip)
9981(7): nop 0x0(%rax)
9988(3): mov (%rbx),%rcx
998b(3): mov %rbp,%rdi
998e(3): sub %rdx,%rdi
9991(3): mov %rdi,%rdx
9994(4): lea 0x0(%rcx,%r11,1),%r12
9998(3): add %r12,%rdx
999b(5): lea 0xffffffff(%r12,%rbp,1),%rsi
99a0(3): cmp %rdx,%rcx
99a3(4): cmovnae %rdx,%rcx
99a7(3): cmp %rsi,%rcx
99aa(2): jbe 0x1b(%rip)
99ac(5): jmp 0xfffffd25(%rip)
99b1(7): nop 0x0(%rax)
99b8(4): sub $0x1,%rsi
99bc(3): cmp %rsi,%rcx
99bf(6): jnbe 0xfffffd12(%rip)
99c5(3): movzx (%rsi),%edx
99c8(3): and $0xc0,%edx
99cb(3): cmp $0x80,%dl
99ce(2): jz 0xffffffea(%rip)
99d0(4): mov 0x58(%rbx),%rdx
99d4(4): mov 0x78(%rbx),%rcx
99d8(3): mov %rsi,%r14
99db(3): add %r12,%rdx
99de(3): sub %rsi,%rdx
99e1(3): test %rcx,%rcx
99e4(6): jnz 0x24e(%rip)
99ea(5): lea 0x24(%rsp),%r13
99ef(3): add %rbp,%r12
99f2(5): lea 0x28(%rsp),%rcx
99f7(3): sub %r14,%r12
99fa(5): mov %r10d,0xc(%rsp)
99ff(4): mov %r8,(%rsp)
9a03(3): mov %r13,%rdi
9a06(9): mov $0x0,0x28(%rsp)
9a0f(5): call 0xffffbe71(%rip)
9a14(3): cmp %rax,%r12
9a17(4): mov (%rsp),%r8
9a1b(5): mov 0xc(%rsp),%r10d
9a20(2): jnbe 0xc(%rip)
9a22(4): cmp $0xfffffffd,%rax
9a26(6): jbe 0x1cb(%rip)
9a2c(4): mov 0x28(%rbx),%r11
9a30(4): mov 0x38(%rbx),%rax
9a34(5): jmp 0xfffffc9d(%rip)
9a39(7): nop 0x0(%rax)
9a40(7): cmp $0x0,0x88(%rbx)
9a47(6): jnz 0xf9(%rip)
9a4d(4): mov 0x78(%rbx),%rcx
9a51(3): test %rcx,%rcx
9a54(6): jz 0xfffffbaf(%rip)
9a5a(4): cmp %rax,0x40(%rbx)
9a5e(4): mov 0x30(%rbx),%rdx
9a62(5): cmovng 0x40(%rbx),%rax
9a67(3): cmp %rdx,%rax
9a6a(2): jnle 0xe(%rip)
9a6c(2): jmp 0x2c(%rip)
9a6e(2): nop 
9a70(4): mov 0x28(%rbx),%r15
9a74(4): mov 0x78(%rbx),%rcx
9a78(3): mov (%rbx),%rsi
9a7b(3): add %rdx,%rsi
9a7e(5): movzx 0x0(%rsi,%r15,1),%esi
9a83(4): movzx 0x0(%rcx,%rsi,1),%esi
9a87(4): mov 0x8(%rbx),%rcx
9a8b(4): mov %sil,0x0(%rcx,%rdx,1)
9a8f(4): add $0x1,%rdx
9a93(3): cmp %rdx,%rax
9a96(2): jnz 0xffffffda(%rip)
9a98(4): mov %rdx,0x30(%rbx)
9a9c(4): mov %rdx,0x38(%rbx)
9aa0(5): jmp 0xfffffb63(%rip)
9aa5(3): nop (%rax)
9aa8(3): mov (%rbx),%rax
9aab(4): mov 0x78(%rbx),%rdx
9aaf(3): add %rbp,%rax
9ab2(3): test %rdx,%rdx
9ab5(6): movzx 0xffffffff(%r11,%rax,1),%eax
9abb(8): mov $0x0,0x38(%rbx)
9ac3(2): jz 0x6(%rip)
9ac5(4): movzx 0x0(%rdx,%rax,1),%eax
9ac9(7): mov 0x80(%rbx),%rcx
9ad0(3): movzx %al,%edx
9ad3(4): sar $0x6,%rdx
9ad7(4): mov 0x0(%rcx,%rdx,8),%rcx
9adb(5): mov $0x1,%edx
9ae0(4): bt %rax,%rcx
9ae4(2): jb 0x1c(%rip)
9ae6(2): xor %edx,%edx
9ae8(2): cmp $0xa,%al
9aea(2): jnz 0x16(%rip)
9aec(2): xor %edx,%edx
9aee(7): cmp $0x0,0x8d(%rbx)
9af5(3): setnz %dl
9af8(2): add %edx,%edx
9afa(6): nop 0x0(%rax,%rax,1)
9b00(3): mov %edx,0x70(%rbx)
9b03(5): jmp 0xfffffd75(%rip)
9b08(6): jnz 0xfffffdf4(%rip)
9b0e(2): nop 
9b10(8): mov $0x0,0x30(%rbx)
9b18(2): xor %edx,%edx
9b1a(5): jmp 0xfffffe27(%rip)
9b1f(3): sub %r15,%r14
9b22(3): mov %r14,%r12
9b25(4): mov %r14,0x30(%rbx)
9b29(4): lea 0xffffffff(%r8),%rsi
9b2d(3): mov %r10d,%edx
9b30(3): mov %rbx,%rdi
9b33(5): call 0xfffff6cd(%rip)
9b38(3): mov %eax,0x70(%rbx)
9b3b(5): jmp 0xfffffc3f(%rip)
9b40(3): mov %rbx,%rdi
9b43(5): call 0xffffc5bd(%rip)
9b48(5): jmp 0xfffffabb(%rip)
9b4d(4): mov 0x50(%rbx),%rdx
9b51(7): mov $0x0,0x8c(%rbx)
9b58(3): add %rbp,%rdx
9b5b(3): sub %r15,%rdx
9b5e(4): mov %rdx,0x58(%rbx)
9b62(4): mov 0x60(%rbx),%rdx
9b66(3): add %rbp,%rdx
9b69(3): sub %r15,%rdx
9b6c(4): mov %rdx,0x68(%rbx)
9b70(5): jmp 0xfffffb38(%rip)
9b75(3): test %rax,%rax
9b78(2): jz 0x75(%rip)
9b7a(3): test %r12,%r12
9b7d(2): jz 0x70(%rip)
9b7f(3): mov (%rbx),%rax
9b82(5): movzx 0x0(%rax,%r14,1),%edx
9b87(5): mov 0x18(%rsp),%rax
9b8c(4): mov %rax,0x20(%rbx)
9b90(5): mov $0x1,%eax
9b95(5): jmp 0xfffffba5(%rip)
9b9a(2): jle 0x1d(%rip)
9b9c(4): mov 0x10(%rbx),%rax
9ba0(4): lea 0x0(%rax,%r12,4),%rdx
9ba4(4): nop 0x0(%rax)
9ba8(6): mov $0xffffffff,(%rax)
9bae(4): add $0x4,%rax
9bb2(3): cmp %rax,%rdx
9bb5(2): jnz 0xfffffff3(%rip)
9bb7(7): cmp $0x0,0x8b(%rbx)
9bbe(2): jnz 0x5a(%rip)
9bc0(4): mov %r12,0x38(%rbx)
9bc4(5): jmp 0xfffffa06(%rip)
9bc9(2): mov %edx,%edi
9bcb(3): mov %edx,(%rsp)
9bce(5): call 0xffff7ee2(%rip)
9bd3(2): test %eax,%eax
9bd5(2): jnz 0xe(%rip)
9bd7(3): mov (%rsp),%edx
9bda(3): cmp $0x5f,%edx
9bdd(6): jnz 0xfffffb85(%rip)
9be3(5): mov $0x1,%eax
9be8(5): jmp 0xfffffb8f(%rip)
9bed(2): xor %edx,%edx
9bef(2): jmp 0xffffff98(%rip)
9bf1(4): mov 0x24(%rsp),%edx
9bf5(3): sub %r12,%rax
9bf8(8): mov $0x0,0x20(%rbx)
9c00(3): mov %rax,%r12
9c03(4): mov %rax,0x30(%rbx)
9c07(3): cmp $0xff,%edx
9c0a(6): jnz 0xfffffb4b(%rip)
9c10(5): jmp 0xfffffe1c(%rip)
9c15(3): nop (%rax)
9c18(4): mov 0x8(%rbx),%rdi
9c1c(3): mov %r12,%rdx
9c1f(5): mov $0xff,%esi
9c24(5): call 0xffff7dec(%rip)
9c29(4): mov 0x30(%rbx),%r12
9c2d(5): jmp 0xfffffb57(%rip)
9c32(4): cmp $0x6,%rdx
9c36(5): mov $0x6,%edi
9c3b(5): lea 0x32(%rsp),%r11
9c40(4): cmovng %rdx,%rdi
9c44(3): sub $0x1,%edi
9c47(2): test %edi,%edi
9c49(3): movsxd %edi,%rax
9c4c(2): js 0x16(%rip)
9c4e(4): movzx 0x0(%rsi,%rax,1),%edi
9c52(4): movzx 0x0(%rcx,%rdi,1),%edi
9c56(4): mov %dil,0x0(%r11,%rax,1)
9c5a(4): sub $0x1,%rax
9c5e(2): test %eax,%eax
9c60(2): jns 0xffffffee(%rip)
9c62(3): mov %r11,%rsi
9c65(5): jmp 0xfffffd85(%rip)
9c6a(5): call 0xffff7d26(%rip)

"sub_epsilon_src_nodes" :
9c70(2): push %r15
9c72(2): push %r14
9c74(3): mov %rdx,%r14
9c77(2): push %r13
9c79(2): push %r12
9c7b(4): lea 0x0(%rsi,%rsi,2),%rdx
9c7f(1): push %rbp
9c80(1): push %rbx
9c81(4): pxor %xmm0,%xmm0
9c85(4): sub $0x48,%rsp
9c89(9): mov $0x28,%rax
9c92(5): mov %rax,0x38(%rsp)
9c97(2): xor %eax,%eax
9c99(4): mov 0x38(%rdi),%rax
9c9d(9): mov $0x0,0x30(%rsp)
9ca6(5): movaps %xmm0,0x20(%rsp)
9cab(5): mov %rcx,0x10(%rsp)
9cb0(4): lea 0x0(%rax,%rdx,8),%rbp
9cb4(4): mov 0x8(%rbp),%r10
9cb8(3): test %r10,%r10
9cbb(6): jle 0x1e7(%rip)
9cc1(5): lea 0x20(%rsp),%rax
9cc6(3): mov %rdi,%r12
9cc9(3): mov %rsi,%r13
9ccc(2): xor %ebx,%ebx
9cce(5): mov %rax,0x18(%rsp)
9cd3(2): jmp 0x5a(%rip)
9cd5(3): nop (%rax)
9cd8(3): test %rax,%rax
9cdb(6): jnz 0xdd(%rip)
9ce1(4): mov 0x8(%r14),%rdi
9ce5(4): lea 0x10(%r14),%rsi
9ce9(3): mov %r8,%rdx
9cec(5): call 0xffffd734(%rip)
9cf1(3): test %rax,%rax
9cf4(6): jz 0xc4(%rip)
9cfa(5): mov 0x38(%r12),%rdx
9cff(5): mov 0x10(%rsp),%rsi
9d04(5): mov 0x18(%rsp),%rdi
9d09(3): add %r9,%rdx
9d0c(5): call 0xffffe224(%rip)
9d11(2): test %eax,%eax
9d13(6): jnz 0x17d(%rip)
9d19(4): mov 0x8(%rbp),%r10
9d1d(3): nop (%rax)
9d20(4): add $0x1,%rbx
9d24(3): cmp %rbx,%r10
9d27(6): jle 0xd9(%rip)
9d2d(4): mov 0x10(%rbp),%rax
9d31(4): mov 0x0(%rax,%rbx,8),%rax
9d35(3): cmp %rax,%r13
9d38(2): jz 0xffffffe8(%rip)
9d3a(3): mov %rax,%rdx
9d3d(4): shl/sal $0x4,%rdx
9d41(4): add (%r12),%rdx
9d45(4): test $0x8,0x8(%rdx)
9d49(2): jz 0xffffffd7(%rip)
9d4b(4): lea 0x0(%rax,%rax,2),%r9
9d4f(5): mov 0x28(%r12),%rcx
9d54(4): lea 0x10(%rbp),%r11
9d58(3): mov %r10,%rdi
9d5b(4): shl/sal $0x3,%r9
9d5f(3): mov %r11,%rsi
9d62(3): add %r9,%rcx
9d65(4): mov 0x10(%rcx),%r15
9d69(5): mov %rcx,0x8(%rsp)
9d6e(3): mov (%r15),%r8
9d71(3): mov %r8,%rdx
9d74(4): mov %r8,(%rsp)
9d78(5): call 0xffffd6a8(%rip)
9d7d(5): mov 0x8(%rsp),%rcx
9d82(4): mov (%rsp),%r8
9d86(5): cmp $0x1,0x8(%rcx)
9d8b(6): jnle 0xffffff4d(%rip)
9d91(3): test %rax,%rax
9d94(2): jnz 0xffffff8c(%rip)
9d96(4): mov 0x8(%r14),%rdi
9d9a(4): lea 0x10(%r14),%rsi
9d9e(3): mov %r8,%rdx
9da1(5): call 0xffffd67f(%rip)
9da6(3): test %rax,%rax
9da9(6): jnz 0xffffff51(%rip)
9daf(5): jmp 0xffffff71(%rip)
9db4(4): nop 0x0(%rax)
9db8(4): mov 0x8(%r15),%r15
9dbc(3): test %r15,%r15
9dbf(6): jle 0xffffff61(%rip)
9dc5(3): mov %r15,%rdx
9dc8(3): mov %r11,%rsi
9dcb(3): mov %r10,%rdi
9dce(5): call 0xffffd652(%rip)
9dd3(3): test %rax,%rax
9dd6(6): jnz 0xffffff4a(%rip)
9ddc(4): mov 0x8(%r14),%rdi
9de0(4): lea 0x10(%r14),%rsi
9de4(5): call 0xffffd63c(%rip)
9de9(3): test %rax,%rax
9dec(6): jz 0xffffff34(%rip)
9df2(5): jmp 0xffffff08(%rip)
9df7(9): nop 0x0(%rax,%rax,1)
9e00(3): xor %r9d,%r9d
9e03(3): test %r10,%r10
9e06(5): lea 0x30(%rsp),%r11
9e0b(2): jle 0x51(%rip)
9e0d(3): nop (%rax)
9e10(4): mov 0x10(%rbp),%rax
9e14(5): mov 0x28(%rsp),%rdi
9e19(3): mov %r11,%rsi
9e1c(4): mov 0x0(%rax,%r9,8),%r10
9e20(3): mov %r10,%rdx
9e23(5): call 0xffffd5fd(%rip)
9e28(3): test %rax,%rax
9e2b(2): jnz 0x27(%rip)
9e2d(4): lea 0x10(%r14),%rbx
9e31(4): mov 0x8(%r14),%rdi
9e35(3): mov %rbx,%rsi
9e38(5): call 0xffffd5e8(%rip)
9e3d(4): sub $0x1,%rax
9e41(3): mov %rax,%rdx
9e44(2): js 0xe(%rip)
9e46(4): lea 0x8(%r14),%rdi
9e4a(3): mov %rbx,%rsi
9e4d(5): call 0xffffd753(%rip)
9e52(4): add $0x1,%r9
9e56(4): cmp %r9,0x8(%rbp)
9e5a(2): jnle 0xffffffb6(%rip)
9e5c(5): mov 0x30(%rsp),%rdi
9e61(5): call 0xffff7a1f(%rip)
9e66(2): xor %eax,%eax
9e68(5): mov 0x38(%rsp),%rsi
9e6d(9): xor $0x28,%rsi
9e76(2): jnz 0x30(%rip)
9e78(4): add $0x48,%rsp
9e7c(1): pop %rbx
9e7d(1): pop %rbp
9e7e(2): pop %r12
9e80(2): pop %r13
9e82(2): pop %r14
9e84(2): pop %r15
9e86(1): ret near (%rsp)
9e87(9): nop 0x0(%rax,%rax,1)
9e90(5): mov 0x30(%rsp),%rdi
9e95(3): mov %eax,(%rsp)
9e98(5): call 0xffff79e8(%rip)
9e9d(3): mov (%rsp),%eax
9ea0(2): jmp 0xffffffc8(%rip)
9ea2(2): xor %edi,%edi
9ea4(2): jmp 0xffffffbd(%rip)
9ea6(5): call 0xffff7aea(%rip)

"build_trtable" :
9eb0(2): push %r15
9eb2(2): push %r14
9eb4(3): mov %rdi,%r15
9eb7(2): push %r13
9eb9(2): push %r12
9ebb(5): mov $0x3800,%edi
9ec0(1): push %rbp
9ec1(1): push %rbx
9ec2(7): sub $0x108,%rsp
9ec9(9): mov $0x28,%rax
9ed2(8): mov %rax,0xf8(%rsp)
9eda(2): xor %eax,%eax
9edc(5): mov %rsi,0x8(%rsp)
9ee1(5): call 0xffff7bdf(%rip)
9ee6(3): test %rax,%rax
9ee9(5): mov %rax,0x18(%rsp)
9eee(6): jz 0x3d2(%rip)
9ef4(5): mov 0x18(%rsp),%rax
9ef9(4): pxor %xmm0,%xmm0
9efd(7): lea 0x1800(%rax),%rbx
9f04(5): mov 0x8(%rsp),%rax
9f09(8): movaps %xmm0,0x90(%rsp)
9f11(5): mov %rbx,0x40(%rsp)
9f16(8): movaps %xmm0,0xa0(%rsp)
9f1e(5): cmp $0x0,0x10(%rax)
9f23(8): mov $0x0,0x58(%rax)
9f2b(8): mov $0x0,0x60(%rax)
9f33(6): jle 0xa77(%rip)
9f39(5): mov %r15,0x30(%rsp)
9f3e(2): xor %ebp,%ebp
9f40(9): mov $0x0,0x10(%rsp)
9f49(3): mov %rbx,%r15
9f4c(5): mov 0x10(%rsp),%rbx
9f51(8): lea 0x0(,%rbx,8),%rax
9f59(5): mov %rax,0x20(%rsp)
9f5e(5): mov 0x8(%rsp),%rax
9f63(4): mov 0x18(%rax),%rax
9f67(4): mov 0x0(%rax,%rbx,8),%r13
9f6b(5): mov 0x30(%rsp),%rax
9f70(4): shl/sal $0x4,%r13
9f74(3): add (%rax),%r13
9f77(5): movzx 0x8(%r13),%r14d
9f7c(4): mov 0x8(%r13),%eax
9f80(3): shr $0x8,%eax
9f83(4): and $0x3ff,%ax
9f87(4): cmp $0x1,%r14d
9f8b(6): jz 0x365(%rip)
9f91(4): cmp $0x3,%r14d
9f95(6): jz 0x7cb(%rip)
9f9b(4): cmp $0x5,%r14d
9f9f(6): jz 0x681(%rip)
9fa5(4): cmp $0x7,%r14d
9fa9(6): jz 0x7e0(%rip)
9faf(5): mov 0x8(%rsp),%rbx
9fb4(6): add $0x1,0x10(%rsp)
9fba(5): mov 0x10(%rsp),%rax
9fbf(4): cmp 0x10(%rbx),%rax
9fc3(2): jl 0xffffff89(%rip)
9fc5(3): test %rbp,%rbp
9fc8(5): mov 0x30(%rsp),%r15
9fcd(6): jle 0xa5c(%rip)
9fd3(4): lea 0x1(%rbp),%rbx
9fd7(9): mov $0x0,0x78(%rsp)
9fe0(5): mov %rbx,0x70(%rsp)
9fe5(4): shl/sal $0x3,%rbx
9fe9(3): mov %rbx,%rdi
9fec(5): call 0xffff7ad4(%rip)
9ff1(3): test %rax,%rax
9ff4(3): mov %rax,%r12
9ff7(8): mov %rax,0x80(%rsp)
9fff(6): jz 0x800(%rip)
a005(a): mov $0x768614336404564053,%rax
a00f(8): mov $0x0,0x6c(%rsp)
a017(3): cmp %rax,%rbp
a01a(6): jnle 0x7e5(%rip)
a020(5): lea 0x0(%rbp,%rbp,2),%rax
a025(4): shl/sal $0x3,%rax
a029(3): mov %rax,%rdi
a02c(5): mov %rax,0x58(%rsp)
a031(5): call 0xffff7a8f(%rip)
a036(3): test %rax,%rax
a039(5): mov %rax,0x10(%rsp)
a03e(6): jz 0x7c1(%rip)
a044(5): mov 0x10(%rsp),%rax
a049(4): sub $0x8,%rbx
a04d(5): mov 0x40(%rsp),%r12
a052(4): pxor %xmm0,%xmm0
a056(5): lea 0x70(%rsp),%r14
a05b(5): mov %rbp,0x20(%rsp)
a060(5): mov $0x0,0x4f(%rsp)
a065(3): mov %r15,%rbp
a068(3): add %rbx,%rax
a06b(5): mov %r12,0x50(%rsp)
a070(3): add %rax,%rbx
a073(5): mov %rax,0x30(%rsp)
a078(5): mov 0x18(%rsp),%rax
a07d(8): movaps %xmm0,0xd0(%rsp)
a085(5): mov %rbx,0x38(%rsp)
a08a(2): xor %ebx,%ebx
a08c(4): lea 0x8(%rax),%r13
a090(5): lea 0x6c(%rsp),%rax
a095(8): movaps %xmm0,0xe0(%rsp)
a09d(5): mov %rax,0x28(%rsp)
a0a2(9): mov $0x0,0x78(%rsp)
a0ab(5): cmp $0x0,0x0(%r13)
a0b0(2): jle 0x48(%rip)
a0b2(3): xor %r15d,%r15d
a0b5(3): nop (%rax)
a0b8(4): mov 0x8(%r13),%rax
a0bc(4): mov 0x0(%rax,%r15,8),%rdx
a0c0(4): mov 0x18(%rbp),%rax
a0c4(4): mov 0x0(%rax,%rdx,8),%rax
a0c8(4): cmp $0xffffffff,%rax
a0cc(2): jz 0x22(%rip)
a0ce(4): lea 0x0(%rax,%rax,2),%rdx
a0d2(4): mov 0x30(%rbp),%rax
a0d6(3): mov %r14,%rdi
a0d9(4): lea 0x0(%rax,%rdx,8),%rsi
a0dd(5): call 0xffffd863(%rip)
a0e2(2): test %eax,%eax
a0e4(4): mov %eax,0x6c(%rsp)
a0e8(6): jnz 0x700(%rip)
a0ee(4): add $0x1,%r15
a0f2(4): cmp %r15,0x0(%r13)
a0f6(2): jnle 0xffffffc2(%rip)
a0f8(5): mov 0x28(%rsp),%rdi
a0fd(2): xor %ecx,%ecx
a0ff(3): mov %rbp,%rsi
a102(3): mov %r14,%rdx
a105(5): call 0xffffe66b(%rip)
a10a(5): mov 0x10(%rsp),%rsi
a10f(3): test %rax,%rax
a112(4): mov %rax,0x0(%rsi,%rbx,8)
a116(6): jz 0x7b2(%rip)
a11c(4): cmp $0x0,0x68(%rax)
a120(6): js 0x720(%rip)
a126(5): mov 0x30(%rsp),%rdi
a12b(5): mov 0x38(%rsp),%rsi
a130(4): mov %rax,0x0(%rdi,%rbx,8)
a134(5): mov 0x10(%rsp),%rax
a139(4): mov 0x0(%rax,%rbx,8),%rax
a13d(4): mov %rax,0x0(%rsi,%rbx,8)
a141(8): lea 0xd0(%rsp),%rdx
a149(2): xor %eax,%eax
a14b(4): mov 0x0(%rdx,%rax,1),%rcx
a14f(4): or 0x0(%r12,%rax,1),%rcx
a153(4): mov %rcx,0x0(%rdx,%rax,1)
a157(4): add $0x8,%rax
a15b(4): cmp $0x20,%rax
a15f(2): jnz 0xffffffec(%rip)
a161(4): add $0x1,%rbx
a165(4): add $0x18,%r13
a169(4): add $0x20,%r12
a16d(5): cmp 0x20(%rsp),%rbx
a172(6): jnz 0xffffff30(%rip)
a178(5): cmp $0x0,0x4f(%rsp)
a17d(3): mov %rbp,%r15
a180(5): mov 0x20(%rsp),%rbp
a185(5): mov %rdx,0x20(%rsp)
a18a(6): jnz 0x74f(%rip)
a190(5): mov $0x100,%esi
a195(5): mov $0x8,%edi
a19a(5): call 0xffff78d6(%rip)
a19f(3): mov %rax,%r11
a1a2(5): mov 0x8(%rsp),%rax
a1a7(3): test %r11,%r11
a1aa(4): mov %r11,0x58(%rax)
a1ae(6): jz 0x63f(%rip)
a1b4(5): mov 0x40(%rsp),%rbx
a1b9(5): mov 0x10(%rsp),%r12
a1be(3): xor %r9d,%r9d
a1c1(5): mov 0x30(%rsp),%r13
a1c6(5): mov 0x20(%rsp),%rdx
a1cb(4): add $0x20,%rbx
a1cf(4): mov 0x0(%rdx,%r9,1),%rax
a1d3(3): test %rax,%rax
a1d6(2): jz 0x2e(%rip)
a1d8(3): mov %r9,%rsi
a1db(5): mov $0x1,%ecx
a1e0(4): shl/sal $0x6,%rsi
a1e4(3): add %r11,%rsi
a1e7(9): nop 0x0(%rax,%rax,1)
a1f0(2): test $0x1,%al
a1f2(6): jnz 0x766(%rip)
a1f8(3): add %rcx,%rcx
a1fb(4): add $0x8,%rsi
a1ff(3): shr $0x1,%rax
a202(2): jnz 0xffffffee(%rip)
a204(4): add $0x8,%r9
a208(4): cmp $0x20,%r9
a20c(2): jnz 0xffffffc3(%rip)
a20e(8): test $0x4,0xd1(%rsp)
a216(2): jz 0x3c(%rip)
a218(2): xor %eax,%eax
a21a(5): mov 0x50(%rsp),%rdx
a21f(2): jmp 0xf(%rip)
a221(4): add $0x1,%rax
a225(4): add $0x20,%rdx
a229(3): cmp %rbp,%rax
a22c(2): jz 0x26(%rip)
a22e(7): test $0x400,(%rdx)
a235(2): jz 0xffffffec(%rip)
a237(5): mov 0x38(%rsp),%rbx
a23c(5): cmp $0x0,0x4f(%rsp)
a241(4): mov 0x0(%rbx,%rax,8),%rax
a245(4): mov %rax,0x50(%r11)
a249(2): jz 0x9(%rip)
a24b(7): mov %rax,0x850(%r11)
a252(5): mov 0x10(%rsp),%rdi
a257(5): call 0xffff7629(%rip)
a25c(8): mov 0x80(%rsp),%rdi
a264(5): call 0xffff761c(%rip)
a269(5): mov 0x18(%rsp),%rax
a26e(5): mov 0x58(%rsp),%rbx
a273(4): lea 0x10(%rax),%rbp
a277(3): add %rbp,%rbx
a27a(4): mov 0x0(%rbp),%rdi
a27e(4): add $0x18,%rbp
a282(5): call 0xffff75fe(%rip)
a287(3): cmp %rbp,%rbx
a28a(2): jnz 0xfffffff0(%rip)
a28c(5): mov 0x18(%rsp),%rdi
a291(5): call 0xffff75ef(%rip)
a296(5): mov $0x1,%eax
a29b(2): jmp 0x27(%rip)
a29d(3): test %rbp,%rbp
a2a0(8): mov $0x0,0x8(%rbx)
a2a8(7): mov $0x0,(%rbx)
a2af(6): jnz 0x331(%rip)
a2b5(5): mov 0x18(%rsp),%rdi
a2ba(5): call 0xffff75c6(%rip)
a2bf(1): nop 
a2c0(2): xor %eax,%eax
a2c2(8): mov 0xf8(%rsp),%rbx
a2ca(9): xor $0x28,%rbx
a2d3(6): jnz 0x751(%rip)
a2d9(7): add $0x108,%rsp
a2e0(1): pop %rbx
a2e1(1): pop %rbp
a2e2(2): pop %r12
a2e4(2): pop %r13
a2e6(2): pop %r14
a2e8(2): pop %r15
a2ea(1): ret near (%rsp)
a2eb(5): nop 0x0(%rax,%rax,1)
a2f0(5): movzx 0x0(%r13),%ecx
a2f5(8): lea 0x90(%rsp),%r12
a2fd(5): mov $0x1,%edi
a302(3): mov %rcx,%rdx
a305(3): and $0x3f,%ecx
a308(4): shr $0x3,%rdx
a30c(3): shl/sal %cl,%rdi
a30f(3): and $0x18,%edx
a312(4): or %rdi,0x0(%r12,%rdx,1)
a316(3): test %ax,%ax
a319(6): jz 0xc7(%rip)
a31f(2): test $0x20,%al
a321(6): jnz 0x36f(%rip)
a327(2): test $0x80,%al
a329(6): jnz 0x29b(%rip)
a32f(2): test $0x4,%al
a331(2): jz 0x54(%rip)
a333(4): cmp $0x1,%r14d
a337(6): jz 0x3de(%rip)
a33d(5): mov 0x30(%rsp),%r8
a342(8): cmp $0x1,0xb4(%r8)
a34a(6): jle 0x458(%rip)
a350(4): mov 0x78(%r8),%rdi
a354(2): xor %esi,%esi
a356(2): xor %ecx,%ecx
a358(4): mov 0x0(%rdi,%rcx,8),%rdx
a35c(3): not %rdx
a35f(8): or 0xb8(%r8,%rcx,8),%rdx
a367(4): and 0x0(%r12,%rcx,8),%rdx
a36b(4): mov %rdx,0x0(%r12,%rcx,8)
a36f(4): add $0x1,%rcx
a373(3): or %rdx,%rsi
a376(4): cmp $0x4,%rcx
a37a(2): jnz 0xffffffde(%rip)
a37c(3): test %rsi,%rsi
a37f(6): jz 0xfffffc30(%rip)
a385(2): test $0x8,%al
a387(2): jz 0x59(%rip)
a389(4): cmp $0x1,%r14d
a38d(6): jz 0x334(%rip)
a393(5): mov 0x30(%rsp),%rdi
a398(7): cmp $0x1,0xb4(%rdi)
a39f(6): jle 0x33f(%rip)
a3a5(4): mov 0x78(%rdi),%rsi
a3a9(2): xor %ecx,%ecx
a3ab(2): xor %edx,%edx
a3ad(8): mov 0xb8(%rdi,%rdx,8),%rax
a3b5(4): and 0x0(%rsi,%rdx,8),%rax
a3b9(3): not %rax
a3bc(4): and 0x0(%r12,%rdx,8),%rax
a3c0(4): mov %rax,0x0(%r12,%rdx,8)
a3c4(4): add $0x1,%rdx
a3c8(3): or %rax,%rcx
a3cb(4): cmp $0x4,%rdx
a3cf(2): jnz 0xffffffde(%rip)
a3d1(3): test %rcx,%rcx
a3d4(6): jz 0xfffffbdb(%rip)
a3da(6): nop 0x0(%rax,%rax,1)
a3e0(2): xor %ebx,%ebx
a3e2(3): test %rbp,%rbp
a3e5(6): jle 0x166(%rip)
a3eb(5): mov %r13,0x28(%rsp)
a3f0(3): mov %r15,%r13
a3f3(5): nop 0x0(%rax,%rax,1)
a3f8(3): mov %rbx,%r10
a3fb(4): shl/sal $0x5,%r10
a3ff(4): cmp $0x1,%r14d
a403(2): jnz 0x25(%rip)
a405(5): mov 0x28(%rsp),%rax
a40a(3): movzx (%rax),%edx
a40d(3): mov %rdx,%rax
a410(4): shr $0x3,%rax
a414(3): and $0x18,%eax
a417(3): add %r13,%rax
a41a(4): mov 0x0(%rax,%r10,1),%rax
a41e(4): bt %rdx,%rax
a422(6): jnb 0x119(%rip)
a428(5): lea 0x0(%r13,%r10,1),%rdi
a42d(8): lea 0xb0(%rsp),%rsi
a435(2): xor %ecx,%ecx
a437(2): xor %eax,%eax
a439(4): mov 0x0(%r12,%rax,8),%rdx
a43d(4): and 0x0(%rdi,%rax,8),%rdx
a441(4): mov %rdx,0x0(%rsi,%rax,8)
a445(4): add $0x1,%rax
a449(3): or %rdx,%rcx
a44c(4): cmp $0x4,%rax
a450(2): jnz 0xffffffe9(%rip)
a452(3): test %rcx,%rcx
a455(6): jz 0xe6(%rip)
a45b(8): lea 0xd0(%rsp),%r11
a463(3): xor %r15d,%r15d
a466(3): xor %r9d,%r9d
a469(2): xor %ecx,%ecx
a46b(4): mov 0x0(%r12,%rcx,8),%rsi
a46f(4): mov 0x0(%rdi,%rcx,8),%rax
a473(3): mov %rsi,%rdx
a476(3): not %rdx
a479(3): and %rax,%rdx
a47c(3): not %rax
a47f(3): and %rsi,%rax
a482(4): mov %rdx,0x0(%r11,%rcx,8)
a486(3): or %rdx,%r9
a489(4): mov %rax,0x0(%r12,%rcx,8)
a48d(4): add $0x1,%rcx
a491(3): or %rax,%r15
a494(4): cmp $0x4,%rcx
a498(2): jnz 0xffffffd3(%rip)
a49a(5): mov 0x18(%rsp),%rdi
a49f(4): lea 0x0(%rbx,%rbx,2),%rax
a4a3(3): test %r9,%r9
a4a6(4): lea 0x0(%rdi,%rax,8),%rdx
a4aa(2): jz 0x6a(%rip)
a4ac(3): mov %rbp,%rax
a4af(9): movdqa 0xd0(%rsp),%xmm0
a4b8(4): shl/sal $0x5,%rax
a4bc(3): mov %rdx,%rsi
a4bf(5): mov %rdx,0x38(%rsp)
a4c4(3): add %r13,%rax
a4c7(3): movups %xmm0,(%rax)
a4ca(9): movdqa 0xe0(%rsp),%xmm0
a4d3(4): movups %xmm0,0x10(%rax)
a4d7(5): lea 0x0(%rbp,%rbp,2),%rax
a4dc(4): lea 0x0(%rdi,%rax,8),%rdi
a4e0(9): movdqa 0xb0(%rsp),%xmm0
a4e9(6): movups %xmm0,0x0(%r13,%r10,1)
a4ef(9): movdqa 0xc0(%rsp),%xmm0
a4f8(6): movups %xmm0,0x10(%r13,%r10,1)
a4fe(5): call 0xffffe082(%rip)
a503(2): test %eax,%eax
a505(6): jnz 0xdb(%rip)
a50b(5): mov 0x38(%rsp),%rdx
a510(4): add $0x1,%rbp
a514(5): mov 0x8(%rsp),%rax
a519(5): mov 0x20(%rsp),%rsi
a51e(3): mov %rdx,%rdi
a521(4): mov 0x18(%rax),%rax
a525(4): mov 0x0(%rax,%rsi,1),%rsi
a529(5): call 0xffffb9b7(%rip)
a52e(2): test %al,%al
a530(6): jz 0xb0(%rip)
a536(3): test %r15,%r15
a539(2): jz 0xf(%rip)
a53b(4): add $0x1,%rbx
a53f(3): cmp %rbp,%rbx
a542(6): jl 0xfffffeb6(%rip)
a548(3): mov %r13,%r15
a54b(3): cmp %rbx,%rbp
a54e(6): jnz 0xfffffa61(%rip)
a554(3): mov %rbp,%rax
a557(9): movdqa 0x90(%rsp),%xmm0
a560(4): shl/sal $0x5,%rax
a564(5): mov 0x20(%rsp),%rbx
a569(5): mov $0x8,%edi
a56e(3): add %r15,%rax
a571(3): movups %xmm0,(%rax)
a574(9): movdqa 0xa0(%rsp),%xmm0
a57d(4): movups %xmm0,0x10(%rax)
a581(5): mov 0x8(%rsp),%rax
a586(4): mov 0x18(%rax),%rax
a58a(4): mov 0x0(%rax,%rbx,1),%r13
a58e(5): mov 0x18(%rsp),%rbx
a593(5): lea 0x0(%rbp,%rbp,2),%rax
a598(4): lea 0x0(%rbx,%rax,8),%rbx
a59c(7): mov $0x1,(%rbx)
a5a3(8): mov $0x1,0x8(%rbx)
a5ab(5): call 0xffff7515(%rip)
a5b0(3): test %rax,%rax
a5b3(4): mov %rax,0x10(%rbx)
a5b7(6): jz 0xfffffce6(%rip)
a5bd(3): mov %r13,(%rax)
a5c0(4): add $0x1,%rbp
a5c4(4): pxor %xmm0,%xmm0
a5c8(5): movaps %xmm0,(%r12)
a5cd(6): movaps %xmm0,0x10(%r12)
a5d3(5): jmp 0xfffff9dc(%rip)
a5d8(8): nop 0x0(%rax,%rax,1)
a5e0(5): mov 0x18(%rsp),%rax
a5e5(4): lea 0x10(%rax),%rbx
a5e9(5): lea 0x0(%rbp,%rbp,2),%rax
a5ee(4): lea 0x0(%rbx,%rax,8),%rbp
a5f2(6): nop 0x0(%rax,%rax,1)
a5f8(3): mov (%rbx),%rdi
a5fb(4): add $0x18,%rbx
a5ff(5): call 0xffff7281(%rip)
a604(3): cmp %rbx,%rbp
a607(2): jnz 0xfffffff1(%rip)
a609(5): mov 0x18(%rsp),%rdi
a60e(5): call 0xffff7272(%rip)
a613(5): jmp 0xfffffcad(%rip)
a618(8): nop 0x0(%rax,%rax,1)
a620(5): mov 0x30(%rsp),%rsi
a625(7): cmp $0x1,0xb4(%rsi)
a62c(6): jle 0x109(%rip)
a632(4): mov 0x78(%rsi),%rsi
a636(8): lea 0x90(%rsp),%r12
a63e(2): xor %edx,%edx
a640(4): mov 0x0(%r12,%rdx,1),%rcx
a644(4): or 0x0(%rsi,%rdx,1),%rcx
a648(4): mov %rcx,0x0(%r12,%rdx,1)
a64c(4): add $0x8,%rdx
a650(4): cmp $0x20,%rdx
a654(2): jnz 0xffffffec(%rip)
a656(5): mov 0x30(%rsp),%rbx
a65b(7): mov 0xd8(%rbx),%rdx
a662(3): test $0x40,%dl
a665(2): jnz 0xe(%rip)
a667(c): and $0xfffffbff,0x90(%rsp)
a673(6): and $0x80,%edx
a679(6): jz 0xfffffc9d(%rip)
a67f(9): and $0xfffffffe,0x90(%rsp)
a688(5): jmp 0xfffffc8e(%rip)
a68d(3): nop (%rax)
a690(8): mov 0x90(%rsp),%rdx
a698(4): pxor %xmm0,%xmm0
a69c(3): and $0x4,%dh
a69f(5): movaps %xmm0,(%r12)
a6a4(6): movaps %xmm0,0x10(%r12)
a6aa(6): jz 0xfffff905(%rip)
a6b0(c): mov $0x400,0x90(%rsp)
a6bc(5): jmp 0xfffffc6b(%rip)
a6c1(5): test $0x40,0xa(%r13)
a6c6(6): jnz 0xfffffefe(%rip)
a6cc(5): mov 0x30(%rsp),%rdi
a6d1(7): cmp $0x1,0xb4(%rdi)
a6d8(6): jnle 0xfffffccd(%rip)
a6de(5): mov 0x30(%rsp),%rsi
a6e3(2): xor %ecx,%ecx
a6e5(2): xor %edx,%edx
a6e7(8): mov 0xb8(%rsi,%rdx,8),%rax
a6ef(3): not %rax
a6f2(4): and 0x0(%r12,%rdx,8),%rax
a6f6(4): mov %rax,0x0(%r12,%rdx,8)
a6fa(4): add $0x1,%rdx
a6fe(3): or %rax,%rcx
a701(4): cmp $0x4,%rdx
a705(2): jnz 0xffffffe2(%rip)
a707(3): test %rcx,%rcx
a70a(6): jnz 0xfffffcd6(%rip)
a710(5): jmp 0xfffff89f(%rip)
a715(5): test $0x40,0xa(%r13)
a71a(6): jz 0xfffffeaa(%rip)
a720(5): mov 0x30(%rsp),%r8
a725(8): cmp $0x1,0xb4(%r8)
a72d(6): jnle 0xfffffc23(%rip)
a733(2): jmp 0x6f(%rip)
a735(4): pcmpeqd %xmm0,%xmm0
a739(8): lea 0x90(%rsp),%r12
a741(8): movaps %xmm0,0x90(%rsp)
a749(8): movaps %xmm0,0xa0(%rsp)
a751(5): jmp 0xffffff05(%rip)
a756(a): nop 0x0(%rax,%rax,1)
a760(4): mov 0x0(%r13),%rsi
a764(8): lea 0x90(%rsp),%r12
a76c(2): xor %edx,%edx
a76e(4): mov 0x0(%r12,%rdx,1),%rcx
a772(4): or 0x0(%rsi,%rdx,1),%rcx
a776(4): mov %rcx,0x0(%r12,%rdx,1)
a77a(4): add $0x8,%rdx
a77e(4): cmp $0x20,%rdx
a782(2): jnz 0xffffffec(%rip)
a784(5): jmp 0xfffffb92(%rip)
a789(4): pcmpeqd %xmm0,%xmm0
a78d(8): lea 0x90(%rsp),%r12
a795(8): movaps %xmm0,0x90(%rsp)
a79d(5): jmp 0xfffffeb9(%rip)
a7a2(5): mov 0x30(%rsp),%rdi
a7a7(2): xor %esi,%esi
a7a9(2): xor %edx,%edx
a7ab(4): mov 0x0(%r12,%rdx,8),%rcx
a7af(8): and 0xb8(%rdi,%rdx,8),%rcx
a7b7(4): mov %rcx,0x0(%r12,%rdx,8)
a7bb(4): add $0x1,%rdx
a7bf(3): or %rcx,%rsi
a7c2(4): cmp $0x4,%rdx
a7c6(2): jnz 0xffffffe5(%rip)
a7c8(3): test %rsi,%rsi
a7cb(6): jnz 0xfffffbba(%rip)
a7d1(5): jmp 0xfffff7de(%rip)
a7d6(4): mov 0x6c(%rsp),%edx
a7da(2): test %edx,%edx
a7dc(6): jz 0x8b(%rip)
a7e2(6): nop 0x0(%rax,%rax,1)
a7e8(5): mov 0x20(%rsp),%rbp
a7ed(5): mov 0x10(%rsp),%rdi
a7f2(5): call 0xffff708e(%rip)
a7f7(8): mov 0x80(%rsp),%r12
a7ff(3): mov %r12,%rdi
a802(5): call 0xffff707e(%rip)
a807(5): mov 0x18(%rsp),%rax
a80c(4): lea 0x10(%rax),%rbx
a810(5): lea 0x0(%rbp,%rbp,2),%rax
a815(4): lea 0x0(%rbx,%rax,8),%rbp
a819(7): nop 0x0(%rax)
a820(3): mov (%rbx),%rdi
a823(4): add $0x18,%rbx
a827(5): call 0xffff7059(%rip)
a82c(3): cmp %rbx,%rbp
a82f(2): jnz 0xfffffff1(%rip)
a831(5): mov 0x18(%rsp),%rdi
a836(5): call 0xffff704a(%rip)
a83b(5): jmp 0xfffffa85(%rip)
a840(5): mov 0x28(%rsp),%rdi
a845(5): mov $0x1,%ecx
a84a(3): mov %r14,%rdx
a84d(3): mov %rbp,%rsi
a850(5): call 0xffffdf20(%rip)
a855(5): mov 0x30(%rsp),%rdi
a85a(3): test %rax,%rax
a85d(4): mov %rax,0x0(%rdi,%rbx,8)
a861(6): jz 0xffffff75(%rip)
a867(5): mov 0x10(%rsp),%rdi
a86c(4): cmp 0x0(%rdi,%rbx,8),%rax
a870(2): jz 0x1b(%rip)
a872(5): movzx 0x4f(%rsp),%edi
a877(7): cmp $0x2,0xb4(%rbp)
a87e(5): mov $0x1,%eax
a883(3): cmovnl %eax,%edi
a886(5): mov %dil,0x4f(%rsp)
a88b(5): mov 0x28(%rsp),%rdi
a890(3): mov %rbp,%rsi
a893(5): mov $0x2,%ecx
a898(3): mov %r14,%rdx
a89b(5): call 0xffffded5(%rip)
a8a0(5): mov 0x38(%rsp),%rsi
a8a5(3): test %rax,%rax
a8a8(4): mov %rax,0x0(%rsi,%rbx,8)
a8ac(6): jnz 0xfffff895(%rip)
a8b2(4): mov 0x6c(%rsp),%eax
a8b6(2): test %eax,%eax
a8b8(6): jz 0xfffff889(%rip)
a8be(5): jmp 0xffffff2a(%rip)
a8c3(5): nop 0x0(%rax,%rax,1)
a8c8(4): mov 0x6c(%rsp),%ecx
a8cc(2): test %ecx,%ecx
a8ce(6): jz 0xfffff84e(%rip)
a8d4(5): jmp 0xffffff14(%rip)
a8d9(5): mov $0x200,%esi
a8de(5): mov $0x8,%edi
a8e3(5): call 0xffff718d(%rip)
a8e8(3): mov %rax,%r11
a8eb(5): mov 0x8(%rsp),%rax
a8f0(3): test %r11,%r11
a8f3(4): mov %r11,0x60(%rax)
a8f7(6): jz 0xfffffef6(%rip)
a8fd(5): mov 0x40(%rsp),%r13
a902(5): mov 0x10(%rsp),%r10
a907(3): mov %r11,%r12
a90a(5): mov 0x30(%rsp),%r14
a90f(5): mov 0x20(%rsp),%rdx
a914(2): xor %ebx,%ebx
a916(4): add $0x20,%r13
a91a(4): mov 0x0(%rdx,%rbx,1),%rax
a91e(3): test %rax,%rax
a921(2): jz 0x1e(%rip)
a923(3): mov %r12,%rsi
a926(5): mov $0x1,%ecx
a92b(2): test $0x1,%al
a92d(6): jnz 0xaf(%rip)
a933(3): add %rcx,%rcx
a936(4): add $0x8,%rsi
a93a(3): shr $0x1,%rax
a93d(2): jnz 0xffffffee(%rip)
a93f(4): add $0x8,%rbx
a943(7): add $0x200,%r12
a94a(4): cmp $0x20,%rbx
a94e(2): jnz 0xffffffcc(%rip)
a950(5): jmp 0xfffff8be(%rip)
a955(3): nop (%rax)
a958(5): mov 0x18(%rsp),%rdi
a95d(8): test %rcx,0x1800(%rdi,%r9,1)
a965(2): jnz 0x72(%rip)
a967(4): lea 0x0(%rbx,%r9,1),%rdi
a96b(3): xor %r8d,%r8d
a96e(2): nop 
a970(3): mov (%rdi),%r10
a973(4): add $0x1,%r8
a977(4): add $0x20,%rdi
a97b(3): and %rcx,%r10
a97e(3): test %r10,%r10
a981(2): jz 0xffffffef(%rip)
a983(4): shl/sal $0x3,%r8
a987(8): test %rcx,0xb8(%r15,%r9,1)
a98f(2): jz 0xf(%rip)
a991(5): mov 0x0(%r13,%r8,1),%rdi
a996(3): mov %rdi,(%rsi)
a999(5): jmp 0xfffff85f(%rip)
a99e(4): mov 0x0(%r12,%r8,1),%rdi
a9a2(3): mov %rdi,(%rsi)
a9a5(5): jmp 0xfffff853(%rip)
a9aa(5): mov 0x18(%rsp),%rdi
a9af(5): call 0xffff6ed1(%rip)
a9b4(5): mov $0x100,%esi
a9b9(5): mov $0x8,%edi
a9be(5): call 0xffff70b2(%rip)
a9c3(5): mov 0x8(%rsp),%rbx
a9c8(3): test %rax,%rax
a9cb(4): mov %rax,0x58(%rbx)
a9cf(3): setnz %al
a9d2(5): jmp 0xfffff8f0(%rip)
a9d7(3): xor %r8d,%r8d
a9da(2): jmp 0xffffffad(%rip)
a9dc(5): mov 0x18(%rsp),%rdi
a9e1(8): test %rcx,0x1800(%rdi,%rbx,1)
a9e9(2): jnz 0x37(%rip)
a9eb(5): lea 0x0(%r13,%rbx,1),%r9
a9f0(3): xor %r8d,%r8d
a9f3(3): mov (%r9),%r15
a9f6(4): add $0x1,%r8
a9fa(4): add $0x20,%r9
a9fe(3): mov %r8,%rdi
aa01(3): and %rcx,%r15
aa04(3): test %r15,%r15
aa07(2): jz 0xffffffec(%rip)
aa09(4): mov 0x0(%r10,%rdi,8),%r8
aa0d(3): mov %r8,(%rsi)
aa10(4): mov 0x0(%r14,%rdi,8),%rdi
aa14(7): mov %rdi,0x800(%rsi)
aa1b(5): jmp 0xffffff18(%rip)
aa20(2): xor %edi,%edi
aa22(2): jmp 0xffffffe7(%rip)
aa24(5): call 0xffff6f6c(%rip)
aa29(5): mov 0x18(%rsp),%rdi
aa2e(5): call 0xffff6e52(%rip)
aa33(3): test %rbp,%rbp
aa36(6): jnz 0xfffff88a(%rip)
aa3c(5): jmp 0xffffff78(%rip)

"calc_first" :
aa50(4): cmp $0x10,0x30(%rsi)
aa54(2): jz 0x64(%rip)
aa56(1): push %rbp
aa57(1): push %rbx
aa58(3): mov %rsi,%rbx
aa5b(3): mov %rdi,%rbp
aa5e(4): sub $0x8,%rsp
aa62(4): mov %rsi,0x18(%rbx)
aa66(4): mov 0x30(%rbx),%rdx
aa6a(4): mov 0x28(%rsi),%rsi
aa6e(5): call 0xffffc152(%rip)
aa73(4): cmp $0xffffffff,%rax
aa77(3): mov %rax,%rdx
aa7a(4): mov %rax,0x38(%rbx)
aa7e(2): jz 0x52(%rip)
aa80(2): xor %eax,%eax
aa82(4): cmp $0xc,0x30(%rbx)
aa86(2): jnz 0x26(%rip)
aa88(3): mov 0x28(%rbx),%ecx
aa8b(4): shl/sal $0x4,%rdx
aa8f(4): add 0x0(%rbp),%rdx
aa93(6): and $0x3ff,%ecx
aa99(3): shl/sal $0x8,%ecx
aa9c(2): mov %ecx,%esi
aa9e(3): mov 0x8(%rdx),%ecx
aaa1(6): and $0xfffc00ff,%ecx
aaa7(2): or %esi,%ecx
aaa9(3): mov %ecx,0x8(%rdx)
aaac(4): add $0x8,%rsp
aab0(1): pop %rbx
aab1(1): pop %rbp
aab2(1): ret near (%rsp)
aab3(5): nop 0x0(%rax,%rax,1)
aab8(4): mov 0x8(%rsi),%rax
aabc(4): mov 0x18(%rax),%rdx
aac0(4): mov 0x38(%rax),%rax
aac4(4): mov %rdx,0x18(%rsi)
aac8(4): mov %rax,0x38(%rsi)
aacc(2): xor %eax,%eax
aace(1): ret near (%rsp)
aacf(1): nop 
aad0(5): mov $0xc,%eax
aad5(2): jmp 0xffffffd7(%rip)

"free_fail_stack_return.part.24" :
aae0(2): push %r12
aae2(1): push %rbp
aae3(3): mov %rdi,%rbp
aae6(1): push %rbx
aae7(4): cmp $0x0,(%rdi)
aaeb(2): jle 0x37(%rip)
aaed(2): xor %ebx,%ebx
aaef(3): xor %r12d,%r12d
aaf2(6): nop 0x0(%rax,%rax,1)
aaf8(4): mov 0x10(%rbp),%rax
aafc(4): add $0x1,%r12
ab00(5): mov 0x28(%rax,%rbx,1),%rdi
ab05(5): call 0xffff6d7b(%rip)
ab0a(4): mov 0x10(%rbp),%rax
ab0e(5): mov 0x10(%rax,%rbx,1),%rdi
ab13(4): add $0x30,%rbx
ab17(5): call 0xffff6d69(%rip)
ab1c(4): cmp 0x0(%rbp),%r12
ab20(2): jl 0xffffffd8(%rip)
ab22(1): pop %rbx
ab23(4): mov 0x10(%rbp),%rdi
ab27(1): pop %rbp
ab28(2): pop %r12
ab2a(5): jmp 0xffff6d56(%rip)

"pop_fail_stack.isra.25" :
ab30(2): push %r12
ab32(1): push %rbp
ab33(1): push %rbx
ab34(3): mov (%rdi),%rax
ab37(4): sub $0x1,%rax
ab3b(3): test %rax,%rax
ab3e(3): mov %rax,(%rdi)
ab41(2): js 0x64(%rip)
ab43(4): lea 0x0(%rax,%rax,2),%rbx
ab47(3): mov (%rsi),%rax
ab4a(3): mov %rsi,%r12
ab4d(4): shl/sal $0x4,%rcx
ab51(3): mov %r9,%rbp
ab54(3): mov %r8,%rdi
ab57(4): shl/sal $0x4,%rbx
ab5b(3): add %rbx,%rax
ab5e(3): mov (%rax),%rsi
ab61(3): mov %rsi,(%rdx)
ab64(4): mov 0x10(%rax),%rsi
ab68(3): mov %rcx,%rdx
ab6b(5): call 0xffff6f25(%rip)
ab70(4): mov 0x10(%rbp),%rdi
ab74(5): call 0xffff6d0c(%rip)
ab79(4): mov (%r12),%rax
ab7d(5): mov 0x10(%rax,%rbx,1),%rdi
ab82(5): call 0xffff6cfe(%rip)
ab87(4): add (%r12),%rbx
ab8b(5): movdqu 0x18(%rbx),%xmm0
ab90(4): movaps %xmm0,0x0(%rbp)
ab94(4): mov 0x28(%rbx),%rax
ab98(4): mov %rax,0x10(%rbp)
ab9c(4): mov 0x8(%rbx),%rax
aba0(1): pop %rbx
aba1(1): pop %rbp
aba2(2): pop %r12
aba4(1): ret near (%rsp)
aba5(7): lea 0xa934(%rip),%rcx
abac(7): lea 0xa36d(%rip),%rsi
abb3(7): lea 0xa3ce(%rip),%rdi
abba(5): mov $0x555,%edx
abbf(5): call 0xffff6e41(%rip)

"build_equiv_class.isra.27" :
abd0(1): push %rbp
abd1(1): push %rbx
abd2(3): mov %rdi,%rbp
abd5(3): mov %rsi,%rdi
abd8(3): mov %rsi,%rbx
abdb(4): sub $0x8,%rsp
abdf(5): call 0xffff6da1(%rip)
abe4(4): cmp $0x1,%rax
abe8(2): jnz 0x28(%rip)
abea(3): movzx (%rbx),%ecx
abed(3): mov %rcx,%rdx
abf0(3): and $0x3f,%ecx
abf3(4): shr $0x3,%rdx
abf7(3): shl/sal %cl,%rax
abfa(3): and $0x18,%edx
abfd(5): or %rax,0x0(%rbp,%rdx,1)
ac02(4): add $0x8,%rsp
ac06(2): xor %eax,%eax
ac08(1): pop %rbx
ac09(1): pop %rbp
ac0a(1): ret near (%rsp)
ac0b(5): nop 0x0(%rax,%rax,1)
ac10(4): add $0x8,%rsp
ac14(5): mov $0x3,%eax
ac19(1): pop %rbx
ac1a(1): pop %rbp
ac1b(1): ret near (%rsp)

"build_charclass.isra.29" :
ac20(2): push %r14
ac22(2): push %r13
ac24(3): mov %rcx,%r13
ac27(2): push %r12
ac29(1): push %rbp
ac2a(3): mov %r9,%r12
ac2d(1): push %rbx
ac2e(3): mov %rdi,%rbp
ac31(3): mov %rsi,%rbx
ac34(4): sub $0x10,%rsp
ac38(9): test $0x400000,0x40(%rsp)
ac41(2): jz 0x27(%rip)
ac43(7): lea 0xa34d(%rip),%rdi
ac4a(5): mov $0x6,%ecx
ac4f(3): mov %r9,%rsi
ac52(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
ac54(3): setnbe %al
ac57(2): sbb $0x0,%al
ac59(2): test %al,%al
ac5b(6): jnz 0xfb(%rip)
ac61(7): lea 0xa329(%rip),%r12
ac68(4): mov 0x0(%r13),%rcx
ac6c(3): cmp %rcx,(%r8)
ac6f(3): mov (%rdx),%rax
ac72(6): jz 0x117(%rip)
ac78(4): lea 0x1(%rcx),%rdx
ac7c(3): mov %r12,%rdi
ac7f(4): mov %rdx,0x0(%r13)
ac83(4): lea 0x0(%rax,%rcx,8),%r13
ac87(5): call 0xffff6dc9(%rip)
ac8c(7): lea 0xa310(%rip),%rdi
ac93(4): mov %rax,0x0(%r13)
ac97(5): mov $0x6,%ecx
ac9c(3): mov %r12,%rsi
ac9f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
aca1(3): setnbe %al
aca4(2): sbb $0x0,%al
aca6(2): test %al,%al
aca8(2): jz 0x70(%rip)
acaa(7): lea 0xa2f8(%rip),%rdi
acb1(5): mov $0x6,%ecx
acb6(3): mov %r12,%rsi
acb9(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
acbb(3): setnbe %al
acbe(2): sbb $0x0,%al
acc0(2): test %al,%al
acc2(6): jnz 0x106(%rip)
acc8(5): call 0xffff6fa8(%rip)
accd(2): xor %ecx,%ecx
accf(3): test %rbp,%rbp
acd2(3): mov (%rax),%rdx
acd5(5): mov $0x1,%edi
acda(6): jnz 0x2c0(%rip)
ace0(4): test $0x2,0x0(%rdx,%rcx,2)
ace4(2): jz 0x13(%rip)
ace6(3): mov %rcx,%rax
ace9(3): mov %rdi,%rsi
acec(4): sar $0x6,%rax
acf0(3): shl/sal %cl,%rsi
acf3(4): or %rsi,0x0(%rbx,%rax,8)
acf7(4): add $0x1,%rcx
acfb(7): cmp $0x100,%rcx
ad02(2): jnz 0xffffffde(%rip)
ad04(2): xor %eax,%eax
ad06(4): add $0x10,%rsp
ad0a(1): pop %rbx
ad0b(1): pop %rbp
ad0c(2): pop %r12
ad0e(2): pop %r13
ad10(2): pop %r14
ad12(1): ret near (%rsp)
ad13(5): nop 0x0(%rax,%rax,1)
ad18(5): call 0xffff6f58(%rip)
ad1d(2): xor %ecx,%ecx
ad1f(3): test %rbp,%rbp
ad22(3): mov (%rax),%rdx
ad25(5): mov $0x1,%edi
ad2a(6): jnz 0x1f0(%rip)
ad30(4): test $0x8,0x0(%rdx,%rcx,2)
ad34(2): jz 0x13(%rip)
ad36(3): mov %rcx,%rax
ad39(3): mov %rdi,%rsi
ad3c(4): sar $0x6,%rax
ad40(3): shl/sal %cl,%rsi
ad43(4): or %rsi,0x0(%rbx,%rax,8)
ad47(4): add $0x1,%rcx
ad4b(7): cmp $0x100,%rcx
ad52(2): jnz 0xffffffde(%rip)
ad54(2): jmp 0xffffffb0(%rip)
ad56(7): lea 0xa240(%rip),%rdi
ad5d(5): mov $0x6,%ecx
ad62(3): mov %r9,%rsi
ad65(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
ad67(4): mov 0x0(%r13),%rcx
ad6b(3): setnbe %al
ad6e(2): sbb $0x0,%al
ad70(2): test %al,%al
ad72(7): lea 0xa218(%rip),%rax
ad79(4): cmove %rax,%r12
ad7d(3): cmp %rcx,(%r8)
ad80(3): mov (%rdx),%rax
ad83(6): jnz 0xfffffef5(%rip)
ad89(5): lea 0x1(%rcx,%rcx,1),%r14
ad8e(3): mov %rax,%rdi
ad91(5): mov %r8,0x8(%rsp)
ad96(4): mov %rdx,(%rsp)
ad9a(8): lea 0x0(,%r14,8),%rsi
ada2(5): call 0xffff6d8e(%rip)
ada7(3): test %rax,%rax
adaa(6): jz 0x31e(%rip)
adb0(4): mov (%rsp),%rdx
adb4(5): mov 0x8(%rsp),%r8
adb9(3): mov %rax,(%rdx)
adbc(3): mov %r14,(%r8)
adbf(4): mov 0x0(%r13),%rcx
adc3(5): jmp 0xfffffeb5(%rip)
adc8(7): lea 0xa1ce(%rip),%rdi
adcf(5): mov $0x6,%ecx
add4(3): mov %r12,%rsi
add7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
add9(3): setnbe %al
addc(2): sbb $0x0,%al
adde(2): test %al,%al
ade0(2): jz 0x6a(%rip)
ade2(7): lea 0xa1c6(%rip),%rdi
ade9(5): mov $0x6,%ecx
adee(3): mov %r12,%rsi
adf1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
adf3(3): setnbe %al
adf6(2): sbb $0x0,%al
adf8(2): test %al,%al
adfa(6): jnz 0x98(%rip)
ae00(5): call 0xffff6e70(%rip)
ae05(2): xor %ecx,%ecx
ae07(3): test %rbp,%rbp
ae0a(3): mov (%rax),%rdx
ae0d(5): mov $0x1,%edi
ae12(6): jnz 0x35c(%rip)
ae18(8): nop 0x0(%rax,%rax,1)
ae20(5): test $0x20,0x1(%rdx,%rcx,2)
ae25(2): jz 0x13(%rip)
ae27(3): mov %rcx,%rax
ae2a(3): mov %rdi,%rsi
ae2d(4): sar $0x6,%rax
ae31(3): shl/sal %cl,%rsi
ae34(4): or %rsi,0x0(%rbx,%rax,8)
ae38(4): add $0x1,%rcx
ae3c(7): cmp $0x100,%rcx
ae43(2): jnz 0xffffffdd(%rip)
ae45(5): jmp 0xfffffebf(%rip)
ae4a(5): call 0xffff6e26(%rip)
ae4f(2): xor %ecx,%ecx
ae51(3): test %rbp,%rbp
ae54(3): mov (%rax),%rdx
ae57(5): mov $0x1,%edi
ae5c(6): jnz 0x1d6(%rip)
ae62(6): nop 0x0(%rax,%rax,1)
ae68(5): test $0x2,0x1(%rdx,%rcx,2)
ae6d(2): jz 0x13(%rip)
ae6f(3): mov %rcx,%rax
ae72(3): mov %rdi,%rsi
ae75(4): sar $0x6,%rax
ae79(3): shl/sal %cl,%rsi
ae7c(4): or %rsi,0x0(%rbx,%rax,8)
ae80(4): add $0x1,%rcx
ae84(7): cmp $0x100,%rcx
ae8b(2): jnz 0xffffffdd(%rip)
ae8d(5): jmp 0xfffffe77(%rip)
ae92(7): lea 0xa0f8(%rip),%rdi
ae99(5): mov $0x6,%ecx
ae9e(3): mov %r12,%rsi
aea1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
aea3(3): setnbe %al
aea6(2): sbb $0x0,%al
aea8(2): test %al,%al
aeaa(6): jz 0xa9(%rip)
aeb0(7): lea 0xa117(%rip),%rdi
aeb7(5): mov $0x6,%ecx
aebc(3): mov %r12,%rsi
aebf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
aec1(3): setnbe %al
aec4(2): sbb $0x0,%al
aec6(2): test %al,%al
aec8(6): jnz 0x10b(%rip)
aece(5): call 0xffff6da2(%rip)
aed3(2): xor %ecx,%ecx
aed5(3): test %rbp,%rbp
aed8(3): mov (%rax),%rdx
aedb(5): mov $0x1,%edi
aee0(6): jnz 0x4aa(%rip)
aee6(a): nop 0x0(%rax,%rax,1)
aef0(5): test $0x8,0x1(%rdx,%rcx,2)
aef5(2): jz 0x13(%rip)
aef7(3): mov %rcx,%rax
aefa(3): mov %rdi,%rsi
aefd(4): sar $0x6,%rax
af01(3): shl/sal %cl,%rsi
af04(4): or %rsi,0x0(%rbx,%rax,8)
af08(4): add $0x1,%rcx
af0c(7): cmp $0x100,%rcx
af13(2): jnz 0xffffffdd(%rip)
af15(5): jmp 0xfffffdef(%rip)
af1a(2): xor %eax,%eax
af1c(4): nop 0x0(%rax)
af20(4): test $0x8,0x0(%rdx,%rax,2)
af24(2): jz 0x1e(%rip)
af26(5): movzx 0x0(%rbp,%rax,1),%ecx
af2b(3): mov %rdi,%r10
af2e(3): mov %rcx,%rsi
af31(3): and $0x3f,%ecx
af34(4): shr $0x3,%rsi
af38(3): shl/sal %cl,%r10
af3b(3): and $0x18,%esi
af3e(4): or %r10,0x0(%rbx,%rsi,1)
af42(4): add $0x1,%rax
af46(6): cmp $0x100,%rax
af4c(2): jnz 0xffffffd4(%rip)
af4e(5): jmp 0xfffffdb6(%rip)
af53(5): call 0xffff6d1d(%rip)
af58(2): xor %ecx,%ecx
af5a(3): test %rbp,%rbp
af5d(3): mov (%rax),%rdx
af60(5): mov $0x1,%edi
af65(6): jnz 0x1d3(%rip)
af6b(5): nop 0x0(%rax,%rax,1)
af70(5): test $0x4,0x1(%rdx,%rcx,2)
af75(2): jz 0x13(%rip)
af77(3): mov %rcx,%rax
af7a(3): mov %rdi,%rsi
af7d(4): sar $0x6,%rax
af81(3): shl/sal %cl,%rsi
af84(4): or %rsi,0x0(%rbx,%rax,8)
af88(4): add $0x1,%rcx
af8c(7): cmp $0x100,%rcx
af93(2): jnz 0xffffffdd(%rip)
af95(5): jmp 0xfffffd6f(%rip)
af9a(2): xor %eax,%eax
af9c(4): nop 0x0(%rax)
afa0(4): test $0x2,0x0(%rdx,%rax,2)
afa4(2): jz 0x1e(%rip)
afa6(5): movzx 0x0(%rbp,%rax,1),%ecx
afab(3): mov %rdi,%r11
afae(3): mov %rcx,%rsi
afb1(3): and $0x3f,%ecx
afb4(4): shr $0x3,%rsi
afb8(3): shl/sal %cl,%r11
afbb(3): and $0x18,%esi
afbe(4): or %r11,0x0(%rbx,%rsi,1)
afc2(4): add $0x1,%rax
afc6(6): cmp $0x100,%rax
afcc(2): jnz 0xffffffd4(%rip)
afce(5): jmp 0xfffffd36(%rip)
afd3(7): lea 0x9fdb(%rip),%rdi
afda(5): mov $0x6,%ecx
afdf(3): mov %r12,%rsi
afe2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
afe4(3): setnbe %al
afe7(2): sbb $0x0,%al
afe9(2): test %al,%al
afeb(2): jnz 0x81(%rip)
afed(5): call 0xffff6c83(%rip)
aff2(2): xor %ecx,%ecx
aff4(3): test %rbp,%rbp
aff7(3): mov (%rax),%rdx
affa(5): mov $0x1,%edi
afff(6): jnz 0x3f8(%rip)
b005(3): nop (%rax)
b008(5): test $0x40,0x1(%rdx,%rcx,2)
b00d(2): jz 0x13(%rip)
b00f(3): mov %rcx,%rax
b012(3): mov %rdi,%rsi
b015(4): sar $0x6,%rax
b019(3): shl/sal %cl,%rsi
b01c(4): or %rsi,0x0(%rbx,%rax,8)
b020(4): add $0x1,%rcx
b024(7): cmp $0x100,%rcx
b02b(2): jnz 0xffffffdd(%rip)
b02d(5): jmp 0xfffffcd7(%rip)
b032(2): xor %eax,%eax
b034(4): nop 0x0(%rax)
b038(5): test $0x2,0x1(%rdx,%rax,2)
b03d(2): jz 0x1e(%rip)
b03f(5): movzx 0x0(%rbp,%rax,1),%ecx
b044(3): mov %rdi,%r14
b047(3): mov %rcx,%rsi
b04a(3): and $0x3f,%ecx
b04d(4): shr $0x3,%rsi
b051(3): shl/sal %cl,%r14
b054(3): and $0x18,%esi
b057(4): or %r14,0x0(%rbx,%rsi,1)
b05b(4): add $0x1,%rax
b05f(6): cmp $0x100,%rax
b065(2): jnz 0xffffffd3(%rip)
b067(5): jmp 0xfffffc9d(%rip)
b06c(7): lea 0x9f24(%rip),%rdi
b073(5): mov $0x6,%ecx
b078(3): mov %r12,%rsi
b07b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b07d(3): setnbe %al
b080(2): sbb $0x0,%al
b082(2): test %al,%al
b084(2): jnz 0x4e(%rip)
b086(5): call 0xffff6bea(%rip)
b08b(2): xor %ecx,%ecx
b08d(3): test %rbp,%rbp
b090(3): mov (%rax),%rax
b093(5): mov $0x1,%edi
b098(6): jnz 0x328(%rip)
b09e(5): test $0x1,0x1(%rax,%rcx,2)
b0a3(2): jz 0x13(%rip)
b0a5(3): mov %rcx,%rdx
b0a8(3): mov %rdi,%rsi
b0ab(4): sar $0x6,%rdx
b0af(3): shl/sal %cl,%rsi
b0b2(4): or %rsi,0x0(%rbx,%rdx,8)
b0b6(4): add $0x1,%rcx
b0ba(7): cmp $0x100,%rcx
b0c1(2): jnz 0xffffffdd(%rip)
b0c3(5): jmp 0xfffffc41(%rip)
b0c8(5): mov $0xc,%eax
b0cd(5): jmp 0xfffffc39(%rip)
b0d2(7): lea 0x9ee2(%rip),%rdi
b0d9(5): mov $0x6,%ecx
b0de(3): mov %r12,%rsi
b0e1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b0e3(3): setnbe %al
b0e6(2): sbb $0x0,%al
b0e8(2): test %al,%al
b0ea(6): jnz 0xf4(%rip)
b0f0(5): call 0xffff6b80(%rip)
b0f5(2): xor %ecx,%ecx
b0f7(3): test %rbp,%rbp
b0fa(3): mov (%rax),%rdx
b0fd(5): mov $0x1,%esi
b102(6): jnz 0xa2(%rip)
b108(4): test $0x1,0x0(%rdx,%rcx,2)
b10c(2): jz 0x13(%rip)
b10e(3): mov %rcx,%rax
b111(3): mov %rsi,%rdi
b114(4): sar $0x6,%rax
b118(3): shl/sal %cl,%rdi
b11b(4): or %rdi,0x0(%rbx,%rax,8)
b11f(4): add $0x1,%rcx
b123(7): cmp $0x100,%rcx
b12a(2): jnz 0xffffffde(%rip)
b12c(5): jmp 0xfffffbd8(%rip)
b131(7): nop 0x0(%rax)
b138(2): xor %eax,%eax
b13a(5): test $0x4,0x1(%rdx,%rax,2)
b13f(2): jz 0x1e(%rip)
b141(5): movzx 0x0(%rbp,%rax,1),%ecx
b146(3): mov %rdi,%r9
b149(3): mov %rcx,%rsi
b14c(3): and $0x3f,%ecx
b14f(4): shr $0x3,%rsi
b153(3): shl/sal %cl,%r9
b156(3): and $0x18,%esi
b159(4): or %r9,0x0(%rbx,%rsi,1)
b15d(4): add $0x1,%rax
b161(6): cmp $0x100,%rax
b167(2): jnz 0xffffffd3(%rip)
b169(5): jmp 0xfffffb9b(%rip)
b16e(2): xor %eax,%eax
b170(5): test $0x20,0x1(%rdx,%rax,2)
b175(2): jz 0x1e(%rip)
b177(5): movzx 0x0(%rbp,%rax,1),%ecx
b17c(3): mov %rdi,%r9
b17f(3): mov %rcx,%rsi
b182(3): and $0x3f,%ecx
b185(4): shr $0x3,%rsi
b189(3): shl/sal %cl,%r9
b18c(3): and $0x18,%esi
b18f(4): or %r9,0x0(%rbx,%rsi,1)
b193(4): add $0x1,%rax
b197(6): cmp $0x100,%rax
b19d(2): jnz 0xffffffd3(%rip)
b19f(5): jmp 0xfffffb65(%rip)
b1a4(2): xor %eax,%eax
b1a6(5): mov $0x1,%edi
b1ab(4): test $0x1,0x0(%rdx,%rax,2)
b1af(2): jz 0x1e(%rip)
b1b1(5): movzx 0x0(%rbp,%rax,1),%ecx
b1b6(3): mov %rdi,%r14
b1b9(3): mov %rcx,%rsi
b1bc(3): and $0x3f,%ecx
b1bf(4): shr $0x3,%rsi
b1c3(3): shl/sal %cl,%r14
b1c6(3): and $0x18,%esi
b1c9(4): or %r14,0x0(%rbx,%rsi,1)
b1cd(4): add $0x1,%rax
b1d1(6): cmp $0x100,%rax
b1d7(2): jnz 0xffffffd4(%rip)
b1d9(5): jmp 0xfffffb2b(%rip)
b1de(7): lea 0x9ddc(%rip),%rsi
b1e5(3): mov %r12,%rdi
b1e8(5): call 0xffff6898(%rip)
b1ed(2): test %eax,%eax
b1ef(2): jnz 0x7b(%rip)
b1f1(5): call 0xffff6a7f(%rip)
b1f6(2): xor %ecx,%ecx
b1f8(3): test %rbp,%rbp
b1fb(3): mov (%rax),%rsi
b1fe(5): mov $0x1,%edx
b203(2): jnz 0x2c(%rip)
b205(5): cmp $0x0,0x0(%rsi,%rcx,2)
b20a(2): jns 0x13(%rip)
b20c(3): mov %rcx,%rax
b20f(3): mov %rdx,%rdi
b212(4): sar $0x6,%rax
b216(3): shl/sal %cl,%rdi
b219(4): or %rdi,0x0(%rbx,%rax,8)
b21d(4): add $0x1,%rcx
b221(7): cmp $0x100,%rcx
b228(2): jnz 0xffffffdd(%rip)
b22a(5): jmp 0xfffffada(%rip)
b22f(2): xor %eax,%eax
b231(5): mov $0x1,%edi
b236(5): cmp $0x0,0x0(%rsi,%rax,2)
b23b(2): jns 0x1e(%rip)
b23d(5): movzx 0x0(%rbp,%rax,1),%ecx
b242(3): mov %rdi,%r9
b245(3): mov %rcx,%rdx
b248(3): and $0x3f,%ecx
b24b(4): shr $0x3,%rdx
b24f(3): shl/sal %cl,%r9
b252(3): and $0x18,%edx
b255(4): or %r9,0x0(%rbx,%rdx,1)
b259(4): add $0x1,%rax
b25d(6): cmp $0x100,%rax
b263(2): jnz 0xffffffd3(%rip)
b265(5): jmp 0xfffffa9f(%rip)
b26a(7): lea 0x9d56(%rip),%rsi
b271(3): mov %r12,%rdi
b274(5): call 0xffff680c(%rip)
b279(2): test %eax,%eax
b27b(2): jnz 0x79(%rip)
b27d(5): call 0xffff69f3(%rip)
b282(2): xor %ecx,%ecx
b284(3): test %rbp,%rbp
b287(3): mov (%rax),%rsi
b28a(5): mov $0x1,%edx
b28f(2): jnz 0x2b(%rip)
b291(4): test $0x4,0x0(%rsi,%rcx,2)
b295(2): jz 0x13(%rip)
b297(3): mov %rcx,%rax
b29a(3): mov %rdx,%rdi
b29d(4): sar $0x6,%rax
b2a1(3): shl/sal %cl,%rdi
b2a4(4): or %rdi,0x0(%rbx,%rax,8)
b2a8(4): add $0x1,%rcx
b2ac(7): cmp $0x100,%rcx
b2b3(2): jnz 0xffffffde(%rip)
b2b5(5): jmp 0xfffffa4f(%rip)
b2ba(2): xor %eax,%eax
b2bc(5): mov $0x1,%edi
b2c1(4): test $0x4,0x0(%rsi,%rax,2)
b2c5(2): jz 0x1e(%rip)
b2c7(5): movzx 0x0(%rbp,%rax,1),%ecx
b2cc(3): mov %rdi,%r14
b2cf(3): mov %rcx,%rdx
b2d2(3): and $0x3f,%ecx
b2d5(4): shr $0x3,%rdx
b2d9(3): shl/sal %cl,%r14
b2dc(3): and $0x18,%edx
b2df(4): or %r14,0x0(%rbx,%rdx,1)
b2e3(4): add $0x1,%rax
b2e7(6): cmp $0x100,%rax
b2ed(2): jnz 0xffffffd4(%rip)
b2ef(5): jmp 0xfffffa15(%rip)
b2f4(7): lea 0x9cd2(%rip),%rsi
b2fb(3): mov %r12,%rdi
b2fe(5): call 0xffff6782(%rip)
b303(2): test %eax,%eax
b305(2): jnz 0x7b(%rip)
b307(5): call 0xffff6969(%rip)
b30c(2): xor %ecx,%ecx
b30e(3): test %rbp,%rbp
b311(3): mov (%rax),%rsi
b314(5): mov $0x1,%edx
b319(2): jnz 0x2c(%rip)
b31b(5): test $0x10,0x1(%rsi,%rcx,2)
b320(2): jz 0x13(%rip)
b322(3): mov %rcx,%rax
b325(3): mov %rdx,%rdi
b328(4): sar $0x6,%rax
b32c(3): shl/sal %cl,%rdi
b32f(4): or %rdi,0x0(%rbx,%rax,8)
b333(4): add $0x1,%rcx
b337(7): cmp $0x100,%rcx
b33e(2): jnz 0xffffffdd(%rip)
b340(5): jmp 0xfffff9c4(%rip)
b345(2): xor %eax,%eax
b347(5): mov $0x1,%edi
b34c(5): test $0x10,0x1(%rsi,%rax,2)
b351(2): jz 0x1e(%rip)
b353(5): movzx 0x0(%rbp,%rax,1),%ecx
b358(3): mov %rdi,%r9
b35b(3): mov %rcx,%rdx
b35e(3): and $0x3f,%ecx
b361(4): shr $0x3,%rdx
b365(3): shl/sal %cl,%r9
b368(3): and $0x18,%edx
b36b(4): or %r9,0x0(%rbx,%rdx,1)
b36f(4): add $0x1,%rax
b373(6): cmp $0x100,%rax
b379(2): jnz 0xffffffd3(%rip)
b37b(5): jmp 0xfffff989(%rip)
b380(5): mov $0x4,%eax
b385(5): jmp 0xfffff981(%rip)
b38a(2): xor %eax,%eax
b38c(5): test $0x8,0x1(%rdx,%rax,2)
b391(2): jz 0x1e(%rip)
b393(5): movzx 0x0(%rbp,%rax,1),%ecx
b398(3): mov %rdi,%r14
b39b(3): mov %rcx,%rsi
b39e(3): and $0x3f,%ecx
b3a1(4): shr $0x3,%rsi
b3a5(3): shl/sal %cl,%r14
b3a8(3): and $0x18,%esi
b3ab(4): or %r14,0x0(%rbx,%rsi,1)
b3af(4): add $0x1,%rax
b3b3(6): cmp $0x100,%rax
b3b9(2): jnz 0xffffffd3(%rip)
b3bb(5): jmp 0xfffff949(%rip)
b3c0(2): xor %edx,%edx
b3c2(5): test $0x1,0x1(%rax,%rdx,2)
b3c7(2): jz 0x1e(%rip)
b3c9(5): movzx 0x0(%rbp,%rdx,1),%ecx
b3ce(3): mov %rdi,%r9
b3d1(3): mov %rcx,%rsi
b3d4(3): and $0x3f,%ecx
b3d7(4): shr $0x3,%rsi
b3db(3): shl/sal %cl,%r9
b3de(3): and $0x18,%esi
b3e1(4): or %r9,0x0(%rbx,%rsi,1)
b3e5(4): add $0x1,%rdx
b3e9(7): cmp $0x100,%rdx
b3f0(2): jnz 0xffffffd2(%rip)
b3f2(5): jmp 0xfffff912(%rip)
b3f7(2): xor %eax,%eax
b3f9(5): test $0x40,0x1(%rdx,%rax,2)
b3fe(2): jz 0x1e(%rip)
b400(5): movzx 0x0(%rbp,%rax,1),%ecx
b405(3): mov %rdi,%r14
b408(3): mov %rcx,%rsi
b40b(3): and $0x3f,%ecx
b40e(4): shr $0x3,%rsi
b412(3): shl/sal %cl,%r14
b415(3): and $0x18,%esi
b418(4): or %r14,0x0(%rbx,%rsi,1)
b41c(4): add $0x1,%rax
b420(6): cmp $0x100,%rax
b426(2): jnz 0xffffffd3(%rip)
b428(5): jmp 0xfffff8dc(%rip)

"build_charclass_op" :
b430(2): push %r15
b432(2): push %r14
b434(3): mov %rdx,%r14
b437(2): push %r13
b439(2): push %r12
b43b(3): mov %rcx,%r13
b43e(1): push %rbp
b43f(1): push %rbx
b440(3): mov %rdi,%rbp
b443(5): mov $0x20,%edi
b448(3): mov %r8d,%r12d
b44b(4): sub $0x58,%rsp
b44f(4): mov %rsi,(%rsp)
b453(5): mov $0x1,%esi
b458(5): mov %r9,0x8(%rsp)
b45d(9): mov $0x28,%rax
b466(5): mov %rax,0x48(%rsp)
b46b(2): xor %eax,%eax
b46d(9): mov $0x0,0x18(%rsp)
b476(5): call 0xffff65fa(%rip)
b47b(3): test %rax,%rax
b47e(6): jz 0x1c2(%rip)
b484(5): mov $0x1,%esi
b489(5): mov $0x50,%edi
b48e(3): mov %rax,%rbx
b491(5): call 0xffff65df(%rip)
b496(3): test %rax,%rax
b499(3): mov %rax,%r15
b49c(6): jz 0x1b4(%rip)
b4a2(4): movzx 0x20(%rax),%eax
b4a6(4): sub $0x8,%rsp
b4aa(3): mov %r12d,%edx
b4ad(2): push $0x0
b4af(3): and $0x1,%edx
b4b2(5): mov 0x10(%rsp),%rdi
b4b7(4): lea 0x48(%r15),%rcx
b4bb(3): mov %r14,%r9
b4be(3): mov %rbx,%rsi
b4c1(5): lea 0x28(%rsp),%r8
b4c6(3): and $0xfe,%eax
b4c9(2): or %edx,%eax
b4cb(4): lea 0x18(%r15),%rdx
b4cf(4): mov %al,0x20(%r15)
b4d3(5): call 0xfffff74d(%rip)
b4d8(2): test %eax,%eax
b4da(1): pop %rdx
b4db(1): pop %rcx
b4dc(6): jnz 0x194(%rip)
b4e2(5): movsx 0x0(%r13),%rcx
b4e7(5): mov $0x1,%esi
b4ec(2): test %cl,%cl
b4ee(2): jz 0x3c(%rip)
b4f0(4): lea 0x3f(%rcx),%rax
b4f4(3): test %rcx,%rcx
b4f7(3): mov %rcx,%rdx
b4fa(4): cmovns %rcx,%rax
b4fe(4): sar $0x3f,%rdx
b502(4): add $0x1,%r13
b506(4): shr $0x3a,%rdx
b50a(4): sar $0x6,%rax
b50e(3): add %rdx,%rcx
b511(3): and $0x3f,%ecx
b514(3): sub %rdx,%rcx
b517(3): mov %rsi,%rdx
b51a(3): shl/sal %cl,%rdx
b51d(5): movsx 0x0(%r13),%rcx
b522(4): or %rdx,0x0(%rbx,%rax,8)
b526(2): test %cl,%cl
b528(2): jnz 0xffffffc8(%rip)
b52a(3): test %r12b,%r12b
b52d(2): jz 0x15(%rip)
b52f(4): lea 0x20(%rbx),%rdx
b533(3): mov %rbx,%rax
b536(3): not (%rax)
b539(4): add $0x8,%rax
b53d(3): cmp %rax,%rdx
b540(2): jnz 0xfffffff6(%rip)
b542(7): cmp $0x1,0xb4(%rbp)
b549(2): jle 0x1a(%rip)
b54b(4): mov 0x78(%rbp),%rcx
b54f(2): xor %eax,%eax
b551(4): mov 0x0(%rcx,%rax,1),%rdx
b555(4): and %rdx,0x0(%rbx,%rax,1)
b559(4): add $0x8,%rax
b55d(4): cmp $0x20,%rax
b561(2): jnz 0xfffffff0(%rip)
b563(5): lea 0x20(%rsp),%r9
b568(4): lea 0x70(%rbp),%r12
b56c(7): lea 0x80(%rbp),%r13
b573(2): xor %ecx,%ecx
b575(2): xor %edx,%edx
b577(5): mov $0x3,0x28(%rsp)
b57c(3): mov %r9,%r8
b57f(3): mov %r13,%rsi
b582(3): mov %r12,%rdi
b585(5): mov %rbx,0x20(%rsp)
b58a(4): mov %r9,(%rsp)
b58e(5): call 0xffffcb52(%rip)
b593(3): test %rax,%rax
b596(3): mov %rax,%r14
b599(6): jz 0x97(%rip)
b59f(7): cmp $0x1,0xb4(%rbp)
b5a6(2): jle 0x7a(%rip)
b5a8(7): or $0x2,0xb0(%rbp)
b5af(4): mov (%rsp),%r9
b5b3(2): xor %ecx,%ecx
b5b5(2): xor %edx,%edx
b5b7(3): mov %r13,%rsi
b5ba(3): mov %r12,%rdi
b5bd(5): mov $0x6,0x28(%rsp)
b5c2(5): mov %r15,0x20(%rsp)
b5c7(3): mov %r9,%r8
b5ca(5): call 0xffffcb16(%rip)
b5cf(3): test %rax,%rax
b5d2(2): jz 0x5e(%rip)
b5d4(5): lea 0x30(%rsp),%r8
b5d9(3): mov %r14,%rdx
b5dc(3): mov %rax,%rcx
b5df(3): mov %r13,%rsi
b5e2(3): mov %r12,%rdi
b5e5(5): mov $0xa,0x38(%rsp)
b5ea(5): call 0xffffcaf6(%rip)
b5ef(3): mov %rax,%r14
b5f2(5): mov 0x48(%rsp),%rdi
b5f7(9): xor $0x28,%rdi
b600(3): mov %r14,%rax
b603(6): jnz 0x92(%rip)
b609(4): add $0x58,%rsp
b60d(1): pop %rbx
b60e(1): pop %rbp
b60f(2): pop %r12
b611(2): pop %r13
b613(2): pop %r14
b615(2): pop %r15
b617(1): ret near (%rsp)
b618(8): nop 0x0(%rax,%rax,1)
b620(3): mov %r15,%rdi
b623(5): call 0xffffb51d(%rip)
b628(2): jmp 0xffffffca(%rip)
b62a(6): nop 0x0(%rax,%rax,1)
b630(3): mov %rbx,%rdi
b633(5): call 0xffff624d(%rip)
b638(3): mov %r15,%rdi
b63b(5): call 0xffffb505(%rip)
b640(5): mov 0x8(%rsp),%rax
b645(3): xor %r14d,%r14d
b648(6): mov $0xc,(%rax)
b64e(2): jmp 0xffffffa4(%rip)
b650(3): mov %rbx,%rdi
b653(3): xor %r14d,%r14d
b656(5): call 0xffff622a(%rip)
b65b(5): mov 0x8(%rsp),%rax
b660(6): mov $0xc,(%rax)
b666(2): jmp 0xffffff8c(%rip)
b668(8): nop 0x0(%rax,%rax,1)
b670(3): mov %rbx,%rdi
b673(3): mov %eax,(%rsp)
b676(3): xor %r14d,%r14d
b679(5): call 0xffff6207(%rip)
b67e(3): mov %r15,%rdi
b681(5): call 0xffffb4bf(%rip)
b686(5): mov 0x8(%rsp),%rdi
b68b(3): mov (%rsp),%eax
b68e(2): mov %eax,(%rdi)
b690(5): jmp 0xffffff62(%rip)
b695(5): call 0xffff62fb(%rip)

"re_compile_fastmap_iter.isra.30" :
b6a0(2): push %r15
b6a2(2): push %r14
b6a4(3): mov %rdi,%rax
b6a7(2): push %r13
b6a9(2): push %r12
b6ab(1): push %rbp
b6ac(1): push %rbx
b6ad(2): xor %ebx,%ebx
b6af(3): mov %rcx,%rbp
b6b2(7): sub $0x178,%rsp
b6b9(3): mov (%rax),%rax
b6bc(5): mov %rdi,0x30(%rsp)
b6c1(5): mov %rsi,0x20(%rsp)
b6c6(9): mov $0x28,%rdi
b6cf(8): mov %rdi,0x168(%rsp)
b6d7(2): xor %edi,%edi
b6d9(7): cmp $0x1,0xb4(%rax)
b6e0(5): mov %rdx,0x28(%rsp)
b6e5(5): mov %rax,0x8(%rsp)
b6ea(2): jnz 0x19(%rip)
b6ec(5): mov 0x30(%rsp),%rax
b6f1(4): mov 0x18(%rax),%rax
b6f5(3): mov %rax,%rbx
b6f8(4): mov %rax,(%rsp)
b6fc(4): shr $0x16,%rbx
b700(3): and $0x1,%ebx
b703(5): mov 0x20(%rsp),%rax
b708(4): cmp $0x0,(%rax)
b70c(6): jle 0x411(%rip)
b712(5): lea 0x58(%rsp),%rax
b717(8): mov $0x0,(%rsp)
b71f(5): mov %rax,0x40(%rsp)
b724(5): lea 0x54(%rsp),%rax
b729(5): mov %rax,0x48(%rsp)
b72e(5): lea 0x60(%rsp),%rax
b733(5): mov %rax,0x38(%rsp)
b738(2): jmp 0x46(%rip)
b73a(6): nop 0x0(%rax,%rax,1)
b740(3): cmp $0x3,%eax
b743(6): jz 0x2f3(%rip)
b749(3): cmp $0x6,%eax
b74c(6): jz 0x18c(%rip)
b752(3): and $0xfd,%edx
b755(3): cmp $0x5,%dl
b758(6): jz 0x3fc(%rip)
b75e(3): cmp $0x2,%eax
b761(6): jz 0x353(%rip)
b767(5): mov 0x20(%rsp),%rdi
b76c(5): add $0x1,(%rsp)
b771(4): mov (%rsp),%rax
b775(3): cmp (%rdi),%rax
b778(6): jnl 0x3a5(%rip)
b77e(5): mov 0x28(%rsp),%rax
b783(4): mov (%rsp),%rdi
b787(3): mov (%rax),%rax
b78a(4): mov 0x0(%rax,%rdi,8),%r12
b78e(5): mov 0x8(%rsp),%rax
b793(3): mov (%rax),%rcx
b796(3): mov %r12,%rax
b799(4): shl/sal $0x4,%rax
b79d(5): mov %rax,0x10(%rsp)
b7a2(4): lea 0x0(%rcx,%rax,1),%rsi
b7a6(4): movzx 0x8(%rsi),%eax
b7aa(3): cmp $0x1,%eax
b7ad(2): mov %eax,%edx
b7af(2): jnz 0xffffff91(%rip)
b7b1(4): movzx (%rsi),%r13d
b7b5(2): test %ebx,%ebx
b7b7(6): mov $0x1,0x0(%rbp,%r13,1)
b7bd(2): jz 0x13(%rip)
b7bf(5): call 0xffff64a1(%rip)
b7c4(3): mov (%rax),%rax
b7c7(4): movsxd 0x0(%rax,%r13,4),%rax
b7cb(5): mov $0x1,0x0(%rbp,%rax,1)
b7d0(5): mov 0x30(%rsp),%rax
b7d5(4): test $0x40,0x1a(%rax)
b7d9(2): jz 0xffffff8e(%rip)
b7db(5): mov 0x8(%rsp),%rsi
b7e0(7): cmp $0x1,0xb4(%rsi)
b7e7(6): jle 0xffffff80(%rip)
b7ed(3): mov (%rsi),%rax
b7f0(5): mov 0x10(%rsp),%rdi
b7f5(4): movzx 0x0(%rax,%rdi,1),%edx
b7f9(4): mov %dl,0x60(%rsp)
b7fd(5): lea 0x1(%r12),%rdx
b802(4): cmp %rdx,0x10(%rsi)
b806(6): jbe 0x340(%rip)
b80c(5): lea 0x10(%rax,%rdi,1),%rcx
b811(3): mov 0x8(%rcx),%eax
b814(5): and $0x2000ff,%eax
b819(5): cmp $0x200001,%eax
b81e(6): jnz 0x328(%rip)
b824(4): add $0x20,%rdi
b828(3): mov %rdi,%r13
b82b(5): mov 0x38(%rsp),%rdi
b830(4): lea 0x1(%rdi),%rax
b834(2): jmp 0x27(%rip)
b836(a): nop 0x0(%rax,%rax,1)
b840(3): mov (%rsi),%rcx
b843(3): add %r13,%rcx
b846(4): add $0x10,%r13
b84a(3): mov 0x8(%rcx),%edx
b84d(6): and $0x2000ff,%edx
b853(6): cmp $0x200001,%edx
b859(2): jnz 0x1b(%rip)
b85b(3): movzx (%rcx),%edx
b85e(4): add $0x1,%rax
b862(3): mov %dl,0xffffffff(%rax)
b865(3): mov %rax,%rdx
b868(3): sub %rdi,%rdx
b86b(3): add %r12,%rdx
b86e(4): cmp %rdx,0x10(%rsi)
b872(2): jnbe 0xffffffce(%rip)
b874(5): mov 0x38(%rsp),%rsi
b879(5): mov 0x40(%rsp),%rcx
b87e(5): mov 0x48(%rsp),%rdi
b883(3): sub %rsi,%rax
b886(7): mov $0x0,(%rcx)
b88d(3): mov %rax,%r12
b890(3): mov %rax,%rdx
b893(5): call 0xffff9fed(%rip)
b898(3): cmp %rax,%r12
b89b(6): jnz 0xfffffecc(%rip)
b8a1(4): mov 0x54(%rsp),%edi
b8a5(5): call 0xffff632b(%rip)
b8aa(5): mov 0x40(%rsp),%rdx
b8af(5): mov 0x38(%rsp),%rdi
b8b4(2): mov %eax,%esi
b8b6(5): call 0xffff621a(%rip)
b8bb(4): cmp $0xffffffff,%rax
b8bf(6): jz 0xfffffea8(%rip)
b8c5(5): movzx 0x60(%rsp),%eax
b8ca(5): mov $0x1,0x0(%rbp,%rax,1)
b8cf(5): jmp 0xfffffe98(%rip)
b8d4(4): nop 0x0(%rax)
b8d8(5): mov 0x8(%rsp),%rax
b8dd(3): mov (%rsi),%r12
b8e0(7): cmp $0x1,0xb4(%rax)
b8e7(2): jle 0x26(%rip)
b8e9(6): cmp $0x0,0x48(%r12)
b8ef(6): jnz 0x100(%rip)
b8f5(6): test $0x1,0x20(%r12)
b8fb(6): jnz 0xf4(%rip)
b901(6): cmp $0x0,0x40(%r12)
b907(6): jnz 0xe8(%rip)
b90d(3): xor %r13d,%r13d
b910(6): cmp $0x0,0x28(%r12)
b916(6): jle 0xfffffe51(%rip)
b91c(3): mov %r12,%r15
b91f(5): mov 0x40(%rsp),%r14
b924(3): mov %rbp,%r12
b927(3): mov %r13,%rbp
b92a(3): mov %ebx,%r13d
b92d(2): jmp 0x10(%rip)
b92f(4): add $0x1,%rbp
b933(4): cmp 0x28(%r15),%rbp
b937(6): jnl 0xad(%rip)
b93d(7): mov $0x0,(%r14)
b944(3): mov (%r15),%rax
b947(3): mov %r14,%rdx
b94a(5): mov 0x38(%rsp),%rdi
b94f(8): lea 0x0(,%rbp,4),%rbx
b957(3): mov 0x0(%rax,%rbp,4),%esi
b95a(5): call 0xffff6176(%rip)
b95f(4): cmp $0xffffffff,%rax
b963(2): jz 0x2c(%rip)
b965(5): movzx 0x60(%rsp),%edx
b96a(3): test %r13d,%r13d
b96d(5): mov $0x1,0x0(%r12,%rdx,1)
b972(5): mov %rdx,0x10(%rsp)
b977(2): jz 0x18(%rip)
b979(5): call 0xffff62e7(%rip)
b97e(5): mov 0x10(%rsp),%rdx
b983(3): mov (%rax),%rax
b986(4): movsxd 0x0(%rax,%rdx,4),%rax
b98a(5): mov $0x1,0x0(%r12,%rax,1)
b98f(5): mov 0x30(%rsp),%rax
b994(4): test $0x40,0x1a(%rax)
b998(2): jz 0xffffff97(%rip)
b99a(5): mov 0x8(%rsp),%rax
b99f(7): cmp $0x1,0xb4(%rax)
b9a6(2): jle 0xffffff89(%rip)
b9a8(3): mov (%r15),%rax
b9ab(3): mov 0x0(%rax,%rbx,1),%edi
b9ae(5): call 0xffff6222(%rip)
b9b3(5): mov 0x38(%rsp),%rdi
b9b8(3): mov %r14,%rdx
b9bb(2): mov %eax,%esi
b9bd(5): call 0xffff6113(%rip)
b9c2(4): cmp $0xffffffff,%rax
b9c6(6): jz 0xffffff69(%rip)
b9cc(5): movzx 0x60(%rsp),%eax
b9d1(4): add $0x1,%rbp
b9d5(5): mov $0x1,0x0(%r12,%rax,1)
b9da(4): cmp 0x28(%r15),%rbp
b9de(6): jl 0xffffff5f(%rip)
b9e4(3): mov %r13d,%ebx
b9e7(3): mov %r12,%rbp
b9ea(5): jmp 0xfffffd7d(%rip)
b9ef(5): mov 0x40(%rsp),%r12
b9f4(5): mov 0x48(%rsp),%r13
b9f9(5): mov $0x0,0x54(%rsp)
b9fe(2): nop 
ba00(2): xor %edi,%edi
ba02(8): mov $0x0,(%r12)
ba0a(3): mov %r12,%rcx
ba0d(5): mov $0x1,%edx
ba12(3): mov %r13,%rsi
ba15(5): call 0xffff9e6b(%rip)
ba1a(4): cmp $0xfffffffe,%rax
ba1e(2): jnz 0xc(%rip)
ba20(5): movzx 0x54(%rsp),%eax
ba25(5): mov $0x1,0x0(%rbp,%rax,1)
ba2a(5): add $0x1,0x54(%rsp)
ba2f(2): jnz 0xffffffd1(%rip)
ba31(5): jmp 0xfffffd36(%rip)
ba36(3): mov %rbp,%r13
ba39(3): xor %r12d,%r12d
ba3c(9): mov $0x0,0x18(%rsp)
ba45(5): mov 0x10(%rsp),%rax
ba4a(5): mov 0x18(%rsp),%rsi
ba4f(3): xor %r14d,%r14d
ba52(4): mov 0x0(%rcx,%rax,1),%rax
ba56(4): mov 0x0(%rax,%rsi,1),%r15
ba5a(6): nop 0x0(%rax,%rax,1)
ba60(4): bt %r14,%r15
ba64(2): jnb 0x21(%rip)
ba66(2): test %ebx,%ebx
ba68(6): mov $0x1,0x0(%r13,%r14,1)
ba6e(2): jz 0x17(%rip)
ba70(5): call 0xffff61f0(%rip)
ba75(3): mov (%rax),%rax
ba78(4): lea 0x0(%r12,%r14,1),%rdx
ba7c(4): movsxd 0x0(%rax,%rdx,4),%rax
ba80(5): mov $0x1,0x0(%rbp,%rax,1)
ba85(4): add $0x1,%r14
ba89(4): cmp $0x40,%r14
ba8d(2): jnz 0xffffffd3(%rip)
ba8f(4): add $0x40,%r12
ba93(6): add $0x8,0x18(%rsp)
ba99(4): add $0x40,%r13
ba9d(7): cmp $0x100,%r12
baa4(6): jz 0xfffffcc3(%rip)
baaa(5): mov 0x8(%rsp),%rax
baaf(3): mov (%rax),%rcx
bab2(2): jmp 0xffffff93(%rip)
bab4(8): movdqa 0x9cc4(%rip),%xmm0
babc(4): movups %xmm0,0x0(%rbp)
bac0(4): movups %xmm0,0x10(%rbp)
bac4(4): movups %xmm0,0x20(%rbp)
bac8(4): movups %xmm0,0x30(%rbp)
bacc(4): movups %xmm0,0x40(%rbp)
bad0(4): movups %xmm0,0x50(%rbp)
bad4(4): movups %xmm0,0x60(%rbp)
bad8(4): movups %xmm0,0x70(%rbp)
badc(7): movups %xmm0,0x80(%rbp)
bae3(7): movups %xmm0,0x90(%rbp)
baea(7): movups %xmm0,0xa0(%rbp)
baf1(7): movups %xmm0,0xb0(%rbp)
baf8(7): movups %xmm0,0xc0(%rbp)
baff(7): movups %xmm0,0xd0(%rbp)
bb06(7): movups %xmm0,0xe0(%rbp)
bb0d(7): movups %xmm0,0xf0(%rbp)
bb14(5): mov 0x30(%rsp),%rax
bb19(4): or $0x1,0x38(%rax)
bb1d(8): mov 0x168(%rsp),%rax
bb25(9): xor $0x28,%rax
bb2e(6): jnz 0x94(%rip)
bb34(7): add $0x178,%rsp
bb3b(1): pop %rbx
bb3c(1): pop %rbp
bb3d(2): pop %r12
bb3f(2): pop %r13
bb41(2): pop %r14
bb43(2): pop %r15
bb45(1): ret near (%rsp)
bb46(5): mov 0x38(%rsp),%rax
bb4b(4): add $0x1,%rax
bb4f(5): jmp 0xfffffd25(%rip)
bb54(8): movdqa 0x9c24(%rip),%xmm0
bb5c(3): cmp $0x2,%eax
bb5f(4): movups %xmm0,0x0(%rbp)
bb63(4): movups %xmm0,0x10(%rbp)
bb67(4): movups %xmm0,0x20(%rbp)
bb6b(4): movups %xmm0,0x30(%rbp)
bb6f(4): movups %xmm0,0x40(%rbp)
bb73(4): movups %xmm0,0x50(%rbp)
bb77(4): movups %xmm0,0x60(%rbp)
bb7b(4): movups %xmm0,0x70(%rbp)
bb7f(7): movups %xmm0,0x80(%rbp)
bb86(7): movups %xmm0,0x90(%rbp)
bb8d(7): movups %xmm0,0xa0(%rbp)
bb94(7): movups %xmm0,0xb0(%rbp)
bb9b(7): movups %xmm0,0xc0(%rbp)
bba2(7): movups %xmm0,0xd0(%rbp)
bba9(7): movups %xmm0,0xe0(%rbp)
bbb0(7): movups %xmm0,0xf0(%rbp)
bbb7(6): jnz 0xffffff66(%rip)
bbbd(5): jmp 0xffffff57(%rip)
bbc2(5): call 0xffff5dce(%rip)

"check_node_accept_bytes.isra.31" :
bbd0(4): shl/sal $0x4,%rdx
bbd4(2): push %r13
bbd6(2): push %r12
bbd8(4): lea 0x0(%rdi,%rdx,1),%r9
bbdc(1): push %rbp
bbdd(1): push %rbx
bbde(4): sub $0x8,%rsp
bbe2(5): movzx 0x8(%r9),%r11d
bbe7(4): cmp $0x7,%r11b
bbeb(6): jz 0x115(%rip)
bbf1(7): cmp $0x1,0x90(%rcx)
bbf8(6): jz 0xc8(%rip)
bbfe(3): mov %rsi,%rbx
bc01(3): mov %rcx,%rdi
bc04(3): mov %r8,%rsi
bc07(3): mov %rcx,%r10
bc0a(5): call 0xffffb766(%rip)
bc0f(4): cmp $0x5,%r11b
bc13(2): mov %eax,%ebp
bc15(6): jz 0xbb(%rip)
bc1b(4): cmp $0x6,%r11b
bc1f(6): jnz 0xa1(%rip)
bc25(3): cmp $0x1,%eax
bc28(6): jle 0x98(%rip)
bc2e(3): mov (%r9),%r13
bc31(4): mov 0x40(%r13),%rsi
bc35(4): mov 0x28(%r13),%rdx
bc39(3): test %rsi,%rsi
bc3c(2): jnz 0xd(%rip)
bc3e(5): cmp $0x0,0x48(%r13)
bc43(6): jz 0xf5(%rip)
bc49(4): mov 0x10(%r10),%rax
bc4d(3): test %rdx,%rdx
bc50(4): mov 0x0(%rax,%r8,4),%r12d
bc54(2): jle 0x23(%rip)
bc56(4): mov 0x0(%r13),%rcx
bc5a(3): cmp (%rcx),%r12d
bc5d(2): jz 0x55(%rip)
bc5f(2): xor %eax,%eax
bc61(2): jmp 0xd(%rip)
bc63(5): nop 0x0(%rax,%rax,1)
bc68(4): cmp 0x0(%rcx,%rax,4),%r12d
bc6c(2): jz 0x46(%rip)
bc6e(4): add $0x1,%rax
bc72(3): cmp %rdx,%rax
bc75(2): jnz 0xfffffff3(%rip)
bc77(4): mov 0x48(%r13),%rax
bc7b(3): test %rax,%rax
bc7e(6): jle 0xde(%rip)
bc84(2): xor %ebx,%ebx
bc86(2): jmp 0x18(%rip)
bc88(8): nop 0x0(%rax,%rax,1)
bc90(4): add $0x1,%rbx
bc94(4): cmp 0x48(%r13),%rbx
bc98(6): jnl 0xc0(%rip)
bc9e(4): mov 0x18(%r13),%rax
bca2(3): mov %r12d,%edi
bca5(4): mov 0x0(%rax,%rbx,8),%rsi
bca9(5): call 0xffff5c87(%rip)
bcae(2): test %eax,%eax
bcb0(2): jz 0xffffffe0(%rip)
bcb2(5): test $0x1,0x20(%r13)
bcb7(2): jz 0xb(%rip)
bcb9(7): nop 0x0(%rax)
bcc0(2): xor %ebp,%ebp
bcc2(4): add $0x8,%rsp
bcc6(2): mov %ebp,%eax
bcc8(1): pop %rbx
bcc9(1): pop %rbp
bcca(2): pop %r12
bccc(2): pop %r13
bcce(1): ret near (%rsp)
bccf(1): nop 
bcd0(3): cmp $0x1,%eax
bcd3(2): jle 0xffffffed(%rip)
bcd5(3): mov (%rbx),%rax
bcd8(2): test $0x40,%al
bcda(2): jz 0x16(%rip)
bcdc(2): test $0x80,%al
bcde(2): jz 0xffffffe4(%rip)
bce0(4): mov 0x8(%r10),%rax
bce4(5): cmp $0x0,0x0(%rax,%r8,1)
bce9(2): jz 0xffffffd7(%rip)
bceb(2): jmp 0xffffffd7(%rip)
bced(3): nop (%rax)
bcf0(4): mov 0x8(%r10),%rdx
bcf4(5): cmp $0xa,0x0(%rdx,%r8,1)
bcf9(2): jnz 0xffffffe3(%rip)
bcfb(2): jmp 0xffffffc5(%rip)
bcfd(3): nop (%rax)
bd00(4): mov 0x8(%rcx),%rdx
bd04(4): lea 0x0(%rdx,%r8,1),%rsi
bd08(3): movzx (%rsi),%eax
bd0b(2): cmp $0xc1,%al
bd0d(2): jbe 0xffffffb3(%rip)
bd0f(4): mov 0x58(%rcx),%rcx
bd13(4): lea 0x1(%r8),%rdi
bd17(3): cmp %rcx,%rdi
bd1a(2): jnl 0xffffffa6(%rip)
bd1c(2): cmp $0xdf,%al
bd1e(6): movzx 0x1(%rdx,%r8,1),%edx
bd24(2): jnbe 0x6a(%rip)
bd26(3): add $0x80,%edx
bd29(5): mov $0x2,%ebp
bd2e(3): cmp $0x3f,%dl
bd31(2): jnbe 0xffffff8f(%rip)
bd33(2): jmp 0xffffff8f(%rip)
bd35(3): nop (%rax)
bd38(3): test %rdx,%rdx
bd3b(6): jnz 0xffffff0e(%rip)
bd41(5): test $0x1,0x20(%r13)
bd46(6): jnz 0xffffff7c(%rip)
bd4c(5): jmp 0xffffff74(%rip)
bd51(7): nop 0x0(%rax)
bd58(4): mov 0x40(%r13),%rsi
bd5c(3): test %rsi,%rsi
bd5f(2): jle 0xffffffe2(%rip)
bd61(4): mov 0x8(%r13),%rdx
bd65(2): xor %eax,%eax
bd67(2): jmp 0x12(%rip)
bd69(7): nop 0x0(%rax)
bd70(4): add $0x1,%rax
bd74(3): cmp %rsi,%rax
bd77(2): jz 0xffffffca(%rip)
bd79(4): cmp 0x0(%rdx,%rax,4),%r12d
bd7d(2): jl 0xfffffff3(%rip)
bd7f(4): mov 0x10(%r13),%rcx
bd83(4): cmp 0x0(%rcx,%rax,4),%r12d
bd87(2): jnle 0xffffffe9(%rip)
bd89(5): jmp 0xffffff29(%rip)
bd8e(2): cmp $0xef,%al
bd90(2): jnbe 0x48(%rip)
bd92(2): cmp $0xe0,%al
bd94(2): jnz 0xb(%rip)
bd96(3): cmp $0x9f,%dl
bd99(6): jbe 0xffffff27(%rip)
bd9f(5): mov $0x3,%ebp
bda4(3): movsxd %ebp,%rdi
bda7(3): add %rdi,%r8
bdaa(3): cmp %r8,%rcx
bdad(6): jl 0xffffff13(%rip)
bdb3(5): mov $0x1,%eax
bdb8(2): jmp 0xf(%rip)
bdba(4): add $0x1,%rax
bdbe(3): cmp %rax,%rdi
bdc1(6): jle 0xffffff01(%rip)
bdc7(4): movzx 0x0(%rsi,%rax,1),%ebx
bdcb(3): lea 0xffffff80(%rbx),%edx
bdce(3): cmp $0x3f,%dl
bdd1(2): jbe 0xffffffe9(%rip)
bdd3(5): jmp 0xfffffeed(%rip)
bdd8(2): cmp $0xf7,%al
bdda(2): jnbe 0x16(%rip)
bddc(2): cmp $0xf0,%al
bdde(2): jnz 0xb(%rip)
bde0(3): cmp $0x8f,%dl
bde3(6): jbe 0xfffffedd(%rip)
bde9(5): mov $0x4,%ebp
bdee(2): jmp 0xffffffb6(%rip)
bdf0(2): cmp $0xfb,%al
bdf2(2): jnbe 0x16(%rip)
bdf4(2): cmp $0xf8,%al
bdf6(2): jnz 0xb(%rip)
bdf8(3): cmp $0x87,%dl
bdfb(6): jbe 0xfffffec5(%rip)
be01(5): mov $0x5,%ebp
be06(2): jmp 0xffffff9e(%rip)
be08(2): cmp $0xfd,%al
be0a(6): jnbe 0xfffffeb6(%rip)
be10(2): cmp $0xfc,%al
be12(2): jnz 0xb(%rip)
be14(3): cmp $0x83,%dl
be17(6): jbe 0xfffffea9(%rip)
be1d(5): mov $0x6,%ebp
be22(2): jmp 0xffffff82(%rip)

"check_arrival" :
be30(2): push %r15
be32(2): push %r14
be34(3): mov %rdi,%r15
be37(2): push %r13
be39(2): push %r12
be3b(1): push %rbp
be3c(1): push %rbx
be3d(3): mov %rcx,%rbp
be40(3): mov %rdx,%rbx
be43(7): sub $0xd8,%rsp
be4a(7): mov 0x98(%rdi),%rcx
be51(4): mov 0x8(%rsi),%r13
be55(9): mov $0x28,%rax
be5e(8): mov %rax,0xc8(%rsp)
be66(2): xor %eax,%eax
be68(3): mov %rdx,%rax
be6b(5): mov %rsi,0x60(%rsp)
be70(5): mov %r8,0x78(%rsp)
be75(4): shl/sal $0x4,%rax
be79(3): add (%rcx),%rax
be7c(5): mov %r9,0x40(%rsp)
be81(5): mov %rcx,0x30(%rsp)
be86(b): mov $0x0,0x88(%rsp)
be91(3): mov (%rax),%rax
be94(5): mov %rax,0x48(%rsp)
be99(7): movsxd 0xe0(%rdi),%rax
bea0(3): add %r9,%rax
bea3(3): cmp %r13,%rax
bea6(6): jnl 0x620(%rip)
beac(5): mov 0x60(%rsp),%rax
beb1(7): mov 0xb8(%r15),%rdx
beb8(4): mov 0x48(%r15),%rcx
bebc(3): mov (%rax),%r12
bebf(4): mov 0x10(%rax),%r14
bec3(5): mov %rdx,0x68(%rsp)
bec8(5): mov %rcx,0x70(%rsp)
becd(7): mov 0xa0(%r15),%edx
bed4(3): test %r12,%r12
bed7(7): mov %r14,0xb8(%r15)
bede(6): jz 0x3e2(%rip)
bee4(5): lea 0xffffffff(%r12),%rsi
bee9(4): mov %r12,0x48(%r15)
beed(3): mov %r15,%rdi
bef0(5): call 0xffffd310(%rip)
bef5(3): cmp %rbp,%r12
bef8(3): mov %eax,%r13d
befb(6): jz 0x3d8(%rip)
bf01(4): mov 0x0(%r14,%r12,8),%rbp
bf05(3): test %rbp,%rbp
bf08(2): jz 0xc(%rip)
bf0a(4): test $0x40,0x68(%rbp)
bf0e(6): jnz 0x522(%rip)
bf14(4): pxor %xmm0,%xmm0
bf18(c): mov $0x0,0xa0(%rsp)
bf24(8): movaps %xmm0,0x90(%rsp)
bf2c(5): cmp 0x40(%rsp),%r12
bf31(6): jnl 0x327(%rip)
bf37(7): mov 0xe0(%r15),%ecx
bf3e(2): test %ecx,%ecx
bf40(6): js 0x318(%rip)
bf46(8): lea 0x90(%rsp),%rbx
bf4e(8): lea 0x8(,%r12,8),%rax
bf56(4): mov %r12,(%rsp)
bf5a(9): mov $0x0,0x20(%rsp)
bf63(5): mov %rbx,0x8(%rsp)
bf68(8): lea 0xb0(%rsp),%rbx
bf70(5): mov %rax,0x10(%rsp)
bf75(7): mov 0xb8(%r15),%rax
bf7c(5): mov %rbx,0x18(%rsp)
bf81(8): lea 0x8c(%rsp),%rbx
bf89(5): mov %rbx,0x58(%rsp)
bf8e(5): mov 0x10(%rsp),%rcx
bf93(c): mov $0x0,0x98(%rsp)
bf9f(4): mov 0x0(%rax,%rcx,1),%rsi
bfa3(3): test %rsi,%rsi
bfa6(6): jz 0x3c2(%rip)
bfac(5): mov 0x8(%rsp),%rdi
bfb1(4): add $0x8,%rsi
bfb5(5): call 0xffffb98b(%rip)
bfba(2): test %eax,%eax
bfbc(7): mov %eax,0x88(%rsp)
bfc3(6): jnz 0x3dd(%rip)
bfc9(3): test %rbp,%rbp
bfcc(6): jz 0x1ac(%rip)
bfd2(5): cmp $0x0,0x28(%rbp)
bfd7(5): mov 0x18(%rsp),%rax
bfdc(4): pxor %xmm0,%xmm0
bfe0(7): mov 0x98(%r15),%r12
bfe7(b): mov $0x0,0x8c(%rsp)
bff2(8): mov $0x0,0x10(%rax)
bffa(3): movaps %xmm0,(%rax)
bffd(6): jle 0x533(%rip)
c003(8): lea 0xd8(%r12),%rax
c00b(2): xor %ebx,%ebx
c00d(5): mov %rax,0x28(%rsp)
c012(2): jmp 0x47(%rip)
c014(4): nop 0x0(%rax)
c018(4): mov (%rsp),%rdx
c01c(3): mov %r15,%rdi
c01f(5): call 0xffffd2d1(%rip)
c024(2): test %al,%al
c026(2): jz 0x25(%rip)
c028(8): lea 0x0(,%r14,8),%r13
c030(5): mov 0x18(%r12),%rax
c035(5): mov 0x8(%rsp),%rdi
c03a(4): mov 0x0(%rax,%r13,1),%rsi
c03e(5): call 0xffff9ea2(%rip)
c043(2): test %al,%al
c045(6): jz 0x343(%rip)
c04b(4): add $0x1,%rbx
c04f(4): cmp 0x28(%rbp),%rbx
c053(6): jnl 0x38d(%rip)
c059(4): mov 0x30(%rbp),%rax
c05d(4): mov (%r12),%rdi
c061(4): mov 0x0(%rax,%rbx,8),%r14
c065(3): mov %r14,%r13
c068(4): shl/sal $0x4,%r13
c06c(4): lea 0x0(%rdi,%r13,1),%rsi
c070(4): test $0x10,0xa(%rsi)
c074(2): jz 0xffffffa4(%rip)
c076(4): mov (%rsp),%r8
c07a(5): mov 0x28(%rsp),%rsi
c07f(3): mov %r15,%rcx
c082(3): mov %r14,%rdx
c085(5): call 0xfffffb4b(%rip)
c08a(3): cmp $0x1,%eax
c08d(6): jle 0x2c3(%rip)
c093(2): cwde 
c095(4): add (%rsp),%rax
c099(5): mov 0x18(%r12),%rdx
c09e(8): lea 0x0(,%r14,8),%r13
c0a6(4): mov 0x0(%rdx,%r14,8),%rdx
c0aa(3): mov %rax,%rcx
c0ad(5): mov %rax,0x38(%rsp)
c0b2(8): lea 0x0(,%rax,8),%r14
c0ba(7): mov 0xb8(%r15),%rax
c0c1(4): mov 0x0(%rax,%rcx,8),%rsi
c0c5(c): mov $0x0,0xb8(%rsp)
c0d1(3): test %rsi,%rsi
c0d4(2): jz 0x25(%rip)
c0d6(5): mov 0x18(%rsp),%rdi
c0db(4): add $0x8,%rsi
c0df(5): mov %rdx,0x50(%rsp)
c0e4(5): call 0xffffb85c(%rip)
c0e9(2): test %eax,%eax
c0eb(7): mov %eax,0x8c(%rsp)
c0f2(5): mov 0x50(%rsp),%rdx
c0f7(2): jnz 0x59(%rip)
c0f9(5): mov 0x18(%rsp),%rdi
c0fe(3): mov %rdx,%rsi
c101(5): call 0xffff9ddf(%rip)
c106(2): test %al,%al
c108(6): jz 0x280(%rip)
c10e(7): add 0xb8(%r15),%r14
c115(5): mov 0x18(%rsp),%rdx
c11a(3): mov %r12,%rsi
c11d(5): mov 0x58(%rsp),%rdi
c122(5): call 0xffffc90e(%rip)
c127(5): mov 0x38(%rsp),%rdx
c12c(3): mov %rax,(%r14)
c12f(7): mov 0xb8(%r15),%rax
c136(5): cmp $0x0,0x0(%rax,%rdx,8)
c13b(6): jnz 0xfffffef5(%rip)
c141(7): mov 0x8c(%rsp),%edx
c148(2): test %edx,%edx
c14a(6): jz 0xfffffee6(%rip)
c150(8): mov 0xc0(%rsp),%rdi
c158(5): call 0xffff5728(%rip)
c15d(7): mov 0x8c(%rsp),%eax
c164(2): test %eax,%eax
c166(7): mov %eax,0x88(%rsp)
c16d(6): jnz 0x233(%rip)
c173(5): nop 0x0(%rax,%rax,1)
c178(4): mov (%rsp),%rax
c17c(9): cmp $0x0,0x98(%rsp)
c185(4): lea 0x1(%rax),%rbx
c189(3): mov %rbx,%r12
c18c(2): jz 0x58(%rip)
c18e(7): mov 0x110(%rsp),%ecx
c195(5): mov 0x48(%rsp),%rdx
c19a(5): mov 0x8(%rsp),%rsi
c19f(5): mov 0x30(%rsp),%rdi
c1a4(5): call 0xffffbc2c(%rip)
c1a9(2): test %eax,%eax
c1ab(7): mov %eax,0x88(%rsp)
c1b2(6): jnz 0x1ee(%rip)
c1b8(8): mov 0x110(%rsp),%r8d
c1c0(5): mov 0x48(%rsp),%rcx
c1c5(3): mov %rbx,%rdx
c1c8(5): mov 0x8(%rsp),%rsi
c1cd(3): mov %r15,%rdi
c1d0(5): call 0xffffcb40(%rip)
c1d5(2): test %eax,%eax
c1d7(7): mov %eax,0x88(%rsp)
c1de(6): jnz 0x1c2(%rip)
c1e4(7): mov 0xa0(%r15),%edx
c1eb(4): mov (%rsp),%rsi
c1ef(3): mov %r15,%rdi
c1f2(5): call 0xffffd00e(%rip)
c1f7(5): mov 0x8(%rsp),%rdx
c1fc(5): mov 0x30(%rsp),%rsi
c201(8): lea 0x88(%rsp),%rdi
c209(2): mov %eax,%ecx
c20b(5): call 0xffffc565(%rip)
c210(3): test %rax,%rax
c213(3): mov %rax,%rbp
c216(6): jz 0x1ea(%rip)
c21c(7): mov 0xb8(%r15),%rax
c223(5): mov 0x10(%rsp),%rdx
c228(9): mov $0x0,0x20(%rsp)
c231(4): mov %rbp,0x0(%rax,%rdx,1)
c235(5): cmp %rbx,0x40(%rsp)
c23a(2): jle 0x1e(%rip)
c23c(7): movsxd 0xe0(%r15),%rdx
c243(6): add $0x8,0x10(%rsp)
c249(5): cmp 0x20(%rsp),%rdx
c24e(4): mov %rbx,(%rsp)
c252(6): jnl 0xfffffd3c(%rip)
c258(8): mov 0xa0(%rsp),%rdi
c260(5): call 0xffff5620(%rip)
c265(7): mov 0xb8(%r15),%rax
c26c(5): mov 0x40(%rsp),%rbx
c271(4): mov 0x0(%rax,%rbx,8),%rax
c275(3): test %rax,%rax
c278(6): jz 0x2dd(%rip)
c27e(5): mov 0x60(%rsp),%rbx
c283(5): mov 0x78(%rsp),%rdx
c288(4): lea 0x18(%rax),%rsi
c28c(3): mov %r12,(%rbx)
c28f(5): mov 0x68(%rsp),%rbx
c294(7): mov %rbx,0xb8(%r15)
c29b(5): mov 0x70(%rsp),%rbx
c2a0(4): mov %rbx,0x48(%r15)
c2a4(4): mov 0x10(%rax),%rdi
c2a8(5): call 0xffffb178(%rip)
c2ad(3): test %rax,%rax
c2b0(3): setz %al
c2b3(3): movzx %al,%eax
c2b6(5): jmp 0xfe(%rip)
c2bb(5): nop 0x0(%rax,%rax,1)
c2c0(4): lea 0xffffffff(%rbp),%rsi
c2c4(4): mov %rbp,0x48(%r15)
c2c8(3): mov %r15,%rdi
c2cb(5): call 0xffffcf35(%rip)
c2d0(3): mov %eax,%r13d
c2d3(5): mov $0x8,%edi
c2d8(c): mov $0x1,0x90(%rsp)
c2e4(c): mov $0x1,0x98(%rsp)
c2f0(5): call 0xffff57d0(%rip)
c2f5(3): test %rax,%rax
c2f8(8): mov %rax,0xa0(%rsp)
c300(6): jz 0x24b(%rip)
c306(3): mov %rbx,(%rax)
c309(7): mov 0x110(%rsp),%ecx
c310(8): lea 0x90(%rsp),%rbx
c318(5): mov 0x48(%rsp),%rdx
c31d(5): mov 0x30(%rsp),%rdi
c322(3): mov %rbp,%r12
c325(3): mov %rbx,%rsi
c328(b): mov $0x0,0x88(%rsp)
c333(5): call 0xffffba9d(%rip)
c338(2): test %eax,%eax
c33a(7): mov %eax,0x88(%rsp)
c341(6): jz 0x11c(%rip)
c347(2): jmp 0x59(%rip)
c349(7): nop 0x0(%rax)
c350(2): test %eax,%eax
c352(6): jnz 0xfffffcd6(%rip)
c358(4): mov (%r12),%rsi
c35c(3): add %r13,%rsi
c35f(5): jmp 0xfffffcb9(%rip)
c364(4): nop 0x0(%rax)
c368(3): test %rbp,%rbp
c36b(6): jnz 0xfffffc67(%rip)
c371(4): mov (%rsp),%rax
c375(4): lea 0x1(%rax),%rbx
c379(3): mov %rbx,%r12
c37c(5): jmp 0xfffffe68(%rip)
c381(7): nop 0x0(%rax)
c388(8): mov 0xc0(%rsp),%rdi
c390(5): call 0xffff54f0(%rip)
c395(b): mov $0xc,0x88(%rsp)
c3a0(8): mov 0xa0(%rsp),%rdi
c3a8(5): call 0xffff54d8(%rip)
c3ad(7): mov 0x88(%rsp),%eax
c3b4(8): mov 0xc8(%rsp),%rbx
c3bc(9): xor $0x28,%rbx
c3c5(6): jnz 0x1b7(%rip)
c3cb(7): add $0xd8,%rsp
c3d2(1): pop %rbx
c3d3(1): pop %rbp
c3d4(2): pop %r12
c3d6(2): pop %r13
c3d8(2): pop %r14
c3da(2): pop %r15
c3dc(1): ret near (%rsp)
c3dd(3): nop (%rax)
c3e0(8): mov 0xc0(%rsp),%rdi
c3e8(5): call 0xffff5498(%rip)
c3ed(b): mov $0x0,0x88(%rsp)
c3f8(5): jmp 0xfffffd80(%rip)
c3fd(3): nop (%rax)
c400(7): mov 0x88(%rsp),%eax
c407(2): test %eax,%eax
c409(2): jnz 0xffffff97(%rip)
c40b(7): mov 0xb8(%r15),%rax
c412(5): mov 0x10(%rsp),%rdx
c417(6): add $0x1,0x20(%rsp)
c41d(8): mov $0x0,0x0(%rax,%rdx,1)
c425(5): jmp 0xfffffe10(%rip)
c42a(6): nop 0x0(%rax,%rax,1)
c430(8): lea 0x90(%rsp),%rbx
c438(4): lea 0x8(%rbp),%rsi
c43c(3): mov %rbx,%rdi
c43f(5): call 0xffffc141(%rip)
c444(2): test %eax,%eax
c446(7): mov %eax,0x88(%rsp)
c44d(6): jnz 0xffffff67(%rip)
c453(4): test $0x40,0x68(%rbp)
c457(6): jz 0xfffffad5(%rip)
c45d(9): cmp $0x0,0x98(%rsp)
c466(2): jz 0x2c(%rip)
c468(8): mov 0x110(%rsp),%r8d
c470(5): mov 0x48(%rsp),%rcx
c475(3): mov %r12,%rdx
c478(3): mov %rbx,%rsi
c47b(3): mov %r15,%rdi
c47e(5): call 0xffffc892(%rip)
c483(2): test %eax,%eax
c485(7): mov %eax,0x88(%rsp)
c48c(6): jnz 0xffffff14(%rip)
c492(5): mov 0x30(%rsp),%rsi
c497(8): lea 0x88(%rsp),%rdi
c49f(3): mov %r13d,%ecx
c4a2(3): mov %rbx,%rdx
c4a5(5): call 0xffffc2cb(%rip)
c4aa(3): test %rax,%rax
c4ad(3): mov %rax,%rbp
c4b0(6): jz 0x87(%rip)
c4b6(7): mov 0xb8(%r15),%rax
c4bd(4): mov %rbp,0x0(%rax,%r12,8)
c4c1(5): jmp 0xfffffa6b(%rip)
c4c6(4): lea 0x1(%rax),%r12
c4ca(a): mov $0x9223372036854775807,%rax
c4d4(3): sub %r13,%rax
c4d7(3): cmp %r12,%rax
c4da(2): jl 0x71(%rip)
c4dc(5): lea 0x0(%r13,%r12,1),%r14
c4e1(a): mov $0x2305843009213693951,%rax
c4eb(3): cmp %rax,%r14
c4ee(2): jnbe 0x5d(%rip)
c4f0(5): mov 0x60(%rsp),%rax
c4f5(8): lea 0x0(,%r14,8),%rsi
c4fd(4): mov 0x10(%rax),%rdi
c501(5): call 0xffff562f(%rip)
c506(3): test %rax,%rax
c509(2): jz 0x42(%rip)
c50b(5): mov 0x60(%rsp),%rcx
c510(8): lea 0x0(,%r12,8),%rdx
c518(4): lea 0x0(%rax,%r13,8),%rdi
c51c(2): xor %esi,%esi
c51e(4): mov %rax,0x10(%rcx)
c522(4): mov %r14,0x8(%rcx)
c526(5): call 0xffff54ea(%rip)
c52b(5): jmp 0xfffff981(%rip)
c530(2): xor %edi,%edi
c532(5): jmp 0xfffffeb6(%rip)
c537(7): mov 0x88(%rsp),%esi
c53e(2): test %esi,%esi
c540(6): jz 0xffffff76(%rip)
c546(5): jmp 0xfffffe5a(%rip)
c54b(5): mov $0xc,%eax
c550(5): jmp 0xfffffe64(%rip)
c555(5): mov 0x60(%rsp),%rax
c55a(3): mov %r12,(%rax)
c55d(5): mov 0x68(%rsp),%rax
c562(7): mov %rax,0xb8(%r15)
c569(5): mov 0x70(%rsp),%rax
c56e(4): mov %rax,0x48(%r15)
c572(5): mov $0x1,%eax
c577(5): jmp 0xfffffe3d(%rip)
c57c(5): call 0xffff5414(%rip)

"set_regs" :
c590(1): push %rbp
c591(3): mov %rsp,%rbp
c594(2): push %r15
c596(2): push %r14
c598(2): push %r13
c59a(2): push %r12
c59c(3): mov %rcx,%r13
c59f(1): push %rbx
c5a0(3): mov %rsi,%r12
c5a3(7): sub $0xb8,%rsp
c5aa(7): mov %rdx,0xffffff68(%rbp)
c5b1(8): mov $0x0,0xffffffb0(%rbp)
c5b9(9): mov $0x28,%rax
c5c2(4): mov %rax,0xffffffc8(%rbp)
c5c6(2): xor %eax,%eax
c5c8(3): mov (%rdi),%rax
c5cb(3): test %r8b,%r8b
c5ce(8): mov $0x2,0xffffffb8(%rbp)
c5d6(8): mov $0x0,0xffffffc0(%rbp)
c5de(7): mov %rax,0xffffff70(%rbp)
c5e5(6): jz 0x7a8(%rip)
c5eb(5): mov $0x60,%edi
c5f0(5): call 0xffff54d0(%rip)
c5f5(4): lea 0xffffffb0(%rbp),%rcx
c5f9(3): test %rax,%rax
c5fc(4): mov %rax,0xffffffc0(%rbp)
c600(7): mov %rcx,0xffffff78(%rbp)
c607(6): jz 0x725(%rip)
c60d(7): mov 0xffffff70(%rbp),%rax
c614(4): pxor %xmm0,%xmm0
c618(8): mov $0x0,0xffffffa0(%rbp)
c620(7): mov 0x90(%rax),%rbx
c627(7): mov 0xffffff68(%rbp),%rax
c62e(4): movaps %xmm0,0xffffff90(%rbp)
c632(4): shl/sal $0x4,%rax
c636(6): cmp $0xfbf,%rax
c63c(7): mov %rax,0xffffff48(%rbp)
c643(6): jnbe 0x6f3(%rip)
c649(4): add $0x10,%rax
c64d(7): mov $0x0,0xffffff37(%rbp)
c654(3): sub %rax,%rsp
c657(5): lea 0xf(%rsp),%rax
c65c(4): and $0xfffffff0,%rax
c660(7): mov %rax,0xffffff40(%rbp)
c667(7): mov 0xffffff48(%rbp),%rdx
c66e(7): mov 0xffffff40(%rbp),%rdi
c675(3): mov %r13,%rsi
c678(5): call 0xffff5418(%rip)
c67d(4): lea 0xffffff90(%rbp),%rax
c681(4): mov 0x0(%r13),%rcx
c685(7): mov %rax,0xffffff58(%rbp)
c68c(4): add $0x10,%rax
c690(4): mov %rcx,0xffffff88(%rbp)
c694(7): mov %rax,0xffffff38(%rbp)
c69b(4): lea 0xffffff88(%rbp),%rax
c69f(7): mov %rax,0xffffff50(%rbp)
c6a6(5): jmp 0xe3(%rip)
c6ab(5): nop 0x0(%rax,%rax,1)
c6b0(3): cmp $0x9,%esi
c6b3(6): jz 0x1ed(%rip)
c6b9(3): cmp %rcx,%rax
c6bc(2): jnz 0x10(%rip)
c6be(8): cmp %rbx,0xb0(%r12)
c6c6(6): jz 0x3da(%rip)
c6cc(8): mov 0x98(%r12),%r14
c6d4(3): mov (%r14),%rdi
c6d7(4): lea 0x0(%rdi,%r9,1),%rsi
c6db(4): movzx 0x8(%rsi),%eax
c6df(2): test $0x8,%al
c6e1(6): jnz 0x10f(%rip)
c6e7(4): test $0x10,0xa(%rsi)
c6eb(6): jnz 0x205(%rip)
c6f1(2): cmp $0x4,%al
c6f3(6): jz 0x23d(%rip)
c6f9(4): mov 0xffffff88(%rbp),%rcx
c6fd(3): mov %rcx,%rdx
c700(3): mov %r12,%rdi
c703(7): mov %rcx,0xffffff60(%rbp)
c70a(5): call 0xffffcbe6(%rip)
c70f(2): test %al,%al
c711(7): mov 0xffffff60(%rbp),%rcx
c718(6): jz 0x450(%rip)
c71e(4): mov 0x18(%r14),%rax
c722(4): lea 0x1(%rcx),%rdx
c726(4): mov 0x0(%rax,%r15,8),%rbx
c72a(8): cmp $0x0,0xffffff78(%rbp)
c732(4): mov %rdx,0xffffff88(%rbp)
c736(2): jz 0x3e(%rip)
c738(8): cmp 0xa8(%r12),%rdx
c740(6): jnle 0x436(%rip)
c746(8): mov 0xb8(%r12),%rax
c74e(4): mov 0x0(%rax,%rdx,8),%rax
c752(3): test %rax,%rax
c755(6): jz 0x421(%rip)
c75b(4): mov 0x10(%rax),%rdi
c75f(4): lea 0x18(%rax),%rsi
c763(3): mov %rbx,%rdx
c766(5): call 0xffffacba(%rip)
c76b(3): test %rax,%rax
c76e(6): jz 0x408(%rip)
c774(8): mov $0x0,0xffffff98(%rbp)
c77c(3): test %rbx,%rbx
c77f(6): js 0x3db(%rip)
c785(4): mov 0xffffff88(%rbp),%rcx
c789(4): mov 0x8(%r13),%rax
c78d(3): cmp %rcx,%rax
c790(6): jl 0x4f0(%rip)
c796(7): mov 0xffffff70(%rbp),%rdi
c79d(3): mov %rbx,%r9
c7a0(3): mov %rbx,%r15
c7a3(4): shl/sal $0x4,%r9
c7a7(3): mov (%rdi),%rdx
c7aa(3): add %r9,%rdx
c7ad(4): movzx 0x8(%rdx),%esi
c7b1(3): cmp $0x8,%esi
c7b4(6): jnz 0xfffffefc(%rip)
c7ba(3): mov (%rdx),%rdx
c7bd(4): add $0x1,%rdx
c7c1(7): cmp %rdx,0xffffff68(%rbp)
c7c8(6): jle 0xfffffef1(%rip)
c7ce(4): shl/sal $0x4,%rdx
c7d2(3): add %r13,%rdx
c7d5(8): mov $0xffffffff,0x8(%rdx)
c7dd(3): mov %rcx,(%rdx)
c7e0(4): mov 0x8(%r13),%rax
c7e4(5): jmp 0xfffffed5(%rip)
c7e9(7): nop 0x0(%rax)
c7f0(8): mov 0xb8(%r12),%rax
c7f8(4): mov 0xffffff88(%rbp),%rdx
c7fc(3): mov %rbx,%rsi
c7ff(7): mov 0xffffff58(%rbp),%rdi
c806(4): mov 0x0(%rax,%rdx,8),%r9
c80a(4): mov 0x28(%r14),%rax
c80e(4): lea 0x0(%rbx,%rbx,2),%rdx
c812(7): mov %r9,0xffffff60(%rbp)
c819(4): lea 0x0(%rax,%rdx,8),%r15
c81d(5): call 0xffff96c3(%rip)
c822(2): test %al,%al
c824(7): mov 0xffffff60(%rbp),%r9
c82b(6): jz 0x4dd(%rip)
c831(4): mov 0x8(%r15),%r10
c835(3): test %r10,%r10
c838(6): jle 0x330(%rip)
c83e(4): mov 0x10(%r15),%r15
c842(4): mov 0x10(%r9),%r11
c846(4): lea 0x18(%r9),%r14
c84a(7): mov $0xffffffff,%rbx
c851(3): xor %r9d,%r9d
c854(7): mov %r12,0xffffff60(%rbp)
c85b(5): nop 0x0(%rax,%rax,1)
c860(4): mov 0x0(%r15,%r9,8),%r12
c864(3): mov %r14,%rsi
c867(3): mov %r11,%rdi
c86a(3): mov %r12,%rdx
c86d(5): call 0xffffabb3(%rip)
c872(3): test %rax,%rax
c875(2): jz 0xf(%rip)
c877(4): cmp $0xffffffff,%rbx
c87b(6): jnz 0x155(%rip)
c881(3): mov %r12,%rbx
c884(4): add $0x1,%r9
c888(3): cmp %r9,%r10
c88b(2): jnz 0xffffffd5(%rip)
c88d(7): mov 0xffffff60(%rbp),%r12
c894(5): jmp 0xfffffee8(%rip)
c899(7): nop 0x0(%rax)
c8a0(3): mov (%rdx),%rdi
c8a3(4): lea 0x1(%rdi),%rsi
c8a7(7): cmp %rsi,0xffffff68(%rbp)
c8ae(6): jle 0xfffffe0b(%rip)
c8b4(4): shl/sal $0x4,%rsi
c8b8(5): lea 0x0(%r13,%rsi,1),%rax
c8bd(3): cmp %rcx,(%rax)
c8c0(6): jl 0x380(%rip)
c8c6(4): test $0x8,0xa(%rdx)
c8ca(2): jz 0x14(%rip)
c8cc(7): mov 0xffffff40(%rbp),%rdi
c8d3(5): cmp $0xffffffff,0x0(%rdi,%rsi,1)
c8d8(6): jnz 0x3f3(%rip)
c8de(4): mov %rcx,0x8(%rax)
c8e2(4): mov 0x8(%r13),%rax
c8e6(5): jmp 0xfffffdd3(%rip)
c8eb(5): nop 0x0(%rax,%rax,1)
c8f0(4): mov 0xffffff88(%rbp),%r8
c8f4(7): lea 0xd8(%r14),%rsi
c8fb(3): mov %r12,%rcx
c8fe(3): mov %rbx,%rdx
c901(7): mov %r9,0xffffff60(%rbp)
c908(5): call 0xfffff2c8(%rip)
c90d(3): movsxd %eax,%rcx
c910(3): test %rcx,%rcx
c913(6): jnz 0x1fe(%rip)
c919(7): mov 0xffffff60(%rbp),%r9
c920(3): mov (%r14),%rsi
c923(4): mov 0xffffff88(%rbp),%rcx
c927(3): add %r9,%rsi
c92a(5): jmp 0xfffffdd3(%rip)
c92f(1): nop 
c930(3): mov (%rsi),%rax
c933(4): add $0x1,%rax
c937(4): shl/sal $0x4,%rax
c93b(3): add %r13,%rax
c93e(4): mov 0x8(%rax),%rdx
c942(3): mov (%rax),%rdi
c945(3): mov %rdx,%rcx
c948(3): sub %rdi,%rcx
c94b(8): cmp $0x0,0xffffff78(%rbp)
c953(6): jz 0x1b5(%rip)
c959(4): cmp $0xffffffff,%rdi
c95d(6): jz 0x219(%rip)
c963(4): cmp $0xffffffff,%rdx
c967(6): jz 0x20f(%rip)
c96d(3): test %rcx,%rcx
c970(6): jz 0x250(%rip)
c976(4): mov 0xffffff88(%rbp),%r15
c97a(5): mov 0x30(%r12),%rdx
c97f(5): mov 0x8(%r12),%rax
c984(3): sub %r15,%rdx
c987(3): cmp %rdx,%rcx
c98a(6): jnle 0x1ec(%rip)
c990(4): lea 0x0(%rax,%r15,1),%rsi
c994(3): add %rax,%rdi
c997(3): mov %rcx,%rdx
c99a(7): mov %rcx,0xffffff60(%rbp)
c9a1(5): call 0xffff509f(%rip)
c9a6(2): test %eax,%eax
c9a8(7): mov 0xffffff60(%rbp),%rcx
c9af(6): jnz 0x1c7(%rip)
c9b5(4): mov 0x18(%r14),%rax
c9b9(4): lea 0x0(%r15,%rcx,1),%rdx
c9bd(4): mov 0x0(%rax,%rbx,8),%rbx
c9c1(5): jmp 0xfffffd69(%rip)
c9c6(a): nop 0x0(%rax,%rax,1)
c9d0(7): mov 0xffffff38(%rbp),%rsi
c9d7(4): mov 0xffffff98(%rbp),%rdi
c9db(3): mov %rbx,%rdx
c9de(3): mov %r12,%r14
c9e1(7): mov 0xffffff60(%rbp),%r12
c9e8(5): call 0xffffaa38(%rip)
c9ed(3): test %rax,%rax
c9f0(6): jnz 0x1c0(%rip)
c9f6(7): mov 0xffffff78(%rbp),%rcx
c9fd(3): test %rcx,%rcx
ca00(6): jz 0xfffffd7c(%rip)
ca06(3): mov (%rcx),%r15
ca09(4): mov 0xffffff88(%rbp),%rdx
ca0d(4): lea 0x1(%r15),%rax
ca11(4): cmp 0x8(%rcx),%rax
ca15(3): mov %rax,(%rcx)
ca18(6): jz 0x385(%rip)
ca1e(4): mov 0x10(%rcx),%rax
ca22(4): lea 0x0(%r15,%r15,2),%r15
ca26(4): shl/sal $0x4,%r15
ca2a(3): add %rax,%r15
ca2d(4): mov %r14,0x8(%r15)
ca31(7): mov 0xffffff48(%rbp),%r14
ca38(3): mov %rdx,(%r15)
ca3b(3): mov %r14,%rdi
ca3e(5): call 0xffff5082(%rip)
ca43(3): test %rax,%rax
ca46(4): mov %rax,0x10(%r15)
ca4a(2): jz 0x28(%rip)
ca4c(3): mov %r14,%rdx
ca4f(3): mov %r13,%rsi
ca52(3): mov %rax,%rdi
ca55(5): call 0xffff503b(%rip)
ca5a(7): mov 0xffffff58(%rbp),%rsi
ca61(4): lea 0x18(%r15),%rdi
ca65(5): call 0xffffbb1b(%rip)
ca6a(2): test %eax,%eax
ca6c(6): jz 0xfffffd10(%rip)
ca72(4): mov 0xffffffa0(%rbp),%rdi
ca76(5): call 0xffff4e0a(%rip)
ca7b(7): cmp $0x0,0xffffff37(%rbp)
ca82(6): jnz 0x399(%rip)
ca88(7): mov 0xffffff78(%rbp),%rdi
ca8f(5): call 0xffffe051(%rip)
ca94(5): mov $0xc,%eax
ca99(5): jmp 0x210(%rip)
ca9e(2): nop 
caa0(8): cmp $0x0,0xffffff78(%rbp)
caa8(6): jz 0x334(%rip)
caae(7): mov 0xffffff68(%rbp),%rcx
cab5(3): test %rcx,%rcx
cab8(2): jz 0x22(%rip)
caba(3): mov %r13,%rax
cabd(2): xor %edx,%edx
cabf(1): nop 
cac0(4): cmp $0x0,(%rax)
cac4(2): js 0x9(%rip)
cac6(5): cmp $0xffffffff,0x8(%rax)
cacb(2): jz 0x55(%rip)
cacd(4): add $0x1,%rdx
cad1(4): add $0x10,%rax
cad5(3): cmp %rdx,%rcx
cad8(2): jnz 0xffffffe8(%rip)
cada(4): mov 0xffffffa0(%rbp),%rdi
cade(5): call 0xffff4da2(%rip)
cae3(7): cmp $0x0,0xffffff37(%rbp)
caea(6): jnz 0x37a(%rip)
caf0(7): mov 0xffffff78(%rbp),%rdi
caf7(5): call 0xffffdfe9(%rip)
cafc(2): xor %eax,%eax
cafe(5): jmp 0x1ab(%rip)
cb03(5): nop 0x0(%rax,%rax,1)
cb08(3): test %rcx,%rcx
cb0b(6): jz 0xb5(%rip)
cb11(4): mov 0xffffff88(%rbp),%r15
cb15(5): jmp 0xfffffea0(%rip)
cb1a(6): nop 0x0(%rax,%rax,1)
cb20(7): mov 0xffffff78(%rbp),%rdi
cb27(7): mov 0xffffff58(%rbp),%r9
cb2e(3): mov %r13,%r8
cb31(7): mov 0xffffff68(%rbp),%rcx
cb38(7): mov 0xffffff50(%rbp),%rdx
cb3f(4): lea 0x10(%rdi),%rsi
cb43(5): call 0xffffdfed(%rip)
cb48(3): mov %rax,%r9
cb4b(3): mov %rax,%rbx
cb4e(3): mov %rax,%r15
cb51(4): shl/sal $0x4,%r9
cb55(5): jmp 0xfffffb77(%rip)
cb5a(4): cmp $0xfffffffe,%rbx
cb5e(6): jz 0x1aa(%rip)
cb64(4): nop 0x0(%rax)
cb68(8): cmp $0x0,0xffffff78(%rbp)
cb70(6): jz 0x2bc(%rip)
cb76(7): mov 0xffffff78(%rbp),%rdi
cb7d(7): mov 0xffffff68(%rbp),%rcx
cb84(4): lea 0xffffff88(%rbp),%rdx
cb88(7): mov 0xffffff58(%rbp),%r9
cb8f(3): mov %r13,%r8
cb92(4): lea 0x10(%rdi),%rsi
cb96(5): call 0xffffdf9a(%rip)
cb9b(4): mov 0xffffff88(%rbp),%rcx
cb9f(3): mov %rax,%rbx
cba2(5): jmp 0xfffffaf9(%rip)
cba7(9): nop 0x0(%rax,%rax,1)
cbb0(3): mov %r14,%rbx
cbb3(5): jmp 0xfffffbc9(%rip)
cbb8(8): nop 0x0(%rax,%rax,1)
cbc0(7): mov 0xffffff58(%rbp),%rdi
cbc7(3): mov %rbx,%rsi
cbca(7): mov %r9,0xffffff60(%rbp)
cbd1(5): call 0xffff930f(%rip)
cbd6(2): test %al,%al
cbd8(6): jz 0x130(%rip)
cbde(4): mov 0x28(%r14),%rdx
cbe2(4): lea 0x0(%rbx,%rbx,2),%rax
cbe6(4): mov 0xffffff88(%rbp),%rcx
cbea(4): lea 0x0(%rdx,%rax,8),%rax
cbee(7): mov %rcx,0xffffff28(%rbp)
cbf5(4): mov 0x10(%rax),%rax
cbf9(3): mov (%rax),%rbx
cbfc(8): mov 0xb8(%r12),%rax
cc04(4): mov 0x0(%rax,%rcx,8),%rax
cc08(3): mov %rbx,%rdx
cc0b(4): mov 0x10(%rax),%rdi
cc0f(4): lea 0x18(%rax),%rsi
cc13(5): call 0xffffa80d(%rip)
cc18(3): test %rax,%rax
cc1b(6): jnz 0xfffffb61(%rip)
cc21(7): mov 0xffffff60(%rbp),%r9
cc28(3): mov (%r14),%rsi
cc2b(7): mov 0xffffff28(%rbp),%rcx
cc32(3): add %r9,%rsi
cc35(5): jmp 0xfffffac8(%rip)
cc3a(6): nop 0x0(%rax,%rax,1)
cc40(7): mov 0xffffff48(%rbp),%rdx
cc47(7): mov 0xffffff40(%rbp),%rdi
cc4e(3): mov %r13,%rsi
cc51(4): mov %rcx,0x8(%rax)
cc55(7): mov %r9,0xffffff28(%rbp)
cc5c(7): mov %rcx,0xffffff60(%rbp)
cc63(5): call 0xffff4e2d(%rip)
cc68(4): mov 0x8(%r13),%rax
cc6c(7): mov 0xffffff60(%rbp),%rcx
cc73(7): mov 0xffffff28(%rbp),%r9
cc7a(5): jmp 0xfffffa3f(%rip)
cc7f(1): nop 
cc80(4): mov 0xffffffa0(%rbp),%rdi
cc84(5): call 0xffff4bfc(%rip)
cc89(7): cmp $0x0,0xffffff37(%rbp)
cc90(6): jnz 0xdc(%rip)
cc96(7): mov 0xffffff78(%rbp),%rdi
cc9d(3): test %rdi,%rdi
cca0(2): jz 0x7(%rip)
cca2(5): call 0xffffde3e(%rip)
cca7(2): xor %eax,%eax
cca9(4): mov 0xffffffc8(%rbp),%rbx
ccad(9): xor $0x28,%rbx
ccb6(6): jnz 0x1bf(%rip)
ccbc(4): lea 0xffffffd8(%rbp),%rsp
ccc0(1): pop %rbx
ccc1(2): pop %r12
ccc3(2): pop %r13
ccc5(2): pop %r14
ccc7(2): pop %r15
ccc9(1): pop %rbp
ccca(1): ret near (%rsp)
cccb(7): mov 0xffffff48(%rbp),%rdx
ccd2(3): mov %rdi,%rsi
ccd5(3): mov %r13,%rdi
ccd8(7): mov %rcx,0xffffff28(%rbp)
ccdf(7): mov %r9,0xffffff60(%rbp)
cce6(5): call 0xffff4daa(%rip)
cceb(4): mov 0x8(%r13),%rax
ccef(7): mov 0xffffff60(%rbp),%r9
ccf6(7): mov 0xffffff28(%rbp),%rcx
ccfd(5): jmp 0xfffff9bc(%rip)
cd02(6): nop 0x0(%rax,%rax,1)
cd08(4): mov 0xffffffa0(%rbp),%rdi
cd0c(5): call 0xffff4b74(%rip)
cd11(7): cmp $0x0,0xffffff37(%rbp)
cd18(6): jnz 0x103(%rip)
cd1e(8): cmp $0x0,0xffffff78(%rbp)
cd26(6): jnz 0xfffffd62(%rip)
cd2c(5): mov $0xc,%eax
cd31(5): jmp 0xffffff78(%rip)
cd36(7): mov 0xffffff48(%rbp),%rdi
cd3d(5): call 0xffff4d83(%rip)
cd42(3): test %rax,%rax
cd45(7): mov %rax,0xffffff40(%rbp)
cd4c(7): mov $0x1,0xffffff37(%rbp)
cd53(6): jnz 0xfffff914(%rip)
cd59(7): mov 0xffffff78(%rbp),%rdi
cd60(3): test %rdi,%rdi
cd63(2): jz 0xffffffc9(%rip)
cd65(5): call 0xffffdd7b(%rip)
cd6a(2): jmp 0xffffffc2(%rip)
cd6c(7): mov 0xffffff40(%rbp),%rdi
cd73(5): call 0xffff4b0d(%rip)
cd78(7): mov 0xffffff78(%rbp),%rdi
cd7f(3): test %rdi,%rdi
cd82(6): jnz 0xffffff20(%rip)
cd88(5): jmp 0xffffff1f(%rip)
cd8d(b): mov $0x0,0xffffff78(%rbp)
cd98(5): jmp 0xfffff875(%rip)
cd9d(4): lea 0x0(%rax,%rax,2),%rsi
cda1(7): mov 0xffffff78(%rbp),%rax
cda8(7): mov %rdx,0xffffff60(%rbp)
cdaf(4): shl/sal $0x5,%rsi
cdb3(4): mov 0x10(%rax),%rdi
cdb7(5): call 0xffff4d79(%rip)
cdbc(3): test %rax,%rax
cdbf(2): jz 0x46(%rip)
cdc1(7): mov 0xffffff78(%rbp),%rcx
cdc8(7): mov 0xffffff60(%rbp),%rdx
cdcf(4): shl/sal $0x1,0x8(%rcx)
cdd3(4): mov %rax,0x10(%rcx)
cdd7(5): jmp 0xfffffc4b(%rip)
cddc(4): mov 0xffffffa0(%rbp),%rdi
cde0(5): call 0xffff4aa0(%rip)
cde5(7): cmp $0x0,0xffffff37(%rbp)
cdec(6): jz 0xfffffebb(%rip)
cdf2(7): mov 0xffffff40(%rbp),%rdi
cdf9(5): call 0xffff4a87(%rip)
cdfe(2): xor %eax,%eax
ce00(5): jmp 0xfffffea9(%rip)
ce05(4): mov 0xffffffa0(%rbp),%rdi
ce09(5): call 0xffff4a77(%rip)
ce0e(7): cmp $0x0,0xffffff37(%rbp)
ce15(6): jz 0xfffffc73(%rip)
ce1b(7): mov 0xffffff40(%rbp),%rdi
ce22(5): call 0xffff4a5e(%rip)
ce27(5): jmp 0xfffffef7(%rip)
ce2c(4): mov 0xffffffa0(%rbp),%rdi
ce30(5): call 0xffff4a50(%rip)
ce35(7): cmp $0x0,0xffffff37(%rbp)
ce3c(5): mov $0x1,%eax
ce41(6): jz 0xfffffe68(%rip)
ce47(7): mov 0xffffff40(%rbp),%rdi
ce4e(6): mov %eax,0xffffff78(%rbp)
ce54(5): call 0xffff4a2c(%rip)
ce59(6): mov 0xffffff78(%rbp),%eax
ce5f(5): jmp 0xfffffe4a(%rip)
ce64(7): mov 0xffffff40(%rbp),%rdi
ce6b(5): call 0xffff4a15(%rip)
ce70(5): jmp 0xfffffc80(%rip)
ce75(5): call 0xffff4b1b(%rip)

"get_subexp_sub.isra.32" :
ce80(2): push %r15
ce82(2): push %r14
ce84(3): mov %rcx,%r14
ce87(2): push %r13
ce89(2): push %r12
ce8b(3): mov %rsi,%r13
ce8e(1): push %rbp
ce8f(1): push %rbx
ce90(4): lea 0x10(%rdx),%rsi
ce94(3): mov %rdx,%rbp
ce97(3): mov %r8,%r9
ce9a(3): mov %r8,%r12
ce9d(4): sub $0x20,%rsp
cea1(4): mov 0x8(%rdx),%rcx
cea5(3): mov %r14,%r8
cea8(2): push $0x8
ceaa(3): mov (%rdx),%rdx
cead(3): mov %rdi,%rbx
ceb0(5): call 0xffffef80(%rip)
ceb5(2): test %eax,%eax
ceb7(1): pop %rdx
ceb8(1): pop %rcx
ceb9(2): jz 0x17(%rip)
cebb(4): add $0x18,%rsp
cebf(1): pop %rbx
cec0(1): pop %rbp
cec1(2): pop %r12
cec3(2): pop %r13
cec5(2): pop %r14
cec7(2): pop %r15
cec9(1): ret near (%rsp)
ceca(6): nop 0x0(%rax,%rax,1)
ced0(7): mov 0xc8(%rbx),%rax
ced7(7): mov 0xd0(%rbx),%rdx
cede(4): mov 0x8(%rbp),%r15
cee2(4): mov 0x0(%r13),%rcx
cee6(7): mov 0xd8(%rbx),%rdi
ceed(3): cmp %rdx,%rax
cef0(3): mov %r15,%rsi
cef3(6): jnl 0x9d(%rip)
cef9(4): lea 0x0(%rax,%rax,4),%rdx
cefd(4): shl/sal $0x3,%rdx
cf01(3): test %rax,%rax
cf04(2): jle 0xd(%rip)
cf06(5): lea 0xffffffd8(%rdi,%rdx,1),%r8
cf0b(4): cmp 0x8(%r8),%r12
cf0f(2): jz 0x71(%rip)
cf11(3): add %rdx,%rdi
cf14(2): xor %edx,%edx
cf16(3): cmp %rcx,%r15
cf19(3): setz %dl
cf1c(4): add $0x1,%rax
cf20(3): mov %r14,(%rdi)
cf23(2): neg %edx
cf25(4): mov %r12,0x8(%rdi)
cf29(4): mov %rcx,0x10(%rdi)
cf2d(4): mov %dx,0x22(%rdi)
cf31(4): mov %r15,0x18(%rdi)
cf35(7): mov %rax,0xc8(%rbx)
cf3c(4): mov $0x0,0x20(%rdi)
cf40(3): mov %r15,%rax
cf43(7): movsxd 0xe0(%rbx),%rdx
cf4a(3): sub %rcx,%rax
cf4d(3): cmp %rax,%rdx
cf50(2): jnl 0xc(%rip)
cf52(3): sub %ecx,%r15d
cf55(7): mov %r15d,0xe0(%rbx)
cf5c(3): add %r12,%rsi
cf5f(4): sub 0x0(%r13),%rsi
cf63(4): add $0x18,%rsp
cf67(3): mov %rbx,%rdi
cf6a(1): pop %rbx
cf6b(1): pop %rbp
cf6c(2): pop %r12
cf6e(2): pop %r13
cf70(2): pop %r14
cf72(2): pop %r15
cf74(5): jmp 0xffff9b3c(%rip)
cf79(7): nop 0x0(%rax)
cf80(5): mov $0x1,0x20(%r8)
cf85(2): jmp 0xffffff8c(%rip)
cf87(9): nop 0x0(%rax,%rax,1)
cf90(4): lea 0x0(%rdx,%rdx,4),%rsi
cf94(5): mov %rcx,0x8(%rsp)
cf99(4): shl/sal $0x4,%rsi
cf9d(5): call 0xffff4b93(%rip)
cfa2(3): test %rax,%rax
cfa5(5): mov 0x8(%rsp),%rcx
cfaa(2): jz 0x56(%rip)
cfac(7): mov 0xc8(%rbx),%rsi
cfb3(7): mov 0xd0(%rbx),%rdx
cfba(7): mov %rax,0xd8(%rbx)
cfc1(5): mov %rcx,0x8(%rsp)
cfc6(4): lea 0x0(%rsi,%rsi,4),%rsi
cfca(4): lea 0x0(%rdx,%rdx,4),%rdx
cfce(4): lea 0x0(%rax,%rsi,8),%rdi
cfd2(4): shl/sal $0x3,%rdx
cfd6(2): xor %esi,%esi
cfd8(5): call 0xffff4a38(%rip)
cfdd(7): shl/sal $0x1,0xd0(%rbx)
cfe4(7): mov 0xc8(%rbx),%rax
cfeb(7): mov 0xd8(%rbx),%rdi
cff2(4): mov 0x8(%rbp),%rsi
cff6(5): mov 0x8(%rsp),%rcx
cffb(5): jmp 0xfffffefe(%rip)
d000(7): mov 0xd8(%rbx),%rdi
d007(5): call 0xffff4879(%rip)
d00c(5): mov $0xc,%eax
d011(5): jmp 0xfffffeaa(%rip)

"transit_state_bkref.isra.34" :
d020(2): push %r15
d022(2): push %r14
d024(2): push %r13
d026(2): push %r12
d028(1): push %rbp
d029(1): push %rbx
d02a(7): sub $0xb8,%rsp
d031(4): mov 0x48(%rdi),%r15
d035(9): mov $0x28,%rax
d03e(8): mov %rax,0xa8(%rsp)
d046(2): xor %eax,%eax
d048(4): cmp $0x0,(%rsi)
d04c(7): mov 0x98(%rdi),%rax
d053(5): mov %rsi,0x48(%rsp)
d058(5): mov %rdx,0x40(%rsp)
d05d(5): mov %rax,0x38(%rsp)
d062(6): jle 0x32e(%rip)
d068(8): lea 0x0(,%r15,8),%rax
d070(3): mov %rdi,%r14
d073(8): mov $0x0,(%rsp)
d07b(5): mov %r15,0x8(%rsp)
d080(5): mov %rax,0x60(%rsp)
d085(8): lea 0x90(%rsp),%rax
d08d(5): mov %rax,0x68(%rsp)
d092(8): lea 0x8c(%rsp),%rax
d09a(5): mov %rax,0x78(%rsp)
d09f(2): jmp 0x48(%rip)
d0a1(7): nop 0x0(%rax)
d0a8(2): test $0x1,%al
d0aa(2): jz 0x26(%rip)
d0ac(3): and $0x8,%edx
d0af(2): jnz 0x21(%rip)
d0b1(3): test $0x20,%cl
d0b4(2): jz 0x6(%rip)
d0b6(2): test $0x2,%al
d0b8(2): jz 0x18(%rip)
d0ba(6): and $0x80,%ecx
d0c0(6): jz 0xa0(%rip)
d0c6(2): test $0x8,%al
d0c8(6): jnz 0x98(%rip)
d0ce(2): nop 
d0d0(5): mov 0x48(%rsp),%rdi
d0d5(5): add $0x1,(%rsp)
d0da(4): mov (%rsp),%rax
d0de(3): cmp (%rdi),%rax
d0e1(6): jnl 0x2af(%rip)
d0e7(5): mov 0x40(%rsp),%rax
d0ec(4): mov (%rsp),%rdi
d0f0(3): mov (%rax),%rax
d0f3(4): mov 0x0(%rax,%rdi,8),%r13
d0f7(5): mov 0x38(%rsp),%rdi
d0fc(3): mov (%rdi),%rax
d0ff(3): mov %r13,%rbx
d102(4): shl/sal $0x4,%rbx
d106(3): add %rbx,%rax
d109(4): cmp $0x4,0x8(%rax)
d10d(2): jnz 0xffffffc3(%rip)
d10f(3): mov 0x8(%rax),%ebp
d112(6): test $0x3ff00,%ebp
d118(2): jz 0x48(%rip)
d11a(7): mov 0xa0(%r14),%edx
d121(5): mov 0x8(%rsp),%rsi
d126(3): mov %r14,%rdi
d129(5): call 0xffffc0d7(%rip)
d12e(2): mov %ebp,%edx
d130(3): shr $0x8,%edx
d133(2): mov %edx,%ecx
d135(5): and $0x3ff,%cx
d13a(3): test $0x4,%dl
d13d(6): jnz 0xffffff6b(%rip)
d143(3): and $0x8,%edx
d146(6): jz 0xffffff6b(%rip)
d14c(2): test $0x1,%al
d14e(6): jz 0xffffff63(%rip)
d154(5): jmp 0xffffff7c(%rip)
d159(7): nop 0x0(%rax)
d160(7): mov 0xc8(%r14),%rdi
d167(7): mov 0x98(%r14),%rax
d16e(2): xor %ecx,%ecx
d170(4): mov 0x8(%r14),%r10
d174(5): mov 0x8(%rsp),%r9
d179(5): mov %rdi,0x70(%rsp)
d17e(5): mov %rax,0x50(%rsp)
d183(3): cmp %rdi,%rcx
d186(2): jnl 0x55(%rip)
d188(4): lea 0x0(%rcx,%rdi,1),%rax
d18c(7): mov 0xd8(%r14),%r11
d193(3): mov %rax,%rsi
d196(4): shr $0x3f,%rsi
d19a(3): add %rax,%rsi
d19d(3): sar $0x1,%rsi
d1a0(4): lea 0x0(%rsi,%rsi,4),%rax
d1a4(5): cmp 0x8(%r11,%rax,8),%r9
d1a9(2): jle 0x2d(%rip)
d1ab(5): jmp 0x1cd(%rip)
d1b0(4): lea 0x0(%rsi,%rcx,1),%rdx
d1b4(3): mov %rdx,%rax
d1b7(4): shr $0x3f,%rax
d1bb(3): add %rdx,%rax
d1be(3): sar $0x1,%rax
d1c1(4): lea 0x0(%rax,%rax,4),%rdx
d1c5(3): mov %rax,%r8
d1c8(5): cmp 0x8(%r11,%rdx,8),%r9
d1cd(6): jnle 0x1b3(%rip)
d1d3(3): mov %rax,%rsi
d1d6(3): cmp %rcx,%rsi
d1d9(2): jnle 0xffffffd7(%rip)
d1db(5): cmp %rcx,0x70(%rsp)
d1e0(2): jle 0x26(%rip)
d1e2(7): mov 0xd8(%r14),%rdx
d1e9(4): lea 0x0(%rcx,%rcx,4),%rax
d1ed(5): mov 0x8(%rsp),%rdi
d1f2(4): lea 0x0(%rdx,%rax,8),%rax
d1f6(4): cmp %rdi,0x8(%rax)
d1fa(2): jnz 0xc(%rip)
d1fc(4): cmp $0xffffffff,%rcx
d200(6): jnz 0x1d6(%rip)
d206(5): mov 0x50(%rsp),%rax
d20b(8): cmp $0x0,0xe8(%r14)
d213(3): mov (%rax),%rdx
d216(4): mov 0x0(%rdx,%rbx,1),%rax
d21a(5): mov %rax,0x58(%rsp)
d21f(6): jle 0x1bc(%rip)
d225(5): mov %r13,0x30(%rsp)
d22a(9): mov $0x0,0x28(%rsp)
d233(3): mov %r10,%r13
d236(7): mov 0xf8(%r14),%rax
d23d(5): mov 0x28(%rsp),%rbx
d242(5): mov 0x58(%rsp),%rdi
d247(4): mov 0x0(%rax,%rbx,8),%rbx
d24b(4): mov 0x8(%rbx),%rax
d24f(4): shl/sal $0x4,%rax
d253(4): cmp 0x0(%rdx,%rax,1),%rdi
d257(2): jz 0x29(%rip)
d259(6): add $0x1,0x28(%rsp)
d25f(5): mov 0x28(%rsp),%rax
d264(7): cmp 0xe8(%r14),%rax
d26b(6): jnl 0x676(%rip)
d271(5): mov 0x50(%rsp),%rax
d276(3): mov (%rax),%rdx
d279(2): jmp 0xffffffbd(%rip)
d27b(5): nop 0x0(%rax,%rax,1)
d280(5): cmp $0x0,0x20(%rbx)
d285(3): mov (%rbx),%r11
d288(6): jle 0x66a(%rip)
d28e(5): mov 0x8(%rsp),%rcx
d293(3): mov %r13,%r8
d296(2): xor %ebp,%ebp
d298(3): mov %rbx,%r13
d29b(3): mov %rcx,%rbx
d29e(2): jmp 0x6e(%rip)
d2a0(4): lea 0x0(%r8,%r11,1),%rsi
d2a4(4): lea 0x0(%r8,%rbx,1),%rdi
d2a8(5): mov %r9,0x20(%rsp)
d2ad(5): mov %r11,0x18(%rsp)
d2b2(5): mov %r8,0x10(%rsp)
d2b7(5): call 0xffff4789(%rip)
d2bc(2): test %eax,%eax
d2be(5): mov 0x10(%rsp),%r8
d2c3(5): mov 0x18(%rsp),%r11
d2c8(5): mov 0x20(%rsp),%r9
d2cd(6): jnz 0x4cb(%rip)
d2d3(5): mov 0x8(%rsp),%r8
d2d8(5): mov 0x30(%rsp),%rcx
d2dd(3): mov %r9,%rdx
d2e0(3): mov %r13,%rsi
d2e3(3): mov %r14,%rdi
d2e6(5): call 0xfffffb9a(%rip)
d2eb(3): cmp $0x1,%eax
d2ee(4): mov 0x8(%r14),%r8
d2f2(6): jnbe 0xa6(%rip)
d2f8(4): add $0x1,%rbp
d2fc(4): cmp 0x20(%r13),%rbp
d300(3): mov %r15,%r11
d303(3): mov %r12,%rbx
d306(6): jnl 0x2b2(%rip)
d30c(4): mov 0x28(%r13),%rax
d310(4): mov 0x0(%rax,%rbp,8),%r9
d314(4): mov 0x8(%r9),%r15
d318(3): mov %r15,%rdx
d31b(3): sub %r11,%rdx
d31e(3): test %rdx,%rdx
d321(4): lea 0x0(%rdx,%rbx,1),%r12
d325(2): jle 0xffffffae(%rip)
d327(4): cmp %r12,0x30(%r14)
d32b(6): jnl 0xffffff75(%rip)
d331(4): cmp %r12,0x58(%r14)
d335(5): mov %rdx,0x18(%rsp)
d33a(5): mov %r9,0x10(%rsp)
d33f(6): jl 0x459(%rip)
d345(3): mov %r12,%rsi
d348(3): mov %r14,%rdi
d34b(5): mov %r11,0x20(%rsp)
d350(5): call 0xffff9760(%rip)
d355(2): test %eax,%eax
d357(2): jnz 0x41(%rip)
d359(4): mov 0x8(%r14),%r8
d35d(5): mov 0x18(%rsp),%rdx
d362(5): mov 0x10(%rsp),%r9
d367(5): mov 0x20(%rsp),%r11
d36c(5): jmp 0xffffff34(%rip)
d371(7): nop 0x0(%rax)
d378(3): mov %rsi,%r8
d37b(3): mov %rdi,%rsi
d37e(2): nop 
d380(4): lea 0x1(%r8),%rcx
d384(3): mov %rsi,%rdi
d387(5): jmp 0xfffffdfc(%rip)
d38c(4): nop 0x0(%rax)
d390(2): xor %eax,%eax
d392(6): nop 0x0(%rax,%rax,1)
d398(8): mov 0xa8(%rsp),%rbx
d3a0(9): xor $0x28,%rbx
d3a9(6): jnz 0x553(%rip)
d3af(7): add $0xb8,%rsp
d3b6(1): pop %rbx
d3b7(1): pop %rbp
d3b8(2): pop %r12
d3ba(2): pop %r13
d3bc(2): pop %r14
d3be(2): pop %r15
d3c0(1): ret near (%rsp)
d3c1(7): nop 0x0(%rax)
d3c8(4): add $0x28,%rax
d3cc(4): cmp $0x0,0xfffffff8(%rax)
d3d0(6): jz 0xfffffe36(%rip)
d3d6(3): cmp (%rax),%r13
d3d9(2): jnz 0xffffffef(%rip)
d3db(5): mov 0x70(%rsp),%rax
d3e0(5): cmp %rax,0x70(%rsp)
d3e5(b): mov $0x0,0x8c(%rsp)
d3f0(6): jnl 0xfffffce0(%rip)
d3f6(8): lea 0x0(,%r13,8),%rax
d3fe(5): mov 0x70(%rsp),%r12
d403(5): mov 0x38(%rsp),%rbp
d408(5): mov %rax,0x50(%rsp)
d40d(5): lea 0x0(%r13,%r13,2),%rax
d412(4): lea 0x0(%r12,%r12,4),%r8
d416(4): shl/sal $0x3,%rax
d41a(5): mov %rax,0x58(%rsp)
d41f(8): lea 0x0(,%r8,8),%r15
d427(5): jmp 0x136(%rip)
d42c(4): nop 0x0(%rax)
d430(4): mov 0x28(%rbp),%rcx
d434(5): mov 0x58(%rsp),%rdi
d439(5): mov 0x10(%rcx,%rdi,1),%rcx
d43e(3): mov (%rcx),%rcx
d441(4): lea 0x0(%rcx,%rcx,2),%rcx
d445(4): lea 0x0(%rdx,%rcx,8),%rcx
d449(5): mov %rcx,0x18(%rsp)
d44e(5): add 0x8(%rsp),%rbx
d453(7): mov 0xa0(%r14),%edx
d45a(3): mov %r14,%rdi
d45d(3): sub %rax,%rbx
d460(4): lea 0xffffffff(%rbx),%rsi
d464(5): call 0xffffbd9c(%rip)
d469(5): mov 0x60(%rsp),%rsi
d46e(2): mov %eax,%ecx
d470(7): mov 0xb8(%r14),%rax
d477(8): lea 0x0(,%rbx,8),%r10
d47f(9): mov $0x0,0x10(%rsp)
d488(4): lea 0x0(%rax,%r10,1),%r11
d48c(4): mov 0x0(%rax,%rsi,1),%rax
d490(3): mov (%r11),%rdx
d493(3): test %rax,%rax
d496(2): jz 0xb(%rip)
d498(4): mov 0x10(%rax),%rax
d49c(5): mov %rax,0x10(%rsp)
d4a1(3): test %rdx,%rdx
d4a4(6): jz 0x31c(%rip)
d4aa(4): mov 0x50(%rdx),%rsi
d4ae(5): mov 0x68(%rsp),%rdi
d4b3(5): mov 0x18(%rsp),%rdx
d4b8(5): mov %r10,0x30(%rsp)
d4bd(4): mov %ecx,0x28(%rsp)
d4c1(5): call 0xffffb14f(%rip)
d4c6(2): test %eax,%eax
d4c8(7): mov %eax,0x8c(%rsp)
d4cf(4): mov 0x28(%rsp),%ecx
d4d3(5): mov 0x30(%rsp),%r10
d4d8(6): jnz 0x390(%rip)
d4de(7): add 0xb8(%r14),%r10
d4e5(5): mov 0x68(%rsp),%rdx
d4ea(3): mov %rbp,%rsi
d4ed(5): mov 0x78(%rsp),%rdi
d4f2(5): mov %r10,0x28(%rsp)
d4f7(5): call 0xffffb279(%rip)
d4fc(5): mov 0x28(%rsp),%r10
d501(8): mov 0xa0(%rsp),%rdi
d509(3): mov %rax,(%r10)
d50c(5): call 0xffff4374(%rip)
d511(7): mov 0xb8(%r14),%rdx
d518(5): cmp $0x0,0x0(%rdx,%rbx,8)
d51d(6): jz 0x2d4(%rip)
d523(6): cmp $0x0,0x20(%rsp)
d529(2): jnz 0x1f(%rip)
d52b(5): mov 0x60(%rsp),%rax
d530(5): mov 0x10(%rsp),%rbx
d535(4): mov 0x0(%rdx,%rax,1),%rax
d539(4): cmp %rbx,0x10(%rax)
d53d(6): jnle 0x2cb(%rip)
d543(5): nop 0x0(%rax,%rax,1)
d548(4): add $0x1,%r12
d54c(4): add $0x28,%r15
d550(7): cmp 0xc8(%r14),%r12
d557(6): jnl 0xfffffb79(%rip)
d55d(7): mov 0xd8(%r14),%rax
d564(3): add %r15,%rax
d567(3): cmp (%rax),%r13
d56a(2): jnz 0xffffffde(%rip)
d56c(5): mov 0x8(%rsp),%rdi
d571(4): cmp 0x8(%rax),%rdi
d575(2): jnz 0xffffffd3(%rip)
d577(4): mov 0x18(%rax),%rbx
d57b(4): mov 0x10(%rax),%rax
d57f(4): mov 0x30(%rbp),%rdx
d583(3): mov %rbx,%rcx
d586(3): sub %rax,%rcx
d589(5): mov %rcx,0x20(%rsp)
d58e(6): jz 0xfffffea2(%rip)
d594(4): mov 0x18(%rbp),%rcx
d598(5): mov 0x50(%rsp),%rdi
d59d(4): mov 0x0(%rcx,%rdi,1),%rcx
d5a1(4): lea 0x0(%rcx,%rcx,2),%rcx
d5a5(4): lea 0x0(%rdx,%rcx,8),%rcx
d5a9(5): mov %rcx,0x18(%rsp)
d5ae(5): jmp 0xfffffea0(%rip)
d5b3(5): nop 0x0(%rax,%rax,1)
d5b8(3): mov %r13,%rbx
d5bb(3): mov %r8,%r13
d5be(4): lea 0x1(%r15),%r11
d5c2(5): cmp %r11,0x8(%rsp)
d5c7(6): jl 0xfffffc92(%rip)
d5cd(3): mov %r12,%rax
d5d0(8): lea 0x0(,%r11,8),%r15
d5d8(3): mov %rbx,%r12
d5db(3): mov %r11,%rbx
d5de(3): mov %r13,%r11
d5e1(3): mov %rax,%r13
d5e4(4): nop 0x0(%rax)
d5e8(3): mov %rbx,%rax
d5eb(4): sub (%r12),%rax
d5ef(3): test %rax,%rax
d5f2(2): jle 0x23(%rip)
d5f4(4): cmp %r13,0x30(%r14)
d5f8(6): jle 0x289(%rip)
d5fe(6): movzx 0xffffffff(%r11,%rbx,1),%ecx
d604(4): lea 0x1(%r13),%rax
d608(4): cmp %cl,0x0(%r11,%r13,1)
d60c(6): jnz 0x136(%rip)
d612(3): mov %rax,%r13
d615(7): mov 0xb8(%r14),%rax
d61c(4): mov 0x0(%rax,%r15,1),%rax
d620(3): test %rax,%rax
d623(6): jz 0x10c(%rip)
d629(4): mov 0x10(%rax),%rcx
d62d(3): test %rcx,%rcx
d630(6): jle 0xff(%rip)
d636(4): mov 0x18(%rax),%rdi
d63a(5): mov 0x50(%rsp),%rax
d63f(2): xor %edx,%edx
d641(5): mov 0x58(%rsp),%r8
d646(3): mov (%rax),%rsi
d649(2): jmp 0x14(%rip)
d64b(5): nop 0x0(%rax,%rax,1)
d650(4): add $0x1,%rdx
d654(3): cmp %rdx,%rcx
d657(6): jz 0xd8(%rip)
d65d(4): mov 0x0(%rdi,%rdx,8),%rbp
d661(3): mov %rbp,%rax
d664(4): shl/sal $0x4,%rax
d668(3): add %rsi,%rax
d66b(4): cmp $0x9,0x8(%rax)
d66f(2): jnz 0xffffffe1(%rip)
d671(3): cmp (%rax),%r8
d674(2): jnz 0xffffffdc(%rip)
d676(4): cmp $0xffffffff,%rbp
d67a(6): jz 0xb5(%rip)
d680(5): mov 0x10(%r12),%rsi
d685(4): mov (%r12),%rcx
d689(3): test %rsi,%rsi
d68c(6): jz 0xc4(%rip)
d692(5): mov %r11,0x10(%rsp)
d697(5): mov 0x8(%r12),%rdx
d69c(4): sub $0x8,%rsp
d6a0(2): push $0x9
d6a2(3): mov %rbx,%r9
d6a5(3): mov %rbp,%r8
d6a8(3): mov %r14,%rdi
d6ab(5): call 0xffffe785(%rip)
d6b0(1): pop %rdx
d6b1(3): cmp $0x1,%eax
d6b4(1): pop %rcx
d6b5(5): mov 0x10(%rsp),%r11
d6ba(2): jz 0x75(%rip)
d6bc(2): test %eax,%eax
d6be(6): jnz 0xfffffcda(%rip)
d6c4(5): mov 0x20(%r12),%rax
d6c9(5): cmp 0x18(%r12),%rax
d6ce(6): jz 0x1da(%rip)
d6d4(5): mov $0x28,%esi
d6d9(5): mov $0x1,%edi
d6de(5): call 0xffff4392(%rip)
d6e3(3): test %rax,%rax
d6e6(6): jz 0xa3(%rip)
d6ec(5): mov 0x20(%r12),%rdx
d6f1(5): mov 0x28(%r12),%rcx
d6f6(3): mov %r12,%rsi
d6f9(5): mov 0x8(%rsp),%r8
d6fe(3): mov %r14,%rdi
d701(4): mov %rax,0x0(%rcx,%rdx,8)
d705(5): mov 0x30(%rsp),%rcx
d70a(4): add $0x1,%rdx
d70e(3): mov %rbp,(%rax)
d711(4): mov %rbx,0x8(%rax)
d715(5): mov %rdx,0x20(%r12)
d71a(3): mov %rax,%rdx
d71d(5): call 0xfffff763(%rip)
d722(3): cmp $0x1,%eax
d725(4): mov 0x8(%r14),%r11
d729(6): jnbe 0xfffffc6f(%rip)
d72f(4): add $0x1,%rbx
d733(4): add $0x8,%r15
d737(5): cmp %rbx,0x8(%rsp)
d73c(6): jnl 0xfffffeac(%rip)
d742(3): mov %r11,%r13
d745(5): jmp 0xfffffb14(%rip)
d74a(6): nop 0x0(%rax,%rax,1)
d750(3): mov %rbx,%rsi
d753(5): mov $0x18,%edi
d758(5): mov %r11,0x18(%rsp)
d75d(3): sub %rcx,%rsi
d760(5): mov %rcx,0x10(%rsp)
d765(4): add $0x1,%rsi
d769(5): call 0xffff4307(%rip)
d76e(3): test %rax,%rax
d771(3): mov %rax,%rsi
d774(5): mov %rax,0x10(%r12)
d779(5): mov 0x10(%rsp),%rcx
d77e(5): mov 0x18(%rsp),%r11
d783(6): jnz 0xffffff0f(%rip)
d789(5): mov $0xc,%eax
d78e(5): jmp 0xfffffc0a(%rip)
d793(5): nop 0x0(%rax,%rax,1)
d798(3): mov %rbx,%rcx
d79b(3): mov %r13,%rbx
d79e(3): mov %r8,%r13
d7a1(4): cmp %rbp,0x20(%rbx)
d7a5(6): jnle 0xfffffab4(%rip)
d7ab(3): test %rbp,%rbp
d7ae(3): mov %rcx,%r12
d7b1(6): jz 0xfffffe11(%rip)
d7b7(3): mov %r11,%r15
d7ba(5): jmp 0xfffffe04(%rip)
d7bf(1): nop 
d7c0(5): mov 0x18(%rsp),%rdx
d7c5(5): mov 0x78(%rsp),%rdi
d7ca(3): mov %rbp,%rsi
d7cd(5): mov %r11,0x28(%rsp)
d7d2(5): call 0xffffaf9e(%rip)
d7d7(5): mov 0x28(%rsp),%r11
d7dc(7): mov 0xb8(%r14),%rdx
d7e3(3): mov %rax,(%r11)
d7e6(5): cmp $0x0,0x0(%rdx,%rbx,8)
d7eb(6): jnz 0xfffffd38(%rip)
d7f1(7): mov 0x8c(%rsp),%eax
d7f8(2): test %eax,%eax
d7fa(6): jz 0xfffffd29(%rip)
d800(5): jmp 0xfffffb98(%rip)
d805(3): nop (%rax)
d808(5): mov 0x18(%rsp),%rax
d80d(5): mov 0x8(%rsp),%rcx
d812(3): mov %r14,%rdi
d815(4): lea 0x10(%rax),%r8
d819(4): lea 0x8(%rax),%rbx
d81d(3): mov %r8,%rdx
d820(3): mov %rbx,%rsi
d823(5): mov %r8,0x10(%rsp)
d828(5): call 0xffffb888(%rip)
d82d(2): test %eax,%eax
d82f(7): mov %eax,0x8c(%rsp)
d836(6): jnz 0xfffffb62(%rip)
d83c(5): mov 0x10(%rsp),%r8
d841(3): mov %rbx,%rsi
d844(3): mov %r14,%rdi
d847(3): mov %r8,%rdx
d84a(5): call 0xfffff7d6(%rip)
d84f(2): test %eax,%eax
d851(7): mov %eax,0x8c(%rsp)
d858(6): jz 0xfffffcf0(%rip)
d85e(5): jmp 0xfffffb3a(%rip)
d863(5): nop 0x0(%rax,%rax,1)
d868(8): mov 0xa0(%rsp),%rdi
d870(5): call 0xffff4010(%rip)
d875(7): mov 0x8c(%rsp),%eax
d87c(5): jmp 0xfffffb1c(%rip)
d881(4): cmp %r13,0x58(%r14)
d885(6): jle 0xfffffebd(%rip)
d88b(4): lea 0x1(%r13),%esi
d88f(3): mov %r14,%rdi
d892(5): call 0xffff90ce(%rip)
d897(2): test %eax,%eax
d899(6): jnz 0xfffffaff(%rip)
d89f(4): mov 0x8(%r14),%r11
d8a3(5): jmp 0xfffffd5b(%rip)
d8a8(5): lea 0x1(%rax,%rax,1),%rdx
d8ad(5): mov 0x28(%r12),%rdi
d8b2(8): lea 0x0(,%rdx,8),%rsi
d8ba(5): mov %rdx,0x10(%rsp)
d8bf(5): call 0xffff4271(%rip)
d8c4(3): test %rax,%rax
d8c7(6): jz 0xfffffec2(%rip)
d8cd(5): mov 0x10(%rsp),%rdx
d8d2(5): mov %rax,0x28(%r12)
d8d7(5): mov %rdx,0x18(%r12)
d8dc(5): jmp 0xfffffdf8(%rip)
d8e1(5): mov 0x30(%rsp),%r13
d8e6(7): mov 0xc8(%r14),%rax
d8ed(5): jmp 0xfffffaf3(%rip)
d8f2(5): mov 0x8(%rsp),%r12
d8f7(5): jmp 0xfffffccb(%rip)
d8fc(5): call 0xffff4094(%rip)

"merge_state_with_log" :
d910(2): push %r15
d912(2): push %r14
d914(2): push %r13
d916(2): push %r12
d918(3): mov %rdi,%r13
d91b(1): push %rbp
d91c(1): push %rbx
d91d(3): mov %rsi,%rbx
d920(4): sub $0x38,%rsp
d924(4): mov 0x48(%rsi),%r12
d928(7): mov 0xb8(%rsi),%r14
d92f(9): mov $0x28,%rax
d938(5): mov %rax,0x28(%rsp)
d93d(2): xor %eax,%eax
d93f(7): mov 0x98(%rsi),%r15
d946(8): lea 0x0(,%r12,8),%rbp
d94e(3): add %rbp,%r14
d951(7): cmp %r12,0xc0(%rsi)
d958(2): jnl 0x48(%rip)
d95a(3): mov %rdx,(%r14)
d95d(3): mov %rdx,%rbp
d960(7): mov %r12,0xc0(%rsi)
d967(8): cmp $0x0,0x98(%r15)
d96f(6): jnz 0x129(%rip)
d975(5): mov 0x28(%rsp),%rcx
d97a(9): xor $0x28,%rcx
d983(3): mov %rbp,%rax
d986(6): jnz 0x171(%rip)
d98c(4): add $0x38,%rsp
d990(1): pop %rbx
d991(1): pop %rbp
d992(2): pop %r12
d994(2): pop %r13
d996(2): pop %r14
d998(2): pop %r15
d99a(1): ret near (%rsp)
d99b(5): nop 0x0(%rax,%rax,1)
d9a0(3): mov (%r14),%rax
d9a3(3): test %rax,%rax
d9a6(6): jz 0xe2(%rip)
d9ac(3): test %rdx,%rdx
d9af(4): mov 0x50(%rax),%rax
d9b3(6): jz 0x8d(%rip)
d9b9(4): mov 0x50(%rdx),%r14
d9bd(5): lea 0x10(%rsp),%rdi
d9c2(3): mov %rax,%rdx
d9c5(4): mov %rdi,(%rsp)
d9c9(3): mov %r14,%rsi
d9cc(5): call 0xffffac44(%rip)
d9d1(2): test %eax,%eax
d9d3(4): mov %eax,0x0(%r13)
d9d7(6): jnz 0x119(%rip)
d9dd(4): mov 0x48(%rbx),%rax
d9e1(6): mov 0xa0(%rbx),%edx
d9e7(3): mov %rbx,%rdi
d9ea(4): lea 0xffffffff(%rax),%rsi
d9ee(5): call 0xffffb812(%rip)
d9f3(7): mov 0xb8(%rbx),%r8
d9fa(4): mov (%rsp),%rdx
d9fe(2): mov %eax,%ecx
da00(3): mov %r15,%rsi
da03(3): mov %r13,%rdi
da06(3): add %rbp,%r8
da09(5): mov %r8,0x8(%rsp)
da0e(5): call 0xffffad62(%rip)
da13(5): mov 0x8(%rsp),%r8
da18(3): test %r14,%r14
da1b(3): mov %rax,%rbp
da1e(3): mov %rax,(%r8)
da21(6): jz 0xffffff46(%rip)
da27(5): mov 0x20(%rsp),%rdi
da2c(5): call 0xffff3e54(%rip)
da31(5): jmp 0xffffff36(%rip)
da36(a): nop 0x0(%rax,%rax,1)
da40(4): movdqu (%rax),%xmm0
da44(3): mov %rbx,%rdi
da47(6): mov 0xa0(%rsi),%edx
da4d(5): lea 0xffffffff(%r12),%rsi
da52(5): movaps %xmm0,0x10(%rsp)
da57(4): mov 0x10(%rax),%rax
da5b(5): mov %rax,0x20(%rsp)
da60(5): call 0xffffb7a0(%rip)
da65(5): lea 0x10(%rsp),%rdx
da6a(2): mov %eax,%ecx
da6c(3): mov %r15,%rsi
da6f(3): mov %r13,%rdi
da72(5): call 0xffffacfe(%rip)
da77(3): mov %rax,%rbp
da7a(3): mov %rax,(%r14)
da7d(5): jmp 0xfffffeea(%rip)
da82(6): nop 0x0(%rax,%rax,1)
da88(3): mov %rdx,(%r14)
da8b(3): mov %rdx,%rbp
da8e(5): jmp 0xfffffed9(%rip)
da93(5): nop 0x0(%rax,%rax,1)
da98(3): test %rbp,%rbp
da9b(2): jz 0x55(%rip)
da9d(4): lea 0x10(%rbp),%r14
daa1(4): lea 0x18(%rbp),%r15
daa5(3): mov %r12,%rcx
daa8(3): mov %rbx,%rdi
daab(3): mov %r15,%rdx
daae(3): mov %r14,%rsi
dab1(5): call 0xffffb5ff(%rip)
dab6(2): test %eax,%eax
dab8(4): mov %eax,0x0(%r13)
dabc(2): jnz 0x34(%rip)
dabe(4): test $0x40,0x68(%rbp)
dac2(6): jz 0xfffffeb3(%rip)
dac8(3): mov %r15,%rdx
dacb(3): mov %r14,%rsi
dace(3): mov %rbx,%rdi
dad1(5): call 0xfffff54f(%rip)
dad6(2): test %eax,%eax
dad8(4): mov %eax,0x0(%r13)
dadc(2): jnz 0x14(%rip)
dade(7): mov 0xb8(%rbx),%rax
dae5(4): mov 0x0(%rax,%r12,8),%rbp
dae9(5): jmp 0xfffffe8c(%rip)
daee(2): nop 
daf0(2): xor %ebp,%ebp
daf2(5): jmp 0xfffffe83(%rip)
daf7(5): call 0xffff3e99(%rip)

"sift_states_backward" :
db00(2): push %r15
db02(2): push %r14
db04(3): mov %rdi,%r14
db07(2): push %r13
db09(2): push %r12
db0b(3): mov %rsi,%r13
db0e(1): push %rbp
db0f(1): push %rbx
db10(4): sub $0x68,%rsp
db14(4): mov 0x18(%rsi),%r15
db18(4): mov 0x10(%rsi),%rbx
db1c(4): mov %rdi,(%rsp)
db20(5): mov $0x8,%edi
db25(9): mov $0x1,0x40(%rsp)
db2e(9): mov $0x28,%rax
db37(5): mov %rax,0x58(%rsp)
db3c(2): xor %eax,%eax
db3e(9): mov $0x1,0x48(%rsp)
db47(5): call 0xffff3f79(%rip)
db4c(3): test %rax,%rax
db4f(5): mov %rax,0x50(%rsp)
db54(6): jz 0x2e0(%rip)
db5a(5): lea 0x40(%rsp),%rcx
db5f(3): mov %rbx,(%rax)
db62(3): mov %r15,%rdx
db65(3): mov %r13,%rsi
db68(3): mov %r14,%rdi
db6b(5): mov %rcx,0x10(%rsp)
db70(5): call 0x1a00(%rip)
db75(2): test %eax,%eax
db77(6): jnz 0x28e(%rip)
db7d(8): lea 0x0(,%r15,8),%rax
db85(3): test %r15,%r15
db88(8): mov $0x0,0x2c(%rsp)
db90(5): mov %rax,0x8(%rsp)
db95(4): lea 0x30(%r13),%rax
db99(5): mov %rax,0x38(%rsp)
db9e(6): jle 0x209(%rip)
dba4(4): mov 0x0(%r13),%rdi
dba8(5): mov 0x8(%rsp),%rax
dbad(5): cmp $0x0,0x0(%rdi,%rax,1)
dbb2(6): jz 0x216(%rip)
dbb8(4): mov (%rsp),%rax
dbbc(8): mov $0x0,0x2c(%rsp)
dbc4(4): mov 0x2c(%rsp),%ecx
dbc8(6): cmp %ecx,0xe0(%rax)
dbce(6): jl 0x213(%rip)
dbd4(4): mov (%rsp),%rbx
dbd8(5): mov 0x8(%rsp),%rdi
dbdd(4): sub $0x1,%r15
dbe1(9): mov $0x0,0x48(%rsp)
dbea(7): mov 0xb8(%rbx),%rax
dbf1(5): mov 0xfffffff8(%rax,%rdi,1),%r12
dbf6(3): test %r12,%r12
dbf9(6): jz 0x187(%rip)
dbff(6): cmp $0x0,0x28(%r12)
dc05(7): mov 0x98(%rbx),%r14
dc0c(6): jle 0x174(%rip)
dc12(2): xor %ebx,%ebx
dc14(5): jmp 0xa7(%rip)
dc19(7): nop 0x0(%rax)
dc20(4): mov (%rsp),%rdi
dc24(3): mov %r15,%rdx
dc27(5): call 0xffffb6c9(%rip)
dc2c(2): test %al,%al
dc2e(2): jz 0x7e(%rip)
dc30(4): mov 0x0(%r13),%rax
dc34(5): mov 0x8(%rsp),%rcx
dc39(4): mov 0x0(%rax,%rcx,1),%rax
dc3d(3): test %rax,%rax
dc40(2): jz 0x6c(%rip)
dc42(4): mov 0x18(%r14),%rdx
dc46(4): mov 0x10(%rax),%rdi
dc4a(4): lea 0x18(%rax),%rsi
dc4e(4): mov 0x0(%rdx,%rbp,8),%rdx
dc52(5): call 0xffff97ce(%rip)
dc57(3): test %rax,%rax
dc5a(2): jz 0x52(%rip)
dc5c(6): mov $0x1,%r10d
dc62(5): cmp $0x0,0x28(%r13)
dc67(2): jz 0x30(%rip)
dc69(4): mov 0x18(%r14),%rax
dc6d(4): sub $0x8,%rsp
dc71(4): lea 0x28(%r13),%rsi
dc75(4): lea 0x0(%r10,%r15,1),%r8
dc79(3): mov %rbp,%r9
dc7c(4): mov 0x0(%rax,%rbp,8),%rcx
dc80(2): push %r15
dc82(5): mov 0x48(%rsp),%rdx
dc87(5): mov 0x10(%rsp),%rdi
dc8c(5): call 0xffff9a44(%rip)
dc91(2): test %al,%al
dc93(1): pop %rdx
dc94(1): pop %rcx
dc95(2): jnz 0x17(%rip)
dc97(5): mov 0x10(%rsp),%rdi
dc9c(3): mov %rbp,%rsi
dc9f(5): call 0xffff8241(%rip)
dca4(2): test %al,%al
dca6(6): jz 0x15a(%rip)
dcac(4): add $0x1,%rbx
dcb0(5): cmp 0x28(%r12),%rbx
dcb5(6): jnl 0xcb(%rip)
dcbb(5): mov 0x30(%r12),%rax
dcc0(3): mov (%r14),%rsi
dcc3(4): mov 0x0(%rax,%rbx,8),%rbp
dcc7(3): mov %rbp,%r9
dcca(4): shl/sal $0x4,%r9
dcce(3): add %r9,%rsi
dcd1(4): test $0x10,0xa(%rsi)
dcd5(6): jz 0xffffff4b(%rip)
dcdb(4): mov (%rsp),%rcx
dcdf(4): mov 0x18(%r13),%rax
dce3(3): mov %r15,%r8
dce6(3): mov %rbp,%rdx
dce9(5): mov %r9,0x18(%rsp)
dcee(7): mov 0x98(%rcx),%r11
dcf5(5): mov %rax,0x20(%rsp)
dcfa(3): mov (%r11),%rdi
dcfd(7): lea 0xd8(%r11),%rsi
dd04(5): mov %r11,0x30(%rsp)
dd09(5): call 0xffffdec7(%rip)
dd0e(3): movsxd %eax,%r10
dd11(5): mov 0x18(%rsp),%r9
dd16(4): cmp $0x0,%r10d
dd1a(6): jle 0x96(%rip)
dd20(3): movsxd %r10d,%rax
dd23(3): add %r15,%rax
dd26(5): cmp %rax,0x20(%rsp)
dd2b(6): jl 0xffffff37(%rip)
dd31(4): mov 0x0(%r13),%rdx
dd35(5): mov 0x30(%rsp),%r11
dd3a(4): mov 0x0(%rdx,%rax,8),%rax
dd3e(3): test %rax,%rax
dd41(2): jz 0x75(%rip)
dd43(4): mov 0x18(%r11),%rdx
dd47(4): mov 0x10(%rax),%rdi
dd4b(4): lea 0x18(%rax),%rsi
dd4f(5): mov %r9,0x18(%rsp)
dd54(4): mov 0x0(%rdx,%rbp,8),%rdx
dd58(5): call 0xffff96c8(%rip)
dd5d(3): test %rax,%rax
dd60(6): jnz 0xffffff02(%rip)
dd66(5): mov 0x18(%rsp),%r9
dd6b(3): mov (%r14),%rsi
dd6e(3): add %r9,%rsi
dd71(5): jmp 0xfffffeaf(%rip)
dd76(a): nop 0x0(%rax,%rax,1)
dd80(5): mov 0x10(%rsp),%rcx
dd85(4): mov (%rsp),%rdi
dd89(3): mov %r15,%rdx
dd8c(3): mov %r13,%rsi
dd8f(5): call 0x17e1(%rip)
dd94(2): test %eax,%eax
dd96(2): jnz 0x6f(%rip)
dd98(6): sub $0x8,0x8(%rsp)
dd9e(3): test %r15,%r15
dda1(6): jnz 0xfffffe03(%rip)
dda7(2): xor %eax,%eax
dda9(2): jmp 0x5c(%rip)
ddab(5): nop 0x0(%rax,%rax,1)
ddb0(6): jnz 0xfffffeb2(%rip)
ddb6(3): mov (%r14),%rsi
ddb9(3): add %r9,%rsi
ddbc(5): jmp 0xfffffe64(%rip)
ddc1(7): nop 0x0(%rax)
ddc8(4): mov (%rsp),%rax
ddcc(5): add $0x1,0x2c(%rsp)
ddd1(4): mov 0x2c(%rsp),%ecx
ddd5(6): cmp %ecx,0xe0(%rax)
dddb(6): jnl 0xfffffdf9(%rip)
dde1(5): mov 0x8(%rsp),%rdx
dde6(2): xor %esi,%esi
dde8(5): call 0xffff3c28(%rip)
dded(5): mov 0x50(%rsp),%rdi
ddf2(5): call 0xffff3a8e(%rip)
ddf7(2): xor %eax,%eax
ddf9(2): jmp 0x1c(%rip)
ddfb(5): nop 0x0(%rax,%rax,1)
de00(5): mov $0xc,%eax
de05(5): mov 0x50(%rsp),%rdi
de0a(3): mov %eax,(%rsp)
de0d(5): call 0xffff3a73(%rip)
de12(3): mov (%rsp),%eax
de15(5): mov 0x58(%rsp),%rdx
de1a(9): xor $0x28,%rdx
de23(2): jnz 0x18(%rip)
de25(4): add $0x68,%rsp
de29(1): pop %rbx
de2a(1): pop %rbp
de2b(2): pop %r12
de2d(2): pop %r13
de2f(2): pop %r14
de31(2): pop %r15
de33(1): ret near (%rsp)
de34(5): mov $0xc,%eax
de39(2): jmp 0xffffffdc(%rip)
de3b(5): call 0xffff3b55(%rip)

"re_search_internal" :
de40(2): push %r15
de42(2): push %r14
de44(2): push %r13
de46(2): push %r12
de48(3): mov %r9,%r13
de4b(1): push %rbp
de4c(1): push %rbx
de4d(3): mov %rcx,%rbp
de50(5): mov $0x20,%ecx
de55(3): mov %r8,%r12
de58(7): sub $0x238,%rsp
de5f(3): mov (%rdi),%rbx
de62(8): mov 0x278(%rsp),%rax
de6a(5): mov %rdi,0x48(%rsp)
de6f(5): mov %rsi,0x78(%rsp)
de74(3): mov %rdi,%rsi
de77(8): lea 0x120(%rsp),%rdi
de7f(8): mov %rdx,0x88(%rsp)
de87(5): mov %rbx,0x38(%rsp)
de8c(8): mov %rax,0xb8(%rsp)
de94(4): mov %rdi,(%rsp)
de98(9): mov $0x28,%rax
dea1(8): mov %rax,0x228(%rsp)
dea9(2): xor %eax,%eax
deab(3): REP stosd %rax,rdi(%es,10)
deae(4): mov 0x20(%rsi),%rdi
deb2(8): mov %rbx,0x1b8(%rsp)
deba(3): test %rdi,%rdi
debd(5): mov %rdi,0x68(%rsp)
dec2(2): jz 0x24(%rip)
dec4(4): movzx 0x38(%rsi),%edx
dec8(3): test $0x8,%dl
decb(6): jz 0x495(%rip)
ded1(3): cmp %r8,%rbp
ded4(6): jz 0x48c(%rip)
deda(3): and $0x1,%edx
dedd(4): cmove %rdi,%rax
dee1(5): mov %rax,0x68(%rsp)
dee6(5): mov 0x48(%rsp),%rax
deeb(c): mov $0x0,0x98(%rsp)
def7(4): mov 0x30(%rax),%rax
defb(8): cmp 0x270(%rsp),%rax
df03(2): jnb 0x21(%rip)
df05(8): mov 0x270(%rsp),%rcx
df0d(4): lea 0xffffffff(%rcx),%rdx
df11(3): sub %rax,%rdx
df14(8): sub %rdx,0x270(%rsp)
df1c(8): mov %rdx,0x98(%rsp)
df24(5): mov 0x48(%rsp),%rsi
df29(5): cmp $0x0,0x10(%rsi)
df2e(6): jz 0xe92(%rip)
df34(5): mov 0x38(%rsp),%rdi
df39(4): mov 0x48(%rdi),%rax
df3d(3): test %rax,%rax
df40(6): jz 0xe80(%rip)
df46(4): mov 0x50(%rdi),%rdx
df4a(3): test %rdx,%rdx
df4d(6): jz 0xe73(%rip)
df53(4): mov 0x58(%rdi),%rcx
df57(3): test %rcx,%rcx
df5a(6): jz 0xe66(%rip)
df60(5): cmp $0x0,0x60(%rdi)
df65(6): jz 0xe5b(%rip)
df6b(5): cmp $0x0,0x10(%rax)
df70(2): jnz 0x38(%rip)
df72(5): cmp $0x0,0x10(%rdx)
df77(2): jnz 0x31(%rip)
df79(5): cmp $0x0,0x10(%rcx)
df7e(2): jz 0x8(%rip)
df80(4): cmp $0x0,0x38(%rsi)
df84(2): js 0x24(%rip)
df86(3): test %rbp,%rbp
df89(2): jz 0x13(%rip)
df8b(3): test %r12,%r12
df8e(8): mov $0x1,0x5c(%rsp)
df96(6): jnz 0xa23(%rip)
df9c(3): xor %r12d,%r12d
df9f(2): xor %ebp,%ebp
dfa1(7): nop 0x0(%rax)
dfa8(9): cmp $0x0,0x270(%rsp)
dfb1(8): mov $0x1,0x58(%rsp)
dfb9(6): jz 0x387(%rip)
dfbf(5): mov 0x38(%rsp),%r11
dfc4(5): mov 0x48(%rsp),%rax
dfc9(8): mov 0x88(%rsp),%rdi
dfd1(4): mov 0x10(%r11),%rsi
dfd5(4): mov 0x28(%rax),%rbx
dfd9(7): mov 0xb4(%r11),%edx
dfe0(4): mov 0x18(%rax),%rax
dfe4(8): mov %rdi,0x178(%rsp)
dfec(8): mov %rdi,0x170(%rsp)
dff4(5): mov %rsi,0x8(%rsp)
dff9(4): lea 0x1(%rsi),%rsi
dffd(8): mov %rbx,0xb0(%rsp)
e005(3): movsxd %edx,%rcx
e008(4): shr $0x16,%rax
e00c(8): mov %rbx,0x198(%rsp)
e014(3): and $0x1,%eax
e017(3): cmp %rcx,%rsi
e01a(7): mov %edx,0x1b0(%rsp)
e021(4): cmovnge %rcx,%rsi
e025(4): lea 0x1(%rdi),%rcx
e029(7): mov %al,0x1a8(%rsp)
e030(8): mov %rdi,0x188(%rsp)
e038(8): mov %rdi,0x180(%rsp)
e040(3): cmp %rcx,%rsi
e043(4): mov (%rsp),%rdi
e047(4): cmovnl %rcx,%rsi
e04b(3): test %rbx,%rbx
e04e(5): mov 0x78(%rsp),%rcx
e053(3): setnz %bl
e056(2): or %ebx,%eax
e058(7): mov %al,0x1ab(%rsp)
e05f(8): movzx 0xb0(%r11),%eax
e067(8): mov %rcx,0x120(%rsp)
e06f(2): mov %eax,%edx
e071(3): shr $0x3,%al
e074(3): shr $0x2,%dl
e077(3): and $0x1,%eax
e07a(3): and $0x1,%edx
e07d(7): mov %al,0x1aa(%rsp)
e084(7): mov %dl,0x1a9(%rsp)
e08b(5): call 0xffff7d45(%rip)
e090(2): test %eax,%eax
e092(4): mov %eax,0x5c(%rsp)
e096(6): jnz 0x8fa(%rip)
e09c(5): mov 0x38(%rsp),%rdi
e0a1(7): lea 0xb8(%rdi),%rax
e0a8(8): mov %rax,0x1a0(%rsp)
e0b0(7): movzx 0xb0(%rdi),%eax
e0b7(4): mov %al,0x8(%rsp)
e0bb(3): shr $0x4,%al
e0be(3): and $0x1,%eax
e0c1(8): cmp $0x0,0x1ab(%rsp)
e0c9(7): mov %al,0x1ae(%rsp)
e0d0(2): jnz 0x25(%rip)
e0d2(5): mov 0x38(%rsp),%rsi
e0d7(5): mov 0x78(%rsp),%rax
e0dc(7): cmp $0x1,0xb4(%rsi)
e0e3(8): mov %rax,0x128(%rsp)
e0eb(8): mov 0x88(%rsp),%rax
e0f3(2): jle 0x4(%rip)
e0f5(2): xor %eax,%eax
e0f7(8): mov %rax,0x150(%rsp)
e0ff(8): mov %rax,0x158(%rsp)
e107(5): mov 0x48(%rsp),%rax
e10c(8): mov %r13,0x188(%rsp)
e114(8): mov %r13,0x180(%rsp)
e11c(4): movzx 0x38(%rax),%eax
e120(4): mov %al,0x8(%rsp)
e124(3): shr $0x7,%al
e127(7): mov %al,0x1ad(%rsp)
e12e(5): mov 0x38(%rsp),%rax
e133(7): mov 0x98(%rax),%r14
e13a(7): mov 0x280(%rsp),%eax
e141(c): mov $0xffffffff,0x1c8(%rsp)
e14d(4): lea 0x0(%r14,%r14,1),%r13
e151(7): mov %eax,0x1c0(%rsp)
e158(3): test %r13,%r13
e15b(2): jle 0x54(%rip)
e15d(a): mov $0x461168601842738790,%rax
e167(3): cmp %rax,%r13
e16a(6): jnle 0xd46(%rip)
e170(5): lea 0x0(%r13,%r14,8),%rdi
e175(4): shl/sal $0x3,%rdi
e179(5): call 0xffff3947(%rip)
e17e(3): mov %r14,%rdi
e181(3): mov %rax,%r15
e184(8): mov %rax,0x1f8(%rsp)
e18c(4): shl/sal $0x4,%rdi
e190(5): call 0xffff3930(%rip)
e195(3): test %rax,%rax
e198(8): mov %rax,0x218(%rsp)
e1a0(6): jz 0xd10(%rip)
e1a6(3): test %r15,%r15
e1a9(6): jz 0xd07(%rip)
e1af(9): cmp $0x1,0x270(%rsp)
e1b8(8): mov %r13,0x1f0(%rsp)
e1c0(b): mov $0x1,0x200(%rsp)
e1cb(8): mov %r13,0x210(%rsp)
e1d3(6): jbe 0x1125(%rip)
e1d9(8): mov 0x160(%rsp),%rax
e1e1(a): mov $0x2305843009213693950,%rdx
e1eb(3): cmp %rdx,%rax
e1ee(6): jnbe 0xcc2(%rip)
e1f4(8): lea 0x8(,%rax,8),%rdi
e1fc(5): call 0xffff38c4(%rip)
e201(3): test %rax,%rax
e204(3): mov %rax,%rdi
e207(8): mov %rax,0x1d8(%rsp)
e20f(6): jz 0xcf1(%rip)
e215(7): mov 0x280(%rsp),%eax
e21c(8): mov %rbp,0xd8(%rsp)
e224(3): and $0x1,%eax
e227(3): cmp $0x1,%eax
e22a(2): sbb %eax,%eax
e22c(3): and $0x2,%eax
e22f(3): add $0x4,%eax
e232(7): mov %eax,0x190(%rsp)
e239(2): xor %eax,%eax
e23b(3): cmp %r12,%rbp
e23e(3): setle %al
e241(4): lea 0xffffffff(%rax,%rax,1),%eax
e245(7): mov %eax,0xac(%rsp)
e24c(3): mov %r12,%rax
e24f(4): cmovng %rbp,%rax
e253(8): mov %rax,0x90(%rsp)
e25b(3): mov %r12,%rax
e25e(4): cmovnl %rbp,%rax
e262(6): cmp $0x0,0x68(%rsp)
e268(5): mov %rax,0x70(%rsp)
e26d(5): mov 0x38(%rsp),%rax
e272(6): mov 0xb4(%rax),%esi
e278(5): mov $0x8,%eax
e27d(7): mov %esi,0xc8(%rsp)
e284(2): jz 0x3b(%rip)
e286(3): cmp $0x1,%esi
e289(5): mov $0x4,%ecx
e28e(2): jz 0x20(%rip)
e290(5): mov 0x48(%rsp),%rax
e295(4): test $0x40,0x1a(%rax)
e299(6): jnz 0xd85(%rip)
e29f(9): cmp $0x0,0xb0(%rsp)
e2a8(6): jnz 0xd76(%rip)
e2ae(2): xor %edx,%edx
e2b0(3): cmp %r12,%rbp
e2b3(3): movzx %bl,%eax
e2b6(3): setle %dl
e2b9(2): or %ecx,%eax
e2bb(2): add %edx,%edx
e2bd(2): or %edx,%eax
e2bf(5): cmp 0x70(%rsp),%rbp
e2c4(3): setnle %cl
e2c7(8): cmp 0x90(%rsp),%rbp
e2cf(3): setl %dl
e2d2(2): or %dl,%cl
e2d4(6): jnz 0xad5(%rip)
e2da(8): lea 0xd8(%rsp),%rcx
e2e2(3): cmp %r12,%rbp
e2e5(5): mov $0x0,%edx
e2ea(4): cmovng %rcx,%rdx
e2ee(3): test %rdx,%rdx
e2f1(8): mov %rdx,0xc0(%rsp)
e2f9(8): setnz 0xcf(%rsp)
e301(3): sub $0x4,%eax
e304(7): mov %eax,0xa8(%rsp)
e30b(8): lea 0xd0(%rsp),%rax
e313(5): mov %rax,0x28(%rsp)
e318(7): mov 0xa8(%rsp),%eax
e31f(3): cmp $0x4,%eax
e322(6): jnbe 0xbeb(%rip)
e328(7): lea 0x6d31(%rip),%rcx
e32f(4): movsxd 0x0(%rcx,%rax,4),%rax
e333(3): add %rcx,%rax
e336(2): jmp %rax
e338(8): nop 0x0(%rax,%rax,1)
e340(5): mov 0x38(%rsp),%rax
e345(8): cmp $0x0,0x98(%rax)
e34d(3): setnz %al
e350(3): movzx %al,%eax
e353(4): mov %eax,0x58(%rsp)
e357(5): jmp 0xfffffc68(%rip)
e35c(4): nop 0x0(%rax)
e360(9): mov $0x0,0x68(%rsp)
e369(5): jmp 0xfffffb7d(%rip)
e36e(5): cmp %rbp,0x70(%rsp)
e373(2): jle 0x5c(%rip)
e375(5): mov 0x78(%rsp),%rax
e37a(5): mov 0x68(%rsp),%rdi
e37f(4): movzx 0x0(%rax,%rbp,1),%edx
e383(4): lea 0x1(%rbp),%rax
e387(4): cmp $0x0,0x0(%rdi,%rdx,1)
e38b(6): jnz 0x8d(%rip)
e391(5): mov 0x68(%rsp),%rsi
e396(5): mov 0x70(%rsp),%rcx
e39b(5): mov 0x78(%rsp),%rdi
e3a0(2): jmp 0x1a(%rip)
e3a2(6): nop 0x0(%rax,%rax,1)
e3a8(4): movzx 0x0(%rdi,%rax,1),%edx
e3ac(4): lea 0x1(%rax),%rax
e3b0(4): cmp $0x0,0x0(%rsi,%rdx,1)
e3b4(6): jnz 0x119d(%rip)
e3ba(3): cmp %rax,%rcx
e3bd(3): mov %rax,%rbp
e3c0(2): jnz 0xffffffe8(%rip)
e3c2(5): mov 0x70(%rsp),%rax
e3c7(8): mov %rax,0xd8(%rsp)
e3cf(5): cmp %rbp,0x70(%rsp)
e3d4(2): jnz 0x44(%rip)
e3d6(2): xor %eax,%eax
e3d8(5): mov 0x70(%rsp),%rsi
e3dd(8): cmp %rsi,0x88(%rsp)
e3e5(2): jle 0xb(%rip)
e3e7(5): mov 0x78(%rsp),%rax
e3ec(4): movzx 0x0(%rax,%rsi,1),%eax
e3f0(8): mov 0xb0(%rsp),%rsi
e3f8(3): test %rsi,%rsi
e3fb(2): jz 0x6(%rip)
e3fd(4): movzx 0x0(%rsi,%rax,1),%eax
e401(5): mov 0x68(%rsp),%rdi
e406(4): cmp $0x0,0x0(%rdi,%rax,1)
e40a(6): jz 0x99f(%rip)
e410(5): mov 0x70(%rsp),%rbp
e415(3): nop (%rax)
e418(7): mov 0x280(%rsp),%edx
e41f(4): mov (%rsp),%rdi
e423(3): mov %rbp,%rsi
e426(5): call 0xffffb0aa(%rip)
e42b(2): test %eax,%eax
e42d(4): mov %eax,0x5c(%rsp)
e431(6): jnz 0x55f(%rip)
e437(8): cmp $0x1,0xc8(%rsp)
e43f(2): jz 0x1e(%rip)
e441(9): cmp $0x0,0x150(%rsp)
e44a(2): jz 0x13(%rip)
e44c(8): mov 0x130(%rsp),%rax
e454(3): cmp $0xff,(%rax)
e457(6): jz 0x92a(%rip)
e45d(8): mov 0x1b8(%rsp),%rbx
e465(5): movzx 0x58(%rsp),%eax
e46a(b): mov $0x0,0x200(%rsp)
e475(c): mov $0x0,0x1e8(%rsp)
e481(c): mov $0x0,0x1e0(%rsp)
e48d(b): mov $0x0,0xd0(%rsp)
e498(4): mov 0x48(%rbx),%r14
e49c(3): and $0x1,%eax
e49f(7): mov %al,0xce(%rsp)
e4a6(8): mov 0x168(%rsp),%rax
e4ae(5): cmp $0x0,0x68(%r14)
e4b3(5): mov %rax,0x8(%rsp)
e4b8(6): js 0x978(%rip)
e4be(8): mov 0x1d8(%rsp),%rax
e4c6(3): test %rax,%rax
e4c9(2): jz 0x19(%rip)
e4cb(8): cmp $0x0,0x98(%rbx)
e4d3(5): mov 0x8(%rsp),%rdi
e4d8(4): mov %r14,0x0(%rax,%rdi,8)
e4dc(6): jnz 0xeef(%rip)
e4e2(8): movzx 0xcf(%rsp),%eax
e4ea(4): mov %al,0x18(%rsp)
e4ee(5): movzx 0x68(%r14),%eax
e4f3(2): test $0x10,%al
e4f5(9): mov $0xffffffff,0x20(%rsp)
e4fe(9): mov $0x0,0x30(%rsp)
e507(6): jnz 0xe89(%rip)
e50d(8): mov 0xc0(%rsp),%rax
e515(8): mov 0x168(%rsp),%r8
e51d(5): mov %rax,0x50(%rsp)
e522(8): lea 0xe0(%rsp),%rax
e52a(5): mov %rax,0x60(%rsp)
e52f(8): lea 0xd4(%rsp),%rax
e537(8): mov %rax,0x80(%rsp)
e53f(2): jmp 0x5d(%rip)
e541(7): nop 0x0(%rax)
e548(3): cmp %r13,%r14
e54b(8): mov 0x168(%rsp),%r8
e553(3): setz %al
e556(4): and %al,0x18(%rsp)
e55a(5): movzx 0x68(%r13),%eax
e55f(6): cmove 0x8(%rsp),%rbx
e565(2): test $0x10,%al
e567(5): mov %rbx,0x8(%rsp)
e56c(2): jz 0x2d(%rip)
e56e(2): test %al,%al
e570(6): js 0x4c0(%rip)
e576(4): mov 0x58(%rsp),%eax
e57a(5): mov %r8,0x20(%rsp)
e57f(2): test %eax,%eax
e581(6): jz 0x125(%rip)
e587(9): mov $0x1,0x30(%rsp)
e590(9): mov $0x0,0x50(%rsp)
e599(3): mov %r13,%r14
e59c(8): cmp %r8,0x188(%rsp)
e5a4(6): jle 0xf0(%rip)
e5aa(8): mov 0x160(%rsp),%rax
e5b2(4): lea 0x1(%r8),%rbx
e5b6(3): cmp %rax,%rbx
e5b9(6): jnl 0x4a7(%rip)
e5bf(8): mov 0x150(%rsp),%rax
e5c7(3): cmp %rax,%rbx
e5ca(6): jnl 0x786(%rip)
e5d0(5): test $0x20,0x68(%r14)
e5d5(6): jnz 0x4cb(%rip)
e5db(4): lea 0x1(%r8),%rax
e5df(8): mov %rax,0x168(%rsp)
e5e7(8): mov 0x128(%rsp),%rax
e5ef(5): movzx 0x0(%rax,%r8,1),%r13d
e5f4(4): mov 0x58(%r14),%rax
e5f8(3): test %rax,%rax
e5fb(6): jz 0x715(%rip)
e601(4): mov 0x0(%rax,%r13,8),%r13
e605(9): cmp $0x0,0x1d8(%rsp)
e60e(2): jz 0x16(%rip)
e610(4): mov (%rsp),%rsi
e614(5): mov 0x28(%rsp),%rdi
e619(3): mov %r13,%rdx
e61c(5): call 0xfffff2f4(%rip)
e621(3): mov %rax,%r13
e624(3): test %r13,%r13
e627(6): jnz 0xffffff21(%rip)
e62d(7): mov 0xd0(%rsp),%ecx
e634(8): mov 0x1d8(%rsp),%rdi
e63c(2): test %ecx,%ecx
e63e(6): jnz 0x8c2(%rip)
e644(3): test %rdi,%rdi
e647(2): jz 0x4d(%rip)
e649(8): movzx 0xce(%rsp),%eax
e651(3): xor $0x1,%eax
e654(4): test %al,0x30(%rsp)
e658(2): jnz 0x3c(%rip)
e65a(8): mov 0x1e0(%rsp),%rsi
e662(8): mov 0x168(%rsp),%rax
e66a(2): xor %ecx,%ecx
e66c(2): jmp 0x17(%rip)
e66e(2): nop 
e670(5): cmp $0x0,0x0(%rdi,%rdx,8)
e675(3): mov %rdx,%rax
e678(5): mov $0x1,%ecx
e67d(6): jnz 0x373(%rip)
e683(4): lea 0x1(%rax),%rdx
e687(3): cmp %rdx,%rsi
e68a(2): jnl 0xffffffe6(%rip)
e68c(2): test %cl,%cl
e68e(6): jnz 0xed0(%rip)
e694(5): mov 0x50(%rsp),%rax
e699(3): test %rax,%rax
e69c(2): jz 0xa(%rip)
e69e(5): mov 0x8(%rsp),%rdi
e6a3(3): add %rdi,(%rax)
e6a6(5): mov 0x20(%rsp),%rax
e6ab(4): cmp $0xffffffff,%rax
e6af(6): jz 0x6c1(%rip)
e6b5(4): cmp $0xfffffffe,%rax
e6b9(6): jz 0x7f7(%rip)
e6bf(5): mov 0x20(%rsp),%rax
e6c4(8): mov %rax,0x1c8(%rsp)
e6cc(5): mov 0x48(%rsp),%rax
e6d1(4): test $0x10,0x38(%rax)
e6d5(6): jnz 0x7bb(%rip)
e6db(9): cmp $0x1,0x270(%rsp)
e6e4(6): jbe 0x8f8(%rip)
e6ea(5): mov 0x20(%rsp),%rcx
e6ef(8): mov 0x1d8(%rsp),%rbx
e6f7(4): mov (%rsp),%rdi
e6fb(4): mov 0x0(%rbx,%rcx,8),%rax
e6ff(4): mov 0x10(%rax),%rsi
e703(4): lea 0x18(%rax),%rdx
e707(5): call 0xffffacf9(%rip)
e70c(3): mov %rax,%r13
e70f(8): mov %rax,0x1d0(%rsp)
e717(5): mov 0x38(%rsp),%rax
e71c(7): test $0x1,0xb0(%rax)
e723(2): jnz 0x1d(%rip)
e725(5): mov 0x38(%rsp),%rax
e72a(8): cmp $0x0,0x98(%rax)
e732(6): jz 0x99a(%rip)
e738(8): mov 0x1d0(%rsp),%r13
e740(a): mov $0x2305843009213693950,%rsi
e74a(5): cmp %rsi,0x20(%rsp)
e74f(8): mov 0x1b8(%rsp),%r15
e757(6): jnbe 0xc64(%rip)
e75d(5): mov 0x20(%rsp),%rax
e762(4): add $0x1,%rax
e766(8): lea 0x0(,%rax,8),%rbx
e76e(5): mov %rax,0x8(%rsp)
e773(3): mov %rbx,%rdi
e776(5): call 0xffff334a(%rip)
e77b(3): test %rax,%rax
e77e(3): mov %rax,%r12
e781(6): jz 0x72f(%rip)
e787(8): cmp $0x0,0x98(%r15)
e78f(6): jz 0x896(%rip)
e795(3): mov %rbx,%rdi
e798(5): call 0xffff3328(%rip)
e79d(3): test %rax,%rax
e7a0(3): mov %rax,%rbp
e7a3(6): jz 0x705(%rip)
e7a9(5): mov 0x20(%rsp),%r14
e7ae(8): lea 0xe0(%rsp),%rbx
e7b6(5): mov %r15,0x10(%rsp)
e7bb(5): mov %rax,0x18(%rsp)
e7c0(5): mov 0x8(%rsp),%rax
e7c5(2): xor %esi,%esi
e7c7(3): mov %rbp,%rdi
e7ca(8): lea 0x0(,%rax,8),%rdx
e7d2(5): call 0xffff323e(%rip)
e7d7(4): pxor %xmm0,%xmm0
e7db(8): mov %r12,0xe0(%rsp)
e7e3(8): mov %rbp,0xe8(%rsp)
e7eb(8): mov %r13,0xf0(%rsp)
e7f3(3): mov %rbx,%rsi
e7f6(8): mov %r14,0xf8(%rsp)
e7fe(4): mov (%rsp),%rdi
e802(4): movaps %xmm0,0x20(%rbx)
e806(8): mov $0x0,0x30(%rbx)
e80e(5): call 0xfffff2f2(%rip)
e813(8): mov 0x110(%rsp),%rdi
e81b(3): mov %eax,%r15d
e81e(5): call 0xffff3062(%rip)
e823(3): test %r15d,%r15d
e826(6): jnz 0xc1e(%rip)
e82c(5): cmp $0x0,(%r12)
e831(6): jnz 0xc72(%rip)
e837(5): cmp $0x0,0x0(%rbp)
e83c(6): jnz 0xc67(%rip)
e842(8): mov 0x1d8(%rsp),%rdx
e84a(6): nop 0x0(%rax,%rax,1)
e850(4): sub $0x1,%r14
e854(4): cmp $0xffffffff,%r14
e858(6): jz 0xac3(%rip)
e85e(4): mov 0x0(%rdx,%r14,8),%rax
e862(3): test %rax,%rax
e865(2): jz 0xffffffeb(%rip)
e867(4): test $0x10,0x68(%rax)
e86b(2): jz 0xffffffe5(%rip)
e86d(4): mov 0x10(%rax),%rsi
e871(4): mov (%rsp),%rdi
e875(4): lea 0x18(%rax),%rdx
e879(3): mov %r14,%rcx
e87c(5): call 0xffffab84(%rip)
e881(3): mov %rax,%r13
e884(4): lea 0x1(%r14),%rax
e888(5): mov %rax,0x8(%rsp)
e88d(5): jmp 0xffffff33(%rip)
e892(5): cmp %rbp,0x70(%rsp)
e897(6): jle 0xfffffb38(%rip)
e89d(5): mov 0x78(%rsp),%rax
e8a2(8): mov 0xb0(%rsp),%rdi
e8aa(5): mov 0x68(%rsp),%rsi
e8af(4): movzx 0x0(%rax,%rbp,1),%eax
e8b3(4): movzx 0x0(%rdi,%rax,1),%edx
e8b7(4): lea 0x1(%rbp),%rax
e8bb(4): cmp $0x0,0x0(%rsi,%rdx,1)
e8bf(6): jnz 0xfffffb59(%rip)
e8c5(5): mov 0x68(%rsp),%rsi
e8ca(8): mov 0xb0(%rsp),%rdi
e8d2(5): mov 0x70(%rsp),%rcx
e8d7(5): mov 0x78(%rsp),%r8
e8dc(2): jmp 0x1b(%rip)
e8de(2): nop 
e8e0(5): movzx 0x0(%r8,%rax,1),%eax
e8e5(4): movzx 0x0(%rdi,%rax,1),%edx
e8e9(4): lea 0x1(%rbp),%rax
e8ed(4): cmp $0x0,0x0(%rsi,%rdx,1)
e8f1(6): jnz 0xc60(%rip)
e8f7(3): cmp %rax,%rcx
e8fa(3): mov %rax,%rbp
e8fd(2): jnz 0xffffffe3(%rip)
e8ff(5): jmp 0xfffffac3(%rip)
e904(8): cmp %rbp,0x90(%rsp)
e90c(6): jnle 0x49d(%rip)
e912(2): xor %ecx,%ecx
e914(3): mov %rbp,%rax
e917(5): mov 0x68(%rsp),%rdi
e91c(8): mov 0xb0(%rsp),%rsi
e924(8): mov 0x90(%rsp),%r9
e92c(5): mov 0x78(%rsp),%r10
e931(8): mov 0x88(%rsp),%r8
e939(2): jmp 0x19(%rip)
e93b(5): nop 0x0(%rax,%rax,1)
e940(4): sub $0x1,%rax
e944(5): mov $0x1,%ecx
e949(3): cmp %r9,%rax
e94c(6): jl 0x9e4(%rip)
e952(2): xor %edx,%edx
e954(3): cmp %rax,%r8
e957(2): jle 0x7(%rip)
e959(5): movzx 0x0(%r10,%rax,1),%edx
e95e(3): test %rsi,%rsi
e961(2): jz 0x6(%rip)
e963(4): movzx 0x0(%rsi,%rdx,1),%edx
e967(4): cmp $0x0,0x0(%rdi,%rdx,1)
e96b(2): jz 0xffffffd5(%rip)
e96d(2): test %cl,%cl
e96f(6): jz 0xfffffaa9(%rip)
e975(8): mov %rax,0xd8(%rsp)
e97d(3): mov %rax,%rbp
e980(5): jmp 0xfffffa98(%rip)
e985(3): nop (%rax)
e988(4): mov %eax,0x5c(%rsp)
e98c(4): nop 0x0(%rax)
e990(8): mov 0x1d8(%rsp),%rdi
e998(5): call 0xffff2ee8(%rip)
e99d(5): mov 0x38(%rsp),%rax
e9a2(8): cmp $0x0,0x98(%rax)
e9aa(6): jnz 0x926(%rip)
e9b0(4): mov (%rsp),%rdi
e9b4(5): call 0xffff875c(%rip)
e9b9(8): mov 0x228(%rsp),%rsi
e9c1(9): xor $0x28,%rsi
e9ca(4): mov 0x5c(%rsp),%eax
e9ce(6): jnz 0xb9d(%rip)
e9d4(7): add $0x238,%rsp
e9db(1): pop %rbx
e9dc(1): pop %rbp
e9dd(2): pop %r12
e9df(2): pop %r13
e9e1(2): pop %r14
e9e3(2): pop %r15
e9e5(1): ret near (%rsp)
e9e6(a): nop 0x0(%rax,%rax,1)
e9f0(4): mov (%rsp),%rsi
e9f4(5): mov 0x28(%rsp),%rdi
e9f9(8): mov %rdx,0x168(%rsp)
ea01(2): xor %edx,%edx
ea03(5): call 0xffffef0d(%rip)
ea08(7): mov 0xd0(%rsp),%edx
ea0f(2): test %edx,%edx
ea11(6): jnz 0x93c(%rip)
ea17(3): test %rax,%rax
ea1a(6): jnz 0x946(%rip)
ea20(8): mov 0x1d8(%rsp),%rdi
ea28(5): jmp 0xfffffc32(%rip)
ea2d(3): nop (%rax)
ea30(4): mov 0x10(%r13),%rsi
ea34(4): mov (%rsp),%rdi
ea38(4): lea 0x18(%r13),%rdx
ea3c(3): mov %r8,%rcx
ea3f(5): mov %r8,0x10(%rsp)
ea44(5): call 0xffffa9bc(%rip)
ea49(3): test %rax,%rax
ea4c(5): mov 0x10(%rsp),%r8
ea51(6): jz 0xfffffb48(%rip)
ea57(5): jmp 0xfffffb1f(%rip)
ea5c(4): nop 0x0(%rax)
ea60(8): cmp 0x178(%rsp),%rax
ea68(6): jnl 0xfffffb57(%rip)
ea6e(4): mov (%rsp),%rdi
ea72(3): lea 0x1(%rbx),%esi
ea75(5): call 0xffff7eeb(%rip)
ea7a(2): test %eax,%eax
ea7c(7): mov %eax,0xd0(%rsp)
ea83(6): jnz 0x8e5(%rip)
ea89(5): test $0x20,0x68(%r14)
ea8e(8): mov 0x168(%rsp),%r8
ea96(6): jz 0xfffffb45(%rip)
ea9c(4): nop 0x0(%rax)
eaa0(5): cmp $0x0,0x10(%r14)
eaa5(8): mov 0x1b8(%rsp),%r13
eaad(6): jle 0x32e(%rip)
eab3(7): lea 0xd8(%r13),%rax
eaba(3): xor %r12d,%r12d
eabd(8): mov %rbx,0xa0(%rsp)
eac5(3): mov %r12,%rbx
eac8(3): mov %r8,%r12
eacb(5): mov %rax,0x40(%rsp)
ead0(5): jmp 0x158(%rip)
ead5(3): nop (%rax)
ead8(2): test $0x1,%al
eada(6): jz 0x140(%rip)
eae0(3): and $0x8,%ecx
eae3(6): jnz 0x137(%rip)
eae9(3): test $0x20,%dl
eaec(2): jz 0xa(%rip)
eaee(2): test $0x2,%al
eaf0(6): jz 0x12a(%rip)
eaf6(6): and $0x80,%edx
eafc(2): jz 0x14(%rip)
eafe(2): test $0x8,%al
eb00(6): jz 0x11a(%rip)
eb06(a): nop 0x0(%rax,%rax,1)
eb10(4): mov (%rsp),%rcx
eb14(5): mov 0x40(%rsp),%rsi
eb19(3): mov %r12,%r8
eb1c(3): mov %r15,%rdx
eb1f(3): mov %rbp,%rdi
eb22(5): call 0xffffd0ae(%rip)
eb27(2): test %eax,%eax
eb29(6): jz 0xe9(%rip)
eb2f(3): movsxd %eax,%rbp
eb32(8): add 0x168(%rsp),%rbp
eb3a(7): cmp %eax,0x200(%rsp)
eb41(8): cmovnl 0x200(%rsp),%eax
eb49(4): mov (%rsp),%rdi
eb4d(3): mov %rbp,%rsi
eb50(7): mov %eax,0x200(%rsp)
eb57(5): call 0xffff7f59(%rip)
eb5c(2): test %eax,%eax
eb5e(7): mov %eax,0xd4(%rsp)
eb65(6): jnz 0x29b(%rip)
eb6b(4): mov 0x18(%r13),%rax
eb6f(8): lea 0x0(,%rbp,8),%r12
eb77(4): mov 0x0(%rax,%r15,8),%rax
eb7b(8): mov 0x1d8(%rsp),%r15
eb83(4): lea 0x0(%rax,%rax,2),%rdx
eb87(4): mov 0x30(%r13),%rax
eb8b(3): add %r12,%r15
eb8e(4): lea 0x0(%rax,%rdx,8),%rdx
eb92(3): mov (%r15),%rax
eb95(3): test %rax,%rax
eb98(6): jz 0x100(%rip)
eb9e(4): mov 0x50(%rax),%rsi
eba2(5): mov 0x60(%rsp),%rdi
eba7(5): call 0xffff9a69(%rip)
ebac(2): test %eax,%eax
ebae(7): mov %eax,0xd4(%rsp)
ebb5(6): jnz 0x24b(%rip)
ebbb(7): mov 0x1c0(%rsp),%edx
ebc2(4): mov (%rsp),%rdi
ebc6(4): lea 0xffffffff(%rbp),%rsi
ebca(5): call 0xffffa636(%rip)
ebcf(5): mov 0x60(%rsp),%rdx
ebd4(8): mov 0x80(%rsp),%rdi
ebdc(2): mov %eax,%ecx
ebde(8): add 0x1d8(%rsp),%r12
ebe6(3): mov %r13,%rsi
ebe9(5): call 0xffff9b87(%rip)
ebee(8): mov 0xf0(%rsp),%rdi
ebf6(4): mov %rax,(%r12)
ebfa(5): call 0xffff2c86(%rip)
ebff(8): mov 0x1d8(%rsp),%rdi
ec07(5): cmp $0x0,0x0(%rdi,%rbp,8)
ec0c(6): jz 0xe5(%rip)
ec12(8): mov 0x168(%rsp),%r12
ec1a(4): add $0x1,%rbx
ec1e(4): cmp 0x10(%r14),%rbx
ec22(6): jnl 0x1ae(%rip)
ec28(4): mov 0x18(%r14),%rax
ec2c(4): mov 0x0(%r13),%rbp
ec30(4): mov 0x0(%rax,%rbx,8),%r15
ec34(3): mov %r15,%rax
ec37(4): shl/sal $0x4,%rax
ec3b(3): add %rbp,%rax
ec3e(4): test $0x10,0xa(%rax)
ec42(2): jz 0xffffffd8(%rip)
ec44(3): mov 0x8(%rax),%ecx
ec47(6): test $0x3ff00,%ecx
ec4d(4): mov %ecx,0x10(%rsp)
ec51(6): jz 0xfffffebf(%rip)
ec57(7): mov 0x1c0(%rsp),%edx
ec5e(4): mov (%rsp),%rdi
ec62(3): mov %r12,%rsi
ec65(5): call 0xffffa59b(%rip)
ec6a(4): mov 0x10(%rsp),%ecx
ec6e(3): shr $0x8,%ecx
ec71(2): mov %ecx,%edx
ec73(5): and $0x3ff,%dx
ec78(3): test $0x4,%cl
ec7b(6): jnz 0xfffffe5d(%rip)
ec81(3): and $0x8,%ecx
ec84(6): jz 0xfffffe65(%rip)
ec8a(2): test $0x1,%al
ec8c(6): jz 0xfffffe5d(%rip)
ec92(2): jmp 0xffffff88(%rip)
ec94(4): nop 0x0(%rax)
ec98(4): movdqu (%rdx),%xmm0
ec9c(4): lea 0xffffffff(%rbp),%rsi
eca0(4): mov (%rsp),%rdi
eca4(8): movaps %xmm0,0xe0(%rsp)
ecac(4): mov 0x10(%rdx),%rax
ecb0(7): mov 0x1c0(%rsp),%edx
ecb7(8): mov %rax,0xf0(%rsp)
ecbf(5): call 0xffffa541(%rip)
ecc4(8): mov 0x80(%rsp),%rdi
eccc(5): mov 0x60(%rsp),%rdx
ecd1(2): mov %eax,%ecx
ecd3(3): mov %r13,%rsi
ecd6(5): call 0xffff9a9a(%rip)
ecdb(8): mov 0x1d8(%rsp),%rdi
ece3(3): mov %rax,(%r15)
ece6(5): cmp $0x0,0x0(%rdi,%rbp,8)
eceb(6): jnz 0xffffff27(%rip)
ecf1(7): mov 0xd4(%rsp),%eax
ecf8(2): test %eax,%eax
ecfa(6): jz 0xffffff18(%rip)
ed00(8): mov 0xa0(%rsp),%rbx
ed08(5): jmp 0x108(%rip)
ed0d(3): nop (%rax)
ed10(4): mov 0x60(%r14),%rbp
ed14(3): test %rbp,%rbp
ed17(6): jz 0x1ae(%rip)
ed1d(8): mov 0x168(%rsp),%rax
ed25(7): mov 0x1c0(%rsp),%edx
ed2c(4): mov (%rsp),%rdi
ed30(4): lea 0xffffffff(%rax),%rsi
ed34(5): call 0xffffa4cc(%rip)
ed39(2): test $0x1,%al
ed3b(6): jz 0xb5(%rip)
ed41(8): mov 0x800(%rbp,%r13,8),%r13
ed49(5): jmp 0xfffff8bc(%rip)
ed4e(2): nop 
ed50(8): cmp 0x178(%rsp),%rax
ed58(6): jnl 0xfffff878(%rip)
ed5e(5): jmp 0xfffffd10(%rip)
ed63(3): mov %r12,%rdi
ed66(5): call 0xffff2b1a(%rip)
ed6b(5): nop 0x0(%rax,%rax,1)
ed70(4): mov (%rsp),%rdi
ed74(5): call 0xffff853c(%rip)
ed79(8): mov 0xd8(%rsp),%rbp
ed81(8): movsxd 0xac(%rsp),%rax
ed89(3): add %rax,%rbp
ed8c(8): cmp 0x90(%rsp),%rbp
ed94(8): mov %rbp,0xd8(%rsp)
ed9c(2): jl 0xd(%rip)
ed9e(5): cmp 0x70(%rsp),%rbp
eda3(6): jle 0xfffff575(%rip)
eda9(8): mov 0x1d8(%rsp),%rdi
edb1(8): mov $0x1,0x5c(%rsp)
edb9(5): jmp 0xfffffbdf(%rip)
edbe(2): nop 
edc0(8): mov $0x1,0x5c(%rsp)
edc8(5): jmp 0xfffffbf1(%rip)
edcd(3): nop (%rax)
edd0(8): mov 0xa0(%rsp),%rbx
edd8(3): mov %r12,%r8
eddb(b): mov $0x0,0xd0(%rsp)
ede6(5): jmp 0xfffff7f5(%rip)
edeb(5): nop 0x0(%rax,%rax,1)
edf0(5): mov 0x0(%rbp,%r13,8),%r13
edf5(5): jmp 0xfffff810(%rip)
edfa(6): nop 0x0(%rax,%rax,1)
ee00(8): mov 0xa0(%rsp),%rbx
ee08(8): mov 0x1d8(%rsp),%rdi
ee10(3): test %rdi,%rdi
ee13(7): mov %eax,0xd0(%rsp)
ee1a(6): jz 0xe6(%rip)
ee20(3): xor %r13d,%r13d
ee23(5): jmp 0xfffff7ed(%rip)
ee28(8): nop 0x0(%rax,%rax,1)
ee30(7): mov 0x1c0(%rsp),%edx
ee37(4): mov (%rsp),%rdi
ee3b(4): lea 0xffffffff(%rax),%rsi
ee3f(5): call 0xffffa3c1(%rip)
ee44(2): test $0x1,%al
ee46(6): jz 0x16f(%rip)
ee4c(4): mov 0x50(%rbx),%r14
ee50(3): test %r14,%r14
ee53(6): jnz 0xfffff66b(%rip)
ee59(7): mov 0xd0(%rsp),%eax
ee60(3): cmp $0xc,%eax
ee63(4): mov %eax,0x5c(%rsp)
ee67(6): jz 0xfffffb29(%rip)
ee6d(7): lea 0x667c(%rip),%rcx
ee74(7): lea 0x60a5(%rip),%rsi
ee7b(7): lea 0x6152(%rip),%rdi
ee82(5): mov $0x435,%edx
ee87(5): call 0xffff2b79(%rip)
ee8c(4): nop 0x0(%rax)
ee90(5): mov 0x38(%rsp),%rax
ee95(8): cmp $0x0,0x98(%rax)
ee9d(6): jz 0x22f(%rip)
eea3(5): jmp 0x14c(%rip)
eea8(3): mov %r12,%rdi
eeab(5): call 0xffff29d5(%rip)
eeb0(8): mov 0x1d8(%rsp),%rdi
eeb8(8): mov $0xc,0x5c(%rsp)
eec0(5): jmp 0xfffffad8(%rip)
eec5(8): mov 0x1b8(%rsp),%rdi
eecd(3): mov %r14,%rsi
eed0(5): call 0xffffafe0(%rip)
eed5(2): test %al,%al
eed7(6): jnz 0xfffff71d(%rip)
eedd(8): mov 0x1d8(%rsp),%rdi
eee5(b): mov $0xc,0xd0(%rsp)
eef0(3): test %rdi,%rdi
eef3(6): jnz 0xffffff2d(%rip)
eef9(7): nop 0x0(%rax)
ef00(8): mov $0xc,0x5c(%rsp)
ef08(5): jmp 0xfffffa90(%rip)
ef0d(5): mov 0x68(%rsp),%rbx
ef12(8): mov 0xac(%rsp),%r13d
ef1a(8): mov 0x90(%rsp),%r14
ef22(5): mov 0x70(%rsp),%r15
ef27(8): mov 0x88(%rsp),%r12
ef2f(2): jmp 0x49(%rip)
ef31(7): nop 0x0(%rax)
ef38(3): cmp %rbp,%r12
ef3b(3): mov %rbx,%rax
ef3e(2): jle 0x11(%rip)
ef40(8): mov 0x128(%rsp),%rax
ef48(4): movzx 0x0(%rax,%rdx,1),%eax
ef4c(3): add %rbx,%rax
ef4f(3): cmp $0x0,(%rax)
ef52(6): jnz 0xfffff4c6(%rip)
ef58(3): movsxd %r13d,%rax
ef5b(3): add %rax,%rbp
ef5e(3): cmp %r14,%rbp
ef61(8): mov %rbp,0xd8(%rsp)
ef69(6): jl 0xfffffe40(%rip)
ef6f(3): cmp %r15,%rbp
ef72(6): jnle 0xfffffe37(%rip)
ef78(3): mov %rbp,%rdx
ef7b(8): sub 0x148(%rsp),%rdx
ef83(8): cmp %rdx,0x158(%rsp)
ef8b(2): jnbe 0xffffffad(%rip)
ef8d(7): mov 0x280(%rsp),%edx
ef94(4): mov (%rsp),%rdi
ef98(3): mov %rbp,%rsi
ef9b(5): call 0xffffa535(%rip)
efa0(2): test %eax,%eax
efa2(6): jnz 0xfffff9e6(%rip)
efa8(3): mov %rbp,%rdx
efab(8): sub 0x148(%rsp),%rdx
efb3(2): jmp 0xffffff85(%rip)
efb5(2): test %eax,%eax
efb7(6): jz 0xfffff507(%rip)
efbd(2): mov %eax,%edx
efbf(3): and $0x6,%edx
efc2(3): cmp $0x6,%edx
efc5(6): jz 0x46a(%rip)
efcb(2): test $0x2,%al
efcd(6): jz 0x4b3(%rip)
efd3(4): mov 0x58(%rbx),%r14
efd7(5): jmp 0xfffffe79(%rip)
efdc(5): mov 0x38(%rsp),%rax
efe1(8): cmp $0x0,0x98(%rax)
efe9(6): jz 0xe3(%rip)
efef(5): mov 0x20(%rsp),%rcx
eff4(8): mov 0x1d8(%rsp),%rbx
effc(4): mov (%rsp),%rdi
f000(4): mov 0x0(%rbx,%rcx,8),%rax
f004(4): mov 0x10(%rax),%rsi
f008(4): lea 0x18(%rax),%rdx
f00c(5): call 0xffffa3f4(%rip)
f011(8): mov %rax,0x1d0(%rsp)
f019(5): jmp 0xfffff71f(%rip)
f01e(2): xor %ecx,%ecx
f020(5): jmp 0xfffff28e(%rip)
f025(4): pxor %xmm0,%xmm0
f029(8): mov %rax,0xe0(%rsp)
f031(4): mov (%rsp),%rdi
f035(5): mov 0x20(%rsp),%rax
f03a(8): lea 0xe0(%rsp),%rbx
f042(c): mov $0x0,0xe8(%rsp)
f04e(8): mov %r13,0xf0(%rsp)
f056(3): mov %rbx,%rsi
f059(c): mov $0x0,0x110(%rsp)
f065(8): movaps %xmm0,0x100(%rsp)
f06d(8): mov %rax,0xf8(%rsp)
f075(5): call 0xffffea8b(%rip)
f07a(8): mov 0x110(%rsp),%rdi
f082(4): mov %eax,0x8(%rsp)
f086(5): call 0xffff27fa(%rip)
f08b(4): mov 0x8(%rsp),%eax
f08f(2): test %eax,%eax
f091(6): jnz 0x447(%rip)
f097(5): cmp $0x0,(%r12)
f09c(6): jz 0xfffffcc7(%rip)
f0a2(8): mov 0x1d8(%rsp),%rdi
f0aa(5): call 0xffff27d6(%rip)
f0af(5): mov 0x20(%rsp),%rax
f0b4(8): mov %r12,0x1d8(%rsp)
f0bc(8): mov %r13,0x1d0(%rsp)
f0c4(8): mov %rax,0x1c8(%rsp)
f0cc(9): cmp $0x0,0x270(%rsp)
f0d5(6): jz 0xfffff8bb(%rip)
f0db(9): cmp $0x1,0x270(%rsp)
f0e4(6): jz 0x424(%rip)
f0ea(8): mov 0xb8(%rsp),%rsi
f0f2(8): mov 0x270(%rsp),%rcx
f0fa(7): mov $0xffffffff,%rdx
f101(4): shl/sal $0x4,%rcx
f105(4): lea 0x10(%rsi),%rax
f109(3): add %rsi,%rcx
f10c(4): mov %rdx,0x8(%rax)
f110(3): mov %rdx,(%rax)
f113(4): add $0x10,%rax
f117(3): cmp %rax,%rcx
f11a(2): jnz 0xfffffff2(%rip)
f11c(8): mov 0xb8(%rsp),%rdi
f124(8): mov 0x1c8(%rsp),%rax
f12c(4): mov %rax,0x8(%rdi)
f130(5): mov 0x48(%rsp),%rax
f135(7): mov $0x0,(%rdi)
f13c(4): test $0x10,0x38(%rax)
f140(6): jnz 0x3e3(%rip)
f146(9): cmp $0x1,0x270(%rsp)
f14f(6): jz 0x3d4(%rip)
f155(5): mov 0x38(%rsp),%rax
f15a(3): xor %r8d,%r8d
f15d(7): test $0x1,0xb0(%rax)
f164(2): jz 0x11(%rip)
f166(3): xor %r8d,%r8d
f169(8): cmp $0x0,0x98(%rax)
f171(4): setnle %r8b
f175(8): mov 0xb8(%rsp),%rbx
f17d(8): mov 0x270(%rsp),%rdx
f185(4): mov (%rsp),%rsi
f189(5): mov 0x48(%rsp),%rdi
f18e(3): mov %rbx,%rcx
f191(5): call 0xffffd3ff(%rip)
f196(2): test %eax,%eax
f198(6): jnz 0x2d5(%rip)
f19e(3): mov (%rbx),%rax
f1a1(9): movzx 0x1ac(%rsp),%r11d
f1aa(8): mov 0x150(%rsp),%r10
f1b2(2): xor %ecx,%ecx
f1b4(8): mov 0x138(%rsp),%r9
f1bc(8): mov 0x158(%rsp),%r8
f1c4(8): mov 0xd8(%rsp),%rdi
f1cc(8): mov 0xb8(%rsp),%rdx
f1d4(2): jmp 0x5(%rip)
f1d6(3): mov (%rdx),%rax
f1d9(4): cmp $0xffffffff,%rax
f1dd(2): jz 0x1c(%rip)
f1df(3): test %r11b,%r11b
f1e2(4): mov 0x8(%rdx),%rsi
f1e6(6): jnz 0x344(%rip)
f1ec(3): add %rdi,%rax
f1ef(3): add %rdi,%rsi
f1f2(3): mov %rax,(%rdx)
f1f5(4): mov %rsi,0x8(%rdx)
f1f9(4): add $0x1,%rcx
f1fd(4): add $0x10,%rdx
f201(8): cmp 0x270(%rsp),%rcx
f209(2): jnz 0xffffffcd(%rip)
f20b(9): cmp $0x0,0x98(%rsp)
f214(2): jle 0x41(%rip)
f216(8): mov 0x98(%rsp),%rdx
f21e(8): mov 0xb8(%rsp),%rdi
f226(3): mov %rcx,%rax
f229(4): shl/sal $0x4,%rax
f22d(3): add %rcx,%rdx
f230(5): lea 0x8(%rdi,%rax,1),%rax
f235(4): shl/sal $0x4,%rdx
f239(5): lea 0x8(%rdi,%rdx,1),%rsi
f23e(7): mov $0xffffffff,%rdx
f245(4): mov %rdx,0xfffffff8(%rax)
f249(3): mov %rdx,(%rax)
f24c(4): add $0x10,%rax
f250(3): cmp %rax,%rsi
f253(2): jnz 0xfffffff2(%rip)
f255(5): mov 0x38(%rsp),%rax
f25a(8): mov 0x1d8(%rsp),%rdi
f262(7): mov 0xe0(%rax),%r9
f269(3): test %r9,%r9
f26c(6): jz 0xfffff72c(%rip)
f272(8): mov 0xb8(%rsp),%r10
f27a(3): xor %r8d,%r8d
f27d(4): lea 0x10(%r10),%rdx
f281(2): jmp 0x38(%rip)
f283(5): mov 0xfffffff8(%r9,%rsi,8),%rax
f288(3): cmp %r8,%rax
f28b(2): jz 0x27(%rip)
f28d(4): add $0x1,%rax
f291(4): shl/sal $0x4,%rax
f295(4): mov 0x0(%r10,%rax,1),%rax
f299(3): mov %rax,(%rdx)
f29c(5): mov 0xfffffff8(%r9,%rsi,8),%rax
f2a1(4): add $0x1,%rax
f2a5(4): shl/sal $0x4,%rax
f2a9(5): mov 0x8(%r10,%rax,1),%rax
f2ae(4): mov %rax,0x8(%rdx)
f2b2(4): add $0x10,%rdx
f2b6(3): mov %rsi,%r8
f2b9(4): lea 0x1(%r8),%rsi
f2bd(3): cmp %rcx,%rsi
f2c0(2): jnz 0xffffffc3(%rip)
f2c2(5): jmp 0xfffff6d6(%rip)
f2c7(9): nop 0x0(%rax,%rax,1)
f2d0(4): mov (%rsp),%rdi
f2d4(5): call 0xffff7fdc(%rip)
f2d9(8): mov 0x218(%rsp),%rdi
f2e1(5): call 0xffff259f(%rip)
f2e6(8): mov 0x1f8(%rsp),%rdi
f2ee(5): call 0xffff2592(%rip)
f2f3(5): jmp 0xfffff6bd(%rip)
f2f8(5): mov 0x38(%rsp),%rax
f2fd(7): test $0x2,0xb0(%rax)
f304(6): jnz 0xffffeed5(%rip)
f30a(c): mov $0x0,0x1d8(%rsp)
f316(5): jmp 0xffffeeff(%rip)
f31b(3): mov %r12,%rdi
f31e(5): call 0xffff2562(%rip)
f323(3): mov %rbp,%rdi
f326(5): call 0xffff255a(%rip)
f32b(5): jmp 0xfffffa45(%rip)
f330(8): mov %rax,0xd8(%rsp)
f338(8): mov 0x1d8(%rsp),%rdi
f340(8): mov $0x1,0x5c(%rsp)
f348(5): jmp 0xfffff650(%rip)
f34d(3): test %rax,%rax
f350(3): mov %rax,%r13
f353(6): jnz 0xfffff1f5(%rip)
f359(5): jmp 0xfffff33b(%rip)
f35e(2): nop 
f360(3): mov %rax,%r13
f363(5): jmp 0xfffff1e5(%rip)
f368(3): cmp $0xc,%eax
f36b(6): jz 0xfffffb45(%rip)
f371(7): lea 0x6178(%rip),%rcx
f378(7): lea 0x5ba1(%rip),%rsi
f37f(7): lea 0x5c4e(%rip),%rdi
f386(5): mov $0x46c,%edx
f38b(5): call 0xffff2675(%rip)
f390(5): cmp $0x0,0x68(%r14)
f395(2): js 0x71(%rip)
f397(4): mov 0x58(%rsp),%esi
f39b(5): mov 0x8(%rsp),%rax
f3a0(2): test %esi,%esi
f3a2(5): mov %rax,0x20(%rsp)
f3a7(6): jz 0xfffff2ff(%rip)
f3ad(9): mov $0x1,0x30(%rsp)
f3b6(5): jmp 0xfffff157(%rip)
f3bb(3): mov %rbx,%rdi
f3be(8): mov $0xc,0x5c(%rsp)
f3c6(5): jmp 0xfffff5d2(%rip)
f3cb(4): lea 0x10(%r14),%rbx
f3cf(4): lea 0x18(%r14),%rbp
f3d3(4): mov (%rsp),%rdi
f3d7(2): xor %ecx,%ecx
f3d9(3): mov %rbp,%rdx
f3dc(3): mov %rbx,%rsi
f3df(5): call 0xffff9cd1(%rip)
f3e4(2): test %eax,%eax
f3e6(7): mov %eax,0xd0(%rsp)
f3ed(2): jnz 0x4b(%rip)
f3ef(5): movzx 0x68(%r14),%eax
f3f4(2): test $0x40,%al
f3f6(6): jnz 0xea(%rip)
f3fc(5): mov $0x0,0x18(%rsp)
f401(5): jmp 0xfffff0f2(%rip)
f406(4): mov 0x10(%r14),%rsi
f40a(5): mov 0x8(%rsp),%rcx
f40f(4): lea 0x18(%r14),%rdx
f413(4): mov (%rsp),%rdi
f417(5): call 0xffff9fe9(%rip)
f41c(3): test %rax,%rax
f41f(5): mov %rax,0x30(%rsp)
f424(6): jz 0xfffff0e9(%rip)
f42a(5): jmp 0xffffff6d(%rip)
f42f(4): mov 0x60(%rbx),%r14
f433(5): jmp 0xfffffa1d(%rip)
f438(2): cwde 
f43a(5): mov %rax,0x20(%rsp)
f43f(5): jmp 0xfffff267(%rip)
f444(5): mov 0x18(%rsp),%r14
f449(3): mov %r15d,%eax
f44c(3): mov %r12,%rdi
f44f(4): mov %eax,0x8(%rsp)
f453(5): call 0xffff242d(%rip)
f458(3): mov %r14,%rdi
f45b(5): call 0xffff2425(%rip)
f460(4): mov 0x8(%rsp),%eax
f464(3): cmp $0x1,%eax
f467(6): jz 0xfffff909(%rip)
f46d(8): mov 0x1d8(%rsp),%rdi
f475(4): mov %eax,0x5c(%rsp)
f479(5): jmp 0xfffff51f(%rip)
f47e(2): nop 
f480(2): test $0x4,%al
f482(6): jz 0xfffff03c(%rip)
f488(4): mov 0x50(%r14),%rdx
f48c(5): mov 0x28(%rsp),%rdi
f491(2): mov %eax,%ecx
f493(3): mov %rbx,%rsi
f496(5): call 0xffff92da(%rip)
f49b(3): mov %rax,%r14
f49e(5): jmp 0xfffff9b2(%rip)
f4a3(5): mov 0x10(%rsp),%r15
f4a8(5): mov 0x8(%rsp),%rcx
f4ad(3): mov %rbp,%rdx
f4b0(3): mov %r12,%rsi
f4b3(5): mov %r14,0x20(%rsp)
f4b8(3): mov %r15,%rdi
f4bb(5): call 0xffff9775(%rip)
f4c0(3): mov %rbp,%rdi
f4c3(4): mov %eax,0x8(%rsp)
f4c7(5): call 0xffff23b9(%rip)
f4cc(4): mov 0x8(%rsp),%eax
f4d0(2): test %eax,%eax
f4d2(6): jz 0xfffffbd0(%rip)
f4d8(3): xor %r14d,%r14d
f4db(5): jmp 0xffffff71(%rip)
f4e0(4): mov (%rsp),%rdi
f4e4(3): mov %rbp,%rdx
f4e7(3): mov %rbx,%rsi
f4ea(5): call 0xffffdb36(%rip)
f4ef(2): test %eax,%eax
f4f1(7): mov %eax,0xd0(%rsp)
f4f8(6): jnz 0xffffff40(%rip)
f4fe(5): movzx 0x68(%r14),%eax
f503(5): jmp 0xfffffef9(%rip)
f508(8): mov 0xb8(%rsp),%rsi
f510(8): mov 0x1c8(%rsp),%rax
f518(7): mov $0x0,(%rsi)
f51f(4): mov %rax,0x8(%rsi)
f523(2): xor %eax,%eax
f525(5): jmp 0xfffffc7c(%rip)
f52a(3): cmp %rax,%r10
f52d(2): jz 0x1f(%rip)
f52f(4): mov 0x0(%r9,%rax,8),%rax
f533(3): cmp %rsi,%r10
f536(3): mov %rax,(%rdx)
f539(2): jz 0xb(%rip)
f53b(4): mov 0x0(%r9,%rsi,8),%rsi
f53f(5): jmp 0xfffffcad(%rip)
f544(3): mov %r8,%rsi
f547(5): jmp 0xfffffca5(%rip)
f54c(3): mov %r8,%rax
f54f(2): jmp 0xffffffe4(%rip)
f551(8): mov %rbp,0xd8(%rsp)
f559(5): jmp 0xffffeebf(%rip)
f55e(8): mov %rax,0x168(%rsp)
f566(5): jmp 0xfffff12e(%rip)
f56b(5): call 0xffff2425(%rip)

"update_cur_sifted_state" :
f570(2): push %r15
f572(2): push %r14
f574(3): mov %rdi,%rax
f577(2): push %r13
f579(2): push %r12
f57b(3): mov %rsi,%r13
f57e(1): push %rbp
f57f(1): push %rbx
f580(3): mov %rdx,%rbp
f583(3): mov %rcx,%rbx
f586(8): lea 0x0(,%rdx,8),%rcx
f58e(7): sub $0xa8,%rsp
f595(7): mov 0x98(%rax),%r12
f59c(7): mov 0xb8(%rax),%rax
f5a3(5): mov %rdi,0x8(%rsp)
f5a8(5): mov %rcx,0x18(%rsp)
f5ad(9): mov $0x28,%rdi
f5b6(8): mov %rdi,0x98(%rsp)
f5be(2): xor %edi,%edi
f5c0(4): mov 0x0(%rax,%rdx,8),%rdx
f5c4(8): mov $0x0,0x5c(%rsp)
f5cc(4): mov 0x8(%rbx),%rcx
f5d0(3): test %rdx,%rdx
f5d3(6): jz 0x255(%rip)
f5d9(4): lea 0x8(%rdx),%rdi
f5dd(3): test %rcx,%rcx
f5e0(5): mov %rdi,0x10(%rsp)
f5e5(2): jnz 0x53(%rip)
f5e7(3): mov (%rsi),%rdx
f5ea(8): mov $0x0,0x0(%rdx,%rbp,8)
f5f2(4): mov 0x0(%rax,%rbp,8),%rdx
f5f6(2): xor %eax,%eax
f5f8(4): test $0x40,0x68(%rdx)
f5fc(6): jnz 0xe3(%rip)
f602(6): nop 0x0(%rax,%rax,1)
f608(8): mov 0x98(%rsp),%rdi
f610(9): xor $0x28,%rdi
f619(6): jnz 0x7a2(%rip)
f61f(7): add $0xa8,%rsp
f626(1): pop %rbx
f627(1): pop %rbp
f628(2): pop %r12
f62a(2): pop %r13
f62c(2): pop %r14
f62e(2): pop %r15
f630(1): ret near (%rsp)
f631(7): nop 0x0(%rax)
f638(5): lea 0x60(%rsp),%rdi
f63d(3): mov %rbx,%rdx
f640(3): mov %r12,%rsi
f643(8): mov $0x0,0x60(%rsp)
f64b(5): call 0xffff93e5(%rip)
f650(3): mov %rax,%rdx
f653(4): mov 0x60(%rsp),%eax
f657(2): test %eax,%eax
f659(2): jnz 0xffffffaf(%rip)
f65b(4): mov 0x38(%rdx),%r15
f65f(4): lea 0x38(%rdx),%r14
f663(3): test %r15,%r15
f666(6): jz 0x20a(%rip)
f66c(5): mov 0x10(%rsp),%rsi
f671(3): mov %r14,%rdx
f674(3): mov %rbx,%rdi
f677(5): call 0xffff88b9(%rip)
f67c(2): test %eax,%eax
f67e(4): mov %eax,0x5c(%rsp)
f682(2): jnz 0xffffff86(%rip)
f684(5): cmp $0x0,0x28(%r13)
f689(6): jnz 0x277(%rip)
f68f(5): mov 0x18(%rsp),%r14
f694(4): add 0x0(%r13),%r14
f698(5): lea 0x5c(%rsp),%rdi
f69d(3): mov %rbx,%rdx
f6a0(3): mov %r12,%rsi
f6a3(5): call 0xffff938d(%rip)
f6a8(3): mov %rax,(%r14)
f6ab(4): mov 0x5c(%rsp),%eax
f6af(2): test %eax,%eax
f6b1(6): jnz 0xffffff57(%rip)
f6b7(6): cmp $0x0,0x10(%rsp)
f6bd(6): jz 0xffffff4b(%rip)
f6c3(5): mov 0x8(%rsp),%rax
f6c8(7): mov 0xb8(%rax),%rax
f6cf(4): mov 0x0(%rax,%rbp,8),%rdx
f6d3(2): xor %eax,%eax
f6d5(4): test $0x40,0x68(%rdx)
f6d9(6): jz 0xffffff2f(%rip)
f6df(5): mov 0x8(%rsp),%rax
f6e4(2): xor %ebx,%ebx
f6e6(7): mov 0xc8(%rax),%rsi
f6ed(3): mov %rsi,%rdx
f6f0(3): cmp %rdx,%rbx
f6f3(2): jnl 0x60(%rip)
f6f5(4): lea 0x0(%rbx,%rdx,1),%rax
f6f9(3): mov %rax,%rcx
f6fc(4): shr $0x3f,%rcx
f700(3): add %rax,%rcx
f703(5): mov 0x8(%rsp),%rax
f708(3): sar $0x1,%rcx
f70b(7): mov 0xd8(%rax),%rdi
f712(4): lea 0x0(%rcx,%rcx,4),%rax
f716(5): cmp 0x8(%rdi,%rax,8),%rbp
f71b(2): jle 0x33(%rip)
f71d(5): jmp 0x13a(%rip)
f722(6): nop 0x0(%rax,%rax,1)
f728(4): lea 0x0(%rbx,%rcx,1),%rdx
f72c(3): mov %rdx,%rax
f72f(4): shr $0x3f,%rax
f733(3): add %rdx,%rax
f736(3): sar $0x1,%rax
f739(4): lea 0x0(%rax,%rax,4),%rdx
f73d(3): mov %rax,%r8
f740(5): cmp 0x8(%rdi,%rdx,8),%rbp
f745(6): jnle 0x11b(%rip)
f74b(3): mov %rax,%rcx
f74e(3): cmp %rcx,%rbx
f751(2): jl 0xffffffd7(%rip)
f753(3): cmp %rbx,%rsi
f756(6): jle 0xfa(%rip)
f75c(4): lea 0x0(%rbx,%rbx,4),%rax
f760(8): lea 0x0(,%rax,8),%rsi
f768(5): mov 0x8(%rsp),%rax
f76d(5): mov %rsi,0x40(%rsp)
f772(7): mov 0xd8(%rax),%rax
f779(5): cmp 0x8(%rax,%rsi,1),%rbp
f77e(6): jnz 0xd2(%rip)
f784(4): cmp $0xffffffff,%rbx
f788(6): jz 0xc8(%rip)
f78e(5): mov 0x8(%rsp),%rax
f793(9): mov $0x0,0x60(%rsp)
f79c(7): mov 0x98(%rax),%r12
f7a3(5): mov 0x10(%rsp),%rax
f7a8(5): cmp $0x0,0x8(%rax)
f7ad(6): jle 0xa3(%rip)
f7b3(5): lea 0x60(%rsp),%rax
f7b8(9): mov $0x0,0x20(%rsp)
f7c1(5): mov %rbx,0x48(%rsp)
f7c6(3): mov %r13,%r15
f7c9(5): mov %rax,0x38(%rsp)
f7ce(2): jmp 0x24(%rip)
f7d0(2): cmp $0x4,%al
f7d2(6): jz 0x386(%rip)
f7d8(5): mov 0x10(%rsp),%rcx
f7dd(6): add $0x1,0x20(%rsp)
f7e3(5): mov 0x20(%rsp),%rax
f7e8(4): cmp 0x8(%rcx),%rax
f7ec(6): jnl 0x5bf(%rip)
f7f2(5): mov 0x10(%rsp),%rax
f7f7(5): mov 0x20(%rsp),%rdi
f7fc(4): mov 0x10(%rax),%rax
f800(4): mov 0x0(%rax,%rdi,8),%r14
f804(3): mov %r14,%rax
f807(4): shl/sal $0x4,%rax
f80b(4): add (%r12),%rax
f80f(4): cmp 0x10(%r15),%r14
f813(4): movzx 0x8(%rax),%eax
f817(2): jnz 0xffffffb9(%rip)
f819(4): cmp 0x18(%r15),%rbp
f81d(2): jnz 0xffffffb3(%rip)
f81f(2): jmp 0xffffffb9(%rip)
f821(7): nop 0x0(%rax)
f828(8): lea 0x0(,%rbp,8),%r14
f830(3): add (%rsi),%r14
f833(3): test %rcx,%rcx
f836(6): jnz 0xba(%rip)
f83c(7): mov $0x0,(%r14)
f843(2): xor %eax,%eax
f845(5): jmp 0xfffffdc3(%rip)
f84a(6): nop 0x0(%rax,%rax,1)
f850(2): xor %eax,%eax
f852(5): jmp 0xfffffdb6(%rip)
f857(3): mov %rcx,%r8
f85a(3): mov %rdx,%rcx
f85d(3): nop (%rax)
f860(4): lea 0x1(%r8),%rbx
f864(3): mov %rcx,%rdx
f867(5): jmp 0xfffffe89(%rip)
f86c(4): nop 0x0(%rax)
f870(4): mov 0x8(%rbx),%rdi
f874(8): mov $0x0,0x40(%rdx)
f87c(5): mov %rdx,0x20(%rsp)
f881(4): mov %rdi,0x38(%rdx)
f885(4): shl/sal $0x3,%rdi
f889(5): call 0xffff2237(%rip)
f88e(5): mov 0x20(%rsp),%rdx
f893(3): test %rax,%rax
f896(4): mov %rax,0x48(%rdx)
f89a(2): jz 0x49(%rip)
f89c(5): cmp $0x0,0x8(%rbx)
f8a1(8): mov $0x0,0x60(%rsp)
f8a9(2): jnle 0x15(%rip)
f8ab(5): jmp 0xfffffdc1(%rip)
f8b0(4): add $0x1,%r15
f8b4(4): cmp 0x8(%rbx),%r15
f8b8(6): jnl 0xfffffdb4(%rip)
f8be(4): mov 0x10(%rbx),%rax
f8c2(3): mov %r14,%rdi
f8c5(4): mov 0x0(%rax,%r15,8),%rax
f8c9(4): lea 0x0(%rax,%rax,2),%rdx
f8cd(5): mov 0x38(%r12),%rax
f8d2(4): lea 0x0(%rax,%rdx,8),%rsi
f8d6(5): call 0xffff806a(%rip)
f8db(2): test %eax,%eax
f8dd(4): mov %eax,0x60(%rsp)
f8e1(2): jz 0xffffffcf(%rip)
f8e3(5): mov $0xc,%eax
f8e8(5): jmp 0xfffffd20(%rip)
f8ed(3): nop (%rax)
f8f0(9): mov $0x0,0x10(%rsp)
f8f9(5): jmp 0xfffffd9f(%rip)
f8fe(2): nop 
f900(5): mov 0x8(%rsp),%rax
f905(7): mov 0xd8(%rax),%rax
f90c(5): mov %rax,0x20(%rsp)
f911(6): jle 0xda(%rip)
f917(3): xor %r15d,%r15d
f91a(6): nop 0x0(%rax,%rax,1)
f920(4): mov 0x30(%r13),%rax
f924(5): mov 0x20(%rsp),%rdi
f929(4): mov 0x0(%rax,%r15,8),%rax
f92d(4): lea 0x0(%rax,%rax,4),%rax
f931(4): lea 0x0(%rdi,%rax,8),%rdx
f935(4): cmp 0x10(%rdx),%rbp
f939(6): jle 0xa4(%rip)
f93f(4): cmp 0x8(%rdx),%rbp
f943(6): jnle 0x9a(%rip)
f949(3): mov (%rdx),%rcx
f94c(4): mov (%r12),%rax
f950(4): mov 0x8(%rbx),%rsi
f954(4): shl/sal $0x4,%rcx
f958(4): cmp 0x18(%rdx),%rbp
f95c(4): mov 0x0(%rax,%rcx,1),%r8
f960(6): jz 0xa0(%rip)
f966(3): xor %r14d,%r14d
f969(3): test %rsi,%rsi
f96c(2): jle 0x71(%rip)
f96e(5): mov %rbp,0x28(%rsp)
f973(3): mov %r8,%rbp
f976(2): jmp 0x18(%rip)
f978(8): nop 0x0(%rax,%rax,1)
f980(4): add $0x1,%r14
f984(4): cmp 0x8(%rbx),%r14
f988(2): jnl 0x50(%rip)
f98a(4): mov (%r12),%rax
f98e(4): mov 0x10(%rbx),%rdx
f992(4): mov 0x0(%rdx,%r14,8),%rsi
f996(3): mov %rsi,%rdx
f999(4): shl/sal $0x4,%rdx
f99d(3): add %rdx,%rax
f9a0(4): movzx 0x8(%rax),%edx
f9a4(3): sub $0x8,%edx
f9a7(3): cmp $0x1,%edx
f9aa(2): jnbe 0xffffffd6(%rip)
f9ac(3): cmp (%rax),%rbp
f9af(2): jnz 0xffffffd1(%rip)
f9b1(5): mov 0x10(%rsp),%rcx
f9b6(3): mov %rbx,%rdx
f9b9(3): mov %r12,%rdi
f9bc(5): call 0xffffa2b4(%rip)
f9c1(2): test %eax,%eax
f9c3(6): jnz 0xfffffc45(%rip)
f9c9(4): add $0x1,%r14
f9cd(4): cmp 0x8(%rbx),%r14
f9d1(2): jl 0xffffffb9(%rip)
f9d3(5): nop 0x0(%rax,%rax,1)
f9d8(5): mov 0x28(%rsp),%rbp
f9dd(4): add $0x1,%r15
f9e1(4): cmp 0x28(%r13),%r15
f9e5(6): jl 0xffffff3b(%rip)
f9eb(8): mov $0x0,0x5c(%rsp)
f9f3(5): jmp 0xfffffc9c(%rip)
f9f8(8): nop 0x0(%rax,%rax,1)
fa00(3): test %rsi,%rsi
fa03(2): jle 0xffffffda(%rip)
fa05(4): mov 0x10(%rbx),%r10
fa09(7): mov $0xffffffff,%r9
fa10(4): lea 0x0(%r10,%rsi,8),%r11
fa14(3): mov %r10,%rcx
fa17(3): mov %r9,%rsi
fa1a(2): jmp 0x1c(%rip)
fa1c(4): nop 0x0(%rax)
fa20(4): cmp $0x9,%r14d
fa24(2): jnz 0x9(%rip)
fa26(3): cmp (%rdx),%r8
fa29(4): cmove %rdi,%r9
fa2d(4): add $0x8,%rcx
fa31(3): cmp %rcx,%r11
fa34(2): jz 0x2a(%rip)
fa36(3): mov (%rcx),%rdi
fa39(3): mov %rdi,%rdx
fa3c(4): shl/sal $0x4,%rdx
fa40(3): add %rax,%rdx
fa43(5): movzx 0x8(%rdx),%r14d
fa48(4): cmp $0x8,%r14d
fa4c(2): jnz 0xffffffd4(%rip)
fa4e(3): cmp (%rdx),%r8
fa51(4): cmove %rdi,%rsi
fa55(4): add $0x8,%rcx
fa59(3): cmp %rcx,%r11
fa5c(2): jnz 0xffffffda(%rip)
fa5e(3): test %rsi,%rsi
fa61(3): mov %r9,%r14
fa64(5): mov %r9,0x28(%rsp)
fa69(6): js 0xc7(%rip)
fa6f(5): mov 0x10(%rsp),%rcx
fa74(3): mov %rbx,%rdx
fa77(3): mov %r12,%rdi
fa7a(5): call 0xffffa1f6(%rip)
fa7f(2): test %eax,%eax
fa81(6): jnz 0xfffffb87(%rip)
fa87(3): test %r14,%r14
fa8a(6): js 0xffffff53(%rip)
fa90(5): cmp $0x0,0x8(%rbx)
fa95(6): jle 0xffffff48(%rip)
fa9b(4): mov 0x10(%rbx),%r10
fa9f(3): xor %r14d,%r14d
faa2(5): mov %rbp,0x30(%rsp)
faa7(3): mov %r14,%rbp
faaa(5): mov 0x28(%rsp),%r14
faaf(2): jmp 0x1b(%rip)
fab1(7): nop 0x0(%rax)
fab8(4): add $0x1,%rbp
fabc(4): cmp 0x8(%rbx),%rbp
fac0(6): jnl 0x88(%rip)
fac6(4): mov 0x10(%rbx),%r10
faca(4): mov 0x0(%r10,%rbp,8),%r10
face(5): mov 0x38(%r12),%rax
fad3(3): mov %r14,%rdx
fad6(4): lea 0x0(%r10,%r10,2),%r9
fada(4): shl/sal $0x3,%r9
fade(3): add %r9,%rax
fae1(4): mov 0x8(%rax),%rdi
fae5(4): lea 0x10(%rax),%rsi
fae9(5): call 0xffff7937(%rip)
faee(3): test %rax,%rax
faf1(2): jnz 0xffffffc7(%rip)
faf3(5): add 0x30(%r12),%r9
faf8(4): mov 0x8(%r9),%rdi
fafc(4): lea 0x10(%r9),%rsi
fb00(5): call 0xffff7920(%rip)
fb05(3): test %rax,%rax
fb08(2): jnz 0xffffffb0(%rip)
fb0a(5): mov 0x10(%rsp),%rcx
fb0f(3): mov %rbx,%rdx
fb12(3): mov %r10,%rsi
fb15(3): mov %r12,%rdi
fb18(5): call 0xffffa158(%rip)
fb1d(2): test %eax,%eax
fb1f(6): jnz 0xfffffae9(%rip)
fb25(4): sub $0x1,%rbp
fb29(2): jmp 0xffffff8f(%rip)
fb2b(5): nop 0x0(%rax,%rax,1)
fb30(6): cmp $0x0,0x28(%rsp)
fb36(6): jns 0xffffff69(%rip)
fb3c(5): jmp 0xfffffea1(%rip)
fb41(7): nop 0x0(%rax)
fb48(5): mov 0x30(%rsp),%rbp
fb4d(5): jmp 0xfffffe90(%rip)
fb52(6): nop 0x0(%rax,%rax,1)
fb58(5): mov 0x8(%rsp),%rax
fb5d(5): mov 0x40(%rsp),%r13
fb62(5): mov 0x48(%rsp),%rbx
fb67(7): add 0xd8(%rax),%r13
fb6e(4): lea 0x0(%r14,%r14,2),%rax
fb72(4): shl/sal $0x3,%rax
fb76(5): mov %rax,0x30(%rsp)
fb7b(8): lea 0x0(,%r14,8),%rax
fb83(5): mov %rax,0x28(%rsp)
fb88(3): mov %r15,%rax
fb8b(3): mov %r13,%r15
fb8e(3): mov %rbx,%r13
fb91(3): mov %rax,%rbx
fb94(5): jmp 0x16a(%rip)
fb99(7): nop 0x0(%rax)
fba0(4): mov 0x18(%r15),%rax
fba4(4): sub 0x10(%r15),%rax
fba8(3): test %rax,%rax
fbab(5): lea 0x0(%rbp,%rax,1),%r9
fbb0(6): jz 0x160(%rip)
fbb6(5): mov 0x18(%r12),%rax
fbbb(5): mov 0x28(%rsp),%rsi
fbc0(4): mov 0x0(%rax,%rsi,1),%r10
fbc4(4): cmp 0x18(%rbx),%r9
fbc8(6): jnle 0x13f(%rip)
fbce(3): mov (%rbx),%rax
fbd1(4): mov 0x0(%rax,%r9,8),%rax
fbd5(3): test %rax,%rax
fbd8(6): jz 0x12f(%rip)
fbde(4): mov 0x10(%rax),%rdi
fbe2(4): lea 0x18(%rax),%rsi
fbe6(3): mov %r10,%rdx
fbe9(5): call 0xffff7837(%rip)
fbee(3): test %rax,%rax
fbf1(6): jz 0x116(%rip)
fbf7(4): sub $0x8,%rsp
fbfb(4): lea 0x30(%rbx),%rdx
fbff(4): lea 0x28(%rbx),%rsi
fc03(2): push %r9
fc05(5): mov 0x18(%rsp),%rdi
fc0a(3): mov %r14,%rcx
fc0d(3): mov %r10,%r9
fc10(3): mov %rbp,%r8
fc13(5): call 0xffff7abd(%rip)
fc18(2): test %al,%al
fc1a(1): pop %rdx
fc1b(1): pop %rcx
fc1c(6): jnz 0xeb(%rip)
fc22(6): cmp $0x0,0x60(%rsp)
fc28(6): jz 0x110(%rip)
fc2e(5): mov 0x38(%rsp),%rax
fc33(3): mov %r13,%rsi
fc36(5): mov %r14,0x70(%rsp)
fc3b(5): mov %rbp,0x78(%rsp)
fc40(4): lea 0x20(%rax),%rdi
fc44(5): call 0xffff629c(%rip)
fc49(2): test %al,%al
fc4b(6): jz 0x159(%rip)
fc51(5): mov 0x18(%rsp),%rdi
fc56(5): mov 0x60(%rsp),%rax
fc5b(5): mov 0x38(%rsp),%rsi
fc60(4): mov 0x0(%rax,%rdi,1),%r15
fc64(5): mov 0x8(%rsp),%rdi
fc69(5): call 0xffffde97(%rip)
fc6e(2): test %eax,%eax
fc70(6): jnz 0x10e(%rip)
fc76(4): mov 0x8(%rbx),%rsi
fc7a(5): mov 0x60(%rsp),%rdx
fc7f(3): test %rsi,%rsi
fc82(2): jz 0x1b(%rip)
fc84(4): lea 0x1(%rbp),%rcx
fc88(3): mov %r12,%rdi
fc8b(5): call 0xffff8fa5(%rip)
fc90(2): test %eax,%eax
fc92(6): jnz 0xec(%rip)
fc98(5): mov 0x60(%rsp),%rdx
fc9d(5): mov 0x38(%rsp),%r11
fca2(5): mov 0x18(%rsp),%rax
fca7(8): mov 0x88(%rsp),%rdi
fcaf(4): lea 0x30(%r11),%r9
fcb3(4): mov %r15,0x0(%rdx,%rax,1)
fcb7(3): mov %r13,%rdx
fcba(3): mov %r9,%rsi
fcbd(5): call 0xffff7763(%rip)
fcc2(4): sub $0x1,%rax
fcc6(3): mov %rax,%rdx
fcc9(2): js 0xe(%rip)
fccb(4): lea 0x28(%r11),%rdi
fccf(3): mov %r9,%rsi
fcd2(5): call 0xffff78ce(%rip)
fcd7(5): mov 0x8(%rsp),%rcx
fcdc(5): lea 0x0(%r13,%r13,4),%rax
fce1(7): mov 0xd8(%rcx),%rdx
fce8(4): lea 0x0(%rdx,%rax,8),%rax
fcec(4): nop 0x0(%rax)
fcf0(4): add $0x1,%r13
fcf4(4): cmp $0x0,0x20(%rax)
fcf8(4): lea 0x28(%rax),%r15
fcfc(2): jz 0x34(%rip)
fcfe(3): cmp (%r15),%r14
fd01(6): jz 0xfffffe9f(%rip)
fd07(3): mov %r15,%rax
fd0a(2): jmp 0xffffffe6(%rip)
fd0c(4): nop 0x0(%rax)
fd10(5): mov 0x28(%r12),%rax
fd15(5): mov 0x30(%rsp),%rdi
fd1a(5): mov 0x10(%rax,%rdi,1),%rax
fd1f(3): mov (%rax),%r10
fd22(5): jmp 0xfffffea2(%rip)
fd27(9): nop 0x0(%rax,%rax,1)
fd30(3): mov %rbx,%r15
fd33(5): jmp 0xfffffaa5(%rip)
fd38(4): mov 0x30(%rbx),%rax
fd3c(4): lea 0x20(%rbx),%rsi
fd40(4): movdqa (%rbx),%xmm0
fd44(8): mov %rax,0x90(%rsp)
fd4c(5): mov 0x38(%rsp),%rax
fd51(5): movaps %xmm0,0x60(%rsp)
fd56(4): lea 0x20(%rax),%rdi
fd5a(5): movdqa 0x10(%rbx),%xmm0
fd5f(5): movaps %xmm0,0x70(%rsp)
fd64(5): movdqa 0x20(%rbx),%xmm0
fd69(8): movaps %xmm0,0x80(%rsp)
fd71(5): call 0xffff880f(%rip)
fd76(2): test %eax,%eax
fd78(6): jz 0xfffffeb6(%rip)
fd7e(6): cmp $0x0,0x60(%rsp)
fd84(6): jz 0xfffff884(%rip)
fd8a(8): mov 0x90(%rsp),%rdi
fd92(4): mov %eax,0x8(%rsp)
fd96(5): call 0xffff1aea(%rip)
fd9b(4): mov 0x8(%rsp),%eax
fd9f(5): jmp 0xfffff869(%rip)
fda4(5): mov $0xc,%eax
fda9(2): jmp 0xffffffd5(%rip)
fdab(6): cmp $0x0,0x60(%rsp)
fdb1(6): jz 0xfffffa9f(%rip)
fdb7(2): xor %eax,%eax
fdb9(2): jmp 0xffffffd1(%rip)
fdbb(5): call 0xffff1bd5(%rip)

"parse_bracket_element.constprop.37" :
fdc0(2): push %r14
fdc2(2): push %r13
fdc4(3): mov %rsi,%r10
fdc7(2): push %r12
fdc9(1): push %rbp
fdca(3): movsxd %ecx,%r11
fdcd(1): push %rbx
fdce(3): mov %rdx,%rbp
fdd1(3): mov %rdi,%rbx
fdd4(4): sub $0x20,%rsp
fdd8(4): mov 0x48(%rsi),%r12
fddc(9): mov $0x28,%rax
fde5(5): mov %rax,0x18(%rsp)
fdea(2): xor %eax,%eax
fdec(7): cmp $0x1,0x90(%rsi)
fdf3(2): jz 0x55(%rip)
fdf5(3): mov %r12,%rsi
fdf8(3): mov %r10,%rdi
fdfb(5): call 0xffff7575(%rip)
fe00(3): cmp $0x1,%eax
fe03(2): jle 0x45(%rip)
fe05(4): mov 0x10(%r10),%rdx
fe09(2): cwde 
fe0b(6): mov $0x1,(%rbx)
fe11(3): add %r12,%rax
fe14(4): mov 0x0(%rdx,%r12,4),%edx
fe18(3): mov %edx,0x8(%rbx)
fe1b(4): mov %rax,0x48(%r10)
fe1f(2): xor %eax,%eax
fe21(5): mov 0x18(%rsp),%rcx
fe26(9): xor $0x28,%rcx
fe2f(6): jnz 0x1e9(%rip)
fe35(4): add $0x20,%rsp
fe39(1): pop %rbx
fe3a(1): pop %rbp
fe3b(2): pop %r12
fe3d(2): pop %r13
fe3f(2): pop %r14
fe41(1): ret near (%rsp)
fe42(6): nop 0x0(%rax,%rax,1)
fe48(4): movzx 0x8(%rbp),%eax
fe4c(3): add %r12,%r11
fe4f(4): mov %r11,0x48(%r10)
fe53(2): mov %eax,%edx
fe55(3): and $0xfb,%edx
fe58(3): cmp $0x1a,%dl
fe5b(2): jz 0x25(%rip)
fe5d(2): cmp $0x1c,%al
fe5f(2): jz 0x21(%rip)
fe61(2): cmp $0x16,%al
fe63(2): jnz 0xb(%rip)
fe65(3): test %r9b,%r9b
fe68(6): jz 0x14a(%rip)
fe6e(4): movzx 0x0(%rbp),%eax
fe72(6): mov $0x0,(%rbx)
fe78(3): mov %al,0x8(%rbx)
fe7b(2): xor %eax,%eax
fe7d(2): jmp 0xffffffa4(%rip)
fe7f(1): nop 
fe80(4): mov 0x68(%r10),%r12
fe84(3): cmp %r12,%r11
fe87(6): jnl 0x121(%rip)
fe8d(5): movzx 0x0(%rbp),%r13d
fe92(3): xor %r8d,%r8d
fe95(2): jmp 0x2d(%rip)
fe97(9): nop 0x0(%rax,%rax,1)
fea0(4): mov 0x8(%rbx),%rax
fea4(4): mov %r9b,0x0(%rax,%r8,1)
fea8(4): add $0x1,%r8
feac(4): cmp $0x20,%r8
feb0(6): jz 0xf8(%rip)
feb6(4): movzx 0x8(%rbp),%eax
feba(4): mov 0x48(%r10),%r11
febe(4): mov 0x68(%r10),%r12
fec2(2): cmp $0x1e,%al
fec4(3): movsxd %r8d,%r14
fec7(2): jz 0x69(%rip)
fec9(4): mov 0x8(%r10),%rdx
fecd(4): lea 0x1(%r11),%rax
fed1(4): mov %rax,0x48(%r10)
fed5(5): movzx 0x0(%rdx,%r11,1),%r9d
feda(3): cmp %r12,%rax
fedd(6): jnl 0xcb(%rip)
fee3(3): cmp %r9b,%r13b
fee6(2): jnz 0xffffffba(%rip)
fee8(4): mov 0x8(%r10),%rdx
feec(4): cmp $0x5d,0x0(%rdx,%rax,1)
fef0(2): jnz 0xffffffb0(%rip)
fef2(4): add $0x1,%rax
fef6(4): mov %rax,0x48(%r10)
fefa(4): mov 0x8(%rbx),%rax
fefe(5): mov $0x0,0x0(%rax,%r14,1)
ff03(4): movzx 0x8(%rbp),%eax
ff07(2): cmp $0x1c,%al
ff09(6): jz 0x102(%rip)
ff0f(2): cmp $0x1e,%al
ff11(6): jz 0xed(%rip)
ff17(2): cmp $0x1a,%al
ff19(6): jz 0xd8(%rip)
ff1f(2): xor %eax,%eax
ff21(5): jmp 0xffffff00(%rip)
ff26(a): nop 0x0(%rax,%rax,1)
ff30(8): cmp $0x0,0x8b(%r10)
ff38(2): jz 0xffffff91(%rip)
ff3a(8): cmp $0x0,0x8c(%r10)
ff42(6): jz 0x96(%rip)
ff48(4): cmp 0x30(%r10),%r11
ff4c(2): jz 0x11(%rip)
ff4e(4): mov 0x10(%r10),%rax
ff52(5): cmp $0xff,0x0(%rax,%r11,4)
ff57(6): jz 0xffffff72(%rip)
ff5d(4): mov 0x18(%r10),%rax
ff61(4): mov 0x0(%rax,%r11,8),%rax
ff65(3): add (%r10),%rax
ff68(4): add 0x28(%r10),%rax
ff6c(4): movzx (%rax),%r9d
ff70(4): test $0x80,%r9b
ff74(6): jnz 0xffffff55(%rip)
ff7a(8): cmp $0x1,0x90(%r10)
ff82(5): mov $0x1,%eax
ff87(2): jz 0xf(%rip)
ff89(3): mov %r11,%rsi
ff8c(3): mov %r10,%rdi
ff8f(5): call 0xffff73e1(%rip)
ff94(2): cwde 
ff96(3): add %r11,%rax
ff99(4): mov %rax,0x48(%r10)
ff9d(5): jmp 0xffffff3d(%rip)
ffa2(6): nop 0x0(%rax,%rax,1)
ffa8(5): mov $0x7,%eax
ffad(5): jmp 0xfffffe74(%rip)
ffb2(3): mov %rsp,%rdi
ffb5(3): mov %r8,%rdx
ffb8(3): mov %r10,%rsi
ffbb(5): call 0xffff5955(%rip)
ffc0(5): cmp $0x15,0x8(%rsp)
ffc5(5): mov $0xb,%eax
ffca(6): jz 0xfffffea4(%rip)
ffd0(5): jmp 0xfffffe51(%rip)
ffd5(3): nop (%rax)
ffd8(4): lea 0x1(%r11),%rax
ffdc(3): add (%r10),%r11
ffdf(4): mov 0x28(%r10),%rdx
ffe3(4): mov %rax,0x48(%r10)
ffe7(5): movzx 0x0(%r11,%rdx,1),%r9d
ffec(5): jmp 0xfffffeee(%rip)
fff1(6): mov $0x3,(%rbx)
fff7(2): xor %eax,%eax
fff9(5): jmp 0xfffffe28(%rip)
fffe(6): mov $0x4,(%rbx)
10004(2): xor %eax,%eax
10006(5): jmp 0xfffffe1b(%rip)
1000b(6): mov $0x2,(%rbx)
10011(2): xor %eax,%eax
10013(5): jmp 0xfffffe0e(%rip)
10018(5): call 0xffff1978(%rip)

"peek_token" :
10020(2): push %r15
10022(2): push %r14
10024(2): push %r13
10026(2): push %r12
10028(1): push %rbp
10029(1): push %rbx
1002a(3): mov %rdi,%rbp
1002d(4): sub $0x38,%rsp
10031(4): mov 0x48(%rsi),%r14
10035(9): mov $0x28,%rax
1003e(5): mov %rax,0x28(%rsp)
10043(2): xor %eax,%eax
10045(4): cmp %r14,0x68(%rsi)
10049(6): jle 0x97(%rip)
1004f(5): movzx 0xa(%rdi),%r13d
10054(3): mov %rdx,%r15
10057(4): mov 0x8(%rsi),%rdx
1005b(3): mov %rsi,%rbx
1005e(5): movzx 0x0(%rdx,%r14,1),%r12d
10063(4): and $0x9f,%r13d
10067(4): mov %r13b,0xa(%rdi)
1006b(6): mov 0x90(%rsi),%eax
10071(3): mov %r12b,(%rdi)
10074(3): cmp $0x1,%eax
10077(6): jle 0x99(%rip)
1007d(4): cmp 0x30(%rsi),%r14
10081(6): jz 0x19f(%rip)
10087(4): mov 0x10(%rsi),%rcx
1008b(4): mov 0x0(%rcx,%r14,4),%ecx
1008f(3): cmp $0xff,%ecx
10092(6): jz 0xde(%rip)
10098(4): cmp $0x5c,%r12b
1009c(6): jz 0xf4(%rip)
100a2(4): mov $0x1,0x8(%rdi)
100a6(2): mov %ecx,%edi
100a8(5): mov %rdx,0x8(%rsp)
100ad(3): mov %ecx,(%rsp)
100b0(5): call 0xffff1a00(%rip)
100b5(3): mov (%rsp),%ecx
100b8(2): test %eax,%eax
100ba(3): setnz %al
100bd(3): cmp $0x5f,%ecx
100c0(3): setz %cl
100c3(2): or %ecx,%eax
100c5(3): shl/sal $0x6,%eax
100c8(3): or %eax,%r13d
100cb(4): mov %r13b,0xa(%rbp)
100cf(5): mov 0x8(%rsp),%rdx
100d4(2): jmp 0x78(%rip)
100d6(a): nop 0x0(%rax,%rax,1)
100e0(4): mov $0x2,0x8(%rdi)
100e4(5): mov 0x28(%rsp),%rdi
100e9(9): xor $0x28,%rdi
100f2(6): jnz 0x626(%rip)
100f8(4): add $0x38,%rsp
100fc(1): pop %rbx
100fd(1): pop %rbp
100fe(2): pop %r12
10100(2): pop %r13
10102(2): pop %r14
10104(2): pop %r15
10106(1): ret near (%rsp)
10107(9): nop 0x0(%rax,%rax,1)
10110(4): cmp $0x5c,%r12b
10114(2): jz 0x7c(%rip)
10116(4): mov $0x1,0x8(%rbp)
1011a(4): mov %rdx,(%rsp)
1011e(5): call 0xffff1b52(%rip)
10123(3): mov (%rax),%rsi
10126(4): movzx %r12b,%ecx
1012a(4): movzx 0x0(%rsi,%rcx,2),%eax
1012e(4): shr $0x3,%ax
10132(3): and $0x1,%eax
10135(4): cmp $0x5f,%r12b
10139(3): setz %cl
1013c(2): or %ecx,%eax
1013e(3): shl/sal $0x6,%eax
10141(3): or %eax,%r13d
10144(4): mov %r13b,0xa(%rbp)
10148(4): mov (%rsp),%rdx
1014c(4): sub $0xa,%r12d
10150(4): cmp $0x73,%r12b
10154(6): jnbe 0x138(%rip)
1015a(7): lea 0x4f13(%rip),%rcx
10161(4): movzx %r12b,%r12d
10165(4): movsxd 0x0(%rcx,%r12,4),%rax
10169(3): add %rcx,%rax
1016c(2): jmp %rax
1016e(2): nop 
10170(4): or $0x20,%r13d
10174(4): mov $0x1,0x8(%rdi)
10178(5): mov $0x1,%eax
1017d(4): mov %r13b,0xa(%rdi)
10181(5): jmp 0xffffff63(%rip)
10186(a): nop 0x0(%rax,%rax,1)
10190(4): lea 0x1(%r14),%rsi
10194(4): cmp 0x58(%rbx),%rsi
10198(6): jnl 0xa8(%rip)
1019e(7): cmp $0x0,0x8b(%rbx)
101a5(6): jnz 0x48b(%rip)
101ab(6): movzx 0x1(%rdx,%r14,1),%edi
101b1(3): mov %edi,%r12d
101b4(4): mov %edi,0x8(%rsp)
101b8(3): cmp $0x1,%eax
101bb(4): mov %r12b,0x0(%rbp)
101bf(4): mov $0x1,0x8(%rbp)
101c3(6): jle 0x44d(%rip)
101c9(4): mov 0x10(%rbx),%rax
101cd(4): mov 0x0(%rax,%rsi,4),%r8d
101d1(3): mov %r8d,%edi
101d4(4): mov %r8d,(%rsp)
101d8(5): call 0xffff18d8(%rip)
101dd(4): mov (%rsp),%r8d
101e1(2): test %eax,%eax
101e3(3): setnz %al
101e6(4): cmp $0x5f,%r8d
101ea(3): setz %dl
101ed(5): lea 0xffffffd9(%r12),%ecx
101f2(2): or %edx,%eax
101f4(3): shl/sal $0x6,%eax
101f7(3): or %eax,%r13d
101fa(3): cmp $0x56,%cl
101fd(4): mov %r13b,0xa(%rbp)
10201(6): jnbe 0x404(%rip)
10207(7): lea 0x5036(%rip),%rdx
1020e(3): movzx %cl,%ecx
10211(4): movsxd 0x0(%rdx,%rcx,4),%rax
10215(3): add %rdx,%rax
10218(2): jmp %rax
1021a(6): nop 0x0(%rax,%rax,1)
10220(4): cmp $0x5c,%r12b
10224(6): jz 0xffffff6c(%rip)
1022a(4): mov 0x10(%rbx),%rax
1022e(4): mov $0x1,0x8(%rbp)
10232(4): mov 0x0(%rax,%r14,4),%ecx
10236(5): jmp 0xfffffe70(%rip)
1023b(5): nop 0x0(%rax,%rax,1)
10240(4): mov $0x24,0x8(%rbp)
10244(5): mov $0x1,%eax
10249(5): jmp 0xfffffe9b(%rip)
1024e(2): nop 
10250(7): and $0x1200,%r15d
10257(5): mov $0x1,%eax
1025c(7): cmp $0x1200,%r15
10263(6): jnz 0xfffffe81(%rip)
10269(4): mov $0x18,0x8(%rbp)
1026d(5): jmp 0xfffffe77(%rip)
10272(6): nop 0x0(%rax,%rax,1)
10278(7): and $0x8400,%r15d
1027f(7): cmp $0x8000,%r15
10286(6): jz 0xdc(%rip)
1028c(5): mov $0x1,%eax
10291(5): jmp 0xfffffe53(%rip)
10296(a): nop 0x0(%rax,%rax,1)
102a0(7): and $0x1200,%r15d
102a7(5): mov $0x1,%eax
102ac(7): cmp $0x1200,%r15
102b3(6): jnz 0xfffffe31(%rip)
102b9(4): mov $0x17,0x8(%rbp)
102bd(5): jmp 0xfffffe27(%rip)
102c2(6): nop 0x0(%rax,%rax,1)
102c8(7): test $0x800008,%r15d
102cf(2): jnz 0xb(%rip)
102d1(3): test %r14,%r14
102d4(6): jnz 0x3c6(%rip)
102da(4): mov $0xc,0x8(%rbp)
102de(7): mov $0x10,0x0(%rbp)
102e5(5): mov $0x1,%eax
102ea(5): jmp 0xfffffdfa(%rip)
102ef(1): nop 
102f0(4): mov $0x14,0x8(%rbp)
102f4(5): mov $0x1,%eax
102f9(5): jmp 0xfffffdeb(%rip)
102fe(2): nop 
10300(7): test $0x402,%r15d
10307(5): mov $0x1,%eax
1030c(6): jnz 0xfffffdd8(%rip)
10312(4): mov $0x13,0x8(%rbp)
10316(5): jmp 0xfffffdce(%rip)
1031b(5): nop 0x0(%rax,%rax,1)
10320(4): mov $0x5,0x8(%rbp)
10324(5): mov $0x1,%eax
10329(5): jmp 0xfffffdbb(%rip)
1032e(2): nop 
10330(7): test $0x402,%r15d
10337(5): mov $0x1,%eax
1033c(6): jnz 0xfffffda8(%rip)
10342(4): mov $0x12,0x8(%rbp)
10346(5): jmp 0xfffffd9e(%rip)
1034b(5): nop 0x0(%rax,%rax,1)
10350(7): test $0x800,%r15d
10357(5): mov $0x1,%eax
1035c(6): jz 0xfffffd88(%rip)
10362(4): mov $0xa,0x8(%rbp)
10366(5): mov $0x1,%eax
1036b(5): jmp 0xfffffd79(%rip)
10370(4): mov $0xb,0x8(%rbp)
10374(5): mov $0x1,%eax
10379(5): jmp 0xfffffd6b(%rip)
1037e(2): nop 
10380(7): test $0x2000,%r15d
10387(5): mov $0x1,%eax
1038c(6): jz 0xfffffd58(%rip)
10392(4): mov $0x9,0x8(%rbp)
10396(5): jmp 0xfffffd4e(%rip)
1039b(5): nop 0x0(%rax,%rax,1)
103a0(7): test $0x2000,%r15d
103a7(5): mov $0x1,%eax
103ac(6): jz 0xfffffd38(%rip)
103b2(4): mov $0x8,0x8(%rbp)
103b6(5): jmp 0xfffffd2e(%rip)
103bb(5): nop 0x0(%rax,%rax,1)
103c0(4): test $0x8,%r15b
103c4(2): jnz 0x10(%rip)
103c6(4): add $0x1,%r14
103ca(4): cmp 0x58(%rbx),%r14
103ce(6): jnz 0x2fd(%rip)
103d4(4): mov $0xc,0x8(%rbp)
103d8(7): mov $0x20,0x0(%rbp)
103df(5): mov $0x1,%eax
103e4(5): jmp 0xfffffd00(%rip)
103e9(7): test $0x8400,%r15d
103f0(5): mov $0x2,%eax
103f5(6): jnz 0xfffffcef(%rip)
103fb(4): mov $0xa,0x8(%rbp)
103ff(5): jmp 0xfffffce5(%rip)
10404(7): and $0x1200,%r15d
1040b(5): mov $0x2,%eax
10410(7): cmp $0x200,%r15
10417(6): jnz 0xfffffccd(%rip)
1041d(5): jmp 0xfffffe9c(%rip)
10422(7): test $0x80000,%r15d
10429(5): mov $0x2,%eax
1042e(6): jnz 0xfffffcb6(%rip)
10434(4): mov $0x20,0x8(%rbp)
10438(5): jmp 0xfffffcac(%rip)
1043d(7): test $0x80000,%r15d
10444(5): mov $0x2,%eax
10449(6): jnz 0xfffffc9b(%rip)
1044f(4): mov $0x22,0x8(%rbp)
10453(5): jmp 0xfffffc91(%rip)
10458(7): and $0x1200,%r15d
1045f(5): mov $0x2,%eax
10464(7): cmp $0x200,%r15
1046b(6): jnz 0xfffffc79(%rip)
10471(5): jmp 0xfffffdf8(%rip)
10476(7): test $0x80000,%r15d
1047d(5): mov $0x2,%eax
10482(6): jnz 0xfffffc62(%rip)
10488(4): mov $0xc,0x8(%rbp)
1048c(7): mov $0x100,0x0(%rbp)
10493(5): jmp 0xfffffc51(%rip)
10498(7): test $0x80000,%r15d
1049f(5): mov $0x2,%eax
104a4(6): jnz 0xfffffc40(%rip)
104aa(4): mov $0xc,0x8(%rbp)
104ae(7): mov $0x40,0x0(%rbp)
104b5(5): jmp 0xfffffc2f(%rip)
104ba(7): test $0x80000,%r15d
104c1(5): mov $0x2,%eax
104c6(6): jnz 0xfffffc1e(%rip)
104cc(4): mov $0x21,0x8(%rbp)
104d0(5): jmp 0xfffffc14(%rip)
104d5(7): test $0x80000,%r15d
104dc(5): mov $0x2,%eax
104e1(6): jnz 0xfffffc03(%rip)
104e7(4): mov $0x23,0x8(%rbp)
104eb(5): jmp 0xfffffbf9(%rip)
104f0(7): test $0x80000,%r15d
104f7(5): mov $0x2,%eax
104fc(6): jnz 0xfffffbe8(%rip)
10502(4): mov $0xc,0x8(%rbp)
10506(7): mov $0x200,0x0(%rbp)
1050d(5): jmp 0xfffffbd7(%rip)
10512(7): and $0x402,%r15d
10519(5): mov $0x2,%eax
1051e(4): cmp $0x2,%r15
10522(6): jnz 0xfffffbc2(%rip)
10528(5): jmp 0xfffffdea(%rip)
1052d(7): test $0x80000,%r15d
10534(5): mov $0x2,%eax
10539(6): jnz 0xfffffbab(%rip)
1053f(4): mov $0xc,0x8(%rbp)
10543(7): mov $0x9,0x0(%rbp)
1054a(5): jmp 0xfffffb9a(%rip)
1054f(7): test $0x80000,%r15d
10556(5): mov $0x2,%eax
1055b(6): jnz 0xfffffb89(%rip)
10561(4): mov $0xc,0x8(%rbp)
10565(7): mov $0x6,0x0(%rbp)
1056c(5): jmp 0xfffffb78(%rip)
10571(7): test $0x4000,%r15d
10578(5): mov $0x2,%eax
1057d(6): jnz 0xfffffb67(%rip)
10583(4): mov 0x8(%rsp),%edx
10587(4): mov $0x4,0x8(%rbp)
1058b(3): sub $0x31,%edx
1058e(3): movsxd %edx,%rdx
10591(4): mov %rdx,0x0(%rbp)
10595(5): jmp 0xfffffb4f(%rip)
1059a(7): and $0x402,%r15d
105a1(5): mov $0x2,%eax
105a6(4): cmp $0x2,%r15
105aa(6): jnz 0xfffffb3a(%rip)
105b0(5): jmp 0xfffffd92(%rip)
105b5(7): test $0x2000,%r15d
105bc(5): mov $0x2,%eax
105c1(6): jnz 0xfffffb23(%rip)
105c7(5): jmp 0xfffffdcb(%rip)
105cc(7): test $0x2000,%r15d
105d3(5): mov $0x2,%eax
105d8(6): jnz 0xfffffb0c(%rip)
105de(5): jmp 0xfffffdd4(%rip)
105e3(7): test $0x80000,%r15d
105ea(5): mov $0x2,%eax
105ef(6): jnz 0xfffffaf5(%rip)
105f5(4): mov $0xc,0x8(%rbp)
105f9(7): mov $0x80,0x0(%rbp)
10600(5): jmp 0xfffffae4(%rip)
10605(5): mov $0x2,%eax
1060a(5): jmp 0xfffffada(%rip)
1060f(1): nop 
10610(5): call 0xffff1660(%rip)
10615(3): mov (%rax),%rsi
10618(4): movzx %r12b,%edx
1061c(4): movzx 0x0(%rsi,%rdx,2),%eax
10620(4): shr $0x3,%ax
10624(3): and $0x1,%eax
10627(4): cmp $0x5f,%r12b
1062b(5): jmp 0xfffffbbf(%rip)
10630(3): cmp $0x1,%eax
10633(2): jle 0x31(%rip)
10635(4): mov 0x10(%rbx),%rcx
10639(8): lea 0x0(,%rsi,4),%rdi
10641(4): mov 0x0(%rcx,%rsi,4),%r8d
10645(4): cmp $0xff,%r8d
10649(6): jz 0xb6(%rip)
1064f(4): lea 0x2(%r14),%r9
10653(4): cmp %r9,0x30(%rbx)
10657(2): jz 0xd(%rip)
10659(5): cmp $0xff,0x4(%rcx,%rdi,1)
1065e(6): jz 0xa1(%rip)
10664(7): cmp $0x0,0x8c(%rbx)
1066b(3): mov (%rbx),%rcx
1066e(4): mov 0x28(%rbx),%rdi
10672(2): jz 0x46(%rip)
10674(4): mov 0x18(%rbx),%r8
10678(3): add %rdi,%rcx
1067b(4): add 0x0(%r8,%rsi,8),%rcx
1067f(3): movzx (%rcx),%edi
10682(3): mov %edi,%r12d
10685(4): mov %edi,0x8(%rsp)
10689(6): and $0x80,%edi
1068f(6): jnz 0xfffffb1c(%rip)
10695(5): jmp 0xfffffb23(%rip)
1069a(6): cmp $0xa,0xffffffff(%rdx,%r14,1)
106a0(6): jnz 0xfffffbec(%rip)
106a6(7): test $0x800,%r15d
106ad(6): jz 0xfffffbdf(%rip)
106b3(5): jmp 0xfffffc27(%rip)
106b8(3): add %rsi,%rcx
106bb(4): movzx 0x0(%rcx,%rdi,1),%edi
106bf(3): mov %edi,%r12d
106c2(4): mov %edi,0x8(%rsp)
106c6(5): jmp 0xfffffaf2(%rip)
106cb(5): lea 0x10(%rsp),%rdi
106d0(3): mov %r15,%rdx
106d3(4): mov %r14,0x48(%rbx)
106d7(3): mov %rbx,%rsi
106da(5): call 0xfffff946(%rip)
106df(5): movzx 0x18(%rsp),%eax
106e4(5): sub $0x1,0x48(%rbx)
106e9(3): lea 0xfffffff7(%rax),%edx
106ec(5): mov $0x1,%eax
106f1(3): cmp $0x1,%dl
106f4(6): jnbe 0xfffff9f0(%rip)
106fa(5): jmp 0xfffffcda(%rip)
106ff(6): movzx 0x1(%rdx,%r14,1),%eax
10705(4): mov $0x1,0x8(%rbp)
10709(3): mov %eax,%r12d
1070c(3): mov %al,0x0(%rbp)
1070f(4): mov %eax,0x8(%rsp)
10713(5): jmp 0xfffffabe(%rip)
10718(5): call 0xffff1278(%rip)

"fetch_number" :
10720(2): push %r14
10722(3): mov %rdi,%r14
10725(2): push %r13
10727(3): mov %rsi,%r13
1072a(2): push %r12
1072c(7): mov $0xfffffffe,%r12
10733(1): push %rbp
10734(3): mov %rdx,%rbp
10737(1): push %rbx
10738(7): mov $0xffffffff,%rbx
1073f(1): nop 
10740(3): mov %rbp,%rdx
10743(3): mov %r14,%rsi
10746(3): mov %r13,%rdi
10749(5): call 0xfffff8d7(%rip)
1074e(2): cwde 
10750(4): add %rax,0x48(%r14)
10754(5): movzx 0x8(%r13),%eax
10759(5): movzx 0x0(%r13),%edx
1075e(2): cmp $0x2,%al
10760(2): jz 0x50(%rip)
10762(2): cmp $0x18,%al
10764(2): jz 0x53(%rip)
10766(3): cmp $0x2c,%dl
10769(2): jz 0x4e(%rip)
1076b(2): cmp $0x1,%al
1076d(2): jz 0xb(%rip)
1076f(3): mov %r12,%rbx
10772(2): jmp 0xffffffce(%rip)
10774(4): nop 0x0(%rax)
10778(3): lea 0xffffffd0(%rdx),%eax
1077b(2): cmp $0x9,%al
1077d(2): jnbe 0xfffffff2(%rip)
1077f(4): cmp $0xfffffffe,%rbx
10783(2): jz 0xffffffec(%rip)
10785(4): cmp $0xffffffff,%rbx
10789(2): jz 0x3f(%rip)
1078b(4): lea 0x0(%rbx,%rbx,4),%rax
1078f(4): lea 0x0(%rdx,%rax,2),%rbx
10793(5): mov $0x8030,%eax
10798(7): cmp $0x8030,%rbx
1079f(4): cmovnl %rax,%rbx
107a3(4): sub $0x30,%rbx
107a7(2): jmp 0xffffff99(%rip)
107a9(7): nop 0x0(%rax)
107b0(7): mov $0xfffffffe,%rbx
107b7(3): mov %rbx,%rax
107ba(1): pop %rbx
107bb(1): pop %rbp
107bc(2): pop %r12
107be(2): pop %r13
107c0(2): pop %r14
107c2(1): ret near (%rsp)
107c3(5): nop 0x0(%rax,%rax,1)
107c8(3): movzx %dl,%ebx
107cb(3): sub $0x30,%ebx
107ce(3): movsxd %ebx,%rbx
107d1(5): jmp 0xffffff6f(%rip)

"parse_expression" :
107e0(2): push %r15
107e2(2): push %r14
107e4(2): push %r13
107e6(2): push %r12
107e8(1): push %rbp
107e9(1): push %rbx
107ea(7): sub $0x128,%rsp
107f1(5): mov %rcx,0x20(%rsp)
107f6(4): movzx 0x8(%rdx),%ecx
107fa(9): mov $0x28,%rax
10803(8): mov %rax,0x118(%rsp)
1080b(2): xor %eax,%eax
1080d(3): mov (%rsi),%rax
10810(5): mov %rdx,0x18(%rsp)
10815(5): mov %r9,0x40(%rsp)
1081a(3): cmp $0x24,%cl
1081d(5): mov %rax,0x10(%rsp)
10822(6): jnbe 0xbe(%rip)
10828(3): mov %rsi,%rbp
1082b(7): lea 0x4b6e(%rip),%rsi
10832(3): movzx %cl,%edx
10835(3): mov %rdi,%r14
10838(4): movsxd 0x0(%rsi,%rdx,4),%rax
1083c(3): add %rsi,%rax
1083f(2): jmp %rax
10841(4): mov 0x30(%rbp),%rbx
10845(5): mov 0x20(%rsp),%r15
1084a(3): mov %rdi,%rsi
1084d(5): mov 0x18(%rsp),%r13
10852(4): mov %r8,(%rsp)
10856(4): lea 0x1(%rbx),%rax
1085a(3): mov %r15,%rdx
1085d(7): or $0x800000,%rdx
10864(3): mov %r13,%rdi
10867(4): mov %rax,0x30(%rbp)
1086b(5): call 0xfffff7b5(%rip)
10870(2): cwde 
10872(4): add %rax,0x48(%r14)
10876(2): xor %eax,%eax
10878(5): cmp $0x9,0x8(%r13)
1087d(3): mov %r13,%rdx
10880(6): jz 0xb00(%rip)
10886(5): mov 0x40(%rsp),%r13
1088b(4): mov (%rsp),%r8
1088f(3): mov %r15,%rcx
10892(3): mov %rbp,%rsi
10895(3): mov %r14,%rdi
10898(4): add $0x1,%r8
1089c(3): mov %r13,%r9
1089f(5): call 0x15b1(%rip)
108a4(4): mov 0x0(%r13),%r11d
108a8(3): test %r11d,%r11d
108ab(2): jnz 0x35(%rip)
108ad(5): mov 0x18(%rsp),%rdx
108b2(4): cmp $0x9,0x8(%rdx)
108b6(6): jz 0xaca(%rip)
108bc(3): test %rax,%rax
108bf(2): jz 0x13(%rip)
108c1(7): lea 0xffff62d8(%rip),%rsi
108c8(2): xor %edx,%edx
108ca(3): mov %rax,%rdi
108cd(5): call 0xffff5433(%rip)
108d2(5): mov 0x40(%rsp),%rax
108d7(6): mov $0x8,(%rax)
108dd(3): nop (%rax)
108e0(9): mov $0x0,0x28(%rsp)
108e9(7): nop 0x0(%rax)
108f0(8): mov 0x118(%rsp),%rdi
108f8(9): xor $0x28,%rdi
10901(5): mov 0x28(%rsp),%rax
10906(6): jnz 0x1378(%rip)
1090c(7): add $0x128,%rsp
10913(1): pop %rbx
10914(1): pop %rbp
10915(2): pop %r12
10917(2): pop %r13
10919(2): pop %r14
1091b(2): pop %r15
1091d(1): ret near (%rsp)
1091e(9): test $0x1000000,0x20(%rsp)
10927(6): jnz 0x256(%rip)
1092d(5): mov 0x20(%rsp),%rax
10932(2): test $0x20,%al
10934(6): jnz 0x249(%rip)
1093a(2): test $0x10,%al
1093c(6): jnz 0xe69(%rip)
10942(3): cmp $0x9,%cl
10945(6): jz 0xa13(%rip)
1094b(5): mov 0x10(%rsp),%rax
10950(5): mov 0x18(%rsp),%r8
10955(2): xor %ecx,%ecx
10957(2): xor %edx,%edx
10959(7): lea 0x80(%rax),%rsi
10960(4): lea 0x70(%rax),%rdi
10964(5): mov $0x1,0x8(%r8)
10969(5): call 0xffff7777(%rip)
1096e(3): test %rax,%rax
10971(5): mov %rax,0x28(%rsp)
10976(6): jz 0x9d2(%rip)
1097c(5): mov 0x18(%rsp),%rbx
10981(5): mov 0x20(%rsp),%rdx
10986(3): mov %r14,%rsi
10989(8): lea 0xc0(%rsp),%r15
10991(3): mov %rbx,%rdi
10994(5): call 0xfffff68c(%rip)
10999(2): cwde 
1099b(4): add %rax,0x48(%r14)
1099f(4): movzx 0x8(%rbx),%eax
109a3(5): nop 0x0(%rax,%rax,1)
109a8(2): cmp $0x17,%al
109aa(6): jnbe 0xffffff46(%rip)
109b0(2): cmp $0x12,%al
109b2(5): mov $0x8c0800,%ecx
109b7(3): setz %bl
109ba(4): bt %rax,%rcx
109be(6): jnb 0xffffff32(%rip)
109c4(5): mov 0x18(%rsp),%rcx
109c9(2): cmp $0x17,%al
109cb(4): mov 0x48(%r14),%rbp
109cf(4): movdqa (%rcx),%xmm0
109d3(6): jz 0x325(%rip)
109d9(2): cmp $0x13,%al
109db(3): movzx %bl,%ebx
109de(6): jz 0x2b2(%rip)
109e4(5): mov 0x20(%rsp),%rdx
109e9(5): mov 0x18(%rsp),%rdi
109ee(3): mov %r14,%rsi
109f1(5): call 0xfffff62f(%rip)
109f6(2): cwde 
109f8(4): add %rax,0x48(%r14)
109fc(6): cmp $0x0,0x28(%rsp)
10a02(6): jz 0x38e(%rip)
10a08(8): mov $0xffffffff,(%rsp)
10a10(3): test %rbx,%rbx
10a13(5): mov 0x28(%rsp),%rbp
10a18(9): mov $0x0,0x30(%rsp)
10a21(6): jnle 0x17f(%rip)
10a27(4): cmp $0x11,0x30(%rbp)
10a2b(6): jz 0x345(%rip)
10a31(5): cmp $0xffffffff,(%rsp)
10a36(3): mov %rbp,%rdx
10a39(3): mov %r15,%r8
10a3c(3): setz %al
10a3f(2): xor %ecx,%ecx
10a41(3): add $0xa,%eax
10a44(7): mov %al,0xc8(%rsp)
10a4b(5): mov 0x10(%rsp),%rax
10a50(4): lea 0x70(%rax),%r12
10a54(7): lea 0x80(%rax),%r13
10a5b(3): mov %r12,%rdi
10a5e(3): mov %r13,%rsi
10a61(5): call 0xffff767f(%rip)
10a66(3): test %rax,%rax
10a69(3): mov %rax,%rdx
10a6c(6): jz 0x1f4(%rip)
10a72(4): add $0x2,%rbx
10a76(4): cmp (%rsp),%rbx
10a7a(2): jnle 0x81(%rip)
10a7c(5): mov %r14,0x48(%rsp)
10a81(3): mov %rax,%r14
10a84(5): mov 0x10(%rsp),%rsi
10a89(3): mov %rbp,%rdi
10a8c(5): call 0xffff7734(%rip)
10a91(3): mov %r15,%r8
10a94(3): mov %rax,%rbp
10a97(3): mov %rax,%rcx
10a9a(3): mov %r14,%rdx
10a9d(3): mov %r13,%rsi
10aa0(3): mov %r12,%rdi
10aa3(8): mov $0x10,0xc8(%rsp)
10aab(5): call 0xffff7635(%rip)
10ab0(3): test %rbp,%rbp
10ab3(6): jz 0x1ad(%rip)
10ab9(3): test %rax,%rax
10abc(6): jz 0x1a4(%rip)
10ac2(2): xor %ecx,%ecx
10ac4(3): mov %r15,%r8
10ac7(3): mov %rax,%rdx
10aca(3): mov %r13,%rsi
10acd(3): mov %r12,%rdi
10ad0(8): mov $0xa,0xc8(%rsp)
10ad8(5): call 0xffff7608(%rip)
10add(3): test %rax,%rax
10ae0(3): mov %rax,%r14
10ae3(6): jz 0x17d(%rip)
10ae9(4): add $0x1,%rbx
10aed(4): cmp (%rsp),%rbx
10af1(2): jle 0xffffff93(%rip)
10af3(5): mov 0x48(%rsp),%r14
10af8(3): mov %rax,%rdx
10afb(5): mov 0x30(%rsp),%rax
10b00(3): test %rax,%rax
10b03(6): jz 0x2ad(%rip)
10b09(3): mov %rdx,%rcx
10b0c(3): mov %r15,%r8
10b0f(3): mov %rax,%rdx
10b12(3): mov %r13,%rsi
10b15(3): mov %r12,%rdi
10b18(8): mov $0x10,0xc8(%rsp)
10b20(5): call 0xffff75c0(%rip)
10b25(5): mov 0x40(%rsp),%rdi
10b2a(2): mov (%rdi),%edx
10b2c(2): test %edx,%edx
10b2e(2): jz 0xb(%rip)
10b30(3): test %rax,%rax
10b33(6): jz 0x358(%rip)
10b39(5): mov %rax,0x28(%rsp)
10b3e(9): test $0x1000000,0x20(%rsp)
10b47(5): mov 0x18(%rsp),%rax
10b4c(4): movzx 0x8(%rax),%eax
10b50(6): jz 0xfffffe58(%rip)
10b56(2): cmp $0xb,%al
10b58(2): jz 0xa(%rip)
10b5a(2): cmp $0x17,%al
10b5c(6): jnz 0xfffffe4c(%rip)
10b62(5): mov 0x28(%rsp),%rax
10b67(3): test %rax,%rax
10b6a(2): jz 0x13(%rip)
10b6c(7): lea 0xffff602d(%rip),%rsi
10b73(2): xor %edx,%edx
10b75(3): mov %rax,%rdi
10b78(5): call 0xffff5188(%rip)
10b7d(5): mov 0x40(%rsp),%rax
10b82(9): mov $0x0,0x28(%rsp)
10b8b(6): mov $0xd,(%rax)
10b91(5): jmp 0xfffffd5f(%rip)
10b96(a): nop 0x0(%rax,%rax,1)
10ba0(4): cmp $0x1,%rbx
10ba4(6): jz 0x838(%rip)
10baa(5): mov 0x10(%rsp),%rax
10baf(3): mov %rbp,%r13
10bb2(5): mov %r14,0x48(%rsp)
10bb7(7): lea 0x80(%rax),%r12
10bbe(4): lea 0x70(%rax),%rdi
10bc2(3): mov %rbp,%rax
10bc5(3): mov %rax,%r14
10bc8(5): mov $0x2,%ebp
10bcd(3): mov %r12,%rsi
10bd0(5): mov %rdi,0x30(%rsp)
10bd5(3): mov %r13,%r12
10bd8(3): mov %rbx,%r13
10bdb(3): mov %rsi,%rbx
10bde(2): nop 
10be0(5): mov 0x10(%rsp),%rsi
10be5(3): mov %r12,%rdi
10be8(5): call 0xffff75d8(%rip)
10bed(5): mov 0x30(%rsp),%rdi
10bf2(3): mov %rax,%r12
10bf5(3): mov %r14,%rdx
10bf8(3): mov %r15,%r8
10bfb(3): mov %rax,%rcx
10bfe(3): mov %rbx,%rsi
10c01(8): mov $0x10,0xc8(%rsp)
10c09(5): call 0xffff74d7(%rip)
10c0e(3): test %r12,%r12
10c11(3): mov %rax,%r14
10c14(2): jz 0x4c(%rip)
10c16(3): test %rax,%rax
10c19(2): jz 0x47(%rip)
10c1b(4): add $0x1,%rbp
10c1f(3): cmp %r13,%rbp
10c22(2): jle 0xffffffbe(%rip)
10c24(5): mov 0x48(%rsp),%r14
10c29(3): mov %r13,%rbx
10c2c(5): mov %rax,0x30(%rsp)
10c31(3): mov %r12,%r13
10c34(4): cmp %rbx,(%rsp)
10c38(6): jz 0x16c(%rip)
10c3e(5): mov 0x10(%rsp),%rsi
10c43(3): mov %r13,%rdi
10c46(5): call 0xffff757a(%rip)
10c4b(3): test %rax,%rax
10c4e(3): mov %rax,%rbp
10c51(6): jnz 0xfffffdd6(%rip)
10c57(9): nop 0x0(%rax,%rax,1)
10c60(5): mov 0x40(%rsp),%rax
10c65(6): mov $0xc,(%rax)
10c6b(5): mov 0x28(%rsp),%rdi
10c70(7): lea 0xffff5f29(%rip),%rsi
10c77(2): xor %edx,%edx
10c79(5): call 0xffff5087(%rip)
10c7e(9): mov $0x0,0x28(%rsp)
10c87(5): jmp 0xfffffc69(%rip)
10c8c(4): nop 0x0(%rax)
10c90(8): mov $0x1,(%rsp)
10c98(5): mov 0x20(%rsp),%rdx
10c9d(5): mov 0x18(%rsp),%rdi
10ca2(3): mov %r14,%rsi
10ca5(5): call 0xfffff37b(%rip)
10caa(2): cwde 
10cac(4): add %rax,0x48(%r14)
10cb0(6): cmp $0x0,0x28(%rsp)
10cb6(6): jz 0xda(%rip)
10cbc(4): mov (%rsp),%rax
10cc0(3): or %rbx,%rax
10cc3(6): jnz 0xfffffd4d(%rip)
10cc9(5): mov 0x28(%rsp),%rdi
10cce(7): lea 0xffff5ecb(%rip),%rsi
10cd5(2): xor %edx,%edx
10cd7(5): call 0xffff5029(%rip)
10cdc(5): mov 0x40(%rsp),%rax
10ce1(2): mov (%rax),%esi
10ce3(2): test %esi,%esi
10ce5(2): jnz 0xffffff86(%rip)
10ce7(9): mov $0x0,0x28(%rsp)
10cf0(5): jmp 0xfffffe4e(%rip)
10cf5(3): nop (%rax)
10cf8(5): mov 0x20(%rsp),%rdx
10cfd(3): mov %rcx,%rsi
10d00(3): mov %r14,%rdi
10d03(4): movaps %xmm0,(%rsp)
10d07(5): call 0xfffffa19(%rip)
10d0c(4): cmp $0xffffffff,%rax
10d10(3): mov %rax,%rbx
10d13(5): movdqa (%rsp),%xmm0
10d18(6): jz 0xa8(%rip)
10d1e(4): cmp $0xfffffffe,%rax
10d22(2): jz 0x1b(%rip)
10d24(5): mov 0x18(%rsp),%rax
10d29(4): movzx 0x8(%rax),%eax
10d2d(2): cmp $0x18,%al
10d2f(6): jz 0x121(%rip)
10d35(2): cmp $0x1,%al
10d37(6): jz 0x12c(%rip)
10d3d(9): test $0x200000,0x20(%rsp)
10d46(6): jz 0xf3d(%rip)
10d4c(5): mov 0x18(%rsp),%rax
10d51(4): mov %rbp,0x48(%r14)
10d55(3): movaps %xmm0,(%rax)
10d58(4): mov $0x1,0x8(%rax)
10d5c(5): mov 0x28(%rsp),%rax
10d61(5): jmp 0xfffffdc4(%rip)
10d66(a): nop 0x0(%rax,%rax,1)
10d70(4): mov 0x28(%rbp),%rdx
10d74(7): lea 0xffff4cc5(%rip),%rsi
10d7b(3): mov %rbp,%rdi
10d7e(5): call 0xffff4f82(%rip)
10d83(5): jmp 0xfffffcae(%rip)
10d88(8): nop 0x0(%rax,%rax,1)
10d90(5): mov 0x40(%rsp),%rax
10d95(2): mov (%rax),%ecx
10d97(2): test %ecx,%ecx
10d99(6): jz 0xffffff4e(%rip)
10d9f(5): jmp 0xfffffb41(%rip)
10da4(5): mov 0x30(%rsp),%rdx
10da9(7): nop 0x0(%rax)
10db0(5): mov %rdx,0x28(%rsp)
10db5(5): jmp 0xfffffd89(%rip)
10dba(6): nop 0x0(%rax,%rax,1)
10dc0(5): mov 0x18(%rsp),%rax
10dc5(4): cmp $0x1,0x8(%rax)
10dc9(6): jnz 0xb7(%rip)
10dcf(5): mov 0x18(%rsp),%rax
10dd4(3): cmp $0x2c,(%rax)
10dd7(6): jnz 0xa9(%rip)
10ddd(2): xor %ebx,%ebx
10ddf(5): mov 0x20(%rsp),%rdx
10de4(5): mov 0x18(%rsp),%rsi
10de9(3): mov %r14,%rdi
10dec(5): movaps %xmm0,0x30(%rsp)
10df1(5): call 0xfffff92f(%rip)
10df6(4): cmp $0xfffffffe,%rax
10dfa(4): mov %rax,(%rsp)
10dfe(6): movdqa 0x30(%rsp),%xmm0
10e04(6): jz 0xffffff39(%rip)
10e0a(4): mov (%rsp),%rax
10e0e(4): cmp $0xffffffff,%rax
10e12(2): jz 0x7(%rip)
10e14(3): cmp %rbx,%rax
10e17(2): jl 0x69(%rip)
10e19(5): mov 0x18(%rsp),%rax
10e1e(4): cmp $0x18,0x8(%rax)
10e22(2): jnz 0x5e(%rip)
10e24(5): cmp $0xffffffff,(%rsp)
10e29(2): jnz 0x2b(%rip)
10e2b(2): xor %eax,%eax
10e2d(7): cmp $0x7fff,%rbx
10e34(3): setnle %al
10e37(3): test %rax,%rax
10e3a(6): jz 0xfffffe5e(%rip)
10e40(5): mov 0x40(%rsp),%rax
10e45(6): mov $0xf,(%rax)
10e4b(2): jmp 0x40(%rip)
10e4d(3): nop (%rax)
10e50(4): mov %rbx,(%rsp)
10e54(2): xor %eax,%eax
10e56(8): cmp $0x7fff,(%rsp)
10e5e(3): setnle %al
10e61(2): jmp 0xffffffd6(%rip)
10e63(5): mov 0x18(%rsp),%rax
10e68(3): cmp $0x2c,(%rax)
10e6b(6): jz 0xffffff74(%rip)
10e71(9): test $0x200000,0x20(%rsp)
10e7a(6): jnz 0xfffffed2(%rip)
10e80(5): mov 0x40(%rsp),%rax
10e85(6): mov $0xa,(%rax)
10e8b(6): cmp $0x0,0x28(%rsp)
10e91(6): jnz 0xfffffdda(%rip)
10e97(5): jmp 0xfffffa49(%rip)
10e9c(4): nop 0x0(%rax)
10ea0(5): mov 0x18(%rsp),%rax
10ea5(2): mov (%rax),%ebp
10ea7(6): test $0x30f,%ebp
10ead(2): jz 0x64(%rip)
10eaf(5): mov 0x10(%rsp),%rax
10eb4(7): movzx 0xb0(%rax),%eax
10ebb(2): test $0x10,%al
10ebd(2): jnz 0x54(%rip)
10ebf(5): mov 0x10(%rsp),%rdi
10ec4(3): or $0x10,%eax
10ec7(2): test $0x8,%al
10ec9(6): mov %al,0xb0(%rdi)
10ecf(6): jnz 0xc04(%rip)
10ed5(a): mov $0x287948901175001088,%rdx
10edf(2): test $0x4,%al
10ee1(7): mov %rdx,0xb8(%rdi)
10ee8(a): mov $0x576460745995190270,%rdx
10ef2(7): mov %rdx,0xc0(%rdi)
10ef9(6): jz 0xb5f(%rip)
10eff(4): pxor %xmm0,%xmm0
10f03(5): mov 0x18(%rsp),%rax
10f08(7): movups %xmm0,0xc8(%rdi)
10f0f(2): mov (%rax),%ebp
10f11(5): mov 0x10(%rsp),%rax
10f16(4): lea 0x70(%rax),%rbx
10f1a(7): lea 0x80(%rax),%r12
10f21(6): lea 0xffffff00(%rbp),%eax
10f27(5): test $0xfffffeff,%eax
10f2c(6): jnz 0x66e(%rip)
10f32(6): cmp $0x100,%ebp
10f38(5): mov 0x18(%rsp),%r15
10f3d(6): jz 0x635(%rip)
10f43(7): mov $0x5,(%r15)
10f4a(3): mov %r15,%r8
10f4d(2): xor %ecx,%ecx
10f4f(2): xor %edx,%edx
10f51(3): mov %r12,%rsi
10f54(3): mov %rbx,%rdi
10f57(5): call 0xffff7189(%rip)
10f5c(7): mov $0xa,(%r15)
10f63(3): mov %rax,%rbp
10f66(5): mov 0x18(%rsp),%r8
10f6b(2): xor %ecx,%ecx
10f6d(2): xor %edx,%edx
10f6f(3): mov %r12,%rsi
10f72(3): mov %rbx,%rdi
10f75(5): call 0xffff716b(%rip)
10f7a(8): lea 0xc0(%rsp),%r8
10f82(3): mov %rbp,%rdx
10f85(3): mov %rbx,%rdi
10f88(3): mov %rax,%rcx
10f8b(3): mov %r12,%rsi
10f8e(3): mov %rax,%r13
10f91(8): mov $0xa,0xc8(%rsp)
10f99(5): call 0xffff7147(%rip)
10f9e(3): test %rbp,%rbp
10fa1(3): mov %rax,%rdi
10fa4(5): mov %rax,0x28(%rsp)
10fa9(3): setz %dl
10fac(3): test %r13,%r13
10faf(3): setz %al
10fb2(2): or %al,%dl
10fb4(6): jnz 0x394(%rip)
10fba(3): test %rdi,%rdi
10fbd(6): jz 0x38b(%rip)
10fc3(5): mov 0x20(%rsp),%rdx
10fc8(5): mov 0x18(%rsp),%rdi
10fcd(3): mov %r14,%rsi
10fd0(5): call 0xfffff050(%rip)
10fd5(2): cwde 
10fd7(4): add %rax,0x48(%r14)
10fdb(5): jmp 0xfffff915(%rip)
10fe0(5): mov $0x1,%esi
10fe5(5): mov $0x20,%edi
10fea(c): mov $0x0,0x98(%rsp)
10ff6(5): call 0xffff0a7a(%rip)
10ffb(5): mov $0x1,%esi
11000(3): mov %rax,%r12
11003(5): mov $0x50,%edi
11008(5): call 0xffff0a68(%rip)
1100d(3): test %r12,%r12
11010(3): mov %rax,%r13
11013(3): setz %dl
11016(3): test %rax,%rax
11019(3): setz %al
1101c(2): or %al,%dl
1101e(6): jnz 0x7db(%rip)
11024(5): mov 0x18(%rsp),%r10
11029(5): mov 0x20(%rsp),%rdx
1102e(3): mov %r14,%rsi
11031(3): mov %r10,%rdi
11034(5): call 0xffff48dc(%rip)
11039(3): movsxd %eax,%rbx
1103c(5): movzx 0x8(%r10),%eax
11041(2): cmp $0x2,%al
11043(6): jz 0x7a6(%rip)
11049(2): cmp $0x19,%al
1104b(5): mov $0x0,0x57(%rsp)
11050(6): jz 0x4ca(%rip)
11056(2): cmp $0x15,%al
11058(6): jz 0x50c(%rip)
1105e(8): lea 0xd0(%rsp),%rax
11066(5): mov 0x18(%rsp),%r15
1106b(7): lea 0x43c2(%rip),%rbp
11072(9): mov $0x0,0x48(%rsp)
1107b(6): mov $0x1,%r9d
11081(9): mov $0x0,0x30(%rsp)
1108a(5): mov %rax,0x28(%rsp)
1108f(8): lea 0xa0(%rsp),%rax
11097(4): mov %rax,(%rsp)
1109b(8): lea 0x98(%rsp),%rax
110a3(5): mov %rax,0x58(%rsp)
110a8(8): lea 0xc0(%rsp),%rax
110b0(5): mov %rax,0x60(%rsp)
110b5(8): lea 0xf0(%rsp),%rax
110bd(5): mov %rax,0x68(%rsp)
110c2(5): mov 0x28(%rsp),%rax
110c7(5): mov 0x20(%rsp),%r8
110cc(4): and $0x1,%r9d
110d0(4): mov (%rsp),%rdi
110d4(2): mov %ebx,%ecx
110d6(3): mov %r15,%rdx
110d9(3): mov %r14,%rsi
110dc(b): mov $0x3,0xa0(%rsp)
110e7(8): mov %rax,0xa8(%rsp)
110ef(5): call 0xffffecd1(%rip)
110f4(2): test %eax,%eax
110f6(6): jnz 0x4e5(%rip)
110fc(5): mov 0x20(%rsp),%rdx
11101(3): mov %r14,%rsi
11104(3): mov %r15,%rdi
11107(5): call 0xffff4809(%rip)
1110c(3): movsxd %eax,%rbx
1110f(7): mov 0xa0(%rsp),%eax
11116(3): lea 0xfffffffe(%rax),%edx
11119(3): and $0xfd,%edx
1111c(2): jz 0x19(%rip)
1111e(5): movzx 0x8(%r15),%edx
11123(3): cmp $0x2,%dl
11126(6): jz 0x49b(%rip)
1112c(3): cmp $0x16,%dl
1112f(6): jz 0x4b8(%rip)
11135(3): cmp $0x4,%eax
11138(6): jnbe 0x9a2(%rip)
1113e(5): movsxd 0x0(%rbp,%rax,4),%rax
11143(3): add %rbp,%rax
11146(2): jmp %rax
11148(5): mov 0x40(%rsp),%rbx
1114d(3): cmp $0x23,%cl
11150(4): mov 0x78(%rdi),%rsi
11154(4): setz %r8b
11158(7): lea 0x3aa2(%rip),%rcx
1115f(7): lea 0x3e49(%rip),%rdx
11166(4): movzx %r8b,%r8d
1116a(3): mov %rbx,%r9
1116d(5): mov 0x10(%rsp),%rdi
11172(5): call 0xffffa2be(%rip)
11177(2): mov (%rbx),%edi
11179(5): mov %rax,0x28(%rsp)
1117e(2): test %edi,%edi
11180(6): jz 0xfffff7fc(%rip)
11186(3): test %rax,%rax
11189(6): jnz 0xfffff7f3(%rip)
1118f(5): jmp 0xfffff751(%rip)
11194(4): nop 0x0(%rax)
11198(5): mov 0x40(%rsp),%rbx
1119d(3): cmp $0x21,%cl
111a0(4): mov 0x78(%rdi),%rsi
111a4(4): setz %r8b
111a8(7): lea 0x304f(%rip),%rcx
111af(7): lea 0x3ded(%rip),%rdx
111b6(4): movzx %r8b,%r8d
111ba(3): mov %rbx,%r9
111bd(2): jmp 0xffffffb0(%rip)
111bf(5): mov 0x18(%rsp),%rax
111c4(5): mov 0x10(%rsp),%rdi
111c9(3): mov (%rax),%rcx
111cc(5): mov $0x1,%eax
111d1(2): shl/sal %cl,%eax
111d3(2): cwde 
111d5(7): test %rax,0xa8(%rdi)
111dc(6): jz 0x632(%rip)
111e2(5): mov 0x10(%rsp),%rbx
111e7(5): mov 0x18(%rsp),%r8
111ec(2): xor %ecx,%ecx
111ee(2): xor %edx,%edx
111f0(7): or %rax,0xa0(%rbx)
111f7(7): lea 0x80(%rbx),%rsi
111fe(4): lea 0x70(%rbx),%rdi
11202(5): call 0xffff6ede(%rip)
11207(3): test %rax,%rax
1120a(5): mov %rax,0x28(%rsp)
1120f(6): jz 0x139(%rip)
11215(8): add $0x1,0x98(%rbx)
1121d(7): or $0x2,0xb0(%rbx)
11224(5): jmp 0xfffff758(%rip)
11229(5): mov 0x10(%rsp),%rbx
1122e(5): mov 0x18(%rsp),%r8
11233(2): xor %ecx,%ecx
11235(2): xor %edx,%edx
11237(7): lea 0x80(%rbx),%rsi
1123e(4): lea 0x70(%rbx),%rdi
11242(5): call 0xffff6e9e(%rip)
11247(3): test %rax,%rax
1124a(5): mov %rax,0x28(%rsp)
1124f(6): jz 0xf9(%rip)
11255(7): cmp $0x1,0xb4(%rbx)
1125c(6): jle 0xfffff720(%rip)
11262(7): or $0x2,0xb0(%rbx)
11269(5): jmp 0xfffff713(%rip)
1126e(5): mov 0x10(%rsp),%rax
11273(5): mov 0x18(%rsp),%r8
11278(2): xor %ecx,%ecx
1127a(2): xor %edx,%edx
1127c(4): lea 0x70(%rax),%rbx
11280(7): lea 0x80(%rax),%rbp
11287(3): mov %rbx,%rdi
1128a(3): mov %rbp,%rsi
1128d(5): call 0xffff6e53(%rip)
11292(3): test %rax,%rax
11295(5): mov %rax,0x28(%rsp)
1129a(6): jz 0xae(%rip)
112a0(5): mov 0x10(%rsp),%rax
112a5(8): lea 0xc0(%rsp),%r12
112ad(5): mov 0x28(%rsp),%r15
112b2(7): cmp $0x1,0xb4(%rax)
112b9(6): jle 0xfffff6c3(%rip)
112bf(4): mov 0x48(%r14),%rax
112c3(4): cmp %rax,0x68(%r14)
112c7(6): jle 0x30a(%rip)
112cd(4): cmp 0x30(%r14),%rax
112d1(6): jz 0x300(%rip)
112d7(4): mov 0x10(%r14),%rdx
112db(4): cmp $0xff,0x0(%rdx,%rax,4)
112df(6): jnz 0x2f2(%rip)
112e5(5): mov 0x18(%rsp),%r13
112ea(5): mov 0x20(%rsp),%rdx
112ef(3): mov %r14,%rsi
112f2(3): mov %r13,%rdi
112f5(5): call 0xffffed2b(%rip)
112fa(2): cwde 
112fc(4): add %rax,0x48(%r14)
11300(3): mov %r13,%r8
11303(2): xor %ecx,%ecx
11305(2): xor %edx,%edx
11307(3): mov %rbp,%rsi
1130a(3): mov %rbx,%rdi
1130d(5): call 0xffff6dd3(%rip)
11312(3): mov %r15,%rdx
11315(3): mov %rax,%r13
11318(3): mov %r12,%r8
1131b(3): mov %rax,%rcx
1131e(3): mov %rbp,%rsi
11321(3): mov %rbx,%rdi
11324(8): mov $0x10,0xc8(%rsp)
1132c(5): call 0xffff6db4(%rip)
11331(3): test %r13,%r13
11334(3): mov %rax,%r15
11337(3): setz %dl
1133a(3): test %rax,%rax
1133d(3): setz %al
11340(2): or %al,%dl
11342(6): jz 0xffffff7d(%rip)
11348(5): mov 0x40(%rsp),%rax
1134d(6): mov $0xc,(%rax)
11353(5): jmp 0xfffff58d(%rip)
11358(9): test $0x20000,0x20(%rsp)
11361(6): jnz 0xfffff5ea(%rip)
11367(5): mov 0x40(%rsp),%rax
1136c(9): mov $0x0,0x28(%rsp)
11375(6): mov $0x10,(%rax)
1137b(5): jmp 0xfffff575(%rip)
11380(4): cmp $0x8,%rbx
11384(2): jbe 0x67(%rip)
11386(5): mov 0x10(%rsp),%rdi
1138b(8): lea 0xc0(%rsp),%r8
11393(2): xor %ecx,%ecx
11395(3): mov %rax,%rdx
11398(8): mov $0x11,0xc8(%rsp)
113a0(7): lea 0x80(%rdi),%rsi
113a7(4): add $0x70,%rdi
113ab(5): call 0xffff6d35(%rip)
113b0(3): test %rax,%rax
113b3(5): mov %rax,0x28(%rsp)
113b8(2): jz 0xffffff90(%rip)
113ba(4): mov %rbx,0x28(%rax)
113be(5): jmp 0xfffff5be(%rip)
113c3(5): mov 0x40(%rsp),%rax
113c8(9): mov $0x0,0x28(%rsp)
113d1(6): mov $0x5,(%rax)
113d7(5): jmp 0xfffff519(%rip)
113dc(5): mov 0x28(%rsp),%r13
113e1(5): mov %r13,0x30(%rsp)
113e6(5): jmp 0xfffff84e(%rip)
113eb(5): mov 0x10(%rsp),%rsi
113f0(5): mov $0x1,%edx
113f5(2): mov %ebx,%ecx
113f7(2): shl/sal %cl,%edx
113f9(3): movsxd %edx,%rdx
113fc(7): or %rdx,0xa8(%rsi)
11403(2): jmp 0xffffff83(%rip)
11405(8): mov 0xa8(%rsp),%rsi
1140d(3): mov %r12,%rdi
11410(5): call 0xffff97c0(%rip)
11415(5): mov 0x40(%rsp),%rdx
1141a(2): test %eax,%eax
1141c(2): mov %eax,(%rdx)
1141e(2): jnz 0x3a(%rip)
11420(5): movzx 0x8(%r15),%eax
11425(2): cmp $0x2,%al
11427(6): jz 0x19a(%rip)
1142d(2): cmp $0x15,%al
1142f(6): jz 0x413(%rip)
11435(3): xor %r9d,%r9d
11438(5): jmp 0xfffffc8a(%rip)
1143d(8): mov 0xa8(%rsp),%rsi
11445(3): mov %r12,%rdi
11448(5): call 0xffff9788(%rip)
1144d(5): mov 0x40(%rsp),%rdx
11452(2): test %eax,%eax
11454(2): mov %eax,(%rdx)
11456(2): jz 0xffffffca(%rip)
11458(3): mov %r12,%rdi
1145b(5): call 0xffff0425(%rip)
11460(3): mov %r13,%rdi
11463(5): call 0xffff56dd(%rip)
11468(5): mov 0x40(%rsp),%rax
1146d(3): mov (%rax),%r8d
11470(3): test %r8d,%r8d
11473(6): jnz 0xfffff46d(%rip)
11479(9): mov $0x0,0x28(%rsp)
11482(5): jmp 0xfffff4fa(%rip)
11487(4): mov 0x28(%r13),%rdx
1148b(5): cmp 0x30(%rsp),%rdx
11490(4): mov 0x0(%r13),%rax
11494(6): jz 0x4fa(%rip)
1149a(4): lea 0x1(%rdx),%rcx
1149e(4): mov %rcx,0x28(%r13)
114a2(7): mov 0xa8(%rsp),%ecx
114a9(3): mov %ecx,0x0(%rax,%rdx,4)
114ac(5): jmp 0xffffff74(%rip)
114b1(8): movzx 0xa8(%rsp),%edx
114b9(5): mov $0x1,%esi
114be(3): mov %rdx,%rax
114c1(3): and $0x3f,%edx
114c4(4): shr $0x3,%rax
114c8(2): mov %edx,%ecx
114ca(3): and $0x18,%eax
114cd(3): shl/sal %cl,%rsi
114d0(4): or %rsi,0x0(%r12,%rax,1)
114d4(5): jmp 0xffffff4c(%rip)
114d9(4): sub $0x8,%rsp
114dd(4): mov 0x78(%r14),%rdi
114e1(4): lea 0x18(%r13),%rdx
114e5(4): push 0x28(%rsp)
114e9(8): mov 0xb8(%rsp),%r9
114f1(4): lea 0x48(%r13),%rcx
114f5(5): mov 0x68(%rsp),%r8
114fa(3): mov %r12,%rsi
114fd(5): call 0xffff9723(%rip)
11502(5): mov 0x50(%rsp),%rdx
11507(2): test %eax,%eax
11509(2): mov %eax,(%rdx)
1150b(2): pop %r9
1150d(2): pop %r10
1150f(6): jz 0xffffff11(%rip)
11515(5): jmp 0xffffff43(%rip)
1151a(5): or $0x1,0x20(%r13)
1151f(9): test $0x100,0x20(%rsp)
11528(2): jz 0xa(%rip)
1152a(8): or $0x400,(%r12)
11532(4): add %rbx,0x48(%r14)
11536(5): mov 0x18(%rsp),%r11
1153b(3): mov %r14,%rsi
1153e(5): mov 0x20(%rsp),%rdx
11543(3): mov %r11,%rdi
11546(5): call 0xffff43ca(%rip)
1154b(2): mov %eax,%ebx
1154d(5): movzx 0x8(%r11),%eax
11552(2): cmp $0x2,%al
11554(6): jz 0x295(%rip)
1155a(5): mov $0x1,0x57(%rsp)
1155f(5): jmp 0xfffffaf7(%rip)
11564(5): mov 0x18(%rsp),%rax
11569(4): mov $0x1,0x8(%rax)
1156d(5): jmp 0xfffffaf1(%rip)
11572(7): mov $0x6,(%r15)
11579(3): mov %r15,%r8
1157c(2): xor %ecx,%ecx
1157e(2): xor %edx,%edx
11580(3): mov %r12,%rsi
11583(3): mov %rbx,%rdi
11586(5): call 0xffff6b5a(%rip)
1158b(7): mov $0x9,(%r15)
11592(3): mov %rax,%rbp
11595(5): jmp 0xfffff9d1(%rip)
1159a(5): mov 0x18(%rsp),%r8
1159f(2): xor %ecx,%ecx
115a1(2): xor %edx,%edx
115a3(3): mov %r12,%rsi
115a6(3): mov %rbx,%rdi
115a9(5): call 0xffff6b37(%rip)
115ae(3): test %rax,%rax
115b1(5): mov %rax,0x28(%rsp)
115b6(6): jnz 0xfffffa0d(%rip)
115bc(5): jmp 0xfffffd8c(%rip)
115c1(5): mov 0x40(%rsp),%rax
115c6(6): mov $0x7,(%rax)
115cc(5): jmp 0xfffffe8c(%rip)
115d1(5): mov %r15,0x28(%rsp)
115d6(5): jmp 0xfffff3a6(%rip)
115db(5): mov 0x40(%rsp),%rdx
115e0(2): mov %eax,(%rdx)
115e2(5): jmp 0xfffffe76(%rip)
115e7(3): movsxd %ebx,%rax
115ea(5): mov 0x20(%rsp),%r11
115ef(4): add %rax,0x48(%r14)
115f3(5): mov 0x60(%rsp),%r10
115f8(3): mov %r11,%rdx
115fb(3): mov %r10,%rdi
115fe(5): call 0xffff4312(%rip)
11603(8): movzx 0xc8(%rsp),%edx
1160b(3): cmp $0x2,%dl
1160e(2): jz 0xffffffb3(%rip)
11610(3): cmp $0x15,%dl
11613(6): jz 0x214(%rip)
11619(5): mov 0x68(%rsp),%rdx
1161e(8): lea 0xb0(%rsp),%rdi
11626(6): mov $0x1,%r9d
1162c(3): mov %r11,%r8
1162f(2): mov %eax,%ecx
11631(b): mov $0x3,0xb0(%rsp)
1163c(8): mov %rdx,0xb8(%rsp)
11644(3): mov %r10,%rdx
11647(5): call 0xffffe779(%rip)
1164c(2): test %eax,%eax
1164e(2): jnz 0xffffff8d(%rip)
11650(5): mov 0x20(%rsp),%rdx
11655(3): mov %r14,%rsi
11658(3): mov %r15,%rdi
1165b(5): call 0xffff42b5(%rip)
11660(3): movsxd %eax,%rbx
11663(5): mov 0x10(%rsp),%rax
11668(7): mov 0xa0(%rsp),%esi
1166f(6): mov $0x0,%r9d
11675(7): cmp $0x1,0xb4(%rax)
1167c(3): lea 0xfffffffe(%rsi),%eax
1167f(4): cmovnl %r13,%r9
11683(3): and $0xfd,%eax
11686(6): jz 0x473(%rip)
1168c(8): mov 0xb0(%rsp),%r10d
11694(4): lea 0xfffffffe(%r10),%eax
11698(3): and $0xfd,%eax
1169b(6): jz 0x45e(%rip)
116a1(3): cmp $0x3,%esi
116a4(4): setz %r11b
116a8(6): jz 0x495(%rip)
116ae(4): cmp $0x3,%r10d
116b2(6): jz 0x457(%rip)
116b8(2): test %esi,%esi
116ba(6): jnz 0x36f(%rip)
116c0(8): movzx 0xa8(%rsp),%edx
116c8(3): test %r10d,%r10d
116cb(6): jnz 0x342(%rip)
116d1(9): movzx 0xb8(%rsp),%r8d
116da(2): test %esi,%esi
116dc(6): jz 0x2ea(%rip)
116e2(3): test %r11b,%r11b
116e5(6): jnz 0x2e1(%rip)
116eb(3): test %r9,%r9
116ee(7): mov 0xa8(%rsp),%edx
116f5(2): jz 0x1f(%rip)
116f7(3): mov %r8d,%edi
116fa(4): mov %edx,0x78(%rsp)
116fe(5): mov %r9,0x70(%rsp)
11703(5): call 0xffff046d(%rip)
11708(5): mov 0x70(%rsp),%r9
1170d(4): mov 0x78(%rsp),%edx
11711(3): mov %eax,%r8d
11714(3): cmp $0xff,%edx
11717(6): jz 0x416(%rip)
1171d(4): cmp $0xff,%r8d
11721(6): jz 0x40c(%rip)
11727(9): test $0x10000,0x20(%rsp)
11730(2): jz 0xb(%rip)
11732(3): cmp %edx,%r8d
11735(6): jb 0x3c4(%rip)
1173b(3): test %r9,%r9
1173e(2): jz 0x28(%rip)
11740(4): mov 0x40(%r9),%rax
11744(5): cmp 0x48(%rsp),%rax
11749(4): mov 0x8(%r9),%rcx
1174d(6): jz 0x416(%rip)
11753(3): mov %edx,0x0(%rcx,%rax,4)
11756(4): mov 0x10(%r9),%rcx
1175a(4): lea 0x1(%rax),%rsi
1175e(4): mov %rsi,0x40(%r9)
11762(4): mov %r8d,0x0(%rcx,%rax,4)
11766(2): xor %eax,%eax
11768(5): mov $0x1,%edi
1176d(2): cmp %eax,%edx
1176f(2): mov %eax,%ecx
11771(2): jnbe 0x18(%rip)
11773(3): cmp %eax,%r8d
11776(2): jb 0x13(%rip)
11778(3): mov %rax,%rsi
1177b(3): mov %rdi,%r11
1177e(4): sar $0x6,%rsi
11782(3): shl/sal %cl,%r11
11785(4): or %r11,0x0(%r12,%rsi,8)
11789(4): add $0x1,%rax
1178d(6): cmp $0x100,%rax
11793(2): jnz 0xffffffda(%rip)
11795(5): mov 0x40(%rsp),%rax
1179a(6): mov $0x0,(%rax)
117a0(5): jmp 0xfffffc80(%rip)
117a5(5): mov 0x18(%rsp),%rbx
117aa(3): mov %rax,%rdx
117ad(3): mov %r14,%rsi
117b0(4): mov %r8,(%rsp)
117b4(3): mov %rax,%r15
117b7(3): mov %rbx,%rdi
117ba(5): call 0xffffe866(%rip)
117bf(2): cwde 
117c1(4): add %rax,0x48(%r14)
117c5(5): mov 0x40(%rsp),%r9
117ca(4): mov (%rsp),%r8
117ce(3): mov %r15,%rcx
117d1(3): mov %rbx,%rdx
117d4(3): mov %rbp,%rsi
117d7(3): mov %r14,%rdi
117da(5): call 0xfffff006(%rip)
117df(5): mov %rax,0x28(%rsp)
117e4(5): jmp 0xfffff10c(%rip)
117e9(5): mov 0x40(%rsp),%rax
117ee(6): mov $0x2,(%rax)
117f4(5): jmp 0xfffffc64(%rip)
117f9(3): mov %r12,%rdi
117fc(5): call 0xffff0084(%rip)
11801(3): mov %r13,%rdi
11804(5): call 0xffff007c(%rip)
11809(5): jmp 0xfffffb3f(%rip)
1180e(5): mov 0x40(%rsp),%rax
11813(9): mov $0x0,0x28(%rsp)
1181c(6): mov $0x6,(%rax)
11822(5): jmp 0xfffff0ce(%rip)
11827(2): mov %ebx,%eax
11829(2): neg %eax
1182b(2): cwde 
1182d(4): add %rax,0x48(%r14)
11831(5): mov $0x1,0x8(%r15)
11836(7): mov 0xa0(%rsp),%eax
1183d(5): jmp 0xfffff8f8(%rip)
11842(4): add %rbx,0x48(%r14)
11846(5): cmp $0x0,0x57(%rsp)
1184b(2): jz 0x16(%rip)
1184d(5): lea 0x20(%r12),%rdx
11852(3): mov %r12,%rax
11855(3): not (%rax)
11858(4): add $0x8,%rax
1185c(3): cmp %rax,%rdx
1185f(2): jnz 0xfffffff6(%rip)
11861(5): mov 0x10(%rsp),%rax
11866(6): mov 0xb4(%rax),%edx
1186c(3): cmp $0x1,%edx
1186f(2): jle 0x1a(%rip)
11871(4): mov 0x78(%rax),%rcx
11875(2): xor %eax,%eax
11877(4): mov 0x0(%rcx,%rax,1),%rsi
1187b(4): and %rsi,0x0(%r12,%rax,1)
1187f(4): add $0x8,%rax
11883(4): cmp $0x20,%rax
11887(2): jnz 0xfffffff0(%rip)
11889(5): cmp $0x0,0x28(%r13)
1188e(6): jnz 0x8a(%rip)
11894(5): cmp $0x0,0x30(%r13)
11899(2): jnz 0x7f(%rip)
1189b(5): cmp $0x0,0x38(%r13)
118a0(2): jnz 0x78(%rip)
118a2(5): cmp $0x0,0x40(%r13)
118a7(2): jnz 0x71(%rip)
118a9(3): sub $0x1,%edx
118ac(2): jle 0x10(%rip)
118ae(5): cmp $0x0,0x48(%r13)
118b3(2): jnz 0x65(%rip)
118b5(5): test $0x1,0x20(%r13)
118ba(2): jnz 0x5e(%rip)
118bc(3): mov %r13,%rdi
118bf(5): call 0xffff5281(%rip)
118c4(5): mov 0x10(%rsp),%rax
118c9(8): lea 0xb0(%rsp),%r8
118d1(2): xor %ecx,%ecx
118d3(2): xor %edx,%edx
118d5(8): mov $0x3,0xb8(%rsp)
118dd(8): mov %r12,0xb0(%rsp)
118e5(7): lea 0x80(%rax),%rsi
118ec(4): lea 0x70(%rax),%rdi
118f0(5): call 0xffff67f0(%rip)
118f5(3): test %rax,%rax
118f8(5): mov %rax,0x28(%rsp)
118fd(6): jnz 0xfffff07f(%rip)
11903(5): mov 0x40(%rsp),%rax
11908(6): mov $0xc,(%rax)
1190e(5): jmp 0xfffffb4a(%rip)
11913(5): nop 0x0(%rax,%rax,1)
11918(5): mov 0x10(%rsp),%rax
1191d(8): lea 0xb0(%rsp),%r15
11925(2): xor %edx,%edx
11927(2): xor %ecx,%ecx
11929(3): mov %r15,%r8
1192c(7): or $0x2,0xb0(%rax)
11933(4): lea 0x70(%rax),%rbx
11937(7): lea 0x80(%rax),%rbp
1193e(8): mov $0x6,0xb8(%rsp)
11946(8): mov %r13,0xb0(%rsp)
1194e(3): mov %rbx,%rdi
11951(3): mov %rbp,%rsi
11954(5): call 0xffff678c(%rip)
11959(3): mov %rax,%rdi
1195c(5): mov %rax,0x28(%rsp)
11961(5): lea 0x20(%r12),%rdx
11966(3): test %rdi,%rdi
11969(3): mov %r12,%rax
1196c(2): jz 0xffffff97(%rip)
1196e(4): cmp $0x0,(%rax)
11972(6): jnz 0x2ab(%rip)
11978(4): add $0x8,%rax
1197c(3): cmp %rax,%rdx
1197f(2): jnz 0xffffffef(%rip)
11981(3): mov %r12,%rdi
11984(5): call 0xfffefefc(%rip)
11989(5): jmp 0xffffeff3(%rip)
1198e(5): mov 0x30(%rsp),%rdx
11993(5): lea 0x1(%rdx,%rdx,1),%rdi
11998(8): lea 0x0(,%rdi,4),%rsi
119a0(5): mov %rdi,0x30(%rsp)
119a5(3): mov %rax,%rdi
119a8(5): call 0xffff0188(%rip)
119ad(3): test %rax,%rax
119b0(6): jz 0xffffff53(%rip)
119b6(4): mov %rax,0x0(%r13)
119ba(4): mov 0x28(%r13),%rdx
119be(5): jmp 0xfffffadc(%rip)
119c3(3): xor %r8d,%r8d
119c6(3): test %r9,%r9
119c9(2): jz 0x7b(%rip)
119cb(2): mov %edx,%edi
119cd(5): mov %r8d,0x78(%rsp)
119d2(5): mov %r9,0x70(%rsp)
119d7(5): call 0xffff0199(%rip)
119dc(2): mov %eax,%edx
119de(7): mov 0xb0(%rsp),%eax
119e5(5): mov 0x70(%rsp),%r9
119ea(5): mov 0x78(%rsp),%r8d
119ef(3): cmp $0x3,%eax
119f2(6): jz 0xfffffd05(%rip)
119f8(2): test %eax,%eax
119fa(6): jz 0xfffffcfd(%rip)
11a00(8): mov 0xb8(%rsp),%r8d
11a08(5): jmp 0xfffffd0c(%rip)
11a0d(4): cmp $0x3,%r10d
11a11(6): jz 0x291(%rip)
11a17(2): test %esi,%esi
11a19(2): jz 0xffffffaa(%rip)
11a1b(3): test %r11b,%r11b
11a1e(2): jnz 0xffffffa5(%rip)
11a20(7): mov 0xa8(%rsp),%edx
11a27(2): jmp 0xffffffd9(%rip)
11a29(2): xor %edx,%edx
11a2b(3): cmp $0x3,%esi
11a2e(6): jnz 0xfffffc9a(%rip)
11a34(8): mov 0xa8(%rsp),%rax
11a3c(3): movzx (%rax),%edx
11a3f(5): jmp 0xfffffc89(%rip)
11a44(3): test %r10d,%r10d
11a47(6): jz 0xfffffce0(%rip)
11a4d(4): cmp $0x3,%r10d
11a51(2): jnz 0xffffffaf(%rip)
11a53(5): jmp 0xfffffcd4(%rip)
11a58(5): mov $0x80,%ebx
11a5d(6): mov $0x2,%r12d
11a63(5): call 0xffff020d(%rip)
11a68(3): movsxd %ebx,%rdx
11a6b(3): movsxd %r12d,%r9
11a6e(6): mov $0x1,%r8d
11a74(3): add %rdx,%rdx
11a77(3): add (%rax),%rdx
11a7a(5): mov 0x10(%rsp),%rax
11a7f(4): lea 0x0(%rax,%r9,8),%rdi
11a83(2): xor %eax,%eax
11a85(2): jmp 0x1d(%rip)
11a87(9): nop 0x0(%rax,%rax,1)
11a90(3): lea 0x0(%rbx,%rax,1),%esi
11a93(3): cmp $0x5f,%esi
11a96(2): jz 0x14(%rip)
11a98(4): add $0x1,%rax
11a9c(4): cmp $0x40,%rax
11aa0(2): jz 0x19(%rip)
11aa2(4): test $0x8,0x0(%rdx,%rax,2)
11aa6(2): mov %eax,%ecx
11aa8(2): jz 0xffffffe8(%rip)
11aaa(3): mov %r8,%rsi
11aad(3): shl/sal %cl,%rsi
11ab0(7): or %rsi,0xb8(%rdi)
11ab7(2): jmp 0xffffffe1(%rip)
11ab9(4): add $0x1,%r9
11abd(3): add $0x40,%ebx
11ac0(4): sub $0xffffff80,%rdx
11ac4(4): add $0x8,%rdi
11ac8(4): cmp $0x3,%r9d
11acc(2): jle 0xffffffb7(%rip)
11ace(5): jmp 0xfffff443(%rip)
11ad3(2): xor %ebx,%ebx
11ad5(3): xor %r12d,%r12d
11ad8(2): jmp 0xffffff8b(%rip)
11ada(7): lea 0x3a2f(%rip),%rcx
11ae1(7): lea 0x3458(%rip),%rsi
11ae8(7): lea 0x34a0(%rip),%rdi
11aef(5): mov $0xced,%edx
11af4(5): call 0xfffeff0c(%rip)
11af9(5): mov 0x40(%rsp),%rax
11afe(6): mov $0xb,(%rax)
11b04(5): jmp 0xfffff954(%rip)
11b09(8): mov 0xb8(%rsp),%rdi
11b11(2): xor %eax,%eax
11b13(4): or $0xffffffff,%rcx
11b17(2): REPNZ scasb rdi(%es,10),%al
11b19(3): mov %rcx,%rax
11b1c(3): not %rax
11b1f(4): sub $0x1,%rax
11b23(4): cmp $0x1,%rax
11b27(6): jbe 0xfffffb91(%rip)
11b2d(5): mov 0x40(%rsp),%rax
11b32(6): mov $0x3,(%rax)
11b38(5): jmp 0xfffff920(%rip)
11b3d(8): mov 0xa8(%rsp),%rdi
11b45(2): xor %eax,%eax
11b47(4): or $0xffffffff,%rcx
11b4b(2): REPNZ scasb rdi(%es,10),%al
11b4d(3): mov %rcx,%rax
11b50(3): not %rax
11b53(4): sub $0x1,%rax
11b57(4): cmp $0x1,%rax
11b5b(6): jbe 0xfffffb53(%rip)
11b61(2): jmp 0xffffffcc(%rip)
11b63(5): mov 0x48(%rsp),%rax
11b68(3): mov %rcx,%rdi
11b6b(8): mov %r8d,0x8c(%rsp)
11b73(7): mov %edx,0x88(%rsp)
11b7a(5): mov %r9,0x70(%rsp)
11b7f(3): add %rax,%rax
11b82(4): add $0x1,%rax
11b86(8): lea 0x0(,%rax,4),%r10
11b8e(5): mov %rax,0x48(%rsp)
11b93(3): mov %r10,%rsi
11b96(8): mov %r10,0x80(%rsp)
11b9e(5): call 0xfffeff92(%rip)
11ba3(5): mov 0x70(%rsp),%r9
11ba8(8): mov 0x80(%rsp),%r10
11bb0(5): mov %rax,0x78(%rsp)
11bb5(4): mov 0x10(%r9),%rdi
11bb9(3): mov %r10,%rsi
11bbc(5): call 0xfffeff74(%rip)
11bc1(5): mov 0x78(%rsp),%rcx
11bc6(3): test %rcx,%rcx
11bc9(2): jz 0x2c(%rip)
11bcb(3): test %rax,%rax
11bce(5): mov 0x70(%rsp),%r9
11bd3(7): mov 0x88(%rsp),%edx
11bda(8): mov 0x8c(%rsp),%r8d
11be2(2): jz 0x13(%rip)
11be4(4): mov %rax,0x10(%r9)
11be8(4): mov %rcx,0x8(%r9)
11bec(4): mov 0x40(%r9),%rax
11bf0(5): jmp 0xfffffb63(%rip)
11bf5(3): mov %rcx,%rdi
11bf8(4): mov %rax,(%rsp)
11bfc(5): call 0xfffefc84(%rip)
11c01(4): mov (%rsp),%rax
11c05(3): mov %rax,%rdi
11c08(5): call 0xfffefc78(%rip)
11c0d(5): mov 0x40(%rsp),%rax
11c12(6): mov $0xc,(%rax)
11c18(5): jmp 0xfffff840(%rip)
11c1d(2): xor %ecx,%ecx
11c1f(2): xor %edx,%edx
11c21(3): mov %r15,%r8
11c24(3): mov %rbp,%rsi
11c27(3): mov %rbx,%rdi
11c2a(8): mov $0x3,0xb8(%rsp)
11c32(8): mov %r12,0xb0(%rsp)
11c3a(5): call 0xffff64a6(%rip)
11c3f(3): test %rax,%rax
11c42(6): jz 0xfffffcc1(%rip)
11c48(5): mov 0x28(%rsp),%rcx
11c4d(8): lea 0xc0(%rsp),%r8
11c55(3): mov %rax,%rdx
11c58(3): mov %rbp,%rsi
11c5b(3): mov %rbx,%rdi
11c5e(8): mov $0xa,0xc8(%rsp)
11c66(5): call 0xffff647a(%rip)
11c6b(3): test %rax,%rax
11c6e(5): mov %rax,0x28(%rsp)
11c73(6): jnz 0xffffed09(%rip)
11c79(5): jmp 0xfffffc8a(%rip)
11c7e(5): call 0xfffefd12(%rip)
11c83(5): mov 0x18(%rsp),%rax
11c88(4): cmp $0x2,0x8(%rax)
11c8c(6): jnz 0xfffff1f4(%rip)
11c92(5): mov 0x40(%rsp),%rax
11c97(6): mov $0x9,(%rax)
11c9d(5): jmp 0xfffff1ee(%rip)
11ca2(8): mov 0xb8(%rsp),%rax
11caa(4): movzx (%rax),%r8d
11cae(5): jmp 0xfffffa2c(%rip)

"parse_branch" :
11cc0(2): push %r15
11cc2(2): push %r14
11cc4(3): mov %rcx,%r15
11cc7(2): push %r13
11cc9(2): push %r12
11ccb(3): mov %rsi,%r13
11cce(1): push %rbp
11ccf(1): push %rbx
11cd0(3): mov %r9,%rbx
11cd3(3): mov %rdx,%rbp
11cd6(3): mov %r8,%r12
11cd9(4): sub $0x48,%rsp
11cdd(9): mov $0x28,%rax
11ce6(5): mov %rax,0x38(%rsp)
11ceb(2): xor %eax,%eax
11ced(3): mov (%rsi),%rax
11cf0(4): mov %rdi,(%rsp)
11cf4(5): mov %rax,0x10(%rsp)
11cf9(5): call 0xffffeae7(%rip)
11cfe(2): mov (%rbx),%edx
11d00(3): mov %rax,%r14
11d03(2): test %edx,%edx
11d05(2): jz 0xb(%rip)
11d07(3): test %rax,%rax
11d0a(6): jz 0x100(%rip)
11d10(5): lea 0x20(%rsp),%rax
11d15(5): mov %rax,0x18(%rsp)
11d1a(6): nop 0x0(%rax,%rax,1)
11d20(4): movzx 0x8(%rbp),%eax
11d24(2): mov %eax,%edx
11d26(3): and $0xf7,%edx
11d29(3): cmp $0x2,%dl
11d2c(6): jz 0x94(%rip)
11d32(2): cmp $0x9,%al
11d34(2): jnz 0xb(%rip)
11d36(3): test %r12,%r12
11d39(6): jnz 0x87(%rip)
11d3f(4): mov (%rsp),%rdi
11d43(3): mov %rbx,%r9
11d46(3): mov %r12,%r8
11d49(3): mov %r15,%rcx
11d4c(3): mov %rbp,%rdx
11d4f(3): mov %r13,%rsi
11d52(5): call 0xffffea8e(%rip)
11d57(3): mov %rax,%r9
11d5a(2): mov (%rbx),%eax
11d5c(2): test %eax,%eax
11d5e(2): jz 0xb(%rip)
11d60(3): test %r9,%r9
11d63(6): jz 0x91(%rip)
11d69(3): test %r14,%r14
11d6c(2): jz 0x7c(%rip)
11d6e(3): test %r9,%r9
11d71(2): jz 0x77(%rip)
11d73(5): mov 0x10(%rsp),%rax
11d78(5): mov 0x18(%rsp),%r8
11d7d(3): mov %r9,%rcx
11d80(3): mov %r14,%rdx
11d83(5): mov %r9,0x8(%rsp)
11d88(5): mov $0x10,0x28(%rsp)
11d8d(7): lea 0x80(%rax),%rsi
11d94(4): lea 0x70(%rax),%rdi
11d98(5): call 0xffff6348(%rip)
11d9d(3): test %rax,%rax
11da0(5): mov 0x8(%rsp),%r9
11da5(2): jz 0x6b(%rip)
11da7(3): mov %rax,%r14
11daa(4): movzx 0x8(%rbp),%eax
11dae(2): mov %eax,%edx
11db0(3): and $0xf7,%edx
11db3(3): cmp $0x2,%dl
11db6(6): jnz 0xffffff7c(%rip)
11dbc(4): nop 0x0(%rax)
11dc0(5): mov 0x38(%rsp),%rcx
11dc5(9): xor $0x28,%rcx
11dce(3): mov %r14,%rax
11dd1(2): jnz 0x6c(%rip)
11dd3(4): add $0x48,%rsp
11dd7(1): pop %rbx
11dd8(1): pop %rbp
11dd9(2): pop %r12
11ddb(2): pop %r13
11ddd(2): pop %r14
11ddf(2): pop %r15
11de1(1): ret near (%rsp)
11de2(6): nop 0x0(%rax,%rax,1)
11de8(3): test %r14,%r14
11deb(4): cmove %r9,%r14
11def(5): jmp 0xffffff31(%rip)
11df4(3): test %r14,%r14
11df7(2): jz 0x13(%rip)
11df9(7): lea 0xffff4da0(%rip),%rsi
11e00(2): xor %edx,%edx
11e02(3): mov %r14,%rdi
11e05(5): call 0xffff3efb(%rip)
11e0a(3): xor %r14d,%r14d
11e0d(2): jmp 0xffffffb3(%rip)
11e0f(1): nop 
11e10(7): lea 0xffff4d89(%rip),%rsi
11e17(3): mov %r9,%rdi
11e1a(2): xor %edx,%edx
11e1c(5): call 0xffff3ee4(%rip)
11e21(7): lea 0xffff4d78(%rip),%rsi
11e28(3): mov %r14,%rdi
11e2b(2): xor %edx,%edx
11e2d(3): xor %r14d,%r14d
11e30(5): call 0xffff3ed0(%rip)
11e35(6): mov $0xc,(%rbx)
11e3b(2): jmp 0xffffff85(%rip)
11e3d(5): call 0xfffefb53(%rip)

"parse_reg_exp" :
11e50(2): push %r15
11e52(2): push %r14
11e54(3): mov %rcx,%r14
11e57(2): push %r13
11e59(2): push %r12
11e5b(3): mov %r9,%r13
11e5e(1): push %rbp
11e5f(1): push %rbx
11e60(3): mov %rdx,%rbp
11e63(3): mov %rdi,%r12
11e66(4): sub $0x58,%rsp
11e6a(3): mov (%rsi),%rbx
11e6d(9): mov $0x28,%rax
11e76(5): mov %rax,0x48(%rsp)
11e7b(2): xor %eax,%eax
11e7d(5): mov %rsi,0x28(%rsp)
11e82(5): mov %r8,0x10(%rsp)
11e87(7): mov 0xa8(%rbx),%rax
11e8e(5): mov %rax,0x20(%rsp)
11e93(5): call 0xfffffe2d(%rip)
11e98(4): mov 0x0(%r13),%edx
11e9c(3): mov %rax,%r15
11e9f(2): test %edx,%edx
11ea1(2): jz 0xb(%rip)
11ea3(3): test %rax,%rax
11ea6(6): jz 0xec(%rip)
11eac(5): lea 0x30(%rsp),%rax
11eb1(5): mov %rax,0x8(%rsp)
11eb6(5): jmp 0x8e(%rip)
11ebb(5): nop 0x0(%rax,%rax,1)
11ec0(2): cmp $0x9,%al
11ec2(2): jnz 0xe(%rip)
11ec4(6): cmp $0x0,0x10(%rsp)
11eca(6): jnz 0xae(%rip)
11ed0(7): mov 0xa8(%rbx),%rax
11ed7(5): mov 0x10(%rsp),%r8
11edc(3): mov %r14,%rcx
11edf(5): mov 0x28(%rsp),%rsi
11ee4(3): mov %r13,%r9
11ee7(3): mov %rbp,%rdx
11eea(3): mov %r12,%rdi
11eed(5): mov %rax,0x18(%rsp)
11ef2(5): mov 0x20(%rsp),%rax
11ef7(7): mov %rax,0xa8(%rbx)
11efe(5): call 0xfffffdc2(%rip)
11f03(3): mov %rax,%rcx
11f06(4): mov 0x0(%r13),%eax
11f0a(2): test %eax,%eax
11f0c(2): jz 0x7(%rip)
11f0e(3): test %rcx,%rcx
11f11(2): jz 0x6b(%rip)
11f13(5): mov 0x18(%rsp),%rax
11f18(7): or %rax,0xa8(%rbx)
11f1f(5): mov 0x8(%rsp),%r8
11f24(7): lea 0x80(%rbx),%rsi
11f2b(4): lea 0x70(%rbx),%rdi
11f2f(3): mov %r15,%rdx
11f32(5): mov $0xa,0x38(%rsp)
11f37(5): call 0xffff61a9(%rip)
11f3c(3): test %rax,%rax
11f3f(3): mov %rax,%r15
11f42(2): jz 0x7e(%rip)
11f44(4): cmp $0xa,0x8(%rbp)
11f48(2): jnz 0x50(%rip)
11f4a(3): mov %r14,%rdx
11f4d(3): mov %r12,%rsi
11f50(3): mov %rbp,%rdi
11f53(7): or $0x800000,%rdx
11f5a(5): call 0xffffe0c6(%rip)
11f5f(2): cwde 
11f61(5): add %rax,0x48(%r12)
11f66(4): movzx 0x8(%rbp),%eax
11f6a(2): mov %eax,%edx
11f6c(3): and $0xf7,%edx
11f6f(3): cmp $0x2,%dl
11f72(6): jnz 0xffffff4e(%rip)
11f78(2): xor %ecx,%ecx
11f7a(2): jmp 0xffffffa5(%rip)
11f7c(3): test %r15,%r15
11f7f(2): jz 0x13(%rip)
11f81(7): lea 0xffff4c18(%rip),%rsi
11f88(2): xor %edx,%edx
11f8a(3): mov %r15,%rdi
11f8d(5): call 0xffff3d73(%rip)
11f92(3): xor %r15d,%r15d
11f95(3): nop (%rax)
11f98(5): mov 0x48(%rsp),%rcx
11f9d(9): xor $0x28,%rcx
11fa6(3): mov %r15,%rax
11fa9(2): jnz 0x21(%rip)
11fab(4): add $0x58,%rsp
11faf(1): pop %rbx
11fb0(1): pop %rbp
11fb1(2): pop %r12
11fb3(2): pop %r13
11fb5(2): pop %r14
11fb7(2): pop %r15
11fb9(1): ret near (%rsp)
11fba(6): nop 0x0(%rax,%rax,1)
11fc0(8): mov $0xc,0x0(%r13)
11fc8(2): jmp 0xffffffd0(%rip)
11fca(5): call 0xfffef9c6(%rip)

"re_compile_internal" :
11fd0(2): push %r15
11fd2(2): push %r14
11fd4(2): push %r13
11fd6(2): push %r12
11fd8(1): push %rbp
11fd9(1): push %rbx
11fda(7): sub $0x128,%rsp
11fe1(4): mov %rcx,0x18(%rdi)
11fe5(8): mov $0x0,0x10(%rdi)
11fed(9): mov $0x28,%rax
11ff6(8): mov %rax,0x118(%rsp)
11ffe(2): xor %eax,%eax
12000(4): movzx 0x38(%rdi),%eax
12004(5): mov %rdi,0x8(%rsp)
12009(5): mov %rsi,0x10(%rsp)
1200e(4): mov %rdx,(%rsp)
12012(5): mov %rcx,0x18(%rsp)
12017(8): mov $0x0,0x4c(%rsp)
1201f(8): mov $0x0,0x30(%rdi)
12027(3): mov (%rdi),%rbx
1202a(4): mov %al,0x20(%rsp)
1202e(3): and $0x90,%eax
12031(8): cmp $0xe7,0x8(%rdi)
12039(3): mov %al,0x38(%rdi)
1203c(6): jbe 0xdfa(%rip)
12042(4): lea 0x8(%rbx),%rdi
12046(5): mov 0x8(%rsp),%rax
1204b(3): mov %rbx,%rcx
1204e(4): and $0xfffffff8,%rdi
12052(3): sub %rdi,%rcx
12055(8): mov $0xe8,0x10(%rax)
1205d(2): xor %eax,%eax
1205f(6): add $0xe8,%ecx
12065(7): mov $0x0,(%rbx)
1206c(b): mov $0x0,0xe0(%rbx)
12077(3): shr $0x3,%ecx
1207a(3): REP stosd %rax,rdi(%es,10)
1207d(a): mov $0x384307168202282324,%rax
12087(a): mov $0xf,0x80(%rbx)
12091(4): cmp %rax,(%rsp)
12095(6): jnbe 0x641(%rip)
1209b(4): mov (%rsp),%r14
1209f(4): lea 0x1(%r14),%rax
120a3(3): mov %rax,%rdi
120a6(4): mov %rax,0x8(%rbx)
120aa(5): mov %rax,0x28(%rsp)
120af(4): shl/sal $0x4,%rdi
120b3(5): call 0xfffefa0d(%rip)
120b8(3): test %r14,%r14
120bb(3): mov %rax,(%rbx)
120be(6): jz 0xce7(%rip)
120c4(5): mov $0x1,%esi
120c9(7): nop 0x0(%rax)
120d0(3): add %rsi,%rsi
120d3(4): cmp %rsi,(%rsp)
120d7(2): jnb 0xfffffff9(%rip)
120d9(4): lea 0xffffffff(%rsi),%rbp
120dd(5): mov $0x18,%edi
120e2(5): call 0xfffef98e(%rip)
120e7(7): mov %rbp,0x88(%rbx)
120ee(4): mov %rax,0x40(%rbx)
120f2(5): call 0xfffef87e(%rip)
120f7(5): mov $0xe,%edi
120fc(6): mov %eax,0xb4(%rbx)
12102(5): call 0xfffef9ee(%rip)
12107(3): movzx (%rax),%edx
1210a(3): and $0xdf,%edx
1210d(3): cmp $0x55,%dl
12110(2): jnz 0x50(%rip)
12112(4): movzx 0x1(%rax),%edx
12116(3): and $0xdf,%edx
12119(3): cmp $0x54,%dl
1211c(2): jnz 0x44(%rip)
1211e(4): movzx 0x2(%rax),%edx
12122(3): and $0xdf,%edx
12125(3): cmp $0x46,%dl
12128(2): jnz 0x38(%rip)
1212a(2): xor %edx,%edx
1212c(4): cmp $0x2d,0x3(%rax)
12130(7): lea 0x2eaf(%rip),%rdi
12137(5): mov $0x2,%ecx
1213c(3): setz %dl
1213f(5): lea 0x3(%rax,%rdx,1),%rsi
12144(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
12146(3): setnbe %al
12149(2): sbb $0x0,%al
1214b(2): test %al,%al
1214d(2): jnz 0x13(%rip)
1214f(7): or $0x4,0xb0(%rbx)
12156(a): nop 0x0(%rax,%rax,1)
12160(7): movzx 0xb0(%rbx),%eax
12167(2): mov %eax,%edx
12169(3): and $0xf7,%edx
1216c(7): cmp $0x1,0xb4(%rbx)
12173(6): mov %dl,0xb0(%rbx)
12179(2): jle 0x15(%rip)
1217b(2): test $0x4,%al
1217d(6): jz 0x566(%rip)
12183(7): lea 0x33b6(%rip),%rax
1218a(4): mov %rax,0x78(%rbx)
1218e(4): cmp $0x0,(%rbx)
12192(6): jz 0x544(%rip)
12198(5): cmp $0x0,0x40(%rbx)
1219d(6): jz 0x539(%rip)
121a3(5): mov 0x18(%rsp),%rax
121a8(8): lea 0x80(%rsp),%rbp
121b0(5): mov $0x12,%ecx
121b5(8): mov $0x0,0x4c(%rsp)
121bd(4): lea 0x8(%rbp),%r8
121c1(5): and $0x400000,%eax
121c6(5): mov %rax,0x20(%rsp)
121cb(5): mov 0x8(%rsp),%rax
121d0(3): setnz %dl
121d3(3): mov %r8,%rdi
121d6(4): mov 0x28(%rax),%rsi
121da(2): xor %eax,%eax
121dc(3): REP stosd %rax,rdi(%es,10)
121df(5): mov 0x10(%rsp),%rax
121e4(4): mov (%rsp),%rdi
121e8(3): test %rsi,%rsi
121eb(7): mov %dl,0x108(%rsp)
121f2(6): mov 0xb4(%rbx),%ecx
121f8(4): setnz %r12b
121fc(8): mov %rsi,0xf8(%rsp)
12204(8): mov %rax,0x80(%rsp)
1220c(7): movzx 0xb0(%rbx),%eax
12213(3): or %edx,%r12d
12216(8): mov %rdi,0xd8(%rsp)
1221e(8): mov %rdi,0xd0(%rsp)
12226(3): mov %r12d,%esi
12229(8): mov %r12b,0x10b(%rsp)
12231(7): mov %ecx,0x110(%rsp)
12238(8): mov %rdi,0xe8(%rsp)
12240(8): mov %rdi,0xe0(%rsp)
12248(2): mov %eax,%edx
1224a(3): shr $0x3,%al
1224d(3): shr $0x2,%dl
12250(3): and $0x1,%eax
12253(3): and $0x1,%edx
12256(3): test %rdi,%rdi
12259(7): mov %al,0x10a(%rsp)
12260(7): mov %dl,0x109(%rsp)
12267(6): jnz 0x43e(%rip)
1226d(3): test %sil,%sil
12270(2): jz 0xf(%rip)
12272(8): mov 0x88(%rsp),%rax
1227a(5): mov %rax,0x10(%rsp)
1227f(6): cmp $0x0,0x20(%rsp)
12285(5): mov 0x10(%rsp),%rax
1228a(8): mov %rax,0x88(%rsp)
12292(6): jz 0x103(%rip)
12298(3): cmp $0x1,%ecx
1229b(6): jle 0xbf2(%rip)
122a1(3): mov %rbp,%rdi
122a4(5): call 0xffff409c(%rip)
122a9(2): test %eax,%eax
122ab(2): jnz 0x45(%rip)
122ad(4): mov (%rsp),%rax
122b1(8): cmp 0xb8(%rsp),%rax
122b9(6): jle 0xbb7(%rip)
122bf(7): movsxd 0xb4(%rbx),%rax
122c6(8): mov 0xc0(%rsp),%rsi
122ce(8): add 0xb0(%rsp),%rax
122d6(3): cmp %rax,%rsi
122d9(6): jnle 0xb97(%rip)
122df(3): add %rsi,%rsi
122e2(3): mov %rbp,%rdi
122e5(5): call 0xffff3aeb(%rip)
122ea(2): test %eax,%eax
122ec(2): jz 0xffffffb5(%rip)
122ee(2): nop 
122f0(4): mov %eax,0x4c(%rsp)
122f4(5): mov 0x8(%rsp),%rax
122f9(3): mov (%rax),%r13
122fc(4): mov 0x70(%r13),%rdi
12300(3): test %rdi,%rdi
12303(2): jz 0x15(%rip)
12305(3): nop (%rax)
12308(3): mov (%rdi),%r12
1230b(5): call 0xfffef575(%rip)
12310(3): test %r12,%r12
12313(3): mov %r12,%rdi
12316(2): jnz 0xfffffff2(%rip)
12318(4): mov 0x20(%r13),%rdi
1231c(8): mov $0x0,0x70(%r13)
12324(b): mov $0xf,0x80(%r13)
1232f(8): mov $0x0,0x68(%r13)
12337(5): call 0xfffef549(%rip)
1233c(8): mov $0x0,0x20(%r13)
12344(3): mov %rbp,%rdi
12347(5): call 0xffff4dc9(%rip)
1234c(3): mov %rbx,%rdi
1234f(5): call 0xffff4e01(%rip)
12354(5): mov 0x8(%rsp),%rax
12359(7): mov $0x0,(%rax)
12360(8): mov $0x0,0x8(%rax)
12368(4): mov 0x4c(%rsp),%eax
1236c(8): mov 0x118(%rsp),%rbx
12374(9): xor $0x28,%rbx
1237d(6): jnz 0xd43(%rip)
12383(7): add $0x128,%rsp
1238a(1): pop %rbx
1238b(1): pop %rbp
1238c(2): pop %r12
1238e(2): pop %r13
12390(2): pop %r14
12392(2): pop %r15
12394(1): ret near (%rsp)
12395(3): cmp $0x1,%ecx
12398(6): jnle 0x9b2(%rip)
1239e(3): test %r12b,%r12b
123a1(8): mov 0xc0(%rsp),%rsi
123a9(6): jz 0x61b(%rip)
123af(8): cmp %rsi,0xd8(%rsp)
123b7(8): mov 0xb0(%rsp),%rax
123bf(9): cmovng 0xd8(%rsp),%rsi
123c8(3): cmp %rax,%rsi
123cb(2): jnle 0x12(%rip)
123cd(2): jmp 0x43(%rip)
123cf(1): nop 
123d0(8): mov 0x88(%rsp),%rdx
123d8(5): mov %rdx,0x10(%rsp)
123dd(8): mov 0x80(%rsp),%rdx
123e5(8): mov 0xf8(%rsp),%rcx
123ed(3): add %rax,%rdx
123f0(8): add 0xa8(%rsp),%rdx
123f8(3): movzx (%rdx),%edx
123fb(4): movzx 0x0(%rcx,%rdx,1),%edx
123ff(5): mov 0x10(%rsp),%rcx
12404(3): mov %dl,0x0(%rcx,%rax,1)
12407(4): add $0x1,%rax
1240b(3): cmp %rax,%rsi
1240e(2): jnz 0xffffffc2(%rip)
12410(8): mov %rax,0xb0(%rsp)
12418(8): mov %rax,0xb8(%rsp)
12420(8): mov $0x0,0x4c(%rsp)
12428(5): mov 0x8(%rsp),%r12
1242d(5): mov 0x18(%rsp),%r14
12432(5): lea 0x50(%rsp),%r13
12437(3): mov %rbp,%rsi
1243a(3): mov %r13,%rdi
1243d(5): mov %r13,0x28(%rsp)
12442(4): mov (%r12),%r15
12446(3): mov %r14,%rdx
12449(9): mov $0x0,0x30(%r12)
12452(7): or $0x800000,%rdx
12459(7): mov %r14,0xd8(%r15)
12460(5): call 0xffffdbc0(%rip)
12465(5): lea 0x4c(%rsp),%r9
1246a(3): xor %r8d,%r8d
1246d(3): mov %r14,%rcx
12470(3): mov %r13,%rdx
12473(3): mov %r12,%rsi
12476(3): mov %rbp,%rdi
12479(2): cwde 
1247b(8): add %rax,0xc8(%rsp)
12483(5): call 0xfffff9cd(%rip)
12488(4): mov 0x4c(%rsp),%ecx
1248c(2): test %ecx,%ecx
1248e(6): jnz 0xa29(%rip)
12494(4): lea 0x70(%r15),%r13
12498(5): lea 0x60(%rsp),%r12
1249d(4): sub $0xffffff80,%r15
124a1(2): xor %edx,%edx
124a3(2): xor %ecx,%ecx
124a5(3): mov %r15,%rsi
124a8(3): mov %r12,%r8
124ab(3): mov %r13,%rdi
124ae(4): mov %rax,(%rsp)
124b2(5): mov $0x2,0x68(%rsp)
124b7(5): call 0xffff5c29(%rip)
124bc(4): mov (%rsp),%r9
124c0(3): mov %rax,%r11
124c3(3): mov %rax,%rdx
124c6(3): test %r9,%r9
124c9(2): jz 0x29(%rip)
124cb(3): mov %r11,%rcx
124ce(3): mov %r9,%rdx
124d1(3): mov %r12,%r8
124d4(3): mov %r15,%rsi
124d7(3): mov %r13,%rdi
124da(4): mov %r11,(%rsp)
124de(5): mov $0x10,0x68(%rsp)
124e3(5): call 0xffff5bfd(%rip)
124e8(4): mov (%rsp),%r11
124ec(3): mov %r11,%rdx
124ef(3): mov %rax,%r11
124f2(3): test %rdx,%rdx
124f5(5): mov 0x8(%rsp),%rcx
124fa(3): setz %dl
124fd(3): test %r11,%r11
12500(3): setz %al
12503(2): or %al,%dl
12505(3): mov (%rcx),%r13
12508(6): jnz 0x99a(%rip)
1250e(4): mov 0x8(%r13),%r15
12512(4): mov %r11,0x68(%rbx)
12516(8): lea 0x0(,%r15,8),%rcx
1251e(4): lea 0x0(%r15,%r15,2),%r15
12522(3): mov %rcx,%rdi
12525(4): mov %rcx,(%rsp)
12529(4): shl/sal $0x3,%r15
1252d(5): call 0xfffef593(%rip)
12532(4): mov (%rsp),%rcx
12536(4): mov %rax,0x18(%r13)
1253a(5): mov %rax,0x18(%rsp)
1253f(3): mov %rcx,%rdi
12542(5): call 0xfffef57e(%rip)
12547(3): mov %r15,%rdi
1254a(4): mov %rax,0x20(%r13)
1254e(5): mov %rax,0x10(%rsp)
12553(5): call 0xfffef56d(%rip)
12558(3): mov %r15,%rdi
1255b(4): mov %rax,0x28(%r13)
1255f(4): mov %rax,(%rsp)
12563(5): call 0xfffef55d(%rip)
12568(5): mov 0x18(%rsp),%rdx
1256d(4): mov %rax,0x30(%r13)
12571(4): mov (%rsp),%rsi
12575(5): mov 0x10(%rsp),%rcx
1257a(3): test %rdx,%rdx
1257d(6): jz 0x7c0(%rip)
12583(3): test %rcx,%rcx
12586(6): jz 0x7b7(%rip)
1258c(3): test %rsi,%rsi
1258f(6): jz 0x7ae(%rip)
12595(3): test %rax,%rax
12598(6): jz 0x7a5(%rip)
1259e(5): mov 0x8(%rsp),%rax
125a3(4): mov 0x30(%rax),%r15
125a7(8): lea 0x0(,%r15,8),%rdi
125af(5): call 0xfffef511(%rip)
125b4(3): test %rax,%rax
125b7(7): mov %rax,0xe0(%r13)
125be(2): jz 0x6f(%rip)
125c0(3): test %r15,%r15
125c3(2): jz 0x1a(%rip)
125c5(2): xor %edx,%edx
125c7(9): nop 0x0(%rax,%rax,1)
125d0(4): mov %rdx,0x0(%rax,%rdx,8)
125d4(4): add $0x1,%rdx
125d8(3): cmp %r15,%rdx
125db(2): jnz 0xfffffff5(%rip)
125dd(4): mov 0x68(%r13),%rdi
125e1(7): lea 0xffff4ff8(%rip),%rsi
125e8(3): mov %r13,%rdx
125eb(5): call 0xffff3785(%rip)
125f0(5): mov 0x8(%rsp),%rax
125f5(7): mov 0xe0(%r13),%rdi
125fc(4): mov 0x30(%rax),%rdx
12600(3): test %rdx,%rdx
12603(6): jz 0x8f1(%rip)
12609(3): mov (%rdi),%rax
1260c(3): test %rax,%rax
1260f(2): jz 0xf(%rip)
12611(2): jmp 0x1c(%rip)
12613(5): nop 0x0(%rax,%rax,1)
12618(4): cmp %rax,0x0(%rdi,%rax,8)
1261c(2): jnz 0x11(%rip)
1261e(4): add $0x1,%rax
12622(3): cmp %rax,%rdx
12625(2): jnbe 0xfffffff3(%rip)
12627(6): jz 0x8cd(%rip)
1262d(4): mov 0x68(%r13),%rdi
12631(5): mov 0x8(%rsp),%rdx
12636(7): lea 0xffff5ea3(%rip),%rsi
1263d(5): call 0xffff36c3(%rip)
12642(2): test %eax,%eax
12644(6): jnz 0xfffffcac(%rip)
1264a(4): mov 0x68(%r13),%rdi
1264e(7): lea 0xffff83fb(%rip),%rsi
12655(3): mov %r13,%rdx
12658(5): call 0xffff36a8(%rip)
1265d(2): test %eax,%eax
1265f(6): jnz 0xfffffc91(%rip)
12665(4): mov 0x68(%r13),%rdi
12669(7): lea 0xffff5000(%rip),%rsi
12670(3): mov %r13,%rdx
12673(5): call 0xffff36fd(%rip)
12678(4): mov 0x68(%r13),%rdx
1267c(7): lea 0x2dc5(%rip),%rsi
12683(5): nop 0x0(%rax,%rax,1)
12688(4): movzx 0x30(%rdx),%ecx
1268c(4): mov 0x38(%rdx),%rdi
12690(3): cmp $0x10,%cl
12693(6): jnbe 0xd5(%rip)
12699(3): movzx %cl,%eax
1269c(4): movsxd 0x0(%rsi,%rax,4),%rax
126a0(3): add %rsi,%rax
126a3(2): jmp %rax
126a5(5): mov 0x28(%rsp),%rsi
126aa(3): mov %rbp,%rdi
126ad(5): call 0xffff3723(%rip)
126b2(2): test %eax,%eax
126b4(6): jnz 0xfffffc3c(%rip)
126ba(8): movzx 0x10b(%rsp),%esi
126c2(6): mov 0xb4(%rbx),%ecx
126c8(3): test %sil,%sil
126cb(6): jz 0xfffffbb4(%rip)
126d1(5): jmp 0xfffffba1(%rip)
126d6(8): mov $0xc,0x4c(%rsp)
126de(5): jmp 0xfffffc6e(%rip)
126e3(5): mov $0x1,%esi
126e8(5): mov $0x20,%edi
126ed(5): call 0xfffef383(%rip)
126f2(3): test %rax,%rax
126f5(4): mov %rax,0x78(%rbx)
126f9(2): jz 0xffffffdd(%rip)
126fb(3): xor %r12d,%r12d
126fe(2): xor %ebp,%ebp
12700(6): mov $0x1,%r13d
12706(3): xor %r15d,%r15d
12709(7): nop 0x0(%rax)
12710(5): lea 0x0(%rbp,%r15,1),%r14d
12715(3): mov %r14d,%edi
12718(5): call 0xfffef458(%rip)
1271d(3): cmp $0xff,%eax
12720(2): jz 0x15(%rip)
12722(4): mov 0x78(%rbx),%rsi
12726(3): mov %r13,%rdi
12729(3): mov %r15d,%ecx
1272c(3): shl/sal %cl,%rdi
1272f(3): add %r12,%rsi
12732(3): or %rdi,(%rsi)
12735(7): test $0xffffff80,%r14d
1273c(2): jnz 0xe(%rip)
1273e(3): cmp %r14d,%eax
12741(2): jz 0x9(%rip)
12743(7): or $0x8,0xb0(%rbx)
1274a(4): add $0x1,%r15
1274e(4): cmp $0x40,%r15
12752(2): jnz 0xffffffbe(%rip)
12754(3): add $0x40,%ebp
12757(4): add $0x8,%r12
1275b(6): cmp $0x100,%ebp
12761(2): jnz 0xffffffa5(%rip)
12763(5): jmp 0xfffffa2b(%rip)
12768(3): and $0x8,%ecx
1276b(6): jnz 0x917(%rip)
12771(4): mov 0x20(%rdx),%rax
12775(4): mov 0x38(%rax),%rcx
12779(4): mov 0x18(%r13),%rax
1277d(4): mov %rcx,0x0(%rax,%rdi,8)
12781(4): mov 0x8(%rdx),%r15
12785(2): xor %edi,%edi
12787(3): test %r15,%r15
1278a(2): jz 0x11(%rip)
1278c(3): mov %r15,%rdx
1278f(5): jmp 0xfffffef9(%rip)
12794(4): nop 0x0(%rax)
12798(3): mov %rax,%rdx
1279b(4): mov 0x10(%rdx),%r15
1279f(3): test %r15,%r15
127a2(3): setz %cl
127a5(3): cmp %rdi,%r15
127a8(3): setz %al
127ab(2): or %al,%cl
127ad(4): mov %cl,0x10(%rsp)
127b1(2): jz 0xffffffdb(%rip)
127b3(3): mov (%rdx),%rax
127b6(3): mov %rdx,%rdi
127b9(3): test %rax,%rax
127bc(2): jnz 0xffffffdc(%rip)
127be(3): xor %r14d,%r14d
127c1(3): xor %r15d,%r15d
127c4(4): nop 0x0(%rax)
127c8(4): mov 0x10(%r13),%rdx
127cc(3): cmp %r15,%rdx
127cf(2): jz 0x27(%rip)
127d1(4): lea 0x0(%r15,%r15,2),%r10
127d5(4): mov 0x30(%r13),%rax
127d9(4): shl/sal $0x3,%r10
127dd(6): cmp $0x0,0x8(%rax,%r10,1)
127e3(6): jz 0x205(%rip)
127e9(4): mov 0x10(%r13),%rdx
127ed(4): add $0x1,%r15
127f1(3): cmp %r15,%rdx
127f4(2): jnz 0xffffffdd(%rip)
127f6(3): test %r14b,%r14b
127f9(6): jz 0x245(%rip)
127ff(3): xor %r14d,%r14d
12802(3): xor %r15d,%r15d
12805(2): jmp 0xffffffcc(%rip)
12807(8): or $0x1,0xb0(%r13)
1280f(4): mov 0x8(%rdx),%r15
12813(3): test %r15,%r15
12816(6): jz 0x613(%rip)
1281c(4): mov 0x18(%r15),%rax
12820(4): mov 0x38(%rax),%rcx
12824(4): mov 0x10(%rdx),%rax
12828(3): test %rax,%rax
1282b(6): jz 0x5f1(%rip)
12831(4): mov 0x18(%rax),%rax
12835(4): mov 0x38(%rax),%r9
12839(3): test %rcx,%rcx
1283c(6): js 0x865(%rip)
12842(3): test %r9,%r9
12845(6): js 0x81e(%rip)
1284b(4): mov 0x28(%r13),%rax
1284f(4): lea 0x0(%rdi,%rdi,2),%rdi
12853(5): mov %rsi,0x38(%rsp)
12858(5): mov %r9,0x30(%rsp)
1285d(5): mov %rcx,0x18(%rsp)
12862(5): mov %rdx,0x10(%rsp)
12867(4): lea 0x0(%rax,%rdi,8),%r10
1286b(5): mov $0x10,%edi
12870(7): mov $0x2,(%r10)
12877(4): mov %r10,(%rsp)
1287b(5): call 0xfffef245(%rip)
12880(4): mov (%rsp),%r10
12884(3): test %rax,%rax
12887(5): mov 0x10(%rsp),%rdx
1288c(5): mov 0x18(%rsp),%rcx
12891(5): mov 0x30(%rsp),%r9
12896(5): mov 0x38(%rsp),%rsi
1289b(4): mov %rax,0x10(%r10)
1289f(6): jz 0x29b(%rip)
128a5(3): cmp %r9,%rcx
128a8(6): jz 0x5d5(%rip)
128ae(8): mov $0x2,0x8(%r10)
128b6(6): jl 0x5ae(%rip)
128bc(3): mov %r9,(%rax)
128bf(4): mov %rcx,0x8(%rax)
128c3(5): jmp 0xfffffec2(%rip)
128c8(4): mov 0x20(%rdx),%rax
128cc(4): lea 0x0(%rdi,%rdi,2),%rcx
128d0(5): mov $0x8,%edi
128d5(5): mov %rsi,0x10(%rsp)
128da(4): mov %rdx,(%rsp)
128de(4): mov 0x38(%rax),%r14
128e2(4): mov 0x28(%r13),%rax
128e6(4): lea 0x0(%rax,%rcx,8),%r15
128ea(7): mov $0x1,(%r15)
128f1(8): mov $0x1,0x8(%r15)
128f9(5): call 0xfffef1c7(%rip)
128fe(3): test %rax,%rax
12901(4): mov %rax,0x10(%r15)
12905(4): mov (%rsp),%rdx
12909(5): mov 0x10(%rsp),%rsi
1290e(6): jz 0x6aa(%rip)
12914(3): mov %r14,(%rax)
12917(4): mov 0x8(%rdx),%r15
1291b(5): jmp 0xfffffe6a(%rip)
12920(5): cmp $0x0,0x20(%rdx)
12925(6): jz 0xfffffe5c(%rip)
1292b(7): lea 0x2bce(%rip),%rcx
12932(7): lea 0x2607(%rip),%rsi
12939(7): lea 0x26a8(%rip),%rdi
12940(5): mov $0x59f,%edx
12945(5): call 0xfffef0bb(%rip)
1294a(6): nop 0x0(%rax,%rax,1)
12950(4): mov 0x20(%rdx),%rax
12954(4): mov 0x38(%rax),%r15
12958(4): mov 0x18(%r13),%rax
1295c(4): mov %r15,0x0(%rax,%rdi,8)
12960(4): cmp $0x4,0x30(%rdx)
12964(6): jnz 0xfffffe1d(%rip)
1296a(4): mov 0x28(%r13),%rax
1296e(4): lea 0x0(%rdi,%rdi,2),%rcx
12972(5): mov $0x8,%edi
12977(5): mov %rsi,0x18(%rsp)
1297c(5): mov %rdx,0x10(%rsp)
12981(4): lea 0x0(%rax,%rcx,8),%rcx
12985(7): mov $0x1,(%rcx)
1298c(8): mov $0x1,0x8(%rcx)
12994(4): mov %rcx,(%rsp)
12998(5): call 0xfffef128(%rip)
1299d(4): mov (%rsp),%rcx
129a1(3): test %rax,%rax
129a4(5): mov 0x10(%rsp),%rdx
129a9(5): mov 0x18(%rsp),%rsi
129ae(4): mov %rax,0x10(%rcx)
129b2(6): jz 0x64e(%rip)
129b8(3): mov %r15,(%rax)
129bb(4): mov 0x8(%rdx),%r15
129bf(5): jmp 0xfffffdc6(%rip)
129c4(8): mov %rsi,0xb0(%rsp)
129cc(8): mov %rsi,0xb8(%rsp)
129d4(8): mov $0x0,0x4c(%rsp)
129dc(5): jmp 0xfffffa4c(%rip)
129e1(7): nop 0x0(%rax)
129e8(5): mov $0x1,%ecx
129ed(3): mov %r15,%rdx
129f0(3): mov %r13,%rsi
129f3(3): mov %r12,%rdi
129f6(4): mov %r10,(%rsp)
129fa(5): call 0xffff5126(%rip)
129ff(2): test %eax,%eax
12a01(6): jnz 0xfffff8ef(%rip)
12a07(4): mov 0x30(%r13),%rax
12a0b(4): mov (%rsp),%r10
12a0f(4): add $0x1,%r15
12a13(6): cmp $0x0,0x8(%rax,%r10,1)
12a19(6): jnz 0xfffffdaf(%rip)
12a1f(5): mov 0x70(%rsp),%rdi
12a24(5): call 0xfffeee5c(%rip)
12a29(4): cmp %r15,0x10(%r13)
12a2d(6): jz 0xfffffdd2(%rip)
12a33(6): movzx 0x10(%rsp),%r14d
12a39(5): jmp 0xfffffd98(%rip)
12a3e(5): mov 0x8(%rsp),%rax
12a43(4): test $0x10,0x38(%rax)
12a47(2): jnz 0x13(%rip)
12a49(5): cmp $0x0,0x30(%rax)
12a4e(2): jz 0xc(%rip)
12a50(8): test $0x1,0xb0(%r13)
12a58(2): jnz 0x10(%rip)
12a5a(8): cmp $0x0,0x98(%r13)
12a62(6): jz 0xf9(%rip)
12a68(4): lea 0x0(%rdx,%rdx,2),%rdi
12a6c(4): mov %rdx,(%rsp)
12a70(4): shl/sal $0x3,%rdi
12a74(5): call 0xfffef04c(%rip)
12a79(3): test %rax,%rax
12a7c(4): mov %rax,0x38(%r13)
12a80(6): jz 0x54c(%rip)
12a86(4): mov (%rsp),%rdx
12a8a(2): xor %esi,%esi
12a8c(2): xor %ecx,%ecx
12a8e(3): test %rdx,%rdx
12a91(2): jnz 0x13(%rip)
12a93(5): jmp 0xc8(%rip)
12a98(8): nop 0x0(%rax,%rax,1)
12aa0(4): mov 0x38(%r13),%rax
12aa4(4): pxor %xmm0,%xmm0
12aa8(3): add %rsi,%rax
12aab(4): add $0x1,%rcx
12aaf(8): mov $0x0,0x10(%rax)
12ab7(4): add $0x18,%rsi
12abb(3): movups %xmm0,(%rax)
12abe(4): mov 0x10(%r13),%rax
12ac2(3): cmp %rax,%rcx
12ac5(2): jb 0xffffffdb(%rip)
12ac7(3): test %rax,%rax
12aca(6): jz 0x91(%rip)
12ad0(4): mov 0x30(%r13),%rax
12ad4(9): mov $0x0,0x18(%rsp)
12add(9): mov $0x0,0x10(%rsp)
12ae6(5): mov 0x18(%rsp),%rcx
12aeb(4): lea 0x0(%rax,%rcx,1),%rdx
12aef(5): cmp $0x0,0x8(%rdx)
12af4(4): mov 0x10(%rdx),%rcx
12af8(2): jle 0x4c(%rip)
12afa(3): xor %r15d,%r15d
12afd(2): jmp 0x1b(%rip)
12aff(1): nop 
12b00(4): mov 0x30(%r13),%rax
12b04(5): mov 0x18(%rsp),%rdx
12b09(4): add $0x1,%r15
12b0d(4): mov (%rsp),%rcx
12b11(5): cmp 0x8(%rax,%rdx,1),%r15
12b16(2): jnl 0x2e(%rip)
12b18(4): mov 0x0(%rcx,%r15,8),%rax
12b1c(4): mov %rcx,(%rsp)
12b20(4): lea 0x0(%rax,%rax,2),%rsi
12b24(4): mov 0x38(%r13),%rax
12b28(4): lea 0x0(%rax,%rsi,8),%rdi
12b2c(5): mov 0x10(%rsp),%rsi
12b31(5): call 0xffff333f(%rip)
12b36(2): test %al,%al
12b38(2): jnz 0xffffffc8(%rip)
12b3a(5): mov $0xc,%eax
12b3f(5): jmp 0xfffff7b1(%rip)
12b44(6): add $0x1,0x10(%rsp)
12b4a(6): add $0x18,0x18(%rsp)
12b50(5): mov 0x10(%rsp),%rdx
12b55(4): cmp 0x10(%r13),%rdx
12b59(2): jb 0xffffff8d(%rip)
12b5b(7): movzx 0xb0(%rbx),%eax
12b62(8): mov $0x0,0x4c(%rsp)
12b6a(3): shr $0x2,%al
12b6d(6): cmp $0x0,0x20(%rsp)
12b73(3): setz %dl
12b76(2): and %dl,%al
12b78(6): jnz 0x1e7(%rip)
12b7e(4): mov 0x68(%rbx),%rax
12b82(3): mov %r12,%rdi
12b85(4): mov 0x18(%rax),%rax
12b89(4): mov 0x38(%rax),%rax
12b8d(4): lea 0x0(%rax,%rax,2),%rdx
12b91(7): mov %rax,0x90(%rbx)
12b98(4): mov 0x30(%rbx),%rax
12b9c(4): lea 0x0(%rax,%rdx,8),%rsi
12ba0(5): call 0xffff59e0(%rip)
12ba5(2): test %eax,%eax
12ba7(3): mov %eax,%r15d
12baa(4): mov %eax,0x50(%rsp)
12bae(6): jnz 0x121(%rip)
12bb4(8): cmp $0x0,0x98(%rbx)
12bbc(6): jle 0xd4(%rip)
12bc2(5): mov 0x68(%rsp),%r9
12bc7(3): test %r9,%r9
12bca(6): jle 0xc6(%rip)
12bd0(3): xor %r10d,%r10d
12bd3(5): lea 0x10(%r12),%r13
12bd8(2): jmp 0x15(%rip)
12bda(6): nop 0x0(%rax,%rax,1)
12be0(4): add $0x1,%r10
12be4(3): cmp %r10,%r9
12be7(6): jle 0xa9(%rip)
12bed(5): mov 0x70(%rsp),%rcx
12bf2(3): mov (%rbx),%rsi
12bf5(4): mov 0x0(%rcx,%r10,8),%r8
12bf9(3): mov %r8,%rdi
12bfc(4): shl/sal $0x4,%rdi
12c00(3): add %rsi,%rdi
12c03(4): cmp $0x4,0x8(%rdi)
12c07(2): jnz 0xffffffd9(%rip)
12c09(2): xor %edx,%edx
12c0b(2): jmp 0xe(%rip)
12c0d(3): nop (%rax)
12c10(4): add $0x1,%rdx
12c14(3): cmp %rdx,%r9
12c17(2): jz 0xffffffc9(%rip)
12c19(4): mov 0x0(%rcx,%rdx,8),%rax
12c1d(4): shl/sal $0x4,%rax
12c21(3): add %rsi,%rax
12c24(4): cmp $0x9,0x8(%rax)
12c28(2): jnz 0xffffffe8(%rip)
12c2a(3): mov (%rdi),%r11
12c2d(3): cmp %r11,(%rax)
12c30(2): jnz 0xffffffe0(%rip)
12c32(4): mov 0x28(%rbx),%rdx
12c36(4): lea 0x0(%r8,%r8,2),%rax
12c3a(3): mov %r13,%rsi
12c3d(3): mov %r9,%rdi
12c40(4): lea 0x0(%rdx,%rax,8),%rax
12c44(4): mov 0x10(%rax),%rax
12c48(3): mov (%rax),%r11
12c4b(3): mov %r11,%rdx
12c4e(5): call 0xffff47d2(%rip)
12c53(3): test %rax,%rax
12c56(2): jnz 0xffffff8a(%rip)
12c58(4): mov 0x30(%rbx),%rax
12c5c(4): lea 0x0(%r11,%r11,2),%rdx
12c60(3): mov %r12,%rdi
12c63(4): lea 0x0(%rax,%rdx,8),%rsi
12c67(5): call 0xffff4cd9(%rip)
12c6c(2): test %eax,%eax
12c6e(6): jnz 0x342(%rip)
12c74(5): mov 0x68(%rsp),%r9
12c79(6): mov $0x1,%r10d
12c7f(3): cmp %r10,%r9
12c82(6): jnle 0xffffff6b(%rip)
12c88(8): nop 0x0(%rax,%rax,1)
12c90(5): mov 0x28(%rsp),%rdi
12c95(2): xor %ecx,%ecx
12c97(3): mov %r12,%rdx
12c9a(3): mov %rbx,%rsi
12c9d(5): call 0xffff5ad3(%rip)
12ca2(3): test %rax,%rax
12ca5(4): mov %rax,0x48(%rbx)
12ca9(6): jz 0x169(%rip)
12caf(4): cmp $0x0,0x68(%rax)
12cb3(6): js 0xfe(%rip)
12cb9(4): mov %rax,0x60(%rbx)
12cbd(4): mov %rax,0x58(%rbx)
12cc1(4): mov %rax,0x50(%rbx)
12cc5(5): mov 0x70(%rsp),%rdi
12cca(5): call 0xfffeebb6(%rip)
12ccf(5): mov 0x8(%rsp),%rax
12cd4(5): mov %r15d,0x4c(%rsp)
12cd9(3): mov (%rax),%r13
12cdc(4): mov 0x70(%r13),%rdi
12ce0(3): test %rdi,%rdi
12ce3(2): jz 0x15(%rip)
12ce5(3): nop (%rax)
12ce8(3): mov (%rdi),%r12
12ceb(5): call 0xfffeeb95(%rip)
12cf0(3): test %r12,%r12
12cf3(3): mov %r12,%rdi
12cf6(2): jnz 0xfffffff2(%rip)
12cf8(4): mov 0x20(%r13),%rdi
12cfc(8): mov $0x0,0x70(%r13)
12d04(b): mov $0xf,0x80(%r13)
12d0f(8): mov $0x0,0x68(%r13)
12d17(5): call 0xfffeeb69(%rip)
12d1c(8): mov $0x0,0x20(%r13)
12d24(3): mov %rbp,%rdi
12d27(5): call 0xffff43e9(%rip)
12d2c(4): mov 0x4c(%rsp),%eax
12d30(2): test %eax,%eax
12d32(6): jz 0xfffff63a(%rip)
12d38(5): jmp 0xfffff614(%rip)
12d3d(8): mov $0xc,0x4c(%rsp)
12d45(5): jmp 0xfffff5b7(%rip)
12d4a(3): mov %rbp,%rdi
12d4d(5): call 0xffff3423(%rip)
12d52(8): mov $0x0,0x4c(%rsp)
12d5a(5): jmp 0xfffff6ce(%rip)
12d5f(5): mov 0x8(%rsp),%rcx
12d64(5): cmp $0x0,0x28(%rcx)
12d69(6): jnz 0xfffffe15(%rip)
12d6f(4): mov 0x10(%rbx),%r10
12d73(3): test %r10,%r10
12d76(6): jz 0x2b4(%rip)
12d7c(3): mov (%rbx),%rsi
12d7f(7): lea 0x2706(%rip),%r9
12d86(3): xor %r8d,%r8d
12d89(2): xor %edx,%edx
12d8b(3): mov %rsi,%rcx
12d8e(4): cmp $0xc,0x8(%rcx)
12d92(6): jnbe 0x2cc(%rip)
12d98(4): movzx 0x8(%rcx),%edi
12d9c(4): movsxd 0x0(%r9,%rdi,4),%rdi
12da0(3): add %r9,%rdi
12da3(2): jmp %rdi
12da5(2): xor %ebp,%ebp
12da7(5): mov $0x1,%esi
12dac(5): jmp 0xfffff331(%rip)
12db1(5): mov 0x28(%rsp),%r14
12db6(5): mov $0x1,%ecx
12dbb(3): mov %r12,%rdx
12dbe(3): mov %rbx,%rsi
12dc1(3): mov %r14,%rdi
12dc4(5): call 0xffff59ac(%rip)
12dc9(5): mov $0x2,%ecx
12dce(3): mov %r12,%rdx
12dd1(3): mov %rbx,%rsi
12dd4(3): mov %r14,%rdi
12dd7(4): mov %rax,0x50(%rbx)
12ddb(5): call 0xffff5995(%rip)
12de0(5): mov $0x6,%ecx
12de5(4): mov %rax,0x58(%rbx)
12de9(3): mov %r12,%rdx
12dec(3): mov %rbx,%rsi
12def(3): mov %r14,%rdi
12df2(5): call 0xffff597e(%rip)
12df7(5): cmp $0x0,0x50(%rbx)
12dfc(4): mov %rax,0x60(%rbx)
12e00(2): jz 0x12(%rip)
12e02(5): cmp $0x0,0x58(%rbx)
12e07(2): jz 0xb(%rip)
12e09(3): test %rax,%rax
12e0c(6): jnz 0xfffffeb9(%rip)
12e12(5): mov 0x50(%rsp),%r15d
12e17(5): jmp 0xfffffeb8(%rip)
12e1c(4): mov 0x20(%rdx),%rax
12e20(4): mov 0x38(%rax),%r9
12e24(5): jmp 0xfffffa15(%rip)
12e29(4): mov 0x20(%rdx),%rax
12e2d(4): mov 0x38(%rax),%rcx
12e31(5): jmp 0xfffff9f3(%rip)
12e36(3): mov %rbx,%rdi
12e39(5): mov $0xe8,%esi
12e3e(5): call 0xfffeecf2(%rip)
12e43(3): test %rax,%rax
12e46(3): mov %rax,%rbx
12e49(6): jz 0x198(%rip)
12e4f(5): mov 0x8(%rsp),%rax
12e54(8): mov $0xe8,0x8(%rax)
12e5c(3): mov %rbx,(%rax)
12e5f(5): jmp 0xfffff1e3(%rip)
12e64(3): mov %rcx,(%rax)
12e67(4): mov %r9,0x8(%rax)
12e6b(5): jmp 0xfffff91a(%rip)
12e70(8): mov $0x0,0x4c(%rsp)
12e78(5): jmp 0xfffff5b0(%rip)
12e7d(8): mov $0x1,0x8(%r10)
12e85(3): mov %rcx,(%rax)
12e88(5): jmp 0xfffff8fd(%rip)
12e8d(3): mov %rbp,%rdi
12e90(5): call 0xffff3270(%rip)
12e95(8): mov $0x0,0x4c(%rsp)
12e9d(5): jmp 0xfffff58b(%rip)
12ea2(8): mov $0xc,0x4c(%rsp)
12eaa(8): mov $0x0,0x68(%rbx)
12eb2(5): jmp 0xfffff44a(%rip)
12eb7(3): test %rax,%rax
12eba(6): jz 0x131(%rip)
12ec0(4): lea 0x70(%r15),%r13
12ec4(5): lea 0x60(%rsp),%r12
12ec9(4): sub $0xffffff80,%r15
12ecd(2): xor %ecx,%ecx
12ecf(2): xor %edx,%edx
12ed1(3): mov %r15,%rsi
12ed4(3): mov %r12,%r8
12ed7(3): mov %r13,%rdi
12eda(4): mov %rax,(%rsp)
12ede(5): mov $0x2,0x68(%rsp)
12ee3(5): call 0xffff51fd(%rip)
12ee8(4): mov (%rsp),%r9
12eec(3): mov %rax,%r11
12eef(5): jmp 0xfffff5dc(%rip)
12ef4(5): call 0xfffee98c(%rip)
12ef9(b): mov $0x0,0xe0(%r13)
12f04(5): jmp 0xfffff729(%rip)
12f09(3): mov %eax,%r8d
12f0c(4): add $0x1,%rdx
12f10(4): add $0x10,%rcx
12f14(3): cmp %r10,%rdx
12f17(6): jnz 0xfffffe77(%rip)
12f1d(3): or %r8b,%r14b
12f20(6): jz 0x10a(%rip)
12f26(3): mov %rdx,%rax
12f29(4): shl/sal $0x4,%rax
12f2d(3): add %rsi,%rax
12f30(2): jmp 0x18(%rip)
12f32(3): cmp $0x5,%dl
12f35(2): jnz 0x6(%rip)
12f37(4): mov $0x7,0x8(%rsi)
12f3b(4): add $0x10,%rsi
12f3f(3): cmp %rsi,%rax
12f42(6): jz 0xe5(%rip)
12f48(4): movzx 0x8(%rsi),%edx
12f4c(3): cmp $0x1,%dl
12f4f(2): jnz 0xffffffe3(%rip)
12f51(3): cmp $0x0,(%rsi)
12f54(2): jns 0xffffffe7(%rip)
12f56(4): and $0xdf,0xa(%rsi)
12f5a(2): jmp 0xffffffe1(%rip)
12f5c(4): nop 0x0(%rax)
12f60(3): cmp $0x0,(%rcx)
12f63(4): cmovs %eax,%r14d
12f67(2): jmp 0xffffffa5(%rip)
12f69(2): mov (%rcx),%edi
12f6b(3): cmp $0x20,%edi
12f6e(2): jz 0xffffff9e(%rip)
12f70(6): jbe 0xa9(%rip)
12f76(3): cmp $0x40,%edi
12f79(2): jz 0xffffff93(%rip)
12f7b(3): add $0x80,%edi
12f7e(2): jz 0xffffff8e(%rip)
12f80(5): jmp 0xfffffbfe(%rip)
12f85(3): nop (%rax)
12f88(3): mov (%rcx),%rdi
12f8b(5): cmp $0x0,0x10(%rdi)
12f90(6): jnz 0xfffffbee(%rip)
12f96(5): cmp $0x0,0x18(%rdi)
12f9b(6): jz 0xffffff71(%rip)
12fa1(5): jmp 0xfffffbdd(%rip)
12fa6(a): nop 0x0(%rax,%rax,1)
12fb0(3): mov %eax,%r15d
12fb3(5): jmp 0xfffffd1c(%rip)
12fb8(8): mov $0x0,0x8(%r15)
12fc0(7): mov $0x0,(%r15)
12fc7(5): jmp 0xfffffb73(%rip)
12fcc(5): mov 0x8(%rsp),%rax
12fd1(8): mov $0xc,0x4c(%rsp)
12fd9(3): mov (%rax),%r13
12fdc(5): jmp 0xfffff320(%rip)
12fe1(5): mov $0xc,%eax
12fe6(5): jmp 0xfffff386(%rip)
12feb(5): mov 0x8(%rsp),%rax
12ff0(8): mov $0x0,0x68(%rbx)
12ff8(3): mov (%rax),%r13
12ffb(5): jmp 0xfffff301(%rip)
13000(8): mov $0x0,0x8(%rcx)
13008(7): mov $0x0,(%rcx)
1300f(5): mov $0xc,%eax
13014(5): jmp 0xfffff2dc(%rip)
13019(3): cmp $0x10,%edi
1301c(6): jz 0xfffffef0(%rip)
13022(5): jmp 0xfffffb5c(%rip)
13027(3): mov %r8d,%r14d
1302a(8): cmp $0x0,0x98(%rbx)
13032(7): movzx 0xb0(%rbx),%edx
13039(a): mov $0x1,0xb4(%rbx)
13043(3): setnle %al
13046(3): and $0xf9,%edx
13049(3): or %r14d,%eax
1304c(3): and $0x1,%eax
1304f(2): add %eax,%eax
13051(2): or %edx,%eax
13053(6): mov %al,0xb0(%rbx)
13059(5): jmp 0xfffffb25(%rip)
1305e(5): call 0xfffee832(%rip)
13063(7): lea 0x2496(%rip),%rcx
1306a(7): lea 0x1ecf(%rip),%rsi
13071(7): lea 0x1f8d(%rip),%rdi
13078(5): mov $0x5b0,%edx
1307d(5): call 0xfffee983(%rip)
13082(7): lea 0x2477(%rip),%rcx
13089(7): lea 0x1eb0(%rip),%rsi
13090(7): lea 0x1ec9(%rip),%rdi
13097(5): mov $0x5c2,%edx
1309c(5): call 0xfffee964(%rip)
130a1(7): lea 0x2458(%rip),%rcx
130a8(7): lea 0x1e91(%rip),%rsi
130af(7): lea 0x1f45(%rip),%rdi
130b6(5): mov $0x5af,%edx
130bb(5): call 0xfffee945(%rip)
130c0(5): call 0xfffee8d0(%rip)

"rpl_re_compile_pattern" :
130d0(4): sub $0x8,%rsp
130d4(7): mov 0x208325(%rip),%rcx
130db(3): mov %rdi,%r8
130de(3): mov %rdx,%rdi
130e1(3): mov %rcx,%rax
130e4(4): shr $0x19,%rax
130e8(3): and $0x1,%eax
130eb(3): shl/sal $0x4,%eax
130ee(2): mov %eax,%edx
130f0(4): movzx 0x38(%rdi),%eax
130f4(3): and $0xef,%eax
130f7(2): or %edx,%eax
130f9(3): mov %rsi,%rdx
130fc(3): mov %r8,%rsi
130ff(3): or $0x80,%eax
13102(3): mov %al,0x38(%rdi)
13105(5): call 0xffffeecb(%rip)
1310a(2): test %eax,%eax
1310c(2): jz 0x2c(%rip)
1310e(7): lea 0x244b(%rip),%rdx
13115(2): cwde 
13117(7): lea 0x24e2(%rip),%rsi
1311e(2): xor %edi,%edi
13120(4): add 0x0(%rdx,%rax,8),%rsi
13124(5): mov $0x5,%edx
13129(4): add $0x8,%rsp
1312d(5): jmp 0xfffee833(%rip)
13132(6): nop 0x0(%rax,%rax,1)
13138(2): xor %eax,%eax
1313a(4): add $0x8,%rsp
1313e(1): ret near (%rsp)

"rpl_re_set_syntax" :
13140(7): mov 0x2082b9(%rip),%rax
13147(7): mov %rdi,0x2082b2(%rip)
1314e(1): ret near (%rsp)

"rpl_re_compile_fastmap" :
13150(2): push %r12
13152(1): push %rbp
13153(2): xor %eax,%eax
13155(1): push %rbx
13156(4): mov 0x20(%rdi),%rbp
1315a(3): mov %rdi,%rbx
1315d(3): mov (%rdi),%r12
13160(4): lea 0x8(%rbp),%rdi
13164(3): mov %rbp,%rcx
13167(8): mov $0x0,0x0(%rbp)
1316f(b): mov $0x0,0xf8(%rbp)
1317a(4): and $0xfffffff8,%rdi
1317e(3): sub %rdi,%rcx
13181(6): add $0x100,%ecx
13187(3): shr $0x3,%ecx
1318a(3): REP stosd %rax,rdi(%es,10)
1318d(3): mov %rbp,%rcx
13190(3): mov %rbx,%rdi
13193(5): mov 0x48(%r12),%rsi
13198(4): lea 0x18(%rsi),%rdx
1319c(4): add $0x10,%rsi
131a0(5): call 0xffff8500(%rip)
131a5(5): mov 0x50(%r12),%rax
131aa(5): cmp %rax,0x48(%r12)
131af(2): jz 0x1a(%rip)
131b1(4): lea 0x18(%rax),%rdx
131b5(4): lea 0x10(%rax),%rsi
131b9(3): mov %rbp,%rcx
131bc(3): mov %rbx,%rdi
131bf(5): call 0xffff84e1(%rip)
131c4(5): mov 0x48(%r12),%rax
131c9(5): mov 0x58(%r12),%rsi
131ce(3): cmp %rax,%rsi
131d1(2): jz 0x1a(%rip)
131d3(4): lea 0x18(%rsi),%rdx
131d7(3): mov %rbp,%rcx
131da(4): add $0x10,%rsi
131de(3): mov %rbx,%rdi
131e1(5): call 0xffff84bf(%rip)
131e6(5): mov 0x48(%r12),%rax
131eb(5): mov 0x60(%r12),%rsi
131f0(3): cmp %rax,%rsi
131f3(2): jz 0x15(%rip)
131f5(4): lea 0x18(%rsi),%rdx
131f9(3): mov %rbp,%rcx
131fc(4): add $0x10,%rsi
13200(3): mov %rbx,%rdi
13203(5): call 0xffff849d(%rip)
13208(4): or $0x8,0x38(%rbx)
1320c(2): xor %eax,%eax
1320e(1): pop %rbx
1320f(1): pop %rbp
13210(2): pop %r12
13212(1): ret near (%rsp)

"re_search_stub" :
13220(2): push %r15
13222(2): push %r14
13224(3): mov %r8,%rax
13227(2): push %r13
13229(2): push %r12
1322b(3): add %rcx,%r8
1322e(1): push %rbp
1322f(1): push %rbx
13230(4): sub $0x38,%rsp
13234(3): test %rcx,%rcx
13237(4): mov 0x78(%rsp),%ebx
1323b(5): mov 0x70(%rsp),%r12
13240(4): mov %ebx,0x28(%rsp)
13244(6): js 0x33c(%rip)
1324a(3): cmp %rdx,%rcx
1324d(6): jnle 0x333(%rip)
13253(3): cmp %rdx,%r8
13256(3): mov %rcx,%rbx
13259(3): mov %rdi,%r15
1325c(6): jnle 0x284(%rip)
13262(3): test %rax,%rax
13265(2): js 0xb(%rip)
13267(3): cmp %r8,%rcx
1326a(6): jnle 0x276(%rip)
13270(3): test %r8,%r8
13273(6): js 0x2e5(%rip)
13279(3): test %rax,%rax
1327c(2): jns 0xb(%rip)
1327e(3): cmp %r8,%rbx
13281(6): jle 0x2d7(%rip)
13287(5): movzx 0x38(%r15),%eax
1328c(3): mov %eax,%r13d
1328f(4): shr $0x5,%r13b
13293(3): mov %r13d,%edi
13296(3): and $0x3,%edi
13299(3): cmp %rbx,%r8
1329c(4): mov %edi,0x2c(%rsp)
132a0(2): jle 0x11(%rip)
132a2(5): cmp $0x0,0x20(%r15)
132a7(2): jz 0xa(%rip)
132a9(2): test $0x8,%al
132ab(6): jz 0x1f5(%rip)
132b1(2): test $0x10,%al
132b3(6): jnz 0x1cd(%rip)
132b9(3): test %r12,%r12
132bc(6): jz 0x1c4(%rip)
132c2(3): and $0x6,%eax
132c5(4): mov 0x30(%r15),%rcx
132c9(2): cmp $0x4,%al
132cb(6): jz 0x195(%rip)
132d1(4): lea 0x1(%rcx),%r14
132d5(3): mov %r14,%r13
132d8(3): mov %r14,%rdi
132db(4): shl/sal $0x4,%rdi
132df(5): mov %r9,0x20(%rsp)
132e4(5): mov %rdx,0x18(%rsp)
132e9(5): mov %rsi,0x10(%rsp)
132ee(5): mov %r8,0x8(%rsp)
132f3(5): call 0xfffee7cd(%rip)
132f8(3): test %rax,%rax
132fb(3): mov %rax,%rbp
132fe(6): jz 0x292(%rip)
13304(4): sub $0x8,%rsp
13308(3): mov %rbx,%rcx
1330b(3): mov %r15,%rdi
1330e(4): mov 0x34(%rsp),%eax
13312(1): push %rax
13313(1): push %rbp
13314(2): push %r14
13316(5): mov 0x40(%rsp),%r9
1331b(5): mov 0x28(%rsp),%r8
13320(5): mov 0x38(%rsp),%rdx
13325(5): mov 0x30(%rsp),%rsi
1332a(5): call 0xffffab16(%rip)
1332f(4): add $0x20,%rsp
13333(2): test %eax,%eax
13335(2): jz 0x33(%rip)
13337(3): cmp $0x1,%eax
1333a(7): mov $0xffffffff,%r12
13341(2): jz 0x9(%rip)
13343(7): mov $0xfffffffe,%r12
1334a(3): mov %rbp,%rdi
1334d(5): call 0xfffee533(%rip)
13352(4): add $0x38,%rsp
13356(3): mov %r12,%rax
13359(1): pop %rbx
1335a(1): pop %rbp
1335b(2): pop %r12
1335d(2): pop %r13
1335f(2): pop %r14
13361(2): pop %r15
13363(1): ret near (%rsp)
13364(4): nop 0x0(%rax)
13368(3): test %r12,%r12
1336b(6): jz 0xcd(%rip)
13371(5): movzx 0x38(%r15),%eax
13376(4): lea 0x1(%r13),%rdx
1337a(2): shr $0x1,%al
1337c(3): and $0x3,%eax
1337f(6): jz 0x171(%rip)
13385(3): cmp $0x1,%eax
13388(6): jz 0x218(%rip)
1338e(3): cmp $0x2,%eax
13391(6): jnz 0x2ef(%rip)
13397(4): cmp (%r12),%r14
1339b(6): jnbe 0x2c6(%rip)
133a1(6): mov $0x2,%r9d
133a7(3): test %r13,%r13
133aa(6): jle 0x26e(%rip)
133b0(5): mov 0x8(%r12),%r8
133b5(5): mov 0x10(%r12),%rdi
133ba(8): lea 0x0(,%r13,8),%rsi
133c2(3): mov %r13,%rdx
133c5(2): xor %eax,%eax
133c7(9): nop 0x0(%rax,%rax,1)
133d0(5): mov 0x0(%rbp,%rax,2),%rcx
133d5(4): mov %rcx,0x0(%r8,%rax,1)
133d9(5): mov 0x8(%rbp,%rax,2),%rcx
133de(4): mov %rcx,0x0(%rdi,%rax,1)
133e2(4): add $0x8,%rax
133e6(3): cmp %rax,%rsi
133e9(2): jnz 0xffffffe7(%rip)
133eb(4): cmp %rdx,(%r12)
133ef(2): jbe 0x2e(%rip)
133f1(5): mov 0x10(%r12),%rsi
133f6(5): mov 0x8(%r12),%rcx
133fb(7): mov $0xffffffff,%rax
13402(6): nop 0x0(%rax,%rax,1)
13408(4): mov %rax,0x0(%rsi,%rdx,8)
1340c(4): add $0x1,%r13
13410(4): mov %rax,0x0(%rcx,%rdx,8)
13414(4): cmp (%r12),%r13
13418(3): mov %r13,%rdx
1341b(2): jb 0xffffffed(%rip)
1341d(5): movzx 0x38(%r15),%eax
13422(4): lea 0x0(%r9,%r9,1),%r13d
13426(3): and $0xf9,%eax
13429(3): or %r13d,%eax
1342c(2): test $0x6,%al
1342e(4): mov %al,0x38(%r15)
13432(6): jz 0xffffff11(%rip)
13438(5): cmp $0x0,0x28(%rsp)
1343d(4): mov 0x0(%rbp),%r12
13441(6): jz 0xffffff09(%rip)
13447(3): cmp %rbx,%r12
1344a(6): jnz 0x1f8(%rip)
13450(4): mov 0x8(%rbp),%r12
13454(3): sub %rbx,%r12
13457(5): jmp 0xfffffef3(%rip)
1345c(4): nop 0x0(%rax)
13460(4): mov (%r12),%r14
13464(3): cmp %rcx,%r14
13467(6): jnbe 0xfffffe6a(%rip)
1346d(3): test %r14,%r14
13470(3): mov %r14,%r13
13473(6): jnle 0xfffffe65(%rip)
13479(7): nop 0x0(%rax)
13480(5): mov $0x10,%edi
13485(6): mov $0x1,%r14d
1348b(6): mov $0x1,%r13d
13491(3): xor %r12d,%r12d
13494(5): jmp 0xfffffe4b(%rip)
13499(7): nop 0x0(%rax)
134a0(3): mov %r15,%rdi
134a3(5): mov %r9,0x20(%rsp)
134a8(5): mov %rdx,0x18(%rsp)
134ad(5): mov %rsi,0x10(%rsp)
134b2(5): mov %r8,0x8(%rsp)
134b7(5): call 0xfffffc99(%rip)
134bc(5): movzx 0x38(%r15),%eax
134c1(5): mov 0x20(%rsp),%r9
134c6(5): mov 0x18(%rsp),%rdx
134cb(5): mov 0x10(%rsp),%rsi
134d0(5): mov 0x8(%rsp),%r8
134d5(5): jmp 0xfffffddc(%rip)
134da(6): nop 0x0(%rax,%rax,1)
134e0(3): mov %rdx,%r8
134e3(5): jmp 0xfffffda4(%rip)
134e8(8): nop 0x0(%rax,%rax,1)
134f0(8): lea 0x0(,%rdx,8),%r14
134f8(5): mov %rdx,0x8(%rsp)
134fd(3): mov %r14,%rdi
13500(5): call 0xfffee5c0(%rip)
13505(3): test %rax,%rax
13508(5): mov %rax,0x8(%r12)
1350d(5): mov 0x8(%rsp),%rdx
13512(6): jz 0x118(%rip)
13518(3): mov %r14,%rdi
1351b(5): mov %rdx,0x8(%rsp)
13520(5): mov %rax,0x10(%rsp)
13525(5): call 0xfffee59b(%rip)
1352a(3): test %rax,%rax
1352d(5): mov %rax,0x10(%r12)
13532(5): mov 0x8(%rsp),%rdx
13537(5): mov 0x10(%rsp),%rcx
1353c(6): jz 0xe6(%rip)
13542(4): mov %rdx,(%r12)
13546(6): mov $0x1,%r9d
1354c(5): jmp 0xfffffe5b(%rip)
13551(7): nop 0x0(%rax)
13558(5): movzx 0x38(%r15),%eax
1355d(3): xor %r8d,%r8d
13560(3): mov %eax,%r13d
13563(4): shr $0x5,%r13b
13567(3): mov %r13d,%edi
1356a(3): and $0x3,%edi
1356d(4): mov %edi,0x2c(%rsp)
13571(5): jmp 0xfffffd40(%rip)
13576(a): nop 0x0(%rax,%rax,1)
13580(7): mov $0xffffffff,%r12
13587(5): jmp 0xfffffdcb(%rip)
1358c(4): nop 0x0(%rax)
13590(7): mov $0xfffffffe,%r12
13597(5): jmp 0xfffffdbb(%rip)
1359c(4): nop 0x0(%rax)
135a0(4): cmp %rdx,(%r12)
135a4(6): mov $0x1,%r9d
135aa(6): jnb 0xfffffdfd(%rip)
135b0(8): lea 0x0(,%rdx,8),%rcx
135b8(5): mov 0x8(%r12),%rdi
135bd(5): mov %r9b,0x18(%rsp)
135c2(5): mov %rdx,0x10(%rsp)
135c7(3): mov %rcx,%rsi
135ca(5): mov %rcx,0x8(%rsp)
135cf(5): call 0xfffee561(%rip)
135d4(3): test %rax,%rax
135d7(3): mov %rax,%r14
135da(2): jz 0x50(%rip)
135dc(5): mov 0x8(%rsp),%rcx
135e1(5): mov 0x10(%r12),%rdi
135e6(3): mov %rcx,%rsi
135e9(5): call 0xfffee547(%rip)
135ee(3): test %rax,%rax
135f1(5): mov 0x10(%rsp),%rdx
135f6(6): movzx 0x18(%rsp),%r9d
135fc(2): jz 0x36(%rip)
135fe(5): mov %r14,0x8(%r12)
13603(5): mov %rax,0x10(%r12)
13608(4): mov %rdx,(%r12)
1360c(5): jmp 0xfffffd9b(%rip)
13611(7): nop 0x0(%rax)
13618(2): xor %edx,%edx
1361a(3): xor %r13d,%r13d
1361d(5): jmp 0xfffffdce(%rip)
13622(3): mov %rcx,%rdi
13625(5): call 0xfffee25b(%rip)
1362a(3): xor %r9d,%r9d
1362d(5): jmp 0xfffffdf0(%rip)
13632(3): mov %r14,%rdi
13635(5): call 0xfffee24b(%rip)
1363a(3): xor %r9d,%r9d
1363d(5): jmp 0xfffffde0(%rip)
13642(7): lea 0x1e87(%rip),%rcx
13649(7): lea 0x18d0(%rip),%rsi
13650(7): lea 0x19ee(%rip),%rdi
13657(5): mov $0x1be,%edx
1365c(5): call 0xfffee3a4(%rip)
13661(7): lea 0x1e58(%rip),%rcx
13668(7): lea 0x18b1(%rip),%rsi
1366f(7): lea 0x19b7(%rip),%rdi
13676(5): mov $0x1fb,%edx
1367b(5): call 0xfffee385(%rip)
13680(7): lea 0x1e39(%rip),%rcx
13687(7): lea 0x1892(%rip),%rsi
1368e(7): lea 0x197b(%rip),%rdi
13695(5): mov $0x1f9,%edx
1369a(5): call 0xfffee366(%rip)

"re_search_2_stub" :
136a0(2): push %r15
136a2(2): push %r14
136a4(2): push %r13
136a6(2): push %r12
136a8(3): mov %rdi,%r12
136ab(1): push %rbp
136ac(1): push %rbx
136ad(3): mov %r8,%rbp
136b0(3): mov %rdx,%rbx
136b3(3): mov %rbp,%rdx
136b6(4): sub $0x28,%rsp
136ba(4): shr $0x3f,%rdx
136be(5): mov 0x70(%rsp),%rax
136c3(2): mov %edx,%edi
136c5(5): mov 0x78(%rsp),%r8d
136ca(4): shr $0x3f,%rax
136ce(3): or %al,%dil
136d1(6): jnz 0xcf(%rip)
136d7(3): test %rbx,%rbx
136da(6): js 0xc6(%rip)
136e0(3): mov %rbx,%r15
136e3(3): add %rbp,%r15
136e6(6): jo 0xba(%rip)
136ec(3): test %rbp,%rbp
136ef(3): mov %rcx,%r14
136f2(3): mov %r9,%rcx
136f5(6): jz 0xbb(%rip)
136fb(3): xor %r13d,%r13d
136fe(3): test %rbx,%rbx
13701(5): mov %rsi,0x8(%rsp)
13706(2): jnz 0x4a(%rip)
13708(4): movzx %r8b,%r8d
1370c(3): mov %r15,%rdx
1370f(3): mov %r14,%rsi
13712(2): push %r8
13714(4): push 0x70(%rsp)
13718(3): mov %r12,%rdi
1371b(8): mov 0x80(%rsp),%r9
13723(5): mov 0x70(%rsp),%r8
13728(5): call 0xfffffaf8(%rip)
1372d(3): mov %r13,%rdi
13730(3): mov %rax,%rbx
13733(5): call 0xfffee14d(%rip)
13738(1): pop %rax
13739(1): pop %rdx
1373a(4): add $0x28,%rsp
1373e(3): mov %rbx,%rax
13741(1): pop %rbx
13742(1): pop %rbp
13743(2): pop %r12
13745(2): pop %r13
13747(2): pop %r14
13749(2): pop %r15
1374b(1): ret near (%rsp)
1374c(4): nop 0x0(%rax)
13750(3): mov %r15,%rdi
13753(5): mov %r8d,0x1c(%rsp)
13758(5): mov %r9,0x10(%rsp)
1375d(5): call 0xfffee363(%rip)
13762(3): test %rax,%rax
13765(3): mov %rax,%r13
13768(2): jz 0x38(%rip)
1376a(5): mov 0x8(%rsp),%rsi
1376f(3): mov %rbx,%rdx
13772(3): mov %rax,%rdi
13775(5): call 0xfffee31b(%rip)
1377a(5): lea 0x0(%r13,%rbx,1),%rdi
1377f(3): mov %r14,%rsi
13782(3): mov %rbp,%rdx
13785(3): mov %r13,%r14
13788(5): call 0xfffee308(%rip)
1378d(5): mov 0x10(%rsp),%rcx
13792(5): mov 0x1c(%rsp),%r8d
13797(5): jmp 0xffffff71(%rip)
1379c(4): nop 0x0(%rax)
137a0(7): mov $0xfffffffe,%rbx
137a7(2): jmp 0xffffff93(%rip)
137a9(7): nop 0x0(%rax)
137b0(3): mov %rsi,%r14
137b3(3): xor %r13d,%r13d
137b6(5): jmp 0xffffff52(%rip)

"rpl_regcomp" :
137c0(2): mov %edx,%eax
137c2(2): push %r14
137c4(2): push %r13
137c6(3): and $0x1,%eax
137c9(2): push %r12
137cb(1): push %rbp
137cc(3): cmp $0x1,%eax
137cf(1): push %rbx
137d0(3): mov %rdi,%rbx
137d3(3): sbb %r14,%r14
137d6(7): mov $0x0,(%rdi)
137dd(8): mov $0x0,0x8(%rdi)
137e5(7): and $0xfd4fca,%r14d
137ec(8): mov $0x0,0x10(%rdi)
137f4(5): mov $0x100,%edi
137f9(3): mov %rsi,%r12
137fc(2): mov %edx,%ebp
137fe(7): add $0x3b2fc,%r14
13805(5): call 0xfffee2bb(%rip)
1380a(3): test %rax,%rax
1380d(4): mov %rax,0x20(%rbx)
13811(6): jz 0xaf(%rip)
13817(3): mov %rbp,%r13
1381a(4): shl/sal $0x15,%r13
1381e(7): and $0x400000,%r13d
13825(3): or %r14,%r13
13828(4): test $0x4,%bpl
1382c(2): jnz 0x64(%rip)
1382e(4): and $0x7f,0x38(%rbx)
13832(4): movzx 0x38(%rbx),%edx
13836(3): shr $0x3,%ebp
13839(3): mov %r12,%rdi
1383c(3): and $0x1,%ebp
1383f(8): mov $0x0,0x28(%rbx)
13847(3): shl/sal $0x4,%ebp
1384a(3): and $0xef,%edx
1384d(2): or %edx,%ebp
1384f(4): mov %bpl,0x38(%rbx)
13853(5): call 0xfffee12d(%rip)
13858(3): mov %r13,%rcx
1385b(3): mov %rax,%rdx
1385e(3): mov %r12,%rsi
13861(3): mov %rbx,%rdi
13864(5): call 0xffffe76c(%rip)
13869(3): cmp $0x10,%eax
1386c(2): mov %eax,%ebp
1386e(2): jz 0x3a(%rip)
13870(2): test %eax,%eax
13872(2): jnz 0x3b(%rip)
13874(3): mov %rbx,%rdi
13877(5): call 0xfffff8d9(%rip)
1387c(1): pop %rbx
1387d(2): mov %ebp,%eax
1387f(1): pop %rbp
13880(2): pop %r12
13882(2): pop %r13
13884(2): pop %r14
13886(1): ret near (%rsp)
13887(9): nop 0x0(%rax,%rax,1)
13890(4): and $0xffffffbf,%r13
13894(4): or $0x80,0x38(%rbx)
13898(7): or $0x100,%r13
1389f(2): jmp 0xffffff93(%rip)
138a1(7): nop 0x0(%rax)
138a8(5): mov $0x8,%ebp
138ad(4): mov 0x20(%rbx),%rdi
138b1(5): call 0xfffedfcf(%rip)
138b6(8): mov $0x0,0x20(%rbx)
138be(2): jmp 0xffffffbe(%rip)
138c0(5): mov $0xc,%ebp
138c5(1): pop %rbx
138c6(2): mov %ebp,%eax
138c8(1): pop %rbp
138c9(2): pop %r12
138cb(2): pop %r13
138cd(2): pop %r14
138cf(1): ret near (%rsp)

"rpl_regerror" :
138d0(2): push %r13
138d2(2): push %r12
138d4(1): push %rbp
138d5(1): push %rbx
138d6(4): sub $0x8,%rsp
138da(3): cmp $0x10,%edi
138dd(2): jnbe 0x63(%rip)
138df(7): lea 0x1c7a(%rip),%rax
138e6(3): movsxd %edi,%rdi
138e9(7): lea 0x1d10(%rip),%rsi
138f0(3): mov %rdx,%rbp
138f3(5): mov $0x5,%edx
138f8(3): mov %rcx,%r12
138fb(4): add 0x0(%rax,%rdi,8),%rsi
138ff(2): xor %edi,%edi
13901(5): call 0xfffee05f(%rip)
13906(3): mov %rax,%rdi
13909(3): mov %rax,%r13
1390c(5): call 0xfffee074(%rip)
13911(3): test %r12,%r12
13914(4): lea 0x1(%rax),%rbx
13918(2): jz 0x15(%rip)
1391a(3): cmp %r12,%rbx
1391d(3): mov %rbx,%rdx
13920(2): jnbe 0x28(%rip)
13922(3): mov %r13,%rsi
13925(3): mov %rbp,%rdi
13928(5): call 0xfffee168(%rip)
1392d(4): add $0x8,%rsp
13931(3): mov %rbx,%rax
13934(1): pop %rbx
13935(1): pop %rbp
13936(2): pop %r12
13938(2): pop %r13
1393a(1): ret near (%rsp)
1393b(5): nop 0x0(%rax,%rax,1)
13940(5): call 0xfffedf50(%rip)
13945(3): nop (%rax)
13948(5): lea 0xffffffff(%r12),%rdx
1394d(6): mov $0x0,0xffffffff(%rbp,%r12,1)
13953(2): jmp 0xffffffcf(%rip)

"rpl_regfree" :
13960(1): push %rbx
13961(3): mov %rdi,%rbx
13964(3): mov (%rdi),%rdi
13967(3): test %rdi,%rdi
1396a(2): jz 0x7(%rip)
1396c(5): call 0xffff37e4(%rip)
13971(4): mov 0x20(%rbx),%rdi
13975(7): mov $0x0,(%rbx)
1397c(8): mov $0x0,0x8(%rbx)
13984(5): call 0xfffedefc(%rip)
13989(4): mov 0x28(%rbx),%rdi
1398d(8): mov $0x0,0x20(%rbx)
13995(5): call 0xfffedeeb(%rip)
1399a(8): mov $0x0,0x28(%rbx)
139a2(1): pop %rbx
139a3(1): ret near (%rsp)

"rpl_regexec" :
139b0(7): test $0xfffffff8,%r8d
139b7(6): jnz 0x91(%rip)
139bd(2): push %r13
139bf(2): push %r12
139c1(3): mov %rdx,%r13
139c4(1): push %rbp
139c5(1): push %rbx
139c6(3): mov %rcx,%r12
139c9(3): mov %r8d,%ebx
139cc(3): mov %rdi,%rbp
139cf(4): sub $0x18,%rsp
139d3(4): test $0x4,%r8b
139d7(2): jnz 0x51(%rip)
139d9(3): mov %rsi,%rdi
139dc(5): mov %rsi,0x8(%rsp)
139e1(5): call 0xfffedf9f(%rip)
139e6(2): xor %ecx,%ecx
139e8(4): test $0x10,0x38(%rbp)
139ec(3): mov %rax,%rdx
139ef(5): mov 0x8(%rsp),%rsi
139f4(2): jz 0x42(%rip)
139f6(4): sub $0x8,%rsp
139fa(1): push %rbx
139fb(2): push $0x0
139fd(2): push $0x0
139ff(3): mov %rbp,%rdi
13a02(3): mov %rdx,%r9
13a05(3): mov %rdx,%r8
13a08(5): call 0xffffa438(%rip)
13a0d(4): add $0x20,%rsp
13a11(2): test %eax,%eax
13a13(3): setnz %al
13a16(4): add $0x18,%rsp
13a1a(1): pop %rbx
13a1b(3): movzx %al,%eax
13a1e(1): pop %rbp
13a1f(2): pop %r12
13a21(2): pop %r13
13a23(1): ret near (%rsp)
13a24(4): nop 0x0(%rax)
13a28(4): test $0x10,0x38(%rbp)
13a2c(3): mov (%rcx),%rcx
13a2f(5): mov 0x8(%r12),%rdx
13a34(2): jnz 0xffffffc2(%rip)
13a36(4): sub $0x8,%rsp
13a3a(1): push %rbx
13a3b(2): push %r12
13a3d(2): push %r13
13a3f(2): jmp 0xffffffc0(%rip)
13a41(7): nop 0x0(%rax)
13a48(5): mov $0x2,%eax
13a4d(1): ret near (%rsp)

"rpl_re_match" :
13a50(4): sub $0x8,%rsp
13a54(3): mov %rdx,%r9
13a57(2): push $0x1
13a59(2): push %r8
13a5b(3): xor %r8d,%r8d
13a5e(5): call 0xfffff7c2(%rip)
13a63(4): add $0x18,%rsp
13a67(1): ret near (%rsp)

"rpl_re_search" :
13a70(4): sub $0x8,%rsp
13a74(2): push $0x0
13a76(2): push %r9
13a78(3): mov %rdx,%r9
13a7b(5): call 0xfffff7a5(%rip)
13a80(4): add $0x18,%rsp
13a84(1): ret near (%rsp)

"rpl_re_match_2" :
13a90(4): sub $0x8,%rsp
13a94(2): push $0x1
13a96(4): push 0x20(%rsp)
13a9a(4): push 0x20(%rsp)
13a9e(2): push $0x0
13aa0(5): call 0xfffffc00(%rip)
13aa5(4): add $0x28,%rsp
13aa9(1): ret near (%rsp)

"rpl_re_search_2" :
13ab0(4): sub $0x8,%rsp
13ab4(2): push $0x0
13ab6(4): push 0x28(%rsp)
13aba(4): push 0x28(%rsp)
13abe(4): push 0x28(%rsp)
13ac2(5): call 0xfffffbde(%rip)
13ac7(4): add $0x28,%rsp
13acb(1): ret near (%rsp)

"rpl_re_set_registers" :
13ad0(3): test %rdx,%rdx
13ad3(2): jnz 0x25(%rip)
13ad5(4): and $0xf9,0x38(%rdi)
13ad9(7): mov $0x0,(%rsi)
13ae0(8): mov $0x0,0x10(%rsi)
13ae8(8): mov $0x0,0x8(%rsi)
13af0(1): ret near (%rsp)
13af1(7): nop 0x0(%rax)
13af8(4): movzx 0x38(%rdi),%eax
13afc(3): and $0xf9,%eax
13aff(3): or $0x2,%eax
13b02(3): mov %al,0x38(%rdi)
13b05(3): mov %rdx,(%rsi)
13b08(4): mov %rcx,0x8(%rsi)
13b0c(4): mov %r8,0x10(%rsi)
13b10(1): ret near (%rsp)

"close_stream" :
13b20(2): push %r12
13b22(1): push %rbp
13b23(3): mov %rdi,%rbp
13b26(1): push %rbx
13b27(5): call 0xfffeddb9(%rip)
13b2c(3): mov 0x0(%rbp),%ebx
13b2f(3): mov %rbp,%rdi
13b32(3): mov %rax,%r12
13b35(5): call 0x22b(%rip)
13b3a(3): and $0x20,%ebx
13b3d(2): test %ebx,%ebx
13b3f(2): jnz 0x19(%rip)
13b41(2): test %eax,%eax
13b43(2): jz 0xc(%rip)
13b45(3): test %r12,%r12
13b48(5): mov $0xffffffff,%eax
13b4d(2): jz 0x3b(%rip)
13b4f(1): pop %rbx
13b50(1): pop %rbp
13b51(2): pop %r12
13b53(1): ret near (%rsp)
13b54(4): nop 0x0(%rax)
13b58(2): test %eax,%eax
13b5a(2): jnz 0x1e(%rip)
13b5c(5): call 0xfffedd44(%rip)
13b61(6): mov $0x0,(%rax)
13b67(5): mov $0xffffffff,%eax
13b6c(1): pop %rbx
13b6d(1): pop %rbp
13b6e(2): pop %r12
13b70(1): ret near (%rsp)
13b71(7): nop 0x0(%rax)
13b78(1): pop %rbx
13b79(5): mov $0xffffffff,%eax
13b7e(1): pop %rbp
13b7f(2): pop %r12
13b81(1): ret near (%rsp)
13b82(6): nop 0x0(%rax,%rax,1)
13b88(5): call 0xfffedd18(%rip)
13b8d(3): cmp $0x9,(%rax)
13b90(1): pop %rbx
13b91(1): pop %rbp
13b92(2): pop %r12
13b94(3): setnz %al
13b97(3): movzx %al,%eax
13b9a(2): neg %eax
13b9c(1): ret near (%rsp)

"last_component" :
13ba0(3): movzx (%rdi),%edx
13ba3(3): mov %rdi,%rax
13ba6(3): cmp $0x2f,%dl
13ba9(2): jnz 0x13(%rip)
13bab(5): nop 0x0(%rax,%rax,1)
13bb0(4): add $0x1,%rax
13bb4(3): movzx (%rax),%edx
13bb7(3): cmp $0x2f,%dl
13bba(2): jz 0xfffffff6(%rip)
13bbc(2): test %dl,%dl
13bbe(2): jz 0x3c(%rip)
13bc0(3): mov %rax,%rcx
13bc3(2): xor %esi,%esi
13bc5(2): jmp 0x20(%rip)
13bc7(9): nop 0x0(%rax,%rax,1)
13bd0(3): test %sil,%sil
13bd3(2): jz 0x7(%rip)
13bd5(3): mov %rcx,%rax
13bd8(2): xor %esi,%esi
13bda(4): add $0x1,%rcx
13bde(3): movzx (%rcx),%edx
13be1(2): test %dl,%dl
13be3(2): jz 0x17(%rip)
13be5(3): cmp $0x2f,%dl
13be8(2): jnz 0xffffffe8(%rip)
13bea(4): add $0x1,%rcx
13bee(3): movzx (%rcx),%edx
13bf1(5): mov $0x1,%esi
13bf6(2): test %dl,%dl
13bf8(2): jnz 0xffffffed(%rip)
13bfa(2): REP ret near (%rsp)

"base_len" :
13c00(1): push %rbx
13c01(3): mov %rdi,%rbx
13c04(5): call 0xfffedd7c(%rip)
13c09(4): cmp $0x1,%rax
13c0d(2): jbe 0xd(%rip)
13c0f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
13c14(4): lea 0xffffffff(%rax),%rdx
13c18(2): jz 0x10(%rip)
13c1a(1): pop %rbx
13c1b(1): ret near (%rsp)
13c1c(4): nop 0x0(%rax)
13c20(3): mov %rax,%rdx
13c23(5): nop 0x0(%rax,%rax,1)
13c28(4): cmp $0x1,%rdx
13c2c(2): jz 0x14(%rip)
13c2e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
13c33(4): lea 0xffffffff(%rdx),%rax
13c37(2): jz 0xffffffe9(%rip)
13c39(3): mov %rdx,%rax
13c3c(1): pop %rbx
13c3d(1): ret near (%rsp)
13c3e(2): nop 
13c40(5): mov $0x1,%eax
13c45(1): pop %rbx
13c46(1): ret near (%rsp)

"fd_safer_flag" :
13c50(2): push %r13
13c52(2): push %r12
13c54(1): push %rbp
13c55(1): push %rbx
13c56(2): mov %edi,%ebx
13c58(4): sub $0x8,%rsp
13c5c(3): cmp $0x2,%edi
13c5f(2): jnbe 0x23(%rip)
13c61(5): call 0x2f(%rip)
13c66(3): mov %eax,%r12d
13c69(5): call 0xfffedc37(%rip)
13c6e(3): mov (%rax),%r13d
13c71(3): mov %rax,%rbp
13c74(2): mov %ebx,%edi
13c76(5): call 0xfffeddaa(%rip)
13c7b(3): mov %r12d,%ebx
13c7e(4): mov %r13d,0x0(%rbp)
13c82(4): add $0x8,%rsp
13c86(2): mov %ebx,%eax
13c88(1): pop %rbx
13c89(1): pop %rbp
13c8a(2): pop %r12
13c8c(2): pop %r13
13c8e(1): ret near (%rsp)

"dup_safer_flag" :
13c90(6): and $0x80000,%esi
13c96(5): mov $0x406,%eax
13c9b(5): mov $0x3,%edx
13ca0(3): cmovne %eax,%esi
13ca3(2): xor %eax,%eax
13ca5(5): jmp 0x13b(%rip)

"hard_locale" :
13cb0(4): sub $0x8,%rsp
13cb4(2): xor %esi,%esi
13cb6(5): call 0xfffede9a(%rip)
13cbb(3): mov %rax,%rdx
13cbe(5): mov $0x1,%eax
13cc3(3): test %rdx,%rdx
13cc6(2): jz 0x1f(%rip)
13cc8(7): lea 0x1ac1(%rip),%rdi
13ccf(5): mov $0x2,%ecx
13cd4(3): mov %rdx,%rsi
13cd7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
13cd9(3): setnbe %cl
13cdc(3): sbb $0x0,%cl
13cdf(2): xor %eax,%eax
13ce1(2): test %cl,%cl
13ce3(2): jnz 0xd(%rip)
13ce5(4): add $0x8,%rsp
13ce9(1): ret near (%rsp)
13cea(6): nop 0x0(%rax,%rax,1)
13cf0(7): lea 0x1a9b(%rip),%rdi
13cf7(5): mov $0x6,%ecx
13cfc(3): mov %rdx,%rsi
13cff(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
13d01(3): setnbe %al
13d04(2): sbb $0x0,%al
13d06(2): test %al,%al
13d08(3): setnz %al
13d0b(4): add $0x8,%rsp
13d0f(1): ret near (%rsp)

"locale_charset" :
13d10(4): sub $0x8,%rsp
13d14(5): mov $0xe,%edi
13d19(5): call 0xfffeddd7(%rip)
13d1e(3): test %rax,%rax
13d21(2): jz 0x1f(%rip)
13d23(3): cmp $0x0,(%rax)
13d26(7): lea 0x1a6b(%rip),%rdx
13d2d(4): cmove %rdx,%rax
13d31(4): add $0x8,%rsp
13d35(1): ret near (%rsp)
13d36(a): nop 0x0(%rax,%rax,1)
13d40(7): lea 0x1a51(%rip),%rax
13d47(4): add $0x8,%rsp
13d4b(1): ret near (%rsp)

"dup_safer" :
13d50(5): mov $0x3,%edx
13d55(2): xor %esi,%esi
13d57(2): xor %eax,%eax
13d59(5): jmp 0x87(%rip)

"rpl_fclose" :
13d60(2): push %r12
13d62(1): push %rbp
13d63(1): push %rbx
13d64(3): mov %rdi,%rbx
13d67(5): call 0xfffedd39(%rip)
13d6c(2): test %eax,%eax
13d6e(3): mov %rbx,%rdi
13d71(2): js 0x56(%rip)
13d73(5): call 0xfffedd9d(%rip)
13d78(2): test %eax,%eax
13d7a(2): jnz 0x2e(%rip)
13d7c(3): mov %rbx,%rdi
13d7f(5): call 0x2e1(%rip)
13d84(2): test %eax,%eax
13d86(2): jz 0x3e(%rip)
13d88(5): call 0xfffedb18(%rip)
13d8d(3): mov (%rax),%r12d
13d90(3): mov %rbx,%rdi
13d93(3): mov %rax,%rbp
13d96(5): call 0xfffedbaa(%rip)
13d9b(3): test %r12d,%r12d
13d9e(2): jnz 0x32(%rip)
13da0(1): pop %rbx
13da1(1): pop %rbp
13da2(2): pop %r12
13da4(1): ret near (%rsp)
13da5(3): nop (%rax)
13da8(3): mov %rbx,%rdi
13dab(5): call 0xfffedcf5(%rip)
13db0(2): xor %esi,%esi
13db2(5): mov $0x1,%edx
13db7(2): mov %eax,%edi
13db9(5): call 0xfffedc37(%rip)
13dbe(4): cmp $0xffffffff,%rax
13dc2(2): jnz 0xffffffba(%rip)
13dc4(3): mov %rbx,%rdi
13dc7(1): pop %rbx
13dc8(1): pop %rbp
13dc9(2): pop %r12
13dcb(5): jmp 0xfffedb75(%rip)
13dd0(4): mov %r12d,0x0(%rbp)
13dd4(5): mov $0xffffffff,%eax
13dd9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
13de0(2): push %r12
13de2(1): push %rbp
13de3(2): mov %edi,%ebp
13de5(1): push %rbx
13de6(4): sub $0x50,%rsp
13dea(9): mov $0x28,%rax
13df3(5): mov %rax,0x18(%rsp)
13df8(2): xor %eax,%eax
13dfa(5): lea 0x70(%rsp),%rax
13dff(2): test %esi,%esi
13e01(5): mov %rdx,0x30(%rsp)
13e06(5): mov %rcx,0x38(%rsp)
13e0b(5): mov %r8,0x40(%rsp)
13e10(5): mov %rax,0x8(%rsp)
13e15(5): lea 0x20(%rsp),%rax
13e1a(5): mov %r9,0x48(%rsp)
13e1f(7): mov $0x10,(%rsp)
13e26(5): mov %rax,0x10(%rsp)
13e2b(6): jz 0x207(%rip)
13e31(6): cmp $0x406,%esi
13e37(2): jnz 0x49(%rip)
13e39(5): mov 0x10(%rsp),%rax
13e3e(7): cmp $0x0,0x2075b3(%rip)
13e45(7): mov $0x18,(%rsp)
13e4c(4): mov 0x10(%rax),%r12d
13e50(3): mov %r12d,%edx
13e53(6): js 0x130(%rip)
13e59(2): xor %eax,%eax
13e5b(5): mov $0x406,%esi
13e60(5): call 0xfffedaa0(%rip)
13e65(2): test %eax,%eax
13e67(2): mov %eax,%ebx
13e69(6): js 0x18f(%rip)
13e6f(a): mov $0x1,0x20757f(%rip)
13e79(2): jmp 0x47(%rip)
13e7b(5): nop 0x0(%rax,%rax,1)
13e80(3): cmp $0xb,%esi
13e83(2): jz 0x2d(%rip)
13e85(2): jnle 0x5b(%rip)
13e87(3): cmp $0x4,%esi
13e8a(6): jz 0xd6(%rip)
13e90(6): jnle 0xc0(%rip)
13e96(3): cmp $0x2,%esi
13e99(6): jz 0xc7(%rip)
13e9f(2): jnle 0x11(%rip)
13ea1(3): cmp $0x1,%esi
13ea4(2): jnz 0x64(%rip)
13ea6(a): nop 0x0(%rax,%rax,1)
13eb0(2): mov %ebp,%edi
13eb2(2): xor %eax,%eax
13eb4(5): call 0xfffeda4c(%rip)
13eb9(2): mov %eax,%ebx
13ebb(5): nop 0x0(%rax,%rax,1)
13ec0(5): mov 0x18(%rsp),%rcx
13ec5(9): xor $0x28,%rcx
13ece(2): mov %ebx,%eax
13ed0(6): jnz 0x15d(%rip)
13ed6(4): add $0x50,%rsp
13eda(1): pop %rbx
13edb(1): pop %rbp
13edc(2): pop %r12
13ede(1): ret near (%rsp)
13edf(1): nop 
13ee0(6): cmp $0x407,%esi
13ee6(2): jnle 0x4a(%rip)
13ee8(6): cmp $0x406,%esi
13eee(2): jnl 0x72(%rip)
13ef0(6): cmp $0x401,%esi
13ef6(2): jz 0xffffffba(%rip)
13ef8(6): cmp $0x402,%esi
13efe(2): jz 0x62(%rip)
13f00(6): cmp $0x400,%esi
13f06(2): jz 0x5a(%rip)
13f08(3): mov (%rsp),%eax
13f0b(3): cmp $0x2f,%eax
13f0e(6): jnbe 0x13c(%rip)
13f14(5): add 0x10(%rsp),%rax
13f19(3): mov (%rax),%rdx
13f1c(2): mov %ebp,%edi
13f1e(2): xor %eax,%eax
13f20(5): call 0xfffed9e0(%rip)
13f25(2): mov %eax,%ebx
13f27(2): jmp 0xffffff99(%rip)
13f29(7): nop 0x0(%rax)
13f30(6): cmp $0x409,%esi
13f36(2): jz 0x2a(%rip)
13f38(6): jl 0xffffff78(%rip)
13f3e(6): cmp $0x40a,%esi
13f44(2): jnz 0xffffffc4(%rip)
13f46(5): jmp 0xffffff6a(%rip)
13f4b(5): nop 0x0(%rax,%rax,1)
13f50(3): cmp $0x9,%esi
13f53(6): jz 0xffffff5d(%rip)
13f59(2): jnle 0x7(%rip)
13f5b(3): cmp $0x8,%esi
13f5e(2): jnz 0xffffffaa(%rip)
13f60(3): mov (%rsp),%eax
13f63(3): cmp $0x2f,%eax
13f66(6): jnbe 0xee(%rip)
13f6c(5): add 0x10(%rsp),%rax
13f71(2): mov (%rax),%edx
13f73(2): mov %ebp,%edi
13f75(2): xor %eax,%eax
13f77(5): call 0xfffed989(%rip)
13f7c(2): mov %eax,%ebx
13f7e(5): jmp 0xffffff42(%rip)
13f83(2): xor %esi,%esi
13f85(2): xor %eax,%eax
13f87(5): call 0xfffed979(%rip)
13f8c(2): test %eax,%eax
13f8e(2): mov %eax,%ebx
13f90(6): js 0xffffff30(%rip)
13f96(7): cmp $0xff,0x20745b(%rip)
13f9d(6): jnz 0xffffff23(%rip)
13fa3(2): xor %eax,%eax
13fa5(5): mov $0x1,%esi
13faa(2): mov %ebx,%edi
13fac(5): call 0xfffed954(%rip)
13fb1(2): test %eax,%eax
13fb3(2): js 0x1e(%rip)
13fb5(3): or $0x1,%eax
13fb8(5): mov $0x2,%esi
13fbd(2): mov %ebx,%edi
13fbf(2): mov %eax,%edx
13fc1(2): xor %eax,%eax
13fc3(5): call 0xfffed93d(%rip)
13fc8(3): cmp $0xff,%eax
13fcb(6): jnz 0xfffffef5(%rip)
13fd1(5): call 0xfffed8cf(%rip)
13fd6(3): mov (%rax),%r12d
13fd9(3): mov %rax,%rbp
13fdc(2): mov %ebx,%edi
13fde(5): call 0xfffeda42(%rip)
13fe3(5): mov $0xffffffff,%ebx
13fe8(4): mov %r12d,0x0(%rbp)
13fec(5): jmp 0xfffffed4(%rip)
13ff1(7): nop 0x0(%rax)
13ff8(5): call 0xfffed8a8(%rip)
13ffd(3): cmp $0x16,(%rax)
14000(6): jnz 0xfffffe6f(%rip)
14006(2): xor %esi,%esi
14008(2): xor %eax,%eax
1400a(3): mov %r12d,%edx
1400d(2): mov %ebp,%edi
1400f(5): call 0xfffed8f1(%rip)
14014(2): test %eax,%eax
14016(2): mov %eax,%ebx
14018(6): js 0xfffffea8(%rip)
1401e(a): mov $0xffffffff,0x2073d0(%rip)
14028(5): jmp 0xffffff7b(%rip)
1402d(5): call 0xfffed963(%rip)
14032(5): mov 0x10(%rsp),%rax
14037(2): xor %esi,%esi
14039(3): mov 0x10(%rax),%edx
1403c(2): xor %eax,%eax
1403e(5): call 0xfffed8c2(%rip)
14043(2): mov %eax,%ebx
14045(5): jmp 0xfffffe7b(%rip)
1404a(5): mov 0x8(%rsp),%rax
1404f(5): jmp 0xfffffeca(%rip)
14054(5): mov 0x8(%rsp),%rax
14059(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
14060(3): test %rdi,%rdi
14063(1): push %rbx
14064(3): mov %rdi,%rbx
14067(2): jz 0x13(%rip)
14069(5): call 0xfffedaa7(%rip)
1406e(2): test %eax,%eax
14070(2): jz 0xa(%rip)
14072(6): test $0x100,(%rbx)
14078(2): jnz 0x10(%rip)
1407a(3): mov %rbx,%rdi
1407d(1): pop %rbx
1407e(5): jmp 0xfffeda62(%rip)
14083(5): nop 0x0(%rax,%rax,1)
14088(3): mov %rbx,%rdi
1408b(5): mov $0x1,%edx
14090(2): xor %esi,%esi
14092(5): call 0xffff178e(%rip)
14097(3): mov %rbx,%rdi
1409a(1): pop %rbx
1409b(5): jmp 0xfffeda45(%rip)

"__libc_csu_init" :
140a0(2): push %r15
140a2(2): push %r14
140a4(3): mov %rdx,%r15
140a7(2): push %r13
140a9(2): push %r12
140ab(7): lea 0x2049be(%rip),%r12
140b2(1): push %rbp
140b3(7): lea 0x2049be(%rip),%rbp
140ba(1): push %rbx
140bb(3): mov %edi,%r13d
140be(3): mov %rsi,%r14
140c1(3): sub %r12,%rbp
140c4(4): sub $0x8,%rsp
140c8(4): sar $0x3,%rbp
140cc(5): call 0xfffed76c(%rip)
140d1(3): test %rbp,%rbp
140d4(2): jz 0x22(%rip)
140d6(2): xor %ebx,%ebx
140d8(8): nop 0x0(%rax,%rax,1)
140e0(3): mov %r15,%rdx
140e3(3): mov %r14,%rsi
140e6(3): mov %r13d,%edi
140e9(4): call 0x0(%r12,%rbx,8)
140ed(4): add $0x1,%rbx
140f1(3): cmp %rbx,%rbp
140f4(2): jnz 0xffffffec(%rip)
140f6(4): add $0x8,%rsp
140fa(1): pop %rbx
140fb(1): pop %rbp
140fc(2): pop %r12
140fe(2): pop %r13
14100(2): pop %r14
14102(2): pop %r15
14104(1): ret near (%rsp)

"atexit" :
14120(7): mov 0x204ee1(%rip),%rdx
14127(2): xor %esi,%esi
14129(5): jmp 0xfffedac7(%rip)

"_fini" :
14130(4): sub $0x8,%rsp
14134(4): add $0x8,%rsp
14138(1): ret near (%rsp)

