
"endgrent@plt" :
1600(6): jmp 0x2077fa(%rip)
1606(5): push $0x0

"getenv@plt" :
1610(6): jmp 0x2077f2(%rip)
1616(5): push $0x1

"free@plt" :
1620(6): jmp 0x2077ea(%rip)
1626(5): push $0x2

"abort@plt" :
1630(6): jmp 0x2077e2(%rip)
1636(5): push $0x3

"__errno_location@plt" :
1640(6): jmp 0x2077da(%rip)
1646(5): push $0x4

"strncmp@plt" :
1650(6): jmp 0x2077d2(%rip)
1656(5): push $0x5

"_exit@plt" :
1660(6): jmp 0x2077ca(%rip)
1666(5): push $0x6

"__fpending@plt" :
1670(6): jmp 0x2077c2(%rip)
1676(5): push $0x7

"textdomain@plt" :
1680(6): jmp 0x2077ba(%rip)
1686(5): push $0x8

"fclose@plt" :
1690(6): jmp 0x2077b2(%rip)
1696(5): push $0x9

"getpwuid@plt" :
16a0(6): jmp 0x2077aa(%rip)
16a6(5): push $0xa

"bindtextdomain@plt" :
16b0(6): jmp 0x2077a2(%rip)
16b6(5): push $0xb

"dcgettext@plt" :
16c0(6): jmp 0x20779a(%rip)
16c6(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
16d0(6): jmp 0x207792(%rip)
16d6(5): push $0xd

"strlen@plt" :
16e0(6): jmp 0x20778a(%rip)
16e6(5): push $0xe

"__stack_chk_fail@plt" :
16f0(6): jmp 0x207782(%rip)
16f6(5): push $0xf

"getuid@plt" :
1700(6): jmp 0x20777a(%rip)
1706(5): push $0x10

"getopt_long@plt" :
1710(6): jmp 0x207772(%rip)
1716(5): push $0x11

"mbrtowc@plt" :
1720(6): jmp 0x20776a(%rip)
1726(5): push $0x12

"strchr@plt" :
1730(6): jmp 0x207762(%rip)
1736(5): push $0x13

"getgrgid@plt" :
1740(6): jmp 0x20775a(%rip)
1746(5): push $0x14

"__overflow@plt" :
1750(6): jmp 0x207752(%rip)
1756(5): push $0x15

"strrchr@plt" :
1760(6): jmp 0x20774a(%rip)
1766(5): push $0x16

"lseek@plt" :
1770(6): jmp 0x207742(%rip)
1776(5): push $0x17

"__assert_fail@plt" :
1780(6): jmp 0x20773a(%rip)
1786(5): push $0x18

"memset@plt" :
1790(6): jmp 0x207732(%rip)
1796(5): push $0x19

"geteuid@plt" :
17a0(6): jmp 0x20772a(%rip)
17a6(5): push $0x1a

"memcmp@plt" :
17b0(6): jmp 0x207722(%rip)
17b6(5): push $0x1b

"fputs_unlocked@plt" :
17c0(6): jmp 0x20771a(%rip)
17c6(5): push $0x1c

"calloc@plt" :
17d0(6): jmp 0x207712(%rip)
17d6(5): push $0x1d

"getpwnam@plt" :
17e0(6): jmp 0x20770a(%rip)
17e6(5): push $0x1e

"memcpy@plt" :
17f0(6): jmp 0x207702(%rip)
17f6(5): push $0x1f

"getgrnam@plt" :
1800(6): jmp 0x2076fa(%rip)
1806(5): push $0x20

"fileno@plt" :
1810(6): jmp 0x2076f2(%rip)
1816(5): push $0x21

"getgid@plt" :
1820(6): jmp 0x2076ea(%rip)
1826(5): push $0x22

"getgroups@plt" :
1830(6): jmp 0x2076e2(%rip)
1836(5): push $0x23

"malloc@plt" :
1840(6): jmp 0x2076da(%rip)
1846(5): push $0x24

"fflush@plt" :
1850(6): jmp 0x2076d2(%rip)
1856(5): push $0x25

"nl_langinfo@plt" :
1860(6): jmp 0x2076ca(%rip)
1866(5): push $0x26

"endpwent@plt" :
1870(6): jmp 0x2076c2(%rip)
1876(5): push $0x27

"getegid@plt" :
1880(6): jmp 0x2076ba(%rip)
1886(5): push $0x28

"__freading@plt" :
1890(6): jmp 0x2076b2(%rip)
1896(5): push $0x29

"realloc@plt" :
18a0(6): jmp 0x2076aa(%rip)
18a6(5): push $0x2a

"setlocale@plt" :
18b0(6): jmp 0x2076a2(%rip)
18b6(5): push $0x2b

"__printf_chk@plt" :
18c0(6): jmp 0x20769a(%rip)
18c6(5): push $0x2c

"error@plt" :
18d0(6): jmp 0x207692(%rip)
18d6(5): push $0x2d

"getgrouplist@plt" :
18e0(6): jmp 0x20768a(%rip)
18e6(5): push $0x2e

"fseeko@plt" :
18f0(6): jmp 0x207682(%rip)
18f6(5): push $0x2f

"strtoul@plt" :
1900(6): jmp 0x20767a(%rip)
1906(5): push $0x30

"__cxa_atexit@plt" :
1910(6): jmp 0x207672(%rip)
1916(5): push $0x31

"exit@plt" :
1920(6): jmp 0x20766a(%rip)
1926(5): push $0x32

"fwrite@plt" :
1930(6): jmp 0x207662(%rip)
1936(5): push $0x33

"__fprintf_chk@plt" :
1940(6): jmp 0x20765a(%rip)
1946(5): push $0x34

"mbsinit@plt" :
1950(6): jmp 0x207652(%rip)
1956(5): push $0x35

"iswprint@plt" :
1960(6): jmp 0x20764a(%rip)
1966(5): push $0x36

"__ctype_b_loc@plt" :
1970(6): jmp 0x207642(%rip)
1976(5): push $0x37

".plt.got" :
1980(6): jmp 0x20765a(%rip)
1986(2): nop 

"_init" :
15d8(4): sub $0x8,%rsp
15dc(7): mov 0x2079ed(%rip),%rax
15e3(3): test %rax,%rax
15e6(2): jz 0x4(%rip)
15e8(2): call %rax
15ea(4): add $0x8,%rsp
15ee(1): ret near (%rsp)

"main" :
1990(2): push %r14
1992(2): push %r13
1994(2): push %r12
1996(1): push %rbp
1997(2): mov %edi,%ebp
1999(1): push %rbx
199a(3): mov (%rsi),%rdi
199d(3): mov %rsi,%rbx
19a0(7): lea 0x2070b9(%rip),%r12
19a7(5): call 0x13a9(%rip)
19ac(7): lea 0x5576(%rip),%rsi
19b3(5): mov $0x6,%edi
19b8(5): call 0xfffffef8(%rip)
19bd(7): lea 0x4ea0(%rip),%rsi
19c4(7): lea 0x4e70(%rip),%rdi
19cb(5): call 0xfffffce5(%rip)
19d0(7): lea 0x4e64(%rip),%rdi
19d7(5): call 0xfffffca9(%rip)
19dc(7): lea 0x126d(%rip),%rdi
19e3(5): call 0x481d(%rip)
19e8(8): nop 0x0(%rax,%rax,1)
19f0(7): lea 0x4ea4(%rip),%rdx
19f7(3): xor %r8d,%r8d
19fa(3): mov %r12,%rcx
19fd(3): mov %rbx,%rsi
1a00(2): mov %ebp,%edi
1a02(5): call 0xfffffd0e(%rip)
1a07(3): cmp $0xff,%eax
1a0a(6): jz 0xfa(%rip)
1a10(3): cmp $0x61,%eax
1a13(2): jz 0xffffffdd(%rip)
1a15(2): jle 0x2b(%rip)
1a17(3): cmp $0x72,%eax
1a1a(6): jz 0xce(%rip)
1a20(2): jnle 0x80(%rip)
1a22(3): cmp $0x67,%eax
1a25(6): jz 0xb3(%rip)
1a2b(3): cmp $0x6e,%eax
1a2e(6): jnz 0x412(%rip)
1a34(7): mov $0x1,0x2076dd(%rip)
1a3b(2): jmp 0xffffffb5(%rip)
1a3d(3): nop (%rax)
1a40(5): cmp $0xffffff7e,%eax
1a45(6): jz 0x405(%rip)
1a4b(2): jnle 0x75(%rip)
1a4d(5): cmp $0xffffff7d,%eax
1a52(6): jnz 0x3ee(%rip)
1a58(4): sub $0x8,%rsp
1a5c(7): mov 0x207645(%rip),%rdi
1a63(7): mov 0x2075ae(%rip),%rcx
1a6a(2): push $0x0
1a6c(7): lea 0x4e09(%rip),%r9
1a73(7): lea 0x4e12(%rip),%r8
1a7a(7): lea 0x4db6(%rip),%rdx
1a81(7): lea 0x4d36(%rip),%rsi
1a88(2): xor %eax,%eax
1a8a(5): call 0x3956(%rip)
1a8f(2): xor %edi,%edi
1a91(5): call 0xfffffe8f(%rip)
1a96(a): nop 0x0(%rax,%rax,1)
1aa0(3): cmp $0x75,%eax
1aa3(2): jz 0x55(%rip)
1aa5(3): cmp $0x7a,%eax
1aa8(6): jnz 0x398(%rip)
1aae(7): mov $0x1,0x207669(%rip)
1ab5(5): jmp 0xffffff3b(%rip)
1aba(6): nop 0x0(%rax,%rax,1)
1ac0(3): cmp $0x47,%eax
1ac3(6): jnz 0x354(%rip)
1ac9(7): mov $0x1,0x20764d(%rip)
1ad0(5): jmp 0xffffff20(%rip)
1ad5(3): nop (%rax)
1ad8(7): mov $0x1,0x20763d(%rip)
1adf(5): jmp 0xffffff11(%rip)
1ae4(4): nop 0x0(%rax)
1ae8(7): mov $0x1,0x20762c(%rip)
1aef(5): jmp 0xffffff01(%rip)
1af4(4): nop 0x0(%rax)
1af8(7): mov $0x1,0x20761b(%rip)
1aff(5): jmp 0xfffffef1(%rip)
1b04(7): movzx 0x207611(%rip),%ecx
1b0b(7): movzx 0x207608(%rip),%edx
1b12(8): movzx 0x207603(%rip),%r14d
1b1a(7): movsxd 0x20758f(%rip),%rax
1b21(3): mov %edx,%r12d
1b24(3): mov %ecx,%r13d
1b27(2): add %ecx,%edx
1b29(4): movzx %r14b,%ecx
1b2d(2): sub %eax,%ebp
1b2f(2): add %ecx,%edx
1b31(3): movsxd %ebp,%rbp
1b34(3): sub $0x1,%edx
1b37(6): jnle 0x34e(%rip)
1b3d(3): mov %r12d,%ecx
1b40(3): or %r13b,%cl
1b43(2): jnz 0xb(%rip)
1b45(3): test %r14b,%r14b
1b48(6): jz 0x189(%rip)
1b4e(3): test %rbp,%rbp
1b51(6): jz 0xf4(%rip)
1b57(4): cmp $0x1,%rbp
1b5b(3): movsxd %eax,%rdx
1b5e(7): lea 0x2075ab(%rip),%r12
1b65(7): setnbe 0x2075ad(%rip)
1b6c(3): add %rdx,%rbp
1b6f(2): jmp 0x56(%rip)
1b71(7): movsxd 0x207538(%rip),%rax
1b78(4): mov 0x0(%rbx,%rax,8),%rdi
1b7c(5): call 0x2ee4(%rip)
1b81(7): lea 0x4d2c(%rip),%rsi
1b88(5): mov $0x5,%edx
1b8d(2): xor %edi,%edi
1b8f(3): mov %rax,%r14
1b92(5): call 0xfffffb2e(%rip)
1b97(3): mov %rax,%r13
1b9a(5): call 0xfffffaa6(%rip)
1b9f(2): mov (%rax),%esi
1ba1(3): mov %r14,%rcx
1ba4(3): mov %r13,%rdx
1ba7(2): xor %edi,%edi
1ba9(2): xor %eax,%eax
1bab(5): call 0xfffffd25(%rip)
1bb0(7): mov $0x0,0x207459(%rip)
1bb7(7): add $0x1,0x2074f2(%rip)
1bbe(7): movsxd 0x2074eb(%rip),%rax
1bc5(3): movsxd %eax,%rdx
1bc8(3): cmp %rbp,%rdx
1bcb(6): jnb 0xf0(%rip)
1bd1(4): mov 0x0(%rbx,%rdx,8),%rdi
1bd5(3): cmp $0x0,(%rdi)
1bd8(2): jz 0xffffffa0(%rip)
1bda(3): xor %r8d,%r8d
1bdd(2): xor %ecx,%ecx
1bdf(2): xor %edx,%edx
1be1(3): mov %r12,%rsi
1be4(5): call 0x326c(%rip)
1be9(3): test %rax,%rax
1bec(2): jnz 0xffffff85(%rip)
1bee(6): mov 0x20751c(%rip),%edi
1bf4(5): call 0xfffffaac(%rip)
1bf9(3): test %rax,%rax
1bfc(3): mov %rax,%r13
1bff(6): jz 0xffffff72(%rip)
1c05(3): mov (%rax),%rdi
1c08(5): call 0x3b68(%rip)
1c0d(3): mov %rax,%r14
1c10(4): mov 0x10(%r13),%eax
1c14(3): mov %r14,%rdi
1c17(6): mov %eax,0x2074f3(%rip)
1c1d(6): mov %eax,0x2074f1(%rip)
1c23(4): mov 0x14(%r13),%eax
1c27(6): mov %eax,0x2074db(%rip)
1c2d(6): mov %eax,0x2074d9(%rip)
1c33(5): call 0x41d(%rip)
1c38(3): mov %r14,%rdi
1c3b(5): call 0xfffff9e5(%rip)
1c40(5): jmp 0xffffff77(%rip)
1c45(3): test %r12b,%r12b
1c48(6): jnz 0x119(%rip)
1c4e(3): or %r13d,%r14d
1c51(5): call 0xfffff9ef(%rip)
1c56(3): test %r14b,%r14b
1c59(3): mov %rax,%rbx
1c5c(6): jz 0x174(%rip)
1c62(5): call 0xfffff9de(%rip)
1c67(3): test %r13b,%r13b
1c6a(3): mov %rax,%rbx
1c6d(6): jz 0x18b(%rip)
1c73(5): call 0xfffff9cd(%rip)
1c78(6): mov $0x0,(%rax)
1c7e(3): mov %rax,%rbx
1c81(5): call 0xfffffbff(%rip)
1c86(6): mov %eax,0x20747c(%rip)
1c8c(3): add $0x1,%eax
1c8f(2): jnz 0xb(%rip)
1c91(3): cmp $0x0,(%rbx)
1c94(6): jnz 0x281(%rip)
1c9a(6): mov $0x0,(%rbx)
1ca0(5): call 0xfffffb80(%rip)
1ca5(6): mov %eax,0x207461(%rip)
1cab(3): add $0x1,%eax
1cae(6): jz 0xf5(%rip)
1cb4(2): xor %edi,%edi
1cb6(5): call 0x39a(%rip)
1cbb(7): movzx 0x20734e(%rip),%eax
1cc2(1): pop %rbx
1cc3(1): pop %rbp
1cc4(2): pop %r12
1cc6(3): xor $0x1,%eax
1cc9(3): movzx %al,%eax
1ccc(2): pop %r13
1cce(2): pop %r14
1cd0(1): ret near (%rsp)
1cd1(7): cmp $0x0,0x207443(%rip)
1cd8(6): jnz 0x1f5(%rip)
1cde(7): cmp $0x0,0x207433(%rip)
1ce5(6): jnz 0x1e8(%rip)
1ceb(7): cmp $0x0,0x20742c(%rip)
1cf2(6): jnz 0x1b7(%rip)
1cf8(3): test %rbp,%rbp
1cfb(6): jnz 0xfffffe5c(%rip)
1d01(7): lea 0x4b9c(%rip),%rdi
1d08(5): call 0xfffff908(%rip)
1d0d(3): test %r12b,%r12b
1d10(6): jz 0xffffff3e(%rip)
1d16(5): call 0xfffff92a(%rip)
1d1b(6): mov $0x0,(%rax)
1d21(3): mov %rax,%rbx
1d24(5): call 0xfffffa7c(%rip)
1d29(6): mov %eax,0x2073e1(%rip)
1d2f(3): add $0x1,%eax
1d32(2): jnz 0xffffff82(%rip)
1d34(3): cmp $0x0,(%rbx)
1d37(6): jz 0x11a(%rip)
1d3d(7): lea 0x4b81(%rip),%rsi
1d44(5): mov $0x5,%edx
1d49(2): xor %edi,%edi
1d4b(5): call 0xfffff975(%rip)
1d50(2): mov (%rbx),%esi
1d52(3): mov %rax,%rdx
1d55(5): mov $0x1,%edi
1d5a(2): xor %eax,%eax
1d5c(5): call 0xfffffb74(%rip)
1d61(7): cmp $0x0,0x2073b3(%rip)
1d68(2): jz 0xffffffae(%rip)
1d6a(5): call 0xfffff8d6(%rip)
1d6f(6): mov $0x0,(%rax)
1d75(3): mov %rax,%rbx
1d78(5): call 0xfffff988(%rip)
1d7d(6): mov %eax,0x207391(%rip)
1d83(3): add $0x1,%eax
1d86(6): jnz 0xffffff2e(%rip)
1d8c(3): cmp $0x0,(%rbx)
1d8f(6): jnz 0x162(%rip)
1d95(3): test %r12b,%r12b
1d98(6): jz 0xfffffedb(%rip)
1d9e(5): jmp 0xffffff16(%rip)
1da3(3): cmp $0x0,(%rbx)
1da6(6): jz 0xffffff0e(%rip)
1dac(7): lea 0x4b58(%rip),%rsi
1db3(5): mov $0x5,%edx
1db8(2): xor %edi,%edi
1dba(5): call 0xfffff906(%rip)
1dbf(2): mov (%rbx),%esi
1dc1(3): mov %rax,%rdx
1dc4(5): mov $0x1,%edi
1dc9(2): xor %eax,%eax
1dcb(5): call 0xfffffb05(%rip)
1dd0(6): mov $0x0,(%rax)
1dd6(5): call 0xfffff9ca(%rip)
1ddb(6): mov %eax,0x20732f(%rip)
1de1(3): add $0x1,%eax
1de4(6): jnz 0xfffffe7e(%rip)
1dea(3): cmp $0x0,(%rbx)
1ded(6): jz 0xfffffe75(%rip)
1df3(5): jmp 0xffffff4a(%rip)
1df8(6): mov $0x0,(%rax)
1dfe(5): call 0xfffff902(%rip)
1e03(6): mov %eax,0x20730b(%rip)
1e09(3): add $0x1,%eax
1e0c(6): jnz 0xfffffe67(%rip)
1e12(5): jmp 0xffffff7a(%rip)
1e17(3): cmp $0x5a,%eax
1e1a(2): jnz 0x26(%rip)
1e1c(7): lea 0x48a5(%rip),%rsi
1e23(5): mov $0x5,%edx
1e28(2): xor %edi,%edi
1e2a(5): call 0xfffff896(%rip)
1e2f(2): xor %esi,%esi
1e31(3): mov %rax,%rdx
1e34(5): mov $0x1,%edi
1e39(2): xor %eax,%eax
1e3b(5): call 0xfffffa95(%rip)
1e40(5): mov $0x1,%edi
1e45(5): call 0x7ab(%rip)
1e4a(2): xor %edi,%edi
1e4c(5): call 0x7a4(%rip)
1e51(7): cmp $0x0,0x2072c3(%rip)
1e58(6): jz 0xfffffe5c(%rip)
1e5e(5): call 0xfffff7e2(%rip)
1e63(6): mov $0x0,(%rax)
1e69(3): mov %rax,%rbx
1e6c(5): call 0xfffff894(%rip)
1e71(6): mov %eax,0x20729d(%rip)
1e77(3): add $0x1,%eax
1e7a(6): jnz 0xffffff1b(%rip)
1e80(5): jmp 0xffffff0c(%rip)
1e85(7): lea 0x4874(%rip),%rsi
1e8c(5): mov $0x5,%edx
1e91(2): xor %edi,%edi
1e93(5): call 0xfffff82d(%rip)
1e98(2): xor %esi,%esi
1e9a(3): mov %rax,%rdx
1e9d(5): mov $0x1,%edi
1ea2(2): xor %eax,%eax
1ea4(5): call 0xfffffa2c(%rip)
1ea9(7): lea 0x48b8(%rip),%rsi
1eb0(5): mov $0x5,%edx
1eb5(2): xor %edi,%edi
1eb7(5): call 0xfffff809(%rip)
1ebc(2): xor %esi,%esi
1ebe(3): mov %rax,%rdx
1ec1(5): mov $0x1,%edi
1ec6(2): xor %eax,%eax
1ec8(5): call 0xfffffa08(%rip)
1ecd(7): lea 0x485c(%rip),%rsi
1ed4(5): mov $0x5,%edx
1ed9(2): xor %edi,%edi
1edb(5): call 0xfffff7e5(%rip)
1ee0(2): xor %esi,%esi
1ee2(3): mov %rax,%rdx
1ee5(5): mov $0x1,%edi
1eea(2): xor %eax,%eax
1eec(5): call 0xfffff9e4(%rip)
1ef1(7): lea 0x49e6(%rip),%rsi
1ef8(5): mov $0x5,%edx
1efd(2): xor %edi,%edi
1eff(5): call 0xfffff7c1(%rip)
1f04(2): mov (%rbx),%esi
1f06(3): mov %rax,%rdx
1f09(5): mov $0x1,%edi
1f0e(2): xor %eax,%eax
1f10(5): call 0xfffff9c0(%rip)
1f15(7): lea 0x49d6(%rip),%rsi
1f1c(5): mov $0x5,%edx
1f21(2): xor %edi,%edi
1f23(5): call 0xfffff79d(%rip)
1f28(2): mov (%rbx),%esi
1f2a(3): mov %rax,%rdx
1f2d(5): mov $0x1,%edi
1f32(2): xor %eax,%eax
1f34(5): call 0xfffff99c(%rip)
1f39(7): nop 0x0(%rax)
1f40(2): xor %ebp,%ebp
1f42(3): mov %rdx,%r9
1f45(1): pop %rsi
1f46(3): mov %rsp,%rdx
1f49(4): and $0xfffffff0,%rsp
1f4d(1): push %rax
1f4e(1): push %rsp
1f4f(7): lea 0x429a(%rip),%r8
1f56(7): lea 0x4223(%rip),%rcx
1f5d(7): lea 0xfffffa2c(%rip),%rdi
1f64(6): call 0x20705e(%rip)
1f6a(1): hlt 

"_start" :
1f40(2): xor %ebp,%ebp
1f42(3): mov %rdx,%r9
1f45(1): pop %rsi
1f46(3): mov %rsp,%rdx
1f49(4): and $0xfffffff0,%rsp
1f4d(1): push %rax
1f4e(1): push %rsp
1f4f(7): lea 0x429a(%rip),%r8
1f56(7): lea 0x4223(%rip),%rcx
1f5d(7): lea 0xfffffa2c(%rip),%rdi
1f64(6): call 0x20705e(%rip)
1f6a(1): hlt 

"deregister_tm_clones" :
1f70(7): lea 0x207129(%rip),%rdi
1f77(1): push %rbp
1f78(7): lea 0x207121(%rip),%rax
1f7f(3): cmp %rdi,%rax
1f82(3): mov %rsp,%rbp
1f85(2): jz 0x1b(%rip)
1f87(7): mov 0x207032(%rip),%rax
1f8e(3): test %rax,%rax
1f91(2): jz 0xf(%rip)
1f93(1): pop %rbp
1f94(2): jmp %rax
1f96(a): nop 0x0(%rax,%rax,1)
1fa0(1): pop %rbp
1fa1(1): ret near (%rsp)

"register_tm_clones" :
1fb0(7): lea 0x2070e9(%rip),%rdi
1fb7(7): lea 0x2070e2(%rip),%rsi
1fbe(1): push %rbp
1fbf(3): sub %rdi,%rsi
1fc2(3): mov %rsp,%rbp
1fc5(4): sar $0x3,%rsi
1fc9(3): mov %rsi,%rax
1fcc(4): shr $0x3f,%rax
1fd0(3): add %rax,%rsi
1fd3(3): sar $0x1,%rsi
1fd6(2): jz 0x1a(%rip)
1fd8(7): mov 0x206ff9(%rip),%rax
1fdf(3): test %rax,%rax
1fe2(2): jz 0xe(%rip)
1fe4(1): pop %rbp
1fe5(2): jmp %rax
1fe7(9): nop 0x0(%rax,%rax,1)
1ff0(1): pop %rbp
1ff1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2000(7): cmp $0x0,0x2070c1(%rip)
2007(2): jnz 0x31(%rip)
2009(8): cmp $0x0,0x206fcf(%rip)
2011(1): push %rbp
2012(3): mov %rsp,%rbp
2015(2): jz 0xe(%rip)
2017(7): mov 0x206fea(%rip),%rdi
201e(5): call 0xfffff962(%rip)
2023(5): call 0xffffff4d(%rip)
2028(7): mov $0x1,0x207099(%rip)
202f(1): pop %rbp
2030(1): ret near (%rsp)
2031(7): nop 0x0(%rax)
2038(2): REP ret near (%rsp)

"frame_dummy" :
2040(1): push %rbp
2041(3): mov %rsp,%rbp
2044(1): pop %rbp
2045(5): jmp 0xffffff6b(%rip)

"print_stuff" :
2050(2): push %r14
2052(2): push %r13
2054(2): push %r12
2056(1): push %rbp
2057(1): push %rbx
2058(4): sub $0x10,%rsp
205c(9): mov $0x28,%rax
2065(5): mov %rax,0x8(%rsp)
206a(2): xor %eax,%eax
206c(7): cmp $0x0,0x2070a7(%rip)
2073(6): jz 0xb5(%rip)
2079(7): cmp $0x0,0x20709b(%rip)
2080(6): mov 0x20708a(%rip),%ebx
2086(2): jz 0x8(%rip)
2088(6): mov 0x207086(%rip),%ebx
208e(7): cmp $0x0,0x207083(%rip)
2095(6): jnz 0xcb(%rip)
209b(7): lea 0x20704e(%rip),%rsi
20a2(3): mov %rbx,%rdi
20a5(5): call 0xc5b(%rip)
20aa(3): mov %rax,%rdi
20ad(7): mov 0x206ff4(%rip),%rsi
20b4(5): call 0xfffff70c(%rip)
20b9(7): cmp $0x0,0x20705e(%rip)
20c0(7): mov 0x206fe1(%rip),%rdi
20c7(4): mov 0x28(%rdi),%rax
20cb(4): mov 0x30(%rdi),%rdx
20cf(6): jz 0x101(%rip)
20d5(7): cmp $0x0,0x207041(%rip)
20dc(2): jz 0xf(%rip)
20de(7): cmp $0x0,0x207034(%rip)
20e5(6): jnz 0xfb(%rip)
20eb(2): xor %esi,%esi
20ed(3): cmp %rdx,%rax
20f0(6): jnb 0x258(%rip)
20f6(4): lea 0x1(%rax),%rdx
20fa(4): mov %rdx,0x28(%rdi)
20fe(3): mov %sil,(%rax)
2101(5): mov 0x8(%rsp),%rax
2106(9): xor $0x28,%rax
210f(6): jnz 0x4cd(%rip)
2115(4): add $0x10,%rsp
2119(1): pop %rbx
211a(1): pop %rbp
211b(2): pop %r12
211d(2): pop %r13
211f(2): pop %r14
2121(1): ret near (%rsp)
2122(6): nop 0x0(%rax,%rax,1)
2128(7): cmp $0x0,0x206fed(%rip)
212f(2): jz 0x51(%rip)
2131(7): cmp $0x0,0x206fe3(%rip)
2138(7): movzx 0x206fd9(%rip),%esi
213f(6): mov 0x206fc3(%rip),%edi
2145(2): jz 0x8(%rip)
2147(6): mov 0x206fbf(%rip),%edi
214d(5): call 0x833(%rip)
2152(6): and %al,0x206eb8(%rip)
2158(5): jmp 0xffffff61(%rip)
215d(3): nop (%rax)
2160(2): mov %ebx,%edi
2162(5): call 0xfffff53e(%rip)
2167(3): test %rax,%rax
216a(6): jz 0x316(%rip)
2170(3): mov (%rax),%rdi
2173(5): jmp 0xffffff3a(%rip)
2178(8): nop 0x0(%rax,%rax,1)
2180(7): cmp $0x0,0x206f96(%rip)
2187(3): mov %rdi,%rbx
218a(6): mov 0x206f84(%rip),%esi
2190(6): jz 0x90(%rip)
2196(3): xor %r9d,%r9d
2199(7): cmp $0x0,0x206f7e(%rip)
21a0(8): movzx 0x206f70(%rip),%r8d
21a8(6): mov 0x206f5a(%rip),%ecx
21ae(6): mov 0x206f58(%rip),%edx
21b4(4): setz %r9b
21b8(4): shl/sal $0x5,%r9d
21bc(5): call 0x844(%rip)
21c1(6): and %al,0x206e49(%rip)
21c7(5): jmp 0xfffffef2(%rip)
21cc(4): nop 0x0(%rax)
21d0(5): mov $0xa,%esi
21d5(5): jmp 0xffffff18(%rip)
21da(6): nop 0x0(%rax,%rax,1)
21e0(3): cmp %rdx,%rax
21e3(6): jnb 0x3ed(%rip)
21e9(4): lea 0x1(%rax),%rdx
21ed(4): mov %rdx,0x28(%rdi)
21f1(3): mov $0x0,(%rax)
21f4(7): mov 0x206ead(%rip),%rdi
21fb(4): mov 0x28(%rdi),%rax
21ff(4): cmp 0x30(%rdi),%rax
2203(6): jnb 0x3bd(%rip)
2209(4): lea 0x1(%rax),%rdx
220d(4): mov %rdx,0x28(%rdi)
2211(3): mov $0x0,(%rax)
2214(5): jmp 0xfffffeed(%rip)
2219(7): nop 0x0(%rax)
2220(2): mov %esi,%edi
2222(7): lea 0x206ec7(%rip),%rsi
2229(5): call 0xad7(%rip)
222e(7): lea 0x4570(%rip),%rsi
2235(3): mov %rax,%rbp
2238(2): xor %edi,%edi
223a(5): mov $0x5,%edx
223f(5): call 0xfffff481(%rip)
2244(3): mov %rbp,%rdx
2247(3): mov %rax,%rsi
224a(5): mov $0x1,%edi
224f(2): xor %eax,%eax
2251(5): call 0xfffff66f(%rip)
2256(6): mov 0x206eb8(%rip),%edi
225c(5): call 0xfffff444(%rip)
2261(3): test %rax,%rax
2264(3): mov %rax,%rbp
2267(2): jz 0x18(%rip)
2269(3): mov (%rax),%rdx
226c(7): lea 0x4523(%rip),%rsi
2273(5): mov $0x1,%edi
2278(2): xor %eax,%eax
227a(5): call 0xfffff646(%rip)
227f(6): mov 0x206e87(%rip),%edi
2285(7): lea 0x206e44(%rip),%rsi
228c(5): call 0xa74(%rip)
2291(7): lea 0x4503(%rip),%rsi
2298(2): xor %edi,%edi
229a(3): mov %rax,%r12
229d(5): mov $0x5,%edx
22a2(5): call 0xfffff41e(%rip)
22a7(3): mov %r12,%rdx
22aa(3): mov %rax,%rsi
22ad(5): mov $0x1,%edi
22b2(2): xor %eax,%eax
22b4(5): call 0xfffff60c(%rip)
22b9(6): mov 0x206e4d(%rip),%edi
22bf(5): call 0xfffff481(%rip)
22c4(3): test %rax,%rax
22c7(2): jz 0x18(%rip)
22c9(3): mov (%rax),%rdx
22cc(7): lea 0x44c3(%rip),%rsi
22d3(5): mov $0x1,%edi
22d8(2): xor %eax,%eax
22da(5): call 0xfffff5e6(%rip)
22df(6): mov 0x206e2b(%rip),%edi
22e5(6): cmp 0x206e29(%rip),%edi
22eb(6): jnz 0xd5(%rip)
22f1(6): mov 0x206e11(%rip),%edi
22f7(6): cmp 0x206e0f(%rip),%edi
22fd(2): jnz 0x5b(%rip)
22ff(3): test %rbx,%rbx
2302(3): mov %rsp,%rdx
2305(6): jz 0x12b(%rip)
230b(3): test %rbp,%rbp
230e(5): mov $0xffffffff,%esi
2313(2): jz 0x5(%rip)
2315(3): mov 0x14(%rbp),%esi
2318(3): mov %rbx,%rdi
231b(5): call 0x34b5(%rip)
2320(2): test %eax,%eax
2322(3): mov %eax,%r12d
2325(6): js 0x25b(%rip)
232b(3): test %r12d,%r12d
232e(6): jnz 0x19a(%rip)
2334(4): mov (%rsp),%rdi
2338(5): call 0xfffff2e8(%rip)
233d(5): jmp 0xfffffd7c(%rip)
2342(6): nop 0x0(%rax,%rax,1)
2348(5): call 0xfffff408(%rip)
234d(5): jmp 0xfffffdb4(%rip)
2352(6): nop 0x0(%rax,%rax,1)
2358(7): lea 0x206d71(%rip),%rsi
235f(5): call 0x9a1(%rip)
2364(7): lea 0x4441(%rip),%rsi
236b(2): xor %edi,%edi
236d(3): mov %rax,%r12
2370(5): mov $0x5,%edx
2375(5): call 0xfffff34b(%rip)
237a(3): mov %r12,%rdx
237d(3): mov %rax,%rsi
2380(5): mov $0x1,%edi
2385(2): xor %eax,%eax
2387(5): call 0xfffff539(%rip)
238c(6): mov 0x206d76(%rip),%edi
2392(5): call 0xfffff3ae(%rip)
2397(3): test %rax,%rax
239a(6): jz 0xffffff65(%rip)
23a0(3): mov (%rax),%rdx
23a3(7): lea 0x43ec(%rip),%rsi
23aa(5): mov $0x1,%edi
23af(2): xor %eax,%eax
23b1(5): call 0xfffff50f(%rip)
23b6(5): jmp 0xffffff49(%rip)
23bb(5): nop 0x0(%rax,%rax,1)
23c0(7): lea 0x206d29(%rip),%rsi
23c7(5): call 0x939(%rip)
23cc(7): lea 0x43d0(%rip),%rsi
23d3(3): mov %rax,%rbp
23d6(2): xor %edi,%edi
23d8(5): mov $0x5,%edx
23dd(5): call 0xfffff2e3(%rip)
23e2(3): mov %rbp,%rdx
23e5(3): mov %rax,%rsi
23e8(5): mov $0x1,%edi
23ed(2): xor %eax,%eax
23ef(5): call 0xfffff4d1(%rip)
23f4(6): mov 0x206d16(%rip),%edi
23fa(5): call 0xfffff2a6(%rip)
23ff(3): test %rax,%rax
2402(3): mov %rax,%rbp
2405(6): jz 0xfffffeec(%rip)
240b(3): mov (%rax),%rdx
240e(7): lea 0x4381(%rip),%rsi
2415(5): mov $0x1,%edi
241a(2): xor %eax,%eax
241c(5): call 0xfffff4a4(%rip)
2421(5): jmp 0xfffffed0(%rip)
2426(a): nop 0x0(%rax,%rax,1)
2430(6): mov 0x206cd2(%rip),%esi
2436(2): xor %edi,%edi
2438(5): call 0x3398(%rip)
243d(2): test %eax,%eax
243f(3): mov %eax,%r12d
2442(6): jns 0xfffffee9(%rip)
2448(7): lea 0x3e21(%rip),%rsi
244f(5): mov $0x5,%edx
2454(2): xor %edi,%edi
2456(5): call 0xfffff26a(%rip)
245b(3): mov %rax,%rbx
245e(5): call 0xfffff1e2(%rip)
2463(2): mov (%rax),%esi
2465(3): mov %rbx,%rdx
2468(2): xor %edi,%edi
246a(2): xor %eax,%eax
246c(5): call 0xfffff464(%rip)
2471(7): mov $0x0,0x206b98(%rip)
2478(5): jmp 0xfffffc41(%rip)
247d(3): nop (%rax)
2480(7): lea 0x206c69(%rip),%rsi
2487(3): mov %rbx,%rdi
248a(5): call 0x876(%rip)
248f(7): lea 0x3d92(%rip),%rsi
2496(3): mov %rax,%rbp
2499(5): mov $0x5,%edx
249e(2): xor %edi,%edi
24a0(5): call 0xfffff220(%rip)
24a5(3): mov %rbp,%rcx
24a8(3): mov %rax,%rdx
24ab(2): xor %esi,%esi
24ad(2): xor %edi,%edi
24af(2): xor %eax,%eax
24b1(5): call 0xfffff41f(%rip)
24b6(7): mov $0x0,0x206b53(%rip)
24bd(5): jmp 0xfffffbde(%rip)
24c2(6): nop 0x0(%rax,%rax,1)
24c8(7): mov 0x206bd9(%rip),%rbx
24cf(7): lea 0x42df(%rip),%rsi
24d6(5): mov $0x5,%edx
24db(2): xor %edi,%edi
24dd(2): xor %ebp,%ebp
24df(7): lea 0x206bea(%rip),%r13
24e6(5): call 0xfffff1da(%rip)
24eb(3): mov %rbx,%rsi
24ee(3): mov %rax,%rdi
24f1(2): xor %ebx,%ebx
24f3(5): call 0xfffff2cd(%rip)
24f8(2): jmp 0x17(%rip)
24fa(6): nop 0x0(%rax,%rax,1)
2500(4): lea 0x1(%rax),%rdx
2504(4): mov %rdx,0x28(%rdi)
2508(3): mov $0x2c,(%rax)
250b(4): add $0x4,%rbx
250f(4): mov (%rsp),%rax
2513(7): mov 0x206b8e(%rip),%r14
251a(3): mov %r13,%rsi
251d(3): mov 0x0(%rax,%rbx,1),%edi
2520(5): call 0x7e0(%rip)
2525(3): mov %r14,%rsi
2528(3): mov %rax,%rdi
252b(5): call 0xfffff295(%rip)
2530(4): mov (%rsp),%rax
2534(3): mov 0x0(%rax,%rbx,1),%edi
2537(5): call 0xfffff209(%rip)
253c(3): test %rax,%rax
253f(2): jz 0x18(%rip)
2541(3): mov (%rax),%rdx
2544(7): lea 0x424b(%rip),%rsi
254b(5): mov $0x1,%edi
2550(2): xor %eax,%eax
2552(5): call 0xfffff36e(%rip)
2557(3): add $0x1,%ebp
255a(3): cmp %r12d,%ebp
255d(6): jz 0xfffffdd7(%rip)
2563(7): mov 0x206b3e(%rip),%rdi
256a(4): mov 0x28(%rdi),%rax
256e(4): cmp 0x30(%rdi),%rax
2572(2): jb 0xffffff8e(%rip)
2574(5): mov $0x2c,%esi
2579(5): call 0xfffff1d7(%rip)
257e(2): jmp 0xffffff8d(%rip)
2580(3): mov %rbx,%rdi
2583(5): call 0x24dd(%rip)
2588(7): lea 0x3cb9(%rip),%rsi
258f(2): xor %edi,%edi
2591(5): mov $0x5,%edx
2596(3): mov %rax,%rbp
2599(5): call 0xfffff127(%rip)
259e(3): mov %rax,%rbx
25a1(5): call 0xfffff09f(%rip)
25a6(2): mov (%rax),%esi
25a8(3): mov %rbp,%rcx
25ab(3): mov %rbx,%rdx
25ae(2): xor %edi,%edi
25b0(2): xor %eax,%eax
25b2(5): call 0xfffff31e(%rip)
25b7(5): jmp 0xfffffeba(%rip)
25bc(4): nop 0x0(%rax)
25c0(2): xor %esi,%esi
25c2(5): call 0xfffff18e(%rip)
25c7(5): jmp 0xfffffb3a(%rip)
25cc(4): nop 0x0(%rax)
25d0(2): xor %esi,%esi
25d2(5): call 0xfffff17e(%rip)
25d7(5): jmp 0xfffffc1d(%rip)
25dc(5): call 0xfffff114(%rip)

"usage" :
25f0(2): push %r13
25f2(2): push %r12
25f4(5): mov $0x5,%edx
25f9(1): push %rbp
25fa(1): push %rbx
25fb(2): mov %edi,%ebp
25fd(7): sub $0x88,%rsp
2604(7): mov 0x206b3d(%rip),%rbx
260b(9): mov $0x28,%rax
2614(5): mov %rax,0x78(%rsp)
2619(2): xor %eax,%eax
261b(2): test %edi,%edi
261d(2): jz 0x30(%rip)
261f(7): lea 0x3c7a(%rip),%rsi
2626(2): xor %edi,%edi
2628(5): call 0xfffff098(%rip)
262d(7): mov 0x206a8c(%rip),%rdi
2634(3): mov %rax,%rdx
2637(3): mov %rbx,%rcx
263a(5): mov $0x1,%esi
263f(2): xor %eax,%eax
2641(5): call 0xfffff2ff(%rip)
2646(2): mov %ebp,%edi
2648(5): call 0xfffff2d8(%rip)
264d(7): lea 0x3c74(%rip),%rsi
2654(2): xor %edi,%edi
2656(5): call 0xfffff06a(%rip)
265b(3): mov %rbx,%rdx
265e(3): mov %rax,%rsi
2661(5): mov $0x1,%edi
2666(2): xor %eax,%eax
2668(5): call 0xfffff258(%rip)
266d(7): mov 0x206a34(%rip),%rbx
2674(7): lea 0x3c75(%rip),%rsi
267b(5): mov $0x5,%edx
2680(2): xor %edi,%edi
2682(5): call 0xfffff03e(%rip)
2687(3): mov %rbx,%rsi
268a(3): mov %rax,%rdi
268d(5): call 0xfffff133(%rip)
2692(7): mov 0x206a0f(%rip),%rbx
2699(7): lea 0x3cc0(%rip),%rsi
26a0(5): mov $0x5,%edx
26a5(2): xor %edi,%edi
26a7(5): call 0xfffff019(%rip)
26ac(3): mov %rbx,%rsi
26af(3): mov %rax,%rdi
26b2(5): call 0xfffff10e(%rip)
26b7(7): mov 0x2069ea(%rip),%rbx
26be(7): lea 0x3eab(%rip),%rsi
26c5(5): mov $0x5,%edx
26ca(2): xor %edi,%edi
26cc(5): call 0xffffeff4(%rip)
26d1(3): mov %rbx,%rsi
26d4(3): mov %rax,%rdi
26d7(5): call 0xfffff0e9(%rip)
26dc(7): mov 0x2069c5(%rip),%rbx
26e3(7): lea 0x3eb6(%rip),%rsi
26ea(5): mov $0x5,%edx
26ef(2): xor %edi,%edi
26f1(5): call 0xffffefcf(%rip)
26f6(3): mov %rbx,%rsi
26f9(3): mov %rax,%rdi
26fc(5): call 0xfffff0c4(%rip)
2701(7): mov 0x2069a0(%rip),%rbx
2708(7): lea 0x3ec9(%rip),%rsi
270f(5): mov $0x5,%edx
2714(2): xor %edi,%edi
2716(5): call 0xffffefaa(%rip)
271b(3): mov %rbx,%rsi
271e(3): mov %rax,%rdi
2721(7): lea 0x4096(%rip),%rbx
2728(5): call 0xfffff098(%rip)
272d(7): lea 0x408d(%rip),%rax
2734(7): lea 0x40c7(%rip),%rcx
273b(9): mov $0x0,0x60(%rsp)
2744(9): mov $0x0,0x68(%rsp)
274d(3): mov %rsp,%rdx
2750(4): mov %rax,(%rsp)
2754(7): lea 0x4068(%rip),%rax
275b(5): mov %rcx,0x30(%rsp)
2760(7): lea 0x40a5(%rip),%rcx
2767(5): mov %rax,0x8(%rsp)
276c(7): lea 0x40c8(%rip),%rax
2773(5): mov %rcx,0x40(%rsp)
2778(7): lea 0x4097(%rip),%rcx
277f(5): mov %rax,0x10(%rsp)
2784(7): lea 0x4048(%rip),%rax
278b(5): mov %rcx,0x50(%rsp)
2790(5): mov %rax,0x18(%rsp)
2795(7): lea 0x404d(%rip),%rax
279c(5): mov %rax,0x20(%rsp)
27a1(7): lea 0x404b(%rip),%rax
27a8(5): mov %rax,0x28(%rsp)
27ad(5): mov %rax,0x38(%rsp)
27b2(5): mov %rax,0x48(%rsp)
27b7(5): mov %rax,0x58(%rsp)
27bc(4): nop 0x0(%rax)
27c0(4): add $0x10,%rdx
27c4(3): mov (%rdx),%rdi
27c7(3): test %rdi,%rdi
27ca(2): jz 0x15(%rip)
27cc(5): mov $0x3,%ecx
27d1(3): mov %rbx,%rsi
27d4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
27d6(3): setnbe %al
27d9(2): sbb $0x0,%al
27db(2): test %al,%al
27dd(2): jnz 0xffffffe3(%rip)
27df(4): mov 0x8(%rdx),%r12
27e3(2): xor %edi,%edi
27e5(5): mov $0x5,%edx
27ea(7): lea 0x402f(%rip),%rsi
27f1(3): test %r12,%r12
27f4(6): jz 0xc7(%rip)
27fa(5): call 0xffffeec6(%rip)
27ff(7): lea 0x3e1a(%rip),%rcx
2806(7): lea 0x402a(%rip),%rdx
280d(3): mov %rax,%rsi
2810(5): mov $0x1,%edi
2815(2): xor %eax,%eax
2817(5): call 0xfffff0a9(%rip)
281c(2): xor %esi,%esi
281e(5): mov $0x5,%edi
2823(5): call 0xfffff08d(%rip)
2828(3): test %rax,%rax
282b(2): jz 0x1e(%rip)
282d(7): lea 0x4011(%rip),%rsi
2834(5): mov $0x3,%edx
2839(3): mov %rax,%rdi
283c(5): call 0xffffee14(%rip)
2841(2): test %eax,%eax
2843(6): jnz 0x10d(%rip)
2849(7): lea 0x3ff9(%rip),%rsi
2850(2): xor %edi,%edi
2852(5): mov $0x5,%edx
2857(5): call 0xffffee69(%rip)
285c(7): lea 0x3f5b(%rip),%rcx
2863(7): lea 0x3db6(%rip),%rdx
286a(3): mov %rax,%rsi
286d(5): mov $0x1,%edi
2872(2): xor %eax,%eax
2874(5): call 0xfffff04c(%rip)
2879(3): cmp %rbx,%r12
287c(7): lea 0x3f5a(%rip),%rcx
2883(7): lea 0x469f(%rip),%rbx
288a(4): cmove %rcx,%rbx
288e(7): lea 0x3dfb(%rip),%rsi
2895(2): xor %edi,%edi
2897(5): mov $0x5,%edx
289c(5): call 0xffffee24(%rip)
28a1(3): mov %rbx,%rcx
28a4(3): mov %rax,%rsi
28a7(3): mov %r12,%rdx
28aa(5): mov $0x1,%edi
28af(2): xor %eax,%eax
28b1(5): call 0xfffff00f(%rip)
28b6(5): jmp 0xfffffd90(%rip)
28bb(5): call 0xffffee05(%rip)
28c0(7): lea 0x3d59(%rip),%rcx
28c7(7): lea 0x3f69(%rip),%rdx
28ce(3): mov %rax,%rsi
28d1(5): mov $0x1,%edi
28d6(2): xor %eax,%eax
28d8(5): call 0xffffefe8(%rip)
28dd(2): xor %esi,%esi
28df(5): mov $0x5,%edi
28e4(5): call 0xffffefcc(%rip)
28e9(3): test %rax,%rax
28ec(2): jz 0x1a(%rip)
28ee(7): lea 0x3f50(%rip),%rsi
28f5(5): mov $0x3,%edx
28fa(3): mov %rax,%rdi
28fd(5): call 0xffffed53(%rip)
2902(2): test %eax,%eax
2904(2): jnz 0x45(%rip)
2906(7): lea 0x3f3c(%rip),%rsi
290d(5): mov $0x5,%edx
2912(2): xor %edi,%edi
2914(7): lea 0x3ea3(%rip),%r12
291b(7): lea 0x3ebb(%rip),%rbx
2922(5): call 0xffffed9e(%rip)
2927(7): lea 0x3e90(%rip),%rcx
292e(7): lea 0x3ceb(%rip),%rdx
2935(3): mov %rax,%rsi
2938(5): mov $0x1,%edi
293d(2): xor %eax,%eax
293f(5): call 0xffffef81(%rip)
2944(5): jmp 0xffffff4a(%rip)
2949(7): lea 0x3e6e(%rip),%r12
2950(7): mov 0x206751(%rip),%r13
2957(7): lea 0x3cea(%rip),%rsi
295e(2): xor %edi,%edi
2960(5): mov $0x5,%edx
2965(5): call 0xffffed5b(%rip)
296a(3): mov %r13,%rsi
296d(3): mov %rax,%rdi
2970(5): call 0xffffee50(%rip)
2975(5): jmp 0xfffffed4(%rip)

"print_group" :
2980(1): push %rbp
2981(1): push %rbx
2982(2): mov %edi,%ebp
2984(5): mov $0x1,%ebx
2989(4): sub $0x8,%rsp
298d(3): test %sil,%sil
2990(2): jz 0x40(%rip)
2992(2): mov %ebp,%edi
2994(2): mov %esi,%ebx
2996(5): call 0xffffedaa(%rip)
299b(3): test %rax,%rax
299e(2): jz 0xa(%rip)
29a0(3): mov (%rax),%rdi
29a3(2): jmp 0x3f(%rip)
29a5(3): nop (%rax)
29a8(7): lea 0x3fa1(%rip),%rsi
29af(5): mov $0x5,%edx
29b4(2): xor %edi,%edi
29b6(2): xor %ebx,%ebx
29b8(5): call 0xffffed08(%rip)
29bd(3): mov %rbp,%rcx
29c0(3): mov %rax,%rdx
29c3(2): xor %esi,%esi
29c5(2): xor %edi,%edi
29c7(2): xor %eax,%eax
29c9(5): call 0xffffef07(%rip)
29ce(2): nop 
29d0(7): lea 0x206749(%rip),%rsi
29d7(3): mov %rbp,%rdi
29da(5): call 0x326(%rip)
29df(3): mov %rax,%rdi
29e2(7): mov 0x2066bf(%rip),%rsi
29e9(5): call 0xffffedd7(%rip)
29ee(4): add $0x8,%rsp
29f2(2): mov %ebx,%eax
29f4(1): pop %rbx
29f5(1): pop %rbp
29f6(1): ret near (%rsp)

"print_group_list" :
2a00(2): push %r15
2a02(2): push %r14
2a04(3): mov %rdi,%r14
2a07(2): push %r13
2a09(2): push %r12
2a0b(3): mov %r8d,%r13d
2a0e(1): push %rbp
2a0f(1): push %rbx
2a10(2): mov %edx,%ebp
2a12(3): mov %ecx,%r12d
2a15(4): sub $0x28,%rsp
2a19(9): mov $0x28,%rax
2a22(5): mov %rax,0x18(%rsp)
2a27(2): xor %eax,%eax
2a29(3): test %rdi,%rdi
2a2c(5): mov %r9b,0x7(%rsp)
2a31(6): jz 0x14f(%rip)
2a37(2): mov %esi,%edi
2a39(5): mov %r9d,0xc(%rsp)
2a3e(5): call 0xffffec62(%rip)
2a43(5): mov 0xc(%rsp),%r9d
2a48(3): test %rax,%rax
2a4b(3): mov %rax,%r15
2a4e(5): setnz 0x8(%rsp)
2a53(4): movzx %r13b,%r13d
2a57(2): mov %ebp,%edi
2a59(5): mov %r9d,0xc(%rsp)
2a5e(3): mov %r13d,%esi
2a61(5): call 0xffffff1f(%rip)
2a66(2): mov %eax,%ebx
2a68(2): test %al,%al
2a6a(5): movzx 0x8(%rsp),%eax
2a6f(3): cmove %ebx,%eax
2a72(3): cmp %r12d,%ebp
2a75(2): mov %eax,%ebx
2a77(2): jz 0x3c(%rip)
2a79(7): mov 0x206628(%rip),%rdi
2a80(5): mov 0xc(%rsp),%r9d
2a85(4): mov 0x28(%rdi),%rax
2a89(4): cmp 0x30(%rdi),%rax
2a8d(6): jnb 0x183(%rip)
2a93(4): lea 0x1(%rax),%rdx
2a97(4): mov %rdx,0x28(%rdi)
2a9b(3): mov %r9b,(%rax)
2a9e(3): mov %r13d,%esi
2aa1(3): mov %r12d,%edi
2aa4(5): call 0xfffffedc(%rip)
2aa9(2): test %al,%al
2aab(5): mov $0x0,%eax
2ab0(3): cmove %eax,%ebx
2ab3(3): test %r15,%r15
2ab6(3): mov %r12d,%esi
2ab9(2): jz 0x6(%rip)
2abb(4): mov 0x14(%r15),%esi
2abf(5): lea 0x10(%rsp),%rdx
2ac4(3): mov %r14,%rdi
2ac7(5): call 0x2d09(%rip)
2acc(2): test %eax,%eax
2ace(6): js 0xc2(%rip)
2ad4(5): mov 0x10(%rsp),%rdi
2ad9(2): jz 0x75(%rip)
2adb(3): sub $0x1,%eax
2ade(3): xor %r15d,%r15d
2ae1(8): lea 0x4(,%rax,4),%r14
2ae9(5): movzx 0x7(%rsp),%eax
2aee(4): mov %eax,0x8(%rsp)
2af2(6): nop 0x0(%rax,%rax,1)
2af8(4): mov 0x0(%rdi,%r15,1),%eax
2afc(2): cmp %ebp,%eax
2afe(2): jz 0x47(%rip)
2b00(3): cmp %r12d,%eax
2b03(2): jz 0x42(%rip)
2b05(7): mov 0x20659c(%rip),%rdi
2b0c(4): mov 0x28(%rdi),%rax
2b10(4): cmp 0x30(%rdi),%rax
2b14(6): jnb 0xbc(%rip)
2b1a(4): lea 0x1(%rax),%rcx
2b1e(4): mov %rcx,0x28(%rdi)
2b22(5): movzx 0x7(%rsp),%ecx
2b27(2): mov %cl,(%rax)
2b29(5): mov 0x10(%rsp),%rax
2b2e(3): mov %r13d,%esi
2b31(4): mov 0x0(%rax,%r15,1),%edi
2b35(5): call 0xfffffe4b(%rip)
2b3a(2): test %al,%al
2b3c(5): mov 0x10(%rsp),%rdi
2b41(2): jnz 0x4(%rip)
2b43(2): xor %ebx,%ebx
2b45(4): add $0x4,%r15
2b49(3): cmp %r15,%r14
2b4c(2): jnz 0xffffffac(%rip)
2b4e(5): call 0xffffead2(%rip)
2b53(5): mov 0x18(%rsp),%rdx
2b58(9): xor $0x28,%rdx
2b61(2): mov %ebx,%eax
2b63(6): jnz 0xbb(%rip)
2b69(4): add $0x28,%rsp
2b6d(1): pop %rbx
2b6e(1): pop %rbp
2b6f(2): pop %r12
2b71(2): pop %r13
2b73(2): pop %r14
2b75(2): pop %r15
2b77(1): ret near (%rsp)
2b78(8): nop 0x0(%rax,%rax,1)
2b80(3): xor %r15d,%r15d
2b83(5): mov $0x1,0x8(%rsp)
2b88(5): jmp 0xfffffecb(%rip)
2b8d(3): nop (%rax)
2b90(5): call 0xffffeab0(%rip)
2b95(3): test %r14,%r14
2b98(3): mov %rax,%rbx
2b9b(2): jz 0x45(%rip)
2b9d(3): mov %r14,%rdi
2ba0(5): call 0x1ec0(%rip)
2ba5(7): lea 0x369c(%rip),%rsi
2bac(5): mov $0x5,%edx
2bb1(2): xor %edi,%edi
2bb3(3): mov %rax,%rbp
2bb6(5): call 0xffffeb0a(%rip)
2bbb(2): mov (%rbx),%esi
2bbd(3): mov %rax,%rdx
2bc0(3): mov %rbp,%rcx
2bc3(2): xor %edi,%edi
2bc5(2): xor %eax,%eax
2bc7(2): xor %ebx,%ebx
2bc9(5): call 0xffffed07(%rip)
2bce(2): jmp 0xffffff85(%rip)
2bd0(4): mov 0x8(%rsp),%esi
2bd4(5): call 0xffffeb7c(%rip)
2bd9(5): jmp 0xffffff50(%rip)
2bde(2): nop 
2be0(7): lea 0x3689(%rip),%rsi
2be7(5): mov $0x5,%edx
2bec(2): xor %edi,%edi
2bee(5): call 0xffffead2(%rip)
2bf3(2): mov (%rbx),%esi
2bf5(3): mov %rax,%rdx
2bf8(2): xor %edi,%edi
2bfa(2): xor %eax,%eax
2bfc(2): xor %ebx,%ebx
2bfe(5): call 0xffffecd2(%rip)
2c03(5): jmp 0xffffff50(%rip)
2c08(8): nop 0x0(%rax,%rax,1)
2c10(4): movzx %r9b,%esi
2c14(5): call 0xffffeb3c(%rip)
2c19(5): jmp 0xfffffe85(%rip)
2c1e(5): call 0xffffead2(%rip)

"close_stdout_set_file_name" :
2c30(7): mov %rdi,0x206509(%rip)
2c37(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2c40(7): mov %dil,0x2064f1(%rip)
2c47(1): ret near (%rsp)

"close_stdout" :
2c50(1): push %rbp
2c51(1): push %rbx
2c52(4): sub $0x8,%rsp
2c56(7): mov 0x20644b(%rip),%rdi
2c5d(5): call 0x3053(%rip)
2c62(2): test %eax,%eax
2c64(2): jz 0x18(%rip)
2c66(5): call 0xffffe9da(%rip)
2c6b(7): cmp $0x0,0x2064c6(%rip)
2c72(3): mov %rax,%rbx
2c75(2): jz 0x1e(%rip)
2c77(3): cmp $0x20,(%rax)
2c7a(2): jnz 0x19(%rip)
2c7c(7): mov 0x20643d(%rip),%rdi
2c83(5): call 0x302d(%rip)
2c88(2): test %eax,%eax
2c8a(2): jnz 0x48(%rip)
2c8c(4): add $0x8,%rsp
2c90(1): pop %rbx
2c91(1): pop %rbp
2c92(1): ret near (%rsp)
2c93(7): lea 0x3cdd(%rip),%rsi
2c9a(2): xor %edi,%edi
2c9c(5): mov $0x5,%edx
2ca1(5): call 0xffffea1f(%rip)
2ca6(7): mov 0x206493(%rip),%rdi
2cad(3): mov %rax,%rbp
2cb0(3): test %rdi,%rdi
2cb3(2): jz 0x2a(%rip)
2cb5(5): call 0x1bab(%rip)
2cba(2): mov (%rbx),%esi
2cbc(7): lea 0x3cc0(%rip),%rdx
2cc3(3): mov %rax,%rcx
2cc6(3): mov %rbp,%r8
2cc9(2): xor %edi,%edi
2ccb(2): xor %eax,%eax
2ccd(5): call 0xffffec03(%rip)
2cd2(6): mov 0x206348(%rip),%edi
2cd8(5): call 0xffffe988(%rip)
2cdd(2): mov (%rbx),%esi
2cdf(7): lea 0x3ca1(%rip),%rdx
2ce6(3): mov %rax,%rcx
2ce9(2): xor %edi,%edi
2ceb(2): xor %eax,%eax
2ced(5): call 0xffffebe3(%rip)
2cf2(2): jmp 0xffffffe0(%rip)

"umaxtostr" :
2d00(4): lea 0x14(%rsi),%rcx
2d04(4): mov $0x0,0x14(%rsi)
2d08(a): mov $0x-3689348814741910323,%rsi
2d12(6): nop 0x0(%rax,%rax,1)
2d18(3): mov %rdi,%rax
2d1b(4): sub $0x1,%rcx
2d1f(3): mul %rax,%rsi,%rdx
2d22(4): shr $0x3,%rdx
2d26(4): lea 0x0(%rdx,%rdx,4),%rax
2d2a(3): add %rax,%rax
2d2d(3): sub %rax,%rdi
2d30(3): add $0x30,%edi
2d33(3): test %rdx,%rdx
2d36(3): mov %dil,(%rcx)
2d39(3): mov %rdx,%rdi
2d3c(2): jnz 0xffffffdc(%rip)
2d3e(3): mov %rcx,%rax
2d41(1): ret near (%rsp)

"set_program_name" :
2d50(3): test %rdi,%rdi
2d53(1): push %rbx
2d54(2): jz 0x79(%rip)
2d56(5): mov $0x2f,%esi
2d5b(3): mov %rdi,%rbx
2d5e(5): call 0xffffea02(%rip)
2d63(3): test %rax,%rax
2d66(2): jz 0x57(%rip)
2d68(4): lea 0x1(%rax),%r8
2d6c(3): mov %r8,%rdx
2d6f(3): sub %rbx,%rdx
2d72(4): cmp $0x6,%rdx
2d76(2): jle 0x47(%rip)
2d78(4): lea 0xfffffffa(%rax),%rsi
2d7c(7): lea 0x3c45(%rip),%rdi
2d83(5): mov $0x7,%ecx
2d88(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d8a(3): setnbe %dl
2d8d(3): sbb $0x0,%dl
2d90(2): test %dl,%dl
2d92(2): jnz 0x2b(%rip)
2d94(7): lea 0x3c35(%rip),%rdi
2d9b(5): mov $0x3,%ecx
2da0(3): mov %r8,%rsi
2da3(3): mov %r8,%rbx
2da6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2da8(3): setnbe %dl
2dab(3): sbb $0x0,%dl
2dae(2): test %dl,%dl
2db0(2): jnz 0xd(%rip)
2db2(4): lea 0x4(%rax),%rbx
2db6(7): mov %rbx,0x2062e3(%rip)
2dbd(7): mov %rbx,0x206384(%rip)
2dc4(7): mov %rbx,0x2062ed(%rip)
2dcb(1): pop %rbx
2dcc(1): ret near (%rsp)
2dcd(7): mov 0x2062ec(%rip),%rcx
2dd4(7): lea 0x3bb5(%rip),%rdi
2ddb(5): mov $0x37,%edx
2de0(5): mov $0x1,%esi
2de5(5): call 0xffffeb4b(%rip)
2dea(5): call 0xffffe846(%rip)

"gettext_quote.part.1" :
2df0(1): push %rbp
2df1(1): push %rbx
2df2(3): mov %rdi,%rbp
2df5(2): mov %esi,%ebx
2df7(4): sub $0x8,%rsp
2dfb(5): call 0x2f95(%rip)
2e00(3): movzx (%rax),%edx
2e03(3): and $0xdf,%edx
2e06(3): cmp $0x55,%dl
2e09(2): jz 0x77(%rip)
2e0b(3): cmp $0x47,%dl
2e0e(2): jz 0x22(%rip)
2e10(7): lea 0x3bcc(%rip),%rax
2e17(7): lea 0x3bc7(%rip),%rdx
2e1e(3): cmp $0x9,%ebx
2e21(4): cmovne %rdx,%rax
2e25(4): add $0x8,%rsp
2e29(1): pop %rbx
2e2a(1): pop %rbp
2e2b(1): ret near (%rsp)
2e2c(4): nop 0x0(%rax)
2e30(4): movzx 0x1(%rax),%edx
2e34(3): and $0xdf,%edx
2e37(3): cmp $0x42,%dl
2e3a(2): jnz 0xffffffd6(%rip)
2e3c(4): cmp $0x31,0x2(%rax)
2e40(2): jnz 0xffffffd0(%rip)
2e42(4): cmp $0x38,0x3(%rax)
2e46(2): jnz 0xffffffca(%rip)
2e48(4): cmp $0x30,0x4(%rax)
2e4c(2): jnz 0xffffffc4(%rip)
2e4e(4): cmp $0x33,0x5(%rax)
2e52(2): jnz 0xffffffbe(%rip)
2e54(4): cmp $0x30,0x6(%rax)
2e58(2): jnz 0xffffffb8(%rip)
2e5a(4): cmp $0x0,0x7(%rax)
2e5e(2): jnz 0xffffffb2(%rip)
2e60(4): cmp $0x60,0x0(%rbp)
2e64(7): lea 0x3b71(%rip),%rax
2e6b(7): lea 0x3b6e(%rip),%rdx
2e72(4): cmovne %rdx,%rax
2e76(4): add $0x8,%rsp
2e7a(1): pop %rbx
2e7b(1): pop %rbp
2e7c(1): ret near (%rsp)
2e7d(3): nop (%rax)
2e80(4): movzx 0x1(%rax),%edx
2e84(3): and $0xdf,%edx
2e87(3): cmp $0x54,%dl
2e8a(2): jnz 0xffffff86(%rip)
2e8c(4): movzx 0x2(%rax),%edx
2e90(3): and $0xdf,%edx
2e93(3): cmp $0x46,%dl
2e96(6): jnz 0xffffff7a(%rip)
2e9c(4): cmp $0x2d,0x3(%rax)
2ea0(6): jnz 0xffffff70(%rip)
2ea6(4): cmp $0x38,0x4(%rax)
2eaa(6): jnz 0xffffff66(%rip)
2eb0(4): cmp $0x0,0x5(%rax)
2eb4(6): jnz 0xffffff5c(%rip)
2eba(4): cmp $0x60,0x0(%rbp)
2ebe(7): lea 0x3b0f(%rip),%rax
2ec5(7): lea 0x3b0c(%rip),%rdx
2ecc(4): cmovne %rdx,%rax
2ed0(4): add $0x8,%rsp
2ed4(1): pop %rbx
2ed5(1): pop %rbp
2ed6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2ee0(2): push %r15
2ee2(2): push %r14
2ee4(3): mov %r8d,%r15d
2ee7(2): push %r13
2ee9(2): push %r12
2eeb(3): mov %rdi,%r14
2eee(1): push %rbp
2eef(1): push %rbx
2ef0(3): mov %r9d,%ebx
2ef3(3): mov %rsi,%r13
2ef6(3): mov %rcx,%rbp
2ef9(3): and $0x2,%ebx
2efc(7): sub $0xb8,%rsp
2f03(8): mov 0xf0(%rsp),%rax
2f0b(5): mov %rdx,0x10(%rsp)
2f10(5): mov %r8d,0x8(%rsp)
2f15(5): mov %r9d,0x78(%rsp)
2f1a(5): mov %rax,0x20(%rsp)
2f1f(8): mov 0xf8(%rsp),%rax
2f27(5): mov %rax,0x68(%rsp)
2f2c(8): mov 0x100(%rsp),%rax
2f34(5): mov %rax,0x60(%rsp)
2f39(9): mov $0x28,%rax
2f42(8): mov %rax,0xa8(%rsp)
2f4a(2): xor %eax,%eax
2f4c(5): call 0xffffe784(%rip)
2f51(4): cmp $0xa,%r15d
2f55(5): mov %rax,0x58(%rsp)
2f5a(6): jnbe 0x11b5(%rip)
2f60(7): lea 0x3ad9(%rip),%rcx
2f67(3): mov %r15d,%edx
2f6a(4): movsxd 0x0(%rcx,%rdx,4),%rax
2f6e(3): add %rcx,%rax
2f71(2): jmp %rax
2f73(5): mov $0x1,0xe(%rsp)
2f78(5): mov $0x0,0x7c(%rsp)
2f7d(3): xor %r12d,%r12d
2f80(9): mov $0x0,0x50(%rsp)
2f89(5): mov $0x1,0xf(%rsp)
2f8e(5): mov $0x0,0xd(%rsp)
2f93(7): lea 0x3a4b(%rip),%rax
2f9a(9): mov $0x1,0x18(%rsp)
2fa3(3): xor %r15d,%r15d
2fa6(8): mov $0x2,0x8(%rsp)
2fae(5): mov %rax,0x48(%rsp)
2fb3(3): xor %r11d,%r11d
2fb6(3): mov %rbp,%rax
2fb9(3): mov %r12d,%r8d
2fbc(3): mov %r11,%rbp
2fbf(3): mov %rax,%r11
2fc2(6): nop 0x0(%rax,%rax,1)
2fc8(3): cmp %rbp,%r11
2fcb(4): setnz %r12b
2fcf(4): cmp $0xffffffff,%r11
2fd3(2): jnz 0xf(%rip)
2fd5(5): mov 0x10(%rsp),%rax
2fda(4): cmp $0x0,0x0(%rax,%rbp,1)
2fde(4): setnz %r12b
2fe2(3): test %r12b,%r12b
2fe5(6): jz 0x65b(%rip)
2feb(5): cmp $0x2,0x8(%rsp)
2ff0(5): mov 0x10(%rsp),%rdi
2ff5(4): lea 0x0(%rdi,%rbp,1),%r9
2ff9(3): setnz %al
2ffc(4): and 0xd(%rsp),%al
3000(3): mov %eax,%r10d
3003(6): jz 0xad(%rip)
3009(5): mov 0x18(%rsp),%rax
300e(3): test %rax,%rax
3011(6): jz 0x42f(%rip)
3017(4): cmp $0xffffffff,%r11
301b(5): lea 0x0(%rbp,%rax,1),%rbx
3020(2): jnz 0x30(%rip)
3022(4): cmp $0x1,%rax
3026(2): jbe 0x2a(%rip)
3028(5): mov %r8b,0x38(%rsp)
302d(5): mov %r10b,0x30(%rsp)
3032(5): mov %r9,0x28(%rsp)
3037(5): call 0xffffe6a9(%rip)
303c(6): movzx 0x38(%rsp),%r8d
3042(6): movzx 0x30(%rsp),%r10d
3048(3): mov %rax,%r11
304b(5): mov 0x28(%rsp),%r9
3050(3): cmp %r11,%rbx
3053(5): mov %r10b,0x28(%rsp)
3058(6): jnbe 0x5b8(%rip)
305e(5): mov 0x18(%rsp),%rdx
3063(5): mov 0x48(%rsp),%rsi
3068(3): mov %r9,%rdi
306b(5): mov %r11,0x40(%rsp)
3070(5): mov %r8b,0x38(%rsp)
3075(5): mov %r9,0x30(%rsp)
307a(5): call 0xffffe736(%rip)
307f(2): test %eax,%eax
3081(5): mov 0x30(%rsp),%r9
3086(6): movzx 0x38(%rsp),%r8d
308c(5): mov 0x40(%rsp),%r11
3091(6): jnz 0x57f(%rip)
3097(5): cmp $0x0,0xf(%rsp)
309c(6): movzx 0x28(%rsp),%r10d
30a2(6): jnz 0xf83(%rip)
30a8(8): nop 0x0(%rax,%rax,1)
30b0(4): movzx (%r9),%ebx
30b4(3): cmp $0x7e,%bl
30b7(6): jnbe 0x321(%rip)
30bd(7): lea 0x39a8(%rip),%rcx
30c4(3): movzx %bl,%edx
30c7(4): movsxd 0x0(%rcx,%rdx,4),%rax
30cb(3): add %rcx,%rax
30ce(2): jmp %rax
30d0(3): xor %r10d,%r10d
30d3(4): cmp $0x1,%r11
30d7(3): setnz %al
30da(4): cmp $0xffffffff,%r11
30de(2): jnz 0xe(%rip)
30e0(5): mov 0x10(%rsp),%rax
30e5(4): cmp $0x0,0x1(%rax)
30e9(3): setnz %al
30ec(5): cmp $0x2,0x8(%rsp)
30f1(3): setz %dl
30f4(2): test %al,%al
30f6(6): jz 0x252(%rip)
30fc(3): xor %r12d,%r12d
30ff(2): xor %eax,%eax
3101(7): nop 0x0(%rax)
3108(5): cmp $0x1,0xd(%rsp)
310d(6): jnz 0x115(%rip)
3113(2): test %dl,%dl
3115(6): jnz 0x10d(%rip)
311b(5): mov 0x20(%rsp),%rsi
3120(3): test %rsi,%rsi
3123(2): jz 0x16(%rip)
3125(2): mov %ebx,%edx
3127(3): shr $0x5,%dl
312a(3): movzx %dl,%edx
312d(3): mov 0x0(%rsi,%rdx,4),%edx
3130(3): bt %ebx,%edx
3133(6): jb 0x150(%rip)
3139(3): test %r10b,%r10b
313c(6): jnz 0x147(%rip)
3142(3): xor $0x1,%eax
3145(4): add $0x1,%rbp
3149(3): and %r8d,%eax
314c(2): test %al,%al
314e(2): jz 0x22(%rip)
3150(3): cmp %r15,%r13
3153(2): jbe 0x7(%rip)
3155(5): mov $0x27,0x0(%r14,%r15,1)
315a(4): lea 0x1(%r15),%rax
315e(3): cmp %rax,%r13
3161(2): jbe 0x8(%rip)
3163(6): mov $0x27,0x1(%r14,%r15,1)
3169(4): add $0x2,%r15
316d(3): xor %r8d,%r8d
3170(3): cmp %r13,%r15
3173(2): jnb 0x6(%rip)
3175(4): mov %bl,0x0(%r14,%r15,1)
3179(5): movzx 0xe(%rsp),%edi
317e(4): add $0x1,%r15
3182(5): mov $0x0,%eax
3187(3): test %r12b,%r12b
318a(3): cmove %eax,%edi
318d(5): mov %dil,0xe(%rsp)
3192(5): jmp 0xfffffe36(%rip)
3197(9): nop 0x0(%rax,%rax,1)
31a0(3): xor %r10d,%r10d
31a3(4): mov 0x8(%rsp),%eax
31a7(3): cmp $0x2,%eax
31aa(6): jz 0x5be(%rip)
31b0(3): cmp $0x5,%eax
31b3(6): jz 0x575(%rip)
31b9(3): cmp $0x2,%eax
31bc(5): mov $0x3f,%ebx
31c1(3): setz %dl
31c4(3): xor %r12d,%r12d
31c7(2): xor %eax,%eax
31c9(5): jmp 0xffffff3f(%rip)
31ce(2): nop 
31d0(3): xor %r10d,%r10d
31d3(5): cmp $0x2,0x8(%rsp)
31d8(6): jz 0x508(%rip)
31de(5): mov %r12b,0x7c(%rsp)
31e3(2): xor %edx,%edx
31e5(2): xor %eax,%eax
31e7(5): mov $0x27,%ebx
31ec(5): jmp 0xffffff1c(%rip)
31f1(7): nop 0x0(%rax)
31f8(5): mov $0x9,%edx
31fd(5): mov $0x74,%ebx
3202(5): cmp $0x2,0x8(%rsp)
3207(3): setz %al
320a(4): and 0xf(%rsp),%al
320e(6): jnz 0x150(%rip)
3214(5): cmp $0x0,0xd(%rsp)
3219(2): jnz 0x67(%rip)
321b(2): mov %edx,%ebx
321d(3): xor %r12d,%r12d
3220(2): xor %eax,%eax
3222(5): cmp $0x0,0xf(%rsp)
3227(6): jnz 0xfffffef4(%rip)
322d(5): jmp 0xffffff0c(%rip)
3232(6): nop 0x0(%rax,%rax,1)
3238(5): mov $0x8,%edx
323d(5): mov $0x62,%ebx
3242(2): jmp 0xffffffd2(%rip)
3244(4): nop 0x0(%rax)
3248(5): cmp $0x2,0x8(%rsp)
324d(6): jz 0x3d3(%rip)
3253(5): cmp $0x0,0xd(%rsp)
3258(6): jz 0x218(%rip)
325e(5): cmp $0x0,0xf(%rsp)
3263(6): jz 0x20d(%rip)
3269(6): cmp $0x0,0x18(%rsp)
326f(6): jnz 0x3bc(%rip)
3275(5): mov $0x5c,%ebx
327a(6): nop 0x0(%rax,%rax,1)
3280(3): xor %r12d,%r12d
3283(5): cmp $0x2,0x8(%rsp)
3288(3): setz %dl
328b(5): cmp $0x0,0xf(%rsp)
3290(2): mov %edx,%eax
3292(6): jnz 0x856(%rip)
3298(3): mov %r8d,%eax
329b(3): xor $0x1,%eax
329e(2): and %dl,%al
32a0(2): jz 0x31(%rip)
32a2(3): cmp %r15,%r13
32a5(2): jbe 0x7(%rip)
32a7(5): mov $0x27,0x0(%r14,%r15,1)
32ac(4): lea 0x1(%r15),%rdx
32b0(3): cmp %rdx,%r13
32b3(2): jbe 0x8(%rip)
32b5(6): mov $0x24,0x1(%r14,%r15,1)
32bb(4): lea 0x2(%r15),%rdx
32bf(3): cmp %rdx,%r13
32c2(2): jbe 0x8(%rip)
32c4(6): mov $0x27,0x2(%r14,%r15,1)
32ca(4): add $0x3,%r15
32ce(3): mov %eax,%r8d
32d1(3): cmp %r15,%r13
32d4(2): jbe 0x7(%rip)
32d6(5): mov $0x5c,0x0(%r14,%r15,1)
32db(4): add $0x1,%r15
32df(4): add $0x1,%rbp
32e3(5): jmp 0xfffffe8d(%rip)
32e8(8): nop 0x0(%rax,%rax,1)
32f0(5): cmp $0x0,0xd(%rsp)
32f5(6): jnz 0x1ce(%rip)
32fb(2): xor %edx,%edx
32fd(5): test $0x1,0x78(%rsp)
3302(6): jz 0xffffff19(%rip)
3308(4): add $0x1,%rbp
330c(5): jmp 0xfffffcbc(%rip)
3311(7): nop 0x0(%rax)
3318(5): cmp $0x2,0x8(%rsp)
331d(3): setz %dl
3320(2): xor %eax,%eax
3322(5): jmp 0xfffffde6(%rip)
3327(9): nop 0x0(%rax,%rax,1)
3330(5): mov $0x7,%edx
3335(5): mov $0x61,%ebx
333a(5): jmp 0xfffffeda(%rip)
333f(1): nop 
3340(5): cmp $0x2,0x8(%rsp)
3345(3): setz %dl
3348(3): test %rbp,%rbp
334b(6): jnz 0xfffffdb1(%rip)
3351(5): movzx 0xf(%rsp),%eax
3356(2): and %dl,%al
3358(6): jz 0xfffffdb0(%rip)
335e(3): mov %r11,%rbp
3361(8): mov $0x2,0x8(%rsp)
3369(5): jmp 0x700(%rip)
336e(2): nop 
3370(5): cmp $0x2,0x8(%rsp)
3375(3): setz %dl
3378(3): xor %r12d,%r12d
337b(2): jmp 0xffffffd6(%rip)
337d(3): nop (%rax)
3380(5): cmp $0x2,0x8(%rsp)
3385(5): mov $0x20,%ebx
338a(3): setz %dl
338d(2): jmp 0xffffffc4(%rip)
338f(1): nop 
3390(5): mov $0xd,%edx
3395(5): mov $0x72,%ebx
339a(5): jmp 0xfffffe68(%rip)
339f(1): nop 
33a0(5): mov $0xc,%edx
33a5(5): mov $0x66,%ebx
33aa(5): jmp 0xfffffe6a(%rip)
33af(1): nop 
33b0(5): mov $0xb,%edx
33b5(5): mov $0x76,%ebx
33ba(5): jmp 0xfffffe5a(%rip)
33bf(1): nop 
33c0(5): mov $0xa,%edx
33c5(5): mov $0x6e,%ebx
33ca(5): jmp 0xfffffe38(%rip)
33cf(1): nop 
33d0(3): xor %r10d,%r10d
33d3(5): nop 0x0(%rax,%rax,1)
33d8(6): cmp $0x1,0x58(%rsp)
33de(6): jnz 0x3aa(%rip)
33e4(5): mov %r11,0x38(%rsp)
33e9(5): mov %r8b,0x30(%rsp)
33ee(5): mov %r10b,0x28(%rsp)
33f3(5): call 0xffffe57d(%rip)
33f8(3): mov (%rax),%rcx
33fb(3): movzx %bl,%edx
33fe(6): movzx 0x28(%rsp),%r10d
3404(6): movzx 0x30(%rsp),%r8d
340a(5): mov 0x38(%rsp),%r11
340f(5): mov $0x1,%edi
3414(4): movzx 0x0(%rcx,%rdx,2),%eax
3418(4): and $0x4000,%ax
341c(4): setnz %r12b
3420(3): setz %al
3423(4): and 0xd(%rsp),%al
3427(2): test %al,%al
3429(6): jnz 0x998(%rip)
342f(5): cmp $0x2,0x8(%rsp)
3434(3): setz %dl
3437(5): jmp 0xfffffcd1(%rip)
343c(4): nop 0x0(%rax)
3440(4): movzx (%r9),%ebx
3444(3): cmp $0x7e,%bl
3447(2): jnbe 0xffffff89(%rip)
3449(7): lea 0x3818(%rip),%rcx
3450(3): movzx %bl,%edx
3453(4): movsxd 0x0(%rcx,%rdx,4),%rax
3457(3): add %rcx,%rax
345a(2): jmp %rax
345c(4): nop 0x0(%rax)
3460(3): xor %r10d,%r10d
3463(5): cmp $0x0,0xd(%rsp)
3468(6): jnz 0xfffffdf6(%rip)
346e(2): nop 
3470(5): mov $0x5c,%edx
3475(5): mov $0x5c,%ebx
347a(5): jmp 0xfffffd9a(%rip)
347f(1): nop 
3480(5): mov $0xc,%edx
3485(3): xor %r10d,%r10d
3488(5): mov $0x66,%ebx
348d(5): jmp 0xfffffd87(%rip)
3492(6): nop 0x0(%rax,%rax,1)
3498(5): mov $0xa,%edx
349d(3): xor %r10d,%r10d
34a0(5): mov $0x6e,%ebx
34a5(5): jmp 0xfffffd5d(%rip)
34aa(6): nop 0x0(%rax,%rax,1)
34b0(5): mov $0x61,%ebx
34b5(5): jmp 0xfffffdcb(%rip)
34ba(6): nop 0x0(%rax,%rax,1)
34c0(3): xor %r10d,%r10d
34c3(5): cmp $0x2,0x8(%rsp)
34c8(3): setz %dl
34cb(5): cmp $0x0,0xf(%rsp)
34d0(6): jnz 0xb9a(%rip)
34d6(3): mov %r8d,%eax
34d9(3): mov %r15,%rcx
34dc(3): xor $0x1,%eax
34df(2): and %dl,%al
34e1(2): jz 0x2f(%rip)
34e3(3): cmp %r15,%r13
34e6(2): jbe 0x7(%rip)
34e8(5): mov $0x27,0x0(%r14,%r15,1)
34ed(4): lea 0x1(%r15),%rcx
34f1(3): cmp %rcx,%r13
34f4(2): jbe 0x8(%rip)
34f6(6): mov $0x24,0x1(%r14,%r15,1)
34fc(4): lea 0x2(%r15),%rcx
3500(3): cmp %rcx,%r13
3503(6): jnbe 0x636(%rip)
3509(4): lea 0x3(%r15),%rcx
350d(3): mov %eax,%r8d
3510(3): cmp %rcx,%r13
3513(2): jbe 0x7(%rip)
3515(5): mov $0x5c,0x0(%r14,%rcx,1)
351a(5): cmp $0x2,0x8(%rsp)
351f(4): lea 0x1(%rcx),%r15
3523(6): jz 0x606(%rip)
3529(4): lea 0x1(%rbp),%rax
352d(3): cmp %r11,%rax
3530(2): jnb 0x1b(%rip)
3532(5): mov 0x10(%rsp),%rax
3537(5): movzx 0x1(%rax,%rbp,1),%eax
353c(4): mov %al,0x28(%rsp)
3540(3): sub $0x30,%eax
3543(2): cmp $0x9,%al
3545(6): jbe 0x834(%rip)
354b(3): mov %r12d,%eax
354e(5): mov $0x30,%ebx
3553(3): xor %r12d,%r12d
3556(5): jmp 0xfffffbb2(%rip)
355b(5): nop 0x0(%rax,%rax,1)
3560(5): cmp $0x2,0x8(%rsp)
3565(3): mov %r10d,%r12d
3568(3): setz %dl
356b(3): xor %r10d,%r10d
356e(2): xor %eax,%eax
3570(5): jmp 0xfffffb98(%rip)
3575(3): nop (%rax)
3578(5): cmp $0x2,0x8(%rsp)
357d(3): setz %dl
3580(3): xor %r10d,%r10d
3583(5): jmp 0xfffffdc5(%rip)
3588(8): nop 0x0(%rax,%rax,1)
3590(5): cmp $0x2,0x8(%rsp)
3595(3): setz %dl
3598(3): xor %r10d,%r10d
359b(3): xor %r12d,%r12d
359e(5): jmp 0xfffffdb3(%rip)
35a3(5): nop 0x0(%rax,%rax,1)
35a8(5): cmp $0x2,0x8(%rsp)
35ad(3): mov %r10d,%r12d
35b0(5): mov $0x20,%ebx
35b5(3): setz %dl
35b8(3): xor %r10d,%r10d
35bb(5): jmp 0xfffffd96(%rip)
35c0(5): mov $0xd,%edx
35c5(3): xor %r10d,%r10d
35c8(5): mov $0x72,%ebx
35cd(5): jmp 0xfffffc35(%rip)
35d2(6): nop 0x0(%rax,%rax,1)
35d8(5): mov $0x76,%ebx
35dd(5): jmp 0xfffffca3(%rip)
35e2(6): nop 0x0(%rax,%rax,1)
35e8(5): mov $0x9,%edx
35ed(3): xor %r10d,%r10d
35f0(5): mov $0x74,%ebx
35f5(5): jmp 0xfffffc0d(%rip)
35fa(6): nop 0x0(%rax,%rax,1)
3600(5): mov $0x62,%ebx
3605(5): jmp 0xfffffc7b(%rip)
360a(6): nop 0x0(%rax,%rax,1)
3610(3): xor %r10d,%r10d
3613(5): jmp 0xfffffa9d(%rip)
3618(8): nop 0x0(%rax,%rax,1)
3620(5): cmp $0x0,0xf(%rsp)
3625(6): jnz 0x96b(%rip)
362b(4): add $0x1,%rbp
362f(3): mov %r8d,%eax
3632(3): xor %r12d,%r12d
3635(5): mov $0x5c,%ebx
363a(5): jmp 0xfffffb12(%rip)
363f(1): nop 
3640(5): cmp $0x2,0x8(%rsp)
3645(5): movzx 0xf(%rsp),%ebx
364a(3): mov %r8d,%r12d
364d(3): mov %r11,%rbp
3650(3): setz %dl
3653(2): mov %ebx,%eax
3655(3): test %r15,%r15
3658(3): setz %cl
365b(2): and %edx,%eax
365d(2): and %cl,%al
365f(6): jnz 0xa67(%rip)
3665(2): mov %ebx,%eax
3667(3): xor $0x1,%eax
366a(2): and %al,%dl
366c(6): jz 0x970(%rip)
3672(5): cmp $0x0,0x7c(%rsp)
3677(6): jz 0x963(%rip)
367d(5): cmp $0x0,0xe(%rsp)
3682(6): jnz 0x9fb(%rip)
3688(3): test %r13,%r13
368b(3): setz %al
368e(6): cmp $0x0,0x50(%rsp)
3694(3): setnz %dl
3697(2): and %dl,%al
3699(6): jz 0xa23(%rip)
369f(5): mov 0x50(%rsp),%r13
36a4(7): lea 0x333a(%rip),%rbx
36ab(4): mov $0x27,(%r14)
36af(8): mov $0x2,0x8(%rsp)
36b7(6): mov $0x1,%r15d
36bd(9): mov $0x1,0x18(%rsp)
36c6(5): mov $0x0,0xf(%rsp)
36cb(5): mov %rbx,0x48(%rsp)
36d0(4): mov %al,0x7c(%rsp)
36d4(5): jmp 0xfffff8df(%rip)
36d9(7): nop 0x0(%rax)
36e0(5): cmp $0x0,0xf(%rsp)
36e5(6): jnz 0x8ab(%rip)
36eb(3): test %r13,%r13
36ee(6): jz 0x402(%rip)
36f4(2): xor %edx,%edx
36f6(6): cmp $0x0,0x50(%rsp)
36fc(6): jnz 0x3f4(%rip)
3702(5): mov %r13,0x50(%rsp)
3707(4): add $0x3,%r15
370b(2): xor %eax,%eax
370d(5): mov %r12b,0x7c(%rsp)
3712(3): xor %r8d,%r8d
3715(3): mov %rdx,%r13
3718(5): mov $0x27,%ebx
371d(5): jmp 0xfffffa1c(%rip)
3722(6): nop 0x0(%rax,%rax,1)
3728(5): test $0x4,0x78(%rsp)
372d(2): jz 0x23(%rip)
372f(4): lea 0x2(%rbp),%rcx
3733(3): cmp %r11,%rcx
3736(2): jnb 0x1a(%rip)
3738(5): mov 0x10(%rsp),%rax
373d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3742(6): jz 0x790(%rip)
3748(8): nop 0x0(%rax,%rax,1)
3750(2): xor %edx,%edx
3752(3): xor %r12d,%r12d
3755(2): xor %eax,%eax
3757(5): mov $0x3f,%ebx
375c(5): jmp 0xfffff9ac(%rip)
3761(7): nop 0x0(%rax)
3768(5): cmp $0x0,0xf(%rsp)
376d(6): jnz 0x823(%rip)
3773(3): xor %r12d,%r12d
3776(2): xor %eax,%eax
3778(5): mov $0x3f,%ebx
377d(5): jmp 0xfffff9bc(%rip)
3782(6): nop 0x0(%rax,%rax,1)
3788(8): lea 0xa0(%rsp),%rax
3790(4): cmp $0xffffffff,%r11
3794(c): mov $0x0,0xa0(%rsp)
37a0(5): mov %rax,0x28(%rsp)
37a5(2): jnz 0x2f(%rip)
37a7(5): mov 0x10(%rsp),%rdi
37ac(5): mov %r8b,0x40(%rsp)
37b1(5): mov %r10b,0x38(%rsp)
37b6(5): mov %r9,0x30(%rsp)
37bb(5): call 0xffffdf25(%rip)
37c0(6): movzx 0x40(%rsp),%r8d
37c6(6): movzx 0x38(%rsp),%r10d
37cc(3): mov %rax,%r11
37cf(5): mov 0x30(%rsp),%r9
37d4(8): lea 0x9c(%rsp),%rax
37dc(2): xor %ecx,%ecx
37de(4): mov %bl,0x7e(%rsp)
37e2(5): mov %r8b,0x7d(%rsp)
37e7(3): mov %rcx,%rbx
37ea(8): mov %r9,0x88(%rsp)
37f2(5): mov %rax,0x38(%rsp)
37f7(5): mov %r10b,0x7f(%rsp)
37fc(8): mov %r15,0x80(%rsp)
3804(5): mov %r14,0x40(%rsp)
3809(5): mov %r13,0x70(%rsp)
380e(5): mov %r11,0x30(%rsp)
3813(5): mov 0x10(%rsp),%rax
3818(5): lea 0x0(%rbp,%rbx,1),%r14
381d(5): mov 0x30(%rsp),%rdx
3822(5): mov 0x28(%rsp),%rcx
3827(5): mov 0x38(%rsp),%rdi
382c(4): lea 0x0(%rax,%r14,1),%r13
3830(3): sub %r14,%rdx
3833(3): mov %r13,%rsi
3836(5): call 0x23ea(%rip)
383b(3): test %rax,%rax
383e(3): mov %rax,%r15
3841(2): jz 0x50(%rip)
3843(4): cmp $0xffffffff,%rax
3847(6): jz 0x61e(%rip)
384d(4): cmp $0xfffffffe,%rax
3851(6): jz 0x5a0(%rip)
3857(5): cmp $0x2,0x8(%rsp)
385c(3): setz %al
385f(4): and 0xf(%rsp),%al
3863(6): jnz 0x19d(%rip)
3869(7): mov 0x9c(%rsp),%edi
3870(5): call 0xffffe0f0(%rip)
3875(5): mov 0x28(%rsp),%rdi
387a(2): test %eax,%eax
387c(5): mov $0x0,%eax
3881(4): cmove %eax,%r12d
3885(3): add %r15,%rbx
3888(5): call 0xffffe0c8(%rip)
388d(2): test %eax,%eax
388f(2): jz 0xffffff84(%rip)
3891(3): mov %r12d,%edx
3894(3): mov %rbx,%rdi
3897(6): movzx 0x7d(%rsp),%r8d
389d(3): xor $0x1,%edx
38a0(5): movzx 0x7e(%rsp),%ebx
38a5(6): movzx 0x7f(%rsp),%r10d
38ab(4): and 0xd(%rsp),%dl
38af(8): mov 0x80(%rsp),%r15
38b7(5): mov 0x40(%rsp),%r14
38bc(5): mov 0x70(%rsp),%r13
38c1(5): mov 0x30(%rsp),%r11
38c6(4): cmp $0x1,%rdi
38ca(6): jbe 0x601(%rip)
38d0(3): mov %rdi,%rcx
38d3(2): xor %esi,%esi
38d5(6): movzx 0xf(%rsp),%r9d
38db(3): add %rbp,%rcx
38de(5): mov 0x10(%rsp),%rdi
38e3(5): jmp 0xbb(%rip)
38e8(8): nop 0x0(%rax,%rax,1)
38f0(5): cmp $0x2,0x8(%rsp)
38f5(3): setz %al
38f8(3): test %r9b,%r9b
38fb(6): jnz 0x4b5(%rip)
3901(3): mov %r8d,%esi
3904(3): xor $0x1,%esi
3907(3): and %sil,%al
390a(2): jz 0x31(%rip)
390c(3): cmp %r15,%r13
390f(2): jbe 0x7(%rip)
3911(5): mov $0x27,0x0(%r14,%r15,1)
3916(4): lea 0x1(%r15),%rsi
391a(3): cmp %rsi,%r13
391d(2): jbe 0x8(%rip)
391f(6): mov $0x24,0x1(%r14,%r15,1)
3925(4): lea 0x2(%r15),%rsi
3929(3): cmp %rsi,%r13
392c(2): jbe 0x8(%rip)
392e(6): mov $0x27,0x2(%r14,%r15,1)
3934(4): add $0x3,%r15
3938(3): mov %eax,%r8d
393b(3): cmp %r15,%r13
393e(2): jbe 0x7(%rip)
3940(5): mov $0x5c,0x0(%r14,%r15,1)
3945(4): lea 0x1(%r15),%rax
3949(3): cmp %rax,%r13
394c(2): jbe 0xf(%rip)
394e(2): mov %ebx,%eax
3950(3): shr $0x6,%al
3953(3): add $0x30,%eax
3956(5): mov %al,0x1(%r14,%r15,1)
395b(4): lea 0x2(%r15),%rax
395f(3): cmp %rax,%r13
3962(2): jbe 0x12(%rip)
3964(2): mov %ebx,%eax
3966(3): shr $0x3,%al
3969(3): and $0x7,%eax
396c(3): add $0x30,%eax
396f(5): mov %al,0x2(%r14,%r15,1)
3974(3): and $0x7,%ebx
3977(4): add $0x1,%rbp
397b(4): add $0x3,%r15
397f(3): add $0x30,%ebx
3982(3): cmp %rcx,%rbp
3985(6): jnb 0xfffff7eb(%rip)
398b(2): mov %edx,%esi
398d(3): cmp %r15,%r13
3990(2): jbe 0x6(%rip)
3992(4): mov %bl,0x0(%r14,%r15,1)
3996(4): movzx 0x0(%rdi,%rbp,1),%ebx
399a(4): add $0x1,%r15
399e(2): test %dl,%dl
39a0(6): jnz 0xffffff50(%rip)
39a6(2): mov %esi,%eax
39a8(3): xor $0x1,%eax
39ab(3): and %r8d,%eax
39ae(3): test %r10b,%r10b
39b1(2): jz 0x10(%rip)
39b3(3): cmp %r15,%r13
39b6(2): jbe 0x7(%rip)
39b8(5): mov $0x5c,0x0(%r14,%r15,1)
39bd(4): add $0x1,%r15
39c1(4): add $0x1,%rbp
39c5(3): cmp %rcx,%rbp
39c8(6): jnb 0xfffff784(%rip)
39ce(2): test %al,%al
39d0(6): jz 0x3fe(%rip)
39d6(3): cmp %r15,%r13
39d9(2): jbe 0x7(%rip)
39db(5): mov $0x27,0x0(%r14,%r15,1)
39e0(4): lea 0x1(%r15),%rax
39e4(3): cmp %rax,%r13
39e7(2): jbe 0x8(%rip)
39e9(6): mov $0x27,0x1(%r14,%r15,1)
39ef(4): add $0x2,%r15
39f3(3): xor %r10d,%r10d
39f6(3): xor %r8d,%r8d
39f9(2): jmp 0xffffff94(%rip)
39fb(5): nop 0x0(%rax,%rax,1)
3a00(4): cmp $0x1,%r15
3a04(6): jz 0xfffffe65(%rip)
3a0a(5): mov 0x10(%rsp),%rdi
3a0f(4): lea 0x0(%rdi,%r15,1),%rcx
3a13(5): lea 0x1(%rdi,%r14,1),%rdx
3a18(4): lea 0x0(%rcx,%r14,1),%r8
3a1c(2): jmp 0x11(%rip)
3a1e(2): nop 
3a20(4): add $0x1,%rdx
3a24(3): cmp %rdx,%r8
3a27(6): jz 0xfffffe42(%rip)
3a2d(3): movzx (%rdx),%ecx
3a30(3): sub $0x5b,%ecx
3a33(3): cmp $0x21,%cl
3a36(2): jnbe 0xffffffea(%rip)
3a38(5): mov $0x1,%esi
3a3d(3): shl/sal %cl,%rsi
3a40(3): mov %rsi,%rcx
3a43(a): mov $0x8589934635,%rsi
3a4d(3): test %rsi,%rcx
3a50(2): jz 0xffffffd0(%rip)
3a52(5): mov 0x40(%rsp),%r14
3a57(5): mov 0x70(%rsp),%r13
3a5c(5): mov 0x30(%rsp),%rbp
3a61(8): mov $0x2,0x8(%rsp)
3a69(5): cmp $0x0,0xd(%rsp)
3a6e(2): jz 0x12(%rip)
3a70(2): test %al,%al
3a72(5): mov $0x4,%eax
3a77(5): cmove 0x8(%rsp),%eax
3a7c(4): mov %eax,0x8(%rsp)
3a80(4): sub $0x8,%rsp
3a84(3): mov %rbp,%rcx
3a87(3): mov %r13,%rsi
3a8a(4): push 0x68(%rsp)
3a8e(4): push 0x78(%rsp)
3a92(3): mov %r14,%rdi
3a95(2): push $0x0
3a97(8): mov 0x98(%rsp),%r9d
3a9f(5): mov 0x28(%rsp),%r8d
3aa4(5): mov 0x30(%rsp),%rdx
3aa9(4): and $0xfd,%r9d
3aad(5): call 0xfffff433(%rip)
3ab2(4): add $0x20,%rsp
3ab6(3): mov %rax,%r15
3ab9(8): mov 0xa8(%rsp),%rbx
3ac1(9): xor $0x28,%rbx
3aca(3): mov %r15,%rax
3acd(6): jnz 0x606(%rip)
3ad3(7): add $0xb8,%rsp
3ada(1): pop %rbx
3adb(1): pop %rbp
3adc(2): pop %r12
3ade(2): pop %r13
3ae0(2): pop %r14
3ae2(2): pop %r15
3ae4(1): ret near (%rsp)
3ae5(3): nop (%rax)
3ae8(3): mov %r11,%rbp
3aeb(5): jmp 0xffffff7e(%rip)
3af0(3): cmp %r15,%r13
3af3(2): jbe 0x7(%rip)
3af5(5): mov $0x27,0x0(%r14,%r15,1)
3afa(4): lea 0x1(%r15),%rax
3afe(3): cmp %rax,%r13
3b01(2): jbe 0x8(%rip)
3b03(6): mov $0x5c,0x1(%r14,%r15,1)
3b09(4): lea 0x2(%r15),%rax
3b0d(3): cmp %rax,%r13
3b10(6): jbe 0x5f2(%rip)
3b16(3): mov %r13,%rdx
3b19(6): mov $0x27,0x2(%r14,%r15,1)
3b1f(5): mov 0x50(%rsp),%r13
3b24(5): jmp 0xfffffbde(%rip)
3b29(3): mov %r12d,%eax
3b2c(5): mov $0x30,%ebx
3b31(3): xor %r12d,%r12d
3b34(5): jmp 0xfffff605(%rip)
3b39(6): mov $0x27,0x2(%r14,%r15,1)
3b3f(5): jmp 0xfffff9ca(%rip)
3b44(2): test %ebx,%ebx
3b46(6): jnz 0xfffff42d(%rip)
3b4c(5): mov $0x1,0xd(%rsp)
3b51(3): test %r13,%r13
3b54(6): jnz 0x596(%rip)
3b5a(7): lea 0x2e84(%rip),%rax
3b61(9): mov $0x0,0x50(%rsp)
3b6a(5): mov $0x1,0xe(%rsp)
3b6f(5): mov $0x0,0x7c(%rsp)
3b74(3): xor %r12d,%r12d
3b77(5): mov $0x0,0xf(%rsp)
3b7c(9): mov $0x1,0x18(%rsp)
3b85(5): mov %rax,0x48(%rsp)
3b8a(6): mov $0x1,%r15d
3b90(8): mov $0x2,0x8(%rsp)
3b98(5): jmp 0xfffff41b(%rip)
3b9d(3): nop (%rax)
3ba0(2): test %ebx,%ebx
3ba2(6): jnz 0x3fb(%rip)
3ba8(3): test %r13,%r13
3bab(6): jz 0x22b(%rip)
3bb1(4): mov $0x22,(%r14)
3bb5(5): mov $0x1,0xe(%rsp)
3bba(3): xor %r12d,%r12d
3bbd(5): mov $0x0,0x7c(%rsp)
3bc2(9): mov $0x0,0x50(%rsp)
3bcb(7): lea 0x2e11(%rip),%rax
3bd2(5): mov $0x0,0xf(%rsp)
3bd7(5): mov $0x1,0xd(%rsp)
3bdc(9): mov $0x1,0x18(%rsp)
3be5(6): mov $0x1,%r15d
3beb(5): mov %rax,0x48(%rsp)
3bf0(5): jmp 0xfffff3c3(%rip)
3bf5(7): lea 0x2de7(%rip),%rax
3bfc(5): mov $0x1,0xe(%rsp)
3c01(5): mov $0x0,0x7c(%rsp)
3c06(3): xor %r12d,%r12d
3c09(9): mov $0x0,0x50(%rsp)
3c12(5): mov $0x1,0xf(%rsp)
3c17(5): mov $0x1,0xd(%rsp)
3c1c(9): mov $0x1,0x18(%rsp)
3c25(3): xor %r15d,%r15d
3c28(5): mov %rax,0x48(%rsp)
3c2d(8): mov $0x5,0x8(%rsp)
3c35(5): jmp 0xfffff37e(%rip)
3c3a(5): mov $0x1,0xe(%rsp)
3c3f(5): mov $0x0,0x7c(%rsp)
3c44(3): xor %r12d,%r12d
3c47(9): mov $0x0,0x50(%rsp)
3c50(5): mov $0x0,0xf(%rsp)
3c55(3): xor %r15d,%r15d
3c58(5): mov $0x1,0xd(%rsp)
3c5d(9): mov $0x0,0x18(%rsp)
3c66(9): mov $0x0,0x48(%rsp)
3c6f(5): jmp 0xfffff344(%rip)
3c74(5): cmp $0xa,0x8(%rsp)
3c79(2): jz 0x58(%rip)
3c7b(7): lea 0x2d65(%rip),%rsi
3c82(2): xor %edi,%edi
3c84(5): mov $0x5,%edx
3c89(5): call 0xffffda37(%rip)
3c8e(3): mov %rax,%rcx
3c91(5): mov %rax,0x68(%rsp)
3c96(7): lea 0x2d4a(%rip),%rax
3c9d(3): cmp %rax,%rcx
3ca0(6): jz 0x39e(%rip)
3ca6(7): lea 0x2d38(%rip),%rsi
3cad(2): xor %edi,%edi
3caf(5): mov $0x5,%edx
3cb4(5): call 0xffffda0c(%rip)
3cb9(3): mov %rax,%rcx
3cbc(5): mov %rax,0x60(%rsp)
3cc1(7): lea 0x2d1d(%rip),%rax
3cc8(3): cmp %rax,%rcx
3ccb(6): jz 0x389(%rip)
3cd1(3): xor %r15d,%r15d
3cd4(2): test %ebx,%ebx
3cd6(6): jz 0x1c7(%rip)
3cdc(2): test %ebx,%ebx
3cde(5): mov 0x60(%rsp),%rbx
3ce3(5): setnz 0xf(%rsp)
3ce8(3): xor %r12d,%r12d
3ceb(3): mov %rbx,%rdi
3cee(5): call 0xffffd9f2(%rip)
3cf3(5): mov %rbx,0x48(%rsp)
3cf8(5): mov %rax,0x18(%rsp)
3cfd(5): mov $0x1,0xe(%rsp)
3d02(5): mov $0x0,0x7c(%rsp)
3d07(9): mov $0x0,0x50(%rsp)
3d10(5): mov $0x1,0xd(%rsp)
3d15(5): jmp 0xfffff29e(%rip)
3d1a(5): mov $0x1,0xe(%rsp)
3d1f(5): mov $0x0,0x7c(%rsp)
3d24(3): xor %r12d,%r12d
3d27(9): mov $0x0,0x50(%rsp)
3d30(5): mov $0x0,0xf(%rsp)
3d35(3): xor %r15d,%r15d
3d38(5): mov $0x0,0xd(%rsp)
3d3d(9): mov $0x0,0x18(%rsp)
3d46(9): mov $0x0,0x48(%rsp)
3d4f(5): jmp 0xfffff264(%rip)
3d54(5): mov $0x1,0xe(%rsp)
3d59(5): mov $0x0,0x7c(%rsp)
3d5e(3): xor %r12d,%r12d
3d61(9): mov $0x0,0x50(%rsp)
3d6a(5): mov $0x1,0xf(%rsp)
3d6f(5): mov $0x1,0xd(%rsp)
3d74(5): jmp 0xfffff21f(%rip)
3d79(3): cmp %r15,%r13
3d7c(2): jbe 0x7(%rip)
3d7e(5): mov $0x30,0x0(%r14,%r15,1)
3d83(4): lea 0x2(%rcx),%rax
3d87(3): cmp %rax,%r13
3d8a(2): jbe 0x8(%rip)
3d8c(6): mov $0x30,0x2(%r14,%rcx,1)
3d92(3): mov %r12d,%eax
3d95(4): lea 0x3(%rcx),%r15
3d99(3): xor %r12d,%r12d
3d9c(5): mov $0x30,%ebx
3da1(5): jmp 0xfffff367(%rip)
3da6(a): nop 0x0(%rax,%rax,1)
3db0(5): movzx 0xf(%rsp),%ebx
3db5(3): mov %r11,%rbp
3db8(4): mov %bl,0xd(%rsp)
3dbc(5): jmp 0xfffffcad(%rip)
3dc1(5): movzx 0xd(%rsp),%edx
3dc6(3): xor %r12d,%r12d
3dc9(5): jmp 0xfffffb07(%rip)
3dce(3): xor %r10d,%r10d
3dd1(5): jmp 0xfffffbbc(%rip)
3dd6(9): mov $0x0,0x50(%rsp)
3ddf(5): mov $0x1,0xe(%rsp)
3de4(3): xor %r12d,%r12d
3de7(5): mov $0x0,0x7c(%rsp)
3dec(5): jmp 0xfffffddf(%rip)
3df1(5): mov 0x30(%rsp),%r11
3df6(3): mov %r14,%rsi
3df9(3): mov %r13,%rcx
3dfc(3): mov %rbx,%rax
3dff(3): mov %rbx,%rdi
3e02(6): movzx 0x7d(%rsp),%r8d
3e08(5): movzx 0x7e(%rsp),%ebx
3e0d(8): mov 0x88(%rsp),%r9
3e15(3): cmp %r11,%rsi
3e18(6): movzx 0x7f(%rsp),%r10d
3e1e(8): mov 0x80(%rsp),%r15
3e26(5): mov 0x40(%rsp),%r14
3e2b(5): mov 0x70(%rsp),%r13
3e30(2): jnb 0x28(%rip)
3e32(3): cmp $0x0,(%rcx)
3e35(2): jnz 0x12(%rip)
3e37(2): jmp 0x21(%rip)
3e39(7): nop 0x0(%rax)
3e40(5): cmp $0x0,0x0(%r9,%rax,1)
3e45(2): jz 0x10(%rip)
3e47(4): add $0x1,%rax
3e4b(5): lea 0x0(%rbp,%rax,1),%rdx
3e50(3): cmp %rdx,%r11
3e53(2): jnbe 0xffffffed(%rip)
3e55(3): mov %rax,%rdi
3e58(5): movzx 0xd(%rsp),%edx
3e5d(3): xor %r12d,%r12d
3e60(5): jmp 0xfffffa66(%rip)
3e65(3): mov %rbx,%rdi
3e68(6): movzx 0x7d(%rsp),%r8d
3e6e(5): movzx 0x7e(%rsp),%ebx
3e73(6): movzx 0x7f(%rsp),%r10d
3e79(8): mov 0x80(%rsp),%r15
3e81(3): xor %r12d,%r12d
3e84(5): mov 0x40(%rsp),%r14
3e89(5): mov 0x70(%rsp),%r13
3e8e(5): mov 0x30(%rsp),%r11
3e93(5): movzx 0xd(%rsp),%edx
3e98(5): jmp 0xfffffa2e(%rip)
3e9d(5): mov 0x68(%rsp),%rdx
3ea2(3): movzx (%rdx),%eax
3ea5(2): test %al,%al
3ea7(6): jz 0xfffffe35(%rip)
3ead(3): nop (%rax)
3eb0(3): cmp %r15,%r13
3eb3(2): jbe 0x6(%rip)
3eb5(4): mov %al,0x0(%r14,%r15,1)
3eb9(4): add $0x1,%r15
3ebd(5): movzx 0x0(%rdx,%r15,1),%eax
3ec2(2): test %al,%al
3ec4(2): jnz 0xffffffec(%rip)
3ec6(5): jmp 0xfffffe16(%rip)
3ecb(2): mov %edx,%eax
3ecd(5): jmp 0xfffff55a(%rip)
3ed2(4): movzx 0x0(%rax,%rcx,1),%ebx
3ed6(3): cmp $0x3e,%bl
3ed9(6): jnbe 0xfffff877(%rip)
3edf(a): mov $0x8070630310989004800,%rax
3ee9(4): bt %rbx,%rax
3eed(6): jnb 0xfffff863(%rip)
3ef3(5): cmp $0x0,0xf(%rsp)
3ef8(6): jnz 0x1ea(%rip)
3efe(3): cmp %r15,%r13
3f01(2): jbe 0x7(%rip)
3f03(5): mov $0x3f,0x0(%r14,%r15,1)
3f08(4): lea 0x1(%r15),%rax
3f0c(3): cmp %rax,%r13
3f0f(2): jbe 0x8(%rip)
3f11(6): mov $0x22,0x1(%r14,%r15,1)
3f17(4): lea 0x2(%r15),%rax
3f1b(3): cmp %rax,%r13
3f1e(2): jbe 0x8(%rip)
3f20(6): mov $0x22,0x2(%r14,%r15,1)
3f26(4): lea 0x3(%r15),%rax
3f2a(3): cmp %rax,%r13
3f2d(2): jbe 0x8(%rip)
3f2f(6): mov $0x3f,0x3(%r14,%r15,1)
3f35(4): add $0x4,%r15
3f39(2): xor %edx,%edx
3f3b(3): xor %r12d,%r12d
3f3e(2): xor %eax,%eax
3f40(3): mov %rcx,%rbp
3f43(5): jmp 0xfffff1c5(%rip)
3f48(2): test %ebx,%ebx
3f4a(6): jz 0x18e(%rip)
3f50(7): lea 0x2a8e(%rip),%rax
3f57(5): mov $0x1,0xe(%rsp)
3f5c(5): mov $0x0,0x7c(%rsp)
3f61(3): xor %r12d,%r12d
3f64(9): mov $0x0,0x50(%rsp)
3f6d(5): mov $0x1,0xf(%rsp)
3f72(5): mov $0x0,0xd(%rsp)
3f77(9): mov $0x1,0x18(%rsp)
3f80(3): xor %r15d,%r15d
3f83(5): mov %rax,0x48(%rsp)
3f88(5): jmp 0xfffff02b(%rip)
3f8d(3): nop (%rax)
3f90(3): mov %r11,%rbp
3f93(5): movzx 0xf(%rsp),%eax
3f98(5): jmp 0xfffffad1(%rip)
3f9d(7): lea 0x2a3f(%rip),%rax
3fa4(5): mov $0x1,0xe(%rsp)
3fa9(5): mov $0x0,0x7c(%rsp)
3fae(3): xor %r12d,%r12d
3fb1(9): mov $0x0,0x50(%rsp)
3fba(5): mov $0x1,0xf(%rsp)
3fbf(5): mov $0x1,0xd(%rsp)
3fc4(9): mov $0x1,0x18(%rsp)
3fcd(3): xor %r15d,%r15d
3fd0(5): mov %rax,0x48(%rsp)
3fd5(5): jmp 0xffffefde(%rip)
3fda(2): mov %edx,%eax
3fdc(5): mov 0x48(%rsp),%rbx
3fe1(3): test %rbx,%rbx
3fe4(2): jz 0x2e(%rip)
3fe6(2): test %al,%al
3fe8(2): jz 0x2a(%rip)
3fea(3): movzx (%rbx),%ecx
3fed(3): mov %rbx,%rax
3ff0(2): test %cl,%cl
3ff2(2): jz 0x20(%rip)
3ff4(3): mov %r15,%rdx
3ff7(3): sub %r15,%rax
3ffa(3): cmp %rdx,%r13
3ffd(2): jbe 0x6(%rip)
3fff(4): mov %cl,0x0(%r14,%rdx,1)
4003(4): add $0x1,%rdx
4007(4): movzx 0x0(%rax,%rdx,1),%ecx
400b(2): test %cl,%cl
400d(2): jnz 0xffffffed(%rip)
400f(3): mov %rdx,%r15
4012(3): cmp %r15,%r13
4015(6): jbe 0xfffffaa4(%rip)
401b(5): mov $0x0,0x0(%r14,%r15,1)
4020(5): jmp 0xfffffa99(%rip)
4025(5): cmp $0x2,0x8(%rsp)
402a(5): movzx 0xf(%rsp),%ebx
402f(3): mov %r11,%rbp
4032(3): setz %al
4035(4): mov %bl,0xd(%rsp)
4039(5): jmp 0xfffffa30(%rip)
403e(4): mov 0x8(%rsp),%esi
4042(3): mov %rcx,%rdi
4045(5): call 0xffffedab(%rip)
404a(5): mov %rax,0x68(%rsp)
404f(5): jmp 0xfffffc57(%rip)
4054(4): mov 0x8(%rsp),%esi
4058(3): mov %rcx,%rdi
405b(5): call 0xffffed95(%rip)
4060(5): mov %rax,0x60(%rsp)
4065(5): jmp 0xfffffc6c(%rip)
406a(5): movzx 0xf(%rsp),%ebx
406f(3): mov %r11,%rbp
4072(2): mov %edx,%eax
4074(4): mov %bl,0xd(%rsp)
4078(5): jmp 0xfffff9f1(%rip)
407d(4): sub $0x8,%rsp
4081(6): mov $0x5,%r8d
4087(3): mov %r11,%rcx
408a(4): push 0x68(%rsp)
408e(4): push 0x78(%rsp)
4092(3): mov %r14,%rdi
4095(4): push 0x38(%rsp)
4099(8): mov 0x98(%rsp),%r9d
40a1(5): mov 0x30(%rsp),%rdx
40a6(5): mov 0x70(%rsp),%rsi
40ab(5): call 0xffffee35(%rip)
40b0(4): add $0x20,%rsp
40b4(3): mov %rax,%r15
40b7(5): jmp 0xfffffa02(%rip)
40bc(5): movzx 0x7c(%rsp),%eax
40c1(5): jmp 0xffffff1b(%rip)
40c6(8): mov $0x2,0x8(%rsp)
40ce(5): jmp 0xfffff99b(%rip)
40d3(5): call 0xffffd61d(%rip)
40d8(5): mov $0x0,0xd(%rsp)
40dd(5): jmp 0xfffffa74(%rip)
40e2(3): mov %r11,%rbp
40e5(5): jmp 0xfffff99b(%rip)
40ea(5): mov $0x1,0xe(%rsp)
40ef(2): xor %eax,%eax
40f1(3): xor %r12d,%r12d
40f4(9): mov $0x0,0x50(%rsp)
40fd(5): jmp 0xfffff5a7(%rip)
4102(3): mov %r13,%rdx
4105(5): mov 0x50(%rsp),%r13
410a(5): jmp 0xfffff5f8(%rip)
410f(5): call 0xffffd521(%rip)

"quotearg_n_options" :
4120(2): push %r15
4122(2): push %r14
4124(3): movsxd %edi,%r15
4127(2): push %r13
4129(2): push %r12
412b(3): mov %rdx,%r14
412e(1): push %rbp
412f(1): push %rbx
4130(3): mov %rcx,%rbp
4133(4): sub $0x28,%rsp
4137(5): mov %rsi,0x8(%rsp)
413c(5): call 0xffffd504(%rip)
4141(3): mov %rax,%r13
4144(2): mov (%rax),%eax
4146(3): test %r15d,%r15d
4149(7): mov 0x204f30(%rip),%rbx
4150(4): mov %eax,0x18(%rsp)
4154(6): js 0x16d(%rip)
415a(7): cmp %r15d,0x204f17(%rip)
4161(2): jnle 0x64(%rip)
4163(7): cmp $0x7fffffff,%r15d
416a(6): jz 0x15c(%rip)
4170(4): lea 0x1(%r15),%r12d
4174(7): lea 0x204f15(%rip),%rax
417b(3): movsxd %r12d,%rsi
417e(4): shl/sal $0x4,%rsi
4182(3): cmp %rax,%rbx
4185(6): jz 0x11b(%rip)
418b(3): mov %rbx,%rdi
418e(5): call 0x1412(%rip)
4193(3): mov %rax,%rbx
4196(7): mov %rax,0x204ee3(%rip)
419d(7): movsxd 0x204ed4(%rip),%rdi
41a4(3): mov %r12d,%edx
41a7(2): xor %esi,%esi
41a9(2): sub %edi,%edx
41ab(4): shl/sal $0x4,%rdi
41af(3): movsxd %edx,%rdx
41b2(3): add %rbx,%rdi
41b5(4): shl/sal $0x4,%rdx
41b9(5): call 0xffffd5d7(%rip)
41be(7): mov %r12d,0x204eb3(%rip)
41c5(3): mov 0x4(%rbp),%eax
41c8(4): shl/sal $0x4,%r15
41cc(4): sub $0x8,%rsp
41d0(3): add %r15,%rbx
41d3(4): lea 0x8(%rbp),%r15
41d7(4): mov 0x0(%rbp),%r8d
41db(3): mov (%rbx),%r11
41de(4): mov 0x8(%rbx),%r12
41e2(3): mov %r14,%rcx
41e5(3): or $0x1,%eax
41e8(4): mov %eax,0x24(%rsp)
41ec(3): push 0x30(%rbp)
41ef(3): mov %eax,%r9d
41f2(3): push 0x28(%rbp)
41f5(2): push %r15
41f7(3): mov %r11,%rsi
41fa(5): mov 0x28(%rsp),%rdx
41ff(3): mov %r12,%rdi
4202(5): mov %r11,0x30(%rsp)
4207(5): call 0xffffecd9(%rip)
420c(4): add $0x20,%rsp
4210(5): mov 0x10(%rsp),%r11
4215(3): cmp %rax,%r11
4218(2): jnbe 0x69(%rip)
421a(4): lea 0x1(%rax),%rsi
421e(7): lea 0x204f3b(%rip),%rax
4225(3): cmp %rax,%r12
4228(3): mov %rsi,(%rbx)
422b(2): jz 0x14(%rip)
422d(3): mov %r12,%rdi
4230(5): mov %rsi,0x10(%rsp)
4235(5): call 0xffffd3eb(%rip)
423a(5): mov 0x10(%rsp),%rsi
423f(3): mov %rsi,%rdi
4242(5): mov %rsi,0x10(%rsp)
4247(5): call 0x12f9(%rip)
424c(4): sub $0x8,%rsp
4250(4): mov %rax,0x8(%rbx)
4254(4): mov 0x0(%rbp),%r8d
4258(3): push 0x30(%rbp)
425b(3): push 0x28(%rbp)
425e(3): mov %r14,%rcx
4261(2): push %r15
4263(5): mov 0x3c(%rsp),%r9d
4268(3): mov %rax,%rdi
426b(5): mov 0x28(%rsp),%rdx
4270(5): mov 0x30(%rsp),%rsi
4275(3): mov %rax,%r12
4278(5): call 0xffffec68(%rip)
427d(4): add $0x20,%rsp
4281(4): mov 0x18(%rsp),%eax
4285(4): mov %eax,0x0(%r13)
4289(4): add $0x28,%rsp
428d(3): mov %r12,%rax
4290(1): pop %rbx
4291(1): pop %rbp
4292(2): pop %r12
4294(2): pop %r13
4296(2): pop %r14
4298(2): pop %r15
429a(1): ret near (%rsp)
429b(5): nop 0x0(%rax,%rax,1)
42a0(2): xor %edi,%edi
42a2(5): call 0x12fe(%rip)
42a7(8): movdqa 0x204de1(%rip),%xmm0
42af(3): mov %rax,%rbx
42b2(7): mov %rax,0x204dc7(%rip)
42b9(3): movups %xmm0,(%rax)
42bc(5): jmp 0xfffffee1(%rip)
42c1(5): call 0xffffd36f(%rip)
42c6(5): call 0x14ca(%rip)

"clone_quoting_options" :
42d0(2): push %r12
42d2(1): push %rbp
42d3(1): push %rbx
42d4(3): mov %rdi,%rbx
42d7(5): call 0xffffd369(%rip)
42dc(3): mov (%rax),%r12d
42df(3): mov %rax,%rbp
42e2(7): lea 0x204f77(%rip),%rax
42e9(3): test %rbx,%rbx
42ec(5): mov $0x38,%esi
42f1(4): cmove %rax,%rbx
42f5(3): mov %rbx,%rdi
42f8(5): call 0x1448(%rip)
42fd(4): mov %r12d,0x0(%rbp)
4301(1): pop %rbx
4302(1): pop %rbp
4303(2): pop %r12
4305(1): ret near (%rsp)

"get_quoting_style" :
4310(7): lea 0x204f49(%rip),%rax
4317(3): test %rdi,%rdi
431a(4): cmove %rax,%rdi
431e(2): mov (%rdi),%eax
4320(1): ret near (%rsp)

"set_quoting_style" :
4330(7): lea 0x204f29(%rip),%rax
4337(3): test %rdi,%rdi
433a(4): cmove %rax,%rdi
433e(2): mov %esi,(%rdi)
4340(1): ret near (%rsp)

"set_char_quoting" :
4350(7): lea 0x204f09(%rip),%rax
4357(3): test %rdi,%rdi
435a(2): mov %esi,%ecx
435c(4): cmove %rax,%rdi
4360(2): mov %esi,%eax
4362(3): and $0x1f,%ecx
4365(3): shr $0x5,%al
4368(3): movzx %al,%eax
436b(5): lea 0x8(%rdi,%rax,4),%rdi
4370(2): mov (%rdi),%esi
4372(2): mov %esi,%eax
4374(2): shr %cl,%eax
4376(2): xor %eax,%edx
4378(3): and $0x1,%eax
437b(3): and $0x1,%edx
437e(2): shl/sal %cl,%edx
4380(2): xor %esi,%edx
4382(2): mov %edx,(%rdi)
4384(1): ret near (%rsp)

"set_quoting_flags" :
4390(7): lea 0x204ec9(%rip),%rax
4397(3): test %rdi,%rdi
439a(4): cmove %rax,%rdi
439e(3): mov 0x4(%rdi),%eax
43a1(3): mov %esi,0x4(%rdi)
43a4(1): ret near (%rsp)

"set_custom_quoting" :
43b0(7): lea 0x204ea9(%rip),%rax
43b7(3): test %rdi,%rdi
43ba(4): cmove %rax,%rdi
43be(3): test %rsi,%rsi
43c1(6): mov $0xa,(%rdi)
43c7(2): jz 0x10(%rip)
43c9(3): test %rdx,%rdx
43cc(2): jz 0xb(%rip)
43ce(4): mov %rsi,0x28(%rdi)
43d2(4): mov %rdx,0x30(%rdi)
43d6(1): ret near (%rsp)
43d7(4): sub $0x8,%rsp
43db(5): call 0xffffd255(%rip)

"quotearg_buffer" :
43e0(2): push %r15
43e2(2): push %r14
43e4(7): lea 0x204e75(%rip),%rax
43eb(2): push %r13
43ed(2): push %r12
43ef(3): mov %rdi,%r13
43f2(1): push %rbp
43f3(1): push %rbx
43f4(3): mov %r8,%rbx
43f7(3): mov %rsi,%r14
43fa(3): mov %rdx,%r15
43fd(4): sub $0x18,%rsp
4401(3): test %r8,%r8
4404(4): cmove %rax,%rbx
4408(5): mov %rcx,0x8(%rsp)
440d(5): call 0xffffd233(%rip)
4412(3): mov (%rax),%r12d
4415(3): mov %rax,%rbp
4418(4): lea 0x8(%rbx),%rax
441c(4): sub $0x8,%rsp
4420(4): mov 0x4(%rbx),%r9d
4424(3): push 0x30(%rbx)
4427(3): mov (%rbx),%r8d
442a(3): push 0x28(%rbx)
442d(3): mov %r15,%rdx
4430(1): push %rax
4431(5): mov 0x28(%rsp),%rcx
4436(3): mov %r14,%rsi
4439(3): mov %r13,%rdi
443c(5): call 0xffffeaa4(%rip)
4441(4): mov %r12d,0x0(%rbp)
4445(4): add $0x38,%rsp
4449(1): pop %rbx
444a(1): pop %rbp
444b(2): pop %r12
444d(2): pop %r13
444f(2): pop %r14
4451(2): pop %r15
4453(1): ret near (%rsp)

"quotearg_alloc_mem" :
4460(2): push %r15
4462(2): push %r14
4464(7): lea 0x204df5(%rip),%rax
446b(2): push %r13
446d(2): push %r12
446f(3): mov %rdx,%r12
4472(1): push %rbp
4473(1): push %rbx
4474(3): mov %rcx,%rbx
4477(3): mov %rdi,%r14
447a(3): mov %rsi,%r15
447d(4): sub $0x38,%rsp
4481(3): test %rcx,%rcx
4484(4): cmove %rax,%rbx
4488(2): xor %ebp,%ebp
448a(5): call 0xffffd1b6(%rip)
448f(3): test %r12,%r12
4492(3): mov %rax,%r13
4495(2): mov (%rax),%eax
4497(4): setz %bpl
449b(3): or 0x4(%rbx),%ebp
449e(4): lea 0x8(%rbx),%r10
44a2(4): sub $0x8,%rsp
44a6(3): mov (%rbx),%r8d
44a9(3): mov %r15,%rcx
44ac(4): mov %eax,0x14(%rsp)
44b0(3): push 0x30(%rbx)
44b3(3): mov %r14,%rdx
44b6(3): push 0x28(%rbx)
44b9(2): push %r10
44bb(2): xor %esi,%esi
44bd(3): mov %ebp,%r9d
44c0(2): xor %edi,%edi
44c2(5): mov %r10,0x40(%rsp)
44c7(5): call 0xffffea19(%rip)
44cc(4): lea 0x1(%rax),%rsi
44d0(5): mov %rax,0x48(%rsp)
44d5(4): add $0x20,%rsp
44d9(3): mov %rsi,%rdi
44dc(5): mov %rsi,0x18(%rsp)
44e1(5): call 0x105f(%rip)
44e6(5): mov %rax,0x10(%rsp)
44eb(4): sub $0x8,%rsp
44ef(3): push 0x30(%rbx)
44f2(3): push 0x28(%rbx)
44f5(5): mov 0x38(%rsp),%r10
44fa(3): mov %ebp,%r9d
44fd(3): mov (%rbx),%r8d
4500(3): mov %r15,%rcx
4503(3): mov %r14,%rdx
4506(3): mov %rax,%rdi
4509(2): push %r10
450b(5): mov 0x38(%rsp),%rsi
4510(5): call 0xffffe9d0(%rip)
4515(4): mov 0x2c(%rsp),%eax
4519(4): add $0x20,%rsp
451d(3): test %r12,%r12
4520(4): mov %eax,0x0(%r13)
4524(2): jz 0xb(%rip)
4526(5): mov 0x28(%rsp),%r11
452b(4): mov %r11,(%r12)
452f(5): mov 0x10(%rsp),%rax
4534(4): add $0x38,%rsp
4538(1): pop %rbx
4539(1): pop %rbp
453a(2): pop %r12
453c(2): pop %r13
453e(2): pop %r14
4540(2): pop %r15
4542(1): ret near (%rsp)

"quotearg_alloc" :
4550(3): mov %rdx,%rcx
4553(2): xor %edx,%edx
4555(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4560(6): mov 0x204b12(%rip),%eax
4566(2): push %r12
4568(7): mov 0x204b11(%rip),%r12
456f(1): push %rbp
4570(1): push %rbx
4571(3): cmp $0x1,%eax
4574(2): jle 0x2d(%rip)
4576(3): sub $0x2,%eax
4579(5): lea 0x18(%r12),%rbx
457e(4): shl/sal $0x4,%rax
4582(5): lea 0x28(%r12,%rax,1),%rbp
4587(9): nop 0x0(%rax,%rax,1)
4590(3): mov (%rbx),%rdi
4593(4): add $0x10,%rbx
4597(5): call 0xffffd089(%rip)
459c(3): cmp %rbp,%rbx
459f(2): jnz 0xfffffff1(%rip)
45a1(5): mov 0x8(%r12),%rdi
45a6(7): lea 0x204bb3(%rip),%rbx
45ad(3): cmp %rbx,%rdi
45b0(2): jz 0x19(%rip)
45b2(5): call 0xffffd06e(%rip)
45b7(b): mov $0x100,0x204ace(%rip)
45c2(7): mov %rbx,0x204acf(%rip)
45c9(7): lea 0x204ac0(%rip),%rbx
45d0(3): cmp %rbx,%r12
45d3(2): jz 0x11(%rip)
45d5(3): mov %r12,%rdi
45d8(5): call 0xffffd048(%rip)
45dd(7): mov %rbx,0x204a9c(%rip)
45e4(1): pop %rbx
45e5(a): mov $0x1,0x204a89(%rip)
45ef(1): pop %rbp
45f0(2): pop %r12
45f2(1): ret near (%rsp)

"quotearg_n" :
4600(7): lea 0x204c59(%rip),%rcx
4607(7): mov $0xffffffff,%rdx
460e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4620(7): lea 0x204c39(%rip),%rcx
4627(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4630(7): lea 0x204c29(%rip),%rcx
4637(3): mov %rdi,%rsi
463a(7): mov $0xffffffff,%rdx
4641(2): xor %edi,%edi
4643(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4650(7): lea 0x204c09(%rip),%rcx
4657(3): mov %rsi,%rdx
465a(3): mov %rdi,%rsi
465d(2): xor %edi,%edi
465f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4670(4): sub $0x48,%rsp
4674(3): mov %rdx,%rax
4677(9): mov $0x28,%rdx
4680(5): mov %rdx,0x38(%rsp)
4685(2): xor %edx,%edx
4687(3): cmp $0xa,%esi
468a(2): jz 0x6a(%rip)
468c(3): mov %esi,(%rsp)
468f(3): mov %rsp,%rcx
4692(7): mov $0xffffffff,%rdx
4699(3): mov %rax,%rsi
469c(9): mov $0x0,0x4(%rsp)
46a5(9): mov $0x0,0xc(%rsp)
46ae(9): mov $0x0,0x14(%rsp)
46b7(9): mov $0x0,0x1c(%rsp)
46c0(9): mov $0x0,0x24(%rsp)
46c9(9): mov $0x0,0x2c(%rsp)
46d2(8): mov $0x0,0x34(%rsp)
46da(5): call 0xfffffa46(%rip)
46df(5): mov 0x38(%rsp),%rcx
46e4(9): xor $0x28,%rcx
46ed(2): jnz 0xc(%rip)
46ef(4): add $0x48,%rsp
46f3(1): ret near (%rsp)
46f4(5): call 0xffffcf3c(%rip)
46f9(5): call 0xffffcff7(%rip)

"quotearg_n_style_mem" :
4700(4): sub $0x48,%rsp
4704(3): mov %rdx,%rax
4707(3): mov %rcx,%rdx
470a(9): mov $0x28,%rcx
4713(5): mov %rcx,0x38(%rsp)
4718(2): xor %ecx,%ecx
471a(3): cmp $0xa,%esi
471d(2): jz 0x63(%rip)
471f(3): mov %esi,(%rsp)
4722(3): mov %rsp,%rcx
4725(3): mov %rax,%rsi
4728(9): mov $0x0,0x4(%rsp)
4731(9): mov $0x0,0xc(%rsp)
473a(9): mov $0x0,0x14(%rsp)
4743(9): mov $0x0,0x1c(%rsp)
474c(9): mov $0x0,0x24(%rsp)
4755(9): mov $0x0,0x2c(%rsp)
475e(8): mov $0x0,0x34(%rsp)
4766(5): call 0xfffff9ba(%rip)
476b(5): mov 0x38(%rsp),%rdx
4770(9): xor $0x28,%rdx
4779(2): jnz 0xc(%rip)
477b(4): add $0x48,%rsp
477f(1): ret near (%rsp)
4780(5): call 0xffffceb0(%rip)
4785(5): call 0xffffcf6b(%rip)

"quotearg_style" :
4790(3): mov %rsi,%rdx
4793(2): mov %edi,%esi
4795(2): xor %edi,%edi
4797(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
47a0(3): mov %rdx,%rcx
47a3(3): mov %rsi,%rdx
47a6(2): mov %edi,%esi
47a8(2): xor %edi,%edi
47aa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
47b0(4): sub $0x48,%rsp
47b4(2): mov %edx,%ecx
47b6(9): mov $0x28,%rax
47bf(5): mov %rax,0x38(%rsp)
47c4(2): xor %eax,%eax
47c6(7): mov 0x204ac3(%rip),%rax
47cd(3): mov %rsp,%r8
47d0(3): and $0x1f,%ecx
47d3(8): movdqa 0x204a85(%rip),%xmm0
47db(5): mov %rax,0x30(%rsp)
47e0(2): mov %edx,%eax
47e2(4): movaps %xmm0,(%rsp)
47e6(3): shr $0x5,%al
47e9(3): movzx %al,%eax
47ec(5): lea 0x8(%r8,%rax,4),%r9
47f1(8): movdqa 0x204a77(%rip),%xmm0
47f9(5): movaps %xmm0,0x10(%rsp)
47fe(8): movdqa 0x204a7a(%rip),%xmm0
4806(5): movaps %xmm0,0x20(%rsp)
480b(3): mov (%r9),%edx
480e(2): mov %edx,%eax
4810(2): shr %cl,%eax
4812(2): not %eax
4814(3): and $0x1,%eax
4817(2): shl/sal %cl,%eax
4819(3): mov %r8,%rcx
481c(2): xor %edx,%eax
481e(3): mov %rsi,%rdx
4821(3): mov %rdi,%rsi
4824(3): mov %eax,(%r9)
4827(2): xor %edi,%edi
4829(5): call 0xfffff8f7(%rip)
482e(5): mov 0x38(%rsp),%rsi
4833(9): xor $0x28,%rsi
483c(2): jnz 0x7(%rip)
483e(4): add $0x48,%rsp
4842(1): ret near (%rsp)
4843(5): call 0xffffcead(%rip)

"quotearg_char" :
4850(4): movsx %sil,%edx
4854(7): mov $0xffffffff,%rsi
485b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4860(5): mov $0x3a,%edx
4865(7): mov $0xffffffff,%rsi
486c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4880(5): mov $0x3a,%edx
4885(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4890(4): sub $0x48,%rsp
4894(3): mov %rdx,%rax
4897(9): mov $0x28,%rdx
48a0(5): mov %rdx,0x38(%rsp)
48a5(2): xor %edx,%edx
48a7(3): cmp $0xa,%esi
48aa(2): jz 0x6a(%rip)
48ac(3): mov %esi,(%rsp)
48af(3): mov %rsp,%rcx
48b2(7): mov $0xffffffff,%rdx
48b9(3): mov %rax,%rsi
48bc(9): mov $0x0,0x4(%rsp)
48c5(9): mov $0x4000000,0xc(%rsp)
48ce(9): mov $0x0,0x14(%rsp)
48d7(9): mov $0x0,0x1c(%rsp)
48e0(9): mov $0x0,0x24(%rsp)
48e9(9): mov $0x0,0x2c(%rsp)
48f2(8): mov $0x0,0x34(%rsp)
48fa(5): call 0xfffff826(%rip)
48ff(5): mov 0x38(%rsp),%rcx
4904(9): xor $0x28,%rcx
490d(2): jnz 0xc(%rip)
490f(4): add $0x48,%rsp
4913(1): ret near (%rsp)
4914(5): call 0xffffcd1c(%rip)
4919(5): call 0xffffcdd7(%rip)

"quotearg_n_custom_mem" :
4920(4): sub $0x48,%rsp
4924(3): mov %rcx,%r9
4927(7): mov 0x204962(%rip),%rcx
492e(8): movdqa 0x20492a(%rip),%xmm0
4936(9): mov $0x28,%rax
493f(5): mov %rax,0x38(%rsp)
4944(2): xor %eax,%eax
4946(4): movaps %xmm0,(%rsp)
494a(3): test %rsi,%rsi
494d(5): mov %rcx,0x30(%rsp)
4952(7): mov $0xa,(%rsp)
4959(8): movdqa 0x20490f(%rip),%xmm0
4961(5): movaps %xmm0,0x10(%rsp)
4966(8): movdqa 0x204912(%rip),%xmm0
496e(5): movaps %xmm0,0x20(%rsp)
4973(2): jz 0x34(%rip)
4975(3): test %rdx,%rdx
4978(2): jz 0x2f(%rip)
497a(5): mov %rsi,0x28(%rsp)
497f(5): mov %rdx,0x30(%rsp)
4984(3): mov %rsp,%rcx
4987(3): mov %r8,%rdx
498a(3): mov %r9,%rsi
498d(5): call 0xfffff793(%rip)
4992(5): mov 0x38(%rsp),%rdi
4997(9): xor $0x28,%rdi
49a0(2): jnz 0xc(%rip)
49a2(4): add $0x48,%rsp
49a6(1): ret near (%rsp)
49a7(5): call 0xffffcc89(%rip)
49ac(5): call 0xffffcd44(%rip)

"quotearg_n_custom" :
49c0(7): mov $0xffffffff,%r8
49c7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
49d0(3): mov %rdx,%rcx
49d3(7): mov $0xffffffff,%r8
49da(3): mov %rsi,%rdx
49dd(3): mov %rdi,%rsi
49e0(2): xor %edi,%edi
49e2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
49f0(3): mov %rcx,%r8
49f3(3): mov %rdx,%rcx
49f6(3): mov %rsi,%rdx
49f9(3): mov %rdi,%rsi
49fc(2): xor %edi,%edi
49fe(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4a10(7): lea 0x204629(%rip),%rcx
4a17(5): jmp 0xfffff709(%rip)

"quote_mem" :
4a20(7): lea 0x204619(%rip),%rcx
4a27(3): mov %rsi,%rdx
4a2a(3): mov %rdi,%rsi
4a2d(2): xor %edi,%edi
4a2f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4a40(7): lea 0x2045f9(%rip),%rcx
4a47(7): mov $0xffffffff,%rdx
4a4e(5): jmp 0xfffff6d2(%rip)

"quote" :
4a60(7): lea 0x2045d9(%rip),%rcx
4a67(3): mov %rdi,%rsi
4a6a(7): mov $0xffffffff,%rdx
4a71(2): xor %edi,%edi
4a73(5): jmp 0xfffff6ad(%rip)

"parse_with_separator" :
4a80(2): push %r15
4a82(2): push %r14
4a84(3): mov %rsi,%r10
4a87(2): push %r13
4a89(2): push %r12
4a8b(3): mov %rcx,%r12
4a8e(1): push %rbp
4a8f(1): push %rbx
4a90(3): mov %r8,%r13
4a93(3): mov %r9,%r14
4a96(6): mov $0xffffffff,%r15d
4a9c(4): sub $0x58,%rsp
4aa0(2): mov (%rdx),%eax
4aa2(9): mov $0x28,%rcx
4aab(5): mov %rcx,0x48(%rsp)
4ab0(2): xor %ecx,%ecx
4ab2(3): test %r12,%r12
4ab5(5): mov %rdx,0x10(%rsp)
4aba(4): mov %eax,0x18(%rsp)
4abe(2): jz 0x6(%rip)
4ac0(4): mov (%r12),%r15d
4ac4(3): test %r13,%r13
4ac7(2): jz 0xa(%rip)
4ac9(8): mov $0x0,0x0(%r13)
4ad1(3): test %r14,%r14
4ad4(2): jz 0x9(%rip)
4ad6(7): mov $0x0,(%r14)
4add(3): test %r10,%r10
4ae0(6): jz 0x198(%rip)
4ae6(3): mov %r10,%rbx
4ae9(3): sub %rdi,%rbx
4aec(6): jnz 0xd4(%rip)
4af2(5): cmp $0x0,0x1(%r10)
4af7(6): jz 0x211(%rip)
4afd(4): add $0x1,%r10
4b01(8): mov $0x0,(%rsp)
4b09(5): setnz 0x1e(%rsp)
4b0e(5): mov %r10,0x8(%rsp)
4b13(2): xor %ebp,%ebp
4b15(2): xor %ebx,%ebx
4b17(5): cmp $0x0,0x1e(%rsp)
4b1c(6): jz 0x2f4(%rip)
4b22(5): mov 0x8(%rsp),%rax
4b27(3): cmp $0x2b,(%rax)
4b2a(6): jz 0x176(%rip)
4b30(5): mov 0x8(%rsp),%rdi
4b35(5): call 0xffffcccb(%rip)
4b3a(3): test %rax,%rax
4b3d(6): jz 0x163(%rip)
4b43(4): mov 0x10(%rax),%r15d
4b47(5): call 0xffffcab9(%rip)
4b4c(5): mov 0x8(%rsp),%rdi
4b51(5): call 0xc1f(%rip)
4b56(3): mov %rax,%rbx
4b59(3): mov %rbp,%r10
4b5c(5): mov 0x10(%rsp),%rax
4b61(4): mov 0x18(%rsp),%esi
4b65(3): test %r12,%r12
4b68(2): mov %esi,(%rax)
4b6a(2): jz 0x6(%rip)
4b6c(4): mov %r15d,(%r12)
4b70(3): test %r13,%r13
4b73(2): jz 0x9(%rip)
4b75(4): mov %r10,0x0(%r13)
4b79(3): xor %r10d,%r10d
4b7c(3): test %r14,%r14
4b7f(2): jz 0x7(%rip)
4b81(3): mov %rbx,(%r14)
4b84(2): xor %ebx,%ebx
4b86(3): mov %r10,%rdi
4b89(5): call 0xffffca97(%rip)
4b8e(3): mov %rbx,%rdi
4b91(5): call 0xffffca8f(%rip)
4b96(2): xor %eax,%eax
4b98(5): mov 0x48(%rsp),%rdx
4b9d(9): xor $0x28,%rdx
4ba6(6): jnz 0x28f(%rip)
4bac(4): add $0x58,%rsp
4bb0(1): pop %rbx
4bb1(1): pop %rbp
4bb2(2): pop %r12
4bb4(2): pop %r13
4bb6(2): pop %r14
4bb8(2): pop %r15
4bba(1): ret near (%rsp)
4bbb(5): nop 0x0(%rax,%rax,1)
4bc0(4): lea 0x1(%rbx),%rsi
4bc4(4): mov %r10,(%rsp)
4bc8(5): call 0xb78(%rip)
4bcd(4): mov (%rsp),%r10
4bd1(4): mov $0x0,0x0(%rax,%rbx,1)
4bd5(3): mov %rax,%rbp
4bd8(5): cmp $0x0,0x1(%r10)
4bdd(6): jnz 0x153(%rip)
4be3(3): test %rbp,%rbp
4be6(6): jz 0x122(%rip)
4bec(5): mov $0x0,0x1e(%rsp)
4bf1(5): mov $0x1,%eax
4bf6(9): mov $0x0,0x8(%rsp)
4bff(3): test %r10,%r10
4c02(4): setnz %r9b
4c06(3): and %eax,%r9d
4c09(4): cmp $0x2b,0x0(%rbp)
4c0d(2): jz 0x43(%rip)
4c0f(3): mov %rbp,%rdi
4c12(4): mov %r9b,(%rsp)
4c16(5): call 0xffffcbca(%rip)
4c1b(3): test %rax,%rax
4c1e(5): movzx (%rsp),%r9d
4c23(2): jz 0x2d(%rip)
4c25(3): mov 0x10(%rax),%ecx
4c28(2): xor %ebx,%ebx
4c2a(3): test %r9b,%r9b
4c2d(8): mov $0x0,(%rsp)
4c35(4): mov %ecx,0x18(%rsp)
4c39(6): jnz 0x11f(%rip)
4c3f(5): call 0xffffcc31(%rip)
4c44(5): jmp 0xfffffed3(%rip)
4c49(7): nop 0x0(%rax)
4c50(3): test %r9b,%r9b
4c53(6): jz 0x13d(%rip)
4c59(7): lea 0x2255(%rip),%rax
4c60(5): mov $0x0,0x1e(%rsp)
4c65(2): xor %ebx,%ebx
4c67(4): mov %rax,(%rsp)
4c6b(5): call 0xffffcc05(%rip)
4c70(5): jmp 0xfffffea7(%rip)
4c75(3): nop (%rax)
4c78(2): xor %ebx,%ebx
4c7a(3): cmp $0x0,(%rdi)
4c7d(6): jz 0xfffffedf(%rip)
4c83(4): mov %r10,(%rsp)
4c87(5): call 0xae9(%rip)
4c8c(4): mov (%rsp),%r10
4c90(3): mov %rax,%rbp
4c93(5): jmp 0xffffff50(%rip)
4c98(8): nop 0x0(%rax,%rax,1)
4ca0(5): mov 0x8(%rsp),%rdi
4ca5(5): lea 0x28(%rsp),%rcx
4caa(7): lea 0x2278(%rip),%r8
4cb1(2): xor %esi,%esi
4cb3(5): mov $0xa,%edx
4cb8(5): call 0xb48(%rip)
4cbd(2): test %eax,%eax
4cbf(2): jz 0x59(%rip)
4cc1(5): call 0xffffc93f(%rip)
4cc6(5): mov 0x8(%rsp),%rdi
4ccb(5): call 0xaa5(%rip)
4cd0(3): mov %rax,%rbx
4cd3(7): lea 0x21e8(%rip),%rax
4cda(4): mov %rax,(%rsp)
4cde(3): mov %rbp,%rdi
4ce1(5): call 0xffffc93f(%rip)
4ce6(3): mov %rbx,%rdi
4ce9(5): call 0xffffc937(%rip)
4cee(4): mov (%rsp),%rsi
4cf2(5): mov $0x5,%edx
4cf7(2): xor %edi,%edi
4cf9(5): call 0xffffc9c7(%rip)
4cfe(5): jmp 0xfffffe9a(%rip)
4d03(5): nop 0x0(%rax,%rax,1)
4d08(3): xor %r10d,%r10d
4d0b(2): xor %ebx,%ebx
4d0d(5): jmp 0xfffffe4f(%rip)
4d12(6): nop 0x0(%rax,%rax,1)
4d18(5): mov 0x28(%rsp),%rax
4d1d(5): mov $0xfffffffe,%edx
4d22(3): cmp %rdx,%rax
4d25(3): mov %eax,%r15d
4d28(6): jbe 0xfffffe1f(%rip)
4d2e(2): jmp 0xffffff93(%rip)
4d30(3): mov %r10,%rax
4d33(4): add $0x1,%rax
4d37(5): setnz 0x1e(%rsp)
4d3c(3): test %rbp,%rbp
4d3f(5): mov %rax,0x8(%rsp)
4d44(6): jz 0xf6(%rip)
4d4a(3): test %rax,%rax
4d4d(3): setz %al
4d50(5): jmp 0xfffffeaf(%rip)
4d55(3): nop (%rax)
4d58(4): mov 0x14(%rax),%r15d
4d5c(3): mov %r15d,%edi
4d5f(5): call 0xffffc9e1(%rip)
4d64(3): test %rax,%rax
4d67(6): jz 0xb9(%rip)
4d6d(3): mov (%rax),%rdi
4d70(5): call 0xa00(%rip)
4d75(3): mov %rax,%rbx
4d78(5): call 0xffffc888(%rip)
4d7d(8): mov $0x0,(%rsp)
4d85(5): jmp 0xfffffeba(%rip)
4d8a(6): nop 0x0(%rax,%rax,1)
4d90(5): lea 0x28(%rsp),%rcx
4d95(7): lea 0x218d(%rip),%r8
4d9c(2): xor %esi,%esi
4d9e(5): mov $0xa,%edx
4da3(3): mov %rbp,%rdi
4da6(5): mov %r9b,0x1f(%rsp)
4dab(5): call 0xa55(%rip)
4db0(7): lea 0x20f1(%rip),%rsi
4db7(2): test %eax,%eax
4db9(6): movzx 0x1f(%rsp),%r9d
4dbf(4): mov %rsi,(%rsp)
4dc3(2): jnz 0x33(%rip)
4dc5(5): mov 0x28(%rsp),%rax
4dca(5): movzx 0x1e(%rsp),%ecx
4dcf(5): mov $0xfffffffe,%edx
4dd4(3): cmp %rdx,%rax
4dd7(4): cmovnbe %r9d,%ecx
4ddb(3): mov %ecx,%r9d
4dde(4): mov 0x18(%rsp),%ecx
4de2(3): cmovbe %eax,%ecx
4de5(5): mov $0x0,%eax
4dea(4): cmovnbe %rsi,%rax
4dee(4): mov %ecx,0x18(%rsp)
4df2(4): mov %rax,(%rsp)
4df6(5): mov %r9b,0x1e(%rsp)
4dfb(2): xor %ebx,%ebx
4dfd(5): call 0xffffca73(%rip)
4e02(5): jmp 0xfffffd15(%rip)
4e07(9): nop 0x0(%rax,%rax,1)
4e10(5): cmp $0x0,(%rsp)
4e15(6): jnz 0xfffffec9(%rip)
4e1b(5): jmp 0xfffffd3e(%rip)
4e20(5): lea 0x30(%rsp),%rsi
4e25(3): mov %r15d,%edi
4e28(5): call 0xffffded8(%rip)
4e2d(3): mov %rax,%rdi
4e30(5): jmp 0xffffff40(%rip)
4e35(5): call 0xffffc8bb(%rip)
4e3a(2): xor %ebx,%ebx
4e3c(8): mov $0x0,(%rsp)
4e44(5): jmp 0xfffffcd3(%rip)

"parse_user_spec" :
4e50(3): test %rdx,%rdx
4e53(6): jz 0xad(%rip)
4e59(2): push %r15
4e5b(2): push %r14
4e5d(3): mov %rsi,%r14
4e60(2): push %r13
4e62(2): push %r12
4e64(3): mov %r8,%r13
4e67(1): push %rbp
4e68(1): push %rbx
4e69(3): mov %rcx,%r12
4e6c(3): mov %rdx,%rbp
4e6f(3): mov %rdi,%rbx
4e72(5): mov $0x3a,%esi
4e77(4): sub $0x18,%rsp
4e7b(5): call 0xffffc8b5(%rip)
4e80(3): mov %r13,%r9
4e83(3): mov %rax,%r15
4e86(3): mov %r12,%r8
4e89(3): mov %rbp,%rcx
4e8c(3): mov %r14,%rdx
4e8f(3): mov %rax,%rsi
4e92(3): mov %rbx,%rdi
4e95(5): call 0xfffffbeb(%rip)
4e9a(3): test %r15,%r15
4e9d(3): mov %rax,%r10
4ea0(2): jnz 0x44(%rip)
4ea2(3): test %rax,%rax
4ea5(5): mov %rax,0x8(%rsp)
4eaa(2): jz 0x6e(%rip)
4eac(5): mov $0x2e,%esi
4eb1(3): mov %rbx,%rdi
4eb4(5): call 0xffffc87c(%rip)
4eb9(3): test %rax,%rax
4ebc(5): mov 0x8(%rsp),%r10
4ec1(2): jz 0x23(%rip)
4ec3(3): mov %r13,%r9
4ec6(3): mov %r12,%r8
4ec9(3): mov %rbp,%rcx
4ecc(3): mov %r14,%rdx
4ecf(3): mov %rax,%rsi
4ed2(3): mov %rbx,%rdi
4ed5(5): call 0xfffffbab(%rip)
4eda(3): test %rax,%rax
4edd(5): mov 0x8(%rsp),%r10
4ee2(2): jz 0x36(%rip)
4ee4(4): add $0x18,%rsp
4ee8(3): mov %r10,%rax
4eeb(1): pop %rbx
4eec(1): pop %rbp
4eed(2): pop %r12
4eef(2): pop %r13
4ef1(2): pop %r14
4ef3(2): pop %r15
4ef5(1): ret near (%rsp)
4ef6(a): nop 0x0(%rax,%rax,1)
4f00(3): mov %r8,%r9
4f03(3): mov %rsi,%rdx
4f06(3): mov %rcx,%r8
4f09(2): xor %esi,%esi
4f0b(2): xor %ecx,%ecx
4f0d(5): jmp 0xfffffb73(%rip)
4f12(6): nop 0x0(%rax,%rax,1)
4f18(3): xor %r10d,%r10d
4f1b(2): jmp 0xffffffc9(%rip)

"version_etc_arn" :
4f20(2): push %r15
4f22(2): push %r14
4f24(2): push %r13
4f26(2): push %r12
4f28(3): mov %r9,%r12
4f2b(1): push %rbp
4f2c(1): push %rbx
4f2d(3): mov %rdi,%rbp
4f30(3): mov %r8,%rbx
4f33(4): sub $0x28,%rsp
4f37(3): test %rsi,%rsi
4f3a(6): jz 0x11e(%rip)
4f40(3): mov %rdx,%r8
4f43(7): lea 0x1f86(%rip),%rdx
4f4a(3): mov %rcx,%r9
4f4d(2): xor %eax,%eax
4f4f(3): mov %rsi,%rcx
4f52(5): mov $0x1,%esi
4f57(5): call 0xffffc9e9(%rip)
4f5c(7): lea 0x1f80(%rip),%rsi
4f63(2): xor %edi,%edi
4f65(5): mov $0x5,%edx
4f6a(5): call 0xffffc756(%rip)
4f6f(7): lea 0x228a(%rip),%rdx
4f76(3): mov %rax,%rcx
4f79(6): mov $0x7e3,%r8d
4f7f(5): mov $0x1,%esi
4f84(3): mov %rbp,%rdi
4f87(2): xor %eax,%eax
4f89(5): call 0xffffc9b7(%rip)
4f8e(7): lea 0x1fdb(%rip),%rsi
4f95(2): xor %edi,%edi
4f97(5): mov $0x5,%edx
4f9c(5): call 0xffffc724(%rip)
4fa1(3): mov %rbp,%rsi
4fa4(3): mov %rax,%rdi
4fa7(5): call 0xffffc819(%rip)
4fac(4): cmp $0x9,%r12
4fb0(6): jnbe 0x340(%rip)
4fb6(7): lea 0x220f(%rip),%rdx
4fbd(4): movsxd 0x0(%rdx,%r12,4),%rax
4fc1(3): add %rdx,%rax
4fc4(2): jmp %rax
4fc6(a): nop 0x0(%rax,%rax,1)
4fd0(4): mov 0x38(%rbx),%r9
4fd4(4): mov 0x10(%rbx),%rax
4fd8(7): lea 0x2101(%rip),%rsi
4fdf(4): mov 0x8(%rbx),%r8
4fe3(5): mov $0x5,%edx
4fe8(2): xor %edi,%edi
4fea(4): mov 0x30(%rbx),%r13
4fee(4): mov 0x28(%rbx),%r12
4ff2(5): mov %r9,0x10(%rsp)
4ff7(4): mov 0x20(%rbx),%r15
4ffb(4): mov 0x18(%rbx),%r14
4fff(4): mov %rax,(%rsp)
5003(5): mov %r8,0x8(%rsp)
5008(3): mov (%rbx),%rbx
500b(5): call 0xffffc6b5(%rip)
5010(4): sub $0x8,%rsp
5014(5): mov 0x18(%rsp),%r9
5019(3): mov %rax,%rdx
501c(3): mov %rbx,%rcx
501f(5): mov $0x1,%esi
5024(3): mov %rbp,%rdi
5027(2): xor %eax,%eax
5029(2): push %r9
502b(2): push %r13
502d(2): push %r12
502f(2): push %r15
5031(2): push %r14
5033(5): mov 0x30(%rsp),%r9
5038(5): mov 0x38(%rsp),%r8
503d(5): call 0xffffc903(%rip)
5042(4): add $0x30,%rsp
5046(4): add $0x28,%rsp
504a(1): pop %rbx
504b(1): pop %rbp
504c(2): pop %r12
504e(2): pop %r13
5050(2): pop %r14
5052(2): pop %r15
5054(1): ret near (%rsp)
5055(3): nop (%rax)
5058(3): mov %rcx,%r8
505b(3): mov %rdx,%rcx
505e(7): lea 0x1e77(%rip),%rdx
5065(5): mov $0x1,%esi
506a(2): xor %eax,%eax
506c(5): call 0xffffc8d4(%rip)
5071(5): jmp 0xfffffeeb(%rip)
5076(a): nop 0x0(%rax,%rax,1)
5080(4): mov 0x40(%rbx),%r10
5084(4): mov 0x38(%rbx),%r9
5088(7): lea 0x2081(%rip),%rsi
508f(4): mov 0x10(%rbx),%rax
5093(4): mov 0x8(%rbx),%r8
5097(5): mov $0x5,%edx
509c(4): mov 0x30(%rbx),%r13
50a0(4): mov 0x28(%rbx),%r12
50a4(4): mov 0x20(%rbx),%r15
50a8(4): mov 0x18(%rbx),%r14
50ac(3): mov (%rbx),%rbx
50af(5): mov %r10,0x18(%rsp)
50b4(5): mov %r9,0x10(%rsp)
50b9(4): mov %rax,(%rsp)
50bd(5): mov %r8,0x8(%rsp)
50c2(2): xor %edi,%edi
50c4(5): call 0xffffc5fc(%rip)
50c9(5): mov 0x18(%rsp),%r10
50ce(2): push %r10
50d0(5): jmp 0xffffff44(%rip)
50d5(3): nop (%rax)
50d8(3): mov (%rbx),%rbx
50db(7): lea 0x1e05(%rip),%rsi
50e2(5): mov $0x5,%edx
50e7(2): xor %edi,%edi
50e9(5): call 0xffffc5d7(%rip)
50ee(4): add $0x28,%rsp
50f2(3): mov %rbx,%rcx
50f5(3): mov %rbp,%rdi
50f8(1): pop %rbx
50f9(1): pop %rbp
50fa(2): pop %r12
50fc(2): pop %r13
50fe(2): pop %r14
5100(2): pop %r15
5102(3): mov %rax,%rdx
5105(5): mov $0x1,%esi
510a(2): xor %eax,%eax
510c(5): jmp 0xffffc834(%rip)
5111(7): nop 0x0(%rax)
5118(4): mov 0x8(%rbx),%r12
511c(7): lea 0x1dd4(%rip),%rsi
5123(3): mov (%rbx),%rbx
5126(5): mov $0x5,%edx
512b(2): xor %edi,%edi
512d(5): call 0xffffc593(%rip)
5132(4): add $0x28,%rsp
5136(3): mov %r12,%r8
5139(3): mov %rbx,%rcx
513c(3): mov %rbp,%rdi
513f(3): mov %rax,%rdx
5142(5): mov $0x1,%esi
5147(1): pop %rbx
5148(1): pop %rbp
5149(2): pop %r12
514b(2): pop %r13
514d(2): pop %r14
514f(2): pop %r15
5151(2): xor %eax,%eax
5153(5): jmp 0xffffc7ed(%rip)
5158(8): nop 0x0(%rax,%rax,1)
5160(4): mov 0x10(%rbx),%r13
5164(4): mov 0x8(%rbx),%r12
5168(7): lea 0x1d9f(%rip),%rsi
516f(3): mov (%rbx),%rbx
5172(5): mov $0x5,%edx
5177(2): xor %edi,%edi
5179(5): call 0xffffc547(%rip)
517e(4): add $0x28,%rsp
5182(3): mov %r13,%r9
5185(3): mov %r12,%r8
5188(3): mov %rbx,%rcx
518b(3): mov %rbp,%rdi
518e(3): mov %rax,%rdx
5191(1): pop %rbx
5192(1): pop %rbp
5193(2): pop %r12
5195(2): pop %r13
5197(2): pop %r14
5199(2): pop %r15
519b(5): mov $0x1,%esi
51a0(2): xor %eax,%eax
51a2(5): jmp 0xffffc79e(%rip)
51a7(9): nop 0x0(%rax,%rax,1)
51b0(7): lea 0x1e89(%rip),%rsi
51b7(5): mov $0x5,%edx
51bc(2): xor %edi,%edi
51be(4): mov 0x18(%rbx),%r14
51c2(4): mov 0x10(%rbx),%r13
51c6(4): mov 0x8(%rbx),%r12
51ca(3): mov (%rbx),%rbx
51cd(5): call 0xffffc4f3(%rip)
51d2(4): sub $0x8,%rsp
51d6(2): push %r14
51d8(3): mov %rax,%rdx
51db(3): mov %r13,%r9
51de(3): mov %r12,%r8
51e1(3): mov %rbx,%rcx
51e4(3): mov %rbp,%rdi
51e7(5): mov $0x1,%esi
51ec(2): xor %eax,%eax
51ee(5): call 0xffffc752(%rip)
51f3(1): pop %rax
51f4(1): pop %rdx
51f5(4): add $0x28,%rsp
51f9(1): pop %rbx
51fa(1): pop %rbp
51fb(2): pop %r12
51fd(2): pop %r13
51ff(2): pop %r14
5201(2): pop %r15
5203(1): ret near (%rsp)
5204(4): nop 0x0(%rax)
5208(4): mov 0x20(%rbx),%r15
520c(7): lea 0x1e4d(%rip),%rsi
5213(5): mov $0x5,%edx
5218(2): xor %edi,%edi
521a(4): mov 0x18(%rbx),%r14
521e(4): mov 0x10(%rbx),%r13
5222(4): mov 0x8(%rbx),%r12
5226(3): mov (%rbx),%rbx
5229(5): call 0xffffc497(%rip)
522e(2): push %r15
5230(2): jmp 0xffffffa6(%rip)
5232(6): nop 0x0(%rax,%rax,1)
5238(4): mov 0x8(%rbx),%r8
523c(4): mov 0x28(%rbx),%r12
5240(7): lea 0x1e41(%rip),%rsi
5247(4): mov 0x20(%rbx),%r15
524b(4): mov 0x18(%rbx),%r14
524f(5): mov $0x5,%edx
5254(4): mov 0x10(%rbx),%r13
5258(2): xor %edi,%edi
525a(3): mov (%rbx),%rbx
525d(4): mov %r8,(%rsp)
5261(5): call 0xffffc45f(%rip)
5266(4): sub $0x8,%rsp
526a(3): mov %r13,%r9
526d(2): push %r12
526f(2): push %r15
5271(2): push %r14
5273(5): mov 0x20(%rsp),%r8
5278(3): mov %rbx,%rcx
527b(3): mov %rax,%rdx
527e(3): mov %rbp,%rdi
5281(5): mov $0x1,%esi
5286(2): xor %eax,%eax
5288(5): call 0xffffc6b8(%rip)
528d(4): add $0x20,%rsp
5291(4): add $0x28,%rsp
5295(1): pop %rbx
5296(1): pop %rbp
5297(2): pop %r12
5299(2): pop %r13
529b(2): pop %r14
529d(2): pop %r15
529f(1): ret near (%rsp)
52a0(4): mov 0x10(%rbx),%r9
52a4(4): mov 0x30(%rbx),%r13
52a8(7): lea 0x1e01(%rip),%rsi
52af(4): mov 0x28(%rbx),%r12
52b3(4): mov 0x20(%rbx),%r15
52b7(5): mov $0x5,%edx
52bc(4): mov 0x18(%rbx),%r14
52c0(4): mov 0x8(%rbx),%r8
52c4(2): xor %edi,%edi
52c6(5): mov %r9,0x8(%rsp)
52cb(3): mov (%rbx),%rbx
52ce(4): mov %r8,(%rsp)
52d2(5): call 0xffffc3ee(%rip)
52d7(2): push %r13
52d9(2): push %r12
52db(2): push %r15
52dd(2): push %r14
52df(5): mov 0x28(%rsp),%r9
52e4(2): jmp 0xffffff8f(%rip)
52e6(a): nop 0x0(%rax,%rax,1)
52f0(4): mov 0x40(%rbx),%r10
52f4(4): mov 0x38(%rbx),%r9
52f8(5): mov $0x5,%edx
52fd(4): mov 0x10(%rbx),%rax
5301(4): mov 0x8(%rbx),%r8
5305(7): lea 0x1e3c(%rip),%rsi
530c(4): mov 0x30(%rbx),%r13
5310(4): mov 0x28(%rbx),%r12
5314(4): mov 0x20(%rbx),%r15
5318(4): mov 0x18(%rbx),%r14
531c(5): mov %r10,0x18(%rsp)
5321(5): mov %r9,0x10(%rsp)
5326(4): mov %rax,(%rsp)
532a(5): mov %r8,0x8(%rsp)
532f(3): mov (%rbx),%rbx
5332(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5340(3): xor %r9d,%r9d
5343(4): cmp $0x0,(%r8)
5347(2): jz 0x14(%rip)
5349(7): nop 0x0(%rax)
5350(4): add $0x1,%r9
5354(5): cmp $0x0,0x0(%r8,%r9,8)
5359(2): jnz 0xfffffff7(%rip)
535b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5360(4): sub $0x68,%rsp
5364(3): mov %r8,%r10
5367(3): xor %r9d,%r9d
536a(9): mov $0x28,%rax
5373(5): mov %rax,0x58(%rsp)
5378(2): xor %eax,%eax
537a(3): mov %rsp,%r8
537d(3): nop (%rax)
5380(3): mov (%r10),%eax
5383(3): cmp $0x2f,%eax
5386(2): jnbe 0x44(%rip)
5388(3): mov %eax,%r11d
538b(4): add 0x10(%r10),%r11
538f(3): add $0x8,%eax
5392(3): mov %eax,(%r10)
5395(3): mov (%r11),%rax
5398(3): test %rax,%rax
539b(4): mov %rax,0x0(%r8,%r9,8)
539f(2): jz 0xc(%rip)
53a1(4): add $0x1,%r9
53a5(4): cmp $0xa,%r9
53a9(2): jnz 0xffffffd7(%rip)
53ab(5): call 0xfffffb75(%rip)
53b0(5): mov 0x58(%rsp),%rax
53b5(9): xor $0x28,%rax
53be(2): jnz 0x7(%rip)
53c0(4): add $0x68,%rsp
53c4(1): ret near (%rsp)
53c5(5): call 0xffffc32b(%rip)
53ca(4): mov 0x8(%r10),%r11
53ce(4): lea 0x8(%r11),%rax
53d2(4): mov %rax,0x8(%r10)
53d6(2): jmp 0xffffffbf(%rip)

"version_etc" :
53e0(1): push %rbp
53e1(1): push %rbx
53e2(6): mov $0x20,%r10d
53e8(3): xor %r11d,%r11d
53eb(7): sub $0xb8,%rsp
53f2(9): mov $0x28,%rax
53fb(5): mov %rax,0x78(%rsp)
5400(2): xor %eax,%eax
5402(8): lea 0xd0(%rsp),%rax
540a(8): mov %r8,0xa0(%rsp)
5412(8): lea 0xd0(%rsp),%rbx
541a(5): lea 0x20(%rsp),%r8
541f(8): mov %r9,0xa8(%rsp)
5427(8): mov $0x20,0x8(%rsp)
542f(5): mov %rax,0x10(%rsp)
5434(8): lea 0x80(%rsp),%rax
543c(3): xor %r9d,%r9d
543f(5): mov %rax,0x18(%rsp)
5444(3): mov %rax,%rbp
5447(9): nop 0x0(%rax,%rax,1)
5450(4): cmp $0x2f,%r10d
5454(2): jnbe 0x58(%rip)
5456(3): mov %r10d,%eax
5459(6): mov $0x1,%r11d
545f(4): add $0x8,%r10d
5463(3): add %rbp,%rax
5466(3): mov (%rax),%rax
5469(3): test %rax,%rax
546c(4): mov %rax,0x0(%r8,%r9,8)
5470(2): jz 0xc(%rip)
5472(4): add $0x1,%r9
5476(4): cmp $0xa,%r9
547a(2): jnz 0xffffffd6(%rip)
547c(3): test %r11b,%r11b
547f(2): jnz 0x26(%rip)
5481(5): call 0xfffffa9f(%rip)
5486(5): mov 0x78(%rsp),%rax
548b(9): xor $0x28,%rax
5494(2): jnz 0xc(%rip)
5496(7): add $0xb8,%rsp
549d(1): pop %rbx
549e(1): pop %rbp
549f(1): ret near (%rsp)
54a0(5): call 0xffffc250(%rip)
54a5(5): mov %r10d,0x8(%rsp)
54aa(2): jmp 0xffffffd7(%rip)
54ac(3): mov %rbx,%rax
54af(4): add $0x8,%rbx
54b3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
54c0(1): push %rbx
54c1(7): lea 0x1a62(%rip),%rsi
54c8(5): mov $0x5,%edx
54cd(2): xor %edi,%edi
54cf(5): call 0xffffc1f1(%rip)
54d4(7): lea 0x1a64(%rip),%rdx
54db(3): mov %rax,%rsi
54de(5): mov $0x1,%edi
54e3(2): xor %eax,%eax
54e5(5): call 0xffffc3db(%rip)
54ea(7): lea 0x1a64(%rip),%rsi
54f1(5): mov $0x5,%edx
54f6(2): xor %edi,%edi
54f8(5): call 0xffffc1c8(%rip)
54fd(7): lea 0x111c(%rip),%rcx
5504(7): lea 0x132c(%rip),%rdx
550b(3): mov %rax,%rsi
550e(5): mov $0x1,%edi
5513(2): xor %eax,%eax
5515(5): call 0xffffc3ab(%rip)
551a(7): mov 0x203b87(%rip),%rbx
5521(7): lea 0x1c60(%rip),%rsi
5528(2): xor %edi,%edi
552a(5): mov $0x5,%edx
552f(5): call 0xffffc191(%rip)
5534(3): mov %rbx,%rsi
5537(3): mov %rax,%rdi
553a(1): pop %rbx
553b(5): jmp 0xffffc285(%rip)

"xmalloc" :
5540(1): push %rbx
5541(3): mov %rdi,%rbx
5544(5): call 0xffffc2fc(%rip)
5549(3): test %rax,%rax
554c(2): jnz 0x7(%rip)
554e(3): test %rbx,%rbx
5551(2): jnz 0x4(%rip)
5553(1): pop %rbx
5554(1): ret near (%rsp)
5555(5): call 0x23b(%rip)

"xnmalloc" :
5560(3): mov %rdi,%rax
5563(3): mul %rax,%rsi,%rdx
5566(3): mov %rax,%rdi
5569(3): seto %al
556c(3): test %rdi,%rdi
556f(2): js 0xc(%rip)
5571(3): movzx %al,%eax
5574(3): test %rax,%rax
5577(2): jnz 0x4(%rip)
5579(2): jmp 0xffffffc7(%rip)
557b(4): sub $0x8,%rsp
557f(5): call 0x211(%rip)

"xrealloc" :
55a0(3): test %rsi,%rsi
55a3(1): push %rbx
55a4(3): mov %rsi,%rbx
55a7(2): jnz 0x7(%rip)
55a9(3): test %rdi,%rdi
55ac(2): jnz 0x1c(%rip)
55ae(3): mov %rbx,%rsi
55b1(5): call 0xffffc2ef(%rip)
55b6(3): test %rax,%rax
55b9(2): jnz 0x7(%rip)
55bb(3): test %rbx,%rbx
55be(2): jnz 0x13(%rip)
55c0(1): pop %rbx
55c1(1): ret near (%rsp)
55c2(6): nop 0x0(%rax,%rax,1)
55c8(5): call 0xffffc058(%rip)
55cd(2): xor %eax,%eax
55cf(1): pop %rbx
55d0(1): ret near (%rsp)
55d1(5): call 0x1bf(%rip)

"xnrealloc" :
55e0(3): mov %rsi,%rax
55e3(3): mul %rax,%rdx,%rdx
55e6(3): mov %rax,%rsi
55e9(3): seto %al
55ec(3): test %rsi,%rsi
55ef(2): js 0xc(%rip)
55f1(3): movzx %al,%eax
55f4(3): test %rax,%rax
55f7(2): jnz 0x4(%rip)
55f9(2): jmp 0xffffffa7(%rip)
55fb(4): sub $0x8,%rsp
55ff(5): call 0x191(%rip)

"x2nrealloc" :
5610(3): test %rdi,%rdi
5613(3): mov %rdx,%r9
5616(3): mov (%rsi),%rcx
5619(2): jz 0x37(%rip)
561b(2): xor %edx,%edx
561d(a): mov $0x6148914691236517204,%rax
5627(3): div %r9,%rax
562a(3): cmp %rcx,%rax
562d(2): jbe 0x3e(%rip)
562f(3): mov %rcx,%rax
5632(3): shr $0x1,%rax
5635(5): lea 0x1(%rax,%rcx,1),%rcx
563a(3): mov %rcx,(%rsi)
563d(4): imul %r9,%rcx
5641(3): mov %rcx,%rsi
5644(5): jmp 0xffffff5c(%rip)
5649(7): nop 0x0(%rax)
5650(3): test %rcx,%rcx
5653(2): jz 0x25(%rip)
5655(3): mov %rcx,%rax
5658(3): mul %rax,%r9,%rdx
565b(3): seto %dl
565e(3): test %rax,%rax
5661(3): movzx %dl,%edx
5664(2): js 0x7(%rip)
5666(3): test %rdx,%rdx
5669(2): jz 0xffffffd1(%rip)
566b(4): sub $0x8,%rsp
566f(5): call 0x121(%rip)
5674(4): nop 0x0(%rax)
5678(2): xor %edx,%edx
567a(5): mov $0x80,%eax
567f(3): xor %r8d,%r8d
5682(3): div %r9,%rax
5685(3): test %rax,%rax
5688(4): setz %r8b
568c(4): lea 0x0(%r8,%rax,1),%rcx
5690(2): jmp 0xffffffc5(%rip)

"x2realloc" :
56a0(3): test %rdi,%rdi
56a3(3): mov (%rsi),%rax
56a6(2): jz 0x2a(%rip)
56a8(a): mov $0x6148914691236517203,%rdx
56b2(3): cmp %rdx,%rax
56b5(2): jnbe 0x2c(%rip)
56b7(3): mov %rax,%rdx
56ba(3): shr $0x1,%rdx
56bd(5): lea 0x1(%rdx,%rax,1),%rax
56c2(3): mov %rax,(%rsi)
56c5(3): mov %rax,%rsi
56c8(5): jmp 0xfffffed8(%rip)
56cd(3): nop (%rax)
56d0(3): test %rax,%rax
56d3(5): mov $0x80,%edx
56d8(4): cmove %rdx,%rax
56dc(3): test %rax,%rax
56df(2): jns 0xffffffe3(%rip)
56e1(4): sub $0x8,%rsp
56e5(5): call 0xab(%rip)

"xzalloc" :
56f0(1): push %rbx
56f1(3): mov %rdi,%rbx
56f4(5): call 0xfffffe4c(%rip)
56f9(3): mov %rbx,%rdx
56fc(2): xor %esi,%esi
56fe(3): mov %rax,%rdi
5701(1): pop %rbx
5702(5): jmp 0xffffc08e(%rip)

"xcalloc" :
5710(3): mov %rdi,%rax
5713(4): sub $0x8,%rsp
5717(3): mul %rax,%rsi,%rdx
571a(3): seto %dl
571d(3): test %rax,%rax
5720(2): js 0x19(%rip)
5722(3): movzx %dl,%edx
5725(3): test %rdx,%rdx
5728(2): jnz 0x11(%rip)
572a(5): call 0xffffc0a6(%rip)
572f(3): test %rax,%rax
5732(2): jz 0x7(%rip)
5734(4): add $0x8,%rsp
5738(1): ret near (%rsp)
5739(5): call 0x57(%rip)

"xmemdup" :
5740(1): push %rbp
5741(1): push %rbx
5742(3): mov %rdi,%rbp
5745(3): mov %rsi,%rdi
5748(3): mov %rsi,%rbx
574b(4): sub $0x8,%rsp
574f(5): call 0xfffffdf1(%rip)
5754(4): add $0x8,%rsp
5758(3): mov %rbx,%rdx
575b(3): mov %rbp,%rsi
575e(1): pop %rbx
575f(1): pop %rbp
5760(3): mov %rax,%rdi
5763(5): jmp 0xffffc08d(%rip)

"xstrdup" :
5770(1): push %rbx
5771(3): mov %rdi,%rbx
5774(5): call 0xffffbf6c(%rip)
5779(3): mov %rbx,%rdi
577c(4): lea 0x1(%rax),%rsi
5780(1): pop %rbx
5781(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5790(7): lea 0x1a98(%rip),%rsi
5797(4): sub $0x8,%rsp
579b(5): mov $0x5,%edx
57a0(2): xor %edi,%edi
57a2(5): call 0xffffbf1e(%rip)
57a7(6): mov 0x203873(%rip),%edi
57ad(7): lea 0x11d3(%rip),%rdx
57b4(3): mov %rax,%rcx
57b7(2): xor %esi,%esi
57b9(2): xor %eax,%eax
57bb(5): call 0xffffc115(%rip)
57c0(5): call 0xffffbe70(%rip)

"xgetgroups" :
57d0(1): push %rbx
57d1(5): call 0x64f(%rip)
57d6(3): cmp $0xff,%eax
57d9(2): mov %eax,%ebx
57db(2): jz 0xd(%rip)
57dd(2): mov %ebx,%eax
57df(1): pop %rbx
57e0(1): ret near (%rsp)
57e1(7): nop 0x0(%rax)
57e8(5): call 0xffffbe58(%rip)
57ed(3): cmp $0xc,(%rax)
57f0(2): jnz 0xffffffed(%rip)
57f2(5): call 0xffffff9e(%rip)

"xstrtoul" :
5800(2): push %r15
5802(2): push %r14
5804(2): push %r13
5806(2): push %r12
5808(1): push %rbp
5809(1): push %rbx
580a(4): sub $0x28,%rsp
580e(9): mov $0x28,%rax
5817(5): mov %rax,0x18(%rsp)
581c(2): xor %eax,%eax
581e(3): cmp $0x24,%edx
5821(6): jnbe 0x364(%rip)
5827(5): lea 0x10(%rsp),%rax
582c(3): mov %rsi,%r15
582f(3): test %rsi,%rsi
5832(3): mov %rdi,%rbp
5835(4): mov %edx,0x8(%rsp)
5839(3): mov %rcx,%r14
583c(3): mov %r8,%r13
583f(4): cmove %rax,%r15
5843(5): call 0xffffbdfd(%rip)
5848(6): mov $0x0,(%rax)
584e(3): mov %rax,%r12
5851(4): movzx 0x0(%rbp),%ebx
5855(5): call 0xffffc11b(%rip)
585a(4): mov 0x8(%rsp),%edx
585e(3): mov (%rax),%rsi
5861(3): mov %rbp,%rax
5864(2): jmp 0x13(%rip)
5866(a): nop 0x0(%rax,%rax,1)
5870(4): add $0x1,%rax
5874(3): movzx (%rax),%ebx
5877(3): movzx %bl,%ecx
587a(5): test $0x20,0x1(%rsi,%rcx,2)
587f(2): jnz 0xfffffff1(%rip)
5881(3): cmp $0x2d,%bl
5884(2): jz 0x54(%rip)
5886(3): mov %r15,%rsi
5889(3): mov %rbp,%rdi
588c(5): call 0xffffc074(%rip)
5891(3): mov (%r15),%rcx
5894(3): mov %rax,%rbx
5897(3): cmp %rbp,%rcx
589a(2): jz 0x2e(%rip)
589c(4): mov (%r12),%eax
58a0(2): test %eax,%eax
58a2(2): jz 0x66(%rip)
58a4(3): cmp $0x22,%eax
58a7(5): mov $0x1,%ebp
58ac(2): jnz 0x2c(%rip)
58ae(3): test %r13,%r13
58b1(2): jz 0xb(%rip)
58b3(4): movzx (%rcx),%r12d
58b7(3): test %r12b,%r12b
58ba(2): jnz 0x7d(%rip)
58bc(3): mov %rbx,(%r14)
58bf(2): jmp 0x1e(%rip)
58c1(7): nop 0x0(%rax)
58c8(3): test %r13,%r13
58cb(5): mov %rcx,0x8(%rsp)
58d0(2): jnz 0x40(%rip)
58d2(6): nop 0x0(%rax,%rax,1)
58d8(5): mov $0x4,%ebp
58dd(5): mov 0x18(%rsp),%rdi
58e2(9): xor $0x28,%rdi
58eb(2): mov %ebp,%eax
58ed(6): jnz 0x293(%rip)
58f3(4): add $0x28,%rsp
58f7(1): pop %rbx
58f8(1): pop %rbp
58f9(2): pop %r12
58fb(2): pop %r13
58fd(2): pop %r14
58ff(2): pop %r15
5901(1): ret near (%rsp)
5902(6): nop 0x0(%rax,%rax,1)
5908(2): xor %ebp,%ebp
590a(2): jmp 0xffffffa4(%rip)
590c(4): nop 0x0(%rax)
5910(5): movzx 0x0(%rbp),%r12d
5915(3): test %r12b,%r12b
5918(2): jz 0xffffffc0(%rip)
591a(4): movsx %r12b,%esi
591e(3): mov %r13,%rdi
5921(2): xor %ebp,%ebp
5923(5): call 0xffffbe0d(%rip)
5928(3): test %rax,%rax
592b(5): mov $0x1,%ebx
5930(5): mov 0x8(%rsp),%rcx
5935(2): jz 0xffffffa3(%rip)
5937(4): movsx %r12b,%esi
593b(3): mov %r13,%rdi
593e(5): mov %rcx,0x8(%rsp)
5943(5): call 0xffffbded(%rip)
5948(3): test %rax,%rax
594b(5): mov 0x8(%rsp),%rcx
5950(6): jz 0xcc(%rip)
5956(5): lea 0xffffffbb(%r12),%eax
595b(2): cmp $0x2f,%al
595d(2): jnbe 0x53(%rip)
595f(a): mov $0x142129060940101,%rdx
5969(4): bt %rax,%rdx
596d(2): jnb 0x43(%rip)
596f(5): mov $0x30,%esi
5974(3): mov %r13,%rdi
5977(5): mov %rcx,0x8(%rsp)
597c(5): call 0xffffbdb4(%rip)
5981(3): test %rax,%rax
5984(5): mov 0x8(%rsp),%rcx
5989(2): jz 0x27(%rip)
598b(4): movzx 0x1(%rcx),%eax
598f(2): cmp $0x44,%al
5991(2): jz 0xe(%rip)
5993(2): cmp $0x69,%al
5995(6): jz 0x1d3(%rip)
599b(2): cmp $0x42,%al
599d(2): jnz 0x13(%rip)
599f(5): mov $0x2,%edi
59a4(5): mov $0x3e8,%esi
59a9(2): jmp 0x11(%rip)
59ab(5): nop 0x0(%rax,%rax,1)
59b0(5): mov $0x1,%edi
59b5(5): mov $0x400,%esi
59ba(4): sub $0x42,%r12d
59be(4): cmp $0x35,%r12b
59c2(2): jnbe 0x5a(%rip)
59c4(7): lea 0x18bd(%rip),%rdx
59cb(4): movzx %r12b,%r12d
59cf(4): movsxd 0x0(%rdx,%r12,4),%rax
59d3(3): add %rdx,%rax
59d6(2): jmp %rax
59d8(3): mov %rbx,%rax
59db(3): mul %rax,%rsi,%rdx
59de(6): jo 0x1f3(%rip)
59e4(3): xor %r8d,%r8d
59e7(3): mul %rax,%rsi,%rdx
59ea(6): jo 0x1d8(%rip)
59f0(3): mov %rax,%rbx
59f3(3): or %r8d,%ebp
59f6(a): nop 0x0(%rax,%rax,1)
5a00(3): movsxd %edi,%rdi
5a03(2): mov %ebp,%eax
5a05(3): add %rdi,%rcx
5a08(3): or $0x2,%eax
5a0b(3): mov %rcx,(%r15)
5a0e(3): cmp $0x0,(%rcx)
5a11(3): mov %rbx,(%r14)
5a14(3): cmovne %eax,%ebp
5a17(5): jmp 0xfffffec6(%rip)
5a1c(3): mov %rbx,(%r14)
5a1f(3): or $0x2,%ebp
5a22(5): jmp 0xfffffebb(%rip)
5a27(5): mov $0x2,%edx
5a2c(3): mov %rdx,%rax
5a2f(3): mul %rax,%rbx,%rdx
5a32(6): jo 0x9c(%rip)
5a38(3): add %rbx,%rbx
5a3b(2): jmp 0xffffffc5(%rip)
5a3d(5): mov $0x200,%edx
5a42(3): mov %rdx,%rax
5a45(3): mul %rax,%rbx,%rdx
5a48(6): jo 0x86(%rip)
5a4e(4): shl/sal $0x9,%rbx
5a52(2): jmp 0xffffffae(%rip)
5a54(6): mov $0x7,%r8d
5a5a(3): xor %r9d,%r9d
5a5d(3): nop (%rax)
5a60(3): mov %rbx,%rax
5a63(3): mul %rax,%rsi,%rdx
5a66(3): mov %rax,%rbx
5a69(6): jo 0x195(%rip)
5a6f(4): sub $0x1,%r8d
5a73(2): jnz 0xffffffed(%rip)
5a75(3): or %r9d,%ebp
5a78(2): jmp 0xffffff88(%rip)
5a7a(6): mov $0x8,%r8d
5a80(3): xor %r9d,%r9d
5a83(5): nop 0x0(%rax,%rax,1)
5a88(3): mov %rbx,%rax
5a8b(3): mul %rax,%rsi,%rdx
5a8e(3): mov %rax,%rbx
5a91(6): jo 0x14f(%rip)
5a97(4): sub $0x1,%r8d
5a9b(2): jnz 0xffffffed(%rip)
5a9d(2): jmp 0xffffffd8(%rip)
5a9f(6): mov $0x4,%r8d
5aa5(3): xor %r9d,%r9d
5aa8(3): mov %rbx,%rax
5aab(3): mul %rax,%rsi,%rdx
5aae(3): mov %rax,%rbx
5ab1(6): jo 0x102(%rip)
5ab7(4): sub $0x1,%r8d
5abb(2): jnz 0xffffffed(%rip)
5abd(2): jmp 0xffffffb8(%rip)
5abf(3): mov %rbx,%rax
5ac2(3): mul %rax,%rsi,%rdx
5ac5(3): mov %rax,%rbx
5ac8(6): jno 0xffffff38(%rip)
5ace(5): mov $0x1,%ebp
5ad3(4): or $0xffffffff,%rbx
5ad7(5): jmp 0xffffff29(%rip)
5adc(4): nop 0x0(%rax)
5ae0(6): mov $0x5,%r8d
5ae6(3): xor %r9d,%r9d
5ae9(3): mov %rbx,%rax
5aec(3): mul %rax,%rsi,%rdx
5aef(3): mov %rax,%rbx
5af2(6): jo 0xfd(%rip)
5af8(4): sub $0x1,%r8d
5afc(2): jnz 0xffffffed(%rip)
5afe(5): jmp 0xffffff77(%rip)
5b03(6): mov $0x6,%r8d
5b09(3): xor %r9d,%r9d
5b0c(3): mov %rbx,%rax
5b0f(3): mul %rax,%rsi,%rdx
5b12(3): mov %rax,%rbx
5b15(6): jo 0x8f(%rip)
5b1b(4): sub $0x1,%r8d
5b1f(2): jnz 0xffffffed(%rip)
5b21(5): jmp 0xffffff54(%rip)
5b26(5): mov $0x400,%edx
5b2b(3): mov %rdx,%rax
5b2e(3): mul %rax,%rbx,%rdx
5b31(2): jo 0xffffff9d(%rip)
5b33(4): shl/sal $0xa,%rbx
5b37(5): jmp 0xfffffec9(%rip)
5b3c(3): mov %rbx,%rax
5b3f(3): mul %rax,%rsi,%rdx
5b42(6): jo 0xcb(%rip)
5b48(3): xor %r8d,%r8d
5b4b(3): mul %rax,%rsi,%rdx
5b4e(6): jno 0xfffffe99(%rip)
5b54(6): mov $0x1,%r8d
5b5a(4): or $0xffffffff,%rax
5b5e(5): jmp 0xfffffe89(%rip)
5b63(5): nop 0x0(%rax,%rax,1)
5b68(2): xor %edi,%edi
5b6a(4): cmp $0x42,0x2(%rcx)
5b6e(5): mov $0x400,%esi
5b73(4): setz %dil
5b77(4): lea 0x1(%rdi,%rdi,1),%edi
5b7b(5): jmp 0xfffffe3f(%rip)
5b80(5): call 0xffffbb70(%rip)
5b85(7): lea 0x17d4(%rip),%rcx
5b8c(7): lea 0x16ad(%rip),%rsi
5b93(7): lea 0x16c6(%rip),%rdi
5b9a(5): mov $0x54,%edx
5b9f(5): call 0xffffbbe1(%rip)
5ba4(6): mov $0x1,%r9d
5baa(4): or $0xffffffff,%rbx
5bae(5): jmp 0xffffff6d(%rip)
5bb3(6): mov $0x1,%r9d
5bb9(4): or $0xffffffff,%rbx
5bbd(5): jmp 0xfffffefa(%rip)
5bc2(6): mov $0x1,%r8d
5bc8(4): or $0xffffffff,%rbx
5bcc(5): jmp 0xfffffe27(%rip)
5bd1(4): or $0xffffffff,%rax
5bd5(6): mov $0x1,%r8d
5bdb(5): jmp 0xfffffe0c(%rip)
5be0(6): mov $0x1,%r9d
5be6(4): or $0xffffffff,%rbx
5bea(5): jmp 0xfffffead(%rip)
5bef(6): mov $0x1,%r9d
5bf5(4): or $0xffffffff,%rbx
5bf9(5): jmp 0xfffffeff(%rip)
5bfe(6): mov $0x1,%r9d
5c04(4): or $0xffffffff,%rbx
5c08(5): jmp 0xfffffe67(%rip)
5c0d(6): mov $0x1,%r8d
5c13(4): or $0xffffffff,%rax
5c17(5): jmp 0xffffff34(%rip)

"rpl_mbrtowc" :
5c20(2): push %r13
5c22(2): push %r12
5c24(3): mov %rsi,%r13
5c27(1): push %rbp
5c28(1): push %rbx
5c29(3): mov %rdi,%rbx
5c2c(3): mov %rdx,%r12
5c2f(4): sub $0x18,%rsp
5c33(9): mov $0x28,%rax
5c3c(5): mov %rax,0x8(%rsp)
5c41(2): xor %eax,%eax
5c43(5): lea 0x4(%rsp),%rax
5c48(3): test %rdi,%rdi
5c4b(4): cmove %rax,%rbx
5c4f(3): mov %rbx,%rdi
5c52(5): call 0xffffbace(%rip)
5c57(4): cmp $0xfffffffd,%rax
5c5b(3): mov %rax,%rbp
5c5e(2): jbe 0x22(%rip)
5c60(3): test %r12,%r12
5c63(2): jz 0x1d(%rip)
5c65(2): xor %edi,%edi
5c67(5): call 0xc9(%rip)
5c6c(2): test %al,%al
5c6e(2): jnz 0x12(%rip)
5c70(5): movzx 0x0(%r13),%eax
5c75(5): mov $0x1,%ebp
5c7a(2): mov %eax,(%rbx)
5c7c(4): nop 0x0(%rax)
5c80(5): mov 0x8(%rsp),%rdx
5c85(9): xor $0x28,%rdx
5c8e(3): mov %rbp,%rax
5c91(2): jnz 0xd(%rip)
5c93(4): add $0x18,%rsp
5c97(1): pop %rbx
5c98(1): pop %rbp
5c99(2): pop %r12
5c9b(2): pop %r13
5c9d(1): ret near (%rsp)
5c9e(5): call 0xffffba52(%rip)

"close_stream" :
5cb0(2): push %r12
5cb2(1): push %rbp
5cb3(3): mov %rdi,%rbp
5cb6(1): push %rbx
5cb7(5): call 0xffffb9b9(%rip)
5cbc(3): mov 0x0(%rbp),%ebx
5cbf(3): mov %rbp,%rdi
5cc2(3): mov %rax,%r12
5cc5(5): call 0x39b(%rip)
5cca(3): and $0x20,%ebx
5ccd(2): test %ebx,%ebx
5ccf(2): jnz 0x19(%rip)
5cd1(2): test %eax,%eax
5cd3(2): jz 0xc(%rip)
5cd5(3): test %r12,%r12
5cd8(5): mov $0xffffffff,%eax
5cdd(2): jz 0x3b(%rip)
5cdf(1): pop %rbx
5ce0(1): pop %rbp
5ce1(2): pop %r12
5ce3(1): ret near (%rsp)
5ce4(4): nop 0x0(%rax)
5ce8(2): test %eax,%eax
5cea(2): jnz 0x1e(%rip)
5cec(5): call 0xffffb954(%rip)
5cf1(6): mov $0x0,(%rax)
5cf7(5): mov $0xffffffff,%eax
5cfc(1): pop %rbx
5cfd(1): pop %rbp
5cfe(2): pop %r12
5d00(1): ret near (%rsp)
5d01(7): nop 0x0(%rax)
5d08(1): pop %rbx
5d09(5): mov $0xffffffff,%eax
5d0e(1): pop %rbp
5d0f(2): pop %r12
5d11(1): ret near (%rsp)
5d12(6): nop 0x0(%rax,%rax,1)
5d18(5): call 0xffffb928(%rip)
5d1d(3): cmp $0x9,(%rax)
5d20(1): pop %rbx
5d21(1): pop %rbp
5d22(2): pop %r12
5d24(3): setnz %al
5d27(3): movzx %al,%eax
5d2a(2): neg %eax
5d2c(1): ret near (%rsp)

"hard_locale" :
5d30(4): sub $0x8,%rsp
5d34(2): xor %esi,%esi
5d36(5): call 0xffffbb7a(%rip)
5d3b(3): mov %rax,%rdx
5d3e(5): mov $0x1,%eax
5d43(3): test %rdx,%rdx
5d46(2): jz 0x1f(%rip)
5d48(7): lea 0x161a(%rip),%rdi
5d4f(5): mov $0x2,%ecx
5d54(3): mov %rdx,%rsi
5d57(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5d59(3): setnbe %cl
5d5c(3): sbb $0x0,%cl
5d5f(2): xor %eax,%eax
5d61(2): test %cl,%cl
5d63(2): jnz 0xd(%rip)
5d65(4): add $0x8,%rsp
5d69(1): ret near (%rsp)
5d6a(6): nop 0x0(%rax,%rax,1)
5d70(7): lea 0x15f4(%rip),%rdi
5d77(5): mov $0x6,%ecx
5d7c(3): mov %rdx,%rsi
5d7f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5d81(3): setnbe %al
5d84(2): sbb $0x0,%al
5d86(2): test %al,%al
5d88(3): setnz %al
5d8b(4): add $0x8,%rsp
5d8f(1): ret near (%rsp)

"locale_charset" :
5d90(4): sub $0x8,%rsp
5d94(5): mov $0xe,%edi
5d99(5): call 0xffffbac7(%rip)
5d9e(3): test %rax,%rax
5da1(2): jz 0x1f(%rip)
5da3(3): cmp $0x0,(%rax)
5da6(7): lea 0x15c4(%rip),%rdx
5dad(4): cmove %rdx,%rax
5db1(4): add $0x8,%rsp
5db5(1): ret near (%rsp)
5db6(a): nop 0x0(%rax,%rax,1)
5dc0(7): lea 0x15aa(%rip),%rax
5dc7(4): add $0x8,%rsp
5dcb(1): ret near (%rsp)

"realloc_groupbuf" :
5dd0(5): mov $0x4,%edx
5dd5(3): mov %rdx,%rax
5dd8(3): mul %rax,%rsi,%rdx
5ddb(2): jo 0x33(%rip)
5ddd(2): xor %ecx,%ecx
5ddf(3): test %rax,%rax
5de2(2): js 0x16(%rip)
5de4(3): test %rcx,%rcx
5de7(2): jnz 0x11(%rip)
5de9(4): shl/sal $0x2,%rsi
5ded(5): jmp 0xffffbab3(%rip)
5df2(6): nop 0x0(%rax,%rax,1)
5df8(4): sub $0x8,%rsp
5dfc(5): call 0xffffb844(%rip)
5e01(6): mov $0xc,(%rax)
5e07(2): xor %eax,%eax
5e09(4): add $0x8,%rsp
5e0d(1): ret near (%rsp)
5e0e(5): mov $0x1,%ecx
5e13(2): jmp 0xffffffcc(%rip)

"mgetgroups" :
5e20(2): push %r15
5e22(2): push %r14
5e24(3): mov %rdx,%r15
5e27(2): push %r13
5e29(2): push %r12
5e2b(3): mov %esi,%r13d
5e2e(1): push %rbp
5e2f(1): push %rbx
5e30(4): sub $0x18,%rsp
5e34(9): mov $0x28,%rax
5e3d(5): mov %rax,0x8(%rsp)
5e42(2): xor %eax,%eax
5e44(3): test %rdi,%rdi
5e47(6): jz 0xd1(%rip)
5e4d(3): mov %rdi,%rbp
5e50(5): mov $0xa,%esi
5e55(2): xor %edi,%edi
5e57(8): mov $0xa,0x4(%rsp)
5e5f(5): call 0xffffff71(%rip)
5e64(3): test %rax,%rax
5e67(3): mov %rax,%rbx
5e6a(6): jz 0x1ce(%rip)
5e70(5): lea 0x4(%rsp),%r14
5e75(3): mov %r13d,%esi
5e78(3): mov %r14,%rcx
5e7b(3): mov %rbx,%rdx
5e7e(3): mov %rbp,%rdi
5e81(5): mov 0x4(%rsp),%r12d
5e86(5): call 0xffffba5a(%rip)
5e8b(2): test %eax,%eax
5e8d(5): movsxd 0x4(%rsp),%rsi
5e92(2): js 0x4e(%rip)
5e94(3): mov %rbx,%rdi
5e97(5): call 0xffffff39(%rip)
5e9c(3): test %rax,%rax
5e9f(2): jnz 0x69(%rip)
5ea1(5): call 0xffffb79f(%rip)
5ea6(3): mov (%rax),%r12d
5ea9(3): mov %rax,%rbp
5eac(3): mov %rbx,%rdi
5eaf(5): call 0xffffb771(%rip)
5eb4(5): mov $0xffffffff,%eax
5eb9(4): mov %r12d,0x0(%rbp)
5ebd(5): mov 0x8(%rsp),%rcx
5ec2(9): xor $0x28,%rcx
5ecb(6): jnz 0x18c(%rip)
5ed1(4): add $0x18,%rsp
5ed5(1): pop %rbx
5ed6(1): pop %rbp
5ed7(2): pop %r12
5ed9(2): pop %r13
5edb(2): pop %r14
5edd(2): pop %r15
5edf(1): ret near (%rsp)
5ee0(3): cmp %r12d,%esi
5ee3(2): jnz 0xb(%rip)
5ee5(2): add %esi,%esi
5ee7(4): mov %esi,0x4(%rsp)
5eeb(3): movsxd %esi,%rsi
5eee(3): mov %rbx,%rdi
5ef1(5): call 0xfffffedf(%rip)
5ef6(3): test %rax,%rax
5ef9(2): jz 0xffffffa8(%rip)
5efb(3): mov %rax,%rbx
5efe(5): jmp 0xffffff77(%rip)
5f03(5): nop 0x0(%rax,%rax,1)
5f08(3): mov %rax,(%r15)
5f0b(4): mov 0x4(%rsp),%eax
5f0f(2): jmp 0xffffffae(%rip)
5f11(7): nop 0x0(%rax)
5f18(2): xor %esi,%esi
5f1a(2): xor %edi,%edi
5f1c(5): call 0xffffb914(%rip)
5f21(2): test %eax,%eax
5f23(4): mov %eax,0x4(%rsp)
5f27(6): js 0xb1(%rip)
5f2d(4): cmp $0xff,%r13d
5f31(4): setnz %bpl
5f35(2): test %eax,%eax
5f37(2): jz 0xb(%rip)
5f39(3): test %bpl,%bpl
5f3c(6): jz 0xcb(%rip)
5f42(3): add $0x1,%eax
5f45(2): xor %edi,%edi
5f47(3): movsxd %eax,%rsi
5f4a(4): mov %eax,0x4(%rsp)
5f4e(5): call 0xfffffe82(%rip)
5f53(3): test %rax,%rax
5f56(3): mov %rax,%rbx
5f59(6): jz 0xdf(%rip)
5f5f(4): mov 0x4(%rsp),%edi
5f63(4): movzx %bpl,%ebp
5f67(2): sub %ebp,%edi
5f69(4): cmp $0xff,%r13d
5f6d(6): jz 0xd5(%rip)
5f73(4): lea 0x4(%rax),%rsi
5f77(5): call 0xffffb8b9(%rip)
5f7c(2): test %eax,%eax
5f7e(6): js 0xffffff23(%rip)
5f84(3): mov %r13d,(%rbx)
5f87(3): add $0x1,%eax
5f8a(3): cmp $0x1,%eax
5f8d(3): mov %rbx,(%r15)
5f90(6): jle 0xffffff2d(%rip)
5f96(3): movsxd %eax,%rdx
5f99(2): mov (%rbx),%edi
5f9b(4): lea 0x0(%rbx,%rdx,4),%rsi
5f9f(4): lea 0x4(%rbx),%rdx
5fa3(3): cmp %rdx,%rsi
5fa6(2): jnbe 0x22(%rip)
5fa8(5): jmp 0xffffff15(%rip)
5fad(3): nop (%rax)
5fb0(2): cmp (%rbx),%ecx
5fb2(2): jz 0x1c(%rip)
5fb4(3): mov %ecx,0x4(%rbx)
5fb7(4): add $0x4,%rbx
5fbb(4): add $0x4,%rdx
5fbf(3): cmp %rdx,%rsi
5fc2(6): jbe 0xfffffefb(%rip)
5fc8(2): mov (%rdx),%ecx
5fca(2): cmp %edi,%ecx
5fcc(2): jnz 0xffffffe4(%rip)
5fce(3): sub $0x1,%eax
5fd1(2): jmp 0xffffffea(%rip)
5fd3(5): nop 0x0(%rax,%rax,1)
5fd8(5): call 0xffffb668(%rip)
5fdd(3): cmp $0x26,(%rax)
5fe0(2): jnz 0x58(%rip)
5fe2(2): xor %edi,%edi
5fe4(5): mov $0x4,%esi
5fe9(5): call 0xffffb8b7(%rip)
5fee(3): test %rax,%rax
5ff1(2): jz 0x47(%rip)
5ff3(3): mov %rax,(%r15)
5ff6(3): mov %r13d,(%rax)
5ff9(2): xor %eax,%eax
5ffb(4): cmp $0xff,%r13d
5fff(3): setnz %al
6002(5): jmp 0xfffffebb(%rip)
6007(2): xor %edi,%edi
6009(3): movsxd %eax,%rsi
600c(5): call 0xfffffdc4(%rip)
6011(3): test %rax,%rax
6014(3): mov %rax,%rbx
6017(2): jz 0x21(%rip)
6019(4): mov 0x4(%rsp),%edi
601d(3): mov %rbx,%rsi
6020(5): call 0xffffb810(%rip)
6025(2): test %eax,%eax
6027(6): jns 0xffffff63(%rip)
602d(5): jmp 0xfffffe74(%rip)
6032(6): nop 0x0(%rax,%rax,1)
6038(5): mov $0xffffffff,%eax
603d(5): jmp 0xfffffe80(%rip)
6042(3): mov %rax,%rsi
6045(5): call 0xffffb7eb(%rip)
604a(2): test %eax,%eax
604c(6): jns 0xffffff3e(%rip)
6052(5): jmp 0xfffffe4f(%rip)
6057(5): call 0xffffb699(%rip)

"rpl_fclose" :
6060(2): push %r12
6062(1): push %rbp
6063(1): push %rbx
6064(3): mov %rdi,%rbx
6067(5): call 0xffffb7a9(%rip)
606c(2): test %eax,%eax
606e(3): mov %rbx,%rdi
6071(2): js 0x56(%rip)
6073(5): call 0xffffb81d(%rip)
6078(2): test %eax,%eax
607a(2): jnz 0x2e(%rip)
607c(3): mov %rbx,%rdi
607f(5): call 0x61(%rip)
6084(2): test %eax,%eax
6086(2): jz 0x3e(%rip)
6088(5): call 0xffffb5b8(%rip)
608d(3): mov (%rax),%r12d
6090(3): mov %rbx,%rdi
6093(3): mov %rax,%rbp
6096(5): call 0xffffb5fa(%rip)
609b(3): test %r12d,%r12d
609e(2): jnz 0x32(%rip)
60a0(1): pop %rbx
60a1(1): pop %rbp
60a2(2): pop %r12
60a4(1): ret near (%rsp)
60a5(3): nop (%rax)
60a8(3): mov %rbx,%rdi
60ab(5): call 0xffffb765(%rip)
60b0(2): xor %esi,%esi
60b2(5): mov $0x1,%edx
60b7(2): mov %eax,%edi
60b9(5): call 0xffffb6b7(%rip)
60be(4): cmp $0xffffffff,%rax
60c2(2): jnz 0xffffffba(%rip)
60c4(3): mov %rbx,%rdi
60c7(1): pop %rbx
60c8(1): pop %rbp
60c9(2): pop %r12
60cb(5): jmp 0xffffb5c5(%rip)
60d0(4): mov %r12d,0x0(%rbp)
60d4(5): mov $0xffffffff,%eax
60d9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
60e0(3): test %rdi,%rdi
60e3(1): push %rbx
60e4(3): mov %rdi,%rbx
60e7(2): jz 0x13(%rip)
60e9(5): call 0xffffb7a7(%rip)
60ee(2): test %eax,%eax
60f0(2): jz 0xa(%rip)
60f2(6): test $0x100,(%rbx)
60f8(2): jnz 0x10(%rip)
60fa(3): mov %rbx,%rdi
60fd(1): pop %rbx
60fe(5): jmp 0xffffb752(%rip)
6103(5): nop 0x0(%rax,%rax,1)
6108(3): mov %rbx,%rdi
610b(5): mov $0x1,%edx
6110(2): xor %esi,%esi
6112(5): call 0xe(%rip)
6117(3): mov %rbx,%rdi
611a(1): pop %rbx
611b(5): jmp 0xffffb735(%rip)

"rpl_fseeko" :
6120(4): mov 0x8(%rdi),%rax
6124(4): cmp %rax,0x10(%rdi)
6128(2): jz 0x8(%rip)
612a(5): jmp 0xffffb7c6(%rip)
612f(1): nop 
6130(4): mov 0x20(%rdi),%rax
6134(4): cmp %rax,0x28(%rdi)
6138(2): jnz 0xfffffff2(%rip)
613a(5): cmp $0x0,0x48(%rdi)
613f(2): jnz 0xffffffeb(%rip)
6141(2): push %r12
6143(1): push %rbp
6144(3): mov %edx,%r12d
6147(1): push %rbx
6148(3): mov %rsi,%rbp
614b(3): mov %rdi,%rbx
614e(5): call 0xffffb6c2(%rip)
6153(3): mov %r12d,%edx
6156(3): mov %rbp,%rsi
6159(2): mov %eax,%edi
615b(5): call 0xffffb615(%rip)
6160(4): cmp $0xffffffff,%rax
6164(2): jz 0xe(%rip)
6166(3): and $0xef,(%rbx)
6169(7): mov %rax,0x90(%rbx)
6170(2): xor %eax,%eax
6172(1): pop %rbx
6173(1): pop %rbp
6174(2): pop %r12
6176(1): ret near (%rsp)

"__libc_csu_init" :
6180(2): push %r15
6182(2): push %r14
6184(3): mov %rdx,%r15
6187(2): push %r13
6189(2): push %r12
618b(7): lea 0x2028be(%rip),%r12
6192(1): push %rbp
6193(7): lea 0x2028be(%rip),%rbp
619a(1): push %rbx
619b(3): mov %edi,%r13d
619e(3): mov %rsi,%r14
61a1(3): sub %r12,%rbp
61a4(4): sub $0x8,%rsp
61a8(4): sar $0x3,%rbp
61ac(5): call 0xffffb42c(%rip)
61b1(3): test %rbp,%rbp
61b4(2): jz 0x22(%rip)
61b6(2): xor %ebx,%ebx
61b8(8): nop 0x0(%rax,%rax,1)
61c0(3): mov %r15,%rdx
61c3(3): mov %r14,%rsi
61c6(3): mov %r13d,%edi
61c9(4): call 0x0(%r12,%rbx,8)
61cd(4): add $0x1,%rbx
61d1(3): cmp %rbx,%rbp
61d4(2): jnz 0xffffffec(%rip)
61d6(4): add $0x8,%rsp
61da(1): pop %rbx
61db(1): pop %rbp
61dc(2): pop %r12
61de(2): pop %r13
61e0(2): pop %r14
61e2(2): pop %r15
61e4(1): ret near (%rsp)

"atexit" :
6200(7): mov 0x202e01(%rip),%rdx
6207(2): xor %esi,%esi
6209(5): jmp 0xffffb707(%rip)

"_fini" :
6210(4): sub $0x8,%rsp
6214(4): add $0x8,%rsp
6218(1): ret near (%rsp)

