
"free@plt" :
1270(6): jmp 0x205c0a(%rip)
1276(5): push $0x0

"abort@plt" :
1280(6): jmp 0x205c02(%rip)
1286(5): push $0x1

"__errno_location@plt" :
1290(6): jmp 0x205bfa(%rip)
1296(5): push $0x2

"strncmp@plt" :
12a0(6): jmp 0x205bf2(%rip)
12a6(5): push $0x3

"_exit@plt" :
12b0(6): jmp 0x205bea(%rip)
12b6(5): push $0x4

"__fpending@plt" :
12c0(6): jmp 0x205be2(%rip)
12c6(5): push $0x5

"textdomain@plt" :
12d0(6): jmp 0x205bda(%rip)
12d6(5): push $0x6

"pathconf@plt" :
12e0(6): jmp 0x205bd2(%rip)
12e6(5): push $0x7

"fclose@plt" :
12f0(6): jmp 0x205bca(%rip)
12f6(5): push $0x8

"bindtextdomain@plt" :
1300(6): jmp 0x205bc2(%rip)
1306(5): push $0x9

"dcgettext@plt" :
1310(6): jmp 0x205bba(%rip)
1316(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1320(6): jmp 0x205bb2(%rip)
1326(5): push $0xb

"strlen@plt" :
1330(6): jmp 0x205baa(%rip)
1336(5): push $0xc

"__lxstat@plt" :
1340(6): jmp 0x205ba2(%rip)
1346(5): push $0xd

"__stack_chk_fail@plt" :
1350(6): jmp 0x205b9a(%rip)
1356(5): push $0xe

"getopt_long@plt" :
1360(6): jmp 0x205b92(%rip)
1366(5): push $0xf

"mbrtowc@plt" :
1370(6): jmp 0x205b8a(%rip)
1376(5): push $0x10

"strchr@plt" :
1380(6): jmp 0x205b82(%rip)
1386(5): push $0x11

"strrchr@plt" :
1390(6): jmp 0x205b7a(%rip)
1396(5): push $0x12

"lseek@plt" :
13a0(6): jmp 0x205b72(%rip)
13a6(5): push $0x13

"memset@plt" :
13b0(6): jmp 0x205b6a(%rip)
13b6(5): push $0x14

"strspn@plt" :
13c0(6): jmp 0x205b62(%rip)
13c6(5): push $0x15

"memcmp@plt" :
13d0(6): jmp 0x205b5a(%rip)
13d6(5): push $0x16

"fputs_unlocked@plt" :
13e0(6): jmp 0x205b52(%rip)
13e6(5): push $0x17

"calloc@plt" :
13f0(6): jmp 0x205b4a(%rip)
13f6(5): push $0x18

"memcpy@plt" :
1400(6): jmp 0x205b42(%rip)
1406(5): push $0x19

"fileno@plt" :
1410(6): jmp 0x205b3a(%rip)
1416(5): push $0x1a

"malloc@plt" :
1420(6): jmp 0x205b32(%rip)
1426(5): push $0x1b

"fflush@plt" :
1430(6): jmp 0x205b2a(%rip)
1436(5): push $0x1c

"nl_langinfo@plt" :
1440(6): jmp 0x205b22(%rip)
1446(5): push $0x1d

"__freading@plt" :
1450(6): jmp 0x205b1a(%rip)
1456(5): push $0x1e

"realloc@plt" :
1460(6): jmp 0x205b12(%rip)
1466(5): push $0x1f

"setlocale@plt" :
1470(6): jmp 0x205b0a(%rip)
1476(5): push $0x20

"__printf_chk@plt" :
1480(6): jmp 0x205b02(%rip)
1486(5): push $0x21

"error@plt" :
1490(6): jmp 0x205afa(%rip)
1496(5): push $0x22

"fseeko@plt" :
14a0(6): jmp 0x205af2(%rip)
14a6(5): push $0x23

"__cxa_atexit@plt" :
14b0(6): jmp 0x205aea(%rip)
14b6(5): push $0x24

"exit@plt" :
14c0(6): jmp 0x205ae2(%rip)
14c6(5): push $0x25

"fwrite@plt" :
14d0(6): jmp 0x205ada(%rip)
14d6(5): push $0x26

"__fprintf_chk@plt" :
14e0(6): jmp 0x205ad2(%rip)
14e6(5): push $0x27

"mbsinit@plt" :
14f0(6): jmp 0x205aca(%rip)
14f6(5): push $0x28

"iswprint@plt" :
1500(6): jmp 0x205ac2(%rip)
1506(5): push $0x29

"__ctype_b_loc@plt" :
1510(6): jmp 0x205aba(%rip)
1516(5): push $0x2a

".plt.got" :
1520(6): jmp 0x205ad2(%rip)
1526(2): nop 

"_init" :
1240(4): sub $0x8,%rsp
1244(7): mov 0x205d9d(%rip),%rax
124b(3): test %rax,%rax
124e(2): jz 0x4(%rip)
1250(2): call %rax
1252(4): add $0x8,%rsp
1256(1): ret near (%rsp)

"main" :
1530(2): push %r15
1532(2): push %r14
1534(2): push %r13
1536(2): push %r12
1538(3): mov %edi,%r12d
153b(1): push %rbp
153c(1): push %rbx
153d(3): mov %rsi,%rbx
1540(3): xor %r13d,%r13d
1543(7): sub $0xd8,%rsp
154a(3): mov (%rsi),%rdi
154d(9): mov $0x28,%rax
1556(8): mov %rax,0xc8(%rsp)
155e(2): xor %eax,%eax
1560(5): call 0xbc0(%rip)
1565(7): lea 0x3f95(%rip),%rsi
156c(5): mov $0x6,%edi
1571(5): call 0xfffffeff(%rip)
1576(7): lea 0x35d4(%rip),%rsi
157d(7): lea 0x35a2(%rip),%rdi
1584(5): call 0xfffffd7c(%rip)
1589(7): lea 0x3596(%rip),%rdi
1590(5): call 0xfffffd40(%rip)
1595(7): lea 0xad4(%rip),%rdi
159c(5): call 0x34d4(%rip)
15a1(4): mov $0x0,(%rsp)
15a5(7): lea 0x2055f4(%rip),%rcx
15ac(7): lea 0x35df(%rip),%rdx
15b3(3): xor %r8d,%r8d
15b6(3): mov %rbx,%rsi
15b9(3): mov %r12d,%edi
15bc(5): call 0xfffffda4(%rip)
15c1(3): cmp $0xff,%eax
15c4(6): jz 0x95(%rip)
15ca(3): cmp $0x50,%eax
15cd(2): jz 0x73(%rip)
15cf(2): jle 0x21(%rip)
15d1(3): cmp $0x70,%eax
15d4(2): jz 0x7c(%rip)
15d6(3): add $0x80,%eax
15d9(6): jnz 0x603(%rip)
15df(6): mov $0x1,%r13d
15e5(4): mov $0x1,(%rsp)
15e9(2): jmp 0xffffffbc(%rip)
15eb(5): nop 0x0(%rax,%rax,1)
15f0(5): cmp $0xffffff7d,%eax
15f5(6): jnz 0x5b8(%rip)
15fb(7): lea 0x3583(%rip),%rax
1602(7): mov 0x205a7f(%rip),%rdi
1609(7): mov 0x205a00(%rip),%rcx
1610(2): push $0x0
1612(7): lea 0x3550(%rip),%r9
1619(7): lea 0x3559(%rip),%r8
1620(1): push %rax
1621(7): lea 0x34fa(%rip),%rdx
1628(7): lea 0x3475(%rip),%rsi
162f(2): xor %eax,%eax
1631(5): call 0x2cdf(%rip)
1636(2): xor %edi,%edi
1638(5): call 0xfffffe88(%rip)
163d(3): nop (%rax)
1640(6): mov $0x1,%r13d
1646(5): jmp 0xffffff5f(%rip)
164b(5): nop 0x0(%rax,%rax,1)
1650(4): mov $0x1,(%rsp)
1654(5): jmp 0xffffff51(%rip)
1659(6): mov 0x205a31(%rip),%eax
165f(3): cmp %r12d,%eax
1662(6): jz 0x559(%rip)
1668(5): mov $0x1,%ecx
166d(6): jnl 0x2ea(%rip)
1673(5): mov %r12d,0x14(%rsp)
1678(5): mov %rbx,0x18(%rsp)
167d(3): mov %ecx,%r12d
1680(5): jmp 0x8c(%rip)
1685(4): cmp $0x0,(%rsp)
1689(6): jnz 0x1f1(%rip)
168f(5): lea 0x30(%rsp),%rdx
1694(3): mov %r14,%rsi
1697(5): mov $0x1,%edi
169c(5): call 0xfffffca4(%rip)
16a1(2): test %eax,%eax
16a3(6): jz 0x2a6(%rip)
16a9(5): call 0xfffffbe7(%rip)
16ae(3): cmp $0x2,(%rax)
16b1(3): mov %rax,%rbx
16b4(4): setnz %r8b
16b8(3): test %rbp,%rbp
16bb(3): setz %al
16be(3): or %al,%r8b
16c1(6): jz 0x35b(%rip)
16c7(3): mov %r14,%rdx
16ca(5): mov $0x3,%esi
16cf(2): xor %edi,%edi
16d1(5): call 0x258f(%rip)
16d6(2): mov (%rbx),%esi
16d8(7): lea 0x3899(%rip),%rdx
16df(3): mov %rax,%rcx
16e2(2): xor %edi,%edi
16e4(2): xor %eax,%eax
16e6(5): call 0xfffffdaa(%rip)
16eb(3): xor %r8d,%r8d
16ee(2): nop 
16f0(6): mov 0x20599a(%rip),%eax
16f6(3): and %r8d,%r12d
16f9(3): add $0x1,%eax
16fc(4): cmp 0x14(%rsp),%eax
1700(6): mov %eax,0x20598a(%rip)
1706(6): jnl 0x24e(%rip)
170c(5): mov 0x18(%rsp),%rcx
1711(2): cwde 
1713(4): mov 0x0(%rcx,%rax,8),%r14
1717(3): mov %r14,%rdi
171a(5): call 0xfffffc16(%rip)
171f(3): test %r13b,%r13b
1722(3): mov %rax,%rbp
1725(6): jz 0xffffff60(%rip)
172b(3): mov %r14,%rdi
172e(2): jmp 0x19(%rip)
1730(3): cmp %rax,%r14
1733(6): jz 0x179(%rip)
1739(4): cmp $0x2f,0xffffffff(%rax)
173d(6): jz 0x16f(%rip)
1743(4): lea 0x1(%rax),%rdi
1747(5): mov $0x2d,%esi
174c(5): call 0xfffffc34(%rip)
1751(3): test %rax,%rax
1754(2): jnz 0xffffffdc(%rip)
1756(3): test %rbp,%rbp
1759(6): jz 0x12a(%rip)
175f(4): cmp $0x0,(%rsp)
1763(6): jz 0xffffff2c(%rip)
1769(7): lea 0x36d0(%rip),%rsi
1770(3): mov %r14,%rdi
1773(5): call 0xfffffc4d(%rip)
1778(4): lea 0x0(%r14,%rax,1),%r15
177c(4): cmp $0x0,(%r15)
1780(6): jnz 0x208(%rip)
1786(7): cmp $0xff,%rbp
178d(6): jnbe 0x337(%rip)
1793(4): mov (%rsp),%rdx
1797(4): shl/sal $0x3f,%rdx
179b(4): sar $0x3f,%rdx
179f(3): and $0xe,%edx
17a2(5): mov $0xe,%ecx
17a7(5): mov %r13b,0x20(%rsp)
17ac(5): mov %r12b,0x28(%rsp)
17b1(3): mov %r14,%rbp
17b4(3): mov %rdx,%r12
17b7(3): mov %rcx,%r13
17ba(2): jmp 0xa(%rip)
17bc(4): nop 0x0(%rax)
17c0(4): add $0x1,%rbp
17c4(5): movzx 0x0(%rbp),%r15d
17c9(4): cmp $0x2f,%r15b
17cd(2): jz 0xfffffff3(%rip)
17cf(3): test %r15b,%r15b
17d2(6): jz 0x16b(%rip)
17d8(3): test %r12,%r12
17db(6): jnz 0x9a(%rip)
17e1(7): lea 0x3367(%rip),%rax
17e8(3): cmp %rbp,%r14
17eb(4): cmovne %r14,%rax
17ef(5): mov %rax,0x8(%rsp)
17f4(5): call 0xfffffa9c(%rip)
17f9(5): mov 0x8(%rsp),%rdi
17fe(6): mov $0x0,(%rax)
1804(5): mov $0x3,%esi
1809(4): mov $0x0,0x0(%rbp)
180d(3): mov %rax,%rbx
1810(5): call 0xfffffad0(%rip)
1815(3): test %rax,%rax
1818(4): mov %r15b,0x0(%rbp)
181c(6): js 0xcc(%rip)
1822(3): mov %rax,%r13
1825(5): movzx 0x1(%rbp),%r15d
182a(4): cmp $0x2f,%r15b
182e(2): jz 0x3b(%rip)
1830(3): test %r15b,%r15b
1833(2): jz 0x36(%rip)
1835(4): lea 0x2(%rbp),%rax
1839(4): movzx (%rax),%r15d
183d(3): mov %rax,%r8
1840(3): mov %rax,%r10
1843(3): sub %rbp,%r8
1846(4): add $0x1,%rax
184a(4): cmp $0x2f,%r15b
184e(2): jz 0xa(%rip)
1850(3): test %r15b,%r15b
1853(2): jnz 0xffffffe6(%rip)
1855(3): nop (%rax)
1858(3): cmp %r8,%r13
185b(6): jb 0x2ea(%rip)
1861(3): mov %r10,%rbp
1864(5): jmp 0xffffff60(%rip)
1869(4): lea 0x1(%rbp),%r10
186d(6): mov $0x1,%r8d
1873(2): jmp 0xffffffe5(%rip)
1875(3): mov %r12,%r13
1878(2): jmp 0xffffffad(%rip)
187a(3): test %rax,%rax
187d(6): jnz 0xfffffeec(%rip)
1883(7): lea 0x331c(%rip),%rsi
188a(5): mov $0x5,%edx
188f(2): xor %edi,%edi
1891(5): call 0xfffffa7f(%rip)
1896(2): xor %esi,%esi
1898(3): mov %rax,%rdx
189b(2): xor %edi,%edi
189d(2): xor %eax,%eax
189f(5): call 0xfffffbf1(%rip)
18a4(3): xor %r8d,%r8d
18a7(5): jmp 0xfffffe49(%rip)
18ac(3): mov %r14,%rsi
18af(5): mov $0x4,%edi
18b4(5): call 0x22ac(%rip)
18b9(7): lea 0x3550(%rip),%rsi
18c0(3): mov %rax,%rbp
18c3(5): mov $0x5,%edx
18c8(2): xor %edi,%edi
18ca(5): call 0xfffffa46(%rip)
18cf(3): mov %rbp,%rcx
18d2(3): mov %rax,%rdx
18d5(2): xor %esi,%esi
18d7(2): xor %edi,%edi
18d9(2): xor %eax,%eax
18db(5): call 0xfffffbb5(%rip)
18e0(3): xor %r8d,%r8d
18e3(5): jmp 0xfffffe0d(%rip)
18e8(2): mov (%rbx),%eax
18ea(2): test %eax,%eax
18ec(6): jz 0x127(%rip)
18f2(3): cmp $0x2,%eax
18f5(6): jz 0x116(%rip)
18fb(5): mov 0x8(%rsp),%rdx
1900(5): mov $0x3,%esi
1905(2): xor %edi,%edi
1907(4): mov $0x0,0x0(%rbp)
190b(6): movzx 0x20(%rsp),%r13d
1911(6): movzx 0x28(%rsp),%r12d
1917(5): call 0x2349(%rip)
191c(2): mov (%rbx),%esi
191e(7): lea 0x3653(%rip),%rdx
1925(3): mov %rax,%rcx
1928(2): xor %edi,%edi
192a(2): xor %eax,%eax
192c(5): call 0xfffffb64(%rip)
1931(4): mov %r15b,0x0(%rbp)
1935(3): xor %r8d,%r8d
1938(5): jmp 0xfffffdb8(%rip)
193d(6): movzx 0x20(%rsp),%r13d
1943(6): movzx 0x28(%rsp),%r12d
1949(6): mov $0x1,%r8d
194f(5): jmp 0xfffffda1(%rip)
1954(3): mov %r12d,%ecx
1957(2): mov %ecx,%eax
1959(3): xor $0x1,%eax
195c(8): mov 0xc8(%rsp),%rbx
1964(9): xor $0x28,%rbx
196d(3): movzx %al,%eax
1970(6): jnz 0x276(%rip)
1976(7): add $0xd8,%rsp
197d(1): pop %rbx
197e(1): pop %rbp
197f(2): pop %r12
1981(2): pop %r13
1983(2): pop %r14
1985(2): pop %r15
1987(1): ret near (%rsp)
1988(5): lea 0x30(%rsp),%rdx
198d(3): mov %rbp,%rsi
1990(3): mov %r15,%rdi
1993(3): sub %rax,%rsi
1996(9): mov $0x0,0x30(%rsp)
199f(5): call 0x2d61(%rip)
19a4(2): xor %edi,%edi
19a6(3): mov %rax,%rbx
19a9(3): mov %r14,%rdx
19ac(5): mov $0x4,%esi
19b1(5): call 0x208f(%rip)
19b6(4): cmp $0x10,%rbx
19ba(3): mov %rax,%rbp
19bd(2): jbe 0x7(%rip)
19bf(5): mov $0x1,%ebx
19c4(3): mov %rbx,%rcx
19c7(3): mov %r15,%rdx
19ca(5): mov $0x8,%esi
19cf(5): mov $0x1,%edi
19d4(5): call 0x20fc(%rip)
19d9(7): lea 0x34a8(%rip),%rsi
19e0(3): mov %rax,%r14
19e3(5): mov $0x5,%edx
19e8(2): xor %edi,%edi
19ea(5): call 0xfffff926(%rip)
19ef(3): mov %rbp,%r8
19f2(3): mov %rax,%rdx
19f5(3): mov %r14,%rcx
19f8(2): xor %esi,%esi
19fa(2): xor %edi,%edi
19fc(2): xor %eax,%eax
19fe(5): call 0xfffffa92(%rip)
1a03(3): xor %r8d,%r8d
1a06(5): jmp 0xfffffcea(%rip)
1a0b(3): mov %r13,%r12
1a0e(5): jmp 0xfffffe17(%rip)
1a13(4): or $0xffffffff,%r13
1a17(5): jmp 0xfffffe0e(%rip)
1a1c(7): cmp $0xff,%rbp
1a23(5): mov %r8b,0x8(%rsp)
1a28(2): jbe 0x3c(%rip)
1a2a(4): cmp $0x2f,(%r14)
1a2e(7): lea 0x311a(%rip),%rax
1a35(7): lea 0x3582(%rip),%r15
1a3c(6): mov $0x0,(%rbx)
1a42(5): mov $0x4,%esi
1a47(4): cmovne %rax,%r15
1a4b(3): mov %r15,%rdi
1a4e(5): call 0xfffff892(%rip)
1a53(3): test %rax,%rax
1a56(6): js 0xb7(%rip)
1a5c(3): cmp %rax,%rbp
1a5f(3): mov %rax,%r15
1a62(2): jnb 0x68(%rip)
1a64(3): mov %r14,%rsi
1a67(3): mov %rsi,%rax
1a6a(2): jmp 0xa(%rip)
1a6c(4): nop 0x0(%rax)
1a70(4): add $0x1,%rax
1a74(3): movzx (%rax),%edx
1a77(3): cmp $0x2f,%dl
1a7a(2): jz 0xfffffff6(%rip)
1a7c(2): test %dl,%dl
1a7e(6): jz 0xfffffecb(%rip)
1a84(4): movzx 0x1(%rax),%edx
1a88(4): lea 0x1(%rax),%rcx
1a8c(3): cmp $0x2f,%dl
1a8f(2): jz 0x30(%rip)
1a91(2): test %dl,%dl
1a93(2): jz 0x2c(%rip)
1a95(4): lea 0x2(%rax),%rdx
1a99(3): movzx (%rdx),%ecx
1a9c(3): mov %rdx,%rdi
1a9f(3): mov %rdx,%rsi
1aa2(3): sub %rax,%rdi
1aa5(4): add $0x1,%rdx
1aa9(3): cmp $0x2f,%cl
1aac(2): jz 0x6(%rip)
1aae(2): test %cl,%cl
1ab0(2): jnz 0xffffffe9(%rip)
1ab2(4): cmp $0xe,%rdi
1ab6(2): jbe 0xffffffb1(%rip)
1ab8(2): xor %edx,%edx
1aba(5): jmp 0xfffffce8(%rip)
1abf(3): mov %rcx,%rax
1ac2(2): jmp 0xffffffb2(%rip)
1ac4(6): mov $0x100,%r15d
1aca(3): mov %r14,%rsi
1acd(5): mov $0x4,%edi
1ad2(5): call 0x208e(%rip)
1ad7(7): lea 0x3412(%rip),%rsi
1ade(5): mov $0x5,%edx
1ae3(2): xor %edi,%edi
1ae5(3): mov %rax,%r14
1ae8(5): call 0xfffff828(%rip)
1aed(4): lea 0xffffffff(%r15),%rcx
1af1(3): mov %rbp,%r8
1af4(3): mov %rax,%rdx
1af7(3): mov %r14,%r9
1afa(2): xor %esi,%esi
1afc(2): xor %edi,%edi
1afe(2): xor %eax,%eax
1b00(5): call 0xfffff990(%rip)
1b05(3): xor %r8d,%r8d
1b08(5): jmp 0xfffffbe8(%rip)
1b0d(3): cmp $0x0,(%rbx)
1b10(6): jz 0xffffff4c(%rip)
1b16(7): lea 0x339b(%rip),%rsi
1b1d(5): mov $0x5,%edx
1b22(2): xor %edi,%edi
1b24(5): call 0xfffff7ec(%rip)
1b29(2): mov (%rbx),%esi
1b2b(3): mov %rax,%rdx
1b2e(3): mov %r15,%rcx
1b31(2): xor %edi,%edi
1b33(2): xor %eax,%eax
1b35(5): call 0xfffff95b(%rip)
1b3a(6): movzx 0x8(%rsp),%r8d
1b40(5): jmp 0xfffffbb0(%rip)
1b45(4): mov $0x0,(%r10)
1b49(3): mov %rbp,%rdi
1b4c(5): mov %r10,0x8(%rsp)
1b51(6): movzx 0x28(%rsp),%r12d
1b57(5): mov %r13,0x28(%rsp)
1b5c(6): movzx 0x20(%rsp),%r13d
1b62(5): mov %r8,0x20(%rsp)
1b67(5): call 0x22c9(%rip)
1b6c(7): lea 0x33b5(%rip),%rsi
1b73(5): mov $0x5,%edx
1b78(2): xor %edi,%edi
1b7a(3): mov %rax,%rbp
1b7d(5): call 0xfffff793(%rip)
1b82(5): mov 0x20(%rsp),%r8
1b87(5): mov 0x28(%rsp),%rcx
1b8c(3): mov %rax,%rdx
1b8f(3): mov %rbp,%r9
1b92(2): xor %esi,%esi
1b94(2): xor %edi,%edi
1b96(2): xor %eax,%eax
1b98(5): call 0xfffff8f8(%rip)
1b9d(5): mov 0x8(%rsp),%r10
1ba2(3): xor %r8d,%r8d
1ba5(3): mov %r15b,(%r10)
1ba8(5): jmp 0xfffffb48(%rip)
1bad(5): cmp $0xffffff7e,%eax
1bb2(2): jnz 0x2a(%rip)
1bb4(2): xor %edi,%edi
1bb6(5): call 0x14a(%rip)
1bbb(7): lea 0x2fd4(%rip),%rsi
1bc2(5): mov $0x5,%edx
1bc7(2): xor %edi,%edi
1bc9(5): call 0xfffff747(%rip)
1bce(2): xor %esi,%esi
1bd0(3): mov %rax,%rdx
1bd3(2): xor %edi,%edi
1bd5(2): xor %eax,%eax
1bd7(5): call 0xfffff8b9(%rip)
1bdc(5): mov $0x1,%edi
1be1(5): call 0x11f(%rip)
1be6(5): call 0xfffff76a(%rip)

"_start" :
1bf0(2): xor %ebp,%ebp
1bf2(3): mov %rdx,%r9
1bf5(1): pop %rsi
1bf6(3): mov %rsp,%rdx
1bf9(4): and $0xfffffff0,%rsp
1bfd(1): push %rax
1bfe(1): push %rsp
1bff(7): lea 0x2e5a(%rip),%r8
1c06(7): lea 0x2de3(%rip),%rcx
1c0d(7): lea 0xfffff91c(%rip),%rdi
1c14(6): call 0x2053c6(%rip)
1c1a(1): hlt 

"deregister_tm_clones" :
1c20(7): lea 0x205459(%rip),%rdi
1c27(1): push %rbp
1c28(7): lea 0x205451(%rip),%rax
1c2f(3): cmp %rdi,%rax
1c32(3): mov %rsp,%rbp
1c35(2): jz 0x1b(%rip)
1c37(7): mov 0x20539a(%rip),%rax
1c3e(3): test %rax,%rax
1c41(2): jz 0xf(%rip)
1c43(1): pop %rbp
1c44(2): jmp %rax
1c46(a): nop 0x0(%rax,%rax,1)
1c50(1): pop %rbp
1c51(1): ret near (%rsp)

"register_tm_clones" :
1c60(7): lea 0x205419(%rip),%rdi
1c67(7): lea 0x205412(%rip),%rsi
1c6e(1): push %rbp
1c6f(3): sub %rdi,%rsi
1c72(3): mov %rsp,%rbp
1c75(4): sar $0x3,%rsi
1c79(3): mov %rsi,%rax
1c7c(4): shr $0x3f,%rax
1c80(3): add %rax,%rsi
1c83(3): sar $0x1,%rsi
1c86(2): jz 0x1a(%rip)
1c88(7): mov 0x205361(%rip),%rax
1c8f(3): test %rax,%rax
1c92(2): jz 0xe(%rip)
1c94(1): pop %rbp
1c95(2): jmp %rax
1c97(9): nop 0x0(%rax,%rax,1)
1ca0(1): pop %rbp
1ca1(1): ret near (%rsp)

"__do_global_dtors_aux" :
1cb0(7): cmp $0x0,0x2053f1(%rip)
1cb7(2): jnz 0x31(%rip)
1cb9(8): cmp $0x0,0x205337(%rip)
1cc1(1): push %rbp
1cc2(3): mov %rsp,%rbp
1cc5(2): jz 0xe(%rip)
1cc7(7): mov 0x20533a(%rip),%rdi
1cce(5): call 0xfffff852(%rip)
1cd3(5): call 0xffffff4d(%rip)
1cd8(7): mov $0x1,0x2053c9(%rip)
1cdf(1): pop %rbp
1ce0(1): ret near (%rsp)
1ce1(7): nop 0x0(%rax)
1ce8(2): REP ret near (%rsp)

"frame_dummy" :
1cf0(1): push %rbp
1cf1(3): mov %rsp,%rbp
1cf4(1): pop %rbp
1cf5(5): jmp 0xffffff6b(%rip)

"usage" :
1d00(2): push %r13
1d02(2): push %r12
1d04(5): mov $0x5,%edx
1d09(1): push %rbp
1d0a(1): push %rbx
1d0b(2): mov %edi,%ebp
1d0d(7): sub $0x88,%rsp
1d14(7): mov 0x2053a5(%rip),%rbx
1d1b(9): mov $0x28,%rax
1d24(5): mov %rax,0x78(%rsp)
1d29(2): xor %eax,%eax
1d2b(2): test %edi,%edi
1d2d(2): jz 0x30(%rip)
1d2f(7): lea 0x2e9a(%rip),%rsi
1d36(2): xor %edi,%edi
1d38(5): call 0xfffff5d8(%rip)
1d3d(7): mov 0x20535c(%rip),%rdi
1d44(3): mov %rax,%rdx
1d47(3): mov %rbx,%rcx
1d4a(5): mov $0x1,%esi
1d4f(2): xor %eax,%eax
1d51(5): call 0xfffff78f(%rip)
1d56(2): mov %ebp,%edi
1d58(5): call 0xfffff768(%rip)
1d5d(7): lea 0x2e94(%rip),%rsi
1d64(2): xor %edi,%edi
1d66(5): call 0xfffff5aa(%rip)
1d6b(3): mov %rbx,%rdx
1d6e(3): mov %rax,%rsi
1d71(5): mov $0x1,%edi
1d76(2): xor %eax,%eax
1d78(5): call 0xfffff708(%rip)
1d7d(7): mov 0x205304(%rip),%rbx
1d84(7): lea 0x2e8d(%rip),%rsi
1d8b(5): mov $0x5,%edx
1d90(2): xor %edi,%edi
1d92(5): call 0xfffff57e(%rip)
1d97(3): mov %rbx,%rsi
1d9a(3): mov %rax,%rdi
1d9d(5): call 0xfffff643(%rip)
1da2(7): mov 0x2052df(%rip),%rbx
1da9(7): lea 0x2f50(%rip),%rsi
1db0(5): mov $0x5,%edx
1db5(2): xor %edi,%edi
1db7(5): call 0xfffff559(%rip)
1dbc(3): mov %rbx,%rsi
1dbf(3): mov %rax,%rdi
1dc2(5): call 0xfffff61e(%rip)
1dc7(7): mov 0x2052ba(%rip),%rbx
1dce(7): lea 0x2f5b(%rip),%rsi
1dd5(5): mov $0x5,%edx
1dda(2): xor %edi,%edi
1ddc(5): call 0xfffff534(%rip)
1de1(3): mov %rbx,%rsi
1de4(3): mov %rax,%rdi
1de7(7): lea 0x2cb6(%rip),%rbx
1dee(5): call 0xfffff5f2(%rip)
1df3(7): lea 0x2cb2(%rip),%rax
1dfa(7): lea 0x2cec(%rip),%rcx
1e01(9): mov $0x0,0x60(%rsp)
1e0a(9): mov $0x0,0x68(%rsp)
1e13(3): mov %rsp,%rdx
1e16(4): mov %rax,(%rsp)
1e1a(7): lea 0x2c8d(%rip),%rax
1e21(5): mov %rcx,0x30(%rsp)
1e26(7): lea 0x2cca(%rip),%rcx
1e2d(5): mov %rax,0x8(%rsp)
1e32(7): lea 0x2ced(%rip),%rax
1e39(5): mov %rcx,0x40(%rsp)
1e3e(7): lea 0x2cbc(%rip),%rcx
1e45(5): mov %rax,0x10(%rsp)
1e4a(7): lea 0x2c6d(%rip),%rax
1e51(5): mov %rcx,0x50(%rsp)
1e56(5): mov %rax,0x18(%rsp)
1e5b(7): lea 0x2c72(%rip),%rax
1e62(5): mov %rax,0x20(%rsp)
1e67(7): lea 0x2c70(%rip),%rax
1e6e(5): mov %rax,0x28(%rsp)
1e73(5): mov %rax,0x38(%rsp)
1e78(5): mov %rax,0x48(%rsp)
1e7d(5): mov %rax,0x58(%rsp)
1e82(6): nop 0x0(%rax,%rax,1)
1e88(4): add $0x10,%rdx
1e8c(3): mov (%rdx),%rdi
1e8f(3): test %rdi,%rdi
1e92(2): jz 0x15(%rip)
1e94(5): mov $0x8,%ecx
1e99(3): mov %rbx,%rsi
1e9c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e9e(3): setnbe %al
1ea1(2): sbb $0x0,%al
1ea3(2): test %al,%al
1ea5(2): jnz 0xffffffe3(%rip)
1ea7(4): mov 0x8(%rdx),%r12
1eab(2): xor %edi,%edi
1ead(5): mov $0x5,%edx
1eb2(7): lea 0x2c52(%rip),%rsi
1eb9(3): test %r12,%r12
1ebc(6): jz 0xc7(%rip)
1ec2(5): call 0xfffff44e(%rip)
1ec7(7): lea 0x2e9a(%rip),%rcx
1ece(7): lea 0x2c4d(%rip),%rdx
1ed5(3): mov %rax,%rsi
1ed8(5): mov $0x1,%edi
1edd(2): xor %eax,%eax
1edf(5): call 0xfffff5a1(%rip)
1ee4(2): xor %esi,%esi
1ee6(5): mov $0x5,%edi
1eeb(5): call 0xfffff585(%rip)
1ef0(3): test %rax,%rax
1ef3(2): jz 0x1e(%rip)
1ef5(7): lea 0x2c34(%rip),%rsi
1efc(5): mov $0x3,%edx
1f01(3): mov %rax,%rdi
1f04(5): call 0xfffff39c(%rip)
1f09(2): test %eax,%eax
1f0b(6): jnz 0x10d(%rip)
1f11(7): lea 0x2c1c(%rip),%rsi
1f18(2): xor %edi,%edi
1f1a(5): mov $0x5,%edx
1f1f(5): call 0xfffff3f1(%rip)
1f24(7): lea 0x2b79(%rip),%rcx
1f2b(7): lea 0x2e36(%rip),%rdx
1f32(3): mov %rax,%rsi
1f35(5): mov $0x1,%edi
1f3a(2): xor %eax,%eax
1f3c(5): call 0xfffff544(%rip)
1f41(3): cmp %rbx,%r12
1f44(7): lea 0x2b7d(%rip),%rcx
1f4b(7): lea 0x35af(%rip),%rbx
1f52(4): cmove %rcx,%rbx
1f56(7): lea 0x2e7b(%rip),%rsi
1f5d(2): xor %edi,%edi
1f5f(5): mov $0x5,%edx
1f64(5): call 0xfffff3ac(%rip)
1f69(3): mov %rbx,%rcx
1f6c(3): mov %rax,%rsi
1f6f(3): mov %r12,%rdx
1f72(5): mov $0x1,%edi
1f77(2): xor %eax,%eax
1f79(5): call 0xfffff507(%rip)
1f7e(5): jmp 0xfffffdd8(%rip)
1f83(5): call 0xfffff38d(%rip)
1f88(7): lea 0x2dd9(%rip),%rcx
1f8f(7): lea 0x2b8c(%rip),%rdx
1f96(3): mov %rax,%rsi
1f99(5): mov $0x1,%edi
1f9e(2): xor %eax,%eax
1fa0(5): call 0xfffff4e0(%rip)
1fa5(2): xor %esi,%esi
1fa7(5): mov $0x5,%edi
1fac(5): call 0xfffff4c4(%rip)
1fb1(3): test %rax,%rax
1fb4(2): jz 0x1a(%rip)
1fb6(7): lea 0x2b73(%rip),%rsi
1fbd(5): mov $0x3,%edx
1fc2(3): mov %rax,%rdi
1fc5(5): call 0xfffff2db(%rip)
1fca(2): test %eax,%eax
1fcc(2): jnz 0x45(%rip)
1fce(7): lea 0x2b5f(%rip),%rsi
1fd5(5): mov $0x5,%edx
1fda(2): xor %edi,%edi
1fdc(7): lea 0x2ac1(%rip),%r12
1fe3(7): lea 0x2ade(%rip),%rbx
1fea(5): call 0xfffff326(%rip)
1fef(7): lea 0x2aae(%rip),%rcx
1ff6(7): lea 0x2d6b(%rip),%rdx
1ffd(3): mov %rax,%rsi
2000(5): mov $0x1,%edi
2005(2): xor %eax,%eax
2007(5): call 0xfffff479(%rip)
200c(5): jmp 0xffffff4a(%rip)
2011(7): lea 0x2a8c(%rip),%r12
2018(7): mov 0x205069(%rip),%r13
201f(7): lea 0x2d6a(%rip),%rsi
2026(2): xor %edi,%edi
2028(5): mov $0x5,%edx
202d(5): call 0xfffff2e3(%rip)
2032(3): mov %r13,%rsi
2035(3): mov %rax,%rdi
2038(5): call 0xfffff3a8(%rip)
203d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2050(7): mov %rdi,0x205061(%rip)
2057(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2060(7): mov %dil,0x205049(%rip)
2067(1): ret near (%rsp)

"close_stdout" :
2070(1): push %rbp
2071(1): push %rbx
2072(4): sub $0x8,%rsp
2076(7): mov 0x20500b(%rip),%rdi
207d(5): call 0x2733(%rip)
2082(2): test %eax,%eax
2084(2): jz 0x18(%rip)
2086(5): call 0xfffff20a(%rip)
208b(7): cmp $0x0,0x20501e(%rip)
2092(3): mov %rax,%rbx
2095(2): jz 0x1e(%rip)
2097(3): cmp $0x20,(%rax)
209a(2): jnz 0x19(%rip)
209c(7): mov 0x204ffd(%rip),%rdi
20a3(5): call 0x270d(%rip)
20a8(2): test %eax,%eax
20aa(2): jnz 0x48(%rip)
20ac(4): add $0x8,%rsp
20b0(1): pop %rbx
20b1(1): pop %rbp
20b2(1): ret near (%rsp)
20b3(7): lea 0x2eae(%rip),%rsi
20ba(2): xor %edi,%edi
20bc(5): mov $0x5,%edx
20c1(5): call 0xfffff24f(%rip)
20c6(7): mov 0x204feb(%rip),%rdi
20cd(3): mov %rax,%rbp
20d0(3): test %rdi,%rdi
20d3(2): jz 0x2a(%rip)
20d5(5): call 0x1b5b(%rip)
20da(2): mov (%rbx),%esi
20dc(7): lea 0x2e91(%rip),%rdx
20e3(3): mov %rax,%rcx
20e6(3): mov %rbp,%r8
20e9(2): xor %edi,%edi
20eb(2): xor %eax,%eax
20ed(5): call 0xfffff3a3(%rip)
20f2(6): mov 0x204f20(%rip),%edi
20f8(5): call 0xfffff1b8(%rip)
20fd(2): mov (%rbx),%esi
20ff(7): lea 0x2e72(%rip),%rdx
2106(3): mov %rax,%rcx
2109(2): xor %edi,%edi
210b(2): xor %eax,%eax
210d(5): call 0xfffff383(%rip)
2112(2): jmp 0xffffffe0(%rip)

"set_program_name" :
2120(3): test %rdi,%rdi
2123(1): push %rbx
2124(2): jz 0x79(%rip)
2126(5): mov $0x2f,%esi
212b(3): mov %rdi,%rbx
212e(5): call 0xfffff262(%rip)
2133(3): test %rax,%rax
2136(2): jz 0x57(%rip)
2138(4): lea 0x1(%rax),%r8
213c(3): mov %r8,%rdx
213f(3): sub %rbx,%rdx
2142(4): cmp $0x6,%rdx
2146(2): jle 0x47(%rip)
2148(4): lea 0xfffffffa(%rax),%rsi
214c(7): lea 0x2e65(%rip),%rdi
2153(5): mov $0x7,%ecx
2158(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
215a(3): setnbe %dl
215d(3): sbb $0x0,%dl
2160(2): test %dl,%dl
2162(2): jnz 0x2b(%rip)
2164(7): lea 0x2e55(%rip),%rdi
216b(5): mov $0x3,%ecx
2170(3): mov %r8,%rsi
2173(3): mov %r8,%rbx
2176(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2178(3): setnbe %dl
217b(3): sbb $0x0,%dl
217e(2): test %dl,%dl
2180(2): jnz 0xd(%rip)
2182(4): lea 0x4(%rax),%rbx
2186(7): mov %rbx,0x204ef3(%rip)
218d(7): mov %rbx,0x204f2c(%rip)
2194(7): mov %rbx,0x204efd(%rip)
219b(1): pop %rbx
219c(1): ret near (%rsp)
219d(7): mov 0x204efc(%rip),%rcx
21a4(7): lea 0x2dd5(%rip),%rdi
21ab(5): mov $0x37,%edx
21b0(5): mov $0x1,%esi
21b5(5): call 0xfffff31b(%rip)
21ba(5): call 0xfffff0c6(%rip)

"gettext_quote.part.1" :
21c0(1): push %rbp
21c1(1): push %rbx
21c2(3): mov %rdi,%rbp
21c5(2): mov %esi,%ebx
21c7(4): sub $0x8,%rsp
21cb(5): call 0x26c5(%rip)
21d0(3): movzx (%rax),%edx
21d3(3): and $0xdf,%edx
21d6(3): cmp $0x55,%dl
21d9(2): jz 0x77(%rip)
21db(3): cmp $0x47,%dl
21de(2): jz 0x22(%rip)
21e0(7): lea 0x2dec(%rip),%rax
21e7(7): lea 0x2de7(%rip),%rdx
21ee(3): cmp $0x9,%ebx
21f1(4): cmovne %rdx,%rax
21f5(4): add $0x8,%rsp
21f9(1): pop %rbx
21fa(1): pop %rbp
21fb(1): ret near (%rsp)
21fc(4): nop 0x0(%rax)
2200(4): movzx 0x1(%rax),%edx
2204(3): and $0xdf,%edx
2207(3): cmp $0x42,%dl
220a(2): jnz 0xffffffd6(%rip)
220c(4): cmp $0x31,0x2(%rax)
2210(2): jnz 0xffffffd0(%rip)
2212(4): cmp $0x38,0x3(%rax)
2216(2): jnz 0xffffffca(%rip)
2218(4): cmp $0x30,0x4(%rax)
221c(2): jnz 0xffffffc4(%rip)
221e(4): cmp $0x33,0x5(%rax)
2222(2): jnz 0xffffffbe(%rip)
2224(4): cmp $0x30,0x6(%rax)
2228(2): jnz 0xffffffb8(%rip)
222a(4): cmp $0x0,0x7(%rax)
222e(2): jnz 0xffffffb2(%rip)
2230(4): cmp $0x60,0x0(%rbp)
2234(7): lea 0x2d91(%rip),%rax
223b(7): lea 0x2d8e(%rip),%rdx
2242(4): cmovne %rdx,%rax
2246(4): add $0x8,%rsp
224a(1): pop %rbx
224b(1): pop %rbp
224c(1): ret near (%rsp)
224d(3): nop (%rax)
2250(4): movzx 0x1(%rax),%edx
2254(3): and $0xdf,%edx
2257(3): cmp $0x54,%dl
225a(2): jnz 0xffffff86(%rip)
225c(4): movzx 0x2(%rax),%edx
2260(3): and $0xdf,%edx
2263(3): cmp $0x46,%dl
2266(6): jnz 0xffffff7a(%rip)
226c(4): cmp $0x2d,0x3(%rax)
2270(6): jnz 0xffffff70(%rip)
2276(4): cmp $0x38,0x4(%rax)
227a(6): jnz 0xffffff66(%rip)
2280(4): cmp $0x0,0x5(%rax)
2284(6): jnz 0xffffff5c(%rip)
228a(4): cmp $0x60,0x0(%rbp)
228e(7): lea 0x2d2f(%rip),%rax
2295(7): lea 0x2d2c(%rip),%rdx
229c(4): cmovne %rdx,%rax
22a0(4): add $0x8,%rsp
22a4(1): pop %rbx
22a5(1): pop %rbp
22a6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
22b0(2): push %r15
22b2(2): push %r14
22b4(3): mov %r8d,%r15d
22b7(2): push %r13
22b9(2): push %r12
22bb(3): mov %rdi,%r14
22be(1): push %rbp
22bf(1): push %rbx
22c0(3): mov %r9d,%ebx
22c3(3): mov %rsi,%r13
22c6(3): mov %rcx,%rbp
22c9(3): and $0x2,%ebx
22cc(7): sub $0xb8,%rsp
22d3(8): mov 0xf0(%rsp),%rax
22db(5): mov %rdx,0x10(%rsp)
22e0(5): mov %r8d,0x8(%rsp)
22e5(5): mov %r9d,0x78(%rsp)
22ea(5): mov %rax,0x20(%rsp)
22ef(8): mov 0xf8(%rsp),%rax
22f7(5): mov %rax,0x68(%rsp)
22fc(8): mov 0x100(%rsp),%rax
2304(5): mov %rax,0x60(%rsp)
2309(9): mov $0x28,%rax
2312(8): mov %rax,0xa8(%rsp)
231a(2): xor %eax,%eax
231c(5): call 0xfffff004(%rip)
2321(4): cmp $0xa,%r15d
2325(5): mov %rax,0x58(%rsp)
232a(6): jnbe 0x11b5(%rip)
2330(7): lea 0x2d09(%rip),%rcx
2337(3): mov %r15d,%edx
233a(4): movsxd 0x0(%rcx,%rdx,4),%rax
233e(3): add %rcx,%rax
2341(2): jmp %rax
2343(5): mov $0x1,0xe(%rsp)
2348(5): mov $0x0,0x7c(%rsp)
234d(3): xor %r12d,%r12d
2350(9): mov $0x0,0x50(%rsp)
2359(5): mov $0x1,0xf(%rsp)
235e(5): mov $0x0,0xd(%rsp)
2363(7): lea 0x2c6b(%rip),%rax
236a(9): mov $0x1,0x18(%rsp)
2373(3): xor %r15d,%r15d
2376(8): mov $0x2,0x8(%rsp)
237e(5): mov %rax,0x48(%rsp)
2383(3): xor %r11d,%r11d
2386(3): mov %rbp,%rax
2389(3): mov %r12d,%r8d
238c(3): mov %r11,%rbp
238f(3): mov %rax,%r11
2392(6): nop 0x0(%rax,%rax,1)
2398(3): cmp %rbp,%r11
239b(4): setnz %r12b
239f(4): cmp $0xffffffff,%r11
23a3(2): jnz 0xf(%rip)
23a5(5): mov 0x10(%rsp),%rax
23aa(4): cmp $0x0,0x0(%rax,%rbp,1)
23ae(4): setnz %r12b
23b2(3): test %r12b,%r12b
23b5(6): jz 0x65b(%rip)
23bb(5): cmp $0x2,0x8(%rsp)
23c0(5): mov 0x10(%rsp),%rdi
23c5(4): lea 0x0(%rdi,%rbp,1),%r9
23c9(3): setnz %al
23cc(4): and 0xd(%rsp),%al
23d0(3): mov %eax,%r10d
23d3(6): jz 0xad(%rip)
23d9(5): mov 0x18(%rsp),%rax
23de(3): test %rax,%rax
23e1(6): jz 0x42f(%rip)
23e7(4): cmp $0xffffffff,%r11
23eb(5): lea 0x0(%rbp,%rax,1),%rbx
23f0(2): jnz 0x30(%rip)
23f2(4): cmp $0x1,%rax
23f6(2): jbe 0x2a(%rip)
23f8(5): mov %r8b,0x38(%rsp)
23fd(5): mov %r10b,0x30(%rsp)
2402(5): mov %r9,0x28(%rsp)
2407(5): call 0xffffef29(%rip)
240c(6): movzx 0x38(%rsp),%r8d
2412(6): movzx 0x30(%rsp),%r10d
2418(3): mov %rax,%r11
241b(5): mov 0x28(%rsp),%r9
2420(3): cmp %r11,%rbx
2423(5): mov %r10b,0x28(%rsp)
2428(6): jnbe 0x5b8(%rip)
242e(5): mov 0x18(%rsp),%rdx
2433(5): mov 0x48(%rsp),%rsi
2438(3): mov %r9,%rdi
243b(5): mov %r11,0x40(%rsp)
2440(5): mov %r8b,0x38(%rsp)
2445(5): mov %r9,0x30(%rsp)
244a(5): call 0xffffef86(%rip)
244f(2): test %eax,%eax
2451(5): mov 0x30(%rsp),%r9
2456(6): movzx 0x38(%rsp),%r8d
245c(5): mov 0x40(%rsp),%r11
2461(6): jnz 0x57f(%rip)
2467(5): cmp $0x0,0xf(%rsp)
246c(6): movzx 0x28(%rsp),%r10d
2472(6): jnz 0xf83(%rip)
2478(8): nop 0x0(%rax,%rax,1)
2480(4): movzx (%r9),%ebx
2484(3): cmp $0x7e,%bl
2487(6): jnbe 0x321(%rip)
248d(7): lea 0x2bd8(%rip),%rcx
2494(3): movzx %bl,%edx
2497(4): movsxd 0x0(%rcx,%rdx,4),%rax
249b(3): add %rcx,%rax
249e(2): jmp %rax
24a0(3): xor %r10d,%r10d
24a3(4): cmp $0x1,%r11
24a7(3): setnz %al
24aa(4): cmp $0xffffffff,%r11
24ae(2): jnz 0xe(%rip)
24b0(5): mov 0x10(%rsp),%rax
24b5(4): cmp $0x0,0x1(%rax)
24b9(3): setnz %al
24bc(5): cmp $0x2,0x8(%rsp)
24c1(3): setz %dl
24c4(2): test %al,%al
24c6(6): jz 0x252(%rip)
24cc(3): xor %r12d,%r12d
24cf(2): xor %eax,%eax
24d1(7): nop 0x0(%rax)
24d8(5): cmp $0x1,0xd(%rsp)
24dd(6): jnz 0x115(%rip)
24e3(2): test %dl,%dl
24e5(6): jnz 0x10d(%rip)
24eb(5): mov 0x20(%rsp),%rsi
24f0(3): test %rsi,%rsi
24f3(2): jz 0x16(%rip)
24f5(2): mov %ebx,%edx
24f7(3): shr $0x5,%dl
24fa(3): movzx %dl,%edx
24fd(3): mov 0x0(%rsi,%rdx,4),%edx
2500(3): bt %ebx,%edx
2503(6): jb 0x150(%rip)
2509(3): test %r10b,%r10b
250c(6): jnz 0x147(%rip)
2512(3): xor $0x1,%eax
2515(4): add $0x1,%rbp
2519(3): and %r8d,%eax
251c(2): test %al,%al
251e(2): jz 0x22(%rip)
2520(3): cmp %r15,%r13
2523(2): jbe 0x7(%rip)
2525(5): mov $0x27,0x0(%r14,%r15,1)
252a(4): lea 0x1(%r15),%rax
252e(3): cmp %rax,%r13
2531(2): jbe 0x8(%rip)
2533(6): mov $0x27,0x1(%r14,%r15,1)
2539(4): add $0x2,%r15
253d(3): xor %r8d,%r8d
2540(3): cmp %r13,%r15
2543(2): jnb 0x6(%rip)
2545(4): mov %bl,0x0(%r14,%r15,1)
2549(5): movzx 0xe(%rsp),%edi
254e(4): add $0x1,%r15
2552(5): mov $0x0,%eax
2557(3): test %r12b,%r12b
255a(3): cmove %eax,%edi
255d(5): mov %dil,0xe(%rsp)
2562(5): jmp 0xfffffe36(%rip)
2567(9): nop 0x0(%rax,%rax,1)
2570(3): xor %r10d,%r10d
2573(4): mov 0x8(%rsp),%eax
2577(3): cmp $0x2,%eax
257a(6): jz 0x5be(%rip)
2580(3): cmp $0x5,%eax
2583(6): jz 0x575(%rip)
2589(3): cmp $0x2,%eax
258c(5): mov $0x3f,%ebx
2591(3): setz %dl
2594(3): xor %r12d,%r12d
2597(2): xor %eax,%eax
2599(5): jmp 0xffffff3f(%rip)
259e(2): nop 
25a0(3): xor %r10d,%r10d
25a3(5): cmp $0x2,0x8(%rsp)
25a8(6): jz 0x508(%rip)
25ae(5): mov %r12b,0x7c(%rsp)
25b3(2): xor %edx,%edx
25b5(2): xor %eax,%eax
25b7(5): mov $0x27,%ebx
25bc(5): jmp 0xffffff1c(%rip)
25c1(7): nop 0x0(%rax)
25c8(5): mov $0x9,%edx
25cd(5): mov $0x74,%ebx
25d2(5): cmp $0x2,0x8(%rsp)
25d7(3): setz %al
25da(4): and 0xf(%rsp),%al
25de(6): jnz 0x150(%rip)
25e4(5): cmp $0x0,0xd(%rsp)
25e9(2): jnz 0x67(%rip)
25eb(2): mov %edx,%ebx
25ed(3): xor %r12d,%r12d
25f0(2): xor %eax,%eax
25f2(5): cmp $0x0,0xf(%rsp)
25f7(6): jnz 0xfffffef4(%rip)
25fd(5): jmp 0xffffff0c(%rip)
2602(6): nop 0x0(%rax,%rax,1)
2608(5): mov $0x8,%edx
260d(5): mov $0x62,%ebx
2612(2): jmp 0xffffffd2(%rip)
2614(4): nop 0x0(%rax)
2618(5): cmp $0x2,0x8(%rsp)
261d(6): jz 0x3d3(%rip)
2623(5): cmp $0x0,0xd(%rsp)
2628(6): jz 0x218(%rip)
262e(5): cmp $0x0,0xf(%rsp)
2633(6): jz 0x20d(%rip)
2639(6): cmp $0x0,0x18(%rsp)
263f(6): jnz 0x3bc(%rip)
2645(5): mov $0x5c,%ebx
264a(6): nop 0x0(%rax,%rax,1)
2650(3): xor %r12d,%r12d
2653(5): cmp $0x2,0x8(%rsp)
2658(3): setz %dl
265b(5): cmp $0x0,0xf(%rsp)
2660(2): mov %edx,%eax
2662(6): jnz 0x856(%rip)
2668(3): mov %r8d,%eax
266b(3): xor $0x1,%eax
266e(2): and %dl,%al
2670(2): jz 0x31(%rip)
2672(3): cmp %r15,%r13
2675(2): jbe 0x7(%rip)
2677(5): mov $0x27,0x0(%r14,%r15,1)
267c(4): lea 0x1(%r15),%rdx
2680(3): cmp %rdx,%r13
2683(2): jbe 0x8(%rip)
2685(6): mov $0x24,0x1(%r14,%r15,1)
268b(4): lea 0x2(%r15),%rdx
268f(3): cmp %rdx,%r13
2692(2): jbe 0x8(%rip)
2694(6): mov $0x27,0x2(%r14,%r15,1)
269a(4): add $0x3,%r15
269e(3): mov %eax,%r8d
26a1(3): cmp %r15,%r13
26a4(2): jbe 0x7(%rip)
26a6(5): mov $0x5c,0x0(%r14,%r15,1)
26ab(4): add $0x1,%r15
26af(4): add $0x1,%rbp
26b3(5): jmp 0xfffffe8d(%rip)
26b8(8): nop 0x0(%rax,%rax,1)
26c0(5): cmp $0x0,0xd(%rsp)
26c5(6): jnz 0x1ce(%rip)
26cb(2): xor %edx,%edx
26cd(5): test $0x1,0x78(%rsp)
26d2(6): jz 0xffffff19(%rip)
26d8(4): add $0x1,%rbp
26dc(5): jmp 0xfffffcbc(%rip)
26e1(7): nop 0x0(%rax)
26e8(5): cmp $0x2,0x8(%rsp)
26ed(3): setz %dl
26f0(2): xor %eax,%eax
26f2(5): jmp 0xfffffde6(%rip)
26f7(9): nop 0x0(%rax,%rax,1)
2700(5): mov $0x7,%edx
2705(5): mov $0x61,%ebx
270a(5): jmp 0xfffffeda(%rip)
270f(1): nop 
2710(5): cmp $0x2,0x8(%rsp)
2715(3): setz %dl
2718(3): test %rbp,%rbp
271b(6): jnz 0xfffffdb1(%rip)
2721(5): movzx 0xf(%rsp),%eax
2726(2): and %dl,%al
2728(6): jz 0xfffffdb0(%rip)
272e(3): mov %r11,%rbp
2731(8): mov $0x2,0x8(%rsp)
2739(5): jmp 0x700(%rip)
273e(2): nop 
2740(5): cmp $0x2,0x8(%rsp)
2745(3): setz %dl
2748(3): xor %r12d,%r12d
274b(2): jmp 0xffffffd6(%rip)
274d(3): nop (%rax)
2750(5): cmp $0x2,0x8(%rsp)
2755(5): mov $0x20,%ebx
275a(3): setz %dl
275d(2): jmp 0xffffffc4(%rip)
275f(1): nop 
2760(5): mov $0xd,%edx
2765(5): mov $0x72,%ebx
276a(5): jmp 0xfffffe68(%rip)
276f(1): nop 
2770(5): mov $0xc,%edx
2775(5): mov $0x66,%ebx
277a(5): jmp 0xfffffe6a(%rip)
277f(1): nop 
2780(5): mov $0xb,%edx
2785(5): mov $0x76,%ebx
278a(5): jmp 0xfffffe5a(%rip)
278f(1): nop 
2790(5): mov $0xa,%edx
2795(5): mov $0x6e,%ebx
279a(5): jmp 0xfffffe38(%rip)
279f(1): nop 
27a0(3): xor %r10d,%r10d
27a3(5): nop 0x0(%rax,%rax,1)
27a8(6): cmp $0x1,0x58(%rsp)
27ae(6): jnz 0x3aa(%rip)
27b4(5): mov %r11,0x38(%rsp)
27b9(5): mov %r8b,0x30(%rsp)
27be(5): mov %r10b,0x28(%rsp)
27c3(5): call 0xffffed4d(%rip)
27c8(3): mov (%rax),%rcx
27cb(3): movzx %bl,%edx
27ce(6): movzx 0x28(%rsp),%r10d
27d4(6): movzx 0x30(%rsp),%r8d
27da(5): mov 0x38(%rsp),%r11
27df(5): mov $0x1,%edi
27e4(4): movzx 0x0(%rcx,%rdx,2),%eax
27e8(4): and $0x4000,%ax
27ec(4): setnz %r12b
27f0(3): setz %al
27f3(4): and 0xd(%rsp),%al
27f7(2): test %al,%al
27f9(6): jnz 0x998(%rip)
27ff(5): cmp $0x2,0x8(%rsp)
2804(3): setz %dl
2807(5): jmp 0xfffffcd1(%rip)
280c(4): nop 0x0(%rax)
2810(4): movzx (%r9),%ebx
2814(3): cmp $0x7e,%bl
2817(2): jnbe 0xffffff89(%rip)
2819(7): lea 0x2a48(%rip),%rcx
2820(3): movzx %bl,%edx
2823(4): movsxd 0x0(%rcx,%rdx,4),%rax
2827(3): add %rcx,%rax
282a(2): jmp %rax
282c(4): nop 0x0(%rax)
2830(3): xor %r10d,%r10d
2833(5): cmp $0x0,0xd(%rsp)
2838(6): jnz 0xfffffdf6(%rip)
283e(2): nop 
2840(5): mov $0x5c,%edx
2845(5): mov $0x5c,%ebx
284a(5): jmp 0xfffffd9a(%rip)
284f(1): nop 
2850(5): mov $0xc,%edx
2855(3): xor %r10d,%r10d
2858(5): mov $0x66,%ebx
285d(5): jmp 0xfffffd87(%rip)
2862(6): nop 0x0(%rax,%rax,1)
2868(5): mov $0xa,%edx
286d(3): xor %r10d,%r10d
2870(5): mov $0x6e,%ebx
2875(5): jmp 0xfffffd5d(%rip)
287a(6): nop 0x0(%rax,%rax,1)
2880(5): mov $0x61,%ebx
2885(5): jmp 0xfffffdcb(%rip)
288a(6): nop 0x0(%rax,%rax,1)
2890(3): xor %r10d,%r10d
2893(5): cmp $0x2,0x8(%rsp)
2898(3): setz %dl
289b(5): cmp $0x0,0xf(%rsp)
28a0(6): jnz 0xb9a(%rip)
28a6(3): mov %r8d,%eax
28a9(3): mov %r15,%rcx
28ac(3): xor $0x1,%eax
28af(2): and %dl,%al
28b1(2): jz 0x2f(%rip)
28b3(3): cmp %r15,%r13
28b6(2): jbe 0x7(%rip)
28b8(5): mov $0x27,0x0(%r14,%r15,1)
28bd(4): lea 0x1(%r15),%rcx
28c1(3): cmp %rcx,%r13
28c4(2): jbe 0x8(%rip)
28c6(6): mov $0x24,0x1(%r14,%r15,1)
28cc(4): lea 0x2(%r15),%rcx
28d0(3): cmp %rcx,%r13
28d3(6): jnbe 0x636(%rip)
28d9(4): lea 0x3(%r15),%rcx
28dd(3): mov %eax,%r8d
28e0(3): cmp %rcx,%r13
28e3(2): jbe 0x7(%rip)
28e5(5): mov $0x5c,0x0(%r14,%rcx,1)
28ea(5): cmp $0x2,0x8(%rsp)
28ef(4): lea 0x1(%rcx),%r15
28f3(6): jz 0x606(%rip)
28f9(4): lea 0x1(%rbp),%rax
28fd(3): cmp %r11,%rax
2900(2): jnb 0x1b(%rip)
2902(5): mov 0x10(%rsp),%rax
2907(5): movzx 0x1(%rax,%rbp,1),%eax
290c(4): mov %al,0x28(%rsp)
2910(3): sub $0x30,%eax
2913(2): cmp $0x9,%al
2915(6): jbe 0x834(%rip)
291b(3): mov %r12d,%eax
291e(5): mov $0x30,%ebx
2923(3): xor %r12d,%r12d
2926(5): jmp 0xfffffbb2(%rip)
292b(5): nop 0x0(%rax,%rax,1)
2930(5): cmp $0x2,0x8(%rsp)
2935(3): mov %r10d,%r12d
2938(3): setz %dl
293b(3): xor %r10d,%r10d
293e(2): xor %eax,%eax
2940(5): jmp 0xfffffb98(%rip)
2945(3): nop (%rax)
2948(5): cmp $0x2,0x8(%rsp)
294d(3): setz %dl
2950(3): xor %r10d,%r10d
2953(5): jmp 0xfffffdc5(%rip)
2958(8): nop 0x0(%rax,%rax,1)
2960(5): cmp $0x2,0x8(%rsp)
2965(3): setz %dl
2968(3): xor %r10d,%r10d
296b(3): xor %r12d,%r12d
296e(5): jmp 0xfffffdb3(%rip)
2973(5): nop 0x0(%rax,%rax,1)
2978(5): cmp $0x2,0x8(%rsp)
297d(3): mov %r10d,%r12d
2980(5): mov $0x20,%ebx
2985(3): setz %dl
2988(3): xor %r10d,%r10d
298b(5): jmp 0xfffffd96(%rip)
2990(5): mov $0xd,%edx
2995(3): xor %r10d,%r10d
2998(5): mov $0x72,%ebx
299d(5): jmp 0xfffffc35(%rip)
29a2(6): nop 0x0(%rax,%rax,1)
29a8(5): mov $0x76,%ebx
29ad(5): jmp 0xfffffca3(%rip)
29b2(6): nop 0x0(%rax,%rax,1)
29b8(5): mov $0x9,%edx
29bd(3): xor %r10d,%r10d
29c0(5): mov $0x74,%ebx
29c5(5): jmp 0xfffffc0d(%rip)
29ca(6): nop 0x0(%rax,%rax,1)
29d0(5): mov $0x62,%ebx
29d5(5): jmp 0xfffffc7b(%rip)
29da(6): nop 0x0(%rax,%rax,1)
29e0(3): xor %r10d,%r10d
29e3(5): jmp 0xfffffa9d(%rip)
29e8(8): nop 0x0(%rax,%rax,1)
29f0(5): cmp $0x0,0xf(%rsp)
29f5(6): jnz 0x96b(%rip)
29fb(4): add $0x1,%rbp
29ff(3): mov %r8d,%eax
2a02(3): xor %r12d,%r12d
2a05(5): mov $0x5c,%ebx
2a0a(5): jmp 0xfffffb12(%rip)
2a0f(1): nop 
2a10(5): cmp $0x2,0x8(%rsp)
2a15(5): movzx 0xf(%rsp),%ebx
2a1a(3): mov %r8d,%r12d
2a1d(3): mov %r11,%rbp
2a20(3): setz %dl
2a23(2): mov %ebx,%eax
2a25(3): test %r15,%r15
2a28(3): setz %cl
2a2b(2): and %edx,%eax
2a2d(2): and %cl,%al
2a2f(6): jnz 0xa67(%rip)
2a35(2): mov %ebx,%eax
2a37(3): xor $0x1,%eax
2a3a(2): and %al,%dl
2a3c(6): jz 0x970(%rip)
2a42(5): cmp $0x0,0x7c(%rsp)
2a47(6): jz 0x963(%rip)
2a4d(5): cmp $0x0,0xe(%rsp)
2a52(6): jnz 0x9fb(%rip)
2a58(3): test %r13,%r13
2a5b(3): setz %al
2a5e(6): cmp $0x0,0x50(%rsp)
2a64(3): setnz %dl
2a67(2): and %dl,%al
2a69(6): jz 0xa23(%rip)
2a6f(5): mov 0x50(%rsp),%r13
2a74(7): lea 0x255a(%rip),%rbx
2a7b(4): mov $0x27,(%r14)
2a7f(8): mov $0x2,0x8(%rsp)
2a87(6): mov $0x1,%r15d
2a8d(9): mov $0x1,0x18(%rsp)
2a96(5): mov $0x0,0xf(%rsp)
2a9b(5): mov %rbx,0x48(%rsp)
2aa0(4): mov %al,0x7c(%rsp)
2aa4(5): jmp 0xfffff8df(%rip)
2aa9(7): nop 0x0(%rax)
2ab0(5): cmp $0x0,0xf(%rsp)
2ab5(6): jnz 0x8ab(%rip)
2abb(3): test %r13,%r13
2abe(6): jz 0x402(%rip)
2ac4(2): xor %edx,%edx
2ac6(6): cmp $0x0,0x50(%rsp)
2acc(6): jnz 0x3f4(%rip)
2ad2(5): mov %r13,0x50(%rsp)
2ad7(4): add $0x3,%r15
2adb(2): xor %eax,%eax
2add(5): mov %r12b,0x7c(%rsp)
2ae2(3): xor %r8d,%r8d
2ae5(3): mov %rdx,%r13
2ae8(5): mov $0x27,%ebx
2aed(5): jmp 0xfffffa1c(%rip)
2af2(6): nop 0x0(%rax,%rax,1)
2af8(5): test $0x4,0x78(%rsp)
2afd(2): jz 0x23(%rip)
2aff(4): lea 0x2(%rbp),%rcx
2b03(3): cmp %r11,%rcx
2b06(2): jnb 0x1a(%rip)
2b08(5): mov 0x10(%rsp),%rax
2b0d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2b12(6): jz 0x790(%rip)
2b18(8): nop 0x0(%rax,%rax,1)
2b20(2): xor %edx,%edx
2b22(3): xor %r12d,%r12d
2b25(2): xor %eax,%eax
2b27(5): mov $0x3f,%ebx
2b2c(5): jmp 0xfffff9ac(%rip)
2b31(7): nop 0x0(%rax)
2b38(5): cmp $0x0,0xf(%rsp)
2b3d(6): jnz 0x823(%rip)
2b43(3): xor %r12d,%r12d
2b46(2): xor %eax,%eax
2b48(5): mov $0x3f,%ebx
2b4d(5): jmp 0xfffff9bc(%rip)
2b52(6): nop 0x0(%rax,%rax,1)
2b58(8): lea 0xa0(%rsp),%rax
2b60(4): cmp $0xffffffff,%r11
2b64(c): mov $0x0,0xa0(%rsp)
2b70(5): mov %rax,0x28(%rsp)
2b75(2): jnz 0x2f(%rip)
2b77(5): mov 0x10(%rsp),%rdi
2b7c(5): mov %r8b,0x40(%rsp)
2b81(5): mov %r10b,0x38(%rsp)
2b86(5): mov %r9,0x30(%rsp)
2b8b(5): call 0xffffe7a5(%rip)
2b90(6): movzx 0x40(%rsp),%r8d
2b96(6): movzx 0x38(%rsp),%r10d
2b9c(3): mov %rax,%r11
2b9f(5): mov 0x30(%rsp),%r9
2ba4(8): lea 0x9c(%rsp),%rax
2bac(2): xor %ecx,%ecx
2bae(4): mov %bl,0x7e(%rsp)
2bb2(5): mov %r8b,0x7d(%rsp)
2bb7(3): mov %rcx,%rbx
2bba(8): mov %r9,0x88(%rsp)
2bc2(5): mov %rax,0x38(%rsp)
2bc7(5): mov %r10b,0x7f(%rsp)
2bcc(8): mov %r15,0x80(%rsp)
2bd4(5): mov %r14,0x40(%rsp)
2bd9(5): mov %r13,0x70(%rsp)
2bde(5): mov %r11,0x30(%rsp)
2be3(5): mov 0x10(%rsp),%rax
2be8(5): lea 0x0(%rbp,%rbx,1),%r14
2bed(5): mov 0x30(%rsp),%rdx
2bf2(5): mov 0x28(%rsp),%rcx
2bf7(5): mov 0x38(%rsp),%rdi
2bfc(4): lea 0x0(%rax,%r14,1),%r13
2c00(3): sub %r14,%rdx
2c03(3): mov %r13,%rsi
2c06(5): call 0x1b1a(%rip)
2c0b(3): test %rax,%rax
2c0e(3): mov %rax,%r15
2c11(2): jz 0x50(%rip)
2c13(4): cmp $0xffffffff,%rax
2c17(6): jz 0x61e(%rip)
2c1d(4): cmp $0xfffffffe,%rax
2c21(6): jz 0x5a0(%rip)
2c27(5): cmp $0x2,0x8(%rsp)
2c2c(3): setz %al
2c2f(4): and 0xf(%rsp),%al
2c33(6): jnz 0x19d(%rip)
2c39(7): mov 0x9c(%rsp),%edi
2c40(5): call 0xffffe8c0(%rip)
2c45(5): mov 0x28(%rsp),%rdi
2c4a(2): test %eax,%eax
2c4c(5): mov $0x0,%eax
2c51(4): cmove %eax,%r12d
2c55(3): add %r15,%rbx
2c58(5): call 0xffffe898(%rip)
2c5d(2): test %eax,%eax
2c5f(2): jz 0xffffff84(%rip)
2c61(3): mov %r12d,%edx
2c64(3): mov %rbx,%rdi
2c67(6): movzx 0x7d(%rsp),%r8d
2c6d(3): xor $0x1,%edx
2c70(5): movzx 0x7e(%rsp),%ebx
2c75(6): movzx 0x7f(%rsp),%r10d
2c7b(4): and 0xd(%rsp),%dl
2c7f(8): mov 0x80(%rsp),%r15
2c87(5): mov 0x40(%rsp),%r14
2c8c(5): mov 0x70(%rsp),%r13
2c91(5): mov 0x30(%rsp),%r11
2c96(4): cmp $0x1,%rdi
2c9a(6): jbe 0x601(%rip)
2ca0(3): mov %rdi,%rcx
2ca3(2): xor %esi,%esi
2ca5(6): movzx 0xf(%rsp),%r9d
2cab(3): add %rbp,%rcx
2cae(5): mov 0x10(%rsp),%rdi
2cb3(5): jmp 0xbb(%rip)
2cb8(8): nop 0x0(%rax,%rax,1)
2cc0(5): cmp $0x2,0x8(%rsp)
2cc5(3): setz %al
2cc8(3): test %r9b,%r9b
2ccb(6): jnz 0x4b5(%rip)
2cd1(3): mov %r8d,%esi
2cd4(3): xor $0x1,%esi
2cd7(3): and %sil,%al
2cda(2): jz 0x31(%rip)
2cdc(3): cmp %r15,%r13
2cdf(2): jbe 0x7(%rip)
2ce1(5): mov $0x27,0x0(%r14,%r15,1)
2ce6(4): lea 0x1(%r15),%rsi
2cea(3): cmp %rsi,%r13
2ced(2): jbe 0x8(%rip)
2cef(6): mov $0x24,0x1(%r14,%r15,1)
2cf5(4): lea 0x2(%r15),%rsi
2cf9(3): cmp %rsi,%r13
2cfc(2): jbe 0x8(%rip)
2cfe(6): mov $0x27,0x2(%r14,%r15,1)
2d04(4): add $0x3,%r15
2d08(3): mov %eax,%r8d
2d0b(3): cmp %r15,%r13
2d0e(2): jbe 0x7(%rip)
2d10(5): mov $0x5c,0x0(%r14,%r15,1)
2d15(4): lea 0x1(%r15),%rax
2d19(3): cmp %rax,%r13
2d1c(2): jbe 0xf(%rip)
2d1e(2): mov %ebx,%eax
2d20(3): shr $0x6,%al
2d23(3): add $0x30,%eax
2d26(5): mov %al,0x1(%r14,%r15,1)
2d2b(4): lea 0x2(%r15),%rax
2d2f(3): cmp %rax,%r13
2d32(2): jbe 0x12(%rip)
2d34(2): mov %ebx,%eax
2d36(3): shr $0x3,%al
2d39(3): and $0x7,%eax
2d3c(3): add $0x30,%eax
2d3f(5): mov %al,0x2(%r14,%r15,1)
2d44(3): and $0x7,%ebx
2d47(4): add $0x1,%rbp
2d4b(4): add $0x3,%r15
2d4f(3): add $0x30,%ebx
2d52(3): cmp %rcx,%rbp
2d55(6): jnb 0xfffff7eb(%rip)
2d5b(2): mov %edx,%esi
2d5d(3): cmp %r15,%r13
2d60(2): jbe 0x6(%rip)
2d62(4): mov %bl,0x0(%r14,%r15,1)
2d66(4): movzx 0x0(%rdi,%rbp,1),%ebx
2d6a(4): add $0x1,%r15
2d6e(2): test %dl,%dl
2d70(6): jnz 0xffffff50(%rip)
2d76(2): mov %esi,%eax
2d78(3): xor $0x1,%eax
2d7b(3): and %r8d,%eax
2d7e(3): test %r10b,%r10b
2d81(2): jz 0x10(%rip)
2d83(3): cmp %r15,%r13
2d86(2): jbe 0x7(%rip)
2d88(5): mov $0x5c,0x0(%r14,%r15,1)
2d8d(4): add $0x1,%r15
2d91(4): add $0x1,%rbp
2d95(3): cmp %rcx,%rbp
2d98(6): jnb 0xfffff784(%rip)
2d9e(2): test %al,%al
2da0(6): jz 0x3fe(%rip)
2da6(3): cmp %r15,%r13
2da9(2): jbe 0x7(%rip)
2dab(5): mov $0x27,0x0(%r14,%r15,1)
2db0(4): lea 0x1(%r15),%rax
2db4(3): cmp %rax,%r13
2db7(2): jbe 0x8(%rip)
2db9(6): mov $0x27,0x1(%r14,%r15,1)
2dbf(4): add $0x2,%r15
2dc3(3): xor %r10d,%r10d
2dc6(3): xor %r8d,%r8d
2dc9(2): jmp 0xffffff94(%rip)
2dcb(5): nop 0x0(%rax,%rax,1)
2dd0(4): cmp $0x1,%r15
2dd4(6): jz 0xfffffe65(%rip)
2dda(5): mov 0x10(%rsp),%rdi
2ddf(4): lea 0x0(%rdi,%r15,1),%rcx
2de3(5): lea 0x1(%rdi,%r14,1),%rdx
2de8(4): lea 0x0(%rcx,%r14,1),%r8
2dec(2): jmp 0x11(%rip)
2dee(2): nop 
2df0(4): add $0x1,%rdx
2df4(3): cmp %rdx,%r8
2df7(6): jz 0xfffffe42(%rip)
2dfd(3): movzx (%rdx),%ecx
2e00(3): sub $0x5b,%ecx
2e03(3): cmp $0x21,%cl
2e06(2): jnbe 0xffffffea(%rip)
2e08(5): mov $0x1,%esi
2e0d(3): shl/sal %cl,%rsi
2e10(3): mov %rsi,%rcx
2e13(a): mov $0x8589934635,%rsi
2e1d(3): test %rsi,%rcx
2e20(2): jz 0xffffffd0(%rip)
2e22(5): mov 0x40(%rsp),%r14
2e27(5): mov 0x70(%rsp),%r13
2e2c(5): mov 0x30(%rsp),%rbp
2e31(8): mov $0x2,0x8(%rsp)
2e39(5): cmp $0x0,0xd(%rsp)
2e3e(2): jz 0x12(%rip)
2e40(2): test %al,%al
2e42(5): mov $0x4,%eax
2e47(5): cmove 0x8(%rsp),%eax
2e4c(4): mov %eax,0x8(%rsp)
2e50(4): sub $0x8,%rsp
2e54(3): mov %rbp,%rcx
2e57(3): mov %r13,%rsi
2e5a(4): push 0x68(%rsp)
2e5e(4): push 0x78(%rsp)
2e62(3): mov %r14,%rdi
2e65(2): push $0x0
2e67(8): mov 0x98(%rsp),%r9d
2e6f(5): mov 0x28(%rsp),%r8d
2e74(5): mov 0x30(%rsp),%rdx
2e79(4): and $0xfd,%r9d
2e7d(5): call 0xfffff433(%rip)
2e82(4): add $0x20,%rsp
2e86(3): mov %rax,%r15
2e89(8): mov 0xa8(%rsp),%rbx
2e91(9): xor $0x28,%rbx
2e9a(3): mov %r15,%rax
2e9d(6): jnz 0x606(%rip)
2ea3(7): add $0xb8,%rsp
2eaa(1): pop %rbx
2eab(1): pop %rbp
2eac(2): pop %r12
2eae(2): pop %r13
2eb0(2): pop %r14
2eb2(2): pop %r15
2eb4(1): ret near (%rsp)
2eb5(3): nop (%rax)
2eb8(3): mov %r11,%rbp
2ebb(5): jmp 0xffffff7e(%rip)
2ec0(3): cmp %r15,%r13
2ec3(2): jbe 0x7(%rip)
2ec5(5): mov $0x27,0x0(%r14,%r15,1)
2eca(4): lea 0x1(%r15),%rax
2ece(3): cmp %rax,%r13
2ed1(2): jbe 0x8(%rip)
2ed3(6): mov $0x5c,0x1(%r14,%r15,1)
2ed9(4): lea 0x2(%r15),%rax
2edd(3): cmp %rax,%r13
2ee0(6): jbe 0x5f2(%rip)
2ee6(3): mov %r13,%rdx
2ee9(6): mov $0x27,0x2(%r14,%r15,1)
2eef(5): mov 0x50(%rsp),%r13
2ef4(5): jmp 0xfffffbde(%rip)
2ef9(3): mov %r12d,%eax
2efc(5): mov $0x30,%ebx
2f01(3): xor %r12d,%r12d
2f04(5): jmp 0xfffff605(%rip)
2f09(6): mov $0x27,0x2(%r14,%r15,1)
2f0f(5): jmp 0xfffff9ca(%rip)
2f14(2): test %ebx,%ebx
2f16(6): jnz 0xfffff42d(%rip)
2f1c(5): mov $0x1,0xd(%rsp)
2f21(3): test %r13,%r13
2f24(6): jnz 0x596(%rip)
2f2a(7): lea 0x20a4(%rip),%rax
2f31(9): mov $0x0,0x50(%rsp)
2f3a(5): mov $0x1,0xe(%rsp)
2f3f(5): mov $0x0,0x7c(%rsp)
2f44(3): xor %r12d,%r12d
2f47(5): mov $0x0,0xf(%rsp)
2f4c(9): mov $0x1,0x18(%rsp)
2f55(5): mov %rax,0x48(%rsp)
2f5a(6): mov $0x1,%r15d
2f60(8): mov $0x2,0x8(%rsp)
2f68(5): jmp 0xfffff41b(%rip)
2f6d(3): nop (%rax)
2f70(2): test %ebx,%ebx
2f72(6): jnz 0x3fb(%rip)
2f78(3): test %r13,%r13
2f7b(6): jz 0x22b(%rip)
2f81(4): mov $0x22,(%r14)
2f85(5): mov $0x1,0xe(%rsp)
2f8a(3): xor %r12d,%r12d
2f8d(5): mov $0x0,0x7c(%rsp)
2f92(9): mov $0x0,0x50(%rsp)
2f9b(7): lea 0x2031(%rip),%rax
2fa2(5): mov $0x0,0xf(%rsp)
2fa7(5): mov $0x1,0xd(%rsp)
2fac(9): mov $0x1,0x18(%rsp)
2fb5(6): mov $0x1,%r15d
2fbb(5): mov %rax,0x48(%rsp)
2fc0(5): jmp 0xfffff3c3(%rip)
2fc5(7): lea 0x2007(%rip),%rax
2fcc(5): mov $0x1,0xe(%rsp)
2fd1(5): mov $0x0,0x7c(%rsp)
2fd6(3): xor %r12d,%r12d
2fd9(9): mov $0x0,0x50(%rsp)
2fe2(5): mov $0x1,0xf(%rsp)
2fe7(5): mov $0x1,0xd(%rsp)
2fec(9): mov $0x1,0x18(%rsp)
2ff5(3): xor %r15d,%r15d
2ff8(5): mov %rax,0x48(%rsp)
2ffd(8): mov $0x5,0x8(%rsp)
3005(5): jmp 0xfffff37e(%rip)
300a(5): mov $0x1,0xe(%rsp)
300f(5): mov $0x0,0x7c(%rsp)
3014(3): xor %r12d,%r12d
3017(9): mov $0x0,0x50(%rsp)
3020(5): mov $0x0,0xf(%rsp)
3025(3): xor %r15d,%r15d
3028(5): mov $0x1,0xd(%rsp)
302d(9): mov $0x0,0x18(%rsp)
3036(9): mov $0x0,0x48(%rsp)
303f(5): jmp 0xfffff344(%rip)
3044(5): cmp $0xa,0x8(%rsp)
3049(2): jz 0x58(%rip)
304b(7): lea 0x1f85(%rip),%rsi
3052(2): xor %edi,%edi
3054(5): mov $0x5,%edx
3059(5): call 0xffffe2b7(%rip)
305e(3): mov %rax,%rcx
3061(5): mov %rax,0x68(%rsp)
3066(7): lea 0x1f6a(%rip),%rax
306d(3): cmp %rax,%rcx
3070(6): jz 0x39e(%rip)
3076(7): lea 0x1f58(%rip),%rsi
307d(2): xor %edi,%edi
307f(5): mov $0x5,%edx
3084(5): call 0xffffe28c(%rip)
3089(3): mov %rax,%rcx
308c(5): mov %rax,0x60(%rsp)
3091(7): lea 0x1f3d(%rip),%rax
3098(3): cmp %rax,%rcx
309b(6): jz 0x389(%rip)
30a1(3): xor %r15d,%r15d
30a4(2): test %ebx,%ebx
30a6(6): jz 0x1c7(%rip)
30ac(2): test %ebx,%ebx
30ae(5): mov 0x60(%rsp),%rbx
30b3(5): setnz 0xf(%rsp)
30b8(3): xor %r12d,%r12d
30bb(3): mov %rbx,%rdi
30be(5): call 0xffffe272(%rip)
30c3(5): mov %rbx,0x48(%rsp)
30c8(5): mov %rax,0x18(%rsp)
30cd(5): mov $0x1,0xe(%rsp)
30d2(5): mov $0x0,0x7c(%rsp)
30d7(9): mov $0x0,0x50(%rsp)
30e0(5): mov $0x1,0xd(%rsp)
30e5(5): jmp 0xfffff29e(%rip)
30ea(5): mov $0x1,0xe(%rsp)
30ef(5): mov $0x0,0x7c(%rsp)
30f4(3): xor %r12d,%r12d
30f7(9): mov $0x0,0x50(%rsp)
3100(5): mov $0x0,0xf(%rsp)
3105(3): xor %r15d,%r15d
3108(5): mov $0x0,0xd(%rsp)
310d(9): mov $0x0,0x18(%rsp)
3116(9): mov $0x0,0x48(%rsp)
311f(5): jmp 0xfffff264(%rip)
3124(5): mov $0x1,0xe(%rsp)
3129(5): mov $0x0,0x7c(%rsp)
312e(3): xor %r12d,%r12d
3131(9): mov $0x0,0x50(%rsp)
313a(5): mov $0x1,0xf(%rsp)
313f(5): mov $0x1,0xd(%rsp)
3144(5): jmp 0xfffff21f(%rip)
3149(3): cmp %r15,%r13
314c(2): jbe 0x7(%rip)
314e(5): mov $0x30,0x0(%r14,%r15,1)
3153(4): lea 0x2(%rcx),%rax
3157(3): cmp %rax,%r13
315a(2): jbe 0x8(%rip)
315c(6): mov $0x30,0x2(%r14,%rcx,1)
3162(3): mov %r12d,%eax
3165(4): lea 0x3(%rcx),%r15
3169(3): xor %r12d,%r12d
316c(5): mov $0x30,%ebx
3171(5): jmp 0xfffff367(%rip)
3176(a): nop 0x0(%rax,%rax,1)
3180(5): movzx 0xf(%rsp),%ebx
3185(3): mov %r11,%rbp
3188(4): mov %bl,0xd(%rsp)
318c(5): jmp 0xfffffcad(%rip)
3191(5): movzx 0xd(%rsp),%edx
3196(3): xor %r12d,%r12d
3199(5): jmp 0xfffffb07(%rip)
319e(3): xor %r10d,%r10d
31a1(5): jmp 0xfffffbbc(%rip)
31a6(9): mov $0x0,0x50(%rsp)
31af(5): mov $0x1,0xe(%rsp)
31b4(3): xor %r12d,%r12d
31b7(5): mov $0x0,0x7c(%rsp)
31bc(5): jmp 0xfffffddf(%rip)
31c1(5): mov 0x30(%rsp),%r11
31c6(3): mov %r14,%rsi
31c9(3): mov %r13,%rcx
31cc(3): mov %rbx,%rax
31cf(3): mov %rbx,%rdi
31d2(6): movzx 0x7d(%rsp),%r8d
31d8(5): movzx 0x7e(%rsp),%ebx
31dd(8): mov 0x88(%rsp),%r9
31e5(3): cmp %r11,%rsi
31e8(6): movzx 0x7f(%rsp),%r10d
31ee(8): mov 0x80(%rsp),%r15
31f6(5): mov 0x40(%rsp),%r14
31fb(5): mov 0x70(%rsp),%r13
3200(2): jnb 0x28(%rip)
3202(3): cmp $0x0,(%rcx)
3205(2): jnz 0x12(%rip)
3207(2): jmp 0x21(%rip)
3209(7): nop 0x0(%rax)
3210(5): cmp $0x0,0x0(%r9,%rax,1)
3215(2): jz 0x10(%rip)
3217(4): add $0x1,%rax
321b(5): lea 0x0(%rbp,%rax,1),%rdx
3220(3): cmp %rdx,%r11
3223(2): jnbe 0xffffffed(%rip)
3225(3): mov %rax,%rdi
3228(5): movzx 0xd(%rsp),%edx
322d(3): xor %r12d,%r12d
3230(5): jmp 0xfffffa66(%rip)
3235(3): mov %rbx,%rdi
3238(6): movzx 0x7d(%rsp),%r8d
323e(5): movzx 0x7e(%rsp),%ebx
3243(6): movzx 0x7f(%rsp),%r10d
3249(8): mov 0x80(%rsp),%r15
3251(3): xor %r12d,%r12d
3254(5): mov 0x40(%rsp),%r14
3259(5): mov 0x70(%rsp),%r13
325e(5): mov 0x30(%rsp),%r11
3263(5): movzx 0xd(%rsp),%edx
3268(5): jmp 0xfffffa2e(%rip)
326d(5): mov 0x68(%rsp),%rdx
3272(3): movzx (%rdx),%eax
3275(2): test %al,%al
3277(6): jz 0xfffffe35(%rip)
327d(3): nop (%rax)
3280(3): cmp %r15,%r13
3283(2): jbe 0x6(%rip)
3285(4): mov %al,0x0(%r14,%r15,1)
3289(4): add $0x1,%r15
328d(5): movzx 0x0(%rdx,%r15,1),%eax
3292(2): test %al,%al
3294(2): jnz 0xffffffec(%rip)
3296(5): jmp 0xfffffe16(%rip)
329b(2): mov %edx,%eax
329d(5): jmp 0xfffff55a(%rip)
32a2(4): movzx 0x0(%rax,%rcx,1),%ebx
32a6(3): cmp $0x3e,%bl
32a9(6): jnbe 0xfffff877(%rip)
32af(a): mov $0x8070630310989004800,%rax
32b9(4): bt %rbx,%rax
32bd(6): jnb 0xfffff863(%rip)
32c3(5): cmp $0x0,0xf(%rsp)
32c8(6): jnz 0x1ea(%rip)
32ce(3): cmp %r15,%r13
32d1(2): jbe 0x7(%rip)
32d3(5): mov $0x3f,0x0(%r14,%r15,1)
32d8(4): lea 0x1(%r15),%rax
32dc(3): cmp %rax,%r13
32df(2): jbe 0x8(%rip)
32e1(6): mov $0x22,0x1(%r14,%r15,1)
32e7(4): lea 0x2(%r15),%rax
32eb(3): cmp %rax,%r13
32ee(2): jbe 0x8(%rip)
32f0(6): mov $0x22,0x2(%r14,%r15,1)
32f6(4): lea 0x3(%r15),%rax
32fa(3): cmp %rax,%r13
32fd(2): jbe 0x8(%rip)
32ff(6): mov $0x3f,0x3(%r14,%r15,1)
3305(4): add $0x4,%r15
3309(2): xor %edx,%edx
330b(3): xor %r12d,%r12d
330e(2): xor %eax,%eax
3310(3): mov %rcx,%rbp
3313(5): jmp 0xfffff1c5(%rip)
3318(2): test %ebx,%ebx
331a(6): jz 0x18e(%rip)
3320(7): lea 0x1cae(%rip),%rax
3327(5): mov $0x1,0xe(%rsp)
332c(5): mov $0x0,0x7c(%rsp)
3331(3): xor %r12d,%r12d
3334(9): mov $0x0,0x50(%rsp)
333d(5): mov $0x1,0xf(%rsp)
3342(5): mov $0x0,0xd(%rsp)
3347(9): mov $0x1,0x18(%rsp)
3350(3): xor %r15d,%r15d
3353(5): mov %rax,0x48(%rsp)
3358(5): jmp 0xfffff02b(%rip)
335d(3): nop (%rax)
3360(3): mov %r11,%rbp
3363(5): movzx 0xf(%rsp),%eax
3368(5): jmp 0xfffffad1(%rip)
336d(7): lea 0x1c5f(%rip),%rax
3374(5): mov $0x1,0xe(%rsp)
3379(5): mov $0x0,0x7c(%rsp)
337e(3): xor %r12d,%r12d
3381(9): mov $0x0,0x50(%rsp)
338a(5): mov $0x1,0xf(%rsp)
338f(5): mov $0x1,0xd(%rsp)
3394(9): mov $0x1,0x18(%rsp)
339d(3): xor %r15d,%r15d
33a0(5): mov %rax,0x48(%rsp)
33a5(5): jmp 0xffffefde(%rip)
33aa(2): mov %edx,%eax
33ac(5): mov 0x48(%rsp),%rbx
33b1(3): test %rbx,%rbx
33b4(2): jz 0x2e(%rip)
33b6(2): test %al,%al
33b8(2): jz 0x2a(%rip)
33ba(3): movzx (%rbx),%ecx
33bd(3): mov %rbx,%rax
33c0(2): test %cl,%cl
33c2(2): jz 0x20(%rip)
33c4(3): mov %r15,%rdx
33c7(3): sub %r15,%rax
33ca(3): cmp %rdx,%r13
33cd(2): jbe 0x6(%rip)
33cf(4): mov %cl,0x0(%r14,%rdx,1)
33d3(4): add $0x1,%rdx
33d7(4): movzx 0x0(%rax,%rdx,1),%ecx
33db(2): test %cl,%cl
33dd(2): jnz 0xffffffed(%rip)
33df(3): mov %rdx,%r15
33e2(3): cmp %r15,%r13
33e5(6): jbe 0xfffffaa4(%rip)
33eb(5): mov $0x0,0x0(%r14,%r15,1)
33f0(5): jmp 0xfffffa99(%rip)
33f5(5): cmp $0x2,0x8(%rsp)
33fa(5): movzx 0xf(%rsp),%ebx
33ff(3): mov %r11,%rbp
3402(3): setz %al
3405(4): mov %bl,0xd(%rsp)
3409(5): jmp 0xfffffa30(%rip)
340e(4): mov 0x8(%rsp),%esi
3412(3): mov %rcx,%rdi
3415(5): call 0xffffedab(%rip)
341a(5): mov %rax,0x68(%rsp)
341f(5): jmp 0xfffffc57(%rip)
3424(4): mov 0x8(%rsp),%esi
3428(3): mov %rcx,%rdi
342b(5): call 0xffffed95(%rip)
3430(5): mov %rax,0x60(%rsp)
3435(5): jmp 0xfffffc6c(%rip)
343a(5): movzx 0xf(%rsp),%ebx
343f(3): mov %r11,%rbp
3442(2): mov %edx,%eax
3444(4): mov %bl,0xd(%rsp)
3448(5): jmp 0xfffff9f1(%rip)
344d(4): sub $0x8,%rsp
3451(6): mov $0x5,%r8d
3457(3): mov %r11,%rcx
345a(4): push 0x68(%rsp)
345e(4): push 0x78(%rsp)
3462(3): mov %r14,%rdi
3465(4): push 0x38(%rsp)
3469(8): mov 0x98(%rsp),%r9d
3471(5): mov 0x30(%rsp),%rdx
3476(5): mov 0x70(%rsp),%rsi
347b(5): call 0xffffee35(%rip)
3480(4): add $0x20,%rsp
3484(3): mov %rax,%r15
3487(5): jmp 0xfffffa02(%rip)
348c(5): movzx 0x7c(%rsp),%eax
3491(5): jmp 0xffffff1b(%rip)
3496(8): mov $0x2,0x8(%rsp)
349e(5): jmp 0xfffff99b(%rip)
34a3(5): call 0xffffdead(%rip)
34a8(5): mov $0x0,0xd(%rsp)
34ad(5): jmp 0xfffffa74(%rip)
34b2(3): mov %r11,%rbp
34b5(5): jmp 0xfffff99b(%rip)
34ba(5): mov $0x1,0xe(%rsp)
34bf(2): xor %eax,%eax
34c1(3): xor %r12d,%r12d
34c4(9): mov $0x0,0x50(%rsp)
34cd(5): jmp 0xfffff5a7(%rip)
34d2(3): mov %r13,%rdx
34d5(5): mov 0x50(%rsp),%r13
34da(5): jmp 0xfffff5f8(%rip)
34df(5): call 0xffffdda1(%rip)

"quotearg_n_options" :
34f0(2): push %r15
34f2(2): push %r14
34f4(3): movsxd %edi,%r15
34f7(2): push %r13
34f9(2): push %r12
34fb(3): mov %rdx,%r14
34fe(1): push %rbp
34ff(1): push %rbx
3500(3): mov %rcx,%rbp
3503(4): sub $0x28,%rsp
3507(5): mov %rsi,0x8(%rsp)
350c(5): call 0xffffdd84(%rip)
3511(3): mov %rax,%r13
3514(2): mov (%rax),%eax
3516(3): test %r15d,%r15d
3519(7): mov 0x203b40(%rip),%rbx
3520(4): mov %eax,0x18(%rsp)
3524(6): js 0x16d(%rip)
352a(7): cmp %r15d,0x203b27(%rip)
3531(2): jnle 0x64(%rip)
3533(7): cmp $0x7fffffff,%r15d
353a(6): jz 0x15c(%rip)
3540(4): lea 0x1(%r15),%r12d
3544(7): lea 0x203b25(%rip),%rax
354b(3): movsxd %r12d,%rsi
354e(4): shl/sal $0x4,%rsi
3552(3): cmp %rax,%rbx
3555(6): jz 0x11b(%rip)
355b(3): mov %rbx,%rdi
355e(5): call 0xf72(%rip)
3563(3): mov %rax,%rbx
3566(7): mov %rax,0x203af3(%rip)
356d(7): movsxd 0x203ae4(%rip),%rdi
3574(3): mov %r12d,%edx
3577(2): xor %esi,%esi
3579(2): sub %edi,%edx
357b(4): shl/sal $0x4,%rdi
357f(3): movsxd %edx,%rdx
3582(3): add %rbx,%rdi
3585(4): shl/sal $0x4,%rdx
3589(5): call 0xffffde27(%rip)
358e(7): mov %r12d,0x203ac3(%rip)
3595(3): mov 0x4(%rbp),%eax
3598(4): shl/sal $0x4,%r15
359c(4): sub $0x8,%rsp
35a0(3): add %r15,%rbx
35a3(4): lea 0x8(%rbp),%r15
35a7(4): mov 0x0(%rbp),%r8d
35ab(3): mov (%rbx),%r11
35ae(4): mov 0x8(%rbx),%r12
35b2(3): mov %r14,%rcx
35b5(3): or $0x1,%eax
35b8(4): mov %eax,0x24(%rsp)
35bc(3): push 0x30(%rbp)
35bf(3): mov %eax,%r9d
35c2(3): push 0x28(%rbp)
35c5(2): push %r15
35c7(3): mov %r11,%rsi
35ca(5): mov 0x28(%rsp),%rdx
35cf(3): mov %r12,%rdi
35d2(5): mov %r11,0x30(%rsp)
35d7(5): call 0xffffecd9(%rip)
35dc(4): add $0x20,%rsp
35e0(5): mov 0x10(%rsp),%r11
35e5(3): cmp %rax,%r11
35e8(2): jnbe 0x69(%rip)
35ea(4): lea 0x1(%rax),%rsi
35ee(7): lea 0x203aeb(%rip),%rax
35f5(3): cmp %rax,%r12
35f8(3): mov %rsi,(%rbx)
35fb(2): jz 0x14(%rip)
35fd(3): mov %r12,%rdi
3600(5): mov %rsi,0x10(%rsp)
3605(5): call 0xffffdc6b(%rip)
360a(5): mov 0x10(%rsp),%rsi
360f(3): mov %rsi,%rdi
3612(5): mov %rsi,0x10(%rsp)
3617(5): call 0xe59(%rip)
361c(4): sub $0x8,%rsp
3620(4): mov %rax,0x8(%rbx)
3624(4): mov 0x0(%rbp),%r8d
3628(3): push 0x30(%rbp)
362b(3): push 0x28(%rbp)
362e(3): mov %r14,%rcx
3631(2): push %r15
3633(5): mov 0x3c(%rsp),%r9d
3638(3): mov %rax,%rdi
363b(5): mov 0x28(%rsp),%rdx
3640(5): mov 0x30(%rsp),%rsi
3645(3): mov %rax,%r12
3648(5): call 0xffffec68(%rip)
364d(4): add $0x20,%rsp
3651(4): mov 0x18(%rsp),%eax
3655(4): mov %eax,0x0(%r13)
3659(4): add $0x28,%rsp
365d(3): mov %r12,%rax
3660(1): pop %rbx
3661(1): pop %rbp
3662(2): pop %r12
3664(2): pop %r13
3666(2): pop %r14
3668(2): pop %r15
366a(1): ret near (%rsp)
366b(5): nop 0x0(%rax,%rax,1)
3670(2): xor %edi,%edi
3672(5): call 0xe5e(%rip)
3677(8): movdqa 0x2039f1(%rip),%xmm0
367f(3): mov %rax,%rbx
3682(7): mov %rax,0x2039d7(%rip)
3689(3): movups %xmm0,(%rax)
368c(5): jmp 0xfffffee1(%rip)
3691(5): call 0xffffdbef(%rip)
3696(5): call 0x102a(%rip)

"clone_quoting_options" :
36a0(2): push %r12
36a2(1): push %rbp
36a3(1): push %rbx
36a4(3): mov %rdi,%rbx
36a7(5): call 0xffffdbe9(%rip)
36ac(3): mov (%rax),%r12d
36af(3): mov %rax,%rbp
36b2(7): lea 0x203b27(%rip),%rax
36b9(3): test %rbx,%rbx
36bc(5): mov $0x38,%esi
36c1(4): cmove %rax,%rbx
36c5(3): mov %rbx,%rdi
36c8(5): call 0xfa8(%rip)
36cd(4): mov %r12d,0x0(%rbp)
36d1(1): pop %rbx
36d2(1): pop %rbp
36d3(2): pop %r12
36d5(1): ret near (%rsp)

"get_quoting_style" :
36e0(7): lea 0x203af9(%rip),%rax
36e7(3): test %rdi,%rdi
36ea(4): cmove %rax,%rdi
36ee(2): mov (%rdi),%eax
36f0(1): ret near (%rsp)

"set_quoting_style" :
3700(7): lea 0x203ad9(%rip),%rax
3707(3): test %rdi,%rdi
370a(4): cmove %rax,%rdi
370e(2): mov %esi,(%rdi)
3710(1): ret near (%rsp)

"set_char_quoting" :
3720(7): lea 0x203ab9(%rip),%rax
3727(3): test %rdi,%rdi
372a(2): mov %esi,%ecx
372c(4): cmove %rax,%rdi
3730(2): mov %esi,%eax
3732(3): and $0x1f,%ecx
3735(3): shr $0x5,%al
3738(3): movzx %al,%eax
373b(5): lea 0x8(%rdi,%rax,4),%rdi
3740(2): mov (%rdi),%esi
3742(2): mov %esi,%eax
3744(2): shr %cl,%eax
3746(2): xor %eax,%edx
3748(3): and $0x1,%eax
374b(3): and $0x1,%edx
374e(2): shl/sal %cl,%edx
3750(2): xor %esi,%edx
3752(2): mov %edx,(%rdi)
3754(1): ret near (%rsp)

"set_quoting_flags" :
3760(7): lea 0x203a79(%rip),%rax
3767(3): test %rdi,%rdi
376a(4): cmove %rax,%rdi
376e(3): mov 0x4(%rdi),%eax
3771(3): mov %esi,0x4(%rdi)
3774(1): ret near (%rsp)

"set_custom_quoting" :
3780(7): lea 0x203a59(%rip),%rax
3787(3): test %rdi,%rdi
378a(4): cmove %rax,%rdi
378e(3): test %rsi,%rsi
3791(6): mov $0xa,(%rdi)
3797(2): jz 0x10(%rip)
3799(3): test %rdx,%rdx
379c(2): jz 0xb(%rip)
379e(4): mov %rsi,0x28(%rdi)
37a2(4): mov %rdx,0x30(%rdi)
37a6(1): ret near (%rsp)
37a7(4): sub $0x8,%rsp
37ab(5): call 0xffffdad5(%rip)

"quotearg_buffer" :
37b0(2): push %r15
37b2(2): push %r14
37b4(7): lea 0x203a25(%rip),%rax
37bb(2): push %r13
37bd(2): push %r12
37bf(3): mov %rdi,%r13
37c2(1): push %rbp
37c3(1): push %rbx
37c4(3): mov %r8,%rbx
37c7(3): mov %rsi,%r14
37ca(3): mov %rdx,%r15
37cd(4): sub $0x18,%rsp
37d1(3): test %r8,%r8
37d4(4): cmove %rax,%rbx
37d8(5): mov %rcx,0x8(%rsp)
37dd(5): call 0xffffdab3(%rip)
37e2(3): mov (%rax),%r12d
37e5(3): mov %rax,%rbp
37e8(4): lea 0x8(%rbx),%rax
37ec(4): sub $0x8,%rsp
37f0(4): mov 0x4(%rbx),%r9d
37f4(3): push 0x30(%rbx)
37f7(3): mov (%rbx),%r8d
37fa(3): push 0x28(%rbx)
37fd(3): mov %r15,%rdx
3800(1): push %rax
3801(5): mov 0x28(%rsp),%rcx
3806(3): mov %r14,%rsi
3809(3): mov %r13,%rdi
380c(5): call 0xffffeaa4(%rip)
3811(4): mov %r12d,0x0(%rbp)
3815(4): add $0x38,%rsp
3819(1): pop %rbx
381a(1): pop %rbp
381b(2): pop %r12
381d(2): pop %r13
381f(2): pop %r14
3821(2): pop %r15
3823(1): ret near (%rsp)

"quotearg_alloc_mem" :
3830(2): push %r15
3832(2): push %r14
3834(7): lea 0x2039a5(%rip),%rax
383b(2): push %r13
383d(2): push %r12
383f(3): mov %rdx,%r12
3842(1): push %rbp
3843(1): push %rbx
3844(3): mov %rcx,%rbx
3847(3): mov %rdi,%r14
384a(3): mov %rsi,%r15
384d(4): sub $0x38,%rsp
3851(3): test %rcx,%rcx
3854(4): cmove %rax,%rbx
3858(2): xor %ebp,%ebp
385a(5): call 0xffffda36(%rip)
385f(3): test %r12,%r12
3862(3): mov %rax,%r13
3865(2): mov (%rax),%eax
3867(4): setz %bpl
386b(3): or 0x4(%rbx),%ebp
386e(4): lea 0x8(%rbx),%r10
3872(4): sub $0x8,%rsp
3876(3): mov (%rbx),%r8d
3879(3): mov %r15,%rcx
387c(4): mov %eax,0x14(%rsp)
3880(3): push 0x30(%rbx)
3883(3): mov %r14,%rdx
3886(3): push 0x28(%rbx)
3889(2): push %r10
388b(2): xor %esi,%esi
388d(3): mov %ebp,%r9d
3890(2): xor %edi,%edi
3892(5): mov %r10,0x40(%rsp)
3897(5): call 0xffffea19(%rip)
389c(4): lea 0x1(%rax),%rsi
38a0(5): mov %rax,0x48(%rsp)
38a5(4): add $0x20,%rsp
38a9(3): mov %rsi,%rdi
38ac(5): mov %rsi,0x18(%rsp)
38b1(5): call 0xbbf(%rip)
38b6(5): mov %rax,0x10(%rsp)
38bb(4): sub $0x8,%rsp
38bf(3): push 0x30(%rbx)
38c2(3): push 0x28(%rbx)
38c5(5): mov 0x38(%rsp),%r10
38ca(3): mov %ebp,%r9d
38cd(3): mov (%rbx),%r8d
38d0(3): mov %r15,%rcx
38d3(3): mov %r14,%rdx
38d6(3): mov %rax,%rdi
38d9(2): push %r10
38db(5): mov 0x38(%rsp),%rsi
38e0(5): call 0xffffe9d0(%rip)
38e5(4): mov 0x2c(%rsp),%eax
38e9(4): add $0x20,%rsp
38ed(3): test %r12,%r12
38f0(4): mov %eax,0x0(%r13)
38f4(2): jz 0xb(%rip)
38f6(5): mov 0x28(%rsp),%r11
38fb(4): mov %r11,(%r12)
38ff(5): mov 0x10(%rsp),%rax
3904(4): add $0x38,%rsp
3908(1): pop %rbx
3909(1): pop %rbp
390a(2): pop %r12
390c(2): pop %r13
390e(2): pop %r14
3910(2): pop %r15
3912(1): ret near (%rsp)

"quotearg_alloc" :
3920(3): mov %rdx,%rcx
3923(2): xor %edx,%edx
3925(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3930(6): mov 0x203722(%rip),%eax
3936(2): push %r12
3938(7): mov 0x203721(%rip),%r12
393f(1): push %rbp
3940(1): push %rbx
3941(3): cmp $0x1,%eax
3944(2): jle 0x2d(%rip)
3946(3): sub $0x2,%eax
3949(5): lea 0x18(%r12),%rbx
394e(4): shl/sal $0x4,%rax
3952(5): lea 0x28(%r12,%rax,1),%rbp
3957(9): nop 0x0(%rax,%rax,1)
3960(3): mov (%rbx),%rdi
3963(4): add $0x10,%rbx
3967(5): call 0xffffd909(%rip)
396c(3): cmp %rbp,%rbx
396f(2): jnz 0xfffffff1(%rip)
3971(5): mov 0x8(%r12),%rdi
3976(7): lea 0x203763(%rip),%rbx
397d(3): cmp %rbx,%rdi
3980(2): jz 0x19(%rip)
3982(5): call 0xffffd8ee(%rip)
3987(b): mov $0x100,0x2036de(%rip)
3992(7): mov %rbx,0x2036df(%rip)
3999(7): lea 0x2036d0(%rip),%rbx
39a0(3): cmp %rbx,%r12
39a3(2): jz 0x11(%rip)
39a5(3): mov %r12,%rdi
39a8(5): call 0xffffd8c8(%rip)
39ad(7): mov %rbx,0x2036ac(%rip)
39b4(1): pop %rbx
39b5(a): mov $0x1,0x203699(%rip)
39bf(1): pop %rbp
39c0(2): pop %r12
39c2(1): ret near (%rsp)

"quotearg_n" :
39d0(7): lea 0x203809(%rip),%rcx
39d7(7): mov $0xffffffff,%rdx
39de(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
39f0(7): lea 0x2037e9(%rip),%rcx
39f7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3a00(7): lea 0x2037d9(%rip),%rcx
3a07(3): mov %rdi,%rsi
3a0a(7): mov $0xffffffff,%rdx
3a11(2): xor %edi,%edi
3a13(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3a20(7): lea 0x2037b9(%rip),%rcx
3a27(3): mov %rsi,%rdx
3a2a(3): mov %rdi,%rsi
3a2d(2): xor %edi,%edi
3a2f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3a40(4): sub $0x48,%rsp
3a44(3): mov %rdx,%rax
3a47(9): mov $0x28,%rdx
3a50(5): mov %rdx,0x38(%rsp)
3a55(2): xor %edx,%edx
3a57(3): cmp $0xa,%esi
3a5a(2): jz 0x6a(%rip)
3a5c(3): mov %esi,(%rsp)
3a5f(3): mov %rsp,%rcx
3a62(7): mov $0xffffffff,%rdx
3a69(3): mov %rax,%rsi
3a6c(9): mov $0x0,0x4(%rsp)
3a75(9): mov $0x0,0xc(%rsp)
3a7e(9): mov $0x0,0x14(%rsp)
3a87(9): mov $0x0,0x1c(%rsp)
3a90(9): mov $0x0,0x24(%rsp)
3a99(9): mov $0x0,0x2c(%rsp)
3aa2(8): mov $0x0,0x34(%rsp)
3aaa(5): call 0xfffffa46(%rip)
3aaf(5): mov 0x38(%rsp),%rcx
3ab4(9): xor $0x28,%rcx
3abd(2): jnz 0xc(%rip)
3abf(4): add $0x48,%rsp
3ac3(1): ret near (%rsp)
3ac4(5): call 0xffffd7bc(%rip)
3ac9(5): call 0xffffd887(%rip)

"quotearg_n_style_mem" :
3ad0(4): sub $0x48,%rsp
3ad4(3): mov %rdx,%rax
3ad7(3): mov %rcx,%rdx
3ada(9): mov $0x28,%rcx
3ae3(5): mov %rcx,0x38(%rsp)
3ae8(2): xor %ecx,%ecx
3aea(3): cmp $0xa,%esi
3aed(2): jz 0x63(%rip)
3aef(3): mov %esi,(%rsp)
3af2(3): mov %rsp,%rcx
3af5(3): mov %rax,%rsi
3af8(9): mov $0x0,0x4(%rsp)
3b01(9): mov $0x0,0xc(%rsp)
3b0a(9): mov $0x0,0x14(%rsp)
3b13(9): mov $0x0,0x1c(%rsp)
3b1c(9): mov $0x0,0x24(%rsp)
3b25(9): mov $0x0,0x2c(%rsp)
3b2e(8): mov $0x0,0x34(%rsp)
3b36(5): call 0xfffff9ba(%rip)
3b3b(5): mov 0x38(%rsp),%rdx
3b40(9): xor $0x28,%rdx
3b49(2): jnz 0xc(%rip)
3b4b(4): add $0x48,%rsp
3b4f(1): ret near (%rsp)
3b50(5): call 0xffffd730(%rip)
3b55(5): call 0xffffd7fb(%rip)

"quotearg_style" :
3b60(3): mov %rsi,%rdx
3b63(2): mov %edi,%esi
3b65(2): xor %edi,%edi
3b67(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3b70(3): mov %rdx,%rcx
3b73(3): mov %rsi,%rdx
3b76(2): mov %edi,%esi
3b78(2): xor %edi,%edi
3b7a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3b80(4): sub $0x48,%rsp
3b84(2): mov %edx,%ecx
3b86(9): mov $0x28,%rax
3b8f(5): mov %rax,0x38(%rsp)
3b94(2): xor %eax,%eax
3b96(7): mov 0x203673(%rip),%rax
3b9d(3): mov %rsp,%r8
3ba0(3): and $0x1f,%ecx
3ba3(8): movdqa 0x203635(%rip),%xmm0
3bab(5): mov %rax,0x30(%rsp)
3bb0(2): mov %edx,%eax
3bb2(4): movaps %xmm0,(%rsp)
3bb6(3): shr $0x5,%al
3bb9(3): movzx %al,%eax
3bbc(5): lea 0x8(%r8,%rax,4),%r9
3bc1(8): movdqa 0x203627(%rip),%xmm0
3bc9(5): movaps %xmm0,0x10(%rsp)
3bce(8): movdqa 0x20362a(%rip),%xmm0
3bd6(5): movaps %xmm0,0x20(%rsp)
3bdb(3): mov (%r9),%edx
3bde(2): mov %edx,%eax
3be0(2): shr %cl,%eax
3be2(2): not %eax
3be4(3): and $0x1,%eax
3be7(2): shl/sal %cl,%eax
3be9(3): mov %r8,%rcx
3bec(2): xor %edx,%eax
3bee(3): mov %rsi,%rdx
3bf1(3): mov %rdi,%rsi
3bf4(3): mov %eax,(%r9)
3bf7(2): xor %edi,%edi
3bf9(5): call 0xfffff8f7(%rip)
3bfe(5): mov 0x38(%rsp),%rsi
3c03(9): xor $0x28,%rsi
3c0c(2): jnz 0x7(%rip)
3c0e(4): add $0x48,%rsp
3c12(1): ret near (%rsp)
3c13(5): call 0xffffd73d(%rip)

"quotearg_char" :
3c20(4): movsx %sil,%edx
3c24(7): mov $0xffffffff,%rsi
3c2b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3c30(5): mov $0x3a,%edx
3c35(7): mov $0xffffffff,%rsi
3c3c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3c50(5): mov $0x3a,%edx
3c55(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3c60(4): sub $0x48,%rsp
3c64(3): mov %rdx,%rax
3c67(9): mov $0x28,%rdx
3c70(5): mov %rdx,0x38(%rsp)
3c75(2): xor %edx,%edx
3c77(3): cmp $0xa,%esi
3c7a(2): jz 0x6a(%rip)
3c7c(3): mov %esi,(%rsp)
3c7f(3): mov %rsp,%rcx
3c82(7): mov $0xffffffff,%rdx
3c89(3): mov %rax,%rsi
3c8c(9): mov $0x0,0x4(%rsp)
3c95(9): mov $0x4000000,0xc(%rsp)
3c9e(9): mov $0x0,0x14(%rsp)
3ca7(9): mov $0x0,0x1c(%rsp)
3cb0(9): mov $0x0,0x24(%rsp)
3cb9(9): mov $0x0,0x2c(%rsp)
3cc2(8): mov $0x0,0x34(%rsp)
3cca(5): call 0xfffff826(%rip)
3ccf(5): mov 0x38(%rsp),%rcx
3cd4(9): xor $0x28,%rcx
3cdd(2): jnz 0xc(%rip)
3cdf(4): add $0x48,%rsp
3ce3(1): ret near (%rsp)
3ce4(5): call 0xffffd59c(%rip)
3ce9(5): call 0xffffd667(%rip)

"quotearg_n_custom_mem" :
3cf0(4): sub $0x48,%rsp
3cf4(3): mov %rcx,%r9
3cf7(7): mov 0x203512(%rip),%rcx
3cfe(8): movdqa 0x2034da(%rip),%xmm0
3d06(9): mov $0x28,%rax
3d0f(5): mov %rax,0x38(%rsp)
3d14(2): xor %eax,%eax
3d16(4): movaps %xmm0,(%rsp)
3d1a(3): test %rsi,%rsi
3d1d(5): mov %rcx,0x30(%rsp)
3d22(7): mov $0xa,(%rsp)
3d29(8): movdqa 0x2034bf(%rip),%xmm0
3d31(5): movaps %xmm0,0x10(%rsp)
3d36(8): movdqa 0x2034c2(%rip),%xmm0
3d3e(5): movaps %xmm0,0x20(%rsp)
3d43(2): jz 0x34(%rip)
3d45(3): test %rdx,%rdx
3d48(2): jz 0x2f(%rip)
3d4a(5): mov %rsi,0x28(%rsp)
3d4f(5): mov %rdx,0x30(%rsp)
3d54(3): mov %rsp,%rcx
3d57(3): mov %r8,%rdx
3d5a(3): mov %r9,%rsi
3d5d(5): call 0xfffff793(%rip)
3d62(5): mov 0x38(%rsp),%rdi
3d67(9): xor $0x28,%rdi
3d70(2): jnz 0xc(%rip)
3d72(4): add $0x48,%rsp
3d76(1): ret near (%rsp)
3d77(5): call 0xffffd509(%rip)
3d7c(5): call 0xffffd5d4(%rip)

"quotearg_n_custom" :
3d90(7): mov $0xffffffff,%r8
3d97(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3da0(3): mov %rdx,%rcx
3da3(7): mov $0xffffffff,%r8
3daa(3): mov %rsi,%rdx
3dad(3): mov %rdi,%rsi
3db0(2): xor %edi,%edi
3db2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3dc0(3): mov %rcx,%r8
3dc3(3): mov %rdx,%rcx
3dc6(3): mov %rsi,%rdx
3dc9(3): mov %rdi,%rsi
3dcc(2): xor %edi,%edi
3dce(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3de0(7): lea 0x203239(%rip),%rcx
3de7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3df0(7): lea 0x203229(%rip),%rcx
3df7(3): mov %rsi,%rdx
3dfa(3): mov %rdi,%rsi
3dfd(2): xor %edi,%edi
3dff(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3e10(7): lea 0x203209(%rip),%rcx
3e17(7): mov $0xffffffff,%rdx
3e1e(5): jmp 0xfffff6d2(%rip)

"quote" :
3e30(7): lea 0x2031e9(%rip),%rcx
3e37(3): mov %rdi,%rsi
3e3a(7): mov $0xffffffff,%rdx
3e41(2): xor %edi,%edi
3e43(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3e50(2): push %r15
3e52(2): push %r14
3e54(2): push %r13
3e56(2): push %r12
3e58(3): mov %r9,%r12
3e5b(1): push %rbp
3e5c(1): push %rbx
3e5d(3): mov %rdi,%rbp
3e60(3): mov %r8,%rbx
3e63(4): sub $0x28,%rsp
3e67(3): test %rsi,%rsi
3e6a(6): jz 0x11e(%rip)
3e70(3): mov %rdx,%r8
3e73(7): lea 0x162e(%rip),%rdx
3e7a(3): mov %rcx,%r9
3e7d(2): xor %eax,%eax
3e7f(3): mov %rsi,%rcx
3e82(5): mov $0x1,%esi
3e87(5): call 0xffffd659(%rip)
3e8c(7): lea 0x1628(%rip),%rsi
3e93(2): xor %edi,%edi
3e95(5): mov $0x5,%edx
3e9a(5): call 0xffffd476(%rip)
3e9f(7): lea 0x193a(%rip),%rdx
3ea6(3): mov %rax,%rcx
3ea9(6): mov $0x7e3,%r8d
3eaf(5): mov $0x1,%esi
3eb4(3): mov %rbp,%rdi
3eb7(2): xor %eax,%eax
3eb9(5): call 0xffffd627(%rip)
3ebe(7): lea 0x1683(%rip),%rsi
3ec5(2): xor %edi,%edi
3ec7(5): mov $0x5,%edx
3ecc(5): call 0xffffd444(%rip)
3ed1(3): mov %rbp,%rsi
3ed4(3): mov %rax,%rdi
3ed7(5): call 0xffffd509(%rip)
3edc(4): cmp $0x9,%r12
3ee0(6): jnbe 0x340(%rip)
3ee6(7): lea 0x18bb(%rip),%rdx
3eed(4): movsxd 0x0(%rdx,%r12,4),%rax
3ef1(3): add %rdx,%rax
3ef4(2): jmp %rax
3ef6(a): nop 0x0(%rax,%rax,1)
3f00(4): mov 0x38(%rbx),%r9
3f04(4): mov 0x10(%rbx),%rax
3f08(7): lea 0x17a9(%rip),%rsi
3f0f(4): mov 0x8(%rbx),%r8
3f13(5): mov $0x5,%edx
3f18(2): xor %edi,%edi
3f1a(4): mov 0x30(%rbx),%r13
3f1e(4): mov 0x28(%rbx),%r12
3f22(5): mov %r9,0x10(%rsp)
3f27(4): mov 0x20(%rbx),%r15
3f2b(4): mov 0x18(%rbx),%r14
3f2f(4): mov %rax,(%rsp)
3f33(5): mov %r8,0x8(%rsp)
3f38(3): mov (%rbx),%rbx
3f3b(5): call 0xffffd3d5(%rip)
3f40(4): sub $0x8,%rsp
3f44(5): mov 0x18(%rsp),%r9
3f49(3): mov %rax,%rdx
3f4c(3): mov %rbx,%rcx
3f4f(5): mov $0x1,%esi
3f54(3): mov %rbp,%rdi
3f57(2): xor %eax,%eax
3f59(2): push %r9
3f5b(2): push %r13
3f5d(2): push %r12
3f5f(2): push %r15
3f61(2): push %r14
3f63(5): mov 0x30(%rsp),%r9
3f68(5): mov 0x38(%rsp),%r8
3f6d(5): call 0xffffd573(%rip)
3f72(4): add $0x30,%rsp
3f76(4): add $0x28,%rsp
3f7a(1): pop %rbx
3f7b(1): pop %rbp
3f7c(2): pop %r12
3f7e(2): pop %r13
3f80(2): pop %r14
3f82(2): pop %r15
3f84(1): ret near (%rsp)
3f85(3): nop (%rax)
3f88(3): mov %rcx,%r8
3f8b(3): mov %rdx,%rcx
3f8e(7): lea 0x151f(%rip),%rdx
3f95(5): mov $0x1,%esi
3f9a(2): xor %eax,%eax
3f9c(5): call 0xffffd544(%rip)
3fa1(5): jmp 0xfffffeeb(%rip)
3fa6(a): nop 0x0(%rax,%rax,1)
3fb0(4): mov 0x40(%rbx),%r10
3fb4(4): mov 0x38(%rbx),%r9
3fb8(7): lea 0x1729(%rip),%rsi
3fbf(4): mov 0x10(%rbx),%rax
3fc3(4): mov 0x8(%rbx),%r8
3fc7(5): mov $0x5,%edx
3fcc(4): mov 0x30(%rbx),%r13
3fd0(4): mov 0x28(%rbx),%r12
3fd4(4): mov 0x20(%rbx),%r15
3fd8(4): mov 0x18(%rbx),%r14
3fdc(3): mov (%rbx),%rbx
3fdf(5): mov %r10,0x18(%rsp)
3fe4(5): mov %r9,0x10(%rsp)
3fe9(4): mov %rax,(%rsp)
3fed(5): mov %r8,0x8(%rsp)
3ff2(2): xor %edi,%edi
3ff4(5): call 0xffffd31c(%rip)
3ff9(5): mov 0x18(%rsp),%r10
3ffe(2): push %r10
4000(5): jmp 0xffffff44(%rip)
4005(3): nop (%rax)
4008(3): mov (%rbx),%rbx
400b(7): lea 0x14ad(%rip),%rsi
4012(5): mov $0x5,%edx
4017(2): xor %edi,%edi
4019(5): call 0xffffd2f7(%rip)
401e(4): add $0x28,%rsp
4022(3): mov %rbx,%rcx
4025(3): mov %rbp,%rdi
4028(1): pop %rbx
4029(1): pop %rbp
402a(2): pop %r12
402c(2): pop %r13
402e(2): pop %r14
4030(2): pop %r15
4032(3): mov %rax,%rdx
4035(5): mov $0x1,%esi
403a(2): xor %eax,%eax
403c(5): jmp 0xffffd4a4(%rip)
4041(7): nop 0x0(%rax)
4048(4): mov 0x8(%rbx),%r12
404c(7): lea 0x147c(%rip),%rsi
4053(3): mov (%rbx),%rbx
4056(5): mov $0x5,%edx
405b(2): xor %edi,%edi
405d(5): call 0xffffd2b3(%rip)
4062(4): add $0x28,%rsp
4066(3): mov %r12,%r8
4069(3): mov %rbx,%rcx
406c(3): mov %rbp,%rdi
406f(3): mov %rax,%rdx
4072(5): mov $0x1,%esi
4077(1): pop %rbx
4078(1): pop %rbp
4079(2): pop %r12
407b(2): pop %r13
407d(2): pop %r14
407f(2): pop %r15
4081(2): xor %eax,%eax
4083(5): jmp 0xffffd45d(%rip)
4088(8): nop 0x0(%rax,%rax,1)
4090(4): mov 0x10(%rbx),%r13
4094(4): mov 0x8(%rbx),%r12
4098(7): lea 0x1447(%rip),%rsi
409f(3): mov (%rbx),%rbx
40a2(5): mov $0x5,%edx
40a7(2): xor %edi,%edi
40a9(5): call 0xffffd267(%rip)
40ae(4): add $0x28,%rsp
40b2(3): mov %r13,%r9
40b5(3): mov %r12,%r8
40b8(3): mov %rbx,%rcx
40bb(3): mov %rbp,%rdi
40be(3): mov %rax,%rdx
40c1(1): pop %rbx
40c2(1): pop %rbp
40c3(2): pop %r12
40c5(2): pop %r13
40c7(2): pop %r14
40c9(2): pop %r15
40cb(5): mov $0x1,%esi
40d0(2): xor %eax,%eax
40d2(5): jmp 0xffffd40e(%rip)
40d7(9): nop 0x0(%rax,%rax,1)
40e0(7): lea 0x1531(%rip),%rsi
40e7(5): mov $0x5,%edx
40ec(2): xor %edi,%edi
40ee(4): mov 0x18(%rbx),%r14
40f2(4): mov 0x10(%rbx),%r13
40f6(4): mov 0x8(%rbx),%r12
40fa(3): mov (%rbx),%rbx
40fd(5): call 0xffffd213(%rip)
4102(4): sub $0x8,%rsp
4106(2): push %r14
4108(3): mov %rax,%rdx
410b(3): mov %r13,%r9
410e(3): mov %r12,%r8
4111(3): mov %rbx,%rcx
4114(3): mov %rbp,%rdi
4117(5): mov $0x1,%esi
411c(2): xor %eax,%eax
411e(5): call 0xffffd3c2(%rip)
4123(1): pop %rax
4124(1): pop %rdx
4125(4): add $0x28,%rsp
4129(1): pop %rbx
412a(1): pop %rbp
412b(2): pop %r12
412d(2): pop %r13
412f(2): pop %r14
4131(2): pop %r15
4133(1): ret near (%rsp)
4134(4): nop 0x0(%rax)
4138(4): mov 0x20(%rbx),%r15
413c(7): lea 0x14f5(%rip),%rsi
4143(5): mov $0x5,%edx
4148(2): xor %edi,%edi
414a(4): mov 0x18(%rbx),%r14
414e(4): mov 0x10(%rbx),%r13
4152(4): mov 0x8(%rbx),%r12
4156(3): mov (%rbx),%rbx
4159(5): call 0xffffd1b7(%rip)
415e(2): push %r15
4160(2): jmp 0xffffffa6(%rip)
4162(6): nop 0x0(%rax,%rax,1)
4168(4): mov 0x8(%rbx),%r8
416c(4): mov 0x28(%rbx),%r12
4170(7): lea 0x14e9(%rip),%rsi
4177(4): mov 0x20(%rbx),%r15
417b(4): mov 0x18(%rbx),%r14
417f(5): mov $0x5,%edx
4184(4): mov 0x10(%rbx),%r13
4188(2): xor %edi,%edi
418a(3): mov (%rbx),%rbx
418d(4): mov %r8,(%rsp)
4191(5): call 0xffffd17f(%rip)
4196(4): sub $0x8,%rsp
419a(3): mov %r13,%r9
419d(2): push %r12
419f(2): push %r15
41a1(2): push %r14
41a3(5): mov 0x20(%rsp),%r8
41a8(3): mov %rbx,%rcx
41ab(3): mov %rax,%rdx
41ae(3): mov %rbp,%rdi
41b1(5): mov $0x1,%esi
41b6(2): xor %eax,%eax
41b8(5): call 0xffffd328(%rip)
41bd(4): add $0x20,%rsp
41c1(4): add $0x28,%rsp
41c5(1): pop %rbx
41c6(1): pop %rbp
41c7(2): pop %r12
41c9(2): pop %r13
41cb(2): pop %r14
41cd(2): pop %r15
41cf(1): ret near (%rsp)
41d0(4): mov 0x10(%rbx),%r9
41d4(4): mov 0x30(%rbx),%r13
41d8(7): lea 0x14a9(%rip),%rsi
41df(4): mov 0x28(%rbx),%r12
41e3(4): mov 0x20(%rbx),%r15
41e7(5): mov $0x5,%edx
41ec(4): mov 0x18(%rbx),%r14
41f0(4): mov 0x8(%rbx),%r8
41f4(2): xor %edi,%edi
41f6(5): mov %r9,0x8(%rsp)
41fb(3): mov (%rbx),%rbx
41fe(4): mov %r8,(%rsp)
4202(5): call 0xffffd10e(%rip)
4207(2): push %r13
4209(2): push %r12
420b(2): push %r15
420d(2): push %r14
420f(5): mov 0x28(%rsp),%r9
4214(2): jmp 0xffffff8f(%rip)
4216(a): nop 0x0(%rax,%rax,1)
4220(4): mov 0x40(%rbx),%r10
4224(4): mov 0x38(%rbx),%r9
4228(5): mov $0x5,%edx
422d(4): mov 0x10(%rbx),%rax
4231(4): mov 0x8(%rbx),%r8
4235(7): lea 0x14e4(%rip),%rsi
423c(4): mov 0x30(%rbx),%r13
4240(4): mov 0x28(%rbx),%r12
4244(4): mov 0x20(%rbx),%r15
4248(4): mov 0x18(%rbx),%r14
424c(5): mov %r10,0x18(%rsp)
4251(5): mov %r9,0x10(%rsp)
4256(4): mov %rax,(%rsp)
425a(5): mov %r8,0x8(%rsp)
425f(3): mov (%rbx),%rbx
4262(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4270(3): xor %r9d,%r9d
4273(4): cmp $0x0,(%r8)
4277(2): jz 0x14(%rip)
4279(7): nop 0x0(%rax)
4280(4): add $0x1,%r9
4284(5): cmp $0x0,0x0(%r8,%r9,8)
4289(2): jnz 0xfffffff7(%rip)
428b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4290(4): sub $0x68,%rsp
4294(3): mov %r8,%r10
4297(3): xor %r9d,%r9d
429a(9): mov $0x28,%rax
42a3(5): mov %rax,0x58(%rsp)
42a8(2): xor %eax,%eax
42aa(3): mov %rsp,%r8
42ad(3): nop (%rax)
42b0(3): mov (%r10),%eax
42b3(3): cmp $0x2f,%eax
42b6(2): jnbe 0x44(%rip)
42b8(3): mov %eax,%r11d
42bb(4): add 0x10(%r10),%r11
42bf(3): add $0x8,%eax
42c2(3): mov %eax,(%r10)
42c5(3): mov (%r11),%rax
42c8(3): test %rax,%rax
42cb(4): mov %rax,0x0(%r8,%r9,8)
42cf(2): jz 0xc(%rip)
42d1(4): add $0x1,%r9
42d5(4): cmp $0xa,%r9
42d9(2): jnz 0xffffffd7(%rip)
42db(5): call 0xfffffb75(%rip)
42e0(5): mov 0x58(%rsp),%rax
42e5(9): xor $0x28,%rax
42ee(2): jnz 0x7(%rip)
42f0(4): add $0x68,%rsp
42f4(1): ret near (%rsp)
42f5(5): call 0xffffd05b(%rip)
42fa(4): mov 0x8(%r10),%r11
42fe(4): lea 0x8(%r11),%rax
4302(4): mov %rax,0x8(%r10)
4306(2): jmp 0xffffffbf(%rip)

"version_etc" :
4310(1): push %rbp
4311(1): push %rbx
4312(6): mov $0x20,%r10d
4318(3): xor %r11d,%r11d
431b(7): sub $0xb8,%rsp
4322(9): mov $0x28,%rax
432b(5): mov %rax,0x78(%rsp)
4330(2): xor %eax,%eax
4332(8): lea 0xd0(%rsp),%rax
433a(8): mov %r8,0xa0(%rsp)
4342(8): lea 0xd0(%rsp),%rbx
434a(5): lea 0x20(%rsp),%r8
434f(8): mov %r9,0xa8(%rsp)
4357(8): mov $0x20,0x8(%rsp)
435f(5): mov %rax,0x10(%rsp)
4364(8): lea 0x80(%rsp),%rax
436c(3): xor %r9d,%r9d
436f(5): mov %rax,0x18(%rsp)
4374(3): mov %rax,%rbp
4377(9): nop 0x0(%rax,%rax,1)
4380(4): cmp $0x2f,%r10d
4384(2): jnbe 0x58(%rip)
4386(3): mov %r10d,%eax
4389(6): mov $0x1,%r11d
438f(4): add $0x8,%r10d
4393(3): add %rbp,%rax
4396(3): mov (%rax),%rax
4399(3): test %rax,%rax
439c(4): mov %rax,0x0(%r8,%r9,8)
43a0(2): jz 0xc(%rip)
43a2(4): add $0x1,%r9
43a6(4): cmp $0xa,%r9
43aa(2): jnz 0xffffffd6(%rip)
43ac(3): test %r11b,%r11b
43af(2): jnz 0x26(%rip)
43b1(5): call 0xfffffa9f(%rip)
43b6(5): mov 0x78(%rsp),%rax
43bb(9): xor $0x28,%rax
43c4(2): jnz 0xc(%rip)
43c6(7): add $0xb8,%rsp
43cd(1): pop %rbx
43ce(1): pop %rbp
43cf(1): ret near (%rsp)
43d0(5): call 0xffffcf80(%rip)
43d5(5): mov %r10d,0x8(%rsp)
43da(2): jmp 0xffffffd7(%rip)
43dc(3): mov %rbx,%rax
43df(4): add $0x8,%rbx
43e3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
43f0(1): push %rbx
43f1(7): lea 0x110a(%rip),%rsi
43f8(5): mov $0x5,%edx
43fd(2): xor %edi,%edi
43ff(5): call 0xffffcf11(%rip)
4404(7): lea 0x110c(%rip),%rdx
440b(3): mov %rax,%rsi
440e(5): mov $0x1,%edi
4413(2): xor %eax,%eax
4415(5): call 0xffffd06b(%rip)
441a(7): lea 0x110c(%rip),%rsi
4421(5): mov $0x5,%edx
4426(2): xor %edi,%edi
4428(5): call 0xffffcee8(%rip)
442d(7): lea 0x934(%rip),%rcx
4434(7): lea 0x6e7(%rip),%rdx
443b(3): mov %rax,%rsi
443e(5): mov $0x1,%edi
4443(2): xor %eax,%eax
4445(5): call 0xffffd03b(%rip)
444a(7): mov 0x202c37(%rip),%rbx
4451(7): lea 0x1308(%rip),%rsi
4458(2): xor %edi,%edi
445a(5): mov $0x5,%edx
445f(5): call 0xffffceb1(%rip)
4464(3): mov %rbx,%rsi
4467(3): mov %rax,%rdi
446a(1): pop %rbx
446b(5): jmp 0xffffcf75(%rip)

"xmalloc" :
4470(1): push %rbx
4471(3): mov %rdi,%rbx
4474(5): call 0xffffcfac(%rip)
4479(3): test %rax,%rax
447c(2): jnz 0x7(%rip)
447e(3): test %rbx,%rbx
4481(2): jnz 0x4(%rip)
4483(1): pop %rbx
4484(1): ret near (%rsp)
4485(5): call 0x23b(%rip)

"xnmalloc" :
4490(3): mov %rdi,%rax
4493(3): mul %rax,%rsi,%rdx
4496(3): mov %rax,%rdi
4499(3): seto %al
449c(3): test %rdi,%rdi
449f(2): js 0xc(%rip)
44a1(3): movzx %al,%eax
44a4(3): test %rax,%rax
44a7(2): jnz 0x4(%rip)
44a9(2): jmp 0xffffffc7(%rip)
44ab(4): sub $0x8,%rsp
44af(5): call 0x211(%rip)

"xrealloc" :
44d0(3): test %rsi,%rsi
44d3(1): push %rbx
44d4(3): mov %rsi,%rbx
44d7(2): jnz 0x7(%rip)
44d9(3): test %rdi,%rdi
44dc(2): jnz 0x1c(%rip)
44de(3): mov %rbx,%rsi
44e1(5): call 0xffffcf7f(%rip)
44e6(3): test %rax,%rax
44e9(2): jnz 0x7(%rip)
44eb(3): test %rbx,%rbx
44ee(2): jnz 0x13(%rip)
44f0(1): pop %rbx
44f1(1): ret near (%rsp)
44f2(6): nop 0x0(%rax,%rax,1)
44f8(5): call 0xffffcd78(%rip)
44fd(2): xor %eax,%eax
44ff(1): pop %rbx
4500(1): ret near (%rsp)
4501(5): call 0x1bf(%rip)

"xnrealloc" :
4510(3): mov %rsi,%rax
4513(3): mul %rax,%rdx,%rdx
4516(3): mov %rax,%rsi
4519(3): seto %al
451c(3): test %rsi,%rsi
451f(2): js 0xc(%rip)
4521(3): movzx %al,%eax
4524(3): test %rax,%rax
4527(2): jnz 0x4(%rip)
4529(2): jmp 0xffffffa7(%rip)
452b(4): sub $0x8,%rsp
452f(5): call 0x191(%rip)

"x2nrealloc" :
4540(3): test %rdi,%rdi
4543(3): mov %rdx,%r9
4546(3): mov (%rsi),%rcx
4549(2): jz 0x37(%rip)
454b(2): xor %edx,%edx
454d(a): mov $0x6148914691236517204,%rax
4557(3): div %r9,%rax
455a(3): cmp %rcx,%rax
455d(2): jbe 0x3e(%rip)
455f(3): mov %rcx,%rax
4562(3): shr $0x1,%rax
4565(5): lea 0x1(%rax,%rcx,1),%rcx
456a(3): mov %rcx,(%rsi)
456d(4): imul %r9,%rcx
4571(3): mov %rcx,%rsi
4574(5): jmp 0xffffff5c(%rip)
4579(7): nop 0x0(%rax)
4580(3): test %rcx,%rcx
4583(2): jz 0x25(%rip)
4585(3): mov %rcx,%rax
4588(3): mul %rax,%r9,%rdx
458b(3): seto %dl
458e(3): test %rax,%rax
4591(3): movzx %dl,%edx
4594(2): js 0x7(%rip)
4596(3): test %rdx,%rdx
4599(2): jz 0xffffffd1(%rip)
459b(4): sub $0x8,%rsp
459f(5): call 0x121(%rip)
45a4(4): nop 0x0(%rax)
45a8(2): xor %edx,%edx
45aa(5): mov $0x80,%eax
45af(3): xor %r8d,%r8d
45b2(3): div %r9,%rax
45b5(3): test %rax,%rax
45b8(4): setz %r8b
45bc(4): lea 0x0(%r8,%rax,1),%rcx
45c0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
45d0(3): test %rdi,%rdi
45d3(3): mov (%rsi),%rax
45d6(2): jz 0x2a(%rip)
45d8(a): mov $0x6148914691236517203,%rdx
45e2(3): cmp %rdx,%rax
45e5(2): jnbe 0x2c(%rip)
45e7(3): mov %rax,%rdx
45ea(3): shr $0x1,%rdx
45ed(5): lea 0x1(%rdx,%rax,1),%rax
45f2(3): mov %rax,(%rsi)
45f5(3): mov %rax,%rsi
45f8(5): jmp 0xfffffed8(%rip)
45fd(3): nop (%rax)
4600(3): test %rax,%rax
4603(5): mov $0x80,%edx
4608(4): cmove %rdx,%rax
460c(3): test %rax,%rax
460f(2): jns 0xffffffe3(%rip)
4611(4): sub $0x8,%rsp
4615(5): call 0xab(%rip)

"xzalloc" :
4620(1): push %rbx
4621(3): mov %rdi,%rbx
4624(5): call 0xfffffe4c(%rip)
4629(3): mov %rbx,%rdx
462c(2): xor %esi,%esi
462e(3): mov %rax,%rdi
4631(1): pop %rbx
4632(5): jmp 0xffffcd7e(%rip)

"xcalloc" :
4640(3): mov %rdi,%rax
4643(4): sub $0x8,%rsp
4647(3): mul %rax,%rsi,%rdx
464a(3): seto %dl
464d(3): test %rax,%rax
4650(2): js 0x19(%rip)
4652(3): movzx %dl,%edx
4655(3): test %rdx,%rdx
4658(2): jnz 0x11(%rip)
465a(5): call 0xffffcd96(%rip)
465f(3): test %rax,%rax
4662(2): jz 0x7(%rip)
4664(4): add $0x8,%rsp
4668(1): ret near (%rsp)
4669(5): call 0x57(%rip)

"xmemdup" :
4670(1): push %rbp
4671(1): push %rbx
4672(3): mov %rdi,%rbp
4675(3): mov %rsi,%rdi
4678(3): mov %rsi,%rbx
467b(4): sub $0x8,%rsp
467f(5): call 0xfffffdf1(%rip)
4684(4): add $0x8,%rsp
4688(3): mov %rbx,%rdx
468b(3): mov %rbp,%rsi
468e(1): pop %rbx
468f(1): pop %rbp
4690(3): mov %rax,%rdi
4693(5): jmp 0xffffcd6d(%rip)

"xstrdup" :
46a0(1): push %rbx
46a1(3): mov %rdi,%rbx
46a4(5): call 0xffffcc8c(%rip)
46a9(3): mov %rbx,%rdi
46ac(4): lea 0x1(%rax),%rsi
46b0(1): pop %rbx
46b1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
46c0(7): lea 0x1148(%rip),%rsi
46c7(4): sub $0x8,%rsp
46cb(5): mov $0x5,%edx
46d0(2): xor %edi,%edi
46d2(5): call 0xffffcc3e(%rip)
46d7(6): mov 0x20293b(%rip),%edi
46dd(7): lea 0x894(%rip),%rdx
46e4(3): mov %rax,%rcx
46e7(2): xor %esi,%esi
46e9(2): xor %eax,%eax
46eb(5): call 0xffffcda5(%rip)
46f0(5): call 0xffffcb90(%rip)

"rpl_mbrlen" :
4700(7): lea 0x202b11(%rip),%rax
4707(3): test %rdx,%rdx
470a(4): cmove %rax,%rdx
470e(3): mov %rdx,%rcx
4711(3): mov %rsi,%rdx
4714(3): mov %rdi,%rsi
4717(2): xor %edi,%edi
4719(5): jmp 0x7(%rip)

"rpl_mbrtowc" :
4720(2): push %r13
4722(2): push %r12
4724(3): mov %rsi,%r13
4727(1): push %rbp
4728(1): push %rbx
4729(3): mov %rdi,%rbx
472c(3): mov %rdx,%r12
472f(4): sub $0x18,%rsp
4733(9): mov $0x28,%rax
473c(5): mov %rax,0x8(%rsp)
4741(2): xor %eax,%eax
4743(5): lea 0x4(%rsp),%rax
4748(3): test %rdi,%rdi
474b(4): cmove %rax,%rbx
474f(3): mov %rbx,%rdi
4752(5): call 0xffffcc1e(%rip)
4757(4): cmp $0xfffffffd,%rax
475b(3): mov %rax,%rbp
475e(2): jbe 0x22(%rip)
4760(3): test %r12,%r12
4763(2): jz 0x1d(%rip)
4765(2): xor %edi,%edi
4767(5): call 0xc9(%rip)
476c(2): test %al,%al
476e(2): jnz 0x12(%rip)
4770(5): movzx 0x0(%r13),%eax
4775(5): mov $0x1,%ebp
477a(2): mov %eax,(%rbx)
477c(4): nop 0x0(%rax)
4780(5): mov 0x8(%rsp),%rdx
4785(9): xor $0x28,%rdx
478e(3): mov %rbp,%rax
4791(2): jnz 0xd(%rip)
4793(4): add $0x18,%rsp
4797(1): pop %rbx
4798(1): pop %rbp
4799(2): pop %r12
479b(2): pop %r13
479d(1): ret near (%rsp)
479e(5): call 0xffffcbb2(%rip)

"close_stream" :
47b0(2): push %r12
47b2(1): push %rbp
47b3(3): mov %rdi,%rbp
47b6(1): push %rbx
47b7(5): call 0xffffcb09(%rip)
47bc(3): mov 0x0(%rbp),%ebx
47bf(3): mov %rbp,%rdi
47c2(3): mov %rax,%r12
47c5(5): call 0x10b(%rip)
47ca(3): and $0x20,%ebx
47cd(2): test %ebx,%ebx
47cf(2): jnz 0x19(%rip)
47d1(2): test %eax,%eax
47d3(2): jz 0xc(%rip)
47d5(3): test %r12,%r12
47d8(5): mov $0xffffffff,%eax
47dd(2): jz 0x3b(%rip)
47df(1): pop %rbx
47e0(1): pop %rbp
47e1(2): pop %r12
47e3(1): ret near (%rsp)
47e4(4): nop 0x0(%rax)
47e8(2): test %eax,%eax
47ea(2): jnz 0x1e(%rip)
47ec(5): call 0xffffcaa4(%rip)
47f1(6): mov $0x0,(%rax)
47f7(5): mov $0xffffffff,%eax
47fc(1): pop %rbx
47fd(1): pop %rbp
47fe(2): pop %r12
4800(1): ret near (%rsp)
4801(7): nop 0x0(%rax)
4808(1): pop %rbx
4809(5): mov $0xffffffff,%eax
480e(1): pop %rbp
480f(2): pop %r12
4811(1): ret near (%rsp)
4812(6): nop 0x0(%rax,%rax,1)
4818(5): call 0xffffca78(%rip)
481d(3): cmp $0x9,(%rax)
4820(1): pop %rbx
4821(1): pop %rbp
4822(2): pop %r12
4824(3): setnz %al
4827(3): movzx %al,%eax
482a(2): neg %eax
482c(1): ret near (%rsp)

"hard_locale" :
4830(4): sub $0x8,%rsp
4834(2): xor %esi,%esi
4836(5): call 0xffffcc3a(%rip)
483b(3): mov %rax,%rdx
483e(5): mov $0x1,%eax
4843(3): test %rdx,%rdx
4846(2): jz 0x1f(%rip)
4848(7): lea 0xfd1(%rip),%rdi
484f(5): mov $0x2,%ecx
4854(3): mov %rdx,%rsi
4857(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4859(3): setnbe %cl
485c(3): sbb $0x0,%cl
485f(2): xor %eax,%eax
4861(2): test %cl,%cl
4863(2): jnz 0xd(%rip)
4865(4): add $0x8,%rsp
4869(1): ret near (%rsp)
486a(6): nop 0x0(%rax,%rax,1)
4870(7): lea 0xfab(%rip),%rdi
4877(5): mov $0x6,%ecx
487c(3): mov %rdx,%rsi
487f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4881(3): setnbe %al
4884(2): sbb $0x0,%al
4886(2): test %al,%al
4888(3): setnz %al
488b(4): add $0x8,%rsp
488f(1): ret near (%rsp)

"locale_charset" :
4890(4): sub $0x8,%rsp
4894(5): mov $0xe,%edi
4899(5): call 0xffffcba7(%rip)
489e(3): test %rax,%rax
48a1(2): jz 0x1f(%rip)
48a3(3): cmp $0x0,(%rax)
48a6(7): lea 0xf7b(%rip),%rdx
48ad(4): cmove %rdx,%rax
48b1(4): add $0x8,%rsp
48b5(1): ret near (%rsp)
48b6(a): nop 0x0(%rax,%rax,1)
48c0(7): lea 0xf61(%rip),%rax
48c7(4): add $0x8,%rsp
48cb(1): ret near (%rsp)

"rpl_fclose" :
48d0(2): push %r12
48d2(1): push %rbp
48d3(1): push %rbx
48d4(3): mov %rdi,%rbx
48d7(5): call 0xffffcb39(%rip)
48dc(2): test %eax,%eax
48de(3): mov %rbx,%rdi
48e1(2): js 0x56(%rip)
48e3(5): call 0xffffcb6d(%rip)
48e8(2): test %eax,%eax
48ea(2): jnz 0x2e(%rip)
48ec(3): mov %rbx,%rdi
48ef(5): call 0x61(%rip)
48f4(2): test %eax,%eax
48f6(2): jz 0x3e(%rip)
48f8(5): call 0xffffc998(%rip)
48fd(3): mov (%rax),%r12d
4900(3): mov %rbx,%rdi
4903(3): mov %rax,%rbp
4906(5): call 0xffffc9ea(%rip)
490b(3): test %r12d,%r12d
490e(2): jnz 0x32(%rip)
4910(1): pop %rbx
4911(1): pop %rbp
4912(2): pop %r12
4914(1): ret near (%rsp)
4915(3): nop (%rax)
4918(3): mov %rbx,%rdi
491b(5): call 0xffffcaf5(%rip)
4920(2): xor %esi,%esi
4922(5): mov $0x1,%edx
4927(2): mov %eax,%edi
4929(5): call 0xffffca77(%rip)
492e(4): cmp $0xffffffff,%rax
4932(2): jnz 0xffffffba(%rip)
4934(3): mov %rbx,%rdi
4937(1): pop %rbx
4938(1): pop %rbp
4939(2): pop %r12
493b(5): jmp 0xffffc9b5(%rip)
4940(4): mov %r12d,0x0(%rbp)
4944(5): mov $0xffffffff,%eax
4949(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4950(3): test %rdi,%rdi
4953(1): push %rbx
4954(3): mov %rdi,%rbx
4957(2): jz 0x13(%rip)
4959(5): call 0xffffcaf7(%rip)
495e(2): test %eax,%eax
4960(2): jz 0xa(%rip)
4962(6): test $0x100,(%rbx)
4968(2): jnz 0x10(%rip)
496a(3): mov %rbx,%rdi
496d(1): pop %rbx
496e(5): jmp 0xffffcac2(%rip)
4973(5): nop 0x0(%rax,%rax,1)
4978(3): mov %rbx,%rdi
497b(5): mov $0x1,%edx
4980(2): xor %esi,%esi
4982(5): call 0xe(%rip)
4987(3): mov %rbx,%rdi
498a(1): pop %rbx
498b(5): jmp 0xffffcaa5(%rip)

"rpl_fseeko" :
4990(4): mov 0x8(%rdi),%rax
4994(4): cmp %rax,0x10(%rdi)
4998(2): jz 0x8(%rip)
499a(5): jmp 0xffffcb06(%rip)
499f(1): nop 
49a0(4): mov 0x20(%rdi),%rax
49a4(4): cmp %rax,0x28(%rdi)
49a8(2): jnz 0xfffffff2(%rip)
49aa(5): cmp $0x0,0x48(%rdi)
49af(2): jnz 0xffffffeb(%rip)
49b1(2): push %r12
49b3(1): push %rbp
49b4(3): mov %edx,%r12d
49b7(1): push %rbx
49b8(3): mov %rsi,%rbp
49bb(3): mov %rdi,%rbx
49be(5): call 0xffffca52(%rip)
49c3(3): mov %r12d,%edx
49c6(3): mov %rbp,%rsi
49c9(2): mov %eax,%edi
49cb(5): call 0xffffc9d5(%rip)
49d0(4): cmp $0xffffffff,%rax
49d4(2): jz 0xe(%rip)
49d6(3): and $0xef,(%rbx)
49d9(7): mov %rax,0x90(%rbx)
49e0(2): xor %eax,%eax
49e2(1): pop %rbx
49e3(1): pop %rbp
49e4(2): pop %r12
49e6(1): ret near (%rsp)

"__libc_csu_init" :
49f0(2): push %r15
49f2(2): push %r14
49f4(3): mov %rdx,%r15
49f7(2): push %r13
49f9(2): push %r12
49fb(7): lea 0x20218e(%rip),%r12
4a02(1): push %rbp
4a03(7): lea 0x20218e(%rip),%rbp
4a0a(1): push %rbx
4a0b(3): mov %edi,%r13d
4a0e(3): mov %rsi,%r14
4a11(3): sub %r12,%rbp
4a14(4): sub $0x8,%rsp
4a18(4): sar $0x3,%rbp
4a1c(5): call 0xffffc824(%rip)
4a21(3): test %rbp,%rbp
4a24(2): jz 0x22(%rip)
4a26(2): xor %ebx,%ebx
4a28(8): nop 0x0(%rax,%rax,1)
4a30(3): mov %r15,%rdx
4a33(3): mov %r14,%rsi
4a36(3): mov %r13d,%edi
4a39(4): call 0x0(%r12,%rbx,8)
4a3d(4): add $0x1,%rbx
4a41(3): cmp %rbx,%rbp
4a44(2): jnz 0xffffffec(%rip)
4a46(4): add $0x8,%rsp
4a4a(1): pop %rbx
4a4b(1): pop %rbp
4a4c(2): pop %r12
4a4e(2): pop %r13
4a50(2): pop %r14
4a52(2): pop %r15
4a54(1): ret near (%rsp)

"atexit" :
4a70(7): mov 0x202591(%rip),%rdx
4a77(2): xor %esi,%esi
4a79(5): jmp 0xffffca37(%rip)

"_fini" :
4a80(4): sub $0x8,%rsp
4a84(4): add $0x8,%rsp
4a88(1): ret near (%rsp)

