
"__ctype_toupper_loc@plt" :
1a10(6): jmp 0x20f36a(%rip)
1a16(5): push $0x0

"getenv@plt" :
1a20(6): jmp 0x20f362(%rip)
1a26(5): push $0x1

"sigprocmask@plt" :
1a30(6): jmp 0x20f35a(%rip)
1a36(5): push $0x2

"__snprintf_chk@plt" :
1a40(6): jmp 0x20f352(%rip)
1a46(5): push $0x3

"raise@plt" :
1a50(6): jmp 0x20f34a(%rip)
1a56(5): push $0x4

"free@plt" :
1a60(6): jmp 0x20f342(%rip)
1a66(5): push $0x5

"abort@plt" :
1a70(6): jmp 0x20f33a(%rip)
1a76(5): push $0x6

"__errno_location@plt" :
1a80(6): jmp 0x20f332(%rip)
1a86(5): push $0x7

"fdatasync@plt" :
1a90(6): jmp 0x20f32a(%rip)
1a96(5): push $0x8

"error_at_line@plt" :
1aa0(6): jmp 0x20f322(%rip)
1aa6(5): push $0x9

"strncmp@plt" :
1ab0(6): jmp 0x20f31a(%rip)
1ab6(5): push $0xa

"_exit@plt" :
1ac0(6): jmp 0x20f312(%rip)
1ac6(5): push $0xb

"__fpending@plt" :
1ad0(6): jmp 0x20f30a(%rip)
1ad6(5): push $0xc

"sigaction@plt" :
1ae0(6): jmp 0x20f302(%rip)
1ae6(5): push $0xd

"localeconv@plt" :
1af0(6): jmp 0x20f2fa(%rip)
1af6(5): push $0xe

"fcntl@plt" :
1b00(6): jmp 0x20f2f2(%rip)
1b06(5): push $0xf

"clock_gettime@plt" :
1b10(6): jmp 0x20f2ea(%rip)
1b16(5): push $0x10

"write@plt" :
1b20(6): jmp 0x20f2e2(%rip)
1b26(5): push $0x11

"textdomain@plt" :
1b30(6): jmp 0x20f2da(%rip)
1b36(5): push $0x12

"fclose@plt" :
1b40(6): jmp 0x20f2d2(%rip)
1b46(5): push $0x13

"bindtextdomain@plt" :
1b50(6): jmp 0x20f2ca(%rip)
1b56(5): push $0x14

"dcgettext@plt" :
1b60(6): jmp 0x20f2c2(%rip)
1b66(5): push $0x15

"__ctype_get_mb_cur_max@plt" :
1b70(6): jmp 0x20f2ba(%rip)
1b76(5): push $0x16

"strlen@plt" :
1b80(6): jmp 0x20f2b2(%rip)
1b86(5): push $0x17

"__stack_chk_fail@plt" :
1b90(6): jmp 0x20f2aa(%rip)
1b96(5): push $0x18

"getopt_long@plt" :
1ba0(6): jmp 0x20f2a2(%rip)
1ba6(5): push $0x19

"mbrtowc@plt" :
1bb0(6): jmp 0x20f29a(%rip)
1bb6(5): push $0x1a

"dup2@plt" :
1bc0(6): jmp 0x20f292(%rip)
1bc6(5): push $0x1b

"strchr@plt" :
1bd0(6): jmp 0x20f28a(%rip)
1bd6(5): push $0x1c

"__overflow@plt" :
1be0(6): jmp 0x20f282(%rip)
1be6(5): push $0x1d

"strrchr@plt" :
1bf0(6): jmp 0x20f27a(%rip)
1bf6(5): push $0x1e

"ftruncate@plt" :
1c00(6): jmp 0x20f272(%rip)
1c06(5): push $0x1f

"lseek@plt" :
1c10(6): jmp 0x20f26a(%rip)
1c16(5): push $0x20

"__assert_fail@plt" :
1c20(6): jmp 0x20f262(%rip)
1c26(5): push $0x21

"__strtoul_internal@plt" :
1c30(6): jmp 0x20f25a(%rip)
1c36(5): push $0x22

"memset@plt" :
1c40(6): jmp 0x20f252(%rip)
1c46(5): push $0x23

"ioctl@plt" :
1c50(6): jmp 0x20f24a(%rip)
1c56(5): push $0x24

"close@plt" :
1c60(6): jmp 0x20f242(%rip)
1c66(5): push $0x25

"posix_fadvise@plt" :
1c70(6): jmp 0x20f23a(%rip)
1c76(5): push $0x26

"read@plt" :
1c80(6): jmp 0x20f232(%rip)
1c86(5): push $0x27

"memcmp@plt" :
1c90(6): jmp 0x20f22a(%rip)
1c96(5): push $0x28

"fputs_unlocked@plt" :
1ca0(6): jmp 0x20f222(%rip)
1ca6(5): push $0x29

"calloc@plt" :
1cb0(6): jmp 0x20f21a(%rip)
1cb6(5): push $0x2a

"__memcpy_chk@plt" :
1cc0(6): jmp 0x20f212(%rip)
1cc6(5): push $0x2b

"sigemptyset@plt" :
1cd0(6): jmp 0x20f20a(%rip)
1cd6(5): push $0x2c

"memcpy@plt" :
1ce0(6): jmp 0x20f202(%rip)
1ce6(5): push $0x2d

"fileno@plt" :
1cf0(6): jmp 0x20f1fa(%rip)
1cf6(5): push $0x2e

"malloc@plt" :
1d00(6): jmp 0x20f1f2(%rip)
1d06(5): push $0x2f

"fflush@plt" :
1d10(6): jmp 0x20f1ea(%rip)
1d16(5): push $0x30

"nl_langinfo@plt" :
1d20(6): jmp 0x20f1e2(%rip)
1d26(5): push $0x31

"__fxstat@plt" :
1d30(6): jmp 0x20f1da(%rip)
1d36(5): push $0x32

"__freading@plt" :
1d40(6): jmp 0x20f1d2(%rip)
1d46(5): push $0x33

"realloc@plt" :
1d50(6): jmp 0x20f1ca(%rip)
1d56(5): push $0x34

"setlocale@plt" :
1d60(6): jmp 0x20f1c2(%rip)
1d66(5): push $0x35

"__printf_chk@plt" :
1d70(6): jmp 0x20f1ba(%rip)
1d76(5): push $0x36

"memmove@plt" :
1d80(6): jmp 0x20f1b2(%rip)
1d86(5): push $0x37

"error@plt" :
1d90(6): jmp 0x20f1aa(%rip)
1d96(5): push $0x38

"fsync@plt" :
1da0(6): jmp 0x20f1a2(%rip)
1da6(5): push $0x39

"open@plt" :
1db0(6): jmp 0x20f19a(%rip)
1db6(5): push $0x3a

"fseeko@plt" :
1dc0(6): jmp 0x20f192(%rip)
1dc6(5): push $0x3b

"dcngettext@plt" :
1dd0(6): jmp 0x20f18a(%rip)
1dd6(5): push $0x3c

"__cxa_atexit@plt" :
1de0(6): jmp 0x20f182(%rip)
1de6(5): push $0x3d

"getpagesize@plt" :
1df0(6): jmp 0x20f17a(%rip)
1df6(5): push $0x3e

"sigismember@plt" :
1e00(6): jmp 0x20f172(%rip)
1e06(5): push $0x3f

"exit@plt" :
1e10(6): jmp 0x20f16a(%rip)
1e16(5): push $0x40

"fwrite@plt" :
1e20(6): jmp 0x20f162(%rip)
1e26(5): push $0x41

"__fprintf_chk@plt" :
1e30(6): jmp 0x20f15a(%rip)
1e36(5): push $0x42

"mbsinit@plt" :
1e40(6): jmp 0x20f152(%rip)
1e46(5): push $0x43

"iswprint@plt" :
1e50(6): jmp 0x20f14a(%rip)
1e56(5): push $0x44

"sigaddset@plt" :
1e60(6): jmp 0x20f142(%rip)
1e66(5): push $0x45

"__ctype_tolower_loc@plt" :
1e70(6): jmp 0x20f13a(%rip)
1e76(5): push $0x46

"__ctype_b_loc@plt" :
1e80(6): jmp 0x20f132(%rip)
1e86(5): push $0x47

"__sprintf_chk@plt" :
1e90(6): jmp 0x20f12a(%rip)
1e96(5): push $0x48

".plt.got" :
1ea0(6): jmp 0x20f142(%rip)
1ea6(2): nop 

"_init" :
19e8(4): sub $0x8,%rsp
19ec(7): mov 0x20f5e5(%rip),%rax
19f3(3): test %rax,%rax
19f6(2): jz 0x4(%rip)
19f8(2): call %rax
19fa(4): add $0x8,%rsp
19fe(1): ret near (%rsp)

"main" :
1eb0(2): push %r15
1eb2(2): push %r14
1eb4(2): push %r13
1eb6(2): push %r12
1eb8(3): mov %edi,%r12d
1ebb(1): push %rbp
1ebc(1): push %rbx
1ebd(7): lea 0xa978(%rip),%rdi
1ec4(3): mov %rsi,%rbp
1ec7(7): sub $0xe8,%rsp
1ece(9): mov $0x28,%rax
1ed7(8): mov %rax,0xd8(%rsp)
1edf(2): xor %eax,%eax
1ee1(5): call 0xfffffb3f(%rip)
1ee6(7): lea 0x20f393(%rip),%rdi
1eed(3): mov %rax,%rbx
1ef0(5): call 0xfffffde0(%rip)
1ef5(3): test %rbx,%rbx
1ef8(6): jz 0x1682(%rip)
1efe(5): lea 0x40(%rsp),%rax
1f03(2): xor %esi,%esi
1f05(5): mov $0x2,%edi
1f0a(3): mov %rax,%rdx
1f0d(5): mov %rax,0x20(%rsp)
1f12(5): call 0xfffffbce(%rip)
1f17(6): cmp $0x1,0x40(%rsp)
1f1d(2): jz 0x13(%rip)
1f1f(7): lea 0x20f35a(%rip),%rdi
1f26(5): mov $0x2,%esi
1f2b(5): call 0xffffff35(%rip)
1f30(8): movdqa 0x20f348(%rip),%xmm0
1f38(7): lea 0x20f341(%rip),%rdi
1f3f(5): mov $0xa,%esi
1f44(5): movups %xmm0,0x48(%rsp)
1f49(8): movdqa 0x20f33f(%rip),%xmm0
1f51(5): movups %xmm0,0x58(%rsp)
1f56(8): movdqa 0x20f342(%rip),%xmm0
1f5e(5): movups %xmm0,0x68(%rsp)
1f63(8): movdqa 0x20f345(%rip),%xmm0
1f6b(5): movups %xmm0,0x78(%rsp)
1f70(8): movdqa 0x20f348(%rip),%xmm0
1f78(8): movups %xmm0,0x88(%rsp)
1f80(8): movdqa 0x20f348(%rip),%xmm0
1f88(8): movups %xmm0,0x98(%rsp)
1f90(8): movdqa 0x20f348(%rip),%xmm0
1f98(8): movups %xmm0,0xa8(%rsp)
1fa0(8): movdqa 0x20f348(%rip),%xmm0
1fa8(8): movups %xmm0,0xb8(%rsp)
1fb0(5): call 0xfffffe50(%rip)
1fb5(2): test %eax,%eax
1fb7(2): jz 0x2a(%rip)
1fb9(5): mov 0x20(%rsp),%rsi
1fbe(7): lea 0x1ddb(%rip),%rax
1fc5(2): xor %edx,%edx
1fc7(5): mov $0xa,%edi
1fcc(b): mov $0x0,0xc8(%rsp)
1fd7(5): mov %rax,0x40(%rsp)
1fdc(5): call 0xfffffb04(%rip)
1fe1(7): lea 0x20f298(%rip),%rdi
1fe8(5): mov $0x2,%esi
1fed(5): call 0xfffffe13(%rip)
1ff2(2): test %eax,%eax
1ff4(2): jz 0x2a(%rip)
1ff6(5): mov 0x20(%rsp),%rsi
1ffb(7): lea 0x1d8e(%rip),%rax
2002(2): xor %edx,%edx
2004(5): mov $0x2,%edi
2009(b): mov $0xc0000000,0xc8(%rsp)
2014(5): mov %rax,0x40(%rsp)
2019(5): call 0xfffffac7(%rip)
201e(4): mov 0x0(%rbp),%rdi
2022(7): lea 0x20f137(%rip),%rbx
2029(5): call 0x4f77(%rip)
202e(7): lea 0xc76c(%rip),%rsi
2035(5): mov $0x6,%edi
203a(5): call 0xfffffd26(%rip)
203f(7): lea 0xa806(%rip),%rsi
2046(7): lea 0xa729(%rip),%rdi
204d(5): call 0xfffffb03(%rip)
2052(7): lea 0xa71d(%rip),%rdi
2059(5): call 0xfffffad7(%rip)
205e(7): lea 0x26cb(%rip),%rdi
2065(5): call 0xa57b(%rip)
206a(5): call 0xfffffd86(%rip)
206f(2): cwde 
2071(4): sub $0x8,%rsp
2075(7): mov 0x20efac(%rip),%r8
207c(7): mov %rax,0x20f355(%rip)
2083(7): lea 0xa7da(%rip),%rax
208a(2): push $0x0
208c(7): lea 0xa6e3(%rip),%rcx
2093(7): lea 0xa65a(%rip),%rdx
209a(6): mov $0x1,%r9d
20a0(1): push %rax
20a1(7): lea 0xa7c8(%rip),%rax
20a8(3): mov %rbp,%rsi
20ab(3): mov %r12d,%edi
20ae(1): push %rax
20af(7): lea 0xa7ca(%rip),%rax
20b6(1): push %rax
20b7(7): lea 0x2f72(%rip),%rax
20be(1): push %rax
20bf(2): xor %eax,%eax
20c1(5): call 0x4d9f(%rip)
20c6(7): mov $0x0,0x20ef4b(%rip)
20cd(4): add $0x30,%rsp
20d1(2): xor %eax,%eax
20d3(5): nop 0x0(%rax,%rax,1)
20d8(3): mov %al,0x0(%rbx,%rax,1)
20db(4): add $0x1,%rax
20df(6): cmp $0x100,%rax
20e5(2): jnz 0xfffffff3(%rip)
20e7(6): mov 0x20efe3(%rip),%eax
20ed(3): cmp %eax,%r12d
20f0(6): jle 0x942(%rip)
20f6(3): movsxd %eax,%rdx
20f9(2): not %eax
20fb(9): mov $0x0,0x8(%rsp)
2104(3): add %r12d,%eax
2107(5): lea 0x0(%rbp,%rdx,8),%r14
210c(3): xor %r12d,%r12d
210f(3): add %rdx,%rax
2112(9): mov $0xffffffff,0x10(%rsp)
211b(3): xor %r15d,%r15d
211e(5): lea 0x8(%rbp,%rax,8),%rbp
2123(5): lea 0x38(%rsp),%rax
2128(5): mov %rax,0x18(%rsp)
212d(3): nop (%rax)
2130(3): mov (%r14),%r13
2133(5): mov $0x3d,%esi
2138(3): mov %r13,%rdi
213b(5): call 0xfffffa95(%rip)
2140(3): test %rax,%rax
2143(6): jz 0x17de(%rip)
2149(4): lea 0x1(%rax),%r8
214d(7): lea 0xa6a1(%rip),%rcx
2154(3): mov %r13,%rdx
2157(5): mov $0x69,%esi
215c(4): nop 0x0(%rax)
2160(4): add $0x1,%rdx
2164(4): add $0x1,%rcx
2168(4): cmp %sil,0xffffffff(%rdx)
216c(6): jnz 0x744(%rip)
2172(3): movzx (%rcx),%esi
2175(3): test %sil,%sil
2178(2): jnz 0xffffffe8(%rip)
217a(3): movzx (%rdx),%eax
217d(2): cmp $0x3d,%al
217f(2): jz 0xa(%rip)
2181(2): test %al,%al
2183(6): jnz 0x72d(%rip)
2189(7): mov %r8,0x20f258(%rip)
2190(4): add $0x8,%r14
2194(3): cmp %r14,%rbp
2197(2): jnz 0xffffff99(%rip)
2199(3): test %r15,%r15
219c(6): jz 0x8ab(%rip)
21a2(7): mov %r15,0x20f21f(%rip)
21a9(7): mov %r15,0x20f220(%rip)
21b0(8): cmp $0x0,0x20f208(%rip)
21b8(2): jnz 0x9(%rip)
21ba(7): and $0xe7,0x20f1cb(%rip)
21c1(6): mov 0x20f1c1(%rip),%eax
21c7(5): test $0x101000,%eax
21cc(2): jz 0xd(%rip)
21ce(5): or $0x101000,%eax
21d3(6): mov %eax,0x20f1af(%rip)
21d9(6): mov 0x20f1a5(%rip),%esi
21df(4): test $0x1,%sil
21e3(6): jnz 0x19a0(%rip)
21e9(6): mov 0x20f199(%rip),%ecx
21ef(3): test $0x10,%cl
21f2(6): jnz 0x1a6d(%rip)
21f8(4): test $0xc,%sil
21fc(6): jnz 0x1a34(%rip)
2202(3): test $0x8,%cl
2205(5): mov 0x8(%rsp),%rax
220a(6): jz 0x813(%rip)
2210(3): test %rax,%rax
2213(6): jnz 0x871(%rip)
2219(3): test $0x4,%cl
221c(5): mov 0x10(%rsp),%rax
2221(6): jz 0x7e6(%rip)
2227(4): cmp $0xffffffff,%rax
222b(2): jz 0x19(%rip)
222d(2): xor %edx,%edx
222f(7): div 0x20f19a(%rip),%rax
2236(7): mov %rax,0x20ede3(%rip)
223d(7): mov %rdx,0x20f14c(%rip)
2244(4): test $0x10,%sil
2248(6): jz 0x7aa(%rip)
224e(3): test %r12,%r12
2251(6): jnz 0x886(%rip)
2257(6): mov 0x20f12f(%rip),%ebp
225d(2): mov %ecx,%eax
225f(3): and $0x1,%eax
2262(6): test $0x800,%ebp
2268(6): jnz 0xd9c(%rip)
226e(2): test %eax,%eax
2270(6): jz 0x830(%rip)
2276(7): lea 0x2913(%rip),%rax
227d(7): mov $0x0,0x20f0a4(%rip)
2284(7): mov %rax,0x20efd5(%rip)
228b(2): mov %ecx,%eax
228d(3): and $0xfe,%eax
2290(6): mov %eax,0x20f0f2(%rip)
2296(2): mov %ebp,%eax
2298(3): and $0x7,%eax
229b(3): lea 0xffffffff(%rax),%edx
229e(2): test %eax,%edx
22a0(6): jnz 0x196c(%rip)
22a6(2): mov %ebp,%eax
22a8(3): and $0x18,%eax
22ab(3): lea 0xffffffff(%rax),%edx
22ae(2): test %eax,%edx
22b0(6): jnz 0x1787(%rip)
22b6(2): mov %ebp,%eax
22b8(3): and $0x60,%eax
22bb(3): lea 0xffffffff(%rax),%edx
22be(2): test %eax,%edx
22c0(6): jnz 0x179b(%rip)
22c6(2): mov %ebp,%eax
22c8(5): and $0x3000,%eax
22cd(3): lea 0xffffffff(%rax),%edx
22d0(2): test %eax,%edx
22d2(6): jnz 0x17bf(%rip)
22d8(2): mov %ecx,%eax
22da(5): and $0x4002,%eax
22df(3): lea 0xffffffff(%rax),%edx
22e2(2): test %eax,%edx
22e4(6): jnz 0x17d1(%rip)
22ea(2): mov %esi,%eax
22ec(5): and $0x4002,%eax
22f1(3): lea 0xffffffff(%rax),%edx
22f4(2): and %eax,%edx
22f6(4): mov %edx,0x28(%rsp)
22fa(6): jnz 0x17bb(%rip)
2300(3): test $0x2,%cl
2303(2): jz 0x38(%rip)
2305(2): xor %eax,%eax
2307(8): cmp $0x0,0x20ed11(%rip)
230f(7): mov $0x1,0x20ef55(%rip)
2316(2): jnz 0xf(%rip)
2318(2): xor %eax,%eax
231a(8): cmp $0x0,0x20f06e(%rip)
2322(3): setz %al
2325(6): mov %al,0x20ef3e(%rip)
232b(7): and $0x1,0x20ef37(%rip)
2332(3): and $0xfc,%ecx
2335(6): mov %ecx,0x20f04d(%rip)
233b(4): test $0x2,%sil
233f(2): jz 0x38(%rip)
2341(2): xor %eax,%eax
2343(8): cmp $0x0,0x20ecd5(%rip)
234b(7): mov $0x1,0x20ef18(%rip)
2352(2): jnz 0xf(%rip)
2354(2): xor %eax,%eax
2356(8): cmp $0x0,0x20f032(%rip)
235e(3): setz %al
2361(6): mov %al,0x20ef01(%rip)
2367(7): and $0x1,0x20eefa(%rip)
236e(3): and $0xfd,%esi
2371(6): mov %esi,0x20f00d(%rip)
2377(4): test $0x1,%bpl
237b(2): jz 0x37(%rip)
237d(7): lea 0x20eddc(%rip),%rax
2384(7): lea 0xb855(%rip),%rcx
238b(7): lea 0x100(%rax),%rsi
2392(6): nop 0x0(%rax,%rax,1)
2398(3): movzx (%rax),%edx
239b(4): add $0x1,%rax
239f(4): movzx 0x0(%rcx,%rdx,1),%edx
23a3(3): mov %dl,0xffffffff(%rax)
23a6(3): cmp %rax,%rsi
23a9(2): jnz 0xffffffef(%rip)
23ab(7): mov $0x1,0x20efce(%rip)
23b2(4): test $0x40,%bpl
23b6(6): jz 0xc02(%rip)
23bc(5): call 0xfffff654(%rip)
23c1(3): mov (%rax),%rsi
23c4(7): lea 0x20ed95(%rip),%rax
23cb(7): lea 0x100(%rax),%rcx
23d2(6): nop 0x0(%rax,%rax,1)
23d8(3): movzx (%rax),%edx
23db(4): add $0x1,%rax
23df(3): mov 0x0(%rsi,%rdx,4),%edx
23e2(3): mov %dl,0xffffffff(%rax)
23e5(3): cmp %rax,%rcx
23e8(2): jnz 0xfffffff0(%rip)
23ea(7): mov $0x1,0x20ef8f(%rip)
23f1(4): test $0x2,%bpl
23f5(6): jz 0xb8b(%rip)
23fb(7): lea 0x20ed5e(%rip),%rax
2402(7): lea 0xb9d7(%rip),%rcx
2409(7): lea 0x100(%rax),%rsi
2410(3): movzx (%rax),%edx
2413(4): add $0x1,%rax
2417(4): movzx 0x0(%rcx,%rdx,1),%edx
241b(3): mov %dl,0xffffffff(%rax)
241e(3): cmp %rax,%rsi
2421(2): jnz 0xffffffef(%rip)
2423(7): mov $0x1,0x20ef56(%rip)
242a(7): mov $0x25,0x20ebe9(%rip)
2431(7): mov $0x40,0x20ebe1(%rip)
2438(7): mov 0x20efa9(%rip),%rbp
243f(7): mov 0x20ef42(%rip),%r12d
2446(5): call 0xfffff63a(%rip)
244b(5): mov %rax,0x10(%rsp)
2450(3): test %rbp,%rbp
2453(6): jz 0xde2(%rip)
2459(2): xor %ecx,%ecx
245b(2): xor %edi,%edi
245d(3): mov %r12d,%edx
2460(3): mov %rbp,%rsi
2463(5): call 0x25bd(%rip)
2468(2): test %eax,%eax
246a(6): js 0x1762(%rip)
2470(2): xor %esi,%esi
2472(5): mov $0x1,%edx
2477(2): xor %edi,%edi
2479(5): call 0xfffff797(%rip)
247e(3): mov %rax,%rdx
2481(7): mov 0x20ef58(%rip),%rsi
2488(7): mov 0x20eef5(%rip),%r12d
248f(3): not %rdx
2492(4): shr $0x3f,%rdx
2496(3): test %rax,%rax
2499(6): mov %dl,0x20ee9d(%rip)
249f(5): mov $0x0,%edx
24a4(4): cmovs %rdx,%rax
24a8(3): test %rsi,%rsi
24ab(7): mov %rax,0x20ee7e(%rip)
24b2(5): mov 0x10(%rsp),%rax
24b7(2): mov (%rax),%eax
24b9(6): mov %eax,0x20ee79(%rip)
24bf(6): jz 0x10d1(%rip)
24c5(6): mov 0x20eec1(%rip),%eax
24cb(2): xor %edx,%edx
24cd(2): mov %eax,%ebp
24cf(3): test $0x10,%ah
24d2(3): setz %dl
24d5(3): sar $0x6,%ebp
24d8(6): and $0x80,%ebp
24de(3): shl/sal $0x6,%edx
24e1(3): or %r12d,%ebp
24e4(2): or %edx,%ebp
24e6(8): cmp $0x0,0x20eeba(%rip)
24ee(6): jnz 0xbce(%rip)
24f4(5): and $0x200,%eax
24f9(3): cmp $0x1,%eax
24fc(2): sbb %eax,%eax
24fe(5): and $0x200,%eax
2503(2): or %eax,%ebp
2505(2): mov %ebp,%edx
2507(5): mov $0x1b6,%ecx
250c(5): mov $0x1,%edi
2511(3): or $0x1,%edx
2514(5): call 0x250c(%rip)
2519(2): test %eax,%eax
251b(6): js 0x15be(%rip)
2521(7): mov 0x20ee80(%rip),%rbp
2528(3): test %rbp,%rbp
252b(2): jz 0x48(%rip)
252d(7): test $0x2,0x20ee59(%rip)
2534(2): jnz 0x3f(%rip)
2536(7): mov 0x20ee8b(%rip),%r14
253d(2): xor %edx,%edx
253f(a): mov $0x9223372036854775807,%rax
2549(3): mov %rbp,%r12
254c(3): div %r14,%rax
254f(4): imul %r14,%r12
2553(7): add 0x20ee46(%rip),%r12
255a(3): cmp %rax,%rbp
255d(6): jnbe 0x15bc(%rip)
2563(3): mov %r12,%rdi
2566(5): call 0x288a(%rip)
256b(2): test %eax,%eax
256d(6): jnz 0xf60(%rip)
2573(5): call 0x39ed(%rip)
2578(7): mov 0x20ee39(%rip),%r14
257f(7): mov %rax,0x20edca(%rip)
2586(6): add $0x3b9aca00,%rax
258c(7): mov %rax,0x20edb5(%rip)
2593(3): test %r14,%r14
2596(2): jnz 0xc(%rip)
2598(8): cmp $0x0,0x20ee10(%rip)
25a0(2): jz 0x5e(%rip)
25a2(7): mov 0x20ee27(%rip),%r15
25a9(7): mov 0x20ee38(%rip),%rsi
25b0(7): lea 0x20edf9(%rip),%r8
25b7(2): xor %edi,%edi
25b9(3): mov %r14,%rdx
25bc(7): mov 0x20ed6d(%rip),%rbp
25c3(7): mov 0x20ede6(%rip),%r12
25ca(3): mov %r15,%rcx
25cd(5): call 0x3163(%rip)
25d2(3): test %rax,%rax
25d5(6): jnz 0x534(%rip)
25db(3): mov %r14,%rax
25de(3): add %r12,%rbp
25e1(4): imul %r15,%rax
25e5(3): add %rbp,%rax
25e8(7): cmp 0x20ed41(%rip),%rax
25ef(2): jz 0xf(%rip)
25f1(7): cmp $0x1,0x20ed31(%rip)
25f8(6): jnz 0x511(%rip)
25fe(7): mov 0x20eda3(%rip),%rdx
2605(7): mov 0x20ed94(%rip),%rax
260c(3): test %rdx,%rdx
260f(2): jnz 0xb(%rip)
2611(3): test %rax,%rax
2614(6): jz 0x96(%rip)
261a(7): mov 0x20eda7(%rip),%rcx
2621(7): mov 0x20edb8(%rip),%rsi
2628(5): lea 0x38(%rsp),%r8
262d(5): mov $0x1,%edi
2632(5): mov %rax,0x38(%rsp)
2637(5): call 0x30f9(%rip)
263c(3): test %rax,%rax
263f(3): mov %rax,%r12
2642(6): jz 0xaa2(%rip)
2648(7): mov 0x20ed79(%rip),%rdx
264f(7): mov 0x20ecba(%rip),%rdi
2656(2): xor %esi,%esi
2658(5): call 0xfffff5e8(%rip)
265d(3): nop (%rax)
2660(7): mov 0x20ed61(%rip),%rbp
2667(7): mov 0x20eca2(%rip),%rdi
266e(3): mov %rbp,%rsi
2671(5): call 0x27bf(%rip)
2676(3): cmp %rax,%rbp
2679(6): jnz 0x12e1(%rip)
267f(4): sub $0x1,%r12
2683(2): jnz 0xffffffdd(%rip)
2685(6): cmp $0x0,0x38(%rsp)
268b(2): jz 0x1f(%rip)
268d(5): mov 0x38(%rsp),%rbp
2692(7): mov 0x20ec77(%rip),%rdi
2699(3): mov %rbp,%rsi
269c(5): call 0x2794(%rip)
26a1(3): cmp %rax,%rbp
26a4(6): jnz 0x12b6(%rip)
26aa(8): cmp $0x0,0x20e96e(%rip)
26b2(2): jnz 0x10(%rip)
26b4(8): cmp $0x0,0x20ecd4(%rip)
26bc(6): jz 0xc47(%rip)
26c2(8): cmp $0x0,0x20ec4e(%rip)
26ca(6): jz 0xf7a(%rip)
26d0(5): call 0x26d0(%rip)
26d5(8): mov $0x0,0x18(%rsp)
26dd(9): mov $0x0,0x8(%rsp)
26e6(a): nop 0x0(%rax,%rax,1)
26f0(7): cmp $0x4,0x20e925(%rip)
26f7(6): jz 0x186(%rip)
26fd(7): mov 0x20ec8c(%rip),%r13
2704(7): mov 0x20ec55(%rip),%rbp
270b(2): xor %eax,%eax
270d(7): add 0x20ec54(%rip),%rbp
2714(7): mov 0x20e905(%rip),%r12
271b(6): mov 0x20ec6b(%rip),%esi
2721(3): test %r13,%r13
2724(3): setnz %al
2727(3): add %r12,%rax
272a(3): cmp %rax,%rbp
272d(6): jnb 0xa15(%rip)
2733(2): mov %esi,%eax
2735(7): mov 0x20ebdc(%rip),%rcx
273c(5): and $0x500,%eax
2741(5): cmp $0x500,%eax
2746(2): jnz 0x1f(%rip)
2748(7): mov 0x20ec81(%rip),%rdx
274f(3): and $0x18,%esi
2752(5): mov $0x20,%eax
2757(3): mov %rcx,%rdi
275a(3): cmovne %eax,%esi
275d(5): call 0xfffff4e3(%rip)
2762(3): mov %rax,%rcx
2765(3): cmp %r12,%rbp
2768(7): mov 0x20eaf1(%rip),%rax
276f(6): jb 0x4a1(%rip)
2775(2): xor %edi,%edi
2777(3): mov %r13,%rdx
277a(3): mov %rcx,%rsi
277d(2): call %rax
277f(4): cmp $0x0,%rax
2783(6): jle 0x4a5(%rip)
2789(2): xor %edx,%edx
278b(3): mov %rax,%rcx
278e(7): add 0x20eb9b(%rip),%rcx
2795(3): mov %rax,%rbp
2798(3): setb %dl
279b(7): mov %rcx,0x20eb8e(%rip)
27a2(3): test %rdx,%rdx
27a5(2): jz 0x9(%rip)
27a7(7): mov $0x1,0x20eb7b(%rip)
27ae(7): cmp $0x0,0x20eab6(%rip)
27b5(6): jnz 0x680(%rip)
27bb(7): mov 0x20ec0e(%rip),%r12
27c2(3): cmp %rbp,%r12
27c5(6): jbe 0x59b(%rip)
27cb(6): mov 0x20ebbb(%rip),%esi
27d1(8): add $0x1,0x20eb8f(%rip)
27d9(5): mov %rbp,0x8(%rsp)
27de(6): test $0x400,%esi
27e4(2): jz 0x3c(%rip)
27e6(6): test $0x100,%esi
27ec(6): jnz 0x80b(%rip)
27f2(3): mov %r12,%rdx
27f5(3): sub %rbp,%rdx
27f8(3): and $0x18,%esi
27fb(2): jz 0x7(%rip)
27fd(5): mov $0x20,%esi
2802(7): mov 0x20eb0f(%rip),%rdi
2809(3): add %rbp,%rdi
280c(5): call 0xfffff434(%rip)
2811(5): mov %rbp,0x8(%rsp)
2816(3): mov %r12,%rbp
2819(7): nop 0x0(%rax)
2820(7): mov 0x20eaf1(%rip),%r15
2827(7): mov 0x20eae2(%rip),%rdi
282e(3): cmp %rdi,%r15
2831(6): jz 0x676(%rip)
2837(7): cmp $0x0,0x20eb42(%rip)
283e(6): jnz 0x538(%rip)
2844(6): mov 0x20eb42(%rip),%ecx
284a(3): test $0x80,%cl
284d(6): jnz 0x565(%rip)
2853(3): test $0x8,%cl
2856(6): jnz 0x5cf(%rip)
285c(3): and $0x10,%ecx
285f(6): jz 0x36e(%rip)
2865(3): mov %rbp,%rsi
2868(3): mov %r15,%rdi
286b(5): call 0x33d5(%rip)
2870(7): cmp $0x4,0x20e7a5(%rip)
2877(6): jnz 0xfffffe86(%rip)
287d(5): call 0x36e3(%rip)
2882(7): cmp 0x20eabf(%rip),%rax
2889(6): jl 0xfffffe74(%rip)
288f(3): mov %rax,%rdi
2892(5): call 0x151e(%rip)
2897(b): add $0x3b9aca00,0x20eaa6(%rip)
28a2(5): jmp 0xfffffe5b(%rip)
28a7(9): nop 0x0(%rax,%rax,1)
28b0(7): lea 0x9f41(%rip),%rax
28b7(3): mov %r13,%rdx
28ba(5): mov $0x6f,%ecx
28bf(4): add $0x1,%rdx
28c3(4): add $0x1,%rax
28c7(3): cmp %cl,0xffffffff(%rdx)
28ca(2): jnz 0x26(%rip)
28cc(3): movzx (%rax),%ecx
28cf(2): test %cl,%cl
28d1(2): jnz 0xffffffee(%rip)
28d3(3): movzx (%rdx),%eax
28d6(2): cmp $0x3d,%al
28d8(2): jz 0x6(%rip)
28da(2): test %al,%al
28dc(2): jnz 0x14(%rip)
28de(7): mov %r8,0x20eafb(%rip)
28e5(5): jmp 0xfffff8ab(%rip)
28ea(6): nop 0x0(%rax,%rax,1)
28f0(7): lea 0x9f04(%rip),%rdx
28f7(3): mov %r13,%rax
28fa(5): mov $0x63,%ecx
28ff(4): add $0x1,%rax
2903(4): add $0x1,%rdx
2907(3): cmp %cl,0xffffffff(%rax)
290a(2): jnz 0x37(%rip)
290c(3): movzx (%rdx),%ecx
290f(2): test %cl,%cl
2911(2): jnz 0xffffffee(%rip)
2913(3): movzx (%rax),%eax
2916(2): test %al,%al
2918(2): jz 0x6(%rip)
291a(2): cmp $0x3d,%al
291c(2): jnz 0x25(%rip)
291e(7): lea 0x9f7e(%rip),%rcx
2925(7): lea 0xb734(%rip),%rsi
292c(2): xor %edx,%edx
292e(3): mov %r8,%rdi
2931(5): call 0x2d0f(%rip)
2936(6): or %eax,0x20ea50(%rip)
293c(5): jmp 0xfffff854(%rip)
2941(7): lea 0x9eb8(%rip),%rdx
2948(3): mov %r13,%rax
294b(5): mov $0x69,%ecx
2950(4): add $0x1,%rax
2954(4): add $0x1,%rdx
2958(3): cmp %cl,0xffffffff(%rax)
295b(2): jnz 0x37(%rip)
295d(3): movzx (%rdx),%ecx
2960(2): test %cl,%cl
2962(2): jnz 0xffffffee(%rip)
2964(3): movzx (%rax),%eax
2967(2): cmp $0x3d,%al
2969(2): jz 0x6(%rip)
296b(2): test %al,%al
296d(2): jnz 0x25(%rip)
296f(7): lea 0x9f40(%rip),%rcx
2976(7): lea 0xb5a3(%rip),%rsi
297d(2): xor %edx,%edx
297f(3): mov %r8,%rdi
2982(5): call 0x2cbe(%rip)
2987(6): or %eax,0x20e9fb(%rip)
298d(5): jmp 0xfffff803(%rip)
2992(7): lea 0x9e6d(%rip),%rdx
2999(3): mov %r13,%rax
299c(5): mov $0x6f,%ecx
29a1(7): nop 0x0(%rax)
29a8(4): add $0x1,%rax
29ac(4): add $0x1,%rdx
29b0(3): cmp %cl,0xffffffff(%rax)
29b3(6): jnz 0x1a2(%rip)
29b9(3): movzx (%rdx),%ecx
29bc(2): test %cl,%cl
29be(2): jnz 0xffffffea(%rip)
29c0(3): movzx (%rax),%eax
29c3(2): cmp $0x3d,%al
29c5(2): jz 0xa(%rip)
29c7(2): test %al,%al
29c9(6): jnz 0x18c(%rip)
29cf(7): lea 0x9ef3(%rip),%rcx
29d6(7): lea 0xb543(%rip),%rsi
29dd(2): xor %edx,%edx
29df(3): mov %r8,%rdi
29e2(5): call 0x2c5e(%rip)
29e7(6): or %eax,0x20e997(%rip)
29ed(5): jmp 0xfffff7a3(%rip)
29f2(3): test %r12,%r12
29f5(6): jz 0xfffff862(%rip)
29fb(7): mov %r12,0x20e9a6(%rip)
2a02(5): jmp 0xfffff855(%rip)
2a07(4): cmp $0xffffffff,%rax
2a0b(6): jz 0xfffff839(%rip)
2a11(7): mov %rax,0x20e608(%rip)
2a18(5): jmp 0xfffff82c(%rip)
2a1d(3): test %rax,%rax
2a20(6): jz 0xfffff7f9(%rip)
2a26(7): mov %rax,0x20e98b(%rip)
2a2d(5): jmp 0xfffff7ec(%rip)
2a32(9): mov $0xffffffff,0x10(%rsp)
2a3b(9): mov $0x0,0x8(%rsp)
2a44(3): xor %r12d,%r12d
2a47(a): or $0x800,0x20e93b(%rip)
2a51(8): cmp $0x0,0x20e977(%rip)
2a59(2): jnz 0xd(%rip)
2a5b(b): mov $0x200,0x20e96a(%rip)
2a66(8): cmp $0x0,0x20e95a(%rip)
2a6e(6): jnz 0xfffff742(%rip)
2a74(b): mov $0x200,0x20e949(%rip)
2a7f(5): jmp 0xfffff731(%rip)
2a84(2): xor %edx,%edx
2a86(7): div 0x20e943(%rip),%rax
2a8d(7): mov %rax,0x20e924(%rip)
2a94(7): mov %rdx,0x20e915(%rip)
2a9b(5): jmp 0xfffff77e(%rip)
2aa0(8): cmp $0x0,0x20e910(%rip)
2aa8(2): jnz 0x4e(%rip)
2aaa(7): mov 0x20e56f(%rip),%rax
2ab1(4): sub $0x1,%rax
2ab5(4): cmp $0xfffffffd,%rax
2ab9(2): jbe 0x3d(%rip)
2abb(2): mov %esi,%eax
2abd(2): or %ecx,%eax
2abf(3): test $0x40,%ah
2ac2(2): jnz 0x34(%rip)
2ac4(7): mov $0x0,0x20e85d(%rip)
2acb(7): lea 0x1f9e(%rip),%rax
2ad2(5): jmp 0xfffff7b2(%rip)
2ad7(3): mov %r12,%rax
2ada(2): xor %edx,%edx
2adc(7): div 0x20e8e5(%rip),%rax
2ae3(7): mov %rax,0x20e8be(%rip)
2aea(7): mov %rdx,0x20e8af(%rip)
2af1(5): jmp 0xfffff766(%rip)
2af6(7): mov $0x1,0x20e82b(%rip)
2afd(7): lea 0x1f6c(%rip),%rax
2b04(5): jmp 0xfffff780(%rip)
2b09(7): cmp $0x1,0x20e50c(%rip)
2b10(6): jz 0xfffffaee(%rip)
2b16(7): mov 0x20e8cb(%rip),%rdx
2b1d(2): xor %edi,%edi
2b1f(5): mov $0x3,%esi
2b24(5): call 0x5fbc(%rip)
2b29(7): lea 0xafa0(%rip),%rsi
2b30(3): mov %rax,%rbp
2b33(2): xor %edi,%edi
2b35(5): mov $0x5,%edx
2b3a(5): call 0xfffff026(%rip)
2b3f(3): mov %rbp,%rcx
2b42(3): mov %rax,%rdx
2b45(2): xor %esi,%esi
2b47(2): xor %edi,%edi
2b49(2): xor %eax,%eax
2b4b(5): call 0x15f5(%rip)
2b50(5): jmp 0xfffffaae(%rip)
2b55(7): lea 0x9cb0(%rip),%rdx
2b5c(3): mov %r13,%rax
2b5f(5): mov $0x73,%ecx
2b64(4): nop 0x0(%rax)
2b68(4): add $0x1,%rax
2b6c(4): add $0x1,%rdx
2b70(3): cmp %cl,0xffffffff(%rax)
2b73(6): jnz 0x83d(%rip)
2b79(3): movzx (%rdx),%ecx
2b7c(2): test %cl,%cl
2b7e(2): jnz 0xffffffea(%rip)
2b80(3): movzx (%rax),%eax
2b83(2): test %al,%al
2b85(6): jnz 0x823(%rip)
2b8b(7): lea 0x9d4b(%rip),%rcx
2b92(7): lea 0xb347(%rip),%rsi
2b99(5): mov $0x1,%edx
2b9e(3): mov %r8,%rdi
2ba1(5): call 0x2a9f(%rip)
2ba6(6): mov %eax,0x20e470(%rip)
2bac(5): jmp 0xfffff5e4(%rip)
2bb1(7): nop 0x0(%rax)
2bb8(5): call 0x2ec8(%rip)
2bbd(3): test %rbp,%rbp
2bc0(6): jz 0xfffffb30(%rip)
2bc6(7): mov 0x20e743(%rip),%rdi
2bcd(7): mov 0x20e7f4(%rip),%r14
2bd4(7): mov 0x20e72d(%rip),%r13
2bdb(3): mov %r15,%rsi
2bde(3): mov %r14,%r12
2be1(3): sub %r13,%r12
2be4(3): cmp %rbp,%r12
2be7(4): cmovnbe %rbp,%r12
2beb(3): add %r13,%rdi
2bee(3): mov %r12,%rdx
2bf1(3): sub %r12,%rbp
2bf4(3): add %r12,%r15
2bf7(3): add %r13,%r12
2bfa(5): call 0xfffff0e6(%rip)
2bff(3): cmp %r12,%r14
2c02(7): mov %r12,0x20e6ff(%rip)
2c09(2): jnbe 0xffffffb4(%rip)
2c0b(2): jmp 0xffffffad(%rip)
2c0d(3): nop (%rax)
2c10(2): xor %edi,%edi
2c12(7): mov 0x20e7b7(%rip),%rdx
2c19(3): mov %rcx,%rsi
2c1c(2): call %rax
2c1e(4): cmp $0x0,%rax
2c22(6): jnle 0xfffffb67(%rip)
2c28(6): mov 0x20e75e(%rip),%esi
2c2e(6): jz 0x4d7(%rip)
2c34(6): and $0x100,%esi
2c3a(2): jz 0xb(%rip)
2c3c(7): cmp $0x1,0x20e3d9(%rip)
2c43(2): jz 0x5f(%rip)
2c45(7): mov 0x20e79c(%rip),%rsi
2c4c(5): mov $0x4,%edi
2c51(5): call 0x5d8f(%rip)
2c56(7): lea 0x9b79(%rip),%rsi
2c5d(2): xor %edi,%edi
2c5f(5): mov $0x5,%edx
2c64(3): mov %rax,%rbp
2c67(5): call 0xffffeef9(%rip)
2c6c(3): mov %rax,%rdx
2c6f(5): mov 0x10(%rsp),%rax
2c74(2): xor %edi,%edi
2c76(3): mov %rbp,%rcx
2c79(2): mov (%rax),%esi
2c7b(2): xor %eax,%eax
2c7d(5): call 0x14c3(%rip)
2c82(6): mov 0x20e704(%rip),%esi
2c88(6): test $0x100,%esi
2c8e(6): jz 0xb17(%rip)
2c94(7): cmp $0x1,0x20e381(%rip)
2c9b(2): jz 0x7(%rip)
2c9d(5): call 0x1ad3(%rip)
2ca2(7): mov 0x20e727(%rip),%rbp
2ca9(5): sub 0x8(%rsp),%rbp
2cae(2): xor %edi,%edi
2cb0(3): mov %rbp,%rsi
2cb3(5): call 0x18fd(%rip)
2cb8(7): cmp $0x0,0x20e67d(%rip)
2cbf(6): jnz 0x185(%rip)
2cc5(6): mov 0x20e66d(%rip),%eax
2ccb(3): cmp $0x1d,%eax
2cce(2): jz 0x61(%rip)
2cd0(5): mov 0x10(%rsp),%rdi
2cd5(2): mov %eax,(%rdi)
2cd7(7): mov 0x20e70a(%rip),%rdx
2cde(5): mov $0x3,%esi
2ce3(2): xor %edi,%edi
2ce5(5): call 0x5dfb(%rip)
2cea(7): lea 0x9ad5(%rip),%rsi
2cf1(5): mov $0x5,%edx
2cf6(2): xor %edi,%edi
2cf8(3): mov %rax,%rbp
2cfb(5): call 0xffffee65(%rip)
2d00(3): mov %rax,%rdx
2d03(5): mov 0x10(%rsp),%rax
2d08(3): mov %rbp,%rcx
2d0b(2): xor %edi,%edi
2d0d(2): mov (%rax),%esi
2d0f(2): xor %eax,%eax
2d11(5): call 0x142f(%rip)
2d16(7): mov $0x0,0x20e61f(%rip)
2d1d(a): mov $0x1d,0x20e611(%rip)
2d27(8): mov $0x1,0x18(%rsp)
2d2f(7): test $0x4,0x20e657(%rip)
2d36(6): jz 0xfffff9ba(%rip)
2d3c(6): cmp $0x0,0x8(%rsp)
2d42(6): jnz 0xfffff9ae(%rip)
2d48(7): mov 0x20e681(%rip),%r12
2d4f(2): xor %ebp,%ebp
2d51(3): cmp %rbp,%r12
2d54(6): jnbe 0xfffffa77(%rip)
2d5a(6): nop 0x0(%rax,%rax,1)
2d60(8): add $0x1,0x20e5f8(%rip)
2d68(9): mov $0x0,0x8(%rsp)
2d71(5): jmp 0xfffffaaf(%rip)
2d76(3): test %rbp,%rbp
2d79(6): jz 0xfffffacb(%rip)
2d7f(4): lea 0x0(%r15,%rbp,1),%rcx
2d83(3): mov %r15,%rax
2d86(a): nop 0x0(%rax,%rax,1)
2d90(3): movzx (%rax),%edx
2d93(4): add $0x1,%rax
2d97(4): movzx 0x0(%rbx,%rdx,1),%edx
2d9b(3): mov %dl,0xffffffff(%rax)
2d9e(3): cmp %rcx,%rax
2da1(2): jnz 0xffffffef(%rip)
2da3(6): mov 0x20e5e3(%rip),%ecx
2da9(3): test $0x80,%cl
2dac(6): jz 0xfffffaa7(%rip)
2db2(7): cmp $0x0,0x20e388(%rip)
2db9(2): jz 0x1b(%rip)
2dbb(7): movzx 0x20e37e(%rip),%eax
2dc2(4): add $0x1,%rbp
2dc6(7): mov $0x0,0x20e374(%rip)
2dcd(4): sub $0x1,%r15
2dd1(3): mov %al,(%r15)
2dd4(4): test $0x1,%bpl
2dd8(2): jz 0x18(%rip)
2dda(4): sub $0x1,%rbp
2dde(7): mov $0x1,0x20e35c(%rip)
2de5(5): movzx 0x0(%r15,%rbp,1),%eax
2dea(6): mov %al,0x20e350(%rip)
2df0(3): mov %rbp,%rdx
2df3(4): lea 0x0(%r15,%rbp,1),%rax
2df7(3): shr $0x1,%rdx
2dfa(2): jz 0x1e(%rip)
2dfc(3): neg %rdx
2dff(4): lea 0x0(%rax,%rdx,2),%rsi
2e03(5): nop 0x0(%rax,%rax,1)
2e08(4): movzx 0xfffffffe(%rax),%edx
2e0c(4): sub $0x2,%rax
2e10(3): mov %dl,0x2(%rax)
2e13(3): cmp %rsi,%rax
2e16(2): jnz 0xfffffff2(%rip)
2e18(4): add $0x1,%r15
2e1c(3): test $0x8,%cl
2e1f(6): jz 0xfffffa3d(%rip)
2e25(3): mov %rbp,%rsi
2e28(3): mov %r15,%rdi
2e2b(5): call 0x2cf5(%rip)
2e30(5): jmp 0xfffff8c0(%rip)
2e35(3): mov %rax,%rsi
2e38(2): xor %edi,%edi
2e3a(5): call 0x1776(%rip)
2e3f(5): jmp 0xfffff97c(%rip)
2e44(2): xor %eax,%eax
2e46(3): mov %rbp,%r12
2e49(7): add 0x20e4e0(%rip),%r12
2e50(3): setb %al
2e53(7): mov %r12,0x20e4d6(%rip)
2e5a(3): test %rax,%rax
2e5d(6): jz 0x1c7(%rip)
2e63(7): mov $0x1,0x20e4bf(%rip)
2e6a(7): mov 0x20e577(%rip),%rsi
2e71(5): mov $0x4,%edi
2e76(5): call 0x5b6a(%rip)
2e7b(7): lea 0xac76(%rip),%rsi
2e82(3): mov %rax,%rbp
2e85(2): xor %edi,%edi
2e87(5): mov $0x5,%edx
2e8c(5): call 0xffffecd4(%rip)
2e91(3): mov %rbp,%rcx
2e94(3): mov %rax,%rdx
2e97(2): xor %esi,%esi
2e99(2): xor %edi,%edi
2e9b(2): xor %eax,%eax
2e9d(5): call 0x12a3(%rip)
2ea2(5): jmp 0xfffffe74(%rip)
2ea7(3): mov %rbp,%rsi
2eaa(3): mov %r15,%rdi
2ead(5): call 0x1f83(%rip)
2eb2(7): add %rax,0x20e49f(%rip)
2eb9(3): cmp %rbp,%rax
2ebc(6): jz 0x42d(%rip)
2ec2(7): mov 0x20e517(%rip),%rsi
2ec9(5): mov $0x4,%edi
2ece(5): call 0x5b12(%rip)
2ed3(7): lea 0x9a5e(%rip),%rsi
2eda(3): mov %rax,%rbx
2edd(5): mov $0x5,%edx
2ee2(2): xor %edi,%edi
2ee4(5): call 0xffffec7c(%rip)
2ee9(3): mov %rax,%rdx
2eec(5): mov 0x10(%rsp),%rax
2ef1(3): mov %rbx,%rcx
2ef4(2): xor %edi,%edi
2ef6(2): mov (%rax),%esi
2ef8(2): xor %eax,%eax
2efa(5): call 0x1246(%rip)
2eff(8): mov $0x1,0x18(%rsp)
2f07(8): cmp $0x0,0x20e111(%rip)
2f0f(6): jz 0x352(%rip)
2f15(7): cmp $0x0,0x20e34f(%rip)
2f1c(2): jnz 0xb(%rip)
2f1e(7): cmp $0x0,0x20e344(%rip)
2f25(2): jz 0xb(%rip)
2f27(2): xor %esi,%esi
2f29(2): xor %edi,%edi
2f2b(5): call 0x1685(%rip)
2f30(7): cmp $0x0,0x20e333(%rip)
2f37(2): jnz 0xb(%rip)
2f39(7): cmp $0x0,0x20e328(%rip)
2f40(2): jz 0xe(%rip)
2f42(2): xor %esi,%esi
2f44(5): mov $0x1,%edi
2f49(5): call 0x1667(%rip)
2f4e(5): call 0x1cb2(%rip)
2f53(8): mov 0xd8(%rsp),%rbx
2f5b(9): xor $0x28,%rbx
2f64(4): mov 0x18(%rsp),%eax
2f68(6): jnz 0xc5f(%rip)
2f6e(7): add $0xe8,%rsp
2f75(1): pop %rbx
2f76(1): pop %rbp
2f77(2): pop %r12
2f79(2): pop %r13
2f7b(2): pop %r14
2f7d(2): pop %r15
2f7f(1): ret near (%rsp)
2f80(4): and $0x4,%bpl
2f84(6): jz 0xfffff4b4(%rip)
2f8a(7): lea 0x20e1cf(%rip),%rax
2f91(7): lea 0xad48(%rip),%rcx
2f98(7): lea 0x100(%rax),%rsi
2f9f(1): nop 
2fa0(3): movzx (%rax),%edx
2fa3(4): add $0x1,%rax
2fa7(4): movzx 0x0(%rcx,%rdx,1),%edx
2fab(3): mov %dl,0xffffffff(%rax)
2fae(3): cmp %rax,%rsi
2fb1(2): jnz 0xffffffef(%rip)
2fb3(5): jmp 0xfffff470(%rip)
2fb8(4): test $0x20,%bpl
2fbc(6): jz 0xfffff435(%rip)
2fc2(5): call 0xffffeeae(%rip)
2fc7(3): mov (%rax),%rsi
2fca(7): lea 0x20e18f(%rip),%rax
2fd1(7): lea 0x100(%rax),%rcx
2fd8(8): nop 0x0(%rax,%rax,1)
2fe0(3): movzx (%rax),%edx
2fe3(4): add $0x1,%rax
2fe7(3): mov 0x0(%rsi,%rdx,4),%edx
2fea(3): mov %dl,0xffffffff(%rax)
2fed(3): cmp %rax,%rcx
2ff0(2): jnz 0xfffffff0(%rip)
2ff2(5): jmp 0xfffff3f8(%rip)
2ff7(5): mov %rbp,0x8(%rsp)
2ffc(3): mov %r12,%rbp
2fff(5): jmp 0xfffff821(%rip)
3004(2): test %eax,%eax
3006(7): lea 0x1b83(%rip),%rdx
300d(7): lea 0x1a5c(%rip),%rax
3014(7): mov $0x0,0x20e30d(%rip)
301b(4): cmovne %rdx,%rax
301f(5): jmp 0xfffff265(%rip)
3024(3): mov %r12,%rax
3027(4): shr $0x3f,%rax
302b(6): or %al,0x20e2f8(%rip)
3031(6): jnz 0xfffffe39(%rip)
3037(2): xor %esi,%esi
3039(2): xor %edi,%edi
303b(5): mov $0x1,%edx
3040(5): call 0xffffebd0(%rip)
3045(3): test %rax,%rax
3048(6): js 0xfffffc8f(%rip)
304e(3): cmp %rax,%r12
3051(6): jz 0xfffffcde(%rip)
3057(3): sub %rax,%r12
305a(6): js 0x4ed(%rip)
3060(3): cmp %r12,%rbp
3063(6): jb 0x4e4(%rip)
3069(7): mov 0x20e378(%rip),%rdi
3070(2): xor %esi,%esi
3072(5): mov $0x1,%ecx
3077(3): mov %r12,%rdx
307a(5): call 0x1436(%rip)
307f(3): test %rax,%rax
3082(6): jns 0xfffffcad(%rip)
3088(5): mov 0x10(%rsp),%rax
308d(3): cmp $0x0,(%rax)
3090(6): jnz 0xfffffc47(%rip)
3096(7): lea 0xaab3(%rip),%rsi
309d(2): xor %edi,%edi
309f(5): mov $0x5,%edx
30a4(5): call 0xffffeabc(%rip)
30a9(2): xor %esi,%esi
30ab(3): mov %rax,%rdx
30ae(2): xor %edi,%edi
30b0(2): xor %eax,%eax
30b2(5): call 0x108e(%rip)
30b7(5): jmp 0xfffffc20(%rip)
30bc(2): mov %ebp,%edx
30be(5): mov $0x1b6,%ecx
30c3(5): mov $0x1,%edi
30c8(3): or $0x2,%edx
30cb(5): call 0x1955(%rip)
30d0(2): test %eax,%eax
30d2(6): jns 0xfffff44f(%rip)
30d8(7): mov 0x20e301(%rip),%rsi
30df(5): jmp 0xfffff426(%rip)
30e4(5): mov 0x38(%rsp),%rdx
30e9(3): test %rdx,%rdx
30ec(6): jz 0xfffff5be(%rip)
30f2(7): mov 0x20e217(%rip),%rdi
30f9(2): xor %esi,%esi
30fb(5): call 0xffffeb45(%rip)
3100(5): jmp 0xfffff58d(%rip)
3105(7): movzx 0x20e15f(%rip),%eax
310c(6): or %al,0x20e157(%rip)
3112(7): cmp $0x0,0x20e151(%rip)
3119(7): movzx 0x20e148(%rip),%eax
3120(2): jz 0x11(%rip)
3122(2): xor %ebx,%ebx
3124(6): test $0x200,%esi
312a(3): setz %bl
312d(4): mov %ebx,0x28(%rsp)
3131(4): or 0x28(%rsp),%eax
3135(6): mov %al,0x20e12d(%rip)
313b(7): and $0x1,0x20e126(%rip)
3142(7): cmp $0x0,0x20dff8(%rip)
3149(6): jz 0xc6(%rip)
314f(4): test $0x8,%sil
3153(6): jnz 0x68c(%rip)
3159(4): and $0x10,%sil
315d(6): jnz 0x69e(%rip)
3163(7): mov 0x20e19e(%rip),%rax
316a(7): movzx 0x20dfcf(%rip),%ecx
3171(7): mov 0x20e198(%rip),%rdx
3178(4): lea 0x1(%rax),%rsi
317c(7): cmp 0x20e245(%rip),%rsi
3183(3): mov %cl,0x0(%rdx,%rax,1)
3186(7): mov %rsi,0x20e17b(%rip)
318d(2): jnb 0x77(%rip)
318f(3): test %rsi,%rsi
3192(6): jnz 0x4bc(%rip)
3198(7): cmp $0x0,0x20e1f9(%rip)
319f(6): jnz 0x51b(%rip)
31a5(6): mov 0x20e1e1(%rip),%esi
31ab(6): test $0x4000,%esi
31b1(6): jnz 0x4cf(%rip)
31b7(6): and $0x8000,%esi
31bd(6): jz 0xfffffd4a(%rip)
31c3(5): mov 0x10(%rsp),%rbx
31c8(5): mov $0x1,%edi
31cd(5): call 0xffffebd3(%rip)
31d2(2): test %eax,%eax
31d4(6): jz 0xfffffd33(%rip)
31da(3): cmp $0x4,(%rbx)
31dd(2): jz 0xffffffeb(%rip)
31df(7): mov 0x20e1fa(%rip),%rsi
31e6(5): mov $0x4,%edi
31eb(5): call 0x57f5(%rip)
31f0(5): mov $0x5,%edx
31f5(3): mov %rax,%rbx
31f8(7): lea 0x9762(%rip),%rsi
31ff(5): jmp 0xfffffce3(%rip)
3204(5): call 0x287c(%rip)
3209(6): mov 0x20e17d(%rip),%esi
320f(4): and $0x8,%sil
3213(6): jz 0x13d(%rip)
3219(7): mov 0x20e0e0(%rip),%rbx
3220(3): test %rbx,%rbx
3223(6): jnz 0x11b(%rip)
3229(7): mov 0x20e0d8(%rip),%rsi
3230(5): jmp 0xffffff5f(%rip)
3235(7): lea 0x96cb(%rip),%rsi
323c(2): xor %edi,%edi
323e(5): mov $0x5,%edx
3243(5): call 0xffffe91d(%rip)
3248(3): mov %r12d,%esi
324b(3): mov %rax,%rdx
324e(2): xor %edi,%edi
3250(7): mov %rax,0x20e191(%rip)
3257(5): call 0x1149(%rip)
325c(5): jmp 0xfffff214(%rip)
3261(8): cmp $0x0,0x20e127(%rip)
3269(6): jnz 0xfffffcac(%rip)
326f(7): cmp $0x0,0x20dff5(%rip)
3276(6): jnz 0x1ed(%rip)
327c(7): cmp $0x0,0x20dfe7(%rip)
3283(6): jz 0xfffffccb(%rip)
3289(2): xor %esi,%esi
328b(5): mov $0x1,%edi
3290(5): call 0x1320(%rip)
3295(2): test %al,%al
3297(6): jnz 0xfffffcb7(%rip)
329d(7): mov 0x20e13c(%rip),%rdx
32a4(5): mov $0x3,%esi
32a9(2): xor %edi,%edi
32ab(5): call 0x5835(%rip)
32b0(7): lea 0xa8f9(%rip),%rsi
32b7(5): mov $0x5,%edx
32bc(2): xor %edi,%edi
32be(3): mov %rax,%rbx
32c1(5): call 0xffffe89f(%rip)
32c6(3): mov %rax,%rdx
32c9(5): mov 0x10(%rsp),%rax
32ce(3): mov %rbx,%rcx
32d1(2): xor %edi,%edi
32d3(2): mov (%rax),%esi
32d5(2): xor %eax,%eax
32d7(5): call 0xe69(%rip)
32dc(8): mov $0x1,0x18(%rsp)
32e4(5): jmp 0xfffffc6a(%rip)
32e9(7): cmp %rbp,0x20e0e0(%rip)
32f0(6): jz 0x1d0(%rip)
32f6(8): add $0x1,0x20e07a(%rip)
32fe(5): jmp 0xfffff3f2(%rip)
3303(8): mov $0x0,0x18(%rsp)
330b(5): jmp 0xffffff64(%rip)
3310(4): lea 0x1(%rsi),%rax
3314(7): movzx 0x20dcfe(%rip),%ecx
331b(7): cmp 0x20e0a6(%rip),%rax
3322(7): mov 0x20dfe7(%rip),%rdx
3329(7): mov %rax,0x20dfd8(%rip)
3330(3): mov %cl,0x0(%rdx,%rsi,1)
3333(2): jb 0x7(%rip)
3335(5): call 0x274b(%rip)
333a(4): add $0x1,%rbx
333e(7): cmp 0x20e07b(%rip),%rbx
3345(7): mov 0x20dfbc(%rip),%rsi
334c(2): jb 0xffffffc4(%rip)
334e(2): jmp 0x9(%rip)
3350(7): mov 0x20dfb1(%rip),%rsi
3357(8): cmp $0x0,0x20dfa1(%rip)
335f(6): jz 0xfffffe30(%rip)
3365(7): test $0x10,0x20e020(%rip)
336c(6): jz 0xfffffe23(%rip)
3372(4): lea 0x1(%rsi),%rax
3376(7): movzx 0x20dc9d(%rip),%ecx
337d(7): cmp 0x20e044(%rip),%rax
3384(7): mov 0x20df85(%rip),%rdx
338b(7): mov %rax,0x20df76(%rip)
3392(3): mov %cl,0x0(%rdx,%rsi,1)
3395(3): mov %rax,%rsi
3398(6): jb 0xfffffdf7(%rip)
339e(5): call 0x26e2(%rip)
33a3(5): jmp 0xfffffe86(%rip)
33a8(2): cmp $0x3d,%al
33aa(6): jz 0xfffff7e1(%rip)
33b0(5): mov 0x18(%rsp),%rsi
33b5(3): mov %r8,%rdi
33b8(5): mov %r8,0x28(%rsp)
33bd(8): mov $0x0,0x38(%rsp)
33c5(5): call 0xe8b(%rip)
33ca(3): mov %r13,%rdx
33cd(5): mov $0x69,%esi
33d2(7): lea 0x943a(%rip),%rcx
33d9(5): mov 0x28(%rsp),%r8
33de(2): jmp 0xe(%rip)
33e0(3): movzx (%rcx),%esi
33e3(3): test %sil,%sil
33e6(6): jz 0x381(%rip)
33ec(4): add $0x1,%rdx
33f0(4): add $0x1,%rcx
33f4(4): cmp %sil,0xffffffff(%rdx)
33f8(2): jz 0xffffffe8(%rip)
33fa(7): lea 0x9416(%rip),%rcx
3401(3): mov %r13,%rdx
3404(5): mov $0x6f,%esi
3409(4): add $0x1,%rdx
340d(4): add $0x1,%rcx
3411(4): cmp %sil,0xffffffff(%rdx)
3415(2): jnz 0x1e(%rip)
3417(3): movzx (%rcx),%esi
341a(3): test %sil,%sil
341d(2): jnz 0xffffffec(%rip)
341f(3): movzx (%rdx),%edx
3422(2): test %dl,%dl
3424(6): jz 0x19b(%rip)
342a(3): cmp $0x3d,%dl
342d(6): jz 0x192(%rip)
3433(3): mov %r13,%rdx
3436(5): mov $0x62,%esi
343b(7): lea 0x93da(%rip),%rcx
3442(2): jmp 0xe(%rip)
3444(3): movzx (%rcx),%esi
3447(3): test %sil,%sil
344a(6): jz 0x55c(%rip)
3450(4): add $0x1,%rdx
3454(4): add $0x1,%rcx
3458(4): cmp %sil,0xffffffff(%rdx)
345c(2): jz 0xffffffe8(%rip)
345e(5): jmp 0x554(%rip)
3463(2): xor %esi,%esi
3465(2): xor %edi,%edi
3467(5): call 0x1149(%rip)
346c(2): test %al,%al
346e(6): jnz 0xfffffe0e(%rip)
3474(7): mov 0x20df6d(%rip),%rdx
347b(5): mov $0x3,%esi
3480(2): xor %edi,%edi
3482(5): call 0x565e(%rip)
3487(7): lea 0xa722(%rip),%rsi
348e(5): mov $0x5,%edx
3493(2): xor %edi,%edi
3495(3): mov %rax,%rbx
3498(5): call 0xffffe6c8(%rip)
349d(3): mov %rax,%rdx
34a0(5): mov 0x10(%rsp),%rax
34a5(3): mov %rbx,%rcx
34a8(2): xor %edi,%edi
34aa(2): mov (%rax),%esi
34ac(2): xor %eax,%eax
34ae(5): call 0xc92(%rip)
34b3(8): mov $0x1,0x18(%rsp)
34bb(5): jmp 0xfffffdc1(%rip)
34c0(8): add $0x1,0x20dea8(%rip)
34c8(5): jmp 0xfffff228(%rip)
34cd(5): mov 0x10(%rsp),%rax
34d2(5): mov 0x20(%rsp),%rdx
34d7(5): mov $0x1,%esi
34dc(5): mov $0x1,%edi
34e1(2): mov (%rax),%ebp
34e3(5): call 0xffffe84d(%rip)
34e8(2): test %eax,%eax
34ea(6): jnz 0x659(%rip)
34f0(4): mov 0x58(%rsp),%eax
34f4(5): and $0xf000,%eax
34f9(5): sub $0x4000,%eax
34fe(5): test $0xffffb000,%eax
3503(6): jnz 0xfffff070(%rip)
3509(7): mov 0x20ded0(%rip),%rsi
3510(5): mov $0x4,%edi
3515(5): call 0x54cb(%rip)
351a(7): lea 0xa577(%rip),%rsi
3521(3): mov %rax,%rbx
3524(5): mov $0x5,%edx
3529(2): xor %edi,%edi
352b(5): call 0xffffe635(%rip)
3530(3): mov %rbx,%r8
3533(3): mov %rax,%rdx
3536(3): mov %r12,%rcx
3539(2): mov %ebp,%esi
353b(5): mov $0x1,%edi
3540(2): xor %eax,%eax
3542(5): call 0xbfe(%rip)
3547(7): cmp $0x1,0x20dace(%rip)
354e(6): jz 0xfffffb1b(%rip)
3554(7): lea 0xa5c5(%rip),%rsi
355b(2): xor %edi,%edi
355d(5): mov $0x5,%edx
3562(5): call 0xffffe5fe(%rip)
3567(2): xor %esi,%esi
3569(3): mov %rax,%rdx
356c(2): xor %edi,%edi
356e(2): xor %eax,%eax
3570(5): call 0xbd0(%rip)
3575(5): jmp 0xfffffaf4(%rip)
357a(7): lea 0x20dcff(%rip),%rdi
3581(5): mov $0xa,%esi
3586(5): call 0xffffe8da(%rip)
358b(5): jmp 0xffffe973(%rip)
3590(7): lea 0x9391(%rip),%rsi
3597(2): xor %edi,%edi
3599(5): mov $0x5,%edx
359e(5): call 0xffffe5c2(%rip)
35a3(3): mov %r12d,%esi
35a6(3): mov %rax,%rdx
35a9(5): mov $0x1,%edi
35ae(7): mov %rax,0x20de2b(%rip)
35b5(5): call 0xdeb(%rip)
35ba(5): jmp 0xffffefb9(%rip)
35bf(7): mov 0x20de12(%rip),%rdx
35c6(a): mov $0x9223372036854775807,%rdi
35d0(7): mov %rax,0x20ddf1(%rip)
35d7(3): neg %rdx
35da(3): cmp %rdi,%rdx
35dd(4): cmovnbe %rdi,%rdx
35e1(3): test %rax,%rax
35e4(6): jz 0x1ee(%rip)
35ea(3): cmp %rdx,%rax
35ed(6): jbe 0x2b5(%rip)
35f3(8): mov $0x1,0x38(%rsp)
35fb(3): mov %r8,%rdi
35fe(5): call 0x56b2(%rip)
3603(7): lea 0x936b(%rip),%rsi
360a(2): xor %edi,%edi
360c(5): mov $0x5,%edx
3611(3): mov %rax,%rbx
3614(5): call 0xffffe54c(%rip)
3619(5): cmp $0x1,0x38(%rsp)
361e(5): mov $0x0,%edx
3623(5): mov $0x4b,%esi
3628(3): mov %rax,%rcx
362b(3): mov %rbx,%r8
362e(5): mov $0x1,%edi
3633(3): cmovne %edx,%esi
3636(7): lea 0x9162(%rip),%rdx
363d(2): xor %eax,%eax
363f(5): call 0xb01(%rip)
3644(5): call 0x15dc(%rip)
3649(5): jmp 0xfffff087(%rip)
364e(7): mov 0x20dcbb(%rip),%rdi
3655(5): call 0x17db(%rip)
365a(7): add %rax,0x20dcf7(%rip)
3661(3): test %rax,%rax
3664(2): jz 0xa(%rip)
3666(8): add $0x1,0x20dd0a(%rip)
366e(7): cmp 0x20dc93(%rip),%rax
3675(6): jz 0xfffffb23(%rip)
367b(5): jmp 0xfffff847(%rip)
3680(5): mov $0x1,%edi
3685(5): call 0xffffe40b(%rip)
368a(2): test %eax,%eax
368c(2): jz 0x23(%rip)
368e(5): mov 0x10(%rsp),%rax
3693(2): mov (%rax),%eax
3695(4): mov %eax,0x8(%rsp)
3699(3): sub $0x16,%eax
369c(3): and $0xef,%eax
369f(6): jnz 0x238(%rip)
36a5(a): or $0x8000,0x20dcdd(%rip)
36af(6): mov 0x20dcd7(%rip),%esi
36b5(5): jmp 0xfffffb02(%rip)
36ba(5): mov 0x20(%rsp),%rdx
36bf(5): mov $0x1,%esi
36c4(5): mov $0x1,%edi
36c9(5): call 0xffffe667(%rip)
36ce(2): test %eax,%eax
36d0(6): jnz 0x1e2(%rip)
36d6(4): mov 0x58(%rsp),%eax
36da(5): and $0xf000,%eax
36df(5): cmp $0x8000,%eax
36e4(6): jnz 0xfffffac1(%rip)
36ea(2): xor %esi,%esi
36ec(5): mov $0x1,%edx
36f1(5): mov $0x1,%edi
36f6(5): call 0xffffe51a(%rip)
36fb(3): test %rax,%rax
36fe(3): mov %rax,%rbx
3701(6): js 0xfffffaa4(%rip)
3707(5): cmp 0x70(%rsp),%rax
370c(6): jle 0xfffffa99(%rip)
3712(3): mov %rax,%rdi
3715(5): call 0x16db(%rip)
371a(2): test %eax,%eax
371c(6): jz 0xfffffa89(%rip)
3722(7): mov 0x20dcb7(%rip),%rsi
3729(5): mov $0x4,%edi
372e(5): call 0x52b2(%rip)
3733(7): lea 0xa43e(%rip),%rsi
373a(2): xor %edi,%edi
373c(5): mov $0x5,%edx
3741(3): mov %rax,%rbp
3744(5): call 0xffffe41c(%rip)
3749(3): mov %rax,%rdx
374c(5): mov 0x10(%rsp),%rax
3751(3): mov %rbp,%r8
3754(3): mov %rbx,%rcx
3757(2): xor %edi,%edi
3759(2): mov (%rax),%esi
375b(2): xor %eax,%eax
375d(5): call 0x9e3(%rip)
3762(5): jmp 0xfffff79d(%rip)
3767(3): movzx (%rdx),%edx
376a(2): test %dl,%dl
376c(2): jz 0xb(%rip)
376e(3): cmp $0x3d,%dl
3771(6): jnz 0xfffffc89(%rip)
3777(7): mov 0x20dc5a(%rip),%rdi
377e(7): mov %rax,0x20dc4b(%rip)
3785(4): lea 0x2(%rdi),%rdx
3789(a): mov $0x9223372036854775807,%rdi
3793(3): add %rdx,%rdx
3796(3): neg %rdx
3799(3): cmp %rdi,%rdx
379c(4): cmovnbe %rdi,%rdx
37a0(5): jmp 0xfffffe41(%rip)
37a5(8): mov $0x1,0x18(%rsp)
37ad(5): jmp 0xfffff995(%rip)
37b2(3): movzx (%rdx),%edx
37b5(2): test %dl,%dl
37b7(2): jz 0xb(%rip)
37b9(3): cmp $0x3d,%dl
37bc(6): jnz 0x221(%rip)
37c2(3): test %rax,%rax
37c5(7): mov %rax,0x20dbf4(%rip)
37cc(6): jnz 0xd6(%rip)
37d2(8): mov $0x4,0x38(%rsp)
37da(5): jmp 0xfffffe21(%rip)
37df(7): lea 0x20d95a(%rip),%rdi
37e6(5): mov $0x1,%esi
37eb(5): call 0x2335(%rip)
37f0(6): mov 0x20db96(%rip),%esi
37f6(5): jmp 0xfffffa19(%rip)
37fb(7): lea 0x20d93e(%rip),%rdi
3802(5): mov $0x1,%esi
3807(5): call 0x2439(%rip)
380c(6): mov 0x20db7a(%rip),%esi
3812(5): jmp 0xfffff9fd(%rip)
3817(3): movzx (%rdx),%edx
381a(3): cmp $0x3d,%dl
381d(6): jz 0x262(%rip)
3823(2): test %dl,%dl
3825(6): jz 0x25a(%rip)
382b(7): lea 0x8f9f(%rip),%rcx
3832(3): mov %r13,%rdx
3835(5): mov $0x73,%esi
383a(4): add $0x1,%rdx
383e(4): add $0x1,%rcx
3842(4): cmp %sil,0xffffffff(%rdx)
3846(2): jnz 0x1e(%rip)
3848(3): movzx (%rcx),%esi
384b(3): test %sil,%sil
384e(2): jnz 0xffffffec(%rip)
3850(3): movzx (%rdx),%edx
3853(3): cmp $0x3d,%dl
3856(6): jz 0x233(%rip)
385c(2): test %dl,%dl
385e(6): jz 0x22b(%rip)
3864(7): lea 0x8fb4(%rip),%rcx
386b(3): mov %r13,%rdx
386e(5): mov $0x63,%esi
3873(4): add $0x1,%rdx
3877(4): add $0x1,%rcx
387b(4): cmp %sil,0xffffffff(%rdx)
387f(6): jnz 0xa2(%rip)
3885(3): movzx (%rcx),%esi
3888(3): test %sil,%sil
388b(2): jnz 0xffffffe8(%rip)
388d(3): movzx (%rdx),%edx
3890(3): cmp $0x3d,%dl
3893(2): jz 0xa(%rip)
3895(2): test %dl,%dl
3897(6): jnz 0x8a(%rip)
389d(5): mov %rax,0x10(%rsp)
38a2(5): cmp $0x0,0x38(%rsp)
38a7(6): jz 0xffffe8e9(%rip)
38ad(5): jmp 0xfffffd4e(%rip)
38b2(7): mov 0x20db27(%rip),%rsi
38b9(5): mov $0x4,%edi
38be(5): call 0x5122(%rip)
38c3(5): mov $0x5,%edx
38c8(3): mov %rax,%rbx
38cb(7): lea 0x8ed4(%rip),%rsi
38d2(5): jmp 0xfffff610(%rip)
38d7(7): mov 0x20db02(%rip),%rsi
38de(5): mov $0x4,%edi
38e3(5): call 0x50fd(%rip)
38e8(7): lea 0x905a(%rip),%rsi
38ef(5): mov $0x5,%edx
38f4(2): xor %edi,%edi
38f6(3): mov %rax,%rbx
38f9(5): call 0xffffe267(%rip)
38fe(3): mov %rax,%rdx
3901(5): mov 0x10(%rsp),%rax
3906(3): mov %rbx,%rcx
3909(2): xor %edi,%edi
390b(2): mov (%rax),%esi
390d(2): xor %eax,%eax
390f(5): call 0x831(%rip)
3914(8): mov $0x1,0x18(%rsp)
391c(5): jmp 0xfffffd89(%rip)
3921(3): mov %r13,%rdi
3924(5): call 0x538c(%rip)
3929(7): lea 0x8f5b(%rip),%rsi
3930(3): mov %rax,%rbx
3933(5): mov $0x5,%edx
3938(2): xor %edi,%edi
393a(5): call 0xffffe226(%rip)
393f(2): xor %edi,%edi
3941(3): mov %rax,%rdx
3944(3): mov %rbx,%rcx
3947(2): xor %esi,%esi
3949(2): xor %eax,%eax
394b(5): call 0x7f5(%rip)
3950(5): mov $0x1,%edi
3955(5): call 0x16db(%rip)
395a(7): mov 0x20da7f(%rip),%rsi
3961(5): mov $0x4,%edi
3966(5): call 0x507a(%rip)
396b(7): lea 0x8e75(%rip),%rsi
3972(5): mov $0x5,%edx
3977(2): xor %edi,%edi
3979(3): mov %rax,%rbx
397c(5): call 0xffffe1e4(%rip)
3981(3): mov %rax,%rdx
3984(5): mov 0x10(%rsp),%rax
3989(2): xor %edi,%edi
398b(3): mov %rbx,%rcx
398e(2): mov (%rax),%esi
3990(2): xor %eax,%eax
3992(5): call 0x7ae(%rip)
3997(5): call 0x1269(%rip)
399c(5): mov $0x1,%edi
39a1(5): call 0xffffe46f(%rip)
39a6(3): movzx (%rdx),%edx
39a9(2): test %dl,%dl
39ab(2): jz 0x62(%rip)
39ad(3): cmp $0x3d,%dl
39b0(2): jz 0x5d(%rip)
39b2(3): mov %r13,%rdx
39b5(5): mov $0x63,%esi
39ba(7): lea 0x8e5a(%rip),%rcx
39c1(2): jmp 0xe(%rip)
39c3(3): movzx (%rcx),%esi
39c6(3): test %sil,%sil
39c9(6): jz 0xfffffde9(%rip)
39cf(4): add $0x1,%rdx
39d3(4): add $0x1,%rcx
39d7(4): cmp %sil,0xffffffff(%rdx)
39db(2): jz 0xffffffe8(%rip)
39dd(3): mov %r13,%rdx
39e0(5): mov $0x73,%esi
39e5(7): lea 0x8dd5(%rip),%rcx
39ec(2): jmp 0xe(%rip)
39ee(3): movzx (%rcx),%esi
39f1(3): test %sil,%sil
39f4(6): jz 0xfffffe23(%rip)
39fa(4): add $0x1,%rdx
39fe(4): add $0x1,%rcx
3a02(4): cmp %sil,0xffffffff(%rdx)
3a06(2): jz 0xffffffe8(%rip)
3a08(5): jmp 0xfffffe23(%rip)
3a0d(7): mov 0x20d9c4(%rip),%rdi
3a14(3): mov %rax,%r15
3a17(4): lea 0x2(%rdi),%rdx
3a1b(a): mov $0x9223372036854775807,%rdi
3a25(3): add %rdx,%rdx
3a28(3): neg %rdx
3a2b(3): cmp %rdi,%rdx
3a2e(4): cmovnbe %rdi,%rdx
3a32(5): jmp 0xfffffbaf(%rip)
3a37(7): lea 0x9f7a(%rip),%rsi
3a3e(5): mov $0x5,%edx
3a43(2): xor %edi,%edi
3a45(5): call 0xffffe11b(%rip)
3a4a(2): xor %esi,%esi
3a4c(3): mov %rax,%rdx
3a4f(5): mov $0x1,%edi
3a54(2): xor %eax,%eax
3a56(5): call 0x6ea(%rip)
3a5b(7): lea 0x9f7e(%rip),%rsi
3a62(5): mov $0x5,%edx
3a67(2): xor %edi,%edi
3a69(5): call 0xffffe0f7(%rip)
3a6e(2): xor %esi,%esi
3a70(3): mov %rax,%rdx
3a73(5): mov $0x1,%edi
3a78(2): xor %eax,%eax
3a7a(5): call 0x6c6(%rip)
3a7f(5): mov %rax,0x8(%rsp)
3a84(5): jmp 0xfffffe1e(%rip)
3a89(3): mov %rax,%r12
3a8c(5): jmp 0xfffffe16(%rip)
3a91(7): lea 0x9f68(%rip),%rsi
3a98(5): mov $0x5,%edx
3a9d(2): xor %edi,%edi
3a9f(5): call 0xffffe0c1(%rip)
3aa4(2): xor %esi,%esi
3aa6(3): mov %rax,%rdx
3aa9(5): mov $0x1,%edi
3aae(2): xor %eax,%eax
3ab0(5): call 0x690(%rip)
3ab5(7): lea 0x9f64(%rip),%rsi
3abc(5): mov $0x5,%edx
3ac1(2): xor %edi,%edi
3ac3(5): call 0xffffe09d(%rip)
3ac8(2): xor %esi,%esi
3aca(3): mov %rax,%rdx
3acd(5): mov $0x1,%edi
3ad2(2): xor %eax,%eax
3ad4(5): call 0x66c(%rip)
3ad9(7): mov 0x20d900(%rip),%rsi
3ae0(5): mov $0x4,%edi
3ae5(5): call 0x4efb(%rip)
3aea(7): lea 0x8e25(%rip),%rsi
3af1(5): mov $0x5,%edx
3af6(2): xor %edi,%edi
3af8(3): mov %rax,%rbx
3afb(5): call 0xffffe065(%rip)
3b00(3): mov %rax,%rdx
3b03(5): mov 0x10(%rsp),%rax
3b08(3): mov %rbx,%rcx
3b0b(5): mov $0x1,%edi
3b10(2): mov (%rax),%esi
3b12(2): xor %eax,%eax
3b14(5): call 0x62c(%rip)
3b19(7): lea 0x9f28(%rip),%rsi
3b20(5): mov $0x5,%edx
3b25(2): xor %edi,%edi
3b27(5): call 0xffffe039(%rip)
3b2c(3): mov %r14,%r8
3b2f(3): mov %rax,%rdx
3b32(3): mov %rbp,%rcx
3b35(2): xor %esi,%esi
3b37(5): mov $0x1,%edi
3b3c(2): xor %eax,%eax
3b3e(5): call 0x602(%rip)
3b43(7): mov 0x20d896(%rip),%rsi
3b4a(5): mov $0x4,%edi
3b4f(5): call 0x4e91(%rip)
3b54(7): lea 0x8c4b(%rip),%rsi
3b5b(5): mov $0x5,%edx
3b60(2): xor %edi,%edi
3b62(3): mov %rax,%rbx
3b65(5): call 0xffffdffb(%rip)
3b6a(3): mov %rax,%rdx
3b6d(5): mov 0x10(%rsp),%rax
3b72(3): mov %rbx,%rcx
3b75(5): mov $0x1,%edi
3b7a(2): mov (%rax),%esi
3b7c(2): xor %eax,%eax
3b7e(5): call 0x5c2(%rip)
3b83(7): lea 0x8d68(%rip),%rdi
3b8a(5): call 0x5126(%rip)
3b8f(7): lea 0x8d33(%rip),%rsi
3b96(3): mov %rax,%rbx
3b99(5): mov $0x5,%edx
3b9e(2): xor %edi,%edi
3ba0(5): call 0xffffdfc0(%rip)
3ba5(7): lea 0x8bf3(%rip),%rdx
3bac(3): mov %rax,%rcx
3baf(2): xor %edi,%edi
3bb1(3): mov %rbx,%r8
3bb4(2): xor %esi,%esi
3bb6(2): xor %eax,%eax
3bb8(5): call 0x588(%rip)
3bbd(5): mov $0x1,%edi
3bc2(5): call 0x146e(%rip)
3bc7(5): call 0xffffdfc9(%rip)
3bcc(7): mov 0x20d815(%rip),%rsi
3bd3(5): mov $0x4,%edi
3bd8(5): call 0x4e08(%rip)
3bdd(7): lea 0x8d32(%rip),%rsi
3be4(5): mov $0x5,%edx
3be9(2): xor %edi,%edi
3beb(3): mov %rax,%rbx
3bee(5): call 0xffffdf72(%rip)
3bf3(3): mov %rax,%rdx
3bf6(5): mov 0x10(%rsp),%rax
3bfb(3): mov %rbx,%rcx
3bfe(5): mov $0x1,%edi
3c03(2): mov (%rax),%esi
3c05(2): xor %eax,%eax
3c07(5): call 0x539(%rip)
3c0c(7): lea 0x9d75(%rip),%rsi
3c13(5): mov $0x5,%edx
3c18(2): xor %edi,%edi
3c1a(5): call 0xffffdf46(%rip)
3c1f(2): xor %esi,%esi
3c21(3): mov %rax,%rdx
3c24(5): mov $0x1,%edi
3c29(2): xor %eax,%eax
3c2b(5): call 0x515(%rip)
3c30(7): lea 0x8bee(%rip),%rax
3c37(7): lea 0x8bf3(%rip),%rdi
3c3e(4): and $0x4,%sil
3c42(4): cmovne %rax,%rdi
3c46(5): call 0x506a(%rip)
3c4b(5): mov $0x5,%edx
3c50(3): mov %rax,%rbx
3c53(7): lea 0x8c6f(%rip),%rsi
3c5a(5): jmp 0xffffff44(%rip)
3c5f(7): lea 0x8c96(%rip),%rdi
3c66(5): call 0x504a(%rip)
3c6b(5): mov $0x5,%edx
3c70(3): mov %rax,%rbx
3c73(7): lea 0x8c3c(%rip),%rsi
3c7a(5): jmp 0xffffff24(%rip)

"_start" :
3c80(2): xor %ebp,%ebp
3c82(3): mov %rdx,%r9
3c85(1): pop %rsi
3c86(3): mov %rsp,%rdx
3c89(4): and $0xfffffff0,%rsp
3c8d(1): push %rax
3c8e(1): push %rsp
3c8f(7): lea 0x893a(%rip),%r8
3c96(7): lea 0x88c3(%rip),%rcx
3c9d(7): lea 0xffffe20c(%rip),%rdi
3ca4(6): call 0x20d326(%rip)
3caa(1): hlt 

"deregister_tm_clones" :
3cb0(7): lea 0x20d3f1(%rip),%rdi
3cb7(1): push %rbp
3cb8(7): lea 0x20d3e9(%rip),%rax
3cbf(3): cmp %rdi,%rax
3cc2(3): mov %rsp,%rbp
3cc5(2): jz 0x1b(%rip)
3cc7(7): mov 0x20d2fa(%rip),%rax
3cce(3): test %rax,%rax
3cd1(2): jz 0xf(%rip)
3cd3(1): pop %rbp
3cd4(2): jmp %rax
3cd6(a): nop 0x0(%rax,%rax,1)
3ce0(1): pop %rbp
3ce1(1): ret near (%rsp)

"register_tm_clones" :
3cf0(7): lea 0x20d3b1(%rip),%rdi
3cf7(7): lea 0x20d3aa(%rip),%rsi
3cfe(1): push %rbp
3cff(3): sub %rdi,%rsi
3d02(3): mov %rsp,%rbp
3d05(4): sar $0x3,%rsi
3d09(3): mov %rsi,%rax
3d0c(4): shr $0x3f,%rax
3d10(3): add %rax,%rsi
3d13(3): sar $0x1,%rsi
3d16(2): jz 0x1a(%rip)
3d18(7): mov 0x20d2c1(%rip),%rax
3d1f(3): test %rax,%rax
3d22(2): jz 0xe(%rip)
3d24(1): pop %rbp
3d25(2): jmp %rax
3d27(9): nop 0x0(%rax,%rax,1)
3d30(1): pop %rbp
3d31(1): ret near (%rsp)

"__do_global_dtors_aux" :
3d40(7): cmp $0x0,0x20d3c1(%rip)
3d47(2): jnz 0x31(%rip)
3d49(8): cmp $0x0,0x20d297(%rip)
3d51(1): push %rbp
3d52(3): mov %rsp,%rbp
3d55(2): jz 0xe(%rip)
3d57(7): mov 0x20d2aa(%rip),%rdi
3d5e(5): call 0xffffe142(%rip)
3d63(5): call 0xffffff4d(%rip)
3d68(7): mov $0x1,0x20d399(%rip)
3d6f(1): pop %rbp
3d70(1): ret near (%rsp)
3d71(7): nop 0x0(%rax)
3d78(2): REP ret near (%rsp)

"frame_dummy" :
3d80(1): push %rbp
3d81(3): mov %rsp,%rbp
3d84(1): pop %rbp
3d85(5): jmp 0xffffff6b(%rip)

"interrupt_handler" :
3d90(6): mov %edi,0x20d4da(%rip)
3d96(1): ret near (%rsp)

"siginfo_handler" :
3da0(6): mov 0x20d4c6(%rip),%eax
3da6(3): add $0x1,%eax
3da9(6): mov %eax,0x20d4bd(%rip)
3daf(1): ret near (%rsp)

"print_xfer_stats" :
3db0(2): push %r15
3db2(2): push %r14
3db4(3): mov %rdi,%r14
3db7(2): push %r13
3db9(2): push %r12
3dbb(1): push %rbp
3dbc(1): push %rbx
3dbd(3): mov %rdi,%rbp
3dc0(7): sub $0x7e8,%rsp
3dc7(9): mov $0x28,%rax
3dd0(8): mov %rax,0x7d8(%rsp)
3dd8(2): xor %eax,%eax
3dda(3): test %rdi,%rdi
3ddd(6): jz 0x253(%rip)
3de3(5): lea 0x10(%rsp),%rbx
3de8(7): mov 0x20d569(%rip),%rdi
3def(6): mov $0x1,%r8d
3df5(5): mov $0x1,%ecx
3dfa(5): mov $0x1d1,%edx
3dff(3): mov %rbx,%rsi
3e02(5): call 0x231e(%rip)
3e07(7): mov 0x20d54a(%rip),%rdi
3e0e(7): lea 0x28e(%rbx),%rsi
3e15(6): mov $0x1,%r8d
3e1b(5): mov $0x1,%ecx
3e20(5): mov $0x1f1,%edx
3e25(3): mov %rax,%r12
3e28(5): call 0x22f8(%rip)
3e2d(3): mov %rax,%r13
3e30(7): mov 0x20d519(%rip),%rax
3e37(3): cmp %r14,%rax
3e3a(6): jnl 0x14e(%rip)
3e40(3): sub %rax,%r14
3e43(3): mov %r14,%r8
3e46(6): js 0x26a(%rip)
3e4c(4): pxor %xmm0,%xmm0
3e50(5): cvtsi2sd %r14,%xmm0
3e55(8): divsd 0xa313(%rip),%xmm0
3e5d(7): mov 0x20d4f4(%rip),%rdi
3e64(7): lea 0x51c(%rbx),%rsi
3e6b(5): mov $0x3b9aca00,%ecx
3e70(5): mov $0x1d1,%edx
3e75(6): movsd %xmm0,0x8(%rsp)
3e7b(5): call 0x22a5(%rip)
3e80(3): mov %rax,%rdi
3e83(3): mov %rax,%rbx
3e86(5): call 0xffffdcfa(%rip)
3e8b(5): mov $0x732f,%ecx
3e90(3): test %rbp,%rbp
3e93(5): mov $0x0,0x2(%rbx,%rax,1)
3e98(4): mov %cx,0x0(%rbx,%rax,1)
3e9c(6): movsd 0x8(%rsp),%xmm0
3ea2(7): lea 0x8762(%rip),%r8
3ea9(6): jnz 0x130(%rip)
3eaf(8): lea 0x7c0(%rsp),%r14
3eb7(5): mov $0x18,%ecx
3ebc(5): mov $0x1,%edx
3ec1(5): mov $0x18,%esi
3ec6(5): mov $0x1,%eax
3ecb(3): mov %r14,%rdi
3ece(5): call 0xffffdb72(%rip)
3ed3(3): mov %r12,%rdi
3ed6(5): call 0xffffdcaa(%rip)
3edb(6): cmp $0x20,0xfffffffe(%r12,%rax,1)
3ee1(6): jz 0x17f(%rip)
3ee7(3): mov %r13,%rdi
3eea(5): call 0xffffdc96(%rip)
3eef(6): cmp $0x20,0xfffffffe(%r13,%rax,1)
3ef5(7): mov 0x20d45c(%rip),%r15
3efc(5): mov $0x5,%edx
3f01(6): jz 0x13f(%rip)
3f07(7): lea 0x8a7a(%rip),%rsi
3f0e(2): xor %edi,%edi
3f10(5): call 0xffffdc50(%rip)
3f15(1): push %rbx
3f16(2): push %r14
3f18(3): mov %r13,%r9
3f1b(7): mov 0x20d1de(%rip),%rdi
3f22(3): mov %rax,%rdx
3f25(3): mov %r12,%r8
3f28(3): mov %r15,%rcx
3f2b(5): mov $0x1,%esi
3f30(2): xor %eax,%eax
3f32(5): call 0xffffdefe(%rip)
3f37(2): mov %eax,%ebx
3f39(1): pop %rax
3f3a(1): pop %rdx
3f3b(3): test %rbp,%rbp
3f3e(6): jz 0xca(%rip)
3f44(2): test %ebx,%ebx
3f46(2): js 0x10(%rip)
3f48(6): mov 0x20d3f2(%rip),%ecx
3f4e(2): cmp %ebx,%ecx
3f50(6): jnle 0x188(%rip)
3f56(6): mov %ebx,0x20d3e4(%rip)
3f5c(8): mov 0x7d8(%rsp),%rax
3f64(9): xor $0x28,%rax
3f6d(6): jnz 0x1c5(%rip)
3f73(7): add $0x7e8,%rsp
3f7a(1): pop %rbx
3f7b(1): pop %rbp
3f7c(2): pop %r12
3f7e(2): pop %r13
3f80(2): pop %r14
3f82(2): pop %r15
3f84(1): ret near (%rsp)
3f85(3): nop (%rax)
3f88(7): lea 0x8681(%rip),%rsi
3f8f(2): xor %edi,%edi
3f91(5): mov $0x5,%edx
3f96(7): add $0x51c,%rbx
3f9d(5): call 0xffffdbc3(%rip)
3fa2(7): lea 0x8670(%rip),%r8
3fa9(3): mov %rax,%r9
3fac(5): mov $0x28e,%ecx
3fb1(2): xor %eax,%eax
3fb3(5): mov $0x1,%edx
3fb8(5): mov $0x28e,%esi
3fbd(3): mov %rbx,%rdi
3fc0(5): call 0xffffda80(%rip)
3fc5(3): test %rbp,%rbp
3fc8(4): pxor %xmm0,%xmm0
3fcc(7): lea 0x8638(%rip),%r8
3fd3(6): jz 0xfffffedc(%rip)
3fd9(7): mov 0x20d120(%rip),%rdi
3fe0(4): mov 0x28(%rdi),%rax
3fe4(4): cmp 0x30(%rdi),%rax
3fe8(6): jnb 0x128(%rip)
3fee(4): lea 0x1(%rax),%rdx
3ff2(7): lea 0x860b(%rip),%r8
3ff9(4): mov %rdx,0x28(%rdi)
3ffd(3): mov $0xd,(%rax)
4000(5): jmp 0xfffffeaf(%rip)
4005(3): nop (%rax)
4008(7): mov 0x20d0f1(%rip),%rdi
400f(4): mov 0x28(%rdi),%rax
4013(4): cmp 0x30(%rdi),%rax
4017(6): jnb 0xe9(%rip)
401d(4): lea 0x1(%rax),%rdx
4021(4): mov %rdx,0x28(%rdi)
4025(3): mov $0xa,(%rax)
4028(5): jmp 0xffffff34(%rip)
402d(3): nop (%rax)
4030(5): call 0x1f30(%rip)
4035(3): mov %rax,%r14
4038(5): jmp 0xfffffdab(%rip)
403d(3): nop (%rax)
4040(7): lea 0x860a(%rip),%rsi
4047(2): xor %edi,%edi
4049(5): call 0xffffdb17(%rip)
404e(4): sub $0x8,%rsp
4052(3): mov %r14,%r9
4055(1): push %rbx
4056(5): jmp 0xfffffec5(%rip)
405b(5): nop 0x0(%rax,%rax,1)
4060(7): mov 0x20d2f1(%rip),%r12
4067(7): lea 0x85b2(%rip),%rdx
406e(7): lea 0x85c4(%rip),%rsi
4075(6): mov $0x5,%r8d
407b(2): xor %edi,%edi
407d(3): mov %r12,%rcx
4080(5): call 0xffffdd50(%rip)
4085(7): mov 0x20d074(%rip),%rdi
408c(3): mov %rbx,%r9
408f(3): mov %rax,%rdx
4092(3): mov %r14,%r8
4095(3): mov %r12,%rcx
4098(5): mov $0x1,%esi
409d(2): xor %eax,%eax
409f(5): call 0xffffdd91(%rip)
40a4(2): mov %eax,%ebx
40a6(5): jmp 0xfffffe95(%rip)
40ab(5): nop 0x0(%rax,%rax,1)
40b0(3): mov %r14,%rax
40b3(3): mov %r14,%rdx
40b6(4): pxor %xmm0,%xmm0
40ba(3): shr $0x1,%rax
40bd(3): and $0x1,%edx
40c0(3): or %rdx,%rax
40c3(5): cvtsi2sd %rax,%xmm0
40c8(4): addsd %xmm0,%xmm0
40cc(5): jmp 0xfffffd89(%rip)
40d1(7): nop 0x0(%rax)
40d8(7): mov 0x20d021(%rip),%rdi
40df(7): lea 0xa6bb(%rip),%r8
40e6(7): lea 0x8582(%rip),%rdx
40ed(2): sub %ebx,%ecx
40ef(5): mov $0x1,%esi
40f4(2): xor %eax,%eax
40f6(5): call 0xffffdd3a(%rip)
40fb(5): jmp 0xfffffe5b(%rip)
4100(5): mov $0xa,%esi
4105(5): call 0xffffdadb(%rip)
410a(5): jmp 0xfffffe52(%rip)
410f(1): nop 
4110(5): mov $0xd,%esi
4115(6): movsd %xmm0,0x8(%rsp)
411b(5): call 0xffffdac5(%rip)
4120(7): lea 0x84dd(%rip),%r8
4127(6): movsd 0x8(%rsp),%xmm0
412d(5): jmp 0xfffffd82(%rip)
4132(5): call 0xffffda5e(%rip)

"nl_error" :
4140(1): push %rbp
4141(1): push %rbx
4142(2): mov %esi,%ebp
4144(2): mov %edi,%ebx
4146(7): sub $0xe8,%rsp
414d(2): test %al,%al
414f(5): mov %rcx,0x48(%rsp)
4154(5): mov %r8,0x50(%rsp)
4159(5): mov %r9,0x58(%rsp)
415e(2): jz 0x3c(%rip)
4160(5): movaps %xmm0,0x60(%rsp)
4165(5): movaps %xmm1,0x70(%rsp)
416a(8): movaps %xmm2,0x80(%rsp)
4172(8): movaps %xmm3,0x90(%rsp)
417a(8): movaps %xmm4,0xa0(%rsp)
4182(8): movaps %xmm5,0xb0(%rsp)
418a(8): movaps %xmm6,0xc0(%rsp)
4192(8): movaps %xmm7,0xd0(%rsp)
419a(9): mov $0x28,%rax
41a3(5): mov %rax,0x28(%rsp)
41a8(2): xor %eax,%eax
41aa(6): mov 0x20d190(%rip),%eax
41b0(2): test %eax,%eax
41b2(2): jle 0x28(%rip)
41b4(7): mov 0x20cf45(%rip),%rdi
41bb(4): mov 0x28(%rdi),%rax
41bf(4): cmp 0x30(%rdi),%rax
41c3(2): jnb 0x6d(%rip)
41c5(4): lea 0x1(%rax),%rcx
41c9(4): mov %rcx,0x28(%rdi)
41cd(3): mov $0xa,(%rax)
41d0(a): mov $0x0,0x20d166(%rip)
41da(8): lea 0x100(%rsp),%rax
41e2(5): lea 0x10(%rsp),%rcx
41e7(2): mov %ebp,%esi
41e9(2): mov %ebx,%edi
41eb(8): mov $0x18,0x10(%rsp)
41f3(8): mov $0x30,0x14(%rsp)
41fb(5): mov %rax,0x18(%rsp)
4200(5): lea 0x30(%rsp),%rax
4205(5): mov %rax,0x20(%rsp)
420a(5): call 0x4b86(%rip)
420f(5): mov 0x28(%rsp),%rax
4214(9): xor $0x28,%rax
421d(2): jnz 0x29(%rip)
421f(7): add $0xe8,%rsp
4226(1): pop %rbx
4227(1): pop %rbp
4228(1): ret near (%rsp)
4229(7): nop 0x0(%rax)
4230(5): mov $0xa,%esi
4235(5): mov %rdx,0x8(%rsp)
423a(5): call 0xffffd9a6(%rip)
423f(5): mov 0x8(%rsp),%rdx
4244(2): jmp 0xffffff8c(%rip)
4246(5): call 0xffffd94a(%rip)

"parse_integer" :
4250(2): push %r13
4252(2): push %r12
4254(7): lea 0x8418(%rip),%r8
425b(1): push %rbp
425c(1): push %rbx
425d(3): mov %rsi,%r12
4260(5): mov $0xa,%edx
4265(3): mov %rdi,%rbp
4268(4): sub $0x28,%rsp
426c(5): lea 0x8(%rsp),%rcx
4271(5): lea 0x10(%rsp),%rsi
4276(9): mov $0x28,%rax
427f(5): mov %rax,0x18(%rsp)
4284(2): xor %eax,%eax
4286(5): call 0x53ca(%rip)
428b(3): cmp $0x2,%eax
428e(2): mov %eax,%edx
4290(2): jz 0x30(%rip)
4292(2): test %edx,%edx
4294(5): mov 0x8(%rsp),%rax
4299(2): jnz 0x31(%rip)
429b(5): mov 0x18(%rsp),%rbx
42a0(9): xor $0x28,%rbx
42a9(6): jnz 0xe7(%rip)
42af(4): add $0x28,%rsp
42b3(1): pop %rbx
42b4(1): pop %rbp
42b5(2): pop %r12
42b7(2): pop %r13
42b9(1): ret near (%rsp)
42ba(6): nop 0x0(%rax,%rax,1)
42c0(5): mov 0x10(%rsp),%rdi
42c5(3): cmp $0x78,(%rdi)
42c8(2): jz 0x10(%rip)
42ca(4): mov %edx,(%r12)
42ce(2): xor %eax,%eax
42d0(2): jmp 0xffffffcb(%rip)
42d2(6): nop 0x0(%rax,%rax,1)
42d8(4): add $0x1,%rdi
42dc(3): mov %r12,%rsi
42df(5): call 0xffffff71(%rip)
42e4(3): test %rax,%rax
42e7(3): mov %rax,%rbx
42ea(2): jz 0x26(%rip)
42ec(5): mov 0x8(%rsp),%rcx
42f1(2): xor %edx,%edx
42f3(3): mov %rcx,%rax
42f6(4): imul %rbx,%rax
42fa(3): div %rbx,%rax
42fd(3): cmp %rax,%rcx
4300(2): jz 0x15(%rip)
4302(8): mov $0x1,(%r12)
430a(2): xor %eax,%eax
430c(2): jmp 0xffffff8f(%rip)
430e(2): nop 
4310(5): mov 0x8(%rsp),%rax
4315(3): test %rax,%rax
4318(2): jnz 0x20(%rip)
431a(7): lea 0x8361(%rip),%r12
4321(5): mov $0x2,%ecx
4326(3): mov %rbp,%rsi
4329(3): mov %r12,%rdi
432c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
432e(3): setnbe %dl
4331(3): sbb $0x0,%dl
4334(2): test %dl,%dl
4336(2): jz 0xb(%rip)
4338(4): imul %rbx,%rax
433c(5): jmp 0xffffff5f(%rip)
4341(7): lea 0x8339(%rip),%rsi
4348(5): mov $0x1,%edi
434d(5): call 0x4943(%rip)
4352(3): mov %r12,%rsi
4355(2): xor %edi,%edi
4357(3): mov %rax,%r13
435a(5): call 0x4936(%rip)
435f(7): lea 0x864a(%rip),%rsi
4366(3): mov %rax,%rbp
4369(5): mov $0x5,%edx
436e(2): xor %edi,%edi
4370(5): call 0xffffd7f0(%rip)
4375(3): mov %r13,%r8
4378(3): mov %rax,%rdx
437b(3): mov %rbp,%rcx
437e(2): xor %eax,%eax
4380(2): xor %esi,%esi
4382(2): xor %edi,%edi
4384(5): call 0xfffffdbc(%rip)
4389(5): mov 0x8(%rsp),%rax
438e(2): jmp 0xffffffaa(%rip)
4390(5): call 0xffffd800(%rip)

"set_fd_flags" :
43a0(2): push %r13
43a2(2): push %r12
43a4(1): push %rbp
43a5(1): push %rbx
43a6(2): mov %esi,%ebx
43a8(7): sub $0xa8,%rsp
43af(9): mov $0x28,%rax
43b8(8): mov %rax,0x98(%rsp)
43c0(2): xor %eax,%eax
43c2(6): and $0xfffdfeff,%ebx
43c8(2): jnz 0x27(%rip)
43ca(8): mov 0x98(%rsp),%rax
43d2(9): xor $0x28,%rax
43db(6): jnz 0xd0(%rip)
43e1(7): add $0xa8,%rsp
43e8(1): pop %rbx
43e9(1): pop %rbp
43ea(2): pop %r12
43ec(2): pop %r13
43ee(1): ret near (%rsp)
43ef(5): mov $0x3,%esi
43f4(2): mov %edi,%ebp
43f6(3): mov %rdx,%r13
43f9(5): call 0x58f7(%rip)
43fe(2): or %eax,%ebx
4400(2): test %eax,%eax
4402(3): mov %eax,%r12d
4405(2): js 0x53(%rip)
4407(2): cmp %ebx,%eax
4409(2): jz 0xffffffc1(%rip)
440b(6): test $0x10000,%ebx
4411(2): jnz 0x19(%rip)
4413(2): xor %eax,%eax
4415(2): mov %ebx,%edx
4417(5): mov $0x4,%esi
441c(2): mov %ebp,%edi
441e(5): call 0x58d2(%rip)
4423(3): add $0x1,%eax
4426(2): jnz 0xffffffa4(%rip)
4428(2): jmp 0x30(%rip)
442a(3): mov %rsp,%rdx
442d(2): mov %ebp,%esi
442f(5): mov $0x1,%edi
4434(5): call 0xffffd8fc(%rip)
4439(2): test %eax,%eax
443b(2): jnz 0x1d(%rip)
443d(4): mov 0x18(%rsp),%eax
4441(5): and $0xf000,%eax
4446(5): cmp $0x4000,%eax
444b(2): jz 0x4c(%rip)
444d(5): call 0xffffd633(%rip)
4452(6): mov $0x14,(%rax)
4458(3): mov %r13,%rsi
445b(5): mov $0x4,%edi
4460(5): call 0x4580(%rip)
4465(7): lea 0x8219(%rip),%rsi
446c(5): mov $0x5,%edx
4471(2): xor %edi,%edi
4473(3): mov %rax,%rbp
4476(5): call 0xffffd6ea(%rip)
447b(3): mov %rax,%rbx
447e(5): call 0xffffd602(%rip)
4483(2): mov (%rax),%esi
4485(3): mov %rbp,%rcx
4488(3): mov %rbx,%rdx
448b(5): mov $0x1,%edi
4490(2): xor %eax,%eax
4492(5): call 0xfffffcae(%rip)
4497(6): and $0xfffeffff,%ebx
449d(3): cmp %r12d,%ebx
44a0(6): jnz 0xffffff73(%rip)
44a6(5): jmp 0xffffff24(%rip)
44ab(5): call 0xffffd6e5(%rip)

"skip_via_lseek" :
44b0(2): push %r14
44b2(2): push %r13
44b4(3): mov %rdi,%r13
44b7(2): push %r12
44b9(1): push %rbp
44ba(3): mov %ecx,%r12d
44bd(1): push %rbx
44be(2): mov %esi,%ebx
44c0(3): mov %rdx,%rbp
44c3(5): mov $0x80306d02,%esi
44c8(2): mov %ebx,%edi
44ca(4): sub $0x70,%rsp
44ce(9): mov $0x28,%rax
44d7(5): mov %rax,0x68(%rsp)
44dc(2): xor %eax,%eax
44de(3): mov %rsp,%rdx
44e1(5): call 0xffffd76f(%rip)
44e6(3): mov %rbp,%rsi
44e9(3): mov %r12d,%edx
44ec(2): mov %ebx,%edi
44ee(3): mov %eax,%r14d
44f1(5): call 0xffffd71f(%rip)
44f6(3): test %rax,%rax
44f9(3): mov %rax,%rbp
44fc(2): js 0x3c(%rip)
44fe(3): test %r14d,%r14d
4501(2): jnz 0x37(%rip)
4503(5): lea 0x30(%rsp),%rdx
4508(2): xor %eax,%eax
450a(5): mov $0x80306d02,%esi
450f(2): mov %ebx,%edi
4511(5): call 0xffffd73f(%rip)
4516(2): test %eax,%eax
4518(2): jnz 0x20(%rip)
451a(5): mov 0x38(%rsp),%rax
451f(5): cmp %rax,0x8(%rsp)
4524(2): jnz 0x14(%rip)
4526(5): mov 0x58(%rsp),%rax
452b(5): cmp %rax,0x28(%rsp)
4530(2): jz 0x28(%rip)
4532(6): nop 0x0(%rax,%rax,1)
4538(5): mov 0x68(%rsp),%rcx
453d(9): xor $0x28,%rcx
4546(3): mov %rbp,%rax
4549(2): jnz 0x55(%rip)
454b(4): add $0x70,%rsp
454f(1): pop %rbx
4550(1): pop %rbp
4551(2): pop %r12
4553(2): pop %r13
4555(2): pop %r14
4557(1): ret near (%rsp)
4558(7): cmp $0x1,0x20cabd(%rip)
455f(2): jz 0x2e(%rip)
4561(5): mov 0x30(%rsp),%rbx
4566(7): lea 0x8483(%rip),%rsi
456d(5): mov $0x5,%edx
4572(2): xor %edi,%edi
4574(5): call 0xffffd5ec(%rip)
4579(3): mov %rbx,%r8
457c(3): mov %rax,%rdx
457f(3): mov %r13,%rcx
4582(2): xor %esi,%esi
4584(2): xor %edi,%edi
4586(2): xor %eax,%eax
4588(5): call 0xfffffbb8(%rip)
458d(5): call 0xffffd4f3(%rip)
4592(4): or $0xffffffff,%rbp
4596(6): mov $0x0,(%rax)
459c(2): jmp 0xffffff9c(%rip)
459e(5): call 0xffffd5f2(%rip)

"invalidate_cache" :
45b0(2): push %r15
45b2(2): push %r14
45b4(2): push %r13
45b6(2): push %r12
45b8(1): push %rbp
45b9(1): push %rbx
45ba(4): sub $0x8,%rsp
45be(2): test %edi,%edi
45c0(6): jnz 0x90(%rip)
45c6(8): movzx 0x20cc9b(%rip),%r15d
45ce(7): lea 0x20cb53(%rip),%rax
45d5(3): test %rsi,%rsi
45d8(3): mov (%rax),%rbx
45db(2): jz 0x35(%rip)
45dd(3): add %rsi,%rbx
45e0(3): mov %rbx,%r14
45e3(7): and $0x1ffff,%r14d
45ea(3): cmp %r14,%rbx
45ed(3): mov %r14,(%rax)
45f0(2): jnbe 0x78(%rip)
45f2(6): mov $0x1,%r12d
45f8(4): add $0x8,%rsp
45fc(3): mov %r12d,%eax
45ff(1): pop %rbx
4600(1): pop %rbp
4601(2): pop %r12
4603(2): pop %r13
4605(2): pop %r14
4607(2): pop %r15
4609(1): ret near (%rsp)
460a(6): nop 0x0(%rax,%rax,1)
4610(3): test %rbx,%rbx
4613(2): jnz 0x7(%rip)
4615(3): test %r15b,%r15b
4618(2): jz 0xffffffda(%rip)
461a(3): xor %r14d,%r14d
461d(2): test %edi,%edi
461f(3): mov %rsi,%rbp
4622(3): mov %edi,%r13d
4625(2): jnz 0x4b(%rip)
4627(8): movzx 0x20cd0d(%rip),%r12d
462f(7): mov 0x20ccfa(%rip),%rsi
4636(3): test %r12b,%r12b
4639(2): jnz 0x63(%rip)
463b(5): call 0xffffd445(%rip)
4640(6): mov $0x1d,(%rax)
4646(2): jmp 0xffffffb2(%rip)
4648(8): nop 0x0(%rax,%rax,1)
4650(8): movzx 0x20cc10(%rip),%r15d
4658(7): lea 0x20cac1(%rip),%rax
465f(5): jmp 0xffffff76(%rip)
4664(4): nop 0x0(%rax)
4668(3): sub %r14,%rbx
466b(2): jz 0xffffff87(%rip)
466d(2): jmp 0xffffffb0(%rip)
466f(1): nop 
4670(7): mov 0x20c999(%rip),%rsi
4677(3): xor %r12d,%r12d
467a(4): cmp $0xffffffff,%rsi
467e(6): jz 0xffffff7a(%rip)
4684(3): test %rsi,%rsi
4687(2): js 0x81(%rip)
4689(3): test %rbp,%rbp
468c(2): jz 0x1c(%rip)
468e(4): lea 0x0(%r14,%rbx,1),%rax
4692(3): add %rax,%rsi
4695(7): mov %rsi,0x20c974(%rip)
469c(3): xor %r12d,%r12d
469f(3): test %rsi,%rsi
46a2(6): js 0xffffff56(%rip)
46a8(3): sub %rbx,%rsi
46ab(3): test %rbp,%rbp
46ae(2): jnz 0x42(%rip)
46b0(3): test %rbx,%rbx
46b3(2): jz 0x3d(%rip)
46b5(3): test %r15b,%r15b
46b8(2): jz 0x48(%rip)
46ba(3): mov %rsi,%rax
46bd(2): xor %edx,%edx
46bf(2): xor %ebx,%ebx
46c1(7): div 0x20cd10(%rip),%rax
46c8(3): sub %rdx,%rsi
46cb(5): mov $0x4,%ecx
46d0(3): mov %rbx,%rdx
46d3(3): mov %r13d,%edi
46d6(5): call 0xffffd59a(%rip)
46db(3): cmp $0xff,%eax
46de(4): setnz %r12b
46e2(5): jmp 0xffffff16(%rip)
46e7(9): nop 0x0(%rax,%rax,1)
46f0(3): sub %r14,%rsi
46f3(3): test %rbx,%rbx
46f6(2): jnz 0xffffffd5(%rip)
46f8(2): jmp 0xffffffc2(%rip)
46fa(6): nop 0x0(%rax,%rax,1)
4700(3): sub %r14,%rsi
4703(2): jmp 0xffffffc8(%rip)
4705(3): nop (%rax)
4708(2): xor %esi,%esi
470a(5): mov $0x1,%edx
470f(5): mov $0x1,%edi
4714(5): call 0xffffd4fc(%rip)
4719(3): mov %rax,%rsi
471c(7): mov %rax,0x20c8ed(%rip)
4723(5): jmp 0xffffff79(%rip)

"maybe_close_stdout" :
4730(7): cmp $0x0,0x20c8e1(%rip)
4737(2): jnz 0x21(%rip)
4739(4): sub $0x8,%rsp
473d(7): mov 0x20c9bc(%rip),%rdi
4744(5): call 0x166c(%rip)
4749(2): test %eax,%eax
474b(2): jnz 0x12(%rip)
474d(4): add $0x8,%rsp
4751(1): ret near (%rsp)
4752(6): nop 0x0(%rax,%rax,1)
4758(5): jmp 0x16f8(%rip)
475d(5): mov $0x1,%edi
4762(5): call 0xffffd35e(%rip)
4767(9): nop 0x0(%rax,%rax,1)
4770(2): push %r13
4772(2): push %r12
4774(1): push %rbp
4775(1): push %rbx
4776(4): sub $0x8,%rsp
477a(6): mov 0x20cbc0(%rip),%ecx
4780(2): test %ecx,%ecx
4782(2): jle 0x2c(%rip)
4784(7): mov 0x20c975(%rip),%rdi
478b(4): mov 0x28(%rdi),%rax
478f(4): cmp 0x30(%rdi),%rax
4793(6): jnb 0xed(%rip)
4799(4): lea 0x1(%rax),%rdx
479d(4): mov %rdx,0x28(%rdi)
47a1(3): mov $0xa,(%rax)
47a4(a): mov $0x0,0x20cb92(%rip)
47ae(7): mov 0x20cbc3(%rip),%r13
47b5(7): lea 0x82ac(%rip),%rsi
47bc(7): mov 0x20cb9d(%rip),%rbx
47c3(2): xor %edi,%edi
47c5(7): mov 0x20cba4(%rip),%r12
47cc(7): mov 0x20cb95(%rip),%rbp
47d3(5): mov $0x5,%edx
47d8(5): call 0xffffd388(%rip)
47dd(4): sub $0x8,%rsp
47e1(7): mov 0x20c918(%rip),%rdi
47e8(3): mov %rax,%rdx
47eb(2): push %r13
47ed(3): mov %rbx,%rcx
47f0(2): xor %eax,%eax
47f2(3): mov %r12,%r9
47f5(3): mov %rbp,%r8
47f8(5): mov $0x1,%esi
47fd(5): call 0xffffd633(%rip)
4802(7): mov 0x20cb17(%rip),%rbx
4809(1): pop %rax
480a(1): pop %rdx
480b(3): test %rbx,%rbx
480e(2): jnz 0x32(%rip)
4810(7): cmp $0x2,0x20c805(%rip)
4817(2): jz 0x19(%rip)
4819(4): add $0x8,%rsp
481d(2): xor %edi,%edi
481f(1): pop %rbx
4820(1): pop %rbp
4821(2): pop %r12
4823(2): pop %r13
4825(5): jmp 0xfffff58b(%rip)
482a(6): nop 0x0(%rax,%rax,1)
4830(4): add $0x8,%rsp
4834(1): pop %rbx
4835(1): pop %rbp
4836(2): pop %r12
4838(2): pop %r13
483a(1): ret near (%rsp)
483b(5): nop 0x0(%rax,%rax,1)
4840(7): lea 0x7e53(%rip),%rdx
4847(7): lea 0x7e63(%rip),%rsi
484e(3): mov %rbx,%rcx
4851(2): xor %edi,%edi
4853(6): mov $0x5,%r8d
4859(5): call 0xffffd577(%rip)
485e(7): mov 0x20c89b(%rip),%rdi
4865(3): mov %rax,%rdx
4868(3): mov %rbx,%rcx
486b(5): mov $0x1,%esi
4870(2): xor %eax,%eax
4872(5): call 0xffffd5be(%rip)
4877(2): jmp 0xffffff99(%rip)
4879(7): nop 0x0(%rax)
4880(5): mov $0xa,%esi
4885(5): call 0xffffd35b(%rip)
488a(5): jmp 0xffffff1a(%rip)

"print_stats.part.2" :
4770(2): push %r13
4772(2): push %r12
4774(1): push %rbp
4775(1): push %rbx
4776(4): sub $0x8,%rsp
477a(6): mov 0x20cbc0(%rip),%ecx
4780(2): test %ecx,%ecx
4782(2): jle 0x2c(%rip)
4784(7): mov 0x20c975(%rip),%rdi
478b(4): mov 0x28(%rdi),%rax
478f(4): cmp 0x30(%rdi),%rax
4793(6): jnb 0xed(%rip)
4799(4): lea 0x1(%rax),%rdx
479d(4): mov %rdx,0x28(%rdi)
47a1(3): mov $0xa,(%rax)
47a4(a): mov $0x0,0x20cb92(%rip)
47ae(7): mov 0x20cbc3(%rip),%r13
47b5(7): lea 0x82ac(%rip),%rsi
47bc(7): mov 0x20cb9d(%rip),%rbx
47c3(2): xor %edi,%edi
47c5(7): mov 0x20cba4(%rip),%r12
47cc(7): mov 0x20cb95(%rip),%rbp
47d3(5): mov $0x5,%edx
47d8(5): call 0xffffd388(%rip)
47dd(4): sub $0x8,%rsp
47e1(7): mov 0x20c918(%rip),%rdi
47e8(3): mov %rax,%rdx
47eb(2): push %r13
47ed(3): mov %rbx,%rcx
47f0(2): xor %eax,%eax
47f2(3): mov %r12,%r9
47f5(3): mov %rbp,%r8
47f8(5): mov $0x1,%esi
47fd(5): call 0xffffd633(%rip)
4802(7): mov 0x20cb17(%rip),%rbx
4809(1): pop %rax
480a(1): pop %rdx
480b(3): test %rbx,%rbx
480e(2): jnz 0x32(%rip)
4810(7): cmp $0x2,0x20c805(%rip)
4817(2): jz 0x19(%rip)
4819(4): add $0x8,%rsp
481d(2): xor %edi,%edi
481f(1): pop %rbx
4820(1): pop %rbp
4821(2): pop %r12
4823(2): pop %r13
4825(5): jmp 0xfffff58b(%rip)
482a(6): nop 0x0(%rax,%rax,1)
4830(4): add $0x8,%rsp
4834(1): pop %rbx
4835(1): pop %rbp
4836(2): pop %r12
4838(2): pop %r13
483a(1): ret near (%rsp)
483b(5): nop 0x0(%rax,%rax,1)
4840(7): lea 0x7e53(%rip),%rdx
4847(7): lea 0x7e63(%rip),%rsi
484e(3): mov %rbx,%rcx
4851(2): xor %edi,%edi
4853(6): mov $0x5,%r8d
4859(5): call 0xffffd577(%rip)
485e(7): mov 0x20c89b(%rip),%rdi
4865(3): mov %rax,%rdx
4868(3): mov %rbx,%rcx
486b(5): mov $0x1,%esi
4870(2): xor %eax,%eax
4872(5): call 0xffffd5be(%rip)
4877(2): jmp 0xffffff99(%rip)
4879(7): nop 0x0(%rax)
4880(5): mov $0xa,%esi
4885(5): call 0xffffd35b(%rip)
488a(5): jmp 0xffffff1a(%rip)

"cleanup" :
4890(1): push %rbp
4891(1): push %rbx
4892(2): xor %edi,%edi
4894(4): sub $0x8,%rsp
4898(5): call 0xffffd3c8(%rip)
489d(2): test %eax,%eax
489f(2): js 0x17(%rip)
48a1(5): mov $0x1,%edi
48a6(5): call 0xffffd3ba(%rip)
48ab(2): test %eax,%eax
48ad(2): js 0x4c(%rip)
48af(4): add $0x8,%rsp
48b3(1): pop %rbx
48b4(1): pop %rbp
48b5(1): ret near (%rsp)
48b6(7): mov 0x20cb2b(%rip),%rsi
48bd(5): mov $0x4,%edi
48c2(5): call 0x411e(%rip)
48c7(7): lea 0x7df9(%rip),%rsi
48ce(5): mov $0x5,%edx
48d3(2): xor %edi,%edi
48d5(3): mov %rax,%rbp
48d8(5): call 0xffffd288(%rip)
48dd(3): mov %rax,%rbx
48e0(5): call 0xffffd1a0(%rip)
48e5(2): mov (%rax),%esi
48e7(3): mov %rbp,%rcx
48ea(3): mov %rbx,%rdx
48ed(5): mov $0x1,%edi
48f2(2): xor %eax,%eax
48f4(5): call 0xfffff84c(%rip)
48f9(7): mov 0x20cae0(%rip),%rsi
4900(5): mov $0x4,%edi
4905(5): call 0x40db(%rip)
490a(7): lea 0x7dcc(%rip),%rsi
4911(5): mov $0x5,%edx
4916(2): xor %edi,%edi
4918(3): mov %rax,%rbp
491b(5): call 0xffffd245(%rip)
4920(3): mov %rax,%rbx
4923(5): call 0xffffd15d(%rip)
4928(2): mov (%rax),%esi
492a(3): mov %rbp,%rcx
492d(3): mov %rbx,%rdx
4930(5): mov $0x1,%edi
4935(2): xor %eax,%eax
4937(5): call 0xfffff809(%rip)
493c(4): nop 0x0(%rax)
4940(1): push %rbp
4941(1): push %rbx
4942(7): sub $0x98,%rsp
4949(9): mov $0x28,%rax
4952(8): mov %rax,0x88(%rsp)
495a(2): xor %eax,%eax
495c(3): mov %rsp,%rbp
495f(1): nop 
4960(6): mov 0x20c90a(%rip),%eax
4966(2): test %eax,%eax
4968(2): jnz 0xc(%rip)
496a(6): mov 0x20c8fc(%rip),%eax
4970(2): test %eax,%eax
4972(2): jz 0x7e(%rip)
4974(7): lea 0x20c905(%rip),%rsi
497b(2): xor %edi,%edi
497d(3): mov %rbp,%rdx
4980(5): call 0xffffd0b0(%rip)
4985(6): mov 0x20c8e5(%rip),%ebx
498b(6): mov 0x20c8db(%rip),%eax
4991(2): test %eax,%eax
4993(2): jz 0xb(%rip)
4995(3): sub $0x1,%eax
4998(6): mov %eax,0x20c8ce(%rip)
499e(2): xor %edx,%edx
49a0(3): mov %rbp,%rsi
49a3(5): mov $0x2,%edi
49a8(5): call 0xffffd088(%rip)
49ad(2): test %ebx,%ebx
49af(2): jnz 0x19(%rip)
49b1(7): cmp $0x1,0x20c664(%rip)
49b8(2): jz 0xffffffa8(%rip)
49ba(5): call 0xfffffdb6(%rip)
49bf(2): jmp 0xffffffa1(%rip)
49c1(7): nop 0x0(%rax)
49c8(5): call 0xfffffec8(%rip)
49cd(7): cmp $0x1,0x20c648(%rip)
49d4(2): jz 0x7(%rip)
49d6(5): call 0xfffffd9a(%rip)
49db(2): mov %ebx,%edi
49dd(5): call 0xffffd073(%rip)
49e2(5): jmp 0xffffff7e(%rip)
49e7(9): nop 0x0(%rax,%rax,1)
49f0(8): mov 0x88(%rsp),%rax
49f8(9): xor $0x28,%rax
4a01(2): jnz 0xc(%rip)
4a03(7): add $0x98,%rsp
4a0a(1): pop %rbx
4a0b(1): pop %rbp
4a0c(1): ret near (%rsp)
4a0d(5): call 0xffffd183(%rip)

"process_signals" :
4940(1): push %rbp
4941(1): push %rbx
4942(7): sub $0x98,%rsp
4949(9): mov $0x28,%rax
4952(8): mov %rax,0x88(%rsp)
495a(2): xor %eax,%eax
495c(3): mov %rsp,%rbp
495f(1): nop 
4960(6): mov 0x20c90a(%rip),%eax
4966(2): test %eax,%eax
4968(2): jnz 0xc(%rip)
496a(6): mov 0x20c8fc(%rip),%eax
4970(2): test %eax,%eax
4972(2): jz 0x7e(%rip)
4974(7): lea 0x20c905(%rip),%rsi
497b(2): xor %edi,%edi
497d(3): mov %rbp,%rdx
4980(5): call 0xffffd0b0(%rip)
4985(6): mov 0x20c8e5(%rip),%ebx
498b(6): mov 0x20c8db(%rip),%eax
4991(2): test %eax,%eax
4993(2): jz 0xb(%rip)
4995(3): sub $0x1,%eax
4998(6): mov %eax,0x20c8ce(%rip)
499e(2): xor %edx,%edx
49a0(3): mov %rbp,%rsi
49a3(5): mov $0x2,%edi
49a8(5): call 0xffffd088(%rip)
49ad(2): test %ebx,%ebx
49af(2): jnz 0x19(%rip)
49b1(7): cmp $0x1,0x20c664(%rip)
49b8(2): jz 0xffffffa8(%rip)
49ba(5): call 0xfffffdb6(%rip)
49bf(2): jmp 0xffffffa1(%rip)
49c1(7): nop 0x0(%rax)
49c8(5): call 0xfffffec8(%rip)
49cd(7): cmp $0x1,0x20c648(%rip)
49d4(2): jz 0x7(%rip)
49d6(5): call 0xfffffd9a(%rip)
49db(2): mov %ebx,%edi
49dd(5): call 0xffffd073(%rip)
49e2(5): jmp 0xffffff7e(%rip)
49e7(9): nop 0x0(%rax,%rax,1)
49f0(8): mov 0x88(%rsp),%rax
49f8(9): xor $0x28,%rax
4a01(2): jnz 0xc(%rip)
4a03(7): add $0x98,%rsp
4a0a(1): pop %rbx
4a0b(1): pop %rbp
4a0c(1): ret near (%rsp)
4a0d(5): call 0xffffd183(%rip)

"ifd_reopen" :
4a20(2): push %r14
4a22(3): mov %edi,%r14d
4a25(2): push %r13
4a27(3): mov %rsi,%r13
4a2a(2): push %r12
4a2c(3): mov %edx,%r12d
4a2f(1): push %rbp
4a30(2): mov %ecx,%ebp
4a32(1): push %rbx
4a33(2): jmp 0xf(%rip)
4a35(3): nop (%rax)
4a38(5): call 0xffffd048(%rip)
4a3d(3): cmp $0x4,(%rax)
4a40(2): jnz 0x1d(%rip)
4a42(5): call 0xfffffefe(%rip)
4a47(2): mov %ebp,%ecx
4a49(3): mov %r12d,%edx
4a4c(3): mov %r13,%rsi
4a4f(3): mov %r14d,%edi
4a52(5): call 0x14ae(%rip)
4a57(2): test %eax,%eax
4a59(2): mov %eax,%ebx
4a5b(2): js 0xffffffdd(%rip)
4a5d(2): mov %ebx,%eax
4a5f(1): pop %rbx
4a60(1): pop %rbp
4a61(2): pop %r12
4a63(2): pop %r13
4a65(2): pop %r14
4a67(1): ret near (%rsp)

"iread" :
4a70(2): push %r13
4a72(2): push %r12
4a74(3): mov %edi,%r13d
4a77(1): push %rbp
4a78(1): push %rbx
4a79(3): mov %rsi,%r12
4a7c(3): mov %rdx,%rbp
4a7f(4): sub $0x8,%rsp
4a83(2): jmp 0x1b(%rip)
4a85(3): nop (%rax)
4a88(4): cmp $0x0,%rax
4a8c(2): jnl 0x74(%rip)
4a8e(5): call 0xffffcff2(%rip)
4a93(2): mov (%rax),%edx
4a95(3): cmp $0x4,%edx
4a98(6): jnz 0xd2(%rip)
4a9e(5): call 0xfffffea2(%rip)
4aa3(3): mov %rbp,%rdx
4aa6(3): mov %r12,%rsi
4aa9(3): mov %r13d,%edi
4aac(5): call 0xffffd1d4(%rip)
4ab1(4): cmp $0xffffffff,%rax
4ab5(3): mov %rax,%rbx
4ab8(2): jnz 0xffffffd0(%rip)
4aba(5): call 0xffffcfc6(%rip)
4abf(2): mov (%rax),%edx
4ac1(3): cmp $0x16,%edx
4ac4(2): jnz 0xffffffd1(%rip)
4ac6(7): mov 0x20c66b(%rip),%rdx
4acd(3): test %rdx,%rdx
4ad0(2): jle 0x14(%rip)
4ad2(3): cmp %rbp,%rdx
4ad5(2): jnb 0xf(%rip)
4ad7(7): test $0x40,0x20c8ab(%rip)
4ade(6): jnz 0x9a(%rip)
4ae4(7): mov %rbx,0x20c64d(%rip)
4aeb(4): add $0x8,%rsp
4aef(3): mov %rbx,%rax
4af2(1): pop %rbx
4af3(1): pop %rbp
4af4(2): pop %r12
4af6(2): pop %r13
4af8(1): ret near (%rsp)
4af9(7): nop 0x0(%rax)
4b00(2): jle 0x6a(%rip)
4b02(3): cmp %rbp,%rax
4b05(2): jnb 0x65(%rip)
4b07(5): call 0xfffffe39(%rip)
4b0c(7): cmp $0x0,0x20c815(%rip)
4b13(2): jz 0xffffffd1(%rip)
4b15(7): mov 0x20c61c(%rip),%r12
4b1c(3): test %r12,%r12
4b1f(2): jle 0xffffffc5(%rip)
4b21(3): cmp %rbp,%r12
4b24(2): jnb 0xffffffc0(%rip)
4b26(7): cmp $0x1,0x20c4ef(%rip)
4b2d(2): jz 0x31(%rip)
4b2f(7): lea 0x7f5a(%rip),%rdx
4b36(7): lea 0x7f93(%rip),%rsi
4b3d(3): mov %r12,%rcx
4b40(2): xor %edi,%edi
4b42(6): mov $0x5,%r8d
4b48(5): call 0xffffd288(%rip)
4b4d(3): mov %r12,%rcx
4b50(3): mov %rax,%rdx
4b53(2): xor %esi,%esi
4b55(2): xor %edi,%edi
4b57(2): xor %eax,%eax
4b59(5): call 0xfffff5e7(%rip)
4b5e(7): mov $0x0,0x20c7c3(%rip)
4b65(5): jmp 0xffffff7f(%rip)
4b6a(3): test %rbx,%rbx
4b6d(2): jnle 0xffffff9f(%rip)
4b6f(5): jmp 0xffffff75(%rip)
4b74(4): nop 0x0(%rax)
4b78(6): mov $0x0,(%rax)
4b7e(2): xor %ebx,%ebx
4b80(5): jmp 0xffffff64(%rip)

"iread_fullblock" :
4b90(3): test %rdx,%rdx
4b93(2): jz 0x5b(%rip)
4b95(2): push %r13
4b97(2): push %r12
4b99(3): mov %edi,%r13d
4b9c(1): push %rbp
4b9d(1): push %rbx
4b9e(3): mov %rsi,%rbp
4ba1(3): mov %rdx,%rbx
4ba4(3): xor %r12d,%r12d
4ba7(4): sub $0x8,%rsp
4bab(2): jmp 0x12(%rip)
4bad(3): nop (%rax)
4bb0(2): jz 0x30(%rip)
4bb2(3): add %rax,%r12
4bb5(3): add %rax,%rbp
4bb8(3): sub %rax,%rbx
4bbb(2): jz 0x25(%rip)
4bbd(3): mov %rbx,%rdx
4bc0(3): mov %rbp,%rsi
4bc3(3): mov %r13d,%edi
4bc6(5): call 0xfffffeaa(%rip)
4bcb(3): test %rax,%rax
4bce(2): jns 0xffffffe2(%rip)
4bd0(4): add $0x8,%rsp
4bd4(1): pop %rbx
4bd5(1): pop %rbp
4bd6(2): pop %r12
4bd8(2): pop %r13
4bda(1): ret near (%rsp)
4bdb(5): nop 0x0(%rax,%rax,1)
4be0(4): add $0x8,%rsp
4be4(3): mov %r12,%rax
4be7(1): pop %rbx
4be8(1): pop %rbp
4be9(2): pop %r12
4beb(2): pop %r13
4bed(1): ret near (%rsp)
4bee(2): xor %eax,%eax
4bf0(1): ret near (%rsp)

"finish_up" :
4c00(4): sub $0x8,%rsp
4c04(5): call 0xfffffc8c(%rip)
4c09(7): cmp $0x1,0x20c40c(%rip)
4c10(2): jz 0x7(%rip)
4c12(5): call 0xfffffb5e(%rip)
4c17(4): add $0x8,%rsp
4c1b(5): jmp 0xfffffd25(%rip)

"alloc_ibuf.part.4" :
4c20(1): push %rbp
4c21(1): push %rbx
4c22(7): sub $0x2a8,%rsp
4c29(7): mov 0x20c7a8(%rip),%rbx
4c30(7): mov 0x20c799(%rip),%rbp
4c37(9): mov $0x28,%rax
4c40(8): mov %rax,0x298(%rsp)
4c48(2): xor %eax,%eax
4c4a(5): lea 0x3(%rbp,%rbx,2),%rdi
4c4f(5): call 0xffffd0b1(%rip)
4c54(3): test %rax,%rax
4c57(2): jz 0x36(%rip)
4c59(5): lea 0x1(%rax,%rbx,1),%rcx
4c5e(2): xor %edx,%edx
4c60(3): mov %rcx,%rax
4c63(3): div %rbx,%rax
4c66(3): sub %rdx,%rcx
4c69(8): mov 0x298(%rsp),%rax
4c71(9): xor $0x28,%rax
4c7a(7): mov %rcx,0x20c697(%rip)
4c81(2): jnz 0x54(%rip)
4c83(7): add $0x2a8,%rsp
4c8a(1): pop %rbx
4c8b(1): pop %rbp
4c8c(1): ret near (%rsp)
4c8d(6): mov $0x1,%r8d
4c93(5): mov $0x1,%ecx
4c98(3): mov %rsp,%rsi
4c9b(5): mov $0x1f1,%edx
4ca0(3): mov %rbp,%rdi
4ca3(5): call 0x147d(%rip)
4ca8(7): lea 0x7e61(%rip),%rsi
4caf(3): mov %rax,%rbx
4cb2(5): mov $0x5,%edx
4cb7(2): xor %edi,%edi
4cb9(5): call 0xffffcea7(%rip)
4cbe(3): mov %rbx,%r8
4cc1(3): mov %rax,%rdx
4cc4(3): mov %rbp,%rcx
4cc7(2): xor %esi,%esi
4cc9(5): mov $0x1,%edi
4cce(2): xor %eax,%eax
4cd0(5): call 0xfffff470(%rip)
4cd5(5): call 0xffffcebb(%rip)

"alloc_obuf.part.5" :
4ce0(1): push %rbp
4ce1(1): push %rbx
4ce2(7): sub $0x2a8,%rsp
4ce9(7): mov 0x20c6e8(%rip),%rbx
4cf0(7): mov 0x20c6d1(%rip),%rbp
4cf7(9): mov $0x28,%rax
4d00(8): mov %rax,0x298(%rsp)
4d08(2): xor %eax,%eax
4d0a(5): lea 0xffffffff(%rbx,%rbp,1),%rdi
4d0f(5): call 0xffffcff1(%rip)
4d14(3): test %rax,%rax
4d17(2): jz 0x36(%rip)
4d19(5): lea 0xffffffff(%rax,%rbx,1),%rcx
4d1e(2): xor %edx,%edx
4d20(3): mov %rcx,%rax
4d23(3): div %rbx,%rax
4d26(3): sub %rdx,%rcx
4d29(8): mov 0x298(%rsp),%rax
4d31(9): xor $0x28,%rax
4d3a(7): mov %rcx,0x20c5cf(%rip)
4d41(2): jnz 0x54(%rip)
4d43(7): add $0x2a8,%rsp
4d4a(1): pop %rbx
4d4b(1): pop %rbp
4d4c(1): ret near (%rsp)
4d4d(6): mov $0x1,%r8d
4d53(5): mov $0x1,%ecx
4d58(3): mov %rsp,%rsi
4d5b(5): mov $0x1f1,%edx
4d60(3): mov %rbp,%rdi
4d63(5): call 0x13bd(%rip)
4d68(7): lea 0x7dd9(%rip),%rsi
4d6f(3): mov %rax,%rbx
4d72(5): mov $0x5,%edx
4d77(2): xor %edi,%edi
4d79(5): call 0xffffcde7(%rip)
4d7e(3): mov %rbx,%r8
4d81(3): mov %rax,%rdx
4d84(3): mov %rbp,%rcx
4d87(2): xor %esi,%esi
4d89(5): mov $0x1,%edi
4d8e(2): xor %eax,%eax
4d90(5): call 0xfffff3b0(%rip)
4d95(5): call 0xffffcdfb(%rip)

"alloc_obuf" :
4da0(8): cmp $0x0,0x20c568(%rip)
4da8(2): jz 0x4(%rip)
4daa(2): REP ret near (%rsp)
4dac(7): test $0x8,0x20c5da(%rip)
4db3(2): jnz 0x1b(%rip)
4db5(8): cmp $0x0,0x20c55b(%rip)
4dbd(2): jz 0x16(%rip)
4dbf(7): mov 0x20c552(%rip),%rax
4dc6(7): mov %rax,0x20c543(%rip)
4dcd(1): ret near (%rsp)
4dce(5): jmp 0xffffff12(%rip)
4dd3(4): sub $0x8,%rsp
4dd7(5): call 0xfffffe49(%rip)
4ddc(7): mov 0x20c535(%rip),%rax
4de3(7): mov %rax,0x20c526(%rip)
4dea(1): pop %rax
4deb(1): ret near (%rsp)

"iftruncate.constprop.6" :
4df0(1): push %rbp
4df1(1): push %rbx
4df2(3): mov %rdi,%rbp
4df5(4): sub $0x8,%rsp
4df9(2): jmp 0x11(%rip)
4dfb(5): nop 0x0(%rax,%rax,1)
4e00(5): call 0xffffcc80(%rip)
4e05(3): cmp $0x4,(%rax)
4e08(2): jnz 0x1a(%rip)
4e0a(5): call 0xfffffb36(%rip)
4e0f(3): mov %rbp,%rsi
4e12(5): mov $0x1,%edi
4e17(5): call 0xffffcde9(%rip)
4e1c(2): test %eax,%eax
4e1e(2): mov %eax,%ebx
4e20(2): js 0xffffffe0(%rip)
4e22(4): add $0x8,%rsp
4e26(2): mov %ebx,%eax
4e28(1): pop %rbx
4e29(1): pop %rbp
4e2a(1): ret near (%rsp)

"iwrite.constprop.7" :
4e30(2): push %r13
4e32(2): push %r12
4e34(3): mov %rdi,%r12
4e37(1): push %rbp
4e38(1): push %rbx
4e39(3): mov %rsi,%rbp
4e3c(4): sub $0x8,%rsp
4e40(7): test $0x40,0x20c53e(%rip)
4e47(2): jz 0xf(%rip)
4e49(7): cmp %rsi,0x20c578(%rip)
4e50(6): jnbe 0x140(%rip)
4e56(2): xor %ebx,%ebx
4e58(3): test %rbp,%rbp
4e5b(2): jnz 0x1b(%rip)
4e5d(5): jmp 0x95(%rip)
4e62(6): nop 0x0(%rax,%rax,1)
4e68(6): jz 0xf0(%rip)
4e6e(3): add %rax,%rbx
4e71(3): cmp %rbx,%rbp
4e74(2): jbe 0x6c(%rip)
4e76(5): call 0xfffffaca(%rip)
4e7b(7): mov 0x20c50a(%rip),%r13d
4e82(7): mov $0x0,0x20c50f(%rip)
4e89(7): test $0x10000,%r13d
4e90(2): jz 0x28(%rip)
4e92(3): mov %r12,%rsi
4e95(3): mov %rbp,%rdx
4e98(3): cmp $0x0,(%rsi)
4e9b(2): jnz 0x1d(%rip)
4e9d(4): add $0x1,%rsi
4ea1(4): sub $0x1,%rdx
4ea5(2): jz 0x5b(%rip)
4ea7(3): test $0xf,%dl
4eaa(2): jnz 0xffffffee(%rip)
4eac(3): mov %r12,%rdi
4eaf(5): call 0xffffcde1(%rip)
4eb4(2): test %eax,%eax
4eb6(2): jz 0x4a(%rip)
4eb8(3): mov %rbp,%rdx
4ebb(4): lea 0x0(%r12,%rbx,1),%rsi
4ebf(5): mov $0x1,%edi
4ec4(3): sub %rbx,%rdx
4ec7(5): call 0xffffcc59(%rip)
4ecc(3): test %rax,%rax
4ecf(2): jns 0xffffff99(%rip)
4ed1(5): call 0xffffcbaf(%rip)
4ed6(3): cmp $0x4,(%rax)
4ed9(2): jz 0xffffff98(%rip)
4edb(5): nop 0x0(%rax,%rax,1)
4ee0(7): cmp $0x0,0x20c383(%rip)
4ee7(2): jz 0xb(%rip)
4ee9(3): test %rbx,%rbx
4eec(6): jnz 0x84(%rip)
4ef2(4): add $0x8,%rsp
4ef6(3): mov %rbx,%rax
4ef9(1): pop %rbx
4efa(1): pop %rbp
4efb(2): pop %r12
4efd(2): pop %r13
4eff(1): ret near (%rsp)
4f00(5): mov $0x1,%edx
4f05(3): mov %rbp,%rsi
4f08(5): mov $0x1,%edi
4f0d(5): call 0xffffcd03(%rip)
4f12(3): test %rax,%rax
4f15(2): js 0x2b(%rip)
4f17(3): test %rbp,%rbp
4f1a(7): mov $0x1,0x20c477(%rip)
4f21(3): mov %rbp,%rax
4f24(6): jns 0xffffff4a(%rip)
4f2a(5): call 0xffffcb56(%rip)
4f2f(3): cmp $0x4,(%rax)
4f32(6): jz 0xffffff3f(%rip)
4f38(2): jmp 0xffffffa8(%rip)
4f3a(6): nop 0x0(%rax,%rax,1)
4f40(7): and $0xfffeffff,%r13d
4f47(7): mov %r13d,0x20c43e(%rip)
4f4e(5): jmp 0xffffff6a(%rip)
4f53(5): nop 0x0(%rax,%rax,1)
4f58(5): call 0xffffcb28(%rip)
4f5d(6): mov $0x1c,(%rax)
4f63(5): jmp 0xffffff7d(%rip)
4f68(8): nop 0x0(%rax,%rax,1)
4f70(3): mov %rbx,%rsi
4f73(5): mov $0x1,%edi
4f78(5): call 0xfffff638(%rip)
4f7d(4): add $0x8,%rsp
4f81(3): mov %rbx,%rax
4f84(1): pop %rbx
4f85(1): pop %rbp
4f86(2): pop %r12
4f88(2): pop %r13
4f8a(1): ret near (%rsp)
4f8b(5): nop 0x0(%rax,%rax,1)
4f90(5): mov $0x3,%esi
4f95(5): mov $0x1,%edi
4f9a(2): xor %eax,%eax
4f9c(5): call 0x4d54(%rip)
4fa1(3): and $0xbf,%ah
4fa4(5): mov $0x4,%esi
4fa9(5): mov $0x1,%edi
4fae(2): mov %eax,%edx
4fb0(2): xor %eax,%eax
4fb2(5): call 0x4d3e(%rip)
4fb7(2): test %eax,%eax
4fb9(2): jz 0xb(%rip)
4fbb(7): cmp $0x1,0x20c05a(%rip)
4fc2(2): jnz 0x24(%rip)
4fc4(2): xor %esi,%esi
4fc6(5): mov $0x1,%edi
4fcb(7): mov $0x1,0x20c296(%rip)
4fd2(5): call 0xfffff5de(%rip)
4fd7(a): or $0x8000,0x20c3ab(%rip)
4fe1(5): jmp 0xfffffe75(%rip)
4fe6(7): mov 0x20c3f3(%rip),%rdx
4fed(2): xor %edi,%edi
4fef(5): mov $0x3,%esi
4ff4(5): call 0x3aec(%rip)
4ff9(7): lea 0x7b88(%rip),%rsi
5000(2): xor %edi,%edi
5002(5): mov $0x5,%edx
5007(3): mov %rax,%r13
500a(5): call 0xffffcb56(%rip)
500f(3): mov %rax,%rbx
5012(5): call 0xffffca6e(%rip)
5017(2): mov (%rax),%esi
5019(3): mov %r13,%rcx
501c(3): mov %rbx,%rdx
501f(2): xor %edi,%edi
5021(2): xor %eax,%eax
5023(5): call 0xfffff11d(%rip)
5028(2): jmp 0xffffff9c(%rip)

"usage" :
5030(2): push %r13
5032(2): push %r12
5034(5): mov $0x5,%edx
5039(1): push %rbp
503a(1): push %rbx
503b(2): mov %edi,%ebp
503d(7): sub $0x88,%rsp
5044(7): mov 0x20c3b5(%rip),%rbx
504b(9): mov $0x28,%rax
5054(5): mov %rax,0x78(%rsp)
5059(2): xor %eax,%eax
505b(2): test %edi,%edi
505d(2): jz 0x30(%rip)
505f(7): lea 0x7b42(%rip),%rsi
5066(2): xor %edi,%edi
5068(5): call 0xffffcaf8(%rip)
506d(7): mov 0x20c08c(%rip),%rdi
5074(3): mov %rax,%rdx
5077(3): mov %rbx,%rcx
507a(5): mov $0x1,%esi
507f(2): xor %eax,%eax
5081(5): call 0xffffcdaf(%rip)
5086(2): mov %ebp,%edi
5088(5): call 0xffffcd88(%rip)
508d(7): lea 0x7b3c(%rip),%rsi
5094(2): xor %edi,%edi
5096(5): call 0xffffcaca(%rip)
509b(3): mov %rbx,%rcx
509e(3): mov %rbx,%rdx
50a1(3): mov %rax,%rsi
50a4(5): mov $0x1,%edi
50a9(2): xor %eax,%eax
50ab(5): call 0xffffccc5(%rip)
50b0(7): mov 0x20c011(%rip),%rbx
50b7(7): lea 0x7b42(%rip),%rsi
50be(5): mov $0x5,%edx
50c3(2): xor %edi,%edi
50c5(5): call 0xffffca9b(%rip)
50ca(3): mov %rbx,%rsi
50cd(3): mov %rax,%rdi
50d0(5): call 0xffffcbd0(%rip)
50d5(7): mov 0x20bfec(%rip),%rbx
50dc(7): lea 0x7cbd(%rip),%rsi
50e3(5): mov $0x5,%edx
50e8(2): xor %edi,%edi
50ea(5): call 0xffffca76(%rip)
50ef(3): mov %rbx,%rsi
50f2(3): mov %rax,%rdi
50f5(5): call 0xffffcbab(%rip)
50fa(7): mov 0x20bfc7(%rip),%rbx
5101(7): lea 0x7f38(%rip),%rsi
5108(5): mov $0x5,%edx
510d(2): xor %edi,%edi
510f(5): call 0xffffca51(%rip)
5114(3): mov %rbx,%rsi
5117(3): mov %rax,%rdi
511a(5): call 0xffffcb86(%rip)
511f(7): mov 0x20bfa2(%rip),%rbx
5126(7): lea 0x803b(%rip),%rsi
512d(5): mov $0x5,%edx
5132(2): xor %edi,%edi
5134(5): call 0xffffca2c(%rip)
5139(3): mov %rbx,%rsi
513c(3): mov %rax,%rdi
513f(5): call 0xffffcb61(%rip)
5144(7): mov 0x20bf7d(%rip),%rbx
514b(7): lea 0x8266(%rip),%rsi
5152(5): mov $0x5,%edx
5157(2): xor %edi,%edi
5159(5): call 0xffffca07(%rip)
515e(3): mov %rbx,%rsi
5161(3): mov %rax,%rdi
5164(5): call 0xffffcb3c(%rip)
5169(7): mov 0x20bf58(%rip),%rbx
5170(7): lea 0x8361(%rip),%rsi
5177(5): mov $0x5,%edx
517c(2): xor %edi,%edi
517e(5): call 0xffffc9e2(%rip)
5183(3): mov %rbx,%rsi
5186(3): mov %rax,%rdi
5189(5): call 0xffffcb17(%rip)
518e(7): mov 0x20bf33(%rip),%rbx
5195(7): lea 0x83ac(%rip),%rsi
519c(5): mov $0x5,%edx
51a1(2): xor %edi,%edi
51a3(5): call 0xffffc9bd(%rip)
51a8(3): mov %rbx,%rsi
51ab(3): mov %rax,%rdi
51ae(5): call 0xffffcaf2(%rip)
51b3(7): mov 0x20bf0e(%rip),%rbx
51ba(7): lea 0x83af(%rip),%rsi
51c1(5): mov $0x5,%edx
51c6(2): xor %edi,%edi
51c8(5): call 0xffffc998(%rip)
51cd(3): mov %rbx,%rsi
51d0(3): mov %rax,%rdi
51d3(5): call 0xffffcacd(%rip)
51d8(7): mov 0x20bee9(%rip),%rbx
51df(7): lea 0x83b2(%rip),%rsi
51e6(5): mov $0x5,%edx
51eb(2): xor %edi,%edi
51ed(5): call 0xffffc973(%rip)
51f2(3): mov %rbx,%rsi
51f5(3): mov %rax,%rdi
51f8(5): call 0xffffcaa8(%rip)
51fd(7): mov 0x20bec4(%rip),%rbx
5204(7): lea 0x83bd(%rip),%rsi
520b(5): mov $0x5,%edx
5210(2): xor %edi,%edi
5212(5): call 0xffffc94e(%rip)
5217(3): mov %rbx,%rsi
521a(3): mov %rax,%rdi
521d(5): call 0xffffca83(%rip)
5222(7): mov 0x20be9f(%rip),%rbx
5229(7): lea 0x83c8(%rip),%rsi
5230(5): mov $0x5,%edx
5235(2): xor %edi,%edi
5237(5): call 0xffffc929(%rip)
523c(3): mov %rbx,%rsi
523f(3): mov %rax,%rdi
5242(5): call 0xffffca5e(%rip)
5247(7): mov 0x20be7a(%rip),%rbx
524e(7): lea 0x83e3(%rip),%rsi
5255(5): mov $0x5,%edx
525a(2): xor %edi,%edi
525c(5): call 0xffffc904(%rip)
5261(3): mov %rbx,%rsi
5264(3): mov %rax,%rdi
5267(5): call 0xffffca39(%rip)
526c(7): mov 0x20be55(%rip),%rbx
5273(7): lea 0x83e6(%rip),%rsi
527a(5): mov $0x5,%edx
527f(2): xor %edi,%edi
5281(5): call 0xffffc8df(%rip)
5286(3): mov %rbx,%rsi
5289(3): mov %rax,%rdi
528c(5): call 0xffffca14(%rip)
5291(7): mov 0x20be30(%rip),%rbx
5298(7): lea 0x83e9(%rip),%rsi
529f(5): mov $0x5,%edx
52a4(2): xor %edi,%edi
52a6(5): call 0xffffc8ba(%rip)
52ab(3): mov %rbx,%rsi
52ae(3): mov %rax,%rdi
52b1(5): call 0xffffc9ef(%rip)
52b6(7): mov 0x20be0b(%rip),%rbx
52bd(7): lea 0x8404(%rip),%rsi
52c4(5): mov $0x5,%edx
52c9(2): xor %edi,%edi
52cb(5): call 0xffffc895(%rip)
52d0(3): mov %rbx,%rsi
52d3(3): mov %rax,%rdi
52d6(5): call 0xffffc9ca(%rip)
52db(7): mov 0x20bde6(%rip),%rbx
52e2(7): lea 0x841f(%rip),%rsi
52e9(5): mov $0x5,%edx
52ee(2): xor %edi,%edi
52f0(5): call 0xffffc870(%rip)
52f5(3): mov %rbx,%rsi
52f8(3): mov %rax,%rdi
52fb(5): call 0xffffc9a5(%rip)
5300(7): mov 0x20bdc1(%rip),%rbx
5307(7): lea 0x8422(%rip),%rsi
530e(5): mov $0x5,%edx
5313(2): xor %edi,%edi
5315(5): call 0xffffc84b(%rip)
531a(3): mov %rbx,%rsi
531d(3): mov %rax,%rdi
5320(5): call 0xffffc980(%rip)
5325(7): mov 0x20bd9c(%rip),%rbx
532c(7): lea 0x843d(%rip),%rsi
5333(5): mov $0x5,%edx
5338(2): xor %edi,%edi
533a(5): call 0xffffc826(%rip)
533f(3): mov %rbx,%rsi
5342(3): mov %rax,%rdi
5345(5): call 0xffffc95b(%rip)
534a(7): mov 0x20bd77(%rip),%rbx
5351(7): lea 0x8458(%rip),%rsi
5358(5): mov $0x5,%edx
535d(2): xor %edi,%edi
535f(5): call 0xffffc801(%rip)
5364(3): mov %rbx,%rsi
5367(3): mov %rax,%rdi
536a(5): call 0xffffc936(%rip)
536f(7): lea 0x847a(%rip),%rsi
5376(2): xor %edi,%edi
5378(5): mov $0x5,%edx
537d(5): call 0xffffc7e3(%rip)
5382(7): lea 0x736e(%rip),%rdx
5389(3): mov %rax,%rsi
538c(5): mov $0x1,%edi
5391(2): xor %eax,%eax
5393(5): call 0xffffc9dd(%rip)
5398(7): mov 0x20bd29(%rip),%rbx
539f(7): lea 0x84d2(%rip),%rsi
53a6(5): mov $0x5,%edx
53ab(2): xor %edi,%edi
53ad(5): call 0xffffc7b3(%rip)
53b2(3): mov %rbx,%rsi
53b5(3): mov %rax,%rdi
53b8(5): call 0xffffc8e8(%rip)
53bd(7): mov 0x20bd04(%rip),%rbx
53c4(7): lea 0x84dd(%rip),%rsi
53cb(5): mov $0x5,%edx
53d0(2): xor %edi,%edi
53d2(5): call 0xffffc78e(%rip)
53d7(3): mov %rbx,%rsi
53da(3): mov %rax,%rdi
53dd(7): lea 0x7310(%rip),%rbx
53e4(5): call 0xffffc8bc(%rip)
53e9(7): lea 0x730c(%rip),%rax
53f0(7): lea 0x7346(%rip),%rcx
53f7(9): mov $0x0,0x60(%rsp)
5400(9): mov $0x0,0x68(%rsp)
5409(3): mov %rsp,%rdx
540c(4): mov %rax,(%rsp)
5410(7): lea 0x72e7(%rip),%rax
5417(5): mov %rcx,0x30(%rsp)
541c(7): lea 0x7324(%rip),%rcx
5423(5): mov %rax,0x8(%rsp)
5428(7): lea 0x7347(%rip),%rax
542f(5): mov %rcx,0x40(%rsp)
5434(7): lea 0x7316(%rip),%rcx
543b(5): mov %rax,0x10(%rsp)
5440(7): lea 0x72c7(%rip),%rax
5447(5): mov %rcx,0x50(%rsp)
544c(5): mov %rax,0x18(%rsp)
5451(7): lea 0x72cc(%rip),%rax
5458(5): mov %rax,0x20(%rsp)
545d(7): lea 0x72ca(%rip),%rax
5464(5): mov %rax,0x28(%rsp)
5469(5): mov %rax,0x38(%rsp)
546e(5): mov %rax,0x48(%rsp)
5473(5): mov %rax,0x58(%rsp)
5478(8): nop 0x0(%rax,%rax,1)
5480(4): add $0x10,%rdx
5484(3): mov (%rdx),%rdi
5487(3): test %rdi,%rdi
548a(2): jz 0x15(%rip)
548c(5): mov $0x3,%ecx
5491(3): mov %rbx,%rsi
5494(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5496(3): setnbe %al
5499(2): sbb $0x0,%al
549b(2): test %al,%al
549d(2): jnz 0xffffffe3(%rip)
549f(4): mov 0x8(%rdx),%r12
54a3(2): xor %edi,%edi
54a5(5): mov $0x5,%edx
54aa(7): lea 0x72aa(%rip),%rsi
54b1(3): test %r12,%r12
54b4(6): jz 0xc7(%rip)
54ba(5): call 0xffffc6a6(%rip)
54bf(7): lea 0x841a(%rip),%rcx
54c6(7): lea 0x72a5(%rip),%rdx
54cd(3): mov %rax,%rsi
54d0(5): mov $0x1,%edi
54d5(2): xor %eax,%eax
54d7(5): call 0xffffc899(%rip)
54dc(2): xor %esi,%esi
54de(5): mov $0x5,%edi
54e3(5): call 0xffffc87d(%rip)
54e8(3): test %rax,%rax
54eb(2): jz 0x1e(%rip)
54ed(7): lea 0x728c(%rip),%rsi
54f4(5): mov $0x3,%edx
54f9(3): mov %rax,%rdi
54fc(5): call 0xffffc5b4(%rip)
5501(2): test %eax,%eax
5503(6): jnz 0x10d(%rip)
5509(7): lea 0x7274(%rip),%rsi
5510(2): xor %edi,%edi
5512(5): mov $0x5,%edx
5517(5): call 0xffffc649(%rip)
551c(7): lea 0x71d1(%rip),%rcx
5523(7): lea 0x83b6(%rip),%rdx
552a(3): mov %rax,%rsi
552d(5): mov $0x1,%edi
5532(2): xor %eax,%eax
5534(5): call 0xffffc83c(%rip)
5539(3): cmp %rbx,%r12
553c(7): lea 0x71d5(%rip),%rcx
5543(7): lea 0x9257(%rip),%rbx
554a(4): cmove %rcx,%rbx
554e(7): lea 0x83fb(%rip),%rsi
5555(2): xor %edi,%edi
5557(5): mov $0x5,%edx
555c(5): call 0xffffc604(%rip)
5561(3): mov %rbx,%rcx
5564(3): mov %rax,%rsi
5567(3): mov %r12,%rdx
556a(5): mov $0x1,%edi
556f(2): xor %eax,%eax
5571(5): call 0xffffc7ff(%rip)
5576(5): jmp 0xfffffb10(%rip)
557b(5): call 0xffffc5e5(%rip)
5580(7): lea 0x8359(%rip),%rcx
5587(7): lea 0x71e4(%rip),%rdx
558e(3): mov %rax,%rsi
5591(5): mov $0x1,%edi
5596(2): xor %eax,%eax
5598(5): call 0xffffc7d8(%rip)
559d(2): xor %esi,%esi
559f(5): mov $0x5,%edi
55a4(5): call 0xffffc7bc(%rip)
55a9(3): test %rax,%rax
55ac(2): jz 0x1a(%rip)
55ae(7): lea 0x71cb(%rip),%rsi
55b5(5): mov $0x3,%edx
55ba(3): mov %rax,%rdi
55bd(5): call 0xffffc4f3(%rip)
55c2(2): test %eax,%eax
55c4(2): jnz 0x45(%rip)
55c6(7): lea 0x71b7(%rip),%rsi
55cd(5): mov $0x5,%edx
55d2(2): xor %edi,%edi
55d4(7): lea 0x7119(%rip),%r12
55db(7): lea 0x7136(%rip),%rbx
55e2(5): call 0xffffc57e(%rip)
55e7(7): lea 0x7106(%rip),%rcx
55ee(7): lea 0x82eb(%rip),%rdx
55f5(3): mov %rax,%rsi
55f8(5): mov $0x1,%edi
55fd(2): xor %eax,%eax
55ff(5): call 0xffffc771(%rip)
5604(5): jmp 0xffffff4a(%rip)
5609(7): lea 0x70e4(%rip),%r12
5610(7): mov 0x20bab1(%rip),%r13
5617(7): lea 0x82ea(%rip),%rsi
561e(2): xor %edi,%edi
5620(5): mov $0x5,%edx
5625(5): call 0xffffc53b(%rip)
562a(3): mov %r13,%rsi
562d(3): mov %rax,%rdi
5630(5): call 0xffffc670(%rip)
5635(5): jmp 0xfffffed4(%rip)

"parse_symbols" :
5640(2): push %r14
5642(3): mov %rdi,%r14
5645(2): push %r13
5647(3): mov %rcx,%r13
564a(2): push %r12
564c(3): mov %rsi,%r12
564f(1): push %rbp
5650(2): mov %edx,%ebp
5652(1): push %rbx
5653(2): xor %ebx,%ebx
5655(5): mov $0x2c,%esi
565a(3): mov %r14,%rdi
565d(5): call 0xffffc573(%rip)
5662(3): mov %r12,%r8
5665(3): nop (%rax)
5668(3): mov %r8,%rcx
566b(3): mov %r14,%rdx
566e(2): jmp 0xf(%rip)
5670(4): add $0x1,%rdx
5674(4): add $0x1,%rcx
5678(3): cmp %dil,%sil
567b(2): jnz 0x20(%rip)
567d(3): movzx (%rcx),%esi
5680(3): movzx (%rdx),%edi
5683(3): test %sil,%sil
5686(2): jnz 0xffffffea(%rip)
5688(4): cmp $0x2c,%dil
568c(2): jz 0x7(%rip)
568e(3): test %dil,%dil
5691(2): jnz 0xa(%rip)
5693(4): mov 0xc(%r8),%edx
5697(2): test %edx,%edx
5699(2): jnz 0xe(%rip)
569b(4): cmp $0x0,(%r8)
569f(2): jz 0x28(%rip)
56a1(4): add $0x10,%r8
56a5(2): jmp 0xffffffc3(%rip)
56a7(2): or %edx,%ebx
56a9(3): test %bpl,%bpl
56ac(3): cmove %ebx,%edx
56af(3): test %rax,%rax
56b2(2): jz 0xa(%rip)
56b4(4): lea 0x1(%rax),%r14
56b8(2): mov %edx,%ebx
56ba(2): jmp 0xffffff9b(%rip)
56bc(1): pop %rbx
56bd(2): mov %edx,%eax
56bf(1): pop %rbp
56c0(2): pop %r12
56c2(2): pop %r13
56c4(2): pop %r14
56c6(1): ret near (%rsp)
56c7(3): test %rax,%rax
56ca(2): jz 0x4b(%rip)
56cc(3): sub %r14,%rax
56cf(3): mov %rax,%rcx
56d2(3): mov %r14,%rdx
56d5(5): mov $0x8,%esi
56da(2): xor %edi,%edi
56dc(5): call 0x3274(%rip)
56e1(5): mov $0x5,%edx
56e6(3): mov %r13,%rsi
56e9(2): xor %edi,%edi
56eb(3): mov %rax,%rbx
56ee(5): call 0xffffc472(%rip)
56f3(7): lea 0x70a5(%rip),%rdx
56fa(3): mov %rax,%rcx
56fd(2): xor %edi,%edi
56ff(3): mov %rbx,%r8
5702(2): xor %esi,%esi
5704(2): xor %eax,%eax
5706(5): call 0xffffea3a(%rip)
570b(5): mov $0x1,%edi
5710(5): call 0xfffff920(%rip)
5715(2): xor %eax,%eax
5717(4): or $0xffffffff,%rcx
571b(3): mov %r14,%rdi
571e(2): REPNZ scasb rdi(%es,10),%al
5720(3): mov %rcx,%rax
5723(3): not %rax
5726(4): sub $0x1,%rax
572a(2): jmp 0xffffffa5(%rip)

"skip" :
5730(2): push %r15
5732(2): push %r14
5734(3): mov %rdx,%r14
5737(2): push %r13
5739(2): push %r12
573b(3): mov %r8,%r13
573e(1): push %rbp
573f(1): push %rbx
5740(3): mov %rcx,%r12
5743(2): mov %edi,%ebx
5745(7): sub $0xb8,%rsp
574c(3): mov (%r8),%rbp
574f(9): mov $0x28,%rax
5758(8): mov %rax,0xa8(%rsp)
5760(2): xor %eax,%eax
5762(4): mov %rsi,(%rsp)
5766(5): call 0xffffc31a(%rip)
576b(2): xor %edx,%edx
576d(3): mov %rax,%r15
5770(6): mov $0x0,(%rax)
5776(a): mov $0x9223372036854775807,%rax
5780(3): div %r12,%rax
5783(3): cmp %r14,%rax
5786(2): jb 0x6d(%rip)
5788(3): mov %r14,%rax
578b(4): mov (%rsp),%rdi
578f(5): mov $0x1,%ecx
5794(4): imul %r12,%rax
5798(2): mov %ebx,%esi
579a(3): add %rax,%rbp
579d(3): mov %rbp,%rdx
57a0(5): call 0xffffed10(%rip)
57a5(3): test %rax,%rax
57a8(6): js 0x11d(%rip)
57ae(2): test %ebx,%ebx
57b0(6): jz 0x172(%rip)
57b6(a): nop 0x0(%rax,%rax,1)
57c0(8): mov $0x0,0x0(%r13)
57c8(2): xor %eax,%eax
57ca(8): mov 0xa8(%rsp),%rcx
57d2(9): xor $0x28,%rcx
57db(6): jnz 0x265(%rip)
57e1(7): add $0xb8,%rsp
57e8(1): pop %rbx
57e9(1): pop %rbp
57ea(2): pop %r12
57ec(2): pop %r13
57ee(2): pop %r14
57f0(2): pop %r15
57f2(1): ret near (%rsp)
57f3(4): mov (%rsp),%rdi
57f7(2): xor %edx,%edx
57f9(5): mov $0x2,%ecx
57fe(2): mov %ebx,%esi
5800(5): call 0xffffecb0(%rip)
5805(3): test %rax,%rax
5808(6): jns 0xe6(%rip)
580e(8): mov $0x0,0xc(%rsp)
5816(2): test %ebx,%ebx
5818(2): jnz 0x81(%rip)
581a(8): cmp $0x0,0x20baf6(%rip)
5822(6): jz 0x15f(%rip)
5828(7): mov 0x20bae9(%rip),%rbp
582f(1): nop 
5830(3): test %r14,%r14
5833(7): mov 0x20ba26(%rip),%rax
583a(3): mov %r12,%rdx
583d(2): jz 0x73(%rip)
583f(3): mov %rbp,%rsi
5842(2): mov %ebx,%edi
5844(2): call %rax
5846(3): test %rax,%rax
5849(6): js 0x155(%rip)
584f(2): jz 0x6e(%rip)
5851(2): test %ebx,%ebx
5853(2): jnz 0x21(%rip)
5855(2): xor %edx,%edx
5857(7): add 0x20bad2(%rip),%rax
585e(3): setb %dl
5861(7): mov %rax,0x20bac8(%rip)
5868(3): test %rdx,%rdx
586b(2): jz 0x9(%rip)
586d(7): mov $0x1,0x20bab5(%rip)
5874(3): test %r14,%r14
5877(6): jz 0xffffff49(%rip)
587d(4): sub $0x1,%r14
5881(2): jnz 0xffffffaf(%rip)
5883(4): mov 0x0(%r13),%rdx
5887(3): test %rdx,%rdx
588a(6): jz 0x1af(%rip)
5890(7): mov 0x20b9c9(%rip),%rax
5897(2): jmp 0x21(%rip)
5899(5): call 0xfffff507(%rip)
589e(7): mov 0x20ba6b(%rip),%rbp
58a5(2): jmp 0xffffff8b(%rip)
58a7(9): nop 0x0(%rax,%rax,1)
58b0(4): mov 0x0(%r13),%rdx
58b4(4): nop 0x0(%rax)
58b8(3): xor %r14d,%r14d
58bb(2): jmp 0xffffff84(%rip)
58bd(3): mov %r14,%rax
58c0(5): jmp 0xffffff0a(%rip)
58c5(3): mov (%r15),%eax
58c8(4): mov (%rsp),%rdi
58cc(2): xor %edx,%edx
58ce(5): mov $0x2,%ecx
58d3(2): mov %ebx,%esi
58d5(4): mov %eax,0xc(%rsp)
58d9(5): call 0xffffebd7(%rip)
58de(3): test %rax,%rax
58e1(6): js 0xffffff35(%rip)
58e7(5): cmp $0x0,0xc(%rsp)
58ec(2): jnz 0xa(%rip)
58ee(8): mov $0x4b,0xc(%rsp)
58f6(2): xor %edi,%edi
58f8(2): test %ebx,%ebx
58fa(4): mov (%rsp),%rdx
58fe(5): mov $0x3,%esi
5903(6): jnz 0x106(%rip)
5909(5): call 0x31d7(%rip)
590e(5): mov $0x5,%edx
5913(3): mov %rax,%rbx
5916(7): lea 0x6e99(%rip),%rsi
591d(5): jmp 0x100(%rip)
5922(5): lea 0x10(%rsp),%rdx
5927(2): xor %esi,%esi
5929(5): mov $0x1,%edi
592e(5): call 0xffffc402(%rip)
5933(2): test %eax,%eax
5935(6): jnz 0x110(%rip)
593b(4): mov 0x28(%rsp),%edx
593f(2): xor %eax,%eax
5941(7): mov 0x20b9e8(%rip),%rcx
5948(6): and $0xd000,%edx
594e(6): cmp $0x8000,%edx
5954(2): jnz 0x11(%rip)
5956(5): mov 0x40(%rsp),%rsi
595b(5): lea 0x0(%rbp,%rcx,1),%rdx
5960(3): cmp %rdx,%rsi
5963(2): jb 0x28(%rip)
5965(3): add %rcx,%rbp
5968(7): mov %rbp,0x20b9c1(%rip)
596f(6): jnb 0xfffffe5b(%rip)
5975(7): mov $0x1,0x20b9ad(%rip)
597c(5): jmp 0xfffffe4e(%rip)
5981(5): call 0xfffff29f(%rip)
5986(5): jmp 0xfffffea2(%rip)
598b(3): mov %rbp,%rax
598e(2): xor %edx,%edx
5990(3): sub %rsi,%rax
5993(3): sub %rcx,%rsi
5996(3): div %r12,%rax
5999(3): mov %rsi,%rbp
599c(2): jmp 0xffffffc9(%rip)
599e(2): test %ebx,%ebx
59a0(2): jnz 0x5e(%rip)
59a2(4): mov (%rsp),%rsi
59a6(5): mov $0x4,%edi
59ab(5): call 0x3035(%rip)
59b0(7): lea 0x6e1f(%rip),%rsi
59b7(2): xor %edi,%edi
59b9(5): mov $0x5,%edx
59be(3): mov %rax,%rbx
59c1(5): call 0xffffc19f(%rip)
59c6(3): mov (%r15),%esi
59c9(3): mov %rax,%rdx
59cc(2): xor %edi,%edi
59ce(2): xor %eax,%eax
59d0(3): mov %rbx,%rcx
59d3(5): call 0xffffe76d(%rip)
59d8(7): test $0x1,0x20b9ae(%rip)
59df(2): jz 0x10(%rip)
59e1(7): cmp $0x1,0x20b634(%rip)
59e8(2): jz 0x7(%rip)
59ea(5): call 0xffffed86(%rip)
59ef(5): call 0xfffff211(%rip)
59f4(5): mov $0x1,%edi
59f9(5): call 0xffffc417(%rip)
59fe(4): mov (%rsp),%rdx
5a02(5): mov $0x3,%esi
5a07(2): xor %edi,%edi
5a09(5): call 0x30d7(%rip)
5a0e(7): lea 0x6db1(%rip),%rsi
5a15(3): mov %rax,%rbx
5a18(5): mov $0x5,%edx
5a1d(2): xor %edi,%edi
5a1f(5): call 0xffffc141(%rip)
5a24(4): mov 0xc(%rsp),%esi
5a28(3): mov %rax,%rdx
5a2b(3): mov %rbx,%rcx
5a2e(2): xor %edi,%edi
5a30(2): xor %eax,%eax
5a32(5): call 0xffffe70e(%rip)
5a37(2): jmp 0xffffffb8(%rip)
5a39(2): xor %eax,%eax
5a3b(5): jmp 0xfffffd8f(%rip)
5a40(5): call 0xffffc150(%rip)
5a45(4): mov (%rsp),%rsi
5a49(5): mov $0x4,%edi
5a4e(5): call 0x2f92(%rip)
5a53(7): lea 0x6d4c(%rip),%rsi
5a5a(5): mov $0x5,%edx
5a5f(2): xor %edi,%edi
5a61(3): mov %rax,%rbx
5a64(5): call 0xffffc0fc(%rip)
5a69(3): mov (%r15),%esi
5a6c(3): mov %rax,%rdx
5a6f(3): mov %rbx,%rcx
5a72(5): mov $0x1,%edi
5a77(2): xor %eax,%eax
5a79(5): call 0xffffe6c7(%rip)
5a7e(2): nop 
5a80(7): mov 0x20b941(%rip),%rsi
5a87(7): mov 0x20b882(%rip),%rdi
5a8e(2): push %r12
5a90(1): push %rbp
5a91(1): push %rbx
5a92(5): call 0xfffff39e(%rip)
5a97(7): add %rax,0x20b8ba(%rip)
5a9e(7): cmp %rax,0x20b923(%rip)
5aa5(2): jnz 0x1a(%rip)
5aa7(1): pop %rbx
5aa8(8): add $0x1,0x20b8c0(%rip)
5ab0(b): mov $0x0,0x20b84d(%rip)
5abb(1): pop %rbp
5abc(2): pop %r12
5abe(1): ret near (%rsp)
5abf(7): mov 0x20b91a(%rip),%rsi
5ac6(5): mov $0x4,%edi
5acb(3): mov %rax,%rbx
5ace(5): call 0x2f12(%rip)
5ad3(7): lea 0x6d0d(%rip),%rsi
5ada(2): xor %edi,%edi
5adc(5): mov $0x5,%edx
5ae1(3): mov %rax,%r12
5ae4(5): call 0xffffc07c(%rip)
5ae9(3): mov %rax,%rbp
5aec(5): call 0xffffbf94(%rip)
5af1(2): mov (%rax),%esi
5af3(2): xor %edi,%edi
5af5(2): xor %eax,%eax
5af7(3): mov %r12,%rcx
5afa(3): mov %rbp,%rdx
5afd(5): call 0xffffe643(%rip)
5b02(3): test %rbx,%rbx
5b05(2): jz 0xa(%rip)
5b07(8): add $0x1,0x20b869(%rip)
5b0f(5): call 0xfffff0f1(%rip)
5b14(5): mov $0x1,%edi
5b19(5): call 0xffffc2f7(%rip)

"write_output" :
5a80(7): mov 0x20b941(%rip),%rsi
5a87(7): mov 0x20b882(%rip),%rdi
5a8e(2): push %r12
5a90(1): push %rbp
5a91(1): push %rbx
5a92(5): call 0xfffff39e(%rip)
5a97(7): add %rax,0x20b8ba(%rip)
5a9e(7): cmp %rax,0x20b923(%rip)
5aa5(2): jnz 0x1a(%rip)
5aa7(1): pop %rbx
5aa8(8): add $0x1,0x20b8c0(%rip)
5ab0(b): mov $0x0,0x20b84d(%rip)
5abb(1): pop %rbp
5abc(2): pop %r12
5abe(1): ret near (%rsp)
5abf(7): mov 0x20b91a(%rip),%rsi
5ac6(5): mov $0x4,%edi
5acb(3): mov %rax,%rbx
5ace(5): call 0x2f12(%rip)
5ad3(7): lea 0x6d0d(%rip),%rsi
5ada(2): xor %edi,%edi
5adc(5): mov $0x5,%edx
5ae1(3): mov %rax,%r12
5ae4(5): call 0xffffc07c(%rip)
5ae9(3): mov %rax,%rbp
5aec(5): call 0xffffbf94(%rip)
5af1(2): mov (%rax),%esi
5af3(2): xor %edi,%edi
5af5(2): xor %eax,%eax
5af7(3): mov %r12,%rcx
5afa(3): mov %rbp,%rdx
5afd(5): call 0xffffe643(%rip)
5b02(3): test %rbx,%rbx
5b05(2): jz 0xa(%rip)
5b07(8): add $0x1,0x20b869(%rip)
5b0f(5): call 0xfffff0f1(%rip)
5b14(5): mov $0x1,%edi
5b19(5): call 0xffffc2f7(%rip)

"copy_with_block" :
5b20(3): test %rsi,%rsi
5b23(6): jz 0x10d(%rip)
5b29(2): push %r12
5b2b(4): lea 0x0(%rdi,%rsi,1),%r12
5b2f(1): push %rbp
5b30(3): mov %rdi,%rbp
5b33(1): push %rbx
5b34(2): jmp 0x54(%rip)
5b36(a): nop 0x0(%rax,%rax,1)
5b40(3): cmp %rbx,%rdx
5b43(6): jz 0xc5(%rip)
5b49(2): jbe 0x2b(%rip)
5b4b(7): mov 0x20b7b6(%rip),%rcx
5b52(7): mov 0x20b7b7(%rip),%rsi
5b59(4): lea 0x1(%rcx),%rdx
5b5d(7): cmp 0x20b864(%rip),%rdx
5b64(3): mov %al,0x0(%rsi,%rcx,1)
5b67(7): mov %rdx,0x20b79a(%rip)
5b6e(6): jnb 0xaa(%rip)
5b74(4): add $0x1,%rbp
5b78(4): add $0x1,%rbx
5b7c(3): cmp %rbp,%r12
5b7f(7): mov %rbx,0x20b77a(%rip)
5b86(2): jz 0x35(%rip)
5b88(4): movzx 0x0(%rbp),%eax
5b8c(7): mov 0x20b76d(%rip),%rbx
5b93(6): cmp 0x20b481(%rip),%al
5b99(7): mov 0x20b820(%rip),%rdx
5ba0(2): jnz 0xffffffa0(%rip)
5ba2(3): cmp %rbx,%rdx
5ba5(2): jnbe 0x2d(%rip)
5ba7(4): add $0x1,%rbp
5bab(b): mov $0x0,0x20b74a(%rip)
5bb6(3): cmp %rbp,%r12
5bb9(2): jnz 0xffffffcf(%rip)
5bbb(1): pop %rbx
5bbc(1): pop %rbp
5bbd(2): pop %r12
5bbf(1): ret near (%rsp)
5bc0(5): call 0xfffffec0(%rip)
5bc5(4): add $0x1,%rbx
5bc9(7): cmp %rbx,0x20b7f0(%rip)
5bd0(2): jbe 0xffffffd7(%rip)
5bd2(7): mov 0x20b72f(%rip),%rdx
5bd9(7): movzx 0x20b439(%rip),%esi
5be0(7): mov 0x20b729(%rip),%rcx
5be7(4): lea 0x1(%rdx),%rax
5beb(7): cmp 0x20b7d6(%rip),%rax
5bf2(4): mov %sil,0x0(%rcx,%rdx,1)
5bf6(7): mov %rax,0x20b70b(%rip)
5bfd(2): jb 0xffffffc8(%rip)
5bff(2): jmp 0xffffffc1(%rip)
5c01(7): nop 0x0(%rax)
5c08(8): add $0x1,0x20b710(%rip)
5c10(5): jmp 0xffffff64(%rip)
5c15(3): nop (%rax)
5c18(5): call 0xfffffe68(%rip)
5c1d(7): mov 0x20b6dc(%rip),%rbx
5c24(5): jmp 0xffffff50(%rip)
5c29(7): nop 0x0(%rax)
5c30(2): REP ret near (%rsp)

"copy_with_unblock" :
5c40(3): test %rsi,%rsi
5c43(6): jz 0x165(%rip)
5c49(2): push %r13
5c4b(2): push %r12
5c4d(3): mov %rdi,%r12
5c50(1): push %rbp
5c51(1): push %rbx
5c52(3): mov %rsi,%rbp
5c55(2): xor %ebx,%ebx
5c57(4): sub $0x8,%rsp
5c5b(2): jmp 0x5d(%rip)
5c5d(3): nop (%rax)
5c60(7): mov 0x20b6a1(%rip),%rdx
5c67(4): sub $0x1,%rbx
5c6b(7): movzx 0x20b3a8(%rip),%esi
5c72(7): mov 0x20b697(%rip),%rcx
5c79(b): mov $0x0,0x20b4ac(%rip)
5c84(b): mov $0x0,0x20b671(%rip)
5c8f(4): lea 0x1(%rdx),%rax
5c93(7): cmp 0x20b72e(%rip),%rax
5c9a(4): mov %sil,0x0(%rcx,%rdx,1)
5c9e(7): mov %rax,0x20b663(%rip)
5ca5(6): jnb 0xce(%rip)
5cab(4): add $0x1,%rbx
5caf(3): cmp %rbx,%rbp
5cb2(6): jbe 0xd3(%rip)
5cb8(7): mov 0x20b641(%rip),%rax
5cbf(7): cmp 0x20b6fa(%rip),%rax
5cc6(5): movzx 0x0(%r12,%rbx,1),%r13d
5ccb(4): lea 0x1(%rax),%rdx
5ccf(7): mov %rdx,0x20b62a(%rip)
5cd6(2): jnb 0xffffff8a(%rip)
5cd8(7): movzx 0x20b33a(%rip),%ecx
5cdf(7): mov 0x20b44a(%rip),%rdx
5ce6(3): cmp %r13b,%cl
5ce9(6): jz 0xa7(%rip)
5cef(3): test %rdx,%rdx
5cf2(7): mov 0x20b617(%rip),%rdi
5cf9(7): mov 0x20b608(%rip),%rax
5d00(7): mov 0x20b6c1(%rip),%rsi
5d07(2): jnz 0x1d(%rip)
5d09(5): jmp 0x97(%rip)
5d0e(2): nop 
5d10(8): sub $0x1,0x20b418(%rip)
5d18(2): jz 0x43(%rip)
5d1a(7): movzx 0x20b2f8(%rip),%ecx
5d21(3): mov %rdx,%rax
5d24(4): lea 0x1(%rax),%rdx
5d28(3): mov %cl,0x0(%rdi,%rax,1)
5d2b(3): cmp %rsi,%rdx
5d2e(7): mov %rdx,0x20b5d3(%rip)
5d35(2): jb 0xffffffdb(%rip)
5d37(5): call 0xfffffd49(%rip)
5d3c(8): sub $0x1,0x20b3ec(%rip)
5d44(7): mov 0x20b5c5(%rip),%rdi
5d4b(7): mov 0x20b5b6(%rip),%rdx
5d52(7): mov 0x20b66f(%rip),%rsi
5d59(2): jnz 0xffffffc1(%rip)
5d5b(4): lea 0x1(%rdx),%rax
5d5f(4): mov %r13b,0x0(%rdi,%rdx,1)
5d63(3): cmp %rsi,%rax
5d66(7): mov %rax,0x20b59b(%rip)
5d6d(6): jb 0xffffff3e(%rip)
5d73(4): add $0x1,%rbx
5d77(5): call 0xfffffd09(%rip)
5d7c(3): cmp %rbx,%rbp
5d7f(6): jnbe 0xffffff39(%rip)
5d85(4): add $0x8,%rsp
5d89(1): pop %rbx
5d8a(1): pop %rbp
5d8b(2): pop %r12
5d8d(2): pop %r13
5d8f(1): ret near (%rsp)
5d90(4): add $0x1,%rdx
5d94(7): mov %rdx,0x20b395(%rip)
5d9b(5): jmp 0xffffff10(%rip)
5da0(3): mov %rax,%rdx
5da3(2): jmp 0xffffffb8(%rip)
5da5(3): nop (%rax)
5da8(2): REP ret near (%rsp)

"close_stream" :
5db0(2): push %r12
5db2(1): push %rbp
5db3(3): mov %rdi,%rbp
5db6(1): push %rbx
5db7(5): call 0xffffbd19(%rip)
5dbc(3): mov 0x0(%rbp),%ebx
5dbf(3): mov %rbp,%rdi
5dc2(3): mov %rax,%r12
5dc5(5): call 0x3eab(%rip)
5dca(3): and $0x20,%ebx
5dcd(2): test %ebx,%ebx
5dcf(2): jnz 0x19(%rip)
5dd1(2): test %eax,%eax
5dd3(2): jz 0xc(%rip)
5dd5(3): test %r12,%r12
5dd8(5): mov $0xffffffff,%eax
5ddd(2): jz 0x3b(%rip)
5ddf(1): pop %rbx
5de0(1): pop %rbp
5de1(2): pop %r12
5de3(1): ret near (%rsp)
5de4(4): nop 0x0(%rax)
5de8(2): test %eax,%eax
5dea(2): jnz 0x1e(%rip)
5dec(5): call 0xffffbc94(%rip)
5df1(6): mov $0x0,(%rax)
5df7(5): mov $0xffffffff,%eax
5dfc(1): pop %rbx
5dfd(1): pop %rbp
5dfe(2): pop %r12
5e00(1): ret near (%rsp)
5e01(7): nop 0x0(%rax)
5e08(1): pop %rbx
5e09(5): mov $0xffffffff,%eax
5e0e(1): pop %rbp
5e0f(2): pop %r12
5e11(1): ret near (%rsp)
5e12(6): nop 0x0(%rax,%rax,1)
5e18(5): call 0xffffbc68(%rip)
5e1d(3): cmp $0x9,(%rax)
5e20(1): pop %rbx
5e21(1): pop %rbp
5e22(2): pop %r12
5e24(3): setnz %al
5e27(3): movzx %al,%eax
5e2a(2): neg %eax
5e2c(1): ret near (%rsp)

"close_stdout_set_file_name" :
5e30(7): mov %rdi,0x20b5c1(%rip)
5e37(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5e40(7): mov %dil,0x20b5a9(%rip)
5e47(1): ret near (%rsp)

"close_stdout" :
5e50(1): push %rbp
5e51(1): push %rbx
5e52(4): sub $0x8,%rsp
5e56(7): mov 0x20b26b(%rip),%rdi
5e5d(5): call 0xffffff53(%rip)
5e62(2): test %eax,%eax
5e64(2): jz 0x18(%rip)
5e66(5): call 0xffffbc1a(%rip)
5e6b(7): cmp $0x0,0x20b57e(%rip)
5e72(3): mov %rax,%rbx
5e75(2): jz 0x1e(%rip)
5e77(3): cmp $0x20,(%rax)
5e7a(2): jnz 0x19(%rip)
5e7c(7): mov 0x20b27d(%rip),%rdi
5e83(5): call 0xffffff2d(%rip)
5e88(2): test %eax,%eax
5e8a(2): jnz 0x48(%rip)
5e8c(4): add $0x8,%rsp
5e90(1): pop %rbx
5e91(1): pop %rbp
5e92(1): ret near (%rsp)
5e93(7): lea 0x82e3(%rip),%rsi
5e9a(2): xor %edi,%edi
5e9c(5): mov $0x5,%edx
5ea1(5): call 0xffffbcbf(%rip)
5ea6(7): mov 0x20b54b(%rip),%rdi
5ead(3): mov %rax,%rbp
5eb0(3): test %rdi,%rdi
5eb3(2): jz 0x2a(%rip)
5eb5(5): call 0x2bfb(%rip)
5eba(2): mov (%rbx),%esi
5ebc(7): lea 0x68dc(%rip),%rdx
5ec3(3): mov %rax,%rcx
5ec6(3): mov %rbp,%r8
5ec9(2): xor %edi,%edi
5ecb(2): xor %eax,%eax
5ecd(5): call 0xffffbec3(%rip)
5ed2(6): mov 0x20b158(%rip),%edi
5ed8(5): call 0xffffbbe8(%rip)
5edd(2): mov (%rbx),%esi
5edf(7): lea 0x6786(%rip),%rdx
5ee6(3): mov %rax,%rcx
5ee9(2): xor %edi,%edi
5eeb(2): xor %eax,%eax
5eed(5): call 0xffffbea3(%rip)
5ef2(2): jmp 0xffffffe0(%rip)

"fd_reopen" :
5f00(2): push %r13
5f02(2): push %r12
5f04(2): xor %eax,%eax
5f06(1): push %rbp
5f07(1): push %rbx
5f08(2): mov %edi,%ebp
5f0a(3): mov %rsi,%rdi
5f0d(2): mov %edx,%esi
5f0f(2): mov %ecx,%edx
5f11(4): sub $0x8,%rsp
5f15(5): call 0xffffbe9b(%rip)
5f1a(2): cmp %eax,%ebp
5f1c(2): mov %eax,%ebx
5f1e(2): jz 0x2b(%rip)
5f20(2): test %eax,%eax
5f22(2): js 0x27(%rip)
5f24(2): mov %ebp,%esi
5f26(2): mov %eax,%edi
5f28(5): call 0xffffbc98(%rip)
5f2d(3): mov %eax,%r12d
5f30(5): call 0xffffbb50(%rip)
5f35(3): mov (%rax),%r13d
5f38(3): mov %rax,%rbp
5f3b(2): mov %ebx,%edi
5f3d(5): call 0xffffbd23(%rip)
5f42(3): mov %r12d,%ebx
5f45(4): mov %r13d,0x0(%rbp)
5f49(4): add $0x8,%rsp
5f4d(2): mov %ebx,%eax
5f4f(1): pop %rbx
5f50(1): pop %rbp
5f51(2): pop %r12
5f53(2): pop %r13
5f55(1): ret near (%rsp)

"gethrxtime" :
5f60(1): push %rbx
5f61(5): mov $0x1,%edi
5f66(4): sub $0x20,%rsp
5f6a(3): mov %rsp,%rbx
5f6d(3): mov %rbx,%rsi
5f70(9): mov $0x28,%rax
5f79(5): mov %rax,0x18(%rsp)
5f7e(2): xor %eax,%eax
5f80(5): call 0xffffbb90(%rip)
5f85(2): test %eax,%eax
5f87(2): jz 0xa(%rip)
5f89(3): mov %rbx,%rdi
5f8c(5): call 0x64(%rip)
5f91(5): mov 0x8(%rsp),%rcx
5f96(a): mov $0x1237940039285380275,%rdx
5fa0(3): mov %rcx,%rax
5fa3(3): imul %rax,%rdx,%rdx
5fa6(3): mov %rcx,%rax
5fa9(4): sar $0x3f,%rax
5fad(4): sar $0x1a,%rdx
5fb1(3): sub %rax,%rdx
5fb4(4): mov (%rsp),%rax
5fb8(3): add %rdx,%rax
5fbb(7): imul %rdx,$0x3b9aca00,%rdx
5fc2(7): imul %rax,$0x3b9aca00,%rax
5fc9(3): sub %rdx,%rcx
5fcc(3): add %rcx,%rax
5fcf(5): mov 0x18(%rsp),%rsi
5fd4(9): xor $0x28,%rsi
5fdd(2): jnz 0x8(%rip)
5fdf(4): add $0x20,%rsp
5fe3(1): pop %rbx
5fe4(1): ret near (%rsp)
5fe5(5): call 0xffffbbab(%rip)

"gettime" :
5ff0(3): mov %rdi,%rsi
5ff3(2): xor %edi,%edi
5ff5(5): jmp 0xffffbb1b(%rip)

"current_timespec" :
6000(4): sub $0x28,%rsp
6004(2): xor %edi,%edi
6006(3): mov %rsp,%rsi
6009(9): mov $0x28,%rax
6012(5): mov %rax,0x18(%rsp)
6017(2): xor %eax,%eax
6019(5): call 0xffffbaf7(%rip)
601e(5): mov 0x18(%rsp),%rcx
6023(9): xor $0x28,%rcx
602c(4): mov (%rsp),%rax
6030(5): mov 0x8(%rsp),%rdx
6035(2): jnz 0x7(%rip)
6037(4): add $0x28,%rsp
603b(1): ret near (%rsp)
603c(5): call 0xffffbb54(%rip)

"adjust_value.part.0" :
6050(6): fld 0x818e(%rip),%st0
6056(4): fld 0x8(%rsp),%st0
605a(2): fucomi %st1,%st0
605c(2): jnb 0x74(%rip)
605e(2): fstp %st0,%st1
6060(4): fstcw 0xfffffff6(%rsp)
6064(5): movzx 0xfffffff6(%rsp),%eax
6069(3): or $0xc,%ah
606c(5): mov %ax,0xfffffff4(%rsp)
6071(2): fld %st0,%st0
6073(4): fldcw 0xfffffff4(%rsp)
6077(4): fistp %st0,0xffffffe8(%rsp)
607b(4): fldcw 0xfffffff6(%rsp)
607f(5): mov 0xffffffe8(%rsp),%rax
6084(5): mov %rax,0xffffffe0(%rsp)
6089(3): test %rax,%rax
608c(4): fild 0xffffffe0(%rsp),%st0
6090(2): jns 0x8(%rip)
6092(6): fadd 0x8150(%rip)
6098(2): test %edi,%edi
609a(2): jnz 0x2e(%rip)
609c(2): fxch %st1,%st0
609e(2): fucomip %st1,%st0
60a0(2): jp 0x8(%rip)
60a2(2): jz 0x28(%rip)
60a4(2): fstp %st0,%st0
60a6(2): jmp 0xa(%rip)
60a8(2): fstp %st0,%st0
60aa(6): nop 0x0(%rax,%rax,1)
60b0(4): add $0x1,%rax
60b4(5): mov %rax,0xffffffe0(%rsp)
60b9(3): test %rax,%rax
60bc(4): fild 0xffffffe0(%rsp),%st0
60c0(2): js 0x50(%rip)
60c2(2): jmp 0x8(%rip)
60c4(4): nop 0x0(%rax)
60c8(2): fstp %st0,%st1
60ca(2): REP ret near (%rsp)
60cc(4): nop 0x0(%rax)
60d0(4): fstcw 0xfffffff6(%rsp)
60d4(5): movzx 0xfffffff6(%rsp),%eax
60d9(2): fsubr %st0,%st1
60db(2): fxch %st1,%st0
60dd(a): mov $0x-9223372036854775808,%rdx
60e7(3): or $0xc,%ah
60ea(5): mov %ax,0xfffffff4(%rsp)
60ef(4): fldcw 0xfffffff4(%rsp)
60f3(4): fistp %st0,0xffffffe8(%rsp)
60f7(4): fldcw 0xfffffff6(%rsp)
60fb(5): mov 0xffffffe8(%rsp),%rax
6100(3): xor %rdx,%rax
6103(5): jmp 0xffffff81(%rip)
6108(8): nop 0x0(%rax,%rax,1)
6110(6): fadd 0x80d2(%rip)
6116(1): ret near (%rsp)

"human_readable" :
6120(2): push %r15
6122(2): push %r14
6124(2): mov %edx,%eax
6126(2): push %r13
6128(2): push %r12
612a(3): mov %edx,%r15d
612d(1): push %rbp
612e(1): push %rbx
612f(3): and $0x20,%eax
6132(4): and $0x3,%r15d
6136(3): mov %edx,%r12d
6139(3): mov %rdi,%rbx
613c(7): sub $0x98,%rsp
6143(5): mov %rcx,0x18(%rsp)
6148(4): mov %eax,0x30(%rsp)
614c(9): mov $0x28,%rcx
6155(8): mov %rcx,0x88(%rsp)
615d(2): xor %ecx,%ecx
615f(3): cmp $0x1,%eax
6162(4): mov %rsi,(%rsp)
6166(5): mov %r8,0x10(%rsp)
616b(2): sbb %eax,%eax
616d(3): and $0xe8,%eax
6170(5): add $0x400,%eax
6175(4): mov %eax,0x34(%rsp)
6179(5): call 0xffffb977(%rip)
617e(3): mov (%rax),%r14
6181(3): mov %rax,%r13
6184(3): mov %r14,%rdi
6187(5): call 0xffffb9f9(%rip)
618c(4): mov 0x10(%r13),%rcx
6190(4): mov 0x8(%r13),%r13
6194(3): mov %rax,%rbp
6197(4): sub $0x1,%rax
619b(5): mov $0x1,%edx
61a0(4): cmp $0x10,%rax
61a4(7): lea 0x7fde(%rip),%rax
61ab(3): mov %r13,%rdi
61ae(4): cmovnb %rdx,%rbp
61b2(5): mov %rcx,0x38(%rsp)
61b7(4): cmovnb %rax,%r14
61bb(5): call 0xffffb9c5(%rip)
61c0(4): cmp $0x11,%rax
61c4(7): lea 0x85d6(%rip),%rax
61cb(5): mov 0x10(%rsp),%rdi
61d0(5): mov 0x18(%rsp),%rcx
61d5(4): cmovnb %rax,%r13
61d9(4): mov (%rsp),%rax
61dd(6): add $0x287,%rax
61e3(3): cmp %rcx,%rdi
61e6(5): mov %rax,0x8(%rsp)
61eb(6): jnbe 0x14d(%rip)
61f1(2): xor %edx,%edx
61f3(3): mov %rcx,%rax
61f6(3): div %rdi,%rax
61f9(3): test %rdx,%rdx
61fc(3): mov %rax,%rdi
61ff(6): jz 0x361(%rip)
6205(5): mov %rcx,0x18(%rsp)
620a(3): test %rcx,%rcx
620d(4): fild 0x18(%rsp),%st0
6211(2): jns 0x8(%rip)
6213(6): fadd 0x7fcf(%rip)
6219(5): mov 0x10(%rsp),%rax
621e(5): mov %rax,0x18(%rsp)
6223(3): test %rax,%rax
6226(4): fild 0x18(%rsp),%st0
622a(2): jns 0x8(%rip)
622c(6): fadd 0x7fb6(%rip)
6232(2): fdivp %st0,%st1
6234(5): mov %rbx,0x18(%rsp)
6239(3): test %rbx,%rbx
623c(4): fild 0x18(%rsp),%st0
6240(2): jns 0x8(%rip)
6242(6): fadd 0x7fa0(%rip)
6248(4): test $0x10,%r12b
624c(2): fmulp %st0,%st1
624e(6): jz 0x1ca(%rip)
6254(4): fild 0x34(%rsp),%st0
6258(2): xor %ebx,%ebx
625a(2): fld %st0,%st0
625c(2): jmp 0x8(%rip)
625e(2): nop 
6260(2): fstp %st0,%st1
6262(2): fxch %st2,%st0
6264(2): fld %st0,%st0
6266(3): add $0x1,%ebx
6269(2): fmul %st2
626b(2): fxch %st3,%st0
626d(2): fucomi %st3,%st0
626f(2): jb 0x11(%rip)
6271(3): cmp $0x8,%ebx
6274(2): jnz 0xffffffec(%rip)
6276(2): fstp %st0,%st2
6278(2): fstp %st0,%st2
627a(2): jmp 0xa(%rip)
627c(4): nop 0x0(%rax)
6280(2): fstp %st0,%st2
6282(2): fstp %st0,%st2
6284(4): mov 0x30(%rsp),%ecx
6288(4): add $0x1,%rbp
628c(2): xor %eax,%eax
628e(2): fdivrp %st0,%st1
6290(2): test %ecx,%ecx
6292(3): setz %al
6295(4): cmp $0x1,%r15d
6299(5): lea 0x1(%rbp,%rax,1),%rax
629e(5): mov %rax,0x18(%rsp)
62a3(6): jz 0x56d(%rip)
62a9(6): fld 0x7f41(%rip),%st0
62af(2): fucomip %st1,%st0
62b1(6): jnbe 0x3d7(%rip)
62b7(2): fld %st0,%st0
62b9(4): fstp %st0,0x20(%rsp)
62bd(4): sub $0x10,%rsp
62c1(7): lea 0x7ec9(%rip),%rcx
62c8(5): mov $0x1,%esi
62cd(7): mov $0xffffffff,%rdx
62d4(2): xor %eax,%eax
62d6(5): mov 0x10(%rsp),%r14
62db(3): mov %r14,%rdi
62de(3): fstp %st0,(%rsp)
62e1(5): call 0xffffbbaf(%rip)
62e6(3): mov %r14,%rdi
62e9(5): call 0xffffb897(%rip)
62ee(1): pop %rcx
62ef(1): pop %rsi
62f0(5): cmp 0x18(%rsp),%rax
62f5(3): mov %rax,%r14
62f8(4): fld 0x20(%rsp),%st0
62fc(6): jnbe 0x5ac(%rip)
6302(4): test $0x8,%r12b
6306(6): jz 0x16a(%rip)
630c(4): mov (%rsp),%rax
6310(6): cmp $0x30,0xffffffff(%rax,%r14,1)
6316(6): jnz 0x162(%rip)
631c(6): fld 0x7eca(%rip),%st0
6322(4): cmp $0x1,%r15d
6326(2): fmul %st0,%st1
6328(6): jnz 0x588(%rip)
632e(5): jmp 0x535(%rip)
6333(5): nop 0x0(%rax,%rax,1)
6338(3): test %rcx,%rcx
633b(6): jz 0xfffffeca(%rip)
6341(5): mov 0x10(%rsp),%rax
6346(2): xor %edx,%edx
6348(3): div %rcx,%rax
634b(3): test %rdx,%rdx
634e(3): mov %rax,%r8
6351(6): jnz 0xfffffeb4(%rip)
6357(3): mov %rbx,%rax
635a(2): xor %edx,%edx
635c(3): div %r8,%rax
635f(3): mov %rax,%rbx
6362(4): lea 0x0(%rdx,%rdx,4),%rax
6366(2): xor %edx,%edx
6368(3): mov %rbx,%rsi
636b(3): add %rax,%rax
636e(3): div %r8,%rax
6371(3): add %rdx,%rdx
6374(3): mov %eax,%r9d
6377(3): cmp %rdx,%r8
637a(6): jbe 0x58e(%rip)
6380(2): xor %edi,%edi
6382(3): test %rdx,%rdx
6385(4): setnz %dil
6389(3): mov %r12d,%ecx
638c(5): mov 0x8(%rsp),%r8
6391(5): mov $0xffffffff,%ebx
6396(3): and $0x10,%ecx
6399(6): jz 0x3c7(%rip)
639f(5): mov 0x34(%rsp),%r8d
63a4(3): cmp %rsi,%r8
63a7(3): mov %r8,%r11
63aa(6): jnbe 0x576(%rip)
63b0(2): xor %ebx,%ebx
63b2(2): jmp 0x25(%rip)
63b4(4): nop 0x0(%rax)
63b8(2): test %edi,%edi
63ba(4): setnz %dil
63be(4): movzx %dil,%edi
63c2(3): add $0x1,%ebx
63c5(3): cmp %r10,%r8
63c8(6): jnbe 0x315(%rip)
63ce(3): cmp $0x8,%ebx
63d1(6): jz 0x5a7(%rip)
63d7(3): mov %rsi,%rax
63da(2): xor %edx,%edx
63dc(2): mov %edi,%esi
63de(3): div %r8,%rax
63e1(2): sar $0x1,%esi
63e3(3): mov %rax,%r10
63e6(3): lea 0x0(%rdx,%rdx,4),%eax
63e9(2): xor %edx,%edx
63eb(4): lea 0x0(%r9,%rax,2),%eax
63ef(3): div %r11d,%eax
63f2(3): lea 0x0(%rsi,%rdx,2),%edx
63f5(3): mov %eax,%r9d
63f8(3): mov %r10,%rsi
63fb(2): add %edx,%edi
63fd(3): cmp %edx,%r11d
6400(2): jnbe 0xffffffb8(%rip)
6402(3): cmp %edi,%r11d
6405(4): setb %dil
6409(4): movzx %dil,%edi
640d(3): add $0x2,%edi
6410(2): jmp 0xffffffb2(%rip)
6412(6): nop 0x0(%rax,%rax,1)
6418(4): cmp $0x1,%r15d
641c(2): jz 0x10(%rip)
641e(6): fld 0x7dcc(%rip),%st0
6424(2): fucomip %st1,%st0
6426(6): jnbe 0x28a(%rip)
642c(4): sub $0x10,%rsp
6430(7): lea 0x7d54(%rip),%rcx
6437(5): mov $0x1,%esi
643c(5): mov 0x10(%rsp),%rbx
6441(7): mov $0xffffffff,%rdx
6448(2): xor %eax,%eax
644a(3): fstp %st0,(%rsp)
644d(2): xor %ebp,%ebp
644f(3): mov %rbx,%rdi
6452(5): call 0xffffba3e(%rip)
6457(3): mov %rbx,%rdi
645a(5): mov $0xffffffff,%ebx
645f(5): call 0xffffb721(%rip)
6464(1): pop %rsi
6465(1): pop %rdi
6466(3): mov %rax,%r14
6469(2): jmp 0x17(%rip)
646b(5): nop 0x0(%rax,%rax,1)
6470(2): fstp %st0,%st0
6472(2): jmp 0xe(%rip)
6474(4): nop 0x0(%rax)
6478(2): fstp %st0,%st0
647a(6): nop 0x0(%rax,%rax,1)
6480(5): mov 0x8(%rsp),%r15
6485(4): mov (%rsp),%rsi
6489(3): mov %r14,%rdx
648c(3): sub %r14,%r15
648f(3): sub %rbp,%r14
6492(3): mov %r15,%rdi
6495(5): call 0xffffb8eb(%rip)
649a(3): mov %r14,%r8
649d(3): add %r15,%r8
64a0(4): test $0x4,%r12b
64a4(6): jnz 0xe4(%rip)
64aa(4): test $0x80,%r12b
64ae(2): jz 0x79(%rip)
64b0(3): cmp $0xff,%ebx
64b3(6): jz 0x31d(%rip)
64b9(3): mov %r12d,%eax
64bc(5): and $0x100,%eax
64c1(2): mov %eax,%ecx
64c3(2): or %ebx,%ecx
64c5(2): jz 0x62(%rip)
64c7(4): and $0x40,%r12d
64cb(6): jnz 0x19d(%rip)
64d1(2): test %ebx,%ebx
64d3(6): jz 0x633(%rip)
64d9(3): cmp $0x1,%ebx
64dc(2): jnz 0x10(%rip)
64de(5): mov 0x30(%rsp),%r9d
64e3(3): test %r9d,%r9d
64e6(6): jz 0x44a(%rip)
64ec(7): lea 0x7ce5(%rip),%rcx
64f3(3): movsxd %ebx,%rbx
64f6(5): mov 0x8(%rsp),%rdi
64fb(2): test %eax,%eax
64fd(4): movzx 0x0(%rcx,%rbx,1),%ecx
6501(4): lea 0x1(%rdi),%rdx
6505(2): mov %cl,(%rdi)
6507(6): jz 0x43d(%rip)
650d(5): mov 0x30(%rsp),%r8d
6512(3): test %r8d,%r8d
6515(6): jnz 0x1bb(%rip)
651b(4): lea 0x1(%rdx),%rax
651f(3): mov $0x42,(%rdx)
6522(5): mov %rax,0x8(%rsp)
6527(5): mov 0x8(%rsp),%rax
652c(8): mov 0x88(%rsp),%rcx
6534(9): xor $0x28,%rcx
653d(3): mov $0x0,(%rax)
6540(3): mov %r15,%rax
6543(6): jnz 0x598(%rip)
6549(7): add $0x98,%rsp
6550(1): pop %rbx
6551(1): pop %rbp
6552(2): pop %r12
6554(2): pop %r13
6556(2): pop %r14
6558(2): pop %r15
655a(1): ret near (%rsp)
655b(5): nop 0x0(%rax,%rax,1)
6560(3): mov %rbx,%rsi
6563(2): xor %edx,%edx
6565(4): imul %rax,%rsi
6569(3): mov %rsi,%rax
656c(3): div %rdi,%rax
656f(3): cmp %rbx,%rax
6572(6): jnz 0xfffffc93(%rip)
6578(2): xor %edi,%edi
657a(3): xor %r9d,%r9d
657d(5): jmp 0xfffffe0c(%rip)
6582(6): nop 0x0(%rax,%rax,1)
6588(3): mov %r8,%r14
658b(3): mov %r13,%rdi
658e(5): mov %r8,0x48(%rsp)
6593(3): sub %r15,%r14
6596(7): mov $0xffffffff,%rbp
659d(5): call 0xffffb5e3(%rip)
65a2(5): lea 0x50(%rsp),%rdi
65a7(5): mov $0x29,%ecx
65ac(3): mov %r14,%rdx
65af(3): mov %r15,%rsi
65b2(5): mov %rax,0x40(%rsp)
65b7(5): mov %rdi,0x18(%rsp)
65bc(5): call 0xffffb704(%rip)
65c1(3): mov %r12d,%ecx
65c4(4): mov %ebx,0x20(%rsp)
65c8(3): mov %r14,%r12
65cb(3): mov %r13,%rbx
65ce(5): mov 0x48(%rsp),%r8
65d3(5): mov 0x38(%rsp),%r15
65d8(5): mov 0x40(%rsp),%r13
65dd(3): mov %ecx,%r14d
65e0(2): jmp 0x42(%rip)
65e2(6): nop 0x0(%rax,%rax,1)
65e8(5): mov 0x18(%rsp),%rax
65ed(3): sub %rbp,%r12
65f0(3): sub %rbp,%r8
65f3(3): mov %r8,%rdi
65f6(3): mov %rbp,%rdx
65f9(4): lea 0x0(%rax,%r12,1),%rsi
65fd(5): call 0xffffb6e3(%rip)
6602(3): test %r12,%r12
6605(3): mov %rax,%r8
6608(6): jz 0x510(%rip)
660e(3): sub %r13,%r8
6611(3): mov %r13,%rdx
6614(3): mov %rbx,%rsi
6617(3): mov %r8,%rdi
661a(5): call 0xffffb6c6(%rip)
661f(3): mov %rax,%r8
6622(4): movzx (%r15),%eax
6626(2): test %al,%al
6628(2): jz 0xf(%rip)
662a(2): cmp $0x7f,%al
662c(3): movzx %al,%ebp
662f(4): cmovnb %r12,%rbp
6633(4): add $0x1,%r15
6637(3): cmp %r12,%rbp
663a(2): jbe 0xffffffae(%rip)
663c(3): mov %r14d,%eax
663f(3): mov %r8,%r15
6642(3): mov %r12,%r14
6645(5): mov 0x18(%rsp),%rsi
664a(3): sub %r14,%r15
664d(3): mov %r14,%rdx
6650(3): mov %r15,%rdi
6653(4): mov 0x20(%rsp),%ebx
6657(3): mov %eax,%r12d
665a(5): call 0xffffb686(%rip)
665f(5): jmp 0xfffffe4b(%rip)
6664(4): nop 0x0(%rax)
6668(4): mov (%rsp),%rcx
666c(7): lea 0x288(%rcx),%rdi
6673(7): mov $0x20,0x287(%rcx)
667a(5): mov %rdi,0x8(%rsp)
667f(5): jmp 0xfffffe52(%rip)
6684(4): nop 0x0(%rax)
6688(4): sub $0x10,%rsp
668c(3): mov %r15d,%edi
668f(2): fld %st0,%st0
6691(3): fstp %st0,(%rsp)
6694(4): fstp %st0,0x30(%rsp)
6698(5): call 0xfffff9b8(%rip)
669d(1): pop %rax
669e(1): pop %rdx
669f(4): fld 0x20(%rsp),%st0
66a3(5): jmp 0xfffffc16(%rip)
66a8(8): nop 0x0(%rax,%rax,1)
66b0(4): sub $0x10,%rsp
66b4(3): mov %r15d,%edi
66b7(3): fstp %st0,(%rsp)
66ba(5): call 0xfffff996(%rip)
66bf(2): pop %r8
66c1(2): pop %r9
66c3(5): jmp 0xfffffd69(%rip)
66c8(8): nop 0x0(%rax,%rax,1)
66d0(4): lea 0x2(%rdi),%rdx
66d4(4): mov $0x69,0x1(%rdi)
66d8(5): jmp 0xfffffe43(%rip)
66dd(4): cmp $0x9,%r10
66e1(6): jnbe 0x297(%rip)
66e7(4): cmp $0x1,%r15d
66eb(6): jz 0x2b7(%rip)
66f1(3): test %r15d,%r15d
66f4(3): setz %dl
66f7(2): test %edi,%edi
66f9(4): setnle %r8b
66fd(3): and %r8d,%edx
6700(2): test %dl,%dl
6702(6): jz 0x287(%rip)
6708(4): lea 0x1(%rax),%r9d
670c(4): cmp $0xa,%r9d
6710(6): jz 0x301(%rip)
6716(4): add $0x30,%r9d
671a(4): mov (%rsp),%rax
671e(7): lea 0x286(%rax),%r8
6725(7): mov %r9b,0x286(%rax)
672c(2): mov %ebp,%eax
672e(3): sub %rbp,%r8
6731(3): cmp $0x8,%ebp
6734(6): jnb 0x28d(%rip)
673a(4): test $0x4,%bpl
673e(6): jnz 0x388(%rip)
6744(2): test %eax,%eax
6746(2): jz 0x11(%rip)
6748(4): movzx (%r14),%edx
674c(2): test $0x2,%al
674e(3): mov %dl,(%r8)
6751(6): jnz 0x38f(%rip)
6757(2): xor %edi,%edi
6759(3): xor %r9d,%r9d
675c(4): nop 0x0(%rax)
6760(4): cmp $0x1,%r15d
6764(6): jz 0x17c(%rip)
676a(3): test %r15d,%r15d
676d(2): jnz 0x23(%rip)
676f(3): add %r9d,%edi
6772(2): test %edi,%edi
6774(2): jle 0x1c(%rip)
6776(4): add $0x1,%rsi
677a(2): test %ecx,%ecx
677c(2): jz 0x14(%rip)
677e(4): mov 0x34(%rsp),%eax
6782(3): cmp %rsi,%rax
6785(6): jz 0x1cb(%rip)
678b(5): nop 0x0(%rax,%rax,1)
6790(3): mov %r8,%r15
6793(a): mov $0x-3689348814741910323,%rcx
679d(3): nop (%rax)
67a0(3): mov %rsi,%rax
67a3(4): sub $0x1,%r15
67a7(3): mul %rax,%rcx,%rdx
67aa(4): shr $0x3,%rdx
67ae(4): lea 0x0(%rdx,%rdx,4),%rax
67b2(3): add %rax,%rax
67b5(3): sub %rax,%rsi
67b8(3): add $0x30,%esi
67bb(3): test %rdx,%rdx
67be(3): mov %sil,(%r15)
67c1(3): mov %rdx,%rsi
67c4(2): jnz 0xffffffdc(%rip)
67c6(5): jmp 0xfffffcda(%rip)
67cb(5): nop 0x0(%rax,%rax,1)
67d0(5): mov 0x10(%rsp),%rcx
67d5(4): cmp $0x1,%rcx
67d9(6): jbe 0x1a9(%rip)
67df(4): mov 0x34(%rsp),%edx
67e3(5): mov $0x1,%ebx
67e8(5): mov $0x1,%eax
67ed(4): imul %rdx,%rax
67f1(3): cmp %rax,%rcx
67f4(6): jbe 0xfffffcc5(%rip)
67fa(3): add $0x1,%ebx
67fd(3): cmp $0x8,%ebx
6800(2): jnz 0xffffffed(%rip)
6802(5): jmp 0xfffffcb7(%rip)
6807(9): nop 0x0(%rax,%rax,1)
6810(4): sub $0x10,%rsp
6814(7): lea 0x7976(%rip),%rcx
681b(7): mov $0xffffffff,%rdx
6822(2): fld %st0,%st0
6824(3): fstp %st0,(%rsp)
6827(5): mov 0x10(%rsp),%r14
682c(5): mov $0x1,%esi
6831(2): xor %eax,%eax
6833(3): mov %r14,%rdi
6836(4): fstp %st0,0x30(%rsp)
683a(5): call 0xffffb656(%rip)
683f(3): mov %r14,%rdi
6842(5): call 0xffffb33e(%rip)
6847(3): mov %rax,%r14
684a(1): pop %rax
684b(1): pop %rdx
684c(5): cmp 0x18(%rsp),%r14
6851(4): fld 0x20(%rsp),%st0
6855(6): jbe 0xfffffaad(%rip)
685b(6): fld 0x798b(%rip),%st0
6861(2): fmul %st0,%st1
6863(2): fdivp %st0,%st1
6865(4): sub $0x10,%rsp
6869(7): lea 0x791b(%rip),%rcx
6870(5): mov 0x10(%rsp),%r14
6875(7): mov $0xffffffff,%rdx
687c(5): mov $0x1,%esi
6881(2): xor %eax,%eax
6883(2): xor %ebp,%ebp
6885(3): mov %r14,%rdi
6888(3): fstp %st0,(%rsp)
688b(5): call 0xffffb605(%rip)
6890(3): mov %r14,%rdi
6893(5): call 0xffffb2ed(%rip)
6898(2): pop %r10
689a(3): mov %rax,%r14
689d(2): pop %r11
689f(5): jmp 0xfffffbe1(%rip)
68a4(4): nop 0x0(%rax)
68a8(6): fld 0x793e(%rip),%st0
68ae(2): fmul %st0,%st1
68b0(6): fld 0x793a(%rip),%st0
68b6(2): fucomip %st2,%st0
68b8(2): jbe 0xffffffab(%rip)
68ba(4): fstp %st0,0x18(%rsp)
68be(4): sub $0x10,%rsp
68c2(3): mov %r15d,%edi
68c5(3): fstp %st0,(%rsp)
68c8(5): call 0xfffff788(%rip)
68cd(1): pop %rbp
68ce(2): pop %r14
68d0(4): fld 0x18(%rsp),%st0
68d4(2): jmp 0xffffff8f(%rip)
68d6(a): nop 0x0(%rax,%rax,1)
68e0(3): mov %rsi,%rax
68e3(3): movsxd %edi,%rdi
68e6(3): and $0x1,%eax
68e9(3): add %rdi,%rax
68ec(3): setnz %al
68ef(3): movzx %al,%eax
68f2(3): add %eax,%r9d
68f5(4): cmp $0x5,%r9d
68f9(6): jnle 0xfffffe7d(%rip)
68ff(5): jmp 0xfffffe91(%rip)
6904(4): nop 0x0(%rax)
6908(4): setb %dil
690c(4): movzx %dil,%edi
6910(3): add $0x2,%edi
6913(5): jmp 0xfffffa76(%rip)
6918(8): nop 0x0(%rax,%rax,1)
6920(5): mov 0x8(%rsp),%r8
6925(2): xor %ebx,%ebx
6927(5): jmp 0xfffffe39(%rip)
692c(4): nop 0x0(%rax)
6930(5): mov 0x8(%rsp),%rbx
6935(2): test %eax,%eax
6937(4): lea 0x1(%rbx),%rdx
693b(3): mov $0x6b,(%rbx)
693e(6): jnz 0xfffffbdd(%rip)
6944(5): mov %rdx,0x8(%rsp)
6949(5): jmp 0xfffffbde(%rip)
694e(2): nop 
6950(3): cmp $0x8,%ebx
6953(6): jz 0xfffffe3d(%rip)
6959(3): add $0x1,%ebx
695c(4): test $0x8,%r12b
6960(6): jz 0xc2(%rip)
6966(4): lea 0xffffffff(%r8),%r15
696a(5): mov $0x31,0xffffffff(%r8)
696f(5): jmp 0xfffffb31(%rip)
6974(4): nop 0x0(%rax)
6978(5): mov 0x8(%rsp),%r8
697d(5): jmp 0xfffffde3(%rip)
6982(2): xor %ebx,%ebx
6984(5): jmp 0xfffffb35(%rip)
6989(2): test %eax,%eax
698b(6): jnz 0xfffffd8b(%rip)
6991(4): test $0x8,%r12b
6995(2): jnz 0x1f(%rip)
6997(6): mov $0x30,%r9d
699d(5): jmp 0xfffffd7d(%rip)
69a2(2): mov %eax,%edx
69a4(3): and $0x1,%edx
69a7(2): add %edi,%edx
69a9(3): cmp $0x2,%edx
69ac(3): setnle %dl
69af(5): jmp 0xfffffd51(%rip)
69b4(5): mov 0x8(%rsp),%r8
69b9(3): xor %r9d,%r9d
69bc(5): jmp 0xfffffda4(%rip)
69c1(3): mov (%r14),%rax
69c4(3): mov %r14,%r9
69c7(3): mov %rax,(%r8)
69ca(2): mov %ebp,%eax
69cc(5): mov 0xfffffff8(%r14,%rax,1),%rdx
69d1(5): mov %rdx,0xfffffff8(%r8,%rax,1)
69d6(4): lea 0x8(%r8),%rdx
69da(3): mov %r8,%rax
69dd(4): and $0xfffffff8,%rdx
69e1(3): sub %rdx,%rax
69e4(3): sub %rax,%r9
69e7(2): add %ebp,%eax
69e9(3): and $0xf8,%eax
69ec(3): cmp $0x8,%eax
69ef(6): jb 0xfffffd68(%rip)
69f5(3): and $0xf8,%eax
69f8(2): xor %edi,%edi
69fa(3): mov %edi,%r10d
69fd(3): add $0x8,%edi
6a00(4): mov 0x0(%r9,%r10,1),%r11
6a04(2): cmp %eax,%edi
6a06(4): mov %r11,0x0(%rdx,%r10,1)
6a0a(2): jb 0xfffffff0(%rip)
6a0c(5): jmp 0xfffffd4b(%rip)
6a11(4): lea 0x1(%r10),%rsi
6a15(4): cmp $0xa,%rsi
6a19(2): jz 0x57(%rip)
6a1b(2): xor %edi,%edi
6a1d(5): jmp 0xffffff74(%rip)
6a22(3): mov %rbp,%rax
6a25(5): mov $0x30,0xffffffff(%r8)
6a2a(3): not %rax
6a2d(3): add %rax,%r8
6a30(3): cmp $0x8,%ebp
6a33(2): mov %ebp,%eax
6a35(2): jnb 0x45(%rip)
6a37(3): and $0x4,%ebp
6a3a(6): jnz 0xb7(%rip)
6a40(2): test %eax,%eax
6a42(6): jz 0xffffff24(%rip)
6a48(4): movzx (%r14),%edx
6a4c(2): test $0x2,%al
6a4e(3): mov %dl,(%r8)
6a51(6): jz 0xffffff15(%rip)
6a57(6): movzx 0xfffffffe(%r14,%rax,1),%edx
6a5d(6): mov %dx,0xfffffffe(%r8,%rax,1)
6a63(5): jmp 0xffffff03(%rip)
6a68(8): nop 0x0(%rax,%rax,1)
6a70(5): mov 0x8(%rsp),%r8
6a75(5): jmp 0xfffffce2(%rip)
6a7a(3): mov (%r14),%rax
6a7d(4): lea 0x8(%r8),%rcx
6a81(4): and $0xfffffff8,%rcx
6a85(3): mov %rax,(%r8)
6a88(2): mov %ebp,%eax
6a8a(5): mov 0xfffffff8(%r14,%rax,1),%rdx
6a8f(5): mov %rdx,0xfffffff8(%r8,%rax,1)
6a94(3): mov %r8,%rax
6a97(3): sub %rcx,%rax
6a9a(3): sub %rax,%r14
6a9d(2): add %ebp,%eax
6a9f(3): and $0xf8,%eax
6aa2(3): cmp $0x8,%eax
6aa5(6): jb 0xfffffec1(%rip)
6aab(3): and $0xf8,%eax
6aae(2): xor %edx,%edx
6ab0(2): mov %edx,%esi
6ab2(3): add $0x8,%edx
6ab5(4): mov 0x0(%r14,%rsi,1),%rdi
6ab9(2): cmp %eax,%edx
6abb(4): mov %rdi,0x0(%rcx,%rsi,1)
6abf(2): jb 0xfffffff1(%rip)
6ac1(5): jmp 0xfffffea5(%rip)
6ac6(3): mov (%r14),%edx
6ac9(3): mov %edx,(%r8)
6acc(5): mov 0xfffffffc(%r14,%rax,1),%edx
6ad1(5): mov %edx,0xfffffffc(%r8,%rax,1)
6ad6(5): jmp 0xfffffc81(%rip)
6adb(5): call 0xffffb0b5(%rip)
6ae0(6): movzx 0xfffffffe(%r14,%rax,1),%edx
6ae6(6): mov %dx,0xfffffffe(%r8,%rax,1)
6aec(5): jmp 0xfffffc6b(%rip)
6af1(3): mov (%r14),%edx
6af4(3): mov %edx,(%r8)
6af7(5): mov 0xfffffffc(%r14,%rax,1),%edx
6afc(5): mov %edx,0xfffffffc(%r8,%rax,1)
6b01(5): jmp 0xfffffe65(%rip)
6b06(2): test %eax,%eax
6b08(5): mov 0x8(%rsp),%rdx
6b0d(6): jnz 0xfffffa0e(%rip)
6b13(5): jmp 0xfffffa14(%rip)
6b18(4): mov 0x20(%rsp),%ebx
6b1c(3): mov %rax,%r15
6b1f(3): mov %r14d,%r12d
6b22(5): jmp 0xfffff988(%rip)

"human_options" :
6b30(2): push %r13
6b32(2): push %r12
6b34(3): mov %rsi,%r13
6b37(1): push %rbp
6b38(1): push %rbx
6b39(3): mov %rdx,%r12
6b3c(3): mov %rdi,%rbx
6b3f(4): sub $0x18,%rsp
6b43(9): mov $0x28,%rax
6b4c(5): mov %rax,0x8(%rsp)
6b51(2): xor %eax,%eax
6b53(3): test %rdi,%rdi
6b56(6): jz 0x11a(%rip)
6b5c(2): xor %ebp,%ebp
6b5e(3): cmp $0x27,(%rbx)
6b61(2): jnz 0xb(%rip)
6b63(4): add $0x1,%rbx
6b67(5): mov $0x4,%ebp
6b6c(7): lea 0x765d(%rip),%rdx
6b73(7): lea 0x209f26(%rip),%rsi
6b7a(5): mov $0x4,%ecx
6b7f(3): mov %rbx,%rdi
6b82(5): call 0x35ae(%rip)
6b87(2): test %eax,%eax
6b89(2): js 0x3f(%rip)
6b8b(7): lea 0x763e(%rip),%rdx
6b92(2): cwde 
6b94(8): mov $0x1,(%r12)
6b9c(3): or 0x0(%rdx,%rax,4),%ebp
6b9f(2): xor %eax,%eax
6ba1(4): mov %ebp,0x0(%r13)
6ba5(5): mov 0x8(%rsp),%rcx
6baa(9): xor $0x28,%rcx
6bb3(6): jnz 0x15e(%rip)
6bb9(4): add $0x18,%rsp
6bbd(1): pop %rbx
6bbe(1): pop %rbp
6bbf(2): pop %r12
6bc1(2): pop %r13
6bc3(1): ret near (%rsp)
6bc4(4): nop 0x0(%rax)
6bc8(7): lea 0x75dd(%rip),%r8
6bcf(2): xor %edx,%edx
6bd1(3): mov %rsp,%rsi
6bd4(3): mov %r12,%rcx
6bd7(3): mov %rbx,%rdi
6bda(5): call 0x2a76(%rip)
6bdf(2): test %eax,%eax
6be1(2): jnz 0x47(%rip)
6be3(3): movzx (%rbx),%esi
6be6(3): lea 0xffffffd0(%rsi),%edx
6be9(3): cmp $0x9,%dl
6bec(2): jbe 0x2c(%rip)
6bee(4): mov (%rsp),%rcx
6bf2(3): cmp %rcx,%rbx
6bf5(2): jnz 0x14(%rip)
6bf7(5): jmp 0xd9(%rip)
6bfc(4): nop 0x0(%rax)
6c00(3): cmp %rcx,%rbx
6c03(6): jz 0xcd(%rip)
6c09(4): add $0x1,%rbx
6c0d(3): movzx (%rbx),%edi
6c10(3): lea 0xffffffd0(%rdi),%edx
6c13(3): cmp $0x9,%dl
6c16(2): jnbe 0xffffffea(%rip)
6c18(4): mov (%r12),%rdx
6c1c(4): mov %ebp,0x0(%r13)
6c20(2): jmp 0x14(%rip)
6c22(6): nop 0x0(%rax,%rax,1)
6c28(4): mov (%r12),%rdx
6c2c(8): mov $0x0,0x0(%r13)
6c34(3): test %rdx,%rdx
6c37(6): jnz 0xffffff6e(%rip)
6c3d(7): lea 0x5bf8(%rip),%rdi
6c44(5): call 0xffffaddc(%rip)
6c49(4): cmp $0x1,%rax
6c4d(3): sbb %rax,%rax
6c50(5): and $0x200,%eax
6c55(6): add $0x200,%rax
6c5b(4): mov %rax,(%r12)
6c5f(5): mov $0x4,%eax
6c64(5): jmp 0xffffff41(%rip)
6c69(7): nop 0x0(%rax)
6c70(7): lea 0x7520(%rip),%rdi
6c77(5): call 0xffffada9(%rip)
6c7c(3): test %rax,%rax
6c7f(3): mov %rax,%rbx
6c82(6): jnz 0xfffffeda(%rip)
6c88(7): lea 0x7513(%rip),%rdi
6c8f(5): call 0xffffad91(%rip)
6c94(3): test %rax,%rax
6c97(3): mov %rax,%rbx
6c9a(6): jnz 0xfffffec2(%rip)
6ca0(7): lea 0x5b95(%rip),%rdi
6ca7(5): call 0xffffad79(%rip)
6cac(3): test %rax,%rax
6caf(2): jz 0x4b(%rip)
6cb1(8): mov $0x200,(%r12)
6cb9(2): xor %eax,%eax
6cbb(8): mov $0x0,0x0(%r13)
6cc3(5): jmp 0xfffffee2(%rip)
6cc8(8): nop 0x0(%rax,%rax,1)
6cd0(4): cmp $0x42,0xffffffff(%rcx)
6cd4(2): jz 0x14(%rip)
6cd6(4): or $0x80,%bpl
6cda(3): or $0x20,%ebp
6cdd(5): jmp 0xffffff3b(%rip)
6ce2(6): nop 0x0(%rax,%rax,1)
6ce8(6): or $0x180,%ebp
6cee(4): cmp $0x69,0xfffffffe(%rcx)
6cf2(6): jnz 0xffffff26(%rip)
6cf8(2): jmp 0xffffffe2(%rip)
6cfa(8): mov $0x400,(%r12)
6d02(2): xor %eax,%eax
6d04(8): mov $0x0,0x0(%r13)
6d0c(5): jmp 0xfffffe99(%rip)
6d11(5): call 0xffffae7f(%rip)

"parse_long_options" :
6d20(2): push %r13
6d22(2): push %r12
6d24(3): mov %r8,%r13
6d27(1): push %rbp
6d28(1): push %rbx
6d29(3): mov %rdx,%rbp
6d2c(3): mov %rcx,%r12
6d2f(7): sub $0xe8,%rsp
6d36(2): test %al,%al
6d38(2): jz 0x3c(%rip)
6d3a(5): movaps %xmm0,0x60(%rsp)
6d3f(5): movaps %xmm1,0x70(%rsp)
6d44(8): movaps %xmm2,0x80(%rsp)
6d4c(8): movaps %xmm3,0x90(%rsp)
6d54(8): movaps %xmm4,0xa0(%rsp)
6d5c(8): movaps %xmm5,0xb0(%rsp)
6d64(8): movaps %xmm6,0xc0(%rsp)
6d6c(8): movaps %xmm7,0xd0(%rsp)
6d74(9): mov $0x28,%rax
6d7d(5): mov %rax,0x28(%rsp)
6d82(2): xor %eax,%eax
6d84(3): cmp $0x2,%edi
6d87(6): mov 0x20a353(%rip),%ebx
6d8d(a): mov $0x0,0x20a349(%rip)
6d97(2): jz 0x39(%rip)
6d99(5): mov 0x28(%rsp),%rax
6d9e(9): xor $0x28,%rax
6da7(6): mov %ebx,0x20a333(%rip)
6dad(a): mov $0x0,0x20a319(%rip)
6db7(6): jnz 0xa3(%rip)
6dbd(7): add $0xe8,%rsp
6dc4(1): pop %rbx
6dc5(1): pop %rbp
6dc6(2): pop %r12
6dc8(2): pop %r13
6dca(1): ret near (%rsp)
6dcb(5): nop 0x0(%rax,%rax,1)
6dd0(7): lea 0x209ce9(%rip),%rcx
6dd7(7): lea 0x7422(%rip),%rdx
6dde(3): xor %r8d,%r8d
6de1(5): mov %r9,0x8(%rsp)
6de6(5): call 0xffffadba(%rip)
6deb(3): cmp $0xff,%eax
6dee(2): jz 0xffffffab(%rip)
6df0(3): cmp $0x68,%eax
6df3(5): mov 0x8(%rsp),%r9
6df8(2): jz 0x58(%rip)
6dfa(3): cmp $0x76,%eax
6dfd(2): jnz 0xffffff9c(%rip)
6dff(8): lea 0x110(%rsp),%rax
6e07(7): mov 0x20a2ba(%rip),%rdi
6e0e(5): lea 0x10(%rsp),%r8
6e13(3): mov %r13,%rcx
6e16(3): mov %r12,%rdx
6e19(3): mov %rbp,%rsi
6e1c(5): mov %rax,0x18(%rsp)
6e21(5): lea 0x30(%rsp),%rax
6e26(8): mov $0x30,0x10(%rsp)
6e2e(8): mov $0x30,0x14(%rsp)
6e36(5): mov %rax,0x20(%rsp)
6e3b(5): call 0x23a5(%rip)
6e40(2): xor %edi,%edi
6e42(5): call 0xffffafce(%rip)
6e47(9): nop 0x0(%rax,%rax,1)
6e50(2): xor %edi,%edi
6e52(3): call %r9
6e55(5): jmp 0xffffff44(%rip)
6e5a(5): call 0xffffad36(%rip)

"parse_gnu_standard_options_only" :
6e60(2): push %r14
6e62(2): push %r13
6e64(3): mov %r8,%r14
6e67(2): push %r12
6e69(1): push %rbp
6e6a(3): mov %rdx,%r12
6e6d(1): push %rbx
6e6e(3): mov %rcx,%r13
6e71(7): sub $0xd0,%rsp
6e78(2): test %al,%al
6e7a(8): mov 0x100(%rsp),%rbp
6e82(2): jz 0x39(%rip)
6e84(5): movaps %xmm0,0x50(%rsp)
6e89(5): movaps %xmm1,0x60(%rsp)
6e8e(5): movaps %xmm2,0x70(%rsp)
6e93(8): movaps %xmm3,0x80(%rsp)
6e9b(8): movaps %xmm4,0x90(%rsp)
6ea3(8): movaps %xmm5,0xa0(%rsp)
6eab(8): movaps %xmm6,0xb0(%rsp)
6eb3(8): movaps %xmm7,0xc0(%rsp)
6ebb(9): mov $0x28,%rax
6ec4(5): mov %rax,0x18(%rsp)
6ec9(2): xor %eax,%eax
6ecb(7): lea 0x78cf(%rip),%rdx
6ed2(7): lea 0x7327(%rip),%rax
6ed9(3): test %r9b,%r9b
6edc(7): lea 0x209bdd(%rip),%rcx
6ee3(4): cmove %rax,%rdx
6ee7(3): xor %r8d,%r8d
6eea(6): mov 0x20a1f0(%rip),%ebx
6ef0(a): mov $0x1,0x20a1e6(%rip)
6efa(5): call 0xffffaca6(%rip)
6eff(3): cmp $0xff,%eax
6f02(2): jz 0x66(%rip)
6f04(3): cmp $0x68,%eax
6f07(6): jz 0x89(%rip)
6f0d(3): cmp $0x76,%eax
6f10(2): jnz 0x50(%rip)
6f12(8): lea 0x108(%rsp),%rax
6f1a(7): mov 0x20a1a7(%rip),%rdi
6f21(3): mov %rsp,%r8
6f24(3): mov %r14,%rcx
6f27(3): mov %r13,%rdx
6f2a(3): mov %r12,%rsi
6f2d(5): mov %rax,0x8(%rsp)
6f32(5): lea 0x20(%rsp),%rax
6f37(7): mov $0x30,(%rsp)
6f3e(8): mov $0x30,0x4(%rsp)
6f46(5): mov %rax,0x10(%rsp)
6f4b(5): call 0x2295(%rip)
6f50(2): xor %edi,%edi
6f52(5): call 0xffffaebe(%rip)
6f57(9): nop 0x0(%rax,%rax,1)
6f60(6): mov 0x20a0ca(%rip),%edi
6f66(2): call %rbp
6f68(5): mov 0x18(%rsp),%rax
6f6d(9): xor $0x28,%rax
6f76(6): mov %ebx,0x20a164(%rip)
6f7c(2): jnz 0x1a(%rip)
6f7e(7): add $0xd0,%rsp
6f85(1): pop %rbx
6f86(1): pop %rbp
6f87(2): pop %r12
6f89(2): pop %r13
6f8b(2): pop %r14
6f8d(1): ret near (%rsp)
6f8e(2): nop 
6f90(2): xor %edi,%edi
6f92(2): call %rbp
6f94(2): jmp 0xffffffd4(%rip)
6f96(5): call 0xffffabfa(%rip)

"set_program_name" :
6fa0(3): test %rdi,%rdi
6fa3(1): push %rbx
6fa4(2): jz 0x79(%rip)
6fa6(5): mov $0x2f,%esi
6fab(3): mov %rdi,%rbx
6fae(5): call 0xffffac42(%rip)
6fb3(3): test %rax,%rax
6fb6(2): jz 0x57(%rip)
6fb8(4): lea 0x1(%rax),%r8
6fbc(3): mov %r8,%rdx
6fbf(3): sub %rbx,%rdx
6fc2(4): cmp $0x6,%rdx
6fc6(2): jle 0x47(%rip)
6fc8(4): lea 0xfffffffa(%rax),%rsi
6fcc(7): lea 0x726d(%rip),%rdi
6fd3(5): mov $0x7,%ecx
6fd8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6fda(3): setnbe %dl
6fdd(3): sbb $0x0,%dl
6fe0(2): test %dl,%dl
6fe2(2): jnz 0x2b(%rip)
6fe4(7): lea 0x725d(%rip),%rdi
6feb(5): mov $0x3,%ecx
6ff0(3): mov %r8,%rsi
6ff3(3): mov %r8,%rbx
6ff6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6ff8(3): setnbe %dl
6ffb(3): sbb $0x0,%dl
6ffe(2): test %dl,%dl
7000(2): jnz 0xd(%rip)
7002(4): lea 0x4(%rax),%rbx
7006(7): mov %rbx,0x20a0b3(%rip)
700d(7): mov %rbx,0x20a3ec(%rip)
7014(7): mov %rbx,0x20a0bd(%rip)
701b(1): pop %rbx
701c(1): ret near (%rsp)
701d(7): mov 0x20a0dc(%rip),%rcx
7024(7): lea 0x71dd(%rip),%rdi
702b(5): mov $0x37,%edx
7030(5): mov $0x1,%esi
7035(5): call 0xffffadeb(%rip)
703a(5): call 0xffffaa36(%rip)

"gettext_quote.part.1" :
7040(1): push %rbp
7041(1): push %rbx
7042(3): mov %rdi,%rbp
7045(2): mov %esi,%ebx
7047(4): sub $0x8,%rsp
704b(5): call 0x34c5(%rip)
7050(3): movzx (%rax),%edx
7053(3): and $0xdf,%edx
7056(3): cmp $0x55,%dl
7059(2): jz 0x77(%rip)
705b(3): cmp $0x47,%dl
705e(2): jz 0x22(%rip)
7060(7): lea 0x71f4(%rip),%rax
7067(7): lea 0x71ef(%rip),%rdx
706e(3): cmp $0x9,%ebx
7071(4): cmovne %rdx,%rax
7075(4): add $0x8,%rsp
7079(1): pop %rbx
707a(1): pop %rbp
707b(1): ret near (%rsp)
707c(4): nop 0x0(%rax)
7080(4): movzx 0x1(%rax),%edx
7084(3): and $0xdf,%edx
7087(3): cmp $0x42,%dl
708a(2): jnz 0xffffffd6(%rip)
708c(4): cmp $0x31,0x2(%rax)
7090(2): jnz 0xffffffd0(%rip)
7092(4): cmp $0x38,0x3(%rax)
7096(2): jnz 0xffffffca(%rip)
7098(4): cmp $0x30,0x4(%rax)
709c(2): jnz 0xffffffc4(%rip)
709e(4): cmp $0x33,0x5(%rax)
70a2(2): jnz 0xffffffbe(%rip)
70a4(4): cmp $0x30,0x6(%rax)
70a8(2): jnz 0xffffffb8(%rip)
70aa(4): cmp $0x0,0x7(%rax)
70ae(2): jnz 0xffffffb2(%rip)
70b0(4): cmp $0x60,0x0(%rbp)
70b4(7): lea 0x7199(%rip),%rax
70bb(7): lea 0x7196(%rip),%rdx
70c2(4): cmovne %rdx,%rax
70c6(4): add $0x8,%rsp
70ca(1): pop %rbx
70cb(1): pop %rbp
70cc(1): ret near (%rsp)
70cd(3): nop (%rax)
70d0(4): movzx 0x1(%rax),%edx
70d4(3): and $0xdf,%edx
70d7(3): cmp $0x54,%dl
70da(2): jnz 0xffffff86(%rip)
70dc(4): movzx 0x2(%rax),%edx
70e0(3): and $0xdf,%edx
70e3(3): cmp $0x46,%dl
70e6(6): jnz 0xffffff7a(%rip)
70ec(4): cmp $0x2d,0x3(%rax)
70f0(6): jnz 0xffffff70(%rip)
70f6(4): cmp $0x38,0x4(%rax)
70fa(6): jnz 0xffffff66(%rip)
7100(4): cmp $0x0,0x5(%rax)
7104(6): jnz 0xffffff5c(%rip)
710a(4): cmp $0x60,0x0(%rbp)
710e(7): lea 0x7137(%rip),%rax
7115(7): lea 0x7134(%rip),%rdx
711c(4): cmovne %rdx,%rax
7120(4): add $0x8,%rsp
7124(1): pop %rbx
7125(1): pop %rbp
7126(1): ret near (%rsp)

"quotearg_buffer_restyled" :
7130(2): push %r15
7132(2): push %r14
7134(3): mov %r8d,%r15d
7137(2): push %r13
7139(2): push %r12
713b(3): mov %rdi,%r14
713e(1): push %rbp
713f(1): push %rbx
7140(3): mov %r9d,%ebx
7143(3): mov %rsi,%r13
7146(3): mov %rcx,%rbp
7149(3): and $0x2,%ebx
714c(7): sub $0xb8,%rsp
7153(8): mov 0xf0(%rsp),%rax
715b(5): mov %rdx,0x10(%rsp)
7160(5): mov %r8d,0x8(%rsp)
7165(5): mov %r9d,0x78(%rsp)
716a(5): mov %rax,0x20(%rsp)
716f(8): mov 0xf8(%rsp),%rax
7177(5): mov %rax,0x68(%rsp)
717c(8): mov 0x100(%rsp),%rax
7184(5): mov %rax,0x60(%rsp)
7189(9): mov $0x28,%rax
7192(8): mov %rax,0xa8(%rsp)
719a(2): xor %eax,%eax
719c(5): call 0xffffa9d4(%rip)
71a1(4): cmp $0xa,%r15d
71a5(5): mov %rax,0x58(%rsp)
71aa(6): jnbe 0x11b5(%rip)
71b0(7): lea 0x7109(%rip),%rcx
71b7(3): mov %r15d,%edx
71ba(4): movsxd 0x0(%rcx,%rdx,4),%rax
71be(3): add %rcx,%rax
71c1(2): jmp %rax
71c3(5): mov $0x1,0xe(%rsp)
71c8(5): mov $0x0,0x7c(%rsp)
71cd(3): xor %r12d,%r12d
71d0(9): mov $0x0,0x50(%rsp)
71d9(5): mov $0x1,0xf(%rsp)
71de(5): mov $0x0,0xd(%rsp)
71e3(7): lea 0x7073(%rip),%rax
71ea(9): mov $0x1,0x18(%rsp)
71f3(3): xor %r15d,%r15d
71f6(8): mov $0x2,0x8(%rsp)
71fe(5): mov %rax,0x48(%rsp)
7203(3): xor %r11d,%r11d
7206(3): mov %rbp,%rax
7209(3): mov %r12d,%r8d
720c(3): mov %r11,%rbp
720f(3): mov %rax,%r11
7212(6): nop 0x0(%rax,%rax,1)
7218(3): cmp %rbp,%r11
721b(4): setnz %r12b
721f(4): cmp $0xffffffff,%r11
7223(2): jnz 0xf(%rip)
7225(5): mov 0x10(%rsp),%rax
722a(4): cmp $0x0,0x0(%rax,%rbp,1)
722e(4): setnz %r12b
7232(3): test %r12b,%r12b
7235(6): jz 0x65b(%rip)
723b(5): cmp $0x2,0x8(%rsp)
7240(5): mov 0x10(%rsp),%rdi
7245(4): lea 0x0(%rdi,%rbp,1),%r9
7249(3): setnz %al
724c(4): and 0xd(%rsp),%al
7250(3): mov %eax,%r10d
7253(6): jz 0xad(%rip)
7259(5): mov 0x18(%rsp),%rax
725e(3): test %rax,%rax
7261(6): jz 0x42f(%rip)
7267(4): cmp $0xffffffff,%r11
726b(5): lea 0x0(%rbp,%rax,1),%rbx
7270(2): jnz 0x30(%rip)
7272(4): cmp $0x1,%rax
7276(2): jbe 0x2a(%rip)
7278(5): mov %r8b,0x38(%rsp)
727d(5): mov %r10b,0x30(%rsp)
7282(5): mov %r9,0x28(%rsp)
7287(5): call 0xffffa8f9(%rip)
728c(6): movzx 0x38(%rsp),%r8d
7292(6): movzx 0x30(%rsp),%r10d
7298(3): mov %rax,%r11
729b(5): mov 0x28(%rsp),%r9
72a0(3): cmp %r11,%rbx
72a3(5): mov %r10b,0x28(%rsp)
72a8(6): jnbe 0x5b8(%rip)
72ae(5): mov 0x18(%rsp),%rdx
72b3(5): mov 0x48(%rsp),%rsi
72b8(3): mov %r9,%rdi
72bb(5): mov %r11,0x40(%rsp)
72c0(5): mov %r8b,0x38(%rsp)
72c5(5): mov %r9,0x30(%rsp)
72ca(5): call 0xffffa9c6(%rip)
72cf(2): test %eax,%eax
72d1(5): mov 0x30(%rsp),%r9
72d6(6): movzx 0x38(%rsp),%r8d
72dc(5): mov 0x40(%rsp),%r11
72e1(6): jnz 0x57f(%rip)
72e7(5): cmp $0x0,0xf(%rsp)
72ec(6): movzx 0x28(%rsp),%r10d
72f2(6): jnz 0xf83(%rip)
72f8(8): nop 0x0(%rax,%rax,1)
7300(4): movzx (%r9),%ebx
7304(3): cmp $0x7e,%bl
7307(6): jnbe 0x321(%rip)
730d(7): lea 0x6fd8(%rip),%rcx
7314(3): movzx %bl,%edx
7317(4): movsxd 0x0(%rcx,%rdx,4),%rax
731b(3): add %rcx,%rax
731e(2): jmp %rax
7320(3): xor %r10d,%r10d
7323(4): cmp $0x1,%r11
7327(3): setnz %al
732a(4): cmp $0xffffffff,%r11
732e(2): jnz 0xe(%rip)
7330(5): mov 0x10(%rsp),%rax
7335(4): cmp $0x0,0x1(%rax)
7339(3): setnz %al
733c(5): cmp $0x2,0x8(%rsp)
7341(3): setz %dl
7344(2): test %al,%al
7346(6): jz 0x252(%rip)
734c(3): xor %r12d,%r12d
734f(2): xor %eax,%eax
7351(7): nop 0x0(%rax)
7358(5): cmp $0x1,0xd(%rsp)
735d(6): jnz 0x115(%rip)
7363(2): test %dl,%dl
7365(6): jnz 0x10d(%rip)
736b(5): mov 0x20(%rsp),%rsi
7370(3): test %rsi,%rsi
7373(2): jz 0x16(%rip)
7375(2): mov %ebx,%edx
7377(3): shr $0x5,%dl
737a(3): movzx %dl,%edx
737d(3): mov 0x0(%rsi,%rdx,4),%edx
7380(3): bt %ebx,%edx
7383(6): jb 0x150(%rip)
7389(3): test %r10b,%r10b
738c(6): jnz 0x147(%rip)
7392(3): xor $0x1,%eax
7395(4): add $0x1,%rbp
7399(3): and %r8d,%eax
739c(2): test %al,%al
739e(2): jz 0x22(%rip)
73a0(3): cmp %r15,%r13
73a3(2): jbe 0x7(%rip)
73a5(5): mov $0x27,0x0(%r14,%r15,1)
73aa(4): lea 0x1(%r15),%rax
73ae(3): cmp %rax,%r13
73b1(2): jbe 0x8(%rip)
73b3(6): mov $0x27,0x1(%r14,%r15,1)
73b9(4): add $0x2,%r15
73bd(3): xor %r8d,%r8d
73c0(3): cmp %r13,%r15
73c3(2): jnb 0x6(%rip)
73c5(4): mov %bl,0x0(%r14,%r15,1)
73c9(5): movzx 0xe(%rsp),%edi
73ce(4): add $0x1,%r15
73d2(5): mov $0x0,%eax
73d7(3): test %r12b,%r12b
73da(3): cmove %eax,%edi
73dd(5): mov %dil,0xe(%rsp)
73e2(5): jmp 0xfffffe36(%rip)
73e7(9): nop 0x0(%rax,%rax,1)
73f0(3): xor %r10d,%r10d
73f3(4): mov 0x8(%rsp),%eax
73f7(3): cmp $0x2,%eax
73fa(6): jz 0x5be(%rip)
7400(3): cmp $0x5,%eax
7403(6): jz 0x575(%rip)
7409(3): cmp $0x2,%eax
740c(5): mov $0x3f,%ebx
7411(3): setz %dl
7414(3): xor %r12d,%r12d
7417(2): xor %eax,%eax
7419(5): jmp 0xffffff3f(%rip)
741e(2): nop 
7420(3): xor %r10d,%r10d
7423(5): cmp $0x2,0x8(%rsp)
7428(6): jz 0x508(%rip)
742e(5): mov %r12b,0x7c(%rsp)
7433(2): xor %edx,%edx
7435(2): xor %eax,%eax
7437(5): mov $0x27,%ebx
743c(5): jmp 0xffffff1c(%rip)
7441(7): nop 0x0(%rax)
7448(5): mov $0x9,%edx
744d(5): mov $0x74,%ebx
7452(5): cmp $0x2,0x8(%rsp)
7457(3): setz %al
745a(4): and 0xf(%rsp),%al
745e(6): jnz 0x150(%rip)
7464(5): cmp $0x0,0xd(%rsp)
7469(2): jnz 0x67(%rip)
746b(2): mov %edx,%ebx
746d(3): xor %r12d,%r12d
7470(2): xor %eax,%eax
7472(5): cmp $0x0,0xf(%rsp)
7477(6): jnz 0xfffffef4(%rip)
747d(5): jmp 0xffffff0c(%rip)
7482(6): nop 0x0(%rax,%rax,1)
7488(5): mov $0x8,%edx
748d(5): mov $0x62,%ebx
7492(2): jmp 0xffffffd2(%rip)
7494(4): nop 0x0(%rax)
7498(5): cmp $0x2,0x8(%rsp)
749d(6): jz 0x3d3(%rip)
74a3(5): cmp $0x0,0xd(%rsp)
74a8(6): jz 0x218(%rip)
74ae(5): cmp $0x0,0xf(%rsp)
74b3(6): jz 0x20d(%rip)
74b9(6): cmp $0x0,0x18(%rsp)
74bf(6): jnz 0x3bc(%rip)
74c5(5): mov $0x5c,%ebx
74ca(6): nop 0x0(%rax,%rax,1)
74d0(3): xor %r12d,%r12d
74d3(5): cmp $0x2,0x8(%rsp)
74d8(3): setz %dl
74db(5): cmp $0x0,0xf(%rsp)
74e0(2): mov %edx,%eax
74e2(6): jnz 0x856(%rip)
74e8(3): mov %r8d,%eax
74eb(3): xor $0x1,%eax
74ee(2): and %dl,%al
74f0(2): jz 0x31(%rip)
74f2(3): cmp %r15,%r13
74f5(2): jbe 0x7(%rip)
74f7(5): mov $0x27,0x0(%r14,%r15,1)
74fc(4): lea 0x1(%r15),%rdx
7500(3): cmp %rdx,%r13
7503(2): jbe 0x8(%rip)
7505(6): mov $0x24,0x1(%r14,%r15,1)
750b(4): lea 0x2(%r15),%rdx
750f(3): cmp %rdx,%r13
7512(2): jbe 0x8(%rip)
7514(6): mov $0x27,0x2(%r14,%r15,1)
751a(4): add $0x3,%r15
751e(3): mov %eax,%r8d
7521(3): cmp %r15,%r13
7524(2): jbe 0x7(%rip)
7526(5): mov $0x5c,0x0(%r14,%r15,1)
752b(4): add $0x1,%r15
752f(4): add $0x1,%rbp
7533(5): jmp 0xfffffe8d(%rip)
7538(8): nop 0x0(%rax,%rax,1)
7540(5): cmp $0x0,0xd(%rsp)
7545(6): jnz 0x1ce(%rip)
754b(2): xor %edx,%edx
754d(5): test $0x1,0x78(%rsp)
7552(6): jz 0xffffff19(%rip)
7558(4): add $0x1,%rbp
755c(5): jmp 0xfffffcbc(%rip)
7561(7): nop 0x0(%rax)
7568(5): cmp $0x2,0x8(%rsp)
756d(3): setz %dl
7570(2): xor %eax,%eax
7572(5): jmp 0xfffffde6(%rip)
7577(9): nop 0x0(%rax,%rax,1)
7580(5): mov $0x7,%edx
7585(5): mov $0x61,%ebx
758a(5): jmp 0xfffffeda(%rip)
758f(1): nop 
7590(5): cmp $0x2,0x8(%rsp)
7595(3): setz %dl
7598(3): test %rbp,%rbp
759b(6): jnz 0xfffffdb1(%rip)
75a1(5): movzx 0xf(%rsp),%eax
75a6(2): and %dl,%al
75a8(6): jz 0xfffffdb0(%rip)
75ae(3): mov %r11,%rbp
75b1(8): mov $0x2,0x8(%rsp)
75b9(5): jmp 0x700(%rip)
75be(2): nop 
75c0(5): cmp $0x2,0x8(%rsp)
75c5(3): setz %dl
75c8(3): xor %r12d,%r12d
75cb(2): jmp 0xffffffd6(%rip)
75cd(3): nop (%rax)
75d0(5): cmp $0x2,0x8(%rsp)
75d5(5): mov $0x20,%ebx
75da(3): setz %dl
75dd(2): jmp 0xffffffc4(%rip)
75df(1): nop 
75e0(5): mov $0xd,%edx
75e5(5): mov $0x72,%ebx
75ea(5): jmp 0xfffffe68(%rip)
75ef(1): nop 
75f0(5): mov $0xc,%edx
75f5(5): mov $0x66,%ebx
75fa(5): jmp 0xfffffe6a(%rip)
75ff(1): nop 
7600(5): mov $0xb,%edx
7605(5): mov $0x76,%ebx
760a(5): jmp 0xfffffe5a(%rip)
760f(1): nop 
7610(5): mov $0xa,%edx
7615(5): mov $0x6e,%ebx
761a(5): jmp 0xfffffe38(%rip)
761f(1): nop 
7620(3): xor %r10d,%r10d
7623(5): nop 0x0(%rax,%rax,1)
7628(6): cmp $0x1,0x58(%rsp)
762e(6): jnz 0x3aa(%rip)
7634(5): mov %r11,0x38(%rsp)
7639(5): mov %r8b,0x30(%rsp)
763e(5): mov %r10b,0x28(%rsp)
7643(5): call 0xffffa83d(%rip)
7648(3): mov (%rax),%rcx
764b(3): movzx %bl,%edx
764e(6): movzx 0x28(%rsp),%r10d
7654(6): movzx 0x30(%rsp),%r8d
765a(5): mov 0x38(%rsp),%r11
765f(5): mov $0x1,%edi
7664(4): movzx 0x0(%rcx,%rdx,2),%eax
7668(4): and $0x4000,%ax
766c(4): setnz %r12b
7670(3): setz %al
7673(4): and 0xd(%rsp),%al
7677(2): test %al,%al
7679(6): jnz 0x998(%rip)
767f(5): cmp $0x2,0x8(%rsp)
7684(3): setz %dl
7687(5): jmp 0xfffffcd1(%rip)
768c(4): nop 0x0(%rax)
7690(4): movzx (%r9),%ebx
7694(3): cmp $0x7e,%bl
7697(2): jnbe 0xffffff89(%rip)
7699(7): lea 0x6e48(%rip),%rcx
76a0(3): movzx %bl,%edx
76a3(4): movsxd 0x0(%rcx,%rdx,4),%rax
76a7(3): add %rcx,%rax
76aa(2): jmp %rax
76ac(4): nop 0x0(%rax)
76b0(3): xor %r10d,%r10d
76b3(5): cmp $0x0,0xd(%rsp)
76b8(6): jnz 0xfffffdf6(%rip)
76be(2): nop 
76c0(5): mov $0x5c,%edx
76c5(5): mov $0x5c,%ebx
76ca(5): jmp 0xfffffd9a(%rip)
76cf(1): nop 
76d0(5): mov $0xc,%edx
76d5(3): xor %r10d,%r10d
76d8(5): mov $0x66,%ebx
76dd(5): jmp 0xfffffd87(%rip)
76e2(6): nop 0x0(%rax,%rax,1)
76e8(5): mov $0xa,%edx
76ed(3): xor %r10d,%r10d
76f0(5): mov $0x6e,%ebx
76f5(5): jmp 0xfffffd5d(%rip)
76fa(6): nop 0x0(%rax,%rax,1)
7700(5): mov $0x61,%ebx
7705(5): jmp 0xfffffdcb(%rip)
770a(6): nop 0x0(%rax,%rax,1)
7710(3): xor %r10d,%r10d
7713(5): cmp $0x2,0x8(%rsp)
7718(3): setz %dl
771b(5): cmp $0x0,0xf(%rsp)
7720(6): jnz 0xb9a(%rip)
7726(3): mov %r8d,%eax
7729(3): mov %r15,%rcx
772c(3): xor $0x1,%eax
772f(2): and %dl,%al
7731(2): jz 0x2f(%rip)
7733(3): cmp %r15,%r13
7736(2): jbe 0x7(%rip)
7738(5): mov $0x27,0x0(%r14,%r15,1)
773d(4): lea 0x1(%r15),%rcx
7741(3): cmp %rcx,%r13
7744(2): jbe 0x8(%rip)
7746(6): mov $0x24,0x1(%r14,%r15,1)
774c(4): lea 0x2(%r15),%rcx
7750(3): cmp %rcx,%r13
7753(6): jnbe 0x636(%rip)
7759(4): lea 0x3(%r15),%rcx
775d(3): mov %eax,%r8d
7760(3): cmp %rcx,%r13
7763(2): jbe 0x7(%rip)
7765(5): mov $0x5c,0x0(%r14,%rcx,1)
776a(5): cmp $0x2,0x8(%rsp)
776f(4): lea 0x1(%rcx),%r15
7773(6): jz 0x606(%rip)
7779(4): lea 0x1(%rbp),%rax
777d(3): cmp %r11,%rax
7780(2): jnb 0x1b(%rip)
7782(5): mov 0x10(%rsp),%rax
7787(5): movzx 0x1(%rax,%rbp,1),%eax
778c(4): mov %al,0x28(%rsp)
7790(3): sub $0x30,%eax
7793(2): cmp $0x9,%al
7795(6): jbe 0x834(%rip)
779b(3): mov %r12d,%eax
779e(5): mov $0x30,%ebx
77a3(3): xor %r12d,%r12d
77a6(5): jmp 0xfffffbb2(%rip)
77ab(5): nop 0x0(%rax,%rax,1)
77b0(5): cmp $0x2,0x8(%rsp)
77b5(3): mov %r10d,%r12d
77b8(3): setz %dl
77bb(3): xor %r10d,%r10d
77be(2): xor %eax,%eax
77c0(5): jmp 0xfffffb98(%rip)
77c5(3): nop (%rax)
77c8(5): cmp $0x2,0x8(%rsp)
77cd(3): setz %dl
77d0(3): xor %r10d,%r10d
77d3(5): jmp 0xfffffdc5(%rip)
77d8(8): nop 0x0(%rax,%rax,1)
77e0(5): cmp $0x2,0x8(%rsp)
77e5(3): setz %dl
77e8(3): xor %r10d,%r10d
77eb(3): xor %r12d,%r12d
77ee(5): jmp 0xfffffdb3(%rip)
77f3(5): nop 0x0(%rax,%rax,1)
77f8(5): cmp $0x2,0x8(%rsp)
77fd(3): mov %r10d,%r12d
7800(5): mov $0x20,%ebx
7805(3): setz %dl
7808(3): xor %r10d,%r10d
780b(5): jmp 0xfffffd96(%rip)
7810(5): mov $0xd,%edx
7815(3): xor %r10d,%r10d
7818(5): mov $0x72,%ebx
781d(5): jmp 0xfffffc35(%rip)
7822(6): nop 0x0(%rax,%rax,1)
7828(5): mov $0x76,%ebx
782d(5): jmp 0xfffffca3(%rip)
7832(6): nop 0x0(%rax,%rax,1)
7838(5): mov $0x9,%edx
783d(3): xor %r10d,%r10d
7840(5): mov $0x74,%ebx
7845(5): jmp 0xfffffc0d(%rip)
784a(6): nop 0x0(%rax,%rax,1)
7850(5): mov $0x62,%ebx
7855(5): jmp 0xfffffc7b(%rip)
785a(6): nop 0x0(%rax,%rax,1)
7860(3): xor %r10d,%r10d
7863(5): jmp 0xfffffa9d(%rip)
7868(8): nop 0x0(%rax,%rax,1)
7870(5): cmp $0x0,0xf(%rsp)
7875(6): jnz 0x96b(%rip)
787b(4): add $0x1,%rbp
787f(3): mov %r8d,%eax
7882(3): xor %r12d,%r12d
7885(5): mov $0x5c,%ebx
788a(5): jmp 0xfffffb12(%rip)
788f(1): nop 
7890(5): cmp $0x2,0x8(%rsp)
7895(5): movzx 0xf(%rsp),%ebx
789a(3): mov %r8d,%r12d
789d(3): mov %r11,%rbp
78a0(3): setz %dl
78a3(2): mov %ebx,%eax
78a5(3): test %r15,%r15
78a8(3): setz %cl
78ab(2): and %edx,%eax
78ad(2): and %cl,%al
78af(6): jnz 0xa67(%rip)
78b5(2): mov %ebx,%eax
78b7(3): xor $0x1,%eax
78ba(2): and %al,%dl
78bc(6): jz 0x970(%rip)
78c2(5): cmp $0x0,0x7c(%rsp)
78c7(6): jz 0x963(%rip)
78cd(5): cmp $0x0,0xe(%rsp)
78d2(6): jnz 0x9fb(%rip)
78d8(3): test %r13,%r13
78db(3): setz %al
78de(6): cmp $0x0,0x50(%rsp)
78e4(3): setnz %dl
78e7(2): and %dl,%al
78e9(6): jz 0xa23(%rip)
78ef(5): mov 0x50(%rsp),%r13
78f4(7): lea 0x6962(%rip),%rbx
78fb(4): mov $0x27,(%r14)
78ff(8): mov $0x2,0x8(%rsp)
7907(6): mov $0x1,%r15d
790d(9): mov $0x1,0x18(%rsp)
7916(5): mov $0x0,0xf(%rsp)
791b(5): mov %rbx,0x48(%rsp)
7920(4): mov %al,0x7c(%rsp)
7924(5): jmp 0xfffff8df(%rip)
7929(7): nop 0x0(%rax)
7930(5): cmp $0x0,0xf(%rsp)
7935(6): jnz 0x8ab(%rip)
793b(3): test %r13,%r13
793e(6): jz 0x402(%rip)
7944(2): xor %edx,%edx
7946(6): cmp $0x0,0x50(%rsp)
794c(6): jnz 0x3f4(%rip)
7952(5): mov %r13,0x50(%rsp)
7957(4): add $0x3,%r15
795b(2): xor %eax,%eax
795d(5): mov %r12b,0x7c(%rsp)
7962(3): xor %r8d,%r8d
7965(3): mov %rdx,%r13
7968(5): mov $0x27,%ebx
796d(5): jmp 0xfffffa1c(%rip)
7972(6): nop 0x0(%rax,%rax,1)
7978(5): test $0x4,0x78(%rsp)
797d(2): jz 0x23(%rip)
797f(4): lea 0x2(%rbp),%rcx
7983(3): cmp %r11,%rcx
7986(2): jnb 0x1a(%rip)
7988(5): mov 0x10(%rsp),%rax
798d(5): cmp $0x3f,0x1(%rax,%rbp,1)
7992(6): jz 0x790(%rip)
7998(8): nop 0x0(%rax,%rax,1)
79a0(2): xor %edx,%edx
79a2(3): xor %r12d,%r12d
79a5(2): xor %eax,%eax
79a7(5): mov $0x3f,%ebx
79ac(5): jmp 0xfffff9ac(%rip)
79b1(7): nop 0x0(%rax)
79b8(5): cmp $0x0,0xf(%rsp)
79bd(6): jnz 0x823(%rip)
79c3(3): xor %r12d,%r12d
79c6(2): xor %eax,%eax
79c8(5): mov $0x3f,%ebx
79cd(5): jmp 0xfffff9bc(%rip)
79d2(6): nop 0x0(%rax,%rax,1)
79d8(8): lea 0xa0(%rsp),%rax
79e0(4): cmp $0xffffffff,%r11
79e4(c): mov $0x0,0xa0(%rsp)
79f0(5): mov %rax,0x28(%rsp)
79f5(2): jnz 0x2f(%rip)
79f7(5): mov 0x10(%rsp),%rdi
79fc(5): mov %r8b,0x40(%rsp)
7a01(5): mov %r10b,0x38(%rsp)
7a06(5): mov %r9,0x30(%rsp)
7a0b(5): call 0xffffa175(%rip)
7a10(6): movzx 0x40(%rsp),%r8d
7a16(6): movzx 0x38(%rsp),%r10d
7a1c(3): mov %rax,%r11
7a1f(5): mov 0x30(%rsp),%r9
7a24(8): lea 0x9c(%rsp),%rax
7a2c(2): xor %ecx,%ecx
7a2e(4): mov %bl,0x7e(%rsp)
7a32(5): mov %r8b,0x7d(%rsp)
7a37(3): mov %rcx,%rbx
7a3a(8): mov %r9,0x88(%rsp)
7a42(5): mov %rax,0x38(%rsp)
7a47(5): mov %r10b,0x7f(%rsp)
7a4c(8): mov %r15,0x80(%rsp)
7a54(5): mov %r14,0x40(%rsp)
7a59(5): mov %r13,0x70(%rsp)
7a5e(5): mov %r11,0x30(%rsp)
7a63(5): mov 0x10(%rsp),%rax
7a68(5): lea 0x0(%rbp,%rbx,1),%r14
7a6d(5): mov 0x30(%rsp),%rdx
7a72(5): mov 0x28(%rsp),%rcx
7a77(5): mov 0x38(%rsp),%rdi
7a7c(4): lea 0x0(%rax,%r14,1),%r13
7a80(3): sub %r14,%rdx
7a83(3): mov %r13,%rsi
7a86(5): call 0x258a(%rip)
7a8b(3): test %rax,%rax
7a8e(3): mov %rax,%r15
7a91(2): jz 0x50(%rip)
7a93(4): cmp $0xffffffff,%rax
7a97(6): jz 0x61e(%rip)
7a9d(4): cmp $0xfffffffe,%rax
7aa1(6): jz 0x5a0(%rip)
7aa7(5): cmp $0x2,0x8(%rsp)
7aac(3): setz %al
7aaf(4): and 0xf(%rsp),%al
7ab3(6): jnz 0x19d(%rip)
7ab9(7): mov 0x9c(%rsp),%edi
7ac0(5): call 0xffffa390(%rip)
7ac5(5): mov 0x28(%rsp),%rdi
7aca(2): test %eax,%eax
7acc(5): mov $0x0,%eax
7ad1(4): cmove %eax,%r12d
7ad5(3): add %r15,%rbx
7ad8(5): call 0xffffa368(%rip)
7add(2): test %eax,%eax
7adf(2): jz 0xffffff84(%rip)
7ae1(3): mov %r12d,%edx
7ae4(3): mov %rbx,%rdi
7ae7(6): movzx 0x7d(%rsp),%r8d
7aed(3): xor $0x1,%edx
7af0(5): movzx 0x7e(%rsp),%ebx
7af5(6): movzx 0x7f(%rsp),%r10d
7afb(4): and 0xd(%rsp),%dl
7aff(8): mov 0x80(%rsp),%r15
7b07(5): mov 0x40(%rsp),%r14
7b0c(5): mov 0x70(%rsp),%r13
7b11(5): mov 0x30(%rsp),%r11
7b16(4): cmp $0x1,%rdi
7b1a(6): jbe 0x601(%rip)
7b20(3): mov %rdi,%rcx
7b23(2): xor %esi,%esi
7b25(6): movzx 0xf(%rsp),%r9d
7b2b(3): add %rbp,%rcx
7b2e(5): mov 0x10(%rsp),%rdi
7b33(5): jmp 0xbb(%rip)
7b38(8): nop 0x0(%rax,%rax,1)
7b40(5): cmp $0x2,0x8(%rsp)
7b45(3): setz %al
7b48(3): test %r9b,%r9b
7b4b(6): jnz 0x4b5(%rip)
7b51(3): mov %r8d,%esi
7b54(3): xor $0x1,%esi
7b57(3): and %sil,%al
7b5a(2): jz 0x31(%rip)
7b5c(3): cmp %r15,%r13
7b5f(2): jbe 0x7(%rip)
7b61(5): mov $0x27,0x0(%r14,%r15,1)
7b66(4): lea 0x1(%r15),%rsi
7b6a(3): cmp %rsi,%r13
7b6d(2): jbe 0x8(%rip)
7b6f(6): mov $0x24,0x1(%r14,%r15,1)
7b75(4): lea 0x2(%r15),%rsi
7b79(3): cmp %rsi,%r13
7b7c(2): jbe 0x8(%rip)
7b7e(6): mov $0x27,0x2(%r14,%r15,1)
7b84(4): add $0x3,%r15
7b88(3): mov %eax,%r8d
7b8b(3): cmp %r15,%r13
7b8e(2): jbe 0x7(%rip)
7b90(5): mov $0x5c,0x0(%r14,%r15,1)
7b95(4): lea 0x1(%r15),%rax
7b99(3): cmp %rax,%r13
7b9c(2): jbe 0xf(%rip)
7b9e(2): mov %ebx,%eax
7ba0(3): shr $0x6,%al
7ba3(3): add $0x30,%eax
7ba6(5): mov %al,0x1(%r14,%r15,1)
7bab(4): lea 0x2(%r15),%rax
7baf(3): cmp %rax,%r13
7bb2(2): jbe 0x12(%rip)
7bb4(2): mov %ebx,%eax
7bb6(3): shr $0x3,%al
7bb9(3): and $0x7,%eax
7bbc(3): add $0x30,%eax
7bbf(5): mov %al,0x2(%r14,%r15,1)
7bc4(3): and $0x7,%ebx
7bc7(4): add $0x1,%rbp
7bcb(4): add $0x3,%r15
7bcf(3): add $0x30,%ebx
7bd2(3): cmp %rcx,%rbp
7bd5(6): jnb 0xfffff7eb(%rip)
7bdb(2): mov %edx,%esi
7bdd(3): cmp %r15,%r13
7be0(2): jbe 0x6(%rip)
7be2(4): mov %bl,0x0(%r14,%r15,1)
7be6(4): movzx 0x0(%rdi,%rbp,1),%ebx
7bea(4): add $0x1,%r15
7bee(2): test %dl,%dl
7bf0(6): jnz 0xffffff50(%rip)
7bf6(2): mov %esi,%eax
7bf8(3): xor $0x1,%eax
7bfb(3): and %r8d,%eax
7bfe(3): test %r10b,%r10b
7c01(2): jz 0x10(%rip)
7c03(3): cmp %r15,%r13
7c06(2): jbe 0x7(%rip)
7c08(5): mov $0x5c,0x0(%r14,%r15,1)
7c0d(4): add $0x1,%r15
7c11(4): add $0x1,%rbp
7c15(3): cmp %rcx,%rbp
7c18(6): jnb 0xfffff784(%rip)
7c1e(2): test %al,%al
7c20(6): jz 0x3fe(%rip)
7c26(3): cmp %r15,%r13
7c29(2): jbe 0x7(%rip)
7c2b(5): mov $0x27,0x0(%r14,%r15,1)
7c30(4): lea 0x1(%r15),%rax
7c34(3): cmp %rax,%r13
7c37(2): jbe 0x8(%rip)
7c39(6): mov $0x27,0x1(%r14,%r15,1)
7c3f(4): add $0x2,%r15
7c43(3): xor %r10d,%r10d
7c46(3): xor %r8d,%r8d
7c49(2): jmp 0xffffff94(%rip)
7c4b(5): nop 0x0(%rax,%rax,1)
7c50(4): cmp $0x1,%r15
7c54(6): jz 0xfffffe65(%rip)
7c5a(5): mov 0x10(%rsp),%rdi
7c5f(4): lea 0x0(%rdi,%r15,1),%rcx
7c63(5): lea 0x1(%rdi,%r14,1),%rdx
7c68(4): lea 0x0(%rcx,%r14,1),%r8
7c6c(2): jmp 0x11(%rip)
7c6e(2): nop 
7c70(4): add $0x1,%rdx
7c74(3): cmp %rdx,%r8
7c77(6): jz 0xfffffe42(%rip)
7c7d(3): movzx (%rdx),%ecx
7c80(3): sub $0x5b,%ecx
7c83(3): cmp $0x21,%cl
7c86(2): jnbe 0xffffffea(%rip)
7c88(5): mov $0x1,%esi
7c8d(3): shl/sal %cl,%rsi
7c90(3): mov %rsi,%rcx
7c93(a): mov $0x8589934635,%rsi
7c9d(3): test %rsi,%rcx
7ca0(2): jz 0xffffffd0(%rip)
7ca2(5): mov 0x40(%rsp),%r14
7ca7(5): mov 0x70(%rsp),%r13
7cac(5): mov 0x30(%rsp),%rbp
7cb1(8): mov $0x2,0x8(%rsp)
7cb9(5): cmp $0x0,0xd(%rsp)
7cbe(2): jz 0x12(%rip)
7cc0(2): test %al,%al
7cc2(5): mov $0x4,%eax
7cc7(5): cmove 0x8(%rsp),%eax
7ccc(4): mov %eax,0x8(%rsp)
7cd0(4): sub $0x8,%rsp
7cd4(3): mov %rbp,%rcx
7cd7(3): mov %r13,%rsi
7cda(4): push 0x68(%rsp)
7cde(4): push 0x78(%rsp)
7ce2(3): mov %r14,%rdi
7ce5(2): push $0x0
7ce7(8): mov 0x98(%rsp),%r9d
7cef(5): mov 0x28(%rsp),%r8d
7cf4(5): mov 0x30(%rsp),%rdx
7cf9(4): and $0xfd,%r9d
7cfd(5): call 0xfffff433(%rip)
7d02(4): add $0x20,%rsp
7d06(3): mov %rax,%r15
7d09(8): mov 0xa8(%rsp),%rbx
7d11(9): xor $0x28,%rbx
7d1a(3): mov %r15,%rax
7d1d(6): jnz 0x606(%rip)
7d23(7): add $0xb8,%rsp
7d2a(1): pop %rbx
7d2b(1): pop %rbp
7d2c(2): pop %r12
7d2e(2): pop %r13
7d30(2): pop %r14
7d32(2): pop %r15
7d34(1): ret near (%rsp)
7d35(3): nop (%rax)
7d38(3): mov %r11,%rbp
7d3b(5): jmp 0xffffff7e(%rip)
7d40(3): cmp %r15,%r13
7d43(2): jbe 0x7(%rip)
7d45(5): mov $0x27,0x0(%r14,%r15,1)
7d4a(4): lea 0x1(%r15),%rax
7d4e(3): cmp %rax,%r13
7d51(2): jbe 0x8(%rip)
7d53(6): mov $0x5c,0x1(%r14,%r15,1)
7d59(4): lea 0x2(%r15),%rax
7d5d(3): cmp %rax,%r13
7d60(6): jbe 0x5f2(%rip)
7d66(3): mov %r13,%rdx
7d69(6): mov $0x27,0x2(%r14,%r15,1)
7d6f(5): mov 0x50(%rsp),%r13
7d74(5): jmp 0xfffffbde(%rip)
7d79(3): mov %r12d,%eax
7d7c(5): mov $0x30,%ebx
7d81(3): xor %r12d,%r12d
7d84(5): jmp 0xfffff605(%rip)
7d89(6): mov $0x27,0x2(%r14,%r15,1)
7d8f(5): jmp 0xfffff9ca(%rip)
7d94(2): test %ebx,%ebx
7d96(6): jnz 0xfffff42d(%rip)
7d9c(5): mov $0x1,0xd(%rsp)
7da1(3): test %r13,%r13
7da4(6): jnz 0x596(%rip)
7daa(7): lea 0x64ac(%rip),%rax
7db1(9): mov $0x0,0x50(%rsp)
7dba(5): mov $0x1,0xe(%rsp)
7dbf(5): mov $0x0,0x7c(%rsp)
7dc4(3): xor %r12d,%r12d
7dc7(5): mov $0x0,0xf(%rsp)
7dcc(9): mov $0x1,0x18(%rsp)
7dd5(5): mov %rax,0x48(%rsp)
7dda(6): mov $0x1,%r15d
7de0(8): mov $0x2,0x8(%rsp)
7de8(5): jmp 0xfffff41b(%rip)
7ded(3): nop (%rax)
7df0(2): test %ebx,%ebx
7df2(6): jnz 0x3fb(%rip)
7df8(3): test %r13,%r13
7dfb(6): jz 0x22b(%rip)
7e01(4): mov $0x22,(%r14)
7e05(5): mov $0x1,0xe(%rsp)
7e0a(3): xor %r12d,%r12d
7e0d(5): mov $0x0,0x7c(%rsp)
7e12(9): mov $0x0,0x50(%rsp)
7e1b(7): lea 0x6439(%rip),%rax
7e22(5): mov $0x0,0xf(%rsp)
7e27(5): mov $0x1,0xd(%rsp)
7e2c(9): mov $0x1,0x18(%rsp)
7e35(6): mov $0x1,%r15d
7e3b(5): mov %rax,0x48(%rsp)
7e40(5): jmp 0xfffff3c3(%rip)
7e45(7): lea 0x640f(%rip),%rax
7e4c(5): mov $0x1,0xe(%rsp)
7e51(5): mov $0x0,0x7c(%rsp)
7e56(3): xor %r12d,%r12d
7e59(9): mov $0x0,0x50(%rsp)
7e62(5): mov $0x1,0xf(%rsp)
7e67(5): mov $0x1,0xd(%rsp)
7e6c(9): mov $0x1,0x18(%rsp)
7e75(3): xor %r15d,%r15d
7e78(5): mov %rax,0x48(%rsp)
7e7d(8): mov $0x5,0x8(%rsp)
7e85(5): jmp 0xfffff37e(%rip)
7e8a(5): mov $0x1,0xe(%rsp)
7e8f(5): mov $0x0,0x7c(%rsp)
7e94(3): xor %r12d,%r12d
7e97(9): mov $0x0,0x50(%rsp)
7ea0(5): mov $0x0,0xf(%rsp)
7ea5(3): xor %r15d,%r15d
7ea8(5): mov $0x1,0xd(%rsp)
7ead(9): mov $0x0,0x18(%rsp)
7eb6(9): mov $0x0,0x48(%rsp)
7ebf(5): jmp 0xfffff344(%rip)
7ec4(5): cmp $0xa,0x8(%rsp)
7ec9(2): jz 0x58(%rip)
7ecb(7): lea 0x638d(%rip),%rsi
7ed2(2): xor %edi,%edi
7ed4(5): mov $0x5,%edx
7ed9(5): call 0xffff9c87(%rip)
7ede(3): mov %rax,%rcx
7ee1(5): mov %rax,0x68(%rsp)
7ee6(7): lea 0x6372(%rip),%rax
7eed(3): cmp %rax,%rcx
7ef0(6): jz 0x39e(%rip)
7ef6(7): lea 0x6360(%rip),%rsi
7efd(2): xor %edi,%edi
7eff(5): mov $0x5,%edx
7f04(5): call 0xffff9c5c(%rip)
7f09(3): mov %rax,%rcx
7f0c(5): mov %rax,0x60(%rsp)
7f11(7): lea 0x6345(%rip),%rax
7f18(3): cmp %rax,%rcx
7f1b(6): jz 0x389(%rip)
7f21(3): xor %r15d,%r15d
7f24(2): test %ebx,%ebx
7f26(6): jz 0x1c7(%rip)
7f2c(2): test %ebx,%ebx
7f2e(5): mov 0x60(%rsp),%rbx
7f33(5): setnz 0xf(%rsp)
7f38(3): xor %r12d,%r12d
7f3b(3): mov %rbx,%rdi
7f3e(5): call 0xffff9c42(%rip)
7f43(5): mov %rbx,0x48(%rsp)
7f48(5): mov %rax,0x18(%rsp)
7f4d(5): mov $0x1,0xe(%rsp)
7f52(5): mov $0x0,0x7c(%rsp)
7f57(9): mov $0x0,0x50(%rsp)
7f60(5): mov $0x1,0xd(%rsp)
7f65(5): jmp 0xfffff29e(%rip)
7f6a(5): mov $0x1,0xe(%rsp)
7f6f(5): mov $0x0,0x7c(%rsp)
7f74(3): xor %r12d,%r12d
7f77(9): mov $0x0,0x50(%rsp)
7f80(5): mov $0x0,0xf(%rsp)
7f85(3): xor %r15d,%r15d
7f88(5): mov $0x0,0xd(%rsp)
7f8d(9): mov $0x0,0x18(%rsp)
7f96(9): mov $0x0,0x48(%rsp)
7f9f(5): jmp 0xfffff264(%rip)
7fa4(5): mov $0x1,0xe(%rsp)
7fa9(5): mov $0x0,0x7c(%rsp)
7fae(3): xor %r12d,%r12d
7fb1(9): mov $0x0,0x50(%rsp)
7fba(5): mov $0x1,0xf(%rsp)
7fbf(5): mov $0x1,0xd(%rsp)
7fc4(5): jmp 0xfffff21f(%rip)
7fc9(3): cmp %r15,%r13
7fcc(2): jbe 0x7(%rip)
7fce(5): mov $0x30,0x0(%r14,%r15,1)
7fd3(4): lea 0x2(%rcx),%rax
7fd7(3): cmp %rax,%r13
7fda(2): jbe 0x8(%rip)
7fdc(6): mov $0x30,0x2(%r14,%rcx,1)
7fe2(3): mov %r12d,%eax
7fe5(4): lea 0x3(%rcx),%r15
7fe9(3): xor %r12d,%r12d
7fec(5): mov $0x30,%ebx
7ff1(5): jmp 0xfffff367(%rip)
7ff6(a): nop 0x0(%rax,%rax,1)
8000(5): movzx 0xf(%rsp),%ebx
8005(3): mov %r11,%rbp
8008(4): mov %bl,0xd(%rsp)
800c(5): jmp 0xfffffcad(%rip)
8011(5): movzx 0xd(%rsp),%edx
8016(3): xor %r12d,%r12d
8019(5): jmp 0xfffffb07(%rip)
801e(3): xor %r10d,%r10d
8021(5): jmp 0xfffffbbc(%rip)
8026(9): mov $0x0,0x50(%rsp)
802f(5): mov $0x1,0xe(%rsp)
8034(3): xor %r12d,%r12d
8037(5): mov $0x0,0x7c(%rsp)
803c(5): jmp 0xfffffddf(%rip)
8041(5): mov 0x30(%rsp),%r11
8046(3): mov %r14,%rsi
8049(3): mov %r13,%rcx
804c(3): mov %rbx,%rax
804f(3): mov %rbx,%rdi
8052(6): movzx 0x7d(%rsp),%r8d
8058(5): movzx 0x7e(%rsp),%ebx
805d(8): mov 0x88(%rsp),%r9
8065(3): cmp %r11,%rsi
8068(6): movzx 0x7f(%rsp),%r10d
806e(8): mov 0x80(%rsp),%r15
8076(5): mov 0x40(%rsp),%r14
807b(5): mov 0x70(%rsp),%r13
8080(2): jnb 0x28(%rip)
8082(3): cmp $0x0,(%rcx)
8085(2): jnz 0x12(%rip)
8087(2): jmp 0x21(%rip)
8089(7): nop 0x0(%rax)
8090(5): cmp $0x0,0x0(%r9,%rax,1)
8095(2): jz 0x10(%rip)
8097(4): add $0x1,%rax
809b(5): lea 0x0(%rbp,%rax,1),%rdx
80a0(3): cmp %rdx,%r11
80a3(2): jnbe 0xffffffed(%rip)
80a5(3): mov %rax,%rdi
80a8(5): movzx 0xd(%rsp),%edx
80ad(3): xor %r12d,%r12d
80b0(5): jmp 0xfffffa66(%rip)
80b5(3): mov %rbx,%rdi
80b8(6): movzx 0x7d(%rsp),%r8d
80be(5): movzx 0x7e(%rsp),%ebx
80c3(6): movzx 0x7f(%rsp),%r10d
80c9(8): mov 0x80(%rsp),%r15
80d1(3): xor %r12d,%r12d
80d4(5): mov 0x40(%rsp),%r14
80d9(5): mov 0x70(%rsp),%r13
80de(5): mov 0x30(%rsp),%r11
80e3(5): movzx 0xd(%rsp),%edx
80e8(5): jmp 0xfffffa2e(%rip)
80ed(5): mov 0x68(%rsp),%rdx
80f2(3): movzx (%rdx),%eax
80f5(2): test %al,%al
80f7(6): jz 0xfffffe35(%rip)
80fd(3): nop (%rax)
8100(3): cmp %r15,%r13
8103(2): jbe 0x6(%rip)
8105(4): mov %al,0x0(%r14,%r15,1)
8109(4): add $0x1,%r15
810d(5): movzx 0x0(%rdx,%r15,1),%eax
8112(2): test %al,%al
8114(2): jnz 0xffffffec(%rip)
8116(5): jmp 0xfffffe16(%rip)
811b(2): mov %edx,%eax
811d(5): jmp 0xfffff55a(%rip)
8122(4): movzx 0x0(%rax,%rcx,1),%ebx
8126(3): cmp $0x3e,%bl
8129(6): jnbe 0xfffff877(%rip)
812f(a): mov $0x8070630310989004800,%rax
8139(4): bt %rbx,%rax
813d(6): jnb 0xfffff863(%rip)
8143(5): cmp $0x0,0xf(%rsp)
8148(6): jnz 0x1ea(%rip)
814e(3): cmp %r15,%r13
8151(2): jbe 0x7(%rip)
8153(5): mov $0x3f,0x0(%r14,%r15,1)
8158(4): lea 0x1(%r15),%rax
815c(3): cmp %rax,%r13
815f(2): jbe 0x8(%rip)
8161(6): mov $0x22,0x1(%r14,%r15,1)
8167(4): lea 0x2(%r15),%rax
816b(3): cmp %rax,%r13
816e(2): jbe 0x8(%rip)
8170(6): mov $0x22,0x2(%r14,%r15,1)
8176(4): lea 0x3(%r15),%rax
817a(3): cmp %rax,%r13
817d(2): jbe 0x8(%rip)
817f(6): mov $0x3f,0x3(%r14,%r15,1)
8185(4): add $0x4,%r15
8189(2): xor %edx,%edx
818b(3): xor %r12d,%r12d
818e(2): xor %eax,%eax
8190(3): mov %rcx,%rbp
8193(5): jmp 0xfffff1c5(%rip)
8198(2): test %ebx,%ebx
819a(6): jz 0x18e(%rip)
81a0(7): lea 0x60b6(%rip),%rax
81a7(5): mov $0x1,0xe(%rsp)
81ac(5): mov $0x0,0x7c(%rsp)
81b1(3): xor %r12d,%r12d
81b4(9): mov $0x0,0x50(%rsp)
81bd(5): mov $0x1,0xf(%rsp)
81c2(5): mov $0x0,0xd(%rsp)
81c7(9): mov $0x1,0x18(%rsp)
81d0(3): xor %r15d,%r15d
81d3(5): mov %rax,0x48(%rsp)
81d8(5): jmp 0xfffff02b(%rip)
81dd(3): nop (%rax)
81e0(3): mov %r11,%rbp
81e3(5): movzx 0xf(%rsp),%eax
81e8(5): jmp 0xfffffad1(%rip)
81ed(7): lea 0x6067(%rip),%rax
81f4(5): mov $0x1,0xe(%rsp)
81f9(5): mov $0x0,0x7c(%rsp)
81fe(3): xor %r12d,%r12d
8201(9): mov $0x0,0x50(%rsp)
820a(5): mov $0x1,0xf(%rsp)
820f(5): mov $0x1,0xd(%rsp)
8214(9): mov $0x1,0x18(%rsp)
821d(3): xor %r15d,%r15d
8220(5): mov %rax,0x48(%rsp)
8225(5): jmp 0xffffefde(%rip)
822a(2): mov %edx,%eax
822c(5): mov 0x48(%rsp),%rbx
8231(3): test %rbx,%rbx
8234(2): jz 0x2e(%rip)
8236(2): test %al,%al
8238(2): jz 0x2a(%rip)
823a(3): movzx (%rbx),%ecx
823d(3): mov %rbx,%rax
8240(2): test %cl,%cl
8242(2): jz 0x20(%rip)
8244(3): mov %r15,%rdx
8247(3): sub %r15,%rax
824a(3): cmp %rdx,%r13
824d(2): jbe 0x6(%rip)
824f(4): mov %cl,0x0(%r14,%rdx,1)
8253(4): add $0x1,%rdx
8257(4): movzx 0x0(%rax,%rdx,1),%ecx
825b(2): test %cl,%cl
825d(2): jnz 0xffffffed(%rip)
825f(3): mov %rdx,%r15
8262(3): cmp %r15,%r13
8265(6): jbe 0xfffffaa4(%rip)
826b(5): mov $0x0,0x0(%r14,%r15,1)
8270(5): jmp 0xfffffa99(%rip)
8275(5): cmp $0x2,0x8(%rsp)
827a(5): movzx 0xf(%rsp),%ebx
827f(3): mov %r11,%rbp
8282(3): setz %al
8285(4): mov %bl,0xd(%rsp)
8289(5): jmp 0xfffffa30(%rip)
828e(4): mov 0x8(%rsp),%esi
8292(3): mov %rcx,%rdi
8295(5): call 0xffffedab(%rip)
829a(5): mov %rax,0x68(%rsp)
829f(5): jmp 0xfffffc57(%rip)
82a4(4): mov 0x8(%rsp),%esi
82a8(3): mov %rcx,%rdi
82ab(5): call 0xffffed95(%rip)
82b0(5): mov %rax,0x60(%rsp)
82b5(5): jmp 0xfffffc6c(%rip)
82ba(5): movzx 0xf(%rsp),%ebx
82bf(3): mov %r11,%rbp
82c2(2): mov %edx,%eax
82c4(4): mov %bl,0xd(%rsp)
82c8(5): jmp 0xfffff9f1(%rip)
82cd(4): sub $0x8,%rsp
82d1(6): mov $0x5,%r8d
82d7(3): mov %r11,%rcx
82da(4): push 0x68(%rsp)
82de(4): push 0x78(%rsp)
82e2(3): mov %r14,%rdi
82e5(4): push 0x38(%rsp)
82e9(8): mov 0x98(%rsp),%r9d
82f1(5): mov 0x30(%rsp),%rdx
82f6(5): mov 0x70(%rsp),%rsi
82fb(5): call 0xffffee35(%rip)
8300(4): add $0x20,%rsp
8304(3): mov %rax,%r15
8307(5): jmp 0xfffffa02(%rip)
830c(5): movzx 0x7c(%rsp),%eax
8311(5): jmp 0xffffff1b(%rip)
8316(8): mov $0x2,0x8(%rsp)
831e(5): jmp 0xfffff99b(%rip)
8323(5): call 0xffff986d(%rip)
8328(5): mov $0x0,0xd(%rsp)
832d(5): jmp 0xfffffa74(%rip)
8332(3): mov %r11,%rbp
8335(5): jmp 0xfffff99b(%rip)
833a(5): mov $0x1,0xe(%rsp)
833f(2): xor %eax,%eax
8341(3): xor %r12d,%r12d
8344(9): mov $0x0,0x50(%rsp)
834d(5): jmp 0xfffff5a7(%rip)
8352(3): mov %r13,%rdx
8355(5): mov 0x50(%rsp),%r13
835a(5): jmp 0xfffff5f8(%rip)
835f(5): call 0xffff9711(%rip)

"quotearg_n_options" :
8370(2): push %r15
8372(2): push %r14
8374(3): movsxd %edi,%r15
8377(2): push %r13
8379(2): push %r12
837b(3): mov %rdx,%r14
837e(1): push %rbp
837f(1): push %rbx
8380(3): mov %rcx,%rbp
8383(4): sub $0x28,%rsp
8387(5): mov %rsi,0x8(%rsp)
838c(5): call 0xffff96f4(%rip)
8391(3): mov %rax,%r13
8394(2): mov (%rax),%eax
8396(3): test %r15d,%r15d
8399(7): mov 0x208ce0(%rip),%rbx
83a0(4): mov %eax,0x18(%rsp)
83a4(6): js 0x16d(%rip)
83aa(7): cmp %r15d,0x208cc7(%rip)
83b1(2): jnle 0x64(%rip)
83b3(7): cmp $0x7fffffff,%r15d
83ba(6): jz 0x15c(%rip)
83c0(4): lea 0x1(%r15),%r12d
83c4(7): lea 0x208cc5(%rip),%rax
83cb(3): movsxd %r12d,%rsi
83ce(4): shl/sal $0x4,%rsi
83d2(3): cmp %rax,%rbx
83d5(6): jz 0x11b(%rip)
83db(3): mov %rbx,%rdi
83de(5): call 0x1042(%rip)
83e3(3): mov %rax,%rbx
83e6(7): mov %rax,0x208c93(%rip)
83ed(7): movsxd 0x208c84(%rip),%rdi
83f4(3): mov %r12d,%edx
83f7(2): xor %esi,%esi
83f9(2): sub %edi,%edx
83fb(4): shl/sal $0x4,%rdi
83ff(3): movsxd %edx,%rdx
8402(3): add %rbx,%rdi
8405(4): shl/sal $0x4,%rdx
8409(5): call 0xffff9837(%rip)
840e(7): mov %r12d,0x208c63(%rip)
8415(3): mov 0x4(%rbp),%eax
8418(4): shl/sal $0x4,%r15
841c(4): sub $0x8,%rsp
8420(3): add %r15,%rbx
8423(4): lea 0x8(%rbp),%r15
8427(4): mov 0x0(%rbp),%r8d
842b(3): mov (%rbx),%r11
842e(4): mov 0x8(%rbx),%r12
8432(3): mov %r14,%rcx
8435(3): or $0x1,%eax
8438(4): mov %eax,0x24(%rsp)
843c(3): push 0x30(%rbp)
843f(3): mov %eax,%r9d
8442(3): push 0x28(%rbp)
8445(2): push %r15
8447(3): mov %r11,%rsi
844a(5): mov 0x28(%rsp),%rdx
844f(3): mov %r12,%rdi
8452(5): mov %r11,0x30(%rsp)
8457(5): call 0xffffecd9(%rip)
845c(4): add $0x20,%rsp
8460(5): mov 0x10(%rsp),%r11
8465(3): cmp %rax,%r11
8468(2): jnbe 0x69(%rip)
846a(4): lea 0x1(%rax),%rsi
846e(7): lea 0x208fab(%rip),%rax
8475(3): cmp %rax,%r12
8478(3): mov %rsi,(%rbx)
847b(2): jz 0x14(%rip)
847d(3): mov %r12,%rdi
8480(5): mov %rsi,0x10(%rsp)
8485(5): call 0xffff95db(%rip)
848a(5): mov 0x10(%rsp),%rsi
848f(3): mov %rsi,%rdi
8492(5): mov %rsi,0x10(%rsp)
8497(5): call 0xf29(%rip)
849c(4): sub $0x8,%rsp
84a0(4): mov %rax,0x8(%rbx)
84a4(4): mov 0x0(%rbp),%r8d
84a8(3): push 0x30(%rbp)
84ab(3): push 0x28(%rbp)
84ae(3): mov %r14,%rcx
84b1(2): push %r15
84b3(5): mov 0x3c(%rsp),%r9d
84b8(3): mov %rax,%rdi
84bb(5): mov 0x28(%rsp),%rdx
84c0(5): mov 0x30(%rsp),%rsi
84c5(3): mov %rax,%r12
84c8(5): call 0xffffec68(%rip)
84cd(4): add $0x20,%rsp
84d1(4): mov 0x18(%rsp),%eax
84d5(4): mov %eax,0x0(%r13)
84d9(4): add $0x28,%rsp
84dd(3): mov %r12,%rax
84e0(1): pop %rbx
84e1(1): pop %rbp
84e2(2): pop %r12
84e4(2): pop %r13
84e6(2): pop %r14
84e8(2): pop %r15
84ea(1): ret near (%rsp)
84eb(5): nop 0x0(%rax,%rax,1)
84f0(2): xor %edi,%edi
84f2(5): call 0xf2e(%rip)
84f7(8): movdqa 0x208b91(%rip),%xmm0
84ff(3): mov %rax,%rbx
8502(7): mov %rax,0x208b77(%rip)
8509(3): movups %xmm0,(%rax)
850c(5): jmp 0xfffffee1(%rip)
8511(5): call 0xffff955f(%rip)
8516(5): call 0x10fa(%rip)

"clone_quoting_options" :
8520(2): push %r12
8522(1): push %rbp
8523(1): push %rbx
8524(3): mov %rdi,%rbx
8527(5): call 0xffff9559(%rip)
852c(3): mov (%rax),%r12d
852f(3): mov %rax,%rbp
8532(7): lea 0x208fe7(%rip),%rax
8539(3): test %rbx,%rbx
853c(5): mov $0x38,%esi
8541(4): cmove %rax,%rbx
8545(3): mov %rbx,%rdi
8548(5): call 0x1078(%rip)
854d(4): mov %r12d,0x0(%rbp)
8551(1): pop %rbx
8552(1): pop %rbp
8553(2): pop %r12
8555(1): ret near (%rsp)

"get_quoting_style" :
8560(7): lea 0x208fb9(%rip),%rax
8567(3): test %rdi,%rdi
856a(4): cmove %rax,%rdi
856e(2): mov (%rdi),%eax
8570(1): ret near (%rsp)

"set_quoting_style" :
8580(7): lea 0x208f99(%rip),%rax
8587(3): test %rdi,%rdi
858a(4): cmove %rax,%rdi
858e(2): mov %esi,(%rdi)
8590(1): ret near (%rsp)

"set_char_quoting" :
85a0(7): lea 0x208f79(%rip),%rax
85a7(3): test %rdi,%rdi
85aa(2): mov %esi,%ecx
85ac(4): cmove %rax,%rdi
85b0(2): mov %esi,%eax
85b2(3): and $0x1f,%ecx
85b5(3): shr $0x5,%al
85b8(3): movzx %al,%eax
85bb(5): lea 0x8(%rdi,%rax,4),%rdi
85c0(2): mov (%rdi),%esi
85c2(2): mov %esi,%eax
85c4(2): shr %cl,%eax
85c6(2): xor %eax,%edx
85c8(3): and $0x1,%eax
85cb(3): and $0x1,%edx
85ce(2): shl/sal %cl,%edx
85d0(2): xor %esi,%edx
85d2(2): mov %edx,(%rdi)
85d4(1): ret near (%rsp)

"set_quoting_flags" :
85e0(7): lea 0x208f39(%rip),%rax
85e7(3): test %rdi,%rdi
85ea(4): cmove %rax,%rdi
85ee(3): mov 0x4(%rdi),%eax
85f1(3): mov %esi,0x4(%rdi)
85f4(1): ret near (%rsp)

"set_custom_quoting" :
8600(7): lea 0x208f19(%rip),%rax
8607(3): test %rdi,%rdi
860a(4): cmove %rax,%rdi
860e(3): test %rsi,%rsi
8611(6): mov $0xa,(%rdi)
8617(2): jz 0x10(%rip)
8619(3): test %rdx,%rdx
861c(2): jz 0xb(%rip)
861e(4): mov %rsi,0x28(%rdi)
8622(4): mov %rdx,0x30(%rdi)
8626(1): ret near (%rsp)
8627(4): sub $0x8,%rsp
862b(5): call 0xffff9445(%rip)

"quotearg_buffer" :
8630(2): push %r15
8632(2): push %r14
8634(7): lea 0x208ee5(%rip),%rax
863b(2): push %r13
863d(2): push %r12
863f(3): mov %rdi,%r13
8642(1): push %rbp
8643(1): push %rbx
8644(3): mov %r8,%rbx
8647(3): mov %rsi,%r14
864a(3): mov %rdx,%r15
864d(4): sub $0x18,%rsp
8651(3): test %r8,%r8
8654(4): cmove %rax,%rbx
8658(5): mov %rcx,0x8(%rsp)
865d(5): call 0xffff9423(%rip)
8662(3): mov (%rax),%r12d
8665(3): mov %rax,%rbp
8668(4): lea 0x8(%rbx),%rax
866c(4): sub $0x8,%rsp
8670(4): mov 0x4(%rbx),%r9d
8674(3): push 0x30(%rbx)
8677(3): mov (%rbx),%r8d
867a(3): push 0x28(%rbx)
867d(3): mov %r15,%rdx
8680(1): push %rax
8681(5): mov 0x28(%rsp),%rcx
8686(3): mov %r14,%rsi
8689(3): mov %r13,%rdi
868c(5): call 0xffffeaa4(%rip)
8691(4): mov %r12d,0x0(%rbp)
8695(4): add $0x38,%rsp
8699(1): pop %rbx
869a(1): pop %rbp
869b(2): pop %r12
869d(2): pop %r13
869f(2): pop %r14
86a1(2): pop %r15
86a3(1): ret near (%rsp)

"quotearg_alloc_mem" :
86b0(2): push %r15
86b2(2): push %r14
86b4(7): lea 0x208e65(%rip),%rax
86bb(2): push %r13
86bd(2): push %r12
86bf(3): mov %rdx,%r12
86c2(1): push %rbp
86c3(1): push %rbx
86c4(3): mov %rcx,%rbx
86c7(3): mov %rdi,%r14
86ca(3): mov %rsi,%r15
86cd(4): sub $0x38,%rsp
86d1(3): test %rcx,%rcx
86d4(4): cmove %rax,%rbx
86d8(2): xor %ebp,%ebp
86da(5): call 0xffff93a6(%rip)
86df(3): test %r12,%r12
86e2(3): mov %rax,%r13
86e5(2): mov (%rax),%eax
86e7(4): setz %bpl
86eb(3): or 0x4(%rbx),%ebp
86ee(4): lea 0x8(%rbx),%r10
86f2(4): sub $0x8,%rsp
86f6(3): mov (%rbx),%r8d
86f9(3): mov %r15,%rcx
86fc(4): mov %eax,0x14(%rsp)
8700(3): push 0x30(%rbx)
8703(3): mov %r14,%rdx
8706(3): push 0x28(%rbx)
8709(2): push %r10
870b(2): xor %esi,%esi
870d(3): mov %ebp,%r9d
8710(2): xor %edi,%edi
8712(5): mov %r10,0x40(%rsp)
8717(5): call 0xffffea19(%rip)
871c(4): lea 0x1(%rax),%rsi
8720(5): mov %rax,0x48(%rsp)
8725(4): add $0x20,%rsp
8729(3): mov %rsi,%rdi
872c(5): mov %rsi,0x18(%rsp)
8731(5): call 0xc8f(%rip)
8736(5): mov %rax,0x10(%rsp)
873b(4): sub $0x8,%rsp
873f(3): push 0x30(%rbx)
8742(3): push 0x28(%rbx)
8745(5): mov 0x38(%rsp),%r10
874a(3): mov %ebp,%r9d
874d(3): mov (%rbx),%r8d
8750(3): mov %r15,%rcx
8753(3): mov %r14,%rdx
8756(3): mov %rax,%rdi
8759(2): push %r10
875b(5): mov 0x38(%rsp),%rsi
8760(5): call 0xffffe9d0(%rip)
8765(4): mov 0x2c(%rsp),%eax
8769(4): add $0x20,%rsp
876d(3): test %r12,%r12
8770(4): mov %eax,0x0(%r13)
8774(2): jz 0xb(%rip)
8776(5): mov 0x28(%rsp),%r11
877b(4): mov %r11,(%r12)
877f(5): mov 0x10(%rsp),%rax
8784(4): add $0x38,%rsp
8788(1): pop %rbx
8789(1): pop %rbp
878a(2): pop %r12
878c(2): pop %r13
878e(2): pop %r14
8790(2): pop %r15
8792(1): ret near (%rsp)

"quotearg_alloc" :
87a0(3): mov %rdx,%rcx
87a3(2): xor %edx,%edx
87a5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
87b0(6): mov 0x2088c2(%rip),%eax
87b6(2): push %r12
87b8(7): mov 0x2088c1(%rip),%r12
87bf(1): push %rbp
87c0(1): push %rbx
87c1(3): cmp $0x1,%eax
87c4(2): jle 0x2d(%rip)
87c6(3): sub $0x2,%eax
87c9(5): lea 0x18(%r12),%rbx
87ce(4): shl/sal $0x4,%rax
87d2(5): lea 0x28(%r12,%rax,1),%rbp
87d7(9): nop 0x0(%rax,%rax,1)
87e0(3): mov (%rbx),%rdi
87e3(4): add $0x10,%rbx
87e7(5): call 0xffff9279(%rip)
87ec(3): cmp %rbp,%rbx
87ef(2): jnz 0xfffffff1(%rip)
87f1(5): mov 0x8(%r12),%rdi
87f6(7): lea 0x208c23(%rip),%rbx
87fd(3): cmp %rbx,%rdi
8800(2): jz 0x19(%rip)
8802(5): call 0xffff925e(%rip)
8807(b): mov $0x100,0x20887e(%rip)
8812(7): mov %rbx,0x20887f(%rip)
8819(7): lea 0x208870(%rip),%rbx
8820(3): cmp %rbx,%r12
8823(2): jz 0x11(%rip)
8825(3): mov %r12,%rdi
8828(5): call 0xffff9238(%rip)
882d(7): mov %rbx,0x20884c(%rip)
8834(1): pop %rbx
8835(a): mov $0x1,0x208839(%rip)
883f(1): pop %rbp
8840(2): pop %r12
8842(1): ret near (%rsp)

"quotearg_n" :
8850(7): lea 0x208cc9(%rip),%rcx
8857(7): mov $0xffffffff,%rdx
885e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
8870(7): lea 0x208ca9(%rip),%rcx
8877(5): jmp 0xfffffaf9(%rip)

"quotearg" :
8880(7): lea 0x208c99(%rip),%rcx
8887(3): mov %rdi,%rsi
888a(7): mov $0xffffffff,%rdx
8891(2): xor %edi,%edi
8893(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
88a0(7): lea 0x208c79(%rip),%rcx
88a7(3): mov %rsi,%rdx
88aa(3): mov %rdi,%rsi
88ad(2): xor %edi,%edi
88af(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
88c0(4): sub $0x48,%rsp
88c4(3): mov %rdx,%rax
88c7(9): mov $0x28,%rdx
88d0(5): mov %rdx,0x38(%rsp)
88d5(2): xor %edx,%edx
88d7(3): cmp $0xa,%esi
88da(2): jz 0x6a(%rip)
88dc(3): mov %esi,(%rsp)
88df(3): mov %rsp,%rcx
88e2(7): mov $0xffffffff,%rdx
88e9(3): mov %rax,%rsi
88ec(9): mov $0x0,0x4(%rsp)
88f5(9): mov $0x0,0xc(%rsp)
88fe(9): mov $0x0,0x14(%rsp)
8907(9): mov $0x0,0x1c(%rsp)
8910(9): mov $0x0,0x24(%rsp)
8919(9): mov $0x0,0x2c(%rsp)
8922(8): mov $0x0,0x34(%rsp)
892a(5): call 0xfffffa46(%rip)
892f(5): mov 0x38(%rsp),%rcx
8934(9): xor $0x28,%rcx
893d(2): jnz 0xc(%rip)
893f(4): add $0x48,%rsp
8943(1): ret near (%rsp)
8944(5): call 0xffff912c(%rip)
8949(5): call 0xffff9247(%rip)

"quotearg_n_style_mem" :
8950(4): sub $0x48,%rsp
8954(3): mov %rdx,%rax
8957(3): mov %rcx,%rdx
895a(9): mov $0x28,%rcx
8963(5): mov %rcx,0x38(%rsp)
8968(2): xor %ecx,%ecx
896a(3): cmp $0xa,%esi
896d(2): jz 0x63(%rip)
896f(3): mov %esi,(%rsp)
8972(3): mov %rsp,%rcx
8975(3): mov %rax,%rsi
8978(9): mov $0x0,0x4(%rsp)
8981(9): mov $0x0,0xc(%rsp)
898a(9): mov $0x0,0x14(%rsp)
8993(9): mov $0x0,0x1c(%rsp)
899c(9): mov $0x0,0x24(%rsp)
89a5(9): mov $0x0,0x2c(%rsp)
89ae(8): mov $0x0,0x34(%rsp)
89b6(5): call 0xfffff9ba(%rip)
89bb(5): mov 0x38(%rsp),%rdx
89c0(9): xor $0x28,%rdx
89c9(2): jnz 0xc(%rip)
89cb(4): add $0x48,%rsp
89cf(1): ret near (%rsp)
89d0(5): call 0xffff90a0(%rip)
89d5(5): call 0xffff91bb(%rip)

"quotearg_style" :
89e0(3): mov %rsi,%rdx
89e3(2): mov %edi,%esi
89e5(2): xor %edi,%edi
89e7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
89f0(3): mov %rdx,%rcx
89f3(3): mov %rsi,%rdx
89f6(2): mov %edi,%esi
89f8(2): xor %edi,%edi
89fa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
8a00(4): sub $0x48,%rsp
8a04(2): mov %edx,%ecx
8a06(9): mov $0x28,%rax
8a0f(5): mov %rax,0x38(%rsp)
8a14(2): xor %eax,%eax
8a16(7): mov 0x208b33(%rip),%rax
8a1d(3): mov %rsp,%r8
8a20(3): and $0x1f,%ecx
8a23(8): movdqa 0x208af5(%rip),%xmm0
8a2b(5): mov %rax,0x30(%rsp)
8a30(2): mov %edx,%eax
8a32(4): movaps %xmm0,(%rsp)
8a36(3): shr $0x5,%al
8a39(3): movzx %al,%eax
8a3c(5): lea 0x8(%r8,%rax,4),%r9
8a41(8): movdqa 0x208ae7(%rip),%xmm0
8a49(5): movaps %xmm0,0x10(%rsp)
8a4e(8): movdqa 0x208aea(%rip),%xmm0
8a56(5): movaps %xmm0,0x20(%rsp)
8a5b(3): mov (%r9),%edx
8a5e(2): mov %edx,%eax
8a60(2): shr %cl,%eax
8a62(2): not %eax
8a64(3): and $0x1,%eax
8a67(2): shl/sal %cl,%eax
8a69(3): mov %r8,%rcx
8a6c(2): xor %edx,%eax
8a6e(3): mov %rsi,%rdx
8a71(3): mov %rdi,%rsi
8a74(3): mov %eax,(%r9)
8a77(2): xor %edi,%edi
8a79(5): call 0xfffff8f7(%rip)
8a7e(5): mov 0x38(%rsp),%rsi
8a83(9): xor $0x28,%rsi
8a8c(2): jnz 0x7(%rip)
8a8e(4): add $0x48,%rsp
8a92(1): ret near (%rsp)
8a93(5): call 0xffff90fd(%rip)

"quotearg_char" :
8aa0(4): movsx %sil,%edx
8aa4(7): mov $0xffffffff,%rsi
8aab(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
8ab0(5): mov $0x3a,%edx
8ab5(7): mov $0xffffffff,%rsi
8abc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
8ad0(5): mov $0x3a,%edx
8ad5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
8ae0(4): sub $0x48,%rsp
8ae4(3): mov %rdx,%rax
8ae7(9): mov $0x28,%rdx
8af0(5): mov %rdx,0x38(%rsp)
8af5(2): xor %edx,%edx
8af7(3): cmp $0xa,%esi
8afa(2): jz 0x6a(%rip)
8afc(3): mov %esi,(%rsp)
8aff(3): mov %rsp,%rcx
8b02(7): mov $0xffffffff,%rdx
8b09(3): mov %rax,%rsi
8b0c(9): mov $0x0,0x4(%rsp)
8b15(9): mov $0x4000000,0xc(%rsp)
8b1e(9): mov $0x0,0x14(%rsp)
8b27(9): mov $0x0,0x1c(%rsp)
8b30(9): mov $0x0,0x24(%rsp)
8b39(9): mov $0x0,0x2c(%rsp)
8b42(8): mov $0x0,0x34(%rsp)
8b4a(5): call 0xfffff826(%rip)
8b4f(5): mov 0x38(%rsp),%rcx
8b54(9): xor $0x28,%rcx
8b5d(2): jnz 0xc(%rip)
8b5f(4): add $0x48,%rsp
8b63(1): ret near (%rsp)
8b64(5): call 0xffff8f0c(%rip)
8b69(5): call 0xffff9027(%rip)

"quotearg_n_custom_mem" :
8b70(4): sub $0x48,%rsp
8b74(3): mov %rcx,%r9
8b77(7): mov 0x2089d2(%rip),%rcx
8b7e(8): movdqa 0x20899a(%rip),%xmm0
8b86(9): mov $0x28,%rax
8b8f(5): mov %rax,0x38(%rsp)
8b94(2): xor %eax,%eax
8b96(4): movaps %xmm0,(%rsp)
8b9a(3): test %rsi,%rsi
8b9d(5): mov %rcx,0x30(%rsp)
8ba2(7): mov $0xa,(%rsp)
8ba9(8): movdqa 0x20897f(%rip),%xmm0
8bb1(5): movaps %xmm0,0x10(%rsp)
8bb6(8): movdqa 0x208982(%rip),%xmm0
8bbe(5): movaps %xmm0,0x20(%rsp)
8bc3(2): jz 0x34(%rip)
8bc5(3): test %rdx,%rdx
8bc8(2): jz 0x2f(%rip)
8bca(5): mov %rsi,0x28(%rsp)
8bcf(5): mov %rdx,0x30(%rsp)
8bd4(3): mov %rsp,%rcx
8bd7(3): mov %r8,%rdx
8bda(3): mov %r9,%rsi
8bdd(5): call 0xfffff793(%rip)
8be2(5): mov 0x38(%rsp),%rdi
8be7(9): xor $0x28,%rdi
8bf0(2): jnz 0xc(%rip)
8bf2(4): add $0x48,%rsp
8bf6(1): ret near (%rsp)
8bf7(5): call 0xffff8e79(%rip)
8bfc(5): call 0xffff8f94(%rip)

"quotearg_n_custom" :
8c10(7): mov $0xffffffff,%r8
8c17(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
8c20(3): mov %rdx,%rcx
8c23(7): mov $0xffffffff,%r8
8c2a(3): mov %rsi,%rdx
8c2d(3): mov %rdi,%rsi
8c30(2): xor %edi,%edi
8c32(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
8c40(3): mov %rcx,%r8
8c43(3): mov %rdx,%rcx
8c46(3): mov %rsi,%rdx
8c49(3): mov %rdi,%rsi
8c4c(2): xor %edi,%edi
8c4e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
8c60(7): lea 0x2083d9(%rip),%rcx
8c67(5): jmp 0xfffff709(%rip)

"quote_mem" :
8c70(7): lea 0x2083c9(%rip),%rcx
8c77(3): mov %rsi,%rdx
8c7a(3): mov %rdi,%rsi
8c7d(2): xor %edi,%edi
8c7f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
8c90(7): lea 0x2083a9(%rip),%rcx
8c97(7): mov $0xffffffff,%rdx
8c9e(5): jmp 0xfffff6d2(%rip)

"quote" :
8cb0(7): lea 0x208389(%rip),%rcx
8cb7(3): mov %rdi,%rsi
8cba(7): mov $0xffffffff,%rdx
8cc1(2): xor %edi,%edi
8cc3(5): jmp 0xfffff6ad(%rip)

"verror_at_line" :
8cd0(2): push %r14
8cd2(2): push %r13
8cd4(3): mov %esi,%r13d
8cd7(2): push %r12
8cd9(1): push %rbp
8cda(3): mov %edi,%r12d
8cdd(1): push %rbx
8cde(3): mov %r9,%rsi
8ce1(3): mov %r8,%rdi
8ce4(3): mov %rdx,%rbp
8ce7(3): mov %ecx,%r14d
8cea(5): call 0xed6(%rip)
8cef(3): test %rax,%rax
8cf2(2): jz 0x65(%rip)
8cf4(3): test %rbp,%rbp
8cf7(3): mov %rax,%rbx
8cfa(2): jz 0x36(%rip)
8cfc(7): lea 0x3969(%rip),%r8
8d03(3): mov %r12d,%edi
8d06(3): mov %rax,%r9
8d09(3): mov %r14d,%ecx
8d0c(3): mov %rbp,%rdx
8d0f(3): mov %r13d,%esi
8d12(2): xor %eax,%eax
8d14(5): call 0xffff8d8c(%rip)
8d19(3): mov %rbx,%rdi
8d1c(1): pop %rbx
8d1d(1): pop %rbp
8d1e(2): pop %r12
8d20(2): pop %r13
8d22(2): pop %r14
8d24(5): jmp 0xffff8d3c(%rip)
8d29(7): nop 0x0(%rax)
8d30(7): lea 0x3935(%rip),%rdx
8d37(3): mov %r12d,%edi
8d3a(3): mov %rax,%rcx
8d3d(3): mov %r13d,%esi
8d40(2): xor %eax,%eax
8d42(5): call 0xffff904e(%rip)
8d47(3): mov %rbx,%rdi
8d4a(1): pop %rbx
8d4b(1): pop %rbp
8d4c(2): pop %r12
8d4e(2): pop %r13
8d50(2): pop %r14
8d52(5): jmp 0xffff8d0e(%rip)
8d57(7): lea 0x59ca(%rip),%rsi
8d5e(5): mov $0x5,%edx
8d63(2): xor %edi,%edi
8d65(5): call 0xffff8dfb(%rip)
8d6a(3): mov %rax,%rbx
8d6d(5): call 0xffff8d13(%rip)
8d72(2): mov (%rax),%esi
8d74(3): mov %rbx,%rdx
8d77(2): xor %edi,%edi
8d79(2): xor %eax,%eax
8d7b(5): call 0xffff9015(%rip)
8d80(5): call 0xffff8cf0(%rip)

"verror" :
8d90(3): mov %rdx,%r8
8d93(3): mov %rcx,%r9
8d96(2): xor %edx,%edx
8d98(2): xor %ecx,%ecx
8d9a(5): jmp 0xffffff36(%rip)

"version_etc_arn" :
8da0(2): push %r15
8da2(2): push %r14
8da4(2): push %r13
8da6(2): push %r12
8da8(3): mov %r9,%r12
8dab(1): push %rbp
8dac(1): push %rbx
8dad(3): mov %rdi,%rbp
8db0(3): mov %r8,%rbx
8db3(4): sub $0x28,%rsp
8db7(3): test %rsi,%rsi
8dba(6): jz 0x11e(%rip)
8dc0(3): mov %rdx,%r8
8dc3(7): lea 0x597e(%rip),%rdx
8dca(3): mov %rcx,%r9
8dcd(2): xor %eax,%eax
8dcf(3): mov %rsi,%rcx
8dd2(5): mov $0x1,%esi
8dd7(5): call 0xffff9059(%rip)
8ddc(7): lea 0x5978(%rip),%rsi
8de3(2): xor %edi,%edi
8de5(5): mov $0x5,%edx
8dea(5): call 0xffff8d76(%rip)
8def(7): lea 0x5c8a(%rip),%rdx
8df6(3): mov %rax,%rcx
8df9(6): mov $0x7e3,%r8d
8dff(5): mov $0x1,%esi
8e04(3): mov %rbp,%rdi
8e07(2): xor %eax,%eax
8e09(5): call 0xffff9027(%rip)
8e0e(7): lea 0x59d3(%rip),%rsi
8e15(2): xor %edi,%edi
8e17(5): mov $0x5,%edx
8e1c(5): call 0xffff8d44(%rip)
8e21(3): mov %rbp,%rsi
8e24(3): mov %rax,%rdi
8e27(5): call 0xffff8e79(%rip)
8e2c(4): cmp $0x9,%r12
8e30(6): jnbe 0x340(%rip)
8e36(7): lea 0x5c07(%rip),%rdx
8e3d(4): movsxd 0x0(%rdx,%r12,4),%rax
8e41(3): add %rdx,%rax
8e44(2): jmp %rax
8e46(a): nop 0x0(%rax,%rax,1)
8e50(4): mov 0x38(%rbx),%r9
8e54(4): mov 0x10(%rbx),%rax
8e58(7): lea 0x5af9(%rip),%rsi
8e5f(4): mov 0x8(%rbx),%r8
8e63(5): mov $0x5,%edx
8e68(2): xor %edi,%edi
8e6a(4): mov 0x30(%rbx),%r13
8e6e(4): mov 0x28(%rbx),%r12
8e72(5): mov %r9,0x10(%rsp)
8e77(4): mov 0x20(%rbx),%r15
8e7b(4): mov 0x18(%rbx),%r14
8e7f(4): mov %rax,(%rsp)
8e83(5): mov %r8,0x8(%rsp)
8e88(3): mov (%rbx),%rbx
8e8b(5): call 0xffff8cd5(%rip)
8e90(4): sub $0x8,%rsp
8e94(5): mov 0x18(%rsp),%r9
8e99(3): mov %rax,%rdx
8e9c(3): mov %rbx,%rcx
8e9f(5): mov $0x1,%esi
8ea4(3): mov %rbp,%rdi
8ea7(2): xor %eax,%eax
8ea9(2): push %r9
8eab(2): push %r13
8ead(2): push %r12
8eaf(2): push %r15
8eb1(2): push %r14
8eb3(5): mov 0x30(%rsp),%r9
8eb8(5): mov 0x38(%rsp),%r8
8ebd(5): call 0xffff8f73(%rip)
8ec2(4): add $0x30,%rsp
8ec6(4): add $0x28,%rsp
8eca(1): pop %rbx
8ecb(1): pop %rbp
8ecc(2): pop %r12
8ece(2): pop %r13
8ed0(2): pop %r14
8ed2(2): pop %r15
8ed4(1): ret near (%rsp)
8ed5(3): nop (%rax)
8ed8(3): mov %rcx,%r8
8edb(3): mov %rdx,%rcx
8ede(7): lea 0x586f(%rip),%rdx
8ee5(5): mov $0x1,%esi
8eea(2): xor %eax,%eax
8eec(5): call 0xffff8f44(%rip)
8ef1(5): jmp 0xfffffeeb(%rip)
8ef6(a): nop 0x0(%rax,%rax,1)
8f00(4): mov 0x40(%rbx),%r10
8f04(4): mov 0x38(%rbx),%r9
8f08(7): lea 0x5a79(%rip),%rsi
8f0f(4): mov 0x10(%rbx),%rax
8f13(4): mov 0x8(%rbx),%r8
8f17(5): mov $0x5,%edx
8f1c(4): mov 0x30(%rbx),%r13
8f20(4): mov 0x28(%rbx),%r12
8f24(4): mov 0x20(%rbx),%r15
8f28(4): mov 0x18(%rbx),%r14
8f2c(3): mov (%rbx),%rbx
8f2f(5): mov %r10,0x18(%rsp)
8f34(5): mov %r9,0x10(%rsp)
8f39(4): mov %rax,(%rsp)
8f3d(5): mov %r8,0x8(%rsp)
8f42(2): xor %edi,%edi
8f44(5): call 0xffff8c1c(%rip)
8f49(5): mov 0x18(%rsp),%r10
8f4e(2): push %r10
8f50(5): jmp 0xffffff44(%rip)
8f55(3): nop (%rax)
8f58(3): mov (%rbx),%rbx
8f5b(7): lea 0x57fd(%rip),%rsi
8f62(5): mov $0x5,%edx
8f67(2): xor %edi,%edi
8f69(5): call 0xffff8bf7(%rip)
8f6e(4): add $0x28,%rsp
8f72(3): mov %rbx,%rcx
8f75(3): mov %rbp,%rdi
8f78(1): pop %rbx
8f79(1): pop %rbp
8f7a(2): pop %r12
8f7c(2): pop %r13
8f7e(2): pop %r14
8f80(2): pop %r15
8f82(3): mov %rax,%rdx
8f85(5): mov $0x1,%esi
8f8a(2): xor %eax,%eax
8f8c(5): jmp 0xffff8ea4(%rip)
8f91(7): nop 0x0(%rax)
8f98(4): mov 0x8(%rbx),%r12
8f9c(7): lea 0x57cc(%rip),%rsi
8fa3(3): mov (%rbx),%rbx
8fa6(5): mov $0x5,%edx
8fab(2): xor %edi,%edi
8fad(5): call 0xffff8bb3(%rip)
8fb2(4): add $0x28,%rsp
8fb6(3): mov %r12,%r8
8fb9(3): mov %rbx,%rcx
8fbc(3): mov %rbp,%rdi
8fbf(3): mov %rax,%rdx
8fc2(5): mov $0x1,%esi
8fc7(1): pop %rbx
8fc8(1): pop %rbp
8fc9(2): pop %r12
8fcb(2): pop %r13
8fcd(2): pop %r14
8fcf(2): pop %r15
8fd1(2): xor %eax,%eax
8fd3(5): jmp 0xffff8e5d(%rip)
8fd8(8): nop 0x0(%rax,%rax,1)
8fe0(4): mov 0x10(%rbx),%r13
8fe4(4): mov 0x8(%rbx),%r12
8fe8(7): lea 0x5797(%rip),%rsi
8fef(3): mov (%rbx),%rbx
8ff2(5): mov $0x5,%edx
8ff7(2): xor %edi,%edi
8ff9(5): call 0xffff8b67(%rip)
8ffe(4): add $0x28,%rsp
9002(3): mov %r13,%r9
9005(3): mov %r12,%r8
9008(3): mov %rbx,%rcx
900b(3): mov %rbp,%rdi
900e(3): mov %rax,%rdx
9011(1): pop %rbx
9012(1): pop %rbp
9013(2): pop %r12
9015(2): pop %r13
9017(2): pop %r14
9019(2): pop %r15
901b(5): mov $0x1,%esi
9020(2): xor %eax,%eax
9022(5): jmp 0xffff8e0e(%rip)
9027(9): nop 0x0(%rax,%rax,1)
9030(7): lea 0x5881(%rip),%rsi
9037(5): mov $0x5,%edx
903c(2): xor %edi,%edi
903e(4): mov 0x18(%rbx),%r14
9042(4): mov 0x10(%rbx),%r13
9046(4): mov 0x8(%rbx),%r12
904a(3): mov (%rbx),%rbx
904d(5): call 0xffff8b13(%rip)
9052(4): sub $0x8,%rsp
9056(2): push %r14
9058(3): mov %rax,%rdx
905b(3): mov %r13,%r9
905e(3): mov %r12,%r8
9061(3): mov %rbx,%rcx
9064(3): mov %rbp,%rdi
9067(5): mov $0x1,%esi
906c(2): xor %eax,%eax
906e(5): call 0xffff8dc2(%rip)
9073(1): pop %rax
9074(1): pop %rdx
9075(4): add $0x28,%rsp
9079(1): pop %rbx
907a(1): pop %rbp
907b(2): pop %r12
907d(2): pop %r13
907f(2): pop %r14
9081(2): pop %r15
9083(1): ret near (%rsp)
9084(4): nop 0x0(%rax)
9088(4): mov 0x20(%rbx),%r15
908c(7): lea 0x5845(%rip),%rsi
9093(5): mov $0x5,%edx
9098(2): xor %edi,%edi
909a(4): mov 0x18(%rbx),%r14
909e(4): mov 0x10(%rbx),%r13
90a2(4): mov 0x8(%rbx),%r12
90a6(3): mov (%rbx),%rbx
90a9(5): call 0xffff8ab7(%rip)
90ae(2): push %r15
90b0(2): jmp 0xffffffa6(%rip)
90b2(6): nop 0x0(%rax,%rax,1)
90b8(4): mov 0x8(%rbx),%r8
90bc(4): mov 0x28(%rbx),%r12
90c0(7): lea 0x5839(%rip),%rsi
90c7(4): mov 0x20(%rbx),%r15
90cb(4): mov 0x18(%rbx),%r14
90cf(5): mov $0x5,%edx
90d4(4): mov 0x10(%rbx),%r13
90d8(2): xor %edi,%edi
90da(3): mov (%rbx),%rbx
90dd(4): mov %r8,(%rsp)
90e1(5): call 0xffff8a7f(%rip)
90e6(4): sub $0x8,%rsp
90ea(3): mov %r13,%r9
90ed(2): push %r12
90ef(2): push %r15
90f1(2): push %r14
90f3(5): mov 0x20(%rsp),%r8
90f8(3): mov %rbx,%rcx
90fb(3): mov %rax,%rdx
90fe(3): mov %rbp,%rdi
9101(5): mov $0x1,%esi
9106(2): xor %eax,%eax
9108(5): call 0xffff8d28(%rip)
910d(4): add $0x20,%rsp
9111(4): add $0x28,%rsp
9115(1): pop %rbx
9116(1): pop %rbp
9117(2): pop %r12
9119(2): pop %r13
911b(2): pop %r14
911d(2): pop %r15
911f(1): ret near (%rsp)
9120(4): mov 0x10(%rbx),%r9
9124(4): mov 0x30(%rbx),%r13
9128(7): lea 0x57f9(%rip),%rsi
912f(4): mov 0x28(%rbx),%r12
9133(4): mov 0x20(%rbx),%r15
9137(5): mov $0x5,%edx
913c(4): mov 0x18(%rbx),%r14
9140(4): mov 0x8(%rbx),%r8
9144(2): xor %edi,%edi
9146(5): mov %r9,0x8(%rsp)
914b(3): mov (%rbx),%rbx
914e(4): mov %r8,(%rsp)
9152(5): call 0xffff8a0e(%rip)
9157(2): push %r13
9159(2): push %r12
915b(2): push %r15
915d(2): push %r14
915f(5): mov 0x28(%rsp),%r9
9164(2): jmp 0xffffff8f(%rip)
9166(a): nop 0x0(%rax,%rax,1)
9170(4): mov 0x40(%rbx),%r10
9174(4): mov 0x38(%rbx),%r9
9178(5): mov $0x5,%edx
917d(4): mov 0x10(%rbx),%rax
9181(4): mov 0x8(%rbx),%r8
9185(7): lea 0x5834(%rip),%rsi
918c(4): mov 0x30(%rbx),%r13
9190(4): mov 0x28(%rbx),%r12
9194(4): mov 0x20(%rbx),%r15
9198(4): mov 0x18(%rbx),%r14
919c(5): mov %r10,0x18(%rsp)
91a1(5): mov %r9,0x10(%rsp)
91a6(4): mov %rax,(%rsp)
91aa(5): mov %r8,0x8(%rsp)
91af(3): mov (%rbx),%rbx
91b2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
91c0(3): xor %r9d,%r9d
91c3(4): cmp $0x0,(%r8)
91c7(2): jz 0x14(%rip)
91c9(7): nop 0x0(%rax)
91d0(4): add $0x1,%r9
91d4(5): cmp $0x0,0x0(%r8,%r9,8)
91d9(2): jnz 0xfffffff7(%rip)
91db(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
91e0(4): sub $0x68,%rsp
91e4(3): mov %r8,%r10
91e7(3): xor %r9d,%r9d
91ea(9): mov $0x28,%rax
91f3(5): mov %rax,0x58(%rsp)
91f8(2): xor %eax,%eax
91fa(3): mov %rsp,%r8
91fd(3): nop (%rax)
9200(3): mov (%r10),%eax
9203(3): cmp $0x2f,%eax
9206(2): jnbe 0x44(%rip)
9208(3): mov %eax,%r11d
920b(4): add 0x10(%r10),%r11
920f(3): add $0x8,%eax
9212(3): mov %eax,(%r10)
9215(3): mov (%r11),%rax
9218(3): test %rax,%rax
921b(4): mov %rax,0x0(%r8,%r9,8)
921f(2): jz 0xc(%rip)
9221(4): add $0x1,%r9
9225(4): cmp $0xa,%r9
9229(2): jnz 0xffffffd7(%rip)
922b(5): call 0xfffffb75(%rip)
9230(5): mov 0x58(%rsp),%rax
9235(9): xor $0x28,%rax
923e(2): jnz 0x7(%rip)
9240(4): add $0x68,%rsp
9244(1): ret near (%rsp)
9245(5): call 0xffff894b(%rip)
924a(4): mov 0x8(%r10),%r11
924e(4): lea 0x8(%r11),%rax
9252(4): mov %rax,0x8(%r10)
9256(2): jmp 0xffffffbf(%rip)

"version_etc" :
9260(1): push %rbp
9261(1): push %rbx
9262(6): mov $0x20,%r10d
9268(3): xor %r11d,%r11d
926b(7): sub $0xb8,%rsp
9272(9): mov $0x28,%rax
927b(5): mov %rax,0x78(%rsp)
9280(2): xor %eax,%eax
9282(8): lea 0xd0(%rsp),%rax
928a(8): mov %r8,0xa0(%rsp)
9292(8): lea 0xd0(%rsp),%rbx
929a(5): lea 0x20(%rsp),%r8
929f(8): mov %r9,0xa8(%rsp)
92a7(8): mov $0x20,0x8(%rsp)
92af(5): mov %rax,0x10(%rsp)
92b4(8): lea 0x80(%rsp),%rax
92bc(3): xor %r9d,%r9d
92bf(5): mov %rax,0x18(%rsp)
92c4(3): mov %rax,%rbp
92c7(9): nop 0x0(%rax,%rax,1)
92d0(4): cmp $0x2f,%r10d
92d4(2): jnbe 0x58(%rip)
92d6(3): mov %r10d,%eax
92d9(6): mov $0x1,%r11d
92df(4): add $0x8,%r10d
92e3(3): add %rbp,%rax
92e6(3): mov (%rax),%rax
92e9(3): test %rax,%rax
92ec(4): mov %rax,0x0(%r8,%r9,8)
92f0(2): jz 0xc(%rip)
92f2(4): add $0x1,%r9
92f6(4): cmp $0xa,%r9
92fa(2): jnz 0xffffffd6(%rip)
92fc(3): test %r11b,%r11b
92ff(2): jnz 0x26(%rip)
9301(5): call 0xfffffa9f(%rip)
9306(5): mov 0x78(%rsp),%rax
930b(9): xor $0x28,%rax
9314(2): jnz 0xc(%rip)
9316(7): add $0xb8,%rsp
931d(1): pop %rbx
931e(1): pop %rbp
931f(1): ret near (%rsp)
9320(5): call 0xffff8870(%rip)
9325(5): mov %r10d,0x8(%rsp)
932a(2): jmp 0xffffffd7(%rip)
932c(3): mov %rbx,%rax
932f(4): add $0x8,%rbx
9333(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
9340(1): push %rbx
9341(7): lea 0x545a(%rip),%rsi
9348(5): mov $0x5,%edx
934d(2): xor %edi,%edi
934f(5): call 0xffff8811(%rip)
9354(7): lea 0x545c(%rip),%rdx
935b(3): mov %rax,%rsi
935e(5): mov $0x1,%edi
9363(2): xor %eax,%eax
9365(5): call 0xffff8a0b(%rip)
936a(7): lea 0x545c(%rip),%rsi
9371(5): mov $0x5,%edx
9376(2): xor %edi,%edi
9378(5): call 0xffff87e8(%rip)
937d(7): lea 0x455c(%rip),%rcx
9384(7): lea 0x33e7(%rip),%rdx
938b(3): mov %rax,%rsi
938e(5): mov $0x1,%edi
9393(2): xor %eax,%eax
9395(5): call 0xffff89db(%rip)
939a(7): mov 0x207d27(%rip),%rbx
93a1(7): lea 0x5658(%rip),%rsi
93a8(2): xor %edi,%edi
93aa(5): mov $0x5,%edx
93af(5): call 0xffff87b1(%rip)
93b4(3): mov %rbx,%rsi
93b7(3): mov %rax,%rdi
93ba(1): pop %rbx
93bb(5): jmp 0xffff88e5(%rip)

"xmalloc" :
93c0(1): push %rbx
93c1(3): mov %rdi,%rbx
93c4(5): call 0xffff893c(%rip)
93c9(3): test %rax,%rax
93cc(2): jnz 0x7(%rip)
93ce(3): test %rbx,%rbx
93d1(2): jnz 0x4(%rip)
93d3(1): pop %rbx
93d4(1): ret near (%rsp)
93d5(5): call 0x23b(%rip)

"xnmalloc" :
93e0(3): mov %rdi,%rax
93e3(3): mul %rax,%rsi,%rdx
93e6(3): mov %rax,%rdi
93e9(3): seto %al
93ec(3): test %rdi,%rdi
93ef(2): js 0xc(%rip)
93f1(3): movzx %al,%eax
93f4(3): test %rax,%rax
93f7(2): jnz 0x4(%rip)
93f9(2): jmp 0xffffffc7(%rip)
93fb(4): sub $0x8,%rsp
93ff(5): call 0x211(%rip)

"xrealloc" :
9420(3): test %rsi,%rsi
9423(1): push %rbx
9424(3): mov %rsi,%rbx
9427(2): jnz 0x7(%rip)
9429(3): test %rdi,%rdi
942c(2): jnz 0x1c(%rip)
942e(3): mov %rbx,%rsi
9431(5): call 0xffff891f(%rip)
9436(3): test %rax,%rax
9439(2): jnz 0x7(%rip)
943b(3): test %rbx,%rbx
943e(2): jnz 0x13(%rip)
9440(1): pop %rbx
9441(1): ret near (%rsp)
9442(6): nop 0x0(%rax,%rax,1)
9448(5): call 0xffff8618(%rip)
944d(2): xor %eax,%eax
944f(1): pop %rbx
9450(1): ret near (%rsp)
9451(5): call 0x1bf(%rip)

"xnrealloc" :
9460(3): mov %rsi,%rax
9463(3): mul %rax,%rdx,%rdx
9466(3): mov %rax,%rsi
9469(3): seto %al
946c(3): test %rsi,%rsi
946f(2): js 0xc(%rip)
9471(3): movzx %al,%eax
9474(3): test %rax,%rax
9477(2): jnz 0x4(%rip)
9479(2): jmp 0xffffffa7(%rip)
947b(4): sub $0x8,%rsp
947f(5): call 0x191(%rip)

"x2nrealloc" :
9490(3): test %rdi,%rdi
9493(3): mov %rdx,%r9
9496(3): mov (%rsi),%rcx
9499(2): jz 0x37(%rip)
949b(2): xor %edx,%edx
949d(a): mov $0x6148914691236517204,%rax
94a7(3): div %r9,%rax
94aa(3): cmp %rcx,%rax
94ad(2): jbe 0x3e(%rip)
94af(3): mov %rcx,%rax
94b2(3): shr $0x1,%rax
94b5(5): lea 0x1(%rax,%rcx,1),%rcx
94ba(3): mov %rcx,(%rsi)
94bd(4): imul %r9,%rcx
94c1(3): mov %rcx,%rsi
94c4(5): jmp 0xffffff5c(%rip)
94c9(7): nop 0x0(%rax)
94d0(3): test %rcx,%rcx
94d3(2): jz 0x25(%rip)
94d5(3): mov %rcx,%rax
94d8(3): mul %rax,%r9,%rdx
94db(3): seto %dl
94de(3): test %rax,%rax
94e1(3): movzx %dl,%edx
94e4(2): js 0x7(%rip)
94e6(3): test %rdx,%rdx
94e9(2): jz 0xffffffd1(%rip)
94eb(4): sub $0x8,%rsp
94ef(5): call 0x121(%rip)
94f4(4): nop 0x0(%rax)
94f8(2): xor %edx,%edx
94fa(5): mov $0x80,%eax
94ff(3): xor %r8d,%r8d
9502(3): div %r9,%rax
9505(3): test %rax,%rax
9508(4): setz %r8b
950c(4): lea 0x0(%r8,%rax,1),%rcx
9510(2): jmp 0xffffffc5(%rip)

"x2realloc" :
9520(3): test %rdi,%rdi
9523(3): mov (%rsi),%rax
9526(2): jz 0x2a(%rip)
9528(a): mov $0x6148914691236517203,%rdx
9532(3): cmp %rdx,%rax
9535(2): jnbe 0x2c(%rip)
9537(3): mov %rax,%rdx
953a(3): shr $0x1,%rdx
953d(5): lea 0x1(%rdx,%rax,1),%rax
9542(3): mov %rax,(%rsi)
9545(3): mov %rax,%rsi
9548(5): jmp 0xfffffed8(%rip)
954d(3): nop (%rax)
9550(3): test %rax,%rax
9553(5): mov $0x80,%edx
9558(4): cmove %rdx,%rax
955c(3): test %rax,%rax
955f(2): jns 0xffffffe3(%rip)
9561(4): sub $0x8,%rsp
9565(5): call 0xab(%rip)

"xzalloc" :
9570(1): push %rbx
9571(3): mov %rdi,%rbx
9574(5): call 0xfffffe4c(%rip)
9579(3): mov %rbx,%rdx
957c(2): xor %esi,%esi
957e(3): mov %rax,%rdi
9581(1): pop %rbx
9582(5): jmp 0xffff86be(%rip)

"xcalloc" :
9590(3): mov %rdi,%rax
9593(4): sub $0x8,%rsp
9597(3): mul %rax,%rsi,%rdx
959a(3): seto %dl
959d(3): test %rax,%rax
95a0(2): js 0x19(%rip)
95a2(3): movzx %dl,%edx
95a5(3): test %rdx,%rdx
95a8(2): jnz 0x11(%rip)
95aa(5): call 0xffff8706(%rip)
95af(3): test %rax,%rax
95b2(2): jz 0x7(%rip)
95b4(4): add $0x8,%rsp
95b8(1): ret near (%rsp)
95b9(5): call 0x57(%rip)

"xmemdup" :
95c0(1): push %rbp
95c1(1): push %rbx
95c2(3): mov %rdi,%rbp
95c5(3): mov %rsi,%rdi
95c8(3): mov %rsi,%rbx
95cb(4): sub $0x8,%rsp
95cf(5): call 0xfffffdf1(%rip)
95d4(4): add $0x8,%rsp
95d8(3): mov %rbx,%rdx
95db(3): mov %rbp,%rsi
95de(1): pop %rbx
95df(1): pop %rbp
95e0(3): mov %rax,%rdi
95e3(5): jmp 0xffff86fd(%rip)

"xstrdup" :
95f0(1): push %rbx
95f1(3): mov %rdi,%rbx
95f4(5): call 0xffff858c(%rip)
95f9(3): mov %rbx,%rdi
95fc(4): lea 0x1(%rax),%rsi
9600(1): pop %rbx
9601(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
9610(7): lea 0x5498(%rip),%rsi
9617(4): sub $0x8,%rsp
961b(5): mov $0x5,%edx
9620(2): xor %edi,%edi
9622(5): call 0xffff853e(%rip)
9627(6): mov 0x207a03(%rip),%edi
962d(7): lea 0x3038(%rip),%rdx
9634(3): mov %rax,%rcx
9637(2): xor %esi,%esi
9639(2): xor %eax,%eax
963b(5): call 0xffff8755(%rip)
9640(5): call 0xffff8430(%rip)

"xstrtoumax" :
9650(2): push %r15
9652(2): push %r14
9654(2): push %r13
9656(2): push %r12
9658(1): push %rbp
9659(1): push %rbx
965a(4): sub $0x28,%rsp
965e(9): mov $0x28,%rax
9667(5): mov %rax,0x18(%rsp)
966c(2): xor %eax,%eax
966e(3): cmp $0x24,%edx
9671(6): jnbe 0x364(%rip)
9677(5): lea 0x10(%rsp),%rax
967c(3): mov %rsi,%r15
967f(3): test %rsi,%rsi
9682(3): mov %rdi,%rbp
9685(4): mov %edx,0x8(%rsp)
9689(3): mov %rcx,%r14
968c(3): mov %r8,%r13
968f(4): cmove %rax,%r15
9693(5): call 0xffff83ed(%rip)
9698(6): mov $0x0,(%rax)
969e(3): mov %rax,%r12
96a1(4): movzx 0x0(%rbp),%ebx
96a5(5): call 0xffff87db(%rip)
96aa(4): mov 0x8(%rsp),%edx
96ae(3): mov (%rax),%rsi
96b1(3): mov %rbp,%rax
96b4(2): jmp 0x13(%rip)
96b6(a): nop 0x0(%rax,%rax,1)
96c0(4): add $0x1,%rax
96c4(3): movzx (%rax),%ebx
96c7(3): movzx %bl,%ecx
96ca(5): test $0x20,0x1(%rsi,%rcx,2)
96cf(2): jnz 0xfffffff1(%rip)
96d1(3): cmp $0x2d,%bl
96d4(2): jz 0x54(%rip)
96d6(2): xor %ecx,%ecx
96d8(3): mov %r15,%rsi
96db(3): mov %rbp,%rdi
96de(5): call 0xffff8552(%rip)
96e3(3): mov (%r15),%rcx
96e6(3): mov %rax,%rbx
96e9(3): cmp %rbp,%rcx
96ec(2): jz 0x2c(%rip)
96ee(4): mov (%r12),%eax
96f2(2): test %eax,%eax
96f4(2): jz 0x64(%rip)
96f6(3): cmp $0x22,%eax
96f9(5): mov $0x1,%ebp
96fe(2): jnz 0x2a(%rip)
9700(3): test %r13,%r13
9703(2): jz 0xb(%rip)
9705(4): movzx (%rcx),%r12d
9709(3): test %r12b,%r12b
970c(2): jnz 0x7b(%rip)
970e(3): mov %rbx,(%r14)
9711(2): jmp 0x1c(%rip)
9713(5): nop 0x0(%rax,%rax,1)
9718(3): test %r13,%r13
971b(5): mov %rcx,0x8(%rsp)
9720(2): jnz 0x40(%rip)
9722(6): nop 0x0(%rax,%rax,1)
9728(5): mov $0x4,%ebp
972d(5): mov 0x18(%rsp),%rdi
9732(9): xor $0x28,%rdi
973b(2): mov %ebp,%eax
973d(6): jnz 0x293(%rip)
9743(4): add $0x28,%rsp
9747(1): pop %rbx
9748(1): pop %rbp
9749(2): pop %r12
974b(2): pop %r13
974d(2): pop %r14
974f(2): pop %r15
9751(1): ret near (%rsp)
9752(6): nop 0x0(%rax,%rax,1)
9758(2): xor %ebp,%ebp
975a(2): jmp 0xffffffa6(%rip)
975c(4): nop 0x0(%rax)
9760(5): movzx 0x0(%rbp),%r12d
9765(3): test %r12b,%r12b
9768(2): jz 0xffffffc0(%rip)
976a(4): movsx %r12b,%esi
976e(3): mov %r13,%rdi
9771(2): xor %ebp,%ebp
9773(5): call 0xffff845d(%rip)
9778(3): test %rax,%rax
977b(5): mov $0x1,%ebx
9780(5): mov 0x8(%rsp),%rcx
9785(2): jz 0xffffffa3(%rip)
9787(4): movsx %r12b,%esi
978b(3): mov %r13,%rdi
978e(5): mov %rcx,0x8(%rsp)
9793(5): call 0xffff843d(%rip)
9798(3): test %rax,%rax
979b(5): mov 0x8(%rsp),%rcx
97a0(6): jz 0xcc(%rip)
97a6(5): lea 0xffffffbb(%r12),%eax
97ab(2): cmp $0x2f,%al
97ad(2): jnbe 0x53(%rip)
97af(a): mov $0x142129060940101,%rdx
97b9(4): bt %rax,%rdx
97bd(2): jnb 0x43(%rip)
97bf(5): mov $0x30,%esi
97c4(3): mov %r13,%rdi
97c7(5): mov %rcx,0x8(%rsp)
97cc(5): call 0xffff8404(%rip)
97d1(3): test %rax,%rax
97d4(5): mov 0x8(%rsp),%rcx
97d9(2): jz 0x27(%rip)
97db(4): movzx 0x1(%rcx),%eax
97df(2): cmp $0x44,%al
97e1(2): jz 0xe(%rip)
97e3(2): cmp $0x69,%al
97e5(6): jz 0x1d3(%rip)
97eb(2): cmp $0x42,%al
97ed(2): jnz 0x13(%rip)
97ef(5): mov $0x2,%edi
97f4(5): mov $0x3e8,%esi
97f9(2): jmp 0x11(%rip)
97fb(5): nop 0x0(%rax,%rax,1)
9800(5): mov $0x1,%edi
9805(5): mov $0x400,%esi
980a(4): sub $0x42,%r12d
980e(4): cmp $0x35,%r12b
9812(2): jnbe 0x5a(%rip)
9814(7): lea 0x52ed(%rip),%rdx
981b(4): movzx %r12b,%r12d
981f(4): movsxd 0x0(%rdx,%r12,4),%rax
9823(3): add %rdx,%rax
9826(2): jmp %rax
9828(3): mov %rbx,%rax
982b(3): mul %rax,%rsi,%rdx
982e(6): jo 0x1f3(%rip)
9834(3): xor %r8d,%r8d
9837(3): mul %rax,%rsi,%rdx
983a(6): jo 0x1d8(%rip)
9840(3): mov %rax,%rbx
9843(3): or %r8d,%ebp
9846(a): nop 0x0(%rax,%rax,1)
9850(3): movsxd %edi,%rdi
9853(2): mov %ebp,%eax
9855(3): add %rdi,%rcx
9858(3): or $0x2,%eax
985b(3): mov %rcx,(%r15)
985e(3): cmp $0x0,(%rcx)
9861(3): mov %rbx,(%r14)
9864(3): cmovne %eax,%ebp
9867(5): jmp 0xfffffec6(%rip)
986c(3): mov %rbx,(%r14)
986f(3): or $0x2,%ebp
9872(5): jmp 0xfffffebb(%rip)
9877(5): mov $0x2,%edx
987c(3): mov %rdx,%rax
987f(3): mul %rax,%rbx,%rdx
9882(6): jo 0x9c(%rip)
9888(3): add %rbx,%rbx
988b(2): jmp 0xffffffc5(%rip)
988d(5): mov $0x200,%edx
9892(3): mov %rdx,%rax
9895(3): mul %rax,%rbx,%rdx
9898(6): jo 0x86(%rip)
989e(4): shl/sal $0x9,%rbx
98a2(2): jmp 0xffffffae(%rip)
98a4(6): mov $0x7,%r8d
98aa(3): xor %r9d,%r9d
98ad(3): nop (%rax)
98b0(3): mov %rbx,%rax
98b3(3): mul %rax,%rsi,%rdx
98b6(3): mov %rax,%rbx
98b9(6): jo 0x195(%rip)
98bf(4): sub $0x1,%r8d
98c3(2): jnz 0xffffffed(%rip)
98c5(3): or %r9d,%ebp
98c8(2): jmp 0xffffff88(%rip)
98ca(6): mov $0x8,%r8d
98d0(3): xor %r9d,%r9d
98d3(5): nop 0x0(%rax,%rax,1)
98d8(3): mov %rbx,%rax
98db(3): mul %rax,%rsi,%rdx
98de(3): mov %rax,%rbx
98e1(6): jo 0x14f(%rip)
98e7(4): sub $0x1,%r8d
98eb(2): jnz 0xffffffed(%rip)
98ed(2): jmp 0xffffffd8(%rip)
98ef(6): mov $0x4,%r8d
98f5(3): xor %r9d,%r9d
98f8(3): mov %rbx,%rax
98fb(3): mul %rax,%rsi,%rdx
98fe(3): mov %rax,%rbx
9901(6): jo 0x102(%rip)
9907(4): sub $0x1,%r8d
990b(2): jnz 0xffffffed(%rip)
990d(2): jmp 0xffffffb8(%rip)
990f(3): mov %rbx,%rax
9912(3): mul %rax,%rsi,%rdx
9915(3): mov %rax,%rbx
9918(6): jno 0xffffff38(%rip)
991e(5): mov $0x1,%ebp
9923(4): or $0xffffffff,%rbx
9927(5): jmp 0xffffff29(%rip)
992c(4): nop 0x0(%rax)
9930(6): mov $0x5,%r8d
9936(3): xor %r9d,%r9d
9939(3): mov %rbx,%rax
993c(3): mul %rax,%rsi,%rdx
993f(3): mov %rax,%rbx
9942(6): jo 0xfd(%rip)
9948(4): sub $0x1,%r8d
994c(2): jnz 0xffffffed(%rip)
994e(5): jmp 0xffffff77(%rip)
9953(6): mov $0x6,%r8d
9959(3): xor %r9d,%r9d
995c(3): mov %rbx,%rax
995f(3): mul %rax,%rsi,%rdx
9962(3): mov %rax,%rbx
9965(6): jo 0x8f(%rip)
996b(4): sub $0x1,%r8d
996f(2): jnz 0xffffffed(%rip)
9971(5): jmp 0xffffff54(%rip)
9976(5): mov $0x400,%edx
997b(3): mov %rdx,%rax
997e(3): mul %rax,%rbx,%rdx
9981(2): jo 0xffffff9d(%rip)
9983(4): shl/sal $0xa,%rbx
9987(5): jmp 0xfffffec9(%rip)
998c(3): mov %rbx,%rax
998f(3): mul %rax,%rsi,%rdx
9992(6): jo 0xcb(%rip)
9998(3): xor %r8d,%r8d
999b(3): mul %rax,%rsi,%rdx
999e(6): jno 0xfffffe99(%rip)
99a4(6): mov $0x1,%r8d
99aa(4): or $0xffffffff,%rax
99ae(5): jmp 0xfffffe89(%rip)
99b3(5): nop 0x0(%rax,%rax,1)
99b8(2): xor %edi,%edi
99ba(4): cmp $0x42,0x2(%rcx)
99be(5): mov $0x400,%esi
99c3(4): setz %dil
99c7(4): lea 0x1(%rdi,%rdi,1),%edi
99cb(5): jmp 0xfffffe3f(%rip)
99d0(5): call 0xffff81c0(%rip)
99d5(7): lea 0x5204(%rip),%rcx
99dc(7): lea 0x50dd(%rip),%rsi
99e3(7): lea 0x50f6(%rip),%rdi
99ea(5): mov $0x54,%edx
99ef(5): call 0xffff8231(%rip)
99f4(6): mov $0x1,%r9d
99fa(4): or $0xffffffff,%rbx
99fe(5): jmp 0xffffff6d(%rip)
9a03(6): mov $0x1,%r9d
9a09(4): or $0xffffffff,%rbx
9a0d(5): jmp 0xfffffefa(%rip)
9a12(6): mov $0x1,%r8d
9a18(4): or $0xffffffff,%rbx
9a1c(5): jmp 0xfffffe27(%rip)
9a21(4): or $0xffffffff,%rax
9a25(6): mov $0x1,%r8d
9a2b(5): jmp 0xfffffe0c(%rip)
9a30(6): mov $0x1,%r9d
9a36(4): or $0xffffffff,%rbx
9a3a(5): jmp 0xfffffead(%rip)
9a3f(6): mov $0x1,%r9d
9a45(4): or $0xffffffff,%rbx
9a49(5): jmp 0xfffffeff(%rip)
9a4e(6): mov $0x1,%r9d
9a54(4): or $0xffffffff,%rbx
9a58(5): jmp 0xfffffe67(%rip)
9a5d(6): mov $0x1,%r8d
9a63(4): or $0xffffffff,%rax
9a67(5): jmp 0xffffff34(%rip)

"xstrcat" :
9a70(2): push %r15
9a72(2): push %r14
9a74(2): push %r13
9a76(2): push %r12
9a78(1): push %rbp
9a79(1): push %rbx
9a7a(4): sub $0x28,%rsp
9a7e(9): mov $0x28,%rax
9a87(5): mov %rax,0x18(%rsp)
9a8c(2): xor %eax,%eax
9a8e(3): test %rdi,%rdi
9a91(4): movdqu (%rsi),%xmm0
9a95(4): movups %xmm0,(%rsp)
9a99(4): mov 0x10(%rsi),%r14
9a9d(5): mov %r14,0x10(%rsp)
9aa2(6): jz 0xae(%rip)
9aa8(3): mov %rdi,%r12
9aab(3): mov %rsi,%r15
9aae(3): mov %rdi,%rbp
9ab1(2): xor %ebx,%ebx
9ab3(7): mov $0xffffffff,%r13
9aba(3): mov (%rsp),%edx
9abd(3): cmp $0x2f,%edx
9ac0(6): jnbe 0xe0(%rip)
9ac6(2): mov %edx,%eax
9ac8(3): add $0x8,%edx
9acb(3): add %r14,%rax
9ace(3): mov %edx,(%rsp)
9ad1(3): mov (%rax),%rdi
9ad4(5): call 0xffff80ac(%rip)
9ad9(3): add %rax,%rbx
9adc(4): cmovnae %r13,%rbx
9ae0(4): sub $0x1,%rbp
9ae4(2): jnz 0xffffffd6(%rip)
9ae6(7): cmp $0x7fffffff,%rbx
9aed(6): jnbe 0xa3(%rip)
9af3(4): lea 0x1(%rbx),%rdi
9af7(5): call 0xfffff8c9(%rip)
9afc(3): mov %rax,%r14
9aff(3): mov %rax,%rbx
9b02(2): jmp 0x33(%rip)
9b04(2): mov %edx,%eax
9b06(4): add 0x10(%r15),%rax
9b0a(3): add $0x8,%edx
9b0d(3): mov %edx,(%r15)
9b10(3): mov (%rax),%r13
9b13(3): mov %r13,%rdi
9b16(5): call 0xffff806a(%rip)
9b1b(3): mov %rbx,%rdi
9b1e(3): mov %rax,%rbp
9b21(3): mov %rax,%rdx
9b24(3): mov %r13,%rsi
9b27(3): add %rbp,%rbx
9b2a(5): call 0xffff81b6(%rip)
9b2f(4): sub $0x1,%r12
9b33(2): jz 0x2d(%rip)
9b35(3): mov (%r15),%edx
9b38(3): cmp $0x2f,%edx
9b3b(2): jbe 0xffffffc9(%rip)
9b3d(4): mov 0x8(%r15),%rax
9b41(4): lea 0x8(%rax),%rdx
9b45(4): mov %rdx,0x8(%r15)
9b49(2): jmp 0xffffffc7(%rip)
9b4b(5): nop 0x0(%rax,%rax,1)
9b50(5): mov $0x1,%edi
9b55(5): call 0xfffff86b(%rip)
9b5a(3): mov %rax,%rbx
9b5d(3): mov %rax,%r14
9b60(3): mov $0x0,(%rbx)
9b63(5): mov 0x18(%rsp),%rcx
9b68(9): xor $0x28,%rcx
9b71(3): mov %r14,%rax
9b74(2): jnz 0x11(%rip)
9b76(4): add $0x28,%rsp
9b7a(1): pop %rbx
9b7b(1): pop %rbp
9b7c(2): pop %r12
9b7e(2): pop %r13
9b80(2): pop %r14
9b82(2): pop %r15
9b84(1): ret near (%rsp)
9b85(5): call 0xffff800b(%rip)
9b8a(6): nop 0x0(%rax,%rax,1)
9b90(5): call 0xffff7ef0(%rip)
9b95(3): xor %r14d,%r14d
9b98(6): mov $0x4b,(%rax)
9b9e(2): jmp 0xffffffc5(%rip)
9ba0(5): mov 0x8(%rsp),%rax
9ba5(4): lea 0x8(%rax),%rdx
9ba9(5): mov %rdx,0x8(%rsp)
9bae(5): jmp 0xffffff23(%rip)

"xvasprintf" :
9bc0(4): sub $0x18,%rsp
9bc4(9): mov $0x28,%rax
9bcd(5): mov %rax,0x8(%rsp)
9bd2(2): xor %eax,%eax
9bd4(3): movzx (%rdi),%eax
9bd7(2): test %al,%al
9bd9(2): jz 0x7d(%rip)
9bdb(2): cmp $0x25,%al
9bdd(3): mov %rdi,%r8
9be0(2): jnz 0x38(%rip)
9be2(4): cmp $0x73,0x1(%rdi)
9be6(2): jnz 0x32(%rip)
9be8(2): xor %edi,%edi
9bea(2): jmp 0x13(%rip)
9bec(4): nop 0x0(%rax)
9bf0(3): cmp $0x25,%cl
9bf3(2): jnz 0x25(%rip)
9bf5(6): cmp $0x73,0x1(%r8,%rdi,2)
9bfb(2): jnz 0x1d(%rip)
9bfd(4): add $0x1,%rdi
9c01(5): movzx 0x0(%r8,%rdi,2),%ecx
9c06(2): test %cl,%cl
9c08(2): jnz 0xffffffe8(%rip)
9c0a(5): call 0xfffffe66(%rip)
9c0f(2): jmp 0x1f(%rip)
9c11(7): nop 0x0(%rax)
9c18(3): mov %rsi,%rdx
9c1b(3): mov %rsp,%rdi
9c1e(3): mov %r8,%rsi
9c21(5): call 0x47f(%rip)
9c26(2): test %eax,%eax
9c28(2): js 0x20(%rip)
9c2a(4): mov (%rsp),%rax
9c2e(5): mov 0x8(%rsp),%rdx
9c33(9): xor $0x28,%rdx
9c3c(2): jnz 0x1e(%rip)
9c3e(4): add $0x18,%rsp
9c42(1): ret near (%rsp)
9c43(5): nop 0x0(%rax,%rax,1)
9c48(5): call 0xffff7e38(%rip)
9c4d(3): cmp $0xc,(%rax)
9c50(2): jz 0xf(%rip)
9c52(2): xor %eax,%eax
9c54(2): jmp 0xffffffda(%rip)
9c56(2): xor %edi,%edi
9c58(2): jmp 0xffffffb2(%rip)
9c5a(5): call 0xffff7f36(%rip)
9c5f(5): call 0xfffff9b1(%rip)

"rpl_fclose" :
9c70(2): push %r12
9c72(1): push %rbp
9c73(1): push %rbx
9c74(3): mov %rdi,%rbx
9c77(5): call 0xffff8079(%rip)
9c7c(2): test %eax,%eax
9c7e(3): mov %rbx,%rdi
9c81(2): js 0x56(%rip)
9c83(5): call 0xffff80bd(%rip)
9c88(2): test %eax,%eax
9c8a(2): jnz 0x2e(%rip)
9c8c(3): mov %rbx,%rdi
9c8f(5): call 0x2e1(%rip)
9c94(2): test %eax,%eax
9c96(2): jz 0x3e(%rip)
9c98(5): call 0xffff7de8(%rip)
9c9d(3): mov (%rax),%r12d
9ca0(3): mov %rbx,%rdi
9ca3(3): mov %rax,%rbp
9ca6(5): call 0xffff7e9a(%rip)
9cab(3): test %r12d,%r12d
9cae(2): jnz 0x32(%rip)
9cb0(1): pop %rbx
9cb1(1): pop %rbp
9cb2(2): pop %r12
9cb4(1): ret near (%rsp)
9cb5(3): nop (%rax)
9cb8(3): mov %rbx,%rdi
9cbb(5): call 0xffff8035(%rip)
9cc0(2): xor %esi,%esi
9cc2(5): mov $0x1,%edx
9cc7(2): mov %eax,%edi
9cc9(5): call 0xffff7f47(%rip)
9cce(4): cmp $0xffffffff,%rax
9cd2(2): jnz 0xffffffba(%rip)
9cd4(3): mov %rbx,%rdi
9cd7(1): pop %rbx
9cd8(1): pop %rbp
9cd9(2): pop %r12
9cdb(5): jmp 0xffff7e65(%rip)
9ce0(4): mov %r12d,0x0(%rbp)
9ce4(5): mov $0xffffffff,%eax
9ce9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
9cf0(2): push %r12
9cf2(1): push %rbp
9cf3(2): mov %edi,%ebp
9cf5(1): push %rbx
9cf6(4): sub $0x50,%rsp
9cfa(9): mov $0x28,%rax
9d03(5): mov %rax,0x18(%rsp)
9d08(2): xor %eax,%eax
9d0a(5): lea 0x70(%rsp),%rax
9d0f(2): test %esi,%esi
9d11(5): mov %rdx,0x30(%rsp)
9d16(5): mov %rcx,0x38(%rsp)
9d1b(5): mov %r8,0x40(%rsp)
9d20(5): mov %rax,0x8(%rsp)
9d25(5): lea 0x20(%rsp),%rax
9d2a(5): mov %r9,0x48(%rsp)
9d2f(7): mov $0x10,(%rsp)
9d36(5): mov %rax,0x10(%rsp)
9d3b(6): jz 0x207(%rip)
9d41(6): cmp $0x406,%esi
9d47(2): jnz 0x49(%rip)
9d49(5): mov 0x10(%rsp),%rax
9d4e(7): cmp $0x0,0x207803(%rip)
9d55(7): mov $0x18,(%rsp)
9d5c(4): mov 0x10(%rax),%r12d
9d60(3): mov %r12d,%edx
9d63(6): js 0x130(%rip)
9d69(2): xor %eax,%eax
9d6b(5): mov $0x406,%esi
9d70(5): call 0xffff7d90(%rip)
9d75(2): test %eax,%eax
9d77(2): mov %eax,%ebx
9d79(6): js 0x18f(%rip)
9d7f(a): mov $0x1,0x2077cf(%rip)
9d89(2): jmp 0x47(%rip)
9d8b(5): nop 0x0(%rax,%rax,1)
9d90(3): cmp $0xb,%esi
9d93(2): jz 0x2d(%rip)
9d95(2): jnle 0x5b(%rip)
9d97(3): cmp $0x4,%esi
9d9a(6): jz 0xd6(%rip)
9da0(6): jnle 0xc0(%rip)
9da6(3): cmp $0x2,%esi
9da9(6): jz 0xc7(%rip)
9daf(2): jnle 0x11(%rip)
9db1(3): cmp $0x1,%esi
9db4(2): jnz 0x64(%rip)
9db6(a): nop 0x0(%rax,%rax,1)
9dc0(2): mov %ebp,%edi
9dc2(2): xor %eax,%eax
9dc4(5): call 0xffff7d3c(%rip)
9dc9(2): mov %eax,%ebx
9dcb(5): nop 0x0(%rax,%rax,1)
9dd0(5): mov 0x18(%rsp),%rcx
9dd5(9): xor $0x28,%rcx
9dde(2): mov %ebx,%eax
9de0(6): jnz 0x15d(%rip)
9de6(4): add $0x50,%rsp
9dea(1): pop %rbx
9deb(1): pop %rbp
9dec(2): pop %r12
9dee(1): ret near (%rsp)
9def(1): nop 
9df0(6): cmp $0x407,%esi
9df6(2): jnle 0x4a(%rip)
9df8(6): cmp $0x406,%esi
9dfe(2): jnl 0x72(%rip)
9e00(6): cmp $0x401,%esi
9e06(2): jz 0xffffffba(%rip)
9e08(6): cmp $0x402,%esi
9e0e(2): jz 0x62(%rip)
9e10(6): cmp $0x400,%esi
9e16(2): jz 0x5a(%rip)
9e18(3): mov (%rsp),%eax
9e1b(3): cmp $0x2f,%eax
9e1e(6): jnbe 0x13c(%rip)
9e24(5): add 0x10(%rsp),%rax
9e29(3): mov (%rax),%rdx
9e2c(2): mov %ebp,%edi
9e2e(2): xor %eax,%eax
9e30(5): call 0xffff7cd0(%rip)
9e35(2): mov %eax,%ebx
9e37(2): jmp 0xffffff99(%rip)
9e39(7): nop 0x0(%rax)
9e40(6): cmp $0x409,%esi
9e46(2): jz 0x2a(%rip)
9e48(6): jl 0xffffff78(%rip)
9e4e(6): cmp $0x40a,%esi
9e54(2): jnz 0xffffffc4(%rip)
9e56(5): jmp 0xffffff6a(%rip)
9e5b(5): nop 0x0(%rax,%rax,1)
9e60(3): cmp $0x9,%esi
9e63(6): jz 0xffffff5d(%rip)
9e69(2): jnle 0x7(%rip)
9e6b(3): cmp $0x8,%esi
9e6e(2): jnz 0xffffffaa(%rip)
9e70(3): mov (%rsp),%eax
9e73(3): cmp $0x2f,%eax
9e76(6): jnbe 0xee(%rip)
9e7c(5): add 0x10(%rsp),%rax
9e81(2): mov (%rax),%edx
9e83(2): mov %ebp,%edi
9e85(2): xor %eax,%eax
9e87(5): call 0xffff7c79(%rip)
9e8c(2): mov %eax,%ebx
9e8e(5): jmp 0xffffff42(%rip)
9e93(2): xor %esi,%esi
9e95(2): xor %eax,%eax
9e97(5): call 0xffff7c69(%rip)
9e9c(2): test %eax,%eax
9e9e(2): mov %eax,%ebx
9ea0(6): js 0xffffff30(%rip)
9ea6(7): cmp $0xff,0x2076ab(%rip)
9ead(6): jnz 0xffffff23(%rip)
9eb3(2): xor %eax,%eax
9eb5(5): mov $0x1,%esi
9eba(2): mov %ebx,%edi
9ebc(5): call 0xffff7c44(%rip)
9ec1(2): test %eax,%eax
9ec3(2): js 0x1e(%rip)
9ec5(3): or $0x1,%eax
9ec8(5): mov $0x2,%esi
9ecd(2): mov %ebx,%edi
9ecf(2): mov %eax,%edx
9ed1(2): xor %eax,%eax
9ed3(5): call 0xffff7c2d(%rip)
9ed8(3): cmp $0xff,%eax
9edb(6): jnz 0xfffffef5(%rip)
9ee1(5): call 0xffff7b9f(%rip)
9ee6(3): mov (%rax),%r12d
9ee9(3): mov %rax,%rbp
9eec(2): mov %ebx,%edi
9eee(5): call 0xffff7d72(%rip)
9ef3(5): mov $0xffffffff,%ebx
9ef8(4): mov %r12d,0x0(%rbp)
9efc(5): jmp 0xfffffed4(%rip)
9f01(7): nop 0x0(%rax)
9f08(5): call 0xffff7b78(%rip)
9f0d(3): cmp $0x16,(%rax)
9f10(6): jnz 0xfffffe6f(%rip)
9f16(2): xor %esi,%esi
9f18(2): xor %eax,%eax
9f1a(3): mov %r12d,%edx
9f1d(2): mov %ebp,%edi
9f1f(5): call 0xffff7be1(%rip)
9f24(2): test %eax,%eax
9f26(2): mov %eax,%ebx
9f28(6): js 0xfffffea8(%rip)
9f2e(a): mov $0xffffffff,0x207620(%rip)
9f38(5): jmp 0xffffff7b(%rip)
9f3d(5): call 0xffff7c53(%rip)
9f42(5): mov 0x10(%rsp),%rax
9f47(2): xor %esi,%esi
9f49(3): mov 0x10(%rax),%edx
9f4c(2): xor %eax,%eax
9f4e(5): call 0xffff7bb2(%rip)
9f53(2): mov %eax,%ebx
9f55(5): jmp 0xfffffe7b(%rip)
9f5a(5): mov 0x8(%rsp),%rax
9f5f(5): jmp 0xfffffeca(%rip)
9f64(5): mov 0x8(%rsp),%rax
9f69(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
9f70(3): test %rdi,%rdi
9f73(1): push %rbx
9f74(3): mov %rdi,%rbx
9f77(2): jz 0x13(%rip)
9f79(5): call 0xffff7dc7(%rip)
9f7e(2): test %eax,%eax
9f80(2): jz 0xa(%rip)
9f82(6): test $0x100,(%rbx)
9f88(2): jnz 0x10(%rip)
9f8a(3): mov %rbx,%rdi
9f8d(1): pop %rbx
9f8e(5): jmp 0xffff7d82(%rip)
9f93(5): nop 0x0(%rax,%rax,1)
9f98(3): mov %rbx,%rdi
9f9b(5): mov $0x1,%edx
9fa0(2): xor %esi,%esi
9fa2(5): call 0xe(%rip)
9fa7(3): mov %rbx,%rdi
9faa(1): pop %rbx
9fab(5): jmp 0xffff7d65(%rip)

"rpl_fseeko" :
9fb0(4): mov 0x8(%rdi),%rax
9fb4(4): cmp %rax,0x10(%rdi)
9fb8(2): jz 0x8(%rip)
9fba(5): jmp 0xffff7e06(%rip)
9fbf(1): nop 
9fc0(4): mov 0x20(%rdi),%rax
9fc4(4): cmp %rax,0x28(%rdi)
9fc8(2): jnz 0xfffffff2(%rip)
9fca(5): cmp $0x0,0x48(%rdi)
9fcf(2): jnz 0xffffffeb(%rip)
9fd1(2): push %r12
9fd3(1): push %rbp
9fd4(3): mov %edx,%r12d
9fd7(1): push %rbx
9fd8(3): mov %rsi,%rbp
9fdb(3): mov %rdi,%rbx
9fde(5): call 0xffff7d12(%rip)
9fe3(3): mov %r12d,%edx
9fe6(3): mov %rbp,%rsi
9fe9(2): mov %eax,%edi
9feb(5): call 0xffff7c25(%rip)
9ff0(4): cmp $0xffffffff,%rax
9ff4(2): jz 0xe(%rip)
9ff6(3): and $0xef,(%rbx)
9ff9(7): mov %rax,0x90(%rbx)
a000(2): xor %eax,%eax
a002(1): pop %rbx
a003(1): pop %rbp
a004(2): pop %r12
a006(1): ret near (%rsp)

"rpl_mbrtowc" :
a010(2): push %r13
a012(2): push %r12
a014(3): mov %rsi,%r13
a017(1): push %rbp
a018(1): push %rbx
a019(3): mov %rdi,%rbx
a01c(3): mov %rdx,%r12
a01f(4): sub $0x18,%rsp
a023(9): mov $0x28,%rax
a02c(5): mov %rax,0x8(%rsp)
a031(2): xor %eax,%eax
a033(5): lea 0x4(%rsp),%rax
a038(3): test %rdi,%rdi
a03b(4): cmove %rax,%rbx
a03f(3): mov %rbx,%rdi
a042(5): call 0xffff7b6e(%rip)
a047(4): cmp $0xfffffffd,%rax
a04b(3): mov %rax,%rbp
a04e(2): jbe 0x22(%rip)
a050(3): test %r12,%r12
a053(2): jz 0x1d(%rip)
a055(2): xor %edi,%edi
a057(5): call 0x459(%rip)
a05c(2): test %al,%al
a05e(2): jnz 0x12(%rip)
a060(5): movzx 0x0(%r13),%eax
a065(5): mov $0x1,%ebp
a06a(2): mov %eax,(%rbx)
a06c(4): nop 0x0(%rax)
a070(5): mov 0x8(%rsp),%rdx
a075(9): xor $0x28,%rdx
a07e(3): mov %rbp,%rax
a081(2): jnz 0xd(%rip)
a083(4): add $0x18,%rsp
a087(1): pop %rbx
a088(1): pop %rbp
a089(2): pop %r12
a08b(2): pop %r13
a08d(1): ret near (%rsp)
a08e(5): call 0xffff7b02(%rip)

"rpl_vasprintf" :
a0a0(1): push %rbx
a0a1(3): mov %rsi,%rax
a0a4(3): mov %rdi,%rbx
a0a7(2): xor %edi,%edi
a0a9(4): sub $0x10,%rsp
a0ad(9): mov $0x28,%rcx
a0b6(5): mov %rcx,0x8(%rsp)
a0bb(2): xor %ecx,%ecx
a0bd(3): mov %rsp,%rsi
a0c0(3): mov %rdx,%rcx
a0c3(3): mov %rax,%rdx
a0c6(5): call 0x48a(%rip)
a0cb(3): test %rax,%rax
a0ce(2): jz 0x44(%rip)
a0d0(4): mov (%rsp),%rdx
a0d4(7): cmp $0x7fffffff,%rdx
a0db(2): jnbe 0x1d(%rip)
a0dd(3): mov %rax,(%rbx)
a0e0(2): mov %edx,%eax
a0e2(5): mov 0x8(%rsp),%rbx
a0e7(9): xor $0x28,%rbx
a0f0(2): jnz 0x29(%rip)
a0f2(4): add $0x10,%rsp
a0f6(1): pop %rbx
a0f7(1): ret near (%rsp)
a0f8(3): mov %rax,%rdi
a0fb(5): call 0xffff7965(%rip)
a100(5): call 0xffff7980(%rip)
a105(6): mov $0x4b,(%rax)
a10b(5): mov $0xffffffff,%eax
a110(2): jmp 0xffffffd2(%rip)
a112(5): mov $0xffffffff,%eax
a117(2): jmp 0xffffffcb(%rip)
a119(5): call 0xffff7a77(%rip)

"__argmatch_die" :
a120(5): mov $0x1,%edi
a125(5): jmp 0xffffaf0b(%rip)

"argmatch" :
a130(2): push %r15
a132(2): push %r14
a134(3): mov %rsi,%r15
a137(2): push %r13
a139(2): push %r12
a13b(3): mov %rcx,%r13
a13e(1): push %rbp
a13f(1): push %rbx
a140(3): mov %rdx,%rbp
a143(4): sub $0x28,%rsp
a147(5): mov %rdi,0x8(%rsp)
a14c(5): mov %rdx,0x18(%rsp)
a151(5): call 0xffff7a2f(%rip)
a156(3): mov (%r15),%r14
a159(8): mov $0xffffffff,(%rsp)
a161(3): test %r14,%r14
a164(6): jz 0xb9(%rip)
a16a(3): mov %rax,%r12
a16d(5): mov $0x0,0x17(%rsp)
a172(2): xor %ebx,%ebx
a174(2): jmp 0x53(%rip)
a176(a): nop 0x0(%rax,%rax,1)
a180(5): mov 0x18(%rsp),%rax
a185(3): test %rax,%rax
a188(6): jz 0xa8(%rip)
a18e(4): mov (%rsp),%rdi
a192(3): mov %r13,%rdx
a195(3): mov %rbp,%rsi
a198(4): imul %r13,%rdi
a19c(3): add %rax,%rdi
a19f(5): call 0xffff7af1(%rip)
a1a4(2): test %eax,%eax
a1a6(5): movzx 0x17(%rsp),%eax
a1ab(5): mov $0x1,%ecx
a1b0(3): cmovne %ecx,%eax
a1b3(4): mov %al,0x17(%rsp)
a1b7(4): add $0x1,%rbx
a1bb(3): add %r13,%rbp
a1be(4): mov 0x0(%r15,%rbx,8),%r14
a1c2(3): test %r14,%r14
a1c5(2): jz 0x43(%rip)
a1c7(5): mov 0x8(%rsp),%rsi
a1cc(3): mov %r12,%rdx
a1cf(3): mov %r14,%rdi
a1d2(5): call 0xffff78de(%rip)
a1d7(2): test %eax,%eax
a1d9(2): jnz 0xffffffde(%rip)
a1db(3): mov %r14,%rdi
a1de(5): call 0xffff79a2(%rip)
a1e3(3): cmp %r12,%rax
a1e6(2): jz 0x5a(%rip)
a1e8(5): cmp $0xffffffff,(%rsp)
a1ed(2): jnz 0xffffff93(%rip)
a1ef(4): mov %rbx,(%rsp)
a1f3(4): add $0x1,%rbx
a1f7(3): add %r13,%rbp
a1fa(4): mov 0x0(%r15,%rbx,8),%r14
a1fe(3): test %r14,%r14
a201(2): jnz 0xffffffc6(%rip)
a203(5): nop 0x0(%rax,%rax,1)
a208(5): cmp $0x0,0x17(%rsp)
a20d(7): mov $0xfffffffe,%rax
a214(5): cmove (%rsp),%rax
a219(4): mov %rax,(%rsp)
a21d(4): mov (%rsp),%rax
a221(4): add $0x28,%rsp
a225(1): pop %rbx
a226(1): pop %rbp
a227(2): pop %r12
a229(2): pop %r13
a22b(2): pop %r14
a22d(2): pop %r15
a22f(1): ret near (%rsp)
a230(5): mov $0x1,0x17(%rsp)
a235(2): jmp 0xffffff82(%rip)
a237(9): nop 0x0(%rax,%rax,1)
a240(4): mov %rbx,(%rsp)
a244(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
a250(4): cmp $0xffffffff,%rdx
a254(2): push %r12
a256(5): mov $0x5,%edx
a25b(1): push %rbp
a25c(3): mov %rsi,%r12
a25f(1): push %rbx
a260(3): mov %rdi,%rbp
a263(2): jz 0x4d(%rip)
a265(7): lea 0x499a(%rip),%rsi
a26c(2): xor %edi,%edi
a26e(5): call 0xffff78f2(%rip)
a273(3): mov %rax,%rbx
a276(3): mov %rbp,%rsi
a279(5): mov $0x1,%edi
a27e(5): call 0xffffea12(%rip)
a283(3): mov %r12,%rdx
a286(3): mov %rax,%rbp
a289(5): mov $0x8,%esi
a28e(2): xor %edi,%edi
a290(5): call 0xffffe630(%rip)
a295(3): mov %rbp,%r8
a298(3): mov %rbx,%rdx
a29b(3): mov %rax,%rcx
a29e(1): pop %rbx
a29f(1): pop %rbp
a2a0(2): pop %r12
a2a2(2): xor %esi,%esi
a2a4(2): xor %edi,%edi
a2a6(2): xor %eax,%eax
a2a8(5): jmp 0xffff7ae8(%rip)
a2ad(3): nop (%rax)
a2b0(7): lea 0x4934(%rip),%rsi
a2b7(2): xor %edi,%edi
a2b9(5): call 0xffff78a7(%rip)
a2be(3): mov %rax,%rbx
a2c1(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
a2d0(2): push %r15
a2d2(2): push %r14
a2d4(3): mov %rdi,%r14
a2d7(2): push %r13
a2d9(2): push %r12
a2db(2): xor %edi,%edi
a2dd(1): push %rbp
a2de(1): push %rbx
a2df(3): mov %rsi,%rbp
a2e2(7): lea 0x493a(%rip),%rsi
a2e9(3): mov %rdx,%r12
a2ec(5): mov $0x5,%edx
a2f1(4): sub $0x8,%rsp
a2f5(7): mov 0x206e04(%rip),%rbx
a2fc(5): call 0xffff7864(%rip)
a301(3): mov %rax,%rdi
a304(3): mov %rbx,%rsi
a307(5): call 0xffff7999(%rip)
a30c(3): mov (%r14),%r15
a30f(3): test %r15,%r15
a312(6): jz 0x96(%rip)
a318(3): xor %r13d,%r13d
a31b(2): xor %ebx,%ebx
a31d(2): jmp 0x3b(%rip)
a31f(1): nop 
a320(3): mov %r15,%rdi
a323(4): add $0x1,%rbx
a327(3): mov %rbp,%r13
a32a(5): call 0xffffe986(%rip)
a32f(7): mov 0x206dca(%rip),%rdi
a336(7): lea 0x48fb(%rip),%rdx
a33d(3): mov %rax,%rcx
a340(5): mov $0x1,%esi
a345(2): xor %eax,%eax
a347(3): add %r12,%rbp
a34a(5): call 0xffff7ae6(%rip)
a34f(4): mov 0x0(%r14,%rbx,8),%r15
a353(3): test %r15,%r15
a356(2): jz 0x52(%rip)
a358(3): test %rbx,%rbx
a35b(2): jz 0xffffffc5(%rip)
a35d(3): mov %r12,%rdx
a360(3): mov %rbp,%rsi
a363(3): mov %r13,%rdi
a366(5): call 0xffff792a(%rip)
a36b(2): test %eax,%eax
a36d(2): jnz 0xffffffb3(%rip)
a36f(3): mov %r15,%rdi
a372(4): add $0x1,%rbx
a376(3): add %r12,%rbp
a379(5): call 0xffffe937(%rip)
a37e(7): mov 0x206d7b(%rip),%rdi
a385(7): lea 0x22de(%rip),%rdx
a38c(3): mov %rax,%rcx
a38f(5): mov $0x1,%esi
a394(2): xor %eax,%eax
a396(5): call 0xffff7a9a(%rip)
a39b(4): mov 0x0(%r14,%rbx,8),%r15
a39f(3): test %r15,%r15
a3a2(2): jnz 0xffffffb6(%rip)
a3a4(4): nop 0x0(%rax)
a3a8(7): mov 0x206d51(%rip),%rdi
a3af(4): mov 0x28(%rdi),%rax
a3b3(4): cmp 0x30(%rdi),%rax
a3b7(2): jnb 0x21(%rip)
a3b9(4): lea 0x1(%rax),%rdx
a3bd(4): mov %rdx,0x28(%rdi)
a3c1(3): mov $0xa,(%rax)
a3c4(4): add $0x8,%rsp
a3c8(1): pop %rbx
a3c9(1): pop %rbp
a3ca(2): pop %r12
a3cc(2): pop %r13
a3ce(2): pop %r14
a3d0(2): pop %r15
a3d2(1): ret near (%rsp)
a3d3(5): nop 0x0(%rax,%rax,1)
a3d8(4): add $0x8,%rsp
a3dc(5): mov $0xa,%esi
a3e1(1): pop %rbx
a3e2(1): pop %rbp
a3e3(2): pop %r12
a3e5(2): pop %r13
a3e7(2): pop %r14
a3e9(2): pop %r15
a3eb(5): jmp 0xffff77f5(%rip)

"__xargmatch_internal" :
a3f0(2): push %r15
a3f2(2): push %r14
a3f4(3): mov %rdi,%r14
a3f7(2): push %r13
a3f9(2): push %r12
a3fb(3): mov %rsi,%r12
a3fe(1): push %rbp
a3ff(1): push %rbx
a400(3): mov %rcx,%rbp
a403(3): mov %rdx,%rbx
a406(3): mov %r8,%rcx
a409(3): mov %rbp,%rdx
a40c(4): sub $0x8,%rsp
a410(3): mov %rbx,%rsi
a413(3): mov %r12,%rdi
a416(3): mov %r8,%r15
a419(3): mov %r9,%r13
a41c(5): call 0xfffffd14(%rip)
a421(3): test %rax,%rax
a424(2): js 0x11(%rip)
a426(4): add $0x8,%rsp
a42a(1): pop %rbx
a42b(1): pop %rbp
a42c(2): pop %r12
a42e(2): pop %r13
a430(2): pop %r14
a432(2): pop %r15
a434(1): ret near (%rsp)
a435(3): mov %rax,%rdx
a438(3): mov %r12,%rsi
a43b(3): mov %r14,%rdi
a43e(5): call 0xfffffe12(%rip)
a443(3): mov %r15,%rdx
a446(3): mov %rbp,%rsi
a449(3): mov %rbx,%rdi
a44c(5): call 0xfffffe84(%rip)
a451(3): call %r13
a454(7): mov $0xffffffff,%rax
a45b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
a460(2): push %r14
a462(2): push %r13
a464(2): push %r12
a466(1): push %rbp
a467(1): push %rbx
a468(3): mov (%rsi),%r14
a46b(3): test %r14,%r14
a46e(2): jz 0x33(%rip)
a470(3): mov %rcx,%r12
a473(3): mov %rdi,%r13
a476(3): mov %rdx,%rbp
a479(4): lea 0x8(%rsi),%rbx
a47d(2): jmp 0x12(%rip)
a47f(1): nop 
a480(3): mov (%rbx),%r14
a483(3): add %r12,%rbp
a486(4): add $0x8,%rbx
a48a(3): test %r14,%r14
a48d(2): jz 0x14(%rip)
a48f(3): mov %r12,%rdx
a492(3): mov %rbp,%rsi
a495(3): mov %r13,%rdi
a498(5): call 0xffff77f8(%rip)
a49d(2): test %eax,%eax
a49f(2): jnz 0xffffffe1(%rip)
a4a1(1): pop %rbx
a4a2(3): mov %r14,%rax
a4a5(1): pop %rbp
a4a6(2): pop %r12
a4a8(2): pop %r13
a4aa(2): pop %r14
a4ac(1): ret near (%rsp)

"hard_locale" :
a4b0(4): sub $0x8,%rsp
a4b4(2): xor %esi,%esi
a4b6(5): call 0xffff78aa(%rip)
a4bb(3): mov %rax,%rdx
a4be(5): mov $0x1,%eax
a4c3(3): test %rdx,%rdx
a4c6(2): jz 0x1f(%rip)
a4c8(7): lea 0x4771(%rip),%rdi
a4cf(5): mov $0x2,%ecx
a4d4(3): mov %rdx,%rsi
a4d7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a4d9(3): setnbe %cl
a4dc(3): sbb $0x0,%cl
a4df(2): xor %eax,%eax
a4e1(2): test %cl,%cl
a4e3(2): jnz 0xd(%rip)
a4e5(4): add $0x8,%rsp
a4e9(1): ret near (%rsp)
a4ea(6): nop 0x0(%rax,%rax,1)
a4f0(7): lea 0x474b(%rip),%rdi
a4f7(5): mov $0x6,%ecx
a4fc(3): mov %rdx,%rsi
a4ff(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a501(3): setnbe %al
a504(2): sbb $0x0,%al
a506(2): test %al,%al
a508(3): setnz %al
a50b(4): add $0x8,%rsp
a50f(1): ret near (%rsp)

"locale_charset" :
a510(4): sub $0x8,%rsp
a514(5): mov $0xe,%edi
a519(5): call 0xffff7807(%rip)
a51e(3): test %rax,%rax
a521(2): jz 0x1f(%rip)
a523(3): cmp $0x0,(%rax)
a526(7): lea 0x471b(%rip),%rdx
a52d(4): cmove %rdx,%rax
a531(4): add $0x8,%rsp
a535(1): ret near (%rsp)
a536(a): nop 0x0(%rax,%rax,1)
a540(7): lea 0x4701(%rip),%rax
a547(4): add $0x8,%rsp
a54b(1): ret near (%rsp)

"vasnprintf" :
a550(1): push %rbp
a551(3): mov %rsp,%rbp
a554(2): push %r15
a556(2): push %r14
a558(2): push %r13
a55a(2): push %r12
a55c(7): lea 0xfffffc50(%rbp),%r14
a563(1): push %rbx
a564(3): mov %rdx,%rbx
a567(3): mov %rcx,%r12
a56a(3): mov %r14,%rdx
a56d(7): sub $0x408,%rsp
a574(7): mov %rsi,0xfffffbe8(%rbp)
a57b(7): lea 0xfffffd40(%rbp),%rsi
a582(7): mov %rdi,0xfffffc18(%rbp)
a589(3): mov %rbx,%rdi
a58c(7): mov %r14,0xfffffbf0(%rbp)
a593(9): mov $0x28,%rax
a59c(4): mov %rax,0xffffffc8(%rbp)
a5a0(2): xor %eax,%eax
a5a2(7): mov %rsi,0xfffffbf8(%rbp)
a5a9(5): call 0x12c7(%rip)
a5ae(2): test %eax,%eax
a5b0(6): js 0xe68(%rip)
a5b6(3): mov %r14,%rsi
a5b9(3): mov %r12,%rdi
a5bc(5): call 0x10b4(%rip)
a5c1(2): test %eax,%eax
a5c3(6): js 0xebd(%rip)
a5c9(7): mov 0xfffffd50(%rbp),%rax
a5d0(7): mov $0xffffffff,%rdx
a5d7(4): add $0x7,%rax
a5db(4): cmp $0x6,%rax
a5df(4): cmovbe %rdx,%rax
a5e3(7): add 0xfffffd58(%rbp),%rax
a5ea(6): jb 0xa2e(%rip)
a5f0(3): mov %rax,%rdi
a5f3(3): xor %r8d,%r8d
a5f6(4): add $0x6,%rdi
a5fa(4): setb %r8b
a5fe(6): jb 0xa1a(%rip)
a604(7): cmp $0xf9f,%rdi
a60b(6): jbe 0x14d(%rip)
a611(4): cmp $0xffffffff,%rdi
a615(7): mov %r8,0xfffffc38(%rbp)
a61c(6): jz 0x9fc(%rip)
a622(5): call 0xffff76de(%rip)
a627(3): test %rax,%rax
a62a(7): mov %rax,0xfffffc28(%rbp)
a631(6): jz 0x9e7(%rip)
a637(7): mov 0xfffffc38(%rbp),%r8
a63e(7): mov %rax,0xfffffbe0(%rbp)
a645(3): xor %r12d,%r12d
a648(8): cmp $0x0,0xfffffc18(%rbp)
a650(2): jz 0xc(%rip)
a652(7): mov 0xfffffbe8(%rbp),%rax
a659(3): mov (%rax),%r12
a65c(7): mov 0xfffffd48(%rbp),%r13
a663(7): lea 0xfffffc44(%rbp),%rax
a66a(7): mov 0xfffffc18(%rbp),%r15
a671(b): mov $0x0,0xfffffc00(%rbp)
a67c(7): mov %rax,0xfffffc10(%rbp)
a683(3): mov %rbx,%rax
a686(3): mov %r8,%rbx
a689(4): mov 0x0(%r13),%rcx
a68d(3): mov %rax,%r8
a690(3): cmp %r8,%rcx
a693(6): jz 0x96e(%rip)
a699(3): sub %r8,%rcx
a69c(3): mov %rbx,%rax
a69f(3): add %rcx,%rax
a6a2(3): mov %rax,%r14
a6a5(6): jnb 0xe3(%rip)
a6ab(4): cmp $0xffffffff,%r12
a6af(6): jz 0xad1(%rip)
a6b5(5): call 0xffff73cb(%rip)
a6ba(7): mov %rax,0xfffffc38(%rbp)
a6c1(7): cmp 0xfffffc18(%rbp),%r15
a6c8(2): jz 0xb(%rip)
a6ca(3): test %r15,%r15
a6cd(6): jnz 0xae3(%rip)
a6d3(7): mov 0xfffffbe0(%rbp),%rax
a6da(3): test %rax,%rax
a6dd(2): jz 0xa(%rip)
a6df(3): mov %rax,%rdi
a6e2(5): call 0xffff737e(%rip)
a6e7(7): mov 0xfffffbf8(%rbp),%rax
a6ee(7): mov 0xfffffd48(%rbp),%rdi
a6f5(4): add $0x20,%rax
a6f9(3): cmp %rax,%rdi
a6fc(2): jz 0x7(%rip)
a6fe(5): call 0xffff7362(%rip)
a703(7): mov 0xfffffbf0(%rbp),%rax
a70a(7): mov 0xfffffc58(%rbp),%rdi
a711(4): add $0x10,%rax
a715(3): cmp %rax,%rdi
a718(2): jz 0x7(%rip)
a71a(5): call 0xffff7346(%rip)
a71f(7): mov 0xfffffc38(%rbp),%rax
a726(3): xor %r15d,%r15d
a729(6): mov $0xc,(%rax)
a72f(4): mov 0xffffffc8(%rbp),%rdi
a733(9): xor $0x28,%rdi
a73c(3): mov %r15,%rax
a73f(6): jnz 0xf08(%rip)
a745(4): lea 0xffffffd8(%rbp),%rsp
a749(1): pop %rbx
a74a(2): pop %r12
a74c(2): pop %r13
a74e(2): pop %r14
a750(2): pop %r15
a752(1): pop %rbp
a753(1): ret near (%rsp)
a754(4): nop 0x0(%rax)
a758(4): add $0x24,%rax
a75c(b): mov $0x0,0xfffffbe0(%rbp)
a767(4): and $0xfffffff0,%rax
a76b(3): sub %rax,%rsp
a76e(5): lea 0xf(%rsp),%rax
a773(4): and $0xfffffff0,%rax
a777(7): mov %rax,0xfffffc28(%rbp)
a77e(5): jmp 0xfffffec7(%rip)
a783(5): nop 0x0(%rax,%rax,1)
a788(3): cmp %rax,%r12
a78b(2): jnb 0x69(%rip)
a78d(3): test %r12,%r12
a790(6): jnz 0x930(%rip)
a796(4): cmp $0xc,%rax
a79a(6): jnbe 0x938(%rip)
a7a0(6): mov $0xc,%r12d
a7a6(7): cmp 0xfffffc18(%rbp),%r15
a7ad(3): setz %dl
a7b0(3): test %r15,%r15
a7b3(6): jz 0x945(%rip)
a7b9(2): test %dl,%dl
a7bb(6): jnz 0x93d(%rip)
a7c1(3): mov %r12,%rsi
a7c4(3): mov %r15,%rdi
a7c7(7): mov %r8,0xfffffc30(%rbp)
a7ce(7): mov %rcx,0xfffffc38(%rbp)
a7d5(5): call 0xffff757b(%rip)
a7da(3): test %rax,%rax
a7dd(7): mov 0xfffffc38(%rbp),%rcx
a7e4(7): mov 0xfffffc30(%rbp),%r8
a7eb(6): jz 0x9b0(%rip)
a7f1(3): mov %rax,%r15
a7f4(4): lea 0x0(%r15,%rbx,1),%rdi
a7f8(3): mov %rcx,%rdx
a7fb(3): mov %r8,%rsi
a7fe(5): call 0xffff74e2(%rip)
a803(7): mov 0xfffffc00(%rbp),%rax
a80a(7): cmp %rax,0xfffffd40(%rbp)
a811(6): jz 0xcba(%rip)
a817(5): movzx 0x48(%r13),%edx
a81c(4): mov 0x50(%r13),%rax
a820(3): cmp $0x25,%dl
a823(6): jz 0x795(%rip)
a829(4): cmp $0xffffffff,%rax
a82d(6): jz 0xc49(%rip)
a833(7): mov 0xfffffc58(%rbp),%r8
a83a(4): shl/sal $0x5,%rax
a83e(3): add %r8,%rax
a841(3): cmp $0x6e,%dl
a844(2): mov (%rax),%edi
a846(6): mov %edi,0xfffffc30(%rbp)
a84c(6): jz 0x7e4(%rip)
a852(4): mov 0x10(%r13),%eax
a856(7): mov 0xfffffc28(%rbp),%rdi
a85d(2): test $0x1,%al
a85f(3): mov $0x25,(%rdi)
a862(4): lea 0x1(%rdi),%rbx
a866(2): jz 0x11(%rip)
a868(7): mov 0xfffffc28(%rbp),%rdi
a86f(4): lea 0x2(%rdi),%rbx
a873(4): mov $0x27,0x1(%rdi)
a877(2): test $0x2,%al
a879(2): jz 0x9(%rip)
a87b(3): mov $0x2d,(%rbx)
a87e(4): add $0x1,%rbx
a882(2): test $0x4,%al
a884(2): jz 0x9(%rip)
a886(3): mov $0x2b,(%rbx)
a889(4): add $0x1,%rbx
a88d(2): test $0x8,%al
a88f(2): jz 0x9(%rip)
a891(3): mov $0x20,(%rbx)
a894(4): add $0x1,%rbx
a898(2): test $0x10,%al
a89a(2): jz 0x9(%rip)
a89c(3): mov $0x23,(%rbx)
a89f(4): add $0x1,%rbx
a8a3(2): test $0x40,%al
a8a5(2): jz 0x9(%rip)
a8a7(3): mov $0x49,(%rbx)
a8aa(4): add $0x1,%rbx
a8ae(2): test $0x20,%al
a8b0(2): jz 0x9(%rip)
a8b2(3): mov $0x30,(%rbx)
a8b5(4): add $0x1,%rbx
a8b9(4): mov 0x18(%r13),%rsi
a8bd(4): mov 0x20(%r13),%rdx
a8c1(3): cmp %rdx,%rsi
a8c4(2): jz 0x32(%rip)
a8c6(3): mov %rdx,%rcx
a8c9(3): mov %rbx,%rdi
a8cc(7): mov %r8,0xfffffc20(%rbp)
a8d3(3): sub %rsi,%rcx
a8d6(3): mov %rcx,%rdx
a8d9(7): mov %rcx,0xfffffc38(%rbp)
a8e0(5): call 0xffff7400(%rip)
a8e5(7): mov 0xfffffc38(%rbp),%rcx
a8ec(7): mov 0xfffffc20(%rbp),%r8
a8f3(3): add %rcx,%rbx
a8f6(4): mov 0x30(%r13),%rsi
a8fa(4): mov 0x38(%r13),%rdx
a8fe(3): cmp %rdx,%rsi
a901(2): jz 0x32(%rip)
a903(3): mov %rdx,%rcx
a906(3): mov %rbx,%rdi
a909(7): mov %r8,0xfffffc20(%rbp)
a910(3): sub %rsi,%rcx
a913(3): mov %rcx,%rdx
a916(7): mov %rcx,0xfffffc38(%rbp)
a91d(5): call 0xffff73c3(%rip)
a922(7): mov 0xfffffc38(%rbp),%rcx
a929(7): mov 0xfffffc20(%rbp),%r8
a930(3): add %rcx,%rbx
a933(6): mov 0xfffffc30(%rbp),%edi
a939(3): cmp $0x10,%edi
a93c(2): jnbe 0x2f(%rip)
a93e(5): mov $0x1,%eax
a943(2): mov %edi,%ecx
a945(3): shl/sal %cl,%rax
a948(5): test $0x14180,%eax
a94d(2): jnz 0x17(%rip)
a94f(3): test $0x10,%ah
a952(6): jnz 0x95e(%rip)
a958(3): test $0x6,%ah
a95b(2): jz 0x10(%rip)
a95d(3): mov $0x6c,(%rbx)
a960(4): add $0x1,%rbx
a964(3): mov $0x6c,(%rbx)
a967(4): add $0x1,%rbx
a96b(5): movzx 0x48(%r13),%eax
a970(4): mov $0x0,0x1(%rbx)
a974(2): mov %al,(%rbx)
a976(4): mov 0x28(%r13),%rax
a97a(4): cmp $0xffffffff,%rax
a97e(6): jz 0x732(%rip)
a984(4): shl/sal $0x5,%rax
a988(3): add %r8,%rax
a98b(3): cmp $0x5,(%rax)
a98e(6): jnz 0xae8(%rip)
a994(3): mov 0x10(%rax),%eax
a997(a): mov $0x1,0xfffffc20(%rbp)
a9a1(6): mov %eax,0xfffffc48(%rbp)
a9a7(4): mov 0x40(%r13),%rax
a9ab(4): cmp $0xffffffff,%rax
a9af(2): jz 0x2d(%rip)
a9b1(4): shl/sal $0x5,%rax
a9b5(3): add %rax,%r8
a9b8(4): cmp $0x5,(%r8)
a9bc(6): jnz 0xaba(%rip)
a9c2(6): mov 0xfffffc20(%rbp),%eax
a9c8(4): mov 0x10(%r8),%edx
a9cc(7): mov %edx,0xfffffc48(%rbp,%rax,4)
a9d3(3): lea 0x1(%rax),%eax
a9d6(6): mov %eax,0xfffffc20(%rbp)
a9dc(3): mov %r14,%rax
a9df(2): xor %edx,%edx
a9e1(4): add $0x2,%rax
a9e5(6): jb 0xc67(%rip)
a9eb(3): cmp %rax,%r12
a9ee(2): jnb 0x4d(%rip)
a9f0(3): test %r12,%r12
a9f3(6): jnz 0x825(%rip)
a9f9(4): cmp $0xc,%rax
a9fd(6): jnbe 0x833(%rip)
aa03(6): mov $0xc,%r12d
aa09(7): cmp 0xfffffc18(%rbp),%r15
aa10(3): setz %dl
aa13(3): test %r15,%r15
aa16(6): jz 0x84a(%rip)
aa1c(2): test %dl,%dl
aa1e(6): jnz 0x842(%rip)
aa24(3): mov %r12,%rsi
aa27(3): mov %r15,%rdi
aa2a(5): call 0xffff7326(%rip)
aa2f(3): test %rax,%rax
aa32(6): jz 0xfffffc83(%rip)
aa38(3): mov %rax,%r15
aa3b(5): mov $0x0,0x0(%r15,%r14,1)
aa40(5): call 0xffff7040(%rip)
aa45(7): mov %rax,0xfffffc38(%rbp)
aa4c(2): mov (%rax),%eax
aa4e(7): mov %rbx,0xfffffc08(%rbp)
aa55(6): mov %eax,0xfffffbdc(%rbp)
aa5b(5): nop 0x0(%rax,%rax,1)
aa60(7): mov 0xfffffc38(%rbp),%rax
aa67(3): mov %r12,%rbx
aa6a(6): mov $0x7fffffff,%r10d
aa70(3): sub %r14,%rbx
aa73(a): mov $0xffffffff,0xfffffc44(%rbp)
aa7d(7): cmp $0x7fffffff,%rbx
aa84(6): mov $0x0,(%rax)
aa8a(6): mov 0xfffffc30(%rbp),%eax
aa90(4): cmovbe %rbx,%r10
aa94(3): cmp $0x11,%eax
aa97(6): jnbe 0x9df(%rip)
aa9d(7): lea 0x41ac(%rip),%rsi
aaa4(4): movsxd 0x0(%rsi,%rax,4),%rax
aaa8(3): add %rsi,%rax
aaab(2): jmp %rax
aaad(3): nop (%rax)
aab0(4): mov 0x50(%r13),%rax
aab4(4): lea 0x0(%r15,%r14,1),%rdi
aab8(4): shl/sal $0x5,%rax
aabc(7): add 0xfffffc58(%rbp),%rax
aac3(4): mov 0x10(%rax),%r9
aac7(6): mov 0xfffffc20(%rbp),%eax
aacd(3): cmp $0x1,%eax
aad0(6): jz 0x4c8(%rip)
aad6(3): cmp $0x2,%eax
aad9(6): jz 0x4a7(%rip)
aadf(4): sub $0x8,%rsp
aae3(6): push 0xfffffc10(%rbp)
aae9(7): mov 0xfffffc28(%rbp),%r8
aaf0(3): mov %r10,%rsi
aaf3(7): mov $0xffffffff,%rcx
aafa(5): mov $0x1,%edx
aaff(2): xor %eax,%eax
ab01(7): mov %r10,0xfffffbd0(%rbp)
ab08(5): call 0xffff6f38(%rip)
ab0d(1): pop %rsi
ab0e(1): pop %rdi
ab0f(7): mov 0xfffffbd0(%rbp),%r10
ab16(6): mov 0xfffffc44(%rbp),%ecx
ab1c(2): test %ecx,%ecx
ab1e(6): js 0x13e(%rip)
ab24(3): movsxd %ecx,%rdx
ab27(3): cmp %r10,%rdx
ab2a(2): jnb 0x10(%rip)
ab2c(3): add %r15,%rdx
ab2f(5): cmp $0x0,0x0(%rdx,%r14,1)
ab34(6): jnz 0x942(%rip)
ab3a(2): cmp %eax,%ecx
ab3c(2): jnl 0xa(%rip)
ab3e(6): mov %eax,0xfffffc44(%rbp)
ab44(2): mov %eax,%ecx
ab46(3): lea 0x1(%rcx),%eax
ab49(3): cmp %r10,%rax
ab4c(6): jb 0x834(%rip)
ab52(7): cmp $0x7ffffffe,%rbx
ab59(6): jnbe 0x847(%rip)
ab5f(4): lea 0x0(%r12,%r12,1),%rsi
ab63(3): lea 0x2(%rcx),%edx
ab66(3): test %r12,%r12
ab69(7): mov $0xffffffff,%rax
ab70(4): cmovns %rsi,%rax
ab74(3): add %r14,%rdx
ab77(6): jb 0xac1(%rip)
ab7d(3): cmp %rdx,%rax
ab80(4): cmovnae %rdx,%rax
ab84(3): cmp %rax,%r12
ab87(6): jnb 0xfffffed9(%rip)
ab8d(3): test %r12,%r12
ab90(6): js 0xfffffb31(%rip)
ab96(3): cmp %rax,%rsi
ab99(3): mov %rsi,%r12
ab9c(2): jnb 0xf(%rip)
ab9e(4): cmp $0xffffffff,%rax
aba2(6): jz 0xfffffb1f(%rip)
aba8(3): mov %rax,%r12
abab(7): cmp 0xfffffc18(%rbp),%r15
abb2(3): setz %bl
abb5(3): test %r15,%r15
abb8(6): jz 0x388(%rip)
abbe(2): test %bl,%bl
abc0(6): jnz 0x380(%rip)
abc6(3): mov %r12,%rsi
abc9(3): mov %r15,%rdi
abcc(5): call 0xffff7184(%rip)
abd1(3): test %rax,%rax
abd4(6): jz 0xfffffaed(%rip)
abda(3): mov %rax,%r15
abdd(5): jmp 0xfffffe83(%rip)
abe2(6): nop 0x0(%rax,%rax,1)
abe8(4): mov 0x50(%r13),%rax
abec(4): lea 0x0(%r15,%r14,1),%rdi
abf0(4): shl/sal $0x5,%rax
abf4(7): add 0xfffffc58(%rbp),%rax
abfb(4): mov 0x10(%rax),%r9d
abff(6): mov 0xfffffc20(%rbp),%eax
ac05(3): cmp $0x1,%eax
ac08(6): jz 0x238(%rip)
ac0e(3): cmp $0x2,%eax
ac11(6): jz 0x277(%rip)
ac17(4): sub $0x8,%rsp
ac1b(6): push 0xfffffc10(%rbp)
ac21(7): mov 0xfffffc28(%rbp),%r8
ac28(7): mov $0xffffffff,%rcx
ac2f(5): mov $0x1,%edx
ac34(3): mov %r10,%rsi
ac37(2): xor %eax,%eax
ac39(7): mov %r10,0xfffffbd0(%rbp)
ac40(5): call 0xffff6e00(%rip)
ac45(1): pop %rdx
ac46(1): pop %rcx
ac47(6): mov 0xfffffc44(%rbp),%ecx
ac4d(7): mov 0xfffffbd0(%rbp),%r10
ac54(2): test %ecx,%ecx
ac56(6): jns 0xfffffece(%rip)
ac5c(7): mov 0xfffffc08(%rbp),%rdi
ac63(4): cmp $0x0,0x1(%rdi)
ac67(6): jnz 0x341(%rip)
ac6d(2): test %eax,%eax
ac6f(6): jns 0xfffffecf(%rip)
ac75(7): mov 0xfffffc38(%rbp),%rax
ac7c(2): mov (%rax),%ebx
ac7e(2): test %ebx,%ebx
ac80(2): jnz 0x20(%rip)
ac82(5): movzx 0x48(%r13),%eax
ac87(5): mov $0x16,%ebx
ac8c(3): and $0xef,%eax
ac8f(2): cmp $0x63,%al
ac91(5): mov $0x54,%eax
ac96(3): cmove %eax,%ebx
ac99(7): nop 0x0(%rax)
aca0(7): cmp 0xfffffc18(%rbp),%r15
aca7(2): jz 0xb(%rip)
aca9(3): test %r15,%r15
acac(6): jnz 0x7b0(%rip)
acb2(7): mov 0xfffffbe0(%rbp),%rax
acb9(3): test %rax,%rax
acbc(2): jz 0xa(%rip)
acbe(3): mov %rax,%rdi
acc1(5): call 0xffff6d9f(%rip)
acc6(7): mov 0xfffffbf8(%rbp),%rax
accd(7): mov 0xfffffd48(%rbp),%rdi
acd4(4): add $0x20,%rax
acd8(3): cmp %rax,%rdi
acdb(2): jz 0x7(%rip)
acdd(5): call 0xffff6d83(%rip)
ace2(7): mov 0xfffffbf0(%rbp),%rax
ace9(7): mov 0xfffffc58(%rbp),%rdi
acf0(4): add $0x10,%rax
acf4(3): cmp %rax,%rdi
acf7(2): jz 0x7(%rip)
acf9(5): call 0xffff6d67(%rip)
acfe(7): mov 0xfffffc38(%rbp),%rax
ad05(3): xor %r15d,%r15d
ad08(2): mov %ebx,(%rax)
ad0a(5): jmp 0xfffffa25(%rip)
ad0f(1): nop 
ad10(4): mov 0x50(%r13),%rax
ad14(4): lea 0x0(%r15,%r14,1),%rdi
ad18(4): shl/sal $0x5,%rax
ad1c(7): add 0xfffffc58(%rbp),%rax
ad23(3): fld 0x10(%rax),%st0
ad26(6): mov 0xfffffc20(%rbp),%eax
ad2c(3): cmp $0x1,%eax
ad2f(6): jz 0x631(%rip)
ad35(3): cmp $0x2,%eax
ad38(6): jnz 0x4c8(%rip)
ad3e(6): mov 0xfffffc4c(%rbp),%eax
ad44(4): sub $0x8,%rsp
ad48(6): push 0xfffffc10(%rbp)
ad4e(7): mov 0xfffffc48(%rbp),%r9d
ad55(7): mov 0xfffffc28(%rbp),%r8
ad5c(3): mov %r10,%rsi
ad5f(4): sub $0x18,%rsp
ad63(7): mov $0xffffffff,%rcx
ad6a(5): mov $0x1,%edx
ad6f(4): fstp %st0,0x8(%rsp)
ad73(1): push %rax
ad74(2): xor %eax,%eax
ad76(7): mov %r10,0xfffffbd0(%rbp)
ad7d(5): call 0xffff6cc3(%rip)
ad82(4): add $0x30,%rsp
ad86(7): mov 0xfffffbd0(%rbp),%r10
ad8d(5): jmp 0xfffffd89(%rip)
ad92(6): nop 0x0(%rax,%rax,1)
ad98(4): mov 0x50(%r13),%rax
ad9c(4): lea 0x0(%r15,%r14,1),%rdi
ada0(4): shl/sal $0x5,%rax
ada4(7): add 0xfffffc58(%rbp),%rax
adab(5): movsd 0x10(%rax),%xmm0
adb0(6): mov 0xfffffc20(%rbp),%eax
adb6(3): cmp $0x1,%eax
adb9(6): jz 0x597(%rip)
adbf(3): cmp $0x2,%eax
adc2(6): jnz 0x3fe(%rip)
adc8(6): mov 0xfffffc4c(%rbp),%eax
adce(6): push 0xfffffc10(%rbp)
add4(1): push %rax
add5(7): mov 0xfffffc48(%rbp),%r9d
addc(7): mov 0xfffffc28(%rbp),%r8
ade3(3): mov %r10,%rsi
ade6(7): mov $0xffffffff,%rcx
aded(5): mov $0x1,%edx
adf2(5): mov $0x1,%eax
adf7(7): mov %r10,0xfffffbd0(%rbp)
adfe(5): call 0xffff6c42(%rip)
ae03(2): pop %r8
ae05(7): mov 0xfffffbd0(%rbp),%r10
ae0c(2): pop %r9
ae0e(5): jmp 0xfffffd08(%rip)
ae13(5): nop 0x0(%rax,%rax,1)
ae18(4): mov 0x50(%r13),%rax
ae1c(4): lea 0x0(%r15,%r14,1),%rdi
ae20(4): shl/sal $0x5,%rax
ae24(7): add 0xfffffc58(%rbp),%rax
ae2b(5): movzx 0x10(%rax),%r9d
ae30(6): mov 0xfffffc20(%rbp),%eax
ae36(3): cmp $0x1,%eax
ae39(6): jnz 0xfffffdd5(%rip)
ae3f(1): nop 
ae40(6): push 0xfffffc10(%rbp)
ae46(2): push %r9
ae48(7): mov 0xfffffc48(%rbp),%r9d
ae4f(5): jmp 0xfffffdd2(%rip)
ae54(4): nop 0x0(%rax)
ae58(4): mov 0x50(%r13),%rax
ae5c(4): lea 0x0(%r15,%r14,1),%rdi
ae60(4): shl/sal $0x5,%rax
ae64(7): add 0xfffffc58(%rbp),%rax
ae6b(5): movsx 0x10(%rax),%r9d
ae70(6): mov 0xfffffc20(%rbp),%eax
ae76(3): cmp $0x1,%eax
ae79(2): jz 0xffffffc7(%rip)
ae7b(3): cmp $0x2,%eax
ae7e(6): jnz 0xfffffd99(%rip)
ae84(4): nop 0x0(%rax)
ae88(4): sub $0x8,%rsp
ae8c(6): push 0xfffffc10(%rbp)
ae92(2): push %r9
ae94(6): mov 0xfffffc4c(%rbp),%eax
ae9a(1): push %rax
ae9b(7): mov 0xfffffc48(%rbp),%r9d
aea2(7): mov 0xfffffc28(%rbp),%r8
aea9(3): mov %r10,%rsi
aeac(7): mov $0xffffffff,%rcx
aeb3(5): mov $0x1,%edx
aeb8(2): xor %eax,%eax
aeba(7): mov %r10,0xfffffbd0(%rbp)
aec1(5): call 0xffff6b7f(%rip)
aec6(4): add $0x20,%rsp
aeca(7): mov 0xfffffbd0(%rbp),%r10
aed1(5): jmp 0xfffffc45(%rip)
aed6(a): nop 0x0(%rax,%rax,1)
aee0(4): mov 0x50(%r13),%rax
aee4(4): lea 0x0(%r15,%r14,1),%rdi
aee8(4): shl/sal $0x5,%rax
aeec(7): add 0xfffffc58(%rbp),%rax
aef3(5): movzx 0x10(%rax),%r9d
aef8(6): mov 0xfffffc20(%rbp),%eax
aefe(3): cmp $0x1,%eax
af01(6): jnz 0xfffffd0d(%rip)
af07(5): jmp 0xffffff39(%rip)
af0c(4): nop 0x0(%rax)
af10(4): mov 0x50(%r13),%rax
af14(4): lea 0x0(%r15,%r14,1),%rdi
af18(4): shl/sal $0x5,%rax
af1c(7): add 0xfffffc58(%rbp),%rax
af23(5): movsx 0x10(%rax),%r9d
af28(6): mov 0xfffffc20(%rbp),%eax
af2e(3): cmp $0x1,%eax
af31(6): jnz 0xfffffcdd(%rip)
af37(5): jmp 0xffffff09(%rip)
af3c(4): nop 0x0(%rax)
af40(3): mov %r12,%rdi
af43(5): call 0xffff6dbd(%rip)
af48(3): test %rax,%rax
af4b(3): mov %rax,%rcx
af4e(6): jz 0xfffff773(%rip)
af54(3): test %r14,%r14
af57(6): jz 0xb9(%rip)
af5d(2): test %bl,%bl
af5f(6): jz 0xb1(%rip)
af65(3): mov %r15,%rsi
af68(3): mov %r14,%rdx
af6b(3): mov %rax,%rdi
af6e(5): call 0xffff6d72(%rip)
af73(3): mov %rax,%r15
af76(5): jmp 0xfffffaea(%rip)
af7b(5): nop 0x0(%rax,%rax,1)
af80(4): sub $0x8,%rsp
af84(6): push 0xfffffc10(%rbp)
af8a(2): push %r9
af8c(5): jmp 0xffffff08(%rip)
af91(7): nop 0x0(%rax)
af98(6): push 0xfffffc10(%rbp)
af9e(2): push %r9
afa0(5): jmp 0xfffffea8(%rip)
afa5(3): nop (%rax)
afa8(4): mov $0x0,0x1(%rdi)
afac(5): jmp 0xfffffab4(%rip)
afb1(7): nop 0x0(%rax)
afb8(4): cmp $0xffffffff,%rax
afbc(6): jnz 0x4ba(%rip)
afc2(3): mov %r14,%rax
afc5(4): add $0x1,%rax
afc9(3): mov %rax,%rbx
afcc(6): jnb 0x8c(%rip)
afd2(4): cmp $0xffffffff,%r12
afd6(6): jnz 0xfffff6df(%rip)
afdc(3): mov %r12,%rbx
afdf(5): mov $0x25,0x0(%r15,%r14,1)
afe4(4): mov 0x8(%r13),%r8
afe8(4): add $0x58,%r13
afec(4): mov 0x0(%r13),%rcx
aff0(8): add $0x1,0xfffffc00(%rbp)
aff8(3): cmp %r8,%rcx
affb(6): jnz 0xfffff69e(%rip)
b001(3): mov %rbx,%r14
b004(5): jmp 0xfffff7ff(%rip)
b009(7): nop 0x0(%rax)
b010(3): mov %rcx,%r15
b013(5): jmp 0xfffffa4d(%rip)
b018(5): call 0xffff6a68(%rip)
b01d(7): mov %rax,0xfffffc38(%rbp)
b024(5): jmp 0xfffff6c3(%rip)
b029(7): nop 0x0(%rax)
b030(2): mov %edi,%edx
b032(3): sub $0x12,%edx
b035(3): cmp $0x4,%edx
b038(6): jnbe 0x43e(%rip)
b03e(7): lea 0x3c53(%rip),%rdi
b045(4): mov 0x10(%rax),%rax
b049(4): movsxd 0x0(%rdi,%rdx,4),%rdx
b04d(3): add %rdi,%rdx
b050(2): jmp %rdx
b052(6): nop 0x0(%rax,%rax,1)
b058(3): cmp %rax,%r12
b05b(2): jnb 0xffffff84(%rip)
b05d(3): test %r12,%r12
b060(6): jnz 0x3d0(%rip)
b066(4): cmp $0xc,%rax
b06a(6): jnbe 0x3d8(%rip)
b070(6): mov $0xc,%r12d
b076(7): cmp 0xfffffc18(%rbp),%r15
b07d(3): setz %dl
b080(3): test %r15,%r15
b083(6): jz 0x26d(%rip)
b089(2): test %dl,%dl
b08b(6): jnz 0x265(%rip)
b091(3): mov %r12,%rsi
b094(3): mov %r15,%rdi
b097(5): call 0xffff6cb9(%rip)
b09c(3): test %rax,%rax
b09f(6): jz 0xfc(%rip)
b0a5(3): mov %rax,%r15
b0a8(5): jmp 0xffffff37(%rip)
b0ad(3): nop (%rax)
b0b0(a): mov $0x0,0xfffffc20(%rbp)
b0ba(5): jmp 0xfffff8ed(%rip)
b0bf(1): nop 
b0c0(6): js 0xfffff5f5(%rip)
b0c6(3): add %r12,%r12
b0c9(3): cmp %rax,%r12
b0cc(6): jnb 0xfffff6da(%rip)
b0d2(4): cmp $0xffffffff,%rax
b0d6(6): jz 0xfffff5df(%rip)
b0dc(7): cmp 0xfffffc18(%rbp),%r15
b0e3(3): mov %rax,%r12
b0e6(3): setz %dl
b0e9(3): test %r15,%r15
b0ec(6): jnz 0xfffff6cd(%rip)
b0f2(6): nop 0x0(%rax,%rax,1)
b0f8(3): mov %r12,%rdi
b0fb(7): mov %r8,0xfffffc20(%rbp)
b102(6): mov %dl,0xfffffc30(%rbp)
b108(7): mov %rcx,0xfffffc38(%rbp)
b10f(5): call 0xffff6bf1(%rip)
b114(3): test %rax,%rax
b117(3): mov %rax,%r9
b11a(7): mov 0xfffffc38(%rbp),%rcx
b121(7): movzx 0xfffffc30(%rbp),%edx
b128(7): mov 0xfffffc20(%rbp),%r8
b12f(6): jz 0xfffff586(%rip)
b135(3): test %rbx,%rbx
b138(6): jz 0x208(%rip)
b13e(2): test %dl,%dl
b140(6): jz 0x200(%rip)
b146(3): mov %r15,%rsi
b149(3): mov %rbx,%rdx
b14c(3): mov %rax,%rdi
b14f(7): mov %r8,0xfffffc30(%rbp)
b156(7): mov %rcx,0xfffffc38(%rbp)
b15d(5): call 0xffff6b83(%rip)
b162(7): mov 0xfffffc38(%rbp),%rcx
b169(3): mov %rax,%r15
b16c(7): mov 0xfffffc30(%rbp),%r8
b173(5): jmp 0xfffff681(%rip)
b178(8): nop 0x0(%rax,%rax,1)
b180(3): mov %r12,%r14
b183(5): jmp 0xfffff671(%rip)
b188(8): nop 0x0(%rax,%rax,1)
b190(3): mov %r14,(%rax)
b193(3): mov %r14,%rbx
b196(5): jmp 0xfffffe4e(%rip)
b19b(5): call 0xffff68e5(%rip)
b1a0(7): mov %rax,0xfffffc38(%rbp)
b1a7(9): nop 0x0(%rax,%rax,1)
b1b0(3): mov %r15,%rdi
b1b3(5): call 0xffff68ad(%rip)
b1b8(5): jmp 0xfffff51b(%rip)
b1bd(3): nop (%rax)
b1c0(7): mov 0xfffffc10(%rbp),%r9
b1c7(7): mov 0xfffffc28(%rbp),%r8
b1ce(3): mov %r10,%rsi
b1d1(7): mov $0xffffffff,%rcx
b1d8(5): mov $0x1,%edx
b1dd(5): mov $0x1,%eax
b1e2(7): mov %r10,0xfffffbd0(%rbp)
b1e9(5): call 0xffff6857(%rip)
b1ee(7): mov 0xfffffbd0(%rbp),%r10
b1f5(5): jmp 0xfffff921(%rip)
b1fa(6): nop 0x0(%rax,%rax,1)
b200(4): sub $0x10,%rsp
b204(7): mov 0xfffffc10(%rbp),%r9
b20b(3): fstp %st0,(%rsp)
b20e(5): jmp 0xfffff8db(%rip)
b213(5): nop 0x0(%rax,%rax,1)
b218(6): js 0xfffff49d(%rip)
b21e(3): add %r12,%r12
b221(3): cmp %rax,%r12
b224(6): jnb 0xfffff7e5(%rip)
b22a(6): nop 0x0(%rax,%rax,1)
b230(3): test %rdx,%rdx
b233(6): jnz 0xfffff482(%rip)
b239(4): cmp $0xffffffff,%rax
b23d(6): jz 0xfffff478(%rip)
b243(7): cmp 0xfffffc18(%rbp),%r15
b24a(3): mov %rax,%r12
b24d(3): setz %dl
b250(3): test %r15,%r15
b253(6): jnz 0xfffff7c9(%rip)
b259(7): nop 0x0(%rax)
b260(3): mov %r12,%rdi
b263(6): mov %dl,0xfffffc38(%rbp)
b269(5): call 0xffff6a97(%rip)
b26e(3): test %rax,%rax
b271(3): mov %rax,%rcx
b274(7): movzx 0xfffffc38(%rbp),%edx
b27b(6): jz 0xfffff43a(%rip)
b281(3): test %r14,%r14
b284(6): jz 0x19c(%rip)
b28a(2): test %dl,%dl
b28c(6): jz 0x194(%rip)
b292(3): mov %r15,%rsi
b295(3): mov %r14,%rdx
b298(3): mov %rax,%rdi
b29b(5): call 0xffff6a45(%rip)
b2a0(3): mov %rax,%r15
b2a3(5): jmp 0xfffff798(%rip)
b2a8(8): nop 0x0(%rax,%rax,1)
b2b0(3): mov $0x4c,(%rbx)
b2b3(4): add $0x1,%rbx
b2b7(5): jmp 0xfffff6b4(%rip)
b2bc(4): nop 0x0(%rax)
b2c0(3): mov %r14b,(%rax)
b2c3(3): mov %r14,%rbx
b2c6(5): jmp 0xfffffd1e(%rip)
b2cb(5): nop 0x0(%rax,%rax,1)
b2d0(3): mov %r14d,(%rax)
b2d3(3): mov %r14,%rbx
b2d6(5): jmp 0xfffffd0e(%rip)
b2db(5): nop 0x0(%rax,%rax,1)
b2e0(4): mov %r14w,(%rax)
b2e4(3): mov %r14,%rbx
b2e7(5): jmp 0xfffffcfd(%rip)
b2ec(4): nop 0x0(%rax)
b2f0(3): mov %r12,%rdi
b2f3(6): mov %dl,0xfffffc38(%rbp)
b2f9(5): call 0xffff6a07(%rip)
b2fe(3): test %rax,%rax
b301(3): mov %rax,%rcx
b304(7): movzx 0xfffffc38(%rbp),%edx
b30b(6): jz 0xfffff3aa(%rip)
b311(3): test %r14,%r14
b314(6): jz 0x140(%rip)
b31a(2): test %dl,%dl
b31c(6): jz 0x138(%rip)
b322(3): mov %r15,%rsi
b325(3): mov %r14,%rdx
b328(3): mov %rax,%rdi
b32b(5): call 0xffff69b5(%rip)
b330(3): mov %rax,%r15
b333(5): jmp 0xfffffcac(%rip)
b338(8): nop 0x0(%rax,%rax,1)
b340(3): mov %r9,%r15
b343(5): jmp 0xfffff4b1(%rip)
b348(8): nop 0x0(%rax,%rax,1)
b350(4): sub $0x8,%rsp
b354(6): push 0xfffffc10(%rbp)
b35a(5): jmp 0xfffffa7b(%rip)
b35f(1): nop 
b360(4): sub $0x8,%rsp
b364(6): push 0xfffffc10(%rbp)
b36a(4): sub $0x10,%rsp
b36e(3): fstp %st0,(%rsp)
b371(5): jmp 0xfffffb2a(%rip)
b376(a): nop 0x0(%rax,%rax,1)
b380(7): mov 0xfffffc38(%rbp),%rax
b387(6): mov 0xfffffbdc(%rbp),%edi
b38d(3): movsxd %ecx,%rbx
b390(3): add %r14,%rbx
b393(2): mov %edi,(%rax)
b395(5): jmp 0xfffffc4f(%rip)
b39a(6): nop 0x0(%rax,%rax,1)
b3a0(7): cmp 0xfffffc18(%rbp),%r15
b3a7(2): jz 0xb(%rip)
b3a9(3): test %r15,%r15
b3ac(6): jnz 0xbd(%rip)
b3b2(7): mov 0xfffffbe0(%rbp),%rax
b3b9(3): test %rax,%rax
b3bc(2): jz 0xa(%rip)
b3be(3): mov %rax,%rdi
b3c1(5): call 0xffff669f(%rip)
b3c6(7): mov 0xfffffbf8(%rbp),%rax
b3cd(7): mov 0xfffffd48(%rbp),%rdi
b3d4(4): add $0x20,%rax
b3d8(3): cmp %rax,%rdi
b3db(2): jz 0x7(%rip)
b3dd(5): call 0xffff6683(%rip)
b3e2(7): mov 0xfffffbf0(%rbp),%rax
b3e9(7): mov 0xfffffc58(%rbp),%rdi
b3f0(4): add $0x10,%rax
b3f4(3): cmp %rax,%rdi
b3f7(2): jz 0x7(%rip)
b3f9(5): call 0xffff6667(%rip)
b3fe(7): mov 0xfffffc38(%rbp),%rax
b405(3): xor %r15d,%r15d
b408(6): mov $0x4b,(%rax)
b40e(5): jmp 0xfffff321(%rip)
b413(5): nop 0x0(%rax,%rax,1)
b418(3): xor %r15d,%r15d
b41b(5): jmp 0xfffff314(%rip)
b420(3): mov %rcx,%r15
b423(5): jmp 0xfffff618(%rip)
b428(8): nop 0x0(%rax,%rax,1)
b430(6): js 0xfffff285(%rip)
b436(3): add %r12,%r12
b439(3): cmp %rax,%r12
b43c(6): jnb 0xfffffc3a(%rip)
b442(4): cmp $0xffffffff,%rax
b446(6): jz 0xfffff26f(%rip)
b44c(3): mov %rax,%r12
b44f(5): jmp 0xfffffc27(%rip)
b454(3): mov %rcx,%r15
b457(5): jmp 0xfffffb88(%rip)
b45c(3): mov %r15,%rdi
b45f(5): call 0xffff6601(%rip)
b464(5): jmp 0xfffff84e(%rip)
b469(3): mov %r15,%rdi
b46c(5): call 0xffff65f4(%rip)
b471(5): jmp 0xffffff41(%rip)
b476(5): call 0xffff65fa(%rip)
b47b(5): nop 0x0(%rax,%rax,1)
b480(7): mov 0xfffffbf8(%rbp),%rax
b487(7): mov 0xfffffd48(%rbp),%rdi
b48e(4): add $0x20,%rax
b492(3): cmp %rax,%rdi
b495(2): jz 0x7(%rip)
b497(5): call 0xffff65c9(%rip)
b49c(7): mov 0xfffffbf0(%rbp),%rax
b4a3(7): mov 0xfffffc58(%rbp),%rdi
b4aa(4): add $0x10,%rax
b4ae(3): cmp %rax,%rdi
b4b1(2): jz 0x7(%rip)
b4b3(5): call 0xffff65ad(%rip)
b4b8(5): call 0xffff65c8(%rip)
b4bd(3): xor %r15d,%r15d
b4c0(6): mov $0x16,(%rax)
b4c6(5): jmp 0xfffff269(%rip)
b4cb(3): mov %r14,%rbx
b4ce(2): xor %eax,%eax
b4d0(4): add $0x1,%rbx
b4d4(6): jb 0x10c(%rip)
b4da(3): cmp %rbx,%r12
b4dd(2): jnb 0x4f(%rip)
b4df(3): test %r12,%r12
b4e2(6): jnz 0x137(%rip)
b4e8(4): cmp $0xc,%rbx
b4ec(6): jnbe 0x112(%rip)
b4f2(6): mov $0xc,%r12d
b4f8(7): cmp 0xfffffc18(%rbp),%r15
b4ff(4): setz %r13b
b503(3): test %r15,%r15
b506(6): jz 0xa6(%rip)
b50c(3): test %r13b,%r13b
b50f(6): jnz 0x9d(%rip)
b515(3): mov %r12,%rsi
b518(3): mov %r15,%rdi
b51b(5): call 0xffff6835(%rip)
b520(3): test %rax,%rax
b523(6): jz 0xfffffc78(%rip)
b529(3): mov %rax,%r15
b52c(7): cmp 0xfffffc18(%rbp),%r15
b533(5): mov $0x0,0x0(%r15,%r14,1)
b538(2): jz 0x19(%rip)
b53a(3): cmp %rbx,%r12
b53d(2): jbe 0x14(%rip)
b53f(3): mov %r15,%rdi
b542(3): mov %rbx,%rsi
b545(5): call 0xffff680b(%rip)
b54a(3): test %rax,%rax
b54d(4): cmovne %rax,%r15
b551(7): mov 0xfffffbe0(%rbp),%rax
b558(3): test %rax,%rax
b55b(2): jz 0xa(%rip)
b55d(3): mov %rax,%rdi
b560(5): call 0xffff6500(%rip)
b565(7): mov 0xfffffbf8(%rbp),%rax
b56c(7): mov 0xfffffd48(%rbp),%rdi
b573(4): add $0x20,%rax
b577(3): cmp %rax,%rdi
b57a(2): jz 0x7(%rip)
b57c(5): call 0xffff64e4(%rip)
b581(7): mov 0xfffffbf0(%rbp),%rax
b588(7): mov 0xfffffc58(%rbp),%rdi
b58f(4): add $0x10,%rax
b593(3): cmp %rax,%rdi
b596(2): jz 0x7(%rip)
b598(5): call 0xffff64c8(%rip)
b59d(7): mov 0xfffffbe8(%rbp),%rax
b5a4(3): mov %r14,(%rax)
b5a7(5): jmp 0xfffff188(%rip)
b5ac(3): mov %r12,%rdi
b5af(5): call 0xffff6751(%rip)
b5b4(3): test %rax,%rax
b5b7(3): mov %rax,%rcx
b5ba(6): jz 0xfffff0fb(%rip)
b5c0(3): test %r14,%r14
b5c3(2): jz 0x6d(%rip)
b5c5(3): test %r13b,%r13b
b5c8(2): jz 0x68(%rip)
b5ca(3): mov %r15,%rsi
b5cd(3): mov %r14,%rdx
b5d0(3): mov %rax,%rdi
b5d3(5): call 0xffff670d(%rip)
b5d8(3): mov %rax,%r15
b5db(5): jmp 0xffffff51(%rip)
b5e0(4): cmp $0xffffffff,%r12
b5e4(5): mov $0x1,%eax
b5e9(6): jz 0xffffff43(%rip)
b5ef(3): test %r12,%r12
b5f2(6): jz 0xfffff0c3(%rip)
b5f8(6): js 0xfffff0bd(%rip)
b5fe(3): test %rax,%rax
b601(6): jnz 0xfffff0b4(%rip)
b607(4): cmp $0xffffffff,%rbx
b60b(6): jz 0xfffff0aa(%rip)
b611(3): mov %rbx,%r12
b614(5): jmp 0xfffffee4(%rip)
b619(6): js 0xfffff09c(%rip)
b61f(3): add %r12,%r12
b622(3): cmp %rbx,%r12
b625(6): jnb 0xfffffed3(%rip)
b62b(2): jmp 0xffffffd3(%rip)
b62d(3): nop (%rax)
b630(3): mov %rcx,%r15
b633(5): jmp 0xfffffef9(%rip)
b638(4): cmp $0xffffffff,%r12
b63c(6): jz 0xfffff424(%rip)
b642(5): jmp 0xfffff07f(%rip)
b647(5): call 0xffff6549(%rip)
b64c(4): cmp $0xffffffff,%r12
b650(5): mov $0x1,%edx
b655(6): jz 0xfffff3e6(%rip)
b65b(3): test %r12,%r12
b65e(6): jz 0xfffff057(%rip)
b664(6): jns 0xfffffbcc(%rip)
b66a(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
b670(4): cmp $0x0,(%rsi)
b674(4): mov 0x8(%rsi),%rax
b678(2): jz 0x65(%rip)
b67a(7): lea 0x363f(%rip),%r8
b681(7): lea 0x3698(%rip),%r10
b688(7): lea 0x361d(%rip),%r9
b68f(2): xor %ecx,%ecx
b691(7): nop 0x0(%rax)
b698(3): cmp $0x16,(%rax)
b69b(2): jnbe 0x45(%rip)
b69d(2): mov (%rax),%edx
b69f(4): movsxd 0x0(%r8,%rdx,4),%rdx
b6a3(3): add %r8,%rdx
b6a6(2): jmp %rdx
b6a8(8): nop 0x0(%rax,%rax,1)
b6b0(4): mov 0x8(%rdi),%rdx
b6b4(4): add $0xf,%rdx
b6b8(4): and $0xfffffff0,%rdx
b6bc(4): lea 0x10(%rdx),%r11
b6c0(4): mov %r11,0x8(%rdi)
b6c4(2): fld (%rdx),%st0
b6c6(3): fstp %st0,0x10(%rax)
b6c9(7): nop 0x0(%rax)
b6d0(4): add $0x1,%rcx
b6d4(4): add $0x20,%rax
b6d8(3): cmp %rcx,(%rsi)
b6db(2): jnbe 0xffffffbd(%rip)
b6dd(2): xor %eax,%eax
b6df(1): ret near (%rsp)
b6e0(5): mov $0xffffffff,%eax
b6e5(1): ret near (%rsp)
b6e6(3): mov (%rdi),%r11d
b6e9(4): cmp $0x2f,%r11d
b6ed(6): jnbe 0x13d(%rip)
b6f3(3): mov %r11d,%edx
b6f6(4): add 0x10(%rdi),%rdx
b6fa(4): add $0x8,%r11d
b6fe(3): mov %r11d,(%rdi)
b701(3): mov (%rdx),%rdx
b704(4): mov %rdx,0x10(%rax)
b708(2): jmp 0xffffffc8(%rip)
b70a(3): mov (%rdi),%r11d
b70d(4): cmp $0x2f,%r11d
b711(6): jnbe 0x13b(%rip)
b717(3): mov %r11d,%edx
b71a(4): add 0x10(%rdi),%rdx
b71e(4): add $0x8,%r11d
b722(3): mov %r11d,(%rdi)
b725(2): mov (%rdx),%edx
b727(3): mov %edx,0x10(%rax)
b72a(2): jmp 0xffffffa6(%rip)
b72c(3): mov (%rdi),%r11d
b72f(4): cmp $0x2f,%r11d
b733(6): jnbe 0x108(%rip)
b739(3): mov %r11d,%edx
b73c(4): add 0x10(%rdi),%rdx
b740(4): add $0x8,%r11d
b744(3): mov %r11d,(%rdi)
b747(2): mov (%rdx),%edx
b749(3): mov %dl,0x10(%rax)
b74c(2): jmp 0xffffff84(%rip)
b74e(3): mov (%rdi),%r11d
b751(4): cmp $0x2f,%r11d
b755(6): jnbe 0xa5(%rip)
b75b(3): mov %r11d,%edx
b75e(4): add 0x10(%rdi),%rdx
b762(4): add $0x8,%r11d
b766(3): mov %r11d,(%rdi)
b769(2): mov (%rdx),%edx
b76b(4): mov %dx,0x10(%rax)
b76f(5): jmp 0xffffff61(%rip)
b774(3): mov (%rdi),%r11d
b777(4): cmp $0x2f,%r11d
b77b(6): jnbe 0x90(%rip)
b781(3): mov %r11d,%edx
b784(4): add 0x10(%rdi),%rdx
b788(4): add $0x8,%r11d
b78c(3): mov %r11d,(%rdi)
b78f(3): mov (%rdx),%rdx
b792(3): test %rdx,%rdx
b795(4): cmove %r9,%rdx
b799(4): mov %rdx,0x10(%rax)
b79d(5): jmp 0xffffff33(%rip)
b7a2(4): mov 0x4(%rdi),%r11d
b7a6(7): cmp $0xaf,%r11d
b7ad(6): jnbe 0xb0(%rip)
b7b3(3): mov %r11d,%edx
b7b6(4): add 0x10(%rdi),%rdx
b7ba(4): add $0x10,%r11d
b7be(4): mov %r11d,0x4(%rdi)
b7c2(4): movsd (%rdx),%xmm0
b7c6(5): movsd %xmm0,0x10(%rax)
b7cb(5): jmp 0xffffff05(%rip)
b7d0(3): mov (%rdi),%r11d
b7d3(4): cmp $0x2f,%r11d
b7d7(2): jnbe 0x45(%rip)
b7d9(3): mov %r11d,%edx
b7dc(4): add 0x10(%rdi),%rdx
b7e0(4): add $0x8,%r11d
b7e4(3): mov %r11d,(%rdi)
b7e7(3): mov (%rdx),%rdx
b7ea(3): test %rdx,%rdx
b7ed(4): cmove %r10,%rdx
b7f1(4): mov %rdx,0x10(%rax)
b7f5(5): jmp 0xfffffedb(%rip)
b7fa(4): mov 0x8(%rdi),%rdx
b7fe(4): lea 0x8(%rdx),%r11
b802(4): mov %r11,0x8(%rdi)
b806(5): jmp 0xffffff63(%rip)
b80b(4): mov 0x8(%rdi),%rdx
b80f(4): lea 0x8(%rdx),%r11
b813(4): mov %r11,0x8(%rdi)
b817(5): jmp 0xffffff78(%rip)
b81c(4): mov 0x8(%rdi),%rdx
b820(4): lea 0x8(%rdx),%r11
b824(4): mov %r11,0x8(%rdi)
b828(2): jmp 0xffffffbf(%rip)
b82a(4): mov 0x8(%rdi),%rdx
b82e(4): lea 0x8(%rdx),%r11
b832(4): mov %r11,0x8(%rdi)
b836(5): jmp 0xfffffecb(%rip)
b83b(4): mov 0x8(%rdi),%rdx
b83f(4): lea 0x8(%rdx),%r11
b843(4): mov %r11,0x8(%rdi)
b847(5): jmp 0xffffff00(%rip)
b84c(4): mov 0x8(%rdi),%rdx
b850(4): lea 0x8(%rdx),%r11
b854(4): mov %r11,0x8(%rdi)
b858(5): jmp 0xfffffecd(%rip)
b85d(4): mov 0x8(%rdi),%rdx
b861(4): lea 0x8(%rdx),%r11
b865(4): mov %r11,0x8(%rdi)
b869(5): jmp 0xffffff59(%rip)

"printf_parse" :
b870(2): push %r15
b872(2): push %r14
b874(4): lea 0x20(%rsi),%rcx
b878(2): push %r13
b87a(2): push %r12
b87c(4): lea 0x10(%rdx),%rax
b880(1): push %rbp
b881(1): push %rbx
b882(3): mov %rsi,%r14
b885(3): mov %rdx,%r15
b888(2): xor %ebx,%ebx
b88a(6): mov $0x7,%r9d
b890(4): sub $0x58,%rsp
b894(6): mov $0x7,%r10d
b89a(7): mov $0x0,(%rsi)
b8a1(4): mov %rcx,0x8(%rsi)
b8a5(5): mov %rcx,0x28(%rsp)
b8aa(7): mov $0xffffffff,%r8
b8b1(7): mov $0x0,(%rdx)
b8b8(5): mov %rax,0x8(%rsp)
b8bd(4): mov %rax,0x8(%rdx)
b8c1(9): mov $0x0,0x18(%rsp)
b8ca(9): mov $0x0,0x10(%rsp)
b8d3(9): mov $0x0,0x20(%rsp)
b8dc(2): jmp 0xf(%rip)
b8de(2): nop 
b8e0(2): cmp $0x25,%al
b8e2(4): lea 0x1(%rdi),%rbp
b8e6(2): jz 0x42(%rip)
b8e8(3): mov %rbp,%rdi
b8eb(3): movzx (%rdi),%eax
b8ee(2): test %al,%al
b8f0(2): jnz 0xfffffff0(%rip)
b8f2(4): lea 0x0(%rbx,%rbx,4),%rax
b8f6(4): lea 0x0(%rbx,%rax,2),%rax
b8fa(4): mov %rdi,0x0(%rcx,%rax,8)
b8fe(5): mov 0x10(%rsp),%rax
b903(4): mov %rax,0x10(%r14)
b907(5): mov 0x18(%rsp),%rax
b90c(4): mov %rax,0x18(%r14)
b910(2): xor %eax,%eax
b912(4): add $0x58,%rsp
b916(1): pop %rbx
b917(1): pop %rbp
b918(2): pop %r12
b91a(2): pop %r13
b91c(2): pop %r14
b91e(2): pop %r15
b920(1): ret near (%rsp)
b921(7): nop 0x0(%rax)
b928(4): lea 0x0(%rbx,%rbx,4),%rax
b92c(3): mov %r8,%r13
b92f(4): lea 0x0(%rbx,%rax,2),%rax
b933(4): lea 0x0(%rcx,%rax,8),%r12
b937(4): mov %rdi,(%r12)
b93b(9): mov $0x0,0x10(%r12)
b944(9): mov $0x0,0x18(%r12)
b94d(9): mov $0x0,0x20(%r12)
b956(5): mov %r8,0x28(%r12)
b95b(9): mov $0x0,0x30(%r12)
b964(9): mov $0x0,0x38(%r12)
b96d(5): mov %r8,0x40(%r12)
b972(5): mov %r8,0x50(%r12)
b977(4): movzx 0x1(%rdi),%ebx
b97b(3): lea 0xffffffd0(%rbx),%eax
b97e(2): cmp $0x9,%al
b980(2): jnbe 0x3e(%rip)
b982(5): jmp 0x438(%rip)
b987(9): nop 0x0(%rax,%rax,1)
b990(3): cmp $0x2d,%bl
b993(2): jz 0x45(%rip)
b995(3): cmp $0x2b,%bl
b998(2): jz 0x48(%rip)
b99a(3): cmp $0x20,%bl
b99d(2): jz 0x53(%rip)
b99f(3): cmp $0x23,%bl
b9a2(2): jz 0x5e(%rip)
b9a4(3): cmp $0x30,%bl
b9a7(2): jz 0x69(%rip)
b9a9(3): cmp $0x49,%bl
b9ac(2): jnz 0x74(%rip)
b9ae(6): or $0x40,0x10(%r12)
b9b4(4): nop 0x0(%rax)
b9b8(3): movzx (%rax),%ebx
b9bb(3): mov %rax,%rbp
b9be(4): lea 0x1(%rbp),%rax
b9c2(3): cmp $0x27,%bl
b9c5(3): mov %rax,%rdx
b9c8(2): jnz 0xffffffc8(%rip)
b9ca(6): or $0x1,0x10(%r12)
b9d0(2): jmp 0xffffffe8(%rip)
b9d2(6): nop 0x0(%rax,%rax,1)
b9d8(6): or $0x2,0x10(%r12)
b9de(2): jmp 0xffffffda(%rip)
b9e0(6): or $0x4,0x10(%r12)
b9e6(2): jmp 0xffffffd2(%rip)
b9e8(8): nop 0x0(%rax,%rax,1)
b9f0(6): or $0x8,0x10(%r12)
b9f6(2): jmp 0xffffffc2(%rip)
b9f8(8): nop 0x0(%rax,%rax,1)
ba00(6): or $0x10,0x10(%r12)
ba06(2): jmp 0xffffffb2(%rip)
ba08(8): nop 0x0(%rax,%rax,1)
ba10(6): or $0x20,0x10(%r12)
ba16(2): jmp 0xffffffa2(%rip)
ba18(8): nop 0x0(%rax,%rax,1)
ba20(3): cmp $0x2a,%bl
ba23(6): jz 0x1b6(%rip)
ba29(3): lea 0xffffffd0(%rbx),%ecx
ba2c(3): cmp $0x9,%cl
ba2f(6): jbe 0x418(%rip)
ba35(3): cmp $0x2e,%bl
ba38(6): jz 0x2d7(%rip)
ba3e(2): xor %eax,%eax
ba40(5): mov $0x1,%esi
ba45(2): jmp 0x32(%rip)
ba47(9): nop 0x0(%rax,%rax,1)
ba50(3): cmp $0x4c,%bl
ba53(2): jz 0x3d(%rip)
ba55(3): cmp $0x6c,%bl
ba58(2): jz 0x18(%rip)
ba5a(3): cmp $0x6a,%bl
ba5d(2): jz 0x13(%rip)
ba5f(2): mov %ebx,%edx
ba61(3): and $0xdf,%edx
ba64(3): cmp $0x5a,%dl
ba67(2): jz 0x9(%rip)
ba69(3): cmp $0x74,%bl
ba6c(2): jnz 0x2c(%rip)
ba6e(2): nop 
ba70(3): add $0x8,%eax
ba73(4): movzx 0x0(%rbp),%ebx
ba77(4): add $0x1,%rbp
ba7b(3): cmp $0x68,%bl
ba7e(2): jnz 0xffffffd2(%rip)
ba80(2): mov %eax,%ecx
ba82(2): mov %esi,%edx
ba84(3): and $0x1,%ecx
ba87(2): shl/sal %cl,%edx
ba89(2): or %edx,%eax
ba8b(2): jmp 0xffffffe8(%rip)
ba8d(3): nop (%rax)
ba90(3): or $0x4,%eax
ba93(2): jmp 0xffffffe0(%rip)
ba95(3): nop (%rax)
ba98(3): lea 0xffffffdb(%rbx),%edx
ba9b(3): cmp $0x53,%dl
ba9e(6): jnbe 0x61d(%rip)
baa4(7): lea 0x3291(%rip),%rcx
baab(3): movzx %dl,%edx
baae(4): movsxd 0x0(%rcx,%rdx,4),%rdx
bab2(3): add %rcx,%rdx
bab5(2): jmp %rdx
bab7(6): mov $0x10,%r11d
babd(5): mov $0x73,%ebx
bac2(6): nop 0x0(%rax,%rax,1)
bac8(4): cmp $0xffffffff,%r13
bacc(6): jz 0x6bb(%rip)
bad2(5): mov %r13,0x50(%r12)
bad7(3): cmp %r13,%r9
bada(4): mov 0x8(%r15),%rcx
bade(6): jbe 0x622(%rip)
bae4(3): mov (%r15),%rax
bae7(3): mov %rax,%rdx
baea(4): shl/sal $0x5,%rdx
baee(3): add %rcx,%rdx
baf1(3): cmp %r13,%rax
baf4(2): jnbe 0x22(%rip)
baf6(a): nop 0x0(%rax,%rax,1)
bb00(4): add $0x1,%rax
bb04(6): mov $0x0,(%rdx)
bb0a(4): add $0x20,%rdx
bb0e(3): cmp %r13,%rax
bb11(2): jbe 0xffffffef(%rip)
bb13(3): mov %rax,(%r15)
bb16(4): shl/sal $0x5,%r13
bb1a(4): lea 0x0(%rcx,%r13,1),%rax
bb1e(2): mov (%rax),%edx
bb20(2): test %edx,%edx
bb22(6): jnz 0x5d1(%rip)
bb28(3): mov %r11d,(%rax)
bb2b(5): mov %bl,0x48(%r12)
bb30(3): mov (%r14),%rax
bb33(5): mov %rbp,0x8(%r12)
bb38(4): lea 0x1(%rax),%rbx
bb3c(3): cmp %rbx,%r10
bb3f(3): mov %rbx,(%r14)
bb42(6): jnbe 0x8e(%rip)
bb48(3): test %r10,%r10
bb4b(6): js 0x9ac(%rip)
bb51(3): add %r10,%r10
bb54(a): mov $0x209622091746699450,%rax
bb5e(3): cmp %rax,%r10
bb61(6): jnbe 0x996(%rip)
bb67(4): lea 0x0(%r10,%r10,4),%rax
bb6b(4): mov 0x8(%r14),%rdi
bb6f(5): cmp %rdi,0x28(%rsp)
bb74(5): mov %r9,0x40(%rsp)
bb79(5): mov %r10,0x38(%rsp)
bb7e(4): lea 0x0(%r10,%rax,2),%rax
bb82(5): mov %r8,0x30(%rsp)
bb87(8): lea 0x0(,%rax,8),%rsi
bb8f(6): jz 0x6be(%rip)
bb95(5): call 0xffff61bb(%rip)
bb9a(3): test %rax,%rax
bb9d(3): mov %rax,%rcx
bba0(5): mov 0x30(%rsp),%r8
bba5(5): mov 0x38(%rsp),%r10
bbaa(5): mov 0x40(%rsp),%r9
bbaf(6): jz 0x948(%rip)
bbb5(5): mov 0x28(%rsp),%rax
bbba(4): cmp 0x8(%r14),%rax
bbbe(3): mov (%r14),%rbx
bbc1(6): jz 0x6af(%rip)
bbc7(4): mov %rcx,0x8(%r14)
bbcb(5): jmp 0xfffffd1d(%rip)
bbd0(4): mov 0x8(%r14),%rcx
bbd4(5): jmp 0xfffffd14(%rip)
bbd9(5): mov 0x10(%rsp),%rsi
bbde(5): mov $0x1,%ecx
bbe3(5): mov %rbp,0x18(%r12)
bbe8(5): mov %rax,0x20(%r12)
bbed(3): test %rsi,%rsi
bbf0(4): cmovne %rsi,%rcx
bbf4(5): mov %rcx,0x10(%rsp)
bbf9(4): movzx 0x1(%rbp),%ecx
bbfd(3): lea 0xffffffd0(%rcx),%esi
bc00(4): cmp $0x9,%sil
bc04(6): jbe 0x2e1(%rip)
bc0a(5): mov 0x20(%rsp),%rsi
bc0f(4): cmp $0xffffffff,%rsi
bc13(4): lea 0x1(%rsi),%rdx
bc17(5): mov %rsi,0x28(%r12)
bc1c(6): jz 0x49f(%rip)
bc22(5): mov 0x20(%rsp),%rbx
bc27(3): mov %rax,%rbp
bc2a(5): mov %rdx,0x20(%rsp)
bc2f(3): cmp %rbx,%r9
bc32(4): mov 0x8(%r15),%rcx
bc36(6): jnbe 0x67c(%rip)
bc3c(3): add %r9,%r9
bc3f(4): lea 0x1(%rbx),%rax
bc43(3): cmp %rbx,%r9
bc46(4): cmovbe %rax,%r9
bc4a(a): mov $0x576460752303423487,%rax
bc54(3): cmp %rax,%r9
bc57(6): jnbe 0x8a4(%rip)
bc5d(3): mov %r9,%rsi
bc60(5): mov %r9,0x40(%rsp)
bc65(5): mov %r10,0x38(%rsp)
bc6a(4): shl/sal $0x5,%rsi
bc6e(5): cmp %rcx,0x8(%rsp)
bc73(5): mov %r8,0x30(%rsp)
bc78(6): jz 0x719(%rip)
bc7e(3): mov %rcx,%rdi
bc81(5): call 0xffff60cf(%rip)
bc86(4): mov 0x8(%r15),%rdx
bc8a(5): mov 0x30(%rsp),%r8
bc8f(3): mov %rax,%rcx
bc92(5): mov 0x38(%rsp),%r10
bc97(5): mov 0x40(%rsp),%r9
bc9c(3): test %rcx,%rcx
bc9f(6): jz 0x8b8(%rip)
bca5(5): cmp %rdx,0x8(%rsp)
bcaa(3): mov (%r15),%rax
bcad(6): jz 0x7be(%rip)
bcb3(4): mov %rcx,0x8(%r15)
bcb7(3): mov %rax,%rdx
bcba(4): shl/sal $0x5,%rdx
bcbe(3): add %rcx,%rdx
bcc1(3): cmp %rbx,%rax
bcc4(2): jnbe 0x22(%rip)
bcc6(a): nop 0x0(%rax,%rax,1)
bcd0(4): add $0x1,%rax
bcd4(6): mov $0x0,(%rdx)
bcda(4): add $0x20,%rdx
bcde(3): cmp %rbx,%rax
bce1(2): jbe 0xffffffef(%rip)
bce3(3): mov %rax,(%r15)
bce6(4): shl/sal $0x5,%rbx
bcea(4): lea 0x0(%rcx,%rbx,1),%rax
bcee(2): mov (%rax),%edx
bcf0(2): test %edx,%edx
bcf2(6): jnz 0x4d9(%rip)
bcf8(6): mov $0x5,(%rax)
bcfe(4): movzx 0x0(%rbp),%ebx
bd02(4): lea 0x1(%rbp),%rdx
bd06(3): cmp $0x2e,%bl
bd09(6): jnz 0xfffffd35(%rip)
bd0f(4): cmp $0x2a,0x1(%rbp)
bd13(5): mov %rbp,0x30(%r12)
bd18(6): jnz 0x186(%rip)
bd1e(5): mov 0x18(%rsp),%rsi
bd23(4): lea 0x2(%rbp),%r11
bd27(5): mov $0x2,%eax
bd2c(5): mov %r11,0x38(%r12)
bd31(4): cmp $0x2,%rsi
bd35(4): cmovnb %rsi,%rax
bd39(5): mov %rax,0x18(%rsp)
bd3e(4): movsx 0x2(%rbp),%eax
bd42(3): lea 0xffffffd0(%rax),%edx
bd45(3): cmp $0x9,%dl
bd48(6): jbe 0x694(%rip)
bd4e(5): mov 0x40(%r12),%rbx
bd53(4): cmp $0xffffffff,%rbx
bd57(6): jz 0x65e(%rip)
bd5d(3): cmp %rbx,%r9
bd60(4): mov 0x8(%r15),%rcx
bd64(6): jbe 0x56b(%rip)
bd6a(3): mov (%r15),%rax
bd6d(3): mov %rax,%rdx
bd70(4): shl/sal $0x5,%rdx
bd74(3): add %rcx,%rdx
bd77(3): cmp %rbx,%rax
bd7a(2): jnbe 0x1c(%rip)
bd7c(4): nop 0x0(%rax)
bd80(4): add $0x1,%rax
bd84(6): mov $0x0,(%rdx)
bd8a(4): add $0x20,%rdx
bd8e(3): cmp %rbx,%rax
bd91(2): jbe 0xffffffef(%rip)
bd93(3): mov %rax,(%r15)
bd96(4): shl/sal $0x5,%rbx
bd9a(4): lea 0x0(%rcx,%rbx,1),%rax
bd9e(2): mov (%rax),%edx
bda0(2): test %edx,%edx
bda2(6): jnz 0x518(%rip)
bda8(6): mov $0x5,(%rax)
bdae(3): mov %r11,%rbp
bdb1(4): movzx (%r11),%ebx
bdb5(5): jmp 0xfffffc89(%rip)
bdba(3): mov %rbp,%rax
bdbd(3): nop (%rax)
bdc0(4): add $0x1,%rax
bdc4(3): movzx (%rax),%edx
bdc7(3): lea 0xffffffd0(%rdx),%ecx
bdca(3): cmp $0x9,%cl
bdcd(2): jbe 0xfffffff3(%rip)
bdcf(3): cmp $0x24,%dl
bdd2(3): mov %r8,%r13
bdd5(6): jnz 0xfffffbe9(%rip)
bddb(2): xor %edx,%edx
bddd(3): movsx %bl,%eax
bde0(a): mov $0x1844674407370955161,%rdi
bdea(3): mov %r8,%rsi
bded(3): sub $0x30,%eax
bdf0(3): cmp %rdi,%rdx
bdf3(2): cwde 
bdf5(2): jnbe 0x9(%rip)
bdf7(4): lea 0x0(%rdx,%rdx,4),%rsi
bdfb(3): add %rsi,%rsi
bdfe(3): mov %rbp,%rcx
be01(3): add %rsi,%rax
be04(4): movzx 0x1(%rbp),%ebx
be08(4): setb %sil
be0c(4): add $0x1,%rbp
be10(3): mov %rax,%rdx
be13(4): movzx %sil,%esi
be17(3): test %rsi,%rsi
be1a(3): lea 0xffffffd0(%rbx),%edi
be1d(6): jnz 0x391(%rip)
be23(4): cmp $0x9,%dil
be27(2): jbe 0xffffffb6(%rip)
be29(3): mov %rax,%r13
be2c(4): sub $0x1,%r13
be30(4): cmp $0xfffffffd,%r13
be34(6): jnbe 0x287(%rip)
be3a(4): lea 0x2(%rcx),%rbp
be3e(4): movzx 0x2(%rcx),%ebx
be42(5): jmp 0xfffffb7c(%rip)
be47(5): mov %rbp,0x18(%r12)
be4c(4): movzx 0x0(%rbp),%edi
be50(3): mov %rbp,%rsi
be53(3): lea 0xffffffd0(%rdi),%ecx
be56(3): cmp $0x9,%cl
be59(2): jbe 0xe(%rip)
be5b(2): jmp 0x35(%rip)
be5d(3): nop (%rax)
be60(3): mov %rax,%rbp
be63(4): add $0x1,%rax
be67(3): movzx (%rax),%edi
be6a(3): lea 0xffffffd0(%rdi),%edx
be6d(3): cmp $0x9,%dl
be70(2): jbe 0xfffffff0(%rip)
be72(3): mov %rax,%rcx
be75(4): lea 0x2(%rbp),%rdx
be79(3): mov %rax,%rbp
be7c(3): sub %rsi,%rcx
be7f(5): mov 0x10(%rsp),%rsi
be84(3): cmp %rcx,%rsi
be87(4): cmovnb %rsi,%rcx
be8b(5): mov %rcx,0x10(%rsp)
be90(5): mov %rbp,0x20(%r12)
be95(4): movzx 0x0(%rbp),%ebx
be99(5): jmp 0xfffffb9c(%rip)
be9e(4): movzx 0x1(%rbp),%eax
bea2(3): sub $0x30,%eax
bea5(2): cmp $0x9,%al
bea7(2): jnbe 0x17(%rip)
bea9(7): nop 0x0(%rax)
beb0(4): add $0x1,%rdx
beb4(3): movzx (%rdx),%eax
beb7(3): sub $0x30,%eax
beba(2): cmp $0x9,%al
bebc(2): jbe 0xfffffff4(%rip)
bebe(5): mov 0x18(%rsp),%rsi
bec3(3): mov %rdx,%rax
bec6(5): mov %rdx,0x38(%r12)
becb(3): sub %rbp,%rax
bece(3): movzx (%rdx),%ebx
bed1(3): mov %rdx,%rbp
bed4(3): cmp %rax,%rsi
bed7(4): cmovnb %rsi,%rax
bedb(5): mov %rax,0x18(%rsp)
bee0(5): jmp 0xfffffb5e(%rip)
bee5(3): mov %rax,%rsi
bee8(4): add $0x1,%rsi
beec(3): movzx (%rsi),%edi
beef(4): lea 0xffffffd0(%rdi),%r11d
bef3(4): cmp $0x9,%r11b
bef7(2): jbe 0xfffffff1(%rip)
bef9(4): cmp $0x24,%dil
befd(6): jnz 0xfffffd0d(%rip)
bf03(2): xor %esi,%esi
bf05(3): movsx %cl,%eax
bf08(a): mov $0x1844674407370955161,%rdi
bf12(3): mov %r8,%rcx
bf15(3): sub $0x30,%eax
bf18(3): cmp %rdi,%rsi
bf1b(2): cwde 
bf1d(2): jnbe 0x9(%rip)
bf1f(4): lea 0x0(%rsi,%rsi,4),%rcx
bf23(3): add %rcx,%rcx
bf26(3): mov %rdx,%rbp
bf29(3): xor %r11d,%r11d
bf2c(3): add %rcx,%rax
bf2f(4): movzx 0x1(%rdx),%ecx
bf33(4): setb %r11b
bf37(4): add $0x1,%rdx
bf3b(3): mov %rax,%rsi
bf3e(3): test %r11,%r11
bf41(3): lea 0xffffffd0(%rcx),%edi
bf44(6): jnz 0x50a(%rip)
bf4a(4): cmp $0x9,%dil
bf4e(2): jbe 0xffffffb7(%rip)
bf50(4): lea 0xffffffff(%rax),%rbx
bf54(4): cmp $0xfffffffd,%rbx
bf58(6): jnbe 0x163(%rip)
bf5e(5): mov %rbx,0x28(%r12)
bf63(4): add $0x2,%rbp
bf67(5): jmp 0xfffffcc8(%rip)
bf6c(3): cmp $0xf,%eax
bf6f(6): mov $0x16,%r11d
bf75(6): jnle 0xfffffb53(%rip)
bf7b(2): test $0x4,%al
bf7d(6): jnz 0xfffffb4b(%rip)
bf83(3): cmp $0x7,%eax
bf86(6): mov $0x15,%r11d
bf8c(6): jnle 0xfffffb3c(%rip)
bf92(2): test $0x2,%al
bf94(6): mov $0x12,%r11d
bf9a(6): jnz 0xfffffb2e(%rip)
bfa0(3): xor %r11d,%r11d
bfa3(2): test $0x1,%al
bfa5(4): setz %r11b
bfa9(4): add $0x13,%r11d
bfad(5): jmp 0xfffffb1b(%rip)
bfb2(6): nop 0x0(%rax,%rax,1)
bfb8(3): xor %r11d,%r11d
bfbb(3): cmp $0x7,%eax
bfbe(4): setnle %r11b
bfc2(4): add $0xd,%r11d
bfc6(5): jmp 0xfffffb02(%rip)
bfcb(3): cmp $0xf,%eax
bfce(6): mov $0x9,%r11d
bfd4(6): jnle 0xfffffaf4(%rip)
bfda(2): test $0x4,%al
bfdc(6): jnz 0xfffffaec(%rip)
bfe2(3): cmp $0x7,%eax
bfe5(6): mov $0x7,%r11d
bfeb(6): jnle 0xfffffadd(%rip)
bff1(2): test $0x2,%al
bff3(6): mov $0x1,%r11d
bff9(6): jnz 0xfffffacf(%rip)
bfff(3): and $0x1,%eax
c002(3): cmp $0x1,%eax
c005(3): sbb %r11d,%r11d
c008(4): and $0x2,%r11d
c00c(4): add $0x3,%r11d
c010(5): jmp 0xfffffab8(%rip)
c015(3): nop (%rax)
c018(3): xor %r11d,%r11d
c01b(3): cmp $0x7,%eax
c01e(4): setnle %r11b
c022(4): add $0xf,%r11d
c026(5): jmp 0xfffffaa2(%rip)
c02b(3): cmp $0xf,%eax
c02e(6): mov $0xc,%r11d
c034(6): jnle 0xfffffa94(%rip)
c03a(3): xor %r11d,%r11d
c03d(2): test $0x4,%al
c03f(4): setnz %r11b
c043(4): add $0xb,%r11d
c047(5): jmp 0xfffffa81(%rip)
c04c(6): mov $0xe,%r11d
c052(5): mov $0x63,%ebx
c057(5): jmp 0xfffffa71(%rip)
c05c(3): cmp $0xf,%eax
c05f(6): mov $0xa,%r11d
c065(6): jnle 0xfffffa63(%rip)
c06b(2): test $0x4,%al
c06d(6): jnz 0xfffffa5b(%rip)
c073(3): cmp $0x7,%eax
c076(6): mov $0x8,%r11d
c07c(6): jnle 0xfffffa4c(%rip)
c082(2): test $0x2,%al
c084(6): mov $0x2,%r11d
c08a(6): jnz 0xfffffa3e(%rip)
c090(3): and $0x1,%eax
c093(3): cmp $0x1,%eax
c096(3): sbb %r11d,%r11d
c099(4): and $0x2,%r11d
c09d(4): add $0x4,%r11d
c0a1(5): jmp 0xfffffa27(%rip)
c0a6(a): nop 0x0(%rax,%rax,1)
c0b0(6): mov $0x11,%r11d
c0b6(5): jmp 0xfffffa12(%rip)
c0bb(4): mov 0x8(%r15),%rcx
c0bf(5): cmp %rcx,0x8(%rsp)
c0c4(2): jz 0xa(%rip)
c0c6(3): mov %rcx,%rdi
c0c9(5): call 0xffff5997(%rip)
c0ce(4): mov 0x8(%r14),%rdi
c0d2(5): cmp %rdi,0x28(%rsp)
c0d7(2): jz 0x7(%rip)
c0d9(5): call 0xffff5987(%rip)
c0de(5): call 0xffff59a2(%rip)
c0e3(6): mov $0x16,(%rax)
c0e9(5): mov $0xffffffff,%eax
c0ee(5): jmp 0xfffff824(%rip)
c0f3(3): cmp %r11d,%edx
c0f6(6): jz 0xfffffa35(%rip)
c0fc(2): jmp 0xffffffc3(%rip)
c0fe(2): nop 
c100(3): add %r9,%r9
c103(4): lea 0x1(%r13),%rax
c107(3): cmp %r13,%r9
c10a(4): cmovbe %rax,%r9
c10e(a): mov $0x576460752303423487,%rax
c118(3): cmp %rax,%r9
c11b(6): jnbe 0x3e0(%rip)
c121(3): mov %r9,%rsi
c124(5): mov %r9,0x48(%rsp)
c129(5): mov %r10,0x40(%rsp)
c12e(4): shl/sal $0x5,%rsi
c132(5): cmp %rcx,0x8(%rsp)
c137(5): mov %r8,0x38(%rsp)
c13c(5): mov %r11d,0x30(%rsp)
c141(6): jz 0xa0(%rip)
c147(3): mov %rcx,%rdi
c14a(5): call 0xffff5c06(%rip)
c14f(3): test %rax,%rax
c152(3): mov %rax,%rcx
c155(5): mov 0x30(%rsp),%r11d
c15a(5): mov 0x38(%rsp),%r8
c15f(5): mov 0x40(%rsp),%r10
c164(5): mov 0x48(%rsp),%r9
c169(6): jz 0x38e(%rip)
c16f(5): mov 0x8(%rsp),%rax
c174(4): cmp 0x8(%r15),%rax
c178(6): jz 0x91(%rip)
c17e(4): mov %rcx,0x8(%r15)
c182(5): jmp 0xfffff962(%rip)
c187(5): mov 0x20(%rsp),%rsi
c18c(4): cmp $0xffffffff,%rsi
c190(4): lea 0x1(%rsi),%rax
c194(5): mov %rsi,0x50(%r12)
c199(6): jz 0xffffff22(%rip)
c19f(5): mov 0x20(%rsp),%r13
c1a4(5): mov %rax,0x20(%rsp)
c1a9(5): jmp 0xfffff92e(%rip)
c1ae(4): cmp $0x9,%dil
c1b2(6): jnbe 0xffffff09(%rip)
c1b8(3): movsx %bl,%eax
c1bb(3): mov %r8,%rsi
c1be(3): mov %rbp,%rcx
c1c1(3): sub $0x30,%eax
c1c4(2): cwde 
c1c6(5): jmp 0xfffffc3b(%rip)
c1cb(3): cmp $0x5,%edx
c1ce(6): jnz 0xfffffef1(%rip)
c1d4(4): movzx 0x0(%rbp),%ebx
c1d8(4): lea 0x1(%rbp),%rdx
c1dc(5): jmp 0xfffff859(%rip)
c1e1(3): mov %rsi,%rdi
c1e4(5): call 0xffff5b1c(%rip)
c1e9(3): test %rax,%rax
c1ec(3): mov %rax,%rcx
c1ef(5): mov 0x30(%rsp),%r11d
c1f4(5): mov 0x38(%rsp),%r8
c1f9(5): mov 0x40(%rsp),%r10
c1fe(5): mov 0x48(%rsp),%r9
c203(6): jz 0x169(%rip)
c209(3): mov (%r15),%rdx
c20c(5): mov 0x8(%rsp),%rsi
c211(3): mov %rcx,%rdi
c214(5): mov %r9,0x48(%rsp)
c219(5): mov %r10,0x40(%rsp)
c21e(5): mov %r8,0x38(%rsp)
c223(5): mov %r11d,0x30(%rsp)
c228(4): shl/sal $0x5,%rdx
c22c(5): call 0xffff5ab4(%rip)
c231(5): mov 0x48(%rsp),%r9
c236(5): mov 0x40(%rsp),%r10
c23b(3): mov %rax,%rcx
c23e(5): mov 0x38(%rsp),%r8
c243(5): mov 0x30(%rsp),%r11d
c248(5): jmp 0xffffff36(%rip)
c24d(3): mov %rsi,%rdi
c250(5): call 0xffff5ab0(%rip)
c255(3): test %rax,%rax
c258(3): mov %rax,%rcx
c25b(5): mov 0x30(%rsp),%r8
c260(5): mov 0x38(%rsp),%r10
c265(5): mov 0x40(%rsp),%r9
c26a(6): jz 0xef(%rip)
c270(4): lea 0x0(%rbx,%rbx,4),%rax
c274(5): mov 0x28(%rsp),%rsi
c279(3): mov %rcx,%rdi
c27c(5): mov %r9,0x40(%rsp)
c281(5): mov %r10,0x38(%rsp)
c286(4): lea 0x0(%rbx,%rax,2),%rdx
c28a(5): mov %r8,0x30(%rsp)
c28f(4): shl/sal $0x3,%rdx
c293(5): call 0xffff5a4d(%rip)
c298(3): mov (%r14),%rbx
c29b(3): mov %rax,%rcx
c29e(5): mov 0x40(%rsp),%r9
c2a3(5): mov 0x38(%rsp),%r10
c2a8(5): mov 0x30(%rsp),%r8
c2ad(5): jmp 0xfffff91a(%rip)
c2b2(3): mov (%r15),%rax
c2b5(5): jmp 0xfffffa02(%rip)
c2ba(3): cmp $0x5,%edx
c2bd(6): jnz 0xfffffe02(%rip)
c2c3(4): movzx (%r11),%ebx
c2c7(3): mov %r11,%rbp
c2ca(5): jmp 0xfffff774(%rip)
c2cf(3): add %r9,%r9
c2d2(4): lea 0x1(%rbx),%rax
c2d6(3): cmp %rbx,%r9
c2d9(4): cmovbe %rax,%r9
c2dd(a): mov $0x576460752303423487,%rax
c2e7(3): cmp %rax,%r9
c2ea(6): jnbe 0x211(%rip)
c2f0(3): mov %r9,%rsi
c2f3(5): mov %r9,0x48(%rsp)
c2f8(5): mov %r10,0x40(%rsp)
c2fd(4): shl/sal $0x5,%rsi
c301(5): cmp %rcx,0x8(%rsp)
c306(5): mov %r8,0x38(%rsp)
c30b(5): mov %r11,0x30(%rsp)
c310(6): jz 0x1be(%rip)
c316(3): mov %rcx,%rdi
c319(5): call 0xffff5a37(%rip)
c31e(4): mov 0x8(%r15),%rdx
c322(5): mov 0x30(%rsp),%r11
c327(3): mov %rax,%rcx
c32a(5): mov 0x38(%rsp),%r8
c32f(5): mov 0x40(%rsp),%r10
c334(5): mov 0x48(%rsp),%r9
c339(3): test %rcx,%rcx
c33c(6): jz 0x21b(%rip)
c342(5): cmp %rdx,0x8(%rsp)
c347(3): mov (%r15),%rax
c34a(6): jz 0x1c6(%rip)
c350(4): mov %rcx,0x8(%r15)
c354(5): jmp 0xfffffa19(%rip)
c359(4): mov 0x8(%r15),%rcx
c35d(5): cmp %rcx,0x8(%rsp)
c362(2): jz 0x1a(%rip)
c364(3): mov %rcx,%rdi
c367(5): call 0xffff56f9(%rip)
c36c(4): mov 0x8(%r14),%rdi
c370(5): cmp %rdi,0x28(%rsp)
c375(2): jz 0x7(%rip)
c377(5): call 0xffff56e9(%rip)
c37c(5): call 0xffff5704(%rip)
c381(6): mov $0xc,(%rax)
c387(5): mov $0xffffffff,%eax
c38c(5): jmp 0xfffff586(%rip)
c391(3): mov %rsi,%rdi
c394(5): call 0xffff596c(%rip)
c399(5): mov 0x8(%rsp),%rdx
c39e(3): mov %rax,%rcx
c3a1(5): mov 0x40(%rsp),%r9
c3a6(5): mov 0x38(%rsp),%r10
c3ab(5): mov 0x30(%rsp),%r8
c3b0(5): jmp 0xfffff8ec(%rip)
c3b5(5): mov 0x20(%rsp),%rsi
c3ba(4): cmp $0xffffffff,%rsi
c3be(4): lea 0x1(%rsi),%rax
c3c2(5): mov %rsi,0x40(%r12)
c3c7(6): jz 0xfffffcf4(%rip)
c3cd(5): mov 0x20(%rsp),%rbx
c3d2(5): mov %rax,0x20(%rsp)
c3d7(5): jmp 0xfffff986(%rip)
c3dc(3): mov %r11,%rdx
c3df(4): add $0x1,%rdx
c3e3(3): movzx (%rdx),%ecx
c3e6(3): lea 0xffffffd0(%rcx),%esi
c3e9(4): cmp $0x9,%sil
c3ed(2): jbe 0xfffffff2(%rip)
c3ef(3): cmp $0x24,%cl
c3f2(6): jnz 0xfffff95c(%rip)
c3f8(2): xor %ecx,%ecx
c3fa(a): mov $0x1844674407370955161,%rsi
c404(3): sub $0x30,%eax
c407(3): mov %r8,%rdx
c40a(3): cmp %rsi,%rcx
c40d(2): cwde 
c40f(2): jnbe 0x9(%rip)
c411(4): lea 0x0(%rcx,%rcx,4),%rdx
c415(3): add %rdx,%rdx
c418(3): mov %r11,%rsi
c41b(2): xor %ebx,%ebx
c41d(3): add %rax,%rdx
c420(5): movsx 0x1(%r11),%eax
c425(3): setb %bl
c428(4): add $0x1,%r11
c42c(3): mov %rdx,%rcx
c42f(3): test %rbx,%rbx
c432(3): lea 0xffffffd0(%rax),%edi
c435(2): jz 0x73(%rip)
c437(4): cmp $0x9,%dil
c43b(6): jnbe 0xfffffc80(%rip)
c441(3): sub $0x30,%eax
c444(3): mov %r8,%rdx
c447(3): mov %r11,%rsi
c44a(2): cwde 
c44c(2): jmp 0xffffffcf(%rip)
c44e(4): cmp $0x9,%dil
c452(6): jnbe 0xfffffc69(%rip)
c458(3): movsx %cl,%eax
c45b(3): mov %rdx,%rbp
c45e(3): mov %r8,%rcx
c461(3): sub $0x30,%eax
c464(2): cwde 
c466(5): jmp 0xfffffac3(%rip)
c46b(5): mov 0x8(%rsp),%rsi
c470(4): shl/sal $0x5,%rax
c474(3): mov %rcx,%rdi
c477(3): mov %rax,%rdx
c47a(5): mov %r9,0x40(%rsp)
c47f(5): mov %r10,0x38(%rsp)
c484(5): mov %r8,0x30(%rsp)
c489(5): call 0xffff5857(%rip)
c48e(5): mov 0x40(%rsp),%r9
c493(3): mov %rax,%rcx
c496(5): mov 0x38(%rsp),%r10
c49b(3): mov (%r15),%rax
c49e(5): mov 0x30(%rsp),%r8
c4a3(5): jmp 0xfffff810(%rip)
c4a8(4): cmp $0x9,%dil
c4ac(6): jbe 0xffffff4e(%rip)
c4b2(4): lea 0xffffffff(%rdx),%rbx
c4b6(4): cmp $0xfffffffd,%rbx
c4ba(6): jnbe 0xfffffc01(%rip)
c4c0(5): mov %rbx,0x40(%r12)
c4c5(4): lea 0x2(%rsi),%r11
c4c9(5): jmp 0xfffff894(%rip)
c4ce(3): mov %rsi,%rdi
c4d1(5): call 0xffff582f(%rip)
c4d6(5): mov 0x8(%rsp),%rdx
c4db(3): mov %rax,%rcx
c4de(5): mov 0x48(%rsp),%r9
c4e3(5): mov 0x40(%rsp),%r10
c4e8(5): mov 0x38(%rsp),%r8
c4ed(5): mov 0x30(%rsp),%r11
c4f2(5): jmp 0xfffffe47(%rip)
c4f7(4): mov 0x8(%r15),%rcx
c4fb(5): cmp %rcx,0x8(%rsp)
c500(6): jnz 0xfffffe64(%rip)
c506(5): jmp 0xfffffe66(%rip)
c50b(5): nop 0x0(%rax,%rax,1)
c510(5): mov 0x8(%rsp),%rsi
c515(4): shl/sal $0x5,%rax
c519(3): mov %rcx,%rdi
c51c(3): mov %rax,%rdx
c51f(5): mov %r9,0x48(%rsp)
c524(5): mov %r10,0x40(%rsp)
c529(5): mov %r8,0x38(%rsp)
c52e(5): mov %r11,0x30(%rsp)
c533(5): call 0xffff57ad(%rip)
c538(5): mov 0x48(%rsp),%r9
c53d(3): mov %rax,%rcx
c540(5): mov 0x40(%rsp),%r10
c545(3): mov (%r15),%rax
c548(5): mov 0x38(%rsp),%r8
c54d(5): mov 0x30(%rsp),%r11
c552(5): jmp 0xfffffdfe(%rip)
c557(3): mov %rdx,%rcx
c55a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
c560(2): push %r15
c562(2): push %r14
c564(3): mov %rdx,%r15
c567(2): push %r13
c569(2): push %r12
c56b(7): lea 0x20451e(%rip),%r12
c572(1): push %rbp
c573(7): lea 0x20451e(%rip),%rbp
c57a(1): push %rbx
c57b(3): mov %edi,%r13d
c57e(3): mov %rsi,%r14
c581(3): sub %r12,%rbp
c584(4): sub $0x8,%rsp
c588(4): sar $0x3,%rbp
c58c(5): call 0xffff545c(%rip)
c591(3): test %rbp,%rbp
c594(2): jz 0x22(%rip)
c596(2): xor %ebx,%ebx
c598(8): nop 0x0(%rax,%rax,1)
c5a0(3): mov %r15,%rdx
c5a3(3): mov %r14,%rsi
c5a6(3): mov %r13d,%edi
c5a9(4): call 0x0(%r12,%rbx,8)
c5ad(4): add $0x1,%rbx
c5b1(3): cmp %rbx,%rbp
c5b4(2): jnz 0xffffffec(%rip)
c5b6(4): add $0x8,%rsp
c5ba(1): pop %rbx
c5bb(1): pop %rbp
c5bc(2): pop %r12
c5be(2): pop %r13
c5c0(2): pop %r14
c5c2(2): pop %r15
c5c4(1): ret near (%rsp)

"atexit" :
c5e0(7): mov 0x204a21(%rip),%rdx
c5e7(2): xor %esi,%esi
c5e9(5): jmp 0xffff57f7(%rip)

"_fini" :
c5f0(4): sub $0x8,%rsp
c5f4(4): add $0x8,%rsp
c5f8(1): ret near (%rsp)

