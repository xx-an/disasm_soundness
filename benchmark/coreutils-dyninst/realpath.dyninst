
"free@plt" :
14b0(6): jmp 0x20898a(%rip)
14b6(5): push $0x0

"abort@plt" :
14c0(6): jmp 0x208982(%rip)
14c6(5): push $0x1

"__errno_location@plt" :
14d0(6): jmp 0x20897a(%rip)
14d6(5): push $0x2

"strncmp@plt" :
14e0(6): jmp 0x208972(%rip)
14e6(5): push $0x3

"_exit@plt" :
14f0(6): jmp 0x20896a(%rip)
14f6(5): push $0x4

"__fpending@plt" :
1500(6): jmp 0x208962(%rip)
1506(5): push $0x5

"readlink@plt" :
1510(6): jmp 0x20895a(%rip)
1516(5): push $0x6

"textdomain@plt" :
1520(6): jmp 0x208952(%rip)
1526(5): push $0x7

"fclose@plt" :
1530(6): jmp 0x20894a(%rip)
1536(5): push $0x8

"bindtextdomain@plt" :
1540(6): jmp 0x208942(%rip)
1546(5): push $0x9

"dcgettext@plt" :
1550(6): jmp 0x20893a(%rip)
1556(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1560(6): jmp 0x208932(%rip)
1566(5): push $0xb

"strlen@plt" :
1570(6): jmp 0x20892a(%rip)
1576(5): push $0xc

"__lxstat@plt" :
1580(6): jmp 0x208922(%rip)
1586(5): push $0xd

"__stack_chk_fail@plt" :
1590(6): jmp 0x20891a(%rip)
1596(5): push $0xe

"getopt_long@plt" :
15a0(6): jmp 0x208912(%rip)
15a6(5): push $0xf

"mbrtowc@plt" :
15b0(6): jmp 0x20890a(%rip)
15b6(5): push $0x10

"__fxstatat@plt" :
15c0(6): jmp 0x208902(%rip)
15c6(5): push $0x11

"__overflow@plt" :
15d0(6): jmp 0x2088fa(%rip)
15d6(5): push $0x12

"strrchr@plt" :
15e0(6): jmp 0x2088f2(%rip)
15e6(5): push $0x13

"lseek@plt" :
15f0(6): jmp 0x2088ea(%rip)
15f6(5): push $0x14

"memset@plt" :
1600(6): jmp 0x2088e2(%rip)
1606(5): push $0x15

"getcwd@plt" :
1610(6): jmp 0x2088da(%rip)
1616(5): push $0x16

"strspn@plt" :
1620(6): jmp 0x2088d2(%rip)
1626(5): push $0x17

"memcmp@plt" :
1630(6): jmp 0x2088ca(%rip)
1636(5): push $0x18

"fputs_unlocked@plt" :
1640(6): jmp 0x2088c2(%rip)
1646(5): push $0x19

"calloc@plt" :
1650(6): jmp 0x2088ba(%rip)
1656(5): push $0x1a

"strcmp@plt" :
1660(6): jmp 0x2088b2(%rip)
1666(5): push $0x1b

"memcpy@plt" :
1670(6): jmp 0x2088aa(%rip)
1676(5): push $0x1c

"fileno@plt" :
1680(6): jmp 0x2088a2(%rip)
1686(5): push $0x1d

"__xstat@plt" :
1690(6): jmp 0x20889a(%rip)
1696(5): push $0x1e

"malloc@plt" :
16a0(6): jmp 0x208892(%rip)
16a6(5): push $0x1f

"fflush@plt" :
16b0(6): jmp 0x20888a(%rip)
16b6(5): push $0x20

"nl_langinfo@plt" :
16c0(6): jmp 0x208882(%rip)
16c6(5): push $0x21

"__freading@plt" :
16d0(6): jmp 0x20887a(%rip)
16d6(5): push $0x22

"realloc@plt" :
16e0(6): jmp 0x208872(%rip)
16e6(5): push $0x23

"setlocale@plt" :
16f0(6): jmp 0x20886a(%rip)
16f6(5): push $0x24

"__printf_chk@plt" :
1700(6): jmp 0x208862(%rip)
1706(5): push $0x25

"memmove@plt" :
1710(6): jmp 0x20885a(%rip)
1716(5): push $0x26

"error@plt" :
1720(6): jmp 0x208852(%rip)
1726(5): push $0x27

"fseeko@plt" :
1730(6): jmp 0x20884a(%rip)
1736(5): push $0x28

"__cxa_atexit@plt" :
1740(6): jmp 0x208842(%rip)
1746(5): push $0x29

"exit@plt" :
1750(6): jmp 0x20883a(%rip)
1756(5): push $0x2a

"fwrite@plt" :
1760(6): jmp 0x208832(%rip)
1766(5): push $0x2b

"__fprintf_chk@plt" :
1770(6): jmp 0x20882a(%rip)
1776(5): push $0x2c

"mbsinit@plt" :
1780(6): jmp 0x208822(%rip)
1786(5): push $0x2d

"iswprint@plt" :
1790(6): jmp 0x20881a(%rip)
1796(5): push $0x2e

"__ctype_b_loc@plt" :
17a0(6): jmp 0x208812(%rip)
17a6(5): push $0x2f

".plt.got" :
17b0(6): jmp 0x20882a(%rip)
17b6(2): nop 

"_init" :
1480(4): sub $0x8,%rsp
1484(7): mov 0x208b45(%rip),%rax
148b(3): test %rax,%rax
148e(2): jz 0x4(%rip)
1490(2): call %rax
1492(4): add $0x8,%rsp
1496(1): ret near (%rsp)

"main" :
17c0(2): push %r15
17c2(2): push %r14
17c4(3): xor %r15d,%r15d
17c7(2): push %r13
17c9(2): push %r12
17cb(3): mov %edi,%r12d
17ce(1): push %rbp
17cf(1): push %rbx
17d0(3): mov %rsi,%rbp
17d3(7): lea 0x208266(%rip),%r13
17da(3): xor %r14d,%r14d
17dd(5): mov $0x1,%ebx
17e2(4): sub $0x8,%rsp
17e6(3): mov (%rsi),%rdi
17e9(5): call 0x2927(%rip)
17ee(7): lea 0x634c(%rip),%rsi
17f5(5): mov $0x6,%edi
17fa(5): call 0xfffffef6(%rip)
17ff(7): lea 0x57f9(%rip),%rsi
1806(7): lea 0x57c9(%rip),%rdi
180d(5): call 0xfffffd33(%rip)
1812(7): lea 0x57bd(%rip),%rdi
1819(5): call 0xfffffd07(%rip)
181e(7): lea 0x139b(%rip),%rdi
1825(5): call 0x56fb(%rip)
182a(6): nop 0x0(%rax,%rax,1)
1830(7): lea 0x57e0(%rip),%rdx
1837(3): xor %r8d,%r8d
183a(3): mov %r13,%rcx
183d(3): mov %rbp,%rsi
1840(3): mov %r12d,%edi
1843(5): call 0xfffffd5d(%rip)
1848(3): cmp $0xff,%eax
184b(6): jz 0x131(%rip)
1851(3): cmp $0x6d,%eax
1854(6): jz 0xcc(%rip)
185a(2): jle 0x2e(%rip)
185c(3): cmp $0x7a,%eax
185f(6): jz 0xe1(%rip)
1865(2): jnle 0x4b(%rip)
1867(3): cmp $0x71,%eax
186a(6): jz 0xc6(%rip)
1870(3): cmp $0x73,%eax
1873(6): jnz 0x3a7(%rip)
1879(3): or $0x4,%ebx
187c(7): mov $0x0,0x20887e(%rip)
1883(2): jmp 0xffffffad(%rip)
1885(3): nop (%rax)
1888(3): cmp $0x4c,%eax
188b(6): jz 0xd5(%rip)
1891(2): jle 0x47(%rip)
1893(3): cmp $0x50,%eax
1896(6): jz 0xba(%rip)
189c(3): cmp $0x65,%eax
189f(6): jnz 0x37b(%rip)
18a5(3): and $0xfc,%ebx
18a8(2): jmp 0xffffff88(%rip)
18aa(6): nop 0x0(%rax,%rax,1)
18b0(5): cmp $0x80,%eax
18b5(6): jz 0xbb(%rip)
18bb(5): cmp $0x81,%eax
18c0(6): jnz 0x35a(%rip)
18c6(7): mov 0x2087eb(%rip),%r14
18cd(5): jmp 0xffffff63(%rip)
18d2(6): nop 0x0(%rax,%rax,1)
18d8(5): cmp $0xffffff7d,%eax
18dd(6): jnz 0x30e(%rip)
18e3(7): mov 0x2087be(%rip),%rdi
18ea(7): mov 0x208727(%rip),%rcx
18f1(7): lea 0x5727(%rip),%r8
18f8(7): lea 0x56d3(%rip),%rdx
18ff(7): lea 0x564d(%rip),%rsi
1906(3): xor %r9d,%r9d
1909(2): xor %eax,%eax
190b(5): call 0x4be5(%rip)
1910(2): xor %edi,%edi
1912(5): call 0xfffffe3e(%rip)
1917(9): nop 0x0(%rax,%rax,1)
1920(3): and $0xfc,%ebx
1923(3): or $0x2,%ebx
1926(5): jmp 0xffffff0a(%rip)
192b(5): nop 0x0(%rax,%rax,1)
1930(7): mov $0x0,0x2086d9(%rip)
1937(5): jmp 0xfffffef9(%rip)
193c(4): nop 0x0(%rax)
1940(7): mov $0x1,0x2087b9(%rip)
1947(5): jmp 0xfffffee9(%rip)
194c(4): nop 0x0(%rax)
1950(3): and $0xfb,%ebx
1953(7): mov $0x0,0x2087a7(%rip)
195a(5): jmp 0xfffffed6(%rip)
195f(1): nop 
1960(3): or $0x4,%ebx
1963(7): mov $0x1,0x208797(%rip)
196a(5): jmp 0xfffffec6(%rip)
196f(1): nop 
1970(7): mov 0x208741(%rip),%r15
1977(5): jmp 0xfffffeb9(%rip)
197c(7): cmp %r12d,0x20872d(%rip)
1983(6): jnl 0x276(%rip)
1989(3): mov %ebx,%r13d
198c(4): and $0x3,%r13d
1990(3): test %r14,%r14
1993(6): jz 0x186(%rip)
1999(3): test %r15,%r15
199c(6): jnz 0x17d(%rip)
19a2(3): mov %r14,%r15
19a5(2): mov %ebx,%esi
19a7(3): mov %r15,%rdi
19aa(5): call 0x486(%rip)
19af(3): test %rax,%rax
19b2(7): mov %rax,0x20873f(%rip)
19b9(6): jz 0x26b(%rip)
19bf(3): test %r13d,%r13d
19c2(6): jz 0x196(%rip)
19c8(3): cmp %r15,%r14
19cb(6): jz 0x17a(%rip)
19d1(3): test %r14,%r14
19d4(2): jz 0x42(%rip)
19d6(2): mov %ebx,%esi
19d8(3): mov %r14,%rdi
19db(5): call 0x455(%rip)
19e0(3): test %rax,%rax
19e3(3): mov %rax,%r15
19e6(6): jz 0x26d(%rip)
19ec(3): test %r13d,%r13d
19ef(6): jz 0x1a3(%rip)
19f5(7): mov 0x2086fc(%rip),%r13
19fc(3): mov %r15,%rdi
19ff(3): mov %r13,%rsi
1a02(5): call 0x39e(%rip)
1a07(2): test %al,%al
1a09(6): jz 0x1c3(%rip)
1a0f(7): mov %r15,0x2086da(%rip)
1a16(6): mov 0x208694(%rip),%eax
1a1c(6): mov $0x1,%r13d
1a22(3): cmp %r12d,%eax
1a25(6): jl 0x99(%rip)
1a2b(5): jmp 0xfc(%rip)
1a30(7): mov 0x2086c1(%rip),%r9
1a37(3): test %r9,%r9
1a3a(2): jz 0x2d(%rip)
1a3c(7): mov 0x2086ad(%rip),%rdi
1a43(3): test %rdi,%rdi
1a46(2): jz 0xe(%rip)
1a48(3): mov %rax,%rsi
1a4b(5): call 0x355(%rip)
1a50(2): test %al,%al
1a52(2): jz 0x15(%rip)
1a54(2): xor %ecx,%ecx
1a56(2): xor %edx,%edx
1a58(3): mov %r9,%rsi
1a5b(3): mov %r14,%rdi
1a5e(5): call 0x8c2(%rip)
1a63(2): test %al,%al
1a65(2): jnz 0x11(%rip)
1a67(7): mov 0x20863a(%rip),%rsi
1a6e(3): mov %r14,%rdi
1a71(5): call 0xfffffbcf(%rip)
1a76(7): cmp $0x1,0x208683(%rip)
1a7d(7): mov 0x208624(%rip),%rdi
1a84(4): mov 0x28(%rdi),%rax
1a88(2): sbb %esi,%esi
1a8a(3): and $0xa,%esi
1a8d(4): cmp 0x30(%rdi),%rax
1a91(6): jnb 0xaa(%rip)
1a97(4): lea 0x1(%rax),%rdx
1a9b(4): mov %rdx,0x28(%rdi)
1a9f(3): mov %sil,(%rax)
1aa2(3): mov %r14,%rdi
1aa5(5): call 0xfffffa0b(%rip)
1aaa(6): mov 0x208600(%rip),%eax
1ab0(3): add $0x1,%eax
1ab3(3): cmp %r12d,%eax
1ab6(6): mov %eax,0x2085f4(%rip)
1abc(2): jnl 0x6b(%rip)
1abe(2): cwde 
1ac0(2): mov %ebx,%esi
1ac2(5): mov 0x0(%rbp,%rax,8),%r15
1ac7(3): mov %r15,%rdi
1aca(5): call 0x366(%rip)
1acf(3): test %rax,%rax
1ad2(3): mov %rax,%r14
1ad5(6): jnz 0xffffff5b(%rip)
1adb(8): movzx 0x20852d(%rip),%r13d
1ae3(3): test %r13b,%r13b
1ae6(2): jz 0xffffffc4(%rip)
1ae8(3): mov %r15,%rdx
1aeb(5): mov $0x3,%esi
1af0(2): xor %edi,%edi
1af2(5): call 0x415e(%rip)
1af7(3): mov %rax,%r13
1afa(5): call 0xfffff9d6(%rip)
1aff(2): mov (%rax),%esi
1b01(7): lea 0x5a05(%rip),%rdx
1b08(3): mov %r13,%rcx
1b0b(2): xor %edi,%edi
1b0d(2): xor %eax,%eax
1b0f(3): xor %r13d,%r13d
1b12(5): call 0xfffffc0e(%rip)
1b17(2): jmp 0xffffff93(%rip)
1b19(3): test %r15,%r15
1b1c(6): jz 0xfffffeac(%rip)
1b22(5): jmp 0xfffffe83(%rip)
1b27(4): xor $0x1,%r13d
1b2b(1): pop %rdx
1b2c(4): movzx %r13b,%eax
1b30(1): pop %rbx
1b31(1): pop %rbp
1b32(2): pop %r12
1b34(2): pop %r13
1b36(2): pop %r14
1b38(2): pop %r15
1b3a(1): ret near (%rsp)
1b3b(5): call 0xfffffa95(%rip)
1b40(5): jmp 0xffffff62(%rip)
1b45(7): mov 0x2085ac(%rip),%rax
1b4c(7): mov %rax,0x20859d(%rip)
1b53(5): jmp 0xfffffec3(%rip)
1b58(3): mov %rax,%rdi
1b5b(5): call 0x325(%rip)
1b60(2): test %al,%al
1b62(6): jnz 0xfffffe66(%rip)
1b68(3): mov %r15,%rdx
1b6b(5): mov $0x3,%esi
1b70(2): xor %edi,%edi
1b72(5): call 0x40de(%rip)
1b77(7): lea 0x598f(%rip),%rdx
1b7e(3): mov %rax,%rcx
1b81(5): mov $0x14,%esi
1b86(5): mov $0x1,%edi
1b8b(2): xor %eax,%eax
1b8d(5): call 0xfffffb93(%rip)
1b92(3): mov %rax,%rdi
1b95(5): call 0x2eb(%rip)
1b9a(2): test %al,%al
1b9c(6): jnz 0xfffffe59(%rip)
1ba2(3): mov %r14,%rdx
1ba5(5): mov $0x3,%esi
1baa(2): xor %edi,%edi
1bac(5): call 0x40a4(%rip)
1bb1(7): lea 0x5955(%rip),%rdx
1bb8(3): mov %rax,%rcx
1bbb(5): mov $0x14,%esi
1bc0(5): mov $0x1,%edi
1bc5(2): xor %eax,%eax
1bc7(5): call 0xfffffb59(%rip)
1bcc(3): mov %r15,%rdi
1bcf(5): call 0xfffff8e1(%rip)
1bd4(7): mov %r13,0x208515(%rip)
1bdb(b): mov $0x0,0x208512(%rip)
1be6(5): jmp 0xfffffe30(%rip)
1beb(5): cmp $0xffffff7e,%eax
1bf0(2): jnz 0x2a(%rip)
1bf2(2): xor %edi,%edi
1bf4(5): call 0x33c(%rip)
1bf9(7): lea 0x542d(%rip),%rsi
1c00(5): mov $0x5,%edx
1c05(2): xor %edi,%edi
1c07(5): call 0xfffff949(%rip)
1c0c(2): xor %esi,%esi
1c0e(3): mov %rax,%rdx
1c11(2): xor %edi,%edi
1c13(2): xor %eax,%eax
1c15(5): call 0xfffffb0b(%rip)
1c1a(5): mov $0x1,%edi
1c1f(5): call 0x311(%rip)
1c24(3): mov %r15,%rdx
1c27(5): mov $0x3,%esi
1c2c(2): xor %edi,%edi
1c2e(5): call 0x4022(%rip)
1c33(3): mov %rax,%rbx
1c36(5): call 0xfffff89a(%rip)
1c3b(2): mov (%rax),%esi
1c3d(7): lea 0x58c9(%rip),%rdx
1c44(3): mov %rbx,%rcx
1c47(5): mov $0x1,%edi
1c4c(2): xor %eax,%eax
1c4e(5): call 0xfffffad2(%rip)
1c53(3): mov %r14,%rdx
1c56(5): mov $0x3,%esi
1c5b(2): xor %edi,%edi
1c5d(5): call 0x3ff3(%rip)
1c62(3): mov %rax,%rbx
1c65(5): call 0xfffff86b(%rip)
1c6a(2): mov (%rax),%esi
1c6c(7): lea 0x589a(%rip),%rdx
1c73(3): mov %rbx,%rcx
1c76(5): mov $0x1,%edi
1c7b(2): xor %eax,%eax
1c7d(5): call 0xfffffaa3(%rip)
1c82(a): nop 0x0(%rax,%rax,1)
1c8c(4): nop 0x0(%rax)
1c90(2): xor %ebp,%ebp
1c92(3): mov %rdx,%r9
1c95(1): pop %rsi
1c96(3): mov %rsp,%rdx
1c99(4): and $0xfffffff0,%rsp
1c9d(1): push %rax
1c9e(1): push %rsp
1c9f(7): lea 0x526a(%rip),%r8
1ca6(7): lea 0x51f3(%rip),%rcx
1cad(7): lea 0xfffffb0c(%rip),%rdi
1cb4(6): call 0x20830e(%rip)
1cba(1): hlt 

"_start" :
1c90(2): xor %ebp,%ebp
1c92(3): mov %rdx,%r9
1c95(1): pop %rsi
1c96(3): mov %rsp,%rdx
1c99(4): and $0xfffffff0,%rsp
1c9d(1): push %rax
1c9e(1): push %rsp
1c9f(7): lea 0x526a(%rip),%r8
1ca6(7): lea 0x51f3(%rip),%rcx
1cad(7): lea 0xfffffb0c(%rip),%rdi
1cb4(6): call 0x20830e(%rip)
1cba(1): hlt 

"deregister_tm_clones" :
1cc0(7): lea 0x2083d9(%rip),%rdi
1cc7(1): push %rbp
1cc8(7): lea 0x2083d1(%rip),%rax
1ccf(3): cmp %rdi,%rax
1cd2(3): mov %rsp,%rbp
1cd5(2): jz 0x1b(%rip)
1cd7(7): mov 0x2082e2(%rip),%rax
1cde(3): test %rax,%rax
1ce1(2): jz 0xf(%rip)
1ce3(1): pop %rbp
1ce4(2): jmp %rax
1ce6(a): nop 0x0(%rax,%rax,1)
1cf0(1): pop %rbp
1cf1(1): ret near (%rsp)

"register_tm_clones" :
1d00(7): lea 0x208399(%rip),%rdi
1d07(7): lea 0x208392(%rip),%rsi
1d0e(1): push %rbp
1d0f(3): sub %rdi,%rsi
1d12(3): mov %rsp,%rbp
1d15(4): sar $0x3,%rsi
1d19(3): mov %rsi,%rax
1d1c(4): shr $0x3f,%rax
1d20(3): add %rax,%rsi
1d23(3): sar $0x1,%rsi
1d26(2): jz 0x1a(%rip)
1d28(7): mov 0x2082a9(%rip),%rax
1d2f(3): test %rax,%rax
1d32(2): jz 0xe(%rip)
1d34(1): pop %rbp
1d35(2): jmp %rax
1d37(9): nop 0x0(%rax,%rax,1)
1d40(1): pop %rbp
1d41(1): ret near (%rsp)

"__do_global_dtors_aux" :
1d50(7): cmp $0x0,0x208391(%rip)
1d57(2): jnz 0x31(%rip)
1d59(8): cmp $0x0,0x20827f(%rip)
1d61(1): push %rbp
1d62(3): mov %rsp,%rbp
1d65(2): jz 0xe(%rip)
1d67(7): mov 0x20829a(%rip),%rdi
1d6e(5): call 0xfffffa42(%rip)
1d73(5): call 0xffffff4d(%rip)
1d78(7): mov $0x1,0x208369(%rip)
1d7f(1): pop %rbp
1d80(1): ret near (%rsp)
1d81(7): nop 0x0(%rax)
1d88(2): REP ret near (%rsp)

"frame_dummy" :
1d90(1): push %rbp
1d91(3): mov %rsp,%rbp
1d94(1): pop %rbp
1d95(5): jmp 0xffffff6b(%rip)

"path_prefix" :
1da0(4): movzx 0x1(%rdi),%eax
1da4(2): test %al,%al
1da6(2): jz 0x5a(%rip)
1da8(2): cmp $0x2f,%al
1daa(2): jz 0x66(%rip)
1dac(4): movzx 0x1(%rsi),%edx
1db0(2): cmp %dl,%al
1db2(3): setnz %al
1db5(2): test %dl,%dl
1db7(3): setz %dl
1dba(2): or %dl,%al
1dbc(2): jnz 0x6c(%rip)
1dbe(4): add $0x1,%rdi
1dc2(4): add $0x1,%rsi
1dc6(2): jmp 0x15(%rip)
1dc8(8): nop 0x0(%rax,%rax,1)
1dd0(3): movzx (%rsi),%ecx
1dd3(2): test %cl,%cl
1dd5(2): jz 0x25(%rip)
1dd7(2): cmp %cl,%dl
1dd9(2): jnz 0x47(%rip)
1ddb(4): add $0x1,%rdi
1ddf(3): movzx (%rdi),%edx
1de2(4): add $0x1,%rsi
1de6(2): test %dl,%dl
1de8(2): jnz 0xffffffe8(%rip)
1dea(3): movzx (%rsi),%edx
1ded(3): cmp $0x2f,%dl
1df0(3): setz %al
1df3(2): test %dl,%dl
1df5(3): setz %dl
1df8(2): or %edx,%eax
1dfa(2): REP ret near (%rsp)
1dfc(4): nop 0x0(%rax)
1e00(4): cmp $0x2f,0x1(%rsi)
1e04(3): setnz %al
1e07(1): ret near (%rsp)
1e08(8): nop 0x0(%rax,%rax,1)
1e10(4): cmp $0x0,0x2(%rdi)
1e14(2): jnz 0xffffff98(%rip)
1e16(4): cmp $0x2f,0x1(%rsi)
1e1a(3): setz %al
1e1d(1): ret near (%rsp)
1e1e(2): nop 
1e20(2): REP ret near (%rsp)
1e22(6): nop 0x0(%rax,%rax,1)
1e28(2): xor %eax,%eax
1e2a(1): ret near (%rsp)

"realpath_canon" :
1e30(1): push %rbp
1e31(1): push %rbx
1e32(2): mov %esi,%ebp
1e34(4): sub $0x8,%rsp
1e38(5): call 0x728(%rip)
1e3d(7): cmp $0x0,0x2082bd(%rip)
1e44(3): mov %rax,%rbx
1e47(2): jz 0x22(%rip)
1e49(3): test %rax,%rax
1e4c(2): jz 0x1d(%rip)
1e4e(2): mov %ebp,%esi
1e50(3): mov %rax,%rdi
1e53(3): and $0xfb,%esi
1e56(5): call 0x70a(%rip)
1e5b(3): mov %rax,%rbp
1e5e(3): mov %rbx,%rdi
1e61(3): mov %rbp,%rbx
1e64(5): call 0xfffff64c(%rip)
1e69(4): add $0x8,%rsp
1e6d(3): mov %rbx,%rax
1e70(1): pop %rbx
1e71(1): pop %rbp
1e72(1): ret near (%rsp)

"isdir" :
1e80(1): push %rbp
1e81(1): push %rbx
1e82(3): mov %rdi,%rsi
1e85(3): mov %rdi,%rbx
1e88(5): mov $0x1,%edi
1e8d(7): sub $0xa8,%rsp
1e94(3): mov %rsp,%rdx
1e97(9): mov $0x28,%rax
1ea0(8): mov %rax,0x98(%rsp)
1ea8(2): xor %eax,%eax
1eaa(5): call 0xfffff7e6(%rip)
1eaf(2): test %eax,%eax
1eb1(2): jnz 0x30(%rip)
1eb3(4): mov 0x18(%rsp),%eax
1eb7(5): and $0xf000,%eax
1ebc(5): cmp $0x4000,%eax
1ec1(3): setz %al
1ec4(8): mov 0x98(%rsp),%rcx
1ecc(9): xor $0x28,%rcx
1ed5(2): jnz 0x4b(%rip)
1ed7(7): add $0xa8,%rsp
1ede(1): pop %rbx
1edf(1): pop %rbp
1ee0(1): ret near (%rsp)
1ee1(3): mov %rbx,%rsi
1ee4(5): mov $0x4,%edi
1ee9(5): call 0x3c67(%rip)
1eee(7): lea 0x504f(%rip),%rsi
1ef5(5): mov $0x5,%edx
1efa(2): xor %edi,%edi
1efc(3): mov %rax,%rbp
1eff(5): call 0xfffff651(%rip)
1f04(3): mov %rax,%rbx
1f07(5): call 0xfffff5c9(%rip)
1f0c(2): mov (%rax),%esi
1f0e(3): mov %rbp,%rcx
1f11(3): mov %rbx,%rdx
1f14(5): mov $0x1,%edi
1f19(2): xor %eax,%eax
1f1b(5): call 0xfffff805(%rip)
1f20(5): call 0xfffff670(%rip)

"usage" :
1f30(2): push %r13
1f32(2): push %r12
1f34(5): mov $0x5,%edx
1f39(1): push %rbp
1f3a(1): push %rbx
1f3b(2): mov %edi,%ebp
1f3d(7): sub $0x88,%rsp
1f44(7): mov 0x2081cd(%rip),%rbx
1f4b(9): mov $0x28,%rax
1f54(5): mov %rax,0x78(%rsp)
1f59(2): xor %eax,%eax
1f5b(2): test %edi,%edi
1f5d(2): jz 0x30(%rip)
1f5f(7): lea 0x515a(%rip),%rsi
1f66(2): xor %edi,%edi
1f68(5): call 0xfffff5e8(%rip)
1f6d(7): mov 0x20816c(%rip),%rdi
1f74(3): mov %rax,%rdx
1f77(3): mov %rbx,%rcx
1f7a(5): mov $0x1,%esi
1f7f(2): xor %eax,%eax
1f81(5): call 0xfffff7ef(%rip)
1f86(2): mov %ebp,%edi
1f88(5): call 0xfffff7c8(%rip)
1f8d(7): lea 0x5154(%rip),%rsi
1f94(2): xor %edi,%edi
1f96(5): call 0xfffff5ba(%rip)
1f9b(3): mov %rbx,%rdx
1f9e(3): mov %rax,%rsi
1fa1(5): mov $0x1,%edi
1fa6(2): xor %eax,%eax
1fa8(5): call 0xfffff758(%rip)
1fad(7): mov 0x2080f4(%rip),%rbx
1fb4(7): lea 0x514d(%rip),%rsi
1fbb(5): mov $0x5,%edx
1fc0(2): xor %edi,%edi
1fc2(5): call 0xfffff58e(%rip)
1fc7(3): mov %rbx,%rsi
1fca(3): mov %rax,%rdi
1fcd(5): call 0xfffff673(%rip)
1fd2(7): mov 0x2080cf(%rip),%rbx
1fd9(7): lea 0x5178(%rip),%rsi
1fe0(5): mov $0x5,%edx
1fe5(2): xor %edi,%edi
1fe7(5): call 0xfffff569(%rip)
1fec(3): mov %rbx,%rsi
1fef(3): mov %rax,%rdi
1ff2(5): call 0xfffff64e(%rip)
1ff7(7): mov 0x2080aa(%rip),%rbx
1ffe(7): lea 0x53cb(%rip),%rsi
2005(5): mov $0x5,%edx
200a(2): xor %edi,%edi
200c(5): call 0xfffff544(%rip)
2011(3): mov %rbx,%rsi
2014(3): mov %rax,%rdi
2017(5): call 0xfffff629(%rip)
201c(7): mov 0x208085(%rip),%rbx
2023(7): lea 0x53d6(%rip),%rsi
202a(5): mov $0x5,%edx
202f(2): xor %edi,%edi
2031(5): call 0xfffff51f(%rip)
2036(3): mov %rbx,%rsi
2039(3): mov %rax,%rdi
203c(7): lea 0x4f10(%rip),%rbx
2043(5): call 0xfffff5fd(%rip)
2048(7): lea 0x4f0d(%rip),%rax
204f(7): lea 0x4f47(%rip),%rcx
2056(9): mov $0x0,0x60(%rsp)
205f(9): mov $0x0,0x68(%rsp)
2068(3): mov %rsp,%rdx
206b(4): mov %rax,(%rsp)
206f(7): lea 0x4ee8(%rip),%rax
2076(5): mov %rcx,0x30(%rsp)
207b(7): lea 0x4f25(%rip),%rcx
2082(5): mov %rax,0x8(%rsp)
2087(7): lea 0x4f48(%rip),%rax
208e(5): mov %rcx,0x40(%rsp)
2093(7): lea 0x4f17(%rip),%rcx
209a(5): mov %rax,0x10(%rsp)
209f(7): lea 0x4ec8(%rip),%rax
20a6(5): mov %rcx,0x50(%rsp)
20ab(5): mov %rax,0x18(%rsp)
20b0(7): lea 0x4ecd(%rip),%rax
20b7(5): mov %rax,0x20(%rsp)
20bc(7): lea 0x4ecb(%rip),%rax
20c3(5): mov %rax,0x28(%rsp)
20c8(5): mov %rax,0x38(%rsp)
20cd(5): mov %rax,0x48(%rsp)
20d2(5): mov %rax,0x58(%rsp)
20d7(9): nop 0x0(%rax,%rax,1)
20e0(4): add $0x10,%rdx
20e4(3): mov (%rdx),%rdi
20e7(3): test %rdi,%rdi
20ea(2): jz 0x15(%rip)
20ec(5): mov $0x9,%ecx
20f1(3): mov %rbx,%rsi
20f4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
20f6(3): setnbe %al
20f9(2): sbb $0x0,%al
20fb(2): test %al,%al
20fd(2): jnz 0xffffffe3(%rip)
20ff(4): mov 0x8(%rdx),%r12
2103(2): xor %edi,%edi
2105(5): mov $0x5,%edx
210a(7): lea 0x4eaa(%rip),%rsi
2111(3): test %r12,%r12
2114(6): jz 0xc7(%rip)
211a(5): call 0xfffff436(%rip)
211f(7): lea 0x5312(%rip),%rcx
2126(7): lea 0x4ea5(%rip),%rdx
212d(3): mov %rax,%rsi
2130(5): mov $0x1,%edi
2135(2): xor %eax,%eax
2137(5): call 0xfffff5c9(%rip)
213c(2): xor %esi,%esi
213e(5): mov $0x5,%edi
2143(5): call 0xfffff5ad(%rip)
2148(3): test %rax,%rax
214b(2): jz 0x1e(%rip)
214d(7): lea 0x4e8c(%rip),%rsi
2154(5): mov $0x3,%edx
2159(3): mov %rax,%rdi
215c(5): call 0xfffff384(%rip)
2161(2): test %eax,%eax
2163(6): jnz 0x10d(%rip)
2169(7): lea 0x4e74(%rip),%rsi
2170(2): xor %edi,%edi
2172(5): mov $0x5,%edx
2177(5): call 0xfffff3d9(%rip)
217c(7): lea 0x4dd0(%rip),%rcx
2183(7): lea 0x52ae(%rip),%rdx
218a(3): mov %rax,%rsi
218d(5): mov $0x1,%edi
2192(2): xor %eax,%eax
2194(5): call 0xfffff56c(%rip)
2199(3): cmp %rbx,%r12
219c(7): lea 0x4dd5(%rip),%rcx
21a3(7): lea 0x5997(%rip),%rbx
21aa(4): cmove %rcx,%rbx
21ae(7): lea 0x52f3(%rip),%rsi
21b5(2): xor %edi,%edi
21b7(5): mov $0x5,%edx
21bc(5): call 0xfffff394(%rip)
21c1(3): mov %rbx,%rcx
21c4(3): mov %rax,%rsi
21c7(3): mov %r12,%rdx
21ca(5): mov $0x1,%edi
21cf(2): xor %eax,%eax
21d1(5): call 0xfffff52f(%rip)
21d6(5): jmp 0xfffffdb0(%rip)
21db(5): call 0xfffff375(%rip)
21e0(7): lea 0x5251(%rip),%rcx
21e7(7): lea 0x4de4(%rip),%rdx
21ee(3): mov %rax,%rsi
21f1(5): mov $0x1,%edi
21f6(2): xor %eax,%eax
21f8(5): call 0xfffff508(%rip)
21fd(2): xor %esi,%esi
21ff(5): mov $0x5,%edi
2204(5): call 0xfffff4ec(%rip)
2209(3): test %rax,%rax
220c(2): jz 0x1a(%rip)
220e(7): lea 0x4dcb(%rip),%rsi
2215(5): mov $0x3,%edx
221a(3): mov %rax,%rdi
221d(5): call 0xfffff2c3(%rip)
2222(2): test %eax,%eax
2224(2): jnz 0x45(%rip)
2226(7): lea 0x4db7(%rip),%rsi
222d(5): mov $0x5,%edx
2232(2): xor %edi,%edi
2234(7): lea 0x4d18(%rip),%r12
223b(7): lea 0x4d36(%rip),%rbx
2242(5): call 0xfffff30e(%rip)
2247(7): lea 0x4d05(%rip),%rcx
224e(7): lea 0x51e3(%rip),%rdx
2255(3): mov %rax,%rsi
2258(5): mov $0x1,%edi
225d(2): xor %eax,%eax
225f(5): call 0xfffff4a1(%rip)
2264(5): jmp 0xffffff4a(%rip)
2269(7): lea 0x4ce3(%rip),%r12
2270(7): mov 0x207e31(%rip),%r13
2277(7): lea 0x51e2(%rip),%rsi
227e(2): xor %edi,%edi
2280(5): mov $0x5,%edx
2285(5): call 0xfffff2cb(%rip)
228a(3): mov %r13,%rsi
228d(3): mov %rax,%rdi
2290(5): call 0xfffff3b0(%rip)
2295(5): jmp 0xfffffed4(%rip)

"buffer_or_output" :
22a0(2): push %r14
22a2(2): push %r13
22a4(3): mov %rdi,%r14
22a7(2): push %r12
22a9(1): push %rbp
22aa(1): push %rbx
22ab(3): mov (%rsi),%r13
22ae(3): test %r13,%r13
22b1(2): jz 0x4f(%rip)
22b3(3): mov %rdx,%r12
22b6(3): mov %rsi,%rbx
22b9(5): call 0xfffff2b7(%rip)
22be(3): mov %rax,%rbp
22c1(4): cmp %rbp,(%r12)
22c5(5): mov $0x1,%eax
22ca(2): jnbe 0xe(%rip)
22cc(1): pop %rbx
22cd(1): pop %rbp
22ce(2): pop %r12
22d0(2): pop %r13
22d2(2): pop %r14
22d4(1): ret near (%rsp)
22d5(3): nop (%rax)
22d8(4): lea 0x1(%rbp),%rdx
22dc(3): mov %r14,%rsi
22df(3): mov %r13,%rdi
22e2(5): call 0xfffff38e(%rip)
22e7(3): add %rbp,(%rbx)
22ea(4): sub %rbp,(%r12)
22ee(2): xor %eax,%eax
22f0(1): pop %rbx
22f1(1): pop %rbp
22f2(2): pop %r12
22f4(2): pop %r13
22f6(2): pop %r14
22f8(1): ret near (%rsp)
22f9(7): nop 0x0(%rax)
2300(7): mov 0x207da1(%rip),%rsi
2307(5): call 0xfffff339(%rip)
230c(1): pop %rbx
230d(2): xor %eax,%eax
230f(1): pop %rbp
2310(2): pop %r12
2312(2): pop %r13
2314(2): pop %r14
2316(1): ret near (%rsp)

"relpath" :
2320(2): push %r15
2322(2): push %r14
2324(2): push %r13
2326(2): push %r12
2328(1): push %rbp
2329(1): push %rbx
232a(4): sub $0x18,%rsp
232e(5): movzx 0x1(%rdi),%r8d
2333(4): mov %rcx,(%rsp)
2337(4): movzx 0x1(%rsi),%ecx
233b(5): mov %rdx,0x8(%rsp)
2340(3): cmp $0x2f,%cl
2343(4): setz %r9b
2347(4): cmp $0x2f,%r8b
234b(3): setz %dl
234e(2): xor %eax,%eax
2350(3): cmp %dl,%r9b
2353(2): jz 0x15(%rip)
2355(4): add $0x18,%rsp
2359(1): pop %rbx
235a(1): pop %rbp
235b(2): pop %r12
235d(2): pop %r13
235f(2): pop %r14
2361(2): pop %r15
2363(1): ret near (%rsp)
2364(4): nop 0x0(%rax)
2368(3): movzx (%rdi),%edx
236b(4): movzx (%rsi),%r10d
236f(2): test %dl,%dl
2371(4): setz %r9b
2375(3): test %r10b,%r10b
2378(2): jz 0xffffffdd(%rip)
237a(3): cmp %dl,%r10b
237d(3): setnz %al
2380(3): or %r9b,%al
2383(6): jnz 0x1cd(%rip)
2389(2): xor %edx,%edx
238b(3): xor %r9d,%r9d
238e(2): jmp 0x26(%rip)
2390(4): add $0x1,%rdx
2394(3): cmp %cl,%r8b
2397(6): jnz 0x199(%rip)
239d(3): test %r10b,%r10b
23a0(6): jnz 0x190(%rip)
23a6(3): mov %ecx,%r10d
23a9(6): movzx 0x1(%rdi,%rdx,1),%r8d
23af(5): movzx 0x1(%rsi,%rdx,1),%ecx
23b4(4): lea 0x1(%rdx),%r11d
23b8(4): cmp $0x2f,%r10b
23bc(4): cmove %r11d,%r9d
23c0(3): test %r8b,%r8b
23c3(4): setz %r10b
23c7(2): test %cl,%cl
23c9(2): jnz 0xffffffc7(%rip)
23cb(4): cmp $0x2f,%r8b
23cf(6): jz 0x171(%rip)
23d5(3): test %r10b,%r10b
23d8(6): jnz 0x168(%rip)
23de(3): test %r9d,%r9d
23e1(6): jz 0xffffff74(%rip)
23e7(3): movsxd %r9d,%r9
23ea(4): lea 0x0(%rsi,%r9,1),%r12
23ee(4): lea 0x0(%rdi,%r9,1),%rbx
23f2(5): movzx (%r12),%eax
23f7(2): cmp $0x2f,%al
23f9(2): jnz 0xc(%rip)
23fb(6): movzx 0x1(%r12),%eax
2401(4): add $0x1,%r12
2405(2): xor %edx,%edx
2407(3): cmp $0x2f,(%rbx)
240a(3): setz %dl
240d(3): add %rdx,%rbx
2410(2): test %al,%al
2412(2): jnz 0x46(%rip)
2414(3): cmp $0x0,(%rbx)
2417(7): lea 0x50bf(%rip),%rax
241e(5): lea 0x8(%rsp),%rsi
2423(3): mov %rsp,%rdx
2426(4): cmove %rax,%rbx
242a(3): mov %rbx,%rdi
242d(5): call 0xfffffe73(%rip)
2432(2): mov %eax,%ebp
2434(3): test %bpl,%bpl
2437(6): jnz 0xc9(%rip)
243d(4): add $0x18,%rsp
2441(2): mov %ebp,%eax
2443(1): pop %rbx
2444(3): xor $0x1,%eax
2447(1): pop %rbp
2448(2): pop %r12
244a(2): pop %r13
244c(2): pop %r14
244e(2): pop %r15
2450(1): ret near (%rsp)
2451(7): nop 0x0(%rax)
2458(5): lea 0x8(%rsp),%r13
245d(3): mov %rsp,%r14
2460(7): lea 0x5075(%rip),%rdi
2467(3): mov %r14,%rdx
246a(3): mov %r13,%rsi
246d(5): call 0xfffffe33(%rip)
2472(2): mov %eax,%ebp
2474(5): movzx (%r12),%eax
2479(2): test %al,%al
247b(2): jz 0x45(%rip)
247d(7): lea 0x5057(%rip),%r15
2484(2): jmp 0x19(%rip)
2486(a): nop 0x0(%rax,%rax,1)
2490(4): add $0x1,%r12
2494(5): movzx (%r12),%eax
2499(2): test %al,%al
249b(2): jz 0x25(%rip)
249d(2): cmp $0x2f,%al
249f(2): jnz 0xfffffff1(%rip)
24a1(4): add $0x1,%r12
24a5(3): mov %r14,%rdx
24a8(3): mov %r13,%rsi
24ab(3): mov %r15,%rdi
24ae(5): call 0xfffffdf2(%rip)
24b3(2): or %eax,%ebp
24b5(5): movzx (%r12),%eax
24ba(2): test %al,%al
24bc(2): jnz 0xffffffe1(%rip)
24be(2): nop 
24c0(3): cmp $0x0,(%rbx)
24c3(6): jz 0xffffff71(%rip)
24c9(7): lea 0x512e(%rip),%rdi
24d0(3): mov %r14,%rdx
24d3(3): mov %r13,%rsi
24d6(5): call 0xfffffdca(%rip)
24db(3): mov %r14,%rdx
24de(3): mov %eax,%r12d
24e1(3): mov %r13,%rsi
24e4(3): mov %rbx,%rdi
24e7(5): call 0xfffffdb9(%rip)
24ec(3): or %eax,%r12d
24ef(3): or %r12d,%ebp
24f2(5): jmp 0xffffff42(%rip)
24f7(9): nop 0x0(%rax,%rax,1)
2500(7): lea 0x4fd8(%rip),%rsi
2507(2): xor %edi,%edi
2509(5): mov $0x5,%edx
250e(5): call 0xfffff042(%rip)
2513(7): lea 0x4ff3(%rip),%rdx
251a(3): mov %rax,%rcx
251d(5): mov $0x24,%esi
2522(2): xor %edi,%edi
2524(2): xor %eax,%eax
2526(5): call 0xfffff1fa(%rip)
252b(5): jmp 0xffffff12(%rip)
2530(3): cmp $0x2f,%cl
2533(6): jz 0xfffffea2(%rip)
2539(5): jmp 0xfffffea5(%rip)
253e(2): nop 
2540(3): mov %r11d,%r9d
2543(5): jmp 0xfffffea4(%rip)
2548(8): nop 0x0(%rax,%rax,1)
2550(2): xor %eax,%eax
2552(5): jmp 0xfffffe03(%rip)

"canonicalize_filename_mode" :
2560(2): push %r15
2562(2): push %r14
2564(2): push %r13
2566(2): push %r12
2568(1): push %rbp
2569(1): push %rbx
256a(7): sub $0xe8,%rsp
2571(9): mov $0x28,%rax
257a(8): mov %rax,0xd8(%rsp)
2582(2): xor %eax,%eax
2584(2): mov %esi,%eax
2586(3): and $0x4,%eax
2589(5): setnz 0x1b(%rsp)
258e(3): and $0x3,%esi
2591(4): mov %eax,0x1c(%rsp)
2595(3): lea 0xffffffff(%rsi),%eax
2598(4): mov %esi,0x4(%rsp)
259c(2): test %eax,%esi
259e(6): jnz 0x552(%rip)
25a4(3): test %rdi,%rdi
25a7(3): mov %rdi,%r14
25aa(6): jz 0x546(%rip)
25b0(3): movzx (%rdi),%eax
25b3(2): test %al,%al
25b5(6): jz 0x57b(%rip)
25bb(2): cmp $0x2f,%al
25bd(6): jz 0x4c3(%rip)
25c3(5): call 0x431d(%rip)
25c8(3): test %rax,%rax
25cb(3): mov %rax,%rbp
25ce(6): jz 0x1b2(%rip)
25d4(3): mov %rax,%rdi
25d7(5): call 0xffffef99(%rip)
25dc(6): cmp $0xfff,%rax
25e2(3): mov %rax,%r15
25e5(6): jbe 0x4bb(%rip)
25eb(3): add %rbp,%r15
25ee(3): mov %r15,%rbx
25f1(5): lea 0x40(%rsp),%rax
25f6(5): mov %r14,0x20(%rsp)
25fb(9): mov $0x0,0x10(%rsp)
2604(9): mov $0x0,0x30(%rsp)
260d(9): mov $0x0,0x28(%rsp)
2616(5): mov %rax,0x8(%rsp)
261b(4): movzx (%r14),%eax
261f(2): test %al,%al
2621(6): jz 0x10e(%rip)
2627(9): nop 0x0(%rax,%rax,1)
2630(2): cmp $0x2f,%al
2632(2): jnz 0x1a(%rip)
2634(4): nop 0x0(%rax)
2638(4): add $0x1,%r14
263c(4): movzx (%r14),%eax
2640(2): cmp $0x2f,%al
2642(2): jz 0xfffffff6(%rip)
2644(2): test %al,%al
2646(6): jz 0x2ca(%rip)
264c(3): mov %r14,%r13
264f(2): jmp 0xe(%rip)
2651(7): nop 0x0(%rax)
2658(3): cmp $0x2f,%dl
265b(2): jz 0xf(%rip)
265d(4): add $0x1,%r13
2661(5): movzx 0x0(%r13),%edx
2666(2): test %dl,%dl
2668(2): jnz 0xfffffff0(%rip)
266a(3): cmp %r14,%r13
266d(6): jz 0xc2(%rip)
2673(3): mov %r13,%r12
2676(3): sub %r14,%r12
2679(4): cmp $0x1,%r12
267d(6): jz 0x1d3(%rip)
2683(4): cmp $0x2,%r12
2687(2): jnz 0xa(%rip)
2689(2): cmp $0x2e,%al
268b(6): jz 0x295(%rip)
2691(5): cmp $0x2f,0xffffffff(%r15)
2696(2): jz 0xa(%rip)
2698(4): mov $0x2f,(%r15)
269c(4): add $0x1,%r15
26a0(4): lea 0x0(%r15,%r12,1),%rax
26a4(3): cmp %rax,%rbx
26a7(2): jnbe 0x33(%rip)
26a9(3): sub %rbp,%rbx
26ac(3): sub %rbp,%r15
26af(3): mov %rbp,%rdi
26b2(5): lea 0x1(%r12,%rbx,1),%rax
26b7(7): add $0x1000,%rbx
26be(7): cmp $0x1000,%r12
26c5(4): cmovnl %rax,%rbx
26c9(3): mov %rbx,%rsi
26cc(5): call 0x3fe4(%rip)
26d1(3): mov %rax,%rbp
26d4(3): add %rax,%rbx
26d7(3): add %rax,%r15
26da(3): mov %r15,%rdi
26dd(3): mov %r12,%rdx
26e0(3): mov %r14,%rsi
26e3(5): call 0xffffef8d(%rip)
26e8(5): cmp $0x2,0x4(%rsp)
26ed(4): lea 0x0(%r15,%r12,1),%r15
26f1(4): mov $0x0,(%r15)
26f5(6): jnz 0xbb(%rip)
26fb(5): cmp $0x0,0x1b(%rsp)
2700(6): jz 0xb0(%rip)
2706(8): mov $0x0,0x58(%rsp)
270e(5): cmp $0x0,0x0(%r13)
2713(2): jz 0xd(%rip)
2715(5): cmp $0x2,0x4(%rsp)
271a(6): jnz 0x45d(%rip)
2720(3): mov %r13,%r14
2723(4): movzx (%r14),%eax
2727(2): test %al,%al
2729(6): jnz 0xffffff07(%rip)
272f(4): lea 0x1(%rbp),%rax
2733(3): cmp %rax,%r15
2736(2): jbe 0xd(%rip)
2738(5): cmp $0x2f,0xffffffff(%r15)
273d(2): jnz 0x6(%rip)
273f(4): sub $0x1,%r15
2743(4): lea 0x1(%r15),%rax
2747(4): mov $0x0,(%r15)
274b(3): cmp %rax,%rbx
274e(2): jz 0x14(%rip)
2750(3): sub %rbp,%r15
2753(3): mov %rbp,%rdi
2756(4): lea 0x1(%r15),%rsi
275a(5): call 0x3f56(%rip)
275f(3): mov %rax,%rbp
2762(5): mov 0x28(%rsp),%rdi
2767(5): call 0xffffed49(%rip)
276c(5): mov 0x10(%rsp),%rax
2771(3): test %rax,%rax
2774(2): jz 0xc(%rip)
2776(3): mov %rax,%rdi
2779(5): call 0x10a7(%rip)
277e(2): nop 
2780(8): mov 0xd8(%rsp),%rcx
2788(9): xor $0x28,%rcx
2791(3): mov %rbp,%rax
2794(6): jnz 0x3fd(%rip)
279a(7): add $0xe8,%rsp
27a1(1): pop %rbx
27a2(1): pop %rbp
27a3(2): pop %r12
27a5(2): pop %r13
27a7(2): pop %r14
27a9(2): pop %r15
27ab(1): ret near (%rsp)
27ac(4): nop 0x0(%rax)
27b0(4): mov 0x1c(%rsp),%eax
27b4(5): mov 0x8(%rsp),%rdx
27b9(3): mov %rbp,%rsi
27bc(5): mov $0x1,%edi
27c1(2): test %eax,%eax
27c3(6): jz 0xbd(%rip)
27c9(5): call 0xffffeec7(%rip)
27ce(2): test %eax,%eax
27d0(3): setnz %al
27d3(2): test %al,%al
27d5(6): jz 0x8b(%rip)
27db(5): call 0xffffecf5(%rip)
27e0(3): mov %rax,%r14
27e3(2): mov (%rax),%edx
27e5(4): mov 0x4(%rsp),%eax
27e9(2): test %eax,%eax
27eb(2): jz 0x33(%rip)
27ed(3): cmp $0x1,%eax
27f0(6): jnz 0xffffff16(%rip)
27f6(7): lea 0x4e01(%rip),%rsi
27fd(3): mov %r13,%rdi
2800(4): mov %edx,0x38(%rsp)
2804(5): call 0xffffee1c(%rip)
2809(6): cmp $0x0,0x0(%r13,%rax,1)
280f(4): mov 0x38(%rsp),%edx
2813(2): jnz 0xb(%rip)
2815(3): cmp $0x2,%edx
2818(6): jz 0xffffff08(%rip)
281e(3): mov %r14,%r12
2821(5): mov 0x28(%rsp),%rdi
2826(4): mov %edx,0x4(%rsp)
282a(5): call 0xffffec86(%rip)
282f(3): mov %rbp,%rdi
2832(5): call 0xffffec7e(%rip)
2837(6): cmp $0x0,0x10(%rsp)
283d(4): mov 0x4(%rsp),%edx
2841(6): jz 0xbb(%rip)
2847(5): jmp 0xa3(%rip)
284c(4): nop 0x0(%rax)
2850(2): cmp $0x2e,%al
2852(6): jnz 0xfffffe3f(%rip)
2858(5): jmp 0xfffffec8(%rip)
285d(3): nop (%rax)
2860(4): mov 0x58(%rsp),%eax
2864(5): and $0xf000,%eax
2869(5): cmp $0xa000,%eax
286e(2): jz 0x22(%rip)
2870(5): cmp $0x4000,%eax
2875(6): jz 0xfffffeab(%rip)
287b(5): jmp 0xfffffe93(%rip)
2880(5): call 0xffffed00(%rip)
2885(2): test %eax,%eax
2887(3): setnz %al
288a(5): jmp 0xffffff49(%rip)
288f(1): nop 
2890(6): cmp $0x0,0x10(%rsp)
2896(6): jz 0x1b0(%rip)
289c(5): mov 0x8(%rsp),%rdx
28a1(5): mov 0x20(%rsp),%rsi
28a6(5): mov 0x10(%rsp),%rdi
28ab(5): call 0x455(%rip)
28b0(2): test %al,%al
28b2(6): jz 0xbe(%rip)
28b8(5): cmp $0x2,0x4(%rsp)
28bd(6): jz 0xfffffe63(%rip)
28c3(5): call 0xffffec0d(%rip)
28c8(5): mov $0x28,%edx
28cd(3): mov %rax,%r12
28d0(5): mov 0x28(%rsp),%rdi
28d5(4): mov %edx,0x4(%rsp)
28d9(5): call 0xffffebd7(%rip)
28de(3): mov %rbp,%rdi
28e1(5): call 0xffffebcf(%rip)
28e6(4): mov 0x4(%rsp),%edx
28ea(5): mov 0x10(%rsp),%rdi
28ef(4): mov %edx,0x4(%rsp)
28f3(5): call 0xf2d(%rip)
28f8(4): mov 0x4(%rsp),%edx
28fc(4): mov %edx,(%r12)
2900(2): xor %ebp,%ebp
2902(5): jmp 0xfffffe7e(%rip)
2907(9): nop 0x0(%rax,%rax,1)
2910(3): mov %r14,%r13
2913(5): jmp 0xfffffd57(%rip)
2918(8): nop 0x0(%rax,%rax,1)
2920(5): cmp $0x2e,0x1(%r14)
2925(6): jnz 0xfffffd6c(%rip)
292b(4): lea 0x1(%rbp),%rax
292f(3): mov %r13,%r14
2932(3): cmp %rax,%r15
2935(6): jbe 0xfffffce6(%rip)
293b(4): lea 0xffffffff(%r15),%rax
293f(3): cmp %rax,%rbp
2942(6): jnb 0x247(%rip)
2948(5): cmp $0x2f,0xfffffffe(%r15)
294d(3): mov %rax,%r15
2950(6): jz 0xfffffccb(%rip)
2956(4): sub $0x1,%r15
295a(3): cmp %r15,%rbp
295d(6): jz 0xfffffdc3(%rip)
2963(5): cmp $0x2f,0xffffffff(%r15)
2968(6): jz 0xfffffdb8(%rip)
296e(2): jmp 0xffffffe8(%rip)
2970(5): mov 0x8(%rsp),%rdx
2975(5): mov 0x20(%rsp),%rsi
297a(5): mov 0x10(%rsp),%rdi
297f(5): call 0x2f1(%rip)
2984(5): mov 0x70(%rsp),%rsi
2989(3): mov %rbp,%rdi
298c(5): call 0x4014(%rip)
2991(3): test %rax,%rax
2994(3): mov %rax,%r14
2997(6): jz 0x16b(%rip)
299d(3): mov %rax,%rdi
29a0(5): call 0xffffebd0(%rip)
29a5(3): mov %r13,%rdi
29a8(3): mov %rax,%r12
29ab(5): mov %rax,0x20(%rsp)
29b0(5): call 0xffffebc0(%rip)
29b5(6): cmp $0x0,0x30(%rsp)
29bb(3): mov %rax,%rdx
29be(5): lea 0x1(%r12,%rdx,1),%rcx
29c3(6): jz 0xfc(%rip)
29c9(5): cmp %rcx,0x30(%rsp)
29ce(2): jnb 0x23(%rip)
29d0(5): mov 0x28(%rsp),%rdi
29d5(3): mov %rcx,%rsi
29d8(5): mov %rdx,0x38(%rsp)
29dd(5): mov %rcx,0x30(%rsp)
29e2(5): call 0x3cce(%rip)
29e7(5): mov 0x38(%rsp),%rdx
29ec(5): mov %rax,0x28(%rsp)
29f1(5): mov 0x28(%rsp),%r12
29f6(5): mov 0x20(%rsp),%rdi
29fb(4): add $0x1,%rdx
29ff(3): mov %r13,%rsi
2a02(3): add %r12,%rdi
2a05(3): mov %r12,%r13
2a08(5): call 0xffffed08(%rip)
2a0d(5): mov 0x20(%rsp),%rdx
2a12(3): mov %r14,%rsi
2a15(3): mov %r12,%rdi
2a18(5): call 0xffffec58(%rip)
2a1d(4): cmp $0x2f,(%r14)
2a21(5): mov %r12,0x20(%rsp)
2a26(4): lea 0x1(%rbp),%rax
2a2a(6): jz 0xfa(%rip)
2a30(3): cmp %rax,%r15
2a33(6): jnbe 0x10f(%rip)
2a39(3): mov %r14,%rdi
2a3c(5): call 0xffffea74(%rip)
2a41(5): jmp 0xfffffcdf(%rip)
2a46(7): lea 0x16a3(%rip),%r8
2a4d(7): lea 0x165c(%rip),%rcx
2a54(2): xor %esi,%esi
2a56(7): lea 0x15e3(%rip),%rdx
2a5d(5): mov $0x7,%edi
2a62(5): call 0xb6e(%rip)
2a67(3): test %rax,%rax
2a6a(5): mov %rax,0x10(%rsp)
2a6f(6): jnz 0xfffffe2d(%rip)
2a75(5): call 0x3e2b(%rip)
2a7a(6): nop 0x0(%rax,%rax,1)
2a80(5): mov $0x1000,%edi
2a85(5): call 0x3bcb(%rip)
2a8a(3): mov %rax,%rbp
2a8d(7): lea 0x1000(%rax),%rbx
2a94(4): lea 0x1(%rax),%r15
2a98(3): mov $0x2f,(%rax)
2a9b(5): jmp 0xfffffb56(%rip)
2aa0(3): mov %rbp,%rdi
2aa3(5): mov $0x1000,%esi
2aa8(5): call 0x3c08(%rip)
2aad(3): mov %rax,%rbp
2ab0(3): add %rax,%r15
2ab3(7): lea 0x1000(%rax),%rbx
2aba(5): jmp 0xfffffb37(%rip)
2abf(7): cmp $0x1000,%rcx
2ac6(5): mov $0x1000,%eax
2acb(5): mov %rdx,0x38(%rsp)
2ad0(4): cmovnb %rcx,%rax
2ad4(3): mov %rax,%rdi
2ad7(5): mov %rax,0x30(%rsp)
2adc(5): call 0x3b74(%rip)
2ae1(5): mov 0x38(%rsp),%rdx
2ae6(5): mov %rax,0x28(%rsp)
2aeb(5): jmp 0xffffff06(%rip)
2af0(5): call 0xffffe9e0(%rip)
2af5(2): xor %ebp,%ebp
2af7(6): mov $0x16,(%rax)
2afd(5): jmp 0xfffffc83(%rip)
2b02(5): call 0xffffe9ce(%rip)
2b07(5): cmp $0x2,0x4(%rsp)
2b0c(3): mov %rax,%r14
2b0f(2): mov (%rax),%edx
2b11(2): jnz 0xb(%rip)
2b13(3): cmp $0xc,%edx
2b16(6): jnz 0xfffffc0a(%rip)
2b1c(3): mov %r14,%r12
2b1f(5): jmp 0xfffffdb1(%rip)
2b24(4): mov $0x2f,0x0(%rbp)
2b28(3): mov %rax,%r15
2b2b(5): jmp 0xffffff0e(%rip)
2b30(5): call 0xffffe9a0(%rip)
2b35(2): xor %ebp,%ebp
2b37(6): mov $0x2,(%rax)
2b3d(5): jmp 0xfffffc43(%rip)
2b42(4): lea 0xffffffff(%r15),%rax
2b46(3): cmp %rax,%rbp
2b49(2): jnb 0x9(%rip)
2b4b(5): cmp $0x2f,0xfffffffe(%r15)
2b50(2): jnz 0xd(%rip)
2b52(3): mov %rax,%r15
2b55(5): jmp 0xfffffee4(%rip)
2b5a(3): mov %r15,%rax
2b5d(4): lea 0xffffffff(%rax),%r15
2b61(3): cmp %r15,%rbp
2b64(6): jz 0xfffffed5(%rip)
2b6a(5): cmp $0x2f,0xffffffff(%r15)
2b6f(6): jz 0xfffffeca(%rip)
2b75(2): jmp 0xffffffe5(%rip)
2b77(5): call 0xffffe959(%rip)
2b7c(5): mov $0x14,%edx
2b81(3): mov %rax,%r12
2b84(5): jmp 0xfffffc9d(%rip)
2b89(3): mov %rax,%r15
2b8c(5): jmp 0xfffffa8f(%rip)
2b91(5): call 0xffffe9ff(%rip)

"close_stdout_set_file_name" :
2ba0(7): mov %rdi,0x207569(%rip)
2ba7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2bb0(7): mov %dil,0x207551(%rip)
2bb7(1): ret near (%rsp)

"close_stdout" :
2bc0(1): push %rbp
2bc1(1): push %rbx
2bc2(4): sub $0x8,%rsp
2bc6(7): mov 0x2074db(%rip),%rdi
2bcd(5): call 0x3ec3(%rip)
2bd2(2): test %eax,%eax
2bd4(2): jz 0x18(%rip)
2bd6(5): call 0xffffe8fa(%rip)
2bdb(7): cmp $0x0,0x207526(%rip)
2be2(3): mov %rax,%rbx
2be5(2): jz 0x1e(%rip)
2be7(3): cmp $0x20,(%rax)
2bea(2): jnz 0x19(%rip)
2bec(7): mov 0x2074ed(%rip),%rdi
2bf3(5): call 0x3e9d(%rip)
2bf8(2): test %eax,%eax
2bfa(2): jnz 0x48(%rip)
2bfc(4): add $0x8,%rsp
2c00(1): pop %rbx
2c01(1): pop %rbp
2c02(1): ret near (%rsp)
2c03(7): lea 0x48f3(%rip),%rsi
2c0a(2): xor %edi,%edi
2c0c(5): mov $0x5,%edx
2c11(5): call 0xffffe93f(%rip)
2c16(7): mov 0x2074f3(%rip),%rdi
2c1d(3): mov %rax,%rbp
2c20(3): test %rdi,%rdi
2c23(2): jz 0x2a(%rip)
2c25(5): call 0x2ffb(%rip)
2c2a(2): mov (%rbx),%esi
2c2c(7): lea 0x48d6(%rip),%rdx
2c33(3): mov %rax,%rcx
2c36(3): mov %rbp,%r8
2c39(2): xor %edi,%edi
2c3b(2): xor %eax,%eax
2c3d(5): call 0xffffeae3(%rip)
2c42(6): mov 0x2073d8(%rip),%edi
2c48(5): call 0xffffe8a8(%rip)
2c4d(2): mov (%rbx),%esi
2c4f(7): lea 0x48b7(%rip),%rdx
2c56(3): mov %rax,%rcx
2c59(2): xor %edi,%edi
2c5b(2): xor %eax,%eax
2c5d(5): call 0xffffeac3(%rip)
2c62(2): jmp 0xffffffe0(%rip)

"record_file" :
2c70(3): test %rdi,%rdi
2c73(2): jz 0x7d(%rip)
2c75(2): push %r13
2c77(2): push %r12
2c79(3): mov %rdi,%r13
2c7c(1): push %rbp
2c7d(1): push %rbx
2c7e(3): mov %rsi,%r12
2c81(5): mov $0x18,%edi
2c86(3): mov %rdx,%rbp
2c89(4): sub $0x8,%rsp
2c8d(5): call 0x39c3(%rip)
2c92(3): mov %r12,%rdi
2c95(3): mov %rax,%rbx
2c98(5): call 0x3be8(%rip)
2c9d(3): mov %rax,(%rbx)
2ca0(4): mov 0x8(%rbp),%rax
2ca4(3): mov %rbx,%rsi
2ca7(3): mov %r13,%rdi
2caa(4): mov %rax,0x8(%rbx)
2cae(4): mov 0x0(%rbp),%rax
2cb2(4): mov %rax,0x10(%rbx)
2cb6(5): call 0x111a(%rip)
2cbb(3): test %rax,%rax
2cbe(2): jz 0x34(%rip)
2cc0(3): cmp %rax,%rbx
2cc3(2): jz 0x1d(%rip)
2cc5(4): add $0x8,%rsp
2cc9(3): mov %rbx,%rdi
2ccc(1): pop %rbx
2ccd(1): pop %rbp
2cce(2): pop %r12
2cd0(2): pop %r13
2cd2(5): jmp 0x141e(%rip)
2cd7(9): nop 0x0(%rax,%rax,1)
2ce0(4): add $0x8,%rsp
2ce4(1): pop %rbx
2ce5(1): pop %rbp
2ce6(2): pop %r12
2ce8(2): pop %r13
2cea(1): ret near (%rsp)
2ceb(5): nop 0x0(%rax,%rax,1)
2cf0(2): REP ret near (%rsp)
2cf2(5): call 0x3bae(%rip)

"seen_file" :
2d00(4): sub $0x28,%rsp
2d04(9): mov $0x28,%rax
2d0d(5): mov %rax,0x18(%rsp)
2d12(2): xor %eax,%eax
2d14(3): test %rdi,%rdi
2d17(2): jz 0x25(%rip)
2d19(4): mov 0x8(%rdx),%rax
2d1d(4): mov %rsi,(%rsp)
2d21(3): mov %rsp,%rsi
2d24(5): mov %rax,0x8(%rsp)
2d29(3): mov (%rdx),%rax
2d2c(5): mov %rax,0x10(%rsp)
2d31(5): call 0x62f(%rip)
2d36(3): test %rax,%rax
2d39(3): setnz %al
2d3c(5): mov 0x18(%rsp),%rcx
2d41(9): xor $0x28,%rcx
2d4a(2): jnz 0x7(%rip)
2d4c(4): add $0x28,%rsp
2d50(1): ret near (%rsp)
2d51(5): call 0xffffe83f(%rip)

"next_prime" :
2d60(4): cmp $0xa,%rdi
2d64(5): mov $0xa,%eax
2d69(a): mov $0x-6148914691236517205,%r9
2d73(4): cmovnae %rax,%rdi
2d77(4): or $0x1,%rdi
2d7b(4): cmp $0xffffffff,%rdi
2d7f(2): jz 0x70(%rip)
2d81(7): nop 0x0(%rax)
2d88(3): mov %rdi,%rax
2d8b(3): mov %rdi,%rcx
2d8e(3): mul %rax,%r9,%rdx
2d91(3): mov %rdx,%rax
2d94(3): shr $0x1,%rax
2d97(4): lea 0x0(%rax,%rax,2),%rax
2d9b(3): sub %rax,%rcx
2d9e(4): cmp $0x9,%rdi
2da2(3): mov %rcx,%rax
2da5(2): jbe 0x3b(%rip)
2da7(3): test %rcx,%rcx
2daa(2): jz 0x3b(%rip)
2dac(6): mov $0x10,%r8d
2db2(5): mov $0x9,%esi
2db7(5): mov $0x3,%ecx
2dbc(2): jmp 0xd(%rip)
2dbe(2): nop 
2dc0(4): add $0x8,%r8
2dc4(3): test %rdx,%rdx
2dc7(2): jz 0x1e(%rip)
2dc9(4): add $0x2,%rcx
2dcd(2): xor %edx,%edx
2dcf(3): mov %rdi,%rax
2dd2(3): div %rcx,%rax
2dd5(3): add %r8,%rsi
2dd8(3): cmp %rdi,%rsi
2ddb(3): mov %rdx,%rax
2dde(2): jb 0xffffffe2(%rip)
2de0(3): test %rax,%rax
2de3(2): jnz 0xc(%rip)
2de5(4): add $0x2,%rdi
2de9(4): cmp $0xffffffff,%rdi
2ded(2): jnz 0xffffff9b(%rip)
2def(3): mov %rdi,%rax
2df2(1): ret near (%rsp)

"raw_hasher" :
2e00(3): mov %rdi,%rax
2e03(2): xor %edx,%edx
2e05(4): ror $0x3,%rax
2e09(3): div %rsi,%rax
2e0c(3): mov %rdx,%rax
2e0f(1): ret near (%rsp)

"raw_comparator" :
2e10(3): cmp %rsi,%rdi
2e13(3): setz %al
2e16(1): ret near (%rsp)

"safe_hasher" :
2e20(1): push %rbx
2e21(3): mov %rdi,%rbx
2e24(3): mov %rsi,%rdi
2e27(4): mov 0x10(%rbx),%rsi
2e2b(3): call 0x30(%rbx)
2e2e(4): cmp %rax,0x10(%rbx)
2e32(2): jbe 0xb(%rip)
2e34(4): shl/sal $0x4,%rax
2e38(3): add (%rbx),%rax
2e3b(1): pop %rbx
2e3c(1): ret near (%rsp)
2e3d(5): call 0xffffe683(%rip)

"hash_find_entry" :
2e50(2): push %r14
2e52(2): push %r13
2e54(3): mov %rdx,%r14
2e57(2): push %r12
2e59(1): push %rbp
2e5a(3): mov %rdi,%r12
2e5d(1): push %rbx
2e5e(3): mov %rsi,%rbp
2e61(3): mov %ecx,%r13d
2e64(5): call 0xffffffbc(%rip)
2e69(3): mov %rax,(%r14)
2e6c(3): mov (%rax),%rsi
2e6f(3): test %rsi,%rsi
2e72(6): jz 0xee(%rip)
2e78(3): cmp %rbp,%rsi
2e7b(3): mov %rax,%rbx
2e7e(6): jz 0x95(%rip)
2e84(3): mov %rbp,%rdi
2e87(5): call 0x38(%r12)
2e8c(2): test %al,%al
2e8e(6): jnz 0x82(%rip)
2e94(4): mov 0x8(%rbx),%rax
2e98(3): test %rax,%rax
2e9b(6): jz 0xc5(%rip)
2ea1(3): mov (%rax),%rsi
2ea4(3): cmp %rsi,%rbp
2ea7(2): jnz 0x22(%rip)
2ea9(2): jmp 0x33(%rip)
2eab(5): nop 0x0(%rax,%rax,1)
2eb0(4): mov 0x8(%rbx),%rbx
2eb4(4): mov 0x8(%rbx),%rax
2eb8(3): test %rax,%rax
2ebb(6): jz 0xa5(%rip)
2ec1(3): mov (%rax),%rsi
2ec4(3): cmp %rbp,%rsi
2ec7(2): jz 0x15(%rip)
2ec9(3): mov %rbp,%rdi
2ecc(5): call 0x38(%r12)
2ed1(2): test %al,%al
2ed3(2): jz 0xffffffdd(%rip)
2ed5(4): mov 0x8(%rbx),%rax
2ed9(3): mov (%rax),%rsi
2edc(3): test %r13b,%r13b
2edf(2): jz 0x1f(%rip)
2ee1(4): mov 0x8(%rax),%rdx
2ee5(4): mov %rdx,0x8(%rbx)
2ee9(7): mov $0x0,(%rax)
2ef0(5): mov 0x48(%r12),%rdx
2ef5(4): mov %rdx,0x8(%rax)
2ef9(5): mov %rax,0x48(%r12)
2efe(1): pop %rbx
2eff(3): mov %rsi,%rax
2f02(1): pop %rbp
2f03(2): pop %r12
2f05(2): pop %r13
2f07(2): pop %r14
2f09(1): ret near (%rsp)
2f0a(6): nop 0x0(%rax,%rax,1)
2f10(3): mov (%rbx),%rsi
2f13(3): test %r13b,%r13b
2f16(2): jz 0xffffffe8(%rip)
2f18(4): mov 0x8(%rbx),%rax
2f1c(3): test %rax,%rax
2f1f(2): jz 0x31(%rip)
2f21(4): movdqu (%rax),%xmm0
2f25(3): movups %xmm0,(%rbx)
2f28(7): mov $0x0,(%rax)
2f2f(5): mov 0x48(%r12),%rdx
2f34(4): mov %rdx,0x8(%rax)
2f38(5): mov %rax,0x48(%r12)
2f3d(3): mov %rsi,%rax
2f40(1): pop %rbx
2f41(1): pop %rbp
2f42(2): pop %r12
2f44(2): pop %r13
2f46(2): pop %r14
2f48(1): ret near (%rsp)
2f49(7): nop 0x0(%rax)
2f50(7): mov $0x0,(%rbx)
2f57(2): jmp 0xffffffa7(%rip)
2f59(7): nop 0x0(%rax)
2f60(2): xor %esi,%esi
2f62(1): pop %rbx
2f63(3): mov %rsi,%rax
2f66(1): pop %rbp
2f67(2): pop %r12
2f69(2): pop %r13
2f6b(2): pop %r14
2f6d(1): ret near (%rsp)

"check_tuning.isra.0" :
2f70(3): mov (%rdi),%rdx
2f73(7): lea 0x4606(%rip),%rcx
2f7a(5): mov $0x1,%eax
2f7f(3): cmp %rcx,%rdx
2f82(2): jz 0x63(%rip)
2f84(5): movss 0x8(%rdx),%xmm0
2f89(7): ucomiss 0x4604(%rip),%xmm0
2f90(2): jbe 0x50(%rip)
2f92(8): movss 0x45fe(%rip),%xmm1
2f9a(3): ucomiss %xmm0,%xmm1
2f9d(2): jbe 0x43(%rip)
2f9f(5): movss 0xc(%rdx),%xmm1
2fa4(7): ucomiss 0x45f1(%rip),%xmm1
2fab(2): jbe 0x35(%rip)
2fad(4): movss (%rdx),%xmm1
2fb1(7): ucomiss 0x45e8(%rip),%xmm1
2fb8(2): jb 0x28(%rip)
2fba(8): addss 0x45d2(%rip),%xmm1
2fc2(5): movss 0x4(%rdx),%xmm2
2fc7(3): ucomiss %xmm1,%xmm2
2fca(2): jbe 0x16(%rip)
2fcc(8): movss 0x45d0(%rip),%xmm3
2fd4(3): ucomiss %xmm2,%xmm3
2fd7(2): jb 0x9(%rip)
2fd9(3): ucomiss %xmm1,%xmm0
2fdc(2): jnbe 0x9(%rip)
2fde(2): nop 
2fe0(3): mov %rcx,(%rdi)
2fe3(2): xor %eax,%eax
2fe5(2): REP ret near (%rsp)

"transfer_entries" :
2ff0(2): push %r15
2ff2(2): push %r14
2ff4(2): push %r13
2ff6(2): push %r12
2ff8(1): push %rbp
2ff9(1): push %rbx
2ffa(4): sub $0x8,%rsp
2ffe(3): mov (%rsi),%r12
3001(4): cmp 0x8(%rsi),%r12
3005(6): jnb 0xe3(%rip)
300b(3): mov %rdi,%rbp
300e(3): mov %rsi,%r13
3011(3): mov %edx,%r14d
3014(4): nop 0x0(%rax)
3018(4): mov (%r12),%r15
301c(3): test %r15,%r15
301f(6): jz 0xbb(%rip)
3025(5): mov 0x8(%r12),%rbx
302a(3): test %rbx,%rbx
302d(2): jnz 0x1f(%rip)
302f(2): jmp 0x5c(%rip)
3031(7): nop 0x0(%rax)
3038(4): mov 0x8(%rax),%rcx
303c(3): test %rdx,%rdx
303f(4): mov %rcx,0x8(%rbx)
3043(4): mov %rbx,0x8(%rax)
3047(3): mov %rdx,%rbx
304a(2): jz 0x3d(%rip)
304c(3): mov (%rbx),%r15
304f(3): mov %rbp,%rdi
3052(3): mov %r15,%rsi
3055(5): call 0xfffffdcb(%rip)
305a(4): cmp $0x0,(%rax)
305e(4): mov 0x8(%rbx),%rdx
3062(2): jnz 0xffffffd6(%rip)
3064(3): mov %r15,(%rax)
3067(5): add $0x1,0x18(%rbp)
306c(3): test %rdx,%rdx
306f(7): mov $0x0,(%rbx)
3076(4): mov 0x48(%rbp),%rax
307a(4): mov %rax,0x8(%rbx)
307e(4): mov %rbx,0x48(%rbp)
3082(3): mov %rdx,%rbx
3085(2): jnz 0xffffffc7(%rip)
3087(4): mov (%r12),%r15
308b(3): test %r14b,%r14b
308e(9): mov $0x0,0x8(%r12)
3097(2): jnz 0x43(%rip)
3099(3): mov %r15,%rsi
309c(3): mov %rbp,%rdi
309f(5): call 0xfffffd81(%rip)
30a4(4): cmp $0x0,(%rax)
30a8(3): mov %rax,%rbx
30ab(2): jz 0x55(%rip)
30ad(4): mov 0x48(%rbp),%rax
30b1(3): test %rax,%rax
30b4(2): jz 0x5c(%rip)
30b6(4): mov 0x8(%rax),%rdx
30ba(4): mov %rdx,0x48(%rbp)
30be(4): mov 0x8(%rbx),%rdx
30c2(3): mov %r15,(%rax)
30c5(4): mov %rdx,0x8(%rax)
30c9(4): mov %rax,0x8(%rbx)
30cd(8): mov $0x0,(%r12)
30d5(5): sub $0x1,0x18(%r13)
30da(4): add $0x10,%r12
30de(4): cmp %r12,0x8(%r13)
30e2(6): jnbe 0xffffff36(%rip)
30e8(4): add $0x8,%rsp
30ec(5): mov $0x1,%eax
30f1(1): pop %rbx
30f2(1): pop %rbp
30f3(2): pop %r12
30f5(2): pop %r13
30f7(2): pop %r14
30f9(2): pop %r15
30fb(1): ret near (%rsp)
30fc(4): nop 0x0(%rax)
3100(3): mov %r15,(%rax)
3103(5): add $0x1,0x18(%rbp)
3108(2): jmp 0xffffffc5(%rip)
310a(6): nop 0x0(%rax,%rax,1)
3110(5): mov $0x10,%edi
3115(5): call 0xffffe58b(%rip)
311a(3): test %rax,%rax
311d(2): jnz 0xffffffa1(%rip)
311f(4): add $0x8,%rsp
3123(2): xor %eax,%eax
3125(1): pop %rbx
3126(1): pop %rbp
3127(2): pop %r12
3129(2): pop %r13
312b(2): pop %r14
312d(2): pop %r15
312f(1): ret near (%rsp)

"hash_get_n_buckets" :
3130(4): mov 0x10(%rdi),%rax
3134(1): ret near (%rsp)

"hash_get_n_buckets_used" :
3140(4): mov 0x18(%rdi),%rax
3144(1): ret near (%rsp)

"hash_get_n_entries" :
3150(4): mov 0x20(%rdi),%rax
3154(1): ret near (%rsp)

"hash_get_max_bucket_length" :
3160(3): mov (%rdi),%rsi
3163(4): mov 0x8(%rdi),%rdi
3167(2): xor %eax,%eax
3169(3): cmp %rdi,%rsi
316c(2): jnb 0x3b(%rip)
316e(2): nop 
3170(4): cmp $0x0,(%rsi)
3174(2): jz 0x28(%rip)
3176(4): mov 0x8(%rsi),%rdx
317a(5): mov $0x1,%ecx
317f(3): test %rdx,%rdx
3182(2): jz 0x13(%rip)
3184(4): nop 0x0(%rax)
3188(4): mov 0x8(%rdx),%rdx
318c(4): add $0x1,%rcx
3190(3): test %rdx,%rdx
3193(2): jnz 0xfffffff5(%rip)
3195(3): cmp %rcx,%rax
3198(4): cmovnae %rcx,%rax
319c(4): add $0x10,%rsi
31a0(3): cmp %rdi,%rsi
31a3(2): jb 0xffffffcd(%rip)
31a5(2): REP ret near (%rsp)
31a7(2): REP ret near (%rsp)

"hash_table_ok" :
31b0(3): mov (%rdi),%rcx
31b3(4): mov 0x8(%rdi),%r8
31b7(2): xor %edx,%edx
31b9(2): xor %esi,%esi
31bb(3): cmp %r8,%rcx
31be(2): jnb 0x38(%rip)
31c0(4): cmp $0x0,(%rcx)
31c4(2): jz 0x29(%rip)
31c6(4): mov 0x8(%rcx),%rax
31ca(4): add $0x1,%rsi
31ce(4): add $0x1,%rdx
31d2(3): test %rax,%rax
31d5(2): jz 0x18(%rip)
31d7(9): nop 0x0(%rax,%rax,1)
31e0(4): mov 0x8(%rax),%rax
31e4(4): add $0x1,%rdx
31e8(3): test %rax,%rax
31eb(2): jnz 0xfffffff5(%rip)
31ed(4): add $0x10,%rcx
31f1(3): cmp %r8,%rcx
31f4(2): jb 0xffffffcc(%rip)
31f6(2): xor %eax,%eax
31f8(4): cmp %rsi,0x18(%rdi)
31fc(2): jz 0x4(%rip)
31fe(2): REP ret near (%rsp)
3200(4): cmp %rdx,0x20(%rdi)
3204(3): setz %al
3207(1): ret near (%rsp)

"hash_print_statistics" :
3210(2): push %r13
3212(2): push %r12
3214(3): mov %rsi,%r12
3217(1): push %rbp
3218(1): push %rbx
3219(2): xor %ebx,%ebx
321b(4): sub $0x8,%rsp
321f(3): mov (%rdi),%rsi
3222(4): mov 0x20(%rdi),%rcx
3226(4): mov 0x10(%rdi),%rbp
322a(4): mov 0x18(%rdi),%r13
322e(4): mov 0x8(%rdi),%rdi
3232(3): cmp %rdi,%rsi
3235(2): jnb 0x40(%rip)
3237(9): nop 0x0(%rax,%rax,1)
3240(4): cmp $0x0,(%rsi)
3244(2): jz 0x28(%rip)
3246(4): mov 0x8(%rsi),%rax
324a(5): mov $0x1,%edx
324f(3): test %rax,%rax
3252(2): jz 0x13(%rip)
3254(4): nop 0x0(%rax)
3258(4): mov 0x8(%rax),%rax
325c(4): add $0x1,%rdx
3260(3): test %rax,%rax
3263(2): jnz 0xfffffff5(%rip)
3265(3): cmp %rdx,%rbx
3268(4): cmovnae %rdx,%rbx
326c(4): add $0x10,%rsi
3270(3): cmp %rdi,%rsi
3273(2): jb 0xffffffcd(%rip)
3275(7): lea 0x4294(%rip),%rdx
327c(5): mov $0x1,%esi
3281(3): mov %r12,%rdi
3284(2): xor %eax,%eax
3286(5): call 0xffffe4ea(%rip)
328b(7): lea 0x4296(%rip),%rdx
3292(2): xor %eax,%eax
3294(3): mov %rbp,%rcx
3297(5): mov $0x1,%esi
329c(3): mov %r12,%rdi
329f(5): call 0xffffe4d1(%rip)
32a4(3): test %r13,%r13
32a7(2): js 0x69(%rip)
32a9(4): pxor %xmm0,%xmm0
32ad(3): test %rbp,%rbp
32b0(5): cvtsi2sd %r13,%xmm0
32b5(8): mulsd 0x42fb(%rip),%xmm0
32bd(2): js 0x7c(%rip)
32bf(4): pxor %xmm1,%xmm1
32c3(5): cvtsi2sd %rbp,%xmm1
32c8(4): divsd %xmm1,%xmm0
32cc(7): lea 0x4285(%rip),%rdx
32d3(3): mov %r13,%rcx
32d6(3): mov %r12,%rdi
32d9(5): mov $0x1,%esi
32de(5): mov $0x1,%eax
32e3(5): call 0xffffe48d(%rip)
32e8(4): add $0x8,%rsp
32ec(3): mov %rbx,%rcx
32ef(3): mov %r12,%rdi
32f2(1): pop %rbx
32f3(1): pop %rbp
32f4(2): pop %r12
32f6(2): pop %r13
32f8(7): lea 0x4241(%rip),%rdx
32ff(5): mov $0x1,%esi
3304(2): xor %eax,%eax
3306(5): jmp 0xffffe46a(%rip)
330b(5): nop 0x0(%rax,%rax,1)
3310(3): mov %r13,%rax
3313(3): mov %r13,%rdx
3316(4): pxor %xmm0,%xmm0
331a(3): shr $0x1,%rax
331d(3): and $0x1,%edx
3320(3): or %rdx,%rax
3323(3): test %rbp,%rbp
3326(5): cvtsi2sd %rax,%xmm0
332b(4): addsd %xmm0,%xmm0
332f(8): mulsd 0x4281(%rip),%xmm0
3337(2): jns 0xffffff88(%rip)
3339(3): mov %rbp,%rax
333c(4): pxor %xmm1,%xmm1
3340(3): shr $0x1,%rax
3343(3): and $0x1,%ebp
3346(3): or %rbp,%rax
3349(5): cvtsi2sd %rax,%xmm1
334e(4): addsd %xmm1,%xmm1
3352(5): jmp 0xffffff76(%rip)

"hash_lookup" :
3360(2): push %r12
3362(1): push %rbp
3363(3): mov %rdi,%r12
3366(1): push %rbx
3367(3): mov %rsi,%rbp
336a(5): call 0xfffffab6(%rip)
336f(3): mov (%rax),%rsi
3372(3): test %rsi,%rsi
3375(2): jz 0x28(%rip)
3377(3): mov %rax,%rbx
337a(2): jmp 0x9(%rip)
337c(4): nop 0x0(%rax)
3380(3): mov (%rbx),%rsi
3383(3): cmp %rbp,%rsi
3386(2): jz 0x19(%rip)
3388(3): mov %rbp,%rdi
338b(5): call 0x38(%r12)
3390(2): test %al,%al
3392(2): jnz 0x1e(%rip)
3394(4): mov 0x8(%rbx),%rbx
3398(3): test %rbx,%rbx
339b(2): jnz 0xffffffe5(%rip)
339d(2): xor %esi,%esi
339f(1): pop %rbx
33a0(3): mov %rsi,%rax
33a3(1): pop %rbp
33a4(2): pop %r12
33a6(1): ret near (%rsp)
33a7(9): nop 0x0(%rax,%rax,1)
33b0(3): mov (%rbx),%rsi
33b3(1): pop %rbx
33b4(1): pop %rbp
33b5(3): mov %rsi,%rax
33b8(2): pop %r12
33ba(1): ret near (%rsp)

"hash_get_first" :
33c0(5): cmp $0x0,0x20(%rdi)
33c5(2): jz 0x2e(%rip)
33c7(3): mov (%rdi),%rdx
33ca(4): mov 0x8(%rdi),%rcx
33ce(3): cmp %rcx,%rdx
33d1(2): jnb 0x27(%rip)
33d3(3): mov (%rdx),%rax
33d6(3): test %rax,%rax
33d9(2): jnz 0x1d(%rip)
33db(5): nop 0x0(%rax,%rax,1)
33e0(4): add $0x10,%rdx
33e4(3): cmp %rcx,%rdx
33e7(2): jnb 0x11(%rip)
33e9(3): mov (%rdx),%rax
33ec(3): test %rax,%rax
33ef(2): jz 0xfffffff1(%rip)
33f1(2): REP ret near (%rsp)
33f3(2): xor %eax,%eax
33f5(1): ret near (%rsp)
33f6(2): REP ret near (%rsp)
33f8(4): sub $0x8,%rsp
33fc(5): call 0xffffe0c4(%rip)

"hash_get_next" :
3410(1): push %rbp
3411(1): push %rbx
3412(3): mov %rdi,%rbp
3415(3): mov %rsi,%rbx
3418(4): sub $0x8,%rsp
341c(5): call 0xfffffa04(%rip)
3421(3): mov %rax,%rdx
3424(3): mov %rax,%rcx
3427(3): mov (%rdx),%rax
342a(4): mov 0x8(%rdx),%rdx
342e(3): cmp %rbx,%rax
3431(2): jz 0x18(%rip)
3433(5): nop 0x0(%rax,%rax,1)
3438(3): test %rdx,%rdx
343b(2): jz 0x13(%rip)
343d(3): mov (%rdx),%rax
3440(4): mov 0x8(%rdx),%rdx
3444(3): cmp %rbx,%rax
3447(2): jnz 0xfffffff1(%rip)
3449(3): test %rdx,%rdx
344c(2): jnz 0x2c(%rip)
344e(4): mov 0x8(%rbp),%rdx
3452(2): jmp 0xe(%rip)
3454(4): nop 0x0(%rax)
3458(3): mov (%rcx),%rax
345b(3): test %rax,%rax
345e(2): jnz 0xd(%rip)
3460(4): add $0x10,%rcx
3464(3): cmp %rcx,%rdx
3467(2): jnbe 0xfffffff1(%rip)
3469(2): xor %eax,%eax
346b(4): add $0x8,%rsp
346f(1): pop %rbx
3470(1): pop %rbp
3471(1): ret near (%rsp)
3472(6): nop 0x0(%rax,%rax,1)
3478(3): mov (%rdx),%rax
347b(4): add $0x8,%rsp
347f(1): pop %rbx
3480(1): pop %rbp
3481(1): ret near (%rsp)

"hash_get_entries" :
3490(3): mov (%rdi),%r9
3493(4): cmp %r9,0x8(%rdi)
3497(2): jbe 0x5b(%rip)
3499(3): xor %r8d,%r8d
349c(3): mov (%r9),%rcx
349f(3): test %rcx,%rcx
34a2(2): jz 0x3b(%rip)
34a4(3): cmp %r8,%rdx
34a7(2): jbe 0x40(%rip)
34a9(4): mov %rcx,0x0(%rsi,%r8,8)
34ad(4): mov 0x8(%r9),%rcx
34b1(4): lea 0x1(%r8),%rax
34b5(3): test %rcx,%rcx
34b8(2): jz 0x22(%rip)
34ba(6): nop 0x0(%rax,%rax,1)
34c0(3): cmp %rax,%rdx
34c3(2): jz 0x2d(%rip)
34c5(3): mov (%rcx),%r8
34c8(4): add $0x1,%rax
34cc(5): mov %r8,0xfffffff8(%rsi,%rax,8)
34d1(4): mov 0x8(%rcx),%rcx
34d5(3): test %rcx,%rcx
34d8(2): jnz 0xffffffe8(%rip)
34da(3): mov %rax,%r8
34dd(4): add $0x10,%r9
34e1(4): cmp %r9,0x8(%rdi)
34e5(2): jnbe 0xffffffb7(%rip)
34e7(3): mov %r8,%rax
34ea(1): ret near (%rsp)
34eb(5): nop 0x0(%rax,%rax,1)
34f0(2): REP ret near (%rsp)
34f2(2): xor %eax,%eax
34f4(1): ret near (%rsp)

"hash_do_for_each" :
3500(2): push %r15
3502(2): push %r14
3504(2): push %r13
3506(2): push %r12
3508(1): push %rbp
3509(1): push %rbx
350a(4): sub $0x8,%rsp
350e(3): mov (%rdi),%r14
3511(4): cmp %r14,0x8(%rdi)
3515(2): jbe 0x51(%rip)
3517(3): mov %rdx,%r13
351a(3): mov %rsi,%r12
351d(3): mov %rdi,%r15
3520(2): xor %ebp,%ebp
3522(3): mov (%r14),%rdi
3525(3): test %rdi,%rdi
3528(2): jz 0x22(%rip)
352a(3): mov %r14,%rbx
352d(2): jmp 0x6(%rip)
352f(1): nop 
3530(3): mov (%rbx),%rdi
3533(3): mov %r13,%rsi
3536(3): call %r12
3539(2): test %al,%al
353b(2): jz 0x19(%rip)
353d(4): mov 0x8(%rbx),%rbx
3541(4): add $0x1,%rbp
3545(3): test %rbx,%rbx
3548(2): jnz 0xffffffe8(%rip)
354a(4): add $0x10,%r14
354e(4): cmp %r14,0x8(%r15)
3552(2): jnbe 0xffffffd0(%rip)
3554(4): add $0x8,%rsp
3558(3): mov %rbp,%rax
355b(1): pop %rbx
355c(1): pop %rbp
355d(2): pop %r12
355f(2): pop %r13
3561(2): pop %r14
3563(2): pop %r15
3565(1): ret near (%rsp)
3566(2): xor %ebp,%ebp
3568(2): jmp 0xffffffec(%rip)

"hash_string" :
3570(3): movzx (%rdi),%ecx
3573(2): xor %edx,%edx
3575(2): test %cl,%cl
3577(2): jz 0x26(%rip)
3579(7): nop 0x0(%rax)
3580(3): mov %rdx,%rax
3583(4): add $0x1,%rdi
3587(4): shl/sal $0x5,%rax
358b(3): sub %rdx,%rax
358e(2): xor %edx,%edx
3590(3): add %rcx,%rax
3593(3): movzx (%rdi),%ecx
3596(3): div %rsi,%rax
3599(2): test %cl,%cl
359b(2): jnz 0xffffffe5(%rip)
359d(3): mov %rdx,%rax
35a0(1): ret near (%rsp)

"hash_reset_tuning" :
35b0(a): mov $0x4575657221408423936,%rax
35ba(4): mov $0x0,0x10(%rdi)
35be(3): mov %rax,(%rdi)
35c1(a): mov $0x4590573145673223373,%rax
35cb(4): mov %rax,0x8(%rdi)
35cf(1): ret near (%rsp)

"hash_initialize" :
35d0(2): push %r15
35d2(2): push %r14
35d4(7): lea 0xfffff825(%rip),%rax
35db(2): push %r13
35dd(2): push %r12
35df(3): mov %rdx,%r12
35e2(1): push %rbp
35e3(1): push %rbx
35e4(3): mov %rcx,%r13
35e7(3): mov %rdi,%rbp
35ea(5): mov $0x50,%edi
35ef(3): mov %rsi,%r15
35f2(4): sub $0x8,%rsp
35f6(3): test %rdx,%rdx
35f9(3): mov %r8,%r14
35fc(4): cmove %rax,%r12
3600(7): lea 0xfffff809(%rip),%rax
3607(3): test %rcx,%rcx
360a(4): cmove %rax,%r13
360e(5): call 0xffffe092(%rip)
3613(3): test %rax,%rax
3616(3): mov %rax,%rbx
3619(6): jz 0xb1(%rip)
361f(3): test %r15,%r15
3622(4): lea 0x28(%rax),%rdi
3626(6): jz 0xba(%rip)
362c(4): mov %r15,0x28(%rax)
3630(5): call 0xfffff940(%rip)
3635(2): test %al,%al
3637(6): jz 0x89(%rip)
363d(5): cmp $0x0,0x10(%r15)
3642(6): jz 0xfe(%rip)
3648(3): mov %rbp,%rdi
364b(5): call 0xfffff715(%rip)
3650(5): mov $0x8,%edx
3655(3): mov %rax,%rbp
3658(2): xor %ecx,%ecx
365a(3): mov %rdx,%rax
365d(3): mul %rax,%rbp,%rdx
3660(6): jo 0x11a(%rip)
3666(3): test %rax,%rax
3669(2): js 0x57(%rip)
366b(3): test %rcx,%rcx
366e(2): jnz 0x52(%rip)
3670(3): test %rbp,%rbp
3673(4): mov %rbp,0x10(%rbx)
3677(2): jz 0x49(%rip)
3679(5): mov $0x10,%esi
367e(3): mov %rbp,%rdi
3681(5): call 0xffffdfcf(%rip)
3686(3): test %rax,%rax
3689(3): mov %rax,(%rbx)
368c(2): jz 0x34(%rip)
368e(4): shl/sal $0x4,%rbp
3692(8): mov $0x0,0x18(%rbx)
369a(8): mov $0x0,0x20(%rbx)
36a2(3): add %rax,%rbp
36a5(4): mov %r12,0x30(%rbx)
36a9(4): mov %r13,0x38(%rbx)
36ad(4): mov %rbp,0x8(%rbx)
36b1(4): mov %r14,0x40(%rbx)
36b5(8): mov $0x0,0x48(%rbx)
36bd(2): jmp 0xd(%rip)
36bf(1): nop 
36c0(3): mov %rbx,%rdi
36c3(2): xor %ebx,%ebx
36c5(5): call 0xffffddeb(%rip)
36ca(4): add $0x8,%rsp
36ce(3): mov %rbx,%rax
36d1(1): pop %rbx
36d2(1): pop %rbp
36d3(2): pop %r12
36d5(2): pop %r13
36d7(2): pop %r14
36d9(2): pop %r15
36db(1): ret near (%rsp)
36dc(4): nop 0x0(%rax)
36e0(7): lea 0x3e99(%rip),%rax
36e7(4): mov %rax,0x28(%rbx)
36eb(5): call 0xfffff885(%rip)
36f0(2): test %al,%al
36f2(8): movss 0x3eae(%rip),%xmm1
36fa(2): jz 0xffffffc6(%rip)
36fc(3): test %rbp,%rbp
36ff(2): js 0x4c(%rip)
3701(4): pxor %xmm0,%xmm0
3705(5): cvtsi2ss %rbp,%xmm0
370a(4): divss %xmm1,%xmm0
370e(7): ucomiss 0x3e97(%rip),%xmm0
3715(2): jnb 0xffffffab(%rip)
3717(7): ucomiss 0x3e92(%rip),%xmm0
371e(2): jb 0x52(%rip)
3720(8): subss 0x3e88(%rip),%xmm0
3728(a): mov $0x-9223372036854775808,%rax
3732(5): cvttss2si %xmm0,%rbp
3737(3): xor %rax,%rbp
373a(5): jmp 0xffffff0e(%rip)
373f(1): nop 
3740(3): test %rbp,%rbp
3743(6): movss 0x8(%r15),%xmm1
3749(2): jns 0xffffffb8(%rip)
374b(3): mov %rbp,%rax
374e(4): pxor %xmm0,%xmm0
3752(3): shr $0x1,%rax
3755(3): and $0x1,%ebp
3758(3): or %rbp,%rax
375b(5): cvtsi2ss %rax,%xmm0
3760(4): addss %xmm0,%xmm0
3764(2): jmp 0xffffffa6(%rip)
3766(a): nop 0x0(%rax,%rax,1)
3770(5): cvttss2si %xmm0,%rbp
3775(5): jmp 0xfffffed3(%rip)
377a(5): mov $0x1,%ecx
377f(5): jmp 0xfffffee7(%rip)

"hash_clear" :
3790(2): push %r12
3792(1): push %rbp
3793(3): mov %rdi,%rbp
3796(1): push %rbx
3797(3): mov (%rdi),%r12
379a(4): cmp 0x8(%rdi),%r12
379e(2): jnb 0x6d(%rip)
37a0(5): cmp $0x0,(%r12)
37a5(2): jz 0x5c(%rip)
37a7(5): mov 0x8(%r12),%rbx
37ac(4): mov 0x40(%rbp),%rax
37b0(3): test %rbx,%rbx
37b3(2): jz 0x32(%rip)
37b5(3): nop (%rax)
37b8(3): test %rax,%rax
37bb(2): jz 0xb(%rip)
37bd(3): mov (%rbx),%rdi
37c0(2): call %rax
37c2(4): mov 0x40(%rbp),%rax
37c6(4): mov 0x8(%rbx),%rdx
37ca(4): mov 0x48(%rbp),%rcx
37ce(7): mov $0x0,(%rbx)
37d5(3): test %rdx,%rdx
37d8(4): mov %rcx,0x8(%rbx)
37dc(4): mov %rbx,0x48(%rbp)
37e0(3): mov %rdx,%rbx
37e3(2): jnz 0xffffffd5(%rip)
37e5(3): test %rax,%rax
37e8(2): jz 0x8(%rip)
37ea(4): mov (%r12),%rdi
37ee(2): call %rax
37f0(8): mov $0x0,(%r12)
37f8(9): mov $0x0,0x8(%r12)
3801(4): add $0x10,%r12
3805(4): cmp %r12,0x8(%rbp)
3809(2): jnbe 0xffffff97(%rip)
380b(8): mov $0x0,0x18(%rbp)
3813(8): mov $0x0,0x20(%rbp)
381b(1): pop %rbx
381c(1): pop %rbp
381d(2): pop %r12
381f(1): ret near (%rsp)

"hash_free" :
3820(2): push %r12
3822(1): push %rbp
3823(3): mov %rdi,%r12
3826(1): push %rbx
3827(5): cmp $0x0,0x40(%rdi)
382c(3): mov (%rdi),%rbp
382f(4): mov 0x8(%rdi),%rax
3833(2): jz 0x50(%rip)
3835(5): cmp $0x0,0x20(%rdi)
383a(2): jz 0x49(%rip)
383c(3): cmp %rax,%rbp
383f(2): jnb 0x7d(%rip)
3841(7): nop 0x0(%rax)
3848(4): mov 0x0(%rbp),%rdi
384c(3): test %rdi,%rdi
384f(2): jz 0x27(%rip)
3851(3): mov %rbp,%rbx
3854(2): jmp 0xf(%rip)
3856(a): nop 0x0(%rax,%rax,1)
3860(3): mov (%rbx),%rdi
3863(5): call 0x40(%r12)
3868(4): mov 0x8(%rbx),%rbx
386c(3): test %rbx,%rbx
386f(2): jnz 0xfffffff1(%rip)
3871(5): mov 0x8(%r12),%rax
3876(4): add $0x10,%rbp
387a(3): cmp %rbp,%rax
387d(2): jnbe 0xffffffcb(%rip)
387f(4): mov (%r12),%rbp
3883(3): cmp %rax,%rbp
3886(2): jnb 0x36(%rip)
3888(8): nop 0x0(%rax,%rax,1)
3890(4): mov 0x8(%rbp),%rdi
3894(3): test %rdi,%rdi
3897(2): jz 0x1a(%rip)
3899(7): nop 0x0(%rax)
38a0(4): mov 0x8(%rdi),%rbx
38a4(5): call 0xffffdc0c(%rip)
38a9(3): test %rbx,%rbx
38ac(3): mov %rbx,%rdi
38af(2): jnz 0xfffffff1(%rip)
38b1(4): add $0x10,%rbp
38b5(5): cmp %rbp,0x8(%r12)
38ba(2): jnbe 0xffffffd6(%rip)
38bc(5): mov 0x48(%r12),%rdi
38c1(3): test %rdi,%rdi
38c4(2): jz 0x1d(%rip)
38c6(a): nop 0x0(%rax,%rax,1)
38d0(4): mov 0x8(%rdi),%rbx
38d4(5): call 0xffffdbdc(%rip)
38d9(3): test %rbx,%rbx
38dc(3): mov %rbx,%rdi
38df(2): jnz 0xfffffff1(%rip)
38e1(4): mov (%r12),%rdi
38e5(5): call 0xffffdbcb(%rip)
38ea(1): pop %rbx
38eb(3): mov %r12,%rdi
38ee(1): pop %rbp
38ef(2): pop %r12
38f1(5): jmp 0xffffdbbf(%rip)

"hash_rehash" :
3900(2): push %r12
3902(1): push %rbp
3903(3): mov %rdi,%rbp
3906(1): push %rbx
3907(4): sub $0x60,%rsp
390b(4): mov 0x28(%rdi),%r12
390f(9): mov $0x28,%rax
3918(5): mov %rax,0x58(%rsp)
391d(2): xor %eax,%eax
391f(6): cmp $0x0,0x10(%r12)
3925(2): jnz 0x53(%rip)
3927(3): test %rsi,%rsi
392a(6): js 0x17e(%rip)
3930(4): pxor %xmm0,%xmm0
3934(5): cvtsi2ss %rsi,%xmm0
3939(7): divss 0x8(%r12),%xmm0
3940(7): ucomiss 0x3c65(%rip),%xmm0
3947(6): jnb 0x139(%rip)
394d(7): ucomiss 0x3c5c(%rip),%xmm0
3954(6): jb 0x17c(%rip)
395a(8): subss 0x3c4e(%rip),%xmm0
3962(a): mov $0x-9223372036854775808,%rax
396c(5): cvttss2si %xmm0,%rsi
3971(3): xor %rax,%rsi
3974(4): nop 0x0(%rax)
3978(3): mov %rsi,%rdi
397b(5): call 0xfffff3e5(%rip)
3980(5): mov $0x8,%edx
3985(3): mov %rax,%rbx
3988(2): xor %ecx,%ecx
398a(3): mov %rdx,%rax
398d(3): mul %rax,%rbx,%rdx
3990(6): jo 0x19f(%rip)
3996(3): test %rax,%rax
3999(5): mov $0x1,%eax
399e(4): cmovs %rax,%rcx
39a2(3): test %rbx,%rbx
39a5(6): jz 0xdb(%rip)
39ab(3): and $0x1,%ecx
39ae(6): jnz 0xd2(%rip)
39b4(4): cmp %rbx,0x10(%rbp)
39b8(6): jz 0x128(%rip)
39be(5): mov $0x10,%esi
39c3(3): mov %rbx,%rdi
39c6(5): call 0xffffdc8a(%rip)
39cb(3): test %rax,%rax
39ce(4): mov %rax,(%rsp)
39d2(6): jz 0xae(%rip)
39d8(5): mov %rbx,0x10(%rsp)
39dd(4): shl/sal $0x4,%rbx
39e1(5): mov %r12,0x28(%rsp)
39e6(3): add %rax,%rbx
39e9(4): mov 0x30(%rbp),%rax
39ed(3): mov %rsp,%r12
39f0(2): xor %edx,%edx
39f2(3): mov %rbp,%rsi
39f5(3): mov %r12,%rdi
39f8(5): mov %rbx,0x8(%rsp)
39fd(9): mov $0x0,0x18(%rsp)
3a06(5): mov %rax,0x30(%rsp)
3a0b(4): mov 0x38(%rbp),%rax
3a0f(9): mov $0x0,0x20(%rsp)
3a18(5): mov %rax,0x38(%rsp)
3a1d(4): mov 0x40(%rbp),%rax
3a21(5): mov %rax,0x40(%rsp)
3a26(4): mov 0x48(%rbp),%rax
3a2a(5): mov %rax,0x48(%rsp)
3a2f(5): call 0xfffff5c1(%rip)
3a34(2): test %al,%al
3a36(2): mov %eax,%ebx
3a38(6): jnz 0xb8(%rip)
3a3e(5): mov 0x48(%rsp),%rax
3a43(5): mov $0x1,%edx
3a48(3): mov %r12,%rsi
3a4b(3): mov %rbp,%rdi
3a4e(4): mov %rax,0x48(%rbp)
3a52(5): call 0xfffff59e(%rip)
3a57(2): test %al,%al
3a59(6): jz 0xe0(%rip)
3a5f(2): xor %edx,%edx
3a61(3): mov %r12,%rsi
3a64(3): mov %rbp,%rdi
3a67(5): call 0xfffff589(%rip)
3a6c(2): test %al,%al
3a6e(6): jz 0xcb(%rip)
3a74(4): mov (%rsp),%rdi
3a78(5): call 0xffffda38(%rip)
3a7d(2): jmp 0x5(%rip)
3a7f(1): nop 
3a80(2): xor %ebx,%ebx
3a82(5): mov 0x58(%rsp),%rcx
3a87(9): xor $0x28,%rcx
3a90(2): mov %ebx,%eax
3a92(6): jnz 0x98(%rip)
3a98(4): add $0x60,%rsp
3a9c(1): pop %rbx
3a9d(1): pop %rbp
3a9e(2): pop %r12
3aa0(1): ret near (%rsp)
3aa1(7): nop 0x0(%rax)
3aa8(3): mov %rsi,%rax
3aab(4): pxor %xmm0,%xmm0
3aaf(3): shr $0x1,%rax
3ab2(3): and $0x1,%esi
3ab5(3): or %rsi,%rax
3ab8(5): cvtsi2ss %rax,%xmm0
3abd(4): addss %xmm0,%xmm0
3ac1(5): jmp 0xfffffe78(%rip)
3ac6(a): nop 0x0(%rax,%rax,1)
3ad0(5): cvttss2si %xmm0,%rsi
3ad5(5): jmp 0xfffffea3(%rip)
3ada(6): nop 0x0(%rax,%rax,1)
3ae0(5): mov $0x1,%ebx
3ae5(2): jmp 0xffffff9d(%rip)
3ae7(9): nop 0x0(%rax,%rax,1)
3af0(4): mov 0x0(%rbp),%rdi
3af4(5): call 0xffffd9bc(%rip)
3af9(4): mov (%rsp),%rax
3afd(4): mov %rax,0x0(%rbp)
3b01(5): mov 0x8(%rsp),%rax
3b06(4): mov %rax,0x8(%rbp)
3b0a(5): mov 0x10(%rsp),%rax
3b0f(4): mov %rax,0x10(%rbp)
3b13(5): mov 0x18(%rsp),%rax
3b18(4): mov %rax,0x18(%rbp)
3b1c(5): mov 0x48(%rsp),%rax
3b21(4): mov %rax,0x48(%rbp)
3b25(5): jmp 0xffffff5d(%rip)
3b2a(5): call 0xffffda66(%rip)
3b2f(5): mov $0x1,%ecx
3b34(5): jmp 0xfffffe62(%rip)
3b39(5): call 0xffffd987(%rip)

"hash_insert_if_absent" :
3b40(2): push %r13
3b42(2): push %r12
3b44(1): push %rbp
3b45(1): push %rbx
3b46(4): sub $0x18,%rsp
3b4a(9): mov $0x28,%rax
3b53(5): mov %rax,0x8(%rsp)
3b58(2): xor %eax,%eax
3b5a(3): test %rsi,%rsi
3b5d(6): jz 0x1c0(%rip)
3b63(3): mov %rsp,%r12
3b66(2): xor %ecx,%ecx
3b68(3): mov %rdx,%r13
3b6b(3): mov %r12,%rdx
3b6e(3): mov %rdi,%rbx
3b71(3): mov %rsi,%rbp
3b74(5): call 0xfffff2dc(%rip)
3b79(3): test %rax,%rax
3b7c(3): mov %rax,%rdx
3b7f(2): jz 0x31(%rip)
3b81(2): xor %eax,%eax
3b83(3): test %r13,%r13
3b86(2): jz 0x6(%rip)
3b88(4): mov %rdx,0x0(%r13)
3b8c(5): mov 0x8(%rsp),%rcx
3b91(9): xor $0x28,%rcx
3b9a(6): jnz 0x225(%rip)
3ba0(4): add $0x18,%rsp
3ba4(1): pop %rbx
3ba5(1): pop %rbp
3ba6(2): pop %r12
3ba8(2): pop %r13
3baa(1): ret near (%rsp)
3bab(5): nop 0x0(%rax,%rax,1)
3bb0(4): mov 0x18(%rbx),%rax
3bb4(3): test %rax,%rax
3bb7(2): js 0x79(%rip)
3bb9(4): pxor %xmm1,%xmm1
3bbd(4): mov 0x28(%rbx),%rdx
3bc1(5): cvtsi2ss %rax,%xmm1
3bc6(4): mov 0x10(%rbx),%rax
3bca(3): test %rax,%rax
3bcd(6): js 0x8d(%rip)
3bd3(4): pxor %xmm0,%xmm0
3bd7(5): cvtsi2ss %rax,%xmm0
3bdc(5): mulss 0x8(%rdx),%xmm0
3be1(3): ucomiss %xmm0,%xmm1
3be4(6): jnbe 0x9c(%rip)
3bea(4): mov (%rsp),%r12
3bee(5): cmp $0x0,(%r12)
3bf3(6): jz 0x135(%rip)
3bf9(4): mov 0x48(%rbx),%rax
3bfd(3): test %rax,%rax
3c00(6): jz 0x140(%rip)
3c06(4): mov 0x8(%rax),%rdx
3c0a(4): mov %rdx,0x48(%rbx)
3c0e(5): mov 0x8(%r12),%rdx
3c13(3): mov %rbp,(%rax)
3c16(4): mov %rdx,0x8(%rax)
3c1a(5): mov %rax,0x8(%r12)
3c1f(5): mov $0x1,%eax
3c24(5): add $0x1,0x20(%rbx)
3c29(5): jmp 0xffffff63(%rip)
3c2e(2): nop 
3c30(3): mov %rax,%rdx
3c33(4): pxor %xmm1,%xmm1
3c37(3): and $0x1,%eax
3c3a(3): shr $0x1,%rdx
3c3d(3): or %rax,%rdx
3c40(4): mov 0x10(%rbx),%rax
3c44(5): cvtsi2ss %rdx,%xmm1
3c49(4): mov 0x28(%rbx),%rdx
3c4d(3): test %rax,%rax
3c50(4): addss %xmm1,%xmm1
3c54(6): jns 0xffffff7f(%rip)
3c5a(3): mov %rax,%rcx
3c5d(4): pxor %xmm0,%xmm0
3c61(3): shr $0x1,%rcx
3c64(3): and $0x1,%eax
3c67(3): or %rax,%rcx
3c6a(5): cvtsi2ss %rcx,%xmm0
3c6f(4): addss %xmm0,%xmm0
3c73(5): jmp 0xffffff69(%rip)
3c78(8): nop 0x0(%rax,%rax,1)
3c80(4): lea 0x28(%rbx),%rdi
3c84(5): call 0xfffff2ec(%rip)
3c89(4): mov 0x10(%rbx),%rax
3c8d(4): mov 0x28(%rbx),%rdx
3c91(3): test %rax,%rax
3c94(5): movss 0x8(%rdx),%xmm2
3c99(6): js 0xc7(%rip)
3c9f(4): pxor %xmm0,%xmm0
3ca3(5): cvtsi2ss %rax,%xmm0
3ca8(4): mov 0x18(%rbx),%rax
3cac(3): test %rax,%rax
3caf(6): js 0xd1(%rip)
3cb5(4): pxor %xmm1,%xmm1
3cb9(5): cvtsi2ss %rax,%xmm1
3cbe(3): movaps %xmm2,%xmm3
3cc1(4): mulss %xmm0,%xmm3
3cc5(3): ucomiss %xmm3,%xmm1
3cc8(6): jbe 0xffffff22(%rip)
3cce(4): cmp $0x0,0x10(%rdx)
3cd2(5): mulss 0xc(%rdx),%xmm0
3cd7(2): jnz 0x6(%rip)
3cd9(4): mulss %xmm2,%xmm0
3cdd(7): ucomiss 0x38c8(%rip),%xmm0
3ce4(2): jnb 0x6f(%rip)
3ce6(7): ucomiss 0x38c3(%rip),%xmm0
3ced(6): jnb 0xb3(%rip)
3cf3(5): cvttss2si %xmm0,%rsi
3cf8(3): mov %rbx,%rdi
3cfb(5): call 0xfffffc05(%rip)
3d00(2): test %al,%al
3d02(2): jz 0x51(%rip)
3d04(2): xor %ecx,%ecx
3d06(3): mov %r12,%rdx
3d09(3): mov %rbp,%rsi
3d0c(3): mov %rbx,%rdi
3d0f(5): call 0xfffff141(%rip)
3d14(3): test %rax,%rax
3d17(6): jz 0xfffffed3(%rip)
3d1d(5): call 0xffffd7a3(%rip)
3d22(6): nop 0x0(%rax,%rax,1)
3d28(4): mov %rbp,(%r12)
3d2c(5): mov $0x1,%eax
3d31(5): add $0x1,0x20(%rbx)
3d36(5): add $0x1,0x18(%rbx)
3d3b(5): jmp 0xfffffe51(%rip)
3d40(5): mov $0x10,%edi
3d45(5): call 0xffffd95b(%rip)
3d4a(3): test %rax,%rax
3d4d(6): jnz 0xfffffec1(%rip)
3d53(5): mov $0xffffffff,%eax
3d58(5): jmp 0xfffffe34(%rip)
3d5d(3): nop (%rax)
3d60(3): mov %rax,%rcx
3d63(4): pxor %xmm0,%xmm0
3d67(3): shr $0x1,%rcx
3d6a(3): and $0x1,%eax
3d6d(3): or %rax,%rcx
3d70(5): cvtsi2ss %rcx,%xmm0
3d75(4): addss %xmm0,%xmm0
3d79(5): jmp 0xffffff2f(%rip)
3d7e(2): nop 
3d80(3): mov %rax,%rcx
3d83(4): pxor %xmm1,%xmm1
3d87(3): shr $0x1,%rcx
3d8a(3): and $0x1,%eax
3d8d(3): or %rax,%rcx
3d90(5): cvtsi2ss %rcx,%xmm1
3d95(4): addss %xmm1,%xmm1
3d99(5): jmp 0xffffff25(%rip)
3d9e(2): nop 
3da0(8): subss 0x3808(%rip),%xmm0
3da8(a): mov $0x-9223372036854775808,%rax
3db2(5): cvttss2si %xmm0,%rsi
3db7(3): xor %rax,%rsi
3dba(5): jmp 0xffffff3e(%rip)
3dbf(5): call 0xffffd7d1(%rip)

"hash_insert" :
3dd0(1): push %rbx
3dd1(3): mov %rsi,%rbx
3dd4(4): sub $0x10,%rsp
3dd8(3): mov %rsp,%rdx
3ddb(9): mov $0x28,%rax
3de4(5): mov %rax,0x8(%rsp)
3de9(2): xor %eax,%eax
3deb(5): call 0xfffffd55(%rip)
3df0(3): cmp $0xff,%eax
3df3(2): jz 0x2d(%rip)
3df5(2): test %eax,%eax
3df7(2): jnz 0x6(%rip)
3df9(4): mov (%rsp),%rbx
3dfd(5): mov 0x8(%rsp),%rcx
3e02(9): xor $0x28,%rcx
3e0b(3): mov %rbx,%rax
3e0e(2): jnz 0x16(%rip)
3e10(4): add $0x10,%rsp
3e14(1): pop %rbx
3e15(1): ret near (%rsp)
3e16(a): nop 0x0(%rax,%rax,1)
3e20(2): xor %ebx,%ebx
3e22(2): jmp 0xffffffdb(%rip)
3e24(5): call 0xffffd76c(%rip)

"hash_delete" :
3e30(2): push %r12
3e32(1): push %rbp
3e33(5): mov $0x1,%ecx
3e38(1): push %rbx
3e39(3): mov %rdi,%rbx
3e3c(4): sub $0x10,%rsp
3e40(3): mov %rsp,%rdx
3e43(9): mov $0x28,%rax
3e4c(5): mov %rax,0x8(%rsp)
3e51(2): xor %eax,%eax
3e53(5): call 0xffffeffd(%rip)
3e58(3): test %rax,%rax
3e5b(3): mov %rax,%rbp
3e5e(2): jz 0x11(%rip)
3e60(4): mov (%rsp),%rax
3e64(5): sub $0x1,0x20(%rbx)
3e69(4): cmp $0x0,(%rax)
3e6d(2): jz 0x23(%rip)
3e6f(5): mov 0x8(%rsp),%rcx
3e74(9): xor $0x28,%rcx
3e7d(3): mov %rbp,%rax
3e80(6): jnz 0x1ae(%rip)
3e86(4): add $0x10,%rsp
3e8a(1): pop %rbx
3e8b(1): pop %rbp
3e8c(2): pop %r12
3e8e(1): ret near (%rsp)
3e8f(1): nop 
3e90(4): mov 0x18(%rbx),%rax
3e94(4): sub $0x1,%rax
3e98(3): test %rax,%rax
3e9b(4): mov %rax,0x18(%rbx)
3e9f(6): js 0x101(%rip)
3ea5(4): pxor %xmm0,%xmm0
3ea9(5): cvtsi2ss %rax,%xmm0
3eae(4): mov 0x10(%rbx),%rax
3eb2(4): mov 0x28(%rbx),%rdx
3eb6(3): test %rax,%rax
3eb9(6): js 0xc7(%rip)
3ebf(4): pxor %xmm1,%xmm1
3ec3(5): cvtsi2ss %rax,%xmm1
3ec8(4): mulss (%rdx),%xmm1
3ecc(3): ucomiss %xmm0,%xmm1
3ecf(2): jbe 0xffffffa0(%rip)
3ed1(4): lea 0x28(%rbx),%rdi
3ed5(5): call 0xfffff09b(%rip)
3eda(4): mov 0x10(%rbx),%rax
3ede(4): mov 0x28(%rbx),%rdx
3ee2(3): test %rax,%rax
3ee5(6): js 0x12b(%rip)
3eeb(4): pxor %xmm0,%xmm0
3eef(5): cvtsi2ss %rax,%xmm0
3ef4(4): mov 0x18(%rbx),%rax
3ef8(3): test %rax,%rax
3efb(6): js 0xf5(%rip)
3f01(4): pxor %xmm1,%xmm1
3f05(5): cvtsi2ss %rax,%xmm1
3f0a(4): movss (%rdx),%xmm2
3f0e(4): mulss %xmm0,%xmm2
3f12(3): ucomiss %xmm1,%xmm2
3f15(6): jbe 0xffffff5a(%rip)
3f1b(4): cmp $0x0,0x10(%rdx)
3f1f(5): mulss 0x4(%rdx),%xmm0
3f24(6): jz 0xbc(%rip)
3f2a(7): ucomiss 0x367f(%rip),%xmm0
3f31(6): jnb 0x8f(%rip)
3f37(5): cvttss2si %xmm0,%rsi
3f3c(3): mov %rbx,%rdi
3f3f(5): call 0xfffff9c1(%rip)
3f44(2): test %al,%al
3f46(6): jnz 0xffffff29(%rip)
3f4c(4): mov 0x48(%rbx),%rdi
3f50(3): test %rdi,%rdi
3f53(2): jz 0x16(%rip)
3f55(3): nop (%rax)
3f58(4): mov 0x8(%rdi),%r12
3f5c(5): call 0xffffd554(%rip)
3f61(3): test %r12,%r12
3f64(3): mov %r12,%rdi
3f67(2): jnz 0xfffffff1(%rip)
3f69(8): mov $0x0,0x48(%rbx)
3f71(5): jmp 0xfffffefe(%rip)
3f76(a): nop 0x0(%rax,%rax,1)
3f80(3): mov %rax,%rcx
3f83(4): pxor %xmm1,%xmm1
3f87(3): shr $0x1,%rcx
3f8a(3): and $0x1,%eax
3f8d(3): or %rax,%rcx
3f90(5): cvtsi2ss %rcx,%xmm1
3f95(4): addss %xmm1,%xmm1
3f99(5): jmp 0xffffff2f(%rip)
3f9e(2): nop 
3fa0(3): mov %rax,%rdx
3fa3(4): pxor %xmm0,%xmm0
3fa7(3): shr $0x1,%rdx
3faa(3): and $0x1,%eax
3fad(3): or %rax,%rdx
3fb0(5): cvtsi2ss %rdx,%xmm0
3fb5(4): addss %xmm0,%xmm0
3fb9(5): jmp 0xfffffef5(%rip)
3fbe(2): nop 
3fc0(8): subss 0x35e8(%rip),%xmm0
3fc8(a): mov $0x-9223372036854775808,%rax
3fd2(5): cvttss2si %xmm0,%rsi
3fd7(3): xor %rax,%rsi
3fda(5): jmp 0xffffff62(%rip)
3fdf(1): nop 
3fe0(5): mulss 0x8(%rdx),%xmm0
3fe5(5): jmp 0xffffff45(%rip)
3fea(6): nop 0x0(%rax,%rax,1)
3ff0(3): mov %rax,%rcx
3ff3(4): pxor %xmm1,%xmm1
3ff7(3): shr $0x1,%rcx
3ffa(3): and $0x1,%eax
3ffd(3): or %rax,%rcx
4000(5): cvtsi2ss %rcx,%xmm1
4005(4): addss %xmm1,%xmm1
4009(5): jmp 0xffffff01(%rip)
400e(2): nop 
4010(3): mov %rax,%rcx
4013(4): pxor %xmm0,%xmm0
4017(3): shr $0x1,%rcx
401a(3): and $0x1,%eax
401d(3): or %rax,%rcx
4020(5): cvtsi2ss %rcx,%xmm0
4025(4): addss %xmm0,%xmm0
4029(5): jmp 0xfffffecb(%rip)
402e(5): call 0xffffd562(%rip)

"triple_hash" :
4040(1): push %rbp
4041(1): push %rbx
4042(3): mov %rdi,%rbp
4045(3): mov %rsi,%rbx
4048(4): sub $0x8,%rsp
404c(3): mov (%rdi),%rdi
404f(5): call 0x2cb1(%rip)
4054(4): xor 0x8(%rbp),%rax
4058(2): xor %edx,%edx
405a(4): add $0x8,%rsp
405e(3): div %rbx,%rax
4061(1): pop %rbx
4062(1): pop %rbp
4063(3): mov %rdx,%rax
4066(1): ret near (%rsp)

"triple_hash_no_name" :
4070(4): mov 0x8(%rdi),%rax
4074(2): xor %edx,%edx
4076(3): div %rsi,%rax
4079(3): mov %rdx,%rax
407c(1): ret near (%rsp)

"triple_compare" :
4080(2): xor %eax,%eax
4082(4): mov 0x8(%rsi),%rdx
4086(4): cmp %rdx,0x8(%rdi)
408a(2): jz 0x6(%rip)
408c(2): REP ret near (%rsp)
408e(2): nop 
4090(4): mov 0x10(%rsi),%rcx
4094(4): cmp %rcx,0x10(%rdi)
4098(2): jnz 0xfffffff4(%rip)
409a(4): sub $0x8,%rsp
409e(3): mov (%rsi),%rsi
40a1(3): mov (%rdi),%rdi
40a4(5): call 0x1f6c(%rip)
40a9(4): add $0x8,%rsp
40ad(1): ret near (%rsp)

"triple_compare_ino_str" :
40b0(2): xor %eax,%eax
40b2(4): mov 0x8(%rsi),%rdx
40b6(4): cmp %rdx,0x8(%rdi)
40ba(2): jz 0x6(%rip)
40bc(2): REP ret near (%rsp)
40be(2): nop 
40c0(4): mov 0x10(%rsi),%rcx
40c4(4): cmp %rcx,0x10(%rdi)
40c8(2): jnz 0xfffffff4(%rip)
40ca(4): sub $0x8,%rsp
40ce(3): mov (%rsi),%rsi
40d1(3): mov (%rdi),%rdi
40d4(5): call 0xffffd58c(%rip)
40d9(2): test %eax,%eax
40db(3): setz %al
40de(4): add $0x8,%rsp
40e2(1): ret near (%rsp)

"triple_free" :
40f0(1): push %rbx
40f1(3): mov %rdi,%rbx
40f4(3): mov (%rdi),%rdi
40f7(5): call 0xffffd3b9(%rip)
40fc(3): mov %rbx,%rdi
40ff(1): pop %rbx
4100(5): jmp 0xffffd3b0(%rip)

"set_program_name" :
4110(3): test %rdi,%rdi
4113(1): push %rbx
4114(2): jz 0x79(%rip)
4116(5): mov $0x2f,%esi
411b(3): mov %rdi,%rbx
411e(5): call 0xffffd4c2(%rip)
4123(3): test %rax,%rax
4126(2): jz 0x57(%rip)
4128(4): lea 0x1(%rax),%r8
412c(3): mov %r8,%rdx
412f(3): sub %rbx,%rdx
4132(4): cmp $0x6,%rdx
4136(2): jle 0x47(%rip)
4138(4): lea 0xfffffffa(%rax),%rsi
413c(7): lea 0x34b5(%rip),%rdi
4143(5): mov $0x7,%ecx
4148(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
414a(3): setnbe %dl
414d(3): sbb $0x0,%dl
4150(2): test %dl,%dl
4152(2): jnz 0x2b(%rip)
4154(7): lea 0x34a5(%rip),%rdi
415b(5): mov $0x3,%ecx
4160(3): mov %r8,%rsi
4163(3): mov %r8,%rbx
4166(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4168(3): setnbe %dl
416b(3): sbb $0x0,%dl
416e(2): test %dl,%dl
4170(2): jnz 0xd(%rip)
4172(4): lea 0x4(%rax),%rbx
4176(7): mov %rbx,0x205f23(%rip)
417d(7): mov %rbx,0x205f94(%rip)
4184(7): mov %rbx,0x205f35(%rip)
418b(1): pop %rbx
418c(1): ret near (%rsp)
418d(7): mov 0x205f4c(%rip),%rcx
4194(7): lea 0x3425(%rip),%rdi
419b(5): mov $0x37,%edx
41a0(5): mov $0x1,%esi
41a5(5): call 0xffffd5bb(%rip)
41aa(5): call 0xffffd316(%rip)

"gettext_quote.part.1" :
41b0(1): push %rbp
41b1(1): push %rbx
41b2(3): mov %rdi,%rbp
41b5(2): mov %esi,%ebx
41b7(4): sub $0x8,%rsp
41bb(5): call 0x2b85(%rip)
41c0(3): movzx (%rax),%edx
41c3(3): and $0xdf,%edx
41c6(3): cmp $0x55,%dl
41c9(2): jz 0x77(%rip)
41cb(3): cmp $0x47,%dl
41ce(2): jz 0x22(%rip)
41d0(7): lea 0x343c(%rip),%rax
41d7(7): lea 0x3437(%rip),%rdx
41de(3): cmp $0x9,%ebx
41e1(4): cmovne %rdx,%rax
41e5(4): add $0x8,%rsp
41e9(1): pop %rbx
41ea(1): pop %rbp
41eb(1): ret near (%rsp)
41ec(4): nop 0x0(%rax)
41f0(4): movzx 0x1(%rax),%edx
41f4(3): and $0xdf,%edx
41f7(3): cmp $0x42,%dl
41fa(2): jnz 0xffffffd6(%rip)
41fc(4): cmp $0x31,0x2(%rax)
4200(2): jnz 0xffffffd0(%rip)
4202(4): cmp $0x38,0x3(%rax)
4206(2): jnz 0xffffffca(%rip)
4208(4): cmp $0x30,0x4(%rax)
420c(2): jnz 0xffffffc4(%rip)
420e(4): cmp $0x33,0x5(%rax)
4212(2): jnz 0xffffffbe(%rip)
4214(4): cmp $0x30,0x6(%rax)
4218(2): jnz 0xffffffb8(%rip)
421a(4): cmp $0x0,0x7(%rax)
421e(2): jnz 0xffffffb2(%rip)
4220(4): cmp $0x60,0x0(%rbp)
4224(7): lea 0x33e1(%rip),%rax
422b(7): lea 0x33de(%rip),%rdx
4232(4): cmovne %rdx,%rax
4236(4): add $0x8,%rsp
423a(1): pop %rbx
423b(1): pop %rbp
423c(1): ret near (%rsp)
423d(3): nop (%rax)
4240(4): movzx 0x1(%rax),%edx
4244(3): and $0xdf,%edx
4247(3): cmp $0x54,%dl
424a(2): jnz 0xffffff86(%rip)
424c(4): movzx 0x2(%rax),%edx
4250(3): and $0xdf,%edx
4253(3): cmp $0x46,%dl
4256(6): jnz 0xffffff7a(%rip)
425c(4): cmp $0x2d,0x3(%rax)
4260(6): jnz 0xffffff70(%rip)
4266(4): cmp $0x38,0x4(%rax)
426a(6): jnz 0xffffff66(%rip)
4270(4): cmp $0x0,0x5(%rax)
4274(6): jnz 0xffffff5c(%rip)
427a(4): cmp $0x60,0x0(%rbp)
427e(7): lea 0x337f(%rip),%rax
4285(7): lea 0x337c(%rip),%rdx
428c(4): cmovne %rdx,%rax
4290(4): add $0x8,%rsp
4294(1): pop %rbx
4295(1): pop %rbp
4296(1): ret near (%rsp)

"quotearg_buffer_restyled" :
42a0(2): push %r15
42a2(2): push %r14
42a4(3): mov %r8d,%r15d
42a7(2): push %r13
42a9(2): push %r12
42ab(3): mov %rdi,%r14
42ae(1): push %rbp
42af(1): push %rbx
42b0(3): mov %r9d,%ebx
42b3(3): mov %rsi,%r13
42b6(3): mov %rcx,%rbp
42b9(3): and $0x2,%ebx
42bc(7): sub $0xb8,%rsp
42c3(8): mov 0xf0(%rsp),%rax
42cb(5): mov %rdx,0x10(%rsp)
42d0(5): mov %r8d,0x8(%rsp)
42d5(5): mov %r9d,0x78(%rsp)
42da(5): mov %rax,0x20(%rsp)
42df(8): mov 0xf8(%rsp),%rax
42e7(5): mov %rax,0x68(%rsp)
42ec(8): mov 0x100(%rsp),%rax
42f4(5): mov %rax,0x60(%rsp)
42f9(9): mov $0x28,%rax
4302(8): mov %rax,0xa8(%rsp)
430a(2): xor %eax,%eax
430c(5): call 0xffffd254(%rip)
4311(4): cmp $0xa,%r15d
4315(5): mov %rax,0x58(%rsp)
431a(6): jnbe 0x11b5(%rip)
4320(7): lea 0x3359(%rip),%rcx
4327(3): mov %r15d,%edx
432a(4): movsxd 0x0(%rcx,%rdx,4),%rax
432e(3): add %rcx,%rax
4331(2): jmp %rax
4333(5): mov $0x1,0xe(%rsp)
4338(5): mov $0x0,0x7c(%rsp)
433d(3): xor %r12d,%r12d
4340(9): mov $0x0,0x50(%rsp)
4349(5): mov $0x1,0xf(%rsp)
434e(5): mov $0x0,0xd(%rsp)
4353(7): lea 0x32bb(%rip),%rax
435a(9): mov $0x1,0x18(%rsp)
4363(3): xor %r15d,%r15d
4366(8): mov $0x2,0x8(%rsp)
436e(5): mov %rax,0x48(%rsp)
4373(3): xor %r11d,%r11d
4376(3): mov %rbp,%rax
4379(3): mov %r12d,%r8d
437c(3): mov %r11,%rbp
437f(3): mov %rax,%r11
4382(6): nop 0x0(%rax,%rax,1)
4388(3): cmp %rbp,%r11
438b(4): setnz %r12b
438f(4): cmp $0xffffffff,%r11
4393(2): jnz 0xf(%rip)
4395(5): mov 0x10(%rsp),%rax
439a(4): cmp $0x0,0x0(%rax,%rbp,1)
439e(4): setnz %r12b
43a2(3): test %r12b,%r12b
43a5(6): jz 0x65b(%rip)
43ab(5): cmp $0x2,0x8(%rsp)
43b0(5): mov 0x10(%rsp),%rdi
43b5(4): lea 0x0(%rdi,%rbp,1),%r9
43b9(3): setnz %al
43bc(4): and 0xd(%rsp),%al
43c0(3): mov %eax,%r10d
43c3(6): jz 0xad(%rip)
43c9(5): mov 0x18(%rsp),%rax
43ce(3): test %rax,%rax
43d1(6): jz 0x42f(%rip)
43d7(4): cmp $0xffffffff,%r11
43db(5): lea 0x0(%rbp,%rax,1),%rbx
43e0(2): jnz 0x30(%rip)
43e2(4): cmp $0x1,%rax
43e6(2): jbe 0x2a(%rip)
43e8(5): mov %r8b,0x38(%rsp)
43ed(5): mov %r10b,0x30(%rsp)
43f2(5): mov %r9,0x28(%rsp)
43f7(5): call 0xffffd179(%rip)
43fc(6): movzx 0x38(%rsp),%r8d
4402(6): movzx 0x30(%rsp),%r10d
4408(3): mov %rax,%r11
440b(5): mov 0x28(%rsp),%r9
4410(3): cmp %r11,%rbx
4413(5): mov %r10b,0x28(%rsp)
4418(6): jnbe 0x5b8(%rip)
441e(5): mov 0x18(%rsp),%rdx
4423(5): mov 0x48(%rsp),%rsi
4428(3): mov %r9,%rdi
442b(5): mov %r11,0x40(%rsp)
4430(5): mov %r8b,0x38(%rsp)
4435(5): mov %r9,0x30(%rsp)
443a(5): call 0xffffd1f6(%rip)
443f(2): test %eax,%eax
4441(5): mov 0x30(%rsp),%r9
4446(6): movzx 0x38(%rsp),%r8d
444c(5): mov 0x40(%rsp),%r11
4451(6): jnz 0x57f(%rip)
4457(5): cmp $0x0,0xf(%rsp)
445c(6): movzx 0x28(%rsp),%r10d
4462(6): jnz 0xf83(%rip)
4468(8): nop 0x0(%rax,%rax,1)
4470(4): movzx (%r9),%ebx
4474(3): cmp $0x7e,%bl
4477(6): jnbe 0x321(%rip)
447d(7): lea 0x3228(%rip),%rcx
4484(3): movzx %bl,%edx
4487(4): movsxd 0x0(%rcx,%rdx,4),%rax
448b(3): add %rcx,%rax
448e(2): jmp %rax
4490(3): xor %r10d,%r10d
4493(4): cmp $0x1,%r11
4497(3): setnz %al
449a(4): cmp $0xffffffff,%r11
449e(2): jnz 0xe(%rip)
44a0(5): mov 0x10(%rsp),%rax
44a5(4): cmp $0x0,0x1(%rax)
44a9(3): setnz %al
44ac(5): cmp $0x2,0x8(%rsp)
44b1(3): setz %dl
44b4(2): test %al,%al
44b6(6): jz 0x252(%rip)
44bc(3): xor %r12d,%r12d
44bf(2): xor %eax,%eax
44c1(7): nop 0x0(%rax)
44c8(5): cmp $0x1,0xd(%rsp)
44cd(6): jnz 0x115(%rip)
44d3(2): test %dl,%dl
44d5(6): jnz 0x10d(%rip)
44db(5): mov 0x20(%rsp),%rsi
44e0(3): test %rsi,%rsi
44e3(2): jz 0x16(%rip)
44e5(2): mov %ebx,%edx
44e7(3): shr $0x5,%dl
44ea(3): movzx %dl,%edx
44ed(3): mov 0x0(%rsi,%rdx,4),%edx
44f0(3): bt %ebx,%edx
44f3(6): jb 0x150(%rip)
44f9(3): test %r10b,%r10b
44fc(6): jnz 0x147(%rip)
4502(3): xor $0x1,%eax
4505(4): add $0x1,%rbp
4509(3): and %r8d,%eax
450c(2): test %al,%al
450e(2): jz 0x22(%rip)
4510(3): cmp %r15,%r13
4513(2): jbe 0x7(%rip)
4515(5): mov $0x27,0x0(%r14,%r15,1)
451a(4): lea 0x1(%r15),%rax
451e(3): cmp %rax,%r13
4521(2): jbe 0x8(%rip)
4523(6): mov $0x27,0x1(%r14,%r15,1)
4529(4): add $0x2,%r15
452d(3): xor %r8d,%r8d
4530(3): cmp %r13,%r15
4533(2): jnb 0x6(%rip)
4535(4): mov %bl,0x0(%r14,%r15,1)
4539(5): movzx 0xe(%rsp),%edi
453e(4): add $0x1,%r15
4542(5): mov $0x0,%eax
4547(3): test %r12b,%r12b
454a(3): cmove %eax,%edi
454d(5): mov %dil,0xe(%rsp)
4552(5): jmp 0xfffffe36(%rip)
4557(9): nop 0x0(%rax,%rax,1)
4560(3): xor %r10d,%r10d
4563(4): mov 0x8(%rsp),%eax
4567(3): cmp $0x2,%eax
456a(6): jz 0x5be(%rip)
4570(3): cmp $0x5,%eax
4573(6): jz 0x575(%rip)
4579(3): cmp $0x2,%eax
457c(5): mov $0x3f,%ebx
4581(3): setz %dl
4584(3): xor %r12d,%r12d
4587(2): xor %eax,%eax
4589(5): jmp 0xffffff3f(%rip)
458e(2): nop 
4590(3): xor %r10d,%r10d
4593(5): cmp $0x2,0x8(%rsp)
4598(6): jz 0x508(%rip)
459e(5): mov %r12b,0x7c(%rsp)
45a3(2): xor %edx,%edx
45a5(2): xor %eax,%eax
45a7(5): mov $0x27,%ebx
45ac(5): jmp 0xffffff1c(%rip)
45b1(7): nop 0x0(%rax)
45b8(5): mov $0x9,%edx
45bd(5): mov $0x74,%ebx
45c2(5): cmp $0x2,0x8(%rsp)
45c7(3): setz %al
45ca(4): and 0xf(%rsp),%al
45ce(6): jnz 0x150(%rip)
45d4(5): cmp $0x0,0xd(%rsp)
45d9(2): jnz 0x67(%rip)
45db(2): mov %edx,%ebx
45dd(3): xor %r12d,%r12d
45e0(2): xor %eax,%eax
45e2(5): cmp $0x0,0xf(%rsp)
45e7(6): jnz 0xfffffef4(%rip)
45ed(5): jmp 0xffffff0c(%rip)
45f2(6): nop 0x0(%rax,%rax,1)
45f8(5): mov $0x8,%edx
45fd(5): mov $0x62,%ebx
4602(2): jmp 0xffffffd2(%rip)
4604(4): nop 0x0(%rax)
4608(5): cmp $0x2,0x8(%rsp)
460d(6): jz 0x3d3(%rip)
4613(5): cmp $0x0,0xd(%rsp)
4618(6): jz 0x218(%rip)
461e(5): cmp $0x0,0xf(%rsp)
4623(6): jz 0x20d(%rip)
4629(6): cmp $0x0,0x18(%rsp)
462f(6): jnz 0x3bc(%rip)
4635(5): mov $0x5c,%ebx
463a(6): nop 0x0(%rax,%rax,1)
4640(3): xor %r12d,%r12d
4643(5): cmp $0x2,0x8(%rsp)
4648(3): setz %dl
464b(5): cmp $0x0,0xf(%rsp)
4650(2): mov %edx,%eax
4652(6): jnz 0x856(%rip)
4658(3): mov %r8d,%eax
465b(3): xor $0x1,%eax
465e(2): and %dl,%al
4660(2): jz 0x31(%rip)
4662(3): cmp %r15,%r13
4665(2): jbe 0x7(%rip)
4667(5): mov $0x27,0x0(%r14,%r15,1)
466c(4): lea 0x1(%r15),%rdx
4670(3): cmp %rdx,%r13
4673(2): jbe 0x8(%rip)
4675(6): mov $0x24,0x1(%r14,%r15,1)
467b(4): lea 0x2(%r15),%rdx
467f(3): cmp %rdx,%r13
4682(2): jbe 0x8(%rip)
4684(6): mov $0x27,0x2(%r14,%r15,1)
468a(4): add $0x3,%r15
468e(3): mov %eax,%r8d
4691(3): cmp %r15,%r13
4694(2): jbe 0x7(%rip)
4696(5): mov $0x5c,0x0(%r14,%r15,1)
469b(4): add $0x1,%r15
469f(4): add $0x1,%rbp
46a3(5): jmp 0xfffffe8d(%rip)
46a8(8): nop 0x0(%rax,%rax,1)
46b0(5): cmp $0x0,0xd(%rsp)
46b5(6): jnz 0x1ce(%rip)
46bb(2): xor %edx,%edx
46bd(5): test $0x1,0x78(%rsp)
46c2(6): jz 0xffffff19(%rip)
46c8(4): add $0x1,%rbp
46cc(5): jmp 0xfffffcbc(%rip)
46d1(7): nop 0x0(%rax)
46d8(5): cmp $0x2,0x8(%rsp)
46dd(3): setz %dl
46e0(2): xor %eax,%eax
46e2(5): jmp 0xfffffde6(%rip)
46e7(9): nop 0x0(%rax,%rax,1)
46f0(5): mov $0x7,%edx
46f5(5): mov $0x61,%ebx
46fa(5): jmp 0xfffffeda(%rip)
46ff(1): nop 
4700(5): cmp $0x2,0x8(%rsp)
4705(3): setz %dl
4708(3): test %rbp,%rbp
470b(6): jnz 0xfffffdb1(%rip)
4711(5): movzx 0xf(%rsp),%eax
4716(2): and %dl,%al
4718(6): jz 0xfffffdb0(%rip)
471e(3): mov %r11,%rbp
4721(8): mov $0x2,0x8(%rsp)
4729(5): jmp 0x700(%rip)
472e(2): nop 
4730(5): cmp $0x2,0x8(%rsp)
4735(3): setz %dl
4738(3): xor %r12d,%r12d
473b(2): jmp 0xffffffd6(%rip)
473d(3): nop (%rax)
4740(5): cmp $0x2,0x8(%rsp)
4745(5): mov $0x20,%ebx
474a(3): setz %dl
474d(2): jmp 0xffffffc4(%rip)
474f(1): nop 
4750(5): mov $0xd,%edx
4755(5): mov $0x72,%ebx
475a(5): jmp 0xfffffe68(%rip)
475f(1): nop 
4760(5): mov $0xc,%edx
4765(5): mov $0x66,%ebx
476a(5): jmp 0xfffffe6a(%rip)
476f(1): nop 
4770(5): mov $0xb,%edx
4775(5): mov $0x76,%ebx
477a(5): jmp 0xfffffe5a(%rip)
477f(1): nop 
4780(5): mov $0xa,%edx
4785(5): mov $0x6e,%ebx
478a(5): jmp 0xfffffe38(%rip)
478f(1): nop 
4790(3): xor %r10d,%r10d
4793(5): nop 0x0(%rax,%rax,1)
4798(6): cmp $0x1,0x58(%rsp)
479e(6): jnz 0x3aa(%rip)
47a4(5): mov %r11,0x38(%rsp)
47a9(5): mov %r8b,0x30(%rsp)
47ae(5): mov %r10b,0x28(%rsp)
47b3(5): call 0xffffcfed(%rip)
47b8(3): mov (%rax),%rcx
47bb(3): movzx %bl,%edx
47be(6): movzx 0x28(%rsp),%r10d
47c4(6): movzx 0x30(%rsp),%r8d
47ca(5): mov 0x38(%rsp),%r11
47cf(5): mov $0x1,%edi
47d4(4): movzx 0x0(%rcx,%rdx,2),%eax
47d8(4): and $0x4000,%ax
47dc(4): setnz %r12b
47e0(3): setz %al
47e3(4): and 0xd(%rsp),%al
47e7(2): test %al,%al
47e9(6): jnz 0x998(%rip)
47ef(5): cmp $0x2,0x8(%rsp)
47f4(3): setz %dl
47f7(5): jmp 0xfffffcd1(%rip)
47fc(4): nop 0x0(%rax)
4800(4): movzx (%r9),%ebx
4804(3): cmp $0x7e,%bl
4807(2): jnbe 0xffffff89(%rip)
4809(7): lea 0x3098(%rip),%rcx
4810(3): movzx %bl,%edx
4813(4): movsxd 0x0(%rcx,%rdx,4),%rax
4817(3): add %rcx,%rax
481a(2): jmp %rax
481c(4): nop 0x0(%rax)
4820(3): xor %r10d,%r10d
4823(5): cmp $0x0,0xd(%rsp)
4828(6): jnz 0xfffffdf6(%rip)
482e(2): nop 
4830(5): mov $0x5c,%edx
4835(5): mov $0x5c,%ebx
483a(5): jmp 0xfffffd9a(%rip)
483f(1): nop 
4840(5): mov $0xc,%edx
4845(3): xor %r10d,%r10d
4848(5): mov $0x66,%ebx
484d(5): jmp 0xfffffd87(%rip)
4852(6): nop 0x0(%rax,%rax,1)
4858(5): mov $0xa,%edx
485d(3): xor %r10d,%r10d
4860(5): mov $0x6e,%ebx
4865(5): jmp 0xfffffd5d(%rip)
486a(6): nop 0x0(%rax,%rax,1)
4870(5): mov $0x61,%ebx
4875(5): jmp 0xfffffdcb(%rip)
487a(6): nop 0x0(%rax,%rax,1)
4880(3): xor %r10d,%r10d
4883(5): cmp $0x2,0x8(%rsp)
4888(3): setz %dl
488b(5): cmp $0x0,0xf(%rsp)
4890(6): jnz 0xb9a(%rip)
4896(3): mov %r8d,%eax
4899(3): mov %r15,%rcx
489c(3): xor $0x1,%eax
489f(2): and %dl,%al
48a1(2): jz 0x2f(%rip)
48a3(3): cmp %r15,%r13
48a6(2): jbe 0x7(%rip)
48a8(5): mov $0x27,0x0(%r14,%r15,1)
48ad(4): lea 0x1(%r15),%rcx
48b1(3): cmp %rcx,%r13
48b4(2): jbe 0x8(%rip)
48b6(6): mov $0x24,0x1(%r14,%r15,1)
48bc(4): lea 0x2(%r15),%rcx
48c0(3): cmp %rcx,%r13
48c3(6): jnbe 0x636(%rip)
48c9(4): lea 0x3(%r15),%rcx
48cd(3): mov %eax,%r8d
48d0(3): cmp %rcx,%r13
48d3(2): jbe 0x7(%rip)
48d5(5): mov $0x5c,0x0(%r14,%rcx,1)
48da(5): cmp $0x2,0x8(%rsp)
48df(4): lea 0x1(%rcx),%r15
48e3(6): jz 0x606(%rip)
48e9(4): lea 0x1(%rbp),%rax
48ed(3): cmp %r11,%rax
48f0(2): jnb 0x1b(%rip)
48f2(5): mov 0x10(%rsp),%rax
48f7(5): movzx 0x1(%rax,%rbp,1),%eax
48fc(4): mov %al,0x28(%rsp)
4900(3): sub $0x30,%eax
4903(2): cmp $0x9,%al
4905(6): jbe 0x834(%rip)
490b(3): mov %r12d,%eax
490e(5): mov $0x30,%ebx
4913(3): xor %r12d,%r12d
4916(5): jmp 0xfffffbb2(%rip)
491b(5): nop 0x0(%rax,%rax,1)
4920(5): cmp $0x2,0x8(%rsp)
4925(3): mov %r10d,%r12d
4928(3): setz %dl
492b(3): xor %r10d,%r10d
492e(2): xor %eax,%eax
4930(5): jmp 0xfffffb98(%rip)
4935(3): nop (%rax)
4938(5): cmp $0x2,0x8(%rsp)
493d(3): setz %dl
4940(3): xor %r10d,%r10d
4943(5): jmp 0xfffffdc5(%rip)
4948(8): nop 0x0(%rax,%rax,1)
4950(5): cmp $0x2,0x8(%rsp)
4955(3): setz %dl
4958(3): xor %r10d,%r10d
495b(3): xor %r12d,%r12d
495e(5): jmp 0xfffffdb3(%rip)
4963(5): nop 0x0(%rax,%rax,1)
4968(5): cmp $0x2,0x8(%rsp)
496d(3): mov %r10d,%r12d
4970(5): mov $0x20,%ebx
4975(3): setz %dl
4978(3): xor %r10d,%r10d
497b(5): jmp 0xfffffd96(%rip)
4980(5): mov $0xd,%edx
4985(3): xor %r10d,%r10d
4988(5): mov $0x72,%ebx
498d(5): jmp 0xfffffc35(%rip)
4992(6): nop 0x0(%rax,%rax,1)
4998(5): mov $0x76,%ebx
499d(5): jmp 0xfffffca3(%rip)
49a2(6): nop 0x0(%rax,%rax,1)
49a8(5): mov $0x9,%edx
49ad(3): xor %r10d,%r10d
49b0(5): mov $0x74,%ebx
49b5(5): jmp 0xfffffc0d(%rip)
49ba(6): nop 0x0(%rax,%rax,1)
49c0(5): mov $0x62,%ebx
49c5(5): jmp 0xfffffc7b(%rip)
49ca(6): nop 0x0(%rax,%rax,1)
49d0(3): xor %r10d,%r10d
49d3(5): jmp 0xfffffa9d(%rip)
49d8(8): nop 0x0(%rax,%rax,1)
49e0(5): cmp $0x0,0xf(%rsp)
49e5(6): jnz 0x96b(%rip)
49eb(4): add $0x1,%rbp
49ef(3): mov %r8d,%eax
49f2(3): xor %r12d,%r12d
49f5(5): mov $0x5c,%ebx
49fa(5): jmp 0xfffffb12(%rip)
49ff(1): nop 
4a00(5): cmp $0x2,0x8(%rsp)
4a05(5): movzx 0xf(%rsp),%ebx
4a0a(3): mov %r8d,%r12d
4a0d(3): mov %r11,%rbp
4a10(3): setz %dl
4a13(2): mov %ebx,%eax
4a15(3): test %r15,%r15
4a18(3): setz %cl
4a1b(2): and %edx,%eax
4a1d(2): and %cl,%al
4a1f(6): jnz 0xa67(%rip)
4a25(2): mov %ebx,%eax
4a27(3): xor $0x1,%eax
4a2a(2): and %al,%dl
4a2c(6): jz 0x970(%rip)
4a32(5): cmp $0x0,0x7c(%rsp)
4a37(6): jz 0x963(%rip)
4a3d(5): cmp $0x0,0xe(%rsp)
4a42(6): jnz 0x9fb(%rip)
4a48(3): test %r13,%r13
4a4b(3): setz %al
4a4e(6): cmp $0x0,0x50(%rsp)
4a54(3): setnz %dl
4a57(2): and %dl,%al
4a59(6): jz 0xa23(%rip)
4a5f(5): mov 0x50(%rsp),%r13
4a64(7): lea 0x2baa(%rip),%rbx
4a6b(4): mov $0x27,(%r14)
4a6f(8): mov $0x2,0x8(%rsp)
4a77(6): mov $0x1,%r15d
4a7d(9): mov $0x1,0x18(%rsp)
4a86(5): mov $0x0,0xf(%rsp)
4a8b(5): mov %rbx,0x48(%rsp)
4a90(4): mov %al,0x7c(%rsp)
4a94(5): jmp 0xfffff8df(%rip)
4a99(7): nop 0x0(%rax)
4aa0(5): cmp $0x0,0xf(%rsp)
4aa5(6): jnz 0x8ab(%rip)
4aab(3): test %r13,%r13
4aae(6): jz 0x402(%rip)
4ab4(2): xor %edx,%edx
4ab6(6): cmp $0x0,0x50(%rsp)
4abc(6): jnz 0x3f4(%rip)
4ac2(5): mov %r13,0x50(%rsp)
4ac7(4): add $0x3,%r15
4acb(2): xor %eax,%eax
4acd(5): mov %r12b,0x7c(%rsp)
4ad2(3): xor %r8d,%r8d
4ad5(3): mov %rdx,%r13
4ad8(5): mov $0x27,%ebx
4add(5): jmp 0xfffffa1c(%rip)
4ae2(6): nop 0x0(%rax,%rax,1)
4ae8(5): test $0x4,0x78(%rsp)
4aed(2): jz 0x23(%rip)
4aef(4): lea 0x2(%rbp),%rcx
4af3(3): cmp %r11,%rcx
4af6(2): jnb 0x1a(%rip)
4af8(5): mov 0x10(%rsp),%rax
4afd(5): cmp $0x3f,0x1(%rax,%rbp,1)
4b02(6): jz 0x790(%rip)
4b08(8): nop 0x0(%rax,%rax,1)
4b10(2): xor %edx,%edx
4b12(3): xor %r12d,%r12d
4b15(2): xor %eax,%eax
4b17(5): mov $0x3f,%ebx
4b1c(5): jmp 0xfffff9ac(%rip)
4b21(7): nop 0x0(%rax)
4b28(5): cmp $0x0,0xf(%rsp)
4b2d(6): jnz 0x823(%rip)
4b33(3): xor %r12d,%r12d
4b36(2): xor %eax,%eax
4b38(5): mov $0x3f,%ebx
4b3d(5): jmp 0xfffff9bc(%rip)
4b42(6): nop 0x0(%rax,%rax,1)
4b48(8): lea 0xa0(%rsp),%rax
4b50(4): cmp $0xffffffff,%r11
4b54(c): mov $0x0,0xa0(%rsp)
4b60(5): mov %rax,0x28(%rsp)
4b65(2): jnz 0x2f(%rip)
4b67(5): mov 0x10(%rsp),%rdi
4b6c(5): mov %r8b,0x40(%rsp)
4b71(5): mov %r10b,0x38(%rsp)
4b76(5): mov %r9,0x30(%rsp)
4b7b(5): call 0xffffc9f5(%rip)
4b80(6): movzx 0x40(%rsp),%r8d
4b86(6): movzx 0x38(%rsp),%r10d
4b8c(3): mov %rax,%r11
4b8f(5): mov 0x30(%rsp),%r9
4b94(8): lea 0x9c(%rsp),%rax
4b9c(2): xor %ecx,%ecx
4b9e(4): mov %bl,0x7e(%rsp)
4ba2(5): mov %r8b,0x7d(%rsp)
4ba7(3): mov %rcx,%rbx
4baa(8): mov %r9,0x88(%rsp)
4bb2(5): mov %rax,0x38(%rsp)
4bb7(5): mov %r10b,0x7f(%rsp)
4bbc(8): mov %r15,0x80(%rsp)
4bc4(5): mov %r14,0x40(%rsp)
4bc9(5): mov %r13,0x70(%rsp)
4bce(5): mov %r11,0x30(%rsp)
4bd3(5): mov 0x10(%rsp),%rax
4bd8(5): lea 0x0(%rbp,%rbx,1),%r14
4bdd(5): mov 0x30(%rsp),%rdx
4be2(5): mov 0x28(%rsp),%rcx
4be7(5): mov 0x38(%rsp),%rdi
4bec(4): lea 0x0(%rax,%r14,1),%r13
4bf0(3): sub %r14,%rdx
4bf3(3): mov %r13,%rsi
4bf6(5): call 0x1d1a(%rip)
4bfb(3): test %rax,%rax
4bfe(3): mov %rax,%r15
4c01(2): jz 0x50(%rip)
4c03(4): cmp $0xffffffff,%rax
4c07(6): jz 0x61e(%rip)
4c0d(4): cmp $0xfffffffe,%rax
4c11(6): jz 0x5a0(%rip)
4c17(5): cmp $0x2,0x8(%rsp)
4c1c(3): setz %al
4c1f(4): and 0xf(%rsp),%al
4c23(6): jnz 0x19d(%rip)
4c29(7): mov 0x9c(%rsp),%edi
4c30(5): call 0xffffcb60(%rip)
4c35(5): mov 0x28(%rsp),%rdi
4c3a(2): test %eax,%eax
4c3c(5): mov $0x0,%eax
4c41(4): cmove %eax,%r12d
4c45(3): add %r15,%rbx
4c48(5): call 0xffffcb38(%rip)
4c4d(2): test %eax,%eax
4c4f(2): jz 0xffffff84(%rip)
4c51(3): mov %r12d,%edx
4c54(3): mov %rbx,%rdi
4c57(6): movzx 0x7d(%rsp),%r8d
4c5d(3): xor $0x1,%edx
4c60(5): movzx 0x7e(%rsp),%ebx
4c65(6): movzx 0x7f(%rsp),%r10d
4c6b(4): and 0xd(%rsp),%dl
4c6f(8): mov 0x80(%rsp),%r15
4c77(5): mov 0x40(%rsp),%r14
4c7c(5): mov 0x70(%rsp),%r13
4c81(5): mov 0x30(%rsp),%r11
4c86(4): cmp $0x1,%rdi
4c8a(6): jbe 0x601(%rip)
4c90(3): mov %rdi,%rcx
4c93(2): xor %esi,%esi
4c95(6): movzx 0xf(%rsp),%r9d
4c9b(3): add %rbp,%rcx
4c9e(5): mov 0x10(%rsp),%rdi
4ca3(5): jmp 0xbb(%rip)
4ca8(8): nop 0x0(%rax,%rax,1)
4cb0(5): cmp $0x2,0x8(%rsp)
4cb5(3): setz %al
4cb8(3): test %r9b,%r9b
4cbb(6): jnz 0x4b5(%rip)
4cc1(3): mov %r8d,%esi
4cc4(3): xor $0x1,%esi
4cc7(3): and %sil,%al
4cca(2): jz 0x31(%rip)
4ccc(3): cmp %r15,%r13
4ccf(2): jbe 0x7(%rip)
4cd1(5): mov $0x27,0x0(%r14,%r15,1)
4cd6(4): lea 0x1(%r15),%rsi
4cda(3): cmp %rsi,%r13
4cdd(2): jbe 0x8(%rip)
4cdf(6): mov $0x24,0x1(%r14,%r15,1)
4ce5(4): lea 0x2(%r15),%rsi
4ce9(3): cmp %rsi,%r13
4cec(2): jbe 0x8(%rip)
4cee(6): mov $0x27,0x2(%r14,%r15,1)
4cf4(4): add $0x3,%r15
4cf8(3): mov %eax,%r8d
4cfb(3): cmp %r15,%r13
4cfe(2): jbe 0x7(%rip)
4d00(5): mov $0x5c,0x0(%r14,%r15,1)
4d05(4): lea 0x1(%r15),%rax
4d09(3): cmp %rax,%r13
4d0c(2): jbe 0xf(%rip)
4d0e(2): mov %ebx,%eax
4d10(3): shr $0x6,%al
4d13(3): add $0x30,%eax
4d16(5): mov %al,0x1(%r14,%r15,1)
4d1b(4): lea 0x2(%r15),%rax
4d1f(3): cmp %rax,%r13
4d22(2): jbe 0x12(%rip)
4d24(2): mov %ebx,%eax
4d26(3): shr $0x3,%al
4d29(3): and $0x7,%eax
4d2c(3): add $0x30,%eax
4d2f(5): mov %al,0x2(%r14,%r15,1)
4d34(3): and $0x7,%ebx
4d37(4): add $0x1,%rbp
4d3b(4): add $0x3,%r15
4d3f(3): add $0x30,%ebx
4d42(3): cmp %rcx,%rbp
4d45(6): jnb 0xfffff7eb(%rip)
4d4b(2): mov %edx,%esi
4d4d(3): cmp %r15,%r13
4d50(2): jbe 0x6(%rip)
4d52(4): mov %bl,0x0(%r14,%r15,1)
4d56(4): movzx 0x0(%rdi,%rbp,1),%ebx
4d5a(4): add $0x1,%r15
4d5e(2): test %dl,%dl
4d60(6): jnz 0xffffff50(%rip)
4d66(2): mov %esi,%eax
4d68(3): xor $0x1,%eax
4d6b(3): and %r8d,%eax
4d6e(3): test %r10b,%r10b
4d71(2): jz 0x10(%rip)
4d73(3): cmp %r15,%r13
4d76(2): jbe 0x7(%rip)
4d78(5): mov $0x5c,0x0(%r14,%r15,1)
4d7d(4): add $0x1,%r15
4d81(4): add $0x1,%rbp
4d85(3): cmp %rcx,%rbp
4d88(6): jnb 0xfffff784(%rip)
4d8e(2): test %al,%al
4d90(6): jz 0x3fe(%rip)
4d96(3): cmp %r15,%r13
4d99(2): jbe 0x7(%rip)
4d9b(5): mov $0x27,0x0(%r14,%r15,1)
4da0(4): lea 0x1(%r15),%rax
4da4(3): cmp %rax,%r13
4da7(2): jbe 0x8(%rip)
4da9(6): mov $0x27,0x1(%r14,%r15,1)
4daf(4): add $0x2,%r15
4db3(3): xor %r10d,%r10d
4db6(3): xor %r8d,%r8d
4db9(2): jmp 0xffffff94(%rip)
4dbb(5): nop 0x0(%rax,%rax,1)
4dc0(4): cmp $0x1,%r15
4dc4(6): jz 0xfffffe65(%rip)
4dca(5): mov 0x10(%rsp),%rdi
4dcf(4): lea 0x0(%rdi,%r15,1),%rcx
4dd3(5): lea 0x1(%rdi,%r14,1),%rdx
4dd8(4): lea 0x0(%rcx,%r14,1),%r8
4ddc(2): jmp 0x11(%rip)
4dde(2): nop 
4de0(4): add $0x1,%rdx
4de4(3): cmp %rdx,%r8
4de7(6): jz 0xfffffe42(%rip)
4ded(3): movzx (%rdx),%ecx
4df0(3): sub $0x5b,%ecx
4df3(3): cmp $0x21,%cl
4df6(2): jnbe 0xffffffea(%rip)
4df8(5): mov $0x1,%esi
4dfd(3): shl/sal %cl,%rsi
4e00(3): mov %rsi,%rcx
4e03(a): mov $0x8589934635,%rsi
4e0d(3): test %rsi,%rcx
4e10(2): jz 0xffffffd0(%rip)
4e12(5): mov 0x40(%rsp),%r14
4e17(5): mov 0x70(%rsp),%r13
4e1c(5): mov 0x30(%rsp),%rbp
4e21(8): mov $0x2,0x8(%rsp)
4e29(5): cmp $0x0,0xd(%rsp)
4e2e(2): jz 0x12(%rip)
4e30(2): test %al,%al
4e32(5): mov $0x4,%eax
4e37(5): cmove 0x8(%rsp),%eax
4e3c(4): mov %eax,0x8(%rsp)
4e40(4): sub $0x8,%rsp
4e44(3): mov %rbp,%rcx
4e47(3): mov %r13,%rsi
4e4a(4): push 0x68(%rsp)
4e4e(4): push 0x78(%rsp)
4e52(3): mov %r14,%rdi
4e55(2): push $0x0
4e57(8): mov 0x98(%rsp),%r9d
4e5f(5): mov 0x28(%rsp),%r8d
4e64(5): mov 0x30(%rsp),%rdx
4e69(4): and $0xfd,%r9d
4e6d(5): call 0xfffff433(%rip)
4e72(4): add $0x20,%rsp
4e76(3): mov %rax,%r15
4e79(8): mov 0xa8(%rsp),%rbx
4e81(9): xor $0x28,%rbx
4e8a(3): mov %r15,%rax
4e8d(6): jnz 0x606(%rip)
4e93(7): add $0xb8,%rsp
4e9a(1): pop %rbx
4e9b(1): pop %rbp
4e9c(2): pop %r12
4e9e(2): pop %r13
4ea0(2): pop %r14
4ea2(2): pop %r15
4ea4(1): ret near (%rsp)
4ea5(3): nop (%rax)
4ea8(3): mov %r11,%rbp
4eab(5): jmp 0xffffff7e(%rip)
4eb0(3): cmp %r15,%r13
4eb3(2): jbe 0x7(%rip)
4eb5(5): mov $0x27,0x0(%r14,%r15,1)
4eba(4): lea 0x1(%r15),%rax
4ebe(3): cmp %rax,%r13
4ec1(2): jbe 0x8(%rip)
4ec3(6): mov $0x5c,0x1(%r14,%r15,1)
4ec9(4): lea 0x2(%r15),%rax
4ecd(3): cmp %rax,%r13
4ed0(6): jbe 0x5f2(%rip)
4ed6(3): mov %r13,%rdx
4ed9(6): mov $0x27,0x2(%r14,%r15,1)
4edf(5): mov 0x50(%rsp),%r13
4ee4(5): jmp 0xfffffbde(%rip)
4ee9(3): mov %r12d,%eax
4eec(5): mov $0x30,%ebx
4ef1(3): xor %r12d,%r12d
4ef4(5): jmp 0xfffff605(%rip)
4ef9(6): mov $0x27,0x2(%r14,%r15,1)
4eff(5): jmp 0xfffff9ca(%rip)
4f04(2): test %ebx,%ebx
4f06(6): jnz 0xfffff42d(%rip)
4f0c(5): mov $0x1,0xd(%rsp)
4f11(3): test %r13,%r13
4f14(6): jnz 0x596(%rip)
4f1a(7): lea 0x26f4(%rip),%rax
4f21(9): mov $0x0,0x50(%rsp)
4f2a(5): mov $0x1,0xe(%rsp)
4f2f(5): mov $0x0,0x7c(%rsp)
4f34(3): xor %r12d,%r12d
4f37(5): mov $0x0,0xf(%rsp)
4f3c(9): mov $0x1,0x18(%rsp)
4f45(5): mov %rax,0x48(%rsp)
4f4a(6): mov $0x1,%r15d
4f50(8): mov $0x2,0x8(%rsp)
4f58(5): jmp 0xfffff41b(%rip)
4f5d(3): nop (%rax)
4f60(2): test %ebx,%ebx
4f62(6): jnz 0x3fb(%rip)
4f68(3): test %r13,%r13
4f6b(6): jz 0x22b(%rip)
4f71(4): mov $0x22,(%r14)
4f75(5): mov $0x1,0xe(%rsp)
4f7a(3): xor %r12d,%r12d
4f7d(5): mov $0x0,0x7c(%rsp)
4f82(9): mov $0x0,0x50(%rsp)
4f8b(7): lea 0x2681(%rip),%rax
4f92(5): mov $0x0,0xf(%rsp)
4f97(5): mov $0x1,0xd(%rsp)
4f9c(9): mov $0x1,0x18(%rsp)
4fa5(6): mov $0x1,%r15d
4fab(5): mov %rax,0x48(%rsp)
4fb0(5): jmp 0xfffff3c3(%rip)
4fb5(7): lea 0x2657(%rip),%rax
4fbc(5): mov $0x1,0xe(%rsp)
4fc1(5): mov $0x0,0x7c(%rsp)
4fc6(3): xor %r12d,%r12d
4fc9(9): mov $0x0,0x50(%rsp)
4fd2(5): mov $0x1,0xf(%rsp)
4fd7(5): mov $0x1,0xd(%rsp)
4fdc(9): mov $0x1,0x18(%rsp)
4fe5(3): xor %r15d,%r15d
4fe8(5): mov %rax,0x48(%rsp)
4fed(8): mov $0x5,0x8(%rsp)
4ff5(5): jmp 0xfffff37e(%rip)
4ffa(5): mov $0x1,0xe(%rsp)
4fff(5): mov $0x0,0x7c(%rsp)
5004(3): xor %r12d,%r12d
5007(9): mov $0x0,0x50(%rsp)
5010(5): mov $0x0,0xf(%rsp)
5015(3): xor %r15d,%r15d
5018(5): mov $0x1,0xd(%rsp)
501d(9): mov $0x0,0x18(%rsp)
5026(9): mov $0x0,0x48(%rsp)
502f(5): jmp 0xfffff344(%rip)
5034(5): cmp $0xa,0x8(%rsp)
5039(2): jz 0x58(%rip)
503b(7): lea 0x25d5(%rip),%rsi
5042(2): xor %edi,%edi
5044(5): mov $0x5,%edx
5049(5): call 0xffffc507(%rip)
504e(3): mov %rax,%rcx
5051(5): mov %rax,0x68(%rsp)
5056(7): lea 0x25ba(%rip),%rax
505d(3): cmp %rax,%rcx
5060(6): jz 0x39e(%rip)
5066(7): lea 0x25a8(%rip),%rsi
506d(2): xor %edi,%edi
506f(5): mov $0x5,%edx
5074(5): call 0xffffc4dc(%rip)
5079(3): mov %rax,%rcx
507c(5): mov %rax,0x60(%rsp)
5081(7): lea 0x258d(%rip),%rax
5088(3): cmp %rax,%rcx
508b(6): jz 0x389(%rip)
5091(3): xor %r15d,%r15d
5094(2): test %ebx,%ebx
5096(6): jz 0x1c7(%rip)
509c(2): test %ebx,%ebx
509e(5): mov 0x60(%rsp),%rbx
50a3(5): setnz 0xf(%rsp)
50a8(3): xor %r12d,%r12d
50ab(3): mov %rbx,%rdi
50ae(5): call 0xffffc4c2(%rip)
50b3(5): mov %rbx,0x48(%rsp)
50b8(5): mov %rax,0x18(%rsp)
50bd(5): mov $0x1,0xe(%rsp)
50c2(5): mov $0x0,0x7c(%rsp)
50c7(9): mov $0x0,0x50(%rsp)
50d0(5): mov $0x1,0xd(%rsp)
50d5(5): jmp 0xfffff29e(%rip)
50da(5): mov $0x1,0xe(%rsp)
50df(5): mov $0x0,0x7c(%rsp)
50e4(3): xor %r12d,%r12d
50e7(9): mov $0x0,0x50(%rsp)
50f0(5): mov $0x0,0xf(%rsp)
50f5(3): xor %r15d,%r15d
50f8(5): mov $0x0,0xd(%rsp)
50fd(9): mov $0x0,0x18(%rsp)
5106(9): mov $0x0,0x48(%rsp)
510f(5): jmp 0xfffff264(%rip)
5114(5): mov $0x1,0xe(%rsp)
5119(5): mov $0x0,0x7c(%rsp)
511e(3): xor %r12d,%r12d
5121(9): mov $0x0,0x50(%rsp)
512a(5): mov $0x1,0xf(%rsp)
512f(5): mov $0x1,0xd(%rsp)
5134(5): jmp 0xfffff21f(%rip)
5139(3): cmp %r15,%r13
513c(2): jbe 0x7(%rip)
513e(5): mov $0x30,0x0(%r14,%r15,1)
5143(4): lea 0x2(%rcx),%rax
5147(3): cmp %rax,%r13
514a(2): jbe 0x8(%rip)
514c(6): mov $0x30,0x2(%r14,%rcx,1)
5152(3): mov %r12d,%eax
5155(4): lea 0x3(%rcx),%r15
5159(3): xor %r12d,%r12d
515c(5): mov $0x30,%ebx
5161(5): jmp 0xfffff367(%rip)
5166(a): nop 0x0(%rax,%rax,1)
5170(5): movzx 0xf(%rsp),%ebx
5175(3): mov %r11,%rbp
5178(4): mov %bl,0xd(%rsp)
517c(5): jmp 0xfffffcad(%rip)
5181(5): movzx 0xd(%rsp),%edx
5186(3): xor %r12d,%r12d
5189(5): jmp 0xfffffb07(%rip)
518e(3): xor %r10d,%r10d
5191(5): jmp 0xfffffbbc(%rip)
5196(9): mov $0x0,0x50(%rsp)
519f(5): mov $0x1,0xe(%rsp)
51a4(3): xor %r12d,%r12d
51a7(5): mov $0x0,0x7c(%rsp)
51ac(5): jmp 0xfffffddf(%rip)
51b1(5): mov 0x30(%rsp),%r11
51b6(3): mov %r14,%rsi
51b9(3): mov %r13,%rcx
51bc(3): mov %rbx,%rax
51bf(3): mov %rbx,%rdi
51c2(6): movzx 0x7d(%rsp),%r8d
51c8(5): movzx 0x7e(%rsp),%ebx
51cd(8): mov 0x88(%rsp),%r9
51d5(3): cmp %r11,%rsi
51d8(6): movzx 0x7f(%rsp),%r10d
51de(8): mov 0x80(%rsp),%r15
51e6(5): mov 0x40(%rsp),%r14
51eb(5): mov 0x70(%rsp),%r13
51f0(2): jnb 0x28(%rip)
51f2(3): cmp $0x0,(%rcx)
51f5(2): jnz 0x12(%rip)
51f7(2): jmp 0x21(%rip)
51f9(7): nop 0x0(%rax)
5200(5): cmp $0x0,0x0(%r9,%rax,1)
5205(2): jz 0x10(%rip)
5207(4): add $0x1,%rax
520b(5): lea 0x0(%rbp,%rax,1),%rdx
5210(3): cmp %rdx,%r11
5213(2): jnbe 0xffffffed(%rip)
5215(3): mov %rax,%rdi
5218(5): movzx 0xd(%rsp),%edx
521d(3): xor %r12d,%r12d
5220(5): jmp 0xfffffa66(%rip)
5225(3): mov %rbx,%rdi
5228(6): movzx 0x7d(%rsp),%r8d
522e(5): movzx 0x7e(%rsp),%ebx
5233(6): movzx 0x7f(%rsp),%r10d
5239(8): mov 0x80(%rsp),%r15
5241(3): xor %r12d,%r12d
5244(5): mov 0x40(%rsp),%r14
5249(5): mov 0x70(%rsp),%r13
524e(5): mov 0x30(%rsp),%r11
5253(5): movzx 0xd(%rsp),%edx
5258(5): jmp 0xfffffa2e(%rip)
525d(5): mov 0x68(%rsp),%rdx
5262(3): movzx (%rdx),%eax
5265(2): test %al,%al
5267(6): jz 0xfffffe35(%rip)
526d(3): nop (%rax)
5270(3): cmp %r15,%r13
5273(2): jbe 0x6(%rip)
5275(4): mov %al,0x0(%r14,%r15,1)
5279(4): add $0x1,%r15
527d(5): movzx 0x0(%rdx,%r15,1),%eax
5282(2): test %al,%al
5284(2): jnz 0xffffffec(%rip)
5286(5): jmp 0xfffffe16(%rip)
528b(2): mov %edx,%eax
528d(5): jmp 0xfffff55a(%rip)
5292(4): movzx 0x0(%rax,%rcx,1),%ebx
5296(3): cmp $0x3e,%bl
5299(6): jnbe 0xfffff877(%rip)
529f(a): mov $0x8070630310989004800,%rax
52a9(4): bt %rbx,%rax
52ad(6): jnb 0xfffff863(%rip)
52b3(5): cmp $0x0,0xf(%rsp)
52b8(6): jnz 0x1ea(%rip)
52be(3): cmp %r15,%r13
52c1(2): jbe 0x7(%rip)
52c3(5): mov $0x3f,0x0(%r14,%r15,1)
52c8(4): lea 0x1(%r15),%rax
52cc(3): cmp %rax,%r13
52cf(2): jbe 0x8(%rip)
52d1(6): mov $0x22,0x1(%r14,%r15,1)
52d7(4): lea 0x2(%r15),%rax
52db(3): cmp %rax,%r13
52de(2): jbe 0x8(%rip)
52e0(6): mov $0x22,0x2(%r14,%r15,1)
52e6(4): lea 0x3(%r15),%rax
52ea(3): cmp %rax,%r13
52ed(2): jbe 0x8(%rip)
52ef(6): mov $0x3f,0x3(%r14,%r15,1)
52f5(4): add $0x4,%r15
52f9(2): xor %edx,%edx
52fb(3): xor %r12d,%r12d
52fe(2): xor %eax,%eax
5300(3): mov %rcx,%rbp
5303(5): jmp 0xfffff1c5(%rip)
5308(2): test %ebx,%ebx
530a(6): jz 0x18e(%rip)
5310(7): lea 0x22fe(%rip),%rax
5317(5): mov $0x1,0xe(%rsp)
531c(5): mov $0x0,0x7c(%rsp)
5321(3): xor %r12d,%r12d
5324(9): mov $0x0,0x50(%rsp)
532d(5): mov $0x1,0xf(%rsp)
5332(5): mov $0x0,0xd(%rsp)
5337(9): mov $0x1,0x18(%rsp)
5340(3): xor %r15d,%r15d
5343(5): mov %rax,0x48(%rsp)
5348(5): jmp 0xfffff02b(%rip)
534d(3): nop (%rax)
5350(3): mov %r11,%rbp
5353(5): movzx 0xf(%rsp),%eax
5358(5): jmp 0xfffffad1(%rip)
535d(7): lea 0x22af(%rip),%rax
5364(5): mov $0x1,0xe(%rsp)
5369(5): mov $0x0,0x7c(%rsp)
536e(3): xor %r12d,%r12d
5371(9): mov $0x0,0x50(%rsp)
537a(5): mov $0x1,0xf(%rsp)
537f(5): mov $0x1,0xd(%rsp)
5384(9): mov $0x1,0x18(%rsp)
538d(3): xor %r15d,%r15d
5390(5): mov %rax,0x48(%rsp)
5395(5): jmp 0xffffefde(%rip)
539a(2): mov %edx,%eax
539c(5): mov 0x48(%rsp),%rbx
53a1(3): test %rbx,%rbx
53a4(2): jz 0x2e(%rip)
53a6(2): test %al,%al
53a8(2): jz 0x2a(%rip)
53aa(3): movzx (%rbx),%ecx
53ad(3): mov %rbx,%rax
53b0(2): test %cl,%cl
53b2(2): jz 0x20(%rip)
53b4(3): mov %r15,%rdx
53b7(3): sub %r15,%rax
53ba(3): cmp %rdx,%r13
53bd(2): jbe 0x6(%rip)
53bf(4): mov %cl,0x0(%r14,%rdx,1)
53c3(4): add $0x1,%rdx
53c7(4): movzx 0x0(%rax,%rdx,1),%ecx
53cb(2): test %cl,%cl
53cd(2): jnz 0xffffffed(%rip)
53cf(3): mov %rdx,%r15
53d2(3): cmp %r15,%r13
53d5(6): jbe 0xfffffaa4(%rip)
53db(5): mov $0x0,0x0(%r14,%r15,1)
53e0(5): jmp 0xfffffa99(%rip)
53e5(5): cmp $0x2,0x8(%rsp)
53ea(5): movzx 0xf(%rsp),%ebx
53ef(3): mov %r11,%rbp
53f2(3): setz %al
53f5(4): mov %bl,0xd(%rsp)
53f9(5): jmp 0xfffffa30(%rip)
53fe(4): mov 0x8(%rsp),%esi
5402(3): mov %rcx,%rdi
5405(5): call 0xffffedab(%rip)
540a(5): mov %rax,0x68(%rsp)
540f(5): jmp 0xfffffc57(%rip)
5414(4): mov 0x8(%rsp),%esi
5418(3): mov %rcx,%rdi
541b(5): call 0xffffed95(%rip)
5420(5): mov %rax,0x60(%rsp)
5425(5): jmp 0xfffffc6c(%rip)
542a(5): movzx 0xf(%rsp),%ebx
542f(3): mov %r11,%rbp
5432(2): mov %edx,%eax
5434(4): mov %bl,0xd(%rsp)
5438(5): jmp 0xfffff9f1(%rip)
543d(4): sub $0x8,%rsp
5441(6): mov $0x5,%r8d
5447(3): mov %r11,%rcx
544a(4): push 0x68(%rsp)
544e(4): push 0x78(%rsp)
5452(3): mov %r14,%rdi
5455(4): push 0x38(%rsp)
5459(8): mov 0x98(%rsp),%r9d
5461(5): mov 0x30(%rsp),%rdx
5466(5): mov 0x70(%rsp),%rsi
546b(5): call 0xffffee35(%rip)
5470(4): add $0x20,%rsp
5474(3): mov %rax,%r15
5477(5): jmp 0xfffffa02(%rip)
547c(5): movzx 0x7c(%rsp),%eax
5481(5): jmp 0xffffff1b(%rip)
5486(8): mov $0x2,0x8(%rsp)
548e(5): jmp 0xfffff99b(%rip)
5493(5): call 0xffffc0fd(%rip)
5498(5): mov $0x0,0xd(%rsp)
549d(5): jmp 0xfffffa74(%rip)
54a2(3): mov %r11,%rbp
54a5(5): jmp 0xfffff99b(%rip)
54aa(5): mov $0x1,0xe(%rsp)
54af(2): xor %eax,%eax
54b1(3): xor %r12d,%r12d
54b4(9): mov $0x0,0x50(%rsp)
54bd(5): jmp 0xfffff5a7(%rip)
54c2(3): mov %r13,%rdx
54c5(5): mov 0x50(%rsp),%r13
54ca(5): jmp 0xfffff5f8(%rip)
54cf(5): call 0xffffbff1(%rip)

"quotearg_n_options" :
54e0(2): push %r15
54e2(2): push %r14
54e4(3): movsxd %edi,%r15
54e7(2): push %r13
54e9(2): push %r12
54eb(3): mov %rdx,%r14
54ee(1): push %rbp
54ef(1): push %rbx
54f0(3): mov %rcx,%rbp
54f3(4): sub $0x28,%rsp
54f7(5): mov %rsi,0x8(%rsp)
54fc(5): call 0xffffbfd4(%rip)
5501(3): mov %rax,%r13
5504(2): mov (%rax),%eax
5506(3): test %r15d,%r15d
5509(7): mov 0x204b70(%rip),%rbx
5510(4): mov %eax,0x18(%rsp)
5514(6): js 0x16d(%rip)
551a(7): cmp %r15d,0x204b57(%rip)
5521(2): jnle 0x64(%rip)
5523(7): cmp $0x7fffffff,%r15d
552a(6): jz 0x15c(%rip)
5530(4): lea 0x1(%r15),%r12d
5534(7): lea 0x204b55(%rip),%rax
553b(3): movsxd %r12d,%rsi
553e(4): shl/sal $0x4,%rsi
5542(3): cmp %rax,%rbx
5545(6): jz 0x11b(%rip)
554b(3): mov %rbx,%rdi
554e(5): call 0x1162(%rip)
5553(3): mov %rax,%rbx
5556(7): mov %rax,0x204b23(%rip)
555d(7): movsxd 0x204b14(%rip),%rdi
5564(3): mov %r12d,%edx
5567(2): xor %esi,%esi
5569(2): sub %edi,%edx
556b(4): shl/sal $0x4,%rdi
556f(3): movsxd %edx,%rdx
5572(3): add %rbx,%rdi
5575(4): shl/sal $0x4,%rdx
5579(5): call 0xffffc087(%rip)
557e(7): mov %r12d,0x204af3(%rip)
5585(3): mov 0x4(%rbp),%eax
5588(4): shl/sal $0x4,%r15
558c(4): sub $0x8,%rsp
5590(3): add %r15,%rbx
5593(4): lea 0x8(%rbp),%r15
5597(4): mov 0x0(%rbp),%r8d
559b(3): mov (%rbx),%r11
559e(4): mov 0x8(%rbx),%r12
55a2(3): mov %r14,%rcx
55a5(3): or $0x1,%eax
55a8(4): mov %eax,0x24(%rsp)
55ac(3): push 0x30(%rbp)
55af(3): mov %eax,%r9d
55b2(3): push 0x28(%rbp)
55b5(2): push %r15
55b7(3): mov %r11,%rsi
55ba(5): mov 0x28(%rsp),%rdx
55bf(3): mov %r12,%rdi
55c2(5): mov %r11,0x30(%rsp)
55c7(5): call 0xffffecd9(%rip)
55cc(4): add $0x20,%rsp
55d0(5): mov 0x10(%rsp),%r11
55d5(3): cmp %rax,%r11
55d8(2): jnbe 0x69(%rip)
55da(4): lea 0x1(%rax),%rsi
55de(7): lea 0x204b3b(%rip),%rax
55e5(3): cmp %rax,%r12
55e8(3): mov %rsi,(%rbx)
55eb(2): jz 0x14(%rip)
55ed(3): mov %r12,%rdi
55f0(5): mov %rsi,0x10(%rsp)
55f5(5): call 0xffffbebb(%rip)
55fa(5): mov 0x10(%rsp),%rsi
55ff(3): mov %rsi,%rdi
5602(5): mov %rsi,0x10(%rsp)
5607(5): call 0x1049(%rip)
560c(4): sub $0x8,%rsp
5610(4): mov %rax,0x8(%rbx)
5614(4): mov 0x0(%rbp),%r8d
5618(3): push 0x30(%rbp)
561b(3): push 0x28(%rbp)
561e(3): mov %r14,%rcx
5621(2): push %r15
5623(5): mov 0x3c(%rsp),%r9d
5628(3): mov %rax,%rdi
562b(5): mov 0x28(%rsp),%rdx
5630(5): mov 0x30(%rsp),%rsi
5635(3): mov %rax,%r12
5638(5): call 0xffffec68(%rip)
563d(4): add $0x20,%rsp
5641(4): mov 0x18(%rsp),%eax
5645(4): mov %eax,0x0(%r13)
5649(4): add $0x28,%rsp
564d(3): mov %r12,%rax
5650(1): pop %rbx
5651(1): pop %rbp
5652(2): pop %r12
5654(2): pop %r13
5656(2): pop %r14
5658(2): pop %r15
565a(1): ret near (%rsp)
565b(5): nop 0x0(%rax,%rax,1)
5660(2): xor %edi,%edi
5662(5): call 0x104e(%rip)
5667(8): movdqa 0x204a21(%rip),%xmm0
566f(3): mov %rax,%rbx
5672(7): mov %rax,0x204a07(%rip)
5679(3): movups %xmm0,(%rax)
567c(5): jmp 0xfffffee1(%rip)
5681(5): call 0xffffbe3f(%rip)
5686(5): call 0x121a(%rip)

"clone_quoting_options" :
5690(2): push %r12
5692(1): push %rbp
5693(1): push %rbx
5694(3): mov %rdi,%rbx
5697(5): call 0xffffbe39(%rip)
569c(3): mov (%rax),%r12d
569f(3): mov %rax,%rbp
56a2(7): lea 0x204b77(%rip),%rax
56a9(3): test %rbx,%rbx
56ac(5): mov $0x38,%esi
56b1(4): cmove %rax,%rbx
56b5(3): mov %rbx,%rdi
56b8(5): call 0x1198(%rip)
56bd(4): mov %r12d,0x0(%rbp)
56c1(1): pop %rbx
56c2(1): pop %rbp
56c3(2): pop %r12
56c5(1): ret near (%rsp)

"get_quoting_style" :
56d0(7): lea 0x204b49(%rip),%rax
56d7(3): test %rdi,%rdi
56da(4): cmove %rax,%rdi
56de(2): mov (%rdi),%eax
56e0(1): ret near (%rsp)

"set_quoting_style" :
56f0(7): lea 0x204b29(%rip),%rax
56f7(3): test %rdi,%rdi
56fa(4): cmove %rax,%rdi
56fe(2): mov %esi,(%rdi)
5700(1): ret near (%rsp)

"set_char_quoting" :
5710(7): lea 0x204b09(%rip),%rax
5717(3): test %rdi,%rdi
571a(2): mov %esi,%ecx
571c(4): cmove %rax,%rdi
5720(2): mov %esi,%eax
5722(3): and $0x1f,%ecx
5725(3): shr $0x5,%al
5728(3): movzx %al,%eax
572b(5): lea 0x8(%rdi,%rax,4),%rdi
5730(2): mov (%rdi),%esi
5732(2): mov %esi,%eax
5734(2): shr %cl,%eax
5736(2): xor %eax,%edx
5738(3): and $0x1,%eax
573b(3): and $0x1,%edx
573e(2): shl/sal %cl,%edx
5740(2): xor %esi,%edx
5742(2): mov %edx,(%rdi)
5744(1): ret near (%rsp)

"set_quoting_flags" :
5750(7): lea 0x204ac9(%rip),%rax
5757(3): test %rdi,%rdi
575a(4): cmove %rax,%rdi
575e(3): mov 0x4(%rdi),%eax
5761(3): mov %esi,0x4(%rdi)
5764(1): ret near (%rsp)

"set_custom_quoting" :
5770(7): lea 0x204aa9(%rip),%rax
5777(3): test %rdi,%rdi
577a(4): cmove %rax,%rdi
577e(3): test %rsi,%rsi
5781(6): mov $0xa,(%rdi)
5787(2): jz 0x10(%rip)
5789(3): test %rdx,%rdx
578c(2): jz 0xb(%rip)
578e(4): mov %rsi,0x28(%rdi)
5792(4): mov %rdx,0x30(%rdi)
5796(1): ret near (%rsp)
5797(4): sub $0x8,%rsp
579b(5): call 0xffffbd25(%rip)

"quotearg_buffer" :
57a0(2): push %r15
57a2(2): push %r14
57a4(7): lea 0x204a75(%rip),%rax
57ab(2): push %r13
57ad(2): push %r12
57af(3): mov %rdi,%r13
57b2(1): push %rbp
57b3(1): push %rbx
57b4(3): mov %r8,%rbx
57b7(3): mov %rsi,%r14
57ba(3): mov %rdx,%r15
57bd(4): sub $0x18,%rsp
57c1(3): test %r8,%r8
57c4(4): cmove %rax,%rbx
57c8(5): mov %rcx,0x8(%rsp)
57cd(5): call 0xffffbd03(%rip)
57d2(3): mov (%rax),%r12d
57d5(3): mov %rax,%rbp
57d8(4): lea 0x8(%rbx),%rax
57dc(4): sub $0x8,%rsp
57e0(4): mov 0x4(%rbx),%r9d
57e4(3): push 0x30(%rbx)
57e7(3): mov (%rbx),%r8d
57ea(3): push 0x28(%rbx)
57ed(3): mov %r15,%rdx
57f0(1): push %rax
57f1(5): mov 0x28(%rsp),%rcx
57f6(3): mov %r14,%rsi
57f9(3): mov %r13,%rdi
57fc(5): call 0xffffeaa4(%rip)
5801(4): mov %r12d,0x0(%rbp)
5805(4): add $0x38,%rsp
5809(1): pop %rbx
580a(1): pop %rbp
580b(2): pop %r12
580d(2): pop %r13
580f(2): pop %r14
5811(2): pop %r15
5813(1): ret near (%rsp)

"quotearg_alloc_mem" :
5820(2): push %r15
5822(2): push %r14
5824(7): lea 0x2049f5(%rip),%rax
582b(2): push %r13
582d(2): push %r12
582f(3): mov %rdx,%r12
5832(1): push %rbp
5833(1): push %rbx
5834(3): mov %rcx,%rbx
5837(3): mov %rdi,%r14
583a(3): mov %rsi,%r15
583d(4): sub $0x38,%rsp
5841(3): test %rcx,%rcx
5844(4): cmove %rax,%rbx
5848(2): xor %ebp,%ebp
584a(5): call 0xffffbc86(%rip)
584f(3): test %r12,%r12
5852(3): mov %rax,%r13
5855(2): mov (%rax),%eax
5857(4): setz %bpl
585b(3): or 0x4(%rbx),%ebp
585e(4): lea 0x8(%rbx),%r10
5862(4): sub $0x8,%rsp
5866(3): mov (%rbx),%r8d
5869(3): mov %r15,%rcx
586c(4): mov %eax,0x14(%rsp)
5870(3): push 0x30(%rbx)
5873(3): mov %r14,%rdx
5876(3): push 0x28(%rbx)
5879(2): push %r10
587b(2): xor %esi,%esi
587d(3): mov %ebp,%r9d
5880(2): xor %edi,%edi
5882(5): mov %r10,0x40(%rsp)
5887(5): call 0xffffea19(%rip)
588c(4): lea 0x1(%rax),%rsi
5890(5): mov %rax,0x48(%rsp)
5895(4): add $0x20,%rsp
5899(3): mov %rsi,%rdi
589c(5): mov %rsi,0x18(%rsp)
58a1(5): call 0xdaf(%rip)
58a6(5): mov %rax,0x10(%rsp)
58ab(4): sub $0x8,%rsp
58af(3): push 0x30(%rbx)
58b2(3): push 0x28(%rbx)
58b5(5): mov 0x38(%rsp),%r10
58ba(3): mov %ebp,%r9d
58bd(3): mov (%rbx),%r8d
58c0(3): mov %r15,%rcx
58c3(3): mov %r14,%rdx
58c6(3): mov %rax,%rdi
58c9(2): push %r10
58cb(5): mov 0x38(%rsp),%rsi
58d0(5): call 0xffffe9d0(%rip)
58d5(4): mov 0x2c(%rsp),%eax
58d9(4): add $0x20,%rsp
58dd(3): test %r12,%r12
58e0(4): mov %eax,0x0(%r13)
58e4(2): jz 0xb(%rip)
58e6(5): mov 0x28(%rsp),%r11
58eb(4): mov %r11,(%r12)
58ef(5): mov 0x10(%rsp),%rax
58f4(4): add $0x38,%rsp
58f8(1): pop %rbx
58f9(1): pop %rbp
58fa(2): pop %r12
58fc(2): pop %r13
58fe(2): pop %r14
5900(2): pop %r15
5902(1): ret near (%rsp)

"quotearg_alloc" :
5910(3): mov %rdx,%rcx
5913(2): xor %edx,%edx
5915(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5920(6): mov 0x204752(%rip),%eax
5926(2): push %r12
5928(7): mov 0x204751(%rip),%r12
592f(1): push %rbp
5930(1): push %rbx
5931(3): cmp $0x1,%eax
5934(2): jle 0x2d(%rip)
5936(3): sub $0x2,%eax
5939(5): lea 0x18(%r12),%rbx
593e(4): shl/sal $0x4,%rax
5942(5): lea 0x28(%r12,%rax,1),%rbp
5947(9): nop 0x0(%rax,%rax,1)
5950(3): mov (%rbx),%rdi
5953(4): add $0x10,%rbx
5957(5): call 0xffffbb59(%rip)
595c(3): cmp %rbp,%rbx
595f(2): jnz 0xfffffff1(%rip)
5961(5): mov 0x8(%r12),%rdi
5966(7): lea 0x2047b3(%rip),%rbx
596d(3): cmp %rbx,%rdi
5970(2): jz 0x19(%rip)
5972(5): call 0xffffbb3e(%rip)
5977(b): mov $0x100,0x20470e(%rip)
5982(7): mov %rbx,0x20470f(%rip)
5989(7): lea 0x204700(%rip),%rbx
5990(3): cmp %rbx,%r12
5993(2): jz 0x11(%rip)
5995(3): mov %r12,%rdi
5998(5): call 0xffffbb18(%rip)
599d(7): mov %rbx,0x2046dc(%rip)
59a4(1): pop %rbx
59a5(a): mov $0x1,0x2046c9(%rip)
59af(1): pop %rbp
59b0(2): pop %r12
59b2(1): ret near (%rsp)

"quotearg_n" :
59c0(7): lea 0x204859(%rip),%rcx
59c7(7): mov $0xffffffff,%rdx
59ce(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
59e0(7): lea 0x204839(%rip),%rcx
59e7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
59f0(7): lea 0x204829(%rip),%rcx
59f7(3): mov %rdi,%rsi
59fa(7): mov $0xffffffff,%rdx
5a01(2): xor %edi,%edi
5a03(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5a10(7): lea 0x204809(%rip),%rcx
5a17(3): mov %rsi,%rdx
5a1a(3): mov %rdi,%rsi
5a1d(2): xor %edi,%edi
5a1f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5a30(4): sub $0x48,%rsp
5a34(3): mov %rdx,%rax
5a37(9): mov $0x28,%rdx
5a40(5): mov %rdx,0x38(%rsp)
5a45(2): xor %edx,%edx
5a47(3): cmp $0xa,%esi
5a4a(2): jz 0x6a(%rip)
5a4c(3): mov %esi,(%rsp)
5a4f(3): mov %rsp,%rcx
5a52(7): mov $0xffffffff,%rdx
5a59(3): mov %rax,%rsi
5a5c(9): mov $0x0,0x4(%rsp)
5a65(9): mov $0x0,0xc(%rsp)
5a6e(9): mov $0x0,0x14(%rsp)
5a77(9): mov $0x0,0x1c(%rsp)
5a80(9): mov $0x0,0x24(%rsp)
5a89(9): mov $0x0,0x2c(%rsp)
5a92(8): mov $0x0,0x34(%rsp)
5a9a(5): call 0xfffffa46(%rip)
5a9f(5): mov 0x38(%rsp),%rcx
5aa4(9): xor $0x28,%rcx
5aad(2): jnz 0xc(%rip)
5aaf(4): add $0x48,%rsp
5ab3(1): ret near (%rsp)
5ab4(5): call 0xffffba0c(%rip)
5ab9(5): call 0xffffbad7(%rip)

"quotearg_n_style_mem" :
5ac0(4): sub $0x48,%rsp
5ac4(3): mov %rdx,%rax
5ac7(3): mov %rcx,%rdx
5aca(9): mov $0x28,%rcx
5ad3(5): mov %rcx,0x38(%rsp)
5ad8(2): xor %ecx,%ecx
5ada(3): cmp $0xa,%esi
5add(2): jz 0x63(%rip)
5adf(3): mov %esi,(%rsp)
5ae2(3): mov %rsp,%rcx
5ae5(3): mov %rax,%rsi
5ae8(9): mov $0x0,0x4(%rsp)
5af1(9): mov $0x0,0xc(%rsp)
5afa(9): mov $0x0,0x14(%rsp)
5b03(9): mov $0x0,0x1c(%rsp)
5b0c(9): mov $0x0,0x24(%rsp)
5b15(9): mov $0x0,0x2c(%rsp)
5b1e(8): mov $0x0,0x34(%rsp)
5b26(5): call 0xfffff9ba(%rip)
5b2b(5): mov 0x38(%rsp),%rdx
5b30(9): xor $0x28,%rdx
5b39(2): jnz 0xc(%rip)
5b3b(4): add $0x48,%rsp
5b3f(1): ret near (%rsp)
5b40(5): call 0xffffb980(%rip)
5b45(5): call 0xffffba4b(%rip)

"quotearg_style" :
5b50(3): mov %rsi,%rdx
5b53(2): mov %edi,%esi
5b55(2): xor %edi,%edi
5b57(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5b60(3): mov %rdx,%rcx
5b63(3): mov %rsi,%rdx
5b66(2): mov %edi,%esi
5b68(2): xor %edi,%edi
5b6a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5b70(4): sub $0x48,%rsp
5b74(2): mov %edx,%ecx
5b76(9): mov $0x28,%rax
5b7f(5): mov %rax,0x38(%rsp)
5b84(2): xor %eax,%eax
5b86(7): mov 0x2046c3(%rip),%rax
5b8d(3): mov %rsp,%r8
5b90(3): and $0x1f,%ecx
5b93(8): movdqa 0x204685(%rip),%xmm0
5b9b(5): mov %rax,0x30(%rsp)
5ba0(2): mov %edx,%eax
5ba2(4): movaps %xmm0,(%rsp)
5ba6(3): shr $0x5,%al
5ba9(3): movzx %al,%eax
5bac(5): lea 0x8(%r8,%rax,4),%r9
5bb1(8): movdqa 0x204677(%rip),%xmm0
5bb9(5): movaps %xmm0,0x10(%rsp)
5bbe(8): movdqa 0x20467a(%rip),%xmm0
5bc6(5): movaps %xmm0,0x20(%rsp)
5bcb(3): mov (%r9),%edx
5bce(2): mov %edx,%eax
5bd0(2): shr %cl,%eax
5bd2(2): not %eax
5bd4(3): and $0x1,%eax
5bd7(2): shl/sal %cl,%eax
5bd9(3): mov %r8,%rcx
5bdc(2): xor %edx,%eax
5bde(3): mov %rsi,%rdx
5be1(3): mov %rdi,%rsi
5be4(3): mov %eax,(%r9)
5be7(2): xor %edi,%edi
5be9(5): call 0xfffff8f7(%rip)
5bee(5): mov 0x38(%rsp),%rsi
5bf3(9): xor $0x28,%rsi
5bfc(2): jnz 0x7(%rip)
5bfe(4): add $0x48,%rsp
5c02(1): ret near (%rsp)
5c03(5): call 0xffffb98d(%rip)

"quotearg_char" :
5c10(4): movsx %sil,%edx
5c14(7): mov $0xffffffff,%rsi
5c1b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5c20(5): mov $0x3a,%edx
5c25(7): mov $0xffffffff,%rsi
5c2c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5c40(5): mov $0x3a,%edx
5c45(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5c50(4): sub $0x48,%rsp
5c54(3): mov %rdx,%rax
5c57(9): mov $0x28,%rdx
5c60(5): mov %rdx,0x38(%rsp)
5c65(2): xor %edx,%edx
5c67(3): cmp $0xa,%esi
5c6a(2): jz 0x6a(%rip)
5c6c(3): mov %esi,(%rsp)
5c6f(3): mov %rsp,%rcx
5c72(7): mov $0xffffffff,%rdx
5c79(3): mov %rax,%rsi
5c7c(9): mov $0x0,0x4(%rsp)
5c85(9): mov $0x4000000,0xc(%rsp)
5c8e(9): mov $0x0,0x14(%rsp)
5c97(9): mov $0x0,0x1c(%rsp)
5ca0(9): mov $0x0,0x24(%rsp)
5ca9(9): mov $0x0,0x2c(%rsp)
5cb2(8): mov $0x0,0x34(%rsp)
5cba(5): call 0xfffff826(%rip)
5cbf(5): mov 0x38(%rsp),%rcx
5cc4(9): xor $0x28,%rcx
5ccd(2): jnz 0xc(%rip)
5ccf(4): add $0x48,%rsp
5cd3(1): ret near (%rsp)
5cd4(5): call 0xffffb7ec(%rip)
5cd9(5): call 0xffffb8b7(%rip)

"quotearg_n_custom_mem" :
5ce0(4): sub $0x48,%rsp
5ce4(3): mov %rcx,%r9
5ce7(7): mov 0x204562(%rip),%rcx
5cee(8): movdqa 0x20452a(%rip),%xmm0
5cf6(9): mov $0x28,%rax
5cff(5): mov %rax,0x38(%rsp)
5d04(2): xor %eax,%eax
5d06(4): movaps %xmm0,(%rsp)
5d0a(3): test %rsi,%rsi
5d0d(5): mov %rcx,0x30(%rsp)
5d12(7): mov $0xa,(%rsp)
5d19(8): movdqa 0x20450f(%rip),%xmm0
5d21(5): movaps %xmm0,0x10(%rsp)
5d26(8): movdqa 0x204512(%rip),%xmm0
5d2e(5): movaps %xmm0,0x20(%rsp)
5d33(2): jz 0x34(%rip)
5d35(3): test %rdx,%rdx
5d38(2): jz 0x2f(%rip)
5d3a(5): mov %rsi,0x28(%rsp)
5d3f(5): mov %rdx,0x30(%rsp)
5d44(3): mov %rsp,%rcx
5d47(3): mov %r8,%rdx
5d4a(3): mov %r9,%rsi
5d4d(5): call 0xfffff793(%rip)
5d52(5): mov 0x38(%rsp),%rdi
5d57(9): xor $0x28,%rdi
5d60(2): jnz 0xc(%rip)
5d62(4): add $0x48,%rsp
5d66(1): ret near (%rsp)
5d67(5): call 0xffffb759(%rip)
5d6c(5): call 0xffffb824(%rip)

"quotearg_n_custom" :
5d80(7): mov $0xffffffff,%r8
5d87(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5d90(3): mov %rdx,%rcx
5d93(7): mov $0xffffffff,%r8
5d9a(3): mov %rsi,%rdx
5d9d(3): mov %rdi,%rsi
5da0(2): xor %edi,%edi
5da2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5db0(3): mov %rcx,%r8
5db3(3): mov %rdx,%rcx
5db6(3): mov %rsi,%rdx
5db9(3): mov %rdi,%rsi
5dbc(2): xor %edi,%edi
5dbe(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5dd0(7): lea 0x204269(%rip),%rcx
5dd7(5): jmp 0xfffff709(%rip)

"quote_mem" :
5de0(7): lea 0x204259(%rip),%rcx
5de7(3): mov %rsi,%rdx
5dea(3): mov %rdi,%rsi
5ded(2): xor %edi,%edi
5def(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5e00(7): lea 0x204239(%rip),%rcx
5e07(7): mov $0xffffffff,%rdx
5e0e(5): jmp 0xfffff6d2(%rip)

"quote" :
5e20(7): lea 0x204219(%rip),%rcx
5e27(3): mov %rdi,%rsi
5e2a(7): mov $0xffffffff,%rdx
5e31(2): xor %edi,%edi
5e33(5): jmp 0xfffff6ad(%rip)

"same_nameat.part.0" :
5e40(2): push %r13
5e42(2): push %r12
5e44(3): mov %edi,%r13d
5e47(1): push %rbp
5e48(1): push %rbx
5e49(3): mov %rsi,%rdi
5e4c(2): mov %edx,%ebp
5e4e(3): mov %rcx,%r12
5e51(7): sub $0x138,%rsp
5e58(9): mov $0x28,%rax
5e61(8): mov %rax,0x128(%rsp)
5e69(2): xor %eax,%eax
5e6b(5): call 0xca5(%rip)
5e70(3): mov %rsp,%rcx
5e73(6): mov $0x100,%r8d
5e79(3): mov %rax,%rdx
5e7c(3): mov %r13d,%esi
5e7f(5): mov $0x1,%edi
5e84(3): mov %rax,%rbx
5e87(5): call 0xffffb739(%rip)
5e8c(2): test %eax,%eax
5e8e(6): jnz 0xb2(%rip)
5e94(3): mov %rbx,%rdi
5e97(5): call 0xffffb619(%rip)
5e9c(3): mov %r12,%rdi
5e9f(5): call 0xc71(%rip)
5ea4(8): lea 0x90(%rsp),%rcx
5eac(6): mov $0x100,%r8d
5eb2(3): mov %rax,%rdx
5eb5(2): mov %ebp,%esi
5eb7(5): mov $0x1,%edi
5ebc(3): mov %rax,%rbx
5ebf(5): call 0xffffb701(%rip)
5ec4(2): test %eax,%eax
5ec6(2): jnz 0x52(%rip)
5ec8(2): xor %ebp,%ebp
5eca(8): mov 0x98(%rsp),%rax
5ed2(5): cmp %rax,0x8(%rsp)
5ed7(2): jnz 0x12(%rip)
5ed9(8): mov 0x90(%rsp),%rax
5ee1(4): cmp %rax,(%rsp)
5ee5(4): setz %bpl
5ee9(3): mov %rbx,%rdi
5eec(5): call 0xffffb5c4(%rip)
5ef1(8): mov 0x128(%rsp),%rdx
5ef9(9): xor $0x28,%rdx
5f02(2): mov %ebp,%eax
5f04(2): jnz 0x5e(%rip)
5f06(7): add $0x138,%rsp
5f0d(1): pop %rbx
5f0e(1): pop %rbp
5f0f(2): pop %r12
5f11(2): pop %r13
5f13(1): ret near (%rsp)
5f14(4): nop 0x0(%rax)
5f18(5): call 0xffffb5b8(%rip)
5f1d(2): mov (%rax),%esi
5f1f(7): lea 0x15e7(%rip),%rdx
5f26(3): mov %rbx,%rcx
5f29(5): mov $0x1,%edi
5f2e(2): xor %eax,%eax
5f30(5): call 0xffffb7f0(%rip)
5f35(2): jmp 0xffffff93(%rip)
5f37(9): nop 0x0(%rax,%rax,1)
5f40(5): call 0xffffb590(%rip)
5f45(2): mov (%rax),%esi
5f47(7): lea 0x15bf(%rip),%rdx
5f4e(3): mov %rbx,%rcx
5f51(5): mov $0x1,%edi
5f56(2): xor %eax,%eax
5f58(5): call 0xffffb7c8(%rip)
5f5d(5): jmp 0xffffff37(%rip)
5f62(5): call 0xffffb62e(%rip)

"same_nameat" :
5f70(2): push %r15
5f72(2): push %r14
5f74(3): mov %edx,%r15d
5f77(2): push %r13
5f79(2): push %r12
5f7b(1): push %rbp
5f7c(1): push %rbx
5f7d(3): mov %rcx,%rbp
5f80(3): mov %rsi,%rbx
5f83(4): sub $0x18,%rsp
5f87(4): mov %edi,0xc(%rsp)
5f8b(3): mov %rsi,%rdi
5f8e(5): call 0xc62(%rip)
5f93(3): mov %rbp,%rdi
5f96(3): mov %rax,%r12
5f99(5): call 0xc57(%rip)
5f9e(3): mov %r12,%rdi
5fa1(3): mov %rax,%r13
5fa4(5): call 0xcac(%rip)
5fa9(3): mov %r13,%rdi
5fac(3): mov %rax,%r14
5faf(5): call 0xca1(%rip)
5fb4(3): cmp %rax,%r14
5fb7(2): jz 0x19(%rip)
5fb9(4): add $0x18,%rsp
5fbd(2): xor %eax,%eax
5fbf(1): pop %rbx
5fc0(1): pop %rbp
5fc1(2): pop %r12
5fc3(2): pop %r13
5fc5(2): pop %r14
5fc7(2): pop %r15
5fc9(1): ret near (%rsp)
5fca(6): nop 0x0(%rax,%rax,1)
5fd0(3): mov %r14,%rdx
5fd3(3): mov %r13,%rsi
5fd6(3): mov %r12,%rdi
5fd9(5): call 0xffffb657(%rip)
5fde(2): test %eax,%eax
5fe0(2): jnz 0xffffffd9(%rip)
5fe2(4): mov 0xc(%rsp),%edi
5fe6(4): add $0x18,%rsp
5fea(3): mov %rbp,%rcx
5fed(3): mov %r15d,%edx
5ff0(3): mov %rbx,%rsi
5ff3(1): pop %rbx
5ff4(1): pop %rbp
5ff5(2): pop %r12
5ff7(2): pop %r13
5ff9(2): pop %r14
5ffb(2): pop %r15
5ffd(5): jmp 0xfffffe43(%rip)

"same_name" :
6010(5): mov $0xffffff9c,%edx
6015(3): mov %rsi,%rcx
6018(3): mov %rdi,%rsi
601b(2): mov %edx,%edi
601d(5): jmp 0xffffff53(%rip)

"version_etc_arn" :
6030(2): push %r15
6032(2): push %r14
6034(2): push %r13
6036(2): push %r12
6038(3): mov %r9,%r12
603b(1): push %rbp
603c(1): push %rbx
603d(3): mov %rdi,%rbp
6040(3): mov %r8,%rbx
6043(4): sub $0x28,%rsp
6047(3): test %rsi,%rsi
604a(6): jz 0x11e(%rip)
6050(3): mov %rdx,%r8
6053(7): lea 0x1a8e(%rip),%rdx
605a(3): mov %rcx,%r9
605d(2): xor %eax,%eax
605f(3): mov %rsi,%rcx
6062(5): mov $0x1,%esi
6067(5): call 0xffffb709(%rip)
606c(7): lea 0x1a88(%rip),%rsi
6073(2): xor %edi,%edi
6075(5): mov $0x5,%edx
607a(5): call 0xffffb4d6(%rip)
607f(7): lea 0x1d9a(%rip),%rdx
6086(3): mov %rax,%rcx
6089(6): mov $0x7e3,%r8d
608f(5): mov $0x1,%esi
6094(3): mov %rbp,%rdi
6097(2): xor %eax,%eax
6099(5): call 0xffffb6d7(%rip)
609e(7): lea 0x1ae3(%rip),%rsi
60a5(2): xor %edi,%edi
60a7(5): mov $0x5,%edx
60ac(5): call 0xffffb4a4(%rip)
60b1(3): mov %rbp,%rsi
60b4(3): mov %rax,%rdi
60b7(5): call 0xffffb589(%rip)
60bc(4): cmp $0x9,%r12
60c0(6): jnbe 0x340(%rip)
60c6(7): lea 0x1d1b(%rip),%rdx
60cd(4): movsxd 0x0(%rdx,%r12,4),%rax
60d1(3): add %rdx,%rax
60d4(2): jmp %rax
60d6(a): nop 0x0(%rax,%rax,1)
60e0(4): mov 0x38(%rbx),%r9
60e4(4): mov 0x10(%rbx),%rax
60e8(7): lea 0x1c09(%rip),%rsi
60ef(4): mov 0x8(%rbx),%r8
60f3(5): mov $0x5,%edx
60f8(2): xor %edi,%edi
60fa(4): mov 0x30(%rbx),%r13
60fe(4): mov 0x28(%rbx),%r12
6102(5): mov %r9,0x10(%rsp)
6107(4): mov 0x20(%rbx),%r15
610b(4): mov 0x18(%rbx),%r14
610f(4): mov %rax,(%rsp)
6113(5): mov %r8,0x8(%rsp)
6118(3): mov (%rbx),%rbx
611b(5): call 0xffffb435(%rip)
6120(4): sub $0x8,%rsp
6124(5): mov 0x18(%rsp),%r9
6129(3): mov %rax,%rdx
612c(3): mov %rbx,%rcx
612f(5): mov $0x1,%esi
6134(3): mov %rbp,%rdi
6137(2): xor %eax,%eax
6139(2): push %r9
613b(2): push %r13
613d(2): push %r12
613f(2): push %r15
6141(2): push %r14
6143(5): mov 0x30(%rsp),%r9
6148(5): mov 0x38(%rsp),%r8
614d(5): call 0xffffb623(%rip)
6152(4): add $0x30,%rsp
6156(4): add $0x28,%rsp
615a(1): pop %rbx
615b(1): pop %rbp
615c(2): pop %r12
615e(2): pop %r13
6160(2): pop %r14
6162(2): pop %r15
6164(1): ret near (%rsp)
6165(3): nop (%rax)
6168(3): mov %rcx,%r8
616b(3): mov %rdx,%rcx
616e(7): lea 0x197f(%rip),%rdx
6175(5): mov $0x1,%esi
617a(2): xor %eax,%eax
617c(5): call 0xffffb5f4(%rip)
6181(5): jmp 0xfffffeeb(%rip)
6186(a): nop 0x0(%rax,%rax,1)
6190(4): mov 0x40(%rbx),%r10
6194(4): mov 0x38(%rbx),%r9
6198(7): lea 0x1b89(%rip),%rsi
619f(4): mov 0x10(%rbx),%rax
61a3(4): mov 0x8(%rbx),%r8
61a7(5): mov $0x5,%edx
61ac(4): mov 0x30(%rbx),%r13
61b0(4): mov 0x28(%rbx),%r12
61b4(4): mov 0x20(%rbx),%r15
61b8(4): mov 0x18(%rbx),%r14
61bc(3): mov (%rbx),%rbx
61bf(5): mov %r10,0x18(%rsp)
61c4(5): mov %r9,0x10(%rsp)
61c9(4): mov %rax,(%rsp)
61cd(5): mov %r8,0x8(%rsp)
61d2(2): xor %edi,%edi
61d4(5): call 0xffffb37c(%rip)
61d9(5): mov 0x18(%rsp),%r10
61de(2): push %r10
61e0(5): jmp 0xffffff44(%rip)
61e5(3): nop (%rax)
61e8(3): mov (%rbx),%rbx
61eb(7): lea 0x190d(%rip),%rsi
61f2(5): mov $0x5,%edx
61f7(2): xor %edi,%edi
61f9(5): call 0xffffb357(%rip)
61fe(4): add $0x28,%rsp
6202(3): mov %rbx,%rcx
6205(3): mov %rbp,%rdi
6208(1): pop %rbx
6209(1): pop %rbp
620a(2): pop %r12
620c(2): pop %r13
620e(2): pop %r14
6210(2): pop %r15
6212(3): mov %rax,%rdx
6215(5): mov $0x1,%esi
621a(2): xor %eax,%eax
621c(5): jmp 0xffffb554(%rip)
6221(7): nop 0x0(%rax)
6228(4): mov 0x8(%rbx),%r12
622c(7): lea 0x18dc(%rip),%rsi
6233(3): mov (%rbx),%rbx
6236(5): mov $0x5,%edx
623b(2): xor %edi,%edi
623d(5): call 0xffffb313(%rip)
6242(4): add $0x28,%rsp
6246(3): mov %r12,%r8
6249(3): mov %rbx,%rcx
624c(3): mov %rbp,%rdi
624f(3): mov %rax,%rdx
6252(5): mov $0x1,%esi
6257(1): pop %rbx
6258(1): pop %rbp
6259(2): pop %r12
625b(2): pop %r13
625d(2): pop %r14
625f(2): pop %r15
6261(2): xor %eax,%eax
6263(5): jmp 0xffffb50d(%rip)
6268(8): nop 0x0(%rax,%rax,1)
6270(4): mov 0x10(%rbx),%r13
6274(4): mov 0x8(%rbx),%r12
6278(7): lea 0x18a7(%rip),%rsi
627f(3): mov (%rbx),%rbx
6282(5): mov $0x5,%edx
6287(2): xor %edi,%edi
6289(5): call 0xffffb2c7(%rip)
628e(4): add $0x28,%rsp
6292(3): mov %r13,%r9
6295(3): mov %r12,%r8
6298(3): mov %rbx,%rcx
629b(3): mov %rbp,%rdi
629e(3): mov %rax,%rdx
62a1(1): pop %rbx
62a2(1): pop %rbp
62a3(2): pop %r12
62a5(2): pop %r13
62a7(2): pop %r14
62a9(2): pop %r15
62ab(5): mov $0x1,%esi
62b0(2): xor %eax,%eax
62b2(5): jmp 0xffffb4be(%rip)
62b7(9): nop 0x0(%rax,%rax,1)
62c0(7): lea 0x1991(%rip),%rsi
62c7(5): mov $0x5,%edx
62cc(2): xor %edi,%edi
62ce(4): mov 0x18(%rbx),%r14
62d2(4): mov 0x10(%rbx),%r13
62d6(4): mov 0x8(%rbx),%r12
62da(3): mov (%rbx),%rbx
62dd(5): call 0xffffb273(%rip)
62e2(4): sub $0x8,%rsp
62e6(2): push %r14
62e8(3): mov %rax,%rdx
62eb(3): mov %r13,%r9
62ee(3): mov %r12,%r8
62f1(3): mov %rbx,%rcx
62f4(3): mov %rbp,%rdi
62f7(5): mov $0x1,%esi
62fc(2): xor %eax,%eax
62fe(5): call 0xffffb472(%rip)
6303(1): pop %rax
6304(1): pop %rdx
6305(4): add $0x28,%rsp
6309(1): pop %rbx
630a(1): pop %rbp
630b(2): pop %r12
630d(2): pop %r13
630f(2): pop %r14
6311(2): pop %r15
6313(1): ret near (%rsp)
6314(4): nop 0x0(%rax)
6318(4): mov 0x20(%rbx),%r15
631c(7): lea 0x1955(%rip),%rsi
6323(5): mov $0x5,%edx
6328(2): xor %edi,%edi
632a(4): mov 0x18(%rbx),%r14
632e(4): mov 0x10(%rbx),%r13
6332(4): mov 0x8(%rbx),%r12
6336(3): mov (%rbx),%rbx
6339(5): call 0xffffb217(%rip)
633e(2): push %r15
6340(2): jmp 0xffffffa6(%rip)
6342(6): nop 0x0(%rax,%rax,1)
6348(4): mov 0x8(%rbx),%r8
634c(4): mov 0x28(%rbx),%r12
6350(7): lea 0x1949(%rip),%rsi
6357(4): mov 0x20(%rbx),%r15
635b(4): mov 0x18(%rbx),%r14
635f(5): mov $0x5,%edx
6364(4): mov 0x10(%rbx),%r13
6368(2): xor %edi,%edi
636a(3): mov (%rbx),%rbx
636d(4): mov %r8,(%rsp)
6371(5): call 0xffffb1df(%rip)
6376(4): sub $0x8,%rsp
637a(3): mov %r13,%r9
637d(2): push %r12
637f(2): push %r15
6381(2): push %r14
6383(5): mov 0x20(%rsp),%r8
6388(3): mov %rbx,%rcx
638b(3): mov %rax,%rdx
638e(3): mov %rbp,%rdi
6391(5): mov $0x1,%esi
6396(2): xor %eax,%eax
6398(5): call 0xffffb3d8(%rip)
639d(4): add $0x20,%rsp
63a1(4): add $0x28,%rsp
63a5(1): pop %rbx
63a6(1): pop %rbp
63a7(2): pop %r12
63a9(2): pop %r13
63ab(2): pop %r14
63ad(2): pop %r15
63af(1): ret near (%rsp)
63b0(4): mov 0x10(%rbx),%r9
63b4(4): mov 0x30(%rbx),%r13
63b8(7): lea 0x1909(%rip),%rsi
63bf(4): mov 0x28(%rbx),%r12
63c3(4): mov 0x20(%rbx),%r15
63c7(5): mov $0x5,%edx
63cc(4): mov 0x18(%rbx),%r14
63d0(4): mov 0x8(%rbx),%r8
63d4(2): xor %edi,%edi
63d6(5): mov %r9,0x8(%rsp)
63db(3): mov (%rbx),%rbx
63de(4): mov %r8,(%rsp)
63e2(5): call 0xffffb16e(%rip)
63e7(2): push %r13
63e9(2): push %r12
63eb(2): push %r15
63ed(2): push %r14
63ef(5): mov 0x28(%rsp),%r9
63f4(2): jmp 0xffffff8f(%rip)
63f6(a): nop 0x0(%rax,%rax,1)
6400(4): mov 0x40(%rbx),%r10
6404(4): mov 0x38(%rbx),%r9
6408(5): mov $0x5,%edx
640d(4): mov 0x10(%rbx),%rax
6411(4): mov 0x8(%rbx),%r8
6415(7): lea 0x1944(%rip),%rsi
641c(4): mov 0x30(%rbx),%r13
6420(4): mov 0x28(%rbx),%r12
6424(4): mov 0x20(%rbx),%r15
6428(4): mov 0x18(%rbx),%r14
642c(5): mov %r10,0x18(%rsp)
6431(5): mov %r9,0x10(%rsp)
6436(4): mov %rax,(%rsp)
643a(5): mov %r8,0x8(%rsp)
643f(3): mov (%rbx),%rbx
6442(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
6450(3): xor %r9d,%r9d
6453(4): cmp $0x0,(%r8)
6457(2): jz 0x14(%rip)
6459(7): nop 0x0(%rax)
6460(4): add $0x1,%r9
6464(5): cmp $0x0,0x0(%r8,%r9,8)
6469(2): jnz 0xfffffff7(%rip)
646b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
6470(4): sub $0x68,%rsp
6474(3): mov %r8,%r10
6477(3): xor %r9d,%r9d
647a(9): mov $0x28,%rax
6483(5): mov %rax,0x58(%rsp)
6488(2): xor %eax,%eax
648a(3): mov %rsp,%r8
648d(3): nop (%rax)
6490(3): mov (%r10),%eax
6493(3): cmp $0x2f,%eax
6496(2): jnbe 0x44(%rip)
6498(3): mov %eax,%r11d
649b(4): add 0x10(%r10),%r11
649f(3): add $0x8,%eax
64a2(3): mov %eax,(%r10)
64a5(3): mov (%r11),%rax
64a8(3): test %rax,%rax
64ab(4): mov %rax,0x0(%r8,%r9,8)
64af(2): jz 0xc(%rip)
64b1(4): add $0x1,%r9
64b5(4): cmp $0xa,%r9
64b9(2): jnz 0xffffffd7(%rip)
64bb(5): call 0xfffffb75(%rip)
64c0(5): mov 0x58(%rsp),%rax
64c5(9): xor $0x28,%rax
64ce(2): jnz 0x7(%rip)
64d0(4): add $0x68,%rsp
64d4(1): ret near (%rsp)
64d5(5): call 0xffffb0bb(%rip)
64da(4): mov 0x8(%r10),%r11
64de(4): lea 0x8(%r11),%rax
64e2(4): mov %rax,0x8(%r10)
64e6(2): jmp 0xffffffbf(%rip)

"version_etc" :
64f0(1): push %rbp
64f1(1): push %rbx
64f2(6): mov $0x20,%r10d
64f8(3): xor %r11d,%r11d
64fb(7): sub $0xb8,%rsp
6502(9): mov $0x28,%rax
650b(5): mov %rax,0x78(%rsp)
6510(2): xor %eax,%eax
6512(8): lea 0xd0(%rsp),%rax
651a(8): mov %r8,0xa0(%rsp)
6522(8): lea 0xd0(%rsp),%rbx
652a(5): lea 0x20(%rsp),%r8
652f(8): mov %r9,0xa8(%rsp)
6537(8): mov $0x20,0x8(%rsp)
653f(5): mov %rax,0x10(%rsp)
6544(8): lea 0x80(%rsp),%rax
654c(3): xor %r9d,%r9d
654f(5): mov %rax,0x18(%rsp)
6554(3): mov %rax,%rbp
6557(9): nop 0x0(%rax,%rax,1)
6560(4): cmp $0x2f,%r10d
6564(2): jnbe 0x58(%rip)
6566(3): mov %r10d,%eax
6569(6): mov $0x1,%r11d
656f(4): add $0x8,%r10d
6573(3): add %rbp,%rax
6576(3): mov (%rax),%rax
6579(3): test %rax,%rax
657c(4): mov %rax,0x0(%r8,%r9,8)
6580(2): jz 0xc(%rip)
6582(4): add $0x1,%r9
6586(4): cmp $0xa,%r9
658a(2): jnz 0xffffffd6(%rip)
658c(3): test %r11b,%r11b
658f(2): jnz 0x26(%rip)
6591(5): call 0xfffffa9f(%rip)
6596(5): mov 0x78(%rsp),%rax
659b(9): xor $0x28,%rax
65a4(2): jnz 0xc(%rip)
65a6(7): add $0xb8,%rsp
65ad(1): pop %rbx
65ae(1): pop %rbp
65af(1): ret near (%rsp)
65b0(5): call 0xffffafe0(%rip)
65b5(5): mov %r10d,0x8(%rsp)
65ba(2): jmp 0xffffffd7(%rip)
65bc(3): mov %rbx,%rax
65bf(4): add $0x8,%rbx
65c3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
65d0(1): push %rbx
65d1(7): lea 0x156a(%rip),%rsi
65d8(5): mov $0x5,%edx
65dd(2): xor %edi,%edi
65df(5): call 0xffffaf71(%rip)
65e4(7): lea 0x156c(%rip),%rdx
65eb(3): mov %rax,%rsi
65ee(5): mov $0x1,%edi
65f3(2): xor %eax,%eax
65f5(5): call 0xffffb10b(%rip)
65fa(7): lea 0x156c(%rip),%rsi
6601(5): mov $0x5,%edx
6606(2): xor %edi,%edi
6608(5): call 0xffffaf48(%rip)
660d(7): lea 0xe24(%rip),%rcx
6614(7): lea 0x9b7(%rip),%rdx
661b(3): mov %rax,%rsi
661e(5): mov $0x1,%edi
6623(2): xor %eax,%eax
6625(5): call 0xffffb0db(%rip)
662a(7): mov 0x203a77(%rip),%rbx
6631(7): lea 0x1768(%rip),%rsi
6638(2): xor %edi,%edi
663a(5): mov $0x5,%edx
663f(5): call 0xffffaf11(%rip)
6644(3): mov %rbx,%rsi
6647(3): mov %rax,%rdi
664a(1): pop %rbx
664b(5): jmp 0xffffaff5(%rip)

"xmalloc" :
6650(1): push %rbx
6651(3): mov %rdi,%rbx
6654(5): call 0xffffb04c(%rip)
6659(3): test %rax,%rax
665c(2): jnz 0x7(%rip)
665e(3): test %rbx,%rbx
6661(2): jnz 0x4(%rip)
6663(1): pop %rbx
6664(1): ret near (%rsp)
6665(5): call 0x23b(%rip)

"xnmalloc" :
6670(3): mov %rdi,%rax
6673(3): mul %rax,%rsi,%rdx
6676(3): mov %rax,%rdi
6679(3): seto %al
667c(3): test %rdi,%rdi
667f(2): js 0xc(%rip)
6681(3): movzx %al,%eax
6684(3): test %rax,%rax
6687(2): jnz 0x4(%rip)
6689(2): jmp 0xffffffc7(%rip)
668b(4): sub $0x8,%rsp
668f(5): call 0x211(%rip)

"xrealloc" :
66b0(3): test %rsi,%rsi
66b3(1): push %rbx
66b4(3): mov %rsi,%rbx
66b7(2): jnz 0x7(%rip)
66b9(3): test %rdi,%rdi
66bc(2): jnz 0x1c(%rip)
66be(3): mov %rbx,%rsi
66c1(5): call 0xffffb01f(%rip)
66c6(3): test %rax,%rax
66c9(2): jnz 0x7(%rip)
66cb(3): test %rbx,%rbx
66ce(2): jnz 0x13(%rip)
66d0(1): pop %rbx
66d1(1): ret near (%rsp)
66d2(6): nop 0x0(%rax,%rax,1)
66d8(5): call 0xffffadd8(%rip)
66dd(2): xor %eax,%eax
66df(1): pop %rbx
66e0(1): ret near (%rsp)
66e1(5): call 0x1bf(%rip)

"xnrealloc" :
66f0(3): mov %rsi,%rax
66f3(3): mul %rax,%rdx,%rdx
66f6(3): mov %rax,%rsi
66f9(3): seto %al
66fc(3): test %rsi,%rsi
66ff(2): js 0xc(%rip)
6701(3): movzx %al,%eax
6704(3): test %rax,%rax
6707(2): jnz 0x4(%rip)
6709(2): jmp 0xffffffa7(%rip)
670b(4): sub $0x8,%rsp
670f(5): call 0x191(%rip)

"x2nrealloc" :
6720(3): test %rdi,%rdi
6723(3): mov %rdx,%r9
6726(3): mov (%rsi),%rcx
6729(2): jz 0x37(%rip)
672b(2): xor %edx,%edx
672d(a): mov $0x6148914691236517204,%rax
6737(3): div %r9,%rax
673a(3): cmp %rcx,%rax
673d(2): jbe 0x3e(%rip)
673f(3): mov %rcx,%rax
6742(3): shr $0x1,%rax
6745(5): lea 0x1(%rax,%rcx,1),%rcx
674a(3): mov %rcx,(%rsi)
674d(4): imul %r9,%rcx
6751(3): mov %rcx,%rsi
6754(5): jmp 0xffffff5c(%rip)
6759(7): nop 0x0(%rax)
6760(3): test %rcx,%rcx
6763(2): jz 0x25(%rip)
6765(3): mov %rcx,%rax
6768(3): mul %rax,%r9,%rdx
676b(3): seto %dl
676e(3): test %rax,%rax
6771(3): movzx %dl,%edx
6774(2): js 0x7(%rip)
6776(3): test %rdx,%rdx
6779(2): jz 0xffffffd1(%rip)
677b(4): sub $0x8,%rsp
677f(5): call 0x121(%rip)
6784(4): nop 0x0(%rax)
6788(2): xor %edx,%edx
678a(5): mov $0x80,%eax
678f(3): xor %r8d,%r8d
6792(3): div %r9,%rax
6795(3): test %rax,%rax
6798(4): setz %r8b
679c(4): lea 0x0(%r8,%rax,1),%rcx
67a0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
67b0(3): test %rdi,%rdi
67b3(3): mov (%rsi),%rax
67b6(2): jz 0x2a(%rip)
67b8(a): mov $0x6148914691236517203,%rdx
67c2(3): cmp %rdx,%rax
67c5(2): jnbe 0x2c(%rip)
67c7(3): mov %rax,%rdx
67ca(3): shr $0x1,%rdx
67cd(5): lea 0x1(%rdx,%rax,1),%rax
67d2(3): mov %rax,(%rsi)
67d5(3): mov %rax,%rsi
67d8(5): jmp 0xfffffed8(%rip)
67dd(3): nop (%rax)
67e0(3): test %rax,%rax
67e3(5): mov $0x80,%edx
67e8(4): cmove %rdx,%rax
67ec(3): test %rax,%rax
67ef(2): jns 0xffffffe3(%rip)
67f1(4): sub $0x8,%rsp
67f5(5): call 0xab(%rip)

"xzalloc" :
6800(1): push %rbx
6801(3): mov %rdi,%rbx
6804(5): call 0xfffffe4c(%rip)
6809(3): mov %rbx,%rdx
680c(2): xor %esi,%esi
680e(3): mov %rax,%rdi
6811(1): pop %rbx
6812(5): jmp 0xffffadee(%rip)

"xcalloc" :
6820(3): mov %rdi,%rax
6823(4): sub $0x8,%rsp
6827(3): mul %rax,%rsi,%rdx
682a(3): seto %dl
682d(3): test %rax,%rax
6830(2): js 0x19(%rip)
6832(3): movzx %dl,%edx
6835(3): test %rdx,%rdx
6838(2): jnz 0x11(%rip)
683a(5): call 0xffffae16(%rip)
683f(3): test %rax,%rax
6842(2): jz 0x7(%rip)
6844(4): add $0x8,%rsp
6848(1): ret near (%rsp)
6849(5): call 0x57(%rip)

"xmemdup" :
6850(1): push %rbp
6851(1): push %rbx
6852(3): mov %rdi,%rbp
6855(3): mov %rsi,%rdi
6858(3): mov %rsi,%rbx
685b(4): sub $0x8,%rsp
685f(5): call 0xfffffdf1(%rip)
6864(4): add $0x8,%rsp
6868(3): mov %rbx,%rdx
686b(3): mov %rbp,%rsi
686e(1): pop %rbx
686f(1): pop %rbp
6870(3): mov %rax,%rdi
6873(5): jmp 0xffffadfd(%rip)

"xstrdup" :
6880(1): push %rbx
6881(3): mov %rdi,%rbx
6884(5): call 0xffffacec(%rip)
6889(3): mov %rbx,%rdi
688c(4): lea 0x1(%rax),%rsi
6890(1): pop %rbx
6891(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
68a0(7): lea 0x15a8(%rip),%rsi
68a7(4): sub $0x8,%rsp
68ab(5): mov $0x5,%edx
68b0(2): xor %edi,%edi
68b2(5): call 0xffffac9e(%rip)
68b7(6): mov 0x203763(%rip),%edi
68bd(7): lea 0xc49(%rip),%rdx
68c4(3): mov %rax,%rcx
68c7(2): xor %esi,%esi
68c9(2): xor %eax,%eax
68cb(5): call 0xffffae55(%rip)
68d0(5): call 0xffffabf0(%rip)

"xgetcwd" :
68e0(1): push %rbx
68e1(2): xor %esi,%esi
68e3(2): xor %edi,%edi
68e5(5): call 0xffffad2b(%rip)
68ea(3): test %rax,%rax
68ed(3): mov %rax,%rbx
68f0(2): jz 0x10(%rip)
68f2(3): mov %rbx,%rax
68f5(1): pop %rbx
68f6(1): ret near (%rsp)
68f7(9): nop 0x0(%rax,%rax,1)
6900(5): call 0xffffabd0(%rip)
6905(3): cmp $0xc,(%rax)
6908(2): jnz 0xffffffea(%rip)
690a(5): call 0xffffff96(%rip)

"rpl_mbrtowc" :
6910(2): push %r13
6912(2): push %r12
6914(3): mov %rsi,%r13
6917(1): push %rbp
6918(1): push %rbx
6919(3): mov %rdi,%rbx
691c(3): mov %rdx,%r12
691f(4): sub $0x18,%rsp
6923(9): mov $0x28,%rax
692c(5): mov %rax,0x8(%rsp)
6931(2): xor %eax,%eax
6933(5): lea 0x4(%rsp),%rax
6938(3): test %rdi,%rdi
693b(4): cmove %rax,%rbx
693f(3): mov %rbx,%rdi
6942(5): call 0xffffac6e(%rip)
6947(4): cmp $0xfffffffd,%rax
694b(3): mov %rax,%rbp
694e(2): jbe 0x22(%rip)
6950(3): test %r12,%r12
6953(2): jz 0x1d(%rip)
6955(2): xor %edi,%edi
6957(5): call 0x349(%rip)
695c(2): test %al,%al
695e(2): jnz 0x12(%rip)
6960(5): movzx 0x0(%r13),%eax
6965(5): mov $0x1,%ebp
696a(2): mov %eax,(%rbx)
696c(4): nop 0x0(%rax)
6970(5): mov 0x8(%rsp),%rdx
6975(9): xor $0x28,%rdx
697e(3): mov %rbp,%rax
6981(2): jnz 0xd(%rip)
6983(4): add $0x18,%rsp
6987(1): pop %rbx
6988(1): pop %rbp
6989(2): pop %r12
698b(2): pop %r13
698d(1): ret near (%rsp)
698e(5): call 0xffffac02(%rip)

"areadlink_with_size" :
69a0(2): push %r15
69a2(2): push %r14
69a4(5): mov $0x401,%eax
69a9(2): push %r13
69ab(2): push %r12
69ad(3): mov %rdi,%r13
69b0(1): push %rbp
69b1(1): push %rbx
69b2(4): lea 0x1(%rsi),%rbx
69b6(a): mov $0x4611686018427387903,%r14
69c0(a): mov $0x9223372036854775806,%r15
69ca(4): sub $0x8,%rsp
69ce(7): cmp $0x401,%rsi
69d5(4): cmovnb %rax,%rbx
69d9(7): nop 0x0(%rax)
69e0(3): mov %rbx,%rdi
69e3(5): call 0xffffacbd(%rip)
69e8(3): test %rax,%rax
69eb(3): mov %rax,%rbp
69ee(2): jz 0x3d(%rip)
69f0(3): mov %rbx,%rdx
69f3(3): mov %rax,%rsi
69f6(3): mov %r13,%rdi
69f9(5): call 0xffffab17(%rip)
69fe(3): test %rax,%rax
6a01(3): mov %rax,%r12
6a04(2): js 0x54(%rip)
6a06(3): cmp %r12,%rbx
6a09(2): jnbe 0x67(%rip)
6a0b(3): mov %rbp,%rdi
6a0e(5): call 0xffffaaa2(%rip)
6a13(3): cmp %r14,%rbx
6a16(2): jnbe 0x2a(%rip)
6a18(3): add %rbx,%rbx
6a1b(3): mov %rbx,%rdi
6a1e(5): call 0xffffac82(%rip)
6a23(3): test %rax,%rax
6a26(3): mov %rax,%rbp
6a29(2): jnz 0xffffffc7(%rip)
6a2b(4): add $0x8,%rsp
6a2f(3): mov %rbp,%rax
6a32(1): pop %rbx
6a33(1): pop %rbp
6a34(2): pop %r12
6a36(2): pop %r13
6a38(2): pop %r14
6a3a(2): pop %r15
6a3c(1): ret near (%rsp)
6a3d(3): nop (%rax)
6a40(3): cmp %r15,%rbx
6a43(2): jnbe 0x3d(%rip)
6a45(a): mov $0x9223372036854775807,%rbx
6a4f(2): jmp 0xffffff91(%rip)
6a51(7): nop 0x0(%rax)
6a58(5): call 0xffffaa78(%rip)
6a5d(3): cmp $0x22,(%rax)
6a60(2): jz 0xffffffa6(%rip)
6a62(3): mov %rbp,%rdi
6a65(2): xor %ebp,%ebp
6a67(5): call 0xffffaa49(%rip)
6a6c(2): jmp 0xffffffbf(%rip)
6a6e(2): nop 
6a70(6): mov $0x0,0x0(%rbp,%r12,1)
6a76(2): jmp 0xffffffb5(%rip)
6a78(8): nop 0x0(%rax,%rax,1)
6a80(5): call 0xffffaa50(%rip)
6a85(2): xor %ebp,%ebp
6a87(6): mov $0xc,(%rax)
6a8d(2): jmp 0xffffff9e(%rip)

"close_stream" :
6a90(2): push %r12
6a92(1): push %rbp
6a93(3): mov %rdi,%rbp
6a96(1): push %rbx
6a97(5): call 0xffffaa69(%rip)
6a9c(3): mov 0x0(%rbp),%ebx
6a9f(3): mov %rbp,%rdi
6aa2(3): mov %rax,%r12
6aa5(5): call 0x2db(%rip)
6aaa(3): and $0x20,%ebx
6aad(2): test %ebx,%ebx
6aaf(2): jnz 0x19(%rip)
6ab1(2): test %eax,%eax
6ab3(2): jz 0xc(%rip)
6ab5(3): test %r12,%r12
6ab8(5): mov $0xffffffff,%eax
6abd(2): jz 0x3b(%rip)
6abf(1): pop %rbx
6ac0(1): pop %rbp
6ac1(2): pop %r12
6ac3(1): ret near (%rsp)
6ac4(4): nop 0x0(%rax)
6ac8(2): test %eax,%eax
6aca(2): jnz 0x1e(%rip)
6acc(5): call 0xffffaa04(%rip)
6ad1(6): mov $0x0,(%rax)
6ad7(5): mov $0xffffffff,%eax
6adc(1): pop %rbx
6add(1): pop %rbp
6ade(2): pop %r12
6ae0(1): ret near (%rsp)
6ae1(7): nop 0x0(%rax)
6ae8(1): pop %rbx
6ae9(5): mov $0xffffffff,%eax
6aee(1): pop %rbp
6aef(2): pop %r12
6af1(1): ret near (%rsp)
6af2(6): nop 0x0(%rax,%rax,1)
6af8(5): call 0xffffa9d8(%rip)
6afd(3): cmp $0x9,(%rax)
6b00(1): pop %rbx
6b01(1): pop %rbp
6b02(2): pop %r12
6b04(3): setnz %al
6b07(3): movzx %al,%eax
6b0a(2): neg %eax
6b0c(1): ret near (%rsp)

"dir_name" :
6b10(4): sub $0x8,%rsp
6b14(5): call 0x7c(%rip)
6b19(3): test %rax,%rax
6b1c(2): jz 0x7(%rip)
6b1e(4): add $0x8,%rsp
6b22(1): ret near (%rsp)
6b23(5): call 0xfffffd7d(%rip)

"dir_len" :
6b30(1): push %rbp
6b31(1): push %rbx
6b32(2): xor %ebp,%ebp
6b34(3): mov %rdi,%rbx
6b37(4): sub $0x8,%rsp
6b3b(3): cmp $0x2f,(%rdi)
6b3e(4): setz %bpl
6b42(5): call 0xae(%rip)
6b47(3): mov %rax,%rcx
6b4a(3): sub %rbx,%rcx
6b4d(3): cmp %rbp,%rcx
6b50(2): jbe 0x30(%rip)
6b52(4): cmp $0x2f,0xffffffff(%rax)
6b56(4): lea 0xffffffff(%rcx),%rdx
6b5a(2): jz 0x14(%rip)
6b5c(2): jmp 0x24(%rip)
6b5e(2): nop 
6b60(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
6b65(4): lea 0xffffffff(%rdx),%rax
6b69(2): jnz 0xa(%rip)
6b6b(3): mov %rax,%rdx
6b6e(3): cmp %rdx,%rbp
6b71(2): jnz 0xffffffef(%rip)
6b73(4): add $0x8,%rsp
6b77(3): mov %rdx,%rax
6b7a(1): pop %rbx
6b7b(1): pop %rbp
6b7c(1): ret near (%rsp)
6b7d(3): nop (%rax)
6b80(4): add $0x8,%rsp
6b84(3): mov %rcx,%rdx
6b87(3): mov %rdx,%rax
6b8a(1): pop %rbx
6b8b(1): pop %rbp
6b8c(1): ret near (%rsp)

"mdir_name" :
6b90(1): push %rbp
6b91(1): push %rbx
6b92(3): mov %rdi,%rbp
6b95(4): sub $0x8,%rsp
6b99(5): call 0xffffff97(%rip)
6b9e(3): test %rax,%rax
6ba1(3): mov %rax,%rbx
6ba4(3): setz %al
6ba7(3): movzx %al,%eax
6baa(5): lea 0x1(%rbx,%rax,1),%rdi
6baf(5): call 0xffffaaf1(%rip)
6bb4(3): test %rax,%rax
6bb7(3): mov %rax,%rcx
6bba(2): jz 0x1c(%rip)
6bbc(3): mov %rbx,%rdx
6bbf(3): mov %rbp,%rsi
6bc2(3): mov %rax,%rdi
6bc5(5): call 0xffffaaab(%rip)
6bca(3): test %rbx,%rbx
6bcd(3): mov %rax,%rcx
6bd0(2): jz 0x10(%rip)
6bd2(4): mov $0x0,0x0(%rcx,%rbx,1)
6bd6(4): add $0x8,%rsp
6bda(3): mov %rcx,%rax
6bdd(1): pop %rbx
6bde(1): pop %rbp
6bdf(1): ret near (%rsp)
6be0(3): mov $0x2e,(%rax)
6be3(5): mov $0x1,%ebx
6be8(2): jmp 0xffffffea(%rip)

"last_component" :
6bf0(3): movzx (%rdi),%edx
6bf3(3): mov %rdi,%rax
6bf6(3): cmp $0x2f,%dl
6bf9(2): jnz 0x13(%rip)
6bfb(5): nop 0x0(%rax,%rax,1)
6c00(4): add $0x1,%rax
6c04(3): movzx (%rax),%edx
6c07(3): cmp $0x2f,%dl
6c0a(2): jz 0xfffffff6(%rip)
6c0c(2): test %dl,%dl
6c0e(2): jz 0x3c(%rip)
6c10(3): mov %rax,%rcx
6c13(2): xor %esi,%esi
6c15(2): jmp 0x20(%rip)
6c17(9): nop 0x0(%rax,%rax,1)
6c20(3): test %sil,%sil
6c23(2): jz 0x7(%rip)
6c25(3): mov %rcx,%rax
6c28(2): xor %esi,%esi
6c2a(4): add $0x1,%rcx
6c2e(3): movzx (%rcx),%edx
6c31(2): test %dl,%dl
6c33(2): jz 0x17(%rip)
6c35(3): cmp $0x2f,%dl
6c38(2): jnz 0xffffffe8(%rip)
6c3a(4): add $0x1,%rcx
6c3e(3): movzx (%rcx),%edx
6c41(5): mov $0x1,%esi
6c46(2): test %dl,%dl
6c48(2): jnz 0xffffffed(%rip)
6c4a(2): REP ret near (%rsp)

"base_len" :
6c50(1): push %rbx
6c51(3): mov %rdi,%rbx
6c54(5): call 0xffffa91c(%rip)
6c59(4): cmp $0x1,%rax
6c5d(2): jbe 0xd(%rip)
6c5f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
6c64(4): lea 0xffffffff(%rax),%rdx
6c68(2): jz 0x10(%rip)
6c6a(1): pop %rbx
6c6b(1): ret near (%rsp)
6c6c(4): nop 0x0(%rax)
6c70(3): mov %rax,%rdx
6c73(5): nop 0x0(%rax,%rax,1)
6c78(4): cmp $0x1,%rdx
6c7c(2): jz 0x14(%rip)
6c7e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
6c83(4): lea 0xffffffff(%rdx),%rax
6c87(2): jz 0xffffffe9(%rip)
6c89(3): mov %rdx,%rax
6c8c(1): pop %rbx
6c8d(1): ret near (%rsp)
6c8e(2): nop 
6c90(5): mov $0x1,%eax
6c95(1): pop %rbx
6c96(1): ret near (%rsp)

"hard_locale" :
6ca0(4): sub $0x8,%rsp
6ca4(2): xor %esi,%esi
6ca6(5): call 0xffffaa4a(%rip)
6cab(3): mov %rax,%rdx
6cae(5): mov $0x1,%eax
6cb3(3): test %rdx,%rdx
6cb6(2): jz 0x1f(%rip)
6cb8(7): lea 0x11a1(%rip),%rdi
6cbf(5): mov $0x2,%ecx
6cc4(3): mov %rdx,%rsi
6cc7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6cc9(3): setnbe %cl
6ccc(3): sbb $0x0,%cl
6ccf(2): xor %eax,%eax
6cd1(2): test %cl,%cl
6cd3(2): jnz 0xd(%rip)
6cd5(4): add $0x8,%rsp
6cd9(1): ret near (%rsp)
6cda(6): nop 0x0(%rax,%rax,1)
6ce0(7): lea 0x117b(%rip),%rdi
6ce7(5): mov $0x6,%ecx
6cec(3): mov %rdx,%rsi
6cef(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6cf1(3): setnbe %al
6cf4(2): sbb $0x0,%al
6cf6(2): test %al,%al
6cf8(3): setnz %al
6cfb(4): add $0x8,%rsp
6cff(1): ret near (%rsp)

"hash_pjw" :
6d00(4): movsx (%rdi),%rcx
6d04(2): test %cl,%cl
6d06(2): jz 0x2a(%rip)
6d08(2): xor %eax,%eax
6d0a(6): nop 0x0(%rax,%rax,1)
6d10(4): rol $0x9,%rax
6d14(4): add $0x1,%rdi
6d18(3): add %rcx,%rax
6d1b(4): movsx (%rdi),%rcx
6d1f(2): test %cl,%cl
6d21(2): jnz 0xffffffef(%rip)
6d23(2): xor %edx,%edx
6d25(3): div %rsi,%rax
6d28(3): mov %rdx,%rax
6d2b(1): ret near (%rsp)
6d2c(4): nop 0x0(%rax)
6d30(2): xor %edx,%edx
6d32(3): mov %rdx,%rax
6d35(1): ret near (%rsp)

"locale_charset" :
6d40(4): sub $0x8,%rsp
6d44(5): mov $0xe,%edi
6d49(5): call 0xffffa977(%rip)
6d4e(3): test %rax,%rax
6d51(2): jz 0x1f(%rip)
6d53(3): cmp $0x0,(%rax)
6d56(7): lea 0x110b(%rip),%rdx
6d5d(4): cmove %rdx,%rax
6d61(4): add $0x8,%rsp
6d65(1): ret near (%rsp)
6d66(a): nop 0x0(%rax,%rax,1)
6d70(7): lea 0x10f1(%rip),%rax
6d77(4): add $0x8,%rsp
6d7b(1): ret near (%rsp)

"rpl_fclose" :
6d80(2): push %r12
6d82(1): push %rbp
6d83(1): push %rbx
6d84(3): mov %rdi,%rbx
6d87(5): call 0xffffa8f9(%rip)
6d8c(2): test %eax,%eax
6d8e(3): mov %rbx,%rdi
6d91(2): js 0x56(%rip)
6d93(5): call 0xffffa93d(%rip)
6d98(2): test %eax,%eax
6d9a(2): jnz 0x2e(%rip)
6d9c(3): mov %rbx,%rdi
6d9f(5): call 0x61(%rip)
6da4(2): test %eax,%eax
6da6(2): jz 0x3e(%rip)
6da8(5): call 0xffffa728(%rip)
6dad(3): mov (%rax),%r12d
6db0(3): mov %rbx,%rdi
6db3(3): mov %rax,%rbp
6db6(5): call 0xffffa77a(%rip)
6dbb(3): test %r12d,%r12d
6dbe(2): jnz 0x32(%rip)
6dc0(1): pop %rbx
6dc1(1): pop %rbp
6dc2(2): pop %r12
6dc4(1): ret near (%rsp)
6dc5(3): nop (%rax)
6dc8(3): mov %rbx,%rdi
6dcb(5): call 0xffffa8b5(%rip)
6dd0(2): xor %esi,%esi
6dd2(5): mov $0x1,%edx
6dd7(2): mov %eax,%edi
6dd9(5): call 0xffffa817(%rip)
6dde(4): cmp $0xffffffff,%rax
6de2(2): jnz 0xffffffba(%rip)
6de4(3): mov %rbx,%rdi
6de7(1): pop %rbx
6de8(1): pop %rbp
6de9(2): pop %r12
6deb(5): jmp 0xffffa745(%rip)
6df0(4): mov %r12d,0x0(%rbp)
6df4(5): mov $0xffffffff,%eax
6df9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
6e00(3): test %rdi,%rdi
6e03(1): push %rbx
6e04(3): mov %rdi,%rbx
6e07(2): jz 0x13(%rip)
6e09(5): call 0xffffa8c7(%rip)
6e0e(2): test %eax,%eax
6e10(2): jz 0xa(%rip)
6e12(6): test $0x100,(%rbx)
6e18(2): jnz 0x10(%rip)
6e1a(3): mov %rbx,%rdi
6e1d(1): pop %rbx
6e1e(5): jmp 0xffffa892(%rip)
6e23(5): nop 0x0(%rax,%rax,1)
6e28(3): mov %rbx,%rdi
6e2b(5): mov $0x1,%edx
6e30(2): xor %esi,%esi
6e32(5): call 0xe(%rip)
6e37(3): mov %rbx,%rdi
6e3a(1): pop %rbx
6e3b(5): jmp 0xffffa875(%rip)

"rpl_fseeko" :
6e40(4): mov 0x8(%rdi),%rax
6e44(4): cmp %rax,0x10(%rdi)
6e48(2): jz 0x8(%rip)
6e4a(5): jmp 0xffffa8e6(%rip)
6e4f(1): nop 
6e50(4): mov 0x20(%rdi),%rax
6e54(4): cmp %rax,0x28(%rdi)
6e58(2): jnz 0xfffffff2(%rip)
6e5a(5): cmp $0x0,0x48(%rdi)
6e5f(2): jnz 0xffffffeb(%rip)
6e61(2): push %r12
6e63(1): push %rbp
6e64(3): mov %edx,%r12d
6e67(1): push %rbx
6e68(3): mov %rsi,%rbp
6e6b(3): mov %rdi,%rbx
6e6e(5): call 0xffffa812(%rip)
6e73(3): mov %r12d,%edx
6e76(3): mov %rbp,%rsi
6e79(2): mov %eax,%edi
6e7b(5): call 0xffffa775(%rip)
6e80(4): cmp $0xffffffff,%rax
6e84(2): jz 0xe(%rip)
6e86(3): and $0xef,(%rbx)
6e89(7): mov %rax,0x90(%rbx)
6e90(2): xor %eax,%eax
6e92(1): pop %rbx
6e93(1): pop %rbp
6e94(2): pop %r12
6e96(1): ret near (%rsp)

"__libc_csu_init" :
6ea0(2): push %r15
6ea2(2): push %r14
6ea4(3): mov %rdx,%r15
6ea7(2): push %r13
6ea9(2): push %r12
6eab(7): lea 0x202b7e(%rip),%r12
6eb2(1): push %rbp
6eb3(7): lea 0x202b7e(%rip),%rbp
6eba(1): push %rbx
6ebb(3): mov %edi,%r13d
6ebe(3): mov %rsi,%r14
6ec1(3): sub %r12,%rbp
6ec4(4): sub $0x8,%rsp
6ec8(4): sar $0x3,%rbp
6ecc(5): call 0xffffa5b4(%rip)
6ed1(3): test %rbp,%rbp
6ed4(2): jz 0x22(%rip)
6ed6(2): xor %ebx,%ebx
6ed8(8): nop 0x0(%rax,%rax,1)
6ee0(3): mov %r15,%rdx
6ee3(3): mov %r14,%rsi
6ee6(3): mov %r13d,%edi
6ee9(4): call 0x0(%r12,%rbx,8)
6eed(4): add $0x1,%rbx
6ef1(3): cmp %rbx,%rbp
6ef4(2): jnz 0xffffffec(%rip)
6ef6(4): add $0x8,%rsp
6efa(1): pop %rbx
6efb(1): pop %rbp
6efc(2): pop %r12
6efe(2): pop %r13
6f00(2): pop %r14
6f02(2): pop %r15
6f04(1): ret near (%rsp)

"atexit" :
6f20(7): mov 0x2030e1(%rip),%rdx
6f27(2): xor %esi,%esi
6f29(5): jmp 0xffffa817(%rip)

"_fini" :
6f30(4): sub $0x8,%rsp
6f34(4): add $0x8,%rsp
6f38(1): ret near (%rsp)

