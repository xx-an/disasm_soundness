
"free@plt" :
1270(6): jmp 0x205c0a(%rip)
1276(5): push $0x0

"abort@plt" :
1280(6): jmp 0x205c02(%rip)
1286(5): push $0x1

"__errno_location@plt" :
1290(6): jmp 0x205bfa(%rip)
1296(5): push $0x2

"strncmp@plt" :
12a0(6): jmp 0x205bf2(%rip)
12a6(5): push $0x3

"_exit@plt" :
12b0(6): jmp 0x205bea(%rip)
12b6(5): push $0x4

"__fpending@plt" :
12c0(6): jmp 0x205be2(%rip)
12c6(5): push $0x5

"textdomain@plt" :
12d0(6): jmp 0x205bda(%rip)
12d6(5): push $0x6

"fclose@plt" :
12e0(6): jmp 0x205bd2(%rip)
12e6(5): push $0x7

"bindtextdomain@plt" :
12f0(6): jmp 0x205bca(%rip)
12f6(5): push $0x8

"dcgettext@plt" :
1300(6): jmp 0x205bc2(%rip)
1306(5): push $0x9

"__ctype_get_mb_cur_max@plt" :
1310(6): jmp 0x205bba(%rip)
1316(5): push $0xa

"strlen@plt" :
1320(6): jmp 0x205bb2(%rip)
1326(5): push $0xb

"__stack_chk_fail@plt" :
1330(6): jmp 0x205baa(%rip)
1336(5): push $0xc

"getopt_long@plt" :
1340(6): jmp 0x205ba2(%rip)
1346(5): push $0xd

"mbrtowc@plt" :
1350(6): jmp 0x205b9a(%rip)
1356(5): push $0xe

"__overflow@plt" :
1360(6): jmp 0x205b92(%rip)
1366(5): push $0xf

"strrchr@plt" :
1370(6): jmp 0x205b8a(%rip)
1376(5): push $0x10

"lseek@plt" :
1380(6): jmp 0x205b82(%rip)
1386(5): push $0x11

"memset@plt" :
1390(6): jmp 0x205b7a(%rip)
1396(5): push $0x12

"strndup@plt" :
13a0(6): jmp 0x205b72(%rip)
13a6(5): push $0x13

"memcmp@plt" :
13b0(6): jmp 0x205b6a(%rip)
13b6(5): push $0x14

"fputs_unlocked@plt" :
13c0(6): jmp 0x205b62(%rip)
13c6(5): push $0x15

"calloc@plt" :
13d0(6): jmp 0x205b5a(%rip)
13d6(5): push $0x16

"memcpy@plt" :
13e0(6): jmp 0x205b52(%rip)
13e6(5): push $0x17

"fileno@plt" :
13f0(6): jmp 0x205b4a(%rip)
13f6(5): push $0x18

"malloc@plt" :
1400(6): jmp 0x205b42(%rip)
1406(5): push $0x19

"fflush@plt" :
1410(6): jmp 0x205b3a(%rip)
1416(5): push $0x1a

"nl_langinfo@plt" :
1420(6): jmp 0x205b32(%rip)
1426(5): push $0x1b

"__freading@plt" :
1430(6): jmp 0x205b2a(%rip)
1436(5): push $0x1c

"realloc@plt" :
1440(6): jmp 0x205b22(%rip)
1446(5): push $0x1d

"setlocale@plt" :
1450(6): jmp 0x205b1a(%rip)
1456(5): push $0x1e

"__printf_chk@plt" :
1460(6): jmp 0x205b12(%rip)
1466(5): push $0x1f

"error@plt" :
1470(6): jmp 0x205b0a(%rip)
1476(5): push $0x20

"fseeko@plt" :
1480(6): jmp 0x205b02(%rip)
1486(5): push $0x21

"__cxa_atexit@plt" :
1490(6): jmp 0x205afa(%rip)
1496(5): push $0x22

"exit@plt" :
14a0(6): jmp 0x205af2(%rip)
14a6(5): push $0x23

"fwrite@plt" :
14b0(6): jmp 0x205aea(%rip)
14b6(5): push $0x24

"__fprintf_chk@plt" :
14c0(6): jmp 0x205ae2(%rip)
14c6(5): push $0x25

"mbsinit@plt" :
14d0(6): jmp 0x205ada(%rip)
14d6(5): push $0x26

"iswprint@plt" :
14e0(6): jmp 0x205ad2(%rip)
14e6(5): push $0x27

"__ctype_b_loc@plt" :
14f0(6): jmp 0x205aca(%rip)
14f6(5): push $0x28

".plt.got" :
1500(6): jmp 0x205ae2(%rip)
1506(2): nop 

"_init" :
1240(4): sub $0x8,%rsp
1244(7): mov 0x205d8d(%rip),%rax
124b(3): test %rax,%rax
124e(2): jz 0x4(%rip)
1250(2): call %rax
1252(4): add $0x8,%rsp
1256(1): ret near (%rsp)

"main" :
1510(2): push %r14
1512(2): push %r13
1514(3): xor %r14d,%r14d
1517(2): push %r12
1519(1): push %rbp
151a(2): mov %edi,%ebp
151c(1): push %rbx
151d(3): mov (%rsi),%rdi
1520(3): mov %rsi,%rbx
1523(3): xor %r13d,%r13d
1526(3): xor %r12d,%r12d
1529(5): call 0x997(%rip)
152e(7): lea 0x3d6c(%rip),%rsi
1535(5): mov $0x6,%edi
153a(5): call 0xffffff16(%rip)
153f(7): lea 0x33aa(%rip),%rsi
1546(7): lea 0x337a(%rip),%rdi
154d(5): call 0xfffffda3(%rip)
1552(7): lea 0x336e(%rip),%rdi
1559(5): call 0xfffffd77(%rip)
155e(7): lea 0x75b(%rip),%rdi
1565(5): call 0x32ab(%rip)
156a(7): lea 0x2055ef(%rip),%rcx
1571(7): lea 0x3390(%rip),%rdx
1578(3): xor %r8d,%r8d
157b(3): mov %rbx,%rsi
157e(2): mov %ebp,%edi
1580(5): call 0xfffffdc0(%rip)
1585(3): cmp $0xff,%eax
1588(6): jz 0x8a(%rip)
158e(3): cmp $0x61,%eax
1591(2): jz 0x5f(%rip)
1593(2): jle 0x1d(%rip)
1595(3): cmp $0x73,%eax
1598(2): jz 0x68(%rip)
159a(3): cmp $0x7a,%eax
159d(6): jnz 0x10d(%rip)
15a3(6): mov $0x1,%r13d
15a9(2): jmp 0xffffffc1(%rip)
15ab(5): nop 0x0(%rax,%rax,1)
15b0(5): cmp $0xffffff7d,%eax
15b5(6): jnz 0xc6(%rip)
15bb(7): mov 0x205ac6(%rip),%rdi
15c2(7): mov 0x205a47(%rip),%rcx
15c9(7): lea 0x333e(%rip),%r8
15d0(7): lea 0x32ec(%rip),%rdx
15d7(7): lea 0x3266(%rip),%rsi
15de(3): xor %r9d,%r9d
15e1(2): xor %eax,%eax
15e3(5): call 0x2acd(%rip)
15e8(2): xor %edi,%edi
15ea(5): call 0xfffffeb6(%rip)
15ef(1): nop 
15f0(6): mov $0x1,%r12d
15f6(5): jmp 0xffffff74(%rip)
15fb(5): nop 0x0(%rax,%rax,1)
1600(7): mov 0x205a91(%rip),%r14
1607(6): mov $0x1,%r12d
160d(5): jmp 0xffffff5d(%rip)
1612(6): mov 0x205a78(%rip),%eax
1618(2): cmp %ebp,%eax
161a(2): jnl 0x6f(%rip)
161c(3): test %r12b,%r12b
161f(2): jnz 0x2f(%rip)
1621(3): movsxd %eax,%rcx
1624(3): add $0x2,%eax
1627(2): cmp %ebp,%eax
1629(6): jl 0x8b(%rip)
162f(4): movzx %r13b,%edx
1633(5): mov $0x0,%esi
1638(2): jz 0x3c(%rip)
163a(4): mov 0x0(%rbx,%rcx,8),%rdi
163e(5): call 0x1c2(%rip)
1643(1): pop %rbx
1644(2): xor %eax,%eax
1646(1): pop %rbp
1647(2): pop %r12
1649(2): pop %r13
164b(2): pop %r14
164d(1): ret near (%rsp)
164e(2): cwde 
1650(3): mov %r13d,%edx
1653(3): mov %r14,%rsi
1656(4): mov 0x0(%rbx,%rax,8),%rdi
165a(5): call 0x1a6(%rip)
165f(6): mov 0x205a2b(%rip),%eax
1665(3): add $0x1,%eax
1668(2): cmp %ebp,%eax
166a(6): mov %eax,0x205a20(%rip)
1670(2): jl 0xffffffde(%rip)
1672(2): jmp 0xffffffd1(%rip)
1674(5): mov 0x8(%rbx,%rcx,8),%rsi
1679(2): jmp 0xffffffc1(%rip)
167b(5): cmp $0xffffff7e,%eax
1680(2): jnz 0x2a(%rip)
1682(2): xor %edi,%edi
1684(5): call 0x24c(%rip)
1689(7): lea 0x328e(%rip),%rsi
1690(5): mov $0x5,%edx
1695(2): xor %edi,%edi
1697(5): call 0xfffffc69(%rip)
169c(2): xor %esi,%esi
169e(3): mov %rax,%rdx
16a1(2): xor %edi,%edi
16a3(2): xor %eax,%eax
16a5(5): call 0xfffffdcb(%rip)
16aa(5): mov $0x1,%edi
16af(5): call 0x221(%rip)
16b4(5): mov 0x10(%rbx,%rcx,8),%rdi
16b9(5): call 0x2517(%rip)
16be(7): lea 0x3269(%rip),%rsi
16c5(3): mov %rax,%rbx
16c8(5): mov $0x5,%edx
16cd(2): xor %edi,%edi
16cf(5): call 0xfffffc31(%rip)
16d4(2): xor %edi,%edi
16d6(3): mov %rax,%rdx
16d9(3): mov %rbx,%rcx
16dc(2): xor %esi,%esi
16de(2): xor %eax,%eax
16e0(5): call 0xfffffd90(%rip)
16e5(5): mov $0x1,%edi
16ea(5): call 0x1e6(%rip)

"_start" :
16f0(2): xor %ebp,%ebp
16f2(3): mov %rdx,%r9
16f5(1): pop %rsi
16f6(3): mov %rsp,%rdx
16f9(4): and $0xfffffff0,%rsp
16fd(1): push %rax
16fe(1): push %rsp
16ff(7): lea 0x30fa(%rip),%r8
1706(7): lea 0x3083(%rip),%rcx
170d(7): lea 0xfffffdfc(%rip),%rdi
1714(6): call 0x2058b6(%rip)
171a(1): hlt 

"deregister_tm_clones" :
1720(7): lea 0x205959(%rip),%rdi
1727(1): push %rbp
1728(7): lea 0x205951(%rip),%rax
172f(3): cmp %rdi,%rax
1732(3): mov %rsp,%rbp
1735(2): jz 0x1b(%rip)
1737(7): mov 0x20588a(%rip),%rax
173e(3): test %rax,%rax
1741(2): jz 0xf(%rip)
1743(1): pop %rbp
1744(2): jmp %rax
1746(a): nop 0x0(%rax,%rax,1)
1750(1): pop %rbp
1751(1): ret near (%rsp)

"register_tm_clones" :
1760(7): lea 0x205919(%rip),%rdi
1767(7): lea 0x205912(%rip),%rsi
176e(1): push %rbp
176f(3): sub %rdi,%rsi
1772(3): mov %rsp,%rbp
1775(4): sar $0x3,%rsi
1779(3): mov %rsi,%rax
177c(4): shr $0x3f,%rax
1780(3): add %rax,%rsi
1783(3): sar $0x1,%rsi
1786(2): jz 0x1a(%rip)
1788(7): mov 0x205851(%rip),%rax
178f(3): test %rax,%rax
1792(2): jz 0xe(%rip)
1794(1): pop %rbp
1795(2): jmp %rax
1797(9): nop 0x0(%rax,%rax,1)
17a0(1): pop %rbp
17a1(1): ret near (%rsp)

"__do_global_dtors_aux" :
17b0(7): cmp $0x0,0x205911(%rip)
17b7(2): jnz 0x31(%rip)
17b9(8): cmp $0x0,0x205827(%rip)
17c1(1): push %rbp
17c2(3): mov %rsp,%rbp
17c5(2): jz 0xe(%rip)
17c7(7): mov 0x20583a(%rip),%rdi
17ce(5): call 0xfffffd32(%rip)
17d3(5): call 0xffffff4d(%rip)
17d8(7): mov $0x1,0x2058e9(%rip)
17df(1): pop %rbp
17e0(1): ret near (%rsp)
17e1(7): nop 0x0(%rax)
17e8(2): REP ret near (%rsp)

"frame_dummy" :
17f0(1): push %rbp
17f1(3): mov %rsp,%rbp
17f4(1): pop %rbp
17f5(5): jmp 0xffffff6b(%rip)

"perform_basename" :
1800(2): push %r13
1802(2): push %r12
1804(3): mov %rsi,%r13
1807(1): push %rbp
1808(1): push %rbx
1809(3): mov %edx,%r12d
180c(4): sub $0x8,%rsp
1810(5): call 0x560(%rip)
1815(3): mov %rax,%rdi
1818(3): mov %rax,%rbp
181b(5): call 0x665(%rip)
1820(3): test %r13,%r13
1823(2): jz 0x8(%rip)
1825(4): cmp $0x2f,0x0(%rbp)
1829(2): jnz 0x4f(%rip)
182b(7): mov 0x205856(%rip),%rsi
1832(3): mov %rbp,%rdi
1835(5): call 0xfffffb8b(%rip)
183a(7): mov 0x205847(%rip),%rdi
1841(4): cmp $0x1,%r12b
1845(2): sbb %esi,%esi
1847(3): and $0xa,%esi
184a(4): mov 0x28(%rdi),%rax
184e(4): cmp 0x30(%rdi),%rax
1852(2): jnb 0x76(%rip)
1854(4): lea 0x1(%rax),%rdx
1858(4): mov %rdx,0x28(%rdi)
185c(3): mov %sil,(%rax)
185f(4): add $0x8,%rsp
1863(3): mov %rbp,%rdi
1866(1): pop %rbx
1867(1): pop %rbp
1868(2): pop %r12
186a(2): pop %r13
186c(5): jmp 0xfffffa04(%rip)
1871(7): nop 0x0(%rax)
1878(3): mov %rbp,%rdi
187b(5): call 0xfffffaa5(%rip)
1880(3): mov %r13,%rdi
1883(5): lea 0x0(%rbp,%rax,1),%rbx
1888(5): call 0xfffffa98(%rip)
188d(3): add %r13,%rax
1890(3): cmp %rbx,%rbp
1893(2): jnb 0x1d(%rip)
1895(3): cmp %rax,%r13
1898(2): jnb 0x18(%rip)
189a(4): sub $0x1,%rax
189e(4): sub $0x1,%rbx
18a2(3): movzx (%rax),%ecx
18a5(2): cmp %cl,(%rbx)
18a7(2): jz 0xffffffe9(%rip)
18a9(2): jmp 0xffffff82(%rip)
18ab(5): nop 0x0(%rax,%rax,1)
18b0(3): cmp %rbx,%rbp
18b3(6): jnb 0xffffff78(%rip)
18b9(3): mov $0x0,(%rbx)
18bc(5): jmp 0xffffff6f(%rip)
18c1(7): nop 0x0(%rax)
18c8(5): call 0xfffffa98(%rip)
18cd(2): jmp 0xffffff92(%rip)

"usage" :
18d0(2): push %r13
18d2(2): push %r12
18d4(5): mov $0x5,%edx
18d9(1): push %rbp
18da(1): push %rbx
18db(2): mov %edi,%ebp
18dd(7): sub $0x88,%rsp
18e4(7): mov 0x2057f5(%rip),%rbx
18eb(9): mov $0x28,%rax
18f4(5): mov %rax,0x78(%rsp)
18f9(2): xor %eax,%eax
18fb(2): test %edi,%edi
18fd(2): jz 0x30(%rip)
18ff(7): lea 0x3062(%rip),%rsi
1906(2): xor %edi,%edi
1908(5): call 0xfffff9f8(%rip)
190d(7): mov 0x2057ac(%rip),%rdi
1914(3): mov %rax,%rdx
1917(3): mov %rbx,%rcx
191a(5): mov $0x1,%esi
191f(2): xor %eax,%eax
1921(5): call 0xfffffb9f(%rip)
1926(2): mov %ebp,%edi
1928(5): call 0xfffffb78(%rip)
192d(7): lea 0x305c(%rip),%rsi
1934(2): xor %edi,%edi
1936(5): call 0xfffff9ca(%rip)
193b(3): mov %rbx,%rcx
193e(3): mov %rbx,%rdx
1941(3): mov %rax,%rsi
1944(5): mov $0x1,%edi
1949(2): xor %eax,%eax
194b(5): call 0xfffffb15(%rip)
1950(7): mov 0x205731(%rip),%rbx
1957(7): lea 0x306a(%rip),%rsi
195e(5): mov $0x5,%edx
1963(2): xor %edi,%edi
1965(5): call 0xfffff99b(%rip)
196a(3): mov %rbx,%rsi
196d(3): mov %rax,%rdi
1970(5): call 0xfffffa50(%rip)
1975(7): mov 0x20570c(%rip),%rbx
197c(7): lea 0x30ad(%rip),%rsi
1983(5): mov $0x5,%edx
1988(2): xor %edi,%edi
198a(5): call 0xfffff976(%rip)
198f(3): mov %rbx,%rsi
1992(3): mov %rax,%rdi
1995(5): call 0xfffffa2b(%rip)
199a(7): mov 0x2056e7(%rip),%rbx
19a1(7): lea 0x30d8(%rip),%rsi
19a8(5): mov $0x5,%edx
19ad(2): xor %edi,%edi
19af(5): call 0xfffff951(%rip)
19b4(3): mov %rbx,%rsi
19b7(3): mov %rax,%rdi
19ba(5): call 0xfffffa06(%rip)
19bf(7): mov 0x2056c2(%rip),%rbx
19c6(7): lea 0x3183(%rip),%rsi
19cd(5): mov $0x5,%edx
19d2(2): xor %edi,%edi
19d4(5): call 0xfffff92c(%rip)
19d9(3): mov %rbx,%rsi
19dc(3): mov %rax,%rdi
19df(5): call 0xfffff9e1(%rip)
19e4(7): mov 0x20569d(%rip),%rbx
19eb(7): lea 0x318e(%rip),%rsi
19f2(5): mov $0x5,%edx
19f7(2): xor %edi,%edi
19f9(5): call 0xfffff907(%rip)
19fe(3): mov %rbx,%rsi
1a01(3): mov %rax,%rdi
1a04(5): call 0xfffff9bc(%rip)
1a09(7): mov 0x2056d0(%rip),%rbx
1a10(7): lea 0x31a1(%rip),%rsi
1a17(5): mov $0x5,%edx
1a1c(2): xor %edi,%edi
1a1e(5): call 0xfffff8e2(%rip)
1a23(3): mov %rbx,%rcx
1a26(3): mov %rbx,%rdx
1a29(3): mov %rbx,%r9
1a2c(3): mov %rbx,%r8
1a2f(3): mov %rax,%rsi
1a32(5): mov $0x1,%edi
1a37(2): xor %eax,%eax
1a39(7): lea 0x2e04(%rip),%rbx
1a40(5): call 0xfffffa20(%rip)
1a45(7): lea 0x2e01(%rip),%rax
1a4c(7): lea 0x2e3b(%rip),%rcx
1a53(9): mov $0x0,0x60(%rsp)
1a5c(9): mov $0x0,0x68(%rsp)
1a65(3): mov %rsp,%rdx
1a68(4): mov %rax,(%rsp)
1a6c(7): lea 0x2ddc(%rip),%rax
1a73(5): mov %rcx,0x30(%rsp)
1a78(7): lea 0x2e19(%rip),%rcx
1a7f(5): mov %rax,0x8(%rsp)
1a84(7): lea 0x2e3c(%rip),%rax
1a8b(5): mov %rcx,0x40(%rsp)
1a90(7): lea 0x2e0b(%rip),%rcx
1a97(5): mov %rax,0x10(%rsp)
1a9c(7): lea 0x2dbc(%rip),%rax
1aa3(5): mov %rcx,0x50(%rsp)
1aa8(5): mov %rax,0x18(%rsp)
1aad(7): lea 0x2dc1(%rip),%rax
1ab4(5): mov %rax,0x20(%rsp)
1ab9(7): lea 0x2dbf(%rip),%rax
1ac0(5): mov %rax,0x28(%rsp)
1ac5(5): mov %rax,0x38(%rsp)
1aca(5): mov %rax,0x48(%rsp)
1acf(5): mov %rax,0x58(%rsp)
1ad4(4): nop 0x0(%rax)
1ad8(4): add $0x10,%rdx
1adc(3): mov (%rdx),%rdi
1adf(3): test %rdi,%rdi
1ae2(2): jz 0x15(%rip)
1ae4(5): mov $0x9,%ecx
1ae9(3): mov %rbx,%rsi
1aec(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1aee(3): setnbe %al
1af1(2): sbb $0x0,%al
1af3(2): test %al,%al
1af5(2): jnz 0xffffffe3(%rip)
1af7(4): mov 0x8(%rdx),%r12
1afb(2): xor %edi,%edi
1afd(5): mov $0x5,%edx
1b02(7): lea 0x2da3(%rip),%rsi
1b09(3): test %r12,%r12
1b0c(6): jz 0xc7(%rip)
1b12(5): call 0xfffff7ee(%rip)
1b17(7): lea 0x315a(%rip),%rcx
1b1e(7): lea 0x2d9e(%rip),%rdx
1b25(3): mov %rax,%rsi
1b28(5): mov $0x1,%edi
1b2d(2): xor %eax,%eax
1b2f(5): call 0xfffff931(%rip)
1b34(2): xor %esi,%esi
1b36(5): mov $0x5,%edi
1b3b(5): call 0xfffff915(%rip)
1b40(3): test %rax,%rax
1b43(2): jz 0x1e(%rip)
1b45(7): lea 0x2d85(%rip),%rsi
1b4c(5): mov $0x3,%edx
1b51(3): mov %rax,%rdi
1b54(5): call 0xfffff74c(%rip)
1b59(2): test %eax,%eax
1b5b(6): jnz 0x10d(%rip)
1b61(7): lea 0x2d6d(%rip),%rsi
1b68(2): xor %edi,%edi
1b6a(5): mov $0x5,%edx
1b6f(5): call 0xfffff791(%rip)
1b74(7): lea 0x2cc9(%rip),%rcx
1b7b(7): lea 0x30f6(%rip),%rdx
1b82(3): mov %rax,%rsi
1b85(5): mov $0x1,%edi
1b8a(2): xor %eax,%eax
1b8c(5): call 0xfffff8d4(%rip)
1b91(3): cmp %rbx,%r12
1b94(7): lea 0x2cce(%rip),%rcx
1b9b(7): lea 0x36ff(%rip),%rbx
1ba2(4): cmove %rcx,%rbx
1ba6(7): lea 0x313b(%rip),%rsi
1bad(2): xor %edi,%edi
1baf(5): mov $0x5,%edx
1bb4(5): call 0xfffff74c(%rip)
1bb9(3): mov %rbx,%rcx
1bbc(3): mov %rax,%rsi
1bbf(3): mov %r12,%rdx
1bc2(5): mov $0x1,%edi
1bc7(2): xor %eax,%eax
1bc9(5): call 0xfffff897(%rip)
1bce(5): jmp 0xfffffd58(%rip)
1bd3(5): call 0xfffff72d(%rip)
1bd8(7): lea 0x3099(%rip),%rcx
1bdf(7): lea 0x2cdd(%rip),%rdx
1be6(3): mov %rax,%rsi
1be9(5): mov $0x1,%edi
1bee(2): xor %eax,%eax
1bf0(5): call 0xfffff870(%rip)
1bf5(2): xor %esi,%esi
1bf7(5): mov $0x5,%edi
1bfc(5): call 0xfffff854(%rip)
1c01(3): test %rax,%rax
1c04(2): jz 0x1a(%rip)
1c06(7): lea 0x2cc4(%rip),%rsi
1c0d(5): mov $0x3,%edx
1c12(3): mov %rax,%rdi
1c15(5): call 0xfffff68b(%rip)
1c1a(2): test %eax,%eax
1c1c(2): jnz 0x45(%rip)
1c1e(7): lea 0x2cb0(%rip),%rsi
1c25(5): mov $0x5,%edx
1c2a(2): xor %edi,%edi
1c2c(7): lea 0x2c11(%rip),%r12
1c33(7): lea 0x2c2f(%rip),%rbx
1c3a(5): call 0xfffff6c6(%rip)
1c3f(7): lea 0x2bfe(%rip),%rcx
1c46(7): lea 0x302b(%rip),%rdx
1c4d(3): mov %rax,%rsi
1c50(5): mov $0x1,%edi
1c55(2): xor %eax,%eax
1c57(5): call 0xfffff809(%rip)
1c5c(5): jmp 0xffffff4a(%rip)
1c61(7): lea 0x2bdc(%rip),%r12
1c68(7): mov 0x205419(%rip),%r13
1c6f(7): lea 0x302a(%rip),%rsi
1c76(2): xor %edi,%edi
1c78(5): mov $0x5,%edx
1c7d(5): call 0xfffff683(%rip)
1c82(3): mov %r13,%rsi
1c85(3): mov %rax,%rdi
1c88(5): call 0xfffff738(%rip)
1c8d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1ca0(7): mov %rdi,0x205431(%rip)
1ca7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1cb0(7): mov %dil,0x205419(%rip)
1cb7(1): ret near (%rsp)

"close_stdout" :
1cc0(1): push %rbp
1cc1(1): push %rbx
1cc2(4): sub $0x8,%rsp
1cc6(7): mov 0x2053bb(%rip),%rdi
1ccd(5): call 0x2883(%rip)
1cd2(2): test %eax,%eax
1cd4(2): jz 0x18(%rip)
1cd6(5): call 0xfffff5ba(%rip)
1cdb(7): cmp $0x0,0x2053ee(%rip)
1ce2(3): mov %rax,%rbx
1ce5(2): jz 0x1e(%rip)
1ce7(3): cmp $0x20,(%rax)
1cea(2): jnz 0x19(%rip)
1cec(7): mov 0x2053cd(%rip),%rdi
1cf3(5): call 0x285d(%rip)
1cf8(2): test %eax,%eax
1cfa(2): jnz 0x48(%rip)
1cfc(4): add $0x8,%rsp
1d00(1): pop %rbx
1d01(1): pop %rbp
1d02(1): ret near (%rsp)
1d03(7): lea 0x3016(%rip),%rsi
1d0a(2): xor %edi,%edi
1d0c(5): mov $0x5,%edx
1d11(5): call 0xfffff5ef(%rip)
1d16(7): mov 0x2053bb(%rip),%rdi
1d1d(3): mov %rax,%rbp
1d20(3): test %rdi,%rdi
1d23(2): jz 0x2a(%rip)
1d25(5): call 0x1cab(%rip)
1d2a(2): mov (%rbx),%esi
1d2c(7): lea 0x2ff9(%rip),%rdx
1d33(3): mov %rax,%rcx
1d36(3): mov %rbp,%r8
1d39(2): xor %edi,%edi
1d3b(2): xor %eax,%eax
1d3d(5): call 0xfffff733(%rip)
1d42(6): mov 0x2052d0(%rip),%edi
1d48(5): call 0xfffff568(%rip)
1d4d(2): mov (%rbx),%esi
1d4f(7): lea 0x2fda(%rip),%rdx
1d56(3): mov %rax,%rcx
1d59(2): xor %edi,%edi
1d5b(2): xor %eax,%eax
1d5d(5): call 0xfffff713(%rip)
1d62(2): jmp 0xffffffe0(%rip)

"base_name" :
1d70(1): push %rbp
1d71(1): push %rbx
1d72(3): mov %rdi,%rbp
1d75(4): sub $0x8,%rsp
1d79(5): call 0x57(%rip)
1d7e(3): cmp $0x0,(%rax)
1d81(2): jz 0x2f(%rip)
1d83(3): mov %rax,%rbx
1d86(3): mov %rax,%rdi
1d89(5): call 0xa7(%rip)
1d8e(2): xor %edx,%edx
1d90(4): cmp $0x2f,0x0(%rbx,%rax,1)
1d94(3): mov %rbx,%rdi
1d97(3): setz %dl
1d9a(4): add $0x8,%rsp
1d9e(1): pop %rbx
1d9f(1): pop %rbp
1da0(3): add %rdx,%rax
1da3(3): mov %rax,%rsi
1da6(5): jmp 0x26fa(%rip)
1dab(5): nop 0x0(%rax,%rax,1)
1db0(3): mov %rbp,%rdi
1db3(5): call 0x7d(%rip)
1db8(4): add $0x8,%rsp
1dbc(3): mov %rbp,%rdi
1dbf(3): mov %rax,%rsi
1dc2(1): pop %rbx
1dc3(1): pop %rbp
1dc4(5): jmp 0x26dc(%rip)

"last_component" :
1dd0(3): movzx (%rdi),%edx
1dd3(3): mov %rdi,%rax
1dd6(3): cmp $0x2f,%dl
1dd9(2): jnz 0x13(%rip)
1ddb(5): nop 0x0(%rax,%rax,1)
1de0(4): add $0x1,%rax
1de4(3): movzx (%rax),%edx
1de7(3): cmp $0x2f,%dl
1dea(2): jz 0xfffffff6(%rip)
1dec(2): test %dl,%dl
1dee(2): jz 0x3c(%rip)
1df0(3): mov %rax,%rcx
1df3(2): xor %esi,%esi
1df5(2): jmp 0x20(%rip)
1df7(9): nop 0x0(%rax,%rax,1)
1e00(3): test %sil,%sil
1e03(2): jz 0x7(%rip)
1e05(3): mov %rcx,%rax
1e08(2): xor %esi,%esi
1e0a(4): add $0x1,%rcx
1e0e(3): movzx (%rcx),%edx
1e11(2): test %dl,%dl
1e13(2): jz 0x17(%rip)
1e15(3): cmp $0x2f,%dl
1e18(2): jnz 0xffffffe8(%rip)
1e1a(4): add $0x1,%rcx
1e1e(3): movzx (%rcx),%edx
1e21(5): mov $0x1,%esi
1e26(2): test %dl,%dl
1e28(2): jnz 0xffffffed(%rip)
1e2a(2): REP ret near (%rsp)

"base_len" :
1e30(1): push %rbx
1e31(3): mov %rdi,%rbx
1e34(5): call 0xfffff4ec(%rip)
1e39(4): cmp $0x1,%rax
1e3d(2): jbe 0xd(%rip)
1e3f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
1e44(4): lea 0xffffffff(%rax),%rdx
1e48(2): jz 0x10(%rip)
1e4a(1): pop %rbx
1e4b(1): ret near (%rsp)
1e4c(4): nop 0x0(%rax)
1e50(3): mov %rax,%rdx
1e53(5): nop 0x0(%rax,%rax,1)
1e58(4): cmp $0x1,%rdx
1e5c(2): jz 0x14(%rip)
1e5e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
1e63(4): lea 0xffffffff(%rdx),%rax
1e67(2): jz 0xffffffe9(%rip)
1e69(3): mov %rdx,%rax
1e6c(1): pop %rbx
1e6d(1): ret near (%rsp)
1e6e(2): nop 
1e70(5): mov $0x1,%eax
1e75(1): pop %rbx
1e76(1): ret near (%rsp)

"strip_trailing_slashes" :
1e80(1): push %rbp
1e81(1): push %rbx
1e82(3): mov %rdi,%rbp
1e85(4): sub $0x8,%rsp
1e89(5): call 0xffffff47(%rip)
1e8e(3): cmp $0x0,(%rax)
1e91(3): mov %rax,%rbx
1e94(4): cmove %rbp,%rbx
1e98(3): mov %rbx,%rdi
1e9b(5): call 0xffffff95(%rip)
1ea0(3): add %rax,%rbx
1ea3(3): cmp $0x0,(%rbx)
1ea6(3): mov $0x0,(%rbx)
1ea9(3): setnz %al
1eac(4): add $0x8,%rsp
1eb0(1): pop %rbx
1eb1(1): pop %rbp
1eb2(1): ret near (%rsp)

"set_program_name" :
1ec0(3): test %rdi,%rdi
1ec3(1): push %rbx
1ec4(2): jz 0x79(%rip)
1ec6(5): mov $0x2f,%esi
1ecb(3): mov %rdi,%rbx
1ece(5): call 0xfffff4a2(%rip)
1ed3(3): test %rax,%rax
1ed6(2): jz 0x57(%rip)
1ed8(4): lea 0x1(%rax),%r8
1edc(3): mov %r8,%rdx
1edf(3): sub %rbx,%rdx
1ee2(4): cmp $0x6,%rdx
1ee6(2): jle 0x47(%rip)
1ee8(4): lea 0xfffffffa(%rax),%rsi
1eec(7): lea 0x2e7d(%rip),%rdi
1ef3(5): mov $0x7,%ecx
1ef8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1efa(3): setnbe %dl
1efd(3): sbb $0x0,%dl
1f00(2): test %dl,%dl
1f02(2): jnz 0x2b(%rip)
1f04(7): lea 0x2e6d(%rip),%rdi
1f0b(5): mov $0x3,%ecx
1f10(3): mov %r8,%rsi
1f13(3): mov %r8,%rbx
1f16(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1f18(3): setnbe %dl
1f1b(3): sbb $0x0,%dl
1f1e(2): test %dl,%dl
1f20(2): jnz 0xd(%rip)
1f22(4): lea 0x4(%rax),%rbx
1f26(7): mov %rbx,0x205153(%rip)
1f2d(7): mov %rbx,0x2051ac(%rip)
1f34(7): mov %rbx,0x205165(%rip)
1f3b(1): pop %rbx
1f3c(1): ret near (%rsp)
1f3d(7): mov 0x20517c(%rip),%rcx
1f44(7): lea 0x2ded(%rip),%rdi
1f4b(5): mov $0x37,%edx
1f50(5): mov $0x1,%esi
1f55(5): call 0xfffff55b(%rip)
1f5a(5): call 0xfffff326(%rip)

"gettext_quote.part.1" :
1f60(1): push %rbp
1f61(1): push %rbx
1f62(3): mov %rdi,%rbp
1f65(2): mov %esi,%ebx
1f67(4): sub $0x8,%rsp
1f6b(5): call 0x26c5(%rip)
1f70(3): movzx (%rax),%edx
1f73(3): and $0xdf,%edx
1f76(3): cmp $0x55,%dl
1f79(2): jz 0x77(%rip)
1f7b(3): cmp $0x47,%dl
1f7e(2): jz 0x22(%rip)
1f80(7): lea 0x2e04(%rip),%rax
1f87(7): lea 0x2dff(%rip),%rdx
1f8e(3): cmp $0x9,%ebx
1f91(4): cmovne %rdx,%rax
1f95(4): add $0x8,%rsp
1f99(1): pop %rbx
1f9a(1): pop %rbp
1f9b(1): ret near (%rsp)
1f9c(4): nop 0x0(%rax)
1fa0(4): movzx 0x1(%rax),%edx
1fa4(3): and $0xdf,%edx
1fa7(3): cmp $0x42,%dl
1faa(2): jnz 0xffffffd6(%rip)
1fac(4): cmp $0x31,0x2(%rax)
1fb0(2): jnz 0xffffffd0(%rip)
1fb2(4): cmp $0x38,0x3(%rax)
1fb6(2): jnz 0xffffffca(%rip)
1fb8(4): cmp $0x30,0x4(%rax)
1fbc(2): jnz 0xffffffc4(%rip)
1fbe(4): cmp $0x33,0x5(%rax)
1fc2(2): jnz 0xffffffbe(%rip)
1fc4(4): cmp $0x30,0x6(%rax)
1fc8(2): jnz 0xffffffb8(%rip)
1fca(4): cmp $0x0,0x7(%rax)
1fce(2): jnz 0xffffffb2(%rip)
1fd0(4): cmp $0x60,0x0(%rbp)
1fd4(7): lea 0x2da9(%rip),%rax
1fdb(7): lea 0x2da6(%rip),%rdx
1fe2(4): cmovne %rdx,%rax
1fe6(4): add $0x8,%rsp
1fea(1): pop %rbx
1feb(1): pop %rbp
1fec(1): ret near (%rsp)
1fed(3): nop (%rax)
1ff0(4): movzx 0x1(%rax),%edx
1ff4(3): and $0xdf,%edx
1ff7(3): cmp $0x54,%dl
1ffa(2): jnz 0xffffff86(%rip)
1ffc(4): movzx 0x2(%rax),%edx
2000(3): and $0xdf,%edx
2003(3): cmp $0x46,%dl
2006(6): jnz 0xffffff7a(%rip)
200c(4): cmp $0x2d,0x3(%rax)
2010(6): jnz 0xffffff70(%rip)
2016(4): cmp $0x38,0x4(%rax)
201a(6): jnz 0xffffff66(%rip)
2020(4): cmp $0x0,0x5(%rax)
2024(6): jnz 0xffffff5c(%rip)
202a(4): cmp $0x60,0x0(%rbp)
202e(7): lea 0x2d47(%rip),%rax
2035(7): lea 0x2d44(%rip),%rdx
203c(4): cmovne %rdx,%rax
2040(4): add $0x8,%rsp
2044(1): pop %rbx
2045(1): pop %rbp
2046(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2050(2): push %r15
2052(2): push %r14
2054(3): mov %r8d,%r15d
2057(2): push %r13
2059(2): push %r12
205b(3): mov %rdi,%r14
205e(1): push %rbp
205f(1): push %rbx
2060(3): mov %r9d,%ebx
2063(3): mov %rsi,%r13
2066(3): mov %rcx,%rbp
2069(3): and $0x2,%ebx
206c(7): sub $0xb8,%rsp
2073(8): mov 0xf0(%rsp),%rax
207b(5): mov %rdx,0x10(%rsp)
2080(5): mov %r8d,0x8(%rsp)
2085(5): mov %r9d,0x78(%rsp)
208a(5): mov %rax,0x20(%rsp)
208f(8): mov 0xf8(%rsp),%rax
2097(5): mov %rax,0x68(%rsp)
209c(8): mov 0x100(%rsp),%rax
20a4(5): mov %rax,0x60(%rsp)
20a9(9): mov $0x28,%rax
20b2(8): mov %rax,0xa8(%rsp)
20ba(2): xor %eax,%eax
20bc(5): call 0xfffff254(%rip)
20c1(4): cmp $0xa,%r15d
20c5(5): mov %rax,0x58(%rsp)
20ca(6): jnbe 0x11b5(%rip)
20d0(7): lea 0x2d09(%rip),%rcx
20d7(3): mov %r15d,%edx
20da(4): movsxd 0x0(%rcx,%rdx,4),%rax
20de(3): add %rcx,%rax
20e1(2): jmp %rax
20e3(5): mov $0x1,0xe(%rsp)
20e8(5): mov $0x0,0x7c(%rsp)
20ed(3): xor %r12d,%r12d
20f0(9): mov $0x0,0x50(%rsp)
20f9(5): mov $0x1,0xf(%rsp)
20fe(5): mov $0x0,0xd(%rsp)
2103(7): lea 0x2c83(%rip),%rax
210a(9): mov $0x1,0x18(%rsp)
2113(3): xor %r15d,%r15d
2116(8): mov $0x2,0x8(%rsp)
211e(5): mov %rax,0x48(%rsp)
2123(3): xor %r11d,%r11d
2126(3): mov %rbp,%rax
2129(3): mov %r12d,%r8d
212c(3): mov %r11,%rbp
212f(3): mov %rax,%r11
2132(6): nop 0x0(%rax,%rax,1)
2138(3): cmp %rbp,%r11
213b(4): setnz %r12b
213f(4): cmp $0xffffffff,%r11
2143(2): jnz 0xf(%rip)
2145(5): mov 0x10(%rsp),%rax
214a(4): cmp $0x0,0x0(%rax,%rbp,1)
214e(4): setnz %r12b
2152(3): test %r12b,%r12b
2155(6): jz 0x65b(%rip)
215b(5): cmp $0x2,0x8(%rsp)
2160(5): mov 0x10(%rsp),%rdi
2165(4): lea 0x0(%rdi,%rbp,1),%r9
2169(3): setnz %al
216c(4): and 0xd(%rsp),%al
2170(3): mov %eax,%r10d
2173(6): jz 0xad(%rip)
2179(5): mov 0x18(%rsp),%rax
217e(3): test %rax,%rax
2181(6): jz 0x42f(%rip)
2187(4): cmp $0xffffffff,%r11
218b(5): lea 0x0(%rbp,%rax,1),%rbx
2190(2): jnz 0x30(%rip)
2192(4): cmp $0x1,%rax
2196(2): jbe 0x2a(%rip)
2198(5): mov %r8b,0x38(%rsp)
219d(5): mov %r10b,0x30(%rsp)
21a2(5): mov %r9,0x28(%rsp)
21a7(5): call 0xfffff179(%rip)
21ac(6): movzx 0x38(%rsp),%r8d
21b2(6): movzx 0x30(%rsp),%r10d
21b8(3): mov %rax,%r11
21bb(5): mov 0x28(%rsp),%r9
21c0(3): cmp %r11,%rbx
21c3(5): mov %r10b,0x28(%rsp)
21c8(6): jnbe 0x5b8(%rip)
21ce(5): mov 0x18(%rsp),%rdx
21d3(5): mov 0x48(%rsp),%rsi
21d8(3): mov %r9,%rdi
21db(5): mov %r11,0x40(%rsp)
21e0(5): mov %r8b,0x38(%rsp)
21e5(5): mov %r9,0x30(%rsp)
21ea(5): call 0xfffff1c6(%rip)
21ef(2): test %eax,%eax
21f1(5): mov 0x30(%rsp),%r9
21f6(6): movzx 0x38(%rsp),%r8d
21fc(5): mov 0x40(%rsp),%r11
2201(6): jnz 0x57f(%rip)
2207(5): cmp $0x0,0xf(%rsp)
220c(6): movzx 0x28(%rsp),%r10d
2212(6): jnz 0xf83(%rip)
2218(8): nop 0x0(%rax,%rax,1)
2220(4): movzx (%r9),%ebx
2224(3): cmp $0x7e,%bl
2227(6): jnbe 0x321(%rip)
222d(7): lea 0x2bd8(%rip),%rcx
2234(3): movzx %bl,%edx
2237(4): movsxd 0x0(%rcx,%rdx,4),%rax
223b(3): add %rcx,%rax
223e(2): jmp %rax
2240(3): xor %r10d,%r10d
2243(4): cmp $0x1,%r11
2247(3): setnz %al
224a(4): cmp $0xffffffff,%r11
224e(2): jnz 0xe(%rip)
2250(5): mov 0x10(%rsp),%rax
2255(4): cmp $0x0,0x1(%rax)
2259(3): setnz %al
225c(5): cmp $0x2,0x8(%rsp)
2261(3): setz %dl
2264(2): test %al,%al
2266(6): jz 0x252(%rip)
226c(3): xor %r12d,%r12d
226f(2): xor %eax,%eax
2271(7): nop 0x0(%rax)
2278(5): cmp $0x1,0xd(%rsp)
227d(6): jnz 0x115(%rip)
2283(2): test %dl,%dl
2285(6): jnz 0x10d(%rip)
228b(5): mov 0x20(%rsp),%rsi
2290(3): test %rsi,%rsi
2293(2): jz 0x16(%rip)
2295(2): mov %ebx,%edx
2297(3): shr $0x5,%dl
229a(3): movzx %dl,%edx
229d(3): mov 0x0(%rsi,%rdx,4),%edx
22a0(3): bt %ebx,%edx
22a3(6): jb 0x150(%rip)
22a9(3): test %r10b,%r10b
22ac(6): jnz 0x147(%rip)
22b2(3): xor $0x1,%eax
22b5(4): add $0x1,%rbp
22b9(3): and %r8d,%eax
22bc(2): test %al,%al
22be(2): jz 0x22(%rip)
22c0(3): cmp %r15,%r13
22c3(2): jbe 0x7(%rip)
22c5(5): mov $0x27,0x0(%r14,%r15,1)
22ca(4): lea 0x1(%r15),%rax
22ce(3): cmp %rax,%r13
22d1(2): jbe 0x8(%rip)
22d3(6): mov $0x27,0x1(%r14,%r15,1)
22d9(4): add $0x2,%r15
22dd(3): xor %r8d,%r8d
22e0(3): cmp %r13,%r15
22e3(2): jnb 0x6(%rip)
22e5(4): mov %bl,0x0(%r14,%r15,1)
22e9(5): movzx 0xe(%rsp),%edi
22ee(4): add $0x1,%r15
22f2(5): mov $0x0,%eax
22f7(3): test %r12b,%r12b
22fa(3): cmove %eax,%edi
22fd(5): mov %dil,0xe(%rsp)
2302(5): jmp 0xfffffe36(%rip)
2307(9): nop 0x0(%rax,%rax,1)
2310(3): xor %r10d,%r10d
2313(4): mov 0x8(%rsp),%eax
2317(3): cmp $0x2,%eax
231a(6): jz 0x5be(%rip)
2320(3): cmp $0x5,%eax
2323(6): jz 0x575(%rip)
2329(3): cmp $0x2,%eax
232c(5): mov $0x3f,%ebx
2331(3): setz %dl
2334(3): xor %r12d,%r12d
2337(2): xor %eax,%eax
2339(5): jmp 0xffffff3f(%rip)
233e(2): nop 
2340(3): xor %r10d,%r10d
2343(5): cmp $0x2,0x8(%rsp)
2348(6): jz 0x508(%rip)
234e(5): mov %r12b,0x7c(%rsp)
2353(2): xor %edx,%edx
2355(2): xor %eax,%eax
2357(5): mov $0x27,%ebx
235c(5): jmp 0xffffff1c(%rip)
2361(7): nop 0x0(%rax)
2368(5): mov $0x9,%edx
236d(5): mov $0x74,%ebx
2372(5): cmp $0x2,0x8(%rsp)
2377(3): setz %al
237a(4): and 0xf(%rsp),%al
237e(6): jnz 0x150(%rip)
2384(5): cmp $0x0,0xd(%rsp)
2389(2): jnz 0x67(%rip)
238b(2): mov %edx,%ebx
238d(3): xor %r12d,%r12d
2390(2): xor %eax,%eax
2392(5): cmp $0x0,0xf(%rsp)
2397(6): jnz 0xfffffef4(%rip)
239d(5): jmp 0xffffff0c(%rip)
23a2(6): nop 0x0(%rax,%rax,1)
23a8(5): mov $0x8,%edx
23ad(5): mov $0x62,%ebx
23b2(2): jmp 0xffffffd2(%rip)
23b4(4): nop 0x0(%rax)
23b8(5): cmp $0x2,0x8(%rsp)
23bd(6): jz 0x3d3(%rip)
23c3(5): cmp $0x0,0xd(%rsp)
23c8(6): jz 0x218(%rip)
23ce(5): cmp $0x0,0xf(%rsp)
23d3(6): jz 0x20d(%rip)
23d9(6): cmp $0x0,0x18(%rsp)
23df(6): jnz 0x3bc(%rip)
23e5(5): mov $0x5c,%ebx
23ea(6): nop 0x0(%rax,%rax,1)
23f0(3): xor %r12d,%r12d
23f3(5): cmp $0x2,0x8(%rsp)
23f8(3): setz %dl
23fb(5): cmp $0x0,0xf(%rsp)
2400(2): mov %edx,%eax
2402(6): jnz 0x856(%rip)
2408(3): mov %r8d,%eax
240b(3): xor $0x1,%eax
240e(2): and %dl,%al
2410(2): jz 0x31(%rip)
2412(3): cmp %r15,%r13
2415(2): jbe 0x7(%rip)
2417(5): mov $0x27,0x0(%r14,%r15,1)
241c(4): lea 0x1(%r15),%rdx
2420(3): cmp %rdx,%r13
2423(2): jbe 0x8(%rip)
2425(6): mov $0x24,0x1(%r14,%r15,1)
242b(4): lea 0x2(%r15),%rdx
242f(3): cmp %rdx,%r13
2432(2): jbe 0x8(%rip)
2434(6): mov $0x27,0x2(%r14,%r15,1)
243a(4): add $0x3,%r15
243e(3): mov %eax,%r8d
2441(3): cmp %r15,%r13
2444(2): jbe 0x7(%rip)
2446(5): mov $0x5c,0x0(%r14,%r15,1)
244b(4): add $0x1,%r15
244f(4): add $0x1,%rbp
2453(5): jmp 0xfffffe8d(%rip)
2458(8): nop 0x0(%rax,%rax,1)
2460(5): cmp $0x0,0xd(%rsp)
2465(6): jnz 0x1ce(%rip)
246b(2): xor %edx,%edx
246d(5): test $0x1,0x78(%rsp)
2472(6): jz 0xffffff19(%rip)
2478(4): add $0x1,%rbp
247c(5): jmp 0xfffffcbc(%rip)
2481(7): nop 0x0(%rax)
2488(5): cmp $0x2,0x8(%rsp)
248d(3): setz %dl
2490(2): xor %eax,%eax
2492(5): jmp 0xfffffde6(%rip)
2497(9): nop 0x0(%rax,%rax,1)
24a0(5): mov $0x7,%edx
24a5(5): mov $0x61,%ebx
24aa(5): jmp 0xfffffeda(%rip)
24af(1): nop 
24b0(5): cmp $0x2,0x8(%rsp)
24b5(3): setz %dl
24b8(3): test %rbp,%rbp
24bb(6): jnz 0xfffffdb1(%rip)
24c1(5): movzx 0xf(%rsp),%eax
24c6(2): and %dl,%al
24c8(6): jz 0xfffffdb0(%rip)
24ce(3): mov %r11,%rbp
24d1(8): mov $0x2,0x8(%rsp)
24d9(5): jmp 0x700(%rip)
24de(2): nop 
24e0(5): cmp $0x2,0x8(%rsp)
24e5(3): setz %dl
24e8(3): xor %r12d,%r12d
24eb(2): jmp 0xffffffd6(%rip)
24ed(3): nop (%rax)
24f0(5): cmp $0x2,0x8(%rsp)
24f5(5): mov $0x20,%ebx
24fa(3): setz %dl
24fd(2): jmp 0xffffffc4(%rip)
24ff(1): nop 
2500(5): mov $0xd,%edx
2505(5): mov $0x72,%ebx
250a(5): jmp 0xfffffe68(%rip)
250f(1): nop 
2510(5): mov $0xc,%edx
2515(5): mov $0x66,%ebx
251a(5): jmp 0xfffffe6a(%rip)
251f(1): nop 
2520(5): mov $0xb,%edx
2525(5): mov $0x76,%ebx
252a(5): jmp 0xfffffe5a(%rip)
252f(1): nop 
2530(5): mov $0xa,%edx
2535(5): mov $0x6e,%ebx
253a(5): jmp 0xfffffe38(%rip)
253f(1): nop 
2540(3): xor %r10d,%r10d
2543(5): nop 0x0(%rax,%rax,1)
2548(6): cmp $0x1,0x58(%rsp)
254e(6): jnz 0x3aa(%rip)
2554(5): mov %r11,0x38(%rsp)
2559(5): mov %r8b,0x30(%rsp)
255e(5): mov %r10b,0x28(%rsp)
2563(5): call 0xffffef8d(%rip)
2568(3): mov (%rax),%rcx
256b(3): movzx %bl,%edx
256e(6): movzx 0x28(%rsp),%r10d
2574(6): movzx 0x30(%rsp),%r8d
257a(5): mov 0x38(%rsp),%r11
257f(5): mov $0x1,%edi
2584(4): movzx 0x0(%rcx,%rdx,2),%eax
2588(4): and $0x4000,%ax
258c(4): setnz %r12b
2590(3): setz %al
2593(4): and 0xd(%rsp),%al
2597(2): test %al,%al
2599(6): jnz 0x998(%rip)
259f(5): cmp $0x2,0x8(%rsp)
25a4(3): setz %dl
25a7(5): jmp 0xfffffcd1(%rip)
25ac(4): nop 0x0(%rax)
25b0(4): movzx (%r9),%ebx
25b4(3): cmp $0x7e,%bl
25b7(2): jnbe 0xffffff89(%rip)
25b9(7): lea 0x2a48(%rip),%rcx
25c0(3): movzx %bl,%edx
25c3(4): movsxd 0x0(%rcx,%rdx,4),%rax
25c7(3): add %rcx,%rax
25ca(2): jmp %rax
25cc(4): nop 0x0(%rax)
25d0(3): xor %r10d,%r10d
25d3(5): cmp $0x0,0xd(%rsp)
25d8(6): jnz 0xfffffdf6(%rip)
25de(2): nop 
25e0(5): mov $0x5c,%edx
25e5(5): mov $0x5c,%ebx
25ea(5): jmp 0xfffffd9a(%rip)
25ef(1): nop 
25f0(5): mov $0xc,%edx
25f5(3): xor %r10d,%r10d
25f8(5): mov $0x66,%ebx
25fd(5): jmp 0xfffffd87(%rip)
2602(6): nop 0x0(%rax,%rax,1)
2608(5): mov $0xa,%edx
260d(3): xor %r10d,%r10d
2610(5): mov $0x6e,%ebx
2615(5): jmp 0xfffffd5d(%rip)
261a(6): nop 0x0(%rax,%rax,1)
2620(5): mov $0x61,%ebx
2625(5): jmp 0xfffffdcb(%rip)
262a(6): nop 0x0(%rax,%rax,1)
2630(3): xor %r10d,%r10d
2633(5): cmp $0x2,0x8(%rsp)
2638(3): setz %dl
263b(5): cmp $0x0,0xf(%rsp)
2640(6): jnz 0xb9a(%rip)
2646(3): mov %r8d,%eax
2649(3): mov %r15,%rcx
264c(3): xor $0x1,%eax
264f(2): and %dl,%al
2651(2): jz 0x2f(%rip)
2653(3): cmp %r15,%r13
2656(2): jbe 0x7(%rip)
2658(5): mov $0x27,0x0(%r14,%r15,1)
265d(4): lea 0x1(%r15),%rcx
2661(3): cmp %rcx,%r13
2664(2): jbe 0x8(%rip)
2666(6): mov $0x24,0x1(%r14,%r15,1)
266c(4): lea 0x2(%r15),%rcx
2670(3): cmp %rcx,%r13
2673(6): jnbe 0x636(%rip)
2679(4): lea 0x3(%r15),%rcx
267d(3): mov %eax,%r8d
2680(3): cmp %rcx,%r13
2683(2): jbe 0x7(%rip)
2685(5): mov $0x5c,0x0(%r14,%rcx,1)
268a(5): cmp $0x2,0x8(%rsp)
268f(4): lea 0x1(%rcx),%r15
2693(6): jz 0x606(%rip)
2699(4): lea 0x1(%rbp),%rax
269d(3): cmp %r11,%rax
26a0(2): jnb 0x1b(%rip)
26a2(5): mov 0x10(%rsp),%rax
26a7(5): movzx 0x1(%rax,%rbp,1),%eax
26ac(4): mov %al,0x28(%rsp)
26b0(3): sub $0x30,%eax
26b3(2): cmp $0x9,%al
26b5(6): jbe 0x834(%rip)
26bb(3): mov %r12d,%eax
26be(5): mov $0x30,%ebx
26c3(3): xor %r12d,%r12d
26c6(5): jmp 0xfffffbb2(%rip)
26cb(5): nop 0x0(%rax,%rax,1)
26d0(5): cmp $0x2,0x8(%rsp)
26d5(3): mov %r10d,%r12d
26d8(3): setz %dl
26db(3): xor %r10d,%r10d
26de(2): xor %eax,%eax
26e0(5): jmp 0xfffffb98(%rip)
26e5(3): nop (%rax)
26e8(5): cmp $0x2,0x8(%rsp)
26ed(3): setz %dl
26f0(3): xor %r10d,%r10d
26f3(5): jmp 0xfffffdc5(%rip)
26f8(8): nop 0x0(%rax,%rax,1)
2700(5): cmp $0x2,0x8(%rsp)
2705(3): setz %dl
2708(3): xor %r10d,%r10d
270b(3): xor %r12d,%r12d
270e(5): jmp 0xfffffdb3(%rip)
2713(5): nop 0x0(%rax,%rax,1)
2718(5): cmp $0x2,0x8(%rsp)
271d(3): mov %r10d,%r12d
2720(5): mov $0x20,%ebx
2725(3): setz %dl
2728(3): xor %r10d,%r10d
272b(5): jmp 0xfffffd96(%rip)
2730(5): mov $0xd,%edx
2735(3): xor %r10d,%r10d
2738(5): mov $0x72,%ebx
273d(5): jmp 0xfffffc35(%rip)
2742(6): nop 0x0(%rax,%rax,1)
2748(5): mov $0x76,%ebx
274d(5): jmp 0xfffffca3(%rip)
2752(6): nop 0x0(%rax,%rax,1)
2758(5): mov $0x9,%edx
275d(3): xor %r10d,%r10d
2760(5): mov $0x74,%ebx
2765(5): jmp 0xfffffc0d(%rip)
276a(6): nop 0x0(%rax,%rax,1)
2770(5): mov $0x62,%ebx
2775(5): jmp 0xfffffc7b(%rip)
277a(6): nop 0x0(%rax,%rax,1)
2780(3): xor %r10d,%r10d
2783(5): jmp 0xfffffa9d(%rip)
2788(8): nop 0x0(%rax,%rax,1)
2790(5): cmp $0x0,0xf(%rsp)
2795(6): jnz 0x96b(%rip)
279b(4): add $0x1,%rbp
279f(3): mov %r8d,%eax
27a2(3): xor %r12d,%r12d
27a5(5): mov $0x5c,%ebx
27aa(5): jmp 0xfffffb12(%rip)
27af(1): nop 
27b0(5): cmp $0x2,0x8(%rsp)
27b5(5): movzx 0xf(%rsp),%ebx
27ba(3): mov %r8d,%r12d
27bd(3): mov %r11,%rbp
27c0(3): setz %dl
27c3(2): mov %ebx,%eax
27c5(3): test %r15,%r15
27c8(3): setz %cl
27cb(2): and %edx,%eax
27cd(2): and %cl,%al
27cf(6): jnz 0xa67(%rip)
27d5(2): mov %ebx,%eax
27d7(3): xor $0x1,%eax
27da(2): and %al,%dl
27dc(6): jz 0x970(%rip)
27e2(5): cmp $0x0,0x7c(%rsp)
27e7(6): jz 0x963(%rip)
27ed(5): cmp $0x0,0xe(%rsp)
27f2(6): jnz 0x9fb(%rip)
27f8(3): test %r13,%r13
27fb(3): setz %al
27fe(6): cmp $0x0,0x50(%rsp)
2804(3): setnz %dl
2807(2): and %dl,%al
2809(6): jz 0xa23(%rip)
280f(5): mov 0x50(%rsp),%r13
2814(7): lea 0x2572(%rip),%rbx
281b(4): mov $0x27,(%r14)
281f(8): mov $0x2,0x8(%rsp)
2827(6): mov $0x1,%r15d
282d(9): mov $0x1,0x18(%rsp)
2836(5): mov $0x0,0xf(%rsp)
283b(5): mov %rbx,0x48(%rsp)
2840(4): mov %al,0x7c(%rsp)
2844(5): jmp 0xfffff8df(%rip)
2849(7): nop 0x0(%rax)
2850(5): cmp $0x0,0xf(%rsp)
2855(6): jnz 0x8ab(%rip)
285b(3): test %r13,%r13
285e(6): jz 0x402(%rip)
2864(2): xor %edx,%edx
2866(6): cmp $0x0,0x50(%rsp)
286c(6): jnz 0x3f4(%rip)
2872(5): mov %r13,0x50(%rsp)
2877(4): add $0x3,%r15
287b(2): xor %eax,%eax
287d(5): mov %r12b,0x7c(%rsp)
2882(3): xor %r8d,%r8d
2885(3): mov %rdx,%r13
2888(5): mov $0x27,%ebx
288d(5): jmp 0xfffffa1c(%rip)
2892(6): nop 0x0(%rax,%rax,1)
2898(5): test $0x4,0x78(%rsp)
289d(2): jz 0x23(%rip)
289f(4): lea 0x2(%rbp),%rcx
28a3(3): cmp %r11,%rcx
28a6(2): jnb 0x1a(%rip)
28a8(5): mov 0x10(%rsp),%rax
28ad(5): cmp $0x3f,0x1(%rax,%rbp,1)
28b2(6): jz 0x790(%rip)
28b8(8): nop 0x0(%rax,%rax,1)
28c0(2): xor %edx,%edx
28c2(3): xor %r12d,%r12d
28c5(2): xor %eax,%eax
28c7(5): mov $0x3f,%ebx
28cc(5): jmp 0xfffff9ac(%rip)
28d1(7): nop 0x0(%rax)
28d8(5): cmp $0x0,0xf(%rsp)
28dd(6): jnz 0x823(%rip)
28e3(3): xor %r12d,%r12d
28e6(2): xor %eax,%eax
28e8(5): mov $0x3f,%ebx
28ed(5): jmp 0xfffff9bc(%rip)
28f2(6): nop 0x0(%rax,%rax,1)
28f8(8): lea 0xa0(%rsp),%rax
2900(4): cmp $0xffffffff,%r11
2904(c): mov $0x0,0xa0(%rsp)
2910(5): mov %rax,0x28(%rsp)
2915(2): jnz 0x2f(%rip)
2917(5): mov 0x10(%rsp),%rdi
291c(5): mov %r8b,0x40(%rsp)
2921(5): mov %r10b,0x38(%rsp)
2926(5): mov %r9,0x30(%rsp)
292b(5): call 0xffffe9f5(%rip)
2930(6): movzx 0x40(%rsp),%r8d
2936(6): movzx 0x38(%rsp),%r10d
293c(3): mov %rax,%r11
293f(5): mov 0x30(%rsp),%r9
2944(8): lea 0x9c(%rsp),%rax
294c(2): xor %ecx,%ecx
294e(4): mov %bl,0x7e(%rsp)
2952(5): mov %r8b,0x7d(%rsp)
2957(3): mov %rcx,%rbx
295a(8): mov %r9,0x88(%rsp)
2962(5): mov %rax,0x38(%rsp)
2967(5): mov %r10b,0x7f(%rsp)
296c(8): mov %r15,0x80(%rsp)
2974(5): mov %r14,0x40(%rsp)
2979(5): mov %r13,0x70(%rsp)
297e(5): mov %r11,0x30(%rsp)
2983(5): mov 0x10(%rsp),%rax
2988(5): lea 0x0(%rbp,%rbx,1),%r14
298d(5): mov 0x30(%rsp),%rdx
2992(5): mov 0x28(%rsp),%rcx
2997(5): mov 0x38(%rsp),%rdi
299c(4): lea 0x0(%rax,%r14,1),%r13
29a0(3): sub %r14,%rdx
29a3(3): mov %r13,%rsi
29a6(5): call 0x1b1a(%rip)
29ab(3): test %rax,%rax
29ae(3): mov %rax,%r15
29b1(2): jz 0x50(%rip)
29b3(4): cmp $0xffffffff,%rax
29b7(6): jz 0x61e(%rip)
29bd(4): cmp $0xfffffffe,%rax
29c1(6): jz 0x5a0(%rip)
29c7(5): cmp $0x2,0x8(%rsp)
29cc(3): setz %al
29cf(4): and 0xf(%rsp),%al
29d3(6): jnz 0x19d(%rip)
29d9(7): mov 0x9c(%rsp),%edi
29e0(5): call 0xffffeb00(%rip)
29e5(5): mov 0x28(%rsp),%rdi
29ea(2): test %eax,%eax
29ec(5): mov $0x0,%eax
29f1(4): cmove %eax,%r12d
29f5(3): add %r15,%rbx
29f8(5): call 0xffffead8(%rip)
29fd(2): test %eax,%eax
29ff(2): jz 0xffffff84(%rip)
2a01(3): mov %r12d,%edx
2a04(3): mov %rbx,%rdi
2a07(6): movzx 0x7d(%rsp),%r8d
2a0d(3): xor $0x1,%edx
2a10(5): movzx 0x7e(%rsp),%ebx
2a15(6): movzx 0x7f(%rsp),%r10d
2a1b(4): and 0xd(%rsp),%dl
2a1f(8): mov 0x80(%rsp),%r15
2a27(5): mov 0x40(%rsp),%r14
2a2c(5): mov 0x70(%rsp),%r13
2a31(5): mov 0x30(%rsp),%r11
2a36(4): cmp $0x1,%rdi
2a3a(6): jbe 0x601(%rip)
2a40(3): mov %rdi,%rcx
2a43(2): xor %esi,%esi
2a45(6): movzx 0xf(%rsp),%r9d
2a4b(3): add %rbp,%rcx
2a4e(5): mov 0x10(%rsp),%rdi
2a53(5): jmp 0xbb(%rip)
2a58(8): nop 0x0(%rax,%rax,1)
2a60(5): cmp $0x2,0x8(%rsp)
2a65(3): setz %al
2a68(3): test %r9b,%r9b
2a6b(6): jnz 0x4b5(%rip)
2a71(3): mov %r8d,%esi
2a74(3): xor $0x1,%esi
2a77(3): and %sil,%al
2a7a(2): jz 0x31(%rip)
2a7c(3): cmp %r15,%r13
2a7f(2): jbe 0x7(%rip)
2a81(5): mov $0x27,0x0(%r14,%r15,1)
2a86(4): lea 0x1(%r15),%rsi
2a8a(3): cmp %rsi,%r13
2a8d(2): jbe 0x8(%rip)
2a8f(6): mov $0x24,0x1(%r14,%r15,1)
2a95(4): lea 0x2(%r15),%rsi
2a99(3): cmp %rsi,%r13
2a9c(2): jbe 0x8(%rip)
2a9e(6): mov $0x27,0x2(%r14,%r15,1)
2aa4(4): add $0x3,%r15
2aa8(3): mov %eax,%r8d
2aab(3): cmp %r15,%r13
2aae(2): jbe 0x7(%rip)
2ab0(5): mov $0x5c,0x0(%r14,%r15,1)
2ab5(4): lea 0x1(%r15),%rax
2ab9(3): cmp %rax,%r13
2abc(2): jbe 0xf(%rip)
2abe(2): mov %ebx,%eax
2ac0(3): shr $0x6,%al
2ac3(3): add $0x30,%eax
2ac6(5): mov %al,0x1(%r14,%r15,1)
2acb(4): lea 0x2(%r15),%rax
2acf(3): cmp %rax,%r13
2ad2(2): jbe 0x12(%rip)
2ad4(2): mov %ebx,%eax
2ad6(3): shr $0x3,%al
2ad9(3): and $0x7,%eax
2adc(3): add $0x30,%eax
2adf(5): mov %al,0x2(%r14,%r15,1)
2ae4(3): and $0x7,%ebx
2ae7(4): add $0x1,%rbp
2aeb(4): add $0x3,%r15
2aef(3): add $0x30,%ebx
2af2(3): cmp %rcx,%rbp
2af5(6): jnb 0xfffff7eb(%rip)
2afb(2): mov %edx,%esi
2afd(3): cmp %r15,%r13
2b00(2): jbe 0x6(%rip)
2b02(4): mov %bl,0x0(%r14,%r15,1)
2b06(4): movzx 0x0(%rdi,%rbp,1),%ebx
2b0a(4): add $0x1,%r15
2b0e(2): test %dl,%dl
2b10(6): jnz 0xffffff50(%rip)
2b16(2): mov %esi,%eax
2b18(3): xor $0x1,%eax
2b1b(3): and %r8d,%eax
2b1e(3): test %r10b,%r10b
2b21(2): jz 0x10(%rip)
2b23(3): cmp %r15,%r13
2b26(2): jbe 0x7(%rip)
2b28(5): mov $0x5c,0x0(%r14,%r15,1)
2b2d(4): add $0x1,%r15
2b31(4): add $0x1,%rbp
2b35(3): cmp %rcx,%rbp
2b38(6): jnb 0xfffff784(%rip)
2b3e(2): test %al,%al
2b40(6): jz 0x3fe(%rip)
2b46(3): cmp %r15,%r13
2b49(2): jbe 0x7(%rip)
2b4b(5): mov $0x27,0x0(%r14,%r15,1)
2b50(4): lea 0x1(%r15),%rax
2b54(3): cmp %rax,%r13
2b57(2): jbe 0x8(%rip)
2b59(6): mov $0x27,0x1(%r14,%r15,1)
2b5f(4): add $0x2,%r15
2b63(3): xor %r10d,%r10d
2b66(3): xor %r8d,%r8d
2b69(2): jmp 0xffffff94(%rip)
2b6b(5): nop 0x0(%rax,%rax,1)
2b70(4): cmp $0x1,%r15
2b74(6): jz 0xfffffe65(%rip)
2b7a(5): mov 0x10(%rsp),%rdi
2b7f(4): lea 0x0(%rdi,%r15,1),%rcx
2b83(5): lea 0x1(%rdi,%r14,1),%rdx
2b88(4): lea 0x0(%rcx,%r14,1),%r8
2b8c(2): jmp 0x11(%rip)
2b8e(2): nop 
2b90(4): add $0x1,%rdx
2b94(3): cmp %rdx,%r8
2b97(6): jz 0xfffffe42(%rip)
2b9d(3): movzx (%rdx),%ecx
2ba0(3): sub $0x5b,%ecx
2ba3(3): cmp $0x21,%cl
2ba6(2): jnbe 0xffffffea(%rip)
2ba8(5): mov $0x1,%esi
2bad(3): shl/sal %cl,%rsi
2bb0(3): mov %rsi,%rcx
2bb3(a): mov $0x8589934635,%rsi
2bbd(3): test %rsi,%rcx
2bc0(2): jz 0xffffffd0(%rip)
2bc2(5): mov 0x40(%rsp),%r14
2bc7(5): mov 0x70(%rsp),%r13
2bcc(5): mov 0x30(%rsp),%rbp
2bd1(8): mov $0x2,0x8(%rsp)
2bd9(5): cmp $0x0,0xd(%rsp)
2bde(2): jz 0x12(%rip)
2be0(2): test %al,%al
2be2(5): mov $0x4,%eax
2be7(5): cmove 0x8(%rsp),%eax
2bec(4): mov %eax,0x8(%rsp)
2bf0(4): sub $0x8,%rsp
2bf4(3): mov %rbp,%rcx
2bf7(3): mov %r13,%rsi
2bfa(4): push 0x68(%rsp)
2bfe(4): push 0x78(%rsp)
2c02(3): mov %r14,%rdi
2c05(2): push $0x0
2c07(8): mov 0x98(%rsp),%r9d
2c0f(5): mov 0x28(%rsp),%r8d
2c14(5): mov 0x30(%rsp),%rdx
2c19(4): and $0xfd,%r9d
2c1d(5): call 0xfffff433(%rip)
2c22(4): add $0x20,%rsp
2c26(3): mov %rax,%r15
2c29(8): mov 0xa8(%rsp),%rbx
2c31(9): xor $0x28,%rbx
2c3a(3): mov %r15,%rax
2c3d(6): jnz 0x606(%rip)
2c43(7): add $0xb8,%rsp
2c4a(1): pop %rbx
2c4b(1): pop %rbp
2c4c(2): pop %r12
2c4e(2): pop %r13
2c50(2): pop %r14
2c52(2): pop %r15
2c54(1): ret near (%rsp)
2c55(3): nop (%rax)
2c58(3): mov %r11,%rbp
2c5b(5): jmp 0xffffff7e(%rip)
2c60(3): cmp %r15,%r13
2c63(2): jbe 0x7(%rip)
2c65(5): mov $0x27,0x0(%r14,%r15,1)
2c6a(4): lea 0x1(%r15),%rax
2c6e(3): cmp %rax,%r13
2c71(2): jbe 0x8(%rip)
2c73(6): mov $0x5c,0x1(%r14,%r15,1)
2c79(4): lea 0x2(%r15),%rax
2c7d(3): cmp %rax,%r13
2c80(6): jbe 0x5f2(%rip)
2c86(3): mov %r13,%rdx
2c89(6): mov $0x27,0x2(%r14,%r15,1)
2c8f(5): mov 0x50(%rsp),%r13
2c94(5): jmp 0xfffffbde(%rip)
2c99(3): mov %r12d,%eax
2c9c(5): mov $0x30,%ebx
2ca1(3): xor %r12d,%r12d
2ca4(5): jmp 0xfffff605(%rip)
2ca9(6): mov $0x27,0x2(%r14,%r15,1)
2caf(5): jmp 0xfffff9ca(%rip)
2cb4(2): test %ebx,%ebx
2cb6(6): jnz 0xfffff42d(%rip)
2cbc(5): mov $0x1,0xd(%rsp)
2cc1(3): test %r13,%r13
2cc4(6): jnz 0x596(%rip)
2cca(7): lea 0x20bc(%rip),%rax
2cd1(9): mov $0x0,0x50(%rsp)
2cda(5): mov $0x1,0xe(%rsp)
2cdf(5): mov $0x0,0x7c(%rsp)
2ce4(3): xor %r12d,%r12d
2ce7(5): mov $0x0,0xf(%rsp)
2cec(9): mov $0x1,0x18(%rsp)
2cf5(5): mov %rax,0x48(%rsp)
2cfa(6): mov $0x1,%r15d
2d00(8): mov $0x2,0x8(%rsp)
2d08(5): jmp 0xfffff41b(%rip)
2d0d(3): nop (%rax)
2d10(2): test %ebx,%ebx
2d12(6): jnz 0x3fb(%rip)
2d18(3): test %r13,%r13
2d1b(6): jz 0x22b(%rip)
2d21(4): mov $0x22,(%r14)
2d25(5): mov $0x1,0xe(%rsp)
2d2a(3): xor %r12d,%r12d
2d2d(5): mov $0x0,0x7c(%rsp)
2d32(9): mov $0x0,0x50(%rsp)
2d3b(7): lea 0x2049(%rip),%rax
2d42(5): mov $0x0,0xf(%rsp)
2d47(5): mov $0x1,0xd(%rsp)
2d4c(9): mov $0x1,0x18(%rsp)
2d55(6): mov $0x1,%r15d
2d5b(5): mov %rax,0x48(%rsp)
2d60(5): jmp 0xfffff3c3(%rip)
2d65(7): lea 0x201f(%rip),%rax
2d6c(5): mov $0x1,0xe(%rsp)
2d71(5): mov $0x0,0x7c(%rsp)
2d76(3): xor %r12d,%r12d
2d79(9): mov $0x0,0x50(%rsp)
2d82(5): mov $0x1,0xf(%rsp)
2d87(5): mov $0x1,0xd(%rsp)
2d8c(9): mov $0x1,0x18(%rsp)
2d95(3): xor %r15d,%r15d
2d98(5): mov %rax,0x48(%rsp)
2d9d(8): mov $0x5,0x8(%rsp)
2da5(5): jmp 0xfffff37e(%rip)
2daa(5): mov $0x1,0xe(%rsp)
2daf(5): mov $0x0,0x7c(%rsp)
2db4(3): xor %r12d,%r12d
2db7(9): mov $0x0,0x50(%rsp)
2dc0(5): mov $0x0,0xf(%rsp)
2dc5(3): xor %r15d,%r15d
2dc8(5): mov $0x1,0xd(%rsp)
2dcd(9): mov $0x0,0x18(%rsp)
2dd6(9): mov $0x0,0x48(%rsp)
2ddf(5): jmp 0xfffff344(%rip)
2de4(5): cmp $0xa,0x8(%rsp)
2de9(2): jz 0x58(%rip)
2deb(7): lea 0x1f9d(%rip),%rsi
2df2(2): xor %edi,%edi
2df4(5): mov $0x5,%edx
2df9(5): call 0xffffe507(%rip)
2dfe(3): mov %rax,%rcx
2e01(5): mov %rax,0x68(%rsp)
2e06(7): lea 0x1f82(%rip),%rax
2e0d(3): cmp %rax,%rcx
2e10(6): jz 0x39e(%rip)
2e16(7): lea 0x1f70(%rip),%rsi
2e1d(2): xor %edi,%edi
2e1f(5): mov $0x5,%edx
2e24(5): call 0xffffe4dc(%rip)
2e29(3): mov %rax,%rcx
2e2c(5): mov %rax,0x60(%rsp)
2e31(7): lea 0x1f55(%rip),%rax
2e38(3): cmp %rax,%rcx
2e3b(6): jz 0x389(%rip)
2e41(3): xor %r15d,%r15d
2e44(2): test %ebx,%ebx
2e46(6): jz 0x1c7(%rip)
2e4c(2): test %ebx,%ebx
2e4e(5): mov 0x60(%rsp),%rbx
2e53(5): setnz 0xf(%rsp)
2e58(3): xor %r12d,%r12d
2e5b(3): mov %rbx,%rdi
2e5e(5): call 0xffffe4c2(%rip)
2e63(5): mov %rbx,0x48(%rsp)
2e68(5): mov %rax,0x18(%rsp)
2e6d(5): mov $0x1,0xe(%rsp)
2e72(5): mov $0x0,0x7c(%rsp)
2e77(9): mov $0x0,0x50(%rsp)
2e80(5): mov $0x1,0xd(%rsp)
2e85(5): jmp 0xfffff29e(%rip)
2e8a(5): mov $0x1,0xe(%rsp)
2e8f(5): mov $0x0,0x7c(%rsp)
2e94(3): xor %r12d,%r12d
2e97(9): mov $0x0,0x50(%rsp)
2ea0(5): mov $0x0,0xf(%rsp)
2ea5(3): xor %r15d,%r15d
2ea8(5): mov $0x0,0xd(%rsp)
2ead(9): mov $0x0,0x18(%rsp)
2eb6(9): mov $0x0,0x48(%rsp)
2ebf(5): jmp 0xfffff264(%rip)
2ec4(5): mov $0x1,0xe(%rsp)
2ec9(5): mov $0x0,0x7c(%rsp)
2ece(3): xor %r12d,%r12d
2ed1(9): mov $0x0,0x50(%rsp)
2eda(5): mov $0x1,0xf(%rsp)
2edf(5): mov $0x1,0xd(%rsp)
2ee4(5): jmp 0xfffff21f(%rip)
2ee9(3): cmp %r15,%r13
2eec(2): jbe 0x7(%rip)
2eee(5): mov $0x30,0x0(%r14,%r15,1)
2ef3(4): lea 0x2(%rcx),%rax
2ef7(3): cmp %rax,%r13
2efa(2): jbe 0x8(%rip)
2efc(6): mov $0x30,0x2(%r14,%rcx,1)
2f02(3): mov %r12d,%eax
2f05(4): lea 0x3(%rcx),%r15
2f09(3): xor %r12d,%r12d
2f0c(5): mov $0x30,%ebx
2f11(5): jmp 0xfffff367(%rip)
2f16(a): nop 0x0(%rax,%rax,1)
2f20(5): movzx 0xf(%rsp),%ebx
2f25(3): mov %r11,%rbp
2f28(4): mov %bl,0xd(%rsp)
2f2c(5): jmp 0xfffffcad(%rip)
2f31(5): movzx 0xd(%rsp),%edx
2f36(3): xor %r12d,%r12d
2f39(5): jmp 0xfffffb07(%rip)
2f3e(3): xor %r10d,%r10d
2f41(5): jmp 0xfffffbbc(%rip)
2f46(9): mov $0x0,0x50(%rsp)
2f4f(5): mov $0x1,0xe(%rsp)
2f54(3): xor %r12d,%r12d
2f57(5): mov $0x0,0x7c(%rsp)
2f5c(5): jmp 0xfffffddf(%rip)
2f61(5): mov 0x30(%rsp),%r11
2f66(3): mov %r14,%rsi
2f69(3): mov %r13,%rcx
2f6c(3): mov %rbx,%rax
2f6f(3): mov %rbx,%rdi
2f72(6): movzx 0x7d(%rsp),%r8d
2f78(5): movzx 0x7e(%rsp),%ebx
2f7d(8): mov 0x88(%rsp),%r9
2f85(3): cmp %r11,%rsi
2f88(6): movzx 0x7f(%rsp),%r10d
2f8e(8): mov 0x80(%rsp),%r15
2f96(5): mov 0x40(%rsp),%r14
2f9b(5): mov 0x70(%rsp),%r13
2fa0(2): jnb 0x28(%rip)
2fa2(3): cmp $0x0,(%rcx)
2fa5(2): jnz 0x12(%rip)
2fa7(2): jmp 0x21(%rip)
2fa9(7): nop 0x0(%rax)
2fb0(5): cmp $0x0,0x0(%r9,%rax,1)
2fb5(2): jz 0x10(%rip)
2fb7(4): add $0x1,%rax
2fbb(5): lea 0x0(%rbp,%rax,1),%rdx
2fc0(3): cmp %rdx,%r11
2fc3(2): jnbe 0xffffffed(%rip)
2fc5(3): mov %rax,%rdi
2fc8(5): movzx 0xd(%rsp),%edx
2fcd(3): xor %r12d,%r12d
2fd0(5): jmp 0xfffffa66(%rip)
2fd5(3): mov %rbx,%rdi
2fd8(6): movzx 0x7d(%rsp),%r8d
2fde(5): movzx 0x7e(%rsp),%ebx
2fe3(6): movzx 0x7f(%rsp),%r10d
2fe9(8): mov 0x80(%rsp),%r15
2ff1(3): xor %r12d,%r12d
2ff4(5): mov 0x40(%rsp),%r14
2ff9(5): mov 0x70(%rsp),%r13
2ffe(5): mov 0x30(%rsp),%r11
3003(5): movzx 0xd(%rsp),%edx
3008(5): jmp 0xfffffa2e(%rip)
300d(5): mov 0x68(%rsp),%rdx
3012(3): movzx (%rdx),%eax
3015(2): test %al,%al
3017(6): jz 0xfffffe35(%rip)
301d(3): nop (%rax)
3020(3): cmp %r15,%r13
3023(2): jbe 0x6(%rip)
3025(4): mov %al,0x0(%r14,%r15,1)
3029(4): add $0x1,%r15
302d(5): movzx 0x0(%rdx,%r15,1),%eax
3032(2): test %al,%al
3034(2): jnz 0xffffffec(%rip)
3036(5): jmp 0xfffffe16(%rip)
303b(2): mov %edx,%eax
303d(5): jmp 0xfffff55a(%rip)
3042(4): movzx 0x0(%rax,%rcx,1),%ebx
3046(3): cmp $0x3e,%bl
3049(6): jnbe 0xfffff877(%rip)
304f(a): mov $0x8070630310989004800,%rax
3059(4): bt %rbx,%rax
305d(6): jnb 0xfffff863(%rip)
3063(5): cmp $0x0,0xf(%rsp)
3068(6): jnz 0x1ea(%rip)
306e(3): cmp %r15,%r13
3071(2): jbe 0x7(%rip)
3073(5): mov $0x3f,0x0(%r14,%r15,1)
3078(4): lea 0x1(%r15),%rax
307c(3): cmp %rax,%r13
307f(2): jbe 0x8(%rip)
3081(6): mov $0x22,0x1(%r14,%r15,1)
3087(4): lea 0x2(%r15),%rax
308b(3): cmp %rax,%r13
308e(2): jbe 0x8(%rip)
3090(6): mov $0x22,0x2(%r14,%r15,1)
3096(4): lea 0x3(%r15),%rax
309a(3): cmp %rax,%r13
309d(2): jbe 0x8(%rip)
309f(6): mov $0x3f,0x3(%r14,%r15,1)
30a5(4): add $0x4,%r15
30a9(2): xor %edx,%edx
30ab(3): xor %r12d,%r12d
30ae(2): xor %eax,%eax
30b0(3): mov %rcx,%rbp
30b3(5): jmp 0xfffff1c5(%rip)
30b8(2): test %ebx,%ebx
30ba(6): jz 0x18e(%rip)
30c0(7): lea 0x1cc6(%rip),%rax
30c7(5): mov $0x1,0xe(%rsp)
30cc(5): mov $0x0,0x7c(%rsp)
30d1(3): xor %r12d,%r12d
30d4(9): mov $0x0,0x50(%rsp)
30dd(5): mov $0x1,0xf(%rsp)
30e2(5): mov $0x0,0xd(%rsp)
30e7(9): mov $0x1,0x18(%rsp)
30f0(3): xor %r15d,%r15d
30f3(5): mov %rax,0x48(%rsp)
30f8(5): jmp 0xfffff02b(%rip)
30fd(3): nop (%rax)
3100(3): mov %r11,%rbp
3103(5): movzx 0xf(%rsp),%eax
3108(5): jmp 0xfffffad1(%rip)
310d(7): lea 0x1c77(%rip),%rax
3114(5): mov $0x1,0xe(%rsp)
3119(5): mov $0x0,0x7c(%rsp)
311e(3): xor %r12d,%r12d
3121(9): mov $0x0,0x50(%rsp)
312a(5): mov $0x1,0xf(%rsp)
312f(5): mov $0x1,0xd(%rsp)
3134(9): mov $0x1,0x18(%rsp)
313d(3): xor %r15d,%r15d
3140(5): mov %rax,0x48(%rsp)
3145(5): jmp 0xffffefde(%rip)
314a(2): mov %edx,%eax
314c(5): mov 0x48(%rsp),%rbx
3151(3): test %rbx,%rbx
3154(2): jz 0x2e(%rip)
3156(2): test %al,%al
3158(2): jz 0x2a(%rip)
315a(3): movzx (%rbx),%ecx
315d(3): mov %rbx,%rax
3160(2): test %cl,%cl
3162(2): jz 0x20(%rip)
3164(3): mov %r15,%rdx
3167(3): sub %r15,%rax
316a(3): cmp %rdx,%r13
316d(2): jbe 0x6(%rip)
316f(4): mov %cl,0x0(%r14,%rdx,1)
3173(4): add $0x1,%rdx
3177(4): movzx 0x0(%rax,%rdx,1),%ecx
317b(2): test %cl,%cl
317d(2): jnz 0xffffffed(%rip)
317f(3): mov %rdx,%r15
3182(3): cmp %r15,%r13
3185(6): jbe 0xfffffaa4(%rip)
318b(5): mov $0x0,0x0(%r14,%r15,1)
3190(5): jmp 0xfffffa99(%rip)
3195(5): cmp $0x2,0x8(%rsp)
319a(5): movzx 0xf(%rsp),%ebx
319f(3): mov %r11,%rbp
31a2(3): setz %al
31a5(4): mov %bl,0xd(%rsp)
31a9(5): jmp 0xfffffa30(%rip)
31ae(4): mov 0x8(%rsp),%esi
31b2(3): mov %rcx,%rdi
31b5(5): call 0xffffedab(%rip)
31ba(5): mov %rax,0x68(%rsp)
31bf(5): jmp 0xfffffc57(%rip)
31c4(4): mov 0x8(%rsp),%esi
31c8(3): mov %rcx,%rdi
31cb(5): call 0xffffed95(%rip)
31d0(5): mov %rax,0x60(%rsp)
31d5(5): jmp 0xfffffc6c(%rip)
31da(5): movzx 0xf(%rsp),%ebx
31df(3): mov %r11,%rbp
31e2(2): mov %edx,%eax
31e4(4): mov %bl,0xd(%rsp)
31e8(5): jmp 0xfffff9f1(%rip)
31ed(4): sub $0x8,%rsp
31f1(6): mov $0x5,%r8d
31f7(3): mov %r11,%rcx
31fa(4): push 0x68(%rsp)
31fe(4): push 0x78(%rsp)
3202(3): mov %r14,%rdi
3205(4): push 0x38(%rsp)
3209(8): mov 0x98(%rsp),%r9d
3211(5): mov 0x30(%rsp),%rdx
3216(5): mov 0x70(%rsp),%rsi
321b(5): call 0xffffee35(%rip)
3220(4): add $0x20,%rsp
3224(3): mov %rax,%r15
3227(5): jmp 0xfffffa02(%rip)
322c(5): movzx 0x7c(%rsp),%eax
3231(5): jmp 0xffffff1b(%rip)
3236(8): mov $0x2,0x8(%rsp)
323e(5): jmp 0xfffff99b(%rip)
3243(5): call 0xffffe0ed(%rip)
3248(5): mov $0x0,0xd(%rsp)
324d(5): jmp 0xfffffa74(%rip)
3252(3): mov %r11,%rbp
3255(5): jmp 0xfffff99b(%rip)
325a(5): mov $0x1,0xe(%rsp)
325f(2): xor %eax,%eax
3261(3): xor %r12d,%r12d
3264(9): mov $0x0,0x50(%rsp)
326d(5): jmp 0xfffff5a7(%rip)
3272(3): mov %r13,%rdx
3275(5): mov 0x50(%rsp),%r13
327a(5): jmp 0xfffff5f8(%rip)
327f(5): call 0xffffe001(%rip)

"quotearg_n_options" :
3290(2): push %r15
3292(2): push %r14
3294(3): movsxd %edi,%r15
3297(2): push %r13
3299(2): push %r12
329b(3): mov %rdx,%r14
329e(1): push %rbp
329f(1): push %rbx
32a0(3): mov %rcx,%rbp
32a3(4): sub $0x28,%rsp
32a7(5): mov %rsi,0x8(%rsp)
32ac(5): call 0xffffdfe4(%rip)
32b1(3): mov %rax,%r13
32b4(2): mov (%rax),%eax
32b6(3): test %r15d,%r15d
32b9(7): mov 0x203da0(%rip),%rbx
32c0(4): mov %eax,0x18(%rsp)
32c4(6): js 0x16d(%rip)
32ca(7): cmp %r15d,0x203d87(%rip)
32d1(2): jnle 0x64(%rip)
32d3(7): cmp $0x7fffffff,%r15d
32da(6): jz 0x15c(%rip)
32e0(4): lea 0x1(%r15),%r12d
32e4(7): lea 0x203d85(%rip),%rax
32eb(3): movsxd %r12d,%rsi
32ee(4): shl/sal $0x4,%rsi
32f2(3): cmp %rax,%rbx
32f5(6): jz 0x11b(%rip)
32fb(3): mov %rbx,%rdi
32fe(5): call 0xf72(%rip)
3303(3): mov %rax,%rbx
3306(7): mov %rax,0x203d53(%rip)
330d(7): movsxd 0x203d44(%rip),%rdi
3314(3): mov %r12d,%edx
3317(2): xor %esi,%esi
3319(2): sub %edi,%edx
331b(4): shl/sal $0x4,%rdi
331f(3): movsxd %edx,%rdx
3322(3): add %rbx,%rdi
3325(4): shl/sal $0x4,%rdx
3329(5): call 0xffffe067(%rip)
332e(7): mov %r12d,0x203d23(%rip)
3335(3): mov 0x4(%rbp),%eax
3338(4): shl/sal $0x4,%r15
333c(4): sub $0x8,%rsp
3340(3): add %r15,%rbx
3343(4): lea 0x8(%rbp),%r15
3347(4): mov 0x0(%rbp),%r8d
334b(3): mov (%rbx),%r11
334e(4): mov 0x8(%rbx),%r12
3352(3): mov %r14,%rcx
3355(3): or $0x1,%eax
3358(4): mov %eax,0x24(%rsp)
335c(3): push 0x30(%rbp)
335f(3): mov %eax,%r9d
3362(3): push 0x28(%rbp)
3365(2): push %r15
3367(3): mov %r11,%rsi
336a(5): mov 0x28(%rsp),%rdx
336f(3): mov %r12,%rdi
3372(5): mov %r11,0x30(%rsp)
3377(5): call 0xffffecd9(%rip)
337c(4): add $0x20,%rsp
3380(5): mov 0x10(%rsp),%r11
3385(3): cmp %rax,%r11
3388(2): jnbe 0x69(%rip)
338a(4): lea 0x1(%rax),%rsi
338e(7): lea 0x203d6b(%rip),%rax
3395(3): cmp %rax,%r12
3398(3): mov %rsi,(%rbx)
339b(2): jz 0x14(%rip)
339d(3): mov %r12,%rdi
33a0(5): mov %rsi,0x10(%rsp)
33a5(5): call 0xffffdecb(%rip)
33aa(5): mov 0x10(%rsp),%rsi
33af(3): mov %rsi,%rdi
33b2(5): mov %rsi,0x10(%rsp)
33b7(5): call 0xe59(%rip)
33bc(4): sub $0x8,%rsp
33c0(4): mov %rax,0x8(%rbx)
33c4(4): mov 0x0(%rbp),%r8d
33c8(3): push 0x30(%rbp)
33cb(3): push 0x28(%rbp)
33ce(3): mov %r14,%rcx
33d1(2): push %r15
33d3(5): mov 0x3c(%rsp),%r9d
33d8(3): mov %rax,%rdi
33db(5): mov 0x28(%rsp),%rdx
33e0(5): mov 0x30(%rsp),%rsi
33e5(3): mov %rax,%r12
33e8(5): call 0xffffec68(%rip)
33ed(4): add $0x20,%rsp
33f1(4): mov 0x18(%rsp),%eax
33f5(4): mov %eax,0x0(%r13)
33f9(4): add $0x28,%rsp
33fd(3): mov %r12,%rax
3400(1): pop %rbx
3401(1): pop %rbp
3402(2): pop %r12
3404(2): pop %r13
3406(2): pop %r14
3408(2): pop %r15
340a(1): ret near (%rsp)
340b(5): nop 0x0(%rax,%rax,1)
3410(2): xor %edi,%edi
3412(5): call 0xe5e(%rip)
3417(8): movdqa 0x203c51(%rip),%xmm0
341f(3): mov %rax,%rbx
3422(7): mov %rax,0x203c37(%rip)
3429(3): movups %xmm0,(%rax)
342c(5): jmp 0xfffffee1(%rip)
3431(5): call 0xffffde4f(%rip)
3436(5): call 0x102a(%rip)

"clone_quoting_options" :
3440(2): push %r12
3442(1): push %rbp
3443(1): push %rbx
3444(3): mov %rdi,%rbx
3447(5): call 0xffffde49(%rip)
344c(3): mov (%rax),%r12d
344f(3): mov %rax,%rbp
3452(7): lea 0x203da7(%rip),%rax
3459(3): test %rbx,%rbx
345c(5): mov $0x38,%esi
3461(4): cmove %rax,%rbx
3465(3): mov %rbx,%rdi
3468(5): call 0xfa8(%rip)
346d(4): mov %r12d,0x0(%rbp)
3471(1): pop %rbx
3472(1): pop %rbp
3473(2): pop %r12
3475(1): ret near (%rsp)

"get_quoting_style" :
3480(7): lea 0x203d79(%rip),%rax
3487(3): test %rdi,%rdi
348a(4): cmove %rax,%rdi
348e(2): mov (%rdi),%eax
3490(1): ret near (%rsp)

"set_quoting_style" :
34a0(7): lea 0x203d59(%rip),%rax
34a7(3): test %rdi,%rdi
34aa(4): cmove %rax,%rdi
34ae(2): mov %esi,(%rdi)
34b0(1): ret near (%rsp)

"set_char_quoting" :
34c0(7): lea 0x203d39(%rip),%rax
34c7(3): test %rdi,%rdi
34ca(2): mov %esi,%ecx
34cc(4): cmove %rax,%rdi
34d0(2): mov %esi,%eax
34d2(3): and $0x1f,%ecx
34d5(3): shr $0x5,%al
34d8(3): movzx %al,%eax
34db(5): lea 0x8(%rdi,%rax,4),%rdi
34e0(2): mov (%rdi),%esi
34e2(2): mov %esi,%eax
34e4(2): shr %cl,%eax
34e6(2): xor %eax,%edx
34e8(3): and $0x1,%eax
34eb(3): and $0x1,%edx
34ee(2): shl/sal %cl,%edx
34f0(2): xor %esi,%edx
34f2(2): mov %edx,(%rdi)
34f4(1): ret near (%rsp)

"set_quoting_flags" :
3500(7): lea 0x203cf9(%rip),%rax
3507(3): test %rdi,%rdi
350a(4): cmove %rax,%rdi
350e(3): mov 0x4(%rdi),%eax
3511(3): mov %esi,0x4(%rdi)
3514(1): ret near (%rsp)

"set_custom_quoting" :
3520(7): lea 0x203cd9(%rip),%rax
3527(3): test %rdi,%rdi
352a(4): cmove %rax,%rdi
352e(3): test %rsi,%rsi
3531(6): mov $0xa,(%rdi)
3537(2): jz 0x10(%rip)
3539(3): test %rdx,%rdx
353c(2): jz 0xb(%rip)
353e(4): mov %rsi,0x28(%rdi)
3542(4): mov %rdx,0x30(%rdi)
3546(1): ret near (%rsp)
3547(4): sub $0x8,%rsp
354b(5): call 0xffffdd35(%rip)

"quotearg_buffer" :
3550(2): push %r15
3552(2): push %r14
3554(7): lea 0x203ca5(%rip),%rax
355b(2): push %r13
355d(2): push %r12
355f(3): mov %rdi,%r13
3562(1): push %rbp
3563(1): push %rbx
3564(3): mov %r8,%rbx
3567(3): mov %rsi,%r14
356a(3): mov %rdx,%r15
356d(4): sub $0x18,%rsp
3571(3): test %r8,%r8
3574(4): cmove %rax,%rbx
3578(5): mov %rcx,0x8(%rsp)
357d(5): call 0xffffdd13(%rip)
3582(3): mov (%rax),%r12d
3585(3): mov %rax,%rbp
3588(4): lea 0x8(%rbx),%rax
358c(4): sub $0x8,%rsp
3590(4): mov 0x4(%rbx),%r9d
3594(3): push 0x30(%rbx)
3597(3): mov (%rbx),%r8d
359a(3): push 0x28(%rbx)
359d(3): mov %r15,%rdx
35a0(1): push %rax
35a1(5): mov 0x28(%rsp),%rcx
35a6(3): mov %r14,%rsi
35a9(3): mov %r13,%rdi
35ac(5): call 0xffffeaa4(%rip)
35b1(4): mov %r12d,0x0(%rbp)
35b5(4): add $0x38,%rsp
35b9(1): pop %rbx
35ba(1): pop %rbp
35bb(2): pop %r12
35bd(2): pop %r13
35bf(2): pop %r14
35c1(2): pop %r15
35c3(1): ret near (%rsp)

"quotearg_alloc_mem" :
35d0(2): push %r15
35d2(2): push %r14
35d4(7): lea 0x203c25(%rip),%rax
35db(2): push %r13
35dd(2): push %r12
35df(3): mov %rdx,%r12
35e2(1): push %rbp
35e3(1): push %rbx
35e4(3): mov %rcx,%rbx
35e7(3): mov %rdi,%r14
35ea(3): mov %rsi,%r15
35ed(4): sub $0x38,%rsp
35f1(3): test %rcx,%rcx
35f4(4): cmove %rax,%rbx
35f8(2): xor %ebp,%ebp
35fa(5): call 0xffffdc96(%rip)
35ff(3): test %r12,%r12
3602(3): mov %rax,%r13
3605(2): mov (%rax),%eax
3607(4): setz %bpl
360b(3): or 0x4(%rbx),%ebp
360e(4): lea 0x8(%rbx),%r10
3612(4): sub $0x8,%rsp
3616(3): mov (%rbx),%r8d
3619(3): mov %r15,%rcx
361c(4): mov %eax,0x14(%rsp)
3620(3): push 0x30(%rbx)
3623(3): mov %r14,%rdx
3626(3): push 0x28(%rbx)
3629(2): push %r10
362b(2): xor %esi,%esi
362d(3): mov %ebp,%r9d
3630(2): xor %edi,%edi
3632(5): mov %r10,0x40(%rsp)
3637(5): call 0xffffea19(%rip)
363c(4): lea 0x1(%rax),%rsi
3640(5): mov %rax,0x48(%rsp)
3645(4): add $0x20,%rsp
3649(3): mov %rsi,%rdi
364c(5): mov %rsi,0x18(%rsp)
3651(5): call 0xbbf(%rip)
3656(5): mov %rax,0x10(%rsp)
365b(4): sub $0x8,%rsp
365f(3): push 0x30(%rbx)
3662(3): push 0x28(%rbx)
3665(5): mov 0x38(%rsp),%r10
366a(3): mov %ebp,%r9d
366d(3): mov (%rbx),%r8d
3670(3): mov %r15,%rcx
3673(3): mov %r14,%rdx
3676(3): mov %rax,%rdi
3679(2): push %r10
367b(5): mov 0x38(%rsp),%rsi
3680(5): call 0xffffe9d0(%rip)
3685(4): mov 0x2c(%rsp),%eax
3689(4): add $0x20,%rsp
368d(3): test %r12,%r12
3690(4): mov %eax,0x0(%r13)
3694(2): jz 0xb(%rip)
3696(5): mov 0x28(%rsp),%r11
369b(4): mov %r11,(%r12)
369f(5): mov 0x10(%rsp),%rax
36a4(4): add $0x38,%rsp
36a8(1): pop %rbx
36a9(1): pop %rbp
36aa(2): pop %r12
36ac(2): pop %r13
36ae(2): pop %r14
36b0(2): pop %r15
36b2(1): ret near (%rsp)

"quotearg_alloc" :
36c0(3): mov %rdx,%rcx
36c3(2): xor %edx,%edx
36c5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
36d0(6): mov 0x203982(%rip),%eax
36d6(2): push %r12
36d8(7): mov 0x203981(%rip),%r12
36df(1): push %rbp
36e0(1): push %rbx
36e1(3): cmp $0x1,%eax
36e4(2): jle 0x2d(%rip)
36e6(3): sub $0x2,%eax
36e9(5): lea 0x18(%r12),%rbx
36ee(4): shl/sal $0x4,%rax
36f2(5): lea 0x28(%r12,%rax,1),%rbp
36f7(9): nop 0x0(%rax,%rax,1)
3700(3): mov (%rbx),%rdi
3703(4): add $0x10,%rbx
3707(5): call 0xffffdb69(%rip)
370c(3): cmp %rbp,%rbx
370f(2): jnz 0xfffffff1(%rip)
3711(5): mov 0x8(%r12),%rdi
3716(7): lea 0x2039e3(%rip),%rbx
371d(3): cmp %rbx,%rdi
3720(2): jz 0x19(%rip)
3722(5): call 0xffffdb4e(%rip)
3727(b): mov $0x100,0x20393e(%rip)
3732(7): mov %rbx,0x20393f(%rip)
3739(7): lea 0x203930(%rip),%rbx
3740(3): cmp %rbx,%r12
3743(2): jz 0x11(%rip)
3745(3): mov %r12,%rdi
3748(5): call 0xffffdb28(%rip)
374d(7): mov %rbx,0x20390c(%rip)
3754(1): pop %rbx
3755(a): mov $0x1,0x2038f9(%rip)
375f(1): pop %rbp
3760(2): pop %r12
3762(1): ret near (%rsp)

"quotearg_n" :
3770(7): lea 0x203a89(%rip),%rcx
3777(7): mov $0xffffffff,%rdx
377e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3790(7): lea 0x203a69(%rip),%rcx
3797(5): jmp 0xfffffaf9(%rip)

"quotearg" :
37a0(7): lea 0x203a59(%rip),%rcx
37a7(3): mov %rdi,%rsi
37aa(7): mov $0xffffffff,%rdx
37b1(2): xor %edi,%edi
37b3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
37c0(7): lea 0x203a39(%rip),%rcx
37c7(3): mov %rsi,%rdx
37ca(3): mov %rdi,%rsi
37cd(2): xor %edi,%edi
37cf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
37e0(4): sub $0x48,%rsp
37e4(3): mov %rdx,%rax
37e7(9): mov $0x28,%rdx
37f0(5): mov %rdx,0x38(%rsp)
37f5(2): xor %edx,%edx
37f7(3): cmp $0xa,%esi
37fa(2): jz 0x6a(%rip)
37fc(3): mov %esi,(%rsp)
37ff(3): mov %rsp,%rcx
3802(7): mov $0xffffffff,%rdx
3809(3): mov %rax,%rsi
380c(9): mov $0x0,0x4(%rsp)
3815(9): mov $0x0,0xc(%rsp)
381e(9): mov $0x0,0x14(%rsp)
3827(9): mov $0x0,0x1c(%rsp)
3830(9): mov $0x0,0x24(%rsp)
3839(9): mov $0x0,0x2c(%rsp)
3842(8): mov $0x0,0x34(%rsp)
384a(5): call 0xfffffa46(%rip)
384f(5): mov 0x38(%rsp),%rcx
3854(9): xor $0x28,%rcx
385d(2): jnz 0xc(%rip)
385f(4): add $0x48,%rsp
3863(1): ret near (%rsp)
3864(5): call 0xffffda1c(%rip)
3869(5): call 0xffffdac7(%rip)

"quotearg_n_style_mem" :
3870(4): sub $0x48,%rsp
3874(3): mov %rdx,%rax
3877(3): mov %rcx,%rdx
387a(9): mov $0x28,%rcx
3883(5): mov %rcx,0x38(%rsp)
3888(2): xor %ecx,%ecx
388a(3): cmp $0xa,%esi
388d(2): jz 0x63(%rip)
388f(3): mov %esi,(%rsp)
3892(3): mov %rsp,%rcx
3895(3): mov %rax,%rsi
3898(9): mov $0x0,0x4(%rsp)
38a1(9): mov $0x0,0xc(%rsp)
38aa(9): mov $0x0,0x14(%rsp)
38b3(9): mov $0x0,0x1c(%rsp)
38bc(9): mov $0x0,0x24(%rsp)
38c5(9): mov $0x0,0x2c(%rsp)
38ce(8): mov $0x0,0x34(%rsp)
38d6(5): call 0xfffff9ba(%rip)
38db(5): mov 0x38(%rsp),%rdx
38e0(9): xor $0x28,%rdx
38e9(2): jnz 0xc(%rip)
38eb(4): add $0x48,%rsp
38ef(1): ret near (%rsp)
38f0(5): call 0xffffd990(%rip)
38f5(5): call 0xffffda3b(%rip)

"quotearg_style" :
3900(3): mov %rsi,%rdx
3903(2): mov %edi,%esi
3905(2): xor %edi,%edi
3907(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3910(3): mov %rdx,%rcx
3913(3): mov %rsi,%rdx
3916(2): mov %edi,%esi
3918(2): xor %edi,%edi
391a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3920(4): sub $0x48,%rsp
3924(2): mov %edx,%ecx
3926(9): mov $0x28,%rax
392f(5): mov %rax,0x38(%rsp)
3934(2): xor %eax,%eax
3936(7): mov 0x2038f3(%rip),%rax
393d(3): mov %rsp,%r8
3940(3): and $0x1f,%ecx
3943(8): movdqa 0x2038b5(%rip),%xmm0
394b(5): mov %rax,0x30(%rsp)
3950(2): mov %edx,%eax
3952(4): movaps %xmm0,(%rsp)
3956(3): shr $0x5,%al
3959(3): movzx %al,%eax
395c(5): lea 0x8(%r8,%rax,4),%r9
3961(8): movdqa 0x2038a7(%rip),%xmm0
3969(5): movaps %xmm0,0x10(%rsp)
396e(8): movdqa 0x2038aa(%rip),%xmm0
3976(5): movaps %xmm0,0x20(%rsp)
397b(3): mov (%r9),%edx
397e(2): mov %edx,%eax
3980(2): shr %cl,%eax
3982(2): not %eax
3984(3): and $0x1,%eax
3987(2): shl/sal %cl,%eax
3989(3): mov %r8,%rcx
398c(2): xor %edx,%eax
398e(3): mov %rsi,%rdx
3991(3): mov %rdi,%rsi
3994(3): mov %eax,(%r9)
3997(2): xor %edi,%edi
3999(5): call 0xfffff8f7(%rip)
399e(5): mov 0x38(%rsp),%rsi
39a3(9): xor $0x28,%rsi
39ac(2): jnz 0x7(%rip)
39ae(4): add $0x48,%rsp
39b2(1): ret near (%rsp)
39b3(5): call 0xffffd97d(%rip)

"quotearg_char" :
39c0(4): movsx %sil,%edx
39c4(7): mov $0xffffffff,%rsi
39cb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
39d0(5): mov $0x3a,%edx
39d5(7): mov $0xffffffff,%rsi
39dc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
39f0(5): mov $0x3a,%edx
39f5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3a00(4): sub $0x48,%rsp
3a04(3): mov %rdx,%rax
3a07(9): mov $0x28,%rdx
3a10(5): mov %rdx,0x38(%rsp)
3a15(2): xor %edx,%edx
3a17(3): cmp $0xa,%esi
3a1a(2): jz 0x6a(%rip)
3a1c(3): mov %esi,(%rsp)
3a1f(3): mov %rsp,%rcx
3a22(7): mov $0xffffffff,%rdx
3a29(3): mov %rax,%rsi
3a2c(9): mov $0x0,0x4(%rsp)
3a35(9): mov $0x4000000,0xc(%rsp)
3a3e(9): mov $0x0,0x14(%rsp)
3a47(9): mov $0x0,0x1c(%rsp)
3a50(9): mov $0x0,0x24(%rsp)
3a59(9): mov $0x0,0x2c(%rsp)
3a62(8): mov $0x0,0x34(%rsp)
3a6a(5): call 0xfffff826(%rip)
3a6f(5): mov 0x38(%rsp),%rcx
3a74(9): xor $0x28,%rcx
3a7d(2): jnz 0xc(%rip)
3a7f(4): add $0x48,%rsp
3a83(1): ret near (%rsp)
3a84(5): call 0xffffd7fc(%rip)
3a89(5): call 0xffffd8a7(%rip)

"quotearg_n_custom_mem" :
3a90(4): sub $0x48,%rsp
3a94(3): mov %rcx,%r9
3a97(7): mov 0x203792(%rip),%rcx
3a9e(8): movdqa 0x20375a(%rip),%xmm0
3aa6(9): mov $0x28,%rax
3aaf(5): mov %rax,0x38(%rsp)
3ab4(2): xor %eax,%eax
3ab6(4): movaps %xmm0,(%rsp)
3aba(3): test %rsi,%rsi
3abd(5): mov %rcx,0x30(%rsp)
3ac2(7): mov $0xa,(%rsp)
3ac9(8): movdqa 0x20373f(%rip),%xmm0
3ad1(5): movaps %xmm0,0x10(%rsp)
3ad6(8): movdqa 0x203742(%rip),%xmm0
3ade(5): movaps %xmm0,0x20(%rsp)
3ae3(2): jz 0x34(%rip)
3ae5(3): test %rdx,%rdx
3ae8(2): jz 0x2f(%rip)
3aea(5): mov %rsi,0x28(%rsp)
3aef(5): mov %rdx,0x30(%rsp)
3af4(3): mov %rsp,%rcx
3af7(3): mov %r8,%rdx
3afa(3): mov %r9,%rsi
3afd(5): call 0xfffff793(%rip)
3b02(5): mov 0x38(%rsp),%rdi
3b07(9): xor $0x28,%rdi
3b10(2): jnz 0xc(%rip)
3b12(4): add $0x48,%rsp
3b16(1): ret near (%rsp)
3b17(5): call 0xffffd769(%rip)
3b1c(5): call 0xffffd814(%rip)

"quotearg_n_custom" :
3b30(7): mov $0xffffffff,%r8
3b37(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3b40(3): mov %rdx,%rcx
3b43(7): mov $0xffffffff,%r8
3b4a(3): mov %rsi,%rdx
3b4d(3): mov %rdi,%rsi
3b50(2): xor %edi,%edi
3b52(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3b60(3): mov %rcx,%r8
3b63(3): mov %rdx,%rcx
3b66(3): mov %rsi,%rdx
3b69(3): mov %rdi,%rsi
3b6c(2): xor %edi,%edi
3b6e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3b80(7): lea 0x203499(%rip),%rcx
3b87(5): jmp 0xfffff709(%rip)

"quote_mem" :
3b90(7): lea 0x203489(%rip),%rcx
3b97(3): mov %rsi,%rdx
3b9a(3): mov %rdi,%rsi
3b9d(2): xor %edi,%edi
3b9f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3bb0(7): lea 0x203469(%rip),%rcx
3bb7(7): mov $0xffffffff,%rdx
3bbe(5): jmp 0xfffff6d2(%rip)

"quote" :
3bd0(7): lea 0x203449(%rip),%rcx
3bd7(3): mov %rdi,%rsi
3bda(7): mov $0xffffffff,%rdx
3be1(2): xor %edi,%edi
3be3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3bf0(2): push %r15
3bf2(2): push %r14
3bf4(2): push %r13
3bf6(2): push %r12
3bf8(3): mov %r9,%r12
3bfb(1): push %rbp
3bfc(1): push %rbx
3bfd(3): mov %rdi,%rbp
3c00(3): mov %r8,%rbx
3c03(4): sub $0x28,%rsp
3c07(3): test %rsi,%rsi
3c0a(6): jz 0x11e(%rip)
3c10(3): mov %rdx,%r8
3c13(7): lea 0x162e(%rip),%rdx
3c1a(3): mov %rcx,%r9
3c1d(2): xor %eax,%eax
3c1f(3): mov %rsi,%rcx
3c22(5): mov $0x1,%esi
3c27(5): call 0xffffd899(%rip)
3c2c(7): lea 0x1628(%rip),%rsi
3c33(2): xor %edi,%edi
3c35(5): mov $0x5,%edx
3c3a(5): call 0xffffd6c6(%rip)
3c3f(7): lea 0x193a(%rip),%rdx
3c46(3): mov %rax,%rcx
3c49(6): mov $0x7e3,%r8d
3c4f(5): mov $0x1,%esi
3c54(3): mov %rbp,%rdi
3c57(2): xor %eax,%eax
3c59(5): call 0xffffd867(%rip)
3c5e(7): lea 0x1683(%rip),%rsi
3c65(2): xor %edi,%edi
3c67(5): mov $0x5,%edx
3c6c(5): call 0xffffd694(%rip)
3c71(3): mov %rbp,%rsi
3c74(3): mov %rax,%rdi
3c77(5): call 0xffffd749(%rip)
3c7c(4): cmp $0x9,%r12
3c80(6): jnbe 0x340(%rip)
3c86(7): lea 0x18bb(%rip),%rdx
3c8d(4): movsxd 0x0(%rdx,%r12,4),%rax
3c91(3): add %rdx,%rax
3c94(2): jmp %rax
3c96(a): nop 0x0(%rax,%rax,1)
3ca0(4): mov 0x38(%rbx),%r9
3ca4(4): mov 0x10(%rbx),%rax
3ca8(7): lea 0x17a9(%rip),%rsi
3caf(4): mov 0x8(%rbx),%r8
3cb3(5): mov $0x5,%edx
3cb8(2): xor %edi,%edi
3cba(4): mov 0x30(%rbx),%r13
3cbe(4): mov 0x28(%rbx),%r12
3cc2(5): mov %r9,0x10(%rsp)
3cc7(4): mov 0x20(%rbx),%r15
3ccb(4): mov 0x18(%rbx),%r14
3ccf(4): mov %rax,(%rsp)
3cd3(5): mov %r8,0x8(%rsp)
3cd8(3): mov (%rbx),%rbx
3cdb(5): call 0xffffd625(%rip)
3ce0(4): sub $0x8,%rsp
3ce4(5): mov 0x18(%rsp),%r9
3ce9(3): mov %rax,%rdx
3cec(3): mov %rbx,%rcx
3cef(5): mov $0x1,%esi
3cf4(3): mov %rbp,%rdi
3cf7(2): xor %eax,%eax
3cf9(2): push %r9
3cfb(2): push %r13
3cfd(2): push %r12
3cff(2): push %r15
3d01(2): push %r14
3d03(5): mov 0x30(%rsp),%r9
3d08(5): mov 0x38(%rsp),%r8
3d0d(5): call 0xffffd7b3(%rip)
3d12(4): add $0x30,%rsp
3d16(4): add $0x28,%rsp
3d1a(1): pop %rbx
3d1b(1): pop %rbp
3d1c(2): pop %r12
3d1e(2): pop %r13
3d20(2): pop %r14
3d22(2): pop %r15
3d24(1): ret near (%rsp)
3d25(3): nop (%rax)
3d28(3): mov %rcx,%r8
3d2b(3): mov %rdx,%rcx
3d2e(7): lea 0x151f(%rip),%rdx
3d35(5): mov $0x1,%esi
3d3a(2): xor %eax,%eax
3d3c(5): call 0xffffd784(%rip)
3d41(5): jmp 0xfffffeeb(%rip)
3d46(a): nop 0x0(%rax,%rax,1)
3d50(4): mov 0x40(%rbx),%r10
3d54(4): mov 0x38(%rbx),%r9
3d58(7): lea 0x1729(%rip),%rsi
3d5f(4): mov 0x10(%rbx),%rax
3d63(4): mov 0x8(%rbx),%r8
3d67(5): mov $0x5,%edx
3d6c(4): mov 0x30(%rbx),%r13
3d70(4): mov 0x28(%rbx),%r12
3d74(4): mov 0x20(%rbx),%r15
3d78(4): mov 0x18(%rbx),%r14
3d7c(3): mov (%rbx),%rbx
3d7f(5): mov %r10,0x18(%rsp)
3d84(5): mov %r9,0x10(%rsp)
3d89(4): mov %rax,(%rsp)
3d8d(5): mov %r8,0x8(%rsp)
3d92(2): xor %edi,%edi
3d94(5): call 0xffffd56c(%rip)
3d99(5): mov 0x18(%rsp),%r10
3d9e(2): push %r10
3da0(5): jmp 0xffffff44(%rip)
3da5(3): nop (%rax)
3da8(3): mov (%rbx),%rbx
3dab(7): lea 0x14ad(%rip),%rsi
3db2(5): mov $0x5,%edx
3db7(2): xor %edi,%edi
3db9(5): call 0xffffd547(%rip)
3dbe(4): add $0x28,%rsp
3dc2(3): mov %rbx,%rcx
3dc5(3): mov %rbp,%rdi
3dc8(1): pop %rbx
3dc9(1): pop %rbp
3dca(2): pop %r12
3dcc(2): pop %r13
3dce(2): pop %r14
3dd0(2): pop %r15
3dd2(3): mov %rax,%rdx
3dd5(5): mov $0x1,%esi
3dda(2): xor %eax,%eax
3ddc(5): jmp 0xffffd6e4(%rip)
3de1(7): nop 0x0(%rax)
3de8(4): mov 0x8(%rbx),%r12
3dec(7): lea 0x147c(%rip),%rsi
3df3(3): mov (%rbx),%rbx
3df6(5): mov $0x5,%edx
3dfb(2): xor %edi,%edi
3dfd(5): call 0xffffd503(%rip)
3e02(4): add $0x28,%rsp
3e06(3): mov %r12,%r8
3e09(3): mov %rbx,%rcx
3e0c(3): mov %rbp,%rdi
3e0f(3): mov %rax,%rdx
3e12(5): mov $0x1,%esi
3e17(1): pop %rbx
3e18(1): pop %rbp
3e19(2): pop %r12
3e1b(2): pop %r13
3e1d(2): pop %r14
3e1f(2): pop %r15
3e21(2): xor %eax,%eax
3e23(5): jmp 0xffffd69d(%rip)
3e28(8): nop 0x0(%rax,%rax,1)
3e30(4): mov 0x10(%rbx),%r13
3e34(4): mov 0x8(%rbx),%r12
3e38(7): lea 0x1447(%rip),%rsi
3e3f(3): mov (%rbx),%rbx
3e42(5): mov $0x5,%edx
3e47(2): xor %edi,%edi
3e49(5): call 0xffffd4b7(%rip)
3e4e(4): add $0x28,%rsp
3e52(3): mov %r13,%r9
3e55(3): mov %r12,%r8
3e58(3): mov %rbx,%rcx
3e5b(3): mov %rbp,%rdi
3e5e(3): mov %rax,%rdx
3e61(1): pop %rbx
3e62(1): pop %rbp
3e63(2): pop %r12
3e65(2): pop %r13
3e67(2): pop %r14
3e69(2): pop %r15
3e6b(5): mov $0x1,%esi
3e70(2): xor %eax,%eax
3e72(5): jmp 0xffffd64e(%rip)
3e77(9): nop 0x0(%rax,%rax,1)
3e80(7): lea 0x1531(%rip),%rsi
3e87(5): mov $0x5,%edx
3e8c(2): xor %edi,%edi
3e8e(4): mov 0x18(%rbx),%r14
3e92(4): mov 0x10(%rbx),%r13
3e96(4): mov 0x8(%rbx),%r12
3e9a(3): mov (%rbx),%rbx
3e9d(5): call 0xffffd463(%rip)
3ea2(4): sub $0x8,%rsp
3ea6(2): push %r14
3ea8(3): mov %rax,%rdx
3eab(3): mov %r13,%r9
3eae(3): mov %r12,%r8
3eb1(3): mov %rbx,%rcx
3eb4(3): mov %rbp,%rdi
3eb7(5): mov $0x1,%esi
3ebc(2): xor %eax,%eax
3ebe(5): call 0xffffd602(%rip)
3ec3(1): pop %rax
3ec4(1): pop %rdx
3ec5(4): add $0x28,%rsp
3ec9(1): pop %rbx
3eca(1): pop %rbp
3ecb(2): pop %r12
3ecd(2): pop %r13
3ecf(2): pop %r14
3ed1(2): pop %r15
3ed3(1): ret near (%rsp)
3ed4(4): nop 0x0(%rax)
3ed8(4): mov 0x20(%rbx),%r15
3edc(7): lea 0x14f5(%rip),%rsi
3ee3(5): mov $0x5,%edx
3ee8(2): xor %edi,%edi
3eea(4): mov 0x18(%rbx),%r14
3eee(4): mov 0x10(%rbx),%r13
3ef2(4): mov 0x8(%rbx),%r12
3ef6(3): mov (%rbx),%rbx
3ef9(5): call 0xffffd407(%rip)
3efe(2): push %r15
3f00(2): jmp 0xffffffa6(%rip)
3f02(6): nop 0x0(%rax,%rax,1)
3f08(4): mov 0x8(%rbx),%r8
3f0c(4): mov 0x28(%rbx),%r12
3f10(7): lea 0x14e9(%rip),%rsi
3f17(4): mov 0x20(%rbx),%r15
3f1b(4): mov 0x18(%rbx),%r14
3f1f(5): mov $0x5,%edx
3f24(4): mov 0x10(%rbx),%r13
3f28(2): xor %edi,%edi
3f2a(3): mov (%rbx),%rbx
3f2d(4): mov %r8,(%rsp)
3f31(5): call 0xffffd3cf(%rip)
3f36(4): sub $0x8,%rsp
3f3a(3): mov %r13,%r9
3f3d(2): push %r12
3f3f(2): push %r15
3f41(2): push %r14
3f43(5): mov 0x20(%rsp),%r8
3f48(3): mov %rbx,%rcx
3f4b(3): mov %rax,%rdx
3f4e(3): mov %rbp,%rdi
3f51(5): mov $0x1,%esi
3f56(2): xor %eax,%eax
3f58(5): call 0xffffd568(%rip)
3f5d(4): add $0x20,%rsp
3f61(4): add $0x28,%rsp
3f65(1): pop %rbx
3f66(1): pop %rbp
3f67(2): pop %r12
3f69(2): pop %r13
3f6b(2): pop %r14
3f6d(2): pop %r15
3f6f(1): ret near (%rsp)
3f70(4): mov 0x10(%rbx),%r9
3f74(4): mov 0x30(%rbx),%r13
3f78(7): lea 0x14a9(%rip),%rsi
3f7f(4): mov 0x28(%rbx),%r12
3f83(4): mov 0x20(%rbx),%r15
3f87(5): mov $0x5,%edx
3f8c(4): mov 0x18(%rbx),%r14
3f90(4): mov 0x8(%rbx),%r8
3f94(2): xor %edi,%edi
3f96(5): mov %r9,0x8(%rsp)
3f9b(3): mov (%rbx),%rbx
3f9e(4): mov %r8,(%rsp)
3fa2(5): call 0xffffd35e(%rip)
3fa7(2): push %r13
3fa9(2): push %r12
3fab(2): push %r15
3fad(2): push %r14
3faf(5): mov 0x28(%rsp),%r9
3fb4(2): jmp 0xffffff8f(%rip)
3fb6(a): nop 0x0(%rax,%rax,1)
3fc0(4): mov 0x40(%rbx),%r10
3fc4(4): mov 0x38(%rbx),%r9
3fc8(5): mov $0x5,%edx
3fcd(4): mov 0x10(%rbx),%rax
3fd1(4): mov 0x8(%rbx),%r8
3fd5(7): lea 0x14e4(%rip),%rsi
3fdc(4): mov 0x30(%rbx),%r13
3fe0(4): mov 0x28(%rbx),%r12
3fe4(4): mov 0x20(%rbx),%r15
3fe8(4): mov 0x18(%rbx),%r14
3fec(5): mov %r10,0x18(%rsp)
3ff1(5): mov %r9,0x10(%rsp)
3ff6(4): mov %rax,(%rsp)
3ffa(5): mov %r8,0x8(%rsp)
3fff(3): mov (%rbx),%rbx
4002(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4010(3): xor %r9d,%r9d
4013(4): cmp $0x0,(%r8)
4017(2): jz 0x14(%rip)
4019(7): nop 0x0(%rax)
4020(4): add $0x1,%r9
4024(5): cmp $0x0,0x0(%r8,%r9,8)
4029(2): jnz 0xfffffff7(%rip)
402b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4030(4): sub $0x68,%rsp
4034(3): mov %r8,%r10
4037(3): xor %r9d,%r9d
403a(9): mov $0x28,%rax
4043(5): mov %rax,0x58(%rsp)
4048(2): xor %eax,%eax
404a(3): mov %rsp,%r8
404d(3): nop (%rax)
4050(3): mov (%r10),%eax
4053(3): cmp $0x2f,%eax
4056(2): jnbe 0x44(%rip)
4058(3): mov %eax,%r11d
405b(4): add 0x10(%r10),%r11
405f(3): add $0x8,%eax
4062(3): mov %eax,(%r10)
4065(3): mov (%r11),%rax
4068(3): test %rax,%rax
406b(4): mov %rax,0x0(%r8,%r9,8)
406f(2): jz 0xc(%rip)
4071(4): add $0x1,%r9
4075(4): cmp $0xa,%r9
4079(2): jnz 0xffffffd7(%rip)
407b(5): call 0xfffffb75(%rip)
4080(5): mov 0x58(%rsp),%rax
4085(9): xor $0x28,%rax
408e(2): jnz 0x7(%rip)
4090(4): add $0x68,%rsp
4094(1): ret near (%rsp)
4095(5): call 0xffffd29b(%rip)
409a(4): mov 0x8(%r10),%r11
409e(4): lea 0x8(%r11),%rax
40a2(4): mov %rax,0x8(%r10)
40a6(2): jmp 0xffffffbf(%rip)

"version_etc" :
40b0(1): push %rbp
40b1(1): push %rbx
40b2(6): mov $0x20,%r10d
40b8(3): xor %r11d,%r11d
40bb(7): sub $0xb8,%rsp
40c2(9): mov $0x28,%rax
40cb(5): mov %rax,0x78(%rsp)
40d0(2): xor %eax,%eax
40d2(8): lea 0xd0(%rsp),%rax
40da(8): mov %r8,0xa0(%rsp)
40e2(8): lea 0xd0(%rsp),%rbx
40ea(5): lea 0x20(%rsp),%r8
40ef(8): mov %r9,0xa8(%rsp)
40f7(8): mov $0x20,0x8(%rsp)
40ff(5): mov %rax,0x10(%rsp)
4104(8): lea 0x80(%rsp),%rax
410c(3): xor %r9d,%r9d
410f(5): mov %rax,0x18(%rsp)
4114(3): mov %rax,%rbp
4117(9): nop 0x0(%rax,%rax,1)
4120(4): cmp $0x2f,%r10d
4124(2): jnbe 0x58(%rip)
4126(3): mov %r10d,%eax
4129(6): mov $0x1,%r11d
412f(4): add $0x8,%r10d
4133(3): add %rbp,%rax
4136(3): mov (%rax),%rax
4139(3): test %rax,%rax
413c(4): mov %rax,0x0(%r8,%r9,8)
4140(2): jz 0xc(%rip)
4142(4): add $0x1,%r9
4146(4): cmp $0xa,%r9
414a(2): jnz 0xffffffd6(%rip)
414c(3): test %r11b,%r11b
414f(2): jnz 0x26(%rip)
4151(5): call 0xfffffa9f(%rip)
4156(5): mov 0x78(%rsp),%rax
415b(9): xor $0x28,%rax
4164(2): jnz 0xc(%rip)
4166(7): add $0xb8,%rsp
416d(1): pop %rbx
416e(1): pop %rbp
416f(1): ret near (%rsp)
4170(5): call 0xffffd1c0(%rip)
4175(5): mov %r10d,0x8(%rsp)
417a(2): jmp 0xffffffd7(%rip)
417c(3): mov %rbx,%rax
417f(4): add $0x8,%rbx
4183(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4190(1): push %rbx
4191(7): lea 0x110a(%rip),%rsi
4198(5): mov $0x5,%edx
419d(2): xor %edi,%edi
419f(5): call 0xffffd161(%rip)
41a4(7): lea 0x110c(%rip),%rdx
41ab(3): mov %rax,%rsi
41ae(5): mov $0x1,%edi
41b3(2): xor %eax,%eax
41b5(5): call 0xffffd2ab(%rip)
41ba(7): lea 0x110c(%rip),%rsi
41c1(5): mov $0x5,%edx
41c6(2): xor %edi,%edi
41c8(5): call 0xffffd138(%rip)
41cd(7): lea 0xaa4(%rip),%rcx
41d4(7): lea 0x6e8(%rip),%rdx
41db(3): mov %rax,%rsi
41de(5): mov $0x1,%edi
41e3(2): xor %eax,%eax
41e5(5): call 0xffffd27b(%rip)
41ea(7): mov 0x202e97(%rip),%rbx
41f1(7): lea 0x1308(%rip),%rsi
41f8(2): xor %edi,%edi
41fa(5): mov $0x5,%edx
41ff(5): call 0xffffd101(%rip)
4204(3): mov %rbx,%rsi
4207(3): mov %rax,%rdi
420a(1): pop %rbx
420b(5): jmp 0xffffd1b5(%rip)

"xmalloc" :
4210(1): push %rbx
4211(3): mov %rdi,%rbx
4214(5): call 0xffffd1ec(%rip)
4219(3): test %rax,%rax
421c(2): jnz 0x7(%rip)
421e(3): test %rbx,%rbx
4221(2): jnz 0x4(%rip)
4223(1): pop %rbx
4224(1): ret near (%rsp)
4225(5): call 0x23b(%rip)

"xnmalloc" :
4230(3): mov %rdi,%rax
4233(3): mul %rax,%rsi,%rdx
4236(3): mov %rax,%rdi
4239(3): seto %al
423c(3): test %rdi,%rdi
423f(2): js 0xc(%rip)
4241(3): movzx %al,%eax
4244(3): test %rax,%rax
4247(2): jnz 0x4(%rip)
4249(2): jmp 0xffffffc7(%rip)
424b(4): sub $0x8,%rsp
424f(5): call 0x211(%rip)

"xrealloc" :
4270(3): test %rsi,%rsi
4273(1): push %rbx
4274(3): mov %rsi,%rbx
4277(2): jnz 0x7(%rip)
4279(3): test %rdi,%rdi
427c(2): jnz 0x1c(%rip)
427e(3): mov %rbx,%rsi
4281(5): call 0xffffd1bf(%rip)
4286(3): test %rax,%rax
4289(2): jnz 0x7(%rip)
428b(3): test %rbx,%rbx
428e(2): jnz 0x13(%rip)
4290(1): pop %rbx
4291(1): ret near (%rsp)
4292(6): nop 0x0(%rax,%rax,1)
4298(5): call 0xffffcfd8(%rip)
429d(2): xor %eax,%eax
429f(1): pop %rbx
42a0(1): ret near (%rsp)
42a1(5): call 0x1bf(%rip)

"xnrealloc" :
42b0(3): mov %rsi,%rax
42b3(3): mul %rax,%rdx,%rdx
42b6(3): mov %rax,%rsi
42b9(3): seto %al
42bc(3): test %rsi,%rsi
42bf(2): js 0xc(%rip)
42c1(3): movzx %al,%eax
42c4(3): test %rax,%rax
42c7(2): jnz 0x4(%rip)
42c9(2): jmp 0xffffffa7(%rip)
42cb(4): sub $0x8,%rsp
42cf(5): call 0x191(%rip)

"x2nrealloc" :
42e0(3): test %rdi,%rdi
42e3(3): mov %rdx,%r9
42e6(3): mov (%rsi),%rcx
42e9(2): jz 0x37(%rip)
42eb(2): xor %edx,%edx
42ed(a): mov $0x6148914691236517204,%rax
42f7(3): div %r9,%rax
42fa(3): cmp %rcx,%rax
42fd(2): jbe 0x3e(%rip)
42ff(3): mov %rcx,%rax
4302(3): shr $0x1,%rax
4305(5): lea 0x1(%rax,%rcx,1),%rcx
430a(3): mov %rcx,(%rsi)
430d(4): imul %r9,%rcx
4311(3): mov %rcx,%rsi
4314(5): jmp 0xffffff5c(%rip)
4319(7): nop 0x0(%rax)
4320(3): test %rcx,%rcx
4323(2): jz 0x25(%rip)
4325(3): mov %rcx,%rax
4328(3): mul %rax,%r9,%rdx
432b(3): seto %dl
432e(3): test %rax,%rax
4331(3): movzx %dl,%edx
4334(2): js 0x7(%rip)
4336(3): test %rdx,%rdx
4339(2): jz 0xffffffd1(%rip)
433b(4): sub $0x8,%rsp
433f(5): call 0x121(%rip)
4344(4): nop 0x0(%rax)
4348(2): xor %edx,%edx
434a(5): mov $0x80,%eax
434f(3): xor %r8d,%r8d
4352(3): div %r9,%rax
4355(3): test %rax,%rax
4358(4): setz %r8b
435c(4): lea 0x0(%r8,%rax,1),%rcx
4360(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4370(3): test %rdi,%rdi
4373(3): mov (%rsi),%rax
4376(2): jz 0x2a(%rip)
4378(a): mov $0x6148914691236517203,%rdx
4382(3): cmp %rdx,%rax
4385(2): jnbe 0x2c(%rip)
4387(3): mov %rax,%rdx
438a(3): shr $0x1,%rdx
438d(5): lea 0x1(%rdx,%rax,1),%rax
4392(3): mov %rax,(%rsi)
4395(3): mov %rax,%rsi
4398(5): jmp 0xfffffed8(%rip)
439d(3): nop (%rax)
43a0(3): test %rax,%rax
43a3(5): mov $0x80,%edx
43a8(4): cmove %rdx,%rax
43ac(3): test %rax,%rax
43af(2): jns 0xffffffe3(%rip)
43b1(4): sub $0x8,%rsp
43b5(5): call 0xab(%rip)

"xzalloc" :
43c0(1): push %rbx
43c1(3): mov %rdi,%rbx
43c4(5): call 0xfffffe4c(%rip)
43c9(3): mov %rbx,%rdx
43cc(2): xor %esi,%esi
43ce(3): mov %rax,%rdi
43d1(1): pop %rbx
43d2(5): jmp 0xffffcfbe(%rip)

"xcalloc" :
43e0(3): mov %rdi,%rax
43e3(4): sub $0x8,%rsp
43e7(3): mul %rax,%rsi,%rdx
43ea(3): seto %dl
43ed(3): test %rax,%rax
43f0(2): js 0x19(%rip)
43f2(3): movzx %dl,%edx
43f5(3): test %rdx,%rdx
43f8(2): jnz 0x11(%rip)
43fa(5): call 0xffffcfd6(%rip)
43ff(3): test %rax,%rax
4402(2): jz 0x7(%rip)
4404(4): add $0x8,%rsp
4408(1): ret near (%rsp)
4409(5): call 0x57(%rip)

"xmemdup" :
4410(1): push %rbp
4411(1): push %rbx
4412(3): mov %rdi,%rbp
4415(3): mov %rsi,%rdi
4418(3): mov %rsi,%rbx
441b(4): sub $0x8,%rsp
441f(5): call 0xfffffdf1(%rip)
4424(4): add $0x8,%rsp
4428(3): mov %rbx,%rdx
442b(3): mov %rbp,%rsi
442e(1): pop %rbx
442f(1): pop %rbp
4430(3): mov %rax,%rdi
4433(5): jmp 0xffffcfad(%rip)

"xstrdup" :
4440(1): push %rbx
4441(3): mov %rdi,%rbx
4444(5): call 0xffffcedc(%rip)
4449(3): mov %rbx,%rdi
444c(4): lea 0x1(%rax),%rsi
4450(1): pop %rbx
4451(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4460(7): lea 0x1148(%rip),%rsi
4467(4): sub $0x8,%rsp
446b(5): mov $0x5,%edx
4470(2): xor %edi,%edi
4472(5): call 0xffffce8e(%rip)
4477(6): mov 0x202b9b(%rip),%edi
447d(7): lea 0x8ac(%rip),%rdx
4484(3): mov %rax,%rcx
4487(2): xor %esi,%esi
4489(2): xor %eax,%eax
448b(5): call 0xffffcfe5(%rip)
4490(5): call 0xffffcdf0(%rip)

"xstrndup" :
44a0(4): sub $0x8,%rsp
44a4(5): call 0xffffcefc(%rip)
44a9(3): test %rax,%rax
44ac(2): jz 0x7(%rip)
44ae(4): add $0x8,%rsp
44b2(1): ret near (%rsp)
44b3(5): call 0xffffffad(%rip)

"rpl_mbrtowc" :
44c0(2): push %r13
44c2(2): push %r12
44c4(3): mov %rsi,%r13
44c7(1): push %rbp
44c8(1): push %rbx
44c9(3): mov %rdi,%rbx
44cc(3): mov %rdx,%r12
44cf(4): sub $0x18,%rsp
44d3(9): mov $0x28,%rax
44dc(5): mov %rax,0x8(%rsp)
44e1(2): xor %eax,%eax
44e3(5): lea 0x4(%rsp),%rax
44e8(3): test %rdi,%rdi
44eb(4): cmove %rax,%rbx
44ef(3): mov %rbx,%rdi
44f2(5): call 0xffffce5e(%rip)
44f7(4): cmp $0xfffffffd,%rax
44fb(3): mov %rax,%rbp
44fe(2): jbe 0x22(%rip)
4500(3): test %r12,%r12
4503(2): jz 0x1d(%rip)
4505(2): xor %edi,%edi
4507(5): call 0xc9(%rip)
450c(2): test %al,%al
450e(2): jnz 0x12(%rip)
4510(5): movzx 0x0(%r13),%eax
4515(5): mov $0x1,%ebp
451a(2): mov %eax,(%rbx)
451c(4): nop 0x0(%rax)
4520(5): mov 0x8(%rsp),%rdx
4525(9): xor $0x28,%rdx
452e(3): mov %rbp,%rax
4531(2): jnz 0xd(%rip)
4533(4): add $0x18,%rsp
4537(1): pop %rbx
4538(1): pop %rbp
4539(2): pop %r12
453b(2): pop %r13
453d(1): ret near (%rsp)
453e(5): call 0xffffcdf2(%rip)

"close_stream" :
4550(2): push %r12
4552(1): push %rbp
4553(3): mov %rdi,%rbp
4556(1): push %rbx
4557(5): call 0xffffcd69(%rip)
455c(3): mov 0x0(%rbp),%ebx
455f(3): mov %rbp,%rdi
4562(3): mov %rax,%r12
4565(5): call 0x10b(%rip)
456a(3): and $0x20,%ebx
456d(2): test %ebx,%ebx
456f(2): jnz 0x19(%rip)
4571(2): test %eax,%eax
4573(2): jz 0xc(%rip)
4575(3): test %r12,%r12
4578(5): mov $0xffffffff,%eax
457d(2): jz 0x3b(%rip)
457f(1): pop %rbx
4580(1): pop %rbp
4581(2): pop %r12
4583(1): ret near (%rsp)
4584(4): nop 0x0(%rax)
4588(2): test %eax,%eax
458a(2): jnz 0x1e(%rip)
458c(5): call 0xffffcd04(%rip)
4591(6): mov $0x0,(%rax)
4597(5): mov $0xffffffff,%eax
459c(1): pop %rbx
459d(1): pop %rbp
459e(2): pop %r12
45a0(1): ret near (%rsp)
45a1(7): nop 0x0(%rax)
45a8(1): pop %rbx
45a9(5): mov $0xffffffff,%eax
45ae(1): pop %rbp
45af(2): pop %r12
45b1(1): ret near (%rsp)
45b2(6): nop 0x0(%rax,%rax,1)
45b8(5): call 0xffffccd8(%rip)
45bd(3): cmp $0x9,(%rax)
45c0(1): pop %rbx
45c1(1): pop %rbp
45c2(2): pop %r12
45c4(3): setnz %al
45c7(3): movzx %al,%eax
45ca(2): neg %eax
45cc(1): ret near (%rsp)

"hard_locale" :
45d0(4): sub $0x8,%rsp
45d4(2): xor %esi,%esi
45d6(5): call 0xffffce7a(%rip)
45db(3): mov %rax,%rdx
45de(5): mov $0x1,%eax
45e3(3): test %rdx,%rdx
45e6(2): jz 0x1f(%rip)
45e8(7): lea 0xfd1(%rip),%rdi
45ef(5): mov $0x2,%ecx
45f4(3): mov %rdx,%rsi
45f7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
45f9(3): setnbe %cl
45fc(3): sbb $0x0,%cl
45ff(2): xor %eax,%eax
4601(2): test %cl,%cl
4603(2): jnz 0xd(%rip)
4605(4): add $0x8,%rsp
4609(1): ret near (%rsp)
460a(6): nop 0x0(%rax,%rax,1)
4610(7): lea 0xfab(%rip),%rdi
4617(5): mov $0x6,%ecx
461c(3): mov %rdx,%rsi
461f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4621(3): setnbe %al
4624(2): sbb $0x0,%al
4626(2): test %al,%al
4628(3): setnz %al
462b(4): add $0x8,%rsp
462f(1): ret near (%rsp)

"locale_charset" :
4630(4): sub $0x8,%rsp
4634(5): mov $0xe,%edi
4639(5): call 0xffffcde7(%rip)
463e(3): test %rax,%rax
4641(2): jz 0x1f(%rip)
4643(3): cmp $0x0,(%rax)
4646(7): lea 0xf7b(%rip),%rdx
464d(4): cmove %rdx,%rax
4651(4): add $0x8,%rsp
4655(1): ret near (%rsp)
4656(a): nop 0x0(%rax,%rax,1)
4660(7): lea 0xf61(%rip),%rax
4667(4): add $0x8,%rsp
466b(1): ret near (%rsp)

"rpl_fclose" :
4670(2): push %r12
4672(1): push %rbp
4673(1): push %rbx
4674(3): mov %rdi,%rbx
4677(5): call 0xffffcd79(%rip)
467c(2): test %eax,%eax
467e(3): mov %rbx,%rdi
4681(2): js 0x56(%rip)
4683(5): call 0xffffcdad(%rip)
4688(2): test %eax,%eax
468a(2): jnz 0x2e(%rip)
468c(3): mov %rbx,%rdi
468f(5): call 0x61(%rip)
4694(2): test %eax,%eax
4696(2): jz 0x3e(%rip)
4698(5): call 0xffffcbf8(%rip)
469d(3): mov (%rax),%r12d
46a0(3): mov %rbx,%rdi
46a3(3): mov %rax,%rbp
46a6(5): call 0xffffcc3a(%rip)
46ab(3): test %r12d,%r12d
46ae(2): jnz 0x32(%rip)
46b0(1): pop %rbx
46b1(1): pop %rbp
46b2(2): pop %r12
46b4(1): ret near (%rsp)
46b5(3): nop (%rax)
46b8(3): mov %rbx,%rdi
46bb(5): call 0xffffcd35(%rip)
46c0(2): xor %esi,%esi
46c2(5): mov $0x1,%edx
46c7(2): mov %eax,%edi
46c9(5): call 0xffffccb7(%rip)
46ce(4): cmp $0xffffffff,%rax
46d2(2): jnz 0xffffffba(%rip)
46d4(3): mov %rbx,%rdi
46d7(1): pop %rbx
46d8(1): pop %rbp
46d9(2): pop %r12
46db(5): jmp 0xffffcc05(%rip)
46e0(4): mov %r12d,0x0(%rbp)
46e4(5): mov $0xffffffff,%eax
46e9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
46f0(3): test %rdi,%rdi
46f3(1): push %rbx
46f4(3): mov %rdi,%rbx
46f7(2): jz 0x13(%rip)
46f9(5): call 0xffffcd37(%rip)
46fe(2): test %eax,%eax
4700(2): jz 0xa(%rip)
4702(6): test $0x100,(%rbx)
4708(2): jnz 0x10(%rip)
470a(3): mov %rbx,%rdi
470d(1): pop %rbx
470e(5): jmp 0xffffcd02(%rip)
4713(5): nop 0x0(%rax,%rax,1)
4718(3): mov %rbx,%rdi
471b(5): mov $0x1,%edx
4720(2): xor %esi,%esi
4722(5): call 0xe(%rip)
4727(3): mov %rbx,%rdi
472a(1): pop %rbx
472b(5): jmp 0xffffcce5(%rip)

"rpl_fseeko" :
4730(4): mov 0x8(%rdi),%rax
4734(4): cmp %rax,0x10(%rdi)
4738(2): jz 0x8(%rip)
473a(5): jmp 0xffffcd46(%rip)
473f(1): nop 
4740(4): mov 0x20(%rdi),%rax
4744(4): cmp %rax,0x28(%rdi)
4748(2): jnz 0xfffffff2(%rip)
474a(5): cmp $0x0,0x48(%rdi)
474f(2): jnz 0xffffffeb(%rip)
4751(2): push %r12
4753(1): push %rbp
4754(3): mov %edx,%r12d
4757(1): push %rbx
4758(3): mov %rsi,%rbp
475b(3): mov %rdi,%rbx
475e(5): call 0xffffcc92(%rip)
4763(3): mov %r12d,%edx
4766(3): mov %rbp,%rsi
4769(2): mov %eax,%edi
476b(5): call 0xffffcc15(%rip)
4770(4): cmp $0xffffffff,%rax
4774(2): jz 0xe(%rip)
4776(3): and $0xef,(%rbx)
4779(7): mov %rax,0x90(%rbx)
4780(2): xor %eax,%eax
4782(1): pop %rbx
4783(1): pop %rbp
4784(2): pop %r12
4786(1): ret near (%rsp)

"__libc_csu_init" :
4790(2): push %r15
4792(2): push %r14
4794(3): mov %rdx,%r15
4797(2): push %r13
4799(2): push %r12
479b(7): lea 0x2023ae(%rip),%r12
47a2(1): push %rbp
47a3(7): lea 0x2023ae(%rip),%rbp
47aa(1): push %rbx
47ab(3): mov %edi,%r13d
47ae(3): mov %rsi,%r14
47b1(3): sub %r12,%rbp
47b4(4): sub $0x8,%rsp
47b8(4): sar $0x3,%rbp
47bc(5): call 0xffffca84(%rip)
47c1(3): test %rbp,%rbp
47c4(2): jz 0x22(%rip)
47c6(2): xor %ebx,%ebx
47c8(8): nop 0x0(%rax,%rax,1)
47d0(3): mov %r15,%rdx
47d3(3): mov %r14,%rsi
47d6(3): mov %r13d,%edi
47d9(4): call 0x0(%r12,%rbx,8)
47dd(4): add $0x1,%rbx
47e1(3): cmp %rbx,%rbp
47e4(2): jnz 0xffffffec(%rip)
47e6(4): add $0x8,%rsp
47ea(1): pop %rbx
47eb(1): pop %rbp
47ec(2): pop %r12
47ee(2): pop %r13
47f0(2): pop %r14
47f2(2): pop %r15
47f4(1): ret near (%rsp)

"atexit" :
4810(7): mov 0x2027f1(%rip),%rdx
4817(2): xor %esi,%esi
4819(5): jmp 0xffffcc77(%rip)

"_fini" :
4820(4): sub $0x8,%rsp
4824(4): add $0x8,%rsp
4828(1): ret near (%rsp)

