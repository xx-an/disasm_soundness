
"free@plt" :
11f0(6): jmp 0x205c8a(%rip)
11f6(5): push $0x0

"abort@plt" :
1200(6): jmp 0x205c82(%rip)
1206(5): push $0x1

"__errno_location@plt" :
1210(6): jmp 0x205c7a(%rip)
1216(5): push $0x2

"gethostid@plt" :
1220(6): jmp 0x205c72(%rip)
1226(5): push $0x3

"strncmp@plt" :
1230(6): jmp 0x205c6a(%rip)
1236(5): push $0x4

"_exit@plt" :
1240(6): jmp 0x205c62(%rip)
1246(5): push $0x5

"__fpending@plt" :
1250(6): jmp 0x205c5a(%rip)
1256(5): push $0x6

"textdomain@plt" :
1260(6): jmp 0x205c52(%rip)
1266(5): push $0x7

"fclose@plt" :
1270(6): jmp 0x205c4a(%rip)
1276(5): push $0x8

"bindtextdomain@plt" :
1280(6): jmp 0x205c42(%rip)
1286(5): push $0x9

"dcgettext@plt" :
1290(6): jmp 0x205c3a(%rip)
1296(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
12a0(6): jmp 0x205c32(%rip)
12a6(5): push $0xb

"strlen@plt" :
12b0(6): jmp 0x205c2a(%rip)
12b6(5): push $0xc

"__stack_chk_fail@plt" :
12c0(6): jmp 0x205c22(%rip)
12c6(5): push $0xd

"getopt_long@plt" :
12d0(6): jmp 0x205c1a(%rip)
12d6(5): push $0xe

"mbrtowc@plt" :
12e0(6): jmp 0x205c12(%rip)
12e6(5): push $0xf

"strrchr@plt" :
12f0(6): jmp 0x205c0a(%rip)
12f6(5): push $0x10

"lseek@plt" :
1300(6): jmp 0x205c02(%rip)
1306(5): push $0x11

"memset@plt" :
1310(6): jmp 0x205bfa(%rip)
1316(5): push $0x12

"memcmp@plt" :
1320(6): jmp 0x205bf2(%rip)
1326(5): push $0x13

"fputs_unlocked@plt" :
1330(6): jmp 0x205bea(%rip)
1336(5): push $0x14

"calloc@plt" :
1340(6): jmp 0x205be2(%rip)
1346(5): push $0x15

"memcpy@plt" :
1350(6): jmp 0x205bda(%rip)
1356(5): push $0x16

"fileno@plt" :
1360(6): jmp 0x205bd2(%rip)
1366(5): push $0x17

"malloc@plt" :
1370(6): jmp 0x205bca(%rip)
1376(5): push $0x18

"fflush@plt" :
1380(6): jmp 0x205bc2(%rip)
1386(5): push $0x19

"nl_langinfo@plt" :
1390(6): jmp 0x205bba(%rip)
1396(5): push $0x1a

"__freading@plt" :
13a0(6): jmp 0x205bb2(%rip)
13a6(5): push $0x1b

"realloc@plt" :
13b0(6): jmp 0x205baa(%rip)
13b6(5): push $0x1c

"setlocale@plt" :
13c0(6): jmp 0x205ba2(%rip)
13c6(5): push $0x1d

"__printf_chk@plt" :
13d0(6): jmp 0x205b9a(%rip)
13d6(5): push $0x1e

"error@plt" :
13e0(6): jmp 0x205b92(%rip)
13e6(5): push $0x1f

"fseeko@plt" :
13f0(6): jmp 0x205b8a(%rip)
13f6(5): push $0x20

"__cxa_atexit@plt" :
1400(6): jmp 0x205b82(%rip)
1406(5): push $0x21

"exit@plt" :
1410(6): jmp 0x205b7a(%rip)
1416(5): push $0x22

"fwrite@plt" :
1420(6): jmp 0x205b72(%rip)
1426(5): push $0x23

"__fprintf_chk@plt" :
1430(6): jmp 0x205b6a(%rip)
1436(5): push $0x24

"mbsinit@plt" :
1440(6): jmp 0x205b62(%rip)
1446(5): push $0x25

"iswprint@plt" :
1450(6): jmp 0x205b5a(%rip)
1456(5): push $0x26

"__ctype_b_loc@plt" :
1460(6): jmp 0x205b52(%rip)
1466(5): push $0x27

".plt.got" :
1470(6): jmp 0x205b6a(%rip)
1476(2): nop 

"_init" :
11c0(4): sub $0x8,%rsp
11c4(7): mov 0x205e05(%rip),%rax
11cb(3): test %rax,%rax
11ce(2): jz 0x4(%rip)
11d0(2): call %rax
11d2(4): add $0x8,%rsp
11d6(1): ret near (%rsp)

"main" :
1480(1): push %rbp
1481(1): push %rbx
1482(2): mov %edi,%ebp
1484(3): mov %rsi,%rbx
1487(4): sub $0x8,%rsp
148b(3): mov (%rsi),%rdi
148e(5): call 0x872(%rip)
1493(7): lea 0x39e7(%rip),%rsi
149a(5): mov $0x6,%edi
149f(5): call 0xffffff21(%rip)
14a4(7): lea 0x3263(%rip),%rsi
14ab(7): lea 0x3233(%rip),%rdi
14b2(5): call 0xfffffdce(%rip)
14b7(7): lea 0x3227(%rip),%rdi
14be(5): call 0xfffffda2(%rip)
14c3(7): lea 0x506(%rip),%rdi
14ca(5): call 0x3166(%rip)
14cf(7): lea 0x3250(%rip),%rax
14d6(4): sub $0x8,%rsp
14da(7): mov 0x205b2f(%rip),%r8
14e1(2): push $0x0
14e3(7): lea 0x31f7(%rip),%rcx
14ea(7): lea 0x3173(%rip),%rdx
14f1(1): push %rax
14f2(7): lea 0x197(%rip),%rax
14f9(6): mov $0x1,%r9d
14ff(3): mov %rbx,%rsi
1502(2): mov %ebp,%edi
1504(1): push %rax
1505(2): xor %eax,%eax
1507(5): call 0x6b9(%rip)
150c(7): movsxd 0x205b7d(%rip),%rax
1513(4): add $0x20,%rsp
1517(2): cmp %ebp,%eax
1519(2): jl 0x25(%rip)
151b(5): call 0xfffffd05(%rip)
1520(7): lea 0x321d(%rip),%rsi
1527(2): mov %eax,%edx
1529(5): mov $0x1,%edi
152e(2): xor %eax,%eax
1530(5): call 0xfffffea0(%rip)
1535(4): add $0x8,%rsp
1539(2): xor %eax,%eax
153b(1): pop %rbx
153c(1): pop %rbp
153d(1): ret near (%rsp)
153e(4): mov 0x0(%rbx,%rax,8),%rdi
1542(5): call 0x24ce(%rip)
1547(7): lea 0x31e5(%rip),%rsi
154e(3): mov %rax,%rbx
1551(5): mov $0x5,%edx
1556(2): xor %edi,%edi
1558(5): call 0xfffffd38(%rip)
155d(2): xor %edi,%edi
155f(3): mov %rax,%rdx
1562(3): mov %rbx,%rcx
1565(2): xor %esi,%esi
1567(2): xor %eax,%eax
1569(5): call 0xfffffe77(%rip)
156e(5): mov $0x1,%edi
1573(5): call 0x11d(%rip)

"_start" :
1580(2): xor %ebp,%ebp
1582(3): mov %rdx,%r9
1585(1): pop %rsi
1586(3): mov %rsp,%rdx
1589(4): and $0xfffffff0,%rsp
158d(1): push %rax
158e(1): push %rsp
158f(7): lea 0x308a(%rip),%r8
1596(7): lea 0x3013(%rip),%rcx
159d(7): lea 0xfffffedc(%rip),%rdi
15a4(6): call 0x205a1e(%rip)
15aa(1): hlt 

"deregister_tm_clones" :
15b0(7): lea 0x205ac9(%rip),%rdi
15b7(1): push %rbp
15b8(7): lea 0x205ac1(%rip),%rax
15bf(3): cmp %rdi,%rax
15c2(3): mov %rsp,%rbp
15c5(2): jz 0x1b(%rip)
15c7(7): mov 0x2059f2(%rip),%rax
15ce(3): test %rax,%rax
15d1(2): jz 0xf(%rip)
15d3(1): pop %rbp
15d4(2): jmp %rax
15d6(a): nop 0x0(%rax,%rax,1)
15e0(1): pop %rbp
15e1(1): ret near (%rsp)

"register_tm_clones" :
15f0(7): lea 0x205a89(%rip),%rdi
15f7(7): lea 0x205a82(%rip),%rsi
15fe(1): push %rbp
15ff(3): sub %rdi,%rsi
1602(3): mov %rsp,%rbp
1605(4): sar $0x3,%rsi
1609(3): mov %rsi,%rax
160c(4): shr $0x3f,%rax
1610(3): add %rax,%rsi
1613(3): sar $0x1,%rsi
1616(2): jz 0x1a(%rip)
1618(7): mov 0x2059b9(%rip),%rax
161f(3): test %rax,%rax
1622(2): jz 0xe(%rip)
1624(1): pop %rbp
1625(2): jmp %rax
1627(9): nop 0x0(%rax,%rax,1)
1630(1): pop %rbp
1631(1): ret near (%rsp)

"__do_global_dtors_aux" :
1640(7): cmp $0x0,0x205a81(%rip)
1647(2): jnz 0x31(%rip)
1649(8): cmp $0x0,0x20598f(%rip)
1651(1): push %rbp
1652(3): mov %rsp,%rbp
1655(2): jz 0xe(%rip)
1657(7): mov 0x2059aa(%rip),%rdi
165e(5): call 0xfffffe12(%rip)
1663(5): call 0xffffff4d(%rip)
1668(7): mov $0x1,0x205a59(%rip)
166f(1): pop %rbp
1670(1): ret near (%rsp)
1671(7): nop 0x0(%rax)
1678(2): REP ret near (%rsp)

"frame_dummy" :
1680(1): push %rbp
1681(3): mov %rsp,%rbp
1684(1): pop %rbp
1685(5): jmp 0xffffff6b(%rip)

"usage" :
1690(2): push %r13
1692(2): push %r12
1694(5): mov $0x5,%edx
1699(1): push %rbp
169a(1): push %rbx
169b(2): mov %edi,%ebp
169d(7): sub $0x88,%rsp
16a4(7): mov 0x205a35(%rip),%rbx
16ab(9): mov $0x28,%rax
16b4(5): mov %rax,0x78(%rsp)
16b9(2): xor %eax,%eax
16bb(2): test %edi,%edi
16bd(2): jz 0x30(%rip)
16bf(7): lea 0x308a(%rip),%rsi
16c6(2): xor %edi,%edi
16c8(5): call 0xfffffbc8(%rip)
16cd(7): mov 0x2059ec(%rip),%rdi
16d4(3): mov %rax,%rdx
16d7(3): mov %rbx,%rcx
16da(5): mov $0x1,%esi
16df(2): xor %eax,%eax
16e1(5): call 0xfffffd4f(%rip)
16e6(2): mov %ebp,%edi
16e8(5): call 0xfffffd28(%rip)
16ed(7): lea 0x3084(%rip),%rsi
16f4(2): xor %edi,%edi
16f6(5): call 0xfffffb9a(%rip)
16fb(3): mov %rbx,%rdx
16fe(3): mov %rax,%rsi
1701(5): mov $0x1,%edi
1706(2): xor %eax,%eax
1708(5): call 0xfffffcc8(%rip)
170d(7): mov 0x205974(%rip),%rbx
1714(7): lea 0x30bd(%rip),%rsi
171b(5): mov $0x5,%edx
1720(2): xor %edi,%edi
1722(5): call 0xfffffb6e(%rip)
1727(3): mov %rbx,%rsi
172a(3): mov %rax,%rdi
172d(5): call 0xfffffc03(%rip)
1732(7): mov 0x20594f(%rip),%rbx
1739(7): lea 0x30c8(%rip),%rsi
1740(5): mov $0x5,%edx
1745(2): xor %edi,%edi
1747(5): call 0xfffffb49(%rip)
174c(3): mov %rbx,%rsi
174f(3): mov %rax,%rdi
1752(7): lea 0x2f67(%rip),%rbx
1759(5): call 0xfffffbd7(%rip)
175e(7): lea 0x2f06(%rip),%rax
1765(7): lea 0x2f40(%rip),%rcx
176c(5): mov %rbx,0x50(%rsp)
1771(7): lea 0x2eec(%rip),%rbx
1778(9): mov $0x0,0x60(%rsp)
1781(9): mov $0x0,0x68(%rsp)
178a(4): mov %rax,(%rsp)
178e(7): lea 0x2ed8(%rip),%rax
1795(5): mov %rcx,0x30(%rsp)
179a(7): lea 0x2f15(%rip),%rcx
17a1(3): mov %rsp,%rdx
17a4(5): mov %rax,0x8(%rsp)
17a9(7): lea 0x2f35(%rip),%rax
17b0(5): mov %rcx,0x40(%rsp)
17b5(5): mov %rax,0x10(%rsp)
17ba(7): lea 0x2ebc(%rip),%rax
17c1(5): mov %rax,0x18(%rsp)
17c6(7): lea 0x2ec6(%rip),%rax
17cd(5): mov %rax,0x20(%rsp)
17d2(7): lea 0x2ec4(%rip),%rax
17d9(5): mov %rax,0x28(%rsp)
17de(5): mov %rax,0x38(%rsp)
17e3(5): mov %rax,0x48(%rsp)
17e8(5): mov %rax,0x58(%rsp)
17ed(3): nop (%rax)
17f0(4): add $0x10,%rdx
17f4(3): mov (%rdx),%rdi
17f7(3): test %rdi,%rdi
17fa(2): jz 0x15(%rip)
17fc(5): mov $0x7,%ecx
1801(3): mov %rbx,%rsi
1804(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1806(3): setnbe %al
1809(2): sbb $0x0,%al
180b(2): test %al,%al
180d(2): jnz 0xffffffe3(%rip)
180f(4): mov 0x8(%rdx),%r12
1813(2): xor %edi,%edi
1815(5): mov $0x5,%edx
181a(7): lea 0x2ea9(%rip),%rsi
1821(3): test %r12,%r12
1824(6): jz 0xc7(%rip)
182a(5): call 0xfffffa66(%rip)
182f(7): lea 0x300a(%rip),%rcx
1836(7): lea 0x2ea4(%rip),%rdx
183d(3): mov %rax,%rsi
1840(5): mov $0x1,%edi
1845(2): xor %eax,%eax
1847(5): call 0xfffffb89(%rip)
184c(2): xor %esi,%esi
184e(5): mov $0x5,%edi
1853(5): call 0xfffffb6d(%rip)
1858(3): test %rax,%rax
185b(2): jz 0x1e(%rip)
185d(7): lea 0x2e8b(%rip),%rsi
1864(5): mov $0x3,%edx
1869(3): mov %rax,%rdi
186c(5): call 0xfffff9c4(%rip)
1871(2): test %eax,%eax
1873(6): jnz 0x10d(%rip)
1879(7): lea 0x2e73(%rip),%rsi
1880(2): xor %edi,%edi
1882(5): mov $0x5,%edx
1887(5): call 0xfffffa09(%rip)
188c(7): lea 0x2dd1(%rip),%rcx
1893(7): lea 0x2fa6(%rip),%rdx
189a(3): mov %rax,%rsi
189d(5): mov $0x1,%edi
18a2(2): xor %eax,%eax
18a4(5): call 0xfffffb2c(%rip)
18a9(3): cmp %rbx,%r12
18ac(7): lea 0x2dd4(%rip),%rcx
18b3(7): lea 0x35c7(%rip),%rbx
18ba(4): cmove %rcx,%rbx
18be(7): lea 0x2feb(%rip),%rsi
18c5(2): xor %edi,%edi
18c7(5): mov $0x5,%edx
18cc(5): call 0xfffff9c4(%rip)
18d1(3): mov %rbx,%rcx
18d4(3): mov %rax,%rsi
18d7(3): mov %r12,%rdx
18da(5): mov $0x1,%edi
18df(2): xor %eax,%eax
18e1(5): call 0xfffffaef(%rip)
18e6(5): jmp 0xfffffe00(%rip)
18eb(5): call 0xfffff9a5(%rip)
18f0(7): lea 0x2f49(%rip),%rcx
18f7(7): lea 0x2de3(%rip),%rdx
18fe(3): mov %rax,%rsi
1901(5): mov $0x1,%edi
1906(2): xor %eax,%eax
1908(5): call 0xfffffac8(%rip)
190d(2): xor %esi,%esi
190f(5): mov $0x5,%edi
1914(5): call 0xfffffaac(%rip)
1919(3): test %rax,%rax
191c(2): jz 0x1a(%rip)
191e(7): lea 0x2dca(%rip),%rsi
1925(5): mov $0x3,%edx
192a(3): mov %rax,%rdi
192d(5): call 0xfffff903(%rip)
1932(2): test %eax,%eax
1934(2): jnz 0x45(%rip)
1936(7): lea 0x2db6(%rip),%rsi
193d(5): mov $0x5,%edx
1942(2): xor %edi,%edi
1944(7): lea 0x2d19(%rip),%r12
194b(7): lea 0x2d35(%rip),%rbx
1952(5): call 0xfffff93e(%rip)
1957(7): lea 0x2d06(%rip),%rcx
195e(7): lea 0x2edb(%rip),%rdx
1965(3): mov %rax,%rsi
1968(5): mov $0x1,%edi
196d(2): xor %eax,%eax
196f(5): call 0xfffffa61(%rip)
1974(5): jmp 0xffffff4a(%rip)
1979(7): lea 0x2ce4(%rip),%r12
1980(7): mov 0x205701(%rip),%r13
1987(7): lea 0x2eda(%rip),%rsi
198e(2): xor %edi,%edi
1990(5): mov $0x5,%edx
1995(5): call 0xfffff8fb(%rip)
199a(3): mov %r13,%rsi
199d(3): mov %rax,%rdi
19a0(5): call 0xfffff990(%rip)
19a5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
19b0(7): mov %rdi,0x205721(%rip)
19b7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
19c0(7): mov %dil,0x205709(%rip)
19c7(1): ret near (%rsp)

"close_stdout" :
19d0(1): push %rbp
19d1(1): push %rbx
19d2(4): sub $0x8,%rsp
19d6(7): mov 0x2056ab(%rip),%rdi
19dd(5): call 0x2993(%rip)
19e2(2): test %eax,%eax
19e4(2): jz 0x18(%rip)
19e6(5): call 0xfffff82a(%rip)
19eb(7): cmp $0x0,0x2056de(%rip)
19f2(3): mov %rax,%rbx
19f5(2): jz 0x1e(%rip)
19f7(3): cmp $0x20,(%rax)
19fa(2): jnz 0x19(%rip)
19fc(7): mov 0x2056bd(%rip),%rdi
1a03(5): call 0x296d(%rip)
1a08(2): test %eax,%eax
1a0a(2): jnz 0x48(%rip)
1a0c(4): add $0x8,%rsp
1a10(1): pop %rbx
1a11(1): pop %rbp
1a12(1): ret near (%rsp)
1a13(7): lea 0x2ece(%rip),%rsi
1a1a(2): xor %edi,%edi
1a1c(5): mov $0x5,%edx
1a21(5): call 0xfffff86f(%rip)
1a26(7): mov 0x2056ab(%rip),%rdi
1a2d(3): mov %rax,%rbp
1a30(3): test %rdi,%rdi
1a33(2): jz 0x2a(%rip)
1a35(5): call 0x1ddb(%rip)
1a3a(2): mov (%rbx),%esi
1a3c(7): lea 0x2eb1(%rip),%rdx
1a43(3): mov %rax,%rcx
1a46(3): mov %rbp,%r8
1a49(2): xor %edi,%edi
1a4b(2): xor %eax,%eax
1a4d(5): call 0xfffff993(%rip)
1a52(6): mov 0x2055c0(%rip),%edi
1a58(5): call 0xfffff7e8(%rip)
1a5d(2): mov (%rbx),%esi
1a5f(7): lea 0x2e92(%rip),%rdx
1a66(3): mov %rax,%rcx
1a69(2): xor %edi,%edi
1a6b(2): xor %eax,%eax
1a6d(5): call 0xfffff973(%rip)
1a72(2): jmp 0xffffffe0(%rip)

"parse_long_options" :
1a80(2): push %r13
1a82(2): push %r12
1a84(3): mov %r8,%r13
1a87(1): push %rbp
1a88(1): push %rbx
1a89(3): mov %rdx,%rbp
1a8c(3): mov %rcx,%r12
1a8f(7): sub $0xe8,%rsp
1a96(2): test %al,%al
1a98(2): jz 0x3c(%rip)
1a9a(5): movaps %xmm0,0x60(%rsp)
1a9f(5): movaps %xmm1,0x70(%rsp)
1aa4(8): movaps %xmm2,0x80(%rsp)
1aac(8): movaps %xmm3,0x90(%rsp)
1ab4(8): movaps %xmm4,0xa0(%rsp)
1abc(8): movaps %xmm5,0xb0(%rsp)
1ac4(8): movaps %xmm6,0xc0(%rsp)
1acc(8): movaps %xmm7,0xd0(%rsp)
1ad4(9): mov $0x28,%rax
1add(5): mov %rax,0x28(%rsp)
1ae2(2): xor %eax,%eax
1ae4(3): cmp $0x2,%edi
1ae7(6): mov 0x2055b3(%rip),%ebx
1aed(a): mov $0x0,0x2055a9(%rip)
1af7(2): jz 0x39(%rip)
1af9(5): mov 0x28(%rsp),%rax
1afe(9): xor $0x28,%rax
1b07(6): mov %ebx,0x205593(%rip)
1b0d(a): mov $0x0,0x205579(%rip)
1b17(6): jnz 0xa3(%rip)
1b1d(7): add $0xe8,%rsp
1b24(1): pop %rbx
1b25(1): pop %rbp
1b26(2): pop %r12
1b28(2): pop %r13
1b2a(1): ret near (%rsp)
1b2b(5): nop 0x0(%rax,%rax,1)
1b30(7): lea 0x205089(%rip),%rcx
1b37(7): lea 0x2dbd(%rip),%rdx
1b3e(3): xor %r8d,%r8d
1b41(5): mov %r9,0x8(%rsp)
1b46(5): call 0xfffff78a(%rip)
1b4b(3): cmp $0xff,%eax
1b4e(2): jz 0xffffffab(%rip)
1b50(3): cmp $0x68,%eax
1b53(5): mov 0x8(%rsp),%r9
1b58(2): jz 0x58(%rip)
1b5a(3): cmp $0x76,%eax
1b5d(2): jnz 0xffffff9c(%rip)
1b5f(8): lea 0x110(%rsp),%rax
1b67(7): mov 0x20551a(%rip),%rdi
1b6e(5): lea 0x10(%rsp),%r8
1b73(3): mov %r13,%rcx
1b76(3): mov %r12,%rdx
1b79(3): mov %rbp,%rsi
1b7c(5): mov %rax,0x18(%rsp)
1b81(5): lea 0x30(%rsp),%rax
1b86(8): mov $0x30,0x10(%rsp)
1b8e(8): mov $0x30,0x14(%rsp)
1b96(5): mov %rax,0x20(%rsp)
1b9b(5): call 0x22d5(%rip)
1ba0(2): xor %edi,%edi
1ba2(5): call 0xfffff86e(%rip)
1ba7(9): nop 0x0(%rax,%rax,1)
1bb0(2): xor %edi,%edi
1bb2(3): call %r9
1bb5(5): jmp 0xffffff44(%rip)
1bba(5): call 0xfffff706(%rip)

"parse_gnu_standard_options_only" :
1bc0(2): push %r14
1bc2(2): push %r13
1bc4(3): mov %r8,%r14
1bc7(2): push %r12
1bc9(1): push %rbp
1bca(3): mov %rdx,%r12
1bcd(1): push %rbx
1bce(3): mov %rcx,%r13
1bd1(7): sub $0xd0,%rsp
1bd8(2): test %al,%al
1bda(8): mov 0x100(%rsp),%rbp
1be2(2): jz 0x39(%rip)
1be4(5): movaps %xmm0,0x50(%rsp)
1be9(5): movaps %xmm1,0x60(%rsp)
1bee(5): movaps %xmm2,0x70(%rsp)
1bf3(8): movaps %xmm3,0x80(%rsp)
1bfb(8): movaps %xmm4,0x90(%rsp)
1c03(8): movaps %xmm5,0xa0(%rsp)
1c0b(8): movaps %xmm6,0xb0(%rsp)
1c13(8): movaps %xmm7,0xc0(%rsp)
1c1b(9): mov $0x28,%rax
1c24(5): mov %rax,0x18(%rsp)
1c29(2): xor %eax,%eax
1c2b(7): lea 0x324f(%rip),%rdx
1c32(7): lea 0x2cc2(%rip),%rax
1c39(3): test %r9b,%r9b
1c3c(7): lea 0x204f7d(%rip),%rcx
1c43(4): cmove %rax,%rdx
1c47(3): xor %r8d,%r8d
1c4a(6): mov 0x205450(%rip),%ebx
1c50(a): mov $0x1,0x205446(%rip)
1c5a(5): call 0xfffff676(%rip)
1c5f(3): cmp $0xff,%eax
1c62(2): jz 0x66(%rip)
1c64(3): cmp $0x68,%eax
1c67(6): jz 0x89(%rip)
1c6d(3): cmp $0x76,%eax
1c70(2): jnz 0x50(%rip)
1c72(8): lea 0x108(%rsp),%rax
1c7a(7): mov 0x205407(%rip),%rdi
1c81(3): mov %rsp,%r8
1c84(3): mov %r14,%rcx
1c87(3): mov %r13,%rdx
1c8a(3): mov %r12,%rsi
1c8d(5): mov %rax,0x8(%rsp)
1c92(5): lea 0x20(%rsp),%rax
1c97(7): mov $0x30,(%rsp)
1c9e(8): mov $0x30,0x4(%rsp)
1ca6(5): mov %rax,0x10(%rsp)
1cab(5): call 0x21c5(%rip)
1cb0(2): xor %edi,%edi
1cb2(5): call 0xfffff75e(%rip)
1cb7(9): nop 0x0(%rax,%rax,1)
1cc0(6): mov 0x205352(%rip),%edi
1cc6(2): call %rbp
1cc8(5): mov 0x18(%rsp),%rax
1ccd(9): xor $0x28,%rax
1cd6(6): mov %ebx,0x2053c4(%rip)
1cdc(2): jnz 0x1a(%rip)
1cde(7): add $0xd0,%rsp
1ce5(1): pop %rbx
1ce6(1): pop %rbp
1ce7(2): pop %r12
1ce9(2): pop %r13
1ceb(2): pop %r14
1ced(1): ret near (%rsp)
1cee(2): nop 
1cf0(2): xor %edi,%edi
1cf2(2): call %rbp
1cf4(2): jmp 0xffffffd4(%rip)
1cf6(5): call 0xfffff5ca(%rip)

"set_program_name" :
1d00(3): test %rdi,%rdi
1d03(1): push %rbx
1d04(2): jz 0x79(%rip)
1d06(5): mov $0x2f,%esi
1d0b(3): mov %rdi,%rbx
1d0e(5): call 0xfffff5e2(%rip)
1d13(3): test %rax,%rax
1d16(2): jz 0x57(%rip)
1d18(4): lea 0x1(%rax),%r8
1d1c(3): mov %r8,%rdx
1d1f(3): sub %rbx,%rdx
1d22(4): cmp $0x6,%rdx
1d26(2): jle 0x47(%rip)
1d28(4): lea 0xfffffffa(%rax),%rsi
1d2c(7): lea 0x2c15(%rip),%rdi
1d33(5): mov $0x7,%ecx
1d38(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d3a(3): setnbe %dl
1d3d(3): sbb $0x0,%dl
1d40(2): test %dl,%dl
1d42(2): jnz 0x2b(%rip)
1d44(7): lea 0x2c05(%rip),%rdi
1d4b(5): mov $0x3,%ecx
1d50(3): mov %r8,%rsi
1d53(3): mov %r8,%rbx
1d56(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d58(3): setnbe %dl
1d5b(3): sbb $0x0,%dl
1d5e(2): test %dl,%dl
1d60(2): jnz 0xd(%rip)
1d62(4): lea 0x4(%rax),%rbx
1d66(7): mov %rbx,0x205313(%rip)
1d6d(7): mov %rbx,0x20536c(%rip)
1d74(7): mov %rbx,0x20531d(%rip)
1d7b(1): pop %rbx
1d7c(1): ret near (%rsp)
1d7d(7): mov 0x20533c(%rip),%rcx
1d84(7): lea 0x2b85(%rip),%rdi
1d8b(5): mov $0x37,%edx
1d90(5): mov $0x1,%esi
1d95(5): call 0xfffff68b(%rip)
1d9a(5): call 0xfffff466(%rip)

"gettext_quote.part.1" :
1da0(1): push %rbp
1da1(1): push %rbx
1da2(3): mov %rdi,%rbp
1da5(2): mov %esi,%ebx
1da7(4): sub $0x8,%rsp
1dab(5): call 0x26a5(%rip)
1db0(3): movzx (%rax),%edx
1db3(3): and $0xdf,%edx
1db6(3): cmp $0x55,%dl
1db9(2): jz 0x77(%rip)
1dbb(3): cmp $0x47,%dl
1dbe(2): jz 0x22(%rip)
1dc0(7): lea 0x2b9c(%rip),%rax
1dc7(7): lea 0x2b97(%rip),%rdx
1dce(3): cmp $0x9,%ebx
1dd1(4): cmovne %rdx,%rax
1dd5(4): add $0x8,%rsp
1dd9(1): pop %rbx
1dda(1): pop %rbp
1ddb(1): ret near (%rsp)
1ddc(4): nop 0x0(%rax)
1de0(4): movzx 0x1(%rax),%edx
1de4(3): and $0xdf,%edx
1de7(3): cmp $0x42,%dl
1dea(2): jnz 0xffffffd6(%rip)
1dec(4): cmp $0x31,0x2(%rax)
1df0(2): jnz 0xffffffd0(%rip)
1df2(4): cmp $0x38,0x3(%rax)
1df6(2): jnz 0xffffffca(%rip)
1df8(4): cmp $0x30,0x4(%rax)
1dfc(2): jnz 0xffffffc4(%rip)
1dfe(4): cmp $0x33,0x5(%rax)
1e02(2): jnz 0xffffffbe(%rip)
1e04(4): cmp $0x30,0x6(%rax)
1e08(2): jnz 0xffffffb8(%rip)
1e0a(4): cmp $0x0,0x7(%rax)
1e0e(2): jnz 0xffffffb2(%rip)
1e10(4): cmp $0x60,0x0(%rbp)
1e14(7): lea 0x2b41(%rip),%rax
1e1b(7): lea 0x2b3e(%rip),%rdx
1e22(4): cmovne %rdx,%rax
1e26(4): add $0x8,%rsp
1e2a(1): pop %rbx
1e2b(1): pop %rbp
1e2c(1): ret near (%rsp)
1e2d(3): nop (%rax)
1e30(4): movzx 0x1(%rax),%edx
1e34(3): and $0xdf,%edx
1e37(3): cmp $0x54,%dl
1e3a(2): jnz 0xffffff86(%rip)
1e3c(4): movzx 0x2(%rax),%edx
1e40(3): and $0xdf,%edx
1e43(3): cmp $0x46,%dl
1e46(6): jnz 0xffffff7a(%rip)
1e4c(4): cmp $0x2d,0x3(%rax)
1e50(6): jnz 0xffffff70(%rip)
1e56(4): cmp $0x38,0x4(%rax)
1e5a(6): jnz 0xffffff66(%rip)
1e60(4): cmp $0x0,0x5(%rax)
1e64(6): jnz 0xffffff5c(%rip)
1e6a(4): cmp $0x60,0x0(%rbp)
1e6e(7): lea 0x2adf(%rip),%rax
1e75(7): lea 0x2adc(%rip),%rdx
1e7c(4): cmovne %rdx,%rax
1e80(4): add $0x8,%rsp
1e84(1): pop %rbx
1e85(1): pop %rbp
1e86(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1e90(2): push %r15
1e92(2): push %r14
1e94(3): mov %r8d,%r15d
1e97(2): push %r13
1e99(2): push %r12
1e9b(3): mov %rdi,%r14
1e9e(1): push %rbp
1e9f(1): push %rbx
1ea0(3): mov %r9d,%ebx
1ea3(3): mov %rsi,%r13
1ea6(3): mov %rcx,%rbp
1ea9(3): and $0x2,%ebx
1eac(7): sub $0xb8,%rsp
1eb3(8): mov 0xf0(%rsp),%rax
1ebb(5): mov %rdx,0x10(%rsp)
1ec0(5): mov %r8d,0x8(%rsp)
1ec5(5): mov %r9d,0x78(%rsp)
1eca(5): mov %rax,0x20(%rsp)
1ecf(8): mov 0xf8(%rsp),%rax
1ed7(5): mov %rax,0x68(%rsp)
1edc(8): mov 0x100(%rsp),%rax
1ee4(5): mov %rax,0x60(%rsp)
1ee9(9): mov $0x28,%rax
1ef2(8): mov %rax,0xa8(%rsp)
1efa(2): xor %eax,%eax
1efc(5): call 0xfffff3a4(%rip)
1f01(4): cmp $0xa,%r15d
1f05(5): mov %rax,0x58(%rsp)
1f0a(6): jnbe 0x11b5(%rip)
1f10(7): lea 0x2aa9(%rip),%rcx
1f17(3): mov %r15d,%edx
1f1a(4): movsxd 0x0(%rcx,%rdx,4),%rax
1f1e(3): add %rcx,%rax
1f21(2): jmp %rax
1f23(5): mov $0x1,0xe(%rsp)
1f28(5): mov $0x0,0x7c(%rsp)
1f2d(3): xor %r12d,%r12d
1f30(9): mov $0x0,0x50(%rsp)
1f39(5): mov $0x1,0xf(%rsp)
1f3e(5): mov $0x0,0xd(%rsp)
1f43(7): lea 0x2a1b(%rip),%rax
1f4a(9): mov $0x1,0x18(%rsp)
1f53(3): xor %r15d,%r15d
1f56(8): mov $0x2,0x8(%rsp)
1f5e(5): mov %rax,0x48(%rsp)
1f63(3): xor %r11d,%r11d
1f66(3): mov %rbp,%rax
1f69(3): mov %r12d,%r8d
1f6c(3): mov %r11,%rbp
1f6f(3): mov %rax,%r11
1f72(6): nop 0x0(%rax,%rax,1)
1f78(3): cmp %rbp,%r11
1f7b(4): setnz %r12b
1f7f(4): cmp $0xffffffff,%r11
1f83(2): jnz 0xf(%rip)
1f85(5): mov 0x10(%rsp),%rax
1f8a(4): cmp $0x0,0x0(%rax,%rbp,1)
1f8e(4): setnz %r12b
1f92(3): test %r12b,%r12b
1f95(6): jz 0x65b(%rip)
1f9b(5): cmp $0x2,0x8(%rsp)
1fa0(5): mov 0x10(%rsp),%rdi
1fa5(4): lea 0x0(%rdi,%rbp,1),%r9
1fa9(3): setnz %al
1fac(4): and 0xd(%rsp),%al
1fb0(3): mov %eax,%r10d
1fb3(6): jz 0xad(%rip)
1fb9(5): mov 0x18(%rsp),%rax
1fbe(3): test %rax,%rax
1fc1(6): jz 0x42f(%rip)
1fc7(4): cmp $0xffffffff,%r11
1fcb(5): lea 0x0(%rbp,%rax,1),%rbx
1fd0(2): jnz 0x30(%rip)
1fd2(4): cmp $0x1,%rax
1fd6(2): jbe 0x2a(%rip)
1fd8(5): mov %r8b,0x38(%rsp)
1fdd(5): mov %r10b,0x30(%rsp)
1fe2(5): mov %r9,0x28(%rsp)
1fe7(5): call 0xfffff2c9(%rip)
1fec(6): movzx 0x38(%rsp),%r8d
1ff2(6): movzx 0x30(%rsp),%r10d
1ff8(3): mov %rax,%r11
1ffb(5): mov 0x28(%rsp),%r9
2000(3): cmp %r11,%rbx
2003(5): mov %r10b,0x28(%rsp)
2008(6): jnbe 0x5b8(%rip)
200e(5): mov 0x18(%rsp),%rdx
2013(5): mov 0x48(%rsp),%rsi
2018(3): mov %r9,%rdi
201b(5): mov %r11,0x40(%rsp)
2020(5): mov %r8b,0x38(%rsp)
2025(5): mov %r9,0x30(%rsp)
202a(5): call 0xfffff2f6(%rip)
202f(2): test %eax,%eax
2031(5): mov 0x30(%rsp),%r9
2036(6): movzx 0x38(%rsp),%r8d
203c(5): mov 0x40(%rsp),%r11
2041(6): jnz 0x57f(%rip)
2047(5): cmp $0x0,0xf(%rsp)
204c(6): movzx 0x28(%rsp),%r10d
2052(6): jnz 0xf83(%rip)
2058(8): nop 0x0(%rax,%rax,1)
2060(4): movzx (%r9),%ebx
2064(3): cmp $0x7e,%bl
2067(6): jnbe 0x321(%rip)
206d(7): lea 0x2978(%rip),%rcx
2074(3): movzx %bl,%edx
2077(4): movsxd 0x0(%rcx,%rdx,4),%rax
207b(3): add %rcx,%rax
207e(2): jmp %rax
2080(3): xor %r10d,%r10d
2083(4): cmp $0x1,%r11
2087(3): setnz %al
208a(4): cmp $0xffffffff,%r11
208e(2): jnz 0xe(%rip)
2090(5): mov 0x10(%rsp),%rax
2095(4): cmp $0x0,0x1(%rax)
2099(3): setnz %al
209c(5): cmp $0x2,0x8(%rsp)
20a1(3): setz %dl
20a4(2): test %al,%al
20a6(6): jz 0x252(%rip)
20ac(3): xor %r12d,%r12d
20af(2): xor %eax,%eax
20b1(7): nop 0x0(%rax)
20b8(5): cmp $0x1,0xd(%rsp)
20bd(6): jnz 0x115(%rip)
20c3(2): test %dl,%dl
20c5(6): jnz 0x10d(%rip)
20cb(5): mov 0x20(%rsp),%rsi
20d0(3): test %rsi,%rsi
20d3(2): jz 0x16(%rip)
20d5(2): mov %ebx,%edx
20d7(3): shr $0x5,%dl
20da(3): movzx %dl,%edx
20dd(3): mov 0x0(%rsi,%rdx,4),%edx
20e0(3): bt %ebx,%edx
20e3(6): jb 0x150(%rip)
20e9(3): test %r10b,%r10b
20ec(6): jnz 0x147(%rip)
20f2(3): xor $0x1,%eax
20f5(4): add $0x1,%rbp
20f9(3): and %r8d,%eax
20fc(2): test %al,%al
20fe(2): jz 0x22(%rip)
2100(3): cmp %r15,%r13
2103(2): jbe 0x7(%rip)
2105(5): mov $0x27,0x0(%r14,%r15,1)
210a(4): lea 0x1(%r15),%rax
210e(3): cmp %rax,%r13
2111(2): jbe 0x8(%rip)
2113(6): mov $0x27,0x1(%r14,%r15,1)
2119(4): add $0x2,%r15
211d(3): xor %r8d,%r8d
2120(3): cmp %r13,%r15
2123(2): jnb 0x6(%rip)
2125(4): mov %bl,0x0(%r14,%r15,1)
2129(5): movzx 0xe(%rsp),%edi
212e(4): add $0x1,%r15
2132(5): mov $0x0,%eax
2137(3): test %r12b,%r12b
213a(3): cmove %eax,%edi
213d(5): mov %dil,0xe(%rsp)
2142(5): jmp 0xfffffe36(%rip)
2147(9): nop 0x0(%rax,%rax,1)
2150(3): xor %r10d,%r10d
2153(4): mov 0x8(%rsp),%eax
2157(3): cmp $0x2,%eax
215a(6): jz 0x5be(%rip)
2160(3): cmp $0x5,%eax
2163(6): jz 0x575(%rip)
2169(3): cmp $0x2,%eax
216c(5): mov $0x3f,%ebx
2171(3): setz %dl
2174(3): xor %r12d,%r12d
2177(2): xor %eax,%eax
2179(5): jmp 0xffffff3f(%rip)
217e(2): nop 
2180(3): xor %r10d,%r10d
2183(5): cmp $0x2,0x8(%rsp)
2188(6): jz 0x508(%rip)
218e(5): mov %r12b,0x7c(%rsp)
2193(2): xor %edx,%edx
2195(2): xor %eax,%eax
2197(5): mov $0x27,%ebx
219c(5): jmp 0xffffff1c(%rip)
21a1(7): nop 0x0(%rax)
21a8(5): mov $0x9,%edx
21ad(5): mov $0x74,%ebx
21b2(5): cmp $0x2,0x8(%rsp)
21b7(3): setz %al
21ba(4): and 0xf(%rsp),%al
21be(6): jnz 0x150(%rip)
21c4(5): cmp $0x0,0xd(%rsp)
21c9(2): jnz 0x67(%rip)
21cb(2): mov %edx,%ebx
21cd(3): xor %r12d,%r12d
21d0(2): xor %eax,%eax
21d2(5): cmp $0x0,0xf(%rsp)
21d7(6): jnz 0xfffffef4(%rip)
21dd(5): jmp 0xffffff0c(%rip)
21e2(6): nop 0x0(%rax,%rax,1)
21e8(5): mov $0x8,%edx
21ed(5): mov $0x62,%ebx
21f2(2): jmp 0xffffffd2(%rip)
21f4(4): nop 0x0(%rax)
21f8(5): cmp $0x2,0x8(%rsp)
21fd(6): jz 0x3d3(%rip)
2203(5): cmp $0x0,0xd(%rsp)
2208(6): jz 0x218(%rip)
220e(5): cmp $0x0,0xf(%rsp)
2213(6): jz 0x20d(%rip)
2219(6): cmp $0x0,0x18(%rsp)
221f(6): jnz 0x3bc(%rip)
2225(5): mov $0x5c,%ebx
222a(6): nop 0x0(%rax,%rax,1)
2230(3): xor %r12d,%r12d
2233(5): cmp $0x2,0x8(%rsp)
2238(3): setz %dl
223b(5): cmp $0x0,0xf(%rsp)
2240(2): mov %edx,%eax
2242(6): jnz 0x856(%rip)
2248(3): mov %r8d,%eax
224b(3): xor $0x1,%eax
224e(2): and %dl,%al
2250(2): jz 0x31(%rip)
2252(3): cmp %r15,%r13
2255(2): jbe 0x7(%rip)
2257(5): mov $0x27,0x0(%r14,%r15,1)
225c(4): lea 0x1(%r15),%rdx
2260(3): cmp %rdx,%r13
2263(2): jbe 0x8(%rip)
2265(6): mov $0x24,0x1(%r14,%r15,1)
226b(4): lea 0x2(%r15),%rdx
226f(3): cmp %rdx,%r13
2272(2): jbe 0x8(%rip)
2274(6): mov $0x27,0x2(%r14,%r15,1)
227a(4): add $0x3,%r15
227e(3): mov %eax,%r8d
2281(3): cmp %r15,%r13
2284(2): jbe 0x7(%rip)
2286(5): mov $0x5c,0x0(%r14,%r15,1)
228b(4): add $0x1,%r15
228f(4): add $0x1,%rbp
2293(5): jmp 0xfffffe8d(%rip)
2298(8): nop 0x0(%rax,%rax,1)
22a0(5): cmp $0x0,0xd(%rsp)
22a5(6): jnz 0x1ce(%rip)
22ab(2): xor %edx,%edx
22ad(5): test $0x1,0x78(%rsp)
22b2(6): jz 0xffffff19(%rip)
22b8(4): add $0x1,%rbp
22bc(5): jmp 0xfffffcbc(%rip)
22c1(7): nop 0x0(%rax)
22c8(5): cmp $0x2,0x8(%rsp)
22cd(3): setz %dl
22d0(2): xor %eax,%eax
22d2(5): jmp 0xfffffde6(%rip)
22d7(9): nop 0x0(%rax,%rax,1)
22e0(5): mov $0x7,%edx
22e5(5): mov $0x61,%ebx
22ea(5): jmp 0xfffffeda(%rip)
22ef(1): nop 
22f0(5): cmp $0x2,0x8(%rsp)
22f5(3): setz %dl
22f8(3): test %rbp,%rbp
22fb(6): jnz 0xfffffdb1(%rip)
2301(5): movzx 0xf(%rsp),%eax
2306(2): and %dl,%al
2308(6): jz 0xfffffdb0(%rip)
230e(3): mov %r11,%rbp
2311(8): mov $0x2,0x8(%rsp)
2319(5): jmp 0x700(%rip)
231e(2): nop 
2320(5): cmp $0x2,0x8(%rsp)
2325(3): setz %dl
2328(3): xor %r12d,%r12d
232b(2): jmp 0xffffffd6(%rip)
232d(3): nop (%rax)
2330(5): cmp $0x2,0x8(%rsp)
2335(5): mov $0x20,%ebx
233a(3): setz %dl
233d(2): jmp 0xffffffc4(%rip)
233f(1): nop 
2340(5): mov $0xd,%edx
2345(5): mov $0x72,%ebx
234a(5): jmp 0xfffffe68(%rip)
234f(1): nop 
2350(5): mov $0xc,%edx
2355(5): mov $0x66,%ebx
235a(5): jmp 0xfffffe6a(%rip)
235f(1): nop 
2360(5): mov $0xb,%edx
2365(5): mov $0x76,%ebx
236a(5): jmp 0xfffffe5a(%rip)
236f(1): nop 
2370(5): mov $0xa,%edx
2375(5): mov $0x6e,%ebx
237a(5): jmp 0xfffffe38(%rip)
237f(1): nop 
2380(3): xor %r10d,%r10d
2383(5): nop 0x0(%rax,%rax,1)
2388(6): cmp $0x1,0x58(%rsp)
238e(6): jnz 0x3aa(%rip)
2394(5): mov %r11,0x38(%rsp)
2399(5): mov %r8b,0x30(%rsp)
239e(5): mov %r10b,0x28(%rsp)
23a3(5): call 0xfffff0bd(%rip)
23a8(3): mov (%rax),%rcx
23ab(3): movzx %bl,%edx
23ae(6): movzx 0x28(%rsp),%r10d
23b4(6): movzx 0x30(%rsp),%r8d
23ba(5): mov 0x38(%rsp),%r11
23bf(5): mov $0x1,%edi
23c4(4): movzx 0x0(%rcx,%rdx,2),%eax
23c8(4): and $0x4000,%ax
23cc(4): setnz %r12b
23d0(3): setz %al
23d3(4): and 0xd(%rsp),%al
23d7(2): test %al,%al
23d9(6): jnz 0x998(%rip)
23df(5): cmp $0x2,0x8(%rsp)
23e4(3): setz %dl
23e7(5): jmp 0xfffffcd1(%rip)
23ec(4): nop 0x0(%rax)
23f0(4): movzx (%r9),%ebx
23f4(3): cmp $0x7e,%bl
23f7(2): jnbe 0xffffff89(%rip)
23f9(7): lea 0x27e8(%rip),%rcx
2400(3): movzx %bl,%edx
2403(4): movsxd 0x0(%rcx,%rdx,4),%rax
2407(3): add %rcx,%rax
240a(2): jmp %rax
240c(4): nop 0x0(%rax)
2410(3): xor %r10d,%r10d
2413(5): cmp $0x0,0xd(%rsp)
2418(6): jnz 0xfffffdf6(%rip)
241e(2): nop 
2420(5): mov $0x5c,%edx
2425(5): mov $0x5c,%ebx
242a(5): jmp 0xfffffd9a(%rip)
242f(1): nop 
2430(5): mov $0xc,%edx
2435(3): xor %r10d,%r10d
2438(5): mov $0x66,%ebx
243d(5): jmp 0xfffffd87(%rip)
2442(6): nop 0x0(%rax,%rax,1)
2448(5): mov $0xa,%edx
244d(3): xor %r10d,%r10d
2450(5): mov $0x6e,%ebx
2455(5): jmp 0xfffffd5d(%rip)
245a(6): nop 0x0(%rax,%rax,1)
2460(5): mov $0x61,%ebx
2465(5): jmp 0xfffffdcb(%rip)
246a(6): nop 0x0(%rax,%rax,1)
2470(3): xor %r10d,%r10d
2473(5): cmp $0x2,0x8(%rsp)
2478(3): setz %dl
247b(5): cmp $0x0,0xf(%rsp)
2480(6): jnz 0xb9a(%rip)
2486(3): mov %r8d,%eax
2489(3): mov %r15,%rcx
248c(3): xor $0x1,%eax
248f(2): and %dl,%al
2491(2): jz 0x2f(%rip)
2493(3): cmp %r15,%r13
2496(2): jbe 0x7(%rip)
2498(5): mov $0x27,0x0(%r14,%r15,1)
249d(4): lea 0x1(%r15),%rcx
24a1(3): cmp %rcx,%r13
24a4(2): jbe 0x8(%rip)
24a6(6): mov $0x24,0x1(%r14,%r15,1)
24ac(4): lea 0x2(%r15),%rcx
24b0(3): cmp %rcx,%r13
24b3(6): jnbe 0x636(%rip)
24b9(4): lea 0x3(%r15),%rcx
24bd(3): mov %eax,%r8d
24c0(3): cmp %rcx,%r13
24c3(2): jbe 0x7(%rip)
24c5(5): mov $0x5c,0x0(%r14,%rcx,1)
24ca(5): cmp $0x2,0x8(%rsp)
24cf(4): lea 0x1(%rcx),%r15
24d3(6): jz 0x606(%rip)
24d9(4): lea 0x1(%rbp),%rax
24dd(3): cmp %r11,%rax
24e0(2): jnb 0x1b(%rip)
24e2(5): mov 0x10(%rsp),%rax
24e7(5): movzx 0x1(%rax,%rbp,1),%eax
24ec(4): mov %al,0x28(%rsp)
24f0(3): sub $0x30,%eax
24f3(2): cmp $0x9,%al
24f5(6): jbe 0x834(%rip)
24fb(3): mov %r12d,%eax
24fe(5): mov $0x30,%ebx
2503(3): xor %r12d,%r12d
2506(5): jmp 0xfffffbb2(%rip)
250b(5): nop 0x0(%rax,%rax,1)
2510(5): cmp $0x2,0x8(%rsp)
2515(3): mov %r10d,%r12d
2518(3): setz %dl
251b(3): xor %r10d,%r10d
251e(2): xor %eax,%eax
2520(5): jmp 0xfffffb98(%rip)
2525(3): nop (%rax)
2528(5): cmp $0x2,0x8(%rsp)
252d(3): setz %dl
2530(3): xor %r10d,%r10d
2533(5): jmp 0xfffffdc5(%rip)
2538(8): nop 0x0(%rax,%rax,1)
2540(5): cmp $0x2,0x8(%rsp)
2545(3): setz %dl
2548(3): xor %r10d,%r10d
254b(3): xor %r12d,%r12d
254e(5): jmp 0xfffffdb3(%rip)
2553(5): nop 0x0(%rax,%rax,1)
2558(5): cmp $0x2,0x8(%rsp)
255d(3): mov %r10d,%r12d
2560(5): mov $0x20,%ebx
2565(3): setz %dl
2568(3): xor %r10d,%r10d
256b(5): jmp 0xfffffd96(%rip)
2570(5): mov $0xd,%edx
2575(3): xor %r10d,%r10d
2578(5): mov $0x72,%ebx
257d(5): jmp 0xfffffc35(%rip)
2582(6): nop 0x0(%rax,%rax,1)
2588(5): mov $0x76,%ebx
258d(5): jmp 0xfffffca3(%rip)
2592(6): nop 0x0(%rax,%rax,1)
2598(5): mov $0x9,%edx
259d(3): xor %r10d,%r10d
25a0(5): mov $0x74,%ebx
25a5(5): jmp 0xfffffc0d(%rip)
25aa(6): nop 0x0(%rax,%rax,1)
25b0(5): mov $0x62,%ebx
25b5(5): jmp 0xfffffc7b(%rip)
25ba(6): nop 0x0(%rax,%rax,1)
25c0(3): xor %r10d,%r10d
25c3(5): jmp 0xfffffa9d(%rip)
25c8(8): nop 0x0(%rax,%rax,1)
25d0(5): cmp $0x0,0xf(%rsp)
25d5(6): jnz 0x96b(%rip)
25db(4): add $0x1,%rbp
25df(3): mov %r8d,%eax
25e2(3): xor %r12d,%r12d
25e5(5): mov $0x5c,%ebx
25ea(5): jmp 0xfffffb12(%rip)
25ef(1): nop 
25f0(5): cmp $0x2,0x8(%rsp)
25f5(5): movzx 0xf(%rsp),%ebx
25fa(3): mov %r8d,%r12d
25fd(3): mov %r11,%rbp
2600(3): setz %dl
2603(2): mov %ebx,%eax
2605(3): test %r15,%r15
2608(3): setz %cl
260b(2): and %edx,%eax
260d(2): and %cl,%al
260f(6): jnz 0xa67(%rip)
2615(2): mov %ebx,%eax
2617(3): xor $0x1,%eax
261a(2): and %al,%dl
261c(6): jz 0x970(%rip)
2622(5): cmp $0x0,0x7c(%rsp)
2627(6): jz 0x963(%rip)
262d(5): cmp $0x0,0xe(%rsp)
2632(6): jnz 0x9fb(%rip)
2638(3): test %r13,%r13
263b(3): setz %al
263e(6): cmp $0x0,0x50(%rsp)
2644(3): setnz %dl
2647(2): and %dl,%al
2649(6): jz 0xa23(%rip)
264f(5): mov 0x50(%rsp),%r13
2654(7): lea 0x230a(%rip),%rbx
265b(4): mov $0x27,(%r14)
265f(8): mov $0x2,0x8(%rsp)
2667(6): mov $0x1,%r15d
266d(9): mov $0x1,0x18(%rsp)
2676(5): mov $0x0,0xf(%rsp)
267b(5): mov %rbx,0x48(%rsp)
2680(4): mov %al,0x7c(%rsp)
2684(5): jmp 0xfffff8df(%rip)
2689(7): nop 0x0(%rax)
2690(5): cmp $0x0,0xf(%rsp)
2695(6): jnz 0x8ab(%rip)
269b(3): test %r13,%r13
269e(6): jz 0x402(%rip)
26a4(2): xor %edx,%edx
26a6(6): cmp $0x0,0x50(%rsp)
26ac(6): jnz 0x3f4(%rip)
26b2(5): mov %r13,0x50(%rsp)
26b7(4): add $0x3,%r15
26bb(2): xor %eax,%eax
26bd(5): mov %r12b,0x7c(%rsp)
26c2(3): xor %r8d,%r8d
26c5(3): mov %rdx,%r13
26c8(5): mov $0x27,%ebx
26cd(5): jmp 0xfffffa1c(%rip)
26d2(6): nop 0x0(%rax,%rax,1)
26d8(5): test $0x4,0x78(%rsp)
26dd(2): jz 0x23(%rip)
26df(4): lea 0x2(%rbp),%rcx
26e3(3): cmp %r11,%rcx
26e6(2): jnb 0x1a(%rip)
26e8(5): mov 0x10(%rsp),%rax
26ed(5): cmp $0x3f,0x1(%rax,%rbp,1)
26f2(6): jz 0x790(%rip)
26f8(8): nop 0x0(%rax,%rax,1)
2700(2): xor %edx,%edx
2702(3): xor %r12d,%r12d
2705(2): xor %eax,%eax
2707(5): mov $0x3f,%ebx
270c(5): jmp 0xfffff9ac(%rip)
2711(7): nop 0x0(%rax)
2718(5): cmp $0x0,0xf(%rsp)
271d(6): jnz 0x823(%rip)
2723(3): xor %r12d,%r12d
2726(2): xor %eax,%eax
2728(5): mov $0x3f,%ebx
272d(5): jmp 0xfffff9bc(%rip)
2732(6): nop 0x0(%rax,%rax,1)
2738(8): lea 0xa0(%rsp),%rax
2740(4): cmp $0xffffffff,%r11
2744(c): mov $0x0,0xa0(%rsp)
2750(5): mov %rax,0x28(%rsp)
2755(2): jnz 0x2f(%rip)
2757(5): mov 0x10(%rsp),%rdi
275c(5): mov %r8b,0x40(%rsp)
2761(5): mov %r10b,0x38(%rsp)
2766(5): mov %r9,0x30(%rsp)
276b(5): call 0xffffeb45(%rip)
2770(6): movzx 0x40(%rsp),%r8d
2776(6): movzx 0x38(%rsp),%r10d
277c(3): mov %rax,%r11
277f(5): mov 0x30(%rsp),%r9
2784(8): lea 0x9c(%rsp),%rax
278c(2): xor %ecx,%ecx
278e(4): mov %bl,0x7e(%rsp)
2792(5): mov %r8b,0x7d(%rsp)
2797(3): mov %rcx,%rbx
279a(8): mov %r9,0x88(%rsp)
27a2(5): mov %rax,0x38(%rsp)
27a7(5): mov %r10b,0x7f(%rsp)
27ac(8): mov %r15,0x80(%rsp)
27b4(5): mov %r14,0x40(%rsp)
27b9(5): mov %r13,0x70(%rsp)
27be(5): mov %r11,0x30(%rsp)
27c3(5): mov 0x10(%rsp),%rax
27c8(5): lea 0x0(%rbp,%rbx,1),%r14
27cd(5): mov 0x30(%rsp),%rdx
27d2(5): mov 0x28(%rsp),%rcx
27d7(5): mov 0x38(%rsp),%rdi
27dc(4): lea 0x0(%rax,%r14,1),%r13
27e0(3): sub %r14,%rdx
27e3(3): mov %r13,%rsi
27e6(5): call 0x1afa(%rip)
27eb(3): test %rax,%rax
27ee(3): mov %rax,%r15
27f1(2): jz 0x50(%rip)
27f3(4): cmp $0xffffffff,%rax
27f7(6): jz 0x61e(%rip)
27fd(4): cmp $0xfffffffe,%rax
2801(6): jz 0x5a0(%rip)
2807(5): cmp $0x2,0x8(%rsp)
280c(3): setz %al
280f(4): and 0xf(%rsp),%al
2813(6): jnz 0x19d(%rip)
2819(7): mov 0x9c(%rsp),%edi
2820(5): call 0xffffec30(%rip)
2825(5): mov 0x28(%rsp),%rdi
282a(2): test %eax,%eax
282c(5): mov $0x0,%eax
2831(4): cmove %eax,%r12d
2835(3): add %r15,%rbx
2838(5): call 0xffffec08(%rip)
283d(2): test %eax,%eax
283f(2): jz 0xffffff84(%rip)
2841(3): mov %r12d,%edx
2844(3): mov %rbx,%rdi
2847(6): movzx 0x7d(%rsp),%r8d
284d(3): xor $0x1,%edx
2850(5): movzx 0x7e(%rsp),%ebx
2855(6): movzx 0x7f(%rsp),%r10d
285b(4): and 0xd(%rsp),%dl
285f(8): mov 0x80(%rsp),%r15
2867(5): mov 0x40(%rsp),%r14
286c(5): mov 0x70(%rsp),%r13
2871(5): mov 0x30(%rsp),%r11
2876(4): cmp $0x1,%rdi
287a(6): jbe 0x601(%rip)
2880(3): mov %rdi,%rcx
2883(2): xor %esi,%esi
2885(6): movzx 0xf(%rsp),%r9d
288b(3): add %rbp,%rcx
288e(5): mov 0x10(%rsp),%rdi
2893(5): jmp 0xbb(%rip)
2898(8): nop 0x0(%rax,%rax,1)
28a0(5): cmp $0x2,0x8(%rsp)
28a5(3): setz %al
28a8(3): test %r9b,%r9b
28ab(6): jnz 0x4b5(%rip)
28b1(3): mov %r8d,%esi
28b4(3): xor $0x1,%esi
28b7(3): and %sil,%al
28ba(2): jz 0x31(%rip)
28bc(3): cmp %r15,%r13
28bf(2): jbe 0x7(%rip)
28c1(5): mov $0x27,0x0(%r14,%r15,1)
28c6(4): lea 0x1(%r15),%rsi
28ca(3): cmp %rsi,%r13
28cd(2): jbe 0x8(%rip)
28cf(6): mov $0x24,0x1(%r14,%r15,1)
28d5(4): lea 0x2(%r15),%rsi
28d9(3): cmp %rsi,%r13
28dc(2): jbe 0x8(%rip)
28de(6): mov $0x27,0x2(%r14,%r15,1)
28e4(4): add $0x3,%r15
28e8(3): mov %eax,%r8d
28eb(3): cmp %r15,%r13
28ee(2): jbe 0x7(%rip)
28f0(5): mov $0x5c,0x0(%r14,%r15,1)
28f5(4): lea 0x1(%r15),%rax
28f9(3): cmp %rax,%r13
28fc(2): jbe 0xf(%rip)
28fe(2): mov %ebx,%eax
2900(3): shr $0x6,%al
2903(3): add $0x30,%eax
2906(5): mov %al,0x1(%r14,%r15,1)
290b(4): lea 0x2(%r15),%rax
290f(3): cmp %rax,%r13
2912(2): jbe 0x12(%rip)
2914(2): mov %ebx,%eax
2916(3): shr $0x3,%al
2919(3): and $0x7,%eax
291c(3): add $0x30,%eax
291f(5): mov %al,0x2(%r14,%r15,1)
2924(3): and $0x7,%ebx
2927(4): add $0x1,%rbp
292b(4): add $0x3,%r15
292f(3): add $0x30,%ebx
2932(3): cmp %rcx,%rbp
2935(6): jnb 0xfffff7eb(%rip)
293b(2): mov %edx,%esi
293d(3): cmp %r15,%r13
2940(2): jbe 0x6(%rip)
2942(4): mov %bl,0x0(%r14,%r15,1)
2946(4): movzx 0x0(%rdi,%rbp,1),%ebx
294a(4): add $0x1,%r15
294e(2): test %dl,%dl
2950(6): jnz 0xffffff50(%rip)
2956(2): mov %esi,%eax
2958(3): xor $0x1,%eax
295b(3): and %r8d,%eax
295e(3): test %r10b,%r10b
2961(2): jz 0x10(%rip)
2963(3): cmp %r15,%r13
2966(2): jbe 0x7(%rip)
2968(5): mov $0x5c,0x0(%r14,%r15,1)
296d(4): add $0x1,%r15
2971(4): add $0x1,%rbp
2975(3): cmp %rcx,%rbp
2978(6): jnb 0xfffff784(%rip)
297e(2): test %al,%al
2980(6): jz 0x3fe(%rip)
2986(3): cmp %r15,%r13
2989(2): jbe 0x7(%rip)
298b(5): mov $0x27,0x0(%r14,%r15,1)
2990(4): lea 0x1(%r15),%rax
2994(3): cmp %rax,%r13
2997(2): jbe 0x8(%rip)
2999(6): mov $0x27,0x1(%r14,%r15,1)
299f(4): add $0x2,%r15
29a3(3): xor %r10d,%r10d
29a6(3): xor %r8d,%r8d
29a9(2): jmp 0xffffff94(%rip)
29ab(5): nop 0x0(%rax,%rax,1)
29b0(4): cmp $0x1,%r15
29b4(6): jz 0xfffffe65(%rip)
29ba(5): mov 0x10(%rsp),%rdi
29bf(4): lea 0x0(%rdi,%r15,1),%rcx
29c3(5): lea 0x1(%rdi,%r14,1),%rdx
29c8(4): lea 0x0(%rcx,%r14,1),%r8
29cc(2): jmp 0x11(%rip)
29ce(2): nop 
29d0(4): add $0x1,%rdx
29d4(3): cmp %rdx,%r8
29d7(6): jz 0xfffffe42(%rip)
29dd(3): movzx (%rdx),%ecx
29e0(3): sub $0x5b,%ecx
29e3(3): cmp $0x21,%cl
29e6(2): jnbe 0xffffffea(%rip)
29e8(5): mov $0x1,%esi
29ed(3): shl/sal %cl,%rsi
29f0(3): mov %rsi,%rcx
29f3(a): mov $0x8589934635,%rsi
29fd(3): test %rsi,%rcx
2a00(2): jz 0xffffffd0(%rip)
2a02(5): mov 0x40(%rsp),%r14
2a07(5): mov 0x70(%rsp),%r13
2a0c(5): mov 0x30(%rsp),%rbp
2a11(8): mov $0x2,0x8(%rsp)
2a19(5): cmp $0x0,0xd(%rsp)
2a1e(2): jz 0x12(%rip)
2a20(2): test %al,%al
2a22(5): mov $0x4,%eax
2a27(5): cmove 0x8(%rsp),%eax
2a2c(4): mov %eax,0x8(%rsp)
2a30(4): sub $0x8,%rsp
2a34(3): mov %rbp,%rcx
2a37(3): mov %r13,%rsi
2a3a(4): push 0x68(%rsp)
2a3e(4): push 0x78(%rsp)
2a42(3): mov %r14,%rdi
2a45(2): push $0x0
2a47(8): mov 0x98(%rsp),%r9d
2a4f(5): mov 0x28(%rsp),%r8d
2a54(5): mov 0x30(%rsp),%rdx
2a59(4): and $0xfd,%r9d
2a5d(5): call 0xfffff433(%rip)
2a62(4): add $0x20,%rsp
2a66(3): mov %rax,%r15
2a69(8): mov 0xa8(%rsp),%rbx
2a71(9): xor $0x28,%rbx
2a7a(3): mov %r15,%rax
2a7d(6): jnz 0x606(%rip)
2a83(7): add $0xb8,%rsp
2a8a(1): pop %rbx
2a8b(1): pop %rbp
2a8c(2): pop %r12
2a8e(2): pop %r13
2a90(2): pop %r14
2a92(2): pop %r15
2a94(1): ret near (%rsp)
2a95(3): nop (%rax)
2a98(3): mov %r11,%rbp
2a9b(5): jmp 0xffffff7e(%rip)
2aa0(3): cmp %r15,%r13
2aa3(2): jbe 0x7(%rip)
2aa5(5): mov $0x27,0x0(%r14,%r15,1)
2aaa(4): lea 0x1(%r15),%rax
2aae(3): cmp %rax,%r13
2ab1(2): jbe 0x8(%rip)
2ab3(6): mov $0x5c,0x1(%r14,%r15,1)
2ab9(4): lea 0x2(%r15),%rax
2abd(3): cmp %rax,%r13
2ac0(6): jbe 0x5f2(%rip)
2ac6(3): mov %r13,%rdx
2ac9(6): mov $0x27,0x2(%r14,%r15,1)
2acf(5): mov 0x50(%rsp),%r13
2ad4(5): jmp 0xfffffbde(%rip)
2ad9(3): mov %r12d,%eax
2adc(5): mov $0x30,%ebx
2ae1(3): xor %r12d,%r12d
2ae4(5): jmp 0xfffff605(%rip)
2ae9(6): mov $0x27,0x2(%r14,%r15,1)
2aef(5): jmp 0xfffff9ca(%rip)
2af4(2): test %ebx,%ebx
2af6(6): jnz 0xfffff42d(%rip)
2afc(5): mov $0x1,0xd(%rsp)
2b01(3): test %r13,%r13
2b04(6): jnz 0x596(%rip)
2b0a(7): lea 0x1e54(%rip),%rax
2b11(9): mov $0x0,0x50(%rsp)
2b1a(5): mov $0x1,0xe(%rsp)
2b1f(5): mov $0x0,0x7c(%rsp)
2b24(3): xor %r12d,%r12d
2b27(5): mov $0x0,0xf(%rsp)
2b2c(9): mov $0x1,0x18(%rsp)
2b35(5): mov %rax,0x48(%rsp)
2b3a(6): mov $0x1,%r15d
2b40(8): mov $0x2,0x8(%rsp)
2b48(5): jmp 0xfffff41b(%rip)
2b4d(3): nop (%rax)
2b50(2): test %ebx,%ebx
2b52(6): jnz 0x3fb(%rip)
2b58(3): test %r13,%r13
2b5b(6): jz 0x22b(%rip)
2b61(4): mov $0x22,(%r14)
2b65(5): mov $0x1,0xe(%rsp)
2b6a(3): xor %r12d,%r12d
2b6d(5): mov $0x0,0x7c(%rsp)
2b72(9): mov $0x0,0x50(%rsp)
2b7b(7): lea 0x1de1(%rip),%rax
2b82(5): mov $0x0,0xf(%rsp)
2b87(5): mov $0x1,0xd(%rsp)
2b8c(9): mov $0x1,0x18(%rsp)
2b95(6): mov $0x1,%r15d
2b9b(5): mov %rax,0x48(%rsp)
2ba0(5): jmp 0xfffff3c3(%rip)
2ba5(7): lea 0x1db7(%rip),%rax
2bac(5): mov $0x1,0xe(%rsp)
2bb1(5): mov $0x0,0x7c(%rsp)
2bb6(3): xor %r12d,%r12d
2bb9(9): mov $0x0,0x50(%rsp)
2bc2(5): mov $0x1,0xf(%rsp)
2bc7(5): mov $0x1,0xd(%rsp)
2bcc(9): mov $0x1,0x18(%rsp)
2bd5(3): xor %r15d,%r15d
2bd8(5): mov %rax,0x48(%rsp)
2bdd(8): mov $0x5,0x8(%rsp)
2be5(5): jmp 0xfffff37e(%rip)
2bea(5): mov $0x1,0xe(%rsp)
2bef(5): mov $0x0,0x7c(%rsp)
2bf4(3): xor %r12d,%r12d
2bf7(9): mov $0x0,0x50(%rsp)
2c00(5): mov $0x0,0xf(%rsp)
2c05(3): xor %r15d,%r15d
2c08(5): mov $0x1,0xd(%rsp)
2c0d(9): mov $0x0,0x18(%rsp)
2c16(9): mov $0x0,0x48(%rsp)
2c1f(5): jmp 0xfffff344(%rip)
2c24(5): cmp $0xa,0x8(%rsp)
2c29(2): jz 0x58(%rip)
2c2b(7): lea 0x1d35(%rip),%rsi
2c32(2): xor %edi,%edi
2c34(5): mov $0x5,%edx
2c39(5): call 0xffffe657(%rip)
2c3e(3): mov %rax,%rcx
2c41(5): mov %rax,0x68(%rsp)
2c46(7): lea 0x1d1a(%rip),%rax
2c4d(3): cmp %rax,%rcx
2c50(6): jz 0x39e(%rip)
2c56(7): lea 0x1d08(%rip),%rsi
2c5d(2): xor %edi,%edi
2c5f(5): mov $0x5,%edx
2c64(5): call 0xffffe62c(%rip)
2c69(3): mov %rax,%rcx
2c6c(5): mov %rax,0x60(%rsp)
2c71(7): lea 0x1ced(%rip),%rax
2c78(3): cmp %rax,%rcx
2c7b(6): jz 0x389(%rip)
2c81(3): xor %r15d,%r15d
2c84(2): test %ebx,%ebx
2c86(6): jz 0x1c7(%rip)
2c8c(2): test %ebx,%ebx
2c8e(5): mov 0x60(%rsp),%rbx
2c93(5): setnz 0xf(%rsp)
2c98(3): xor %r12d,%r12d
2c9b(3): mov %rbx,%rdi
2c9e(5): call 0xffffe612(%rip)
2ca3(5): mov %rbx,0x48(%rsp)
2ca8(5): mov %rax,0x18(%rsp)
2cad(5): mov $0x1,0xe(%rsp)
2cb2(5): mov $0x0,0x7c(%rsp)
2cb7(9): mov $0x0,0x50(%rsp)
2cc0(5): mov $0x1,0xd(%rsp)
2cc5(5): jmp 0xfffff29e(%rip)
2cca(5): mov $0x1,0xe(%rsp)
2ccf(5): mov $0x0,0x7c(%rsp)
2cd4(3): xor %r12d,%r12d
2cd7(9): mov $0x0,0x50(%rsp)
2ce0(5): mov $0x0,0xf(%rsp)
2ce5(3): xor %r15d,%r15d
2ce8(5): mov $0x0,0xd(%rsp)
2ced(9): mov $0x0,0x18(%rsp)
2cf6(9): mov $0x0,0x48(%rsp)
2cff(5): jmp 0xfffff264(%rip)
2d04(5): mov $0x1,0xe(%rsp)
2d09(5): mov $0x0,0x7c(%rsp)
2d0e(3): xor %r12d,%r12d
2d11(9): mov $0x0,0x50(%rsp)
2d1a(5): mov $0x1,0xf(%rsp)
2d1f(5): mov $0x1,0xd(%rsp)
2d24(5): jmp 0xfffff21f(%rip)
2d29(3): cmp %r15,%r13
2d2c(2): jbe 0x7(%rip)
2d2e(5): mov $0x30,0x0(%r14,%r15,1)
2d33(4): lea 0x2(%rcx),%rax
2d37(3): cmp %rax,%r13
2d3a(2): jbe 0x8(%rip)
2d3c(6): mov $0x30,0x2(%r14,%rcx,1)
2d42(3): mov %r12d,%eax
2d45(4): lea 0x3(%rcx),%r15
2d49(3): xor %r12d,%r12d
2d4c(5): mov $0x30,%ebx
2d51(5): jmp 0xfffff367(%rip)
2d56(a): nop 0x0(%rax,%rax,1)
2d60(5): movzx 0xf(%rsp),%ebx
2d65(3): mov %r11,%rbp
2d68(4): mov %bl,0xd(%rsp)
2d6c(5): jmp 0xfffffcad(%rip)
2d71(5): movzx 0xd(%rsp),%edx
2d76(3): xor %r12d,%r12d
2d79(5): jmp 0xfffffb07(%rip)
2d7e(3): xor %r10d,%r10d
2d81(5): jmp 0xfffffbbc(%rip)
2d86(9): mov $0x0,0x50(%rsp)
2d8f(5): mov $0x1,0xe(%rsp)
2d94(3): xor %r12d,%r12d
2d97(5): mov $0x0,0x7c(%rsp)
2d9c(5): jmp 0xfffffddf(%rip)
2da1(5): mov 0x30(%rsp),%r11
2da6(3): mov %r14,%rsi
2da9(3): mov %r13,%rcx
2dac(3): mov %rbx,%rax
2daf(3): mov %rbx,%rdi
2db2(6): movzx 0x7d(%rsp),%r8d
2db8(5): movzx 0x7e(%rsp),%ebx
2dbd(8): mov 0x88(%rsp),%r9
2dc5(3): cmp %r11,%rsi
2dc8(6): movzx 0x7f(%rsp),%r10d
2dce(8): mov 0x80(%rsp),%r15
2dd6(5): mov 0x40(%rsp),%r14
2ddb(5): mov 0x70(%rsp),%r13
2de0(2): jnb 0x28(%rip)
2de2(3): cmp $0x0,(%rcx)
2de5(2): jnz 0x12(%rip)
2de7(2): jmp 0x21(%rip)
2de9(7): nop 0x0(%rax)
2df0(5): cmp $0x0,0x0(%r9,%rax,1)
2df5(2): jz 0x10(%rip)
2df7(4): add $0x1,%rax
2dfb(5): lea 0x0(%rbp,%rax,1),%rdx
2e00(3): cmp %rdx,%r11
2e03(2): jnbe 0xffffffed(%rip)
2e05(3): mov %rax,%rdi
2e08(5): movzx 0xd(%rsp),%edx
2e0d(3): xor %r12d,%r12d
2e10(5): jmp 0xfffffa66(%rip)
2e15(3): mov %rbx,%rdi
2e18(6): movzx 0x7d(%rsp),%r8d
2e1e(5): movzx 0x7e(%rsp),%ebx
2e23(6): movzx 0x7f(%rsp),%r10d
2e29(8): mov 0x80(%rsp),%r15
2e31(3): xor %r12d,%r12d
2e34(5): mov 0x40(%rsp),%r14
2e39(5): mov 0x70(%rsp),%r13
2e3e(5): mov 0x30(%rsp),%r11
2e43(5): movzx 0xd(%rsp),%edx
2e48(5): jmp 0xfffffa2e(%rip)
2e4d(5): mov 0x68(%rsp),%rdx
2e52(3): movzx (%rdx),%eax
2e55(2): test %al,%al
2e57(6): jz 0xfffffe35(%rip)
2e5d(3): nop (%rax)
2e60(3): cmp %r15,%r13
2e63(2): jbe 0x6(%rip)
2e65(4): mov %al,0x0(%r14,%r15,1)
2e69(4): add $0x1,%r15
2e6d(5): movzx 0x0(%rdx,%r15,1),%eax
2e72(2): test %al,%al
2e74(2): jnz 0xffffffec(%rip)
2e76(5): jmp 0xfffffe16(%rip)
2e7b(2): mov %edx,%eax
2e7d(5): jmp 0xfffff55a(%rip)
2e82(4): movzx 0x0(%rax,%rcx,1),%ebx
2e86(3): cmp $0x3e,%bl
2e89(6): jnbe 0xfffff877(%rip)
2e8f(a): mov $0x8070630310989004800,%rax
2e99(4): bt %rbx,%rax
2e9d(6): jnb 0xfffff863(%rip)
2ea3(5): cmp $0x0,0xf(%rsp)
2ea8(6): jnz 0x1ea(%rip)
2eae(3): cmp %r15,%r13
2eb1(2): jbe 0x7(%rip)
2eb3(5): mov $0x3f,0x0(%r14,%r15,1)
2eb8(4): lea 0x1(%r15),%rax
2ebc(3): cmp %rax,%r13
2ebf(2): jbe 0x8(%rip)
2ec1(6): mov $0x22,0x1(%r14,%r15,1)
2ec7(4): lea 0x2(%r15),%rax
2ecb(3): cmp %rax,%r13
2ece(2): jbe 0x8(%rip)
2ed0(6): mov $0x22,0x2(%r14,%r15,1)
2ed6(4): lea 0x3(%r15),%rax
2eda(3): cmp %rax,%r13
2edd(2): jbe 0x8(%rip)
2edf(6): mov $0x3f,0x3(%r14,%r15,1)
2ee5(4): add $0x4,%r15
2ee9(2): xor %edx,%edx
2eeb(3): xor %r12d,%r12d
2eee(2): xor %eax,%eax
2ef0(3): mov %rcx,%rbp
2ef3(5): jmp 0xfffff1c5(%rip)
2ef8(2): test %ebx,%ebx
2efa(6): jz 0x18e(%rip)
2f00(7): lea 0x1a5e(%rip),%rax
2f07(5): mov $0x1,0xe(%rsp)
2f0c(5): mov $0x0,0x7c(%rsp)
2f11(3): xor %r12d,%r12d
2f14(9): mov $0x0,0x50(%rsp)
2f1d(5): mov $0x1,0xf(%rsp)
2f22(5): mov $0x0,0xd(%rsp)
2f27(9): mov $0x1,0x18(%rsp)
2f30(3): xor %r15d,%r15d
2f33(5): mov %rax,0x48(%rsp)
2f38(5): jmp 0xfffff02b(%rip)
2f3d(3): nop (%rax)
2f40(3): mov %r11,%rbp
2f43(5): movzx 0xf(%rsp),%eax
2f48(5): jmp 0xfffffad1(%rip)
2f4d(7): lea 0x1a0f(%rip),%rax
2f54(5): mov $0x1,0xe(%rsp)
2f59(5): mov $0x0,0x7c(%rsp)
2f5e(3): xor %r12d,%r12d
2f61(9): mov $0x0,0x50(%rsp)
2f6a(5): mov $0x1,0xf(%rsp)
2f6f(5): mov $0x1,0xd(%rsp)
2f74(9): mov $0x1,0x18(%rsp)
2f7d(3): xor %r15d,%r15d
2f80(5): mov %rax,0x48(%rsp)
2f85(5): jmp 0xffffefde(%rip)
2f8a(2): mov %edx,%eax
2f8c(5): mov 0x48(%rsp),%rbx
2f91(3): test %rbx,%rbx
2f94(2): jz 0x2e(%rip)
2f96(2): test %al,%al
2f98(2): jz 0x2a(%rip)
2f9a(3): movzx (%rbx),%ecx
2f9d(3): mov %rbx,%rax
2fa0(2): test %cl,%cl
2fa2(2): jz 0x20(%rip)
2fa4(3): mov %r15,%rdx
2fa7(3): sub %r15,%rax
2faa(3): cmp %rdx,%r13
2fad(2): jbe 0x6(%rip)
2faf(4): mov %cl,0x0(%r14,%rdx,1)
2fb3(4): add $0x1,%rdx
2fb7(4): movzx 0x0(%rax,%rdx,1),%ecx
2fbb(2): test %cl,%cl
2fbd(2): jnz 0xffffffed(%rip)
2fbf(3): mov %rdx,%r15
2fc2(3): cmp %r15,%r13
2fc5(6): jbe 0xfffffaa4(%rip)
2fcb(5): mov $0x0,0x0(%r14,%r15,1)
2fd0(5): jmp 0xfffffa99(%rip)
2fd5(5): cmp $0x2,0x8(%rsp)
2fda(5): movzx 0xf(%rsp),%ebx
2fdf(3): mov %r11,%rbp
2fe2(3): setz %al
2fe5(4): mov %bl,0xd(%rsp)
2fe9(5): jmp 0xfffffa30(%rip)
2fee(4): mov 0x8(%rsp),%esi
2ff2(3): mov %rcx,%rdi
2ff5(5): call 0xffffedab(%rip)
2ffa(5): mov %rax,0x68(%rsp)
2fff(5): jmp 0xfffffc57(%rip)
3004(4): mov 0x8(%rsp),%esi
3008(3): mov %rcx,%rdi
300b(5): call 0xffffed95(%rip)
3010(5): mov %rax,0x60(%rsp)
3015(5): jmp 0xfffffc6c(%rip)
301a(5): movzx 0xf(%rsp),%ebx
301f(3): mov %r11,%rbp
3022(2): mov %edx,%eax
3024(4): mov %bl,0xd(%rsp)
3028(5): jmp 0xfffff9f1(%rip)
302d(4): sub $0x8,%rsp
3031(6): mov $0x5,%r8d
3037(3): mov %r11,%rcx
303a(4): push 0x68(%rsp)
303e(4): push 0x78(%rsp)
3042(3): mov %r14,%rdi
3045(4): push 0x38(%rsp)
3049(8): mov 0x98(%rsp),%r9d
3051(5): mov 0x30(%rsp),%rdx
3056(5): mov 0x70(%rsp),%rsi
305b(5): call 0xffffee35(%rip)
3060(4): add $0x20,%rsp
3064(3): mov %rax,%r15
3067(5): jmp 0xfffffa02(%rip)
306c(5): movzx 0x7c(%rsp),%eax
3071(5): jmp 0xffffff1b(%rip)
3076(8): mov $0x2,0x8(%rsp)
307e(5): jmp 0xfffff99b(%rip)
3083(5): call 0xffffe23d(%rip)
3088(5): mov $0x0,0xd(%rsp)
308d(5): jmp 0xfffffa74(%rip)
3092(3): mov %r11,%rbp
3095(5): jmp 0xfffff99b(%rip)
309a(5): mov $0x1,0xe(%rsp)
309f(2): xor %eax,%eax
30a1(3): xor %r12d,%r12d
30a4(9): mov $0x0,0x50(%rsp)
30ad(5): jmp 0xfffff5a7(%rip)
30b2(3): mov %r13,%rdx
30b5(5): mov 0x50(%rsp),%r13
30ba(5): jmp 0xfffff5f8(%rip)
30bf(5): call 0xffffe141(%rip)

"quotearg_n_options" :
30d0(2): push %r15
30d2(2): push %r14
30d4(3): movsxd %edi,%r15
30d7(2): push %r13
30d9(2): push %r12
30db(3): mov %rdx,%r14
30de(1): push %rbp
30df(1): push %rbx
30e0(3): mov %rcx,%rbp
30e3(4): sub $0x28,%rsp
30e7(5): mov %rsi,0x8(%rsp)
30ec(5): call 0xffffe124(%rip)
30f1(3): mov %rax,%r13
30f4(2): mov (%rax),%eax
30f6(3): test %r15d,%r15d
30f9(7): mov 0x203f60(%rip),%rbx
3100(4): mov %eax,0x18(%rsp)
3104(6): js 0x16d(%rip)
310a(7): cmp %r15d,0x203f47(%rip)
3111(2): jnle 0x64(%rip)
3113(7): cmp $0x7fffffff,%r15d
311a(6): jz 0x15c(%rip)
3120(4): lea 0x1(%r15),%r12d
3124(7): lea 0x203f45(%rip),%rax
312b(3): movsxd %r12d,%rsi
312e(4): shl/sal $0x4,%rsi
3132(3): cmp %rax,%rbx
3135(6): jz 0x11b(%rip)
313b(3): mov %rbx,%rdi
313e(5): call 0xf72(%rip)
3143(3): mov %rax,%rbx
3146(7): mov %rax,0x203f13(%rip)
314d(7): movsxd 0x203f04(%rip),%rdi
3154(3): mov %r12d,%edx
3157(2): xor %esi,%esi
3159(2): sub %edi,%edx
315b(4): shl/sal $0x4,%rdi
315f(3): movsxd %edx,%rdx
3162(3): add %rbx,%rdi
3165(4): shl/sal $0x4,%rdx
3169(5): call 0xffffe1a7(%rip)
316e(7): mov %r12d,0x203ee3(%rip)
3175(3): mov 0x4(%rbp),%eax
3178(4): shl/sal $0x4,%r15
317c(4): sub $0x8,%rsp
3180(3): add %r15,%rbx
3183(4): lea 0x8(%rbp),%r15
3187(4): mov 0x0(%rbp),%r8d
318b(3): mov (%rbx),%r11
318e(4): mov 0x8(%rbx),%r12
3192(3): mov %r14,%rcx
3195(3): or $0x1,%eax
3198(4): mov %eax,0x24(%rsp)
319c(3): push 0x30(%rbp)
319f(3): mov %eax,%r9d
31a2(3): push 0x28(%rbp)
31a5(2): push %r15
31a7(3): mov %r11,%rsi
31aa(5): mov 0x28(%rsp),%rdx
31af(3): mov %r12,%rdi
31b2(5): mov %r11,0x30(%rsp)
31b7(5): call 0xffffecd9(%rip)
31bc(4): add $0x20,%rsp
31c0(5): mov 0x10(%rsp),%r11
31c5(3): cmp %rax,%r11
31c8(2): jnbe 0x69(%rip)
31ca(4): lea 0x1(%rax),%rsi
31ce(7): lea 0x203f2b(%rip),%rax
31d5(3): cmp %rax,%r12
31d8(3): mov %rsi,(%rbx)
31db(2): jz 0x14(%rip)
31dd(3): mov %r12,%rdi
31e0(5): mov %rsi,0x10(%rsp)
31e5(5): call 0xffffe00b(%rip)
31ea(5): mov 0x10(%rsp),%rsi
31ef(3): mov %rsi,%rdi
31f2(5): mov %rsi,0x10(%rsp)
31f7(5): call 0xe59(%rip)
31fc(4): sub $0x8,%rsp
3200(4): mov %rax,0x8(%rbx)
3204(4): mov 0x0(%rbp),%r8d
3208(3): push 0x30(%rbp)
320b(3): push 0x28(%rbp)
320e(3): mov %r14,%rcx
3211(2): push %r15
3213(5): mov 0x3c(%rsp),%r9d
3218(3): mov %rax,%rdi
321b(5): mov 0x28(%rsp),%rdx
3220(5): mov 0x30(%rsp),%rsi
3225(3): mov %rax,%r12
3228(5): call 0xffffec68(%rip)
322d(4): add $0x20,%rsp
3231(4): mov 0x18(%rsp),%eax
3235(4): mov %eax,0x0(%r13)
3239(4): add $0x28,%rsp
323d(3): mov %r12,%rax
3240(1): pop %rbx
3241(1): pop %rbp
3242(2): pop %r12
3244(2): pop %r13
3246(2): pop %r14
3248(2): pop %r15
324a(1): ret near (%rsp)
324b(5): nop 0x0(%rax,%rax,1)
3250(2): xor %edi,%edi
3252(5): call 0xe5e(%rip)
3257(8): movdqa 0x203e11(%rip),%xmm0
325f(3): mov %rax,%rbx
3262(7): mov %rax,0x203df7(%rip)
3269(3): movups %xmm0,(%rax)
326c(5): jmp 0xfffffee1(%rip)
3271(5): call 0xffffdf8f(%rip)
3276(5): call 0x102a(%rip)

"clone_quoting_options" :
3280(2): push %r12
3282(1): push %rbp
3283(1): push %rbx
3284(3): mov %rdi,%rbx
3287(5): call 0xffffdf89(%rip)
328c(3): mov (%rax),%r12d
328f(3): mov %rax,%rbp
3292(7): lea 0x203f67(%rip),%rax
3299(3): test %rbx,%rbx
329c(5): mov $0x38,%esi
32a1(4): cmove %rax,%rbx
32a5(3): mov %rbx,%rdi
32a8(5): call 0xfa8(%rip)
32ad(4): mov %r12d,0x0(%rbp)
32b1(1): pop %rbx
32b2(1): pop %rbp
32b3(2): pop %r12
32b5(1): ret near (%rsp)

"get_quoting_style" :
32c0(7): lea 0x203f39(%rip),%rax
32c7(3): test %rdi,%rdi
32ca(4): cmove %rax,%rdi
32ce(2): mov (%rdi),%eax
32d0(1): ret near (%rsp)

"set_quoting_style" :
32e0(7): lea 0x203f19(%rip),%rax
32e7(3): test %rdi,%rdi
32ea(4): cmove %rax,%rdi
32ee(2): mov %esi,(%rdi)
32f0(1): ret near (%rsp)

"set_char_quoting" :
3300(7): lea 0x203ef9(%rip),%rax
3307(3): test %rdi,%rdi
330a(2): mov %esi,%ecx
330c(4): cmove %rax,%rdi
3310(2): mov %esi,%eax
3312(3): and $0x1f,%ecx
3315(3): shr $0x5,%al
3318(3): movzx %al,%eax
331b(5): lea 0x8(%rdi,%rax,4),%rdi
3320(2): mov (%rdi),%esi
3322(2): mov %esi,%eax
3324(2): shr %cl,%eax
3326(2): xor %eax,%edx
3328(3): and $0x1,%eax
332b(3): and $0x1,%edx
332e(2): shl/sal %cl,%edx
3330(2): xor %esi,%edx
3332(2): mov %edx,(%rdi)
3334(1): ret near (%rsp)

"set_quoting_flags" :
3340(7): lea 0x203eb9(%rip),%rax
3347(3): test %rdi,%rdi
334a(4): cmove %rax,%rdi
334e(3): mov 0x4(%rdi),%eax
3351(3): mov %esi,0x4(%rdi)
3354(1): ret near (%rsp)

"set_custom_quoting" :
3360(7): lea 0x203e99(%rip),%rax
3367(3): test %rdi,%rdi
336a(4): cmove %rax,%rdi
336e(3): test %rsi,%rsi
3371(6): mov $0xa,(%rdi)
3377(2): jz 0x10(%rip)
3379(3): test %rdx,%rdx
337c(2): jz 0xb(%rip)
337e(4): mov %rsi,0x28(%rdi)
3382(4): mov %rdx,0x30(%rdi)
3386(1): ret near (%rsp)
3387(4): sub $0x8,%rsp
338b(5): call 0xffffde75(%rip)

"quotearg_buffer" :
3390(2): push %r15
3392(2): push %r14
3394(7): lea 0x203e65(%rip),%rax
339b(2): push %r13
339d(2): push %r12
339f(3): mov %rdi,%r13
33a2(1): push %rbp
33a3(1): push %rbx
33a4(3): mov %r8,%rbx
33a7(3): mov %rsi,%r14
33aa(3): mov %rdx,%r15
33ad(4): sub $0x18,%rsp
33b1(3): test %r8,%r8
33b4(4): cmove %rax,%rbx
33b8(5): mov %rcx,0x8(%rsp)
33bd(5): call 0xffffde53(%rip)
33c2(3): mov (%rax),%r12d
33c5(3): mov %rax,%rbp
33c8(4): lea 0x8(%rbx),%rax
33cc(4): sub $0x8,%rsp
33d0(4): mov 0x4(%rbx),%r9d
33d4(3): push 0x30(%rbx)
33d7(3): mov (%rbx),%r8d
33da(3): push 0x28(%rbx)
33dd(3): mov %r15,%rdx
33e0(1): push %rax
33e1(5): mov 0x28(%rsp),%rcx
33e6(3): mov %r14,%rsi
33e9(3): mov %r13,%rdi
33ec(5): call 0xffffeaa4(%rip)
33f1(4): mov %r12d,0x0(%rbp)
33f5(4): add $0x38,%rsp
33f9(1): pop %rbx
33fa(1): pop %rbp
33fb(2): pop %r12
33fd(2): pop %r13
33ff(2): pop %r14
3401(2): pop %r15
3403(1): ret near (%rsp)

"quotearg_alloc_mem" :
3410(2): push %r15
3412(2): push %r14
3414(7): lea 0x203de5(%rip),%rax
341b(2): push %r13
341d(2): push %r12
341f(3): mov %rdx,%r12
3422(1): push %rbp
3423(1): push %rbx
3424(3): mov %rcx,%rbx
3427(3): mov %rdi,%r14
342a(3): mov %rsi,%r15
342d(4): sub $0x38,%rsp
3431(3): test %rcx,%rcx
3434(4): cmove %rax,%rbx
3438(2): xor %ebp,%ebp
343a(5): call 0xffffddd6(%rip)
343f(3): test %r12,%r12
3442(3): mov %rax,%r13
3445(2): mov (%rax),%eax
3447(4): setz %bpl
344b(3): or 0x4(%rbx),%ebp
344e(4): lea 0x8(%rbx),%r10
3452(4): sub $0x8,%rsp
3456(3): mov (%rbx),%r8d
3459(3): mov %r15,%rcx
345c(4): mov %eax,0x14(%rsp)
3460(3): push 0x30(%rbx)
3463(3): mov %r14,%rdx
3466(3): push 0x28(%rbx)
3469(2): push %r10
346b(2): xor %esi,%esi
346d(3): mov %ebp,%r9d
3470(2): xor %edi,%edi
3472(5): mov %r10,0x40(%rsp)
3477(5): call 0xffffea19(%rip)
347c(4): lea 0x1(%rax),%rsi
3480(5): mov %rax,0x48(%rsp)
3485(4): add $0x20,%rsp
3489(3): mov %rsi,%rdi
348c(5): mov %rsi,0x18(%rsp)
3491(5): call 0xbbf(%rip)
3496(5): mov %rax,0x10(%rsp)
349b(4): sub $0x8,%rsp
349f(3): push 0x30(%rbx)
34a2(3): push 0x28(%rbx)
34a5(5): mov 0x38(%rsp),%r10
34aa(3): mov %ebp,%r9d
34ad(3): mov (%rbx),%r8d
34b0(3): mov %r15,%rcx
34b3(3): mov %r14,%rdx
34b6(3): mov %rax,%rdi
34b9(2): push %r10
34bb(5): mov 0x38(%rsp),%rsi
34c0(5): call 0xffffe9d0(%rip)
34c5(4): mov 0x2c(%rsp),%eax
34c9(4): add $0x20,%rsp
34cd(3): test %r12,%r12
34d0(4): mov %eax,0x0(%r13)
34d4(2): jz 0xb(%rip)
34d6(5): mov 0x28(%rsp),%r11
34db(4): mov %r11,(%r12)
34df(5): mov 0x10(%rsp),%rax
34e4(4): add $0x38,%rsp
34e8(1): pop %rbx
34e9(1): pop %rbp
34ea(2): pop %r12
34ec(2): pop %r13
34ee(2): pop %r14
34f0(2): pop %r15
34f2(1): ret near (%rsp)

"quotearg_alloc" :
3500(3): mov %rdx,%rcx
3503(2): xor %edx,%edx
3505(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3510(6): mov 0x203b42(%rip),%eax
3516(2): push %r12
3518(7): mov 0x203b41(%rip),%r12
351f(1): push %rbp
3520(1): push %rbx
3521(3): cmp $0x1,%eax
3524(2): jle 0x2d(%rip)
3526(3): sub $0x2,%eax
3529(5): lea 0x18(%r12),%rbx
352e(4): shl/sal $0x4,%rax
3532(5): lea 0x28(%r12,%rax,1),%rbp
3537(9): nop 0x0(%rax,%rax,1)
3540(3): mov (%rbx),%rdi
3543(4): add $0x10,%rbx
3547(5): call 0xffffdca9(%rip)
354c(3): cmp %rbp,%rbx
354f(2): jnz 0xfffffff1(%rip)
3551(5): mov 0x8(%r12),%rdi
3556(7): lea 0x203ba3(%rip),%rbx
355d(3): cmp %rbx,%rdi
3560(2): jz 0x19(%rip)
3562(5): call 0xffffdc8e(%rip)
3567(b): mov $0x100,0x203afe(%rip)
3572(7): mov %rbx,0x203aff(%rip)
3579(7): lea 0x203af0(%rip),%rbx
3580(3): cmp %rbx,%r12
3583(2): jz 0x11(%rip)
3585(3): mov %r12,%rdi
3588(5): call 0xffffdc68(%rip)
358d(7): mov %rbx,0x203acc(%rip)
3594(1): pop %rbx
3595(a): mov $0x1,0x203ab9(%rip)
359f(1): pop %rbp
35a0(2): pop %r12
35a2(1): ret near (%rsp)

"quotearg_n" :
35b0(7): lea 0x203c49(%rip),%rcx
35b7(7): mov $0xffffffff,%rdx
35be(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
35d0(7): lea 0x203c29(%rip),%rcx
35d7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
35e0(7): lea 0x203c19(%rip),%rcx
35e7(3): mov %rdi,%rsi
35ea(7): mov $0xffffffff,%rdx
35f1(2): xor %edi,%edi
35f3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3600(7): lea 0x203bf9(%rip),%rcx
3607(3): mov %rsi,%rdx
360a(3): mov %rdi,%rsi
360d(2): xor %edi,%edi
360f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3620(4): sub $0x48,%rsp
3624(3): mov %rdx,%rax
3627(9): mov $0x28,%rdx
3630(5): mov %rdx,0x38(%rsp)
3635(2): xor %edx,%edx
3637(3): cmp $0xa,%esi
363a(2): jz 0x6a(%rip)
363c(3): mov %esi,(%rsp)
363f(3): mov %rsp,%rcx
3642(7): mov $0xffffffff,%rdx
3649(3): mov %rax,%rsi
364c(9): mov $0x0,0x4(%rsp)
3655(9): mov $0x0,0xc(%rsp)
365e(9): mov $0x0,0x14(%rsp)
3667(9): mov $0x0,0x1c(%rsp)
3670(9): mov $0x0,0x24(%rsp)
3679(9): mov $0x0,0x2c(%rsp)
3682(8): mov $0x0,0x34(%rsp)
368a(5): call 0xfffffa46(%rip)
368f(5): mov 0x38(%rsp),%rcx
3694(9): xor $0x28,%rcx
369d(2): jnz 0xc(%rip)
369f(4): add $0x48,%rsp
36a3(1): ret near (%rsp)
36a4(5): call 0xffffdb5c(%rip)
36a9(5): call 0xffffdc17(%rip)

"quotearg_n_style_mem" :
36b0(4): sub $0x48,%rsp
36b4(3): mov %rdx,%rax
36b7(3): mov %rcx,%rdx
36ba(9): mov $0x28,%rcx
36c3(5): mov %rcx,0x38(%rsp)
36c8(2): xor %ecx,%ecx
36ca(3): cmp $0xa,%esi
36cd(2): jz 0x63(%rip)
36cf(3): mov %esi,(%rsp)
36d2(3): mov %rsp,%rcx
36d5(3): mov %rax,%rsi
36d8(9): mov $0x0,0x4(%rsp)
36e1(9): mov $0x0,0xc(%rsp)
36ea(9): mov $0x0,0x14(%rsp)
36f3(9): mov $0x0,0x1c(%rsp)
36fc(9): mov $0x0,0x24(%rsp)
3705(9): mov $0x0,0x2c(%rsp)
370e(8): mov $0x0,0x34(%rsp)
3716(5): call 0xfffff9ba(%rip)
371b(5): mov 0x38(%rsp),%rdx
3720(9): xor $0x28,%rdx
3729(2): jnz 0xc(%rip)
372b(4): add $0x48,%rsp
372f(1): ret near (%rsp)
3730(5): call 0xffffdad0(%rip)
3735(5): call 0xffffdb8b(%rip)

"quotearg_style" :
3740(3): mov %rsi,%rdx
3743(2): mov %edi,%esi
3745(2): xor %edi,%edi
3747(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3750(3): mov %rdx,%rcx
3753(3): mov %rsi,%rdx
3756(2): mov %edi,%esi
3758(2): xor %edi,%edi
375a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3760(4): sub $0x48,%rsp
3764(2): mov %edx,%ecx
3766(9): mov $0x28,%rax
376f(5): mov %rax,0x38(%rsp)
3774(2): xor %eax,%eax
3776(7): mov 0x203ab3(%rip),%rax
377d(3): mov %rsp,%r8
3780(3): and $0x1f,%ecx
3783(8): movdqa 0x203a75(%rip),%xmm0
378b(5): mov %rax,0x30(%rsp)
3790(2): mov %edx,%eax
3792(4): movaps %xmm0,(%rsp)
3796(3): shr $0x5,%al
3799(3): movzx %al,%eax
379c(5): lea 0x8(%r8,%rax,4),%r9
37a1(8): movdqa 0x203a67(%rip),%xmm0
37a9(5): movaps %xmm0,0x10(%rsp)
37ae(8): movdqa 0x203a6a(%rip),%xmm0
37b6(5): movaps %xmm0,0x20(%rsp)
37bb(3): mov (%r9),%edx
37be(2): mov %edx,%eax
37c0(2): shr %cl,%eax
37c2(2): not %eax
37c4(3): and $0x1,%eax
37c7(2): shl/sal %cl,%eax
37c9(3): mov %r8,%rcx
37cc(2): xor %edx,%eax
37ce(3): mov %rsi,%rdx
37d1(3): mov %rdi,%rsi
37d4(3): mov %eax,(%r9)
37d7(2): xor %edi,%edi
37d9(5): call 0xfffff8f7(%rip)
37de(5): mov 0x38(%rsp),%rsi
37e3(9): xor $0x28,%rsi
37ec(2): jnz 0x7(%rip)
37ee(4): add $0x48,%rsp
37f2(1): ret near (%rsp)
37f3(5): call 0xffffdacd(%rip)

"quotearg_char" :
3800(4): movsx %sil,%edx
3804(7): mov $0xffffffff,%rsi
380b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3810(5): mov $0x3a,%edx
3815(7): mov $0xffffffff,%rsi
381c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3830(5): mov $0x3a,%edx
3835(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3840(4): sub $0x48,%rsp
3844(3): mov %rdx,%rax
3847(9): mov $0x28,%rdx
3850(5): mov %rdx,0x38(%rsp)
3855(2): xor %edx,%edx
3857(3): cmp $0xa,%esi
385a(2): jz 0x6a(%rip)
385c(3): mov %esi,(%rsp)
385f(3): mov %rsp,%rcx
3862(7): mov $0xffffffff,%rdx
3869(3): mov %rax,%rsi
386c(9): mov $0x0,0x4(%rsp)
3875(9): mov $0x4000000,0xc(%rsp)
387e(9): mov $0x0,0x14(%rsp)
3887(9): mov $0x0,0x1c(%rsp)
3890(9): mov $0x0,0x24(%rsp)
3899(9): mov $0x0,0x2c(%rsp)
38a2(8): mov $0x0,0x34(%rsp)
38aa(5): call 0xfffff826(%rip)
38af(5): mov 0x38(%rsp),%rcx
38b4(9): xor $0x28,%rcx
38bd(2): jnz 0xc(%rip)
38bf(4): add $0x48,%rsp
38c3(1): ret near (%rsp)
38c4(5): call 0xffffd93c(%rip)
38c9(5): call 0xffffd9f7(%rip)

"quotearg_n_custom_mem" :
38d0(4): sub $0x48,%rsp
38d4(3): mov %rcx,%r9
38d7(7): mov 0x203952(%rip),%rcx
38de(8): movdqa 0x20391a(%rip),%xmm0
38e6(9): mov $0x28,%rax
38ef(5): mov %rax,0x38(%rsp)
38f4(2): xor %eax,%eax
38f6(4): movaps %xmm0,(%rsp)
38fa(3): test %rsi,%rsi
38fd(5): mov %rcx,0x30(%rsp)
3902(7): mov $0xa,(%rsp)
3909(8): movdqa 0x2038ff(%rip),%xmm0
3911(5): movaps %xmm0,0x10(%rsp)
3916(8): movdqa 0x203902(%rip),%xmm0
391e(5): movaps %xmm0,0x20(%rsp)
3923(2): jz 0x34(%rip)
3925(3): test %rdx,%rdx
3928(2): jz 0x2f(%rip)
392a(5): mov %rsi,0x28(%rsp)
392f(5): mov %rdx,0x30(%rsp)
3934(3): mov %rsp,%rcx
3937(3): mov %r8,%rdx
393a(3): mov %r9,%rsi
393d(5): call 0xfffff793(%rip)
3942(5): mov 0x38(%rsp),%rdi
3947(9): xor $0x28,%rdi
3950(2): jnz 0xc(%rip)
3952(4): add $0x48,%rsp
3956(1): ret near (%rsp)
3957(5): call 0xffffd8a9(%rip)
395c(5): call 0xffffd964(%rip)

"quotearg_n_custom" :
3970(7): mov $0xffffffff,%r8
3977(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3980(3): mov %rdx,%rcx
3983(7): mov $0xffffffff,%r8
398a(3): mov %rsi,%rdx
398d(3): mov %rdi,%rsi
3990(2): xor %edi,%edi
3992(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
39a0(3): mov %rcx,%r8
39a3(3): mov %rdx,%rcx
39a6(3): mov %rsi,%rdx
39a9(3): mov %rdi,%rsi
39ac(2): xor %edi,%edi
39ae(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
39c0(7): lea 0x203659(%rip),%rcx
39c7(5): jmp 0xfffff709(%rip)

"quote_mem" :
39d0(7): lea 0x203649(%rip),%rcx
39d7(3): mov %rsi,%rdx
39da(3): mov %rdi,%rsi
39dd(2): xor %edi,%edi
39df(5): jmp 0xfffff6f1(%rip)

"quote_n" :
39f0(7): lea 0x203629(%rip),%rcx
39f7(7): mov $0xffffffff,%rdx
39fe(5): jmp 0xfffff6d2(%rip)

"quote" :
3a10(7): lea 0x203609(%rip),%rcx
3a17(3): mov %rdi,%rsi
3a1a(7): mov $0xffffffff,%rdx
3a21(2): xor %edi,%edi
3a23(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3a30(2): push %r15
3a32(2): push %r14
3a34(2): push %r13
3a36(2): push %r12
3a38(3): mov %r9,%r12
3a3b(1): push %rbp
3a3c(1): push %rbx
3a3d(3): mov %rdi,%rbp
3a40(3): mov %r8,%rbx
3a43(4): sub $0x28,%rsp
3a47(3): test %rsi,%rsi
3a4a(6): jz 0x11e(%rip)
3a50(3): mov %rdx,%r8
3a53(7): lea 0x13ce(%rip),%rdx
3a5a(3): mov %rcx,%r9
3a5d(2): xor %eax,%eax
3a5f(3): mov %rsi,%rcx
3a62(5): mov $0x1,%esi
3a67(5): call 0xffffd9c9(%rip)
3a6c(7): lea 0x13c8(%rip),%rsi
3a73(2): xor %edi,%edi
3a75(5): mov $0x5,%edx
3a7a(5): call 0xffffd816(%rip)
3a7f(7): lea 0x16da(%rip),%rdx
3a86(3): mov %rax,%rcx
3a89(6): mov $0x7e3,%r8d
3a8f(5): mov $0x1,%esi
3a94(3): mov %rbp,%rdi
3a97(2): xor %eax,%eax
3a99(5): call 0xffffd997(%rip)
3a9e(7): lea 0x1423(%rip),%rsi
3aa5(2): xor %edi,%edi
3aa7(5): mov $0x5,%edx
3aac(5): call 0xffffd7e4(%rip)
3ab1(3): mov %rbp,%rsi
3ab4(3): mov %rax,%rdi
3ab7(5): call 0xffffd879(%rip)
3abc(4): cmp $0x9,%r12
3ac0(6): jnbe 0x340(%rip)
3ac6(7): lea 0x165b(%rip),%rdx
3acd(4): movsxd 0x0(%rdx,%r12,4),%rax
3ad1(3): add %rdx,%rax
3ad4(2): jmp %rax
3ad6(a): nop 0x0(%rax,%rax,1)
3ae0(4): mov 0x38(%rbx),%r9
3ae4(4): mov 0x10(%rbx),%rax
3ae8(7): lea 0x1549(%rip),%rsi
3aef(4): mov 0x8(%rbx),%r8
3af3(5): mov $0x5,%edx
3af8(2): xor %edi,%edi
3afa(4): mov 0x30(%rbx),%r13
3afe(4): mov 0x28(%rbx),%r12
3b02(5): mov %r9,0x10(%rsp)
3b07(4): mov 0x20(%rbx),%r15
3b0b(4): mov 0x18(%rbx),%r14
3b0f(4): mov %rax,(%rsp)
3b13(5): mov %r8,0x8(%rsp)
3b18(3): mov (%rbx),%rbx
3b1b(5): call 0xffffd775(%rip)
3b20(4): sub $0x8,%rsp
3b24(5): mov 0x18(%rsp),%r9
3b29(3): mov %rax,%rdx
3b2c(3): mov %rbx,%rcx
3b2f(5): mov $0x1,%esi
3b34(3): mov %rbp,%rdi
3b37(2): xor %eax,%eax
3b39(2): push %r9
3b3b(2): push %r13
3b3d(2): push %r12
3b3f(2): push %r15
3b41(2): push %r14
3b43(5): mov 0x30(%rsp),%r9
3b48(5): mov 0x38(%rsp),%r8
3b4d(5): call 0xffffd8e3(%rip)
3b52(4): add $0x30,%rsp
3b56(4): add $0x28,%rsp
3b5a(1): pop %rbx
3b5b(1): pop %rbp
3b5c(2): pop %r12
3b5e(2): pop %r13
3b60(2): pop %r14
3b62(2): pop %r15
3b64(1): ret near (%rsp)
3b65(3): nop (%rax)
3b68(3): mov %rcx,%r8
3b6b(3): mov %rdx,%rcx
3b6e(7): lea 0x12bf(%rip),%rdx
3b75(5): mov $0x1,%esi
3b7a(2): xor %eax,%eax
3b7c(5): call 0xffffd8b4(%rip)
3b81(5): jmp 0xfffffeeb(%rip)
3b86(a): nop 0x0(%rax,%rax,1)
3b90(4): mov 0x40(%rbx),%r10
3b94(4): mov 0x38(%rbx),%r9
3b98(7): lea 0x14c9(%rip),%rsi
3b9f(4): mov 0x10(%rbx),%rax
3ba3(4): mov 0x8(%rbx),%r8
3ba7(5): mov $0x5,%edx
3bac(4): mov 0x30(%rbx),%r13
3bb0(4): mov 0x28(%rbx),%r12
3bb4(4): mov 0x20(%rbx),%r15
3bb8(4): mov 0x18(%rbx),%r14
3bbc(3): mov (%rbx),%rbx
3bbf(5): mov %r10,0x18(%rsp)
3bc4(5): mov %r9,0x10(%rsp)
3bc9(4): mov %rax,(%rsp)
3bcd(5): mov %r8,0x8(%rsp)
3bd2(2): xor %edi,%edi
3bd4(5): call 0xffffd6bc(%rip)
3bd9(5): mov 0x18(%rsp),%r10
3bde(2): push %r10
3be0(5): jmp 0xffffff44(%rip)
3be5(3): nop (%rax)
3be8(3): mov (%rbx),%rbx
3beb(7): lea 0x124d(%rip),%rsi
3bf2(5): mov $0x5,%edx
3bf7(2): xor %edi,%edi
3bf9(5): call 0xffffd697(%rip)
3bfe(4): add $0x28,%rsp
3c02(3): mov %rbx,%rcx
3c05(3): mov %rbp,%rdi
3c08(1): pop %rbx
3c09(1): pop %rbp
3c0a(2): pop %r12
3c0c(2): pop %r13
3c0e(2): pop %r14
3c10(2): pop %r15
3c12(3): mov %rax,%rdx
3c15(5): mov $0x1,%esi
3c1a(2): xor %eax,%eax
3c1c(5): jmp 0xffffd814(%rip)
3c21(7): nop 0x0(%rax)
3c28(4): mov 0x8(%rbx),%r12
3c2c(7): lea 0x121c(%rip),%rsi
3c33(3): mov (%rbx),%rbx
3c36(5): mov $0x5,%edx
3c3b(2): xor %edi,%edi
3c3d(5): call 0xffffd653(%rip)
3c42(4): add $0x28,%rsp
3c46(3): mov %r12,%r8
3c49(3): mov %rbx,%rcx
3c4c(3): mov %rbp,%rdi
3c4f(3): mov %rax,%rdx
3c52(5): mov $0x1,%esi
3c57(1): pop %rbx
3c58(1): pop %rbp
3c59(2): pop %r12
3c5b(2): pop %r13
3c5d(2): pop %r14
3c5f(2): pop %r15
3c61(2): xor %eax,%eax
3c63(5): jmp 0xffffd7cd(%rip)
3c68(8): nop 0x0(%rax,%rax,1)
3c70(4): mov 0x10(%rbx),%r13
3c74(4): mov 0x8(%rbx),%r12
3c78(7): lea 0x11e7(%rip),%rsi
3c7f(3): mov (%rbx),%rbx
3c82(5): mov $0x5,%edx
3c87(2): xor %edi,%edi
3c89(5): call 0xffffd607(%rip)
3c8e(4): add $0x28,%rsp
3c92(3): mov %r13,%r9
3c95(3): mov %r12,%r8
3c98(3): mov %rbx,%rcx
3c9b(3): mov %rbp,%rdi
3c9e(3): mov %rax,%rdx
3ca1(1): pop %rbx
3ca2(1): pop %rbp
3ca3(2): pop %r12
3ca5(2): pop %r13
3ca7(2): pop %r14
3ca9(2): pop %r15
3cab(5): mov $0x1,%esi
3cb0(2): xor %eax,%eax
3cb2(5): jmp 0xffffd77e(%rip)
3cb7(9): nop 0x0(%rax,%rax,1)
3cc0(7): lea 0x12d1(%rip),%rsi
3cc7(5): mov $0x5,%edx
3ccc(2): xor %edi,%edi
3cce(4): mov 0x18(%rbx),%r14
3cd2(4): mov 0x10(%rbx),%r13
3cd6(4): mov 0x8(%rbx),%r12
3cda(3): mov (%rbx),%rbx
3cdd(5): call 0xffffd5b3(%rip)
3ce2(4): sub $0x8,%rsp
3ce6(2): push %r14
3ce8(3): mov %rax,%rdx
3ceb(3): mov %r13,%r9
3cee(3): mov %r12,%r8
3cf1(3): mov %rbx,%rcx
3cf4(3): mov %rbp,%rdi
3cf7(5): mov $0x1,%esi
3cfc(2): xor %eax,%eax
3cfe(5): call 0xffffd732(%rip)
3d03(1): pop %rax
3d04(1): pop %rdx
3d05(4): add $0x28,%rsp
3d09(1): pop %rbx
3d0a(1): pop %rbp
3d0b(2): pop %r12
3d0d(2): pop %r13
3d0f(2): pop %r14
3d11(2): pop %r15
3d13(1): ret near (%rsp)
3d14(4): nop 0x0(%rax)
3d18(4): mov 0x20(%rbx),%r15
3d1c(7): lea 0x1295(%rip),%rsi
3d23(5): mov $0x5,%edx
3d28(2): xor %edi,%edi
3d2a(4): mov 0x18(%rbx),%r14
3d2e(4): mov 0x10(%rbx),%r13
3d32(4): mov 0x8(%rbx),%r12
3d36(3): mov (%rbx),%rbx
3d39(5): call 0xffffd557(%rip)
3d3e(2): push %r15
3d40(2): jmp 0xffffffa6(%rip)
3d42(6): nop 0x0(%rax,%rax,1)
3d48(4): mov 0x8(%rbx),%r8
3d4c(4): mov 0x28(%rbx),%r12
3d50(7): lea 0x1289(%rip),%rsi
3d57(4): mov 0x20(%rbx),%r15
3d5b(4): mov 0x18(%rbx),%r14
3d5f(5): mov $0x5,%edx
3d64(4): mov 0x10(%rbx),%r13
3d68(2): xor %edi,%edi
3d6a(3): mov (%rbx),%rbx
3d6d(4): mov %r8,(%rsp)
3d71(5): call 0xffffd51f(%rip)
3d76(4): sub $0x8,%rsp
3d7a(3): mov %r13,%r9
3d7d(2): push %r12
3d7f(2): push %r15
3d81(2): push %r14
3d83(5): mov 0x20(%rsp),%r8
3d88(3): mov %rbx,%rcx
3d8b(3): mov %rax,%rdx
3d8e(3): mov %rbp,%rdi
3d91(5): mov $0x1,%esi
3d96(2): xor %eax,%eax
3d98(5): call 0xffffd698(%rip)
3d9d(4): add $0x20,%rsp
3da1(4): add $0x28,%rsp
3da5(1): pop %rbx
3da6(1): pop %rbp
3da7(2): pop %r12
3da9(2): pop %r13
3dab(2): pop %r14
3dad(2): pop %r15
3daf(1): ret near (%rsp)
3db0(4): mov 0x10(%rbx),%r9
3db4(4): mov 0x30(%rbx),%r13
3db8(7): lea 0x1249(%rip),%rsi
3dbf(4): mov 0x28(%rbx),%r12
3dc3(4): mov 0x20(%rbx),%r15
3dc7(5): mov $0x5,%edx
3dcc(4): mov 0x18(%rbx),%r14
3dd0(4): mov 0x8(%rbx),%r8
3dd4(2): xor %edi,%edi
3dd6(5): mov %r9,0x8(%rsp)
3ddb(3): mov (%rbx),%rbx
3dde(4): mov %r8,(%rsp)
3de2(5): call 0xffffd4ae(%rip)
3de7(2): push %r13
3de9(2): push %r12
3deb(2): push %r15
3ded(2): push %r14
3def(5): mov 0x28(%rsp),%r9
3df4(2): jmp 0xffffff8f(%rip)
3df6(a): nop 0x0(%rax,%rax,1)
3e00(4): mov 0x40(%rbx),%r10
3e04(4): mov 0x38(%rbx),%r9
3e08(5): mov $0x5,%edx
3e0d(4): mov 0x10(%rbx),%rax
3e11(4): mov 0x8(%rbx),%r8
3e15(7): lea 0x1284(%rip),%rsi
3e1c(4): mov 0x30(%rbx),%r13
3e20(4): mov 0x28(%rbx),%r12
3e24(4): mov 0x20(%rbx),%r15
3e28(4): mov 0x18(%rbx),%r14
3e2c(5): mov %r10,0x18(%rsp)
3e31(5): mov %r9,0x10(%rsp)
3e36(4): mov %rax,(%rsp)
3e3a(5): mov %r8,0x8(%rsp)
3e3f(3): mov (%rbx),%rbx
3e42(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3e50(3): xor %r9d,%r9d
3e53(4): cmp $0x0,(%r8)
3e57(2): jz 0x14(%rip)
3e59(7): nop 0x0(%rax)
3e60(4): add $0x1,%r9
3e64(5): cmp $0x0,0x0(%r8,%r9,8)
3e69(2): jnz 0xfffffff7(%rip)
3e6b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3e70(4): sub $0x68,%rsp
3e74(3): mov %r8,%r10
3e77(3): xor %r9d,%r9d
3e7a(9): mov $0x28,%rax
3e83(5): mov %rax,0x58(%rsp)
3e88(2): xor %eax,%eax
3e8a(3): mov %rsp,%r8
3e8d(3): nop (%rax)
3e90(3): mov (%r10),%eax
3e93(3): cmp $0x2f,%eax
3e96(2): jnbe 0x44(%rip)
3e98(3): mov %eax,%r11d
3e9b(4): add 0x10(%r10),%r11
3e9f(3): add $0x8,%eax
3ea2(3): mov %eax,(%r10)
3ea5(3): mov (%r11),%rax
3ea8(3): test %rax,%rax
3eab(4): mov %rax,0x0(%r8,%r9,8)
3eaf(2): jz 0xc(%rip)
3eb1(4): add $0x1,%r9
3eb5(4): cmp $0xa,%r9
3eb9(2): jnz 0xffffffd7(%rip)
3ebb(5): call 0xfffffb75(%rip)
3ec0(5): mov 0x58(%rsp),%rax
3ec5(9): xor $0x28,%rax
3ece(2): jnz 0x7(%rip)
3ed0(4): add $0x68,%rsp
3ed4(1): ret near (%rsp)
3ed5(5): call 0xffffd3eb(%rip)
3eda(4): mov 0x8(%r10),%r11
3ede(4): lea 0x8(%r11),%rax
3ee2(4): mov %rax,0x8(%r10)
3ee6(2): jmp 0xffffffbf(%rip)

"version_etc" :
3ef0(1): push %rbp
3ef1(1): push %rbx
3ef2(6): mov $0x20,%r10d
3ef8(3): xor %r11d,%r11d
3efb(7): sub $0xb8,%rsp
3f02(9): mov $0x28,%rax
3f0b(5): mov %rax,0x78(%rsp)
3f10(2): xor %eax,%eax
3f12(8): lea 0xd0(%rsp),%rax
3f1a(8): mov %r8,0xa0(%rsp)
3f22(8): lea 0xd0(%rsp),%rbx
3f2a(5): lea 0x20(%rsp),%r8
3f2f(8): mov %r9,0xa8(%rsp)
3f37(8): mov $0x20,0x8(%rsp)
3f3f(5): mov %rax,0x10(%rsp)
3f44(8): lea 0x80(%rsp),%rax
3f4c(3): xor %r9d,%r9d
3f4f(5): mov %rax,0x18(%rsp)
3f54(3): mov %rax,%rbp
3f57(9): nop 0x0(%rax,%rax,1)
3f60(4): cmp $0x2f,%r10d
3f64(2): jnbe 0x58(%rip)
3f66(3): mov %r10d,%eax
3f69(6): mov $0x1,%r11d
3f6f(4): add $0x8,%r10d
3f73(3): add %rbp,%rax
3f76(3): mov (%rax),%rax
3f79(3): test %rax,%rax
3f7c(4): mov %rax,0x0(%r8,%r9,8)
3f80(2): jz 0xc(%rip)
3f82(4): add $0x1,%r9
3f86(4): cmp $0xa,%r9
3f8a(2): jnz 0xffffffd6(%rip)
3f8c(3): test %r11b,%r11b
3f8f(2): jnz 0x26(%rip)
3f91(5): call 0xfffffa9f(%rip)
3f96(5): mov 0x78(%rsp),%rax
3f9b(9): xor $0x28,%rax
3fa4(2): jnz 0xc(%rip)
3fa6(7): add $0xb8,%rsp
3fad(1): pop %rbx
3fae(1): pop %rbp
3faf(1): ret near (%rsp)
3fb0(5): call 0xffffd310(%rip)
3fb5(5): mov %r10d,0x8(%rsp)
3fba(2): jmp 0xffffffd7(%rip)
3fbc(3): mov %rbx,%rax
3fbf(4): add $0x8,%rbx
3fc3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
3fd0(1): push %rbx
3fd1(7): lea 0xeaa(%rip),%rsi
3fd8(5): mov $0x5,%edx
3fdd(2): xor %edi,%edi
3fdf(5): call 0xffffd2b1(%rip)
3fe4(7): lea 0xeac(%rip),%rdx
3feb(3): mov %rax,%rsi
3fee(5): mov $0x1,%edi
3ff3(2): xor %eax,%eax
3ff5(5): call 0xffffd3db(%rip)
3ffa(7): lea 0xeac(%rip),%rsi
4001(5): mov $0x5,%edx
4006(2): xor %edi,%edi
4008(5): call 0xffffd288(%rip)
400d(7): lea 0x82c(%rip),%rcx
4014(7): lea 0x6c6(%rip),%rdx
401b(3): mov %rax,%rsi
401e(5): mov $0x1,%edi
4023(2): xor %eax,%eax
4025(5): call 0xffffd3ab(%rip)
402a(7): mov 0x203057(%rip),%rbx
4031(7): lea 0x10a8(%rip),%rsi
4038(2): xor %edi,%edi
403a(5): mov $0x5,%edx
403f(5): call 0xffffd251(%rip)
4044(3): mov %rbx,%rsi
4047(3): mov %rax,%rdi
404a(1): pop %rbx
404b(5): jmp 0xffffd2e5(%rip)

"xmalloc" :
4050(1): push %rbx
4051(3): mov %rdi,%rbx
4054(5): call 0xffffd31c(%rip)
4059(3): test %rax,%rax
405c(2): jnz 0x7(%rip)
405e(3): test %rbx,%rbx
4061(2): jnz 0x4(%rip)
4063(1): pop %rbx
4064(1): ret near (%rsp)
4065(5): call 0x23b(%rip)

"xnmalloc" :
4070(3): mov %rdi,%rax
4073(3): mul %rax,%rsi,%rdx
4076(3): mov %rax,%rdi
4079(3): seto %al
407c(3): test %rdi,%rdi
407f(2): js 0xc(%rip)
4081(3): movzx %al,%eax
4084(3): test %rax,%rax
4087(2): jnz 0x4(%rip)
4089(2): jmp 0xffffffc7(%rip)
408b(4): sub $0x8,%rsp
408f(5): call 0x211(%rip)

"xrealloc" :
40b0(3): test %rsi,%rsi
40b3(1): push %rbx
40b4(3): mov %rsi,%rbx
40b7(2): jnz 0x7(%rip)
40b9(3): test %rdi,%rdi
40bc(2): jnz 0x1c(%rip)
40be(3): mov %rbx,%rsi
40c1(5): call 0xffffd2ef(%rip)
40c6(3): test %rax,%rax
40c9(2): jnz 0x7(%rip)
40cb(3): test %rbx,%rbx
40ce(2): jnz 0x13(%rip)
40d0(1): pop %rbx
40d1(1): ret near (%rsp)
40d2(6): nop 0x0(%rax,%rax,1)
40d8(5): call 0xffffd118(%rip)
40dd(2): xor %eax,%eax
40df(1): pop %rbx
40e0(1): ret near (%rsp)
40e1(5): call 0x1bf(%rip)

"xnrealloc" :
40f0(3): mov %rsi,%rax
40f3(3): mul %rax,%rdx,%rdx
40f6(3): mov %rax,%rsi
40f9(3): seto %al
40fc(3): test %rsi,%rsi
40ff(2): js 0xc(%rip)
4101(3): movzx %al,%eax
4104(3): test %rax,%rax
4107(2): jnz 0x4(%rip)
4109(2): jmp 0xffffffa7(%rip)
410b(4): sub $0x8,%rsp
410f(5): call 0x191(%rip)

"x2nrealloc" :
4120(3): test %rdi,%rdi
4123(3): mov %rdx,%r9
4126(3): mov (%rsi),%rcx
4129(2): jz 0x37(%rip)
412b(2): xor %edx,%edx
412d(a): mov $0x6148914691236517204,%rax
4137(3): div %r9,%rax
413a(3): cmp %rcx,%rax
413d(2): jbe 0x3e(%rip)
413f(3): mov %rcx,%rax
4142(3): shr $0x1,%rax
4145(5): lea 0x1(%rax,%rcx,1),%rcx
414a(3): mov %rcx,(%rsi)
414d(4): imul %r9,%rcx
4151(3): mov %rcx,%rsi
4154(5): jmp 0xffffff5c(%rip)
4159(7): nop 0x0(%rax)
4160(3): test %rcx,%rcx
4163(2): jz 0x25(%rip)
4165(3): mov %rcx,%rax
4168(3): mul %rax,%r9,%rdx
416b(3): seto %dl
416e(3): test %rax,%rax
4171(3): movzx %dl,%edx
4174(2): js 0x7(%rip)
4176(3): test %rdx,%rdx
4179(2): jz 0xffffffd1(%rip)
417b(4): sub $0x8,%rsp
417f(5): call 0x121(%rip)
4184(4): nop 0x0(%rax)
4188(2): xor %edx,%edx
418a(5): mov $0x80,%eax
418f(3): xor %r8d,%r8d
4192(3): div %r9,%rax
4195(3): test %rax,%rax
4198(4): setz %r8b
419c(4): lea 0x0(%r8,%rax,1),%rcx
41a0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
41b0(3): test %rdi,%rdi
41b3(3): mov (%rsi),%rax
41b6(2): jz 0x2a(%rip)
41b8(a): mov $0x6148914691236517203,%rdx
41c2(3): cmp %rdx,%rax
41c5(2): jnbe 0x2c(%rip)
41c7(3): mov %rax,%rdx
41ca(3): shr $0x1,%rdx
41cd(5): lea 0x1(%rdx,%rax,1),%rax
41d2(3): mov %rax,(%rsi)
41d5(3): mov %rax,%rsi
41d8(5): jmp 0xfffffed8(%rip)
41dd(3): nop (%rax)
41e0(3): test %rax,%rax
41e3(5): mov $0x80,%edx
41e8(4): cmove %rdx,%rax
41ec(3): test %rax,%rax
41ef(2): jns 0xffffffe3(%rip)
41f1(4): sub $0x8,%rsp
41f5(5): call 0xab(%rip)

"xzalloc" :
4200(1): push %rbx
4201(3): mov %rdi,%rbx
4204(5): call 0xfffffe4c(%rip)
4209(3): mov %rbx,%rdx
420c(2): xor %esi,%esi
420e(3): mov %rax,%rdi
4211(1): pop %rbx
4212(5): jmp 0xffffd0fe(%rip)

"xcalloc" :
4220(3): mov %rdi,%rax
4223(4): sub $0x8,%rsp
4227(3): mul %rax,%rsi,%rdx
422a(3): seto %dl
422d(3): test %rax,%rax
4230(2): js 0x19(%rip)
4232(3): movzx %dl,%edx
4235(3): test %rdx,%rdx
4238(2): jnz 0x11(%rip)
423a(5): call 0xffffd106(%rip)
423f(3): test %rax,%rax
4242(2): jz 0x7(%rip)
4244(4): add $0x8,%rsp
4248(1): ret near (%rsp)
4249(5): call 0x57(%rip)

"xmemdup" :
4250(1): push %rbp
4251(1): push %rbx
4252(3): mov %rdi,%rbp
4255(3): mov %rsi,%rdi
4258(3): mov %rsi,%rbx
425b(4): sub $0x8,%rsp
425f(5): call 0xfffffdf1(%rip)
4264(4): add $0x8,%rsp
4268(3): mov %rbx,%rdx
426b(3): mov %rbp,%rsi
426e(1): pop %rbx
426f(1): pop %rbp
4270(3): mov %rax,%rdi
4273(5): jmp 0xffffd0dd(%rip)

"xstrdup" :
4280(1): push %rbx
4281(3): mov %rdi,%rbx
4284(5): call 0xffffd02c(%rip)
4289(3): mov %rbx,%rdi
428c(4): lea 0x1(%rax),%rsi
4290(1): pop %rbx
4291(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
42a0(7): lea 0xee8(%rip),%rsi
42a7(4): sub $0x8,%rsp
42ab(5): mov $0x5,%edx
42b0(2): xor %edi,%edi
42b2(5): call 0xffffcfde(%rip)
42b7(6): mov 0x202d5b(%rip),%edi
42bd(7): lea 0x634(%rip),%rdx
42c4(3): mov %rax,%rcx
42c7(2): xor %esi,%esi
42c9(2): xor %eax,%eax
42cb(5): call 0xffffd115(%rip)
42d0(5): call 0xffffcf30(%rip)

"rpl_mbrtowc" :
42e0(2): push %r13
42e2(2): push %r12
42e4(3): mov %rsi,%r13
42e7(1): push %rbp
42e8(1): push %rbx
42e9(3): mov %rdi,%rbx
42ec(3): mov %rdx,%r12
42ef(4): sub $0x18,%rsp
42f3(9): mov $0x28,%rax
42fc(5): mov %rax,0x8(%rsp)
4301(2): xor %eax,%eax
4303(5): lea 0x4(%rsp),%rax
4308(3): test %rdi,%rdi
430b(4): cmove %rax,%rbx
430f(3): mov %rbx,%rdi
4312(5): call 0xffffcfce(%rip)
4317(4): cmp $0xfffffffd,%rax
431b(3): mov %rax,%rbp
431e(2): jbe 0x22(%rip)
4320(3): test %r12,%r12
4323(2): jz 0x1d(%rip)
4325(2): xor %edi,%edi
4327(5): call 0xc9(%rip)
432c(2): test %al,%al
432e(2): jnz 0x12(%rip)
4330(5): movzx 0x0(%r13),%eax
4335(5): mov $0x1,%ebp
433a(2): mov %eax,(%rbx)
433c(4): nop 0x0(%rax)
4340(5): mov 0x8(%rsp),%rdx
4345(9): xor $0x28,%rdx
434e(3): mov %rbp,%rax
4351(2): jnz 0xd(%rip)
4353(4): add $0x18,%rsp
4357(1): pop %rbx
4358(1): pop %rbp
4359(2): pop %r12
435b(2): pop %r13
435d(1): ret near (%rsp)
435e(5): call 0xffffcf62(%rip)

"close_stream" :
4370(2): push %r12
4372(1): push %rbp
4373(3): mov %rdi,%rbp
4376(1): push %rbx
4377(5): call 0xffffced9(%rip)
437c(3): mov 0x0(%rbp),%ebx
437f(3): mov %rbp,%rdi
4382(3): mov %rax,%r12
4385(5): call 0x10b(%rip)
438a(3): and $0x20,%ebx
438d(2): test %ebx,%ebx
438f(2): jnz 0x19(%rip)
4391(2): test %eax,%eax
4393(2): jz 0xc(%rip)
4395(3): test %r12,%r12
4398(5): mov $0xffffffff,%eax
439d(2): jz 0x3b(%rip)
439f(1): pop %rbx
43a0(1): pop %rbp
43a1(2): pop %r12
43a3(1): ret near (%rsp)
43a4(4): nop 0x0(%rax)
43a8(2): test %eax,%eax
43aa(2): jnz 0x1e(%rip)
43ac(5): call 0xffffce64(%rip)
43b1(6): mov $0x0,(%rax)
43b7(5): mov $0xffffffff,%eax
43bc(1): pop %rbx
43bd(1): pop %rbp
43be(2): pop %r12
43c0(1): ret near (%rsp)
43c1(7): nop 0x0(%rax)
43c8(1): pop %rbx
43c9(5): mov $0xffffffff,%eax
43ce(1): pop %rbp
43cf(2): pop %r12
43d1(1): ret near (%rsp)
43d2(6): nop 0x0(%rax,%rax,1)
43d8(5): call 0xffffce38(%rip)
43dd(3): cmp $0x9,(%rax)
43e0(1): pop %rbx
43e1(1): pop %rbp
43e2(2): pop %r12
43e4(3): setnz %al
43e7(3): movzx %al,%eax
43ea(2): neg %eax
43ec(1): ret near (%rsp)

"hard_locale" :
43f0(4): sub $0x8,%rsp
43f4(2): xor %esi,%esi
43f6(5): call 0xffffcfca(%rip)
43fb(3): mov %rax,%rdx
43fe(5): mov $0x1,%eax
4403(3): test %rdx,%rdx
4406(2): jz 0x1f(%rip)
4408(7): lea 0xd91(%rip),%rdi
440f(5): mov $0x2,%ecx
4414(3): mov %rdx,%rsi
4417(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4419(3): setnbe %cl
441c(3): sbb $0x0,%cl
441f(2): xor %eax,%eax
4421(2): test %cl,%cl
4423(2): jnz 0xd(%rip)
4425(4): add $0x8,%rsp
4429(1): ret near (%rsp)
442a(6): nop 0x0(%rax,%rax,1)
4430(7): lea 0xd6b(%rip),%rdi
4437(5): mov $0x6,%ecx
443c(3): mov %rdx,%rsi
443f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4441(3): setnbe %al
4444(2): sbb $0x0,%al
4446(2): test %al,%al
4448(3): setnz %al
444b(4): add $0x8,%rsp
444f(1): ret near (%rsp)

"locale_charset" :
4450(4): sub $0x8,%rsp
4454(5): mov $0xe,%edi
4459(5): call 0xffffcf37(%rip)
445e(3): test %rax,%rax
4461(2): jz 0x1f(%rip)
4463(3): cmp $0x0,(%rax)
4466(7): lea 0xd3b(%rip),%rdx
446d(4): cmove %rdx,%rax
4471(4): add $0x8,%rsp
4475(1): ret near (%rsp)
4476(a): nop 0x0(%rax,%rax,1)
4480(7): lea 0xd21(%rip),%rax
4487(4): add $0x8,%rsp
448b(1): ret near (%rsp)

"rpl_fclose" :
4490(2): push %r12
4492(1): push %rbp
4493(1): push %rbx
4494(3): mov %rdi,%rbx
4497(5): call 0xffffcec9(%rip)
449c(2): test %eax,%eax
449e(3): mov %rbx,%rdi
44a1(2): js 0x56(%rip)
44a3(5): call 0xffffcefd(%rip)
44a8(2): test %eax,%eax
44aa(2): jnz 0x2e(%rip)
44ac(3): mov %rbx,%rdi
44af(5): call 0x61(%rip)
44b4(2): test %eax,%eax
44b6(2): jz 0x3e(%rip)
44b8(5): call 0xffffcd58(%rip)
44bd(3): mov (%rax),%r12d
44c0(3): mov %rbx,%rdi
44c3(3): mov %rax,%rbp
44c6(5): call 0xffffcdaa(%rip)
44cb(3): test %r12d,%r12d
44ce(2): jnz 0x32(%rip)
44d0(1): pop %rbx
44d1(1): pop %rbp
44d2(2): pop %r12
44d4(1): ret near (%rsp)
44d5(3): nop (%rax)
44d8(3): mov %rbx,%rdi
44db(5): call 0xffffce85(%rip)
44e0(2): xor %esi,%esi
44e2(5): mov $0x1,%edx
44e7(2): mov %eax,%edi
44e9(5): call 0xffffce17(%rip)
44ee(4): cmp $0xffffffff,%rax
44f2(2): jnz 0xffffffba(%rip)
44f4(3): mov %rbx,%rdi
44f7(1): pop %rbx
44f8(1): pop %rbp
44f9(2): pop %r12
44fb(5): jmp 0xffffcd75(%rip)
4500(4): mov %r12d,0x0(%rbp)
4504(5): mov $0xffffffff,%eax
4509(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4510(3): test %rdi,%rdi
4513(1): push %rbx
4514(3): mov %rdi,%rbx
4517(2): jz 0x13(%rip)
4519(5): call 0xffffce87(%rip)
451e(2): test %eax,%eax
4520(2): jz 0xa(%rip)
4522(6): test $0x100,(%rbx)
4528(2): jnz 0x10(%rip)
452a(3): mov %rbx,%rdi
452d(1): pop %rbx
452e(5): jmp 0xffffce52(%rip)
4533(5): nop 0x0(%rax,%rax,1)
4538(3): mov %rbx,%rdi
453b(5): mov $0x1,%edx
4540(2): xor %esi,%esi
4542(5): call 0xe(%rip)
4547(3): mov %rbx,%rdi
454a(1): pop %rbx
454b(5): jmp 0xffffce35(%rip)

"rpl_fseeko" :
4550(4): mov 0x8(%rdi),%rax
4554(4): cmp %rax,0x10(%rdi)
4558(2): jz 0x8(%rip)
455a(5): jmp 0xffffce96(%rip)
455f(1): nop 
4560(4): mov 0x20(%rdi),%rax
4564(4): cmp %rax,0x28(%rdi)
4568(2): jnz 0xfffffff2(%rip)
456a(5): cmp $0x0,0x48(%rdi)
456f(2): jnz 0xffffffeb(%rip)
4571(2): push %r12
4573(1): push %rbp
4574(3): mov %edx,%r12d
4577(1): push %rbx
4578(3): mov %rsi,%rbp
457b(3): mov %rdi,%rbx
457e(5): call 0xffffcde2(%rip)
4583(3): mov %r12d,%edx
4586(3): mov %rbp,%rsi
4589(2): mov %eax,%edi
458b(5): call 0xffffcd75(%rip)
4590(4): cmp $0xffffffff,%rax
4594(2): jz 0xe(%rip)
4596(3): and $0xef,(%rbx)
4599(7): mov %rax,0x90(%rbx)
45a0(2): xor %eax,%eax
45a2(1): pop %rbx
45a3(1): pop %rbp
45a4(2): pop %r12
45a6(1): ret near (%rsp)

"__libc_csu_init" :
45b0(2): push %r15
45b2(2): push %r14
45b4(3): mov %rdx,%r15
45b7(2): push %r13
45b9(2): push %r12
45bb(7): lea 0x2025ee(%rip),%r12
45c2(1): push %rbp
45c3(7): lea 0x2025ee(%rip),%rbp
45ca(1): push %rbx
45cb(3): mov %edi,%r13d
45ce(3): mov %rsi,%r14
45d1(3): sub %r12,%rbp
45d4(4): sub $0x8,%rsp
45d8(4): sar $0x3,%rbp
45dc(5): call 0xffffcbe4(%rip)
45e1(3): test %rbp,%rbp
45e4(2): jz 0x22(%rip)
45e6(2): xor %ebx,%ebx
45e8(8): nop 0x0(%rax,%rax,1)
45f0(3): mov %r15,%rdx
45f3(3): mov %r14,%rsi
45f6(3): mov %r13d,%edi
45f9(4): call 0x0(%r12,%rbx,8)
45fd(4): add $0x1,%rbx
4601(3): cmp %rbx,%rbp
4604(2): jnz 0xffffffec(%rip)
4606(4): add $0x8,%rsp
460a(1): pop %rbx
460b(1): pop %rbp
460c(2): pop %r12
460e(2): pop %r13
4610(2): pop %r14
4612(2): pop %r15
4614(1): ret near (%rsp)

"atexit" :
4630(7): mov 0x2029d1(%rip),%rdx
4637(2): xor %esi,%esi
4639(5): jmp 0xffffcdc7(%rip)

"_fini" :
4640(4): sub $0x8,%rsp
4644(4): add $0x8,%rsp
4648(1): ret near (%rsp)

