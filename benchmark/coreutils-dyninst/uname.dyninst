
"free@plt" :
1350(6): jmp 0x205b2a(%rip)
1356(5): push $0x0

"abort@plt" :
1360(6): jmp 0x205b22(%rip)
1366(5): push $0x1

"__errno_location@plt" :
1370(6): jmp 0x205b1a(%rip)
1376(5): push $0x2

"strncmp@plt" :
1380(6): jmp 0x205b12(%rip)
1386(5): push $0x3

"_exit@plt" :
1390(6): jmp 0x205b0a(%rip)
1396(5): push $0x4

"__fpending@plt" :
13a0(6): jmp 0x205b02(%rip)
13a6(5): push $0x5

"textdomain@plt" :
13b0(6): jmp 0x205afa(%rip)
13b6(5): push $0x6

"fclose@plt" :
13c0(6): jmp 0x205af2(%rip)
13c6(5): push $0x7

"bindtextdomain@plt" :
13d0(6): jmp 0x205aea(%rip)
13d6(5): push $0x8

"dcgettext@plt" :
13e0(6): jmp 0x205ae2(%rip)
13e6(5): push $0x9

"__ctype_get_mb_cur_max@plt" :
13f0(6): jmp 0x205ada(%rip)
13f6(5): push $0xa

"strlen@plt" :
1400(6): jmp 0x205ad2(%rip)
1406(5): push $0xb

"__stack_chk_fail@plt" :
1410(6): jmp 0x205aca(%rip)
1416(5): push $0xc

"getopt_long@plt" :
1420(6): jmp 0x205ac2(%rip)
1426(5): push $0xd

"mbrtowc@plt" :
1430(6): jmp 0x205aba(%rip)
1436(5): push $0xe

"__overflow@plt" :
1440(6): jmp 0x205ab2(%rip)
1446(5): push $0xf

"strrchr@plt" :
1450(6): jmp 0x205aaa(%rip)
1456(5): push $0x10

"uname@plt" :
1460(6): jmp 0x205aa2(%rip)
1466(5): push $0x11

"lseek@plt" :
1470(6): jmp 0x205a9a(%rip)
1476(5): push $0x12

"memset@plt" :
1480(6): jmp 0x205a92(%rip)
1486(5): push $0x13

"memcmp@plt" :
1490(6): jmp 0x205a8a(%rip)
1496(5): push $0x14

"fputs_unlocked@plt" :
14a0(6): jmp 0x205a82(%rip)
14a6(5): push $0x15

"calloc@plt" :
14b0(6): jmp 0x205a7a(%rip)
14b6(5): push $0x16

"strcmp@plt" :
14c0(6): jmp 0x205a72(%rip)
14c6(5): push $0x17

"memcpy@plt" :
14d0(6): jmp 0x205a6a(%rip)
14d6(5): push $0x18

"fileno@plt" :
14e0(6): jmp 0x205a62(%rip)
14e6(5): push $0x19

"malloc@plt" :
14f0(6): jmp 0x205a5a(%rip)
14f6(5): push $0x1a

"fflush@plt" :
1500(6): jmp 0x205a52(%rip)
1506(5): push $0x1b

"nl_langinfo@plt" :
1510(6): jmp 0x205a4a(%rip)
1516(5): push $0x1c

"__freading@plt" :
1520(6): jmp 0x205a42(%rip)
1526(5): push $0x1d

"realloc@plt" :
1530(6): jmp 0x205a3a(%rip)
1536(5): push $0x1e

"setlocale@plt" :
1540(6): jmp 0x205a32(%rip)
1546(5): push $0x1f

"__printf_chk@plt" :
1550(6): jmp 0x205a2a(%rip)
1556(5): push $0x20

"error@plt" :
1560(6): jmp 0x205a22(%rip)
1566(5): push $0x21

"fseeko@plt" :
1570(6): jmp 0x205a1a(%rip)
1576(5): push $0x22

"__cxa_atexit@plt" :
1580(6): jmp 0x205a12(%rip)
1586(5): push $0x23

"exit@plt" :
1590(6): jmp 0x205a0a(%rip)
1596(5): push $0x24

"fwrite@plt" :
15a0(6): jmp 0x205a02(%rip)
15a6(5): push $0x25

"__fprintf_chk@plt" :
15b0(6): jmp 0x2059fa(%rip)
15b6(5): push $0x26

"mbsinit@plt" :
15c0(6): jmp 0x2059f2(%rip)
15c6(5): push $0x27

"iswprint@plt" :
15d0(6): jmp 0x2059ea(%rip)
15d6(5): push $0x28

"__ctype_b_loc@plt" :
15e0(6): jmp 0x2059e2(%rip)
15e6(5): push $0x29

".plt.got" :
15f0(6): jmp 0x2059fa(%rip)
15f6(2): nop 

"_init" :
1328(4): sub $0x8,%rsp
132c(7): mov 0x205cad(%rip),%rax
1333(3): test %rax,%rax
1336(2): jz 0x4(%rip)
1338(2): call %rax
133a(4): add $0x8,%rsp
133e(1): ret near (%rsp)

"main" :
1600(2): push %r13
1602(2): push %r12
1604(3): mov %edi,%r12d
1607(1): push %rbp
1608(1): push %rbx
1609(3): mov %rsi,%rbp
160c(7): sub $0x198,%rsp
1613(3): mov (%rsi),%rdi
1616(9): mov $0x28,%rax
161f(8): mov %rax,0x188(%rsp)
1627(2): xor %eax,%eax
1629(5): call 0x997(%rip)
162e(7): lea 0x3330(%rip),%rsi
1635(5): mov $0x6,%edi
163a(5): call 0xffffff06(%rip)
163f(7): lea 0x33c1(%rip),%rsi
1646(7): lea 0x3391(%rip),%rdi
164d(5): call 0xfffffd83(%rip)
1652(7): lea 0x3385(%rip),%rdi
1659(5): call 0xfffffd57(%rip)
165e(7): lea 0x8ab(%rip),%rdi
1665(5): call 0x328b(%rip)
166a(7): cmp $0x2,0x20599f(%rip)
1671(6): jz 0x17f(%rip)
1677(7): lea 0x2053e2(%rip),%r13
167e(2): xor %ebx,%ebx
1680(7): lea 0x33b2(%rip),%rdx
1687(3): xor %r8d,%r8d
168a(3): mov %r13,%rcx
168d(3): mov %rbp,%rsi
1690(3): mov %r12d,%edi
1693(5): call 0xfffffd8d(%rip)
1698(3): cmp $0xff,%eax
169b(6): jz 0xf8(%rip)
16a1(3): cmp $0x6e,%eax
16a4(6): jz 0xbf(%rip)
16aa(2): jle 0x26(%rip)
16ac(3): cmp $0x72,%eax
16af(6): jz 0xc4(%rip)
16b5(2): jnle 0x43(%rip)
16b7(3): cmp $0x6f,%eax
16ba(6): jz 0xb1(%rip)
16c0(3): cmp $0x70,%eax
16c3(6): jnz 0x335(%rip)
16c9(3): or $0x20,%ebx
16cc(2): jmp 0xffffffb4(%rip)
16ce(2): nop 
16d0(3): cmp $0x61,%eax
16d3(6): jz 0xb0(%rip)
16d9(2): jle 0x39(%rip)
16db(3): cmp $0x69,%eax
16de(6): jz 0x9d(%rip)
16e4(3): cmp $0x6d,%eax
16e7(6): jnz 0x311(%rip)
16ed(3): or $0x10,%ebx
16f0(2): jmp 0xffffff90(%rip)
16f2(6): nop 0x0(%rax,%rax,1)
16f8(3): cmp $0x73,%eax
16fb(6): jz 0x90(%rip)
1701(3): cmp $0x76,%eax
1704(6): jnz 0x2f4(%rip)
170a(3): or $0x8,%ebx
170d(5): jmp 0xffffff73(%rip)
1712(5): cmp $0xffffff7d,%eax
1717(6): jnz 0x2a2(%rip)
171d(7): cmp $0x1,0x2058ec(%rip)
1724(7): lea 0x31ff(%rip),%rax
172b(7): mov 0x205976(%rip),%rdi
1732(7): lea 0x31eb(%rip),%rsi
1739(7): mov 0x2058d8(%rip),%rcx
1740(7): lea 0x32e2(%rip),%r8
1747(7): lea 0x328c(%rip),%rdx
174e(4): cmovne %rax,%rsi
1752(3): xor %r9d,%r9d
1755(2): xor %eax,%eax
1757(5): call 0x2a59(%rip)
175c(2): xor %edi,%edi
175e(5): call 0xfffffe32(%rip)
1763(3): or $0x2,%ebx
1766(5): jmp 0xffffff1a(%rip)
176b(3): or $0x80,%bl
176e(5): jmp 0xffffff12(%rip)
1773(3): or $0x4,%ebx
1776(5): jmp 0xffffff0a(%rip)
177b(3): or $0x40,%ebx
177e(5): jmp 0xffffff02(%rip)
1783(3): or $0xff,%ebx
1786(5): jmp 0xfffffefa(%rip)
178b(3): or $0x1,%ebx
178e(5): jmp 0xfffffef2(%rip)
1793(7): movsxd 0x205916(%rip),%rax
179a(3): cmp %eax,%r12d
179d(6): jnz 0x22a(%rip)
17a3(2): test %ebx,%ebx
17a5(6): jnz 0xcb(%rip)
17ab(3): mov %rsp,%rbp
17ae(5): mov $0x1,%ebx
17b3(3): mov %rbp,%rdi
17b6(5): call 0xfffffcaa(%rip)
17bb(3): add $0x1,%eax
17be(6): jnz 0x1d1(%rip)
17c4(7): lea 0x3289(%rip),%rsi
17cb(5): mov $0x5,%edx
17d0(2): xor %edi,%edi
17d2(5): call 0xfffffc0e(%rip)
17d7(3): mov %rax,%rbx
17da(5): call 0xfffffb96(%rip)
17df(2): mov (%rax),%esi
17e1(3): mov %rbx,%rdx
17e4(5): mov $0x1,%edi
17e9(2): xor %eax,%eax
17eb(5): call 0xfffffd75(%rip)
17f0(7): lea 0x205209(%rip),%rcx
17f7(7): lea 0x3167(%rip),%rdx
17fe(3): xor %r8d,%r8d
1801(3): mov %rbp,%rsi
1804(3): mov %r12d,%edi
1807(5): call 0xfffffc19(%rip)
180c(3): cmp $0xff,%eax
180f(6): jz 0xed(%rip)
1815(5): cmp $0xffffff7d,%eax
181a(6): jnz 0x19f(%rip)
1820(7): cmp $0x1,0x2057e9(%rip)
1827(7): lea 0x30fc(%rip),%rax
182e(7): lea 0x30ef(%rip),%rsi
1835(7): mov 0x20586c(%rip),%rdi
183c(7): mov 0x2057d5(%rip),%rcx
1843(7): lea 0x31d5(%rip),%r9
184a(7): lea 0x31d8(%rip),%r8
1851(7): lea 0x3182(%rip),%rdx
1858(4): cmovne %rax,%rsi
185c(4): sub $0x8,%rsp
1860(2): xor %eax,%eax
1862(2): push $0x0
1864(5): call 0x294c(%rip)
1869(2): xor %edi,%edi
186b(5): call 0xfffffd25(%rip)
1870(3): test $0x1f,%bl
1873(6): jnz 0x103(%rip)
1879(3): cmp $0xff,%ebx
187c(4): setnz %bpl
1880(3): test $0x20,%bl
1883(2): jz 0x13(%rip)
1885(3): test %bpl,%bpl
1888(2): jz 0xe(%rip)
188a(7): lea 0x3637(%rip),%rdi
1891(5): call 0x28f(%rip)
1896(3): test $0x40,%bl
1899(2): jz 0x13(%rip)
189b(3): test %bpl,%bpl
189e(2): jz 0xe(%rip)
18a0(7): lea 0x3621(%rip),%rdi
18a7(5): call 0x279(%rip)
18ac(3): and $0x80,%bl
18af(6): jnz 0x9a(%rip)
18b5(7): mov 0x2057ec(%rip),%rdi
18bc(4): mov 0x28(%rdi),%rax
18c0(4): cmp 0x30(%rdi),%rax
18c4(6): jnb 0xe6(%rip)
18ca(4): lea 0x1(%rax),%rdx
18ce(4): mov %rdx,0x28(%rdi)
18d2(3): mov $0xa,(%rax)
18d5(2): xor %eax,%eax
18d7(8): mov 0x188(%rsp),%rcx
18df(9): xor $0x28,%rcx
18e8(6): jnz 0x11a(%rip)
18ee(7): add $0x198,%rsp
18f5(1): pop %rbx
18f6(1): pop %rbp
18f7(2): pop %r12
18f9(2): pop %r13
18fb(1): ret near (%rsp)
18fc(7): movsxd 0x2057ad(%rip),%rax
1903(3): cmp %eax,%r12d
1906(6): jnz 0xc1(%rip)
190c(3): mov %rsp,%rbp
190f(3): mov %rbp,%rdi
1912(5): call 0xfffffb4e(%rip)
1917(3): add $0x1,%eax
191a(6): jz 0xfffffeaa(%rip)
1920(5): mov $0x10,%ebx
1925(3): test $0x4,%bl
1928(2): jnz 0x40(%rip)
192a(3): test $0x8,%bl
192d(2): jnz 0x2d(%rip)
192f(3): test $0x10,%bl
1932(6): jz 0xffffff47(%rip)
1938(7): lea 0x104(%rbp),%rdi
193f(5): call 0x1e1(%rip)
1944(5): jmp 0xffffff35(%rip)
1949(7): lea 0x311b(%rip),%rdi
1950(5): call 0x1d0(%rip)
1955(5): jmp 0xffffff60(%rip)
195a(7): lea 0xc3(%rbp),%rdi
1961(5): call 0x1bf(%rip)
1966(2): jmp 0xffffffc9(%rip)
1968(7): lea 0x82(%rbp),%rdi
196f(5): call 0x1b1(%rip)
1974(2): jmp 0xffffffb6(%rip)
1976(3): mov %rsp,%rbp
1979(3): mov %rbp,%rdi
197c(5): call 0xfffffae4(%rip)
1981(3): add $0x1,%eax
1984(6): jz 0xfffffe40(%rip)
198a(3): test $0x1,%bl
198d(2): jz 0xa(%rip)
198f(3): mov %rbp,%rdi
1992(5): call 0x18e(%rip)
1997(3): test $0x2,%bl
199a(2): jz 0xffffff8b(%rip)
199c(4): lea 0x41(%rbp),%rdi
19a0(5): call 0x180(%rip)
19a5(5): jmp 0xffffff80(%rip)
19aa(5): mov $0xa,%esi
19af(5): call 0xfffffa91(%rip)
19b4(5): jmp 0xffffff21(%rip)
19b9(5): cmp $0xffffff7e,%eax
19be(2): jnz 0x3a(%rip)
19c0(2): xor %edi,%edi
19c2(5): call 0x1ae(%rip)
19c7(5): mov 0x0(%rbp,%rax,8),%rdi
19cc(5): call 0x2304(%rip)
19d1(7): lea 0x306b(%rip),%rsi
19d8(3): mov %rax,%rbx
19db(5): mov $0x5,%edx
19e0(2): xor %edi,%edi
19e2(5): call 0xfffff9fe(%rip)
19e7(3): mov %rbx,%rcx
19ea(3): mov %rax,%rdx
19ed(2): xor %esi,%esi
19ef(2): xor %edi,%edi
19f1(2): xor %eax,%eax
19f3(5): call 0xfffffb6d(%rip)
19f8(5): mov $0x1,%edi
19fd(5): call 0x173(%rip)
1a02(5): call 0xfffffa0e(%rip)

"_start" :
1a10(2): xor %ebp,%ebp
1a12(3): mov %rdx,%r9
1a15(1): pop %rsi
1a16(3): mov %rsp,%rdx
1a19(4): and $0xfffffff0,%rsp
1a1d(1): push %rax
1a1e(1): push %rsp
1a1f(7): lea 0x2eba(%rip),%r8
1a26(7): lea 0x2e43(%rip),%rcx
1a2d(7): lea 0xfffffbcc(%rip),%rdi
1a34(6): call 0x20559e(%rip)
1a3a(1): hlt 

"deregister_tm_clones" :
1a40(7): lea 0x205659(%rip),%rdi
1a47(1): push %rbp
1a48(7): lea 0x205651(%rip),%rax
1a4f(3): cmp %rdi,%rax
1a52(3): mov %rsp,%rbp
1a55(2): jz 0x1b(%rip)
1a57(7): mov 0x205572(%rip),%rax
1a5e(3): test %rax,%rax
1a61(2): jz 0xf(%rip)
1a63(1): pop %rbp
1a64(2): jmp %rax
1a66(a): nop 0x0(%rax,%rax,1)
1a70(1): pop %rbp
1a71(1): ret near (%rsp)

"register_tm_clones" :
1a80(7): lea 0x205619(%rip),%rdi
1a87(7): lea 0x205612(%rip),%rsi
1a8e(1): push %rbp
1a8f(3): sub %rdi,%rsi
1a92(3): mov %rsp,%rbp
1a95(4): sar $0x3,%rsi
1a99(3): mov %rsi,%rax
1a9c(4): shr $0x3f,%rax
1aa0(3): add %rax,%rsi
1aa3(3): sar $0x1,%rsi
1aa6(2): jz 0x1a(%rip)
1aa8(7): mov 0x205539(%rip),%rax
1aaf(3): test %rax,%rax
1ab2(2): jz 0xe(%rip)
1ab4(1): pop %rbp
1ab5(2): jmp %rax
1ab7(9): nop 0x0(%rax,%rax,1)
1ac0(1): pop %rbp
1ac1(1): ret near (%rsp)

"__do_global_dtors_aux" :
1ad0(7): cmp $0x0,0x2055f1(%rip)
1ad7(2): jnz 0x31(%rip)
1ad9(8): cmp $0x0,0x20550f(%rip)
1ae1(1): push %rbp
1ae2(3): mov %rsp,%rbp
1ae5(2): jz 0xe(%rip)
1ae7(7): mov 0x20551a(%rip),%rdi
1aee(5): call 0xfffffb02(%rip)
1af3(5): call 0xffffff4d(%rip)
1af8(7): mov $0x1,0x2055c9(%rip)
1aff(1): pop %rbp
1b00(1): ret near (%rsp)
1b01(7): nop 0x0(%rax)
1b08(2): REP ret near (%rsp)

"frame_dummy" :
1b10(1): push %rbp
1b11(3): mov %rsp,%rbp
1b14(1): pop %rbp
1b15(5): jmp 0xffffff6b(%rip)

"print_element" :
1b20(7): cmp $0x0,0x2055a2(%rip)
1b27(1): push %rbx
1b28(3): mov %rdi,%rbx
1b2b(2): jz 0x1e(%rip)
1b2d(7): mov 0x205574(%rip),%rdi
1b34(4): mov 0x28(%rdi),%rax
1b38(4): cmp 0x30(%rdi),%rax
1b3c(2): jnb 0x24(%rip)
1b3e(4): lea 0x1(%rax),%rdx
1b42(4): mov %rdx,0x28(%rdi)
1b46(3): mov $0x20,(%rax)
1b49(3): mov %rbx,%rdi
1b4c(7): mov 0x205555(%rip),%rsi
1b53(7): mov $0x1,0x20556f(%rip)
1b5a(1): pop %rbx
1b5b(5): jmp 0xfffff945(%rip)
1b60(5): mov $0x20,%esi
1b65(5): call 0xfffff8db(%rip)
1b6a(2): jmp 0xffffffdf(%rip)

"usage" :
1b70(2): push %r13
1b72(2): push %r12
1b74(5): mov $0x5,%edx
1b79(1): push %rbp
1b7a(1): push %rbx
1b7b(3): mov %edi,%r12d
1b7e(7): sub $0x88,%rsp
1b85(7): mov 0x205554(%rip),%rbx
1b8c(9): mov $0x28,%rax
1b95(5): mov %rax,0x78(%rsp)
1b9a(2): xor %eax,%eax
1b9c(2): test %edi,%edi
1b9e(2): jz 0x31(%rip)
1ba0(7): lea 0x2f49(%rip),%rsi
1ba7(2): xor %edi,%edi
1ba9(5): call 0xfffff837(%rip)
1bae(7): mov 0x20550b(%rip),%rdi
1bb5(3): mov %rax,%rdx
1bb8(3): mov %rbx,%rcx
1bbb(5): mov $0x1,%esi
1bc0(2): xor %eax,%eax
1bc2(5): call 0xfffff9ee(%rip)
1bc7(3): mov %r12d,%edi
1bca(5): call 0xfffff9c6(%rip)
1bcf(7): lea 0x2d5b(%rip),%rsi
1bd6(2): xor %edi,%edi
1bd8(5): call 0xfffff808(%rip)
1bdd(3): mov %rbx,%rdx
1be0(3): mov %rax,%rsi
1be3(5): mov $0x1,%edi
1be8(2): xor %eax,%eax
1bea(5): call 0xfffff966(%rip)
1bef(7): cmp $0x1,0x20541a(%rip)
1bf6(7): mov 0x2054ab(%rip),%rbx
1bfd(5): mov $0x5,%edx
1c02(7): lea 0x2d3f(%rip),%rsi
1c09(6): jz 0x1ff(%rip)
1c0f(2): xor %edi,%edi
1c11(7): lea 0x2d12(%rip),%rbp
1c18(5): call 0xfffff7c8(%rip)
1c1d(3): mov %rbx,%rsi
1c20(3): mov %rax,%rdi
1c23(5): call 0xfffff87d(%rip)
1c28(7): mov 0x205479(%rip),%rbx
1c2f(7): lea 0x3182(%rip),%rsi
1c36(5): mov $0x5,%edx
1c3b(2): xor %edi,%edi
1c3d(5): call 0xfffff7a3(%rip)
1c42(3): mov %rbx,%rsi
1c45(3): mov %rax,%rdi
1c48(5): call 0xfffff858(%rip)
1c4d(7): mov 0x205454(%rip),%rbx
1c54(7): lea 0x318d(%rip),%rsi
1c5b(2): xor %edi,%edi
1c5d(5): mov $0x5,%edx
1c62(5): call 0xfffff77e(%rip)
1c67(3): mov %rbx,%rsi
1c6a(3): mov %rax,%rdi
1c6d(3): mov %rsp,%rbx
1c70(5): call 0xfffff830(%rip)
1c75(7): cmp $0x1,0x205394(%rip)
1c7c(7): lea 0x2ca1(%rip),%rax
1c83(7): lea 0x2d1b(%rip),%rcx
1c8a(7): lea 0x2c9e(%rip),%rsi
1c91(9): mov $0x0,0x60(%rsp)
1c9a(9): mov $0x0,0x68(%rsp)
1ca3(5): mov %rcx,0x30(%rsp)
1ca8(7): lea 0x2d00(%rip),%rcx
1caf(4): mov %rsi,(%rsp)
1cb3(4): cmove %rax,%rbp
1cb7(7): lea 0x2ca8(%rip),%rax
1cbe(5): mov %rcx,0x40(%rsp)
1cc3(7): lea 0x2cef(%rip),%rcx
1cca(5): mov %rax,0x8(%rsp)
1ccf(7): lea 0x2d08(%rip),%rax
1cd6(5): mov %rcx,0x50(%rsp)
1cdb(5): mov %rax,0x10(%rsp)
1ce0(7): lea 0x2c8f(%rip),%rax
1ce7(5): mov %rax,0x18(%rsp)
1cec(7): lea 0x2c99(%rip),%rax
1cf3(5): mov %rax,0x20(%rsp)
1cf8(7): lea 0x2c97(%rip),%rax
1cff(5): mov %rax,0x28(%rsp)
1d04(5): mov %rax,0x38(%rsp)
1d09(5): mov %rax,0x48(%rsp)
1d0e(5): mov %rax,0x58(%rsp)
1d13(2): jmp 0x11(%rip)
1d15(3): nop (%rax)
1d18(4): add $0x10,%rbx
1d1c(3): mov (%rbx),%rsi
1d1f(3): test %rsi,%rsi
1d22(2): jz 0xe(%rip)
1d24(3): mov %rbp,%rdi
1d27(5): call 0xfffff799(%rip)
1d2c(2): test %eax,%eax
1d2e(2): jnz 0xffffffea(%rip)
1d30(4): mov 0x8(%rbx),%rbx
1d34(2): xor %edi,%edi
1d36(5): mov $0x5,%edx
1d3b(7): lea 0x2c81(%rip),%rsi
1d42(3): test %rbx,%rbx
1d45(6): jz 0xf4(%rip)
1d4b(5): call 0xfffff695(%rip)
1d50(7): lea 0x30c9(%rip),%rcx
1d57(7): lea 0x2c7c(%rip),%rdx
1d5e(3): mov %rax,%rsi
1d61(5): mov $0x1,%edi
1d66(2): xor %eax,%eax
1d68(5): call 0xfffff7e8(%rip)
1d6d(2): xor %esi,%esi
1d6f(5): mov $0x5,%edi
1d74(5): call 0xfffff7cc(%rip)
1d79(3): test %rax,%rax
1d7c(2): jz 0x1e(%rip)
1d7e(7): lea 0x2c63(%rip),%rsi
1d85(5): mov $0x3,%edx
1d8a(3): mov %rax,%rdi
1d8d(5): call 0xfffff5f3(%rip)
1d92(2): test %eax,%eax
1d94(6): jnz 0x12e(%rip)
1d9a(7): lea 0x2c4b(%rip),%rsi
1da1(2): xor %edi,%edi
1da3(5): mov $0x5,%edx
1da8(5): call 0xfffff638(%rip)
1dad(7): lea 0x306c(%rip),%rdx
1db4(3): mov %rbp,%rcx
1db7(3): mov %rax,%rsi
1dba(5): mov $0x1,%edi
1dbf(2): xor %eax,%eax
1dc1(5): call 0xfffff78f(%rip)
1dc6(3): cmp %rbx,%rbp
1dc9(7): lea 0x2bb0(%rip),%rcx
1dd0(7): lea 0x2b8e(%rip),%rbp
1dd7(4): cmove %rcx,%rbp
1ddb(7): lea 0x30ae(%rip),%rsi
1de2(2): xor %edi,%edi
1de4(5): mov $0x5,%edx
1de9(5): call 0xfffff5f7(%rip)
1dee(3): mov %rbp,%rcx
1df1(3): mov %rax,%rsi
1df4(3): mov %rbx,%rdx
1df7(5): mov $0x1,%edi
1dfc(2): xor %eax,%eax
1dfe(5): call 0xfffff752(%rip)
1e03(5): jmp 0xfffffdc4(%rip)
1e08(7): lea 0x2d09(%rip),%rsi
1e0f(2): xor %edi,%edi
1e11(5): call 0xfffff5cf(%rip)
1e16(3): mov %rbx,%rsi
1e19(3): mov %rax,%rdi
1e1c(5): call 0xfffff684(%rip)
1e21(7): mov 0x205280(%rip),%rbx
1e28(5): mov $0x5,%edx
1e2d(7): lea 0x2e54(%rip),%rsi
1e34(5): jmp 0xfffffddb(%rip)
1e39(5): call 0xfffff5a7(%rip)
1e3e(7): lea 0x2fdb(%rip),%rcx
1e45(7): lea 0x2b8e(%rip),%rdx
1e4c(3): mov %rax,%rsi
1e4f(5): mov $0x1,%edi
1e54(2): xor %eax,%eax
1e56(5): call 0xfffff6fa(%rip)
1e5b(2): xor %esi,%esi
1e5d(5): mov $0x5,%edi
1e62(5): call 0xfffff6de(%rip)
1e67(3): test %rax,%rax
1e6a(2): jz 0x1a(%rip)
1e6c(7): lea 0x2b75(%rip),%rsi
1e73(5): mov $0x3,%edx
1e78(3): mov %rax,%rdi
1e7b(5): call 0xfffff505(%rip)
1e80(2): test %eax,%eax
1e82(2): jnz 0x3d(%rip)
1e84(7): lea 0x2b61(%rip),%rsi
1e8b(5): mov $0x5,%edx
1e90(2): xor %edi,%edi
1e92(3): mov %rbp,%rbx
1e95(5): call 0xfffff54b(%rip)
1e9a(7): lea 0x2f7f(%rip),%rdx
1ea1(3): mov %rbp,%rcx
1ea4(3): mov %rax,%rsi
1ea7(5): mov $0x1,%edi
1eac(2): xor %eax,%eax
1eae(7): lea 0x2acb(%rip),%rbp
1eb5(5): call 0xfffff69b(%rip)
1eba(5): jmp 0xffffff21(%rip)
1ebf(3): mov %rbp,%rbx
1ec2(7): mov 0x2051df(%rip),%r13
1ec9(7): lea 0x2f78(%rip),%rsi
1ed0(2): xor %edi,%edi
1ed2(5): mov $0x5,%edx
1ed7(5): call 0xfffff509(%rip)
1edc(3): mov %r13,%rsi
1edf(3): mov %rax,%rdi
1ee2(5): call 0xfffff5be(%rip)
1ee7(5): jmp 0xfffffeb3(%rip)

"close_stdout_set_file_name" :
1ef0(7): mov %rdi,0x2051e1(%rip)
1ef7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1f00(7): mov %dil,0x2051c9(%rip)
1f07(1): ret near (%rsp)

"close_stdout" :
1f10(1): push %rbp
1f11(1): push %rbx
1f12(4): sub $0x8,%rsp
1f16(7): mov 0x20518b(%rip),%rdi
1f1d(5): call 0x2713(%rip)
1f22(2): test %eax,%eax
1f24(2): jz 0x18(%rip)
1f26(5): call 0xfffff44a(%rip)
1f2b(7): cmp $0x0,0x20519e(%rip)
1f32(3): mov %rax,%rbx
1f35(2): jz 0x1e(%rip)
1f37(3): cmp $0x20,(%rax)
1f3a(2): jnz 0x19(%rip)
1f3c(7): mov 0x20517d(%rip),%rdi
1f43(5): call 0x26ed(%rip)
1f48(2): test %eax,%eax
1f4a(2): jnz 0x48(%rip)
1f4c(4): add $0x8,%rsp
1f50(1): pop %rbx
1f51(1): pop %rbp
1f52(1): ret near (%rsp)
1f53(7): lea 0x2f7b(%rip),%rsi
1f5a(2): xor %edi,%edi
1f5c(5): mov $0x5,%edx
1f61(5): call 0xfffff47f(%rip)
1f66(7): mov 0x20516b(%rip),%rdi
1f6d(3): mov %rax,%rbp
1f70(3): test %rdi,%rdi
1f73(2): jz 0x2a(%rip)
1f75(5): call 0x1b5b(%rip)
1f7a(2): mov (%rbx),%esi
1f7c(7): lea 0x2f5e(%rip),%rdx
1f83(3): mov %rax,%rcx
1f86(3): mov %rbp,%r8
1f89(2): xor %edi,%edi
1f8b(2): xor %eax,%eax
1f8d(5): call 0xfffff5d3(%rip)
1f92(6): mov 0x205088(%rip),%edi
1f98(5): call 0xfffff3f8(%rip)
1f9d(2): mov (%rbx),%esi
1f9f(7): lea 0x2f3f(%rip),%rdx
1fa6(3): mov %rax,%rcx
1fa9(2): xor %edi,%edi
1fab(2): xor %eax,%eax
1fad(5): call 0xfffff5b3(%rip)
1fb2(2): jmp 0xffffffe0(%rip)

"set_program_name" :
1fc0(3): test %rdi,%rdi
1fc3(1): push %rbx
1fc4(2): jz 0x79(%rip)
1fc6(5): mov $0x2f,%esi
1fcb(3): mov %rdi,%rbx
1fce(5): call 0xfffff482(%rip)
1fd3(3): test %rax,%rax
1fd6(2): jz 0x57(%rip)
1fd8(4): lea 0x1(%rax),%r8
1fdc(3): mov %r8,%rdx
1fdf(3): sub %rbx,%rdx
1fe2(4): cmp $0x6,%rdx
1fe6(2): jle 0x47(%rip)
1fe8(4): lea 0xfffffffa(%rax),%rsi
1fec(7): lea 0x2f2d(%rip),%rdi
1ff3(5): mov $0x7,%ecx
1ff8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1ffa(3): setnbe %dl
1ffd(3): sbb $0x0,%dl
2000(2): test %dl,%dl
2002(2): jnz 0x2b(%rip)
2004(7): lea 0x2f1d(%rip),%rdi
200b(5): mov $0x3,%ecx
2010(3): mov %r8,%rsi
2013(3): mov %r8,%rbx
2016(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2018(3): setnbe %dl
201b(3): sbb $0x0,%dl
201e(2): test %dl,%dl
2020(2): jnz 0xd(%rip)
2022(4): lea 0x4(%rax),%rbx
2026(7): mov %rbx,0x205073(%rip)
202d(7): mov %rbx,0x2050ac(%rip)
2034(7): mov %rbx,0x20507d(%rip)
203b(1): pop %rbx
203c(1): ret near (%rsp)
203d(7): mov 0x20507c(%rip),%rcx
2044(7): lea 0x2e9d(%rip),%rdi
204b(5): mov $0x37,%edx
2050(5): mov $0x1,%esi
2055(5): call 0xfffff54b(%rip)
205a(5): call 0xfffff306(%rip)

"gettext_quote.part.1" :
2060(1): push %rbp
2061(1): push %rbx
2062(3): mov %rdi,%rbp
2065(2): mov %esi,%ebx
2067(4): sub $0x8,%rsp
206b(5): call 0x26a5(%rip)
2070(3): movzx (%rax),%edx
2073(3): and $0xdf,%edx
2076(3): cmp $0x55,%dl
2079(2): jz 0x77(%rip)
207b(3): cmp $0x47,%dl
207e(2): jz 0x22(%rip)
2080(7): lea 0x2eb4(%rip),%rax
2087(7): lea 0x2eaf(%rip),%rdx
208e(3): cmp $0x9,%ebx
2091(4): cmovne %rdx,%rax
2095(4): add $0x8,%rsp
2099(1): pop %rbx
209a(1): pop %rbp
209b(1): ret near (%rsp)
209c(4): nop 0x0(%rax)
20a0(4): movzx 0x1(%rax),%edx
20a4(3): and $0xdf,%edx
20a7(3): cmp $0x42,%dl
20aa(2): jnz 0xffffffd6(%rip)
20ac(4): cmp $0x31,0x2(%rax)
20b0(2): jnz 0xffffffd0(%rip)
20b2(4): cmp $0x38,0x3(%rax)
20b6(2): jnz 0xffffffca(%rip)
20b8(4): cmp $0x30,0x4(%rax)
20bc(2): jnz 0xffffffc4(%rip)
20be(4): cmp $0x33,0x5(%rax)
20c2(2): jnz 0xffffffbe(%rip)
20c4(4): cmp $0x30,0x6(%rax)
20c8(2): jnz 0xffffffb8(%rip)
20ca(4): cmp $0x0,0x7(%rax)
20ce(2): jnz 0xffffffb2(%rip)
20d0(4): cmp $0x60,0x0(%rbp)
20d4(7): lea 0x2e59(%rip),%rax
20db(7): lea 0x2e56(%rip),%rdx
20e2(4): cmovne %rdx,%rax
20e6(4): add $0x8,%rsp
20ea(1): pop %rbx
20eb(1): pop %rbp
20ec(1): ret near (%rsp)
20ed(3): nop (%rax)
20f0(4): movzx 0x1(%rax),%edx
20f4(3): and $0xdf,%edx
20f7(3): cmp $0x54,%dl
20fa(2): jnz 0xffffff86(%rip)
20fc(4): movzx 0x2(%rax),%edx
2100(3): and $0xdf,%edx
2103(3): cmp $0x46,%dl
2106(6): jnz 0xffffff7a(%rip)
210c(4): cmp $0x2d,0x3(%rax)
2110(6): jnz 0xffffff70(%rip)
2116(4): cmp $0x38,0x4(%rax)
211a(6): jnz 0xffffff66(%rip)
2120(4): cmp $0x0,0x5(%rax)
2124(6): jnz 0xffffff5c(%rip)
212a(4): cmp $0x60,0x0(%rbp)
212e(7): lea 0x2df7(%rip),%rax
2135(7): lea 0x2df4(%rip),%rdx
213c(4): cmovne %rdx,%rax
2140(4): add $0x8,%rsp
2144(1): pop %rbx
2145(1): pop %rbp
2146(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2150(2): push %r15
2152(2): push %r14
2154(3): mov %r8d,%r15d
2157(2): push %r13
2159(2): push %r12
215b(3): mov %rdi,%r14
215e(1): push %rbp
215f(1): push %rbx
2160(3): mov %r9d,%ebx
2163(3): mov %rsi,%r13
2166(3): mov %rcx,%rbp
2169(3): and $0x2,%ebx
216c(7): sub $0xb8,%rsp
2173(8): mov 0xf0(%rsp),%rax
217b(5): mov %rdx,0x10(%rsp)
2180(5): mov %r8d,0x8(%rsp)
2185(5): mov %r9d,0x78(%rsp)
218a(5): mov %rax,0x20(%rsp)
218f(8): mov 0xf8(%rsp),%rax
2197(5): mov %rax,0x68(%rsp)
219c(8): mov 0x100(%rsp),%rax
21a4(5): mov %rax,0x60(%rsp)
21a9(9): mov $0x28,%rax
21b2(8): mov %rax,0xa8(%rsp)
21ba(2): xor %eax,%eax
21bc(5): call 0xfffff234(%rip)
21c1(4): cmp $0xa,%r15d
21c5(5): mov %rax,0x58(%rsp)
21ca(6): jnbe 0x11b5(%rip)
21d0(7): lea 0x2dc9(%rip),%rcx
21d7(3): mov %r15d,%edx
21da(4): movsxd 0x0(%rcx,%rdx,4),%rax
21de(3): add %rcx,%rax
21e1(2): jmp %rax
21e3(5): mov $0x1,0xe(%rsp)
21e8(5): mov $0x0,0x7c(%rsp)
21ed(3): xor %r12d,%r12d
21f0(9): mov $0x0,0x50(%rsp)
21f9(5): mov $0x1,0xf(%rsp)
21fe(5): mov $0x0,0xd(%rsp)
2203(7): lea 0x2d33(%rip),%rax
220a(9): mov $0x1,0x18(%rsp)
2213(3): xor %r15d,%r15d
2216(8): mov $0x2,0x8(%rsp)
221e(5): mov %rax,0x48(%rsp)
2223(3): xor %r11d,%r11d
2226(3): mov %rbp,%rax
2229(3): mov %r12d,%r8d
222c(3): mov %r11,%rbp
222f(3): mov %rax,%r11
2232(6): nop 0x0(%rax,%rax,1)
2238(3): cmp %rbp,%r11
223b(4): setnz %r12b
223f(4): cmp $0xffffffff,%r11
2243(2): jnz 0xf(%rip)
2245(5): mov 0x10(%rsp),%rax
224a(4): cmp $0x0,0x0(%rax,%rbp,1)
224e(4): setnz %r12b
2252(3): test %r12b,%r12b
2255(6): jz 0x65b(%rip)
225b(5): cmp $0x2,0x8(%rsp)
2260(5): mov 0x10(%rsp),%rdi
2265(4): lea 0x0(%rdi,%rbp,1),%r9
2269(3): setnz %al
226c(4): and 0xd(%rsp),%al
2270(3): mov %eax,%r10d
2273(6): jz 0xad(%rip)
2279(5): mov 0x18(%rsp),%rax
227e(3): test %rax,%rax
2281(6): jz 0x42f(%rip)
2287(4): cmp $0xffffffff,%r11
228b(5): lea 0x0(%rbp,%rax,1),%rbx
2290(2): jnz 0x30(%rip)
2292(4): cmp $0x1,%rax
2296(2): jbe 0x2a(%rip)
2298(5): mov %r8b,0x38(%rsp)
229d(5): mov %r10b,0x30(%rsp)
22a2(5): mov %r9,0x28(%rsp)
22a7(5): call 0xfffff159(%rip)
22ac(6): movzx 0x38(%rsp),%r8d
22b2(6): movzx 0x30(%rsp),%r10d
22b8(3): mov %rax,%r11
22bb(5): mov 0x28(%rsp),%r9
22c0(3): cmp %r11,%rbx
22c3(5): mov %r10b,0x28(%rsp)
22c8(6): jnbe 0x5b8(%rip)
22ce(5): mov 0x18(%rsp),%rdx
22d3(5): mov 0x48(%rsp),%rsi
22d8(3): mov %r9,%rdi
22db(5): mov %r11,0x40(%rsp)
22e0(5): mov %r8b,0x38(%rsp)
22e5(5): mov %r9,0x30(%rsp)
22ea(5): call 0xfffff1a6(%rip)
22ef(2): test %eax,%eax
22f1(5): mov 0x30(%rsp),%r9
22f6(6): movzx 0x38(%rsp),%r8d
22fc(5): mov 0x40(%rsp),%r11
2301(6): jnz 0x57f(%rip)
2307(5): cmp $0x0,0xf(%rsp)
230c(6): movzx 0x28(%rsp),%r10d
2312(6): jnz 0xf83(%rip)
2318(8): nop 0x0(%rax,%rax,1)
2320(4): movzx (%r9),%ebx
2324(3): cmp $0x7e,%bl
2327(6): jnbe 0x321(%rip)
232d(7): lea 0x2c98(%rip),%rcx
2334(3): movzx %bl,%edx
2337(4): movsxd 0x0(%rcx,%rdx,4),%rax
233b(3): add %rcx,%rax
233e(2): jmp %rax
2340(3): xor %r10d,%r10d
2343(4): cmp $0x1,%r11
2347(3): setnz %al
234a(4): cmp $0xffffffff,%r11
234e(2): jnz 0xe(%rip)
2350(5): mov 0x10(%rsp),%rax
2355(4): cmp $0x0,0x1(%rax)
2359(3): setnz %al
235c(5): cmp $0x2,0x8(%rsp)
2361(3): setz %dl
2364(2): test %al,%al
2366(6): jz 0x252(%rip)
236c(3): xor %r12d,%r12d
236f(2): xor %eax,%eax
2371(7): nop 0x0(%rax)
2378(5): cmp $0x1,0xd(%rsp)
237d(6): jnz 0x115(%rip)
2383(2): test %dl,%dl
2385(6): jnz 0x10d(%rip)
238b(5): mov 0x20(%rsp),%rsi
2390(3): test %rsi,%rsi
2393(2): jz 0x16(%rip)
2395(2): mov %ebx,%edx
2397(3): shr $0x5,%dl
239a(3): movzx %dl,%edx
239d(3): mov 0x0(%rsi,%rdx,4),%edx
23a0(3): bt %ebx,%edx
23a3(6): jb 0x150(%rip)
23a9(3): test %r10b,%r10b
23ac(6): jnz 0x147(%rip)
23b2(3): xor $0x1,%eax
23b5(4): add $0x1,%rbp
23b9(3): and %r8d,%eax
23bc(2): test %al,%al
23be(2): jz 0x22(%rip)
23c0(3): cmp %r15,%r13
23c3(2): jbe 0x7(%rip)
23c5(5): mov $0x27,0x0(%r14,%r15,1)
23ca(4): lea 0x1(%r15),%rax
23ce(3): cmp %rax,%r13
23d1(2): jbe 0x8(%rip)
23d3(6): mov $0x27,0x1(%r14,%r15,1)
23d9(4): add $0x2,%r15
23dd(3): xor %r8d,%r8d
23e0(3): cmp %r13,%r15
23e3(2): jnb 0x6(%rip)
23e5(4): mov %bl,0x0(%r14,%r15,1)
23e9(5): movzx 0xe(%rsp),%edi
23ee(4): add $0x1,%r15
23f2(5): mov $0x0,%eax
23f7(3): test %r12b,%r12b
23fa(3): cmove %eax,%edi
23fd(5): mov %dil,0xe(%rsp)
2402(5): jmp 0xfffffe36(%rip)
2407(9): nop 0x0(%rax,%rax,1)
2410(3): xor %r10d,%r10d
2413(4): mov 0x8(%rsp),%eax
2417(3): cmp $0x2,%eax
241a(6): jz 0x5be(%rip)
2420(3): cmp $0x5,%eax
2423(6): jz 0x575(%rip)
2429(3): cmp $0x2,%eax
242c(5): mov $0x3f,%ebx
2431(3): setz %dl
2434(3): xor %r12d,%r12d
2437(2): xor %eax,%eax
2439(5): jmp 0xffffff3f(%rip)
243e(2): nop 
2440(3): xor %r10d,%r10d
2443(5): cmp $0x2,0x8(%rsp)
2448(6): jz 0x508(%rip)
244e(5): mov %r12b,0x7c(%rsp)
2453(2): xor %edx,%edx
2455(2): xor %eax,%eax
2457(5): mov $0x27,%ebx
245c(5): jmp 0xffffff1c(%rip)
2461(7): nop 0x0(%rax)
2468(5): mov $0x9,%edx
246d(5): mov $0x74,%ebx
2472(5): cmp $0x2,0x8(%rsp)
2477(3): setz %al
247a(4): and 0xf(%rsp),%al
247e(6): jnz 0x150(%rip)
2484(5): cmp $0x0,0xd(%rsp)
2489(2): jnz 0x67(%rip)
248b(2): mov %edx,%ebx
248d(3): xor %r12d,%r12d
2490(2): xor %eax,%eax
2492(5): cmp $0x0,0xf(%rsp)
2497(6): jnz 0xfffffef4(%rip)
249d(5): jmp 0xffffff0c(%rip)
24a2(6): nop 0x0(%rax,%rax,1)
24a8(5): mov $0x8,%edx
24ad(5): mov $0x62,%ebx
24b2(2): jmp 0xffffffd2(%rip)
24b4(4): nop 0x0(%rax)
24b8(5): cmp $0x2,0x8(%rsp)
24bd(6): jz 0x3d3(%rip)
24c3(5): cmp $0x0,0xd(%rsp)
24c8(6): jz 0x218(%rip)
24ce(5): cmp $0x0,0xf(%rsp)
24d3(6): jz 0x20d(%rip)
24d9(6): cmp $0x0,0x18(%rsp)
24df(6): jnz 0x3bc(%rip)
24e5(5): mov $0x5c,%ebx
24ea(6): nop 0x0(%rax,%rax,1)
24f0(3): xor %r12d,%r12d
24f3(5): cmp $0x2,0x8(%rsp)
24f8(3): setz %dl
24fb(5): cmp $0x0,0xf(%rsp)
2500(2): mov %edx,%eax
2502(6): jnz 0x856(%rip)
2508(3): mov %r8d,%eax
250b(3): xor $0x1,%eax
250e(2): and %dl,%al
2510(2): jz 0x31(%rip)
2512(3): cmp %r15,%r13
2515(2): jbe 0x7(%rip)
2517(5): mov $0x27,0x0(%r14,%r15,1)
251c(4): lea 0x1(%r15),%rdx
2520(3): cmp %rdx,%r13
2523(2): jbe 0x8(%rip)
2525(6): mov $0x24,0x1(%r14,%r15,1)
252b(4): lea 0x2(%r15),%rdx
252f(3): cmp %rdx,%r13
2532(2): jbe 0x8(%rip)
2534(6): mov $0x27,0x2(%r14,%r15,1)
253a(4): add $0x3,%r15
253e(3): mov %eax,%r8d
2541(3): cmp %r15,%r13
2544(2): jbe 0x7(%rip)
2546(5): mov $0x5c,0x0(%r14,%r15,1)
254b(4): add $0x1,%r15
254f(4): add $0x1,%rbp
2553(5): jmp 0xfffffe8d(%rip)
2558(8): nop 0x0(%rax,%rax,1)
2560(5): cmp $0x0,0xd(%rsp)
2565(6): jnz 0x1ce(%rip)
256b(2): xor %edx,%edx
256d(5): test $0x1,0x78(%rsp)
2572(6): jz 0xffffff19(%rip)
2578(4): add $0x1,%rbp
257c(5): jmp 0xfffffcbc(%rip)
2581(7): nop 0x0(%rax)
2588(5): cmp $0x2,0x8(%rsp)
258d(3): setz %dl
2590(2): xor %eax,%eax
2592(5): jmp 0xfffffde6(%rip)
2597(9): nop 0x0(%rax,%rax,1)
25a0(5): mov $0x7,%edx
25a5(5): mov $0x61,%ebx
25aa(5): jmp 0xfffffeda(%rip)
25af(1): nop 
25b0(5): cmp $0x2,0x8(%rsp)
25b5(3): setz %dl
25b8(3): test %rbp,%rbp
25bb(6): jnz 0xfffffdb1(%rip)
25c1(5): movzx 0xf(%rsp),%eax
25c6(2): and %dl,%al
25c8(6): jz 0xfffffdb0(%rip)
25ce(3): mov %r11,%rbp
25d1(8): mov $0x2,0x8(%rsp)
25d9(5): jmp 0x700(%rip)
25de(2): nop 
25e0(5): cmp $0x2,0x8(%rsp)
25e5(3): setz %dl
25e8(3): xor %r12d,%r12d
25eb(2): jmp 0xffffffd6(%rip)
25ed(3): nop (%rax)
25f0(5): cmp $0x2,0x8(%rsp)
25f5(5): mov $0x20,%ebx
25fa(3): setz %dl
25fd(2): jmp 0xffffffc4(%rip)
25ff(1): nop 
2600(5): mov $0xd,%edx
2605(5): mov $0x72,%ebx
260a(5): jmp 0xfffffe68(%rip)
260f(1): nop 
2610(5): mov $0xc,%edx
2615(5): mov $0x66,%ebx
261a(5): jmp 0xfffffe6a(%rip)
261f(1): nop 
2620(5): mov $0xb,%edx
2625(5): mov $0x76,%ebx
262a(5): jmp 0xfffffe5a(%rip)
262f(1): nop 
2630(5): mov $0xa,%edx
2635(5): mov $0x6e,%ebx
263a(5): jmp 0xfffffe38(%rip)
263f(1): nop 
2640(3): xor %r10d,%r10d
2643(5): nop 0x0(%rax,%rax,1)
2648(6): cmp $0x1,0x58(%rsp)
264e(6): jnz 0x3aa(%rip)
2654(5): mov %r11,0x38(%rsp)
2659(5): mov %r8b,0x30(%rsp)
265e(5): mov %r10b,0x28(%rsp)
2663(5): call 0xffffef7d(%rip)
2668(3): mov (%rax),%rcx
266b(3): movzx %bl,%edx
266e(6): movzx 0x28(%rsp),%r10d
2674(6): movzx 0x30(%rsp),%r8d
267a(5): mov 0x38(%rsp),%r11
267f(5): mov $0x1,%edi
2684(4): movzx 0x0(%rcx,%rdx,2),%eax
2688(4): and $0x4000,%ax
268c(4): setnz %r12b
2690(3): setz %al
2693(4): and 0xd(%rsp),%al
2697(2): test %al,%al
2699(6): jnz 0x998(%rip)
269f(5): cmp $0x2,0x8(%rsp)
26a4(3): setz %dl
26a7(5): jmp 0xfffffcd1(%rip)
26ac(4): nop 0x0(%rax)
26b0(4): movzx (%r9),%ebx
26b4(3): cmp $0x7e,%bl
26b7(2): jnbe 0xffffff89(%rip)
26b9(7): lea 0x2b08(%rip),%rcx
26c0(3): movzx %bl,%edx
26c3(4): movsxd 0x0(%rcx,%rdx,4),%rax
26c7(3): add %rcx,%rax
26ca(2): jmp %rax
26cc(4): nop 0x0(%rax)
26d0(3): xor %r10d,%r10d
26d3(5): cmp $0x0,0xd(%rsp)
26d8(6): jnz 0xfffffdf6(%rip)
26de(2): nop 
26e0(5): mov $0x5c,%edx
26e5(5): mov $0x5c,%ebx
26ea(5): jmp 0xfffffd9a(%rip)
26ef(1): nop 
26f0(5): mov $0xc,%edx
26f5(3): xor %r10d,%r10d
26f8(5): mov $0x66,%ebx
26fd(5): jmp 0xfffffd87(%rip)
2702(6): nop 0x0(%rax,%rax,1)
2708(5): mov $0xa,%edx
270d(3): xor %r10d,%r10d
2710(5): mov $0x6e,%ebx
2715(5): jmp 0xfffffd5d(%rip)
271a(6): nop 0x0(%rax,%rax,1)
2720(5): mov $0x61,%ebx
2725(5): jmp 0xfffffdcb(%rip)
272a(6): nop 0x0(%rax,%rax,1)
2730(3): xor %r10d,%r10d
2733(5): cmp $0x2,0x8(%rsp)
2738(3): setz %dl
273b(5): cmp $0x0,0xf(%rsp)
2740(6): jnz 0xb9a(%rip)
2746(3): mov %r8d,%eax
2749(3): mov %r15,%rcx
274c(3): xor $0x1,%eax
274f(2): and %dl,%al
2751(2): jz 0x2f(%rip)
2753(3): cmp %r15,%r13
2756(2): jbe 0x7(%rip)
2758(5): mov $0x27,0x0(%r14,%r15,1)
275d(4): lea 0x1(%r15),%rcx
2761(3): cmp %rcx,%r13
2764(2): jbe 0x8(%rip)
2766(6): mov $0x24,0x1(%r14,%r15,1)
276c(4): lea 0x2(%r15),%rcx
2770(3): cmp %rcx,%r13
2773(6): jnbe 0x636(%rip)
2779(4): lea 0x3(%r15),%rcx
277d(3): mov %eax,%r8d
2780(3): cmp %rcx,%r13
2783(2): jbe 0x7(%rip)
2785(5): mov $0x5c,0x0(%r14,%rcx,1)
278a(5): cmp $0x2,0x8(%rsp)
278f(4): lea 0x1(%rcx),%r15
2793(6): jz 0x606(%rip)
2799(4): lea 0x1(%rbp),%rax
279d(3): cmp %r11,%rax
27a0(2): jnb 0x1b(%rip)
27a2(5): mov 0x10(%rsp),%rax
27a7(5): movzx 0x1(%rax,%rbp,1),%eax
27ac(4): mov %al,0x28(%rsp)
27b0(3): sub $0x30,%eax
27b3(2): cmp $0x9,%al
27b5(6): jbe 0x834(%rip)
27bb(3): mov %r12d,%eax
27be(5): mov $0x30,%ebx
27c3(3): xor %r12d,%r12d
27c6(5): jmp 0xfffffbb2(%rip)
27cb(5): nop 0x0(%rax,%rax,1)
27d0(5): cmp $0x2,0x8(%rsp)
27d5(3): mov %r10d,%r12d
27d8(3): setz %dl
27db(3): xor %r10d,%r10d
27de(2): xor %eax,%eax
27e0(5): jmp 0xfffffb98(%rip)
27e5(3): nop (%rax)
27e8(5): cmp $0x2,0x8(%rsp)
27ed(3): setz %dl
27f0(3): xor %r10d,%r10d
27f3(5): jmp 0xfffffdc5(%rip)
27f8(8): nop 0x0(%rax,%rax,1)
2800(5): cmp $0x2,0x8(%rsp)
2805(3): setz %dl
2808(3): xor %r10d,%r10d
280b(3): xor %r12d,%r12d
280e(5): jmp 0xfffffdb3(%rip)
2813(5): nop 0x0(%rax,%rax,1)
2818(5): cmp $0x2,0x8(%rsp)
281d(3): mov %r10d,%r12d
2820(5): mov $0x20,%ebx
2825(3): setz %dl
2828(3): xor %r10d,%r10d
282b(5): jmp 0xfffffd96(%rip)
2830(5): mov $0xd,%edx
2835(3): xor %r10d,%r10d
2838(5): mov $0x72,%ebx
283d(5): jmp 0xfffffc35(%rip)
2842(6): nop 0x0(%rax,%rax,1)
2848(5): mov $0x76,%ebx
284d(5): jmp 0xfffffca3(%rip)
2852(6): nop 0x0(%rax,%rax,1)
2858(5): mov $0x9,%edx
285d(3): xor %r10d,%r10d
2860(5): mov $0x74,%ebx
2865(5): jmp 0xfffffc0d(%rip)
286a(6): nop 0x0(%rax,%rax,1)
2870(5): mov $0x62,%ebx
2875(5): jmp 0xfffffc7b(%rip)
287a(6): nop 0x0(%rax,%rax,1)
2880(3): xor %r10d,%r10d
2883(5): jmp 0xfffffa9d(%rip)
2888(8): nop 0x0(%rax,%rax,1)
2890(5): cmp $0x0,0xf(%rsp)
2895(6): jnz 0x96b(%rip)
289b(4): add $0x1,%rbp
289f(3): mov %r8d,%eax
28a2(3): xor %r12d,%r12d
28a5(5): mov $0x5c,%ebx
28aa(5): jmp 0xfffffb12(%rip)
28af(1): nop 
28b0(5): cmp $0x2,0x8(%rsp)
28b5(5): movzx 0xf(%rsp),%ebx
28ba(3): mov %r8d,%r12d
28bd(3): mov %r11,%rbp
28c0(3): setz %dl
28c3(2): mov %ebx,%eax
28c5(3): test %r15,%r15
28c8(3): setz %cl
28cb(2): and %edx,%eax
28cd(2): and %cl,%al
28cf(6): jnz 0xa67(%rip)
28d5(2): mov %ebx,%eax
28d7(3): xor $0x1,%eax
28da(2): and %al,%dl
28dc(6): jz 0x970(%rip)
28e2(5): cmp $0x0,0x7c(%rsp)
28e7(6): jz 0x963(%rip)
28ed(5): cmp $0x0,0xe(%rsp)
28f2(6): jnz 0x9fb(%rip)
28f8(3): test %r13,%r13
28fb(3): setz %al
28fe(6): cmp $0x0,0x50(%rsp)
2904(3): setnz %dl
2907(2): and %dl,%al
2909(6): jz 0xa23(%rip)
290f(5): mov 0x50(%rsp),%r13
2914(7): lea 0x2622(%rip),%rbx
291b(4): mov $0x27,(%r14)
291f(8): mov $0x2,0x8(%rsp)
2927(6): mov $0x1,%r15d
292d(9): mov $0x1,0x18(%rsp)
2936(5): mov $0x0,0xf(%rsp)
293b(5): mov %rbx,0x48(%rsp)
2940(4): mov %al,0x7c(%rsp)
2944(5): jmp 0xfffff8df(%rip)
2949(7): nop 0x0(%rax)
2950(5): cmp $0x0,0xf(%rsp)
2955(6): jnz 0x8ab(%rip)
295b(3): test %r13,%r13
295e(6): jz 0x402(%rip)
2964(2): xor %edx,%edx
2966(6): cmp $0x0,0x50(%rsp)
296c(6): jnz 0x3f4(%rip)
2972(5): mov %r13,0x50(%rsp)
2977(4): add $0x3,%r15
297b(2): xor %eax,%eax
297d(5): mov %r12b,0x7c(%rsp)
2982(3): xor %r8d,%r8d
2985(3): mov %rdx,%r13
2988(5): mov $0x27,%ebx
298d(5): jmp 0xfffffa1c(%rip)
2992(6): nop 0x0(%rax,%rax,1)
2998(5): test $0x4,0x78(%rsp)
299d(2): jz 0x23(%rip)
299f(4): lea 0x2(%rbp),%rcx
29a3(3): cmp %r11,%rcx
29a6(2): jnb 0x1a(%rip)
29a8(5): mov 0x10(%rsp),%rax
29ad(5): cmp $0x3f,0x1(%rax,%rbp,1)
29b2(6): jz 0x790(%rip)
29b8(8): nop 0x0(%rax,%rax,1)
29c0(2): xor %edx,%edx
29c2(3): xor %r12d,%r12d
29c5(2): xor %eax,%eax
29c7(5): mov $0x3f,%ebx
29cc(5): jmp 0xfffff9ac(%rip)
29d1(7): nop 0x0(%rax)
29d8(5): cmp $0x0,0xf(%rsp)
29dd(6): jnz 0x823(%rip)
29e3(3): xor %r12d,%r12d
29e6(2): xor %eax,%eax
29e8(5): mov $0x3f,%ebx
29ed(5): jmp 0xfffff9bc(%rip)
29f2(6): nop 0x0(%rax,%rax,1)
29f8(8): lea 0xa0(%rsp),%rax
2a00(4): cmp $0xffffffff,%r11
2a04(c): mov $0x0,0xa0(%rsp)
2a10(5): mov %rax,0x28(%rsp)
2a15(2): jnz 0x2f(%rip)
2a17(5): mov 0x10(%rsp),%rdi
2a1c(5): mov %r8b,0x40(%rsp)
2a21(5): mov %r10b,0x38(%rsp)
2a26(5): mov %r9,0x30(%rsp)
2a2b(5): call 0xffffe9d5(%rip)
2a30(6): movzx 0x40(%rsp),%r8d
2a36(6): movzx 0x38(%rsp),%r10d
2a3c(3): mov %rax,%r11
2a3f(5): mov 0x30(%rsp),%r9
2a44(8): lea 0x9c(%rsp),%rax
2a4c(2): xor %ecx,%ecx
2a4e(4): mov %bl,0x7e(%rsp)
2a52(5): mov %r8b,0x7d(%rsp)
2a57(3): mov %rcx,%rbx
2a5a(8): mov %r9,0x88(%rsp)
2a62(5): mov %rax,0x38(%rsp)
2a67(5): mov %r10b,0x7f(%rsp)
2a6c(8): mov %r15,0x80(%rsp)
2a74(5): mov %r14,0x40(%rsp)
2a79(5): mov %r13,0x70(%rsp)
2a7e(5): mov %r11,0x30(%rsp)
2a83(5): mov 0x10(%rsp),%rax
2a88(5): lea 0x0(%rbp,%rbx,1),%r14
2a8d(5): mov 0x30(%rsp),%rdx
2a92(5): mov 0x28(%rsp),%rcx
2a97(5): mov 0x38(%rsp),%rdi
2a9c(4): lea 0x0(%rax,%r14,1),%r13
2aa0(3): sub %r14,%rdx
2aa3(3): mov %r13,%rsi
2aa6(5): call 0x1afa(%rip)
2aab(3): test %rax,%rax
2aae(3): mov %rax,%r15
2ab1(2): jz 0x50(%rip)
2ab3(4): cmp $0xffffffff,%rax
2ab7(6): jz 0x61e(%rip)
2abd(4): cmp $0xfffffffe,%rax
2ac1(6): jz 0x5a0(%rip)
2ac7(5): cmp $0x2,0x8(%rsp)
2acc(3): setz %al
2acf(4): and 0xf(%rsp),%al
2ad3(6): jnz 0x19d(%rip)
2ad9(7): mov 0x9c(%rsp),%edi
2ae0(5): call 0xffffeaf0(%rip)
2ae5(5): mov 0x28(%rsp),%rdi
2aea(2): test %eax,%eax
2aec(5): mov $0x0,%eax
2af1(4): cmove %eax,%r12d
2af5(3): add %r15,%rbx
2af8(5): call 0xffffeac8(%rip)
2afd(2): test %eax,%eax
2aff(2): jz 0xffffff84(%rip)
2b01(3): mov %r12d,%edx
2b04(3): mov %rbx,%rdi
2b07(6): movzx 0x7d(%rsp),%r8d
2b0d(3): xor $0x1,%edx
2b10(5): movzx 0x7e(%rsp),%ebx
2b15(6): movzx 0x7f(%rsp),%r10d
2b1b(4): and 0xd(%rsp),%dl
2b1f(8): mov 0x80(%rsp),%r15
2b27(5): mov 0x40(%rsp),%r14
2b2c(5): mov 0x70(%rsp),%r13
2b31(5): mov 0x30(%rsp),%r11
2b36(4): cmp $0x1,%rdi
2b3a(6): jbe 0x601(%rip)
2b40(3): mov %rdi,%rcx
2b43(2): xor %esi,%esi
2b45(6): movzx 0xf(%rsp),%r9d
2b4b(3): add %rbp,%rcx
2b4e(5): mov 0x10(%rsp),%rdi
2b53(5): jmp 0xbb(%rip)
2b58(8): nop 0x0(%rax,%rax,1)
2b60(5): cmp $0x2,0x8(%rsp)
2b65(3): setz %al
2b68(3): test %r9b,%r9b
2b6b(6): jnz 0x4b5(%rip)
2b71(3): mov %r8d,%esi
2b74(3): xor $0x1,%esi
2b77(3): and %sil,%al
2b7a(2): jz 0x31(%rip)
2b7c(3): cmp %r15,%r13
2b7f(2): jbe 0x7(%rip)
2b81(5): mov $0x27,0x0(%r14,%r15,1)
2b86(4): lea 0x1(%r15),%rsi
2b8a(3): cmp %rsi,%r13
2b8d(2): jbe 0x8(%rip)
2b8f(6): mov $0x24,0x1(%r14,%r15,1)
2b95(4): lea 0x2(%r15),%rsi
2b99(3): cmp %rsi,%r13
2b9c(2): jbe 0x8(%rip)
2b9e(6): mov $0x27,0x2(%r14,%r15,1)
2ba4(4): add $0x3,%r15
2ba8(3): mov %eax,%r8d
2bab(3): cmp %r15,%r13
2bae(2): jbe 0x7(%rip)
2bb0(5): mov $0x5c,0x0(%r14,%r15,1)
2bb5(4): lea 0x1(%r15),%rax
2bb9(3): cmp %rax,%r13
2bbc(2): jbe 0xf(%rip)
2bbe(2): mov %ebx,%eax
2bc0(3): shr $0x6,%al
2bc3(3): add $0x30,%eax
2bc6(5): mov %al,0x1(%r14,%r15,1)
2bcb(4): lea 0x2(%r15),%rax
2bcf(3): cmp %rax,%r13
2bd2(2): jbe 0x12(%rip)
2bd4(2): mov %ebx,%eax
2bd6(3): shr $0x3,%al
2bd9(3): and $0x7,%eax
2bdc(3): add $0x30,%eax
2bdf(5): mov %al,0x2(%r14,%r15,1)
2be4(3): and $0x7,%ebx
2be7(4): add $0x1,%rbp
2beb(4): add $0x3,%r15
2bef(3): add $0x30,%ebx
2bf2(3): cmp %rcx,%rbp
2bf5(6): jnb 0xfffff7eb(%rip)
2bfb(2): mov %edx,%esi
2bfd(3): cmp %r15,%r13
2c00(2): jbe 0x6(%rip)
2c02(4): mov %bl,0x0(%r14,%r15,1)
2c06(4): movzx 0x0(%rdi,%rbp,1),%ebx
2c0a(4): add $0x1,%r15
2c0e(2): test %dl,%dl
2c10(6): jnz 0xffffff50(%rip)
2c16(2): mov %esi,%eax
2c18(3): xor $0x1,%eax
2c1b(3): and %r8d,%eax
2c1e(3): test %r10b,%r10b
2c21(2): jz 0x10(%rip)
2c23(3): cmp %r15,%r13
2c26(2): jbe 0x7(%rip)
2c28(5): mov $0x5c,0x0(%r14,%r15,1)
2c2d(4): add $0x1,%r15
2c31(4): add $0x1,%rbp
2c35(3): cmp %rcx,%rbp
2c38(6): jnb 0xfffff784(%rip)
2c3e(2): test %al,%al
2c40(6): jz 0x3fe(%rip)
2c46(3): cmp %r15,%r13
2c49(2): jbe 0x7(%rip)
2c4b(5): mov $0x27,0x0(%r14,%r15,1)
2c50(4): lea 0x1(%r15),%rax
2c54(3): cmp %rax,%r13
2c57(2): jbe 0x8(%rip)
2c59(6): mov $0x27,0x1(%r14,%r15,1)
2c5f(4): add $0x2,%r15
2c63(3): xor %r10d,%r10d
2c66(3): xor %r8d,%r8d
2c69(2): jmp 0xffffff94(%rip)
2c6b(5): nop 0x0(%rax,%rax,1)
2c70(4): cmp $0x1,%r15
2c74(6): jz 0xfffffe65(%rip)
2c7a(5): mov 0x10(%rsp),%rdi
2c7f(4): lea 0x0(%rdi,%r15,1),%rcx
2c83(5): lea 0x1(%rdi,%r14,1),%rdx
2c88(4): lea 0x0(%rcx,%r14,1),%r8
2c8c(2): jmp 0x11(%rip)
2c8e(2): nop 
2c90(4): add $0x1,%rdx
2c94(3): cmp %rdx,%r8
2c97(6): jz 0xfffffe42(%rip)
2c9d(3): movzx (%rdx),%ecx
2ca0(3): sub $0x5b,%ecx
2ca3(3): cmp $0x21,%cl
2ca6(2): jnbe 0xffffffea(%rip)
2ca8(5): mov $0x1,%esi
2cad(3): shl/sal %cl,%rsi
2cb0(3): mov %rsi,%rcx
2cb3(a): mov $0x8589934635,%rsi
2cbd(3): test %rsi,%rcx
2cc0(2): jz 0xffffffd0(%rip)
2cc2(5): mov 0x40(%rsp),%r14
2cc7(5): mov 0x70(%rsp),%r13
2ccc(5): mov 0x30(%rsp),%rbp
2cd1(8): mov $0x2,0x8(%rsp)
2cd9(5): cmp $0x0,0xd(%rsp)
2cde(2): jz 0x12(%rip)
2ce0(2): test %al,%al
2ce2(5): mov $0x4,%eax
2ce7(5): cmove 0x8(%rsp),%eax
2cec(4): mov %eax,0x8(%rsp)
2cf0(4): sub $0x8,%rsp
2cf4(3): mov %rbp,%rcx
2cf7(3): mov %r13,%rsi
2cfa(4): push 0x68(%rsp)
2cfe(4): push 0x78(%rsp)
2d02(3): mov %r14,%rdi
2d05(2): push $0x0
2d07(8): mov 0x98(%rsp),%r9d
2d0f(5): mov 0x28(%rsp),%r8d
2d14(5): mov 0x30(%rsp),%rdx
2d19(4): and $0xfd,%r9d
2d1d(5): call 0xfffff433(%rip)
2d22(4): add $0x20,%rsp
2d26(3): mov %rax,%r15
2d29(8): mov 0xa8(%rsp),%rbx
2d31(9): xor $0x28,%rbx
2d3a(3): mov %r15,%rax
2d3d(6): jnz 0x606(%rip)
2d43(7): add $0xb8,%rsp
2d4a(1): pop %rbx
2d4b(1): pop %rbp
2d4c(2): pop %r12
2d4e(2): pop %r13
2d50(2): pop %r14
2d52(2): pop %r15
2d54(1): ret near (%rsp)
2d55(3): nop (%rax)
2d58(3): mov %r11,%rbp
2d5b(5): jmp 0xffffff7e(%rip)
2d60(3): cmp %r15,%r13
2d63(2): jbe 0x7(%rip)
2d65(5): mov $0x27,0x0(%r14,%r15,1)
2d6a(4): lea 0x1(%r15),%rax
2d6e(3): cmp %rax,%r13
2d71(2): jbe 0x8(%rip)
2d73(6): mov $0x5c,0x1(%r14,%r15,1)
2d79(4): lea 0x2(%r15),%rax
2d7d(3): cmp %rax,%r13
2d80(6): jbe 0x5f2(%rip)
2d86(3): mov %r13,%rdx
2d89(6): mov $0x27,0x2(%r14,%r15,1)
2d8f(5): mov 0x50(%rsp),%r13
2d94(5): jmp 0xfffffbde(%rip)
2d99(3): mov %r12d,%eax
2d9c(5): mov $0x30,%ebx
2da1(3): xor %r12d,%r12d
2da4(5): jmp 0xfffff605(%rip)
2da9(6): mov $0x27,0x2(%r14,%r15,1)
2daf(5): jmp 0xfffff9ca(%rip)
2db4(2): test %ebx,%ebx
2db6(6): jnz 0xfffff42d(%rip)
2dbc(5): mov $0x1,0xd(%rsp)
2dc1(3): test %r13,%r13
2dc4(6): jnz 0x596(%rip)
2dca(7): lea 0x216c(%rip),%rax
2dd1(9): mov $0x0,0x50(%rsp)
2dda(5): mov $0x1,0xe(%rsp)
2ddf(5): mov $0x0,0x7c(%rsp)
2de4(3): xor %r12d,%r12d
2de7(5): mov $0x0,0xf(%rsp)
2dec(9): mov $0x1,0x18(%rsp)
2df5(5): mov %rax,0x48(%rsp)
2dfa(6): mov $0x1,%r15d
2e00(8): mov $0x2,0x8(%rsp)
2e08(5): jmp 0xfffff41b(%rip)
2e0d(3): nop (%rax)
2e10(2): test %ebx,%ebx
2e12(6): jnz 0x3fb(%rip)
2e18(3): test %r13,%r13
2e1b(6): jz 0x22b(%rip)
2e21(4): mov $0x22,(%r14)
2e25(5): mov $0x1,0xe(%rsp)
2e2a(3): xor %r12d,%r12d
2e2d(5): mov $0x0,0x7c(%rsp)
2e32(9): mov $0x0,0x50(%rsp)
2e3b(7): lea 0x20f9(%rip),%rax
2e42(5): mov $0x0,0xf(%rsp)
2e47(5): mov $0x1,0xd(%rsp)
2e4c(9): mov $0x1,0x18(%rsp)
2e55(6): mov $0x1,%r15d
2e5b(5): mov %rax,0x48(%rsp)
2e60(5): jmp 0xfffff3c3(%rip)
2e65(7): lea 0x20cf(%rip),%rax
2e6c(5): mov $0x1,0xe(%rsp)
2e71(5): mov $0x0,0x7c(%rsp)
2e76(3): xor %r12d,%r12d
2e79(9): mov $0x0,0x50(%rsp)
2e82(5): mov $0x1,0xf(%rsp)
2e87(5): mov $0x1,0xd(%rsp)
2e8c(9): mov $0x1,0x18(%rsp)
2e95(3): xor %r15d,%r15d
2e98(5): mov %rax,0x48(%rsp)
2e9d(8): mov $0x5,0x8(%rsp)
2ea5(5): jmp 0xfffff37e(%rip)
2eaa(5): mov $0x1,0xe(%rsp)
2eaf(5): mov $0x0,0x7c(%rsp)
2eb4(3): xor %r12d,%r12d
2eb7(9): mov $0x0,0x50(%rsp)
2ec0(5): mov $0x0,0xf(%rsp)
2ec5(3): xor %r15d,%r15d
2ec8(5): mov $0x1,0xd(%rsp)
2ecd(9): mov $0x0,0x18(%rsp)
2ed6(9): mov $0x0,0x48(%rsp)
2edf(5): jmp 0xfffff344(%rip)
2ee4(5): cmp $0xa,0x8(%rsp)
2ee9(2): jz 0x58(%rip)
2eeb(7): lea 0x204d(%rip),%rsi
2ef2(2): xor %edi,%edi
2ef4(5): mov $0x5,%edx
2ef9(5): call 0xffffe4e7(%rip)
2efe(3): mov %rax,%rcx
2f01(5): mov %rax,0x68(%rsp)
2f06(7): lea 0x2032(%rip),%rax
2f0d(3): cmp %rax,%rcx
2f10(6): jz 0x39e(%rip)
2f16(7): lea 0x2020(%rip),%rsi
2f1d(2): xor %edi,%edi
2f1f(5): mov $0x5,%edx
2f24(5): call 0xffffe4bc(%rip)
2f29(3): mov %rax,%rcx
2f2c(5): mov %rax,0x60(%rsp)
2f31(7): lea 0x2005(%rip),%rax
2f38(3): cmp %rax,%rcx
2f3b(6): jz 0x389(%rip)
2f41(3): xor %r15d,%r15d
2f44(2): test %ebx,%ebx
2f46(6): jz 0x1c7(%rip)
2f4c(2): test %ebx,%ebx
2f4e(5): mov 0x60(%rsp),%rbx
2f53(5): setnz 0xf(%rsp)
2f58(3): xor %r12d,%r12d
2f5b(3): mov %rbx,%rdi
2f5e(5): call 0xffffe4a2(%rip)
2f63(5): mov %rbx,0x48(%rsp)
2f68(5): mov %rax,0x18(%rsp)
2f6d(5): mov $0x1,0xe(%rsp)
2f72(5): mov $0x0,0x7c(%rsp)
2f77(9): mov $0x0,0x50(%rsp)
2f80(5): mov $0x1,0xd(%rsp)
2f85(5): jmp 0xfffff29e(%rip)
2f8a(5): mov $0x1,0xe(%rsp)
2f8f(5): mov $0x0,0x7c(%rsp)
2f94(3): xor %r12d,%r12d
2f97(9): mov $0x0,0x50(%rsp)
2fa0(5): mov $0x0,0xf(%rsp)
2fa5(3): xor %r15d,%r15d
2fa8(5): mov $0x0,0xd(%rsp)
2fad(9): mov $0x0,0x18(%rsp)
2fb6(9): mov $0x0,0x48(%rsp)
2fbf(5): jmp 0xfffff264(%rip)
2fc4(5): mov $0x1,0xe(%rsp)
2fc9(5): mov $0x0,0x7c(%rsp)
2fce(3): xor %r12d,%r12d
2fd1(9): mov $0x0,0x50(%rsp)
2fda(5): mov $0x1,0xf(%rsp)
2fdf(5): mov $0x1,0xd(%rsp)
2fe4(5): jmp 0xfffff21f(%rip)
2fe9(3): cmp %r15,%r13
2fec(2): jbe 0x7(%rip)
2fee(5): mov $0x30,0x0(%r14,%r15,1)
2ff3(4): lea 0x2(%rcx),%rax
2ff7(3): cmp %rax,%r13
2ffa(2): jbe 0x8(%rip)
2ffc(6): mov $0x30,0x2(%r14,%rcx,1)
3002(3): mov %r12d,%eax
3005(4): lea 0x3(%rcx),%r15
3009(3): xor %r12d,%r12d
300c(5): mov $0x30,%ebx
3011(5): jmp 0xfffff367(%rip)
3016(a): nop 0x0(%rax,%rax,1)
3020(5): movzx 0xf(%rsp),%ebx
3025(3): mov %r11,%rbp
3028(4): mov %bl,0xd(%rsp)
302c(5): jmp 0xfffffcad(%rip)
3031(5): movzx 0xd(%rsp),%edx
3036(3): xor %r12d,%r12d
3039(5): jmp 0xfffffb07(%rip)
303e(3): xor %r10d,%r10d
3041(5): jmp 0xfffffbbc(%rip)
3046(9): mov $0x0,0x50(%rsp)
304f(5): mov $0x1,0xe(%rsp)
3054(3): xor %r12d,%r12d
3057(5): mov $0x0,0x7c(%rsp)
305c(5): jmp 0xfffffddf(%rip)
3061(5): mov 0x30(%rsp),%r11
3066(3): mov %r14,%rsi
3069(3): mov %r13,%rcx
306c(3): mov %rbx,%rax
306f(3): mov %rbx,%rdi
3072(6): movzx 0x7d(%rsp),%r8d
3078(5): movzx 0x7e(%rsp),%ebx
307d(8): mov 0x88(%rsp),%r9
3085(3): cmp %r11,%rsi
3088(6): movzx 0x7f(%rsp),%r10d
308e(8): mov 0x80(%rsp),%r15
3096(5): mov 0x40(%rsp),%r14
309b(5): mov 0x70(%rsp),%r13
30a0(2): jnb 0x28(%rip)
30a2(3): cmp $0x0,(%rcx)
30a5(2): jnz 0x12(%rip)
30a7(2): jmp 0x21(%rip)
30a9(7): nop 0x0(%rax)
30b0(5): cmp $0x0,0x0(%r9,%rax,1)
30b5(2): jz 0x10(%rip)
30b7(4): add $0x1,%rax
30bb(5): lea 0x0(%rbp,%rax,1),%rdx
30c0(3): cmp %rdx,%r11
30c3(2): jnbe 0xffffffed(%rip)
30c5(3): mov %rax,%rdi
30c8(5): movzx 0xd(%rsp),%edx
30cd(3): xor %r12d,%r12d
30d0(5): jmp 0xfffffa66(%rip)
30d5(3): mov %rbx,%rdi
30d8(6): movzx 0x7d(%rsp),%r8d
30de(5): movzx 0x7e(%rsp),%ebx
30e3(6): movzx 0x7f(%rsp),%r10d
30e9(8): mov 0x80(%rsp),%r15
30f1(3): xor %r12d,%r12d
30f4(5): mov 0x40(%rsp),%r14
30f9(5): mov 0x70(%rsp),%r13
30fe(5): mov 0x30(%rsp),%r11
3103(5): movzx 0xd(%rsp),%edx
3108(5): jmp 0xfffffa2e(%rip)
310d(5): mov 0x68(%rsp),%rdx
3112(3): movzx (%rdx),%eax
3115(2): test %al,%al
3117(6): jz 0xfffffe35(%rip)
311d(3): nop (%rax)
3120(3): cmp %r15,%r13
3123(2): jbe 0x6(%rip)
3125(4): mov %al,0x0(%r14,%r15,1)
3129(4): add $0x1,%r15
312d(5): movzx 0x0(%rdx,%r15,1),%eax
3132(2): test %al,%al
3134(2): jnz 0xffffffec(%rip)
3136(5): jmp 0xfffffe16(%rip)
313b(2): mov %edx,%eax
313d(5): jmp 0xfffff55a(%rip)
3142(4): movzx 0x0(%rax,%rcx,1),%ebx
3146(3): cmp $0x3e,%bl
3149(6): jnbe 0xfffff877(%rip)
314f(a): mov $0x8070630310989004800,%rax
3159(4): bt %rbx,%rax
315d(6): jnb 0xfffff863(%rip)
3163(5): cmp $0x0,0xf(%rsp)
3168(6): jnz 0x1ea(%rip)
316e(3): cmp %r15,%r13
3171(2): jbe 0x7(%rip)
3173(5): mov $0x3f,0x0(%r14,%r15,1)
3178(4): lea 0x1(%r15),%rax
317c(3): cmp %rax,%r13
317f(2): jbe 0x8(%rip)
3181(6): mov $0x22,0x1(%r14,%r15,1)
3187(4): lea 0x2(%r15),%rax
318b(3): cmp %rax,%r13
318e(2): jbe 0x8(%rip)
3190(6): mov $0x22,0x2(%r14,%r15,1)
3196(4): lea 0x3(%r15),%rax
319a(3): cmp %rax,%r13
319d(2): jbe 0x8(%rip)
319f(6): mov $0x3f,0x3(%r14,%r15,1)
31a5(4): add $0x4,%r15
31a9(2): xor %edx,%edx
31ab(3): xor %r12d,%r12d
31ae(2): xor %eax,%eax
31b0(3): mov %rcx,%rbp
31b3(5): jmp 0xfffff1c5(%rip)
31b8(2): test %ebx,%ebx
31ba(6): jz 0x18e(%rip)
31c0(7): lea 0x1d76(%rip),%rax
31c7(5): mov $0x1,0xe(%rsp)
31cc(5): mov $0x0,0x7c(%rsp)
31d1(3): xor %r12d,%r12d
31d4(9): mov $0x0,0x50(%rsp)
31dd(5): mov $0x1,0xf(%rsp)
31e2(5): mov $0x0,0xd(%rsp)
31e7(9): mov $0x1,0x18(%rsp)
31f0(3): xor %r15d,%r15d
31f3(5): mov %rax,0x48(%rsp)
31f8(5): jmp 0xfffff02b(%rip)
31fd(3): nop (%rax)
3200(3): mov %r11,%rbp
3203(5): movzx 0xf(%rsp),%eax
3208(5): jmp 0xfffffad1(%rip)
320d(7): lea 0x1d27(%rip),%rax
3214(5): mov $0x1,0xe(%rsp)
3219(5): mov $0x0,0x7c(%rsp)
321e(3): xor %r12d,%r12d
3221(9): mov $0x0,0x50(%rsp)
322a(5): mov $0x1,0xf(%rsp)
322f(5): mov $0x1,0xd(%rsp)
3234(9): mov $0x1,0x18(%rsp)
323d(3): xor %r15d,%r15d
3240(5): mov %rax,0x48(%rsp)
3245(5): jmp 0xffffefde(%rip)
324a(2): mov %edx,%eax
324c(5): mov 0x48(%rsp),%rbx
3251(3): test %rbx,%rbx
3254(2): jz 0x2e(%rip)
3256(2): test %al,%al
3258(2): jz 0x2a(%rip)
325a(3): movzx (%rbx),%ecx
325d(3): mov %rbx,%rax
3260(2): test %cl,%cl
3262(2): jz 0x20(%rip)
3264(3): mov %r15,%rdx
3267(3): sub %r15,%rax
326a(3): cmp %rdx,%r13
326d(2): jbe 0x6(%rip)
326f(4): mov %cl,0x0(%r14,%rdx,1)
3273(4): add $0x1,%rdx
3277(4): movzx 0x0(%rax,%rdx,1),%ecx
327b(2): test %cl,%cl
327d(2): jnz 0xffffffed(%rip)
327f(3): mov %rdx,%r15
3282(3): cmp %r15,%r13
3285(6): jbe 0xfffffaa4(%rip)
328b(5): mov $0x0,0x0(%r14,%r15,1)
3290(5): jmp 0xfffffa99(%rip)
3295(5): cmp $0x2,0x8(%rsp)
329a(5): movzx 0xf(%rsp),%ebx
329f(3): mov %r11,%rbp
32a2(3): setz %al
32a5(4): mov %bl,0xd(%rsp)
32a9(5): jmp 0xfffffa30(%rip)
32ae(4): mov 0x8(%rsp),%esi
32b2(3): mov %rcx,%rdi
32b5(5): call 0xffffedab(%rip)
32ba(5): mov %rax,0x68(%rsp)
32bf(5): jmp 0xfffffc57(%rip)
32c4(4): mov 0x8(%rsp),%esi
32c8(3): mov %rcx,%rdi
32cb(5): call 0xffffed95(%rip)
32d0(5): mov %rax,0x60(%rsp)
32d5(5): jmp 0xfffffc6c(%rip)
32da(5): movzx 0xf(%rsp),%ebx
32df(3): mov %r11,%rbp
32e2(2): mov %edx,%eax
32e4(4): mov %bl,0xd(%rsp)
32e8(5): jmp 0xfffff9f1(%rip)
32ed(4): sub $0x8,%rsp
32f1(6): mov $0x5,%r8d
32f7(3): mov %r11,%rcx
32fa(4): push 0x68(%rsp)
32fe(4): push 0x78(%rsp)
3302(3): mov %r14,%rdi
3305(4): push 0x38(%rsp)
3309(8): mov 0x98(%rsp),%r9d
3311(5): mov 0x30(%rsp),%rdx
3316(5): mov 0x70(%rsp),%rsi
331b(5): call 0xffffee35(%rip)
3320(4): add $0x20,%rsp
3324(3): mov %rax,%r15
3327(5): jmp 0xfffffa02(%rip)
332c(5): movzx 0x7c(%rsp),%eax
3331(5): jmp 0xffffff1b(%rip)
3336(8): mov $0x2,0x8(%rsp)
333e(5): jmp 0xfffff99b(%rip)
3343(5): call 0xffffe0cd(%rip)
3348(5): mov $0x0,0xd(%rsp)
334d(5): jmp 0xfffffa74(%rip)
3352(3): mov %r11,%rbp
3355(5): jmp 0xfffff99b(%rip)
335a(5): mov $0x1,0xe(%rsp)
335f(2): xor %eax,%eax
3361(3): xor %r12d,%r12d
3364(9): mov $0x0,0x50(%rsp)
336d(5): jmp 0xfffff5a7(%rip)
3372(3): mov %r13,%rdx
3375(5): mov 0x50(%rsp),%r13
337a(5): jmp 0xfffff5f8(%rip)
337f(5): call 0xffffdfe1(%rip)

"quotearg_n_options" :
3390(2): push %r15
3392(2): push %r14
3394(3): movsxd %edi,%r15
3397(2): push %r13
3399(2): push %r12
339b(3): mov %rdx,%r14
339e(1): push %rbp
339f(1): push %rbx
33a0(3): mov %rcx,%rbp
33a3(4): sub $0x28,%rsp
33a7(5): mov %rsi,0x8(%rsp)
33ac(5): call 0xffffdfc4(%rip)
33b1(3): mov %rax,%r13
33b4(2): mov (%rax),%eax
33b6(3): test %r15d,%r15d
33b9(7): mov 0x203cc0(%rip),%rbx
33c0(4): mov %eax,0x18(%rsp)
33c4(6): js 0x16d(%rip)
33ca(7): cmp %r15d,0x203ca7(%rip)
33d1(2): jnle 0x64(%rip)
33d3(7): cmp $0x7fffffff,%r15d
33da(6): jz 0x15c(%rip)
33e0(4): lea 0x1(%r15),%r12d
33e4(7): lea 0x203ca5(%rip),%rax
33eb(3): movsxd %r12d,%rsi
33ee(4): shl/sal $0x4,%rsi
33f2(3): cmp %rax,%rbx
33f5(6): jz 0x11b(%rip)
33fb(3): mov %rbx,%rdi
33fe(5): call 0xf72(%rip)
3403(3): mov %rax,%rbx
3406(7): mov %rax,0x203c73(%rip)
340d(7): movsxd 0x203c64(%rip),%rdi
3414(3): mov %r12d,%edx
3417(2): xor %esi,%esi
3419(2): sub %edi,%edx
341b(4): shl/sal $0x4,%rdi
341f(3): movsxd %edx,%rdx
3422(3): add %rbx,%rdi
3425(4): shl/sal $0x4,%rdx
3429(5): call 0xffffe057(%rip)
342e(7): mov %r12d,0x203c43(%rip)
3435(3): mov 0x4(%rbp),%eax
3438(4): shl/sal $0x4,%r15
343c(4): sub $0x8,%rsp
3440(3): add %r15,%rbx
3443(4): lea 0x8(%rbp),%r15
3447(4): mov 0x0(%rbp),%r8d
344b(3): mov (%rbx),%r11
344e(4): mov 0x8(%rbx),%r12
3452(3): mov %r14,%rcx
3455(3): or $0x1,%eax
3458(4): mov %eax,0x24(%rsp)
345c(3): push 0x30(%rbp)
345f(3): mov %eax,%r9d
3462(3): push 0x28(%rbp)
3465(2): push %r15
3467(3): mov %r11,%rsi
346a(5): mov 0x28(%rsp),%rdx
346f(3): mov %r12,%rdi
3472(5): mov %r11,0x30(%rsp)
3477(5): call 0xffffecd9(%rip)
347c(4): add $0x20,%rsp
3480(5): mov 0x10(%rsp),%r11
3485(3): cmp %rax,%r11
3488(2): jnbe 0x69(%rip)
348a(4): lea 0x1(%rax),%rsi
348e(7): lea 0x203c6b(%rip),%rax
3495(3): cmp %rax,%r12
3498(3): mov %rsi,(%rbx)
349b(2): jz 0x14(%rip)
349d(3): mov %r12,%rdi
34a0(5): mov %rsi,0x10(%rsp)
34a5(5): call 0xffffdeab(%rip)
34aa(5): mov 0x10(%rsp),%rsi
34af(3): mov %rsi,%rdi
34b2(5): mov %rsi,0x10(%rsp)
34b7(5): call 0xe59(%rip)
34bc(4): sub $0x8,%rsp
34c0(4): mov %rax,0x8(%rbx)
34c4(4): mov 0x0(%rbp),%r8d
34c8(3): push 0x30(%rbp)
34cb(3): push 0x28(%rbp)
34ce(3): mov %r14,%rcx
34d1(2): push %r15
34d3(5): mov 0x3c(%rsp),%r9d
34d8(3): mov %rax,%rdi
34db(5): mov 0x28(%rsp),%rdx
34e0(5): mov 0x30(%rsp),%rsi
34e5(3): mov %rax,%r12
34e8(5): call 0xffffec68(%rip)
34ed(4): add $0x20,%rsp
34f1(4): mov 0x18(%rsp),%eax
34f5(4): mov %eax,0x0(%r13)
34f9(4): add $0x28,%rsp
34fd(3): mov %r12,%rax
3500(1): pop %rbx
3501(1): pop %rbp
3502(2): pop %r12
3504(2): pop %r13
3506(2): pop %r14
3508(2): pop %r15
350a(1): ret near (%rsp)
350b(5): nop 0x0(%rax,%rax,1)
3510(2): xor %edi,%edi
3512(5): call 0xe5e(%rip)
3517(8): movdqa 0x203b71(%rip),%xmm0
351f(3): mov %rax,%rbx
3522(7): mov %rax,0x203b57(%rip)
3529(3): movups %xmm0,(%rax)
352c(5): jmp 0xfffffee1(%rip)
3531(5): call 0xffffde2f(%rip)
3536(5): call 0x102a(%rip)

"clone_quoting_options" :
3540(2): push %r12
3542(1): push %rbp
3543(1): push %rbx
3544(3): mov %rdi,%rbx
3547(5): call 0xffffde29(%rip)
354c(3): mov (%rax),%r12d
354f(3): mov %rax,%rbp
3552(7): lea 0x203ca7(%rip),%rax
3559(3): test %rbx,%rbx
355c(5): mov $0x38,%esi
3561(4): cmove %rax,%rbx
3565(3): mov %rbx,%rdi
3568(5): call 0xfa8(%rip)
356d(4): mov %r12d,0x0(%rbp)
3571(1): pop %rbx
3572(1): pop %rbp
3573(2): pop %r12
3575(1): ret near (%rsp)

"get_quoting_style" :
3580(7): lea 0x203c79(%rip),%rax
3587(3): test %rdi,%rdi
358a(4): cmove %rax,%rdi
358e(2): mov (%rdi),%eax
3590(1): ret near (%rsp)

"set_quoting_style" :
35a0(7): lea 0x203c59(%rip),%rax
35a7(3): test %rdi,%rdi
35aa(4): cmove %rax,%rdi
35ae(2): mov %esi,(%rdi)
35b0(1): ret near (%rsp)

"set_char_quoting" :
35c0(7): lea 0x203c39(%rip),%rax
35c7(3): test %rdi,%rdi
35ca(2): mov %esi,%ecx
35cc(4): cmove %rax,%rdi
35d0(2): mov %esi,%eax
35d2(3): and $0x1f,%ecx
35d5(3): shr $0x5,%al
35d8(3): movzx %al,%eax
35db(5): lea 0x8(%rdi,%rax,4),%rdi
35e0(2): mov (%rdi),%esi
35e2(2): mov %esi,%eax
35e4(2): shr %cl,%eax
35e6(2): xor %eax,%edx
35e8(3): and $0x1,%eax
35eb(3): and $0x1,%edx
35ee(2): shl/sal %cl,%edx
35f0(2): xor %esi,%edx
35f2(2): mov %edx,(%rdi)
35f4(1): ret near (%rsp)

"set_quoting_flags" :
3600(7): lea 0x203bf9(%rip),%rax
3607(3): test %rdi,%rdi
360a(4): cmove %rax,%rdi
360e(3): mov 0x4(%rdi),%eax
3611(3): mov %esi,0x4(%rdi)
3614(1): ret near (%rsp)

"set_custom_quoting" :
3620(7): lea 0x203bd9(%rip),%rax
3627(3): test %rdi,%rdi
362a(4): cmove %rax,%rdi
362e(3): test %rsi,%rsi
3631(6): mov $0xa,(%rdi)
3637(2): jz 0x10(%rip)
3639(3): test %rdx,%rdx
363c(2): jz 0xb(%rip)
363e(4): mov %rsi,0x28(%rdi)
3642(4): mov %rdx,0x30(%rdi)
3646(1): ret near (%rsp)
3647(4): sub $0x8,%rsp
364b(5): call 0xffffdd15(%rip)

"quotearg_buffer" :
3650(2): push %r15
3652(2): push %r14
3654(7): lea 0x203ba5(%rip),%rax
365b(2): push %r13
365d(2): push %r12
365f(3): mov %rdi,%r13
3662(1): push %rbp
3663(1): push %rbx
3664(3): mov %r8,%rbx
3667(3): mov %rsi,%r14
366a(3): mov %rdx,%r15
366d(4): sub $0x18,%rsp
3671(3): test %r8,%r8
3674(4): cmove %rax,%rbx
3678(5): mov %rcx,0x8(%rsp)
367d(5): call 0xffffdcf3(%rip)
3682(3): mov (%rax),%r12d
3685(3): mov %rax,%rbp
3688(4): lea 0x8(%rbx),%rax
368c(4): sub $0x8,%rsp
3690(4): mov 0x4(%rbx),%r9d
3694(3): push 0x30(%rbx)
3697(3): mov (%rbx),%r8d
369a(3): push 0x28(%rbx)
369d(3): mov %r15,%rdx
36a0(1): push %rax
36a1(5): mov 0x28(%rsp),%rcx
36a6(3): mov %r14,%rsi
36a9(3): mov %r13,%rdi
36ac(5): call 0xffffeaa4(%rip)
36b1(4): mov %r12d,0x0(%rbp)
36b5(4): add $0x38,%rsp
36b9(1): pop %rbx
36ba(1): pop %rbp
36bb(2): pop %r12
36bd(2): pop %r13
36bf(2): pop %r14
36c1(2): pop %r15
36c3(1): ret near (%rsp)

"quotearg_alloc_mem" :
36d0(2): push %r15
36d2(2): push %r14
36d4(7): lea 0x203b25(%rip),%rax
36db(2): push %r13
36dd(2): push %r12
36df(3): mov %rdx,%r12
36e2(1): push %rbp
36e3(1): push %rbx
36e4(3): mov %rcx,%rbx
36e7(3): mov %rdi,%r14
36ea(3): mov %rsi,%r15
36ed(4): sub $0x38,%rsp
36f1(3): test %rcx,%rcx
36f4(4): cmove %rax,%rbx
36f8(2): xor %ebp,%ebp
36fa(5): call 0xffffdc76(%rip)
36ff(3): test %r12,%r12
3702(3): mov %rax,%r13
3705(2): mov (%rax),%eax
3707(4): setz %bpl
370b(3): or 0x4(%rbx),%ebp
370e(4): lea 0x8(%rbx),%r10
3712(4): sub $0x8,%rsp
3716(3): mov (%rbx),%r8d
3719(3): mov %r15,%rcx
371c(4): mov %eax,0x14(%rsp)
3720(3): push 0x30(%rbx)
3723(3): mov %r14,%rdx
3726(3): push 0x28(%rbx)
3729(2): push %r10
372b(2): xor %esi,%esi
372d(3): mov %ebp,%r9d
3730(2): xor %edi,%edi
3732(5): mov %r10,0x40(%rsp)
3737(5): call 0xffffea19(%rip)
373c(4): lea 0x1(%rax),%rsi
3740(5): mov %rax,0x48(%rsp)
3745(4): add $0x20,%rsp
3749(3): mov %rsi,%rdi
374c(5): mov %rsi,0x18(%rsp)
3751(5): call 0xbbf(%rip)
3756(5): mov %rax,0x10(%rsp)
375b(4): sub $0x8,%rsp
375f(3): push 0x30(%rbx)
3762(3): push 0x28(%rbx)
3765(5): mov 0x38(%rsp),%r10
376a(3): mov %ebp,%r9d
376d(3): mov (%rbx),%r8d
3770(3): mov %r15,%rcx
3773(3): mov %r14,%rdx
3776(3): mov %rax,%rdi
3779(2): push %r10
377b(5): mov 0x38(%rsp),%rsi
3780(5): call 0xffffe9d0(%rip)
3785(4): mov 0x2c(%rsp),%eax
3789(4): add $0x20,%rsp
378d(3): test %r12,%r12
3790(4): mov %eax,0x0(%r13)
3794(2): jz 0xb(%rip)
3796(5): mov 0x28(%rsp),%r11
379b(4): mov %r11,(%r12)
379f(5): mov 0x10(%rsp),%rax
37a4(4): add $0x38,%rsp
37a8(1): pop %rbx
37a9(1): pop %rbp
37aa(2): pop %r12
37ac(2): pop %r13
37ae(2): pop %r14
37b0(2): pop %r15
37b2(1): ret near (%rsp)

"quotearg_alloc" :
37c0(3): mov %rdx,%rcx
37c3(2): xor %edx,%edx
37c5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
37d0(6): mov 0x2038a2(%rip),%eax
37d6(2): push %r12
37d8(7): mov 0x2038a1(%rip),%r12
37df(1): push %rbp
37e0(1): push %rbx
37e1(3): cmp $0x1,%eax
37e4(2): jle 0x2d(%rip)
37e6(3): sub $0x2,%eax
37e9(5): lea 0x18(%r12),%rbx
37ee(4): shl/sal $0x4,%rax
37f2(5): lea 0x28(%r12,%rax,1),%rbp
37f7(9): nop 0x0(%rax,%rax,1)
3800(3): mov (%rbx),%rdi
3803(4): add $0x10,%rbx
3807(5): call 0xffffdb49(%rip)
380c(3): cmp %rbp,%rbx
380f(2): jnz 0xfffffff1(%rip)
3811(5): mov 0x8(%r12),%rdi
3816(7): lea 0x2038e3(%rip),%rbx
381d(3): cmp %rbx,%rdi
3820(2): jz 0x19(%rip)
3822(5): call 0xffffdb2e(%rip)
3827(b): mov $0x100,0x20385e(%rip)
3832(7): mov %rbx,0x20385f(%rip)
3839(7): lea 0x203850(%rip),%rbx
3840(3): cmp %rbx,%r12
3843(2): jz 0x11(%rip)
3845(3): mov %r12,%rdi
3848(5): call 0xffffdb08(%rip)
384d(7): mov %rbx,0x20382c(%rip)
3854(1): pop %rbx
3855(a): mov $0x1,0x203819(%rip)
385f(1): pop %rbp
3860(2): pop %r12
3862(1): ret near (%rsp)

"quotearg_n" :
3870(7): lea 0x203989(%rip),%rcx
3877(7): mov $0xffffffff,%rdx
387e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3890(7): lea 0x203969(%rip),%rcx
3897(5): jmp 0xfffffaf9(%rip)

"quotearg" :
38a0(7): lea 0x203959(%rip),%rcx
38a7(3): mov %rdi,%rsi
38aa(7): mov $0xffffffff,%rdx
38b1(2): xor %edi,%edi
38b3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
38c0(7): lea 0x203939(%rip),%rcx
38c7(3): mov %rsi,%rdx
38ca(3): mov %rdi,%rsi
38cd(2): xor %edi,%edi
38cf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
38e0(4): sub $0x48,%rsp
38e4(3): mov %rdx,%rax
38e7(9): mov $0x28,%rdx
38f0(5): mov %rdx,0x38(%rsp)
38f5(2): xor %edx,%edx
38f7(3): cmp $0xa,%esi
38fa(2): jz 0x6a(%rip)
38fc(3): mov %esi,(%rsp)
38ff(3): mov %rsp,%rcx
3902(7): mov $0xffffffff,%rdx
3909(3): mov %rax,%rsi
390c(9): mov $0x0,0x4(%rsp)
3915(9): mov $0x0,0xc(%rsp)
391e(9): mov $0x0,0x14(%rsp)
3927(9): mov $0x0,0x1c(%rsp)
3930(9): mov $0x0,0x24(%rsp)
3939(9): mov $0x0,0x2c(%rsp)
3942(8): mov $0x0,0x34(%rsp)
394a(5): call 0xfffffa46(%rip)
394f(5): mov 0x38(%rsp),%rcx
3954(9): xor $0x28,%rcx
395d(2): jnz 0xc(%rip)
395f(4): add $0x48,%rsp
3963(1): ret near (%rsp)
3964(5): call 0xffffd9fc(%rip)
3969(5): call 0xffffdaa7(%rip)

"quotearg_n_style_mem" :
3970(4): sub $0x48,%rsp
3974(3): mov %rdx,%rax
3977(3): mov %rcx,%rdx
397a(9): mov $0x28,%rcx
3983(5): mov %rcx,0x38(%rsp)
3988(2): xor %ecx,%ecx
398a(3): cmp $0xa,%esi
398d(2): jz 0x63(%rip)
398f(3): mov %esi,(%rsp)
3992(3): mov %rsp,%rcx
3995(3): mov %rax,%rsi
3998(9): mov $0x0,0x4(%rsp)
39a1(9): mov $0x0,0xc(%rsp)
39aa(9): mov $0x0,0x14(%rsp)
39b3(9): mov $0x0,0x1c(%rsp)
39bc(9): mov $0x0,0x24(%rsp)
39c5(9): mov $0x0,0x2c(%rsp)
39ce(8): mov $0x0,0x34(%rsp)
39d6(5): call 0xfffff9ba(%rip)
39db(5): mov 0x38(%rsp),%rdx
39e0(9): xor $0x28,%rdx
39e9(2): jnz 0xc(%rip)
39eb(4): add $0x48,%rsp
39ef(1): ret near (%rsp)
39f0(5): call 0xffffd970(%rip)
39f5(5): call 0xffffda1b(%rip)

"quotearg_style" :
3a00(3): mov %rsi,%rdx
3a03(2): mov %edi,%esi
3a05(2): xor %edi,%edi
3a07(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3a10(3): mov %rdx,%rcx
3a13(3): mov %rsi,%rdx
3a16(2): mov %edi,%esi
3a18(2): xor %edi,%edi
3a1a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3a20(4): sub $0x48,%rsp
3a24(2): mov %edx,%ecx
3a26(9): mov $0x28,%rax
3a2f(5): mov %rax,0x38(%rsp)
3a34(2): xor %eax,%eax
3a36(7): mov 0x2037f3(%rip),%rax
3a3d(3): mov %rsp,%r8
3a40(3): and $0x1f,%ecx
3a43(8): movdqa 0x2037b5(%rip),%xmm0
3a4b(5): mov %rax,0x30(%rsp)
3a50(2): mov %edx,%eax
3a52(4): movaps %xmm0,(%rsp)
3a56(3): shr $0x5,%al
3a59(3): movzx %al,%eax
3a5c(5): lea 0x8(%r8,%rax,4),%r9
3a61(8): movdqa 0x2037a7(%rip),%xmm0
3a69(5): movaps %xmm0,0x10(%rsp)
3a6e(8): movdqa 0x2037aa(%rip),%xmm0
3a76(5): movaps %xmm0,0x20(%rsp)
3a7b(3): mov (%r9),%edx
3a7e(2): mov %edx,%eax
3a80(2): shr %cl,%eax
3a82(2): not %eax
3a84(3): and $0x1,%eax
3a87(2): shl/sal %cl,%eax
3a89(3): mov %r8,%rcx
3a8c(2): xor %edx,%eax
3a8e(3): mov %rsi,%rdx
3a91(3): mov %rdi,%rsi
3a94(3): mov %eax,(%r9)
3a97(2): xor %edi,%edi
3a99(5): call 0xfffff8f7(%rip)
3a9e(5): mov 0x38(%rsp),%rsi
3aa3(9): xor $0x28,%rsi
3aac(2): jnz 0x7(%rip)
3aae(4): add $0x48,%rsp
3ab2(1): ret near (%rsp)
3ab3(5): call 0xffffd95d(%rip)

"quotearg_char" :
3ac0(4): movsx %sil,%edx
3ac4(7): mov $0xffffffff,%rsi
3acb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3ad0(5): mov $0x3a,%edx
3ad5(7): mov $0xffffffff,%rsi
3adc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3af0(5): mov $0x3a,%edx
3af5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3b00(4): sub $0x48,%rsp
3b04(3): mov %rdx,%rax
3b07(9): mov $0x28,%rdx
3b10(5): mov %rdx,0x38(%rsp)
3b15(2): xor %edx,%edx
3b17(3): cmp $0xa,%esi
3b1a(2): jz 0x6a(%rip)
3b1c(3): mov %esi,(%rsp)
3b1f(3): mov %rsp,%rcx
3b22(7): mov $0xffffffff,%rdx
3b29(3): mov %rax,%rsi
3b2c(9): mov $0x0,0x4(%rsp)
3b35(9): mov $0x4000000,0xc(%rsp)
3b3e(9): mov $0x0,0x14(%rsp)
3b47(9): mov $0x0,0x1c(%rsp)
3b50(9): mov $0x0,0x24(%rsp)
3b59(9): mov $0x0,0x2c(%rsp)
3b62(8): mov $0x0,0x34(%rsp)
3b6a(5): call 0xfffff826(%rip)
3b6f(5): mov 0x38(%rsp),%rcx
3b74(9): xor $0x28,%rcx
3b7d(2): jnz 0xc(%rip)
3b7f(4): add $0x48,%rsp
3b83(1): ret near (%rsp)
3b84(5): call 0xffffd7dc(%rip)
3b89(5): call 0xffffd887(%rip)

"quotearg_n_custom_mem" :
3b90(4): sub $0x48,%rsp
3b94(3): mov %rcx,%r9
3b97(7): mov 0x203692(%rip),%rcx
3b9e(8): movdqa 0x20365a(%rip),%xmm0
3ba6(9): mov $0x28,%rax
3baf(5): mov %rax,0x38(%rsp)
3bb4(2): xor %eax,%eax
3bb6(4): movaps %xmm0,(%rsp)
3bba(3): test %rsi,%rsi
3bbd(5): mov %rcx,0x30(%rsp)
3bc2(7): mov $0xa,(%rsp)
3bc9(8): movdqa 0x20363f(%rip),%xmm0
3bd1(5): movaps %xmm0,0x10(%rsp)
3bd6(8): movdqa 0x203642(%rip),%xmm0
3bde(5): movaps %xmm0,0x20(%rsp)
3be3(2): jz 0x34(%rip)
3be5(3): test %rdx,%rdx
3be8(2): jz 0x2f(%rip)
3bea(5): mov %rsi,0x28(%rsp)
3bef(5): mov %rdx,0x30(%rsp)
3bf4(3): mov %rsp,%rcx
3bf7(3): mov %r8,%rdx
3bfa(3): mov %r9,%rsi
3bfd(5): call 0xfffff793(%rip)
3c02(5): mov 0x38(%rsp),%rdi
3c07(9): xor $0x28,%rdi
3c10(2): jnz 0xc(%rip)
3c12(4): add $0x48,%rsp
3c16(1): ret near (%rsp)
3c17(5): call 0xffffd749(%rip)
3c1c(5): call 0xffffd7f4(%rip)

"quotearg_n_custom" :
3c30(7): mov $0xffffffff,%r8
3c37(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3c40(3): mov %rdx,%rcx
3c43(7): mov $0xffffffff,%r8
3c4a(3): mov %rsi,%rdx
3c4d(3): mov %rdi,%rsi
3c50(2): xor %edi,%edi
3c52(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3c60(3): mov %rcx,%r8
3c63(3): mov %rdx,%rcx
3c66(3): mov %rsi,%rdx
3c69(3): mov %rdi,%rsi
3c6c(2): xor %edi,%edi
3c6e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3c80(7): lea 0x2033b9(%rip),%rcx
3c87(5): jmp 0xfffff709(%rip)

"quote_mem" :
3c90(7): lea 0x2033a9(%rip),%rcx
3c97(3): mov %rsi,%rdx
3c9a(3): mov %rdi,%rsi
3c9d(2): xor %edi,%edi
3c9f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3cb0(7): lea 0x203389(%rip),%rcx
3cb7(7): mov $0xffffffff,%rdx
3cbe(5): jmp 0xfffff6d2(%rip)

"quote" :
3cd0(7): lea 0x203369(%rip),%rcx
3cd7(3): mov %rdi,%rsi
3cda(7): mov $0xffffffff,%rdx
3ce1(2): xor %edi,%edi
3ce3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3cf0(2): push %r15
3cf2(2): push %r14
3cf4(2): push %r13
3cf6(2): push %r12
3cf8(3): mov %r9,%r12
3cfb(1): push %rbp
3cfc(1): push %rbx
3cfd(3): mov %rdi,%rbp
3d00(3): mov %r8,%rbx
3d03(4): sub $0x28,%rsp
3d07(3): test %rsi,%rsi
3d0a(6): jz 0x11e(%rip)
3d10(3): mov %rdx,%r8
3d13(7): lea 0x16ee(%rip),%rdx
3d1a(3): mov %rcx,%r9
3d1d(2): xor %eax,%eax
3d1f(3): mov %rsi,%rcx
3d22(5): mov $0x1,%esi
3d27(5): call 0xffffd889(%rip)
3d2c(7): lea 0x16e8(%rip),%rsi
3d33(2): xor %edi,%edi
3d35(5): mov $0x5,%edx
3d3a(5): call 0xffffd6a6(%rip)
3d3f(7): lea 0x19fa(%rip),%rdx
3d46(3): mov %rax,%rcx
3d49(6): mov $0x7e3,%r8d
3d4f(5): mov $0x1,%esi
3d54(3): mov %rbp,%rdi
3d57(2): xor %eax,%eax
3d59(5): call 0xffffd857(%rip)
3d5e(7): lea 0x1743(%rip),%rsi
3d65(2): xor %edi,%edi
3d67(5): mov $0x5,%edx
3d6c(5): call 0xffffd674(%rip)
3d71(3): mov %rbp,%rsi
3d74(3): mov %rax,%rdi
3d77(5): call 0xffffd729(%rip)
3d7c(4): cmp $0x9,%r12
3d80(6): jnbe 0x340(%rip)
3d86(7): lea 0x197b(%rip),%rdx
3d8d(4): movsxd 0x0(%rdx,%r12,4),%rax
3d91(3): add %rdx,%rax
3d94(2): jmp %rax
3d96(a): nop 0x0(%rax,%rax,1)
3da0(4): mov 0x38(%rbx),%r9
3da4(4): mov 0x10(%rbx),%rax
3da8(7): lea 0x1869(%rip),%rsi
3daf(4): mov 0x8(%rbx),%r8
3db3(5): mov $0x5,%edx
3db8(2): xor %edi,%edi
3dba(4): mov 0x30(%rbx),%r13
3dbe(4): mov 0x28(%rbx),%r12
3dc2(5): mov %r9,0x10(%rsp)
3dc7(4): mov 0x20(%rbx),%r15
3dcb(4): mov 0x18(%rbx),%r14
3dcf(4): mov %rax,(%rsp)
3dd3(5): mov %r8,0x8(%rsp)
3dd8(3): mov (%rbx),%rbx
3ddb(5): call 0xffffd605(%rip)
3de0(4): sub $0x8,%rsp
3de4(5): mov 0x18(%rsp),%r9
3de9(3): mov %rax,%rdx
3dec(3): mov %rbx,%rcx
3def(5): mov $0x1,%esi
3df4(3): mov %rbp,%rdi
3df7(2): xor %eax,%eax
3df9(2): push %r9
3dfb(2): push %r13
3dfd(2): push %r12
3dff(2): push %r15
3e01(2): push %r14
3e03(5): mov 0x30(%rsp),%r9
3e08(5): mov 0x38(%rsp),%r8
3e0d(5): call 0xffffd7a3(%rip)
3e12(4): add $0x30,%rsp
3e16(4): add $0x28,%rsp
3e1a(1): pop %rbx
3e1b(1): pop %rbp
3e1c(2): pop %r12
3e1e(2): pop %r13
3e20(2): pop %r14
3e22(2): pop %r15
3e24(1): ret near (%rsp)
3e25(3): nop (%rax)
3e28(3): mov %rcx,%r8
3e2b(3): mov %rdx,%rcx
3e2e(7): lea 0x15df(%rip),%rdx
3e35(5): mov $0x1,%esi
3e3a(2): xor %eax,%eax
3e3c(5): call 0xffffd774(%rip)
3e41(5): jmp 0xfffffeeb(%rip)
3e46(a): nop 0x0(%rax,%rax,1)
3e50(4): mov 0x40(%rbx),%r10
3e54(4): mov 0x38(%rbx),%r9
3e58(7): lea 0x17e9(%rip),%rsi
3e5f(4): mov 0x10(%rbx),%rax
3e63(4): mov 0x8(%rbx),%r8
3e67(5): mov $0x5,%edx
3e6c(4): mov 0x30(%rbx),%r13
3e70(4): mov 0x28(%rbx),%r12
3e74(4): mov 0x20(%rbx),%r15
3e78(4): mov 0x18(%rbx),%r14
3e7c(3): mov (%rbx),%rbx
3e7f(5): mov %r10,0x18(%rsp)
3e84(5): mov %r9,0x10(%rsp)
3e89(4): mov %rax,(%rsp)
3e8d(5): mov %r8,0x8(%rsp)
3e92(2): xor %edi,%edi
3e94(5): call 0xffffd54c(%rip)
3e99(5): mov 0x18(%rsp),%r10
3e9e(2): push %r10
3ea0(5): jmp 0xffffff44(%rip)
3ea5(3): nop (%rax)
3ea8(3): mov (%rbx),%rbx
3eab(7): lea 0x156d(%rip),%rsi
3eb2(5): mov $0x5,%edx
3eb7(2): xor %edi,%edi
3eb9(5): call 0xffffd527(%rip)
3ebe(4): add $0x28,%rsp
3ec2(3): mov %rbx,%rcx
3ec5(3): mov %rbp,%rdi
3ec8(1): pop %rbx
3ec9(1): pop %rbp
3eca(2): pop %r12
3ecc(2): pop %r13
3ece(2): pop %r14
3ed0(2): pop %r15
3ed2(3): mov %rax,%rdx
3ed5(5): mov $0x1,%esi
3eda(2): xor %eax,%eax
3edc(5): jmp 0xffffd6d4(%rip)
3ee1(7): nop 0x0(%rax)
3ee8(4): mov 0x8(%rbx),%r12
3eec(7): lea 0x153c(%rip),%rsi
3ef3(3): mov (%rbx),%rbx
3ef6(5): mov $0x5,%edx
3efb(2): xor %edi,%edi
3efd(5): call 0xffffd4e3(%rip)
3f02(4): add $0x28,%rsp
3f06(3): mov %r12,%r8
3f09(3): mov %rbx,%rcx
3f0c(3): mov %rbp,%rdi
3f0f(3): mov %rax,%rdx
3f12(5): mov $0x1,%esi
3f17(1): pop %rbx
3f18(1): pop %rbp
3f19(2): pop %r12
3f1b(2): pop %r13
3f1d(2): pop %r14
3f1f(2): pop %r15
3f21(2): xor %eax,%eax
3f23(5): jmp 0xffffd68d(%rip)
3f28(8): nop 0x0(%rax,%rax,1)
3f30(4): mov 0x10(%rbx),%r13
3f34(4): mov 0x8(%rbx),%r12
3f38(7): lea 0x1507(%rip),%rsi
3f3f(3): mov (%rbx),%rbx
3f42(5): mov $0x5,%edx
3f47(2): xor %edi,%edi
3f49(5): call 0xffffd497(%rip)
3f4e(4): add $0x28,%rsp
3f52(3): mov %r13,%r9
3f55(3): mov %r12,%r8
3f58(3): mov %rbx,%rcx
3f5b(3): mov %rbp,%rdi
3f5e(3): mov %rax,%rdx
3f61(1): pop %rbx
3f62(1): pop %rbp
3f63(2): pop %r12
3f65(2): pop %r13
3f67(2): pop %r14
3f69(2): pop %r15
3f6b(5): mov $0x1,%esi
3f70(2): xor %eax,%eax
3f72(5): jmp 0xffffd63e(%rip)
3f77(9): nop 0x0(%rax,%rax,1)
3f80(7): lea 0x15f1(%rip),%rsi
3f87(5): mov $0x5,%edx
3f8c(2): xor %edi,%edi
3f8e(4): mov 0x18(%rbx),%r14
3f92(4): mov 0x10(%rbx),%r13
3f96(4): mov 0x8(%rbx),%r12
3f9a(3): mov (%rbx),%rbx
3f9d(5): call 0xffffd443(%rip)
3fa2(4): sub $0x8,%rsp
3fa6(2): push %r14
3fa8(3): mov %rax,%rdx
3fab(3): mov %r13,%r9
3fae(3): mov %r12,%r8
3fb1(3): mov %rbx,%rcx
3fb4(3): mov %rbp,%rdi
3fb7(5): mov $0x1,%esi
3fbc(2): xor %eax,%eax
3fbe(5): call 0xffffd5f2(%rip)
3fc3(1): pop %rax
3fc4(1): pop %rdx
3fc5(4): add $0x28,%rsp
3fc9(1): pop %rbx
3fca(1): pop %rbp
3fcb(2): pop %r12
3fcd(2): pop %r13
3fcf(2): pop %r14
3fd1(2): pop %r15
3fd3(1): ret near (%rsp)
3fd4(4): nop 0x0(%rax)
3fd8(4): mov 0x20(%rbx),%r15
3fdc(7): lea 0x15b5(%rip),%rsi
3fe3(5): mov $0x5,%edx
3fe8(2): xor %edi,%edi
3fea(4): mov 0x18(%rbx),%r14
3fee(4): mov 0x10(%rbx),%r13
3ff2(4): mov 0x8(%rbx),%r12
3ff6(3): mov (%rbx),%rbx
3ff9(5): call 0xffffd3e7(%rip)
3ffe(2): push %r15
4000(2): jmp 0xffffffa6(%rip)
4002(6): nop 0x0(%rax,%rax,1)
4008(4): mov 0x8(%rbx),%r8
400c(4): mov 0x28(%rbx),%r12
4010(7): lea 0x15a9(%rip),%rsi
4017(4): mov 0x20(%rbx),%r15
401b(4): mov 0x18(%rbx),%r14
401f(5): mov $0x5,%edx
4024(4): mov 0x10(%rbx),%r13
4028(2): xor %edi,%edi
402a(3): mov (%rbx),%rbx
402d(4): mov %r8,(%rsp)
4031(5): call 0xffffd3af(%rip)
4036(4): sub $0x8,%rsp
403a(3): mov %r13,%r9
403d(2): push %r12
403f(2): push %r15
4041(2): push %r14
4043(5): mov 0x20(%rsp),%r8
4048(3): mov %rbx,%rcx
404b(3): mov %rax,%rdx
404e(3): mov %rbp,%rdi
4051(5): mov $0x1,%esi
4056(2): xor %eax,%eax
4058(5): call 0xffffd558(%rip)
405d(4): add $0x20,%rsp
4061(4): add $0x28,%rsp
4065(1): pop %rbx
4066(1): pop %rbp
4067(2): pop %r12
4069(2): pop %r13
406b(2): pop %r14
406d(2): pop %r15
406f(1): ret near (%rsp)
4070(4): mov 0x10(%rbx),%r9
4074(4): mov 0x30(%rbx),%r13
4078(7): lea 0x1569(%rip),%rsi
407f(4): mov 0x28(%rbx),%r12
4083(4): mov 0x20(%rbx),%r15
4087(5): mov $0x5,%edx
408c(4): mov 0x18(%rbx),%r14
4090(4): mov 0x8(%rbx),%r8
4094(2): xor %edi,%edi
4096(5): mov %r9,0x8(%rsp)
409b(3): mov (%rbx),%rbx
409e(4): mov %r8,(%rsp)
40a2(5): call 0xffffd33e(%rip)
40a7(2): push %r13
40a9(2): push %r12
40ab(2): push %r15
40ad(2): push %r14
40af(5): mov 0x28(%rsp),%r9
40b4(2): jmp 0xffffff8f(%rip)
40b6(a): nop 0x0(%rax,%rax,1)
40c0(4): mov 0x40(%rbx),%r10
40c4(4): mov 0x38(%rbx),%r9
40c8(5): mov $0x5,%edx
40cd(4): mov 0x10(%rbx),%rax
40d1(4): mov 0x8(%rbx),%r8
40d5(7): lea 0x15a4(%rip),%rsi
40dc(4): mov 0x30(%rbx),%r13
40e0(4): mov 0x28(%rbx),%r12
40e4(4): mov 0x20(%rbx),%r15
40e8(4): mov 0x18(%rbx),%r14
40ec(5): mov %r10,0x18(%rsp)
40f1(5): mov %r9,0x10(%rsp)
40f6(4): mov %rax,(%rsp)
40fa(5): mov %r8,0x8(%rsp)
40ff(3): mov (%rbx),%rbx
4102(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4110(3): xor %r9d,%r9d
4113(4): cmp $0x0,(%r8)
4117(2): jz 0x14(%rip)
4119(7): nop 0x0(%rax)
4120(4): add $0x1,%r9
4124(5): cmp $0x0,0x0(%r8,%r9,8)
4129(2): jnz 0xfffffff7(%rip)
412b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4130(4): sub $0x68,%rsp
4134(3): mov %r8,%r10
4137(3): xor %r9d,%r9d
413a(9): mov $0x28,%rax
4143(5): mov %rax,0x58(%rsp)
4148(2): xor %eax,%eax
414a(3): mov %rsp,%r8
414d(3): nop (%rax)
4150(3): mov (%r10),%eax
4153(3): cmp $0x2f,%eax
4156(2): jnbe 0x44(%rip)
4158(3): mov %eax,%r11d
415b(4): add 0x10(%r10),%r11
415f(3): add $0x8,%eax
4162(3): mov %eax,(%r10)
4165(3): mov (%r11),%rax
4168(3): test %rax,%rax
416b(4): mov %rax,0x0(%r8,%r9,8)
416f(2): jz 0xc(%rip)
4171(4): add $0x1,%r9
4175(4): cmp $0xa,%r9
4179(2): jnz 0xffffffd7(%rip)
417b(5): call 0xfffffb75(%rip)
4180(5): mov 0x58(%rsp),%rax
4185(9): xor $0x28,%rax
418e(2): jnz 0x7(%rip)
4190(4): add $0x68,%rsp
4194(1): ret near (%rsp)
4195(5): call 0xffffd27b(%rip)
419a(4): mov 0x8(%r10),%r11
419e(4): lea 0x8(%r11),%rax
41a2(4): mov %rax,0x8(%r10)
41a6(2): jmp 0xffffffbf(%rip)

"version_etc" :
41b0(1): push %rbp
41b1(1): push %rbx
41b2(6): mov $0x20,%r10d
41b8(3): xor %r11d,%r11d
41bb(7): sub $0xb8,%rsp
41c2(9): mov $0x28,%rax
41cb(5): mov %rax,0x78(%rsp)
41d0(2): xor %eax,%eax
41d2(8): lea 0xd0(%rsp),%rax
41da(8): mov %r8,0xa0(%rsp)
41e2(8): lea 0xd0(%rsp),%rbx
41ea(5): lea 0x20(%rsp),%r8
41ef(8): mov %r9,0xa8(%rsp)
41f7(8): mov $0x20,0x8(%rsp)
41ff(5): mov %rax,0x10(%rsp)
4204(8): lea 0x80(%rsp),%rax
420c(3): xor %r9d,%r9d
420f(5): mov %rax,0x18(%rsp)
4214(3): mov %rax,%rbp
4217(9): nop 0x0(%rax,%rax,1)
4220(4): cmp $0x2f,%r10d
4224(2): jnbe 0x58(%rip)
4226(3): mov %r10d,%eax
4229(6): mov $0x1,%r11d
422f(4): add $0x8,%r10d
4233(3): add %rbp,%rax
4236(3): mov (%rax),%rax
4239(3): test %rax,%rax
423c(4): mov %rax,0x0(%r8,%r9,8)
4240(2): jz 0xc(%rip)
4242(4): add $0x1,%r9
4246(4): cmp $0xa,%r9
424a(2): jnz 0xffffffd6(%rip)
424c(3): test %r11b,%r11b
424f(2): jnz 0x26(%rip)
4251(5): call 0xfffffa9f(%rip)
4256(5): mov 0x78(%rsp),%rax
425b(9): xor $0x28,%rax
4264(2): jnz 0xc(%rip)
4266(7): add $0xb8,%rsp
426d(1): pop %rbx
426e(1): pop %rbp
426f(1): ret near (%rsp)
4270(5): call 0xffffd1a0(%rip)
4275(5): mov %r10d,0x8(%rsp)
427a(2): jmp 0xffffffd7(%rip)
427c(3): mov %rbx,%rax
427f(4): add $0x8,%rbx
4283(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4290(1): push %rbx
4291(7): lea 0x11ca(%rip),%rsi
4298(5): mov $0x5,%edx
429d(2): xor %edi,%edi
429f(5): call 0xffffd141(%rip)
42a4(7): lea 0x11cc(%rip),%rdx
42ab(3): mov %rax,%rsi
42ae(5): mov $0x1,%edi
42b3(2): xor %eax,%eax
42b5(5): call 0xffffd29b(%rip)
42ba(7): lea 0x11cc(%rip),%rsi
42c1(5): mov $0x5,%edx
42c6(2): xor %edi,%edi
42c8(5): call 0xffffd118(%rip)
42cd(7): lea 0xb4c(%rip),%rcx
42d4(7): lea 0x6ff(%rip),%rdx
42db(3): mov %rax,%rsi
42de(5): mov $0x1,%edi
42e3(2): xor %eax,%eax
42e5(5): call 0xffffd26b(%rip)
42ea(7): mov 0x202db7(%rip),%rbx
42f1(7): lea 0x13c8(%rip),%rsi
42f8(2): xor %edi,%edi
42fa(5): mov $0x5,%edx
42ff(5): call 0xffffd0e1(%rip)
4304(3): mov %rbx,%rsi
4307(3): mov %rax,%rdi
430a(1): pop %rbx
430b(5): jmp 0xffffd195(%rip)

"xmalloc" :
4310(1): push %rbx
4311(3): mov %rdi,%rbx
4314(5): call 0xffffd1dc(%rip)
4319(3): test %rax,%rax
431c(2): jnz 0x7(%rip)
431e(3): test %rbx,%rbx
4321(2): jnz 0x4(%rip)
4323(1): pop %rbx
4324(1): ret near (%rsp)
4325(5): call 0x23b(%rip)

"xnmalloc" :
4330(3): mov %rdi,%rax
4333(3): mul %rax,%rsi,%rdx
4336(3): mov %rax,%rdi
4339(3): seto %al
433c(3): test %rdi,%rdi
433f(2): js 0xc(%rip)
4341(3): movzx %al,%eax
4344(3): test %rax,%rax
4347(2): jnz 0x4(%rip)
4349(2): jmp 0xffffffc7(%rip)
434b(4): sub $0x8,%rsp
434f(5): call 0x211(%rip)

"xrealloc" :
4370(3): test %rsi,%rsi
4373(1): push %rbx
4374(3): mov %rsi,%rbx
4377(2): jnz 0x7(%rip)
4379(3): test %rdi,%rdi
437c(2): jnz 0x1c(%rip)
437e(3): mov %rbx,%rsi
4381(5): call 0xffffd1af(%rip)
4386(3): test %rax,%rax
4389(2): jnz 0x7(%rip)
438b(3): test %rbx,%rbx
438e(2): jnz 0x13(%rip)
4390(1): pop %rbx
4391(1): ret near (%rsp)
4392(6): nop 0x0(%rax,%rax,1)
4398(5): call 0xffffcfb8(%rip)
439d(2): xor %eax,%eax
439f(1): pop %rbx
43a0(1): ret near (%rsp)
43a1(5): call 0x1bf(%rip)

"xnrealloc" :
43b0(3): mov %rsi,%rax
43b3(3): mul %rax,%rdx,%rdx
43b6(3): mov %rax,%rsi
43b9(3): seto %al
43bc(3): test %rsi,%rsi
43bf(2): js 0xc(%rip)
43c1(3): movzx %al,%eax
43c4(3): test %rax,%rax
43c7(2): jnz 0x4(%rip)
43c9(2): jmp 0xffffffa7(%rip)
43cb(4): sub $0x8,%rsp
43cf(5): call 0x191(%rip)

"x2nrealloc" :
43e0(3): test %rdi,%rdi
43e3(3): mov %rdx,%r9
43e6(3): mov (%rsi),%rcx
43e9(2): jz 0x37(%rip)
43eb(2): xor %edx,%edx
43ed(a): mov $0x6148914691236517204,%rax
43f7(3): div %r9,%rax
43fa(3): cmp %rcx,%rax
43fd(2): jbe 0x3e(%rip)
43ff(3): mov %rcx,%rax
4402(3): shr $0x1,%rax
4405(5): lea 0x1(%rax,%rcx,1),%rcx
440a(3): mov %rcx,(%rsi)
440d(4): imul %r9,%rcx
4411(3): mov %rcx,%rsi
4414(5): jmp 0xffffff5c(%rip)
4419(7): nop 0x0(%rax)
4420(3): test %rcx,%rcx
4423(2): jz 0x25(%rip)
4425(3): mov %rcx,%rax
4428(3): mul %rax,%r9,%rdx
442b(3): seto %dl
442e(3): test %rax,%rax
4431(3): movzx %dl,%edx
4434(2): js 0x7(%rip)
4436(3): test %rdx,%rdx
4439(2): jz 0xffffffd1(%rip)
443b(4): sub $0x8,%rsp
443f(5): call 0x121(%rip)
4444(4): nop 0x0(%rax)
4448(2): xor %edx,%edx
444a(5): mov $0x80,%eax
444f(3): xor %r8d,%r8d
4452(3): div %r9,%rax
4455(3): test %rax,%rax
4458(4): setz %r8b
445c(4): lea 0x0(%r8,%rax,1),%rcx
4460(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4470(3): test %rdi,%rdi
4473(3): mov (%rsi),%rax
4476(2): jz 0x2a(%rip)
4478(a): mov $0x6148914691236517203,%rdx
4482(3): cmp %rdx,%rax
4485(2): jnbe 0x2c(%rip)
4487(3): mov %rax,%rdx
448a(3): shr $0x1,%rdx
448d(5): lea 0x1(%rdx,%rax,1),%rax
4492(3): mov %rax,(%rsi)
4495(3): mov %rax,%rsi
4498(5): jmp 0xfffffed8(%rip)
449d(3): nop (%rax)
44a0(3): test %rax,%rax
44a3(5): mov $0x80,%edx
44a8(4): cmove %rdx,%rax
44ac(3): test %rax,%rax
44af(2): jns 0xffffffe3(%rip)
44b1(4): sub $0x8,%rsp
44b5(5): call 0xab(%rip)

"xzalloc" :
44c0(1): push %rbx
44c1(3): mov %rdi,%rbx
44c4(5): call 0xfffffe4c(%rip)
44c9(3): mov %rbx,%rdx
44cc(2): xor %esi,%esi
44ce(3): mov %rax,%rdi
44d1(1): pop %rbx
44d2(5): jmp 0xffffcfae(%rip)

"xcalloc" :
44e0(3): mov %rdi,%rax
44e3(4): sub $0x8,%rsp
44e7(3): mul %rax,%rsi,%rdx
44ea(3): seto %dl
44ed(3): test %rax,%rax
44f0(2): js 0x19(%rip)
44f2(3): movzx %dl,%edx
44f5(3): test %rdx,%rdx
44f8(2): jnz 0x11(%rip)
44fa(5): call 0xffffcfb6(%rip)
44ff(3): test %rax,%rax
4502(2): jz 0x7(%rip)
4504(4): add $0x8,%rsp
4508(1): ret near (%rsp)
4509(5): call 0x57(%rip)

"xmemdup" :
4510(1): push %rbp
4511(1): push %rbx
4512(3): mov %rdi,%rbp
4515(3): mov %rsi,%rdi
4518(3): mov %rsi,%rbx
451b(4): sub $0x8,%rsp
451f(5): call 0xfffffdf1(%rip)
4524(4): add $0x8,%rsp
4528(3): mov %rbx,%rdx
452b(3): mov %rbp,%rsi
452e(1): pop %rbx
452f(1): pop %rbp
4530(3): mov %rax,%rdi
4533(5): jmp 0xffffcf9d(%rip)

"xstrdup" :
4540(1): push %rbx
4541(3): mov %rdi,%rbx
4544(5): call 0xffffcebc(%rip)
4549(3): mov %rbx,%rdi
454c(4): lea 0x1(%rax),%rsi
4550(1): pop %rbx
4551(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4560(7): lea 0x1208(%rip),%rsi
4567(4): sub $0x8,%rsp
456b(5): mov $0x5,%edx
4570(2): xor %edi,%edi
4572(5): call 0xffffce6e(%rip)
4577(6): mov 0x202aa3(%rip),%edi
457d(7): lea 0x961(%rip),%rdx
4584(3): mov %rax,%rcx
4587(2): xor %esi,%esi
4589(2): xor %eax,%eax
458b(5): call 0xffffcfd5(%rip)
4590(5): call 0xffffcdd0(%rip)

"rpl_mbrtowc" :
45a0(2): push %r13
45a2(2): push %r12
45a4(3): mov %rsi,%r13
45a7(1): push %rbp
45a8(1): push %rbx
45a9(3): mov %rdi,%rbx
45ac(3): mov %rdx,%r12
45af(4): sub $0x18,%rsp
45b3(9): mov $0x28,%rax
45bc(5): mov %rax,0x8(%rsp)
45c1(2): xor %eax,%eax
45c3(5): lea 0x4(%rsp),%rax
45c8(3): test %rdi,%rdi
45cb(4): cmove %rax,%rbx
45cf(3): mov %rbx,%rdi
45d2(5): call 0xffffce5e(%rip)
45d7(4): cmp $0xfffffffd,%rax
45db(3): mov %rax,%rbp
45de(2): jbe 0x22(%rip)
45e0(3): test %r12,%r12
45e3(2): jz 0x1d(%rip)
45e5(2): xor %edi,%edi
45e7(5): call 0xc9(%rip)
45ec(2): test %al,%al
45ee(2): jnz 0x12(%rip)
45f0(5): movzx 0x0(%r13),%eax
45f5(5): mov $0x1,%ebp
45fa(2): mov %eax,(%rbx)
45fc(4): nop 0x0(%rax)
4600(5): mov 0x8(%rsp),%rdx
4605(9): xor $0x28,%rdx
460e(3): mov %rbp,%rax
4611(2): jnz 0xd(%rip)
4613(4): add $0x18,%rsp
4617(1): pop %rbx
4618(1): pop %rbp
4619(2): pop %r12
461b(2): pop %r13
461d(1): ret near (%rsp)
461e(5): call 0xffffcdf2(%rip)

"close_stream" :
4630(2): push %r12
4632(1): push %rbp
4633(3): mov %rdi,%rbp
4636(1): push %rbx
4637(5): call 0xffffcd69(%rip)
463c(3): mov 0x0(%rbp),%ebx
463f(3): mov %rbp,%rdi
4642(3): mov %rax,%r12
4645(5): call 0x10b(%rip)
464a(3): and $0x20,%ebx
464d(2): test %ebx,%ebx
464f(2): jnz 0x19(%rip)
4651(2): test %eax,%eax
4653(2): jz 0xc(%rip)
4655(3): test %r12,%r12
4658(5): mov $0xffffffff,%eax
465d(2): jz 0x3b(%rip)
465f(1): pop %rbx
4660(1): pop %rbp
4661(2): pop %r12
4663(1): ret near (%rsp)
4664(4): nop 0x0(%rax)
4668(2): test %eax,%eax
466a(2): jnz 0x1e(%rip)
466c(5): call 0xffffcd04(%rip)
4671(6): mov $0x0,(%rax)
4677(5): mov $0xffffffff,%eax
467c(1): pop %rbx
467d(1): pop %rbp
467e(2): pop %r12
4680(1): ret near (%rsp)
4681(7): nop 0x0(%rax)
4688(1): pop %rbx
4689(5): mov $0xffffffff,%eax
468e(1): pop %rbp
468f(2): pop %r12
4691(1): ret near (%rsp)
4692(6): nop 0x0(%rax,%rax,1)
4698(5): call 0xffffccd8(%rip)
469d(3): cmp $0x9,(%rax)
46a0(1): pop %rbx
46a1(1): pop %rbp
46a2(2): pop %r12
46a4(3): setnz %al
46a7(3): movzx %al,%eax
46aa(2): neg %eax
46ac(1): ret near (%rsp)

"hard_locale" :
46b0(4): sub $0x8,%rsp
46b4(2): xor %esi,%esi
46b6(5): call 0xffffce8a(%rip)
46bb(3): mov %rax,%rdx
46be(5): mov $0x1,%eax
46c3(3): test %rdx,%rdx
46c6(2): jz 0x1f(%rip)
46c8(7): lea 0x10b1(%rip),%rdi
46cf(5): mov $0x2,%ecx
46d4(3): mov %rdx,%rsi
46d7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
46d9(3): setnbe %cl
46dc(3): sbb $0x0,%cl
46df(2): xor %eax,%eax
46e1(2): test %cl,%cl
46e3(2): jnz 0xd(%rip)
46e5(4): add $0x8,%rsp
46e9(1): ret near (%rsp)
46ea(6): nop 0x0(%rax,%rax,1)
46f0(7): lea 0x108b(%rip),%rdi
46f7(5): mov $0x6,%ecx
46fc(3): mov %rdx,%rsi
46ff(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4701(3): setnbe %al
4704(2): sbb $0x0,%al
4706(2): test %al,%al
4708(3): setnz %al
470b(4): add $0x8,%rsp
470f(1): ret near (%rsp)

"locale_charset" :
4710(4): sub $0x8,%rsp
4714(5): mov $0xe,%edi
4719(5): call 0xffffcdf7(%rip)
471e(3): test %rax,%rax
4721(2): jz 0x1f(%rip)
4723(3): cmp $0x0,(%rax)
4726(7): lea 0x105b(%rip),%rdx
472d(4): cmove %rdx,%rax
4731(4): add $0x8,%rsp
4735(1): ret near (%rsp)
4736(a): nop 0x0(%rax,%rax,1)
4740(7): lea 0x1041(%rip),%rax
4747(4): add $0x8,%rsp
474b(1): ret near (%rsp)

"rpl_fclose" :
4750(2): push %r12
4752(1): push %rbp
4753(1): push %rbx
4754(3): mov %rdi,%rbx
4757(5): call 0xffffcd89(%rip)
475c(2): test %eax,%eax
475e(3): mov %rbx,%rdi
4761(2): js 0x56(%rip)
4763(5): call 0xffffcdbd(%rip)
4768(2): test %eax,%eax
476a(2): jnz 0x2e(%rip)
476c(3): mov %rbx,%rdi
476f(5): call 0x61(%rip)
4774(2): test %eax,%eax
4776(2): jz 0x3e(%rip)
4778(5): call 0xffffcbf8(%rip)
477d(3): mov (%rax),%r12d
4780(3): mov %rbx,%rdi
4783(3): mov %rax,%rbp
4786(5): call 0xffffcc3a(%rip)
478b(3): test %r12d,%r12d
478e(2): jnz 0x32(%rip)
4790(1): pop %rbx
4791(1): pop %rbp
4792(2): pop %r12
4794(1): ret near (%rsp)
4795(3): nop (%rax)
4798(3): mov %rbx,%rdi
479b(5): call 0xffffcd45(%rip)
47a0(2): xor %esi,%esi
47a2(5): mov $0x1,%edx
47a7(2): mov %eax,%edi
47a9(5): call 0xffffccc7(%rip)
47ae(4): cmp $0xffffffff,%rax
47b2(2): jnz 0xffffffba(%rip)
47b4(3): mov %rbx,%rdi
47b7(1): pop %rbx
47b8(1): pop %rbp
47b9(2): pop %r12
47bb(5): jmp 0xffffcc05(%rip)
47c0(4): mov %r12d,0x0(%rbp)
47c4(5): mov $0xffffffff,%eax
47c9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
47d0(3): test %rdi,%rdi
47d3(1): push %rbx
47d4(3): mov %rdi,%rbx
47d7(2): jz 0x13(%rip)
47d9(5): call 0xffffcd47(%rip)
47de(2): test %eax,%eax
47e0(2): jz 0xa(%rip)
47e2(6): test $0x100,(%rbx)
47e8(2): jnz 0x10(%rip)
47ea(3): mov %rbx,%rdi
47ed(1): pop %rbx
47ee(5): jmp 0xffffcd12(%rip)
47f3(5): nop 0x0(%rax,%rax,1)
47f8(3): mov %rbx,%rdi
47fb(5): mov $0x1,%edx
4800(2): xor %esi,%esi
4802(5): call 0xe(%rip)
4807(3): mov %rbx,%rdi
480a(1): pop %rbx
480b(5): jmp 0xffffccf5(%rip)

"rpl_fseeko" :
4810(4): mov 0x8(%rdi),%rax
4814(4): cmp %rax,0x10(%rdi)
4818(2): jz 0x8(%rip)
481a(5): jmp 0xffffcd56(%rip)
481f(1): nop 
4820(4): mov 0x20(%rdi),%rax
4824(4): cmp %rax,0x28(%rdi)
4828(2): jnz 0xfffffff2(%rip)
482a(5): cmp $0x0,0x48(%rdi)
482f(2): jnz 0xffffffeb(%rip)
4831(2): push %r12
4833(1): push %rbp
4834(3): mov %edx,%r12d
4837(1): push %rbx
4838(3): mov %rsi,%rbp
483b(3): mov %rdi,%rbx
483e(5): call 0xffffcca2(%rip)
4843(3): mov %r12d,%edx
4846(3): mov %rbp,%rsi
4849(2): mov %eax,%edi
484b(5): call 0xffffcc25(%rip)
4850(4): cmp $0xffffffff,%rax
4854(2): jz 0xe(%rip)
4856(3): and $0xef,(%rbx)
4859(7): mov %rax,0x90(%rbx)
4860(2): xor %eax,%eax
4862(1): pop %rbx
4863(1): pop %rbp
4864(2): pop %r12
4866(1): ret near (%rsp)

"__libc_csu_init" :
4870(2): push %r15
4872(2): push %r14
4874(3): mov %rdx,%r15
4877(2): push %r13
4879(2): push %r12
487b(7): lea 0x20216e(%rip),%r12
4882(1): push %rbp
4883(7): lea 0x20216e(%rip),%rbp
488a(1): push %rbx
488b(3): mov %edi,%r13d
488e(3): mov %rsi,%r14
4891(3): sub %r12,%rbp
4894(4): sub $0x8,%rsp
4898(4): sar $0x3,%rbp
489c(5): call 0xffffca8c(%rip)
48a1(3): test %rbp,%rbp
48a4(2): jz 0x22(%rip)
48a6(2): xor %ebx,%ebx
48a8(8): nop 0x0(%rax,%rax,1)
48b0(3): mov %r15,%rdx
48b3(3): mov %r14,%rsi
48b6(3): mov %r13d,%edi
48b9(4): call 0x0(%r12,%rbx,8)
48bd(4): add $0x1,%rbx
48c1(3): cmp %rbx,%rbp
48c4(2): jnz 0xffffffec(%rip)
48c6(4): add $0x8,%rsp
48ca(1): pop %rbx
48cb(1): pop %rbp
48cc(2): pop %r12
48ce(2): pop %r13
48d0(2): pop %r14
48d2(2): pop %r15
48d4(1): ret near (%rsp)

"atexit" :
48f0(7): mov 0x202711(%rip),%rdx
48f7(2): xor %esi,%esi
48f9(5): jmp 0xffffcc87(%rip)

"_fini" :
4900(4): sub $0x8,%rsp
4904(4): add $0x8,%rsp
4908(1): ret near (%rsp)

