
"free@plt" :
1200(6): jmp 0x205c7a(%rip)
1206(5): push $0x0

"abort@plt" :
1210(6): jmp 0x205c72(%rip)
1216(5): push $0x1

"__errno_location@plt" :
1220(6): jmp 0x205c6a(%rip)
1226(5): push $0x2

"strncmp@plt" :
1230(6): jmp 0x205c62(%rip)
1236(5): push $0x3

"_exit@plt" :
1240(6): jmp 0x205c5a(%rip)
1246(5): push $0x4

"__fpending@plt" :
1250(6): jmp 0x205c52(%rip)
1256(5): push $0x5

"textdomain@plt" :
1260(6): jmp 0x205c4a(%rip)
1266(5): push $0x6

"fclose@plt" :
1270(6): jmp 0x205c42(%rip)
1276(5): push $0x7

"bindtextdomain@plt" :
1280(6): jmp 0x205c3a(%rip)
1286(5): push $0x8

"dcgettext@plt" :
1290(6): jmp 0x205c32(%rip)
1296(5): push $0x9

"__ctype_get_mb_cur_max@plt" :
12a0(6): jmp 0x205c2a(%rip)
12a6(5): push $0xa

"strlen@plt" :
12b0(6): jmp 0x205c22(%rip)
12b6(5): push $0xb

"__stack_chk_fail@plt" :
12c0(6): jmp 0x205c1a(%rip)
12c6(5): push $0xc

"getopt_long@plt" :
12d0(6): jmp 0x205c12(%rip)
12d6(5): push $0xd

"mbrtowc@plt" :
12e0(6): jmp 0x205c0a(%rip)
12e6(5): push $0xe

"__overflow@plt" :
12f0(6): jmp 0x205c02(%rip)
12f6(5): push $0xf

"strrchr@plt" :
1300(6): jmp 0x205bfa(%rip)
1306(5): push $0x10

"lseek@plt" :
1310(6): jmp 0x205bf2(%rip)
1316(5): push $0x11

"memset@plt" :
1320(6): jmp 0x205bea(%rip)
1326(5): push $0x12

"memcmp@plt" :
1330(6): jmp 0x205be2(%rip)
1336(5): push $0x13

"fputs_unlocked@plt" :
1340(6): jmp 0x205bda(%rip)
1346(5): push $0x14

"calloc@plt" :
1350(6): jmp 0x205bd2(%rip)
1356(5): push $0x15

"memcpy@plt" :
1360(6): jmp 0x205bca(%rip)
1366(5): push $0x16

"fileno@plt" :
1370(6): jmp 0x205bc2(%rip)
1376(5): push $0x17

"malloc@plt" :
1380(6): jmp 0x205bba(%rip)
1386(5): push $0x18

"fflush@plt" :
1390(6): jmp 0x205bb2(%rip)
1396(5): push $0x19

"nl_langinfo@plt" :
13a0(6): jmp 0x205baa(%rip)
13a6(5): push $0x1a

"__freading@plt" :
13b0(6): jmp 0x205ba2(%rip)
13b6(5): push $0x1b

"fwrite_unlocked@plt" :
13c0(6): jmp 0x205b9a(%rip)
13c6(5): push $0x1c

"realloc@plt" :
13d0(6): jmp 0x205b92(%rip)
13d6(5): push $0x1d

"setlocale@plt" :
13e0(6): jmp 0x205b8a(%rip)
13e6(5): push $0x1e

"__printf_chk@plt" :
13f0(6): jmp 0x205b82(%rip)
13f6(5): push $0x1f

"error@plt" :
1400(6): jmp 0x205b7a(%rip)
1406(5): push $0x20

"fseeko@plt" :
1410(6): jmp 0x205b72(%rip)
1416(5): push $0x21

"__cxa_atexit@plt" :
1420(6): jmp 0x205b6a(%rip)
1426(5): push $0x22

"exit@plt" :
1430(6): jmp 0x205b62(%rip)
1436(5): push $0x23

"fwrite@plt" :
1440(6): jmp 0x205b5a(%rip)
1446(5): push $0x24

"__fprintf_chk@plt" :
1450(6): jmp 0x205b52(%rip)
1456(5): push $0x25

"mbsinit@plt" :
1460(6): jmp 0x205b4a(%rip)
1466(5): push $0x26

"iswprint@plt" :
1470(6): jmp 0x205b42(%rip)
1476(5): push $0x27

"__ctype_b_loc@plt" :
1480(6): jmp 0x205b3a(%rip)
1486(5): push $0x28

".plt.got" :
1490(6): jmp 0x205b52(%rip)
1496(2): nop 

"_init" :
11d8(4): sub $0x8,%rsp
11dc(7): mov 0x205df5(%rip),%rax
11e3(3): test %rax,%rax
11e6(2): jz 0x4(%rip)
11e8(2): call %rax
11ea(4): add $0x8,%rsp
11ee(1): ret near (%rsp)

"main" :
14a0(2): push %r14
14a2(2): push %r13
14a4(2): push %r12
14a6(1): push %rbp
14a7(2): mov %edi,%ebp
14a9(1): push %rbx
14aa(3): mov (%rsi),%rdi
14ad(3): mov %rsi,%rbx
14b0(3): xor %r12d,%r12d
14b3(5): call 0x89d(%rip)
14b8(7): lea 0x3208(%rip),%rsi
14bf(5): mov $0x6,%edi
14c4(5): call 0xffffff1c(%rip)
14c9(7): lea 0x329b(%rip),%rsi
14d0(7): lea 0x326b(%rip),%rdi
14d7(5): call 0xfffffda9(%rip)
14dc(7): lea 0x325f(%rip),%rdi
14e3(5): call 0xfffffd7d(%rip)
14e8(7): lea 0x641(%rip),%rdi
14ef(5): call 0x3191(%rip)
14f4(7): lea 0x2056a5(%rip),%rcx
14fb(7): lea 0x3281(%rip),%rdx
1502(3): xor %r8d,%r8d
1505(3): mov %rbx,%rsi
1508(2): mov %ebp,%edi
150a(5): call 0xfffffdc6(%rip)
150f(3): cmp $0xff,%eax
1512(2): jz 0x6c(%rip)
1514(5): cmp $0xffffff7e,%eax
1519(6): mov $0x1,%r12d
151f(6): jz 0x111(%rip)
1525(3): cmp $0x7a,%eax
1528(2): jz 0xffffffcc(%rip)
152a(5): cmp $0xffffff7d,%eax
152f(2): jz 0x11(%rip)
1531(5): mov $0x1,%edi
1536(5): call 0x23a(%rip)
153b(5): nop 0x0(%rax,%rax,1)
1540(4): sub $0x8,%rsp
1544(7): mov 0x205b3d(%rip),%rdi
154b(7): mov 0x205abe(%rip),%rcx
1552(2): push $0x0
1554(7): lea 0x322a(%rip),%r9
155b(7): lea 0x3230(%rip),%r8
1562(7): lea 0x31d5(%rip),%rdx
1569(7): lea 0x3134(%rip),%rsi
1570(2): xor %eax,%eax
1572(5): call 0x29ce(%rip)
1577(2): xor %edi,%edi
1579(5): call 0xfffffeb7(%rip)
157e(6): mov 0x205b0c(%rip),%eax
1584(2): cmp %ebp,%eax
1586(6): jnl 0xb1(%rip)
158c(4): cmp $0x1,%r12b
1590(3): sbb %r13d,%r13d
1593(4): and $0xa,%r13d
1597(3): mov %r13d,%r12d
159a(2): jmp 0x46(%rip)
159c(4): mov 0x28(%rcx),%rax
15a0(4): cmp 0x30(%rcx),%rax
15a4(2): jnb 0x68(%rip)
15a6(4): lea 0x1(%rax),%rdx
15aa(4): mov %rdx,0x28(%rcx)
15ae(3): mov $0x2e,(%rax)
15b1(7): mov 0x205ad0(%rip),%rdi
15b8(4): mov 0x28(%rdi),%rax
15bc(4): cmp %rax,0x30(%rdi)
15c0(2): jbe 0x66(%rip)
15c2(4): lea 0x1(%rax),%rdx
15c6(4): mov %rdx,0x28(%rdi)
15ca(3): mov %r12b,(%rax)
15cd(6): mov 0x205abd(%rip),%eax
15d3(3): add $0x1,%eax
15d6(2): cmp %ebp,%eax
15d8(6): mov %eax,0x205ab2(%rip)
15de(2): jnl 0x3d(%rip)
15e0(2): cwde 
15e2(4): mov 0x0(%rbx,%rax,8),%r14
15e6(3): mov %r14,%rdi
15e9(5): call 0x5f7(%rip)
15ee(3): test %rax,%rax
15f1(7): mov 0x205a90(%rip),%rcx
15f8(2): jz 0xffffffa4(%rip)
15fa(3): mov %rax,%rdx
15fd(5): mov $0x1,%esi
1602(3): mov %r14,%rdi
1605(5): call 0xfffffdbb(%rip)
160a(2): jmp 0xffffffa7(%rip)
160c(5): mov $0x2e,%esi
1611(3): mov %rcx,%rdi
1614(5): call 0xfffffcdc(%rip)
1619(2): jmp 0xffffff98(%rip)
161b(1): pop %rbx
161c(2): xor %eax,%eax
161e(1): pop %rbp
161f(2): pop %r12
1621(2): pop %r13
1623(2): pop %r14
1625(1): ret near (%rsp)
1626(3): mov %r13d,%esi
1629(5): call 0xfffffcc7(%rip)
162e(2): jmp 0xffffff9f(%rip)
1630(2): xor %edi,%edi
1632(5): call 0x13e(%rip)
1637(7): lea 0x3164(%rip),%rsi
163e(2): xor %edi,%edi
1640(5): mov $0x5,%edx
1645(5): call 0xfffffc4b(%rip)
164a(2): xor %esi,%esi
164c(3): mov %rax,%rdx
164f(2): xor %edi,%edi
1651(2): xor %eax,%eax
1653(5): call 0xfffffdad(%rip)
1658(5): jmp 0xfffffed9(%rip)

"_start" :
1660(2): xor %ebp,%ebp
1662(3): mov %rdx,%r9
1665(1): pop %rsi
1666(3): mov %rsp,%rdx
1669(4): and $0xfffffff0,%rsp
166d(1): push %rax
166e(1): push %rsp
166f(7): lea 0x2ffa(%rip),%r8
1676(7): lea 0x2f83(%rip),%rcx
167d(7): lea 0xfffffe1c(%rip),%rdi
1684(6): call 0x205946(%rip)
168a(1): hlt 

"deregister_tm_clones" :
1690(7): lea 0x2059e9(%rip),%rdi
1697(1): push %rbp
1698(7): lea 0x2059e1(%rip),%rax
169f(3): cmp %rdi,%rax
16a2(3): mov %rsp,%rbp
16a5(2): jz 0x1b(%rip)
16a7(7): mov 0x20591a(%rip),%rax
16ae(3): test %rax,%rax
16b1(2): jz 0xf(%rip)
16b3(1): pop %rbp
16b4(2): jmp %rax
16b6(a): nop 0x0(%rax,%rax,1)
16c0(1): pop %rbp
16c1(1): ret near (%rsp)

"register_tm_clones" :
16d0(7): lea 0x2059a9(%rip),%rdi
16d7(7): lea 0x2059a2(%rip),%rsi
16de(1): push %rbp
16df(3): sub %rdi,%rsi
16e2(3): mov %rsp,%rbp
16e5(4): sar $0x3,%rsi
16e9(3): mov %rsi,%rax
16ec(4): shr $0x3f,%rax
16f0(3): add %rax,%rsi
16f3(3): sar $0x1,%rsi
16f6(2): jz 0x1a(%rip)
16f8(7): mov 0x2058e1(%rip),%rax
16ff(3): test %rax,%rax
1702(2): jz 0xe(%rip)
1704(1): pop %rbp
1705(2): jmp %rax
1707(9): nop 0x0(%rax,%rax,1)
1710(1): pop %rbp
1711(1): ret near (%rsp)

"__do_global_dtors_aux" :
1720(7): cmp $0x0,0x205981(%rip)
1727(2): jnz 0x31(%rip)
1729(8): cmp $0x0,0x2058b7(%rip)
1731(1): push %rbp
1732(3): mov %rsp,%rbp
1735(2): jz 0xe(%rip)
1737(7): mov 0x2058ca(%rip),%rdi
173e(5): call 0xfffffd52(%rip)
1743(5): call 0xffffff4d(%rip)
1748(7): mov $0x1,0x205959(%rip)
174f(1): pop %rbp
1750(1): ret near (%rsp)
1751(7): nop 0x0(%rax)
1758(2): REP ret near (%rsp)

"frame_dummy" :
1760(1): push %rbp
1761(3): mov %rsp,%rbp
1764(1): pop %rbp
1765(5): jmp 0xffffff6b(%rip)

"usage" :
1770(2): push %r13
1772(2): push %r12
1774(5): mov $0x5,%edx
1779(1): push %rbp
177a(1): push %rbx
177b(2): mov %edi,%ebp
177d(7): sub $0x88,%rsp
1784(7): mov 0x205935(%rip),%rbx
178b(9): mov $0x28,%rax
1794(5): mov %rax,0x78(%rsp)
1799(2): xor %eax,%eax
179b(2): test %edi,%edi
179d(2): jz 0x30(%rip)
179f(7): lea 0x3022(%rip),%rsi
17a6(2): xor %edi,%edi
17a8(5): call 0xfffffae8(%rip)
17ad(7): mov 0x2058ec(%rip),%rdi
17b4(3): mov %rax,%rdx
17b7(3): mov %rbx,%rcx
17ba(5): mov $0x1,%esi
17bf(2): xor %eax,%eax
17c1(5): call 0xfffffc8f(%rip)
17c6(2): mov %ebp,%edi
17c8(5): call 0xfffffc68(%rip)
17cd(7): lea 0x2ed8(%rip),%rsi
17d4(2): xor %edi,%edi
17d6(5): call 0xfffffaba(%rip)
17db(3): mov %rbx,%rdx
17de(3): mov %rax,%rsi
17e1(5): mov $0x1,%edi
17e6(2): xor %eax,%eax
17e8(5): call 0xfffffc08(%rip)
17ed(7): mov 0x205894(%rip),%rbx
17f4(7): lea 0x2ff5(%rip),%rsi
17fb(5): mov $0x5,%edx
1800(2): xor %edi,%edi
1802(5): call 0xfffffa8e(%rip)
1807(3): mov %rbx,%rsi
180a(3): mov %rax,%rdi
180d(5): call 0xfffffb33(%rip)
1812(7): mov 0x20586f(%rip),%rbx
1819(7): lea 0x3068(%rip),%rsi
1820(5): mov $0x5,%edx
1825(2): xor %edi,%edi
1827(5): call 0xfffffa69(%rip)
182c(3): mov %rbx,%rsi
182f(3): mov %rax,%rdi
1832(5): call 0xfffffb0e(%rip)
1837(7): mov 0x20584a(%rip),%rbx
183e(7): lea 0x3083(%rip),%rsi
1845(5): mov $0x5,%edx
184a(2): xor %edi,%edi
184c(5): call 0xfffffa44(%rip)
1851(3): mov %rbx,%rsi
1854(3): mov %rax,%rdi
1857(5): call 0xfffffae9(%rip)
185c(7): mov 0x205825(%rip),%rbx
1863(7): lea 0x308e(%rip),%rsi
186a(5): mov $0x5,%edx
186f(2): xor %edi,%edi
1871(5): call 0xfffffa1f(%rip)
1876(3): mov %rbx,%rsi
1879(3): mov %rax,%rdi
187c(5): call 0xfffffac4(%rip)
1881(7): mov 0x205838(%rip),%rbx
1888(7): lea 0x30a1(%rip),%rsi
188f(5): mov $0x5,%edx
1894(2): xor %edi,%edi
1896(5): call 0xfffff9fa(%rip)
189b(3): mov %rbx,%rcx
189e(3): mov %rbx,%rdx
18a1(3): mov %rbx,%r8
18a4(3): mov %rax,%rsi
18a7(5): mov $0x1,%edi
18ac(2): xor %eax,%eax
18ae(5): call 0xfffffb42(%rip)
18b3(7): lea 0x2e0e(%rip),%rax
18ba(7): lea 0x2e48(%rip),%rcx
18c1(7): lea 0x2ddc(%rip),%rbx
18c8(9): mov $0x0,0x60(%rsp)
18d1(9): mov $0x0,0x68(%rsp)
18da(3): mov %rsp,%rdx
18dd(4): mov %rax,(%rsp)
18e1(7): lea 0x2de2(%rip),%rax
18e8(5): mov %rcx,0x30(%rsp)
18ed(7): lea 0x2e1f(%rip),%rcx
18f4(5): mov %rax,0x8(%rsp)
18f9(7): lea 0x2e42(%rip),%rax
1900(5): mov %rcx,0x40(%rsp)
1905(7): lea 0x2e11(%rip),%rcx
190c(5): mov %rax,0x10(%rsp)
1911(7): lea 0x2dc2(%rip),%rax
1918(5): mov %rcx,0x50(%rsp)
191d(5): mov %rax,0x18(%rsp)
1922(7): lea 0x2dc7(%rip),%rax
1929(5): mov %rax,0x20(%rsp)
192e(7): lea 0x2dc5(%rip),%rax
1935(5): mov %rax,0x28(%rsp)
193a(5): mov %rax,0x38(%rsp)
193f(5): mov %rax,0x48(%rsp)
1944(5): mov %rax,0x58(%rsp)
1949(7): nop 0x0(%rax)
1950(4): add $0x10,%rdx
1954(3): mov (%rdx),%rdi
1957(3): test %rdi,%rdi
195a(2): jz 0x15(%rip)
195c(5): mov $0x8,%ecx
1961(3): mov %rbx,%rsi
1964(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1966(3): setnbe %al
1969(2): sbb $0x0,%al
196b(2): test %al,%al
196d(2): jnz 0xffffffe3(%rip)
196f(4): mov 0x8(%rdx),%r12
1973(2): xor %edi,%edi
1975(5): mov $0x5,%edx
197a(7): lea 0x2da6(%rip),%rsi
1981(3): test %r12,%r12
1984(6): jz 0xc7(%rip)
198a(5): call 0xfffff906(%rip)
198f(7): lea 0x3022(%rip),%rcx
1996(7): lea 0x2da1(%rip),%rdx
199d(3): mov %rax,%rsi
19a0(5): mov $0x1,%edi
19a5(2): xor %eax,%eax
19a7(5): call 0xfffffa49(%rip)
19ac(2): xor %esi,%esi
19ae(5): mov $0x5,%edi
19b3(5): call 0xfffffa2d(%rip)
19b8(3): test %rax,%rax
19bb(2): jz 0x1e(%rip)
19bd(7): lea 0x2d88(%rip),%rsi
19c4(5): mov $0x3,%edx
19c9(3): mov %rax,%rdi
19cc(5): call 0xfffff864(%rip)
19d1(2): test %eax,%eax
19d3(6): jnz 0x10d(%rip)
19d9(7): lea 0x2d70(%rip),%rsi
19e0(2): xor %edi,%edi
19e2(5): mov $0x5,%edx
19e7(5): call 0xfffff8a9(%rip)
19ec(7): lea 0x2cb1(%rip),%rcx
19f3(7): lea 0x2fbe(%rip),%rdx
19fa(3): mov %rax,%rsi
19fd(5): mov $0x1,%edi
1a02(2): xor %eax,%eax
1a04(5): call 0xfffff9ec(%rip)
1a09(3): cmp %rbx,%r12
1a0c(7): lea 0x2cd1(%rip),%rcx
1a13(7): lea 0x2cad(%rip),%rbx
1a1a(4): cmove %rcx,%rbx
1a1e(7): lea 0x3003(%rip),%rsi
1a25(2): xor %edi,%edi
1a27(5): mov $0x5,%edx
1a2c(5): call 0xfffff864(%rip)
1a31(3): mov %rbx,%rcx
1a34(3): mov %rax,%rsi
1a37(3): mov %r12,%rdx
1a3a(5): mov $0x1,%edi
1a3f(2): xor %eax,%eax
1a41(5): call 0xfffff9af(%rip)
1a46(5): jmp 0xfffffd80(%rip)
1a4b(5): call 0xfffff845(%rip)
1a50(7): lea 0x2f61(%rip),%rcx
1a57(7): lea 0x2ce0(%rip),%rdx
1a5e(3): mov %rax,%rsi
1a61(5): mov $0x1,%edi
1a66(2): xor %eax,%eax
1a68(5): call 0xfffff988(%rip)
1a6d(2): xor %esi,%esi
1a6f(5): mov $0x5,%edi
1a74(5): call 0xfffff96c(%rip)
1a79(3): test %rax,%rax
1a7c(2): jz 0x1a(%rip)
1a7e(7): lea 0x2cc7(%rip),%rsi
1a85(5): mov $0x3,%edx
1a8a(3): mov %rax,%rdi
1a8d(5): call 0xfffff7a3(%rip)
1a92(2): test %eax,%eax
1a94(2): jnz 0x45(%rip)
1a96(7): lea 0x2cb3(%rip),%rsi
1a9d(5): mov $0x5,%edx
1aa2(2): xor %edi,%edi
1aa4(7): lea 0x2bf9(%rip),%r12
1aab(7): lea 0x2c32(%rip),%rbx
1ab2(5): call 0xfffff7de(%rip)
1ab7(7): lea 0x2be6(%rip),%rcx
1abe(7): lea 0x2ef3(%rip),%rdx
1ac5(3): mov %rax,%rsi
1ac8(5): mov $0x1,%edi
1acd(2): xor %eax,%eax
1acf(5): call 0xfffff921(%rip)
1ad4(5): jmp 0xffffff4a(%rip)
1ad9(7): lea 0x2bc4(%rip),%r12
1ae0(7): mov 0x2055a1(%rip),%r13
1ae7(7): lea 0x2ef2(%rip),%rsi
1aee(2): xor %edi,%edi
1af0(5): mov $0x5,%edx
1af5(5): call 0xfffff79b(%rip)
1afa(3): mov %r13,%rsi
1afd(3): mov %rax,%rdi
1b00(5): call 0xfffff840(%rip)
1b05(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1b10(7): mov %rdi,0x2055a1(%rip)
1b17(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1b20(7): mov %dil,0x205589(%rip)
1b27(1): ret near (%rsp)

"close_stdout" :
1b30(1): push %rbp
1b31(1): push %rbx
1b32(4): sub $0x8,%rsp
1b36(7): mov 0x20554b(%rip),%rdi
1b3d(5): call 0x2883(%rip)
1b42(2): test %eax,%eax
1b44(2): jz 0x18(%rip)
1b46(5): call 0xfffff6da(%rip)
1b4b(7): cmp $0x0,0x20555e(%rip)
1b52(3): mov %rax,%rbx
1b55(2): jz 0x1e(%rip)
1b57(3): cmp $0x20,(%rax)
1b5a(2): jnz 0x19(%rip)
1b5c(7): mov 0x20553d(%rip),%rdi
1b63(5): call 0x285d(%rip)
1b68(2): test %eax,%eax
1b6a(2): jnz 0x48(%rip)
1b6c(4): add $0x8,%rsp
1b70(1): pop %rbx
1b71(1): pop %rbp
1b72(1): ret near (%rsp)
1b73(7): lea 0x2ee6(%rip),%rsi
1b7a(2): xor %edi,%edi
1b7c(5): mov $0x5,%edx
1b81(5): call 0xfffff70f(%rip)
1b86(7): mov 0x20552b(%rip),%rdi
1b8d(3): mov %rax,%rbp
1b90(3): test %rdi,%rdi
1b93(2): jz 0x2a(%rip)
1b95(5): call 0x1ccb(%rip)
1b9a(2): mov (%rbx),%esi
1b9c(7): lea 0x2ec9(%rip),%rdx
1ba3(3): mov %rax,%rcx
1ba6(3): mov %rbp,%r8
1ba9(2): xor %edi,%edi
1bab(2): xor %eax,%eax
1bad(5): call 0xfffff853(%rip)
1bb2(6): mov 0x205460(%rip),%edi
1bb8(5): call 0xfffff688(%rip)
1bbd(2): mov (%rbx),%esi
1bbf(7): lea 0x2eaa(%rip),%rdx
1bc6(3): mov %rax,%rcx
1bc9(2): xor %edi,%edi
1bcb(2): xor %eax,%eax
1bcd(5): call 0xfffff833(%rip)
1bd2(2): jmp 0xffffffe0(%rip)

"dir_len" :
1be0(1): push %rbp
1be1(1): push %rbx
1be2(2): xor %ebp,%ebp
1be4(3): mov %rdi,%rbx
1be7(4): sub $0x8,%rsp
1beb(3): cmp $0x2f,(%rdi)
1bee(4): setz %bpl
1bf2(5): call 0xae(%rip)
1bf7(3): mov %rax,%rcx
1bfa(3): sub %rbx,%rcx
1bfd(3): cmp %rbp,%rcx
1c00(2): jbe 0x30(%rip)
1c02(4): cmp $0x2f,0xffffffff(%rax)
1c06(4): lea 0xffffffff(%rcx),%rdx
1c0a(2): jz 0x14(%rip)
1c0c(2): jmp 0x24(%rip)
1c0e(2): nop 
1c10(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
1c15(4): lea 0xffffffff(%rdx),%rax
1c19(2): jnz 0xa(%rip)
1c1b(3): mov %rax,%rdx
1c1e(3): cmp %rdx,%rbp
1c21(2): jnz 0xffffffef(%rip)
1c23(4): add $0x8,%rsp
1c27(3): mov %rdx,%rax
1c2a(1): pop %rbx
1c2b(1): pop %rbp
1c2c(1): ret near (%rsp)
1c2d(3): nop (%rax)
1c30(4): add $0x8,%rsp
1c34(3): mov %rcx,%rdx
1c37(3): mov %rdx,%rax
1c3a(1): pop %rbx
1c3b(1): pop %rbp
1c3c(1): ret near (%rsp)

"mdir_name" :
1c40(1): push %rbp
1c41(1): push %rbx
1c42(3): mov %rdi,%rbp
1c45(4): sub $0x8,%rsp
1c49(5): call 0xffffff97(%rip)
1c4e(3): test %rax,%rax
1c51(3): mov %rax,%rbx
1c54(3): setz %al
1c57(3): movzx %al,%eax
1c5a(5): lea 0x1(%rbx,%rax,1),%rdi
1c5f(5): call 0xfffff721(%rip)
1c64(3): test %rax,%rax
1c67(3): mov %rax,%rcx
1c6a(2): jz 0x1c(%rip)
1c6c(3): mov %rbx,%rdx
1c6f(3): mov %rbp,%rsi
1c72(3): mov %rax,%rdi
1c75(5): call 0xfffff6eb(%rip)
1c7a(3): test %rbx,%rbx
1c7d(3): mov %rax,%rcx
1c80(2): jz 0x10(%rip)
1c82(4): mov $0x0,0x0(%rcx,%rbx,1)
1c86(4): add $0x8,%rsp
1c8a(3): mov %rcx,%rax
1c8d(1): pop %rbx
1c8e(1): pop %rbp
1c8f(1): ret near (%rsp)
1c90(3): mov $0x2e,(%rax)
1c93(5): mov $0x1,%ebx
1c98(2): jmp 0xffffffea(%rip)

"last_component" :
1ca0(3): movzx (%rdi),%edx
1ca3(3): mov %rdi,%rax
1ca6(3): cmp $0x2f,%dl
1ca9(2): jnz 0x13(%rip)
1cab(5): nop 0x0(%rax,%rax,1)
1cb0(4): add $0x1,%rax
1cb4(3): movzx (%rax),%edx
1cb7(3): cmp $0x2f,%dl
1cba(2): jz 0xfffffff6(%rip)
1cbc(2): test %dl,%dl
1cbe(2): jz 0x3c(%rip)
1cc0(3): mov %rax,%rcx
1cc3(2): xor %esi,%esi
1cc5(2): jmp 0x20(%rip)
1cc7(9): nop 0x0(%rax,%rax,1)
1cd0(3): test %sil,%sil
1cd3(2): jz 0x7(%rip)
1cd5(3): mov %rcx,%rax
1cd8(2): xor %esi,%esi
1cda(4): add $0x1,%rcx
1cde(3): movzx (%rcx),%edx
1ce1(2): test %dl,%dl
1ce3(2): jz 0x17(%rip)
1ce5(3): cmp $0x2f,%dl
1ce8(2): jnz 0xffffffe8(%rip)
1cea(4): add $0x1,%rcx
1cee(3): movzx (%rcx),%edx
1cf1(5): mov $0x1,%esi
1cf6(2): test %dl,%dl
1cf8(2): jnz 0xffffffed(%rip)
1cfa(2): REP ret near (%rsp)

"base_len" :
1d00(1): push %rbx
1d01(3): mov %rdi,%rbx
1d04(5): call 0xfffff5ac(%rip)
1d09(4): cmp $0x1,%rax
1d0d(2): jbe 0xd(%rip)
1d0f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
1d14(4): lea 0xffffffff(%rax),%rdx
1d18(2): jz 0x10(%rip)
1d1a(1): pop %rbx
1d1b(1): ret near (%rsp)
1d1c(4): nop 0x0(%rax)
1d20(3): mov %rax,%rdx
1d23(5): nop 0x0(%rax,%rax,1)
1d28(4): cmp $0x1,%rdx
1d2c(2): jz 0x14(%rip)
1d2e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
1d33(4): lea 0xffffffff(%rdx),%rax
1d37(2): jz 0xffffffe9(%rip)
1d39(3): mov %rdx,%rax
1d3c(1): pop %rbx
1d3d(1): ret near (%rsp)
1d3e(2): nop 
1d40(5): mov $0x1,%eax
1d45(1): pop %rbx
1d46(1): ret near (%rsp)

"set_program_name" :
1d50(3): test %rdi,%rdi
1d53(1): push %rbx
1d54(2): jz 0x79(%rip)
1d56(5): mov $0x2f,%esi
1d5b(3): mov %rdi,%rbx
1d5e(5): call 0xfffff5a2(%rip)
1d63(3): test %rax,%rax
1d66(2): jz 0x57(%rip)
1d68(4): lea 0x1(%rax),%r8
1d6c(3): mov %r8,%rdx
1d6f(3): sub %rbx,%rdx
1d72(4): cmp $0x6,%rdx
1d76(2): jle 0x47(%rip)
1d78(4): lea 0xfffffffa(%rax),%rsi
1d7c(7): lea 0x2d2d(%rip),%rdi
1d83(5): mov $0x7,%ecx
1d88(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d8a(3): setnbe %dl
1d8d(3): sbb $0x0,%dl
1d90(2): test %dl,%dl
1d92(2): jnz 0x2b(%rip)
1d94(7): lea 0x2d1d(%rip),%rdi
1d9b(5): mov $0x3,%ecx
1da0(3): mov %r8,%rsi
1da3(3): mov %r8,%rbx
1da6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1da8(3): setnbe %dl
1dab(3): sbb $0x0,%dl
1dae(2): test %dl,%dl
1db0(2): jnz 0xd(%rip)
1db2(4): lea 0x4(%rax),%rbx
1db6(7): mov %rbx,0x2052c3(%rip)
1dbd(7): mov %rbx,0x2052fc(%rip)
1dc4(7): mov %rbx,0x2052cd(%rip)
1dcb(1): pop %rbx
1dcc(1): ret near (%rsp)
1dcd(7): mov 0x2052cc(%rip),%rcx
1dd4(7): lea 0x2c9d(%rip),%rdi
1ddb(5): mov $0x37,%edx
1de0(5): mov $0x1,%esi
1de5(5): call 0xfffff65b(%rip)
1dea(5): call 0xfffff426(%rip)

"gettext_quote.part.1" :
1df0(1): push %rbp
1df1(1): push %rbx
1df2(3): mov %rdi,%rbp
1df5(2): mov %esi,%ebx
1df7(4): sub $0x8,%rsp
1dfb(5): call 0x26a5(%rip)
1e00(3): movzx (%rax),%edx
1e03(3): and $0xdf,%edx
1e06(3): cmp $0x55,%dl
1e09(2): jz 0x77(%rip)
1e0b(3): cmp $0x47,%dl
1e0e(2): jz 0x22(%rip)
1e10(7): lea 0x2cb4(%rip),%rax
1e17(7): lea 0x2caf(%rip),%rdx
1e1e(3): cmp $0x9,%ebx
1e21(4): cmovne %rdx,%rax
1e25(4): add $0x8,%rsp
1e29(1): pop %rbx
1e2a(1): pop %rbp
1e2b(1): ret near (%rsp)
1e2c(4): nop 0x0(%rax)
1e30(4): movzx 0x1(%rax),%edx
1e34(3): and $0xdf,%edx
1e37(3): cmp $0x42,%dl
1e3a(2): jnz 0xffffffd6(%rip)
1e3c(4): cmp $0x31,0x2(%rax)
1e40(2): jnz 0xffffffd0(%rip)
1e42(4): cmp $0x38,0x3(%rax)
1e46(2): jnz 0xffffffca(%rip)
1e48(4): cmp $0x30,0x4(%rax)
1e4c(2): jnz 0xffffffc4(%rip)
1e4e(4): cmp $0x33,0x5(%rax)
1e52(2): jnz 0xffffffbe(%rip)
1e54(4): cmp $0x30,0x6(%rax)
1e58(2): jnz 0xffffffb8(%rip)
1e5a(4): cmp $0x0,0x7(%rax)
1e5e(2): jnz 0xffffffb2(%rip)
1e60(4): cmp $0x60,0x0(%rbp)
1e64(7): lea 0x2c59(%rip),%rax
1e6b(7): lea 0x2c56(%rip),%rdx
1e72(4): cmovne %rdx,%rax
1e76(4): add $0x8,%rsp
1e7a(1): pop %rbx
1e7b(1): pop %rbp
1e7c(1): ret near (%rsp)
1e7d(3): nop (%rax)
1e80(4): movzx 0x1(%rax),%edx
1e84(3): and $0xdf,%edx
1e87(3): cmp $0x54,%dl
1e8a(2): jnz 0xffffff86(%rip)
1e8c(4): movzx 0x2(%rax),%edx
1e90(3): and $0xdf,%edx
1e93(3): cmp $0x46,%dl
1e96(6): jnz 0xffffff7a(%rip)
1e9c(4): cmp $0x2d,0x3(%rax)
1ea0(6): jnz 0xffffff70(%rip)
1ea6(4): cmp $0x38,0x4(%rax)
1eaa(6): jnz 0xffffff66(%rip)
1eb0(4): cmp $0x0,0x5(%rax)
1eb4(6): jnz 0xffffff5c(%rip)
1eba(4): cmp $0x60,0x0(%rbp)
1ebe(7): lea 0x2bf7(%rip),%rax
1ec5(7): lea 0x2bf4(%rip),%rdx
1ecc(4): cmovne %rdx,%rax
1ed0(4): add $0x8,%rsp
1ed4(1): pop %rbx
1ed5(1): pop %rbp
1ed6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1ee0(2): push %r15
1ee2(2): push %r14
1ee4(3): mov %r8d,%r15d
1ee7(2): push %r13
1ee9(2): push %r12
1eeb(3): mov %rdi,%r14
1eee(1): push %rbp
1eef(1): push %rbx
1ef0(3): mov %r9d,%ebx
1ef3(3): mov %rsi,%r13
1ef6(3): mov %rcx,%rbp
1ef9(3): and $0x2,%ebx
1efc(7): sub $0xb8,%rsp
1f03(8): mov 0xf0(%rsp),%rax
1f0b(5): mov %rdx,0x10(%rsp)
1f10(5): mov %r8d,0x8(%rsp)
1f15(5): mov %r9d,0x78(%rsp)
1f1a(5): mov %rax,0x20(%rsp)
1f1f(8): mov 0xf8(%rsp),%rax
1f27(5): mov %rax,0x68(%rsp)
1f2c(8): mov 0x100(%rsp),%rax
1f34(5): mov %rax,0x60(%rsp)
1f39(9): mov $0x28,%rax
1f42(8): mov %rax,0xa8(%rsp)
1f4a(2): xor %eax,%eax
1f4c(5): call 0xfffff354(%rip)
1f51(4): cmp $0xa,%r15d
1f55(5): mov %rax,0x58(%rsp)
1f5a(6): jnbe 0x11b5(%rip)
1f60(7): lea 0x2bb9(%rip),%rcx
1f67(3): mov %r15d,%edx
1f6a(4): movsxd 0x0(%rcx,%rdx,4),%rax
1f6e(3): add %rcx,%rax
1f71(2): jmp %rax
1f73(5): mov $0x1,0xe(%rsp)
1f78(5): mov $0x0,0x7c(%rsp)
1f7d(3): xor %r12d,%r12d
1f80(9): mov $0x0,0x50(%rsp)
1f89(5): mov $0x1,0xf(%rsp)
1f8e(5): mov $0x0,0xd(%rsp)
1f93(7): lea 0x2b33(%rip),%rax
1f9a(9): mov $0x1,0x18(%rsp)
1fa3(3): xor %r15d,%r15d
1fa6(8): mov $0x2,0x8(%rsp)
1fae(5): mov %rax,0x48(%rsp)
1fb3(3): xor %r11d,%r11d
1fb6(3): mov %rbp,%rax
1fb9(3): mov %r12d,%r8d
1fbc(3): mov %r11,%rbp
1fbf(3): mov %rax,%r11
1fc2(6): nop 0x0(%rax,%rax,1)
1fc8(3): cmp %rbp,%r11
1fcb(4): setnz %r12b
1fcf(4): cmp $0xffffffff,%r11
1fd3(2): jnz 0xf(%rip)
1fd5(5): mov 0x10(%rsp),%rax
1fda(4): cmp $0x0,0x0(%rax,%rbp,1)
1fde(4): setnz %r12b
1fe2(3): test %r12b,%r12b
1fe5(6): jz 0x65b(%rip)
1feb(5): cmp $0x2,0x8(%rsp)
1ff0(5): mov 0x10(%rsp),%rdi
1ff5(4): lea 0x0(%rdi,%rbp,1),%r9
1ff9(3): setnz %al
1ffc(4): and 0xd(%rsp),%al
2000(3): mov %eax,%r10d
2003(6): jz 0xad(%rip)
2009(5): mov 0x18(%rsp),%rax
200e(3): test %rax,%rax
2011(6): jz 0x42f(%rip)
2017(4): cmp $0xffffffff,%r11
201b(5): lea 0x0(%rbp,%rax,1),%rbx
2020(2): jnz 0x30(%rip)
2022(4): cmp $0x1,%rax
2026(2): jbe 0x2a(%rip)
2028(5): mov %r8b,0x38(%rsp)
202d(5): mov %r10b,0x30(%rsp)
2032(5): mov %r9,0x28(%rsp)
2037(5): call 0xfffff279(%rip)
203c(6): movzx 0x38(%rsp),%r8d
2042(6): movzx 0x30(%rsp),%r10d
2048(3): mov %rax,%r11
204b(5): mov 0x28(%rsp),%r9
2050(3): cmp %r11,%rbx
2053(5): mov %r10b,0x28(%rsp)
2058(6): jnbe 0x5b8(%rip)
205e(5): mov 0x18(%rsp),%rdx
2063(5): mov 0x48(%rsp),%rsi
2068(3): mov %r9,%rdi
206b(5): mov %r11,0x40(%rsp)
2070(5): mov %r8b,0x38(%rsp)
2075(5): mov %r9,0x30(%rsp)
207a(5): call 0xfffff2b6(%rip)
207f(2): test %eax,%eax
2081(5): mov 0x30(%rsp),%r9
2086(6): movzx 0x38(%rsp),%r8d
208c(5): mov 0x40(%rsp),%r11
2091(6): jnz 0x57f(%rip)
2097(5): cmp $0x0,0xf(%rsp)
209c(6): movzx 0x28(%rsp),%r10d
20a2(6): jnz 0xf83(%rip)
20a8(8): nop 0x0(%rax,%rax,1)
20b0(4): movzx (%r9),%ebx
20b4(3): cmp $0x7e,%bl
20b7(6): jnbe 0x321(%rip)
20bd(7): lea 0x2a88(%rip),%rcx
20c4(3): movzx %bl,%edx
20c7(4): movsxd 0x0(%rcx,%rdx,4),%rax
20cb(3): add %rcx,%rax
20ce(2): jmp %rax
20d0(3): xor %r10d,%r10d
20d3(4): cmp $0x1,%r11
20d7(3): setnz %al
20da(4): cmp $0xffffffff,%r11
20de(2): jnz 0xe(%rip)
20e0(5): mov 0x10(%rsp),%rax
20e5(4): cmp $0x0,0x1(%rax)
20e9(3): setnz %al
20ec(5): cmp $0x2,0x8(%rsp)
20f1(3): setz %dl
20f4(2): test %al,%al
20f6(6): jz 0x252(%rip)
20fc(3): xor %r12d,%r12d
20ff(2): xor %eax,%eax
2101(7): nop 0x0(%rax)
2108(5): cmp $0x1,0xd(%rsp)
210d(6): jnz 0x115(%rip)
2113(2): test %dl,%dl
2115(6): jnz 0x10d(%rip)
211b(5): mov 0x20(%rsp),%rsi
2120(3): test %rsi,%rsi
2123(2): jz 0x16(%rip)
2125(2): mov %ebx,%edx
2127(3): shr $0x5,%dl
212a(3): movzx %dl,%edx
212d(3): mov 0x0(%rsi,%rdx,4),%edx
2130(3): bt %ebx,%edx
2133(6): jb 0x150(%rip)
2139(3): test %r10b,%r10b
213c(6): jnz 0x147(%rip)
2142(3): xor $0x1,%eax
2145(4): add $0x1,%rbp
2149(3): and %r8d,%eax
214c(2): test %al,%al
214e(2): jz 0x22(%rip)
2150(3): cmp %r15,%r13
2153(2): jbe 0x7(%rip)
2155(5): mov $0x27,0x0(%r14,%r15,1)
215a(4): lea 0x1(%r15),%rax
215e(3): cmp %rax,%r13
2161(2): jbe 0x8(%rip)
2163(6): mov $0x27,0x1(%r14,%r15,1)
2169(4): add $0x2,%r15
216d(3): xor %r8d,%r8d
2170(3): cmp %r13,%r15
2173(2): jnb 0x6(%rip)
2175(4): mov %bl,0x0(%r14,%r15,1)
2179(5): movzx 0xe(%rsp),%edi
217e(4): add $0x1,%r15
2182(5): mov $0x0,%eax
2187(3): test %r12b,%r12b
218a(3): cmove %eax,%edi
218d(5): mov %dil,0xe(%rsp)
2192(5): jmp 0xfffffe36(%rip)
2197(9): nop 0x0(%rax,%rax,1)
21a0(3): xor %r10d,%r10d
21a3(4): mov 0x8(%rsp),%eax
21a7(3): cmp $0x2,%eax
21aa(6): jz 0x5be(%rip)
21b0(3): cmp $0x5,%eax
21b3(6): jz 0x575(%rip)
21b9(3): cmp $0x2,%eax
21bc(5): mov $0x3f,%ebx
21c1(3): setz %dl
21c4(3): xor %r12d,%r12d
21c7(2): xor %eax,%eax
21c9(5): jmp 0xffffff3f(%rip)
21ce(2): nop 
21d0(3): xor %r10d,%r10d
21d3(5): cmp $0x2,0x8(%rsp)
21d8(6): jz 0x508(%rip)
21de(5): mov %r12b,0x7c(%rsp)
21e3(2): xor %edx,%edx
21e5(2): xor %eax,%eax
21e7(5): mov $0x27,%ebx
21ec(5): jmp 0xffffff1c(%rip)
21f1(7): nop 0x0(%rax)
21f8(5): mov $0x9,%edx
21fd(5): mov $0x74,%ebx
2202(5): cmp $0x2,0x8(%rsp)
2207(3): setz %al
220a(4): and 0xf(%rsp),%al
220e(6): jnz 0x150(%rip)
2214(5): cmp $0x0,0xd(%rsp)
2219(2): jnz 0x67(%rip)
221b(2): mov %edx,%ebx
221d(3): xor %r12d,%r12d
2220(2): xor %eax,%eax
2222(5): cmp $0x0,0xf(%rsp)
2227(6): jnz 0xfffffef4(%rip)
222d(5): jmp 0xffffff0c(%rip)
2232(6): nop 0x0(%rax,%rax,1)
2238(5): mov $0x8,%edx
223d(5): mov $0x62,%ebx
2242(2): jmp 0xffffffd2(%rip)
2244(4): nop 0x0(%rax)
2248(5): cmp $0x2,0x8(%rsp)
224d(6): jz 0x3d3(%rip)
2253(5): cmp $0x0,0xd(%rsp)
2258(6): jz 0x218(%rip)
225e(5): cmp $0x0,0xf(%rsp)
2263(6): jz 0x20d(%rip)
2269(6): cmp $0x0,0x18(%rsp)
226f(6): jnz 0x3bc(%rip)
2275(5): mov $0x5c,%ebx
227a(6): nop 0x0(%rax,%rax,1)
2280(3): xor %r12d,%r12d
2283(5): cmp $0x2,0x8(%rsp)
2288(3): setz %dl
228b(5): cmp $0x0,0xf(%rsp)
2290(2): mov %edx,%eax
2292(6): jnz 0x856(%rip)
2298(3): mov %r8d,%eax
229b(3): xor $0x1,%eax
229e(2): and %dl,%al
22a0(2): jz 0x31(%rip)
22a2(3): cmp %r15,%r13
22a5(2): jbe 0x7(%rip)
22a7(5): mov $0x27,0x0(%r14,%r15,1)
22ac(4): lea 0x1(%r15),%rdx
22b0(3): cmp %rdx,%r13
22b3(2): jbe 0x8(%rip)
22b5(6): mov $0x24,0x1(%r14,%r15,1)
22bb(4): lea 0x2(%r15),%rdx
22bf(3): cmp %rdx,%r13
22c2(2): jbe 0x8(%rip)
22c4(6): mov $0x27,0x2(%r14,%r15,1)
22ca(4): add $0x3,%r15
22ce(3): mov %eax,%r8d
22d1(3): cmp %r15,%r13
22d4(2): jbe 0x7(%rip)
22d6(5): mov $0x5c,0x0(%r14,%r15,1)
22db(4): add $0x1,%r15
22df(4): add $0x1,%rbp
22e3(5): jmp 0xfffffe8d(%rip)
22e8(8): nop 0x0(%rax,%rax,1)
22f0(5): cmp $0x0,0xd(%rsp)
22f5(6): jnz 0x1ce(%rip)
22fb(2): xor %edx,%edx
22fd(5): test $0x1,0x78(%rsp)
2302(6): jz 0xffffff19(%rip)
2308(4): add $0x1,%rbp
230c(5): jmp 0xfffffcbc(%rip)
2311(7): nop 0x0(%rax)
2318(5): cmp $0x2,0x8(%rsp)
231d(3): setz %dl
2320(2): xor %eax,%eax
2322(5): jmp 0xfffffde6(%rip)
2327(9): nop 0x0(%rax,%rax,1)
2330(5): mov $0x7,%edx
2335(5): mov $0x61,%ebx
233a(5): jmp 0xfffffeda(%rip)
233f(1): nop 
2340(5): cmp $0x2,0x8(%rsp)
2345(3): setz %dl
2348(3): test %rbp,%rbp
234b(6): jnz 0xfffffdb1(%rip)
2351(5): movzx 0xf(%rsp),%eax
2356(2): and %dl,%al
2358(6): jz 0xfffffdb0(%rip)
235e(3): mov %r11,%rbp
2361(8): mov $0x2,0x8(%rsp)
2369(5): jmp 0x700(%rip)
236e(2): nop 
2370(5): cmp $0x2,0x8(%rsp)
2375(3): setz %dl
2378(3): xor %r12d,%r12d
237b(2): jmp 0xffffffd6(%rip)
237d(3): nop (%rax)
2380(5): cmp $0x2,0x8(%rsp)
2385(5): mov $0x20,%ebx
238a(3): setz %dl
238d(2): jmp 0xffffffc4(%rip)
238f(1): nop 
2390(5): mov $0xd,%edx
2395(5): mov $0x72,%ebx
239a(5): jmp 0xfffffe68(%rip)
239f(1): nop 
23a0(5): mov $0xc,%edx
23a5(5): mov $0x66,%ebx
23aa(5): jmp 0xfffffe6a(%rip)
23af(1): nop 
23b0(5): mov $0xb,%edx
23b5(5): mov $0x76,%ebx
23ba(5): jmp 0xfffffe5a(%rip)
23bf(1): nop 
23c0(5): mov $0xa,%edx
23c5(5): mov $0x6e,%ebx
23ca(5): jmp 0xfffffe38(%rip)
23cf(1): nop 
23d0(3): xor %r10d,%r10d
23d3(5): nop 0x0(%rax,%rax,1)
23d8(6): cmp $0x1,0x58(%rsp)
23de(6): jnz 0x3aa(%rip)
23e4(5): mov %r11,0x38(%rsp)
23e9(5): mov %r8b,0x30(%rsp)
23ee(5): mov %r10b,0x28(%rsp)
23f3(5): call 0xfffff08d(%rip)
23f8(3): mov (%rax),%rcx
23fb(3): movzx %bl,%edx
23fe(6): movzx 0x28(%rsp),%r10d
2404(6): movzx 0x30(%rsp),%r8d
240a(5): mov 0x38(%rsp),%r11
240f(5): mov $0x1,%edi
2414(4): movzx 0x0(%rcx,%rdx,2),%eax
2418(4): and $0x4000,%ax
241c(4): setnz %r12b
2420(3): setz %al
2423(4): and 0xd(%rsp),%al
2427(2): test %al,%al
2429(6): jnz 0x998(%rip)
242f(5): cmp $0x2,0x8(%rsp)
2434(3): setz %dl
2437(5): jmp 0xfffffcd1(%rip)
243c(4): nop 0x0(%rax)
2440(4): movzx (%r9),%ebx
2444(3): cmp $0x7e,%bl
2447(2): jnbe 0xffffff89(%rip)
2449(7): lea 0x28f8(%rip),%rcx
2450(3): movzx %bl,%edx
2453(4): movsxd 0x0(%rcx,%rdx,4),%rax
2457(3): add %rcx,%rax
245a(2): jmp %rax
245c(4): nop 0x0(%rax)
2460(3): xor %r10d,%r10d
2463(5): cmp $0x0,0xd(%rsp)
2468(6): jnz 0xfffffdf6(%rip)
246e(2): nop 
2470(5): mov $0x5c,%edx
2475(5): mov $0x5c,%ebx
247a(5): jmp 0xfffffd9a(%rip)
247f(1): nop 
2480(5): mov $0xc,%edx
2485(3): xor %r10d,%r10d
2488(5): mov $0x66,%ebx
248d(5): jmp 0xfffffd87(%rip)
2492(6): nop 0x0(%rax,%rax,1)
2498(5): mov $0xa,%edx
249d(3): xor %r10d,%r10d
24a0(5): mov $0x6e,%ebx
24a5(5): jmp 0xfffffd5d(%rip)
24aa(6): nop 0x0(%rax,%rax,1)
24b0(5): mov $0x61,%ebx
24b5(5): jmp 0xfffffdcb(%rip)
24ba(6): nop 0x0(%rax,%rax,1)
24c0(3): xor %r10d,%r10d
24c3(5): cmp $0x2,0x8(%rsp)
24c8(3): setz %dl
24cb(5): cmp $0x0,0xf(%rsp)
24d0(6): jnz 0xb9a(%rip)
24d6(3): mov %r8d,%eax
24d9(3): mov %r15,%rcx
24dc(3): xor $0x1,%eax
24df(2): and %dl,%al
24e1(2): jz 0x2f(%rip)
24e3(3): cmp %r15,%r13
24e6(2): jbe 0x7(%rip)
24e8(5): mov $0x27,0x0(%r14,%r15,1)
24ed(4): lea 0x1(%r15),%rcx
24f1(3): cmp %rcx,%r13
24f4(2): jbe 0x8(%rip)
24f6(6): mov $0x24,0x1(%r14,%r15,1)
24fc(4): lea 0x2(%r15),%rcx
2500(3): cmp %rcx,%r13
2503(6): jnbe 0x636(%rip)
2509(4): lea 0x3(%r15),%rcx
250d(3): mov %eax,%r8d
2510(3): cmp %rcx,%r13
2513(2): jbe 0x7(%rip)
2515(5): mov $0x5c,0x0(%r14,%rcx,1)
251a(5): cmp $0x2,0x8(%rsp)
251f(4): lea 0x1(%rcx),%r15
2523(6): jz 0x606(%rip)
2529(4): lea 0x1(%rbp),%rax
252d(3): cmp %r11,%rax
2530(2): jnb 0x1b(%rip)
2532(5): mov 0x10(%rsp),%rax
2537(5): movzx 0x1(%rax,%rbp,1),%eax
253c(4): mov %al,0x28(%rsp)
2540(3): sub $0x30,%eax
2543(2): cmp $0x9,%al
2545(6): jbe 0x834(%rip)
254b(3): mov %r12d,%eax
254e(5): mov $0x30,%ebx
2553(3): xor %r12d,%r12d
2556(5): jmp 0xfffffbb2(%rip)
255b(5): nop 0x0(%rax,%rax,1)
2560(5): cmp $0x2,0x8(%rsp)
2565(3): mov %r10d,%r12d
2568(3): setz %dl
256b(3): xor %r10d,%r10d
256e(2): xor %eax,%eax
2570(5): jmp 0xfffffb98(%rip)
2575(3): nop (%rax)
2578(5): cmp $0x2,0x8(%rsp)
257d(3): setz %dl
2580(3): xor %r10d,%r10d
2583(5): jmp 0xfffffdc5(%rip)
2588(8): nop 0x0(%rax,%rax,1)
2590(5): cmp $0x2,0x8(%rsp)
2595(3): setz %dl
2598(3): xor %r10d,%r10d
259b(3): xor %r12d,%r12d
259e(5): jmp 0xfffffdb3(%rip)
25a3(5): nop 0x0(%rax,%rax,1)
25a8(5): cmp $0x2,0x8(%rsp)
25ad(3): mov %r10d,%r12d
25b0(5): mov $0x20,%ebx
25b5(3): setz %dl
25b8(3): xor %r10d,%r10d
25bb(5): jmp 0xfffffd96(%rip)
25c0(5): mov $0xd,%edx
25c5(3): xor %r10d,%r10d
25c8(5): mov $0x72,%ebx
25cd(5): jmp 0xfffffc35(%rip)
25d2(6): nop 0x0(%rax,%rax,1)
25d8(5): mov $0x76,%ebx
25dd(5): jmp 0xfffffca3(%rip)
25e2(6): nop 0x0(%rax,%rax,1)
25e8(5): mov $0x9,%edx
25ed(3): xor %r10d,%r10d
25f0(5): mov $0x74,%ebx
25f5(5): jmp 0xfffffc0d(%rip)
25fa(6): nop 0x0(%rax,%rax,1)
2600(5): mov $0x62,%ebx
2605(5): jmp 0xfffffc7b(%rip)
260a(6): nop 0x0(%rax,%rax,1)
2610(3): xor %r10d,%r10d
2613(5): jmp 0xfffffa9d(%rip)
2618(8): nop 0x0(%rax,%rax,1)
2620(5): cmp $0x0,0xf(%rsp)
2625(6): jnz 0x96b(%rip)
262b(4): add $0x1,%rbp
262f(3): mov %r8d,%eax
2632(3): xor %r12d,%r12d
2635(5): mov $0x5c,%ebx
263a(5): jmp 0xfffffb12(%rip)
263f(1): nop 
2640(5): cmp $0x2,0x8(%rsp)
2645(5): movzx 0xf(%rsp),%ebx
264a(3): mov %r8d,%r12d
264d(3): mov %r11,%rbp
2650(3): setz %dl
2653(2): mov %ebx,%eax
2655(3): test %r15,%r15
2658(3): setz %cl
265b(2): and %edx,%eax
265d(2): and %cl,%al
265f(6): jnz 0xa67(%rip)
2665(2): mov %ebx,%eax
2667(3): xor $0x1,%eax
266a(2): and %al,%dl
266c(6): jz 0x970(%rip)
2672(5): cmp $0x0,0x7c(%rsp)
2677(6): jz 0x963(%rip)
267d(5): cmp $0x0,0xe(%rsp)
2682(6): jnz 0x9fb(%rip)
2688(3): test %r13,%r13
268b(3): setz %al
268e(6): cmp $0x0,0x50(%rsp)
2694(3): setnz %dl
2697(2): and %dl,%al
2699(6): jz 0xa23(%rip)
269f(5): mov 0x50(%rsp),%r13
26a4(7): lea 0x2422(%rip),%rbx
26ab(4): mov $0x27,(%r14)
26af(8): mov $0x2,0x8(%rsp)
26b7(6): mov $0x1,%r15d
26bd(9): mov $0x1,0x18(%rsp)
26c6(5): mov $0x0,0xf(%rsp)
26cb(5): mov %rbx,0x48(%rsp)
26d0(4): mov %al,0x7c(%rsp)
26d4(5): jmp 0xfffff8df(%rip)
26d9(7): nop 0x0(%rax)
26e0(5): cmp $0x0,0xf(%rsp)
26e5(6): jnz 0x8ab(%rip)
26eb(3): test %r13,%r13
26ee(6): jz 0x402(%rip)
26f4(2): xor %edx,%edx
26f6(6): cmp $0x0,0x50(%rsp)
26fc(6): jnz 0x3f4(%rip)
2702(5): mov %r13,0x50(%rsp)
2707(4): add $0x3,%r15
270b(2): xor %eax,%eax
270d(5): mov %r12b,0x7c(%rsp)
2712(3): xor %r8d,%r8d
2715(3): mov %rdx,%r13
2718(5): mov $0x27,%ebx
271d(5): jmp 0xfffffa1c(%rip)
2722(6): nop 0x0(%rax,%rax,1)
2728(5): test $0x4,0x78(%rsp)
272d(2): jz 0x23(%rip)
272f(4): lea 0x2(%rbp),%rcx
2733(3): cmp %r11,%rcx
2736(2): jnb 0x1a(%rip)
2738(5): mov 0x10(%rsp),%rax
273d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2742(6): jz 0x790(%rip)
2748(8): nop 0x0(%rax,%rax,1)
2750(2): xor %edx,%edx
2752(3): xor %r12d,%r12d
2755(2): xor %eax,%eax
2757(5): mov $0x3f,%ebx
275c(5): jmp 0xfffff9ac(%rip)
2761(7): nop 0x0(%rax)
2768(5): cmp $0x0,0xf(%rsp)
276d(6): jnz 0x823(%rip)
2773(3): xor %r12d,%r12d
2776(2): xor %eax,%eax
2778(5): mov $0x3f,%ebx
277d(5): jmp 0xfffff9bc(%rip)
2782(6): nop 0x0(%rax,%rax,1)
2788(8): lea 0xa0(%rsp),%rax
2790(4): cmp $0xffffffff,%r11
2794(c): mov $0x0,0xa0(%rsp)
27a0(5): mov %rax,0x28(%rsp)
27a5(2): jnz 0x2f(%rip)
27a7(5): mov 0x10(%rsp),%rdi
27ac(5): mov %r8b,0x40(%rsp)
27b1(5): mov %r10b,0x38(%rsp)
27b6(5): mov %r9,0x30(%rsp)
27bb(5): call 0xffffeaf5(%rip)
27c0(6): movzx 0x40(%rsp),%r8d
27c6(6): movzx 0x38(%rsp),%r10d
27cc(3): mov %rax,%r11
27cf(5): mov 0x30(%rsp),%r9
27d4(8): lea 0x9c(%rsp),%rax
27dc(2): xor %ecx,%ecx
27de(4): mov %bl,0x7e(%rsp)
27e2(5): mov %r8b,0x7d(%rsp)
27e7(3): mov %rcx,%rbx
27ea(8): mov %r9,0x88(%rsp)
27f2(5): mov %rax,0x38(%rsp)
27f7(5): mov %r10b,0x7f(%rsp)
27fc(8): mov %r15,0x80(%rsp)
2804(5): mov %r14,0x40(%rsp)
2809(5): mov %r13,0x70(%rsp)
280e(5): mov %r11,0x30(%rsp)
2813(5): mov 0x10(%rsp),%rax
2818(5): lea 0x0(%rbp,%rbx,1),%r14
281d(5): mov 0x30(%rsp),%rdx
2822(5): mov 0x28(%rsp),%rcx
2827(5): mov 0x38(%rsp),%rdi
282c(4): lea 0x0(%rax,%r14,1),%r13
2830(3): sub %r14,%rdx
2833(3): mov %r13,%rsi
2836(5): call 0x1afa(%rip)
283b(3): test %rax,%rax
283e(3): mov %rax,%r15
2841(2): jz 0x50(%rip)
2843(4): cmp $0xffffffff,%rax
2847(6): jz 0x61e(%rip)
284d(4): cmp $0xfffffffe,%rax
2851(6): jz 0x5a0(%rip)
2857(5): cmp $0x2,0x8(%rsp)
285c(3): setz %al
285f(4): and 0xf(%rsp),%al
2863(6): jnz 0x19d(%rip)
2869(7): mov 0x9c(%rsp),%edi
2870(5): call 0xffffec00(%rip)
2875(5): mov 0x28(%rsp),%rdi
287a(2): test %eax,%eax
287c(5): mov $0x0,%eax
2881(4): cmove %eax,%r12d
2885(3): add %r15,%rbx
2888(5): call 0xffffebd8(%rip)
288d(2): test %eax,%eax
288f(2): jz 0xffffff84(%rip)
2891(3): mov %r12d,%edx
2894(3): mov %rbx,%rdi
2897(6): movzx 0x7d(%rsp),%r8d
289d(3): xor $0x1,%edx
28a0(5): movzx 0x7e(%rsp),%ebx
28a5(6): movzx 0x7f(%rsp),%r10d
28ab(4): and 0xd(%rsp),%dl
28af(8): mov 0x80(%rsp),%r15
28b7(5): mov 0x40(%rsp),%r14
28bc(5): mov 0x70(%rsp),%r13
28c1(5): mov 0x30(%rsp),%r11
28c6(4): cmp $0x1,%rdi
28ca(6): jbe 0x601(%rip)
28d0(3): mov %rdi,%rcx
28d3(2): xor %esi,%esi
28d5(6): movzx 0xf(%rsp),%r9d
28db(3): add %rbp,%rcx
28de(5): mov 0x10(%rsp),%rdi
28e3(5): jmp 0xbb(%rip)
28e8(8): nop 0x0(%rax,%rax,1)
28f0(5): cmp $0x2,0x8(%rsp)
28f5(3): setz %al
28f8(3): test %r9b,%r9b
28fb(6): jnz 0x4b5(%rip)
2901(3): mov %r8d,%esi
2904(3): xor $0x1,%esi
2907(3): and %sil,%al
290a(2): jz 0x31(%rip)
290c(3): cmp %r15,%r13
290f(2): jbe 0x7(%rip)
2911(5): mov $0x27,0x0(%r14,%r15,1)
2916(4): lea 0x1(%r15),%rsi
291a(3): cmp %rsi,%r13
291d(2): jbe 0x8(%rip)
291f(6): mov $0x24,0x1(%r14,%r15,1)
2925(4): lea 0x2(%r15),%rsi
2929(3): cmp %rsi,%r13
292c(2): jbe 0x8(%rip)
292e(6): mov $0x27,0x2(%r14,%r15,1)
2934(4): add $0x3,%r15
2938(3): mov %eax,%r8d
293b(3): cmp %r15,%r13
293e(2): jbe 0x7(%rip)
2940(5): mov $0x5c,0x0(%r14,%r15,1)
2945(4): lea 0x1(%r15),%rax
2949(3): cmp %rax,%r13
294c(2): jbe 0xf(%rip)
294e(2): mov %ebx,%eax
2950(3): shr $0x6,%al
2953(3): add $0x30,%eax
2956(5): mov %al,0x1(%r14,%r15,1)
295b(4): lea 0x2(%r15),%rax
295f(3): cmp %rax,%r13
2962(2): jbe 0x12(%rip)
2964(2): mov %ebx,%eax
2966(3): shr $0x3,%al
2969(3): and $0x7,%eax
296c(3): add $0x30,%eax
296f(5): mov %al,0x2(%r14,%r15,1)
2974(3): and $0x7,%ebx
2977(4): add $0x1,%rbp
297b(4): add $0x3,%r15
297f(3): add $0x30,%ebx
2982(3): cmp %rcx,%rbp
2985(6): jnb 0xfffff7eb(%rip)
298b(2): mov %edx,%esi
298d(3): cmp %r15,%r13
2990(2): jbe 0x6(%rip)
2992(4): mov %bl,0x0(%r14,%r15,1)
2996(4): movzx 0x0(%rdi,%rbp,1),%ebx
299a(4): add $0x1,%r15
299e(2): test %dl,%dl
29a0(6): jnz 0xffffff50(%rip)
29a6(2): mov %esi,%eax
29a8(3): xor $0x1,%eax
29ab(3): and %r8d,%eax
29ae(3): test %r10b,%r10b
29b1(2): jz 0x10(%rip)
29b3(3): cmp %r15,%r13
29b6(2): jbe 0x7(%rip)
29b8(5): mov $0x5c,0x0(%r14,%r15,1)
29bd(4): add $0x1,%r15
29c1(4): add $0x1,%rbp
29c5(3): cmp %rcx,%rbp
29c8(6): jnb 0xfffff784(%rip)
29ce(2): test %al,%al
29d0(6): jz 0x3fe(%rip)
29d6(3): cmp %r15,%r13
29d9(2): jbe 0x7(%rip)
29db(5): mov $0x27,0x0(%r14,%r15,1)
29e0(4): lea 0x1(%r15),%rax
29e4(3): cmp %rax,%r13
29e7(2): jbe 0x8(%rip)
29e9(6): mov $0x27,0x1(%r14,%r15,1)
29ef(4): add $0x2,%r15
29f3(3): xor %r10d,%r10d
29f6(3): xor %r8d,%r8d
29f9(2): jmp 0xffffff94(%rip)
29fb(5): nop 0x0(%rax,%rax,1)
2a00(4): cmp $0x1,%r15
2a04(6): jz 0xfffffe65(%rip)
2a0a(5): mov 0x10(%rsp),%rdi
2a0f(4): lea 0x0(%rdi,%r15,1),%rcx
2a13(5): lea 0x1(%rdi,%r14,1),%rdx
2a18(4): lea 0x0(%rcx,%r14,1),%r8
2a1c(2): jmp 0x11(%rip)
2a1e(2): nop 
2a20(4): add $0x1,%rdx
2a24(3): cmp %rdx,%r8
2a27(6): jz 0xfffffe42(%rip)
2a2d(3): movzx (%rdx),%ecx
2a30(3): sub $0x5b,%ecx
2a33(3): cmp $0x21,%cl
2a36(2): jnbe 0xffffffea(%rip)
2a38(5): mov $0x1,%esi
2a3d(3): shl/sal %cl,%rsi
2a40(3): mov %rsi,%rcx
2a43(a): mov $0x8589934635,%rsi
2a4d(3): test %rsi,%rcx
2a50(2): jz 0xffffffd0(%rip)
2a52(5): mov 0x40(%rsp),%r14
2a57(5): mov 0x70(%rsp),%r13
2a5c(5): mov 0x30(%rsp),%rbp
2a61(8): mov $0x2,0x8(%rsp)
2a69(5): cmp $0x0,0xd(%rsp)
2a6e(2): jz 0x12(%rip)
2a70(2): test %al,%al
2a72(5): mov $0x4,%eax
2a77(5): cmove 0x8(%rsp),%eax
2a7c(4): mov %eax,0x8(%rsp)
2a80(4): sub $0x8,%rsp
2a84(3): mov %rbp,%rcx
2a87(3): mov %r13,%rsi
2a8a(4): push 0x68(%rsp)
2a8e(4): push 0x78(%rsp)
2a92(3): mov %r14,%rdi
2a95(2): push $0x0
2a97(8): mov 0x98(%rsp),%r9d
2a9f(5): mov 0x28(%rsp),%r8d
2aa4(5): mov 0x30(%rsp),%rdx
2aa9(4): and $0xfd,%r9d
2aad(5): call 0xfffff433(%rip)
2ab2(4): add $0x20,%rsp
2ab6(3): mov %rax,%r15
2ab9(8): mov 0xa8(%rsp),%rbx
2ac1(9): xor $0x28,%rbx
2aca(3): mov %r15,%rax
2acd(6): jnz 0x606(%rip)
2ad3(7): add $0xb8,%rsp
2ada(1): pop %rbx
2adb(1): pop %rbp
2adc(2): pop %r12
2ade(2): pop %r13
2ae0(2): pop %r14
2ae2(2): pop %r15
2ae4(1): ret near (%rsp)
2ae5(3): nop (%rax)
2ae8(3): mov %r11,%rbp
2aeb(5): jmp 0xffffff7e(%rip)
2af0(3): cmp %r15,%r13
2af3(2): jbe 0x7(%rip)
2af5(5): mov $0x27,0x0(%r14,%r15,1)
2afa(4): lea 0x1(%r15),%rax
2afe(3): cmp %rax,%r13
2b01(2): jbe 0x8(%rip)
2b03(6): mov $0x5c,0x1(%r14,%r15,1)
2b09(4): lea 0x2(%r15),%rax
2b0d(3): cmp %rax,%r13
2b10(6): jbe 0x5f2(%rip)
2b16(3): mov %r13,%rdx
2b19(6): mov $0x27,0x2(%r14,%r15,1)
2b1f(5): mov 0x50(%rsp),%r13
2b24(5): jmp 0xfffffbde(%rip)
2b29(3): mov %r12d,%eax
2b2c(5): mov $0x30,%ebx
2b31(3): xor %r12d,%r12d
2b34(5): jmp 0xfffff605(%rip)
2b39(6): mov $0x27,0x2(%r14,%r15,1)
2b3f(5): jmp 0xfffff9ca(%rip)
2b44(2): test %ebx,%ebx
2b46(6): jnz 0xfffff42d(%rip)
2b4c(5): mov $0x1,0xd(%rsp)
2b51(3): test %r13,%r13
2b54(6): jnz 0x596(%rip)
2b5a(7): lea 0x1f6c(%rip),%rax
2b61(9): mov $0x0,0x50(%rsp)
2b6a(5): mov $0x1,0xe(%rsp)
2b6f(5): mov $0x0,0x7c(%rsp)
2b74(3): xor %r12d,%r12d
2b77(5): mov $0x0,0xf(%rsp)
2b7c(9): mov $0x1,0x18(%rsp)
2b85(5): mov %rax,0x48(%rsp)
2b8a(6): mov $0x1,%r15d
2b90(8): mov $0x2,0x8(%rsp)
2b98(5): jmp 0xfffff41b(%rip)
2b9d(3): nop (%rax)
2ba0(2): test %ebx,%ebx
2ba2(6): jnz 0x3fb(%rip)
2ba8(3): test %r13,%r13
2bab(6): jz 0x22b(%rip)
2bb1(4): mov $0x22,(%r14)
2bb5(5): mov $0x1,0xe(%rsp)
2bba(3): xor %r12d,%r12d
2bbd(5): mov $0x0,0x7c(%rsp)
2bc2(9): mov $0x0,0x50(%rsp)
2bcb(7): lea 0x1ef9(%rip),%rax
2bd2(5): mov $0x0,0xf(%rsp)
2bd7(5): mov $0x1,0xd(%rsp)
2bdc(9): mov $0x1,0x18(%rsp)
2be5(6): mov $0x1,%r15d
2beb(5): mov %rax,0x48(%rsp)
2bf0(5): jmp 0xfffff3c3(%rip)
2bf5(7): lea 0x1ecf(%rip),%rax
2bfc(5): mov $0x1,0xe(%rsp)
2c01(5): mov $0x0,0x7c(%rsp)
2c06(3): xor %r12d,%r12d
2c09(9): mov $0x0,0x50(%rsp)
2c12(5): mov $0x1,0xf(%rsp)
2c17(5): mov $0x1,0xd(%rsp)
2c1c(9): mov $0x1,0x18(%rsp)
2c25(3): xor %r15d,%r15d
2c28(5): mov %rax,0x48(%rsp)
2c2d(8): mov $0x5,0x8(%rsp)
2c35(5): jmp 0xfffff37e(%rip)
2c3a(5): mov $0x1,0xe(%rsp)
2c3f(5): mov $0x0,0x7c(%rsp)
2c44(3): xor %r12d,%r12d
2c47(9): mov $0x0,0x50(%rsp)
2c50(5): mov $0x0,0xf(%rsp)
2c55(3): xor %r15d,%r15d
2c58(5): mov $0x1,0xd(%rsp)
2c5d(9): mov $0x0,0x18(%rsp)
2c66(9): mov $0x0,0x48(%rsp)
2c6f(5): jmp 0xfffff344(%rip)
2c74(5): cmp $0xa,0x8(%rsp)
2c79(2): jz 0x58(%rip)
2c7b(7): lea 0x1e4d(%rip),%rsi
2c82(2): xor %edi,%edi
2c84(5): mov $0x5,%edx
2c89(5): call 0xffffe607(%rip)
2c8e(3): mov %rax,%rcx
2c91(5): mov %rax,0x68(%rsp)
2c96(7): lea 0x1e32(%rip),%rax
2c9d(3): cmp %rax,%rcx
2ca0(6): jz 0x39e(%rip)
2ca6(7): lea 0x1e20(%rip),%rsi
2cad(2): xor %edi,%edi
2caf(5): mov $0x5,%edx
2cb4(5): call 0xffffe5dc(%rip)
2cb9(3): mov %rax,%rcx
2cbc(5): mov %rax,0x60(%rsp)
2cc1(7): lea 0x1e05(%rip),%rax
2cc8(3): cmp %rax,%rcx
2ccb(6): jz 0x389(%rip)
2cd1(3): xor %r15d,%r15d
2cd4(2): test %ebx,%ebx
2cd6(6): jz 0x1c7(%rip)
2cdc(2): test %ebx,%ebx
2cde(5): mov 0x60(%rsp),%rbx
2ce3(5): setnz 0xf(%rsp)
2ce8(3): xor %r12d,%r12d
2ceb(3): mov %rbx,%rdi
2cee(5): call 0xffffe5c2(%rip)
2cf3(5): mov %rbx,0x48(%rsp)
2cf8(5): mov %rax,0x18(%rsp)
2cfd(5): mov $0x1,0xe(%rsp)
2d02(5): mov $0x0,0x7c(%rsp)
2d07(9): mov $0x0,0x50(%rsp)
2d10(5): mov $0x1,0xd(%rsp)
2d15(5): jmp 0xfffff29e(%rip)
2d1a(5): mov $0x1,0xe(%rsp)
2d1f(5): mov $0x0,0x7c(%rsp)
2d24(3): xor %r12d,%r12d
2d27(9): mov $0x0,0x50(%rsp)
2d30(5): mov $0x0,0xf(%rsp)
2d35(3): xor %r15d,%r15d
2d38(5): mov $0x0,0xd(%rsp)
2d3d(9): mov $0x0,0x18(%rsp)
2d46(9): mov $0x0,0x48(%rsp)
2d4f(5): jmp 0xfffff264(%rip)
2d54(5): mov $0x1,0xe(%rsp)
2d59(5): mov $0x0,0x7c(%rsp)
2d5e(3): xor %r12d,%r12d
2d61(9): mov $0x0,0x50(%rsp)
2d6a(5): mov $0x1,0xf(%rsp)
2d6f(5): mov $0x1,0xd(%rsp)
2d74(5): jmp 0xfffff21f(%rip)
2d79(3): cmp %r15,%r13
2d7c(2): jbe 0x7(%rip)
2d7e(5): mov $0x30,0x0(%r14,%r15,1)
2d83(4): lea 0x2(%rcx),%rax
2d87(3): cmp %rax,%r13
2d8a(2): jbe 0x8(%rip)
2d8c(6): mov $0x30,0x2(%r14,%rcx,1)
2d92(3): mov %r12d,%eax
2d95(4): lea 0x3(%rcx),%r15
2d99(3): xor %r12d,%r12d
2d9c(5): mov $0x30,%ebx
2da1(5): jmp 0xfffff367(%rip)
2da6(a): nop 0x0(%rax,%rax,1)
2db0(5): movzx 0xf(%rsp),%ebx
2db5(3): mov %r11,%rbp
2db8(4): mov %bl,0xd(%rsp)
2dbc(5): jmp 0xfffffcad(%rip)
2dc1(5): movzx 0xd(%rsp),%edx
2dc6(3): xor %r12d,%r12d
2dc9(5): jmp 0xfffffb07(%rip)
2dce(3): xor %r10d,%r10d
2dd1(5): jmp 0xfffffbbc(%rip)
2dd6(9): mov $0x0,0x50(%rsp)
2ddf(5): mov $0x1,0xe(%rsp)
2de4(3): xor %r12d,%r12d
2de7(5): mov $0x0,0x7c(%rsp)
2dec(5): jmp 0xfffffddf(%rip)
2df1(5): mov 0x30(%rsp),%r11
2df6(3): mov %r14,%rsi
2df9(3): mov %r13,%rcx
2dfc(3): mov %rbx,%rax
2dff(3): mov %rbx,%rdi
2e02(6): movzx 0x7d(%rsp),%r8d
2e08(5): movzx 0x7e(%rsp),%ebx
2e0d(8): mov 0x88(%rsp),%r9
2e15(3): cmp %r11,%rsi
2e18(6): movzx 0x7f(%rsp),%r10d
2e1e(8): mov 0x80(%rsp),%r15
2e26(5): mov 0x40(%rsp),%r14
2e2b(5): mov 0x70(%rsp),%r13
2e30(2): jnb 0x28(%rip)
2e32(3): cmp $0x0,(%rcx)
2e35(2): jnz 0x12(%rip)
2e37(2): jmp 0x21(%rip)
2e39(7): nop 0x0(%rax)
2e40(5): cmp $0x0,0x0(%r9,%rax,1)
2e45(2): jz 0x10(%rip)
2e47(4): add $0x1,%rax
2e4b(5): lea 0x0(%rbp,%rax,1),%rdx
2e50(3): cmp %rdx,%r11
2e53(2): jnbe 0xffffffed(%rip)
2e55(3): mov %rax,%rdi
2e58(5): movzx 0xd(%rsp),%edx
2e5d(3): xor %r12d,%r12d
2e60(5): jmp 0xfffffa66(%rip)
2e65(3): mov %rbx,%rdi
2e68(6): movzx 0x7d(%rsp),%r8d
2e6e(5): movzx 0x7e(%rsp),%ebx
2e73(6): movzx 0x7f(%rsp),%r10d
2e79(8): mov 0x80(%rsp),%r15
2e81(3): xor %r12d,%r12d
2e84(5): mov 0x40(%rsp),%r14
2e89(5): mov 0x70(%rsp),%r13
2e8e(5): mov 0x30(%rsp),%r11
2e93(5): movzx 0xd(%rsp),%edx
2e98(5): jmp 0xfffffa2e(%rip)
2e9d(5): mov 0x68(%rsp),%rdx
2ea2(3): movzx (%rdx),%eax
2ea5(2): test %al,%al
2ea7(6): jz 0xfffffe35(%rip)
2ead(3): nop (%rax)
2eb0(3): cmp %r15,%r13
2eb3(2): jbe 0x6(%rip)
2eb5(4): mov %al,0x0(%r14,%r15,1)
2eb9(4): add $0x1,%r15
2ebd(5): movzx 0x0(%rdx,%r15,1),%eax
2ec2(2): test %al,%al
2ec4(2): jnz 0xffffffec(%rip)
2ec6(5): jmp 0xfffffe16(%rip)
2ecb(2): mov %edx,%eax
2ecd(5): jmp 0xfffff55a(%rip)
2ed2(4): movzx 0x0(%rax,%rcx,1),%ebx
2ed6(3): cmp $0x3e,%bl
2ed9(6): jnbe 0xfffff877(%rip)
2edf(a): mov $0x8070630310989004800,%rax
2ee9(4): bt %rbx,%rax
2eed(6): jnb 0xfffff863(%rip)
2ef3(5): cmp $0x0,0xf(%rsp)
2ef8(6): jnz 0x1ea(%rip)
2efe(3): cmp %r15,%r13
2f01(2): jbe 0x7(%rip)
2f03(5): mov $0x3f,0x0(%r14,%r15,1)
2f08(4): lea 0x1(%r15),%rax
2f0c(3): cmp %rax,%r13
2f0f(2): jbe 0x8(%rip)
2f11(6): mov $0x22,0x1(%r14,%r15,1)
2f17(4): lea 0x2(%r15),%rax
2f1b(3): cmp %rax,%r13
2f1e(2): jbe 0x8(%rip)
2f20(6): mov $0x22,0x2(%r14,%r15,1)
2f26(4): lea 0x3(%r15),%rax
2f2a(3): cmp %rax,%r13
2f2d(2): jbe 0x8(%rip)
2f2f(6): mov $0x3f,0x3(%r14,%r15,1)
2f35(4): add $0x4,%r15
2f39(2): xor %edx,%edx
2f3b(3): xor %r12d,%r12d
2f3e(2): xor %eax,%eax
2f40(3): mov %rcx,%rbp
2f43(5): jmp 0xfffff1c5(%rip)
2f48(2): test %ebx,%ebx
2f4a(6): jz 0x18e(%rip)
2f50(7): lea 0x1b76(%rip),%rax
2f57(5): mov $0x1,0xe(%rsp)
2f5c(5): mov $0x0,0x7c(%rsp)
2f61(3): xor %r12d,%r12d
2f64(9): mov $0x0,0x50(%rsp)
2f6d(5): mov $0x1,0xf(%rsp)
2f72(5): mov $0x0,0xd(%rsp)
2f77(9): mov $0x1,0x18(%rsp)
2f80(3): xor %r15d,%r15d
2f83(5): mov %rax,0x48(%rsp)
2f88(5): jmp 0xfffff02b(%rip)
2f8d(3): nop (%rax)
2f90(3): mov %r11,%rbp
2f93(5): movzx 0xf(%rsp),%eax
2f98(5): jmp 0xfffffad1(%rip)
2f9d(7): lea 0x1b27(%rip),%rax
2fa4(5): mov $0x1,0xe(%rsp)
2fa9(5): mov $0x0,0x7c(%rsp)
2fae(3): xor %r12d,%r12d
2fb1(9): mov $0x0,0x50(%rsp)
2fba(5): mov $0x1,0xf(%rsp)
2fbf(5): mov $0x1,0xd(%rsp)
2fc4(9): mov $0x1,0x18(%rsp)
2fcd(3): xor %r15d,%r15d
2fd0(5): mov %rax,0x48(%rsp)
2fd5(5): jmp 0xffffefde(%rip)
2fda(2): mov %edx,%eax
2fdc(5): mov 0x48(%rsp),%rbx
2fe1(3): test %rbx,%rbx
2fe4(2): jz 0x2e(%rip)
2fe6(2): test %al,%al
2fe8(2): jz 0x2a(%rip)
2fea(3): movzx (%rbx),%ecx
2fed(3): mov %rbx,%rax
2ff0(2): test %cl,%cl
2ff2(2): jz 0x20(%rip)
2ff4(3): mov %r15,%rdx
2ff7(3): sub %r15,%rax
2ffa(3): cmp %rdx,%r13
2ffd(2): jbe 0x6(%rip)
2fff(4): mov %cl,0x0(%r14,%rdx,1)
3003(4): add $0x1,%rdx
3007(4): movzx 0x0(%rax,%rdx,1),%ecx
300b(2): test %cl,%cl
300d(2): jnz 0xffffffed(%rip)
300f(3): mov %rdx,%r15
3012(3): cmp %r15,%r13
3015(6): jbe 0xfffffaa4(%rip)
301b(5): mov $0x0,0x0(%r14,%r15,1)
3020(5): jmp 0xfffffa99(%rip)
3025(5): cmp $0x2,0x8(%rsp)
302a(5): movzx 0xf(%rsp),%ebx
302f(3): mov %r11,%rbp
3032(3): setz %al
3035(4): mov %bl,0xd(%rsp)
3039(5): jmp 0xfffffa30(%rip)
303e(4): mov 0x8(%rsp),%esi
3042(3): mov %rcx,%rdi
3045(5): call 0xffffedab(%rip)
304a(5): mov %rax,0x68(%rsp)
304f(5): jmp 0xfffffc57(%rip)
3054(4): mov 0x8(%rsp),%esi
3058(3): mov %rcx,%rdi
305b(5): call 0xffffed95(%rip)
3060(5): mov %rax,0x60(%rsp)
3065(5): jmp 0xfffffc6c(%rip)
306a(5): movzx 0xf(%rsp),%ebx
306f(3): mov %r11,%rbp
3072(2): mov %edx,%eax
3074(4): mov %bl,0xd(%rsp)
3078(5): jmp 0xfffff9f1(%rip)
307d(4): sub $0x8,%rsp
3081(6): mov $0x5,%r8d
3087(3): mov %r11,%rcx
308a(4): push 0x68(%rsp)
308e(4): push 0x78(%rsp)
3092(3): mov %r14,%rdi
3095(4): push 0x38(%rsp)
3099(8): mov 0x98(%rsp),%r9d
30a1(5): mov 0x30(%rsp),%rdx
30a6(5): mov 0x70(%rsp),%rsi
30ab(5): call 0xffffee35(%rip)
30b0(4): add $0x20,%rsp
30b4(3): mov %rax,%r15
30b7(5): jmp 0xfffffa02(%rip)
30bc(5): movzx 0x7c(%rsp),%eax
30c1(5): jmp 0xffffff1b(%rip)
30c6(8): mov $0x2,0x8(%rsp)
30ce(5): jmp 0xfffff99b(%rip)
30d3(5): call 0xffffe1ed(%rip)
30d8(5): mov $0x0,0xd(%rsp)
30dd(5): jmp 0xfffffa74(%rip)
30e2(3): mov %r11,%rbp
30e5(5): jmp 0xfffff99b(%rip)
30ea(5): mov $0x1,0xe(%rsp)
30ef(2): xor %eax,%eax
30f1(3): xor %r12d,%r12d
30f4(9): mov $0x0,0x50(%rsp)
30fd(5): jmp 0xfffff5a7(%rip)
3102(3): mov %r13,%rdx
3105(5): mov 0x50(%rsp),%r13
310a(5): jmp 0xfffff5f8(%rip)
310f(5): call 0xffffe101(%rip)

"quotearg_n_options" :
3120(2): push %r15
3122(2): push %r14
3124(3): movsxd %edi,%r15
3127(2): push %r13
3129(2): push %r12
312b(3): mov %rdx,%r14
312e(1): push %rbp
312f(1): push %rbx
3130(3): mov %rcx,%rbp
3133(4): sub $0x28,%rsp
3137(5): mov %rsi,0x8(%rsp)
313c(5): call 0xffffe0e4(%rip)
3141(3): mov %rax,%r13
3144(2): mov (%rax),%eax
3146(3): test %r15d,%r15d
3149(7): mov 0x203f10(%rip),%rbx
3150(4): mov %eax,0x18(%rsp)
3154(6): js 0x16d(%rip)
315a(7): cmp %r15d,0x203ef7(%rip)
3161(2): jnle 0x64(%rip)
3163(7): cmp $0x7fffffff,%r15d
316a(6): jz 0x15c(%rip)
3170(4): lea 0x1(%r15),%r12d
3174(7): lea 0x203ef5(%rip),%rax
317b(3): movsxd %r12d,%rsi
317e(4): shl/sal $0x4,%rsi
3182(3): cmp %rax,%rbx
3185(6): jz 0x11b(%rip)
318b(3): mov %rbx,%rdi
318e(5): call 0xf72(%rip)
3193(3): mov %rax,%rbx
3196(7): mov %rax,0x203ec3(%rip)
319d(7): movsxd 0x203eb4(%rip),%rdi
31a4(3): mov %r12d,%edx
31a7(2): xor %esi,%esi
31a9(2): sub %edi,%edx
31ab(4): shl/sal $0x4,%rdi
31af(3): movsxd %edx,%rdx
31b2(3): add %rbx,%rdi
31b5(4): shl/sal $0x4,%rdx
31b9(5): call 0xffffe167(%rip)
31be(7): mov %r12d,0x203e93(%rip)
31c5(3): mov 0x4(%rbp),%eax
31c8(4): shl/sal $0x4,%r15
31cc(4): sub $0x8,%rsp
31d0(3): add %r15,%rbx
31d3(4): lea 0x8(%rbp),%r15
31d7(4): mov 0x0(%rbp),%r8d
31db(3): mov (%rbx),%r11
31de(4): mov 0x8(%rbx),%r12
31e2(3): mov %r14,%rcx
31e5(3): or $0x1,%eax
31e8(4): mov %eax,0x24(%rsp)
31ec(3): push 0x30(%rbp)
31ef(3): mov %eax,%r9d
31f2(3): push 0x28(%rbp)
31f5(2): push %r15
31f7(3): mov %r11,%rsi
31fa(5): mov 0x28(%rsp),%rdx
31ff(3): mov %r12,%rdi
3202(5): mov %r11,0x30(%rsp)
3207(5): call 0xffffecd9(%rip)
320c(4): add $0x20,%rsp
3210(5): mov 0x10(%rsp),%r11
3215(3): cmp %rax,%r11
3218(2): jnbe 0x69(%rip)
321a(4): lea 0x1(%rax),%rsi
321e(7): lea 0x203ebb(%rip),%rax
3225(3): cmp %rax,%r12
3228(3): mov %rsi,(%rbx)
322b(2): jz 0x14(%rip)
322d(3): mov %r12,%rdi
3230(5): mov %rsi,0x10(%rsp)
3235(5): call 0xffffdfcb(%rip)
323a(5): mov 0x10(%rsp),%rsi
323f(3): mov %rsi,%rdi
3242(5): mov %rsi,0x10(%rsp)
3247(5): call 0xe59(%rip)
324c(4): sub $0x8,%rsp
3250(4): mov %rax,0x8(%rbx)
3254(4): mov 0x0(%rbp),%r8d
3258(3): push 0x30(%rbp)
325b(3): push 0x28(%rbp)
325e(3): mov %r14,%rcx
3261(2): push %r15
3263(5): mov 0x3c(%rsp),%r9d
3268(3): mov %rax,%rdi
326b(5): mov 0x28(%rsp),%rdx
3270(5): mov 0x30(%rsp),%rsi
3275(3): mov %rax,%r12
3278(5): call 0xffffec68(%rip)
327d(4): add $0x20,%rsp
3281(4): mov 0x18(%rsp),%eax
3285(4): mov %eax,0x0(%r13)
3289(4): add $0x28,%rsp
328d(3): mov %r12,%rax
3290(1): pop %rbx
3291(1): pop %rbp
3292(2): pop %r12
3294(2): pop %r13
3296(2): pop %r14
3298(2): pop %r15
329a(1): ret near (%rsp)
329b(5): nop 0x0(%rax,%rax,1)
32a0(2): xor %edi,%edi
32a2(5): call 0xe5e(%rip)
32a7(8): movdqa 0x203dc1(%rip),%xmm0
32af(3): mov %rax,%rbx
32b2(7): mov %rax,0x203da7(%rip)
32b9(3): movups %xmm0,(%rax)
32bc(5): jmp 0xfffffee1(%rip)
32c1(5): call 0xffffdf4f(%rip)
32c6(5): call 0x102a(%rip)

"clone_quoting_options" :
32d0(2): push %r12
32d2(1): push %rbp
32d3(1): push %rbx
32d4(3): mov %rdi,%rbx
32d7(5): call 0xffffdf49(%rip)
32dc(3): mov (%rax),%r12d
32df(3): mov %rax,%rbp
32e2(7): lea 0x203ef7(%rip),%rax
32e9(3): test %rbx,%rbx
32ec(5): mov $0x38,%esi
32f1(4): cmove %rax,%rbx
32f5(3): mov %rbx,%rdi
32f8(5): call 0xfa8(%rip)
32fd(4): mov %r12d,0x0(%rbp)
3301(1): pop %rbx
3302(1): pop %rbp
3303(2): pop %r12
3305(1): ret near (%rsp)

"get_quoting_style" :
3310(7): lea 0x203ec9(%rip),%rax
3317(3): test %rdi,%rdi
331a(4): cmove %rax,%rdi
331e(2): mov (%rdi),%eax
3320(1): ret near (%rsp)

"set_quoting_style" :
3330(7): lea 0x203ea9(%rip),%rax
3337(3): test %rdi,%rdi
333a(4): cmove %rax,%rdi
333e(2): mov %esi,(%rdi)
3340(1): ret near (%rsp)

"set_char_quoting" :
3350(7): lea 0x203e89(%rip),%rax
3357(3): test %rdi,%rdi
335a(2): mov %esi,%ecx
335c(4): cmove %rax,%rdi
3360(2): mov %esi,%eax
3362(3): and $0x1f,%ecx
3365(3): shr $0x5,%al
3368(3): movzx %al,%eax
336b(5): lea 0x8(%rdi,%rax,4),%rdi
3370(2): mov (%rdi),%esi
3372(2): mov %esi,%eax
3374(2): shr %cl,%eax
3376(2): xor %eax,%edx
3378(3): and $0x1,%eax
337b(3): and $0x1,%edx
337e(2): shl/sal %cl,%edx
3380(2): xor %esi,%edx
3382(2): mov %edx,(%rdi)
3384(1): ret near (%rsp)

"set_quoting_flags" :
3390(7): lea 0x203e49(%rip),%rax
3397(3): test %rdi,%rdi
339a(4): cmove %rax,%rdi
339e(3): mov 0x4(%rdi),%eax
33a1(3): mov %esi,0x4(%rdi)
33a4(1): ret near (%rsp)

"set_custom_quoting" :
33b0(7): lea 0x203e29(%rip),%rax
33b7(3): test %rdi,%rdi
33ba(4): cmove %rax,%rdi
33be(3): test %rsi,%rsi
33c1(6): mov $0xa,(%rdi)
33c7(2): jz 0x10(%rip)
33c9(3): test %rdx,%rdx
33cc(2): jz 0xb(%rip)
33ce(4): mov %rsi,0x28(%rdi)
33d2(4): mov %rdx,0x30(%rdi)
33d6(1): ret near (%rsp)
33d7(4): sub $0x8,%rsp
33db(5): call 0xffffde35(%rip)

"quotearg_buffer" :
33e0(2): push %r15
33e2(2): push %r14
33e4(7): lea 0x203df5(%rip),%rax
33eb(2): push %r13
33ed(2): push %r12
33ef(3): mov %rdi,%r13
33f2(1): push %rbp
33f3(1): push %rbx
33f4(3): mov %r8,%rbx
33f7(3): mov %rsi,%r14
33fa(3): mov %rdx,%r15
33fd(4): sub $0x18,%rsp
3401(3): test %r8,%r8
3404(4): cmove %rax,%rbx
3408(5): mov %rcx,0x8(%rsp)
340d(5): call 0xffffde13(%rip)
3412(3): mov (%rax),%r12d
3415(3): mov %rax,%rbp
3418(4): lea 0x8(%rbx),%rax
341c(4): sub $0x8,%rsp
3420(4): mov 0x4(%rbx),%r9d
3424(3): push 0x30(%rbx)
3427(3): mov (%rbx),%r8d
342a(3): push 0x28(%rbx)
342d(3): mov %r15,%rdx
3430(1): push %rax
3431(5): mov 0x28(%rsp),%rcx
3436(3): mov %r14,%rsi
3439(3): mov %r13,%rdi
343c(5): call 0xffffeaa4(%rip)
3441(4): mov %r12d,0x0(%rbp)
3445(4): add $0x38,%rsp
3449(1): pop %rbx
344a(1): pop %rbp
344b(2): pop %r12
344d(2): pop %r13
344f(2): pop %r14
3451(2): pop %r15
3453(1): ret near (%rsp)

"quotearg_alloc_mem" :
3460(2): push %r15
3462(2): push %r14
3464(7): lea 0x203d75(%rip),%rax
346b(2): push %r13
346d(2): push %r12
346f(3): mov %rdx,%r12
3472(1): push %rbp
3473(1): push %rbx
3474(3): mov %rcx,%rbx
3477(3): mov %rdi,%r14
347a(3): mov %rsi,%r15
347d(4): sub $0x38,%rsp
3481(3): test %rcx,%rcx
3484(4): cmove %rax,%rbx
3488(2): xor %ebp,%ebp
348a(5): call 0xffffdd96(%rip)
348f(3): test %r12,%r12
3492(3): mov %rax,%r13
3495(2): mov (%rax),%eax
3497(4): setz %bpl
349b(3): or 0x4(%rbx),%ebp
349e(4): lea 0x8(%rbx),%r10
34a2(4): sub $0x8,%rsp
34a6(3): mov (%rbx),%r8d
34a9(3): mov %r15,%rcx
34ac(4): mov %eax,0x14(%rsp)
34b0(3): push 0x30(%rbx)
34b3(3): mov %r14,%rdx
34b6(3): push 0x28(%rbx)
34b9(2): push %r10
34bb(2): xor %esi,%esi
34bd(3): mov %ebp,%r9d
34c0(2): xor %edi,%edi
34c2(5): mov %r10,0x40(%rsp)
34c7(5): call 0xffffea19(%rip)
34cc(4): lea 0x1(%rax),%rsi
34d0(5): mov %rax,0x48(%rsp)
34d5(4): add $0x20,%rsp
34d9(3): mov %rsi,%rdi
34dc(5): mov %rsi,0x18(%rsp)
34e1(5): call 0xbbf(%rip)
34e6(5): mov %rax,0x10(%rsp)
34eb(4): sub $0x8,%rsp
34ef(3): push 0x30(%rbx)
34f2(3): push 0x28(%rbx)
34f5(5): mov 0x38(%rsp),%r10
34fa(3): mov %ebp,%r9d
34fd(3): mov (%rbx),%r8d
3500(3): mov %r15,%rcx
3503(3): mov %r14,%rdx
3506(3): mov %rax,%rdi
3509(2): push %r10
350b(5): mov 0x38(%rsp),%rsi
3510(5): call 0xffffe9d0(%rip)
3515(4): mov 0x2c(%rsp),%eax
3519(4): add $0x20,%rsp
351d(3): test %r12,%r12
3520(4): mov %eax,0x0(%r13)
3524(2): jz 0xb(%rip)
3526(5): mov 0x28(%rsp),%r11
352b(4): mov %r11,(%r12)
352f(5): mov 0x10(%rsp),%rax
3534(4): add $0x38,%rsp
3538(1): pop %rbx
3539(1): pop %rbp
353a(2): pop %r12
353c(2): pop %r13
353e(2): pop %r14
3540(2): pop %r15
3542(1): ret near (%rsp)

"quotearg_alloc" :
3550(3): mov %rdx,%rcx
3553(2): xor %edx,%edx
3555(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3560(6): mov 0x203af2(%rip),%eax
3566(2): push %r12
3568(7): mov 0x203af1(%rip),%r12
356f(1): push %rbp
3570(1): push %rbx
3571(3): cmp $0x1,%eax
3574(2): jle 0x2d(%rip)
3576(3): sub $0x2,%eax
3579(5): lea 0x18(%r12),%rbx
357e(4): shl/sal $0x4,%rax
3582(5): lea 0x28(%r12,%rax,1),%rbp
3587(9): nop 0x0(%rax,%rax,1)
3590(3): mov (%rbx),%rdi
3593(4): add $0x10,%rbx
3597(5): call 0xffffdc69(%rip)
359c(3): cmp %rbp,%rbx
359f(2): jnz 0xfffffff1(%rip)
35a1(5): mov 0x8(%r12),%rdi
35a6(7): lea 0x203b33(%rip),%rbx
35ad(3): cmp %rbx,%rdi
35b0(2): jz 0x19(%rip)
35b2(5): call 0xffffdc4e(%rip)
35b7(b): mov $0x100,0x203aae(%rip)
35c2(7): mov %rbx,0x203aaf(%rip)
35c9(7): lea 0x203aa0(%rip),%rbx
35d0(3): cmp %rbx,%r12
35d3(2): jz 0x11(%rip)
35d5(3): mov %r12,%rdi
35d8(5): call 0xffffdc28(%rip)
35dd(7): mov %rbx,0x203a7c(%rip)
35e4(1): pop %rbx
35e5(a): mov $0x1,0x203a69(%rip)
35ef(1): pop %rbp
35f0(2): pop %r12
35f2(1): ret near (%rsp)

"quotearg_n" :
3600(7): lea 0x203bd9(%rip),%rcx
3607(7): mov $0xffffffff,%rdx
360e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3620(7): lea 0x203bb9(%rip),%rcx
3627(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3630(7): lea 0x203ba9(%rip),%rcx
3637(3): mov %rdi,%rsi
363a(7): mov $0xffffffff,%rdx
3641(2): xor %edi,%edi
3643(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3650(7): lea 0x203b89(%rip),%rcx
3657(3): mov %rsi,%rdx
365a(3): mov %rdi,%rsi
365d(2): xor %edi,%edi
365f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3670(4): sub $0x48,%rsp
3674(3): mov %rdx,%rax
3677(9): mov $0x28,%rdx
3680(5): mov %rdx,0x38(%rsp)
3685(2): xor %edx,%edx
3687(3): cmp $0xa,%esi
368a(2): jz 0x6a(%rip)
368c(3): mov %esi,(%rsp)
368f(3): mov %rsp,%rcx
3692(7): mov $0xffffffff,%rdx
3699(3): mov %rax,%rsi
369c(9): mov $0x0,0x4(%rsp)
36a5(9): mov $0x0,0xc(%rsp)
36ae(9): mov $0x0,0x14(%rsp)
36b7(9): mov $0x0,0x1c(%rsp)
36c0(9): mov $0x0,0x24(%rsp)
36c9(9): mov $0x0,0x2c(%rsp)
36d2(8): mov $0x0,0x34(%rsp)
36da(5): call 0xfffffa46(%rip)
36df(5): mov 0x38(%rsp),%rcx
36e4(9): xor $0x28,%rcx
36ed(2): jnz 0xc(%rip)
36ef(4): add $0x48,%rsp
36f3(1): ret near (%rsp)
36f4(5): call 0xffffdb1c(%rip)
36f9(5): call 0xffffdbc7(%rip)

"quotearg_n_style_mem" :
3700(4): sub $0x48,%rsp
3704(3): mov %rdx,%rax
3707(3): mov %rcx,%rdx
370a(9): mov $0x28,%rcx
3713(5): mov %rcx,0x38(%rsp)
3718(2): xor %ecx,%ecx
371a(3): cmp $0xa,%esi
371d(2): jz 0x63(%rip)
371f(3): mov %esi,(%rsp)
3722(3): mov %rsp,%rcx
3725(3): mov %rax,%rsi
3728(9): mov $0x0,0x4(%rsp)
3731(9): mov $0x0,0xc(%rsp)
373a(9): mov $0x0,0x14(%rsp)
3743(9): mov $0x0,0x1c(%rsp)
374c(9): mov $0x0,0x24(%rsp)
3755(9): mov $0x0,0x2c(%rsp)
375e(8): mov $0x0,0x34(%rsp)
3766(5): call 0xfffff9ba(%rip)
376b(5): mov 0x38(%rsp),%rdx
3770(9): xor $0x28,%rdx
3779(2): jnz 0xc(%rip)
377b(4): add $0x48,%rsp
377f(1): ret near (%rsp)
3780(5): call 0xffffda90(%rip)
3785(5): call 0xffffdb3b(%rip)

"quotearg_style" :
3790(3): mov %rsi,%rdx
3793(2): mov %edi,%esi
3795(2): xor %edi,%edi
3797(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
37a0(3): mov %rdx,%rcx
37a3(3): mov %rsi,%rdx
37a6(2): mov %edi,%esi
37a8(2): xor %edi,%edi
37aa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
37b0(4): sub $0x48,%rsp
37b4(2): mov %edx,%ecx
37b6(9): mov $0x28,%rax
37bf(5): mov %rax,0x38(%rsp)
37c4(2): xor %eax,%eax
37c6(7): mov 0x203a43(%rip),%rax
37cd(3): mov %rsp,%r8
37d0(3): and $0x1f,%ecx
37d3(8): movdqa 0x203a05(%rip),%xmm0
37db(5): mov %rax,0x30(%rsp)
37e0(2): mov %edx,%eax
37e2(4): movaps %xmm0,(%rsp)
37e6(3): shr $0x5,%al
37e9(3): movzx %al,%eax
37ec(5): lea 0x8(%r8,%rax,4),%r9
37f1(8): movdqa 0x2039f7(%rip),%xmm0
37f9(5): movaps %xmm0,0x10(%rsp)
37fe(8): movdqa 0x2039fa(%rip),%xmm0
3806(5): movaps %xmm0,0x20(%rsp)
380b(3): mov (%r9),%edx
380e(2): mov %edx,%eax
3810(2): shr %cl,%eax
3812(2): not %eax
3814(3): and $0x1,%eax
3817(2): shl/sal %cl,%eax
3819(3): mov %r8,%rcx
381c(2): xor %edx,%eax
381e(3): mov %rsi,%rdx
3821(3): mov %rdi,%rsi
3824(3): mov %eax,(%r9)
3827(2): xor %edi,%edi
3829(5): call 0xfffff8f7(%rip)
382e(5): mov 0x38(%rsp),%rsi
3833(9): xor $0x28,%rsi
383c(2): jnz 0x7(%rip)
383e(4): add $0x48,%rsp
3842(1): ret near (%rsp)
3843(5): call 0xffffda7d(%rip)

"quotearg_char" :
3850(4): movsx %sil,%edx
3854(7): mov $0xffffffff,%rsi
385b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3860(5): mov $0x3a,%edx
3865(7): mov $0xffffffff,%rsi
386c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3880(5): mov $0x3a,%edx
3885(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3890(4): sub $0x48,%rsp
3894(3): mov %rdx,%rax
3897(9): mov $0x28,%rdx
38a0(5): mov %rdx,0x38(%rsp)
38a5(2): xor %edx,%edx
38a7(3): cmp $0xa,%esi
38aa(2): jz 0x6a(%rip)
38ac(3): mov %esi,(%rsp)
38af(3): mov %rsp,%rcx
38b2(7): mov $0xffffffff,%rdx
38b9(3): mov %rax,%rsi
38bc(9): mov $0x0,0x4(%rsp)
38c5(9): mov $0x4000000,0xc(%rsp)
38ce(9): mov $0x0,0x14(%rsp)
38d7(9): mov $0x0,0x1c(%rsp)
38e0(9): mov $0x0,0x24(%rsp)
38e9(9): mov $0x0,0x2c(%rsp)
38f2(8): mov $0x0,0x34(%rsp)
38fa(5): call 0xfffff826(%rip)
38ff(5): mov 0x38(%rsp),%rcx
3904(9): xor $0x28,%rcx
390d(2): jnz 0xc(%rip)
390f(4): add $0x48,%rsp
3913(1): ret near (%rsp)
3914(5): call 0xffffd8fc(%rip)
3919(5): call 0xffffd9a7(%rip)

"quotearg_n_custom_mem" :
3920(4): sub $0x48,%rsp
3924(3): mov %rcx,%r9
3927(7): mov 0x2038e2(%rip),%rcx
392e(8): movdqa 0x2038aa(%rip),%xmm0
3936(9): mov $0x28,%rax
393f(5): mov %rax,0x38(%rsp)
3944(2): xor %eax,%eax
3946(4): movaps %xmm0,(%rsp)
394a(3): test %rsi,%rsi
394d(5): mov %rcx,0x30(%rsp)
3952(7): mov $0xa,(%rsp)
3959(8): movdqa 0x20388f(%rip),%xmm0
3961(5): movaps %xmm0,0x10(%rsp)
3966(8): movdqa 0x203892(%rip),%xmm0
396e(5): movaps %xmm0,0x20(%rsp)
3973(2): jz 0x34(%rip)
3975(3): test %rdx,%rdx
3978(2): jz 0x2f(%rip)
397a(5): mov %rsi,0x28(%rsp)
397f(5): mov %rdx,0x30(%rsp)
3984(3): mov %rsp,%rcx
3987(3): mov %r8,%rdx
398a(3): mov %r9,%rsi
398d(5): call 0xfffff793(%rip)
3992(5): mov 0x38(%rsp),%rdi
3997(9): xor $0x28,%rdi
39a0(2): jnz 0xc(%rip)
39a2(4): add $0x48,%rsp
39a6(1): ret near (%rsp)
39a7(5): call 0xffffd869(%rip)
39ac(5): call 0xffffd914(%rip)

"quotearg_n_custom" :
39c0(7): mov $0xffffffff,%r8
39c7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
39d0(3): mov %rdx,%rcx
39d3(7): mov $0xffffffff,%r8
39da(3): mov %rsi,%rdx
39dd(3): mov %rdi,%rsi
39e0(2): xor %edi,%edi
39e2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
39f0(3): mov %rcx,%r8
39f3(3): mov %rdx,%rcx
39f6(3): mov %rsi,%rdx
39f9(3): mov %rdi,%rsi
39fc(2): xor %edi,%edi
39fe(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3a10(7): lea 0x203609(%rip),%rcx
3a17(5): jmp 0xfffff709(%rip)

"quote_mem" :
3a20(7): lea 0x2035f9(%rip),%rcx
3a27(3): mov %rsi,%rdx
3a2a(3): mov %rdi,%rsi
3a2d(2): xor %edi,%edi
3a2f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3a40(7): lea 0x2035d9(%rip),%rcx
3a47(7): mov $0xffffffff,%rdx
3a4e(5): jmp 0xfffff6d2(%rip)

"quote" :
3a60(7): lea 0x2035b9(%rip),%rcx
3a67(3): mov %rdi,%rsi
3a6a(7): mov $0xffffffff,%rdx
3a71(2): xor %edi,%edi
3a73(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3a80(2): push %r15
3a82(2): push %r14
3a84(2): push %r13
3a86(2): push %r12
3a88(3): mov %r9,%r12
3a8b(1): push %rbp
3a8c(1): push %rbx
3a8d(3): mov %rdi,%rbp
3a90(3): mov %r8,%rbx
3a93(4): sub $0x28,%rsp
3a97(3): test %rsi,%rsi
3a9a(6): jz 0x11e(%rip)
3aa0(3): mov %rdx,%r8
3aa3(7): lea 0x14de(%rip),%rdx
3aaa(3): mov %rcx,%r9
3aad(2): xor %eax,%eax
3aaf(3): mov %rsi,%rcx
3ab2(5): mov $0x1,%esi
3ab7(5): call 0xffffd999(%rip)
3abc(7): lea 0x14d8(%rip),%rsi
3ac3(2): xor %edi,%edi
3ac5(5): mov $0x5,%edx
3aca(5): call 0xffffd7c6(%rip)
3acf(7): lea 0x17ea(%rip),%rdx
3ad6(3): mov %rax,%rcx
3ad9(6): mov $0x7e3,%r8d
3adf(5): mov $0x1,%esi
3ae4(3): mov %rbp,%rdi
3ae7(2): xor %eax,%eax
3ae9(5): call 0xffffd967(%rip)
3aee(7): lea 0x1533(%rip),%rsi
3af5(2): xor %edi,%edi
3af7(5): mov $0x5,%edx
3afc(5): call 0xffffd794(%rip)
3b01(3): mov %rbp,%rsi
3b04(3): mov %rax,%rdi
3b07(5): call 0xffffd839(%rip)
3b0c(4): cmp $0x9,%r12
3b10(6): jnbe 0x340(%rip)
3b16(7): lea 0x176b(%rip),%rdx
3b1d(4): movsxd 0x0(%rdx,%r12,4),%rax
3b21(3): add %rdx,%rax
3b24(2): jmp %rax
3b26(a): nop 0x0(%rax,%rax,1)
3b30(4): mov 0x38(%rbx),%r9
3b34(4): mov 0x10(%rbx),%rax
3b38(7): lea 0x1659(%rip),%rsi
3b3f(4): mov 0x8(%rbx),%r8
3b43(5): mov $0x5,%edx
3b48(2): xor %edi,%edi
3b4a(4): mov 0x30(%rbx),%r13
3b4e(4): mov 0x28(%rbx),%r12
3b52(5): mov %r9,0x10(%rsp)
3b57(4): mov 0x20(%rbx),%r15
3b5b(4): mov 0x18(%rbx),%r14
3b5f(4): mov %rax,(%rsp)
3b63(5): mov %r8,0x8(%rsp)
3b68(3): mov (%rbx),%rbx
3b6b(5): call 0xffffd725(%rip)
3b70(4): sub $0x8,%rsp
3b74(5): mov 0x18(%rsp),%r9
3b79(3): mov %rax,%rdx
3b7c(3): mov %rbx,%rcx
3b7f(5): mov $0x1,%esi
3b84(3): mov %rbp,%rdi
3b87(2): xor %eax,%eax
3b89(2): push %r9
3b8b(2): push %r13
3b8d(2): push %r12
3b8f(2): push %r15
3b91(2): push %r14
3b93(5): mov 0x30(%rsp),%r9
3b98(5): mov 0x38(%rsp),%r8
3b9d(5): call 0xffffd8b3(%rip)
3ba2(4): add $0x30,%rsp
3ba6(4): add $0x28,%rsp
3baa(1): pop %rbx
3bab(1): pop %rbp
3bac(2): pop %r12
3bae(2): pop %r13
3bb0(2): pop %r14
3bb2(2): pop %r15
3bb4(1): ret near (%rsp)
3bb5(3): nop (%rax)
3bb8(3): mov %rcx,%r8
3bbb(3): mov %rdx,%rcx
3bbe(7): lea 0x13cf(%rip),%rdx
3bc5(5): mov $0x1,%esi
3bca(2): xor %eax,%eax
3bcc(5): call 0xffffd884(%rip)
3bd1(5): jmp 0xfffffeeb(%rip)
3bd6(a): nop 0x0(%rax,%rax,1)
3be0(4): mov 0x40(%rbx),%r10
3be4(4): mov 0x38(%rbx),%r9
3be8(7): lea 0x15d9(%rip),%rsi
3bef(4): mov 0x10(%rbx),%rax
3bf3(4): mov 0x8(%rbx),%r8
3bf7(5): mov $0x5,%edx
3bfc(4): mov 0x30(%rbx),%r13
3c00(4): mov 0x28(%rbx),%r12
3c04(4): mov 0x20(%rbx),%r15
3c08(4): mov 0x18(%rbx),%r14
3c0c(3): mov (%rbx),%rbx
3c0f(5): mov %r10,0x18(%rsp)
3c14(5): mov %r9,0x10(%rsp)
3c19(4): mov %rax,(%rsp)
3c1d(5): mov %r8,0x8(%rsp)
3c22(2): xor %edi,%edi
3c24(5): call 0xffffd66c(%rip)
3c29(5): mov 0x18(%rsp),%r10
3c2e(2): push %r10
3c30(5): jmp 0xffffff44(%rip)
3c35(3): nop (%rax)
3c38(3): mov (%rbx),%rbx
3c3b(7): lea 0x135d(%rip),%rsi
3c42(5): mov $0x5,%edx
3c47(2): xor %edi,%edi
3c49(5): call 0xffffd647(%rip)
3c4e(4): add $0x28,%rsp
3c52(3): mov %rbx,%rcx
3c55(3): mov %rbp,%rdi
3c58(1): pop %rbx
3c59(1): pop %rbp
3c5a(2): pop %r12
3c5c(2): pop %r13
3c5e(2): pop %r14
3c60(2): pop %r15
3c62(3): mov %rax,%rdx
3c65(5): mov $0x1,%esi
3c6a(2): xor %eax,%eax
3c6c(5): jmp 0xffffd7e4(%rip)
3c71(7): nop 0x0(%rax)
3c78(4): mov 0x8(%rbx),%r12
3c7c(7): lea 0x132c(%rip),%rsi
3c83(3): mov (%rbx),%rbx
3c86(5): mov $0x5,%edx
3c8b(2): xor %edi,%edi
3c8d(5): call 0xffffd603(%rip)
3c92(4): add $0x28,%rsp
3c96(3): mov %r12,%r8
3c99(3): mov %rbx,%rcx
3c9c(3): mov %rbp,%rdi
3c9f(3): mov %rax,%rdx
3ca2(5): mov $0x1,%esi
3ca7(1): pop %rbx
3ca8(1): pop %rbp
3ca9(2): pop %r12
3cab(2): pop %r13
3cad(2): pop %r14
3caf(2): pop %r15
3cb1(2): xor %eax,%eax
3cb3(5): jmp 0xffffd79d(%rip)
3cb8(8): nop 0x0(%rax,%rax,1)
3cc0(4): mov 0x10(%rbx),%r13
3cc4(4): mov 0x8(%rbx),%r12
3cc8(7): lea 0x12f7(%rip),%rsi
3ccf(3): mov (%rbx),%rbx
3cd2(5): mov $0x5,%edx
3cd7(2): xor %edi,%edi
3cd9(5): call 0xffffd5b7(%rip)
3cde(4): add $0x28,%rsp
3ce2(3): mov %r13,%r9
3ce5(3): mov %r12,%r8
3ce8(3): mov %rbx,%rcx
3ceb(3): mov %rbp,%rdi
3cee(3): mov %rax,%rdx
3cf1(1): pop %rbx
3cf2(1): pop %rbp
3cf3(2): pop %r12
3cf5(2): pop %r13
3cf7(2): pop %r14
3cf9(2): pop %r15
3cfb(5): mov $0x1,%esi
3d00(2): xor %eax,%eax
3d02(5): jmp 0xffffd74e(%rip)
3d07(9): nop 0x0(%rax,%rax,1)
3d10(7): lea 0x13e1(%rip),%rsi
3d17(5): mov $0x5,%edx
3d1c(2): xor %edi,%edi
3d1e(4): mov 0x18(%rbx),%r14
3d22(4): mov 0x10(%rbx),%r13
3d26(4): mov 0x8(%rbx),%r12
3d2a(3): mov (%rbx),%rbx
3d2d(5): call 0xffffd563(%rip)
3d32(4): sub $0x8,%rsp
3d36(2): push %r14
3d38(3): mov %rax,%rdx
3d3b(3): mov %r13,%r9
3d3e(3): mov %r12,%r8
3d41(3): mov %rbx,%rcx
3d44(3): mov %rbp,%rdi
3d47(5): mov $0x1,%esi
3d4c(2): xor %eax,%eax
3d4e(5): call 0xffffd702(%rip)
3d53(1): pop %rax
3d54(1): pop %rdx
3d55(4): add $0x28,%rsp
3d59(1): pop %rbx
3d5a(1): pop %rbp
3d5b(2): pop %r12
3d5d(2): pop %r13
3d5f(2): pop %r14
3d61(2): pop %r15
3d63(1): ret near (%rsp)
3d64(4): nop 0x0(%rax)
3d68(4): mov 0x20(%rbx),%r15
3d6c(7): lea 0x13a5(%rip),%rsi
3d73(5): mov $0x5,%edx
3d78(2): xor %edi,%edi
3d7a(4): mov 0x18(%rbx),%r14
3d7e(4): mov 0x10(%rbx),%r13
3d82(4): mov 0x8(%rbx),%r12
3d86(3): mov (%rbx),%rbx
3d89(5): call 0xffffd507(%rip)
3d8e(2): push %r15
3d90(2): jmp 0xffffffa6(%rip)
3d92(6): nop 0x0(%rax,%rax,1)
3d98(4): mov 0x8(%rbx),%r8
3d9c(4): mov 0x28(%rbx),%r12
3da0(7): lea 0x1399(%rip),%rsi
3da7(4): mov 0x20(%rbx),%r15
3dab(4): mov 0x18(%rbx),%r14
3daf(5): mov $0x5,%edx
3db4(4): mov 0x10(%rbx),%r13
3db8(2): xor %edi,%edi
3dba(3): mov (%rbx),%rbx
3dbd(4): mov %r8,(%rsp)
3dc1(5): call 0xffffd4cf(%rip)
3dc6(4): sub $0x8,%rsp
3dca(3): mov %r13,%r9
3dcd(2): push %r12
3dcf(2): push %r15
3dd1(2): push %r14
3dd3(5): mov 0x20(%rsp),%r8
3dd8(3): mov %rbx,%rcx
3ddb(3): mov %rax,%rdx
3dde(3): mov %rbp,%rdi
3de1(5): mov $0x1,%esi
3de6(2): xor %eax,%eax
3de8(5): call 0xffffd668(%rip)
3ded(4): add $0x20,%rsp
3df1(4): add $0x28,%rsp
3df5(1): pop %rbx
3df6(1): pop %rbp
3df7(2): pop %r12
3df9(2): pop %r13
3dfb(2): pop %r14
3dfd(2): pop %r15
3dff(1): ret near (%rsp)
3e00(4): mov 0x10(%rbx),%r9
3e04(4): mov 0x30(%rbx),%r13
3e08(7): lea 0x1359(%rip),%rsi
3e0f(4): mov 0x28(%rbx),%r12
3e13(4): mov 0x20(%rbx),%r15
3e17(5): mov $0x5,%edx
3e1c(4): mov 0x18(%rbx),%r14
3e20(4): mov 0x8(%rbx),%r8
3e24(2): xor %edi,%edi
3e26(5): mov %r9,0x8(%rsp)
3e2b(3): mov (%rbx),%rbx
3e2e(4): mov %r8,(%rsp)
3e32(5): call 0xffffd45e(%rip)
3e37(2): push %r13
3e39(2): push %r12
3e3b(2): push %r15
3e3d(2): push %r14
3e3f(5): mov 0x28(%rsp),%r9
3e44(2): jmp 0xffffff8f(%rip)
3e46(a): nop 0x0(%rax,%rax,1)
3e50(4): mov 0x40(%rbx),%r10
3e54(4): mov 0x38(%rbx),%r9
3e58(5): mov $0x5,%edx
3e5d(4): mov 0x10(%rbx),%rax
3e61(4): mov 0x8(%rbx),%r8
3e65(7): lea 0x1394(%rip),%rsi
3e6c(4): mov 0x30(%rbx),%r13
3e70(4): mov 0x28(%rbx),%r12
3e74(4): mov 0x20(%rbx),%r15
3e78(4): mov 0x18(%rbx),%r14
3e7c(5): mov %r10,0x18(%rsp)
3e81(5): mov %r9,0x10(%rsp)
3e86(4): mov %rax,(%rsp)
3e8a(5): mov %r8,0x8(%rsp)
3e8f(3): mov (%rbx),%rbx
3e92(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3ea0(3): xor %r9d,%r9d
3ea3(4): cmp $0x0,(%r8)
3ea7(2): jz 0x14(%rip)
3ea9(7): nop 0x0(%rax)
3eb0(4): add $0x1,%r9
3eb4(5): cmp $0x0,0x0(%r8,%r9,8)
3eb9(2): jnz 0xfffffff7(%rip)
3ebb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3ec0(4): sub $0x68,%rsp
3ec4(3): mov %r8,%r10
3ec7(3): xor %r9d,%r9d
3eca(9): mov $0x28,%rax
3ed3(5): mov %rax,0x58(%rsp)
3ed8(2): xor %eax,%eax
3eda(3): mov %rsp,%r8
3edd(3): nop (%rax)
3ee0(3): mov (%r10),%eax
3ee3(3): cmp $0x2f,%eax
3ee6(2): jnbe 0x44(%rip)
3ee8(3): mov %eax,%r11d
3eeb(4): add 0x10(%r10),%r11
3eef(3): add $0x8,%eax
3ef2(3): mov %eax,(%r10)
3ef5(3): mov (%r11),%rax
3ef8(3): test %rax,%rax
3efb(4): mov %rax,0x0(%r8,%r9,8)
3eff(2): jz 0xc(%rip)
3f01(4): add $0x1,%r9
3f05(4): cmp $0xa,%r9
3f09(2): jnz 0xffffffd7(%rip)
3f0b(5): call 0xfffffb75(%rip)
3f10(5): mov 0x58(%rsp),%rax
3f15(9): xor $0x28,%rax
3f1e(2): jnz 0x7(%rip)
3f20(4): add $0x68,%rsp
3f24(1): ret near (%rsp)
3f25(5): call 0xffffd39b(%rip)
3f2a(4): mov 0x8(%r10),%r11
3f2e(4): lea 0x8(%r11),%rax
3f32(4): mov %rax,0x8(%r10)
3f36(2): jmp 0xffffffbf(%rip)

"version_etc" :
3f40(1): push %rbp
3f41(1): push %rbx
3f42(6): mov $0x20,%r10d
3f48(3): xor %r11d,%r11d
3f4b(7): sub $0xb8,%rsp
3f52(9): mov $0x28,%rax
3f5b(5): mov %rax,0x78(%rsp)
3f60(2): xor %eax,%eax
3f62(8): lea 0xd0(%rsp),%rax
3f6a(8): mov %r8,0xa0(%rsp)
3f72(8): lea 0xd0(%rsp),%rbx
3f7a(5): lea 0x20(%rsp),%r8
3f7f(8): mov %r9,0xa8(%rsp)
3f87(8): mov $0x20,0x8(%rsp)
3f8f(5): mov %rax,0x10(%rsp)
3f94(8): lea 0x80(%rsp),%rax
3f9c(3): xor %r9d,%r9d
3f9f(5): mov %rax,0x18(%rsp)
3fa4(3): mov %rax,%rbp
3fa7(9): nop 0x0(%rax,%rax,1)
3fb0(4): cmp $0x2f,%r10d
3fb4(2): jnbe 0x58(%rip)
3fb6(3): mov %r10d,%eax
3fb9(6): mov $0x1,%r11d
3fbf(4): add $0x8,%r10d
3fc3(3): add %rbp,%rax
3fc6(3): mov (%rax),%rax
3fc9(3): test %rax,%rax
3fcc(4): mov %rax,0x0(%r8,%r9,8)
3fd0(2): jz 0xc(%rip)
3fd2(4): add $0x1,%r9
3fd6(4): cmp $0xa,%r9
3fda(2): jnz 0xffffffd6(%rip)
3fdc(3): test %r11b,%r11b
3fdf(2): jnz 0x26(%rip)
3fe1(5): call 0xfffffa9f(%rip)
3fe6(5): mov 0x78(%rsp),%rax
3feb(9): xor $0x28,%rax
3ff4(2): jnz 0xc(%rip)
3ff6(7): add $0xb8,%rsp
3ffd(1): pop %rbx
3ffe(1): pop %rbp
3fff(1): ret near (%rsp)
4000(5): call 0xffffd2c0(%rip)
4005(5): mov %r10d,0x8(%rsp)
400a(2): jmp 0xffffffd7(%rip)
400c(3): mov %rbx,%rax
400f(4): add $0x8,%rbx
4013(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4020(1): push %rbx
4021(7): lea 0xfba(%rip),%rsi
4028(5): mov $0x5,%edx
402d(2): xor %edi,%edi
402f(5): call 0xffffd261(%rip)
4034(7): lea 0xfbc(%rip),%rdx
403b(3): mov %rax,%rsi
403e(5): mov $0x1,%edi
4043(2): xor %eax,%eax
4045(5): call 0xffffd3ab(%rip)
404a(7): lea 0xfbc(%rip),%rsi
4051(5): mov $0x5,%edx
4056(2): xor %edi,%edi
4058(5): call 0xffffd238(%rip)
405d(7): lea 0x954(%rip),%rcx
4064(7): lea 0x6d3(%rip),%rdx
406b(3): mov %rax,%rsi
406e(5): mov $0x1,%edi
4073(2): xor %eax,%eax
4075(5): call 0xffffd37b(%rip)
407a(7): mov 0x203007(%rip),%rbx
4081(7): lea 0x11b8(%rip),%rsi
4088(2): xor %edi,%edi
408a(5): mov $0x5,%edx
408f(5): call 0xffffd201(%rip)
4094(3): mov %rbx,%rsi
4097(3): mov %rax,%rdi
409a(1): pop %rbx
409b(5): jmp 0xffffd2a5(%rip)

"xmalloc" :
40a0(1): push %rbx
40a1(3): mov %rdi,%rbx
40a4(5): call 0xffffd2dc(%rip)
40a9(3): test %rax,%rax
40ac(2): jnz 0x7(%rip)
40ae(3): test %rbx,%rbx
40b1(2): jnz 0x4(%rip)
40b3(1): pop %rbx
40b4(1): ret near (%rsp)
40b5(5): call 0x23b(%rip)

"xnmalloc" :
40c0(3): mov %rdi,%rax
40c3(3): mul %rax,%rsi,%rdx
40c6(3): mov %rax,%rdi
40c9(3): seto %al
40cc(3): test %rdi,%rdi
40cf(2): js 0xc(%rip)
40d1(3): movzx %al,%eax
40d4(3): test %rax,%rax
40d7(2): jnz 0x4(%rip)
40d9(2): jmp 0xffffffc7(%rip)
40db(4): sub $0x8,%rsp
40df(5): call 0x211(%rip)

"xrealloc" :
4100(3): test %rsi,%rsi
4103(1): push %rbx
4104(3): mov %rsi,%rbx
4107(2): jnz 0x7(%rip)
4109(3): test %rdi,%rdi
410c(2): jnz 0x1c(%rip)
410e(3): mov %rbx,%rsi
4111(5): call 0xffffd2bf(%rip)
4116(3): test %rax,%rax
4119(2): jnz 0x7(%rip)
411b(3): test %rbx,%rbx
411e(2): jnz 0x13(%rip)
4120(1): pop %rbx
4121(1): ret near (%rsp)
4122(6): nop 0x0(%rax,%rax,1)
4128(5): call 0xffffd0d8(%rip)
412d(2): xor %eax,%eax
412f(1): pop %rbx
4130(1): ret near (%rsp)
4131(5): call 0x1bf(%rip)

"xnrealloc" :
4140(3): mov %rsi,%rax
4143(3): mul %rax,%rdx,%rdx
4146(3): mov %rax,%rsi
4149(3): seto %al
414c(3): test %rsi,%rsi
414f(2): js 0xc(%rip)
4151(3): movzx %al,%eax
4154(3): test %rax,%rax
4157(2): jnz 0x4(%rip)
4159(2): jmp 0xffffffa7(%rip)
415b(4): sub $0x8,%rsp
415f(5): call 0x191(%rip)

"x2nrealloc" :
4170(3): test %rdi,%rdi
4173(3): mov %rdx,%r9
4176(3): mov (%rsi),%rcx
4179(2): jz 0x37(%rip)
417b(2): xor %edx,%edx
417d(a): mov $0x6148914691236517204,%rax
4187(3): div %r9,%rax
418a(3): cmp %rcx,%rax
418d(2): jbe 0x3e(%rip)
418f(3): mov %rcx,%rax
4192(3): shr $0x1,%rax
4195(5): lea 0x1(%rax,%rcx,1),%rcx
419a(3): mov %rcx,(%rsi)
419d(4): imul %r9,%rcx
41a1(3): mov %rcx,%rsi
41a4(5): jmp 0xffffff5c(%rip)
41a9(7): nop 0x0(%rax)
41b0(3): test %rcx,%rcx
41b3(2): jz 0x25(%rip)
41b5(3): mov %rcx,%rax
41b8(3): mul %rax,%r9,%rdx
41bb(3): seto %dl
41be(3): test %rax,%rax
41c1(3): movzx %dl,%edx
41c4(2): js 0x7(%rip)
41c6(3): test %rdx,%rdx
41c9(2): jz 0xffffffd1(%rip)
41cb(4): sub $0x8,%rsp
41cf(5): call 0x121(%rip)
41d4(4): nop 0x0(%rax)
41d8(2): xor %edx,%edx
41da(5): mov $0x80,%eax
41df(3): xor %r8d,%r8d
41e2(3): div %r9,%rax
41e5(3): test %rax,%rax
41e8(4): setz %r8b
41ec(4): lea 0x0(%r8,%rax,1),%rcx
41f0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4200(3): test %rdi,%rdi
4203(3): mov (%rsi),%rax
4206(2): jz 0x2a(%rip)
4208(a): mov $0x6148914691236517203,%rdx
4212(3): cmp %rdx,%rax
4215(2): jnbe 0x2c(%rip)
4217(3): mov %rax,%rdx
421a(3): shr $0x1,%rdx
421d(5): lea 0x1(%rdx,%rax,1),%rax
4222(3): mov %rax,(%rsi)
4225(3): mov %rax,%rsi
4228(5): jmp 0xfffffed8(%rip)
422d(3): nop (%rax)
4230(3): test %rax,%rax
4233(5): mov $0x80,%edx
4238(4): cmove %rdx,%rax
423c(3): test %rax,%rax
423f(2): jns 0xffffffe3(%rip)
4241(4): sub $0x8,%rsp
4245(5): call 0xab(%rip)

"xzalloc" :
4250(1): push %rbx
4251(3): mov %rdi,%rbx
4254(5): call 0xfffffe4c(%rip)
4259(3): mov %rbx,%rdx
425c(2): xor %esi,%esi
425e(3): mov %rax,%rdi
4261(1): pop %rbx
4262(5): jmp 0xffffd0be(%rip)

"xcalloc" :
4270(3): mov %rdi,%rax
4273(4): sub $0x8,%rsp
4277(3): mul %rax,%rsi,%rdx
427a(3): seto %dl
427d(3): test %rax,%rax
4280(2): js 0x19(%rip)
4282(3): movzx %dl,%edx
4285(3): test %rdx,%rdx
4288(2): jnz 0x11(%rip)
428a(5): call 0xffffd0c6(%rip)
428f(3): test %rax,%rax
4292(2): jz 0x7(%rip)
4294(4): add $0x8,%rsp
4298(1): ret near (%rsp)
4299(5): call 0x57(%rip)

"xmemdup" :
42a0(1): push %rbp
42a1(1): push %rbx
42a2(3): mov %rdi,%rbp
42a5(3): mov %rsi,%rdi
42a8(3): mov %rsi,%rbx
42ab(4): sub $0x8,%rsp
42af(5): call 0xfffffdf1(%rip)
42b4(4): add $0x8,%rsp
42b8(3): mov %rbx,%rdx
42bb(3): mov %rbp,%rsi
42be(1): pop %rbx
42bf(1): pop %rbp
42c0(3): mov %rax,%rdi
42c3(5): jmp 0xffffd09d(%rip)

"xstrdup" :
42d0(1): push %rbx
42d1(3): mov %rdi,%rbx
42d4(5): call 0xffffcfdc(%rip)
42d9(3): mov %rbx,%rdi
42dc(4): lea 0x1(%rax),%rsi
42e0(1): pop %rbx
42e1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
42f0(7): lea 0xff8(%rip),%rsi
42f7(4): sub $0x8,%rsp
42fb(5): mov $0x5,%edx
4300(2): xor %edi,%edi
4302(5): call 0xffffcf8e(%rip)
4307(6): mov 0x202d0b(%rip),%edi
430d(7): lea 0x75c(%rip),%rdx
4314(3): mov %rax,%rcx
4317(2): xor %esi,%esi
4319(2): xor %eax,%eax
431b(5): call 0xffffd0e5(%rip)
4320(5): call 0xffffcef0(%rip)

"rpl_mbrtowc" :
4330(2): push %r13
4332(2): push %r12
4334(3): mov %rsi,%r13
4337(1): push %rbp
4338(1): push %rbx
4339(3): mov %rdi,%rbx
433c(3): mov %rdx,%r12
433f(4): sub $0x18,%rsp
4343(9): mov $0x28,%rax
434c(5): mov %rax,0x8(%rsp)
4351(2): xor %eax,%eax
4353(5): lea 0x4(%rsp),%rax
4358(3): test %rdi,%rdi
435b(4): cmove %rax,%rbx
435f(3): mov %rbx,%rdi
4362(5): call 0xffffcf7e(%rip)
4367(4): cmp $0xfffffffd,%rax
436b(3): mov %rax,%rbp
436e(2): jbe 0x22(%rip)
4370(3): test %r12,%r12
4373(2): jz 0x1d(%rip)
4375(2): xor %edi,%edi
4377(5): call 0xc9(%rip)
437c(2): test %al,%al
437e(2): jnz 0x12(%rip)
4380(5): movzx 0x0(%r13),%eax
4385(5): mov $0x1,%ebp
438a(2): mov %eax,(%rbx)
438c(4): nop 0x0(%rax)
4390(5): mov 0x8(%rsp),%rdx
4395(9): xor $0x28,%rdx
439e(3): mov %rbp,%rax
43a1(2): jnz 0xd(%rip)
43a3(4): add $0x18,%rsp
43a7(1): pop %rbx
43a8(1): pop %rbp
43a9(2): pop %r12
43ab(2): pop %r13
43ad(1): ret near (%rsp)
43ae(5): call 0xffffcf12(%rip)

"close_stream" :
43c0(2): push %r12
43c2(1): push %rbp
43c3(3): mov %rdi,%rbp
43c6(1): push %rbx
43c7(5): call 0xffffce89(%rip)
43cc(3): mov 0x0(%rbp),%ebx
43cf(3): mov %rbp,%rdi
43d2(3): mov %rax,%r12
43d5(5): call 0x10b(%rip)
43da(3): and $0x20,%ebx
43dd(2): test %ebx,%ebx
43df(2): jnz 0x19(%rip)
43e1(2): test %eax,%eax
43e3(2): jz 0xc(%rip)
43e5(3): test %r12,%r12
43e8(5): mov $0xffffffff,%eax
43ed(2): jz 0x3b(%rip)
43ef(1): pop %rbx
43f0(1): pop %rbp
43f1(2): pop %r12
43f3(1): ret near (%rsp)
43f4(4): nop 0x0(%rax)
43f8(2): test %eax,%eax
43fa(2): jnz 0x1e(%rip)
43fc(5): call 0xffffce24(%rip)
4401(6): mov $0x0,(%rax)
4407(5): mov $0xffffffff,%eax
440c(1): pop %rbx
440d(1): pop %rbp
440e(2): pop %r12
4410(1): ret near (%rsp)
4411(7): nop 0x0(%rax)
4418(1): pop %rbx
4419(5): mov $0xffffffff,%eax
441e(1): pop %rbp
441f(2): pop %r12
4421(1): ret near (%rsp)
4422(6): nop 0x0(%rax,%rax,1)
4428(5): call 0xffffcdf8(%rip)
442d(3): cmp $0x9,(%rax)
4430(1): pop %rbx
4431(1): pop %rbp
4432(2): pop %r12
4434(3): setnz %al
4437(3): movzx %al,%eax
443a(2): neg %eax
443c(1): ret near (%rsp)

"hard_locale" :
4440(4): sub $0x8,%rsp
4444(2): xor %esi,%esi
4446(5): call 0xffffcf9a(%rip)
444b(3): mov %rax,%rdx
444e(5): mov $0x1,%eax
4453(3): test %rdx,%rdx
4456(2): jz 0x1f(%rip)
4458(7): lea 0xea1(%rip),%rdi
445f(5): mov $0x2,%ecx
4464(3): mov %rdx,%rsi
4467(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4469(3): setnbe %cl
446c(3): sbb $0x0,%cl
446f(2): xor %eax,%eax
4471(2): test %cl,%cl
4473(2): jnz 0xd(%rip)
4475(4): add $0x8,%rsp
4479(1): ret near (%rsp)
447a(6): nop 0x0(%rax,%rax,1)
4480(7): lea 0xe7b(%rip),%rdi
4487(5): mov $0x6,%ecx
448c(3): mov %rdx,%rsi
448f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4491(3): setnbe %al
4494(2): sbb $0x0,%al
4496(2): test %al,%al
4498(3): setnz %al
449b(4): add $0x8,%rsp
449f(1): ret near (%rsp)

"locale_charset" :
44a0(4): sub $0x8,%rsp
44a4(5): mov $0xe,%edi
44a9(5): call 0xffffcef7(%rip)
44ae(3): test %rax,%rax
44b1(2): jz 0x1f(%rip)
44b3(3): cmp $0x0,(%rax)
44b6(7): lea 0xe4b(%rip),%rdx
44bd(4): cmove %rdx,%rax
44c1(4): add $0x8,%rsp
44c5(1): ret near (%rsp)
44c6(a): nop 0x0(%rax,%rax,1)
44d0(7): lea 0xe31(%rip),%rax
44d7(4): add $0x8,%rsp
44db(1): ret near (%rsp)

"rpl_fclose" :
44e0(2): push %r12
44e2(1): push %rbp
44e3(1): push %rbx
44e4(3): mov %rdi,%rbx
44e7(5): call 0xffffce89(%rip)
44ec(2): test %eax,%eax
44ee(3): mov %rbx,%rdi
44f1(2): js 0x56(%rip)
44f3(5): call 0xffffcebd(%rip)
44f8(2): test %eax,%eax
44fa(2): jnz 0x2e(%rip)
44fc(3): mov %rbx,%rdi
44ff(5): call 0x61(%rip)
4504(2): test %eax,%eax
4506(2): jz 0x3e(%rip)
4508(5): call 0xffffcd18(%rip)
450d(3): mov (%rax),%r12d
4510(3): mov %rbx,%rdi
4513(3): mov %rax,%rbp
4516(5): call 0xffffcd5a(%rip)
451b(3): test %r12d,%r12d
451e(2): jnz 0x32(%rip)
4520(1): pop %rbx
4521(1): pop %rbp
4522(2): pop %r12
4524(1): ret near (%rsp)
4525(3): nop (%rax)
4528(3): mov %rbx,%rdi
452b(5): call 0xffffce45(%rip)
4530(2): xor %esi,%esi
4532(5): mov $0x1,%edx
4537(2): mov %eax,%edi
4539(5): call 0xffffcdd7(%rip)
453e(4): cmp $0xffffffff,%rax
4542(2): jnz 0xffffffba(%rip)
4544(3): mov %rbx,%rdi
4547(1): pop %rbx
4548(1): pop %rbp
4549(2): pop %r12
454b(5): jmp 0xffffcd25(%rip)
4550(4): mov %r12d,0x0(%rbp)
4554(5): mov $0xffffffff,%eax
4559(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4560(3): test %rdi,%rdi
4563(1): push %rbx
4564(3): mov %rdi,%rbx
4567(2): jz 0x13(%rip)
4569(5): call 0xffffce47(%rip)
456e(2): test %eax,%eax
4570(2): jz 0xa(%rip)
4572(6): test $0x100,(%rbx)
4578(2): jnz 0x10(%rip)
457a(3): mov %rbx,%rdi
457d(1): pop %rbx
457e(5): jmp 0xffffce12(%rip)
4583(5): nop 0x0(%rax,%rax,1)
4588(3): mov %rbx,%rdi
458b(5): mov $0x1,%edx
4590(2): xor %esi,%esi
4592(5): call 0xe(%rip)
4597(3): mov %rbx,%rdi
459a(1): pop %rbx
459b(5): jmp 0xffffcdf5(%rip)

"rpl_fseeko" :
45a0(4): mov 0x8(%rdi),%rax
45a4(4): cmp %rax,0x10(%rdi)
45a8(2): jz 0x8(%rip)
45aa(5): jmp 0xffffce66(%rip)
45af(1): nop 
45b0(4): mov 0x20(%rdi),%rax
45b4(4): cmp %rax,0x28(%rdi)
45b8(2): jnz 0xfffffff2(%rip)
45ba(5): cmp $0x0,0x48(%rdi)
45bf(2): jnz 0xffffffeb(%rip)
45c1(2): push %r12
45c3(1): push %rbp
45c4(3): mov %edx,%r12d
45c7(1): push %rbx
45c8(3): mov %rsi,%rbp
45cb(3): mov %rdi,%rbx
45ce(5): call 0xffffcda2(%rip)
45d3(3): mov %r12d,%edx
45d6(3): mov %rbp,%rsi
45d9(2): mov %eax,%edi
45db(5): call 0xffffcd35(%rip)
45e0(4): cmp $0xffffffff,%rax
45e4(2): jz 0xe(%rip)
45e6(3): and $0xef,(%rbx)
45e9(7): mov %rax,0x90(%rbx)
45f0(2): xor %eax,%eax
45f2(1): pop %rbx
45f3(1): pop %rbp
45f4(2): pop %r12
45f6(1): ret near (%rsp)

"__libc_csu_init" :
4600(2): push %r15
4602(2): push %r14
4604(3): mov %rdx,%r15
4607(2): push %r13
4609(2): push %r12
460b(7): lea 0x20257e(%rip),%r12
4612(1): push %rbp
4613(7): lea 0x20257e(%rip),%rbp
461a(1): push %rbx
461b(3): mov %edi,%r13d
461e(3): mov %rsi,%r14
4621(3): sub %r12,%rbp
4624(4): sub $0x8,%rsp
4628(4): sar $0x3,%rbp
462c(5): call 0xffffcbac(%rip)
4631(3): test %rbp,%rbp
4634(2): jz 0x22(%rip)
4636(2): xor %ebx,%ebx
4638(8): nop 0x0(%rax,%rax,1)
4640(3): mov %r15,%rdx
4643(3): mov %r14,%rsi
4646(3): mov %r13d,%edi
4649(4): call 0x0(%r12,%rbx,8)
464d(4): add $0x1,%rbx
4651(3): cmp %rbx,%rbp
4654(2): jnz 0xffffffec(%rip)
4656(4): add $0x8,%rsp
465a(1): pop %rbx
465b(1): pop %rbp
465c(2): pop %r12
465e(2): pop %r13
4660(2): pop %r14
4662(2): pop %r15
4664(1): ret near (%rsp)

"atexit" :
4680(7): mov 0x202981(%rip),%rdx
4687(2): xor %esi,%esi
4689(5): jmp 0xffffcd97(%rip)

"_fini" :
4690(4): sub $0x8,%rsp
4694(4): add $0x8,%rsp
4698(1): ret near (%rsp)

