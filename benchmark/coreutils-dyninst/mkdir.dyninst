
"__snprintf_chk@plt" :
1710(6): jmp 0x20a6ca(%rip)
1716(5): push $0x0

"raise@plt" :
1720(6): jmp 0x20a6c2(%rip)
1726(5): push $0x1

"free@plt" :
1730(6): jmp 0x20a6ba(%rip)
1736(5): push $0x2

"abort@plt" :
1740(6): jmp 0x20a6b2(%rip)
1746(5): push $0x3

"__errno_location@plt" :
1750(6): jmp 0x20a6aa(%rip)
1756(5): push $0x4

"strncmp@plt" :
1760(6): jmp 0x20a6a2(%rip)
1766(5): push $0x5

"_exit@plt" :
1770(6): jmp 0x20a69a(%rip)
1776(5): push $0x6

"__fpending@plt" :
1780(6): jmp 0x20a692(%rip)
1786(5): push $0x7

"mkdir@plt" :
1790(6): jmp 0x20a68a(%rip)
1796(5): push $0x8

"fcntl@plt" :
17a0(6): jmp 0x20a682(%rip)
17a6(5): push $0x9

"textdomain@plt" :
17b0(6): jmp 0x20a67a(%rip)
17b6(5): push $0xa

"__open_2@plt" :
17c0(6): jmp 0x20a672(%rip)
17c6(5): push $0xb

"fclose@plt" :
17d0(6): jmp 0x20a66a(%rip)
17d6(5): push $0xc

"bindtextdomain@plt" :
17e0(6): jmp 0x20a662(%rip)
17e6(5): push $0xd

"dcgettext@plt" :
17f0(6): jmp 0x20a65a(%rip)
17f6(5): push $0xe

"__ctype_get_mb_cur_max@plt" :
1800(6): jmp 0x20a652(%rip)
1806(5): push $0xf

"strlen@plt" :
1810(6): jmp 0x20a64a(%rip)
1816(5): push $0x10

"chdir@plt" :
1820(6): jmp 0x20a642(%rip)
1826(5): push $0x11

"__stack_chk_fail@plt" :
1830(6): jmp 0x20a63a(%rip)
1836(5): push $0x12

"getopt_long@plt" :
1840(6): jmp 0x20a632(%rip)
1846(5): push $0x13

"mbrtowc@plt" :
1850(6): jmp 0x20a62a(%rip)
1856(5): push $0x14

"__overflow@plt" :
1860(6): jmp 0x20a622(%rip)
1866(5): push $0x15

"strrchr@plt" :
1870(6): jmp 0x20a61a(%rip)
1876(5): push $0x16

"lseek@plt" :
1880(6): jmp 0x20a612(%rip)
1886(5): push $0x17

"__assert_fail@plt" :
1890(6): jmp 0x20a60a(%rip)
1896(5): push $0x18

"memset@plt" :
18a0(6): jmp 0x20a602(%rip)
18a6(5): push $0x19

"close@plt" :
18b0(6): jmp 0x20a5fa(%rip)
18b6(5): push $0x1a

"memcmp@plt" :
18c0(6): jmp 0x20a5f2(%rip)
18c6(5): push $0x1b

"fputs_unlocked@plt" :
18d0(6): jmp 0x20a5ea(%rip)
18d6(5): push $0x1c

"calloc@plt" :
18e0(6): jmp 0x20a5e2(%rip)
18e6(5): push $0x1d

"umask@plt" :
18f0(6): jmp 0x20a5da(%rip)
18f6(5): push $0x1e

"memcpy@plt" :
1900(6): jmp 0x20a5d2(%rip)
1906(5): push $0x1f

"fileno@plt" :
1910(6): jmp 0x20a5ca(%rip)
1916(5): push $0x20

"__xstat@plt" :
1920(6): jmp 0x20a5c2(%rip)
1926(5): push $0x21

"malloc@plt" :
1930(6): jmp 0x20a5ba(%rip)
1936(5): push $0x22

"fflush@plt" :
1940(6): jmp 0x20a5b2(%rip)
1946(5): push $0x23

"nl_langinfo@plt" :
1950(6): jmp 0x20a5aa(%rip)
1956(5): push $0x24

"__fxstat@plt" :
1960(6): jmp 0x20a5a2(%rip)
1966(5): push $0x25

"lchown@plt" :
1970(6): jmp 0x20a59a(%rip)
1976(5): push $0x26

"__freading@plt" :
1980(6): jmp 0x20a592(%rip)
1986(5): push $0x27

"fchdir@plt" :
1990(6): jmp 0x20a58a(%rip)
1996(5): push $0x28

"fwrite_unlocked@plt" :
19a0(6): jmp 0x20a582(%rip)
19a6(5): push $0x29

"chown@plt" :
19b0(6): jmp 0x20a57a(%rip)
19b6(5): push $0x2a

"realloc@plt" :
19c0(6): jmp 0x20a572(%rip)
19c6(5): push $0x2b

"setlocale@plt" :
19d0(6): jmp 0x20a56a(%rip)
19d6(5): push $0x2c

"__printf_chk@plt" :
19e0(6): jmp 0x20a562(%rip)
19e6(5): push $0x2d

"fchmod@plt" :
19f0(6): jmp 0x20a55a(%rip)
19f6(5): push $0x2e

"chmod@plt" :
1a00(6): jmp 0x20a552(%rip)
1a06(5): push $0x2f

"error@plt" :
1a10(6): jmp 0x20a54a(%rip)
1a16(5): push $0x30

"waitpid@plt" :
1a20(6): jmp 0x20a542(%rip)
1a26(5): push $0x31

"open@plt" :
1a30(6): jmp 0x20a53a(%rip)
1a36(5): push $0x32

"fseeko@plt" :
1a40(6): jmp 0x20a532(%rip)
1a46(5): push $0x33

"fchown@plt" :
1a50(6): jmp 0x20a52a(%rip)
1a56(5): push $0x34

"__cxa_atexit@plt" :
1a60(6): jmp 0x20a522(%rip)
1a66(5): push $0x35

"exit@plt" :
1a70(6): jmp 0x20a51a(%rip)
1a76(5): push $0x36

"fwrite@plt" :
1a80(6): jmp 0x20a512(%rip)
1a86(5): push $0x37

"__fprintf_chk@plt" :
1a90(6): jmp 0x20a50a(%rip)
1a96(5): push $0x38

"mbsinit@plt" :
1aa0(6): jmp 0x20a502(%rip)
1aa6(5): push $0x39

"iswprint@plt" :
1ab0(6): jmp 0x20a4fa(%rip)
1ab6(5): push $0x3a

"fork@plt" :
1ac0(6): jmp 0x20a4f2(%rip)
1ac6(5): push $0x3b

"__ctype_b_loc@plt" :
1ad0(6): jmp 0x20a4ea(%rip)
1ad6(5): push $0x3c

".plt.got" :
1ae0(6): jmp 0x20a502(%rip)
1ae6(2): nop 

"_init" :
16e0(4): sub $0x8,%rsp
16e4(7): mov 0x20a8ed(%rip),%rax
16eb(3): test %rax,%rax
16ee(2): jz 0x4(%rip)
16f0(2): call %rax
16f2(4): add $0x8,%rsp
16f6(1): ret near (%rsp)

"main" :
1af0(2): push %r14
1af2(2): push %r13
1af4(7): lea 0x4d5(%rip),%r13
1afb(2): push %r12
1afd(1): push %rbp
1afe(2): mov %edi,%ebp
1b00(1): push %rbx
1b01(3): mov %rsi,%rbx
1b04(3): xor %r12d,%r12d
1b07(4): sub $0x30,%rsp
1b0b(3): mov (%rsi),%rdi
1b0e(9): mov $0x28,%rax
1b17(5): mov %rax,0x28(%rsp)
1b1c(2): xor %eax,%eax
1b1e(8): mov $0x0,(%rsp)
1b26(9): mov $0x1ff,0xc(%rsp)
1b2f(9): mov $0x0,0x18(%rsp)
1b38(5): mov $0x0,0x14(%rsp)
1b3d(5): call 0x1463(%rip)
1b42(7): lea 0x78bd(%rip),%rsi
1b49(5): mov $0x6,%edi
1b4e(5): call 0xfffffe82(%rip)
1b53(7): lea 0x6c93(%rip),%rsi
1b5a(7): lea 0x6c63(%rip),%rdi
1b61(5): call 0xfffffc7f(%rip)
1b66(7): lea 0x6c57(%rip),%rdi
1b6d(5): call 0xfffffc43(%rip)
1b72(7): lea 0x9f7(%rip),%rdi
1b79(5): call 0x6b97(%rip)
1b7e(7): lea 0x209f1b(%rip),%rcx
1b85(7): lea 0x6c9e(%rip),%rdx
1b8c(3): xor %r8d,%r8d
1b8f(3): mov %rbx,%rsi
1b92(2): mov %ebp,%edi
1b94(5): call 0xfffffcac(%rip)
1b99(3): cmp $0xff,%eax
1b9c(6): jz 0xe5(%rip)
1ba2(3): cmp $0x5a,%eax
1ba5(2): jz 0x7b(%rip)
1ba7(2): jle 0x39(%rip)
1ba9(3): cmp $0x70,%eax
1bac(6): jz 0xcc(%rip)
1bb2(3): cmp $0x76,%eax
1bb5(6): jz 0xa3(%rip)
1bbb(3): cmp $0x6d,%eax
1bbe(2): jz 0x12(%rip)
1bc0(5): mov $0x1,%edi
1bc5(5): call 0x4ab(%rip)
1bca(6): nop 0x0(%rax,%rax,1)
1bd0(7): mov 0x20a4c1(%rip),%r12
1bd7(2): jmp 0xffffffa7(%rip)
1bd9(7): nop 0x0(%rax)
1be0(5): cmp $0xffffff7d,%eax
1be5(6): jnz 0x16d(%rip)
1beb(7): mov 0x20a496(%rip),%rdi
1bf2(7): mov 0x20a417(%rip),%rcx
1bf9(7): lea 0x6c1a(%rip),%r8
1c00(7): lea 0x6bb9(%rip),%rdx
1c07(7): lea 0x6b36(%rip),%rsi
1c0e(3): xor %r9d,%r9d
1c11(2): xor %eax,%eax
1c13(5): call 0x3bcd(%rip)
1c18(2): xor %edi,%edi
1c1a(5): call 0xfffffe56(%rip)
1c1f(1): nop 
1c20(8): cmp $0x0,0x20a470(%rip)
1c28(6): jz 0xffffff56(%rip)
1c2e(7): lea 0x7013(%rip),%rsi
1c35(2): xor %edi,%edi
1c37(5): mov $0x5,%edx
1c3c(5): call 0xfffffbb4(%rip)
1c41(2): xor %esi,%esi
1c43(3): mov %rax,%rdx
1c46(2): xor %edi,%edi
1c48(2): xor %eax,%eax
1c4a(5): call 0xfffffdc6(%rip)
1c4f(5): jmp 0xffffff2f(%rip)
1c54(4): nop 0x0(%rax)
1c58(7): lea 0x6ba6(%rip),%rsi
1c5f(5): mov $0x5,%edx
1c64(2): xor %edi,%edi
1c66(5): call 0xfffffb8a(%rip)
1c6b(5): mov %rax,0x18(%rsp)
1c70(5): jmp 0xffffff0e(%rip)
1c75(3): nop (%rax)
1c78(4): mov %r13,(%rsp)
1c7c(5): jmp 0xffffff02(%rip)
1c81(6): cmp %ebp,0x20a409(%rip)
1c87(6): jz 0x114(%rip)
1c8d(5): cmp $0x0,(%rsp)
1c92(2): jz 0x67(%rip)
1c94(2): xor %edi,%edi
1c96(5): call 0xfffffc5a(%rip)
1c9b(2): mov %eax,%edi
1c9d(3): mov %eax,%r13d
1ca0(5): call 0xfffffc50(%rip)
1ca5(3): test %r12,%r12
1ca8(5): mov %r13d,0x8(%rsp)
1cad(2): jnz 0x67(%rip)
1caf(8): mov $0x1ff,0xc(%rsp)
1cb7(3): mov %rsp,%r12
1cba(7): movsxd 0x20a3cf(%rip),%rdx
1cc1(2): mov %ebp,%edi
1cc3(3): mov %r12,%rcx
1cc6(2): sub %edx,%edi
1cc8(4): lea 0x0(%rbx,%rdx,8),%rsi
1ccc(7): lea 0x20d(%rip),%rdx
1cd3(5): call 0x34bd(%rip)
1cd8(5): mov 0x28(%rsp),%rcx
1cdd(9): xor $0x28,%rcx
1ce6(6): jnz 0xb0(%rip)
1cec(4): add $0x30,%rsp
1cf0(1): pop %rbx
1cf1(1): pop %rbp
1cf2(2): pop %r12
1cf4(2): pop %r13
1cf6(2): pop %r14
1cf8(1): ret near (%rsp)
1cf9(3): test %r12,%r12
1cfc(2): jz 0xffffffbb(%rip)
1cfe(2): xor %edi,%edi
1d00(5): call 0xfffffbf0(%rip)
1d05(3): mov %eax,%r13d
1d08(2): mov %eax,%edi
1d0a(5): call 0xfffffbe6(%rip)
1d0f(5): mov %r13d,0x8(%rsp)
1d14(3): mov %r12,%rdi
1d17(5): call 0xcd9(%rip)
1d1c(3): test %rax,%rax
1d1f(3): mov %rax,%r14
1d22(2): jz 0x42(%rip)
1d24(3): mov %rsp,%r12
1d27(3): mov %rax,%rcx
1d2a(3): mov %r13d,%edx
1d2d(5): lea 0x10(%r12),%r8
1d32(5): mov $0x1,%esi
1d37(5): mov $0x1ff,%edi
1d3c(5): call 0x10f4(%rip)
1d41(3): mov %r14,%rdi
1d44(4): mov %eax,0xc(%rsp)
1d48(5): call 0xfffff9e8(%rip)
1d4d(5): jmp 0xffffff6d(%rip)
1d52(5): cmp $0xffffff7e,%eax
1d57(6): jnz 0xfffffe69(%rip)
1d5d(2): xor %edi,%edi
1d5f(5): call 0x311(%rip)
1d64(3): mov %r12,%rdi
1d67(5): call 0x2f49(%rip)
1d6c(7): lea 0x6acd(%rip),%rsi
1d73(3): mov %rax,%rbx
1d76(5): mov $0x5,%edx
1d7b(2): xor %edi,%edi
1d7d(5): call 0xfffffa73(%rip)
1d82(3): mov %rbx,%rcx
1d85(3): mov %rax,%rdx
1d88(2): xor %esi,%esi
1d8a(5): mov $0x1,%edi
1d8f(2): xor %eax,%eax
1d91(5): call 0xfffffc7f(%rip)
1d96(5): call 0xfffffa9a(%rip)
1d9b(7): lea 0x6a8e(%rip),%rsi
1da2(2): xor %edi,%edi
1da4(5): mov $0x5,%edx
1da9(5): call 0xfffffa47(%rip)
1dae(2): xor %esi,%esi
1db0(3): mov %rax,%rdx
1db3(2): xor %edi,%edi
1db5(2): xor %eax,%eax
1db7(5): call 0xfffffc59(%rip)
1dbc(5): jmp 0xfffffe04(%rip)

"_start" :
1dd0(2): xor %ebp,%ebp
1dd2(3): mov %rdx,%r9
1dd5(1): pop %rsi
1dd6(3): mov %rsp,%rdx
1dd9(4): and $0xfffffff0,%rsp
1ddd(1): push %rax
1dde(1): push %rsp
1ddf(7): lea 0x691a(%rip),%r8
1de6(7): lea 0x68a3(%rip),%rcx
1ded(7): lea 0xfffffcfc(%rip),%rdi
1df4(6): call 0x20a1d6(%rip)
1dfa(1): hlt 

"deregister_tm_clones" :
1e00(7): lea 0x20a279(%rip),%rdi
1e07(1): push %rbp
1e08(7): lea 0x20a271(%rip),%rax
1e0f(3): cmp %rdi,%rax
1e12(3): mov %rsp,%rbp
1e15(2): jz 0x1b(%rip)
1e17(7): mov 0x20a1aa(%rip),%rax
1e1e(3): test %rax,%rax
1e21(2): jz 0xf(%rip)
1e23(1): pop %rbp
1e24(2): jmp %rax
1e26(a): nop 0x0(%rax,%rax,1)
1e30(1): pop %rbp
1e31(1): ret near (%rsp)

"register_tm_clones" :
1e40(7): lea 0x20a239(%rip),%rdi
1e47(7): lea 0x20a232(%rip),%rsi
1e4e(1): push %rbp
1e4f(3): sub %rdi,%rsi
1e52(3): mov %rsp,%rbp
1e55(4): sar $0x3,%rsi
1e59(3): mov %rsi,%rax
1e5c(4): shr $0x3f,%rax
1e60(3): add %rax,%rsi
1e63(3): sar $0x1,%rsi
1e66(2): jz 0x1a(%rip)
1e68(7): mov 0x20a171(%rip),%rax
1e6f(3): test %rax,%rax
1e72(2): jz 0xe(%rip)
1e74(1): pop %rbp
1e75(2): jmp %rax
1e77(9): nop 0x0(%rax,%rax,1)
1e80(1): pop %rbp
1e81(1): ret near (%rsp)

"__do_global_dtors_aux" :
1e90(7): cmp $0x0,0x20a231(%rip)
1e97(2): jnz 0x31(%rip)
1e99(8): cmp $0x0,0x20a147(%rip)
1ea1(1): push %rbp
1ea2(3): mov %rsp,%rbp
1ea5(2): jz 0xe(%rip)
1ea7(7): mov 0x20a15a(%rip),%rdi
1eae(5): call 0xfffffc32(%rip)
1eb3(5): call 0xffffff4d(%rip)
1eb8(7): mov $0x1,0x20a209(%rip)
1ebf(1): pop %rbp
1ec0(1): ret near (%rsp)
1ec1(7): nop 0x0(%rax)
1ec8(2): REP ret near (%rsp)

"frame_dummy" :
1ed0(1): push %rbp
1ed1(3): mov %rsp,%rbp
1ed4(1): pop %rbp
1ed5(5): jmp 0xffffff6b(%rip)

"process_dir" :
1ee0(1): push %rbp
1ee1(1): push %rbx
1ee2(3): mov %rdx,%rbx
1ee5(4): sub $0x28,%rsp
1ee9(4): cmp $0x0,0x14(%rbx)
1eed(3): mov (%rdx),%rdx
1ef0(2): jz 0x7(%rip)
1ef2(3): test %rdx,%rdx
1ef5(2): jz 0x53(%rip)
1ef7(3): mov 0x10(%rbx),%eax
1efa(4): mov 0xc(%rbx),%r8d
1efe(7): lea 0xab(%rip),%r9
1f05(2): push $0x1
1f07(2): push $0xff
1f09(3): mov %rbx,%rcx
1f0c(2): push $0xff
1f0e(1): push %rax
1f0f(5): call 0x711(%rip)
1f14(3): xor $0x1,%eax
1f17(4): add $0x20,%rsp
1f1b(2): test %al,%al
1f1d(3): movzx %al,%ebp
1f20(2): jnz 0x19(%rip)
1f22(4): cmp $0x0,0x14(%rbx)
1f26(2): jz 0x13(%rip)
1f28(4): cmp $0x0,(%rbx)
1f2c(2): jz 0xd(%rip)
1f2e(5): call 0xfffff822(%rip)
1f33(6): mov $0x5f,(%rax)
1f39(4): add $0x28,%rsp
1f3d(2): mov %ebp,%eax
1f3f(1): pop %rbx
1f40(1): pop %rbp
1f41(1): ret near (%rsp)
1f42(6): nop 0x0(%rax,%rax,1)
1f48(5): mov %rsi,0x18(%rsp)
1f4d(5): mov %rdi,0x10(%rsp)
1f52(5): mov %rdx,0x8(%rsp)
1f57(5): call 0xfffff7f9(%rip)
1f5c(5): mov 0x18(%rsp),%rsi
1f61(6): mov $0x5f,(%rax)
1f67(5): mov 0x10(%rsp),%rdi
1f6c(5): mov 0x8(%rsp),%rdx
1f71(2): jmp 0xffffff86(%rip)

"announce_mkdir.part.4" :
1f80(1): push %rbx
1f81(3): mov %rsi,%rbx
1f84(3): mov %rdi,%rsi
1f87(5): mov $0x4,%edi
1f8c(5): call 0x2a54(%rip)
1f91(4): mov 0x18(%rbx),%rsi
1f95(7): mov 0x20a0ec(%rip),%rdi
1f9c(3): mov %rax,%rdx
1f9f(1): pop %rbx
1fa0(2): xor %eax,%eax
1fa2(5): jmp 0x48e(%rip)

"announce_mkdir" :
1fb0(5): cmp $0x0,0x18(%rsi)
1fb5(2): jz 0xb(%rip)
1fb7(2): jmp 0xffffffc9(%rip)
1fb9(7): nop 0x0(%rax)
1fc0(2): REP ret near (%rsp)

"make_ancestor" :
1fd0(4): cmp $0x0,0x14(%rdx)
1fd4(2): push %r14
1fd6(2): push %r13
1fd8(2): push %r12
1fda(3): mov %rdi,%r12
1fdd(1): push %rbp
1fde(3): mov %rdx,%rbp
1fe1(1): push %rbx
1fe2(3): mov %rsi,%rbx
1fe5(2): jz 0xd(%rip)
1fe7(5): call 0xfffff769(%rip)
1fec(6): mov $0x5f,(%rax)
1ff2(3): mov 0x8(%rbp),%edi
1ff5(4): test $0xc0,%dil
1ff9(2): jnz 0x3f(%rip)
1ffb(3): mov %rbx,%rdi
1ffe(5): mov $0x1ff,%esi
2003(5): call 0xfffff78d(%rip)
2008(2): mov %eax,%ebx
200a(2): test %ebx,%ebx
200c(2): jnz 0x1d(%rip)
200e(3): mov 0x8(%rbp),%ebx
2011(3): shr $0x8,%ebx
2014(3): and $0x1,%ebx
2017(5): cmp $0x0,0x18(%rbp)
201c(2): jz 0xd(%rip)
201e(3): mov %rbp,%rsi
2021(3): mov %r12,%rdi
2024(5): call 0xffffff5c(%rip)
2029(2): mov %ebx,%eax
202b(1): pop %rbx
202c(1): pop %rbp
202d(2): pop %r12
202f(2): pop %r13
2031(2): pop %r14
2033(1): ret near (%rsp)
2034(4): nop 0x0(%rax)
2038(4): and $0x3f,%dil
203c(5): call 0xfffff8b4(%rip)
2041(3): mov %rbx,%rdi
2044(5): mov $0x1ff,%esi
2049(5): call 0xfffff747(%rip)
204e(2): mov %eax,%ebx
2050(5): call 0xfffff700(%rip)
2055(3): mov 0x8(%rbp),%edi
2058(3): mov (%rax),%r14d
205b(3): mov %rax,%r13
205e(5): call 0xfffff892(%rip)
2063(4): mov %r14d,0x0(%r13)
2067(2): jmp 0xffffffa3(%rip)

"usage" :
2070(2): push %r13
2072(2): push %r12
2074(5): mov $0x5,%edx
2079(1): push %rbp
207a(1): push %rbx
207b(2): mov %edi,%ebp
207d(7): sub $0x88,%rsp
2084(7): mov 0x20a055(%rip),%rbx
208b(9): mov $0x28,%rax
2094(5): mov %rax,0x78(%rsp)
2099(2): xor %eax,%eax
209b(2): test %edi,%edi
209d(2): jz 0x30(%rip)
209f(7): lea 0x67da(%rip),%rsi
20a6(2): xor %edi,%edi
20a8(5): call 0xfffff748(%rip)
20ad(7): mov 0x20a00c(%rip),%rdi
20b4(3): mov %rax,%rdx
20b7(3): mov %rbx,%rcx
20ba(5): mov $0x1,%esi
20bf(2): xor %eax,%eax
20c1(5): call 0xfffff9cf(%rip)
20c6(2): mov %ebp,%edi
20c8(5): call 0xfffff9a8(%rip)
20cd(7): lea 0x67d4(%rip),%rsi
20d4(2): xor %edi,%edi
20d6(5): call 0xfffff71a(%rip)
20db(3): mov %rbx,%rdx
20de(3): mov %rax,%rsi
20e1(5): mov $0x1,%edi
20e6(2): xor %eax,%eax
20e8(5): call 0xfffff8f8(%rip)
20ed(7): mov 0x209f94(%rip),%rbx
20f4(7): lea 0x67d5(%rip),%rsi
20fb(5): mov $0x5,%edx
2100(2): xor %edi,%edi
2102(5): call 0xfffff6ee(%rip)
2107(3): mov %rbx,%rsi
210a(3): mov %rax,%rdi
210d(5): call 0xfffff7c3(%rip)
2112(7): mov 0x209f6f(%rip),%rbx
2119(7): lea 0x67f0(%rip),%rsi
2120(5): mov $0x5,%edx
2125(2): xor %edi,%edi
2127(5): call 0xfffff6c9(%rip)
212c(3): mov %rbx,%rsi
212f(3): mov %rax,%rdi
2132(5): call 0xfffff79e(%rip)
2137(7): mov 0x209f4a(%rip),%rbx
213e(7): lea 0x681b(%rip),%rsi
2145(5): mov $0x5,%edx
214a(2): xor %edi,%edi
214c(5): call 0xfffff6a4(%rip)
2151(3): mov %rbx,%rsi
2154(3): mov %rax,%rdi
2157(5): call 0xfffff779(%rip)
215c(7): mov 0x209f25(%rip),%rbx
2163(7): lea 0x68c6(%rip),%rsi
216a(5): mov $0x5,%edx
216f(2): xor %edi,%edi
2171(5): call 0xfffff67f(%rip)
2176(3): mov %rbx,%rsi
2179(3): mov %rax,%rdi
217c(5): call 0xfffff754(%rip)
2181(7): mov 0x209f00(%rip),%rbx
2188(7): lea 0x69a9(%rip),%rsi
218f(5): mov $0x5,%edx
2194(2): xor %edi,%edi
2196(5): call 0xfffff65a(%rip)
219b(3): mov %rbx,%rsi
219e(3): mov %rax,%rdi
21a1(5): call 0xfffff72f(%rip)
21a6(7): mov 0x209edb(%rip),%rbx
21ad(7): lea 0x69b4(%rip),%rsi
21b4(5): mov $0x5,%edx
21b9(2): xor %edi,%edi
21bb(5): call 0xfffff635(%rip)
21c0(3): mov %rbx,%rsi
21c3(3): mov %rax,%rdi
21c6(7): lea 0x6577(%rip),%rbx
21cd(5): call 0xfffff703(%rip)
21d2(7): lea 0x6571(%rip),%rax
21d9(7): lea 0x65ab(%rip),%rcx
21e0(9): mov $0x0,0x60(%rsp)
21e9(9): mov $0x0,0x68(%rsp)
21f2(3): mov %rsp,%rdx
21f5(4): mov %rax,(%rsp)
21f9(7): lea 0x654c(%rip),%rax
2200(5): mov %rcx,0x30(%rsp)
2205(7): lea 0x6589(%rip),%rcx
220c(5): mov %rax,0x8(%rsp)
2211(7): lea 0x65ac(%rip),%rax
2218(5): mov %rcx,0x40(%rsp)
221d(7): lea 0x657b(%rip),%rcx
2224(5): mov %rax,0x10(%rsp)
2229(7): lea 0x652c(%rip),%rax
2230(5): mov %rcx,0x50(%rsp)
2235(5): mov %rax,0x18(%rsp)
223a(7): lea 0x6531(%rip),%rax
2241(5): mov %rax,0x20(%rsp)
2246(7): lea 0x652f(%rip),%rax
224d(5): mov %rax,0x28(%rsp)
2252(5): mov %rax,0x38(%rsp)
2257(5): mov %rax,0x48(%rsp)
225c(5): mov %rax,0x58(%rsp)
2261(7): nop 0x0(%rax)
2268(4): add $0x10,%rdx
226c(3): mov (%rdx),%rdi
226f(3): test %rdi,%rdi
2272(2): jz 0x15(%rip)
2274(5): mov $0x6,%ecx
2279(3): mov %rbx,%rsi
227c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
227e(3): setnbe %al
2281(2): sbb $0x0,%al
2283(2): test %al,%al
2285(2): jnz 0xffffffe3(%rip)
2287(4): mov 0x8(%rdx),%r12
228b(2): xor %edi,%edi
228d(5): mov $0x5,%edx
2292(7): lea 0x6510(%rip),%rsi
2299(3): test %r12,%r12
229c(6): jz 0xc7(%rip)
22a2(5): call 0xfffff54e(%rip)
22a7(7): lea 0x68f2(%rip),%rcx
22ae(7): lea 0x650b(%rip),%rdx
22b5(3): mov %rax,%rsi
22b8(5): mov $0x1,%edi
22bd(2): xor %eax,%eax
22bf(5): call 0xfffff721(%rip)
22c4(2): xor %esi,%esi
22c6(5): mov $0x5,%edi
22cb(5): call 0xfffff705(%rip)
22d0(3): test %rax,%rax
22d3(2): jz 0x1e(%rip)
22d5(7): lea 0x64f2(%rip),%rsi
22dc(5): mov $0x3,%edx
22e1(3): mov %rax,%rdi
22e4(5): call 0xfffff47c(%rip)
22e9(2): test %eax,%eax
22eb(6): jnz 0x10d(%rip)
22f1(7): lea 0x64da(%rip),%rsi
22f8(2): xor %edi,%edi
22fa(5): mov $0x5,%edx
22ff(5): call 0xfffff4f1(%rip)
2304(7): lea 0x6439(%rip),%rcx
230b(7): lea 0x688e(%rip),%rdx
2312(3): mov %rax,%rsi
2315(5): mov $0x1,%edi
231a(2): xor %eax,%eax
231c(5): call 0xfffff6c4(%rip)
2321(3): cmp %rbx,%r12
2324(7): lea 0x643b(%rip),%rcx
232b(7): lea 0x70d4(%rip),%rbx
2332(4): cmove %rcx,%rbx
2336(7): lea 0x68d3(%rip),%rsi
233d(2): xor %edi,%edi
233f(5): mov $0x5,%edx
2344(5): call 0xfffff4ac(%rip)
2349(3): mov %rbx,%rcx
234c(3): mov %rax,%rsi
234f(3): mov %r12,%rdx
2352(5): mov $0x1,%edi
2357(2): xor %eax,%eax
2359(5): call 0xfffff687(%rip)
235e(5): jmp 0xfffffd68(%rip)
2363(5): call 0xfffff48d(%rip)
2368(7): lea 0x6831(%rip),%rcx
236f(7): lea 0x644a(%rip),%rdx
2376(3): mov %rax,%rsi
2379(5): mov $0x1,%edi
237e(2): xor %eax,%eax
2380(5): call 0xfffff660(%rip)
2385(2): xor %esi,%esi
2387(5): mov $0x5,%edi
238c(5): call 0xfffff644(%rip)
2391(3): test %rax,%rax
2394(2): jz 0x1a(%rip)
2396(7): lea 0x6431(%rip),%rsi
239d(5): mov $0x3,%edx
23a2(3): mov %rax,%rdi
23a5(5): call 0xfffff3bb(%rip)
23aa(2): test %eax,%eax
23ac(2): jnz 0x45(%rip)
23ae(7): lea 0x641d(%rip),%rsi
23b5(5): mov $0x5,%edx
23ba(2): xor %edi,%edi
23bc(7): lea 0x6381(%rip),%r12
23c3(7): lea 0x639c(%rip),%rbx
23ca(5): call 0xfffff426(%rip)
23cf(7): lea 0x636e(%rip),%rcx
23d6(7): lea 0x67c3(%rip),%rdx
23dd(3): mov %rax,%rsi
23e0(5): mov $0x1,%edi
23e5(2): xor %eax,%eax
23e7(5): call 0xfffff5f9(%rip)
23ec(5): jmp 0xffffff4a(%rip)
23f1(7): lea 0x634c(%rip),%r12
23f8(7): mov 0x209c89(%rip),%r13
23ff(7): lea 0x67c2(%rip),%rsi
2406(2): xor %edi,%edi
2408(5): mov $0x5,%edx
240d(5): call 0xfffff3e3(%rip)
2412(3): mov %r13,%rsi
2415(3): mov %rax,%rdi
2418(5): call 0xfffff4b8(%rip)
241d(5): jmp 0xfffffed4(%rip)

"prog_fprintf" :
2430(1): push %rbp
2431(1): push %rbx
2432(3): mov %rsi,%rbp
2435(3): mov %rdi,%rbx
2438(7): sub $0xd8,%rsp
243f(2): test %al,%al
2441(5): mov %rdx,0x30(%rsp)
2446(5): mov %rcx,0x38(%rsp)
244b(5): mov %r8,0x40(%rsp)
2450(5): mov %r9,0x48(%rsp)
2455(2): jz 0x39(%rip)
2457(5): movaps %xmm0,0x50(%rsp)
245c(5): movaps %xmm1,0x60(%rsp)
2461(5): movaps %xmm2,0x70(%rsp)
2466(8): movaps %xmm3,0x80(%rsp)
246e(8): movaps %xmm4,0x90(%rsp)
2476(8): movaps %xmm5,0xa0(%rsp)
247e(8): movaps %xmm6,0xb0(%rsp)
2486(8): movaps %xmm7,0xc0(%rsp)
248e(3): mov %rbx,%rsi
2491(9): mov $0x28,%rax
249a(5): mov %rax,0x18(%rsp)
249f(2): xor %eax,%eax
24a1(7): mov 0x209c38(%rip),%rdi
24a8(5): call 0xfffff428(%rip)
24ad(7): lea 0x67dd(%rip),%rdi
24b4(3): mov %rbx,%rcx
24b7(5): mov $0x2,%edx
24bc(5): mov $0x1,%esi
24c1(5): call 0xfffff4df(%rip)
24c6(8): lea 0xf0(%rsp),%rax
24ce(3): mov %rsp,%rdx
24d1(3): mov %rbp,%rsi
24d4(3): mov %rbx,%rdi
24d7(7): mov $0x10,(%rsp)
24de(8): mov $0x30,0x4(%rsp)
24e6(5): mov %rax,0x8(%rsp)
24eb(5): lea 0x20(%rsp),%rax
24f0(5): mov %rax,0x10(%rsp)
24f5(5): call 0x376b(%rip)
24fa(4): mov 0x28(%rbx),%rax
24fe(4): cmp 0x30(%rbx),%rax
2502(2): jnb 0x2e(%rip)
2504(4): lea 0x1(%rax),%rdx
2508(4): mov %rdx,0x28(%rbx)
250c(3): mov $0xa,(%rax)
250f(5): mov 0x18(%rsp),%rax
2514(9): xor $0x28,%rax
251d(2): jnz 0x22(%rip)
251f(7): add $0xd8,%rsp
2526(1): pop %rbx
2527(1): pop %rbp
2528(1): ret near (%rsp)
2529(7): nop 0x0(%rax)
2530(5): mov $0xa,%esi
2535(3): mov %rbx,%rdi
2538(5): call 0xfffff328(%rip)
253d(2): jmp 0xffffffd2(%rip)
253f(5): call 0xfffff2f1(%rip)

"close_stdout_set_file_name" :
2550(7): mov %rdi,0x209b81(%rip)
2557(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2560(7): mov %dil,0x209b69(%rip)
2567(1): ret near (%rsp)

"close_stdout" :
2570(1): push %rbp
2571(1): push %rbx
2572(4): sub $0x8,%rsp
2576(7): mov 0x209b0b(%rip),%rdi
257d(5): call 0x37e3(%rip)
2582(2): test %eax,%eax
2584(2): jz 0x18(%rip)
2586(5): call 0xfffff1ca(%rip)
258b(7): cmp $0x0,0x209b3e(%rip)
2592(3): mov %rax,%rbx
2595(2): jz 0x1e(%rip)
2597(3): cmp $0x20,(%rax)
259a(2): jnz 0x19(%rip)
259c(7): mov 0x209b1d(%rip),%rdi
25a3(5): call 0x37bd(%rip)
25a8(2): test %eax,%eax
25aa(2): jnz 0x48(%rip)
25ac(4): add $0x8,%rsp
25b0(1): pop %rbx
25b1(1): pop %rbp
25b2(1): ret near (%rsp)
25b3(7): lea 0x66df(%rip),%rsi
25ba(2): xor %edi,%edi
25bc(5): mov $0x5,%edx
25c1(5): call 0xfffff22f(%rip)
25c6(7): mov 0x209b0b(%rip),%rdi
25cd(3): mov %rax,%rbp
25d0(3): test %rdi,%rdi
25d3(2): jz 0x2a(%rip)
25d5(5): call 0x24db(%rip)
25da(2): mov (%rbx),%esi
25dc(7): lea 0x66c2(%rip),%rdx
25e3(3): mov %rax,%rcx
25e6(3): mov %rbp,%r8
25e9(2): xor %edi,%edi
25eb(2): xor %eax,%eax
25ed(5): call 0xfffff423(%rip)
25f2(6): mov 0x209a20(%rip),%edi
25f8(5): call 0xfffff178(%rip)
25fd(2): mov (%rbx),%esi
25ff(7): lea 0x66a3(%rip),%rdx
2606(3): mov %rax,%rcx
2609(2): xor %edi,%edi
260b(2): xor %eax,%eax
260d(5): call 0xfffff403(%rip)
2612(2): jmp 0xffffffe0(%rip)

"make_dir_parents" :
2620(2): push %r15
2622(2): push %r14
2624(3): mov %rcx,%r15
2627(2): push %r13
2629(2): push %r12
262b(3): mov %rsi,%r14
262e(1): push %rbp
262f(1): push %rbx
2630(3): mov %rdx,%r13
2633(3): mov %rdi,%rbx
2636(3): mov %r8d,%r12d
2639(7): sub $0xc8,%rsp
2640(7): mov 0x118(%rsp),%eax
2647(4): mov %eax,0x18(%rsp)
264b(9): mov $0x28,%rax
2654(8): mov %rax,0xb8(%rsp)
265c(2): xor %eax,%eax
265e(3): cmp $0x2f,(%rdi)
2661(2): jz 0xb(%rip)
2663(3): cmp $0x4,(%rsi)
2666(6): jz 0x14a(%rip)
266c(3): test %r13,%r13
266f(6): jz 0x131(%rip)
2675(3): mov %r15,%rcx
2678(3): mov %r13,%rdx
267b(3): mov %r14,%rsi
267e(3): mov %rbx,%rdi
2681(5): mov %r9,0x8(%rsp)
2686(5): call 0x386a(%rip)
268b(3): test %rax,%rax
268e(6): js 0x2e2(%rip)
2694(5): mov 0x8(%rsp),%r9
2699(3): add %rbx,%rax
269c(4): mov %rax,(%rsp)
26a0(8): cmp $0xff,0x108(%rsp)
26a8(7): mov 0x100(%rsp),%eax
26af(3): mov %r12d,%esi
26b2(3): setz %cl
26b5(8): cmp $0xff,0x110(%rsp)
26bd(3): setz %dl
26c0(5): and $0xc00,%eax
26c5(6): and $0x200,%esi
26cb(2): or %esi,%eax
26cd(2): and %dl,%cl
26cf(4): mov %cl,0x1f(%rsp)
26d3(6): jnz 0x14d(%rip)
26d9(3): mov %r12d,%eax
26dc(3): and $0xc0,%eax
26df(4): mov %eax,0x8(%rsp)
26e3(4): mov 0x8(%rsp),%esi
26e7(4): mov (%rsp),%rdi
26eb(5): mov %r9,0x10(%rsp)
26f0(5): call 0xfffff0a0(%rip)
26f5(2): test %eax,%eax
26f7(2): mov %eax,%ebp
26f9(5): mov 0x10(%rsp),%r9
26fe(6): jz 0x192(%rip)
2704(5): call 0xfffff04c(%rip)
2709(5): cmp $0x0,0x18(%rsp)
270e(3): mov %rax,%r15
2711(2): mov (%rax),%ebp
2713(6): jz 0x29d(%rip)
2719(2): test %ebp,%ebp
271b(6): jz 0x151(%rip)
2721(3): cmp $0x2,%ebp
2724(4): setnz %r12b
2728(3): test %r13,%r13
272b(3): setnz %al
272e(3): and %al,%r12b
2731(6): jz 0x8a(%rip)
2737(4): mov (%rsp),%rsi
273b(5): lea 0x20(%rsp),%rdx
2740(5): mov $0x1,%edi
2745(5): call 0xfffff1db(%rip)
274a(2): test %eax,%eax
274c(6): jz 0x244(%rip)
2752(3): cmp $0x11,%ebp
2755(2): jnz 0x66(%rip)
2757(3): mov (%r15),%eax
275a(3): cmp $0x14,%eax
275d(2): jz 0x5e(%rip)
275f(3): cmp $0x2,%eax
2762(2): jz 0x59(%rip)
2764(3): mov %rbx,%rdi
2767(3): xor %r12d,%r12d
276a(5): call 0x2546(%rip)
276f(7): lea 0x6538(%rip),%rsi
2776(5): mov $0x5,%edx
277b(2): xor %edi,%edi
277d(3): mov %rax,%rbx
2780(5): call 0xfffff070(%rip)
2785(3): mov (%r15),%esi
2788(3): mov %rax,%rdx
278b(3): mov %rbx,%rcx
278e(2): xor %edi,%edi
2790(2): xor %eax,%eax
2792(5): call 0xfffff27e(%rip)
2797(2): jmp 0x56(%rip)
2799(7): nop 0x0(%rax)
27a0(4): mov %rbx,(%rsp)
27a4(5): jmp 0xfffffefc(%rip)
27a9(7): nop 0x0(%rax)
27b0(3): mov 0x4(%rsi),%ebp
27b3(2): test %ebp,%ebp
27b5(6): jz 0xfffffeb7(%rip)
27bb(3): mov %rbx,%rdi
27be(3): xor %r12d,%r12d
27c1(5): call 0x24ef(%rip)
27c6(7): lea 0x64f0(%rip),%rsi
27cd(3): mov %rax,%rbx
27d0(5): mov $0x5,%edx
27d5(2): xor %edi,%edi
27d7(5): call 0xfffff019(%rip)
27dc(3): mov %rbx,%rcx
27df(3): mov %rax,%rdx
27e2(2): mov %ebp,%esi
27e4(2): xor %edi,%edi
27e6(2): xor %eax,%eax
27e8(5): call 0xfffff228(%rip)
27ed(8): mov 0xb8(%rsp),%rdi
27f5(9): xor $0x28,%rdi
27fe(3): mov %r12d,%eax
2801(6): jnz 0x1d4(%rip)
2807(7): add $0xc8,%rsp
280e(1): pop %rbx
280f(1): pop %rbp
2810(2): pop %r12
2812(2): pop %r13
2814(2): pop %r14
2816(2): pop %r15
2818(1): ret near (%rsp)
2819(7): nop 0x0(%rax)
2820(2): test %eax,%eax
2822(2): jnz 0x5e(%rip)
2824(4): mov (%rsp),%rdi
2828(3): mov %r12d,%esi
282b(5): mov %r9,0x10(%rsp)
2830(5): call 0xffffef60(%rip)
2835(2): test %eax,%eax
2837(2): mov %eax,%ebp
2839(6): jnz 0xfffffecb(%rip)
283f(3): mov %r12d,%eax
2842(3): mov %r15,%rsi
2845(3): mov %rbx,%rdi
2848(5): and $0x1ff,%eax
284d(7): and 0x100(%rsp),%eax
2854(5): mov 0x10(%rsp),%r9
2859(4): mov %eax,0x8(%rsp)
285d(3): call %r9
2860(4): mov 0x8(%rsp),%esi
2864(2): test %esi,%esi
2866(6): jnz 0x174(%rip)
286c(6): mov $0x1,%r12d
2872(5): jmp 0xffffff7b(%rip)
2877(9): nop 0x0(%rax,%rax,1)
2880(3): mov %r12d,%eax
2883(3): and $0xed,%eax
2886(4): mov %eax,0x8(%rsp)
288a(5): jmp 0xfffffe59(%rip)
288f(1): nop 
2890(3): mov %r15,%rsi
2893(3): mov %rbx,%rdi
2896(3): call %r9
2899(5): mov $0x3,%edx
289e(4): mov (%rsp),%r15
28a2(5): lea 0x20(%rsp),%rcx
28a7(3): mov %r14,%rdi
28aa(3): mov %r15,%rsi
28ad(5): call 0x2453(%rip)
28b2(3): cmp $0xff,%eax
28b5(2): jl 0xffffffb7(%rip)
28b7(2): test %eax,%eax
28b9(7): lea 0x63ec(%rip),%rax
28c0(3): mov %r12d,%r9d
28c3(4): cmovne %r15,%rax
28c7(4): sub $0x8,%rsp
28cb(7): mov 0x108(%rsp),%edx
28d2(3): mov %rax,%rsi
28d5(1): push %rdx
28d6(8): mov 0x120(%rsp),%r8d
28de(7): mov 0x118(%rsp),%ecx
28e5(4): mov 0x18(%rsp),%edx
28e9(4): mov 0x30(%rsp),%edi
28ed(5): call 0x3773(%rip)
28f2(2): test %eax,%eax
28f4(1): pop %rdx
28f5(1): pop %rcx
28f6(6): jz 0xffffff76(%rip)
28fc(2): test %ebp,%ebp
28fe(6): jz 0xca(%rip)
2904(3): cmp $0x2,%ebp
2907(6): jz 0xfffffeb4(%rip)
290d(3): test %r13,%r13
2910(6): jz 0xfffffeab(%rip)
2916(5): call 0xffffee3a(%rip)
291b(3): cmp $0x14,(%rax)
291e(3): mov %rax,%r12
2921(6): jz 0xfffffe9a(%rip)
2927(3): mov %rbx,%rdi
292a(5): call 0x2386(%rip)
292f(5): cmp $0x0,0x1f(%rsp)
2934(3): mov %rax,%rbx
2937(7): lea 0x63ba(%rip),%rsi
293e(7): lea 0x6393(%rip),%rax
2945(5): mov $0x5,%edx
294a(4): cmovne %rax,%rsi
294e(2): xor %edi,%edi
2950(5): call 0xffffeea0(%rip)
2955(4): mov (%r12),%esi
2959(3): mov %rax,%rdx
295c(3): mov %rbx,%rcx
295f(2): xor %edi,%edi
2961(2): xor %eax,%eax
2963(3): xor %r12d,%r12d
2966(5): call 0xfffff0aa(%rip)
296b(5): jmp 0xfffffe82(%rip)
2970(4): cmp $0xffffffff,%rax
2974(6): jnz 0xfffffef8(%rip)
297a(5): call 0xffffedd6(%rip)
297f(2): mov (%rax),%ebp
2981(5): jmp 0xfffffe3a(%rip)
2986(a): nop 0x0(%rax,%rax,1)
2990(4): mov 0x38(%rsp),%eax
2994(5): and $0xf000,%eax
2999(5): cmp $0x4000,%eax
299e(6): jnz 0xfffffe1d(%rip)
29a4(5): jmp 0xfffffe49(%rip)
29a9(7): nop 0x0(%rax)
29b0(8): mov $0xffffffff,0x8(%rsp)
29b8(5): mov $0x2,%edx
29bd(5): jmp 0xfffffee1(%rip)
29c2(6): nop 0x0(%rax,%rax,1)
29c8(5): call 0xffffed88(%rip)
29cd(3): mov %rax,%r12
29d0(5): jmp 0xffffff57(%rip)
29d5(5): call 0xffffee5b(%rip)
29da(5): mov %r12d,0x8(%rsp)
29df(5): mov $0x3,%edx
29e4(5): jmp 0xfffffeba(%rip)

"mode_compile" :
29f0(1): push %rbp
29f1(1): push %rbx
29f2(3): mov %rdi,%rbx
29f5(4): sub $0x8,%rsp
29f9(3): movsx (%rdi),%eax
29fc(3): lea 0xffffffd0(%rax),%edx
29ff(3): cmp $0x7,%dl
2a02(6): jbe 0xb6(%rip)
2a08(2): test %al,%al
2a0a(3): mov %rdi,%rcx
2a0d(5): mov $0x1,%edi
2a12(2): jz 0x29(%rip)
2a14(4): nop 0x0(%rax)
2a18(2): mov %eax,%edx
2a1a(3): and $0xef,%edx
2a1d(3): cmp $0x2d,%dl
2a20(3): setz %dl
2a23(2): cmp $0x2b,%al
2a25(3): setz %al
2a28(4): add $0x1,%rcx
2a2c(2): or %edx,%eax
2a2e(3): movzx %al,%eax
2a31(3): add %rax,%rdi
2a34(3): movzx (%rcx),%eax
2a37(2): test %al,%al
2a39(2): jnz 0xffffffdf(%rip)
2a3b(5): mov $0x10,%edx
2a40(2): xor %ecx,%ecx
2a42(3): mov %rdx,%rax
2a45(3): mul %rax,%rdi,%rdx
2a48(6): jo 0x317(%rip)
2a4e(3): test %rax,%rax
2a51(6): js 0x318(%rip)
2a57(3): test %rcx,%rcx
2a5a(6): jnz 0x30f(%rip)
2a60(4): shl/sal $0x4,%rdi
2a64(7): lea 0x62b9(%rip),%rbp
2a6b(5): call 0x2ed5(%rip)
2a70(2): xor %esi,%esi
2a72(3): xor %r11d,%r11d
2a75(4): movzx (%rbx),%r9d
2a79(4): cmp $0x61,%r9b
2a7d(6): jz 0x253(%rip)
2a83(2): jle 0x6d(%rip)
2a85(4): cmp $0x6f,%r9b
2a89(6): jz 0x277(%rip)
2a8f(4): cmp $0x75,%r9b
2a93(6): jz 0x25d(%rip)
2a99(4): cmp $0x67,%r9b
2a9d(6): jz 0x243(%rip)
2aa3(3): mov %rax,%rdi
2aa6(5): call 0xffffec8a(%rip)
2aab(2): xor %eax,%eax
2aad(4): add $0x8,%rsp
2ab1(1): pop %rbx
2ab2(1): pop %rbp
2ab3(1): ret near (%rsp)
2ab4(4): nop 0x0(%rax)
2ab8(3): mov %rdi,%rdx
2abb(2): xor %ebp,%ebp
2abd(2): jmp 0x12(%rip)
2abf(1): nop 
2ac0(3): movsx (%rdx),%eax
2ac3(3): lea 0xffffffd0(%rax),%ecx
2ac6(3): cmp $0x7,%cl
2ac9(6): jnbe 0x247(%rip)
2acf(4): lea 0xffffffd0(%rax,%rbp,8),%ebp
2ad3(4): add $0x1,%rdx
2ad7(6): cmp $0xfff,%ebp
2add(2): jbe 0xffffffe3(%rip)
2adf(4): add $0x8,%rsp
2ae3(2): xor %eax,%eax
2ae5(1): pop %rbx
2ae6(1): pop %rbp
2ae7(1): ret near (%rsp)
2ae8(8): nop 0x0(%rax,%rax,1)
2af0(4): cmp $0x2d,%r9b
2af4(2): jz 0xe(%rip)
2af6(4): cmp $0x3d,%r9b
2afa(2): jz 0x8(%rip)
2afc(4): cmp $0x2b,%r9b
2b00(2): jnz 0xffffffa3(%rip)
2b02(4): lea 0x1(%rsi),%rdi
2b06(4): shl/sal $0x4,%rsi
2b0a(3): add %rax,%rsi
2b0d(2): jmp 0x67(%rip)
2b0f(1): nop 
2b10(3): cmp $0x6f,%dl
2b13(4): lea 0x2(%rbx),%r8
2b17(6): jz 0x199(%rip)
2b1d(3): cmp $0x75,%dl
2b20(6): mov $0x1c0,%r10d
2b26(6): jnz 0xda(%rip)
2b2c(3): mov %r9b,(%rsi)
2b2f(4): mov $0x3,0x1(%rsi)
2b33(5): movzx 0x2(%rbx),%r9d
2b38(4): mov %r11d,0x4(%rsi)
2b3c(3): mov %r8,%rbx
2b3f(4): mov %r10d,0x8(%rsi)
2b43(3): mov %r10d,%edx
2b46(3): and %r11d,%edx
2b49(3): test %r11d,%r11d
2b4c(4): cmovne %edx,%r10d
2b50(3): mov %r9d,%edx
2b53(4): mov %r10d,0xc(%rsi)
2b57(4): add $0x10,%rsi
2b5b(3): and $0xef,%edx
2b5e(4): lea 0x1(%rdi),%rcx
2b62(3): cmp $0x2d,%dl
2b65(2): jz 0xc(%rip)
2b67(4): cmp $0x2b,%r9b
2b6b(6): jnz 0x205(%rip)
2b71(3): mov %rcx,%rdi
2b74(4): movsx 0x1(%rbx),%edx
2b78(4): lea 0x1(%rbx),%rcx
2b7c(3): cmp $0x67,%dl
2b7f(6): jz 0x141(%rip)
2b85(2): jnle 0xffffff8b(%rip)
2b87(4): lea 0xffffffd0(%rdx),%r8d
2b8b(4): cmp $0x7,%r8b
2b8f(2): jnbe 0x71(%rip)
2b91(3): xor %r8d,%r8d
2b94(4): nop 0x0(%rax)
2b98(5): lea 0xffffffd0(%rdx,%r8,8),%r8d
2b9d(4): add $0x1,%rcx
2ba1(7): cmp $0xfff,%r8d
2ba8(6): jnbe 0xfffffefb(%rip)
2bae(3): movsx (%rcx),%edx
2bb1(4): lea 0xffffffd0(%rdx),%r10d
2bb5(4): cmp $0x7,%r10b
2bb9(2): jbe 0xffffffdf(%rip)
2bbb(3): test %r11d,%r11d
2bbe(6): jnz 0xfffffee5(%rip)
2bc4(2): test %dl,%dl
2bc6(2): jz 0xb(%rip)
2bc8(3): cmp $0x2c,%dl
2bcb(6): jnz 0xfffffed8(%rip)
2bd1(3): mov %r9b,(%rsi)
2bd4(4): mov $0x1,0x1(%rsi)
2bd8(3): mov %edx,%r9d
2bdb(7): mov $0xfff,0x4(%rsi)
2be2(4): mov %r8d,0x8(%rsi)
2be6(3): mov %rcx,%rbx
2be9(6): mov $0xfff,%r11d
2bef(6): mov $0xfff,%r10d
2bf5(5): jmp 0xffffff5b(%rip)
2bfa(6): nop 0x0(%rax,%rax,1)
2c00(4): lea 0xffffffa8(%rdx),%r8d
2c04(3): xor %r10d,%r10d
2c07(5): mov $0x1,%ebx
2c0c(4): cmp $0x20,%r8b
2c10(2): jnbe 0x39(%rip)
2c12(6): nop 0x0(%rax,%rax,1)
2c18(4): movzx %r8b,%r8d
2c1c(5): movsxd 0x0(%rbp,%r8,4),%r8
2c21(3): add %rbp,%r8
2c24(3): jmp %r8
2c27(9): nop 0x0(%rax,%rax,1)
2c30(5): mov $0x2,%ebx
2c35(3): nop (%rax)
2c38(4): add $0x1,%rcx
2c3c(3): movzx (%rcx),%edx
2c3f(4): lea 0xffffffa8(%rdx),%r8d
2c43(4): cmp $0x20,%r8b
2c47(2): jbe 0xffffffd1(%rip)
2c49(3): mov %r9b,(%rsi)
2c4c(3): mov %bl,0x1(%rsi)
2c4f(3): mov %edx,%r9d
2c52(4): mov %r11d,0x4(%rsi)
2c56(4): mov %r10d,0x8(%rsi)
2c5a(3): mov %rcx,%rbx
2c5d(5): jmp 0xfffffee6(%rip)
2c62(6): nop 0x0(%rax,%rax,1)
2c68(4): or $0x49,%r10d
2c6c(2): jmp 0xffffffcc(%rip)
2c6e(2): nop 
2c70(4): or $0x92,%r10b
2c74(2): jmp 0xffffffc4(%rip)
2c76(a): nop 0x0(%rax,%rax,1)
2c80(7): or $0x200,%r10d
2c87(2): jmp 0xffffffb1(%rip)
2c89(7): nop 0x0(%rax)
2c90(7): or $0xc00,%r10d
2c97(2): jmp 0xffffffa1(%rip)
2c99(7): nop 0x0(%rax)
2ca0(7): or $0x124,%r10d
2ca7(2): jmp 0xffffff91(%rip)
2ca9(7): nop 0x0(%rax)
2cb0(6): mov $0x7,%r10d
2cb6(5): jmp 0xfffffe76(%rip)
2cbb(5): nop 0x0(%rax,%rax,1)
2cc0(4): lea 0x2(%rbx),%r8
2cc4(6): mov $0x38,%r10d
2cca(5): jmp 0xfffffe62(%rip)
2ccf(1): nop 
2cd0(6): mov $0xfff,%r11d
2cd6(4): add $0x1,%rbx
2cda(5): jmp 0xfffffd9b(%rip)
2cdf(1): nop 
2ce0(7): or $0x438,%r11d
2ce7(2): jmp 0xffffffef(%rip)
2ce9(7): nop 0x0(%rax)
2cf0(7): or $0x9c0,%r11d
2cf7(2): jmp 0xffffffdf(%rip)
2cf9(7): nop 0x0(%rax)
2d00(7): or $0x207,%r11d
2d07(2): jmp 0xffffffcf(%rip)
2d09(7): nop 0x0(%rax)
2d10(2): test %al,%al
2d12(6): jnz 0xfffffdcd(%rip)
2d18(3): sub %rbx,%rdx
2d1b(2): mov %ebp,%ebx
2d1d(5): mov $0xfff,%eax
2d22(6): and $0xc00,%ebx
2d28(5): mov $0x20,%edi
2d2d(6): or $0x3ff,%ebx
2d33(4): cmp $0x5,%rdx
2d37(3): cmovnl %eax,%ebx
2d3a(5): call 0x2c06(%rip)
2d3f(5): mov $0x13d,%edx
2d44(7): mov $0xfff,0x4(%rax)
2d4b(3): mov %ebp,0x8(%rax)
2d4e(3): mov %dx,(%rax)
2d51(3): mov %ebx,0xc(%rax)
2d54(4): mov $0x0,0x11(%rax)
2d58(4): add $0x8,%rsp
2d5c(1): pop %rbx
2d5d(1): pop %rbp
2d5e(1): ret near (%rsp)
2d5f(5): mov $0x1,%ecx
2d64(5): jmp 0xfffffcea(%rip)
2d69(5): call 0x2e27(%rip)
2d6e(2): nop 
2d70(4): cmp $0x2c,%r9b
2d74(2): jnz 0xe(%rip)
2d76(4): add $0x1,%rbx
2d7a(3): mov %rdi,%rsi
2d7d(5): jmp 0xfffffcf5(%rip)
2d82(3): test %r9b,%r9b
2d85(6): jnz 0xfffffd1e(%rip)
2d8b(4): shl/sal $0x4,%rdi
2d8f(5): mov $0x0,0x1(%rax,%rdi,1)
2d94(5): jmp 0xfffffd19(%rip)

"mode_create_from_ref" :
2da0(1): push %rbx
2da1(3): mov %rdi,%rsi
2da4(5): mov $0x1,%edi
2da9(7): sub $0xa0,%rsp
2db0(3): mov %rsp,%rdx
2db3(9): mov $0x28,%rax
2dbc(8): mov %rax,0x98(%rsp)
2dc4(2): xor %eax,%eax
2dc6(5): call 0xffffeb5a(%rip)
2dcb(2): test %eax,%eax
2dcd(2): jnz 0x53(%rip)
2dcf(4): mov 0x18(%rsp),%ebx
2dd3(5): mov $0x20,%edi
2dd8(5): call 0x2b68(%rip)
2ddd(5): mov $0x13d,%edx
2de2(7): mov $0xfff,0x4(%rax)
2de9(7): mov $0xfff,0xc(%rax)
2df0(3): mov %dx,(%rax)
2df3(3): mov %ebx,0x8(%rax)
2df6(4): mov $0x0,0x11(%rax)
2dfa(8): mov 0x98(%rsp),%rcx
2e02(9): xor $0x28,%rcx
2e0b(2): jnz 0x19(%rip)
2e0d(7): add $0xa0,%rsp
2e14(1): pop %rbx
2e15(1): ret near (%rsp)
2e16(a): nop 0x0(%rax,%rax,1)
2e20(2): xor %eax,%eax
2e22(2): jmp 0xffffffd8(%rip)
2e24(5): call 0xffffea0c(%rip)

"mode_adjust" :
2e30(5): movzx 0x1(%rcx),%r10d
2e35(2): mov %edi,%eax
2e37(5): and $0xfff,%eax
2e3c(3): test %r10b,%r10b
2e3f(6): jz 0x151(%rip)
2e45(4): cmp $0x1,%sil
2e49(2): push %r12
2e4b(1): push %rbp
2e4c(1): push %rbx
2e4d(2): sbb %ebx,%ebx
2e4f(4): movzx %sil,%ebp
2e53(2): not %ebx
2e55(3): xor %r11d,%r11d
2e58(6): and $0xc00,%ebx
2e5e(2): jmp 0x3c(%rip)
2e60(3): mov %r9d,%edi
2e63(2): or %edx,%edi
2e65(2): not %edi
2e67(2): and %edi,%esi
2e69(4): cmp $0x2d,%r12b
2e6d(6): jz 0x113(%rip)
2e73(4): cmp $0x3d,%r12b
2e77(6): jz 0xb4(%rip)
2e7d(4): cmp $0x2b,%r12b
2e81(2): jnz 0x7(%rip)
2e83(3): or %esi,%r11d
2e86(2): or %esi,%eax
2e88(4): add $0x10,%rcx
2e8c(5): movzx 0x1(%rcx),%r10d
2e91(3): test %r10b,%r10b
2e94(6): jz 0xb8(%rip)
2e9a(4): mov 0xc(%rcx),%r9d
2e9e(3): mov 0x4(%rcx),%edi
2ea1(3): mov 0x8(%rcx),%esi
2ea4(3): not %r9d
2ea7(3): and %ebx,%r9d
2eaa(4): cmp $0x2,%r10b
2eae(6): jz 0xb2(%rip)
2eb4(4): cmp $0x3,%r10b
2eb8(2): jnz 0x40(%rip)
2eba(2): and %eax,%esi
2ebc(3): mov %esi,%r10d
2ebf(7): and $0x124,%r10d
2ec6(4): cmp $0x1,%r10d
2eca(3): sbb %r10d,%r10d
2ecd(3): not %r10d
2ed0(7): and $0x124,%r10d
2ed7(3): mov %r10d,%r12d
2eda(4): or $0x92,%r12b
2ede(4): test $0x92,%sil
2ee2(4): cmovne %r12d,%r10d
2ee6(3): mov %r10d,%r12d
2ee9(4): or $0x49,%r12d
2eed(4): test $0x49,%sil
2ef1(4): cmovne %r12d,%r10d
2ef5(3): or %r10d,%esi
2ef8(3): mov %r9d,%r10d
2efb(2): test %edi,%edi
2efd(4): movzx (%rcx),%r12d
2f01(3): not %r10d
2f04(6): jz 0xffffff5c(%rip)
2f0a(3): and %edi,%r10d
2f0d(3): and %r10d,%esi
2f10(4): cmp $0x2d,%r12b
2f14(2): jz 0x6c(%rip)
2f16(4): cmp $0x3d,%r12b
2f1a(6): jnz 0xffffff63(%rip)
2f20(2): not %edi
2f22(3): or %edi,%r9d
2f25(3): mov %r9d,%r10d
2f28(3): not %r10d
2f2b(7): and $0xfff,%r10d
2f32(4): add $0x10,%rcx
2f36(3): and %r9d,%eax
2f39(3): or %r10d,%r11d
2f3c(5): movzx 0x1(%rcx),%r10d
2f41(2): or %esi,%eax
2f43(3): test %r10b,%r10b
2f46(6): jnz 0xffffff54(%rip)
2f4c(3): test %r8,%r8
2f4f(2): jz 0x5(%rip)
2f51(3): mov %r11d,(%r8)
2f54(1): pop %rbx
2f55(1): pop %rbp
2f56(2): pop %r12
2f58(1): ret near (%rsp)
2f59(7): nop 0x0(%rax)
2f60(3): mov %eax,%r12d
2f63(3): mov %esi,%r10d
2f66(4): and $0x49,%r12d
2f6a(4): or $0x49,%r10d
2f6e(3): or %ebp,%r12d
2f71(4): cmovne %r10d,%esi
2f75(2): jmp 0xffffff83(%rip)
2f77(9): nop 0x0(%rax,%rax,1)
2f80(3): or %esi,%r11d
2f83(2): not %esi
2f85(2): and %esi,%eax
2f87(5): jmp 0xffffff01(%rip)
2f8c(4): nop 0x0(%rax)
2f90(3): xor %r11d,%r11d
2f93(3): test %r8,%r8
2f96(2): jz 0x5(%rip)
2f98(3): mov %r11d,(%r8)
2f9b(2): REP ret near (%rsp)

"set_program_name" :
2fa0(3): test %rdi,%rdi
2fa3(1): push %rbx
2fa4(2): jz 0x79(%rip)
2fa6(5): mov $0x2f,%esi
2fab(3): mov %rdi,%rbx
2fae(5): call 0xffffe8c2(%rip)
2fb3(3): test %rax,%rax
2fb6(2): jz 0x57(%rip)
2fb8(4): lea 0x1(%rax),%r8
2fbc(3): mov %r8,%rdx
2fbf(3): sub %rbx,%rdx
2fc2(4): cmp $0x6,%rdx
2fc6(2): jle 0x47(%rip)
2fc8(4): lea 0xfffffffa(%rax),%rsi
2fcc(7): lea 0x5e0d(%rip),%rdi
2fd3(5): mov $0x7,%ecx
2fd8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2fda(3): setnbe %dl
2fdd(3): sbb $0x0,%dl
2fe0(2): test %dl,%dl
2fe2(2): jnz 0x2b(%rip)
2fe4(7): lea 0x5dfd(%rip),%rdi
2feb(5): mov $0x3,%ecx
2ff0(3): mov %r8,%rsi
2ff3(3): mov %r8,%rbx
2ff6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2ff8(3): setnbe %dl
2ffb(3): sbb $0x0,%dl
2ffe(2): test %dl,%dl
3000(2): jnz 0xd(%rip)
3002(4): lea 0x4(%rax),%rbx
3006(7): mov %rbx,0x209073(%rip)
300d(7): mov %rbx,0x2090cc(%rip)
3014(7): mov %rbx,0x209085(%rip)
301b(1): pop %rbx
301c(1): ret near (%rsp)
301d(7): mov 0x20909c(%rip),%rcx
3024(7): lea 0x5d7d(%rip),%rdi
302b(5): mov $0x37,%edx
3030(5): mov $0x1,%esi
3035(5): call 0xffffea4b(%rip)
303a(5): call 0xffffe706(%rip)

"gettext_quote.part.1" :
3040(1): push %rbp
3041(1): push %rbx
3042(3): mov %rdi,%rbp
3045(2): mov %esi,%ebx
3047(4): sub $0x8,%rsp
304b(5): call 0x2e65(%rip)
3050(3): movzx (%rax),%edx
3053(3): and $0xdf,%edx
3056(3): cmp $0x55,%dl
3059(2): jz 0x77(%rip)
305b(3): cmp $0x47,%dl
305e(2): jz 0x22(%rip)
3060(7): lea 0x5d94(%rip),%rax
3067(7): lea 0x5d8f(%rip),%rdx
306e(3): cmp $0x9,%ebx
3071(4): cmovne %rdx,%rax
3075(4): add $0x8,%rsp
3079(1): pop %rbx
307a(1): pop %rbp
307b(1): ret near (%rsp)
307c(4): nop 0x0(%rax)
3080(4): movzx 0x1(%rax),%edx
3084(3): and $0xdf,%edx
3087(3): cmp $0x42,%dl
308a(2): jnz 0xffffffd6(%rip)
308c(4): cmp $0x31,0x2(%rax)
3090(2): jnz 0xffffffd0(%rip)
3092(4): cmp $0x38,0x3(%rax)
3096(2): jnz 0xffffffca(%rip)
3098(4): cmp $0x30,0x4(%rax)
309c(2): jnz 0xffffffc4(%rip)
309e(4): cmp $0x33,0x5(%rax)
30a2(2): jnz 0xffffffbe(%rip)
30a4(4): cmp $0x30,0x6(%rax)
30a8(2): jnz 0xffffffb8(%rip)
30aa(4): cmp $0x0,0x7(%rax)
30ae(2): jnz 0xffffffb2(%rip)
30b0(4): cmp $0x60,0x0(%rbp)
30b4(7): lea 0x5d39(%rip),%rax
30bb(7): lea 0x5d36(%rip),%rdx
30c2(4): cmovne %rdx,%rax
30c6(4): add $0x8,%rsp
30ca(1): pop %rbx
30cb(1): pop %rbp
30cc(1): ret near (%rsp)
30cd(3): nop (%rax)
30d0(4): movzx 0x1(%rax),%edx
30d4(3): and $0xdf,%edx
30d7(3): cmp $0x54,%dl
30da(2): jnz 0xffffff86(%rip)
30dc(4): movzx 0x2(%rax),%edx
30e0(3): and $0xdf,%edx
30e3(3): cmp $0x46,%dl
30e6(6): jnz 0xffffff7a(%rip)
30ec(4): cmp $0x2d,0x3(%rax)
30f0(6): jnz 0xffffff70(%rip)
30f6(4): cmp $0x38,0x4(%rax)
30fa(6): jnz 0xffffff66(%rip)
3100(4): cmp $0x0,0x5(%rax)
3104(6): jnz 0xffffff5c(%rip)
310a(4): cmp $0x60,0x0(%rbp)
310e(7): lea 0x5cd7(%rip),%rax
3115(7): lea 0x5cd4(%rip),%rdx
311c(4): cmovne %rdx,%rax
3120(4): add $0x8,%rsp
3124(1): pop %rbx
3125(1): pop %rbp
3126(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3130(2): push %r15
3132(2): push %r14
3134(3): mov %r8d,%r15d
3137(2): push %r13
3139(2): push %r12
313b(3): mov %rdi,%r14
313e(1): push %rbp
313f(1): push %rbx
3140(3): mov %r9d,%ebx
3143(3): mov %rsi,%r13
3146(3): mov %rcx,%rbp
3149(3): and $0x2,%ebx
314c(7): sub $0xb8,%rsp
3153(8): mov 0xf0(%rsp),%rax
315b(5): mov %rdx,0x10(%rsp)
3160(5): mov %r8d,0x8(%rsp)
3165(5): mov %r9d,0x78(%rsp)
316a(5): mov %rax,0x20(%rsp)
316f(8): mov 0xf8(%rsp),%rax
3177(5): mov %rax,0x68(%rsp)
317c(8): mov 0x100(%rsp),%rax
3184(5): mov %rax,0x60(%rsp)
3189(9): mov $0x28,%rax
3192(8): mov %rax,0xa8(%rsp)
319a(2): xor %eax,%eax
319c(5): call 0xffffe664(%rip)
31a1(4): cmp $0xa,%r15d
31a5(5): mov %rax,0x58(%rsp)
31aa(6): jnbe 0x11b5(%rip)
31b0(7): lea 0x5ca9(%rip),%rcx
31b7(3): mov %r15d,%edx
31ba(4): movsxd 0x0(%rcx,%rdx,4),%rax
31be(3): add %rcx,%rax
31c1(2): jmp %rax
31c3(5): mov $0x1,0xe(%rsp)
31c8(5): mov $0x0,0x7c(%rsp)
31cd(3): xor %r12d,%r12d
31d0(9): mov $0x0,0x50(%rsp)
31d9(5): mov $0x1,0xf(%rsp)
31de(5): mov $0x0,0xd(%rsp)
31e3(7): lea 0x5c13(%rip),%rax
31ea(9): mov $0x1,0x18(%rsp)
31f3(3): xor %r15d,%r15d
31f6(8): mov $0x2,0x8(%rsp)
31fe(5): mov %rax,0x48(%rsp)
3203(3): xor %r11d,%r11d
3206(3): mov %rbp,%rax
3209(3): mov %r12d,%r8d
320c(3): mov %r11,%rbp
320f(3): mov %rax,%r11
3212(6): nop 0x0(%rax,%rax,1)
3218(3): cmp %rbp,%r11
321b(4): setnz %r12b
321f(4): cmp $0xffffffff,%r11
3223(2): jnz 0xf(%rip)
3225(5): mov 0x10(%rsp),%rax
322a(4): cmp $0x0,0x0(%rax,%rbp,1)
322e(4): setnz %r12b
3232(3): test %r12b,%r12b
3235(6): jz 0x65b(%rip)
323b(5): cmp $0x2,0x8(%rsp)
3240(5): mov 0x10(%rsp),%rdi
3245(4): lea 0x0(%rdi,%rbp,1),%r9
3249(3): setnz %al
324c(4): and 0xd(%rsp),%al
3250(3): mov %eax,%r10d
3253(6): jz 0xad(%rip)
3259(5): mov 0x18(%rsp),%rax
325e(3): test %rax,%rax
3261(6): jz 0x42f(%rip)
3267(4): cmp $0xffffffff,%r11
326b(5): lea 0x0(%rbp,%rax,1),%rbx
3270(2): jnz 0x30(%rip)
3272(4): cmp $0x1,%rax
3276(2): jbe 0x2a(%rip)
3278(5): mov %r8b,0x38(%rsp)
327d(5): mov %r10b,0x30(%rsp)
3282(5): mov %r9,0x28(%rsp)
3287(5): call 0xffffe589(%rip)
328c(6): movzx 0x38(%rsp),%r8d
3292(6): movzx 0x30(%rsp),%r10d
3298(3): mov %rax,%r11
329b(5): mov 0x28(%rsp),%r9
32a0(3): cmp %r11,%rbx
32a3(5): mov %r10b,0x28(%rsp)
32a8(6): jnbe 0x5b8(%rip)
32ae(5): mov 0x18(%rsp),%rdx
32b3(5): mov 0x48(%rsp),%rsi
32b8(3): mov %r9,%rdi
32bb(5): mov %r11,0x40(%rsp)
32c0(5): mov %r8b,0x38(%rsp)
32c5(5): mov %r9,0x30(%rsp)
32ca(5): call 0xffffe5f6(%rip)
32cf(2): test %eax,%eax
32d1(5): mov 0x30(%rsp),%r9
32d6(6): movzx 0x38(%rsp),%r8d
32dc(5): mov 0x40(%rsp),%r11
32e1(6): jnz 0x57f(%rip)
32e7(5): cmp $0x0,0xf(%rsp)
32ec(6): movzx 0x28(%rsp),%r10d
32f2(6): jnz 0xf83(%rip)
32f8(8): nop 0x0(%rax,%rax,1)
3300(4): movzx (%r9),%ebx
3304(3): cmp $0x7e,%bl
3307(6): jnbe 0x321(%rip)
330d(7): lea 0x5b78(%rip),%rcx
3314(3): movzx %bl,%edx
3317(4): movsxd 0x0(%rcx,%rdx,4),%rax
331b(3): add %rcx,%rax
331e(2): jmp %rax
3320(3): xor %r10d,%r10d
3323(4): cmp $0x1,%r11
3327(3): setnz %al
332a(4): cmp $0xffffffff,%r11
332e(2): jnz 0xe(%rip)
3330(5): mov 0x10(%rsp),%rax
3335(4): cmp $0x0,0x1(%rax)
3339(3): setnz %al
333c(5): cmp $0x2,0x8(%rsp)
3341(3): setz %dl
3344(2): test %al,%al
3346(6): jz 0x252(%rip)
334c(3): xor %r12d,%r12d
334f(2): xor %eax,%eax
3351(7): nop 0x0(%rax)
3358(5): cmp $0x1,0xd(%rsp)
335d(6): jnz 0x115(%rip)
3363(2): test %dl,%dl
3365(6): jnz 0x10d(%rip)
336b(5): mov 0x20(%rsp),%rsi
3370(3): test %rsi,%rsi
3373(2): jz 0x16(%rip)
3375(2): mov %ebx,%edx
3377(3): shr $0x5,%dl
337a(3): movzx %dl,%edx
337d(3): mov 0x0(%rsi,%rdx,4),%edx
3380(3): bt %ebx,%edx
3383(6): jb 0x150(%rip)
3389(3): test %r10b,%r10b
338c(6): jnz 0x147(%rip)
3392(3): xor $0x1,%eax
3395(4): add $0x1,%rbp
3399(3): and %r8d,%eax
339c(2): test %al,%al
339e(2): jz 0x22(%rip)
33a0(3): cmp %r15,%r13
33a3(2): jbe 0x7(%rip)
33a5(5): mov $0x27,0x0(%r14,%r15,1)
33aa(4): lea 0x1(%r15),%rax
33ae(3): cmp %rax,%r13
33b1(2): jbe 0x8(%rip)
33b3(6): mov $0x27,0x1(%r14,%r15,1)
33b9(4): add $0x2,%r15
33bd(3): xor %r8d,%r8d
33c0(3): cmp %r13,%r15
33c3(2): jnb 0x6(%rip)
33c5(4): mov %bl,0x0(%r14,%r15,1)
33c9(5): movzx 0xe(%rsp),%edi
33ce(4): add $0x1,%r15
33d2(5): mov $0x0,%eax
33d7(3): test %r12b,%r12b
33da(3): cmove %eax,%edi
33dd(5): mov %dil,0xe(%rsp)
33e2(5): jmp 0xfffffe36(%rip)
33e7(9): nop 0x0(%rax,%rax,1)
33f0(3): xor %r10d,%r10d
33f3(4): mov 0x8(%rsp),%eax
33f7(3): cmp $0x2,%eax
33fa(6): jz 0x5be(%rip)
3400(3): cmp $0x5,%eax
3403(6): jz 0x575(%rip)
3409(3): cmp $0x2,%eax
340c(5): mov $0x3f,%ebx
3411(3): setz %dl
3414(3): xor %r12d,%r12d
3417(2): xor %eax,%eax
3419(5): jmp 0xffffff3f(%rip)
341e(2): nop 
3420(3): xor %r10d,%r10d
3423(5): cmp $0x2,0x8(%rsp)
3428(6): jz 0x508(%rip)
342e(5): mov %r12b,0x7c(%rsp)
3433(2): xor %edx,%edx
3435(2): xor %eax,%eax
3437(5): mov $0x27,%ebx
343c(5): jmp 0xffffff1c(%rip)
3441(7): nop 0x0(%rax)
3448(5): mov $0x9,%edx
344d(5): mov $0x74,%ebx
3452(5): cmp $0x2,0x8(%rsp)
3457(3): setz %al
345a(4): and 0xf(%rsp),%al
345e(6): jnz 0x150(%rip)
3464(5): cmp $0x0,0xd(%rsp)
3469(2): jnz 0x67(%rip)
346b(2): mov %edx,%ebx
346d(3): xor %r12d,%r12d
3470(2): xor %eax,%eax
3472(5): cmp $0x0,0xf(%rsp)
3477(6): jnz 0xfffffef4(%rip)
347d(5): jmp 0xffffff0c(%rip)
3482(6): nop 0x0(%rax,%rax,1)
3488(5): mov $0x8,%edx
348d(5): mov $0x62,%ebx
3492(2): jmp 0xffffffd2(%rip)
3494(4): nop 0x0(%rax)
3498(5): cmp $0x2,0x8(%rsp)
349d(6): jz 0x3d3(%rip)
34a3(5): cmp $0x0,0xd(%rsp)
34a8(6): jz 0x218(%rip)
34ae(5): cmp $0x0,0xf(%rsp)
34b3(6): jz 0x20d(%rip)
34b9(6): cmp $0x0,0x18(%rsp)
34bf(6): jnz 0x3bc(%rip)
34c5(5): mov $0x5c,%ebx
34ca(6): nop 0x0(%rax,%rax,1)
34d0(3): xor %r12d,%r12d
34d3(5): cmp $0x2,0x8(%rsp)
34d8(3): setz %dl
34db(5): cmp $0x0,0xf(%rsp)
34e0(2): mov %edx,%eax
34e2(6): jnz 0x856(%rip)
34e8(3): mov %r8d,%eax
34eb(3): xor $0x1,%eax
34ee(2): and %dl,%al
34f0(2): jz 0x31(%rip)
34f2(3): cmp %r15,%r13
34f5(2): jbe 0x7(%rip)
34f7(5): mov $0x27,0x0(%r14,%r15,1)
34fc(4): lea 0x1(%r15),%rdx
3500(3): cmp %rdx,%r13
3503(2): jbe 0x8(%rip)
3505(6): mov $0x24,0x1(%r14,%r15,1)
350b(4): lea 0x2(%r15),%rdx
350f(3): cmp %rdx,%r13
3512(2): jbe 0x8(%rip)
3514(6): mov $0x27,0x2(%r14,%r15,1)
351a(4): add $0x3,%r15
351e(3): mov %eax,%r8d
3521(3): cmp %r15,%r13
3524(2): jbe 0x7(%rip)
3526(5): mov $0x5c,0x0(%r14,%r15,1)
352b(4): add $0x1,%r15
352f(4): add $0x1,%rbp
3533(5): jmp 0xfffffe8d(%rip)
3538(8): nop 0x0(%rax,%rax,1)
3540(5): cmp $0x0,0xd(%rsp)
3545(6): jnz 0x1ce(%rip)
354b(2): xor %edx,%edx
354d(5): test $0x1,0x78(%rsp)
3552(6): jz 0xffffff19(%rip)
3558(4): add $0x1,%rbp
355c(5): jmp 0xfffffcbc(%rip)
3561(7): nop 0x0(%rax)
3568(5): cmp $0x2,0x8(%rsp)
356d(3): setz %dl
3570(2): xor %eax,%eax
3572(5): jmp 0xfffffde6(%rip)
3577(9): nop 0x0(%rax,%rax,1)
3580(5): mov $0x7,%edx
3585(5): mov $0x61,%ebx
358a(5): jmp 0xfffffeda(%rip)
358f(1): nop 
3590(5): cmp $0x2,0x8(%rsp)
3595(3): setz %dl
3598(3): test %rbp,%rbp
359b(6): jnz 0xfffffdb1(%rip)
35a1(5): movzx 0xf(%rsp),%eax
35a6(2): and %dl,%al
35a8(6): jz 0xfffffdb0(%rip)
35ae(3): mov %r11,%rbp
35b1(8): mov $0x2,0x8(%rsp)
35b9(5): jmp 0x700(%rip)
35be(2): nop 
35c0(5): cmp $0x2,0x8(%rsp)
35c5(3): setz %dl
35c8(3): xor %r12d,%r12d
35cb(2): jmp 0xffffffd6(%rip)
35cd(3): nop (%rax)
35d0(5): cmp $0x2,0x8(%rsp)
35d5(5): mov $0x20,%ebx
35da(3): setz %dl
35dd(2): jmp 0xffffffc4(%rip)
35df(1): nop 
35e0(5): mov $0xd,%edx
35e5(5): mov $0x72,%ebx
35ea(5): jmp 0xfffffe68(%rip)
35ef(1): nop 
35f0(5): mov $0xc,%edx
35f5(5): mov $0x66,%ebx
35fa(5): jmp 0xfffffe6a(%rip)
35ff(1): nop 
3600(5): mov $0xb,%edx
3605(5): mov $0x76,%ebx
360a(5): jmp 0xfffffe5a(%rip)
360f(1): nop 
3610(5): mov $0xa,%edx
3615(5): mov $0x6e,%ebx
361a(5): jmp 0xfffffe38(%rip)
361f(1): nop 
3620(3): xor %r10d,%r10d
3623(5): nop 0x0(%rax,%rax,1)
3628(6): cmp $0x1,0x58(%rsp)
362e(6): jnz 0x3aa(%rip)
3634(5): mov %r11,0x38(%rsp)
3639(5): mov %r8b,0x30(%rsp)
363e(5): mov %r10b,0x28(%rsp)
3643(5): call 0xffffe48d(%rip)
3648(3): mov (%rax),%rcx
364b(3): movzx %bl,%edx
364e(6): movzx 0x28(%rsp),%r10d
3654(6): movzx 0x30(%rsp),%r8d
365a(5): mov 0x38(%rsp),%r11
365f(5): mov $0x1,%edi
3664(4): movzx 0x0(%rcx,%rdx,2),%eax
3668(4): and $0x4000,%ax
366c(4): setnz %r12b
3670(3): setz %al
3673(4): and 0xd(%rsp),%al
3677(2): test %al,%al
3679(6): jnz 0x998(%rip)
367f(5): cmp $0x2,0x8(%rsp)
3684(3): setz %dl
3687(5): jmp 0xfffffcd1(%rip)
368c(4): nop 0x0(%rax)
3690(4): movzx (%r9),%ebx
3694(3): cmp $0x7e,%bl
3697(2): jnbe 0xffffff89(%rip)
3699(7): lea 0x59e8(%rip),%rcx
36a0(3): movzx %bl,%edx
36a3(4): movsxd 0x0(%rcx,%rdx,4),%rax
36a7(3): add %rcx,%rax
36aa(2): jmp %rax
36ac(4): nop 0x0(%rax)
36b0(3): xor %r10d,%r10d
36b3(5): cmp $0x0,0xd(%rsp)
36b8(6): jnz 0xfffffdf6(%rip)
36be(2): nop 
36c0(5): mov $0x5c,%edx
36c5(5): mov $0x5c,%ebx
36ca(5): jmp 0xfffffd9a(%rip)
36cf(1): nop 
36d0(5): mov $0xc,%edx
36d5(3): xor %r10d,%r10d
36d8(5): mov $0x66,%ebx
36dd(5): jmp 0xfffffd87(%rip)
36e2(6): nop 0x0(%rax,%rax,1)
36e8(5): mov $0xa,%edx
36ed(3): xor %r10d,%r10d
36f0(5): mov $0x6e,%ebx
36f5(5): jmp 0xfffffd5d(%rip)
36fa(6): nop 0x0(%rax,%rax,1)
3700(5): mov $0x61,%ebx
3705(5): jmp 0xfffffdcb(%rip)
370a(6): nop 0x0(%rax,%rax,1)
3710(3): xor %r10d,%r10d
3713(5): cmp $0x2,0x8(%rsp)
3718(3): setz %dl
371b(5): cmp $0x0,0xf(%rsp)
3720(6): jnz 0xb9a(%rip)
3726(3): mov %r8d,%eax
3729(3): mov %r15,%rcx
372c(3): xor $0x1,%eax
372f(2): and %dl,%al
3731(2): jz 0x2f(%rip)
3733(3): cmp %r15,%r13
3736(2): jbe 0x7(%rip)
3738(5): mov $0x27,0x0(%r14,%r15,1)
373d(4): lea 0x1(%r15),%rcx
3741(3): cmp %rcx,%r13
3744(2): jbe 0x8(%rip)
3746(6): mov $0x24,0x1(%r14,%r15,1)
374c(4): lea 0x2(%r15),%rcx
3750(3): cmp %rcx,%r13
3753(6): jnbe 0x636(%rip)
3759(4): lea 0x3(%r15),%rcx
375d(3): mov %eax,%r8d
3760(3): cmp %rcx,%r13
3763(2): jbe 0x7(%rip)
3765(5): mov $0x5c,0x0(%r14,%rcx,1)
376a(5): cmp $0x2,0x8(%rsp)
376f(4): lea 0x1(%rcx),%r15
3773(6): jz 0x606(%rip)
3779(4): lea 0x1(%rbp),%rax
377d(3): cmp %r11,%rax
3780(2): jnb 0x1b(%rip)
3782(5): mov 0x10(%rsp),%rax
3787(5): movzx 0x1(%rax,%rbp,1),%eax
378c(4): mov %al,0x28(%rsp)
3790(3): sub $0x30,%eax
3793(2): cmp $0x9,%al
3795(6): jbe 0x834(%rip)
379b(3): mov %r12d,%eax
379e(5): mov $0x30,%ebx
37a3(3): xor %r12d,%r12d
37a6(5): jmp 0xfffffbb2(%rip)
37ab(5): nop 0x0(%rax,%rax,1)
37b0(5): cmp $0x2,0x8(%rsp)
37b5(3): mov %r10d,%r12d
37b8(3): setz %dl
37bb(3): xor %r10d,%r10d
37be(2): xor %eax,%eax
37c0(5): jmp 0xfffffb98(%rip)
37c5(3): nop (%rax)
37c8(5): cmp $0x2,0x8(%rsp)
37cd(3): setz %dl
37d0(3): xor %r10d,%r10d
37d3(5): jmp 0xfffffdc5(%rip)
37d8(8): nop 0x0(%rax,%rax,1)
37e0(5): cmp $0x2,0x8(%rsp)
37e5(3): setz %dl
37e8(3): xor %r10d,%r10d
37eb(3): xor %r12d,%r12d
37ee(5): jmp 0xfffffdb3(%rip)
37f3(5): nop 0x0(%rax,%rax,1)
37f8(5): cmp $0x2,0x8(%rsp)
37fd(3): mov %r10d,%r12d
3800(5): mov $0x20,%ebx
3805(3): setz %dl
3808(3): xor %r10d,%r10d
380b(5): jmp 0xfffffd96(%rip)
3810(5): mov $0xd,%edx
3815(3): xor %r10d,%r10d
3818(5): mov $0x72,%ebx
381d(5): jmp 0xfffffc35(%rip)
3822(6): nop 0x0(%rax,%rax,1)
3828(5): mov $0x76,%ebx
382d(5): jmp 0xfffffca3(%rip)
3832(6): nop 0x0(%rax,%rax,1)
3838(5): mov $0x9,%edx
383d(3): xor %r10d,%r10d
3840(5): mov $0x74,%ebx
3845(5): jmp 0xfffffc0d(%rip)
384a(6): nop 0x0(%rax,%rax,1)
3850(5): mov $0x62,%ebx
3855(5): jmp 0xfffffc7b(%rip)
385a(6): nop 0x0(%rax,%rax,1)
3860(3): xor %r10d,%r10d
3863(5): jmp 0xfffffa9d(%rip)
3868(8): nop 0x0(%rax,%rax,1)
3870(5): cmp $0x0,0xf(%rsp)
3875(6): jnz 0x96b(%rip)
387b(4): add $0x1,%rbp
387f(3): mov %r8d,%eax
3882(3): xor %r12d,%r12d
3885(5): mov $0x5c,%ebx
388a(5): jmp 0xfffffb12(%rip)
388f(1): nop 
3890(5): cmp $0x2,0x8(%rsp)
3895(5): movzx 0xf(%rsp),%ebx
389a(3): mov %r8d,%r12d
389d(3): mov %r11,%rbp
38a0(3): setz %dl
38a3(2): mov %ebx,%eax
38a5(3): test %r15,%r15
38a8(3): setz %cl
38ab(2): and %edx,%eax
38ad(2): and %cl,%al
38af(6): jnz 0xa67(%rip)
38b5(2): mov %ebx,%eax
38b7(3): xor $0x1,%eax
38ba(2): and %al,%dl
38bc(6): jz 0x970(%rip)
38c2(5): cmp $0x0,0x7c(%rsp)
38c7(6): jz 0x963(%rip)
38cd(5): cmp $0x0,0xe(%rsp)
38d2(6): jnz 0x9fb(%rip)
38d8(3): test %r13,%r13
38db(3): setz %al
38de(6): cmp $0x0,0x50(%rsp)
38e4(3): setnz %dl
38e7(2): and %dl,%al
38e9(6): jz 0xa23(%rip)
38ef(5): mov 0x50(%rsp),%r13
38f4(7): lea 0x5502(%rip),%rbx
38fb(4): mov $0x27,(%r14)
38ff(8): mov $0x2,0x8(%rsp)
3907(6): mov $0x1,%r15d
390d(9): mov $0x1,0x18(%rsp)
3916(5): mov $0x0,0xf(%rsp)
391b(5): mov %rbx,0x48(%rsp)
3920(4): mov %al,0x7c(%rsp)
3924(5): jmp 0xfffff8df(%rip)
3929(7): nop 0x0(%rax)
3930(5): cmp $0x0,0xf(%rsp)
3935(6): jnz 0x8ab(%rip)
393b(3): test %r13,%r13
393e(6): jz 0x402(%rip)
3944(2): xor %edx,%edx
3946(6): cmp $0x0,0x50(%rsp)
394c(6): jnz 0x3f4(%rip)
3952(5): mov %r13,0x50(%rsp)
3957(4): add $0x3,%r15
395b(2): xor %eax,%eax
395d(5): mov %r12b,0x7c(%rsp)
3962(3): xor %r8d,%r8d
3965(3): mov %rdx,%r13
3968(5): mov $0x27,%ebx
396d(5): jmp 0xfffffa1c(%rip)
3972(6): nop 0x0(%rax,%rax,1)
3978(5): test $0x4,0x78(%rsp)
397d(2): jz 0x23(%rip)
397f(4): lea 0x2(%rbp),%rcx
3983(3): cmp %r11,%rcx
3986(2): jnb 0x1a(%rip)
3988(5): mov 0x10(%rsp),%rax
398d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3992(6): jz 0x790(%rip)
3998(8): nop 0x0(%rax,%rax,1)
39a0(2): xor %edx,%edx
39a2(3): xor %r12d,%r12d
39a5(2): xor %eax,%eax
39a7(5): mov $0x3f,%ebx
39ac(5): jmp 0xfffff9ac(%rip)
39b1(7): nop 0x0(%rax)
39b8(5): cmp $0x0,0xf(%rsp)
39bd(6): jnz 0x823(%rip)
39c3(3): xor %r12d,%r12d
39c6(2): xor %eax,%eax
39c8(5): mov $0x3f,%ebx
39cd(5): jmp 0xfffff9bc(%rip)
39d2(6): nop 0x0(%rax,%rax,1)
39d8(8): lea 0xa0(%rsp),%rax
39e0(4): cmp $0xffffffff,%r11
39e4(c): mov $0x0,0xa0(%rsp)
39f0(5): mov %rax,0x28(%rsp)
39f5(2): jnz 0x2f(%rip)
39f7(5): mov 0x10(%rsp),%rdi
39fc(5): mov %r8b,0x40(%rsp)
3a01(5): mov %r10b,0x38(%rsp)
3a06(5): mov %r9,0x30(%rsp)
3a0b(5): call 0xffffde05(%rip)
3a10(6): movzx 0x40(%rsp),%r8d
3a16(6): movzx 0x38(%rsp),%r10d
3a1c(3): mov %rax,%r11
3a1f(5): mov 0x30(%rsp),%r9
3a24(8): lea 0x9c(%rsp),%rax
3a2c(2): xor %ecx,%ecx
3a2e(4): mov %bl,0x7e(%rsp)
3a32(5): mov %r8b,0x7d(%rsp)
3a37(3): mov %rcx,%rbx
3a3a(8): mov %r9,0x88(%rsp)
3a42(5): mov %rax,0x38(%rsp)
3a47(5): mov %r10b,0x7f(%rsp)
3a4c(8): mov %r15,0x80(%rsp)
3a54(5): mov %r14,0x40(%rsp)
3a59(5): mov %r13,0x70(%rsp)
3a5e(5): mov %r11,0x30(%rsp)
3a63(5): mov 0x10(%rsp),%rax
3a68(5): lea 0x0(%rbp,%rbx,1),%r14
3a6d(5): mov 0x30(%rsp),%rdx
3a72(5): mov 0x28(%rsp),%rcx
3a77(5): mov 0x38(%rsp),%rdi
3a7c(4): lea 0x0(%rax,%r14,1),%r13
3a80(3): sub %r14,%rdx
3a83(3): mov %r13,%rsi
3a86(5): call 0x214a(%rip)
3a8b(3): test %rax,%rax
3a8e(3): mov %rax,%r15
3a91(2): jz 0x50(%rip)
3a93(4): cmp $0xffffffff,%rax
3a97(6): jz 0x61e(%rip)
3a9d(4): cmp $0xfffffffe,%rax
3aa1(6): jz 0x5a0(%rip)
3aa7(5): cmp $0x2,0x8(%rsp)
3aac(3): setz %al
3aaf(4): and 0xf(%rsp),%al
3ab3(6): jnz 0x19d(%rip)
3ab9(7): mov 0x9c(%rsp),%edi
3ac0(5): call 0xffffdff0(%rip)
3ac5(5): mov 0x28(%rsp),%rdi
3aca(2): test %eax,%eax
3acc(5): mov $0x0,%eax
3ad1(4): cmove %eax,%r12d
3ad5(3): add %r15,%rbx
3ad8(5): call 0xffffdfc8(%rip)
3add(2): test %eax,%eax
3adf(2): jz 0xffffff84(%rip)
3ae1(3): mov %r12d,%edx
3ae4(3): mov %rbx,%rdi
3ae7(6): movzx 0x7d(%rsp),%r8d
3aed(3): xor $0x1,%edx
3af0(5): movzx 0x7e(%rsp),%ebx
3af5(6): movzx 0x7f(%rsp),%r10d
3afb(4): and 0xd(%rsp),%dl
3aff(8): mov 0x80(%rsp),%r15
3b07(5): mov 0x40(%rsp),%r14
3b0c(5): mov 0x70(%rsp),%r13
3b11(5): mov 0x30(%rsp),%r11
3b16(4): cmp $0x1,%rdi
3b1a(6): jbe 0x601(%rip)
3b20(3): mov %rdi,%rcx
3b23(2): xor %esi,%esi
3b25(6): movzx 0xf(%rsp),%r9d
3b2b(3): add %rbp,%rcx
3b2e(5): mov 0x10(%rsp),%rdi
3b33(5): jmp 0xbb(%rip)
3b38(8): nop 0x0(%rax,%rax,1)
3b40(5): cmp $0x2,0x8(%rsp)
3b45(3): setz %al
3b48(3): test %r9b,%r9b
3b4b(6): jnz 0x4b5(%rip)
3b51(3): mov %r8d,%esi
3b54(3): xor $0x1,%esi
3b57(3): and %sil,%al
3b5a(2): jz 0x31(%rip)
3b5c(3): cmp %r15,%r13
3b5f(2): jbe 0x7(%rip)
3b61(5): mov $0x27,0x0(%r14,%r15,1)
3b66(4): lea 0x1(%r15),%rsi
3b6a(3): cmp %rsi,%r13
3b6d(2): jbe 0x8(%rip)
3b6f(6): mov $0x24,0x1(%r14,%r15,1)
3b75(4): lea 0x2(%r15),%rsi
3b79(3): cmp %rsi,%r13
3b7c(2): jbe 0x8(%rip)
3b7e(6): mov $0x27,0x2(%r14,%r15,1)
3b84(4): add $0x3,%r15
3b88(3): mov %eax,%r8d
3b8b(3): cmp %r15,%r13
3b8e(2): jbe 0x7(%rip)
3b90(5): mov $0x5c,0x0(%r14,%r15,1)
3b95(4): lea 0x1(%r15),%rax
3b99(3): cmp %rax,%r13
3b9c(2): jbe 0xf(%rip)
3b9e(2): mov %ebx,%eax
3ba0(3): shr $0x6,%al
3ba3(3): add $0x30,%eax
3ba6(5): mov %al,0x1(%r14,%r15,1)
3bab(4): lea 0x2(%r15),%rax
3baf(3): cmp %rax,%r13
3bb2(2): jbe 0x12(%rip)
3bb4(2): mov %ebx,%eax
3bb6(3): shr $0x3,%al
3bb9(3): and $0x7,%eax
3bbc(3): add $0x30,%eax
3bbf(5): mov %al,0x2(%r14,%r15,1)
3bc4(3): and $0x7,%ebx
3bc7(4): add $0x1,%rbp
3bcb(4): add $0x3,%r15
3bcf(3): add $0x30,%ebx
3bd2(3): cmp %rcx,%rbp
3bd5(6): jnb 0xfffff7eb(%rip)
3bdb(2): mov %edx,%esi
3bdd(3): cmp %r15,%r13
3be0(2): jbe 0x6(%rip)
3be2(4): mov %bl,0x0(%r14,%r15,1)
3be6(4): movzx 0x0(%rdi,%rbp,1),%ebx
3bea(4): add $0x1,%r15
3bee(2): test %dl,%dl
3bf0(6): jnz 0xffffff50(%rip)
3bf6(2): mov %esi,%eax
3bf8(3): xor $0x1,%eax
3bfb(3): and %r8d,%eax
3bfe(3): test %r10b,%r10b
3c01(2): jz 0x10(%rip)
3c03(3): cmp %r15,%r13
3c06(2): jbe 0x7(%rip)
3c08(5): mov $0x5c,0x0(%r14,%r15,1)
3c0d(4): add $0x1,%r15
3c11(4): add $0x1,%rbp
3c15(3): cmp %rcx,%rbp
3c18(6): jnb 0xfffff784(%rip)
3c1e(2): test %al,%al
3c20(6): jz 0x3fe(%rip)
3c26(3): cmp %r15,%r13
3c29(2): jbe 0x7(%rip)
3c2b(5): mov $0x27,0x0(%r14,%r15,1)
3c30(4): lea 0x1(%r15),%rax
3c34(3): cmp %rax,%r13
3c37(2): jbe 0x8(%rip)
3c39(6): mov $0x27,0x1(%r14,%r15,1)
3c3f(4): add $0x2,%r15
3c43(3): xor %r10d,%r10d
3c46(3): xor %r8d,%r8d
3c49(2): jmp 0xffffff94(%rip)
3c4b(5): nop 0x0(%rax,%rax,1)
3c50(4): cmp $0x1,%r15
3c54(6): jz 0xfffffe65(%rip)
3c5a(5): mov 0x10(%rsp),%rdi
3c5f(4): lea 0x0(%rdi,%r15,1),%rcx
3c63(5): lea 0x1(%rdi,%r14,1),%rdx
3c68(4): lea 0x0(%rcx,%r14,1),%r8
3c6c(2): jmp 0x11(%rip)
3c6e(2): nop 
3c70(4): add $0x1,%rdx
3c74(3): cmp %rdx,%r8
3c77(6): jz 0xfffffe42(%rip)
3c7d(3): movzx (%rdx),%ecx
3c80(3): sub $0x5b,%ecx
3c83(3): cmp $0x21,%cl
3c86(2): jnbe 0xffffffea(%rip)
3c88(5): mov $0x1,%esi
3c8d(3): shl/sal %cl,%rsi
3c90(3): mov %rsi,%rcx
3c93(a): mov $0x8589934635,%rsi
3c9d(3): test %rsi,%rcx
3ca0(2): jz 0xffffffd0(%rip)
3ca2(5): mov 0x40(%rsp),%r14
3ca7(5): mov 0x70(%rsp),%r13
3cac(5): mov 0x30(%rsp),%rbp
3cb1(8): mov $0x2,0x8(%rsp)
3cb9(5): cmp $0x0,0xd(%rsp)
3cbe(2): jz 0x12(%rip)
3cc0(2): test %al,%al
3cc2(5): mov $0x4,%eax
3cc7(5): cmove 0x8(%rsp),%eax
3ccc(4): mov %eax,0x8(%rsp)
3cd0(4): sub $0x8,%rsp
3cd4(3): mov %rbp,%rcx
3cd7(3): mov %r13,%rsi
3cda(4): push 0x68(%rsp)
3cde(4): push 0x78(%rsp)
3ce2(3): mov %r14,%rdi
3ce5(2): push $0x0
3ce7(8): mov 0x98(%rsp),%r9d
3cef(5): mov 0x28(%rsp),%r8d
3cf4(5): mov 0x30(%rsp),%rdx
3cf9(4): and $0xfd,%r9d
3cfd(5): call 0xfffff433(%rip)
3d02(4): add $0x20,%rsp
3d06(3): mov %rax,%r15
3d09(8): mov 0xa8(%rsp),%rbx
3d11(9): xor $0x28,%rbx
3d1a(3): mov %r15,%rax
3d1d(6): jnz 0x606(%rip)
3d23(7): add $0xb8,%rsp
3d2a(1): pop %rbx
3d2b(1): pop %rbp
3d2c(2): pop %r12
3d2e(2): pop %r13
3d30(2): pop %r14
3d32(2): pop %r15
3d34(1): ret near (%rsp)
3d35(3): nop (%rax)
3d38(3): mov %r11,%rbp
3d3b(5): jmp 0xffffff7e(%rip)
3d40(3): cmp %r15,%r13
3d43(2): jbe 0x7(%rip)
3d45(5): mov $0x27,0x0(%r14,%r15,1)
3d4a(4): lea 0x1(%r15),%rax
3d4e(3): cmp %rax,%r13
3d51(2): jbe 0x8(%rip)
3d53(6): mov $0x5c,0x1(%r14,%r15,1)
3d59(4): lea 0x2(%r15),%rax
3d5d(3): cmp %rax,%r13
3d60(6): jbe 0x5f2(%rip)
3d66(3): mov %r13,%rdx
3d69(6): mov $0x27,0x2(%r14,%r15,1)
3d6f(5): mov 0x50(%rsp),%r13
3d74(5): jmp 0xfffffbde(%rip)
3d79(3): mov %r12d,%eax
3d7c(5): mov $0x30,%ebx
3d81(3): xor %r12d,%r12d
3d84(5): jmp 0xfffff605(%rip)
3d89(6): mov $0x27,0x2(%r14,%r15,1)
3d8f(5): jmp 0xfffff9ca(%rip)
3d94(2): test %ebx,%ebx
3d96(6): jnz 0xfffff42d(%rip)
3d9c(5): mov $0x1,0xd(%rsp)
3da1(3): test %r13,%r13
3da4(6): jnz 0x596(%rip)
3daa(7): lea 0x504c(%rip),%rax
3db1(9): mov $0x0,0x50(%rsp)
3dba(5): mov $0x1,0xe(%rsp)
3dbf(5): mov $0x0,0x7c(%rsp)
3dc4(3): xor %r12d,%r12d
3dc7(5): mov $0x0,0xf(%rsp)
3dcc(9): mov $0x1,0x18(%rsp)
3dd5(5): mov %rax,0x48(%rsp)
3dda(6): mov $0x1,%r15d
3de0(8): mov $0x2,0x8(%rsp)
3de8(5): jmp 0xfffff41b(%rip)
3ded(3): nop (%rax)
3df0(2): test %ebx,%ebx
3df2(6): jnz 0x3fb(%rip)
3df8(3): test %r13,%r13
3dfb(6): jz 0x22b(%rip)
3e01(4): mov $0x22,(%r14)
3e05(5): mov $0x1,0xe(%rsp)
3e0a(3): xor %r12d,%r12d
3e0d(5): mov $0x0,0x7c(%rsp)
3e12(9): mov $0x0,0x50(%rsp)
3e1b(7): lea 0x4fd9(%rip),%rax
3e22(5): mov $0x0,0xf(%rsp)
3e27(5): mov $0x1,0xd(%rsp)
3e2c(9): mov $0x1,0x18(%rsp)
3e35(6): mov $0x1,%r15d
3e3b(5): mov %rax,0x48(%rsp)
3e40(5): jmp 0xfffff3c3(%rip)
3e45(7): lea 0x4faf(%rip),%rax
3e4c(5): mov $0x1,0xe(%rsp)
3e51(5): mov $0x0,0x7c(%rsp)
3e56(3): xor %r12d,%r12d
3e59(9): mov $0x0,0x50(%rsp)
3e62(5): mov $0x1,0xf(%rsp)
3e67(5): mov $0x1,0xd(%rsp)
3e6c(9): mov $0x1,0x18(%rsp)
3e75(3): xor %r15d,%r15d
3e78(5): mov %rax,0x48(%rsp)
3e7d(8): mov $0x5,0x8(%rsp)
3e85(5): jmp 0xfffff37e(%rip)
3e8a(5): mov $0x1,0xe(%rsp)
3e8f(5): mov $0x0,0x7c(%rsp)
3e94(3): xor %r12d,%r12d
3e97(9): mov $0x0,0x50(%rsp)
3ea0(5): mov $0x0,0xf(%rsp)
3ea5(3): xor %r15d,%r15d
3ea8(5): mov $0x1,0xd(%rsp)
3ead(9): mov $0x0,0x18(%rsp)
3eb6(9): mov $0x0,0x48(%rsp)
3ebf(5): jmp 0xfffff344(%rip)
3ec4(5): cmp $0xa,0x8(%rsp)
3ec9(2): jz 0x58(%rip)
3ecb(7): lea 0x4f2d(%rip),%rsi
3ed2(2): xor %edi,%edi
3ed4(5): mov $0x5,%edx
3ed9(5): call 0xffffd917(%rip)
3ede(3): mov %rax,%rcx
3ee1(5): mov %rax,0x68(%rsp)
3ee6(7): lea 0x4f12(%rip),%rax
3eed(3): cmp %rax,%rcx
3ef0(6): jz 0x39e(%rip)
3ef6(7): lea 0x4f00(%rip),%rsi
3efd(2): xor %edi,%edi
3eff(5): mov $0x5,%edx
3f04(5): call 0xffffd8ec(%rip)
3f09(3): mov %rax,%rcx
3f0c(5): mov %rax,0x60(%rsp)
3f11(7): lea 0x4ee5(%rip),%rax
3f18(3): cmp %rax,%rcx
3f1b(6): jz 0x389(%rip)
3f21(3): xor %r15d,%r15d
3f24(2): test %ebx,%ebx
3f26(6): jz 0x1c7(%rip)
3f2c(2): test %ebx,%ebx
3f2e(5): mov 0x60(%rsp),%rbx
3f33(5): setnz 0xf(%rsp)
3f38(3): xor %r12d,%r12d
3f3b(3): mov %rbx,%rdi
3f3e(5): call 0xffffd8d2(%rip)
3f43(5): mov %rbx,0x48(%rsp)
3f48(5): mov %rax,0x18(%rsp)
3f4d(5): mov $0x1,0xe(%rsp)
3f52(5): mov $0x0,0x7c(%rsp)
3f57(9): mov $0x0,0x50(%rsp)
3f60(5): mov $0x1,0xd(%rsp)
3f65(5): jmp 0xfffff29e(%rip)
3f6a(5): mov $0x1,0xe(%rsp)
3f6f(5): mov $0x0,0x7c(%rsp)
3f74(3): xor %r12d,%r12d
3f77(9): mov $0x0,0x50(%rsp)
3f80(5): mov $0x0,0xf(%rsp)
3f85(3): xor %r15d,%r15d
3f88(5): mov $0x0,0xd(%rsp)
3f8d(9): mov $0x0,0x18(%rsp)
3f96(9): mov $0x0,0x48(%rsp)
3f9f(5): jmp 0xfffff264(%rip)
3fa4(5): mov $0x1,0xe(%rsp)
3fa9(5): mov $0x0,0x7c(%rsp)
3fae(3): xor %r12d,%r12d
3fb1(9): mov $0x0,0x50(%rsp)
3fba(5): mov $0x1,0xf(%rsp)
3fbf(5): mov $0x1,0xd(%rsp)
3fc4(5): jmp 0xfffff21f(%rip)
3fc9(3): cmp %r15,%r13
3fcc(2): jbe 0x7(%rip)
3fce(5): mov $0x30,0x0(%r14,%r15,1)
3fd3(4): lea 0x2(%rcx),%rax
3fd7(3): cmp %rax,%r13
3fda(2): jbe 0x8(%rip)
3fdc(6): mov $0x30,0x2(%r14,%rcx,1)
3fe2(3): mov %r12d,%eax
3fe5(4): lea 0x3(%rcx),%r15
3fe9(3): xor %r12d,%r12d
3fec(5): mov $0x30,%ebx
3ff1(5): jmp 0xfffff367(%rip)
3ff6(a): nop 0x0(%rax,%rax,1)
4000(5): movzx 0xf(%rsp),%ebx
4005(3): mov %r11,%rbp
4008(4): mov %bl,0xd(%rsp)
400c(5): jmp 0xfffffcad(%rip)
4011(5): movzx 0xd(%rsp),%edx
4016(3): xor %r12d,%r12d
4019(5): jmp 0xfffffb07(%rip)
401e(3): xor %r10d,%r10d
4021(5): jmp 0xfffffbbc(%rip)
4026(9): mov $0x0,0x50(%rsp)
402f(5): mov $0x1,0xe(%rsp)
4034(3): xor %r12d,%r12d
4037(5): mov $0x0,0x7c(%rsp)
403c(5): jmp 0xfffffddf(%rip)
4041(5): mov 0x30(%rsp),%r11
4046(3): mov %r14,%rsi
4049(3): mov %r13,%rcx
404c(3): mov %rbx,%rax
404f(3): mov %rbx,%rdi
4052(6): movzx 0x7d(%rsp),%r8d
4058(5): movzx 0x7e(%rsp),%ebx
405d(8): mov 0x88(%rsp),%r9
4065(3): cmp %r11,%rsi
4068(6): movzx 0x7f(%rsp),%r10d
406e(8): mov 0x80(%rsp),%r15
4076(5): mov 0x40(%rsp),%r14
407b(5): mov 0x70(%rsp),%r13
4080(2): jnb 0x28(%rip)
4082(3): cmp $0x0,(%rcx)
4085(2): jnz 0x12(%rip)
4087(2): jmp 0x21(%rip)
4089(7): nop 0x0(%rax)
4090(5): cmp $0x0,0x0(%r9,%rax,1)
4095(2): jz 0x10(%rip)
4097(4): add $0x1,%rax
409b(5): lea 0x0(%rbp,%rax,1),%rdx
40a0(3): cmp %rdx,%r11
40a3(2): jnbe 0xffffffed(%rip)
40a5(3): mov %rax,%rdi
40a8(5): movzx 0xd(%rsp),%edx
40ad(3): xor %r12d,%r12d
40b0(5): jmp 0xfffffa66(%rip)
40b5(3): mov %rbx,%rdi
40b8(6): movzx 0x7d(%rsp),%r8d
40be(5): movzx 0x7e(%rsp),%ebx
40c3(6): movzx 0x7f(%rsp),%r10d
40c9(8): mov 0x80(%rsp),%r15
40d1(3): xor %r12d,%r12d
40d4(5): mov 0x40(%rsp),%r14
40d9(5): mov 0x70(%rsp),%r13
40de(5): mov 0x30(%rsp),%r11
40e3(5): movzx 0xd(%rsp),%edx
40e8(5): jmp 0xfffffa2e(%rip)
40ed(5): mov 0x68(%rsp),%rdx
40f2(3): movzx (%rdx),%eax
40f5(2): test %al,%al
40f7(6): jz 0xfffffe35(%rip)
40fd(3): nop (%rax)
4100(3): cmp %r15,%r13
4103(2): jbe 0x6(%rip)
4105(4): mov %al,0x0(%r14,%r15,1)
4109(4): add $0x1,%r15
410d(5): movzx 0x0(%rdx,%r15,1),%eax
4112(2): test %al,%al
4114(2): jnz 0xffffffec(%rip)
4116(5): jmp 0xfffffe16(%rip)
411b(2): mov %edx,%eax
411d(5): jmp 0xfffff55a(%rip)
4122(4): movzx 0x0(%rax,%rcx,1),%ebx
4126(3): cmp $0x3e,%bl
4129(6): jnbe 0xfffff877(%rip)
412f(a): mov $0x8070630310989004800,%rax
4139(4): bt %rbx,%rax
413d(6): jnb 0xfffff863(%rip)
4143(5): cmp $0x0,0xf(%rsp)
4148(6): jnz 0x1ea(%rip)
414e(3): cmp %r15,%r13
4151(2): jbe 0x7(%rip)
4153(5): mov $0x3f,0x0(%r14,%r15,1)
4158(4): lea 0x1(%r15),%rax
415c(3): cmp %rax,%r13
415f(2): jbe 0x8(%rip)
4161(6): mov $0x22,0x1(%r14,%r15,1)
4167(4): lea 0x2(%r15),%rax
416b(3): cmp %rax,%r13
416e(2): jbe 0x8(%rip)
4170(6): mov $0x22,0x2(%r14,%r15,1)
4176(4): lea 0x3(%r15),%rax
417a(3): cmp %rax,%r13
417d(2): jbe 0x8(%rip)
417f(6): mov $0x3f,0x3(%r14,%r15,1)
4185(4): add $0x4,%r15
4189(2): xor %edx,%edx
418b(3): xor %r12d,%r12d
418e(2): xor %eax,%eax
4190(3): mov %rcx,%rbp
4193(5): jmp 0xfffff1c5(%rip)
4198(2): test %ebx,%ebx
419a(6): jz 0x18e(%rip)
41a0(7): lea 0x4c56(%rip),%rax
41a7(5): mov $0x1,0xe(%rsp)
41ac(5): mov $0x0,0x7c(%rsp)
41b1(3): xor %r12d,%r12d
41b4(9): mov $0x0,0x50(%rsp)
41bd(5): mov $0x1,0xf(%rsp)
41c2(5): mov $0x0,0xd(%rsp)
41c7(9): mov $0x1,0x18(%rsp)
41d0(3): xor %r15d,%r15d
41d3(5): mov %rax,0x48(%rsp)
41d8(5): jmp 0xfffff02b(%rip)
41dd(3): nop (%rax)
41e0(3): mov %r11,%rbp
41e3(5): movzx 0xf(%rsp),%eax
41e8(5): jmp 0xfffffad1(%rip)
41ed(7): lea 0x4c07(%rip),%rax
41f4(5): mov $0x1,0xe(%rsp)
41f9(5): mov $0x0,0x7c(%rsp)
41fe(3): xor %r12d,%r12d
4201(9): mov $0x0,0x50(%rsp)
420a(5): mov $0x1,0xf(%rsp)
420f(5): mov $0x1,0xd(%rsp)
4214(9): mov $0x1,0x18(%rsp)
421d(3): xor %r15d,%r15d
4220(5): mov %rax,0x48(%rsp)
4225(5): jmp 0xffffefde(%rip)
422a(2): mov %edx,%eax
422c(5): mov 0x48(%rsp),%rbx
4231(3): test %rbx,%rbx
4234(2): jz 0x2e(%rip)
4236(2): test %al,%al
4238(2): jz 0x2a(%rip)
423a(3): movzx (%rbx),%ecx
423d(3): mov %rbx,%rax
4240(2): test %cl,%cl
4242(2): jz 0x20(%rip)
4244(3): mov %r15,%rdx
4247(3): sub %r15,%rax
424a(3): cmp %rdx,%r13
424d(2): jbe 0x6(%rip)
424f(4): mov %cl,0x0(%r14,%rdx,1)
4253(4): add $0x1,%rdx
4257(4): movzx 0x0(%rax,%rdx,1),%ecx
425b(2): test %cl,%cl
425d(2): jnz 0xffffffed(%rip)
425f(3): mov %rdx,%r15
4262(3): cmp %r15,%r13
4265(6): jbe 0xfffffaa4(%rip)
426b(5): mov $0x0,0x0(%r14,%r15,1)
4270(5): jmp 0xfffffa99(%rip)
4275(5): cmp $0x2,0x8(%rsp)
427a(5): movzx 0xf(%rsp),%ebx
427f(3): mov %r11,%rbp
4282(3): setz %al
4285(4): mov %bl,0xd(%rsp)
4289(5): jmp 0xfffffa30(%rip)
428e(4): mov 0x8(%rsp),%esi
4292(3): mov %rcx,%rdi
4295(5): call 0xffffedab(%rip)
429a(5): mov %rax,0x68(%rsp)
429f(5): jmp 0xfffffc57(%rip)
42a4(4): mov 0x8(%rsp),%esi
42a8(3): mov %rcx,%rdi
42ab(5): call 0xffffed95(%rip)
42b0(5): mov %rax,0x60(%rsp)
42b5(5): jmp 0xfffffc6c(%rip)
42ba(5): movzx 0xf(%rsp),%ebx
42bf(3): mov %r11,%rbp
42c2(2): mov %edx,%eax
42c4(4): mov %bl,0xd(%rsp)
42c8(5): jmp 0xfffff9f1(%rip)
42cd(4): sub $0x8,%rsp
42d1(6): mov $0x5,%r8d
42d7(3): mov %r11,%rcx
42da(4): push 0x68(%rsp)
42de(4): push 0x78(%rsp)
42e2(3): mov %r14,%rdi
42e5(4): push 0x38(%rsp)
42e9(8): mov 0x98(%rsp),%r9d
42f1(5): mov 0x30(%rsp),%rdx
42f6(5): mov 0x70(%rsp),%rsi
42fb(5): call 0xffffee35(%rip)
4300(4): add $0x20,%rsp
4304(3): mov %rax,%r15
4307(5): jmp 0xfffffa02(%rip)
430c(5): movzx 0x7c(%rsp),%eax
4311(5): jmp 0xffffff1b(%rip)
4316(8): mov $0x2,0x8(%rsp)
431e(5): jmp 0xfffff99b(%rip)
4323(5): call 0xffffd50d(%rip)
4328(5): mov $0x0,0xd(%rsp)
432d(5): jmp 0xfffffa74(%rip)
4332(3): mov %r11,%rbp
4335(5): jmp 0xfffff99b(%rip)
433a(5): mov $0x1,0xe(%rsp)
433f(2): xor %eax,%eax
4341(3): xor %r12d,%r12d
4344(9): mov $0x0,0x50(%rsp)
434d(5): jmp 0xfffff5a7(%rip)
4352(3): mov %r13,%rdx
4355(5): mov 0x50(%rsp),%r13
435a(5): jmp 0xfffff5f8(%rip)
435f(5): call 0xffffd3e1(%rip)

"quotearg_n_options" :
4370(2): push %r15
4372(2): push %r14
4374(3): movsxd %edi,%r15
4377(2): push %r13
4379(2): push %r12
437b(3): mov %rdx,%r14
437e(1): push %rbp
437f(1): push %rbx
4380(3): mov %rcx,%rbp
4383(4): sub $0x28,%rsp
4387(5): mov %rsi,0x8(%rsp)
438c(5): call 0xffffd3c4(%rip)
4391(3): mov %rax,%r13
4394(2): mov (%rax),%eax
4396(3): test %r15d,%r15d
4399(7): mov 0x207cc0(%rip),%rbx
43a0(4): mov %eax,0x18(%rsp)
43a4(6): js 0x16d(%rip)
43aa(7): cmp %r15d,0x207ca7(%rip)
43b1(2): jnle 0x64(%rip)
43b3(7): cmp $0x7fffffff,%r15d
43ba(6): jz 0x15c(%rip)
43c0(4): lea 0x1(%r15),%r12d
43c4(7): lea 0x207ca5(%rip),%rax
43cb(3): movsxd %r12d,%rsi
43ce(4): shl/sal $0x4,%rsi
43d2(3): cmp %rax,%rbx
43d5(6): jz 0x11b(%rip)
43db(3): mov %rbx,%rdi
43de(5): call 0x15c2(%rip)
43e3(3): mov %rax,%rbx
43e6(7): mov %rax,0x207c73(%rip)
43ed(7): movsxd 0x207c64(%rip),%rdi
43f4(3): mov %r12d,%edx
43f7(2): xor %esi,%esi
43f9(2): sub %edi,%edx
43fb(4): shl/sal $0x4,%rdi
43ff(3): movsxd %edx,%rdx
4402(3): add %rbx,%rdi
4405(4): shl/sal $0x4,%rdx
4409(5): call 0xffffd497(%rip)
440e(7): mov %r12d,0x207c43(%rip)
4415(3): mov 0x4(%rbp),%eax
4418(4): shl/sal $0x4,%r15
441c(4): sub $0x8,%rsp
4420(3): add %r15,%rbx
4423(4): lea 0x8(%rbp),%r15
4427(4): mov 0x0(%rbp),%r8d
442b(3): mov (%rbx),%r11
442e(4): mov 0x8(%rbx),%r12
4432(3): mov %r14,%rcx
4435(3): or $0x1,%eax
4438(4): mov %eax,0x24(%rsp)
443c(3): push 0x30(%rbp)
443f(3): mov %eax,%r9d
4442(3): push 0x28(%rbp)
4445(2): push %r15
4447(3): mov %r11,%rsi
444a(5): mov 0x28(%rsp),%rdx
444f(3): mov %r12,%rdi
4452(5): mov %r11,0x30(%rsp)
4457(5): call 0xffffecd9(%rip)
445c(4): add $0x20,%rsp
4460(5): mov 0x10(%rsp),%r11
4465(3): cmp %rax,%r11
4468(2): jnbe 0x69(%rip)
446a(4): lea 0x1(%rax),%rsi
446e(7): lea 0x207c8b(%rip),%rax
4475(3): cmp %rax,%r12
4478(3): mov %rsi,(%rbx)
447b(2): jz 0x14(%rip)
447d(3): mov %r12,%rdi
4480(5): mov %rsi,0x10(%rsp)
4485(5): call 0xffffd2ab(%rip)
448a(5): mov 0x10(%rsp),%rsi
448f(3): mov %rsi,%rdi
4492(5): mov %rsi,0x10(%rsp)
4497(5): call 0x14a9(%rip)
449c(4): sub $0x8,%rsp
44a0(4): mov %rax,0x8(%rbx)
44a4(4): mov 0x0(%rbp),%r8d
44a8(3): push 0x30(%rbp)
44ab(3): push 0x28(%rbp)
44ae(3): mov %r14,%rcx
44b1(2): push %r15
44b3(5): mov 0x3c(%rsp),%r9d
44b8(3): mov %rax,%rdi
44bb(5): mov 0x28(%rsp),%rdx
44c0(5): mov 0x30(%rsp),%rsi
44c5(3): mov %rax,%r12
44c8(5): call 0xffffec68(%rip)
44cd(4): add $0x20,%rsp
44d1(4): mov 0x18(%rsp),%eax
44d5(4): mov %eax,0x0(%r13)
44d9(4): add $0x28,%rsp
44dd(3): mov %r12,%rax
44e0(1): pop %rbx
44e1(1): pop %rbp
44e2(2): pop %r12
44e4(2): pop %r13
44e6(2): pop %r14
44e8(2): pop %r15
44ea(1): ret near (%rsp)
44eb(5): nop 0x0(%rax,%rax,1)
44f0(2): xor %edi,%edi
44f2(5): call 0x14ae(%rip)
44f7(8): movdqa 0x207b71(%rip),%xmm0
44ff(3): mov %rax,%rbx
4502(7): mov %rax,0x207b57(%rip)
4509(3): movups %xmm0,(%rax)
450c(5): jmp 0xfffffee1(%rip)
4511(5): call 0xffffd22f(%rip)
4516(5): call 0x167a(%rip)

"clone_quoting_options" :
4520(2): push %r12
4522(1): push %rbp
4523(1): push %rbx
4524(3): mov %rdi,%rbx
4527(5): call 0xffffd229(%rip)
452c(3): mov (%rax),%r12d
452f(3): mov %rax,%rbp
4532(7): lea 0x207cc7(%rip),%rax
4539(3): test %rbx,%rbx
453c(5): mov $0x38,%esi
4541(4): cmove %rax,%rbx
4545(3): mov %rbx,%rdi
4548(5): call 0x15f8(%rip)
454d(4): mov %r12d,0x0(%rbp)
4551(1): pop %rbx
4552(1): pop %rbp
4553(2): pop %r12
4555(1): ret near (%rsp)

"get_quoting_style" :
4560(7): lea 0x207c99(%rip),%rax
4567(3): test %rdi,%rdi
456a(4): cmove %rax,%rdi
456e(2): mov (%rdi),%eax
4570(1): ret near (%rsp)

"set_quoting_style" :
4580(7): lea 0x207c79(%rip),%rax
4587(3): test %rdi,%rdi
458a(4): cmove %rax,%rdi
458e(2): mov %esi,(%rdi)
4590(1): ret near (%rsp)

"set_char_quoting" :
45a0(7): lea 0x207c59(%rip),%rax
45a7(3): test %rdi,%rdi
45aa(2): mov %esi,%ecx
45ac(4): cmove %rax,%rdi
45b0(2): mov %esi,%eax
45b2(3): and $0x1f,%ecx
45b5(3): shr $0x5,%al
45b8(3): movzx %al,%eax
45bb(5): lea 0x8(%rdi,%rax,4),%rdi
45c0(2): mov (%rdi),%esi
45c2(2): mov %esi,%eax
45c4(2): shr %cl,%eax
45c6(2): xor %eax,%edx
45c8(3): and $0x1,%eax
45cb(3): and $0x1,%edx
45ce(2): shl/sal %cl,%edx
45d0(2): xor %esi,%edx
45d2(2): mov %edx,(%rdi)
45d4(1): ret near (%rsp)

"set_quoting_flags" :
45e0(7): lea 0x207c19(%rip),%rax
45e7(3): test %rdi,%rdi
45ea(4): cmove %rax,%rdi
45ee(3): mov 0x4(%rdi),%eax
45f1(3): mov %esi,0x4(%rdi)
45f4(1): ret near (%rsp)

"set_custom_quoting" :
4600(7): lea 0x207bf9(%rip),%rax
4607(3): test %rdi,%rdi
460a(4): cmove %rax,%rdi
460e(3): test %rsi,%rsi
4611(6): mov $0xa,(%rdi)
4617(2): jz 0x10(%rip)
4619(3): test %rdx,%rdx
461c(2): jz 0xb(%rip)
461e(4): mov %rsi,0x28(%rdi)
4622(4): mov %rdx,0x30(%rdi)
4626(1): ret near (%rsp)
4627(4): sub $0x8,%rsp
462b(5): call 0xffffd115(%rip)

"quotearg_buffer" :
4630(2): push %r15
4632(2): push %r14
4634(7): lea 0x207bc5(%rip),%rax
463b(2): push %r13
463d(2): push %r12
463f(3): mov %rdi,%r13
4642(1): push %rbp
4643(1): push %rbx
4644(3): mov %r8,%rbx
4647(3): mov %rsi,%r14
464a(3): mov %rdx,%r15
464d(4): sub $0x18,%rsp
4651(3): test %r8,%r8
4654(4): cmove %rax,%rbx
4658(5): mov %rcx,0x8(%rsp)
465d(5): call 0xffffd0f3(%rip)
4662(3): mov (%rax),%r12d
4665(3): mov %rax,%rbp
4668(4): lea 0x8(%rbx),%rax
466c(4): sub $0x8,%rsp
4670(4): mov 0x4(%rbx),%r9d
4674(3): push 0x30(%rbx)
4677(3): mov (%rbx),%r8d
467a(3): push 0x28(%rbx)
467d(3): mov %r15,%rdx
4680(1): push %rax
4681(5): mov 0x28(%rsp),%rcx
4686(3): mov %r14,%rsi
4689(3): mov %r13,%rdi
468c(5): call 0xffffeaa4(%rip)
4691(4): mov %r12d,0x0(%rbp)
4695(4): add $0x38,%rsp
4699(1): pop %rbx
469a(1): pop %rbp
469b(2): pop %r12
469d(2): pop %r13
469f(2): pop %r14
46a1(2): pop %r15
46a3(1): ret near (%rsp)

"quotearg_alloc_mem" :
46b0(2): push %r15
46b2(2): push %r14
46b4(7): lea 0x207b45(%rip),%rax
46bb(2): push %r13
46bd(2): push %r12
46bf(3): mov %rdx,%r12
46c2(1): push %rbp
46c3(1): push %rbx
46c4(3): mov %rcx,%rbx
46c7(3): mov %rdi,%r14
46ca(3): mov %rsi,%r15
46cd(4): sub $0x38,%rsp
46d1(3): test %rcx,%rcx
46d4(4): cmove %rax,%rbx
46d8(2): xor %ebp,%ebp
46da(5): call 0xffffd076(%rip)
46df(3): test %r12,%r12
46e2(3): mov %rax,%r13
46e5(2): mov (%rax),%eax
46e7(4): setz %bpl
46eb(3): or 0x4(%rbx),%ebp
46ee(4): lea 0x8(%rbx),%r10
46f2(4): sub $0x8,%rsp
46f6(3): mov (%rbx),%r8d
46f9(3): mov %r15,%rcx
46fc(4): mov %eax,0x14(%rsp)
4700(3): push 0x30(%rbx)
4703(3): mov %r14,%rdx
4706(3): push 0x28(%rbx)
4709(2): push %r10
470b(2): xor %esi,%esi
470d(3): mov %ebp,%r9d
4710(2): xor %edi,%edi
4712(5): mov %r10,0x40(%rsp)
4717(5): call 0xffffea19(%rip)
471c(4): lea 0x1(%rax),%rsi
4720(5): mov %rax,0x48(%rsp)
4725(4): add $0x20,%rsp
4729(3): mov %rsi,%rdi
472c(5): mov %rsi,0x18(%rsp)
4731(5): call 0x120f(%rip)
4736(5): mov %rax,0x10(%rsp)
473b(4): sub $0x8,%rsp
473f(3): push 0x30(%rbx)
4742(3): push 0x28(%rbx)
4745(5): mov 0x38(%rsp),%r10
474a(3): mov %ebp,%r9d
474d(3): mov (%rbx),%r8d
4750(3): mov %r15,%rcx
4753(3): mov %r14,%rdx
4756(3): mov %rax,%rdi
4759(2): push %r10
475b(5): mov 0x38(%rsp),%rsi
4760(5): call 0xffffe9d0(%rip)
4765(4): mov 0x2c(%rsp),%eax
4769(4): add $0x20,%rsp
476d(3): test %r12,%r12
4770(4): mov %eax,0x0(%r13)
4774(2): jz 0xb(%rip)
4776(5): mov 0x28(%rsp),%r11
477b(4): mov %r11,(%r12)
477f(5): mov 0x10(%rsp),%rax
4784(4): add $0x38,%rsp
4788(1): pop %rbx
4789(1): pop %rbp
478a(2): pop %r12
478c(2): pop %r13
478e(2): pop %r14
4790(2): pop %r15
4792(1): ret near (%rsp)

"quotearg_alloc" :
47a0(3): mov %rdx,%rcx
47a3(2): xor %edx,%edx
47a5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
47b0(6): mov 0x2078a2(%rip),%eax
47b6(2): push %r12
47b8(7): mov 0x2078a1(%rip),%r12
47bf(1): push %rbp
47c0(1): push %rbx
47c1(3): cmp $0x1,%eax
47c4(2): jle 0x2d(%rip)
47c6(3): sub $0x2,%eax
47c9(5): lea 0x18(%r12),%rbx
47ce(4): shl/sal $0x4,%rax
47d2(5): lea 0x28(%r12,%rax,1),%rbp
47d7(9): nop 0x0(%rax,%rax,1)
47e0(3): mov (%rbx),%rdi
47e3(4): add $0x10,%rbx
47e7(5): call 0xffffcf49(%rip)
47ec(3): cmp %rbp,%rbx
47ef(2): jnz 0xfffffff1(%rip)
47f1(5): mov 0x8(%r12),%rdi
47f6(7): lea 0x207903(%rip),%rbx
47fd(3): cmp %rbx,%rdi
4800(2): jz 0x19(%rip)
4802(5): call 0xffffcf2e(%rip)
4807(b): mov $0x100,0x20785e(%rip)
4812(7): mov %rbx,0x20785f(%rip)
4819(7): lea 0x207850(%rip),%rbx
4820(3): cmp %rbx,%r12
4823(2): jz 0x11(%rip)
4825(3): mov %r12,%rdi
4828(5): call 0xffffcf08(%rip)
482d(7): mov %rbx,0x20782c(%rip)
4834(1): pop %rbx
4835(a): mov $0x1,0x207819(%rip)
483f(1): pop %rbp
4840(2): pop %r12
4842(1): ret near (%rsp)

"quotearg_n" :
4850(7): lea 0x2079a9(%rip),%rcx
4857(7): mov $0xffffffff,%rdx
485e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4870(7): lea 0x207989(%rip),%rcx
4877(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4880(7): lea 0x207979(%rip),%rcx
4887(3): mov %rdi,%rsi
488a(7): mov $0xffffffff,%rdx
4891(2): xor %edi,%edi
4893(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
48a0(7): lea 0x207959(%rip),%rcx
48a7(3): mov %rsi,%rdx
48aa(3): mov %rdi,%rsi
48ad(2): xor %edi,%edi
48af(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
48c0(4): sub $0x48,%rsp
48c4(3): mov %rdx,%rax
48c7(9): mov $0x28,%rdx
48d0(5): mov %rdx,0x38(%rsp)
48d5(2): xor %edx,%edx
48d7(3): cmp $0xa,%esi
48da(2): jz 0x6a(%rip)
48dc(3): mov %esi,(%rsp)
48df(3): mov %rsp,%rcx
48e2(7): mov $0xffffffff,%rdx
48e9(3): mov %rax,%rsi
48ec(9): mov $0x0,0x4(%rsp)
48f5(9): mov $0x0,0xc(%rsp)
48fe(9): mov $0x0,0x14(%rsp)
4907(9): mov $0x0,0x1c(%rsp)
4910(9): mov $0x0,0x24(%rsp)
4919(9): mov $0x0,0x2c(%rsp)
4922(8): mov $0x0,0x34(%rsp)
492a(5): call 0xfffffa46(%rip)
492f(5): mov 0x38(%rsp),%rcx
4934(9): xor $0x28,%rcx
493d(2): jnz 0xc(%rip)
493f(4): add $0x48,%rsp
4943(1): ret near (%rsp)
4944(5): call 0xffffcdfc(%rip)
4949(5): call 0xffffcee7(%rip)

"quotearg_n_style_mem" :
4950(4): sub $0x48,%rsp
4954(3): mov %rdx,%rax
4957(3): mov %rcx,%rdx
495a(9): mov $0x28,%rcx
4963(5): mov %rcx,0x38(%rsp)
4968(2): xor %ecx,%ecx
496a(3): cmp $0xa,%esi
496d(2): jz 0x63(%rip)
496f(3): mov %esi,(%rsp)
4972(3): mov %rsp,%rcx
4975(3): mov %rax,%rsi
4978(9): mov $0x0,0x4(%rsp)
4981(9): mov $0x0,0xc(%rsp)
498a(9): mov $0x0,0x14(%rsp)
4993(9): mov $0x0,0x1c(%rsp)
499c(9): mov $0x0,0x24(%rsp)
49a5(9): mov $0x0,0x2c(%rsp)
49ae(8): mov $0x0,0x34(%rsp)
49b6(5): call 0xfffff9ba(%rip)
49bb(5): mov 0x38(%rsp),%rdx
49c0(9): xor $0x28,%rdx
49c9(2): jnz 0xc(%rip)
49cb(4): add $0x48,%rsp
49cf(1): ret near (%rsp)
49d0(5): call 0xffffcd70(%rip)
49d5(5): call 0xffffce5b(%rip)

"quotearg_style" :
49e0(3): mov %rsi,%rdx
49e3(2): mov %edi,%esi
49e5(2): xor %edi,%edi
49e7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
49f0(3): mov %rdx,%rcx
49f3(3): mov %rsi,%rdx
49f6(2): mov %edi,%esi
49f8(2): xor %edi,%edi
49fa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4a00(4): sub $0x48,%rsp
4a04(2): mov %edx,%ecx
4a06(9): mov $0x28,%rax
4a0f(5): mov %rax,0x38(%rsp)
4a14(2): xor %eax,%eax
4a16(7): mov 0x207813(%rip),%rax
4a1d(3): mov %rsp,%r8
4a20(3): and $0x1f,%ecx
4a23(8): movdqa 0x2077d5(%rip),%xmm0
4a2b(5): mov %rax,0x30(%rsp)
4a30(2): mov %edx,%eax
4a32(4): movaps %xmm0,(%rsp)
4a36(3): shr $0x5,%al
4a39(3): movzx %al,%eax
4a3c(5): lea 0x8(%r8,%rax,4),%r9
4a41(8): movdqa 0x2077c7(%rip),%xmm0
4a49(5): movaps %xmm0,0x10(%rsp)
4a4e(8): movdqa 0x2077ca(%rip),%xmm0
4a56(5): movaps %xmm0,0x20(%rsp)
4a5b(3): mov (%r9),%edx
4a5e(2): mov %edx,%eax
4a60(2): shr %cl,%eax
4a62(2): not %eax
4a64(3): and $0x1,%eax
4a67(2): shl/sal %cl,%eax
4a69(3): mov %r8,%rcx
4a6c(2): xor %edx,%eax
4a6e(3): mov %rsi,%rdx
4a71(3): mov %rdi,%rsi
4a74(3): mov %eax,(%r9)
4a77(2): xor %edi,%edi
4a79(5): call 0xfffff8f7(%rip)
4a7e(5): mov 0x38(%rsp),%rsi
4a83(9): xor $0x28,%rsi
4a8c(2): jnz 0x7(%rip)
4a8e(4): add $0x48,%rsp
4a92(1): ret near (%rsp)
4a93(5): call 0xffffcd9d(%rip)

"quotearg_char" :
4aa0(4): movsx %sil,%edx
4aa4(7): mov $0xffffffff,%rsi
4aab(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4ab0(5): mov $0x3a,%edx
4ab5(7): mov $0xffffffff,%rsi
4abc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4ad0(5): mov $0x3a,%edx
4ad5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4ae0(4): sub $0x48,%rsp
4ae4(3): mov %rdx,%rax
4ae7(9): mov $0x28,%rdx
4af0(5): mov %rdx,0x38(%rsp)
4af5(2): xor %edx,%edx
4af7(3): cmp $0xa,%esi
4afa(2): jz 0x6a(%rip)
4afc(3): mov %esi,(%rsp)
4aff(3): mov %rsp,%rcx
4b02(7): mov $0xffffffff,%rdx
4b09(3): mov %rax,%rsi
4b0c(9): mov $0x0,0x4(%rsp)
4b15(9): mov $0x4000000,0xc(%rsp)
4b1e(9): mov $0x0,0x14(%rsp)
4b27(9): mov $0x0,0x1c(%rsp)
4b30(9): mov $0x0,0x24(%rsp)
4b39(9): mov $0x0,0x2c(%rsp)
4b42(8): mov $0x0,0x34(%rsp)
4b4a(5): call 0xfffff826(%rip)
4b4f(5): mov 0x38(%rsp),%rcx
4b54(9): xor $0x28,%rcx
4b5d(2): jnz 0xc(%rip)
4b5f(4): add $0x48,%rsp
4b63(1): ret near (%rsp)
4b64(5): call 0xffffcbdc(%rip)
4b69(5): call 0xffffccc7(%rip)

"quotearg_n_custom_mem" :
4b70(4): sub $0x48,%rsp
4b74(3): mov %rcx,%r9
4b77(7): mov 0x2076b2(%rip),%rcx
4b7e(8): movdqa 0x20767a(%rip),%xmm0
4b86(9): mov $0x28,%rax
4b8f(5): mov %rax,0x38(%rsp)
4b94(2): xor %eax,%eax
4b96(4): movaps %xmm0,(%rsp)
4b9a(3): test %rsi,%rsi
4b9d(5): mov %rcx,0x30(%rsp)
4ba2(7): mov $0xa,(%rsp)
4ba9(8): movdqa 0x20765f(%rip),%xmm0
4bb1(5): movaps %xmm0,0x10(%rsp)
4bb6(8): movdqa 0x207662(%rip),%xmm0
4bbe(5): movaps %xmm0,0x20(%rsp)
4bc3(2): jz 0x34(%rip)
4bc5(3): test %rdx,%rdx
4bc8(2): jz 0x2f(%rip)
4bca(5): mov %rsi,0x28(%rsp)
4bcf(5): mov %rdx,0x30(%rsp)
4bd4(3): mov %rsp,%rcx
4bd7(3): mov %r8,%rdx
4bda(3): mov %r9,%rsi
4bdd(5): call 0xfffff793(%rip)
4be2(5): mov 0x38(%rsp),%rdi
4be7(9): xor $0x28,%rdi
4bf0(2): jnz 0xc(%rip)
4bf2(4): add $0x48,%rsp
4bf6(1): ret near (%rsp)
4bf7(5): call 0xffffcb49(%rip)
4bfc(5): call 0xffffcc34(%rip)

"quotearg_n_custom" :
4c10(7): mov $0xffffffff,%r8
4c17(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4c20(3): mov %rdx,%rcx
4c23(7): mov $0xffffffff,%r8
4c2a(3): mov %rsi,%rdx
4c2d(3): mov %rdi,%rsi
4c30(2): xor %edi,%edi
4c32(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4c40(3): mov %rcx,%r8
4c43(3): mov %rdx,%rcx
4c46(3): mov %rsi,%rdx
4c49(3): mov %rdi,%rsi
4c4c(2): xor %edi,%edi
4c4e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4c60(7): lea 0x2073b9(%rip),%rcx
4c67(5): jmp 0xfffff709(%rip)

"quote_mem" :
4c70(7): lea 0x2073a9(%rip),%rcx
4c77(3): mov %rsi,%rdx
4c7a(3): mov %rdi,%rsi
4c7d(2): xor %edi,%edi
4c7f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4c90(7): lea 0x207389(%rip),%rcx
4c97(7): mov $0xffffffff,%rdx
4c9e(5): jmp 0xfffff6d2(%rip)

"quote" :
4cb0(7): lea 0x207369(%rip),%rcx
4cb7(3): mov %rdi,%rsi
4cba(7): mov $0xffffffff,%rdx
4cc1(2): xor %edi,%edi
4cc3(5): jmp 0xfffff6ad(%rip)

"savewd_init" :
4cd0(6): mov $0x0,(%rdi)
4cd6(1): ret near (%rsp)

"savewd_errno" :
4ce0(2): xor %eax,%eax
4ce2(3): cmp $0x4,(%rdi)
4ce5(2): jz 0xb(%rip)
4ce7(2): REP ret near (%rsp)
4ce9(7): nop 0x0(%rax)
4cf0(3): mov 0x4(%rdi),%eax
4cf3(1): ret near (%rsp)

"savewd_chdir" :
4d00(3): test %rcx,%rcx
4d03(2): push %r14
4d05(3): mov %edx,%r14d
4d08(2): push %r13
4d0a(3): mov %rsi,%r13
4d0d(2): push %r12
4d0f(3): mov %rdi,%r12
4d12(1): push %rbp
4d13(3): mov %rcx,%rbp
4d16(1): push %rbx
4d17(6): jz 0x121(%rip)
4d1d(2): mov %edx,%esi
4d1f(3): mov %r13,%rdi
4d22(3): shl/sal $0x11,%esi
4d25(6): and $0x20000,%esi
4d2b(6): or $0x10900,%esi
4d31(5): call 0xffffca8f(%rip)
4d36(3): mov %eax,0x0(%rbp)
4d39(2): mov %eax,%ebx
4d3b(5): call 0xffffca15(%rip)
4d40(2): mov (%rax),%eax
4d42(3): mov %eax,0x4(%rbp)
4d45(2): test %ebx,%ebx
4d47(2): js 0x41(%rip)
4d49(4): and $0x2,%r14d
4d4d(2): jz 0x49(%rip)
4d4f(3): test %rbp,%rbp
4d52(3): setz %al
4d55(3): xor %r14d,%r14d
4d58(2): test %ebx,%ebx
4d5a(2): js 0x1c(%rip)
4d5c(2): test %al,%al
4d5e(2): jz 0x18(%rip)
4d60(5): call 0xffffc9f0(%rip)
4d65(3): mov (%rax),%r12d
4d68(3): mov %rax,%rbp
4d6b(2): mov %ebx,%edi
4d6d(5): call 0xffffcb43(%rip)
4d72(4): mov %r12d,0x0(%rbp)
4d76(1): pop %rbx
4d77(3): mov %r14d,%eax
4d7a(1): pop %rbp
4d7b(2): pop %r12
4d7d(2): pop %r13
4d7f(2): pop %r14
4d81(1): ret near (%rsp)
4d82(6): nop 0x0(%rax,%rax,1)
4d88(5): call 0xffffc9c8(%rip)
4d8d(3): cmp $0xd,(%rax)
4d90(6): jnz 0x1d0(%rip)
4d96(4): mov (%r12),%ecx
4d9a(3): cmp $0x5,%ecx
4d9d(6): jnbe 0x1ed(%rip)
4da3(5): mov $0x1,%eax
4da8(3): shl/sal %cl,%rax
4dab(2): test $0x36,%al
4dad(2): jnz 0x37(%rip)
4daf(2): test $0x8,%al
4db1(6): jnz 0xcf(%rip)
4db7(2): test %ecx,%ecx
4db9(6): jnz 0x1d1(%rip)
4dbf(7): lea 0x3ee6(%rip),%rdi
4dc6(2): xor %esi,%esi
4dc8(2): xor %eax,%eax
4dca(5): call 0x1016(%rip)
4dcf(2): test %eax,%eax
4dd1(6): js 0x10f(%rip)
4dd7(8): mov $0x1,(%r12)
4ddf(5): mov %eax,0x4(%r12)
4de4(2): test %ebx,%ebx
4de6(2): js 0x32(%rip)
4de8(2): mov %ebx,%edi
4dea(5): call 0xffffcba6(%rip)
4def(2): test %eax,%eax
4df1(3): mov %eax,%r14d
4df4(2): jnz 0x7c(%rip)
4df6(5): cmp $0x5,(%r12)
4dfb(6): jnbe 0x170(%rip)
4e01(4): mov (%r12),%eax
4e05(7): lea 0x4524(%rip),%rdx
4e0c(4): movsxd 0x0(%rdx,%rax,4),%rax
4e10(3): add %rdx,%rax
4e13(2): jmp %rax
4e15(3): nop (%rax)
4e18(3): mov %r13,%rdi
4e1b(5): call 0xffffca05(%rip)
4e20(2): test %eax,%eax
4e22(3): mov %eax,%r14d
4e25(2): jz 0xffffffd1(%rip)
4e27(1): pop %rbx
4e28(3): mov %r14d,%eax
4e2b(1): pop %rbp
4e2c(2): pop %r12
4e2e(2): pop %r13
4e30(2): pop %r14
4e32(1): ret near (%rsp)
4e33(5): nop 0x0(%rax,%rax,1)
4e38(3): test $0x1,%dl
4e3b(5): mov $0xffffffff,%ebx
4e40(6): jz 0xffffff56(%rip)
4e46(2): mov %edx,%esi
4e48(3): mov %r13,%rdi
4e4b(3): shl/sal $0x11,%esi
4e4e(6): and $0x20000,%esi
4e54(6): or $0x10900,%esi
4e5a(5): call 0xffffc966(%rip)
4e5f(2): mov %eax,%ebx
4e61(5): jmp 0xfffffee4(%rip)
4e66(a): nop 0x0(%rax,%rax,1)
4e70(3): test %rbp,%rbp
4e73(3): setz %al
4e76(5): jmp 0xfffffee2(%rip)
4e7b(5): nop 0x0(%rax,%rax,1)
4e80(5): mov 0x4(%r12),%edx
4e85(2): test %edx,%edx
4e87(6): js 0x92(%rip)
4e8d(2): test %ebx,%ebx
4e8f(6): jns 0xffffff59(%rip)
4e95(2): jmp 0xffffff83(%rip)
4e97(9): nop 0x0(%rax,%rax,1)
4ea0(8): mov $0x2,(%r12)
4ea8(5): jmp 0xfffffea7(%rip)
4ead(3): nop (%rax)
4eb0(5): mov 0x4(%r12),%eax
4eb5(2): test %eax,%eax
4eb7(6): jz 0xfffffe98(%rip)
4ebd(7): lea 0x44dc(%rip),%rcx
4ec4(7): lea 0x4445(%rip),%rsi
4ecb(7): lea 0x43f6(%rip),%rdi
4ed2(5): mov $0x9b,%edx
4ed7(5): call 0xffffc9b9(%rip)
4edc(4): nop 0x0(%rax)
4ee0(5): call 0xffffc870(%rip)
4ee5(2): mov (%rax),%eax
4ee7(3): cmp $0xd,%eax
4eea(2): jz 0x1e(%rip)
4eec(3): cmp $0x74,%eax
4eef(2): jz 0x19(%rip)
4ef1(8): mov $0x4,(%r12)
4ef9(5): mov %eax,0x4(%r12)
4efe(5): jmp 0xfffffee6(%rip)
4f03(5): nop 0x0(%rax,%rax,1)
4f08(8): mov $0x3,(%r12)
4f10(9): mov $0xffffffff,0x4(%r12)
4f19(5): call 0xffffcba7(%rip)
4f1e(3): cmp $0x0,%eax
4f21(5): mov %eax,0x4(%r12)
4f26(6): jz 0xfffffebe(%rip)
4f2c(5): mov $0x1,%eax
4f31(6): mov $0xfffffffe,%r14d
4f37(6): jnle 0xfffffe21(%rip)
4f3d(8): mov $0x4,(%r12)
4f45(5): call 0xffffc80b(%rip)
4f4a(2): mov (%rax),%eax
4f4c(5): mov %eax,0x4(%r12)
4f51(5): jmp 0xfffffe93(%rip)
4f56(a): nop 0x0(%rax,%rax,1)
4f60(6): mov $0xffffffff,%r14d
4f66(5): jmp 0xfffffe10(%rip)
4f6b(7): lea 0x442e(%rip),%rcx
4f72(7): lea 0x4397(%rip),%rsi
4f79(7): lea 0x4387(%rip),%rdi
4f80(5): mov $0x9f,%edx
4f85(5): call 0xffffc90b(%rip)
4f8a(7): lea 0x43ff(%rip),%rcx
4f91(7): lea 0x4378(%rip),%rsi
4f98(7): lea 0x4368(%rip),%rdi
4f9f(5): mov $0x63,%edx
4fa4(5): call 0xffffc8ec(%rip)

"savewd_restore" :
4fb0(2): push %r12
4fb2(1): push %rbp
4fb3(1): push %rbx
4fb4(4): sub $0x10,%rsp
4fb8(9): mov $0x28,%rax
4fc1(5): mov %rax,0x8(%rsp)
4fc6(2): xor %eax,%eax
4fc8(3): cmp $0x4,(%rdi)
4fcb(6): jnbe 0x112(%rip)
4fd1(2): mov (%rdi),%eax
4fd3(7): lea 0x436e(%rip),%rdx
4fda(3): mov %rdi,%rbx
4fdd(4): movsxd 0x0(%rdx,%rax,4),%rax
4fe1(3): add %rdx,%rax
4fe4(2): jmp %rax
4fe6(a): nop 0x0(%rax,%rax,1)
4ff0(3): mov 0x4(%rdi),%ebp
4ff3(3): cmp $0x0,%ebp
4ff6(6): jz 0x106(%rip)
4ffc(5): lea 0x4(%rsp),%r12
5001(2): jnle 0x49(%rip)
5003(2): xor %eax,%eax
5005(5): mov 0x8(%rsp),%rcx
500a(9): xor $0x28,%rcx
5013(6): jnz 0xc5(%rip)
5019(4): add $0x10,%rsp
501d(1): pop %rbx
501e(1): pop %rbp
501f(2): pop %r12
5021(1): ret near (%rsp)
5022(6): nop 0x0(%rax,%rax,1)
5028(4): mov 0x4(%rdi),%r12d
502c(5): call 0xffffc724(%rip)
5031(3): mov %rax,%rbp
5034(4): mov %r12d,0x0(%rbp)
5038(5): mov $0xffffffff,%eax
503d(2): jmp 0xffffffc8(%rip)
503f(1): nop 
5040(5): call 0xffffc710(%rip)
5045(3): cmp $0x4,(%rax)
5048(2): jnz 0x71(%rip)
504a(2): xor %edx,%edx
504c(3): mov %r12,%rsi
504f(2): mov %ebp,%edi
5051(5): call 0xffffc9cf(%rip)
5056(2): test %eax,%eax
5058(2): js 0xffffffe8(%rip)
505a(4): mov 0x4(%rsp),%eax
505e(7): mov $0xffffffff,0x4(%rbx)
5065(2): mov %eax,%edi
5067(3): and $0x7f,%edi
506a(2): jz 0xb(%rip)
506c(5): call 0xffffc6b4(%rip)
5071(4): mov 0x4(%rsp),%eax
5075(3): movzx %ah,%eax
5078(2): jmp 0xffffff8d(%rip)
507a(6): nop 0x0(%rax,%rax,1)
5080(3): mov 0x4(%rdi),%edi
5083(5): call 0xffffc90d(%rip)
5088(2): test %eax,%eax
508a(2): jnz 0xd(%rip)
508c(6): mov $0x1,(%rbx)
5092(5): jmp 0xffffff73(%rip)
5097(5): call 0xffffc6b9(%rip)
509c(3): mov 0x4(%rbx),%edi
509f(3): mov (%rax),%r12d
50a2(3): mov %rax,%rbp
50a5(5): call 0xffffc80b(%rip)
50aa(6): mov $0x4,(%rbx)
50b0(4): mov %r12d,0x4(%rbx)
50b4(5): jmp 0xffffff80(%rip)
50b9(7): lea 0x42c0(%rip),%rcx
50c0(7): lea 0x4249(%rip),%rsi
50c7(7): lea 0x420d(%rip),%rdi
50ce(5): mov $0xd8,%edx
50d3(5): call 0xffffc7bd(%rip)
50d8(5): call 0xffffc758(%rip)
50dd(7): lea 0x429c(%rip),%rcx
50e4(7): lea 0x4225(%rip),%rsi
50eb(7): lea 0x4215(%rip),%rdi
50f2(5): mov $0xe2,%edx
50f7(5): call 0xffffc799(%rip)
50fc(2): mov %esi,%edi
50fe(5): call 0xffffc672(%rip)
5103(3): nop (%rax)
5106(a): nop 0x0(%rax,%rax,1)
5110(1): push %rbx
5111(3): cmp $0x4,(%rdi)
5114(2): jnbe 0x52(%rip)
5116(2): mov (%rdi),%eax
5118(7): lea 0x423d(%rip),%rdx
511f(3): mov %rdi,%rbx
5122(4): movsxd 0x0(%rdx,%rax,4),%rax
5126(3): add %rdx,%rax
5129(2): jmp %rax
512b(5): nop 0x0(%rax,%rax,1)
5130(3): mov 0x4(%rdi),%edi
5133(5): call 0xffffc77d(%rip)
5138(6): mov $0x5,(%rbx)
513e(1): pop %rbx
513f(1): ret near (%rsp)
5140(3): mov 0x4(%rdi),%eax
5143(2): test %eax,%eax
5145(2): js 0xfffffff3(%rip)
5147(7): lea 0x4222(%rip),%rcx
514e(7): lea 0x41bb(%rip),%rsi
5155(7): lea 0x419b(%rip),%rdi
515c(5): mov $0xf7,%edx
5161(5): call 0xffffc72f(%rip)
5166(7): lea 0x4203(%rip),%rcx
516d(7): lea 0x419c(%rip),%rsi
5174(7): lea 0x418c(%rip),%rdi
517b(5): mov $0xfb,%edx
5180(5): call 0xffffc710(%rip)

"savewd_finish" :
5110(1): push %rbx
5111(3): cmp $0x4,(%rdi)
5114(2): jnbe 0x52(%rip)
5116(2): mov (%rdi),%eax
5118(7): lea 0x423d(%rip),%rdx
511f(3): mov %rdi,%rbx
5122(4): movsxd 0x0(%rdx,%rax,4),%rax
5126(3): add %rdx,%rax
5129(2): jmp %rax
512b(5): nop 0x0(%rax,%rax,1)
5130(3): mov 0x4(%rdi),%edi
5133(5): call 0xffffc77d(%rip)
5138(6): mov $0x5,(%rbx)
513e(1): pop %rbx
513f(1): ret near (%rsp)
5140(3): mov 0x4(%rdi),%eax
5143(2): test %eax,%eax
5145(2): js 0xfffffff3(%rip)
5147(7): lea 0x4222(%rip),%rcx
514e(7): lea 0x41bb(%rip),%rsi
5155(7): lea 0x419b(%rip),%rdi
515c(5): mov $0xf7,%edx
5161(5): call 0xffffc72f(%rip)
5166(7): lea 0x4203(%rip),%rcx
516d(7): lea 0x419c(%rip),%rsi
5174(7): lea 0x418c(%rip),%rdi
517b(5): mov $0xfb,%edx
5180(5): call 0xffffc710(%rip)

"savewd_process_files" :
5190(2): push %r15
5192(2): push %r14
5194(2): mov %edi,%eax
5196(2): push %r13
5198(2): push %r12
519a(3): sub $0x1,%eax
519d(1): push %rbp
519e(1): push %rbx
519f(3): mov %rcx,%r12
51a2(3): mov %rdx,%rbp
51a5(4): sub $0x38,%rsp
51a9(9): mov $0x28,%rcx
51b2(5): mov %rcx,0x28(%rsp)
51b7(2): xor %ecx,%ecx
51b9(2): test %eax,%eax
51bb(4): mov %edi,0x18(%rsp)
51bf(5): mov %rsi,0x10(%rsp)
51c4(8): mov $0x0,0x20(%rsp)
51cc(4): mov %eax,0x1c(%rsp)
51d0(2): js 0x42(%rip)
51d2(3): mov %eax,%r13d
51d5(2): cwde 
51d7(8): lea 0x0(,%rax,8),%rdx
51df(4): mov 0x0(%rsi,%rax,8),%rax
51e3(3): cmp $0x2f,(%rax)
51e6(6): jnz 0xb2(%rip)
51ec(5): lea 0xfffffff8(%rsi,%rdx,1),%rax
51f1(2): jmp 0x17(%rip)
51f3(5): nop 0x0(%rax,%rax,1)
51f8(3): mov (%rax),%rdx
51fb(4): sub $0x8,%rax
51ff(3): cmp $0x2f,(%rdx)
5202(6): jnz 0x96(%rip)
5208(4): sub $0x1,%r13d
520c(4): cmp $0xff,%r13d
5210(2): jnz 0xffffffe8(%rip)
5212(5): lea 0x20(%rsp),%rbx
5217(3): xor %r15d,%r15d
521a(3): xor %r13d,%r13d
521d(3): mov %rbx,%rdi
5220(5): call 0xfffffef0(%rip)
5225(5): cmp %r13d,0x18(%rsp)
522a(2): jle 0x41(%rip)
522c(4): mov 0x1c(%rsp),%ecx
5230(5): mov 0x10(%rsp),%rdi
5235(3): movsxd %r13d,%rax
5238(3): sub %r13d,%ecx
523b(4): lea 0x0(%rdi,%rax,8),%r14
523f(3): mov %rcx,%r13
5242(3): add %rax,%r13
5245(5): lea 0x8(%rdi,%r13,8),%r13
524a(6): nop 0x0(%rax,%rax,1)
5250(3): mov (%r14),%rdi
5253(3): mov %r12,%rdx
5256(3): mov %rbx,%rsi
5259(2): call %rbp
525b(3): cmp %eax,%r15d
525e(4): cmovnge %eax,%r15d
5262(4): add $0x8,%r14
5266(3): cmp %r13,%r14
5269(2): jnz 0xffffffe7(%rip)
526b(5): mov 0x28(%rsp),%rcx
5270(9): xor $0x28,%rcx
5279(3): mov %r15d,%eax
527c(6): jnz 0x9b(%rip)
5282(4): add $0x38,%rsp
5286(1): pop %rbx
5287(1): pop %rbp
5288(2): pop %r12
528a(2): pop %r13
528c(2): pop %r14
528e(2): pop %r15
5290(1): ret near (%rsp)
5291(7): nop 0x0(%rax)
5298(3): test %r13d,%r13d
529b(6): jle 0xffffff77(%rip)
52a1(5): mov 0x10(%rsp),%rcx
52a6(4): lea 0xffffffff(%r13),%eax
52aa(3): xor %r15d,%r15d
52ad(5): lea 0x20(%rsp),%rbx
52b2(5): lea 0x8(%rcx,%rax,8),%rax
52b7(3): mov %rcx,%r14
52ba(5): mov %rax,0x8(%rsp)
52bf(2): xor %eax,%eax
52c1(2): jmp 0x47(%rip)
52c3(5): nop 0x0(%rax,%rax,1)
52c8(3): mov %r12,%rdx
52cb(3): mov %rbx,%rsi
52ce(3): mov (%r14),%rdi
52d1(2): call %rbp
52d3(3): cmp %eax,%r15d
52d6(4): cmovnge %eax,%r15d
52da(4): mov 0x8(%r14),%rax
52de(3): cmp $0x2f,(%rax)
52e1(2): jz 0x14(%rip)
52e3(3): mov %r15d,%esi
52e6(3): mov %rbx,%rdi
52e9(5): call 0xfffffcc7(%rip)
52ee(3): cmp %eax,%r15d
52f1(4): cmovnge %eax,%r15d
52f5(4): add $0x8,%r14
52f9(5): cmp 0x8(%rsp),%r14
52fe(6): jz 0xffffff1f(%rip)
5304(4): mov 0x20(%rsp),%eax
5308(3): cmp $0x3,%eax
530b(2): jnz 0xffffffbd(%rip)
530d(4): mov 0x24(%rsp),%eax
5311(2): test %eax,%eax
5313(2): jnle 0xffffffc7(%rip)
5315(2): jmp 0xffffffb3(%rip)
5317(5): call 0xffffc519(%rip)

"version_etc_arn" :
5320(2): push %r15
5322(2): push %r14
5324(2): push %r13
5326(2): push %r12
5328(3): mov %r9,%r12
532b(1): push %rbp
532c(1): push %rbx
532d(3): mov %rdi,%rbp
5330(3): mov %r8,%rbx
5333(4): sub $0x28,%rsp
5337(3): test %rsi,%rsi
533a(6): jz 0x11e(%rip)
5340(3): mov %rdx,%r8
5343(7): lea 0x4063(%rip),%rdx
534a(3): mov %rcx,%r9
534d(2): xor %eax,%eax
534f(3): mov %rsi,%rcx
5352(5): mov $0x1,%esi
5357(5): call 0xffffc739(%rip)
535c(7): lea 0x405d(%rip),%rsi
5363(2): xor %edi,%edi
5365(5): mov $0x5,%edx
536a(5): call 0xffffc486(%rip)
536f(7): lea 0x436a(%rip),%rdx
5376(3): mov %rax,%rcx
5379(6): mov $0x7e3,%r8d
537f(5): mov $0x1,%esi
5384(3): mov %rbp,%rdi
5387(2): xor %eax,%eax
5389(5): call 0xffffc707(%rip)
538e(7): lea 0x40b3(%rip),%rsi
5395(2): xor %edi,%edi
5397(5): mov $0x5,%edx
539c(5): call 0xffffc454(%rip)
53a1(3): mov %rbp,%rsi
53a4(3): mov %rax,%rdi
53a7(5): call 0xffffc529(%rip)
53ac(4): cmp $0x9,%r12
53b0(6): jnbe 0x340(%rip)
53b6(7): lea 0x42eb(%rip),%rdx
53bd(4): movsxd 0x0(%rdx,%r12,4),%rax
53c1(3): add %rdx,%rax
53c4(2): jmp %rax
53c6(a): nop 0x0(%rax,%rax,1)
53d0(4): mov 0x38(%rbx),%r9
53d4(4): mov 0x10(%rbx),%rax
53d8(7): lea 0x41d9(%rip),%rsi
53df(4): mov 0x8(%rbx),%r8
53e3(5): mov $0x5,%edx
53e8(2): xor %edi,%edi
53ea(4): mov 0x30(%rbx),%r13
53ee(4): mov 0x28(%rbx),%r12
53f2(5): mov %r9,0x10(%rsp)
53f7(4): mov 0x20(%rbx),%r15
53fb(4): mov 0x18(%rbx),%r14
53ff(4): mov %rax,(%rsp)
5403(5): mov %r8,0x8(%rsp)
5408(3): mov (%rbx),%rbx
540b(5): call 0xffffc3e5(%rip)
5410(4): sub $0x8,%rsp
5414(5): mov 0x18(%rsp),%r9
5419(3): mov %rax,%rdx
541c(3): mov %rbx,%rcx
541f(5): mov $0x1,%esi
5424(3): mov %rbp,%rdi
5427(2): xor %eax,%eax
5429(2): push %r9
542b(2): push %r13
542d(2): push %r12
542f(2): push %r15
5431(2): push %r14
5433(5): mov 0x30(%rsp),%r9
5438(5): mov 0x38(%rsp),%r8
543d(5): call 0xffffc653(%rip)
5442(4): add $0x30,%rsp
5446(4): add $0x28,%rsp
544a(1): pop %rbx
544b(1): pop %rbp
544c(2): pop %r12
544e(2): pop %r13
5450(2): pop %r14
5452(2): pop %r15
5454(1): ret near (%rsp)
5455(3): nop (%rax)
5458(3): mov %rcx,%r8
545b(3): mov %rdx,%rcx
545e(7): lea 0x3f54(%rip),%rdx
5465(5): mov $0x1,%esi
546a(2): xor %eax,%eax
546c(5): call 0xffffc624(%rip)
5471(5): jmp 0xfffffeeb(%rip)
5476(a): nop 0x0(%rax,%rax,1)
5480(4): mov 0x40(%rbx),%r10
5484(4): mov 0x38(%rbx),%r9
5488(7): lea 0x4159(%rip),%rsi
548f(4): mov 0x10(%rbx),%rax
5493(4): mov 0x8(%rbx),%r8
5497(5): mov $0x5,%edx
549c(4): mov 0x30(%rbx),%r13
54a0(4): mov 0x28(%rbx),%r12
54a4(4): mov 0x20(%rbx),%r15
54a8(4): mov 0x18(%rbx),%r14
54ac(3): mov (%rbx),%rbx
54af(5): mov %r10,0x18(%rsp)
54b4(5): mov %r9,0x10(%rsp)
54b9(4): mov %rax,(%rsp)
54bd(5): mov %r8,0x8(%rsp)
54c2(2): xor %edi,%edi
54c4(5): call 0xffffc32c(%rip)
54c9(5): mov 0x18(%rsp),%r10
54ce(2): push %r10
54d0(5): jmp 0xffffff44(%rip)
54d5(3): nop (%rax)
54d8(3): mov (%rbx),%rbx
54db(7): lea 0x3ee2(%rip),%rsi
54e2(5): mov $0x5,%edx
54e7(2): xor %edi,%edi
54e9(5): call 0xffffc307(%rip)
54ee(4): add $0x28,%rsp
54f2(3): mov %rbx,%rcx
54f5(3): mov %rbp,%rdi
54f8(1): pop %rbx
54f9(1): pop %rbp
54fa(2): pop %r12
54fc(2): pop %r13
54fe(2): pop %r14
5500(2): pop %r15
5502(3): mov %rax,%rdx
5505(5): mov $0x1,%esi
550a(2): xor %eax,%eax
550c(5): jmp 0xffffc584(%rip)
5511(7): nop 0x0(%rax)
5518(4): mov 0x8(%rbx),%r12
551c(7): lea 0x3eb1(%rip),%rsi
5523(3): mov (%rbx),%rbx
5526(5): mov $0x5,%edx
552b(2): xor %edi,%edi
552d(5): call 0xffffc2c3(%rip)
5532(4): add $0x28,%rsp
5536(3): mov %r12,%r8
5539(3): mov %rbx,%rcx
553c(3): mov %rbp,%rdi
553f(3): mov %rax,%rdx
5542(5): mov $0x1,%esi
5547(1): pop %rbx
5548(1): pop %rbp
5549(2): pop %r12
554b(2): pop %r13
554d(2): pop %r14
554f(2): pop %r15
5551(2): xor %eax,%eax
5553(5): jmp 0xffffc53d(%rip)
5558(8): nop 0x0(%rax,%rax,1)
5560(4): mov 0x10(%rbx),%r13
5564(4): mov 0x8(%rbx),%r12
5568(7): lea 0x3e7c(%rip),%rsi
556f(3): mov (%rbx),%rbx
5572(5): mov $0x5,%edx
5577(2): xor %edi,%edi
5579(5): call 0xffffc277(%rip)
557e(4): add $0x28,%rsp
5582(3): mov %r13,%r9
5585(3): mov %r12,%r8
5588(3): mov %rbx,%rcx
558b(3): mov %rbp,%rdi
558e(3): mov %rax,%rdx
5591(1): pop %rbx
5592(1): pop %rbp
5593(2): pop %r12
5595(2): pop %r13
5597(2): pop %r14
5599(2): pop %r15
559b(5): mov $0x1,%esi
55a0(2): xor %eax,%eax
55a2(5): jmp 0xffffc4ee(%rip)
55a7(9): nop 0x0(%rax,%rax,1)
55b0(7): lea 0x3f61(%rip),%rsi
55b7(5): mov $0x5,%edx
55bc(2): xor %edi,%edi
55be(4): mov 0x18(%rbx),%r14
55c2(4): mov 0x10(%rbx),%r13
55c6(4): mov 0x8(%rbx),%r12
55ca(3): mov (%rbx),%rbx
55cd(5): call 0xffffc223(%rip)
55d2(4): sub $0x8,%rsp
55d6(2): push %r14
55d8(3): mov %rax,%rdx
55db(3): mov %r13,%r9
55de(3): mov %r12,%r8
55e1(3): mov %rbx,%rcx
55e4(3): mov %rbp,%rdi
55e7(5): mov $0x1,%esi
55ec(2): xor %eax,%eax
55ee(5): call 0xffffc4a2(%rip)
55f3(1): pop %rax
55f4(1): pop %rdx
55f5(4): add $0x28,%rsp
55f9(1): pop %rbx
55fa(1): pop %rbp
55fb(2): pop %r12
55fd(2): pop %r13
55ff(2): pop %r14
5601(2): pop %r15
5603(1): ret near (%rsp)
5604(4): nop 0x0(%rax)
5608(4): mov 0x20(%rbx),%r15
560c(7): lea 0x3f25(%rip),%rsi
5613(5): mov $0x5,%edx
5618(2): xor %edi,%edi
561a(4): mov 0x18(%rbx),%r14
561e(4): mov 0x10(%rbx),%r13
5622(4): mov 0x8(%rbx),%r12
5626(3): mov (%rbx),%rbx
5629(5): call 0xffffc1c7(%rip)
562e(2): push %r15
5630(2): jmp 0xffffffa6(%rip)
5632(6): nop 0x0(%rax,%rax,1)
5638(4): mov 0x8(%rbx),%r8
563c(4): mov 0x28(%rbx),%r12
5640(7): lea 0x3f19(%rip),%rsi
5647(4): mov 0x20(%rbx),%r15
564b(4): mov 0x18(%rbx),%r14
564f(5): mov $0x5,%edx
5654(4): mov 0x10(%rbx),%r13
5658(2): xor %edi,%edi
565a(3): mov (%rbx),%rbx
565d(4): mov %r8,(%rsp)
5661(5): call 0xffffc18f(%rip)
5666(4): sub $0x8,%rsp
566a(3): mov %r13,%r9
566d(2): push %r12
566f(2): push %r15
5671(2): push %r14
5673(5): mov 0x20(%rsp),%r8
5678(3): mov %rbx,%rcx
567b(3): mov %rax,%rdx
567e(3): mov %rbp,%rdi
5681(5): mov $0x1,%esi
5686(2): xor %eax,%eax
5688(5): call 0xffffc408(%rip)
568d(4): add $0x20,%rsp
5691(4): add $0x28,%rsp
5695(1): pop %rbx
5696(1): pop %rbp
5697(2): pop %r12
5699(2): pop %r13
569b(2): pop %r14
569d(2): pop %r15
569f(1): ret near (%rsp)
56a0(4): mov 0x10(%rbx),%r9
56a4(4): mov 0x30(%rbx),%r13
56a8(7): lea 0x3ed9(%rip),%rsi
56af(4): mov 0x28(%rbx),%r12
56b3(4): mov 0x20(%rbx),%r15
56b7(5): mov $0x5,%edx
56bc(4): mov 0x18(%rbx),%r14
56c0(4): mov 0x8(%rbx),%r8
56c4(2): xor %edi,%edi
56c6(5): mov %r9,0x8(%rsp)
56cb(3): mov (%rbx),%rbx
56ce(4): mov %r8,(%rsp)
56d2(5): call 0xffffc11e(%rip)
56d7(2): push %r13
56d9(2): push %r12
56db(2): push %r15
56dd(2): push %r14
56df(5): mov 0x28(%rsp),%r9
56e4(2): jmp 0xffffff8f(%rip)
56e6(a): nop 0x0(%rax,%rax,1)
56f0(4): mov 0x40(%rbx),%r10
56f4(4): mov 0x38(%rbx),%r9
56f8(5): mov $0x5,%edx
56fd(4): mov 0x10(%rbx),%rax
5701(4): mov 0x8(%rbx),%r8
5705(7): lea 0x3f14(%rip),%rsi
570c(4): mov 0x30(%rbx),%r13
5710(4): mov 0x28(%rbx),%r12
5714(4): mov 0x20(%rbx),%r15
5718(4): mov 0x18(%rbx),%r14
571c(5): mov %r10,0x18(%rsp)
5721(5): mov %r9,0x10(%rsp)
5726(4): mov %rax,(%rsp)
572a(5): mov %r8,0x8(%rsp)
572f(3): mov (%rbx),%rbx
5732(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5740(3): xor %r9d,%r9d
5743(4): cmp $0x0,(%r8)
5747(2): jz 0x14(%rip)
5749(7): nop 0x0(%rax)
5750(4): add $0x1,%r9
5754(5): cmp $0x0,0x0(%r8,%r9,8)
5759(2): jnz 0xfffffff7(%rip)
575b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5760(4): sub $0x68,%rsp
5764(3): mov %r8,%r10
5767(3): xor %r9d,%r9d
576a(9): mov $0x28,%rax
5773(5): mov %rax,0x58(%rsp)
5778(2): xor %eax,%eax
577a(3): mov %rsp,%r8
577d(3): nop (%rax)
5780(3): mov (%r10),%eax
5783(3): cmp $0x2f,%eax
5786(2): jnbe 0x44(%rip)
5788(3): mov %eax,%r11d
578b(4): add 0x10(%r10),%r11
578f(3): add $0x8,%eax
5792(3): mov %eax,(%r10)
5795(3): mov (%r11),%rax
5798(3): test %rax,%rax
579b(4): mov %rax,0x0(%r8,%r9,8)
579f(2): jz 0xc(%rip)
57a1(4): add $0x1,%r9
57a5(4): cmp $0xa,%r9
57a9(2): jnz 0xffffffd7(%rip)
57ab(5): call 0xfffffb75(%rip)
57b0(5): mov 0x58(%rsp),%rax
57b5(9): xor $0x28,%rax
57be(2): jnz 0x7(%rip)
57c0(4): add $0x68,%rsp
57c4(1): ret near (%rsp)
57c5(5): call 0xffffc06b(%rip)
57ca(4): mov 0x8(%r10),%r11
57ce(4): lea 0x8(%r11),%rax
57d2(4): mov %rax,0x8(%r10)
57d6(2): jmp 0xffffffbf(%rip)

"version_etc" :
57e0(1): push %rbp
57e1(1): push %rbx
57e2(6): mov $0x20,%r10d
57e8(3): xor %r11d,%r11d
57eb(7): sub $0xb8,%rsp
57f2(9): mov $0x28,%rax
57fb(5): mov %rax,0x78(%rsp)
5800(2): xor %eax,%eax
5802(8): lea 0xd0(%rsp),%rax
580a(8): mov %r8,0xa0(%rsp)
5812(8): lea 0xd0(%rsp),%rbx
581a(5): lea 0x20(%rsp),%r8
581f(8): mov %r9,0xa8(%rsp)
5827(8): mov $0x20,0x8(%rsp)
582f(5): mov %rax,0x10(%rsp)
5834(8): lea 0x80(%rsp),%rax
583c(3): xor %r9d,%r9d
583f(5): mov %rax,0x18(%rsp)
5844(3): mov %rax,%rbp
5847(9): nop 0x0(%rax,%rax,1)
5850(4): cmp $0x2f,%r10d
5854(2): jnbe 0x58(%rip)
5856(3): mov %r10d,%eax
5859(6): mov $0x1,%r11d
585f(4): add $0x8,%r10d
5863(3): add %rbp,%rax
5866(3): mov (%rax),%rax
5869(3): test %rax,%rax
586c(4): mov %rax,0x0(%r8,%r9,8)
5870(2): jz 0xc(%rip)
5872(4): add $0x1,%r9
5876(4): cmp $0xa,%r9
587a(2): jnz 0xffffffd6(%rip)
587c(3): test %r11b,%r11b
587f(2): jnz 0x26(%rip)
5881(5): call 0xfffffa9f(%rip)
5886(5): mov 0x78(%rsp),%rax
588b(9): xor $0x28,%rax
5894(2): jnz 0xc(%rip)
5896(7): add $0xb8,%rsp
589d(1): pop %rbx
589e(1): pop %rbp
589f(1): ret near (%rsp)
58a0(5): call 0xffffbf90(%rip)
58a5(5): mov %r10d,0x8(%rsp)
58aa(2): jmp 0xffffffd7(%rip)
58ac(3): mov %rbx,%rax
58af(4): add $0x8,%rbx
58b3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
58c0(1): push %rbx
58c1(7): lea 0x3b3f(%rip),%rsi
58c8(5): mov $0x5,%edx
58cd(2): xor %edi,%edi
58cf(5): call 0xffffbf21(%rip)
58d4(7): lea 0x3b41(%rip),%rdx
58db(3): mov %rax,%rsi
58de(5): mov $0x1,%edi
58e3(2): xor %eax,%eax
58e5(5): call 0xffffc0fb(%rip)
58ea(7): lea 0x3b41(%rip),%rsi
58f1(5): mov $0x5,%edx
58f6(2): xor %edi,%edi
58f8(5): call 0xffffbef8(%rip)
58fd(7): lea 0x329c(%rip),%rcx
5904(7): lea 0x2eb5(%rip),%rdx
590b(3): mov %rax,%rsi
590e(5): mov $0x1,%edi
5913(2): xor %eax,%eax
5915(5): call 0xffffc0cb(%rip)
591a(7): mov 0x206767(%rip),%rbx
5921(7): lea 0x3d38(%rip),%rsi
5928(2): xor %edi,%edi
592a(5): mov $0x5,%edx
592f(5): call 0xffffbec1(%rip)
5934(3): mov %rbx,%rsi
5937(3): mov %rax,%rdi
593a(1): pop %rbx
593b(5): jmp 0xffffbf95(%rip)

"xmalloc" :
5940(1): push %rbx
5941(3): mov %rdi,%rbx
5944(5): call 0xffffbfec(%rip)
5949(3): test %rax,%rax
594c(2): jnz 0x7(%rip)
594e(3): test %rbx,%rbx
5951(2): jnz 0x4(%rip)
5953(1): pop %rbx
5954(1): ret near (%rsp)
5955(5): call 0x23b(%rip)

"xnmalloc" :
5960(3): mov %rdi,%rax
5963(3): mul %rax,%rsi,%rdx
5966(3): mov %rax,%rdi
5969(3): seto %al
596c(3): test %rdi,%rdi
596f(2): js 0xc(%rip)
5971(3): movzx %al,%eax
5974(3): test %rax,%rax
5977(2): jnz 0x4(%rip)
5979(2): jmp 0xffffffc7(%rip)
597b(4): sub $0x8,%rsp
597f(5): call 0x211(%rip)

"xrealloc" :
59a0(3): test %rsi,%rsi
59a3(1): push %rbx
59a4(3): mov %rsi,%rbx
59a7(2): jnz 0x7(%rip)
59a9(3): test %rdi,%rdi
59ac(2): jnz 0x1c(%rip)
59ae(3): mov %rbx,%rsi
59b1(5): call 0xffffc00f(%rip)
59b6(3): test %rax,%rax
59b9(2): jnz 0x7(%rip)
59bb(3): test %rbx,%rbx
59be(2): jnz 0x13(%rip)
59c0(1): pop %rbx
59c1(1): ret near (%rsp)
59c2(6): nop 0x0(%rax,%rax,1)
59c8(5): call 0xffffbd68(%rip)
59cd(2): xor %eax,%eax
59cf(1): pop %rbx
59d0(1): ret near (%rsp)
59d1(5): call 0x1bf(%rip)

"xnrealloc" :
59e0(3): mov %rsi,%rax
59e3(3): mul %rax,%rdx,%rdx
59e6(3): mov %rax,%rsi
59e9(3): seto %al
59ec(3): test %rsi,%rsi
59ef(2): js 0xc(%rip)
59f1(3): movzx %al,%eax
59f4(3): test %rax,%rax
59f7(2): jnz 0x4(%rip)
59f9(2): jmp 0xffffffa7(%rip)
59fb(4): sub $0x8,%rsp
59ff(5): call 0x191(%rip)

"x2nrealloc" :
5a10(3): test %rdi,%rdi
5a13(3): mov %rdx,%r9
5a16(3): mov (%rsi),%rcx
5a19(2): jz 0x37(%rip)
5a1b(2): xor %edx,%edx
5a1d(a): mov $0x6148914691236517204,%rax
5a27(3): div %r9,%rax
5a2a(3): cmp %rcx,%rax
5a2d(2): jbe 0x3e(%rip)
5a2f(3): mov %rcx,%rax
5a32(3): shr $0x1,%rax
5a35(5): lea 0x1(%rax,%rcx,1),%rcx
5a3a(3): mov %rcx,(%rsi)
5a3d(4): imul %r9,%rcx
5a41(3): mov %rcx,%rsi
5a44(5): jmp 0xffffff5c(%rip)
5a49(7): nop 0x0(%rax)
5a50(3): test %rcx,%rcx
5a53(2): jz 0x25(%rip)
5a55(3): mov %rcx,%rax
5a58(3): mul %rax,%r9,%rdx
5a5b(3): seto %dl
5a5e(3): test %rax,%rax
5a61(3): movzx %dl,%edx
5a64(2): js 0x7(%rip)
5a66(3): test %rdx,%rdx
5a69(2): jz 0xffffffd1(%rip)
5a6b(4): sub $0x8,%rsp
5a6f(5): call 0x121(%rip)
5a74(4): nop 0x0(%rax)
5a78(2): xor %edx,%edx
5a7a(5): mov $0x80,%eax
5a7f(3): xor %r8d,%r8d
5a82(3): div %r9,%rax
5a85(3): test %rax,%rax
5a88(4): setz %r8b
5a8c(4): lea 0x0(%r8,%rax,1),%rcx
5a90(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5aa0(3): test %rdi,%rdi
5aa3(3): mov (%rsi),%rax
5aa6(2): jz 0x2a(%rip)
5aa8(a): mov $0x6148914691236517203,%rdx
5ab2(3): cmp %rdx,%rax
5ab5(2): jnbe 0x2c(%rip)
5ab7(3): mov %rax,%rdx
5aba(3): shr $0x1,%rdx
5abd(5): lea 0x1(%rdx,%rax,1),%rax
5ac2(3): mov %rax,(%rsi)
5ac5(3): mov %rax,%rsi
5ac8(5): jmp 0xfffffed8(%rip)
5acd(3): nop (%rax)
5ad0(3): test %rax,%rax
5ad3(5): mov $0x80,%edx
5ad8(4): cmove %rdx,%rax
5adc(3): test %rax,%rax
5adf(2): jns 0xffffffe3(%rip)
5ae1(4): sub $0x8,%rsp
5ae5(5): call 0xab(%rip)

"xzalloc" :
5af0(1): push %rbx
5af1(3): mov %rdi,%rbx
5af4(5): call 0xfffffe4c(%rip)
5af9(3): mov %rbx,%rdx
5afc(2): xor %esi,%esi
5afe(3): mov %rax,%rdi
5b01(1): pop %rbx
5b02(5): jmp 0xffffbd9e(%rip)

"xcalloc" :
5b10(3): mov %rdi,%rax
5b13(4): sub $0x8,%rsp
5b17(3): mul %rax,%rsi,%rdx
5b1a(3): seto %dl
5b1d(3): test %rax,%rax
5b20(2): js 0x19(%rip)
5b22(3): movzx %dl,%edx
5b25(3): test %rdx,%rdx
5b28(2): jnz 0x11(%rip)
5b2a(5): call 0xffffbdb6(%rip)
5b2f(3): test %rax,%rax
5b32(2): jz 0x7(%rip)
5b34(4): add $0x8,%rsp
5b38(1): ret near (%rsp)
5b39(5): call 0x57(%rip)

"xmemdup" :
5b40(1): push %rbp
5b41(1): push %rbx
5b42(3): mov %rdi,%rbp
5b45(3): mov %rsi,%rdi
5b48(3): mov %rsi,%rbx
5b4b(4): sub $0x8,%rsp
5b4f(5): call 0xfffffdf1(%rip)
5b54(4): add $0x8,%rsp
5b58(3): mov %rbx,%rdx
5b5b(3): mov %rbp,%rsi
5b5e(1): pop %rbx
5b5f(1): pop %rbp
5b60(3): mov %rax,%rdi
5b63(5): jmp 0xffffbd9d(%rip)

"xstrdup" :
5b70(1): push %rbx
5b71(3): mov %rdi,%rbx
5b74(5): call 0xffffbc9c(%rip)
5b79(3): mov %rbx,%rdi
5b7c(4): lea 0x1(%rax),%rsi
5b80(1): pop %rbx
5b81(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5b90(7): lea 0x3b78(%rip),%rsi
5b97(4): sub $0x8,%rsp
5b9b(5): mov $0x5,%edx
5ba0(2): xor %edi,%edi
5ba2(5): call 0xffffbc4e(%rip)
5ba7(6): mov 0x20646b(%rip),%edi
5bad(7): lea 0x30f5(%rip),%rdx
5bb4(3): mov %rax,%rcx
5bb7(2): xor %esi,%esi
5bb9(2): xor %eax,%eax
5bbb(5): call 0xffffbe55(%rip)
5bc0(5): call 0xffffbb80(%rip)

"rpl_mbrtowc" :
5bd0(2): push %r13
5bd2(2): push %r12
5bd4(3): mov %rsi,%r13
5bd7(1): push %rbp
5bd8(1): push %rbx
5bd9(3): mov %rdi,%rbx
5bdc(3): mov %rdx,%r12
5bdf(4): sub $0x18,%rsp
5be3(9): mov $0x28,%rax
5bec(5): mov %rax,0x8(%rsp)
5bf1(2): xor %eax,%eax
5bf3(5): lea 0x4(%rsp),%rax
5bf8(3): test %rdi,%rdi
5bfb(4): cmove %rax,%rbx
5bff(3): mov %rbx,%rdi
5c02(5): call 0xffffbc4e(%rip)
5c07(4): cmp $0xfffffffd,%rax
5c0b(3): mov %rax,%rbp
5c0e(2): jbe 0x22(%rip)
5c10(3): test %r12,%r12
5c13(2): jz 0x1d(%rip)
5c15(2): xor %edi,%edi
5c17(5): call 0x239(%rip)
5c1c(2): test %al,%al
5c1e(2): jnz 0x12(%rip)
5c20(5): movzx 0x0(%r13),%eax
5c25(5): mov $0x1,%ebp
5c2a(2): mov %eax,(%rbx)
5c2c(4): nop 0x0(%rax)
5c30(5): mov 0x8(%rsp),%rdx
5c35(9): xor $0x28,%rdx
5c3e(3): mov %rbp,%rax
5c41(2): jnz 0xd(%rip)
5c43(4): add $0x18,%rsp
5c47(1): pop %rbx
5c48(1): pop %rbp
5c49(2): pop %r12
5c4b(2): pop %r13
5c4d(1): ret near (%rsp)
5c4e(5): call 0xffffbbe2(%rip)

"rpl_vfprintf" :
5c60(2): push %r13
5c62(2): push %r12
5c64(3): mov %rsi,%rax
5c67(1): push %rbp
5c68(1): push %rbx
5c69(3): mov %rdi,%r13
5c6c(7): sub $0x7f8,%rsp
5c73(5): lea 0x10(%rsp),%r12
5c78(5): lea 0x8(%rsp),%rsi
5c7d(9): mov $0x7d0,0x8(%rsp)
5c86(9): mov $0x28,%rcx
5c8f(8): mov %rcx,0x7e8(%rsp)
5c97(2): xor %ecx,%ecx
5c99(3): mov %r12,%rdi
5c9c(3): mov %rdx,%rcx
5c9f(3): mov %rax,%rdx
5ca2(5): call 0x74e(%rip)
5ca7(3): test %rax,%rax
5caa(5): mov 0x8(%rsp),%rbx
5caf(6): jz 0x8f(%rip)
5cb5(3): mov %r13,%rcx
5cb8(3): mov %rbx,%rdx
5cbb(5): mov $0x1,%esi
5cc0(3): mov %rax,%rdi
5cc3(3): mov %rax,%rbp
5cc6(5): call 0xffffbdba(%rip)
5ccb(3): cmp %rbx,%rax
5cce(2): jb 0x42(%rip)
5cd0(3): cmp %r12,%rbp
5cd3(2): jz 0xa(%rip)
5cd5(3): mov %rbp,%rdi
5cd8(5): call 0xffffba58(%rip)
5cdd(7): cmp $0x7fffffff,%rbx
5ce4(2): jnbe 0x4f(%rip)
5ce6(8): mov 0x7e8(%rsp),%rcx
5cee(9): xor $0x28,%rcx
5cf7(2): mov %ebx,%eax
5cf9(2): jnz 0x54(%rip)
5cfb(7): add $0x7f8,%rsp
5d02(1): pop %rbx
5d03(1): pop %rbp
5d04(2): pop %r12
5d06(2): pop %r13
5d08(1): ret near (%rsp)
5d09(7): nop 0x0(%rax)
5d10(3): cmp %r12,%rbp
5d13(5): mov $0xffffffff,%ebx
5d18(2): jz 0xffffffce(%rip)
5d1a(5): call 0xffffba36(%rip)
5d1f(3): mov (%rax),%r13d
5d22(3): mov %rax,%r12
5d25(3): mov %rbp,%rdi
5d28(5): call 0xffffba08(%rip)
5d2d(4): mov %r13d,(%r12)
5d31(2): jmp 0xffffffb5(%rip)
5d33(5): call 0xffffba1d(%rip)
5d38(6): mov $0x4b,(%rax)
5d3e(3): mov %r13,%rdi
5d41(5): mov $0xffffffff,%ebx
5d46(5): call 0x69a(%rip)
5d4b(2): jmp 0xffffff9b(%rip)
5d4d(5): call 0xffffbae3(%rip)

"close_stream" :
5d60(2): push %r12
5d62(1): push %rbp
5d63(3): mov %rdi,%rbp
5d66(1): push %rbx
5d67(5): call 0xffffba19(%rip)
5d6c(3): mov 0x0(%rbp),%ebx
5d6f(3): mov %rbp,%rdi
5d72(3): mov %rax,%r12
5d75(5): call 0x54b(%rip)
5d7a(3): and $0x20,%ebx
5d7d(2): test %ebx,%ebx
5d7f(2): jnz 0x19(%rip)
5d81(2): test %eax,%eax
5d83(2): jz 0xc(%rip)
5d85(3): test %r12,%r12
5d88(5): mov $0xffffffff,%eax
5d8d(2): jz 0x3b(%rip)
5d8f(1): pop %rbx
5d90(1): pop %rbp
5d91(2): pop %r12
5d93(1): ret near (%rsp)
5d94(4): nop 0x0(%rax)
5d98(2): test %eax,%eax
5d9a(2): jnz 0x1e(%rip)
5d9c(5): call 0xffffb9b4(%rip)
5da1(6): mov $0x0,(%rax)
5da7(5): mov $0xffffffff,%eax
5dac(1): pop %rbx
5dad(1): pop %rbp
5dae(2): pop %r12
5db0(1): ret near (%rsp)
5db1(7): nop 0x0(%rax)
5db8(1): pop %rbx
5db9(5): mov $0xffffffff,%eax
5dbe(1): pop %rbp
5dbf(2): pop %r12
5dc1(1): ret near (%rsp)
5dc2(6): nop 0x0(%rax,%rax,1)
5dc8(5): call 0xffffb988(%rip)
5dcd(3): cmp $0x9,(%rax)
5dd0(1): pop %rbx
5dd1(1): pop %rbp
5dd2(2): pop %r12
5dd4(3): setnz %al
5dd7(3): movzx %al,%eax
5dda(2): neg %eax
5ddc(1): ret near (%rsp)

"open_safer" :
5de0(4): sub $0x58,%rsp
5de4(5): mov %rdx,0x30(%rsp)
5de9(2): xor %edx,%edx
5deb(9): mov $0x28,%rax
5df4(5): mov %rax,0x18(%rsp)
5df9(2): xor %eax,%eax
5dfb(4): test $0x40,%sil
5dff(2): jnz 0x29(%rip)
5e01(2): xor %eax,%eax
5e03(5): call 0xffffbc2d(%rip)
5e08(2): mov %eax,%edi
5e0a(5): call 0x476(%rip)
5e0f(5): mov 0x18(%rsp),%rcx
5e14(9): xor $0x28,%rcx
5e1d(2): jnz 0x2c(%rip)
5e1f(4): add $0x58,%rsp
5e23(1): ret near (%rsp)
5e24(4): nop 0x0(%rax)
5e28(5): lea 0x60(%rsp),%rax
5e2d(7): mov $0x10,(%rsp)
5e34(4): mov 0x30(%rsp),%edx
5e38(5): mov %rax,0x8(%rsp)
5e3d(5): lea 0x20(%rsp),%rax
5e42(5): mov %rax,0x10(%rsp)
5e47(2): jmp 0xffffffba(%rip)
5e49(5): call 0xffffb9e7(%rip)

"hard_locale" :
5e50(4): sub $0x8,%rsp
5e54(2): xor %esi,%esi
5e56(5): call 0xffffbb7a(%rip)
5e5b(3): mov %rax,%rdx
5e5e(5): mov $0x1,%eax
5e63(3): test %rdx,%rdx
5e66(2): jz 0x1f(%rip)
5e68(7): lea 0x38b1(%rip),%rdi
5e6f(5): mov $0x2,%ecx
5e74(3): mov %rdx,%rsi
5e77(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5e79(3): setnbe %cl
5e7c(3): sbb $0x0,%cl
5e7f(2): xor %eax,%eax
5e81(2): test %cl,%cl
5e83(2): jnz 0xd(%rip)
5e85(4): add $0x8,%rsp
5e89(1): ret near (%rsp)
5e8a(6): nop 0x0(%rax,%rax,1)
5e90(7): lea 0x388b(%rip),%rdi
5e97(5): mov $0x6,%ecx
5e9c(3): mov %rdx,%rsi
5e9f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5ea1(3): setnbe %al
5ea4(2): sbb $0x0,%al
5ea6(2): test %al,%al
5ea8(3): setnz %al
5eab(4): add $0x8,%rsp
5eaf(1): ret near (%rsp)

"locale_charset" :
5eb0(4): sub $0x8,%rsp
5eb4(5): mov $0xe,%edi
5eb9(5): call 0xffffba97(%rip)
5ebe(3): test %rax,%rax
5ec1(2): jz 0x1f(%rip)
5ec3(3): cmp $0x0,(%rax)
5ec6(7): lea 0x385b(%rip),%rdx
5ecd(4): cmove %rdx,%rax
5ed1(4): add $0x8,%rsp
5ed5(1): ret near (%rsp)
5ed6(a): nop 0x0(%rax,%rax,1)
5ee0(7): lea 0x3841(%rip),%rax
5ee7(4): add $0x8,%rsp
5eeb(1): ret near (%rsp)

"mkancesdirs" :
5ef0(2): push %r15
5ef2(2): push %r14
5ef4(3): mov %rdx,%r14
5ef7(2): push %r13
5ef9(2): push %r12
5efb(3): mov %rdi,%r13
5efe(1): push %rbp
5eff(1): push %rbx
5f00(3): mov %rdi,%rbp
5f03(3): mov %rdi,%rbx
5f06(3): xor %r12d,%r12d
5f09(4): sub $0x28,%rsp
5f0d(5): mov %rsi,0x8(%rsp)
5f12(5): mov %rcx,0x18(%rsp)
5f17(5): mov $0x0,0x14(%rsp)
5f1c(4): nop 0x0(%rax)
5f20(4): add $0x1,%rbx
5f24(4): movzx 0xffffffff(%rbx),%edx
5f28(2): test %dl,%dl
5f2a(6): jz 0x9e(%rip)
5f30(3): movzx (%rbx),%eax
5f33(2): cmp $0x2f,%al
5f35(6): jz 0xab(%rip)
5f3b(2): test %al,%al
5f3d(3): setnz %al
5f40(3): cmp $0x2f,%dl
5f43(4): setz %r15b
5f47(3): and %al,%r15b
5f4a(2): jz 0xffffffd6(%rip)
5f4c(3): test %r12,%r12
5f4f(2): jz 0xffffffd1(%rip)
5f51(3): mov %r12,%rax
5f54(3): sub %rbp,%rax
5f57(4): cmp $0x1,%rax
5f5b(6): jz 0x95(%rip)
5f61(4): cmp $0x2,%rax
5f65(5): mov $0x0,(%r12)
5f6a(6): jz 0xcb(%rip)
5f70(5): mov 0x18(%rsp),%rdx
5f75(3): mov %rbp,%rsi
5f78(3): mov %r13,%rdi
5f7b(3): call %r14
5f7e(2): test %eax,%eax
5f80(2): js 0x80(%rip)
5f82(5): mov %r15b,0x14(%rsp)
5f87(5): mov $0x1,%edx
5f8c(3): xor %r15d,%r15d
5f8f(5): mov 0x8(%rsp),%rdi
5f94(2): xor %ecx,%ecx
5f96(3): mov %rbp,%rsi
5f99(5): call 0xffffed67(%rip)
5f9e(3): cmp $0xff,%eax
5fa1(2): mov %eax,%ebp
5fa3(2): jz 0x75(%rip)
5fa5(2): test %eax,%eax
5fa7(5): mov $0x2f,(%r12)
5fac(2): jnz 0x6c(%rip)
5fae(3): mov %rbx,%rbp
5fb1(4): add $0x1,%rbx
5fb5(4): movzx 0xffffffff(%rbx),%edx
5fb9(2): test %dl,%dl
5fbb(6): jnz 0xffffff75(%rip)
5fc1(7): nop 0x0(%rax)
5fc8(3): mov %rbp,%rax
5fcb(3): sub %r13,%rax
5fce(4): add $0x28,%rsp
5fd2(1): pop %rbx
5fd3(1): pop %rbp
5fd4(2): pop %r12
5fd6(2): pop %r13
5fd8(2): pop %r14
5fda(2): pop %r15
5fdc(1): ret near (%rsp)
5fdd(3): nop (%rax)
5fe0(3): cmp $0x2f,%dl
5fe3(4): cmovne %rbx,%r12
5fe7(5): jmp 0xffffff39(%rip)
5fec(4): nop 0x0(%rax)
5ff0(4): cmp $0x2e,0x0(%rbp)
5ff4(2): jz 0xffffffba(%rip)
5ff6(5): mov $0x0,(%r12)
5ffb(5): jmp 0xffffff75(%rip)
6000(5): call 0xffffb750(%rip)
6005(4): mov 0x14(%rsp),%edx
6009(3): mov (%rax),%r15d
600c(3): and $0x1,%edx
600f(5): jmp 0xffffff80(%rip)
6014(4): nop 0x0(%rax)
6018(3): test %r15d,%r15d
601b(2): jz 0x15(%rip)
601d(5): call 0xffffb733(%rip)
6022(3): cmp $0x2,(%rax)
6025(2): jnz 0xb(%rip)
6027(3): mov %r15d,(%rax)
602a(6): nop 0x0(%rax,%rax,1)
6030(3): movsxd %ebp,%rax
6033(2): jmp 0xffffff9b(%rip)
6035(4): cmp $0x2e,0x0(%rbp)
6039(6): jnz 0xffffff37(%rip)
603f(4): cmp $0x2e,0x1(%rbp)
6043(6): jnz 0xffffff2d(%rip)
6049(3): xor %r15d,%r15d
604c(5): mov $0x0,0x14(%rsp)
6051(2): xor %edx,%edx
6053(5): jmp 0xffffff3c(%rip)

"dirchownmod" :
6060(2): push %r15
6062(2): push %r14
6064(3): mov %edx,%r15d
6067(2): push %r13
6069(2): push %r12
606b(3): mov %ecx,%r13d
606e(1): push %rbp
606f(1): push %rbx
6070(2): mov %edi,%ebp
6072(3): mov %rsi,%r12
6075(3): mov %r9d,%r14d
6078(7): sub $0xb8,%rsp
607f(9): mov $0x28,%rax
6088(8): mov %rax,0xa8(%rsp)
6090(2): xor %eax,%eax
6092(2): test %edi,%edi
6094(5): mov %r8d,0xc(%rsp)
6099(5): lea 0x10(%rsp),%rdx
609e(6): js 0xd2(%rip)
60a4(2): mov %edi,%esi
60a6(5): mov $0x1,%edi
60ab(5): call 0xffffb8b5(%rip)
60b0(2): test %eax,%eax
60b2(2): mov %eax,%ebx
60b4(5): mov 0xc(%rsp),%r8d
60b9(6): jnz 0x1a7(%rip)
60bf(4): mov 0x28(%rsp),%ecx
60c3(2): mov %ecx,%eax
60c5(5): and $0xf000,%eax
60ca(5): cmp $0x4000,%eax
60cf(2): jnz 0x51(%rip)
60d1(4): cmp $0xff,%r13d
60d5(6): jz 0xdb(%rip)
60db(5): cmp %r13d,0x2c(%rsp)
60e0(6): jz 0xd0(%rip)
60e6(2): test %ebp,%ebp
60e8(4): mov %ecx,0xc(%rsp)
60ec(3): mov %r8d,%edx
60ef(3): mov %r13d,%esi
60f2(6): jns 0x10e(%rip)
60f8(4): cmp $0xff,%r15d
60fc(3): mov %r12,%rdi
60ff(6): jz 0x141(%rip)
6105(5): call 0xffffb86b(%rip)
610a(4): mov 0xc(%rsp),%ecx
610e(2): mov %eax,%ebx
6110(2): test %ebx,%ebx
6112(2): jnz 0x32(%rip)
6114(5): jmp 0xfd(%rip)
6119(7): nop 0x0(%rax)
6120(5): call 0xffffb630(%rip)
6125(6): mov $0x14,%r13d
612b(3): mov %rax,%r12
612e(6): mov $0x14,(%rax)
6134(5): mov $0xffffffff,%ebx
6139(2): mov %ebp,%edi
613b(5): call 0xffffb775(%rip)
6140(4): mov %r13d,(%r12)
6144(8): mov 0xa8(%rsp),%rcx
614c(9): xor $0x28,%rcx
6155(2): mov %ebx,%eax
6157(6): jnz 0x119(%rip)
615d(7): add $0xb8,%rsp
6164(1): pop %rbx
6165(1): pop %rbp
6166(2): pop %r12
6168(2): pop %r13
616a(2): pop %r14
616c(2): pop %r15
616e(1): ret near (%rsp)
616f(1): nop 
6170(5): mov $0x1,%edi
6175(5): call 0xffffb7ab(%rip)
617a(2): test %eax,%eax
617c(2): mov %eax,%ebx
617e(5): mov 0xc(%rsp),%r8d
6183(2): jnz 0xffffffc1(%rip)
6185(4): mov 0x28(%rsp),%ecx
6189(2): mov %ecx,%eax
618b(5): and $0xf000,%eax
6190(5): cmp $0x4000,%eax
6195(6): jz 0xffffff3c(%rip)
619b(5): call 0xffffb5b5(%rip)
61a0(3): or $0xff,%ebx
61a3(6): mov $0x14,(%rax)
61a9(2): jmp 0xffffff9b(%rip)
61ab(5): nop 0x0(%rax,%rax,1)
61b0(4): cmp $0xff,%r8d
61b4(2): jz 0xd(%rip)
61b6(5): cmp %r8d,0x30(%rsp)
61bb(6): jnz 0xffffff2b(%rip)
61c1(2): xor %edx,%edx
61c3(2): mov %ecx,%eax
61c5(3): xor %r14d,%eax
61c8(2): or %edx,%eax
61ca(7): test %eax,0xf0(%rsp)
61d1(2): jz 0x4f(%rip)
61d3(7): mov 0xf0(%rsp),%esi
61da(6): and $0xfff,%ecx
61e0(2): not %esi
61e2(2): and %ecx,%esi
61e4(3): or %r14d,%esi
61e7(2): test %ebp,%ebp
61e9(2): jns 0x67(%rip)
61eb(3): mov %r12,%rdi
61ee(5): call 0xffffb812(%rip)
61f3(2): mov %eax,%ebx
61f5(5): jmp 0xffffff4f(%rip)
61fa(6): nop 0x0(%rax,%rax,1)
6200(2): mov %ebp,%edi
6202(5): call 0xffffb84e(%rip)
6207(2): test %eax,%eax
6209(2): mov %eax,%ebx
620b(4): mov 0xc(%rsp),%ecx
620f(2): jnz 0x51(%rip)
6211(3): test $0x49,%cl
6214(2): jz 0xffffffad(%rip)
6216(2): mov %ecx,%edx
6218(6): and $0xc00,%edx
621e(2): jmp 0xffffffa5(%rip)
6220(2): xor %ebx,%ebx
6222(2): test %ebp,%ebp
6224(6): js 0xffffff20(%rip)
622a(6): nop 0x0(%rax,%rax,1)
6230(2): mov %ebp,%edi
6232(5): call 0xffffb67e(%rip)
6237(2): mov %eax,%ebx
6239(5): jmp 0xffffff0b(%rip)
623e(2): nop 
6240(5): call 0xffffb770(%rip)
6245(4): mov 0xc(%rsp),%ecx
6249(2): mov %eax,%ebx
624b(5): jmp 0xfffffec5(%rip)
6250(2): mov %ebp,%edi
6252(5): call 0xffffb79e(%rip)
6257(2): test %eax,%eax
6259(2): mov %eax,%ebx
625b(2): jz 0xffffffd5(%rip)
625d(3): nop (%rax)
6260(5): call 0xffffb4f0(%rip)
6265(3): mov %rax,%r12
6268(3): mov (%rax),%r13d
626b(5): jmp 0xfffffece(%rip)
6270(5): call 0xffffb5c0(%rip)

"fd_safer" :
6280(2): push %r13
6282(2): push %r12
6284(1): push %rbp
6285(1): push %rbx
6286(2): mov %edi,%ebx
6288(4): sub $0x8,%rsp
628c(3): cmp $0x2,%edi
628f(2): jnbe 0x23(%rip)
6291(5): call 0x127f(%rip)
6296(3): mov %eax,%r12d
6299(5): call 0xffffb4b7(%rip)
629e(3): mov (%rax),%r13d
62a1(3): mov %rax,%rbp
62a4(2): mov %ebx,%edi
62a6(5): call 0xffffb60a(%rip)
62ab(3): mov %r12d,%ebx
62ae(4): mov %r13d,0x0(%rbp)
62b2(4): add $0x8,%rsp
62b6(2): mov %ebx,%eax
62b8(1): pop %rbx
62b9(1): pop %rbp
62ba(2): pop %r12
62bc(2): pop %r13
62be(1): ret near (%rsp)

"rpl_fclose" :
62c0(2): push %r12
62c2(1): push %rbp
62c3(1): push %rbx
62c4(3): mov %rdi,%rbx
62c7(5): call 0xffffb649(%rip)
62cc(2): test %eax,%eax
62ce(3): mov %rbx,%rdi
62d1(2): js 0x56(%rip)
62d3(5): call 0xffffb6ad(%rip)
62d8(2): test %eax,%eax
62da(2): jnz 0x2e(%rip)
62dc(3): mov %rbx,%rdi
62df(5): call 0x61(%rip)
62e4(2): test %eax,%eax
62e6(2): jz 0x3e(%rip)
62e8(5): call 0xffffb468(%rip)
62ed(3): mov (%rax),%r12d
62f0(3): mov %rbx,%rdi
62f3(3): mov %rax,%rbp
62f6(5): call 0xffffb4da(%rip)
62fb(3): test %r12d,%r12d
62fe(2): jnz 0x32(%rip)
6300(1): pop %rbx
6301(1): pop %rbp
6302(2): pop %r12
6304(1): ret near (%rsp)
6305(3): nop (%rax)
6308(3): mov %rbx,%rdi
630b(5): call 0xffffb605(%rip)
6310(2): xor %esi,%esi
6312(5): mov $0x1,%edx
6317(2): mov %eax,%edi
6319(5): call 0xffffb567(%rip)
631e(4): cmp $0xffffffff,%rax
6322(2): jnz 0xffffffba(%rip)
6324(3): mov %rbx,%rdi
6327(1): pop %rbx
6328(1): pop %rbp
6329(2): pop %r12
632b(5): jmp 0xffffb4a5(%rip)
6330(4): mov %r12d,0x0(%rbp)
6334(5): mov $0xffffffff,%eax
6339(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
6340(3): test %rdi,%rdi
6343(1): push %rbx
6344(3): mov %rdi,%rbx
6347(2): jz 0x13(%rip)
6349(5): call 0xffffb637(%rip)
634e(2): test %eax,%eax
6350(2): jz 0xa(%rip)
6352(6): test $0x100,(%rbx)
6358(2): jnz 0x10(%rip)
635a(3): mov %rbx,%rdi
635d(1): pop %rbx
635e(5): jmp 0xffffb5e2(%rip)
6363(5): nop 0x0(%rax,%rax,1)
6368(3): mov %rbx,%rdi
636b(5): mov $0x1,%edx
6370(2): xor %esi,%esi
6372(5): call 0xe(%rip)
6377(3): mov %rbx,%rdi
637a(1): pop %rbx
637b(5): jmp 0xffffb5c5(%rip)

"rpl_fseeko" :
6380(4): mov 0x8(%rdi),%rax
6384(4): cmp %rax,0x10(%rdi)
6388(2): jz 0x8(%rip)
638a(5): jmp 0xffffb6b6(%rip)
638f(1): nop 
6390(4): mov 0x20(%rdi),%rax
6394(4): cmp %rax,0x28(%rdi)
6398(2): jnz 0xfffffff2(%rip)
639a(5): cmp $0x0,0x48(%rdi)
639f(2): jnz 0xffffffeb(%rip)
63a1(2): push %r12
63a3(1): push %rbp
63a4(3): mov %edx,%r12d
63a7(1): push %rbx
63a8(3): mov %rsi,%rbp
63ab(3): mov %rdi,%rbx
63ae(5): call 0xffffb562(%rip)
63b3(3): mov %r12d,%edx
63b6(3): mov %rbp,%rsi
63b9(2): mov %eax,%edi
63bb(5): call 0xffffb4c5(%rip)
63c0(4): cmp $0xffffffff,%rax
63c4(2): jz 0xe(%rip)
63c6(3): and $0xef,(%rbx)
63c9(7): mov %rax,0x90(%rbx)
63d0(2): xor %eax,%eax
63d2(1): pop %rbx
63d3(1): pop %rbp
63d4(2): pop %r12
63d6(1): ret near (%rsp)

"fseterr" :
63e0(3): or $0x20,(%rdi)
63e3(1): ret near (%rsp)

"vasnprintf" :
63f0(1): push %rbp
63f1(3): mov %rsp,%rbp
63f4(2): push %r15
63f6(2): push %r14
63f8(2): push %r13
63fa(2): push %r12
63fc(7): lea 0xfffffc50(%rbp),%r14
6403(1): push %rbx
6404(3): mov %rdx,%rbx
6407(3): mov %rcx,%r12
640a(3): mov %r14,%rdx
640d(7): sub $0x408,%rsp
6414(7): mov %rsi,0xfffffbe8(%rbp)
641b(7): lea 0xfffffd40(%rbp),%rsi
6422(7): mov %rdi,0xfffffc18(%rbp)
6429(3): mov %rbx,%rdi
642c(7): mov %r14,0xfffffbf0(%rbp)
6433(9): mov $0x28,%rax
643c(4): mov %rax,0xffffffc8(%rbp)
6440(2): xor %eax,%eax
6442(7): mov %rsi,0xfffffbf8(%rbp)
6449(5): call 0x1557(%rip)
644e(2): test %eax,%eax
6450(6): js 0xe68(%rip)
6456(3): mov %r14,%rsi
6459(3): mov %r12,%rdi
645c(5): call 0x1344(%rip)
6461(2): test %eax,%eax
6463(6): js 0xebd(%rip)
6469(7): mov 0xfffffd50(%rbp),%rax
6470(7): mov $0xffffffff,%rdx
6477(4): add $0x7,%rax
647b(4): cmp $0x6,%rax
647f(4): cmovbe %rdx,%rax
6483(7): add 0xfffffd58(%rbp),%rax
648a(6): jb 0xa2e(%rip)
6490(3): mov %rax,%rdi
6493(3): xor %r8d,%r8d
6496(4): add $0x6,%rdi
649a(4): setb %r8b
649e(6): jb 0xa1a(%rip)
64a4(7): cmp $0xf9f,%rdi
64ab(6): jbe 0x14d(%rip)
64b1(4): cmp $0xffffffff,%rdi
64b5(7): mov %r8,0xfffffc38(%rbp)
64bc(6): jz 0x9fc(%rip)
64c2(5): call 0xffffb46e(%rip)
64c7(3): test %rax,%rax
64ca(7): mov %rax,0xfffffc28(%rbp)
64d1(6): jz 0x9e7(%rip)
64d7(7): mov 0xfffffc38(%rbp),%r8
64de(7): mov %rax,0xfffffbe0(%rbp)
64e5(3): xor %r12d,%r12d
64e8(8): cmp $0x0,0xfffffc18(%rbp)
64f0(2): jz 0xc(%rip)
64f2(7): mov 0xfffffbe8(%rbp),%rax
64f9(3): mov (%rax),%r12
64fc(7): mov 0xfffffd48(%rbp),%r13
6503(7): lea 0xfffffc44(%rbp),%rax
650a(7): mov 0xfffffc18(%rbp),%r15
6511(b): mov $0x0,0xfffffc00(%rbp)
651c(7): mov %rax,0xfffffc10(%rbp)
6523(3): mov %rbx,%rax
6526(3): mov %r8,%rbx
6529(4): mov 0x0(%r13),%rcx
652d(3): mov %rax,%r8
6530(3): cmp %r8,%rcx
6533(6): jz 0x96e(%rip)
6539(3): sub %r8,%rcx
653c(3): mov %rbx,%rax
653f(3): add %rcx,%rax
6542(3): mov %rax,%r14
6545(6): jnb 0xe3(%rip)
654b(4): cmp $0xffffffff,%r12
654f(6): jz 0xad1(%rip)
6555(5): call 0xffffb1fb(%rip)
655a(7): mov %rax,0xfffffc38(%rbp)
6561(7): cmp 0xfffffc18(%rbp),%r15
6568(2): jz 0xb(%rip)
656a(3): test %r15,%r15
656d(6): jnz 0xae3(%rip)
6573(7): mov 0xfffffbe0(%rbp),%rax
657a(3): test %rax,%rax
657d(2): jz 0xa(%rip)
657f(3): mov %rax,%rdi
6582(5): call 0xffffb1ae(%rip)
6587(7): mov 0xfffffbf8(%rbp),%rax
658e(7): mov 0xfffffd48(%rbp),%rdi
6595(4): add $0x20,%rax
6599(3): cmp %rax,%rdi
659c(2): jz 0x7(%rip)
659e(5): call 0xffffb192(%rip)
65a3(7): mov 0xfffffbf0(%rbp),%rax
65aa(7): mov 0xfffffc58(%rbp),%rdi
65b1(4): add $0x10,%rax
65b5(3): cmp %rax,%rdi
65b8(2): jz 0x7(%rip)
65ba(5): call 0xffffb176(%rip)
65bf(7): mov 0xfffffc38(%rbp),%rax
65c6(3): xor %r15d,%r15d
65c9(6): mov $0xc,(%rax)
65cf(4): mov 0xffffffc8(%rbp),%rdi
65d3(9): xor $0x28,%rdi
65dc(3): mov %r15,%rax
65df(6): jnz 0xf08(%rip)
65e5(4): lea 0xffffffd8(%rbp),%rsp
65e9(1): pop %rbx
65ea(2): pop %r12
65ec(2): pop %r13
65ee(2): pop %r14
65f0(2): pop %r15
65f2(1): pop %rbp
65f3(1): ret near (%rsp)
65f4(4): nop 0x0(%rax)
65f8(4): add $0x24,%rax
65fc(b): mov $0x0,0xfffffbe0(%rbp)
6607(4): and $0xfffffff0,%rax
660b(3): sub %rax,%rsp
660e(5): lea 0xf(%rsp),%rax
6613(4): and $0xfffffff0,%rax
6617(7): mov %rax,0xfffffc28(%rbp)
661e(5): jmp 0xfffffec7(%rip)
6623(5): nop 0x0(%rax,%rax,1)
6628(3): cmp %rax,%r12
662b(2): jnb 0x69(%rip)
662d(3): test %r12,%r12
6630(6): jnz 0x930(%rip)
6636(4): cmp $0xc,%rax
663a(6): jnbe 0x938(%rip)
6640(6): mov $0xc,%r12d
6646(7): cmp 0xfffffc18(%rbp),%r15
664d(3): setz %dl
6650(3): test %r15,%r15
6653(6): jz 0x945(%rip)
6659(2): test %dl,%dl
665b(6): jnz 0x93d(%rip)
6661(3): mov %r12,%rsi
6664(3): mov %r15,%rdi
6667(7): mov %r8,0xfffffc30(%rbp)
666e(7): mov %rcx,0xfffffc38(%rbp)
6675(5): call 0xffffb34b(%rip)
667a(3): test %rax,%rax
667d(7): mov 0xfffffc38(%rbp),%rcx
6684(7): mov 0xfffffc30(%rbp),%r8
668b(6): jz 0x9b0(%rip)
6691(3): mov %rax,%r15
6694(4): lea 0x0(%r15,%rbx,1),%rdi
6698(3): mov %rcx,%rdx
669b(3): mov %r8,%rsi
669e(5): call 0xffffb262(%rip)
66a3(7): mov 0xfffffc00(%rbp),%rax
66aa(7): cmp %rax,0xfffffd40(%rbp)
66b1(6): jz 0xcba(%rip)
66b7(5): movzx 0x48(%r13),%edx
66bc(4): mov 0x50(%r13),%rax
66c0(3): cmp $0x25,%dl
66c3(6): jz 0x795(%rip)
66c9(4): cmp $0xffffffff,%rax
66cd(6): jz 0xc49(%rip)
66d3(7): mov 0xfffffc58(%rbp),%r8
66da(4): shl/sal $0x5,%rax
66de(3): add %r8,%rax
66e1(3): cmp $0x6e,%dl
66e4(2): mov (%rax),%edi
66e6(6): mov %edi,0xfffffc30(%rbp)
66ec(6): jz 0x7e4(%rip)
66f2(4): mov 0x10(%r13),%eax
66f6(7): mov 0xfffffc28(%rbp),%rdi
66fd(2): test $0x1,%al
66ff(3): mov $0x25,(%rdi)
6702(4): lea 0x1(%rdi),%rbx
6706(2): jz 0x11(%rip)
6708(7): mov 0xfffffc28(%rbp),%rdi
670f(4): lea 0x2(%rdi),%rbx
6713(4): mov $0x27,0x1(%rdi)
6717(2): test $0x2,%al
6719(2): jz 0x9(%rip)
671b(3): mov $0x2d,(%rbx)
671e(4): add $0x1,%rbx
6722(2): test $0x4,%al
6724(2): jz 0x9(%rip)
6726(3): mov $0x2b,(%rbx)
6729(4): add $0x1,%rbx
672d(2): test $0x8,%al
672f(2): jz 0x9(%rip)
6731(3): mov $0x20,(%rbx)
6734(4): add $0x1,%rbx
6738(2): test $0x10,%al
673a(2): jz 0x9(%rip)
673c(3): mov $0x23,(%rbx)
673f(4): add $0x1,%rbx
6743(2): test $0x40,%al
6745(2): jz 0x9(%rip)
6747(3): mov $0x49,(%rbx)
674a(4): add $0x1,%rbx
674e(2): test $0x20,%al
6750(2): jz 0x9(%rip)
6752(3): mov $0x30,(%rbx)
6755(4): add $0x1,%rbx
6759(4): mov 0x18(%r13),%rsi
675d(4): mov 0x20(%r13),%rdx
6761(3): cmp %rdx,%rsi
6764(2): jz 0x32(%rip)
6766(3): mov %rdx,%rcx
6769(3): mov %rbx,%rdi
676c(7): mov %r8,0xfffffc20(%rbp)
6773(3): sub %rsi,%rcx
6776(3): mov %rcx,%rdx
6779(7): mov %rcx,0xfffffc38(%rbp)
6780(5): call 0xffffb180(%rip)
6785(7): mov 0xfffffc38(%rbp),%rcx
678c(7): mov 0xfffffc20(%rbp),%r8
6793(3): add %rcx,%rbx
6796(4): mov 0x30(%r13),%rsi
679a(4): mov 0x38(%r13),%rdx
679e(3): cmp %rdx,%rsi
67a1(2): jz 0x32(%rip)
67a3(3): mov %rdx,%rcx
67a6(3): mov %rbx,%rdi
67a9(7): mov %r8,0xfffffc20(%rbp)
67b0(3): sub %rsi,%rcx
67b3(3): mov %rcx,%rdx
67b6(7): mov %rcx,0xfffffc38(%rbp)
67bd(5): call 0xffffb143(%rip)
67c2(7): mov 0xfffffc38(%rbp),%rcx
67c9(7): mov 0xfffffc20(%rbp),%r8
67d0(3): add %rcx,%rbx
67d3(6): mov 0xfffffc30(%rbp),%edi
67d9(3): cmp $0x10,%edi
67dc(2): jnbe 0x2f(%rip)
67de(5): mov $0x1,%eax
67e3(2): mov %edi,%ecx
67e5(3): shl/sal %cl,%rax
67e8(5): test $0x14180,%eax
67ed(2): jnz 0x17(%rip)
67ef(3): test $0x10,%ah
67f2(6): jnz 0x95e(%rip)
67f8(3): test $0x6,%ah
67fb(2): jz 0x10(%rip)
67fd(3): mov $0x6c,(%rbx)
6800(4): add $0x1,%rbx
6804(3): mov $0x6c,(%rbx)
6807(4): add $0x1,%rbx
680b(5): movzx 0x48(%r13),%eax
6810(4): mov $0x0,0x1(%rbx)
6814(2): mov %al,(%rbx)
6816(4): mov 0x28(%r13),%rax
681a(4): cmp $0xffffffff,%rax
681e(6): jz 0x732(%rip)
6824(4): shl/sal $0x5,%rax
6828(3): add %r8,%rax
682b(3): cmp $0x5,(%rax)
682e(6): jnz 0xae8(%rip)
6834(3): mov 0x10(%rax),%eax
6837(a): mov $0x1,0xfffffc20(%rbp)
6841(6): mov %eax,0xfffffc48(%rbp)
6847(4): mov 0x40(%r13),%rax
684b(4): cmp $0xffffffff,%rax
684f(2): jz 0x2d(%rip)
6851(4): shl/sal $0x5,%rax
6855(3): add %rax,%r8
6858(4): cmp $0x5,(%r8)
685c(6): jnz 0xaba(%rip)
6862(6): mov 0xfffffc20(%rbp),%eax
6868(4): mov 0x10(%r8),%edx
686c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
6873(3): lea 0x1(%rax),%eax
6876(6): mov %eax,0xfffffc20(%rbp)
687c(3): mov %r14,%rax
687f(2): xor %edx,%edx
6881(4): add $0x2,%rax
6885(6): jb 0xc67(%rip)
688b(3): cmp %rax,%r12
688e(2): jnb 0x4d(%rip)
6890(3): test %r12,%r12
6893(6): jnz 0x825(%rip)
6899(4): cmp $0xc,%rax
689d(6): jnbe 0x833(%rip)
68a3(6): mov $0xc,%r12d
68a9(7): cmp 0xfffffc18(%rbp),%r15
68b0(3): setz %dl
68b3(3): test %r15,%r15
68b6(6): jz 0x84a(%rip)
68bc(2): test %dl,%dl
68be(6): jnz 0x842(%rip)
68c4(3): mov %r12,%rsi
68c7(3): mov %r15,%rdi
68ca(5): call 0xffffb0f6(%rip)
68cf(3): test %rax,%rax
68d2(6): jz 0xfffffc83(%rip)
68d8(3): mov %rax,%r15
68db(5): mov $0x0,0x0(%r15,%r14,1)
68e0(5): call 0xffffae70(%rip)
68e5(7): mov %rax,0xfffffc38(%rbp)
68ec(2): mov (%rax),%eax
68ee(7): mov %rbx,0xfffffc08(%rbp)
68f5(6): mov %eax,0xfffffbdc(%rbp)
68fb(5): nop 0x0(%rax,%rax,1)
6900(7): mov 0xfffffc38(%rbp),%rax
6907(3): mov %r12,%rbx
690a(6): mov $0x7fffffff,%r10d
6910(3): sub %r14,%rbx
6913(a): mov $0xffffffff,0xfffffc44(%rbp)
691d(7): cmp $0x7fffffff,%rbx
6924(6): mov $0x0,(%rax)
692a(6): mov 0xfffffc30(%rbp),%eax
6930(4): cmovbe %rbx,%r10
6934(3): cmp $0x11,%eax
6937(6): jnbe 0x9df(%rip)
693d(7): lea 0x2dec(%rip),%rsi
6944(4): movsxd 0x0(%rsi,%rax,4),%rax
6948(3): add %rsi,%rax
694b(2): jmp %rax
694d(3): nop (%rax)
6950(4): mov 0x50(%r13),%rax
6954(4): lea 0x0(%r15,%r14,1),%rdi
6958(4): shl/sal $0x5,%rax
695c(7): add 0xfffffc58(%rbp),%rax
6963(4): mov 0x10(%rax),%r9
6967(6): mov 0xfffffc20(%rbp),%eax
696d(3): cmp $0x1,%eax
6970(6): jz 0x4c8(%rip)
6976(3): cmp $0x2,%eax
6979(6): jz 0x4a7(%rip)
697f(4): sub $0x8,%rsp
6983(6): push 0xfffffc10(%rbp)
6989(7): mov 0xfffffc28(%rbp),%r8
6990(3): mov %r10,%rsi
6993(7): mov $0xffffffff,%rcx
699a(5): mov $0x1,%edx
699f(2): xor %eax,%eax
69a1(7): mov %r10,0xfffffbd0(%rbp)
69a8(5): call 0xffffad68(%rip)
69ad(1): pop %rsi
69ae(1): pop %rdi
69af(7): mov 0xfffffbd0(%rbp),%r10
69b6(6): mov 0xfffffc44(%rbp),%ecx
69bc(2): test %ecx,%ecx
69be(6): js 0x13e(%rip)
69c4(3): movsxd %ecx,%rdx
69c7(3): cmp %r10,%rdx
69ca(2): jnb 0x10(%rip)
69cc(3): add %r15,%rdx
69cf(5): cmp $0x0,0x0(%rdx,%r14,1)
69d4(6): jnz 0x942(%rip)
69da(2): cmp %eax,%ecx
69dc(2): jnl 0xa(%rip)
69de(6): mov %eax,0xfffffc44(%rbp)
69e4(2): mov %eax,%ecx
69e6(3): lea 0x1(%rcx),%eax
69e9(3): cmp %r10,%rax
69ec(6): jb 0x834(%rip)
69f2(7): cmp $0x7ffffffe,%rbx
69f9(6): jnbe 0x847(%rip)
69ff(4): lea 0x0(%r12,%r12,1),%rsi
6a03(3): lea 0x2(%rcx),%edx
6a06(3): test %r12,%r12
6a09(7): mov $0xffffffff,%rax
6a10(4): cmovns %rsi,%rax
6a14(3): add %r14,%rdx
6a17(6): jb 0xac1(%rip)
6a1d(3): cmp %rdx,%rax
6a20(4): cmovnae %rdx,%rax
6a24(3): cmp %rax,%r12
6a27(6): jnb 0xfffffed9(%rip)
6a2d(3): test %r12,%r12
6a30(6): js 0xfffffb31(%rip)
6a36(3): cmp %rax,%rsi
6a39(3): mov %rsi,%r12
6a3c(2): jnb 0xf(%rip)
6a3e(4): cmp $0xffffffff,%rax
6a42(6): jz 0xfffffb1f(%rip)
6a48(3): mov %rax,%r12
6a4b(7): cmp 0xfffffc18(%rbp),%r15
6a52(3): setz %bl
6a55(3): test %r15,%r15
6a58(6): jz 0x388(%rip)
6a5e(2): test %bl,%bl
6a60(6): jnz 0x380(%rip)
6a66(3): mov %r12,%rsi
6a69(3): mov %r15,%rdi
6a6c(5): call 0xffffaf54(%rip)
6a71(3): test %rax,%rax
6a74(6): jz 0xfffffaed(%rip)
6a7a(3): mov %rax,%r15
6a7d(5): jmp 0xfffffe83(%rip)
6a82(6): nop 0x0(%rax,%rax,1)
6a88(4): mov 0x50(%r13),%rax
6a8c(4): lea 0x0(%r15,%r14,1),%rdi
6a90(4): shl/sal $0x5,%rax
6a94(7): add 0xfffffc58(%rbp),%rax
6a9b(4): mov 0x10(%rax),%r9d
6a9f(6): mov 0xfffffc20(%rbp),%eax
6aa5(3): cmp $0x1,%eax
6aa8(6): jz 0x238(%rip)
6aae(3): cmp $0x2,%eax
6ab1(6): jz 0x277(%rip)
6ab7(4): sub $0x8,%rsp
6abb(6): push 0xfffffc10(%rbp)
6ac1(7): mov 0xfffffc28(%rbp),%r8
6ac8(7): mov $0xffffffff,%rcx
6acf(5): mov $0x1,%edx
6ad4(3): mov %r10,%rsi
6ad7(2): xor %eax,%eax
6ad9(7): mov %r10,0xfffffbd0(%rbp)
6ae0(5): call 0xffffac30(%rip)
6ae5(1): pop %rdx
6ae6(1): pop %rcx
6ae7(6): mov 0xfffffc44(%rbp),%ecx
6aed(7): mov 0xfffffbd0(%rbp),%r10
6af4(2): test %ecx,%ecx
6af6(6): jns 0xfffffece(%rip)
6afc(7): mov 0xfffffc08(%rbp),%rdi
6b03(4): cmp $0x0,0x1(%rdi)
6b07(6): jnz 0x341(%rip)
6b0d(2): test %eax,%eax
6b0f(6): jns 0xfffffecf(%rip)
6b15(7): mov 0xfffffc38(%rbp),%rax
6b1c(2): mov (%rax),%ebx
6b1e(2): test %ebx,%ebx
6b20(2): jnz 0x20(%rip)
6b22(5): movzx 0x48(%r13),%eax
6b27(5): mov $0x16,%ebx
6b2c(3): and $0xef,%eax
6b2f(2): cmp $0x63,%al
6b31(5): mov $0x54,%eax
6b36(3): cmove %eax,%ebx
6b39(7): nop 0x0(%rax)
6b40(7): cmp 0xfffffc18(%rbp),%r15
6b47(2): jz 0xb(%rip)
6b49(3): test %r15,%r15
6b4c(6): jnz 0x7b0(%rip)
6b52(7): mov 0xfffffbe0(%rbp),%rax
6b59(3): test %rax,%rax
6b5c(2): jz 0xa(%rip)
6b5e(3): mov %rax,%rdi
6b61(5): call 0xffffabcf(%rip)
6b66(7): mov 0xfffffbf8(%rbp),%rax
6b6d(7): mov 0xfffffd48(%rbp),%rdi
6b74(4): add $0x20,%rax
6b78(3): cmp %rax,%rdi
6b7b(2): jz 0x7(%rip)
6b7d(5): call 0xffffabb3(%rip)
6b82(7): mov 0xfffffbf0(%rbp),%rax
6b89(7): mov 0xfffffc58(%rbp),%rdi
6b90(4): add $0x10,%rax
6b94(3): cmp %rax,%rdi
6b97(2): jz 0x7(%rip)
6b99(5): call 0xffffab97(%rip)
6b9e(7): mov 0xfffffc38(%rbp),%rax
6ba5(3): xor %r15d,%r15d
6ba8(2): mov %ebx,(%rax)
6baa(5): jmp 0xfffffa25(%rip)
6baf(1): nop 
6bb0(4): mov 0x50(%r13),%rax
6bb4(4): lea 0x0(%r15,%r14,1),%rdi
6bb8(4): shl/sal $0x5,%rax
6bbc(7): add 0xfffffc58(%rbp),%rax
6bc3(3): fld 0x10(%rax),%st0
6bc6(6): mov 0xfffffc20(%rbp),%eax
6bcc(3): cmp $0x1,%eax
6bcf(6): jz 0x631(%rip)
6bd5(3): cmp $0x2,%eax
6bd8(6): jnz 0x4c8(%rip)
6bde(6): mov 0xfffffc4c(%rbp),%eax
6be4(4): sub $0x8,%rsp
6be8(6): push 0xfffffc10(%rbp)
6bee(7): mov 0xfffffc48(%rbp),%r9d
6bf5(7): mov 0xfffffc28(%rbp),%r8
6bfc(3): mov %r10,%rsi
6bff(4): sub $0x18,%rsp
6c03(7): mov $0xffffffff,%rcx
6c0a(5): mov $0x1,%edx
6c0f(4): fstp %st0,0x8(%rsp)
6c13(1): push %rax
6c14(2): xor %eax,%eax
6c16(7): mov %r10,0xfffffbd0(%rbp)
6c1d(5): call 0xffffaaf3(%rip)
6c22(4): add $0x30,%rsp
6c26(7): mov 0xfffffbd0(%rbp),%r10
6c2d(5): jmp 0xfffffd89(%rip)
6c32(6): nop 0x0(%rax,%rax,1)
6c38(4): mov 0x50(%r13),%rax
6c3c(4): lea 0x0(%r15,%r14,1),%rdi
6c40(4): shl/sal $0x5,%rax
6c44(7): add 0xfffffc58(%rbp),%rax
6c4b(5): movsd 0x10(%rax),%xmm0
6c50(6): mov 0xfffffc20(%rbp),%eax
6c56(3): cmp $0x1,%eax
6c59(6): jz 0x597(%rip)
6c5f(3): cmp $0x2,%eax
6c62(6): jnz 0x3fe(%rip)
6c68(6): mov 0xfffffc4c(%rbp),%eax
6c6e(6): push 0xfffffc10(%rbp)
6c74(1): push %rax
6c75(7): mov 0xfffffc48(%rbp),%r9d
6c7c(7): mov 0xfffffc28(%rbp),%r8
6c83(3): mov %r10,%rsi
6c86(7): mov $0xffffffff,%rcx
6c8d(5): mov $0x1,%edx
6c92(5): mov $0x1,%eax
6c97(7): mov %r10,0xfffffbd0(%rbp)
6c9e(5): call 0xffffaa72(%rip)
6ca3(2): pop %r8
6ca5(7): mov 0xfffffbd0(%rbp),%r10
6cac(2): pop %r9
6cae(5): jmp 0xfffffd08(%rip)
6cb3(5): nop 0x0(%rax,%rax,1)
6cb8(4): mov 0x50(%r13),%rax
6cbc(4): lea 0x0(%r15,%r14,1),%rdi
6cc0(4): shl/sal $0x5,%rax
6cc4(7): add 0xfffffc58(%rbp),%rax
6ccb(5): movzx 0x10(%rax),%r9d
6cd0(6): mov 0xfffffc20(%rbp),%eax
6cd6(3): cmp $0x1,%eax
6cd9(6): jnz 0xfffffdd5(%rip)
6cdf(1): nop 
6ce0(6): push 0xfffffc10(%rbp)
6ce6(2): push %r9
6ce8(7): mov 0xfffffc48(%rbp),%r9d
6cef(5): jmp 0xfffffdd2(%rip)
6cf4(4): nop 0x0(%rax)
6cf8(4): mov 0x50(%r13),%rax
6cfc(4): lea 0x0(%r15,%r14,1),%rdi
6d00(4): shl/sal $0x5,%rax
6d04(7): add 0xfffffc58(%rbp),%rax
6d0b(5): movsx 0x10(%rax),%r9d
6d10(6): mov 0xfffffc20(%rbp),%eax
6d16(3): cmp $0x1,%eax
6d19(2): jz 0xffffffc7(%rip)
6d1b(3): cmp $0x2,%eax
6d1e(6): jnz 0xfffffd99(%rip)
6d24(4): nop 0x0(%rax)
6d28(4): sub $0x8,%rsp
6d2c(6): push 0xfffffc10(%rbp)
6d32(2): push %r9
6d34(6): mov 0xfffffc4c(%rbp),%eax
6d3a(1): push %rax
6d3b(7): mov 0xfffffc48(%rbp),%r9d
6d42(7): mov 0xfffffc28(%rbp),%r8
6d49(3): mov %r10,%rsi
6d4c(7): mov $0xffffffff,%rcx
6d53(5): mov $0x1,%edx
6d58(2): xor %eax,%eax
6d5a(7): mov %r10,0xfffffbd0(%rbp)
6d61(5): call 0xffffa9af(%rip)
6d66(4): add $0x20,%rsp
6d6a(7): mov 0xfffffbd0(%rbp),%r10
6d71(5): jmp 0xfffffc45(%rip)
6d76(a): nop 0x0(%rax,%rax,1)
6d80(4): mov 0x50(%r13),%rax
6d84(4): lea 0x0(%r15,%r14,1),%rdi
6d88(4): shl/sal $0x5,%rax
6d8c(7): add 0xfffffc58(%rbp),%rax
6d93(5): movzx 0x10(%rax),%r9d
6d98(6): mov 0xfffffc20(%rbp),%eax
6d9e(3): cmp $0x1,%eax
6da1(6): jnz 0xfffffd0d(%rip)
6da7(5): jmp 0xffffff39(%rip)
6dac(4): nop 0x0(%rax)
6db0(4): mov 0x50(%r13),%rax
6db4(4): lea 0x0(%r15,%r14,1),%rdi
6db8(4): shl/sal $0x5,%rax
6dbc(7): add 0xfffffc58(%rbp),%rax
6dc3(5): movsx 0x10(%rax),%r9d
6dc8(6): mov 0xfffffc20(%rbp),%eax
6dce(3): cmp $0x1,%eax
6dd1(6): jnz 0xfffffcdd(%rip)
6dd7(5): jmp 0xffffff09(%rip)
6ddc(4): nop 0x0(%rax)
6de0(3): mov %r12,%rdi
6de3(5): call 0xffffab4d(%rip)
6de8(3): test %rax,%rax
6deb(3): mov %rax,%rcx
6dee(6): jz 0xfffff773(%rip)
6df4(3): test %r14,%r14
6df7(6): jz 0xb9(%rip)
6dfd(2): test %bl,%bl
6dff(6): jz 0xb1(%rip)
6e05(3): mov %r15,%rsi
6e08(3): mov %r14,%rdx
6e0b(3): mov %rax,%rdi
6e0e(5): call 0xffffaaf2(%rip)
6e13(3): mov %rax,%r15
6e16(5): jmp 0xfffffaea(%rip)
6e1b(5): nop 0x0(%rax,%rax,1)
6e20(4): sub $0x8,%rsp
6e24(6): push 0xfffffc10(%rbp)
6e2a(2): push %r9
6e2c(5): jmp 0xffffff08(%rip)
6e31(7): nop 0x0(%rax)
6e38(6): push 0xfffffc10(%rbp)
6e3e(2): push %r9
6e40(5): jmp 0xfffffea8(%rip)
6e45(3): nop (%rax)
6e48(4): mov $0x0,0x1(%rdi)
6e4c(5): jmp 0xfffffab4(%rip)
6e51(7): nop 0x0(%rax)
6e58(4): cmp $0xffffffff,%rax
6e5c(6): jnz 0x4ba(%rip)
6e62(3): mov %r14,%rax
6e65(4): add $0x1,%rax
6e69(3): mov %rax,%rbx
6e6c(6): jnb 0x8c(%rip)
6e72(4): cmp $0xffffffff,%r12
6e76(6): jnz 0xfffff6df(%rip)
6e7c(3): mov %r12,%rbx
6e7f(5): mov $0x25,0x0(%r15,%r14,1)
6e84(4): mov 0x8(%r13),%r8
6e88(4): add $0x58,%r13
6e8c(4): mov 0x0(%r13),%rcx
6e90(8): add $0x1,0xfffffc00(%rbp)
6e98(3): cmp %r8,%rcx
6e9b(6): jnz 0xfffff69e(%rip)
6ea1(3): mov %rbx,%r14
6ea4(5): jmp 0xfffff7ff(%rip)
6ea9(7): nop 0x0(%rax)
6eb0(3): mov %rcx,%r15
6eb3(5): jmp 0xfffffa4d(%rip)
6eb8(5): call 0xffffa898(%rip)
6ebd(7): mov %rax,0xfffffc38(%rbp)
6ec4(5): jmp 0xfffff6c3(%rip)
6ec9(7): nop 0x0(%rax)
6ed0(2): mov %edi,%edx
6ed2(3): sub $0x12,%edx
6ed5(3): cmp $0x4,%edx
6ed8(6): jnbe 0x43e(%rip)
6ede(7): lea 0x2893(%rip),%rdi
6ee5(4): mov 0x10(%rax),%rax
6ee9(4): movsxd 0x0(%rdi,%rdx,4),%rdx
6eed(3): add %rdi,%rdx
6ef0(2): jmp %rdx
6ef2(6): nop 0x0(%rax,%rax,1)
6ef8(3): cmp %rax,%r12
6efb(2): jnb 0xffffff84(%rip)
6efd(3): test %r12,%r12
6f00(6): jnz 0x3d0(%rip)
6f06(4): cmp $0xc,%rax
6f0a(6): jnbe 0x3d8(%rip)
6f10(6): mov $0xc,%r12d
6f16(7): cmp 0xfffffc18(%rbp),%r15
6f1d(3): setz %dl
6f20(3): test %r15,%r15
6f23(6): jz 0x26d(%rip)
6f29(2): test %dl,%dl
6f2b(6): jnz 0x265(%rip)
6f31(3): mov %r12,%rsi
6f34(3): mov %r15,%rdi
6f37(5): call 0xffffaa89(%rip)
6f3c(3): test %rax,%rax
6f3f(6): jz 0xfc(%rip)
6f45(3): mov %rax,%r15
6f48(5): jmp 0xffffff37(%rip)
6f4d(3): nop (%rax)
6f50(a): mov $0x0,0xfffffc20(%rbp)
6f5a(5): jmp 0xfffff8ed(%rip)
6f5f(1): nop 
6f60(6): js 0xfffff5f5(%rip)
6f66(3): add %r12,%r12
6f69(3): cmp %rax,%r12
6f6c(6): jnb 0xfffff6da(%rip)
6f72(4): cmp $0xffffffff,%rax
6f76(6): jz 0xfffff5df(%rip)
6f7c(7): cmp 0xfffffc18(%rbp),%r15
6f83(3): mov %rax,%r12
6f86(3): setz %dl
6f89(3): test %r15,%r15
6f8c(6): jnz 0xfffff6cd(%rip)
6f92(6): nop 0x0(%rax,%rax,1)
6f98(3): mov %r12,%rdi
6f9b(7): mov %r8,0xfffffc20(%rbp)
6fa2(6): mov %dl,0xfffffc30(%rbp)
6fa8(7): mov %rcx,0xfffffc38(%rbp)
6faf(5): call 0xffffa981(%rip)
6fb4(3): test %rax,%rax
6fb7(3): mov %rax,%r9
6fba(7): mov 0xfffffc38(%rbp),%rcx
6fc1(7): movzx 0xfffffc30(%rbp),%edx
6fc8(7): mov 0xfffffc20(%rbp),%r8
6fcf(6): jz 0xfffff586(%rip)
6fd5(3): test %rbx,%rbx
6fd8(6): jz 0x208(%rip)
6fde(2): test %dl,%dl
6fe0(6): jz 0x200(%rip)
6fe6(3): mov %r15,%rsi
6fe9(3): mov %rbx,%rdx
6fec(3): mov %rax,%rdi
6fef(7): mov %r8,0xfffffc30(%rbp)
6ff6(7): mov %rcx,0xfffffc38(%rbp)
6ffd(5): call 0xffffa903(%rip)
7002(7): mov 0xfffffc38(%rbp),%rcx
7009(3): mov %rax,%r15
700c(7): mov 0xfffffc30(%rbp),%r8
7013(5): jmp 0xfffff681(%rip)
7018(8): nop 0x0(%rax,%rax,1)
7020(3): mov %r12,%r14
7023(5): jmp 0xfffff671(%rip)
7028(8): nop 0x0(%rax,%rax,1)
7030(3): mov %r14,(%rax)
7033(3): mov %r14,%rbx
7036(5): jmp 0xfffffe4e(%rip)
703b(5): call 0xffffa715(%rip)
7040(7): mov %rax,0xfffffc38(%rbp)
7047(9): nop 0x0(%rax,%rax,1)
7050(3): mov %r15,%rdi
7053(5): call 0xffffa6dd(%rip)
7058(5): jmp 0xfffff51b(%rip)
705d(3): nop (%rax)
7060(7): mov 0xfffffc10(%rbp),%r9
7067(7): mov 0xfffffc28(%rbp),%r8
706e(3): mov %r10,%rsi
7071(7): mov $0xffffffff,%rcx
7078(5): mov $0x1,%edx
707d(5): mov $0x1,%eax
7082(7): mov %r10,0xfffffbd0(%rbp)
7089(5): call 0xffffa687(%rip)
708e(7): mov 0xfffffbd0(%rbp),%r10
7095(5): jmp 0xfffff921(%rip)
709a(6): nop 0x0(%rax,%rax,1)
70a0(4): sub $0x10,%rsp
70a4(7): mov 0xfffffc10(%rbp),%r9
70ab(3): fstp %st0,(%rsp)
70ae(5): jmp 0xfffff8db(%rip)
70b3(5): nop 0x0(%rax,%rax,1)
70b8(6): js 0xfffff49d(%rip)
70be(3): add %r12,%r12
70c1(3): cmp %rax,%r12
70c4(6): jnb 0xfffff7e5(%rip)
70ca(6): nop 0x0(%rax,%rax,1)
70d0(3): test %rdx,%rdx
70d3(6): jnz 0xfffff482(%rip)
70d9(4): cmp $0xffffffff,%rax
70dd(6): jz 0xfffff478(%rip)
70e3(7): cmp 0xfffffc18(%rbp),%r15
70ea(3): mov %rax,%r12
70ed(3): setz %dl
70f0(3): test %r15,%r15
70f3(6): jnz 0xfffff7c9(%rip)
70f9(7): nop 0x0(%rax)
7100(3): mov %r12,%rdi
7103(6): mov %dl,0xfffffc38(%rbp)
7109(5): call 0xffffa827(%rip)
710e(3): test %rax,%rax
7111(3): mov %rax,%rcx
7114(7): movzx 0xfffffc38(%rbp),%edx
711b(6): jz 0xfffff43a(%rip)
7121(3): test %r14,%r14
7124(6): jz 0x19c(%rip)
712a(2): test %dl,%dl
712c(6): jz 0x194(%rip)
7132(3): mov %r15,%rsi
7135(3): mov %r14,%rdx
7138(3): mov %rax,%rdi
713b(5): call 0xffffa7c5(%rip)
7140(3): mov %rax,%r15
7143(5): jmp 0xfffff798(%rip)
7148(8): nop 0x0(%rax,%rax,1)
7150(3): mov $0x4c,(%rbx)
7153(4): add $0x1,%rbx
7157(5): jmp 0xfffff6b4(%rip)
715c(4): nop 0x0(%rax)
7160(3): mov %r14b,(%rax)
7163(3): mov %r14,%rbx
7166(5): jmp 0xfffffd1e(%rip)
716b(5): nop 0x0(%rax,%rax,1)
7170(3): mov %r14d,(%rax)
7173(3): mov %r14,%rbx
7176(5): jmp 0xfffffd0e(%rip)
717b(5): nop 0x0(%rax,%rax,1)
7180(4): mov %r14w,(%rax)
7184(3): mov %r14,%rbx
7187(5): jmp 0xfffffcfd(%rip)
718c(4): nop 0x0(%rax)
7190(3): mov %r12,%rdi
7193(6): mov %dl,0xfffffc38(%rbp)
7199(5): call 0xffffa797(%rip)
719e(3): test %rax,%rax
71a1(3): mov %rax,%rcx
71a4(7): movzx 0xfffffc38(%rbp),%edx
71ab(6): jz 0xfffff3aa(%rip)
71b1(3): test %r14,%r14
71b4(6): jz 0x140(%rip)
71ba(2): test %dl,%dl
71bc(6): jz 0x138(%rip)
71c2(3): mov %r15,%rsi
71c5(3): mov %r14,%rdx
71c8(3): mov %rax,%rdi
71cb(5): call 0xffffa735(%rip)
71d0(3): mov %rax,%r15
71d3(5): jmp 0xfffffcac(%rip)
71d8(8): nop 0x0(%rax,%rax,1)
71e0(3): mov %r9,%r15
71e3(5): jmp 0xfffff4b1(%rip)
71e8(8): nop 0x0(%rax,%rax,1)
71f0(4): sub $0x8,%rsp
71f4(6): push 0xfffffc10(%rbp)
71fa(5): jmp 0xfffffa7b(%rip)
71ff(1): nop 
7200(4): sub $0x8,%rsp
7204(6): push 0xfffffc10(%rbp)
720a(4): sub $0x10,%rsp
720e(3): fstp %st0,(%rsp)
7211(5): jmp 0xfffffb2a(%rip)
7216(a): nop 0x0(%rax,%rax,1)
7220(7): mov 0xfffffc38(%rbp),%rax
7227(6): mov 0xfffffbdc(%rbp),%edi
722d(3): movsxd %ecx,%rbx
7230(3): add %r14,%rbx
7233(2): mov %edi,(%rax)
7235(5): jmp 0xfffffc4f(%rip)
723a(6): nop 0x0(%rax,%rax,1)
7240(7): cmp 0xfffffc18(%rbp),%r15
7247(2): jz 0xb(%rip)
7249(3): test %r15,%r15
724c(6): jnz 0xbd(%rip)
7252(7): mov 0xfffffbe0(%rbp),%rax
7259(3): test %rax,%rax
725c(2): jz 0xa(%rip)
725e(3): mov %rax,%rdi
7261(5): call 0xffffa4cf(%rip)
7266(7): mov 0xfffffbf8(%rbp),%rax
726d(7): mov 0xfffffd48(%rbp),%rdi
7274(4): add $0x20,%rax
7278(3): cmp %rax,%rdi
727b(2): jz 0x7(%rip)
727d(5): call 0xffffa4b3(%rip)
7282(7): mov 0xfffffbf0(%rbp),%rax
7289(7): mov 0xfffffc58(%rbp),%rdi
7290(4): add $0x10,%rax
7294(3): cmp %rax,%rdi
7297(2): jz 0x7(%rip)
7299(5): call 0xffffa497(%rip)
729e(7): mov 0xfffffc38(%rbp),%rax
72a5(3): xor %r15d,%r15d
72a8(6): mov $0x4b,(%rax)
72ae(5): jmp 0xfffff321(%rip)
72b3(5): nop 0x0(%rax,%rax,1)
72b8(3): xor %r15d,%r15d
72bb(5): jmp 0xfffff314(%rip)
72c0(3): mov %rcx,%r15
72c3(5): jmp 0xfffff618(%rip)
72c8(8): nop 0x0(%rax,%rax,1)
72d0(6): js 0xfffff285(%rip)
72d6(3): add %r12,%r12
72d9(3): cmp %rax,%r12
72dc(6): jnb 0xfffffc3a(%rip)
72e2(4): cmp $0xffffffff,%rax
72e6(6): jz 0xfffff26f(%rip)
72ec(3): mov %rax,%r12
72ef(5): jmp 0xfffffc27(%rip)
72f4(3): mov %rcx,%r15
72f7(5): jmp 0xfffffb88(%rip)
72fc(3): mov %r15,%rdi
72ff(5): call 0xffffa431(%rip)
7304(5): jmp 0xfffff84e(%rip)
7309(3): mov %r15,%rdi
730c(5): call 0xffffa424(%rip)
7311(5): jmp 0xffffff41(%rip)
7316(5): call 0xffffa42a(%rip)
731b(5): nop 0x0(%rax,%rax,1)
7320(7): mov 0xfffffbf8(%rbp),%rax
7327(7): mov 0xfffffd48(%rbp),%rdi
732e(4): add $0x20,%rax
7332(3): cmp %rax,%rdi
7335(2): jz 0x7(%rip)
7337(5): call 0xffffa3f9(%rip)
733c(7): mov 0xfffffbf0(%rbp),%rax
7343(7): mov 0xfffffc58(%rbp),%rdi
734a(4): add $0x10,%rax
734e(3): cmp %rax,%rdi
7351(2): jz 0x7(%rip)
7353(5): call 0xffffa3dd(%rip)
7358(5): call 0xffffa3f8(%rip)
735d(3): xor %r15d,%r15d
7360(6): mov $0x16,(%rax)
7366(5): jmp 0xfffff269(%rip)
736b(3): mov %r14,%rbx
736e(2): xor %eax,%eax
7370(4): add $0x1,%rbx
7374(6): jb 0x10c(%rip)
737a(3): cmp %rbx,%r12
737d(2): jnb 0x4f(%rip)
737f(3): test %r12,%r12
7382(6): jnz 0x137(%rip)
7388(4): cmp $0xc,%rbx
738c(6): jnbe 0x112(%rip)
7392(6): mov $0xc,%r12d
7398(7): cmp 0xfffffc18(%rbp),%r15
739f(4): setz %r13b
73a3(3): test %r15,%r15
73a6(6): jz 0xa6(%rip)
73ac(3): test %r13b,%r13b
73af(6): jnz 0x9d(%rip)
73b5(3): mov %r12,%rsi
73b8(3): mov %r15,%rdi
73bb(5): call 0xffffa605(%rip)
73c0(3): test %rax,%rax
73c3(6): jz 0xfffffc78(%rip)
73c9(3): mov %rax,%r15
73cc(7): cmp 0xfffffc18(%rbp),%r15
73d3(5): mov $0x0,0x0(%r15,%r14,1)
73d8(2): jz 0x19(%rip)
73da(3): cmp %rbx,%r12
73dd(2): jbe 0x14(%rip)
73df(3): mov %r15,%rdi
73e2(3): mov %rbx,%rsi
73e5(5): call 0xffffa5db(%rip)
73ea(3): test %rax,%rax
73ed(4): cmovne %rax,%r15
73f1(7): mov 0xfffffbe0(%rbp),%rax
73f8(3): test %rax,%rax
73fb(2): jz 0xa(%rip)
73fd(3): mov %rax,%rdi
7400(5): call 0xffffa330(%rip)
7405(7): mov 0xfffffbf8(%rbp),%rax
740c(7): mov 0xfffffd48(%rbp),%rdi
7413(4): add $0x20,%rax
7417(3): cmp %rax,%rdi
741a(2): jz 0x7(%rip)
741c(5): call 0xffffa314(%rip)
7421(7): mov 0xfffffbf0(%rbp),%rax
7428(7): mov 0xfffffc58(%rbp),%rdi
742f(4): add $0x10,%rax
7433(3): cmp %rax,%rdi
7436(2): jz 0x7(%rip)
7438(5): call 0xffffa2f8(%rip)
743d(7): mov 0xfffffbe8(%rbp),%rax
7444(3): mov %r14,(%rax)
7447(5): jmp 0xfffff188(%rip)
744c(3): mov %r12,%rdi
744f(5): call 0xffffa4e1(%rip)
7454(3): test %rax,%rax
7457(3): mov %rax,%rcx
745a(6): jz 0xfffff0fb(%rip)
7460(3): test %r14,%r14
7463(2): jz 0x6d(%rip)
7465(3): test %r13b,%r13b
7468(2): jz 0x68(%rip)
746a(3): mov %r15,%rsi
746d(3): mov %r14,%rdx
7470(3): mov %rax,%rdi
7473(5): call 0xffffa48d(%rip)
7478(3): mov %rax,%r15
747b(5): jmp 0xffffff51(%rip)
7480(4): cmp $0xffffffff,%r12
7484(5): mov $0x1,%eax
7489(6): jz 0xffffff43(%rip)
748f(3): test %r12,%r12
7492(6): jz 0xfffff0c3(%rip)
7498(6): js 0xfffff0bd(%rip)
749e(3): test %rax,%rax
74a1(6): jnz 0xfffff0b4(%rip)
74a7(4): cmp $0xffffffff,%rbx
74ab(6): jz 0xfffff0aa(%rip)
74b1(3): mov %rbx,%r12
74b4(5): jmp 0xfffffee4(%rip)
74b9(6): js 0xfffff09c(%rip)
74bf(3): add %r12,%r12
74c2(3): cmp %rbx,%r12
74c5(6): jnb 0xfffffed3(%rip)
74cb(2): jmp 0xffffffd3(%rip)
74cd(3): nop (%rax)
74d0(3): mov %rcx,%r15
74d3(5): jmp 0xfffffef9(%rip)
74d8(4): cmp $0xffffffff,%r12
74dc(6): jz 0xfffff424(%rip)
74e2(5): jmp 0xfffff07f(%rip)
74e7(5): call 0xffffa349(%rip)
74ec(4): cmp $0xffffffff,%r12
74f0(5): mov $0x1,%edx
74f5(6): jz 0xfffff3e6(%rip)
74fb(3): test %r12,%r12
74fe(6): jz 0xfffff057(%rip)
7504(6): jns 0xfffffbcc(%rip)
750a(5): jmp 0xfffff04b(%rip)

"dup_safer" :
7510(5): mov $0x3,%edx
7515(2): xor %esi,%esi
7517(2): xor %eax,%eax
7519(5): jmp 0x7(%rip)

"rpl_fcntl" :
7520(2): push %r12
7522(1): push %rbp
7523(2): mov %edi,%ebp
7525(1): push %rbx
7526(4): sub $0x50,%rsp
752a(9): mov $0x28,%rax
7533(5): mov %rax,0x18(%rsp)
7538(2): xor %eax,%eax
753a(5): lea 0x70(%rsp),%rax
753f(2): test %esi,%esi
7541(5): mov %rdx,0x30(%rsp)
7546(5): mov %rcx,0x38(%rsp)
754b(5): mov %r8,0x40(%rsp)
7550(5): mov %rax,0x8(%rsp)
7555(5): lea 0x20(%rsp),%rax
755a(5): mov %r9,0x48(%rsp)
755f(7): mov $0x10,(%rsp)
7566(5): mov %rax,0x10(%rsp)
756b(6): jz 0x207(%rip)
7571(6): cmp $0x406,%esi
7577(2): jnz 0x49(%rip)
7579(5): mov 0x10(%rsp),%rax
757e(7): cmp $0x0,0x204cb3(%rip)
7585(7): mov $0x18,(%rsp)
758c(4): mov 0x10(%rax),%r12d
7590(3): mov %r12d,%edx
7593(6): js 0x130(%rip)
7599(2): xor %eax,%eax
759b(5): mov $0x406,%esi
75a0(5): call 0xffffa200(%rip)
75a5(2): test %eax,%eax
75a7(2): mov %eax,%ebx
75a9(6): js 0x18f(%rip)
75af(a): mov $0x1,0x204c7f(%rip)
75b9(2): jmp 0x47(%rip)
75bb(5): nop 0x0(%rax,%rax,1)
75c0(3): cmp $0xb,%esi
75c3(2): jz 0x2d(%rip)
75c5(2): jnle 0x5b(%rip)
75c7(3): cmp $0x4,%esi
75ca(6): jz 0xd6(%rip)
75d0(6): jnle 0xc0(%rip)
75d6(3): cmp $0x2,%esi
75d9(6): jz 0xc7(%rip)
75df(2): jnle 0x11(%rip)
75e1(3): cmp $0x1,%esi
75e4(2): jnz 0x64(%rip)
75e6(a): nop 0x0(%rax,%rax,1)
75f0(2): mov %ebp,%edi
75f2(2): xor %eax,%eax
75f4(5): call 0xffffa1ac(%rip)
75f9(2): mov %eax,%ebx
75fb(5): nop 0x0(%rax,%rax,1)
7600(5): mov 0x18(%rsp),%rcx
7605(9): xor $0x28,%rcx
760e(2): mov %ebx,%eax
7610(6): jnz 0x15d(%rip)
7616(4): add $0x50,%rsp
761a(1): pop %rbx
761b(1): pop %rbp
761c(2): pop %r12
761e(1): ret near (%rsp)
761f(1): nop 
7620(6): cmp $0x407,%esi
7626(2): jnle 0x4a(%rip)
7628(6): cmp $0x406,%esi
762e(2): jnl 0x72(%rip)
7630(6): cmp $0x401,%esi
7636(2): jz 0xffffffba(%rip)
7638(6): cmp $0x402,%esi
763e(2): jz 0x62(%rip)
7640(6): cmp $0x400,%esi
7646(2): jz 0x5a(%rip)
7648(3): mov (%rsp),%eax
764b(3): cmp $0x2f,%eax
764e(6): jnbe 0x13c(%rip)
7654(5): add 0x10(%rsp),%rax
7659(3): mov (%rax),%rdx
765c(2): mov %ebp,%edi
765e(2): xor %eax,%eax
7660(5): call 0xffffa140(%rip)
7665(2): mov %eax,%ebx
7667(2): jmp 0xffffff99(%rip)
7669(7): nop 0x0(%rax)
7670(6): cmp $0x409,%esi
7676(2): jz 0x2a(%rip)
7678(6): jl 0xffffff78(%rip)
767e(6): cmp $0x40a,%esi
7684(2): jnz 0xffffffc4(%rip)
7686(5): jmp 0xffffff6a(%rip)
768b(5): nop 0x0(%rax,%rax,1)
7690(3): cmp $0x9,%esi
7693(6): jz 0xffffff5d(%rip)
7699(2): jnle 0x7(%rip)
769b(3): cmp $0x8,%esi
769e(2): jnz 0xffffffaa(%rip)
76a0(3): mov (%rsp),%eax
76a3(3): cmp $0x2f,%eax
76a6(6): jnbe 0xee(%rip)
76ac(5): add 0x10(%rsp),%rax
76b1(2): mov (%rax),%edx
76b3(2): mov %ebp,%edi
76b5(2): xor %eax,%eax
76b7(5): call 0xffffa0e9(%rip)
76bc(2): mov %eax,%ebx
76be(5): jmp 0xffffff42(%rip)
76c3(2): xor %esi,%esi
76c5(2): xor %eax,%eax
76c7(5): call 0xffffa0d9(%rip)
76cc(2): test %eax,%eax
76ce(2): mov %eax,%ebx
76d0(6): js 0xffffff30(%rip)
76d6(7): cmp $0xff,0x204b5b(%rip)
76dd(6): jnz 0xffffff23(%rip)
76e3(2): xor %eax,%eax
76e5(5): mov $0x1,%esi
76ea(2): mov %ebx,%edi
76ec(5): call 0xffffa0b4(%rip)
76f1(2): test %eax,%eax
76f3(2): js 0x1e(%rip)
76f5(3): or $0x1,%eax
76f8(5): mov $0x2,%esi
76fd(2): mov %ebx,%edi
76ff(2): mov %eax,%edx
7701(2): xor %eax,%eax
7703(5): call 0xffffa09d(%rip)
7708(3): cmp $0xff,%eax
770b(6): jnz 0xfffffef5(%rip)
7711(5): call 0xffffa03f(%rip)
7716(3): mov (%rax),%r12d
7719(3): mov %rax,%rbp
771c(2): mov %ebx,%edi
771e(5): call 0xffffa192(%rip)
7723(5): mov $0xffffffff,%ebx
7728(4): mov %r12d,0x0(%rbp)
772c(5): jmp 0xfffffed4(%rip)
7731(7): nop 0x0(%rax)
7738(5): call 0xffffa018(%rip)
773d(3): cmp $0x16,(%rax)
7740(6): jnz 0xfffffe6f(%rip)
7746(2): xor %esi,%esi
7748(2): xor %eax,%eax
774a(3): mov %r12d,%edx
774d(2): mov %ebp,%edi
774f(5): call 0xffffa051(%rip)
7754(2): test %eax,%eax
7756(2): mov %eax,%ebx
7758(6): js 0xfffffea8(%rip)
775e(a): mov $0xffffffff,0x204ad0(%rip)
7768(5): jmp 0xffffff7b(%rip)
776d(5): call 0xffffa0c3(%rip)
7772(5): mov 0x10(%rsp),%rax
7777(2): xor %esi,%esi
7779(3): mov 0x10(%rax),%edx
777c(2): xor %eax,%eax
777e(5): call 0xffffa022(%rip)
7783(2): mov %eax,%ebx
7785(5): jmp 0xfffffe7b(%rip)
778a(5): mov 0x8(%rsp),%rax
778f(5): jmp 0xfffffeca(%rip)
7794(5): mov 0x8(%rsp),%rax
7799(5): jmp 0xffffff18(%rip)

"printf_fetchargs" :
77a0(4): cmp $0x0,(%rsi)
77a4(4): mov 0x8(%rsi),%rax
77a8(2): jz 0x65(%rip)
77aa(7): lea 0x1fef(%rip),%r8
77b1(7): lea 0x2048(%rip),%r10
77b8(7): lea 0x1fcd(%rip),%r9
77bf(2): xor %ecx,%ecx
77c1(7): nop 0x0(%rax)
77c8(3): cmp $0x16,(%rax)
77cb(2): jnbe 0x45(%rip)
77cd(2): mov (%rax),%edx
77cf(4): movsxd 0x0(%r8,%rdx,4),%rdx
77d3(3): add %r8,%rdx
77d6(2): jmp %rdx
77d8(8): nop 0x0(%rax,%rax,1)
77e0(4): mov 0x8(%rdi),%rdx
77e4(4): add $0xf,%rdx
77e8(4): and $0xfffffff0,%rdx
77ec(4): lea 0x10(%rdx),%r11
77f0(4): mov %r11,0x8(%rdi)
77f4(2): fld (%rdx),%st0
77f6(3): fstp %st0,0x10(%rax)
77f9(7): nop 0x0(%rax)
7800(4): add $0x1,%rcx
7804(4): add $0x20,%rax
7808(3): cmp %rcx,(%rsi)
780b(2): jnbe 0xffffffbd(%rip)
780d(2): xor %eax,%eax
780f(1): ret near (%rsp)
7810(5): mov $0xffffffff,%eax
7815(1): ret near (%rsp)
7816(3): mov (%rdi),%r11d
7819(4): cmp $0x2f,%r11d
781d(6): jnbe 0x13d(%rip)
7823(3): mov %r11d,%edx
7826(4): add 0x10(%rdi),%rdx
782a(4): add $0x8,%r11d
782e(3): mov %r11d,(%rdi)
7831(3): mov (%rdx),%rdx
7834(4): mov %rdx,0x10(%rax)
7838(2): jmp 0xffffffc8(%rip)
783a(3): mov (%rdi),%r11d
783d(4): cmp $0x2f,%r11d
7841(6): jnbe 0x13b(%rip)
7847(3): mov %r11d,%edx
784a(4): add 0x10(%rdi),%rdx
784e(4): add $0x8,%r11d
7852(3): mov %r11d,(%rdi)
7855(2): mov (%rdx),%edx
7857(3): mov %edx,0x10(%rax)
785a(2): jmp 0xffffffa6(%rip)
785c(3): mov (%rdi),%r11d
785f(4): cmp $0x2f,%r11d
7863(6): jnbe 0x108(%rip)
7869(3): mov %r11d,%edx
786c(4): add 0x10(%rdi),%rdx
7870(4): add $0x8,%r11d
7874(3): mov %r11d,(%rdi)
7877(2): mov (%rdx),%edx
7879(3): mov %dl,0x10(%rax)
787c(2): jmp 0xffffff84(%rip)
787e(3): mov (%rdi),%r11d
7881(4): cmp $0x2f,%r11d
7885(6): jnbe 0xa5(%rip)
788b(3): mov %r11d,%edx
788e(4): add 0x10(%rdi),%rdx
7892(4): add $0x8,%r11d
7896(3): mov %r11d,(%rdi)
7899(2): mov (%rdx),%edx
789b(4): mov %dx,0x10(%rax)
789f(5): jmp 0xffffff61(%rip)
78a4(3): mov (%rdi),%r11d
78a7(4): cmp $0x2f,%r11d
78ab(6): jnbe 0x90(%rip)
78b1(3): mov %r11d,%edx
78b4(4): add 0x10(%rdi),%rdx
78b8(4): add $0x8,%r11d
78bc(3): mov %r11d,(%rdi)
78bf(3): mov (%rdx),%rdx
78c2(3): test %rdx,%rdx
78c5(4): cmove %r9,%rdx
78c9(4): mov %rdx,0x10(%rax)
78cd(5): jmp 0xffffff33(%rip)
78d2(4): mov 0x4(%rdi),%r11d
78d6(7): cmp $0xaf,%r11d
78dd(6): jnbe 0xb0(%rip)
78e3(3): mov %r11d,%edx
78e6(4): add 0x10(%rdi),%rdx
78ea(4): add $0x10,%r11d
78ee(4): mov %r11d,0x4(%rdi)
78f2(4): movsd (%rdx),%xmm0
78f6(5): movsd %xmm0,0x10(%rax)
78fb(5): jmp 0xffffff05(%rip)
7900(3): mov (%rdi),%r11d
7903(4): cmp $0x2f,%r11d
7907(2): jnbe 0x45(%rip)
7909(3): mov %r11d,%edx
790c(4): add 0x10(%rdi),%rdx
7910(4): add $0x8,%r11d
7914(3): mov %r11d,(%rdi)
7917(3): mov (%rdx),%rdx
791a(3): test %rdx,%rdx
791d(4): cmove %r10,%rdx
7921(4): mov %rdx,0x10(%rax)
7925(5): jmp 0xfffffedb(%rip)
792a(4): mov 0x8(%rdi),%rdx
792e(4): lea 0x8(%rdx),%r11
7932(4): mov %r11,0x8(%rdi)
7936(5): jmp 0xffffff63(%rip)
793b(4): mov 0x8(%rdi),%rdx
793f(4): lea 0x8(%rdx),%r11
7943(4): mov %r11,0x8(%rdi)
7947(5): jmp 0xffffff78(%rip)
794c(4): mov 0x8(%rdi),%rdx
7950(4): lea 0x8(%rdx),%r11
7954(4): mov %r11,0x8(%rdi)
7958(2): jmp 0xffffffbf(%rip)
795a(4): mov 0x8(%rdi),%rdx
795e(4): lea 0x8(%rdx),%r11
7962(4): mov %r11,0x8(%rdi)
7966(5): jmp 0xfffffecb(%rip)
796b(4): mov 0x8(%rdi),%rdx
796f(4): lea 0x8(%rdx),%r11
7973(4): mov %r11,0x8(%rdi)
7977(5): jmp 0xffffff00(%rip)
797c(4): mov 0x8(%rdi),%rdx
7980(4): lea 0x8(%rdx),%r11
7984(4): mov %r11,0x8(%rdi)
7988(5): jmp 0xfffffecd(%rip)
798d(4): mov 0x8(%rdi),%rdx
7991(4): lea 0x8(%rdx),%r11
7995(4): mov %r11,0x8(%rdi)
7999(5): jmp 0xffffff59(%rip)

"printf_parse" :
79a0(2): push %r15
79a2(2): push %r14
79a4(4): lea 0x20(%rsi),%rcx
79a8(2): push %r13
79aa(2): push %r12
79ac(4): lea 0x10(%rdx),%rax
79b0(1): push %rbp
79b1(1): push %rbx
79b2(3): mov %rsi,%r14
79b5(3): mov %rdx,%r15
79b8(2): xor %ebx,%ebx
79ba(6): mov $0x7,%r9d
79c0(4): sub $0x58,%rsp
79c4(6): mov $0x7,%r10d
79ca(7): mov $0x0,(%rsi)
79d1(4): mov %rcx,0x8(%rsi)
79d5(5): mov %rcx,0x28(%rsp)
79da(7): mov $0xffffffff,%r8
79e1(7): mov $0x0,(%rdx)
79e8(5): mov %rax,0x8(%rsp)
79ed(4): mov %rax,0x8(%rdx)
79f1(9): mov $0x0,0x18(%rsp)
79fa(9): mov $0x0,0x10(%rsp)
7a03(9): mov $0x0,0x20(%rsp)
7a0c(2): jmp 0xf(%rip)
7a0e(2): nop 
7a10(2): cmp $0x25,%al
7a12(4): lea 0x1(%rdi),%rbp
7a16(2): jz 0x42(%rip)
7a18(3): mov %rbp,%rdi
7a1b(3): movzx (%rdi),%eax
7a1e(2): test %al,%al
7a20(2): jnz 0xfffffff0(%rip)
7a22(4): lea 0x0(%rbx,%rbx,4),%rax
7a26(4): lea 0x0(%rbx,%rax,2),%rax
7a2a(4): mov %rdi,0x0(%rcx,%rax,8)
7a2e(5): mov 0x10(%rsp),%rax
7a33(4): mov %rax,0x10(%r14)
7a37(5): mov 0x18(%rsp),%rax
7a3c(4): mov %rax,0x18(%r14)
7a40(2): xor %eax,%eax
7a42(4): add $0x58,%rsp
7a46(1): pop %rbx
7a47(1): pop %rbp
7a48(2): pop %r12
7a4a(2): pop %r13
7a4c(2): pop %r14
7a4e(2): pop %r15
7a50(1): ret near (%rsp)
7a51(7): nop 0x0(%rax)
7a58(4): lea 0x0(%rbx,%rbx,4),%rax
7a5c(3): mov %r8,%r13
7a5f(4): lea 0x0(%rbx,%rax,2),%rax
7a63(4): lea 0x0(%rcx,%rax,8),%r12
7a67(4): mov %rdi,(%r12)
7a6b(9): mov $0x0,0x10(%r12)
7a74(9): mov $0x0,0x18(%r12)
7a7d(9): mov $0x0,0x20(%r12)
7a86(5): mov %r8,0x28(%r12)
7a8b(9): mov $0x0,0x30(%r12)
7a94(9): mov $0x0,0x38(%r12)
7a9d(5): mov %r8,0x40(%r12)
7aa2(5): mov %r8,0x50(%r12)
7aa7(4): movzx 0x1(%rdi),%ebx
7aab(3): lea 0xffffffd0(%rbx),%eax
7aae(2): cmp $0x9,%al
7ab0(2): jnbe 0x3e(%rip)
7ab2(5): jmp 0x438(%rip)
7ab7(9): nop 0x0(%rax,%rax,1)
7ac0(3): cmp $0x2d,%bl
7ac3(2): jz 0x45(%rip)
7ac5(3): cmp $0x2b,%bl
7ac8(2): jz 0x48(%rip)
7aca(3): cmp $0x20,%bl
7acd(2): jz 0x53(%rip)
7acf(3): cmp $0x23,%bl
7ad2(2): jz 0x5e(%rip)
7ad4(3): cmp $0x30,%bl
7ad7(2): jz 0x69(%rip)
7ad9(3): cmp $0x49,%bl
7adc(2): jnz 0x74(%rip)
7ade(6): or $0x40,0x10(%r12)
7ae4(4): nop 0x0(%rax)
7ae8(3): movzx (%rax),%ebx
7aeb(3): mov %rax,%rbp
7aee(4): lea 0x1(%rbp),%rax
7af2(3): cmp $0x27,%bl
7af5(3): mov %rax,%rdx
7af8(2): jnz 0xffffffc8(%rip)
7afa(6): or $0x1,0x10(%r12)
7b00(2): jmp 0xffffffe8(%rip)
7b02(6): nop 0x0(%rax,%rax,1)
7b08(6): or $0x2,0x10(%r12)
7b0e(2): jmp 0xffffffda(%rip)
7b10(6): or $0x4,0x10(%r12)
7b16(2): jmp 0xffffffd2(%rip)
7b18(8): nop 0x0(%rax,%rax,1)
7b20(6): or $0x8,0x10(%r12)
7b26(2): jmp 0xffffffc2(%rip)
7b28(8): nop 0x0(%rax,%rax,1)
7b30(6): or $0x10,0x10(%r12)
7b36(2): jmp 0xffffffb2(%rip)
7b38(8): nop 0x0(%rax,%rax,1)
7b40(6): or $0x20,0x10(%r12)
7b46(2): jmp 0xffffffa2(%rip)
7b48(8): nop 0x0(%rax,%rax,1)
7b50(3): cmp $0x2a,%bl
7b53(6): jz 0x1b6(%rip)
7b59(3): lea 0xffffffd0(%rbx),%ecx
7b5c(3): cmp $0x9,%cl
7b5f(6): jbe 0x418(%rip)
7b65(3): cmp $0x2e,%bl
7b68(6): jz 0x2d7(%rip)
7b6e(2): xor %eax,%eax
7b70(5): mov $0x1,%esi
7b75(2): jmp 0x32(%rip)
7b77(9): nop 0x0(%rax,%rax,1)
7b80(3): cmp $0x4c,%bl
7b83(2): jz 0x3d(%rip)
7b85(3): cmp $0x6c,%bl
7b88(2): jz 0x18(%rip)
7b8a(3): cmp $0x6a,%bl
7b8d(2): jz 0x13(%rip)
7b8f(2): mov %ebx,%edx
7b91(3): and $0xdf,%edx
7b94(3): cmp $0x5a,%dl
7b97(2): jz 0x9(%rip)
7b99(3): cmp $0x74,%bl
7b9c(2): jnz 0x2c(%rip)
7b9e(2): nop 
7ba0(3): add $0x8,%eax
7ba3(4): movzx 0x0(%rbp),%ebx
7ba7(4): add $0x1,%rbp
7bab(3): cmp $0x68,%bl
7bae(2): jnz 0xffffffd2(%rip)
7bb0(2): mov %eax,%ecx
7bb2(2): mov %esi,%edx
7bb4(3): and $0x1,%ecx
7bb7(2): shl/sal %cl,%edx
7bb9(2): or %edx,%eax
7bbb(2): jmp 0xffffffe8(%rip)
7bbd(3): nop (%rax)
7bc0(3): or $0x4,%eax
7bc3(2): jmp 0xffffffe0(%rip)
7bc5(3): nop (%rax)
7bc8(3): lea 0xffffffdb(%rbx),%edx
7bcb(3): cmp $0x53,%dl
7bce(6): jnbe 0x61d(%rip)
7bd4(7): lea 0x1c41(%rip),%rcx
7bdb(3): movzx %dl,%edx
7bde(4): movsxd 0x0(%rcx,%rdx,4),%rdx
7be2(3): add %rcx,%rdx
7be5(2): jmp %rdx
7be7(6): mov $0x10,%r11d
7bed(5): mov $0x73,%ebx
7bf2(6): nop 0x0(%rax,%rax,1)
7bf8(4): cmp $0xffffffff,%r13
7bfc(6): jz 0x6bb(%rip)
7c02(5): mov %r13,0x50(%r12)
7c07(3): cmp %r13,%r9
7c0a(4): mov 0x8(%r15),%rcx
7c0e(6): jbe 0x622(%rip)
7c14(3): mov (%r15),%rax
7c17(3): mov %rax,%rdx
7c1a(4): shl/sal $0x5,%rdx
7c1e(3): add %rcx,%rdx
7c21(3): cmp %r13,%rax
7c24(2): jnbe 0x22(%rip)
7c26(a): nop 0x0(%rax,%rax,1)
7c30(4): add $0x1,%rax
7c34(6): mov $0x0,(%rdx)
7c3a(4): add $0x20,%rdx
7c3e(3): cmp %r13,%rax
7c41(2): jbe 0xffffffef(%rip)
7c43(3): mov %rax,(%r15)
7c46(4): shl/sal $0x5,%r13
7c4a(4): lea 0x0(%rcx,%r13,1),%rax
7c4e(2): mov (%rax),%edx
7c50(2): test %edx,%edx
7c52(6): jnz 0x5d1(%rip)
7c58(3): mov %r11d,(%rax)
7c5b(5): mov %bl,0x48(%r12)
7c60(3): mov (%r14),%rax
7c63(5): mov %rbp,0x8(%r12)
7c68(4): lea 0x1(%rax),%rbx
7c6c(3): cmp %rbx,%r10
7c6f(3): mov %rbx,(%r14)
7c72(6): jnbe 0x8e(%rip)
7c78(3): test %r10,%r10
7c7b(6): js 0x9ac(%rip)
7c81(3): add %r10,%r10
7c84(a): mov $0x209622091746699450,%rax
7c8e(3): cmp %rax,%r10
7c91(6): jnbe 0x996(%rip)
7c97(4): lea 0x0(%r10,%r10,4),%rax
7c9b(4): mov 0x8(%r14),%rdi
7c9f(5): cmp %rdi,0x28(%rsp)
7ca4(5): mov %r9,0x40(%rsp)
7ca9(5): mov %r10,0x38(%rsp)
7cae(4): lea 0x0(%r10,%rax,2),%rax
7cb2(5): mov %r8,0x30(%rsp)
7cb7(8): lea 0x0(,%rax,8),%rsi
7cbf(6): jz 0x6be(%rip)
7cc5(5): call 0xffff9cfb(%rip)
7cca(3): test %rax,%rax
7ccd(3): mov %rax,%rcx
7cd0(5): mov 0x30(%rsp),%r8
7cd5(5): mov 0x38(%rsp),%r10
7cda(5): mov 0x40(%rsp),%r9
7cdf(6): jz 0x948(%rip)
7ce5(5): mov 0x28(%rsp),%rax
7cea(4): cmp 0x8(%r14),%rax
7cee(3): mov (%r14),%rbx
7cf1(6): jz 0x6af(%rip)
7cf7(4): mov %rcx,0x8(%r14)
7cfb(5): jmp 0xfffffd1d(%rip)
7d00(4): mov 0x8(%r14),%rcx
7d04(5): jmp 0xfffffd14(%rip)
7d09(5): mov 0x10(%rsp),%rsi
7d0e(5): mov $0x1,%ecx
7d13(5): mov %rbp,0x18(%r12)
7d18(5): mov %rax,0x20(%r12)
7d1d(3): test %rsi,%rsi
7d20(4): cmovne %rsi,%rcx
7d24(5): mov %rcx,0x10(%rsp)
7d29(4): movzx 0x1(%rbp),%ecx
7d2d(3): lea 0xffffffd0(%rcx),%esi
7d30(4): cmp $0x9,%sil
7d34(6): jbe 0x2e1(%rip)
7d3a(5): mov 0x20(%rsp),%rsi
7d3f(4): cmp $0xffffffff,%rsi
7d43(4): lea 0x1(%rsi),%rdx
7d47(5): mov %rsi,0x28(%r12)
7d4c(6): jz 0x49f(%rip)
7d52(5): mov 0x20(%rsp),%rbx
7d57(3): mov %rax,%rbp
7d5a(5): mov %rdx,0x20(%rsp)
7d5f(3): cmp %rbx,%r9
7d62(4): mov 0x8(%r15),%rcx
7d66(6): jnbe 0x67c(%rip)
7d6c(3): add %r9,%r9
7d6f(4): lea 0x1(%rbx),%rax
7d73(3): cmp %rbx,%r9
7d76(4): cmovbe %rax,%r9
7d7a(a): mov $0x576460752303423487,%rax
7d84(3): cmp %rax,%r9
7d87(6): jnbe 0x8a4(%rip)
7d8d(3): mov %r9,%rsi
7d90(5): mov %r9,0x40(%rsp)
7d95(5): mov %r10,0x38(%rsp)
7d9a(4): shl/sal $0x5,%rsi
7d9e(5): cmp %rcx,0x8(%rsp)
7da3(5): mov %r8,0x30(%rsp)
7da8(6): jz 0x719(%rip)
7dae(3): mov %rcx,%rdi
7db1(5): call 0xffff9c0f(%rip)
7db6(4): mov 0x8(%r15),%rdx
7dba(5): mov 0x30(%rsp),%r8
7dbf(3): mov %rax,%rcx
7dc2(5): mov 0x38(%rsp),%r10
7dc7(5): mov 0x40(%rsp),%r9
7dcc(3): test %rcx,%rcx
7dcf(6): jz 0x8b8(%rip)
7dd5(5): cmp %rdx,0x8(%rsp)
7dda(3): mov (%r15),%rax
7ddd(6): jz 0x7be(%rip)
7de3(4): mov %rcx,0x8(%r15)
7de7(3): mov %rax,%rdx
7dea(4): shl/sal $0x5,%rdx
7dee(3): add %rcx,%rdx
7df1(3): cmp %rbx,%rax
7df4(2): jnbe 0x22(%rip)
7df6(a): nop 0x0(%rax,%rax,1)
7e00(4): add $0x1,%rax
7e04(6): mov $0x0,(%rdx)
7e0a(4): add $0x20,%rdx
7e0e(3): cmp %rbx,%rax
7e11(2): jbe 0xffffffef(%rip)
7e13(3): mov %rax,(%r15)
7e16(4): shl/sal $0x5,%rbx
7e1a(4): lea 0x0(%rcx,%rbx,1),%rax
7e1e(2): mov (%rax),%edx
7e20(2): test %edx,%edx
7e22(6): jnz 0x4d9(%rip)
7e28(6): mov $0x5,(%rax)
7e2e(4): movzx 0x0(%rbp),%ebx
7e32(4): lea 0x1(%rbp),%rdx
7e36(3): cmp $0x2e,%bl
7e39(6): jnz 0xfffffd35(%rip)
7e3f(4): cmp $0x2a,0x1(%rbp)
7e43(5): mov %rbp,0x30(%r12)
7e48(6): jnz 0x186(%rip)
7e4e(5): mov 0x18(%rsp),%rsi
7e53(4): lea 0x2(%rbp),%r11
7e57(5): mov $0x2,%eax
7e5c(5): mov %r11,0x38(%r12)
7e61(4): cmp $0x2,%rsi
7e65(4): cmovnb %rsi,%rax
7e69(5): mov %rax,0x18(%rsp)
7e6e(4): movsx 0x2(%rbp),%eax
7e72(3): lea 0xffffffd0(%rax),%edx
7e75(3): cmp $0x9,%dl
7e78(6): jbe 0x694(%rip)
7e7e(5): mov 0x40(%r12),%rbx
7e83(4): cmp $0xffffffff,%rbx
7e87(6): jz 0x65e(%rip)
7e8d(3): cmp %rbx,%r9
7e90(4): mov 0x8(%r15),%rcx
7e94(6): jbe 0x56b(%rip)
7e9a(3): mov (%r15),%rax
7e9d(3): mov %rax,%rdx
7ea0(4): shl/sal $0x5,%rdx
7ea4(3): add %rcx,%rdx
7ea7(3): cmp %rbx,%rax
7eaa(2): jnbe 0x1c(%rip)
7eac(4): nop 0x0(%rax)
7eb0(4): add $0x1,%rax
7eb4(6): mov $0x0,(%rdx)
7eba(4): add $0x20,%rdx
7ebe(3): cmp %rbx,%rax
7ec1(2): jbe 0xffffffef(%rip)
7ec3(3): mov %rax,(%r15)
7ec6(4): shl/sal $0x5,%rbx
7eca(4): lea 0x0(%rcx,%rbx,1),%rax
7ece(2): mov (%rax),%edx
7ed0(2): test %edx,%edx
7ed2(6): jnz 0x518(%rip)
7ed8(6): mov $0x5,(%rax)
7ede(3): mov %r11,%rbp
7ee1(4): movzx (%r11),%ebx
7ee5(5): jmp 0xfffffc89(%rip)
7eea(3): mov %rbp,%rax
7eed(3): nop (%rax)
7ef0(4): add $0x1,%rax
7ef4(3): movzx (%rax),%edx
7ef7(3): lea 0xffffffd0(%rdx),%ecx
7efa(3): cmp $0x9,%cl
7efd(2): jbe 0xfffffff3(%rip)
7eff(3): cmp $0x24,%dl
7f02(3): mov %r8,%r13
7f05(6): jnz 0xfffffbe9(%rip)
7f0b(2): xor %edx,%edx
7f0d(3): movsx %bl,%eax
7f10(a): mov $0x1844674407370955161,%rdi
7f1a(3): mov %r8,%rsi
7f1d(3): sub $0x30,%eax
7f20(3): cmp %rdi,%rdx
7f23(2): cwde 
7f25(2): jnbe 0x9(%rip)
7f27(4): lea 0x0(%rdx,%rdx,4),%rsi
7f2b(3): add %rsi,%rsi
7f2e(3): mov %rbp,%rcx
7f31(3): add %rsi,%rax
7f34(4): movzx 0x1(%rbp),%ebx
7f38(4): setb %sil
7f3c(4): add $0x1,%rbp
7f40(3): mov %rax,%rdx
7f43(4): movzx %sil,%esi
7f47(3): test %rsi,%rsi
7f4a(3): lea 0xffffffd0(%rbx),%edi
7f4d(6): jnz 0x391(%rip)
7f53(4): cmp $0x9,%dil
7f57(2): jbe 0xffffffb6(%rip)
7f59(3): mov %rax,%r13
7f5c(4): sub $0x1,%r13
7f60(4): cmp $0xfffffffd,%r13
7f64(6): jnbe 0x287(%rip)
7f6a(4): lea 0x2(%rcx),%rbp
7f6e(4): movzx 0x2(%rcx),%ebx
7f72(5): jmp 0xfffffb7c(%rip)
7f77(5): mov %rbp,0x18(%r12)
7f7c(4): movzx 0x0(%rbp),%edi
7f80(3): mov %rbp,%rsi
7f83(3): lea 0xffffffd0(%rdi),%ecx
7f86(3): cmp $0x9,%cl
7f89(2): jbe 0xe(%rip)
7f8b(2): jmp 0x35(%rip)
7f8d(3): nop (%rax)
7f90(3): mov %rax,%rbp
7f93(4): add $0x1,%rax
7f97(3): movzx (%rax),%edi
7f9a(3): lea 0xffffffd0(%rdi),%edx
7f9d(3): cmp $0x9,%dl
7fa0(2): jbe 0xfffffff0(%rip)
7fa2(3): mov %rax,%rcx
7fa5(4): lea 0x2(%rbp),%rdx
7fa9(3): mov %rax,%rbp
7fac(3): sub %rsi,%rcx
7faf(5): mov 0x10(%rsp),%rsi
7fb4(3): cmp %rcx,%rsi
7fb7(4): cmovnb %rsi,%rcx
7fbb(5): mov %rcx,0x10(%rsp)
7fc0(5): mov %rbp,0x20(%r12)
7fc5(4): movzx 0x0(%rbp),%ebx
7fc9(5): jmp 0xfffffb9c(%rip)
7fce(4): movzx 0x1(%rbp),%eax
7fd2(3): sub $0x30,%eax
7fd5(2): cmp $0x9,%al
7fd7(2): jnbe 0x17(%rip)
7fd9(7): nop 0x0(%rax)
7fe0(4): add $0x1,%rdx
7fe4(3): movzx (%rdx),%eax
7fe7(3): sub $0x30,%eax
7fea(2): cmp $0x9,%al
7fec(2): jbe 0xfffffff4(%rip)
7fee(5): mov 0x18(%rsp),%rsi
7ff3(3): mov %rdx,%rax
7ff6(5): mov %rdx,0x38(%r12)
7ffb(3): sub %rbp,%rax
7ffe(3): movzx (%rdx),%ebx
8001(3): mov %rdx,%rbp
8004(3): cmp %rax,%rsi
8007(4): cmovnb %rsi,%rax
800b(5): mov %rax,0x18(%rsp)
8010(5): jmp 0xfffffb5e(%rip)
8015(3): mov %rax,%rsi
8018(4): add $0x1,%rsi
801c(3): movzx (%rsi),%edi
801f(4): lea 0xffffffd0(%rdi),%r11d
8023(4): cmp $0x9,%r11b
8027(2): jbe 0xfffffff1(%rip)
8029(4): cmp $0x24,%dil
802d(6): jnz 0xfffffd0d(%rip)
8033(2): xor %esi,%esi
8035(3): movsx %cl,%eax
8038(a): mov $0x1844674407370955161,%rdi
8042(3): mov %r8,%rcx
8045(3): sub $0x30,%eax
8048(3): cmp %rdi,%rsi
804b(2): cwde 
804d(2): jnbe 0x9(%rip)
804f(4): lea 0x0(%rsi,%rsi,4),%rcx
8053(3): add %rcx,%rcx
8056(3): mov %rdx,%rbp
8059(3): xor %r11d,%r11d
805c(3): add %rcx,%rax
805f(4): movzx 0x1(%rdx),%ecx
8063(4): setb %r11b
8067(4): add $0x1,%rdx
806b(3): mov %rax,%rsi
806e(3): test %r11,%r11
8071(3): lea 0xffffffd0(%rcx),%edi
8074(6): jnz 0x50a(%rip)
807a(4): cmp $0x9,%dil
807e(2): jbe 0xffffffb7(%rip)
8080(4): lea 0xffffffff(%rax),%rbx
8084(4): cmp $0xfffffffd,%rbx
8088(6): jnbe 0x163(%rip)
808e(5): mov %rbx,0x28(%r12)
8093(4): add $0x2,%rbp
8097(5): jmp 0xfffffcc8(%rip)
809c(3): cmp $0xf,%eax
809f(6): mov $0x16,%r11d
80a5(6): jnle 0xfffffb53(%rip)
80ab(2): test $0x4,%al
80ad(6): jnz 0xfffffb4b(%rip)
80b3(3): cmp $0x7,%eax
80b6(6): mov $0x15,%r11d
80bc(6): jnle 0xfffffb3c(%rip)
80c2(2): test $0x2,%al
80c4(6): mov $0x12,%r11d
80ca(6): jnz 0xfffffb2e(%rip)
80d0(3): xor %r11d,%r11d
80d3(2): test $0x1,%al
80d5(4): setz %r11b
80d9(4): add $0x13,%r11d
80dd(5): jmp 0xfffffb1b(%rip)
80e2(6): nop 0x0(%rax,%rax,1)
80e8(3): xor %r11d,%r11d
80eb(3): cmp $0x7,%eax
80ee(4): setnle %r11b
80f2(4): add $0xd,%r11d
80f6(5): jmp 0xfffffb02(%rip)
80fb(3): cmp $0xf,%eax
80fe(6): mov $0x9,%r11d
8104(6): jnle 0xfffffaf4(%rip)
810a(2): test $0x4,%al
810c(6): jnz 0xfffffaec(%rip)
8112(3): cmp $0x7,%eax
8115(6): mov $0x7,%r11d
811b(6): jnle 0xfffffadd(%rip)
8121(2): test $0x2,%al
8123(6): mov $0x1,%r11d
8129(6): jnz 0xfffffacf(%rip)
812f(3): and $0x1,%eax
8132(3): cmp $0x1,%eax
8135(3): sbb %r11d,%r11d
8138(4): and $0x2,%r11d
813c(4): add $0x3,%r11d
8140(5): jmp 0xfffffab8(%rip)
8145(3): nop (%rax)
8148(3): xor %r11d,%r11d
814b(3): cmp $0x7,%eax
814e(4): setnle %r11b
8152(4): add $0xf,%r11d
8156(5): jmp 0xfffffaa2(%rip)
815b(3): cmp $0xf,%eax
815e(6): mov $0xc,%r11d
8164(6): jnle 0xfffffa94(%rip)
816a(3): xor %r11d,%r11d
816d(2): test $0x4,%al
816f(4): setnz %r11b
8173(4): add $0xb,%r11d
8177(5): jmp 0xfffffa81(%rip)
817c(6): mov $0xe,%r11d
8182(5): mov $0x63,%ebx
8187(5): jmp 0xfffffa71(%rip)
818c(3): cmp $0xf,%eax
818f(6): mov $0xa,%r11d
8195(6): jnle 0xfffffa63(%rip)
819b(2): test $0x4,%al
819d(6): jnz 0xfffffa5b(%rip)
81a3(3): cmp $0x7,%eax
81a6(6): mov $0x8,%r11d
81ac(6): jnle 0xfffffa4c(%rip)
81b2(2): test $0x2,%al
81b4(6): mov $0x2,%r11d
81ba(6): jnz 0xfffffa3e(%rip)
81c0(3): and $0x1,%eax
81c3(3): cmp $0x1,%eax
81c6(3): sbb %r11d,%r11d
81c9(4): and $0x2,%r11d
81cd(4): add $0x4,%r11d
81d1(5): jmp 0xfffffa27(%rip)
81d6(a): nop 0x0(%rax,%rax,1)
81e0(6): mov $0x11,%r11d
81e6(5): jmp 0xfffffa12(%rip)
81eb(4): mov 0x8(%r15),%rcx
81ef(5): cmp %rcx,0x8(%rsp)
81f4(2): jz 0xa(%rip)
81f6(3): mov %rcx,%rdi
81f9(5): call 0xffff9537(%rip)
81fe(4): mov 0x8(%r14),%rdi
8202(5): cmp %rdi,0x28(%rsp)
8207(2): jz 0x7(%rip)
8209(5): call 0xffff9527(%rip)
820e(5): call 0xffff9542(%rip)
8213(6): mov $0x16,(%rax)
8219(5): mov $0xffffffff,%eax
821e(5): jmp 0xfffff824(%rip)
8223(3): cmp %r11d,%edx
8226(6): jz 0xfffffa35(%rip)
822c(2): jmp 0xffffffc3(%rip)
822e(2): nop 
8230(3): add %r9,%r9
8233(4): lea 0x1(%r13),%rax
8237(3): cmp %r13,%r9
823a(4): cmovbe %rax,%r9
823e(a): mov $0x576460752303423487,%rax
8248(3): cmp %rax,%r9
824b(6): jnbe 0x3e0(%rip)
8251(3): mov %r9,%rsi
8254(5): mov %r9,0x48(%rsp)
8259(5): mov %r10,0x40(%rsp)
825e(4): shl/sal $0x5,%rsi
8262(5): cmp %rcx,0x8(%rsp)
8267(5): mov %r8,0x38(%rsp)
826c(5): mov %r11d,0x30(%rsp)
8271(6): jz 0xa0(%rip)
8277(3): mov %rcx,%rdi
827a(5): call 0xffff9746(%rip)
827f(3): test %rax,%rax
8282(3): mov %rax,%rcx
8285(5): mov 0x30(%rsp),%r11d
828a(5): mov 0x38(%rsp),%r8
828f(5): mov 0x40(%rsp),%r10
8294(5): mov 0x48(%rsp),%r9
8299(6): jz 0x38e(%rip)
829f(5): mov 0x8(%rsp),%rax
82a4(4): cmp 0x8(%r15),%rax
82a8(6): jz 0x91(%rip)
82ae(4): mov %rcx,0x8(%r15)
82b2(5): jmp 0xfffff962(%rip)
82b7(5): mov 0x20(%rsp),%rsi
82bc(4): cmp $0xffffffff,%rsi
82c0(4): lea 0x1(%rsi),%rax
82c4(5): mov %rsi,0x50(%r12)
82c9(6): jz 0xffffff22(%rip)
82cf(5): mov 0x20(%rsp),%r13
82d4(5): mov %rax,0x20(%rsp)
82d9(5): jmp 0xfffff92e(%rip)
82de(4): cmp $0x9,%dil
82e2(6): jnbe 0xffffff09(%rip)
82e8(3): movsx %bl,%eax
82eb(3): mov %r8,%rsi
82ee(3): mov %rbp,%rcx
82f1(3): sub $0x30,%eax
82f4(2): cwde 
82f6(5): jmp 0xfffffc3b(%rip)
82fb(3): cmp $0x5,%edx
82fe(6): jnz 0xfffffef1(%rip)
8304(4): movzx 0x0(%rbp),%ebx
8308(4): lea 0x1(%rbp),%rdx
830c(5): jmp 0xfffff859(%rip)
8311(3): mov %rsi,%rdi
8314(5): call 0xffff961c(%rip)
8319(3): test %rax,%rax
831c(3): mov %rax,%rcx
831f(5): mov 0x30(%rsp),%r11d
8324(5): mov 0x38(%rsp),%r8
8329(5): mov 0x40(%rsp),%r10
832e(5): mov 0x48(%rsp),%r9
8333(6): jz 0x169(%rip)
8339(3): mov (%r15),%rdx
833c(5): mov 0x8(%rsp),%rsi
8341(3): mov %rcx,%rdi
8344(5): mov %r9,0x48(%rsp)
8349(5): mov %r10,0x40(%rsp)
834e(5): mov %r8,0x38(%rsp)
8353(5): mov %r11d,0x30(%rsp)
8358(4): shl/sal $0x5,%rdx
835c(5): call 0xffff95a4(%rip)
8361(5): mov 0x48(%rsp),%r9
8366(5): mov 0x40(%rsp),%r10
836b(3): mov %rax,%rcx
836e(5): mov 0x38(%rsp),%r8
8373(5): mov 0x30(%rsp),%r11d
8378(5): jmp 0xffffff36(%rip)
837d(3): mov %rsi,%rdi
8380(5): call 0xffff95b0(%rip)
8385(3): test %rax,%rax
8388(3): mov %rax,%rcx
838b(5): mov 0x30(%rsp),%r8
8390(5): mov 0x38(%rsp),%r10
8395(5): mov 0x40(%rsp),%r9
839a(6): jz 0xef(%rip)
83a0(4): lea 0x0(%rbx,%rbx,4),%rax
83a4(5): mov 0x28(%rsp),%rsi
83a9(3): mov %rcx,%rdi
83ac(5): mov %r9,0x40(%rsp)
83b1(5): mov %r10,0x38(%rsp)
83b6(4): lea 0x0(%rbx,%rax,2),%rdx
83ba(5): mov %r8,0x30(%rsp)
83bf(4): shl/sal $0x3,%rdx
83c3(5): call 0xffff953d(%rip)
83c8(3): mov (%r14),%rbx
83cb(3): mov %rax,%rcx
83ce(5): mov 0x40(%rsp),%r9
83d3(5): mov 0x38(%rsp),%r10
83d8(5): mov 0x30(%rsp),%r8
83dd(5): jmp 0xfffff91a(%rip)
83e2(3): mov (%r15),%rax
83e5(5): jmp 0xfffffa02(%rip)
83ea(3): cmp $0x5,%edx
83ed(6): jnz 0xfffffe02(%rip)
83f3(4): movzx (%r11),%ebx
83f7(3): mov %r11,%rbp
83fa(5): jmp 0xfffff774(%rip)
83ff(3): add %r9,%r9
8402(4): lea 0x1(%rbx),%rax
8406(3): cmp %rbx,%r9
8409(4): cmovbe %rax,%r9
840d(a): mov $0x576460752303423487,%rax
8417(3): cmp %rax,%r9
841a(6): jnbe 0x211(%rip)
8420(3): mov %r9,%rsi
8423(5): mov %r9,0x48(%rsp)
8428(5): mov %r10,0x40(%rsp)
842d(4): shl/sal $0x5,%rsi
8431(5): cmp %rcx,0x8(%rsp)
8436(5): mov %r8,0x38(%rsp)
843b(5): mov %r11,0x30(%rsp)
8440(6): jz 0x1be(%rip)
8446(3): mov %rcx,%rdi
8449(5): call 0xffff9577(%rip)
844e(4): mov 0x8(%r15),%rdx
8452(5): mov 0x30(%rsp),%r11
8457(3): mov %rax,%rcx
845a(5): mov 0x38(%rsp),%r8
845f(5): mov 0x40(%rsp),%r10
8464(5): mov 0x48(%rsp),%r9
8469(3): test %rcx,%rcx
846c(6): jz 0x21b(%rip)
8472(5): cmp %rdx,0x8(%rsp)
8477(3): mov (%r15),%rax
847a(6): jz 0x1c6(%rip)
8480(4): mov %rcx,0x8(%r15)
8484(5): jmp 0xfffffa19(%rip)
8489(4): mov 0x8(%r15),%rcx
848d(5): cmp %rcx,0x8(%rsp)
8492(2): jz 0x1a(%rip)
8494(3): mov %rcx,%rdi
8497(5): call 0xffff9299(%rip)
849c(4): mov 0x8(%r14),%rdi
84a0(5): cmp %rdi,0x28(%rsp)
84a5(2): jz 0x7(%rip)
84a7(5): call 0xffff9289(%rip)
84ac(5): call 0xffff92a4(%rip)
84b1(6): mov $0xc,(%rax)
84b7(5): mov $0xffffffff,%eax
84bc(5): jmp 0xfffff586(%rip)
84c1(3): mov %rsi,%rdi
84c4(5): call 0xffff946c(%rip)
84c9(5): mov 0x8(%rsp),%rdx
84ce(3): mov %rax,%rcx
84d1(5): mov 0x40(%rsp),%r9
84d6(5): mov 0x38(%rsp),%r10
84db(5): mov 0x30(%rsp),%r8
84e0(5): jmp 0xfffff8ec(%rip)
84e5(5): mov 0x20(%rsp),%rsi
84ea(4): cmp $0xffffffff,%rsi
84ee(4): lea 0x1(%rsi),%rax
84f2(5): mov %rsi,0x40(%r12)
84f7(6): jz 0xfffffcf4(%rip)
84fd(5): mov 0x20(%rsp),%rbx
8502(5): mov %rax,0x20(%rsp)
8507(5): jmp 0xfffff986(%rip)
850c(3): mov %r11,%rdx
850f(4): add $0x1,%rdx
8513(3): movzx (%rdx),%ecx
8516(3): lea 0xffffffd0(%rcx),%esi
8519(4): cmp $0x9,%sil
851d(2): jbe 0xfffffff2(%rip)
851f(3): cmp $0x24,%cl
8522(6): jnz 0xfffff95c(%rip)
8528(2): xor %ecx,%ecx
852a(a): mov $0x1844674407370955161,%rsi
8534(3): sub $0x30,%eax
8537(3): mov %r8,%rdx
853a(3): cmp %rsi,%rcx
853d(2): cwde 
853f(2): jnbe 0x9(%rip)
8541(4): lea 0x0(%rcx,%rcx,4),%rdx
8545(3): add %rdx,%rdx
8548(3): mov %r11,%rsi
854b(2): xor %ebx,%ebx
854d(3): add %rax,%rdx
8550(5): movsx 0x1(%r11),%eax
8555(3): setb %bl
8558(4): add $0x1,%r11
855c(3): mov %rdx,%rcx
855f(3): test %rbx,%rbx
8562(3): lea 0xffffffd0(%rax),%edi
8565(2): jz 0x73(%rip)
8567(4): cmp $0x9,%dil
856b(6): jnbe 0xfffffc80(%rip)
8571(3): sub $0x30,%eax
8574(3): mov %r8,%rdx
8577(3): mov %r11,%rsi
857a(2): cwde 
857c(2): jmp 0xffffffcf(%rip)
857e(4): cmp $0x9,%dil
8582(6): jnbe 0xfffffc69(%rip)
8588(3): movsx %cl,%eax
858b(3): mov %rdx,%rbp
858e(3): mov %r8,%rcx
8591(3): sub $0x30,%eax
8594(2): cwde 
8596(5): jmp 0xfffffac3(%rip)
859b(5): mov 0x8(%rsp),%rsi
85a0(4): shl/sal $0x5,%rax
85a4(3): mov %rcx,%rdi
85a7(3): mov %rax,%rdx
85aa(5): mov %r9,0x40(%rsp)
85af(5): mov %r10,0x38(%rsp)
85b4(5): mov %r8,0x30(%rsp)
85b9(5): call 0xffff9347(%rip)
85be(5): mov 0x40(%rsp),%r9
85c3(3): mov %rax,%rcx
85c6(5): mov 0x38(%rsp),%r10
85cb(3): mov (%r15),%rax
85ce(5): mov 0x30(%rsp),%r8
85d3(5): jmp 0xfffff810(%rip)
85d8(4): cmp $0x9,%dil
85dc(6): jbe 0xffffff4e(%rip)
85e2(4): lea 0xffffffff(%rdx),%rbx
85e6(4): cmp $0xfffffffd,%rbx
85ea(6): jnbe 0xfffffc01(%rip)
85f0(5): mov %rbx,0x40(%r12)
85f5(4): lea 0x2(%rsi),%r11
85f9(5): jmp 0xfffff894(%rip)
85fe(3): mov %rsi,%rdi
8601(5): call 0xffff932f(%rip)
8606(5): mov 0x8(%rsp),%rdx
860b(3): mov %rax,%rcx
860e(5): mov 0x48(%rsp),%r9
8613(5): mov 0x40(%rsp),%r10
8618(5): mov 0x38(%rsp),%r8
861d(5): mov 0x30(%rsp),%r11
8622(5): jmp 0xfffffe47(%rip)
8627(4): mov 0x8(%r15),%rcx
862b(5): cmp %rcx,0x8(%rsp)
8630(6): jnz 0xfffffe64(%rip)
8636(5): jmp 0xfffffe66(%rip)
863b(5): nop 0x0(%rax,%rax,1)
8640(5): mov 0x8(%rsp),%rsi
8645(4): shl/sal $0x5,%rax
8649(3): mov %rcx,%rdi
864c(3): mov %rax,%rdx
864f(5): mov %r9,0x48(%rsp)
8654(5): mov %r10,0x40(%rsp)
8659(5): mov %r8,0x38(%rsp)
865e(5): mov %r11,0x30(%rsp)
8663(5): call 0xffff929d(%rip)
8668(5): mov 0x48(%rsp),%r9
866d(3): mov %rax,%rcx
8670(5): mov 0x40(%rsp),%r10
8675(3): mov (%r15),%rax
8678(5): mov 0x38(%rsp),%r8
867d(5): mov 0x30(%rsp),%r11
8682(5): jmp 0xfffffdfe(%rip)
8687(3): mov %rdx,%rcx
868a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
8690(2): push %r15
8692(2): push %r14
8694(3): mov %rdx,%r15
8697(2): push %r13
8699(2): push %r12
869b(7): lea 0x2033ee(%rip),%r12
86a2(1): push %rbp
86a3(7): lea 0x2033ee(%rip),%rbp
86aa(1): push %rbx
86ab(3): mov %edi,%r13d
86ae(3): mov %rsi,%r14
86b1(3): sub %r12,%rbp
86b4(4): sub $0x8,%rsp
86b8(4): sar $0x3,%rbp
86bc(5): call 0xffff9024(%rip)
86c1(3): test %rbp,%rbp
86c4(2): jz 0x22(%rip)
86c6(2): xor %ebx,%ebx
86c8(8): nop 0x0(%rax,%rax,1)
86d0(3): mov %r15,%rdx
86d3(3): mov %r14,%rsi
86d6(3): mov %r13d,%edi
86d9(4): call 0x0(%r12,%rbx,8)
86dd(4): add $0x1,%rbx
86e1(3): cmp %rbx,%rbp
86e4(2): jnz 0xffffffec(%rip)
86e6(4): add $0x8,%rsp
86ea(1): pop %rbx
86eb(1): pop %rbp
86ec(2): pop %r12
86ee(2): pop %r13
86f0(2): pop %r14
86f2(2): pop %r15
86f4(1): ret near (%rsp)

"atexit" :
8710(7): mov 0x2038f1(%rip),%rdx
8717(2): xor %esi,%esi
8719(5): jmp 0xffff9347(%rip)

"_fini" :
8720(4): sub $0x8,%rsp
8724(4): add $0x8,%rsp
8728(1): ret near (%rsp)

