
"free@plt" :
1500(6): jmp 0x20893a(%rip)
1506(5): push $0x0

"abort@plt" :
1510(6): jmp 0x208932(%rip)
1516(5): push $0x1

"__errno_location@plt" :
1520(6): jmp 0x20892a(%rip)
1526(5): push $0x2

"strncmp@plt" :
1530(6): jmp 0x208922(%rip)
1536(5): push $0x3

"_exit@plt" :
1540(6): jmp 0x20891a(%rip)
1546(5): push $0x4

"__fpending@plt" :
1550(6): jmp 0x208912(%rip)
1556(5): push $0x5

"clearerr_unlocked@plt" :
1560(6): jmp 0x20890a(%rip)
1566(5): push $0x6

"textdomain@plt" :
1570(6): jmp 0x208902(%rip)
1576(5): push $0x7

"fclose@plt" :
1580(6): jmp 0x2088fa(%rip)
1586(5): push $0x8

"bindtextdomain@plt" :
1590(6): jmp 0x2088f2(%rip)
1596(5): push $0x9

"dcgettext@plt" :
15a0(6): jmp 0x2088ea(%rip)
15a6(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
15b0(6): jmp 0x2088e2(%rip)
15b6(5): push $0xb

"strlen@plt" :
15c0(6): jmp 0x2088da(%rip)
15c6(5): push $0xc

"__stack_chk_fail@plt" :
15d0(6): jmp 0x2088d2(%rip)
15d6(5): push $0xd

"getopt_long@plt" :
15e0(6): jmp 0x2088ca(%rip)
15e6(5): push $0xe

"mbrtowc@plt" :
15f0(6): jmp 0x2088c2(%rip)
15f6(5): push $0xf

"strchr@plt" :
1600(6): jmp 0x2088ba(%rip)
1606(5): push $0x10

"strrchr@plt" :
1610(6): jmp 0x2088b2(%rip)
1616(5): push $0x11

"lseek@plt" :
1620(6): jmp 0x2088aa(%rip)
1626(5): push $0x12

"__assert_fail@plt" :
1630(6): jmp 0x2088a2(%rip)
1636(5): push $0x13

"__strtoul_internal@plt" :
1640(6): jmp 0x20889a(%rip)
1646(5): push $0x14

"memset@plt" :
1650(6): jmp 0x208892(%rip)
1656(5): push $0x15

"close@plt" :
1660(6): jmp 0x20888a(%rip)
1666(5): push $0x16

"memchr@plt" :
1670(6): jmp 0x208882(%rip)
1676(5): push $0x17

"read@plt" :
1680(6): jmp 0x20887a(%rip)
1686(5): push $0x18

"memcmp@plt" :
1690(6): jmp 0x208872(%rip)
1696(5): push $0x19

"fputs_unlocked@plt" :
16a0(6): jmp 0x20886a(%rip)
16a6(5): push $0x1a

"calloc@plt" :
16b0(6): jmp 0x208862(%rip)
16b6(5): push $0x1b

"memcpy@plt" :
16c0(6): jmp 0x20885a(%rip)
16c6(5): push $0x1c

"fileno@plt" :
16d0(6): jmp 0x208852(%rip)
16d6(5): push $0x1d

"malloc@plt" :
16e0(6): jmp 0x20884a(%rip)
16e6(5): push $0x1e

"fflush@plt" :
16f0(6): jmp 0x208842(%rip)
16f6(5): push $0x1f

"nl_langinfo@plt" :
1700(6): jmp 0x20883a(%rip)
1706(5): push $0x20

"__fxstat@plt" :
1710(6): jmp 0x208832(%rip)
1716(5): push $0x21

"__freading@plt" :
1720(6): jmp 0x20882a(%rip)
1726(5): push $0x22

"fwrite_unlocked@plt" :
1730(6): jmp 0x208822(%rip)
1736(5): push $0x23

"realloc@plt" :
1740(6): jmp 0x20881a(%rip)
1746(5): push $0x24

"setlocale@plt" :
1750(6): jmp 0x208812(%rip)
1756(5): push $0x25

"__printf_chk@plt" :
1760(6): jmp 0x20880a(%rip)
1766(5): push $0x26

"error@plt" :
1770(6): jmp 0x208802(%rip)
1776(5): push $0x27

"memrchr@plt" :
1780(6): jmp 0x2087fa(%rip)
1786(5): push $0x28

"open@plt" :
1790(6): jmp 0x2087f2(%rip)
1796(5): push $0x29

"fseeko@plt" :
17a0(6): jmp 0x2087ea(%rip)
17a6(5): push $0x2a

"__cxa_atexit@plt" :
17b0(6): jmp 0x2087e2(%rip)
17b6(5): push $0x2b

"exit@plt" :
17c0(6): jmp 0x2087da(%rip)
17c6(5): push $0x2c

"fwrite@plt" :
17d0(6): jmp 0x2087d2(%rip)
17d6(5): push $0x2d

"__fprintf_chk@plt" :
17e0(6): jmp 0x2087ca(%rip)
17e6(5): push $0x2e

"mbsinit@plt" :
17f0(6): jmp 0x2087c2(%rip)
17f6(5): push $0x2f

"iswprint@plt" :
1800(6): jmp 0x2087ba(%rip)
1806(5): push $0x30

"__ctype_b_loc@plt" :
1810(6): jmp 0x2087b2(%rip)
1816(5): push $0x31

".plt.got" :
1820(6): jmp 0x2087ca(%rip)
1826(2): nop 

"_init" :
14d8(4): sub $0x8,%rsp
14dc(7): mov 0x208afd(%rip),%rax
14e3(3): test %rax,%rax
14e6(2): jz 0x4(%rip)
14e8(2): call %rax
14ea(4): add $0x8,%rsp
14ee(1): ret near (%rsp)

"main" :
1830(2): push %r15
1832(2): push %r14
1834(2): push %r13
1836(2): push %r12
1838(1): push %rbp
1839(1): push %rbx
183a(2): mov %edi,%ebp
183c(3): mov %rsi,%rbx
183f(7): sub $0x158,%rsp
1846(3): mov (%rsi),%rdi
1849(9): mov $0x28,%rax
1852(8): mov %rax,0x148(%rsp)
185a(2): xor %eax,%eax
185c(5): call 0x2094(%rip)
1861(7): lea 0x5db9(%rip),%rsi
1868(5): mov $0x6,%edi
186d(5): call 0xfffffee3(%rip)
1872(7): lea 0x50dc(%rip),%rsi
1879(7): lea 0x50ac(%rip),%rdi
1880(5): call 0xfffffd10(%rip)
1885(7): lea 0x50a0(%rip),%rdi
188c(5): call 0xfffffce4(%rip)
1891(7): lea 0x1e38(%rip),%rdi
1898(5): call 0x4f38(%rip)
189d(3): cmp $0x1,%ebp
18a0(7): mov $0x0,0x208842(%rip)
18a7(7): mov $0x0,0x20883d(%rip)
18ae(7): mov $0xa,0x208835(%rip)
18b5(2): jle 0xf(%rip)
18b7(4): mov 0x8(%rbx),%rsi
18bb(3): cmp $0x2d,(%rsi)
18be(6): jz 0x1b5(%rip)
18c4(8): mov $0x1,0x8a(%rsp)
18cc(6): mov $0xa,%r15d
18d2(3): xor %r12d,%r12d
18d5(8): mov $0x0,0x89(%rsp)
18dd(6): mov $0x1,%r13d
18e3(5): nop 0x0(%rax,%rax,1)
18e8(7): lea 0x2081b1(%rip),%rcx
18ef(7): lea 0x50b2(%rip),%rdx
18f6(3): xor %r8d,%r8d
18f9(3): mov %rbx,%rsi
18fc(2): mov %ebp,%edi
18fe(5): call 0xfffffce2(%rip)
1903(3): cmp $0xff,%eax
1906(6): jz 0x1e2(%rip)
190c(3): cmp $0x6e,%eax
190f(6): jz 0xf1(%rip)
1915(2): jle 0x33(%rip)
1917(3): cmp $0x76,%eax
191a(6): jz 0x14e(%rip)
1920(6): jle 0x130(%rip)
1926(3): cmp $0x7a,%eax
1929(6): jz 0x117(%rip)
192f(5): cmp $0x80,%eax
1934(6): jnz 0xeea(%rip)
193a(7): mov %r13b,0x2087ab(%rip)
1941(2): jmp 0xffffffa7(%rip)
1943(5): nop 0x0(%rax,%rax,1)
1948(5): cmp $0xffffff7e,%eax
194d(6): jz 0xeca(%rip)
1953(3): cmp $0x63,%eax
1956(2): jz 0x6a(%rip)
1958(5): cmp $0xffffff7d,%eax
195d(3): mov %eax,%r14d
1960(2): jz 0x20(%rip)
1962(4): lea 0xffffffd0(%r14),%eax
1966(3): cmp $0x9,%eax
1969(6): jbe 0xec2(%rip)
196f(5): mov $0x1,%edi
1974(5): call 0x190c(%rip)
1979(7): nop 0x0(%rax)
1980(4): sub $0x8,%rsp
1984(7): mov 0x20871d(%rip),%rdi
198b(7): mov 0x208686(%rip),%rcx
1992(2): push $0x0
1994(7): lea 0x4ff0(%rip),%r9
199b(7): lea 0x4ff6(%rip),%r8
19a2(7): lea 0x4f7f(%rip),%rdx
19a9(7): lea 0x4efd(%rip),%rsi
19b0(2): xor %eax,%eax
19b2(5): call 0x418e(%rip)
19b7(2): xor %edi,%edi
19b9(5): call 0xfffffe07(%rip)
19be(2): nop 
19c0(7): mov 0x2086f1(%rip),%rsi
19c7(3): movzx (%rsi),%eax
19ca(2): cmp $0x2d,%al
19cc(8): setz 0x89(%rsp)
19d4(2): jnz 0xd(%rip)
19d6(4): add $0x1,%rsi
19da(7): mov %rsi,0x2086d7(%rip)
19e1(2): xor %edi,%edi
19e3(5): call 0x108d(%rip)
19e8(8): mov $0x0,0x8a(%rsp)
19f0(3): mov %rax,%r15
19f3(5): jmp 0xfffffef5(%rip)
19f8(8): nop 0x0(%rax,%rax,1)
1a00(7): mov 0x2086b1(%rip),%rsi
1a07(3): movzx (%rsi),%eax
1a0a(2): cmp $0x2d,%al
1a0c(8): setz 0x89(%rsp)
1a14(2): jnz 0xd(%rip)
1a16(4): add $0x1,%rsi
1a1a(7): mov %rsi,0x208697(%rip)
1a21(5): mov $0x1,%edi
1a26(5): call 0x104a(%rip)
1a2b(8): mov $0x1,0x8a(%rsp)
1a33(3): mov %rax,%r15
1a36(5): jmp 0xfffffeb2(%rip)
1a3b(5): nop 0x0(%rax,%rax,1)
1a40(7): mov $0x0,0x2086a3(%rip)
1a47(5): jmp 0xfffffea1(%rip)
1a4c(4): nop 0x0(%rax)
1a50(3): cmp $0x71,%eax
1a53(6): jnz 0xdcb(%rip)
1a59(6): mov $0x2,%r12d
1a5f(5): jmp 0xfffffe89(%rip)
1a64(4): nop 0x0(%rax)
1a68(6): mov $0x1,%r12d
1a6e(5): jmp 0xfffffe7a(%rip)
1a73(4): movsx 0x1(%rsi),%eax
1a77(3): sub $0x30,%eax
1a7a(3): cmp $0x9,%eax
1a7d(6): jnbe 0xfffffe47(%rip)
1a83(4): add $0x1,%rsi
1a87(3): mov %rsi,%rdi
1a8a(6): nop 0x0(%rax,%rax,1)
1a90(4): add $0x1,%rdi
1a94(3): movsx (%rdi),%eax
1a97(3): mov %eax,%r13d
1a9a(3): sub $0x30,%eax
1a9d(3): cmp $0x9,%eax
1aa0(2): jbe 0xfffffff0(%rip)
1aa2(3): test %r13b,%r13b
1aa5(6): jz 0xd4f(%rip)
1aab(7): lea 0x557a(%rip),%rcx
1ab2(3): mov %rdi,%rdx
1ab5(3): xor %r9d,%r9d
1ab8(6): mov $0xa,%r10d
1abe(3): xor %r8d,%r8d
1ac1(6): mov $0x1,%r11d
1ac7(3): xor %r12d,%r12d
1aca(6): nop 0x0(%rax,%rax,1)
1ad0(4): lea 0xffffff9e(%r13),%eax
1ad4(2): cmp $0x18,%al
1ad6(6): jnbe 0xd7e(%rip)
1adc(3): movzx %al,%eax
1adf(4): movsxd 0x0(%rcx,%rax,4),%rax
1ae3(3): add %rcx,%rax
1ae6(2): jmp %rax
1ae8(4): cmp $0x1,%r12d
1aec(2): jz 0x12(%rip)
1aee(3): test %r12d,%r12d
1af1(2): jnz 0x14(%rip)
1af3(3): lea 0xffffffff(%rbp),%eax
1af6(6): cmp 0x2085b4(%rip),%eax
1afc(2): jle 0x9(%rip)
1afe(7): mov $0x1,0x2085e6(%rip)
1b05(8): cmp $0x0,0x8a(%rsp)
1b0d(2): jnz 0x15(%rip)
1b0f(8): cmp $0x0,0x89(%rsp)
1b17(2): jz 0xb(%rip)
1b19(3): test %r15,%r15
1b1c(6): js 0xd5a(%rip)
1b22(7): movsxd 0x208587(%rip),%rax
1b29(2): cmp %ebp,%eax
1b2b(6): jnl 0x4f1(%rip)
1b31(4): lea 0x0(%rbx,%rax,8),%rdx
1b35(3): mov (%rdx),%rbp
1b38(3): test %rbp,%rbp
1b3b(6): jz 0x408(%rip)
1b41(7): lea 0x55a2(%rip),%rax
1b48(5): mov %rax,0x20(%rsp)
1b4d(3): mov %r15,%rcx
1b50(5): mov $0x2000,%eax
1b55(5): mov %r15,0x18(%rsp)
1b5a(6): and $0x1fff,%ecx
1b60(8): mov $0x1,0x8b(%rsp)
1b68(3): sub %rcx,%rax
1b6b(5): mov %rcx,0x78(%rsp)
1b70(5): mov %rax,0x60(%rsp)
1b75(3): add %r15,%rax
1b78(4): shr $0xd,%rax
1b7c(4): add $0x1,%rax
1b80(5): mov %rax,0x28(%rsp)
1b85(3): shr $0x1,%rax
1b88(5): mov %rax,0x58(%rsp)
1b8d(7): lea 0x2000(%r15),%rax
1b94(3): mov %rbp,%r15
1b97(5): mov %rax,0x68(%rsp)
1b9c(3): add %rax,%rax
1b9f(5): mov %rax,0x70(%rsp)
1ba4(4): lea 0x8(%rdx),%rax
1ba8(5): mov %rax,0x10(%rsp)
1bad(8): lea 0xa0(%rsp),%rax
1bb5(5): mov %rax,0x50(%rsp)
1bba(5): jmp 0xc2(%rip)
1bbf(7): lea 0x4dfb(%rip),%rsi
1bc6(5): mov $0x5,%edx
1bcb(2): xor %edi,%edi
1bcd(7): mov $0x1,0x208515(%rip)
1bd4(5): call 0xfffff9cc(%rip)
1bd9(8): mov $0x0,0xc(%rsp)
1be1(3): mov %rax,%r15
1be4(7): cmp $0x0,0x208500(%rip)
1beb(2): jz 0x38(%rip)
1bed(7): cmp $0x0,0x20841c(%rip)
1bf4(7): lea 0x5a25(%rip),%rax
1bfb(7): lea 0x5a1f(%rip),%rdx
1c02(7): lea 0x4de2(%rip),%rsi
1c09(3): mov %r15,%rcx
1c0c(5): mov $0x1,%edi
1c11(4): cmove %rax,%rdx
1c15(2): xor %eax,%eax
1c17(5): call 0xfffffb49(%rip)
1c1c(7): mov $0x0,0x2083ed(%rip)
1c23(8): cmp $0x0,0x89(%rsp)
1c2b(6): jnz 0x188(%rip)
1c31(8): cmp $0x0,0x8a(%rsp)
1c39(5): mov 0x18(%rsp),%rdx
1c3e(3): mov %r15,%rdi
1c41(4): mov 0xc(%rsp),%esi
1c45(6): jnz 0x2ba(%rip)
1c4b(5): call 0x1225(%rip)
1c50(3): mov %eax,%r12d
1c53(3): test %r13d,%r13d
1c56(6): jnz 0x12b(%rip)
1c5c(6): add $0x8,0x10(%rsp)
1c62(8): and %r12b,0x8b(%rsp)
1c6a(5): mov 0x10(%rsp),%rax
1c6f(4): mov 0xfffffff8(%rax),%r15
1c73(3): test %r15,%r15
1c76(6): jz 0x2d5(%rip)
1c7c(5): mov 0x20(%rsp),%rdi
1c81(5): mov $0x2,%ecx
1c86(3): mov %r15,%rsi
1c89(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c8b(3): setnbe %al
1c8e(2): sbb $0x0,%al
1c90(4): movsx %al,%r13d
1c94(3): test %r13d,%r13d
1c97(6): jz 0xffffff28(%rip)
1c9d(2): xor %esi,%esi
1c9f(2): xor %eax,%eax
1ca1(3): mov %r15,%rdi
1ca4(5): call 0xfffffaec(%rip)
1ca9(2): test %eax,%eax
1cab(4): mov %eax,0xc(%rsp)
1caf(6): jns 0xffffff35(%rip)
1cb5(3): mov %r15,%rsi
1cb8(5): mov $0x4,%edi
1cbd(5): call 0x3673(%rip)
1cc2(7): lea 0x4d07(%rip),%rsi
1cc9(3): mov %rax,%rbx
1ccc(5): mov $0x5,%edx
1cd1(2): xor %edi,%edi
1cd3(3): xor %r12d,%r12d
1cd6(5): call 0xfffff8ca(%rip)
1cdb(3): mov %rax,%rbp
1cde(5): call 0xfffff842(%rip)
1ce3(2): mov (%rax),%esi
1ce5(3): mov %rbx,%rcx
1ce8(3): mov %rbp,%rdx
1ceb(2): xor %edi,%edi
1ced(2): xor %eax,%eax
1cef(5): call 0xfffffa81(%rip)
1cf4(5): jmp 0xffffff68(%rip)
1cf9(6): mov $0x1,%r9d
1cff(3): xor %r10d,%r10d
1d02(6): nop 0x0(%rax,%rax,1)
1d08(4): add $0x1,%rdx
1d0c(4): movzx (%rdx),%r13d
1d10(3): test %r13b,%r13b
1d13(6): jnz 0xfffffdbd(%rip)
1d19(3): test %r9b,%r9b
1d1c(8): mov %r11b,0x8a(%rsp)
1d24(6): jnz 0xb9e(%rip)
1d2a(3): test %r8b,%r8b
1d2d(3): mov %r8b,(%rdi)
1d30(2): jz 0x6(%rip)
1d32(4): mov $0x0,0x1(%rdi)
1d36(8): movzx 0x8a(%rsp),%edi
1d3e(4): add $0x8,%rbx
1d42(3): sub $0x1,%ebp
1d45(5): call 0xd2b(%rip)
1d4a(3): mov %rax,%r15
1d4d(4): mov 0xfffffff8(%rbx),%rax
1d51(3): mov %rax,(%rbx)
1d54(5): jmp 0xfffffb81(%rip)
1d59(6): mov $0x1,%r12d
1d5f(2): jmp 0xffffffa9(%rip)
1d61(6): mov $0x2,%r12d
1d67(2): jmp 0xffffffa1(%rip)
1d69(6): mov $0x1,%r11d
1d6f(2): jmp 0xffffff99(%rip)
1d71(3): xor %r8d,%r8d
1d74(3): xor %r11d,%r11d
1d77(2): jmp 0xffffff91(%rip)
1d79(3): mov %r13d,%r8d
1d7c(3): xor %r11d,%r11d
1d7f(2): jmp 0xffffff89(%rip)
1d81(4): mov 0xc(%rsp),%edi
1d85(5): call 0xfffff8db(%rip)
1d8a(2): test %eax,%eax
1d8c(6): jz 0xfffffed0(%rip)
1d92(3): mov %r15,%rsi
1d95(5): mov $0x4,%edi
1d9a(5): call 0x3596(%rip)
1d9f(5): mov $0x5,%edx
1da4(3): mov %rax,%rbx
1da7(7): lea 0x4c5b(%rip),%rsi
1dae(5): jmp 0xffffff23(%rip)
1db3(5): mov 0x50(%rsp),%rdx
1db8(4): mov 0xc(%rsp),%esi
1dbc(5): mov $0x1,%edi
1dc1(5): call 0xfffff94f(%rip)
1dc6(2): test %eax,%eax
1dc8(6): jnz 0x210(%rip)
1dce(7): cmp $0x0,0x208317(%rip)
1dd5(2): jnz 0x19(%rip)
1dd7(7): mov 0xb8(%rsp),%eax
1dde(5): and $0xd000,%eax
1de3(5): cmp $0x8000,%eax
1de8(6): jz 0x5fb(%rip)
1dee(8): cmp $0x0,0x8a(%rsp)
1df6(9): mov $0xffffffff,0x40(%rsp)
1dff(6): jnz 0x246(%rip)
1e05(9): cmp $0x100000,0x18(%rsp)
1e0e(5): mov 0x40(%rsp),%rax
1e13(5): mov %rax,0x30(%rsp)
1e18(6): jbe 0x72e(%rip)
1e1e(6): mov $0x1,%r10d
1e24(8): mov %r13d,0x8c(%rsp)
1e2c(9): mov $0x0,0x48(%rsp)
1e35(2): xor %ebp,%ebp
1e37(3): xor %r14d,%r14d
1e3a(3): xor %r12d,%r12d
1e3d(2): xor %ebx,%ebx
1e3f(8): mov %r15,0x80(%rsp)
1e47(3): mov %r10,%r13
1e4a(3): test %r12,%r12
1e4d(6): jnz 0x429(%rip)
1e53(5): mov 0x28(%rsp),%rax
1e58(6): mov $0x10,%r12d
1e5e(4): cmp $0x10,%rax
1e62(4): cmovbe %rax,%r12
1e66(8): lea 0x0(,%r12,8),%rsi
1e6e(3): mov %r14,%rdi
1e71(3): mov %rbx,%r15
1e74(3): mov %r12,%rbx
1e77(3): mov %r13,%r12
1e7a(5): call 0x3e86(%rip)
1e7f(3): mov %rax,%r14
1e82(3): test %bpl,%bpl
1e85(4): lea 0x0(%r14,%r15,8),%r13
1e89(6): jz 0x106(%rip)
1e8f(4): mov 0x0(%r13),%rsi
1e93(4): mov 0xc(%rsp),%edi
1e97(5): mov $0x2000,%edx
1e9c(5): call 0x18e4(%rip)
1ea1(6): cmp $0x1fff,%rax
1ea7(3): mov %rax,%r13
1eaa(2): jbe 0x62(%rip)
1eac(5): add %rax,0x30(%rsp)
1eb1(3): xor %r9d,%r9d
1eb4(4): mov 0x0(%r14,%r12,8),%rdi
1eb8(3): mov %r13,%rsi
1ebb(5): mov %r9b,0x38(%rsp)
1ec0(5): call 0xcd0(%rip)
1ec5(8): movzx 0x89(%rsp),%ebp
1ecd(6): movzx 0x38(%rsp),%r9d
1ed3(5): lea 0x1(%r12),%rsi
1ed8(2): xor %edx,%edx
1eda(3): mov %rsi,%rax
1edd(5): div 0x28(%rsp),%rax
1ee2(3): test %r9b,%r9b
1ee5(3): mov %rdx,%r10
1ee8(6): jnz 0x587(%rip)
1eee(3): cmp %r12,%rbx
1ef1(3): mov %r12,%r15
1ef4(6): jz 0x143(%rip)
1efa(3): mov %rdx,%r12
1efd(2): jmp 0xffffff85(%rip)
1eff(5): call 0xde1(%rip)
1f04(3): mov %eax,%r12d
1f07(5): jmp 0xfffffd4c(%rip)
1f0c(5): call 0xfffff614(%rip)
1f11(3): cmp $0x0,(%rax)
1f14(6): jnz 0x7c0(%rip)
1f1a(9): movzx 0x89(%rsp),%r9d
1f23(4): lea 0x1(%r15),%r10
1f27(5): cmp 0x28(%rsp),%r10
1f2c(3): setz %al
1f2f(3): or %al,%bpl
1f32(2): jz 0xffffffa1(%rip)
1f34(5): add %r13,0x30(%rsp)
1f39(3): test %r13,%r13
1f3c(2): jz 0xffffff97(%rip)
1f3e(5): jmp 0xffffff76(%rip)
1f43(8): mov $0x1,0x8b(%rsp)
1f4b(7): cmp $0x0,0x208197(%rip)
1f52(6): jnz 0x33b(%rip)
1f58(8): movzx 0x8b(%rsp),%eax
1f60(3): xor $0x1,%eax
1f63(8): mov 0x148(%rsp),%rcx
1f6b(9): xor $0x28,%rcx
1f74(3): movzx %al,%eax
1f77(6): jnz 0x8af(%rip)
1f7d(7): add $0x158,%rsp
1f84(1): pop %rbx
1f85(1): pop %rbp
1f86(2): pop %r12
1f88(2): pop %r13
1f8a(2): pop %r14
1f8c(2): pop %r15
1f8e(1): ret near (%rsp)
1f8f(5): mov $0x2000,%edi
1f94(5): call 0x3d0c(%rip)
1f99(4): mov 0xc(%rsp),%edi
1f9d(4): lea 0x1(%r15),%r10
1fa1(4): mov %rax,0x0(%r13)
1fa5(5): mov $0x2000,%edx
1faa(3): mov %rax,%rsi
1fad(5): mov %r10,0x48(%rsp)
1fb2(5): mov %r10,0x38(%rsp)
1fb7(5): call 0x17c9(%rip)
1fbc(6): cmp $0x1fff,%rax
1fc2(3): mov %rax,%r13
1fc5(5): mov 0x38(%rsp),%r10
1fca(6): jbe 0xffffff42(%rip)
1fd0(3): xor %r9d,%r9d
1fd3(5): jmp 0xffffff54(%rip)
1fd8(3): mov %r15,%rsi
1fdb(5): mov $0x4,%edi
1fe0(3): xor %r12d,%r12d
1fe3(5): call 0x334d(%rip)
1fe8(7): lea 0x4a0a(%rip),%rsi
1fef(5): mov $0x5,%edx
1ff4(2): xor %edi,%edi
1ff6(3): mov %rax,%rbx
1ff9(5): call 0xfffff5a7(%rip)
1ffe(3): mov %rax,%rbp
2001(5): call 0xfffff51f(%rip)
2006(2): mov (%rax),%esi
2008(3): mov %rbx,%rcx
200b(3): mov %rbp,%rdx
200e(2): xor %edi,%edi
2010(2): xor %eax,%eax
2012(5): call 0xfffff75e(%rip)
2017(5): jmp 0xfffffc3c(%rip)
201c(7): lea 0x50c7(%rip),%rax
2023(7): lea 0x207a56(%rip),%rdx
202a(5): mov %rax,0x20(%rsp)
202f(3): mov %rax,%rbp
2032(5): jmp 0xfffffb1b(%rip)
2037(3): mov %rbx,%r12
203a(3): mov %r10,%r13
203d(3): mov %r15,%rbx
2040(5): jmp 0xfffffe0a(%rip)
2045(5): mov 0x40(%rsp),%rax
204a(5): mov $0x2018,%edi
204f(5): mov %rax,0x48(%rsp)
2054(5): call 0x3c4c(%rip)
2059(5): mov $0x2018,%edi
205e(b): mov $0x0,0x2008(%rax)
2069(b): mov $0x0,0x2000(%rax)
2074(b): mov $0x0,0x2010(%rax)
207f(3): mov %rax,%rbp
2082(5): mov %rax,0x30(%rsp)
2087(5): call 0x3c19(%rip)
208c(9): mov $0x0,0x38(%rsp)
2095(3): mov %rax,%rbx
2098(8): mov %r15,0x80(%rsp)
20a0(8): mov %r13d,0x8c(%rsp)
20a8(4): mov 0xc(%rsp),%edi
20ac(5): mov $0x2000,%edx
20b1(3): mov %rbx,%rsi
20b4(5): call 0x356c(%rip)
20b9(3): mov %rax,%r12
20bc(4): lea 0xffffffff(%rax),%rax
20c0(4): cmp $0xfffffffd,%rax
20c4(6): jnbe 0xf3(%rip)
20ca(6): cmp $0x0,0x18(%rsp)
20d0(2): jnz 0x14(%rip)
20d2(3): mov %r12,%rsi
20d5(3): mov %rbx,%rdi
20d8(5): add %r12,0x48(%rsp)
20dd(5): call 0xab3(%rip)
20e2(2): jmp 0xffffffc6(%rip)
20e4(7): mov %r12,0x2000(%rbx)
20eb(b): mov $0x0,0x2008(%rbx)
20f6(4): lea 0x0(%rbx,%r12,1),%r14
20fa(b): mov $0x0,0x2010(%rbx)
2105(8): movsx 0x207fdd(%rip),%r15d
210d(3): mov %rbx,%rdi
2110(3): xor %r13d,%r13d
2113(2): jmp 0x13(%rip)
2115(3): nop (%rax)
2118(4): lea 0x1(%rax),%rdi
211c(7): mov %rdx,0x2008(%rbx)
2123(3): mov %rdx,%r13
2126(3): mov %r14,%rdx
2129(3): mov %r15d,%esi
212c(3): sub %rdi,%rdx
212f(5): call 0xfffff541(%rip)
2134(3): test %rax,%rax
2137(4): lea 0x1(%r13),%rdx
213b(2): jnz 0xffffffdd(%rip)
213d(5): mov 0x30(%rsp),%rax
2142(5): add %r13,0x38(%rsp)
2147(7): mov 0x2000(%rax),%rax
214e(4): lea 0x0(%r12,%rax,1),%rdx
2152(7): cmp $0x1fff,%rdx
2159(6): jbe 0xe8(%rip)
215f(5): mov 0x30(%rsp),%rax
2164(7): mov %rbx,0x2010(%rax)
216b(5): mov 0x38(%rsp),%rax
2170(7): sub 0x2008(%rbp),%rax
2177(5): cmp %rax,0x18(%rsp)
217c(6): jnb 0x22c(%rip)
2182(7): mov 0x2000(%rbp),%rsi
2189(5): add %rsi,0x48(%rsp)
218e(3): test %rsi,%rsi
2191(6): jnz 0x3a8(%rip)
2197(7): mov 0x2008(%rbp),%rcx
219e(5): mov %rbx,0x30(%rsp)
21a3(3): mov %rbp,%rbx
21a6(5): sub %rcx,0x38(%rsp)
21ab(7): mov 0x2010(%rbp),%rbp
21b2(5): jmp 0xfffffef6(%rip)
21b7(3): mov %rbx,%rdi
21ba(8): mov 0x80(%rsp),%r15
21c2(8): mov 0x8c(%rsp),%r13d
21ca(5): call 0xfffff336(%rip)
21cf(4): add $0x1,%r12
21d3(6): jz 0x552(%rip)
21d9(5): mov 0x30(%rsp),%rcx
21de(7): mov 0x2000(%rcx),%rax
21e5(3): test %rax,%rax
21e8(6): jnz 0x1d7(%rip)
21ee(3): mov %rbp,%r14
21f1(5): mov %rbp,0x30(%rsp)
21f6(5): mov 0x18(%rsp),%rbx
21fb(5): mov 0x38(%rsp),%r12
2200(5): mov 0x48(%rsp),%rbp
2205(2): jmp 0x10(%rip)
2207(7): sub 0x2008(%r14),%r12
220e(7): mov 0x2010(%r14),%r14
2215(3): mov %r12,%rax
2218(7): sub 0x2008(%r14),%rax
221f(3): cmp %rax,%rbx
2222(6): jnb 0x94(%rip)
2228(7): mov 0x2000(%r14),%rsi
222f(3): add %rsi,%rbp
2232(3): test %rsi,%rsi
2235(2): jz 0xffffffd2(%rip)
2237(3): mov %r14,%rdi
223a(5): call 0x956(%rip)
223f(2): jmp 0xffffffc8(%rip)
2241(5): mov 0x30(%rsp),%r14
2246(3): mov %r12,%rdx
2249(3): mov %rbx,%rsi
224c(4): lea 0x0(%r14,%rax,1),%rdi
2250(5): call 0xfffff470(%rip)
2255(7): mov 0x2000(%rbx),%rax
225c(7): add %rax,0x2000(%r14)
2263(7): mov 0x2008(%rbx),%rax
226a(7): add %rax,0x2008(%r14)
2271(5): jmp 0xfffffe37(%rip)
2276(5): cmp %r12,0x58(%rsp)
227b(4): lea 0x0(%r12,%r12,1),%rax
227f(6): cmovnae 0x28(%rsp),%rax
2285(3): mov %rax,%r12
2288(5): jmp 0xfffffbde(%rip)
228d(2): xor %edi,%edi
228f(5): call 0xfffff3d1(%rip)
2294(2): test %eax,%eax
2296(6): jns 0xfffffcc2(%rip)
229c(5): call 0xfffff284(%rip)
22a1(2): mov (%rax),%esi
22a3(7): lea 0x4e40(%rip),%rdx
22aa(5): mov $0x1,%edi
22af(2): xor %eax,%eax
22b1(5): call 0xfffff4bf(%rip)
22b6(5): mov 0x18(%rsp),%rcx
22bb(3): mov %r12,%rax
22be(5): mov %rbp,0x48(%rsp)
22c3(9): movzx 0x89(%rsp),%r12d
22cc(5): mov 0x30(%rsp),%rbp
22d1(3): cmp %rax,%rcx
22d4(6): jnb 0x8b(%rip)
22da(3): mov %rax,%rbx
22dd(7): mov 0x2000(%r14),%r12
22e4(3): mov %r14,%rax
22e7(3): sub %rcx,%rbx
22ea(7): movsx 0x207df9(%rip),%ecx
22f1(3): mov %r14,%rbp
22f4(3): add %r14,%r12
22f7(3): mov %rbx,%r14
22fa(2): mov %ecx,%ebx
22fc(2): jmp 0x27(%rip)
22fe(3): mov %r12,%rdx
2301(2): mov %ebx,%esi
2303(3): mov %rax,%rdi
2306(3): sub %rax,%rdx
2309(5): call 0xfffff367(%rip)
230e(3): test %rax,%rax
2311(2): jz 0x17(%rip)
2313(8): add $0x1,0x2008(%rbp)
231b(4): add $0x1,%rax
231f(4): sub $0x1,%r14
2323(3): test %r14,%r14
2326(2): jnz 0xffffffd8(%rip)
2328(3): mov %rbp,%r14
232b(9): movzx 0x89(%rsp),%r12d
2334(5): mov 0x30(%rsp),%rbp
2339(3): sub %r14,%rax
233c(5): add %rax,0x48(%rsp)
2341(3): test %rax,%rax
2344(2): jz 0x1b(%rip)
2346(3): mov %r14,%rdi
2349(3): mov %rax,%rsi
234c(5): call 0x844(%rip)
2351(9): movzx 0x89(%rsp),%r12d
235a(3): mov %rbp,%rdi
235d(2): jmp 0x16(%rip)
235f(3): mov %rbp,%rdi
2362(2): jmp 0x11(%rip)
2364(7): mov 0x2010(%rdi),%rbx
236b(5): call 0xfffff195(%rip)
2370(3): mov %rbx,%rdi
2373(3): test %rdi,%rdi
2376(2): jnz 0xffffffee(%rip)
2378(6): cmp $0xffffffff,0x40(%rsp)
237e(6): jz 0xfffff8d5(%rip)
2384(5): mov 0x48(%rsp),%rsi
2389(4): mov 0xc(%rsp),%edi
238d(2): xor %edx,%edx
238f(3): mov %r15,%rcx
2392(5): call 0x73e(%rip)
2397(3): test %rax,%rax
239a(6): jns 0xfffff8b9(%rip)
23a0(3): xor %r12d,%r12d
23a3(5): jmp 0xfffff8b0(%rip)
23a8(5): mov $0x2018,%edi
23ad(5): call 0x38f3(%rip)
23b2(5): mov %rbx,0x30(%rsp)
23b7(3): mov %rax,%rbx
23ba(5): jmp 0xfffffcee(%rip)
23bf(7): movzx 0x207d24(%rip),%ebx
23c6(4): cmp %bl,0xffffffff(%rcx,%rax,1)
23ca(6): jz 0xfffffe24(%rip)
23d0(8): add $0x1,0x2008(%rcx)
23d8(6): add $0x1,0x38(%rsp)
23de(5): jmp 0xfffffe10(%rip)
23e3(4): mov 0xc(%rsp),%edi
23e7(2): xor %esi,%esi
23e9(3): mov %r15,%rcx
23ec(5): mov $0x1,%edx
23f1(5): call 0x6df(%rip)
23f6(3): test %rax,%rax
23f9(5): mov %rax,0x40(%rsp)
23fe(2): js 0xffffffa2(%rip)
2400(8): cmp $0x0,0x8a(%rsp)
2408(8): mov 0xd0(%rsp),%r8
2410(8): movzx 0x207cd4(%rip),%r9d
2418(6): jz 0x4b6(%rip)
241e(3): test %r9b,%r9b
2421(6): jnz 0xfffffc24(%rip)
2427(8): mov 0xd8(%rsp),%rax
242f(a): mov $0x2305843009213693951,%rcx
2439(4): lea 0xffffffff(%rax),%rdx
243d(3): cmp %rcx,%rdx
2440(5): mov $0x200,%edx
2445(4): cmovnbe %rdx,%rax
2449(3): cmp %r8,%rax
244c(6): jnl 0xfffffbf9(%rip)
2452(5): cmp %r8,0x40(%rsp)
2457(6): mov $0x1,%r9d
245d(6): jl 0x30f(%rip)
2463(3): mov %r9d,%r12d
2466(4): and $0x1,%r12d
246a(5): jmp 0xfffff7e9(%rip)
246f(3): test %bpl,%bpl
2472(3): mov %r13,%r8
2475(3): mov %r12,%rbx
2478(8): mov 0x80(%rsp),%r15
2480(5): mov %bpl,0x38(%rsp)
2485(3): mov %r9d,%r12d
2488(8): mov 0x8c(%rsp),%r13d
2490(6): jz 0x215(%rip)
2496(5): mov 0x60(%rsp),%rcx
249b(4): mov 0x0(%r14,%rbx,8),%rdi
249f(5): mov $0x2000,%ebp
24a4(3): sub %r8,%rbp
24a7(5): add %rcx,0x30(%rsp)
24ac(3): add %r8,%rdi
24af(3): cmp %rbp,%rcx
24b2(6): jb 0x352(%rip)
24b8(3): test %rbp,%rbp
24bb(2): jz 0x1a(%rip)
24bd(3): mov %rbp,%rsi
24c0(8): mov %rdx,0x80(%rsp)
24c8(5): call 0x6c8(%rip)
24cd(8): mov 0x80(%rsp),%rdx
24d5(5): mov 0x60(%rsp),%rsi
24da(6): movzx 0x38(%rsp),%r12d
24e0(3): sub %rbp,%rsi
24e3(6): jnz 0x1e3(%rip)
24e9(2): xor %ebx,%ebx
24eb(5): mov 0x48(%rsp),%rbp
24f0(2): jmp 0xf(%rip)
24f2(4): mov 0x0(%r14,%rbx,8),%rdi
24f6(4): add $0x1,%rbx
24fa(5): call 0xfffff006(%rip)
24ff(3): cmp %rbp,%rbx
2502(2): jnz 0xfffffff0(%rip)
2504(3): mov %r14,%rdi
2507(5): call 0xffffeff9(%rip)
250c(6): cmp $0xffffffff,0x40(%rsp)
2512(6): jz 0xfffff741(%rip)
2518(5): mov 0x30(%rsp),%rsi
251d(4): mov 0xc(%rsp),%edi
2521(2): xor %edx,%edx
2523(3): mov %r15,%rcx
2526(5): call 0x5aa(%rip)
252b(3): test %rax,%rax
252e(6): jns 0xfffff725(%rip)
2534(5): jmp 0xfffffe6c(%rip)
2539(3): mov %rbp,%rdi
253c(5): call 0x654(%rip)
2541(5): jmp 0xfffffc56(%rip)
2546(5): mov 0x70(%rsp),%rdi
254b(2): xor %ebx,%ebx
254d(5): call 0x3753(%rip)
2552(5): mov 0x68(%rsp),%rcx
2557(9): movzx 0x89(%rsp),%r12d
2560(5): mov 0x18(%rsp),%rbp
2565(8): mov %rax,0x80(%rsp)
256d(8): mov %rax,0x90(%rsp)
2575(5): mov %r13d,0x48(%rsp)
257a(3): add %rcx,%rax
257d(5): mov %r15,0x38(%rsp)
2582(3): mov %rcx,%r13
2585(8): mov %rax,0x98(%rsp)
258d(3): movzx %bl,%eax
2590(4): mov 0xc(%rsp),%edi
2594(3): mov %r13,%rdx
2597(8): mov 0x90(%rsp,%rax,8),%r14
259f(3): mov %r14,%rsi
25a2(5): call 0x11de(%rip)
25a7(3): cmp %rax,%r13
25aa(3): mov %rax,%r15
25ad(2): jbe 0x5d(%rip)
25af(5): call 0xffffef71(%rip)
25b4(3): cmp $0x0,(%rax)
25b7(6): jnz 0x1ec(%rip)
25bd(3): cmp %r15,%rbp
25c0(2): jb 0x81(%rip)
25c2(3): test %r12b,%r12b
25c5(2): jnz 0x20(%rip)
25c7(2): mov %ebx,%eax
25c9(5): add %r15,0x30(%rsp)
25ce(3): xor $0x1,%eax
25d1(3): test %r15,%r15
25d4(3): movzx %al,%eax
25d7(8): mov 0x90(%rsp,%rax,8),%rax
25df(6): jnz 0x1ac(%rip)
25e5(9): movzx 0x89(%rsp),%r12d
25ee(5): mov 0x38(%rsp),%r15
25f3(5): mov 0x48(%rsp),%r13d
25f8(8): mov 0x80(%rsp),%rdi
2600(5): call 0xffffef00(%rip)
2605(5): jmp 0xffffff07(%rip)
260a(3): test %r12b,%r12b
260d(2): jz 0x42(%rip)
260f(3): xor %r12d,%r12d
2612(3): cmp %rax,%rbp
2615(6): jnb 0x8b(%rip)
261b(3): mov %r15,%rdx
261e(3): sub %rbp,%rdx
2621(5): add %rdx,0x30(%rsp)
2626(3): mov %rdx,%rsi
2629(3): mov %r14,%rdi
262c(5): call 0x564(%rip)
2631(3): xor $0x1,%ebx
2634(3): test %r12b,%r12b
2637(2): jnz 0x5a(%rip)
2639(3): xor %r12d,%r12d
263c(5): jmp 0xffffff51(%rip)
2641(3): test %r12b,%r12b
2644(2): jnz 0x3d(%rip)
2646(9): movzx 0x89(%rsp),%r12d
264f(2): mov %ebx,%eax
2651(5): add %rbp,0x30(%rsp)
2656(3): xor $0x1,%eax
2659(3): test %rbp,%rbp
265c(3): movzx %al,%eax
265f(8): mov 0x90(%rsp,%rax,8),%rax
2667(2): jnz 0x9(%rip)
2669(3): cmp %r15,%rbp
266c(2): jb 0xffffffaf(%rip)
266e(2): jmp 0xffffffc3(%rip)
2670(7): lea 0x2000(%rax),%rdi
2677(3): mov %rbp,%rsi
267a(5): call 0x516(%rip)
267f(2): jmp 0xffffffea(%rip)
2681(3): mov %r15,%rdx
2684(3): sub %rbp,%rdx
2687(5): add %rdx,0x30(%rsp)
268c(3): test %rdx,%rdx
268f(2): jnz 0xffffff97(%rip)
2691(5): mov 0x38(%rsp),%r15
2696(5): mov 0x48(%rsp),%r13d
269b(5): jmp 0xffffff5d(%rip)
26a0(3): xor $0x1,%ebx
26a3(2): jmp 0xffffff96(%rip)
26a5(5): cmp %rsi,0x28(%rsp)
26aa(6): jnz 0xfffffe3f(%rip)
26b0(3): mov %r8,%rsi
26b3(5): sub 0x78(%rsp),%rsi
26b8(5): add %rsi,0x30(%rsp)
26bd(3): test %rsi,%rsi
26c0(6): jz 0xfffffe29(%rip)
26c6(4): mov 0x0(%r14,%rdx,8),%rdi
26ca(5): call 0x4c6(%rip)
26cf(5): jmp 0xfffffe1a(%rip)
26d4(8): mov 0x80(%rsp),%r15
26dc(5): mov $0x4,%edi
26e1(3): mov %rax,%r12
26e4(8): mov 0x8c(%rsp),%r13d
26ec(3): mov %r15,%rsi
26ef(5): call 0x2c41(%rip)
26f4(7): lea 0x4184(%rip),%rsi
26fb(5): mov $0x5,%edx
2700(2): xor %edi,%edi
2702(3): mov %rax,%rbx
2705(5): call 0xffffee9b(%rip)
270a(4): mov (%r12),%esi
270e(3): mov %rax,%rdx
2711(3): mov %rbx,%rcx
2714(2): xor %edi,%edi
2716(2): xor %eax,%eax
2718(3): xor %r12d,%r12d
271b(5): call 0xfffff055(%rip)
2720(5): jmp 0xfffffdc9(%rip)
2725(3): mov %r15,%rsi
2728(5): mov $0x4,%edi
272d(5): call 0x2c03(%rip)
2732(7): lea 0x4146(%rip),%rsi
2739(5): mov $0x5,%edx
273e(2): xor %edi,%edi
2740(3): mov %rax,%rbx
2743(5): call 0xffffee5d(%rip)
2748(3): mov %rax,%r12
274b(5): call 0xffffedd5(%rip)
2750(2): mov (%rax),%esi
2752(3): mov %r12,%rdx
2755(2): xor %edi,%edi
2757(3): mov %rbx,%rcx
275a(2): xor %eax,%eax
275c(3): xor %r12d,%r12d
275f(5): call 0xfffff011(%rip)
2764(3): mov %rbp,%rdi
2767(5): jmp 0xfffffc0c(%rip)
276c(5): mov 0x40(%rsp),%rcx
2771(5): mov 0x18(%rsp),%rdx
2776(3): mov %r15,%rdi
2779(4): mov 0xc(%rsp),%esi
277d(5): call 0x863(%rip)
2782(4): movzx %al,%r9d
2786(5): jmp 0xfffffcdd(%rip)
278b(7): lea 0x2000(%rax),%rdi
2792(9): movzx 0x89(%rsp),%r12d
279b(3): mov %r15,%rsi
279e(5): jmp 0xfffffedc(%rip)
27a3(5): mov 0x38(%rsp),%r15
27a8(5): mov $0x4,%edi
27ad(5): mov 0x48(%rsp),%r13d
27b2(5): mov %rax,0x38(%rsp)
27b7(3): xor %r12d,%r12d
27ba(3): mov %r15,%rsi
27bd(5): call 0x2b73(%rip)
27c2(7): lea 0x40b6(%rip),%rsi
27c9(5): mov $0x5,%edx
27ce(2): xor %edi,%edi
27d0(3): mov %rax,%rbx
27d3(5): call 0xffffedcd(%rip)
27d8(5): mov 0x38(%rsp),%r8
27dd(3): mov %rax,%rdx
27e0(3): mov %rbx,%rcx
27e3(2): xor %edi,%edi
27e5(2): xor %eax,%eax
27e7(3): mov (%r8),%esi
27ea(5): call 0xffffef86(%rip)
27ef(5): jmp 0xfffffe09(%rip)
27f4(3): xor %r12d,%r12d
27f7(8): mov $0x1,0x8a(%rsp)
27ff(5): jmp 0xfffff537(%rip)
2804(3): mov %rcx,%rsi
2807(5): call 0x389(%rip)
280c(6): movzx 0x38(%rsp),%r12d
2812(5): jmp 0xfffffcd7(%rip)
2817(2): xor %edi,%edi
2819(5): call 0xa67(%rip)
281e(3): mov %eax,%r14d
2821(5): jmp 0xfffff141(%rip)
2826(5): call 0xffffedaa(%rip)
282b(7): lea 0x413b(%rip),%rsi
2832(5): mov $0x5,%edx
2837(2): xor %edi,%edi
2839(5): call 0xffffed67(%rip)
283e(3): mov %r14d,%ecx
2841(3): mov %rax,%rdx
2844(2): xor %esi,%esi
2846(2): xor %edi,%edi
2848(2): xor %eax,%eax
284a(5): call 0xffffef26(%rip)
284f(5): jmp 0xfffff120(%rip)
2854(3): test %r9b,%r9b
2857(6): jnz 0xf5(%rip)
285d(7): lea 0x4109(%rip),%rsi
2864(5): mov $0x5,%edx
2869(2): xor %edi,%edi
286b(5): call 0xffffed35(%rip)
2870(4): movsx %r13b,%ecx
2874(2): jmp 0xffffffcd(%rip)
2876(8): lea 0x130(%rsp),%rsi
287e(3): mov %r15,%rdi
2881(5): call 0x101f(%rip)
2886(3): mov %rax,%rdi
2889(5): call 0x2d77(%rip)
288e(7): lea 0x3f87(%rip),%rsi
2895(5): mov $0x5,%edx
289a(2): xor %edi,%edi
289c(3): mov %rax,%rbx
289f(5): call 0xffffed01(%rip)
28a4(7): lea 0x410f(%rip),%rdx
28ab(3): mov %rax,%rcx
28ae(3): mov %rbx,%r8
28b1(5): mov $0x4b,%esi
28b6(5): mov $0x1,%edi
28bb(2): xor %eax,%eax
28bd(5): call 0xffffeeb3(%rip)
28c2(7): mov %r10b,0x207821(%rip)
28c9(5): jmp 0xfffff461(%rip)
28ce(3): test %r9b,%r9b
28d1(3): mov %r9d,%r12d
28d4(6): jnz 0xfffff531(%rip)
28da(8): mov 0xd8(%rsp),%rax
28e2(a): mov $0x2305843009213693951,%rcx
28ec(4): lea 0xffffffff(%rax),%rdx
28f0(3): cmp %rcx,%rdx
28f3(5): mov $0x200,%edx
28f8(4): cmovnbe %rdx,%rax
28fc(3): cmp %rax,%r8
28ff(6): jle 0xfffff506(%rip)
2905(5): sub 0x40(%rsp),%r8
290a(5): mov $0x0,%eax
290f(4): cmovs %rax,%r8
2913(5): cmp %r8,0x18(%rsp)
2918(2): jb 0x10(%rip)
291a(9): movzx 0x89(%rsp),%r12d
2923(5): jmp 0xfffff330(%rip)
2928(3): mov %r8,%rsi
292b(5): sub 0x18(%rsp),%rsi
2930(4): mov 0xc(%rsp),%edi
2934(5): call 0x2dc(%rip)
2939(2): test %eax,%eax
293b(2): jz 0xffffffdf(%rip)
293d(3): mov %r15,%rsi
2940(2): mov %eax,%edi
2942(5): call 0x61e(%rip)
2947(5): jmp 0xfffff30c(%rip)
294c(7): mov %r10b,0x207797(%rip)
2953(5): jmp 0xffffff0a(%rip)

"_start" :
2960(2): xor %ebp,%ebp
2962(3): mov %rdx,%r9
2965(1): pop %rsi
2966(3): mov %rsp,%rdx
2969(4): and $0xfffffff0,%rsp
296d(1): push %rax
296e(1): push %rsp
296f(7): lea 0x3e4a(%rip),%r8
2976(7): lea 0x3dd3(%rip),%rcx
297d(7): lea 0xffffeeac(%rip),%rdi
2984(6): call 0x20764e(%rip)
298a(1): hlt 

"deregister_tm_clones" :
2990(7): lea 0x207709(%rip),%rdi
2997(1): push %rbp
2998(7): lea 0x207701(%rip),%rax
299f(3): cmp %rdi,%rax
29a2(3): mov %rsp,%rbp
29a5(2): jz 0x1b(%rip)
29a7(7): mov 0x207622(%rip),%rax
29ae(3): test %rax,%rax
29b1(2): jz 0xf(%rip)
29b3(1): pop %rbp
29b4(2): jmp %rax
29b6(a): nop 0x0(%rax,%rax,1)
29c0(1): pop %rbp
29c1(1): ret near (%rsp)

"register_tm_clones" :
29d0(7): lea 0x2076c9(%rip),%rdi
29d7(7): lea 0x2076c2(%rip),%rsi
29de(1): push %rbp
29df(3): sub %rdi,%rsi
29e2(3): mov %rsp,%rbp
29e5(4): sar $0x3,%rsi
29e9(3): mov %rsi,%rax
29ec(4): shr $0x3f,%rax
29f0(3): add %rax,%rsi
29f3(3): sar $0x1,%rsi
29f6(2): jz 0x1a(%rip)
29f8(7): mov 0x2075e9(%rip),%rax
29ff(3): test %rax,%rax
2a02(2): jz 0xe(%rip)
2a04(1): pop %rbp
2a05(2): jmp %rax
2a07(9): nop 0x0(%rax,%rax,1)
2a10(1): pop %rbp
2a11(1): ret near (%rsp)

"__do_global_dtors_aux" :
2a20(7): cmp $0x0,0x2076c1(%rip)
2a27(2): jnz 0x31(%rip)
2a29(8): cmp $0x0,0x2075bf(%rip)
2a31(1): push %rbp
2a32(3): mov %rsp,%rbp
2a35(2): jz 0xe(%rip)
2a37(7): mov 0x2075ca(%rip),%rdi
2a3e(5): call 0xffffede2(%rip)
2a43(5): call 0xffffff4d(%rip)
2a48(7): mov $0x1,0x207699(%rip)
2a4f(1): pop %rbp
2a50(1): ret near (%rsp)
2a51(7): nop 0x0(%rax)
2a58(2): REP ret near (%rsp)

"frame_dummy" :
2a60(1): push %rbp
2a61(3): mov %rsp,%rbp
2a64(1): pop %rbp
2a65(5): jmp 0xffffff6b(%rip)

"string_to_integer" :
2a70(3): test %dil,%dil
2a73(1): push %rbx
2a74(5): mov $0x5,%edx
2a79(3): mov %rsi,%rbx
2a7c(2): jnz 0x34(%rip)
2a7e(7): lea 0x3d97(%rip),%rsi
2a85(2): xor %edi,%edi
2a87(5): call 0xffffeb19(%rip)
2a8c(3): mov %rax,%r8
2a8f(3): mov %rbx,%rdi
2a92(7): lea 0x3d9b(%rip),%rcx
2a99(3): xor %r9d,%r9d
2a9c(1): pop %rbx
2a9d(7): mov $0xffffffff,%rdx
2aa4(2): xor %esi,%esi
2aa6(5): jmp 0x358a(%rip)
2aab(5): nop 0x0(%rax,%rax,1)
2ab0(7): lea 0x3d4d(%rip),%rsi
2ab7(2): xor %edi,%edi
2ab9(5): call 0xffffeae7(%rip)
2abe(3): mov %rax,%r8
2ac1(2): jmp 0xffffffce(%rip)

"elseek" :
2ad0(2): push %r13
2ad2(2): push %r12
2ad4(3): mov %rcx,%r13
2ad7(1): push %rbp
2ad8(1): push %rbx
2ad9(3): mov %rsi,%r12
2adc(2): mov %edx,%ebp
2ade(4): sub $0x28,%rsp
2ae2(9): mov $0x28,%rax
2aeb(5): mov %rax,0x18(%rsp)
2af0(2): xor %eax,%eax
2af2(5): call 0xffffeb2e(%rip)
2af7(3): test %rax,%rax
2afa(3): mov %rax,%rbx
2afd(2): js 0x23(%rip)
2aff(5): mov 0x18(%rsp),%rcx
2b04(9): xor $0x28,%rcx
2b0d(3): mov %rbx,%rax
2b10(2): jnz 0x6e(%rip)
2b12(4): add $0x28,%rsp
2b16(1): pop %rbx
2b17(1): pop %rbp
2b18(2): pop %r12
2b1a(2): pop %r13
2b1c(1): ret near (%rsp)
2b1d(3): nop (%rax)
2b20(3): mov %rsp,%rsi
2b23(3): mov %r12,%rdi
2b26(5): call 0xcda(%rip)
2b2b(3): mov %r13,%rdx
2b2e(2): xor %edi,%edi
2b30(5): mov $0x3,%esi
2b35(3): mov %rax,%r12
2b38(5): call 0x28f8(%rip)
2b3d(7): lea 0x3cfd(%rip),%rsi
2b44(3): mov %rax,%r13
2b47(7): lea 0x3f1a(%rip),%rax
2b4e(2): test %ebp,%ebp
2b50(5): mov $0x5,%edx
2b55(4): cmovne %rax,%rsi
2b59(2): xor %edi,%edi
2b5b(5): call 0xffffea45(%rip)
2b60(3): mov %rax,%rbp
2b63(5): call 0xffffe9bd(%rip)
2b68(2): mov (%rax),%esi
2b6a(3): mov %r12,%r8
2b6d(3): mov %r13,%rcx
2b70(3): mov %rbp,%rdx
2b73(2): xor %edi,%edi
2b75(2): xor %eax,%eax
2b77(5): call 0xffffebf9(%rip)
2b7c(2): jmp 0xffffff83(%rip)
2b7e(5): call 0xffffea52(%rip)

"xwrite_stdout.part.6" :
2b90(1): push %rbp
2b91(1): push %rbx
2b92(3): mov %rsi,%rdx
2b95(3): mov %rsi,%rbx
2b98(5): mov $0x1,%esi
2b9d(4): sub $0x8,%rsp
2ba1(7): mov 0x207500(%rip),%rcx
2ba8(5): call 0xffffeb88(%rip)
2bad(3): cmp %rax,%rbx
2bb0(2): jnbe 0x9(%rip)
2bb2(4): add $0x8,%rsp
2bb6(1): pop %rbx
2bb7(1): pop %rbp
2bb8(1): ret near (%rsp)
2bb9(7): mov 0x2074e8(%rip),%rdi
2bc0(5): call 0xffffe9a0(%rip)
2bc5(7): lea 0x3c92(%rip),%rsi
2bcc(5): mov $0x4,%edi
2bd1(5): call 0x275f(%rip)
2bd6(7): lea 0x3c91(%rip),%rsi
2bdd(5): mov $0x5,%edx
2be2(2): xor %edi,%edi
2be4(3): mov %rax,%rbp
2be7(5): call 0xffffe9b9(%rip)
2bec(3): mov %rax,%rbx
2bef(5): call 0xffffe931(%rip)
2bf4(2): mov (%rax),%esi
2bf6(3): mov %rbp,%rcx
2bf9(3): mov %rbx,%rdx
2bfc(5): mov $0x1,%edi
2c01(2): xor %eax,%eax
2c03(5): call 0xffffeb6d(%rip)
2c08(8): nop 0x0(%rax,%rax,1)
2c10(2): push %r13
2c12(2): push %r12
2c14(1): push %rbp
2c15(1): push %rbx
2c16(7): sub $0x2018,%rsp
2c1d(9): mov $0x28,%rax
2c26(8): mov %rax,0x2008(%rsp)
2c2e(2): xor %eax,%eax
2c30(3): test %rsi,%rsi
2c33(2): jz 0x63(%rip)
2c35(3): mov %edi,%r12d
2c38(3): mov %rsi,%rbx
2c3b(3): mov %rsp,%rbp
2c3e(6): mov $0x2000,%r13d
2c44(2): jmp 0x11(%rip)
2c46(a): nop 0x0(%rax,%rax,1)
2c50(3): test %rbx,%rbx
2c53(2): jz 0x43(%rip)
2c55(7): cmp $0x2000,%rbx
2c5c(3): mov %r13,%rdx
2c5f(3): mov %rbp,%rsi
2c62(4): cmovbe %rbx,%rdx
2c66(3): mov %r12d,%edi
2c69(5): call 0x29b7(%rip)
2c6e(4): cmp $0xffffffff,%rax
2c72(2): jz 0x4e(%rip)
2c74(3): sub %rax,%rbx
2c77(3): test %rax,%rax
2c7a(2): jnz 0x7(%rip)
2c7c(3): test %rbx,%rbx
2c7f(2): jnz 0x51(%rip)
2c81(3): test %rax,%rax
2c84(2): jz 0xffffffcc(%rip)
2c86(3): mov %rax,%rsi
2c89(3): mov %rbp,%rdi
2c8c(5): call 0xffffff04(%rip)
2c91(3): test %rbx,%rbx
2c94(2): jnz 0xffffffc1(%rip)
2c96(2): xor %eax,%eax
2c98(8): mov 0x2008(%rsp),%rcx
2ca0(9): xor $0x28,%rcx
2ca9(2): jnz 0x2e(%rip)
2cab(7): add $0x2018,%rsp
2cb2(1): pop %rbx
2cb3(1): pop %rbp
2cb4(2): pop %r12
2cb6(2): pop %r13
2cb8(1): ret near (%rsp)
2cb9(7): nop 0x0(%rax)
2cc0(5): mov $0x1,%eax
2cc5(2): jmp 0xffffffd3(%rip)
2cc7(9): nop 0x0(%rax,%rax,1)
2cd0(5): mov $0x2,%eax
2cd5(2): jmp 0xffffffc3(%rip)
2cd7(5): call 0xffffe8f9(%rip)

"copy_fd" :
2c10(2): push %r13
2c12(2): push %r12
2c14(1): push %rbp
2c15(1): push %rbx
2c16(7): sub $0x2018,%rsp
2c1d(9): mov $0x28,%rax
2c26(8): mov %rax,0x2008(%rsp)
2c2e(2): xor %eax,%eax
2c30(3): test %rsi,%rsi
2c33(2): jz 0x63(%rip)
2c35(3): mov %edi,%r12d
2c38(3): mov %rsi,%rbx
2c3b(3): mov %rsp,%rbp
2c3e(6): mov $0x2000,%r13d
2c44(2): jmp 0x11(%rip)
2c46(a): nop 0x0(%rax,%rax,1)
2c50(3): test %rbx,%rbx
2c53(2): jz 0x43(%rip)
2c55(7): cmp $0x2000,%rbx
2c5c(3): mov %r13,%rdx
2c5f(3): mov %rbp,%rsi
2c62(4): cmovbe %rbx,%rdx
2c66(3): mov %r12d,%edi
2c69(5): call 0x29b7(%rip)
2c6e(4): cmp $0xffffffff,%rax
2c72(2): jz 0x4e(%rip)
2c74(3): sub %rax,%rbx
2c77(3): test %rax,%rax
2c7a(2): jnz 0x7(%rip)
2c7c(3): test %rbx,%rbx
2c7f(2): jnz 0x51(%rip)
2c81(3): test %rax,%rax
2c84(2): jz 0xffffffcc(%rip)
2c86(3): mov %rax,%rsi
2c89(3): mov %rbp,%rdi
2c8c(5): call 0xffffff04(%rip)
2c91(3): test %rbx,%rbx
2c94(2): jnz 0xffffffc1(%rip)
2c96(2): xor %eax,%eax
2c98(8): mov 0x2008(%rsp),%rcx
2ca0(9): xor $0x28,%rcx
2ca9(2): jnz 0x2e(%rip)
2cab(7): add $0x2018,%rsp
2cb2(1): pop %rbx
2cb3(1): pop %rbp
2cb4(2): pop %r12
2cb6(2): pop %r13
2cb8(1): ret near (%rsp)
2cb9(7): nop 0x0(%rax)
2cc0(5): mov $0x1,%eax
2cc5(2): jmp 0xffffffd3(%rip)
2cc7(9): nop 0x0(%rax,%rax,1)
2cd0(5): mov $0x2,%eax
2cd5(2): jmp 0xffffffc3(%rip)
2cd7(5): call 0xffffe8f9(%rip)

"head_lines" :
2ce0(2): push %r15
2ce2(2): push %r14
2ce4(2): push %r13
2ce6(2): push %r12
2ce8(1): push %rbp
2ce9(1): push %rbx
2cea(7): sub $0x20a8,%rsp
2cf1(9): mov $0x28,%rax
2cfa(8): mov %rax,0x2098(%rsp)
2d02(2): xor %eax,%eax
2d04(3): test %rdx,%rdx
2d07(6): jz 0x111(%rip)
2d0d(8): lea 0x90(%rsp),%rbp
2d15(8): lea 0x8f(%rsp),%r15
2d1d(3): mov %rdi,%r13
2d20(3): mov %esi,%r12d
2d23(3): mov %rdx,%r14
2d26(5): mov $0x2000,%edx
2d2b(3): mov %rbp,%rsi
2d2e(3): mov %r12d,%edi
2d31(5): call 0x28ef(%rip)
2d36(4): cmp $0xffffffff,%rax
2d3a(6): jz 0x9e(%rip)
2d40(3): test %rax,%rax
2d43(6): jz 0xd5(%rip)
2d49(7): movzx 0x20739a(%rip),%edx
2d50(2): xor %ebx,%ebx
2d52(2): jmp 0xb(%rip)
2d54(4): nop 0x0(%rax)
2d58(3): cmp %rbx,%rax
2d5b(2): jz 0x6d(%rip)
2d5d(4): add $0x1,%rbx
2d61(4): cmp %dl,0x0(%r15,%rbx,1)
2d65(2): jnz 0xfffffff3(%rip)
2d67(4): sub $0x1,%r14
2d6b(2): jnz 0xffffffed(%rip)
2d6d(3): mov %rbx,%r14
2d70(5): mov $0x1,%edx
2d75(3): mov %r12d,%edi
2d78(3): sub %rax,%r14
2d7b(3): mov %r14,%rsi
2d7e(5): call 0xffffe8a2(%rip)
2d83(3): test %rax,%rax
2d86(6): js 0x9c(%rip)
2d8c(3): mov %rbx,%rsi
2d8f(3): mov %rbp,%rdi
2d92(5): call 0xfffffdfe(%rip)
2d97(5): mov $0x1,%eax
2d9c(8): mov 0x2098(%rsp),%rcx
2da4(9): xor $0x28,%rcx
2dad(6): jnz 0xb5(%rip)
2db3(7): add $0x20a8,%rsp
2dba(1): pop %rbx
2dbb(1): pop %rbp
2dbc(2): pop %r12
2dbe(2): pop %r13
2dc0(2): pop %r14
2dc2(2): pop %r15
2dc4(1): ret near (%rsp)
2dc5(3): nop (%rax)
2dc8(3): mov %rax,%rsi
2dcb(3): mov %rbp,%rdi
2dce(5): call 0xfffffdc2(%rip)
2dd3(5): jmp 0xffffff53(%rip)
2dd8(3): mov %r13,%rsi
2ddb(5): mov $0x4,%edi
2de0(5): call 0x2550(%rip)
2de5(7): lea 0x3a93(%rip),%rsi
2dec(5): mov $0x5,%edx
2df1(2): xor %edi,%edi
2df3(3): mov %rax,%rbp
2df6(5): call 0xffffe7aa(%rip)
2dfb(3): mov %rax,%rbx
2dfe(5): call 0xffffe722(%rip)
2e03(2): mov (%rax),%esi
2e05(3): mov %rbp,%rcx
2e08(2): xor %eax,%eax
2e0a(3): mov %rbx,%rdx
2e0d(2): xor %edi,%edi
2e0f(5): call 0xffffe961(%rip)
2e14(2): xor %eax,%eax
2e16(2): jmp 0xffffff86(%rip)
2e18(5): mov $0x1,%eax
2e1d(5): jmp 0xffffff7f(%rip)
2e22(3): mov %rsp,%rdx
2e25(3): mov %r12d,%esi
2e28(5): mov $0x1,%edi
2e2d(5): call 0xffffe8e3(%rip)
2e32(2): test %eax,%eax
2e34(2): jnz 0x16(%rip)
2e36(4): mov 0x18(%rsp),%eax
2e3a(5): and $0xf000,%eax
2e3f(5): cmp $0x8000,%eax
2e44(6): jnz 0xffffff48(%rip)
2e4a(3): mov %r13,%rcx
2e4d(5): mov $0x1,%edx
2e52(3): mov %r14,%rsi
2e55(3): mov %r12d,%edi
2e58(5): call 0xfffffc78(%rip)
2e5d(5): jmp 0xffffff2f(%rip)
2e62(5): call 0xffffe76e(%rip)

"head_bytes" :
2e70(2): push %r15
2e72(2): push %r14
2e74(2): push %r13
2e76(2): push %r12
2e78(1): push %rbp
2e79(1): push %rbx
2e7a(7): sub $0x2018,%rsp
2e81(9): mov $0x28,%rax
2e8a(8): mov %rax,0x2008(%rsp)
2e92(2): xor %eax,%eax
2e94(3): test %rdx,%rdx
2e97(6): jz 0x99(%rip)
2e9d(3): mov %rdi,%r15
2ea0(3): mov %esi,%r14d
2ea3(3): mov %rdx,%rbp
2ea6(6): mov $0x2000,%r12d
2eac(3): mov %rsp,%r13
2eaf(2): jmp 0x1e(%rip)
2eb1(7): nop 0x0(%rax)
2eb8(3): test %rax,%rax
2ebb(2): jz 0x75(%rip)
2ebd(3): mov %rax,%rsi
2ec0(3): mov %r13,%rdi
2ec3(5): call 0xfffffccd(%rip)
2ec8(3): sub %rbx,%rbp
2ecb(2): jz 0x65(%rip)
2ecd(3): cmp %rbp,%r12
2ed0(3): mov %r13,%rsi
2ed3(3): mov %r14d,%edi
2ed6(4): cmovnbe %rbp,%r12
2eda(3): mov %r12,%rdx
2edd(5): call 0x2743(%rip)
2ee2(4): cmp $0xffffffff,%rax
2ee6(3): mov %rax,%rbx
2ee9(2): jnz 0xffffffcf(%rip)
2eeb(3): mov %r15,%rsi
2eee(5): mov $0x4,%edi
2ef3(5): call 0x243d(%rip)
2ef8(7): lea 0x3980(%rip),%rsi
2eff(5): mov $0x5,%edx
2f04(2): xor %edi,%edi
2f06(3): mov %rax,%rbp
2f09(5): call 0xffffe697(%rip)
2f0e(3): mov %rax,%rbx
2f11(5): call 0xffffe60f(%rip)
2f16(2): mov (%rax),%esi
2f18(3): mov %rbp,%rcx
2f1b(2): xor %eax,%eax
2f1d(3): mov %rbx,%rdx
2f20(2): xor %edi,%edi
2f22(5): call 0xffffe84e(%rip)
2f27(2): xor %eax,%eax
2f29(2): jmp 0xc(%rip)
2f2b(5): nop 0x0(%rax,%rax,1)
2f30(5): mov $0x1,%eax
2f35(8): mov 0x2008(%rsp),%rcx
2f3d(9): xor $0x28,%rcx
2f46(2): jnz 0x14(%rip)
2f48(7): add $0x2018,%rsp
2f4f(1): pop %rbx
2f50(1): pop %rbp
2f51(2): pop %r12
2f53(2): pop %r13
2f55(2): pop %r14
2f57(2): pop %r15
2f59(1): ret near (%rsp)
2f5a(5): call 0xffffe676(%rip)

"diagnose_copy_fd_failure" :
2f60(1): push %rbp
2f61(1): push %rbx
2f62(4): sub $0x8,%rsp
2f66(3): cmp $0x1,%edi
2f69(2): jz 0x4f(%rip)
2f6b(3): cmp $0x2,%edi
2f6e(2): jnz 0x65(%rip)
2f70(3): mov %rsi,%rdx
2f73(2): xor %edi,%edi
2f75(5): mov $0x3,%esi
2f7a(5): call 0x24b6(%rip)
2f7f(7): lea 0x390a(%rip),%rsi
2f86(3): mov %rax,%rbp
2f89(5): mov $0x5,%edx
2f8e(2): xor %edi,%edi
2f90(5): call 0xffffe610(%rip)
2f95(3): mov %rax,%rbx
2f98(5): call 0xffffe588(%rip)
2f9d(2): mov (%rax),%esi
2f9f(4): add $0x8,%rsp
2fa3(3): mov %rbp,%rcx
2fa6(3): mov %rbx,%rdx
2fa9(2): xor %edi,%edi
2fab(2): xor %eax,%eax
2fad(1): pop %rbx
2fae(1): pop %rbp
2faf(5): jmp 0xffffe7c1(%rip)
2fb4(4): nop 0x0(%rax)
2fb8(5): mov $0x4,%edi
2fbd(5): call 0x2373(%rip)
2fc2(5): mov $0x5,%edx
2fc7(3): mov %rax,%rbp
2fca(7): lea 0x38ae(%rip),%rsi
2fd1(2): jmp 0xffffffbd(%rip)
2fd3(5): call 0xffffe53d(%rip)

"elide_tail_lines_seekable" :
2fe0(2): push %r15
2fe2(3): mov %rcx,%rax
2fe5(2): push %r14
2fe7(2): push %r13
2fe9(2): push %r12
2feb(6): mov $0x2000,%r13d
2ff1(1): push %rbp
2ff2(1): push %rbx
2ff3(3): mov %rdx,%rbx
2ff6(3): mov %r8,%rdx
2ff9(3): mov %esi,%r14d
2ffc(3): sub %rax,%rdx
2fff(7): sub $0x2038,%rsp
3006(3): mov %rdx,%rax
3009(5): mov %rcx,0x10(%rsp)
300e(5): mov %rdi,0x8(%rsp)
3013(4): sar $0x3f,%rax
3017(4): shr $0x33,%rax
301b(3): add %rax,%rdx
301e(6): and $0x1fff,%edx
3024(9): mov $0x28,%rcx
302d(8): mov %rcx,0x2028(%rsp)
3035(2): xor %ecx,%ecx
3037(3): sub %rax,%rdx
303a(3): mov %rdi,%rcx
303d(3): mov %r14d,%edi
3040(4): cmovne %rdx,%r13
3044(2): xor %edx,%edx
3046(3): sub %r13,%r8
3049(3): mov %r8,%rsi
304c(3): mov %r8,%r12
304f(5): call 0xfffffa81(%rip)
3054(3): test %rax,%rax
3057(6): js 0xe1(%rip)
305d(5): lea 0x20(%rsp),%rbp
3062(3): mov %r13,%rdx
3065(3): mov %r14d,%edi
3068(3): mov %rbp,%rsi
306b(5): call 0x25b5(%rip)
3070(4): cmp $0xffffffff,%rax
3074(3): mov %rax,%r8
3077(6): jz 0x169(%rip)
307d(3): test %rbx,%rbx
3080(6): jz 0x140(%rip)
3086(3): test %rax,%rax
3089(6): jz 0x137(%rip)
308f(7): movzx 0x207054(%rip),%eax
3096(3): mov %rbx,%r15
3099(5): cmp %al,0x1f(%rsp,%r8,1)
309e(3): setnz %al
30a1(3): movzx %al,%eax
30a4(3): sub %rax,%r15
30a7(3): test %r8,%r8
30aa(6): jz 0xbe(%rip)
30b0(8): movsx 0x207032(%rip),%r13d
30b8(2): jmp 0x21(%rip)
30ba(6): nop 0x0(%rax,%rax,1)
30c0(4): sub $0x1,%r8
30c4(3): test %r15,%r15
30c7(4): lea 0xffffffff(%r15),%rax
30cb(2): jz 0x35(%rip)
30cd(3): test %r8,%r8
30d0(3): mov %rax,%r15
30d3(6): jz 0x95(%rip)
30d9(3): test %rbx,%rbx
30dc(2): jz 0xffffffe4(%rip)
30de(3): mov %r8,%rdx
30e1(3): mov %r13d,%esi
30e4(3): mov %rbp,%rdi
30e7(5): call 0xffffe699(%rip)
30ec(3): test %rax,%rax
30ef(2): jz 0x79(%rip)
30f1(3): sub %rbp,%rax
30f4(3): test %r15,%r15
30f7(3): mov %rax,%r8
30fa(4): lea 0xffffffff(%r15),%rax
30fe(2): jnz 0xffffffcf(%rip)
3100(5): cmp 0x10(%rsp),%r12
3105(6): jnle 0x123(%rip)
310b(3): mov %r8,%rbx
310e(4): add $0x1,%rbx
3112(6): jnz 0xbe(%rip)
3118(5): mov 0x8(%rsp),%rcx
311d(4): lea 0x0(%r12,%rbx,1),%rsi
3121(2): xor %edx,%edx
3123(3): mov %r14d,%edi
3126(5): call 0xfffff9aa(%rip)
312b(3): not %rax
312e(4): shr $0x3f,%rax
3132(2): jmp 0x8(%rip)
3134(4): nop 0x0(%rax)
3138(2): xor %eax,%eax
313a(8): mov 0x2028(%rsp),%rcx
3142(9): xor $0x28,%rcx
314b(6): jnz 0x130(%rip)
3151(7): add $0x2038,%rsp
3158(1): pop %rbx
3159(1): pop %rbp
315a(2): pop %r12
315c(2): pop %r13
315e(2): pop %r14
3160(2): pop %r15
3162(1): ret near (%rsp)
3163(5): nop 0x0(%rax,%rax,1)
3168(5): cmp 0x10(%rsp),%r12
316d(2): jz 0x42(%rip)
316f(5): mov 0x8(%rsp),%rcx
3174(7): sub $0x2000,%r12
317b(2): xor %edx,%edx
317d(3): mov %r12,%rsi
3180(3): mov %r14d,%edi
3183(5): call 0xfffff94d(%rip)
3188(3): test %rax,%rax
318b(2): js 0xffffffad(%rip)
318d(5): mov $0x2000,%edx
3192(3): mov %rbp,%rsi
3195(3): mov %r14d,%edi
3198(5): call 0x2488(%rip)
319d(4): cmp $0xffffffff,%rax
31a1(3): mov %rax,%r8
31a4(2): jz 0x3c(%rip)
31a6(3): test %rax,%rax
31a9(6): jnz 0xfffffefe(%rip)
31af(5): mov $0x1,%eax
31b4(2): jmp 0xffffff86(%rip)
31b6(a): nop 0x0(%rax,%rax,1)
31c0(3): mov %rbx,%r15
31c3(5): jmp 0xfffffee4(%rip)
31c8(8): nop 0x0(%rax,%rax,1)
31d0(3): mov %rbx,%rsi
31d3(3): mov %rbp,%rdi
31d6(5): call 0xfffff9ba(%rip)
31db(5): jmp 0xffffff3d(%rip)
31e0(5): mov 0x8(%rsp),%rsi
31e5(5): mov $0x4,%edi
31ea(5): call 0x2146(%rip)
31ef(7): lea 0x3689(%rip),%rsi
31f6(5): mov $0x5,%edx
31fb(2): xor %edi,%edi
31fd(3): mov %rax,%rbp
3200(5): call 0xffffe3a0(%rip)
3205(3): mov %rax,%rbx
3208(5): call 0xffffe318(%rip)
320d(2): mov (%rax),%esi
320f(3): mov %rbp,%rcx
3212(2): xor %eax,%eax
3214(3): mov %rbx,%rdx
3217(2): xor %edi,%edi
3219(5): call 0xffffe557(%rip)
321e(2): xor %eax,%eax
3220(5): jmp 0xffffff1a(%rip)
3225(3): nop (%rax)
3228(5): mov 0x10(%rsp),%rbx
322d(5): mov 0x8(%rsp),%rcx
3232(2): xor %edx,%edx
3234(3): mov %r14d,%edi
3237(5): mov %r8,0x18(%rsp)
323c(3): mov %rbx,%rsi
323f(5): call 0xfffff891(%rip)
3244(3): test %rax,%rax
3247(6): js 0xfffffef1(%rip)
324d(3): mov %r12,%rsi
3250(3): mov %r14d,%edi
3253(3): sub %rbx,%rsi
3256(5): call 0xfffff9ba(%rip)
325b(2): test %eax,%eax
325d(5): mov 0x18(%rsp),%r8
3262(6): jz 0xfffffea9(%rip)
3268(5): mov 0x8(%rsp),%rsi
326d(2): mov %eax,%edi
326f(5): call 0xfffffcf1(%rip)
3274(2): xor %eax,%eax
3276(5): jmp 0xfffffec4(%rip)
327b(5): call 0xffffe355(%rip)

"usage" :
3280(2): push %r13
3282(2): push %r12
3284(5): mov $0x5,%edx
3289(1): push %rbp
328a(1): push %rbx
328b(2): mov %edi,%ebp
328d(7): sub $0x88,%rsp
3294(7): mov 0x206e65(%rip),%rbx
329b(9): mov $0x28,%rax
32a4(5): mov %rax,0x78(%rsp)
32a9(2): xor %eax,%eax
32ab(2): test %edi,%edi
32ad(2): jz 0x30(%rip)
32af(7): lea 0x37da(%rip),%rsi
32b6(2): xor %edi,%edi
32b8(5): call 0xffffe2e8(%rip)
32bd(7): mov 0x206e1c(%rip),%rdi
32c4(3): mov %rax,%rdx
32c7(3): mov %rbx,%rcx
32ca(5): mov $0x1,%esi
32cf(2): xor %eax,%eax
32d1(5): call 0xffffe50f(%rip)
32d6(2): mov %ebp,%edi
32d8(5): call 0xffffe4e8(%rip)
32dd(7): lea 0x37d4(%rip),%rsi
32e4(2): xor %edi,%edi
32e6(5): call 0xffffe2ba(%rip)
32eb(3): mov %rbx,%rdx
32ee(3): mov %rax,%rsi
32f1(5): mov $0x1,%edi
32f6(2): xor %eax,%eax
32f8(5): call 0xffffe468(%rip)
32fd(7): lea 0x37dc(%rip),%rsi
3304(2): xor %edi,%edi
3306(5): mov $0x5,%edx
330b(5): call 0xffffe295(%rip)
3310(5): mov $0xa,%edx
3315(3): mov %rax,%rsi
3318(5): mov $0x1,%edi
331d(2): xor %eax,%eax
331f(5): call 0xffffe441(%rip)
3324(7): mov 0x206d7d(%rip),%rbx
332b(7): lea 0x3836(%rip),%rsi
3332(5): mov $0x5,%edx
3337(2): xor %edi,%edi
3339(5): call 0xffffe267(%rip)
333e(3): mov %rbx,%rsi
3341(3): mov %rax,%rdi
3344(5): call 0xffffe35c(%rip)
3349(7): mov 0x206d58(%rip),%rbx
3350(7): lea 0x3849(%rip),%rsi
3357(5): mov $0x5,%edx
335c(2): xor %edi,%edi
335e(5): call 0xffffe242(%rip)
3363(3): mov %rbx,%rsi
3366(3): mov %rax,%rdi
3369(5): call 0xffffe337(%rip)
336e(7): lea 0x387b(%rip),%rsi
3375(2): xor %edi,%edi
3377(5): mov $0x5,%edx
337c(5): call 0xffffe224(%rip)
3381(5): mov $0xa,%edx
3386(3): mov %rax,%rsi
3389(5): mov $0x1,%edi
338e(2): xor %eax,%eax
3390(5): call 0xffffe3d0(%rip)
3395(7): mov 0x206d0c(%rip),%rbx
339c(7): lea 0x39dd(%rip),%rsi
33a3(5): mov $0x5,%edx
33a8(2): xor %edi,%edi
33aa(5): call 0xffffe1f6(%rip)
33af(3): mov %rbx,%rsi
33b2(3): mov %rax,%rdi
33b5(5): call 0xffffe2eb(%rip)
33ba(7): mov 0x206ce7(%rip),%rbx
33c1(7): lea 0x3a40(%rip),%rsi
33c8(5): mov $0x5,%edx
33cd(2): xor %edi,%edi
33cf(5): call 0xffffe1d1(%rip)
33d4(3): mov %rbx,%rsi
33d7(3): mov %rax,%rdi
33da(5): call 0xffffe2c6(%rip)
33df(7): mov 0x206cc2(%rip),%rbx
33e6(7): lea 0x3a5b(%rip),%rsi
33ed(5): mov $0x5,%edx
33f2(2): xor %edi,%edi
33f4(5): call 0xffffe1ac(%rip)
33f9(3): mov %rbx,%rsi
33fc(3): mov %rax,%rdi
33ff(5): call 0xffffe2a1(%rip)
3404(7): mov 0x206c9d(%rip),%rbx
340b(7): lea 0x3a66(%rip),%rsi
3412(5): mov $0x5,%edx
3417(2): xor %edi,%edi
3419(5): call 0xffffe187(%rip)
341e(3): mov %rbx,%rsi
3421(3): mov %rax,%rdi
3424(5): call 0xffffe27c(%rip)
3429(7): mov 0x206c78(%rip),%rbx
3430(7): lea 0x3a79(%rip),%rsi
3437(5): mov $0x5,%edx
343c(2): xor %edi,%edi
343e(5): call 0xffffe162(%rip)
3443(3): mov %rbx,%rsi
3446(3): mov %rax,%rdi
3449(7): lea 0x345d(%rip),%rbx
3450(5): call 0xffffe250(%rip)
3455(7): lea 0x3456(%rip),%rax
345c(7): lea 0x3490(%rip),%rcx
3463(9): mov $0x0,0x60(%rsp)
346c(9): mov $0x0,0x68(%rsp)
3475(3): mov %rsp,%rdx
3478(4): mov %rax,(%rsp)
347c(7): lea 0x3431(%rip),%rax
3483(5): mov %rcx,0x30(%rsp)
3488(7): lea 0x346e(%rip),%rcx
348f(5): mov %rax,0x8(%rsp)
3494(7): lea 0x3491(%rip),%rax
349b(5): mov %rcx,0x40(%rsp)
34a0(7): lea 0x3460(%rip),%rcx
34a7(5): mov %rax,0x10(%rsp)
34ac(7): lea 0x3411(%rip),%rax
34b3(5): mov %rcx,0x50(%rsp)
34b8(5): mov %rax,0x18(%rsp)
34bd(7): lea 0x3416(%rip),%rax
34c4(5): mov %rax,0x20(%rsp)
34c9(7): lea 0x3414(%rip),%rax
34d0(5): mov %rax,0x28(%rsp)
34d5(5): mov %rax,0x38(%rsp)
34da(5): mov %rax,0x48(%rsp)
34df(5): mov %rax,0x58(%rsp)
34e4(4): nop 0x0(%rax)
34e8(4): add $0x10,%rdx
34ec(3): mov (%rdx),%rdi
34ef(3): test %rdi,%rdi
34f2(2): jz 0x15(%rip)
34f4(5): mov $0x5,%ecx
34f9(3): mov %rbx,%rsi
34fc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
34fe(3): setnbe %al
3501(2): sbb $0x0,%al
3503(2): test %al,%al
3505(2): jnz 0xffffffe3(%rip)
3507(4): mov 0x8(%rdx),%r12
350b(2): xor %edi,%edi
350d(5): mov $0x5,%edx
3512(7): lea 0x33f8(%rip),%rsi
3519(3): test %r12,%r12
351c(6): jz 0xc7(%rip)
3522(5): call 0xffffe07e(%rip)
3527(7): lea 0x3a5a(%rip),%rcx
352e(7): lea 0x33f3(%rip),%rdx
3535(3): mov %rax,%rsi
3538(5): mov $0x1,%edi
353d(2): xor %eax,%eax
353f(5): call 0xffffe221(%rip)
3544(2): xor %esi,%esi
3546(5): mov $0x5,%edi
354b(5): call 0xffffe205(%rip)
3550(3): test %rax,%rax
3553(2): jz 0x1e(%rip)
3555(7): lea 0x33da(%rip),%rsi
355c(5): mov $0x3,%edx
3561(3): mov %rax,%rdi
3564(5): call 0xffffdfcc(%rip)
3569(2): test %eax,%eax
356b(6): jnz 0x10d(%rip)
3571(7): lea 0x33c2(%rip),%rsi
3578(2): xor %edi,%edi
357a(5): mov $0x5,%edx
357f(5): call 0xffffe021(%rip)
3584(7): lea 0x3322(%rip),%rcx
358b(7): lea 0x39f6(%rip),%rdx
3592(3): mov %rax,%rsi
3595(5): mov $0x1,%edi
359a(2): xor %eax,%eax
359c(5): call 0xffffe1c4(%rip)
35a1(3): cmp %rbx,%r12
35a4(7): lea 0x3323(%rip),%rcx
35ab(7): lea 0x406f(%rip),%rbx
35b2(4): cmove %rcx,%rbx
35b6(7): lea 0x3a3b(%rip),%rsi
35bd(2): xor %edi,%edi
35bf(5): mov $0x5,%edx
35c4(5): call 0xffffdfdc(%rip)
35c9(3): mov %rbx,%rcx
35cc(3): mov %rax,%rsi
35cf(3): mov %r12,%rdx
35d2(5): mov $0x1,%edi
35d7(2): xor %eax,%eax
35d9(5): call 0xffffe187(%rip)
35de(5): jmp 0xfffffcf8(%rip)
35e3(5): call 0xffffdfbd(%rip)
35e8(7): lea 0x3999(%rip),%rcx
35ef(7): lea 0x3332(%rip),%rdx
35f6(3): mov %rax,%rsi
35f9(5): mov $0x1,%edi
35fe(2): xor %eax,%eax
3600(5): call 0xffffe160(%rip)
3605(2): xor %esi,%esi
3607(5): mov $0x5,%edi
360c(5): call 0xffffe144(%rip)
3611(3): test %rax,%rax
3614(2): jz 0x1a(%rip)
3616(7): lea 0x3319(%rip),%rsi
361d(5): mov $0x3,%edx
3622(3): mov %rax,%rdi
3625(5): call 0xffffdf0b(%rip)
362a(2): test %eax,%eax
362c(2): jnz 0x45(%rip)
362e(7): lea 0x3305(%rip),%rsi
3635(5): mov $0x5,%edx
363a(2): xor %edi,%edi
363c(7): lea 0x326a(%rip),%r12
3643(7): lea 0x3284(%rip),%rbx
364a(5): call 0xffffdf56(%rip)
364f(7): lea 0x3257(%rip),%rcx
3656(7): lea 0x392b(%rip),%rdx
365d(3): mov %rax,%rsi
3660(5): mov $0x1,%edi
3665(2): xor %eax,%eax
3667(5): call 0xffffe0f9(%rip)
366c(5): jmp 0xffffff4a(%rip)
3671(7): lea 0x3235(%rip),%r12
3678(7): mov 0x206a29(%rip),%r13
367f(7): lea 0x392a(%rip),%rsi
3686(2): xor %edi,%edi
3688(5): mov $0x5,%edx
368d(5): call 0xffffdf13(%rip)
3692(3): mov %r13,%rsi
3695(3): mov %rax,%rdi
3698(5): call 0xffffe008(%rip)
369d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
36b0(7): mov %rdi,0x206a41(%rip)
36b7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
36c0(7): mov %dil,0x206a29(%rip)
36c7(1): ret near (%rsp)

"close_stdout" :
36d0(1): push %rbp
36d1(1): push %rbx
36d2(4): sub $0x8,%rsp
36d6(7): mov 0x2069cb(%rip),%rdi
36dd(5): call 0x2e33(%rip)
36e2(2): test %eax,%eax
36e4(2): jz 0x18(%rip)
36e6(5): call 0xffffde3a(%rip)
36eb(7): cmp $0x0,0x2069fe(%rip)
36f2(3): mov %rax,%rbx
36f5(2): jz 0x1e(%rip)
36f7(3): cmp $0x20,(%rax)
36fa(2): jnz 0x19(%rip)
36fc(7): mov 0x2069dd(%rip),%rdi
3703(5): call 0x2e0d(%rip)
3708(2): test %eax,%eax
370a(2): jnz 0x48(%rip)
370c(4): add $0x8,%rsp
3710(1): pop %rbx
3711(1): pop %rbp
3712(1): ret near (%rsp)
3713(7): lea 0x397b(%rip),%rsi
371a(2): xor %edi,%edi
371c(5): mov $0x5,%edx
3721(5): call 0xffffde7f(%rip)
3726(7): mov 0x2069cb(%rip),%rdi
372d(3): mov %rax,%rbp
3730(3): test %rdi,%rdi
3733(2): jz 0x2a(%rip)
3735(5): call 0x1ccb(%rip)
373a(2): mov (%rbx),%esi
373c(7): lea 0x3277(%rip),%rdx
3743(3): mov %rax,%rcx
3746(3): mov %rbp,%r8
3749(2): xor %edi,%edi
374b(2): xor %eax,%eax
374d(5): call 0xffffe023(%rip)
3752(6): mov 0x2068c8(%rip),%edi
3758(5): call 0xffffdde8(%rip)
375d(2): mov (%rbx),%esi
375f(7): lea 0x3258(%rip),%rdx
3766(3): mov %rax,%rcx
3769(2): xor %edi,%edi
376b(2): xor %eax,%eax
376d(5): call 0xffffe003(%rip)
3772(2): jmp 0xffffffe0(%rip)

"full_read" :
3780(2): push %r13
3782(2): push %r12
3784(1): push %rbp
3785(1): push %rbx
3786(4): sub $0x8,%rsp
378a(3): test %rdx,%rdx
378d(2): jz 0x64(%rip)
378f(3): mov %edi,%r13d
3792(3): mov %rsi,%rbp
3795(3): mov %rdx,%rbx
3798(3): xor %r12d,%r12d
379b(2): jmp 0x15(%rip)
379d(3): nop (%rax)
37a0(3): test %rax,%rax
37a3(2): jz 0x35(%rip)
37a5(3): add %rax,%r12
37a8(3): add %rax,%rbp
37ab(3): sub %rax,%rbx
37ae(2): jz 0x16(%rip)
37b0(3): mov %rbx,%rdx
37b3(3): mov %rbp,%rsi
37b6(3): mov %r13d,%edi
37b9(5): call 0x1e67(%rip)
37be(4): cmp $0xffffffff,%rax
37c2(2): jnz 0xffffffde(%rip)
37c4(4): add $0x8,%rsp
37c8(3): mov %r12,%rax
37cb(1): pop %rbx
37cc(1): pop %rbp
37cd(2): pop %r12
37cf(2): pop %r13
37d1(1): ret near (%rsp)
37d2(6): nop 0x0(%rax,%rax,1)
37d8(5): call 0xffffdd48(%rip)
37dd(6): mov $0x0,(%rax)
37e3(4): add $0x8,%rsp
37e7(3): mov %r12,%rax
37ea(1): pop %rbx
37eb(1): pop %rbp
37ec(2): pop %r12
37ee(2): pop %r13
37f0(1): ret near (%rsp)
37f1(3): xor %r12d,%r12d
37f4(2): jmp 0xffffffd0(%rip)

"offtostr" :
3800(3): test %rdi,%rdi
3803(4): lea 0x14(%rsi),%rcx
3807(4): mov $0x0,0x14(%rsi)
380b(a): mov $0x7378697629483820647,%r9
3815(a): mov $0x-3689348814741910323,%rsi
381f(6): mov $0x30,%r8d
3825(2): js 0x3e(%rip)
3827(9): nop 0x0(%rax,%rax,1)
3830(3): mov %rdi,%rax
3833(4): sub $0x1,%rcx
3837(3): mul %rax,%rsi,%rdx
383a(4): shr $0x3,%rdx
383e(4): lea 0x0(%rdx,%rdx,4),%rax
3842(3): add %rax,%rax
3845(3): sub %rax,%rdi
3848(3): add $0x30,%edi
384b(3): test %rdx,%rdx
384e(3): mov %dil,(%rcx)
3851(3): mov %rdx,%rdi
3854(2): jnz 0xffffffdc(%rip)
3856(3): mov %rcx,%rax
3859(1): ret near (%rsp)
385a(6): nop 0x0(%rax,%rax,1)
3860(3): mov %rsi,%rcx
3863(3): mov %rdi,%rax
3866(4): lea 0xffffffff(%rcx),%rsi
386a(3): imul %rax,%r9,%rdx
386d(3): mov %rdi,%rax
3870(4): sar $0x3f,%rax
3874(4): sar $0x2,%rdx
3878(3): sub %rax,%rdx
387b(4): lea 0x0(%rdx,%rdx,4),%rax
387f(4): lea 0x0(%r8,%rax,2),%eax
3883(2): sub %edi,%eax
3885(3): test %rdx,%rdx
3888(3): mov %rdx,%rdi
388b(3): mov %al,0xffffffff(%rcx)
388e(2): jnz 0xffffffd2(%rip)
3890(4): sub $0x2,%rcx
3894(4): mov $0x2d,0xffffffff(%rsi)
3898(3): mov %rcx,%rax
389b(1): ret near (%rsp)

"umaxtostr" :
38a0(4): lea 0x14(%rsi),%rcx
38a4(4): mov $0x0,0x14(%rsi)
38a8(a): mov $0x-3689348814741910323,%rsi
38b2(6): nop 0x0(%rax,%rax,1)
38b8(3): mov %rdi,%rax
38bb(4): sub $0x1,%rcx
38bf(3): mul %rax,%rsi,%rdx
38c2(4): shr $0x3,%rdx
38c6(4): lea 0x0(%rdx,%rdx,4),%rax
38ca(3): add %rax,%rax
38cd(3): sub %rax,%rdi
38d0(3): add $0x30,%edi
38d3(3): test %rdx,%rdx
38d6(3): mov %dil,(%rcx)
38d9(3): mov %rdx,%rdi
38dc(2): jnz 0xffffffdc(%rip)
38de(3): mov %rcx,%rax
38e1(1): ret near (%rsp)

"set_program_name" :
38f0(3): test %rdi,%rdi
38f3(1): push %rbx
38f4(2): jz 0x79(%rip)
38f6(5): mov $0x2f,%esi
38fb(3): mov %rdi,%rbx
38fe(5): call 0xffffdd12(%rip)
3903(3): test %rax,%rax
3906(2): jz 0x57(%rip)
3908(4): lea 0x1(%rax),%r8
390c(3): mov %r8,%rdx
390f(3): sub %rbx,%rdx
3912(4): cmp $0x6,%rdx
3916(2): jle 0x47(%rip)
3918(4): lea 0xfffffffa(%rax),%rsi
391c(7): lea 0x37bd(%rip),%rdi
3923(5): mov $0x7,%ecx
3928(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
392a(3): setnbe %dl
392d(3): sbb $0x0,%dl
3930(2): test %dl,%dl
3932(2): jnz 0x2b(%rip)
3934(7): lea 0x37ad(%rip),%rdi
393b(5): mov $0x3,%ecx
3940(3): mov %r8,%rsi
3943(3): mov %r8,%rbx
3946(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3948(3): setnbe %dl
394b(3): sbb $0x0,%dl
394e(2): test %dl,%dl
3950(2): jnz 0xd(%rip)
3952(4): lea 0x4(%rax),%rbx
3956(7): mov %rbx,0x206743(%rip)
395d(7): mov %rbx,0x20679c(%rip)
3964(7): mov %rbx,0x206755(%rip)
396b(1): pop %rbx
396c(1): ret near (%rsp)
396d(7): mov 0x20676c(%rip),%rcx
3974(7): lea 0x372d(%rip),%rdi
397b(5): mov $0x37,%edx
3980(5): mov $0x1,%esi
3985(5): call 0xffffde4b(%rip)
398a(5): call 0xffffdb86(%rip)

"gettext_quote.part.1" :
3990(1): push %rbp
3991(1): push %rbx
3992(3): mov %rdi,%rbp
3995(2): mov %esi,%ebx
3997(4): sub $0x8,%rsp
399b(5): call 0x2c55(%rip)
39a0(3): movzx (%rax),%edx
39a3(3): and $0xdf,%edx
39a6(3): cmp $0x55,%dl
39a9(2): jz 0x77(%rip)
39ab(3): cmp $0x47,%dl
39ae(2): jz 0x22(%rip)
39b0(7): lea 0x3744(%rip),%rax
39b7(7): lea 0x373f(%rip),%rdx
39be(3): cmp $0x9,%ebx
39c1(4): cmovne %rdx,%rax
39c5(4): add $0x8,%rsp
39c9(1): pop %rbx
39ca(1): pop %rbp
39cb(1): ret near (%rsp)
39cc(4): nop 0x0(%rax)
39d0(4): movzx 0x1(%rax),%edx
39d4(3): and $0xdf,%edx
39d7(3): cmp $0x42,%dl
39da(2): jnz 0xffffffd6(%rip)
39dc(4): cmp $0x31,0x2(%rax)
39e0(2): jnz 0xffffffd0(%rip)
39e2(4): cmp $0x38,0x3(%rax)
39e6(2): jnz 0xffffffca(%rip)
39e8(4): cmp $0x30,0x4(%rax)
39ec(2): jnz 0xffffffc4(%rip)
39ee(4): cmp $0x33,0x5(%rax)
39f2(2): jnz 0xffffffbe(%rip)
39f4(4): cmp $0x30,0x6(%rax)
39f8(2): jnz 0xffffffb8(%rip)
39fa(4): cmp $0x0,0x7(%rax)
39fe(2): jnz 0xffffffb2(%rip)
3a00(4): cmp $0x60,0x0(%rbp)
3a04(7): lea 0x36e9(%rip),%rax
3a0b(7): lea 0x36e6(%rip),%rdx
3a12(4): cmovne %rdx,%rax
3a16(4): add $0x8,%rsp
3a1a(1): pop %rbx
3a1b(1): pop %rbp
3a1c(1): ret near (%rsp)
3a1d(3): nop (%rax)
3a20(4): movzx 0x1(%rax),%edx
3a24(3): and $0xdf,%edx
3a27(3): cmp $0x54,%dl
3a2a(2): jnz 0xffffff86(%rip)
3a2c(4): movzx 0x2(%rax),%edx
3a30(3): and $0xdf,%edx
3a33(3): cmp $0x46,%dl
3a36(6): jnz 0xffffff7a(%rip)
3a3c(4): cmp $0x2d,0x3(%rax)
3a40(6): jnz 0xffffff70(%rip)
3a46(4): cmp $0x38,0x4(%rax)
3a4a(6): jnz 0xffffff66(%rip)
3a50(4): cmp $0x0,0x5(%rax)
3a54(6): jnz 0xffffff5c(%rip)
3a5a(4): cmp $0x60,0x0(%rbp)
3a5e(7): lea 0x3687(%rip),%rax
3a65(7): lea 0x3684(%rip),%rdx
3a6c(4): cmovne %rdx,%rax
3a70(4): add $0x8,%rsp
3a74(1): pop %rbx
3a75(1): pop %rbp
3a76(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3a80(2): push %r15
3a82(2): push %r14
3a84(3): mov %r8d,%r15d
3a87(2): push %r13
3a89(2): push %r12
3a8b(3): mov %rdi,%r14
3a8e(1): push %rbp
3a8f(1): push %rbx
3a90(3): mov %r9d,%ebx
3a93(3): mov %rsi,%r13
3a96(3): mov %rcx,%rbp
3a99(3): and $0x2,%ebx
3a9c(7): sub $0xb8,%rsp
3aa3(8): mov 0xf0(%rsp),%rax
3aab(5): mov %rdx,0x10(%rsp)
3ab0(5): mov %r8d,0x8(%rsp)
3ab5(5): mov %r9d,0x78(%rsp)
3aba(5): mov %rax,0x20(%rsp)
3abf(8): mov 0xf8(%rsp),%rax
3ac7(5): mov %rax,0x68(%rsp)
3acc(8): mov 0x100(%rsp),%rax
3ad4(5): mov %rax,0x60(%rsp)
3ad9(9): mov $0x28,%rax
3ae2(8): mov %rax,0xa8(%rsp)
3aea(2): xor %eax,%eax
3aec(5): call 0xffffdac4(%rip)
3af1(4): cmp $0xa,%r15d
3af5(5): mov %rax,0x58(%rsp)
3afa(6): jnbe 0x11b5(%rip)
3b00(7): lea 0x3659(%rip),%rcx
3b07(3): mov %r15d,%edx
3b0a(4): movsxd 0x0(%rcx,%rdx,4),%rax
3b0e(3): add %rcx,%rax
3b11(2): jmp %rax
3b13(5): mov $0x1,0xe(%rsp)
3b18(5): mov $0x0,0x7c(%rsp)
3b1d(3): xor %r12d,%r12d
3b20(9): mov $0x0,0x50(%rsp)
3b29(5): mov $0x1,0xf(%rsp)
3b2e(5): mov $0x0,0xd(%rsp)
3b33(7): lea 0x35c3(%rip),%rax
3b3a(9): mov $0x1,0x18(%rsp)
3b43(3): xor %r15d,%r15d
3b46(8): mov $0x2,0x8(%rsp)
3b4e(5): mov %rax,0x48(%rsp)
3b53(3): xor %r11d,%r11d
3b56(3): mov %rbp,%rax
3b59(3): mov %r12d,%r8d
3b5c(3): mov %r11,%rbp
3b5f(3): mov %rax,%r11
3b62(6): nop 0x0(%rax,%rax,1)
3b68(3): cmp %rbp,%r11
3b6b(4): setnz %r12b
3b6f(4): cmp $0xffffffff,%r11
3b73(2): jnz 0xf(%rip)
3b75(5): mov 0x10(%rsp),%rax
3b7a(4): cmp $0x0,0x0(%rax,%rbp,1)
3b7e(4): setnz %r12b
3b82(3): test %r12b,%r12b
3b85(6): jz 0x65b(%rip)
3b8b(5): cmp $0x2,0x8(%rsp)
3b90(5): mov 0x10(%rsp),%rdi
3b95(4): lea 0x0(%rdi,%rbp,1),%r9
3b99(3): setnz %al
3b9c(4): and 0xd(%rsp),%al
3ba0(3): mov %eax,%r10d
3ba3(6): jz 0xad(%rip)
3ba9(5): mov 0x18(%rsp),%rax
3bae(3): test %rax,%rax
3bb1(6): jz 0x42f(%rip)
3bb7(4): cmp $0xffffffff,%r11
3bbb(5): lea 0x0(%rbp,%rax,1),%rbx
3bc0(2): jnz 0x30(%rip)
3bc2(4): cmp $0x1,%rax
3bc6(2): jbe 0x2a(%rip)
3bc8(5): mov %r8b,0x38(%rsp)
3bcd(5): mov %r10b,0x30(%rsp)
3bd2(5): mov %r9,0x28(%rsp)
3bd7(5): call 0xffffd9e9(%rip)
3bdc(6): movzx 0x38(%rsp),%r8d
3be2(6): movzx 0x30(%rsp),%r10d
3be8(3): mov %rax,%r11
3beb(5): mov 0x28(%rsp),%r9
3bf0(3): cmp %r11,%rbx
3bf3(5): mov %r10b,0x28(%rsp)
3bf8(6): jnbe 0x5b8(%rip)
3bfe(5): mov 0x18(%rsp),%rdx
3c03(5): mov 0x48(%rsp),%rsi
3c08(3): mov %r9,%rdi
3c0b(5): mov %r11,0x40(%rsp)
3c10(5): mov %r8b,0x38(%rsp)
3c15(5): mov %r9,0x30(%rsp)
3c1a(5): call 0xffffda76(%rip)
3c1f(2): test %eax,%eax
3c21(5): mov 0x30(%rsp),%r9
3c26(6): movzx 0x38(%rsp),%r8d
3c2c(5): mov 0x40(%rsp),%r11
3c31(6): jnz 0x57f(%rip)
3c37(5): cmp $0x0,0xf(%rsp)
3c3c(6): movzx 0x28(%rsp),%r10d
3c42(6): jnz 0xf83(%rip)
3c48(8): nop 0x0(%rax,%rax,1)
3c50(4): movzx (%r9),%ebx
3c54(3): cmp $0x7e,%bl
3c57(6): jnbe 0x321(%rip)
3c5d(7): lea 0x3528(%rip),%rcx
3c64(3): movzx %bl,%edx
3c67(4): movsxd 0x0(%rcx,%rdx,4),%rax
3c6b(3): add %rcx,%rax
3c6e(2): jmp %rax
3c70(3): xor %r10d,%r10d
3c73(4): cmp $0x1,%r11
3c77(3): setnz %al
3c7a(4): cmp $0xffffffff,%r11
3c7e(2): jnz 0xe(%rip)
3c80(5): mov 0x10(%rsp),%rax
3c85(4): cmp $0x0,0x1(%rax)
3c89(3): setnz %al
3c8c(5): cmp $0x2,0x8(%rsp)
3c91(3): setz %dl
3c94(2): test %al,%al
3c96(6): jz 0x252(%rip)
3c9c(3): xor %r12d,%r12d
3c9f(2): xor %eax,%eax
3ca1(7): nop 0x0(%rax)
3ca8(5): cmp $0x1,0xd(%rsp)
3cad(6): jnz 0x115(%rip)
3cb3(2): test %dl,%dl
3cb5(6): jnz 0x10d(%rip)
3cbb(5): mov 0x20(%rsp),%rsi
3cc0(3): test %rsi,%rsi
3cc3(2): jz 0x16(%rip)
3cc5(2): mov %ebx,%edx
3cc7(3): shr $0x5,%dl
3cca(3): movzx %dl,%edx
3ccd(3): mov 0x0(%rsi,%rdx,4),%edx
3cd0(3): bt %ebx,%edx
3cd3(6): jb 0x150(%rip)
3cd9(3): test %r10b,%r10b
3cdc(6): jnz 0x147(%rip)
3ce2(3): xor $0x1,%eax
3ce5(4): add $0x1,%rbp
3ce9(3): and %r8d,%eax
3cec(2): test %al,%al
3cee(2): jz 0x22(%rip)
3cf0(3): cmp %r15,%r13
3cf3(2): jbe 0x7(%rip)
3cf5(5): mov $0x27,0x0(%r14,%r15,1)
3cfa(4): lea 0x1(%r15),%rax
3cfe(3): cmp %rax,%r13
3d01(2): jbe 0x8(%rip)
3d03(6): mov $0x27,0x1(%r14,%r15,1)
3d09(4): add $0x2,%r15
3d0d(3): xor %r8d,%r8d
3d10(3): cmp %r13,%r15
3d13(2): jnb 0x6(%rip)
3d15(4): mov %bl,0x0(%r14,%r15,1)
3d19(5): movzx 0xe(%rsp),%edi
3d1e(4): add $0x1,%r15
3d22(5): mov $0x0,%eax
3d27(3): test %r12b,%r12b
3d2a(3): cmove %eax,%edi
3d2d(5): mov %dil,0xe(%rsp)
3d32(5): jmp 0xfffffe36(%rip)
3d37(9): nop 0x0(%rax,%rax,1)
3d40(3): xor %r10d,%r10d
3d43(4): mov 0x8(%rsp),%eax
3d47(3): cmp $0x2,%eax
3d4a(6): jz 0x5be(%rip)
3d50(3): cmp $0x5,%eax
3d53(6): jz 0x575(%rip)
3d59(3): cmp $0x2,%eax
3d5c(5): mov $0x3f,%ebx
3d61(3): setz %dl
3d64(3): xor %r12d,%r12d
3d67(2): xor %eax,%eax
3d69(5): jmp 0xffffff3f(%rip)
3d6e(2): nop 
3d70(3): xor %r10d,%r10d
3d73(5): cmp $0x2,0x8(%rsp)
3d78(6): jz 0x508(%rip)
3d7e(5): mov %r12b,0x7c(%rsp)
3d83(2): xor %edx,%edx
3d85(2): xor %eax,%eax
3d87(5): mov $0x27,%ebx
3d8c(5): jmp 0xffffff1c(%rip)
3d91(7): nop 0x0(%rax)
3d98(5): mov $0x9,%edx
3d9d(5): mov $0x74,%ebx
3da2(5): cmp $0x2,0x8(%rsp)
3da7(3): setz %al
3daa(4): and 0xf(%rsp),%al
3dae(6): jnz 0x150(%rip)
3db4(5): cmp $0x0,0xd(%rsp)
3db9(2): jnz 0x67(%rip)
3dbb(2): mov %edx,%ebx
3dbd(3): xor %r12d,%r12d
3dc0(2): xor %eax,%eax
3dc2(5): cmp $0x0,0xf(%rsp)
3dc7(6): jnz 0xfffffef4(%rip)
3dcd(5): jmp 0xffffff0c(%rip)
3dd2(6): nop 0x0(%rax,%rax,1)
3dd8(5): mov $0x8,%edx
3ddd(5): mov $0x62,%ebx
3de2(2): jmp 0xffffffd2(%rip)
3de4(4): nop 0x0(%rax)
3de8(5): cmp $0x2,0x8(%rsp)
3ded(6): jz 0x3d3(%rip)
3df3(5): cmp $0x0,0xd(%rsp)
3df8(6): jz 0x218(%rip)
3dfe(5): cmp $0x0,0xf(%rsp)
3e03(6): jz 0x20d(%rip)
3e09(6): cmp $0x0,0x18(%rsp)
3e0f(6): jnz 0x3bc(%rip)
3e15(5): mov $0x5c,%ebx
3e1a(6): nop 0x0(%rax,%rax,1)
3e20(3): xor %r12d,%r12d
3e23(5): cmp $0x2,0x8(%rsp)
3e28(3): setz %dl
3e2b(5): cmp $0x0,0xf(%rsp)
3e30(2): mov %edx,%eax
3e32(6): jnz 0x856(%rip)
3e38(3): mov %r8d,%eax
3e3b(3): xor $0x1,%eax
3e3e(2): and %dl,%al
3e40(2): jz 0x31(%rip)
3e42(3): cmp %r15,%r13
3e45(2): jbe 0x7(%rip)
3e47(5): mov $0x27,0x0(%r14,%r15,1)
3e4c(4): lea 0x1(%r15),%rdx
3e50(3): cmp %rdx,%r13
3e53(2): jbe 0x8(%rip)
3e55(6): mov $0x24,0x1(%r14,%r15,1)
3e5b(4): lea 0x2(%r15),%rdx
3e5f(3): cmp %rdx,%r13
3e62(2): jbe 0x8(%rip)
3e64(6): mov $0x27,0x2(%r14,%r15,1)
3e6a(4): add $0x3,%r15
3e6e(3): mov %eax,%r8d
3e71(3): cmp %r15,%r13
3e74(2): jbe 0x7(%rip)
3e76(5): mov $0x5c,0x0(%r14,%r15,1)
3e7b(4): add $0x1,%r15
3e7f(4): add $0x1,%rbp
3e83(5): jmp 0xfffffe8d(%rip)
3e88(8): nop 0x0(%rax,%rax,1)
3e90(5): cmp $0x0,0xd(%rsp)
3e95(6): jnz 0x1ce(%rip)
3e9b(2): xor %edx,%edx
3e9d(5): test $0x1,0x78(%rsp)
3ea2(6): jz 0xffffff19(%rip)
3ea8(4): add $0x1,%rbp
3eac(5): jmp 0xfffffcbc(%rip)
3eb1(7): nop 0x0(%rax)
3eb8(5): cmp $0x2,0x8(%rsp)
3ebd(3): setz %dl
3ec0(2): xor %eax,%eax
3ec2(5): jmp 0xfffffde6(%rip)
3ec7(9): nop 0x0(%rax,%rax,1)
3ed0(5): mov $0x7,%edx
3ed5(5): mov $0x61,%ebx
3eda(5): jmp 0xfffffeda(%rip)
3edf(1): nop 
3ee0(5): cmp $0x2,0x8(%rsp)
3ee5(3): setz %dl
3ee8(3): test %rbp,%rbp
3eeb(6): jnz 0xfffffdb1(%rip)
3ef1(5): movzx 0xf(%rsp),%eax
3ef6(2): and %dl,%al
3ef8(6): jz 0xfffffdb0(%rip)
3efe(3): mov %r11,%rbp
3f01(8): mov $0x2,0x8(%rsp)
3f09(5): jmp 0x700(%rip)
3f0e(2): nop 
3f10(5): cmp $0x2,0x8(%rsp)
3f15(3): setz %dl
3f18(3): xor %r12d,%r12d
3f1b(2): jmp 0xffffffd6(%rip)
3f1d(3): nop (%rax)
3f20(5): cmp $0x2,0x8(%rsp)
3f25(5): mov $0x20,%ebx
3f2a(3): setz %dl
3f2d(2): jmp 0xffffffc4(%rip)
3f2f(1): nop 
3f30(5): mov $0xd,%edx
3f35(5): mov $0x72,%ebx
3f3a(5): jmp 0xfffffe68(%rip)
3f3f(1): nop 
3f40(5): mov $0xc,%edx
3f45(5): mov $0x66,%ebx
3f4a(5): jmp 0xfffffe6a(%rip)
3f4f(1): nop 
3f50(5): mov $0xb,%edx
3f55(5): mov $0x76,%ebx
3f5a(5): jmp 0xfffffe5a(%rip)
3f5f(1): nop 
3f60(5): mov $0xa,%edx
3f65(5): mov $0x6e,%ebx
3f6a(5): jmp 0xfffffe38(%rip)
3f6f(1): nop 
3f70(3): xor %r10d,%r10d
3f73(5): nop 0x0(%rax,%rax,1)
3f78(6): cmp $0x1,0x58(%rsp)
3f7e(6): jnz 0x3aa(%rip)
3f84(5): mov %r11,0x38(%rsp)
3f89(5): mov %r8b,0x30(%rsp)
3f8e(5): mov %r10b,0x28(%rsp)
3f93(5): call 0xffffd87d(%rip)
3f98(3): mov (%rax),%rcx
3f9b(3): movzx %bl,%edx
3f9e(6): movzx 0x28(%rsp),%r10d
3fa4(6): movzx 0x30(%rsp),%r8d
3faa(5): mov 0x38(%rsp),%r11
3faf(5): mov $0x1,%edi
3fb4(4): movzx 0x0(%rcx,%rdx,2),%eax
3fb8(4): and $0x4000,%ax
3fbc(4): setnz %r12b
3fc0(3): setz %al
3fc3(4): and 0xd(%rsp),%al
3fc7(2): test %al,%al
3fc9(6): jnz 0x998(%rip)
3fcf(5): cmp $0x2,0x8(%rsp)
3fd4(3): setz %dl
3fd7(5): jmp 0xfffffcd1(%rip)
3fdc(4): nop 0x0(%rax)
3fe0(4): movzx (%r9),%ebx
3fe4(3): cmp $0x7e,%bl
3fe7(2): jnbe 0xffffff89(%rip)
3fe9(7): lea 0x3398(%rip),%rcx
3ff0(3): movzx %bl,%edx
3ff3(4): movsxd 0x0(%rcx,%rdx,4),%rax
3ff7(3): add %rcx,%rax
3ffa(2): jmp %rax
3ffc(4): nop 0x0(%rax)
4000(3): xor %r10d,%r10d
4003(5): cmp $0x0,0xd(%rsp)
4008(6): jnz 0xfffffdf6(%rip)
400e(2): nop 
4010(5): mov $0x5c,%edx
4015(5): mov $0x5c,%ebx
401a(5): jmp 0xfffffd9a(%rip)
401f(1): nop 
4020(5): mov $0xc,%edx
4025(3): xor %r10d,%r10d
4028(5): mov $0x66,%ebx
402d(5): jmp 0xfffffd87(%rip)
4032(6): nop 0x0(%rax,%rax,1)
4038(5): mov $0xa,%edx
403d(3): xor %r10d,%r10d
4040(5): mov $0x6e,%ebx
4045(5): jmp 0xfffffd5d(%rip)
404a(6): nop 0x0(%rax,%rax,1)
4050(5): mov $0x61,%ebx
4055(5): jmp 0xfffffdcb(%rip)
405a(6): nop 0x0(%rax,%rax,1)
4060(3): xor %r10d,%r10d
4063(5): cmp $0x2,0x8(%rsp)
4068(3): setz %dl
406b(5): cmp $0x0,0xf(%rsp)
4070(6): jnz 0xb9a(%rip)
4076(3): mov %r8d,%eax
4079(3): mov %r15,%rcx
407c(3): xor $0x1,%eax
407f(2): and %dl,%al
4081(2): jz 0x2f(%rip)
4083(3): cmp %r15,%r13
4086(2): jbe 0x7(%rip)
4088(5): mov $0x27,0x0(%r14,%r15,1)
408d(4): lea 0x1(%r15),%rcx
4091(3): cmp %rcx,%r13
4094(2): jbe 0x8(%rip)
4096(6): mov $0x24,0x1(%r14,%r15,1)
409c(4): lea 0x2(%r15),%rcx
40a0(3): cmp %rcx,%r13
40a3(6): jnbe 0x636(%rip)
40a9(4): lea 0x3(%r15),%rcx
40ad(3): mov %eax,%r8d
40b0(3): cmp %rcx,%r13
40b3(2): jbe 0x7(%rip)
40b5(5): mov $0x5c,0x0(%r14,%rcx,1)
40ba(5): cmp $0x2,0x8(%rsp)
40bf(4): lea 0x1(%rcx),%r15
40c3(6): jz 0x606(%rip)
40c9(4): lea 0x1(%rbp),%rax
40cd(3): cmp %r11,%rax
40d0(2): jnb 0x1b(%rip)
40d2(5): mov 0x10(%rsp),%rax
40d7(5): movzx 0x1(%rax,%rbp,1),%eax
40dc(4): mov %al,0x28(%rsp)
40e0(3): sub $0x30,%eax
40e3(2): cmp $0x9,%al
40e5(6): jbe 0x834(%rip)
40eb(3): mov %r12d,%eax
40ee(5): mov $0x30,%ebx
40f3(3): xor %r12d,%r12d
40f6(5): jmp 0xfffffbb2(%rip)
40fb(5): nop 0x0(%rax,%rax,1)
4100(5): cmp $0x2,0x8(%rsp)
4105(3): mov %r10d,%r12d
4108(3): setz %dl
410b(3): xor %r10d,%r10d
410e(2): xor %eax,%eax
4110(5): jmp 0xfffffb98(%rip)
4115(3): nop (%rax)
4118(5): cmp $0x2,0x8(%rsp)
411d(3): setz %dl
4120(3): xor %r10d,%r10d
4123(5): jmp 0xfffffdc5(%rip)
4128(8): nop 0x0(%rax,%rax,1)
4130(5): cmp $0x2,0x8(%rsp)
4135(3): setz %dl
4138(3): xor %r10d,%r10d
413b(3): xor %r12d,%r12d
413e(5): jmp 0xfffffdb3(%rip)
4143(5): nop 0x0(%rax,%rax,1)
4148(5): cmp $0x2,0x8(%rsp)
414d(3): mov %r10d,%r12d
4150(5): mov $0x20,%ebx
4155(3): setz %dl
4158(3): xor %r10d,%r10d
415b(5): jmp 0xfffffd96(%rip)
4160(5): mov $0xd,%edx
4165(3): xor %r10d,%r10d
4168(5): mov $0x72,%ebx
416d(5): jmp 0xfffffc35(%rip)
4172(6): nop 0x0(%rax,%rax,1)
4178(5): mov $0x76,%ebx
417d(5): jmp 0xfffffca3(%rip)
4182(6): nop 0x0(%rax,%rax,1)
4188(5): mov $0x9,%edx
418d(3): xor %r10d,%r10d
4190(5): mov $0x74,%ebx
4195(5): jmp 0xfffffc0d(%rip)
419a(6): nop 0x0(%rax,%rax,1)
41a0(5): mov $0x62,%ebx
41a5(5): jmp 0xfffffc7b(%rip)
41aa(6): nop 0x0(%rax,%rax,1)
41b0(3): xor %r10d,%r10d
41b3(5): jmp 0xfffffa9d(%rip)
41b8(8): nop 0x0(%rax,%rax,1)
41c0(5): cmp $0x0,0xf(%rsp)
41c5(6): jnz 0x96b(%rip)
41cb(4): add $0x1,%rbp
41cf(3): mov %r8d,%eax
41d2(3): xor %r12d,%r12d
41d5(5): mov $0x5c,%ebx
41da(5): jmp 0xfffffb12(%rip)
41df(1): nop 
41e0(5): cmp $0x2,0x8(%rsp)
41e5(5): movzx 0xf(%rsp),%ebx
41ea(3): mov %r8d,%r12d
41ed(3): mov %r11,%rbp
41f0(3): setz %dl
41f3(2): mov %ebx,%eax
41f5(3): test %r15,%r15
41f8(3): setz %cl
41fb(2): and %edx,%eax
41fd(2): and %cl,%al
41ff(6): jnz 0xa67(%rip)
4205(2): mov %ebx,%eax
4207(3): xor $0x1,%eax
420a(2): and %al,%dl
420c(6): jz 0x970(%rip)
4212(5): cmp $0x0,0x7c(%rsp)
4217(6): jz 0x963(%rip)
421d(5): cmp $0x0,0xe(%rsp)
4222(6): jnz 0x9fb(%rip)
4228(3): test %r13,%r13
422b(3): setz %al
422e(6): cmp $0x0,0x50(%rsp)
4234(3): setnz %dl
4237(2): and %dl,%al
4239(6): jz 0xa23(%rip)
423f(5): mov 0x50(%rsp),%r13
4244(7): lea 0x2eb2(%rip),%rbx
424b(4): mov $0x27,(%r14)
424f(8): mov $0x2,0x8(%rsp)
4257(6): mov $0x1,%r15d
425d(9): mov $0x1,0x18(%rsp)
4266(5): mov $0x0,0xf(%rsp)
426b(5): mov %rbx,0x48(%rsp)
4270(4): mov %al,0x7c(%rsp)
4274(5): jmp 0xfffff8df(%rip)
4279(7): nop 0x0(%rax)
4280(5): cmp $0x0,0xf(%rsp)
4285(6): jnz 0x8ab(%rip)
428b(3): test %r13,%r13
428e(6): jz 0x402(%rip)
4294(2): xor %edx,%edx
4296(6): cmp $0x0,0x50(%rsp)
429c(6): jnz 0x3f4(%rip)
42a2(5): mov %r13,0x50(%rsp)
42a7(4): add $0x3,%r15
42ab(2): xor %eax,%eax
42ad(5): mov %r12b,0x7c(%rsp)
42b2(3): xor %r8d,%r8d
42b5(3): mov %rdx,%r13
42b8(5): mov $0x27,%ebx
42bd(5): jmp 0xfffffa1c(%rip)
42c2(6): nop 0x0(%rax,%rax,1)
42c8(5): test $0x4,0x78(%rsp)
42cd(2): jz 0x23(%rip)
42cf(4): lea 0x2(%rbp),%rcx
42d3(3): cmp %r11,%rcx
42d6(2): jnb 0x1a(%rip)
42d8(5): mov 0x10(%rsp),%rax
42dd(5): cmp $0x3f,0x1(%rax,%rbp,1)
42e2(6): jz 0x790(%rip)
42e8(8): nop 0x0(%rax,%rax,1)
42f0(2): xor %edx,%edx
42f2(3): xor %r12d,%r12d
42f5(2): xor %eax,%eax
42f7(5): mov $0x3f,%ebx
42fc(5): jmp 0xfffff9ac(%rip)
4301(7): nop 0x0(%rax)
4308(5): cmp $0x0,0xf(%rsp)
430d(6): jnz 0x823(%rip)
4313(3): xor %r12d,%r12d
4316(2): xor %eax,%eax
4318(5): mov $0x3f,%ebx
431d(5): jmp 0xfffff9bc(%rip)
4322(6): nop 0x0(%rax,%rax,1)
4328(8): lea 0xa0(%rsp),%rax
4330(4): cmp $0xffffffff,%r11
4334(c): mov $0x0,0xa0(%rsp)
4340(5): mov %rax,0x28(%rsp)
4345(2): jnz 0x2f(%rip)
4347(5): mov 0x10(%rsp),%rdi
434c(5): mov %r8b,0x40(%rsp)
4351(5): mov %r10b,0x38(%rsp)
4356(5): mov %r9,0x30(%rsp)
435b(5): call 0xffffd265(%rip)
4360(6): movzx 0x40(%rsp),%r8d
4366(6): movzx 0x38(%rsp),%r10d
436c(3): mov %rax,%r11
436f(5): mov 0x30(%rsp),%r9
4374(8): lea 0x9c(%rsp),%rax
437c(2): xor %ecx,%ecx
437e(4): mov %bl,0x7e(%rsp)
4382(5): mov %r8b,0x7d(%rsp)
4387(3): mov %rcx,%rbx
438a(8): mov %r9,0x88(%rsp)
4392(5): mov %rax,0x38(%rsp)
4397(5): mov %r10b,0x7f(%rsp)
439c(8): mov %r15,0x80(%rsp)
43a4(5): mov %r14,0x40(%rsp)
43a9(5): mov %r13,0x70(%rsp)
43ae(5): mov %r11,0x30(%rsp)
43b3(5): mov 0x10(%rsp),%rax
43b8(5): lea 0x0(%rbp,%rbx,1),%r14
43bd(5): mov 0x30(%rsp),%rdx
43c2(5): mov 0x28(%rsp),%rcx
43c7(5): mov 0x38(%rsp),%rdi
43cc(4): lea 0x0(%rax,%r14,1),%r13
43d0(3): sub %r14,%rdx
43d3(3): mov %r13,%rsi
43d6(5): call 0x20aa(%rip)
43db(3): test %rax,%rax
43de(3): mov %rax,%r15
43e1(2): jz 0x50(%rip)
43e3(4): cmp $0xffffffff,%rax
43e7(6): jz 0x61e(%rip)
43ed(4): cmp $0xfffffffe,%rax
43f1(6): jz 0x5a0(%rip)
43f7(5): cmp $0x2,0x8(%rsp)
43fc(3): setz %al
43ff(4): and 0xf(%rsp),%al
4403(6): jnz 0x19d(%rip)
4409(7): mov 0x9c(%rsp),%edi
4410(5): call 0xffffd3f0(%rip)
4415(5): mov 0x28(%rsp),%rdi
441a(2): test %eax,%eax
441c(5): mov $0x0,%eax
4421(4): cmove %eax,%r12d
4425(3): add %r15,%rbx
4428(5): call 0xffffd3c8(%rip)
442d(2): test %eax,%eax
442f(2): jz 0xffffff84(%rip)
4431(3): mov %r12d,%edx
4434(3): mov %rbx,%rdi
4437(6): movzx 0x7d(%rsp),%r8d
443d(3): xor $0x1,%edx
4440(5): movzx 0x7e(%rsp),%ebx
4445(6): movzx 0x7f(%rsp),%r10d
444b(4): and 0xd(%rsp),%dl
444f(8): mov 0x80(%rsp),%r15
4457(5): mov 0x40(%rsp),%r14
445c(5): mov 0x70(%rsp),%r13
4461(5): mov 0x30(%rsp),%r11
4466(4): cmp $0x1,%rdi
446a(6): jbe 0x601(%rip)
4470(3): mov %rdi,%rcx
4473(2): xor %esi,%esi
4475(6): movzx 0xf(%rsp),%r9d
447b(3): add %rbp,%rcx
447e(5): mov 0x10(%rsp),%rdi
4483(5): jmp 0xbb(%rip)
4488(8): nop 0x0(%rax,%rax,1)
4490(5): cmp $0x2,0x8(%rsp)
4495(3): setz %al
4498(3): test %r9b,%r9b
449b(6): jnz 0x4b5(%rip)
44a1(3): mov %r8d,%esi
44a4(3): xor $0x1,%esi
44a7(3): and %sil,%al
44aa(2): jz 0x31(%rip)
44ac(3): cmp %r15,%r13
44af(2): jbe 0x7(%rip)
44b1(5): mov $0x27,0x0(%r14,%r15,1)
44b6(4): lea 0x1(%r15),%rsi
44ba(3): cmp %rsi,%r13
44bd(2): jbe 0x8(%rip)
44bf(6): mov $0x24,0x1(%r14,%r15,1)
44c5(4): lea 0x2(%r15),%rsi
44c9(3): cmp %rsi,%r13
44cc(2): jbe 0x8(%rip)
44ce(6): mov $0x27,0x2(%r14,%r15,1)
44d4(4): add $0x3,%r15
44d8(3): mov %eax,%r8d
44db(3): cmp %r15,%r13
44de(2): jbe 0x7(%rip)
44e0(5): mov $0x5c,0x0(%r14,%r15,1)
44e5(4): lea 0x1(%r15),%rax
44e9(3): cmp %rax,%r13
44ec(2): jbe 0xf(%rip)
44ee(2): mov %ebx,%eax
44f0(3): shr $0x6,%al
44f3(3): add $0x30,%eax
44f6(5): mov %al,0x1(%r14,%r15,1)
44fb(4): lea 0x2(%r15),%rax
44ff(3): cmp %rax,%r13
4502(2): jbe 0x12(%rip)
4504(2): mov %ebx,%eax
4506(3): shr $0x3,%al
4509(3): and $0x7,%eax
450c(3): add $0x30,%eax
450f(5): mov %al,0x2(%r14,%r15,1)
4514(3): and $0x7,%ebx
4517(4): add $0x1,%rbp
451b(4): add $0x3,%r15
451f(3): add $0x30,%ebx
4522(3): cmp %rcx,%rbp
4525(6): jnb 0xfffff7eb(%rip)
452b(2): mov %edx,%esi
452d(3): cmp %r15,%r13
4530(2): jbe 0x6(%rip)
4532(4): mov %bl,0x0(%r14,%r15,1)
4536(4): movzx 0x0(%rdi,%rbp,1),%ebx
453a(4): add $0x1,%r15
453e(2): test %dl,%dl
4540(6): jnz 0xffffff50(%rip)
4546(2): mov %esi,%eax
4548(3): xor $0x1,%eax
454b(3): and %r8d,%eax
454e(3): test %r10b,%r10b
4551(2): jz 0x10(%rip)
4553(3): cmp %r15,%r13
4556(2): jbe 0x7(%rip)
4558(5): mov $0x5c,0x0(%r14,%r15,1)
455d(4): add $0x1,%r15
4561(4): add $0x1,%rbp
4565(3): cmp %rcx,%rbp
4568(6): jnb 0xfffff784(%rip)
456e(2): test %al,%al
4570(6): jz 0x3fe(%rip)
4576(3): cmp %r15,%r13
4579(2): jbe 0x7(%rip)
457b(5): mov $0x27,0x0(%r14,%r15,1)
4580(4): lea 0x1(%r15),%rax
4584(3): cmp %rax,%r13
4587(2): jbe 0x8(%rip)
4589(6): mov $0x27,0x1(%r14,%r15,1)
458f(4): add $0x2,%r15
4593(3): xor %r10d,%r10d
4596(3): xor %r8d,%r8d
4599(2): jmp 0xffffff94(%rip)
459b(5): nop 0x0(%rax,%rax,1)
45a0(4): cmp $0x1,%r15
45a4(6): jz 0xfffffe65(%rip)
45aa(5): mov 0x10(%rsp),%rdi
45af(4): lea 0x0(%rdi,%r15,1),%rcx
45b3(5): lea 0x1(%rdi,%r14,1),%rdx
45b8(4): lea 0x0(%rcx,%r14,1),%r8
45bc(2): jmp 0x11(%rip)
45be(2): nop 
45c0(4): add $0x1,%rdx
45c4(3): cmp %rdx,%r8
45c7(6): jz 0xfffffe42(%rip)
45cd(3): movzx (%rdx),%ecx
45d0(3): sub $0x5b,%ecx
45d3(3): cmp $0x21,%cl
45d6(2): jnbe 0xffffffea(%rip)
45d8(5): mov $0x1,%esi
45dd(3): shl/sal %cl,%rsi
45e0(3): mov %rsi,%rcx
45e3(a): mov $0x8589934635,%rsi
45ed(3): test %rsi,%rcx
45f0(2): jz 0xffffffd0(%rip)
45f2(5): mov 0x40(%rsp),%r14
45f7(5): mov 0x70(%rsp),%r13
45fc(5): mov 0x30(%rsp),%rbp
4601(8): mov $0x2,0x8(%rsp)
4609(5): cmp $0x0,0xd(%rsp)
460e(2): jz 0x12(%rip)
4610(2): test %al,%al
4612(5): mov $0x4,%eax
4617(5): cmove 0x8(%rsp),%eax
461c(4): mov %eax,0x8(%rsp)
4620(4): sub $0x8,%rsp
4624(3): mov %rbp,%rcx
4627(3): mov %r13,%rsi
462a(4): push 0x68(%rsp)
462e(4): push 0x78(%rsp)
4632(3): mov %r14,%rdi
4635(2): push $0x0
4637(8): mov 0x98(%rsp),%r9d
463f(5): mov 0x28(%rsp),%r8d
4644(5): mov 0x30(%rsp),%rdx
4649(4): and $0xfd,%r9d
464d(5): call 0xfffff433(%rip)
4652(4): add $0x20,%rsp
4656(3): mov %rax,%r15
4659(8): mov 0xa8(%rsp),%rbx
4661(9): xor $0x28,%rbx
466a(3): mov %r15,%rax
466d(6): jnz 0x606(%rip)
4673(7): add $0xb8,%rsp
467a(1): pop %rbx
467b(1): pop %rbp
467c(2): pop %r12
467e(2): pop %r13
4680(2): pop %r14
4682(2): pop %r15
4684(1): ret near (%rsp)
4685(3): nop (%rax)
4688(3): mov %r11,%rbp
468b(5): jmp 0xffffff7e(%rip)
4690(3): cmp %r15,%r13
4693(2): jbe 0x7(%rip)
4695(5): mov $0x27,0x0(%r14,%r15,1)
469a(4): lea 0x1(%r15),%rax
469e(3): cmp %rax,%r13
46a1(2): jbe 0x8(%rip)
46a3(6): mov $0x5c,0x1(%r14,%r15,1)
46a9(4): lea 0x2(%r15),%rax
46ad(3): cmp %rax,%r13
46b0(6): jbe 0x5f2(%rip)
46b6(3): mov %r13,%rdx
46b9(6): mov $0x27,0x2(%r14,%r15,1)
46bf(5): mov 0x50(%rsp),%r13
46c4(5): jmp 0xfffffbde(%rip)
46c9(3): mov %r12d,%eax
46cc(5): mov $0x30,%ebx
46d1(3): xor %r12d,%r12d
46d4(5): jmp 0xfffff605(%rip)
46d9(6): mov $0x27,0x2(%r14,%r15,1)
46df(5): jmp 0xfffff9ca(%rip)
46e4(2): test %ebx,%ebx
46e6(6): jnz 0xfffff42d(%rip)
46ec(5): mov $0x1,0xd(%rsp)
46f1(3): test %r13,%r13
46f4(6): jnz 0x596(%rip)
46fa(7): lea 0x29fc(%rip),%rax
4701(9): mov $0x0,0x50(%rsp)
470a(5): mov $0x1,0xe(%rsp)
470f(5): mov $0x0,0x7c(%rsp)
4714(3): xor %r12d,%r12d
4717(5): mov $0x0,0xf(%rsp)
471c(9): mov $0x1,0x18(%rsp)
4725(5): mov %rax,0x48(%rsp)
472a(6): mov $0x1,%r15d
4730(8): mov $0x2,0x8(%rsp)
4738(5): jmp 0xfffff41b(%rip)
473d(3): nop (%rax)
4740(2): test %ebx,%ebx
4742(6): jnz 0x3fb(%rip)
4748(3): test %r13,%r13
474b(6): jz 0x22b(%rip)
4751(4): mov $0x22,(%r14)
4755(5): mov $0x1,0xe(%rsp)
475a(3): xor %r12d,%r12d
475d(5): mov $0x0,0x7c(%rsp)
4762(9): mov $0x0,0x50(%rsp)
476b(7): lea 0x2989(%rip),%rax
4772(5): mov $0x0,0xf(%rsp)
4777(5): mov $0x1,0xd(%rsp)
477c(9): mov $0x1,0x18(%rsp)
4785(6): mov $0x1,%r15d
478b(5): mov %rax,0x48(%rsp)
4790(5): jmp 0xfffff3c3(%rip)
4795(7): lea 0x295f(%rip),%rax
479c(5): mov $0x1,0xe(%rsp)
47a1(5): mov $0x0,0x7c(%rsp)
47a6(3): xor %r12d,%r12d
47a9(9): mov $0x0,0x50(%rsp)
47b2(5): mov $0x1,0xf(%rsp)
47b7(5): mov $0x1,0xd(%rsp)
47bc(9): mov $0x1,0x18(%rsp)
47c5(3): xor %r15d,%r15d
47c8(5): mov %rax,0x48(%rsp)
47cd(8): mov $0x5,0x8(%rsp)
47d5(5): jmp 0xfffff37e(%rip)
47da(5): mov $0x1,0xe(%rsp)
47df(5): mov $0x0,0x7c(%rsp)
47e4(3): xor %r12d,%r12d
47e7(9): mov $0x0,0x50(%rsp)
47f0(5): mov $0x0,0xf(%rsp)
47f5(3): xor %r15d,%r15d
47f8(5): mov $0x1,0xd(%rsp)
47fd(9): mov $0x0,0x18(%rsp)
4806(9): mov $0x0,0x48(%rsp)
480f(5): jmp 0xfffff344(%rip)
4814(5): cmp $0xa,0x8(%rsp)
4819(2): jz 0x58(%rip)
481b(7): lea 0x28dd(%rip),%rsi
4822(2): xor %edi,%edi
4824(5): mov $0x5,%edx
4829(5): call 0xffffcd77(%rip)
482e(3): mov %rax,%rcx
4831(5): mov %rax,0x68(%rsp)
4836(7): lea 0x28c2(%rip),%rax
483d(3): cmp %rax,%rcx
4840(6): jz 0x39e(%rip)
4846(7): lea 0x28b0(%rip),%rsi
484d(2): xor %edi,%edi
484f(5): mov $0x5,%edx
4854(5): call 0xffffcd4c(%rip)
4859(3): mov %rax,%rcx
485c(5): mov %rax,0x60(%rsp)
4861(7): lea 0x2895(%rip),%rax
4868(3): cmp %rax,%rcx
486b(6): jz 0x389(%rip)
4871(3): xor %r15d,%r15d
4874(2): test %ebx,%ebx
4876(6): jz 0x1c7(%rip)
487c(2): test %ebx,%ebx
487e(5): mov 0x60(%rsp),%rbx
4883(5): setnz 0xf(%rsp)
4888(3): xor %r12d,%r12d
488b(3): mov %rbx,%rdi
488e(5): call 0xffffcd32(%rip)
4893(5): mov %rbx,0x48(%rsp)
4898(5): mov %rax,0x18(%rsp)
489d(5): mov $0x1,0xe(%rsp)
48a2(5): mov $0x0,0x7c(%rsp)
48a7(9): mov $0x0,0x50(%rsp)
48b0(5): mov $0x1,0xd(%rsp)
48b5(5): jmp 0xfffff29e(%rip)
48ba(5): mov $0x1,0xe(%rsp)
48bf(5): mov $0x0,0x7c(%rsp)
48c4(3): xor %r12d,%r12d
48c7(9): mov $0x0,0x50(%rsp)
48d0(5): mov $0x0,0xf(%rsp)
48d5(3): xor %r15d,%r15d
48d8(5): mov $0x0,0xd(%rsp)
48dd(9): mov $0x0,0x18(%rsp)
48e6(9): mov $0x0,0x48(%rsp)
48ef(5): jmp 0xfffff264(%rip)
48f4(5): mov $0x1,0xe(%rsp)
48f9(5): mov $0x0,0x7c(%rsp)
48fe(3): xor %r12d,%r12d
4901(9): mov $0x0,0x50(%rsp)
490a(5): mov $0x1,0xf(%rsp)
490f(5): mov $0x1,0xd(%rsp)
4914(5): jmp 0xfffff21f(%rip)
4919(3): cmp %r15,%r13
491c(2): jbe 0x7(%rip)
491e(5): mov $0x30,0x0(%r14,%r15,1)
4923(4): lea 0x2(%rcx),%rax
4927(3): cmp %rax,%r13
492a(2): jbe 0x8(%rip)
492c(6): mov $0x30,0x2(%r14,%rcx,1)
4932(3): mov %r12d,%eax
4935(4): lea 0x3(%rcx),%r15
4939(3): xor %r12d,%r12d
493c(5): mov $0x30,%ebx
4941(5): jmp 0xfffff367(%rip)
4946(a): nop 0x0(%rax,%rax,1)
4950(5): movzx 0xf(%rsp),%ebx
4955(3): mov %r11,%rbp
4958(4): mov %bl,0xd(%rsp)
495c(5): jmp 0xfffffcad(%rip)
4961(5): movzx 0xd(%rsp),%edx
4966(3): xor %r12d,%r12d
4969(5): jmp 0xfffffb07(%rip)
496e(3): xor %r10d,%r10d
4971(5): jmp 0xfffffbbc(%rip)
4976(9): mov $0x0,0x50(%rsp)
497f(5): mov $0x1,0xe(%rsp)
4984(3): xor %r12d,%r12d
4987(5): mov $0x0,0x7c(%rsp)
498c(5): jmp 0xfffffddf(%rip)
4991(5): mov 0x30(%rsp),%r11
4996(3): mov %r14,%rsi
4999(3): mov %r13,%rcx
499c(3): mov %rbx,%rax
499f(3): mov %rbx,%rdi
49a2(6): movzx 0x7d(%rsp),%r8d
49a8(5): movzx 0x7e(%rsp),%ebx
49ad(8): mov 0x88(%rsp),%r9
49b5(3): cmp %r11,%rsi
49b8(6): movzx 0x7f(%rsp),%r10d
49be(8): mov 0x80(%rsp),%r15
49c6(5): mov 0x40(%rsp),%r14
49cb(5): mov 0x70(%rsp),%r13
49d0(2): jnb 0x28(%rip)
49d2(3): cmp $0x0,(%rcx)
49d5(2): jnz 0x12(%rip)
49d7(2): jmp 0x21(%rip)
49d9(7): nop 0x0(%rax)
49e0(5): cmp $0x0,0x0(%r9,%rax,1)
49e5(2): jz 0x10(%rip)
49e7(4): add $0x1,%rax
49eb(5): lea 0x0(%rbp,%rax,1),%rdx
49f0(3): cmp %rdx,%r11
49f3(2): jnbe 0xffffffed(%rip)
49f5(3): mov %rax,%rdi
49f8(5): movzx 0xd(%rsp),%edx
49fd(3): xor %r12d,%r12d
4a00(5): jmp 0xfffffa66(%rip)
4a05(3): mov %rbx,%rdi
4a08(6): movzx 0x7d(%rsp),%r8d
4a0e(5): movzx 0x7e(%rsp),%ebx
4a13(6): movzx 0x7f(%rsp),%r10d
4a19(8): mov 0x80(%rsp),%r15
4a21(3): xor %r12d,%r12d
4a24(5): mov 0x40(%rsp),%r14
4a29(5): mov 0x70(%rsp),%r13
4a2e(5): mov 0x30(%rsp),%r11
4a33(5): movzx 0xd(%rsp),%edx
4a38(5): jmp 0xfffffa2e(%rip)
4a3d(5): mov 0x68(%rsp),%rdx
4a42(3): movzx (%rdx),%eax
4a45(2): test %al,%al
4a47(6): jz 0xfffffe35(%rip)
4a4d(3): nop (%rax)
4a50(3): cmp %r15,%r13
4a53(2): jbe 0x6(%rip)
4a55(4): mov %al,0x0(%r14,%r15,1)
4a59(4): add $0x1,%r15
4a5d(5): movzx 0x0(%rdx,%r15,1),%eax
4a62(2): test %al,%al
4a64(2): jnz 0xffffffec(%rip)
4a66(5): jmp 0xfffffe16(%rip)
4a6b(2): mov %edx,%eax
4a6d(5): jmp 0xfffff55a(%rip)
4a72(4): movzx 0x0(%rax,%rcx,1),%ebx
4a76(3): cmp $0x3e,%bl
4a79(6): jnbe 0xfffff877(%rip)
4a7f(a): mov $0x8070630310989004800,%rax
4a89(4): bt %rbx,%rax
4a8d(6): jnb 0xfffff863(%rip)
4a93(5): cmp $0x0,0xf(%rsp)
4a98(6): jnz 0x1ea(%rip)
4a9e(3): cmp %r15,%r13
4aa1(2): jbe 0x7(%rip)
4aa3(5): mov $0x3f,0x0(%r14,%r15,1)
4aa8(4): lea 0x1(%r15),%rax
4aac(3): cmp %rax,%r13
4aaf(2): jbe 0x8(%rip)
4ab1(6): mov $0x22,0x1(%r14,%r15,1)
4ab7(4): lea 0x2(%r15),%rax
4abb(3): cmp %rax,%r13
4abe(2): jbe 0x8(%rip)
4ac0(6): mov $0x22,0x2(%r14,%r15,1)
4ac6(4): lea 0x3(%r15),%rax
4aca(3): cmp %rax,%r13
4acd(2): jbe 0x8(%rip)
4acf(6): mov $0x3f,0x3(%r14,%r15,1)
4ad5(4): add $0x4,%r15
4ad9(2): xor %edx,%edx
4adb(3): xor %r12d,%r12d
4ade(2): xor %eax,%eax
4ae0(3): mov %rcx,%rbp
4ae3(5): jmp 0xfffff1c5(%rip)
4ae8(2): test %ebx,%ebx
4aea(6): jz 0x18e(%rip)
4af0(7): lea 0x2606(%rip),%rax
4af7(5): mov $0x1,0xe(%rsp)
4afc(5): mov $0x0,0x7c(%rsp)
4b01(3): xor %r12d,%r12d
4b04(9): mov $0x0,0x50(%rsp)
4b0d(5): mov $0x1,0xf(%rsp)
4b12(5): mov $0x0,0xd(%rsp)
4b17(9): mov $0x1,0x18(%rsp)
4b20(3): xor %r15d,%r15d
4b23(5): mov %rax,0x48(%rsp)
4b28(5): jmp 0xfffff02b(%rip)
4b2d(3): nop (%rax)
4b30(3): mov %r11,%rbp
4b33(5): movzx 0xf(%rsp),%eax
4b38(5): jmp 0xfffffad1(%rip)
4b3d(7): lea 0x25b7(%rip),%rax
4b44(5): mov $0x1,0xe(%rsp)
4b49(5): mov $0x0,0x7c(%rsp)
4b4e(3): xor %r12d,%r12d
4b51(9): mov $0x0,0x50(%rsp)
4b5a(5): mov $0x1,0xf(%rsp)
4b5f(5): mov $0x1,0xd(%rsp)
4b64(9): mov $0x1,0x18(%rsp)
4b6d(3): xor %r15d,%r15d
4b70(5): mov %rax,0x48(%rsp)
4b75(5): jmp 0xffffefde(%rip)
4b7a(2): mov %edx,%eax
4b7c(5): mov 0x48(%rsp),%rbx
4b81(3): test %rbx,%rbx
4b84(2): jz 0x2e(%rip)
4b86(2): test %al,%al
4b88(2): jz 0x2a(%rip)
4b8a(3): movzx (%rbx),%ecx
4b8d(3): mov %rbx,%rax
4b90(2): test %cl,%cl
4b92(2): jz 0x20(%rip)
4b94(3): mov %r15,%rdx
4b97(3): sub %r15,%rax
4b9a(3): cmp %rdx,%r13
4b9d(2): jbe 0x6(%rip)
4b9f(4): mov %cl,0x0(%r14,%rdx,1)
4ba3(4): add $0x1,%rdx
4ba7(4): movzx 0x0(%rax,%rdx,1),%ecx
4bab(2): test %cl,%cl
4bad(2): jnz 0xffffffed(%rip)
4baf(3): mov %rdx,%r15
4bb2(3): cmp %r15,%r13
4bb5(6): jbe 0xfffffaa4(%rip)
4bbb(5): mov $0x0,0x0(%r14,%r15,1)
4bc0(5): jmp 0xfffffa99(%rip)
4bc5(5): cmp $0x2,0x8(%rsp)
4bca(5): movzx 0xf(%rsp),%ebx
4bcf(3): mov %r11,%rbp
4bd2(3): setz %al
4bd5(4): mov %bl,0xd(%rsp)
4bd9(5): jmp 0xfffffa30(%rip)
4bde(4): mov 0x8(%rsp),%esi
4be2(3): mov %rcx,%rdi
4be5(5): call 0xffffedab(%rip)
4bea(5): mov %rax,0x68(%rsp)
4bef(5): jmp 0xfffffc57(%rip)
4bf4(4): mov 0x8(%rsp),%esi
4bf8(3): mov %rcx,%rdi
4bfb(5): call 0xffffed95(%rip)
4c00(5): mov %rax,0x60(%rsp)
4c05(5): jmp 0xfffffc6c(%rip)
4c0a(5): movzx 0xf(%rsp),%ebx
4c0f(3): mov %r11,%rbp
4c12(2): mov %edx,%eax
4c14(4): mov %bl,0xd(%rsp)
4c18(5): jmp 0xfffff9f1(%rip)
4c1d(4): sub $0x8,%rsp
4c21(6): mov $0x5,%r8d
4c27(3): mov %r11,%rcx
4c2a(4): push 0x68(%rsp)
4c2e(4): push 0x78(%rsp)
4c32(3): mov %r14,%rdi
4c35(4): push 0x38(%rsp)
4c39(8): mov 0x98(%rsp),%r9d
4c41(5): mov 0x30(%rsp),%rdx
4c46(5): mov 0x70(%rsp),%rsi
4c4b(5): call 0xffffee35(%rip)
4c50(4): add $0x20,%rsp
4c54(3): mov %rax,%r15
4c57(5): jmp 0xfffffa02(%rip)
4c5c(5): movzx 0x7c(%rsp),%eax
4c61(5): jmp 0xffffff1b(%rip)
4c66(8): mov $0x2,0x8(%rsp)
4c6e(5): jmp 0xfffff99b(%rip)
4c73(5): call 0xffffc95d(%rip)
4c78(5): mov $0x0,0xd(%rsp)
4c7d(5): jmp 0xfffffa74(%rip)
4c82(3): mov %r11,%rbp
4c85(5): jmp 0xfffff99b(%rip)
4c8a(5): mov $0x1,0xe(%rsp)
4c8f(2): xor %eax,%eax
4c91(3): xor %r12d,%r12d
4c94(9): mov $0x0,0x50(%rsp)
4c9d(5): jmp 0xfffff5a7(%rip)
4ca2(3): mov %r13,%rdx
4ca5(5): mov 0x50(%rsp),%r13
4caa(5): jmp 0xfffff5f8(%rip)
4caf(5): call 0xffffc861(%rip)

"quotearg_n_options" :
4cc0(2): push %r15
4cc2(2): push %r14
4cc4(3): movsxd %edi,%r15
4cc7(2): push %r13
4cc9(2): push %r12
4ccb(3): mov %rdx,%r14
4cce(1): push %rbp
4ccf(1): push %rbx
4cd0(3): mov %rcx,%rbp
4cd3(4): sub $0x28,%rsp
4cd7(5): mov %rsi,0x8(%rsp)
4cdc(5): call 0xffffc844(%rip)
4ce1(3): mov %rax,%r13
4ce4(2): mov (%rax),%eax
4ce6(3): test %r15d,%r15d
4ce9(7): mov 0x205390(%rip),%rbx
4cf0(4): mov %eax,0x18(%rsp)
4cf4(6): js 0x16d(%rip)
4cfa(7): cmp %r15d,0x205377(%rip)
4d01(2): jnle 0x64(%rip)
4d03(7): cmp $0x7fffffff,%r15d
4d0a(6): jz 0x15c(%rip)
4d10(4): lea 0x1(%r15),%r12d
4d14(7): lea 0x205375(%rip),%rax
4d1b(3): movsxd %r12d,%rsi
4d1e(4): shl/sal $0x4,%rsi
4d22(3): cmp %rax,%rbx
4d25(6): jz 0x11b(%rip)
4d2b(3): mov %rbx,%rdi
4d2e(5): call 0xfd2(%rip)
4d33(3): mov %rax,%rbx
4d36(7): mov %rax,0x205343(%rip)
4d3d(7): movsxd 0x205334(%rip),%rdi
4d44(3): mov %r12d,%edx
4d47(2): xor %esi,%esi
4d49(2): sub %edi,%edx
4d4b(4): shl/sal $0x4,%rdi
4d4f(3): movsxd %edx,%rdx
4d52(3): add %rbx,%rdi
4d55(4): shl/sal $0x4,%rdx
4d59(5): call 0xffffc8f7(%rip)
4d5e(7): mov %r12d,0x205313(%rip)
4d65(3): mov 0x4(%rbp),%eax
4d68(4): shl/sal $0x4,%r15
4d6c(4): sub $0x8,%rsp
4d70(3): add %r15,%rbx
4d73(4): lea 0x8(%rbp),%r15
4d77(4): mov 0x0(%rbp),%r8d
4d7b(3): mov (%rbx),%r11
4d7e(4): mov 0x8(%rbx),%r12
4d82(3): mov %r14,%rcx
4d85(3): or $0x1,%eax
4d88(4): mov %eax,0x24(%rsp)
4d8c(3): push 0x30(%rbp)
4d8f(3): mov %eax,%r9d
4d92(3): push 0x28(%rbp)
4d95(2): push %r15
4d97(3): mov %r11,%rsi
4d9a(5): mov 0x28(%rsp),%rdx
4d9f(3): mov %r12,%rdi
4da2(5): mov %r11,0x30(%rsp)
4da7(5): call 0xffffecd9(%rip)
4dac(4): add $0x20,%rsp
4db0(5): mov 0x10(%rsp),%r11
4db5(3): cmp %rax,%r11
4db8(2): jnbe 0x69(%rip)
4dba(4): lea 0x1(%rax),%rsi
4dbe(7): lea 0x20535b(%rip),%rax
4dc5(3): cmp %rax,%r12
4dc8(3): mov %rsi,(%rbx)
4dcb(2): jz 0x14(%rip)
4dcd(3): mov %r12,%rdi
4dd0(5): mov %rsi,0x10(%rsp)
4dd5(5): call 0xffffc72b(%rip)
4dda(5): mov 0x10(%rsp),%rsi
4ddf(3): mov %rsi,%rdi
4de2(5): mov %rsi,0x10(%rsp)
4de7(5): call 0xeb9(%rip)
4dec(4): sub $0x8,%rsp
4df0(4): mov %rax,0x8(%rbx)
4df4(4): mov 0x0(%rbp),%r8d
4df8(3): push 0x30(%rbp)
4dfb(3): push 0x28(%rbp)
4dfe(3): mov %r14,%rcx
4e01(2): push %r15
4e03(5): mov 0x3c(%rsp),%r9d
4e08(3): mov %rax,%rdi
4e0b(5): mov 0x28(%rsp),%rdx
4e10(5): mov 0x30(%rsp),%rsi
4e15(3): mov %rax,%r12
4e18(5): call 0xffffec68(%rip)
4e1d(4): add $0x20,%rsp
4e21(4): mov 0x18(%rsp),%eax
4e25(4): mov %eax,0x0(%r13)
4e29(4): add $0x28,%rsp
4e2d(3): mov %r12,%rax
4e30(1): pop %rbx
4e31(1): pop %rbp
4e32(2): pop %r12
4e34(2): pop %r13
4e36(2): pop %r14
4e38(2): pop %r15
4e3a(1): ret near (%rsp)
4e3b(5): nop 0x0(%rax,%rax,1)
4e40(2): xor %edi,%edi
4e42(5): call 0xebe(%rip)
4e47(8): movdqa 0x205241(%rip),%xmm0
4e4f(3): mov %rax,%rbx
4e52(7): mov %rax,0x205227(%rip)
4e59(3): movups %xmm0,(%rax)
4e5c(5): jmp 0xfffffee1(%rip)
4e61(5): call 0xffffc6af(%rip)
4e66(5): call 0x108a(%rip)

"clone_quoting_options" :
4e70(2): push %r12
4e72(1): push %rbp
4e73(1): push %rbx
4e74(3): mov %rdi,%rbx
4e77(5): call 0xffffc6a9(%rip)
4e7c(3): mov (%rax),%r12d
4e7f(3): mov %rax,%rbp
4e82(7): lea 0x205397(%rip),%rax
4e89(3): test %rbx,%rbx
4e8c(5): mov $0x38,%esi
4e91(4): cmove %rax,%rbx
4e95(3): mov %rbx,%rdi
4e98(5): call 0x1008(%rip)
4e9d(4): mov %r12d,0x0(%rbp)
4ea1(1): pop %rbx
4ea2(1): pop %rbp
4ea3(2): pop %r12
4ea5(1): ret near (%rsp)

"get_quoting_style" :
4eb0(7): lea 0x205369(%rip),%rax
4eb7(3): test %rdi,%rdi
4eba(4): cmove %rax,%rdi
4ebe(2): mov (%rdi),%eax
4ec0(1): ret near (%rsp)

"set_quoting_style" :
4ed0(7): lea 0x205349(%rip),%rax
4ed7(3): test %rdi,%rdi
4eda(4): cmove %rax,%rdi
4ede(2): mov %esi,(%rdi)
4ee0(1): ret near (%rsp)

"set_char_quoting" :
4ef0(7): lea 0x205329(%rip),%rax
4ef7(3): test %rdi,%rdi
4efa(2): mov %esi,%ecx
4efc(4): cmove %rax,%rdi
4f00(2): mov %esi,%eax
4f02(3): and $0x1f,%ecx
4f05(3): shr $0x5,%al
4f08(3): movzx %al,%eax
4f0b(5): lea 0x8(%rdi,%rax,4),%rdi
4f10(2): mov (%rdi),%esi
4f12(2): mov %esi,%eax
4f14(2): shr %cl,%eax
4f16(2): xor %eax,%edx
4f18(3): and $0x1,%eax
4f1b(3): and $0x1,%edx
4f1e(2): shl/sal %cl,%edx
4f20(2): xor %esi,%edx
4f22(2): mov %edx,(%rdi)
4f24(1): ret near (%rsp)

"set_quoting_flags" :
4f30(7): lea 0x2052e9(%rip),%rax
4f37(3): test %rdi,%rdi
4f3a(4): cmove %rax,%rdi
4f3e(3): mov 0x4(%rdi),%eax
4f41(3): mov %esi,0x4(%rdi)
4f44(1): ret near (%rsp)

"set_custom_quoting" :
4f50(7): lea 0x2052c9(%rip),%rax
4f57(3): test %rdi,%rdi
4f5a(4): cmove %rax,%rdi
4f5e(3): test %rsi,%rsi
4f61(6): mov $0xa,(%rdi)
4f67(2): jz 0x10(%rip)
4f69(3): test %rdx,%rdx
4f6c(2): jz 0xb(%rip)
4f6e(4): mov %rsi,0x28(%rdi)
4f72(4): mov %rdx,0x30(%rdi)
4f76(1): ret near (%rsp)
4f77(4): sub $0x8,%rsp
4f7b(5): call 0xffffc595(%rip)

"quotearg_buffer" :
4f80(2): push %r15
4f82(2): push %r14
4f84(7): lea 0x205295(%rip),%rax
4f8b(2): push %r13
4f8d(2): push %r12
4f8f(3): mov %rdi,%r13
4f92(1): push %rbp
4f93(1): push %rbx
4f94(3): mov %r8,%rbx
4f97(3): mov %rsi,%r14
4f9a(3): mov %rdx,%r15
4f9d(4): sub $0x18,%rsp
4fa1(3): test %r8,%r8
4fa4(4): cmove %rax,%rbx
4fa8(5): mov %rcx,0x8(%rsp)
4fad(5): call 0xffffc573(%rip)
4fb2(3): mov (%rax),%r12d
4fb5(3): mov %rax,%rbp
4fb8(4): lea 0x8(%rbx),%rax
4fbc(4): sub $0x8,%rsp
4fc0(4): mov 0x4(%rbx),%r9d
4fc4(3): push 0x30(%rbx)
4fc7(3): mov (%rbx),%r8d
4fca(3): push 0x28(%rbx)
4fcd(3): mov %r15,%rdx
4fd0(1): push %rax
4fd1(5): mov 0x28(%rsp),%rcx
4fd6(3): mov %r14,%rsi
4fd9(3): mov %r13,%rdi
4fdc(5): call 0xffffeaa4(%rip)
4fe1(4): mov %r12d,0x0(%rbp)
4fe5(4): add $0x38,%rsp
4fe9(1): pop %rbx
4fea(1): pop %rbp
4feb(2): pop %r12
4fed(2): pop %r13
4fef(2): pop %r14
4ff1(2): pop %r15
4ff3(1): ret near (%rsp)

"quotearg_alloc_mem" :
5000(2): push %r15
5002(2): push %r14
5004(7): lea 0x205215(%rip),%rax
500b(2): push %r13
500d(2): push %r12
500f(3): mov %rdx,%r12
5012(1): push %rbp
5013(1): push %rbx
5014(3): mov %rcx,%rbx
5017(3): mov %rdi,%r14
501a(3): mov %rsi,%r15
501d(4): sub $0x38,%rsp
5021(3): test %rcx,%rcx
5024(4): cmove %rax,%rbx
5028(2): xor %ebp,%ebp
502a(5): call 0xffffc4f6(%rip)
502f(3): test %r12,%r12
5032(3): mov %rax,%r13
5035(2): mov (%rax),%eax
5037(4): setz %bpl
503b(3): or 0x4(%rbx),%ebp
503e(4): lea 0x8(%rbx),%r10
5042(4): sub $0x8,%rsp
5046(3): mov (%rbx),%r8d
5049(3): mov %r15,%rcx
504c(4): mov %eax,0x14(%rsp)
5050(3): push 0x30(%rbx)
5053(3): mov %r14,%rdx
5056(3): push 0x28(%rbx)
5059(2): push %r10
505b(2): xor %esi,%esi
505d(3): mov %ebp,%r9d
5060(2): xor %edi,%edi
5062(5): mov %r10,0x40(%rsp)
5067(5): call 0xffffea19(%rip)
506c(4): lea 0x1(%rax),%rsi
5070(5): mov %rax,0x48(%rsp)
5075(4): add $0x20,%rsp
5079(3): mov %rsi,%rdi
507c(5): mov %rsi,0x18(%rsp)
5081(5): call 0xc1f(%rip)
5086(5): mov %rax,0x10(%rsp)
508b(4): sub $0x8,%rsp
508f(3): push 0x30(%rbx)
5092(3): push 0x28(%rbx)
5095(5): mov 0x38(%rsp),%r10
509a(3): mov %ebp,%r9d
509d(3): mov (%rbx),%r8d
50a0(3): mov %r15,%rcx
50a3(3): mov %r14,%rdx
50a6(3): mov %rax,%rdi
50a9(2): push %r10
50ab(5): mov 0x38(%rsp),%rsi
50b0(5): call 0xffffe9d0(%rip)
50b5(4): mov 0x2c(%rsp),%eax
50b9(4): add $0x20,%rsp
50bd(3): test %r12,%r12
50c0(4): mov %eax,0x0(%r13)
50c4(2): jz 0xb(%rip)
50c6(5): mov 0x28(%rsp),%r11
50cb(4): mov %r11,(%r12)
50cf(5): mov 0x10(%rsp),%rax
50d4(4): add $0x38,%rsp
50d8(1): pop %rbx
50d9(1): pop %rbp
50da(2): pop %r12
50dc(2): pop %r13
50de(2): pop %r14
50e0(2): pop %r15
50e2(1): ret near (%rsp)

"quotearg_alloc" :
50f0(3): mov %rdx,%rcx
50f3(2): xor %edx,%edx
50f5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5100(6): mov 0x204f72(%rip),%eax
5106(2): push %r12
5108(7): mov 0x204f71(%rip),%r12
510f(1): push %rbp
5110(1): push %rbx
5111(3): cmp $0x1,%eax
5114(2): jle 0x2d(%rip)
5116(3): sub $0x2,%eax
5119(5): lea 0x18(%r12),%rbx
511e(4): shl/sal $0x4,%rax
5122(5): lea 0x28(%r12,%rax,1),%rbp
5127(9): nop 0x0(%rax,%rax,1)
5130(3): mov (%rbx),%rdi
5133(4): add $0x10,%rbx
5137(5): call 0xffffc3c9(%rip)
513c(3): cmp %rbp,%rbx
513f(2): jnz 0xfffffff1(%rip)
5141(5): mov 0x8(%r12),%rdi
5146(7): lea 0x204fd3(%rip),%rbx
514d(3): cmp %rbx,%rdi
5150(2): jz 0x19(%rip)
5152(5): call 0xffffc3ae(%rip)
5157(b): mov $0x100,0x204f2e(%rip)
5162(7): mov %rbx,0x204f2f(%rip)
5169(7): lea 0x204f20(%rip),%rbx
5170(3): cmp %rbx,%r12
5173(2): jz 0x11(%rip)
5175(3): mov %r12,%rdi
5178(5): call 0xffffc388(%rip)
517d(7): mov %rbx,0x204efc(%rip)
5184(1): pop %rbx
5185(a): mov $0x1,0x204ee9(%rip)
518f(1): pop %rbp
5190(2): pop %r12
5192(1): ret near (%rsp)

"quotearg_n" :
51a0(7): lea 0x205079(%rip),%rcx
51a7(7): mov $0xffffffff,%rdx
51ae(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
51c0(7): lea 0x205059(%rip),%rcx
51c7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
51d0(7): lea 0x205049(%rip),%rcx
51d7(3): mov %rdi,%rsi
51da(7): mov $0xffffffff,%rdx
51e1(2): xor %edi,%edi
51e3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
51f0(7): lea 0x205029(%rip),%rcx
51f7(3): mov %rsi,%rdx
51fa(3): mov %rdi,%rsi
51fd(2): xor %edi,%edi
51ff(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5210(4): sub $0x48,%rsp
5214(3): mov %rdx,%rax
5217(9): mov $0x28,%rdx
5220(5): mov %rdx,0x38(%rsp)
5225(2): xor %edx,%edx
5227(3): cmp $0xa,%esi
522a(2): jz 0x6a(%rip)
522c(3): mov %esi,(%rsp)
522f(3): mov %rsp,%rcx
5232(7): mov $0xffffffff,%rdx
5239(3): mov %rax,%rsi
523c(9): mov $0x0,0x4(%rsp)
5245(9): mov $0x0,0xc(%rsp)
524e(9): mov $0x0,0x14(%rsp)
5257(9): mov $0x0,0x1c(%rsp)
5260(9): mov $0x0,0x24(%rsp)
5269(9): mov $0x0,0x2c(%rsp)
5272(8): mov $0x0,0x34(%rsp)
527a(5): call 0xfffffa46(%rip)
527f(5): mov 0x38(%rsp),%rcx
5284(9): xor $0x28,%rcx
528d(2): jnz 0xc(%rip)
528f(4): add $0x48,%rsp
5293(1): ret near (%rsp)
5294(5): call 0xffffc27c(%rip)
5299(5): call 0xffffc337(%rip)

"quotearg_n_style_mem" :
52a0(4): sub $0x48,%rsp
52a4(3): mov %rdx,%rax
52a7(3): mov %rcx,%rdx
52aa(9): mov $0x28,%rcx
52b3(5): mov %rcx,0x38(%rsp)
52b8(2): xor %ecx,%ecx
52ba(3): cmp $0xa,%esi
52bd(2): jz 0x63(%rip)
52bf(3): mov %esi,(%rsp)
52c2(3): mov %rsp,%rcx
52c5(3): mov %rax,%rsi
52c8(9): mov $0x0,0x4(%rsp)
52d1(9): mov $0x0,0xc(%rsp)
52da(9): mov $0x0,0x14(%rsp)
52e3(9): mov $0x0,0x1c(%rsp)
52ec(9): mov $0x0,0x24(%rsp)
52f5(9): mov $0x0,0x2c(%rsp)
52fe(8): mov $0x0,0x34(%rsp)
5306(5): call 0xfffff9ba(%rip)
530b(5): mov 0x38(%rsp),%rdx
5310(9): xor $0x28,%rdx
5319(2): jnz 0xc(%rip)
531b(4): add $0x48,%rsp
531f(1): ret near (%rsp)
5320(5): call 0xffffc1f0(%rip)
5325(5): call 0xffffc2ab(%rip)

"quotearg_style" :
5330(3): mov %rsi,%rdx
5333(2): mov %edi,%esi
5335(2): xor %edi,%edi
5337(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5340(3): mov %rdx,%rcx
5343(3): mov %rsi,%rdx
5346(2): mov %edi,%esi
5348(2): xor %edi,%edi
534a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5350(4): sub $0x48,%rsp
5354(2): mov %edx,%ecx
5356(9): mov $0x28,%rax
535f(5): mov %rax,0x38(%rsp)
5364(2): xor %eax,%eax
5366(7): mov 0x204ee3(%rip),%rax
536d(3): mov %rsp,%r8
5370(3): and $0x1f,%ecx
5373(8): movdqa 0x204ea5(%rip),%xmm0
537b(5): mov %rax,0x30(%rsp)
5380(2): mov %edx,%eax
5382(4): movaps %xmm0,(%rsp)
5386(3): shr $0x5,%al
5389(3): movzx %al,%eax
538c(5): lea 0x8(%r8,%rax,4),%r9
5391(8): movdqa 0x204e97(%rip),%xmm0
5399(5): movaps %xmm0,0x10(%rsp)
539e(8): movdqa 0x204e9a(%rip),%xmm0
53a6(5): movaps %xmm0,0x20(%rsp)
53ab(3): mov (%r9),%edx
53ae(2): mov %edx,%eax
53b0(2): shr %cl,%eax
53b2(2): not %eax
53b4(3): and $0x1,%eax
53b7(2): shl/sal %cl,%eax
53b9(3): mov %r8,%rcx
53bc(2): xor %edx,%eax
53be(3): mov %rsi,%rdx
53c1(3): mov %rdi,%rsi
53c4(3): mov %eax,(%r9)
53c7(2): xor %edi,%edi
53c9(5): call 0xfffff8f7(%rip)
53ce(5): mov 0x38(%rsp),%rsi
53d3(9): xor $0x28,%rsi
53dc(2): jnz 0x7(%rip)
53de(4): add $0x48,%rsp
53e2(1): ret near (%rsp)
53e3(5): call 0xffffc1ed(%rip)

"quotearg_char" :
53f0(4): movsx %sil,%edx
53f4(7): mov $0xffffffff,%rsi
53fb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5400(5): mov $0x3a,%edx
5405(7): mov $0xffffffff,%rsi
540c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5420(5): mov $0x3a,%edx
5425(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5430(4): sub $0x48,%rsp
5434(3): mov %rdx,%rax
5437(9): mov $0x28,%rdx
5440(5): mov %rdx,0x38(%rsp)
5445(2): xor %edx,%edx
5447(3): cmp $0xa,%esi
544a(2): jz 0x6a(%rip)
544c(3): mov %esi,(%rsp)
544f(3): mov %rsp,%rcx
5452(7): mov $0xffffffff,%rdx
5459(3): mov %rax,%rsi
545c(9): mov $0x0,0x4(%rsp)
5465(9): mov $0x4000000,0xc(%rsp)
546e(9): mov $0x0,0x14(%rsp)
5477(9): mov $0x0,0x1c(%rsp)
5480(9): mov $0x0,0x24(%rsp)
5489(9): mov $0x0,0x2c(%rsp)
5492(8): mov $0x0,0x34(%rsp)
549a(5): call 0xfffff826(%rip)
549f(5): mov 0x38(%rsp),%rcx
54a4(9): xor $0x28,%rcx
54ad(2): jnz 0xc(%rip)
54af(4): add $0x48,%rsp
54b3(1): ret near (%rsp)
54b4(5): call 0xffffc05c(%rip)
54b9(5): call 0xffffc117(%rip)

"quotearg_n_custom_mem" :
54c0(4): sub $0x48,%rsp
54c4(3): mov %rcx,%r9
54c7(7): mov 0x204d82(%rip),%rcx
54ce(8): movdqa 0x204d4a(%rip),%xmm0
54d6(9): mov $0x28,%rax
54df(5): mov %rax,0x38(%rsp)
54e4(2): xor %eax,%eax
54e6(4): movaps %xmm0,(%rsp)
54ea(3): test %rsi,%rsi
54ed(5): mov %rcx,0x30(%rsp)
54f2(7): mov $0xa,(%rsp)
54f9(8): movdqa 0x204d2f(%rip),%xmm0
5501(5): movaps %xmm0,0x10(%rsp)
5506(8): movdqa 0x204d32(%rip),%xmm0
550e(5): movaps %xmm0,0x20(%rsp)
5513(2): jz 0x34(%rip)
5515(3): test %rdx,%rdx
5518(2): jz 0x2f(%rip)
551a(5): mov %rsi,0x28(%rsp)
551f(5): mov %rdx,0x30(%rsp)
5524(3): mov %rsp,%rcx
5527(3): mov %r8,%rdx
552a(3): mov %r9,%rsi
552d(5): call 0xfffff793(%rip)
5532(5): mov 0x38(%rsp),%rdi
5537(9): xor $0x28,%rdi
5540(2): jnz 0xc(%rip)
5542(4): add $0x48,%rsp
5546(1): ret near (%rsp)
5547(5): call 0xffffbfc9(%rip)
554c(5): call 0xffffc084(%rip)

"quotearg_n_custom" :
5560(7): mov $0xffffffff,%r8
5567(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5570(3): mov %rdx,%rcx
5573(7): mov $0xffffffff,%r8
557a(3): mov %rsi,%rdx
557d(3): mov %rdi,%rsi
5580(2): xor %edi,%edi
5582(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5590(3): mov %rcx,%r8
5593(3): mov %rdx,%rcx
5596(3): mov %rsi,%rdx
5599(3): mov %rdi,%rsi
559c(2): xor %edi,%edi
559e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
55b0(7): lea 0x204a89(%rip),%rcx
55b7(5): jmp 0xfffff709(%rip)

"quote_mem" :
55c0(7): lea 0x204a79(%rip),%rcx
55c7(3): mov %rsi,%rdx
55ca(3): mov %rdi,%rsi
55cd(2): xor %edi,%edi
55cf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
55e0(7): lea 0x204a59(%rip),%rcx
55e7(7): mov $0xffffffff,%rdx
55ee(5): jmp 0xfffff6d2(%rip)

"quote" :
5600(7): lea 0x204a39(%rip),%rcx
5607(3): mov %rdi,%rsi
560a(7): mov $0xffffffff,%rdx
5611(2): xor %edi,%edi
5613(5): jmp 0xfffff6ad(%rip)

"safe_read" :
5620(2): push %r13
5622(2): push %r12
5624(3): mov %edi,%r13d
5627(1): push %rbp
5628(1): push %rbx
5629(3): mov %rsi,%r12
562c(3): mov %rdx,%rbx
562f(4): sub $0x8,%rsp
5633(5): nop 0x0(%rax,%rax,1)
5638(3): mov %rbx,%rdx
563b(3): mov %r12,%rsi
563e(3): mov %r13d,%edi
5641(5): call 0xffffc03f(%rip)
5646(3): test %rax,%rax
5649(3): mov %rax,%rbp
564c(2): jns 0x24(%rip)
564e(5): call 0xffffbed2(%rip)
5653(2): mov (%rax),%eax
5655(3): cmp $0x4,%eax
5658(2): jz 0xffffffe0(%rip)
565a(7): cmp $0x7ff00000,%rbx
5661(2): jbe 0xf(%rip)
5663(3): cmp $0x16,%eax
5666(2): jnz 0xa(%rip)
5668(5): mov $0x7ff00000,%ebx
566d(2): jmp 0xffffffcb(%rip)
566f(1): nop 
5670(4): add $0x8,%rsp
5674(3): mov %rbp,%rax
5677(1): pop %rbx
5678(1): pop %rbp
5679(2): pop %r12
567b(2): pop %r13
567d(1): ret near (%rsp)

"version_etc_arn" :
5680(2): push %r15
5682(2): push %r14
5684(2): push %r13
5686(2): push %r12
5688(3): mov %r9,%r12
568b(1): push %rbp
568c(1): push %rbx
568d(3): mov %rdi,%rbp
5690(3): mov %r8,%rbx
5693(4): sub $0x28,%rsp
5697(3): test %rsi,%rsi
569a(6): jz 0x11e(%rip)
56a0(3): mov %rdx,%r8
56a3(7): lea 0x1f1e(%rip),%rdx
56aa(3): mov %rcx,%r9
56ad(2): xor %eax,%eax
56af(3): mov %rsi,%rcx
56b2(5): mov $0x1,%esi
56b7(5): call 0xffffc129(%rip)
56bc(7): lea 0x1f18(%rip),%rsi
56c3(2): xor %edi,%edi
56c5(5): mov $0x5,%edx
56ca(5): call 0xffffbed6(%rip)
56cf(7): lea 0x222a(%rip),%rdx
56d6(3): mov %rax,%rcx
56d9(6): mov $0x7e3,%r8d
56df(5): mov $0x1,%esi
56e4(3): mov %rbp,%rdi
56e7(2): xor %eax,%eax
56e9(5): call 0xffffc0f7(%rip)
56ee(7): lea 0x1f73(%rip),%rsi
56f5(2): xor %edi,%edi
56f7(5): mov $0x5,%edx
56fc(5): call 0xffffbea4(%rip)
5701(3): mov %rbp,%rsi
5704(3): mov %rax,%rdi
5707(5): call 0xffffbf99(%rip)
570c(4): cmp $0x9,%r12
5710(6): jnbe 0x340(%rip)
5716(7): lea 0x21a7(%rip),%rdx
571d(4): movsxd 0x0(%rdx,%r12,4),%rax
5721(3): add %rdx,%rax
5724(2): jmp %rax
5726(a): nop 0x0(%rax,%rax,1)
5730(4): mov 0x38(%rbx),%r9
5734(4): mov 0x10(%rbx),%rax
5738(7): lea 0x2099(%rip),%rsi
573f(4): mov 0x8(%rbx),%r8
5743(5): mov $0x5,%edx
5748(2): xor %edi,%edi
574a(4): mov 0x30(%rbx),%r13
574e(4): mov 0x28(%rbx),%r12
5752(5): mov %r9,0x10(%rsp)
5757(4): mov 0x20(%rbx),%r15
575b(4): mov 0x18(%rbx),%r14
575f(4): mov %rax,(%rsp)
5763(5): mov %r8,0x8(%rsp)
5768(3): mov (%rbx),%rbx
576b(5): call 0xffffbe35(%rip)
5770(4): sub $0x8,%rsp
5774(5): mov 0x18(%rsp),%r9
5779(3): mov %rax,%rdx
577c(3): mov %rbx,%rcx
577f(5): mov $0x1,%esi
5784(3): mov %rbp,%rdi
5787(2): xor %eax,%eax
5789(2): push %r9
578b(2): push %r13
578d(2): push %r12
578f(2): push %r15
5791(2): push %r14
5793(5): mov 0x30(%rsp),%r9
5798(5): mov 0x38(%rsp),%r8
579d(5): call 0xffffc043(%rip)
57a2(4): add $0x30,%rsp
57a6(4): add $0x28,%rsp
57aa(1): pop %rbx
57ab(1): pop %rbp
57ac(2): pop %r12
57ae(2): pop %r13
57b0(2): pop %r14
57b2(2): pop %r15
57b4(1): ret near (%rsp)
57b5(3): nop (%rax)
57b8(3): mov %rcx,%r8
57bb(3): mov %rdx,%rcx
57be(7): lea 0x1e0f(%rip),%rdx
57c5(5): mov $0x1,%esi
57ca(2): xor %eax,%eax
57cc(5): call 0xffffc014(%rip)
57d1(5): jmp 0xfffffeeb(%rip)
57d6(a): nop 0x0(%rax,%rax,1)
57e0(4): mov 0x40(%rbx),%r10
57e4(4): mov 0x38(%rbx),%r9
57e8(7): lea 0x2019(%rip),%rsi
57ef(4): mov 0x10(%rbx),%rax
57f3(4): mov 0x8(%rbx),%r8
57f7(5): mov $0x5,%edx
57fc(4): mov 0x30(%rbx),%r13
5800(4): mov 0x28(%rbx),%r12
5804(4): mov 0x20(%rbx),%r15
5808(4): mov 0x18(%rbx),%r14
580c(3): mov (%rbx),%rbx
580f(5): mov %r10,0x18(%rsp)
5814(5): mov %r9,0x10(%rsp)
5819(4): mov %rax,(%rsp)
581d(5): mov %r8,0x8(%rsp)
5822(2): xor %edi,%edi
5824(5): call 0xffffbd7c(%rip)
5829(5): mov 0x18(%rsp),%r10
582e(2): push %r10
5830(5): jmp 0xffffff44(%rip)
5835(3): nop (%rax)
5838(3): mov (%rbx),%rbx
583b(7): lea 0x1d9d(%rip),%rsi
5842(5): mov $0x5,%edx
5847(2): xor %edi,%edi
5849(5): call 0xffffbd57(%rip)
584e(4): add $0x28,%rsp
5852(3): mov %rbx,%rcx
5855(3): mov %rbp,%rdi
5858(1): pop %rbx
5859(1): pop %rbp
585a(2): pop %r12
585c(2): pop %r13
585e(2): pop %r14
5860(2): pop %r15
5862(3): mov %rax,%rdx
5865(5): mov $0x1,%esi
586a(2): xor %eax,%eax
586c(5): jmp 0xffffbf74(%rip)
5871(7): nop 0x0(%rax)
5878(4): mov 0x8(%rbx),%r12
587c(7): lea 0x1d6c(%rip),%rsi
5883(3): mov (%rbx),%rbx
5886(5): mov $0x5,%edx
588b(2): xor %edi,%edi
588d(5): call 0xffffbd13(%rip)
5892(4): add $0x28,%rsp
5896(3): mov %r12,%r8
5899(3): mov %rbx,%rcx
589c(3): mov %rbp,%rdi
589f(3): mov %rax,%rdx
58a2(5): mov $0x1,%esi
58a7(1): pop %rbx
58a8(1): pop %rbp
58a9(2): pop %r12
58ab(2): pop %r13
58ad(2): pop %r14
58af(2): pop %r15
58b1(2): xor %eax,%eax
58b3(5): jmp 0xffffbf2d(%rip)
58b8(8): nop 0x0(%rax,%rax,1)
58c0(4): mov 0x10(%rbx),%r13
58c4(4): mov 0x8(%rbx),%r12
58c8(7): lea 0x1d37(%rip),%rsi
58cf(3): mov (%rbx),%rbx
58d2(5): mov $0x5,%edx
58d7(2): xor %edi,%edi
58d9(5): call 0xffffbcc7(%rip)
58de(4): add $0x28,%rsp
58e2(3): mov %r13,%r9
58e5(3): mov %r12,%r8
58e8(3): mov %rbx,%rcx
58eb(3): mov %rbp,%rdi
58ee(3): mov %rax,%rdx
58f1(1): pop %rbx
58f2(1): pop %rbp
58f3(2): pop %r12
58f5(2): pop %r13
58f7(2): pop %r14
58f9(2): pop %r15
58fb(5): mov $0x1,%esi
5900(2): xor %eax,%eax
5902(5): jmp 0xffffbede(%rip)
5907(9): nop 0x0(%rax,%rax,1)
5910(7): lea 0x1e21(%rip),%rsi
5917(5): mov $0x5,%edx
591c(2): xor %edi,%edi
591e(4): mov 0x18(%rbx),%r14
5922(4): mov 0x10(%rbx),%r13
5926(4): mov 0x8(%rbx),%r12
592a(3): mov (%rbx),%rbx
592d(5): call 0xffffbc73(%rip)
5932(4): sub $0x8,%rsp
5936(2): push %r14
5938(3): mov %rax,%rdx
593b(3): mov %r13,%r9
593e(3): mov %r12,%r8
5941(3): mov %rbx,%rcx
5944(3): mov %rbp,%rdi
5947(5): mov $0x1,%esi
594c(2): xor %eax,%eax
594e(5): call 0xffffbe92(%rip)
5953(1): pop %rax
5954(1): pop %rdx
5955(4): add $0x28,%rsp
5959(1): pop %rbx
595a(1): pop %rbp
595b(2): pop %r12
595d(2): pop %r13
595f(2): pop %r14
5961(2): pop %r15
5963(1): ret near (%rsp)
5964(4): nop 0x0(%rax)
5968(4): mov 0x20(%rbx),%r15
596c(7): lea 0x1de5(%rip),%rsi
5973(5): mov $0x5,%edx
5978(2): xor %edi,%edi
597a(4): mov 0x18(%rbx),%r14
597e(4): mov 0x10(%rbx),%r13
5982(4): mov 0x8(%rbx),%r12
5986(3): mov (%rbx),%rbx
5989(5): call 0xffffbc17(%rip)
598e(2): push %r15
5990(2): jmp 0xffffffa6(%rip)
5992(6): nop 0x0(%rax,%rax,1)
5998(4): mov 0x8(%rbx),%r8
599c(4): mov 0x28(%rbx),%r12
59a0(7): lea 0x1dd9(%rip),%rsi
59a7(4): mov 0x20(%rbx),%r15
59ab(4): mov 0x18(%rbx),%r14
59af(5): mov $0x5,%edx
59b4(4): mov 0x10(%rbx),%r13
59b8(2): xor %edi,%edi
59ba(3): mov (%rbx),%rbx
59bd(4): mov %r8,(%rsp)
59c1(5): call 0xffffbbdf(%rip)
59c6(4): sub $0x8,%rsp
59ca(3): mov %r13,%r9
59cd(2): push %r12
59cf(2): push %r15
59d1(2): push %r14
59d3(5): mov 0x20(%rsp),%r8
59d8(3): mov %rbx,%rcx
59db(3): mov %rax,%rdx
59de(3): mov %rbp,%rdi
59e1(5): mov $0x1,%esi
59e6(2): xor %eax,%eax
59e8(5): call 0xffffbdf8(%rip)
59ed(4): add $0x20,%rsp
59f1(4): add $0x28,%rsp
59f5(1): pop %rbx
59f6(1): pop %rbp
59f7(2): pop %r12
59f9(2): pop %r13
59fb(2): pop %r14
59fd(2): pop %r15
59ff(1): ret near (%rsp)
5a00(4): mov 0x10(%rbx),%r9
5a04(4): mov 0x30(%rbx),%r13
5a08(7): lea 0x1d99(%rip),%rsi
5a0f(4): mov 0x28(%rbx),%r12
5a13(4): mov 0x20(%rbx),%r15
5a17(5): mov $0x5,%edx
5a1c(4): mov 0x18(%rbx),%r14
5a20(4): mov 0x8(%rbx),%r8
5a24(2): xor %edi,%edi
5a26(5): mov %r9,0x8(%rsp)
5a2b(3): mov (%rbx),%rbx
5a2e(4): mov %r8,(%rsp)
5a32(5): call 0xffffbb6e(%rip)
5a37(2): push %r13
5a39(2): push %r12
5a3b(2): push %r15
5a3d(2): push %r14
5a3f(5): mov 0x28(%rsp),%r9
5a44(2): jmp 0xffffff8f(%rip)
5a46(a): nop 0x0(%rax,%rax,1)
5a50(4): mov 0x40(%rbx),%r10
5a54(4): mov 0x38(%rbx),%r9
5a58(5): mov $0x5,%edx
5a5d(4): mov 0x10(%rbx),%rax
5a61(4): mov 0x8(%rbx),%r8
5a65(7): lea 0x1dd4(%rip),%rsi
5a6c(4): mov 0x30(%rbx),%r13
5a70(4): mov 0x28(%rbx),%r12
5a74(4): mov 0x20(%rbx),%r15
5a78(4): mov 0x18(%rbx),%r14
5a7c(5): mov %r10,0x18(%rsp)
5a81(5): mov %r9,0x10(%rsp)
5a86(4): mov %rax,(%rsp)
5a8a(5): mov %r8,0x8(%rsp)
5a8f(3): mov (%rbx),%rbx
5a92(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5aa0(3): xor %r9d,%r9d
5aa3(4): cmp $0x0,(%r8)
5aa7(2): jz 0x14(%rip)
5aa9(7): nop 0x0(%rax)
5ab0(4): add $0x1,%r9
5ab4(5): cmp $0x0,0x0(%r8,%r9,8)
5ab9(2): jnz 0xfffffff7(%rip)
5abb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5ac0(4): sub $0x68,%rsp
5ac4(3): mov %r8,%r10
5ac7(3): xor %r9d,%r9d
5aca(9): mov $0x28,%rax
5ad3(5): mov %rax,0x58(%rsp)
5ad8(2): xor %eax,%eax
5ada(3): mov %rsp,%r8
5add(3): nop (%rax)
5ae0(3): mov (%r10),%eax
5ae3(3): cmp $0x2f,%eax
5ae6(2): jnbe 0x44(%rip)
5ae8(3): mov %eax,%r11d
5aeb(4): add 0x10(%r10),%r11
5aef(3): add $0x8,%eax
5af2(3): mov %eax,(%r10)
5af5(3): mov (%r11),%rax
5af8(3): test %rax,%rax
5afb(4): mov %rax,0x0(%r8,%r9,8)
5aff(2): jz 0xc(%rip)
5b01(4): add $0x1,%r9
5b05(4): cmp $0xa,%r9
5b09(2): jnz 0xffffffd7(%rip)
5b0b(5): call 0xfffffb75(%rip)
5b10(5): mov 0x58(%rsp),%rax
5b15(9): xor $0x28,%rax
5b1e(2): jnz 0x7(%rip)
5b20(4): add $0x68,%rsp
5b24(1): ret near (%rsp)
5b25(5): call 0xffffbaab(%rip)
5b2a(4): mov 0x8(%r10),%r11
5b2e(4): lea 0x8(%r11),%rax
5b32(4): mov %rax,0x8(%r10)
5b36(2): jmp 0xffffffbf(%rip)

"version_etc" :
5b40(1): push %rbp
5b41(1): push %rbx
5b42(6): mov $0x20,%r10d
5b48(3): xor %r11d,%r11d
5b4b(7): sub $0xb8,%rsp
5b52(9): mov $0x28,%rax
5b5b(5): mov %rax,0x78(%rsp)
5b60(2): xor %eax,%eax
5b62(8): lea 0xd0(%rsp),%rax
5b6a(8): mov %r8,0xa0(%rsp)
5b72(8): lea 0xd0(%rsp),%rbx
5b7a(5): lea 0x20(%rsp),%r8
5b7f(8): mov %r9,0xa8(%rsp)
5b87(8): mov $0x20,0x8(%rsp)
5b8f(5): mov %rax,0x10(%rsp)
5b94(8): lea 0x80(%rsp),%rax
5b9c(3): xor %r9d,%r9d
5b9f(5): mov %rax,0x18(%rsp)
5ba4(3): mov %rax,%rbp
5ba7(9): nop 0x0(%rax,%rax,1)
5bb0(4): cmp $0x2f,%r10d
5bb4(2): jnbe 0x58(%rip)
5bb6(3): mov %r10d,%eax
5bb9(6): mov $0x1,%r11d
5bbf(4): add $0x8,%r10d
5bc3(3): add %rbp,%rax
5bc6(3): mov (%rax),%rax
5bc9(3): test %rax,%rax
5bcc(4): mov %rax,0x0(%r8,%r9,8)
5bd0(2): jz 0xc(%rip)
5bd2(4): add $0x1,%r9
5bd6(4): cmp $0xa,%r9
5bda(2): jnz 0xffffffd6(%rip)
5bdc(3): test %r11b,%r11b
5bdf(2): jnz 0x26(%rip)
5be1(5): call 0xfffffa9f(%rip)
5be6(5): mov 0x78(%rsp),%rax
5beb(9): xor $0x28,%rax
5bf4(2): jnz 0xc(%rip)
5bf6(7): add $0xb8,%rsp
5bfd(1): pop %rbx
5bfe(1): pop %rbp
5bff(1): ret near (%rsp)
5c00(5): call 0xffffb9d0(%rip)
5c05(5): mov %r10d,0x8(%rsp)
5c0a(2): jmp 0xffffffd7(%rip)
5c0c(3): mov %rbx,%rax
5c0f(4): add $0x8,%rbx
5c13(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5c20(1): push %rbx
5c21(7): lea 0x19fa(%rip),%rsi
5c28(5): mov $0x5,%edx
5c2d(2): xor %edi,%edi
5c2f(5): call 0xffffb971(%rip)
5c34(7): lea 0x19fc(%rip),%rdx
5c3b(3): mov %rax,%rsi
5c3e(5): mov $0x1,%edi
5c43(2): xor %eax,%eax
5c45(5): call 0xffffbb1b(%rip)
5c4a(7): lea 0x19fc(%rip),%rsi
5c51(5): mov $0x5,%edx
5c56(2): xor %edi,%edi
5c58(5): call 0xffffb948(%rip)
5c5d(7): lea 0x1324(%rip),%rcx
5c64(7): lea 0xcbd(%rip),%rdx
5c6b(3): mov %rax,%rsi
5c6e(5): mov $0x1,%edi
5c73(2): xor %eax,%eax
5c75(5): call 0xffffbaeb(%rip)
5c7a(7): mov 0x204427(%rip),%rbx
5c81(7): lea 0x1bf8(%rip),%rsi
5c88(2): xor %edi,%edi
5c8a(5): mov $0x5,%edx
5c8f(5): call 0xffffb911(%rip)
5c94(3): mov %rbx,%rsi
5c97(3): mov %rax,%rdi
5c9a(1): pop %rbx
5c9b(5): jmp 0xffffba05(%rip)

"xmalloc" :
5ca0(1): push %rbx
5ca1(3): mov %rdi,%rbx
5ca4(5): call 0xffffba3c(%rip)
5ca9(3): test %rax,%rax
5cac(2): jnz 0x7(%rip)
5cae(3): test %rbx,%rbx
5cb1(2): jnz 0x4(%rip)
5cb3(1): pop %rbx
5cb4(1): ret near (%rsp)
5cb5(5): call 0x23b(%rip)

"xnmalloc" :
5cc0(3): mov %rdi,%rax
5cc3(3): mul %rax,%rsi,%rdx
5cc6(3): mov %rax,%rdi
5cc9(3): seto %al
5ccc(3): test %rdi,%rdi
5ccf(2): js 0xc(%rip)
5cd1(3): movzx %al,%eax
5cd4(3): test %rax,%rax
5cd7(2): jnz 0x4(%rip)
5cd9(2): jmp 0xffffffc7(%rip)
5cdb(4): sub $0x8,%rsp
5cdf(5): call 0x211(%rip)

"xrealloc" :
5d00(3): test %rsi,%rsi
5d03(1): push %rbx
5d04(3): mov %rsi,%rbx
5d07(2): jnz 0x7(%rip)
5d09(3): test %rdi,%rdi
5d0c(2): jnz 0x1c(%rip)
5d0e(3): mov %rbx,%rsi
5d11(5): call 0xffffba2f(%rip)
5d16(3): test %rax,%rax
5d19(2): jnz 0x7(%rip)
5d1b(3): test %rbx,%rbx
5d1e(2): jnz 0x13(%rip)
5d20(1): pop %rbx
5d21(1): ret near (%rsp)
5d22(6): nop 0x0(%rax,%rax,1)
5d28(5): call 0xffffb7d8(%rip)
5d2d(2): xor %eax,%eax
5d2f(1): pop %rbx
5d30(1): ret near (%rsp)
5d31(5): call 0x1bf(%rip)

"xnrealloc" :
5d40(3): mov %rsi,%rax
5d43(3): mul %rax,%rdx,%rdx
5d46(3): mov %rax,%rsi
5d49(3): seto %al
5d4c(3): test %rsi,%rsi
5d4f(2): js 0xc(%rip)
5d51(3): movzx %al,%eax
5d54(3): test %rax,%rax
5d57(2): jnz 0x4(%rip)
5d59(2): jmp 0xffffffa7(%rip)
5d5b(4): sub $0x8,%rsp
5d5f(5): call 0x191(%rip)

"x2nrealloc" :
5d70(3): test %rdi,%rdi
5d73(3): mov %rdx,%r9
5d76(3): mov (%rsi),%rcx
5d79(2): jz 0x37(%rip)
5d7b(2): xor %edx,%edx
5d7d(a): mov $0x6148914691236517204,%rax
5d87(3): div %r9,%rax
5d8a(3): cmp %rcx,%rax
5d8d(2): jbe 0x3e(%rip)
5d8f(3): mov %rcx,%rax
5d92(3): shr $0x1,%rax
5d95(5): lea 0x1(%rax,%rcx,1),%rcx
5d9a(3): mov %rcx,(%rsi)
5d9d(4): imul %r9,%rcx
5da1(3): mov %rcx,%rsi
5da4(5): jmp 0xffffff5c(%rip)
5da9(7): nop 0x0(%rax)
5db0(3): test %rcx,%rcx
5db3(2): jz 0x25(%rip)
5db5(3): mov %rcx,%rax
5db8(3): mul %rax,%r9,%rdx
5dbb(3): seto %dl
5dbe(3): test %rax,%rax
5dc1(3): movzx %dl,%edx
5dc4(2): js 0x7(%rip)
5dc6(3): test %rdx,%rdx
5dc9(2): jz 0xffffffd1(%rip)
5dcb(4): sub $0x8,%rsp
5dcf(5): call 0x121(%rip)
5dd4(4): nop 0x0(%rax)
5dd8(2): xor %edx,%edx
5dda(5): mov $0x80,%eax
5ddf(3): xor %r8d,%r8d
5de2(3): div %r9,%rax
5de5(3): test %rax,%rax
5de8(4): setz %r8b
5dec(4): lea 0x0(%r8,%rax,1),%rcx
5df0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5e00(3): test %rdi,%rdi
5e03(3): mov (%rsi),%rax
5e06(2): jz 0x2a(%rip)
5e08(a): mov $0x6148914691236517203,%rdx
5e12(3): cmp %rdx,%rax
5e15(2): jnbe 0x2c(%rip)
5e17(3): mov %rax,%rdx
5e1a(3): shr $0x1,%rdx
5e1d(5): lea 0x1(%rdx,%rax,1),%rax
5e22(3): mov %rax,(%rsi)
5e25(3): mov %rax,%rsi
5e28(5): jmp 0xfffffed8(%rip)
5e2d(3): nop (%rax)
5e30(3): test %rax,%rax
5e33(5): mov $0x80,%edx
5e38(4): cmove %rdx,%rax
5e3c(3): test %rax,%rax
5e3f(2): jns 0xffffffe3(%rip)
5e41(4): sub $0x8,%rsp
5e45(5): call 0xab(%rip)

"xzalloc" :
5e50(1): push %rbx
5e51(3): mov %rdi,%rbx
5e54(5): call 0xfffffe4c(%rip)
5e59(3): mov %rbx,%rdx
5e5c(2): xor %esi,%esi
5e5e(3): mov %rax,%rdi
5e61(1): pop %rbx
5e62(5): jmp 0xffffb7ee(%rip)

"xcalloc" :
5e70(3): mov %rdi,%rax
5e73(4): sub $0x8,%rsp
5e77(3): mul %rax,%rsi,%rdx
5e7a(3): seto %dl
5e7d(3): test %rax,%rax
5e80(2): js 0x19(%rip)
5e82(3): movzx %dl,%edx
5e85(3): test %rdx,%rdx
5e88(2): jnz 0x11(%rip)
5e8a(5): call 0xffffb826(%rip)
5e8f(3): test %rax,%rax
5e92(2): jz 0x7(%rip)
5e94(4): add $0x8,%rsp
5e98(1): ret near (%rsp)
5e99(5): call 0x57(%rip)

"xmemdup" :
5ea0(1): push %rbp
5ea1(1): push %rbx
5ea2(3): mov %rdi,%rbp
5ea5(3): mov %rsi,%rdi
5ea8(3): mov %rsi,%rbx
5eab(4): sub $0x8,%rsp
5eaf(5): call 0xfffffdf1(%rip)
5eb4(4): add $0x8,%rsp
5eb8(3): mov %rbx,%rdx
5ebb(3): mov %rbp,%rsi
5ebe(1): pop %rbx
5ebf(1): pop %rbp
5ec0(3): mov %rax,%rdi
5ec3(5): jmp 0xffffb7fd(%rip)

"xstrdup" :
5ed0(1): push %rbx
5ed1(3): mov %rdi,%rbx
5ed4(5): call 0xffffb6ec(%rip)
5ed9(3): mov %rbx,%rdi
5edc(4): lea 0x1(%rax),%rsi
5ee0(1): pop %rbx
5ee1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5ef0(7): lea 0x1a38(%rip),%rsi
5ef7(4): sub $0x8,%rsp
5efb(5): mov $0x5,%edx
5f00(2): xor %edi,%edi
5f02(5): call 0xffffb69e(%rip)
5f07(6): mov 0x204113(%rip),%edi
5f0d(7): lea 0xaaa(%rip),%rdx
5f14(3): mov %rax,%rcx
5f17(2): xor %esi,%esi
5f19(2): xor %eax,%eax
5f1b(5): call 0xffffb855(%rip)
5f20(5): call 0xffffb5f0(%rip)

"xnumtoumax" :
5f30(2): push %r15
5f32(2): push %r14
5f34(3): mov %rcx,%r15
5f37(2): push %r13
5f39(2): push %r12
5f3b(3): mov %rdx,%r14
5f3e(1): push %rbp
5f3f(1): push %rbx
5f40(2): mov %esi,%edx
5f42(2): xor %esi,%esi
5f44(3): mov %rdi,%r12
5f47(3): mov %r9,%r13
5f4a(4): sub $0x18,%rsp
5f4e(3): mov %rsp,%rcx
5f51(4): mov 0x50(%rsp),%ebx
5f55(9): mov $0x28,%rax
5f5e(5): mov %rax,0x8(%rsp)
5f63(2): xor %eax,%eax
5f65(5): call 0xfb(%rip)
5f6a(2): test %eax,%eax
5f6c(6): jnz 0x94(%rip)
5f72(4): mov (%rsp),%rbp
5f76(3): cmp %r14,%rbp
5f79(2): jb 0x7(%rip)
5f7b(3): cmp %r15,%rbp
5f7e(2): jbe 0x56(%rip)
5f80(5): call 0xffffb5a0(%rip)
5f85(7): cmp $0x40000000,%rbp
5f8c(3): mov %rax,%r14
5f8f(2): sbb %eax,%eax
5f91(3): and $0xd7,%eax
5f94(3): add $0x4b,%eax
5f97(3): mov %eax,(%r14)
5f9a(3): mov %r12,%rdi
5f9d(5): call 0xfffff663(%rip)
5fa2(3): mov (%r14),%esi
5fa5(3): mov %rax,%r8
5fa8(5): mov $0x0,%eax
5fad(7): lea 0xa06(%rip),%rdx
5fb4(3): mov %r13,%rcx
5fb7(3): cmp $0x16,%esi
5fba(3): cmove %eax,%esi
5fbd(2): test %ebx,%ebx
5fbf(5): mov $0x1,%eax
5fc4(3): cmove %eax,%ebx
5fc7(2): xor %eax,%eax
5fc9(2): mov %ebx,%edi
5fcb(5): call 0xffffb7a5(%rip)
5fd0(4): mov (%rsp),%rbp
5fd4(5): mov 0x8(%rsp),%rdx
5fd9(9): xor $0x28,%rdx
5fe2(3): mov %rbp,%rax
5fe5(2): jnz 0x46(%rip)
5fe7(4): add $0x18,%rsp
5feb(1): pop %rbx
5fec(1): pop %rbp
5fed(2): pop %r12
5fef(2): pop %r13
5ff1(2): pop %r14
5ff3(2): pop %r15
5ff5(1): ret near (%rsp)
5ff6(a): nop 0x0(%rax,%rax,1)
6000(2): mov %eax,%ebp
6002(5): call 0xffffb51e(%rip)
6007(3): cmp $0x1,%ebp
600a(3): mov %rax,%r14
600d(2): jz 0x13(%rip)
600f(3): cmp $0x3,%ebp
6012(2): jnz 0xffffff88(%rip)
6014(6): mov $0x0,(%rax)
601a(5): jmp 0xffffff80(%rip)
601f(1): nop 
6020(6): mov $0x4b,(%rax)
6026(5): jmp 0xffffff74(%rip)
602b(5): call 0xffffb5a5(%rip)

"xdectoumax" :
6030(4): sub $0x10,%rsp
6034(2): push %r9
6036(3): mov %r8,%r9
6039(3): mov %rcx,%r8
603c(3): mov %rdx,%rcx
603f(3): mov %rsi,%rdx
6042(5): mov $0xa,%esi
6047(5): call 0xfffffee9(%rip)
604c(4): add $0x18,%rsp
6050(1): ret near (%rsp)

"xstrtoumax" :
6060(2): push %r15
6062(2): push %r14
6064(2): push %r13
6066(2): push %r12
6068(1): push %rbp
6069(1): push %rbx
606a(4): sub $0x28,%rsp
606e(9): mov $0x28,%rax
6077(5): mov %rax,0x18(%rsp)
607c(2): xor %eax,%eax
607e(3): cmp $0x24,%edx
6081(6): jnbe 0x364(%rip)
6087(5): lea 0x10(%rsp),%rax
608c(3): mov %rsi,%r15
608f(3): test %rsi,%rsi
6092(3): mov %rdi,%rbp
6095(4): mov %edx,0x8(%rsp)
6099(3): mov %rcx,%r14
609c(3): mov %r8,%r13
609f(4): cmove %rax,%r15
60a3(5): call 0xffffb47d(%rip)
60a8(6): mov $0x0,(%rax)
60ae(3): mov %rax,%r12
60b1(4): movzx 0x0(%rbp),%ebx
60b5(5): call 0xffffb75b(%rip)
60ba(4): mov 0x8(%rsp),%edx
60be(3): mov (%rax),%rsi
60c1(3): mov %rbp,%rax
60c4(2): jmp 0x13(%rip)
60c6(a): nop 0x0(%rax,%rax,1)
60d0(4): add $0x1,%rax
60d4(3): movzx (%rax),%ebx
60d7(3): movzx %bl,%ecx
60da(5): test $0x20,0x1(%rsi,%rcx,2)
60df(2): jnz 0xfffffff1(%rip)
60e1(3): cmp $0x2d,%bl
60e4(2): jz 0x54(%rip)
60e6(2): xor %ecx,%ecx
60e8(3): mov %r15,%rsi
60eb(3): mov %rbp,%rdi
60ee(5): call 0xffffb552(%rip)
60f3(3): mov (%r15),%rcx
60f6(3): mov %rax,%rbx
60f9(3): cmp %rbp,%rcx
60fc(2): jz 0x2c(%rip)
60fe(4): mov (%r12),%eax
6102(2): test %eax,%eax
6104(2): jz 0x64(%rip)
6106(3): cmp $0x22,%eax
6109(5): mov $0x1,%ebp
610e(2): jnz 0x2a(%rip)
6110(3): test %r13,%r13
6113(2): jz 0xb(%rip)
6115(4): movzx (%rcx),%r12d
6119(3): test %r12b,%r12b
611c(2): jnz 0x7b(%rip)
611e(3): mov %rbx,(%r14)
6121(2): jmp 0x1c(%rip)
6123(5): nop 0x0(%rax,%rax,1)
6128(3): test %r13,%r13
612b(5): mov %rcx,0x8(%rsp)
6130(2): jnz 0x40(%rip)
6132(6): nop 0x0(%rax,%rax,1)
6138(5): mov $0x4,%ebp
613d(5): mov 0x18(%rsp),%rdi
6142(9): xor $0x28,%rdi
614b(2): mov %ebp,%eax
614d(6): jnz 0x293(%rip)
6153(4): add $0x28,%rsp
6157(1): pop %rbx
6158(1): pop %rbp
6159(2): pop %r12
615b(2): pop %r13
615d(2): pop %r14
615f(2): pop %r15
6161(1): ret near (%rsp)
6162(6): nop 0x0(%rax,%rax,1)
6168(2): xor %ebp,%ebp
616a(2): jmp 0xffffffa6(%rip)
616c(4): nop 0x0(%rax)
6170(5): movzx 0x0(%rbp),%r12d
6175(3): test %r12b,%r12b
6178(2): jz 0xffffffc0(%rip)
617a(4): movsx %r12b,%esi
617e(3): mov %r13,%rdi
6181(2): xor %ebp,%ebp
6183(5): call 0xffffb47d(%rip)
6188(3): test %rax,%rax
618b(5): mov $0x1,%ebx
6190(5): mov 0x8(%rsp),%rcx
6195(2): jz 0xffffffa3(%rip)
6197(4): movsx %r12b,%esi
619b(3): mov %r13,%rdi
619e(5): mov %rcx,0x8(%rsp)
61a3(5): call 0xffffb45d(%rip)
61a8(3): test %rax,%rax
61ab(5): mov 0x8(%rsp),%rcx
61b0(6): jz 0xcc(%rip)
61b6(5): lea 0xffffffbb(%r12),%eax
61bb(2): cmp $0x2f,%al
61bd(2): jnbe 0x53(%rip)
61bf(a): mov $0x142129060940101,%rdx
61c9(4): bt %rax,%rdx
61cd(2): jnb 0x43(%rip)
61cf(5): mov $0x30,%esi
61d4(3): mov %r13,%rdi
61d7(5): mov %rcx,0x8(%rsp)
61dc(5): call 0xffffb424(%rip)
61e1(3): test %rax,%rax
61e4(5): mov 0x8(%rsp),%rcx
61e9(2): jz 0x27(%rip)
61eb(4): movzx 0x1(%rcx),%eax
61ef(2): cmp $0x44,%al
61f1(2): jz 0xe(%rip)
61f3(2): cmp $0x69,%al
61f5(6): jz 0x1d3(%rip)
61fb(2): cmp $0x42,%al
61fd(2): jnz 0x13(%rip)
61ff(5): mov $0x2,%edi
6204(5): mov $0x3e8,%esi
6209(2): jmp 0x11(%rip)
620b(5): nop 0x0(%rax,%rax,1)
6210(5): mov $0x1,%edi
6215(5): mov $0x400,%esi
621a(4): sub $0x42,%r12d
621e(4): cmp $0x35,%r12b
6222(2): jnbe 0x5a(%rip)
6224(7): lea 0x175d(%rip),%rdx
622b(4): movzx %r12b,%r12d
622f(4): movsxd 0x0(%rdx,%r12,4),%rax
6233(3): add %rdx,%rax
6236(2): jmp %rax
6238(3): mov %rbx,%rax
623b(3): mul %rax,%rsi,%rdx
623e(6): jo 0x1f3(%rip)
6244(3): xor %r8d,%r8d
6247(3): mul %rax,%rsi,%rdx
624a(6): jo 0x1d8(%rip)
6250(3): mov %rax,%rbx
6253(3): or %r8d,%ebp
6256(a): nop 0x0(%rax,%rax,1)
6260(3): movsxd %edi,%rdi
6263(2): mov %ebp,%eax
6265(3): add %rdi,%rcx
6268(3): or $0x2,%eax
626b(3): mov %rcx,(%r15)
626e(3): cmp $0x0,(%rcx)
6271(3): mov %rbx,(%r14)
6274(3): cmovne %eax,%ebp
6277(5): jmp 0xfffffec6(%rip)
627c(3): mov %rbx,(%r14)
627f(3): or $0x2,%ebp
6282(5): jmp 0xfffffebb(%rip)
6287(5): mov $0x2,%edx
628c(3): mov %rdx,%rax
628f(3): mul %rax,%rbx,%rdx
6292(6): jo 0x9c(%rip)
6298(3): add %rbx,%rbx
629b(2): jmp 0xffffffc5(%rip)
629d(5): mov $0x200,%edx
62a2(3): mov %rdx,%rax
62a5(3): mul %rax,%rbx,%rdx
62a8(6): jo 0x86(%rip)
62ae(4): shl/sal $0x9,%rbx
62b2(2): jmp 0xffffffae(%rip)
62b4(6): mov $0x7,%r8d
62ba(3): xor %r9d,%r9d
62bd(3): nop (%rax)
62c0(3): mov %rbx,%rax
62c3(3): mul %rax,%rsi,%rdx
62c6(3): mov %rax,%rbx
62c9(6): jo 0x195(%rip)
62cf(4): sub $0x1,%r8d
62d3(2): jnz 0xffffffed(%rip)
62d5(3): or %r9d,%ebp
62d8(2): jmp 0xffffff88(%rip)
62da(6): mov $0x8,%r8d
62e0(3): xor %r9d,%r9d
62e3(5): nop 0x0(%rax,%rax,1)
62e8(3): mov %rbx,%rax
62eb(3): mul %rax,%rsi,%rdx
62ee(3): mov %rax,%rbx
62f1(6): jo 0x14f(%rip)
62f7(4): sub $0x1,%r8d
62fb(2): jnz 0xffffffed(%rip)
62fd(2): jmp 0xffffffd8(%rip)
62ff(6): mov $0x4,%r8d
6305(3): xor %r9d,%r9d
6308(3): mov %rbx,%rax
630b(3): mul %rax,%rsi,%rdx
630e(3): mov %rax,%rbx
6311(6): jo 0x102(%rip)
6317(4): sub $0x1,%r8d
631b(2): jnz 0xffffffed(%rip)
631d(2): jmp 0xffffffb8(%rip)
631f(3): mov %rbx,%rax
6322(3): mul %rax,%rsi,%rdx
6325(3): mov %rax,%rbx
6328(6): jno 0xffffff38(%rip)
632e(5): mov $0x1,%ebp
6333(4): or $0xffffffff,%rbx
6337(5): jmp 0xffffff29(%rip)
633c(4): nop 0x0(%rax)
6340(6): mov $0x5,%r8d
6346(3): xor %r9d,%r9d
6349(3): mov %rbx,%rax
634c(3): mul %rax,%rsi,%rdx
634f(3): mov %rax,%rbx
6352(6): jo 0xfd(%rip)
6358(4): sub $0x1,%r8d
635c(2): jnz 0xffffffed(%rip)
635e(5): jmp 0xffffff77(%rip)
6363(6): mov $0x6,%r8d
6369(3): xor %r9d,%r9d
636c(3): mov %rbx,%rax
636f(3): mul %rax,%rsi,%rdx
6372(3): mov %rax,%rbx
6375(6): jo 0x8f(%rip)
637b(4): sub $0x1,%r8d
637f(2): jnz 0xffffffed(%rip)
6381(5): jmp 0xffffff54(%rip)
6386(5): mov $0x400,%edx
638b(3): mov %rdx,%rax
638e(3): mul %rax,%rbx,%rdx
6391(2): jo 0xffffff9d(%rip)
6393(4): shl/sal $0xa,%rbx
6397(5): jmp 0xfffffec9(%rip)
639c(3): mov %rbx,%rax
639f(3): mul %rax,%rsi,%rdx
63a2(6): jo 0xcb(%rip)
63a8(3): xor %r8d,%r8d
63ab(3): mul %rax,%rsi,%rdx
63ae(6): jno 0xfffffe99(%rip)
63b4(6): mov $0x1,%r8d
63ba(4): or $0xffffffff,%rax
63be(5): jmp 0xfffffe89(%rip)
63c3(5): nop 0x0(%rax,%rax,1)
63c8(2): xor %edi,%edi
63ca(4): cmp $0x42,0x2(%rcx)
63ce(5): mov $0x400,%esi
63d3(4): setz %dil
63d7(4): lea 0x1(%rdi,%rdi,1),%edi
63db(5): jmp 0xfffffe3f(%rip)
63e0(5): call 0xffffb1f0(%rip)
63e5(7): lea 0x1674(%rip),%rcx
63ec(7): lea 0x154d(%rip),%rsi
63f3(7): lea 0x1566(%rip),%rdi
63fa(5): mov $0x54,%edx
63ff(5): call 0xffffb231(%rip)
6404(6): mov $0x1,%r9d
640a(4): or $0xffffffff,%rbx
640e(5): jmp 0xffffff6d(%rip)
6413(6): mov $0x1,%r9d
6419(4): or $0xffffffff,%rbx
641d(5): jmp 0xfffffefa(%rip)
6422(6): mov $0x1,%r8d
6428(4): or $0xffffffff,%rbx
642c(5): jmp 0xfffffe27(%rip)
6431(4): or $0xffffffff,%rax
6435(6): mov $0x1,%r8d
643b(5): jmp 0xfffffe0c(%rip)
6440(6): mov $0x1,%r9d
6446(4): or $0xffffffff,%rbx
644a(5): jmp 0xfffffead(%rip)
644f(6): mov $0x1,%r9d
6455(4): or $0xffffffff,%rbx
6459(5): jmp 0xfffffeff(%rip)
645e(6): mov $0x1,%r9d
6464(4): or $0xffffffff,%rbx
6468(5): jmp 0xfffffe67(%rip)
646d(6): mov $0x1,%r8d
6473(4): or $0xffffffff,%rax
6477(5): jmp 0xffffff34(%rip)

"rpl_mbrtowc" :
6480(2): push %r13
6482(2): push %r12
6484(3): mov %rsi,%r13
6487(1): push %rbp
6488(1): push %rbx
6489(3): mov %rdi,%rbx
648c(3): mov %rdx,%r12
648f(4): sub $0x18,%rsp
6493(9): mov $0x28,%rax
649c(5): mov %rax,0x8(%rsp)
64a1(2): xor %eax,%eax
64a3(5): lea 0x4(%rsp),%rax
64a8(3): test %rdi,%rdi
64ab(4): cmove %rax,%rbx
64af(3): mov %rbx,%rdi
64b2(5): call 0xffffb13e(%rip)
64b7(4): cmp $0xfffffffd,%rax
64bb(3): mov %rax,%rbp
64be(2): jbe 0x22(%rip)
64c0(3): test %r12,%r12
64c3(2): jz 0x1d(%rip)
64c5(2): xor %edi,%edi
64c7(5): call 0xc9(%rip)
64cc(2): test %al,%al
64ce(2): jnz 0x12(%rip)
64d0(5): movzx 0x0(%r13),%eax
64d5(5): mov $0x1,%ebp
64da(2): mov %eax,(%rbx)
64dc(4): nop 0x0(%rax)
64e0(5): mov 0x8(%rsp),%rdx
64e5(9): xor $0x28,%rdx
64ee(3): mov %rbp,%rax
64f1(2): jnz 0xd(%rip)
64f3(4): add $0x18,%rsp
64f7(1): pop %rbx
64f8(1): pop %rbp
64f9(2): pop %r12
64fb(2): pop %r13
64fd(1): ret near (%rsp)
64fe(5): call 0xffffb0d2(%rip)

"close_stream" :
6510(2): push %r12
6512(1): push %rbp
6513(3): mov %rdi,%rbp
6516(1): push %rbx
6517(5): call 0xffffb039(%rip)
651c(3): mov 0x0(%rbp),%ebx
651f(3): mov %rbp,%rdi
6522(3): mov %rax,%r12
6525(5): call 0x10b(%rip)
652a(3): and $0x20,%ebx
652d(2): test %ebx,%ebx
652f(2): jnz 0x19(%rip)
6531(2): test %eax,%eax
6533(2): jz 0xc(%rip)
6535(3): test %r12,%r12
6538(5): mov $0xffffffff,%eax
653d(2): jz 0x3b(%rip)
653f(1): pop %rbx
6540(1): pop %rbp
6541(2): pop %r12
6543(1): ret near (%rsp)
6544(4): nop 0x0(%rax)
6548(2): test %eax,%eax
654a(2): jnz 0x1e(%rip)
654c(5): call 0xffffafd4(%rip)
6551(6): mov $0x0,(%rax)
6557(5): mov $0xffffffff,%eax
655c(1): pop %rbx
655d(1): pop %rbp
655e(2): pop %r12
6560(1): ret near (%rsp)
6561(7): nop 0x0(%rax)
6568(1): pop %rbx
6569(5): mov $0xffffffff,%eax
656e(1): pop %rbp
656f(2): pop %r12
6571(1): ret near (%rsp)
6572(6): nop 0x0(%rax,%rax,1)
6578(5): call 0xffffafa8(%rip)
657d(3): cmp $0x9,(%rax)
6580(1): pop %rbx
6581(1): pop %rbp
6582(2): pop %r12
6584(3): setnz %al
6587(3): movzx %al,%eax
658a(2): neg %eax
658c(1): ret near (%rsp)

"hard_locale" :
6590(4): sub $0x8,%rsp
6594(2): xor %esi,%esi
6596(5): call 0xffffb1ba(%rip)
659b(3): mov %rax,%rdx
659e(5): mov $0x1,%eax
65a3(3): test %rdx,%rdx
65a6(2): jz 0x1f(%rip)
65a8(7): lea 0x14bc(%rip),%rdi
65af(5): mov $0x2,%ecx
65b4(3): mov %rdx,%rsi
65b7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
65b9(3): setnbe %cl
65bc(3): sbb $0x0,%cl
65bf(2): xor %eax,%eax
65c1(2): test %cl,%cl
65c3(2): jnz 0xd(%rip)
65c5(4): add $0x8,%rsp
65c9(1): ret near (%rsp)
65ca(6): nop 0x0(%rax,%rax,1)
65d0(7): lea 0x1496(%rip),%rdi
65d7(5): mov $0x6,%ecx
65dc(3): mov %rdx,%rsi
65df(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
65e1(3): setnbe %al
65e4(2): sbb $0x0,%al
65e6(2): test %al,%al
65e8(3): setnz %al
65eb(4): add $0x8,%rsp
65ef(1): ret near (%rsp)

"locale_charset" :
65f0(4): sub $0x8,%rsp
65f4(5): mov $0xe,%edi
65f9(5): call 0xffffb107(%rip)
65fe(3): test %rax,%rax
6601(2): jz 0x1f(%rip)
6603(3): cmp $0x0,(%rax)
6606(7): lea 0x1466(%rip),%rdx
660d(4): cmove %rdx,%rax
6611(4): add $0x8,%rsp
6615(1): ret near (%rsp)
6616(a): nop 0x0(%rax,%rax,1)
6620(7): lea 0x144c(%rip),%rax
6627(4): add $0x8,%rsp
662b(1): ret near (%rsp)

"rpl_fclose" :
6630(2): push %r12
6632(1): push %rbp
6633(1): push %rbx
6634(3): mov %rdi,%rbx
6637(5): call 0xffffb099(%rip)
663c(2): test %eax,%eax
663e(3): mov %rbx,%rdi
6641(2): js 0x56(%rip)
6643(5): call 0xffffb0dd(%rip)
6648(2): test %eax,%eax
664a(2): jnz 0x2e(%rip)
664c(3): mov %rbx,%rdi
664f(5): call 0x61(%rip)
6654(2): test %eax,%eax
6656(2): jz 0x3e(%rip)
6658(5): call 0xffffaec8(%rip)
665d(3): mov (%rax),%r12d
6660(3): mov %rbx,%rdi
6663(3): mov %rax,%rbp
6666(5): call 0xffffaf1a(%rip)
666b(3): test %r12d,%r12d
666e(2): jnz 0x32(%rip)
6670(1): pop %rbx
6671(1): pop %rbp
6672(2): pop %r12
6674(1): ret near (%rsp)
6675(3): nop (%rax)
6678(3): mov %rbx,%rdi
667b(5): call 0xffffb055(%rip)
6680(2): xor %esi,%esi
6682(5): mov $0x1,%edx
6687(2): mov %eax,%edi
6689(5): call 0xffffaf97(%rip)
668e(4): cmp $0xffffffff,%rax
6692(2): jnz 0xffffffba(%rip)
6694(3): mov %rbx,%rdi
6697(1): pop %rbx
6698(1): pop %rbp
6699(2): pop %r12
669b(5): jmp 0xffffaee5(%rip)
66a0(4): mov %r12d,0x0(%rbp)
66a4(5): mov $0xffffffff,%eax
66a9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
66b0(3): test %rdi,%rdi
66b3(1): push %rbx
66b4(3): mov %rdi,%rbx
66b7(2): jz 0x13(%rip)
66b9(5): call 0xffffb067(%rip)
66be(2): test %eax,%eax
66c0(2): jz 0xa(%rip)
66c2(6): test $0x100,(%rbx)
66c8(2): jnz 0x10(%rip)
66ca(3): mov %rbx,%rdi
66cd(1): pop %rbx
66ce(5): jmp 0xffffb022(%rip)
66d3(5): nop 0x0(%rax,%rax,1)
66d8(3): mov %rbx,%rdi
66db(5): mov $0x1,%edx
66e0(2): xor %esi,%esi
66e2(5): call 0xe(%rip)
66e7(3): mov %rbx,%rdi
66ea(1): pop %rbx
66eb(5): jmp 0xffffb005(%rip)

"rpl_fseeko" :
66f0(4): mov 0x8(%rdi),%rax
66f4(4): cmp %rax,0x10(%rdi)
66f8(2): jz 0x8(%rip)
66fa(5): jmp 0xffffb0a6(%rip)
66ff(1): nop 
6700(4): mov 0x20(%rdi),%rax
6704(4): cmp %rax,0x28(%rdi)
6708(2): jnz 0xfffffff2(%rip)
670a(5): cmp $0x0,0x48(%rdi)
670f(2): jnz 0xffffffeb(%rip)
6711(2): push %r12
6713(1): push %rbp
6714(3): mov %edx,%r12d
6717(1): push %rbx
6718(3): mov %rsi,%rbp
671b(3): mov %rdi,%rbx
671e(5): call 0xffffafb2(%rip)
6723(3): mov %r12d,%edx
6726(3): mov %rbp,%rsi
6729(2): mov %eax,%edi
672b(5): call 0xffffaef5(%rip)
6730(4): cmp $0xffffffff,%rax
6734(2): jz 0xe(%rip)
6736(3): and $0xef,(%rbx)
6739(7): mov %rax,0x90(%rbx)
6740(2): xor %eax,%eax
6742(1): pop %rbx
6743(1): pop %rbp
6744(2): pop %r12
6746(1): ret near (%rsp)

"__libc_csu_init" :
6750(2): push %r15
6752(2): push %r14
6754(3): mov %rdx,%r15
6757(2): push %r13
6759(2): push %r12
675b(7): lea 0x20330e(%rip),%r12
6762(1): push %rbp
6763(7): lea 0x20330e(%rip),%rbp
676a(1): push %rbx
676b(3): mov %edi,%r13d
676e(3): mov %rsi,%r14
6771(3): sub %r12,%rbp
6774(4): sub $0x8,%rsp
6778(4): sar $0x3,%rbp
677c(5): call 0xffffad5c(%rip)
6781(3): test %rbp,%rbp
6784(2): jz 0x22(%rip)
6786(2): xor %ebx,%ebx
6788(8): nop 0x0(%rax,%rax,1)
6790(3): mov %r15,%rdx
6793(3): mov %r14,%rsi
6796(3): mov %r13d,%edi
6799(4): call 0x0(%r12,%rbx,8)
679d(4): add $0x1,%rbx
67a1(3): cmp %rbx,%rbp
67a4(2): jnz 0xffffffec(%rip)
67a6(4): add $0x8,%rsp
67aa(1): pop %rbx
67ab(1): pop %rbp
67ac(2): pop %r12
67ae(2): pop %r13
67b0(2): pop %r14
67b2(2): pop %r15
67b4(1): ret near (%rsp)

"atexit" :
67d0(7): mov 0x203831(%rip),%rdx
67d7(2): xor %esi,%esi
67d9(5): jmp 0xffffafd7(%rip)

"_fini" :
67e0(4): sub $0x8,%rsp
67e4(4): add $0x8,%rsp
67e8(1): ret near (%rsp)

