
"__snprintf_chk@plt" :
19a0(6): jmp 0x20c45a(%rip)
19a6(5): push $0x0

"free@plt" :
19b0(6): jmp 0x20c452(%rip)
19b6(5): push $0x1

"abort@plt" :
19c0(6): jmp 0x20c44a(%rip)
19c6(5): push $0x2

"__errno_location@plt" :
19d0(6): jmp 0x20c442(%rip)
19d6(5): push $0x3

"strncmp@plt" :
19e0(6): jmp 0x20c43a(%rip)
19e6(5): push $0x4

"_exit@plt" :
19f0(6): jmp 0x20c432(%rip)
19f6(5): push $0x5

"strcpy@plt" :
1a00(6): jmp 0x20c42a(%rip)
1a06(5): push $0x6

"__fpending@plt" :
1a10(6): jmp 0x20c422(%rip)
1a16(5): push $0x7

"qsort@plt" :
1a20(6): jmp 0x20c41a(%rip)
1a26(5): push $0x8

"wcswidth@plt" :
1a30(6): jmp 0x20c412(%rip)
1a36(5): push $0x9

"mbstowcs@plt" :
1a40(6): jmp 0x20c40a(%rip)
1a46(5): push $0xa

"textdomain@plt" :
1a50(6): jmp 0x20c402(%rip)
1a56(5): push $0xb

"fclose@plt" :
1a60(6): jmp 0x20c3fa(%rip)
1a66(5): push $0xc

"bindtextdomain@plt" :
1a70(6): jmp 0x20c3f2(%rip)
1a76(5): push $0xd

"dcgettext@plt" :
1a80(6): jmp 0x20c3ea(%rip)
1a86(5): push $0xe

"__ctype_get_mb_cur_max@plt" :
1a90(6): jmp 0x20c3e2(%rip)
1a96(5): push $0xf

"strlen@plt" :
1aa0(6): jmp 0x20c3da(%rip)
1aa6(5): push $0x10

"__stack_chk_fail@plt" :
1ab0(6): jmp 0x20c3d2(%rip)
1ab6(5): push $0x11

"getopt_long@plt" :
1ac0(6): jmp 0x20c3ca(%rip)
1ac6(5): push $0x12

"mbrtowc@plt" :
1ad0(6): jmp 0x20c3c2(%rip)
1ad6(5): push $0x13

"strchr@plt" :
1ae0(6): jmp 0x20c3ba(%rip)
1ae6(5): push $0x14

"__overflow@plt" :
1af0(6): jmp 0x20c3b2(%rip)
1af6(5): push $0x15

"strrchr@plt" :
1b00(6): jmp 0x20c3aa(%rip)
1b06(5): push $0x16

"lseek@plt" :
1b10(6): jmp 0x20c3a2(%rip)
1b16(5): push $0x17

"__assert_fail@plt" :
1b20(6): jmp 0x20c39a(%rip)
1b26(5): push $0x18

"__strtoul_internal@plt" :
1b30(6): jmp 0x20c392(%rip)
1b36(5): push $0x19

"memset@plt" :
1b40(6): jmp 0x20c38a(%rip)
1b46(5): push $0x1a

"strspn@plt" :
1b50(6): jmp 0x20c382(%rip)
1b56(5): push $0x1b

"strndup@plt" :
1b60(6): jmp 0x20c37a(%rip)
1b66(5): push $0x1c

"memcmp@plt" :
1b70(6): jmp 0x20c372(%rip)
1b76(5): push $0x1d

"fputs_unlocked@plt" :
1b80(6): jmp 0x20c36a(%rip)
1b86(5): push $0x1e

"calloc@plt" :
1b90(6): jmp 0x20c362(%rip)
1b96(5): push $0x1f

"strcmp@plt" :
1ba0(6): jmp 0x20c35a(%rip)
1ba6(5): push $0x20

"strtol@plt" :
1bb0(6): jmp 0x20c352(%rip)
1bb6(5): push $0x21

"memcpy@plt" :
1bc0(6): jmp 0x20c34a(%rip)
1bc6(5): push $0x22

"fileno@plt" :
1bd0(6): jmp 0x20c342(%rip)
1bd6(5): push $0x23

"wcwidth@plt" :
1be0(6): jmp 0x20c33a(%rip)
1be6(5): push $0x24

"malloc@plt" :
1bf0(6): jmp 0x20c332(%rip)
1bf6(5): push $0x25

"fflush@plt" :
1c00(6): jmp 0x20c32a(%rip)
1c06(5): push $0x26

"nl_langinfo@plt" :
1c10(6): jmp 0x20c322(%rip)
1c16(5): push $0x27

"__freading@plt" :
1c20(6): jmp 0x20c31a(%rip)
1c26(5): push $0x28

"realloc@plt" :
1c30(6): jmp 0x20c312(%rip)
1c36(5): push $0x29

"setlocale@plt" :
1c40(6): jmp 0x20c30a(%rip)
1c46(5): push $0x2a

"__printf_chk@plt" :
1c50(6): jmp 0x20c302(%rip)
1c56(5): push $0x2b

"mempcpy@plt" :
1c60(6): jmp 0x20c2fa(%rip)
1c66(5): push $0x2c

"memmove@plt" :
1c70(6): jmp 0x20c2f2(%rip)
1c76(5): push $0x2d

"error@plt" :
1c80(6): jmp 0x20c2ea(%rip)
1c86(5): push $0x2e

"fseeko@plt" :
1c90(6): jmp 0x20c2e2(%rip)
1c96(5): push $0x2f

"__cxa_atexit@plt" :
1ca0(6): jmp 0x20c2da(%rip)
1ca6(5): push $0x30

"wcstombs@plt" :
1cb0(6): jmp 0x20c2d2(%rip)
1cb6(5): push $0x31

"exit@plt" :
1cc0(6): jmp 0x20c2ca(%rip)
1cc6(5): push $0x32

"fwrite@plt" :
1cd0(6): jmp 0x20c2c2(%rip)
1cd6(5): push $0x33

"__fprintf_chk@plt" :
1ce0(6): jmp 0x20c2ba(%rip)
1ce6(5): push $0x34

"__strncat_chk@plt" :
1cf0(6): jmp 0x20c2b2(%rip)
1cf6(5): push $0x35

"mbsinit@plt" :
1d00(6): jmp 0x20c2aa(%rip)
1d06(5): push $0x36

"iswprint@plt" :
1d10(6): jmp 0x20c2a2(%rip)
1d16(5): push $0x37

"getdelim@plt" :
1d20(6): jmp 0x20c29a(%rip)
1d26(5): push $0x38

"__ctype_b_loc@plt" :
1d30(6): jmp 0x20c292(%rip)
1d36(5): push $0x39

".plt.got" :
1d40(6): jmp 0x20c2aa(%rip)
1d46(2): nop 

"_init" :
1970(4): sub $0x8,%rsp
1974(7): mov 0x20c665(%rip),%rax
197b(3): test %rax,%rax
197e(2): jz 0x4(%rip)
1980(2): call %rax
1982(4): add $0x8,%rsp
1986(1): ret near (%rsp)

"main" :
1d50(2): push %r15
1d52(2): push %r14
1d54(2): push %r13
1d56(2): push %r12
1d58(1): push %rbp
1d59(1): push %rbx
1d5a(2): mov %edi,%ebp
1d5c(3): mov %rsi,%rbx
1d5f(4): sub $0x48,%rsp
1d63(3): mov (%rsi),%rdi
1d66(9): mov $0x28,%rax
1d6f(5): mov %rax,0x38(%rsp)
1d74(2): xor %eax,%eax
1d76(5): call 0x42ca(%rip)
1d7b(7): lea 0x77f4(%rip),%rsi
1d82(5): mov $0x6,%edi
1d87(5): call 0xfffffeb9(%rip)
1d8c(7): lea 0x78f3(%rip),%rsi
1d93(7): lea 0x78b1(%rip),%rdi
1d9a(3): mov %rax,%r13
1d9d(5): call 0xfffffcd3(%rip)
1da2(7): lea 0x78a2(%rip),%rdi
1da9(5): call 0xfffffca7(%rip)
1dae(5): mov $0x10000,%edi
1db3(5): call 0xfffffe5d(%rip)
1db8(3): test %rax,%rax
1dbb(7): mov %rax,0x20c356(%rip)
1dc2(6): jz 0xc7(%rip)
1dc8(3): cmp $0x0,(%rax)
1dcb(6): jz 0xbe(%rip)
1dd1(7): mov 0x20c340(%rip),%rdi
1dd8(7): lea 0x20ba61(%rip),%r12
1ddf(5): call 0xfffffcc1(%rip)
1de4(7): lea 0x3d35(%rip),%rdi
1deb(6): mov %eax,0x20c323(%rip)
1df1(5): call 0x767f(%rip)
1df6(a): nop 0x0(%rax,%rax,1)
1e00(7): lea 0x7899(%rip),%rdx
1e07(3): xor %r8d,%r8d
1e0a(3): mov %r12,%rcx
1e0d(3): mov %rbx,%rsi
1e10(2): mov %ebp,%edi
1e12(5): call 0xfffffcae(%rip)
1e17(3): cmp $0xff,%eax
1e1a(6): jz 0x414(%rip)
1e20(5): cmp $0x84,%eax
1e25(6): jz 0x31b(%rip)
1e2b(2): jle 0x75(%rip)
1e2d(5): cmp $0x89,%eax
1e32(6): jz 0x195(%rip)
1e38(6): jnle 0xb8(%rip)
1e3e(5): cmp $0x86,%eax
1e43(6): jz 0x215(%rip)
1e49(6): jl 0x1f7(%rip)
1e4f(5): cmp $0x87,%eax
1e54(6): jz 0x28c(%rip)
1e5a(5): cmp $0x88,%eax
1e5f(6): jnz 0x11c(%rip)
1e65(8): cmp $0x0,0x20c493(%rip)
1e6d(6): jnz 0xcff(%rip)
1e73(7): mov 0x20c266(%rip),%rdi
1e7a(5): mov $0x1,%esi
1e7f(5): call 0x32f1(%rip)
1e84(5): jmp 0xffffff7c(%rip)
1e89(7): lea 0x780e(%rip),%rax
1e90(7): mov %rax,0x20c281(%rip)
1e97(5): jmp 0xffffff3a(%rip)
1e9c(4): nop 0x0(%rax)
1ea0(3): cmp $0x7a,%eax
1ea3(6): jz 0x2e5(%rip)
1ea9(6): jle 0xb7(%rip)
1eaf(5): cmp $0x81,%eax
1eb4(6): jz 0x16c(%rip)
1eba(6): jle 0x11e(%rip)
1ec0(5): cmp $0x82,%eax
1ec5(6): jz 0x1d3(%rip)
1ecb(5): cmp $0x83,%eax
1ed0(6): jnz 0xab(%rip)
1ed6(7): mov 0x20c203(%rip),%rdi
1edd(5): call 0xef3(%rip)
1ee2(7): mov %rax,0x20c13f(%rip)
1ee9(5): jmp 0xffffff17(%rip)
1eee(2): nop 
1ef0(5): cmp $0x8b,%eax
1ef5(6): jz 0x2bb(%rip)
1efb(6): jl 0xc5(%rip)
1f01(5): cmp $0x8c,%eax
1f06(6): jz 0x292(%rip)
1f0c(5): cmp $0x8d,%eax
1f11(2): jnz 0x6a(%rip)
1f13(7): mov 0x20c12e(%rip),%r9
1f1a(7): mov 0x20c1bf(%rip),%rsi
1f21(7): lea 0x20bb78(%rip),%rdx
1f28(7): lea 0x9231(%rip),%rcx
1f2f(7): lea 0x77d1(%rip),%rdi
1f36(6): mov $0x4,%r8d
1f3c(5): call 0x3b04(%rip)
1f41(7): lea 0x9218(%rip),%rdx
1f48(3): mov 0x0(%rdx,%rax,4),%eax
1f4b(6): mov %eax,0x20c22f(%rip)
1f51(5): jmp 0xfffffeaf(%rip)
1f56(a): nop 0x0(%rax,%rax,1)
1f60(5): cmp $0xffffff7e,%eax
1f65(6): jz 0xa2d(%rip)
1f6b(3): cmp $0x64,%eax
1f6e(6): jz 0x102(%rip)
1f74(5): cmp $0xffffff7d,%eax
1f79(2): jz 0xf(%rip)
1f7b(5): mov $0x1,%edi
1f80(5): call 0x29c0(%rip)
1f85(3): nop (%rax)
1f88(7): mov 0x20c139(%rip),%rdi
1f8f(7): mov 0x20c0aa(%rip),%rcx
1f96(7): lea 0x7774(%rip),%r8
1f9d(7): lea 0x76a3(%rip),%rdx
1fa4(7): lea 0x760f(%rip),%rsi
1fab(3): xor %r9d,%r9d
1fae(2): xor %eax,%eax
1fb0(5): call 0x6280(%rip)
1fb5(2): xor %edi,%edi
1fb7(5): call 0xfffffd09(%rip)
1fbc(4): nop 0x0(%rax)
1fc0(7): mov $0x1,0x20c149(%rip)
1fc7(7): mov $0x1,0x20c152(%rip)
1fce(5): jmp 0xfffffe32(%rip)
1fd3(5): nop 0x0(%rax,%rax,1)
1fd8(3): add $0x80,%eax
1fdb(2): jnz 0xffffffa0(%rip)
1fdd(7): mov 0x20c064(%rip),%r9
1fe4(7): mov 0x20c0f5(%rip),%rsi
1feb(7): lea 0x20bb6e(%rip),%rdx
1ff2(7): lea 0x91a7(%rip),%rcx
1ff9(7): lea 0x76a4(%rip),%rdi
2000(6): mov $0x4,%r8d
2006(5): call 0x3a3a(%rip)
200b(7): lea 0x918e(%rip),%rdx
2012(3): mov 0x0(%rdx,%rax,4),%eax
2015(6): mov %eax,0x20c16d(%rip)
201b(5): jmp 0xfffffde5(%rip)
2020(7): mov 0x20c0b9(%rip),%rdi
2027(5): call 0xda9(%rip)
202c(7): mov %rax,0x20bffd(%rip)
2033(5): jmp 0xfffffdcd(%rip)
2038(8): nop 0x0(%rax,%rax,1)
2040(7): mov 0x20c099(%rip),%rax
2047(7): mov %rax,0x20c12a(%rip)
204e(5): jmp 0xfffffdb2(%rip)
2053(5): nop 0x0(%rax,%rax,1)
2058(a): mov $0x1,0x20c10e(%rip)
2062(5): jmp 0xfffffd9e(%rip)
2067(9): nop 0x0(%rax,%rax,1)
2070(7): mov 0x20c069(%rip),%rdx
2077(3): movsx (%rdx),%eax
207a(2): test %al,%al
207c(2): jz 0xc(%rip)
207e(4): cmp $0x0,0x1(%rdx)
2082(6): jnz 0x9e3(%rip)
2088(6): mov %eax,0x20bf86(%rip)
208e(5): jmp 0xfffffd72(%rip)
2093(5): nop 0x0(%rax,%rax,1)
2098(7): mov 0x20bfa9(%rip),%r9
209f(7): mov 0x20c03a(%rip),%rsi
20a6(7): lea 0x20ba73(%rip),%rdx
20ad(7): lea 0x90dc(%rip),%rcx
20b4(7): lea 0x75f0(%rip),%rdi
20bb(6): mov $0x4,%r8d
20c1(5): call 0x397f(%rip)
20c6(7): lea 0x90c3(%rip),%rdx
20cd(3): mov 0x0(%rdx,%rax,4),%eax
20d0(6): mov %eax,0x20c0ae(%rip)
20d6(5): jmp 0xfffffd2a(%rip)
20db(5): nop 0x0(%rax,%rax,1)
20e0(7): mov 0x20bff9(%rip),%rdi
20e7(7): lea 0x7488(%rip),%r8
20ee(7): lea 0x20c063(%rip),%rcx
20f5(2): xor %esi,%esi
20f7(5): mov $0xa,%edx
20fc(5): call 0x6544(%rip)
2101(2): test %eax,%eax
2103(6): jnz 0x92c(%rip)
2109(7): mov 0x20c048(%rip),%rax
2110(3): test %rax,%rax
2113(6): jz 0x91c(%rip)
2119(6): jns 0xfffffce7(%rip)
211f(3): neg %rax
2122(a): mov $0x0,0x20beec(%rip)
212c(7): mov %rax,0x20c025(%rip)
2133(5): jmp 0xfffffccd(%rip)
2138(8): nop 0x0(%rax,%rax,1)
2140(7): mov 0x20bf01(%rip),%r9
2147(7): mov 0x20bf92(%rip),%rsi
214e(7): lea 0x20b98b(%rip),%rdx
2155(7): lea 0x9014(%rip),%rcx
215c(7): lea 0x754d(%rip),%rdi
2163(6): mov $0x4,%r8d
2169(5): call 0x38d7(%rip)
216e(7): lea 0x8ffb(%rip),%rdx
2175(3): mov 0x0(%rdx,%rax,4),%eax
2178(6): mov %eax,0x20beba(%rip)
217e(5): jmp 0xfffffc82(%rip)
2183(5): nop 0x0(%rax,%rax,1)
2188(7): mov $0x0,0x20be81(%rip)
218f(5): jmp 0xfffffc71(%rip)
2194(4): nop 0x0(%rax)
2198(7): mov 0x20bf41(%rip),%rax
219f(7): mov %rax,0x20bfa2(%rip)
21a6(5): jmp 0xfffffc5a(%rip)
21ab(5): nop 0x0(%rax,%rax,1)
21b0(7): mov 0x20bf29(%rip),%rdi
21b7(3): test %rdi,%rdi
21ba(2): jz 0x64(%rip)
21bc(7): lea 0x73b3(%rip),%r8
21c3(7): lea 0x20bf5e(%rip),%rcx
21ca(2): xor %esi,%esi
21cc(5): mov $0xa,%edx
21d1(5): call 0x6b2f(%rip)
21d6(2): test %eax,%eax
21d8(2): jnz 0x10(%rip)
21da(8): cmp $0x0,0x20bf46(%rip)
21e2(6): jnz 0xfffffc1e(%rip)
21e8(7): mov 0x20bef1(%rip),%rdi
21ef(5): call 0x5b61(%rip)
21f4(7): lea 0x74f4(%rip),%rsi
21fb(3): mov %rax,%rbx
21fe(5): mov $0x5,%edx
2203(2): xor %edi,%edi
2205(5): call 0xfffff87b(%rip)
220a(3): mov %rbx,%rcx
220d(3): mov %rax,%rdx
2210(2): xor %esi,%esi
2212(5): mov $0x1,%edi
2217(2): xor %eax,%eax
2219(5): call 0xfffffa67(%rip)
221e(b): mov $0x1,0x20beff(%rip)
2229(5): jmp 0xfffffbd7(%rip)
222e(8): cmp $0x0,0x20bf12(%rip)
2236(2): jz 0xf(%rip)
2238(7): cmp $0x0,0x20bf31(%rip)
223f(6): jnz 0x8d7(%rip)
2245(3): test %r13,%r13
2248(2): jnz 0xf(%rip)
224a(7): cmp $0x0,0x20becf(%rip)
2251(6): jnz 0x5c0(%rip)
2257(7): cmp $0x0,0x20bec2(%rip)
225e(2): jz 0x5c(%rip)
2260(7): cmp $0x0,0x20bf21(%rip)
2267(2): jnz 0x53(%rip)
2269(7): cmp $0x0,0x20bf14(%rip)
2270(2): jnz 0x4a(%rip)
2272(7): cmp $0x0,0x20bef7(%rip)
2279(7): mov 0x20bec8(%rip),%r12
2280(6): jnz 0x6e8(%rip)
2286(8): cmp $0x0,0x20beca(%rip)
228e(6): jnz 0x6f6(%rip)
2294(3): test %r12,%r12
2297(2): jnz 0x33(%rip)
2299(7): lea 0x8b60(%rip),%rsi
22a0(5): mov $0x5,%edx
22a5(2): xor %edi,%edi
22a7(5): call 0xfffff7d9(%rip)
22ac(2): xor %esi,%esi
22ae(3): mov %rax,%rdx
22b1(2): xor %edi,%edi
22b3(2): xor %eax,%eax
22b5(5): call 0xfffff9cb(%rip)
22ba(7): mov 0x20be87(%rip),%r12
22c1(3): test %r12,%r12
22c4(6): jz 0x142(%rip)
22ca(9): mov $0x0,0x30(%rsp)
22d3(3): xor %r15d,%r15d
22d6(2): xor %eax,%eax
22d8(2): jmp 0x1c(%rip)
22da(6): nop 0x0(%rax,%rax,1)
22e0(2): test %dl,%dl
22e2(6): jz 0x6b7(%rip)
22e8(5): mov $0x1,%edx
22ed(3): add %rdx,%rax
22f0(4): add $0x1,%r15
22f4(5): movzx 0x0(%r12,%rax,1),%edx
22f9(3): cmp $0x25,%dl
22fc(2): jnz 0xffffffe4(%rip)
22fe(6): cmp $0x25,0x1(%r12,%rax,1)
2304(4): lea 0x1(%rax),%r13
2308(6): jnz 0x350(%rip)
230e(5): mov $0x2,%edx
2313(2): jmp 0xffffffda(%rip)
2315(3): test %r15,%r15
2318(6): jz 0x553(%rip)
231e(3): mov %r15,%rsi
2321(3): mov %r12,%rdi
2324(5): call 0x62fc(%rip)
2329(5): cmp $0x0,0x0(%r13)
232e(7): mov %rax,0x20be0b(%rip)
2335(6): jnz 0x536(%rip)
233b(7): cmp $0x0,0x20bdce(%rip)
2342(6): jz 0xc4(%rip)
2348(7): mov 0x20bde9(%rip),%rsi
234f(3): test %rsi,%rsi
2352(6): jz 0x5f1(%rip)
2358(5): mov $0x2,%edi
235d(5): call 0x59d3(%rip)
2362(7): mov 0x20bdd7(%rip),%rsi
2369(3): mov %rax,%rcx
236c(3): test %rsi,%rsi
236f(6): jz 0x5c8(%rip)
2375(5): mov $0x1,%edi
237a(5): mov %rcx,0x10(%rsp)
237f(7): lea 0x72f3(%rip),%r14
2386(5): call 0x59aa(%rip)
238b(7): cmp $0x0,0x20bc86(%rip)
2392(3): mov %rax,%r15
2395(7): lea 0x72d8(%rip),%rax
239c(7): mov 0x20bdb5(%rip),%r9
23a3(7): lea 0x72d9(%rip),%r13
23aa(3): mov %r12,%rsi
23ad(4): cmove %rax,%r14
23b1(7): cmp $0x0,0x20bdb8(%rip)
23b8(7): lea 0x72c0(%rip),%rax
23bf(5): mov %r9,0x8(%rsp)
23c4(4): cmovne %rax,%r13
23c8(2): xor %edi,%edi
23ca(5): call 0x5966(%rip)
23cf(4): sub $0x8,%rsp
23d3(7): mov 0x20bd26(%rip),%rdi
23da(7): lea 0x8b17(%rip),%rdx
23e1(5): mov 0x18(%rsp),%rcx
23e6(3): mov %r13,%r8
23e9(5): mov $0x1,%esi
23ee(1): push %rcx
23ef(2): push %r15
23f1(3): mov %rax,%rcx
23f4(2): push %r14
23f6(5): mov 0x28(%rsp),%r9
23fb(2): xor %eax,%eax
23fd(5): call 0xfffff8e3(%rip)
2402(4): add $0x20,%rsp
2406(7): cmp $0x0,0x20bd63(%rip)
240d(6): jnz 0x1ee(%rip)
2413(7): mov 0x20bd3e(%rip),%rdi
241a(7): cmp 0x20bd3f(%rip),%rdi
2421(6): jnb 0x22d(%rip)
2427(2): xor %eax,%eax
2429(8): cmp $0x0,0x20bd27(%rip)
2431(2): jnz 0x11(%rip)
2433(2): xor %eax,%eax
2435(a): cmp $0x80,0x20bbd5(%rip)
243f(3): setz %al
2442(7): cmp $0x0,0x20bd37(%rip)
2449(6): mov %eax,0x20bce1(%rip)
244f(2): jz 0xc(%rip)
2451(a): mov $0x0,0x20bbc1(%rip)
245b(6): mov 0x20bc77(%rip),%eax
2461(2): cmp %ebp,%eax
2463(6): jl 0x14b(%rip)
2469(7): mov 0x20bcb8(%rip),%rax
2470(9): mov $0x0,0x28(%rsp)
2479(5): lea 0x30(%rsp),%r13
247e(9): mov $0x0,0x30(%rsp)
2487(5): lea 0x28(%rsp),%rbx
248c(4): lea 0xffffffff(%rax),%rdx
2490(3): test %rax,%rax
2493(7): mov %rdx,0x20bc8e(%rip)
249a(2): jnz 0x2e(%rip)
249c(2): jmp 0x4a(%rip)
249e(2): nop 
24a0(7): mov 0x20bc21(%rip),%rsi
24a7(5): mov 0x28(%rsp),%rdi
24ac(5): call 0xfffff6d4(%rip)
24b1(7): mov 0x20bc70(%rip),%rax
24b8(4): lea 0xffffffff(%rax),%rdx
24bc(3): test %rax,%rax
24bf(7): mov %rdx,0x20bc62(%rip)
24c6(2): jz 0x20(%rip)
24c8(7): movzx 0x20bb41(%rip),%edx
24cf(7): mov 0x20bbfa(%rip),%rcx
24d6(3): mov %r13,%rsi
24d9(3): mov %rbx,%rdi
24dc(5): call 0xfffff844(%rip)
24e1(3): test %rax,%rax
24e4(2): jnle 0xffffffbc(%rip)
24e6(6): mov $0x1,%r12d
24ec(2): jmp 0x34(%rip)
24ee(2): nop 
24f0(5): mov 0x28(%rsp),%rdi
24f5(5): lea 0xffffffff(%rdi,%rax,1),%rcx
24fa(7): movzx 0x20bb0f(%rip),%eax
2501(3): movsx (%rcx),%edx
2504(2): cmp %eax,%edx
2506(4): setz %sil
250a(2): jnz 0xa(%rip)
250c(3): mov $0x0,(%rcx)
250f(5): mov 0x28(%rsp),%rdi
2514(4): movzx %sil,%esi
2518(5): call 0x2258(%rip)
251d(3): and %eax,%r12d
2520(7): movzx 0x20bae9(%rip),%edx
2527(7): mov 0x20bba2(%rip),%rcx
252e(3): mov %r13,%rsi
2531(3): mov %rbx,%rdi
2534(5): call 0xfffff7ec(%rip)
2539(3): test %rax,%rax
253c(2): jnle 0xffffffb4(%rip)
253e(7): mov 0x20bb8b(%rip),%rax
2545(3): test $0x20,(%rax)
2548(2): jz 0x2b(%rip)
254a(7): lea 0x7217(%rip),%rsi
2551(5): mov $0x5,%edx
2556(2): xor %edi,%edi
2558(5): call 0xfffff528(%rip)
255d(3): mov %rax,%rbx
2560(5): call 0xfffff470(%rip)
2565(2): mov (%rax),%esi
2567(3): mov %rbx,%rdx
256a(2): xor %edi,%edi
256c(2): xor %eax,%eax
256e(5): call 0xfffff712(%rip)
2573(7): cmp $0x0,0x20bba6(%rip)
257a(6): jz 0x24f(%rip)
2580(3): test %r12d,%r12d
2583(6): jz 0x26b(%rip)
2589(2): xor %eax,%eax
258b(5): mov 0x38(%rsp),%rbx
2590(9): xor $0x28,%rbx
2599(6): jnz 0x554(%rip)
259f(4): add $0x48,%rsp
25a3(1): pop %rbx
25a4(1): pop %rbp
25a5(2): pop %r12
25a7(2): pop %r13
25a9(2): pop %r14
25ab(2): pop %r15
25ad(1): ret near (%rsp)
25ae(7): cmp $0x0,0x20bb6b(%rip)
25b5(2): jz 0x10(%rip)
25b7(8): cmp $0x0,0x20bb69(%rip)
25bf(6): jnz 0x278(%rip)
25c5(6): mov $0x1,%r12d
25cb(5): nop 0x0(%rax,%rax,1)
25d0(2): cwde 
25d2(5): mov $0x1,%esi
25d7(4): mov 0x0(%rbx,%rax,8),%rdi
25db(5): call 0x2195(%rip)
25e0(3): and %eax,%r12d
25e3(6): mov 0x20baef(%rip),%eax
25e9(3): add $0x1,%eax
25ec(2): cmp %ebp,%eax
25ee(6): mov %eax,0x20bae4(%rip)
25f4(2): jl 0xffffffdc(%rip)
25f6(5): jmp 0xffffff7d(%rip)
25fb(7): cmp $0x0,0x20bb82(%rip)
2602(6): jnz 0x4f0(%rip)
2608(7): cmp $0x0,0x20bb11(%rip)
260f(6): jz 0xfffffe04(%rip)
2615(5): mov $0x10001,%edi
261a(5): call 0xfffff5f6(%rip)
261f(3): cmp $0x0,(%rax)
2622(6): jnz 0xfffffdf1(%rip)
2628(7): lea 0x8961(%rip),%rsi
262f(2): xor %edi,%edi
2631(5): mov $0x5,%edx
2636(5): call 0xfffff44a(%rip)
263b(2): xor %esi,%esi
263d(3): mov %rax,%rdx
2640(2): xor %edi,%edi
2642(2): xor %eax,%eax
2644(5): call 0xfffff63c(%rip)
2649(5): jmp 0xfffffdca(%rip)
264e(5): call 0x8f2(%rip)
2653(5): jmp 0xfffffdd4(%rip)
2658(4): lea 0x0(%r12,%r13,1),%r8
265c(7): lea 0x70ee(%rip),%r14
2663(5): mov $0x0,0x8(%rsp)
2668(8): nop 0x0(%rax,%rax,1)
2670(3): mov %r8,%rdi
2673(3): mov %r14,%rsi
2676(5): call 0xfffff4da(%rip)
267b(3): add %rax,%r13
267e(4): lea 0x0(%r12,%r13,1),%r8
2682(4): movzx (%r8),%edx
2686(3): cmp $0x27,%dl
2689(6): jz 0x117(%rip)
268f(3): cmp $0x30,%dl
2692(6): jz 0x125(%rip)
2698(3): test %rax,%rax
269b(2): jnz 0xffffffd5(%rip)
269d(5): mov %r8,0x10(%rsp)
26a2(5): lea 0x30(%rsp),%r13
26a7(5): call 0xfffff329(%rip)
26ac(5): mov 0x10(%rsp),%r8
26b1(6): mov $0x0,(%rax)
26b7(5): mov $0xa,%edx
26bc(3): mov %r13,%rsi
26bf(5): mov %rax,0x18(%rsp)
26c4(3): mov %r8,%rdi
26c7(5): call 0xfffff4e9(%rip)
26cc(5): mov 0x18(%rsp),%r9
26d1(3): mov %rax,%r14
26d4(5): mov 0x10(%rsp),%r8
26d9(4): cmp $0x22,(%r9)
26dd(6): jz 0x45d(%rip)
26e3(5): cmp %r8,0x30(%rsp)
26e8(2): jz 0x3d(%rip)
26ea(3): test %rax,%rax
26ed(2): jz 0x38(%rip)
26ef(7): cmp $0x0,0x20ba2a(%rip)
26f6(6): jz 0x1b4(%rip)
26fc(8): cmp $0x0,0x20ba54(%rip)
2704(6): jz 0x1a6(%rip)
270a(5): cmp $0x0,0x8(%rsp)
270f(6): jz 0x170(%rip)
2715(3): test %rax,%rax
2718(6): jle 0x167(%rip)
271e(7): mov %r14,0x20ba2b(%rip)
2725(5): mov 0x30(%rsp),%rdx
272a(3): mov %rdx,%rax
272d(3): movzx (%rdx),%edx
2730(3): sub %r12,%rax
2733(2): test %dl,%dl
2735(6): jz 0x2c8(%rip)
273b(3): cmp $0x2e,%dl
273e(6): jz 0x18c(%rip)
2744(5): cmp $0x66,0x0(%r12,%rax,1)
2749(6): jnz 0x372(%rip)
274f(4): add $0x1,%rax
2753(4): lea 0x0(%r12,%rax,1),%r13
2757(5): movzx 0x0(%r13),%edx
275c(2): test %dl,%dl
275e(2): jnz 0x17(%rip)
2760(5): jmp 0x216(%rip)
2765(3): nop (%rax)
2768(2): mov %edi,%edx
276a(2): test %dl,%dl
276c(3): mov %rsi,%rax
276f(6): jz 0xfffffba6(%rip)
2775(3): cmp $0x25,%dl
2778(4): lea 0x1(%rax),%rsi
277c(6): movzx 0x1(%r12,%rax,1),%edi
2782(2): jnz 0xffffffe6(%rip)
2784(4): cmp $0x25,%dil
2788(6): jnz 0x301(%rip)
278e(4): lea 0x2(%rax),%rsi
2792(6): movzx 0x2(%r12,%rax,1),%edx
2798(2): jmp 0xffffffd2(%rip)
279a(6): nop 0x0(%rax,%rax,1)
27a0(4): add $0x1,%r13
27a4(a): mov $0x1,0x20b9c2(%rip)
27ae(4): lea 0x0(%r12,%r13,1),%r8
27b2(5): jmp 0xfffffebe(%rip)
27b7(4): add $0x1,%r13
27bb(5): mov $0x1,0x8(%rsp)
27c0(4): lea 0x0(%r12,%r13,1),%r8
27c4(5): jmp 0xfffffeac(%rip)
27c9(3): test %r12d,%r12d
27cc(6): jnz 0xfffffdbd(%rip)
27d2(6): mov 0x20b9a8(%rip),%eax
27d8(3): sub $0x2,%eax
27db(3): cmp $0x1,%eax
27de(6): jbe 0xfffffdab(%rip)
27e4(5): mov $0x2,%eax
27e9(5): jmp 0xfffffda2(%rip)
27ee(7): lea 0x87f3(%rip),%rsi
27f5(2): xor %edi,%edi
27f7(5): mov $0x5,%edx
27fc(5): call 0xfffff284(%rip)
2801(2): xor %esi,%esi
2803(3): mov %rax,%rdx
2806(2): xor %edi,%edi
2808(2): xor %eax,%eax
280a(5): call 0xfffff476(%rip)
280f(2): jmp 0xffffffc3(%rip)
2811(7): lea 0x6f06(%rip),%rsi
2818(2): xor %edi,%edi
281a(5): mov $0x5,%edx
281f(5): call 0xfffff261(%rip)
2824(2): xor %esi,%esi
2826(3): mov %rax,%rdx
2829(2): xor %edi,%edi
282b(2): xor %eax,%eax
282d(5): call 0xfffff453(%rip)
2832(5): jmp 0xfffffa25(%rip)
2837(7): lea 0x877a(%rip),%rsi
283e(2): xor %edi,%edi
2840(5): mov $0x5,%edx
2845(5): call 0xfffff23b(%rip)
284a(2): xor %esi,%esi
284c(3): mov %rax,%rdx
284f(2): xor %edi,%edi
2851(2): xor %eax,%eax
2853(5): call 0xfffff42d(%rip)
2858(6): mov 0x20b87a(%rip),%eax
285e(2): cmp %eax,%ebp
2860(6): jle 0xfffffd29(%rip)
2866(5): jmp 0xfffffd5f(%rip)
286b(3): mov %r13,%rdi
286e(5): call 0x5d52(%rip)
2873(7): mov %rax,0x20b8be(%rip)
287a(5): jmp 0xfffffac1(%rip)
287f(7): lea 0x85c2(%rip),%rsi
2886(5): mov $0x5,%edx
288b(2): xor %edi,%edi
288d(5): mov %r9,0x10(%rsp)
2892(5): call 0xfffff1ee(%rip)
2897(2): xor %esi,%esi
2899(3): mov %rax,%rdx
289c(2): xor %edi,%edi
289e(2): xor %eax,%eax
28a0(5): call 0xfffff3e0(%rip)
28a5(5): mov 0x10(%rsp),%r9
28aa(3): test %r14,%r14
28ad(6): js 0xa2(%rip)
28b3(5): cmp $0x0,0x8(%rsp)
28b8(6): jnz 0xfffffe66(%rip)
28be(7): mov %r14,0x20b893(%rip)
28c5(5): jmp 0xfffffe60(%rip)
28ca(5): lea 0x1(%r12,%rax,1),%r14
28cf(7): mov $0x0,(%r9)
28d6(5): mov $0xa,%edx
28db(3): mov %r13,%rsi
28de(5): mov %r9,0x8(%rsp)
28e3(3): mov %r14,%rdi
28e6(5): call 0xfffff2ca(%rip)
28eb(5): mov 0x8(%rsp),%r9
28f0(7): mov %rax,0x20b729(%rip)
28f7(4): cmp $0x22,(%r9)
28fb(6): jz 0xd0(%rip)
2901(3): test %rax,%rax
2904(6): js 0xc7(%rip)
290a(5): call 0xfffff426(%rip)
290f(4): movsx (%r14),%rsi
2913(3): mov (%rax),%rax
2916(4): test $0x1,0x0(%rax,%rsi,2)
291a(6): jnz 0xb1(%rip)
2920(4): cmp $0x2b,%sil
2924(6): jz 0xa7(%rip)
292a(5): mov 0x30(%rsp),%rax
292f(3): sub %r12,%rax
2932(5): jmp 0xfffffe12(%rip)
2937(7): lea 0x6c38(%rip),%rsi
293e(5): jmp 0xfffffa37(%rip)
2943(7): lea 0x6c2c(%rip),%rsi
294a(5): jmp 0xfffffa0e(%rip)
294f(3): neg %r14
2952(a): mov $0x0,0x20b6bc(%rip)
295c(7): mov %r14,0x20b7f5(%rip)
2963(5): jmp 0xfffffdc2(%rip)
2968(3): test %r12,%r12
296b(6): jnz 0xfffff95f(%rip)
2971(5): jmp 0xfffffc97(%rip)
2976(3): test %r15,%r15
2979(6): jz 0xfffff9c2(%rip)
297f(5): jmp 0xfffff99f(%rip)
2984(3): test %r12,%r12
2987(6): jnz 0xfffff943(%rip)
298d(5): jmp 0xfffffa86(%rip)
2992(2): xor %edi,%edi
2994(5): call 0x1fac(%rip)
2999(3): mov %r12,%rdi
299c(5): call 0x53b4(%rip)
29a1(7): lea 0x6d8b(%rip),%rsi
29a8(3): mov %rax,%rbx
29ab(5): mov $0x5,%edx
29b0(2): xor %edi,%edi
29b2(5): call 0xfffff0ce(%rip)
29b7(3): mov %rbx,%rcx
29ba(3): mov %rax,%rdx
29bd(2): xor %esi,%esi
29bf(5): mov $0x1,%edi
29c4(2): xor %eax,%eax
29c6(5): call 0xfffff2ba(%rip)
29cb(3): mov %r12,%rdi
29ce(5): call 0x5382(%rip)
29d3(7): lea 0x8496(%rip),%rsi
29da(3): mov %rax,%rbx
29dd(5): mov $0x5,%edx
29e2(2): xor %edi,%edi
29e4(5): call 0xfffff09c(%rip)
29e9(3): mov %rbx,%rcx
29ec(3): mov %rax,%rdx
29ef(2): xor %esi,%esi
29f1(5): mov $0x1,%edi
29f6(2): xor %eax,%eax
29f8(5): call 0xfffff288(%rip)
29fd(3): mov %r12,%rdi
2a00(5): call 0x5350(%rip)
2a05(7): lea 0x6d47(%rip),%rsi
2a0c(3): mov %rax,%rbx
2a0f(5): mov $0x5,%edx
2a14(2): xor %edi,%edi
2a16(5): call 0xfffff06a(%rip)
2a1b(3): mov %rbx,%rcx
2a1e(3): mov %rax,%rdx
2a21(2): xor %esi,%esi
2a23(5): mov $0x1,%edi
2a28(2): xor %eax,%eax
2a2a(5): call 0xfffff256(%rip)
2a2f(7): mov 0x20b6aa(%rip),%rdi
2a36(5): call 0x531a(%rip)
2a3b(7): lea 0x6c76(%rip),%rsi
2a42(3): mov %rax,%rbx
2a45(5): mov $0x5,%edx
2a4a(2): xor %edi,%edi
2a4c(5): call 0xfffff034(%rip)
2a51(3): mov %rbx,%rcx
2a54(3): mov %rax,%rdx
2a57(2): xor %esi,%esi
2a59(5): mov $0x1,%edi
2a5e(2): xor %eax,%eax
2a60(5): call 0xfffff220(%rip)
2a65(7): lea 0x8334(%rip),%rsi
2a6c(5): mov $0x5,%edx
2a71(2): xor %edi,%edi
2a73(5): call 0xfffff00d(%rip)
2a78(2): xor %esi,%esi
2a7a(3): mov %rax,%rdx
2a7d(5): mov $0x1,%edi
2a82(2): xor %eax,%eax
2a84(5): call 0xfffff1fc(%rip)
2a89(3): mov %r12,%rdi
2a8c(5): call 0x52c4(%rip)
2a91(7): lea 0x8438(%rip),%rsi
2a98(3): mov %rax,%rbx
2a9b(5): mov $0x5,%edx
2aa0(2): xor %edi,%edi
2aa2(5): call 0xffffefde(%rip)
2aa7(3): mov %rbx,%rcx
2aaa(3): mov %rax,%rdx
2aad(2): xor %esi,%esi
2aaf(5): mov $0x1,%edi
2ab4(2): xor %eax,%eax
2ab6(5): call 0xfffff1ca(%rip)
2abb(3): mov %r12,%rdi
2abe(5): call 0x5292(%rip)
2ac3(7): lea 0x83c6(%rip),%rsi
2aca(3): mov %rax,%rbx
2acd(5): mov $0x5,%edx
2ad2(2): xor %edi,%edi
2ad4(5): call 0xffffefac(%rip)
2ad9(3): mov %rbx,%rcx
2adc(3): mov %rax,%rdx
2adf(2): xor %esi,%esi
2ae1(5): mov $0x1,%edi
2ae6(2): xor %eax,%eax
2ae8(5): call 0xfffff198(%rip)
2aed(5): call 0xffffefc3(%rip)
2af2(7): lea 0x846f(%rip),%rsi
2af9(5): mov $0x5,%edx
2afe(2): xor %edi,%edi
2b00(5): call 0xffffef80(%rip)
2b05(2): xor %esi,%esi
2b07(3): mov %rax,%rdx
2b0a(5): mov $0x1,%edi
2b0f(2): xor %eax,%eax
2b11(5): call 0xfffff16f(%rip)
2b16(7): lea 0x82b3(%rip),%rsi
2b1d(5): mov $0x5,%edx
2b22(2): xor %edi,%edi
2b24(5): call 0xffffef5c(%rip)
2b29(2): xor %esi,%esi
2b2b(3): mov %rax,%rdx
2b2e(5): mov $0x1,%edi
2b33(2): xor %eax,%eax
2b35(5): call 0xfffff14b(%rip)
2b3a(3): mov %r12,%rdi
2b3d(5): call 0x5213(%rip)
2b42(7): lea 0x82d7(%rip),%rsi
2b49(3): mov %rax,%rbx
2b4c(5): mov $0x5,%edx
2b51(2): xor %edi,%edi
2b53(5): call 0xffffef2d(%rip)
2b58(3): mov %rbx,%rcx
2b5b(3): mov %rax,%rdx
2b5e(2): xor %esi,%esi
2b60(5): mov $0x1,%edi
2b65(2): xor %eax,%eax
2b67(5): call 0xfffff119(%rip)
2b6c(7): lea 0x6b5e(%rip),%rsi
2b73(5): mov $0x5,%edx
2b78(2): xor %edi,%edi
2b7a(5): call 0xffffef06(%rip)
2b7f(2): xor %esi,%esi
2b81(3): mov %rax,%rdx
2b84(5): mov $0x1,%edi
2b89(2): xor %eax,%eax
2b8b(5): call 0xfffff0f5(%rip)
2b90(2): xor %ebp,%ebp
2b92(3): mov %rdx,%r9
2b95(1): pop %rsi
2b96(3): mov %rsp,%rdx
2b99(4): and $0xfffffff0,%rsp
2b9d(1): push %rax
2b9e(1): push %rsp
2b9f(7): lea 0x68ba(%rip),%r8
2ba6(7): lea 0x6843(%rip),%rcx
2bad(7): lea 0xfffff19c(%rip),%rdi
2bb4(6): call 0x20b41e(%rip)
2bba(1): hlt 

"_start" :
2b90(2): xor %ebp,%ebp
2b92(3): mov %rdx,%r9
2b95(1): pop %rsi
2b96(3): mov %rsp,%rdx
2b99(4): and $0xfffffff0,%rsp
2b9d(1): push %rax
2b9e(1): push %rsp
2b9f(7): lea 0x68ba(%rip),%r8
2ba6(7): lea 0x6843(%rip),%rcx
2bad(7): lea 0xfffff19c(%rip),%rdi
2bb4(6): call 0x20b41e(%rip)
2bba(1): hlt 

"deregister_tm_clones" :
2bc0(7): lea 0x20b4f9(%rip),%rdi
2bc7(1): push %rbp
2bc8(7): lea 0x20b4f1(%rip),%rax
2bcf(3): cmp %rdi,%rax
2bd2(3): mov %rsp,%rbp
2bd5(2): jz 0x1b(%rip)
2bd7(7): mov 0x20b3f2(%rip),%rax
2bde(3): test %rax,%rax
2be1(2): jz 0xf(%rip)
2be3(1): pop %rbp
2be4(2): jmp %rax
2be6(a): nop 0x0(%rax,%rax,1)
2bf0(1): pop %rbp
2bf1(1): ret near (%rsp)

"register_tm_clones" :
2c00(7): lea 0x20b4b9(%rip),%rdi
2c07(7): lea 0x20b4b2(%rip),%rsi
2c0e(1): push %rbp
2c0f(3): sub %rdi,%rsi
2c12(3): mov %rsp,%rbp
2c15(4): sar $0x3,%rsi
2c19(3): mov %rsi,%rax
2c1c(4): shr $0x3f,%rax
2c20(3): add %rax,%rsi
2c23(3): sar $0x1,%rsi
2c26(2): jz 0x1a(%rip)
2c28(7): mov 0x20b3b9(%rip),%rax
2c2f(3): test %rax,%rax
2c32(2): jz 0xe(%rip)
2c34(1): pop %rbp
2c35(2): jmp %rax
2c37(9): nop 0x0(%rax,%rax,1)
2c40(1): pop %rbp
2c41(1): ret near (%rsp)

"__do_global_dtors_aux" :
2c50(7): cmp $0x0,0x20b4b1(%rip)
2c57(2): jnz 0x31(%rip)
2c59(8): cmp $0x0,0x20b38f(%rip)
2c61(1): push %rbp
2c62(3): mov %rsp,%rbp
2c65(2): jz 0xe(%rip)
2c67(7): mov 0x20b39a(%rip),%rdi
2c6e(5): call 0xfffff0d2(%rip)
2c73(5): call 0xffffff4d(%rip)
2c78(7): mov $0x1,0x20b489(%rip)
2c7f(1): pop %rbp
2c80(1): ret near (%rsp)
2c81(7): nop 0x0(%rax)
2c88(2): REP ret near (%rsp)

"frame_dummy" :
2c90(1): push %rbp
2c91(3): mov %rsp,%rbp
2c94(1): pop %rbp
2c95(5): jmp 0xffffff6b(%rip)

"simple_strtod_int" :
2ca0(1): push %rbp
2ca1(1): push %rbx
2ca2(3): mov %rdx,%rbp
2ca5(4): sub $0x28,%rsp
2ca9(3): cmp $0x2d,(%rdi)
2cac(6): jz 0xd4(%rip)
2cb2(3): mov $0x0,(%rcx)
2cb5(3): mov %rdi,(%rsi)
2cb8(2): fld1 %st0
2cba(3): xor %r9d,%r9d
2cbd(3): xor %r8d,%r8d
2cc0(2): xor %ebx,%ebx
2cc2(6): mov $0x1,%r10d
2cc8(6): fld 0x84e6(%rip),%st0
2cce(2): jmp 0x37(%rip)
2cd0(2): test %eax,%eax
2cd2(2): jnz 0x52(%rip)
2cd4(4): cmp $0x12,%r8d
2cd8(2): jbe 0x11(%rip)
2cda(4): cmp $0x1b,%r8d
2cde(6): jnbe 0xc2(%rip)
2ce4(5): mov $0x1,%ebx
2ce9(3): mov %eax,(%rsp)
2cec(4): add $0x1,%rdi
2cf0(3): test %rdi,%rdi
2cf3(3): mov %rdi,(%rsi)
2cf6(6): mov $0x1,%r9d
2cfc(2): fmul %st0,%st1
2cfe(3): fild (%rsp),%st0
2d01(2): faddp %st0,%st2
2d03(2): jz 0x5d(%rip)
2d05(3): movsx (%rdi),%eax
2d08(2): mov %eax,%edx
2d0a(3): sub $0x30,%edx
2d0d(3): cmp $0x9,%dl
2d10(2): jnbe 0x20(%rip)
2d12(2): fld1 %st0
2d14(3): sub $0x30,%eax
2d17(2): fucomip %st2,%st0
2d19(3): setp %dl
2d1c(4): cmovne %r10d,%edx
2d20(2): test %dl,%dl
2d22(2): jz 0xffffffae(%rip)
2d24(4): add $0x1,%r8d
2d28(2): jmp 0xffffffac(%rip)
2d2a(6): nop 0x0(%rax,%rax,1)
2d30(2): fstp %st0,%st0
2d32(3): test %r9b,%r9b
2d35(2): jnz 0x2d(%rip)
2d37(3): fstp %st0,(%rsp)
2d3a(7): movsxd 0x20b3d3(%rip),%rdx
2d41(7): mov 0x20b3d0(%rip),%rsi
2d48(5): mov %rcx,0x18(%rsp)
2d4d(5): call 0xffffec93(%rip)
2d52(2): test %eax,%eax
2d54(5): mov 0x18(%rsp),%rcx
2d59(3): fld (%rsp),%st0
2d5c(2): jnz 0x5c(%rip)
2d5e(2): jmp 0x4(%rip)
2d60(2): fstp %st0,%st0
2d62(3): cmp $0x0,(%rcx)
2d65(2): jnz 0x13(%rip)
2d67(2): mov %ebx,%eax
2d69(3): fstp %st0,0x0(%rbp)
2d6c(4): add $0x28,%rsp
2d70(1): pop %rbx
2d71(1): pop %rbp
2d72(1): ret near (%rsp)
2d73(5): nop 0x0(%rax,%rax,1)
2d78(2): fchs %st0
2d7a(2): jmp 0xffffffed(%rip)
2d7c(4): nop 0x0(%rax)
2d80(4): add $0x1,%rdi
2d84(3): mov $0x1,(%rcx)
2d87(3): test %rdi,%rdi
2d8a(3): mov %rdi,(%rsi)
2d8d(6): jnz 0xffffff2b(%rip)
2d93(2): xor %ebx,%ebx
2d95(2): fld1 %st0
2d97(2): jmp 0xffffffa0(%rip)
2d99(7): nop 0x0(%rax)
2da0(2): fstp %st0,%st0
2da2(2): fstp %st0,%st0
2da4(5): mov $0x2,%ebx
2da9(4): add $0x28,%rsp
2dad(2): mov %ebx,%eax
2daf(1): pop %rbx
2db0(1): pop %rbp
2db1(1): ret near (%rsp)
2db2(6): nop 0x0(%rax,%rax,1)
2db8(2): fstp %st0,%st0
2dba(5): mov $0x3,%ebx
2dbf(4): add $0x28,%rsp
2dc3(2): mov %ebx,%eax
2dc5(1): pop %rbx
2dc6(1): pop %rbp
2dc7(1): ret near (%rsp)

"unit_to_umax" :
2dd0(2): push %r12
2dd2(1): push %rbp
2dd3(1): push %rbx
2dd4(3): mov %rdi,%rbx
2dd7(4): sub $0x20,%rsp
2ddb(9): mov $0x28,%rax
2de4(5): mov %rax,0x18(%rsp)
2de9(2): xor %eax,%eax
2deb(5): call 0xffffecb5(%rip)
2df0(3): test %rax,%rax
2df3(9): mov $0x0,0x8(%rsp)
2dfc(2): jz 0x15(%rip)
2dfe(3): mov %rax,%rbp
2e01(4): lea 0xffffffff(%rax),%r12
2e05(5): movzx 0xffffffff(%rbx,%rax,1),%eax
2e0a(3): sub $0x30,%eax
2e0d(2): cmp $0x9,%al
2e0f(2): jnbe 0x79(%rip)
2e11(7): lea 0x668c(%rip),%r8
2e18(3): mov %rbx,%r9
2e1b(3): xor %r12d,%r12d
2e1e(5): lea 0x10(%rsp),%rcx
2e23(5): lea 0x8(%rsp),%rsi
2e28(5): mov $0xa,%edx
2e2d(3): mov %r9,%rdi
2e30(5): call 0x5ed0(%rip)
2e35(2): test %eax,%eax
2e37(6): jnz 0xca(%rip)
2e3d(5): mov 0x8(%rsp),%rax
2e42(3): cmp $0x0,(%rax)
2e45(6): jnz 0xbc(%rip)
2e4b(5): mov 0x10(%rsp),%rbp
2e50(3): test %rbp,%rbp
2e53(6): jz 0xae(%rip)
2e59(3): mov %r12,%rdi
2e5c(5): call 0xffffeb54(%rip)
2e61(5): mov 0x18(%rsp),%rdx
2e66(9): xor $0x28,%rdx
2e6f(3): mov %rbp,%rax
2e72(6): jnz 0xc9(%rip)
2e78(4): add $0x20,%rsp
2e7c(1): pop %rbx
2e7d(1): pop %rbp
2e7e(2): pop %r12
2e80(1): ret near (%rsp)
2e81(7): nop 0x0(%rax)
2e88(4): lea 0x2(%rbp),%rdi
2e8c(5): call 0x5504(%rip)
2e91(3): mov %rbp,%rdx
2e94(3): add %rax,%r12
2e97(3): mov %rbx,%rsi
2e9a(3): mov %rax,%rdi
2e9d(5): mov %r12,0x8(%rsp)
2ea2(5): call 0xffffed1e(%rip)
2ea7(5): cmp $0x69,(%r12)
2eac(3): mov %rax,%r9
2eaf(2): jnz 0x8(%rip)
2eb1(4): cmp $0x1,%rbp
2eb5(2): jnz 0x2b(%rip)
2eb7(5): lea 0x2(%r12),%rax
2ebc(7): lea 0x65ea(%rip),%r8
2ec3(5): mov %rax,0x8(%rsp)
2ec8(5): mov $0x42,%eax
2ecd(6): mov %ax,0x1(%r12)
2ed3(3): mov %r9,%r12
2ed6(5): jmp 0xffffff48(%rip)
2edb(5): nop 0x0(%rax,%rax,1)
2ee0(6): movzx 0xffffffff(%r12),%eax
2ee6(3): sub $0x30,%eax
2ee9(2): cmp $0x9,%al
2eeb(2): jbe 0xffffffcc(%rip)
2eed(5): mov $0x0,(%r12)
2ef2(7): lea 0x65ab(%rip),%r8
2ef9(3): mov %r9,%r12
2efc(5): jmp 0xffffff22(%rip)
2f01(3): mov %r12,%rdi
2f04(5): call 0xffffeaac(%rip)
2f09(3): mov %rbx,%rdi
2f0c(5): call 0x4e44(%rip)
2f11(7): lea 0x659f(%rip),%rsi
2f18(3): mov %rax,%rbx
2f1b(5): mov $0x5,%edx
2f20(2): xor %edi,%edi
2f22(5): call 0xffffeb5e(%rip)
2f27(3): mov %rbx,%rcx
2f2a(3): mov %rax,%rdx
2f2d(2): xor %esi,%esi
2f2f(5): mov $0x1,%edi
2f34(2): xor %eax,%eax
2f36(5): call 0xffffed4a(%rip)
2f3b(5): call 0xffffeb75(%rip)

"setup_padding_buffer.part.0" :
2f40(4): sub $0x8,%rsp
2f44(4): lea 0x1(%rdi),%rsi
2f48(7): mov 0x20b219(%rip),%rdi
2f4f(7): mov %rsi,0x20b20a(%rip)
2f56(5): call 0x549a(%rip)
2f5b(7): mov %rax,0x20b206(%rip)
2f62(4): add $0x8,%rsp
2f66(1): ret near (%rsp)

"process_field" :
2f70(2): push %r15
2f72(2): push %r14
2f74(2): push %r13
2f76(2): push %r12
2f78(3): mov %rsi,%r13
2f7b(1): push %rbp
2f7c(1): push %rbx
2f7d(3): mov %rdi,%r12
2f80(7): sub $0x168,%rsp
2f87(9): mov $0x28,%rax
2f90(8): mov %rax,0x158(%rsp)
2f98(2): xor %eax,%eax
2f9a(7): mov 0x20b357(%rip),%rax
2fa1(3): test %rax,%rax
2fa4(2): jnz 0x1b(%rip)
2fa6(2): jmp 0x6a(%rip)
2fa8(8): nop 0x0(%rax,%rax,1)
2fb0(3): cmp %rdx,%r13
2fb3(2): jb 0x8(%rip)
2fb5(4): cmp 0x8(%rax),%r13
2fb9(2): jbe 0x5d(%rip)
2fbb(4): add $0x10,%rax
2fbf(3): mov (%rax),%rdx
2fc2(4): cmp $0xffffffff,%rdx
2fc6(2): jnz 0xffffffea(%rip)
2fc8(7): mov 0x20b0f9(%rip),%rsi
2fcf(3): mov %r12,%rdi
2fd2(5): mov $0x1,%ebx
2fd7(5): call 0xffffeba9(%rip)
2fdc(8): mov 0x158(%rsp),%rcx
2fe4(9): xor $0x28,%rcx
2fed(2): mov %ebx,%eax
2fef(6): jnz 0x166d(%rip)
2ff5(7): add $0x168,%rsp
2ffc(1): pop %rbx
2ffd(1): pop %rbp
2ffe(2): pop %r12
3000(2): pop %r13
3002(2): pop %r14
3004(2): pop %r15
3006(1): ret near (%rsp)
3007(9): nop 0x0(%rax,%rax,1)
3010(4): cmp $0x1,%rsi
3014(2): jnz 0xffffffb4(%rip)
3016(7): mov 0x20b15b(%rip),%rbp
301d(3): test %rbp,%rbp
3020(2): jz 0x48(%rip)
3022(3): mov %r12,%rdi
3025(5): call 0xffffea7b(%rip)
302a(3): mov %rbp,%rdi
302d(3): mov %rax,%rbx
3030(5): call 0xffffea70(%rip)
3035(3): cmp %rax,%rbx
3038(2): jbe 0x30(%rip)
303a(3): sub %rax,%rbx
303d(3): mov %rbp,%rdi
3040(3): add %r12,%rbx
3043(3): mov %rbx,%rsi
3046(5): call 0xffffeb5a(%rip)
304b(2): test %eax,%eax
304d(7): movzx 0x20b0bc(%rip),%edx
3054(6): jnz 0x6dc(%rip)
305a(2): test %dl,%dl
305c(3): mov $0x0,(%rbx)
305f(6): jnz 0x815(%rip)
3065(3): nop (%rax)
3068(5): movzx (%r12),%ebx
306d(2): test %bl,%bl
306f(6): jz 0x7e8(%rip)
3075(5): call 0xffffecbb(%rip)
307a(3): mov %r12,%rbp
307d(3): mov (%rax),%rax
3080(2): jmp 0x14(%rip)
3082(6): nop 0x0(%rax,%rax,1)
3088(4): add $0x1,%rbp
308c(4): movzx 0x0(%rbp),%ebx
3090(2): test %bl,%bl
3092(2): jz 0x8(%rip)
3094(4): test $0x1,0x0(%rax,%rbx,2)
3098(2): jnz 0xfffffff0(%rip)
309a(3): mov %r12d,%eax
309d(2): sub %ebp,%eax
309f(7): mov 0x20b08a(%rip),%r11d
30a6(3): test %r11d,%r11d
30a9(6): jz 0x110(%rip)
30af(2): test %eax,%eax
30b1(6): jnz 0x21f(%rip)
30b7(4): cmp $0x1,%r13
30bb(6): jnle 0x215(%rip)
30c1(b): mov $0x0,0x20b08c(%rip)
30cc(7): movzx 0x20b03d(%rip),%eax
30d3(2): test %al,%al
30d5(6): jnz 0xc3(%rip)
30db(4): pxor %xmm2,%xmm2
30df(7): mov 0x20b0a2(%rip),%r13d
30e6(9): mov $0x0,0x60(%rsp)
30ef(6): mov $0x3e8,%r15d
30f5(5): movss %xmm2,(%rsp)
30fa(4): lea 0xfffffffd(%r13),%edx
30fe(3): fld (%rsp),%st0
3101(3): cmp $0x1,%edx
3104(4): fstp %st0,0x70(%rsp)
3108(2): jnbe 0x50(%rip)
310a(6): mov $0x400,%r15d
3110(2): test %al,%al
3112(2): jz 0x46(%rip)
3114(7): mov 0x20affd(%rip),%rsi
311b(5): mov $0x1,%edi
3120(5): call 0x4c10(%rip)
3125(3): mov %rbp,%rsi
3128(2): xor %edi,%edi
312a(3): mov %rax,%rbx
312d(5): call 0x4c03(%rip)
3132(7): mov 0x20afc7(%rip),%rdi
3139(7): lea 0x6818(%rip),%rdx
3140(3): mov %rax,%rcx
3143(6): mov $0x12,%r9d
3149(3): mov %rbx,%r8
314c(5): mov $0x1,%esi
3151(2): xor %eax,%eax
3153(5): call 0xffffeb8d(%rip)
3158(5): lea 0x5e(%rsp),%rcx
315d(5): lea 0x70(%rsp),%rdx
3162(5): lea 0x60(%rsp),%rsi
3167(3): mov %rbp,%rdi
316a(5): call 0xfffffb36(%rip)
316f(3): cmp $0x1,%eax
3172(2): mov %eax,%ebx
3174(6): jbe 0x1bc(%rip)
317a(3): cmp $0x6,%ebx
317d(6): jnbe 0x1a3(%rip)
3183(7): lea 0x7e96(%rip),%rcx
318a(2): mov %ebx,%edx
318c(4): movsxd 0x0(%rcx,%rdx,4),%rax
3190(3): add %rcx,%rax
3193(2): jmp %rax
3195(3): nop (%rax)
3198(7): mov 0x20afb9(%rip),%rcx
319f(7): mov 0x20af5a(%rip),%rdi
31a6(7): lea 0x6783(%rip),%rdx
31ad(5): mov $0x1,%esi
31b2(2): xor %eax,%eax
31b4(5): call 0xffffeb2c(%rip)
31b9(4): pxor %xmm1,%xmm1
31bd(7): mov 0x20afc4(%rip),%r13d
31c4(7): movzx 0x20af45(%rip),%eax
31cb(9): mov $0x0,0x60(%rsp)
31d4(6): mov $0x3e8,%r15d
31da(5): movss %xmm1,(%rsp)
31df(4): lea 0xfffffffd(%r13),%edx
31e3(3): fld (%rsp),%st0
31e6(3): cmp $0x1,%edx
31e9(4): fstp %st0,0x70(%rsp)
31ed(6): jnbe 0xffffff23(%rip)
31f3(6): mov $0x400,%r15d
31f9(5): jmp 0xffffff17(%rip)
31fe(2): nop 
3200(7): lea 0x6639(%rip),%r13
3207(3): xor %r14d,%r14d
320a(6): nop 0x0(%rax,%rax,1)
3210(7): cmp $0x3,0x20af69(%rip)
3217(2): jz 0x31(%rip)
3219(3): mov %rbp,%rdi
321c(5): call 0x4b34(%rip)
3221(5): mov $0x5,%edx
3226(3): mov %r13,%rsi
3229(2): xor %edi,%edi
322b(3): mov %rax,%rbp
322e(5): call 0xffffe852(%rip)
3233(6): mov 0x20ade3(%rip),%edi
3239(3): mov %rax,%rdx
323c(3): mov %rbp,%rcx
323f(2): xor %esi,%esi
3241(2): xor %eax,%eax
3243(5): call 0xffffea3d(%rip)
3248(7): mov 0x20ade1(%rip),%rax
324f(7): mov 0x20add2(%rip),%rdx
3256(4): fld 0x70(%rsp),%st0
325a(4): cmp $0x1,%rax
325e(6): jz 0x222(%rip)
3264(5): mov %rax,0x10(%rsp)
3269(3): test %rax,%rax
326c(4): fild 0x10(%rsp),%st0
3270(2): jns 0x8(%rip)
3272(6): fadd 0x7f44(%rip)
3278(2): fmulp %st0,%st1
327a(5): mov %rdx,0x10(%rsp)
327f(3): test %rdx,%rdx
3282(4): fild 0x10(%rsp),%st0
3286(2): js 0x3a(%rip)
3288(2): fdivp %st0,%st1
328a(3): cmp $0x1,%ebx
328d(6): jbe 0x203(%rip)
3293(2): fstp %st0,%st0
3295(2): jmp 0xb(%rip)
3297(2): fstp %st0,%st0
3299(7): nop 0x0(%rax)
32a0(7): mov 0x20ae21(%rip),%rsi
32a7(3): mov %r12,%rdi
32aa(2): xor %ebx,%ebx
32ac(5): call 0xffffe8d4(%rip)
32b1(5): jmp 0xfffffd2b(%rip)
32b6(a): nop 0x0(%rax,%rax,1)
32c0(6): fadd 0x7ef6(%rip)
32c6(2): jmp 0xffffffc2(%rip)
32c8(8): nop 0x0(%rax,%rax,1)
32d0(3): mov %r12,%rdi
32d3(5): call 0xffffe7cd(%rip)
32d8(7): cmp 0x20ae81(%rip),%rax
32df(7): mov %rax,0x20ae72(%rip)
32e6(6): jb 0xfffffde6(%rip)
32ec(3): mov %rax,%rdi
32ef(5): call 0xfffffc51(%rip)
32f4(5): jmp 0xfffffdd8(%rip)
32f9(3): xor %r14d,%r14d
32fc(7): lea 0x61dd(%rip),%r13
3303(5): jmp 0xffffff0d(%rip)
3308(3): xor %r14d,%r14d
330b(7): lea 0x658e(%rip),%r13
3312(5): jmp 0xfffffefe(%rip)
3317(9): nop 0x0(%rax,%rax,1)
3320(3): xor %r14d,%r14d
3323(3): xor %r13d,%r13d
3326(5): jmp 0xfffffeea(%rip)
332b(5): nop 0x0(%rax,%rax,1)
3330(7): movsxd 0x20addd(%rip),%r8
3337(5): mov 0x60(%rsp),%rcx
333c(3): xor %r14d,%r14d
333f(7): mov 0x20add2(%rip),%rsi
3346(3): mov %rcx,%rdi
3349(5): mov %rcx,0x10(%rsp)
334e(3): mov %r8,%rdx
3351(5): mov %r8,0x20(%rsp)
3356(5): call 0xffffe68a(%rip)
335b(2): test %eax,%eax
335d(5): mov 0x10(%rsp),%rcx
3362(5): mov 0x20(%rsp),%r8
3367(6): jz 0x3f9(%rip)
336d(7): cmp $0x0,0x20ad9c(%rip)
3374(6): jnz 0x42c(%rip)
337a(5): mov 0x60(%rsp),%rdx
337f(3): movzx (%rdx),%ecx
3382(5): mov %rdx,0x20(%rsp)
3387(2): test %cl,%cl
3389(4): mov %cl,0x10(%rsp)
338d(6): jz 0x2b3(%rip)
3393(5): call 0xffffe99d(%rip)
3398(5): mov 0x20(%rsp),%rdx
339d(3): mov (%rax),%rsi
33a0(5): movzx 0x10(%rsp),%ecx
33a5(3): mov %rdx,%rax
33a8(2): jmp 0x12(%rip)
33aa(6): nop 0x0(%rax,%rax,1)
33b0(5): mov %rax,0x60(%rsp)
33b5(5): movzx 0x1(%r9),%ecx
33ba(3): movzx %cl,%edx
33bd(3): mov %rax,%r9
33c0(4): lea 0x1(%rax),%rax
33c4(4): test $0x1,0x0(%rsi,%rdx,2)
33c8(2): jnz 0xffffffe8(%rip)
33ca(7): lea 0x60d3(%rip),%rdi
33d1(3): movsx %cl,%esi
33d4(5): mov %r9,0x20(%rsp)
33d9(4): mov %cl,0x10(%rsp)
33dd(5): call 0xffffe703(%rip)
33e2(3): test %rax,%rax
33e5(6): jz 0xe4d(%rip)
33eb(3): test %r13d,%r13d
33ee(6): jz 0x8f3(%rip)
33f4(5): movzx 0x10(%rsp),%ecx
33f9(3): xor %r8d,%r8d
33fc(5): mov 0x20(%rsp),%r9
3401(3): sub $0x45,%ecx
3404(3): cmp $0x15,%cl
3407(6): jbe 0x45a(%rip)
340d(4): lea 0x1(%r9),%rax
3411(4): cmp $0x1,%r13d
3415(5): mov %rax,0x60(%rsp)
341a(6): jz 0x4f4(%rip)
3420(4): cmp $0x4,%r13d
3424(2): jnz 0x16(%rip)
3426(5): cmp $0x69,0x1(%r9)
342b(6): jnz 0x12a9(%rip)
3431(4): lea 0x2(%r9),%rax
3435(5): mov %rax,0x60(%rsp)
343a(5): mov %r15d,0x10(%rsp)
343f(7): movzx 0x20acca(%rip),%edx
3446(4): fild 0x10(%rsp),%st0
344a(3): test %r8d,%r8d
344d(6): jz 0x1214(%rip)
3453(3): mov %r8d,%eax
3456(3): sub $0x1,%eax
3459(2): fld %st0,%st0
345b(2): jz 0x10(%rip)
345d(3): nop (%rax)
3460(3): sub $0x1,%eax
3463(2): fmul %st1
3465(2): jnz 0xfffffffb(%rip)
3467(2): fstp %st0,%st1
3469(2): jmp 0x7(%rip)
346b(2): fstp %st0,%st1
346d(3): nop (%rax)
3470(3): xor %r14d,%r14d
3473(5): jmp 0x1e3(%rip)
3478(8): nop 0x0(%rax,%rax,1)
3480(4): cmp $0x1,%rdx
3484(6): jnz 0xfffffde0(%rip)
348a(5): jmp 0xfffffe00(%rip)
348f(1): nop 
3490(6): fld 0x7d4a(%rip),%st0
3496(2): fxch %st1,%st0
3498(7): mov 0x20ab81(%rip),%rax
349f(4): cmp $0xffffffff,%rax
34a3(4): cmovne %rax,%r14
34a7(2): fucomi %st1,%st0
34a9(2): fstp %st0,%st1
34ab(6): jb 0xa5(%rip)
34b1(6): fld 0x7d39(%rip),%st0
34b7(2): fucomip %st1,%st0
34b9(6): jb 0x97(%rip)
34bf(2): fld %st0,%st0
34c1(2): xor %eax,%eax
34c3(6): fld 0x7ceb(%rip),%st0
34c9(2): jmp 0xc(%rip)
34cb(5): nop 0x0(%rax,%rax,1)
34d0(2): fdivp %st0,%st2
34d2(3): add $0x1,%eax
34d5(2): fld1 %st0
34d7(2): fld %st2,%st0
34d9(2): fxch %st1,%st0
34db(2): fucomip %st3,%st0
34dd(2): jbe 0x4(%rip)
34df(2): fchs %st0
34e1(2): fld %st1,%st0
34e3(2): fxch %st1,%st0
34e5(2): fucomip %st1,%st0
34e7(2): jnb 0xffffffe9(%rip)
34e9(2): fstp %st0,%st0
34eb(2): fstp %st0,%st0
34ed(2): fstp %st0,%st0
34ef(6): mov 0x20ac8f(%rip),%ebx
34f5(2): test %ebx,%ebx
34f7(6): jz 0x2fc(%rip)
34fd(3): cmp $0x1a,%eax
3500(2): jbe 0x64(%rip)
3502(7): cmp $0x3,0x20ac77(%rip)
3509(3): fstp %st0,(%rsp)
350c(6): jz 0xfffffd94(%rip)
3512(7): lea 0x65ef(%rip),%rsi
3519(5): mov $0x5,%edx
351e(2): xor %edi,%edi
3520(5): call 0xffffe560(%rip)
3525(3): fld (%rsp),%st0
3528(6): mov 0x20aaee(%rip),%edi
352e(4): sub $0x10,%rsp
3532(3): mov %rax,%rdx
3535(2): xor %esi,%esi
3537(2): xor %eax,%eax
3539(3): fstp %st0,(%rsp)
353c(5): call 0xffffe744(%rip)
3541(2): pop %r15
3543(1): pop %rax
3544(5): jmp 0xfffffd5c(%rip)
3549(7): nop 0x0(%rax)
3550(6): mov 0x20ac2e(%rip),%ebx
3556(2): test %ebx,%ebx
3558(2): jnz 0xc(%rip)
355a(4): cmp $0x12,%r14
355e(6): jnbe 0x2a4(%rip)
3564(7): mov 0x20ac05(%rip),%r13d
356b(7): mov 0x20aac6(%rip),%r15d
3572(8): mov $0x25,0x90(%rsp)
357a(3): test %r13d,%r13d
357d(6): jz 0xca3(%rip)
3583(8): lea 0x90(%rsp),%r12
358b(8): mov $0x27,0x91(%rsp)
3593(5): lea 0x2(%r12),%rbp
3598(7): mov 0x20abb1(%rip),%r9
359f(3): test %r9,%r9
35a2(6): jnz 0xd09(%rip)
35a8(7): movzx 0x20ab61(%rip),%edx
35af(2): test %dl,%dl
35b1(6): jnz 0xcc9(%rip)
35b7(2): test %ebx,%ebx
35b9(6): jnz 0x739(%rip)
35bf(3): test %r14d,%r14d
35c2(3): mov %r14d,%esi
35c5(6): jz 0xdbb(%rip)
35cb(3): mov %r14d,%eax
35ce(3): sub $0x1,%eax
35d1(6): jz 0x100c(%rip)
35d7(6): fld 0x7bd7(%rip),%st0
35dd(2): mov %eax,%ecx
35df(2): fld %st0,%st0
35e1(3): sub $0x1,%ecx
35e4(2): fmul %st1
35e6(2): jnz 0xfffffffb(%rip)
35e8(2): fmul %st2
35ea(4): fstcw 0x4e(%rsp)
35ee(5): movzx 0x4e(%rsp),%ecx
35f3(6): fld 0x7c07(%rip),%st0
35f9(3): or $0xc,%ch
35fc(4): cmp $0x4,%r15d
3600(5): mov %cx,0x4c(%rsp)
3605(2): fld %st1,%st0
3607(2): fdiv %st1
3609(4): fldcw 0x4c(%rsp)
360d(4): fistp %st0,0x10(%rsp)
3611(4): fldcw 0x4e(%rsp)
3615(4): fild 0x10(%rsp),%st0
3619(2): fmulp %st0,%st1
361b(2): fsub %st0,%st1
361d(6): jnbe 0x1104(%rip)
3623(2): fstp %st0,%st2
3625(2): fxch %st1,%st0
3627(7): lea 0x7a0e(%rip),%rcx
362e(4): movsxd 0x0(%rcx,%r15,4),%rax
3632(3): add %rcx,%rax
3635(2): jmp %rax
3637(9): nop 0x0(%rax,%rax,1)
3640(4): cmp $0x4,%r13d
3644(6): jz 0x68c(%rip)
364a(7): movzx 0x20aabf(%rip),%edx
3651(2): fld1 %st0
3653(3): xor %r8d,%r8d
3656(2): test %dl,%dl
3658(6): jnz 0x5f8(%rip)
365e(4): fld 0x70(%rsp),%st0
3662(2): fmulp %st0,%st1
3664(4): fstp %st0,0x70(%rsp)
3668(2): jmp 0x8(%rip)
366a(2): fstp %st0,%st0
366c(4): nop 0x0(%rax)
3670(5): mov 0x60(%rsp),%rsi
3675(3): test %rsi,%rsi
3678(2): jz 0x68(%rip)
367a(3): cmp $0x0,(%rsi)
367d(2): jz 0x63(%rip)
367f(7): cmp $0x3,0x20aafa(%rip)
3686(5): mov $0x5,%ebx
368b(6): jz 0xfffffbbd(%rip)
3691(5): mov $0x1,%edi
3696(5): call 0x469a(%rip)
369b(3): mov %rbp,%rsi
369e(2): xor %edi,%edi
36a0(3): mov %rax,%r13
36a3(5): call 0x468d(%rip)
36a8(7): lea 0x6379(%rip),%rsi
36af(2): xor %edi,%edi
36b1(5): mov $0x5,%edx
36b6(3): mov %rax,%rbp
36b9(5): call 0xffffe3c7(%rip)
36be(6): mov 0x20a958(%rip),%edi
36c4(3): mov %rax,%rdx
36c7(3): mov %r13,%r8
36ca(3): mov %rbp,%rcx
36cd(2): xor %esi,%esi
36cf(2): xor %eax,%eax
36d1(5): call 0xffffe5af(%rip)
36d6(5): jmp 0xfffffb72(%rip)
36db(5): nop 0x0(%rax,%rax,1)
36e0(3): cmp $0x1,%ebx
36e3(6): jnz 0x1037(%rip)
36e9(7): cmp $0x0,0x20aa30(%rip)
36f0(6): jz 0xfffffb58(%rip)
36f6(3): mov %rbp,%rdi
36f9(5): call 0x4657(%rip)
36fe(7): lea 0x6343(%rip),%rsi
3705(3): mov %rax,%rbp
3708(2): xor %edi,%edi
370a(5): mov $0x5,%edx
370f(5): call 0xffffe371(%rip)
3714(3): mov %rbp,%rcx
3717(3): mov %rax,%rdx
371a(2): xor %esi,%esi
371c(2): xor %edi,%edi
371e(2): xor %eax,%eax
3720(5): call 0xffffe560(%rip)
3725(5): jmp 0xfffffb23(%rip)
372a(6): nop 0x0(%rax,%rax,1)
3730(2): test %dl,%dl
3732(6): jz 0xfffff936(%rip)
3738(7): mov 0x20a9c1(%rip),%rcx
373f(7): lea 0x5de0(%rip),%rdi
3746(5): mov $0x16,%edx
374b(5): mov $0x1,%esi
3750(5): call 0xffffe580(%rip)
3755(5): jmp 0xfffff913(%rip)
375a(6): nop 0x0(%rax,%rax,1)
3760(4): lea 0x0(%rcx,%r8,1),%rdi
3764(3): fld (%rsp),%st0
3767(5): lea 0x5f(%rsp),%rcx
376c(8): lea 0x80(%rsp),%rdx
3774(5): lea 0x68(%rsp),%rsi
3779(7): fstp %st0,0x80(%rsp)
3780(5): mov %rdi,0x60(%rsp)
3785(5): call 0xfffff51b(%rip)
378a(3): cmp $0x1,%eax
378d(6): jbe 0x111(%rip)
3793(2): mov %eax,%ebx
3795(5): jmp 0xfffff9e5(%rip)
379a(6): nop 0x0(%rax,%rax,1)
37a0(7): mov 0x20a959(%rip),%rdi
37a7(4): push 0x78(%rsp)
37ab(7): lea 0x6206(%rip),%rdx
37b2(4): push 0x78(%rsp)
37b6(3): mov %r14d,%ecx
37b9(5): mov $0x1,%esi
37be(2): xor %eax,%eax
37c0(5): call 0xffffe520(%rip)
37c5(2): pop %r9
37c7(2): pop %r10
37c9(5): jmp 0xfffffbb1(%rip)
37ce(2): nop 
37d0(3): xor %r14d,%r14d
37d3(5): mov $0x3,%ebx
37d8(7): lea 0x5cee(%rip),%r13
37df(5): jmp 0xfffffa31(%rip)
37e4(3): xor %r14d,%r14d
37e7(7): lea 0x607a(%rip),%r13
37ee(5): jmp 0xfffffa22(%rip)
37f3(2): mov %eax,%edx
37f5(3): add %r14,%rdx
37f8(4): cmp $0x12,%rdx
37fc(6): jbe 0xfffffd01(%rip)
3802(7): cmp $0x3,0x20a977(%rip)
3809(6): jz 0xfffffa8e(%rip)
380f(3): test %r14,%r14
3812(6): mov 0x20a804(%rip),%ebx
3818(5): mov $0x5,%edx
381d(3): fstp %st0,(%rsp)
3820(6): jz 0xa2d(%rip)
3826(7): lea 0x624b(%rip),%rsi
382d(2): xor %edi,%edi
382f(5): call 0xffffe251(%rip)
3834(4): sub $0x10,%rsp
3838(3): mov %r14,%rcx
383b(3): mov %rax,%rdx
383e(4): fld 0x10(%rsp),%st0
3842(2): xor %esi,%esi
3844(2): mov %ebx,%edi
3846(2): xor %eax,%eax
3848(3): fstp %st0,(%rsp)
384b(5): call 0xffffe435(%rip)
3850(1): pop %rcx
3851(1): pop %rsi
3852(5): jmp 0xfffffa4e(%rip)
3857(3): mov %r12,%rbp
385a(2): xor %eax,%eax
385c(5): jmp 0xfffff843(%rip)
3861(7): lea 0x7898(%rip),%rax
3868(3): movzx %cl,%ecx
386b(4): mov 0x0(%rax,%rcx,4),%r8d
386f(5): jmp 0xfffffb9e(%rip)
3874(3): mov %rbp,%rdi
3877(5): call 0x44d9(%rip)
387c(7): mov 0x20a87d(%rip),%rdi
3883(7): lea 0x5c88(%rip),%rdx
388a(3): mov %rax,%rcx
388d(5): mov $0x1,%esi
3892(2): xor %eax,%eax
3894(5): call 0xffffe44c(%rip)
3899(5): jmp 0xfffff7cf(%rip)
389e(3): cmovne %ebx,%eax
38a1(5): cmp $0x0,0x5f(%rsp)
38a6(6): jnz 0xffffff2a(%rip)
38ac(5): mov 0x68(%rsp),%rcx
38b1(7): fld 0x80(%rsp),%st0
38b8(3): mov %rcx,%r14
38bb(5): sub 0x60(%rsp),%r14
38c0(3): test %r14d,%r14d
38c3(2): jz 0x21(%rip)
38c5(3): mov %r14d,%edx
38c8(3): sub $0x1,%edx
38cb(6): jz 0xd86(%rip)
38d1(6): fld 0x78dd(%rip),%st0
38d7(2): fld %st0,%st0
38d9(3): sub $0x1,%edx
38dc(2): fmul %st1
38de(2): jnz 0xfffffffb(%rip)
38e0(2): fstp %st0,%st1
38e2(2): fdivp %st0,%st1
38e4(2): fld %st0,%st0
38e6(7): fstp %st0,0x80(%rsp)
38ed(5): cmp $0x0,0x5e(%rsp)
38f2(4): fld 0x70(%rsp),%st0
38f6(6): jz 0xc40(%rip)
38fc(2): fsubrp %st0,%st1
38fe(4): fstp %st0,0x70(%rsp)
3902(5): mov %rcx,0x60(%rsp)
3907(2): mov %eax,%ebx
3909(5): jmp 0xfffffa64(%rip)
390e(5): cmp $0x69,0x1(%r9)
3913(7): movzx 0x20a7f6(%rip),%edx
391a(6): jz 0xbfe(%rip)
3920(5): mov %r15d,0x10(%rsp)
3925(4): fild 0x10(%rsp),%st0
3929(5): jmp 0xfffffb21(%rip)
392e(2): fxch %st1,%st0
3930(2): jmp 0x4(%rip)
3932(2): fxch %st1,%st0
3934(2): fld %st0,%st0
3936(4): fldcw 0x4c(%rsp)
393a(3): fistp %st0,(%rsp)
393d(4): fldcw 0x4e(%rsp)
3941(3): fild (%rsp),%st0
3944(2): fxch %st1,%st0
3946(2): fucomip %st1,%st0
3948(2): jbe 0x13(%rip)
394a(2): fstp %st0,%st0
394c(4): mov (%rsp),%rax
3950(4): add $0x1,%rax
3954(4): mov %rax,(%rsp)
3958(3): fild (%rsp),%st0
395b(2): test %esi,%esi
395d(2): faddp %st0,%st1
395f(2): jz 0x20(%rip)
3961(2): mov %esi,%eax
3963(6): fld 0x784b(%rip),%st0
3969(3): sub $0x1,%eax
396c(6): jz 0x2dd(%rip)
3972(2): fld %st0,%st0
3974(3): sub $0x1,%eax
3977(2): fmul %st1
3979(2): jnz 0xfffffffb(%rip)
397b(2): fstp %st0,%st1
397d(2): fdivp %st0,%st1
397f(2): test %dl,%dl
3981(3): mov %r14d,%r9d
3984(2): jz 0x57(%rip)
3986(2): fxch %st1,%st0
3988(4): fstp %st0,0x10(%rsp)
398c(7): lea 0x5f3d(%rip),%rax
3993(7): lea 0x5f6e(%rip),%rdx
399a(3): test %r13d,%r13d
399d(3): mov %r14d,%ecx
39a0(5): mov $0x1,%esi
39a5(5): mov %r14d,0x20(%rsp)
39aa(4): cmovne %rax,%rdx
39ae(4): sub $0x10,%rsp
39b2(7): mov 0x20a747(%rip),%rdi
39b9(2): xor %eax,%eax
39bb(2): fld %st0,%st0
39bd(3): fstp %st0,(%rsp)
39c0(4): fstp %st0,0x10(%rsp)
39c4(5): call 0xffffe31c(%rip)
39c9(2): pop %r13
39cb(2): pop %r14
39cd(5): mov 0x20(%rsp),%r9d
39d2(3): fld (%rsp),%st0
39d5(4): fld 0x10(%rsp),%st0
39d9(2): jmp 0x4(%rip)
39db(2): fxch %st1,%st0
39dd(7): mov $0x664c2a2e,0x0(%rbp)
39e4(4): mov $0x0,0x4(%rbp)
39e8(8): lea 0xd0(%rsp),%rbp
39f0(4): sub $0x10,%rsp
39f4(2): xor %eax,%eax
39f6(3): mov %r12,%r8
39f9(5): mov $0x80,%ecx
39fe(5): mov $0x1,%edx
3a03(5): mov $0x80,%esi
3a08(3): mov %rbp,%rdi
3a0b(4): fstp %st0,0x20(%rsp)
3a0f(2): fld %st0,%st0
3a11(3): fstp %st0,(%rsp)
3a14(4): fstp %st0,0x10(%rsp)
3a18(5): call 0xffffdf88(%rip)
3a1d(3): cmp $0x7f,%eax
3a20(2): pop %r11
3a22(1): pop %rbx
3a23(3): fld (%rsp),%st0
3a26(6): jnbe 0xcc2(%rip)
3a2c(2): fstp %st0,%st0
3a2e(7): movzx 0x20a6db(%rip),%ebx
3a35(4): fld 0x10(%rsp),%st0
3a39(7): mov 0x20a738(%rip),%rsi
3a40(3): test %rsi,%rsi
3a43(2): jz 0x57(%rip)
3a45(3): mov %rbp,%rdx
3a48(2): mov (%rdx),%ecx
3a4a(4): add $0x4,%rdx
3a4e(6): lea 0xfefefeff(%rcx),%eax
3a54(2): not %ecx
3a56(2): and %ecx,%eax
3a58(5): and $0x80808080,%eax
3a5d(2): jz 0xffffffeb(%rip)
3a5f(2): mov %eax,%ecx
3a61(3): shr $0x10,%ecx
3a64(5): test $0x8080,%eax
3a69(3): fstp %st0,(%rsp)
3a6c(3): cmove %ecx,%eax
3a6f(4): lea 0x2(%rdx),%rcx
3a73(2): mov %eax,%edi
3a75(4): cmove %rcx,%rdx
3a79(3): add %al,%dil
3a7c(3): mov %rbp,%rax
3a7f(4): sbb $0x3,%rdx
3a83(5): mov $0x80,%ecx
3a88(3): mov %rbp,%rdi
3a8b(3): sub %rdx,%rax
3a8e(4): lea 0x7f(%rax),%rdx
3a92(5): call 0xffffe25e(%rip)
3a97(3): fld (%rsp),%st0
3a9a(2): test %bl,%bl
3a9c(2): jz 0x39(%rip)
3a9e(3): mov %rbp,%rdi
3aa1(3): fstp %st0,(%rsp)
3aa4(5): call 0x42ac(%rip)
3aa9(7): lea 0x6128(%rip),%rdx
3ab0(4): sub $0x10,%rsp
3ab4(3): mov %rax,%rcx
3ab7(7): mov 0x20a642(%rip),%rdi
3abe(5): mov $0x1,%esi
3ac3(2): xor %eax,%eax
3ac5(4): fld 0x10(%rsp),%st0
3ac9(3): fstp %st0,(%rsp)
3acc(5): call 0xffffe214(%rip)
3ad1(1): pop %rax
3ad2(1): pop %rdx
3ad3(2): jmp 0x4(%rip)
3ad5(2): fstp %st0,%st0
3ad7(7): mov 0x20a67a(%rip),%rsi
3ade(3): mov %rbp,%rax
3ae1(2): mov (%rax),%ecx
3ae3(4): add $0x4,%rax
3ae7(6): lea 0xfefefeff(%rcx),%edx
3aed(2): not %ecx
3aef(2): and %ecx,%edx
3af1(6): and $0x80808080,%edx
3af7(2): jz 0xffffffea(%rip)
3af9(2): mov %edx,%ecx
3afb(3): shr $0x10,%ecx
3afe(6): test $0x8080,%edx
3b04(3): cmove %ecx,%edx
3b07(4): lea 0x2(%rax),%rcx
3b0b(2): mov %edx,%edi
3b0d(4): cmove %rcx,%rax
3b11(3): add %dl,%dil
3b14(7): mov 0x20a645(%rip),%rdx
3b1b(4): sbb $0x3,%rax
3b1f(3): sub %rbp,%rax
3b22(3): test %rsi,%rsi
3b25(2): jz 0xb(%rip)
3b27(3): cmp %rax,%rsi
3b2a(6): jnbe 0x905(%rip)
3b30(4): lea 0x1(%rax),%rdi
3b34(3): cmp %rdx,%rdi
3b37(2): jb 0x7(%rip)
3b39(5): call 0xfffff407(%rip)
3b3e(7): mov 0x20a623(%rip),%rdi
3b45(3): mov %rbp,%rsi
3b48(5): call 0xffffdeb8(%rip)
3b4d(7): mov 0x20a5ec(%rip),%rdi
3b54(7): mov 0x20a56d(%rip),%rsi
3b5b(3): test %rdi,%rdi
3b5e(2): jz 0xe(%rip)
3b60(5): call 0xffffe020(%rip)
3b65(7): mov 0x20a55c(%rip),%rsi
3b6c(7): mov 0x20a5f5(%rip),%rdi
3b73(5): mov $0x1,%ebx
3b78(5): call 0xffffe008(%rip)
3b7d(7): mov 0x20a5b4(%rip),%rdi
3b84(3): test %rdi,%rdi
3b87(6): jz 0xfffff455(%rip)
3b8d(7): mov 0x20a534(%rip),%rsi
3b94(5): call 0xffffdfec(%rip)
3b99(5): jmp 0xfffff443(%rip)
3b9e(2): fxch %st1,%st0
3ba0(2): jmp 0x4(%rip)
3ba2(2): fxch %st1,%st0
3ba4(4): fldcw 0x4c(%rsp)
3ba8(3): fistp %st0,(%rsp)
3bab(4): fldcw 0x4e(%rsp)
3baf(3): fild (%rsp),%st0
3bb2(5): jmp 0xfffffda9(%rip)
3bb7(2): fxch %st1,%st0
3bb9(2): jmp 0x4(%rip)
3bbb(2): fxch %st1,%st0
3bbd(2): fld1 %st0
3bbf(2): fucomip %st1,%st0
3bc1(6): jbe 0xfffffd73(%rip)
3bc7(2): fchs %st0
3bc9(2): fld %st0,%st0
3bcb(4): fldcw 0x4c(%rsp)
3bcf(4): fistp %st0,0x40(%rsp)
3bd3(4): fldcw 0x4e(%rsp)
3bd7(5): mov 0x40(%rsp),%rax
3bdc(2): xor %ecx,%ecx
3bde(4): mov %rax,(%rsp)
3be2(3): fild (%rsp),%st0
3be5(2): fxch %st1,%st0
3be7(2): fucomip %st1,%st0
3be9(2): fstp %st0,%st0
3beb(3): setnbe %cl
3bee(3): add %rcx,%rax
3bf1(3): neg %rax
3bf4(4): mov %rax,(%rsp)
3bf8(3): fild (%rsp),%st0
3bfb(5): jmp 0xfffffd60(%rip)
3c00(2): fxch %st1,%st0
3c02(2): jmp 0x4(%rip)
3c04(2): fxch %st1,%st0
3c06(2): fld1 %st0
3c08(2): fucomip %st1,%st0
3c0a(6): jnbe 0x9ba(%rip)
3c10(6): fadd 0x75aa(%rip)
3c16(4): fldcw 0x4c(%rsp)
3c1a(3): fistp %st0,(%rsp)
3c1d(4): fldcw 0x4e(%rsp)
3c21(3): fild (%rsp),%st0
3c24(5): jmp 0xfffffd37(%rip)
3c29(2): fxch %st1,%st0
3c2b(2): jmp 0x4(%rip)
3c2d(2): fxch %st1,%st0
3c2f(2): fchs %st0
3c31(2): fld %st0,%st0
3c33(4): fldcw 0x4c(%rsp)
3c37(4): fistp %st0,0x40(%rsp)
3c3b(4): fldcw 0x4e(%rsp)
3c3f(2): jmp 0xffffff98(%rip)
3c41(2): fstp %st0,%st0
3c43(2): fstp %st0,%st0
3c45(2): fld1 %st0
3c47(2): fxch %st1,%st0
3c49(2): fdivp %st0,%st1
3c4b(5): jmp 0xfffffd34(%rip)
3c50(4): sub $0x10,%rsp
3c54(7): mov 0x20a4a5(%rip),%rdi
3c5b(7): lea 0x58db(%rip),%rdx
3c62(2): fld %st0,%st0
3c64(3): fstp %st0,(%rsp)
3c67(2): xor %eax,%eax
3c69(3): mov %r15d,%ecx
3c6c(5): mov $0x1,%esi
3c71(4): fstp %st0,0x20(%rsp)
3c75(5): call 0xffffe06b(%rip)
3c7a(7): cmp $0x0,0x20a48f(%rip)
3c81(7): fld 0x80(%rsp),%st0
3c88(4): fld 0x20(%rsp),%st0
3c8c(2): fmulp %st0,%st1
3c8e(2): fld %st0,%st0
3c90(7): fstp %st0,0x80(%rsp)
3c97(1): pop %rdi
3c98(2): pop %r8
3c9a(6): jz 0xfffff9d0(%rip)
3ca0(4): sub $0x20,%rsp
3ca4(7): mov 0x20a455(%rip),%rdi
3cab(7): lea 0x58a7(%rip),%rdx
3cb2(2): fld %st0,%st0
3cb4(4): fstp %st0,0x10(%rsp)
3cb8(5): mov $0x1,%esi
3cbd(2): xor %eax,%eax
3cbf(3): fstp %st0,(%rsp)
3cc2(5): call 0xffffe01e(%rip)
3cc7(4): add $0x20,%rsp
3ccb(5): jmp 0xfffff9a5(%rip)
3cd0(5): mov $0x6,%ebx
3cd5(7): lea 0x5bc4(%rip),%r13
3cdc(5): jmp 0xfffff534(%rip)
3ce1(5): mov $0x4,%ebx
3ce6(7): lea 0x5b7b(%rip),%r13
3ced(5): jmp 0xfffff523(%rip)
3cf2(3): lea 0xfffffffd(%rbx),%eax
3cf5(3): cmp $0x1,%eax
3cf8(6): jnbe 0x66d(%rip)
3cfe(8): movsd 0x74c2(%rip),%xmm3
3d06(8): mov $0x400,0x20(%rsp)
3d0e(6): movsd %xmm3,0x10(%rsp)
3d14(6): fld 0x74c6(%rip),%st0
3d1a(2): fxch %st1,%st0
3d1c(2): fucomi %st1,%st0
3d1e(2): fstp %st0,%st1
3d20(6): jb 0x523(%rip)
3d26(6): fld 0x74c4(%rip),%st0
3d2c(2): fucomip %st1,%st0
3d2e(6): jb 0x515(%rip)
3d34(4): fild 0x20(%rsp),%st0
3d38(3): xor %r13d,%r13d
3d3b(2): fld %st1,%st0
3d3d(2): jmp 0x8(%rip)
3d3f(2): fdiv %st1
3d41(4): add $0x1,%r13d
3d45(2): fld1 %st0
3d47(2): fucomip %st1,%st0
3d49(2): fld %st0,%st0
3d4b(2): jbe 0x4(%rip)
3d4d(2): fchs %st0
3d4f(2): fucomip %st2,%st0
3d51(2): jnb 0xffffffee(%rip)
3d53(2): fstp %st0,%st1
3d55(2): test %dl,%dl
3d57(2): jz 0x4e(%rip)
3d59(2): fxch %st1,%st0
3d5b(4): fstp %st0,0x30(%rsp)
3d5f(4): sub $0x10,%rsp
3d63(7): mov 0x20a396(%rip),%rdi
3d6a(7): lea 0x5e0f(%rip),%rdx
3d71(3): mov %r13d,%ecx
3d74(5): mov $0x1,%esi
3d79(5): mov $0x1,%eax
3d7e(6): movsd 0x20(%rsp),%xmm0
3d84(2): fld %st0,%st0
3d86(3): fstp %st0,(%rsp)
3d89(4): fstp %st0,0x30(%rsp)
3d8d(5): call 0xffffdf53(%rip)
3d92(2): pop %r9
3d94(2): pop %r10
3d96(7): movzx 0x20a373(%rip),%edx
3d9d(4): fld 0x30(%rsp),%st0
3da1(4): fld 0x20(%rsp),%st0
3da5(7): mov 0x20a274(%rip),%rsi
3dac(4): cmp $0xffffffff,%rsi
3db0(4): fld 0x10(%rsp),%st0
3db4(6): jz 0x6e2(%rip)
3dba(5): lea 0x0(%r13,%r13,2),%eax
3dbf(3): cmp %rsi,%rax
3dc2(4): cmovnl %rsi,%rax
3dc6(2): test %eax,%eax
3dc8(2): mov %eax,%edi
3dca(6): jz 0x517(%rip)
3dd0(3): sub $0x1,%eax
3dd3(6): jz 0x8b0(%rip)
3dd9(6): fld 0x73d5(%rip),%st0
3ddf(2): mov %eax,%ecx
3de1(2): fld %st0,%st0
3de3(3): sub $0x1,%ecx
3de6(2): fmul %st1
3de8(2): jnz 0xfffffffb(%rip)
3dea(2): fmulp %st0,%st3
3dec(4): fstcw 0x4e(%rsp)
3df0(5): movzx 0x4e(%rsp),%ecx
3df5(6): fld 0x7405(%rip),%st0
3dfb(3): or $0xc,%ch
3dfe(4): cmp $0x4,%r15d
3e02(5): mov %cx,0x4c(%rsp)
3e07(2): fld %st3,%st0
3e09(2): fdiv %st1
3e0b(4): fldcw 0x4c(%rsp)
3e0f(4): fistp %st0,0x20(%rsp)
3e13(4): fldcw 0x4e(%rsp)
3e17(4): fild 0x20(%rsp),%st0
3e1b(2): fmulp %st0,%st1
3e1d(2): fsub %st0,%st3
3e1f(6): jnbe 0x93c(%rip)
3e25(7): lea 0x7224(%rip),%rcx
3e2c(4): movsxd 0x0(%rcx,%r15,4),%rax
3e30(3): add %rcx,%rax
3e33(2): jmp %rax
3e35(2): fstp %st0,%st3
3e37(2): fxch %st1,%st0
3e39(2): fxch %st2,%st0
3e3b(2): jmp 0xa(%rip)
3e3d(2): fstp %st0,%st1
3e3f(2): fxch %st1,%st0
3e41(2): fxch %st2,%st0
3e43(2): fxch %st1,%st0
3e45(2): fxch %st2,%st0
3e47(2): fxch %st1,%st0
3e49(5): mov $0x1,%edi
3e4e(2): jmp 0xa(%rip)
3e50(2): fstp %st0,%st1
3e52(2): fxch %st2,%st0
3e54(2): jmp 0x4(%rip)
3e56(2): fxch %st2,%st0
3e58(2): fld %st0,%st0
3e5a(4): fldcw 0x4c(%rsp)
3e5e(4): fistp %st0,0x20(%rsp)
3e62(4): fldcw 0x4e(%rsp)
3e66(4): fild 0x20(%rsp),%st0
3e6a(2): fxch %st1,%st0
3e6c(2): fucomip %st1,%st0
3e6e(2): jbe 0x16(%rip)
3e70(2): fstp %st0,%st0
3e72(5): mov 0x20(%rsp),%rax
3e77(4): add $0x1,%rax
3e7b(5): mov %rax,0x20(%rsp)
3e80(4): fild 0x20(%rsp),%st0
3e84(2): test %edi,%edi
3e86(2): faddp %st0,%st2
3e88(6): jnz 0x6b9(%rip)
3e8e(2): fld1 %st0
3e90(2): fdivp %st0,%st2
3e92(2): fld1 %st0
3e94(2): fucomip %st2,%st0
3e96(6): jnbe 0x56c(%rip)
3e9c(2): fxch %st1,%st0
3e9e(2): fucomi %st1,%st0
3ea0(2): jb 0x10(%rip)
3ea2(2): jmp 0x6(%rip)
3ea4(2): fstp %st0,%st0
3ea6(2): fxch %st1,%st0
3ea8(2): fdivrp %st0,%st1
3eaa(4): add $0x1,%r13d
3eae(2): jmp 0x4(%rip)
3eb0(2): fstp %st0,%st1
3eb2(2): fld1 %st0
3eb4(2): fxch %st1,%st0
3eb6(2): fucomi %st1,%st0
3eb8(2): fstp %st0,%st1
3eba(6): jp 0x647(%rip)
3ec0(6): jnz 0x641(%rip)
3ec6(3): xor %r9d,%r9d
3ec9(2): test %dl,%dl
3ecb(2): jz 0x56(%rip)
3ecd(2): fxch %st1,%st0
3ecf(4): fstp %st0,0x20(%rsp)
3ed3(5): mov %r9d,0x30(%rsp)
3ed8(4): sub $0x10,%rsp
3edc(7): mov 0x20a21d(%rip),%rdi
3ee3(7): lea 0x5cbe(%rip),%rdx
3eea(5): mov $0x1,%esi
3eef(3): mov %r13d,%ecx
3ef2(5): mov $0x1,%eax
3ef7(2): fld %st0,%st0
3ef9(3): fstp %st0,(%rsp)
3efc(6): movsd 0x20(%rsp),%xmm0
3f02(4): fstp %st0,0x10(%rsp)
3f06(5): call 0xffffddda(%rip)
3f0b(1): pop %rdi
3f0c(2): pop %r8
3f0e(7): mov 0x20a10b(%rip),%rsi
3f15(5): mov 0x30(%rsp),%r9d
3f1a(4): fld 0x20(%rsp),%st0
3f1e(3): fld (%rsp),%st0
3f21(4): cmp $0xffffffff,%rsi
3f25(5): mov $0x7325,%ecx
3f2a(7): mov $0x664c2a2e,0x0(%rbp)
3f31(4): cmovne %esi,%r9d
3f35(4): cmp $0x8,%r13d
3f39(4): mov %cx,0x4(%rbp)
3f3d(4): mov $0x0,0x6(%rbp)
3f41(6): jnbe 0x634(%rip)
3f47(7): lea 0x7116(%rip),%rdx
3f4e(3): mov %r13d,%eax
3f51(4): movsxd 0x0(%rdx,%rax,4),%rax
3f55(3): add %rdx,%rax
3f58(2): jmp %rax
3f5a(2): fxch %st1,%st0
3f5c(7): lea 0x55a1(%rip),%rax
3f63(4): fstp %st0,0x10(%rsp)
3f67(8): lea 0xd0(%rsp),%rbp
3f6f(4): sub $0x8,%rsp
3f73(3): mov %r12,%r8
3f76(5): mov $0x80,%ecx
3f7b(5): mov $0x1,%edx
3f80(5): mov $0x7f,%esi
3f85(1): push %rax
3f86(3): mov %rbp,%rdi
3f89(2): xor %eax,%eax
3f8b(4): sub $0x10,%rsp
3f8f(2): fld %st0,%st0
3f91(3): fstp %st0,(%rsp)
3f94(4): fstp %st0,0x20(%rsp)
3f98(5): call 0xffffda08(%rip)
3f9d(4): add $0x20,%rsp
3fa1(3): cmp $0x7e,%eax
3fa4(3): fld (%rsp),%st0
3fa7(4): fld 0x10(%rsp),%st0
3fab(6): jnbe 0x97(%rip)
3fb1(2): fstp %st0,%st1
3fb3(3): cmp $0x4,%ebx
3fb6(2): jnz 0xf(%rip)
3fb8(3): test %r13d,%r13d
3fbb(6): jnz 0x591(%rip)
3fc1(2): jmp 0x4(%rip)
3fc3(2): fstp %st0,%st1
3fc5(7): movzx 0x20a144(%rip),%ebx
3fcc(2): test %bl,%bl
3fce(6): jnz 0x3fd(%rip)
3fd4(7): mov 0x20a19d(%rip),%rsi
3fdb(3): test %rsi,%rsi
3fde(6): jnz 0xfffffa67(%rip)
3fe4(2): fstp %st0,%st0
3fe6(5): jmp 0xfffffaf1(%rip)
3feb(2): fxch %st1,%st0
3fed(4): fstp %st0,0x10(%rsp)
3ff1(7): lea 0x557e(%rip),%rax
3ff8(8): lea 0xd0(%rsp),%rbp
4000(4): sub $0x8,%rsp
4004(3): mov %r12,%r8
4007(5): mov $0x80,%ecx
400c(5): mov $0x1,%edx
4011(1): push %rax
4012(5): mov $0x7f,%esi
4017(2): xor %eax,%eax
4019(3): mov %rbp,%rdi
401c(4): sub $0x10,%rsp
4020(2): fld %st0,%st0
4022(3): fstp %st0,(%rsp)
4025(4): fstp %st0,0x20(%rsp)
4029(5): call 0xffffd977(%rip)
402e(4): add $0x20,%rsp
4032(3): cmp $0x7e,%eax
4035(3): fld (%rsp),%st0
4038(4): fld 0x10(%rsp),%st0
403c(2): jbe 0xffffff87(%rip)
403e(2): fstp %st0,%st0
4040(2): jmp 0x4(%rip)
4042(2): fstp %st0,%st0
4044(3): fstp %st0,(%rsp)
4047(7): lea 0x5b02(%rip),%rsi
404e(5): mov $0x5,%edx
4053(2): xor %edi,%edi
4055(5): call 0xffffda2b(%rip)
405a(4): sub $0x10,%rsp
405e(3): mov %rax,%rdx
4061(2): xor %esi,%esi
4063(5): mov $0x1,%edi
4068(2): xor %eax,%eax
406a(4): fld 0x10(%rsp),%st0
406e(3): fstp %st0,(%rsp)
4071(5): call 0xffffdc0f(%rip)
4076(a): nop 0x0(%rax,%rax,1)
4080(2): fxch %st1,%st0
4082(7): lea 0x5422(%rip),%rax
4089(5): jmp 0xfffffeda(%rip)
408e(2): fxch %st1,%st0
4090(7): lea 0x5479(%rip),%rax
4097(5): jmp 0xfffffecc(%rip)
409c(2): fxch %st1,%st0
409e(7): lea 0x5469(%rip),%rax
40a5(5): jmp 0xfffffebe(%rip)
40aa(2): fxch %st1,%st0
40ac(7): lea 0x5459(%rip),%rax
40b3(5): jmp 0xfffffeb0(%rip)
40b8(2): fxch %st1,%st0
40ba(7): lea 0x5449(%rip),%rax
40c1(5): jmp 0xfffffea2(%rip)
40c6(2): fxch %st1,%st0
40c8(7): lea 0x5439(%rip),%rax
40cf(5): jmp 0xfffffe94(%rip)
40d4(2): fxch %st1,%st0
40d6(7): lea 0x5429(%rip),%rax
40dd(5): jmp 0xfffffe86(%rip)
40e2(2): fstp %st0,%st3
40e4(2): fxch %st1,%st0
40e6(2): fxch %st2,%st0
40e8(2): jmp 0xa(%rip)
40ea(2): fstp %st0,%st1
40ec(2): fxch %st1,%st0
40ee(2): fxch %st2,%st0
40f0(2): fxch %st1,%st0
40f2(2): fxch %st1,%st0
40f4(2): fxch %st2,%st0
40f6(2): fxch %st1,%st0
40f8(5): mov $0x1,%edi
40fd(2): jmp 0x5(%rip)
40ff(1): nop 
4100(2): fstp %st0,%st1
4102(2): fld1 %st0
4104(2): fucomip %st3,%st0
4106(6): jnbe 0x52e(%rip)
410c(2): fxch %st2,%st0
410e(6): fadd 0x70ac(%rip)
4114(4): fldcw 0x4c(%rsp)
4118(4): fistp %st0,0x20(%rsp)
411c(4): fldcw 0x4e(%rsp)
4120(4): fild 0x20(%rsp),%st0
4124(5): jmp 0xfffffd60(%rip)
4129(2): fstp %st0,%st3
412b(2): fxch %st1,%st0
412d(2): fxch %st2,%st0
412f(2): jmp 0xa(%rip)
4131(2): fstp %st0,%st1
4133(2): fxch %st1,%st0
4135(2): fxch %st2,%st0
4137(2): fxch %st1,%st0
4139(2): fxch %st1,%st0
413b(2): fxch %st2,%st0
413d(2): fxch %st1,%st0
413f(5): mov $0x1,%edi
4144(2): jmp 0xe(%rip)
4146(a): nop 0x0(%rax,%rax,1)
4150(2): fstp %st0,%st1
4152(2): fld1 %st0
4154(2): fucomip %st3,%st0
4156(6): jbe 0xfffffd00(%rip)
415c(2): fxch %st2,%st0
415e(2): fchs %st0
4160(2): fld %st0,%st0
4162(4): fldcw 0x4c(%rsp)
4166(4): fistp %st0,0x40(%rsp)
416a(4): fldcw 0x4e(%rsp)
416e(5): mov 0x40(%rsp),%rax
4173(2): xor %ecx,%ecx
4175(5): mov %rax,0x20(%rsp)
417a(4): fild 0x20(%rsp),%st0
417e(2): fxch %st1,%st0
4180(2): fucomip %st1,%st0
4182(2): fstp %st0,%st0
4184(3): setnbe %cl
4187(3): add %rcx,%rax
418a(3): neg %rax
418d(5): mov %rax,0x20(%rsp)
4192(4): fild 0x20(%rsp),%st0
4196(5): jmp 0xfffffcee(%rip)
419b(2): fstp %st0,%st3
419d(2): fxch %st1,%st0
419f(2): fxch %st2,%st0
41a1(2): jmp 0xa(%rip)
41a3(2): fstp %st0,%st1
41a5(2): fxch %st1,%st0
41a7(2): fxch %st2,%st0
41a9(2): fxch %st1,%st0
41ab(2): fxch %st2,%st0
41ad(2): fxch %st1,%st0
41af(5): mov $0x1,%edi
41b4(2): jmp 0x10(%rip)
41b6(a): nop 0x0(%rax,%rax,1)
41c0(2): fstp %st0,%st1
41c2(2): fxch %st2,%st0
41c4(2): fchs %st0
41c6(2): fld %st0,%st0
41c8(4): fldcw 0x4c(%rsp)
41cc(4): fistp %st0,0x40(%rsp)
41d0(4): fldcw 0x4e(%rsp)
41d4(2): jmp 0xffffff9a(%rip)
41d6(2): fxch %st3,%st0
41d8(2): jmp 0x4(%rip)
41da(2): fxch %st3,%st0
41dc(4): fldcw 0x4c(%rsp)
41e0(4): fistp %st0,0x20(%rsp)
41e4(4): fldcw 0x4e(%rsp)
41e8(4): fild 0x20(%rsp),%st0
41ec(2): faddp %st0,%st3
41ee(2): mov %edi,%eax
41f0(3): sub $0x1,%eax
41f3(2): jz 0x1e(%rip)
41f5(2): fld %st0,%st0
41f7(3): sub $0x1,%eax
41fa(2): fmul %st1
41fc(2): jnz 0xfffffffb(%rip)
41fe(2): fstp %st0,%st1
4200(5): jmp 0xfffffc90(%rip)
4205(2): fstp %st0,%st0
4207(2): fstp %st0,%st2
4209(2): fxch %st1,%st0
420b(2): fld1 %st0
420d(2): fxch %st2,%st0
420f(2): fxch %st1,%st0
4211(5): jmp 0xfffffc7f(%rip)
4216(a): nop 0x0(%rax,%rax,1)
4220(8): lea 0x90(%rsp),%r12
4228(5): lea 0x1(%r12),%rbp
422d(5): jmp 0xfffff36b(%rip)
4232(5): mov $0x5,%ebx
4237(7): lea 0x52a2(%rip),%r13
423e(5): jmp 0xffffefd2(%rip)
4243(2): fld %st0,%st0
4245(3): xor %r13d,%r13d
4248(5): jmp 0xfffffb0d(%rip)
424d(7): lea 0x5874(%rip),%rsi
4254(2): xor %edi,%edi
4256(5): call 0xffffd82a(%rip)
425b(3): fld (%rsp),%st0
425e(3): mov %rax,%rdx
4261(4): sub $0x10,%rsp
4265(2): xor %eax,%eax
4267(2): xor %esi,%esi
4269(2): mov %ebx,%edi
426b(3): fstp %st0,(%rsp)
426e(5): call 0xffffda12(%rip)
4273(1): pop %rax
4274(1): pop %rdx
4275(5): jmp 0xfffff02b(%rip)
427a(4): fstp %st0,0x10(%rsp)
427e(7): mov 0x209e7b(%rip),%rcx
4285(7): lea 0x52f0(%rip),%rdi
428c(5): mov $0x11,%edx
4291(5): mov $0x1,%esi
4296(5): call 0xffffda3a(%rip)
429b(7): movzx 0x209e6e(%rip),%edx
42a2(4): fld 0x10(%rsp),%st0
42a6(5): jmp 0xfffff311(%rip)
42ab(4): fstp %st0,0x10(%rsp)
42af(7): lea 0x52c1(%rip),%r8
42b6(3): mov %rbp,%rdi
42b9(5): mov $0x3f,%ecx
42be(5): mov $0x1,%edx
42c3(5): mov $0x3e,%esi
42c8(2): xor %eax,%eax
42ca(5): call 0xffffd6d6(%rip)
42cf(2): cwde 
42d1(3): add %rax,%rbp
42d4(4): fld 0x10(%rsp),%st0
42d8(5): jmp 0xfffff2d0(%rip)
42dd(2): fstp %st0,%st0
42df(2): fstp %st0,%st0
42e1(6): fld 0x6f19(%rip),%st0
42e7(4): fstcw 0x4e(%rsp)
42eb(5): movzx 0x4e(%rsp),%eax
42f0(3): or $0xc,%ah
42f3(4): cmp $0x4,%r15d
42f7(5): mov %ax,0x4c(%rsp)
42fc(2): fld %st2,%st0
42fe(2): fdiv %st1
4300(4): fldcw 0x4c(%rsp)
4304(4): fistp %st0,0x20(%rsp)
4308(4): fldcw 0x4e(%rsp)
430c(4): fild 0x20(%rsp),%st0
4310(2): fmulp %st0,%st1
4312(2): fsub %st0,%st2
4314(6): jnbe 0x364(%rip)
431a(7): lea 0x6d67(%rip),%rcx
4321(4): movsxd 0x0(%rcx,%r15,4),%rax
4325(3): add %rcx,%rax
4328(2): jmp %rax
432a(2): fxch %st2,%st0
432c(4): fldcw 0x4c(%rsp)
4330(4): fistp %st0,0x20(%rsp)
4334(4): fldcw 0x4e(%rsp)
4338(4): fild 0x20(%rsp),%st0
433c(2): faddp %st0,%st2
433e(2): fld1 %st0
4340(5): jmp 0xfffffb50(%rip)
4345(2): xor %edi,%edi
4347(5): jmp 0xfffffe0b(%rip)
434c(2): fxch %st2,%st0
434e(2): xor %edi,%edi
4350(5): jmp 0xfffffe74(%rip)
4355(2): fxch %st2,%st0
4357(2): xor %edi,%edi
4359(5): jmp 0xfffffaff(%rip)
435e(2): xor %edi,%edi
4360(5): jmp 0xfffffda2(%rip)
4365(8): movsd 0x6e63(%rip),%xmm4
436d(8): mov $0x3e8,0x20(%rsp)
4375(6): movsd %xmm4,0x10(%rsp)
437b(5): jmp 0xfffff999(%rip)
4380(6): fld 0x6e7a(%rip),%st0
4386(4): fstcw 0x4e(%rsp)
438a(5): movzx 0x4e(%rsp),%eax
438f(3): or $0xc,%ah
4392(4): cmp $0x4,%r15d
4396(5): mov %ax,0x4c(%rsp)
439b(2): fld %st1,%st0
439d(2): fdiv %st1
439f(4): fldcw 0x4c(%rsp)
43a3(4): fistp %st0,0x10(%rsp)
43a7(4): fldcw 0x4e(%rsp)
43ab(4): fild 0x10(%rsp),%st0
43af(2): fmulp %st0,%st1
43b1(2): fld %st1,%st0
43b3(2): fsub %st1
43b5(6): jnbe 0x2b8(%rip)
43bb(7): lea 0x6cda(%rip),%rcx
43c2(4): movsxd 0x0(%rcx,%r15,4),%rax
43c6(3): add %rcx,%rax
43c9(2): jmp %rax
43cb(3): fstp %st0,(%rsp)
43ce(3): mov %rbp,%rdi
43d1(5): call 0x397f(%rip)
43d6(7): mov 0x209d23(%rip),%rdi
43dd(7): lea 0x51aa(%rip),%rdx
43e4(3): mov %rax,%rcx
43e7(5): mov $0x1,%esi
43ec(2): xor %eax,%eax
43ee(5): call 0xffffd8f2(%rip)
43f3(7): movzx 0x209d16(%rip),%ebx
43fa(3): fld (%rsp),%st0
43fd(5): jmp 0xfffff63c(%rip)
4402(2): fld %st1,%st0
4404(2): fchs %st0
4406(2): fucomi %st1,%st0
4408(6): jnb 0xfffffa9c(%rip)
440e(2): fstp %st0,%st1
4410(6): fld 0x6d9e(%rip),%st0
4416(3): test %r13d,%r13d
4419(3): setnz %al
441c(3): xor %r9d,%r9d
441f(2): fucomip %st1,%st0
4421(2): fstp %st0,%st0
4423(4): setnbe %r9b
4427(3): and %eax,%r9d
442a(5): jmp 0xfffffa9f(%rip)
442f(8): mov %rsi,0x80(%rsp)
4437(7): mov 0x209bda(%rip),%r8d
443e(8): lea 0x80(%rsp),%rcx
4446(7): mov 0x209d1b(%rip),%rsi
444d(6): mov $0x2,%r9d
4453(3): mov %rbp,%rdi
4456(5): call 0x177a(%rip)
445b(7): cmp $0x0,0x209cae(%rip)
4462(6): jz 0xfffff6eb(%rip)
4468(7): mov 0x209cf9(%rip),%rdi
446f(5): call 0x38e1(%rip)
4474(7): mov 0x209c85(%rip),%rdi
447b(7): lea 0x5123(%rip),%rdx
4482(3): mov %rax,%rcx
4485(5): mov $0x1,%esi
448a(2): xor %eax,%eax
448c(5): call 0xffffd854(%rip)
4491(5): jmp 0xfffff6bc(%rip)
4496(2): fld1 %st0
4498(2): fld %st2,%st0
449a(2): fxch %st1,%st0
449c(2): fucomip %st3,%st0
449e(2): jbe 0x4(%rip)
44a0(2): fchs %st0
44a2(6): fld 0x6d0c(%rip),%st0
44a8(2): fld %st0,%st0
44aa(2): fucomi %st2,%st0
44ac(2): fstp %st0,%st2
44ae(6): jbe 0xfffffe2f(%rip)
44b4(2): fxch %st3,%st0
44b6(2): fmulp %st0,%st1
44b8(4): fstcw 0x4e(%rsp)
44bc(5): movzx 0x4e(%rsp),%eax
44c1(6): fld 0x6d39(%rip),%st0
44c7(3): or $0xc,%ah
44ca(4): cmp $0x4,%r15d
44ce(5): mov %ax,0x4c(%rsp)
44d3(2): fld %st1,%st0
44d5(2): fdiv %st1
44d7(4): fldcw 0x4c(%rsp)
44db(4): fistp %st0,0x20(%rsp)
44df(4): fldcw 0x4e(%rsp)
44e3(4): fild 0x20(%rsp),%st0
44e7(2): fmulp %st0,%st1
44e9(2): fsub %st0,%st1
44eb(6): jnbe 0x243(%rip)
44f1(7): lea 0x6bb8(%rip),%rcx
44f8(4): movsxd 0x0(%rcx,%r15,4),%rax
44fc(3): add %rcx,%rax
44ff(2): jmp %rax
4501(2): fld1 %st0
4503(2): fucomip %st1,%st0
4505(2): fld %st0,%st0
4507(6): jbe 0xffffff09(%rip)
450d(2): fchs %st0
450f(5): jmp 0xffffff01(%rip)
4514(4): nop 0x0(%rax)
4518(4): lea 0x2(%r9),%rax
451c(2): test %dl,%dl
451e(5): mov %rax,0x60(%rsp)
4523(2): jnz 0x60(%rip)
4525(6): fld 0x6c8d(%rip),%st0
452b(6): mov $0x400,%r15d
4531(5): jmp 0xffffef19(%rip)
4536(2): faddp %st0,%st1
4538(4): fstp %st0,0x70(%rsp)
453c(5): jmp 0xfffff3c6(%rip)
4541(6): fld 0x6c6d(%rip),%st0
4547(5): jmp 0xfffffca7(%rip)
454c(3): fstp %st0,(%rsp)
454f(2): cwde 
4551(5): mov $0x7f,%edx
4556(7): lea 0x52d9(%rip),%rsi
455d(3): sub %rax,%rdx
4560(5): mov $0x80,%ecx
4565(3): mov %rbp,%rdi
4568(5): call 0xffffd788(%rip)
456d(3): fld (%rsp),%st0
4570(5): jmp 0xfffffa55(%rip)
4575(2): fxch %st1,%st0
4577(7): lea 0x4f7e(%rip),%rax
457e(5): jmp 0xfffff9e5(%rip)
4583(7): mov 0x209b76(%rip),%rdi
458a(7): lea 0x545f(%rip),%rdx
4591(5): mov $0x400,%ecx
4596(5): mov $0x1,%esi
459b(2): xor %eax,%eax
459d(5): mov %r8d,0x10(%rsp)
45a2(6): mov $0x400,%r15d
45a8(5): call 0xffffd738(%rip)
45ad(7): movzx 0x209b5c(%rip),%edx
45b4(6): fld 0x6bfe(%rip),%st0
45ba(5): mov 0x10(%rsp),%r8d
45bf(5): jmp 0xffffee8b(%rip)
45c4(6): fsub 0x6bf6(%rip)
45ca(4): fldcw 0x4c(%rsp)
45ce(3): fistp %st0,(%rsp)
45d1(4): fldcw 0x4e(%rsp)
45d5(3): fild (%rsp),%st0
45d8(5): jmp 0xfffff383(%rip)
45dd(6): fld 0x6bd1(%rip),%st0
45e3(4): fstcw 0x4e(%rsp)
45e7(5): movzx 0x4e(%rsp),%eax
45ec(2): fld %st1,%st0
45ee(2): fmul %st1
45f0(3): or $0xc,%ah
45f3(4): cmp $0x4,%r15d
45f7(5): mov %ax,0x4c(%rsp)
45fc(6): fld 0x6bfe(%rip),%st0
4602(2): fld %st1,%st0
4604(2): fdiv %st1
4606(4): fldcw 0x4c(%rsp)
460a(4): fistp %st0,0x10(%rsp)
460e(4): fldcw 0x4e(%rsp)
4612(4): fild 0x10(%rsp),%st0
4616(2): fmulp %st0,%st1
4618(2): fsub %st0,%st1
461a(6): jnbe 0xfffff627(%rip)
4620(2): fstp %st0,%st2
4622(2): fxch %st1,%st0
4624(7): lea 0x6a99(%rip),%rcx
462b(4): movsxd 0x0(%rcx,%r15,4),%rax
462f(3): add %rcx,%rax
4632(2): jmp %rax
4634(2): fxch %st2,%st0
4636(6): fsub 0x6b84(%rip)
463c(4): fldcw 0x4c(%rsp)
4640(4): fistp %st0,0x20(%rsp)
4644(4): fldcw 0x4e(%rsp)
4648(4): fild 0x20(%rsp),%st0
464c(5): jmp 0xfffff838(%rip)
4651(6): fdiv 0x6b5d(%rip)
4657(5): jmp 0xfffff28d(%rip)
465c(5): call 0xffffd454(%rip)
4661(2): fstp %st0,%st0
4663(3): xor %r14d,%r14d
4666(2): fld1 %st0
4668(5): jmp 0xffffefee(%rip)
466d(2): fstp %st0,%st0
466f(2): fstp %st0,%st0
4671(2): fld1 %st0
4673(5): jmp 0xfffff30c(%rip)
4678(2): fstp %st0,%st0
467a(2): fstp %st0,%st1
467c(2): fld1 %st0
467e(5): jmp 0xfffff820(%rip)
4683(6): fld 0x6b2b(%rip),%st0
4689(4): fstcw 0x4e(%rsp)
468d(5): movzx 0x4e(%rsp),%eax
4692(2): fmul %st0,%st2
4694(3): or $0xc,%ah
4697(4): cmp $0x4,%r15d
469b(5): mov %ax,0x4c(%rsp)
46a0(6): fld 0x6b5a(%rip),%st0
46a6(2): fld %st3,%st0
46a8(2): fdiv %st1
46aa(4): fldcw 0x4c(%rsp)
46ae(4): fistp %st0,0x20(%rsp)
46b2(4): fldcw 0x4e(%rsp)
46b6(4): fild 0x20(%rsp),%st0
46ba(2): fmulp %st0,%st1
46bc(2): fsub %st0,%st3
46be(6): jnbe 0xfffffb47(%rip)
46c4(7): lea 0x6a0d(%rip),%rcx
46cb(4): movsxd 0x0(%rcx,%r15,4),%rax
46cf(3): add %rcx,%rax
46d2(2): jmp %rax
46d4(3): xor %r14d,%r14d
46d7(5): mov $0x6,%ebx
46dc(7): lea 0x51bd(%rip),%r13
46e3(5): jmp 0xffffeb2d(%rip)
46e8(3): fstp %st0,(%rsp)
46eb(7): lea 0x545e(%rip),%rsi
46f2(5): mov $0x5,%edx
46f7(2): xor %edi,%edi
46f9(5): call 0xffffd387(%rip)
46fe(4): sub $0x10,%rsp
4702(3): mov %rax,%rdx
4705(2): xor %esi,%esi
4707(5): mov $0x1,%edi
470c(2): xor %eax,%eax
470e(4): fld 0x10(%rsp),%st0
4712(3): fstp %st0,(%rsp)
4715(5): call 0xffffd56b(%rip)
471a(2): xor %ebx,%ebx
471c(5): jmp 0xffffeb2c(%rip)
4721(2): fstp %st0,%st0
4723(2): fstp %st0,%st0
4725(2): fld1 %st0
4727(2): fxch %st1,%st0
4729(5): jmp 0xfffff249(%rip)
472e(2): fstp %st0,%st0
4730(2): fstp %st0,%st0
4732(2): fld1 %st0
4734(2): fxch %st2,%st0
4736(5): mov $0x1,%edi
473b(5): jmp 0xfffffab3(%rip)
4740(2): fxch %st1,%st0
4742(4): fldcw 0x4c(%rsp)
4746(4): fistp %st0,0x20(%rsp)
474a(4): fldcw 0x4e(%rsp)
474e(4): fild 0x20(%rsp),%st0
4752(2): faddp %st0,%st1
4754(2): fxch %st2,%st0
4756(5): jmp 0xfffff73a(%rip)
475b(2): fstp %st0,%st0
475d(2): fstp %st0,%st2
475f(2): fxch %st1,%st0
4761(2): fld1 %st0
4763(2): fxch %st2,%st0
4765(2): fxch %st1,%st0
4767(5): jmp 0xfffffa8e(%rip)

"process_line" :
4770(2): push %r15
4772(2): push %r14
4774(3): mov %esi,%r14d
4777(2): push %r13
4779(2): push %r12
477b(3): xor %r13d,%r13d
477e(1): push %rbp
477f(1): push %rbx
4780(6): mov $0x1,%r12d
4786(2): xor %ebp,%ebp
4788(4): sub $0x18,%rsp
478c(6): mov 0x209882(%rip),%eax
4792(6): nop 0x0(%rax,%rax,1)
4798(4): add $0x1,%rbp
479c(5): cmp $0x80,%eax
47a1(4): movzx (%rdi),%r15d
47a5(6): jz 0x8b(%rip)
47ab(4): movsx %r15b,%edx
47af(2): cmp %eax,%edx
47b1(6): jz 0x15f(%rip)
47b7(3): test %r15b,%r15b
47ba(2): jz 0x21(%rip)
47bc(3): mov %rdi,%rbx
47bf(2): jmp 0x11(%rip)
47c1(7): nop 0x0(%rax)
47c8(2): cmp %eax,%edx
47ca(6): jz 0xd7(%rip)
47d0(4): add $0x1,%rbx
47d4(3): movsx (%rbx),%edx
47d7(2): test %dl,%dl
47d9(2): jnz 0xffffffef(%rip)
47db(3): mov %rbp,%rsi
47de(5): call 0xffffe792(%rip)
47e3(2): test %al,%al
47e5(5): mov $0x0,%eax
47ea(4): cmove %eax,%r12d
47ee(3): test %r14b,%r14b
47f1(2): jz 0x28(%rip)
47f3(7): mov 0x2098ce(%rip),%rdi
47fa(7): movzx 0x20980f(%rip),%edx
4801(4): mov 0x28(%rdi),%rax
4805(4): cmp 0x30(%rdi),%rax
4809(6): jnb 0x120(%rip)
480f(4): lea 0x1(%rax),%rcx
4813(4): mov %rcx,0x28(%rdi)
4817(2): mov %dl,(%rax)
4819(4): add $0x18,%rsp
481d(3): mov %r12d,%eax
4820(1): pop %rbx
4821(1): pop %rbp
4822(2): pop %r12
4824(2): pop %r13
4826(2): pop %r14
4828(2): pop %r15
482a(1): ret near (%rsp)
482b(5): nop 0x0(%rax,%rax,1)
4830(3): test %r15b,%r15b
4833(2): jz 0xffffffa8(%rip)
4835(5): mov %rdi,0x8(%rsp)
483a(5): call 0xffffd4f6(%rip)
483f(5): mov 0x8(%rsp),%rdi
4844(3): mov (%rax),%rdx
4847(3): mov %rdi,%rbx
484a(6): nop 0x0(%rax,%rax,1)
4850(4): movzx %r15b,%eax
4854(4): test $0x1,0x0(%rdx,%rax,2)
4858(6): jnz 0x98(%rip)
485e(4): cmp $0xa,%r15b
4862(6): jz 0x8e(%rip)
4868(3): movzx (%rbx),%eax
486b(2): test %al,%al
486d(2): jnz 0x1e(%rip)
486f(5): jmp 0xffffff6c(%rip)
4874(4): nop 0x0(%rax)
4878(2): cmp $0xa,%al
487a(2): jz 0x1a(%rip)
487c(4): add $0x1,%rbx
4880(3): movzx (%rbx),%eax
4883(2): test %al,%al
4885(6): jz 0xffffff56(%rip)
488b(3): movzx %al,%ecx
488e(4): test $0x1,0x0(%rdx,%rcx,2)
4892(2): jz 0xffffffe6(%rip)
4894(4): movzx (%rbx),%r15d
4898(3): test %r15b,%r15b
489b(6): jz 0xffffff40(%rip)
48a1(3): mov %rbp,%rsi
48a4(3): mov $0x0,(%rbx)
48a7(5): call 0xffffe6c9(%rip)
48ac(2): test %al,%al
48ae(6): mov 0x209760(%rip),%eax
48b4(7): mov 0x20980d(%rip),%rdi
48bb(4): cmove %r13d,%r12d
48bf(5): mov $0x20,%esi
48c4(5): cmp $0x80,%eax
48c9(4): mov 0x28(%rdi),%rdx
48cd(3): cmovne %eax,%esi
48d0(4): cmp 0x30(%rdi),%rdx
48d4(2): jnb 0x44(%rip)
48d6(4): lea 0x1(%rdx),%rcx
48da(4): mov %rcx,0x28(%rdi)
48de(3): mov %sil,(%rdx)
48e1(4): lea 0x1(%rbx),%rdi
48e5(5): jmp 0xfffffeb3(%rip)
48ea(6): nop 0x0(%rax,%rax,1)
48f0(4): add $0x1,%rbx
48f4(4): movzx (%rbx),%r15d
48f8(3): test %r15b,%r15b
48fb(6): jnz 0xffffff55(%rip)
4901(5): jmp 0xfffffeda(%rip)
4906(a): nop 0x0(%rax,%rax,1)
4910(3): mov %rdi,%rbx
4913(2): jmp 0xffffff85(%rip)
4915(3): nop (%rax)
4918(4): movzx %sil,%esi
491c(5): call 0xffffd1d4(%rip)
4921(6): mov 0x2096ed(%rip),%eax
4927(2): jmp 0xffffffba(%rip)
4929(3): movzx %dl,%esi
492c(5): call 0xffffd1c4(%rip)
4931(5): jmp 0xfffffee8(%rip)

"usage" :
4940(2): push %r13
4942(2): push %r12
4944(5): mov $0x5,%edx
4949(1): push %rbp
494a(1): push %rbx
494b(2): mov %edi,%ebp
494d(7): sub $0x88,%rsp
4954(7): mov 0x209855(%rip),%rbx
495b(9): mov $0x28,%rax
4964(5): mov %rax,0x78(%rsp)
4969(2): xor %eax,%eax
496b(2): test %edi,%edi
496d(2): jz 0x30(%rip)
496f(7): lea 0x529a(%rip),%rsi
4976(2): xor %edi,%edi
4978(5): call 0xffffd108(%rip)
497d(7): mov 0x20977c(%rip),%rdi
4984(3): mov %rax,%rdx
4987(3): mov %rbx,%rcx
498a(5): mov $0x1,%esi
498f(2): xor %eax,%eax
4991(5): call 0xffffd34f(%rip)
4996(2): mov %ebp,%edi
4998(5): call 0xffffd328(%rip)
499d(7): lea 0x5294(%rip),%rsi
49a4(2): xor %edi,%edi
49a6(5): call 0xffffd0da(%rip)
49ab(3): mov %rbx,%rdx
49ae(3): mov %rax,%rsi
49b1(5): mov $0x1,%edi
49b6(2): xor %eax,%eax
49b8(5): call 0xffffd298(%rip)
49bd(7): mov 0x209704(%rip),%rbx
49c4(7): lea 0x5295(%rip),%rsi
49cb(5): mov $0x5,%edx
49d0(2): xor %edi,%edi
49d2(5): call 0xffffd0ae(%rip)
49d7(3): mov %rbx,%rsi
49da(3): mov %rax,%rdi
49dd(5): call 0xffffd1a3(%rip)
49e2(7): mov 0x2096df(%rip),%rbx
49e9(7): lea 0x52c0(%rip),%rsi
49f0(5): mov $0x5,%edx
49f5(2): xor %edi,%edi
49f7(5): call 0xffffd089(%rip)
49fc(3): mov %rbx,%rsi
49ff(3): mov %rax,%rdi
4a02(5): call 0xffffd17e(%rip)
4a07(7): mov 0x2096ba(%rip),%rbx
4a0e(7): lea 0x52eb(%rip),%rsi
4a15(5): mov $0x5,%edx
4a1a(2): xor %edi,%edi
4a1c(5): call 0xffffd064(%rip)
4a21(3): mov %rbx,%rsi
4a24(3): mov %rax,%rdi
4a27(5): call 0xffffd159(%rip)
4a2c(7): mov 0x209695(%rip),%rbx
4a33(7): lea 0x5306(%rip),%rsi
4a3a(5): mov $0x5,%edx
4a3f(2): xor %edi,%edi
4a41(5): call 0xffffd03f(%rip)
4a46(3): mov %rbx,%rsi
4a49(3): mov %rax,%rdi
4a4c(5): call 0xffffd134(%rip)
4a51(7): mov 0x209670(%rip),%rbx
4a58(7): lea 0x5329(%rip),%rsi
4a5f(5): mov $0x5,%edx
4a64(2): xor %edi,%edi
4a66(5): call 0xffffd01a(%rip)
4a6b(3): mov %rbx,%rsi
4a6e(3): mov %rax,%rdi
4a71(5): call 0xffffd10f(%rip)
4a76(7): mov 0x20964b(%rip),%rbx
4a7d(7): lea 0x537c(%rip),%rsi
4a84(5): mov $0x5,%edx
4a89(2): xor %edi,%edi
4a8b(5): call 0xffffcff5(%rip)
4a90(3): mov %rbx,%rsi
4a93(3): mov %rax,%rdi
4a96(5): call 0xffffd0ea(%rip)
4a9b(7): mov 0x209626(%rip),%rbx
4aa2(7): lea 0x53cf(%rip),%rsi
4aa9(5): mov $0x5,%edx
4aae(2): xor %edi,%edi
4ab0(5): call 0xffffcfd0(%rip)
4ab5(3): mov %rbx,%rsi
4ab8(3): mov %rax,%rdi
4abb(5): call 0xffffd0c5(%rip)
4ac0(7): mov 0x209601(%rip),%rbx
4ac7(7): lea 0x5422(%rip),%rsi
4ace(5): mov $0x5,%edx
4ad3(2): xor %edi,%edi
4ad5(5): call 0xffffcfab(%rip)
4ada(3): mov %rbx,%rsi
4add(3): mov %rax,%rdi
4ae0(5): call 0xffffd0a0(%rip)
4ae5(7): mov 0x2095dc(%rip),%rbx
4aec(7): lea 0x544d(%rip),%rsi
4af3(5): mov $0x5,%edx
4af8(2): xor %edi,%edi
4afa(5): call 0xffffcf86(%rip)
4aff(3): mov %rbx,%rsi
4b02(3): mov %rax,%rdi
4b05(5): call 0xffffd07b(%rip)
4b0a(7): mov 0x2095b7(%rip),%rbx
4b11(7): lea 0x54c8(%rip),%rsi
4b18(5): mov $0x5,%edx
4b1d(2): xor %edi,%edi
4b1f(5): call 0xffffcf61(%rip)
4b24(3): mov %rbx,%rsi
4b27(3): mov %rax,%rdi
4b2a(5): call 0xffffd056(%rip)
4b2f(7): mov 0x209592(%rip),%rbx
4b36(7): lea 0x552b(%rip),%rsi
4b3d(5): mov $0x5,%edx
4b42(2): xor %edi,%edi
4b44(5): call 0xffffcf3c(%rip)
4b49(3): mov %rbx,%rsi
4b4c(3): mov %rax,%rdi
4b4f(5): call 0xffffd031(%rip)
4b54(7): mov 0x20956d(%rip),%rbx
4b5b(7): lea 0x558e(%rip),%rsi
4b62(5): mov $0x5,%edx
4b67(2): xor %edi,%edi
4b69(5): call 0xffffcf17(%rip)
4b6e(3): mov %rbx,%rsi
4b71(3): mov %rax,%rdi
4b74(5): call 0xffffd00c(%rip)
4b79(7): mov 0x209548(%rip),%rbx
4b80(7): lea 0x56b1(%rip),%rsi
4b87(5): mov $0x5,%edx
4b8c(2): xor %edi,%edi
4b8e(5): call 0xffffcef2(%rip)
4b93(3): mov %rbx,%rsi
4b96(3): mov %rax,%rdi
4b99(5): call 0xffffcfe7(%rip)
4b9e(7): mov 0x209523(%rip),%rbx
4ba5(7): lea 0x572c(%rip),%rsi
4bac(5): mov $0x5,%edx
4bb1(2): xor %edi,%edi
4bb3(5): call 0xffffcecd(%rip)
4bb8(3): mov %rbx,%rsi
4bbb(3): mov %rax,%rdi
4bbe(5): call 0xffffcfc2(%rip)
4bc3(7): mov 0x2094fe(%rip),%rbx
4bca(7): lea 0x5787(%rip),%rsi
4bd1(5): mov $0x5,%edx
4bd6(2): xor %edi,%edi
4bd8(5): call 0xffffcea8(%rip)
4bdd(3): mov %rbx,%rsi
4be0(3): mov %rax,%rdi
4be3(5): call 0xffffcf9d(%rip)
4be8(7): mov 0x2094d9(%rip),%rbx
4bef(7): lea 0x57b2(%rip),%rsi
4bf6(5): mov $0x5,%edx
4bfb(2): xor %edi,%edi
4bfd(5): call 0xffffce83(%rip)
4c02(3): mov %rbx,%rsi
4c05(3): mov %rax,%rdi
4c08(5): call 0xffffcf78(%rip)
4c0d(7): mov 0x2094b4(%rip),%rbx
4c14(7): lea 0x57d5(%rip),%rsi
4c1b(5): mov $0x5,%edx
4c20(2): xor %edi,%edi
4c22(5): call 0xffffce5e(%rip)
4c27(3): mov %rbx,%rsi
4c2a(3): mov %rax,%rdi
4c2d(5): call 0xffffcf53(%rip)
4c32(7): mov 0x20948f(%rip),%rbx
4c39(7): lea 0x57f0(%rip),%rsi
4c40(5): mov $0x5,%edx
4c45(2): xor %edi,%edi
4c47(5): call 0xffffce39(%rip)
4c4c(3): mov %rbx,%rsi
4c4f(3): mov %rax,%rdi
4c52(5): call 0xffffcf2e(%rip)
4c57(7): mov 0x20946a(%rip),%rbx
4c5e(7): lea 0x57fb(%rip),%rsi
4c65(5): mov $0x5,%edx
4c6a(2): xor %edi,%edi
4c6c(5): call 0xffffce14(%rip)
4c71(3): mov %rbx,%rsi
4c74(3): mov %rax,%rdi
4c77(5): call 0xffffcf09(%rip)
4c7c(7): mov 0x209445(%rip),%rbx
4c83(7): lea 0x4937(%rip),%rsi
4c8a(5): mov $0x5,%edx
4c8f(2): xor %edi,%edi
4c91(5): call 0xffffcdef(%rip)
4c96(3): mov %rbx,%rsi
4c99(3): mov %rax,%rdi
4c9c(5): call 0xffffcee4(%rip)
4ca1(7): mov 0x209420(%rip),%rbx
4ca8(7): lea 0x57e9(%rip),%rsi
4caf(2): xor %edi,%edi
4cb1(5): mov $0x5,%edx
4cb6(5): call 0xffffcdca(%rip)
4cbb(3): mov %rbx,%rsi
4cbe(3): mov %rax,%rdi
4cc1(5): call 0xffffcebf(%rip)
4cc6(7): mov 0x2093fb(%rip),%rbx
4ccd(7): lea 0x580c(%rip),%rsi
4cd4(5): mov $0x5,%edx
4cd9(2): xor %edi,%edi
4cdb(5): call 0xffffcda5(%rip)
4ce0(3): mov %rbx,%rsi
4ce3(3): mov %rax,%rdi
4ce6(5): call 0xffffce9a(%rip)
4ceb(7): mov 0x2093d6(%rip),%rbx
4cf2(7): lea 0x588f(%rip),%rsi
4cf9(5): mov $0x5,%edx
4cfe(2): xor %edi,%edi
4d00(5): call 0xffffcd80(%rip)
4d05(3): mov %rbx,%rsi
4d08(3): mov %rax,%rdi
4d0b(5): call 0xffffce75(%rip)
4d10(7): mov 0x2093b1(%rip),%rbx
4d17(7): lea 0x58ea(%rip),%rsi
4d1e(5): mov $0x5,%edx
4d23(2): xor %edi,%edi
4d25(5): call 0xffffcd5b(%rip)
4d2a(3): mov %rbx,%rsi
4d2d(3): mov %rax,%rdi
4d30(5): call 0xffffce50(%rip)
4d35(7): mov 0x20938c(%rip),%rbx
4d3c(7): lea 0x5945(%rip),%rsi
4d43(5): mov $0x5,%edx
4d48(2): xor %edi,%edi
4d4a(5): call 0xffffcd36(%rip)
4d4f(3): mov %rbx,%rsi
4d52(3): mov %rax,%rdi
4d55(5): call 0xffffce2b(%rip)
4d5a(7): mov 0x209367(%rip),%rbx
4d61(7): lea 0x59a0(%rip),%rsi
4d68(5): mov $0x5,%edx
4d6d(2): xor %edi,%edi
4d6f(5): call 0xffffcd11(%rip)
4d74(3): mov %rbx,%rsi
4d77(3): mov %rax,%rdi
4d7a(5): call 0xffffce06(%rip)
4d7f(7): mov 0x209342(%rip),%rbx
4d86(7): lea 0x5a93(%rip),%rsi
4d8d(5): mov $0x5,%edx
4d92(2): xor %edi,%edi
4d94(5): call 0xffffccec(%rip)
4d99(3): mov %rbx,%rsi
4d9c(3): mov %rax,%rdi
4d9f(5): call 0xffffcde1(%rip)
4da4(7): mov 0x209405(%rip),%rbx
4dab(7): lea 0x5be6(%rip),%rsi
4db2(5): mov $0x5,%edx
4db7(2): xor %edi,%edi
4db9(5): call 0xffffccc7(%rip)
4dbe(3): mov %rbx,%rdx
4dc1(3): mov %rax,%rsi
4dc4(5): mov $0x1,%edi
4dc9(2): xor %eax,%eax
4dcb(5): call 0xffffce85(%rip)
4dd0(7): mov 0x2093d9(%rip),%rbx
4dd7(7): lea 0x5d5a(%rip),%rsi
4dde(5): mov $0x5,%edx
4de3(2): xor %edi,%edi
4de5(5): call 0xffffcc9b(%rip)
4dea(4): sub $0x8,%rsp
4dee(3): mov %rbx,%rcx
4df1(3): mov %rbx,%rdx
4df4(1): push %rbx
4df5(1): push %rbx
4df6(3): mov %rbx,%r9
4df9(1): push %rbx
4dfa(1): push %rbx
4dfb(3): mov %rbx,%r8
4dfe(1): push %rbx
4dff(3): mov %rax,%rsi
4e02(5): mov $0x1,%edi
4e07(2): xor %eax,%eax
4e09(7): lea 0x47aa(%rip),%rbx
4e10(5): call 0xffffce40(%rip)
4e15(7): lea 0x47b5(%rip),%rax
4e1c(7): lea 0x47ef(%rip),%rcx
4e23(c): mov $0x0,0x90(%rsp)
4e2f(c): mov $0x0,0x98(%rsp)
4e3b(5): mov %rax,0x30(%rsp)
4e40(7): lea 0x478c(%rip),%rax
4e47(5): mov %rcx,0x60(%rsp)
4e4c(7): lea 0x47c9(%rip),%rcx
4e53(5): mov %rax,0x38(%rsp)
4e58(7): lea 0x47ec(%rip),%rax
4e5f(5): mov %rcx,0x70(%rsp)
4e64(7): lea 0x47bb(%rip),%rcx
4e6b(5): mov %rax,0x40(%rsp)
4e70(7): lea 0x476c(%rip),%rax
4e77(8): mov %rcx,0x80(%rsp)
4e7f(5): mov %rax,0x48(%rsp)
4e84(7): lea 0x476e(%rip),%rax
4e8b(5): mov %rax,0x50(%rsp)
4e90(7): lea 0x476c(%rip),%rax
4e97(5): mov %rax,0x58(%rsp)
4e9c(5): mov %rax,0x68(%rsp)
4ea1(5): mov %rax,0x78(%rsp)
4ea6(8): mov %rax,0x88(%rsp)
4eae(4): add $0x30,%rsp
4eb2(3): mov %rsp,%rdx
4eb5(3): nop (%rax)
4eb8(4): add $0x10,%rdx
4ebc(3): mov (%rdx),%rdi
4ebf(3): test %rdi,%rdi
4ec2(2): jz 0x15(%rip)
4ec4(5): mov $0x7,%ecx
4ec9(3): mov %rbx,%rsi
4ecc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4ece(3): setnbe %al
4ed1(2): sbb $0x0,%al
4ed3(2): test %al,%al
4ed5(2): jnz 0xffffffe3(%rip)
4ed7(4): mov 0x8(%rdx),%r12
4edb(2): xor %edi,%edi
4edd(5): mov $0x5,%edx
4ee2(7): lea 0x4747(%rip),%rsi
4ee9(3): test %r12,%r12
4eec(6): jz 0xc7(%rip)
4ef2(5): call 0xffffcb8e(%rip)
4ef7(7): lea 0x5dfa(%rip),%rcx
4efe(7): lea 0x4742(%rip),%rdx
4f05(3): mov %rax,%rsi
4f08(5): mov $0x1,%edi
4f0d(2): xor %eax,%eax
4f0f(5): call 0xffffcd41(%rip)
4f14(2): xor %esi,%esi
4f16(5): mov $0x5,%edi
4f1b(5): call 0xffffcd25(%rip)
4f20(3): test %rax,%rax
4f23(2): jz 0x1e(%rip)
4f25(7): lea 0x4729(%rip),%rsi
4f2c(5): mov $0x3,%edx
4f31(3): mov %rax,%rdi
4f34(5): call 0xffffcaac(%rip)
4f39(2): test %eax,%eax
4f3b(6): jnz 0x10d(%rip)
4f41(7): lea 0x4711(%rip),%rsi
4f48(2): xor %edi,%edi
4f4a(5): mov $0x5,%edx
4f4f(5): call 0xffffcb31(%rip)
4f54(7): lea 0x465f(%rip),%rcx
4f5b(7): lea 0x5d96(%rip),%rdx
4f62(3): mov %rax,%rsi
4f65(5): mov $0x1,%edi
4f6a(2): xor %eax,%eax
4f6c(5): call 0xffffcce4(%rip)
4f71(3): cmp %rbx,%r12
4f74(7): lea 0x4672(%rip),%rcx
4f7b(7): lea 0x45f4(%rip),%rbx
4f82(4): cmove %rcx,%rbx
4f86(7): lea 0x5ddb(%rip),%rsi
4f8d(2): xor %edi,%edi
4f8f(5): mov $0x5,%edx
4f94(5): call 0xffffcaec(%rip)
4f99(3): mov %rbx,%rcx
4f9c(3): mov %rax,%rsi
4f9f(3): mov %r12,%rdx
4fa2(5): mov $0x1,%edi
4fa7(2): xor %eax,%eax
4fa9(5): call 0xffffcca7(%rip)
4fae(5): jmp 0xfffff9e8(%rip)
4fb3(5): call 0xffffcacd(%rip)
4fb8(7): lea 0x5d39(%rip),%rcx
4fbf(7): lea 0x4681(%rip),%rdx
4fc6(3): mov %rax,%rsi
4fc9(5): mov $0x1,%edi
4fce(2): xor %eax,%eax
4fd0(5): call 0xffffcc80(%rip)
4fd5(2): xor %esi,%esi
4fd7(5): mov $0x5,%edi
4fdc(5): call 0xffffcc64(%rip)
4fe1(3): test %rax,%rax
4fe4(2): jz 0x1a(%rip)
4fe6(7): lea 0x4668(%rip),%rsi
4fed(5): mov $0x3,%edx
4ff2(3): mov %rax,%rdi
4ff5(5): call 0xffffc9eb(%rip)
4ffa(2): test %eax,%eax
4ffc(2): jnz 0x45(%rip)
4ffe(7): lea 0x4654(%rip),%rsi
5005(5): mov $0x5,%edx
500a(2): xor %edi,%edi
500c(7): lea 0x45a7(%rip),%r12
5013(7): lea 0x45d3(%rip),%rbx
501a(5): call 0xffffca66(%rip)
501f(7): lea 0x4594(%rip),%rcx
5026(7): lea 0x5ccb(%rip),%rdx
502d(3): mov %rax,%rsi
5030(5): mov $0x1,%edi
5035(2): xor %eax,%eax
5037(5): call 0xffffcc19(%rip)
503c(5): jmp 0xffffff4a(%rip)
5041(7): lea 0x4572(%rip),%r12
5048(7): mov 0x209079(%rip),%r13
504f(7): lea 0x5cca(%rip),%rsi
5056(2): xor %edi,%edi
5058(5): mov $0x5,%edx
505d(5): call 0xffffca23(%rip)
5062(3): mov %r13,%rsi
5065(3): mov %rax,%rdi
5068(5): call 0xffffcb18(%rip)
506d(5): jmp 0xfffffed4(%rip)

"compare_ranges" :
5080(2): mov (%rsi),%eax
5082(2): cmp %eax,(%rdi)
5084(2): jl 0xc(%rip)
5086(3): setnle %al
5089(3): movzx %al,%eax
508c(1): ret near (%rsp)
508d(3): nop (%rax)
5090(5): mov $0xffffffff,%eax
5095(1): ret near (%rsp)

"add_range_pair" :
50a0(1): push %rbp
50a1(1): push %rbx
50a2(3): mov %rsi,%rbx
50a5(3): mov %rdi,%rbp
50a8(4): sub $0x8,%rsp
50ac(7): mov 0x20924d(%rip),%rsi
50b3(7): cmp 0x2090de(%rip),%rsi
50ba(7): mov 0x209237(%rip),%rdi
50c1(2): jz 0x2f(%rip)
50c3(3): mov %rsi,%rax
50c6(4): add $0x1,%rsi
50ca(4): shl/sal $0x4,%rax
50ce(3): add %rax,%rdi
50d1(3): mov %rbp,(%rdi)
50d4(4): mov %rbx,0x8(%rdi)
50d8(7): mov %rsi,0x209221(%rip)
50df(4): add $0x8,%rsp
50e3(1): pop %rbx
50e4(1): pop %rbp
50e5(1): ret near (%rsp)
50e6(a): nop 0x0(%rax,%rax,1)
50f0(3): test %rdi,%rdi
50f3(2): jz 0x45(%rip)
50f5(a): mov $0x384307168202282324,%rax
50ff(3): cmp %rax,%rsi
5102(2): jnbe 0x5b(%rip)
5104(3): mov %rsi,%rax
5107(3): shr $0x1,%rax
510a(5): lea 0x1(%rsi,%rax,1),%rsi
510f(7): mov %rsi,0x209082(%rip)
5116(4): shl/sal $0x4,%rsi
511a(5): call 0x32d6(%rip)
511f(7): mov 0x2091da(%rip),%rsi
5126(3): mov %rax,%rdi
5129(7): mov %rax,0x2091c8(%rip)
5130(2): jmp 0xffffff93(%rip)
5132(6): nop 0x0(%rax,%rax,1)
5138(3): test %rsi,%rsi
513b(5): mov $0x8,%eax
5140(5): mov $0x10,%edx
5145(4): cmove %rax,%rsi
5149(3): mov %rdx,%rax
514c(2): xor %ecx,%ecx
514e(3): mul %rax,%rsi,%rdx
5151(2): jo 0x11(%rip)
5153(3): test %rax,%rax
5156(2): js 0x7(%rip)
5158(3): test %rcx,%rcx
515b(2): jz 0xffffffb4(%rip)
515d(5): call 0x3483(%rip)
5162(5): mov $0x1,%ecx
5167(2): jmp 0xffffffec(%rip)

"set_fields" :
5170(2): push %r15
5172(2): push %r14
5174(2): mov %esi,%eax
5176(2): push %r13
5178(2): push %r12
517a(3): mov %rdi,%r14
517d(1): push %rbp
517e(1): push %rbx
517f(4): sub $0x28,%rsp
5183(3): and $0x1,%eax
5186(4): mov %esi,0x1c(%rsp)
518a(4): mov %eax,0x18(%rsp)
518e(2): jz 0x20(%rip)
5190(7): lea 0x62c3(%rip),%rdi
5197(5): mov $0x2,%ecx
519c(3): mov %r14,%rsi
519f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
51a1(3): setnbe %al
51a4(2): sbb $0x0,%al
51a6(2): test %al,%al
51a8(6): jz 0x301(%rip)
51ae(3): xor %r15d,%r15d
51b1(2): xor %ebx,%ebx
51b3(2): mov %ebx,%ebp
51b5(3): xor %r13d,%r13d
51b8(3): xor %r12d,%r12d
51bb(9): mov $0x1,0x10(%rsp)
51c4(5): jmp 0x8a(%rip)
51c9(7): nop 0x0(%rax)
51d0(4): cmp $0x2c,%r8b
51d4(5): mov %r8b,0x8(%rsp)
51d9(2): jz 0x1e(%rip)
51db(5): call 0xffffcb55(%rip)
51e0(5): movzx 0x8(%rsp),%edx
51e5(3): mov (%rax),%r10
51e8(5): test $0x1,0x0(%r10,%rdx,2)
51ed(2): jnz 0xa(%rip)
51ef(2): test %dl,%dl
51f1(6): jnz 0x23f(%rip)
51f7(3): test %bpl,%bpl
51fa(6): jz 0xa6(%rip)
5200(2): test %bl,%bl
5202(6): jnz 0x1ee(%rip)
5208(3): test %r12b,%r12b
520b(6): jnz 0x1f5(%rip)
5211(4): mov 0x18(%rsp),%eax
5215(2): test %eax,%eax
5217(6): jz 0x462(%rip)
521d(9): mov $0x1,0x10(%rsp)
5226(5): mov 0x10(%rsp),%rdi
522b(7): mov $0xffffffff,%rsi
5232(5): call 0xfffffe6e(%rip)
5237(4): cmp $0x0,(%r14)
523b(2): jz 0x7f(%rip)
523d(3): xor %r15d,%r15d
5240(3): xor %r13d,%r13d
5243(2): xor %ebp,%ebp
5245(3): xor %r12d,%r12d
5248(2): xor %ebx,%ebx
524a(4): add $0x1,%r14
524e(4): movzx (%r14),%r8d
5252(4): cmp $0x2d,%r8b
5256(6): jnz 0xffffff7a(%rip)
525c(3): test %bpl,%bpl
525f(6): jnz 0x38e(%rip)
5265(3): test %r15,%r15
5268(4): setz %r9b
526c(3): and %bl,%r9b
526f(3): mov %r9d,%r13d
5272(6): jnz 0x324(%rip)
5278(2): test %bl,%bl
527a(6): jnz 0x1a6(%rip)
5280(3): mov %ebx,%r13d
5283(3): xor %r15d,%r15d
5286(5): mov $0x1,%ebp
528b(9): mov $0x1,0x10(%rsp)
5294(2): jmp 0xffffffb6(%rip)
5296(a): nop 0x0(%rax,%rax,1)
52a0(3): test %r15,%r15
52a3(6): jz 0x2f3(%rip)
52a9(3): mov %r15,%rsi
52ac(3): mov %r15,%rdi
52af(5): call 0xfffffdf1(%rip)
52b4(4): cmp $0x0,(%r14)
52b8(2): jnz 0xffffff85(%rip)
52ba(7): mov 0x20903f(%rip),%rsi
52c1(3): test %rsi,%rsi
52c4(6): jz 0x3e9(%rip)
52ca(7): mov 0x209027(%rip),%rdi
52d1(7): lea 0xfffffda8(%rip),%rcx
52d8(5): mov $0x10,%edx
52dd(3): xor %r15d,%r15d
52e0(2): xor %ebp,%ebp
52e2(5): call 0xffffc73e(%rip)
52e7(7): mov 0x209012(%rip),%rbx
52ee(7): mov 0x209003(%rip),%rcx
52f5(3): cmp %rbx,%r15
52f8(6): jnb 0x95(%rip)
52fe(2): nop 
5300(4): add $0x1,%r15
5304(3): cmp %rbx,%r15
5307(2): jnb 0x79(%rip)
5309(3): mov %r15,%r13
530c(4): lea 0x0(%rcx,%rbp,1),%rdx
5310(4): shl/sal $0x4,%r13
5314(4): lea 0x0(%rcx,%r13,1),%rdi
5318(4): mov 0x8(%rdx),%rax
531c(3): cmp (%rdi),%rax
531f(2): jb 0x61(%rip)
5321(4): lea 0x20(%rbp),%r14
5325(2): jmp 0x1c(%rip)
5327(9): nop 0x0(%rax,%rax,1)
5330(4): lea 0x0(%rcx,%r13,1),%rdi
5334(4): lea 0x0(%rcx,%rbp,1),%rdx
5338(4): mov 0x8(%rdx),%rax
533c(3): cmp %rax,(%rdi)
533f(2): jnbe 0x41(%rip)
5341(4): cmp %rax,0x8(%rdi)
5345(4): lea 0x0(%rcx,%r14,1),%rsi
5349(5): cmovnb 0x8(%rdi),%rax
534e(3): sub %r15,%rbx
5351(4): shl/sal $0x4,%rbx
5355(4): mov %rax,0x8(%rdx)
5359(4): lea 0xfffffff0(%rbx),%rdx
535d(5): call 0xffffc913(%rip)
5362(7): mov 0x208f97(%rip),%rax
5369(7): mov 0x208f88(%rip),%rcx
5370(4): lea 0xffffffff(%rax),%rbx
5374(3): cmp %r15,%rbx
5377(7): mov %rbx,0x208f82(%rip)
537e(2): jnbe 0xffffffb2(%rip)
5380(4): add $0x10,%rbp
5384(3): cmp %rbx,%r15
5387(6): jb 0xffffff79(%rip)
538d(5): test $0x2,0x1c(%rsp)
5392(6): jnz 0x12b(%rip)
5398(4): add $0x1,%rbx
539c(3): mov %rcx,%rdi
539f(3): mov %rbx,%rsi
53a2(7): mov %rbx,0x208f57(%rip)
53a9(4): shl/sal $0x4,%rsi
53ad(5): call 0x3043(%rip)
53b2(7): mov 0x208f47(%rip),%rdx
53b9(7): mov %rax,0x208f38(%rip)
53c0(4): shl/sal $0x4,%rdx
53c4(5): lea 0xfffffff0(%rax,%rdx,1),%rax
53c9(7): mov $0xffffffff,%rdx
53d0(4): mov %rdx,0x8(%rax)
53d4(3): mov %rdx,(%rax)
53d7(4): add $0x28,%rsp
53db(1): pop %rbx
53dc(1): pop %rbp
53dd(2): pop %r12
53df(2): pop %r13
53e1(2): pop %r14
53e3(2): pop %r15
53e5(1): ret near (%rsp)
53e6(a): nop 0x0(%rax,%rax,1)
53f0(3): test %r12b,%r12b
53f3(6): jz 0xfffffe33(%rip)
53f9(7): nop 0x0(%rax)
5400(5): cmp %r15,0x10(%rsp)
5405(6): jnbe 0x1d3(%rip)
540b(5): mov 0x10(%rsp),%rdi
5410(3): mov %r15,%rsi
5413(5): call 0xfffffc8d(%rip)
5418(5): jmp 0xfffffe1f(%rip)
541d(3): nop (%rax)
5420(5): mov %r15,0x10(%rsp)
5425(2): mov %ebx,%ebp
5427(3): xor %r15d,%r15d
542a(5): jmp 0xfffffe20(%rip)
542f(1): nop 
5430(3): movsx %dl,%eax
5433(3): lea 0xffffffd0(%rax),%edx
5436(3): cmp $0x9,%edx
5439(6): jnbe 0x293(%rip)
543f(3): test %r13b,%r13b
5442(2): jz 0x5e(%rip)
5444(8): cmp $0x0,0x208d44(%rip)
544c(2): jz 0x54(%rip)
544e(3): test %bpl,%bpl
5451(5): mov $0x1,%edx
5456(a): mov $0x1844674407370955161,%rcx
5460(4): cmovne %ebp,%r12d
5464(3): cmove %edx,%ebx
5467(3): cmp %rcx,%r15
546a(6): jnbe 0x1a3(%rip)
5470(3): sub $0x30,%eax
5473(4): lea 0x0(%r15,%r15,4),%rdx
5477(2): cwde 
5479(4): lea 0x0(%rax,%rdx,2),%rax
547d(3): cmp %r15,%rax
5480(6): jb 0x18d(%rip)
5486(4): cmp $0xffffffff,%rax
548a(6): jz 0x183(%rip)
5490(3): mov %rax,%r15
5493(6): mov $0x1,%r13d
5499(5): jmp 0xfffffdb1(%rip)
549e(2): nop 
54a0(7): mov %r14,0x208ce9(%rip)
54a7(2): jmp 0xffffffa7(%rip)
54a9(4): add $0x1,%r14
54ad(6): mov $0x1,%r15d
54b3(5): mov $0x1,%ebx
54b8(5): jmp 0xfffffcfb(%rip)
54bd(3): mov (%rcx),%rax
54c0(b): mov $0x0,0x208e2d(%rip)
54cb(b): mov $0x0,0x208e2a(%rip)
54d6(b): mov $0x0,0x208cb7(%rip)
54e1(4): cmp $0x1,%rax
54e5(6): jnbe 0x94(%rip)
54eb(4): cmp $0x1,%rbx
54ef(2): jbe 0x46(%rip)
54f1(3): mov %rbx,%rax
54f4(4): lea 0x8(%rcx),%rbp
54f8(4): shl/sal $0x4,%rax
54fc(5): lea 0xfffffff8(%rcx,%rax,1),%r12
5501(7): nop 0x0(%rax)
5508(4): mov 0x0(%rbp),%rax
550c(4): lea 0x1(%rax),%rdi
5510(4): mov 0x8(%rbp),%rax
5514(3): cmp %rax,%rdi
5517(2): jz 0x15(%rip)
5519(4): lea 0xffffffff(%rax),%rsi
551d(5): mov %rcx,0x8(%rsp)
5522(5): call 0xfffffb7e(%rip)
5527(5): mov 0x8(%rsp),%rcx
552c(4): add $0x10,%rbp
5530(3): cmp %rbp,%r12
5533(2): jnz 0xffffffd5(%rip)
5535(4): shl/sal $0x4,%rbx
5539(5): mov 0xfffffff8(%rcx,%rbx,1),%rax
553e(4): cmp $0xffffffff,%rax
5542(2): jz 0x1c(%rip)
5544(4): lea 0x1(%rax),%rdi
5548(7): mov $0xffffffff,%rsi
554f(5): mov %rcx,0x8(%rsp)
5554(5): call 0xfffffb4c(%rip)
5559(5): mov 0x8(%rsp),%rcx
555e(3): mov %rcx,%rdi
5561(5): call 0xffffc44f(%rip)
5566(7): mov 0x208d93(%rip),%rbx
556d(7): mov 0x208d84(%rip),%rcx
5574(5): jmp 0xfffffe24(%rip)
5579(4): lea 0xffffffff(%rax),%rsi
557d(5): mov $0x1,%edi
5582(5): mov %rcx,0x8(%rsp)
5587(5): call 0xfffffb19(%rip)
558c(5): mov 0x8(%rsp),%rcx
5591(5): jmp 0xffffff5a(%rip)
5596(5): test $0x4,0x1c(%rsp)
559b(5): mov $0x5,%edx
55a0(2): jz 0x28(%rip)
55a2(7): lea 0x5d27(%rip),%rsi
55a9(2): xor %edi,%edi
55ab(5): call 0xffffc4d5(%rip)
55b0(3): mov %rax,%rdx
55b3(2): xor %edi,%edi
55b5(2): xor %esi,%esi
55b7(2): xor %eax,%eax
55b9(5): call 0xffffc6c7(%rip)
55be(5): mov $0x1,%edi
55c3(5): call 0xfffff37d(%rip)
55c8(7): lea 0x5c55(%rip),%rsi
55cf(2): xor %edi,%edi
55d1(5): call 0xffffc4af(%rip)
55d6(2): jmp 0xffffffda(%rip)
55d8(7): lea 0x5c60(%rip),%rsi
55df(5): mov $0x5,%edx
55e4(2): xor %edi,%edi
55e6(5): call 0xffffc49a(%rip)
55eb(2): jmp 0xffffffc5(%rip)
55ed(5): test $0x4,0x1c(%rsp)
55f2(5): mov $0x5,%edx
55f7(6): jz 0x93(%rip)
55fd(7): lea 0x5cac(%rip),%rsi
5604(2): xor %edi,%edi
5606(5): call 0xffffc47a(%rip)
560b(2): jmp 0xffffffa5(%rip)
560d(7): mov 0x208b7c(%rip),%rbx
5614(7): lea 0x5c3d(%rip),%rsi
561b(3): mov %rbx,%rdi
561e(5): call 0xffffc532(%rip)
5623(3): mov %rbx,%rdi
5626(3): mov %rax,%rsi
5629(5): call 0x2ff7(%rip)
562e(3): mov %rax,%rdi
5631(3): mov %rax,%rbx
5634(5): call 0x271c(%rip)
5639(5): test $0x4,0x1c(%rsp)
563e(3): mov %rax,%rbp
5641(5): mov $0x5,%edx
5646(2): jz 0x57(%rip)
5648(7): lea 0x5cd9(%rip),%rsi
564f(2): xor %edi,%edi
5651(5): call 0xffffc42f(%rip)
5656(3): mov %rax,%rdx
5659(3): mov %rbp,%rcx
565c(2): xor %esi,%esi
565e(2): xor %edi,%edi
5660(2): xor %eax,%eax
5662(5): call 0xffffc61e(%rip)
5667(3): mov %rbx,%rdi
566a(5): call 0xffffc346(%rip)
566f(5): mov $0x1,%edi
5674(5): call 0xfffff2cc(%rip)
5679(5): mov $0x5,%edx
567e(7): lea 0x5c7b(%rip),%rsi
5685(5): jmp 0xffffff5f(%rip)
568a(7): lea 0x5b7f(%rip),%rsi
5691(2): xor %edi,%edi
5693(5): call 0xffffc3ed(%rip)
5698(5): jmp 0xffffff18(%rip)
569d(7): lea 0x5bbf(%rip),%rsi
56a4(2): xor %edi,%edi
56a6(5): call 0xffffc3da(%rip)
56ab(2): jmp 0xffffffab(%rip)
56ad(5): test $0x4,0x1c(%rsp)
56b2(5): mov $0x5,%edx
56b7(2): jz 0x55(%rip)
56b9(7): lea 0x5cb8(%rip),%rsi
56c0(2): xor %edi,%edi
56c2(5): call 0xffffc3be(%rip)
56c7(5): jmp 0xfffffee9(%rip)
56cc(3): mov %r14,%rdi
56cf(5): call 0x2681(%rip)
56d4(5): test $0x4,0x1c(%rsp)
56d9(3): mov %rax,%rbx
56dc(5): mov $0x5,%edx
56e1(2): jz 0x37(%rip)
56e3(7): lea 0x5c66(%rip),%rsi
56ea(2): xor %edi,%edi
56ec(5): call 0xffffc394(%rip)
56f1(3): mov %rax,%rdx
56f4(2): xor %edi,%edi
56f6(3): mov %rbx,%rcx
56f9(2): xor %esi,%esi
56fb(2): xor %eax,%eax
56fd(5): call 0xffffc583(%rip)
5702(5): mov $0x1,%edi
5707(5): call 0xfffff239(%rip)
570c(7): lea 0x5b84(%rip),%rsi
5713(5): jmp 0xfffffed1(%rip)
5718(7): lea 0x5b61(%rip),%rsi
571f(2): xor %edi,%edi
5721(5): call 0xffffc35f(%rip)
5726(2): jmp 0xffffffcb(%rip)

"reset_fields" :
5730(4): sub $0x8,%rsp
5734(7): mov 0x208bbd(%rip),%rdi
573b(b): mov $0x0,0x208bba(%rip)
5746(b): mov $0x0,0x208a47(%rip)
5751(5): call 0xffffc25f(%rip)
5756(b): mov $0x0,0x208b97(%rip)
5761(4): add $0x8,%rsp
5765(1): ret near (%rsp)

"__argmatch_die" :
5770(5): mov $0x1,%edi
5775(5): jmp 0xfffff1cb(%rip)

"argmatch" :
5780(2): push %r15
5782(2): push %r14
5784(3): mov %rsi,%r15
5787(2): push %r13
5789(2): push %r12
578b(3): mov %rcx,%r13
578e(1): push %rbp
578f(1): push %rbx
5790(3): mov %rdx,%rbp
5793(4): sub $0x28,%rsp
5797(5): mov %rdi,0x8(%rsp)
579c(5): mov %rdx,0x18(%rsp)
57a1(5): call 0xffffc2ff(%rip)
57a6(3): mov (%r15),%r14
57a9(8): mov $0xffffffff,(%rsp)
57b1(3): test %r14,%r14
57b4(6): jz 0xb9(%rip)
57ba(3): mov %rax,%r12
57bd(5): mov $0x0,0x17(%rsp)
57c2(2): xor %ebx,%ebx
57c4(2): jmp 0x53(%rip)
57c6(a): nop 0x0(%rax,%rax,1)
57d0(5): mov 0x18(%rsp),%rax
57d5(3): test %rax,%rax
57d8(6): jz 0xa8(%rip)
57de(4): mov (%rsp),%rdi
57e2(3): mov %r13,%rdx
57e5(3): mov %rbp,%rsi
57e8(4): imul %r13,%rdi
57ec(3): add %rax,%rdi
57ef(5): call 0xffffc381(%rip)
57f4(2): test %eax,%eax
57f6(5): movzx 0x17(%rsp),%eax
57fb(5): mov $0x1,%ecx
5800(3): cmovne %ecx,%eax
5803(4): mov %al,0x17(%rsp)
5807(4): add $0x1,%rbx
580b(3): add %r13,%rbp
580e(4): mov 0x0(%r15,%rbx,8),%r14
5812(3): test %r14,%r14
5815(2): jz 0x43(%rip)
5817(5): mov 0x8(%rsp),%rsi
581c(3): mov %r12,%rdx
581f(3): mov %r14,%rdi
5822(5): call 0xffffc1be(%rip)
5827(2): test %eax,%eax
5829(2): jnz 0xffffffde(%rip)
582b(3): mov %r14,%rdi
582e(5): call 0xffffc272(%rip)
5833(3): cmp %r12,%rax
5836(2): jz 0x5a(%rip)
5838(5): cmp $0xffffffff,(%rsp)
583d(2): jnz 0xffffff93(%rip)
583f(4): mov %rbx,(%rsp)
5843(4): add $0x1,%rbx
5847(3): add %r13,%rbp
584a(4): mov 0x0(%r15,%rbx,8),%r14
584e(3): test %r14,%r14
5851(2): jnz 0xffffffc6(%rip)
5853(5): nop 0x0(%rax,%rax,1)
5858(5): cmp $0x0,0x17(%rsp)
585d(7): mov $0xfffffffe,%rax
5864(5): cmove (%rsp),%rax
5869(4): mov %rax,(%rsp)
586d(4): mov (%rsp),%rax
5871(4): add $0x28,%rsp
5875(1): pop %rbx
5876(1): pop %rbp
5877(2): pop %r12
5879(2): pop %r13
587b(2): pop %r14
587d(2): pop %r15
587f(1): ret near (%rsp)
5880(5): mov $0x1,0x17(%rsp)
5885(2): jmp 0xffffff82(%rip)
5887(9): nop 0x0(%rax,%rax,1)
5890(4): mov %rbx,(%rsp)
5894(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
58a0(4): cmp $0xffffffff,%rdx
58a4(2): push %r12
58a6(5): mov $0x5,%edx
58ab(1): push %rbp
58ac(3): mov %rsi,%r12
58af(1): push %rbx
58b0(3): mov %rdi,%rbp
58b3(2): jz 0x4d(%rip)
58b5(7): lea 0x5b05(%rip),%rsi
58bc(2): xor %edi,%edi
58be(5): call 0xffffc1c2(%rip)
58c3(3): mov %rax,%rbx
58c6(3): mov %rbp,%rsi
58c9(5): mov $0x1,%edi
58ce(5): call 0x2462(%rip)
58d3(3): mov %r12,%rdx
58d6(3): mov %rax,%rbp
58d9(5): mov $0x8,%esi
58de(2): xor %edi,%edi
58e0(5): call 0x2080(%rip)
58e5(3): mov %rbp,%r8
58e8(3): mov %rbx,%rdx
58eb(3): mov %rax,%rcx
58ee(1): pop %rbx
58ef(1): pop %rbp
58f0(2): pop %r12
58f2(2): xor %esi,%esi
58f4(2): xor %edi,%edi
58f6(2): xor %eax,%eax
58f8(5): jmp 0xffffc388(%rip)
58fd(3): nop (%rax)
5900(7): lea 0x5a9f(%rip),%rsi
5907(2): xor %edi,%edi
5909(5): call 0xffffc177(%rip)
590e(3): mov %rax,%rbx
5911(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
5920(2): push %r15
5922(2): push %r14
5924(3): mov %rdi,%r14
5927(2): push %r13
5929(2): push %r12
592b(2): xor %edi,%edi
592d(1): push %rbp
592e(1): push %rbx
592f(3): mov %rsi,%rbp
5932(7): lea 0x5aa5(%rip),%rsi
5939(3): mov %rdx,%r12
593c(5): mov $0x5,%edx
5941(4): sub $0x8,%rsp
5945(7): mov 0x2087b4(%rip),%rbx
594c(5): call 0xffffc134(%rip)
5951(3): mov %rax,%rdi
5954(3): mov %rbx,%rsi
5957(5): call 0xffffc229(%rip)
595c(3): mov (%r14),%r15
595f(3): test %r15,%r15
5962(6): jz 0x96(%rip)
5968(3): xor %r13d,%r13d
596b(2): xor %ebx,%ebx
596d(2): jmp 0x3b(%rip)
596f(1): nop 
5970(3): mov %r15,%rdi
5973(4): add $0x1,%rbx
5977(3): mov %rbp,%r13
597a(5): call 0x23d6(%rip)
597f(7): mov 0x20877a(%rip),%rdi
5986(7): lea 0x5a66(%rip),%rdx
598d(3): mov %rax,%rcx
5990(5): mov $0x1,%esi
5995(2): xor %eax,%eax
5997(3): add %r12,%rbp
599a(5): call 0xffffc346(%rip)
599f(4): mov 0x0(%r14,%rbx,8),%r15
59a3(3): test %r15,%r15
59a6(2): jz 0x52(%rip)
59a8(3): test %rbx,%rbx
59ab(2): jz 0xffffffc5(%rip)
59ad(3): mov %r12,%rdx
59b0(3): mov %rbp,%rsi
59b3(3): mov %r13,%rdi
59b6(5): call 0xffffc1ba(%rip)
59bb(2): test %eax,%eax
59bd(2): jnz 0xffffffb3(%rip)
59bf(3): mov %r15,%rdi
59c2(4): add $0x1,%rbx
59c6(3): add %r12,%rbp
59c9(5): call 0x2387(%rip)
59ce(7): mov 0x20872b(%rip),%rdi
59d5(7): lea 0x5a1f(%rip),%rdx
59dc(3): mov %rax,%rcx
59df(5): mov $0x1,%esi
59e4(2): xor %eax,%eax
59e6(5): call 0xffffc2fa(%rip)
59eb(4): mov 0x0(%r14,%rbx,8),%r15
59ef(3): test %r15,%r15
59f2(2): jnz 0xffffffb6(%rip)
59f4(4): nop 0x0(%rax)
59f8(7): mov 0x208701(%rip),%rdi
59ff(4): mov 0x28(%rdi),%rax
5a03(4): cmp 0x30(%rdi),%rax
5a07(2): jnb 0x21(%rip)
5a09(4): lea 0x1(%rax),%rdx
5a0d(4): mov %rdx,0x28(%rdi)
5a11(3): mov $0xa,(%rax)
5a14(4): add $0x8,%rsp
5a18(1): pop %rbx
5a19(1): pop %rbp
5a1a(2): pop %r12
5a1c(2): pop %r13
5a1e(2): pop %r14
5a20(2): pop %r15
5a22(1): ret near (%rsp)
5a23(5): nop 0x0(%rax,%rax,1)
5a28(4): add $0x8,%rsp
5a2c(5): mov $0xa,%esi
5a31(1): pop %rbx
5a32(1): pop %rbp
5a33(2): pop %r12
5a35(2): pop %r13
5a37(2): pop %r14
5a39(2): pop %r15
5a3b(5): jmp 0xffffc0b5(%rip)

"__xargmatch_internal" :
5a40(2): push %r15
5a42(2): push %r14
5a44(3): mov %rdi,%r14
5a47(2): push %r13
5a49(2): push %r12
5a4b(3): mov %rsi,%r12
5a4e(1): push %rbp
5a4f(1): push %rbx
5a50(3): mov %rcx,%rbp
5a53(3): mov %rdx,%rbx
5a56(3): mov %r8,%rcx
5a59(3): mov %rbp,%rdx
5a5c(4): sub $0x8,%rsp
5a60(3): mov %rbx,%rsi
5a63(3): mov %r12,%rdi
5a66(3): mov %r8,%r15
5a69(3): mov %r9,%r13
5a6c(5): call 0xfffffd14(%rip)
5a71(3): test %rax,%rax
5a74(2): js 0x11(%rip)
5a76(4): add $0x8,%rsp
5a7a(1): pop %rbx
5a7b(1): pop %rbp
5a7c(2): pop %r12
5a7e(2): pop %r13
5a80(2): pop %r14
5a82(2): pop %r15
5a84(1): ret near (%rsp)
5a85(3): mov %rax,%rdx
5a88(3): mov %r12,%rsi
5a8b(3): mov %r14,%rdi
5a8e(5): call 0xfffffe12(%rip)
5a93(3): mov %r15,%rdx
5a96(3): mov %rbp,%rsi
5a99(3): mov %rbx,%rdi
5a9c(5): call 0xfffffe84(%rip)
5aa1(3): call %r13
5aa4(7): mov $0xffffffff,%rax
5aab(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
5ab0(2): push %r14
5ab2(2): push %r13
5ab4(2): push %r12
5ab6(1): push %rbp
5ab7(1): push %rbx
5ab8(3): mov (%rsi),%r14
5abb(3): test %r14,%r14
5abe(2): jz 0x33(%rip)
5ac0(3): mov %rcx,%r12
5ac3(3): mov %rdi,%r13
5ac6(3): mov %rdx,%rbp
5ac9(4): lea 0x8(%rsi),%rbx
5acd(2): jmp 0x12(%rip)
5acf(1): nop 
5ad0(3): mov (%rbx),%r14
5ad3(3): add %r12,%rbp
5ad6(4): add $0x8,%rbx
5ada(3): test %r14,%r14
5add(2): jz 0x14(%rip)
5adf(3): mov %r12,%rdx
5ae2(3): mov %rbp,%rsi
5ae5(3): mov %r13,%rdi
5ae8(5): call 0xffffc088(%rip)
5aed(2): test %eax,%eax
5aef(2): jnz 0xffffffe1(%rip)
5af1(1): pop %rbx
5af2(3): mov %r14,%rax
5af5(1): pop %rbp
5af6(2): pop %r12
5af8(2): pop %r13
5afa(2): pop %r14
5afc(1): ret near (%rsp)

"close_stdout_set_file_name" :
5b00(7): mov %rdi,0x2086a1(%rip)
5b07(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5b10(7): mov %dil,0x208689(%rip)
5b17(1): ret near (%rsp)

"close_stdout" :
5b20(1): push %rbp
5b21(1): push %rbx
5b22(4): sub $0x8,%rsp
5b26(7): mov 0x20859b(%rip),%rdi
5b2d(5): call 0x3683(%rip)
5b32(2): test %eax,%eax
5b34(2): jz 0x18(%rip)
5b36(5): call 0xffffbe9a(%rip)
5b3b(7): cmp $0x0,0x20865e(%rip)
5b42(3): mov %rax,%rbx
5b45(2): jz 0x1e(%rip)
5b47(3): cmp $0x20,(%rax)
5b4a(2): jnz 0x19(%rip)
5b4c(7): mov 0x2085ad(%rip),%rdi
5b53(5): call 0x365d(%rip)
5b58(2): test %eax,%eax
5b5a(2): jnz 0x48(%rip)
5b5c(4): add $0x8,%rsp
5b60(1): pop %rbx
5b61(1): pop %rbp
5b62(1): ret near (%rsp)
5b63(7): lea 0x5896(%rip),%rsi
5b6a(2): xor %edi,%edi
5b6c(5): mov $0x5,%edx
5b71(5): call 0xffffbf0f(%rip)
5b76(7): mov 0x20862b(%rip),%rdi
5b7d(3): mov %rax,%rbp
5b80(3): test %rdi,%rdi
5b83(2): jz 0x2a(%rip)
5b85(5): call 0x1fcb(%rip)
5b8a(2): mov (%rbx),%esi
5b8c(7): lea 0x5879(%rip),%rdx
5b93(3): mov %rax,%rcx
5b96(3): mov %rbp,%r8
5b99(2): xor %edi,%edi
5b9b(2): xor %eax,%eax
5b9d(5): call 0xffffc0e3(%rip)
5ba2(6): mov 0x2084a8(%rip),%edi
5ba8(5): call 0xffffbe48(%rip)
5bad(2): mov (%rbx),%esi
5baf(7): lea 0x5847(%rip),%rdx
5bb6(3): mov %rax,%rcx
5bb9(2): xor %edi,%edi
5bbb(2): xor %eax,%eax
5bbd(5): call 0xffffc0c3(%rip)
5bc2(2): jmp 0xffffffe0(%rip)

"mbsalign" :
5bd0(2): push %r15
5bd2(2): push %r14
5bd4(3): mov %rdi,%r14
5bd7(2): push %r13
5bd9(2): push %r12
5bdb(3): mov %rsi,%r13
5bde(1): push %rbp
5bdf(1): push %rbx
5be0(3): mov %r9d,%ebx
5be3(3): mov %rcx,%r12
5be6(4): sub $0x38,%rsp
5bea(5): mov %rdx,0x10(%rsp)
5bef(5): mov %r8d,0x1c(%rsp)
5bf4(5): call 0xffffbeac(%rip)
5bf9(3): test $0x2,%bl
5bfc(3): mov %rax,%r15
5bff(5): mov %rax,0x8(%rsp)
5c04(6): jz 0x16c(%rip)
5c0a(3): mov %r15,%rbp
5c0d(8): mov $0x0,(%rsp)
5c15(9): mov $0x0,0x8(%rsp)
5c1e(4): mov (%r12),%rax
5c22(3): cmp %rbp,%rax
5c25(6): jnb 0x114(%rip)
5c2b(3): mov %rax,%r15
5c2e(2): xor %edx,%edx
5c30(4): mov %rax,(%r12)
5c34(4): mov 0x1c(%rsp),%eax
5c38(2): test %eax,%eax
5c3a(6): jz 0x121(%rip)
5c40(2): xor %ebp,%ebp
5c42(3): cmp $0x1,%eax
5c45(2): jz 0xe(%rip)
5c47(3): mov %rdx,%rbp
5c4a(3): and $0x1,%edx
5c4d(3): shr $0x1,%rbp
5c50(3): add %rbp,%rdx
5c53(3): test $0x4,%bl
5c56(4): lea 0x0(%rdx,%r15,1),%r12
5c5a(2): jz 0x7(%rip)
5c5c(3): mov %r15,%r12
5c5f(2): xor %edx,%edx
5c61(3): and $0x8,%ebx
5c64(6): jnz 0x104(%rip)
5c6a(3): add %rbp,%r12
5c6d(5): mov 0x10(%rsp),%rax
5c72(3): test %rax,%rax
5c75(6): jz 0x8c(%rip)
5c7b(5): lea 0xffffffff(%r13,%rax,1),%rbx
5c80(4): lea 0xffffffff(%rdx),%rax
5c84(3): cmp %rbx,%r13
5c87(2): jnb 0x28(%rip)
5c89(3): test %rdx,%rdx
5c8c(2): jz 0x23(%rip)
5c8e(2): nop 
5c90(4): add $0x1,%r13
5c94(5): mov $0x20,0xffffffff(%r13)
5c99(3): cmp %r13,%rbx
5c9c(4): setnbe %sil
5ca0(3): test %rax,%rax
5ca3(3): setnz %dl
5ca6(4): sub $0x1,%rax
5caa(3): test %dl,%sil
5cad(2): jnz 0xffffffe3(%rip)
5caf(3): mov %rbx,%rdx
5cb2(5): mov $0x0,0x0(%r13)
5cb7(3): mov %r14,%rsi
5cba(3): sub %r13,%rdx
5cbd(3): mov %r13,%rdi
5cc0(3): cmp %r15,%rdx
5cc3(4): cmovnbe %r15,%rdx
5cc7(5): call 0xffffbf99(%rip)
5ccc(3): cmp %rax,%rbx
5ccf(4): lea 0xffffffff(%rbp),%rdx
5cd3(2): jbe 0x2b(%rip)
5cd5(3): test %rbp,%rbp
5cd8(2): jz 0x26(%rip)
5cda(6): nop 0x0(%rax,%rax,1)
5ce0(4): add $0x1,%rax
5ce4(3): test %rdx,%rdx
5ce7(4): mov $0x20,0xffffffff(%rax)
5ceb(4): setnz %sil
5cef(3): cmp %rax,%rbx
5cf2(3): setnbe %cl
5cf5(4): sub $0x1,%rdx
5cf9(3): test %cl,%sil
5cfc(2): jnz 0xffffffe4(%rip)
5cfe(3): mov $0x0,(%rax)
5d01(4): mov (%rsp),%rdi
5d05(5): call 0xffffbcab(%rip)
5d0a(5): mov 0x8(%rsp),%rdi
5d0f(5): call 0xffffbca1(%rip)
5d14(4): add $0x38,%rsp
5d18(3): mov %r12,%rax
5d1b(1): pop %rbx
5d1c(1): pop %rbp
5d1d(2): pop %r12
5d1f(2): pop %r13
5d21(2): pop %r14
5d23(2): pop %r15
5d25(1): ret near (%rsp)
5d26(a): nop 0x0(%rax,%rax,1)
5d30(9): mov $0x0,0x8(%rsp)
5d39(3): cmp %rax,%rbp
5d3c(6): jnb 0x24e(%rip)
5d42(3): sub %rbp,%rax
5d45(3): mov %rax,%rdx
5d48(3): mov %rbp,%rax
5d4b(4): mov %rax,(%r12)
5d4f(4): mov 0x1c(%rsp),%eax
5d53(2): test %eax,%eax
5d55(6): jnz 0xfffffeeb(%rip)
5d5b(3): mov %rdx,%rbp
5d5e(2): xor %edx,%edx
5d60(5): jmp 0xfffffef3(%rip)
5d65(3): nop (%rax)
5d68(2): xor %ebp,%ebp
5d6a(5): jmp 0xffffff03(%rip)
5d6f(1): nop 
5d70(5): call 0xffffbd20(%rip)
5d75(4): cmp $0x1,%rax
5d79(6): jbe 0xfffffe91(%rip)
5d7f(2): xor %edx,%edx
5d81(2): xor %edi,%edi
5d83(3): mov %r14,%rsi
5d86(5): call 0xffffbcba(%rip)
5d8b(4): cmp $0xffffffff,%rax
5d8f(2): jnz 0x31(%rip)
5d91(3): test $0x1,%bl
5d94(6): jnz 0xfffffe76(%rip)
5d9a(8): mov $0x0,(%rsp)
5da2(9): mov $0x0,0x8(%rsp)
5dab(7): mov $0xffffffff,%r12
5db2(5): jmp 0xffffff4f(%rip)
5db7(9): nop 0x0(%rax,%rax,1)
5dc0(4): lea 0x1(%rax),%rbp
5dc4(8): lea 0x0(,%rbp,4),%rax
5dcc(3): mov %rax,%rdi
5dcf(5): mov %rax,0x20(%rsp)
5dd4(5): call 0xffffbe1c(%rip)
5dd9(3): test %rax,%rax
5ddc(4): mov %rax,(%rsp)
5de0(6): jz 0x185(%rip)
5de6(4): mov (%rsp),%rdi
5dea(3): mov %rbp,%rdx
5ded(3): mov %r14,%rsi
5df0(5): call 0xffffbc50(%rip)
5df5(3): test %rax,%rax
5df8(6): jz 0x10c(%rip)
5dfe(4): mov (%rsp),%rax
5e02(5): mov 0x20(%rsp),%rcx
5e07(8): mov $0x0,0xfffffffc(%rax,%rcx,1)
5e0f(2): mov (%rax),%edi
5e11(3): mov %rax,%rdx
5e14(2): test %edi,%edi
5e16(6): jz 0xff(%rip)
5e1c(5): mov $0x0,0x20(%rsp)
5e21(7): nop 0x0(%rax)
5e28(5): mov %rdx,0x28(%rsp)
5e2d(5): call 0xffffbee3(%rip)
5e32(2): test %eax,%eax
5e34(5): mov 0x28(%rsp),%rdx
5e39(2): jnz 0xd(%rip)
5e3b(6): mov $0xfffd,(%rdx)
5e41(5): mov $0x1,0x20(%rsp)
5e46(4): add $0x4,%rdx
5e4a(2): mov (%rdx),%edi
5e4c(2): test %edi,%edi
5e4e(2): jnz 0xffffffda(%rip)
5e50(4): mov (%rsp),%rdi
5e54(3): mov %rbp,%rsi
5e57(5): call 0xffffbbd9(%rip)
5e5c(5): cmp $0x0,0x20(%rsp)
5e61(3): movsxd %eax,%rbp
5e64(6): jz 0xc4(%rip)
5e6a(4): mov (%rsp),%rsi
5e6e(2): xor %edx,%edx
5e70(2): xor %edi,%edi
5e72(5): call 0xffffbe3e(%rip)
5e77(4): add $0x1,%rax
5e7b(5): mov %rax,0x20(%rsp)
5e80(5): mov 0x20(%rsp),%rdi
5e85(5): call 0xffffbd6b(%rip)
5e8a(3): test %rax,%rax
5e8d(5): mov %rax,0x8(%rsp)
5e92(6): jz 0xbe(%rip)
5e98(4): mov (%rsp),%r15
5e9c(4): mov (%r12),%r14
5ea0(3): mov (%r15),%edi
5ea3(2): test %edi,%edi
5ea5(6): jz 0xda(%rip)
5eab(2): xor %ebp,%ebp
5ead(2): jmp 0x11(%rip)
5eaf(1): nop 
5eb0(4): add $0x4,%r15
5eb4(3): mov (%r15),%edi
5eb7(3): mov %rdx,%rbp
5eba(2): test %edi,%edi
5ebc(2): jz 0x23(%rip)
5ebe(5): call 0xffffbd22(%rip)
5ec3(3): cmp $0xff,%eax
5ec6(3): movsxd %eax,%rdx
5ec9(2): jnz 0xe(%rip)
5ecb(7): mov $0xfffd,(%r15)
5ed2(5): mov $0x1,%edx
5ed7(3): add %rbp,%rdx
5eda(3): cmp %rdx,%r14
5edd(2): jnb 0xffffffd3(%rip)
5edf(5): mov 0x8(%rsp),%r14
5ee4(5): mov 0x20(%rsp),%rdx
5ee9(4): mov (%rsp),%rsi
5eed(7): mov $0x0,(%r15)
5ef4(3): mov %r14,%rdi
5ef7(5): call 0xffffbdb9(%rip)
5efc(3): mov %rax,%r15
5eff(5): jmp 0xfffffd1f(%rip)
5f04(3): mov %r15,%rbp
5f07(9): mov $0x0,0x8(%rsp)
5f10(5): jmp 0xfffffd0e(%rip)
5f15(4): mov (%rsp),%rdi
5f19(3): mov %rbp,%rsi
5f1c(5): call 0xffffbb14(%rip)
5f21(3): movsxd %eax,%rbp
5f24(4): nop 0x0(%rax)
5f28(4): mov (%r12),%rax
5f2c(3): cmp %rbp,%rax
5f2f(6): jnb 0xfffffe01(%rip)
5f35(5): mov 0x8(%rsp),%rax
5f3a(4): add $0x1,%rax
5f3e(5): mov %rax,0x20(%rsp)
5f43(5): jmp 0xffffff3d(%rip)
5f48(8): nop 0x0(%rax,%rax,1)
5f50(3): test $0x1,%bl
5f53(6): jnz 0xfffffccb(%rip)
5f59(7): mov $0xffffffff,%r12
5f60(5): jmp 0xfffffda1(%rip)
5f65(3): test $0x1,%bl
5f68(3): mov %r15,%rbp
5f6b(9): mov $0x0,0x8(%rsp)
5f74(6): jnz 0xfffffcaa(%rip)
5f7a(5): jmp 0xfffffe20(%rip)
5f7f(4): mov (%rsp),%r15
5f83(2): xor %ebp,%ebp
5f85(5): jmp 0xffffff5a(%rip)
5f8a(3): mov %rbp,%rax
5f8d(2): xor %edx,%edx
5f8f(5): jmp 0xfffffca1(%rip)

"ambsalign" :
5fa0(2): push %r15
5fa2(2): push %r14
5fa4(3): mov %rdi,%r15
5fa7(2): push %r13
5fa9(2): push %r12
5fab(3): xor %r12d,%r12d
5fae(1): push %rbp
5faf(1): push %rbx
5fb0(3): mov %rsi,%rbp
5fb3(4): sub $0x18,%rsp
5fb7(3): mov (%rsi),%r13
5fba(4): mov %edx,0x8(%rsp)
5fbe(4): mov %ecx,0xc(%rsp)
5fc2(3): mov %r13,%rax
5fc5(3): nop (%rax)
5fc8(4): lea 0x1(%rax),%rbx
5fcc(3): mov %r12,%rdi
5fcf(3): mov %rbx,%rsi
5fd2(5): call 0xffffbc5e(%rip)
5fd7(3): test %rax,%rax
5fda(3): mov %rax,%r14
5fdd(2): jz 0x43(%rip)
5fdf(5): mov 0xc(%rsp),%r9d
5fe4(5): mov 0x8(%rsp),%r8d
5fe9(3): mov %rbp,%rcx
5fec(4): mov %r13,0x0(%rbp)
5ff0(3): mov %rbx,%rdx
5ff3(3): mov %rax,%rsi
5ff6(3): mov %r15,%rdi
5ff9(5): call 0xfffffbd7(%rip)
5ffe(4): cmp $0xffffffff,%rax
6002(2): jz 0x2e(%rip)
6004(3): cmp %rax,%rbx
6007(3): mov %r14,%r12
600a(2): jbe 0xffffffbe(%rip)
600c(4): add $0x18,%rsp
6010(3): mov %r14,%rax
6013(1): pop %rbx
6014(1): pop %rbp
6015(2): pop %r12
6017(2): pop %r13
6019(2): pop %r14
601b(2): pop %r15
601d(1): ret near (%rsp)
601e(2): nop 
6020(3): mov %r12,%rdi
6023(5): call 0xffffb98d(%rip)
6028(2): jmp 0xffffffe4(%rip)
602a(6): nop 0x0(%rax,%rax,1)
6030(3): mov %r14,%rdi
6033(3): xor %r14d,%r14d
6036(5): call 0xffffb97a(%rip)
603b(2): jmp 0xffffffd1(%rip)

"set_program_name" :
6040(3): test %rdi,%rdi
6043(1): push %rbx
6044(2): jz 0x79(%rip)
6046(5): mov $0x2f,%esi
604b(3): mov %rdi,%rbx
604e(5): call 0xffffbab2(%rip)
6053(3): test %rax,%rax
6056(2): jz 0x57(%rip)
6058(4): lea 0x1(%rax),%r8
605c(3): mov %r8,%rdx
605f(3): sub %rbx,%rdx
6062(4): cmp $0x6,%rdx
6066(2): jle 0x47(%rip)
6068(4): lea 0xfffffffa(%rax),%rsi
606c(7): lea 0x53dd(%rip),%rdi
6073(5): mov $0x7,%ecx
6078(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
607a(3): setnbe %dl
607d(3): sbb $0x0,%dl
6080(2): test %dl,%dl
6082(2): jnz 0x2b(%rip)
6084(7): lea 0x53cd(%rip),%rdi
608b(5): mov $0x3,%ecx
6090(3): mov %r8,%rsi
6093(3): mov %r8,%rbx
6096(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6098(3): setnbe %dl
609b(3): sbb $0x0,%dl
609e(2): test %dl,%dl
60a0(2): jnz 0xd(%rip)
60a2(4): lea 0x4(%rax),%rbx
60a6(7): mov %rbx,0x208013(%rip)
60ad(7): mov %rbx,0x2080fc(%rip)
60b4(7): mov %rbx,0x20802d(%rip)
60bb(1): pop %rbx
60bc(1): ret near (%rsp)
60bd(7): mov 0x20803c(%rip),%rcx
60c4(7): lea 0x534d(%rip),%rdi
60cb(5): mov $0x37,%edx
60d0(5): mov $0x1,%esi
60d5(5): call 0xffffbbfb(%rip)
60da(5): call 0xffffb8e6(%rip)

"gettext_quote.part.1" :
60e0(1): push %rbp
60e1(1): push %rbx
60e2(3): mov %rdi,%rbp
60e5(2): mov %esi,%ebx
60e7(4): sub $0x8,%rsp
60eb(5): call 0x31a5(%rip)
60f0(3): movzx (%rax),%edx
60f3(3): and $0xdf,%edx
60f6(3): cmp $0x55,%dl
60f9(2): jz 0x77(%rip)
60fb(3): cmp $0x47,%dl
60fe(2): jz 0x22(%rip)
6100(7): lea 0x5364(%rip),%rax
6107(7): lea 0x535f(%rip),%rdx
610e(3): cmp $0x9,%ebx
6111(4): cmovne %rdx,%rax
6115(4): add $0x8,%rsp
6119(1): pop %rbx
611a(1): pop %rbp
611b(1): ret near (%rsp)
611c(4): nop 0x0(%rax)
6120(4): movzx 0x1(%rax),%edx
6124(3): and $0xdf,%edx
6127(3): cmp $0x42,%dl
612a(2): jnz 0xffffffd6(%rip)
612c(4): cmp $0x31,0x2(%rax)
6130(2): jnz 0xffffffd0(%rip)
6132(4): cmp $0x38,0x3(%rax)
6136(2): jnz 0xffffffca(%rip)
6138(4): cmp $0x30,0x4(%rax)
613c(2): jnz 0xffffffc4(%rip)
613e(4): cmp $0x33,0x5(%rax)
6142(2): jnz 0xffffffbe(%rip)
6144(4): cmp $0x30,0x6(%rax)
6148(2): jnz 0xffffffb8(%rip)
614a(4): cmp $0x0,0x7(%rax)
614e(2): jnz 0xffffffb2(%rip)
6150(4): cmp $0x60,0x0(%rbp)
6154(7): lea 0x5309(%rip),%rax
615b(7): lea 0x5306(%rip),%rdx
6162(4): cmovne %rdx,%rax
6166(4): add $0x8,%rsp
616a(1): pop %rbx
616b(1): pop %rbp
616c(1): ret near (%rsp)
616d(3): nop (%rax)
6170(4): movzx 0x1(%rax),%edx
6174(3): and $0xdf,%edx
6177(3): cmp $0x54,%dl
617a(2): jnz 0xffffff86(%rip)
617c(4): movzx 0x2(%rax),%edx
6180(3): and $0xdf,%edx
6183(3): cmp $0x46,%dl
6186(6): jnz 0xffffff7a(%rip)
618c(4): cmp $0x2d,0x3(%rax)
6190(6): jnz 0xffffff70(%rip)
6196(4): cmp $0x38,0x4(%rax)
619a(6): jnz 0xffffff66(%rip)
61a0(4): cmp $0x0,0x5(%rax)
61a4(6): jnz 0xffffff5c(%rip)
61aa(4): cmp $0x60,0x0(%rbp)
61ae(7): lea 0x52a7(%rip),%rax
61b5(7): lea 0x52a4(%rip),%rdx
61bc(4): cmovne %rdx,%rax
61c0(4): add $0x8,%rsp
61c4(1): pop %rbx
61c5(1): pop %rbp
61c6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
61d0(2): push %r15
61d2(2): push %r14
61d4(3): mov %r8d,%r15d
61d7(2): push %r13
61d9(2): push %r12
61db(3): mov %rdi,%r14
61de(1): push %rbp
61df(1): push %rbx
61e0(3): mov %r9d,%ebx
61e3(3): mov %rsi,%r13
61e6(3): mov %rcx,%rbp
61e9(3): and $0x2,%ebx
61ec(7): sub $0xb8,%rsp
61f3(8): mov 0xf0(%rsp),%rax
61fb(5): mov %rdx,0x10(%rsp)
6200(5): mov %r8d,0x8(%rsp)
6205(5): mov %r9d,0x78(%rsp)
620a(5): mov %rax,0x20(%rsp)
620f(8): mov 0xf8(%rsp),%rax
6217(5): mov %rax,0x68(%rsp)
621c(8): mov 0x100(%rsp),%rax
6224(5): mov %rax,0x60(%rsp)
6229(9): mov $0x28,%rax
6232(8): mov %rax,0xa8(%rsp)
623a(2): xor %eax,%eax
623c(5): call 0xffffb854(%rip)
6241(4): cmp $0xa,%r15d
6245(5): mov %rax,0x58(%rsp)
624a(6): jnbe 0x11b5(%rip)
6250(7): lea 0x5269(%rip),%rcx
6257(3): mov %r15d,%edx
625a(4): movsxd 0x0(%rcx,%rdx,4),%rax
625e(3): add %rcx,%rax
6261(2): jmp %rax
6263(5): mov $0x1,0xe(%rsp)
6268(5): mov $0x0,0x7c(%rsp)
626d(3): xor %r12d,%r12d
6270(9): mov $0x0,0x50(%rsp)
6279(5): mov $0x1,0xf(%rsp)
627e(5): mov $0x0,0xd(%rsp)
6283(7): lea 0x51e3(%rip),%rax
628a(9): mov $0x1,0x18(%rsp)
6293(3): xor %r15d,%r15d
6296(8): mov $0x2,0x8(%rsp)
629e(5): mov %rax,0x48(%rsp)
62a3(3): xor %r11d,%r11d
62a6(3): mov %rbp,%rax
62a9(3): mov %r12d,%r8d
62ac(3): mov %r11,%rbp
62af(3): mov %rax,%r11
62b2(6): nop 0x0(%rax,%rax,1)
62b8(3): cmp %rbp,%r11
62bb(4): setnz %r12b
62bf(4): cmp $0xffffffff,%r11
62c3(2): jnz 0xf(%rip)
62c5(5): mov 0x10(%rsp),%rax
62ca(4): cmp $0x0,0x0(%rax,%rbp,1)
62ce(4): setnz %r12b
62d2(3): test %r12b,%r12b
62d5(6): jz 0x65b(%rip)
62db(5): cmp $0x2,0x8(%rsp)
62e0(5): mov 0x10(%rsp),%rdi
62e5(4): lea 0x0(%rdi,%rbp,1),%r9
62e9(3): setnz %al
62ec(4): and 0xd(%rsp),%al
62f0(3): mov %eax,%r10d
62f3(6): jz 0xad(%rip)
62f9(5): mov 0x18(%rsp),%rax
62fe(3): test %rax,%rax
6301(6): jz 0x42f(%rip)
6307(4): cmp $0xffffffff,%r11
630b(5): lea 0x0(%rbp,%rax,1),%rbx
6310(2): jnz 0x30(%rip)
6312(4): cmp $0x1,%rax
6316(2): jbe 0x2a(%rip)
6318(5): mov %r8b,0x38(%rsp)
631d(5): mov %r10b,0x30(%rsp)
6322(5): mov %r9,0x28(%rsp)
6327(5): call 0xffffb779(%rip)
632c(6): movzx 0x38(%rsp),%r8d
6332(6): movzx 0x30(%rsp),%r10d
6338(3): mov %rax,%r11
633b(5): mov 0x28(%rsp),%r9
6340(3): cmp %r11,%rbx
6343(5): mov %r10b,0x28(%rsp)
6348(6): jnbe 0x5b8(%rip)
634e(5): mov 0x18(%rsp),%rdx
6353(5): mov 0x48(%rsp),%rsi
6358(3): mov %r9,%rdi
635b(5): mov %r11,0x40(%rsp)
6360(5): mov %r8b,0x38(%rsp)
6365(5): mov %r9,0x30(%rsp)
636a(5): call 0xffffb806(%rip)
636f(2): test %eax,%eax
6371(5): mov 0x30(%rsp),%r9
6376(6): movzx 0x38(%rsp),%r8d
637c(5): mov 0x40(%rsp),%r11
6381(6): jnz 0x57f(%rip)
6387(5): cmp $0x0,0xf(%rsp)
638c(6): movzx 0x28(%rsp),%r10d
6392(6): jnz 0xf83(%rip)
6398(8): nop 0x0(%rax,%rax,1)
63a0(4): movzx (%r9),%ebx
63a4(3): cmp $0x7e,%bl
63a7(6): jnbe 0x321(%rip)
63ad(7): lea 0x5138(%rip),%rcx
63b4(3): movzx %bl,%edx
63b7(4): movsxd 0x0(%rcx,%rdx,4),%rax
63bb(3): add %rcx,%rax
63be(2): jmp %rax
63c0(3): xor %r10d,%r10d
63c3(4): cmp $0x1,%r11
63c7(3): setnz %al
63ca(4): cmp $0xffffffff,%r11
63ce(2): jnz 0xe(%rip)
63d0(5): mov 0x10(%rsp),%rax
63d5(4): cmp $0x0,0x1(%rax)
63d9(3): setnz %al
63dc(5): cmp $0x2,0x8(%rsp)
63e1(3): setz %dl
63e4(2): test %al,%al
63e6(6): jz 0x252(%rip)
63ec(3): xor %r12d,%r12d
63ef(2): xor %eax,%eax
63f1(7): nop 0x0(%rax)
63f8(5): cmp $0x1,0xd(%rsp)
63fd(6): jnz 0x115(%rip)
6403(2): test %dl,%dl
6405(6): jnz 0x10d(%rip)
640b(5): mov 0x20(%rsp),%rsi
6410(3): test %rsi,%rsi
6413(2): jz 0x16(%rip)
6415(2): mov %ebx,%edx
6417(3): shr $0x5,%dl
641a(3): movzx %dl,%edx
641d(3): mov 0x0(%rsi,%rdx,4),%edx
6420(3): bt %ebx,%edx
6423(6): jb 0x150(%rip)
6429(3): test %r10b,%r10b
642c(6): jnz 0x147(%rip)
6432(3): xor $0x1,%eax
6435(4): add $0x1,%rbp
6439(3): and %r8d,%eax
643c(2): test %al,%al
643e(2): jz 0x22(%rip)
6440(3): cmp %r15,%r13
6443(2): jbe 0x7(%rip)
6445(5): mov $0x27,0x0(%r14,%r15,1)
644a(4): lea 0x1(%r15),%rax
644e(3): cmp %rax,%r13
6451(2): jbe 0x8(%rip)
6453(6): mov $0x27,0x1(%r14,%r15,1)
6459(4): add $0x2,%r15
645d(3): xor %r8d,%r8d
6460(3): cmp %r13,%r15
6463(2): jnb 0x6(%rip)
6465(4): mov %bl,0x0(%r14,%r15,1)
6469(5): movzx 0xe(%rsp),%edi
646e(4): add $0x1,%r15
6472(5): mov $0x0,%eax
6477(3): test %r12b,%r12b
647a(3): cmove %eax,%edi
647d(5): mov %dil,0xe(%rsp)
6482(5): jmp 0xfffffe36(%rip)
6487(9): nop 0x0(%rax,%rax,1)
6490(3): xor %r10d,%r10d
6493(4): mov 0x8(%rsp),%eax
6497(3): cmp $0x2,%eax
649a(6): jz 0x5be(%rip)
64a0(3): cmp $0x5,%eax
64a3(6): jz 0x575(%rip)
64a9(3): cmp $0x2,%eax
64ac(5): mov $0x3f,%ebx
64b1(3): setz %dl
64b4(3): xor %r12d,%r12d
64b7(2): xor %eax,%eax
64b9(5): jmp 0xffffff3f(%rip)
64be(2): nop 
64c0(3): xor %r10d,%r10d
64c3(5): cmp $0x2,0x8(%rsp)
64c8(6): jz 0x508(%rip)
64ce(5): mov %r12b,0x7c(%rsp)
64d3(2): xor %edx,%edx
64d5(2): xor %eax,%eax
64d7(5): mov $0x27,%ebx
64dc(5): jmp 0xffffff1c(%rip)
64e1(7): nop 0x0(%rax)
64e8(5): mov $0x9,%edx
64ed(5): mov $0x74,%ebx
64f2(5): cmp $0x2,0x8(%rsp)
64f7(3): setz %al
64fa(4): and 0xf(%rsp),%al
64fe(6): jnz 0x150(%rip)
6504(5): cmp $0x0,0xd(%rsp)
6509(2): jnz 0x67(%rip)
650b(2): mov %edx,%ebx
650d(3): xor %r12d,%r12d
6510(2): xor %eax,%eax
6512(5): cmp $0x0,0xf(%rsp)
6517(6): jnz 0xfffffef4(%rip)
651d(5): jmp 0xffffff0c(%rip)
6522(6): nop 0x0(%rax,%rax,1)
6528(5): mov $0x8,%edx
652d(5): mov $0x62,%ebx
6532(2): jmp 0xffffffd2(%rip)
6534(4): nop 0x0(%rax)
6538(5): cmp $0x2,0x8(%rsp)
653d(6): jz 0x3d3(%rip)
6543(5): cmp $0x0,0xd(%rsp)
6548(6): jz 0x218(%rip)
654e(5): cmp $0x0,0xf(%rsp)
6553(6): jz 0x20d(%rip)
6559(6): cmp $0x0,0x18(%rsp)
655f(6): jnz 0x3bc(%rip)
6565(5): mov $0x5c,%ebx
656a(6): nop 0x0(%rax,%rax,1)
6570(3): xor %r12d,%r12d
6573(5): cmp $0x2,0x8(%rsp)
6578(3): setz %dl
657b(5): cmp $0x0,0xf(%rsp)
6580(2): mov %edx,%eax
6582(6): jnz 0x856(%rip)
6588(3): mov %r8d,%eax
658b(3): xor $0x1,%eax
658e(2): and %dl,%al
6590(2): jz 0x31(%rip)
6592(3): cmp %r15,%r13
6595(2): jbe 0x7(%rip)
6597(5): mov $0x27,0x0(%r14,%r15,1)
659c(4): lea 0x1(%r15),%rdx
65a0(3): cmp %rdx,%r13
65a3(2): jbe 0x8(%rip)
65a5(6): mov $0x24,0x1(%r14,%r15,1)
65ab(4): lea 0x2(%r15),%rdx
65af(3): cmp %rdx,%r13
65b2(2): jbe 0x8(%rip)
65b4(6): mov $0x27,0x2(%r14,%r15,1)
65ba(4): add $0x3,%r15
65be(3): mov %eax,%r8d
65c1(3): cmp %r15,%r13
65c4(2): jbe 0x7(%rip)
65c6(5): mov $0x5c,0x0(%r14,%r15,1)
65cb(4): add $0x1,%r15
65cf(4): add $0x1,%rbp
65d3(5): jmp 0xfffffe8d(%rip)
65d8(8): nop 0x0(%rax,%rax,1)
65e0(5): cmp $0x0,0xd(%rsp)
65e5(6): jnz 0x1ce(%rip)
65eb(2): xor %edx,%edx
65ed(5): test $0x1,0x78(%rsp)
65f2(6): jz 0xffffff19(%rip)
65f8(4): add $0x1,%rbp
65fc(5): jmp 0xfffffcbc(%rip)
6601(7): nop 0x0(%rax)
6608(5): cmp $0x2,0x8(%rsp)
660d(3): setz %dl
6610(2): xor %eax,%eax
6612(5): jmp 0xfffffde6(%rip)
6617(9): nop 0x0(%rax,%rax,1)
6620(5): mov $0x7,%edx
6625(5): mov $0x61,%ebx
662a(5): jmp 0xfffffeda(%rip)
662f(1): nop 
6630(5): cmp $0x2,0x8(%rsp)
6635(3): setz %dl
6638(3): test %rbp,%rbp
663b(6): jnz 0xfffffdb1(%rip)
6641(5): movzx 0xf(%rsp),%eax
6646(2): and %dl,%al
6648(6): jz 0xfffffdb0(%rip)
664e(3): mov %r11,%rbp
6651(8): mov $0x2,0x8(%rsp)
6659(5): jmp 0x700(%rip)
665e(2): nop 
6660(5): cmp $0x2,0x8(%rsp)
6665(3): setz %dl
6668(3): xor %r12d,%r12d
666b(2): jmp 0xffffffd6(%rip)
666d(3): nop (%rax)
6670(5): cmp $0x2,0x8(%rsp)
6675(5): mov $0x20,%ebx
667a(3): setz %dl
667d(2): jmp 0xffffffc4(%rip)
667f(1): nop 
6680(5): mov $0xd,%edx
6685(5): mov $0x72,%ebx
668a(5): jmp 0xfffffe68(%rip)
668f(1): nop 
6690(5): mov $0xc,%edx
6695(5): mov $0x66,%ebx
669a(5): jmp 0xfffffe6a(%rip)
669f(1): nop 
66a0(5): mov $0xb,%edx
66a5(5): mov $0x76,%ebx
66aa(5): jmp 0xfffffe5a(%rip)
66af(1): nop 
66b0(5): mov $0xa,%edx
66b5(5): mov $0x6e,%ebx
66ba(5): jmp 0xfffffe38(%rip)
66bf(1): nop 
66c0(3): xor %r10d,%r10d
66c3(5): nop 0x0(%rax,%rax,1)
66c8(6): cmp $0x1,0x58(%rsp)
66ce(6): jnz 0x3aa(%rip)
66d4(5): mov %r11,0x38(%rsp)
66d9(5): mov %r8b,0x30(%rsp)
66de(5): mov %r10b,0x28(%rsp)
66e3(5): call 0xffffb64d(%rip)
66e8(3): mov (%rax),%rcx
66eb(3): movzx %bl,%edx
66ee(6): movzx 0x28(%rsp),%r10d
66f4(6): movzx 0x30(%rsp),%r8d
66fa(5): mov 0x38(%rsp),%r11
66ff(5): mov $0x1,%edi
6704(4): movzx 0x0(%rcx,%rdx,2),%eax
6708(4): and $0x4000,%ax
670c(4): setnz %r12b
6710(3): setz %al
6713(4): and 0xd(%rsp),%al
6717(2): test %al,%al
6719(6): jnz 0x998(%rip)
671f(5): cmp $0x2,0x8(%rsp)
6724(3): setz %dl
6727(5): jmp 0xfffffcd1(%rip)
672c(4): nop 0x0(%rax)
6730(4): movzx (%r9),%ebx
6734(3): cmp $0x7e,%bl
6737(2): jnbe 0xffffff89(%rip)
6739(7): lea 0x4fa8(%rip),%rcx
6740(3): movzx %bl,%edx
6743(4): movsxd 0x0(%rcx,%rdx,4),%rax
6747(3): add %rcx,%rax
674a(2): jmp %rax
674c(4): nop 0x0(%rax)
6750(3): xor %r10d,%r10d
6753(5): cmp $0x0,0xd(%rsp)
6758(6): jnz 0xfffffdf6(%rip)
675e(2): nop 
6760(5): mov $0x5c,%edx
6765(5): mov $0x5c,%ebx
676a(5): jmp 0xfffffd9a(%rip)
676f(1): nop 
6770(5): mov $0xc,%edx
6775(3): xor %r10d,%r10d
6778(5): mov $0x66,%ebx
677d(5): jmp 0xfffffd87(%rip)
6782(6): nop 0x0(%rax,%rax,1)
6788(5): mov $0xa,%edx
678d(3): xor %r10d,%r10d
6790(5): mov $0x6e,%ebx
6795(5): jmp 0xfffffd5d(%rip)
679a(6): nop 0x0(%rax,%rax,1)
67a0(5): mov $0x61,%ebx
67a5(5): jmp 0xfffffdcb(%rip)
67aa(6): nop 0x0(%rax,%rax,1)
67b0(3): xor %r10d,%r10d
67b3(5): cmp $0x2,0x8(%rsp)
67b8(3): setz %dl
67bb(5): cmp $0x0,0xf(%rsp)
67c0(6): jnz 0xb9a(%rip)
67c6(3): mov %r8d,%eax
67c9(3): mov %r15,%rcx
67cc(3): xor $0x1,%eax
67cf(2): and %dl,%al
67d1(2): jz 0x2f(%rip)
67d3(3): cmp %r15,%r13
67d6(2): jbe 0x7(%rip)
67d8(5): mov $0x27,0x0(%r14,%r15,1)
67dd(4): lea 0x1(%r15),%rcx
67e1(3): cmp %rcx,%r13
67e4(2): jbe 0x8(%rip)
67e6(6): mov $0x24,0x1(%r14,%r15,1)
67ec(4): lea 0x2(%r15),%rcx
67f0(3): cmp %rcx,%r13
67f3(6): jnbe 0x636(%rip)
67f9(4): lea 0x3(%r15),%rcx
67fd(3): mov %eax,%r8d
6800(3): cmp %rcx,%r13
6803(2): jbe 0x7(%rip)
6805(5): mov $0x5c,0x0(%r14,%rcx,1)
680a(5): cmp $0x2,0x8(%rsp)
680f(4): lea 0x1(%rcx),%r15
6813(6): jz 0x606(%rip)
6819(4): lea 0x1(%rbp),%rax
681d(3): cmp %r11,%rax
6820(2): jnb 0x1b(%rip)
6822(5): mov 0x10(%rsp),%rax
6827(5): movzx 0x1(%rax,%rbp,1),%eax
682c(4): mov %al,0x28(%rsp)
6830(3): sub $0x30,%eax
6833(2): cmp $0x9,%al
6835(6): jbe 0x834(%rip)
683b(3): mov %r12d,%eax
683e(5): mov $0x30,%ebx
6843(3): xor %r12d,%r12d
6846(5): jmp 0xfffffbb2(%rip)
684b(5): nop 0x0(%rax,%rax,1)
6850(5): cmp $0x2,0x8(%rsp)
6855(3): mov %r10d,%r12d
6858(3): setz %dl
685b(3): xor %r10d,%r10d
685e(2): xor %eax,%eax
6860(5): jmp 0xfffffb98(%rip)
6865(3): nop (%rax)
6868(5): cmp $0x2,0x8(%rsp)
686d(3): setz %dl
6870(3): xor %r10d,%r10d
6873(5): jmp 0xfffffdc5(%rip)
6878(8): nop 0x0(%rax,%rax,1)
6880(5): cmp $0x2,0x8(%rsp)
6885(3): setz %dl
6888(3): xor %r10d,%r10d
688b(3): xor %r12d,%r12d
688e(5): jmp 0xfffffdb3(%rip)
6893(5): nop 0x0(%rax,%rax,1)
6898(5): cmp $0x2,0x8(%rsp)
689d(3): mov %r10d,%r12d
68a0(5): mov $0x20,%ebx
68a5(3): setz %dl
68a8(3): xor %r10d,%r10d
68ab(5): jmp 0xfffffd96(%rip)
68b0(5): mov $0xd,%edx
68b5(3): xor %r10d,%r10d
68b8(5): mov $0x72,%ebx
68bd(5): jmp 0xfffffc35(%rip)
68c2(6): nop 0x0(%rax,%rax,1)
68c8(5): mov $0x76,%ebx
68cd(5): jmp 0xfffffca3(%rip)
68d2(6): nop 0x0(%rax,%rax,1)
68d8(5): mov $0x9,%edx
68dd(3): xor %r10d,%r10d
68e0(5): mov $0x74,%ebx
68e5(5): jmp 0xfffffc0d(%rip)
68ea(6): nop 0x0(%rax,%rax,1)
68f0(5): mov $0x62,%ebx
68f5(5): jmp 0xfffffc7b(%rip)
68fa(6): nop 0x0(%rax,%rax,1)
6900(3): xor %r10d,%r10d
6903(5): jmp 0xfffffa9d(%rip)
6908(8): nop 0x0(%rax,%rax,1)
6910(5): cmp $0x0,0xf(%rsp)
6915(6): jnz 0x96b(%rip)
691b(4): add $0x1,%rbp
691f(3): mov %r8d,%eax
6922(3): xor %r12d,%r12d
6925(5): mov $0x5c,%ebx
692a(5): jmp 0xfffffb12(%rip)
692f(1): nop 
6930(5): cmp $0x2,0x8(%rsp)
6935(5): movzx 0xf(%rsp),%ebx
693a(3): mov %r8d,%r12d
693d(3): mov %r11,%rbp
6940(3): setz %dl
6943(2): mov %ebx,%eax
6945(3): test %r15,%r15
6948(3): setz %cl
694b(2): and %edx,%eax
694d(2): and %cl,%al
694f(6): jnz 0xa67(%rip)
6955(2): mov %ebx,%eax
6957(3): xor $0x1,%eax
695a(2): and %al,%dl
695c(6): jz 0x970(%rip)
6962(5): cmp $0x0,0x7c(%rsp)
6967(6): jz 0x963(%rip)
696d(5): cmp $0x0,0xe(%rsp)
6972(6): jnz 0x9fb(%rip)
6978(3): test %r13,%r13
697b(3): setz %al
697e(6): cmp $0x0,0x50(%rsp)
6984(3): setnz %dl
6987(2): and %dl,%al
6989(6): jz 0xa23(%rip)
698f(5): mov 0x50(%rsp),%r13
6994(7): lea 0x4ad2(%rip),%rbx
699b(4): mov $0x27,(%r14)
699f(8): mov $0x2,0x8(%rsp)
69a7(6): mov $0x1,%r15d
69ad(9): mov $0x1,0x18(%rsp)
69b6(5): mov $0x0,0xf(%rsp)
69bb(5): mov %rbx,0x48(%rsp)
69c0(4): mov %al,0x7c(%rsp)
69c4(5): jmp 0xfffff8df(%rip)
69c9(7): nop 0x0(%rax)
69d0(5): cmp $0x0,0xf(%rsp)
69d5(6): jnz 0x8ab(%rip)
69db(3): test %r13,%r13
69de(6): jz 0x402(%rip)
69e4(2): xor %edx,%edx
69e6(6): cmp $0x0,0x50(%rsp)
69ec(6): jnz 0x3f4(%rip)
69f2(5): mov %r13,0x50(%rsp)
69f7(4): add $0x3,%r15
69fb(2): xor %eax,%eax
69fd(5): mov %r12b,0x7c(%rsp)
6a02(3): xor %r8d,%r8d
6a05(3): mov %rdx,%r13
6a08(5): mov $0x27,%ebx
6a0d(5): jmp 0xfffffa1c(%rip)
6a12(6): nop 0x0(%rax,%rax,1)
6a18(5): test $0x4,0x78(%rsp)
6a1d(2): jz 0x23(%rip)
6a1f(4): lea 0x2(%rbp),%rcx
6a23(3): cmp %r11,%rcx
6a26(2): jnb 0x1a(%rip)
6a28(5): mov 0x10(%rsp),%rax
6a2d(5): cmp $0x3f,0x1(%rax,%rbp,1)
6a32(6): jz 0x790(%rip)
6a38(8): nop 0x0(%rax,%rax,1)
6a40(2): xor %edx,%edx
6a42(3): xor %r12d,%r12d
6a45(2): xor %eax,%eax
6a47(5): mov $0x3f,%ebx
6a4c(5): jmp 0xfffff9ac(%rip)
6a51(7): nop 0x0(%rax)
6a58(5): cmp $0x0,0xf(%rsp)
6a5d(6): jnz 0x823(%rip)
6a63(3): xor %r12d,%r12d
6a66(2): xor %eax,%eax
6a68(5): mov $0x3f,%ebx
6a6d(5): jmp 0xfffff9bc(%rip)
6a72(6): nop 0x0(%rax,%rax,1)
6a78(8): lea 0xa0(%rsp),%rax
6a80(4): cmp $0xffffffff,%r11
6a84(c): mov $0x0,0xa0(%rsp)
6a90(5): mov %rax,0x28(%rsp)
6a95(2): jnz 0x2f(%rip)
6a97(5): mov 0x10(%rsp),%rdi
6a9c(5): mov %r8b,0x40(%rsp)
6aa1(5): mov %r10b,0x38(%rsp)
6aa6(5): mov %r9,0x30(%rsp)
6aab(5): call 0xffffaff5(%rip)
6ab0(6): movzx 0x40(%rsp),%r8d
6ab6(6): movzx 0x38(%rsp),%r10d
6abc(3): mov %rax,%r11
6abf(5): mov 0x30(%rsp),%r9
6ac4(8): lea 0x9c(%rsp),%rax
6acc(2): xor %ecx,%ecx
6ace(4): mov %bl,0x7e(%rsp)
6ad2(5): mov %r8b,0x7d(%rsp)
6ad7(3): mov %rcx,%rbx
6ada(8): mov %r9,0x88(%rsp)
6ae2(5): mov %rax,0x38(%rsp)
6ae7(5): mov %r10b,0x7f(%rsp)
6aec(8): mov %r15,0x80(%rsp)
6af4(5): mov %r14,0x40(%rsp)
6af9(5): mov %r13,0x70(%rsp)
6afe(5): mov %r11,0x30(%rsp)
6b03(5): mov 0x10(%rsp),%rax
6b08(5): lea 0x0(%rbp,%rbx,1),%r14
6b0d(5): mov 0x30(%rsp),%rdx
6b12(5): mov 0x28(%rsp),%rcx
6b17(5): mov 0x38(%rsp),%rdi
6b1c(4): lea 0x0(%rax,%r14,1),%r13
6b20(3): sub %r14,%rdx
6b23(3): mov %r13,%rsi
6b26(5): call 0x25fa(%rip)
6b2b(3): test %rax,%rax
6b2e(3): mov %rax,%r15
6b31(2): jz 0x50(%rip)
6b33(4): cmp $0xffffffff,%rax
6b37(6): jz 0x61e(%rip)
6b3d(4): cmp $0xfffffffe,%rax
6b41(6): jz 0x5a0(%rip)
6b47(5): cmp $0x2,0x8(%rsp)
6b4c(3): setz %al
6b4f(4): and 0xf(%rsp),%al
6b53(6): jnz 0x19d(%rip)
6b59(7): mov 0x9c(%rsp),%edi
6b60(5): call 0xffffb1b0(%rip)
6b65(5): mov 0x28(%rsp),%rdi
6b6a(2): test %eax,%eax
6b6c(5): mov $0x0,%eax
6b71(4): cmove %eax,%r12d
6b75(3): add %r15,%rbx
6b78(5): call 0xffffb188(%rip)
6b7d(2): test %eax,%eax
6b7f(2): jz 0xffffff84(%rip)
6b81(3): mov %r12d,%edx
6b84(3): mov %rbx,%rdi
6b87(6): movzx 0x7d(%rsp),%r8d
6b8d(3): xor $0x1,%edx
6b90(5): movzx 0x7e(%rsp),%ebx
6b95(6): movzx 0x7f(%rsp),%r10d
6b9b(4): and 0xd(%rsp),%dl
6b9f(8): mov 0x80(%rsp),%r15
6ba7(5): mov 0x40(%rsp),%r14
6bac(5): mov 0x70(%rsp),%r13
6bb1(5): mov 0x30(%rsp),%r11
6bb6(4): cmp $0x1,%rdi
6bba(6): jbe 0x601(%rip)
6bc0(3): mov %rdi,%rcx
6bc3(2): xor %esi,%esi
6bc5(6): movzx 0xf(%rsp),%r9d
6bcb(3): add %rbp,%rcx
6bce(5): mov 0x10(%rsp),%rdi
6bd3(5): jmp 0xbb(%rip)
6bd8(8): nop 0x0(%rax,%rax,1)
6be0(5): cmp $0x2,0x8(%rsp)
6be5(3): setz %al
6be8(3): test %r9b,%r9b
6beb(6): jnz 0x4b5(%rip)
6bf1(3): mov %r8d,%esi
6bf4(3): xor $0x1,%esi
6bf7(3): and %sil,%al
6bfa(2): jz 0x31(%rip)
6bfc(3): cmp %r15,%r13
6bff(2): jbe 0x7(%rip)
6c01(5): mov $0x27,0x0(%r14,%r15,1)
6c06(4): lea 0x1(%r15),%rsi
6c0a(3): cmp %rsi,%r13
6c0d(2): jbe 0x8(%rip)
6c0f(6): mov $0x24,0x1(%r14,%r15,1)
6c15(4): lea 0x2(%r15),%rsi
6c19(3): cmp %rsi,%r13
6c1c(2): jbe 0x8(%rip)
6c1e(6): mov $0x27,0x2(%r14,%r15,1)
6c24(4): add $0x3,%r15
6c28(3): mov %eax,%r8d
6c2b(3): cmp %r15,%r13
6c2e(2): jbe 0x7(%rip)
6c30(5): mov $0x5c,0x0(%r14,%r15,1)
6c35(4): lea 0x1(%r15),%rax
6c39(3): cmp %rax,%r13
6c3c(2): jbe 0xf(%rip)
6c3e(2): mov %ebx,%eax
6c40(3): shr $0x6,%al
6c43(3): add $0x30,%eax
6c46(5): mov %al,0x1(%r14,%r15,1)
6c4b(4): lea 0x2(%r15),%rax
6c4f(3): cmp %rax,%r13
6c52(2): jbe 0x12(%rip)
6c54(2): mov %ebx,%eax
6c56(3): shr $0x3,%al
6c59(3): and $0x7,%eax
6c5c(3): add $0x30,%eax
6c5f(5): mov %al,0x2(%r14,%r15,1)
6c64(3): and $0x7,%ebx
6c67(4): add $0x1,%rbp
6c6b(4): add $0x3,%r15
6c6f(3): add $0x30,%ebx
6c72(3): cmp %rcx,%rbp
6c75(6): jnb 0xfffff7eb(%rip)
6c7b(2): mov %edx,%esi
6c7d(3): cmp %r15,%r13
6c80(2): jbe 0x6(%rip)
6c82(4): mov %bl,0x0(%r14,%r15,1)
6c86(4): movzx 0x0(%rdi,%rbp,1),%ebx
6c8a(4): add $0x1,%r15
6c8e(2): test %dl,%dl
6c90(6): jnz 0xffffff50(%rip)
6c96(2): mov %esi,%eax
6c98(3): xor $0x1,%eax
6c9b(3): and %r8d,%eax
6c9e(3): test %r10b,%r10b
6ca1(2): jz 0x10(%rip)
6ca3(3): cmp %r15,%r13
6ca6(2): jbe 0x7(%rip)
6ca8(5): mov $0x5c,0x0(%r14,%r15,1)
6cad(4): add $0x1,%r15
6cb1(4): add $0x1,%rbp
6cb5(3): cmp %rcx,%rbp
6cb8(6): jnb 0xfffff784(%rip)
6cbe(2): test %al,%al
6cc0(6): jz 0x3fe(%rip)
6cc6(3): cmp %r15,%r13
6cc9(2): jbe 0x7(%rip)
6ccb(5): mov $0x27,0x0(%r14,%r15,1)
6cd0(4): lea 0x1(%r15),%rax
6cd4(3): cmp %rax,%r13
6cd7(2): jbe 0x8(%rip)
6cd9(6): mov $0x27,0x1(%r14,%r15,1)
6cdf(4): add $0x2,%r15
6ce3(3): xor %r10d,%r10d
6ce6(3): xor %r8d,%r8d
6ce9(2): jmp 0xffffff94(%rip)
6ceb(5): nop 0x0(%rax,%rax,1)
6cf0(4): cmp $0x1,%r15
6cf4(6): jz 0xfffffe65(%rip)
6cfa(5): mov 0x10(%rsp),%rdi
6cff(4): lea 0x0(%rdi,%r15,1),%rcx
6d03(5): lea 0x1(%rdi,%r14,1),%rdx
6d08(4): lea 0x0(%rcx,%r14,1),%r8
6d0c(2): jmp 0x11(%rip)
6d0e(2): nop 
6d10(4): add $0x1,%rdx
6d14(3): cmp %rdx,%r8
6d17(6): jz 0xfffffe42(%rip)
6d1d(3): movzx (%rdx),%ecx
6d20(3): sub $0x5b,%ecx
6d23(3): cmp $0x21,%cl
6d26(2): jnbe 0xffffffea(%rip)
6d28(5): mov $0x1,%esi
6d2d(3): shl/sal %cl,%rsi
6d30(3): mov %rsi,%rcx
6d33(a): mov $0x8589934635,%rsi
6d3d(3): test %rsi,%rcx
6d40(2): jz 0xffffffd0(%rip)
6d42(5): mov 0x40(%rsp),%r14
6d47(5): mov 0x70(%rsp),%r13
6d4c(5): mov 0x30(%rsp),%rbp
6d51(8): mov $0x2,0x8(%rsp)
6d59(5): cmp $0x0,0xd(%rsp)
6d5e(2): jz 0x12(%rip)
6d60(2): test %al,%al
6d62(5): mov $0x4,%eax
6d67(5): cmove 0x8(%rsp),%eax
6d6c(4): mov %eax,0x8(%rsp)
6d70(4): sub $0x8,%rsp
6d74(3): mov %rbp,%rcx
6d77(3): mov %r13,%rsi
6d7a(4): push 0x68(%rsp)
6d7e(4): push 0x78(%rsp)
6d82(3): mov %r14,%rdi
6d85(2): push $0x0
6d87(8): mov 0x98(%rsp),%r9d
6d8f(5): mov 0x28(%rsp),%r8d
6d94(5): mov 0x30(%rsp),%rdx
6d99(4): and $0xfd,%r9d
6d9d(5): call 0xfffff433(%rip)
6da2(4): add $0x20,%rsp
6da6(3): mov %rax,%r15
6da9(8): mov 0xa8(%rsp),%rbx
6db1(9): xor $0x28,%rbx
6dba(3): mov %r15,%rax
6dbd(6): jnz 0x606(%rip)
6dc3(7): add $0xb8,%rsp
6dca(1): pop %rbx
6dcb(1): pop %rbp
6dcc(2): pop %r12
6dce(2): pop %r13
6dd0(2): pop %r14
6dd2(2): pop %r15
6dd4(1): ret near (%rsp)
6dd5(3): nop (%rax)
6dd8(3): mov %r11,%rbp
6ddb(5): jmp 0xffffff7e(%rip)
6de0(3): cmp %r15,%r13
6de3(2): jbe 0x7(%rip)
6de5(5): mov $0x27,0x0(%r14,%r15,1)
6dea(4): lea 0x1(%r15),%rax
6dee(3): cmp %rax,%r13
6df1(2): jbe 0x8(%rip)
6df3(6): mov $0x5c,0x1(%r14,%r15,1)
6df9(4): lea 0x2(%r15),%rax
6dfd(3): cmp %rax,%r13
6e00(6): jbe 0x5f2(%rip)
6e06(3): mov %r13,%rdx
6e09(6): mov $0x27,0x2(%r14,%r15,1)
6e0f(5): mov 0x50(%rsp),%r13
6e14(5): jmp 0xfffffbde(%rip)
6e19(3): mov %r12d,%eax
6e1c(5): mov $0x30,%ebx
6e21(3): xor %r12d,%r12d
6e24(5): jmp 0xfffff605(%rip)
6e29(6): mov $0x27,0x2(%r14,%r15,1)
6e2f(5): jmp 0xfffff9ca(%rip)
6e34(2): test %ebx,%ebx
6e36(6): jnz 0xfffff42d(%rip)
6e3c(5): mov $0x1,0xd(%rsp)
6e41(3): test %r13,%r13
6e44(6): jnz 0x596(%rip)
6e4a(7): lea 0x461c(%rip),%rax
6e51(9): mov $0x0,0x50(%rsp)
6e5a(5): mov $0x1,0xe(%rsp)
6e5f(5): mov $0x0,0x7c(%rsp)
6e64(3): xor %r12d,%r12d
6e67(5): mov $0x0,0xf(%rsp)
6e6c(9): mov $0x1,0x18(%rsp)
6e75(5): mov %rax,0x48(%rsp)
6e7a(6): mov $0x1,%r15d
6e80(8): mov $0x2,0x8(%rsp)
6e88(5): jmp 0xfffff41b(%rip)
6e8d(3): nop (%rax)
6e90(2): test %ebx,%ebx
6e92(6): jnz 0x3fb(%rip)
6e98(3): test %r13,%r13
6e9b(6): jz 0x22b(%rip)
6ea1(4): mov $0x22,(%r14)
6ea5(5): mov $0x1,0xe(%rsp)
6eaa(3): xor %r12d,%r12d
6ead(5): mov $0x0,0x7c(%rsp)
6eb2(9): mov $0x0,0x50(%rsp)
6ebb(7): lea 0x45a9(%rip),%rax
6ec2(5): mov $0x0,0xf(%rsp)
6ec7(5): mov $0x1,0xd(%rsp)
6ecc(9): mov $0x1,0x18(%rsp)
6ed5(6): mov $0x1,%r15d
6edb(5): mov %rax,0x48(%rsp)
6ee0(5): jmp 0xfffff3c3(%rip)
6ee5(7): lea 0x457f(%rip),%rax
6eec(5): mov $0x1,0xe(%rsp)
6ef1(5): mov $0x0,0x7c(%rsp)
6ef6(3): xor %r12d,%r12d
6ef9(9): mov $0x0,0x50(%rsp)
6f02(5): mov $0x1,0xf(%rsp)
6f07(5): mov $0x1,0xd(%rsp)
6f0c(9): mov $0x1,0x18(%rsp)
6f15(3): xor %r15d,%r15d
6f18(5): mov %rax,0x48(%rsp)
6f1d(8): mov $0x5,0x8(%rsp)
6f25(5): jmp 0xfffff37e(%rip)
6f2a(5): mov $0x1,0xe(%rsp)
6f2f(5): mov $0x0,0x7c(%rsp)
6f34(3): xor %r12d,%r12d
6f37(9): mov $0x0,0x50(%rsp)
6f40(5): mov $0x0,0xf(%rsp)
6f45(3): xor %r15d,%r15d
6f48(5): mov $0x1,0xd(%rsp)
6f4d(9): mov $0x0,0x18(%rsp)
6f56(9): mov $0x0,0x48(%rsp)
6f5f(5): jmp 0xfffff344(%rip)
6f64(5): cmp $0xa,0x8(%rsp)
6f69(2): jz 0x58(%rip)
6f6b(7): lea 0x44fd(%rip),%rsi
6f72(2): xor %edi,%edi
6f74(5): mov $0x5,%edx
6f79(5): call 0xffffab07(%rip)
6f7e(3): mov %rax,%rcx
6f81(5): mov %rax,0x68(%rsp)
6f86(7): lea 0x44e2(%rip),%rax
6f8d(3): cmp %rax,%rcx
6f90(6): jz 0x39e(%rip)
6f96(7): lea 0x44d0(%rip),%rsi
6f9d(2): xor %edi,%edi
6f9f(5): mov $0x5,%edx
6fa4(5): call 0xffffaadc(%rip)
6fa9(3): mov %rax,%rcx
6fac(5): mov %rax,0x60(%rsp)
6fb1(7): lea 0x44b5(%rip),%rax
6fb8(3): cmp %rax,%rcx
6fbb(6): jz 0x389(%rip)
6fc1(3): xor %r15d,%r15d
6fc4(2): test %ebx,%ebx
6fc6(6): jz 0x1c7(%rip)
6fcc(2): test %ebx,%ebx
6fce(5): mov 0x60(%rsp),%rbx
6fd3(5): setnz 0xf(%rsp)
6fd8(3): xor %r12d,%r12d
6fdb(3): mov %rbx,%rdi
6fde(5): call 0xffffaac2(%rip)
6fe3(5): mov %rbx,0x48(%rsp)
6fe8(5): mov %rax,0x18(%rsp)
6fed(5): mov $0x1,0xe(%rsp)
6ff2(5): mov $0x0,0x7c(%rsp)
6ff7(9): mov $0x0,0x50(%rsp)
7000(5): mov $0x1,0xd(%rsp)
7005(5): jmp 0xfffff29e(%rip)
700a(5): mov $0x1,0xe(%rsp)
700f(5): mov $0x0,0x7c(%rsp)
7014(3): xor %r12d,%r12d
7017(9): mov $0x0,0x50(%rsp)
7020(5): mov $0x0,0xf(%rsp)
7025(3): xor %r15d,%r15d
7028(5): mov $0x0,0xd(%rsp)
702d(9): mov $0x0,0x18(%rsp)
7036(9): mov $0x0,0x48(%rsp)
703f(5): jmp 0xfffff264(%rip)
7044(5): mov $0x1,0xe(%rsp)
7049(5): mov $0x0,0x7c(%rsp)
704e(3): xor %r12d,%r12d
7051(9): mov $0x0,0x50(%rsp)
705a(5): mov $0x1,0xf(%rsp)
705f(5): mov $0x1,0xd(%rsp)
7064(5): jmp 0xfffff21f(%rip)
7069(3): cmp %r15,%r13
706c(2): jbe 0x7(%rip)
706e(5): mov $0x30,0x0(%r14,%r15,1)
7073(4): lea 0x2(%rcx),%rax
7077(3): cmp %rax,%r13
707a(2): jbe 0x8(%rip)
707c(6): mov $0x30,0x2(%r14,%rcx,1)
7082(3): mov %r12d,%eax
7085(4): lea 0x3(%rcx),%r15
7089(3): xor %r12d,%r12d
708c(5): mov $0x30,%ebx
7091(5): jmp 0xfffff367(%rip)
7096(a): nop 0x0(%rax,%rax,1)
70a0(5): movzx 0xf(%rsp),%ebx
70a5(3): mov %r11,%rbp
70a8(4): mov %bl,0xd(%rsp)
70ac(5): jmp 0xfffffcad(%rip)
70b1(5): movzx 0xd(%rsp),%edx
70b6(3): xor %r12d,%r12d
70b9(5): jmp 0xfffffb07(%rip)
70be(3): xor %r10d,%r10d
70c1(5): jmp 0xfffffbbc(%rip)
70c6(9): mov $0x0,0x50(%rsp)
70cf(5): mov $0x1,0xe(%rsp)
70d4(3): xor %r12d,%r12d
70d7(5): mov $0x0,0x7c(%rsp)
70dc(5): jmp 0xfffffddf(%rip)
70e1(5): mov 0x30(%rsp),%r11
70e6(3): mov %r14,%rsi
70e9(3): mov %r13,%rcx
70ec(3): mov %rbx,%rax
70ef(3): mov %rbx,%rdi
70f2(6): movzx 0x7d(%rsp),%r8d
70f8(5): movzx 0x7e(%rsp),%ebx
70fd(8): mov 0x88(%rsp),%r9
7105(3): cmp %r11,%rsi
7108(6): movzx 0x7f(%rsp),%r10d
710e(8): mov 0x80(%rsp),%r15
7116(5): mov 0x40(%rsp),%r14
711b(5): mov 0x70(%rsp),%r13
7120(2): jnb 0x28(%rip)
7122(3): cmp $0x0,(%rcx)
7125(2): jnz 0x12(%rip)
7127(2): jmp 0x21(%rip)
7129(7): nop 0x0(%rax)
7130(5): cmp $0x0,0x0(%r9,%rax,1)
7135(2): jz 0x10(%rip)
7137(4): add $0x1,%rax
713b(5): lea 0x0(%rbp,%rax,1),%rdx
7140(3): cmp %rdx,%r11
7143(2): jnbe 0xffffffed(%rip)
7145(3): mov %rax,%rdi
7148(5): movzx 0xd(%rsp),%edx
714d(3): xor %r12d,%r12d
7150(5): jmp 0xfffffa66(%rip)
7155(3): mov %rbx,%rdi
7158(6): movzx 0x7d(%rsp),%r8d
715e(5): movzx 0x7e(%rsp),%ebx
7163(6): movzx 0x7f(%rsp),%r10d
7169(8): mov 0x80(%rsp),%r15
7171(3): xor %r12d,%r12d
7174(5): mov 0x40(%rsp),%r14
7179(5): mov 0x70(%rsp),%r13
717e(5): mov 0x30(%rsp),%r11
7183(5): movzx 0xd(%rsp),%edx
7188(5): jmp 0xfffffa2e(%rip)
718d(5): mov 0x68(%rsp),%rdx
7192(3): movzx (%rdx),%eax
7195(2): test %al,%al
7197(6): jz 0xfffffe35(%rip)
719d(3): nop (%rax)
71a0(3): cmp %r15,%r13
71a3(2): jbe 0x6(%rip)
71a5(4): mov %al,0x0(%r14,%r15,1)
71a9(4): add $0x1,%r15
71ad(5): movzx 0x0(%rdx,%r15,1),%eax
71b2(2): test %al,%al
71b4(2): jnz 0xffffffec(%rip)
71b6(5): jmp 0xfffffe16(%rip)
71bb(2): mov %edx,%eax
71bd(5): jmp 0xfffff55a(%rip)
71c2(4): movzx 0x0(%rax,%rcx,1),%ebx
71c6(3): cmp $0x3e,%bl
71c9(6): jnbe 0xfffff877(%rip)
71cf(a): mov $0x8070630310989004800,%rax
71d9(4): bt %rbx,%rax
71dd(6): jnb 0xfffff863(%rip)
71e3(5): cmp $0x0,0xf(%rsp)
71e8(6): jnz 0x1ea(%rip)
71ee(3): cmp %r15,%r13
71f1(2): jbe 0x7(%rip)
71f3(5): mov $0x3f,0x0(%r14,%r15,1)
71f8(4): lea 0x1(%r15),%rax
71fc(3): cmp %rax,%r13
71ff(2): jbe 0x8(%rip)
7201(6): mov $0x22,0x1(%r14,%r15,1)
7207(4): lea 0x2(%r15),%rax
720b(3): cmp %rax,%r13
720e(2): jbe 0x8(%rip)
7210(6): mov $0x22,0x2(%r14,%r15,1)
7216(4): lea 0x3(%r15),%rax
721a(3): cmp %rax,%r13
721d(2): jbe 0x8(%rip)
721f(6): mov $0x3f,0x3(%r14,%r15,1)
7225(4): add $0x4,%r15
7229(2): xor %edx,%edx
722b(3): xor %r12d,%r12d
722e(2): xor %eax,%eax
7230(3): mov %rcx,%rbp
7233(5): jmp 0xfffff1c5(%rip)
7238(2): test %ebx,%ebx
723a(6): jz 0x18e(%rip)
7240(7): lea 0x4226(%rip),%rax
7247(5): mov $0x1,0xe(%rsp)
724c(5): mov $0x0,0x7c(%rsp)
7251(3): xor %r12d,%r12d
7254(9): mov $0x0,0x50(%rsp)
725d(5): mov $0x1,0xf(%rsp)
7262(5): mov $0x0,0xd(%rsp)
7267(9): mov $0x1,0x18(%rsp)
7270(3): xor %r15d,%r15d
7273(5): mov %rax,0x48(%rsp)
7278(5): jmp 0xfffff02b(%rip)
727d(3): nop (%rax)
7280(3): mov %r11,%rbp
7283(5): movzx 0xf(%rsp),%eax
7288(5): jmp 0xfffffad1(%rip)
728d(7): lea 0x41d7(%rip),%rax
7294(5): mov $0x1,0xe(%rsp)
7299(5): mov $0x0,0x7c(%rsp)
729e(3): xor %r12d,%r12d
72a1(9): mov $0x0,0x50(%rsp)
72aa(5): mov $0x1,0xf(%rsp)
72af(5): mov $0x1,0xd(%rsp)
72b4(9): mov $0x1,0x18(%rsp)
72bd(3): xor %r15d,%r15d
72c0(5): mov %rax,0x48(%rsp)
72c5(5): jmp 0xffffefde(%rip)
72ca(2): mov %edx,%eax
72cc(5): mov 0x48(%rsp),%rbx
72d1(3): test %rbx,%rbx
72d4(2): jz 0x2e(%rip)
72d6(2): test %al,%al
72d8(2): jz 0x2a(%rip)
72da(3): movzx (%rbx),%ecx
72dd(3): mov %rbx,%rax
72e0(2): test %cl,%cl
72e2(2): jz 0x20(%rip)
72e4(3): mov %r15,%rdx
72e7(3): sub %r15,%rax
72ea(3): cmp %rdx,%r13
72ed(2): jbe 0x6(%rip)
72ef(4): mov %cl,0x0(%r14,%rdx,1)
72f3(4): add $0x1,%rdx
72f7(4): movzx 0x0(%rax,%rdx,1),%ecx
72fb(2): test %cl,%cl
72fd(2): jnz 0xffffffed(%rip)
72ff(3): mov %rdx,%r15
7302(3): cmp %r15,%r13
7305(6): jbe 0xfffffaa4(%rip)
730b(5): mov $0x0,0x0(%r14,%r15,1)
7310(5): jmp 0xfffffa99(%rip)
7315(5): cmp $0x2,0x8(%rsp)
731a(5): movzx 0xf(%rsp),%ebx
731f(3): mov %r11,%rbp
7322(3): setz %al
7325(4): mov %bl,0xd(%rsp)
7329(5): jmp 0xfffffa30(%rip)
732e(4): mov 0x8(%rsp),%esi
7332(3): mov %rcx,%rdi
7335(5): call 0xffffedab(%rip)
733a(5): mov %rax,0x68(%rsp)
733f(5): jmp 0xfffffc57(%rip)
7344(4): mov 0x8(%rsp),%esi
7348(3): mov %rcx,%rdi
734b(5): call 0xffffed95(%rip)
7350(5): mov %rax,0x60(%rsp)
7355(5): jmp 0xfffffc6c(%rip)
735a(5): movzx 0xf(%rsp),%ebx
735f(3): mov %r11,%rbp
7362(2): mov %edx,%eax
7364(4): mov %bl,0xd(%rsp)
7368(5): jmp 0xfffff9f1(%rip)
736d(4): sub $0x8,%rsp
7371(6): mov $0x5,%r8d
7377(3): mov %r11,%rcx
737a(4): push 0x68(%rsp)
737e(4): push 0x78(%rsp)
7382(3): mov %r14,%rdi
7385(4): push 0x38(%rsp)
7389(8): mov 0x98(%rsp),%r9d
7391(5): mov 0x30(%rsp),%rdx
7396(5): mov 0x70(%rsp),%rsi
739b(5): call 0xffffee35(%rip)
73a0(4): add $0x20,%rsp
73a4(3): mov %rax,%r15
73a7(5): jmp 0xfffffa02(%rip)
73ac(5): movzx 0x7c(%rsp),%eax
73b1(5): jmp 0xffffff1b(%rip)
73b6(8): mov $0x2,0x8(%rsp)
73be(5): jmp 0xfffff99b(%rip)
73c3(5): call 0xffffa6ed(%rip)
73c8(5): mov $0x0,0xd(%rsp)
73cd(5): jmp 0xfffffa74(%rip)
73d2(3): mov %r11,%rbp
73d5(5): jmp 0xfffff99b(%rip)
73da(5): mov $0x1,0xe(%rsp)
73df(2): xor %eax,%eax
73e1(3): xor %r12d,%r12d
73e4(9): mov $0x0,0x50(%rsp)
73ed(5): jmp 0xfffff5a7(%rip)
73f2(3): mov %r13,%rdx
73f5(5): mov 0x50(%rsp),%r13
73fa(5): jmp 0xfffff5f8(%rip)
73ff(5): call 0xffffa5c1(%rip)

"quotearg_n_options" :
7410(2): push %r15
7412(2): push %r14
7414(3): movsxd %edi,%r15
7417(2): push %r13
7419(2): push %r12
741b(3): mov %rdx,%r14
741e(1): push %rbp
741f(1): push %rbx
7420(3): mov %rcx,%rbp
7423(4): sub $0x28,%rsp
7427(5): mov %rsi,0x8(%rsp)
742c(5): call 0xffffa5a4(%rip)
7431(3): mov %rax,%r13
7434(2): mov (%rax),%eax
7436(3): test %r15d,%r15d
7439(7): mov 0x206c60(%rip),%rbx
7440(4): mov %eax,0x18(%rsp)
7444(6): js 0x16d(%rip)
744a(7): cmp %r15d,0x206c47(%rip)
7451(2): jnle 0x64(%rip)
7453(7): cmp $0x7fffffff,%r15d
745a(6): jz 0x15c(%rip)
7460(4): lea 0x1(%r15),%r12d
7464(7): lea 0x206c45(%rip),%rax
746b(3): movsxd %r12d,%rsi
746e(4): shl/sal $0x4,%rsi
7472(3): cmp %rax,%rbx
7475(6): jz 0x11b(%rip)
747b(3): mov %rbx,%rdi
747e(5): call 0xf72(%rip)
7483(3): mov %rax,%rbx
7486(7): mov %rax,0x206c13(%rip)
748d(7): movsxd 0x206c04(%rip),%rdi
7494(3): mov %r12d,%edx
7497(2): xor %esi,%esi
7499(2): sub %edi,%edx
749b(4): shl/sal $0x4,%rdi
749f(3): movsxd %edx,%rdx
74a2(3): add %rbx,%rdi
74a5(4): shl/sal $0x4,%rdx
74a9(5): call 0xffffa697(%rip)
74ae(7): mov %r12d,0x206be3(%rip)
74b5(3): mov 0x4(%rbp),%eax
74b8(4): shl/sal $0x4,%r15
74bc(4): sub $0x8,%rsp
74c0(3): add %r15,%rbx
74c3(4): lea 0x8(%rbp),%r15
74c7(4): mov 0x0(%rbp),%r8d
74cb(3): mov (%rbx),%r11
74ce(4): mov 0x8(%rbx),%r12
74d2(3): mov %r14,%rcx
74d5(3): or $0x1,%eax
74d8(4): mov %eax,0x24(%rsp)
74dc(3): push 0x30(%rbp)
74df(3): mov %eax,%r9d
74e2(3): push 0x28(%rbp)
74e5(2): push %r15
74e7(3): mov %r11,%rsi
74ea(5): mov 0x28(%rsp),%rdx
74ef(3): mov %r12,%rdi
74f2(5): mov %r11,0x30(%rsp)
74f7(5): call 0xffffecd9(%rip)
74fc(4): add $0x20,%rsp
7500(5): mov 0x10(%rsp),%r11
7505(3): cmp %rax,%r11
7508(2): jnbe 0x69(%rip)
750a(4): lea 0x1(%rax),%rsi
750e(7): lea 0x206cab(%rip),%rax
7515(3): cmp %rax,%r12
7518(3): mov %rsi,(%rbx)
751b(2): jz 0x14(%rip)
751d(3): mov %r12,%rdi
7520(5): mov %rsi,0x10(%rsp)
7525(5): call 0xffffa48b(%rip)
752a(5): mov 0x10(%rsp),%rsi
752f(3): mov %rsi,%rdi
7532(5): mov %rsi,0x10(%rsp)
7537(5): call 0xe59(%rip)
753c(4): sub $0x8,%rsp
7540(4): mov %rax,0x8(%rbx)
7544(4): mov 0x0(%rbp),%r8d
7548(3): push 0x30(%rbp)
754b(3): push 0x28(%rbp)
754e(3): mov %r14,%rcx
7551(2): push %r15
7553(5): mov 0x3c(%rsp),%r9d
7558(3): mov %rax,%rdi
755b(5): mov 0x28(%rsp),%rdx
7560(5): mov 0x30(%rsp),%rsi
7565(3): mov %rax,%r12
7568(5): call 0xffffec68(%rip)
756d(4): add $0x20,%rsp
7571(4): mov 0x18(%rsp),%eax
7575(4): mov %eax,0x0(%r13)
7579(4): add $0x28,%rsp
757d(3): mov %r12,%rax
7580(1): pop %rbx
7581(1): pop %rbp
7582(2): pop %r12
7584(2): pop %r13
7586(2): pop %r14
7588(2): pop %r15
758a(1): ret near (%rsp)
758b(5): nop 0x0(%rax,%rax,1)
7590(2): xor %edi,%edi
7592(5): call 0xe5e(%rip)
7597(8): movdqa 0x206b11(%rip),%xmm0
759f(3): mov %rax,%rbx
75a2(7): mov %rax,0x206af7(%rip)
75a9(3): movups %xmm0,(%rax)
75ac(5): jmp 0xfffffee1(%rip)
75b1(5): call 0xffffa40f(%rip)
75b6(5): call 0x102a(%rip)

"clone_quoting_options" :
75c0(2): push %r12
75c2(1): push %rbp
75c3(1): push %rbx
75c4(3): mov %rdi,%rbx
75c7(5): call 0xffffa409(%rip)
75cc(3): mov (%rax),%r12d
75cf(3): mov %rax,%rbp
75d2(7): lea 0x206ce7(%rip),%rax
75d9(3): test %rbx,%rbx
75dc(5): mov $0x38,%esi
75e1(4): cmove %rax,%rbx
75e5(3): mov %rbx,%rdi
75e8(5): call 0xfa8(%rip)
75ed(4): mov %r12d,0x0(%rbp)
75f1(1): pop %rbx
75f2(1): pop %rbp
75f3(2): pop %r12
75f5(1): ret near (%rsp)

"get_quoting_style" :
7600(7): lea 0x206cb9(%rip),%rax
7607(3): test %rdi,%rdi
760a(4): cmove %rax,%rdi
760e(2): mov (%rdi),%eax
7610(1): ret near (%rsp)

"set_quoting_style" :
7620(7): lea 0x206c99(%rip),%rax
7627(3): test %rdi,%rdi
762a(4): cmove %rax,%rdi
762e(2): mov %esi,(%rdi)
7630(1): ret near (%rsp)

"set_char_quoting" :
7640(7): lea 0x206c79(%rip),%rax
7647(3): test %rdi,%rdi
764a(2): mov %esi,%ecx
764c(4): cmove %rax,%rdi
7650(2): mov %esi,%eax
7652(3): and $0x1f,%ecx
7655(3): shr $0x5,%al
7658(3): movzx %al,%eax
765b(5): lea 0x8(%rdi,%rax,4),%rdi
7660(2): mov (%rdi),%esi
7662(2): mov %esi,%eax
7664(2): shr %cl,%eax
7666(2): xor %eax,%edx
7668(3): and $0x1,%eax
766b(3): and $0x1,%edx
766e(2): shl/sal %cl,%edx
7670(2): xor %esi,%edx
7672(2): mov %edx,(%rdi)
7674(1): ret near (%rsp)

"set_quoting_flags" :
7680(7): lea 0x206c39(%rip),%rax
7687(3): test %rdi,%rdi
768a(4): cmove %rax,%rdi
768e(3): mov 0x4(%rdi),%eax
7691(3): mov %esi,0x4(%rdi)
7694(1): ret near (%rsp)

"set_custom_quoting" :
76a0(7): lea 0x206c19(%rip),%rax
76a7(3): test %rdi,%rdi
76aa(4): cmove %rax,%rdi
76ae(3): test %rsi,%rsi
76b1(6): mov $0xa,(%rdi)
76b7(2): jz 0x10(%rip)
76b9(3): test %rdx,%rdx
76bc(2): jz 0xb(%rip)
76be(4): mov %rsi,0x28(%rdi)
76c2(4): mov %rdx,0x30(%rdi)
76c6(1): ret near (%rsp)
76c7(4): sub $0x8,%rsp
76cb(5): call 0xffffa2f5(%rip)

"quotearg_buffer" :
76d0(2): push %r15
76d2(2): push %r14
76d4(7): lea 0x206be5(%rip),%rax
76db(2): push %r13
76dd(2): push %r12
76df(3): mov %rdi,%r13
76e2(1): push %rbp
76e3(1): push %rbx
76e4(3): mov %r8,%rbx
76e7(3): mov %rsi,%r14
76ea(3): mov %rdx,%r15
76ed(4): sub $0x18,%rsp
76f1(3): test %r8,%r8
76f4(4): cmove %rax,%rbx
76f8(5): mov %rcx,0x8(%rsp)
76fd(5): call 0xffffa2d3(%rip)
7702(3): mov (%rax),%r12d
7705(3): mov %rax,%rbp
7708(4): lea 0x8(%rbx),%rax
770c(4): sub $0x8,%rsp
7710(4): mov 0x4(%rbx),%r9d
7714(3): push 0x30(%rbx)
7717(3): mov (%rbx),%r8d
771a(3): push 0x28(%rbx)
771d(3): mov %r15,%rdx
7720(1): push %rax
7721(5): mov 0x28(%rsp),%rcx
7726(3): mov %r14,%rsi
7729(3): mov %r13,%rdi
772c(5): call 0xffffeaa4(%rip)
7731(4): mov %r12d,0x0(%rbp)
7735(4): add $0x38,%rsp
7739(1): pop %rbx
773a(1): pop %rbp
773b(2): pop %r12
773d(2): pop %r13
773f(2): pop %r14
7741(2): pop %r15
7743(1): ret near (%rsp)

"quotearg_alloc_mem" :
7750(2): push %r15
7752(2): push %r14
7754(7): lea 0x206b65(%rip),%rax
775b(2): push %r13
775d(2): push %r12
775f(3): mov %rdx,%r12
7762(1): push %rbp
7763(1): push %rbx
7764(3): mov %rcx,%rbx
7767(3): mov %rdi,%r14
776a(3): mov %rsi,%r15
776d(4): sub $0x38,%rsp
7771(3): test %rcx,%rcx
7774(4): cmove %rax,%rbx
7778(2): xor %ebp,%ebp
777a(5): call 0xffffa256(%rip)
777f(3): test %r12,%r12
7782(3): mov %rax,%r13
7785(2): mov (%rax),%eax
7787(4): setz %bpl
778b(3): or 0x4(%rbx),%ebp
778e(4): lea 0x8(%rbx),%r10
7792(4): sub $0x8,%rsp
7796(3): mov (%rbx),%r8d
7799(3): mov %r15,%rcx
779c(4): mov %eax,0x14(%rsp)
77a0(3): push 0x30(%rbx)
77a3(3): mov %r14,%rdx
77a6(3): push 0x28(%rbx)
77a9(2): push %r10
77ab(2): xor %esi,%esi
77ad(3): mov %ebp,%r9d
77b0(2): xor %edi,%edi
77b2(5): mov %r10,0x40(%rsp)
77b7(5): call 0xffffea19(%rip)
77bc(4): lea 0x1(%rax),%rsi
77c0(5): mov %rax,0x48(%rsp)
77c5(4): add $0x20,%rsp
77c9(3): mov %rsi,%rdi
77cc(5): mov %rsi,0x18(%rsp)
77d1(5): call 0xbbf(%rip)
77d6(5): mov %rax,0x10(%rsp)
77db(4): sub $0x8,%rsp
77df(3): push 0x30(%rbx)
77e2(3): push 0x28(%rbx)
77e5(5): mov 0x38(%rsp),%r10
77ea(3): mov %ebp,%r9d
77ed(3): mov (%rbx),%r8d
77f0(3): mov %r15,%rcx
77f3(3): mov %r14,%rdx
77f6(3): mov %rax,%rdi
77f9(2): push %r10
77fb(5): mov 0x38(%rsp),%rsi
7800(5): call 0xffffe9d0(%rip)
7805(4): mov 0x2c(%rsp),%eax
7809(4): add $0x20,%rsp
780d(3): test %r12,%r12
7810(4): mov %eax,0x0(%r13)
7814(2): jz 0xb(%rip)
7816(5): mov 0x28(%rsp),%r11
781b(4): mov %r11,(%r12)
781f(5): mov 0x10(%rsp),%rax
7824(4): add $0x38,%rsp
7828(1): pop %rbx
7829(1): pop %rbp
782a(2): pop %r12
782c(2): pop %r13
782e(2): pop %r14
7830(2): pop %r15
7832(1): ret near (%rsp)

"quotearg_alloc" :
7840(3): mov %rdx,%rcx
7843(2): xor %edx,%edx
7845(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
7850(6): mov 0x206842(%rip),%eax
7856(2): push %r12
7858(7): mov 0x206841(%rip),%r12
785f(1): push %rbp
7860(1): push %rbx
7861(3): cmp $0x1,%eax
7864(2): jle 0x2d(%rip)
7866(3): sub $0x2,%eax
7869(5): lea 0x18(%r12),%rbx
786e(4): shl/sal $0x4,%rax
7872(5): lea 0x28(%r12,%rax,1),%rbp
7877(9): nop 0x0(%rax,%rax,1)
7880(3): mov (%rbx),%rdi
7883(4): add $0x10,%rbx
7887(5): call 0xffffa129(%rip)
788c(3): cmp %rbp,%rbx
788f(2): jnz 0xfffffff1(%rip)
7891(5): mov 0x8(%r12),%rdi
7896(7): lea 0x206923(%rip),%rbx
789d(3): cmp %rbx,%rdi
78a0(2): jz 0x19(%rip)
78a2(5): call 0xffffa10e(%rip)
78a7(b): mov $0x100,0x2067fe(%rip)
78b2(7): mov %rbx,0x2067ff(%rip)
78b9(7): lea 0x2067f0(%rip),%rbx
78c0(3): cmp %rbx,%r12
78c3(2): jz 0x11(%rip)
78c5(3): mov %r12,%rdi
78c8(5): call 0xffffa0e8(%rip)
78cd(7): mov %rbx,0x2067cc(%rip)
78d4(1): pop %rbx
78d5(a): mov $0x1,0x2067b9(%rip)
78df(1): pop %rbp
78e0(2): pop %r12
78e2(1): ret near (%rsp)

"quotearg_n" :
78f0(7): lea 0x2069c9(%rip),%rcx
78f7(7): mov $0xffffffff,%rdx
78fe(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
7910(7): lea 0x2069a9(%rip),%rcx
7917(5): jmp 0xfffffaf9(%rip)

"quotearg" :
7920(7): lea 0x206999(%rip),%rcx
7927(3): mov %rdi,%rsi
792a(7): mov $0xffffffff,%rdx
7931(2): xor %edi,%edi
7933(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
7940(7): lea 0x206979(%rip),%rcx
7947(3): mov %rsi,%rdx
794a(3): mov %rdi,%rsi
794d(2): xor %edi,%edi
794f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
7960(4): sub $0x48,%rsp
7964(3): mov %rdx,%rax
7967(9): mov $0x28,%rdx
7970(5): mov %rdx,0x38(%rsp)
7975(2): xor %edx,%edx
7977(3): cmp $0xa,%esi
797a(2): jz 0x6a(%rip)
797c(3): mov %esi,(%rsp)
797f(3): mov %rsp,%rcx
7982(7): mov $0xffffffff,%rdx
7989(3): mov %rax,%rsi
798c(9): mov $0x0,0x4(%rsp)
7995(9): mov $0x0,0xc(%rsp)
799e(9): mov $0x0,0x14(%rsp)
79a7(9): mov $0x0,0x1c(%rsp)
79b0(9): mov $0x0,0x24(%rsp)
79b9(9): mov $0x0,0x2c(%rsp)
79c2(8): mov $0x0,0x34(%rsp)
79ca(5): call 0xfffffa46(%rip)
79cf(5): mov 0x38(%rsp),%rcx
79d4(9): xor $0x28,%rcx
79dd(2): jnz 0xc(%rip)
79df(4): add $0x48,%rsp
79e3(1): ret near (%rsp)
79e4(5): call 0xffff9fdc(%rip)
79e9(5): call 0xffffa0c7(%rip)

"quotearg_n_style_mem" :
79f0(4): sub $0x48,%rsp
79f4(3): mov %rdx,%rax
79f7(3): mov %rcx,%rdx
79fa(9): mov $0x28,%rcx
7a03(5): mov %rcx,0x38(%rsp)
7a08(2): xor %ecx,%ecx
7a0a(3): cmp $0xa,%esi
7a0d(2): jz 0x63(%rip)
7a0f(3): mov %esi,(%rsp)
7a12(3): mov %rsp,%rcx
7a15(3): mov %rax,%rsi
7a18(9): mov $0x0,0x4(%rsp)
7a21(9): mov $0x0,0xc(%rsp)
7a2a(9): mov $0x0,0x14(%rsp)
7a33(9): mov $0x0,0x1c(%rsp)
7a3c(9): mov $0x0,0x24(%rsp)
7a45(9): mov $0x0,0x2c(%rsp)
7a4e(8): mov $0x0,0x34(%rsp)
7a56(5): call 0xfffff9ba(%rip)
7a5b(5): mov 0x38(%rsp),%rdx
7a60(9): xor $0x28,%rdx
7a69(2): jnz 0xc(%rip)
7a6b(4): add $0x48,%rsp
7a6f(1): ret near (%rsp)
7a70(5): call 0xffff9f50(%rip)
7a75(5): call 0xffffa03b(%rip)

"quotearg_style" :
7a80(3): mov %rsi,%rdx
7a83(2): mov %edi,%esi
7a85(2): xor %edi,%edi
7a87(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
7a90(3): mov %rdx,%rcx
7a93(3): mov %rsi,%rdx
7a96(2): mov %edi,%esi
7a98(2): xor %edi,%edi
7a9a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
7aa0(4): sub $0x48,%rsp
7aa4(2): mov %edx,%ecx
7aa6(9): mov $0x28,%rax
7aaf(5): mov %rax,0x38(%rsp)
7ab4(2): xor %eax,%eax
7ab6(7): mov 0x206833(%rip),%rax
7abd(3): mov %rsp,%r8
7ac0(3): and $0x1f,%ecx
7ac3(8): movdqa 0x2067f5(%rip),%xmm0
7acb(5): mov %rax,0x30(%rsp)
7ad0(2): mov %edx,%eax
7ad2(4): movaps %xmm0,(%rsp)
7ad6(3): shr $0x5,%al
7ad9(3): movzx %al,%eax
7adc(5): lea 0x8(%r8,%rax,4),%r9
7ae1(8): movdqa 0x2067e7(%rip),%xmm0
7ae9(5): movaps %xmm0,0x10(%rsp)
7aee(8): movdqa 0x2067ea(%rip),%xmm0
7af6(5): movaps %xmm0,0x20(%rsp)
7afb(3): mov (%r9),%edx
7afe(2): mov %edx,%eax
7b00(2): shr %cl,%eax
7b02(2): not %eax
7b04(3): and $0x1,%eax
7b07(2): shl/sal %cl,%eax
7b09(3): mov %r8,%rcx
7b0c(2): xor %edx,%eax
7b0e(3): mov %rsi,%rdx
7b11(3): mov %rdi,%rsi
7b14(3): mov %eax,(%r9)
7b17(2): xor %edi,%edi
7b19(5): call 0xfffff8f7(%rip)
7b1e(5): mov 0x38(%rsp),%rsi
7b23(9): xor $0x28,%rsi
7b2c(2): jnz 0x7(%rip)
7b2e(4): add $0x48,%rsp
7b32(1): ret near (%rsp)
7b33(5): call 0xffff9f7d(%rip)

"quotearg_char" :
7b40(4): movsx %sil,%edx
7b44(7): mov $0xffffffff,%rsi
7b4b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
7b50(5): mov $0x3a,%edx
7b55(7): mov $0xffffffff,%rsi
7b5c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
7b70(5): mov $0x3a,%edx
7b75(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
7b80(4): sub $0x48,%rsp
7b84(3): mov %rdx,%rax
7b87(9): mov $0x28,%rdx
7b90(5): mov %rdx,0x38(%rsp)
7b95(2): xor %edx,%edx
7b97(3): cmp $0xa,%esi
7b9a(2): jz 0x6a(%rip)
7b9c(3): mov %esi,(%rsp)
7b9f(3): mov %rsp,%rcx
7ba2(7): mov $0xffffffff,%rdx
7ba9(3): mov %rax,%rsi
7bac(9): mov $0x0,0x4(%rsp)
7bb5(9): mov $0x4000000,0xc(%rsp)
7bbe(9): mov $0x0,0x14(%rsp)
7bc7(9): mov $0x0,0x1c(%rsp)
7bd0(9): mov $0x0,0x24(%rsp)
7bd9(9): mov $0x0,0x2c(%rsp)
7be2(8): mov $0x0,0x34(%rsp)
7bea(5): call 0xfffff826(%rip)
7bef(5): mov 0x38(%rsp),%rcx
7bf4(9): xor $0x28,%rcx
7bfd(2): jnz 0xc(%rip)
7bff(4): add $0x48,%rsp
7c03(1): ret near (%rsp)
7c04(5): call 0xffff9dbc(%rip)
7c09(5): call 0xffff9ea7(%rip)

"quotearg_n_custom_mem" :
7c10(4): sub $0x48,%rsp
7c14(3): mov %rcx,%r9
7c17(7): mov 0x2066d2(%rip),%rcx
7c1e(8): movdqa 0x20669a(%rip),%xmm0
7c26(9): mov $0x28,%rax
7c2f(5): mov %rax,0x38(%rsp)
7c34(2): xor %eax,%eax
7c36(4): movaps %xmm0,(%rsp)
7c3a(3): test %rsi,%rsi
7c3d(5): mov %rcx,0x30(%rsp)
7c42(7): mov $0xa,(%rsp)
7c49(8): movdqa 0x20667f(%rip),%xmm0
7c51(5): movaps %xmm0,0x10(%rsp)
7c56(8): movdqa 0x206682(%rip),%xmm0
7c5e(5): movaps %xmm0,0x20(%rsp)
7c63(2): jz 0x34(%rip)
7c65(3): test %rdx,%rdx
7c68(2): jz 0x2f(%rip)
7c6a(5): mov %rsi,0x28(%rsp)
7c6f(5): mov %rdx,0x30(%rsp)
7c74(3): mov %rsp,%rcx
7c77(3): mov %r8,%rdx
7c7a(3): mov %r9,%rsi
7c7d(5): call 0xfffff793(%rip)
7c82(5): mov 0x38(%rsp),%rdi
7c87(9): xor $0x28,%rdi
7c90(2): jnz 0xc(%rip)
7c92(4): add $0x48,%rsp
7c96(1): ret near (%rsp)
7c97(5): call 0xffff9d29(%rip)
7c9c(5): call 0xffff9e14(%rip)

"quotearg_n_custom" :
7cb0(7): mov $0xffffffff,%r8
7cb7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
7cc0(3): mov %rdx,%rcx
7cc3(7): mov $0xffffffff,%r8
7cca(3): mov %rsi,%rdx
7ccd(3): mov %rdi,%rsi
7cd0(2): xor %edi,%edi
7cd2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
7ce0(3): mov %rcx,%r8
7ce3(3): mov %rdx,%rcx
7ce6(3): mov %rsi,%rdx
7ce9(3): mov %rdi,%rsi
7cec(2): xor %edi,%edi
7cee(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
7d00(7): lea 0x206359(%rip),%rcx
7d07(5): jmp 0xfffff709(%rip)

"quote_mem" :
7d10(7): lea 0x206349(%rip),%rcx
7d17(3): mov %rsi,%rdx
7d1a(3): mov %rdi,%rsi
7d1d(2): xor %edi,%edi
7d1f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
7d30(7): lea 0x206329(%rip),%rcx
7d37(7): mov $0xffffffff,%rdx
7d3e(5): jmp 0xfffff6d2(%rip)

"quote" :
7d50(7): lea 0x206309(%rip),%rcx
7d57(3): mov %rdi,%rsi
7d5a(7): mov $0xffffffff,%rdx
7d61(2): xor %edi,%edi
7d63(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
7d70(2): push %r15
7d72(2): push %r14
7d74(2): push %r13
7d76(2): push %r12
7d78(3): mov %r9,%r12
7d7b(1): push %rbp
7d7c(1): push %rbx
7d7d(3): mov %rdi,%rbp
7d80(3): mov %r8,%rbx
7d83(4): sub $0x28,%rsp
7d87(3): test %rsi,%rsi
7d8a(6): jz 0x11e(%rip)
7d90(3): mov %rdx,%r8
7d93(7): lea 0x3b8e(%rip),%rdx
7d9a(3): mov %rcx,%r9
7d9d(2): xor %eax,%eax
7d9f(3): mov %rsi,%rcx
7da2(5): mov $0x1,%esi
7da7(5): call 0xffff9f39(%rip)
7dac(7): lea 0x3b88(%rip),%rsi
7db3(2): xor %edi,%edi
7db5(5): mov $0x5,%edx
7dba(5): call 0xffff9cc6(%rip)
7dbf(7): lea 0x3e9a(%rip),%rdx
7dc6(3): mov %rax,%rcx
7dc9(6): mov $0x7e3,%r8d
7dcf(5): mov $0x1,%esi
7dd4(3): mov %rbp,%rdi
7dd7(2): xor %eax,%eax
7dd9(5): call 0xffff9f07(%rip)
7dde(7): lea 0x3be3(%rip),%rsi
7de5(2): xor %edi,%edi
7de7(5): mov $0x5,%edx
7dec(5): call 0xffff9c94(%rip)
7df1(3): mov %rbp,%rsi
7df4(3): mov %rax,%rdi
7df7(5): call 0xffff9d89(%rip)
7dfc(4): cmp $0x9,%r12
7e00(6): jnbe 0x340(%rip)
7e06(7): lea 0x3e17(%rip),%rdx
7e0d(4): movsxd 0x0(%rdx,%r12,4),%rax
7e11(3): add %rdx,%rax
7e14(2): jmp %rax
7e16(a): nop 0x0(%rax,%rax,1)
7e20(4): mov 0x38(%rbx),%r9
7e24(4): mov 0x10(%rbx),%rax
7e28(7): lea 0x3d09(%rip),%rsi
7e2f(4): mov 0x8(%rbx),%r8
7e33(5): mov $0x5,%edx
7e38(2): xor %edi,%edi
7e3a(4): mov 0x30(%rbx),%r13
7e3e(4): mov 0x28(%rbx),%r12
7e42(5): mov %r9,0x10(%rsp)
7e47(4): mov 0x20(%rbx),%r15
7e4b(4): mov 0x18(%rbx),%r14
7e4f(4): mov %rax,(%rsp)
7e53(5): mov %r8,0x8(%rsp)
7e58(3): mov (%rbx),%rbx
7e5b(5): call 0xffff9c25(%rip)
7e60(4): sub $0x8,%rsp
7e64(5): mov 0x18(%rsp),%r9
7e69(3): mov %rax,%rdx
7e6c(3): mov %rbx,%rcx
7e6f(5): mov $0x1,%esi
7e74(3): mov %rbp,%rdi
7e77(2): xor %eax,%eax
7e79(2): push %r9
7e7b(2): push %r13
7e7d(2): push %r12
7e7f(2): push %r15
7e81(2): push %r14
7e83(5): mov 0x30(%rsp),%r9
7e88(5): mov 0x38(%rsp),%r8
7e8d(5): call 0xffff9e53(%rip)
7e92(4): add $0x30,%rsp
7e96(4): add $0x28,%rsp
7e9a(1): pop %rbx
7e9b(1): pop %rbp
7e9c(2): pop %r12
7e9e(2): pop %r13
7ea0(2): pop %r14
7ea2(2): pop %r15
7ea4(1): ret near (%rsp)
7ea5(3): nop (%rax)
7ea8(3): mov %rcx,%r8
7eab(3): mov %rdx,%rcx
7eae(7): lea 0x3a7f(%rip),%rdx
7eb5(5): mov $0x1,%esi
7eba(2): xor %eax,%eax
7ebc(5): call 0xffff9e24(%rip)
7ec1(5): jmp 0xfffffeeb(%rip)
7ec6(a): nop 0x0(%rax,%rax,1)
7ed0(4): mov 0x40(%rbx),%r10
7ed4(4): mov 0x38(%rbx),%r9
7ed8(7): lea 0x3c89(%rip),%rsi
7edf(4): mov 0x10(%rbx),%rax
7ee3(4): mov 0x8(%rbx),%r8
7ee7(5): mov $0x5,%edx
7eec(4): mov 0x30(%rbx),%r13
7ef0(4): mov 0x28(%rbx),%r12
7ef4(4): mov 0x20(%rbx),%r15
7ef8(4): mov 0x18(%rbx),%r14
7efc(3): mov (%rbx),%rbx
7eff(5): mov %r10,0x18(%rsp)
7f04(5): mov %r9,0x10(%rsp)
7f09(4): mov %rax,(%rsp)
7f0d(5): mov %r8,0x8(%rsp)
7f12(2): xor %edi,%edi
7f14(5): call 0xffff9b6c(%rip)
7f19(5): mov 0x18(%rsp),%r10
7f1e(2): push %r10
7f20(5): jmp 0xffffff44(%rip)
7f25(3): nop (%rax)
7f28(3): mov (%rbx),%rbx
7f2b(7): lea 0x3a0d(%rip),%rsi
7f32(5): mov $0x5,%edx
7f37(2): xor %edi,%edi
7f39(5): call 0xffff9b47(%rip)
7f3e(4): add $0x28,%rsp
7f42(3): mov %rbx,%rcx
7f45(3): mov %rbp,%rdi
7f48(1): pop %rbx
7f49(1): pop %rbp
7f4a(2): pop %r12
7f4c(2): pop %r13
7f4e(2): pop %r14
7f50(2): pop %r15
7f52(3): mov %rax,%rdx
7f55(5): mov $0x1,%esi
7f5a(2): xor %eax,%eax
7f5c(5): jmp 0xffff9d84(%rip)
7f61(7): nop 0x0(%rax)
7f68(4): mov 0x8(%rbx),%r12
7f6c(7): lea 0x39dc(%rip),%rsi
7f73(3): mov (%rbx),%rbx
7f76(5): mov $0x5,%edx
7f7b(2): xor %edi,%edi
7f7d(5): call 0xffff9b03(%rip)
7f82(4): add $0x28,%rsp
7f86(3): mov %r12,%r8
7f89(3): mov %rbx,%rcx
7f8c(3): mov %rbp,%rdi
7f8f(3): mov %rax,%rdx
7f92(5): mov $0x1,%esi
7f97(1): pop %rbx
7f98(1): pop %rbp
7f99(2): pop %r12
7f9b(2): pop %r13
7f9d(2): pop %r14
7f9f(2): pop %r15
7fa1(2): xor %eax,%eax
7fa3(5): jmp 0xffff9d3d(%rip)
7fa8(8): nop 0x0(%rax,%rax,1)
7fb0(4): mov 0x10(%rbx),%r13
7fb4(4): mov 0x8(%rbx),%r12
7fb8(7): lea 0x39a7(%rip),%rsi
7fbf(3): mov (%rbx),%rbx
7fc2(5): mov $0x5,%edx
7fc7(2): xor %edi,%edi
7fc9(5): call 0xffff9ab7(%rip)
7fce(4): add $0x28,%rsp
7fd2(3): mov %r13,%r9
7fd5(3): mov %r12,%r8
7fd8(3): mov %rbx,%rcx
7fdb(3): mov %rbp,%rdi
7fde(3): mov %rax,%rdx
7fe1(1): pop %rbx
7fe2(1): pop %rbp
7fe3(2): pop %r12
7fe5(2): pop %r13
7fe7(2): pop %r14
7fe9(2): pop %r15
7feb(5): mov $0x1,%esi
7ff0(2): xor %eax,%eax
7ff2(5): jmp 0xffff9cee(%rip)
7ff7(9): nop 0x0(%rax,%rax,1)
8000(7): lea 0x3a91(%rip),%rsi
8007(5): mov $0x5,%edx
800c(2): xor %edi,%edi
800e(4): mov 0x18(%rbx),%r14
8012(4): mov 0x10(%rbx),%r13
8016(4): mov 0x8(%rbx),%r12
801a(3): mov (%rbx),%rbx
801d(5): call 0xffff9a63(%rip)
8022(4): sub $0x8,%rsp
8026(2): push %r14
8028(3): mov %rax,%rdx
802b(3): mov %r13,%r9
802e(3): mov %r12,%r8
8031(3): mov %rbx,%rcx
8034(3): mov %rbp,%rdi
8037(5): mov $0x1,%esi
803c(2): xor %eax,%eax
803e(5): call 0xffff9ca2(%rip)
8043(1): pop %rax
8044(1): pop %rdx
8045(4): add $0x28,%rsp
8049(1): pop %rbx
804a(1): pop %rbp
804b(2): pop %r12
804d(2): pop %r13
804f(2): pop %r14
8051(2): pop %r15
8053(1): ret near (%rsp)
8054(4): nop 0x0(%rax)
8058(4): mov 0x20(%rbx),%r15
805c(7): lea 0x3a55(%rip),%rsi
8063(5): mov $0x5,%edx
8068(2): xor %edi,%edi
806a(4): mov 0x18(%rbx),%r14
806e(4): mov 0x10(%rbx),%r13
8072(4): mov 0x8(%rbx),%r12
8076(3): mov (%rbx),%rbx
8079(5): call 0xffff9a07(%rip)
807e(2): push %r15
8080(2): jmp 0xffffffa6(%rip)
8082(6): nop 0x0(%rax,%rax,1)
8088(4): mov 0x8(%rbx),%r8
808c(4): mov 0x28(%rbx),%r12
8090(7): lea 0x3a49(%rip),%rsi
8097(4): mov 0x20(%rbx),%r15
809b(4): mov 0x18(%rbx),%r14
809f(5): mov $0x5,%edx
80a4(4): mov 0x10(%rbx),%r13
80a8(2): xor %edi,%edi
80aa(3): mov (%rbx),%rbx
80ad(4): mov %r8,(%rsp)
80b1(5): call 0xffff99cf(%rip)
80b6(4): sub $0x8,%rsp
80ba(3): mov %r13,%r9
80bd(2): push %r12
80bf(2): push %r15
80c1(2): push %r14
80c3(5): mov 0x20(%rsp),%r8
80c8(3): mov %rbx,%rcx
80cb(3): mov %rax,%rdx
80ce(3): mov %rbp,%rdi
80d1(5): mov $0x1,%esi
80d6(2): xor %eax,%eax
80d8(5): call 0xffff9c08(%rip)
80dd(4): add $0x20,%rsp
80e1(4): add $0x28,%rsp
80e5(1): pop %rbx
80e6(1): pop %rbp
80e7(2): pop %r12
80e9(2): pop %r13
80eb(2): pop %r14
80ed(2): pop %r15
80ef(1): ret near (%rsp)
80f0(4): mov 0x10(%rbx),%r9
80f4(4): mov 0x30(%rbx),%r13
80f8(7): lea 0x3a09(%rip),%rsi
80ff(4): mov 0x28(%rbx),%r12
8103(4): mov 0x20(%rbx),%r15
8107(5): mov $0x5,%edx
810c(4): mov 0x18(%rbx),%r14
8110(4): mov 0x8(%rbx),%r8
8114(2): xor %edi,%edi
8116(5): mov %r9,0x8(%rsp)
811b(3): mov (%rbx),%rbx
811e(4): mov %r8,(%rsp)
8122(5): call 0xffff995e(%rip)
8127(2): push %r13
8129(2): push %r12
812b(2): push %r15
812d(2): push %r14
812f(5): mov 0x28(%rsp),%r9
8134(2): jmp 0xffffff8f(%rip)
8136(a): nop 0x0(%rax,%rax,1)
8140(4): mov 0x40(%rbx),%r10
8144(4): mov 0x38(%rbx),%r9
8148(5): mov $0x5,%edx
814d(4): mov 0x10(%rbx),%rax
8151(4): mov 0x8(%rbx),%r8
8155(7): lea 0x3a44(%rip),%rsi
815c(4): mov 0x30(%rbx),%r13
8160(4): mov 0x28(%rbx),%r12
8164(4): mov 0x20(%rbx),%r15
8168(4): mov 0x18(%rbx),%r14
816c(5): mov %r10,0x18(%rsp)
8171(5): mov %r9,0x10(%rsp)
8176(4): mov %rax,(%rsp)
817a(5): mov %r8,0x8(%rsp)
817f(3): mov (%rbx),%rbx
8182(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
8190(3): xor %r9d,%r9d
8193(4): cmp $0x0,(%r8)
8197(2): jz 0x14(%rip)
8199(7): nop 0x0(%rax)
81a0(4): add $0x1,%r9
81a4(5): cmp $0x0,0x0(%r8,%r9,8)
81a9(2): jnz 0xfffffff7(%rip)
81ab(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
81b0(4): sub $0x68,%rsp
81b4(3): mov %r8,%r10
81b7(3): xor %r9d,%r9d
81ba(9): mov $0x28,%rax
81c3(5): mov %rax,0x58(%rsp)
81c8(2): xor %eax,%eax
81ca(3): mov %rsp,%r8
81cd(3): nop (%rax)
81d0(3): mov (%r10),%eax
81d3(3): cmp $0x2f,%eax
81d6(2): jnbe 0x44(%rip)
81d8(3): mov %eax,%r11d
81db(4): add 0x10(%r10),%r11
81df(3): add $0x8,%eax
81e2(3): mov %eax,(%r10)
81e5(3): mov (%r11),%rax
81e8(3): test %rax,%rax
81eb(4): mov %rax,0x0(%r8,%r9,8)
81ef(2): jz 0xc(%rip)
81f1(4): add $0x1,%r9
81f5(4): cmp $0xa,%r9
81f9(2): jnz 0xffffffd7(%rip)
81fb(5): call 0xfffffb75(%rip)
8200(5): mov 0x58(%rsp),%rax
8205(9): xor $0x28,%rax
820e(2): jnz 0x7(%rip)
8210(4): add $0x68,%rsp
8214(1): ret near (%rsp)
8215(5): call 0xffff989b(%rip)
821a(4): mov 0x8(%r10),%r11
821e(4): lea 0x8(%r11),%rax
8222(4): mov %rax,0x8(%r10)
8226(2): jmp 0xffffffbf(%rip)

"version_etc" :
8230(1): push %rbp
8231(1): push %rbx
8232(6): mov $0x20,%r10d
8238(3): xor %r11d,%r11d
823b(7): sub $0xb8,%rsp
8242(9): mov $0x28,%rax
824b(5): mov %rax,0x78(%rsp)
8250(2): xor %eax,%eax
8252(8): lea 0xd0(%rsp),%rax
825a(8): mov %r8,0xa0(%rsp)
8262(8): lea 0xd0(%rsp),%rbx
826a(5): lea 0x20(%rsp),%r8
826f(8): mov %r9,0xa8(%rsp)
8277(8): mov $0x20,0x8(%rsp)
827f(5): mov %rax,0x10(%rsp)
8284(8): lea 0x80(%rsp),%rax
828c(3): xor %r9d,%r9d
828f(5): mov %rax,0x18(%rsp)
8294(3): mov %rax,%rbp
8297(9): nop 0x0(%rax,%rax,1)
82a0(4): cmp $0x2f,%r10d
82a4(2): jnbe 0x58(%rip)
82a6(3): mov %r10d,%eax
82a9(6): mov $0x1,%r11d
82af(4): add $0x8,%r10d
82b3(3): add %rbp,%rax
82b6(3): mov (%rax),%rax
82b9(3): test %rax,%rax
82bc(4): mov %rax,0x0(%r8,%r9,8)
82c0(2): jz 0xc(%rip)
82c2(4): add $0x1,%r9
82c6(4): cmp $0xa,%r9
82ca(2): jnz 0xffffffd6(%rip)
82cc(3): test %r11b,%r11b
82cf(2): jnz 0x26(%rip)
82d1(5): call 0xfffffa9f(%rip)
82d6(5): mov 0x78(%rsp),%rax
82db(9): xor $0x28,%rax
82e4(2): jnz 0xc(%rip)
82e6(7): add $0xb8,%rsp
82ed(1): pop %rbx
82ee(1): pop %rbp
82ef(1): ret near (%rsp)
82f0(5): call 0xffff97c0(%rip)
82f5(5): mov %r10d,0x8(%rsp)
82fa(2): jmp 0xffffffd7(%rip)
82fc(3): mov %rbx,%rax
82ff(4): add $0x8,%rbx
8303(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
8310(1): push %rbx
8311(7): lea 0x366a(%rip),%rsi
8318(5): mov $0x5,%edx
831d(2): xor %edi,%edi
831f(5): call 0xffff9761(%rip)
8324(7): lea 0x366c(%rip),%rdx
832b(3): mov %rax,%rsi
832e(5): mov $0x1,%edi
8333(2): xor %eax,%eax
8335(5): call 0xffff991b(%rip)
833a(7): lea 0x366c(%rip),%rsi
8341(5): mov $0x5,%edx
8346(2): xor %edi,%edi
8348(5): call 0xffff9738(%rip)
834d(7): lea 0x29a4(%rip),%rcx
8354(7): lea 0x12ec(%rip),%rdx
835b(3): mov %rax,%rsi
835e(5): mov $0x1,%edi
8363(2): xor %eax,%eax
8365(5): call 0xffff98eb(%rip)
836a(7): mov 0x205d57(%rip),%rbx
8371(7): lea 0x3868(%rip),%rsi
8378(2): xor %edi,%edi
837a(5): mov $0x5,%edx
837f(5): call 0xffff9701(%rip)
8384(3): mov %rbx,%rsi
8387(3): mov %rax,%rdi
838a(1): pop %rbx
838b(5): jmp 0xffff97f5(%rip)

"xmalloc" :
8390(1): push %rbx
8391(3): mov %rdi,%rbx
8394(5): call 0xffff985c(%rip)
8399(3): test %rax,%rax
839c(2): jnz 0x7(%rip)
839e(3): test %rbx,%rbx
83a1(2): jnz 0x4(%rip)
83a3(1): pop %rbx
83a4(1): ret near (%rsp)
83a5(5): call 0x23b(%rip)

"xnmalloc" :
83b0(3): mov %rdi,%rax
83b3(3): mul %rax,%rsi,%rdx
83b6(3): mov %rax,%rdi
83b9(3): seto %al
83bc(3): test %rdi,%rdi
83bf(2): js 0xc(%rip)
83c1(3): movzx %al,%eax
83c4(3): test %rax,%rax
83c7(2): jnz 0x4(%rip)
83c9(2): jmp 0xffffffc7(%rip)
83cb(4): sub $0x8,%rsp
83cf(5): call 0x211(%rip)

"xrealloc" :
83f0(3): test %rsi,%rsi
83f3(1): push %rbx
83f4(3): mov %rsi,%rbx
83f7(2): jnz 0x7(%rip)
83f9(3): test %rdi,%rdi
83fc(2): jnz 0x1c(%rip)
83fe(3): mov %rbx,%rsi
8401(5): call 0xffff982f(%rip)
8406(3): test %rax,%rax
8409(2): jnz 0x7(%rip)
840b(3): test %rbx,%rbx
840e(2): jnz 0x13(%rip)
8410(1): pop %rbx
8411(1): ret near (%rsp)
8412(6): nop 0x0(%rax,%rax,1)
8418(5): call 0xffff9598(%rip)
841d(2): xor %eax,%eax
841f(1): pop %rbx
8420(1): ret near (%rsp)
8421(5): call 0x1bf(%rip)

"xnrealloc" :
8430(3): mov %rsi,%rax
8433(3): mul %rax,%rdx,%rdx
8436(3): mov %rax,%rsi
8439(3): seto %al
843c(3): test %rsi,%rsi
843f(2): js 0xc(%rip)
8441(3): movzx %al,%eax
8444(3): test %rax,%rax
8447(2): jnz 0x4(%rip)
8449(2): jmp 0xffffffa7(%rip)
844b(4): sub $0x8,%rsp
844f(5): call 0x191(%rip)

"x2nrealloc" :
8460(3): test %rdi,%rdi
8463(3): mov %rdx,%r9
8466(3): mov (%rsi),%rcx
8469(2): jz 0x37(%rip)
846b(2): xor %edx,%edx
846d(a): mov $0x6148914691236517204,%rax
8477(3): div %r9,%rax
847a(3): cmp %rcx,%rax
847d(2): jbe 0x3e(%rip)
847f(3): mov %rcx,%rax
8482(3): shr $0x1,%rax
8485(5): lea 0x1(%rax,%rcx,1),%rcx
848a(3): mov %rcx,(%rsi)
848d(4): imul %r9,%rcx
8491(3): mov %rcx,%rsi
8494(5): jmp 0xffffff5c(%rip)
8499(7): nop 0x0(%rax)
84a0(3): test %rcx,%rcx
84a3(2): jz 0x25(%rip)
84a5(3): mov %rcx,%rax
84a8(3): mul %rax,%r9,%rdx
84ab(3): seto %dl
84ae(3): test %rax,%rax
84b1(3): movzx %dl,%edx
84b4(2): js 0x7(%rip)
84b6(3): test %rdx,%rdx
84b9(2): jz 0xffffffd1(%rip)
84bb(4): sub $0x8,%rsp
84bf(5): call 0x121(%rip)
84c4(4): nop 0x0(%rax)
84c8(2): xor %edx,%edx
84ca(5): mov $0x80,%eax
84cf(3): xor %r8d,%r8d
84d2(3): div %r9,%rax
84d5(3): test %rax,%rax
84d8(4): setz %r8b
84dc(4): lea 0x0(%r8,%rax,1),%rcx
84e0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
84f0(3): test %rdi,%rdi
84f3(3): mov (%rsi),%rax
84f6(2): jz 0x2a(%rip)
84f8(a): mov $0x6148914691236517203,%rdx
8502(3): cmp %rdx,%rax
8505(2): jnbe 0x2c(%rip)
8507(3): mov %rax,%rdx
850a(3): shr $0x1,%rdx
850d(5): lea 0x1(%rdx,%rax,1),%rax
8512(3): mov %rax,(%rsi)
8515(3): mov %rax,%rsi
8518(5): jmp 0xfffffed8(%rip)
851d(3): nop (%rax)
8520(3): test %rax,%rax
8523(5): mov $0x80,%edx
8528(4): cmove %rdx,%rax
852c(3): test %rax,%rax
852f(2): jns 0xffffffe3(%rip)
8531(4): sub $0x8,%rsp
8535(5): call 0xab(%rip)

"xzalloc" :
8540(1): push %rbx
8541(3): mov %rdi,%rbx
8544(5): call 0xfffffe4c(%rip)
8549(3): mov %rbx,%rdx
854c(2): xor %esi,%esi
854e(3): mov %rax,%rdi
8551(1): pop %rbx
8552(5): jmp 0xffff95ee(%rip)

"xcalloc" :
8560(3): mov %rdi,%rax
8563(4): sub $0x8,%rsp
8567(3): mul %rax,%rsi,%rdx
856a(3): seto %dl
856d(3): test %rax,%rax
8570(2): js 0x19(%rip)
8572(3): movzx %dl,%edx
8575(3): test %rdx,%rdx
8578(2): jnz 0x11(%rip)
857a(5): call 0xffff9616(%rip)
857f(3): test %rax,%rax
8582(2): jz 0x7(%rip)
8584(4): add $0x8,%rsp
8588(1): ret near (%rsp)
8589(5): call 0x57(%rip)

"xmemdup" :
8590(1): push %rbp
8591(1): push %rbx
8592(3): mov %rdi,%rbp
8595(3): mov %rsi,%rdi
8598(3): mov %rsi,%rbx
859b(4): sub $0x8,%rsp
859f(5): call 0xfffffdf1(%rip)
85a4(4): add $0x8,%rsp
85a8(3): mov %rbx,%rdx
85ab(3): mov %rbp,%rsi
85ae(1): pop %rbx
85af(1): pop %rbp
85b0(3): mov %rax,%rdi
85b3(5): jmp 0xffff960d(%rip)

"xstrdup" :
85c0(1): push %rbx
85c1(3): mov %rdi,%rbx
85c4(5): call 0xffff94dc(%rip)
85c9(3): mov %rbx,%rdi
85cc(4): lea 0x1(%rax),%rsi
85d0(1): pop %rbx
85d1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
85e0(7): lea 0x36a8(%rip),%rsi
85e7(4): sub $0x8,%rsp
85eb(5): mov $0x5,%edx
85f0(2): xor %edi,%edi
85f2(5): call 0xffff948e(%rip)
85f7(6): mov 0x205a53(%rip),%edi
85fd(7): lea 0x2df9(%rip),%rdx
8604(3): mov %rax,%rcx
8607(2): xor %esi,%esi
8609(2): xor %eax,%eax
860b(5): call 0xffff9675(%rip)
8610(5): call 0xffff93b0(%rip)

"xstrndup" :
8620(4): sub $0x8,%rsp
8624(5): call 0xffff953c(%rip)
8629(3): test %rax,%rax
862c(2): jz 0x7(%rip)
862e(4): add $0x8,%rsp
8632(1): ret near (%rsp)
8633(5): call 0xffffffad(%rip)

"xstrtol" :
8640(2): push %r15
8642(2): push %r14
8644(2): push %r13
8646(2): push %r12
8648(1): push %rbp
8649(1): push %rbx
864a(4): sub $0x28,%rsp
864e(9): mov $0x28,%rax
8657(5): mov %rax,0x18(%rsp)
865c(2): xor %eax,%eax
865e(3): cmp $0x24,%edx
8661(6): jnbe 0x66e(%rip)
8667(5): lea 0x10(%rsp),%rax
866c(3): test %rsi,%rsi
866f(3): mov %rsi,%rbx
8672(3): mov %rdi,%r12
8675(2): mov %edx,%ebp
8677(3): mov %rcx,%r14
867a(4): cmove %rax,%rbx
867e(3): mov %r8,%r15
8681(5): call 0xffff934f(%rip)
8686(2): mov %ebp,%edx
8688(6): mov $0x0,(%rax)
868e(3): mov %rbx,%rsi
8691(3): mov %r12,%rdi
8694(3): mov %rax,%r13
8697(5): call 0xffff9519(%rip)
869c(3): mov (%rbx),%rcx
869f(3): mov %rax,%rbp
86a2(3): cmp %r12,%rcx
86a5(2): jz 0x63(%rip)
86a7(4): mov 0x0(%r13),%eax
86ab(2): test %eax,%eax
86ad(2): jnz 0x43(%rip)
86af(3): xor %r12d,%r12d
86b2(3): test %r15,%r15
86b5(2): jz 0xf(%rip)
86b7(4): movzx (%rcx),%r13d
86bb(3): test %r13b,%r13b
86be(6): jnz 0x85(%rip)
86c4(3): mov %rbp,(%r14)
86c7(5): mov 0x18(%rsp),%rdi
86cc(9): xor $0x28,%rdi
86d5(3): mov %r12d,%eax
86d8(6): jnz 0x616(%rip)
86de(4): add $0x28,%rsp
86e2(1): pop %rbx
86e3(1): pop %rbp
86e4(2): pop %r12
86e6(2): pop %r13
86e8(2): pop %r14
86ea(2): pop %r15
86ec(1): ret near (%rsp)
86ed(3): nop (%rax)
86f0(3): cmp $0x22,%eax
86f3(6): mov $0x4,%r12d
86f9(2): jnz 0xffffffce(%rip)
86fb(6): mov $0x1,%r12d
8701(2): jmp 0xffffffb1(%rip)
8703(5): nop 0x0(%rax,%rax,1)
8708(3): test %r15,%r15
870b(6): jz 0x495(%rip)
8711(4): movzx (%rcx),%r13d
8715(5): mov %rcx,0x8(%rsp)
871a(6): mov $0x4,%r12d
8720(3): test %r13b,%r13b
8723(2): jz 0xffffffa4(%rip)
8725(4): movsx %r13b,%esi
8729(3): mov %r15,%rdi
872c(5): call 0xffff93b4(%rip)
8731(3): test %rax,%rax
8734(5): mov 0x8(%rsp),%rcx
8739(2): jz 0xffffff8e(%rip)
873b(5): mov $0x1,%ebp
8740(3): xor %r12d,%r12d
8743(4): movsx %r13b,%esi
8747(3): mov %r15,%rdi
874a(5): mov %rcx,0x8(%rsp)
874f(5): call 0xffff9391(%rip)
8754(3): test %rax,%rax
8757(5): mov 0x8(%rsp),%rcx
875c(2): jz 0x5c(%rip)
875e(4): lea 0xffffffbb(%r13),%eax
8762(2): cmp $0x2f,%al
8764(2): jnbe 0x64(%rip)
8766(a): mov $0x142129060940101,%rdx
8770(4): bt %rax,%rdx
8774(2): jnb 0x54(%rip)
8776(5): mov $0x30,%esi
877b(3): mov %r15,%rdi
877e(5): mov %rcx,0x8(%rsp)
8783(5): call 0xffff935d(%rip)
8788(3): test %rax,%rax
878b(5): mov 0x8(%rsp),%rcx
8790(2): jz 0x38(%rip)
8792(4): movzx 0x1(%rcx),%eax
8796(2): cmp $0x44,%al
8798(2): jz 0xe(%rip)
879a(2): cmp $0x69,%al
879c(6): jz 0x4ec(%rip)
87a2(2): cmp $0x42,%al
87a4(2): jnz 0x24(%rip)
87a6(5): mov $0x2,%edi
87ab(5): mov $0x3e8,%eax
87b0(2): jmp 0x22(%rip)
87b2(6): nop 0x0(%rax,%rax,1)
87b8(3): mov %rbp,(%r14)
87bb(4): or $0x2,%r12d
87bf(5): jmp 0xffffff08(%rip)
87c4(4): nop 0x0(%rax)
87c8(5): mov $0x1,%edi
87cd(5): mov $0x400,%eax
87d2(4): sub $0x42,%r13d
87d6(4): cmp $0x35,%r13b
87da(2): jnbe 0xffffffde(%rip)
87dc(7): lea 0x3505(%rip),%rsi
87e3(4): movzx %r13b,%r13d
87e7(4): movsxd 0x0(%rsi,%r13,4),%rdx
87eb(3): add %rsi,%rdx
87ee(2): jmp %rdx
87f0(a): mov $0x-9223372036854775808,%r8
87fa(3): movsxd %eax,%rsi
87fd(3): mov %r8,%rax
8800(2): cdq %rax
8802(3): idiv %rsi,%rax
8805(3): cmp %rax,%rbp
8808(3): mov %rax,%r9
880b(6): jl 0x4aa(%rip)
8811(a): mov $0x9223372036854775807,%r10
881b(3): mov %r10,%rax
881e(2): cdq %rax
8820(3): idiv %rsi,%rax
8823(3): cmp %rax,%rbp
8826(6): jnle 0x49c(%rip)
882c(4): imul %rsi,%rbp
8830(3): cmp %rbp,%r9
8833(6): jnle 0x482(%rip)
8839(3): cmp %rbp,%rax
883c(6): jl 0x486(%rip)
8842(4): imul %rsi,%rbp
8846(2): xor %eax,%eax
8848(3): or %eax,%r12d
884b(5): nop 0x0(%rax,%rax,1)
8850(3): movsxd %edi,%rax
8853(3): add %rax,%rcx
8856(3): mov %r12d,%eax
8859(3): or $0x2,%eax
885c(3): mov %rcx,(%rbx)
885f(3): cmp $0x0,(%rcx)
8862(4): cmovne %eax,%r12d
8866(5): jmp 0xfffffe5e(%rip)
886b(5): nop 0x0(%rax,%rax,1)
8870(a): mov $0x-4611686018427387904,%rax
887a(3): cmp %rax,%rbp
887d(6): jl 0x333(%rip)
8883(a): mov $0x4611686018427387903,%rax
888d(3): cmp %rax,%rbp
8890(6): jnle 0x3e0(%rip)
8896(3): add %rbp,%rbp
8899(2): jmp 0xffffffb7(%rip)
889b(5): nop 0x0(%rax,%rax,1)
88a0(a): mov $0x-18014398509481984,%rax
88aa(3): cmp %rax,%rbp
88ad(6): jl 0x303(%rip)
88b3(a): mov $0x18014398509481983,%rax
88bd(3): cmp %rax,%rbp
88c0(6): jnle 0x3b0(%rip)
88c6(4): shl/sal $0x9,%rbp
88ca(2): jmp 0xffffff86(%rip)
88cc(4): nop 0x0(%rax)
88d0(3): movsxd %eax,%rsi
88d3(a): mov $0x-9223372036854775808,%rax
88dd(6): mov $0x7,%r8d
88e3(2): cdq %rax
88e5(3): xor %r11d,%r11d
88e8(a): mov $0x9223372036854775807,%r9
88f2(3): idiv %rsi,%rax
88f5(3): mov %rax,%r10
88f8(2): jmp 0x27(%rip)
88fa(6): nop 0x0(%rax,%rax,1)
8900(3): mov %r9,%rax
8903(2): cdq %rax
8905(3): idiv %rsi,%rax
8908(3): cmp %rbp,%rax
890b(6): jl 0x2ed(%rip)
8911(4): imul %rsi,%rbp
8915(4): sub $0x1,%r8d
8919(6): jz 0x127(%rip)
891f(3): cmp %rbp,%r10
8922(2): jle 0xffffffde(%rip)
8924(6): mov $0x1,%r11d
892a(a): mov $0x-9223372036854775808,%rbp
8934(2): jmp 0xffffffe1(%rip)
8936(a): nop 0x0(%rax,%rax,1)
8940(3): movsxd %eax,%rsi
8943(a): mov $0x-9223372036854775808,%rax
894d(6): mov $0x8,%r8d
8953(2): cdq %rax
8955(3): xor %r11d,%r11d
8958(a): mov $0x9223372036854775807,%r9
8962(3): idiv %rsi,%rax
8965(3): mov %rax,%r10
8968(2): jmp 0x27(%rip)
896a(6): nop 0x0(%rax,%rax,1)
8970(3): mov %r9,%rax
8973(2): cdq %rax
8975(3): idiv %rsi,%rax
8978(3): cmp %rbp,%rax
897b(6): jl 0x24d(%rip)
8981(4): imul %rsi,%rbp
8985(4): sub $0x1,%r8d
8989(6): jz 0xb7(%rip)
898f(3): cmp %rbp,%r10
8992(2): jle 0xffffffde(%rip)
8994(6): mov $0x1,%r11d
899a(a): mov $0x-9223372036854775808,%rbp
89a4(2): jmp 0xffffffe1(%rip)
89a6(a): nop 0x0(%rax,%rax,1)
89b0(a): mov $0x-9223372036854775808,%r8
89ba(3): movsxd %eax,%rsi
89bd(3): mov %r8,%rax
89c0(2): cdq %rax
89c2(3): idiv %rsi,%rax
89c5(3): cmp %rax,%rbp
89c8(6): jl 0x1e8(%rip)
89ce(4): sub $0x1,%r8
89d2(3): mov %r8,%rax
89d5(2): cdq %rax
89d7(3): idiv %rsi,%rax
89da(3): cmp %rax,%rbp
89dd(6): jnle 0x293(%rip)
89e3(4): imul %rsi,%rbp
89e7(5): jmp 0xfffffe69(%rip)
89ec(4): nop 0x0(%rax)
89f0(3): movsxd %eax,%rsi
89f3(a): mov $0x-9223372036854775808,%rax
89fd(6): mov $0x3,%r8d
8a03(2): cdq %rax
8a05(3): xor %r11d,%r11d
8a08(a): mov $0x9223372036854775807,%r9
8a12(3): idiv %rsi,%rax
8a15(3): mov %rax,%r10
8a18(3): cmp %rbp,%r10
8a1b(6): jnle 0x1f5(%rip)
8a21(3): mov %r9,%rax
8a24(2): cdq %rax
8a26(3): idiv %rsi,%rax
8a29(3): cmp %rbp,%rax
8a2c(6): jl 0x274(%rip)
8a32(4): imul %rsi,%rbp
8a36(4): sub $0x1,%r8d
8a3a(2): jnz 0xffffffde(%rip)
8a3c(4): nop 0x0(%rax)
8a40(3): or %r11d,%r12d
8a43(5): jmp 0xfffffe0d(%rip)
8a48(8): nop 0x0(%rax,%rax,1)
8a50(3): movsxd %eax,%rsi
8a53(a): mov $0x-9223372036854775808,%rax
8a5d(6): mov $0x6,%r8d
8a63(2): cdq %rax
8a65(3): xor %r11d,%r11d
8a68(a): mov $0x9223372036854775807,%r9
8a72(3): idiv %rsi,%rax
8a75(3): mov %rax,%r10
8a78(2): jmp 0x23(%rip)
8a7a(6): nop 0x0(%rax,%rax,1)
8a80(3): mov %r9,%rax
8a83(2): cdq %rax
8a85(3): idiv %rsi,%rax
8a88(3): cmp %rbp,%rax
8a8b(6): jl 0x19d(%rip)
8a91(4): imul %rsi,%rbp
8a95(4): sub $0x1,%r8d
8a99(2): jz 0xffffffa7(%rip)
8a9b(3): cmp %rbp,%r10
8a9e(2): jle 0xffffffe2(%rip)
8aa0(6): mov $0x1,%r11d
8aa6(a): mov $0x-9223372036854775808,%rbp
8ab0(2): jmp 0xffffffe5(%rip)
8ab2(6): nop 0x0(%rax,%rax,1)
8ab8(3): movsxd %eax,%rsi
8abb(a): mov $0x-9223372036854775808,%rax
8ac5(6): mov $0x5,%r8d
8acb(2): cdq %rax
8acd(3): xor %r11d,%r11d
8ad0(a): mov $0x9223372036854775807,%r9
8ada(3): idiv %rsi,%rax
8add(3): mov %rax,%r10
8ae0(2): jmp 0x27(%rip)
8ae2(6): nop 0x0(%rax,%rax,1)
8ae8(3): mov %r9,%rax
8aeb(2): cdq %rax
8aed(3): idiv %rsi,%rax
8af0(3): cmp %rbp,%rax
8af3(6): jl 0x14d(%rip)
8af9(4): imul %rsi,%rbp
8afd(4): sub $0x1,%r8d
8b01(6): jz 0xffffff3f(%rip)
8b07(3): cmp %rbp,%r10
8b0a(2): jle 0xffffffde(%rip)
8b0c(6): mov $0x1,%r11d
8b12(a): mov $0x-9223372036854775808,%rbp
8b1c(2): jmp 0xffffffe1(%rip)
8b1e(2): nop 
8b20(a): mov $0x-9007199254740992,%rax
8b2a(3): cmp %rax,%rbp
8b2d(6): jl 0x83(%rip)
8b33(a): mov $0x9007199254740991,%rax
8b3d(3): cmp %rax,%rbp
8b40(6): jnle 0x130(%rip)
8b46(4): shl/sal $0xa,%rbp
8b4a(5): jmp 0xfffffd06(%rip)
8b4f(1): nop 
8b50(3): movsxd %eax,%rsi
8b53(a): mov $0x-9223372036854775808,%rax
8b5d(6): mov $0x4,%r8d
8b63(2): cdq %rax
8b65(3): xor %r11d,%r11d
8b68(a): mov $0x9223372036854775807,%r9
8b72(3): idiv %rsi,%rax
8b75(3): mov %rax,%r10
8b78(3): cmp %rbp,%r10
8b7b(2): jnle 0x65(%rip)
8b7d(3): mov %r9,%rax
8b80(2): cdq %rax
8b82(3): idiv %rsi,%rax
8b85(3): cmp %rbp,%rax
8b88(6): jl 0xd0(%rip)
8b8e(4): imul %rsi,%rbp
8b92(4): sub $0x1,%r8d
8b96(2): jnz 0xffffffe2(%rip)
8b98(5): jmp 0xfffffea8(%rip)
8b9d(3): nop (%rax)
8ba0(6): mov $0x4,%r12d
8ba6(5): jmp 0xfffffb21(%rip)
8bab(5): nop 0x0(%rax,%rax,1)
8bb0(6): mov $0x1,%r12d
8bb6(a): mov $0x-9223372036854775808,%rbp
8bc0(5): jmp 0xfffffc90(%rip)
8bc5(3): nop (%rax)
8bc8(6): mov $0x1,%r11d
8bce(a): mov $0x9223372036854775807,%rbp
8bd8(5): jmp 0xfffffdad(%rip)
8bdd(3): nop (%rax)
8be0(6): mov $0x1,%r11d
8be6(a): mov $0x-9223372036854775808,%rbp
8bf0(2): jmp 0xffffffa2(%rip)
8bf2(6): nop 0x0(%rax,%rax,1)
8bf8(6): mov $0x1,%r11d
8bfe(a): mov $0x9223372036854775807,%rbp
8c08(5): jmp 0xfffffd0d(%rip)
8c0d(3): nop (%rax)
8c10(6): mov $0x1,%r11d
8c16(a): mov $0x-9223372036854775808,%rbp
8c20(5): jmp 0xfffffe16(%rip)
8c25(3): nop (%rax)
8c28(6): mov $0x1,%r11d
8c2e(a): mov $0x9223372036854775807,%rbp
8c38(5): jmp 0xfffffe5d(%rip)
8c3d(3): nop (%rax)
8c40(6): mov $0x1,%r11d
8c46(a): mov $0x9223372036854775807,%rbp
8c50(5): jmp 0xfffffead(%rip)
8c55(3): nop (%rax)
8c58(6): mov $0x1,%r11d
8c5e(a): mov $0x9223372036854775807,%rbp
8c68(5): jmp 0xffffff2a(%rip)
8c6d(3): nop (%rax)
8c70(6): mov $0x1,%r12d
8c76(a): mov $0x9223372036854775807,%rbp
8c80(5): jmp 0xfffffbd0(%rip)
8c85(3): nop (%rax)
8c88(2): xor %edi,%edi
8c8a(4): cmp $0x42,0x2(%rcx)
8c8e(5): mov $0x400,%eax
8c93(4): setz %dil
8c97(4): lea 0x1(%rdi,%rdi,1),%edi
8c9b(5): jmp 0xfffffb37(%rip)
8ca0(6): mov $0x1,%r11d
8ca6(a): mov $0x9223372036854775807,%rbp
8cb0(5): jmp 0xfffffd86(%rip)
8cb5(5): mov $0x1,%eax
8cba(3): mov %r8,%rbp
8cbd(5): jmp 0xfffffb8b(%rip)
8cc2(5): mov $0x1,%eax
8cc7(3): mov %r10,%rbp
8cca(5): jmp 0xfffffb7e(%rip)
8ccf(7): lea 0x30ea(%rip),%rcx
8cd6(7): lea 0x2fc3(%rip),%rsi
8cdd(7): lea 0x2fdc(%rip),%rdi
8ce4(5): mov $0x54,%edx
8ce9(5): call 0xffff8e37(%rip)
8cee(5): call 0xffff8dc2(%rip)

"xstrtoumax" :
8d00(2): push %r15
8d02(2): push %r14
8d04(2): push %r13
8d06(2): push %r12
8d08(1): push %rbp
8d09(1): push %rbx
8d0a(4): sub $0x28,%rsp
8d0e(9): mov $0x28,%rax
8d17(5): mov %rax,0x18(%rsp)
8d1c(2): xor %eax,%eax
8d1e(3): cmp $0x24,%edx
8d21(6): jnbe 0x364(%rip)
8d27(5): lea 0x10(%rsp),%rax
8d2c(3): mov %rsi,%r15
8d2f(3): test %rsi,%rsi
8d32(3): mov %rdi,%rbp
8d35(4): mov %edx,0x8(%rsp)
8d39(3): mov %rcx,%r14
8d3c(3): mov %r8,%r13
8d3f(4): cmove %rax,%r15
8d43(5): call 0xffff8c8d(%rip)
8d48(6): mov $0x0,(%rax)
8d4e(3): mov %rax,%r12
8d51(4): movzx 0x0(%rbp),%ebx
8d55(5): call 0xffff8fdb(%rip)
8d5a(4): mov 0x8(%rsp),%edx
8d5e(3): mov (%rax),%rsi
8d61(3): mov %rbp,%rax
8d64(2): jmp 0x13(%rip)
8d66(a): nop 0x0(%rax,%rax,1)
8d70(4): add $0x1,%rax
8d74(3): movzx (%rax),%ebx
8d77(3): movzx %bl,%ecx
8d7a(5): test $0x20,0x1(%rsi,%rcx,2)
8d7f(2): jnz 0xfffffff1(%rip)
8d81(3): cmp $0x2d,%bl
8d84(2): jz 0x54(%rip)
8d86(2): xor %ecx,%ecx
8d88(3): mov %r15,%rsi
8d8b(3): mov %rbp,%rdi
8d8e(5): call 0xffff8da2(%rip)
8d93(3): mov (%r15),%rcx
8d96(3): mov %rax,%rbx
8d99(3): cmp %rbp,%rcx
8d9c(2): jz 0x2c(%rip)
8d9e(4): mov (%r12),%eax
8da2(2): test %eax,%eax
8da4(2): jz 0x64(%rip)
8da6(3): cmp $0x22,%eax
8da9(5): mov $0x1,%ebp
8dae(2): jnz 0x2a(%rip)
8db0(3): test %r13,%r13
8db3(2): jz 0xb(%rip)
8db5(4): movzx (%rcx),%r12d
8db9(3): test %r12b,%r12b
8dbc(2): jnz 0x7b(%rip)
8dbe(3): mov %rbx,(%r14)
8dc1(2): jmp 0x1c(%rip)
8dc3(5): nop 0x0(%rax,%rax,1)
8dc8(3): test %r13,%r13
8dcb(5): mov %rcx,0x8(%rsp)
8dd0(2): jnz 0x40(%rip)
8dd2(6): nop 0x0(%rax,%rax,1)
8dd8(5): mov $0x4,%ebp
8ddd(5): mov 0x18(%rsp),%rdi
8de2(9): xor $0x28,%rdi
8deb(2): mov %ebp,%eax
8ded(6): jnz 0x293(%rip)
8df3(4): add $0x28,%rsp
8df7(1): pop %rbx
8df8(1): pop %rbp
8df9(2): pop %r12
8dfb(2): pop %r13
8dfd(2): pop %r14
8dff(2): pop %r15
8e01(1): ret near (%rsp)
8e02(6): nop 0x0(%rax,%rax,1)
8e08(2): xor %ebp,%ebp
8e0a(2): jmp 0xffffffa6(%rip)
8e0c(4): nop 0x0(%rax)
8e10(5): movzx 0x0(%rbp),%r12d
8e15(3): test %r12b,%r12b
8e18(2): jz 0xffffffc0(%rip)
8e1a(4): movsx %r12b,%esi
8e1e(3): mov %r13,%rdi
8e21(2): xor %ebp,%ebp
8e23(5): call 0xffff8cbd(%rip)
8e28(3): test %rax,%rax
8e2b(5): mov $0x1,%ebx
8e30(5): mov 0x8(%rsp),%rcx
8e35(2): jz 0xffffffa3(%rip)
8e37(4): movsx %r12b,%esi
8e3b(3): mov %r13,%rdi
8e3e(5): mov %rcx,0x8(%rsp)
8e43(5): call 0xffff8c9d(%rip)
8e48(3): test %rax,%rax
8e4b(5): mov 0x8(%rsp),%rcx
8e50(6): jz 0xcc(%rip)
8e56(5): lea 0xffffffbb(%r12),%eax
8e5b(2): cmp $0x2f,%al
8e5d(2): jnbe 0x53(%rip)
8e5f(a): mov $0x142129060940101,%rdx
8e69(4): bt %rax,%rdx
8e6d(2): jnb 0x43(%rip)
8e6f(5): mov $0x30,%esi
8e74(3): mov %r13,%rdi
8e77(5): mov %rcx,0x8(%rsp)
8e7c(5): call 0xffff8c64(%rip)
8e81(3): test %rax,%rax
8e84(5): mov 0x8(%rsp),%rcx
8e89(2): jz 0x27(%rip)
8e8b(4): movzx 0x1(%rcx),%eax
8e8f(2): cmp $0x44,%al
8e91(2): jz 0xe(%rip)
8e93(2): cmp $0x69,%al
8e95(6): jz 0x1d3(%rip)
8e9b(2): cmp $0x42,%al
8e9d(2): jnz 0x13(%rip)
8e9f(5): mov $0x2,%edi
8ea4(5): mov $0x3e8,%esi
8ea9(2): jmp 0x11(%rip)
8eab(5): nop 0x0(%rax,%rax,1)
8eb0(5): mov $0x1,%edi
8eb5(5): mov $0x400,%esi
8eba(4): sub $0x42,%r12d
8ebe(4): cmp $0x35,%r12b
8ec2(2): jnbe 0x5a(%rip)
8ec4(7): lea 0x2efd(%rip),%rdx
8ecb(4): movzx %r12b,%r12d
8ecf(4): movsxd 0x0(%rdx,%r12,4),%rax
8ed3(3): add %rdx,%rax
8ed6(2): jmp %rax
8ed8(3): mov %rbx,%rax
8edb(3): mul %rax,%rsi,%rdx
8ede(6): jo 0x1f3(%rip)
8ee4(3): xor %r8d,%r8d
8ee7(3): mul %rax,%rsi,%rdx
8eea(6): jo 0x1d8(%rip)
8ef0(3): mov %rax,%rbx
8ef3(3): or %r8d,%ebp
8ef6(a): nop 0x0(%rax,%rax,1)
8f00(3): movsxd %edi,%rdi
8f03(2): mov %ebp,%eax
8f05(3): add %rdi,%rcx
8f08(3): or $0x2,%eax
8f0b(3): mov %rcx,(%r15)
8f0e(3): cmp $0x0,(%rcx)
8f11(3): mov %rbx,(%r14)
8f14(3): cmovne %eax,%ebp
8f17(5): jmp 0xfffffec6(%rip)
8f1c(3): mov %rbx,(%r14)
8f1f(3): or $0x2,%ebp
8f22(5): jmp 0xfffffebb(%rip)
8f27(5): mov $0x2,%edx
8f2c(3): mov %rdx,%rax
8f2f(3): mul %rax,%rbx,%rdx
8f32(6): jo 0x9c(%rip)
8f38(3): add %rbx,%rbx
8f3b(2): jmp 0xffffffc5(%rip)
8f3d(5): mov $0x200,%edx
8f42(3): mov %rdx,%rax
8f45(3): mul %rax,%rbx,%rdx
8f48(6): jo 0x86(%rip)
8f4e(4): shl/sal $0x9,%rbx
8f52(2): jmp 0xffffffae(%rip)
8f54(6): mov $0x7,%r8d
8f5a(3): xor %r9d,%r9d
8f5d(3): nop (%rax)
8f60(3): mov %rbx,%rax
8f63(3): mul %rax,%rsi,%rdx
8f66(3): mov %rax,%rbx
8f69(6): jo 0x195(%rip)
8f6f(4): sub $0x1,%r8d
8f73(2): jnz 0xffffffed(%rip)
8f75(3): or %r9d,%ebp
8f78(2): jmp 0xffffff88(%rip)
8f7a(6): mov $0x8,%r8d
8f80(3): xor %r9d,%r9d
8f83(5): nop 0x0(%rax,%rax,1)
8f88(3): mov %rbx,%rax
8f8b(3): mul %rax,%rsi,%rdx
8f8e(3): mov %rax,%rbx
8f91(6): jo 0x14f(%rip)
8f97(4): sub $0x1,%r8d
8f9b(2): jnz 0xffffffed(%rip)
8f9d(2): jmp 0xffffffd8(%rip)
8f9f(6): mov $0x4,%r8d
8fa5(3): xor %r9d,%r9d
8fa8(3): mov %rbx,%rax
8fab(3): mul %rax,%rsi,%rdx
8fae(3): mov %rax,%rbx
8fb1(6): jo 0x102(%rip)
8fb7(4): sub $0x1,%r8d
8fbb(2): jnz 0xffffffed(%rip)
8fbd(2): jmp 0xffffffb8(%rip)
8fbf(3): mov %rbx,%rax
8fc2(3): mul %rax,%rsi,%rdx
8fc5(3): mov %rax,%rbx
8fc8(6): jno 0xffffff38(%rip)
8fce(5): mov $0x1,%ebp
8fd3(4): or $0xffffffff,%rbx
8fd7(5): jmp 0xffffff29(%rip)
8fdc(4): nop 0x0(%rax)
8fe0(6): mov $0x5,%r8d
8fe6(3): xor %r9d,%r9d
8fe9(3): mov %rbx,%rax
8fec(3): mul %rax,%rsi,%rdx
8fef(3): mov %rax,%rbx
8ff2(6): jo 0xfd(%rip)
8ff8(4): sub $0x1,%r8d
8ffc(2): jnz 0xffffffed(%rip)
8ffe(5): jmp 0xffffff77(%rip)
9003(6): mov $0x6,%r8d
9009(3): xor %r9d,%r9d
900c(3): mov %rbx,%rax
900f(3): mul %rax,%rsi,%rdx
9012(3): mov %rax,%rbx
9015(6): jo 0x8f(%rip)
901b(4): sub $0x1,%r8d
901f(2): jnz 0xffffffed(%rip)
9021(5): jmp 0xffffff54(%rip)
9026(5): mov $0x400,%edx
902b(3): mov %rdx,%rax
902e(3): mul %rax,%rbx,%rdx
9031(2): jo 0xffffff9d(%rip)
9033(4): shl/sal $0xa,%rbx
9037(5): jmp 0xfffffec9(%rip)
903c(3): mov %rbx,%rax
903f(3): mul %rax,%rsi,%rdx
9042(6): jo 0xcb(%rip)
9048(3): xor %r8d,%r8d
904b(3): mul %rax,%rsi,%rdx
904e(6): jno 0xfffffe99(%rip)
9054(6): mov $0x1,%r8d
905a(4): or $0xffffffff,%rax
905e(5): jmp 0xfffffe89(%rip)
9063(5): nop 0x0(%rax,%rax,1)
9068(2): xor %edi,%edi
906a(4): cmp $0x42,0x2(%rcx)
906e(5): mov $0x400,%esi
9073(4): setz %dil
9077(4): lea 0x1(%rdi,%rdi,1),%edi
907b(5): jmp 0xfffffe3f(%rip)
9080(5): call 0xffff8a30(%rip)
9085(7): lea 0x2e14(%rip),%rcx
908c(7): lea 0x2c0d(%rip),%rsi
9093(7): lea 0x2c26(%rip),%rdi
909a(5): mov $0x54,%edx
909f(5): call 0xffff8a81(%rip)
90a4(6): mov $0x1,%r9d
90aa(4): or $0xffffffff,%rbx
90ae(5): jmp 0xffffff6d(%rip)
90b3(6): mov $0x1,%r9d
90b9(4): or $0xffffffff,%rbx
90bd(5): jmp 0xfffffefa(%rip)
90c2(6): mov $0x1,%r8d
90c8(4): or $0xffffffff,%rbx
90cc(5): jmp 0xfffffe27(%rip)
90d1(4): or $0xffffffff,%rax
90d5(6): mov $0x1,%r8d
90db(5): jmp 0xfffffe0c(%rip)
90e0(6): mov $0x1,%r9d
90e6(4): or $0xffffffff,%rbx
90ea(5): jmp 0xfffffead(%rip)
90ef(6): mov $0x1,%r9d
90f5(4): or $0xffffffff,%rbx
90f9(5): jmp 0xfffffeff(%rip)
90fe(6): mov $0x1,%r9d
9104(4): or $0xffffffff,%rbx
9108(5): jmp 0xfffffe67(%rip)
910d(6): mov $0x1,%r8d
9113(4): or $0xffffffff,%rax
9117(5): jmp 0xffffff34(%rip)

"rpl_mbrtowc" :
9120(2): push %r13
9122(2): push %r12
9124(3): mov %rsi,%r13
9127(1): push %rbp
9128(1): push %rbx
9129(3): mov %rdi,%rbx
912c(3): mov %rdx,%r12
912f(4): sub $0x18,%rsp
9133(9): mov $0x28,%rax
913c(5): mov %rax,0x8(%rsp)
9141(2): xor %eax,%eax
9143(5): lea 0x4(%rsp),%rax
9148(3): test %rdi,%rdi
914b(4): cmove %rax,%rbx
914f(3): mov %rbx,%rdi
9152(5): call 0xffff897e(%rip)
9157(4): cmp $0xfffffffd,%rax
915b(3): mov %rax,%rbp
915e(2): jbe 0x22(%rip)
9160(3): test %r12,%r12
9163(2): jz 0x1d(%rip)
9165(2): xor %edi,%edi
9167(5): call 0xc9(%rip)
916c(2): test %al,%al
916e(2): jnz 0x12(%rip)
9170(5): movzx 0x0(%r13),%eax
9175(5): mov $0x1,%ebp
917a(2): mov %eax,(%rbx)
917c(4): nop 0x0(%rax)
9180(5): mov 0x8(%rsp),%rdx
9185(9): xor $0x28,%rdx
918e(3): mov %rbp,%rax
9191(2): jnz 0xd(%rip)
9193(4): add $0x18,%rsp
9197(1): pop %rbx
9198(1): pop %rbp
9199(2): pop %r12
919b(2): pop %r13
919d(1): ret near (%rsp)
919e(5): call 0xffff8912(%rip)

"close_stream" :
91b0(2): push %r12
91b2(1): push %rbp
91b3(3): mov %rdi,%rbp
91b6(1): push %rbx
91b7(5): call 0xffff8859(%rip)
91bc(3): mov 0x0(%rbp),%ebx
91bf(3): mov %rbp,%rdi
91c2(3): mov %rax,%r12
91c5(5): call 0x10b(%rip)
91ca(3): and $0x20,%ebx
91cd(2): test %ebx,%ebx
91cf(2): jnz 0x19(%rip)
91d1(2): test %eax,%eax
91d3(2): jz 0xc(%rip)
91d5(3): test %r12,%r12
91d8(5): mov $0xffffffff,%eax
91dd(2): jz 0x3b(%rip)
91df(1): pop %rbx
91e0(1): pop %rbp
91e1(2): pop %r12
91e3(1): ret near (%rsp)
91e4(4): nop 0x0(%rax)
91e8(2): test %eax,%eax
91ea(2): jnz 0x1e(%rip)
91ec(5): call 0xffff87e4(%rip)
91f1(6): mov $0x0,(%rax)
91f7(5): mov $0xffffffff,%eax
91fc(1): pop %rbx
91fd(1): pop %rbp
91fe(2): pop %r12
9200(1): ret near (%rsp)
9201(7): nop 0x0(%rax)
9208(1): pop %rbx
9209(5): mov $0xffffffff,%eax
920e(1): pop %rbp
920f(2): pop %r12
9211(1): ret near (%rsp)
9212(6): nop 0x0(%rax,%rax,1)
9218(5): call 0xffff87b8(%rip)
921d(3): cmp $0x9,(%rax)
9220(1): pop %rbx
9221(1): pop %rbp
9222(2): pop %r12
9224(3): setnz %al
9227(3): movzx %al,%eax
922a(2): neg %eax
922c(1): ret near (%rsp)

"hard_locale" :
9230(4): sub $0x8,%rsp
9234(2): xor %esi,%esi
9236(5): call 0xffff8a0a(%rip)
923b(3): mov %rax,%rdx
923e(5): mov $0x1,%eax
9243(3): test %rdx,%rdx
9246(2): jz 0x1f(%rip)
9248(7): lea 0x2c5c(%rip),%rdi
924f(5): mov $0x2,%ecx
9254(3): mov %rdx,%rsi
9257(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9259(3): setnbe %cl
925c(3): sbb $0x0,%cl
925f(2): xor %eax,%eax
9261(2): test %cl,%cl
9263(2): jnz 0xd(%rip)
9265(4): add $0x8,%rsp
9269(1): ret near (%rsp)
926a(6): nop 0x0(%rax,%rax,1)
9270(7): lea 0x2c36(%rip),%rdi
9277(5): mov $0x6,%ecx
927c(3): mov %rdx,%rsi
927f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9281(3): setnbe %al
9284(2): sbb $0x0,%al
9286(2): test %al,%al
9288(3): setnz %al
928b(4): add $0x8,%rsp
928f(1): ret near (%rsp)

"locale_charset" :
9290(4): sub $0x8,%rsp
9294(5): mov $0xe,%edi
9299(5): call 0xffff8977(%rip)
929e(3): test %rax,%rax
92a1(2): jz 0x1f(%rip)
92a3(3): cmp $0x0,(%rax)
92a6(7): lea 0x2c06(%rip),%rdx
92ad(4): cmove %rdx,%rax
92b1(4): add $0x8,%rsp
92b5(1): ret near (%rsp)
92b6(a): nop 0x0(%rax,%rax,1)
92c0(7): lea 0x2bec(%rip),%rax
92c7(4): add $0x8,%rsp
92cb(1): ret near (%rsp)

"rpl_fclose" :
92d0(2): push %r12
92d2(1): push %rbp
92d3(1): push %rbx
92d4(3): mov %rdi,%rbx
92d7(5): call 0xffff88f9(%rip)
92dc(2): test %eax,%eax
92de(3): mov %rbx,%rdi
92e1(2): js 0x56(%rip)
92e3(5): call 0xffff893d(%rip)
92e8(2): test %eax,%eax
92ea(2): jnz 0x2e(%rip)
92ec(3): mov %rbx,%rdi
92ef(5): call 0x61(%rip)
92f4(2): test %eax,%eax
92f6(2): jz 0x3e(%rip)
92f8(5): call 0xffff86d8(%rip)
92fd(3): mov (%rax),%r12d
9300(3): mov %rbx,%rdi
9303(3): mov %rax,%rbp
9306(5): call 0xffff875a(%rip)
930b(3): test %r12d,%r12d
930e(2): jnz 0x32(%rip)
9310(1): pop %rbx
9311(1): pop %rbp
9312(2): pop %r12
9314(1): ret near (%rsp)
9315(3): nop (%rax)
9318(3): mov %rbx,%rdi
931b(5): call 0xffff88b5(%rip)
9320(2): xor %esi,%esi
9322(5): mov $0x1,%edx
9327(2): mov %eax,%edi
9329(5): call 0xffff87e7(%rip)
932e(4): cmp $0xffffffff,%rax
9332(2): jnz 0xffffffba(%rip)
9334(3): mov %rbx,%rdi
9337(1): pop %rbx
9338(1): pop %rbp
9339(2): pop %r12
933b(5): jmp 0xffff8725(%rip)
9340(4): mov %r12d,0x0(%rbp)
9344(5): mov $0xffffffff,%eax
9349(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
9350(3): test %rdi,%rdi
9353(1): push %rbx
9354(3): mov %rdi,%rbx
9357(2): jz 0x13(%rip)
9359(5): call 0xffff88c7(%rip)
935e(2): test %eax,%eax
9360(2): jz 0xa(%rip)
9362(6): test $0x100,(%rbx)
9368(2): jnz 0x10(%rip)
936a(3): mov %rbx,%rdi
936d(1): pop %rbx
936e(5): jmp 0xffff8892(%rip)
9373(5): nop 0x0(%rax,%rax,1)
9378(3): mov %rbx,%rdi
937b(5): mov $0x1,%edx
9380(2): xor %esi,%esi
9382(5): call 0xe(%rip)
9387(3): mov %rbx,%rdi
938a(1): pop %rbx
938b(5): jmp 0xffff8875(%rip)

"rpl_fseeko" :
9390(4): mov 0x8(%rdi),%rax
9394(4): cmp %rax,0x10(%rdi)
9398(2): jz 0x8(%rip)
939a(5): jmp 0xffff88f6(%rip)
939f(1): nop 
93a0(4): mov 0x20(%rdi),%rax
93a4(4): cmp %rax,0x28(%rdi)
93a8(2): jnz 0xfffffff2(%rip)
93aa(5): cmp $0x0,0x48(%rdi)
93af(2): jnz 0xffffffeb(%rip)
93b1(2): push %r12
93b3(1): push %rbp
93b4(3): mov %edx,%r12d
93b7(1): push %rbx
93b8(3): mov %rsi,%rbp
93bb(3): mov %rdi,%rbx
93be(5): call 0xffff8812(%rip)
93c3(3): mov %r12d,%edx
93c6(3): mov %rbp,%rsi
93c9(2): mov %eax,%edi
93cb(5): call 0xffff8745(%rip)
93d0(4): cmp $0xffffffff,%rax
93d4(2): jz 0xe(%rip)
93d6(3): and $0xef,(%rbx)
93d9(7): mov %rax,0x90(%rbx)
93e0(2): xor %eax,%eax
93e2(1): pop %rbx
93e3(1): pop %rbp
93e4(2): pop %r12
93e6(1): ret near (%rsp)

"__libc_csu_init" :
93f0(2): push %r15
93f2(2): push %r14
93f4(3): mov %rdx,%r15
93f7(2): push %r13
93f9(2): push %r12
93fb(7): lea 0x20442e(%rip),%r12
9402(1): push %rbp
9403(7): lea 0x20442e(%rip),%rbp
940a(1): push %rbx
940b(3): mov %edi,%r13d
940e(3): mov %rsi,%r14
9411(3): sub %r12,%rbp
9414(4): sub $0x8,%rsp
9418(4): sar $0x3,%rbp
941c(5): call 0xffff8554(%rip)
9421(3): test %rbp,%rbp
9424(2): jz 0x22(%rip)
9426(2): xor %ebx,%ebx
9428(8): nop 0x0(%rax,%rax,1)
9430(3): mov %r15,%rdx
9433(3): mov %r14,%rsi
9436(3): mov %r13d,%edi
9439(4): call 0x0(%r12,%rbx,8)
943d(4): add $0x1,%rbx
9441(3): cmp %rbx,%rbp
9444(2): jnz 0xffffffec(%rip)
9446(4): add $0x8,%rsp
944a(1): pop %rbx
944b(1): pop %rbp
944c(2): pop %r12
944e(2): pop %r13
9450(2): pop %r14
9452(2): pop %r15
9454(1): ret near (%rsp)

"atexit" :
9470(7): mov 0x204b91(%rip),%rdx
9477(2): xor %esi,%esi
9479(5): jmp 0xffff8827(%rip)

"_fini" :
9480(4): sub $0x8,%rsp
9484(4): add $0x8,%rsp
9488(1): ret near (%rsp)

