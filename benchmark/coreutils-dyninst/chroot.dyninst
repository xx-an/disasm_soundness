
"endgrent@plt" :
16d0(6): jmp 0x20770a(%rip)
16d6(5): push $0x0

"getenv@plt" :
16e0(6): jmp 0x207702(%rip)
16e6(5): push $0x1

"free@plt" :
16f0(6): jmp 0x2076fa(%rip)
16f6(5): push $0x2

"abort@plt" :
1700(6): jmp 0x2076f2(%rip)
1706(5): push $0x3

"__errno_location@plt" :
1710(6): jmp 0x2076ea(%rip)
1716(5): push $0x4

"strncmp@plt" :
1720(6): jmp 0x2076e2(%rip)
1726(5): push $0x5

"_exit@plt" :
1730(6): jmp 0x2076da(%rip)
1736(5): push $0x6

"chroot@plt" :
1740(6): jmp 0x2076d2(%rip)
1746(5): push $0x7

"__fpending@plt" :
1750(6): jmp 0x2076ca(%rip)
1756(5): push $0x8

"textdomain@plt" :
1760(6): jmp 0x2076c2(%rip)
1766(5): push $0x9

"fclose@plt" :
1770(6): jmp 0x2076ba(%rip)
1776(5): push $0xa

"getpwuid@plt" :
1780(6): jmp 0x2076b2(%rip)
1786(5): push $0xb

"bindtextdomain@plt" :
1790(6): jmp 0x2076aa(%rip)
1796(5): push $0xc

"dcgettext@plt" :
17a0(6): jmp 0x2076a2(%rip)
17a6(5): push $0xd

"__ctype_get_mb_cur_max@plt" :
17b0(6): jmp 0x20769a(%rip)
17b6(5): push $0xe

"strlen@plt" :
17c0(6): jmp 0x207692(%rip)
17c6(5): push $0xf

"chdir@plt" :
17d0(6): jmp 0x20768a(%rip)
17d6(5): push $0x10

"__stack_chk_fail@plt" :
17e0(6): jmp 0x207682(%rip)
17e6(5): push $0x11

"getopt_long@plt" :
17f0(6): jmp 0x20767a(%rip)
17f6(5): push $0x12

"mbrtowc@plt" :
1800(6): jmp 0x207672(%rip)
1806(5): push $0x13

"strchr@plt" :
1810(6): jmp 0x20766a(%rip)
1816(5): push $0x14

"getgrgid@plt" :
1820(6): jmp 0x207662(%rip)
1826(5): push $0x15

"strrchr@plt" :
1830(6): jmp 0x20765a(%rip)
1836(5): push $0x16

"lseek@plt" :
1840(6): jmp 0x207652(%rip)
1846(5): push $0x17

"__assert_fail@plt" :
1850(6): jmp 0x20764a(%rip)
1856(5): push $0x18

"memset@plt" :
1860(6): jmp 0x207642(%rip)
1866(5): push $0x19

"canonicalize_file_name@plt" :
1870(6): jmp 0x20763a(%rip)
1876(5): push $0x1a

"setgroups@plt" :
1880(6): jmp 0x207632(%rip)
1886(5): push $0x1b

"memcmp@plt" :
1890(6): jmp 0x20762a(%rip)
1896(5): push $0x1c

"fputs_unlocked@plt" :
18a0(6): jmp 0x207622(%rip)
18a6(5): push $0x1d

"calloc@plt" :
18b0(6): jmp 0x20761a(%rip)
18b6(5): push $0x1e

"strcmp@plt" :
18c0(6): jmp 0x207612(%rip)
18c6(5): push $0x1f

"getpwnam@plt" :
18d0(6): jmp 0x20760a(%rip)
18d6(5): push $0x20

"memcpy@plt" :
18e0(6): jmp 0x207602(%rip)
18e6(5): push $0x21

"getgrnam@plt" :
18f0(6): jmp 0x2075fa(%rip)
18f6(5): push $0x22

"fileno@plt" :
1900(6): jmp 0x2075f2(%rip)
1906(5): push $0x23

"getgroups@plt" :
1910(6): jmp 0x2075ea(%rip)
1916(5): push $0x24

"malloc@plt" :
1920(6): jmp 0x2075e2(%rip)
1926(5): push $0x25

"fflush@plt" :
1930(6): jmp 0x2075da(%rip)
1936(5): push $0x26

"nl_langinfo@plt" :
1940(6): jmp 0x2075d2(%rip)
1946(5): push $0x27

"endpwent@plt" :
1950(6): jmp 0x2075ca(%rip)
1956(5): push $0x28

"__freading@plt" :
1960(6): jmp 0x2075c2(%rip)
1966(5): push $0x29

"realloc@plt" :
1970(6): jmp 0x2075ba(%rip)
1976(5): push $0x2a

"setlocale@plt" :
1980(6): jmp 0x2075b2(%rip)
1986(5): push $0x2b

"__printf_chk@plt" :
1990(6): jmp 0x2075aa(%rip)
1996(5): push $0x2c

"error@plt" :
19a0(6): jmp 0x2075a2(%rip)
19a6(5): push $0x2d

"setgid@plt" :
19b0(6): jmp 0x20759a(%rip)
19b6(5): push $0x2e

"getgrouplist@plt" :
19c0(6): jmp 0x207592(%rip)
19c6(5): push $0x2f

"fseeko@plt" :
19d0(6): jmp 0x20758a(%rip)
19d6(5): push $0x30

"strtok@plt" :
19e0(6): jmp 0x207582(%rip)
19e6(5): push $0x31

"strtoul@plt" :
19f0(6): jmp 0x20757a(%rip)
19f6(5): push $0x32

"execvp@plt" :
1a00(6): jmp 0x207572(%rip)
1a06(5): push $0x33

"__cxa_atexit@plt" :
1a10(6): jmp 0x20756a(%rip)
1a16(5): push $0x34

"exit@plt" :
1a20(6): jmp 0x207562(%rip)
1a26(5): push $0x35

"fwrite@plt" :
1a30(6): jmp 0x20755a(%rip)
1a36(5): push $0x36

"__fprintf_chk@plt" :
1a40(6): jmp 0x207552(%rip)
1a46(5): push $0x37

"setuid@plt" :
1a50(6): jmp 0x20754a(%rip)
1a56(5): push $0x38

"mbsinit@plt" :
1a60(6): jmp 0x207542(%rip)
1a66(5): push $0x39

"iswprint@plt" :
1a70(6): jmp 0x20753a(%rip)
1a76(5): push $0x3a

"__ctype_b_loc@plt" :
1a80(6): jmp 0x207532(%rip)
1a86(5): push $0x3b

".plt.got" :
1a90(6): jmp 0x20754a(%rip)
1a96(2): nop 

"_init" :
16a8(4): sub $0x8,%rsp
16ac(7): mov 0x20791d(%rip),%rax
16b3(3): test %rax,%rax
16b6(2): jz 0x4(%rip)
16b8(2): call %rax
16ba(4): add $0x8,%rsp
16be(1): ret near (%rsp)

"main" :
1aa0(2): push %r15
1aa2(2): push %r14
1aa4(3): xor %r14d,%r14d
1aa7(2): push %r13
1aa9(2): push %r12
1aab(3): xor %r13d,%r13d
1aae(1): push %rbp
1aaf(1): push %rbx
1ab0(2): mov %edi,%ebp
1ab2(3): mov %rsi,%rbx
1ab5(3): xor %r12d,%r12d
1ab8(4): sub $0x48,%rsp
1abc(3): mov (%rsi),%rdi
1abf(9): mov $0x28,%rax
1ac8(5): mov %rax,0x38(%rsp)
1acd(2): xor %eax,%eax
1acf(8): mov $0xffffffff,0x18(%rsp)
1ad7(8): mov $0xffffffff,0x1c(%rsp)
1adf(9): mov $0x0,0x20(%rsp)
1ae8(9): mov $0x0,0x28(%rsp)
1af1(5): call 0xf6f(%rip)
1af6(7): lea 0x4f8c(%rip),%rsi
1afd(5): mov $0x6,%edi
1b02(5): call 0xfffffe7e(%rip)
1b07(7): lea 0x4551(%rip),%rsi
1b0e(7): lea 0x4519(%rip),%rdi
1b15(5): call 0xfffffc7b(%rip)
1b1a(7): lea 0x450d(%rip),%rdi
1b21(5): call 0xfffffc3f(%rip)
1b26(7): lea 0xe83(%rip),%rdi
1b2d(a): mov $0x7d,0x2074e1(%rip)
1b37(5): call 0x4429(%rip)
1b3c(7): lea 0x206f7d(%rip),%rcx
1b43(7): lea 0x453c(%rip),%rdx
1b4a(3): xor %r8d,%r8d
1b4d(3): mov %rbx,%rsi
1b50(2): mov %ebp,%edi
1b52(5): call 0xfffffc9e(%rip)
1b57(3): cmp $0xff,%eax
1b5a(6): jz 0xb4(%rip)
1b60(5): cmp $0x100,%eax
1b65(2): jz 0x6b(%rip)
1b67(2): jle 0x21(%rip)
1b69(5): cmp $0x101,%eax
1b6e(2): jz 0x72(%rip)
1b70(5): cmp $0x102,%eax
1b75(6): jnz 0x5dc(%rip)
1b7b(6): mov $0x1,%r14d
1b81(2): jmp 0xffffffbb(%rip)
1b83(5): nop 0x0(%rax,%rax,1)
1b88(5): cmp $0xffffff7d,%eax
1b8d(6): jnz 0x595(%rip)
1b93(7): mov 0x2074ee(%rip),%rdi
1b9a(7): mov 0x20746f(%rip),%rcx
1ba1(7): lea 0x44cf(%rip),%r8
1ba8(7): lea 0x447b(%rip),%rdx
1baf(7): lea 0x43f7(%rip),%rsi
1bb6(3): xor %r9d,%r9d
1bb9(2): xor %eax,%eax
1bbb(5): call 0x3535(%rip)
1bc0(2): xor %edi,%edi
1bc2(5): call 0xfffffe5e(%rip)
1bc7(9): nop 0x0(%rax,%rax,1)
1bd0(7): mov 0x2074c1(%rip),%r13
1bd7(5): jmp 0xffffff65(%rip)
1bdc(4): nop 0x0(%rax)
1be0(7): mov 0x2074b1(%rip),%r12
1be7(3): mov %r12,%rdi
1bea(5): call 0xfffffbd6(%rip)
1bef(3): test %rax,%rax
1bf2(6): jz 0xffffff4a(%rip)
1bf8(5): lea 0xffffffff(%r12,%rax,1),%rax
1bfd(3): cmp $0x3a,(%rax)
1c00(6): jnz 0xffffff3c(%rip)
1c06(3): mov $0x0,(%rax)
1c09(5): jmp 0xffffff33(%rip)
1c0e(7): movsxd 0x20747b(%rip),%rax
1c15(2): cmp %ebp,%eax
1c17(6): jnl 0x519(%rip)
1c1d(4): mov 0x0(%rbx,%rax,8),%r15
1c21(3): mov %r15,%rdi
1c24(5): call 0xfffffc4c(%rip)
1c29(3): test %rax,%rax
1c2c(3): mov %rax,%rdx
1c2f(2): jz 0x23(%rip)
1c31(7): lea 0x48ee(%rip),%rdi
1c38(3): mov %rax,%rsi
1c3b(5): mov %rax,0x8(%rsp)
1c40(5): call 0xfffffc80(%rip)
1c45(2): test %eax,%eax
1c47(5): mov 0x8(%rsp),%rdx
1c4c(6): jz 0xb4(%rip)
1c52(3): mov %rdx,%rdi
1c55(5): call 0xfffffa9b(%rip)
1c5a(3): test %r14b,%r14b
1c5d(6): jnz 0x575(%rip)
1c63(3): test %r12,%r12
1c66(2): jz 0x19(%rip)
1c68(5): lea 0x1c(%rsp),%rdx
1c6d(5): lea 0x18(%rsp),%rsi
1c72(3): xor %r8d,%r8d
1c75(2): xor %ecx,%ecx
1c77(3): mov %r12,%rdi
1c7a(5): call 0x2ee6(%rip)
1c7f(4): mov 0x18(%rsp),%edi
1c83(3): cmp $0xff,%edi
1c86(6): jz 0x279(%rip)
1c8c(3): test %r13,%r13
1c8f(6): jz 0x44a(%rip)
1c95(5): cmp $0xff,0x1c(%rsp)
1c9a(6): jz 0x3cd(%rip)
1ca0(9): mov $0x0,0x8(%rsp)
1ca9(5): cmp $0x0,0x0(%r13)
1cae(6): jnz 0x3a0(%rip)
1cb4(3): mov %r15,%rdi
1cb7(5): call 0xfffffa89(%rip)
1cbc(2): test %eax,%eax
1cbe(6): jnz 0x351(%rip)
1cc4(7): lea 0x485b(%rip),%rdi
1ccb(5): call 0xfffffb05(%rip)
1cd0(2): test %eax,%eax
1cd2(2): jz 0x54(%rip)
1cd4(7): lea 0x475d(%rip),%rsi
1cdb(5): mov $0x5,%edx
1ce0(2): xor %edi,%edi
1ce2(5): call 0xfffffabe(%rip)
1ce7(3): mov %rax,%rbx
1cea(5): call 0xfffffa26(%rip)
1cef(2): mov (%rax),%esi
1cf1(3): mov %rbx,%rdx
1cf4(5): mov $0x7d,%edi
1cf9(2): xor %eax,%eax
1cfb(5): call 0xfffffca5(%rip)
1d00(3): mov %rdx,%rdi
1d03(5): call 0xfffff9ed(%rip)
1d08(3): mov %r15,%rdi
1d0b(5): call 0xfffffa35(%rip)
1d10(2): test %eax,%eax
1d12(6): jnz 0x2fd(%rip)
1d18(3): test %r14b,%r14b
1d1b(9): mov $0x0,0x8(%rsp)
1d24(2): jz 0xffffffa0(%rip)
1d26(7): movsxd 0x207363(%rip),%rax
1d2d(3): lea 0x1(%rax),%edx
1d30(2): cmp %ebp,%edx
1d32(6): jz 0x277(%rip)
1d38(5): lea 0x8(%rbx,%rax,8),%rbx
1d3d(3): test %r12,%r12
1d40(6): jz 0x13b(%rip)
1d46(5): lea 0x1c(%rsp),%rdx
1d4b(5): lea 0x18(%rsp),%rsi
1d50(3): xor %r8d,%r8d
1d53(2): xor %ecx,%ecx
1d55(3): mov %r12,%rdi
1d58(5): call 0x2e08(%rip)
1d5d(3): test %rax,%rax
1d60(3): mov %rax,%rbp
1d63(6): jz 0x118(%rip)
1d69(4): mov 0x18(%rsp),%edi
1d6d(3): cmp $0xff,%edi
1d70(6): jz 0x1da(%rip)
1d76(3): test %r13,%r13
1d79(6): jz 0x160(%rip)
1d7f(5): cmp $0xff,0x1c(%rsp)
1d84(6): jz 0x155(%rip)
1d8a(5): mov 0x20(%rsp),%rbp
1d8f(9): mov $0x0,0x30(%rsp)
1d98(5): cmp $0x0,0x0(%r13)
1d9d(6): jnz 0x1d5(%rip)
1da3(5): mov 0x28(%rsp),%rdi
1da8(3): mov %rbp,%rsi
1dab(5): call 0xfffffad5(%rip)
1db0(2): mov %eax,%ebp
1db2(5): call 0xfffff95e(%rip)
1db7(2): test %ebp,%ebp
1db9(3): mov %rax,%r12
1dbc(6): jnz 0x3f0(%rip)
1dc2(5): mov 0x30(%rsp),%rdi
1dc7(5): call 0xfffff929(%rip)
1dcc(5): mov 0x20(%rsp),%rdi
1dd1(5): call 0xfffff91f(%rip)
1dd6(4): mov 0x1c(%rsp),%ebp
1dda(5): call 0xfffff936(%rip)
1ddf(3): mov %rax,%r12
1de2(3): cmp $0xff,%ebp
1de5(2): jz 0x11(%rip)
1de7(2): mov %ebp,%edi
1de9(5): call 0xfffffbc7(%rip)
1dee(2): test %eax,%eax
1df0(6): jnz 0x396(%rip)
1df6(4): mov 0x18(%rsp),%edi
1dfa(3): cmp $0xff,%edi
1dfd(2): jz 0xf(%rip)
1dff(5): call 0xfffffc51(%rip)
1e04(2): test %eax,%eax
1e06(6): jnz 0x35a(%rip)
1e0c(3): mov (%rbx),%rdi
1e0f(3): mov %rbx,%rsi
1e12(2): xor %ebp,%ebp
1e14(5): call 0xfffffbec(%rip)
1e19(5): cmp $0x2,(%r12)
1e1e(3): mov (%rbx),%rdi
1e21(4): setz %bpl
1e25(5): call 0x294b(%rip)
1e2a(7): lea 0x429d(%rip),%rsi
1e31(5): mov $0x5,%edx
1e36(2): xor %edi,%edi
1e38(3): mov %rax,%rbx
1e3b(3): add $0x7e,%ebp
1e3e(5): call 0xfffff962(%rip)
1e43(4): mov (%r12),%esi
1e47(3): mov %rax,%rdx
1e4a(3): mov %rbx,%rcx
1e4d(2): xor %edi,%edi
1e4f(2): xor %eax,%eax
1e51(5): call 0xfffffb4f(%rip)
1e56(5): mov 0x38(%rsp),%rcx
1e5b(9): xor $0x28,%rcx
1e64(2): mov %ebp,%eax
1e66(6): jnz 0x2f5(%rip)
1e6c(4): add $0x48,%rsp
1e70(1): pop %rbx
1e71(1): pop %rbp
1e72(2): pop %r12
1e74(2): pop %r13
1e76(2): pop %r14
1e78(2): pop %r15
1e7a(1): ret near (%rsp)
1e7b(4): mov 0x18(%rsp),%edi
1e7f(3): cmp $0xff,%edi
1e82(6): jnz 0xfffffef4(%rip)
1e88(3): test %r13,%r13
1e8b(5): mov 0x20(%rsp),%rbp
1e90(9): mov $0x0,0x30(%rsp)
1e99(6): jnz 0xfffffeff(%rip)
1e9f(6): cmp $0x0,0x8(%rsp)
1ea5(5): mov 0x1c(%rsp),%r13d
1eaa(4): setnz %r12b
1eae(4): cmp $0xff,%r13d
1eb2(3): setnz %al
1eb5(3): and %eax,%r12d
1eb8(5): call 0xfffff858(%rip)
1ebd(3): test %r12b,%r12b
1ec0(3): mov %rax,%r14
1ec3(6): jnz 0x116(%rip)
1ec9(5): cmp $0xff,0x18(%rsp)
1ece(6): jz 0xfffffef4(%rip)
1ed4(5): jmp 0xfffffecf(%rip)
1ed9(5): call 0xfffff8a7(%rip)
1ede(3): test %rax,%rax
1ee1(6): jz 0x1af(%rip)
1ee7(5): cmp $0xff,0x1c(%rsp)
1eec(2): jnz 0x9(%rip)
1eee(3): mov 0x14(%rax),%edx
1ef1(4): mov %edx,0x1c(%rsp)
1ef5(3): mov (%rax),%rax
1ef8(5): mov %rax,0x8(%rsp)
1efd(2): jmp 0xffffff8b(%rip)
1eff(9): mov $0x0,0x8(%rsp)
1f08(3): test %r13,%r13
1f0b(6): jnz 0xfffffd9e(%rip)
1f11(4): mov 0x1c(%rsp),%esi
1f15(3): cmp $0xff,%esi
1f18(6): jz 0xfffffd9c(%rip)
1f1e(5): mov 0x8(%rsp),%rdi
1f23(3): test %rdi,%rdi
1f26(6): jz 0xfffffd8e(%rip)
1f2c(5): lea 0x20(%rsp),%rdx
1f31(5): call 0x35af(%rip)
1f36(2): test %eax,%eax
1f38(6): jle 0xfffffd7c(%rip)
1f3e(2): cwde 
1f40(5): mov %rax,0x28(%rsp)
1f45(5): jmp 0xfffffd6f(%rip)
1f4a(5): cmp $0xff,0x1c(%rsp)
1f4f(6): jnz 0xffffff39(%rip)
1f55(5): call 0xfffff7bb(%rip)
1f5a(2): mov (%rax),%esi
1f5c(7): lea 0x457c(%rip),%rdx
1f63(3): mov %rbp,%rcx
1f66(5): mov $0x7d,%edi
1f6b(2): xor %eax,%eax
1f6d(5): call 0xfffffa33(%rip)
1f72(2): xor %ecx,%ecx
1f74(6): cmp $0x0,0x28(%rsp)
1f7a(5): lea 0x28(%rsp),%rdx
1f7f(5): lea 0x30(%rsp),%rsi
1f84(3): mov %r13,%rdi
1f87(3): setz %cl
1f8a(5): call 0x3a6(%rip)
1f8f(2): test %eax,%eax
1f91(2): jz 0x74(%rip)
1f93(6): cmp $0x0,0x28(%rsp)
1f99(6): jnz 0xfffffe0a(%rip)
1f9f(5): mov $0x7d,%ebp
1fa4(5): jmp 0xfffffeb2(%rip)
1fa9(7): lea 0x40e8(%rip),%rdi
1fb0(5): call 0xfffff730(%rip)
1fb5(3): test %rax,%rax
1fb8(6): jz 0x115(%rip)
1fbe(3): mov %rax,(%rbx)
1fc1(7): lea 0x40d6(%rip),%rax
1fc8(8): mov $0x0,0x10(%rbx)
1fd0(4): mov %rax,0x8(%rbx)
1fd4(5): jmp 0xfffffd69(%rip)
1fd9(5): mov 0x8(%rsp),%rdi
1fde(5): lea 0x30(%rsp),%rdx
1fe3(3): mov %r13d,%esi
1fe6(5): call 0x34fa(%rip)
1feb(2): test %eax,%eax
1fed(6): jle 0x104(%rip)
1ff3(5): cmp $0xff,0x18(%rsp)
1ff8(2): cwde 
1ffa(5): mov %rax,0x28(%rsp)
1fff(6): jz 0xfffffdc3(%rip)
2005(5): mov 0x30(%rsp),%rbp
200a(5): jmp 0xfffffd99(%rip)
200f(3): mov %r15,%rsi
2012(5): mov $0x4,%edi
2017(5): call 0x2489(%rip)
201c(7): lea 0x43ed(%rip),%rsi
2023(5): mov $0x5,%edx
2028(2): xor %edi,%edi
202a(3): mov %rax,%rbp
202d(5): call 0xfffff773(%rip)
2032(3): mov %rax,%rbx
2035(5): call 0xfffff6db(%rip)
203a(2): mov (%rax),%esi
203c(3): mov %rbp,%rcx
203f(3): mov %rbx,%rdx
2042(5): mov $0x7d,%edi
2047(2): xor %eax,%eax
2049(5): call 0xfffff957(%rip)
204e(5): lea 0x28(%rsp),%rdx
2053(5): lea 0x20(%rsp),%rsi
2058(2): xor %ecx,%ecx
205a(3): mov %r13,%rdi
205d(5): call 0x2d3(%rip)
2062(5): jmp 0xfffffc52(%rip)
2067(5): call 0xfffff719(%rip)
206c(3): test %rax,%rax
206f(6): jz 0xfffffc31(%rip)
2075(5): cmp $0xff,0x1c(%rsp)
207a(2): jnz 0x9(%rip)
207c(3): mov 0x14(%rax),%edx
207f(4): mov %edx,0x1c(%rsp)
2083(3): mov (%rax),%rax
2086(5): mov %rax,0x8(%rsp)
208b(5): jmp 0xfffffe7d(%rip)
2090(5): cmp $0xff,0x1c(%rsp)
2095(6): jnz 0xfffffdf3(%rip)
209b(7): lea 0x43b6(%rip),%rsi
20a2(5): mov $0x5,%edx
20a7(2): xor %edi,%edi
20a9(4): mov 0x18(%rsp),%ebp
20ad(5): call 0xfffff6f3(%rip)
20b2(3): mov %rax,%rbx
20b5(5): call 0xfffff65b(%rip)
20ba(2): mov (%rax),%esi
20bc(2): mov %ebp,%ecx
20be(3): mov %rbx,%rdx
20c1(5): mov $0x7d,%edi
20c6(2): xor %eax,%eax
20c8(5): call 0xfffff8d8(%rip)
20cd(7): lea 0x3f83(%rip),%rax
20d4(5): jmp 0xfffffeea(%rip)
20d9(5): call 0xfffff6a7(%rip)
20de(3): test %rax,%rax
20e1(2): jnz 0xffffff94(%rip)
20e3(9): mov $0x0,0x8(%rsp)
20ec(5): jmp 0xfffffbc8(%rip)
20f1(6): cmp $0x0,0x28(%rsp)
20f7(6): jnz 0xfffffdd2(%rip)
20fd(7): lea 0x437c(%rip),%rsi
2104(5): mov $0x5,%edx
2109(2): xor %edi,%edi
210b(5): call 0xfffff695(%rip)
2110(3): mov (%r14),%esi
2113(3): mov %rax,%rdx
2116(5): mov $0x7d,%edi
211b(2): xor %eax,%eax
211d(5): call 0xfffff883(%rip)
2122(5): cmp $0xffffff7e,%eax
2127(2): jnz 0x2a(%rip)
2129(2): xor %edi,%edi
212b(5): call 0x475(%rip)
2130(7): lea 0x3f51(%rip),%rsi
2137(5): mov $0x5,%edx
213c(2): xor %edi,%edi
213e(5): call 0xfffff662(%rip)
2143(2): xor %esi,%esi
2145(3): mov %rax,%rdx
2148(2): xor %edi,%edi
214a(2): xor %eax,%eax
214c(5): call 0xfffff854(%rip)
2151(5): mov $0x7d,%edi
2156(5): call 0x44a(%rip)
215b(5): call 0xfffff685(%rip)
2160(7): lea 0x3f51(%rip),%rsi
2167(5): mov $0x5,%edx
216c(2): xor %edi,%edi
216e(5): call 0xfffff632(%rip)
2173(4): mov (%r12),%esi
2177(3): mov %rax,%rdx
217a(5): mov $0x7d,%edi
217f(2): xor %eax,%eax
2181(5): call 0xfffff81f(%rip)
2186(7): lea 0x3f14(%rip),%rsi
218d(5): mov $0x5,%edx
2192(2): xor %edi,%edi
2194(5): call 0xfffff60c(%rip)
2199(4): mov (%r12),%esi
219d(3): mov %rax,%rdx
21a0(5): mov $0x7d,%edi
21a5(2): xor %eax,%eax
21a7(5): call 0xfffff7f9(%rip)
21ac(7): lea 0x42f5(%rip),%rsi
21b3(5): mov $0x5,%edx
21b8(2): xor %edi,%edi
21ba(5): call 0xfffff5e6(%rip)
21bf(4): mov (%r12),%esi
21c3(3): mov %rax,%rdx
21c6(5): mov $0x7d,%edi
21cb(2): xor %eax,%eax
21cd(5): call 0xfffff7d3(%rip)
21d2(7): lea 0x434d(%rip),%rsi
21d9(5): mov $0x4,%edi
21de(5): call 0x22c2(%rip)
21e3(7): lea 0x41ee(%rip),%rsi
21ea(3): mov %rax,%rbx
21ed(5): mov $0x5,%edx
21f2(2): xor %edi,%edi
21f4(5): call 0xfffff5ac(%rip)
21f9(2): xor %edi,%edi
21fb(3): mov %rax,%rdx
21fe(3): mov %rbx,%rcx
2201(2): xor %esi,%esi
2203(2): xor %eax,%eax
2205(5): call 0xfffff79b(%rip)
220a(5): mov $0x7d,%edi
220f(5): call 0x391(%rip)

"_start" :
2220(2): xor %ebp,%ebp
2222(3): mov %rdx,%r9
2225(1): pop %rsi
2226(3): mov %rsp,%rdx
2229(4): and $0xfffffff0,%rsp
222d(1): push %rax
222e(1): push %rsp
222f(7): lea 0x3d1a(%rip),%r8
2236(7): lea 0x3ca3(%rip),%rcx
223d(7): lea 0xfffff85c(%rip),%rdi
2244(6): call 0x206d7e(%rip)
224a(1): hlt 

"deregister_tm_clones" :
2250(7): lea 0x206e29(%rip),%rdi
2257(1): push %rbp
2258(7): lea 0x206e21(%rip),%rax
225f(3): cmp %rdi,%rax
2262(3): mov %rsp,%rbp
2265(2): jz 0x1b(%rip)
2267(7): mov 0x206d52(%rip),%rax
226e(3): test %rax,%rax
2271(2): jz 0xf(%rip)
2273(1): pop %rbp
2274(2): jmp %rax
2276(a): nop 0x0(%rax,%rax,1)
2280(1): pop %rbp
2281(1): ret near (%rsp)

"register_tm_clones" :
2290(7): lea 0x206de9(%rip),%rdi
2297(7): lea 0x206de2(%rip),%rsi
229e(1): push %rbp
229f(3): sub %rdi,%rsi
22a2(3): mov %rsp,%rbp
22a5(4): sar $0x3,%rsi
22a9(3): mov %rsi,%rax
22ac(4): shr $0x3f,%rax
22b0(3): add %rax,%rsi
22b3(3): sar $0x1,%rsi
22b6(2): jz 0x1a(%rip)
22b8(7): mov 0x206d19(%rip),%rax
22bf(3): test %rax,%rax
22c2(2): jz 0xe(%rip)
22c4(1): pop %rbp
22c5(2): jmp %rax
22c7(9): nop 0x0(%rax,%rax,1)
22d0(1): pop %rbp
22d1(1): ret near (%rsp)

"__do_global_dtors_aux" :
22e0(7): cmp $0x0,0x206de1(%rip)
22e7(2): jnz 0x31(%rip)
22e9(8): cmp $0x0,0x206cef(%rip)
22f1(1): push %rbp
22f2(3): mov %rsp,%rbp
22f5(2): jz 0xe(%rip)
22f7(7): mov 0x206d0a(%rip),%rdi
22fe(5): call 0xfffff792(%rip)
2303(5): call 0xffffff4d(%rip)
2308(7): mov $0x1,0x206db9(%rip)
230f(1): pop %rbp
2310(1): ret near (%rsp)
2311(7): nop 0x0(%rax)
2318(2): REP ret near (%rsp)

"frame_dummy" :
2320(1): push %rbp
2321(3): mov %rsp,%rbp
2324(1): pop %rbp
2325(5): jmp 0xffffff6b(%rip)

"parse_additional_groups" :
2330(2): push %r15
2332(2): push %r14
2334(2): push %r13
2336(2): push %r12
2338(1): push %rbp
2339(1): push %rbx
233a(4): sub $0x68,%rsp
233e(5): mov %rdi,0x30(%rsp)
2343(5): mov %rsi,0x10(%rsp)
2348(5): mov %rdx,0x20(%rsp)
234d(4): mov %ecx,0x3c(%rsp)
2351(4): mov %cl,0x3b(%rsp)
2355(9): mov $0x0,0x48(%rsp)
235e(9): mov $0x28,%rax
2367(5): mov %rax,0x58(%rsp)
236c(2): xor %eax,%eax
236e(5): call 0x3112(%rip)
2373(7): lea 0x3c0a(%rip),%rsi
237a(3): mov %rax,%rdi
237d(5): mov %rax,0x18(%rsp)
2382(5): call 0xfffff65e(%rip)
2387(3): test %rax,%rax
238a(6): jz 0x1c1(%rip)
2390(3): mov %rax,%r15
2393(5): lea 0x48(%rsp),%rax
2398(5): lea 0x50(%rsp),%r13
239d(7): lea 0x46e5(%rip),%r12
23a4(8): mov $0x0,0x8(%rsp)
23ac(2): xor %ebx,%ebx
23ae(2): xor %ebp,%ebp
23b0(5): mov %rax,0x28(%rsp)
23b5(6): mov $0xffffffff,%r14d
23bb(2): xor %esi,%esi
23bd(3): mov %r12,%r8
23c0(3): mov %r13,%rcx
23c3(5): mov $0xa,%edx
23c8(3): mov %r15,%rdi
23cb(5): call 0x3145(%rip)
23d0(2): test %eax,%eax
23d2(2): jnz 0xd(%rip)
23d4(5): cmp %r14,0x50(%rsp)
23d9(6): jbe 0xc7(%rip)
23df(3): mov %r15,%rdi
23e2(5): call 0xfffff50e(%rip)
23e7(3): test %rax,%rax
23ea(2): jz 0x66(%rip)
23ec(3): mov 0x10(%rax),%eax
23ef(5): mov %rax,0x50(%rsp)
23f4(5): cmp %rbx,0x48(%rsp)
23f9(6): jz 0xe5(%rip)
23ff(5): mov 0x50(%rsp),%rax
2404(4): mov %eax,0x0(%rbp,%rbx,4)
2408(4): add $0x1,%rbx
240c(7): lea 0x3b71(%rip),%rsi
2413(2): xor %edi,%edi
2415(5): call 0xfffff5cb(%rip)
241a(3): test %rax,%rax
241d(3): mov %rax,%r15
2420(2): jnz 0xffffff9b(%rip)
2422(5): cmp $0x0,0x8(%rsp)
2427(6): jz 0xd1(%rip)
242d(5): cmp $0x0,0x8(%rsp)
2432(5): mov 0x10(%rsp),%rax
2437(3): mov %rbp,(%rax)
243a(6): jnz 0x154(%rip)
2440(5): mov 0x20(%rsp),%rax
2445(3): mov %rbx,(%rax)
2448(2): jmp 0x23(%rip)
244a(6): nop 0x0(%rax,%rax,1)
2450(5): cmp $0x0,0x3b(%rsp)
2455(6): jnz 0xae(%rip)
245b(5): mov 0x10(%rsp),%rax
2460(8): mov $0xffffffff,0x8(%rsp)
2468(3): mov %rbp,(%rax)
246b(5): mov 0x18(%rsp),%rdi
2470(5): call 0xfffff280(%rip)
2475(5): mov 0x58(%rsp),%rsi
247a(9): xor $0x28,%rsi
2483(4): mov 0x8(%rsp),%eax
2487(6): jnz 0x114(%rip)
248d(4): add $0x68,%rsp
2491(1): pop %rbx
2492(1): pop %rbp
2493(2): pop %r12
2495(2): pop %r13
2497(2): pop %r14
2499(2): pop %r15
249b(1): ret near (%rsp)
249c(4): nop 0x0(%rax)
24a0(5): call 0xfffff5e0(%rip)
24a5(3): mov (%rax),%rcx
24a8(2): jmp 0xc(%rip)
24aa(6): nop 0x0(%rax,%rax,1)
24b0(4): add $0x1,%r15
24b4(4): movzx (%r15),%edx
24b8(5): test $0x20,0x1(%rcx,%rdx,2)
24bd(2): jnz 0xfffffff3(%rip)
24bf(3): cmp $0x2b,%dl
24c2(6): jz 0xffffff32(%rip)
24c8(3): mov %r15,%rdi
24cb(5): call 0xfffff425(%rip)
24d0(3): test %rax,%rax
24d3(6): jnz 0xffffff19(%rip)
24d9(5): jmp 0xffffff1b(%rip)
24de(5): mov 0x28(%rsp),%rsi
24e3(3): mov %rbp,%rdi
24e6(5): mov $0x4,%edx
24eb(5): call 0x2e35(%rip)
24f0(3): mov %rax,%rbp
24f3(5): jmp 0xffffff0c(%rip)
24f8(3): test %rbx,%rbx
24fb(6): jnz 0xffffff32(%rip)
2501(2): jmp 0x4c(%rip)
2503(3): mov %r15,%rdi
2506(5): call 0x226a(%rip)
250b(7): lea 0x3a74(%rip),%rsi
2512(5): mov $0x5,%edx
2517(2): xor %edi,%edi
2519(5): mov %rax,0x8(%rsp)
251e(5): call 0xfffff282(%rip)
2523(3): mov %rax,%r15
2526(5): call 0xfffff1ea(%rip)
252b(5): mov 0x8(%rsp),%rcx
2530(2): mov (%rax),%esi
2532(3): mov %r15,%rdx
2535(2): xor %edi,%edi
2537(2): xor %eax,%eax
2539(5): call 0xfffff467(%rip)
253e(8): mov $0xffffffff,0x8(%rsp)
2546(5): jmp 0xfffffec6(%rip)
254b(2): xor %ebp,%ebp
254d(5): cmp $0x0,0x3c(%rsp)
2552(6): jz 0xffffff09(%rip)
2558(5): mov 0x30(%rsp),%rdi
255d(5): call 0x2213(%rip)
2562(7): lea 0x3a2e(%rip),%rsi
2569(3): mov %rax,%rbx
256c(2): xor %edi,%edi
256e(5): mov $0x5,%edx
2573(5): call 0xfffff22d(%rip)
2578(3): mov %rbx,%rcx
257b(3): mov %rax,%rdx
257e(2): xor %esi,%esi
2580(2): xor %edi,%edi
2582(2): xor %eax,%eax
2584(5): call 0xfffff41c(%rip)
2589(5): jmp 0xfffffed2(%rip)
258e(8): mov $0xffffffff,0x8(%rsp)
2596(5): jmp 0xfffffed5(%rip)
259b(5): call 0xfffff245(%rip)

"usage" :
25a0(2): push %r13
25a2(2): push %r12
25a4(5): mov $0x5,%edx
25a9(1): push %rbp
25aa(1): push %rbx
25ab(2): mov %edi,%ebp
25ad(7): sub $0x88,%rsp
25b4(7): mov 0x206b25(%rip),%rbx
25bb(9): mov $0x28,%rax
25c4(5): mov %rax,0x78(%rsp)
25c9(2): xor %eax,%eax
25cb(2): test %edi,%edi
25cd(2): jz 0x30(%rip)
25cf(7): lea 0x3b3a(%rip),%rsi
25d6(2): xor %edi,%edi
25d8(5): call 0xfffff1c8(%rip)
25dd(7): mov 0x206adc(%rip),%rdi
25e4(3): mov %rax,%rdx
25e7(3): mov %rbx,%rcx
25ea(5): mov $0x1,%esi
25ef(2): xor %eax,%eax
25f1(5): call 0xfffff44f(%rip)
25f6(2): mov %ebp,%edi
25f8(5): call 0xfffff428(%rip)
25fd(7): lea 0x3b34(%rip),%rsi
2604(2): xor %edi,%edi
2606(5): call 0xfffff19a(%rip)
260b(3): mov %rbx,%rcx
260e(3): mov %rbx,%rdx
2611(3): mov %rax,%rsi
2614(5): mov $0x1,%edi
2619(2): xor %eax,%eax
261b(5): call 0xfffff375(%rip)
2620(7): mov 0x206a61(%rip),%rbx
2627(7): lea 0x3b4a(%rip),%rsi
262e(5): mov $0x5,%edx
2633(2): xor %edi,%edi
2635(5): call 0xfffff16b(%rip)
263a(3): mov %rbx,%rsi
263d(3): mov %rax,%rdi
2640(5): call 0xfffff260(%rip)
2645(7): mov 0x206a3c(%rip),%rbx
264c(7): lea 0x3b5d(%rip),%rsi
2653(5): mov $0x5,%edx
2658(2): xor %edi,%edi
265a(5): call 0xfffff146(%rip)
265f(3): mov %rbx,%rsi
2662(3): mov %rax,%rdi
2665(5): call 0xfffff23b(%rip)
266a(7): mov 0x206a17(%rip),%rbx
2671(7): lea 0x3b80(%rip),%rsi
2678(5): mov $0x5,%edx
267d(2): xor %edi,%edi
267f(5): call 0xfffff121(%rip)
2684(3): mov %rbx,%rsi
2687(3): mov %rax,%rdi
268a(5): call 0xfffff216(%rip)
268f(7): lea 0x3e90(%rip),%rsi
2696(5): mov $0x4,%edi
269b(5): call 0x1e05(%rip)
26a0(7): lea 0x3b99(%rip),%rsi
26a7(3): mov %rax,%rbx
26aa(5): mov $0x5,%edx
26af(2): xor %edi,%edi
26b1(5): call 0xfffff0ef(%rip)
26b6(3): mov %rbx,%rdx
26b9(3): mov %rax,%rsi
26bc(5): mov $0x1,%edi
26c1(2): xor %eax,%eax
26c3(5): call 0xfffff2cd(%rip)
26c8(7): mov 0x2069b9(%rip),%rbx
26cf(7): lea 0x3baa(%rip),%rsi
26d6(5): mov $0x5,%edx
26db(2): xor %edi,%edi
26dd(5): call 0xfffff0c3(%rip)
26e2(3): mov %rbx,%rsi
26e5(3): mov %rax,%rdi
26e8(5): call 0xfffff1b8(%rip)
26ed(7): mov 0x206994(%rip),%rbx
26f4(7): lea 0x3bb5(%rip),%rsi
26fb(5): mov $0x5,%edx
2700(2): xor %edi,%edi
2702(5): call 0xfffff09e(%rip)
2707(3): mov %rbx,%rsi
270a(3): mov %rax,%rdi
270d(5): call 0xfffff193(%rip)
2712(7): mov 0x20696f(%rip),%rbx
2719(7): lea 0x3bc8(%rip),%rsi
2720(5): mov $0x5,%edx
2725(2): xor %edi,%edi
2727(5): call 0xfffff079(%rip)
272c(3): mov %rbx,%rsi
272f(3): mov %rax,%rdi
2732(7): lea 0x3874(%rip),%rbx
2739(5): call 0xfffff167(%rip)
273e(7): lea 0x386f(%rip),%rax
2745(7): lea 0x38a9(%rip),%rcx
274c(9): mov $0x0,0x60(%rsp)
2755(9): mov $0x0,0x68(%rsp)
275e(3): mov %rsp,%rdx
2761(4): mov %rax,(%rsp)
2765(7): lea 0x384a(%rip),%rax
276c(5): mov %rcx,0x30(%rsp)
2771(7): lea 0x3887(%rip),%rcx
2778(5): mov %rax,0x8(%rsp)
277d(7): lea 0x38aa(%rip),%rax
2784(5): mov %rcx,0x40(%rsp)
2789(7): lea 0x3879(%rip),%rcx
2790(5): mov %rax,0x10(%rsp)
2795(7): lea 0x382a(%rip),%rax
279c(5): mov %rcx,0x50(%rsp)
27a1(5): mov %rax,0x18(%rsp)
27a6(7): lea 0x382f(%rip),%rax
27ad(5): mov %rax,0x20(%rsp)
27b2(7): lea 0x382d(%rip),%rax
27b9(5): mov %rax,0x28(%rsp)
27be(5): mov %rax,0x38(%rsp)
27c3(5): mov %rax,0x48(%rsp)
27c8(5): mov %rax,0x58(%rsp)
27cd(3): nop (%rax)
27d0(4): add $0x10,%rdx
27d4(3): mov (%rdx),%rdi
27d7(3): test %rdi,%rdi
27da(2): jz 0x15(%rip)
27dc(5): mov $0x7,%ecx
27e1(3): mov %rbx,%rsi
27e4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
27e6(3): setnbe %al
27e9(2): sbb $0x0,%al
27eb(2): test %al,%al
27ed(2): jnz 0xffffffe3(%rip)
27ef(4): mov 0x8(%rdx),%r12
27f3(2): xor %edi,%edi
27f5(5): mov $0x5,%edx
27fa(7): lea 0x3812(%rip),%rsi
2801(3): test %r12,%r12
2804(6): jz 0xc7(%rip)
280a(5): call 0xffffef96(%rip)
280f(7): lea 0x3b1a(%rip),%rcx
2816(7): lea 0x380d(%rip),%rdx
281d(3): mov %rax,%rsi
2820(5): mov $0x1,%edi
2825(2): xor %eax,%eax
2827(5): call 0xfffff169(%rip)
282c(2): xor %esi,%esi
282e(5): mov $0x5,%edi
2833(5): call 0xfffff14d(%rip)
2838(3): test %rax,%rax
283b(2): jz 0x1e(%rip)
283d(7): lea 0x37f4(%rip),%rsi
2844(5): mov $0x3,%edx
2849(3): mov %rax,%rdi
284c(5): call 0xffffeed4(%rip)
2851(2): test %eax,%eax
2853(6): jnz 0x10d(%rip)
2859(7): lea 0x37dc(%rip),%rsi
2860(2): xor %edi,%edi
2862(5): mov $0x5,%edx
2867(5): call 0xffffef39(%rip)
286c(7): lea 0x373a(%rip),%rcx
2873(7): lea 0x3ab6(%rip),%rdx
287a(3): mov %rax,%rsi
287d(5): mov $0x1,%edi
2882(2): xor %eax,%eax
2884(5): call 0xfffff10c(%rip)
2889(3): cmp %rbx,%r12
288c(7): lea 0x373d(%rip),%rcx
2893(7): lea 0x41ef(%rip),%rbx
289a(4): cmove %rcx,%rbx
289e(7): lea 0x3afb(%rip),%rsi
28a5(2): xor %edi,%edi
28a7(5): mov $0x5,%edx
28ac(5): call 0xffffeef4(%rip)
28b1(3): mov %rbx,%rcx
28b4(3): mov %rax,%rsi
28b7(3): mov %r12,%rdx
28ba(5): mov $0x1,%edi
28bf(2): xor %eax,%eax
28c1(5): call 0xfffff0cf(%rip)
28c6(5): jmp 0xfffffd30(%rip)
28cb(5): call 0xffffeed5(%rip)
28d0(7): lea 0x3a59(%rip),%rcx
28d7(7): lea 0x374c(%rip),%rdx
28de(3): mov %rax,%rsi
28e1(5): mov $0x1,%edi
28e6(2): xor %eax,%eax
28e8(5): call 0xfffff0a8(%rip)
28ed(2): xor %esi,%esi
28ef(5): mov $0x5,%edi
28f4(5): call 0xfffff08c(%rip)
28f9(3): test %rax,%rax
28fc(2): jz 0x1a(%rip)
28fe(7): lea 0x3733(%rip),%rsi
2905(5): mov $0x3,%edx
290a(3): mov %rax,%rdi
290d(5): call 0xffffee13(%rip)
2912(2): test %eax,%eax
2914(2): jnz 0x45(%rip)
2916(7): lea 0x371f(%rip),%rsi
291d(5): mov $0x5,%edx
2922(2): xor %edi,%edi
2924(7): lea 0x3682(%rip),%r12
292b(7): lea 0x369e(%rip),%rbx
2932(5): call 0xffffee6e(%rip)
2937(7): lea 0x366f(%rip),%rcx
293e(7): lea 0x39eb(%rip),%rdx
2945(3): mov %rax,%rsi
2948(5): mov $0x1,%edi
294d(2): xor %eax,%eax
294f(5): call 0xfffff041(%rip)
2954(5): jmp 0xffffff4a(%rip)
2959(7): lea 0x364d(%rip),%r12
2960(7): mov 0x206721(%rip),%r13
2967(7): lea 0x39ea(%rip),%rsi
296e(2): xor %edi,%edi
2970(5): mov $0x5,%edx
2975(5): call 0xffffee2b(%rip)
297a(3): mov %r13,%rsi
297d(3): mov %rax,%rdi
2980(5): call 0xffffef20(%rip)
2985(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2990(7): mov %rdi,0x206741(%rip)
2997(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
29a0(7): mov %dil,0x206729(%rip)
29a7(1): ret near (%rsp)

"close_stdout" :
29b0(1): push %rbp
29b1(1): push %rbx
29b2(4): sub $0x8,%rsp
29b6(7): mov 0x2066cb(%rip),%rdi
29bd(5): call 0x3003(%rip)
29c2(2): test %eax,%eax
29c4(2): jz 0x18(%rip)
29c6(5): call 0xffffed4a(%rip)
29cb(7): cmp $0x0,0x2066fe(%rip)
29d2(3): mov %rax,%rbx
29d5(2): jz 0x1e(%rip)
29d7(3): cmp $0x20,(%rax)
29da(2): jnz 0x19(%rip)
29dc(7): mov 0x2066dd(%rip),%rdi
29e3(5): call 0x2fdd(%rip)
29e8(2): test %eax,%eax
29ea(2): jnz 0x48(%rip)
29ec(4): add $0x8,%rsp
29f0(1): pop %rbx
29f1(1): pop %rbp
29f2(1): ret near (%rsp)
29f3(7): lea 0x3ad5(%rip),%rsi
29fa(2): xor %edi,%edi
29fc(5): mov $0x5,%edx
2a01(5): call 0xffffed9f(%rip)
2a06(7): mov 0x2066cb(%rip),%rdi
2a0d(3): mov %rax,%rbp
2a10(3): test %rdi,%rdi
2a13(2): jz 0x2a(%rip)
2a15(5): call 0x1b5b(%rip)
2a1a(2): mov (%rbx),%esi
2a1c(7): lea 0x3ab8(%rip),%rdx
2a23(3): mov %rax,%rcx
2a26(3): mov %rbp,%r8
2a29(2): xor %edi,%edi
2a2b(2): xor %eax,%eax
2a2d(5): call 0xffffef73(%rip)
2a32(6): mov 0x2065e0(%rip),%edi
2a38(5): call 0xffffecf8(%rip)
2a3d(2): mov (%rbx),%esi
2a3f(7): lea 0x3a99(%rip),%rdx
2a46(3): mov %rax,%rcx
2a49(2): xor %edi,%edi
2a4b(2): xor %eax,%eax
2a4d(5): call 0xffffef53(%rip)
2a52(2): jmp 0xffffffe0(%rip)

"set_program_name" :
2a60(3): test %rdi,%rdi
2a63(1): push %rbx
2a64(2): jz 0x79(%rip)
2a66(5): mov $0x2f,%esi
2a6b(3): mov %rdi,%rbx
2a6e(5): call 0xffffedc2(%rip)
2a73(3): test %rax,%rax
2a76(2): jz 0x57(%rip)
2a78(4): lea 0x1(%rax),%r8
2a7c(3): mov %r8,%rdx
2a7f(3): sub %rbx,%rdx
2a82(4): cmp $0x6,%rdx
2a86(2): jle 0x47(%rip)
2a88(4): lea 0xfffffffa(%rax),%rsi
2a8c(7): lea 0x3a8d(%rip),%rdi
2a93(5): mov $0x7,%ecx
2a98(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2a9a(3): setnbe %dl
2a9d(3): sbb $0x0,%dl
2aa0(2): test %dl,%dl
2aa2(2): jnz 0x2b(%rip)
2aa4(7): lea 0x3a7d(%rip),%rdi
2aab(5): mov $0x3,%ecx
2ab0(3): mov %r8,%rsi
2ab3(3): mov %r8,%rbx
2ab6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2ab8(3): setnbe %dl
2abb(3): sbb $0x0,%dl
2abe(2): test %dl,%dl
2ac0(2): jnz 0xd(%rip)
2ac2(4): lea 0x4(%rax),%rbx
2ac6(7): mov %rbx,0x2065b3(%rip)
2acd(7): mov %rbx,0x20660c(%rip)
2ad4(7): mov %rbx,0x2065c5(%rip)
2adb(1): pop %rbx
2adc(1): ret near (%rsp)
2add(7): mov 0x2065dc(%rip),%rcx
2ae4(7): lea 0x39fd(%rip),%rdi
2aeb(5): mov $0x37,%edx
2af0(5): mov $0x1,%esi
2af5(5): call 0xffffef3b(%rip)
2afa(5): call 0xffffec06(%rip)

"gettext_quote.part.1" :
2b00(1): push %rbp
2b01(1): push %rbx
2b02(3): mov %rdi,%rbp
2b05(2): mov %esi,%ebx
2b07(4): sub $0x8,%rsp
2b0b(5): call 0x2fe5(%rip)
2b10(3): movzx (%rax),%edx
2b13(3): and $0xdf,%edx
2b16(3): cmp $0x55,%dl
2b19(2): jz 0x77(%rip)
2b1b(3): cmp $0x47,%dl
2b1e(2): jz 0x22(%rip)
2b20(7): lea 0x3a14(%rip),%rax
2b27(7): lea 0x3a0f(%rip),%rdx
2b2e(3): cmp $0x9,%ebx
2b31(4): cmovne %rdx,%rax
2b35(4): add $0x8,%rsp
2b39(1): pop %rbx
2b3a(1): pop %rbp
2b3b(1): ret near (%rsp)
2b3c(4): nop 0x0(%rax)
2b40(4): movzx 0x1(%rax),%edx
2b44(3): and $0xdf,%edx
2b47(3): cmp $0x42,%dl
2b4a(2): jnz 0xffffffd6(%rip)
2b4c(4): cmp $0x31,0x2(%rax)
2b50(2): jnz 0xffffffd0(%rip)
2b52(4): cmp $0x38,0x3(%rax)
2b56(2): jnz 0xffffffca(%rip)
2b58(4): cmp $0x30,0x4(%rax)
2b5c(2): jnz 0xffffffc4(%rip)
2b5e(4): cmp $0x33,0x5(%rax)
2b62(2): jnz 0xffffffbe(%rip)
2b64(4): cmp $0x30,0x6(%rax)
2b68(2): jnz 0xffffffb8(%rip)
2b6a(4): cmp $0x0,0x7(%rax)
2b6e(2): jnz 0xffffffb2(%rip)
2b70(4): cmp $0x60,0x0(%rbp)
2b74(7): lea 0x39b9(%rip),%rax
2b7b(7): lea 0x39b6(%rip),%rdx
2b82(4): cmovne %rdx,%rax
2b86(4): add $0x8,%rsp
2b8a(1): pop %rbx
2b8b(1): pop %rbp
2b8c(1): ret near (%rsp)
2b8d(3): nop (%rax)
2b90(4): movzx 0x1(%rax),%edx
2b94(3): and $0xdf,%edx
2b97(3): cmp $0x54,%dl
2b9a(2): jnz 0xffffff86(%rip)
2b9c(4): movzx 0x2(%rax),%edx
2ba0(3): and $0xdf,%edx
2ba3(3): cmp $0x46,%dl
2ba6(6): jnz 0xffffff7a(%rip)
2bac(4): cmp $0x2d,0x3(%rax)
2bb0(6): jnz 0xffffff70(%rip)
2bb6(4): cmp $0x38,0x4(%rax)
2bba(6): jnz 0xffffff66(%rip)
2bc0(4): cmp $0x0,0x5(%rax)
2bc4(6): jnz 0xffffff5c(%rip)
2bca(4): cmp $0x60,0x0(%rbp)
2bce(7): lea 0x3957(%rip),%rax
2bd5(7): lea 0x3954(%rip),%rdx
2bdc(4): cmovne %rdx,%rax
2be0(4): add $0x8,%rsp
2be4(1): pop %rbx
2be5(1): pop %rbp
2be6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2bf0(2): push %r15
2bf2(2): push %r14
2bf4(3): mov %r8d,%r15d
2bf7(2): push %r13
2bf9(2): push %r12
2bfb(3): mov %rdi,%r14
2bfe(1): push %rbp
2bff(1): push %rbx
2c00(3): mov %r9d,%ebx
2c03(3): mov %rsi,%r13
2c06(3): mov %rcx,%rbp
2c09(3): and $0x2,%ebx
2c0c(7): sub $0xb8,%rsp
2c13(8): mov 0xf0(%rsp),%rax
2c1b(5): mov %rdx,0x10(%rsp)
2c20(5): mov %r8d,0x8(%rsp)
2c25(5): mov %r9d,0x78(%rsp)
2c2a(5): mov %rax,0x20(%rsp)
2c2f(8): mov 0xf8(%rsp),%rax
2c37(5): mov %rax,0x68(%rsp)
2c3c(8): mov 0x100(%rsp),%rax
2c44(5): mov %rax,0x60(%rsp)
2c49(9): mov $0x28,%rax
2c52(8): mov %rax,0xa8(%rsp)
2c5a(2): xor %eax,%eax
2c5c(5): call 0xffffeb54(%rip)
2c61(4): cmp $0xa,%r15d
2c65(5): mov %rax,0x58(%rsp)
2c6a(6): jnbe 0x11b5(%rip)
2c70(7): lea 0x3929(%rip),%rcx
2c77(3): mov %r15d,%edx
2c7a(4): movsxd 0x0(%rcx,%rdx,4),%rax
2c7e(3): add %rcx,%rax
2c81(2): jmp %rax
2c83(5): mov $0x1,0xe(%rsp)
2c88(5): mov $0x0,0x7c(%rsp)
2c8d(3): xor %r12d,%r12d
2c90(9): mov $0x0,0x50(%rsp)
2c99(5): mov $0x1,0xf(%rsp)
2c9e(5): mov $0x0,0xd(%rsp)
2ca3(7): lea 0x3893(%rip),%rax
2caa(9): mov $0x1,0x18(%rsp)
2cb3(3): xor %r15d,%r15d
2cb6(8): mov $0x2,0x8(%rsp)
2cbe(5): mov %rax,0x48(%rsp)
2cc3(3): xor %r11d,%r11d
2cc6(3): mov %rbp,%rax
2cc9(3): mov %r12d,%r8d
2ccc(3): mov %r11,%rbp
2ccf(3): mov %rax,%r11
2cd2(6): nop 0x0(%rax,%rax,1)
2cd8(3): cmp %rbp,%r11
2cdb(4): setnz %r12b
2cdf(4): cmp $0xffffffff,%r11
2ce3(2): jnz 0xf(%rip)
2ce5(5): mov 0x10(%rsp),%rax
2cea(4): cmp $0x0,0x0(%rax,%rbp,1)
2cee(4): setnz %r12b
2cf2(3): test %r12b,%r12b
2cf5(6): jz 0x65b(%rip)
2cfb(5): cmp $0x2,0x8(%rsp)
2d00(5): mov 0x10(%rsp),%rdi
2d05(4): lea 0x0(%rdi,%rbp,1),%r9
2d09(3): setnz %al
2d0c(4): and 0xd(%rsp),%al
2d10(3): mov %eax,%r10d
2d13(6): jz 0xad(%rip)
2d19(5): mov 0x18(%rsp),%rax
2d1e(3): test %rax,%rax
2d21(6): jz 0x42f(%rip)
2d27(4): cmp $0xffffffff,%r11
2d2b(5): lea 0x0(%rbp,%rax,1),%rbx
2d30(2): jnz 0x30(%rip)
2d32(4): cmp $0x1,%rax
2d36(2): jbe 0x2a(%rip)
2d38(5): mov %r8b,0x38(%rsp)
2d3d(5): mov %r10b,0x30(%rsp)
2d42(5): mov %r9,0x28(%rsp)
2d47(5): call 0xffffea79(%rip)
2d4c(6): movzx 0x38(%rsp),%r8d
2d52(6): movzx 0x30(%rsp),%r10d
2d58(3): mov %rax,%r11
2d5b(5): mov 0x28(%rsp),%r9
2d60(3): cmp %r11,%rbx
2d63(5): mov %r10b,0x28(%rsp)
2d68(6): jnbe 0x5b8(%rip)
2d6e(5): mov 0x18(%rsp),%rdx
2d73(5): mov 0x48(%rsp),%rsi
2d78(3): mov %r9,%rdi
2d7b(5): mov %r11,0x40(%rsp)
2d80(5): mov %r8b,0x38(%rsp)
2d85(5): mov %r9,0x30(%rsp)
2d8a(5): call 0xffffeb06(%rip)
2d8f(2): test %eax,%eax
2d91(5): mov 0x30(%rsp),%r9
2d96(6): movzx 0x38(%rsp),%r8d
2d9c(5): mov 0x40(%rsp),%r11
2da1(6): jnz 0x57f(%rip)
2da7(5): cmp $0x0,0xf(%rsp)
2dac(6): movzx 0x28(%rsp),%r10d
2db2(6): jnz 0xf83(%rip)
2db8(8): nop 0x0(%rax,%rax,1)
2dc0(4): movzx (%r9),%ebx
2dc4(3): cmp $0x7e,%bl
2dc7(6): jnbe 0x321(%rip)
2dcd(7): lea 0x37f8(%rip),%rcx
2dd4(3): movzx %bl,%edx
2dd7(4): movsxd 0x0(%rcx,%rdx,4),%rax
2ddb(3): add %rcx,%rax
2dde(2): jmp %rax
2de0(3): xor %r10d,%r10d
2de3(4): cmp $0x1,%r11
2de7(3): setnz %al
2dea(4): cmp $0xffffffff,%r11
2dee(2): jnz 0xe(%rip)
2df0(5): mov 0x10(%rsp),%rax
2df5(4): cmp $0x0,0x1(%rax)
2df9(3): setnz %al
2dfc(5): cmp $0x2,0x8(%rsp)
2e01(3): setz %dl
2e04(2): test %al,%al
2e06(6): jz 0x252(%rip)
2e0c(3): xor %r12d,%r12d
2e0f(2): xor %eax,%eax
2e11(7): nop 0x0(%rax)
2e18(5): cmp $0x1,0xd(%rsp)
2e1d(6): jnz 0x115(%rip)
2e23(2): test %dl,%dl
2e25(6): jnz 0x10d(%rip)
2e2b(5): mov 0x20(%rsp),%rsi
2e30(3): test %rsi,%rsi
2e33(2): jz 0x16(%rip)
2e35(2): mov %ebx,%edx
2e37(3): shr $0x5,%dl
2e3a(3): movzx %dl,%edx
2e3d(3): mov 0x0(%rsi,%rdx,4),%edx
2e40(3): bt %ebx,%edx
2e43(6): jb 0x150(%rip)
2e49(3): test %r10b,%r10b
2e4c(6): jnz 0x147(%rip)
2e52(3): xor $0x1,%eax
2e55(4): add $0x1,%rbp
2e59(3): and %r8d,%eax
2e5c(2): test %al,%al
2e5e(2): jz 0x22(%rip)
2e60(3): cmp %r15,%r13
2e63(2): jbe 0x7(%rip)
2e65(5): mov $0x27,0x0(%r14,%r15,1)
2e6a(4): lea 0x1(%r15),%rax
2e6e(3): cmp %rax,%r13
2e71(2): jbe 0x8(%rip)
2e73(6): mov $0x27,0x1(%r14,%r15,1)
2e79(4): add $0x2,%r15
2e7d(3): xor %r8d,%r8d
2e80(3): cmp %r13,%r15
2e83(2): jnb 0x6(%rip)
2e85(4): mov %bl,0x0(%r14,%r15,1)
2e89(5): movzx 0xe(%rsp),%edi
2e8e(4): add $0x1,%r15
2e92(5): mov $0x0,%eax
2e97(3): test %r12b,%r12b
2e9a(3): cmove %eax,%edi
2e9d(5): mov %dil,0xe(%rsp)
2ea2(5): jmp 0xfffffe36(%rip)
2ea7(9): nop 0x0(%rax,%rax,1)
2eb0(3): xor %r10d,%r10d
2eb3(4): mov 0x8(%rsp),%eax
2eb7(3): cmp $0x2,%eax
2eba(6): jz 0x5be(%rip)
2ec0(3): cmp $0x5,%eax
2ec3(6): jz 0x575(%rip)
2ec9(3): cmp $0x2,%eax
2ecc(5): mov $0x3f,%ebx
2ed1(3): setz %dl
2ed4(3): xor %r12d,%r12d
2ed7(2): xor %eax,%eax
2ed9(5): jmp 0xffffff3f(%rip)
2ede(2): nop 
2ee0(3): xor %r10d,%r10d
2ee3(5): cmp $0x2,0x8(%rsp)
2ee8(6): jz 0x508(%rip)
2eee(5): mov %r12b,0x7c(%rsp)
2ef3(2): xor %edx,%edx
2ef5(2): xor %eax,%eax
2ef7(5): mov $0x27,%ebx
2efc(5): jmp 0xffffff1c(%rip)
2f01(7): nop 0x0(%rax)
2f08(5): mov $0x9,%edx
2f0d(5): mov $0x74,%ebx
2f12(5): cmp $0x2,0x8(%rsp)
2f17(3): setz %al
2f1a(4): and 0xf(%rsp),%al
2f1e(6): jnz 0x150(%rip)
2f24(5): cmp $0x0,0xd(%rsp)
2f29(2): jnz 0x67(%rip)
2f2b(2): mov %edx,%ebx
2f2d(3): xor %r12d,%r12d
2f30(2): xor %eax,%eax
2f32(5): cmp $0x0,0xf(%rsp)
2f37(6): jnz 0xfffffef4(%rip)
2f3d(5): jmp 0xffffff0c(%rip)
2f42(6): nop 0x0(%rax,%rax,1)
2f48(5): mov $0x8,%edx
2f4d(5): mov $0x62,%ebx
2f52(2): jmp 0xffffffd2(%rip)
2f54(4): nop 0x0(%rax)
2f58(5): cmp $0x2,0x8(%rsp)
2f5d(6): jz 0x3d3(%rip)
2f63(5): cmp $0x0,0xd(%rsp)
2f68(6): jz 0x218(%rip)
2f6e(5): cmp $0x0,0xf(%rsp)
2f73(6): jz 0x20d(%rip)
2f79(6): cmp $0x0,0x18(%rsp)
2f7f(6): jnz 0x3bc(%rip)
2f85(5): mov $0x5c,%ebx
2f8a(6): nop 0x0(%rax,%rax,1)
2f90(3): xor %r12d,%r12d
2f93(5): cmp $0x2,0x8(%rsp)
2f98(3): setz %dl
2f9b(5): cmp $0x0,0xf(%rsp)
2fa0(2): mov %edx,%eax
2fa2(6): jnz 0x856(%rip)
2fa8(3): mov %r8d,%eax
2fab(3): xor $0x1,%eax
2fae(2): and %dl,%al
2fb0(2): jz 0x31(%rip)
2fb2(3): cmp %r15,%r13
2fb5(2): jbe 0x7(%rip)
2fb7(5): mov $0x27,0x0(%r14,%r15,1)
2fbc(4): lea 0x1(%r15),%rdx
2fc0(3): cmp %rdx,%r13
2fc3(2): jbe 0x8(%rip)
2fc5(6): mov $0x24,0x1(%r14,%r15,1)
2fcb(4): lea 0x2(%r15),%rdx
2fcf(3): cmp %rdx,%r13
2fd2(2): jbe 0x8(%rip)
2fd4(6): mov $0x27,0x2(%r14,%r15,1)
2fda(4): add $0x3,%r15
2fde(3): mov %eax,%r8d
2fe1(3): cmp %r15,%r13
2fe4(2): jbe 0x7(%rip)
2fe6(5): mov $0x5c,0x0(%r14,%r15,1)
2feb(4): add $0x1,%r15
2fef(4): add $0x1,%rbp
2ff3(5): jmp 0xfffffe8d(%rip)
2ff8(8): nop 0x0(%rax,%rax,1)
3000(5): cmp $0x0,0xd(%rsp)
3005(6): jnz 0x1ce(%rip)
300b(2): xor %edx,%edx
300d(5): test $0x1,0x78(%rsp)
3012(6): jz 0xffffff19(%rip)
3018(4): add $0x1,%rbp
301c(5): jmp 0xfffffcbc(%rip)
3021(7): nop 0x0(%rax)
3028(5): cmp $0x2,0x8(%rsp)
302d(3): setz %dl
3030(2): xor %eax,%eax
3032(5): jmp 0xfffffde6(%rip)
3037(9): nop 0x0(%rax,%rax,1)
3040(5): mov $0x7,%edx
3045(5): mov $0x61,%ebx
304a(5): jmp 0xfffffeda(%rip)
304f(1): nop 
3050(5): cmp $0x2,0x8(%rsp)
3055(3): setz %dl
3058(3): test %rbp,%rbp
305b(6): jnz 0xfffffdb1(%rip)
3061(5): movzx 0xf(%rsp),%eax
3066(2): and %dl,%al
3068(6): jz 0xfffffdb0(%rip)
306e(3): mov %r11,%rbp
3071(8): mov $0x2,0x8(%rsp)
3079(5): jmp 0x700(%rip)
307e(2): nop 
3080(5): cmp $0x2,0x8(%rsp)
3085(3): setz %dl
3088(3): xor %r12d,%r12d
308b(2): jmp 0xffffffd6(%rip)
308d(3): nop (%rax)
3090(5): cmp $0x2,0x8(%rsp)
3095(5): mov $0x20,%ebx
309a(3): setz %dl
309d(2): jmp 0xffffffc4(%rip)
309f(1): nop 
30a0(5): mov $0xd,%edx
30a5(5): mov $0x72,%ebx
30aa(5): jmp 0xfffffe68(%rip)
30af(1): nop 
30b0(5): mov $0xc,%edx
30b5(5): mov $0x66,%ebx
30ba(5): jmp 0xfffffe6a(%rip)
30bf(1): nop 
30c0(5): mov $0xb,%edx
30c5(5): mov $0x76,%ebx
30ca(5): jmp 0xfffffe5a(%rip)
30cf(1): nop 
30d0(5): mov $0xa,%edx
30d5(5): mov $0x6e,%ebx
30da(5): jmp 0xfffffe38(%rip)
30df(1): nop 
30e0(3): xor %r10d,%r10d
30e3(5): nop 0x0(%rax,%rax,1)
30e8(6): cmp $0x1,0x58(%rsp)
30ee(6): jnz 0x3aa(%rip)
30f4(5): mov %r11,0x38(%rsp)
30f9(5): mov %r8b,0x30(%rsp)
30fe(5): mov %r10b,0x28(%rsp)
3103(5): call 0xffffe97d(%rip)
3108(3): mov (%rax),%rcx
310b(3): movzx %bl,%edx
310e(6): movzx 0x28(%rsp),%r10d
3114(6): movzx 0x30(%rsp),%r8d
311a(5): mov 0x38(%rsp),%r11
311f(5): mov $0x1,%edi
3124(4): movzx 0x0(%rcx,%rdx,2),%eax
3128(4): and $0x4000,%ax
312c(4): setnz %r12b
3130(3): setz %al
3133(4): and 0xd(%rsp),%al
3137(2): test %al,%al
3139(6): jnz 0x998(%rip)
313f(5): cmp $0x2,0x8(%rsp)
3144(3): setz %dl
3147(5): jmp 0xfffffcd1(%rip)
314c(4): nop 0x0(%rax)
3150(4): movzx (%r9),%ebx
3154(3): cmp $0x7e,%bl
3157(2): jnbe 0xffffff89(%rip)
3159(7): lea 0x3668(%rip),%rcx
3160(3): movzx %bl,%edx
3163(4): movsxd 0x0(%rcx,%rdx,4),%rax
3167(3): add %rcx,%rax
316a(2): jmp %rax
316c(4): nop 0x0(%rax)
3170(3): xor %r10d,%r10d
3173(5): cmp $0x0,0xd(%rsp)
3178(6): jnz 0xfffffdf6(%rip)
317e(2): nop 
3180(5): mov $0x5c,%edx
3185(5): mov $0x5c,%ebx
318a(5): jmp 0xfffffd9a(%rip)
318f(1): nop 
3190(5): mov $0xc,%edx
3195(3): xor %r10d,%r10d
3198(5): mov $0x66,%ebx
319d(5): jmp 0xfffffd87(%rip)
31a2(6): nop 0x0(%rax,%rax,1)
31a8(5): mov $0xa,%edx
31ad(3): xor %r10d,%r10d
31b0(5): mov $0x6e,%ebx
31b5(5): jmp 0xfffffd5d(%rip)
31ba(6): nop 0x0(%rax,%rax,1)
31c0(5): mov $0x61,%ebx
31c5(5): jmp 0xfffffdcb(%rip)
31ca(6): nop 0x0(%rax,%rax,1)
31d0(3): xor %r10d,%r10d
31d3(5): cmp $0x2,0x8(%rsp)
31d8(3): setz %dl
31db(5): cmp $0x0,0xf(%rsp)
31e0(6): jnz 0xb9a(%rip)
31e6(3): mov %r8d,%eax
31e9(3): mov %r15,%rcx
31ec(3): xor $0x1,%eax
31ef(2): and %dl,%al
31f1(2): jz 0x2f(%rip)
31f3(3): cmp %r15,%r13
31f6(2): jbe 0x7(%rip)
31f8(5): mov $0x27,0x0(%r14,%r15,1)
31fd(4): lea 0x1(%r15),%rcx
3201(3): cmp %rcx,%r13
3204(2): jbe 0x8(%rip)
3206(6): mov $0x24,0x1(%r14,%r15,1)
320c(4): lea 0x2(%r15),%rcx
3210(3): cmp %rcx,%r13
3213(6): jnbe 0x636(%rip)
3219(4): lea 0x3(%r15),%rcx
321d(3): mov %eax,%r8d
3220(3): cmp %rcx,%r13
3223(2): jbe 0x7(%rip)
3225(5): mov $0x5c,0x0(%r14,%rcx,1)
322a(5): cmp $0x2,0x8(%rsp)
322f(4): lea 0x1(%rcx),%r15
3233(6): jz 0x606(%rip)
3239(4): lea 0x1(%rbp),%rax
323d(3): cmp %r11,%rax
3240(2): jnb 0x1b(%rip)
3242(5): mov 0x10(%rsp),%rax
3247(5): movzx 0x1(%rax,%rbp,1),%eax
324c(4): mov %al,0x28(%rsp)
3250(3): sub $0x30,%eax
3253(2): cmp $0x9,%al
3255(6): jbe 0x834(%rip)
325b(3): mov %r12d,%eax
325e(5): mov $0x30,%ebx
3263(3): xor %r12d,%r12d
3266(5): jmp 0xfffffbb2(%rip)
326b(5): nop 0x0(%rax,%rax,1)
3270(5): cmp $0x2,0x8(%rsp)
3275(3): mov %r10d,%r12d
3278(3): setz %dl
327b(3): xor %r10d,%r10d
327e(2): xor %eax,%eax
3280(5): jmp 0xfffffb98(%rip)
3285(3): nop (%rax)
3288(5): cmp $0x2,0x8(%rsp)
328d(3): setz %dl
3290(3): xor %r10d,%r10d
3293(5): jmp 0xfffffdc5(%rip)
3298(8): nop 0x0(%rax,%rax,1)
32a0(5): cmp $0x2,0x8(%rsp)
32a5(3): setz %dl
32a8(3): xor %r10d,%r10d
32ab(3): xor %r12d,%r12d
32ae(5): jmp 0xfffffdb3(%rip)
32b3(5): nop 0x0(%rax,%rax,1)
32b8(5): cmp $0x2,0x8(%rsp)
32bd(3): mov %r10d,%r12d
32c0(5): mov $0x20,%ebx
32c5(3): setz %dl
32c8(3): xor %r10d,%r10d
32cb(5): jmp 0xfffffd96(%rip)
32d0(5): mov $0xd,%edx
32d5(3): xor %r10d,%r10d
32d8(5): mov $0x72,%ebx
32dd(5): jmp 0xfffffc35(%rip)
32e2(6): nop 0x0(%rax,%rax,1)
32e8(5): mov $0x76,%ebx
32ed(5): jmp 0xfffffca3(%rip)
32f2(6): nop 0x0(%rax,%rax,1)
32f8(5): mov $0x9,%edx
32fd(3): xor %r10d,%r10d
3300(5): mov $0x74,%ebx
3305(5): jmp 0xfffffc0d(%rip)
330a(6): nop 0x0(%rax,%rax,1)
3310(5): mov $0x62,%ebx
3315(5): jmp 0xfffffc7b(%rip)
331a(6): nop 0x0(%rax,%rax,1)
3320(3): xor %r10d,%r10d
3323(5): jmp 0xfffffa9d(%rip)
3328(8): nop 0x0(%rax,%rax,1)
3330(5): cmp $0x0,0xf(%rsp)
3335(6): jnz 0x96b(%rip)
333b(4): add $0x1,%rbp
333f(3): mov %r8d,%eax
3342(3): xor %r12d,%r12d
3345(5): mov $0x5c,%ebx
334a(5): jmp 0xfffffb12(%rip)
334f(1): nop 
3350(5): cmp $0x2,0x8(%rsp)
3355(5): movzx 0xf(%rsp),%ebx
335a(3): mov %r8d,%r12d
335d(3): mov %r11,%rbp
3360(3): setz %dl
3363(2): mov %ebx,%eax
3365(3): test %r15,%r15
3368(3): setz %cl
336b(2): and %edx,%eax
336d(2): and %cl,%al
336f(6): jnz 0xa67(%rip)
3375(2): mov %ebx,%eax
3377(3): xor $0x1,%eax
337a(2): and %al,%dl
337c(6): jz 0x970(%rip)
3382(5): cmp $0x0,0x7c(%rsp)
3387(6): jz 0x963(%rip)
338d(5): cmp $0x0,0xe(%rsp)
3392(6): jnz 0x9fb(%rip)
3398(3): test %r13,%r13
339b(3): setz %al
339e(6): cmp $0x0,0x50(%rsp)
33a4(3): setnz %dl
33a7(2): and %dl,%al
33a9(6): jz 0xa23(%rip)
33af(5): mov 0x50(%rsp),%r13
33b4(7): lea 0x3182(%rip),%rbx
33bb(4): mov $0x27,(%r14)
33bf(8): mov $0x2,0x8(%rsp)
33c7(6): mov $0x1,%r15d
33cd(9): mov $0x1,0x18(%rsp)
33d6(5): mov $0x0,0xf(%rsp)
33db(5): mov %rbx,0x48(%rsp)
33e0(4): mov %al,0x7c(%rsp)
33e4(5): jmp 0xfffff8df(%rip)
33e9(7): nop 0x0(%rax)
33f0(5): cmp $0x0,0xf(%rsp)
33f5(6): jnz 0x8ab(%rip)
33fb(3): test %r13,%r13
33fe(6): jz 0x402(%rip)
3404(2): xor %edx,%edx
3406(6): cmp $0x0,0x50(%rsp)
340c(6): jnz 0x3f4(%rip)
3412(5): mov %r13,0x50(%rsp)
3417(4): add $0x3,%r15
341b(2): xor %eax,%eax
341d(5): mov %r12b,0x7c(%rsp)
3422(3): xor %r8d,%r8d
3425(3): mov %rdx,%r13
3428(5): mov $0x27,%ebx
342d(5): jmp 0xfffffa1c(%rip)
3432(6): nop 0x0(%rax,%rax,1)
3438(5): test $0x4,0x78(%rsp)
343d(2): jz 0x23(%rip)
343f(4): lea 0x2(%rbp),%rcx
3443(3): cmp %r11,%rcx
3446(2): jnb 0x1a(%rip)
3448(5): mov 0x10(%rsp),%rax
344d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3452(6): jz 0x790(%rip)
3458(8): nop 0x0(%rax,%rax,1)
3460(2): xor %edx,%edx
3462(3): xor %r12d,%r12d
3465(2): xor %eax,%eax
3467(5): mov $0x3f,%ebx
346c(5): jmp 0xfffff9ac(%rip)
3471(7): nop 0x0(%rax)
3478(5): cmp $0x0,0xf(%rsp)
347d(6): jnz 0x823(%rip)
3483(3): xor %r12d,%r12d
3486(2): xor %eax,%eax
3488(5): mov $0x3f,%ebx
348d(5): jmp 0xfffff9bc(%rip)
3492(6): nop 0x0(%rax,%rax,1)
3498(8): lea 0xa0(%rsp),%rax
34a0(4): cmp $0xffffffff,%r11
34a4(c): mov $0x0,0xa0(%rsp)
34b0(5): mov %rax,0x28(%rsp)
34b5(2): jnz 0x2f(%rip)
34b7(5): mov 0x10(%rsp),%rdi
34bc(5): mov %r8b,0x40(%rsp)
34c1(5): mov %r10b,0x38(%rsp)
34c6(5): mov %r9,0x30(%rsp)
34cb(5): call 0xffffe2f5(%rip)
34d0(6): movzx 0x40(%rsp),%r8d
34d6(6): movzx 0x38(%rsp),%r10d
34dc(3): mov %rax,%r11
34df(5): mov 0x30(%rsp),%r9
34e4(8): lea 0x9c(%rsp),%rax
34ec(2): xor %ecx,%ecx
34ee(4): mov %bl,0x7e(%rsp)
34f2(5): mov %r8b,0x7d(%rsp)
34f7(3): mov %rcx,%rbx
34fa(8): mov %r9,0x88(%rsp)
3502(5): mov %rax,0x38(%rsp)
3507(5): mov %r10b,0x7f(%rsp)
350c(8): mov %r15,0x80(%rsp)
3514(5): mov %r14,0x40(%rsp)
3519(5): mov %r13,0x70(%rsp)
351e(5): mov %r11,0x30(%rsp)
3523(5): mov 0x10(%rsp),%rax
3528(5): lea 0x0(%rbp,%rbx,1),%r14
352d(5): mov 0x30(%rsp),%rdx
3532(5): mov 0x28(%rsp),%rcx
3537(5): mov 0x38(%rsp),%rdi
353c(4): lea 0x0(%rax,%r14,1),%r13
3540(3): sub %r14,%rdx
3543(3): mov %r13,%rsi
3546(5): call 0x23ea(%rip)
354b(3): test %rax,%rax
354e(3): mov %rax,%r15
3551(2): jz 0x50(%rip)
3553(4): cmp $0xffffffff,%rax
3557(6): jz 0x61e(%rip)
355d(4): cmp $0xfffffffe,%rax
3561(6): jz 0x5a0(%rip)
3567(5): cmp $0x2,0x8(%rsp)
356c(3): setz %al
356f(4): and 0xf(%rsp),%al
3573(6): jnz 0x19d(%rip)
3579(7): mov 0x9c(%rsp),%edi
3580(5): call 0xffffe4f0(%rip)
3585(5): mov 0x28(%rsp),%rdi
358a(2): test %eax,%eax
358c(5): mov $0x0,%eax
3591(4): cmove %eax,%r12d
3595(3): add %r15,%rbx
3598(5): call 0xffffe4c8(%rip)
359d(2): test %eax,%eax
359f(2): jz 0xffffff84(%rip)
35a1(3): mov %r12d,%edx
35a4(3): mov %rbx,%rdi
35a7(6): movzx 0x7d(%rsp),%r8d
35ad(3): xor $0x1,%edx
35b0(5): movzx 0x7e(%rsp),%ebx
35b5(6): movzx 0x7f(%rsp),%r10d
35bb(4): and 0xd(%rsp),%dl
35bf(8): mov 0x80(%rsp),%r15
35c7(5): mov 0x40(%rsp),%r14
35cc(5): mov 0x70(%rsp),%r13
35d1(5): mov 0x30(%rsp),%r11
35d6(4): cmp $0x1,%rdi
35da(6): jbe 0x601(%rip)
35e0(3): mov %rdi,%rcx
35e3(2): xor %esi,%esi
35e5(6): movzx 0xf(%rsp),%r9d
35eb(3): add %rbp,%rcx
35ee(5): mov 0x10(%rsp),%rdi
35f3(5): jmp 0xbb(%rip)
35f8(8): nop 0x0(%rax,%rax,1)
3600(5): cmp $0x2,0x8(%rsp)
3605(3): setz %al
3608(3): test %r9b,%r9b
360b(6): jnz 0x4b5(%rip)
3611(3): mov %r8d,%esi
3614(3): xor $0x1,%esi
3617(3): and %sil,%al
361a(2): jz 0x31(%rip)
361c(3): cmp %r15,%r13
361f(2): jbe 0x7(%rip)
3621(5): mov $0x27,0x0(%r14,%r15,1)
3626(4): lea 0x1(%r15),%rsi
362a(3): cmp %rsi,%r13
362d(2): jbe 0x8(%rip)
362f(6): mov $0x24,0x1(%r14,%r15,1)
3635(4): lea 0x2(%r15),%rsi
3639(3): cmp %rsi,%r13
363c(2): jbe 0x8(%rip)
363e(6): mov $0x27,0x2(%r14,%r15,1)
3644(4): add $0x3,%r15
3648(3): mov %eax,%r8d
364b(3): cmp %r15,%r13
364e(2): jbe 0x7(%rip)
3650(5): mov $0x5c,0x0(%r14,%r15,1)
3655(4): lea 0x1(%r15),%rax
3659(3): cmp %rax,%r13
365c(2): jbe 0xf(%rip)
365e(2): mov %ebx,%eax
3660(3): shr $0x6,%al
3663(3): add $0x30,%eax
3666(5): mov %al,0x1(%r14,%r15,1)
366b(4): lea 0x2(%r15),%rax
366f(3): cmp %rax,%r13
3672(2): jbe 0x12(%rip)
3674(2): mov %ebx,%eax
3676(3): shr $0x3,%al
3679(3): and $0x7,%eax
367c(3): add $0x30,%eax
367f(5): mov %al,0x2(%r14,%r15,1)
3684(3): and $0x7,%ebx
3687(4): add $0x1,%rbp
368b(4): add $0x3,%r15
368f(3): add $0x30,%ebx
3692(3): cmp %rcx,%rbp
3695(6): jnb 0xfffff7eb(%rip)
369b(2): mov %edx,%esi
369d(3): cmp %r15,%r13
36a0(2): jbe 0x6(%rip)
36a2(4): mov %bl,0x0(%r14,%r15,1)
36a6(4): movzx 0x0(%rdi,%rbp,1),%ebx
36aa(4): add $0x1,%r15
36ae(2): test %dl,%dl
36b0(6): jnz 0xffffff50(%rip)
36b6(2): mov %esi,%eax
36b8(3): xor $0x1,%eax
36bb(3): and %r8d,%eax
36be(3): test %r10b,%r10b
36c1(2): jz 0x10(%rip)
36c3(3): cmp %r15,%r13
36c6(2): jbe 0x7(%rip)
36c8(5): mov $0x5c,0x0(%r14,%r15,1)
36cd(4): add $0x1,%r15
36d1(4): add $0x1,%rbp
36d5(3): cmp %rcx,%rbp
36d8(6): jnb 0xfffff784(%rip)
36de(2): test %al,%al
36e0(6): jz 0x3fe(%rip)
36e6(3): cmp %r15,%r13
36e9(2): jbe 0x7(%rip)
36eb(5): mov $0x27,0x0(%r14,%r15,1)
36f0(4): lea 0x1(%r15),%rax
36f4(3): cmp %rax,%r13
36f7(2): jbe 0x8(%rip)
36f9(6): mov $0x27,0x1(%r14,%r15,1)
36ff(4): add $0x2,%r15
3703(3): xor %r10d,%r10d
3706(3): xor %r8d,%r8d
3709(2): jmp 0xffffff94(%rip)
370b(5): nop 0x0(%rax,%rax,1)
3710(4): cmp $0x1,%r15
3714(6): jz 0xfffffe65(%rip)
371a(5): mov 0x10(%rsp),%rdi
371f(4): lea 0x0(%rdi,%r15,1),%rcx
3723(5): lea 0x1(%rdi,%r14,1),%rdx
3728(4): lea 0x0(%rcx,%r14,1),%r8
372c(2): jmp 0x11(%rip)
372e(2): nop 
3730(4): add $0x1,%rdx
3734(3): cmp %rdx,%r8
3737(6): jz 0xfffffe42(%rip)
373d(3): movzx (%rdx),%ecx
3740(3): sub $0x5b,%ecx
3743(3): cmp $0x21,%cl
3746(2): jnbe 0xffffffea(%rip)
3748(5): mov $0x1,%esi
374d(3): shl/sal %cl,%rsi
3750(3): mov %rsi,%rcx
3753(a): mov $0x8589934635,%rsi
375d(3): test %rsi,%rcx
3760(2): jz 0xffffffd0(%rip)
3762(5): mov 0x40(%rsp),%r14
3767(5): mov 0x70(%rsp),%r13
376c(5): mov 0x30(%rsp),%rbp
3771(8): mov $0x2,0x8(%rsp)
3779(5): cmp $0x0,0xd(%rsp)
377e(2): jz 0x12(%rip)
3780(2): test %al,%al
3782(5): mov $0x4,%eax
3787(5): cmove 0x8(%rsp),%eax
378c(4): mov %eax,0x8(%rsp)
3790(4): sub $0x8,%rsp
3794(3): mov %rbp,%rcx
3797(3): mov %r13,%rsi
379a(4): push 0x68(%rsp)
379e(4): push 0x78(%rsp)
37a2(3): mov %r14,%rdi
37a5(2): push $0x0
37a7(8): mov 0x98(%rsp),%r9d
37af(5): mov 0x28(%rsp),%r8d
37b4(5): mov 0x30(%rsp),%rdx
37b9(4): and $0xfd,%r9d
37bd(5): call 0xfffff433(%rip)
37c2(4): add $0x20,%rsp
37c6(3): mov %rax,%r15
37c9(8): mov 0xa8(%rsp),%rbx
37d1(9): xor $0x28,%rbx
37da(3): mov %r15,%rax
37dd(6): jnz 0x606(%rip)
37e3(7): add $0xb8,%rsp
37ea(1): pop %rbx
37eb(1): pop %rbp
37ec(2): pop %r12
37ee(2): pop %r13
37f0(2): pop %r14
37f2(2): pop %r15
37f4(1): ret near (%rsp)
37f5(3): nop (%rax)
37f8(3): mov %r11,%rbp
37fb(5): jmp 0xffffff7e(%rip)
3800(3): cmp %r15,%r13
3803(2): jbe 0x7(%rip)
3805(5): mov $0x27,0x0(%r14,%r15,1)
380a(4): lea 0x1(%r15),%rax
380e(3): cmp %rax,%r13
3811(2): jbe 0x8(%rip)
3813(6): mov $0x5c,0x1(%r14,%r15,1)
3819(4): lea 0x2(%r15),%rax
381d(3): cmp %rax,%r13
3820(6): jbe 0x5f2(%rip)
3826(3): mov %r13,%rdx
3829(6): mov $0x27,0x2(%r14,%r15,1)
382f(5): mov 0x50(%rsp),%r13
3834(5): jmp 0xfffffbde(%rip)
3839(3): mov %r12d,%eax
383c(5): mov $0x30,%ebx
3841(3): xor %r12d,%r12d
3844(5): jmp 0xfffff605(%rip)
3849(6): mov $0x27,0x2(%r14,%r15,1)
384f(5): jmp 0xfffff9ca(%rip)
3854(2): test %ebx,%ebx
3856(6): jnz 0xfffff42d(%rip)
385c(5): mov $0x1,0xd(%rsp)
3861(3): test %r13,%r13
3864(6): jnz 0x596(%rip)
386a(7): lea 0x2ccc(%rip),%rax
3871(9): mov $0x0,0x50(%rsp)
387a(5): mov $0x1,0xe(%rsp)
387f(5): mov $0x0,0x7c(%rsp)
3884(3): xor %r12d,%r12d
3887(5): mov $0x0,0xf(%rsp)
388c(9): mov $0x1,0x18(%rsp)
3895(5): mov %rax,0x48(%rsp)
389a(6): mov $0x1,%r15d
38a0(8): mov $0x2,0x8(%rsp)
38a8(5): jmp 0xfffff41b(%rip)
38ad(3): nop (%rax)
38b0(2): test %ebx,%ebx
38b2(6): jnz 0x3fb(%rip)
38b8(3): test %r13,%r13
38bb(6): jz 0x22b(%rip)
38c1(4): mov $0x22,(%r14)
38c5(5): mov $0x1,0xe(%rsp)
38ca(3): xor %r12d,%r12d
38cd(5): mov $0x0,0x7c(%rsp)
38d2(9): mov $0x0,0x50(%rsp)
38db(7): lea 0x2c59(%rip),%rax
38e2(5): mov $0x0,0xf(%rsp)
38e7(5): mov $0x1,0xd(%rsp)
38ec(9): mov $0x1,0x18(%rsp)
38f5(6): mov $0x1,%r15d
38fb(5): mov %rax,0x48(%rsp)
3900(5): jmp 0xfffff3c3(%rip)
3905(7): lea 0x2c2f(%rip),%rax
390c(5): mov $0x1,0xe(%rsp)
3911(5): mov $0x0,0x7c(%rsp)
3916(3): xor %r12d,%r12d
3919(9): mov $0x0,0x50(%rsp)
3922(5): mov $0x1,0xf(%rsp)
3927(5): mov $0x1,0xd(%rsp)
392c(9): mov $0x1,0x18(%rsp)
3935(3): xor %r15d,%r15d
3938(5): mov %rax,0x48(%rsp)
393d(8): mov $0x5,0x8(%rsp)
3945(5): jmp 0xfffff37e(%rip)
394a(5): mov $0x1,0xe(%rsp)
394f(5): mov $0x0,0x7c(%rsp)
3954(3): xor %r12d,%r12d
3957(9): mov $0x0,0x50(%rsp)
3960(5): mov $0x0,0xf(%rsp)
3965(3): xor %r15d,%r15d
3968(5): mov $0x1,0xd(%rsp)
396d(9): mov $0x0,0x18(%rsp)
3976(9): mov $0x0,0x48(%rsp)
397f(5): jmp 0xfffff344(%rip)
3984(5): cmp $0xa,0x8(%rsp)
3989(2): jz 0x58(%rip)
398b(7): lea 0x2bad(%rip),%rsi
3992(2): xor %edi,%edi
3994(5): mov $0x5,%edx
3999(5): call 0xffffde07(%rip)
399e(3): mov %rax,%rcx
39a1(5): mov %rax,0x68(%rsp)
39a6(7): lea 0x2b92(%rip),%rax
39ad(3): cmp %rax,%rcx
39b0(6): jz 0x39e(%rip)
39b6(7): lea 0x2b80(%rip),%rsi
39bd(2): xor %edi,%edi
39bf(5): mov $0x5,%edx
39c4(5): call 0xffffdddc(%rip)
39c9(3): mov %rax,%rcx
39cc(5): mov %rax,0x60(%rsp)
39d1(7): lea 0x2b65(%rip),%rax
39d8(3): cmp %rax,%rcx
39db(6): jz 0x389(%rip)
39e1(3): xor %r15d,%r15d
39e4(2): test %ebx,%ebx
39e6(6): jz 0x1c7(%rip)
39ec(2): test %ebx,%ebx
39ee(5): mov 0x60(%rsp),%rbx
39f3(5): setnz 0xf(%rsp)
39f8(3): xor %r12d,%r12d
39fb(3): mov %rbx,%rdi
39fe(5): call 0xffffddc2(%rip)
3a03(5): mov %rbx,0x48(%rsp)
3a08(5): mov %rax,0x18(%rsp)
3a0d(5): mov $0x1,0xe(%rsp)
3a12(5): mov $0x0,0x7c(%rsp)
3a17(9): mov $0x0,0x50(%rsp)
3a20(5): mov $0x1,0xd(%rsp)
3a25(5): jmp 0xfffff29e(%rip)
3a2a(5): mov $0x1,0xe(%rsp)
3a2f(5): mov $0x0,0x7c(%rsp)
3a34(3): xor %r12d,%r12d
3a37(9): mov $0x0,0x50(%rsp)
3a40(5): mov $0x0,0xf(%rsp)
3a45(3): xor %r15d,%r15d
3a48(5): mov $0x0,0xd(%rsp)
3a4d(9): mov $0x0,0x18(%rsp)
3a56(9): mov $0x0,0x48(%rsp)
3a5f(5): jmp 0xfffff264(%rip)
3a64(5): mov $0x1,0xe(%rsp)
3a69(5): mov $0x0,0x7c(%rsp)
3a6e(3): xor %r12d,%r12d
3a71(9): mov $0x0,0x50(%rsp)
3a7a(5): mov $0x1,0xf(%rsp)
3a7f(5): mov $0x1,0xd(%rsp)
3a84(5): jmp 0xfffff21f(%rip)
3a89(3): cmp %r15,%r13
3a8c(2): jbe 0x7(%rip)
3a8e(5): mov $0x30,0x0(%r14,%r15,1)
3a93(4): lea 0x2(%rcx),%rax
3a97(3): cmp %rax,%r13
3a9a(2): jbe 0x8(%rip)
3a9c(6): mov $0x30,0x2(%r14,%rcx,1)
3aa2(3): mov %r12d,%eax
3aa5(4): lea 0x3(%rcx),%r15
3aa9(3): xor %r12d,%r12d
3aac(5): mov $0x30,%ebx
3ab1(5): jmp 0xfffff367(%rip)
3ab6(a): nop 0x0(%rax,%rax,1)
3ac0(5): movzx 0xf(%rsp),%ebx
3ac5(3): mov %r11,%rbp
3ac8(4): mov %bl,0xd(%rsp)
3acc(5): jmp 0xfffffcad(%rip)
3ad1(5): movzx 0xd(%rsp),%edx
3ad6(3): xor %r12d,%r12d
3ad9(5): jmp 0xfffffb07(%rip)
3ade(3): xor %r10d,%r10d
3ae1(5): jmp 0xfffffbbc(%rip)
3ae6(9): mov $0x0,0x50(%rsp)
3aef(5): mov $0x1,0xe(%rsp)
3af4(3): xor %r12d,%r12d
3af7(5): mov $0x0,0x7c(%rsp)
3afc(5): jmp 0xfffffddf(%rip)
3b01(5): mov 0x30(%rsp),%r11
3b06(3): mov %r14,%rsi
3b09(3): mov %r13,%rcx
3b0c(3): mov %rbx,%rax
3b0f(3): mov %rbx,%rdi
3b12(6): movzx 0x7d(%rsp),%r8d
3b18(5): movzx 0x7e(%rsp),%ebx
3b1d(8): mov 0x88(%rsp),%r9
3b25(3): cmp %r11,%rsi
3b28(6): movzx 0x7f(%rsp),%r10d
3b2e(8): mov 0x80(%rsp),%r15
3b36(5): mov 0x40(%rsp),%r14
3b3b(5): mov 0x70(%rsp),%r13
3b40(2): jnb 0x28(%rip)
3b42(3): cmp $0x0,(%rcx)
3b45(2): jnz 0x12(%rip)
3b47(2): jmp 0x21(%rip)
3b49(7): nop 0x0(%rax)
3b50(5): cmp $0x0,0x0(%r9,%rax,1)
3b55(2): jz 0x10(%rip)
3b57(4): add $0x1,%rax
3b5b(5): lea 0x0(%rbp,%rax,1),%rdx
3b60(3): cmp %rdx,%r11
3b63(2): jnbe 0xffffffed(%rip)
3b65(3): mov %rax,%rdi
3b68(5): movzx 0xd(%rsp),%edx
3b6d(3): xor %r12d,%r12d
3b70(5): jmp 0xfffffa66(%rip)
3b75(3): mov %rbx,%rdi
3b78(6): movzx 0x7d(%rsp),%r8d
3b7e(5): movzx 0x7e(%rsp),%ebx
3b83(6): movzx 0x7f(%rsp),%r10d
3b89(8): mov 0x80(%rsp),%r15
3b91(3): xor %r12d,%r12d
3b94(5): mov 0x40(%rsp),%r14
3b99(5): mov 0x70(%rsp),%r13
3b9e(5): mov 0x30(%rsp),%r11
3ba3(5): movzx 0xd(%rsp),%edx
3ba8(5): jmp 0xfffffa2e(%rip)
3bad(5): mov 0x68(%rsp),%rdx
3bb2(3): movzx (%rdx),%eax
3bb5(2): test %al,%al
3bb7(6): jz 0xfffffe35(%rip)
3bbd(3): nop (%rax)
3bc0(3): cmp %r15,%r13
3bc3(2): jbe 0x6(%rip)
3bc5(4): mov %al,0x0(%r14,%r15,1)
3bc9(4): add $0x1,%r15
3bcd(5): movzx 0x0(%rdx,%r15,1),%eax
3bd2(2): test %al,%al
3bd4(2): jnz 0xffffffec(%rip)
3bd6(5): jmp 0xfffffe16(%rip)
3bdb(2): mov %edx,%eax
3bdd(5): jmp 0xfffff55a(%rip)
3be2(4): movzx 0x0(%rax,%rcx,1),%ebx
3be6(3): cmp $0x3e,%bl
3be9(6): jnbe 0xfffff877(%rip)
3bef(a): mov $0x8070630310989004800,%rax
3bf9(4): bt %rbx,%rax
3bfd(6): jnb 0xfffff863(%rip)
3c03(5): cmp $0x0,0xf(%rsp)
3c08(6): jnz 0x1ea(%rip)
3c0e(3): cmp %r15,%r13
3c11(2): jbe 0x7(%rip)
3c13(5): mov $0x3f,0x0(%r14,%r15,1)
3c18(4): lea 0x1(%r15),%rax
3c1c(3): cmp %rax,%r13
3c1f(2): jbe 0x8(%rip)
3c21(6): mov $0x22,0x1(%r14,%r15,1)
3c27(4): lea 0x2(%r15),%rax
3c2b(3): cmp %rax,%r13
3c2e(2): jbe 0x8(%rip)
3c30(6): mov $0x22,0x2(%r14,%r15,1)
3c36(4): lea 0x3(%r15),%rax
3c3a(3): cmp %rax,%r13
3c3d(2): jbe 0x8(%rip)
3c3f(6): mov $0x3f,0x3(%r14,%r15,1)
3c45(4): add $0x4,%r15
3c49(2): xor %edx,%edx
3c4b(3): xor %r12d,%r12d
3c4e(2): xor %eax,%eax
3c50(3): mov %rcx,%rbp
3c53(5): jmp 0xfffff1c5(%rip)
3c58(2): test %ebx,%ebx
3c5a(6): jz 0x18e(%rip)
3c60(7): lea 0x28d6(%rip),%rax
3c67(5): mov $0x1,0xe(%rsp)
3c6c(5): mov $0x0,0x7c(%rsp)
3c71(3): xor %r12d,%r12d
3c74(9): mov $0x0,0x50(%rsp)
3c7d(5): mov $0x1,0xf(%rsp)
3c82(5): mov $0x0,0xd(%rsp)
3c87(9): mov $0x1,0x18(%rsp)
3c90(3): xor %r15d,%r15d
3c93(5): mov %rax,0x48(%rsp)
3c98(5): jmp 0xfffff02b(%rip)
3c9d(3): nop (%rax)
3ca0(3): mov %r11,%rbp
3ca3(5): movzx 0xf(%rsp),%eax
3ca8(5): jmp 0xfffffad1(%rip)
3cad(7): lea 0x2887(%rip),%rax
3cb4(5): mov $0x1,0xe(%rsp)
3cb9(5): mov $0x0,0x7c(%rsp)
3cbe(3): xor %r12d,%r12d
3cc1(9): mov $0x0,0x50(%rsp)
3cca(5): mov $0x1,0xf(%rsp)
3ccf(5): mov $0x1,0xd(%rsp)
3cd4(9): mov $0x1,0x18(%rsp)
3cdd(3): xor %r15d,%r15d
3ce0(5): mov %rax,0x48(%rsp)
3ce5(5): jmp 0xffffefde(%rip)
3cea(2): mov %edx,%eax
3cec(5): mov 0x48(%rsp),%rbx
3cf1(3): test %rbx,%rbx
3cf4(2): jz 0x2e(%rip)
3cf6(2): test %al,%al
3cf8(2): jz 0x2a(%rip)
3cfa(3): movzx (%rbx),%ecx
3cfd(3): mov %rbx,%rax
3d00(2): test %cl,%cl
3d02(2): jz 0x20(%rip)
3d04(3): mov %r15,%rdx
3d07(3): sub %r15,%rax
3d0a(3): cmp %rdx,%r13
3d0d(2): jbe 0x6(%rip)
3d0f(4): mov %cl,0x0(%r14,%rdx,1)
3d13(4): add $0x1,%rdx
3d17(4): movzx 0x0(%rax,%rdx,1),%ecx
3d1b(2): test %cl,%cl
3d1d(2): jnz 0xffffffed(%rip)
3d1f(3): mov %rdx,%r15
3d22(3): cmp %r15,%r13
3d25(6): jbe 0xfffffaa4(%rip)
3d2b(5): mov $0x0,0x0(%r14,%r15,1)
3d30(5): jmp 0xfffffa99(%rip)
3d35(5): cmp $0x2,0x8(%rsp)
3d3a(5): movzx 0xf(%rsp),%ebx
3d3f(3): mov %r11,%rbp
3d42(3): setz %al
3d45(4): mov %bl,0xd(%rsp)
3d49(5): jmp 0xfffffa30(%rip)
3d4e(4): mov 0x8(%rsp),%esi
3d52(3): mov %rcx,%rdi
3d55(5): call 0xffffedab(%rip)
3d5a(5): mov %rax,0x68(%rsp)
3d5f(5): jmp 0xfffffc57(%rip)
3d64(4): mov 0x8(%rsp),%esi
3d68(3): mov %rcx,%rdi
3d6b(5): call 0xffffed95(%rip)
3d70(5): mov %rax,0x60(%rsp)
3d75(5): jmp 0xfffffc6c(%rip)
3d7a(5): movzx 0xf(%rsp),%ebx
3d7f(3): mov %r11,%rbp
3d82(2): mov %edx,%eax
3d84(4): mov %bl,0xd(%rsp)
3d88(5): jmp 0xfffff9f1(%rip)
3d8d(4): sub $0x8,%rsp
3d91(6): mov $0x5,%r8d
3d97(3): mov %r11,%rcx
3d9a(4): push 0x68(%rsp)
3d9e(4): push 0x78(%rsp)
3da2(3): mov %r14,%rdi
3da5(4): push 0x38(%rsp)
3da9(8): mov 0x98(%rsp),%r9d
3db1(5): mov 0x30(%rsp),%rdx
3db6(5): mov 0x70(%rsp),%rsi
3dbb(5): call 0xffffee35(%rip)
3dc0(4): add $0x20,%rsp
3dc4(3): mov %rax,%r15
3dc7(5): jmp 0xfffffa02(%rip)
3dcc(5): movzx 0x7c(%rsp),%eax
3dd1(5): jmp 0xffffff1b(%rip)
3dd6(8): mov $0x2,0x8(%rsp)
3dde(5): jmp 0xfffff99b(%rip)
3de3(5): call 0xffffd9fd(%rip)
3de8(5): mov $0x0,0xd(%rsp)
3ded(5): jmp 0xfffffa74(%rip)
3df2(3): mov %r11,%rbp
3df5(5): jmp 0xfffff99b(%rip)
3dfa(5): mov $0x1,0xe(%rsp)
3dff(2): xor %eax,%eax
3e01(3): xor %r12d,%r12d
3e04(9): mov $0x0,0x50(%rsp)
3e0d(5): jmp 0xfffff5a7(%rip)
3e12(3): mov %r13,%rdx
3e15(5): mov 0x50(%rsp),%r13
3e1a(5): jmp 0xfffff5f8(%rip)
3e1f(5): call 0xffffd8e1(%rip)

"quotearg_n_options" :
3e30(2): push %r15
3e32(2): push %r14
3e34(3): movsxd %edi,%r15
3e37(2): push %r13
3e39(2): push %r12
3e3b(3): mov %rdx,%r14
3e3e(1): push %rbp
3e3f(1): push %rbx
3e40(3): mov %rcx,%rbp
3e43(4): sub $0x28,%rsp
3e47(5): mov %rsi,0x8(%rsp)
3e4c(5): call 0xffffd8c4(%rip)
3e51(3): mov %rax,%r13
3e54(2): mov (%rax),%eax
3e56(3): test %r15d,%r15d
3e59(7): mov 0x205200(%rip),%rbx
3e60(4): mov %eax,0x18(%rsp)
3e64(6): js 0x16d(%rip)
3e6a(7): cmp %r15d,0x2051e7(%rip)
3e71(2): jnle 0x64(%rip)
3e73(7): cmp $0x7fffffff,%r15d
3e7a(6): jz 0x15c(%rip)
3e80(4): lea 0x1(%r15),%r12d
3e84(7): lea 0x2051e5(%rip),%rax
3e8b(3): movsxd %r12d,%rsi
3e8e(4): shl/sal $0x4,%rsi
3e92(3): cmp %rax,%rbx
3e95(6): jz 0x11b(%rip)
3e9b(3): mov %rbx,%rdi
3e9e(5): call 0x1412(%rip)
3ea3(3): mov %rax,%rbx
3ea6(7): mov %rax,0x2051b3(%rip)
3ead(7): movsxd 0x2051a4(%rip),%rdi
3eb4(3): mov %r12d,%edx
3eb7(2): xor %esi,%esi
3eb9(2): sub %edi,%edx
3ebb(4): shl/sal $0x4,%rdi
3ebf(3): movsxd %edx,%rdx
3ec2(3): add %rbx,%rdi
3ec5(4): shl/sal $0x4,%rdx
3ec9(5): call 0xffffd997(%rip)
3ece(7): mov %r12d,0x205183(%rip)
3ed5(3): mov 0x4(%rbp),%eax
3ed8(4): shl/sal $0x4,%r15
3edc(4): sub $0x8,%rsp
3ee0(3): add %r15,%rbx
3ee3(4): lea 0x8(%rbp),%r15
3ee7(4): mov 0x0(%rbp),%r8d
3eeb(3): mov (%rbx),%r11
3eee(4): mov 0x8(%rbx),%r12
3ef2(3): mov %r14,%rcx
3ef5(3): or $0x1,%eax
3ef8(4): mov %eax,0x24(%rsp)
3efc(3): push 0x30(%rbp)
3eff(3): mov %eax,%r9d
3f02(3): push 0x28(%rbp)
3f05(2): push %r15
3f07(3): mov %r11,%rsi
3f0a(5): mov 0x28(%rsp),%rdx
3f0f(3): mov %r12,%rdi
3f12(5): mov %r11,0x30(%rsp)
3f17(5): call 0xffffecd9(%rip)
3f1c(4): add $0x20,%rsp
3f20(5): mov 0x10(%rsp),%r11
3f25(3): cmp %rax,%r11
3f28(2): jnbe 0x69(%rip)
3f2a(4): lea 0x1(%rax),%rsi
3f2e(7): lea 0x2051cb(%rip),%rax
3f35(3): cmp %rax,%r12
3f38(3): mov %rsi,(%rbx)
3f3b(2): jz 0x14(%rip)
3f3d(3): mov %r12,%rdi
3f40(5): mov %rsi,0x10(%rsp)
3f45(5): call 0xffffd7ab(%rip)
3f4a(5): mov 0x10(%rsp),%rsi
3f4f(3): mov %rsi,%rdi
3f52(5): mov %rsi,0x10(%rsp)
3f57(5): call 0x12f9(%rip)
3f5c(4): sub $0x8,%rsp
3f60(4): mov %rax,0x8(%rbx)
3f64(4): mov 0x0(%rbp),%r8d
3f68(3): push 0x30(%rbp)
3f6b(3): push 0x28(%rbp)
3f6e(3): mov %r14,%rcx
3f71(2): push %r15
3f73(5): mov 0x3c(%rsp),%r9d
3f78(3): mov %rax,%rdi
3f7b(5): mov 0x28(%rsp),%rdx
3f80(5): mov 0x30(%rsp),%rsi
3f85(3): mov %rax,%r12
3f88(5): call 0xffffec68(%rip)
3f8d(4): add $0x20,%rsp
3f91(4): mov 0x18(%rsp),%eax
3f95(4): mov %eax,0x0(%r13)
3f99(4): add $0x28,%rsp
3f9d(3): mov %r12,%rax
3fa0(1): pop %rbx
3fa1(1): pop %rbp
3fa2(2): pop %r12
3fa4(2): pop %r13
3fa6(2): pop %r14
3fa8(2): pop %r15
3faa(1): ret near (%rsp)
3fab(5): nop 0x0(%rax,%rax,1)
3fb0(2): xor %edi,%edi
3fb2(5): call 0x12fe(%rip)
3fb7(8): movdqa 0x2050b1(%rip),%xmm0
3fbf(3): mov %rax,%rbx
3fc2(7): mov %rax,0x205097(%rip)
3fc9(3): movups %xmm0,(%rax)
3fcc(5): jmp 0xfffffee1(%rip)
3fd1(5): call 0xffffd72f(%rip)
3fd6(5): call 0x14ca(%rip)

"clone_quoting_options" :
3fe0(2): push %r12
3fe2(1): push %rbp
3fe3(1): push %rbx
3fe4(3): mov %rdi,%rbx
3fe7(5): call 0xffffd729(%rip)
3fec(3): mov (%rax),%r12d
3fef(3): mov %rax,%rbp
3ff2(7): lea 0x205207(%rip),%rax
3ff9(3): test %rbx,%rbx
3ffc(5): mov $0x38,%esi
4001(4): cmove %rax,%rbx
4005(3): mov %rbx,%rdi
4008(5): call 0x1448(%rip)
400d(4): mov %r12d,0x0(%rbp)
4011(1): pop %rbx
4012(1): pop %rbp
4013(2): pop %r12
4015(1): ret near (%rsp)

"get_quoting_style" :
4020(7): lea 0x2051d9(%rip),%rax
4027(3): test %rdi,%rdi
402a(4): cmove %rax,%rdi
402e(2): mov (%rdi),%eax
4030(1): ret near (%rsp)

"set_quoting_style" :
4040(7): lea 0x2051b9(%rip),%rax
4047(3): test %rdi,%rdi
404a(4): cmove %rax,%rdi
404e(2): mov %esi,(%rdi)
4050(1): ret near (%rsp)

"set_char_quoting" :
4060(7): lea 0x205199(%rip),%rax
4067(3): test %rdi,%rdi
406a(2): mov %esi,%ecx
406c(4): cmove %rax,%rdi
4070(2): mov %esi,%eax
4072(3): and $0x1f,%ecx
4075(3): shr $0x5,%al
4078(3): movzx %al,%eax
407b(5): lea 0x8(%rdi,%rax,4),%rdi
4080(2): mov (%rdi),%esi
4082(2): mov %esi,%eax
4084(2): shr %cl,%eax
4086(2): xor %eax,%edx
4088(3): and $0x1,%eax
408b(3): and $0x1,%edx
408e(2): shl/sal %cl,%edx
4090(2): xor %esi,%edx
4092(2): mov %edx,(%rdi)
4094(1): ret near (%rsp)

"set_quoting_flags" :
40a0(7): lea 0x205159(%rip),%rax
40a7(3): test %rdi,%rdi
40aa(4): cmove %rax,%rdi
40ae(3): mov 0x4(%rdi),%eax
40b1(3): mov %esi,0x4(%rdi)
40b4(1): ret near (%rsp)

"set_custom_quoting" :
40c0(7): lea 0x205139(%rip),%rax
40c7(3): test %rdi,%rdi
40ca(4): cmove %rax,%rdi
40ce(3): test %rsi,%rsi
40d1(6): mov $0xa,(%rdi)
40d7(2): jz 0x10(%rip)
40d9(3): test %rdx,%rdx
40dc(2): jz 0xb(%rip)
40de(4): mov %rsi,0x28(%rdi)
40e2(4): mov %rdx,0x30(%rdi)
40e6(1): ret near (%rsp)
40e7(4): sub $0x8,%rsp
40eb(5): call 0xffffd615(%rip)

"quotearg_buffer" :
40f0(2): push %r15
40f2(2): push %r14
40f4(7): lea 0x205105(%rip),%rax
40fb(2): push %r13
40fd(2): push %r12
40ff(3): mov %rdi,%r13
4102(1): push %rbp
4103(1): push %rbx
4104(3): mov %r8,%rbx
4107(3): mov %rsi,%r14
410a(3): mov %rdx,%r15
410d(4): sub $0x18,%rsp
4111(3): test %r8,%r8
4114(4): cmove %rax,%rbx
4118(5): mov %rcx,0x8(%rsp)
411d(5): call 0xffffd5f3(%rip)
4122(3): mov (%rax),%r12d
4125(3): mov %rax,%rbp
4128(4): lea 0x8(%rbx),%rax
412c(4): sub $0x8,%rsp
4130(4): mov 0x4(%rbx),%r9d
4134(3): push 0x30(%rbx)
4137(3): mov (%rbx),%r8d
413a(3): push 0x28(%rbx)
413d(3): mov %r15,%rdx
4140(1): push %rax
4141(5): mov 0x28(%rsp),%rcx
4146(3): mov %r14,%rsi
4149(3): mov %r13,%rdi
414c(5): call 0xffffeaa4(%rip)
4151(4): mov %r12d,0x0(%rbp)
4155(4): add $0x38,%rsp
4159(1): pop %rbx
415a(1): pop %rbp
415b(2): pop %r12
415d(2): pop %r13
415f(2): pop %r14
4161(2): pop %r15
4163(1): ret near (%rsp)

"quotearg_alloc_mem" :
4170(2): push %r15
4172(2): push %r14
4174(7): lea 0x205085(%rip),%rax
417b(2): push %r13
417d(2): push %r12
417f(3): mov %rdx,%r12
4182(1): push %rbp
4183(1): push %rbx
4184(3): mov %rcx,%rbx
4187(3): mov %rdi,%r14
418a(3): mov %rsi,%r15
418d(4): sub $0x38,%rsp
4191(3): test %rcx,%rcx
4194(4): cmove %rax,%rbx
4198(2): xor %ebp,%ebp
419a(5): call 0xffffd576(%rip)
419f(3): test %r12,%r12
41a2(3): mov %rax,%r13
41a5(2): mov (%rax),%eax
41a7(4): setz %bpl
41ab(3): or 0x4(%rbx),%ebp
41ae(4): lea 0x8(%rbx),%r10
41b2(4): sub $0x8,%rsp
41b6(3): mov (%rbx),%r8d
41b9(3): mov %r15,%rcx
41bc(4): mov %eax,0x14(%rsp)
41c0(3): push 0x30(%rbx)
41c3(3): mov %r14,%rdx
41c6(3): push 0x28(%rbx)
41c9(2): push %r10
41cb(2): xor %esi,%esi
41cd(3): mov %ebp,%r9d
41d0(2): xor %edi,%edi
41d2(5): mov %r10,0x40(%rsp)
41d7(5): call 0xffffea19(%rip)
41dc(4): lea 0x1(%rax),%rsi
41e0(5): mov %rax,0x48(%rsp)
41e5(4): add $0x20,%rsp
41e9(3): mov %rsi,%rdi
41ec(5): mov %rsi,0x18(%rsp)
41f1(5): call 0x105f(%rip)
41f6(5): mov %rax,0x10(%rsp)
41fb(4): sub $0x8,%rsp
41ff(3): push 0x30(%rbx)
4202(3): push 0x28(%rbx)
4205(5): mov 0x38(%rsp),%r10
420a(3): mov %ebp,%r9d
420d(3): mov (%rbx),%r8d
4210(3): mov %r15,%rcx
4213(3): mov %r14,%rdx
4216(3): mov %rax,%rdi
4219(2): push %r10
421b(5): mov 0x38(%rsp),%rsi
4220(5): call 0xffffe9d0(%rip)
4225(4): mov 0x2c(%rsp),%eax
4229(4): add $0x20,%rsp
422d(3): test %r12,%r12
4230(4): mov %eax,0x0(%r13)
4234(2): jz 0xb(%rip)
4236(5): mov 0x28(%rsp),%r11
423b(4): mov %r11,(%r12)
423f(5): mov 0x10(%rsp),%rax
4244(4): add $0x38,%rsp
4248(1): pop %rbx
4249(1): pop %rbp
424a(2): pop %r12
424c(2): pop %r13
424e(2): pop %r14
4250(2): pop %r15
4252(1): ret near (%rsp)

"quotearg_alloc" :
4260(3): mov %rdx,%rcx
4263(2): xor %edx,%edx
4265(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4270(6): mov 0x204de2(%rip),%eax
4276(2): push %r12
4278(7): mov 0x204de1(%rip),%r12
427f(1): push %rbp
4280(1): push %rbx
4281(3): cmp $0x1,%eax
4284(2): jle 0x2d(%rip)
4286(3): sub $0x2,%eax
4289(5): lea 0x18(%r12),%rbx
428e(4): shl/sal $0x4,%rax
4292(5): lea 0x28(%r12,%rax,1),%rbp
4297(9): nop 0x0(%rax,%rax,1)
42a0(3): mov (%rbx),%rdi
42a3(4): add $0x10,%rbx
42a7(5): call 0xffffd449(%rip)
42ac(3): cmp %rbp,%rbx
42af(2): jnz 0xfffffff1(%rip)
42b1(5): mov 0x8(%r12),%rdi
42b6(7): lea 0x204e43(%rip),%rbx
42bd(3): cmp %rbx,%rdi
42c0(2): jz 0x19(%rip)
42c2(5): call 0xffffd42e(%rip)
42c7(b): mov $0x100,0x204d9e(%rip)
42d2(7): mov %rbx,0x204d9f(%rip)
42d9(7): lea 0x204d90(%rip),%rbx
42e0(3): cmp %rbx,%r12
42e3(2): jz 0x11(%rip)
42e5(3): mov %r12,%rdi
42e8(5): call 0xffffd408(%rip)
42ed(7): mov %rbx,0x204d6c(%rip)
42f4(1): pop %rbx
42f5(a): mov $0x1,0x204d59(%rip)
42ff(1): pop %rbp
4300(2): pop %r12
4302(1): ret near (%rsp)

"quotearg_n" :
4310(7): lea 0x204ee9(%rip),%rcx
4317(7): mov $0xffffffff,%rdx
431e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4330(7): lea 0x204ec9(%rip),%rcx
4337(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4340(7): lea 0x204eb9(%rip),%rcx
4347(3): mov %rdi,%rsi
434a(7): mov $0xffffffff,%rdx
4351(2): xor %edi,%edi
4353(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4360(7): lea 0x204e99(%rip),%rcx
4367(3): mov %rsi,%rdx
436a(3): mov %rdi,%rsi
436d(2): xor %edi,%edi
436f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4380(4): sub $0x48,%rsp
4384(3): mov %rdx,%rax
4387(9): mov $0x28,%rdx
4390(5): mov %rdx,0x38(%rsp)
4395(2): xor %edx,%edx
4397(3): cmp $0xa,%esi
439a(2): jz 0x6a(%rip)
439c(3): mov %esi,(%rsp)
439f(3): mov %rsp,%rcx
43a2(7): mov $0xffffffff,%rdx
43a9(3): mov %rax,%rsi
43ac(9): mov $0x0,0x4(%rsp)
43b5(9): mov $0x0,0xc(%rsp)
43be(9): mov $0x0,0x14(%rsp)
43c7(9): mov $0x0,0x1c(%rsp)
43d0(9): mov $0x0,0x24(%rsp)
43d9(9): mov $0x0,0x2c(%rsp)
43e2(8): mov $0x0,0x34(%rsp)
43ea(5): call 0xfffffa46(%rip)
43ef(5): mov 0x38(%rsp),%rcx
43f4(9): xor $0x28,%rcx
43fd(2): jnz 0xc(%rip)
43ff(4): add $0x48,%rsp
4403(1): ret near (%rsp)
4404(5): call 0xffffd2fc(%rip)
4409(5): call 0xffffd3d7(%rip)

"quotearg_n_style_mem" :
4410(4): sub $0x48,%rsp
4414(3): mov %rdx,%rax
4417(3): mov %rcx,%rdx
441a(9): mov $0x28,%rcx
4423(5): mov %rcx,0x38(%rsp)
4428(2): xor %ecx,%ecx
442a(3): cmp $0xa,%esi
442d(2): jz 0x63(%rip)
442f(3): mov %esi,(%rsp)
4432(3): mov %rsp,%rcx
4435(3): mov %rax,%rsi
4438(9): mov $0x0,0x4(%rsp)
4441(9): mov $0x0,0xc(%rsp)
444a(9): mov $0x0,0x14(%rsp)
4453(9): mov $0x0,0x1c(%rsp)
445c(9): mov $0x0,0x24(%rsp)
4465(9): mov $0x0,0x2c(%rsp)
446e(8): mov $0x0,0x34(%rsp)
4476(5): call 0xfffff9ba(%rip)
447b(5): mov 0x38(%rsp),%rdx
4480(9): xor $0x28,%rdx
4489(2): jnz 0xc(%rip)
448b(4): add $0x48,%rsp
448f(1): ret near (%rsp)
4490(5): call 0xffffd270(%rip)
4495(5): call 0xffffd34b(%rip)

"quotearg_style" :
44a0(3): mov %rsi,%rdx
44a3(2): mov %edi,%esi
44a5(2): xor %edi,%edi
44a7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
44b0(3): mov %rdx,%rcx
44b3(3): mov %rsi,%rdx
44b6(2): mov %edi,%esi
44b8(2): xor %edi,%edi
44ba(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
44c0(4): sub $0x48,%rsp
44c4(2): mov %edx,%ecx
44c6(9): mov $0x28,%rax
44cf(5): mov %rax,0x38(%rsp)
44d4(2): xor %eax,%eax
44d6(7): mov 0x204d53(%rip),%rax
44dd(3): mov %rsp,%r8
44e0(3): and $0x1f,%ecx
44e3(8): movdqa 0x204d15(%rip),%xmm0
44eb(5): mov %rax,0x30(%rsp)
44f0(2): mov %edx,%eax
44f2(4): movaps %xmm0,(%rsp)
44f6(3): shr $0x5,%al
44f9(3): movzx %al,%eax
44fc(5): lea 0x8(%r8,%rax,4),%r9
4501(8): movdqa 0x204d07(%rip),%xmm0
4509(5): movaps %xmm0,0x10(%rsp)
450e(8): movdqa 0x204d0a(%rip),%xmm0
4516(5): movaps %xmm0,0x20(%rsp)
451b(3): mov (%r9),%edx
451e(2): mov %edx,%eax
4520(2): shr %cl,%eax
4522(2): not %eax
4524(3): and $0x1,%eax
4527(2): shl/sal %cl,%eax
4529(3): mov %r8,%rcx
452c(2): xor %edx,%eax
452e(3): mov %rsi,%rdx
4531(3): mov %rdi,%rsi
4534(3): mov %eax,(%r9)
4537(2): xor %edi,%edi
4539(5): call 0xfffff8f7(%rip)
453e(5): mov 0x38(%rsp),%rsi
4543(9): xor $0x28,%rsi
454c(2): jnz 0x7(%rip)
454e(4): add $0x48,%rsp
4552(1): ret near (%rsp)
4553(5): call 0xffffd28d(%rip)

"quotearg_char" :
4560(4): movsx %sil,%edx
4564(7): mov $0xffffffff,%rsi
456b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4570(5): mov $0x3a,%edx
4575(7): mov $0xffffffff,%rsi
457c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4590(5): mov $0x3a,%edx
4595(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
45a0(4): sub $0x48,%rsp
45a4(3): mov %rdx,%rax
45a7(9): mov $0x28,%rdx
45b0(5): mov %rdx,0x38(%rsp)
45b5(2): xor %edx,%edx
45b7(3): cmp $0xa,%esi
45ba(2): jz 0x6a(%rip)
45bc(3): mov %esi,(%rsp)
45bf(3): mov %rsp,%rcx
45c2(7): mov $0xffffffff,%rdx
45c9(3): mov %rax,%rsi
45cc(9): mov $0x0,0x4(%rsp)
45d5(9): mov $0x4000000,0xc(%rsp)
45de(9): mov $0x0,0x14(%rsp)
45e7(9): mov $0x0,0x1c(%rsp)
45f0(9): mov $0x0,0x24(%rsp)
45f9(9): mov $0x0,0x2c(%rsp)
4602(8): mov $0x0,0x34(%rsp)
460a(5): call 0xfffff826(%rip)
460f(5): mov 0x38(%rsp),%rcx
4614(9): xor $0x28,%rcx
461d(2): jnz 0xc(%rip)
461f(4): add $0x48,%rsp
4623(1): ret near (%rsp)
4624(5): call 0xffffd0dc(%rip)
4629(5): call 0xffffd1b7(%rip)

"quotearg_n_custom_mem" :
4630(4): sub $0x48,%rsp
4634(3): mov %rcx,%r9
4637(7): mov 0x204bf2(%rip),%rcx
463e(8): movdqa 0x204bba(%rip),%xmm0
4646(9): mov $0x28,%rax
464f(5): mov %rax,0x38(%rsp)
4654(2): xor %eax,%eax
4656(4): movaps %xmm0,(%rsp)
465a(3): test %rsi,%rsi
465d(5): mov %rcx,0x30(%rsp)
4662(7): mov $0xa,(%rsp)
4669(8): movdqa 0x204b9f(%rip),%xmm0
4671(5): movaps %xmm0,0x10(%rsp)
4676(8): movdqa 0x204ba2(%rip),%xmm0
467e(5): movaps %xmm0,0x20(%rsp)
4683(2): jz 0x34(%rip)
4685(3): test %rdx,%rdx
4688(2): jz 0x2f(%rip)
468a(5): mov %rsi,0x28(%rsp)
468f(5): mov %rdx,0x30(%rsp)
4694(3): mov %rsp,%rcx
4697(3): mov %r8,%rdx
469a(3): mov %r9,%rsi
469d(5): call 0xfffff793(%rip)
46a2(5): mov 0x38(%rsp),%rdi
46a7(9): xor $0x28,%rdi
46b0(2): jnz 0xc(%rip)
46b2(4): add $0x48,%rsp
46b6(1): ret near (%rsp)
46b7(5): call 0xffffd049(%rip)
46bc(5): call 0xffffd124(%rip)

"quotearg_n_custom" :
46d0(7): mov $0xffffffff,%r8
46d7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
46e0(3): mov %rdx,%rcx
46e3(7): mov $0xffffffff,%r8
46ea(3): mov %rsi,%rdx
46ed(3): mov %rdi,%rsi
46f0(2): xor %edi,%edi
46f2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4700(3): mov %rcx,%r8
4703(3): mov %rdx,%rcx
4706(3): mov %rsi,%rdx
4709(3): mov %rdi,%rsi
470c(2): xor %edi,%edi
470e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4720(7): lea 0x2048f9(%rip),%rcx
4727(5): jmp 0xfffff709(%rip)

"quote_mem" :
4730(7): lea 0x2048e9(%rip),%rcx
4737(3): mov %rsi,%rdx
473a(3): mov %rdi,%rsi
473d(2): xor %edi,%edi
473f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4750(7): lea 0x2048c9(%rip),%rcx
4757(7): mov $0xffffffff,%rdx
475e(5): jmp 0xfffff6d2(%rip)

"quote" :
4770(7): lea 0x2048a9(%rip),%rcx
4777(3): mov %rdi,%rsi
477a(7): mov $0xffffffff,%rdx
4781(2): xor %edi,%edi
4783(5): jmp 0xfffff6ad(%rip)

"parse_with_separator" :
4790(2): push %r15
4792(2): push %r14
4794(3): mov %rsi,%r10
4797(2): push %r13
4799(2): push %r12
479b(3): mov %rcx,%r12
479e(1): push %rbp
479f(1): push %rbx
47a0(3): mov %r8,%r13
47a3(3): mov %r9,%r14
47a6(6): mov $0xffffffff,%r15d
47ac(4): sub $0x58,%rsp
47b0(2): mov (%rdx),%eax
47b2(9): mov $0x28,%rcx
47bb(5): mov %rcx,0x48(%rsp)
47c0(2): xor %ecx,%ecx
47c2(3): test %r12,%r12
47c5(5): mov %rdx,0x10(%rsp)
47ca(4): mov %eax,0x18(%rsp)
47ce(2): jz 0x6(%rip)
47d0(4): mov (%r12),%r15d
47d4(3): test %r13,%r13
47d7(2): jz 0xa(%rip)
47d9(8): mov $0x0,0x0(%r13)
47e1(3): test %r14,%r14
47e4(2): jz 0x9(%rip)
47e6(7): mov $0x0,(%r14)
47ed(3): test %r10,%r10
47f0(6): jz 0x198(%rip)
47f6(3): mov %r10,%rbx
47f9(3): sub %rdi,%rbx
47fc(6): jnz 0xd4(%rip)
4802(5): cmp $0x0,0x1(%r10)
4807(6): jz 0x211(%rip)
480d(4): add $0x1,%r10
4811(8): mov $0x0,(%rsp)
4819(5): setnz 0x1e(%rsp)
481e(5): mov %r10,0x8(%rsp)
4823(2): xor %ebp,%ebp
4825(2): xor %ebx,%ebx
4827(5): cmp $0x0,0x1e(%rsp)
482c(6): jz 0x2f4(%rip)
4832(5): mov 0x8(%rsp),%rax
4837(3): cmp $0x2b,(%rax)
483a(6): jz 0x176(%rip)
4840(5): mov 0x8(%rsp),%rdi
4845(5): call 0xffffd0ab(%rip)
484a(3): test %rax,%rax
484d(6): jz 0x163(%rip)
4853(4): mov 0x10(%rax),%r15d
4857(5): call 0xffffce79(%rip)
485c(5): mov 0x8(%rsp),%rdi
4861(5): call 0xc1f(%rip)
4866(3): mov %rax,%rbx
4869(3): mov %rbp,%r10
486c(5): mov 0x10(%rsp),%rax
4871(4): mov 0x18(%rsp),%esi
4875(3): test %r12,%r12
4878(2): mov %esi,(%rax)
487a(2): jz 0x6(%rip)
487c(4): mov %r15d,(%r12)
4880(3): test %r13,%r13
4883(2): jz 0x9(%rip)
4885(4): mov %r10,0x0(%r13)
4889(3): xor %r10d,%r10d
488c(3): test %r14,%r14
488f(2): jz 0x7(%rip)
4891(3): mov %rbx,(%r14)
4894(2): xor %ebx,%ebx
4896(3): mov %r10,%rdi
4899(5): call 0xffffce57(%rip)
489e(3): mov %rbx,%rdi
48a1(5): call 0xffffce4f(%rip)
48a6(2): xor %eax,%eax
48a8(5): mov 0x48(%rsp),%rdx
48ad(9): xor $0x28,%rdx
48b6(6): jnz 0x28f(%rip)
48bc(4): add $0x58,%rsp
48c0(1): pop %rbx
48c1(1): pop %rbp
48c2(2): pop %r12
48c4(2): pop %r13
48c6(2): pop %r14
48c8(2): pop %r15
48ca(1): ret near (%rsp)
48cb(5): nop 0x0(%rax,%rax,1)
48d0(4): lea 0x1(%rbx),%rsi
48d4(4): mov %r10,(%rsp)
48d8(5): call 0xb78(%rip)
48dd(4): mov (%rsp),%r10
48e1(4): mov $0x0,0x0(%rax,%rbx,1)
48e5(3): mov %rax,%rbp
48e8(5): cmp $0x0,0x1(%r10)
48ed(6): jnz 0x153(%rip)
48f3(3): test %rbp,%rbp
48f6(6): jz 0x122(%rip)
48fc(5): mov $0x0,0x1e(%rsp)
4901(5): mov $0x1,%eax
4906(9): mov $0x0,0x8(%rsp)
490f(3): test %r10,%r10
4912(4): setnz %r9b
4916(3): and %eax,%r9d
4919(4): cmp $0x2b,0x0(%rbp)
491d(2): jz 0x43(%rip)
491f(3): mov %rbp,%rdi
4922(4): mov %r9b,(%rsp)
4926(5): call 0xffffcfaa(%rip)
492b(3): test %rax,%rax
492e(5): movzx (%rsp),%r9d
4933(2): jz 0x2d(%rip)
4935(3): mov 0x10(%rax),%ecx
4938(2): xor %ebx,%ebx
493a(3): test %r9b,%r9b
493d(8): mov $0x0,(%rsp)
4945(4): mov %ecx,0x18(%rsp)
4949(6): jnz 0x11f(%rip)
494f(5): call 0xffffd001(%rip)
4954(5): jmp 0xfffffed3(%rip)
4959(7): nop 0x0(%rax)
4960(3): test %r9b,%r9b
4963(6): jz 0x13d(%rip)
4969(7): lea 0x20a5(%rip),%rax
4970(5): mov $0x0,0x1e(%rsp)
4975(2): xor %ebx,%ebx
4977(4): mov %rax,(%rsp)
497b(5): call 0xffffcfd5(%rip)
4980(5): jmp 0xfffffea7(%rip)
4985(3): nop (%rax)
4988(2): xor %ebx,%ebx
498a(3): cmp $0x0,(%rdi)
498d(6): jz 0xfffffedf(%rip)
4993(4): mov %r10,(%rsp)
4997(5): call 0xae9(%rip)
499c(4): mov (%rsp),%r10
49a0(3): mov %rax,%rbp
49a3(5): jmp 0xffffff50(%rip)
49a8(8): nop 0x0(%rax,%rax,1)
49b0(5): mov 0x8(%rsp),%rdi
49b5(5): lea 0x28(%rsp),%rcx
49ba(7): lea 0x20c8(%rip),%r8
49c1(2): xor %esi,%esi
49c3(5): mov $0xa,%edx
49c8(5): call 0xb48(%rip)
49cd(2): test %eax,%eax
49cf(2): jz 0x59(%rip)
49d1(5): call 0xffffccff(%rip)
49d6(5): mov 0x8(%rsp),%rdi
49db(5): call 0xaa5(%rip)
49e0(3): mov %rax,%rbx
49e3(7): lea 0x2038(%rip),%rax
49ea(4): mov %rax,(%rsp)
49ee(3): mov %rbp,%rdi
49f1(5): call 0xffffccff(%rip)
49f6(3): mov %rbx,%rdi
49f9(5): call 0xffffccf7(%rip)
49fe(4): mov (%rsp),%rsi
4a02(5): mov $0x5,%edx
4a07(2): xor %edi,%edi
4a09(5): call 0xffffcd97(%rip)
4a0e(5): jmp 0xfffffe9a(%rip)
4a13(5): nop 0x0(%rax,%rax,1)
4a18(3): xor %r10d,%r10d
4a1b(2): xor %ebx,%ebx
4a1d(5): jmp 0xfffffe4f(%rip)
4a22(6): nop 0x0(%rax,%rax,1)
4a28(5): mov 0x28(%rsp),%rax
4a2d(5): mov $0xfffffffe,%edx
4a32(3): cmp %rdx,%rax
4a35(3): mov %eax,%r15d
4a38(6): jbe 0xfffffe1f(%rip)
4a3e(2): jmp 0xffffff93(%rip)
4a40(3): mov %r10,%rax
4a43(4): add $0x1,%rax
4a47(5): setnz 0x1e(%rsp)
4a4c(3): test %rbp,%rbp
4a4f(5): mov %rax,0x8(%rsp)
4a54(6): jz 0xf6(%rip)
4a5a(3): test %rax,%rax
4a5d(3): setz %al
4a60(5): jmp 0xfffffeaf(%rip)
4a65(3): nop (%rax)
4a68(4): mov 0x14(%rax),%r15d
4a6c(3): mov %r15d,%edi
4a6f(5): call 0xffffcdb1(%rip)
4a74(3): test %rax,%rax
4a77(6): jz 0xb9(%rip)
4a7d(3): mov (%rax),%rdi
4a80(5): call 0xa00(%rip)
4a85(3): mov %rax,%rbx
4a88(5): call 0xffffcc48(%rip)
4a8d(8): mov $0x0,(%rsp)
4a95(5): jmp 0xfffffeba(%rip)
4a9a(6): nop 0x0(%rax,%rax,1)
4aa0(5): lea 0x28(%rsp),%rcx
4aa5(7): lea 0x1fdd(%rip),%r8
4aac(2): xor %esi,%esi
4aae(5): mov $0xa,%edx
4ab3(3): mov %rbp,%rdi
4ab6(5): mov %r9b,0x1f(%rsp)
4abb(5): call 0xa55(%rip)
4ac0(7): lea 0x1f41(%rip),%rsi
4ac7(2): test %eax,%eax
4ac9(6): movzx 0x1f(%rsp),%r9d
4acf(4): mov %rsi,(%rsp)
4ad3(2): jnz 0x33(%rip)
4ad5(5): mov 0x28(%rsp),%rax
4ada(5): movzx 0x1e(%rsp),%ecx
4adf(5): mov $0xfffffffe,%edx
4ae4(3): cmp %rdx,%rax
4ae7(4): cmovnbe %r9d,%ecx
4aeb(3): mov %ecx,%r9d
4aee(4): mov 0x18(%rsp),%ecx
4af2(3): cmovbe %eax,%ecx
4af5(5): mov $0x0,%eax
4afa(4): cmovnbe %rsi,%rax
4afe(4): mov %ecx,0x18(%rsp)
4b02(4): mov %rax,(%rsp)
4b06(5): mov %r9b,0x1e(%rsp)
4b0b(2): xor %ebx,%ebx
4b0d(5): call 0xffffce43(%rip)
4b12(5): jmp 0xfffffd15(%rip)
4b17(9): nop 0x0(%rax,%rax,1)
4b20(5): cmp $0x0,(%rsp)
4b25(6): jnz 0xfffffec9(%rip)
4b2b(5): jmp 0xfffffd3e(%rip)
4b30(5): lea 0x30(%rsp),%rsi
4b35(3): mov %r15d,%edi
4b38(5): call 0xf68(%rip)
4b3d(3): mov %rax,%rdi
4b40(5): jmp 0xffffff40(%rip)
4b45(5): call 0xffffcc9b(%rip)
4b4a(2): xor %ebx,%ebx
4b4c(8): mov $0x0,(%rsp)
4b54(5): jmp 0xfffffcd3(%rip)

"parse_user_spec" :
4b60(3): test %rdx,%rdx
4b63(6): jz 0xad(%rip)
4b69(2): push %r15
4b6b(2): push %r14
4b6d(3): mov %rsi,%r14
4b70(2): push %r13
4b72(2): push %r12
4b74(3): mov %r8,%r13
4b77(1): push %rbp
4b78(1): push %rbx
4b79(3): mov %rcx,%r12
4b7c(3): mov %rdx,%rbp
4b7f(3): mov %rdi,%rbx
4b82(5): mov $0x3a,%esi
4b87(4): sub $0x18,%rsp
4b8b(5): call 0xffffcc85(%rip)
4b90(3): mov %r13,%r9
4b93(3): mov %rax,%r15
4b96(3): mov %r12,%r8
4b99(3): mov %rbp,%rcx
4b9c(3): mov %r14,%rdx
4b9f(3): mov %rax,%rsi
4ba2(3): mov %rbx,%rdi
4ba5(5): call 0xfffffbeb(%rip)
4baa(3): test %r15,%r15
4bad(3): mov %rax,%r10
4bb0(2): jnz 0x44(%rip)
4bb2(3): test %rax,%rax
4bb5(5): mov %rax,0x8(%rsp)
4bba(2): jz 0x6e(%rip)
4bbc(5): mov $0x2e,%esi
4bc1(3): mov %rbx,%rdi
4bc4(5): call 0xffffcc4c(%rip)
4bc9(3): test %rax,%rax
4bcc(5): mov 0x8(%rsp),%r10
4bd1(2): jz 0x23(%rip)
4bd3(3): mov %r13,%r9
4bd6(3): mov %r12,%r8
4bd9(3): mov %rbp,%rcx
4bdc(3): mov %r14,%rdx
4bdf(3): mov %rax,%rsi
4be2(3): mov %rbx,%rdi
4be5(5): call 0xfffffbab(%rip)
4bea(3): test %rax,%rax
4bed(5): mov 0x8(%rsp),%r10
4bf2(2): jz 0x36(%rip)
4bf4(4): add $0x18,%rsp
4bf8(3): mov %r10,%rax
4bfb(1): pop %rbx
4bfc(1): pop %rbp
4bfd(2): pop %r12
4bff(2): pop %r13
4c01(2): pop %r14
4c03(2): pop %r15
4c05(1): ret near (%rsp)
4c06(a): nop 0x0(%rax,%rax,1)
4c10(3): mov %r8,%r9
4c13(3): mov %rsi,%rdx
4c16(3): mov %rcx,%r8
4c19(2): xor %esi,%esi
4c1b(2): xor %ecx,%ecx
4c1d(5): jmp 0xfffffb73(%rip)
4c22(6): nop 0x0(%rax,%rax,1)
4c28(3): xor %r10d,%r10d
4c2b(2): jmp 0xffffffc9(%rip)

"version_etc_arn" :
4c30(2): push %r15
4c32(2): push %r14
4c34(2): push %r13
4c36(2): push %r12
4c38(3): mov %r9,%r12
4c3b(1): push %rbp
4c3c(1): push %rbx
4c3d(3): mov %rdi,%rbp
4c40(3): mov %r8,%rbx
4c43(4): sub $0x28,%rsp
4c47(3): test %rsi,%rsi
4c4a(6): jz 0x11e(%rip)
4c50(3): mov %rdx,%r8
4c53(7): lea 0x1dd6(%rip),%rdx
4c5a(3): mov %rcx,%r9
4c5d(2): xor %eax,%eax
4c5f(3): mov %rsi,%rcx
4c62(5): mov $0x1,%esi
4c67(5): call 0xffffcdd9(%rip)
4c6c(7): lea 0x1dd0(%rip),%rsi
4c73(2): xor %edi,%edi
4c75(5): mov $0x5,%edx
4c7a(5): call 0xffffcb26(%rip)
4c7f(7): lea 0x20da(%rip),%rdx
4c86(3): mov %rax,%rcx
4c89(6): mov $0x7e3,%r8d
4c8f(5): mov $0x1,%esi
4c94(3): mov %rbp,%rdi
4c97(2): xor %eax,%eax
4c99(5): call 0xffffcda7(%rip)
4c9e(7): lea 0x1e2b(%rip),%rsi
4ca5(2): xor %edi,%edi
4ca7(5): mov $0x5,%edx
4cac(5): call 0xffffcaf4(%rip)
4cb1(3): mov %rbp,%rsi
4cb4(3): mov %rax,%rdi
4cb7(5): call 0xffffcbe9(%rip)
4cbc(4): cmp $0x9,%r12
4cc0(6): jnbe 0x340(%rip)
4cc6(7): lea 0x205f(%rip),%rdx
4ccd(4): movsxd 0x0(%rdx,%r12,4),%rax
4cd1(3): add %rdx,%rax
4cd4(2): jmp %rax
4cd6(a): nop 0x0(%rax,%rax,1)
4ce0(4): mov 0x38(%rbx),%r9
4ce4(4): mov 0x10(%rbx),%rax
4ce8(7): lea 0x1f51(%rip),%rsi
4cef(4): mov 0x8(%rbx),%r8
4cf3(5): mov $0x5,%edx
4cf8(2): xor %edi,%edi
4cfa(4): mov 0x30(%rbx),%r13
4cfe(4): mov 0x28(%rbx),%r12
4d02(5): mov %r9,0x10(%rsp)
4d07(4): mov 0x20(%rbx),%r15
4d0b(4): mov 0x18(%rbx),%r14
4d0f(4): mov %rax,(%rsp)
4d13(5): mov %r8,0x8(%rsp)
4d18(3): mov (%rbx),%rbx
4d1b(5): call 0xffffca85(%rip)
4d20(4): sub $0x8,%rsp
4d24(5): mov 0x18(%rsp),%r9
4d29(3): mov %rax,%rdx
4d2c(3): mov %rbx,%rcx
4d2f(5): mov $0x1,%esi
4d34(3): mov %rbp,%rdi
4d37(2): xor %eax,%eax
4d39(2): push %r9
4d3b(2): push %r13
4d3d(2): push %r12
4d3f(2): push %r15
4d41(2): push %r14
4d43(5): mov 0x30(%rsp),%r9
4d48(5): mov 0x38(%rsp),%r8
4d4d(5): call 0xffffccf3(%rip)
4d52(4): add $0x30,%rsp
4d56(4): add $0x28,%rsp
4d5a(1): pop %rbx
4d5b(1): pop %rbp
4d5c(2): pop %r12
4d5e(2): pop %r13
4d60(2): pop %r14
4d62(2): pop %r15
4d64(1): ret near (%rsp)
4d65(3): nop (%rax)
4d68(3): mov %rcx,%r8
4d6b(3): mov %rdx,%rcx
4d6e(7): lea 0x1cc7(%rip),%rdx
4d75(5): mov $0x1,%esi
4d7a(2): xor %eax,%eax
4d7c(5): call 0xffffccc4(%rip)
4d81(5): jmp 0xfffffeeb(%rip)
4d86(a): nop 0x0(%rax,%rax,1)
4d90(4): mov 0x40(%rbx),%r10
4d94(4): mov 0x38(%rbx),%r9
4d98(7): lea 0x1ed1(%rip),%rsi
4d9f(4): mov 0x10(%rbx),%rax
4da3(4): mov 0x8(%rbx),%r8
4da7(5): mov $0x5,%edx
4dac(4): mov 0x30(%rbx),%r13
4db0(4): mov 0x28(%rbx),%r12
4db4(4): mov 0x20(%rbx),%r15
4db8(4): mov 0x18(%rbx),%r14
4dbc(3): mov (%rbx),%rbx
4dbf(5): mov %r10,0x18(%rsp)
4dc4(5): mov %r9,0x10(%rsp)
4dc9(4): mov %rax,(%rsp)
4dcd(5): mov %r8,0x8(%rsp)
4dd2(2): xor %edi,%edi
4dd4(5): call 0xffffc9cc(%rip)
4dd9(5): mov 0x18(%rsp),%r10
4dde(2): push %r10
4de0(5): jmp 0xffffff44(%rip)
4de5(3): nop (%rax)
4de8(3): mov (%rbx),%rbx
4deb(7): lea 0x1c55(%rip),%rsi
4df2(5): mov $0x5,%edx
4df7(2): xor %edi,%edi
4df9(5): call 0xffffc9a7(%rip)
4dfe(4): add $0x28,%rsp
4e02(3): mov %rbx,%rcx
4e05(3): mov %rbp,%rdi
4e08(1): pop %rbx
4e09(1): pop %rbp
4e0a(2): pop %r12
4e0c(2): pop %r13
4e0e(2): pop %r14
4e10(2): pop %r15
4e12(3): mov %rax,%rdx
4e15(5): mov $0x1,%esi
4e1a(2): xor %eax,%eax
4e1c(5): jmp 0xffffcc24(%rip)
4e21(7): nop 0x0(%rax)
4e28(4): mov 0x8(%rbx),%r12
4e2c(7): lea 0x1c24(%rip),%rsi
4e33(3): mov (%rbx),%rbx
4e36(5): mov $0x5,%edx
4e3b(2): xor %edi,%edi
4e3d(5): call 0xffffc963(%rip)
4e42(4): add $0x28,%rsp
4e46(3): mov %r12,%r8
4e49(3): mov %rbx,%rcx
4e4c(3): mov %rbp,%rdi
4e4f(3): mov %rax,%rdx
4e52(5): mov $0x1,%esi
4e57(1): pop %rbx
4e58(1): pop %rbp
4e59(2): pop %r12
4e5b(2): pop %r13
4e5d(2): pop %r14
4e5f(2): pop %r15
4e61(2): xor %eax,%eax
4e63(5): jmp 0xffffcbdd(%rip)
4e68(8): nop 0x0(%rax,%rax,1)
4e70(4): mov 0x10(%rbx),%r13
4e74(4): mov 0x8(%rbx),%r12
4e78(7): lea 0x1bef(%rip),%rsi
4e7f(3): mov (%rbx),%rbx
4e82(5): mov $0x5,%edx
4e87(2): xor %edi,%edi
4e89(5): call 0xffffc917(%rip)
4e8e(4): add $0x28,%rsp
4e92(3): mov %r13,%r9
4e95(3): mov %r12,%r8
4e98(3): mov %rbx,%rcx
4e9b(3): mov %rbp,%rdi
4e9e(3): mov %rax,%rdx
4ea1(1): pop %rbx
4ea2(1): pop %rbp
4ea3(2): pop %r12
4ea5(2): pop %r13
4ea7(2): pop %r14
4ea9(2): pop %r15
4eab(5): mov $0x1,%esi
4eb0(2): xor %eax,%eax
4eb2(5): jmp 0xffffcb8e(%rip)
4eb7(9): nop 0x0(%rax,%rax,1)
4ec0(7): lea 0x1cd9(%rip),%rsi
4ec7(5): mov $0x5,%edx
4ecc(2): xor %edi,%edi
4ece(4): mov 0x18(%rbx),%r14
4ed2(4): mov 0x10(%rbx),%r13
4ed6(4): mov 0x8(%rbx),%r12
4eda(3): mov (%rbx),%rbx
4edd(5): call 0xffffc8c3(%rip)
4ee2(4): sub $0x8,%rsp
4ee6(2): push %r14
4ee8(3): mov %rax,%rdx
4eeb(3): mov %r13,%r9
4eee(3): mov %r12,%r8
4ef1(3): mov %rbx,%rcx
4ef4(3): mov %rbp,%rdi
4ef7(5): mov $0x1,%esi
4efc(2): xor %eax,%eax
4efe(5): call 0xffffcb42(%rip)
4f03(1): pop %rax
4f04(1): pop %rdx
4f05(4): add $0x28,%rsp
4f09(1): pop %rbx
4f0a(1): pop %rbp
4f0b(2): pop %r12
4f0d(2): pop %r13
4f0f(2): pop %r14
4f11(2): pop %r15
4f13(1): ret near (%rsp)
4f14(4): nop 0x0(%rax)
4f18(4): mov 0x20(%rbx),%r15
4f1c(7): lea 0x1c9d(%rip),%rsi
4f23(5): mov $0x5,%edx
4f28(2): xor %edi,%edi
4f2a(4): mov 0x18(%rbx),%r14
4f2e(4): mov 0x10(%rbx),%r13
4f32(4): mov 0x8(%rbx),%r12
4f36(3): mov (%rbx),%rbx
4f39(5): call 0xffffc867(%rip)
4f3e(2): push %r15
4f40(2): jmp 0xffffffa6(%rip)
4f42(6): nop 0x0(%rax,%rax,1)
4f48(4): mov 0x8(%rbx),%r8
4f4c(4): mov 0x28(%rbx),%r12
4f50(7): lea 0x1c91(%rip),%rsi
4f57(4): mov 0x20(%rbx),%r15
4f5b(4): mov 0x18(%rbx),%r14
4f5f(5): mov $0x5,%edx
4f64(4): mov 0x10(%rbx),%r13
4f68(2): xor %edi,%edi
4f6a(3): mov (%rbx),%rbx
4f6d(4): mov %r8,(%rsp)
4f71(5): call 0xffffc82f(%rip)
4f76(4): sub $0x8,%rsp
4f7a(3): mov %r13,%r9
4f7d(2): push %r12
4f7f(2): push %r15
4f81(2): push %r14
4f83(5): mov 0x20(%rsp),%r8
4f88(3): mov %rbx,%rcx
4f8b(3): mov %rax,%rdx
4f8e(3): mov %rbp,%rdi
4f91(5): mov $0x1,%esi
4f96(2): xor %eax,%eax
4f98(5): call 0xffffcaa8(%rip)
4f9d(4): add $0x20,%rsp
4fa1(4): add $0x28,%rsp
4fa5(1): pop %rbx
4fa6(1): pop %rbp
4fa7(2): pop %r12
4fa9(2): pop %r13
4fab(2): pop %r14
4fad(2): pop %r15
4faf(1): ret near (%rsp)
4fb0(4): mov 0x10(%rbx),%r9
4fb4(4): mov 0x30(%rbx),%r13
4fb8(7): lea 0x1c51(%rip),%rsi
4fbf(4): mov 0x28(%rbx),%r12
4fc3(4): mov 0x20(%rbx),%r15
4fc7(5): mov $0x5,%edx
4fcc(4): mov 0x18(%rbx),%r14
4fd0(4): mov 0x8(%rbx),%r8
4fd4(2): xor %edi,%edi
4fd6(5): mov %r9,0x8(%rsp)
4fdb(3): mov (%rbx),%rbx
4fde(4): mov %r8,(%rsp)
4fe2(5): call 0xffffc7be(%rip)
4fe7(2): push %r13
4fe9(2): push %r12
4feb(2): push %r15
4fed(2): push %r14
4fef(5): mov 0x28(%rsp),%r9
4ff4(2): jmp 0xffffff8f(%rip)
4ff6(a): nop 0x0(%rax,%rax,1)
5000(4): mov 0x40(%rbx),%r10
5004(4): mov 0x38(%rbx),%r9
5008(5): mov $0x5,%edx
500d(4): mov 0x10(%rbx),%rax
5011(4): mov 0x8(%rbx),%r8
5015(7): lea 0x1c8c(%rip),%rsi
501c(4): mov 0x30(%rbx),%r13
5020(4): mov 0x28(%rbx),%r12
5024(4): mov 0x20(%rbx),%r15
5028(4): mov 0x18(%rbx),%r14
502c(5): mov %r10,0x18(%rsp)
5031(5): mov %r9,0x10(%rsp)
5036(4): mov %rax,(%rsp)
503a(5): mov %r8,0x8(%rsp)
503f(3): mov (%rbx),%rbx
5042(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5050(3): xor %r9d,%r9d
5053(4): cmp $0x0,(%r8)
5057(2): jz 0x14(%rip)
5059(7): nop 0x0(%rax)
5060(4): add $0x1,%r9
5064(5): cmp $0x0,0x0(%r8,%r9,8)
5069(2): jnz 0xfffffff7(%rip)
506b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5070(4): sub $0x68,%rsp
5074(3): mov %r8,%r10
5077(3): xor %r9d,%r9d
507a(9): mov $0x28,%rax
5083(5): mov %rax,0x58(%rsp)
5088(2): xor %eax,%eax
508a(3): mov %rsp,%r8
508d(3): nop (%rax)
5090(3): mov (%r10),%eax
5093(3): cmp $0x2f,%eax
5096(2): jnbe 0x44(%rip)
5098(3): mov %eax,%r11d
509b(4): add 0x10(%r10),%r11
509f(3): add $0x8,%eax
50a2(3): mov %eax,(%r10)
50a5(3): mov (%r11),%rax
50a8(3): test %rax,%rax
50ab(4): mov %rax,0x0(%r8,%r9,8)
50af(2): jz 0xc(%rip)
50b1(4): add $0x1,%r9
50b5(4): cmp $0xa,%r9
50b9(2): jnz 0xffffffd7(%rip)
50bb(5): call 0xfffffb75(%rip)
50c0(5): mov 0x58(%rsp),%rax
50c5(9): xor $0x28,%rax
50ce(2): jnz 0x7(%rip)
50d0(4): add $0x68,%rsp
50d4(1): ret near (%rsp)
50d5(5): call 0xffffc70b(%rip)
50da(4): mov 0x8(%r10),%r11
50de(4): lea 0x8(%r11),%rax
50e2(4): mov %rax,0x8(%r10)
50e6(2): jmp 0xffffffbf(%rip)

"version_etc" :
50f0(1): push %rbp
50f1(1): push %rbx
50f2(6): mov $0x20,%r10d
50f8(3): xor %r11d,%r11d
50fb(7): sub $0xb8,%rsp
5102(9): mov $0x28,%rax
510b(5): mov %rax,0x78(%rsp)
5110(2): xor %eax,%eax
5112(8): lea 0xd0(%rsp),%rax
511a(8): mov %r8,0xa0(%rsp)
5122(8): lea 0xd0(%rsp),%rbx
512a(5): lea 0x20(%rsp),%r8
512f(8): mov %r9,0xa8(%rsp)
5137(8): mov $0x20,0x8(%rsp)
513f(5): mov %rax,0x10(%rsp)
5144(8): lea 0x80(%rsp),%rax
514c(3): xor %r9d,%r9d
514f(5): mov %rax,0x18(%rsp)
5154(3): mov %rax,%rbp
5157(9): nop 0x0(%rax,%rax,1)
5160(4): cmp $0x2f,%r10d
5164(2): jnbe 0x58(%rip)
5166(3): mov %r10d,%eax
5169(6): mov $0x1,%r11d
516f(4): add $0x8,%r10d
5173(3): add %rbp,%rax
5176(3): mov (%rax),%rax
5179(3): test %rax,%rax
517c(4): mov %rax,0x0(%r8,%r9,8)
5180(2): jz 0xc(%rip)
5182(4): add $0x1,%r9
5186(4): cmp $0xa,%r9
518a(2): jnz 0xffffffd6(%rip)
518c(3): test %r11b,%r11b
518f(2): jnz 0x26(%rip)
5191(5): call 0xfffffa9f(%rip)
5196(5): mov 0x78(%rsp),%rax
519b(9): xor $0x28,%rax
51a4(2): jnz 0xc(%rip)
51a6(7): add $0xb8,%rsp
51ad(1): pop %rbx
51ae(1): pop %rbp
51af(1): ret near (%rsp)
51b0(5): call 0xffffc630(%rip)
51b5(5): mov %r10d,0x8(%rsp)
51ba(2): jmp 0xffffffd7(%rip)
51bc(3): mov %rbx,%rax
51bf(4): add $0x8,%rbx
51c3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
51d0(1): push %rbx
51d1(7): lea 0x18b2(%rip),%rsi
51d8(5): mov $0x5,%edx
51dd(2): xor %edi,%edi
51df(5): call 0xffffc5c1(%rip)
51e4(7): lea 0x18b4(%rip),%rdx
51eb(3): mov %rax,%rsi
51ee(5): mov $0x1,%edi
51f3(2): xor %eax,%eax
51f5(5): call 0xffffc79b(%rip)
51fa(7): lea 0x18b4(%rip),%rsi
5201(5): mov $0x5,%edx
5206(2): xor %edi,%edi
5208(5): call 0xffffc598(%rip)
520d(7): lea 0x111c(%rip),%rcx
5214(7): lea 0xe0f(%rip),%rdx
521b(3): mov %rax,%rsi
521e(5): mov $0x1,%edi
5223(2): xor %eax,%eax
5225(5): call 0xffffc76b(%rip)
522a(7): mov 0x203e57(%rip),%rbx
5231(7): lea 0x1ab0(%rip),%rsi
5238(2): xor %edi,%edi
523a(5): mov $0x5,%edx
523f(5): call 0xffffc561(%rip)
5244(3): mov %rbx,%rsi
5247(3): mov %rax,%rdi
524a(1): pop %rbx
524b(5): jmp 0xffffc655(%rip)

"xmalloc" :
5250(1): push %rbx
5251(3): mov %rdi,%rbx
5254(5): call 0xffffc6cc(%rip)
5259(3): test %rax,%rax
525c(2): jnz 0x7(%rip)
525e(3): test %rbx,%rbx
5261(2): jnz 0x4(%rip)
5263(1): pop %rbx
5264(1): ret near (%rsp)
5265(5): call 0x23b(%rip)

"xnmalloc" :
5270(3): mov %rdi,%rax
5273(3): mul %rax,%rsi,%rdx
5276(3): mov %rax,%rdi
5279(3): seto %al
527c(3): test %rdi,%rdi
527f(2): js 0xc(%rip)
5281(3): movzx %al,%eax
5284(3): test %rax,%rax
5287(2): jnz 0x4(%rip)
5289(2): jmp 0xffffffc7(%rip)
528b(4): sub $0x8,%rsp
528f(5): call 0x211(%rip)

"xrealloc" :
52b0(3): test %rsi,%rsi
52b3(1): push %rbx
52b4(3): mov %rsi,%rbx
52b7(2): jnz 0x7(%rip)
52b9(3): test %rdi,%rdi
52bc(2): jnz 0x1c(%rip)
52be(3): mov %rbx,%rsi
52c1(5): call 0xffffc6af(%rip)
52c6(3): test %rax,%rax
52c9(2): jnz 0x7(%rip)
52cb(3): test %rbx,%rbx
52ce(2): jnz 0x13(%rip)
52d0(1): pop %rbx
52d1(1): ret near (%rsp)
52d2(6): nop 0x0(%rax,%rax,1)
52d8(5): call 0xffffc418(%rip)
52dd(2): xor %eax,%eax
52df(1): pop %rbx
52e0(1): ret near (%rsp)
52e1(5): call 0x1bf(%rip)

"xnrealloc" :
52f0(3): mov %rsi,%rax
52f3(3): mul %rax,%rdx,%rdx
52f6(3): mov %rax,%rsi
52f9(3): seto %al
52fc(3): test %rsi,%rsi
52ff(2): js 0xc(%rip)
5301(3): movzx %al,%eax
5304(3): test %rax,%rax
5307(2): jnz 0x4(%rip)
5309(2): jmp 0xffffffa7(%rip)
530b(4): sub $0x8,%rsp
530f(5): call 0x191(%rip)

"x2nrealloc" :
5320(3): test %rdi,%rdi
5323(3): mov %rdx,%r9
5326(3): mov (%rsi),%rcx
5329(2): jz 0x37(%rip)
532b(2): xor %edx,%edx
532d(a): mov $0x6148914691236517204,%rax
5337(3): div %r9,%rax
533a(3): cmp %rcx,%rax
533d(2): jbe 0x3e(%rip)
533f(3): mov %rcx,%rax
5342(3): shr $0x1,%rax
5345(5): lea 0x1(%rax,%rcx,1),%rcx
534a(3): mov %rcx,(%rsi)
534d(4): imul %r9,%rcx
5351(3): mov %rcx,%rsi
5354(5): jmp 0xffffff5c(%rip)
5359(7): nop 0x0(%rax)
5360(3): test %rcx,%rcx
5363(2): jz 0x25(%rip)
5365(3): mov %rcx,%rax
5368(3): mul %rax,%r9,%rdx
536b(3): seto %dl
536e(3): test %rax,%rax
5371(3): movzx %dl,%edx
5374(2): js 0x7(%rip)
5376(3): test %rdx,%rdx
5379(2): jz 0xffffffd1(%rip)
537b(4): sub $0x8,%rsp
537f(5): call 0x121(%rip)
5384(4): nop 0x0(%rax)
5388(2): xor %edx,%edx
538a(5): mov $0x80,%eax
538f(3): xor %r8d,%r8d
5392(3): div %r9,%rax
5395(3): test %rax,%rax
5398(4): setz %r8b
539c(4): lea 0x0(%r8,%rax,1),%rcx
53a0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
53b0(3): test %rdi,%rdi
53b3(3): mov (%rsi),%rax
53b6(2): jz 0x2a(%rip)
53b8(a): mov $0x6148914691236517203,%rdx
53c2(3): cmp %rdx,%rax
53c5(2): jnbe 0x2c(%rip)
53c7(3): mov %rax,%rdx
53ca(3): shr $0x1,%rdx
53cd(5): lea 0x1(%rdx,%rax,1),%rax
53d2(3): mov %rax,(%rsi)
53d5(3): mov %rax,%rsi
53d8(5): jmp 0xfffffed8(%rip)
53dd(3): nop (%rax)
53e0(3): test %rax,%rax
53e3(5): mov $0x80,%edx
53e8(4): cmove %rdx,%rax
53ec(3): test %rax,%rax
53ef(2): jns 0xffffffe3(%rip)
53f1(4): sub $0x8,%rsp
53f5(5): call 0xab(%rip)

"xzalloc" :
5400(1): push %rbx
5401(3): mov %rdi,%rbx
5404(5): call 0xfffffe4c(%rip)
5409(3): mov %rbx,%rdx
540c(2): xor %esi,%esi
540e(3): mov %rax,%rdi
5411(1): pop %rbx
5412(5): jmp 0xffffc44e(%rip)

"xcalloc" :
5420(3): mov %rdi,%rax
5423(4): sub $0x8,%rsp
5427(3): mul %rax,%rsi,%rdx
542a(3): seto %dl
542d(3): test %rax,%rax
5430(2): js 0x19(%rip)
5432(3): movzx %dl,%edx
5435(3): test %rdx,%rdx
5438(2): jnz 0x11(%rip)
543a(5): call 0xffffc476(%rip)
543f(3): test %rax,%rax
5442(2): jz 0x7(%rip)
5444(4): add $0x8,%rsp
5448(1): ret near (%rsp)
5449(5): call 0x57(%rip)

"xmemdup" :
5450(1): push %rbp
5451(1): push %rbx
5452(3): mov %rdi,%rbp
5455(3): mov %rsi,%rdi
5458(3): mov %rsi,%rbx
545b(4): sub $0x8,%rsp
545f(5): call 0xfffffdf1(%rip)
5464(4): add $0x8,%rsp
5468(3): mov %rbx,%rdx
546b(3): mov %rbp,%rsi
546e(1): pop %rbx
546f(1): pop %rbp
5470(3): mov %rax,%rdi
5473(5): jmp 0xffffc46d(%rip)

"xstrdup" :
5480(1): push %rbx
5481(3): mov %rdi,%rbx
5484(5): call 0xffffc33c(%rip)
5489(3): mov %rbx,%rdi
548c(4): lea 0x1(%rax),%rsi
5490(1): pop %rbx
5491(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
54a0(7): lea 0x18e8(%rip),%rsi
54a7(4): sub $0x8,%rsp
54ab(5): mov $0x5,%edx
54b0(2): xor %edi,%edi
54b2(5): call 0xffffc2ee(%rip)
54b7(6): mov 0x203b5b(%rip),%edi
54bd(7): lea 0x101b(%rip),%rdx
54c4(3): mov %rax,%rcx
54c7(2): xor %esi,%esi
54c9(2): xor %eax,%eax
54cb(5): call 0xffffc4d5(%rip)
54d0(5): call 0xffffc230(%rip)

"xgetgroups" :
54e0(1): push %rbx
54e1(5): call 0x69f(%rip)
54e6(3): cmp $0xff,%eax
54e9(2): mov %eax,%ebx
54eb(2): jz 0xd(%rip)
54ed(2): mov %ebx,%eax
54ef(1): pop %rbx
54f0(1): ret near (%rsp)
54f1(7): nop 0x0(%rax)
54f8(5): call 0xffffc218(%rip)
54fd(3): cmp $0xc,(%rax)
5500(2): jnz 0xffffffed(%rip)
5502(5): call 0xffffff9e(%rip)

"xstrtoul" :
5510(2): push %r15
5512(2): push %r14
5514(2): push %r13
5516(2): push %r12
5518(1): push %rbp
5519(1): push %rbx
551a(4): sub $0x28,%rsp
551e(9): mov $0x28,%rax
5527(5): mov %rax,0x18(%rsp)
552c(2): xor %eax,%eax
552e(3): cmp $0x24,%edx
5531(6): jnbe 0x364(%rip)
5537(5): lea 0x10(%rsp),%rax
553c(3): mov %rsi,%r15
553f(3): test %rsi,%rsi
5542(3): mov %rdi,%rbp
5545(4): mov %edx,0x8(%rsp)
5549(3): mov %rcx,%r14
554c(3): mov %r8,%r13
554f(4): cmove %rax,%r15
5553(5): call 0xffffc1bd(%rip)
5558(6): mov $0x0,(%rax)
555e(3): mov %rax,%r12
5561(4): movzx 0x0(%rbp),%ebx
5565(5): call 0xffffc51b(%rip)
556a(4): mov 0x8(%rsp),%edx
556e(3): mov (%rax),%rsi
5571(3): mov %rbp,%rax
5574(2): jmp 0x13(%rip)
5576(a): nop 0x0(%rax,%rax,1)
5580(4): add $0x1,%rax
5584(3): movzx (%rax),%ebx
5587(3): movzx %bl,%ecx
558a(5): test $0x20,0x1(%rsi,%rcx,2)
558f(2): jnz 0xfffffff1(%rip)
5591(3): cmp $0x2d,%bl
5594(2): jz 0x54(%rip)
5596(3): mov %r15,%rsi
5599(3): mov %rbp,%rdi
559c(5): call 0xffffc454(%rip)
55a1(3): mov (%r15),%rcx
55a4(3): mov %rax,%rbx
55a7(3): cmp %rbp,%rcx
55aa(2): jz 0x2e(%rip)
55ac(4): mov (%r12),%eax
55b0(2): test %eax,%eax
55b2(2): jz 0x66(%rip)
55b4(3): cmp $0x22,%eax
55b7(5): mov $0x1,%ebp
55bc(2): jnz 0x2c(%rip)
55be(3): test %r13,%r13
55c1(2): jz 0xb(%rip)
55c3(4): movzx (%rcx),%r12d
55c7(3): test %r12b,%r12b
55ca(2): jnz 0x7d(%rip)
55cc(3): mov %rbx,(%r14)
55cf(2): jmp 0x1e(%rip)
55d1(7): nop 0x0(%rax)
55d8(3): test %r13,%r13
55db(5): mov %rcx,0x8(%rsp)
55e0(2): jnz 0x40(%rip)
55e2(6): nop 0x0(%rax,%rax,1)
55e8(5): mov $0x4,%ebp
55ed(5): mov 0x18(%rsp),%rdi
55f2(9): xor $0x28,%rdi
55fb(2): mov %ebp,%eax
55fd(6): jnz 0x293(%rip)
5603(4): add $0x28,%rsp
5607(1): pop %rbx
5608(1): pop %rbp
5609(2): pop %r12
560b(2): pop %r13
560d(2): pop %r14
560f(2): pop %r15
5611(1): ret near (%rsp)
5612(6): nop 0x0(%rax,%rax,1)
5618(2): xor %ebp,%ebp
561a(2): jmp 0xffffffa4(%rip)
561c(4): nop 0x0(%rax)
5620(5): movzx 0x0(%rbp),%r12d
5625(3): test %r12b,%r12b
5628(2): jz 0xffffffc0(%rip)
562a(4): movsx %r12b,%esi
562e(3): mov %r13,%rdi
5631(2): xor %ebp,%ebp
5633(5): call 0xffffc1dd(%rip)
5638(3): test %rax,%rax
563b(5): mov $0x1,%ebx
5640(5): mov 0x8(%rsp),%rcx
5645(2): jz 0xffffffa3(%rip)
5647(4): movsx %r12b,%esi
564b(3): mov %r13,%rdi
564e(5): mov %rcx,0x8(%rsp)
5653(5): call 0xffffc1bd(%rip)
5658(3): test %rax,%rax
565b(5): mov 0x8(%rsp),%rcx
5660(6): jz 0xcc(%rip)
5666(5): lea 0xffffffbb(%r12),%eax
566b(2): cmp $0x2f,%al
566d(2): jnbe 0x53(%rip)
566f(a): mov $0x142129060940101,%rdx
5679(4): bt %rax,%rdx
567d(2): jnb 0x43(%rip)
567f(5): mov $0x30,%esi
5684(3): mov %r13,%rdi
5687(5): mov %rcx,0x8(%rsp)
568c(5): call 0xffffc184(%rip)
5691(3): test %rax,%rax
5694(5): mov 0x8(%rsp),%rcx
5699(2): jz 0x27(%rip)
569b(4): movzx 0x1(%rcx),%eax
569f(2): cmp $0x44,%al
56a1(2): jz 0xe(%rip)
56a3(2): cmp $0x69,%al
56a5(6): jz 0x1d3(%rip)
56ab(2): cmp $0x42,%al
56ad(2): jnz 0x13(%rip)
56af(5): mov $0x2,%edi
56b4(5): mov $0x3e8,%esi
56b9(2): jmp 0x11(%rip)
56bb(5): nop 0x0(%rax,%rax,1)
56c0(5): mov $0x1,%edi
56c5(5): mov $0x400,%esi
56ca(4): sub $0x42,%r12d
56ce(4): cmp $0x35,%r12b
56d2(2): jnbe 0x5a(%rip)
56d4(7): lea 0x170d(%rip),%rdx
56db(4): movzx %r12b,%r12d
56df(4): movsxd 0x0(%rdx,%r12,4),%rax
56e3(3): add %rdx,%rax
56e6(2): jmp %rax
56e8(3): mov %rbx,%rax
56eb(3): mul %rax,%rsi,%rdx
56ee(6): jo 0x1f3(%rip)
56f4(3): xor %r8d,%r8d
56f7(3): mul %rax,%rsi,%rdx
56fa(6): jo 0x1d8(%rip)
5700(3): mov %rax,%rbx
5703(3): or %r8d,%ebp
5706(a): nop 0x0(%rax,%rax,1)
5710(3): movsxd %edi,%rdi
5713(2): mov %ebp,%eax
5715(3): add %rdi,%rcx
5718(3): or $0x2,%eax
571b(3): mov %rcx,(%r15)
571e(3): cmp $0x0,(%rcx)
5721(3): mov %rbx,(%r14)
5724(3): cmovne %eax,%ebp
5727(5): jmp 0xfffffec6(%rip)
572c(3): mov %rbx,(%r14)
572f(3): or $0x2,%ebp
5732(5): jmp 0xfffffebb(%rip)
5737(5): mov $0x2,%edx
573c(3): mov %rdx,%rax
573f(3): mul %rax,%rbx,%rdx
5742(6): jo 0x9c(%rip)
5748(3): add %rbx,%rbx
574b(2): jmp 0xffffffc5(%rip)
574d(5): mov $0x200,%edx
5752(3): mov %rdx,%rax
5755(3): mul %rax,%rbx,%rdx
5758(6): jo 0x86(%rip)
575e(4): shl/sal $0x9,%rbx
5762(2): jmp 0xffffffae(%rip)
5764(6): mov $0x7,%r8d
576a(3): xor %r9d,%r9d
576d(3): nop (%rax)
5770(3): mov %rbx,%rax
5773(3): mul %rax,%rsi,%rdx
5776(3): mov %rax,%rbx
5779(6): jo 0x195(%rip)
577f(4): sub $0x1,%r8d
5783(2): jnz 0xffffffed(%rip)
5785(3): or %r9d,%ebp
5788(2): jmp 0xffffff88(%rip)
578a(6): mov $0x8,%r8d
5790(3): xor %r9d,%r9d
5793(5): nop 0x0(%rax,%rax,1)
5798(3): mov %rbx,%rax
579b(3): mul %rax,%rsi,%rdx
579e(3): mov %rax,%rbx
57a1(6): jo 0x14f(%rip)
57a7(4): sub $0x1,%r8d
57ab(2): jnz 0xffffffed(%rip)
57ad(2): jmp 0xffffffd8(%rip)
57af(6): mov $0x4,%r8d
57b5(3): xor %r9d,%r9d
57b8(3): mov %rbx,%rax
57bb(3): mul %rax,%rsi,%rdx
57be(3): mov %rax,%rbx
57c1(6): jo 0x102(%rip)
57c7(4): sub $0x1,%r8d
57cb(2): jnz 0xffffffed(%rip)
57cd(2): jmp 0xffffffb8(%rip)
57cf(3): mov %rbx,%rax
57d2(3): mul %rax,%rsi,%rdx
57d5(3): mov %rax,%rbx
57d8(6): jno 0xffffff38(%rip)
57de(5): mov $0x1,%ebp
57e3(4): or $0xffffffff,%rbx
57e7(5): jmp 0xffffff29(%rip)
57ec(4): nop 0x0(%rax)
57f0(6): mov $0x5,%r8d
57f6(3): xor %r9d,%r9d
57f9(3): mov %rbx,%rax
57fc(3): mul %rax,%rsi,%rdx
57ff(3): mov %rax,%rbx
5802(6): jo 0xfd(%rip)
5808(4): sub $0x1,%r8d
580c(2): jnz 0xffffffed(%rip)
580e(5): jmp 0xffffff77(%rip)
5813(6): mov $0x6,%r8d
5819(3): xor %r9d,%r9d
581c(3): mov %rbx,%rax
581f(3): mul %rax,%rsi,%rdx
5822(3): mov %rax,%rbx
5825(6): jo 0x8f(%rip)
582b(4): sub $0x1,%r8d
582f(2): jnz 0xffffffed(%rip)
5831(5): jmp 0xffffff54(%rip)
5836(5): mov $0x400,%edx
583b(3): mov %rdx,%rax
583e(3): mul %rax,%rbx,%rdx
5841(2): jo 0xffffff9d(%rip)
5843(4): shl/sal $0xa,%rbx
5847(5): jmp 0xfffffec9(%rip)
584c(3): mov %rbx,%rax
584f(3): mul %rax,%rsi,%rdx
5852(6): jo 0xcb(%rip)
5858(3): xor %r8d,%r8d
585b(3): mul %rax,%rsi,%rdx
585e(6): jno 0xfffffe99(%rip)
5864(6): mov $0x1,%r8d
586a(4): or $0xffffffff,%rax
586e(5): jmp 0xfffffe89(%rip)
5873(5): nop 0x0(%rax,%rax,1)
5878(2): xor %edi,%edi
587a(4): cmp $0x42,0x2(%rcx)
587e(5): mov $0x400,%esi
5883(4): setz %dil
5887(4): lea 0x1(%rdi,%rdi,1),%edi
588b(5): jmp 0xfffffe3f(%rip)
5890(5): call 0xffffbf50(%rip)
5895(7): lea 0x1624(%rip),%rcx
589c(7): lea 0x14fd(%rip),%rsi
58a3(7): lea 0x1516(%rip),%rdi
58aa(5): mov $0x54,%edx
58af(5): call 0xffffbfa1(%rip)
58b4(6): mov $0x1,%r9d
58ba(4): or $0xffffffff,%rbx
58be(5): jmp 0xffffff6d(%rip)
58c3(6): mov $0x1,%r9d
58c9(4): or $0xffffffff,%rbx
58cd(5): jmp 0xfffffefa(%rip)
58d2(6): mov $0x1,%r8d
58d8(4): or $0xffffffff,%rbx
58dc(5): jmp 0xfffffe27(%rip)
58e1(4): or $0xffffffff,%rax
58e5(6): mov $0x1,%r8d
58eb(5): jmp 0xfffffe0c(%rip)
58f0(6): mov $0x1,%r9d
58f6(4): or $0xffffffff,%rbx
58fa(5): jmp 0xfffffead(%rip)
58ff(6): mov $0x1,%r9d
5905(4): or $0xffffffff,%rbx
5909(5): jmp 0xfffffeff(%rip)
590e(6): mov $0x1,%r9d
5914(4): or $0xffffffff,%rbx
5918(5): jmp 0xfffffe67(%rip)
591d(6): mov $0x1,%r8d
5923(4): or $0xffffffff,%rax
5927(5): jmp 0xffffff34(%rip)

"rpl_mbrtowc" :
5930(2): push %r13
5932(2): push %r12
5934(3): mov %rsi,%r13
5937(1): push %rbp
5938(1): push %rbx
5939(3): mov %rdi,%rbx
593c(3): mov %rdx,%r12
593f(4): sub $0x18,%rsp
5943(9): mov $0x28,%rax
594c(5): mov %rax,0x8(%rsp)
5951(2): xor %eax,%eax
5953(5): lea 0x4(%rsp),%rax
5958(3): test %rdi,%rdi
595b(4): cmove %rax,%rbx
595f(3): mov %rbx,%rdi
5962(5): call 0xffffbe9e(%rip)
5967(4): cmp $0xfffffffd,%rax
596b(3): mov %rax,%rbp
596e(2): jbe 0x22(%rip)
5970(3): test %r12,%r12
5973(2): jz 0x1d(%rip)
5975(2): xor %edi,%edi
5977(5): call 0xc9(%rip)
597c(2): test %al,%al
597e(2): jnz 0x12(%rip)
5980(5): movzx 0x0(%r13),%eax
5985(5): mov $0x1,%ebp
598a(2): mov %eax,(%rbx)
598c(4): nop 0x0(%rax)
5990(5): mov 0x8(%rsp),%rdx
5995(9): xor $0x28,%rdx
599e(3): mov %rbp,%rax
59a1(2): jnz 0xd(%rip)
59a3(4): add $0x18,%rsp
59a7(1): pop %rbx
59a8(1): pop %rbp
59a9(2): pop %r12
59ab(2): pop %r13
59ad(1): ret near (%rsp)
59ae(5): call 0xffffbe32(%rip)

"close_stream" :
59c0(2): push %r12
59c2(1): push %rbp
59c3(3): mov %rdi,%rbp
59c6(1): push %rbx
59c7(5): call 0xffffbd89(%rip)
59cc(3): mov 0x0(%rbp),%ebx
59cf(3): mov %rbp,%rdi
59d2(3): mov %rax,%r12
59d5(5): call 0x3eb(%rip)
59da(3): and $0x20,%ebx
59dd(2): test %ebx,%ebx
59df(2): jnz 0x19(%rip)
59e1(2): test %eax,%eax
59e3(2): jz 0xc(%rip)
59e5(3): test %r12,%r12
59e8(5): mov $0xffffffff,%eax
59ed(2): jz 0x3b(%rip)
59ef(1): pop %rbx
59f0(1): pop %rbp
59f1(2): pop %r12
59f3(1): ret near (%rsp)
59f4(4): nop 0x0(%rax)
59f8(2): test %eax,%eax
59fa(2): jnz 0x1e(%rip)
59fc(5): call 0xffffbd14(%rip)
5a01(6): mov $0x0,(%rax)
5a07(5): mov $0xffffffff,%eax
5a0c(1): pop %rbx
5a0d(1): pop %rbp
5a0e(2): pop %r12
5a10(1): ret near (%rsp)
5a11(7): nop 0x0(%rax)
5a18(1): pop %rbx
5a19(5): mov $0xffffffff,%eax
5a1e(1): pop %rbp
5a1f(2): pop %r12
5a21(1): ret near (%rsp)
5a22(6): nop 0x0(%rax,%rax,1)
5a28(5): call 0xffffbce8(%rip)
5a2d(3): cmp $0x9,(%rax)
5a30(1): pop %rbx
5a31(1): pop %rbp
5a32(2): pop %r12
5a34(3): setnz %al
5a37(3): movzx %al,%eax
5a3a(2): neg %eax
5a3c(1): ret near (%rsp)

"hard_locale" :
5a40(4): sub $0x8,%rsp
5a44(2): xor %esi,%esi
5a46(5): call 0xffffbf3a(%rip)
5a4b(3): mov %rax,%rdx
5a4e(5): mov $0x1,%eax
5a53(3): test %rdx,%rdx
5a56(2): jz 0x1f(%rip)
5a58(7): lea 0x146a(%rip),%rdi
5a5f(5): mov $0x2,%ecx
5a64(3): mov %rdx,%rsi
5a67(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5a69(3): setnbe %cl
5a6c(3): sbb $0x0,%cl
5a6f(2): xor %eax,%eax
5a71(2): test %cl,%cl
5a73(2): jnz 0xd(%rip)
5a75(4): add $0x8,%rsp
5a79(1): ret near (%rsp)
5a7a(6): nop 0x0(%rax,%rax,1)
5a80(7): lea 0x1444(%rip),%rdi
5a87(5): mov $0x6,%ecx
5a8c(3): mov %rdx,%rsi
5a8f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5a91(3): setnbe %al
5a94(2): sbb $0x0,%al
5a96(2): test %al,%al
5a98(3): setnz %al
5a9b(4): add $0x8,%rsp
5a9f(1): ret near (%rsp)

"umaxtostr" :
5aa0(4): lea 0x14(%rsi),%rcx
5aa4(4): mov $0x0,0x14(%rsi)
5aa8(a): mov $0x-3689348814741910323,%rsi
5ab2(6): nop 0x0(%rax,%rax,1)
5ab8(3): mov %rdi,%rax
5abb(4): sub $0x1,%rcx
5abf(3): mul %rax,%rsi,%rdx
5ac2(4): shr $0x3,%rdx
5ac6(4): lea 0x0(%rdx,%rdx,4),%rax
5aca(3): add %rax,%rax
5acd(3): sub %rax,%rdi
5ad0(3): add $0x30,%edi
5ad3(3): test %rdx,%rdx
5ad6(3): mov %dil,(%rcx)
5ad9(3): mov %rdx,%rdi
5adc(2): jnz 0xffffffdc(%rip)
5ade(3): mov %rcx,%rax
5ae1(1): ret near (%rsp)

"locale_charset" :
5af0(4): sub $0x8,%rsp
5af4(5): mov $0xe,%edi
5af9(5): call 0xffffbe47(%rip)
5afe(3): test %rax,%rax
5b01(2): jz 0x1f(%rip)
5b03(3): cmp $0x0,(%rax)
5b06(7): lea 0x13c4(%rip),%rdx
5b0d(4): cmove %rdx,%rax
5b11(4): add $0x8,%rsp
5b15(1): ret near (%rsp)
5b16(a): nop 0x0(%rax,%rax,1)
5b20(7): lea 0x13aa(%rip),%rax
5b27(4): add $0x8,%rsp
5b2b(1): ret near (%rsp)

"realloc_groupbuf" :
5b30(5): mov $0x4,%edx
5b35(3): mov %rdx,%rax
5b38(3): mul %rax,%rsi,%rdx
5b3b(2): jo 0x33(%rip)
5b3d(2): xor %ecx,%ecx
5b3f(3): test %rax,%rax
5b42(2): js 0x16(%rip)
5b44(3): test %rcx,%rcx
5b47(2): jnz 0x11(%rip)
5b49(4): shl/sal $0x2,%rsi
5b4d(5): jmp 0xffffbe23(%rip)
5b52(6): nop 0x0(%rax,%rax,1)
5b58(4): sub $0x8,%rsp
5b5c(5): call 0xffffbbb4(%rip)
5b61(6): mov $0xc,(%rax)
5b67(2): xor %eax,%eax
5b69(4): add $0x8,%rsp
5b6d(1): ret near (%rsp)
5b6e(5): mov $0x1,%ecx
5b73(2): jmp 0xffffffcc(%rip)

"mgetgroups" :
5b80(2): push %r15
5b82(2): push %r14
5b84(3): mov %rdx,%r15
5b87(2): push %r13
5b89(2): push %r12
5b8b(3): mov %esi,%r13d
5b8e(1): push %rbp
5b8f(1): push %rbx
5b90(4): sub $0x18,%rsp
5b94(9): mov $0x28,%rax
5b9d(5): mov %rax,0x8(%rsp)
5ba2(2): xor %eax,%eax
5ba4(3): test %rdi,%rdi
5ba7(6): jz 0xd1(%rip)
5bad(3): mov %rdi,%rbp
5bb0(5): mov $0xa,%esi
5bb5(2): xor %edi,%edi
5bb7(8): mov $0xa,0x4(%rsp)
5bbf(5): call 0xffffff71(%rip)
5bc4(3): test %rax,%rax
5bc7(3): mov %rax,%rbx
5bca(6): jz 0x1ce(%rip)
5bd0(5): lea 0x4(%rsp),%r14
5bd5(3): mov %r13d,%esi
5bd8(3): mov %r14,%rcx
5bdb(3): mov %rbx,%rdx
5bde(3): mov %rbp,%rdi
5be1(5): mov 0x4(%rsp),%r12d
5be6(5): call 0xffffbdda(%rip)
5beb(2): test %eax,%eax
5bed(5): movsxd 0x4(%rsp),%rsi
5bf2(2): js 0x4e(%rip)
5bf4(3): mov %rbx,%rdi
5bf7(5): call 0xffffff39(%rip)
5bfc(3): test %rax,%rax
5bff(2): jnz 0x69(%rip)
5c01(5): call 0xffffbb0f(%rip)
5c06(3): mov (%rax),%r12d
5c09(3): mov %rax,%rbp
5c0c(3): mov %rbx,%rdi
5c0f(5): call 0xffffbae1(%rip)
5c14(5): mov $0xffffffff,%eax
5c19(4): mov %r12d,0x0(%rbp)
5c1d(5): mov 0x8(%rsp),%rcx
5c22(9): xor $0x28,%rcx
5c2b(6): jnz 0x18c(%rip)
5c31(4): add $0x18,%rsp
5c35(1): pop %rbx
5c36(1): pop %rbp
5c37(2): pop %r12
5c39(2): pop %r13
5c3b(2): pop %r14
5c3d(2): pop %r15
5c3f(1): ret near (%rsp)
5c40(3): cmp %r12d,%esi
5c43(2): jnz 0xb(%rip)
5c45(2): add %esi,%esi
5c47(4): mov %esi,0x4(%rsp)
5c4b(3): movsxd %esi,%rsi
5c4e(3): mov %rbx,%rdi
5c51(5): call 0xfffffedf(%rip)
5c56(3): test %rax,%rax
5c59(2): jz 0xffffffa8(%rip)
5c5b(3): mov %rax,%rbx
5c5e(5): jmp 0xffffff77(%rip)
5c63(5): nop 0x0(%rax,%rax,1)
5c68(3): mov %rax,(%r15)
5c6b(4): mov 0x4(%rsp),%eax
5c6f(2): jmp 0xffffffae(%rip)
5c71(7): nop 0x0(%rax)
5c78(2): xor %esi,%esi
5c7a(2): xor %edi,%edi
5c7c(5): call 0xffffbc94(%rip)
5c81(2): test %eax,%eax
5c83(4): mov %eax,0x4(%rsp)
5c87(6): js 0xb1(%rip)
5c8d(4): cmp $0xff,%r13d
5c91(4): setnz %bpl
5c95(2): test %eax,%eax
5c97(2): jz 0xb(%rip)
5c99(3): test %bpl,%bpl
5c9c(6): jz 0xcb(%rip)
5ca2(3): add $0x1,%eax
5ca5(2): xor %edi,%edi
5ca7(3): movsxd %eax,%rsi
5caa(4): mov %eax,0x4(%rsp)
5cae(5): call 0xfffffe82(%rip)
5cb3(3): test %rax,%rax
5cb6(3): mov %rax,%rbx
5cb9(6): jz 0xdf(%rip)
5cbf(4): mov 0x4(%rsp),%edi
5cc3(4): movzx %bpl,%ebp
5cc7(2): sub %ebp,%edi
5cc9(4): cmp $0xff,%r13d
5ccd(6): jz 0xd5(%rip)
5cd3(4): lea 0x4(%rax),%rsi
5cd7(5): call 0xffffbc39(%rip)
5cdc(2): test %eax,%eax
5cde(6): js 0xffffff23(%rip)
5ce4(3): mov %r13d,(%rbx)
5ce7(3): add $0x1,%eax
5cea(3): cmp $0x1,%eax
5ced(3): mov %rbx,(%r15)
5cf0(6): jle 0xffffff2d(%rip)
5cf6(3): movsxd %eax,%rdx
5cf9(2): mov (%rbx),%edi
5cfb(4): lea 0x0(%rbx,%rdx,4),%rsi
5cff(4): lea 0x4(%rbx),%rdx
5d03(3): cmp %rdx,%rsi
5d06(2): jnbe 0x22(%rip)
5d08(5): jmp 0xffffff15(%rip)
5d0d(3): nop (%rax)
5d10(2): cmp (%rbx),%ecx
5d12(2): jz 0x1c(%rip)
5d14(3): mov %ecx,0x4(%rbx)
5d17(4): add $0x4,%rbx
5d1b(4): add $0x4,%rdx
5d1f(3): cmp %rdx,%rsi
5d22(6): jbe 0xfffffefb(%rip)
5d28(2): mov (%rdx),%ecx
5d2a(2): cmp %edi,%ecx
5d2c(2): jnz 0xffffffe4(%rip)
5d2e(3): sub $0x1,%eax
5d31(2): jmp 0xffffffea(%rip)
5d33(5): nop 0x0(%rax,%rax,1)
5d38(5): call 0xffffb9d8(%rip)
5d3d(3): cmp $0x26,(%rax)
5d40(2): jnz 0x58(%rip)
5d42(2): xor %edi,%edi
5d44(5): mov $0x4,%esi
5d49(5): call 0xffffbc27(%rip)
5d4e(3): test %rax,%rax
5d51(2): jz 0x47(%rip)
5d53(3): mov %rax,(%r15)
5d56(3): mov %r13d,(%rax)
5d59(2): xor %eax,%eax
5d5b(4): cmp $0xff,%r13d
5d5f(3): setnz %al
5d62(5): jmp 0xfffffebb(%rip)
5d67(2): xor %edi,%edi
5d69(3): movsxd %eax,%rsi
5d6c(5): call 0xfffffdc4(%rip)
5d71(3): test %rax,%rax
5d74(3): mov %rax,%rbx
5d77(2): jz 0x21(%rip)
5d79(4): mov 0x4(%rsp),%edi
5d7d(3): mov %rbx,%rsi
5d80(5): call 0xffffbb90(%rip)
5d85(2): test %eax,%eax
5d87(6): jns 0xffffff63(%rip)
5d8d(5): jmp 0xfffffe74(%rip)
5d92(6): nop 0x0(%rax,%rax,1)
5d98(5): mov $0xffffffff,%eax
5d9d(5): jmp 0xfffffe80(%rip)
5da2(3): mov %rax,%rsi
5da5(5): call 0xffffbb6b(%rip)
5daa(2): test %eax,%eax
5dac(6): jns 0xffffff3e(%rip)
5db2(5): jmp 0xfffffe4f(%rip)
5db7(5): call 0xffffba29(%rip)

"rpl_fclose" :
5dc0(2): push %r12
5dc2(1): push %rbp
5dc3(1): push %rbx
5dc4(3): mov %rdi,%rbx
5dc7(5): call 0xffffbb39(%rip)
5dcc(2): test %eax,%eax
5dce(3): mov %rbx,%rdi
5dd1(2): js 0x56(%rip)
5dd3(5): call 0xffffbb8d(%rip)
5dd8(2): test %eax,%eax
5dda(2): jnz 0x2e(%rip)
5ddc(3): mov %rbx,%rdi
5ddf(5): call 0x61(%rip)
5de4(2): test %eax,%eax
5de6(2): jz 0x3e(%rip)
5de8(5): call 0xffffb928(%rip)
5ded(3): mov (%rax),%r12d
5df0(3): mov %rbx,%rdi
5df3(3): mov %rax,%rbp
5df6(5): call 0xffffb97a(%rip)
5dfb(3): test %r12d,%r12d
5dfe(2): jnz 0x32(%rip)
5e00(1): pop %rbx
5e01(1): pop %rbp
5e02(2): pop %r12
5e04(1): ret near (%rsp)
5e05(3): nop (%rax)
5e08(3): mov %rbx,%rdi
5e0b(5): call 0xffffbaf5(%rip)
5e10(2): xor %esi,%esi
5e12(5): mov $0x1,%edx
5e17(2): mov %eax,%edi
5e19(5): call 0xffffba27(%rip)
5e1e(4): cmp $0xffffffff,%rax
5e22(2): jnz 0xffffffba(%rip)
5e24(3): mov %rbx,%rdi
5e27(1): pop %rbx
5e28(1): pop %rbp
5e29(2): pop %r12
5e2b(5): jmp 0xffffb945(%rip)
5e30(4): mov %r12d,0x0(%rbp)
5e34(5): mov $0xffffffff,%eax
5e39(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5e40(3): test %rdi,%rdi
5e43(1): push %rbx
5e44(3): mov %rdi,%rbx
5e47(2): jz 0x13(%rip)
5e49(5): call 0xffffbb17(%rip)
5e4e(2): test %eax,%eax
5e50(2): jz 0xa(%rip)
5e52(6): test $0x100,(%rbx)
5e58(2): jnz 0x10(%rip)
5e5a(3): mov %rbx,%rdi
5e5d(1): pop %rbx
5e5e(5): jmp 0xffffbad2(%rip)
5e63(5): nop 0x0(%rax,%rax,1)
5e68(3): mov %rbx,%rdi
5e6b(5): mov $0x1,%edx
5e70(2): xor %esi,%esi
5e72(5): call 0xe(%rip)
5e77(3): mov %rbx,%rdi
5e7a(1): pop %rbx
5e7b(5): jmp 0xffffbab5(%rip)

"rpl_fseeko" :
5e80(4): mov 0x8(%rdi),%rax
5e84(4): cmp %rax,0x10(%rdi)
5e88(2): jz 0x8(%rip)
5e8a(5): jmp 0xffffbb46(%rip)
5e8f(1): nop 
5e90(4): mov 0x20(%rdi),%rax
5e94(4): cmp %rax,0x28(%rdi)
5e98(2): jnz 0xfffffff2(%rip)
5e9a(5): cmp $0x0,0x48(%rdi)
5e9f(2): jnz 0xffffffeb(%rip)
5ea1(2): push %r12
5ea3(1): push %rbp
5ea4(3): mov %edx,%r12d
5ea7(1): push %rbx
5ea8(3): mov %rsi,%rbp
5eab(3): mov %rdi,%rbx
5eae(5): call 0xffffba52(%rip)
5eb3(3): mov %r12d,%edx
5eb6(3): mov %rbp,%rsi
5eb9(2): mov %eax,%edi
5ebb(5): call 0xffffb985(%rip)
5ec0(4): cmp $0xffffffff,%rax
5ec4(2): jz 0xe(%rip)
5ec6(3): and $0xef,(%rbx)
5ec9(7): mov %rax,0x90(%rbx)
5ed0(2): xor %eax,%eax
5ed2(1): pop %rbx
5ed3(1): pop %rbp
5ed4(2): pop %r12
5ed6(1): ret near (%rsp)

"__libc_csu_init" :
5ee0(2): push %r15
5ee2(2): push %r14
5ee4(3): mov %rdx,%r15
5ee7(2): push %r13
5ee9(2): push %r12
5eeb(7): lea 0x202bbe(%rip),%r12
5ef2(1): push %rbp
5ef3(7): lea 0x202bbe(%rip),%rbp
5efa(1): push %rbx
5efb(3): mov %edi,%r13d
5efe(3): mov %rsi,%r14
5f01(3): sub %r12,%rbp
5f04(4): sub $0x8,%rsp
5f08(4): sar $0x3,%rbp
5f0c(5): call 0xffffb79c(%rip)
5f11(3): test %rbp,%rbp
5f14(2): jz 0x22(%rip)
5f16(2): xor %ebx,%ebx
5f18(8): nop 0x0(%rax,%rax,1)
5f20(3): mov %r15,%rdx
5f23(3): mov %r14,%rsi
5f26(3): mov %r13d,%edi
5f29(4): call 0x0(%r12,%rbx,8)
5f2d(4): add $0x1,%rbx
5f31(3): cmp %rbx,%rbp
5f34(2): jnz 0xffffffec(%rip)
5f36(4): add $0x8,%rsp
5f3a(1): pop %rbx
5f3b(1): pop %rbp
5f3c(2): pop %r12
5f3e(2): pop %r13
5f40(2): pop %r14
5f42(2): pop %r15
5f44(1): ret near (%rsp)

"atexit" :
5f60(7): mov 0x2030a1(%rip),%rdx
5f67(2): xor %esi,%esi
5f69(5): jmp 0xffffbaa7(%rip)

"_fini" :
5f70(4): sub $0x8,%rsp
5f74(4): add $0x8,%rsp
5f78(1): ret near (%rsp)

