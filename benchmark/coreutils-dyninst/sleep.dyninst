
"free@plt" :
12a0(6): jmp 0x205bda(%rip)
12a6(5): push $0x0

"abort@plt" :
12b0(6): jmp 0x205bd2(%rip)
12b6(5): push $0x1

"__errno_location@plt" :
12c0(6): jmp 0x205bca(%rip)
12c6(5): push $0x2

"strncmp@plt" :
12d0(6): jmp 0x205bc2(%rip)
12d6(5): push $0x3

"_exit@plt" :
12e0(6): jmp 0x205bba(%rip)
12e6(5): push $0x4

"__fpending@plt" :
12f0(6): jmp 0x205bb2(%rip)
12f6(5): push $0x5

"strtod@plt" :
1300(6): jmp 0x205baa(%rip)
1306(5): push $0x6

"textdomain@plt" :
1310(6): jmp 0x205ba2(%rip)
1316(5): push $0x7

"strtod_l@plt" :
1320(6): jmp 0x205b9a(%rip)
1326(5): push $0x8

"fclose@plt" :
1330(6): jmp 0x205b92(%rip)
1336(5): push $0x9

"bindtextdomain@plt" :
1340(6): jmp 0x205b8a(%rip)
1346(5): push $0xa

"dcgettext@plt" :
1350(6): jmp 0x205b82(%rip)
1356(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1360(6): jmp 0x205b7a(%rip)
1366(5): push $0xc

"strlen@plt" :
1370(6): jmp 0x205b72(%rip)
1376(5): push $0xd

"__stack_chk_fail@plt" :
1380(6): jmp 0x205b6a(%rip)
1386(5): push $0xe

"getopt_long@plt" :
1390(6): jmp 0x205b62(%rip)
1396(5): push $0xf

"mbrtowc@plt" :
13a0(6): jmp 0x205b5a(%rip)
13a6(5): push $0x10

"newlocale@plt" :
13b0(6): jmp 0x205b52(%rip)
13b6(5): push $0x11

"nanosleep@plt" :
13c0(6): jmp 0x205b4a(%rip)
13c6(5): push $0x12

"strrchr@plt" :
13d0(6): jmp 0x205b42(%rip)
13d6(5): push $0x13

"lseek@plt" :
13e0(6): jmp 0x205b3a(%rip)
13e6(5): push $0x14

"memset@plt" :
13f0(6): jmp 0x205b32(%rip)
13f6(5): push $0x15

"memcmp@plt" :
1400(6): jmp 0x205b2a(%rip)
1406(5): push $0x16

"fputs_unlocked@plt" :
1410(6): jmp 0x205b22(%rip)
1416(5): push $0x17

"calloc@plt" :
1420(6): jmp 0x205b1a(%rip)
1426(5): push $0x18

"memcpy@plt" :
1430(6): jmp 0x205b12(%rip)
1436(5): push $0x19

"fileno@plt" :
1440(6): jmp 0x205b0a(%rip)
1446(5): push $0x1a

"malloc@plt" :
1450(6): jmp 0x205b02(%rip)
1456(5): push $0x1b

"fflush@plt" :
1460(6): jmp 0x205afa(%rip)
1466(5): push $0x1c

"nl_langinfo@plt" :
1470(6): jmp 0x205af2(%rip)
1476(5): push $0x1d

"__freading@plt" :
1480(6): jmp 0x205aea(%rip)
1486(5): push $0x1e

"realloc@plt" :
1490(6): jmp 0x205ae2(%rip)
1496(5): push $0x1f

"setlocale@plt" :
14a0(6): jmp 0x205ada(%rip)
14a6(5): push $0x20

"__printf_chk@plt" :
14b0(6): jmp 0x205ad2(%rip)
14b6(5): push $0x21

"error@plt" :
14c0(6): jmp 0x205aca(%rip)
14c6(5): push $0x22

"fseeko@plt" :
14d0(6): jmp 0x205ac2(%rip)
14d6(5): push $0x23

"__cxa_atexit@plt" :
14e0(6): jmp 0x205aba(%rip)
14e6(5): push $0x24

"exit@plt" :
14f0(6): jmp 0x205ab2(%rip)
14f6(5): push $0x25

"fwrite@plt" :
1500(6): jmp 0x205aaa(%rip)
1506(5): push $0x26

"__fprintf_chk@plt" :
1510(6): jmp 0x205aa2(%rip)
1516(5): push $0x27

"mbsinit@plt" :
1520(6): jmp 0x205a9a(%rip)
1526(5): push $0x28

"iswprint@plt" :
1530(6): jmp 0x205a92(%rip)
1536(5): push $0x29

"__ctype_b_loc@plt" :
1540(6): jmp 0x205a8a(%rip)
1546(5): push $0x2a

".plt.got" :
1550(6): jmp 0x205aa2(%rip)
1556(2): nop 

"_init" :
1270(4): sub $0x8,%rsp
1274(7): mov 0x205d6d(%rip),%rax
127b(3): test %rax,%rax
127e(2): jz 0x4(%rip)
1280(2): call %rax
1282(4): add $0x8,%rsp
1286(1): ret near (%rsp)

"main" :
1560(2): push %r15
1562(2): push %r14
1564(2): push %r13
1566(2): push %r12
1568(3): mov %rsi,%r12
156b(1): push %rbp
156c(1): push %rbx
156d(2): mov %edi,%ebp
156f(4): sub $0x38,%rsp
1573(3): mov (%rsi),%rdi
1576(9): mov $0x28,%rax
157f(5): mov %rax,0x28(%rsp)
1584(2): xor %eax,%eax
1586(5): call 0xaaa(%rip)
158b(7): lea 0x408f(%rip),%rsi
1592(5): mov $0x6,%edi
1597(5): call 0xffffff09(%rip)
159c(7): lea 0x37ea(%rip),%rsi
15a3(7): lea 0x37ba(%rip),%rdi
15aa(5): call 0xfffffd96(%rip)
15af(7): lea 0x37ae(%rip),%rdi
15b6(5): call 0xfffffd5a(%rip)
15bb(7): lea 0x73e(%rip),%rdi
15c2(5): call 0x36ee(%rip)
15c7(7): lea 0x37d7(%rip),%rax
15ce(2): push $0x0
15d0(7): mov 0x205a39(%rip),%r8
15d7(7): lea 0x3782(%rip),%rcx
15de(7): lea 0x36ff(%rip),%rdx
15e5(6): mov $0x1,%r9d
15eb(1): push %rax
15ec(7): lea 0x37be(%rip),%rax
15f3(3): mov %r12,%rsi
15f6(2): mov %ebp,%edi
15f8(1): push %rax
15f9(7): lea 0x300(%rip),%rax
1600(1): push %rax
1601(2): xor %eax,%eax
1603(5): call 0x8ed(%rip)
1608(4): add $0x20,%rsp
160c(3): cmp $0x1,%ebp
160f(6): jz 0x1aa(%rip)
1615(6): mov 0x205a75(%rip),%eax
161b(2): cmp %eax,%ebp
161d(6): jle 0x155(%rip)
1623(3): movsxd %eax,%rdx
1626(2): not %eax
1628(6): mov $0x1,%r14d
162e(2): add %ebp,%eax
1630(4): lea 0x0(%r12,%rdx,8),%rbx
1634(9): mov $0x0,0x8(%rsp)
163d(3): add %rdx,%rax
1640(5): lea 0x20(%rsp),%rbp
1645(7): lea 0x3782(%rip),%r15
164c(5): lea 0x8(%r12,%rax,8),%r13
1651(5): lea 0x18(%rsp),%r12
1656(2): jmp 0x5d(%rip)
1658(8): nop 0x0(%rax,%rax,1)
1660(5): call 0xfffffc60(%rip)
1665(3): cmp $0x22,(%rax)
1668(2): jz 0x64(%rip)
166a(3): mov (%rbx),%rdi
166d(5): call 0x26d3(%rip)
1672(5): mov $0x5,%edx
1677(3): mov %rax,%r14
167a(3): mov %r15,%rsi
167d(2): xor %edi,%edi
167f(5): call 0xfffffcd1(%rip)
1684(3): mov %r14,%rcx
1687(3): mov %rax,%rdx
168a(2): xor %esi,%esi
168c(2): xor %edi,%edi
168e(2): xor %eax,%eax
1690(3): xor %r14d,%r14d
1693(5): call 0xfffffe2d(%rip)
1698(6): movsd 0x18(%rsp),%xmm0
169e(6): addsd 0x8(%rsp),%xmm0
16a4(4): add $0x8,%rbx
16a8(3): cmp %r13,%rbx
16ab(6): movsd %xmm0,0x8(%rsp)
16b1(2): jz 0x5f(%rip)
16b3(7): lea 0x566(%rip),%rcx
16ba(3): mov (%rbx),%rdi
16bd(3): mov %r12,%rdx
16c0(3): mov %rbp,%rsi
16c3(5): call 0x2fcd(%rip)
16c8(2): test %al,%al
16ca(2): jz 0xffffff96(%rip)
16cc(4): pxor %xmm2,%xmm2
16d0(6): movsd 0x18(%rsp),%xmm0
16d6(4): ucomisd %xmm2,%xmm0
16da(2): jb 0xffffff90(%rip)
16dc(5): mov 0x20(%rsp),%rax
16e1(3): movzx (%rax),%edx
16e4(2): test %dl,%dl
16e6(2): jz 0xffffffb8(%rip)
16e8(4): cmp $0x0,0x1(%rax)
16ec(6): jnz 0xffffff7e(%rip)
16f2(3): cmp $0x68,%dl
16f5(2): jz 0x50(%rip)
16f7(2): jnle 0x5b(%rip)
16f9(3): cmp $0x64,%dl
16fc(6): jnz 0xffffff6e(%rip)
1702(8): mulsd 0x396e(%rip),%xmm0
170a(2): jmp 0xffffff94(%rip)
170c(4): nop 0x0(%rax)
1710(3): test %r14b,%r14b
1713(2): jz 0x6b(%rip)
1715(6): movsd 0x8(%rsp),%xmm0
171b(5): call 0x2ef5(%rip)
1720(2): test %eax,%eax
1722(2): jnz 0x6b(%rip)
1724(2): xor %eax,%eax
1726(5): mov 0x28(%rsp),%rcx
172b(9): xor $0x28,%rcx
1734(2): jnz 0x54(%rip)
1736(4): add $0x38,%rsp
173a(1): pop %rbx
173b(1): pop %rbp
173c(2): pop %r12
173e(2): pop %r13
1740(2): pop %r14
1742(2): pop %r15
1744(1): ret near (%rsp)
1745(8): mulsd 0x3923(%rip),%xmm0
174d(5): jmp 0xffffff51(%rip)
1752(3): cmp $0x6d,%dl
1755(2): jnz 0xf(%rip)
1757(8): mulsd 0x3909(%rip),%xmm0
175f(5): jmp 0xffffff3f(%rip)
1764(3): cmp $0x73,%dl
1767(6): jnz 0xffffff03(%rip)
176d(5): jmp 0xffffff31(%rip)
1772(4): pxor %xmm3,%xmm3
1776(6): movsd %xmm3,0x8(%rsp)
177c(2): jmp 0xffffff99(%rip)
177e(5): mov $0x1,%edi
1783(5): call 0x17d(%rip)
1788(5): call 0xfffffbf8(%rip)
178d(7): lea 0x3653(%rip),%rsi
1794(5): mov $0x5,%edx
1799(2): xor %edi,%edi
179b(5): call 0xfffffbb5(%rip)
17a0(3): mov %rax,%rbx
17a3(5): call 0xfffffb1d(%rip)
17a8(2): mov (%rax),%esi
17aa(3): mov %rbx,%rdx
17ad(5): mov $0x1,%edi
17b2(2): xor %eax,%eax
17b4(5): call 0xfffffd0c(%rip)
17b9(7): lea 0x35fe(%rip),%rsi
17c0(5): mov $0x5,%edx
17c5(2): xor %edi,%edi
17c7(5): call 0xfffffb89(%rip)
17cc(2): xor %edi,%edi
17ce(3): mov %rax,%rdx
17d1(2): xor %esi,%esi
17d3(2): xor %eax,%eax
17d5(5): call 0xfffffceb(%rip)
17da(5): mov $0x1,%edi
17df(5): call 0x121(%rip)

"_start" :
17f0(2): xor %ebp,%ebp
17f2(3): mov %rdx,%r9
17f5(1): pop %rsi
17f6(3): mov %rsp,%rdx
17f9(4): and $0xfffffff0,%rsp
17fd(1): push %rax
17fe(1): push %rsp
17ff(7): lea 0x349a(%rip),%r8
1806(7): lea 0x3423(%rip),%rcx
180d(7): lea 0xfffffd4c(%rip),%rdi
1814(6): call 0x2057c6(%rip)
181a(1): hlt 

"deregister_tm_clones" :
1820(7): lea 0x205859(%rip),%rdi
1827(1): push %rbp
1828(7): lea 0x205851(%rip),%rax
182f(3): cmp %rdi,%rax
1832(3): mov %rsp,%rbp
1835(2): jz 0x1b(%rip)
1837(7): mov 0x20579a(%rip),%rax
183e(3): test %rax,%rax
1841(2): jz 0xf(%rip)
1843(1): pop %rbp
1844(2): jmp %rax
1846(a): nop 0x0(%rax,%rax,1)
1850(1): pop %rbp
1851(1): ret near (%rsp)

"register_tm_clones" :
1860(7): lea 0x205819(%rip),%rdi
1867(7): lea 0x205812(%rip),%rsi
186e(1): push %rbp
186f(3): sub %rdi,%rsi
1872(3): mov %rsp,%rbp
1875(4): sar $0x3,%rsi
1879(3): mov %rsi,%rax
187c(4): shr $0x3f,%rax
1880(3): add %rax,%rsi
1883(3): sar $0x1,%rsi
1886(2): jz 0x1a(%rip)
1888(7): mov 0x205761(%rip),%rax
188f(3): test %rax,%rax
1892(2): jz 0xe(%rip)
1894(1): pop %rbp
1895(2): jmp %rax
1897(9): nop 0x0(%rax,%rax,1)
18a0(1): pop %rbp
18a1(1): ret near (%rsp)

"__do_global_dtors_aux" :
18b0(7): cmp $0x0,0x205811(%rip)
18b7(2): jnz 0x31(%rip)
18b9(8): cmp $0x0,0x205737(%rip)
18c1(1): push %rbp
18c2(3): mov %rsp,%rbp
18c5(2): jz 0xe(%rip)
18c7(7): mov 0x20573a(%rip),%rdi
18ce(5): call 0xfffffc82(%rip)
18d3(5): call 0xffffff4d(%rip)
18d8(7): mov $0x1,0x2057e9(%rip)
18df(1): pop %rbp
18e0(1): ret near (%rsp)
18e1(7): nop 0x0(%rax)
18e8(2): REP ret near (%rsp)

"frame_dummy" :
18f0(1): push %rbp
18f1(3): mov %rsp,%rbp
18f4(1): pop %rbp
18f5(5): jmp 0xffffff6b(%rip)

"usage" :
1900(2): push %r13
1902(2): push %r12
1904(5): mov $0x5,%edx
1909(1): push %rbp
190a(1): push %rbx
190b(2): mov %edi,%ebp
190d(7): sub $0x88,%rsp
1914(7): mov 0x2057c5(%rip),%rbx
191b(9): mov $0x28,%rax
1924(5): mov %rax,0x78(%rsp)
1929(2): xor %eax,%eax
192b(2): test %edi,%edi
192d(2): jz 0x30(%rip)
192f(7): lea 0x34d2(%rip),%rsi
1936(2): xor %edi,%edi
1938(5): call 0xfffffa18(%rip)
193d(7): mov 0x20577c(%rip),%rdi
1944(3): mov %rax,%rdx
1947(3): mov %rbx,%rcx
194a(5): mov $0x1,%esi
194f(2): xor %eax,%eax
1951(5): call 0xfffffbbf(%rip)
1956(2): mov %ebp,%edi
1958(5): call 0xfffffb98(%rip)
195d(7): lea 0x34cc(%rip),%rsi
1964(2): xor %edi,%edi
1966(5): call 0xfffff9ea(%rip)
196b(3): mov %rbx,%rcx
196e(3): mov %rbx,%rdx
1971(3): mov %rax,%rsi
1974(5): mov $0x1,%edi
1979(2): xor %eax,%eax
197b(5): call 0xfffffb35(%rip)
1980(7): mov 0x205701(%rip),%rbx
1987(7): lea 0x35ca(%rip),%rsi
198e(5): mov $0x5,%edx
1993(2): xor %edi,%edi
1995(5): call 0xfffff9bb(%rip)
199a(3): mov %rbx,%rsi
199d(3): mov %rax,%rdi
19a0(5): call 0xfffffa70(%rip)
19a5(7): mov 0x2056dc(%rip),%rbx
19ac(7): lea 0x35d5(%rip),%rsi
19b3(5): mov $0x5,%edx
19b8(2): xor %edi,%edi
19ba(5): call 0xfffff996(%rip)
19bf(3): mov %rbx,%rsi
19c2(3): mov %rax,%rdi
19c5(7): lea 0x3373(%rip),%rbx
19cc(5): call 0xfffffa44(%rip)
19d1(7): lea 0x3312(%rip),%rax
19d8(7): lea 0x334c(%rip),%rcx
19df(5): mov %rbx,0x50(%rsp)
19e4(7): lea 0x32f9(%rip),%rbx
19eb(9): mov $0x0,0x60(%rsp)
19f4(9): mov $0x0,0x68(%rsp)
19fd(4): mov %rax,(%rsp)
1a01(7): lea 0x32e4(%rip),%rax
1a08(5): mov %rcx,0x30(%rsp)
1a0d(7): lea 0x3321(%rip),%rcx
1a14(3): mov %rsp,%rdx
1a17(5): mov %rax,0x8(%rsp)
1a1c(7): lea 0x3341(%rip),%rax
1a23(5): mov %rcx,0x40(%rsp)
1a28(5): mov %rax,0x10(%rsp)
1a2d(7): lea 0x32c8(%rip),%rax
1a34(5): mov %rax,0x18(%rsp)
1a39(7): lea 0x32d2(%rip),%rax
1a40(5): mov %rax,0x20(%rsp)
1a45(7): lea 0x32d0(%rip),%rax
1a4c(5): mov %rax,0x28(%rsp)
1a51(5): mov %rax,0x38(%rsp)
1a56(5): mov %rax,0x48(%rsp)
1a5b(5): mov %rax,0x58(%rsp)
1a60(4): add $0x10,%rdx
1a64(3): mov (%rdx),%rdi
1a67(3): test %rdi,%rdi
1a6a(2): jz 0x15(%rip)
1a6c(5): mov $0x6,%ecx
1a71(3): mov %rbx,%rsi
1a74(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1a76(3): setnbe %al
1a79(2): sbb $0x0,%al
1a7b(2): test %al,%al
1a7d(2): jnz 0xffffffe3(%rip)
1a7f(4): mov 0x8(%rdx),%r12
1a83(2): xor %edi,%edi
1a85(5): mov $0x5,%edx
1a8a(7): lea 0x32b8(%rip),%rsi
1a91(3): test %r12,%r12
1a94(6): jz 0xc7(%rip)
1a9a(5): call 0xfffff8b6(%rip)
1a9f(7): lea 0x351a(%rip),%rcx
1aa6(7): lea 0x32b3(%rip),%rdx
1aad(3): mov %rax,%rsi
1ab0(5): mov $0x1,%edi
1ab5(2): xor %eax,%eax
1ab7(5): call 0xfffff9f9(%rip)
1abc(2): xor %esi,%esi
1abe(5): mov $0x5,%edi
1ac3(5): call 0xfffff9dd(%rip)
1ac8(3): test %rax,%rax
1acb(2): jz 0x1e(%rip)
1acd(7): lea 0x329a(%rip),%rsi
1ad4(5): mov $0x3,%edx
1ad9(3): mov %rax,%rdi
1adc(5): call 0xfffff7f4(%rip)
1ae1(2): test %eax,%eax
1ae3(6): jnz 0x10d(%rip)
1ae9(7): lea 0x3282(%rip),%rsi
1af0(2): xor %edi,%edi
1af2(5): mov $0x5,%edx
1af7(5): call 0xfffff859(%rip)
1afc(7): lea 0x31e1(%rip),%rcx
1b03(7): lea 0x34b6(%rip),%rdx
1b0a(3): mov %rax,%rsi
1b0d(5): mov $0x1,%edi
1b12(2): xor %eax,%eax
1b14(5): call 0xfffff99c(%rip)
1b19(3): cmp %rbx,%r12
1b1c(7): lea 0x31e3(%rip),%rcx
1b23(7): lea 0x3af7(%rip),%rbx
1b2a(4): cmove %rcx,%rbx
1b2e(7): lea 0x34fb(%rip),%rsi
1b35(2): xor %edi,%edi
1b37(5): mov $0x5,%edx
1b3c(5): call 0xfffff814(%rip)
1b41(3): mov %rbx,%rcx
1b44(3): mov %rax,%rsi
1b47(3): mov %r12,%rdx
1b4a(5): mov $0x1,%edi
1b4f(2): xor %eax,%eax
1b51(5): call 0xfffff95f(%rip)
1b56(5): jmp 0xfffffe00(%rip)
1b5b(5): call 0xfffff7f5(%rip)
1b60(7): lea 0x3459(%rip),%rcx
1b67(7): lea 0x31f2(%rip),%rdx
1b6e(3): mov %rax,%rsi
1b71(5): mov $0x1,%edi
1b76(2): xor %eax,%eax
1b78(5): call 0xfffff938(%rip)
1b7d(2): xor %esi,%esi
1b7f(5): mov $0x5,%edi
1b84(5): call 0xfffff91c(%rip)
1b89(3): test %rax,%rax
1b8c(2): jz 0x1a(%rip)
1b8e(7): lea 0x31d9(%rip),%rsi
1b95(5): mov $0x3,%edx
1b9a(3): mov %rax,%rdi
1b9d(5): call 0xfffff733(%rip)
1ba2(2): test %eax,%eax
1ba4(2): jnz 0x45(%rip)
1ba6(7): lea 0x31c5(%rip),%rsi
1bad(5): mov $0x5,%edx
1bb2(2): xor %edi,%edi
1bb4(7): lea 0x3129(%rip),%r12
1bbb(7): lea 0x3144(%rip),%rbx
1bc2(5): call 0xfffff78e(%rip)
1bc7(7): lea 0x3116(%rip),%rcx
1bce(7): lea 0x33eb(%rip),%rdx
1bd5(3): mov %rax,%rsi
1bd8(5): mov $0x1,%edi
1bdd(2): xor %eax,%eax
1bdf(5): call 0xfffff8d1(%rip)
1be4(5): jmp 0xffffff4a(%rip)
1be9(7): lea 0x30f4(%rip),%r12
1bf0(7): mov 0x205491(%rip),%r13
1bf7(7): lea 0x33ea(%rip),%rsi
1bfe(2): xor %edi,%edi
1c00(5): mov $0x5,%edx
1c05(5): call 0xfffff74b(%rip)
1c0a(3): mov %r13,%rsi
1c0d(3): mov %rax,%rdi
1c10(5): call 0xfffff800(%rip)
1c15(5): jmp 0xfffffed4(%rip)

"cl_strtod" :
1c20(2): push %r13
1c22(2): push %r12
1c24(1): push %rbp
1c25(1): push %rbx
1c26(3): mov %rsi,%rbx
1c29(3): mov %rdi,%rbp
1c2c(4): sub $0x38,%rsp
1c30(5): lea 0x18(%rsp),%rsi
1c35(9): mov $0x28,%rax
1c3e(5): mov %rax,0x28(%rsp)
1c43(2): xor %eax,%eax
1c45(5): call 0xfffff6bb(%rip)
1c4a(5): mov 0x18(%rsp),%rax
1c4f(4): movapd %xmm0,%xmm1
1c53(3): cmp $0x0,(%rax)
1c56(2): jnz 0x32(%rip)
1c58(3): test %rbx,%rbx
1c5b(2): jz 0xa(%rip)
1c5d(5): mov 0x18(%rsp),%rax
1c62(3): mov %rax,(%rbx)
1c65(5): mov 0x28(%rsp),%rax
1c6a(9): xor $0x28,%rax
1c73(4): movapd %xmm1,%xmm0
1c77(2): jnz 0x57(%rip)
1c79(4): add $0x38,%rsp
1c7d(1): pop %rbx
1c7e(1): pop %rbp
1c7f(2): pop %r12
1c81(2): pop %r13
1c83(1): ret near (%rsp)
1c84(4): nop 0x0(%rax)
1c88(6): movsd %xmm0,0x8(%rsp)
1c8e(5): call 0xfffff632(%rip)
1c93(5): lea 0x20(%rsp),%rsi
1c98(3): mov %rbp,%rdi
1c9b(3): mov %rax,%r12
1c9e(3): mov (%rax),%r13d
1ca1(5): call 0x2c1f(%rip)
1ca6(5): mov 0x20(%rsp),%rax
1cab(5): cmp %rax,0x18(%rsp)
1cb0(6): movsd 0x8(%rsp),%xmm1
1cb6(2): jnb 0x12(%rip)
1cb8(5): mov %rax,0x18(%rsp)
1cbd(4): movapd %xmm0,%xmm1
1cc1(2): jmp 0xffffff97(%rip)
1cc3(5): nop 0x0(%rax,%rax,1)
1cc8(4): mov %r13d,(%r12)
1ccc(2): jmp 0xffffff8c(%rip)
1cce(5): call 0xfffff6b2(%rip)

"close_stdout_set_file_name" :
1ce0(7): mov %rdi,0x2053f1(%rip)
1ce7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1cf0(7): mov %dil,0x2053d9(%rip)
1cf7(1): ret near (%rsp)

"close_stdout" :
1d00(1): push %rbp
1d01(1): push %rbx
1d02(4): sub $0x8,%rsp
1d06(7): mov 0x20537b(%rip),%rdi
1d0d(5): call 0x2c23(%rip)
1d12(2): test %eax,%eax
1d14(2): jz 0x18(%rip)
1d16(5): call 0xfffff5aa(%rip)
1d1b(7): cmp $0x0,0x2053ae(%rip)
1d22(3): mov %rax,%rbx
1d25(2): jz 0x1e(%rip)
1d27(3): cmp $0x20,(%rax)
1d2a(2): jnz 0x19(%rip)
1d2c(7): mov 0x20538d(%rip),%rdi
1d33(5): call 0x2bfd(%rip)
1d38(2): test %eax,%eax
1d3a(2): jnz 0x48(%rip)
1d3c(4): add $0x8,%rsp
1d40(1): pop %rbx
1d41(1): pop %rbp
1d42(1): ret near (%rsp)
1d43(7): lea 0x333b(%rip),%rsi
1d4a(2): xor %edi,%edi
1d4c(5): mov $0x5,%edx
1d51(5): call 0xfffff5ff(%rip)
1d56(7): mov 0x20537b(%rip),%rdi
1d5d(3): mov %rax,%rbp
1d60(3): test %rdi,%rdi
1d63(2): jz 0x2a(%rip)
1d65(5): call 0x1ddb(%rip)
1d6a(2): mov (%rbx),%esi
1d6c(7): lea 0x331e(%rip),%rdx
1d73(3): mov %rax,%rcx
1d76(3): mov %rbp,%r8
1d79(2): xor %edi,%edi
1d7b(2): xor %eax,%eax
1d7d(5): call 0xfffff743(%rip)
1d82(6): mov 0x205290(%rip),%edi
1d88(5): call 0xfffff558(%rip)
1d8d(2): mov (%rbx),%esi
1d8f(7): lea 0x32ff(%rip),%rdx
1d96(3): mov %rax,%rcx
1d99(2): xor %edi,%edi
1d9b(2): xor %eax,%eax
1d9d(5): call 0xfffff723(%rip)
1da2(2): jmp 0xffffffe0(%rip)

"parse_long_options" :
1db0(2): push %r13
1db2(2): push %r12
1db4(3): mov %r8,%r13
1db7(1): push %rbp
1db8(1): push %rbx
1db9(3): mov %rdx,%rbp
1dbc(3): mov %rcx,%r12
1dbf(7): sub $0xe8,%rsp
1dc6(2): test %al,%al
1dc8(2): jz 0x3c(%rip)
1dca(5): movaps %xmm0,0x60(%rsp)
1dcf(5): movaps %xmm1,0x70(%rsp)
1dd4(8): movaps %xmm2,0x80(%rsp)
1ddc(8): movaps %xmm3,0x90(%rsp)
1de4(8): movaps %xmm4,0xa0(%rsp)
1dec(8): movaps %xmm5,0xb0(%rsp)
1df4(8): movaps %xmm6,0xc0(%rsp)
1dfc(8): movaps %xmm7,0xd0(%rsp)
1e04(9): mov $0x28,%rax
1e0d(5): mov %rax,0x28(%rsp)
1e12(2): xor %eax,%eax
1e14(3): cmp $0x2,%edi
1e17(6): mov 0x205283(%rip),%ebx
1e1d(a): mov $0x0,0x205279(%rip)
1e27(2): jz 0x39(%rip)
1e29(5): mov 0x28(%rsp),%rax
1e2e(9): xor $0x28,%rax
1e37(6): mov %ebx,0x205263(%rip)
1e3d(a): mov $0x0,0x205249(%rip)
1e47(6): jnz 0xa3(%rip)
1e4d(7): add $0xe8,%rsp
1e54(1): pop %rbx
1e55(1): pop %rbp
1e56(2): pop %r12
1e58(2): pop %r13
1e5a(1): ret near (%rsp)
1e5b(5): nop 0x0(%rax,%rax,1)
1e60(7): lea 0x204d59(%rip),%rcx
1e67(7): lea 0x322a(%rip),%rdx
1e6e(3): xor %r8d,%r8d
1e71(5): mov %r9,0x8(%rsp)
1e76(5): call 0xfffff51a(%rip)
1e7b(3): cmp $0xff,%eax
1e7e(2): jz 0xffffffab(%rip)
1e80(3): cmp $0x68,%eax
1e83(5): mov 0x8(%rsp),%r9
1e88(2): jz 0x58(%rip)
1e8a(3): cmp $0x76,%eax
1e8d(2): jnz 0xffffff9c(%rip)
1e8f(8): lea 0x110(%rsp),%rax
1e97(7): mov 0x2051ea(%rip),%rdi
1e9e(5): lea 0x10(%rsp),%r8
1ea3(3): mov %r13,%rcx
1ea6(3): mov %r12,%rdx
1ea9(3): mov %rbp,%rsi
1eac(5): mov %rax,0x18(%rsp)
1eb1(5): lea 0x30(%rsp),%rax
1eb6(8): mov $0x30,0x10(%rsp)
1ebe(8): mov $0x30,0x14(%rsp)
1ec6(5): mov %rax,0x20(%rsp)
1ecb(5): call 0x22d5(%rip)
1ed0(2): xor %edi,%edi
1ed2(5): call 0xfffff61e(%rip)
1ed7(9): nop 0x0(%rax,%rax,1)
1ee0(2): xor %edi,%edi
1ee2(3): call %r9
1ee5(5): jmp 0xffffff44(%rip)
1eea(5): call 0xfffff496(%rip)

"parse_gnu_standard_options_only" :
1ef0(2): push %r14
1ef2(2): push %r13
1ef4(3): mov %r8,%r14
1ef7(2): push %r12
1ef9(1): push %rbp
1efa(3): mov %rdx,%r12
1efd(1): push %rbx
1efe(3): mov %rcx,%r13
1f01(7): sub $0xd0,%rsp
1f08(2): test %al,%al
1f0a(8): mov 0x100(%rsp),%rbp
1f12(2): jz 0x39(%rip)
1f14(5): movaps %xmm0,0x50(%rsp)
1f19(5): movaps %xmm1,0x60(%rsp)
1f1e(5): movaps %xmm2,0x70(%rsp)
1f23(8): movaps %xmm3,0x80(%rsp)
1f2b(8): movaps %xmm4,0x90(%rsp)
1f33(8): movaps %xmm5,0xa0(%rsp)
1f3b(8): movaps %xmm6,0xb0(%rsp)
1f43(8): movaps %xmm7,0xc0(%rsp)
1f4b(9): mov $0x28,%rax
1f54(5): mov %rax,0x18(%rsp)
1f59(2): xor %eax,%eax
1f5b(7): lea 0x36bf(%rip),%rdx
1f62(7): lea 0x312f(%rip),%rax
1f69(3): test %r9b,%r9b
1f6c(7): lea 0x204c4d(%rip),%rcx
1f73(4): cmove %rax,%rdx
1f77(3): xor %r8d,%r8d
1f7a(6): mov 0x205120(%rip),%ebx
1f80(a): mov $0x1,0x205116(%rip)
1f8a(5): call 0xfffff406(%rip)
1f8f(3): cmp $0xff,%eax
1f92(2): jz 0x66(%rip)
1f94(3): cmp $0x68,%eax
1f97(6): jz 0x89(%rip)
1f9d(3): cmp $0x76,%eax
1fa0(2): jnz 0x50(%rip)
1fa2(8): lea 0x108(%rsp),%rax
1faa(7): mov 0x2050d7(%rip),%rdi
1fb1(3): mov %rsp,%r8
1fb4(3): mov %r14,%rcx
1fb7(3): mov %r13,%rdx
1fba(3): mov %r12,%rsi
1fbd(5): mov %rax,0x8(%rsp)
1fc2(5): lea 0x20(%rsp),%rax
1fc7(7): mov $0x30,(%rsp)
1fce(8): mov $0x30,0x4(%rsp)
1fd6(5): mov %rax,0x10(%rsp)
1fdb(5): call 0x21c5(%rip)
1fe0(2): xor %edi,%edi
1fe2(5): call 0xfffff50e(%rip)
1fe7(9): nop 0x0(%rax,%rax,1)
1ff0(6): mov 0x205022(%rip),%edi
1ff6(2): call %rbp
1ff8(5): mov 0x18(%rsp),%rax
1ffd(9): xor $0x28,%rax
2006(6): mov %ebx,0x205094(%rip)
200c(2): jnz 0x1a(%rip)
200e(7): add $0xd0,%rsp
2015(1): pop %rbx
2016(1): pop %rbp
2017(2): pop %r12
2019(2): pop %r13
201b(2): pop %r14
201d(1): ret near (%rsp)
201e(2): nop 
2020(2): xor %edi,%edi
2022(2): call %rbp
2024(2): jmp 0xffffffd4(%rip)
2026(5): call 0xfffff35a(%rip)

"set_program_name" :
2030(3): test %rdi,%rdi
2033(1): push %rbx
2034(2): jz 0x79(%rip)
2036(5): mov $0x2f,%esi
203b(3): mov %rdi,%rbx
203e(5): call 0xfffff392(%rip)
2043(3): test %rax,%rax
2046(2): jz 0x57(%rip)
2048(4): lea 0x1(%rax),%r8
204c(3): mov %r8,%rdx
204f(3): sub %rbx,%rdx
2052(4): cmp $0x6,%rdx
2056(2): jle 0x47(%rip)
2058(4): lea 0xfffffffa(%rax),%rsi
205c(7): lea 0x307d(%rip),%rdi
2063(5): mov $0x7,%ecx
2068(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
206a(3): setnbe %dl
206d(3): sbb $0x0,%dl
2070(2): test %dl,%dl
2072(2): jnz 0x2b(%rip)
2074(7): lea 0x306d(%rip),%rdi
207b(5): mov $0x3,%ecx
2080(3): mov %r8,%rsi
2083(3): mov %r8,%rbx
2086(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2088(3): setnbe %dl
208b(3): sbb $0x0,%dl
208e(2): test %dl,%dl
2090(2): jnz 0xd(%rip)
2092(4): lea 0x4(%rax),%rbx
2096(7): mov %rbx,0x204fe3(%rip)
209d(7): mov %rbx,0x20503c(%rip)
20a4(7): mov %rbx,0x204fed(%rip)
20ab(1): pop %rbx
20ac(1): ret near (%rsp)
20ad(7): mov 0x20500c(%rip),%rcx
20b4(7): lea 0x2fed(%rip),%rdi
20bb(5): mov $0x37,%edx
20c0(5): mov $0x1,%esi
20c5(5): call 0xfffff43b(%rip)
20ca(5): call 0xfffff1e6(%rip)

"gettext_quote.part.1" :
20d0(1): push %rbp
20d1(1): push %rbx
20d2(3): mov %rdi,%rbp
20d5(2): mov %esi,%ebx
20d7(4): sub $0x8,%rsp
20db(5): call 0x29f5(%rip)
20e0(3): movzx (%rax),%edx
20e3(3): and $0xdf,%edx
20e6(3): cmp $0x55,%dl
20e9(2): jz 0x77(%rip)
20eb(3): cmp $0x47,%dl
20ee(2): jz 0x22(%rip)
20f0(7): lea 0x3004(%rip),%rax
20f7(7): lea 0x2fff(%rip),%rdx
20fe(3): cmp $0x9,%ebx
2101(4): cmovne %rdx,%rax
2105(4): add $0x8,%rsp
2109(1): pop %rbx
210a(1): pop %rbp
210b(1): ret near (%rsp)
210c(4): nop 0x0(%rax)
2110(4): movzx 0x1(%rax),%edx
2114(3): and $0xdf,%edx
2117(3): cmp $0x42,%dl
211a(2): jnz 0xffffffd6(%rip)
211c(4): cmp $0x31,0x2(%rax)
2120(2): jnz 0xffffffd0(%rip)
2122(4): cmp $0x38,0x3(%rax)
2126(2): jnz 0xffffffca(%rip)
2128(4): cmp $0x30,0x4(%rax)
212c(2): jnz 0xffffffc4(%rip)
212e(4): cmp $0x33,0x5(%rax)
2132(2): jnz 0xffffffbe(%rip)
2134(4): cmp $0x30,0x6(%rax)
2138(2): jnz 0xffffffb8(%rip)
213a(4): cmp $0x0,0x7(%rax)
213e(2): jnz 0xffffffb2(%rip)
2140(4): cmp $0x60,0x0(%rbp)
2144(7): lea 0x2fa9(%rip),%rax
214b(7): lea 0x2fa6(%rip),%rdx
2152(4): cmovne %rdx,%rax
2156(4): add $0x8,%rsp
215a(1): pop %rbx
215b(1): pop %rbp
215c(1): ret near (%rsp)
215d(3): nop (%rax)
2160(4): movzx 0x1(%rax),%edx
2164(3): and $0xdf,%edx
2167(3): cmp $0x54,%dl
216a(2): jnz 0xffffff86(%rip)
216c(4): movzx 0x2(%rax),%edx
2170(3): and $0xdf,%edx
2173(3): cmp $0x46,%dl
2176(6): jnz 0xffffff7a(%rip)
217c(4): cmp $0x2d,0x3(%rax)
2180(6): jnz 0xffffff70(%rip)
2186(4): cmp $0x38,0x4(%rax)
218a(6): jnz 0xffffff66(%rip)
2190(4): cmp $0x0,0x5(%rax)
2194(6): jnz 0xffffff5c(%rip)
219a(4): cmp $0x60,0x0(%rbp)
219e(7): lea 0x2f47(%rip),%rax
21a5(7): lea 0x2f44(%rip),%rdx
21ac(4): cmovne %rdx,%rax
21b0(4): add $0x8,%rsp
21b4(1): pop %rbx
21b5(1): pop %rbp
21b6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
21c0(2): push %r15
21c2(2): push %r14
21c4(3): mov %r8d,%r15d
21c7(2): push %r13
21c9(2): push %r12
21cb(3): mov %rdi,%r14
21ce(1): push %rbp
21cf(1): push %rbx
21d0(3): mov %r9d,%ebx
21d3(3): mov %rsi,%r13
21d6(3): mov %rcx,%rbp
21d9(3): and $0x2,%ebx
21dc(7): sub $0xb8,%rsp
21e3(8): mov 0xf0(%rsp),%rax
21eb(5): mov %rdx,0x10(%rsp)
21f0(5): mov %r8d,0x8(%rsp)
21f5(5): mov %r9d,0x78(%rsp)
21fa(5): mov %rax,0x20(%rsp)
21ff(8): mov 0xf8(%rsp),%rax
2207(5): mov %rax,0x68(%rsp)
220c(8): mov 0x100(%rsp),%rax
2214(5): mov %rax,0x60(%rsp)
2219(9): mov $0x28,%rax
2222(8): mov %rax,0xa8(%rsp)
222a(2): xor %eax,%eax
222c(5): call 0xfffff134(%rip)
2231(4): cmp $0xa,%r15d
2235(5): mov %rax,0x58(%rsp)
223a(6): jnbe 0x11b5(%rip)
2240(7): lea 0x2f19(%rip),%rcx
2247(3): mov %r15d,%edx
224a(4): movsxd 0x0(%rcx,%rdx,4),%rax
224e(3): add %rcx,%rax
2251(2): jmp %rax
2253(5): mov $0x1,0xe(%rsp)
2258(5): mov $0x0,0x7c(%rsp)
225d(3): xor %r12d,%r12d
2260(9): mov $0x0,0x50(%rsp)
2269(5): mov $0x1,0xf(%rsp)
226e(5): mov $0x0,0xd(%rsp)
2273(7): lea 0x2e83(%rip),%rax
227a(9): mov $0x1,0x18(%rsp)
2283(3): xor %r15d,%r15d
2286(8): mov $0x2,0x8(%rsp)
228e(5): mov %rax,0x48(%rsp)
2293(3): xor %r11d,%r11d
2296(3): mov %rbp,%rax
2299(3): mov %r12d,%r8d
229c(3): mov %r11,%rbp
229f(3): mov %rax,%r11
22a2(6): nop 0x0(%rax,%rax,1)
22a8(3): cmp %rbp,%r11
22ab(4): setnz %r12b
22af(4): cmp $0xffffffff,%r11
22b3(2): jnz 0xf(%rip)
22b5(5): mov 0x10(%rsp),%rax
22ba(4): cmp $0x0,0x0(%rax,%rbp,1)
22be(4): setnz %r12b
22c2(3): test %r12b,%r12b
22c5(6): jz 0x65b(%rip)
22cb(5): cmp $0x2,0x8(%rsp)
22d0(5): mov 0x10(%rsp),%rdi
22d5(4): lea 0x0(%rdi,%rbp,1),%r9
22d9(3): setnz %al
22dc(4): and 0xd(%rsp),%al
22e0(3): mov %eax,%r10d
22e3(6): jz 0xad(%rip)
22e9(5): mov 0x18(%rsp),%rax
22ee(3): test %rax,%rax
22f1(6): jz 0x42f(%rip)
22f7(4): cmp $0xffffffff,%r11
22fb(5): lea 0x0(%rbp,%rax,1),%rbx
2300(2): jnz 0x30(%rip)
2302(4): cmp $0x1,%rax
2306(2): jbe 0x2a(%rip)
2308(5): mov %r8b,0x38(%rsp)
230d(5): mov %r10b,0x30(%rsp)
2312(5): mov %r9,0x28(%rsp)
2317(5): call 0xfffff059(%rip)
231c(6): movzx 0x38(%rsp),%r8d
2322(6): movzx 0x30(%rsp),%r10d
2328(3): mov %rax,%r11
232b(5): mov 0x28(%rsp),%r9
2330(3): cmp %r11,%rbx
2333(5): mov %r10b,0x28(%rsp)
2338(6): jnbe 0x5b8(%rip)
233e(5): mov 0x18(%rsp),%rdx
2343(5): mov 0x48(%rsp),%rsi
2348(3): mov %r9,%rdi
234b(5): mov %r11,0x40(%rsp)
2350(5): mov %r8b,0x38(%rsp)
2355(5): mov %r9,0x30(%rsp)
235a(5): call 0xfffff0a6(%rip)
235f(2): test %eax,%eax
2361(5): mov 0x30(%rsp),%r9
2366(6): movzx 0x38(%rsp),%r8d
236c(5): mov 0x40(%rsp),%r11
2371(6): jnz 0x57f(%rip)
2377(5): cmp $0x0,0xf(%rsp)
237c(6): movzx 0x28(%rsp),%r10d
2382(6): jnz 0xf83(%rip)
2388(8): nop 0x0(%rax,%rax,1)
2390(4): movzx (%r9),%ebx
2394(3): cmp $0x7e,%bl
2397(6): jnbe 0x321(%rip)
239d(7): lea 0x2de8(%rip),%rcx
23a4(3): movzx %bl,%edx
23a7(4): movsxd 0x0(%rcx,%rdx,4),%rax
23ab(3): add %rcx,%rax
23ae(2): jmp %rax
23b0(3): xor %r10d,%r10d
23b3(4): cmp $0x1,%r11
23b7(3): setnz %al
23ba(4): cmp $0xffffffff,%r11
23be(2): jnz 0xe(%rip)
23c0(5): mov 0x10(%rsp),%rax
23c5(4): cmp $0x0,0x1(%rax)
23c9(3): setnz %al
23cc(5): cmp $0x2,0x8(%rsp)
23d1(3): setz %dl
23d4(2): test %al,%al
23d6(6): jz 0x252(%rip)
23dc(3): xor %r12d,%r12d
23df(2): xor %eax,%eax
23e1(7): nop 0x0(%rax)
23e8(5): cmp $0x1,0xd(%rsp)
23ed(6): jnz 0x115(%rip)
23f3(2): test %dl,%dl
23f5(6): jnz 0x10d(%rip)
23fb(5): mov 0x20(%rsp),%rsi
2400(3): test %rsi,%rsi
2403(2): jz 0x16(%rip)
2405(2): mov %ebx,%edx
2407(3): shr $0x5,%dl
240a(3): movzx %dl,%edx
240d(3): mov 0x0(%rsi,%rdx,4),%edx
2410(3): bt %ebx,%edx
2413(6): jb 0x150(%rip)
2419(3): test %r10b,%r10b
241c(6): jnz 0x147(%rip)
2422(3): xor $0x1,%eax
2425(4): add $0x1,%rbp
2429(3): and %r8d,%eax
242c(2): test %al,%al
242e(2): jz 0x22(%rip)
2430(3): cmp %r15,%r13
2433(2): jbe 0x7(%rip)
2435(5): mov $0x27,0x0(%r14,%r15,1)
243a(4): lea 0x1(%r15),%rax
243e(3): cmp %rax,%r13
2441(2): jbe 0x8(%rip)
2443(6): mov $0x27,0x1(%r14,%r15,1)
2449(4): add $0x2,%r15
244d(3): xor %r8d,%r8d
2450(3): cmp %r13,%r15
2453(2): jnb 0x6(%rip)
2455(4): mov %bl,0x0(%r14,%r15,1)
2459(5): movzx 0xe(%rsp),%edi
245e(4): add $0x1,%r15
2462(5): mov $0x0,%eax
2467(3): test %r12b,%r12b
246a(3): cmove %eax,%edi
246d(5): mov %dil,0xe(%rsp)
2472(5): jmp 0xfffffe36(%rip)
2477(9): nop 0x0(%rax,%rax,1)
2480(3): xor %r10d,%r10d
2483(4): mov 0x8(%rsp),%eax
2487(3): cmp $0x2,%eax
248a(6): jz 0x5be(%rip)
2490(3): cmp $0x5,%eax
2493(6): jz 0x575(%rip)
2499(3): cmp $0x2,%eax
249c(5): mov $0x3f,%ebx
24a1(3): setz %dl
24a4(3): xor %r12d,%r12d
24a7(2): xor %eax,%eax
24a9(5): jmp 0xffffff3f(%rip)
24ae(2): nop 
24b0(3): xor %r10d,%r10d
24b3(5): cmp $0x2,0x8(%rsp)
24b8(6): jz 0x508(%rip)
24be(5): mov %r12b,0x7c(%rsp)
24c3(2): xor %edx,%edx
24c5(2): xor %eax,%eax
24c7(5): mov $0x27,%ebx
24cc(5): jmp 0xffffff1c(%rip)
24d1(7): nop 0x0(%rax)
24d8(5): mov $0x9,%edx
24dd(5): mov $0x74,%ebx
24e2(5): cmp $0x2,0x8(%rsp)
24e7(3): setz %al
24ea(4): and 0xf(%rsp),%al
24ee(6): jnz 0x150(%rip)
24f4(5): cmp $0x0,0xd(%rsp)
24f9(2): jnz 0x67(%rip)
24fb(2): mov %edx,%ebx
24fd(3): xor %r12d,%r12d
2500(2): xor %eax,%eax
2502(5): cmp $0x0,0xf(%rsp)
2507(6): jnz 0xfffffef4(%rip)
250d(5): jmp 0xffffff0c(%rip)
2512(6): nop 0x0(%rax,%rax,1)
2518(5): mov $0x8,%edx
251d(5): mov $0x62,%ebx
2522(2): jmp 0xffffffd2(%rip)
2524(4): nop 0x0(%rax)
2528(5): cmp $0x2,0x8(%rsp)
252d(6): jz 0x3d3(%rip)
2533(5): cmp $0x0,0xd(%rsp)
2538(6): jz 0x218(%rip)
253e(5): cmp $0x0,0xf(%rsp)
2543(6): jz 0x20d(%rip)
2549(6): cmp $0x0,0x18(%rsp)
254f(6): jnz 0x3bc(%rip)
2555(5): mov $0x5c,%ebx
255a(6): nop 0x0(%rax,%rax,1)
2560(3): xor %r12d,%r12d
2563(5): cmp $0x2,0x8(%rsp)
2568(3): setz %dl
256b(5): cmp $0x0,0xf(%rsp)
2570(2): mov %edx,%eax
2572(6): jnz 0x856(%rip)
2578(3): mov %r8d,%eax
257b(3): xor $0x1,%eax
257e(2): and %dl,%al
2580(2): jz 0x31(%rip)
2582(3): cmp %r15,%r13
2585(2): jbe 0x7(%rip)
2587(5): mov $0x27,0x0(%r14,%r15,1)
258c(4): lea 0x1(%r15),%rdx
2590(3): cmp %rdx,%r13
2593(2): jbe 0x8(%rip)
2595(6): mov $0x24,0x1(%r14,%r15,1)
259b(4): lea 0x2(%r15),%rdx
259f(3): cmp %rdx,%r13
25a2(2): jbe 0x8(%rip)
25a4(6): mov $0x27,0x2(%r14,%r15,1)
25aa(4): add $0x3,%r15
25ae(3): mov %eax,%r8d
25b1(3): cmp %r15,%r13
25b4(2): jbe 0x7(%rip)
25b6(5): mov $0x5c,0x0(%r14,%r15,1)
25bb(4): add $0x1,%r15
25bf(4): add $0x1,%rbp
25c3(5): jmp 0xfffffe8d(%rip)
25c8(8): nop 0x0(%rax,%rax,1)
25d0(5): cmp $0x0,0xd(%rsp)
25d5(6): jnz 0x1ce(%rip)
25db(2): xor %edx,%edx
25dd(5): test $0x1,0x78(%rsp)
25e2(6): jz 0xffffff19(%rip)
25e8(4): add $0x1,%rbp
25ec(5): jmp 0xfffffcbc(%rip)
25f1(7): nop 0x0(%rax)
25f8(5): cmp $0x2,0x8(%rsp)
25fd(3): setz %dl
2600(2): xor %eax,%eax
2602(5): jmp 0xfffffde6(%rip)
2607(9): nop 0x0(%rax,%rax,1)
2610(5): mov $0x7,%edx
2615(5): mov $0x61,%ebx
261a(5): jmp 0xfffffeda(%rip)
261f(1): nop 
2620(5): cmp $0x2,0x8(%rsp)
2625(3): setz %dl
2628(3): test %rbp,%rbp
262b(6): jnz 0xfffffdb1(%rip)
2631(5): movzx 0xf(%rsp),%eax
2636(2): and %dl,%al
2638(6): jz 0xfffffdb0(%rip)
263e(3): mov %r11,%rbp
2641(8): mov $0x2,0x8(%rsp)
2649(5): jmp 0x700(%rip)
264e(2): nop 
2650(5): cmp $0x2,0x8(%rsp)
2655(3): setz %dl
2658(3): xor %r12d,%r12d
265b(2): jmp 0xffffffd6(%rip)
265d(3): nop (%rax)
2660(5): cmp $0x2,0x8(%rsp)
2665(5): mov $0x20,%ebx
266a(3): setz %dl
266d(2): jmp 0xffffffc4(%rip)
266f(1): nop 
2670(5): mov $0xd,%edx
2675(5): mov $0x72,%ebx
267a(5): jmp 0xfffffe68(%rip)
267f(1): nop 
2680(5): mov $0xc,%edx
2685(5): mov $0x66,%ebx
268a(5): jmp 0xfffffe6a(%rip)
268f(1): nop 
2690(5): mov $0xb,%edx
2695(5): mov $0x76,%ebx
269a(5): jmp 0xfffffe5a(%rip)
269f(1): nop 
26a0(5): mov $0xa,%edx
26a5(5): mov $0x6e,%ebx
26aa(5): jmp 0xfffffe38(%rip)
26af(1): nop 
26b0(3): xor %r10d,%r10d
26b3(5): nop 0x0(%rax,%rax,1)
26b8(6): cmp $0x1,0x58(%rsp)
26be(6): jnz 0x3aa(%rip)
26c4(5): mov %r11,0x38(%rsp)
26c9(5): mov %r8b,0x30(%rsp)
26ce(5): mov %r10b,0x28(%rsp)
26d3(5): call 0xffffee6d(%rip)
26d8(3): mov (%rax),%rcx
26db(3): movzx %bl,%edx
26de(6): movzx 0x28(%rsp),%r10d
26e4(6): movzx 0x30(%rsp),%r8d
26ea(5): mov 0x38(%rsp),%r11
26ef(5): mov $0x1,%edi
26f4(4): movzx 0x0(%rcx,%rdx,2),%eax
26f8(4): and $0x4000,%ax
26fc(4): setnz %r12b
2700(3): setz %al
2703(4): and 0xd(%rsp),%al
2707(2): test %al,%al
2709(6): jnz 0x998(%rip)
270f(5): cmp $0x2,0x8(%rsp)
2714(3): setz %dl
2717(5): jmp 0xfffffcd1(%rip)
271c(4): nop 0x0(%rax)
2720(4): movzx (%r9),%ebx
2724(3): cmp $0x7e,%bl
2727(2): jnbe 0xffffff89(%rip)
2729(7): lea 0x2c58(%rip),%rcx
2730(3): movzx %bl,%edx
2733(4): movsxd 0x0(%rcx,%rdx,4),%rax
2737(3): add %rcx,%rax
273a(2): jmp %rax
273c(4): nop 0x0(%rax)
2740(3): xor %r10d,%r10d
2743(5): cmp $0x0,0xd(%rsp)
2748(6): jnz 0xfffffdf6(%rip)
274e(2): nop 
2750(5): mov $0x5c,%edx
2755(5): mov $0x5c,%ebx
275a(5): jmp 0xfffffd9a(%rip)
275f(1): nop 
2760(5): mov $0xc,%edx
2765(3): xor %r10d,%r10d
2768(5): mov $0x66,%ebx
276d(5): jmp 0xfffffd87(%rip)
2772(6): nop 0x0(%rax,%rax,1)
2778(5): mov $0xa,%edx
277d(3): xor %r10d,%r10d
2780(5): mov $0x6e,%ebx
2785(5): jmp 0xfffffd5d(%rip)
278a(6): nop 0x0(%rax,%rax,1)
2790(5): mov $0x61,%ebx
2795(5): jmp 0xfffffdcb(%rip)
279a(6): nop 0x0(%rax,%rax,1)
27a0(3): xor %r10d,%r10d
27a3(5): cmp $0x2,0x8(%rsp)
27a8(3): setz %dl
27ab(5): cmp $0x0,0xf(%rsp)
27b0(6): jnz 0xb9a(%rip)
27b6(3): mov %r8d,%eax
27b9(3): mov %r15,%rcx
27bc(3): xor $0x1,%eax
27bf(2): and %dl,%al
27c1(2): jz 0x2f(%rip)
27c3(3): cmp %r15,%r13
27c6(2): jbe 0x7(%rip)
27c8(5): mov $0x27,0x0(%r14,%r15,1)
27cd(4): lea 0x1(%r15),%rcx
27d1(3): cmp %rcx,%r13
27d4(2): jbe 0x8(%rip)
27d6(6): mov $0x24,0x1(%r14,%r15,1)
27dc(4): lea 0x2(%r15),%rcx
27e0(3): cmp %rcx,%r13
27e3(6): jnbe 0x636(%rip)
27e9(4): lea 0x3(%r15),%rcx
27ed(3): mov %eax,%r8d
27f0(3): cmp %rcx,%r13
27f3(2): jbe 0x7(%rip)
27f5(5): mov $0x5c,0x0(%r14,%rcx,1)
27fa(5): cmp $0x2,0x8(%rsp)
27ff(4): lea 0x1(%rcx),%r15
2803(6): jz 0x606(%rip)
2809(4): lea 0x1(%rbp),%rax
280d(3): cmp %r11,%rax
2810(2): jnb 0x1b(%rip)
2812(5): mov 0x10(%rsp),%rax
2817(5): movzx 0x1(%rax,%rbp,1),%eax
281c(4): mov %al,0x28(%rsp)
2820(3): sub $0x30,%eax
2823(2): cmp $0x9,%al
2825(6): jbe 0x834(%rip)
282b(3): mov %r12d,%eax
282e(5): mov $0x30,%ebx
2833(3): xor %r12d,%r12d
2836(5): jmp 0xfffffbb2(%rip)
283b(5): nop 0x0(%rax,%rax,1)
2840(5): cmp $0x2,0x8(%rsp)
2845(3): mov %r10d,%r12d
2848(3): setz %dl
284b(3): xor %r10d,%r10d
284e(2): xor %eax,%eax
2850(5): jmp 0xfffffb98(%rip)
2855(3): nop (%rax)
2858(5): cmp $0x2,0x8(%rsp)
285d(3): setz %dl
2860(3): xor %r10d,%r10d
2863(5): jmp 0xfffffdc5(%rip)
2868(8): nop 0x0(%rax,%rax,1)
2870(5): cmp $0x2,0x8(%rsp)
2875(3): setz %dl
2878(3): xor %r10d,%r10d
287b(3): xor %r12d,%r12d
287e(5): jmp 0xfffffdb3(%rip)
2883(5): nop 0x0(%rax,%rax,1)
2888(5): cmp $0x2,0x8(%rsp)
288d(3): mov %r10d,%r12d
2890(5): mov $0x20,%ebx
2895(3): setz %dl
2898(3): xor %r10d,%r10d
289b(5): jmp 0xfffffd96(%rip)
28a0(5): mov $0xd,%edx
28a5(3): xor %r10d,%r10d
28a8(5): mov $0x72,%ebx
28ad(5): jmp 0xfffffc35(%rip)
28b2(6): nop 0x0(%rax,%rax,1)
28b8(5): mov $0x76,%ebx
28bd(5): jmp 0xfffffca3(%rip)
28c2(6): nop 0x0(%rax,%rax,1)
28c8(5): mov $0x9,%edx
28cd(3): xor %r10d,%r10d
28d0(5): mov $0x74,%ebx
28d5(5): jmp 0xfffffc0d(%rip)
28da(6): nop 0x0(%rax,%rax,1)
28e0(5): mov $0x62,%ebx
28e5(5): jmp 0xfffffc7b(%rip)
28ea(6): nop 0x0(%rax,%rax,1)
28f0(3): xor %r10d,%r10d
28f3(5): jmp 0xfffffa9d(%rip)
28f8(8): nop 0x0(%rax,%rax,1)
2900(5): cmp $0x0,0xf(%rsp)
2905(6): jnz 0x96b(%rip)
290b(4): add $0x1,%rbp
290f(3): mov %r8d,%eax
2912(3): xor %r12d,%r12d
2915(5): mov $0x5c,%ebx
291a(5): jmp 0xfffffb12(%rip)
291f(1): nop 
2920(5): cmp $0x2,0x8(%rsp)
2925(5): movzx 0xf(%rsp),%ebx
292a(3): mov %r8d,%r12d
292d(3): mov %r11,%rbp
2930(3): setz %dl
2933(2): mov %ebx,%eax
2935(3): test %r15,%r15
2938(3): setz %cl
293b(2): and %edx,%eax
293d(2): and %cl,%al
293f(6): jnz 0xa67(%rip)
2945(2): mov %ebx,%eax
2947(3): xor $0x1,%eax
294a(2): and %al,%dl
294c(6): jz 0x970(%rip)
2952(5): cmp $0x0,0x7c(%rsp)
2957(6): jz 0x963(%rip)
295d(5): cmp $0x0,0xe(%rsp)
2962(6): jnz 0x9fb(%rip)
2968(3): test %r13,%r13
296b(3): setz %al
296e(6): cmp $0x0,0x50(%rsp)
2974(3): setnz %dl
2977(2): and %dl,%al
2979(6): jz 0xa23(%rip)
297f(5): mov 0x50(%rsp),%r13
2984(7): lea 0x2772(%rip),%rbx
298b(4): mov $0x27,(%r14)
298f(8): mov $0x2,0x8(%rsp)
2997(6): mov $0x1,%r15d
299d(9): mov $0x1,0x18(%rsp)
29a6(5): mov $0x0,0xf(%rsp)
29ab(5): mov %rbx,0x48(%rsp)
29b0(4): mov %al,0x7c(%rsp)
29b4(5): jmp 0xfffff8df(%rip)
29b9(7): nop 0x0(%rax)
29c0(5): cmp $0x0,0xf(%rsp)
29c5(6): jnz 0x8ab(%rip)
29cb(3): test %r13,%r13
29ce(6): jz 0x402(%rip)
29d4(2): xor %edx,%edx
29d6(6): cmp $0x0,0x50(%rsp)
29dc(6): jnz 0x3f4(%rip)
29e2(5): mov %r13,0x50(%rsp)
29e7(4): add $0x3,%r15
29eb(2): xor %eax,%eax
29ed(5): mov %r12b,0x7c(%rsp)
29f2(3): xor %r8d,%r8d
29f5(3): mov %rdx,%r13
29f8(5): mov $0x27,%ebx
29fd(5): jmp 0xfffffa1c(%rip)
2a02(6): nop 0x0(%rax,%rax,1)
2a08(5): test $0x4,0x78(%rsp)
2a0d(2): jz 0x23(%rip)
2a0f(4): lea 0x2(%rbp),%rcx
2a13(3): cmp %r11,%rcx
2a16(2): jnb 0x1a(%rip)
2a18(5): mov 0x10(%rsp),%rax
2a1d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2a22(6): jz 0x790(%rip)
2a28(8): nop 0x0(%rax,%rax,1)
2a30(2): xor %edx,%edx
2a32(3): xor %r12d,%r12d
2a35(2): xor %eax,%eax
2a37(5): mov $0x3f,%ebx
2a3c(5): jmp 0xfffff9ac(%rip)
2a41(7): nop 0x0(%rax)
2a48(5): cmp $0x0,0xf(%rsp)
2a4d(6): jnz 0x823(%rip)
2a53(3): xor %r12d,%r12d
2a56(2): xor %eax,%eax
2a58(5): mov $0x3f,%ebx
2a5d(5): jmp 0xfffff9bc(%rip)
2a62(6): nop 0x0(%rax,%rax,1)
2a68(8): lea 0xa0(%rsp),%rax
2a70(4): cmp $0xffffffff,%r11
2a74(c): mov $0x0,0xa0(%rsp)
2a80(5): mov %rax,0x28(%rsp)
2a85(2): jnz 0x2f(%rip)
2a87(5): mov 0x10(%rsp),%rdi
2a8c(5): mov %r8b,0x40(%rsp)
2a91(5): mov %r10b,0x38(%rsp)
2a96(5): mov %r9,0x30(%rsp)
2a9b(5): call 0xffffe8d5(%rip)
2aa0(6): movzx 0x40(%rsp),%r8d
2aa6(6): movzx 0x38(%rsp),%r10d
2aac(3): mov %rax,%r11
2aaf(5): mov 0x30(%rsp),%r9
2ab4(8): lea 0x9c(%rsp),%rax
2abc(2): xor %ecx,%ecx
2abe(4): mov %bl,0x7e(%rsp)
2ac2(5): mov %r8b,0x7d(%rsp)
2ac7(3): mov %rcx,%rbx
2aca(8): mov %r9,0x88(%rsp)
2ad2(5): mov %rax,0x38(%rsp)
2ad7(5): mov %r10b,0x7f(%rsp)
2adc(8): mov %r15,0x80(%rsp)
2ae4(5): mov %r14,0x40(%rsp)
2ae9(5): mov %r13,0x70(%rsp)
2aee(5): mov %r11,0x30(%rsp)
2af3(5): mov 0x10(%rsp),%rax
2af8(5): lea 0x0(%rbp,%rbx,1),%r14
2afd(5): mov 0x30(%rsp),%rdx
2b02(5): mov 0x28(%rsp),%rcx
2b07(5): mov 0x38(%rsp),%rdi
2b0c(4): lea 0x0(%rax,%r14,1),%r13
2b10(3): sub %r14,%rdx
2b13(3): mov %r13,%rsi
2b16(5): call 0x1c4a(%rip)
2b1b(3): test %rax,%rax
2b1e(3): mov %rax,%r15
2b21(2): jz 0x50(%rip)
2b23(4): cmp $0xffffffff,%rax
2b27(6): jz 0x61e(%rip)
2b2d(4): cmp $0xfffffffe,%rax
2b31(6): jz 0x5a0(%rip)
2b37(5): cmp $0x2,0x8(%rsp)
2b3c(3): setz %al
2b3f(4): and 0xf(%rsp),%al
2b43(6): jnz 0x19d(%rip)
2b49(7): mov 0x9c(%rsp),%edi
2b50(5): call 0xffffe9e0(%rip)
2b55(5): mov 0x28(%rsp),%rdi
2b5a(2): test %eax,%eax
2b5c(5): mov $0x0,%eax
2b61(4): cmove %eax,%r12d
2b65(3): add %r15,%rbx
2b68(5): call 0xffffe9b8(%rip)
2b6d(2): test %eax,%eax
2b6f(2): jz 0xffffff84(%rip)
2b71(3): mov %r12d,%edx
2b74(3): mov %rbx,%rdi
2b77(6): movzx 0x7d(%rsp),%r8d
2b7d(3): xor $0x1,%edx
2b80(5): movzx 0x7e(%rsp),%ebx
2b85(6): movzx 0x7f(%rsp),%r10d
2b8b(4): and 0xd(%rsp),%dl
2b8f(8): mov 0x80(%rsp),%r15
2b97(5): mov 0x40(%rsp),%r14
2b9c(5): mov 0x70(%rsp),%r13
2ba1(5): mov 0x30(%rsp),%r11
2ba6(4): cmp $0x1,%rdi
2baa(6): jbe 0x601(%rip)
2bb0(3): mov %rdi,%rcx
2bb3(2): xor %esi,%esi
2bb5(6): movzx 0xf(%rsp),%r9d
2bbb(3): add %rbp,%rcx
2bbe(5): mov 0x10(%rsp),%rdi
2bc3(5): jmp 0xbb(%rip)
2bc8(8): nop 0x0(%rax,%rax,1)
2bd0(5): cmp $0x2,0x8(%rsp)
2bd5(3): setz %al
2bd8(3): test %r9b,%r9b
2bdb(6): jnz 0x4b5(%rip)
2be1(3): mov %r8d,%esi
2be4(3): xor $0x1,%esi
2be7(3): and %sil,%al
2bea(2): jz 0x31(%rip)
2bec(3): cmp %r15,%r13
2bef(2): jbe 0x7(%rip)
2bf1(5): mov $0x27,0x0(%r14,%r15,1)
2bf6(4): lea 0x1(%r15),%rsi
2bfa(3): cmp %rsi,%r13
2bfd(2): jbe 0x8(%rip)
2bff(6): mov $0x24,0x1(%r14,%r15,1)
2c05(4): lea 0x2(%r15),%rsi
2c09(3): cmp %rsi,%r13
2c0c(2): jbe 0x8(%rip)
2c0e(6): mov $0x27,0x2(%r14,%r15,1)
2c14(4): add $0x3,%r15
2c18(3): mov %eax,%r8d
2c1b(3): cmp %r15,%r13
2c1e(2): jbe 0x7(%rip)
2c20(5): mov $0x5c,0x0(%r14,%r15,1)
2c25(4): lea 0x1(%r15),%rax
2c29(3): cmp %rax,%r13
2c2c(2): jbe 0xf(%rip)
2c2e(2): mov %ebx,%eax
2c30(3): shr $0x6,%al
2c33(3): add $0x30,%eax
2c36(5): mov %al,0x1(%r14,%r15,1)
2c3b(4): lea 0x2(%r15),%rax
2c3f(3): cmp %rax,%r13
2c42(2): jbe 0x12(%rip)
2c44(2): mov %ebx,%eax
2c46(3): shr $0x3,%al
2c49(3): and $0x7,%eax
2c4c(3): add $0x30,%eax
2c4f(5): mov %al,0x2(%r14,%r15,1)
2c54(3): and $0x7,%ebx
2c57(4): add $0x1,%rbp
2c5b(4): add $0x3,%r15
2c5f(3): add $0x30,%ebx
2c62(3): cmp %rcx,%rbp
2c65(6): jnb 0xfffff7eb(%rip)
2c6b(2): mov %edx,%esi
2c6d(3): cmp %r15,%r13
2c70(2): jbe 0x6(%rip)
2c72(4): mov %bl,0x0(%r14,%r15,1)
2c76(4): movzx 0x0(%rdi,%rbp,1),%ebx
2c7a(4): add $0x1,%r15
2c7e(2): test %dl,%dl
2c80(6): jnz 0xffffff50(%rip)
2c86(2): mov %esi,%eax
2c88(3): xor $0x1,%eax
2c8b(3): and %r8d,%eax
2c8e(3): test %r10b,%r10b
2c91(2): jz 0x10(%rip)
2c93(3): cmp %r15,%r13
2c96(2): jbe 0x7(%rip)
2c98(5): mov $0x5c,0x0(%r14,%r15,1)
2c9d(4): add $0x1,%r15
2ca1(4): add $0x1,%rbp
2ca5(3): cmp %rcx,%rbp
2ca8(6): jnb 0xfffff784(%rip)
2cae(2): test %al,%al
2cb0(6): jz 0x3fe(%rip)
2cb6(3): cmp %r15,%r13
2cb9(2): jbe 0x7(%rip)
2cbb(5): mov $0x27,0x0(%r14,%r15,1)
2cc0(4): lea 0x1(%r15),%rax
2cc4(3): cmp %rax,%r13
2cc7(2): jbe 0x8(%rip)
2cc9(6): mov $0x27,0x1(%r14,%r15,1)
2ccf(4): add $0x2,%r15
2cd3(3): xor %r10d,%r10d
2cd6(3): xor %r8d,%r8d
2cd9(2): jmp 0xffffff94(%rip)
2cdb(5): nop 0x0(%rax,%rax,1)
2ce0(4): cmp $0x1,%r15
2ce4(6): jz 0xfffffe65(%rip)
2cea(5): mov 0x10(%rsp),%rdi
2cef(4): lea 0x0(%rdi,%r15,1),%rcx
2cf3(5): lea 0x1(%rdi,%r14,1),%rdx
2cf8(4): lea 0x0(%rcx,%r14,1),%r8
2cfc(2): jmp 0x11(%rip)
2cfe(2): nop 
2d00(4): add $0x1,%rdx
2d04(3): cmp %rdx,%r8
2d07(6): jz 0xfffffe42(%rip)
2d0d(3): movzx (%rdx),%ecx
2d10(3): sub $0x5b,%ecx
2d13(3): cmp $0x21,%cl
2d16(2): jnbe 0xffffffea(%rip)
2d18(5): mov $0x1,%esi
2d1d(3): shl/sal %cl,%rsi
2d20(3): mov %rsi,%rcx
2d23(a): mov $0x8589934635,%rsi
2d2d(3): test %rsi,%rcx
2d30(2): jz 0xffffffd0(%rip)
2d32(5): mov 0x40(%rsp),%r14
2d37(5): mov 0x70(%rsp),%r13
2d3c(5): mov 0x30(%rsp),%rbp
2d41(8): mov $0x2,0x8(%rsp)
2d49(5): cmp $0x0,0xd(%rsp)
2d4e(2): jz 0x12(%rip)
2d50(2): test %al,%al
2d52(5): mov $0x4,%eax
2d57(5): cmove 0x8(%rsp),%eax
2d5c(4): mov %eax,0x8(%rsp)
2d60(4): sub $0x8,%rsp
2d64(3): mov %rbp,%rcx
2d67(3): mov %r13,%rsi
2d6a(4): push 0x68(%rsp)
2d6e(4): push 0x78(%rsp)
2d72(3): mov %r14,%rdi
2d75(2): push $0x0
2d77(8): mov 0x98(%rsp),%r9d
2d7f(5): mov 0x28(%rsp),%r8d
2d84(5): mov 0x30(%rsp),%rdx
2d89(4): and $0xfd,%r9d
2d8d(5): call 0xfffff433(%rip)
2d92(4): add $0x20,%rsp
2d96(3): mov %rax,%r15
2d99(8): mov 0xa8(%rsp),%rbx
2da1(9): xor $0x28,%rbx
2daa(3): mov %r15,%rax
2dad(6): jnz 0x606(%rip)
2db3(7): add $0xb8,%rsp
2dba(1): pop %rbx
2dbb(1): pop %rbp
2dbc(2): pop %r12
2dbe(2): pop %r13
2dc0(2): pop %r14
2dc2(2): pop %r15
2dc4(1): ret near (%rsp)
2dc5(3): nop (%rax)
2dc8(3): mov %r11,%rbp
2dcb(5): jmp 0xffffff7e(%rip)
2dd0(3): cmp %r15,%r13
2dd3(2): jbe 0x7(%rip)
2dd5(5): mov $0x27,0x0(%r14,%r15,1)
2dda(4): lea 0x1(%r15),%rax
2dde(3): cmp %rax,%r13
2de1(2): jbe 0x8(%rip)
2de3(6): mov $0x5c,0x1(%r14,%r15,1)
2de9(4): lea 0x2(%r15),%rax
2ded(3): cmp %rax,%r13
2df0(6): jbe 0x5f2(%rip)
2df6(3): mov %r13,%rdx
2df9(6): mov $0x27,0x2(%r14,%r15,1)
2dff(5): mov 0x50(%rsp),%r13
2e04(5): jmp 0xfffffbde(%rip)
2e09(3): mov %r12d,%eax
2e0c(5): mov $0x30,%ebx
2e11(3): xor %r12d,%r12d
2e14(5): jmp 0xfffff605(%rip)
2e19(6): mov $0x27,0x2(%r14,%r15,1)
2e1f(5): jmp 0xfffff9ca(%rip)
2e24(2): test %ebx,%ebx
2e26(6): jnz 0xfffff42d(%rip)
2e2c(5): mov $0x1,0xd(%rsp)
2e31(3): test %r13,%r13
2e34(6): jnz 0x596(%rip)
2e3a(7): lea 0x22bc(%rip),%rax
2e41(9): mov $0x0,0x50(%rsp)
2e4a(5): mov $0x1,0xe(%rsp)
2e4f(5): mov $0x0,0x7c(%rsp)
2e54(3): xor %r12d,%r12d
2e57(5): mov $0x0,0xf(%rsp)
2e5c(9): mov $0x1,0x18(%rsp)
2e65(5): mov %rax,0x48(%rsp)
2e6a(6): mov $0x1,%r15d
2e70(8): mov $0x2,0x8(%rsp)
2e78(5): jmp 0xfffff41b(%rip)
2e7d(3): nop (%rax)
2e80(2): test %ebx,%ebx
2e82(6): jnz 0x3fb(%rip)
2e88(3): test %r13,%r13
2e8b(6): jz 0x22b(%rip)
2e91(4): mov $0x22,(%r14)
2e95(5): mov $0x1,0xe(%rsp)
2e9a(3): xor %r12d,%r12d
2e9d(5): mov $0x0,0x7c(%rsp)
2ea2(9): mov $0x0,0x50(%rsp)
2eab(7): lea 0x2249(%rip),%rax
2eb2(5): mov $0x0,0xf(%rsp)
2eb7(5): mov $0x1,0xd(%rsp)
2ebc(9): mov $0x1,0x18(%rsp)
2ec5(6): mov $0x1,%r15d
2ecb(5): mov %rax,0x48(%rsp)
2ed0(5): jmp 0xfffff3c3(%rip)
2ed5(7): lea 0x221f(%rip),%rax
2edc(5): mov $0x1,0xe(%rsp)
2ee1(5): mov $0x0,0x7c(%rsp)
2ee6(3): xor %r12d,%r12d
2ee9(9): mov $0x0,0x50(%rsp)
2ef2(5): mov $0x1,0xf(%rsp)
2ef7(5): mov $0x1,0xd(%rsp)
2efc(9): mov $0x1,0x18(%rsp)
2f05(3): xor %r15d,%r15d
2f08(5): mov %rax,0x48(%rsp)
2f0d(8): mov $0x5,0x8(%rsp)
2f15(5): jmp 0xfffff37e(%rip)
2f1a(5): mov $0x1,0xe(%rsp)
2f1f(5): mov $0x0,0x7c(%rsp)
2f24(3): xor %r12d,%r12d
2f27(9): mov $0x0,0x50(%rsp)
2f30(5): mov $0x0,0xf(%rsp)
2f35(3): xor %r15d,%r15d
2f38(5): mov $0x1,0xd(%rsp)
2f3d(9): mov $0x0,0x18(%rsp)
2f46(9): mov $0x0,0x48(%rsp)
2f4f(5): jmp 0xfffff344(%rip)
2f54(5): cmp $0xa,0x8(%rsp)
2f59(2): jz 0x58(%rip)
2f5b(7): lea 0x219d(%rip),%rsi
2f62(2): xor %edi,%edi
2f64(5): mov $0x5,%edx
2f69(5): call 0xffffe3e7(%rip)
2f6e(3): mov %rax,%rcx
2f71(5): mov %rax,0x68(%rsp)
2f76(7): lea 0x2182(%rip),%rax
2f7d(3): cmp %rax,%rcx
2f80(6): jz 0x39e(%rip)
2f86(7): lea 0x2170(%rip),%rsi
2f8d(2): xor %edi,%edi
2f8f(5): mov $0x5,%edx
2f94(5): call 0xffffe3bc(%rip)
2f99(3): mov %rax,%rcx
2f9c(5): mov %rax,0x60(%rsp)
2fa1(7): lea 0x2155(%rip),%rax
2fa8(3): cmp %rax,%rcx
2fab(6): jz 0x389(%rip)
2fb1(3): xor %r15d,%r15d
2fb4(2): test %ebx,%ebx
2fb6(6): jz 0x1c7(%rip)
2fbc(2): test %ebx,%ebx
2fbe(5): mov 0x60(%rsp),%rbx
2fc3(5): setnz 0xf(%rsp)
2fc8(3): xor %r12d,%r12d
2fcb(3): mov %rbx,%rdi
2fce(5): call 0xffffe3a2(%rip)
2fd3(5): mov %rbx,0x48(%rsp)
2fd8(5): mov %rax,0x18(%rsp)
2fdd(5): mov $0x1,0xe(%rsp)
2fe2(5): mov $0x0,0x7c(%rsp)
2fe7(9): mov $0x0,0x50(%rsp)
2ff0(5): mov $0x1,0xd(%rsp)
2ff5(5): jmp 0xfffff29e(%rip)
2ffa(5): mov $0x1,0xe(%rsp)
2fff(5): mov $0x0,0x7c(%rsp)
3004(3): xor %r12d,%r12d
3007(9): mov $0x0,0x50(%rsp)
3010(5): mov $0x0,0xf(%rsp)
3015(3): xor %r15d,%r15d
3018(5): mov $0x0,0xd(%rsp)
301d(9): mov $0x0,0x18(%rsp)
3026(9): mov $0x0,0x48(%rsp)
302f(5): jmp 0xfffff264(%rip)
3034(5): mov $0x1,0xe(%rsp)
3039(5): mov $0x0,0x7c(%rsp)
303e(3): xor %r12d,%r12d
3041(9): mov $0x0,0x50(%rsp)
304a(5): mov $0x1,0xf(%rsp)
304f(5): mov $0x1,0xd(%rsp)
3054(5): jmp 0xfffff21f(%rip)
3059(3): cmp %r15,%r13
305c(2): jbe 0x7(%rip)
305e(5): mov $0x30,0x0(%r14,%r15,1)
3063(4): lea 0x2(%rcx),%rax
3067(3): cmp %rax,%r13
306a(2): jbe 0x8(%rip)
306c(6): mov $0x30,0x2(%r14,%rcx,1)
3072(3): mov %r12d,%eax
3075(4): lea 0x3(%rcx),%r15
3079(3): xor %r12d,%r12d
307c(5): mov $0x30,%ebx
3081(5): jmp 0xfffff367(%rip)
3086(a): nop 0x0(%rax,%rax,1)
3090(5): movzx 0xf(%rsp),%ebx
3095(3): mov %r11,%rbp
3098(4): mov %bl,0xd(%rsp)
309c(5): jmp 0xfffffcad(%rip)
30a1(5): movzx 0xd(%rsp),%edx
30a6(3): xor %r12d,%r12d
30a9(5): jmp 0xfffffb07(%rip)
30ae(3): xor %r10d,%r10d
30b1(5): jmp 0xfffffbbc(%rip)
30b6(9): mov $0x0,0x50(%rsp)
30bf(5): mov $0x1,0xe(%rsp)
30c4(3): xor %r12d,%r12d
30c7(5): mov $0x0,0x7c(%rsp)
30cc(5): jmp 0xfffffddf(%rip)
30d1(5): mov 0x30(%rsp),%r11
30d6(3): mov %r14,%rsi
30d9(3): mov %r13,%rcx
30dc(3): mov %rbx,%rax
30df(3): mov %rbx,%rdi
30e2(6): movzx 0x7d(%rsp),%r8d
30e8(5): movzx 0x7e(%rsp),%ebx
30ed(8): mov 0x88(%rsp),%r9
30f5(3): cmp %r11,%rsi
30f8(6): movzx 0x7f(%rsp),%r10d
30fe(8): mov 0x80(%rsp),%r15
3106(5): mov 0x40(%rsp),%r14
310b(5): mov 0x70(%rsp),%r13
3110(2): jnb 0x28(%rip)
3112(3): cmp $0x0,(%rcx)
3115(2): jnz 0x12(%rip)
3117(2): jmp 0x21(%rip)
3119(7): nop 0x0(%rax)
3120(5): cmp $0x0,0x0(%r9,%rax,1)
3125(2): jz 0x10(%rip)
3127(4): add $0x1,%rax
312b(5): lea 0x0(%rbp,%rax,1),%rdx
3130(3): cmp %rdx,%r11
3133(2): jnbe 0xffffffed(%rip)
3135(3): mov %rax,%rdi
3138(5): movzx 0xd(%rsp),%edx
313d(3): xor %r12d,%r12d
3140(5): jmp 0xfffffa66(%rip)
3145(3): mov %rbx,%rdi
3148(6): movzx 0x7d(%rsp),%r8d
314e(5): movzx 0x7e(%rsp),%ebx
3153(6): movzx 0x7f(%rsp),%r10d
3159(8): mov 0x80(%rsp),%r15
3161(3): xor %r12d,%r12d
3164(5): mov 0x40(%rsp),%r14
3169(5): mov 0x70(%rsp),%r13
316e(5): mov 0x30(%rsp),%r11
3173(5): movzx 0xd(%rsp),%edx
3178(5): jmp 0xfffffa2e(%rip)
317d(5): mov 0x68(%rsp),%rdx
3182(3): movzx (%rdx),%eax
3185(2): test %al,%al
3187(6): jz 0xfffffe35(%rip)
318d(3): nop (%rax)
3190(3): cmp %r15,%r13
3193(2): jbe 0x6(%rip)
3195(4): mov %al,0x0(%r14,%r15,1)
3199(4): add $0x1,%r15
319d(5): movzx 0x0(%rdx,%r15,1),%eax
31a2(2): test %al,%al
31a4(2): jnz 0xffffffec(%rip)
31a6(5): jmp 0xfffffe16(%rip)
31ab(2): mov %edx,%eax
31ad(5): jmp 0xfffff55a(%rip)
31b2(4): movzx 0x0(%rax,%rcx,1),%ebx
31b6(3): cmp $0x3e,%bl
31b9(6): jnbe 0xfffff877(%rip)
31bf(a): mov $0x8070630310989004800,%rax
31c9(4): bt %rbx,%rax
31cd(6): jnb 0xfffff863(%rip)
31d3(5): cmp $0x0,0xf(%rsp)
31d8(6): jnz 0x1ea(%rip)
31de(3): cmp %r15,%r13
31e1(2): jbe 0x7(%rip)
31e3(5): mov $0x3f,0x0(%r14,%r15,1)
31e8(4): lea 0x1(%r15),%rax
31ec(3): cmp %rax,%r13
31ef(2): jbe 0x8(%rip)
31f1(6): mov $0x22,0x1(%r14,%r15,1)
31f7(4): lea 0x2(%r15),%rax
31fb(3): cmp %rax,%r13
31fe(2): jbe 0x8(%rip)
3200(6): mov $0x22,0x2(%r14,%r15,1)
3206(4): lea 0x3(%r15),%rax
320a(3): cmp %rax,%r13
320d(2): jbe 0x8(%rip)
320f(6): mov $0x3f,0x3(%r14,%r15,1)
3215(4): add $0x4,%r15
3219(2): xor %edx,%edx
321b(3): xor %r12d,%r12d
321e(2): xor %eax,%eax
3220(3): mov %rcx,%rbp
3223(5): jmp 0xfffff1c5(%rip)
3228(2): test %ebx,%ebx
322a(6): jz 0x18e(%rip)
3230(7): lea 0x1ec6(%rip),%rax
3237(5): mov $0x1,0xe(%rsp)
323c(5): mov $0x0,0x7c(%rsp)
3241(3): xor %r12d,%r12d
3244(9): mov $0x0,0x50(%rsp)
324d(5): mov $0x1,0xf(%rsp)
3252(5): mov $0x0,0xd(%rsp)
3257(9): mov $0x1,0x18(%rsp)
3260(3): xor %r15d,%r15d
3263(5): mov %rax,0x48(%rsp)
3268(5): jmp 0xfffff02b(%rip)
326d(3): nop (%rax)
3270(3): mov %r11,%rbp
3273(5): movzx 0xf(%rsp),%eax
3278(5): jmp 0xfffffad1(%rip)
327d(7): lea 0x1e77(%rip),%rax
3284(5): mov $0x1,0xe(%rsp)
3289(5): mov $0x0,0x7c(%rsp)
328e(3): xor %r12d,%r12d
3291(9): mov $0x0,0x50(%rsp)
329a(5): mov $0x1,0xf(%rsp)
329f(5): mov $0x1,0xd(%rsp)
32a4(9): mov $0x1,0x18(%rsp)
32ad(3): xor %r15d,%r15d
32b0(5): mov %rax,0x48(%rsp)
32b5(5): jmp 0xffffefde(%rip)
32ba(2): mov %edx,%eax
32bc(5): mov 0x48(%rsp),%rbx
32c1(3): test %rbx,%rbx
32c4(2): jz 0x2e(%rip)
32c6(2): test %al,%al
32c8(2): jz 0x2a(%rip)
32ca(3): movzx (%rbx),%ecx
32cd(3): mov %rbx,%rax
32d0(2): test %cl,%cl
32d2(2): jz 0x20(%rip)
32d4(3): mov %r15,%rdx
32d7(3): sub %r15,%rax
32da(3): cmp %rdx,%r13
32dd(2): jbe 0x6(%rip)
32df(4): mov %cl,0x0(%r14,%rdx,1)
32e3(4): add $0x1,%rdx
32e7(4): movzx 0x0(%rax,%rdx,1),%ecx
32eb(2): test %cl,%cl
32ed(2): jnz 0xffffffed(%rip)
32ef(3): mov %rdx,%r15
32f2(3): cmp %r15,%r13
32f5(6): jbe 0xfffffaa4(%rip)
32fb(5): mov $0x0,0x0(%r14,%r15,1)
3300(5): jmp 0xfffffa99(%rip)
3305(5): cmp $0x2,0x8(%rsp)
330a(5): movzx 0xf(%rsp),%ebx
330f(3): mov %r11,%rbp
3312(3): setz %al
3315(4): mov %bl,0xd(%rsp)
3319(5): jmp 0xfffffa30(%rip)
331e(4): mov 0x8(%rsp),%esi
3322(3): mov %rcx,%rdi
3325(5): call 0xffffedab(%rip)
332a(5): mov %rax,0x68(%rsp)
332f(5): jmp 0xfffffc57(%rip)
3334(4): mov 0x8(%rsp),%esi
3338(3): mov %rcx,%rdi
333b(5): call 0xffffed95(%rip)
3340(5): mov %rax,0x60(%rsp)
3345(5): jmp 0xfffffc6c(%rip)
334a(5): movzx 0xf(%rsp),%ebx
334f(3): mov %r11,%rbp
3352(2): mov %edx,%eax
3354(4): mov %bl,0xd(%rsp)
3358(5): jmp 0xfffff9f1(%rip)
335d(4): sub $0x8,%rsp
3361(6): mov $0x5,%r8d
3367(3): mov %r11,%rcx
336a(4): push 0x68(%rsp)
336e(4): push 0x78(%rsp)
3372(3): mov %r14,%rdi
3375(4): push 0x38(%rsp)
3379(8): mov 0x98(%rsp),%r9d
3381(5): mov 0x30(%rsp),%rdx
3386(5): mov 0x70(%rsp),%rsi
338b(5): call 0xffffee35(%rip)
3390(4): add $0x20,%rsp
3394(3): mov %rax,%r15
3397(5): jmp 0xfffffa02(%rip)
339c(5): movzx 0x7c(%rsp),%eax
33a1(5): jmp 0xffffff1b(%rip)
33a6(8): mov $0x2,0x8(%rsp)
33ae(5): jmp 0xfffff99b(%rip)
33b3(5): call 0xffffdfcd(%rip)
33b8(5): mov $0x0,0xd(%rsp)
33bd(5): jmp 0xfffffa74(%rip)
33c2(3): mov %r11,%rbp
33c5(5): jmp 0xfffff99b(%rip)
33ca(5): mov $0x1,0xe(%rsp)
33cf(2): xor %eax,%eax
33d1(3): xor %r12d,%r12d
33d4(9): mov $0x0,0x50(%rsp)
33dd(5): jmp 0xfffff5a7(%rip)
33e2(3): mov %r13,%rdx
33e5(5): mov 0x50(%rsp),%r13
33ea(5): jmp 0xfffff5f8(%rip)
33ef(5): call 0xffffdec1(%rip)

"quotearg_n_options" :
3400(2): push %r15
3402(2): push %r14
3404(3): movsxd %edi,%r15
3407(2): push %r13
3409(2): push %r12
340b(3): mov %rdx,%r14
340e(1): push %rbp
340f(1): push %rbx
3410(3): mov %rcx,%rbp
3413(4): sub $0x28,%rsp
3417(5): mov %rsi,0x8(%rsp)
341c(5): call 0xffffdea4(%rip)
3421(3): mov %rax,%r13
3424(2): mov (%rax),%eax
3426(3): test %r15d,%r15d
3429(7): mov 0x203c30(%rip),%rbx
3430(4): mov %eax,0x18(%rsp)
3434(6): js 0x16d(%rip)
343a(7): cmp %r15d,0x203c17(%rip)
3441(2): jnle 0x64(%rip)
3443(7): cmp $0x7fffffff,%r15d
344a(6): jz 0x15c(%rip)
3450(4): lea 0x1(%r15),%r12d
3454(7): lea 0x203c15(%rip),%rax
345b(3): movsxd %r12d,%rsi
345e(4): shl/sal $0x4,%rsi
3462(3): cmp %rax,%rbx
3465(6): jz 0x11b(%rip)
346b(3): mov %rbx,%rdi
346e(5): call 0xf72(%rip)
3473(3): mov %rax,%rbx
3476(7): mov %rax,0x203be3(%rip)
347d(7): movsxd 0x203bd4(%rip),%rdi
3484(3): mov %r12d,%edx
3487(2): xor %esi,%esi
3489(2): sub %edi,%edx
348b(4): shl/sal $0x4,%rdi
348f(3): movsxd %edx,%rdx
3492(3): add %rbx,%rdi
3495(4): shl/sal $0x4,%rdx
3499(5): call 0xffffdf57(%rip)
349e(7): mov %r12d,0x203bb3(%rip)
34a5(3): mov 0x4(%rbp),%eax
34a8(4): shl/sal $0x4,%r15
34ac(4): sub $0x8,%rsp
34b0(3): add %r15,%rbx
34b3(4): lea 0x8(%rbp),%r15
34b7(4): mov 0x0(%rbp),%r8d
34bb(3): mov (%rbx),%r11
34be(4): mov 0x8(%rbx),%r12
34c2(3): mov %r14,%rcx
34c5(3): or $0x1,%eax
34c8(4): mov %eax,0x24(%rsp)
34cc(3): push 0x30(%rbp)
34cf(3): mov %eax,%r9d
34d2(3): push 0x28(%rbp)
34d5(2): push %r15
34d7(3): mov %r11,%rsi
34da(5): mov 0x28(%rsp),%rdx
34df(3): mov %r12,%rdi
34e2(5): mov %r11,0x30(%rsp)
34e7(5): call 0xffffecd9(%rip)
34ec(4): add $0x20,%rsp
34f0(5): mov 0x10(%rsp),%r11
34f5(3): cmp %rax,%r11
34f8(2): jnbe 0x69(%rip)
34fa(4): lea 0x1(%rax),%rsi
34fe(7): lea 0x203bfb(%rip),%rax
3505(3): cmp %rax,%r12
3508(3): mov %rsi,(%rbx)
350b(2): jz 0x14(%rip)
350d(3): mov %r12,%rdi
3510(5): mov %rsi,0x10(%rsp)
3515(5): call 0xffffdd8b(%rip)
351a(5): mov 0x10(%rsp),%rsi
351f(3): mov %rsi,%rdi
3522(5): mov %rsi,0x10(%rsp)
3527(5): call 0xe59(%rip)
352c(4): sub $0x8,%rsp
3530(4): mov %rax,0x8(%rbx)
3534(4): mov 0x0(%rbp),%r8d
3538(3): push 0x30(%rbp)
353b(3): push 0x28(%rbp)
353e(3): mov %r14,%rcx
3541(2): push %r15
3543(5): mov 0x3c(%rsp),%r9d
3548(3): mov %rax,%rdi
354b(5): mov 0x28(%rsp),%rdx
3550(5): mov 0x30(%rsp),%rsi
3555(3): mov %rax,%r12
3558(5): call 0xffffec68(%rip)
355d(4): add $0x20,%rsp
3561(4): mov 0x18(%rsp),%eax
3565(4): mov %eax,0x0(%r13)
3569(4): add $0x28,%rsp
356d(3): mov %r12,%rax
3570(1): pop %rbx
3571(1): pop %rbp
3572(2): pop %r12
3574(2): pop %r13
3576(2): pop %r14
3578(2): pop %r15
357a(1): ret near (%rsp)
357b(5): nop 0x0(%rax,%rax,1)
3580(2): xor %edi,%edi
3582(5): call 0xe5e(%rip)
3587(8): movdqa 0x203ae1(%rip),%xmm0
358f(3): mov %rax,%rbx
3592(7): mov %rax,0x203ac7(%rip)
3599(3): movups %xmm0,(%rax)
359c(5): jmp 0xfffffee1(%rip)
35a1(5): call 0xffffdd0f(%rip)
35a6(5): call 0x102a(%rip)

"clone_quoting_options" :
35b0(2): push %r12
35b2(1): push %rbp
35b3(1): push %rbx
35b4(3): mov %rdi,%rbx
35b7(5): call 0xffffdd09(%rip)
35bc(3): mov (%rax),%r12d
35bf(3): mov %rax,%rbp
35c2(7): lea 0x203c37(%rip),%rax
35c9(3): test %rbx,%rbx
35cc(5): mov $0x38,%esi
35d1(4): cmove %rax,%rbx
35d5(3): mov %rbx,%rdi
35d8(5): call 0xfa8(%rip)
35dd(4): mov %r12d,0x0(%rbp)
35e1(1): pop %rbx
35e2(1): pop %rbp
35e3(2): pop %r12
35e5(1): ret near (%rsp)

"get_quoting_style" :
35f0(7): lea 0x203c09(%rip),%rax
35f7(3): test %rdi,%rdi
35fa(4): cmove %rax,%rdi
35fe(2): mov (%rdi),%eax
3600(1): ret near (%rsp)

"set_quoting_style" :
3610(7): lea 0x203be9(%rip),%rax
3617(3): test %rdi,%rdi
361a(4): cmove %rax,%rdi
361e(2): mov %esi,(%rdi)
3620(1): ret near (%rsp)

"set_char_quoting" :
3630(7): lea 0x203bc9(%rip),%rax
3637(3): test %rdi,%rdi
363a(2): mov %esi,%ecx
363c(4): cmove %rax,%rdi
3640(2): mov %esi,%eax
3642(3): and $0x1f,%ecx
3645(3): shr $0x5,%al
3648(3): movzx %al,%eax
364b(5): lea 0x8(%rdi,%rax,4),%rdi
3650(2): mov (%rdi),%esi
3652(2): mov %esi,%eax
3654(2): shr %cl,%eax
3656(2): xor %eax,%edx
3658(3): and $0x1,%eax
365b(3): and $0x1,%edx
365e(2): shl/sal %cl,%edx
3660(2): xor %esi,%edx
3662(2): mov %edx,(%rdi)
3664(1): ret near (%rsp)

"set_quoting_flags" :
3670(7): lea 0x203b89(%rip),%rax
3677(3): test %rdi,%rdi
367a(4): cmove %rax,%rdi
367e(3): mov 0x4(%rdi),%eax
3681(3): mov %esi,0x4(%rdi)
3684(1): ret near (%rsp)

"set_custom_quoting" :
3690(7): lea 0x203b69(%rip),%rax
3697(3): test %rdi,%rdi
369a(4): cmove %rax,%rdi
369e(3): test %rsi,%rsi
36a1(6): mov $0xa,(%rdi)
36a7(2): jz 0x10(%rip)
36a9(3): test %rdx,%rdx
36ac(2): jz 0xb(%rip)
36ae(4): mov %rsi,0x28(%rdi)
36b2(4): mov %rdx,0x30(%rdi)
36b6(1): ret near (%rsp)
36b7(4): sub $0x8,%rsp
36bb(5): call 0xffffdbf5(%rip)

"quotearg_buffer" :
36c0(2): push %r15
36c2(2): push %r14
36c4(7): lea 0x203b35(%rip),%rax
36cb(2): push %r13
36cd(2): push %r12
36cf(3): mov %rdi,%r13
36d2(1): push %rbp
36d3(1): push %rbx
36d4(3): mov %r8,%rbx
36d7(3): mov %rsi,%r14
36da(3): mov %rdx,%r15
36dd(4): sub $0x18,%rsp
36e1(3): test %r8,%r8
36e4(4): cmove %rax,%rbx
36e8(5): mov %rcx,0x8(%rsp)
36ed(5): call 0xffffdbd3(%rip)
36f2(3): mov (%rax),%r12d
36f5(3): mov %rax,%rbp
36f8(4): lea 0x8(%rbx),%rax
36fc(4): sub $0x8,%rsp
3700(4): mov 0x4(%rbx),%r9d
3704(3): push 0x30(%rbx)
3707(3): mov (%rbx),%r8d
370a(3): push 0x28(%rbx)
370d(3): mov %r15,%rdx
3710(1): push %rax
3711(5): mov 0x28(%rsp),%rcx
3716(3): mov %r14,%rsi
3719(3): mov %r13,%rdi
371c(5): call 0xffffeaa4(%rip)
3721(4): mov %r12d,0x0(%rbp)
3725(4): add $0x38,%rsp
3729(1): pop %rbx
372a(1): pop %rbp
372b(2): pop %r12
372d(2): pop %r13
372f(2): pop %r14
3731(2): pop %r15
3733(1): ret near (%rsp)

"quotearg_alloc_mem" :
3740(2): push %r15
3742(2): push %r14
3744(7): lea 0x203ab5(%rip),%rax
374b(2): push %r13
374d(2): push %r12
374f(3): mov %rdx,%r12
3752(1): push %rbp
3753(1): push %rbx
3754(3): mov %rcx,%rbx
3757(3): mov %rdi,%r14
375a(3): mov %rsi,%r15
375d(4): sub $0x38,%rsp
3761(3): test %rcx,%rcx
3764(4): cmove %rax,%rbx
3768(2): xor %ebp,%ebp
376a(5): call 0xffffdb56(%rip)
376f(3): test %r12,%r12
3772(3): mov %rax,%r13
3775(2): mov (%rax),%eax
3777(4): setz %bpl
377b(3): or 0x4(%rbx),%ebp
377e(4): lea 0x8(%rbx),%r10
3782(4): sub $0x8,%rsp
3786(3): mov (%rbx),%r8d
3789(3): mov %r15,%rcx
378c(4): mov %eax,0x14(%rsp)
3790(3): push 0x30(%rbx)
3793(3): mov %r14,%rdx
3796(3): push 0x28(%rbx)
3799(2): push %r10
379b(2): xor %esi,%esi
379d(3): mov %ebp,%r9d
37a0(2): xor %edi,%edi
37a2(5): mov %r10,0x40(%rsp)
37a7(5): call 0xffffea19(%rip)
37ac(4): lea 0x1(%rax),%rsi
37b0(5): mov %rax,0x48(%rsp)
37b5(4): add $0x20,%rsp
37b9(3): mov %rsi,%rdi
37bc(5): mov %rsi,0x18(%rsp)
37c1(5): call 0xbbf(%rip)
37c6(5): mov %rax,0x10(%rsp)
37cb(4): sub $0x8,%rsp
37cf(3): push 0x30(%rbx)
37d2(3): push 0x28(%rbx)
37d5(5): mov 0x38(%rsp),%r10
37da(3): mov %ebp,%r9d
37dd(3): mov (%rbx),%r8d
37e0(3): mov %r15,%rcx
37e3(3): mov %r14,%rdx
37e6(3): mov %rax,%rdi
37e9(2): push %r10
37eb(5): mov 0x38(%rsp),%rsi
37f0(5): call 0xffffe9d0(%rip)
37f5(4): mov 0x2c(%rsp),%eax
37f9(4): add $0x20,%rsp
37fd(3): test %r12,%r12
3800(4): mov %eax,0x0(%r13)
3804(2): jz 0xb(%rip)
3806(5): mov 0x28(%rsp),%r11
380b(4): mov %r11,(%r12)
380f(5): mov 0x10(%rsp),%rax
3814(4): add $0x38,%rsp
3818(1): pop %rbx
3819(1): pop %rbp
381a(2): pop %r12
381c(2): pop %r13
381e(2): pop %r14
3820(2): pop %r15
3822(1): ret near (%rsp)

"quotearg_alloc" :
3830(3): mov %rdx,%rcx
3833(2): xor %edx,%edx
3835(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3840(6): mov 0x203812(%rip),%eax
3846(2): push %r12
3848(7): mov 0x203811(%rip),%r12
384f(1): push %rbp
3850(1): push %rbx
3851(3): cmp $0x1,%eax
3854(2): jle 0x2d(%rip)
3856(3): sub $0x2,%eax
3859(5): lea 0x18(%r12),%rbx
385e(4): shl/sal $0x4,%rax
3862(5): lea 0x28(%r12,%rax,1),%rbp
3867(9): nop 0x0(%rax,%rax,1)
3870(3): mov (%rbx),%rdi
3873(4): add $0x10,%rbx
3877(5): call 0xffffda29(%rip)
387c(3): cmp %rbp,%rbx
387f(2): jnz 0xfffffff1(%rip)
3881(5): mov 0x8(%r12),%rdi
3886(7): lea 0x203873(%rip),%rbx
388d(3): cmp %rbx,%rdi
3890(2): jz 0x19(%rip)
3892(5): call 0xffffda0e(%rip)
3897(b): mov $0x100,0x2037ce(%rip)
38a2(7): mov %rbx,0x2037cf(%rip)
38a9(7): lea 0x2037c0(%rip),%rbx
38b0(3): cmp %rbx,%r12
38b3(2): jz 0x11(%rip)
38b5(3): mov %r12,%rdi
38b8(5): call 0xffffd9e8(%rip)
38bd(7): mov %rbx,0x20379c(%rip)
38c4(1): pop %rbx
38c5(a): mov $0x1,0x203789(%rip)
38cf(1): pop %rbp
38d0(2): pop %r12
38d2(1): ret near (%rsp)

"quotearg_n" :
38e0(7): lea 0x203919(%rip),%rcx
38e7(7): mov $0xffffffff,%rdx
38ee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3900(7): lea 0x2038f9(%rip),%rcx
3907(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3910(7): lea 0x2038e9(%rip),%rcx
3917(3): mov %rdi,%rsi
391a(7): mov $0xffffffff,%rdx
3921(2): xor %edi,%edi
3923(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3930(7): lea 0x2038c9(%rip),%rcx
3937(3): mov %rsi,%rdx
393a(3): mov %rdi,%rsi
393d(2): xor %edi,%edi
393f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3950(4): sub $0x48,%rsp
3954(3): mov %rdx,%rax
3957(9): mov $0x28,%rdx
3960(5): mov %rdx,0x38(%rsp)
3965(2): xor %edx,%edx
3967(3): cmp $0xa,%esi
396a(2): jz 0x6a(%rip)
396c(3): mov %esi,(%rsp)
396f(3): mov %rsp,%rcx
3972(7): mov $0xffffffff,%rdx
3979(3): mov %rax,%rsi
397c(9): mov $0x0,0x4(%rsp)
3985(9): mov $0x0,0xc(%rsp)
398e(9): mov $0x0,0x14(%rsp)
3997(9): mov $0x0,0x1c(%rsp)
39a0(9): mov $0x0,0x24(%rsp)
39a9(9): mov $0x0,0x2c(%rsp)
39b2(8): mov $0x0,0x34(%rsp)
39ba(5): call 0xfffffa46(%rip)
39bf(5): mov 0x38(%rsp),%rcx
39c4(9): xor $0x28,%rcx
39cd(2): jnz 0xc(%rip)
39cf(4): add $0x48,%rsp
39d3(1): ret near (%rsp)
39d4(5): call 0xffffd8dc(%rip)
39d9(5): call 0xffffd9a7(%rip)

"quotearg_n_style_mem" :
39e0(4): sub $0x48,%rsp
39e4(3): mov %rdx,%rax
39e7(3): mov %rcx,%rdx
39ea(9): mov $0x28,%rcx
39f3(5): mov %rcx,0x38(%rsp)
39f8(2): xor %ecx,%ecx
39fa(3): cmp $0xa,%esi
39fd(2): jz 0x63(%rip)
39ff(3): mov %esi,(%rsp)
3a02(3): mov %rsp,%rcx
3a05(3): mov %rax,%rsi
3a08(9): mov $0x0,0x4(%rsp)
3a11(9): mov $0x0,0xc(%rsp)
3a1a(9): mov $0x0,0x14(%rsp)
3a23(9): mov $0x0,0x1c(%rsp)
3a2c(9): mov $0x0,0x24(%rsp)
3a35(9): mov $0x0,0x2c(%rsp)
3a3e(8): mov $0x0,0x34(%rsp)
3a46(5): call 0xfffff9ba(%rip)
3a4b(5): mov 0x38(%rsp),%rdx
3a50(9): xor $0x28,%rdx
3a59(2): jnz 0xc(%rip)
3a5b(4): add $0x48,%rsp
3a5f(1): ret near (%rsp)
3a60(5): call 0xffffd850(%rip)
3a65(5): call 0xffffd91b(%rip)

"quotearg_style" :
3a70(3): mov %rsi,%rdx
3a73(2): mov %edi,%esi
3a75(2): xor %edi,%edi
3a77(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3a80(3): mov %rdx,%rcx
3a83(3): mov %rsi,%rdx
3a86(2): mov %edi,%esi
3a88(2): xor %edi,%edi
3a8a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3a90(4): sub $0x48,%rsp
3a94(2): mov %edx,%ecx
3a96(9): mov $0x28,%rax
3a9f(5): mov %rax,0x38(%rsp)
3aa4(2): xor %eax,%eax
3aa6(7): mov 0x203783(%rip),%rax
3aad(3): mov %rsp,%r8
3ab0(3): and $0x1f,%ecx
3ab3(8): movdqa 0x203745(%rip),%xmm0
3abb(5): mov %rax,0x30(%rsp)
3ac0(2): mov %edx,%eax
3ac2(4): movaps %xmm0,(%rsp)
3ac6(3): shr $0x5,%al
3ac9(3): movzx %al,%eax
3acc(5): lea 0x8(%r8,%rax,4),%r9
3ad1(8): movdqa 0x203737(%rip),%xmm0
3ad9(5): movaps %xmm0,0x10(%rsp)
3ade(8): movdqa 0x20373a(%rip),%xmm0
3ae6(5): movaps %xmm0,0x20(%rsp)
3aeb(3): mov (%r9),%edx
3aee(2): mov %edx,%eax
3af0(2): shr %cl,%eax
3af2(2): not %eax
3af4(3): and $0x1,%eax
3af7(2): shl/sal %cl,%eax
3af9(3): mov %r8,%rcx
3afc(2): xor %edx,%eax
3afe(3): mov %rsi,%rdx
3b01(3): mov %rdi,%rsi
3b04(3): mov %eax,(%r9)
3b07(2): xor %edi,%edi
3b09(5): call 0xfffff8f7(%rip)
3b0e(5): mov 0x38(%rsp),%rsi
3b13(9): xor $0x28,%rsi
3b1c(2): jnz 0x7(%rip)
3b1e(4): add $0x48,%rsp
3b22(1): ret near (%rsp)
3b23(5): call 0xffffd85d(%rip)

"quotearg_char" :
3b30(4): movsx %sil,%edx
3b34(7): mov $0xffffffff,%rsi
3b3b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3b40(5): mov $0x3a,%edx
3b45(7): mov $0xffffffff,%rsi
3b4c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3b60(5): mov $0x3a,%edx
3b65(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3b70(4): sub $0x48,%rsp
3b74(3): mov %rdx,%rax
3b77(9): mov $0x28,%rdx
3b80(5): mov %rdx,0x38(%rsp)
3b85(2): xor %edx,%edx
3b87(3): cmp $0xa,%esi
3b8a(2): jz 0x6a(%rip)
3b8c(3): mov %esi,(%rsp)
3b8f(3): mov %rsp,%rcx
3b92(7): mov $0xffffffff,%rdx
3b99(3): mov %rax,%rsi
3b9c(9): mov $0x0,0x4(%rsp)
3ba5(9): mov $0x4000000,0xc(%rsp)
3bae(9): mov $0x0,0x14(%rsp)
3bb7(9): mov $0x0,0x1c(%rsp)
3bc0(9): mov $0x0,0x24(%rsp)
3bc9(9): mov $0x0,0x2c(%rsp)
3bd2(8): mov $0x0,0x34(%rsp)
3bda(5): call 0xfffff826(%rip)
3bdf(5): mov 0x38(%rsp),%rcx
3be4(9): xor $0x28,%rcx
3bed(2): jnz 0xc(%rip)
3bef(4): add $0x48,%rsp
3bf3(1): ret near (%rsp)
3bf4(5): call 0xffffd6bc(%rip)
3bf9(5): call 0xffffd787(%rip)

"quotearg_n_custom_mem" :
3c00(4): sub $0x48,%rsp
3c04(3): mov %rcx,%r9
3c07(7): mov 0x203622(%rip),%rcx
3c0e(8): movdqa 0x2035ea(%rip),%xmm0
3c16(9): mov $0x28,%rax
3c1f(5): mov %rax,0x38(%rsp)
3c24(2): xor %eax,%eax
3c26(4): movaps %xmm0,(%rsp)
3c2a(3): test %rsi,%rsi
3c2d(5): mov %rcx,0x30(%rsp)
3c32(7): mov $0xa,(%rsp)
3c39(8): movdqa 0x2035cf(%rip),%xmm0
3c41(5): movaps %xmm0,0x10(%rsp)
3c46(8): movdqa 0x2035d2(%rip),%xmm0
3c4e(5): movaps %xmm0,0x20(%rsp)
3c53(2): jz 0x34(%rip)
3c55(3): test %rdx,%rdx
3c58(2): jz 0x2f(%rip)
3c5a(5): mov %rsi,0x28(%rsp)
3c5f(5): mov %rdx,0x30(%rsp)
3c64(3): mov %rsp,%rcx
3c67(3): mov %r8,%rdx
3c6a(3): mov %r9,%rsi
3c6d(5): call 0xfffff793(%rip)
3c72(5): mov 0x38(%rsp),%rdi
3c77(9): xor $0x28,%rdi
3c80(2): jnz 0xc(%rip)
3c82(4): add $0x48,%rsp
3c86(1): ret near (%rsp)
3c87(5): call 0xffffd629(%rip)
3c8c(5): call 0xffffd6f4(%rip)

"quotearg_n_custom" :
3ca0(7): mov $0xffffffff,%r8
3ca7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3cb0(3): mov %rdx,%rcx
3cb3(7): mov $0xffffffff,%r8
3cba(3): mov %rsi,%rdx
3cbd(3): mov %rdi,%rsi
3cc0(2): xor %edi,%edi
3cc2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3cd0(3): mov %rcx,%r8
3cd3(3): mov %rdx,%rcx
3cd6(3): mov %rsi,%rdx
3cd9(3): mov %rdi,%rsi
3cdc(2): xor %edi,%edi
3cde(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3cf0(7): lea 0x203329(%rip),%rcx
3cf7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3d00(7): lea 0x203319(%rip),%rcx
3d07(3): mov %rsi,%rdx
3d0a(3): mov %rdi,%rsi
3d0d(2): xor %edi,%edi
3d0f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3d20(7): lea 0x2032f9(%rip),%rcx
3d27(7): mov $0xffffffff,%rdx
3d2e(5): jmp 0xfffff6d2(%rip)

"quote" :
3d40(7): lea 0x2032d9(%rip),%rcx
3d47(3): mov %rdi,%rsi
3d4a(7): mov $0xffffffff,%rdx
3d51(2): xor %edi,%edi
3d53(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3d60(2): push %r15
3d62(2): push %r14
3d64(2): push %r13
3d66(2): push %r12
3d68(3): mov %r9,%r12
3d6b(1): push %rbp
3d6c(1): push %rbx
3d6d(3): mov %rdi,%rbp
3d70(3): mov %r8,%rbx
3d73(4): sub $0x28,%rsp
3d77(3): test %rsi,%rsi
3d7a(6): jz 0x11e(%rip)
3d80(3): mov %rdx,%r8
3d83(7): lea 0x183e(%rip),%rdx
3d8a(3): mov %rcx,%r9
3d8d(2): xor %eax,%eax
3d8f(3): mov %rsi,%rcx
3d92(5): mov $0x1,%esi
3d97(5): call 0xffffd779(%rip)
3d9c(7): lea 0x1838(%rip),%rsi
3da3(2): xor %edi,%edi
3da5(5): mov $0x5,%edx
3daa(5): call 0xffffd5a6(%rip)
3daf(7): lea 0x1b4a(%rip),%rdx
3db6(3): mov %rax,%rcx
3db9(6): mov $0x7e3,%r8d
3dbf(5): mov $0x1,%esi
3dc4(3): mov %rbp,%rdi
3dc7(2): xor %eax,%eax
3dc9(5): call 0xffffd747(%rip)
3dce(7): lea 0x1893(%rip),%rsi
3dd5(2): xor %edi,%edi
3dd7(5): mov $0x5,%edx
3ddc(5): call 0xffffd574(%rip)
3de1(3): mov %rbp,%rsi
3de4(3): mov %rax,%rdi
3de7(5): call 0xffffd629(%rip)
3dec(4): cmp $0x9,%r12
3df0(6): jnbe 0x340(%rip)
3df6(7): lea 0x1acb(%rip),%rdx
3dfd(4): movsxd 0x0(%rdx,%r12,4),%rax
3e01(3): add %rdx,%rax
3e04(2): jmp %rax
3e06(a): nop 0x0(%rax,%rax,1)
3e10(4): mov 0x38(%rbx),%r9
3e14(4): mov 0x10(%rbx),%rax
3e18(7): lea 0x19b9(%rip),%rsi
3e1f(4): mov 0x8(%rbx),%r8
3e23(5): mov $0x5,%edx
3e28(2): xor %edi,%edi
3e2a(4): mov 0x30(%rbx),%r13
3e2e(4): mov 0x28(%rbx),%r12
3e32(5): mov %r9,0x10(%rsp)
3e37(4): mov 0x20(%rbx),%r15
3e3b(4): mov 0x18(%rbx),%r14
3e3f(4): mov %rax,(%rsp)
3e43(5): mov %r8,0x8(%rsp)
3e48(3): mov (%rbx),%rbx
3e4b(5): call 0xffffd505(%rip)
3e50(4): sub $0x8,%rsp
3e54(5): mov 0x18(%rsp),%r9
3e59(3): mov %rax,%rdx
3e5c(3): mov %rbx,%rcx
3e5f(5): mov $0x1,%esi
3e64(3): mov %rbp,%rdi
3e67(2): xor %eax,%eax
3e69(2): push %r9
3e6b(2): push %r13
3e6d(2): push %r12
3e6f(2): push %r15
3e71(2): push %r14
3e73(5): mov 0x30(%rsp),%r9
3e78(5): mov 0x38(%rsp),%r8
3e7d(5): call 0xffffd693(%rip)
3e82(4): add $0x30,%rsp
3e86(4): add $0x28,%rsp
3e8a(1): pop %rbx
3e8b(1): pop %rbp
3e8c(2): pop %r12
3e8e(2): pop %r13
3e90(2): pop %r14
3e92(2): pop %r15
3e94(1): ret near (%rsp)
3e95(3): nop (%rax)
3e98(3): mov %rcx,%r8
3e9b(3): mov %rdx,%rcx
3e9e(7): lea 0x172f(%rip),%rdx
3ea5(5): mov $0x1,%esi
3eaa(2): xor %eax,%eax
3eac(5): call 0xffffd664(%rip)
3eb1(5): jmp 0xfffffeeb(%rip)
3eb6(a): nop 0x0(%rax,%rax,1)
3ec0(4): mov 0x40(%rbx),%r10
3ec4(4): mov 0x38(%rbx),%r9
3ec8(7): lea 0x1939(%rip),%rsi
3ecf(4): mov 0x10(%rbx),%rax
3ed3(4): mov 0x8(%rbx),%r8
3ed7(5): mov $0x5,%edx
3edc(4): mov 0x30(%rbx),%r13
3ee0(4): mov 0x28(%rbx),%r12
3ee4(4): mov 0x20(%rbx),%r15
3ee8(4): mov 0x18(%rbx),%r14
3eec(3): mov (%rbx),%rbx
3eef(5): mov %r10,0x18(%rsp)
3ef4(5): mov %r9,0x10(%rsp)
3ef9(4): mov %rax,(%rsp)
3efd(5): mov %r8,0x8(%rsp)
3f02(2): xor %edi,%edi
3f04(5): call 0xffffd44c(%rip)
3f09(5): mov 0x18(%rsp),%r10
3f0e(2): push %r10
3f10(5): jmp 0xffffff44(%rip)
3f15(3): nop (%rax)
3f18(3): mov (%rbx),%rbx
3f1b(7): lea 0x16bd(%rip),%rsi
3f22(5): mov $0x5,%edx
3f27(2): xor %edi,%edi
3f29(5): call 0xffffd427(%rip)
3f2e(4): add $0x28,%rsp
3f32(3): mov %rbx,%rcx
3f35(3): mov %rbp,%rdi
3f38(1): pop %rbx
3f39(1): pop %rbp
3f3a(2): pop %r12
3f3c(2): pop %r13
3f3e(2): pop %r14
3f40(2): pop %r15
3f42(3): mov %rax,%rdx
3f45(5): mov $0x1,%esi
3f4a(2): xor %eax,%eax
3f4c(5): jmp 0xffffd5c4(%rip)
3f51(7): nop 0x0(%rax)
3f58(4): mov 0x8(%rbx),%r12
3f5c(7): lea 0x168c(%rip),%rsi
3f63(3): mov (%rbx),%rbx
3f66(5): mov $0x5,%edx
3f6b(2): xor %edi,%edi
3f6d(5): call 0xffffd3e3(%rip)
3f72(4): add $0x28,%rsp
3f76(3): mov %r12,%r8
3f79(3): mov %rbx,%rcx
3f7c(3): mov %rbp,%rdi
3f7f(3): mov %rax,%rdx
3f82(5): mov $0x1,%esi
3f87(1): pop %rbx
3f88(1): pop %rbp
3f89(2): pop %r12
3f8b(2): pop %r13
3f8d(2): pop %r14
3f8f(2): pop %r15
3f91(2): xor %eax,%eax
3f93(5): jmp 0xffffd57d(%rip)
3f98(8): nop 0x0(%rax,%rax,1)
3fa0(4): mov 0x10(%rbx),%r13
3fa4(4): mov 0x8(%rbx),%r12
3fa8(7): lea 0x1657(%rip),%rsi
3faf(3): mov (%rbx),%rbx
3fb2(5): mov $0x5,%edx
3fb7(2): xor %edi,%edi
3fb9(5): call 0xffffd397(%rip)
3fbe(4): add $0x28,%rsp
3fc2(3): mov %r13,%r9
3fc5(3): mov %r12,%r8
3fc8(3): mov %rbx,%rcx
3fcb(3): mov %rbp,%rdi
3fce(3): mov %rax,%rdx
3fd1(1): pop %rbx
3fd2(1): pop %rbp
3fd3(2): pop %r12
3fd5(2): pop %r13
3fd7(2): pop %r14
3fd9(2): pop %r15
3fdb(5): mov $0x1,%esi
3fe0(2): xor %eax,%eax
3fe2(5): jmp 0xffffd52e(%rip)
3fe7(9): nop 0x0(%rax,%rax,1)
3ff0(7): lea 0x1741(%rip),%rsi
3ff7(5): mov $0x5,%edx
3ffc(2): xor %edi,%edi
3ffe(4): mov 0x18(%rbx),%r14
4002(4): mov 0x10(%rbx),%r13
4006(4): mov 0x8(%rbx),%r12
400a(3): mov (%rbx),%rbx
400d(5): call 0xffffd343(%rip)
4012(4): sub $0x8,%rsp
4016(2): push %r14
4018(3): mov %rax,%rdx
401b(3): mov %r13,%r9
401e(3): mov %r12,%r8
4021(3): mov %rbx,%rcx
4024(3): mov %rbp,%rdi
4027(5): mov $0x1,%esi
402c(2): xor %eax,%eax
402e(5): call 0xffffd4e2(%rip)
4033(1): pop %rax
4034(1): pop %rdx
4035(4): add $0x28,%rsp
4039(1): pop %rbx
403a(1): pop %rbp
403b(2): pop %r12
403d(2): pop %r13
403f(2): pop %r14
4041(2): pop %r15
4043(1): ret near (%rsp)
4044(4): nop 0x0(%rax)
4048(4): mov 0x20(%rbx),%r15
404c(7): lea 0x1705(%rip),%rsi
4053(5): mov $0x5,%edx
4058(2): xor %edi,%edi
405a(4): mov 0x18(%rbx),%r14
405e(4): mov 0x10(%rbx),%r13
4062(4): mov 0x8(%rbx),%r12
4066(3): mov (%rbx),%rbx
4069(5): call 0xffffd2e7(%rip)
406e(2): push %r15
4070(2): jmp 0xffffffa6(%rip)
4072(6): nop 0x0(%rax,%rax,1)
4078(4): mov 0x8(%rbx),%r8
407c(4): mov 0x28(%rbx),%r12
4080(7): lea 0x16f9(%rip),%rsi
4087(4): mov 0x20(%rbx),%r15
408b(4): mov 0x18(%rbx),%r14
408f(5): mov $0x5,%edx
4094(4): mov 0x10(%rbx),%r13
4098(2): xor %edi,%edi
409a(3): mov (%rbx),%rbx
409d(4): mov %r8,(%rsp)
40a1(5): call 0xffffd2af(%rip)
40a6(4): sub $0x8,%rsp
40aa(3): mov %r13,%r9
40ad(2): push %r12
40af(2): push %r15
40b1(2): push %r14
40b3(5): mov 0x20(%rsp),%r8
40b8(3): mov %rbx,%rcx
40bb(3): mov %rax,%rdx
40be(3): mov %rbp,%rdi
40c1(5): mov $0x1,%esi
40c6(2): xor %eax,%eax
40c8(5): call 0xffffd448(%rip)
40cd(4): add $0x20,%rsp
40d1(4): add $0x28,%rsp
40d5(1): pop %rbx
40d6(1): pop %rbp
40d7(2): pop %r12
40d9(2): pop %r13
40db(2): pop %r14
40dd(2): pop %r15
40df(1): ret near (%rsp)
40e0(4): mov 0x10(%rbx),%r9
40e4(4): mov 0x30(%rbx),%r13
40e8(7): lea 0x16b9(%rip),%rsi
40ef(4): mov 0x28(%rbx),%r12
40f3(4): mov 0x20(%rbx),%r15
40f7(5): mov $0x5,%edx
40fc(4): mov 0x18(%rbx),%r14
4100(4): mov 0x8(%rbx),%r8
4104(2): xor %edi,%edi
4106(5): mov %r9,0x8(%rsp)
410b(3): mov (%rbx),%rbx
410e(4): mov %r8,(%rsp)
4112(5): call 0xffffd23e(%rip)
4117(2): push %r13
4119(2): push %r12
411b(2): push %r15
411d(2): push %r14
411f(5): mov 0x28(%rsp),%r9
4124(2): jmp 0xffffff8f(%rip)
4126(a): nop 0x0(%rax,%rax,1)
4130(4): mov 0x40(%rbx),%r10
4134(4): mov 0x38(%rbx),%r9
4138(5): mov $0x5,%edx
413d(4): mov 0x10(%rbx),%rax
4141(4): mov 0x8(%rbx),%r8
4145(7): lea 0x16f4(%rip),%rsi
414c(4): mov 0x30(%rbx),%r13
4150(4): mov 0x28(%rbx),%r12
4154(4): mov 0x20(%rbx),%r15
4158(4): mov 0x18(%rbx),%r14
415c(5): mov %r10,0x18(%rsp)
4161(5): mov %r9,0x10(%rsp)
4166(4): mov %rax,(%rsp)
416a(5): mov %r8,0x8(%rsp)
416f(3): mov (%rbx),%rbx
4172(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4180(3): xor %r9d,%r9d
4183(4): cmp $0x0,(%r8)
4187(2): jz 0x14(%rip)
4189(7): nop 0x0(%rax)
4190(4): add $0x1,%r9
4194(5): cmp $0x0,0x0(%r8,%r9,8)
4199(2): jnz 0xfffffff7(%rip)
419b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
41a0(4): sub $0x68,%rsp
41a4(3): mov %r8,%r10
41a7(3): xor %r9d,%r9d
41aa(9): mov $0x28,%rax
41b3(5): mov %rax,0x58(%rsp)
41b8(2): xor %eax,%eax
41ba(3): mov %rsp,%r8
41bd(3): nop (%rax)
41c0(3): mov (%r10),%eax
41c3(3): cmp $0x2f,%eax
41c6(2): jnbe 0x44(%rip)
41c8(3): mov %eax,%r11d
41cb(4): add 0x10(%r10),%r11
41cf(3): add $0x8,%eax
41d2(3): mov %eax,(%r10)
41d5(3): mov (%r11),%rax
41d8(3): test %rax,%rax
41db(4): mov %rax,0x0(%r8,%r9,8)
41df(2): jz 0xc(%rip)
41e1(4): add $0x1,%r9
41e5(4): cmp $0xa,%r9
41e9(2): jnz 0xffffffd7(%rip)
41eb(5): call 0xfffffb75(%rip)
41f0(5): mov 0x58(%rsp),%rax
41f5(9): xor $0x28,%rax
41fe(2): jnz 0x7(%rip)
4200(4): add $0x68,%rsp
4204(1): ret near (%rsp)
4205(5): call 0xffffd17b(%rip)
420a(4): mov 0x8(%r10),%r11
420e(4): lea 0x8(%r11),%rax
4212(4): mov %rax,0x8(%r10)
4216(2): jmp 0xffffffbf(%rip)

"version_etc" :
4220(1): push %rbp
4221(1): push %rbx
4222(6): mov $0x20,%r10d
4228(3): xor %r11d,%r11d
422b(7): sub $0xb8,%rsp
4232(9): mov $0x28,%rax
423b(5): mov %rax,0x78(%rsp)
4240(2): xor %eax,%eax
4242(8): lea 0xd0(%rsp),%rax
424a(8): mov %r8,0xa0(%rsp)
4252(8): lea 0xd0(%rsp),%rbx
425a(5): lea 0x20(%rsp),%r8
425f(8): mov %r9,0xa8(%rsp)
4267(8): mov $0x20,0x8(%rsp)
426f(5): mov %rax,0x10(%rsp)
4274(8): lea 0x80(%rsp),%rax
427c(3): xor %r9d,%r9d
427f(5): mov %rax,0x18(%rsp)
4284(3): mov %rax,%rbp
4287(9): nop 0x0(%rax,%rax,1)
4290(4): cmp $0x2f,%r10d
4294(2): jnbe 0x58(%rip)
4296(3): mov %r10d,%eax
4299(6): mov $0x1,%r11d
429f(4): add $0x8,%r10d
42a3(3): add %rbp,%rax
42a6(3): mov (%rax),%rax
42a9(3): test %rax,%rax
42ac(4): mov %rax,0x0(%r8,%r9,8)
42b0(2): jz 0xc(%rip)
42b2(4): add $0x1,%r9
42b6(4): cmp $0xa,%r9
42ba(2): jnz 0xffffffd6(%rip)
42bc(3): test %r11b,%r11b
42bf(2): jnz 0x26(%rip)
42c1(5): call 0xfffffa9f(%rip)
42c6(5): mov 0x78(%rsp),%rax
42cb(9): xor $0x28,%rax
42d4(2): jnz 0xc(%rip)
42d6(7): add $0xb8,%rsp
42dd(1): pop %rbx
42de(1): pop %rbp
42df(1): ret near (%rsp)
42e0(5): call 0xffffd0a0(%rip)
42e5(5): mov %r10d,0x8(%rsp)
42ea(2): jmp 0xffffffd7(%rip)
42ec(3): mov %rbx,%rax
42ef(4): add $0x8,%rbx
42f3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4300(1): push %rbx
4301(7): lea 0x131a(%rip),%rsi
4308(5): mov $0x5,%edx
430d(2): xor %edi,%edi
430f(5): call 0xffffd041(%rip)
4314(7): lea 0x131c(%rip),%rdx
431b(3): mov %rax,%rsi
431e(5): mov $0x1,%edi
4323(2): xor %eax,%eax
4325(5): call 0xffffd18b(%rip)
432a(7): lea 0x131c(%rip),%rsi
4331(5): mov $0x5,%edx
4336(2): xor %edi,%edi
4338(5): call 0xffffd018(%rip)
433d(7): lea 0xc7c(%rip),%rcx
4344(7): lea 0xa15(%rip),%rdx
434b(3): mov %rax,%rsi
434e(5): mov $0x1,%edi
4353(2): xor %eax,%eax
4355(5): call 0xffffd15b(%rip)
435a(7): mov 0x202d27(%rip),%rbx
4361(7): lea 0x1518(%rip),%rsi
4368(2): xor %edi,%edi
436a(5): mov $0x5,%edx
436f(5): call 0xffffcfe1(%rip)
4374(3): mov %rbx,%rsi
4377(3): mov %rax,%rdi
437a(1): pop %rbx
437b(5): jmp 0xffffd095(%rip)

"xmalloc" :
4380(1): push %rbx
4381(3): mov %rdi,%rbx
4384(5): call 0xffffd0cc(%rip)
4389(3): test %rax,%rax
438c(2): jnz 0x7(%rip)
438e(3): test %rbx,%rbx
4391(2): jnz 0x4(%rip)
4393(1): pop %rbx
4394(1): ret near (%rsp)
4395(5): call 0x23b(%rip)

"xnmalloc" :
43a0(3): mov %rdi,%rax
43a3(3): mul %rax,%rsi,%rdx
43a6(3): mov %rax,%rdi
43a9(3): seto %al
43ac(3): test %rdi,%rdi
43af(2): js 0xc(%rip)
43b1(3): movzx %al,%eax
43b4(3): test %rax,%rax
43b7(2): jnz 0x4(%rip)
43b9(2): jmp 0xffffffc7(%rip)
43bb(4): sub $0x8,%rsp
43bf(5): call 0x211(%rip)

"xrealloc" :
43e0(3): test %rsi,%rsi
43e3(1): push %rbx
43e4(3): mov %rsi,%rbx
43e7(2): jnz 0x7(%rip)
43e9(3): test %rdi,%rdi
43ec(2): jnz 0x1c(%rip)
43ee(3): mov %rbx,%rsi
43f1(5): call 0xffffd09f(%rip)
43f6(3): test %rax,%rax
43f9(2): jnz 0x7(%rip)
43fb(3): test %rbx,%rbx
43fe(2): jnz 0x13(%rip)
4400(1): pop %rbx
4401(1): ret near (%rsp)
4402(6): nop 0x0(%rax,%rax,1)
4408(5): call 0xffffce98(%rip)
440d(2): xor %eax,%eax
440f(1): pop %rbx
4410(1): ret near (%rsp)
4411(5): call 0x1bf(%rip)

"xnrealloc" :
4420(3): mov %rsi,%rax
4423(3): mul %rax,%rdx,%rdx
4426(3): mov %rax,%rsi
4429(3): seto %al
442c(3): test %rsi,%rsi
442f(2): js 0xc(%rip)
4431(3): movzx %al,%eax
4434(3): test %rax,%rax
4437(2): jnz 0x4(%rip)
4439(2): jmp 0xffffffa7(%rip)
443b(4): sub $0x8,%rsp
443f(5): call 0x191(%rip)

"x2nrealloc" :
4450(3): test %rdi,%rdi
4453(3): mov %rdx,%r9
4456(3): mov (%rsi),%rcx
4459(2): jz 0x37(%rip)
445b(2): xor %edx,%edx
445d(a): mov $0x6148914691236517204,%rax
4467(3): div %r9,%rax
446a(3): cmp %rcx,%rax
446d(2): jbe 0x3e(%rip)
446f(3): mov %rcx,%rax
4472(3): shr $0x1,%rax
4475(5): lea 0x1(%rax,%rcx,1),%rcx
447a(3): mov %rcx,(%rsi)
447d(4): imul %r9,%rcx
4481(3): mov %rcx,%rsi
4484(5): jmp 0xffffff5c(%rip)
4489(7): nop 0x0(%rax)
4490(3): test %rcx,%rcx
4493(2): jz 0x25(%rip)
4495(3): mov %rcx,%rax
4498(3): mul %rax,%r9,%rdx
449b(3): seto %dl
449e(3): test %rax,%rax
44a1(3): movzx %dl,%edx
44a4(2): js 0x7(%rip)
44a6(3): test %rdx,%rdx
44a9(2): jz 0xffffffd1(%rip)
44ab(4): sub $0x8,%rsp
44af(5): call 0x121(%rip)
44b4(4): nop 0x0(%rax)
44b8(2): xor %edx,%edx
44ba(5): mov $0x80,%eax
44bf(3): xor %r8d,%r8d
44c2(3): div %r9,%rax
44c5(3): test %rax,%rax
44c8(4): setz %r8b
44cc(4): lea 0x0(%r8,%rax,1),%rcx
44d0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
44e0(3): test %rdi,%rdi
44e3(3): mov (%rsi),%rax
44e6(2): jz 0x2a(%rip)
44e8(a): mov $0x6148914691236517203,%rdx
44f2(3): cmp %rdx,%rax
44f5(2): jnbe 0x2c(%rip)
44f7(3): mov %rax,%rdx
44fa(3): shr $0x1,%rdx
44fd(5): lea 0x1(%rdx,%rax,1),%rax
4502(3): mov %rax,(%rsi)
4505(3): mov %rax,%rsi
4508(5): jmp 0xfffffed8(%rip)
450d(3): nop (%rax)
4510(3): test %rax,%rax
4513(5): mov $0x80,%edx
4518(4): cmove %rdx,%rax
451c(3): test %rax,%rax
451f(2): jns 0xffffffe3(%rip)
4521(4): sub $0x8,%rsp
4525(5): call 0xab(%rip)

"xzalloc" :
4530(1): push %rbx
4531(3): mov %rdi,%rbx
4534(5): call 0xfffffe4c(%rip)
4539(3): mov %rbx,%rdx
453c(2): xor %esi,%esi
453e(3): mov %rax,%rdi
4541(1): pop %rbx
4542(5): jmp 0xffffceae(%rip)

"xcalloc" :
4550(3): mov %rdi,%rax
4553(4): sub $0x8,%rsp
4557(3): mul %rax,%rsi,%rdx
455a(3): seto %dl
455d(3): test %rax,%rax
4560(2): js 0x19(%rip)
4562(3): movzx %dl,%edx
4565(3): test %rdx,%rdx
4568(2): jnz 0x11(%rip)
456a(5): call 0xffffceb6(%rip)
456f(3): test %rax,%rax
4572(2): jz 0x7(%rip)
4574(4): add $0x8,%rsp
4578(1): ret near (%rsp)
4579(5): call 0x57(%rip)

"xmemdup" :
4580(1): push %rbp
4581(1): push %rbx
4582(3): mov %rdi,%rbp
4585(3): mov %rsi,%rdi
4588(3): mov %rsi,%rbx
458b(4): sub $0x8,%rsp
458f(5): call 0xfffffdf1(%rip)
4594(4): add $0x8,%rsp
4598(3): mov %rbx,%rdx
459b(3): mov %rbp,%rsi
459e(1): pop %rbx
459f(1): pop %rbp
45a0(3): mov %rax,%rdi
45a3(5): jmp 0xffffce8d(%rip)

"xstrdup" :
45b0(1): push %rbx
45b1(3): mov %rdi,%rbx
45b4(5): call 0xffffcdbc(%rip)
45b9(3): mov %rbx,%rdi
45bc(4): lea 0x1(%rax),%rsi
45c0(1): pop %rbx
45c1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
45d0(7): lea 0x1358(%rip),%rsi
45d7(4): sub $0x8,%rsp
45db(5): mov $0x5,%edx
45e0(2): xor %edi,%edi
45e2(5): call 0xffffcd6e(%rip)
45e7(6): mov 0x202a2b(%rip),%edi
45ed(7): lea 0xaa1(%rip),%rdx
45f4(3): mov %rax,%rcx
45f7(2): xor %esi,%esi
45f9(2): xor %eax,%eax
45fb(5): call 0xffffcec5(%rip)
4600(5): call 0xffffccb0(%rip)

"xnanosleep" :
4610(1): push %rbp
4611(1): push %rbx
4612(4): sub $0x28,%rsp
4616(9): mov $0x28,%rax
461f(5): mov %rax,0x18(%rsp)
4624(2): xor %eax,%eax
4626(3): mov %rsp,%rbp
4629(5): call 0x387(%rip)
462e(4): mov %rax,(%rsp)
4632(5): mov %rdx,0x8(%rsp)
4637(5): call 0xffffcc89(%rip)
463c(3): mov %rax,%rbx
463f(2): jmp 0x11(%rip)
4641(7): nop 0x0(%rax)
4648(6): test $0xfffffffb,(%rbx)
464e(2): jnz 0x32(%rip)
4650(2): xor %esi,%esi
4652(6): mov $0x0,(%rbx)
4658(3): mov %rbp,%rdi
465b(5): call 0x195(%rip)
4660(2): test %eax,%eax
4662(2): jnz 0xffffffe6(%rip)
4664(5): mov 0x18(%rsp),%rdx
4669(9): xor $0x28,%rdx
4672(2): jnz 0x15(%rip)
4674(4): add $0x28,%rsp
4678(1): pop %rbx
4679(1): pop %rbp
467a(1): ret near (%rsp)
467b(5): nop 0x0(%rax,%rax,1)
4680(5): mov $0xffffffff,%eax
4685(2): jmp 0xffffffdf(%rip)
4687(5): call 0xffffccf9(%rip)

"xstrtod" :
4690(2): push %r14
4692(2): push %r13
4694(3): mov %rcx,%r14
4697(2): push %r12
4699(1): push %rbp
469a(3): mov %rdi,%rbp
469d(1): push %rbx
469e(3): mov %rdx,%r13
46a1(3): mov %rsi,%rbx
46a4(4): sub $0x10,%rsp
46a8(9): mov $0x28,%rax
46b1(5): mov %rax,0x8(%rsp)
46b6(2): xor %eax,%eax
46b8(5): call 0xffffcc08(%rip)
46bd(3): mov %rsp,%rsi
46c0(3): mov %rax,%r12
46c3(6): mov $0x0,(%rax)
46c9(3): mov %rbp,%rdi
46cc(3): call %r14
46cf(4): mov (%rsp),%rcx
46d3(3): cmp %rbp,%rcx
46d6(2): jz 0x72(%rip)
46d8(3): test %rbx,%rbx
46db(2): jz 0x4d(%rip)
46dd(8): ucomisd 0x125b(%rip),%xmm0
46e5(2): jp 0x9(%rip)
46e7(5): mov $0x1,%eax
46ec(2): jz 0xf(%rip)
46ee(5): cmp $0x22,(%r12)
46f3(3): setnz %al
46f6(3): test %rbx,%rbx
46f9(2): jz 0x5(%rip)
46fb(3): mov %rcx,(%rbx)
46fe(5): mov 0x8(%rsp),%rdx
4703(9): xor $0x28,%rdx
470c(6): movsd %xmm0,0x0(%r13)
4712(2): jnz 0x3a(%rip)
4714(4): add $0x10,%rsp
4718(1): pop %rbx
4719(1): pop %rbp
471a(2): pop %r12
471c(2): pop %r13
471e(2): pop %r14
4720(1): ret near (%rsp)
4721(7): nop 0x0(%rax)
4728(2): xor %eax,%eax
472a(3): cmp $0x0,(%rcx)
472d(2): jnz 0xffffffd1(%rip)
472f(8): ucomisd 0x1209(%rip),%xmm0
4737(2): jp 0xffffffb7(%rip)
4739(2): jnz 0xffffffb5(%rip)
473b(5): mov $0x1,%eax
4740(2): jmp 0xffffffbe(%rip)
4742(6): nop 0x0(%rax,%rax,1)
4748(2): xor %eax,%eax
474a(2): jmp 0xffffffac(%rip)
474c(5): call 0xffffcc34(%rip)

"rpl_mbrtowc" :
4760(2): push %r13
4762(2): push %r12
4764(3): mov %rsi,%r13
4767(1): push %rbp
4768(1): push %rbx
4769(3): mov %rdi,%rbx
476c(3): mov %rdx,%r12
476f(4): sub $0x18,%rsp
4773(9): mov $0x28,%rax
477c(5): mov %rax,0x8(%rsp)
4781(2): xor %eax,%eax
4783(5): lea 0x4(%rsp),%rax
4788(3): test %rdi,%rdi
478b(4): cmove %rax,%rbx
478f(3): mov %rbx,%rdi
4792(5): call 0xffffcc0e(%rip)
4797(4): cmp $0xfffffffd,%rax
479b(3): mov %rax,%rbp
479e(2): jbe 0x22(%rip)
47a0(3): test %r12,%r12
47a3(2): jz 0x1d(%rip)
47a5(2): xor %edi,%edi
47a7(5): call 0x2c9(%rip)
47ac(2): test %al,%al
47ae(2): jnz 0x12(%rip)
47b0(5): movzx 0x0(%r13),%eax
47b5(5): mov $0x1,%ebp
47ba(2): mov %eax,(%rbx)
47bc(4): nop 0x0(%rax)
47c0(5): mov 0x8(%rsp),%rdx
47c5(9): xor $0x28,%rdx
47ce(3): mov %rbp,%rax
47d1(2): jnz 0xd(%rip)
47d3(4): add $0x18,%rsp
47d7(1): pop %rbx
47d8(1): pop %rbp
47d9(2): pop %r12
47db(2): pop %r13
47dd(1): ret near (%rsp)
47de(5): call 0xffffcba2(%rip)

"rpl_nanosleep" :
47f0(2): push %r12
47f2(1): push %rbp
47f3(1): push %rbx
47f4(4): sub $0x20,%rsp
47f8(9): mov $0x28,%rax
4801(5): mov %rax,0x18(%rsp)
4806(2): xor %eax,%eax
4808(4): mov 0x8(%rdi),%rax
480c(6): cmp $0x3b9ac9ff,%rax
4812(6): jnbe 0x8e(%rip)
4818(3): mov (%rdi),%rbx
481b(3): mov %rsi,%rbp
481e(5): mov %rax,0x8(%rsp)
4823(3): mov %rsp,%r12
4826(7): cmp $0x1fa400,%rbx
482d(2): jnle 0x1d(%rip)
482f(2): jmp 0x49(%rip)
4831(7): nop 0x0(%rax)
4838(7): cmp $0x1fa400,%rbx
483f(9): mov $0x0,0x8(%rsp)
4848(2): jle 0x30(%rip)
484a(3): mov %rbp,%rsi
484d(3): mov %r12,%rdi
4850(8): mov $0x1fa400,(%rsp)
4858(7): sub $0x1fa400,%rbx
485f(5): call 0xffffcb61(%rip)
4864(2): test %eax,%eax
4866(2): jz 0xffffffd2(%rip)
4868(3): test %rbp,%rbp
486b(2): jz 0x1c(%rip)
486d(4): add %rbx,0x0(%rbp)
4871(2): jmp 0x16(%rip)
4873(5): nop 0x0(%rax,%rax,1)
4878(3): mov %rbp,%rsi
487b(3): mov %r12,%rdi
487e(4): mov %rbx,(%rsp)
4882(5): call 0xffffcb3e(%rip)
4887(5): mov 0x18(%rsp),%rdx
488c(9): xor $0x28,%rdx
4895(2): jnz 0x1d(%rip)
4897(4): add $0x20,%rsp
489b(1): pop %rbx
489c(1): pop %rbp
489d(2): pop %r12
489f(1): ret near (%rsp)
48a0(5): call 0xffffca20(%rip)
48a5(6): mov $0x16,(%rax)
48ab(5): mov $0xffffffff,%eax
48b0(2): jmp 0xffffffd7(%rip)
48b2(5): call 0xffffcace(%rip)

"c_strtod" :
48c0(1): push %rbp
48c1(1): push %rbx
48c2(3): mov %rdi,%rbp
48c5(3): mov %rsi,%rbx
48c8(4): sub $0x8,%rsp
48cc(7): mov 0x202965(%rip),%rax
48d3(3): test %rax,%rax
48d6(2): jz 0x3a(%rip)
48d8(7): mov 0x202959(%rip),%rdx
48df(3): test %rdx,%rdx
48e2(2): jz 0x16(%rip)
48e4(4): add $0x8,%rsp
48e8(3): mov %rbx,%rsi
48eb(3): mov %rbp,%rdi
48ee(1): pop %rbx
48ef(1): pop %rbp
48f0(5): jmp 0xffffca30(%rip)
48f5(3): nop (%rax)
48f8(3): test %rbx,%rbx
48fb(4): pxor %xmm0,%xmm0
48ff(2): jz 0x9(%rip)
4901(4): pxor %xmm0,%xmm0
4905(3): mov %rbp,(%rbx)
4908(4): add $0x8,%rsp
490c(1): pop %rbx
490d(1): pop %rbp
490e(1): ret near (%rsp)
490f(1): nop 
4910(7): lea 0x1031(%rip),%rsi
4917(2): xor %edx,%edx
4919(5): mov $0x1fbf,%edi
491e(5): call 0xffffca92(%rip)
4923(7): mov %rax,0x20290e(%rip)
492a(2): jmp 0xffffffae(%rip)

"close_stream" :
4930(2): push %r12
4932(1): push %rbp
4933(3): mov %rdi,%rbp
4936(1): push %rbx
4937(5): call 0xffffc9b9(%rip)
493c(3): mov 0x0(%rbp),%ebx
493f(3): mov %rbp,%rdi
4942(3): mov %rax,%r12
4945(5): call 0x1cb(%rip)
494a(3): and $0x20,%ebx
494d(2): test %ebx,%ebx
494f(2): jnz 0x19(%rip)
4951(2): test %eax,%eax
4953(2): jz 0xc(%rip)
4955(3): test %r12,%r12
4958(5): mov $0xffffffff,%eax
495d(2): jz 0x3b(%rip)
495f(1): pop %rbx
4960(1): pop %rbp
4961(2): pop %r12
4963(1): ret near (%rsp)
4964(4): nop 0x0(%rax)
4968(2): test %eax,%eax
496a(2): jnz 0x1e(%rip)
496c(5): call 0xffffc954(%rip)
4971(6): mov $0x0,(%rax)
4977(5): mov $0xffffffff,%eax
497c(1): pop %rbx
497d(1): pop %rbp
497e(2): pop %r12
4980(1): ret near (%rsp)
4981(7): nop 0x0(%rax)
4988(1): pop %rbx
4989(5): mov $0xffffffff,%eax
498e(1): pop %rbp
498f(2): pop %r12
4991(1): ret near (%rsp)
4992(6): nop 0x0(%rax,%rax,1)
4998(5): call 0xffffc928(%rip)
499d(3): cmp $0x9,(%rax)
49a0(1): pop %rbx
49a1(1): pop %rbp
49a2(2): pop %r12
49a4(3): setnz %al
49a7(3): movzx %al,%eax
49aa(2): neg %eax
49ac(1): ret near (%rsp)

"dtotimespec" :
49b0(8): ucomisd 0xf98(%rip),%xmm0
49b8(6): jbe 0x98(%rip)
49be(8): movsd 0xf92(%rip),%xmm1
49c6(4): ucomisd %xmm0,%xmm1
49ca(2): jbe 0x6e(%rip)
49cc(5): cvttsd2si %xmm0,%rsi
49d1(4): pxor %xmm1,%xmm1
49d5(2): xor %ecx,%ecx
49d7(5): cvtsi2sd %rsi,%xmm1
49dc(4): subsd %xmm1,%xmm0
49e0(4): pxor %xmm1,%xmm1
49e4(8): mulsd 0xf74(%rip),%xmm0
49ec(5): cvttsd2si %xmm0,%rdx
49f1(5): cvtsi2sd %rdx,%xmm1
49f6(4): ucomisd %xmm1,%xmm0
49fa(3): setnbe %cl
49fd(3): add %rdx,%rcx
4a00(a): mov $0x1237940039285380275,%rdx
4a0a(3): mov %rcx,%rax
4a0d(3): imul %rax,%rdx,%rdx
4a10(3): mov %rcx,%rax
4a13(4): sar $0x3f,%rax
4a17(4): sar $0x1a,%rdx
4a1b(3): sub %rax,%rdx
4a1e(4): lea 0x0(%rdx,%rsi,1),%rax
4a22(7): imul %rdx,$0x3b9aca00,%rdx
4a29(3): sub %rdx,%rcx
4a2c(3): mov %rcx,%rdx
4a2f(2): js 0x31(%rip)
4a31(2): REP ret near (%rsp)
4a33(5): nop 0x0(%rax,%rax,1)
4a38(a): mov $0x9223372036854775807,%rax
4a42(5): mov $0x3b9ac9ff,%edx
4a47(1): ret near (%rsp)
4a48(8): nop 0x0(%rax,%rax,1)
4a50(a): mov $0x-9223372036854775808,%rax
4a5a(2): xor %edx,%edx
4a5c(1): ret near (%rsp)
4a5d(3): nop (%rax)
4a60(4): sub $0x1,%rax
4a64(7): add $0x3b9aca00,%rdx
4a6b(1): ret near (%rsp)

"hard_locale" :
4a70(4): sub $0x8,%rsp
4a74(2): xor %esi,%esi
4a76(5): call 0xffffca2a(%rip)
4a7b(3): mov %rax,%rdx
4a7e(5): mov $0x1,%eax
4a83(3): test %rdx,%rdx
4a86(2): jz 0x1f(%rip)
4a88(7): lea 0xeb9(%rip),%rdi
4a8f(5): mov $0x2,%ecx
4a94(3): mov %rdx,%rsi
4a97(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4a99(3): setnbe %cl
4a9c(3): sbb $0x0,%cl
4a9f(2): xor %eax,%eax
4aa1(2): test %cl,%cl
4aa3(2): jnz 0xd(%rip)
4aa5(4): add $0x8,%rsp
4aa9(1): ret near (%rsp)
4aaa(6): nop 0x0(%rax,%rax,1)
4ab0(7): lea 0xeb1(%rip),%rdi
4ab7(5): mov $0x6,%ecx
4abc(3): mov %rdx,%rsi
4abf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4ac1(3): setnbe %al
4ac4(2): sbb $0x0,%al
4ac6(2): test %al,%al
4ac8(3): setnz %al
4acb(4): add $0x8,%rsp
4acf(1): ret near (%rsp)

"locale_charset" :
4ad0(4): sub $0x8,%rsp
4ad4(5): mov $0xe,%edi
4ad9(5): call 0xffffc997(%rip)
4ade(3): test %rax,%rax
4ae1(2): jz 0x1f(%rip)
4ae3(3): cmp $0x0,(%rax)
4ae6(7): lea 0xe81(%rip),%rdx
4aed(4): cmove %rdx,%rax
4af1(4): add $0x8,%rsp
4af5(1): ret near (%rsp)
4af6(a): nop 0x0(%rax,%rax,1)
4b00(7): lea 0xe67(%rip),%rax
4b07(4): add $0x8,%rsp
4b0b(1): ret near (%rsp)

"rpl_fclose" :
4b10(2): push %r12
4b12(1): push %rbp
4b13(1): push %rbx
4b14(3): mov %rdi,%rbx
4b17(5): call 0xffffc929(%rip)
4b1c(2): test %eax,%eax
4b1e(3): mov %rbx,%rdi
4b21(2): js 0x56(%rip)
4b23(5): call 0xffffc95d(%rip)
4b28(2): test %eax,%eax
4b2a(2): jnz 0x2e(%rip)
4b2c(3): mov %rbx,%rdi
4b2f(5): call 0x61(%rip)
4b34(2): test %eax,%eax
4b36(2): jz 0x3e(%rip)
4b38(5): call 0xffffc788(%rip)
4b3d(3): mov (%rax),%r12d
4b40(3): mov %rbx,%rdi
4b43(3): mov %rax,%rbp
4b46(5): call 0xffffc7ea(%rip)
4b4b(3): test %r12d,%r12d
4b4e(2): jnz 0x32(%rip)
4b50(1): pop %rbx
4b51(1): pop %rbp
4b52(2): pop %r12
4b54(1): ret near (%rsp)
4b55(3): nop (%rax)
4b58(3): mov %rbx,%rdi
4b5b(5): call 0xffffc8e5(%rip)
4b60(2): xor %esi,%esi
4b62(5): mov $0x1,%edx
4b67(2): mov %eax,%edi
4b69(5): call 0xffffc877(%rip)
4b6e(4): cmp $0xffffffff,%rax
4b72(2): jnz 0xffffffba(%rip)
4b74(3): mov %rbx,%rdi
4b77(1): pop %rbx
4b78(1): pop %rbp
4b79(2): pop %r12
4b7b(5): jmp 0xffffc7b5(%rip)
4b80(4): mov %r12d,0x0(%rbp)
4b84(5): mov $0xffffffff,%eax
4b89(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4b90(3): test %rdi,%rdi
4b93(1): push %rbx
4b94(3): mov %rdi,%rbx
4b97(2): jz 0x13(%rip)
4b99(5): call 0xffffc8e7(%rip)
4b9e(2): test %eax,%eax
4ba0(2): jz 0xa(%rip)
4ba2(6): test $0x100,(%rbx)
4ba8(2): jnz 0x10(%rip)
4baa(3): mov %rbx,%rdi
4bad(1): pop %rbx
4bae(5): jmp 0xffffc8b2(%rip)
4bb3(5): nop 0x0(%rax,%rax,1)
4bb8(3): mov %rbx,%rdi
4bbb(5): mov $0x1,%edx
4bc0(2): xor %esi,%esi
4bc2(5): call 0xe(%rip)
4bc7(3): mov %rbx,%rdi
4bca(1): pop %rbx
4bcb(5): jmp 0xffffc895(%rip)

"rpl_fseeko" :
4bd0(4): mov 0x8(%rdi),%rax
4bd4(4): cmp %rax,0x10(%rdi)
4bd8(2): jz 0x8(%rip)
4bda(5): jmp 0xffffc8f6(%rip)
4bdf(1): nop 
4be0(4): mov 0x20(%rdi),%rax
4be4(4): cmp %rax,0x28(%rdi)
4be8(2): jnz 0xfffffff2(%rip)
4bea(5): cmp $0x0,0x48(%rdi)
4bef(2): jnz 0xffffffeb(%rip)
4bf1(2): push %r12
4bf3(1): push %rbp
4bf4(3): mov %edx,%r12d
4bf7(1): push %rbx
4bf8(3): mov %rsi,%rbp
4bfb(3): mov %rdi,%rbx
4bfe(5): call 0xffffc842(%rip)
4c03(3): mov %r12d,%edx
4c06(3): mov %rbp,%rsi
4c09(2): mov %eax,%edi
4c0b(5): call 0xffffc7d5(%rip)
4c10(4): cmp $0xffffffff,%rax
4c14(2): jz 0xe(%rip)
4c16(3): and $0xef,(%rbx)
4c19(7): mov %rax,0x90(%rbx)
4c20(2): xor %eax,%eax
4c22(1): pop %rbx
4c23(1): pop %rbp
4c24(2): pop %r12
4c26(1): ret near (%rsp)

"__libc_csu_init" :
4c30(2): push %r15
4c32(2): push %r14
4c34(3): mov %rdx,%r15
4c37(2): push %r13
4c39(2): push %r12
4c3b(7): lea 0x201f6e(%rip),%r12
4c42(1): push %rbp
4c43(7): lea 0x201f6e(%rip),%rbp
4c4a(1): push %rbx
4c4b(3): mov %edi,%r13d
4c4e(3): mov %rsi,%r14
4c51(3): sub %r12,%rbp
4c54(4): sub $0x8,%rsp
4c58(4): sar $0x3,%rbp
4c5c(5): call 0xffffc614(%rip)
4c61(3): test %rbp,%rbp
4c64(2): jz 0x22(%rip)
4c66(2): xor %ebx,%ebx
4c68(8): nop 0x0(%rax,%rax,1)
4c70(3): mov %r15,%rdx
4c73(3): mov %r14,%rsi
4c76(3): mov %r13d,%edi
4c79(4): call 0x0(%r12,%rbx,8)
4c7d(4): add $0x1,%rbx
4c81(3): cmp %rbx,%rbp
4c84(2): jnz 0xffffffec(%rip)
4c86(4): add $0x8,%rsp
4c8a(1): pop %rbx
4c8b(1): pop %rbp
4c8c(2): pop %r12
4c8e(2): pop %r13
4c90(2): pop %r14
4c92(2): pop %r15
4c94(1): ret near (%rsp)

"atexit" :
4cb0(7): mov 0x202351(%rip),%rdx
4cb7(2): xor %esi,%esi
4cb9(5): jmp 0xffffc827(%rip)

"_fini" :
4cc0(4): sub $0x8,%rsp
4cc4(4): add $0x8,%rsp
4cc8(1): ret near (%rsp)

