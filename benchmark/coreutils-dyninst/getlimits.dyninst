
"__snprintf_chk@plt" :
1300(6): jmp 0x206b5a(%rip)
1306(5): push $0x0

"free@plt" :
1310(6): jmp 0x206b52(%rip)
1316(5): push $0x1

"abort@plt" :
1320(6): jmp 0x206b4a(%rip)
1326(5): push $0x2

"__errno_location@plt" :
1330(6): jmp 0x206b42(%rip)
1336(5): push $0x3

"strncmp@plt" :
1340(6): jmp 0x206b3a(%rip)
1346(5): push $0x4

"_exit@plt" :
1350(6): jmp 0x206b32(%rip)
1356(5): push $0x5

"__fpending@plt" :
1360(6): jmp 0x206b2a(%rip)
1366(5): push $0x6

"puts@plt" :
1370(6): jmp 0x206b22(%rip)
1376(5): push $0x7

"strtod@plt" :
1380(6): jmp 0x206b1a(%rip)
1386(5): push $0x8

"textdomain@plt" :
1390(6): jmp 0x206b12(%rip)
1396(5): push $0x9

"fclose@plt" :
13a0(6): jmp 0x206b0a(%rip)
13a6(5): push $0xa

"bindtextdomain@plt" :
13b0(6): jmp 0x206b02(%rip)
13b6(5): push $0xb

"dcgettext@plt" :
13c0(6): jmp 0x206afa(%rip)
13c6(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
13d0(6): jmp 0x206af2(%rip)
13d6(5): push $0xd

"strlen@plt" :
13e0(6): jmp 0x206aea(%rip)
13e6(5): push $0xe

"__stack_chk_fail@plt" :
13f0(6): jmp 0x206ae2(%rip)
13f6(5): push $0xf

"getopt_long@plt" :
1400(6): jmp 0x206ada(%rip)
1406(5): push $0x10

"mbrtowc@plt" :
1410(6): jmp 0x206ad2(%rip)
1416(5): push $0x11

"strrchr@plt" :
1420(6): jmp 0x206aca(%rip)
1426(5): push $0x12

"lseek@plt" :
1430(6): jmp 0x206ac2(%rip)
1436(5): push $0x13

"strtof@plt" :
1440(6): jmp 0x206aba(%rip)
1446(5): push $0x14

"memset@plt" :
1450(6): jmp 0x206ab2(%rip)
1456(5): push $0x15

"memcmp@plt" :
1460(6): jmp 0x206aaa(%rip)
1466(5): push $0x16

"fputs_unlocked@plt" :
1470(6): jmp 0x206aa2(%rip)
1476(5): push $0x17

"calloc@plt" :
1480(6): jmp 0x206a9a(%rip)
1486(5): push $0x18

"memcpy@plt" :
1490(6): jmp 0x206a92(%rip)
1496(5): push $0x19

"fileno@plt" :
14a0(6): jmp 0x206a8a(%rip)
14a6(5): push $0x1a

"malloc@plt" :
14b0(6): jmp 0x206a82(%rip)
14b6(5): push $0x1b

"fflush@plt" :
14c0(6): jmp 0x206a7a(%rip)
14c6(5): push $0x1c

"nl_langinfo@plt" :
14d0(6): jmp 0x206a72(%rip)
14d6(5): push $0x1d

"__freading@plt" :
14e0(6): jmp 0x206a6a(%rip)
14e6(5): push $0x1e

"realloc@plt" :
14f0(6): jmp 0x206a62(%rip)
14f6(5): push $0x1f

"setlocale@plt" :
1500(6): jmp 0x206a5a(%rip)
1506(5): push $0x20

"__printf_chk@plt" :
1510(6): jmp 0x206a52(%rip)
1516(5): push $0x21

"strtold@plt" :
1520(6): jmp 0x206a4a(%rip)
1526(5): push $0x22

"error@plt" :
1530(6): jmp 0x206a42(%rip)
1536(5): push $0x23

"fseeko@plt" :
1540(6): jmp 0x206a3a(%rip)
1546(5): push $0x24

"__cxa_atexit@plt" :
1550(6): jmp 0x206a32(%rip)
1556(5): push $0x25

"exit@plt" :
1560(6): jmp 0x206a2a(%rip)
1566(5): push $0x26

"fwrite@plt" :
1570(6): jmp 0x206a22(%rip)
1576(5): push $0x27

"__fprintf_chk@plt" :
1580(6): jmp 0x206a1a(%rip)
1586(5): push $0x28

"mbsinit@plt" :
1590(6): jmp 0x206a12(%rip)
1596(5): push $0x29

"iswprint@plt" :
15a0(6): jmp 0x206a0a(%rip)
15a6(5): push $0x2a

"__ctype_b_loc@plt" :
15b0(6): jmp 0x206a02(%rip)
15b6(5): push $0x2b

"__sprintf_chk@plt" :
15c0(6): jmp 0x2069fa(%rip)
15c6(5): push $0x2c

".plt.got" :
15d0(6): jmp 0x206a12(%rip)
15d6(2): nop 

"_init" :
12d0(4): sub $0x8,%rsp
12d4(7): mov 0x206cfd(%rip),%rax
12db(3): test %rax,%rax
12de(2): jz 0x4(%rip)
12e0(2): call %rax
12e2(4): add $0x8,%rsp
12e6(1): ret near (%rsp)

"main" :
15e0(1): push %rbp
15e1(1): push %rbx
15e2(2): mov %edi,%ebp
15e4(3): mov %rsi,%rbx
15e7(4): sub $0x28,%rsp
15eb(3): mov (%rsi),%rdi
15ee(9): mov $0x28,%rax
15f7(5): mov %rax,0x18(%rsp)
15fc(2): xor %eax,%eax
15fe(5): call 0x17e2(%rip)
1603(7): lea 0x4c37(%rip),%rsi
160a(5): mov $0x6,%edi
160f(5): call 0xfffffef1(%rip)
1614(7): lea 0x41e1(%rip),%rsi
161b(7): lea 0x41b1(%rip),%rdi
1622(5): call 0xfffffd8e(%rip)
1627(7): lea 0x41a5(%rip),%rdi
162e(5): call 0xfffffd62(%rip)
1633(7): lea 0x1046(%rip),%rdi
163a(5): call 0x40d6(%rip)
163f(7): lea 0x41d3(%rip),%rax
1646(2): push $0x0
1648(2): mov %ebp,%edi
164a(7): lea 0xcbf(%rip),%r9
1651(7): lea 0x41bc(%rip),%r8
1658(7): lea 0x4170(%rip),%rcx
165f(1): push %rax
1660(7): lea 0x40dd(%rip),%rdx
1667(3): mov %rbx,%rsi
166a(2): xor %eax,%eax
166c(5): lea 0x10(%rsp),%rbp
1671(5): call 0x14ef(%rip)
1676(4): lea 0x1(%rbp),%rbx
167a(7): lea 0x41a6(%rip),%rcx
1681(6): mov $0x7f,%r8d
1687(5): mov $0x15,%edx
168c(5): mov $0x1,%esi
1691(2): xor %eax,%eax
1693(3): mov %rbx,%rdi
1696(5): call 0xffffff2a(%rip)
169b(7): lea 0x418e(%rip),%rsi
16a2(3): mov %rbx,%rdx
16a5(5): mov $0x1,%edi
16aa(2): xor %eax,%eax
16ac(5): call 0xfffffe64(%rip)
16b1(3): mov %rbp,%rdi
16b4(5): call 0xaec(%rip)
16b9(7): lea 0x417e(%rip),%rsi
16c0(3): mov %rax,%rdx
16c3(5): mov $0x1,%edi
16c8(2): xor %eax,%eax
16ca(5): call 0xfffffe46(%rip)
16cf(7): lea 0x4155(%rip),%rcx
16d6(7): mov $0xffffff80,%r8
16dd(5): mov $0x15,%edx
16e2(5): mov $0x1,%esi
16e7(3): mov %rbx,%rdi
16ea(2): xor %eax,%eax
16ec(5): call 0xfffffed4(%rip)
16f1(7): lea 0x4156(%rip),%rsi
16f8(3): mov %rbx,%rdx
16fb(5): mov $0x1,%edi
1700(2): xor %eax,%eax
1702(5): call 0xfffffe0e(%rip)
1707(3): mov %rbp,%rdi
170a(5): call 0xa96(%rip)
170f(7): lea 0x4146(%rip),%rsi
1716(3): mov %rax,%rdx
1719(5): mov $0x1,%edi
171e(2): xor %eax,%eax
1720(5): call 0xfffffdf0(%rip)
1725(7): lea 0x40fb(%rip),%rcx
172c(6): mov $0x7f,%r8d
1732(5): mov $0x15,%edx
1737(5): mov $0x1,%esi
173c(3): mov %rbx,%rdi
173f(2): xor %eax,%eax
1741(5): call 0xfffffe7f(%rip)
1746(7): lea 0x40e2(%rip),%rsi
174d(3): mov %rbx,%rdx
1750(5): mov $0x1,%edi
1755(2): xor %eax,%eax
1757(5): call 0xfffffdb9(%rip)
175c(3): mov %rbp,%rdi
175f(5): call 0xa41(%rip)
1764(7): lea 0x40d2(%rip),%rsi
176b(3): mov %rax,%rdx
176e(5): mov $0x1,%edi
1773(2): xor %eax,%eax
1775(5): call 0xfffffd9b(%rip)
177a(7): lea 0x40aa(%rip),%rcx
1781(7): mov $0xffffff80,%r8
1788(5): mov $0x15,%edx
178d(5): mov $0x1,%esi
1792(3): mov %rbx,%rdi
1795(2): xor %eax,%eax
1797(5): call 0xfffffe29(%rip)
179c(7): lea 0x40aa(%rip),%rsi
17a3(2): xor %eax,%eax
17a5(3): mov %rbx,%rdx
17a8(5): mov $0x1,%edi
17ad(5): call 0xfffffd63(%rip)
17b2(3): mov %rbp,%rdi
17b5(5): call 0x9eb(%rip)
17ba(7): lea 0x409a(%rip),%rsi
17c1(3): mov %rax,%rdx
17c4(5): mov $0x1,%edi
17c9(2): xor %eax,%eax
17cb(5): call 0xfffffd45(%rip)
17d0(7): lea 0x4050(%rip),%rcx
17d7(6): mov $0xff,%r8d
17dd(5): mov $0x15,%edx
17e2(5): mov $0x1,%esi
17e7(3): mov %rbx,%rdi
17ea(2): xor %eax,%eax
17ec(5): call 0xfffffdd4(%rip)
17f1(7): lea 0x4073(%rip),%rsi
17f8(3): mov %rbx,%rdx
17fb(5): mov $0x1,%edi
1800(2): xor %eax,%eax
1802(5): call 0xfffffd0e(%rip)
1807(3): mov %rbp,%rdi
180a(5): call 0x996(%rip)
180f(7): lea 0x4063(%rip),%rsi
1816(3): mov %rax,%rdx
1819(5): mov $0x1,%edi
181e(2): xor %eax,%eax
1820(5): call 0xfffffcf0(%rip)
1825(7): lea 0x3ffb(%rip),%rcx
182c(6): mov $0x7fff,%r8d
1832(5): mov $0x15,%edx
1837(5): mov $0x1,%esi
183c(3): mov %rbx,%rdi
183f(2): xor %eax,%eax
1841(5): call 0xfffffd7f(%rip)
1846(7): lea 0x403c(%rip),%rsi
184d(3): mov %rbx,%rdx
1850(5): mov $0x1,%edi
1855(2): xor %eax,%eax
1857(5): call 0xfffffcb9(%rip)
185c(3): mov %rbp,%rdi
185f(5): call 0x941(%rip)
1864(7): lea 0x402b(%rip),%rsi
186b(3): mov %rax,%rdx
186e(5): mov $0x1,%edi
1873(2): xor %eax,%eax
1875(5): call 0xfffffc9b(%rip)
187a(7): lea 0x3faa(%rip),%rcx
1881(7): mov $0xffff8000,%r8
1888(5): mov $0x15,%edx
188d(5): mov $0x1,%esi
1892(3): mov %rbx,%rdi
1895(2): xor %eax,%eax
1897(5): call 0xfffffd29(%rip)
189c(7): lea 0x4002(%rip),%rsi
18a3(3): mov %rbx,%rdx
18a6(5): mov $0x1,%edi
18ab(2): xor %eax,%eax
18ad(5): call 0xfffffc63(%rip)
18b2(3): mov %rbp,%rdi
18b5(5): call 0x8eb(%rip)
18ba(7): lea 0x3ff1(%rip),%rsi
18c1(3): mov %rax,%rdx
18c4(5): mov $0x1,%edi
18c9(2): xor %eax,%eax
18cb(5): call 0xfffffc45(%rip)
18d0(7): lea 0x3f50(%rip),%rcx
18d7(6): mov $0x7fffffff,%r8d
18dd(5): mov $0x15,%edx
18e2(5): mov $0x1,%esi
18e7(3): mov %rbx,%rdi
18ea(2): xor %eax,%eax
18ec(5): call 0xfffffcd4(%rip)
18f1(7): lea 0x3fe4(%rip),%rsi
18f8(3): mov %rbx,%rdx
18fb(5): mov $0x1,%edi
1900(2): xor %eax,%eax
1902(5): call 0xfffffc0e(%rip)
1907(3): mov %rbp,%rdi
190a(5): call 0x896(%rip)
190f(7): lea 0x3fd3(%rip),%rsi
1916(3): mov %rax,%rdx
1919(5): mov $0x1,%edi
191e(2): xor %eax,%eax
1920(5): call 0xfffffbf0(%rip)
1925(7): lea 0x3eff(%rip),%rcx
192c(7): mov $0x80000000,%r8
1933(5): mov $0x15,%edx
1938(5): mov $0x1,%esi
193d(3): mov %rbx,%rdi
1940(2): xor %eax,%eax
1942(5): call 0xfffffc7e(%rip)
1947(7): lea 0x3f73(%rip),%rsi
194e(3): mov %rbx,%rdx
1951(5): mov $0x1,%edi
1956(2): xor %eax,%eax
1958(5): call 0xfffffbb8(%rip)
195d(3): mov %rbp,%rdi
1960(5): call 0x840(%rip)
1965(7): lea 0x3f61(%rip),%rsi
196c(3): mov %rax,%rdx
196f(5): mov $0x1,%edi
1974(2): xor %eax,%eax
1976(5): call 0xfffffb9a(%rip)
197b(7): lea 0x3ea5(%rip),%rcx
1982(6): mov $0xffffffff,%r8d
1988(5): mov $0x15,%edx
198d(5): mov $0x1,%esi
1992(3): mov %rbx,%rdi
1995(2): xor %eax,%eax
1997(5): call 0xfffffc29(%rip)
199c(7): lea 0x3f38(%rip),%rsi
19a3(3): mov %rbx,%rdx
19a6(5): mov $0x1,%edi
19ab(2): xor %eax,%eax
19ad(5): call 0xfffffb63(%rip)
19b2(3): mov %rbp,%rdi
19b5(5): call 0x7eb(%rip)
19ba(7): lea 0x3f27(%rip),%rsi
19c1(3): mov %rax,%rdx
19c4(5): mov $0x1,%edi
19c9(2): xor %eax,%eax
19cb(5): call 0xfffffb45(%rip)
19d0(7): lea 0x3e50(%rip),%rcx
19d7(a): mov $0x9223372036854775807,%r8
19e1(5): mov $0x15,%edx
19e6(5): mov $0x1,%esi
19eb(3): mov %rbx,%rdi
19ee(2): xor %eax,%eax
19f0(5): call 0xfffffbd0(%rip)
19f5(7): lea 0x3f18(%rip),%rsi
19fc(3): mov %rbx,%rdx
19ff(5): mov $0x1,%edi
1a04(2): xor %eax,%eax
1a06(5): call 0xfffffb0a(%rip)
1a0b(3): mov %rbp,%rdi
1a0e(5): call 0x792(%rip)
1a13(7): lea 0x3f08(%rip),%rsi
1a1a(3): mov %rax,%rdx
1a1d(5): mov $0x1,%edi
1a22(2): xor %eax,%eax
1a24(5): call 0xfffffaec(%rip)
1a29(7): lea 0x3dfb(%rip),%rcx
1a30(a): mov $0x-9223372036854775808,%r8
1a3a(5): mov $0x15,%edx
1a3f(5): mov $0x1,%esi
1a44(3): mov %rbx,%rdi
1a47(2): xor %eax,%eax
1a49(5): call 0xfffffb77(%rip)
1a4e(7): lea 0x3ea2(%rip),%rsi
1a55(3): mov %rbx,%rdx
1a58(5): mov $0x1,%edi
1a5d(2): xor %eax,%eax
1a5f(5): call 0xfffffab1(%rip)
1a64(3): mov %rbp,%rdi
1a67(5): call 0x739(%rip)
1a6c(7): lea 0x3e91(%rip),%rsi
1a73(3): mov %rax,%rdx
1a76(5): mov $0x1,%edi
1a7b(2): xor %eax,%eax
1a7d(5): call 0xfffffa93(%rip)
1a82(7): lea 0x3d9e(%rip),%rcx
1a89(7): mov $0xffffffff,%r8
1a90(5): mov $0x15,%edx
1a95(5): mov $0x1,%esi
1a9a(3): mov %rbx,%rdi
1a9d(2): xor %eax,%eax
1a9f(5): call 0xfffffb21(%rip)
1aa4(7): lea 0x3e68(%rip),%rsi
1aab(3): mov %rbx,%rdx
1aae(5): mov $0x1,%edi
1ab3(2): xor %eax,%eax
1ab5(5): call 0xfffffa5b(%rip)
1aba(3): mov %rbp,%rdi
1abd(5): call 0x6e3(%rip)
1ac2(7): lea 0x3e58(%rip),%rsi
1ac9(3): mov %rax,%rdx
1acc(5): mov $0x1,%edi
1ad1(2): xor %eax,%eax
1ad3(5): call 0xfffffa3d(%rip)
1ad8(7): lea 0x3d48(%rip),%rcx
1adf(7): mov $0xffffffff,%r8
1ae6(5): mov $0x15,%edx
1aeb(5): mov $0x1,%esi
1af0(3): mov %rbx,%rdi
1af3(2): xor %eax,%eax
1af5(5): call 0xfffffacb(%rip)
1afa(7): lea 0x3e31(%rip),%rsi
1b01(3): mov %rbx,%rdx
1b04(5): mov $0x1,%edi
1b09(2): xor %eax,%eax
1b0b(5): call 0xfffffa05(%rip)
1b10(3): mov %rbp,%rdi
1b13(5): call 0x68d(%rip)
1b18(7): lea 0x3e21(%rip),%rsi
1b1f(3): mov %rax,%rdx
1b22(5): mov $0x1,%edi
1b27(2): xor %eax,%eax
1b29(5): call 0xfffff9e7(%rip)
1b2e(7): lea 0x3cf2(%rip),%rcx
1b35(a): mov $0x9223372036854775807,%r8
1b3f(5): mov $0x15,%edx
1b44(5): mov $0x1,%esi
1b49(3): mov %rbx,%rdi
1b4c(2): xor %eax,%eax
1b4e(5): call 0xfffffa72(%rip)
1b53(7): lea 0x3dd7(%rip),%rsi
1b5a(3): mov %rbx,%rdx
1b5d(5): mov $0x1,%edi
1b62(2): xor %eax,%eax
1b64(5): call 0xfffff9ac(%rip)
1b69(3): mov %rbp,%rdi
1b6c(5): call 0x634(%rip)
1b71(7): lea 0x3dc7(%rip),%rsi
1b78(3): mov %rax,%rdx
1b7b(5): mov $0x1,%edi
1b80(2): xor %eax,%eax
1b82(5): call 0xfffff98e(%rip)
1b87(7): lea 0x3c9d(%rip),%rcx
1b8e(a): mov $0x-9223372036854775808,%r8
1b98(5): mov $0x15,%edx
1b9d(5): mov $0x1,%esi
1ba2(3): mov %rbx,%rdi
1ba5(2): xor %eax,%eax
1ba7(5): call 0xfffffa19(%rip)
1bac(7): lea 0x3d9c(%rip),%rsi
1bb3(3): mov %rbx,%rdx
1bb6(5): mov $0x1,%edi
1bbb(2): xor %eax,%eax
1bbd(5): call 0xfffff953(%rip)
1bc2(3): mov %rbp,%rdi
1bc5(5): call 0x5db(%rip)
1bca(7): lea 0x3d8c(%rip),%rsi
1bd1(3): mov %rax,%rdx
1bd4(5): mov $0x1,%edi
1bd9(2): xor %eax,%eax
1bdb(5): call 0xfffff935(%rip)
1be0(7): lea 0x3c40(%rip),%rcx
1be7(a): mov $0x9223372036854775807,%r8
1bf1(5): mov $0x15,%edx
1bf6(5): mov $0x1,%esi
1bfb(3): mov %rbx,%rdi
1bfe(2): xor %eax,%eax
1c00(5): call 0xfffff9c0(%rip)
1c05(7): lea 0x3d61(%rip),%rsi
1c0c(3): mov %rbx,%rdx
1c0f(5): mov $0x1,%edi
1c14(2): xor %eax,%eax
1c16(5): call 0xfffff8fa(%rip)
1c1b(3): mov %rbp,%rdi
1c1e(5): call 0x582(%rip)
1c23(7): lea 0x3d52(%rip),%rsi
1c2a(3): mov %rax,%rdx
1c2d(5): mov $0x1,%edi
1c32(2): xor %eax,%eax
1c34(5): call 0xfffff8dc(%rip)
1c39(7): lea 0x3beb(%rip),%rcx
1c40(2): xor %eax,%eax
1c42(a): mov $0x-9223372036854775808,%r8
1c4c(5): mov $0x15,%edx
1c51(5): mov $0x1,%esi
1c56(3): mov %rbx,%rdi
1c59(5): call 0xfffff967(%rip)
1c5e(7): lea 0x3d28(%rip),%rsi
1c65(3): mov %rbx,%rdx
1c68(5): mov $0x1,%edi
1c6d(2): xor %eax,%eax
1c6f(5): call 0xfffff8a1(%rip)
1c74(3): mov %rbp,%rdi
1c77(5): call 0x529(%rip)
1c7c(7): lea 0x3d19(%rip),%rsi
1c83(3): mov %rax,%rdx
1c86(5): mov $0x1,%edi
1c8b(2): xor %eax,%eax
1c8d(5): call 0xfffff883(%rip)
1c92(7): lea 0x3b8e(%rip),%rcx
1c99(6): mov $0xffffffff,%r8d
1c9f(5): mov $0x15,%edx
1ca4(5): mov $0x1,%esi
1ca9(3): mov %rbx,%rdi
1cac(2): xor %eax,%eax
1cae(5): call 0xfffff912(%rip)
1cb3(7): lea 0x3cf3(%rip),%rsi
1cba(3): mov %rbx,%rdx
1cbd(5): mov $0x1,%edi
1cc2(2): xor %eax,%eax
1cc4(5): call 0xfffff84c(%rip)
1cc9(3): mov %rbp,%rdi
1ccc(5): call 0x4d4(%rip)
1cd1(7): lea 0x3ce3(%rip),%rsi
1cd8(3): mov %rax,%rdx
1cdb(5): mov $0x1,%edi
1ce0(2): xor %eax,%eax
1ce2(5): call 0xfffff82e(%rip)
1ce7(7): lea 0x3b39(%rip),%rcx
1cee(6): mov $0xffffffff,%r8d
1cf4(5): mov $0x15,%edx
1cf9(5): mov $0x1,%esi
1cfe(3): mov %rbx,%rdi
1d01(2): xor %eax,%eax
1d03(5): call 0xfffff8bd(%rip)
1d08(7): lea 0x3cbc(%rip),%rsi
1d0f(3): mov %rbx,%rdx
1d12(5): mov $0x1,%edi
1d17(2): xor %eax,%eax
1d19(5): call 0xfffff7f7(%rip)
1d1e(3): mov %rbp,%rdi
1d21(5): call 0x47f(%rip)
1d26(7): lea 0x3cac(%rip),%rsi
1d2d(3): mov %rax,%rdx
1d30(5): mov $0x1,%edi
1d35(2): xor %eax,%eax
1d37(5): call 0xfffff7d9(%rip)
1d3c(7): lea 0x3ae4(%rip),%rcx
1d43(6): mov $0x7fffffff,%r8d
1d49(5): mov $0x15,%edx
1d4e(5): mov $0x1,%esi
1d53(3): mov %rbx,%rdi
1d56(2): xor %eax,%eax
1d58(5): call 0xfffff868(%rip)
1d5d(7): lea 0x3c85(%rip),%rsi
1d64(3): mov %rbx,%rdx
1d67(5): mov $0x1,%edi
1d6c(2): xor %eax,%eax
1d6e(5): call 0xfffff7a2(%rip)
1d73(3): mov %rbp,%rdi
1d76(5): call 0x42a(%rip)
1d7b(7): lea 0x3c75(%rip),%rsi
1d82(3): mov %rax,%rdx
1d85(5): mov $0x1,%edi
1d8a(2): xor %eax,%eax
1d8c(5): call 0xfffff784(%rip)
1d91(7): lea 0x3a93(%rip),%rcx
1d98(7): mov $0x80000000,%r8
1d9f(5): mov $0x15,%edx
1da4(5): mov $0x1,%esi
1da9(3): mov %rbx,%rdi
1dac(2): xor %eax,%eax
1dae(5): call 0xfffff812(%rip)
1db3(7): lea 0x3c4d(%rip),%rsi
1dba(3): mov %rbx,%rdx
1dbd(5): mov $0x1,%edi
1dc2(2): xor %eax,%eax
1dc4(5): call 0xfffff74c(%rip)
1dc9(3): mov %rbp,%rdi
1dcc(5): call 0x3d4(%rip)
1dd1(7): lea 0x3c3d(%rip),%rsi
1dd8(3): mov %rax,%rdx
1ddb(5): mov $0x1,%edi
1de0(2): xor %eax,%eax
1de2(5): call 0xfffff72e(%rip)
1de7(7): lea 0x3a39(%rip),%rcx
1dee(a): mov $0x9223372036854775807,%r8
1df8(5): mov $0x15,%edx
1dfd(5): mov $0x1,%esi
1e02(3): mov %rbx,%rdi
1e05(2): xor %eax,%eax
1e07(5): call 0xfffff7b9(%rip)
1e0c(7): lea 0x3c12(%rip),%rsi
1e13(3): mov %rbx,%rdx
1e16(5): mov $0x1,%edi
1e1b(2): xor %eax,%eax
1e1d(5): call 0xfffff6f3(%rip)
1e22(3): mov %rbp,%rdi
1e25(5): call 0x37b(%rip)
1e2a(7): lea 0x3c02(%rip),%rsi
1e31(3): mov %rax,%rdx
1e34(5): mov $0x1,%edi
1e39(2): xor %eax,%eax
1e3b(5): call 0xfffff6d5(%rip)
1e40(7): lea 0x39e4(%rip),%rcx
1e47(a): mov $0x-9223372036854775808,%r8
1e51(5): mov $0x15,%edx
1e56(5): mov $0x1,%esi
1e5b(3): mov %rbx,%rdi
1e5e(2): xor %eax,%eax
1e60(5): call 0xfffff760(%rip)
1e65(7): lea 0x3bd7(%rip),%rsi
1e6c(3): mov %rbx,%rdx
1e6f(5): mov $0x1,%edi
1e74(2): xor %eax,%eax
1e76(5): call 0xfffff69a(%rip)
1e7b(3): mov %rbp,%rdi
1e7e(5): call 0x322(%rip)
1e83(7): lea 0x3bc7(%rip),%rsi
1e8a(3): mov %rax,%rdx
1e8d(5): mov $0x1,%edi
1e92(2): xor %eax,%eax
1e94(5): call 0xfffff67c(%rip)
1e99(7): lea 0x3987(%rip),%rcx
1ea0(a): mov $0x9223372036854775807,%r8
1eaa(5): mov $0x15,%edx
1eaf(5): mov $0x1,%esi
1eb4(3): mov %rbx,%rdi
1eb7(2): xor %eax,%eax
1eb9(5): call 0xfffff707(%rip)
1ebe(7): lea 0x3bbd(%rip),%rsi
1ec5(3): mov %rbx,%rdx
1ec8(5): mov $0x1,%edi
1ecd(2): xor %eax,%eax
1ecf(5): call 0xfffff641(%rip)
1ed4(3): mov %rbp,%rdi
1ed7(5): call 0x2c9(%rip)
1edc(7): lea 0x3baf(%rip),%rsi
1ee3(3): mov %rax,%rdx
1ee6(5): mov $0x1,%edi
1eeb(2): xor %eax,%eax
1eed(5): call 0xfffff623(%rip)
1ef2(7): lea 0x3932(%rip),%rcx
1ef9(a): mov $0x-9223372036854775808,%r8
1f03(5): mov $0x15,%edx
1f08(5): mov $0x1,%esi
1f0d(3): mov %rbx,%rdi
1f10(2): xor %eax,%eax
1f12(5): call 0xfffff6ae(%rip)
1f17(7): lea 0x3b43(%rip),%rsi
1f1e(3): mov %rbx,%rdx
1f21(5): mov $0x1,%edi
1f26(2): xor %eax,%eax
1f28(5): call 0xfffff5e8(%rip)
1f2d(3): mov %rbp,%rdi
1f30(5): call 0x270(%rip)
1f35(7): lea 0x3b34(%rip),%rsi
1f3c(3): mov %rax,%rdx
1f3f(5): mov $0x1,%edi
1f44(2): xor %eax,%eax
1f46(5): call 0xfffff5ca(%rip)
1f4b(7): lea 0x38d5(%rip),%rcx
1f52(7): mov $0xffffffff,%r8
1f59(5): mov $0x15,%edx
1f5e(5): mov $0x1,%esi
1f63(3): mov %rbx,%rdi
1f66(2): xor %eax,%eax
1f68(5): call 0xfffff658(%rip)
1f6d(7): lea 0x3b0d(%rip),%rsi
1f74(3): mov %rbx,%rdx
1f77(5): mov $0x1,%edi
1f7c(2): xor %eax,%eax
1f7e(5): call 0xfffff592(%rip)
1f83(3): mov %rbp,%rdi
1f86(5): call 0x21a(%rip)
1f8b(7): lea 0x3aff(%rip),%rsi
1f92(3): mov %rax,%rdx
1f95(5): mov $0x1,%edi
1f9a(2): xor %eax,%eax
1f9c(5): call 0xfffff574(%rip)
1fa1(7): lea 0x3afb(%rip),%rsi
1fa8(5): mov $0x1,%edi
1fad(2): xor %eax,%eax
1faf(5): call 0xfffff561(%rip)
1fb4(8): movss 0x3c98(%rip),%xmm0
1fbc(5): call 0x254(%rip)
1fc1(7): lea 0x3ae4(%rip),%rsi
1fc8(5): mov $0x1,%edi
1fcd(2): xor %eax,%eax
1fcf(5): call 0xfffff541(%rip)
1fd4(8): movss 0x3c7c(%rip),%xmm0
1fdc(5): call 0x234(%rip)
1fe1(7): lea 0x3ace(%rip),%rsi
1fe8(5): mov $0x1,%edi
1fed(2): xor %eax,%eax
1fef(5): call 0xfffff521(%rip)
1ff4(8): movsd 0x3c64(%rip),%xmm0
1ffc(5): call 0x264(%rip)
2001(7): lea 0x3ab8(%rip),%rsi
2008(5): mov $0x1,%edi
200d(2): xor %eax,%eax
200f(5): call 0xfffff501(%rip)
2014(8): movsd 0x3c4c(%rip),%xmm0
201c(5): call 0x244(%rip)
2021(7): lea 0x3a8d(%rip),%rsi
2028(5): mov $0x1,%edi
202d(2): xor %eax,%eax
202f(5): call 0xfffff4e1(%rip)
2034(a): mov $0x-9223372036854775808,%rax
203e(2): push $0x1
2040(1): push %rax
2041(5): call 0x26f(%rip)
2046(7): lea 0x3a72(%rip),%rsi
204d(4): add $0x20,%rsp
2051(5): mov $0x1,%edi
2056(2): xor %eax,%eax
2058(5): call 0xfffff4b8(%rip)
205d(5): push $0x7ffe
2062(2): push $0xff
2064(5): call 0x24c(%rip)
2069(1): pop %rdx
206a(1): pop %rcx
206b(5): mov 0x18(%rsp),%rcx
2070(9): xor $0x28,%rcx
2079(2): jnz 0xb(%rip)
207b(4): add $0x28,%rsp
207f(2): xor %eax,%eax
2081(1): pop %rbx
2082(1): pop %rbp
2083(1): ret near (%rsp)
2084(5): call 0xfffff36c(%rip)

"_start" :
2090(2): xor %ebp,%ebp
2092(3): mov %rdx,%r9
2095(1): pop %rsi
2096(3): mov %rsp,%rdx
2099(4): and $0xfffffff0,%rsp
209d(1): push %rax
209e(1): push %rsp
209f(7): lea 0x365a(%rip),%r8
20a6(7): lea 0x35e3(%rip),%rcx
20ad(7): lea 0xfffff52c(%rip),%rdi
20b4(6): call 0x205f16(%rip)
20ba(1): hlt 

"deregister_tm_clones" :
20c0(7): lea 0x205fb9(%rip),%rdi
20c7(1): push %rbp
20c8(7): lea 0x205fb1(%rip),%rax
20cf(3): cmp %rdi,%rax
20d2(3): mov %rsp,%rbp
20d5(2): jz 0x1b(%rip)
20d7(7): mov 0x205eea(%rip),%rax
20de(3): test %rax,%rax
20e1(2): jz 0xf(%rip)
20e3(1): pop %rbp
20e4(2): jmp %rax
20e6(a): nop 0x0(%rax,%rax,1)
20f0(1): pop %rbp
20f1(1): ret near (%rsp)

"register_tm_clones" :
2100(7): lea 0x205f79(%rip),%rdi
2107(7): lea 0x205f72(%rip),%rsi
210e(1): push %rbp
210f(3): sub %rdi,%rsi
2112(3): mov %rsp,%rbp
2115(4): sar $0x3,%rsi
2119(3): mov %rsi,%rax
211c(4): shr $0x3f,%rax
2120(3): add %rax,%rsi
2123(3): sar $0x1,%rsi
2126(2): jz 0x1a(%rip)
2128(7): mov 0x205eb1(%rip),%rax
212f(3): test %rax,%rax
2132(2): jz 0xe(%rip)
2134(1): pop %rbp
2135(2): jmp %rax
2137(9): nop 0x0(%rax,%rax,1)
2140(1): pop %rbp
2141(1): ret near (%rsp)

"__do_global_dtors_aux" :
2150(7): cmp $0x0,0x205f71(%rip)
2157(2): jnz 0x31(%rip)
2159(8): cmp $0x0,0x205e87(%rip)
2161(1): push %rbp
2162(3): mov %rsp,%rbp
2165(2): jz 0xe(%rip)
2167(7): mov 0x205e9a(%rip),%rdi
216e(5): call 0xfffff462(%rip)
2173(5): call 0xffffff4d(%rip)
2178(7): mov $0x1,0x205f49(%rip)
217f(1): pop %rbp
2180(1): ret near (%rsp)
2181(7): nop 0x0(%rax)
2188(2): REP ret near (%rsp)

"frame_dummy" :
2190(1): push %rbp
2191(3): mov %rsp,%rbp
2194(1): pop %rbp
2195(5): jmp 0xffffff6b(%rip)

"decimal_absval_add_one" :
21a0(1): push %rbp
21a1(1): push %rbx
21a2(2): xor %eax,%eax
21a4(4): sub $0x8,%rsp
21a8(4): movzx 0x1(%rdi),%ebp
21ac(4): cmp $0x2d,%bpl
21b0(3): setz %al
21b3(5): lea 0x1(%rdi,%rax,1),%rbx
21b8(3): mov %rbx,%rdi
21bb(5): call 0xfffff225(%rip)
21c0(3): add %rbx,%rax
21c3(4): mov $0x30,0xffffffff(%rbx)
21c7(4): movzx 0xffffffff(%rax),%ecx
21cb(4): lea 0xffffffff(%rax),%rdx
21cf(3): cmp $0x39,%cl
21d2(2): jnz 0x15(%rip)
21d4(4): nop 0x0(%rax)
21d8(3): mov $0x30,(%rdx)
21db(4): sub $0x1,%rdx
21df(3): movzx (%rdx),%ecx
21e2(3): cmp $0x39,%cl
21e5(2): jz 0xfffffff3(%rip)
21e7(3): add $0x1,%ecx
21ea(3): mov %rdx,%rax
21ed(3): cmp %rdx,%rbx
21f0(4): cmovbe %rbx,%rax
21f4(4): cmp $0x2d,%bpl
21f8(2): mov %cl,(%rdx)
21fa(2): jnz 0xa(%rip)
21fc(4): mov $0x2d,0xffffffff(%rax)
2200(4): sub $0x1,%rax
2204(4): add $0x8,%rsp
2208(1): pop %rbx
2209(1): pop %rbp
220a(1): ret near (%rsp)

"print_FLT" :
2210(1): push %rbx
2211(2): xor %ecx,%ecx
2213(5): mov $0x1,%edx
2218(5): mov $0x1f,%esi
221d(4): sub $0x30,%rsp
2221(3): mov %rsp,%rbx
2224(3): mov %rbx,%rdi
2227(9): mov $0x28,%rax
2230(5): mov %rax,0x28(%rsp)
2235(2): xor %eax,%eax
2237(5): call 0x669(%rip)
223c(3): mov %rbx,%rdi
223f(5): call 0xfffff131(%rip)
2244(5): mov 0x28(%rsp),%rax
2249(9): xor $0x28,%rax
2252(2): jnz 0x8(%rip)
2254(4): add $0x30,%rsp
2258(1): pop %rbx
2259(1): ret near (%rsp)
225a(5): call 0xfffff196(%rip)

"print_DBL" :
2260(1): push %rbx
2261(2): xor %ecx,%ecx
2263(5): mov $0x1,%edx
2268(5): mov $0x28,%esi
226d(4): sub $0x30,%rsp
2271(3): mov %rsp,%rbx
2274(3): mov %rbx,%rdi
2277(9): mov $0x28,%rax
2280(5): mov %rax,0x28(%rsp)
2285(2): xor %eax,%eax
2287(5): call 0x4a9(%rip)
228c(3): mov %rbx,%rdi
228f(5): call 0xfffff0e1(%rip)
2294(5): mov 0x28(%rsp),%rax
2299(9): xor $0x28,%rax
22a2(2): jnz 0x8(%rip)
22a4(4): add $0x30,%rsp
22a8(1): pop %rbx
22a9(1): ret near (%rsp)
22aa(5): call 0xfffff146(%rip)

"print_LDBL" :
22b0(1): push %rbx
22b1(2): xor %ecx,%ecx
22b3(5): mov $0x1,%edx
22b8(5): mov $0x2d,%esi
22bd(4): sub $0x40,%rsp
22c1(9): mov $0x28,%rax
22ca(5): mov %rax,0x38(%rsp)
22cf(2): xor %eax,%eax
22d1(3): mov %rsp,%rbx
22d4(4): push 0x58(%rsp)
22d8(4): push 0x58(%rsp)
22dc(3): mov %rbx,%rdi
22df(5): call 0x731(%rip)
22e4(3): mov %rbx,%rdi
22e7(5): call 0xfffff089(%rip)
22ec(1): pop %rax
22ed(1): pop %rdx
22ee(5): mov 0x38(%rsp),%rax
22f3(9): xor $0x28,%rax
22fc(2): jnz 0x8(%rip)
22fe(4): add $0x40,%rsp
2302(1): pop %rbx
2303(1): ret near (%rsp)
2304(5): call 0xfffff0ec(%rip)

"usage" :
2310(2): push %r13
2312(2): push %r12
2314(5): mov $0x5,%edx
2319(1): push %rbp
231a(1): push %rbx
231b(2): mov %edi,%ebp
231d(7): sub $0x88,%rsp
2324(7): mov 0x205db5(%rip),%rbx
232b(9): mov $0x28,%rax
2334(5): mov %rax,0x78(%rsp)
2339(2): xor %eax,%eax
233b(2): test %edi,%edi
233d(2): jz 0x30(%rip)
233f(7): lea 0x378a(%rip),%rsi
2346(2): xor %edi,%edi
2348(5): call 0xfffff078(%rip)
234d(7): mov 0x205d6c(%rip),%rdi
2354(3): mov %rax,%rdx
2357(3): mov %rbx,%rcx
235a(5): mov $0x1,%esi
235f(2): xor %eax,%eax
2361(5): call 0xfffff21f(%rip)
2366(2): mov %ebp,%edi
2368(5): call 0xfffff1f8(%rip)
236d(7): lea 0x33da(%rip),%rsi
2374(2): xor %edi,%edi
2376(5): call 0xfffff04a(%rip)
237b(3): mov %rbx,%rdx
237e(3): mov %rax,%rsi
2381(5): mov $0x1,%edi
2386(2): xor %eax,%eax
2388(5): call 0xfffff188(%rip)
238d(7): mov 0x205cf4(%rip),%rbx
2394(7): lea 0x375d(%rip),%rsi
239b(5): mov $0x5,%edx
23a0(2): xor %edi,%edi
23a2(5): call 0xfffff01e(%rip)
23a7(3): mov %rbx,%rsi
23aa(3): mov %rax,%rdi
23ad(5): call 0xfffff0c3(%rip)
23b2(7): mov 0x205ccf(%rip),%rbx
23b9(7): lea 0x3788(%rip),%rsi
23c0(5): mov $0x5,%edx
23c5(2): xor %edi,%edi
23c7(5): call 0xffffeff9(%rip)
23cc(3): mov %rbx,%rsi
23cf(3): mov %rax,%rdi
23d2(5): call 0xfffff09e(%rip)
23d7(7): mov 0x205caa(%rip),%rbx
23de(7): lea 0x3793(%rip),%rsi
23e5(5): mov $0x5,%edx
23ea(2): xor %edi,%edi
23ec(5): call 0xffffefd4(%rip)
23f1(3): mov %rbx,%rsi
23f4(3): mov %rax,%rdi
23f7(7): lea 0x3346(%rip),%rbx
23fe(5): call 0xfffff072(%rip)
2403(7): lea 0x334f(%rip),%rax
240a(7): lea 0x3389(%rip),%rcx
2411(9): mov $0x0,0x60(%rsp)
241a(9): mov $0x0,0x68(%rsp)
2423(3): mov %rsp,%rdx
2426(4): mov %rax,(%rsp)
242a(7): lea 0x332a(%rip),%rax
2431(5): mov %rcx,0x30(%rsp)
2436(7): lea 0x3367(%rip),%rcx
243d(5): mov %rax,0x8(%rsp)
2442(7): lea 0x338a(%rip),%rax
2449(5): mov %rcx,0x40(%rsp)
244e(7): lea 0x3359(%rip),%rcx
2455(5): mov %rax,0x10(%rsp)
245a(7): lea 0x330a(%rip),%rax
2461(5): mov %rcx,0x50(%rsp)
2466(5): mov %rax,0x18(%rsp)
246b(7): lea 0x330f(%rip),%rax
2472(5): mov %rax,0x20(%rsp)
2477(7): lea 0x330d(%rip),%rax
247e(5): mov %rax,0x28(%rsp)
2483(5): mov %rax,0x38(%rsp)
2488(5): mov %rax,0x48(%rsp)
248d(5): mov %rax,0x58(%rsp)
2492(6): nop 0x0(%rax,%rax,1)
2498(4): add $0x10,%rdx
249c(3): mov (%rdx),%rdi
249f(3): test %rdi,%rdi
24a2(2): jz 0x15(%rip)
24a4(5): mov $0xa,%ecx
24a9(3): mov %rbx,%rsi
24ac(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
24ae(3): setnbe %al
24b1(2): sbb $0x0,%al
24b3(2): test %al,%al
24b5(2): jnz 0xffffffe3(%rip)
24b7(4): mov 0x8(%rdx),%r12
24bb(2): xor %edi,%edi
24bd(5): mov $0x5,%edx
24c2(7): lea 0x32ef(%rip),%rsi
24c9(3): test %r12,%r12
24cc(6): jz 0xc7(%rip)
24d2(5): call 0xffffeeee(%rip)
24d7(7): lea 0x36d2(%rip),%rcx
24de(7): lea 0x32ea(%rip),%rdx
24e5(3): mov %rax,%rsi
24e8(5): mov $0x1,%edi
24ed(2): xor %eax,%eax
24ef(5): call 0xfffff021(%rip)
24f4(2): xor %esi,%esi
24f6(5): mov $0x5,%edi
24fb(5): call 0xfffff005(%rip)
2500(3): test %rax,%rax
2503(2): jz 0x1e(%rip)
2505(7): lea 0x32d1(%rip),%rsi
250c(5): mov $0x3,%edx
2511(3): mov %rax,%rdi
2514(5): call 0xffffee2c(%rip)
2519(2): test %eax,%eax
251b(6): jnz 0x10d(%rip)
2521(7): lea 0x32b9(%rip),%rsi
2528(2): xor %edi,%edi
252a(5): mov $0x5,%edx
252f(5): call 0xffffee91(%rip)
2534(7): lea 0x3209(%rip),%rcx
253b(7): lea 0x366e(%rip),%rdx
2542(3): mov %rax,%rsi
2545(5): mov $0x1,%edi
254a(2): xor %eax,%eax
254c(5): call 0xffffefc4(%rip)
2551(3): cmp %rbx,%r12
2554(7): lea 0x321a(%rip),%rcx
255b(7): lea 0x3cdf(%rip),%rbx
2562(4): cmove %rcx,%rbx
2566(7): lea 0x36b3(%rip),%rsi
256d(2): xor %edi,%edi
256f(5): mov $0x5,%edx
2574(5): call 0xffffee4c(%rip)
2579(3): mov %rbx,%rcx
257c(3): mov %rax,%rsi
257f(3): mov %r12,%rdx
2582(5): mov $0x1,%edi
2587(2): xor %eax,%eax
2589(5): call 0xffffef87(%rip)
258e(5): jmp 0xfffffdd8(%rip)
2593(5): call 0xffffee2d(%rip)
2598(7): lea 0x3611(%rip),%rcx
259f(7): lea 0x3229(%rip),%rdx
25a6(3): mov %rax,%rsi
25a9(5): mov $0x1,%edi
25ae(2): xor %eax,%eax
25b0(5): call 0xffffef60(%rip)
25b5(2): xor %esi,%esi
25b7(5): mov $0x5,%edi
25bc(5): call 0xffffef44(%rip)
25c1(3): test %rax,%rax
25c4(2): jz 0x1a(%rip)
25c6(7): lea 0x3210(%rip),%rsi
25cd(5): mov $0x3,%edx
25d2(3): mov %rax,%rdi
25d5(5): call 0xffffed6b(%rip)
25da(2): test %eax,%eax
25dc(2): jnz 0x45(%rip)
25de(7): lea 0x31fc(%rip),%rsi
25e5(5): mov $0x5,%edx
25ea(2): xor %edi,%edi
25ec(7): lea 0x3151(%rip),%r12
25f3(7): lea 0x317b(%rip),%rbx
25fa(5): call 0xffffedc6(%rip)
25ff(7): lea 0x313e(%rip),%rcx
2606(7): lea 0x35a3(%rip),%rdx
260d(3): mov %rax,%rsi
2610(5): mov $0x1,%edi
2615(2): xor %eax,%eax
2617(5): call 0xffffeef9(%rip)
261c(5): jmp 0xffffff4a(%rip)
2621(7): lea 0x311c(%rip),%r12
2628(7): mov 0x205a59(%rip),%r13
262f(7): lea 0x35a2(%rip),%rsi
2636(2): xor %edi,%edi
2638(5): mov $0x5,%edx
263d(5): call 0xffffed83(%rip)
2642(3): mov %r13,%rsi
2645(3): mov %rax,%rdi
2648(5): call 0xffffee28(%rip)
264d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2660(7): mov %rdi,0x205a71(%rip)
2667(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2670(7): mov %dil,0x205a59(%rip)
2677(1): ret near (%rsp)

"close_stdout" :
2680(1): push %rbp
2681(1): push %rbx
2682(4): sub $0x8,%rsp
2686(7): mov 0x2059fb(%rip),%rdi
268d(5): call 0x2dc3(%rip)
2692(2): test %eax,%eax
2694(2): jz 0x18(%rip)
2696(5): call 0xffffec9a(%rip)
269b(7): cmp $0x0,0x205a2e(%rip)
26a2(3): mov %rax,%rbx
26a5(2): jz 0x1e(%rip)
26a7(3): cmp $0x20,(%rax)
26aa(2): jnz 0x19(%rip)
26ac(7): mov 0x205a0d(%rip),%rdi
26b3(5): call 0x2d9d(%rip)
26b8(2): test %eax,%eax
26ba(2): jnz 0x48(%rip)
26bc(4): add $0x8,%rsp
26c0(1): pop %rbx
26c1(1): pop %rbp
26c2(1): ret near (%rsp)
26c3(7): lea 0x35a6(%rip),%rsi
26ca(2): xor %edi,%edi
26cc(5): mov $0x5,%edx
26d1(5): call 0xffffecef(%rip)
26d6(7): mov 0x2059fb(%rip),%rdi
26dd(3): mov %rax,%rbp
26e0(3): test %rdi,%rdi
26e3(2): jz 0x2a(%rip)
26e5(5): call 0x220b(%rip)
26ea(2): mov (%rbx),%esi
26ec(7): lea 0x3589(%rip),%rdx
26f3(3): mov %rax,%rcx
26f6(3): mov %rbp,%r8
26f9(2): xor %edi,%edi
26fb(2): xor %eax,%eax
26fd(5): call 0xffffee33(%rip)
2702(6): mov 0x205908(%rip),%edi
2708(5): call 0xffffec48(%rip)
270d(2): mov (%rbx),%esi
270f(7): lea 0x356a(%rip),%rdx
2716(3): mov %rax,%rcx
2719(2): xor %edi,%edi
271b(2): xor %eax,%eax
271d(5): call 0xffffee13(%rip)
2722(2): jmp 0xffffffe0(%rip)

"dtoastr" :
2730(2): push %r15
2732(2): push %r14
2734(3): mov %ecx,%r14d
2737(2): push %r13
2739(2): push %r12
273b(3): mov %rdi,%r12
273e(1): push %rbp
273f(1): push %rbx
2740(3): mov %rsi,%rbp
2743(4): movapd %xmm0,%xmm3
2747(4): sub $0x38,%rsp
274b(5): movsd %xmm0,(%rsp)
2750(4): pxor %xmm0,%xmm0
2754(9): mov $0x28,%rax
275d(5): mov %rax,0x28(%rsp)
2762(2): xor %eax,%eax
2764(4): ucomisd %xmm3,%xmm0
2768(6): jnbe 0x118(%rip)
276e(5): movsd (%rsp),%xmm0
2773(2): mov %edx,%eax
2775(5): lea 0x1d(%rsp),%r13
277a(2): mov %edx,%ecx
277c(3): and $0x1,%eax
277f(2): shr $0x1,%ecx
2781(5): mov $0x2d25,%esi
2786(5): lea 0x1(%r13,%rax,1),%rdi
278b(3): and $0x1,%ecx
278e(2): mov %edx,%eax
2790(5): mov %si,0x1d(%rsp)
2795(3): shr $0x2,%eax
2798(5): mov $0x1,%ebx
279d(4): lea 0x0(%rdi,%rcx,1),%rsi
27a1(3): and $0x1,%eax
27a4(3): mov $0x2b,(%rdi)
27a7(8): movsd 0x34b1(%rip),%xmm1
27af(5): mov $0x2e2a,%edi
27b4(4): lea 0x0(%rsi,%rax,1),%rcx
27b8(2): mov %edx,%eax
27ba(3): and $0x10,%edx
27bd(3): shr $0x3,%eax
27c0(3): mov $0x20,(%rsi)
27c3(7): mov $0xffffffff,%r15
27ca(3): and $0x1,%eax
27cd(3): mov $0x30,(%rcx)
27d0(3): add %rcx,%rax
27d3(3): cmp $0x1,%edx
27d6(2): sbb %edx,%edx
27d8(3): mov %di,(%rax)
27db(4): mov $0x2a,0x2(%rax)
27df(3): and $0x20,%edx
27e2(4): mov $0x0,0x4(%rax)
27e6(3): add $0x47,%edx
27e9(4): ucomisd %xmm0,%xmm1
27ed(3): mov %dl,0x3(%rax)
27f0(5): mov $0xf,%eax
27f5(3): cmovbe %eax,%ebx
27f8(2): jmp 0xb(%rip)
27fa(6): nop 0x0(%rax,%rax,1)
2800(3): add $0x1,%ebx
2803(4): sub $0x8,%rsp
2807(3): mov %r15,%rcx
280a(5): mov $0x1,%edx
280f(1): push %rbx
2810(3): mov %r14d,%r9d
2813(3): mov %r13,%r8
2816(3): mov %rbp,%rsi
2819(3): mov %r12,%rdi
281c(5): mov $0x1,%eax
2821(6): movsd 0x10(%rsp),%xmm0
2827(5): call 0xffffead9(%rip)
282c(2): test %eax,%eax
282e(1): pop %rdx
282f(1): pop %rcx
2830(2): js 0x2a(%rip)
2832(3): cmp $0x10,%ebx
2835(2): jnle 0x25(%rip)
2837(3): movsxd %eax,%rdx
283a(3): cmp %rbp,%rdx
283d(2): jnb 0xffffffc3(%rip)
283f(2): xor %esi,%esi
2841(3): mov %r12,%rdi
2844(4): mov %eax,0xc(%rsp)
2848(5): call 0xffffeb38(%rip)
284d(5): ucomisd (%rsp),%xmm0
2852(2): jp 0xffffffae(%rip)
2854(4): mov 0xc(%rsp),%eax
2858(2): jnz 0xffffffa8(%rip)
285a(5): mov 0x28(%rsp),%rsi
285f(9): xor $0x28,%rsi
2868(2): jnz 0x29(%rip)
286a(4): add $0x38,%rsp
286e(1): pop %rbx
286f(1): pop %rbp
2870(2): pop %r12
2872(2): pop %r13
2874(2): pop %r14
2876(2): pop %r15
2878(1): ret near (%rsp)
2879(7): nop 0x0(%rax)
2880(4): movapd %xmm3,%xmm0
2884(8): xorpd 0x3404(%rip),%xmm0
288c(5): jmp 0xfffffee7(%rip)
2891(5): call 0xffffeb5f(%rip)

"ftoastr" :
28a0(2): push %r15
28a2(4): pxor %xmm4,%xmm4
28a6(2): push %r14
28a8(2): push %r13
28aa(3): mov %ecx,%r15d
28ad(2): push %r12
28af(1): push %rbp
28b0(3): mov %rdi,%r12
28b3(1): push %rbx
28b4(3): movaps %xmm0,%xmm3
28b7(4): cvtss2sd %xmm0,%xmm4
28bb(3): mov %rsi,%rbp
28be(4): sub $0x38,%rsp
28c2(6): movss %xmm0,0xc(%rsp)
28c8(4): pxor %xmm0,%xmm0
28cc(9): mov $0x28,%rax
28d5(5): mov %rax,0x28(%rsp)
28da(2): xor %eax,%eax
28dc(5): movsd %xmm4,(%rsp)
28e1(3): ucomiss %xmm3,%xmm0
28e4(6): jnbe 0x114(%rip)
28ea(6): movss 0xc(%rsp),%xmm0
28f0(2): mov %edx,%eax
28f2(5): lea 0x1d(%rsp),%r13
28f7(2): mov %edx,%ecx
28f9(3): and $0x1,%eax
28fc(2): shr $0x1,%ecx
28fe(5): mov $0x2d25,%esi
2903(5): lea 0x1(%r13,%rax,1),%rdi
2908(3): and $0x1,%ecx
290b(2): mov %edx,%eax
290d(5): mov %si,0x1d(%rsp)
2912(3): shr $0x2,%eax
2915(7): mov $0xffffffff,%r14
291c(4): lea 0x0(%rdi,%rcx,1),%rsi
2920(3): and $0x1,%eax
2923(3): mov $0x2b,(%rdi)
2926(8): movss 0x3326(%rip),%xmm1
292e(5): mov $0x2e2a,%edi
2933(4): lea 0x0(%rsi,%rax,1),%rcx
2937(2): mov %edx,%eax
2939(3): and $0x10,%edx
293c(3): shr $0x3,%eax
293f(3): mov $0x20,(%rsi)
2942(3): and $0x1,%eax
2945(3): mov $0x30,(%rcx)
2948(3): add %rcx,%rax
294b(3): cmp $0x1,%edx
294e(2): sbb %edx,%edx
2950(2): xor %ebx,%ebx
2952(3): mov %di,(%rax)
2955(3): and $0x20,%edx
2958(4): mov $0x2a,0x2(%rax)
295c(4): mov $0x0,0x4(%rax)
2960(3): add $0x47,%edx
2963(3): ucomiss %xmm0,%xmm1
2966(3): mov %dl,0x3(%rax)
2969(3): setbe %bl
296c(4): lea 0x1(%rbx,%rbx,4),%ebx
2970(2): jmp 0xb(%rip)
2972(6): nop 0x0(%rax,%rax,1)
2978(3): add $0x1,%ebx
297b(4): sub $0x8,%rsp
297f(3): mov %r14,%rcx
2982(5): mov $0x1,%edx
2987(1): push %rbx
2988(3): mov %r15d,%r9d
298b(3): mov %r13,%r8
298e(3): mov %rbp,%rsi
2991(3): mov %r12,%rdi
2994(5): mov $0x1,%eax
2999(6): movsd 0x10(%rsp),%xmm0
299f(5): call 0xffffe961(%rip)
29a4(2): test %eax,%eax
29a6(1): pop %rdx
29a7(1): pop %rcx
29a8(2): js 0x2a(%rip)
29aa(3): cmp $0x8,%ebx
29ad(2): jnle 0x25(%rip)
29af(3): movsxd %eax,%rdx
29b2(3): cmp %rbp,%rdx
29b5(2): jnb 0xffffffc3(%rip)
29b7(2): xor %esi,%esi
29b9(3): mov %r12,%rdi
29bc(4): mov %eax,0x8(%rsp)
29c0(5): call 0xffffea80(%rip)
29c5(5): ucomiss 0xc(%rsp),%xmm0
29ca(2): jp 0xffffffae(%rip)
29cc(4): mov 0x8(%rsp),%eax
29d0(2): jnz 0xffffffa8(%rip)
29d2(5): mov 0x28(%rsp),%rsi
29d7(9): xor $0x28,%rsi
29e0(2): jnz 0x27(%rip)
29e2(4): add $0x38,%rsp
29e6(1): pop %rbx
29e7(1): pop %rbp
29e8(2): pop %r12
29ea(2): pop %r13
29ec(2): pop %r14
29ee(2): pop %r15
29f0(1): ret near (%rsp)
29f1(7): nop 0x0(%rax)
29f8(3): movaps %xmm3,%xmm0
29fb(7): xorps 0x329e(%rip),%xmm0
2a02(5): jmp 0xfffffeee(%rip)
2a07(5): call 0xffffe9e9(%rip)

"ldtoastr" :
2a10(2): push %r15
2a12(2): push %r14
2a14(2): fld1 %st0
2a16(2): push %r13
2a18(2): push %r12
2a1a(3): mov %ecx,%r14d
2a1d(1): push %rbp
2a1e(1): push %rbx
2a1f(3): mov %rdi,%r12
2a22(3): mov %rsi,%rbp
2a25(4): sub $0x38,%rsp
2a29(4): fld 0x70(%rsp),%st0
2a2d(2): fxch %st1,%st0
2a2f(9): mov $0x28,%rax
2a38(5): mov %rax,0x28(%rsp)
2a3d(2): xor %eax,%eax
2a3f(2): fucomip %st1,%st0
2a41(6): jnbe 0x10f(%rip)
2a47(2): fstp %st0,%st0
2a49(4): fld 0x70(%rsp),%st0
2a4d(5): mov $0x2d25,%eax
2a52(5): lea 0x1d(%rsp),%r13
2a57(2): mov %edx,%ecx
2a59(5): mov %ax,0x1d(%rsp)
2a5e(2): mov %edx,%eax
2a60(2): shr $0x1,%ecx
2a62(3): and $0x1,%eax
2a65(3): and $0x1,%ecx
2a68(5): mov $0x1,%ebx
2a6d(5): lea 0x1(%r13,%rax,1),%rdi
2a72(2): mov %edx,%eax
2a74(7): mov $0xffffffff,%r15
2a7b(3): shr $0x2,%eax
2a7e(4): lea 0x0(%rdi,%rcx,1),%rsi
2a82(3): and $0x1,%eax
2a85(3): mov $0x2b,(%rdi)
2a88(4): lea 0x0(%rsi,%rax,1),%rcx
2a8c(2): mov %edx,%eax
2a8e(3): and $0x10,%edx
2a91(6): fld 0x3219(%rip),%st0
2a97(3): shr $0x3,%eax
2a9a(3): mov $0x20,(%rsi)
2a9d(3): mov $0x30,(%rcx)
2aa0(3): and $0x1,%eax
2aa3(3): add %rcx,%rax
2aa6(3): cmp $0x1,%edx
2aa9(2): sbb %edx,%edx
2aab(6): mov $0x4c2a2e2a,(%rax)
2ab1(4): mov $0x0,0x5(%rax)
2ab5(3): and $0x20,%edx
2ab8(3): add $0x47,%edx
2abb(3): mov %dl,0x4(%rax)
2abe(5): mov $0x12,%eax
2ac3(2): fucomip %st1,%st0
2ac5(2): fstp %st0,%st0
2ac7(3): cmovbe %eax,%ebx
2aca(2): jmp 0x9(%rip)
2acc(4): nop 0x0(%rax)
2ad0(3): add $0x1,%ebx
2ad3(4): push 0x78(%rsp)
2ad7(4): push 0x78(%rsp)
2adb(2): xor %eax,%eax
2add(3): mov %r14d,%r9d
2ae0(3): mov %r13,%r8
2ae3(3): mov %r15,%rcx
2ae6(4): sub $0x8,%rsp
2aea(5): mov $0x1,%edx
2aef(3): mov %rbp,%rsi
2af2(1): push %rbx
2af3(3): mov %r12,%rdi
2af6(5): call 0xffffe80a(%rip)
2afb(4): add $0x20,%rsp
2aff(2): test %eax,%eax
2b01(2): js 0x2f(%rip)
2b03(3): cmp $0x14,%ebx
2b06(2): jnle 0x2a(%rip)
2b08(3): movsxd %eax,%rdx
2b0b(3): cmp %rbp,%rdx
2b0e(2): jnb 0xffffffc2(%rip)
2b10(2): xor %esi,%esi
2b12(3): mov %r12,%rdi
2b15(4): mov %eax,0xc(%rsp)
2b19(5): call 0xffffea07(%rip)
2b1e(4): fld 0x70(%rsp),%st0
2b22(2): fxch %st1,%st0
2b24(2): fucomip %st1,%st0
2b26(2): fstp %st0,%st0
2b28(2): jp 0xffffffa8(%rip)
2b2a(4): mov 0xc(%rsp),%eax
2b2e(2): jnz 0xffffffa2(%rip)
2b30(5): mov 0x28(%rsp),%rsi
2b35(9): xor $0x28,%rsi
2b3e(2): jnz 0x19(%rip)
2b40(4): add $0x38,%rsp
2b44(1): pop %rbx
2b45(1): pop %rbp
2b46(2): pop %r12
2b48(2): pop %r13
2b4a(2): pop %r14
2b4c(2): pop %r15
2b4e(1): ret near (%rsp)
2b4f(1): nop 
2b50(2): fchs %st0
2b52(5): jmp 0xfffffefb(%rip)
2b57(5): call 0xffffe899(%rip)

"parse_long_options" :
2b60(2): push %r13
2b62(2): push %r12
2b64(3): mov %r8,%r13
2b67(1): push %rbp
2b68(1): push %rbx
2b69(3): mov %rdx,%rbp
2b6c(3): mov %rcx,%r12
2b6f(7): sub $0xe8,%rsp
2b76(2): test %al,%al
2b78(2): jz 0x3c(%rip)
2b7a(5): movaps %xmm0,0x60(%rsp)
2b7f(5): movaps %xmm1,0x70(%rsp)
2b84(8): movaps %xmm2,0x80(%rsp)
2b8c(8): movaps %xmm3,0x90(%rsp)
2b94(8): movaps %xmm4,0xa0(%rsp)
2b9c(8): movaps %xmm5,0xb0(%rsp)
2ba4(8): movaps %xmm6,0xc0(%rsp)
2bac(8): movaps %xmm7,0xd0(%rsp)
2bb4(9): mov $0x28,%rax
2bbd(5): mov %rax,0x28(%rsp)
2bc2(2): xor %eax,%eax
2bc4(3): cmp $0x2,%edi
2bc7(6): mov 0x2054d3(%rip),%ebx
2bcd(a): mov $0x0,0x2054c9(%rip)
2bd7(2): jz 0x39(%rip)
2bd9(5): mov 0x28(%rsp),%rax
2bde(9): xor $0x28,%rax
2be7(6): mov %ebx,0x2054b3(%rip)
2bed(a): mov $0x0,0x205499(%rip)
2bf7(6): jnz 0xa3(%rip)
2bfd(7): add $0xe8,%rsp
2c04(1): pop %rbx
2c05(1): pop %rbp
2c06(2): pop %r12
2c08(2): pop %r13
2c0a(1): ret near (%rsp)
2c0b(5): nop 0x0(%rax,%rax,1)
2c10(7): lea 0x204f89(%rip),%rcx
2c17(7): lea 0x30a2(%rip),%rdx
2c1e(3): xor %r8d,%r8d
2c21(5): mov %r9,0x8(%rsp)
2c26(5): call 0xffffe7da(%rip)
2c2b(3): cmp $0xff,%eax
2c2e(2): jz 0xffffffab(%rip)
2c30(3): cmp $0x68,%eax
2c33(5): mov 0x8(%rsp),%r9
2c38(2): jz 0x58(%rip)
2c3a(3): cmp $0x76,%eax
2c3d(2): jnz 0xffffff9c(%rip)
2c3f(8): lea 0x110(%rsp),%rax
2c47(7): mov 0x20543a(%rip),%rdi
2c4e(5): lea 0x10(%rsp),%r8
2c53(3): mov %r13,%rcx
2c56(3): mov %r12,%rdx
2c59(3): mov %rbp,%rsi
2c5c(5): mov %rax,0x18(%rsp)
2c61(5): lea 0x30(%rsp),%rax
2c66(8): mov $0x30,0x10(%rsp)
2c6e(8): mov $0x30,0x14(%rsp)
2c76(5): mov %rax,0x20(%rsp)
2c7b(5): call 0x22d5(%rip)
2c80(2): xor %edi,%edi
2c82(5): call 0xffffe8de(%rip)
2c87(9): nop 0x0(%rax,%rax,1)
2c90(2): xor %edi,%edi
2c92(3): call %r9
2c95(5): jmp 0xffffff44(%rip)
2c9a(5): call 0xffffe756(%rip)

"parse_gnu_standard_options_only" :
2ca0(2): push %r14
2ca2(2): push %r13
2ca4(3): mov %r8,%r14
2ca7(2): push %r12
2ca9(1): push %rbp
2caa(3): mov %rdx,%r12
2cad(1): push %rbx
2cae(3): mov %rcx,%r13
2cb1(7): sub $0xd0,%rsp
2cb8(2): test %al,%al
2cba(8): mov 0x100(%rsp),%rbp
2cc2(2): jz 0x39(%rip)
2cc4(5): movaps %xmm0,0x50(%rsp)
2cc9(5): movaps %xmm1,0x60(%rsp)
2cce(5): movaps %xmm2,0x70(%rsp)
2cd3(8): movaps %xmm3,0x80(%rsp)
2cdb(8): movaps %xmm4,0x90(%rsp)
2ce3(8): movaps %xmm5,0xa0(%rsp)
2ceb(8): movaps %xmm6,0xb0(%rsp)
2cf3(8): movaps %xmm7,0xc0(%rsp)
2cfb(9): mov $0x28,%rax
2d04(5): mov %rax,0x18(%rsp)
2d09(2): xor %eax,%eax
2d0b(7): lea 0x352f(%rip),%rdx
2d12(7): lea 0x2fa7(%rip),%rax
2d19(3): test %r9b,%r9b
2d1c(7): lea 0x204e7d(%rip),%rcx
2d23(4): cmove %rax,%rdx
2d27(3): xor %r8d,%r8d
2d2a(6): mov 0x205370(%rip),%ebx
2d30(a): mov $0x1,0x205366(%rip)
2d3a(5): call 0xffffe6c6(%rip)
2d3f(3): cmp $0xff,%eax
2d42(2): jz 0x66(%rip)
2d44(3): cmp $0x68,%eax
2d47(6): jz 0x89(%rip)
2d4d(3): cmp $0x76,%eax
2d50(2): jnz 0x50(%rip)
2d52(8): lea 0x108(%rsp),%rax
2d5a(7): mov 0x205327(%rip),%rdi
2d61(3): mov %rsp,%r8
2d64(3): mov %r14,%rcx
2d67(3): mov %r13,%rdx
2d6a(3): mov %r12,%rsi
2d6d(5): mov %rax,0x8(%rsp)
2d72(5): lea 0x20(%rsp),%rax
2d77(7): mov $0x30,(%rsp)
2d7e(8): mov $0x30,0x4(%rsp)
2d86(5): mov %rax,0x10(%rsp)
2d8b(5): call 0x21c5(%rip)
2d90(2): xor %edi,%edi
2d92(5): call 0xffffe7ce(%rip)
2d97(9): nop 0x0(%rax,%rax,1)
2da0(6): mov 0x20526a(%rip),%edi
2da6(2): call %rbp
2da8(5): mov 0x18(%rsp),%rax
2dad(9): xor $0x28,%rax
2db6(6): mov %ebx,0x2052e4(%rip)
2dbc(2): jnz 0x1a(%rip)
2dbe(7): add $0xd0,%rsp
2dc5(1): pop %rbx
2dc6(1): pop %rbp
2dc7(2): pop %r12
2dc9(2): pop %r13
2dcb(2): pop %r14
2dcd(1): ret near (%rsp)
2dce(2): nop 
2dd0(2): xor %edi,%edi
2dd2(2): call %rbp
2dd4(2): jmp 0xffffffd4(%rip)
2dd6(5): call 0xffffe61a(%rip)

"set_program_name" :
2de0(3): test %rdi,%rdi
2de3(1): push %rbx
2de4(2): jz 0x79(%rip)
2de6(5): mov $0x2f,%esi
2deb(3): mov %rdi,%rbx
2dee(5): call 0xffffe632(%rip)
2df3(3): test %rax,%rax
2df6(2): jz 0x57(%rip)
2df8(4): lea 0x1(%rax),%r8
2dfc(3): mov %r8,%rdx
2dff(3): sub %rbx,%rdx
2e02(4): cmp $0x6,%rdx
2e06(2): jle 0x47(%rip)
2e08(4): lea 0xfffffffa(%rax),%rsi
2e0c(7): lea 0x2ef5(%rip),%rdi
2e13(5): mov $0x7,%ecx
2e18(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2e1a(3): setnbe %dl
2e1d(3): sbb $0x0,%dl
2e20(2): test %dl,%dl
2e22(2): jnz 0x2b(%rip)
2e24(7): lea 0x2ee5(%rip),%rdi
2e2b(5): mov $0x3,%ecx
2e30(3): mov %r8,%rsi
2e33(3): mov %r8,%rbx
2e36(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2e38(3): setnbe %dl
2e3b(3): sbb $0x0,%dl
2e3e(2): test %dl,%dl
2e40(2): jnz 0xd(%rip)
2e42(4): lea 0x4(%rax),%rbx
2e46(7): mov %rbx,0x205233(%rip)
2e4d(7): mov %rbx,0x20528c(%rip)
2e54(7): mov %rbx,0x20523d(%rip)
2e5b(1): pop %rbx
2e5c(1): ret near (%rsp)
2e5d(7): mov 0x20525c(%rip),%rcx
2e64(7): lea 0x2e65(%rip),%rdi
2e6b(5): mov $0x37,%edx
2e70(5): mov $0x1,%esi
2e75(5): call 0xffffe6fb(%rip)
2e7a(5): call 0xffffe4a6(%rip)

"gettext_quote.part.1" :
2e80(1): push %rbp
2e81(1): push %rbx
2e82(3): mov %rdi,%rbp
2e85(2): mov %esi,%ebx
2e87(4): sub $0x8,%rsp
2e8b(5): call 0x26a5(%rip)
2e90(3): movzx (%rax),%edx
2e93(3): and $0xdf,%edx
2e96(3): cmp $0x55,%dl
2e99(2): jz 0x77(%rip)
2e9b(3): cmp $0x47,%dl
2e9e(2): jz 0x22(%rip)
2ea0(7): lea 0x2e7c(%rip),%rax
2ea7(7): lea 0x2e77(%rip),%rdx
2eae(3): cmp $0x9,%ebx
2eb1(4): cmovne %rdx,%rax
2eb5(4): add $0x8,%rsp
2eb9(1): pop %rbx
2eba(1): pop %rbp
2ebb(1): ret near (%rsp)
2ebc(4): nop 0x0(%rax)
2ec0(4): movzx 0x1(%rax),%edx
2ec4(3): and $0xdf,%edx
2ec7(3): cmp $0x42,%dl
2eca(2): jnz 0xffffffd6(%rip)
2ecc(4): cmp $0x31,0x2(%rax)
2ed0(2): jnz 0xffffffd0(%rip)
2ed2(4): cmp $0x38,0x3(%rax)
2ed6(2): jnz 0xffffffca(%rip)
2ed8(4): cmp $0x30,0x4(%rax)
2edc(2): jnz 0xffffffc4(%rip)
2ede(4): cmp $0x33,0x5(%rax)
2ee2(2): jnz 0xffffffbe(%rip)
2ee4(4): cmp $0x30,0x6(%rax)
2ee8(2): jnz 0xffffffb8(%rip)
2eea(4): cmp $0x0,0x7(%rax)
2eee(2): jnz 0xffffffb2(%rip)
2ef0(4): cmp $0x60,0x0(%rbp)
2ef4(7): lea 0x2e21(%rip),%rax
2efb(7): lea 0x2e1e(%rip),%rdx
2f02(4): cmovne %rdx,%rax
2f06(4): add $0x8,%rsp
2f0a(1): pop %rbx
2f0b(1): pop %rbp
2f0c(1): ret near (%rsp)
2f0d(3): nop (%rax)
2f10(4): movzx 0x1(%rax),%edx
2f14(3): and $0xdf,%edx
2f17(3): cmp $0x54,%dl
2f1a(2): jnz 0xffffff86(%rip)
2f1c(4): movzx 0x2(%rax),%edx
2f20(3): and $0xdf,%edx
2f23(3): cmp $0x46,%dl
2f26(6): jnz 0xffffff7a(%rip)
2f2c(4): cmp $0x2d,0x3(%rax)
2f30(6): jnz 0xffffff70(%rip)
2f36(4): cmp $0x38,0x4(%rax)
2f3a(6): jnz 0xffffff66(%rip)
2f40(4): cmp $0x0,0x5(%rax)
2f44(6): jnz 0xffffff5c(%rip)
2f4a(4): cmp $0x60,0x0(%rbp)
2f4e(7): lea 0x2dbf(%rip),%rax
2f55(7): lea 0x2dbc(%rip),%rdx
2f5c(4): cmovne %rdx,%rax
2f60(4): add $0x8,%rsp
2f64(1): pop %rbx
2f65(1): pop %rbp
2f66(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2f70(2): push %r15
2f72(2): push %r14
2f74(3): mov %r8d,%r15d
2f77(2): push %r13
2f79(2): push %r12
2f7b(3): mov %rdi,%r14
2f7e(1): push %rbp
2f7f(1): push %rbx
2f80(3): mov %r9d,%ebx
2f83(3): mov %rsi,%r13
2f86(3): mov %rcx,%rbp
2f89(3): and $0x2,%ebx
2f8c(7): sub $0xb8,%rsp
2f93(8): mov 0xf0(%rsp),%rax
2f9b(5): mov %rdx,0x10(%rsp)
2fa0(5): mov %r8d,0x8(%rsp)
2fa5(5): mov %r9d,0x78(%rsp)
2faa(5): mov %rax,0x20(%rsp)
2faf(8): mov 0xf8(%rsp),%rax
2fb7(5): mov %rax,0x68(%rsp)
2fbc(8): mov 0x100(%rsp),%rax
2fc4(5): mov %rax,0x60(%rsp)
2fc9(9): mov $0x28,%rax
2fd2(8): mov %rax,0xa8(%rsp)
2fda(2): xor %eax,%eax
2fdc(5): call 0xffffe3f4(%rip)
2fe1(4): cmp $0xa,%r15d
2fe5(5): mov %rax,0x58(%rsp)
2fea(6): jnbe 0x11b5(%rip)
2ff0(7): lea 0x2d89(%rip),%rcx
2ff7(3): mov %r15d,%edx
2ffa(4): movsxd 0x0(%rcx,%rdx,4),%rax
2ffe(3): add %rcx,%rax
3001(2): jmp %rax
3003(5): mov $0x1,0xe(%rsp)
3008(5): mov $0x0,0x7c(%rsp)
300d(3): xor %r12d,%r12d
3010(9): mov $0x0,0x50(%rsp)
3019(5): mov $0x1,0xf(%rsp)
301e(5): mov $0x0,0xd(%rsp)
3023(7): lea 0x2cfb(%rip),%rax
302a(9): mov $0x1,0x18(%rsp)
3033(3): xor %r15d,%r15d
3036(8): mov $0x2,0x8(%rsp)
303e(5): mov %rax,0x48(%rsp)
3043(3): xor %r11d,%r11d
3046(3): mov %rbp,%rax
3049(3): mov %r12d,%r8d
304c(3): mov %r11,%rbp
304f(3): mov %rax,%r11
3052(6): nop 0x0(%rax,%rax,1)
3058(3): cmp %rbp,%r11
305b(4): setnz %r12b
305f(4): cmp $0xffffffff,%r11
3063(2): jnz 0xf(%rip)
3065(5): mov 0x10(%rsp),%rax
306a(4): cmp $0x0,0x0(%rax,%rbp,1)
306e(4): setnz %r12b
3072(3): test %r12b,%r12b
3075(6): jz 0x65b(%rip)
307b(5): cmp $0x2,0x8(%rsp)
3080(5): mov 0x10(%rsp),%rdi
3085(4): lea 0x0(%rdi,%rbp,1),%r9
3089(3): setnz %al
308c(4): and 0xd(%rsp),%al
3090(3): mov %eax,%r10d
3093(6): jz 0xad(%rip)
3099(5): mov 0x18(%rsp),%rax
309e(3): test %rax,%rax
30a1(6): jz 0x42f(%rip)
30a7(4): cmp $0xffffffff,%r11
30ab(5): lea 0x0(%rbp,%rax,1),%rbx
30b0(2): jnz 0x30(%rip)
30b2(4): cmp $0x1,%rax
30b6(2): jbe 0x2a(%rip)
30b8(5): mov %r8b,0x38(%rsp)
30bd(5): mov %r10b,0x30(%rsp)
30c2(5): mov %r9,0x28(%rsp)
30c7(5): call 0xffffe319(%rip)
30cc(6): movzx 0x38(%rsp),%r8d
30d2(6): movzx 0x30(%rsp),%r10d
30d8(3): mov %rax,%r11
30db(5): mov 0x28(%rsp),%r9
30e0(3): cmp %r11,%rbx
30e3(5): mov %r10b,0x28(%rsp)
30e8(6): jnbe 0x5b8(%rip)
30ee(5): mov 0x18(%rsp),%rdx
30f3(5): mov 0x48(%rsp),%rsi
30f8(3): mov %r9,%rdi
30fb(5): mov %r11,0x40(%rsp)
3100(5): mov %r8b,0x38(%rsp)
3105(5): mov %r9,0x30(%rsp)
310a(5): call 0xffffe356(%rip)
310f(2): test %eax,%eax
3111(5): mov 0x30(%rsp),%r9
3116(6): movzx 0x38(%rsp),%r8d
311c(5): mov 0x40(%rsp),%r11
3121(6): jnz 0x57f(%rip)
3127(5): cmp $0x0,0xf(%rsp)
312c(6): movzx 0x28(%rsp),%r10d
3132(6): jnz 0xf83(%rip)
3138(8): nop 0x0(%rax,%rax,1)
3140(4): movzx (%r9),%ebx
3144(3): cmp $0x7e,%bl
3147(6): jnbe 0x321(%rip)
314d(7): lea 0x2c58(%rip),%rcx
3154(3): movzx %bl,%edx
3157(4): movsxd 0x0(%rcx,%rdx,4),%rax
315b(3): add %rcx,%rax
315e(2): jmp %rax
3160(3): xor %r10d,%r10d
3163(4): cmp $0x1,%r11
3167(3): setnz %al
316a(4): cmp $0xffffffff,%r11
316e(2): jnz 0xe(%rip)
3170(5): mov 0x10(%rsp),%rax
3175(4): cmp $0x0,0x1(%rax)
3179(3): setnz %al
317c(5): cmp $0x2,0x8(%rsp)
3181(3): setz %dl
3184(2): test %al,%al
3186(6): jz 0x252(%rip)
318c(3): xor %r12d,%r12d
318f(2): xor %eax,%eax
3191(7): nop 0x0(%rax)
3198(5): cmp $0x1,0xd(%rsp)
319d(6): jnz 0x115(%rip)
31a3(2): test %dl,%dl
31a5(6): jnz 0x10d(%rip)
31ab(5): mov 0x20(%rsp),%rsi
31b0(3): test %rsi,%rsi
31b3(2): jz 0x16(%rip)
31b5(2): mov %ebx,%edx
31b7(3): shr $0x5,%dl
31ba(3): movzx %dl,%edx
31bd(3): mov 0x0(%rsi,%rdx,4),%edx
31c0(3): bt %ebx,%edx
31c3(6): jb 0x150(%rip)
31c9(3): test %r10b,%r10b
31cc(6): jnz 0x147(%rip)
31d2(3): xor $0x1,%eax
31d5(4): add $0x1,%rbp
31d9(3): and %r8d,%eax
31dc(2): test %al,%al
31de(2): jz 0x22(%rip)
31e0(3): cmp %r15,%r13
31e3(2): jbe 0x7(%rip)
31e5(5): mov $0x27,0x0(%r14,%r15,1)
31ea(4): lea 0x1(%r15),%rax
31ee(3): cmp %rax,%r13
31f1(2): jbe 0x8(%rip)
31f3(6): mov $0x27,0x1(%r14,%r15,1)
31f9(4): add $0x2,%r15
31fd(3): xor %r8d,%r8d
3200(3): cmp %r13,%r15
3203(2): jnb 0x6(%rip)
3205(4): mov %bl,0x0(%r14,%r15,1)
3209(5): movzx 0xe(%rsp),%edi
320e(4): add $0x1,%r15
3212(5): mov $0x0,%eax
3217(3): test %r12b,%r12b
321a(3): cmove %eax,%edi
321d(5): mov %dil,0xe(%rsp)
3222(5): jmp 0xfffffe36(%rip)
3227(9): nop 0x0(%rax,%rax,1)
3230(3): xor %r10d,%r10d
3233(4): mov 0x8(%rsp),%eax
3237(3): cmp $0x2,%eax
323a(6): jz 0x5be(%rip)
3240(3): cmp $0x5,%eax
3243(6): jz 0x575(%rip)
3249(3): cmp $0x2,%eax
324c(5): mov $0x3f,%ebx
3251(3): setz %dl
3254(3): xor %r12d,%r12d
3257(2): xor %eax,%eax
3259(5): jmp 0xffffff3f(%rip)
325e(2): nop 
3260(3): xor %r10d,%r10d
3263(5): cmp $0x2,0x8(%rsp)
3268(6): jz 0x508(%rip)
326e(5): mov %r12b,0x7c(%rsp)
3273(2): xor %edx,%edx
3275(2): xor %eax,%eax
3277(5): mov $0x27,%ebx
327c(5): jmp 0xffffff1c(%rip)
3281(7): nop 0x0(%rax)
3288(5): mov $0x9,%edx
328d(5): mov $0x74,%ebx
3292(5): cmp $0x2,0x8(%rsp)
3297(3): setz %al
329a(4): and 0xf(%rsp),%al
329e(6): jnz 0x150(%rip)
32a4(5): cmp $0x0,0xd(%rsp)
32a9(2): jnz 0x67(%rip)
32ab(2): mov %edx,%ebx
32ad(3): xor %r12d,%r12d
32b0(2): xor %eax,%eax
32b2(5): cmp $0x0,0xf(%rsp)
32b7(6): jnz 0xfffffef4(%rip)
32bd(5): jmp 0xffffff0c(%rip)
32c2(6): nop 0x0(%rax,%rax,1)
32c8(5): mov $0x8,%edx
32cd(5): mov $0x62,%ebx
32d2(2): jmp 0xffffffd2(%rip)
32d4(4): nop 0x0(%rax)
32d8(5): cmp $0x2,0x8(%rsp)
32dd(6): jz 0x3d3(%rip)
32e3(5): cmp $0x0,0xd(%rsp)
32e8(6): jz 0x218(%rip)
32ee(5): cmp $0x0,0xf(%rsp)
32f3(6): jz 0x20d(%rip)
32f9(6): cmp $0x0,0x18(%rsp)
32ff(6): jnz 0x3bc(%rip)
3305(5): mov $0x5c,%ebx
330a(6): nop 0x0(%rax,%rax,1)
3310(3): xor %r12d,%r12d
3313(5): cmp $0x2,0x8(%rsp)
3318(3): setz %dl
331b(5): cmp $0x0,0xf(%rsp)
3320(2): mov %edx,%eax
3322(6): jnz 0x856(%rip)
3328(3): mov %r8d,%eax
332b(3): xor $0x1,%eax
332e(2): and %dl,%al
3330(2): jz 0x31(%rip)
3332(3): cmp %r15,%r13
3335(2): jbe 0x7(%rip)
3337(5): mov $0x27,0x0(%r14,%r15,1)
333c(4): lea 0x1(%r15),%rdx
3340(3): cmp %rdx,%r13
3343(2): jbe 0x8(%rip)
3345(6): mov $0x24,0x1(%r14,%r15,1)
334b(4): lea 0x2(%r15),%rdx
334f(3): cmp %rdx,%r13
3352(2): jbe 0x8(%rip)
3354(6): mov $0x27,0x2(%r14,%r15,1)
335a(4): add $0x3,%r15
335e(3): mov %eax,%r8d
3361(3): cmp %r15,%r13
3364(2): jbe 0x7(%rip)
3366(5): mov $0x5c,0x0(%r14,%r15,1)
336b(4): add $0x1,%r15
336f(4): add $0x1,%rbp
3373(5): jmp 0xfffffe8d(%rip)
3378(8): nop 0x0(%rax,%rax,1)
3380(5): cmp $0x0,0xd(%rsp)
3385(6): jnz 0x1ce(%rip)
338b(2): xor %edx,%edx
338d(5): test $0x1,0x78(%rsp)
3392(6): jz 0xffffff19(%rip)
3398(4): add $0x1,%rbp
339c(5): jmp 0xfffffcbc(%rip)
33a1(7): nop 0x0(%rax)
33a8(5): cmp $0x2,0x8(%rsp)
33ad(3): setz %dl
33b0(2): xor %eax,%eax
33b2(5): jmp 0xfffffde6(%rip)
33b7(9): nop 0x0(%rax,%rax,1)
33c0(5): mov $0x7,%edx
33c5(5): mov $0x61,%ebx
33ca(5): jmp 0xfffffeda(%rip)
33cf(1): nop 
33d0(5): cmp $0x2,0x8(%rsp)
33d5(3): setz %dl
33d8(3): test %rbp,%rbp
33db(6): jnz 0xfffffdb1(%rip)
33e1(5): movzx 0xf(%rsp),%eax
33e6(2): and %dl,%al
33e8(6): jz 0xfffffdb0(%rip)
33ee(3): mov %r11,%rbp
33f1(8): mov $0x2,0x8(%rsp)
33f9(5): jmp 0x700(%rip)
33fe(2): nop 
3400(5): cmp $0x2,0x8(%rsp)
3405(3): setz %dl
3408(3): xor %r12d,%r12d
340b(2): jmp 0xffffffd6(%rip)
340d(3): nop (%rax)
3410(5): cmp $0x2,0x8(%rsp)
3415(5): mov $0x20,%ebx
341a(3): setz %dl
341d(2): jmp 0xffffffc4(%rip)
341f(1): nop 
3420(5): mov $0xd,%edx
3425(5): mov $0x72,%ebx
342a(5): jmp 0xfffffe68(%rip)
342f(1): nop 
3430(5): mov $0xc,%edx
3435(5): mov $0x66,%ebx
343a(5): jmp 0xfffffe6a(%rip)
343f(1): nop 
3440(5): mov $0xb,%edx
3445(5): mov $0x76,%ebx
344a(5): jmp 0xfffffe5a(%rip)
344f(1): nop 
3450(5): mov $0xa,%edx
3455(5): mov $0x6e,%ebx
345a(5): jmp 0xfffffe38(%rip)
345f(1): nop 
3460(3): xor %r10d,%r10d
3463(5): nop 0x0(%rax,%rax,1)
3468(6): cmp $0x1,0x58(%rsp)
346e(6): jnz 0x3aa(%rip)
3474(5): mov %r11,0x38(%rsp)
3479(5): mov %r8b,0x30(%rsp)
347e(5): mov %r10b,0x28(%rsp)
3483(5): call 0xffffe12d(%rip)
3488(3): mov (%rax),%rcx
348b(3): movzx %bl,%edx
348e(6): movzx 0x28(%rsp),%r10d
3494(6): movzx 0x30(%rsp),%r8d
349a(5): mov 0x38(%rsp),%r11
349f(5): mov $0x1,%edi
34a4(4): movzx 0x0(%rcx,%rdx,2),%eax
34a8(4): and $0x4000,%ax
34ac(4): setnz %r12b
34b0(3): setz %al
34b3(4): and 0xd(%rsp),%al
34b7(2): test %al,%al
34b9(6): jnz 0x998(%rip)
34bf(5): cmp $0x2,0x8(%rsp)
34c4(3): setz %dl
34c7(5): jmp 0xfffffcd1(%rip)
34cc(4): nop 0x0(%rax)
34d0(4): movzx (%r9),%ebx
34d4(3): cmp $0x7e,%bl
34d7(2): jnbe 0xffffff89(%rip)
34d9(7): lea 0x2ac8(%rip),%rcx
34e0(3): movzx %bl,%edx
34e3(4): movsxd 0x0(%rcx,%rdx,4),%rax
34e7(3): add %rcx,%rax
34ea(2): jmp %rax
34ec(4): nop 0x0(%rax)
34f0(3): xor %r10d,%r10d
34f3(5): cmp $0x0,0xd(%rsp)
34f8(6): jnz 0xfffffdf6(%rip)
34fe(2): nop 
3500(5): mov $0x5c,%edx
3505(5): mov $0x5c,%ebx
350a(5): jmp 0xfffffd9a(%rip)
350f(1): nop 
3510(5): mov $0xc,%edx
3515(3): xor %r10d,%r10d
3518(5): mov $0x66,%ebx
351d(5): jmp 0xfffffd87(%rip)
3522(6): nop 0x0(%rax,%rax,1)
3528(5): mov $0xa,%edx
352d(3): xor %r10d,%r10d
3530(5): mov $0x6e,%ebx
3535(5): jmp 0xfffffd5d(%rip)
353a(6): nop 0x0(%rax,%rax,1)
3540(5): mov $0x61,%ebx
3545(5): jmp 0xfffffdcb(%rip)
354a(6): nop 0x0(%rax,%rax,1)
3550(3): xor %r10d,%r10d
3553(5): cmp $0x2,0x8(%rsp)
3558(3): setz %dl
355b(5): cmp $0x0,0xf(%rsp)
3560(6): jnz 0xb9a(%rip)
3566(3): mov %r8d,%eax
3569(3): mov %r15,%rcx
356c(3): xor $0x1,%eax
356f(2): and %dl,%al
3571(2): jz 0x2f(%rip)
3573(3): cmp %r15,%r13
3576(2): jbe 0x7(%rip)
3578(5): mov $0x27,0x0(%r14,%r15,1)
357d(4): lea 0x1(%r15),%rcx
3581(3): cmp %rcx,%r13
3584(2): jbe 0x8(%rip)
3586(6): mov $0x24,0x1(%r14,%r15,1)
358c(4): lea 0x2(%r15),%rcx
3590(3): cmp %rcx,%r13
3593(6): jnbe 0x636(%rip)
3599(4): lea 0x3(%r15),%rcx
359d(3): mov %eax,%r8d
35a0(3): cmp %rcx,%r13
35a3(2): jbe 0x7(%rip)
35a5(5): mov $0x5c,0x0(%r14,%rcx,1)
35aa(5): cmp $0x2,0x8(%rsp)
35af(4): lea 0x1(%rcx),%r15
35b3(6): jz 0x606(%rip)
35b9(4): lea 0x1(%rbp),%rax
35bd(3): cmp %r11,%rax
35c0(2): jnb 0x1b(%rip)
35c2(5): mov 0x10(%rsp),%rax
35c7(5): movzx 0x1(%rax,%rbp,1),%eax
35cc(4): mov %al,0x28(%rsp)
35d0(3): sub $0x30,%eax
35d3(2): cmp $0x9,%al
35d5(6): jbe 0x834(%rip)
35db(3): mov %r12d,%eax
35de(5): mov $0x30,%ebx
35e3(3): xor %r12d,%r12d
35e6(5): jmp 0xfffffbb2(%rip)
35eb(5): nop 0x0(%rax,%rax,1)
35f0(5): cmp $0x2,0x8(%rsp)
35f5(3): mov %r10d,%r12d
35f8(3): setz %dl
35fb(3): xor %r10d,%r10d
35fe(2): xor %eax,%eax
3600(5): jmp 0xfffffb98(%rip)
3605(3): nop (%rax)
3608(5): cmp $0x2,0x8(%rsp)
360d(3): setz %dl
3610(3): xor %r10d,%r10d
3613(5): jmp 0xfffffdc5(%rip)
3618(8): nop 0x0(%rax,%rax,1)
3620(5): cmp $0x2,0x8(%rsp)
3625(3): setz %dl
3628(3): xor %r10d,%r10d
362b(3): xor %r12d,%r12d
362e(5): jmp 0xfffffdb3(%rip)
3633(5): nop 0x0(%rax,%rax,1)
3638(5): cmp $0x2,0x8(%rsp)
363d(3): mov %r10d,%r12d
3640(5): mov $0x20,%ebx
3645(3): setz %dl
3648(3): xor %r10d,%r10d
364b(5): jmp 0xfffffd96(%rip)
3650(5): mov $0xd,%edx
3655(3): xor %r10d,%r10d
3658(5): mov $0x72,%ebx
365d(5): jmp 0xfffffc35(%rip)
3662(6): nop 0x0(%rax,%rax,1)
3668(5): mov $0x76,%ebx
366d(5): jmp 0xfffffca3(%rip)
3672(6): nop 0x0(%rax,%rax,1)
3678(5): mov $0x9,%edx
367d(3): xor %r10d,%r10d
3680(5): mov $0x74,%ebx
3685(5): jmp 0xfffffc0d(%rip)
368a(6): nop 0x0(%rax,%rax,1)
3690(5): mov $0x62,%ebx
3695(5): jmp 0xfffffc7b(%rip)
369a(6): nop 0x0(%rax,%rax,1)
36a0(3): xor %r10d,%r10d
36a3(5): jmp 0xfffffa9d(%rip)
36a8(8): nop 0x0(%rax,%rax,1)
36b0(5): cmp $0x0,0xf(%rsp)
36b5(6): jnz 0x96b(%rip)
36bb(4): add $0x1,%rbp
36bf(3): mov %r8d,%eax
36c2(3): xor %r12d,%r12d
36c5(5): mov $0x5c,%ebx
36ca(5): jmp 0xfffffb12(%rip)
36cf(1): nop 
36d0(5): cmp $0x2,0x8(%rsp)
36d5(5): movzx 0xf(%rsp),%ebx
36da(3): mov %r8d,%r12d
36dd(3): mov %r11,%rbp
36e0(3): setz %dl
36e3(2): mov %ebx,%eax
36e5(3): test %r15,%r15
36e8(3): setz %cl
36eb(2): and %edx,%eax
36ed(2): and %cl,%al
36ef(6): jnz 0xa67(%rip)
36f5(2): mov %ebx,%eax
36f7(3): xor $0x1,%eax
36fa(2): and %al,%dl
36fc(6): jz 0x970(%rip)
3702(5): cmp $0x0,0x7c(%rsp)
3707(6): jz 0x963(%rip)
370d(5): cmp $0x0,0xe(%rsp)
3712(6): jnz 0x9fb(%rip)
3718(3): test %r13,%r13
371b(3): setz %al
371e(6): cmp $0x0,0x50(%rsp)
3724(3): setnz %dl
3727(2): and %dl,%al
3729(6): jz 0xa23(%rip)
372f(5): mov 0x50(%rsp),%r13
3734(7): lea 0x25ea(%rip),%rbx
373b(4): mov $0x27,(%r14)
373f(8): mov $0x2,0x8(%rsp)
3747(6): mov $0x1,%r15d
374d(9): mov $0x1,0x18(%rsp)
3756(5): mov $0x0,0xf(%rsp)
375b(5): mov %rbx,0x48(%rsp)
3760(4): mov %al,0x7c(%rsp)
3764(5): jmp 0xfffff8df(%rip)
3769(7): nop 0x0(%rax)
3770(5): cmp $0x0,0xf(%rsp)
3775(6): jnz 0x8ab(%rip)
377b(3): test %r13,%r13
377e(6): jz 0x402(%rip)
3784(2): xor %edx,%edx
3786(6): cmp $0x0,0x50(%rsp)
378c(6): jnz 0x3f4(%rip)
3792(5): mov %r13,0x50(%rsp)
3797(4): add $0x3,%r15
379b(2): xor %eax,%eax
379d(5): mov %r12b,0x7c(%rsp)
37a2(3): xor %r8d,%r8d
37a5(3): mov %rdx,%r13
37a8(5): mov $0x27,%ebx
37ad(5): jmp 0xfffffa1c(%rip)
37b2(6): nop 0x0(%rax,%rax,1)
37b8(5): test $0x4,0x78(%rsp)
37bd(2): jz 0x23(%rip)
37bf(4): lea 0x2(%rbp),%rcx
37c3(3): cmp %r11,%rcx
37c6(2): jnb 0x1a(%rip)
37c8(5): mov 0x10(%rsp),%rax
37cd(5): cmp $0x3f,0x1(%rax,%rbp,1)
37d2(6): jz 0x790(%rip)
37d8(8): nop 0x0(%rax,%rax,1)
37e0(2): xor %edx,%edx
37e2(3): xor %r12d,%r12d
37e5(2): xor %eax,%eax
37e7(5): mov $0x3f,%ebx
37ec(5): jmp 0xfffff9ac(%rip)
37f1(7): nop 0x0(%rax)
37f8(5): cmp $0x0,0xf(%rsp)
37fd(6): jnz 0x823(%rip)
3803(3): xor %r12d,%r12d
3806(2): xor %eax,%eax
3808(5): mov $0x3f,%ebx
380d(5): jmp 0xfffff9bc(%rip)
3812(6): nop 0x0(%rax,%rax,1)
3818(8): lea 0xa0(%rsp),%rax
3820(4): cmp $0xffffffff,%r11
3824(c): mov $0x0,0xa0(%rsp)
3830(5): mov %rax,0x28(%rsp)
3835(2): jnz 0x2f(%rip)
3837(5): mov 0x10(%rsp),%rdi
383c(5): mov %r8b,0x40(%rsp)
3841(5): mov %r10b,0x38(%rsp)
3846(5): mov %r9,0x30(%rsp)
384b(5): call 0xffffdb95(%rip)
3850(6): movzx 0x40(%rsp),%r8d
3856(6): movzx 0x38(%rsp),%r10d
385c(3): mov %rax,%r11
385f(5): mov 0x30(%rsp),%r9
3864(8): lea 0x9c(%rsp),%rax
386c(2): xor %ecx,%ecx
386e(4): mov %bl,0x7e(%rsp)
3872(5): mov %r8b,0x7d(%rsp)
3877(3): mov %rcx,%rbx
387a(8): mov %r9,0x88(%rsp)
3882(5): mov %rax,0x38(%rsp)
3887(5): mov %r10b,0x7f(%rsp)
388c(8): mov %r15,0x80(%rsp)
3894(5): mov %r14,0x40(%rsp)
3899(5): mov %r13,0x70(%rsp)
389e(5): mov %r11,0x30(%rsp)
38a3(5): mov 0x10(%rsp),%rax
38a8(5): lea 0x0(%rbp,%rbx,1),%r14
38ad(5): mov 0x30(%rsp),%rdx
38b2(5): mov 0x28(%rsp),%rcx
38b7(5): mov 0x38(%rsp),%rdi
38bc(4): lea 0x0(%rax,%r14,1),%r13
38c0(3): sub %r14,%rdx
38c3(3): mov %r13,%rsi
38c6(5): call 0x1afa(%rip)
38cb(3): test %rax,%rax
38ce(3): mov %rax,%r15
38d1(2): jz 0x50(%rip)
38d3(4): cmp $0xffffffff,%rax
38d7(6): jz 0x61e(%rip)
38dd(4): cmp $0xfffffffe,%rax
38e1(6): jz 0x5a0(%rip)
38e7(5): cmp $0x2,0x8(%rsp)
38ec(3): setz %al
38ef(4): and 0xf(%rsp),%al
38f3(6): jnz 0x19d(%rip)
38f9(7): mov 0x9c(%rsp),%edi
3900(5): call 0xffffdca0(%rip)
3905(5): mov 0x28(%rsp),%rdi
390a(2): test %eax,%eax
390c(5): mov $0x0,%eax
3911(4): cmove %eax,%r12d
3915(3): add %r15,%rbx
3918(5): call 0xffffdc78(%rip)
391d(2): test %eax,%eax
391f(2): jz 0xffffff84(%rip)
3921(3): mov %r12d,%edx
3924(3): mov %rbx,%rdi
3927(6): movzx 0x7d(%rsp),%r8d
392d(3): xor $0x1,%edx
3930(5): movzx 0x7e(%rsp),%ebx
3935(6): movzx 0x7f(%rsp),%r10d
393b(4): and 0xd(%rsp),%dl
393f(8): mov 0x80(%rsp),%r15
3947(5): mov 0x40(%rsp),%r14
394c(5): mov 0x70(%rsp),%r13
3951(5): mov 0x30(%rsp),%r11
3956(4): cmp $0x1,%rdi
395a(6): jbe 0x601(%rip)
3960(3): mov %rdi,%rcx
3963(2): xor %esi,%esi
3965(6): movzx 0xf(%rsp),%r9d
396b(3): add %rbp,%rcx
396e(5): mov 0x10(%rsp),%rdi
3973(5): jmp 0xbb(%rip)
3978(8): nop 0x0(%rax,%rax,1)
3980(5): cmp $0x2,0x8(%rsp)
3985(3): setz %al
3988(3): test %r9b,%r9b
398b(6): jnz 0x4b5(%rip)
3991(3): mov %r8d,%esi
3994(3): xor $0x1,%esi
3997(3): and %sil,%al
399a(2): jz 0x31(%rip)
399c(3): cmp %r15,%r13
399f(2): jbe 0x7(%rip)
39a1(5): mov $0x27,0x0(%r14,%r15,1)
39a6(4): lea 0x1(%r15),%rsi
39aa(3): cmp %rsi,%r13
39ad(2): jbe 0x8(%rip)
39af(6): mov $0x24,0x1(%r14,%r15,1)
39b5(4): lea 0x2(%r15),%rsi
39b9(3): cmp %rsi,%r13
39bc(2): jbe 0x8(%rip)
39be(6): mov $0x27,0x2(%r14,%r15,1)
39c4(4): add $0x3,%r15
39c8(3): mov %eax,%r8d
39cb(3): cmp %r15,%r13
39ce(2): jbe 0x7(%rip)
39d0(5): mov $0x5c,0x0(%r14,%r15,1)
39d5(4): lea 0x1(%r15),%rax
39d9(3): cmp %rax,%r13
39dc(2): jbe 0xf(%rip)
39de(2): mov %ebx,%eax
39e0(3): shr $0x6,%al
39e3(3): add $0x30,%eax
39e6(5): mov %al,0x1(%r14,%r15,1)
39eb(4): lea 0x2(%r15),%rax
39ef(3): cmp %rax,%r13
39f2(2): jbe 0x12(%rip)
39f4(2): mov %ebx,%eax
39f6(3): shr $0x3,%al
39f9(3): and $0x7,%eax
39fc(3): add $0x30,%eax
39ff(5): mov %al,0x2(%r14,%r15,1)
3a04(3): and $0x7,%ebx
3a07(4): add $0x1,%rbp
3a0b(4): add $0x3,%r15
3a0f(3): add $0x30,%ebx
3a12(3): cmp %rcx,%rbp
3a15(6): jnb 0xfffff7eb(%rip)
3a1b(2): mov %edx,%esi
3a1d(3): cmp %r15,%r13
3a20(2): jbe 0x6(%rip)
3a22(4): mov %bl,0x0(%r14,%r15,1)
3a26(4): movzx 0x0(%rdi,%rbp,1),%ebx
3a2a(4): add $0x1,%r15
3a2e(2): test %dl,%dl
3a30(6): jnz 0xffffff50(%rip)
3a36(2): mov %esi,%eax
3a38(3): xor $0x1,%eax
3a3b(3): and %r8d,%eax
3a3e(3): test %r10b,%r10b
3a41(2): jz 0x10(%rip)
3a43(3): cmp %r15,%r13
3a46(2): jbe 0x7(%rip)
3a48(5): mov $0x5c,0x0(%r14,%r15,1)
3a4d(4): add $0x1,%r15
3a51(4): add $0x1,%rbp
3a55(3): cmp %rcx,%rbp
3a58(6): jnb 0xfffff784(%rip)
3a5e(2): test %al,%al
3a60(6): jz 0x3fe(%rip)
3a66(3): cmp %r15,%r13
3a69(2): jbe 0x7(%rip)
3a6b(5): mov $0x27,0x0(%r14,%r15,1)
3a70(4): lea 0x1(%r15),%rax
3a74(3): cmp %rax,%r13
3a77(2): jbe 0x8(%rip)
3a79(6): mov $0x27,0x1(%r14,%r15,1)
3a7f(4): add $0x2,%r15
3a83(3): xor %r10d,%r10d
3a86(3): xor %r8d,%r8d
3a89(2): jmp 0xffffff94(%rip)
3a8b(5): nop 0x0(%rax,%rax,1)
3a90(4): cmp $0x1,%r15
3a94(6): jz 0xfffffe65(%rip)
3a9a(5): mov 0x10(%rsp),%rdi
3a9f(4): lea 0x0(%rdi,%r15,1),%rcx
3aa3(5): lea 0x1(%rdi,%r14,1),%rdx
3aa8(4): lea 0x0(%rcx,%r14,1),%r8
3aac(2): jmp 0x11(%rip)
3aae(2): nop 
3ab0(4): add $0x1,%rdx
3ab4(3): cmp %rdx,%r8
3ab7(6): jz 0xfffffe42(%rip)
3abd(3): movzx (%rdx),%ecx
3ac0(3): sub $0x5b,%ecx
3ac3(3): cmp $0x21,%cl
3ac6(2): jnbe 0xffffffea(%rip)
3ac8(5): mov $0x1,%esi
3acd(3): shl/sal %cl,%rsi
3ad0(3): mov %rsi,%rcx
3ad3(a): mov $0x8589934635,%rsi
3add(3): test %rsi,%rcx
3ae0(2): jz 0xffffffd0(%rip)
3ae2(5): mov 0x40(%rsp),%r14
3ae7(5): mov 0x70(%rsp),%r13
3aec(5): mov 0x30(%rsp),%rbp
3af1(8): mov $0x2,0x8(%rsp)
3af9(5): cmp $0x0,0xd(%rsp)
3afe(2): jz 0x12(%rip)
3b00(2): test %al,%al
3b02(5): mov $0x4,%eax
3b07(5): cmove 0x8(%rsp),%eax
3b0c(4): mov %eax,0x8(%rsp)
3b10(4): sub $0x8,%rsp
3b14(3): mov %rbp,%rcx
3b17(3): mov %r13,%rsi
3b1a(4): push 0x68(%rsp)
3b1e(4): push 0x78(%rsp)
3b22(3): mov %r14,%rdi
3b25(2): push $0x0
3b27(8): mov 0x98(%rsp),%r9d
3b2f(5): mov 0x28(%rsp),%r8d
3b34(5): mov 0x30(%rsp),%rdx
3b39(4): and $0xfd,%r9d
3b3d(5): call 0xfffff433(%rip)
3b42(4): add $0x20,%rsp
3b46(3): mov %rax,%r15
3b49(8): mov 0xa8(%rsp),%rbx
3b51(9): xor $0x28,%rbx
3b5a(3): mov %r15,%rax
3b5d(6): jnz 0x606(%rip)
3b63(7): add $0xb8,%rsp
3b6a(1): pop %rbx
3b6b(1): pop %rbp
3b6c(2): pop %r12
3b6e(2): pop %r13
3b70(2): pop %r14
3b72(2): pop %r15
3b74(1): ret near (%rsp)
3b75(3): nop (%rax)
3b78(3): mov %r11,%rbp
3b7b(5): jmp 0xffffff7e(%rip)
3b80(3): cmp %r15,%r13
3b83(2): jbe 0x7(%rip)
3b85(5): mov $0x27,0x0(%r14,%r15,1)
3b8a(4): lea 0x1(%r15),%rax
3b8e(3): cmp %rax,%r13
3b91(2): jbe 0x8(%rip)
3b93(6): mov $0x5c,0x1(%r14,%r15,1)
3b99(4): lea 0x2(%r15),%rax
3b9d(3): cmp %rax,%r13
3ba0(6): jbe 0x5f2(%rip)
3ba6(3): mov %r13,%rdx
3ba9(6): mov $0x27,0x2(%r14,%r15,1)
3baf(5): mov 0x50(%rsp),%r13
3bb4(5): jmp 0xfffffbde(%rip)
3bb9(3): mov %r12d,%eax
3bbc(5): mov $0x30,%ebx
3bc1(3): xor %r12d,%r12d
3bc4(5): jmp 0xfffff605(%rip)
3bc9(6): mov $0x27,0x2(%r14,%r15,1)
3bcf(5): jmp 0xfffff9ca(%rip)
3bd4(2): test %ebx,%ebx
3bd6(6): jnz 0xfffff42d(%rip)
3bdc(5): mov $0x1,0xd(%rsp)
3be1(3): test %r13,%r13
3be4(6): jnz 0x596(%rip)
3bea(7): lea 0x2134(%rip),%rax
3bf1(9): mov $0x0,0x50(%rsp)
3bfa(5): mov $0x1,0xe(%rsp)
3bff(5): mov $0x0,0x7c(%rsp)
3c04(3): xor %r12d,%r12d
3c07(5): mov $0x0,0xf(%rsp)
3c0c(9): mov $0x1,0x18(%rsp)
3c15(5): mov %rax,0x48(%rsp)
3c1a(6): mov $0x1,%r15d
3c20(8): mov $0x2,0x8(%rsp)
3c28(5): jmp 0xfffff41b(%rip)
3c2d(3): nop (%rax)
3c30(2): test %ebx,%ebx
3c32(6): jnz 0x3fb(%rip)
3c38(3): test %r13,%r13
3c3b(6): jz 0x22b(%rip)
3c41(4): mov $0x22,(%r14)
3c45(5): mov $0x1,0xe(%rsp)
3c4a(3): xor %r12d,%r12d
3c4d(5): mov $0x0,0x7c(%rsp)
3c52(9): mov $0x0,0x50(%rsp)
3c5b(7): lea 0x20c1(%rip),%rax
3c62(5): mov $0x0,0xf(%rsp)
3c67(5): mov $0x1,0xd(%rsp)
3c6c(9): mov $0x1,0x18(%rsp)
3c75(6): mov $0x1,%r15d
3c7b(5): mov %rax,0x48(%rsp)
3c80(5): jmp 0xfffff3c3(%rip)
3c85(7): lea 0x2097(%rip),%rax
3c8c(5): mov $0x1,0xe(%rsp)
3c91(5): mov $0x0,0x7c(%rsp)
3c96(3): xor %r12d,%r12d
3c99(9): mov $0x0,0x50(%rsp)
3ca2(5): mov $0x1,0xf(%rsp)
3ca7(5): mov $0x1,0xd(%rsp)
3cac(9): mov $0x1,0x18(%rsp)
3cb5(3): xor %r15d,%r15d
3cb8(5): mov %rax,0x48(%rsp)
3cbd(8): mov $0x5,0x8(%rsp)
3cc5(5): jmp 0xfffff37e(%rip)
3cca(5): mov $0x1,0xe(%rsp)
3ccf(5): mov $0x0,0x7c(%rsp)
3cd4(3): xor %r12d,%r12d
3cd7(9): mov $0x0,0x50(%rsp)
3ce0(5): mov $0x0,0xf(%rsp)
3ce5(3): xor %r15d,%r15d
3ce8(5): mov $0x1,0xd(%rsp)
3ced(9): mov $0x0,0x18(%rsp)
3cf6(9): mov $0x0,0x48(%rsp)
3cff(5): jmp 0xfffff344(%rip)
3d04(5): cmp $0xa,0x8(%rsp)
3d09(2): jz 0x58(%rip)
3d0b(7): lea 0x2015(%rip),%rsi
3d12(2): xor %edi,%edi
3d14(5): mov $0x5,%edx
3d19(5): call 0xffffd6a7(%rip)
3d1e(3): mov %rax,%rcx
3d21(5): mov %rax,0x68(%rsp)
3d26(7): lea 0x1ffa(%rip),%rax
3d2d(3): cmp %rax,%rcx
3d30(6): jz 0x39e(%rip)
3d36(7): lea 0x1fe8(%rip),%rsi
3d3d(2): xor %edi,%edi
3d3f(5): mov $0x5,%edx
3d44(5): call 0xffffd67c(%rip)
3d49(3): mov %rax,%rcx
3d4c(5): mov %rax,0x60(%rsp)
3d51(7): lea 0x1fcd(%rip),%rax
3d58(3): cmp %rax,%rcx
3d5b(6): jz 0x389(%rip)
3d61(3): xor %r15d,%r15d
3d64(2): test %ebx,%ebx
3d66(6): jz 0x1c7(%rip)
3d6c(2): test %ebx,%ebx
3d6e(5): mov 0x60(%rsp),%rbx
3d73(5): setnz 0xf(%rsp)
3d78(3): xor %r12d,%r12d
3d7b(3): mov %rbx,%rdi
3d7e(5): call 0xffffd662(%rip)
3d83(5): mov %rbx,0x48(%rsp)
3d88(5): mov %rax,0x18(%rsp)
3d8d(5): mov $0x1,0xe(%rsp)
3d92(5): mov $0x0,0x7c(%rsp)
3d97(9): mov $0x0,0x50(%rsp)
3da0(5): mov $0x1,0xd(%rsp)
3da5(5): jmp 0xfffff29e(%rip)
3daa(5): mov $0x1,0xe(%rsp)
3daf(5): mov $0x0,0x7c(%rsp)
3db4(3): xor %r12d,%r12d
3db7(9): mov $0x0,0x50(%rsp)
3dc0(5): mov $0x0,0xf(%rsp)
3dc5(3): xor %r15d,%r15d
3dc8(5): mov $0x0,0xd(%rsp)
3dcd(9): mov $0x0,0x18(%rsp)
3dd6(9): mov $0x0,0x48(%rsp)
3ddf(5): jmp 0xfffff264(%rip)
3de4(5): mov $0x1,0xe(%rsp)
3de9(5): mov $0x0,0x7c(%rsp)
3dee(3): xor %r12d,%r12d
3df1(9): mov $0x0,0x50(%rsp)
3dfa(5): mov $0x1,0xf(%rsp)
3dff(5): mov $0x1,0xd(%rsp)
3e04(5): jmp 0xfffff21f(%rip)
3e09(3): cmp %r15,%r13
3e0c(2): jbe 0x7(%rip)
3e0e(5): mov $0x30,0x0(%r14,%r15,1)
3e13(4): lea 0x2(%rcx),%rax
3e17(3): cmp %rax,%r13
3e1a(2): jbe 0x8(%rip)
3e1c(6): mov $0x30,0x2(%r14,%rcx,1)
3e22(3): mov %r12d,%eax
3e25(4): lea 0x3(%rcx),%r15
3e29(3): xor %r12d,%r12d
3e2c(5): mov $0x30,%ebx
3e31(5): jmp 0xfffff367(%rip)
3e36(a): nop 0x0(%rax,%rax,1)
3e40(5): movzx 0xf(%rsp),%ebx
3e45(3): mov %r11,%rbp
3e48(4): mov %bl,0xd(%rsp)
3e4c(5): jmp 0xfffffcad(%rip)
3e51(5): movzx 0xd(%rsp),%edx
3e56(3): xor %r12d,%r12d
3e59(5): jmp 0xfffffb07(%rip)
3e5e(3): xor %r10d,%r10d
3e61(5): jmp 0xfffffbbc(%rip)
3e66(9): mov $0x0,0x50(%rsp)
3e6f(5): mov $0x1,0xe(%rsp)
3e74(3): xor %r12d,%r12d
3e77(5): mov $0x0,0x7c(%rsp)
3e7c(5): jmp 0xfffffddf(%rip)
3e81(5): mov 0x30(%rsp),%r11
3e86(3): mov %r14,%rsi
3e89(3): mov %r13,%rcx
3e8c(3): mov %rbx,%rax
3e8f(3): mov %rbx,%rdi
3e92(6): movzx 0x7d(%rsp),%r8d
3e98(5): movzx 0x7e(%rsp),%ebx
3e9d(8): mov 0x88(%rsp),%r9
3ea5(3): cmp %r11,%rsi
3ea8(6): movzx 0x7f(%rsp),%r10d
3eae(8): mov 0x80(%rsp),%r15
3eb6(5): mov 0x40(%rsp),%r14
3ebb(5): mov 0x70(%rsp),%r13
3ec0(2): jnb 0x28(%rip)
3ec2(3): cmp $0x0,(%rcx)
3ec5(2): jnz 0x12(%rip)
3ec7(2): jmp 0x21(%rip)
3ec9(7): nop 0x0(%rax)
3ed0(5): cmp $0x0,0x0(%r9,%rax,1)
3ed5(2): jz 0x10(%rip)
3ed7(4): add $0x1,%rax
3edb(5): lea 0x0(%rbp,%rax,1),%rdx
3ee0(3): cmp %rdx,%r11
3ee3(2): jnbe 0xffffffed(%rip)
3ee5(3): mov %rax,%rdi
3ee8(5): movzx 0xd(%rsp),%edx
3eed(3): xor %r12d,%r12d
3ef0(5): jmp 0xfffffa66(%rip)
3ef5(3): mov %rbx,%rdi
3ef8(6): movzx 0x7d(%rsp),%r8d
3efe(5): movzx 0x7e(%rsp),%ebx
3f03(6): movzx 0x7f(%rsp),%r10d
3f09(8): mov 0x80(%rsp),%r15
3f11(3): xor %r12d,%r12d
3f14(5): mov 0x40(%rsp),%r14
3f19(5): mov 0x70(%rsp),%r13
3f1e(5): mov 0x30(%rsp),%r11
3f23(5): movzx 0xd(%rsp),%edx
3f28(5): jmp 0xfffffa2e(%rip)
3f2d(5): mov 0x68(%rsp),%rdx
3f32(3): movzx (%rdx),%eax
3f35(2): test %al,%al
3f37(6): jz 0xfffffe35(%rip)
3f3d(3): nop (%rax)
3f40(3): cmp %r15,%r13
3f43(2): jbe 0x6(%rip)
3f45(4): mov %al,0x0(%r14,%r15,1)
3f49(4): add $0x1,%r15
3f4d(5): movzx 0x0(%rdx,%r15,1),%eax
3f52(2): test %al,%al
3f54(2): jnz 0xffffffec(%rip)
3f56(5): jmp 0xfffffe16(%rip)
3f5b(2): mov %edx,%eax
3f5d(5): jmp 0xfffff55a(%rip)
3f62(4): movzx 0x0(%rax,%rcx,1),%ebx
3f66(3): cmp $0x3e,%bl
3f69(6): jnbe 0xfffff877(%rip)
3f6f(a): mov $0x8070630310989004800,%rax
3f79(4): bt %rbx,%rax
3f7d(6): jnb 0xfffff863(%rip)
3f83(5): cmp $0x0,0xf(%rsp)
3f88(6): jnz 0x1ea(%rip)
3f8e(3): cmp %r15,%r13
3f91(2): jbe 0x7(%rip)
3f93(5): mov $0x3f,0x0(%r14,%r15,1)
3f98(4): lea 0x1(%r15),%rax
3f9c(3): cmp %rax,%r13
3f9f(2): jbe 0x8(%rip)
3fa1(6): mov $0x22,0x1(%r14,%r15,1)
3fa7(4): lea 0x2(%r15),%rax
3fab(3): cmp %rax,%r13
3fae(2): jbe 0x8(%rip)
3fb0(6): mov $0x22,0x2(%r14,%r15,1)
3fb6(4): lea 0x3(%r15),%rax
3fba(3): cmp %rax,%r13
3fbd(2): jbe 0x8(%rip)
3fbf(6): mov $0x3f,0x3(%r14,%r15,1)
3fc5(4): add $0x4,%r15
3fc9(2): xor %edx,%edx
3fcb(3): xor %r12d,%r12d
3fce(2): xor %eax,%eax
3fd0(3): mov %rcx,%rbp
3fd3(5): jmp 0xfffff1c5(%rip)
3fd8(2): test %ebx,%ebx
3fda(6): jz 0x18e(%rip)
3fe0(7): lea 0x1d3e(%rip),%rax
3fe7(5): mov $0x1,0xe(%rsp)
3fec(5): mov $0x0,0x7c(%rsp)
3ff1(3): xor %r12d,%r12d
3ff4(9): mov $0x0,0x50(%rsp)
3ffd(5): mov $0x1,0xf(%rsp)
4002(5): mov $0x0,0xd(%rsp)
4007(9): mov $0x1,0x18(%rsp)
4010(3): xor %r15d,%r15d
4013(5): mov %rax,0x48(%rsp)
4018(5): jmp 0xfffff02b(%rip)
401d(3): nop (%rax)
4020(3): mov %r11,%rbp
4023(5): movzx 0xf(%rsp),%eax
4028(5): jmp 0xfffffad1(%rip)
402d(7): lea 0x1cef(%rip),%rax
4034(5): mov $0x1,0xe(%rsp)
4039(5): mov $0x0,0x7c(%rsp)
403e(3): xor %r12d,%r12d
4041(9): mov $0x0,0x50(%rsp)
404a(5): mov $0x1,0xf(%rsp)
404f(5): mov $0x1,0xd(%rsp)
4054(9): mov $0x1,0x18(%rsp)
405d(3): xor %r15d,%r15d
4060(5): mov %rax,0x48(%rsp)
4065(5): jmp 0xffffefde(%rip)
406a(2): mov %edx,%eax
406c(5): mov 0x48(%rsp),%rbx
4071(3): test %rbx,%rbx
4074(2): jz 0x2e(%rip)
4076(2): test %al,%al
4078(2): jz 0x2a(%rip)
407a(3): movzx (%rbx),%ecx
407d(3): mov %rbx,%rax
4080(2): test %cl,%cl
4082(2): jz 0x20(%rip)
4084(3): mov %r15,%rdx
4087(3): sub %r15,%rax
408a(3): cmp %rdx,%r13
408d(2): jbe 0x6(%rip)
408f(4): mov %cl,0x0(%r14,%rdx,1)
4093(4): add $0x1,%rdx
4097(4): movzx 0x0(%rax,%rdx,1),%ecx
409b(2): test %cl,%cl
409d(2): jnz 0xffffffed(%rip)
409f(3): mov %rdx,%r15
40a2(3): cmp %r15,%r13
40a5(6): jbe 0xfffffaa4(%rip)
40ab(5): mov $0x0,0x0(%r14,%r15,1)
40b0(5): jmp 0xfffffa99(%rip)
40b5(5): cmp $0x2,0x8(%rsp)
40ba(5): movzx 0xf(%rsp),%ebx
40bf(3): mov %r11,%rbp
40c2(3): setz %al
40c5(4): mov %bl,0xd(%rsp)
40c9(5): jmp 0xfffffa30(%rip)
40ce(4): mov 0x8(%rsp),%esi
40d2(3): mov %rcx,%rdi
40d5(5): call 0xffffedab(%rip)
40da(5): mov %rax,0x68(%rsp)
40df(5): jmp 0xfffffc57(%rip)
40e4(4): mov 0x8(%rsp),%esi
40e8(3): mov %rcx,%rdi
40eb(5): call 0xffffed95(%rip)
40f0(5): mov %rax,0x60(%rsp)
40f5(5): jmp 0xfffffc6c(%rip)
40fa(5): movzx 0xf(%rsp),%ebx
40ff(3): mov %r11,%rbp
4102(2): mov %edx,%eax
4104(4): mov %bl,0xd(%rsp)
4108(5): jmp 0xfffff9f1(%rip)
410d(4): sub $0x8,%rsp
4111(6): mov $0x5,%r8d
4117(3): mov %r11,%rcx
411a(4): push 0x68(%rsp)
411e(4): push 0x78(%rsp)
4122(3): mov %r14,%rdi
4125(4): push 0x38(%rsp)
4129(8): mov 0x98(%rsp),%r9d
4131(5): mov 0x30(%rsp),%rdx
4136(5): mov 0x70(%rsp),%rsi
413b(5): call 0xffffee35(%rip)
4140(4): add $0x20,%rsp
4144(3): mov %rax,%r15
4147(5): jmp 0xfffffa02(%rip)
414c(5): movzx 0x7c(%rsp),%eax
4151(5): jmp 0xffffff1b(%rip)
4156(8): mov $0x2,0x8(%rsp)
415e(5): jmp 0xfffff99b(%rip)
4163(5): call 0xffffd28d(%rip)
4168(5): mov $0x0,0xd(%rsp)
416d(5): jmp 0xfffffa74(%rip)
4172(3): mov %r11,%rbp
4175(5): jmp 0xfffff99b(%rip)
417a(5): mov $0x1,0xe(%rsp)
417f(2): xor %eax,%eax
4181(3): xor %r12d,%r12d
4184(9): mov $0x0,0x50(%rsp)
418d(5): jmp 0xfffff5a7(%rip)
4192(3): mov %r13,%rdx
4195(5): mov 0x50(%rsp),%r13
419a(5): jmp 0xfffff5f8(%rip)
419f(5): call 0xffffd181(%rip)

"quotearg_n_options" :
41b0(2): push %r15
41b2(2): push %r14
41b4(3): movsxd %edi,%r15
41b7(2): push %r13
41b9(2): push %r12
41bb(3): mov %rdx,%r14
41be(1): push %rbp
41bf(1): push %rbx
41c0(3): mov %rcx,%rbp
41c3(4): sub $0x28,%rsp
41c7(5): mov %rsi,0x8(%rsp)
41cc(5): call 0xffffd164(%rip)
41d1(3): mov %rax,%r13
41d4(2): mov (%rax),%eax
41d6(3): test %r15d,%r15d
41d9(7): mov 0x203e80(%rip),%rbx
41e0(4): mov %eax,0x18(%rsp)
41e4(6): js 0x16d(%rip)
41ea(7): cmp %r15d,0x203e67(%rip)
41f1(2): jnle 0x64(%rip)
41f3(7): cmp $0x7fffffff,%r15d
41fa(6): jz 0x15c(%rip)
4200(4): lea 0x1(%r15),%r12d
4204(7): lea 0x203e65(%rip),%rax
420b(3): movsxd %r12d,%rsi
420e(4): shl/sal $0x4,%rsi
4212(3): cmp %rax,%rbx
4215(6): jz 0x11b(%rip)
421b(3): mov %rbx,%rdi
421e(5): call 0xf72(%rip)
4223(3): mov %rax,%rbx
4226(7): mov %rax,0x203e33(%rip)
422d(7): movsxd 0x203e24(%rip),%rdi
4234(3): mov %r12d,%edx
4237(2): xor %esi,%esi
4239(2): sub %edi,%edx
423b(4): shl/sal $0x4,%rdi
423f(3): movsxd %edx,%rdx
4242(3): add %rbx,%rdi
4245(4): shl/sal $0x4,%rdx
4249(5): call 0xffffd207(%rip)
424e(7): mov %r12d,0x203e03(%rip)
4255(3): mov 0x4(%rbp),%eax
4258(4): shl/sal $0x4,%r15
425c(4): sub $0x8,%rsp
4260(3): add %r15,%rbx
4263(4): lea 0x8(%rbp),%r15
4267(4): mov 0x0(%rbp),%r8d
426b(3): mov (%rbx),%r11
426e(4): mov 0x8(%rbx),%r12
4272(3): mov %r14,%rcx
4275(3): or $0x1,%eax
4278(4): mov %eax,0x24(%rsp)
427c(3): push 0x30(%rbp)
427f(3): mov %eax,%r9d
4282(3): push 0x28(%rbp)
4285(2): push %r15
4287(3): mov %r11,%rsi
428a(5): mov 0x28(%rsp),%rdx
428f(3): mov %r12,%rdi
4292(5): mov %r11,0x30(%rsp)
4297(5): call 0xffffecd9(%rip)
429c(4): add $0x20,%rsp
42a0(5): mov 0x10(%rsp),%r11
42a5(3): cmp %rax,%r11
42a8(2): jnbe 0x69(%rip)
42aa(4): lea 0x1(%rax),%rsi
42ae(7): lea 0x203e4b(%rip),%rax
42b5(3): cmp %rax,%r12
42b8(3): mov %rsi,(%rbx)
42bb(2): jz 0x14(%rip)
42bd(3): mov %r12,%rdi
42c0(5): mov %rsi,0x10(%rsp)
42c5(5): call 0xffffd04b(%rip)
42ca(5): mov 0x10(%rsp),%rsi
42cf(3): mov %rsi,%rdi
42d2(5): mov %rsi,0x10(%rsp)
42d7(5): call 0xe59(%rip)
42dc(4): sub $0x8,%rsp
42e0(4): mov %rax,0x8(%rbx)
42e4(4): mov 0x0(%rbp),%r8d
42e8(3): push 0x30(%rbp)
42eb(3): push 0x28(%rbp)
42ee(3): mov %r14,%rcx
42f1(2): push %r15
42f3(5): mov 0x3c(%rsp),%r9d
42f8(3): mov %rax,%rdi
42fb(5): mov 0x28(%rsp),%rdx
4300(5): mov 0x30(%rsp),%rsi
4305(3): mov %rax,%r12
4308(5): call 0xffffec68(%rip)
430d(4): add $0x20,%rsp
4311(4): mov 0x18(%rsp),%eax
4315(4): mov %eax,0x0(%r13)
4319(4): add $0x28,%rsp
431d(3): mov %r12,%rax
4320(1): pop %rbx
4321(1): pop %rbp
4322(2): pop %r12
4324(2): pop %r13
4326(2): pop %r14
4328(2): pop %r15
432a(1): ret near (%rsp)
432b(5): nop 0x0(%rax,%rax,1)
4330(2): xor %edi,%edi
4332(5): call 0xe5e(%rip)
4337(8): movdqa 0x203d31(%rip),%xmm0
433f(3): mov %rax,%rbx
4342(7): mov %rax,0x203d17(%rip)
4349(3): movups %xmm0,(%rax)
434c(5): jmp 0xfffffee1(%rip)
4351(5): call 0xffffcfcf(%rip)
4356(5): call 0x102a(%rip)

"clone_quoting_options" :
4360(2): push %r12
4362(1): push %rbp
4363(1): push %rbx
4364(3): mov %rdi,%rbx
4367(5): call 0xffffcfc9(%rip)
436c(3): mov (%rax),%r12d
436f(3): mov %rax,%rbp
4372(7): lea 0x203e87(%rip),%rax
4379(3): test %rbx,%rbx
437c(5): mov $0x38,%esi
4381(4): cmove %rax,%rbx
4385(3): mov %rbx,%rdi
4388(5): call 0xfa8(%rip)
438d(4): mov %r12d,0x0(%rbp)
4391(1): pop %rbx
4392(1): pop %rbp
4393(2): pop %r12
4395(1): ret near (%rsp)

"get_quoting_style" :
43a0(7): lea 0x203e59(%rip),%rax
43a7(3): test %rdi,%rdi
43aa(4): cmove %rax,%rdi
43ae(2): mov (%rdi),%eax
43b0(1): ret near (%rsp)

"set_quoting_style" :
43c0(7): lea 0x203e39(%rip),%rax
43c7(3): test %rdi,%rdi
43ca(4): cmove %rax,%rdi
43ce(2): mov %esi,(%rdi)
43d0(1): ret near (%rsp)

"set_char_quoting" :
43e0(7): lea 0x203e19(%rip),%rax
43e7(3): test %rdi,%rdi
43ea(2): mov %esi,%ecx
43ec(4): cmove %rax,%rdi
43f0(2): mov %esi,%eax
43f2(3): and $0x1f,%ecx
43f5(3): shr $0x5,%al
43f8(3): movzx %al,%eax
43fb(5): lea 0x8(%rdi,%rax,4),%rdi
4400(2): mov (%rdi),%esi
4402(2): mov %esi,%eax
4404(2): shr %cl,%eax
4406(2): xor %eax,%edx
4408(3): and $0x1,%eax
440b(3): and $0x1,%edx
440e(2): shl/sal %cl,%edx
4410(2): xor %esi,%edx
4412(2): mov %edx,(%rdi)
4414(1): ret near (%rsp)

"set_quoting_flags" :
4420(7): lea 0x203dd9(%rip),%rax
4427(3): test %rdi,%rdi
442a(4): cmove %rax,%rdi
442e(3): mov 0x4(%rdi),%eax
4431(3): mov %esi,0x4(%rdi)
4434(1): ret near (%rsp)

"set_custom_quoting" :
4440(7): lea 0x203db9(%rip),%rax
4447(3): test %rdi,%rdi
444a(4): cmove %rax,%rdi
444e(3): test %rsi,%rsi
4451(6): mov $0xa,(%rdi)
4457(2): jz 0x10(%rip)
4459(3): test %rdx,%rdx
445c(2): jz 0xb(%rip)
445e(4): mov %rsi,0x28(%rdi)
4462(4): mov %rdx,0x30(%rdi)
4466(1): ret near (%rsp)
4467(4): sub $0x8,%rsp
446b(5): call 0xffffceb5(%rip)

"quotearg_buffer" :
4470(2): push %r15
4472(2): push %r14
4474(7): lea 0x203d85(%rip),%rax
447b(2): push %r13
447d(2): push %r12
447f(3): mov %rdi,%r13
4482(1): push %rbp
4483(1): push %rbx
4484(3): mov %r8,%rbx
4487(3): mov %rsi,%r14
448a(3): mov %rdx,%r15
448d(4): sub $0x18,%rsp
4491(3): test %r8,%r8
4494(4): cmove %rax,%rbx
4498(5): mov %rcx,0x8(%rsp)
449d(5): call 0xffffce93(%rip)
44a2(3): mov (%rax),%r12d
44a5(3): mov %rax,%rbp
44a8(4): lea 0x8(%rbx),%rax
44ac(4): sub $0x8,%rsp
44b0(4): mov 0x4(%rbx),%r9d
44b4(3): push 0x30(%rbx)
44b7(3): mov (%rbx),%r8d
44ba(3): push 0x28(%rbx)
44bd(3): mov %r15,%rdx
44c0(1): push %rax
44c1(5): mov 0x28(%rsp),%rcx
44c6(3): mov %r14,%rsi
44c9(3): mov %r13,%rdi
44cc(5): call 0xffffeaa4(%rip)
44d1(4): mov %r12d,0x0(%rbp)
44d5(4): add $0x38,%rsp
44d9(1): pop %rbx
44da(1): pop %rbp
44db(2): pop %r12
44dd(2): pop %r13
44df(2): pop %r14
44e1(2): pop %r15
44e3(1): ret near (%rsp)

"quotearg_alloc_mem" :
44f0(2): push %r15
44f2(2): push %r14
44f4(7): lea 0x203d05(%rip),%rax
44fb(2): push %r13
44fd(2): push %r12
44ff(3): mov %rdx,%r12
4502(1): push %rbp
4503(1): push %rbx
4504(3): mov %rcx,%rbx
4507(3): mov %rdi,%r14
450a(3): mov %rsi,%r15
450d(4): sub $0x38,%rsp
4511(3): test %rcx,%rcx
4514(4): cmove %rax,%rbx
4518(2): xor %ebp,%ebp
451a(5): call 0xffffce16(%rip)
451f(3): test %r12,%r12
4522(3): mov %rax,%r13
4525(2): mov (%rax),%eax
4527(4): setz %bpl
452b(3): or 0x4(%rbx),%ebp
452e(4): lea 0x8(%rbx),%r10
4532(4): sub $0x8,%rsp
4536(3): mov (%rbx),%r8d
4539(3): mov %r15,%rcx
453c(4): mov %eax,0x14(%rsp)
4540(3): push 0x30(%rbx)
4543(3): mov %r14,%rdx
4546(3): push 0x28(%rbx)
4549(2): push %r10
454b(2): xor %esi,%esi
454d(3): mov %ebp,%r9d
4550(2): xor %edi,%edi
4552(5): mov %r10,0x40(%rsp)
4557(5): call 0xffffea19(%rip)
455c(4): lea 0x1(%rax),%rsi
4560(5): mov %rax,0x48(%rsp)
4565(4): add $0x20,%rsp
4569(3): mov %rsi,%rdi
456c(5): mov %rsi,0x18(%rsp)
4571(5): call 0xbbf(%rip)
4576(5): mov %rax,0x10(%rsp)
457b(4): sub $0x8,%rsp
457f(3): push 0x30(%rbx)
4582(3): push 0x28(%rbx)
4585(5): mov 0x38(%rsp),%r10
458a(3): mov %ebp,%r9d
458d(3): mov (%rbx),%r8d
4590(3): mov %r15,%rcx
4593(3): mov %r14,%rdx
4596(3): mov %rax,%rdi
4599(2): push %r10
459b(5): mov 0x38(%rsp),%rsi
45a0(5): call 0xffffe9d0(%rip)
45a5(4): mov 0x2c(%rsp),%eax
45a9(4): add $0x20,%rsp
45ad(3): test %r12,%r12
45b0(4): mov %eax,0x0(%r13)
45b4(2): jz 0xb(%rip)
45b6(5): mov 0x28(%rsp),%r11
45bb(4): mov %r11,(%r12)
45bf(5): mov 0x10(%rsp),%rax
45c4(4): add $0x38,%rsp
45c8(1): pop %rbx
45c9(1): pop %rbp
45ca(2): pop %r12
45cc(2): pop %r13
45ce(2): pop %r14
45d0(2): pop %r15
45d2(1): ret near (%rsp)

"quotearg_alloc" :
45e0(3): mov %rdx,%rcx
45e3(2): xor %edx,%edx
45e5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
45f0(6): mov 0x203a62(%rip),%eax
45f6(2): push %r12
45f8(7): mov 0x203a61(%rip),%r12
45ff(1): push %rbp
4600(1): push %rbx
4601(3): cmp $0x1,%eax
4604(2): jle 0x2d(%rip)
4606(3): sub $0x2,%eax
4609(5): lea 0x18(%r12),%rbx
460e(4): shl/sal $0x4,%rax
4612(5): lea 0x28(%r12,%rax,1),%rbp
4617(9): nop 0x0(%rax,%rax,1)
4620(3): mov (%rbx),%rdi
4623(4): add $0x10,%rbx
4627(5): call 0xffffcce9(%rip)
462c(3): cmp %rbp,%rbx
462f(2): jnz 0xfffffff1(%rip)
4631(5): mov 0x8(%r12),%rdi
4636(7): lea 0x203ac3(%rip),%rbx
463d(3): cmp %rbx,%rdi
4640(2): jz 0x19(%rip)
4642(5): call 0xffffccce(%rip)
4647(b): mov $0x100,0x203a1e(%rip)
4652(7): mov %rbx,0x203a1f(%rip)
4659(7): lea 0x203a10(%rip),%rbx
4660(3): cmp %rbx,%r12
4663(2): jz 0x11(%rip)
4665(3): mov %r12,%rdi
4668(5): call 0xffffcca8(%rip)
466d(7): mov %rbx,0x2039ec(%rip)
4674(1): pop %rbx
4675(a): mov $0x1,0x2039d9(%rip)
467f(1): pop %rbp
4680(2): pop %r12
4682(1): ret near (%rsp)

"quotearg_n" :
4690(7): lea 0x203b69(%rip),%rcx
4697(7): mov $0xffffffff,%rdx
469e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
46b0(7): lea 0x203b49(%rip),%rcx
46b7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
46c0(7): lea 0x203b39(%rip),%rcx
46c7(3): mov %rdi,%rsi
46ca(7): mov $0xffffffff,%rdx
46d1(2): xor %edi,%edi
46d3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
46e0(7): lea 0x203b19(%rip),%rcx
46e7(3): mov %rsi,%rdx
46ea(3): mov %rdi,%rsi
46ed(2): xor %edi,%edi
46ef(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4700(4): sub $0x48,%rsp
4704(3): mov %rdx,%rax
4707(9): mov $0x28,%rdx
4710(5): mov %rdx,0x38(%rsp)
4715(2): xor %edx,%edx
4717(3): cmp $0xa,%esi
471a(2): jz 0x6a(%rip)
471c(3): mov %esi,(%rsp)
471f(3): mov %rsp,%rcx
4722(7): mov $0xffffffff,%rdx
4729(3): mov %rax,%rsi
472c(9): mov $0x0,0x4(%rsp)
4735(9): mov $0x0,0xc(%rsp)
473e(9): mov $0x0,0x14(%rsp)
4747(9): mov $0x0,0x1c(%rsp)
4750(9): mov $0x0,0x24(%rsp)
4759(9): mov $0x0,0x2c(%rsp)
4762(8): mov $0x0,0x34(%rsp)
476a(5): call 0xfffffa46(%rip)
476f(5): mov 0x38(%rsp),%rcx
4774(9): xor $0x28,%rcx
477d(2): jnz 0xc(%rip)
477f(4): add $0x48,%rsp
4783(1): ret near (%rsp)
4784(5): call 0xffffcb9c(%rip)
4789(5): call 0xffffcc67(%rip)

"quotearg_n_style_mem" :
4790(4): sub $0x48,%rsp
4794(3): mov %rdx,%rax
4797(3): mov %rcx,%rdx
479a(9): mov $0x28,%rcx
47a3(5): mov %rcx,0x38(%rsp)
47a8(2): xor %ecx,%ecx
47aa(3): cmp $0xa,%esi
47ad(2): jz 0x63(%rip)
47af(3): mov %esi,(%rsp)
47b2(3): mov %rsp,%rcx
47b5(3): mov %rax,%rsi
47b8(9): mov $0x0,0x4(%rsp)
47c1(9): mov $0x0,0xc(%rsp)
47ca(9): mov $0x0,0x14(%rsp)
47d3(9): mov $0x0,0x1c(%rsp)
47dc(9): mov $0x0,0x24(%rsp)
47e5(9): mov $0x0,0x2c(%rsp)
47ee(8): mov $0x0,0x34(%rsp)
47f6(5): call 0xfffff9ba(%rip)
47fb(5): mov 0x38(%rsp),%rdx
4800(9): xor $0x28,%rdx
4809(2): jnz 0xc(%rip)
480b(4): add $0x48,%rsp
480f(1): ret near (%rsp)
4810(5): call 0xffffcb10(%rip)
4815(5): call 0xffffcbdb(%rip)

"quotearg_style" :
4820(3): mov %rsi,%rdx
4823(2): mov %edi,%esi
4825(2): xor %edi,%edi
4827(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4830(3): mov %rdx,%rcx
4833(3): mov %rsi,%rdx
4836(2): mov %edi,%esi
4838(2): xor %edi,%edi
483a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4840(4): sub $0x48,%rsp
4844(2): mov %edx,%ecx
4846(9): mov $0x28,%rax
484f(5): mov %rax,0x38(%rsp)
4854(2): xor %eax,%eax
4856(7): mov 0x2039d3(%rip),%rax
485d(3): mov %rsp,%r8
4860(3): and $0x1f,%ecx
4863(8): movdqa 0x203995(%rip),%xmm0
486b(5): mov %rax,0x30(%rsp)
4870(2): mov %edx,%eax
4872(4): movaps %xmm0,(%rsp)
4876(3): shr $0x5,%al
4879(3): movzx %al,%eax
487c(5): lea 0x8(%r8,%rax,4),%r9
4881(8): movdqa 0x203987(%rip),%xmm0
4889(5): movaps %xmm0,0x10(%rsp)
488e(8): movdqa 0x20398a(%rip),%xmm0
4896(5): movaps %xmm0,0x20(%rsp)
489b(3): mov (%r9),%edx
489e(2): mov %edx,%eax
48a0(2): shr %cl,%eax
48a2(2): not %eax
48a4(3): and $0x1,%eax
48a7(2): shl/sal %cl,%eax
48a9(3): mov %r8,%rcx
48ac(2): xor %edx,%eax
48ae(3): mov %rsi,%rdx
48b1(3): mov %rdi,%rsi
48b4(3): mov %eax,(%r9)
48b7(2): xor %edi,%edi
48b9(5): call 0xfffff8f7(%rip)
48be(5): mov 0x38(%rsp),%rsi
48c3(9): xor $0x28,%rsi
48cc(2): jnz 0x7(%rip)
48ce(4): add $0x48,%rsp
48d2(1): ret near (%rsp)
48d3(5): call 0xffffcb1d(%rip)

"quotearg_char" :
48e0(4): movsx %sil,%edx
48e4(7): mov $0xffffffff,%rsi
48eb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
48f0(5): mov $0x3a,%edx
48f5(7): mov $0xffffffff,%rsi
48fc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4910(5): mov $0x3a,%edx
4915(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4920(4): sub $0x48,%rsp
4924(3): mov %rdx,%rax
4927(9): mov $0x28,%rdx
4930(5): mov %rdx,0x38(%rsp)
4935(2): xor %edx,%edx
4937(3): cmp $0xa,%esi
493a(2): jz 0x6a(%rip)
493c(3): mov %esi,(%rsp)
493f(3): mov %rsp,%rcx
4942(7): mov $0xffffffff,%rdx
4949(3): mov %rax,%rsi
494c(9): mov $0x0,0x4(%rsp)
4955(9): mov $0x4000000,0xc(%rsp)
495e(9): mov $0x0,0x14(%rsp)
4967(9): mov $0x0,0x1c(%rsp)
4970(9): mov $0x0,0x24(%rsp)
4979(9): mov $0x0,0x2c(%rsp)
4982(8): mov $0x0,0x34(%rsp)
498a(5): call 0xfffff826(%rip)
498f(5): mov 0x38(%rsp),%rcx
4994(9): xor $0x28,%rcx
499d(2): jnz 0xc(%rip)
499f(4): add $0x48,%rsp
49a3(1): ret near (%rsp)
49a4(5): call 0xffffc97c(%rip)
49a9(5): call 0xffffca47(%rip)

"quotearg_n_custom_mem" :
49b0(4): sub $0x48,%rsp
49b4(3): mov %rcx,%r9
49b7(7): mov 0x203872(%rip),%rcx
49be(8): movdqa 0x20383a(%rip),%xmm0
49c6(9): mov $0x28,%rax
49cf(5): mov %rax,0x38(%rsp)
49d4(2): xor %eax,%eax
49d6(4): movaps %xmm0,(%rsp)
49da(3): test %rsi,%rsi
49dd(5): mov %rcx,0x30(%rsp)
49e2(7): mov $0xa,(%rsp)
49e9(8): movdqa 0x20381f(%rip),%xmm0
49f1(5): movaps %xmm0,0x10(%rsp)
49f6(8): movdqa 0x203822(%rip),%xmm0
49fe(5): movaps %xmm0,0x20(%rsp)
4a03(2): jz 0x34(%rip)
4a05(3): test %rdx,%rdx
4a08(2): jz 0x2f(%rip)
4a0a(5): mov %rsi,0x28(%rsp)
4a0f(5): mov %rdx,0x30(%rsp)
4a14(3): mov %rsp,%rcx
4a17(3): mov %r8,%rdx
4a1a(3): mov %r9,%rsi
4a1d(5): call 0xfffff793(%rip)
4a22(5): mov 0x38(%rsp),%rdi
4a27(9): xor $0x28,%rdi
4a30(2): jnz 0xc(%rip)
4a32(4): add $0x48,%rsp
4a36(1): ret near (%rsp)
4a37(5): call 0xffffc8e9(%rip)
4a3c(5): call 0xffffc9b4(%rip)

"quotearg_n_custom" :
4a50(7): mov $0xffffffff,%r8
4a57(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4a60(3): mov %rdx,%rcx
4a63(7): mov $0xffffffff,%r8
4a6a(3): mov %rsi,%rdx
4a6d(3): mov %rdi,%rsi
4a70(2): xor %edi,%edi
4a72(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4a80(3): mov %rcx,%r8
4a83(3): mov %rdx,%rcx
4a86(3): mov %rsi,%rdx
4a89(3): mov %rdi,%rsi
4a8c(2): xor %edi,%edi
4a8e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4aa0(7): lea 0x203579(%rip),%rcx
4aa7(5): jmp 0xfffff709(%rip)

"quote_mem" :
4ab0(7): lea 0x203569(%rip),%rcx
4ab7(3): mov %rsi,%rdx
4aba(3): mov %rdi,%rsi
4abd(2): xor %edi,%edi
4abf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4ad0(7): lea 0x203549(%rip),%rcx
4ad7(7): mov $0xffffffff,%rdx
4ade(5): jmp 0xfffff6d2(%rip)

"quote" :
4af0(7): lea 0x203529(%rip),%rcx
4af7(3): mov %rdi,%rsi
4afa(7): mov $0xffffffff,%rdx
4b01(2): xor %edi,%edi
4b03(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4b10(2): push %r15
4b12(2): push %r14
4b14(2): push %r13
4b16(2): push %r12
4b18(3): mov %r9,%r12
4b1b(1): push %rbp
4b1c(1): push %rbx
4b1d(3): mov %rdi,%rbp
4b20(3): mov %r8,%rbx
4b23(4): sub $0x28,%rsp
4b27(3): test %rsi,%rsi
4b2a(6): jz 0x11e(%rip)
4b30(3): mov %rdx,%r8
4b33(7): lea 0x16ae(%rip),%rdx
4b3a(3): mov %rcx,%r9
4b3d(2): xor %eax,%eax
4b3f(3): mov %rsi,%rcx
4b42(5): mov $0x1,%esi
4b47(5): call 0xffffca39(%rip)
4b4c(7): lea 0x16a8(%rip),%rsi
4b53(2): xor %edi,%edi
4b55(5): mov $0x5,%edx
4b5a(5): call 0xffffc866(%rip)
4b5f(7): lea 0x19ba(%rip),%rdx
4b66(3): mov %rax,%rcx
4b69(6): mov $0x7e3,%r8d
4b6f(5): mov $0x1,%esi
4b74(3): mov %rbp,%rdi
4b77(2): xor %eax,%eax
4b79(5): call 0xffffca07(%rip)
4b7e(7): lea 0x1703(%rip),%rsi
4b85(2): xor %edi,%edi
4b87(5): mov $0x5,%edx
4b8c(5): call 0xffffc834(%rip)
4b91(3): mov %rbp,%rsi
4b94(3): mov %rax,%rdi
4b97(5): call 0xffffc8d9(%rip)
4b9c(4): cmp $0x9,%r12
4ba0(6): jnbe 0x340(%rip)
4ba6(7): lea 0x193b(%rip),%rdx
4bad(4): movsxd 0x0(%rdx,%r12,4),%rax
4bb1(3): add %rdx,%rax
4bb4(2): jmp %rax
4bb6(a): nop 0x0(%rax,%rax,1)
4bc0(4): mov 0x38(%rbx),%r9
4bc4(4): mov 0x10(%rbx),%rax
4bc8(7): lea 0x1829(%rip),%rsi
4bcf(4): mov 0x8(%rbx),%r8
4bd3(5): mov $0x5,%edx
4bd8(2): xor %edi,%edi
4bda(4): mov 0x30(%rbx),%r13
4bde(4): mov 0x28(%rbx),%r12
4be2(5): mov %r9,0x10(%rsp)
4be7(4): mov 0x20(%rbx),%r15
4beb(4): mov 0x18(%rbx),%r14
4bef(4): mov %rax,(%rsp)
4bf3(5): mov %r8,0x8(%rsp)
4bf8(3): mov (%rbx),%rbx
4bfb(5): call 0xffffc7c5(%rip)
4c00(4): sub $0x8,%rsp
4c04(5): mov 0x18(%rsp),%r9
4c09(3): mov %rax,%rdx
4c0c(3): mov %rbx,%rcx
4c0f(5): mov $0x1,%esi
4c14(3): mov %rbp,%rdi
4c17(2): xor %eax,%eax
4c19(2): push %r9
4c1b(2): push %r13
4c1d(2): push %r12
4c1f(2): push %r15
4c21(2): push %r14
4c23(5): mov 0x30(%rsp),%r9
4c28(5): mov 0x38(%rsp),%r8
4c2d(5): call 0xffffc953(%rip)
4c32(4): add $0x30,%rsp
4c36(4): add $0x28,%rsp
4c3a(1): pop %rbx
4c3b(1): pop %rbp
4c3c(2): pop %r12
4c3e(2): pop %r13
4c40(2): pop %r14
4c42(2): pop %r15
4c44(1): ret near (%rsp)
4c45(3): nop (%rax)
4c48(3): mov %rcx,%r8
4c4b(3): mov %rdx,%rcx
4c4e(7): lea 0x159f(%rip),%rdx
4c55(5): mov $0x1,%esi
4c5a(2): xor %eax,%eax
4c5c(5): call 0xffffc924(%rip)
4c61(5): jmp 0xfffffeeb(%rip)
4c66(a): nop 0x0(%rax,%rax,1)
4c70(4): mov 0x40(%rbx),%r10
4c74(4): mov 0x38(%rbx),%r9
4c78(7): lea 0x17a9(%rip),%rsi
4c7f(4): mov 0x10(%rbx),%rax
4c83(4): mov 0x8(%rbx),%r8
4c87(5): mov $0x5,%edx
4c8c(4): mov 0x30(%rbx),%r13
4c90(4): mov 0x28(%rbx),%r12
4c94(4): mov 0x20(%rbx),%r15
4c98(4): mov 0x18(%rbx),%r14
4c9c(3): mov (%rbx),%rbx
4c9f(5): mov %r10,0x18(%rsp)
4ca4(5): mov %r9,0x10(%rsp)
4ca9(4): mov %rax,(%rsp)
4cad(5): mov %r8,0x8(%rsp)
4cb2(2): xor %edi,%edi
4cb4(5): call 0xffffc70c(%rip)
4cb9(5): mov 0x18(%rsp),%r10
4cbe(2): push %r10
4cc0(5): jmp 0xffffff44(%rip)
4cc5(3): nop (%rax)
4cc8(3): mov (%rbx),%rbx
4ccb(7): lea 0x152d(%rip),%rsi
4cd2(5): mov $0x5,%edx
4cd7(2): xor %edi,%edi
4cd9(5): call 0xffffc6e7(%rip)
4cde(4): add $0x28,%rsp
4ce2(3): mov %rbx,%rcx
4ce5(3): mov %rbp,%rdi
4ce8(1): pop %rbx
4ce9(1): pop %rbp
4cea(2): pop %r12
4cec(2): pop %r13
4cee(2): pop %r14
4cf0(2): pop %r15
4cf2(3): mov %rax,%rdx
4cf5(5): mov $0x1,%esi
4cfa(2): xor %eax,%eax
4cfc(5): jmp 0xffffc884(%rip)
4d01(7): nop 0x0(%rax)
4d08(4): mov 0x8(%rbx),%r12
4d0c(7): lea 0x14fc(%rip),%rsi
4d13(3): mov (%rbx),%rbx
4d16(5): mov $0x5,%edx
4d1b(2): xor %edi,%edi
4d1d(5): call 0xffffc6a3(%rip)
4d22(4): add $0x28,%rsp
4d26(3): mov %r12,%r8
4d29(3): mov %rbx,%rcx
4d2c(3): mov %rbp,%rdi
4d2f(3): mov %rax,%rdx
4d32(5): mov $0x1,%esi
4d37(1): pop %rbx
4d38(1): pop %rbp
4d39(2): pop %r12
4d3b(2): pop %r13
4d3d(2): pop %r14
4d3f(2): pop %r15
4d41(2): xor %eax,%eax
4d43(5): jmp 0xffffc83d(%rip)
4d48(8): nop 0x0(%rax,%rax,1)
4d50(4): mov 0x10(%rbx),%r13
4d54(4): mov 0x8(%rbx),%r12
4d58(7): lea 0x14c7(%rip),%rsi
4d5f(3): mov (%rbx),%rbx
4d62(5): mov $0x5,%edx
4d67(2): xor %edi,%edi
4d69(5): call 0xffffc657(%rip)
4d6e(4): add $0x28,%rsp
4d72(3): mov %r13,%r9
4d75(3): mov %r12,%r8
4d78(3): mov %rbx,%rcx
4d7b(3): mov %rbp,%rdi
4d7e(3): mov %rax,%rdx
4d81(1): pop %rbx
4d82(1): pop %rbp
4d83(2): pop %r12
4d85(2): pop %r13
4d87(2): pop %r14
4d89(2): pop %r15
4d8b(5): mov $0x1,%esi
4d90(2): xor %eax,%eax
4d92(5): jmp 0xffffc7ee(%rip)
4d97(9): nop 0x0(%rax,%rax,1)
4da0(7): lea 0x15b1(%rip),%rsi
4da7(5): mov $0x5,%edx
4dac(2): xor %edi,%edi
4dae(4): mov 0x18(%rbx),%r14
4db2(4): mov 0x10(%rbx),%r13
4db6(4): mov 0x8(%rbx),%r12
4dba(3): mov (%rbx),%rbx
4dbd(5): call 0xffffc603(%rip)
4dc2(4): sub $0x8,%rsp
4dc6(2): push %r14
4dc8(3): mov %rax,%rdx
4dcb(3): mov %r13,%r9
4dce(3): mov %r12,%r8
4dd1(3): mov %rbx,%rcx
4dd4(3): mov %rbp,%rdi
4dd7(5): mov $0x1,%esi
4ddc(2): xor %eax,%eax
4dde(5): call 0xffffc7a2(%rip)
4de3(1): pop %rax
4de4(1): pop %rdx
4de5(4): add $0x28,%rsp
4de9(1): pop %rbx
4dea(1): pop %rbp
4deb(2): pop %r12
4ded(2): pop %r13
4def(2): pop %r14
4df1(2): pop %r15
4df3(1): ret near (%rsp)
4df4(4): nop 0x0(%rax)
4df8(4): mov 0x20(%rbx),%r15
4dfc(7): lea 0x1575(%rip),%rsi
4e03(5): mov $0x5,%edx
4e08(2): xor %edi,%edi
4e0a(4): mov 0x18(%rbx),%r14
4e0e(4): mov 0x10(%rbx),%r13
4e12(4): mov 0x8(%rbx),%r12
4e16(3): mov (%rbx),%rbx
4e19(5): call 0xffffc5a7(%rip)
4e1e(2): push %r15
4e20(2): jmp 0xffffffa6(%rip)
4e22(6): nop 0x0(%rax,%rax,1)
4e28(4): mov 0x8(%rbx),%r8
4e2c(4): mov 0x28(%rbx),%r12
4e30(7): lea 0x1569(%rip),%rsi
4e37(4): mov 0x20(%rbx),%r15
4e3b(4): mov 0x18(%rbx),%r14
4e3f(5): mov $0x5,%edx
4e44(4): mov 0x10(%rbx),%r13
4e48(2): xor %edi,%edi
4e4a(3): mov (%rbx),%rbx
4e4d(4): mov %r8,(%rsp)
4e51(5): call 0xffffc56f(%rip)
4e56(4): sub $0x8,%rsp
4e5a(3): mov %r13,%r9
4e5d(2): push %r12
4e5f(2): push %r15
4e61(2): push %r14
4e63(5): mov 0x20(%rsp),%r8
4e68(3): mov %rbx,%rcx
4e6b(3): mov %rax,%rdx
4e6e(3): mov %rbp,%rdi
4e71(5): mov $0x1,%esi
4e76(2): xor %eax,%eax
4e78(5): call 0xffffc708(%rip)
4e7d(4): add $0x20,%rsp
4e81(4): add $0x28,%rsp
4e85(1): pop %rbx
4e86(1): pop %rbp
4e87(2): pop %r12
4e89(2): pop %r13
4e8b(2): pop %r14
4e8d(2): pop %r15
4e8f(1): ret near (%rsp)
4e90(4): mov 0x10(%rbx),%r9
4e94(4): mov 0x30(%rbx),%r13
4e98(7): lea 0x1529(%rip),%rsi
4e9f(4): mov 0x28(%rbx),%r12
4ea3(4): mov 0x20(%rbx),%r15
4ea7(5): mov $0x5,%edx
4eac(4): mov 0x18(%rbx),%r14
4eb0(4): mov 0x8(%rbx),%r8
4eb4(2): xor %edi,%edi
4eb6(5): mov %r9,0x8(%rsp)
4ebb(3): mov (%rbx),%rbx
4ebe(4): mov %r8,(%rsp)
4ec2(5): call 0xffffc4fe(%rip)
4ec7(2): push %r13
4ec9(2): push %r12
4ecb(2): push %r15
4ecd(2): push %r14
4ecf(5): mov 0x28(%rsp),%r9
4ed4(2): jmp 0xffffff8f(%rip)
4ed6(a): nop 0x0(%rax,%rax,1)
4ee0(4): mov 0x40(%rbx),%r10
4ee4(4): mov 0x38(%rbx),%r9
4ee8(5): mov $0x5,%edx
4eed(4): mov 0x10(%rbx),%rax
4ef1(4): mov 0x8(%rbx),%r8
4ef5(7): lea 0x1564(%rip),%rsi
4efc(4): mov 0x30(%rbx),%r13
4f00(4): mov 0x28(%rbx),%r12
4f04(4): mov 0x20(%rbx),%r15
4f08(4): mov 0x18(%rbx),%r14
4f0c(5): mov %r10,0x18(%rsp)
4f11(5): mov %r9,0x10(%rsp)
4f16(4): mov %rax,(%rsp)
4f1a(5): mov %r8,0x8(%rsp)
4f1f(3): mov (%rbx),%rbx
4f22(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4f30(3): xor %r9d,%r9d
4f33(4): cmp $0x0,(%r8)
4f37(2): jz 0x14(%rip)
4f39(7): nop 0x0(%rax)
4f40(4): add $0x1,%r9
4f44(5): cmp $0x0,0x0(%r8,%r9,8)
4f49(2): jnz 0xfffffff7(%rip)
4f4b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4f50(4): sub $0x68,%rsp
4f54(3): mov %r8,%r10
4f57(3): xor %r9d,%r9d
4f5a(9): mov $0x28,%rax
4f63(5): mov %rax,0x58(%rsp)
4f68(2): xor %eax,%eax
4f6a(3): mov %rsp,%r8
4f6d(3): nop (%rax)
4f70(3): mov (%r10),%eax
4f73(3): cmp $0x2f,%eax
4f76(2): jnbe 0x44(%rip)
4f78(3): mov %eax,%r11d
4f7b(4): add 0x10(%r10),%r11
4f7f(3): add $0x8,%eax
4f82(3): mov %eax,(%r10)
4f85(3): mov (%r11),%rax
4f88(3): test %rax,%rax
4f8b(4): mov %rax,0x0(%r8,%r9,8)
4f8f(2): jz 0xc(%rip)
4f91(4): add $0x1,%r9
4f95(4): cmp $0xa,%r9
4f99(2): jnz 0xffffffd7(%rip)
4f9b(5): call 0xfffffb75(%rip)
4fa0(5): mov 0x58(%rsp),%rax
4fa5(9): xor $0x28,%rax
4fae(2): jnz 0x7(%rip)
4fb0(4): add $0x68,%rsp
4fb4(1): ret near (%rsp)
4fb5(5): call 0xffffc43b(%rip)
4fba(4): mov 0x8(%r10),%r11
4fbe(4): lea 0x8(%r11),%rax
4fc2(4): mov %rax,0x8(%r10)
4fc6(2): jmp 0xffffffbf(%rip)

"version_etc" :
4fd0(1): push %rbp
4fd1(1): push %rbx
4fd2(6): mov $0x20,%r10d
4fd8(3): xor %r11d,%r11d
4fdb(7): sub $0xb8,%rsp
4fe2(9): mov $0x28,%rax
4feb(5): mov %rax,0x78(%rsp)
4ff0(2): xor %eax,%eax
4ff2(8): lea 0xd0(%rsp),%rax
4ffa(8): mov %r8,0xa0(%rsp)
5002(8): lea 0xd0(%rsp),%rbx
500a(5): lea 0x20(%rsp),%r8
500f(8): mov %r9,0xa8(%rsp)
5017(8): mov $0x20,0x8(%rsp)
501f(5): mov %rax,0x10(%rsp)
5024(8): lea 0x80(%rsp),%rax
502c(3): xor %r9d,%r9d
502f(5): mov %rax,0x18(%rsp)
5034(3): mov %rax,%rbp
5037(9): nop 0x0(%rax,%rax,1)
5040(4): cmp $0x2f,%r10d
5044(2): jnbe 0x58(%rip)
5046(3): mov %r10d,%eax
5049(6): mov $0x1,%r11d
504f(4): add $0x8,%r10d
5053(3): add %rbp,%rax
5056(3): mov (%rax),%rax
5059(3): test %rax,%rax
505c(4): mov %rax,0x0(%r8,%r9,8)
5060(2): jz 0xc(%rip)
5062(4): add $0x1,%r9
5066(4): cmp $0xa,%r9
506a(2): jnz 0xffffffd6(%rip)
506c(3): test %r11b,%r11b
506f(2): jnz 0x26(%rip)
5071(5): call 0xfffffa9f(%rip)
5076(5): mov 0x78(%rsp),%rax
507b(9): xor $0x28,%rax
5084(2): jnz 0xc(%rip)
5086(7): add $0xb8,%rsp
508d(1): pop %rbx
508e(1): pop %rbp
508f(1): ret near (%rsp)
5090(5): call 0xffffc360(%rip)
5095(5): mov %r10d,0x8(%rsp)
509a(2): jmp 0xffffffd7(%rip)
509c(3): mov %rbx,%rax
509f(4): add $0x8,%rbx
50a3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
50b0(1): push %rbx
50b1(7): lea 0x118a(%rip),%rsi
50b8(5): mov $0x5,%edx
50bd(2): xor %edi,%edi
50bf(5): call 0xffffc301(%rip)
50c4(7): lea 0x118c(%rip),%rdx
50cb(3): mov %rax,%rsi
50ce(5): mov $0x1,%edi
50d3(2): xor %eax,%eax
50d5(5): call 0xffffc43b(%rip)
50da(7): lea 0x118c(%rip),%rsi
50e1(5): mov $0x5,%edx
50e6(2): xor %edi,%edi
50e8(5): call 0xffffc2d8(%rip)
50ed(7): lea 0xabc(%rip),%rcx
50f4(7): lea 0x6d4(%rip),%rdx
50fb(3): mov %rax,%rsi
50fe(5): mov $0x1,%edi
5103(2): xor %eax,%eax
5105(5): call 0xffffc40b(%rip)
510a(7): mov 0x202f77(%rip),%rbx
5111(7): lea 0x1388(%rip),%rsi
5118(2): xor %edi,%edi
511a(5): mov $0x5,%edx
511f(5): call 0xffffc2a1(%rip)
5124(3): mov %rbx,%rsi
5127(3): mov %rax,%rdi
512a(1): pop %rbx
512b(5): jmp 0xffffc345(%rip)

"xmalloc" :
5130(1): push %rbx
5131(3): mov %rdi,%rbx
5134(5): call 0xffffc37c(%rip)
5139(3): test %rax,%rax
513c(2): jnz 0x7(%rip)
513e(3): test %rbx,%rbx
5141(2): jnz 0x4(%rip)
5143(1): pop %rbx
5144(1): ret near (%rsp)
5145(5): call 0x23b(%rip)

"xnmalloc" :
5150(3): mov %rdi,%rax
5153(3): mul %rax,%rsi,%rdx
5156(3): mov %rax,%rdi
5159(3): seto %al
515c(3): test %rdi,%rdi
515f(2): js 0xc(%rip)
5161(3): movzx %al,%eax
5164(3): test %rax,%rax
5167(2): jnz 0x4(%rip)
5169(2): jmp 0xffffffc7(%rip)
516b(4): sub $0x8,%rsp
516f(5): call 0x211(%rip)

"xrealloc" :
5190(3): test %rsi,%rsi
5193(1): push %rbx
5194(3): mov %rsi,%rbx
5197(2): jnz 0x7(%rip)
5199(3): test %rdi,%rdi
519c(2): jnz 0x1c(%rip)
519e(3): mov %rbx,%rsi
51a1(5): call 0xffffc34f(%rip)
51a6(3): test %rax,%rax
51a9(2): jnz 0x7(%rip)
51ab(3): test %rbx,%rbx
51ae(2): jnz 0x13(%rip)
51b0(1): pop %rbx
51b1(1): ret near (%rsp)
51b2(6): nop 0x0(%rax,%rax,1)
51b8(5): call 0xffffc158(%rip)
51bd(2): xor %eax,%eax
51bf(1): pop %rbx
51c0(1): ret near (%rsp)
51c1(5): call 0x1bf(%rip)

"xnrealloc" :
51d0(3): mov %rsi,%rax
51d3(3): mul %rax,%rdx,%rdx
51d6(3): mov %rax,%rsi
51d9(3): seto %al
51dc(3): test %rsi,%rsi
51df(2): js 0xc(%rip)
51e1(3): movzx %al,%eax
51e4(3): test %rax,%rax
51e7(2): jnz 0x4(%rip)
51e9(2): jmp 0xffffffa7(%rip)
51eb(4): sub $0x8,%rsp
51ef(5): call 0x191(%rip)

"x2nrealloc" :
5200(3): test %rdi,%rdi
5203(3): mov %rdx,%r9
5206(3): mov (%rsi),%rcx
5209(2): jz 0x37(%rip)
520b(2): xor %edx,%edx
520d(a): mov $0x6148914691236517204,%rax
5217(3): div %r9,%rax
521a(3): cmp %rcx,%rax
521d(2): jbe 0x3e(%rip)
521f(3): mov %rcx,%rax
5222(3): shr $0x1,%rax
5225(5): lea 0x1(%rax,%rcx,1),%rcx
522a(3): mov %rcx,(%rsi)
522d(4): imul %r9,%rcx
5231(3): mov %rcx,%rsi
5234(5): jmp 0xffffff5c(%rip)
5239(7): nop 0x0(%rax)
5240(3): test %rcx,%rcx
5243(2): jz 0x25(%rip)
5245(3): mov %rcx,%rax
5248(3): mul %rax,%r9,%rdx
524b(3): seto %dl
524e(3): test %rax,%rax
5251(3): movzx %dl,%edx
5254(2): js 0x7(%rip)
5256(3): test %rdx,%rdx
5259(2): jz 0xffffffd1(%rip)
525b(4): sub $0x8,%rsp
525f(5): call 0x121(%rip)
5264(4): nop 0x0(%rax)
5268(2): xor %edx,%edx
526a(5): mov $0x80,%eax
526f(3): xor %r8d,%r8d
5272(3): div %r9,%rax
5275(3): test %rax,%rax
5278(4): setz %r8b
527c(4): lea 0x0(%r8,%rax,1),%rcx
5280(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5290(3): test %rdi,%rdi
5293(3): mov (%rsi),%rax
5296(2): jz 0x2a(%rip)
5298(a): mov $0x6148914691236517203,%rdx
52a2(3): cmp %rdx,%rax
52a5(2): jnbe 0x2c(%rip)
52a7(3): mov %rax,%rdx
52aa(3): shr $0x1,%rdx
52ad(5): lea 0x1(%rdx,%rax,1),%rax
52b2(3): mov %rax,(%rsi)
52b5(3): mov %rax,%rsi
52b8(5): jmp 0xfffffed8(%rip)
52bd(3): nop (%rax)
52c0(3): test %rax,%rax
52c3(5): mov $0x80,%edx
52c8(4): cmove %rdx,%rax
52cc(3): test %rax,%rax
52cf(2): jns 0xffffffe3(%rip)
52d1(4): sub $0x8,%rsp
52d5(5): call 0xab(%rip)

"xzalloc" :
52e0(1): push %rbx
52e1(3): mov %rdi,%rbx
52e4(5): call 0xfffffe4c(%rip)
52e9(3): mov %rbx,%rdx
52ec(2): xor %esi,%esi
52ee(3): mov %rax,%rdi
52f1(1): pop %rbx
52f2(5): jmp 0xffffc15e(%rip)

"xcalloc" :
5300(3): mov %rdi,%rax
5303(4): sub $0x8,%rsp
5307(3): mul %rax,%rsi,%rdx
530a(3): seto %dl
530d(3): test %rax,%rax
5310(2): js 0x19(%rip)
5312(3): movzx %dl,%edx
5315(3): test %rdx,%rdx
5318(2): jnz 0x11(%rip)
531a(5): call 0xffffc166(%rip)
531f(3): test %rax,%rax
5322(2): jz 0x7(%rip)
5324(4): add $0x8,%rsp
5328(1): ret near (%rsp)
5329(5): call 0x57(%rip)

"xmemdup" :
5330(1): push %rbp
5331(1): push %rbx
5332(3): mov %rdi,%rbp
5335(3): mov %rsi,%rdi
5338(3): mov %rsi,%rbx
533b(4): sub $0x8,%rsp
533f(5): call 0xfffffdf1(%rip)
5344(4): add $0x8,%rsp
5348(3): mov %rbx,%rdx
534b(3): mov %rbp,%rsi
534e(1): pop %rbx
534f(1): pop %rbp
5350(3): mov %rax,%rdi
5353(5): jmp 0xffffc13d(%rip)

"xstrdup" :
5360(1): push %rbx
5361(3): mov %rdi,%rbx
5364(5): call 0xffffc07c(%rip)
5369(3): mov %rbx,%rdi
536c(4): lea 0x1(%rax),%rsi
5370(1): pop %rbx
5371(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5380(7): lea 0x11c8(%rip),%rsi
5387(4): sub $0x8,%rsp
538b(5): mov $0x5,%edx
5390(2): xor %edi,%edi
5392(5): call 0xffffc02e(%rip)
5397(6): mov 0x202c73(%rip),%edi
539d(7): lea 0x8dc(%rip),%rdx
53a4(3): mov %rax,%rcx
53a7(2): xor %esi,%esi
53a9(2): xor %eax,%eax
53ab(5): call 0xffffc185(%rip)
53b0(5): call 0xffffbf70(%rip)

"rpl_mbrtowc" :
53c0(2): push %r13
53c2(2): push %r12
53c4(3): mov %rsi,%r13
53c7(1): push %rbp
53c8(1): push %rbx
53c9(3): mov %rdi,%rbx
53cc(3): mov %rdx,%r12
53cf(4): sub $0x18,%rsp
53d3(9): mov $0x28,%rax
53dc(5): mov %rax,0x8(%rsp)
53e1(2): xor %eax,%eax
53e3(5): lea 0x4(%rsp),%rax
53e8(3): test %rdi,%rdi
53eb(4): cmove %rax,%rbx
53ef(3): mov %rbx,%rdi
53f2(5): call 0xffffc01e(%rip)
53f7(4): cmp $0xfffffffd,%rax
53fb(3): mov %rax,%rbp
53fe(2): jbe 0x22(%rip)
5400(3): test %r12,%r12
5403(2): jz 0x1d(%rip)
5405(2): xor %edi,%edi
5407(5): call 0xc9(%rip)
540c(2): test %al,%al
540e(2): jnz 0x12(%rip)
5410(5): movzx 0x0(%r13),%eax
5415(5): mov $0x1,%ebp
541a(2): mov %eax,(%rbx)
541c(4): nop 0x0(%rax)
5420(5): mov 0x8(%rsp),%rdx
5425(9): xor $0x28,%rdx
542e(3): mov %rbp,%rax
5431(2): jnz 0xd(%rip)
5433(4): add $0x18,%rsp
5437(1): pop %rbx
5438(1): pop %rbp
5439(2): pop %r12
543b(2): pop %r13
543d(1): ret near (%rsp)
543e(5): call 0xffffbfb2(%rip)

"close_stream" :
5450(2): push %r12
5452(1): push %rbp
5453(3): mov %rdi,%rbp
5456(1): push %rbx
5457(5): call 0xffffbf09(%rip)
545c(3): mov 0x0(%rbp),%ebx
545f(3): mov %rbp,%rdi
5462(3): mov %rax,%r12
5465(5): call 0x10b(%rip)
546a(3): and $0x20,%ebx
546d(2): test %ebx,%ebx
546f(2): jnz 0x19(%rip)
5471(2): test %eax,%eax
5473(2): jz 0xc(%rip)
5475(3): test %r12,%r12
5478(5): mov $0xffffffff,%eax
547d(2): jz 0x3b(%rip)
547f(1): pop %rbx
5480(1): pop %rbp
5481(2): pop %r12
5483(1): ret near (%rsp)
5484(4): nop 0x0(%rax)
5488(2): test %eax,%eax
548a(2): jnz 0x1e(%rip)
548c(5): call 0xffffbea4(%rip)
5491(6): mov $0x0,(%rax)
5497(5): mov $0xffffffff,%eax
549c(1): pop %rbx
549d(1): pop %rbp
549e(2): pop %r12
54a0(1): ret near (%rsp)
54a1(7): nop 0x0(%rax)
54a8(1): pop %rbx
54a9(5): mov $0xffffffff,%eax
54ae(1): pop %rbp
54af(2): pop %r12
54b1(1): ret near (%rsp)
54b2(6): nop 0x0(%rax,%rax,1)
54b8(5): call 0xffffbe78(%rip)
54bd(3): cmp $0x9,(%rax)
54c0(1): pop %rbx
54c1(1): pop %rbp
54c2(2): pop %r12
54c4(3): setnz %al
54c7(3): movzx %al,%eax
54ca(2): neg %eax
54cc(1): ret near (%rsp)

"hard_locale" :
54d0(4): sub $0x8,%rsp
54d4(2): xor %esi,%esi
54d6(5): call 0xffffc02a(%rip)
54db(3): mov %rax,%rdx
54de(5): mov $0x1,%eax
54e3(3): test %rdx,%rdx
54e6(2): jz 0x1f(%rip)
54e8(7): lea 0x1071(%rip),%rdi
54ef(5): mov $0x2,%ecx
54f4(3): mov %rdx,%rsi
54f7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
54f9(3): setnbe %cl
54fc(3): sbb $0x0,%cl
54ff(2): xor %eax,%eax
5501(2): test %cl,%cl
5503(2): jnz 0xd(%rip)
5505(4): add $0x8,%rsp
5509(1): ret near (%rsp)
550a(6): nop 0x0(%rax,%rax,1)
5510(7): lea 0x104b(%rip),%rdi
5517(5): mov $0x6,%ecx
551c(3): mov %rdx,%rsi
551f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5521(3): setnbe %al
5524(2): sbb $0x0,%al
5526(2): test %al,%al
5528(3): setnz %al
552b(4): add $0x8,%rsp
552f(1): ret near (%rsp)

"locale_charset" :
5530(4): sub $0x8,%rsp
5534(5): mov $0xe,%edi
5539(5): call 0xffffbf97(%rip)
553e(3): test %rax,%rax
5541(2): jz 0x1f(%rip)
5543(3): cmp $0x0,(%rax)
5546(7): lea 0x101b(%rip),%rdx
554d(4): cmove %rdx,%rax
5551(4): add $0x8,%rsp
5555(1): ret near (%rsp)
5556(a): nop 0x0(%rax,%rax,1)
5560(7): lea 0x1001(%rip),%rax
5567(4): add $0x8,%rsp
556b(1): ret near (%rsp)

"rpl_fclose" :
5570(2): push %r12
5572(1): push %rbp
5573(1): push %rbx
5574(3): mov %rdi,%rbx
5577(5): call 0xffffbf29(%rip)
557c(2): test %eax,%eax
557e(3): mov %rbx,%rdi
5581(2): js 0x56(%rip)
5583(5): call 0xffffbf5d(%rip)
5588(2): test %eax,%eax
558a(2): jnz 0x2e(%rip)
558c(3): mov %rbx,%rdi
558f(5): call 0x61(%rip)
5594(2): test %eax,%eax
5596(2): jz 0x3e(%rip)
5598(5): call 0xffffbd98(%rip)
559d(3): mov (%rax),%r12d
55a0(3): mov %rbx,%rdi
55a3(3): mov %rax,%rbp
55a6(5): call 0xffffbdfa(%rip)
55ab(3): test %r12d,%r12d
55ae(2): jnz 0x32(%rip)
55b0(1): pop %rbx
55b1(1): pop %rbp
55b2(2): pop %r12
55b4(1): ret near (%rsp)
55b5(3): nop (%rax)
55b8(3): mov %rbx,%rdi
55bb(5): call 0xffffbee5(%rip)
55c0(2): xor %esi,%esi
55c2(5): mov $0x1,%edx
55c7(2): mov %eax,%edi
55c9(5): call 0xffffbe67(%rip)
55ce(4): cmp $0xffffffff,%rax
55d2(2): jnz 0xffffffba(%rip)
55d4(3): mov %rbx,%rdi
55d7(1): pop %rbx
55d8(1): pop %rbp
55d9(2): pop %r12
55db(5): jmp 0xffffbdc5(%rip)
55e0(4): mov %r12d,0x0(%rbp)
55e4(5): mov $0xffffffff,%eax
55e9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
55f0(3): test %rdi,%rdi
55f3(1): push %rbx
55f4(3): mov %rdi,%rbx
55f7(2): jz 0x13(%rip)
55f9(5): call 0xffffbee7(%rip)
55fe(2): test %eax,%eax
5600(2): jz 0xa(%rip)
5602(6): test $0x100,(%rbx)
5608(2): jnz 0x10(%rip)
560a(3): mov %rbx,%rdi
560d(1): pop %rbx
560e(5): jmp 0xffffbeb2(%rip)
5613(5): nop 0x0(%rax,%rax,1)
5618(3): mov %rbx,%rdi
561b(5): mov $0x1,%edx
5620(2): xor %esi,%esi
5622(5): call 0xe(%rip)
5627(3): mov %rbx,%rdi
562a(1): pop %rbx
562b(5): jmp 0xffffbe95(%rip)

"rpl_fseeko" :
5630(4): mov 0x8(%rdi),%rax
5634(4): cmp %rax,0x10(%rdi)
5638(2): jz 0x8(%rip)
563a(5): jmp 0xffffbf06(%rip)
563f(1): nop 
5640(4): mov 0x20(%rdi),%rax
5644(4): cmp %rax,0x28(%rdi)
5648(2): jnz 0xfffffff2(%rip)
564a(5): cmp $0x0,0x48(%rdi)
564f(2): jnz 0xffffffeb(%rip)
5651(2): push %r12
5653(1): push %rbp
5654(3): mov %edx,%r12d
5657(1): push %rbx
5658(3): mov %rsi,%rbp
565b(3): mov %rdi,%rbx
565e(5): call 0xffffbe42(%rip)
5663(3): mov %r12d,%edx
5666(3): mov %rbp,%rsi
5669(2): mov %eax,%edi
566b(5): call 0xffffbdc5(%rip)
5670(4): cmp $0xffffffff,%rax
5674(2): jz 0xe(%rip)
5676(3): and $0xef,(%rbx)
5679(7): mov %rax,0x90(%rbx)
5680(2): xor %eax,%eax
5682(1): pop %rbx
5683(1): pop %rbp
5684(2): pop %r12
5686(1): ret near (%rsp)

"__libc_csu_init" :
5690(2): push %r15
5692(2): push %r14
5694(3): mov %rdx,%r15
5697(2): push %r13
5699(2): push %r12
569b(7): lea 0x2024ee(%rip),%r12
56a2(1): push %rbp
56a3(7): lea 0x2024ee(%rip),%rbp
56aa(1): push %rbx
56ab(3): mov %edi,%r13d
56ae(3): mov %rsi,%r14
56b1(3): sub %r12,%rbp
56b4(4): sub $0x8,%rsp
56b8(4): sar $0x3,%rbp
56bc(5): call 0xffffbc14(%rip)
56c1(3): test %rbp,%rbp
56c4(2): jz 0x22(%rip)
56c6(2): xor %ebx,%ebx
56c8(8): nop 0x0(%rax,%rax,1)
56d0(3): mov %r15,%rdx
56d3(3): mov %r14,%rsi
56d6(3): mov %r13d,%edi
56d9(4): call 0x0(%r12,%rbx,8)
56dd(4): add $0x1,%rbx
56e1(3): cmp %rbx,%rbp
56e4(2): jnz 0xffffffec(%rip)
56e6(4): add $0x8,%rsp
56ea(1): pop %rbx
56eb(1): pop %rbp
56ec(2): pop %r12
56ee(2): pop %r13
56f0(2): pop %r14
56f2(2): pop %r15
56f4(1): ret near (%rsp)

"atexit" :
5710(7): mov 0x2028f1(%rip),%rdx
5717(2): xor %esi,%esi
5719(5): jmp 0xffffbe37(%rip)

"_fini" :
5720(4): sub $0x8,%rsp
5724(4): add $0x8,%rsp
5728(1): ret near (%rsp)

