
"__uflow@plt" :
13a0(6): jmp 0x206aba(%rip)
13a6(5): push $0x0

"free@plt" :
13b0(6): jmp 0x206ab2(%rip)
13b6(5): push $0x1

"abort@plt" :
13c0(6): jmp 0x206aaa(%rip)
13c6(5): push $0x2

"__errno_location@plt" :
13d0(6): jmp 0x206aa2(%rip)
13d6(5): push $0x3

"strncmp@plt" :
13e0(6): jmp 0x206a9a(%rip)
13e6(5): push $0x4

"_exit@plt" :
13f0(6): jmp 0x206a92(%rip)
13f6(5): push $0x5

"__fpending@plt" :
1400(6): jmp 0x206a8a(%rip)
1406(5): push $0x6

"clearerr_unlocked@plt" :
1410(6): jmp 0x206a82(%rip)
1416(5): push $0x7

"textdomain@plt" :
1420(6): jmp 0x206a7a(%rip)
1426(5): push $0x8

"fclose@plt" :
1430(6): jmp 0x206a72(%rip)
1436(5): push $0x9

"bindtextdomain@plt" :
1440(6): jmp 0x206a6a(%rip)
1446(5): push $0xa

"dcgettext@plt" :
1450(6): jmp 0x206a62(%rip)
1456(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1460(6): jmp 0x206a5a(%rip)
1466(5): push $0xc

"strlen@plt" :
1470(6): jmp 0x206a52(%rip)
1476(5): push $0xd

"__stack_chk_fail@plt" :
1480(6): jmp 0x206a4a(%rip)
1486(5): push $0xe

"getopt_long@plt" :
1490(6): jmp 0x206a42(%rip)
1496(5): push $0xf

"mbrtowc@plt" :
14a0(6): jmp 0x206a3a(%rip)
14a6(5): push $0x10

"__overflow@plt" :
14b0(6): jmp 0x206a32(%rip)
14b6(5): push $0x11

"strrchr@plt" :
14c0(6): jmp 0x206a2a(%rip)
14c6(5): push $0x12

"lseek@plt" :
14d0(6): jmp 0x206a22(%rip)
14d6(5): push $0x13

"memset@plt" :
14e0(6): jmp 0x206a1a(%rip)
14e6(5): push $0x14

"posix_fadvise@plt" :
14f0(6): jmp 0x206a12(%rip)
14f6(5): push $0x15

"memcmp@plt" :
1500(6): jmp 0x206a0a(%rip)
1506(5): push $0x16

"fputs_unlocked@plt" :
1510(6): jmp 0x206a02(%rip)
1516(5): push $0x17

"calloc@plt" :
1520(6): jmp 0x2069fa(%rip)
1526(5): push $0x18

"memcpy@plt" :
1530(6): jmp 0x2069f2(%rip)
1536(5): push $0x19

"fileno@plt" :
1540(6): jmp 0x2069ea(%rip)
1546(5): push $0x1a

"malloc@plt" :
1550(6): jmp 0x2069e2(%rip)
1556(5): push $0x1b

"fflush@plt" :
1560(6): jmp 0x2069da(%rip)
1566(5): push $0x1c

"nl_langinfo@plt" :
1570(6): jmp 0x2069d2(%rip)
1576(5): push $0x1d

"__freading@plt" :
1580(6): jmp 0x2069ca(%rip)
1586(5): push $0x1e

"fwrite_unlocked@plt" :
1590(6): jmp 0x2069c2(%rip)
1596(5): push $0x1f

"realloc@plt" :
15a0(6): jmp 0x2069ba(%rip)
15a6(5): push $0x20

"setlocale@plt" :
15b0(6): jmp 0x2069b2(%rip)
15b6(5): push $0x21

"__printf_chk@plt" :
15c0(6): jmp 0x2069aa(%rip)
15c6(5): push $0x22

"error@plt" :
15d0(6): jmp 0x2069a2(%rip)
15d6(5): push $0x23

"fseeko@plt" :
15e0(6): jmp 0x20699a(%rip)
15e6(5): push $0x24

"fopen@plt" :
15f0(6): jmp 0x206992(%rip)
15f6(5): push $0x25

"__cxa_atexit@plt" :
1600(6): jmp 0x20698a(%rip)
1606(5): push $0x26

"exit@plt" :
1610(6): jmp 0x206982(%rip)
1616(5): push $0x27

"fwrite@plt" :
1620(6): jmp 0x20697a(%rip)
1626(5): push $0x28

"__fprintf_chk@plt" :
1630(6): jmp 0x206972(%rip)
1636(5): push $0x29

"mbsinit@plt" :
1640(6): jmp 0x20696a(%rip)
1646(5): push $0x2a

"iswprint@plt" :
1650(6): jmp 0x206962(%rip)
1656(5): push $0x2b

"__ctype_b_loc@plt" :
1660(6): jmp 0x20695a(%rip)
1666(5): push $0x2c

".plt.got" :
1670(6): jmp 0x206972(%rip)
1676(2): nop 

"_init" :
1378(4): sub $0x8,%rsp
137c(7): mov 0x206c55(%rip),%rax
1383(3): test %rax,%rax
1386(2): jz 0x4(%rip)
1388(2): call %rax
138a(4): add $0x8,%rsp
138e(1): ret near (%rsp)

"write_error" :
1680(1): push %rbx
1681(7): lea 0x3b5c(%rip),%rsi
1688(5): mov $0x5,%edx
168d(2): xor %edi,%edi
168f(5): call 0xfffffdc1(%rip)
1694(3): mov %rax,%rbx
1697(5): call 0xfffffd39(%rip)
169c(2): mov (%rax),%esi
169e(3): mov %rbx,%rdx
16a1(5): mov $0x1,%edi
16a6(2): xor %eax,%eax
16a8(5): call 0xffffff28(%rip)
16ad(3): nop (%rax)
16b0(2): push %r13
16b2(2): push %r12
16b4(7): lea 0x3bf7(%rip),%r13
16bb(1): push %rbp
16bc(1): push %rbx
16bd(2): mov %edi,%ebp
16bf(3): mov %rsi,%rbx
16c2(7): lea 0x3bec(%rip),%r12
16c9(4): sub $0x8,%rsp
16cd(3): mov (%rsi),%rdi
16d0(5): call 0x11c0(%rip)
16d5(7): lea 0x3bda(%rip),%rsi
16dc(5): mov $0x6,%edi
16e1(5): call 0xfffffecf(%rip)
16e6(7): lea 0x3bca(%rip),%rsi
16ed(7): lea 0x3b95(%rip),%rdi
16f4(5): call 0xfffffd4c(%rip)
16f9(7): lea 0x3b89(%rip),%rdi
1700(5): call 0xfffffd20(%rip)
1705(7): lea 0x1094(%rip),%rdi
170c(5): call 0x3ab4(%rip)
1711(7): mov $0x0,0x2069e9(%rip)
1718(7): mov $0x0,0x2069e1(%rip)
171f(7): lea 0x20641a(%rip),%rcx
1726(7): lea 0x3bc1(%rip),%rdx
172d(3): xor %r8d,%r8d
1730(3): mov %rbx,%rsi
1733(2): mov %ebp,%edi
1735(5): call 0xfffffd5b(%rip)
173a(3): cmp $0xff,%eax
173d(6): jz 0x9f(%rip)
1743(3): cmp $0x64,%eax
1746(2): jz 0x72(%rip)
1748(2): jle 0x20(%rip)
174a(3): cmp $0x73,%eax
174d(6): jz 0x83(%rip)
1753(3): cmp $0x7a,%eax
1756(6): jnz 0x241(%rip)
175c(7): mov $0x0,0x2068ad(%rip)
1763(2): jmp 0xffffffbc(%rip)
1765(3): nop (%rax)
1768(5): cmp $0xffffff7d,%eax
176d(6): jnz 0x21c(%rip)
1773(4): sub $0x8,%rsp
1777(7): mov 0x20692a(%rip),%rdi
177e(7): mov 0x206893(%rip),%rcx
1785(2): push $0x0
1787(7): lea 0x3b41(%rip),%r9
178e(7): lea 0x3b4a(%rip),%r8
1795(7): lea 0x3ae9(%rip),%rdx
179c(7): lea 0x3a66(%rip),%rsi
17a3(2): xor %eax,%eax
17a5(5): call 0x32db(%rip)
17aa(2): xor %edi,%edi
17ac(5): call 0xfffffe64(%rip)
17b1(7): nop 0x0(%rax)
17b8(7): mov 0x206901(%rip),%r12
17bf(5): cmp $0x0,(%r12)
17c4(4): cmove %r13,%r12
17c8(5): jmp 0xffffff57(%rip)
17cd(3): nop (%rax)
17d0(7): mov $0x1,0x206929(%rip)
17d7(5): jmp 0xffffff48(%rip)
17dc(7): movsxd 0x2068d5(%rip),%rax
17e3(2): sub %eax,%ebp
17e5(2): jnz 0x12(%rip)
17e7(7): lea 0x3eec(%rip),%rcx
17ee(5): mov $0x1,%ebp
17f3(4): mov %rcx,0x0(%rbx,%rax,8)
17f7(3): mov %r12,%rdi
17fa(5): call 0x3616(%rip)
17ff(3): mov %r12,%rcx
1802(7): mov %rax,0x2068ef(%rip)
1809(2): jmp 0x11(%rip)
180b(5): nop 0x0(%rax,%rax,1)
1810(4): add $0x1,%rcx
1814(2): mov %dl,(%rax)
1816(4): add $0x1,%rax
181a(3): movzx (%rcx),%edx
181d(2): test %dl,%dl
181f(2): jz 0x66(%rip)
1821(3): cmp $0x5c,%dl
1824(2): jnz 0xffffffec(%rip)
1826(4): movzx 0x1(%rcx),%edx
182a(3): cmp $0x66,%dl
182d(6): jz 0x154(%rip)
1833(2): jnle 0x28(%rip)
1835(3): cmp $0x30,%dl
1838(6): jz 0x141(%rip)
183e(6): jle 0x9c(%rip)
1844(3): cmp $0x5c,%dl
1847(6): jz 0xe4(%rip)
184d(3): cmp $0x62,%dl
1850(6): jnz 0xeb(%rip)
1856(3): mov $0x8,(%rax)
1859(2): jmp 0x26(%rip)
185b(3): cmp $0x72,%dl
185e(6): jz 0x113(%rip)
1864(6): jle 0xba(%rip)
186a(3): cmp $0x74,%dl
186d(6): jz 0xc6(%rip)
1873(3): cmp $0x76,%dl
1876(6): jnz 0xc5(%rip)
187c(3): mov $0xb,(%rax)
187f(4): add $0x2,%rcx
1883(2): jmp 0xffffff93(%rip)
1885(7): cmp $0x0,0x206874(%rip)
188c(7): mov %rax,0x20685d(%rip)
1893(7): lea 0x226(%rip),%rdx
189a(7): lea 0x7cf(%rip),%rax
18a1(3): movsxd %ebp,%rdi
18a4(4): cmove %rdx,%rax
18a8(7): movsxd 0x206809(%rip),%rdx
18af(4): lea 0x0(%rbx,%rdx,8),%rsi
18b3(2): call %rax
18b5(7): mov 0x20683c(%rip),%rdi
18bc(2): mov %eax,%ebx
18be(5): call 0xfffffaf2(%rip)
18c3(7): cmp $0x0,0x206837(%rip)
18ca(2): jnz 0x78(%rip)
18cc(3): xor $0x1,%ebx
18cf(1): pop %rdx
18d0(3): movzx %bl,%eax
18d3(1): pop %rbx
18d4(1): pop %rbp
18d5(2): pop %r12
18d7(2): pop %r13
18d9(1): ret near (%rsp)
18da(2): test %dl,%dl
18dc(2): jnz 0x5f(%rip)
18de(3): mov %r12,%rdx
18e1(5): mov $0x6,%esi
18e6(2): xor %edi,%edi
18e8(7): mov %rax,0x206801(%rip)
18ef(5): call 0x2ae1(%rip)
18f4(7): lea 0x3d5d(%rip),%rsi
18fb(3): mov %rax,%rbx
18fe(5): mov $0x5,%edx
1903(2): xor %edi,%edi
1905(5): call 0xfffffb4b(%rip)
190a(3): mov %rbx,%rcx
190d(3): mov %rax,%rdx
1910(2): xor %esi,%esi
1912(5): mov $0x1,%edi
1917(2): xor %eax,%eax
1919(5): call 0xfffffcb7(%rip)
191e(3): cmp $0x6e,%dl
1921(2): jnz 0x1a(%rip)
1923(3): mov $0xa,(%rax)
1926(5): jmp 0xffffff59(%rip)
192b(3): mov $0x5c,(%rax)
192e(5): jmp 0xffffff51(%rip)
1933(3): mov $0x9,(%rax)
1936(5): jmp 0xffffff49(%rip)
193b(2): mov %dl,(%rax)
193d(5): jmp 0xffffff42(%rip)
1942(7): mov 0x206767(%rip),%rdi
1949(5): call 0x3527(%rip)
194e(3): add $0x1,%eax
1951(6): jnz 0xffffff7b(%rip)
1957(5): call 0xfffffa79(%rip)
195c(2): mov (%rax),%esi
195e(7): lea 0x3d75(%rip),%rdx
1965(5): mov $0x1,%edi
196a(2): xor %eax,%eax
196c(5): call 0xfffffc64(%rip)
1971(3): mov $0xd,(%rax)
1974(5): jmp 0xffffff0b(%rip)
1979(3): mov $0x0,(%rax)
197c(5): jmp 0xffffff03(%rip)
1981(3): mov $0xc,(%rax)
1984(5): jmp 0xfffffefb(%rip)
1989(5): cmp $0xffffff7e,%eax
198e(2): jnz 0x9(%rip)
1990(2): xor %edi,%edi
1992(5): call 0xa0e(%rip)
1997(5): mov $0x1,%edi
199c(5): call 0xa04(%rip)

"main" :
16b0(2): push %r13
16b2(2): push %r12
16b4(7): lea 0x3bf7(%rip),%r13
16bb(1): push %rbp
16bc(1): push %rbx
16bd(2): mov %edi,%ebp
16bf(3): mov %rsi,%rbx
16c2(7): lea 0x3bec(%rip),%r12
16c9(4): sub $0x8,%rsp
16cd(3): mov (%rsi),%rdi
16d0(5): call 0x11c0(%rip)
16d5(7): lea 0x3bda(%rip),%rsi
16dc(5): mov $0x6,%edi
16e1(5): call 0xfffffecf(%rip)
16e6(7): lea 0x3bca(%rip),%rsi
16ed(7): lea 0x3b95(%rip),%rdi
16f4(5): call 0xfffffd4c(%rip)
16f9(7): lea 0x3b89(%rip),%rdi
1700(5): call 0xfffffd20(%rip)
1705(7): lea 0x1094(%rip),%rdi
170c(5): call 0x3ab4(%rip)
1711(7): mov $0x0,0x2069e9(%rip)
1718(7): mov $0x0,0x2069e1(%rip)
171f(7): lea 0x20641a(%rip),%rcx
1726(7): lea 0x3bc1(%rip),%rdx
172d(3): xor %r8d,%r8d
1730(3): mov %rbx,%rsi
1733(2): mov %ebp,%edi
1735(5): call 0xfffffd5b(%rip)
173a(3): cmp $0xff,%eax
173d(6): jz 0x9f(%rip)
1743(3): cmp $0x64,%eax
1746(2): jz 0x72(%rip)
1748(2): jle 0x20(%rip)
174a(3): cmp $0x73,%eax
174d(6): jz 0x83(%rip)
1753(3): cmp $0x7a,%eax
1756(6): jnz 0x241(%rip)
175c(7): mov $0x0,0x2068ad(%rip)
1763(2): jmp 0xffffffbc(%rip)
1765(3): nop (%rax)
1768(5): cmp $0xffffff7d,%eax
176d(6): jnz 0x21c(%rip)
1773(4): sub $0x8,%rsp
1777(7): mov 0x20692a(%rip),%rdi
177e(7): mov 0x206893(%rip),%rcx
1785(2): push $0x0
1787(7): lea 0x3b41(%rip),%r9
178e(7): lea 0x3b4a(%rip),%r8
1795(7): lea 0x3ae9(%rip),%rdx
179c(7): lea 0x3a66(%rip),%rsi
17a3(2): xor %eax,%eax
17a5(5): call 0x32db(%rip)
17aa(2): xor %edi,%edi
17ac(5): call 0xfffffe64(%rip)
17b1(7): nop 0x0(%rax)
17b8(7): mov 0x206901(%rip),%r12
17bf(5): cmp $0x0,(%r12)
17c4(4): cmove %r13,%r12
17c8(5): jmp 0xffffff57(%rip)
17cd(3): nop (%rax)
17d0(7): mov $0x1,0x206929(%rip)
17d7(5): jmp 0xffffff48(%rip)
17dc(7): movsxd 0x2068d5(%rip),%rax
17e3(2): sub %eax,%ebp
17e5(2): jnz 0x12(%rip)
17e7(7): lea 0x3eec(%rip),%rcx
17ee(5): mov $0x1,%ebp
17f3(4): mov %rcx,0x0(%rbx,%rax,8)
17f7(3): mov %r12,%rdi
17fa(5): call 0x3616(%rip)
17ff(3): mov %r12,%rcx
1802(7): mov %rax,0x2068ef(%rip)
1809(2): jmp 0x11(%rip)
180b(5): nop 0x0(%rax,%rax,1)
1810(4): add $0x1,%rcx
1814(2): mov %dl,(%rax)
1816(4): add $0x1,%rax
181a(3): movzx (%rcx),%edx
181d(2): test %dl,%dl
181f(2): jz 0x66(%rip)
1821(3): cmp $0x5c,%dl
1824(2): jnz 0xffffffec(%rip)
1826(4): movzx 0x1(%rcx),%edx
182a(3): cmp $0x66,%dl
182d(6): jz 0x154(%rip)
1833(2): jnle 0x28(%rip)
1835(3): cmp $0x30,%dl
1838(6): jz 0x141(%rip)
183e(6): jle 0x9c(%rip)
1844(3): cmp $0x5c,%dl
1847(6): jz 0xe4(%rip)
184d(3): cmp $0x62,%dl
1850(6): jnz 0xeb(%rip)
1856(3): mov $0x8,(%rax)
1859(2): jmp 0x26(%rip)
185b(3): cmp $0x72,%dl
185e(6): jz 0x113(%rip)
1864(6): jle 0xba(%rip)
186a(3): cmp $0x74,%dl
186d(6): jz 0xc6(%rip)
1873(3): cmp $0x76,%dl
1876(6): jnz 0xc5(%rip)
187c(3): mov $0xb,(%rax)
187f(4): add $0x2,%rcx
1883(2): jmp 0xffffff93(%rip)
1885(7): cmp $0x0,0x206874(%rip)
188c(7): mov %rax,0x20685d(%rip)
1893(7): lea 0x226(%rip),%rdx
189a(7): lea 0x7cf(%rip),%rax
18a1(3): movsxd %ebp,%rdi
18a4(4): cmove %rdx,%rax
18a8(7): movsxd 0x206809(%rip),%rdx
18af(4): lea 0x0(%rbx,%rdx,8),%rsi
18b3(2): call %rax
18b5(7): mov 0x20683c(%rip),%rdi
18bc(2): mov %eax,%ebx
18be(5): call 0xfffffaf2(%rip)
18c3(7): cmp $0x0,0x206837(%rip)
18ca(2): jnz 0x78(%rip)
18cc(3): xor $0x1,%ebx
18cf(1): pop %rdx
18d0(3): movzx %bl,%eax
18d3(1): pop %rbx
18d4(1): pop %rbp
18d5(2): pop %r12
18d7(2): pop %r13
18d9(1): ret near (%rsp)
18da(2): test %dl,%dl
18dc(2): jnz 0x5f(%rip)
18de(3): mov %r12,%rdx
18e1(5): mov $0x6,%esi
18e6(2): xor %edi,%edi
18e8(7): mov %rax,0x206801(%rip)
18ef(5): call 0x2ae1(%rip)
18f4(7): lea 0x3d5d(%rip),%rsi
18fb(3): mov %rax,%rbx
18fe(5): mov $0x5,%edx
1903(2): xor %edi,%edi
1905(5): call 0xfffffb4b(%rip)
190a(3): mov %rbx,%rcx
190d(3): mov %rax,%rdx
1910(2): xor %esi,%esi
1912(5): mov $0x1,%edi
1917(2): xor %eax,%eax
1919(5): call 0xfffffcb7(%rip)
191e(3): cmp $0x6e,%dl
1921(2): jnz 0x1a(%rip)
1923(3): mov $0xa,(%rax)
1926(5): jmp 0xffffff59(%rip)
192b(3): mov $0x5c,(%rax)
192e(5): jmp 0xffffff51(%rip)
1933(3): mov $0x9,(%rax)
1936(5): jmp 0xffffff49(%rip)
193b(2): mov %dl,(%rax)
193d(5): jmp 0xffffff42(%rip)
1942(7): mov 0x206767(%rip),%rdi
1949(5): call 0x3527(%rip)
194e(3): add $0x1,%eax
1951(6): jnz 0xffffff7b(%rip)
1957(5): call 0xfffffa79(%rip)
195c(2): mov (%rax),%esi
195e(7): lea 0x3d75(%rip),%rdx
1965(5): mov $0x1,%edi
196a(2): xor %eax,%eax
196c(5): call 0xfffffc64(%rip)
1971(3): mov $0xd,(%rax)
1974(5): jmp 0xffffff0b(%rip)
1979(3): mov $0x0,(%rax)
197c(5): jmp 0xffffff03(%rip)
1981(3): mov $0xc,(%rax)
1984(5): jmp 0xfffffefb(%rip)
1989(5): cmp $0xffffff7e,%eax
198e(2): jnz 0x9(%rip)
1990(2): xor %edi,%edi
1992(5): call 0xa0e(%rip)
1997(5): mov $0x1,%edi
199c(5): call 0xa04(%rip)

"_start" :
19b0(2): xor %ebp,%ebp
19b2(3): mov %rdx,%r9
19b5(1): pop %rsi
19b6(3): mov %rsp,%rdx
19b9(4): and $0xfffffff0,%rsp
19bd(1): push %rax
19be(1): push %rsp
19bf(7): lea 0x37ea(%rip),%r8
19c6(7): lea 0x3773(%rip),%rcx
19cd(7): lea 0xfffffcdc(%rip),%rdi
19d4(6): call 0x2065f6(%rip)
19da(1): hlt 

"deregister_tm_clones" :
19e0(7): lea 0x2066b9(%rip),%rdi
19e7(1): push %rbp
19e8(7): lea 0x2066b1(%rip),%rax
19ef(3): cmp %rdi,%rax
19f2(3): mov %rsp,%rbp
19f5(2): jz 0x1b(%rip)
19f7(7): mov 0x2065ca(%rip),%rax
19fe(3): test %rax,%rax
1a01(2): jz 0xf(%rip)
1a03(1): pop %rbp
1a04(2): jmp %rax
1a06(a): nop 0x0(%rax,%rax,1)
1a10(1): pop %rbp
1a11(1): ret near (%rsp)

"register_tm_clones" :
1a20(7): lea 0x206679(%rip),%rdi
1a27(7): lea 0x206672(%rip),%rsi
1a2e(1): push %rbp
1a2f(3): sub %rdi,%rsi
1a32(3): mov %rsp,%rbp
1a35(4): sar $0x3,%rsi
1a39(3): mov %rsi,%rax
1a3c(4): shr $0x3f,%rax
1a40(3): add %rax,%rsi
1a43(3): sar $0x1,%rsi
1a46(2): jz 0x1a(%rip)
1a48(7): mov 0x206591(%rip),%rax
1a4f(3): test %rax,%rax
1a52(2): jz 0xe(%rip)
1a54(1): pop %rbp
1a55(2): jmp %rax
1a57(9): nop 0x0(%rax,%rax,1)
1a60(1): pop %rbp
1a61(1): ret near (%rsp)

"__do_global_dtors_aux" :
1a70(7): cmp $0x0,0x206671(%rip)
1a77(2): jnz 0x31(%rip)
1a79(8): cmp $0x0,0x206567(%rip)
1a81(1): push %rbp
1a82(3): mov %rsp,%rbp
1a85(2): jz 0xe(%rip)
1a87(7): mov 0x20657a(%rip),%rdi
1a8e(5): call 0xfffffbe2(%rip)
1a93(5): call 0xffffff4d(%rip)
1a98(7): mov $0x1,0x206649(%rip)
1a9f(1): pop %rbp
1aa0(1): ret near (%rsp)
1aa1(7): nop 0x0(%rax)
1aa8(2): REP ret near (%rsp)

"frame_dummy" :
1ab0(1): push %rbp
1ab1(3): mov %rsp,%rbp
1ab4(1): pop %rbp
1ab5(5): jmp 0xffffff6b(%rip)

"paste_parallel" :
1ac0(2): push %r15
1ac2(2): push %r14
1ac4(2): push %r13
1ac6(2): push %r12
1ac8(1): push %rbp
1ac9(1): push %rbx
1aca(3): mov %rdi,%rbx
1acd(4): add $0x2,%rdi
1ad1(4): sub $0x48,%rsp
1ad5(5): mov %rsi,0x30(%rsp)
1ada(5): call 0x3106(%rip)
1adf(5): mov $0x8,%edx
1ae4(4): lea 0x1(%rbx),%rcx
1ae8(5): mov %rax,0x20(%rsp)
1aed(3): mov %rdx,%rax
1af0(3): mul %rax,%rcx,%rdx
1af3(6): jo 0x513(%rip)
1af9(2): xor %esi,%esi
1afb(3): test %rax,%rax
1afe(6): js 0x512(%rip)
1b04(3): test %rsi,%rsi
1b07(6): jnz 0x509(%rip)
1b0d(8): lea 0x0(,%rcx,8),%rdi
1b15(5): call 0x30cb(%rip)
1b1a(3): test %rbx,%rbx
1b1d(5): mov %rax,0x38(%rsp)
1b22(6): jz 0x4da(%rip)
1b28(5): mov 0x30(%rsp),%r13
1b2d(5): mov $0x0,0x2f(%rsp)
1b32(3): xor %r14d,%r14d
1b35(7): lea 0x3b9e(%rip),%r12
1b3c(5): mov $0x1,%ebp
1b41(3): mov %rax,%r15
1b44(2): jmp 0x21(%rip)
1b46(7): mov 0x206563(%rip),%rax
1b4d(4): add $0x8,%r13
1b51(7): mov %bpl,0x2065a9(%rip)
1b58(4): mov %rax,0x0(%r15,%r14,8)
1b5c(4): add $0x1,%r14
1b60(3): cmp %r14,%rbx
1b63(2): jz 0x72(%rip)
1b65(4): mov 0x0(%r13),%r8
1b69(5): mov $0x2,%ecx
1b6e(3): mov %r12,%rdi
1b71(3): mov %r8,%rsi
1b74(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1b76(3): setnbe %al
1b79(2): sbb $0x0,%al
1b7b(2): test %al,%al
1b7d(2): jz 0xffffffc9(%rip)
1b7f(7): lea 0x3668(%rip),%rsi
1b86(3): mov %r8,%rdi
1b89(5): call 0xfffffa67(%rip)
1b8e(3): test %rax,%rax
1b91(4): mov %rax,0x0(%r15,%r14,8)
1b95(6): jz 0x480(%rip)
1b9b(3): mov %rax,%rdi
1b9e(5): mov %rax,0x8(%rsp)
1ba3(5): call 0xfffff99d(%rip)
1ba8(2): test %eax,%eax
1baa(5): movzx 0x2f(%rsp),%eax
1baf(5): mov 0x8(%rsp),%rcx
1bb4(5): mov $0x2,%esi
1bb9(3): mov %rcx,%rdi
1bbc(3): cmove %ebp,%eax
1bbf(4): add $0x1,%r14
1bc3(4): add $0x8,%r13
1bc7(4): mov %al,0x2f(%rsp)
1bcb(5): call 0xc95(%rip)
1bd0(3): cmp %r14,%rbx
1bd3(2): jnz 0xffffff92(%rip)
1bd5(5): cmp $0x0,0x2f(%rsp)
1bda(5): mov %r14,0x8(%rsp)
1bdf(6): jz 0x409(%rip)
1be5(7): cmp $0x0,0x206515(%rip)
1bec(6): jnz 0x459(%rip)
1bf2(5): mov 0x8(%rsp),%rax
1bf7(5): mov %rax,0x10(%rsp)
1bfc(4): nop 0x0(%rax)
1c00(7): mov 0x2064f1(%rip),%rbp
1c07(5): mov 0x38(%rsp),%r15
1c0c(5): mov $0x1,%ebx
1c11(3): xor %r12d,%r12d
1c14(5): mov $0x0,0x2e(%rsp)
1c19(7): nop 0x0(%rax)
1c20(3): mov (%r15),%r13
1c23(3): test %r13,%r13
1c26(6): jz 0x110(%rip)
1c2c(4): mov 0x8(%r13),%rax
1c30(4): cmp %rax,0x10(%r13)
1c34(6): jbe 0x2f4(%rip)
1c3a(4): lea 0x1(%rax),%rdx
1c3e(4): mov %rdx,0x8(%r13)
1c42(4): movzx (%rax),%r14d
1c46(5): call 0xfffff78a(%rip)
1c4b(5): mov %rax,0x18(%rsp)
1c50(2): mov (%rax),%eax
1c52(3): test %r12,%r12
1c55(4): mov %eax,0x28(%rsp)
1c59(2): jz 0x29(%rip)
1c5b(7): mov 0x206446(%rip),%rcx
1c62(5): mov 0x20(%rsp),%rdi
1c67(3): mov %r12,%rdx
1c6a(5): mov $0x1,%esi
1c6f(5): call 0xfffff921(%rip)
1c74(3): cmp %rax,%r12
1c77(2): jnz 0x7d(%rip)
1c79(3): xor %r12d,%r12d
1c7c(4): cmp $0xff,%r14d
1c80(2): jz 0x80(%rip)
1c82(7): movzx 0x206387(%rip),%eax
1c89(3): mov %r14d,%esi
1c8c(3): cmp %eax,%r14d
1c8f(2): jnz 0x47(%rip)
1c91(5): jmp 0x147(%rip)
1c96(a): nop 0x0(%rax,%rax,1)
1ca0(4): lea 0x1(%rdx),%rax
1ca4(4): mov %rax,0x28(%rdi)
1ca8(3): mov %sil,(%rdx)
1cab(3): mov (%r15),%rdi
1cae(4): mov 0x8(%rdi),%rax
1cb2(4): cmp 0x10(%rdi),%rax
1cb6(6): jnb 0xda(%rip)
1cbc(4): lea 0x1(%rax),%rdx
1cc0(4): mov %rdx,0x8(%rdi)
1cc4(3): movzx (%rax),%esi
1cc7(7): movzx 0x206342(%rip),%eax
1cce(2): cmp %esi,%eax
1cd0(6): jz 0x108(%rip)
1cd6(7): mov 0x2063cb(%rip),%rdi
1cdd(4): mov 0x28(%rdi),%rdx
1ce1(4): cmp 0x30(%rdi),%rdx
1ce5(2): jb 0xffffffbb(%rip)
1ce7(4): movzx %sil,%esi
1ceb(5): call 0xfffff7c5(%rip)
1cf0(2): test %eax,%eax
1cf2(2): jns 0xffffffb9(%rip)
1cf4(5): call 0xfffff98c(%rip)
1cf9(7): nop 0x0(%rax)
1d00(5): test $0x20,0x0(%r13)
1d05(6): jnz 0x19b(%rip)
1d0b(7): cmp 0x20639e(%rip),%r13
1d12(3): mov %r13,%rdi
1d15(6): jz 0x1cd(%rip)
1d1b(5): call 0x3155(%rip)
1d20(3): cmp $0xff,%eax
1d23(6): jz 0x23d(%rip)
1d29(6): sub $0x1,0x10(%rsp)
1d2f(7): mov $0x0,(%r15)
1d36(5): cmp %rbx,0x8(%rsp)
1d3b(6): jz 0xd5(%rip)
1d41(4): movzx 0x0(%rbp),%eax
1d45(2): test %al,%al
1d47(2): jz 0xf(%rip)
1d49(5): mov 0x20(%rsp),%rcx
1d4e(4): mov %al,0x0(%rcx,%r12,1)
1d52(4): add $0x1,%r12
1d56(4): add $0x1,%rbp
1d5a(7): cmp %rbp,0x20638f(%rip)
1d61(2): jz 0x68(%rip)
1d63(5): cmp %rbx,0x8(%rsp)
1d68(3): setnbe %dl
1d6b(6): cmp $0x0,0x10(%rsp)
1d71(3): setnz %al
1d74(4): add $0x8,%r15
1d78(4): add $0x1,%rbx
1d7c(2): test %al,%dl
1d7e(6): jnz 0xfffffea2(%rip)
1d84(5): jmp 0xe0(%rip)
1d89(7): nop 0x0(%rax)
1d90(5): call 0xfffff610(%rip)
1d95(3): cmp $0xff,%eax
1d98(2): mov %eax,%esi
1d9a(6): jnz 0xffffff2d(%rip)
1da0(5): cmp %rbx,0x8(%rsp)
1da5(6): jz 0x14b(%rip)
1dab(4): movzx 0x0(%rbp),%eax
1daf(2): test %al,%al
1db1(6): jnz 0x14f(%rip)
1db7(4): add $0x1,%rbp
1dbb(7): cmp %rbp,0x20632e(%rip)
1dc2(5): mov $0x1,0x2e(%rsp)
1dc7(2): jnz 0xffffff9c(%rip)
1dc9(7): mov 0x206328(%rip),%rbp
1dd0(2): jmp 0xffffff93(%rip)
1dd2(6): nop 0x0(%rax,%rax,1)
1dd8(5): cmp %rbx,0x8(%rsp)
1ddd(2): jnz 0xffffffce(%rip)
1ddf(7): mov 0x2062c2(%rip),%rdi
1de6(4): mov 0x28(%rdi),%rdx
1dea(4): cmp 0x30(%rdi),%rdx
1dee(6): jnb 0x1ac(%rip)
1df4(4): lea 0x1(%rdx),%rcx
1df8(4): mov %rcx,0x28(%rdi)
1dfc(2): mov %al,(%rdx)
1dfe(5): mov $0x1,0x2e(%rsp)
1e03(5): jmp 0xffffff60(%rip)
1e08(8): nop 0x0(%rax,%rax,1)
1e10(5): cmp $0x0,0x2e(%rsp)
1e15(2): jz 0x4f(%rip)
1e17(3): test %r12,%r12
1e1a(7): mov 0x206287(%rip),%rcx
1e21(2): jz 0x24(%rip)
1e23(5): mov 0x20(%rsp),%rdi
1e28(3): mov %r12,%rdx
1e2b(5): mov $0x1,%esi
1e30(5): call 0xfffff760(%rip)
1e35(3): cmp %r12,%rax
1e38(6): jnz 0xfffffebc(%rip)
1e3e(7): mov 0x206263(%rip),%rcx
1e45(4): mov 0x28(%rcx),%rax
1e49(4): cmp 0x30(%rcx),%rax
1e4d(7): movzx 0x2061bc(%rip),%edx
1e54(6): jnb 0x15c(%rip)
1e5a(4): lea 0x1(%rax),%rsi
1e5e(4): mov %rsi,0x28(%rcx)
1e62(2): mov %dl,(%rax)
1e64(6): cmp $0x0,0x10(%rsp)
1e6a(6): jnz 0xfffffd96(%rip)
1e70(5): mov 0x38(%rsp),%rdi
1e75(5): call 0xfffff53b(%rip)
1e7a(5): mov 0x20(%rsp),%rdi
1e7f(5): call 0xfffff531(%rip)
1e84(5): movzx 0x2f(%rsp),%eax
1e89(4): add $0x48,%rsp
1e8d(1): pop %rbx
1e8e(1): pop %rbp
1e8f(2): pop %r12
1e91(2): pop %r13
1e93(2): pop %r14
1e95(2): pop %r15
1e97(1): ret near (%rsp)
1e98(8): nop 0x0(%rax,%rax,1)
1ea0(5): mov 0x30(%rsp),%rax
1ea5(2): xor %edi,%edi
1ea7(5): mov $0x3,%esi
1eac(5): mov 0xfffffff8(%rax,%rbx,8),%rdx
1eb1(5): call 0x251f(%rip)
1eb6(4): mov 0x28(%rsp),%esi
1eba(7): lea 0x37d4(%rip),%rdx
1ec1(2): xor %edi,%edi
1ec3(3): mov %rax,%rcx
1ec6(2): xor %eax,%eax
1ec8(5): call 0xfffff708(%rip)
1ecd(7): cmp 0x2061dc(%rip),%r13
1ed4(5): mov $0x0,0x2f(%rsp)
1ed9(3): mov %r13,%rdi
1edc(6): jnz 0xfffffe3f(%rip)
1ee2(5): call 0xfffff52e(%rip)
1ee7(5): jmp 0xfffffe42(%rip)
1eec(4): nop 0x0(%rax)
1ef0(7): movzx 0x206119(%rip),%eax
1ef7(5): jmp 0xfffffee8(%rip)
1efc(4): nop 0x0(%rax)
1f00(7): mov 0x2061a1(%rip),%rdi
1f07(4): mov 0x28(%rdi),%rdx
1f0b(4): cmp 0x30(%rdi),%rdx
1f0f(6): jnb 0xc1(%rip)
1f15(4): lea 0x1(%rdx),%rcx
1f19(4): mov %rcx,0x28(%rdi)
1f1d(2): mov %al,(%rdx)
1f1f(5): jmp 0xfffffe98(%rip)
1f24(4): nop 0x0(%rax)
1f28(3): mov %r13,%rdi
1f2b(5): call 0xfffff475(%rip)
1f30(3): mov %eax,%r14d
1f33(5): call 0xfffff49d(%rip)
1f38(5): mov %rax,0x18(%rsp)
1f3d(2): mov (%rax),%eax
1f3f(3): test %r12,%r12
1f42(4): mov %eax,0x28(%rsp)
1f46(6): jz 0xfffffd36(%rip)
1f4c(4): cmp $0xff,%r14d
1f50(6): jnz 0xfffffd0b(%rip)
1f56(5): jmp 0xfffffd26(%rip)
1f5b(5): nop 0x0(%rax,%rax,1)
1f60(5): mov 0x30(%rsp),%rax
1f65(5): mov $0x3,%esi
1f6a(2): xor %edi,%edi
1f6c(5): mov 0xfffffff8(%rax,%rbx,8),%rdx
1f71(5): call 0x245f(%rip)
1f76(3): mov %rax,%rcx
1f79(5): mov 0x18(%rsp),%rax
1f7e(7): lea 0x3710(%rip),%rdx
1f85(2): xor %edi,%edi
1f87(2): mov (%rax),%esi
1f89(2): xor %eax,%eax
1f8b(5): call 0xfffff645(%rip)
1f90(5): mov $0x0,0x2f(%rsp)
1f95(5): jmp 0xfffffd94(%rip)
1f9a(3): movzx %al,%esi
1f9d(5): call 0xfffff513(%rip)
1fa2(2): test %eax,%eax
1fa4(6): jns 0xfffffe5a(%rip)
1faa(5): jmp 0xfffffd4a(%rip)
1faf(1): nop 
1fb0(3): movzx %dl,%esi
1fb3(3): mov %rcx,%rdi
1fb6(5): call 0xfffff4fa(%rip)
1fbb(2): test %eax,%eax
1fbd(6): jns 0xfffffea7(%rip)
1fc3(5): jmp 0xfffffd31(%rip)
1fc8(8): nop 0x0(%rax,%rax,1)
1fd0(3): movzx %al,%esi
1fd3(5): call 0xfffff4dd(%rip)
1fd8(2): test %eax,%eax
1fda(6): jns 0xfffffddd(%rip)
1fe0(5): jmp 0xfffffd14(%rip)
1fe5(3): nop (%rax)
1fe8(5): mov 0x8(%rsp),%rax
1fed(5): mov $0x1,0x2f(%rsp)
1ff2(5): mov %rax,0x10(%rsp)
1ff7(5): jmp 0xfffffc09(%rip)
1ffc(5): mov $0x1,0x2f(%rsp)
2001(5): jmp 0xfffffe6f(%rip)
2006(5): mov $0x1,%esi
200b(5): jmp 0xfffffaf0(%rip)
2010(5): call 0x2e20(%rip)
2015(4): mov 0x0(%r13),%rdx
2019(5): mov $0x3,%esi
201e(2): xor %edi,%edi
2020(5): call 0x23b0(%rip)
2025(3): mov %rax,%rbx
2028(5): call 0xfffff3a8(%rip)
202d(2): mov (%rax),%esi
202f(7): lea 0x365f(%rip),%rdx
2036(3): mov %rbx,%rcx
2039(5): mov $0x1,%edi
203e(2): xor %eax,%eax
2040(5): call 0xfffff590(%rip)
2045(7): lea 0x31a4(%rip),%rsi
204c(5): mov $0x5,%edx
2051(2): xor %edi,%edi
2053(5): call 0xfffff3fd(%rip)
2058(2): xor %esi,%esi
205a(3): mov %rax,%rdx
205d(5): mov $0x1,%edi
2062(2): xor %eax,%eax
2064(5): call 0xfffff56c(%rip)
2069(7): nop 0x0(%rax)
2070(2): push %r15
2072(2): push %r14
2074(2): push %r13
2076(2): push %r12
2078(1): push %rbp
2079(1): push %rbx
207a(4): sub $0x18,%rsp
207e(3): test %rdi,%rdi
2081(6): jz 0x2ff(%rip)
2087(3): mov %rdi,%rbp
208a(3): mov %rsi,%rbx
208d(5): call 0xfffff343(%rip)
2092(5): mov $0x1,0xb(%rsp)
2097(4): mov %rax,(%rsp)
209b(5): nop 0x0(%rax,%rax,1)
20a0(3): mov (%rbx),%rax
20a3(7): lea 0x3630(%rip),%rdi
20aa(5): mov $0x2,%ecx
20af(3): mov %rax,%rsi
20b2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
20b4(4): setnbe %r9b
20b8(4): sbb $0x0,%r9b
20bc(4): movsx %r9b,%r12d
20c0(3): test %r12d,%r12d
20c3(6): jnz 0xdd(%rip)
20c9(7): mov 0x205fe0(%rip),%r15
20d0(7): mov $0x1,0x20602a(%rip)
20d7(4): mov 0x8(%r15),%rdx
20db(4): mov 0x10(%r15),%rsi
20df(7): mov 0x206012(%rip),%r14
20e6(3): cmp %rsi,%rdx
20e9(6): jnb 0x1b7(%rip)
20ef(4): lea 0x1(%rdx),%rax
20f3(4): mov %rax,0x8(%r15)
20f7(3): movzx (%rdx),%edx
20fa(2): jmp 0x26(%rip)
20fc(4): nop 0x0(%rax)
2100(4): movzx (%r14),%eax
2104(2): test %al,%al
2106(2): jnz 0x62(%rip)
2108(4): add $0x1,%r14
210c(7): cmp %r14,0x205fdd(%rip)
2113(2): jz 0x81(%rip)
2115(4): mov 0x8(%r15),%rax
2119(4): mov 0x10(%r15),%rsi
211d(3): mov %r13d,%edx
2120(3): cmp %rax,%rsi
2123(6): jbe 0xad(%rip)
2129(4): lea 0x1(%rax),%rsi
212d(4): mov %rsi,0x8(%r15)
2131(4): movzx (%rax),%r13d
2135(7): movzx 0x205ed4(%rip),%eax
213c(2): cmp %edx,%eax
213e(2): jz 0xffffffc2(%rip)
2140(7): mov 0x205f61(%rip),%rdi
2147(4): mov 0x28(%rdi),%rax
214b(4): cmp 0x30(%rdi),%rax
214f(6): jnb 0x1c9(%rip)
2155(4): lea 0x1(%rax),%rsi
2159(4): mov %rsi,0x28(%rdi)
215d(2): mov %dl,(%rax)
215f(2): jmp 0xffffffb6(%rip)
2161(7): nop 0x0(%rax)
2168(7): mov 0x205f39(%rip),%rdi
216f(4): mov 0x28(%rdi),%rdx
2173(4): cmp 0x30(%rdi),%rdx
2177(6): jnb 0x1f1(%rip)
217d(4): add $0x1,%r14
2181(7): cmp %r14,0x205f68(%rip)
2188(4): lea 0x1(%rdx),%rsi
218c(4): mov %rsi,0x28(%rdi)
2190(2): mov %al,(%rdx)
2192(2): jnz 0xffffff83(%rip)
2194(7): mov 0x205f5d(%rip),%r14
219b(5): jmp 0xffffff7a(%rip)
21a0(7): lea 0x3047(%rip),%rsi
21a7(3): mov %rax,%rdi
21aa(5): call 0xfffff446(%rip)
21af(3): test %rax,%rax
21b2(3): mov %rax,%r15
21b5(6): jz 0xb5(%rip)
21bb(5): mov $0x2,%esi
21c0(3): mov %rax,%rdi
21c3(5): call 0x69d(%rip)
21c8(5): jmp 0xffffff0f(%rip)
21cd(3): nop (%rax)
21d0(3): mov %r15,%rdi
21d3(4): mov %edx,0xc(%rsp)
21d7(5): call 0xfffff1c9(%rip)
21dc(3): cmp $0xff,%eax
21df(3): mov %eax,%r13d
21e2(4): mov 0xc(%rsp),%edx
21e6(6): jnz 0xffffff4f(%rip)
21ec(4): mov (%rsp),%rax
21f0(7): mov 0x205eb1(%rip),%rdi
21f7(3): mov (%rax),%r13d
21fa(4): mov 0x28(%rdi),%rax
21fe(4): cmp 0x30(%rdi),%rax
2202(6): jnb 0x12e(%rip)
2208(4): lea 0x1(%rax),%rcx
220c(4): mov %rcx,0x28(%rdi)
2210(2): mov %dl,(%rax)
2212(7): movzx 0x205df7(%rip),%ecx
2219(2): cmp %edx,%ecx
221b(2): mov %ecx,%eax
221d(6): jnz 0xa4(%rip)
2223(4): test $0x20,(%r15)
2227(6): jnz 0xbf(%rip)
222d(3): test %r12d,%r12d
2230(3): mov %r15,%rdi
2233(2): jnz 0x2d(%rip)
2235(5): call 0xfffff1db(%rip)
223a(4): add $0x8,%rbx
223e(4): sub $0x1,%rbp
2242(6): jnz 0xfffffe5e(%rip)
2248(5): movzx 0xb(%rsp),%eax
224d(4): add $0x18,%rsp
2251(1): pop %rbx
2252(1): pop %rbp
2253(2): pop %r12
2255(2): pop %r13
2257(2): pop %r14
2259(2): pop %r15
225b(1): ret near (%rsp)
225c(4): nop 0x0(%rax)
2260(5): call 0x2c10(%rip)
2265(3): cmp $0xff,%eax
2268(2): jnz 0xffffffd2(%rip)
226a(3): mov (%rbx),%rdx
226d(5): mov $0x3,%esi
2272(2): xor %edi,%edi
2274(5): call 0x215c(%rip)
2279(3): mov %rax,%rcx
227c(4): mov (%rsp),%rax
2280(7): lea 0x340e(%rip),%rdx
2287(2): xor %edi,%edi
2289(2): mov (%rax),%esi
228b(2): xor %eax,%eax
228d(5): call 0xfffff343(%rip)
2292(5): mov $0x0,0xb(%rsp)
2297(2): jmp 0xffffffa3(%rip)
2299(7): nop 0x0(%rax)
22a0(3): mov %r15,%rdi
22a3(5): call 0xfffff0fd(%rip)
22a8(2): mov %eax,%edx
22aa(4): mov (%rsp),%rax
22ae(3): cmp $0xff,%edx
22b1(3): mov (%rax),%r13d
22b4(6): jnz 0xd6(%rip)
22ba(7): movzx 0x205d4f(%rip),%eax
22c1(7): mov 0x205de0(%rip),%rdi
22c8(4): mov 0x28(%rdi),%rdx
22cc(4): cmp 0x30(%rdi),%rdx
22d0(2): jnb 0x80(%rip)
22d2(4): lea 0x1(%rdx),%rcx
22d6(4): mov %rcx,0x28(%rdi)
22da(2): mov %al,(%rdx)
22dc(4): test $0x20,(%r15)
22e0(6): jz 0xffffff4d(%rip)
22e6(3): mov (%rbx),%rdx
22e9(5): mov $0x3,%esi
22ee(2): xor %edi,%edi
22f0(5): call 0x20e0(%rip)
22f5(7): lea 0x3399(%rip),%rdx
22fc(3): mov %rax,%rcx
22ff(3): mov %r13d,%esi
2302(2): xor %edi,%edi
2304(2): xor %eax,%eax
2306(5): call 0xfffff2ca(%rip)
230b(5): mov $0x0,0xb(%rsp)
2310(5): jmp 0xffffff1d(%rip)
2315(3): nop (%rax)
2318(3): movzx %dl,%esi
231b(5): call 0xfffff195(%rip)
2320(2): test %eax,%eax
2322(6): jns 0xfffffdf3(%rip)
2328(5): call 0xfffff358(%rip)
232d(3): nop (%rax)
2330(3): movzx %dl,%esi
2333(4): mov %edx,0xc(%rsp)
2337(5): call 0xfffff179(%rip)
233c(2): test %eax,%eax
233e(4): mov 0xc(%rsp),%edx
2342(6): jns 0xfffffed0(%rip)
2348(2): jmp 0xffffffe0(%rip)
234a(6): nop 0x0(%rax,%rax,1)
2350(3): movzx %al,%esi
2353(5): call 0xfffff15d(%rip)
2358(2): test %eax,%eax
235a(6): jns 0xfffffec9(%rip)
2360(2): jmp 0xffffffc8(%rip)
2362(6): nop 0x0(%rax,%rax,1)
2368(3): movzx %al,%esi
236b(5): call 0xfffff145(%rip)
2370(2): test %eax,%eax
2372(6): jns 0xfffffd96(%rip)
2378(2): jmp 0xffffffb0(%rip)
237a(6): nop 0x0(%rax,%rax,1)
2380(5): mov $0x1,0xb(%rsp)
2385(5): jmp 0xfffffec3(%rip)
238a(4): mov 0x8(%r15),%rax
238e(4): mov 0x10(%r15),%rsi
2392(5): jmp 0xfffffd8e(%rip)

"paste_serial" :
2070(2): push %r15
2072(2): push %r14
2074(2): push %r13
2076(2): push %r12
2078(1): push %rbp
2079(1): push %rbx
207a(4): sub $0x18,%rsp
207e(3): test %rdi,%rdi
2081(6): jz 0x2ff(%rip)
2087(3): mov %rdi,%rbp
208a(3): mov %rsi,%rbx
208d(5): call 0xfffff343(%rip)
2092(5): mov $0x1,0xb(%rsp)
2097(4): mov %rax,(%rsp)
209b(5): nop 0x0(%rax,%rax,1)
20a0(3): mov (%rbx),%rax
20a3(7): lea 0x3630(%rip),%rdi
20aa(5): mov $0x2,%ecx
20af(3): mov %rax,%rsi
20b2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
20b4(4): setnbe %r9b
20b8(4): sbb $0x0,%r9b
20bc(4): movsx %r9b,%r12d
20c0(3): test %r12d,%r12d
20c3(6): jnz 0xdd(%rip)
20c9(7): mov 0x205fe0(%rip),%r15
20d0(7): mov $0x1,0x20602a(%rip)
20d7(4): mov 0x8(%r15),%rdx
20db(4): mov 0x10(%r15),%rsi
20df(7): mov 0x206012(%rip),%r14
20e6(3): cmp %rsi,%rdx
20e9(6): jnb 0x1b7(%rip)
20ef(4): lea 0x1(%rdx),%rax
20f3(4): mov %rax,0x8(%r15)
20f7(3): movzx (%rdx),%edx
20fa(2): jmp 0x26(%rip)
20fc(4): nop 0x0(%rax)
2100(4): movzx (%r14),%eax
2104(2): test %al,%al
2106(2): jnz 0x62(%rip)
2108(4): add $0x1,%r14
210c(7): cmp %r14,0x205fdd(%rip)
2113(2): jz 0x81(%rip)
2115(4): mov 0x8(%r15),%rax
2119(4): mov 0x10(%r15),%rsi
211d(3): mov %r13d,%edx
2120(3): cmp %rax,%rsi
2123(6): jbe 0xad(%rip)
2129(4): lea 0x1(%rax),%rsi
212d(4): mov %rsi,0x8(%r15)
2131(4): movzx (%rax),%r13d
2135(7): movzx 0x205ed4(%rip),%eax
213c(2): cmp %edx,%eax
213e(2): jz 0xffffffc2(%rip)
2140(7): mov 0x205f61(%rip),%rdi
2147(4): mov 0x28(%rdi),%rax
214b(4): cmp 0x30(%rdi),%rax
214f(6): jnb 0x1c9(%rip)
2155(4): lea 0x1(%rax),%rsi
2159(4): mov %rsi,0x28(%rdi)
215d(2): mov %dl,(%rax)
215f(2): jmp 0xffffffb6(%rip)
2161(7): nop 0x0(%rax)
2168(7): mov 0x205f39(%rip),%rdi
216f(4): mov 0x28(%rdi),%rdx
2173(4): cmp 0x30(%rdi),%rdx
2177(6): jnb 0x1f1(%rip)
217d(4): add $0x1,%r14
2181(7): cmp %r14,0x205f68(%rip)
2188(4): lea 0x1(%rdx),%rsi
218c(4): mov %rsi,0x28(%rdi)
2190(2): mov %al,(%rdx)
2192(2): jnz 0xffffff83(%rip)
2194(7): mov 0x205f5d(%rip),%r14
219b(5): jmp 0xffffff7a(%rip)
21a0(7): lea 0x3047(%rip),%rsi
21a7(3): mov %rax,%rdi
21aa(5): call 0xfffff446(%rip)
21af(3): test %rax,%rax
21b2(3): mov %rax,%r15
21b5(6): jz 0xb5(%rip)
21bb(5): mov $0x2,%esi
21c0(3): mov %rax,%rdi
21c3(5): call 0x69d(%rip)
21c8(5): jmp 0xffffff0f(%rip)
21cd(3): nop (%rax)
21d0(3): mov %r15,%rdi
21d3(4): mov %edx,0xc(%rsp)
21d7(5): call 0xfffff1c9(%rip)
21dc(3): cmp $0xff,%eax
21df(3): mov %eax,%r13d
21e2(4): mov 0xc(%rsp),%edx
21e6(6): jnz 0xffffff4f(%rip)
21ec(4): mov (%rsp),%rax
21f0(7): mov 0x205eb1(%rip),%rdi
21f7(3): mov (%rax),%r13d
21fa(4): mov 0x28(%rdi),%rax
21fe(4): cmp 0x30(%rdi),%rax
2202(6): jnb 0x12e(%rip)
2208(4): lea 0x1(%rax),%rcx
220c(4): mov %rcx,0x28(%rdi)
2210(2): mov %dl,(%rax)
2212(7): movzx 0x205df7(%rip),%ecx
2219(2): cmp %edx,%ecx
221b(2): mov %ecx,%eax
221d(6): jnz 0xa4(%rip)
2223(4): test $0x20,(%r15)
2227(6): jnz 0xbf(%rip)
222d(3): test %r12d,%r12d
2230(3): mov %r15,%rdi
2233(2): jnz 0x2d(%rip)
2235(5): call 0xfffff1db(%rip)
223a(4): add $0x8,%rbx
223e(4): sub $0x1,%rbp
2242(6): jnz 0xfffffe5e(%rip)
2248(5): movzx 0xb(%rsp),%eax
224d(4): add $0x18,%rsp
2251(1): pop %rbx
2252(1): pop %rbp
2253(2): pop %r12
2255(2): pop %r13
2257(2): pop %r14
2259(2): pop %r15
225b(1): ret near (%rsp)
225c(4): nop 0x0(%rax)
2260(5): call 0x2c10(%rip)
2265(3): cmp $0xff,%eax
2268(2): jnz 0xffffffd2(%rip)
226a(3): mov (%rbx),%rdx
226d(5): mov $0x3,%esi
2272(2): xor %edi,%edi
2274(5): call 0x215c(%rip)
2279(3): mov %rax,%rcx
227c(4): mov (%rsp),%rax
2280(7): lea 0x340e(%rip),%rdx
2287(2): xor %edi,%edi
2289(2): mov (%rax),%esi
228b(2): xor %eax,%eax
228d(5): call 0xfffff343(%rip)
2292(5): mov $0x0,0xb(%rsp)
2297(2): jmp 0xffffffa3(%rip)
2299(7): nop 0x0(%rax)
22a0(3): mov %r15,%rdi
22a3(5): call 0xfffff0fd(%rip)
22a8(2): mov %eax,%edx
22aa(4): mov (%rsp),%rax
22ae(3): cmp $0xff,%edx
22b1(3): mov (%rax),%r13d
22b4(6): jnz 0xd6(%rip)
22ba(7): movzx 0x205d4f(%rip),%eax
22c1(7): mov 0x205de0(%rip),%rdi
22c8(4): mov 0x28(%rdi),%rdx
22cc(4): cmp 0x30(%rdi),%rdx
22d0(2): jnb 0x80(%rip)
22d2(4): lea 0x1(%rdx),%rcx
22d6(4): mov %rcx,0x28(%rdi)
22da(2): mov %al,(%rdx)
22dc(4): test $0x20,(%r15)
22e0(6): jz 0xffffff4d(%rip)
22e6(3): mov (%rbx),%rdx
22e9(5): mov $0x3,%esi
22ee(2): xor %edi,%edi
22f0(5): call 0x20e0(%rip)
22f5(7): lea 0x3399(%rip),%rdx
22fc(3): mov %rax,%rcx
22ff(3): mov %r13d,%esi
2302(2): xor %edi,%edi
2304(2): xor %eax,%eax
2306(5): call 0xfffff2ca(%rip)
230b(5): mov $0x0,0xb(%rsp)
2310(5): jmp 0xffffff1d(%rip)
2315(3): nop (%rax)
2318(3): movzx %dl,%esi
231b(5): call 0xfffff195(%rip)
2320(2): test %eax,%eax
2322(6): jns 0xfffffdf3(%rip)
2328(5): call 0xfffff358(%rip)
232d(3): nop (%rax)
2330(3): movzx %dl,%esi
2333(4): mov %edx,0xc(%rsp)
2337(5): call 0xfffff179(%rip)
233c(2): test %eax,%eax
233e(4): mov 0xc(%rsp),%edx
2342(6): jns 0xfffffed0(%rip)
2348(2): jmp 0xffffffe0(%rip)
234a(6): nop 0x0(%rax,%rax,1)
2350(3): movzx %al,%esi
2353(5): call 0xfffff15d(%rip)
2358(2): test %eax,%eax
235a(6): jns 0xfffffec9(%rip)
2360(2): jmp 0xffffffc8(%rip)
2362(6): nop 0x0(%rax,%rax,1)
2368(3): movzx %al,%esi
236b(5): call 0xfffff145(%rip)
2370(2): test %eax,%eax
2372(6): jns 0xfffffd96(%rip)
2378(2): jmp 0xffffffb0(%rip)
237a(6): nop 0x0(%rax,%rax,1)
2380(5): mov $0x1,0xb(%rsp)
2385(5): jmp 0xfffffec3(%rip)
238a(4): mov 0x8(%r15),%rax
238e(4): mov 0x10(%r15),%rsi
2392(5): jmp 0xfffffd8e(%rip)

"usage" :
23a0(2): push %r13
23a2(2): push %r12
23a4(5): mov $0x5,%edx
23a9(1): push %rbp
23aa(1): push %rbx
23ab(2): mov %edi,%ebp
23ad(7): sub $0x88,%rsp
23b4(7): mov 0x205d5d(%rip),%rbx
23bb(9): mov $0x28,%rax
23c4(5): mov %rax,0x78(%rsp)
23c9(2): xor %eax,%eax
23cb(2): test %edi,%edi
23cd(2): jz 0x30(%rip)
23cf(7): lea 0x2f52(%rip),%rsi
23d6(2): xor %edi,%edi
23d8(5): call 0xfffff078(%rip)
23dd(7): mov 0x205cfc(%rip),%rdi
23e4(3): mov %rax,%rdx
23e7(3): mov %rbx,%rcx
23ea(5): mov $0x1,%esi
23ef(2): xor %eax,%eax
23f1(5): call 0xfffff23f(%rip)
23f6(2): mov %ebp,%edi
23f8(5): call 0xfffff218(%rip)
23fd(7): lea 0x2f4c(%rip),%rsi
2404(2): xor %edi,%edi
2406(5): call 0xfffff04a(%rip)
240b(3): mov %rbx,%rdx
240e(3): mov %rax,%rsi
2411(5): mov $0x1,%edi
2416(2): xor %eax,%eax
2418(5): call 0xfffff1a8(%rip)
241d(7): mov 0x205c84(%rip),%rbx
2424(7): lea 0x2f4d(%rip),%rsi
242b(5): mov $0x5,%edx
2430(2): xor %edi,%edi
2432(5): call 0xfffff01e(%rip)
2437(3): mov %rbx,%rsi
243a(3): mov %rax,%rdi
243d(5): call 0xfffff0d3(%rip)
2442(7): mov 0x205c5f(%rip),%rbx
2449(7): lea 0x2fa0(%rip),%rsi
2450(5): mov $0x5,%edx
2455(2): xor %edi,%edi
2457(5): call 0xffffeff9(%rip)
245c(3): mov %rbx,%rsi
245f(3): mov %rax,%rdi
2462(5): call 0xfffff0ae(%rip)
2467(7): mov 0x205c3a(%rip),%rbx
246e(7): lea 0x2fb3(%rip),%rsi
2475(5): mov $0x5,%edx
247a(2): xor %edi,%edi
247c(5): call 0xffffefd4(%rip)
2481(3): mov %rbx,%rsi
2484(3): mov %rax,%rdi
2487(5): call 0xfffff089(%rip)
248c(7): mov 0x205c15(%rip),%rbx
2493(7): lea 0x2fde(%rip),%rsi
249a(5): mov $0x5,%edx
249f(2): xor %edi,%edi
24a1(5): call 0xffffefaf(%rip)
24a6(3): mov %rbx,%rsi
24a9(3): mov %rax,%rdi
24ac(5): call 0xfffff064(%rip)
24b1(7): mov 0x205bf0(%rip),%rbx
24b8(7): lea 0x3049(%rip),%rsi
24bf(5): mov $0x5,%edx
24c4(2): xor %edi,%edi
24c6(5): call 0xffffef8a(%rip)
24cb(3): mov %rbx,%rsi
24ce(3): mov %rax,%rdi
24d1(5): call 0xfffff03f(%rip)
24d6(7): mov 0x205bcb(%rip),%rbx
24dd(7): lea 0x3064(%rip),%rsi
24e4(5): mov $0x5,%edx
24e9(2): xor %edi,%edi
24eb(5): call 0xffffef65(%rip)
24f0(3): mov %rbx,%rsi
24f3(3): mov %rax,%rdi
24f6(5): call 0xfffff01a(%rip)
24fb(7): mov 0x205ba6(%rip),%rbx
2502(7): lea 0x306f(%rip),%rsi
2509(5): mov $0x5,%edx
250e(2): xor %edi,%edi
2510(5): call 0xffffef40(%rip)
2515(3): mov %rbx,%rsi
2518(3): mov %rax,%rdi
251b(7): lea 0x2ce7(%rip),%rbx
2522(5): call 0xffffefee(%rip)
2527(7): lea 0x2ce1(%rip),%rax
252e(7): lea 0x2d1b(%rip),%rcx
2535(9): mov $0x0,0x60(%rsp)
253e(9): mov $0x0,0x68(%rsp)
2547(3): mov %rsp,%rdx
254a(4): mov %rax,(%rsp)
254e(7): lea 0x2cbc(%rip),%rax
2555(5): mov %rcx,0x30(%rsp)
255a(7): lea 0x2cf9(%rip),%rcx
2561(5): mov %rax,0x8(%rsp)
2566(7): lea 0x2d1c(%rip),%rax
256d(5): mov %rcx,0x40(%rsp)
2572(7): lea 0x2ceb(%rip),%rcx
2579(5): mov %rax,0x10(%rsp)
257e(7): lea 0x2c9c(%rip),%rax
2585(5): mov %rcx,0x50(%rsp)
258a(5): mov %rax,0x18(%rsp)
258f(7): lea 0x2ca1(%rip),%rax
2596(5): mov %rax,0x20(%rsp)
259b(7): lea 0x2c9f(%rip),%rax
25a2(5): mov %rax,0x28(%rsp)
25a7(5): mov %rax,0x38(%rsp)
25ac(5): mov %rax,0x48(%rsp)
25b1(5): mov %rax,0x58(%rsp)
25b6(a): nop 0x0(%rax,%rax,1)
25c0(4): add $0x10,%rdx
25c4(3): mov (%rdx),%rdi
25c7(3): test %rdi,%rdi
25ca(2): jz 0x15(%rip)
25cc(5): mov $0x6,%ecx
25d1(3): mov %rbx,%rsi
25d4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
25d6(3): setnbe %al
25d9(2): sbb $0x0,%al
25db(2): test %al,%al
25dd(2): jnz 0xffffffe3(%rip)
25df(4): mov 0x8(%rdx),%r12
25e3(2): xor %edi,%edi
25e5(5): mov $0x5,%edx
25ea(7): lea 0x2c7d(%rip),%rsi
25f1(3): test %r12,%r12
25f4(6): jz 0xc7(%rip)
25fa(5): call 0xffffee56(%rip)
25ff(7): lea 0x2faa(%rip),%rcx
2606(7): lea 0x2c78(%rip),%rdx
260d(3): mov %rax,%rsi
2610(5): mov $0x1,%edi
2615(2): xor %eax,%eax
2617(5): call 0xffffefa9(%rip)
261c(2): xor %esi,%esi
261e(5): mov $0x5,%edi
2623(5): call 0xffffef8d(%rip)
2628(3): test %rax,%rax
262b(2): jz 0x1e(%rip)
262d(7): lea 0x2c5f(%rip),%rsi
2634(5): mov $0x3,%edx
2639(3): mov %rax,%rdi
263c(5): call 0xffffeda4(%rip)
2641(2): test %eax,%eax
2643(6): jnz 0x10d(%rip)
2649(7): lea 0x2c47(%rip),%rsi
2650(2): xor %edi,%edi
2652(5): mov $0x5,%edx
2657(5): call 0xffffedf9(%rip)
265c(7): lea 0x2ba6(%rip),%rcx
2663(7): lea 0x2f46(%rip),%rdx
266a(3): mov %rax,%rsi
266d(5): mov $0x1,%edi
2672(2): xor %eax,%eax
2674(5): call 0xffffef4c(%rip)
2679(3): cmp %rbx,%r12
267c(7): lea 0x2ba8(%rip),%rcx
2683(7): lea 0x2c2c(%rip),%rbx
268a(4): cmove %rcx,%rbx
268e(7): lea 0x2f8b(%rip),%rsi
2695(2): xor %edi,%edi
2697(5): mov $0x5,%edx
269c(5): call 0xffffedb4(%rip)
26a1(3): mov %rbx,%rcx
26a4(3): mov %rax,%rsi
26a7(3): mov %r12,%rdx
26aa(5): mov $0x1,%edi
26af(2): xor %eax,%eax
26b1(5): call 0xffffef0f(%rip)
26b6(5): jmp 0xfffffd40(%rip)
26bb(5): call 0xffffed95(%rip)
26c0(7): lea 0x2ee9(%rip),%rcx
26c7(7): lea 0x2bb7(%rip),%rdx
26ce(3): mov %rax,%rsi
26d1(5): mov $0x1,%edi
26d6(2): xor %eax,%eax
26d8(5): call 0xffffeee8(%rip)
26dd(2): xor %esi,%esi
26df(5): mov $0x5,%edi
26e4(5): call 0xffffeecc(%rip)
26e9(3): test %rax,%rax
26ec(2): jz 0x1a(%rip)
26ee(7): lea 0x2b9e(%rip),%rsi
26f5(5): mov $0x3,%edx
26fa(3): mov %rax,%rdi
26fd(5): call 0xffffece3(%rip)
2702(2): test %eax,%eax
2704(2): jnz 0x45(%rip)
2706(7): lea 0x2b8a(%rip),%rsi
270d(5): mov $0x5,%edx
2712(2): xor %edi,%edi
2714(7): lea 0x2aee(%rip),%r12
271b(7): lea 0x2b09(%rip),%rbx
2722(5): call 0xffffed2e(%rip)
2727(7): lea 0x2adb(%rip),%rcx
272e(7): lea 0x2e7b(%rip),%rdx
2735(3): mov %rax,%rsi
2738(5): mov $0x1,%edi
273d(2): xor %eax,%eax
273f(5): call 0xffffee81(%rip)
2744(5): jmp 0xffffff4a(%rip)
2749(7): lea 0x2ab9(%rip),%r12
2750(7): mov 0x205951(%rip),%r13
2757(7): lea 0x2e7a(%rip),%rsi
275e(2): xor %edi,%edi
2760(5): mov $0x5,%edx
2765(5): call 0xffffeceb(%rip)
276a(3): mov %r13,%rsi
276d(3): mov %rax,%rdi
2770(5): call 0xffffeda0(%rip)
2775(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2780(7): mov %rdi,0x205989(%rip)
2787(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2790(7): mov %dil,0x205971(%rip)
2797(1): ret near (%rsp)

"close_stdout" :
27a0(1): push %rbp
27a1(1): push %rbx
27a2(4): sub $0x8,%rsp
27a6(7): mov 0x2058fb(%rip),%rdi
27ad(5): call 0x2873(%rip)
27b2(2): test %eax,%eax
27b4(2): jz 0x18(%rip)
27b6(5): call 0xffffec1a(%rip)
27bb(7): cmp $0x0,0x205946(%rip)
27c2(3): mov %rax,%rbx
27c5(2): jz 0x1e(%rip)
27c7(3): cmp $0x20,(%rax)
27ca(2): jnz 0x19(%rip)
27cc(7): mov 0x20590d(%rip),%rdi
27d3(5): call 0x284d(%rip)
27d8(2): test %eax,%eax
27da(2): jnz 0x48(%rip)
27dc(4): add $0x8,%rsp
27e0(1): pop %rbx
27e1(1): pop %rbp
27e2(1): ret near (%rsp)
27e3(7): lea 0x29fa(%rip),%rsi
27ea(2): xor %edi,%edi
27ec(5): mov $0x5,%edx
27f1(5): call 0xffffec5f(%rip)
27f6(7): mov 0x205913(%rip),%rdi
27fd(3): mov %rax,%rbp
2800(3): test %rdi,%rdi
2803(2): jz 0x2a(%rip)
2805(5): call 0x1b9b(%rip)
280a(2): mov (%rbx),%esi
280c(7): lea 0x2e7e(%rip),%rdx
2813(3): mov %rax,%rcx
2816(3): mov %rbp,%r8
2819(2): xor %edi,%edi
281b(2): xor %eax,%eax
281d(5): call 0xffffedb3(%rip)
2822(6): mov 0x2057f8(%rip),%edi
2828(5): call 0xffffebc8(%rip)
282d(2): mov (%rbx),%esi
282f(7): lea 0x2e5f(%rip),%rdx
2836(3): mov %rax,%rcx
2839(2): xor %edi,%edi
283b(2): xor %eax,%eax
283d(5): call 0xffffed93(%rip)
2842(2): jmp 0xffffffe0(%rip)

"fadvise" :
2860(3): test %rdi,%rdi
2863(2): jz 0x1d(%rip)
2865(1): push %rbx
2866(2): mov %esi,%ebx
2868(5): call 0xffffecd8(%rip)
286d(2): mov %ebx,%ecx
286f(2): xor %edx,%edx
2871(2): xor %esi,%esi
2873(1): pop %rbx
2874(2): mov %eax,%edi
2876(5): jmp 0xffffec7a(%rip)
287b(5): nop 0x0(%rax,%rax,1)
2880(2): REP ret near (%rsp)

"set_program_name" :
2890(3): test %rdi,%rdi
2893(1): push %rbx
2894(2): jz 0x79(%rip)
2896(5): mov $0x2f,%esi
289b(3): mov %rdi,%rbx
289e(5): call 0xffffec22(%rip)
28a3(3): test %rax,%rax
28a6(2): jz 0x57(%rip)
28a8(4): lea 0x1(%rax),%r8
28ac(3): mov %r8,%rdx
28af(3): sub %rbx,%rdx
28b2(4): cmp $0x6,%rdx
28b6(2): jle 0x47(%rip)
28b8(4): lea 0xfffffffa(%rax),%rsi
28bc(7): lea 0x2e0d(%rip),%rdi
28c3(5): mov $0x7,%ecx
28c8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
28ca(3): setnbe %dl
28cd(3): sbb $0x0,%dl
28d0(2): test %dl,%dl
28d2(2): jnz 0x2b(%rip)
28d4(7): lea 0x2dfd(%rip),%rdi
28db(5): mov $0x3,%ecx
28e0(3): mov %r8,%rsi
28e3(3): mov %r8,%rbx
28e6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
28e8(3): setnbe %dl
28eb(3): sbb $0x0,%dl
28ee(2): test %dl,%dl
28f0(2): jnz 0xd(%rip)
28f2(4): lea 0x4(%rax),%rbx
28f6(7): mov %rbx,0x2057a3(%rip)
28fd(7): mov %rbx,0x205814(%rip)
2904(7): mov %rbx,0x2057bd(%rip)
290b(1): pop %rbx
290c(1): ret near (%rsp)
290d(7): mov 0x2057cc(%rip),%rcx
2914(7): lea 0x2d7d(%rip),%rdi
291b(5): mov $0x37,%edx
2920(5): mov $0x1,%esi
2925(5): call 0xffffecfb(%rip)
292a(5): call 0xffffea96(%rip)

"gettext_quote.part.1" :
2930(1): push %rbp
2931(1): push %rbx
2932(3): mov %rdi,%rbp
2935(2): mov %esi,%ebx
2937(4): sub $0x8,%rsp
293b(5): call 0x27c5(%rip)
2940(3): movzx (%rax),%edx
2943(3): and $0xdf,%edx
2946(3): cmp $0x55,%dl
2949(2): jz 0x77(%rip)
294b(3): cmp $0x47,%dl
294e(2): jz 0x22(%rip)
2950(7): lea 0x2d94(%rip),%rax
2957(7): lea 0x2d8f(%rip),%rdx
295e(3): cmp $0x9,%ebx
2961(4): cmovne %rdx,%rax
2965(4): add $0x8,%rsp
2969(1): pop %rbx
296a(1): pop %rbp
296b(1): ret near (%rsp)
296c(4): nop 0x0(%rax)
2970(4): movzx 0x1(%rax),%edx
2974(3): and $0xdf,%edx
2977(3): cmp $0x42,%dl
297a(2): jnz 0xffffffd6(%rip)
297c(4): cmp $0x31,0x2(%rax)
2980(2): jnz 0xffffffd0(%rip)
2982(4): cmp $0x38,0x3(%rax)
2986(2): jnz 0xffffffca(%rip)
2988(4): cmp $0x30,0x4(%rax)
298c(2): jnz 0xffffffc4(%rip)
298e(4): cmp $0x33,0x5(%rax)
2992(2): jnz 0xffffffbe(%rip)
2994(4): cmp $0x30,0x6(%rax)
2998(2): jnz 0xffffffb8(%rip)
299a(4): cmp $0x0,0x7(%rax)
299e(2): jnz 0xffffffb2(%rip)
29a0(4): cmp $0x60,0x0(%rbp)
29a4(7): lea 0x2d39(%rip),%rax
29ab(7): lea 0x2d36(%rip),%rdx
29b2(4): cmovne %rdx,%rax
29b6(4): add $0x8,%rsp
29ba(1): pop %rbx
29bb(1): pop %rbp
29bc(1): ret near (%rsp)
29bd(3): nop (%rax)
29c0(4): movzx 0x1(%rax),%edx
29c4(3): and $0xdf,%edx
29c7(3): cmp $0x54,%dl
29ca(2): jnz 0xffffff86(%rip)
29cc(4): movzx 0x2(%rax),%edx
29d0(3): and $0xdf,%edx
29d3(3): cmp $0x46,%dl
29d6(6): jnz 0xffffff7a(%rip)
29dc(4): cmp $0x2d,0x3(%rax)
29e0(6): jnz 0xffffff70(%rip)
29e6(4): cmp $0x38,0x4(%rax)
29ea(6): jnz 0xffffff66(%rip)
29f0(4): cmp $0x0,0x5(%rax)
29f4(6): jnz 0xffffff5c(%rip)
29fa(4): cmp $0x60,0x0(%rbp)
29fe(7): lea 0x2cd7(%rip),%rax
2a05(7): lea 0x2cd4(%rip),%rdx
2a0c(4): cmovne %rdx,%rax
2a10(4): add $0x8,%rsp
2a14(1): pop %rbx
2a15(1): pop %rbp
2a16(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2a20(2): push %r15
2a22(2): push %r14
2a24(3): mov %r8d,%r15d
2a27(2): push %r13
2a29(2): push %r12
2a2b(3): mov %rdi,%r14
2a2e(1): push %rbp
2a2f(1): push %rbx
2a30(3): mov %r9d,%ebx
2a33(3): mov %rsi,%r13
2a36(3): mov %rcx,%rbp
2a39(3): and $0x2,%ebx
2a3c(7): sub $0xb8,%rsp
2a43(8): mov 0xf0(%rsp),%rax
2a4b(5): mov %rdx,0x10(%rsp)
2a50(5): mov %r8d,0x8(%rsp)
2a55(5): mov %r9d,0x78(%rsp)
2a5a(5): mov %rax,0x20(%rsp)
2a5f(8): mov 0xf8(%rsp),%rax
2a67(5): mov %rax,0x68(%rsp)
2a6c(8): mov 0x100(%rsp),%rax
2a74(5): mov %rax,0x60(%rsp)
2a79(9): mov $0x28,%rax
2a82(8): mov %rax,0xa8(%rsp)
2a8a(2): xor %eax,%eax
2a8c(5): call 0xffffe9d4(%rip)
2a91(4): cmp $0xa,%r15d
2a95(5): mov %rax,0x58(%rsp)
2a9a(6): jnbe 0x11b5(%rip)
2aa0(7): lea 0x2c99(%rip),%rcx
2aa7(3): mov %r15d,%edx
2aaa(4): movsxd 0x0(%rcx,%rdx,4),%rax
2aae(3): add %rcx,%rax
2ab1(2): jmp %rax
2ab3(5): mov $0x1,0xe(%rsp)
2ab8(5): mov $0x0,0x7c(%rsp)
2abd(3): xor %r12d,%r12d
2ac0(9): mov $0x0,0x50(%rsp)
2ac9(5): mov $0x1,0xf(%rsp)
2ace(5): mov $0x0,0xd(%rsp)
2ad3(7): lea 0x2c13(%rip),%rax
2ada(9): mov $0x1,0x18(%rsp)
2ae3(3): xor %r15d,%r15d
2ae6(8): mov $0x2,0x8(%rsp)
2aee(5): mov %rax,0x48(%rsp)
2af3(3): xor %r11d,%r11d
2af6(3): mov %rbp,%rax
2af9(3): mov %r12d,%r8d
2afc(3): mov %r11,%rbp
2aff(3): mov %rax,%r11
2b02(6): nop 0x0(%rax,%rax,1)
2b08(3): cmp %rbp,%r11
2b0b(4): setnz %r12b
2b0f(4): cmp $0xffffffff,%r11
2b13(2): jnz 0xf(%rip)
2b15(5): mov 0x10(%rsp),%rax
2b1a(4): cmp $0x0,0x0(%rax,%rbp,1)
2b1e(4): setnz %r12b
2b22(3): test %r12b,%r12b
2b25(6): jz 0x65b(%rip)
2b2b(5): cmp $0x2,0x8(%rsp)
2b30(5): mov 0x10(%rsp),%rdi
2b35(4): lea 0x0(%rdi,%rbp,1),%r9
2b39(3): setnz %al
2b3c(4): and 0xd(%rsp),%al
2b40(3): mov %eax,%r10d
2b43(6): jz 0xad(%rip)
2b49(5): mov 0x18(%rsp),%rax
2b4e(3): test %rax,%rax
2b51(6): jz 0x42f(%rip)
2b57(4): cmp $0xffffffff,%r11
2b5b(5): lea 0x0(%rbp,%rax,1),%rbx
2b60(2): jnz 0x30(%rip)
2b62(4): cmp $0x1,%rax
2b66(2): jbe 0x2a(%rip)
2b68(5): mov %r8b,0x38(%rsp)
2b6d(5): mov %r10b,0x30(%rsp)
2b72(5): mov %r9,0x28(%rsp)
2b77(5): call 0xffffe8f9(%rip)
2b7c(6): movzx 0x38(%rsp),%r8d
2b82(6): movzx 0x30(%rsp),%r10d
2b88(3): mov %rax,%r11
2b8b(5): mov 0x28(%rsp),%r9
2b90(3): cmp %r11,%rbx
2b93(5): mov %r10b,0x28(%rsp)
2b98(6): jnbe 0x5b8(%rip)
2b9e(5): mov 0x18(%rsp),%rdx
2ba3(5): mov 0x48(%rsp),%rsi
2ba8(3): mov %r9,%rdi
2bab(5): mov %r11,0x40(%rsp)
2bb0(5): mov %r8b,0x38(%rsp)
2bb5(5): mov %r9,0x30(%rsp)
2bba(5): call 0xffffe946(%rip)
2bbf(2): test %eax,%eax
2bc1(5): mov 0x30(%rsp),%r9
2bc6(6): movzx 0x38(%rsp),%r8d
2bcc(5): mov 0x40(%rsp),%r11
2bd1(6): jnz 0x57f(%rip)
2bd7(5): cmp $0x0,0xf(%rsp)
2bdc(6): movzx 0x28(%rsp),%r10d
2be2(6): jnz 0xf83(%rip)
2be8(8): nop 0x0(%rax,%rax,1)
2bf0(4): movzx (%r9),%ebx
2bf4(3): cmp $0x7e,%bl
2bf7(6): jnbe 0x321(%rip)
2bfd(7): lea 0x2b68(%rip),%rcx
2c04(3): movzx %bl,%edx
2c07(4): movsxd 0x0(%rcx,%rdx,4),%rax
2c0b(3): add %rcx,%rax
2c0e(2): jmp %rax
2c10(3): xor %r10d,%r10d
2c13(4): cmp $0x1,%r11
2c17(3): setnz %al
2c1a(4): cmp $0xffffffff,%r11
2c1e(2): jnz 0xe(%rip)
2c20(5): mov 0x10(%rsp),%rax
2c25(4): cmp $0x0,0x1(%rax)
2c29(3): setnz %al
2c2c(5): cmp $0x2,0x8(%rsp)
2c31(3): setz %dl
2c34(2): test %al,%al
2c36(6): jz 0x252(%rip)
2c3c(3): xor %r12d,%r12d
2c3f(2): xor %eax,%eax
2c41(7): nop 0x0(%rax)
2c48(5): cmp $0x1,0xd(%rsp)
2c4d(6): jnz 0x115(%rip)
2c53(2): test %dl,%dl
2c55(6): jnz 0x10d(%rip)
2c5b(5): mov 0x20(%rsp),%rsi
2c60(3): test %rsi,%rsi
2c63(2): jz 0x16(%rip)
2c65(2): mov %ebx,%edx
2c67(3): shr $0x5,%dl
2c6a(3): movzx %dl,%edx
2c6d(3): mov 0x0(%rsi,%rdx,4),%edx
2c70(3): bt %ebx,%edx
2c73(6): jb 0x150(%rip)
2c79(3): test %r10b,%r10b
2c7c(6): jnz 0x147(%rip)
2c82(3): xor $0x1,%eax
2c85(4): add $0x1,%rbp
2c89(3): and %r8d,%eax
2c8c(2): test %al,%al
2c8e(2): jz 0x22(%rip)
2c90(3): cmp %r15,%r13
2c93(2): jbe 0x7(%rip)
2c95(5): mov $0x27,0x0(%r14,%r15,1)
2c9a(4): lea 0x1(%r15),%rax
2c9e(3): cmp %rax,%r13
2ca1(2): jbe 0x8(%rip)
2ca3(6): mov $0x27,0x1(%r14,%r15,1)
2ca9(4): add $0x2,%r15
2cad(3): xor %r8d,%r8d
2cb0(3): cmp %r13,%r15
2cb3(2): jnb 0x6(%rip)
2cb5(4): mov %bl,0x0(%r14,%r15,1)
2cb9(5): movzx 0xe(%rsp),%edi
2cbe(4): add $0x1,%r15
2cc2(5): mov $0x0,%eax
2cc7(3): test %r12b,%r12b
2cca(3): cmove %eax,%edi
2ccd(5): mov %dil,0xe(%rsp)
2cd2(5): jmp 0xfffffe36(%rip)
2cd7(9): nop 0x0(%rax,%rax,1)
2ce0(3): xor %r10d,%r10d
2ce3(4): mov 0x8(%rsp),%eax
2ce7(3): cmp $0x2,%eax
2cea(6): jz 0x5be(%rip)
2cf0(3): cmp $0x5,%eax
2cf3(6): jz 0x575(%rip)
2cf9(3): cmp $0x2,%eax
2cfc(5): mov $0x3f,%ebx
2d01(3): setz %dl
2d04(3): xor %r12d,%r12d
2d07(2): xor %eax,%eax
2d09(5): jmp 0xffffff3f(%rip)
2d0e(2): nop 
2d10(3): xor %r10d,%r10d
2d13(5): cmp $0x2,0x8(%rsp)
2d18(6): jz 0x508(%rip)
2d1e(5): mov %r12b,0x7c(%rsp)
2d23(2): xor %edx,%edx
2d25(2): xor %eax,%eax
2d27(5): mov $0x27,%ebx
2d2c(5): jmp 0xffffff1c(%rip)
2d31(7): nop 0x0(%rax)
2d38(5): mov $0x9,%edx
2d3d(5): mov $0x74,%ebx
2d42(5): cmp $0x2,0x8(%rsp)
2d47(3): setz %al
2d4a(4): and 0xf(%rsp),%al
2d4e(6): jnz 0x150(%rip)
2d54(5): cmp $0x0,0xd(%rsp)
2d59(2): jnz 0x67(%rip)
2d5b(2): mov %edx,%ebx
2d5d(3): xor %r12d,%r12d
2d60(2): xor %eax,%eax
2d62(5): cmp $0x0,0xf(%rsp)
2d67(6): jnz 0xfffffef4(%rip)
2d6d(5): jmp 0xffffff0c(%rip)
2d72(6): nop 0x0(%rax,%rax,1)
2d78(5): mov $0x8,%edx
2d7d(5): mov $0x62,%ebx
2d82(2): jmp 0xffffffd2(%rip)
2d84(4): nop 0x0(%rax)
2d88(5): cmp $0x2,0x8(%rsp)
2d8d(6): jz 0x3d3(%rip)
2d93(5): cmp $0x0,0xd(%rsp)
2d98(6): jz 0x218(%rip)
2d9e(5): cmp $0x0,0xf(%rsp)
2da3(6): jz 0x20d(%rip)
2da9(6): cmp $0x0,0x18(%rsp)
2daf(6): jnz 0x3bc(%rip)
2db5(5): mov $0x5c,%ebx
2dba(6): nop 0x0(%rax,%rax,1)
2dc0(3): xor %r12d,%r12d
2dc3(5): cmp $0x2,0x8(%rsp)
2dc8(3): setz %dl
2dcb(5): cmp $0x0,0xf(%rsp)
2dd0(2): mov %edx,%eax
2dd2(6): jnz 0x856(%rip)
2dd8(3): mov %r8d,%eax
2ddb(3): xor $0x1,%eax
2dde(2): and %dl,%al
2de0(2): jz 0x31(%rip)
2de2(3): cmp %r15,%r13
2de5(2): jbe 0x7(%rip)
2de7(5): mov $0x27,0x0(%r14,%r15,1)
2dec(4): lea 0x1(%r15),%rdx
2df0(3): cmp %rdx,%r13
2df3(2): jbe 0x8(%rip)
2df5(6): mov $0x24,0x1(%r14,%r15,1)
2dfb(4): lea 0x2(%r15),%rdx
2dff(3): cmp %rdx,%r13
2e02(2): jbe 0x8(%rip)
2e04(6): mov $0x27,0x2(%r14,%r15,1)
2e0a(4): add $0x3,%r15
2e0e(3): mov %eax,%r8d
2e11(3): cmp %r15,%r13
2e14(2): jbe 0x7(%rip)
2e16(5): mov $0x5c,0x0(%r14,%r15,1)
2e1b(4): add $0x1,%r15
2e1f(4): add $0x1,%rbp
2e23(5): jmp 0xfffffe8d(%rip)
2e28(8): nop 0x0(%rax,%rax,1)
2e30(5): cmp $0x0,0xd(%rsp)
2e35(6): jnz 0x1ce(%rip)
2e3b(2): xor %edx,%edx
2e3d(5): test $0x1,0x78(%rsp)
2e42(6): jz 0xffffff19(%rip)
2e48(4): add $0x1,%rbp
2e4c(5): jmp 0xfffffcbc(%rip)
2e51(7): nop 0x0(%rax)
2e58(5): cmp $0x2,0x8(%rsp)
2e5d(3): setz %dl
2e60(2): xor %eax,%eax
2e62(5): jmp 0xfffffde6(%rip)
2e67(9): nop 0x0(%rax,%rax,1)
2e70(5): mov $0x7,%edx
2e75(5): mov $0x61,%ebx
2e7a(5): jmp 0xfffffeda(%rip)
2e7f(1): nop 
2e80(5): cmp $0x2,0x8(%rsp)
2e85(3): setz %dl
2e88(3): test %rbp,%rbp
2e8b(6): jnz 0xfffffdb1(%rip)
2e91(5): movzx 0xf(%rsp),%eax
2e96(2): and %dl,%al
2e98(6): jz 0xfffffdb0(%rip)
2e9e(3): mov %r11,%rbp
2ea1(8): mov $0x2,0x8(%rsp)
2ea9(5): jmp 0x700(%rip)
2eae(2): nop 
2eb0(5): cmp $0x2,0x8(%rsp)
2eb5(3): setz %dl
2eb8(3): xor %r12d,%r12d
2ebb(2): jmp 0xffffffd6(%rip)
2ebd(3): nop (%rax)
2ec0(5): cmp $0x2,0x8(%rsp)
2ec5(5): mov $0x20,%ebx
2eca(3): setz %dl
2ecd(2): jmp 0xffffffc4(%rip)
2ecf(1): nop 
2ed0(5): mov $0xd,%edx
2ed5(5): mov $0x72,%ebx
2eda(5): jmp 0xfffffe68(%rip)
2edf(1): nop 
2ee0(5): mov $0xc,%edx
2ee5(5): mov $0x66,%ebx
2eea(5): jmp 0xfffffe6a(%rip)
2eef(1): nop 
2ef0(5): mov $0xb,%edx
2ef5(5): mov $0x76,%ebx
2efa(5): jmp 0xfffffe5a(%rip)
2eff(1): nop 
2f00(5): mov $0xa,%edx
2f05(5): mov $0x6e,%ebx
2f0a(5): jmp 0xfffffe38(%rip)
2f0f(1): nop 
2f10(3): xor %r10d,%r10d
2f13(5): nop 0x0(%rax,%rax,1)
2f18(6): cmp $0x1,0x58(%rsp)
2f1e(6): jnz 0x3aa(%rip)
2f24(5): mov %r11,0x38(%rsp)
2f29(5): mov %r8b,0x30(%rsp)
2f2e(5): mov %r10b,0x28(%rsp)
2f33(5): call 0xffffe72d(%rip)
2f38(3): mov (%rax),%rcx
2f3b(3): movzx %bl,%edx
2f3e(6): movzx 0x28(%rsp),%r10d
2f44(6): movzx 0x30(%rsp),%r8d
2f4a(5): mov 0x38(%rsp),%r11
2f4f(5): mov $0x1,%edi
2f54(4): movzx 0x0(%rcx,%rdx,2),%eax
2f58(4): and $0x4000,%ax
2f5c(4): setnz %r12b
2f60(3): setz %al
2f63(4): and 0xd(%rsp),%al
2f67(2): test %al,%al
2f69(6): jnz 0x998(%rip)
2f6f(5): cmp $0x2,0x8(%rsp)
2f74(3): setz %dl
2f77(5): jmp 0xfffffcd1(%rip)
2f7c(4): nop 0x0(%rax)
2f80(4): movzx (%r9),%ebx
2f84(3): cmp $0x7e,%bl
2f87(2): jnbe 0xffffff89(%rip)
2f89(7): lea 0x29d8(%rip),%rcx
2f90(3): movzx %bl,%edx
2f93(4): movsxd 0x0(%rcx,%rdx,4),%rax
2f97(3): add %rcx,%rax
2f9a(2): jmp %rax
2f9c(4): nop 0x0(%rax)
2fa0(3): xor %r10d,%r10d
2fa3(5): cmp $0x0,0xd(%rsp)
2fa8(6): jnz 0xfffffdf6(%rip)
2fae(2): nop 
2fb0(5): mov $0x5c,%edx
2fb5(5): mov $0x5c,%ebx
2fba(5): jmp 0xfffffd9a(%rip)
2fbf(1): nop 
2fc0(5): mov $0xc,%edx
2fc5(3): xor %r10d,%r10d
2fc8(5): mov $0x66,%ebx
2fcd(5): jmp 0xfffffd87(%rip)
2fd2(6): nop 0x0(%rax,%rax,1)
2fd8(5): mov $0xa,%edx
2fdd(3): xor %r10d,%r10d
2fe0(5): mov $0x6e,%ebx
2fe5(5): jmp 0xfffffd5d(%rip)
2fea(6): nop 0x0(%rax,%rax,1)
2ff0(5): mov $0x61,%ebx
2ff5(5): jmp 0xfffffdcb(%rip)
2ffa(6): nop 0x0(%rax,%rax,1)
3000(3): xor %r10d,%r10d
3003(5): cmp $0x2,0x8(%rsp)
3008(3): setz %dl
300b(5): cmp $0x0,0xf(%rsp)
3010(6): jnz 0xb9a(%rip)
3016(3): mov %r8d,%eax
3019(3): mov %r15,%rcx
301c(3): xor $0x1,%eax
301f(2): and %dl,%al
3021(2): jz 0x2f(%rip)
3023(3): cmp %r15,%r13
3026(2): jbe 0x7(%rip)
3028(5): mov $0x27,0x0(%r14,%r15,1)
302d(4): lea 0x1(%r15),%rcx
3031(3): cmp %rcx,%r13
3034(2): jbe 0x8(%rip)
3036(6): mov $0x24,0x1(%r14,%r15,1)
303c(4): lea 0x2(%r15),%rcx
3040(3): cmp %rcx,%r13
3043(6): jnbe 0x636(%rip)
3049(4): lea 0x3(%r15),%rcx
304d(3): mov %eax,%r8d
3050(3): cmp %rcx,%r13
3053(2): jbe 0x7(%rip)
3055(5): mov $0x5c,0x0(%r14,%rcx,1)
305a(5): cmp $0x2,0x8(%rsp)
305f(4): lea 0x1(%rcx),%r15
3063(6): jz 0x606(%rip)
3069(4): lea 0x1(%rbp),%rax
306d(3): cmp %r11,%rax
3070(2): jnb 0x1b(%rip)
3072(5): mov 0x10(%rsp),%rax
3077(5): movzx 0x1(%rax,%rbp,1),%eax
307c(4): mov %al,0x28(%rsp)
3080(3): sub $0x30,%eax
3083(2): cmp $0x9,%al
3085(6): jbe 0x834(%rip)
308b(3): mov %r12d,%eax
308e(5): mov $0x30,%ebx
3093(3): xor %r12d,%r12d
3096(5): jmp 0xfffffbb2(%rip)
309b(5): nop 0x0(%rax,%rax,1)
30a0(5): cmp $0x2,0x8(%rsp)
30a5(3): mov %r10d,%r12d
30a8(3): setz %dl
30ab(3): xor %r10d,%r10d
30ae(2): xor %eax,%eax
30b0(5): jmp 0xfffffb98(%rip)
30b5(3): nop (%rax)
30b8(5): cmp $0x2,0x8(%rsp)
30bd(3): setz %dl
30c0(3): xor %r10d,%r10d
30c3(5): jmp 0xfffffdc5(%rip)
30c8(8): nop 0x0(%rax,%rax,1)
30d0(5): cmp $0x2,0x8(%rsp)
30d5(3): setz %dl
30d8(3): xor %r10d,%r10d
30db(3): xor %r12d,%r12d
30de(5): jmp 0xfffffdb3(%rip)
30e3(5): nop 0x0(%rax,%rax,1)
30e8(5): cmp $0x2,0x8(%rsp)
30ed(3): mov %r10d,%r12d
30f0(5): mov $0x20,%ebx
30f5(3): setz %dl
30f8(3): xor %r10d,%r10d
30fb(5): jmp 0xfffffd96(%rip)
3100(5): mov $0xd,%edx
3105(3): xor %r10d,%r10d
3108(5): mov $0x72,%ebx
310d(5): jmp 0xfffffc35(%rip)
3112(6): nop 0x0(%rax,%rax,1)
3118(5): mov $0x76,%ebx
311d(5): jmp 0xfffffca3(%rip)
3122(6): nop 0x0(%rax,%rax,1)
3128(5): mov $0x9,%edx
312d(3): xor %r10d,%r10d
3130(5): mov $0x74,%ebx
3135(5): jmp 0xfffffc0d(%rip)
313a(6): nop 0x0(%rax,%rax,1)
3140(5): mov $0x62,%ebx
3145(5): jmp 0xfffffc7b(%rip)
314a(6): nop 0x0(%rax,%rax,1)
3150(3): xor %r10d,%r10d
3153(5): jmp 0xfffffa9d(%rip)
3158(8): nop 0x0(%rax,%rax,1)
3160(5): cmp $0x0,0xf(%rsp)
3165(6): jnz 0x96b(%rip)
316b(4): add $0x1,%rbp
316f(3): mov %r8d,%eax
3172(3): xor %r12d,%r12d
3175(5): mov $0x5c,%ebx
317a(5): jmp 0xfffffb12(%rip)
317f(1): nop 
3180(5): cmp $0x2,0x8(%rsp)
3185(5): movzx 0xf(%rsp),%ebx
318a(3): mov %r8d,%r12d
318d(3): mov %r11,%rbp
3190(3): setz %dl
3193(2): mov %ebx,%eax
3195(3): test %r15,%r15
3198(3): setz %cl
319b(2): and %edx,%eax
319d(2): and %cl,%al
319f(6): jnz 0xa67(%rip)
31a5(2): mov %ebx,%eax
31a7(3): xor $0x1,%eax
31aa(2): and %al,%dl
31ac(6): jz 0x970(%rip)
31b2(5): cmp $0x0,0x7c(%rsp)
31b7(6): jz 0x963(%rip)
31bd(5): cmp $0x0,0xe(%rsp)
31c2(6): jnz 0x9fb(%rip)
31c8(3): test %r13,%r13
31cb(3): setz %al
31ce(6): cmp $0x0,0x50(%rsp)
31d4(3): setnz %dl
31d7(2): and %dl,%al
31d9(6): jz 0xa23(%rip)
31df(5): mov 0x50(%rsp),%r13
31e4(7): lea 0x2502(%rip),%rbx
31eb(4): mov $0x27,(%r14)
31ef(8): mov $0x2,0x8(%rsp)
31f7(6): mov $0x1,%r15d
31fd(9): mov $0x1,0x18(%rsp)
3206(5): mov $0x0,0xf(%rsp)
320b(5): mov %rbx,0x48(%rsp)
3210(4): mov %al,0x7c(%rsp)
3214(5): jmp 0xfffff8df(%rip)
3219(7): nop 0x0(%rax)
3220(5): cmp $0x0,0xf(%rsp)
3225(6): jnz 0x8ab(%rip)
322b(3): test %r13,%r13
322e(6): jz 0x402(%rip)
3234(2): xor %edx,%edx
3236(6): cmp $0x0,0x50(%rsp)
323c(6): jnz 0x3f4(%rip)
3242(5): mov %r13,0x50(%rsp)
3247(4): add $0x3,%r15
324b(2): xor %eax,%eax
324d(5): mov %r12b,0x7c(%rsp)
3252(3): xor %r8d,%r8d
3255(3): mov %rdx,%r13
3258(5): mov $0x27,%ebx
325d(5): jmp 0xfffffa1c(%rip)
3262(6): nop 0x0(%rax,%rax,1)
3268(5): test $0x4,0x78(%rsp)
326d(2): jz 0x23(%rip)
326f(4): lea 0x2(%rbp),%rcx
3273(3): cmp %r11,%rcx
3276(2): jnb 0x1a(%rip)
3278(5): mov 0x10(%rsp),%rax
327d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3282(6): jz 0x790(%rip)
3288(8): nop 0x0(%rax,%rax,1)
3290(2): xor %edx,%edx
3292(3): xor %r12d,%r12d
3295(2): xor %eax,%eax
3297(5): mov $0x3f,%ebx
329c(5): jmp 0xfffff9ac(%rip)
32a1(7): nop 0x0(%rax)
32a8(5): cmp $0x0,0xf(%rsp)
32ad(6): jnz 0x823(%rip)
32b3(3): xor %r12d,%r12d
32b6(2): xor %eax,%eax
32b8(5): mov $0x3f,%ebx
32bd(5): jmp 0xfffff9bc(%rip)
32c2(6): nop 0x0(%rax,%rax,1)
32c8(8): lea 0xa0(%rsp),%rax
32d0(4): cmp $0xffffffff,%r11
32d4(c): mov $0x0,0xa0(%rsp)
32e0(5): mov %rax,0x28(%rsp)
32e5(2): jnz 0x2f(%rip)
32e7(5): mov 0x10(%rsp),%rdi
32ec(5): mov %r8b,0x40(%rsp)
32f1(5): mov %r10b,0x38(%rsp)
32f6(5): mov %r9,0x30(%rsp)
32fb(5): call 0xffffe175(%rip)
3300(6): movzx 0x40(%rsp),%r8d
3306(6): movzx 0x38(%rsp),%r10d
330c(3): mov %rax,%r11
330f(5): mov 0x30(%rsp),%r9
3314(8): lea 0x9c(%rsp),%rax
331c(2): xor %ecx,%ecx
331e(4): mov %bl,0x7e(%rsp)
3322(5): mov %r8b,0x7d(%rsp)
3327(3): mov %rcx,%rbx
332a(8): mov %r9,0x88(%rsp)
3332(5): mov %rax,0x38(%rsp)
3337(5): mov %r10b,0x7f(%rsp)
333c(8): mov %r15,0x80(%rsp)
3344(5): mov %r14,0x40(%rsp)
3349(5): mov %r13,0x70(%rsp)
334e(5): mov %r11,0x30(%rsp)
3353(5): mov 0x10(%rsp),%rax
3358(5): lea 0x0(%rbp,%rbx,1),%r14
335d(5): mov 0x30(%rsp),%rdx
3362(5): mov 0x28(%rsp),%rcx
3367(5): mov 0x38(%rsp),%rdi
336c(4): lea 0x0(%rax,%r14,1),%r13
3370(3): sub %r14,%rdx
3373(3): mov %r13,%rsi
3376(5): call 0x1c1a(%rip)
337b(3): test %rax,%rax
337e(3): mov %rax,%r15
3381(2): jz 0x50(%rip)
3383(4): cmp $0xffffffff,%rax
3387(6): jz 0x61e(%rip)
338d(4): cmp $0xfffffffe,%rax
3391(6): jz 0x5a0(%rip)
3397(5): cmp $0x2,0x8(%rsp)
339c(3): setz %al
339f(4): and 0xf(%rsp),%al
33a3(6): jnz 0x19d(%rip)
33a9(7): mov 0x9c(%rsp),%edi
33b0(5): call 0xffffe2a0(%rip)
33b5(5): mov 0x28(%rsp),%rdi
33ba(2): test %eax,%eax
33bc(5): mov $0x0,%eax
33c1(4): cmove %eax,%r12d
33c5(3): add %r15,%rbx
33c8(5): call 0xffffe278(%rip)
33cd(2): test %eax,%eax
33cf(2): jz 0xffffff84(%rip)
33d1(3): mov %r12d,%edx
33d4(3): mov %rbx,%rdi
33d7(6): movzx 0x7d(%rsp),%r8d
33dd(3): xor $0x1,%edx
33e0(5): movzx 0x7e(%rsp),%ebx
33e5(6): movzx 0x7f(%rsp),%r10d
33eb(4): and 0xd(%rsp),%dl
33ef(8): mov 0x80(%rsp),%r15
33f7(5): mov 0x40(%rsp),%r14
33fc(5): mov 0x70(%rsp),%r13
3401(5): mov 0x30(%rsp),%r11
3406(4): cmp $0x1,%rdi
340a(6): jbe 0x601(%rip)
3410(3): mov %rdi,%rcx
3413(2): xor %esi,%esi
3415(6): movzx 0xf(%rsp),%r9d
341b(3): add %rbp,%rcx
341e(5): mov 0x10(%rsp),%rdi
3423(5): jmp 0xbb(%rip)
3428(8): nop 0x0(%rax,%rax,1)
3430(5): cmp $0x2,0x8(%rsp)
3435(3): setz %al
3438(3): test %r9b,%r9b
343b(6): jnz 0x4b5(%rip)
3441(3): mov %r8d,%esi
3444(3): xor $0x1,%esi
3447(3): and %sil,%al
344a(2): jz 0x31(%rip)
344c(3): cmp %r15,%r13
344f(2): jbe 0x7(%rip)
3451(5): mov $0x27,0x0(%r14,%r15,1)
3456(4): lea 0x1(%r15),%rsi
345a(3): cmp %rsi,%r13
345d(2): jbe 0x8(%rip)
345f(6): mov $0x24,0x1(%r14,%r15,1)
3465(4): lea 0x2(%r15),%rsi
3469(3): cmp %rsi,%r13
346c(2): jbe 0x8(%rip)
346e(6): mov $0x27,0x2(%r14,%r15,1)
3474(4): add $0x3,%r15
3478(3): mov %eax,%r8d
347b(3): cmp %r15,%r13
347e(2): jbe 0x7(%rip)
3480(5): mov $0x5c,0x0(%r14,%r15,1)
3485(4): lea 0x1(%r15),%rax
3489(3): cmp %rax,%r13
348c(2): jbe 0xf(%rip)
348e(2): mov %ebx,%eax
3490(3): shr $0x6,%al
3493(3): add $0x30,%eax
3496(5): mov %al,0x1(%r14,%r15,1)
349b(4): lea 0x2(%r15),%rax
349f(3): cmp %rax,%r13
34a2(2): jbe 0x12(%rip)
34a4(2): mov %ebx,%eax
34a6(3): shr $0x3,%al
34a9(3): and $0x7,%eax
34ac(3): add $0x30,%eax
34af(5): mov %al,0x2(%r14,%r15,1)
34b4(3): and $0x7,%ebx
34b7(4): add $0x1,%rbp
34bb(4): add $0x3,%r15
34bf(3): add $0x30,%ebx
34c2(3): cmp %rcx,%rbp
34c5(6): jnb 0xfffff7eb(%rip)
34cb(2): mov %edx,%esi
34cd(3): cmp %r15,%r13
34d0(2): jbe 0x6(%rip)
34d2(4): mov %bl,0x0(%r14,%r15,1)
34d6(4): movzx 0x0(%rdi,%rbp,1),%ebx
34da(4): add $0x1,%r15
34de(2): test %dl,%dl
34e0(6): jnz 0xffffff50(%rip)
34e6(2): mov %esi,%eax
34e8(3): xor $0x1,%eax
34eb(3): and %r8d,%eax
34ee(3): test %r10b,%r10b
34f1(2): jz 0x10(%rip)
34f3(3): cmp %r15,%r13
34f6(2): jbe 0x7(%rip)
34f8(5): mov $0x5c,0x0(%r14,%r15,1)
34fd(4): add $0x1,%r15
3501(4): add $0x1,%rbp
3505(3): cmp %rcx,%rbp
3508(6): jnb 0xfffff784(%rip)
350e(2): test %al,%al
3510(6): jz 0x3fe(%rip)
3516(3): cmp %r15,%r13
3519(2): jbe 0x7(%rip)
351b(5): mov $0x27,0x0(%r14,%r15,1)
3520(4): lea 0x1(%r15),%rax
3524(3): cmp %rax,%r13
3527(2): jbe 0x8(%rip)
3529(6): mov $0x27,0x1(%r14,%r15,1)
352f(4): add $0x2,%r15
3533(3): xor %r10d,%r10d
3536(3): xor %r8d,%r8d
3539(2): jmp 0xffffff94(%rip)
353b(5): nop 0x0(%rax,%rax,1)
3540(4): cmp $0x1,%r15
3544(6): jz 0xfffffe65(%rip)
354a(5): mov 0x10(%rsp),%rdi
354f(4): lea 0x0(%rdi,%r15,1),%rcx
3553(5): lea 0x1(%rdi,%r14,1),%rdx
3558(4): lea 0x0(%rcx,%r14,1),%r8
355c(2): jmp 0x11(%rip)
355e(2): nop 
3560(4): add $0x1,%rdx
3564(3): cmp %rdx,%r8
3567(6): jz 0xfffffe42(%rip)
356d(3): movzx (%rdx),%ecx
3570(3): sub $0x5b,%ecx
3573(3): cmp $0x21,%cl
3576(2): jnbe 0xffffffea(%rip)
3578(5): mov $0x1,%esi
357d(3): shl/sal %cl,%rsi
3580(3): mov %rsi,%rcx
3583(a): mov $0x8589934635,%rsi
358d(3): test %rsi,%rcx
3590(2): jz 0xffffffd0(%rip)
3592(5): mov 0x40(%rsp),%r14
3597(5): mov 0x70(%rsp),%r13
359c(5): mov 0x30(%rsp),%rbp
35a1(8): mov $0x2,0x8(%rsp)
35a9(5): cmp $0x0,0xd(%rsp)
35ae(2): jz 0x12(%rip)
35b0(2): test %al,%al
35b2(5): mov $0x4,%eax
35b7(5): cmove 0x8(%rsp),%eax
35bc(4): mov %eax,0x8(%rsp)
35c0(4): sub $0x8,%rsp
35c4(3): mov %rbp,%rcx
35c7(3): mov %r13,%rsi
35ca(4): push 0x68(%rsp)
35ce(4): push 0x78(%rsp)
35d2(3): mov %r14,%rdi
35d5(2): push $0x0
35d7(8): mov 0x98(%rsp),%r9d
35df(5): mov 0x28(%rsp),%r8d
35e4(5): mov 0x30(%rsp),%rdx
35e9(4): and $0xfd,%r9d
35ed(5): call 0xfffff433(%rip)
35f2(4): add $0x20,%rsp
35f6(3): mov %rax,%r15
35f9(8): mov 0xa8(%rsp),%rbx
3601(9): xor $0x28,%rbx
360a(3): mov %r15,%rax
360d(6): jnz 0x606(%rip)
3613(7): add $0xb8,%rsp
361a(1): pop %rbx
361b(1): pop %rbp
361c(2): pop %r12
361e(2): pop %r13
3620(2): pop %r14
3622(2): pop %r15
3624(1): ret near (%rsp)
3625(3): nop (%rax)
3628(3): mov %r11,%rbp
362b(5): jmp 0xffffff7e(%rip)
3630(3): cmp %r15,%r13
3633(2): jbe 0x7(%rip)
3635(5): mov $0x27,0x0(%r14,%r15,1)
363a(4): lea 0x1(%r15),%rax
363e(3): cmp %rax,%r13
3641(2): jbe 0x8(%rip)
3643(6): mov $0x5c,0x1(%r14,%r15,1)
3649(4): lea 0x2(%r15),%rax
364d(3): cmp %rax,%r13
3650(6): jbe 0x5f2(%rip)
3656(3): mov %r13,%rdx
3659(6): mov $0x27,0x2(%r14,%r15,1)
365f(5): mov 0x50(%rsp),%r13
3664(5): jmp 0xfffffbde(%rip)
3669(3): mov %r12d,%eax
366c(5): mov $0x30,%ebx
3671(3): xor %r12d,%r12d
3674(5): jmp 0xfffff605(%rip)
3679(6): mov $0x27,0x2(%r14,%r15,1)
367f(5): jmp 0xfffff9ca(%rip)
3684(2): test %ebx,%ebx
3686(6): jnz 0xfffff42d(%rip)
368c(5): mov $0x1,0xd(%rsp)
3691(3): test %r13,%r13
3694(6): jnz 0x596(%rip)
369a(7): lea 0x204c(%rip),%rax
36a1(9): mov $0x0,0x50(%rsp)
36aa(5): mov $0x1,0xe(%rsp)
36af(5): mov $0x0,0x7c(%rsp)
36b4(3): xor %r12d,%r12d
36b7(5): mov $0x0,0xf(%rsp)
36bc(9): mov $0x1,0x18(%rsp)
36c5(5): mov %rax,0x48(%rsp)
36ca(6): mov $0x1,%r15d
36d0(8): mov $0x2,0x8(%rsp)
36d8(5): jmp 0xfffff41b(%rip)
36dd(3): nop (%rax)
36e0(2): test %ebx,%ebx
36e2(6): jnz 0x3fb(%rip)
36e8(3): test %r13,%r13
36eb(6): jz 0x22b(%rip)
36f1(4): mov $0x22,(%r14)
36f5(5): mov $0x1,0xe(%rsp)
36fa(3): xor %r12d,%r12d
36fd(5): mov $0x0,0x7c(%rsp)
3702(9): mov $0x0,0x50(%rsp)
370b(7): lea 0x1fd9(%rip),%rax
3712(5): mov $0x0,0xf(%rsp)
3717(5): mov $0x1,0xd(%rsp)
371c(9): mov $0x1,0x18(%rsp)
3725(6): mov $0x1,%r15d
372b(5): mov %rax,0x48(%rsp)
3730(5): jmp 0xfffff3c3(%rip)
3735(7): lea 0x1faf(%rip),%rax
373c(5): mov $0x1,0xe(%rsp)
3741(5): mov $0x0,0x7c(%rsp)
3746(3): xor %r12d,%r12d
3749(9): mov $0x0,0x50(%rsp)
3752(5): mov $0x1,0xf(%rsp)
3757(5): mov $0x1,0xd(%rsp)
375c(9): mov $0x1,0x18(%rsp)
3765(3): xor %r15d,%r15d
3768(5): mov %rax,0x48(%rsp)
376d(8): mov $0x5,0x8(%rsp)
3775(5): jmp 0xfffff37e(%rip)
377a(5): mov $0x1,0xe(%rsp)
377f(5): mov $0x0,0x7c(%rsp)
3784(3): xor %r12d,%r12d
3787(9): mov $0x0,0x50(%rsp)
3790(5): mov $0x0,0xf(%rsp)
3795(3): xor %r15d,%r15d
3798(5): mov $0x1,0xd(%rsp)
379d(9): mov $0x0,0x18(%rsp)
37a6(9): mov $0x0,0x48(%rsp)
37af(5): jmp 0xfffff344(%rip)
37b4(5): cmp $0xa,0x8(%rsp)
37b9(2): jz 0x58(%rip)
37bb(7): lea 0x1f2d(%rip),%rsi
37c2(2): xor %edi,%edi
37c4(5): mov $0x5,%edx
37c9(5): call 0xffffdc87(%rip)
37ce(3): mov %rax,%rcx
37d1(5): mov %rax,0x68(%rsp)
37d6(7): lea 0x1f12(%rip),%rax
37dd(3): cmp %rax,%rcx
37e0(6): jz 0x39e(%rip)
37e6(7): lea 0x1f00(%rip),%rsi
37ed(2): xor %edi,%edi
37ef(5): mov $0x5,%edx
37f4(5): call 0xffffdc5c(%rip)
37f9(3): mov %rax,%rcx
37fc(5): mov %rax,0x60(%rsp)
3801(7): lea 0x1ee5(%rip),%rax
3808(3): cmp %rax,%rcx
380b(6): jz 0x389(%rip)
3811(3): xor %r15d,%r15d
3814(2): test %ebx,%ebx
3816(6): jz 0x1c7(%rip)
381c(2): test %ebx,%ebx
381e(5): mov 0x60(%rsp),%rbx
3823(5): setnz 0xf(%rsp)
3828(3): xor %r12d,%r12d
382b(3): mov %rbx,%rdi
382e(5): call 0xffffdc42(%rip)
3833(5): mov %rbx,0x48(%rsp)
3838(5): mov %rax,0x18(%rsp)
383d(5): mov $0x1,0xe(%rsp)
3842(5): mov $0x0,0x7c(%rsp)
3847(9): mov $0x0,0x50(%rsp)
3850(5): mov $0x1,0xd(%rsp)
3855(5): jmp 0xfffff29e(%rip)
385a(5): mov $0x1,0xe(%rsp)
385f(5): mov $0x0,0x7c(%rsp)
3864(3): xor %r12d,%r12d
3867(9): mov $0x0,0x50(%rsp)
3870(5): mov $0x0,0xf(%rsp)
3875(3): xor %r15d,%r15d
3878(5): mov $0x0,0xd(%rsp)
387d(9): mov $0x0,0x18(%rsp)
3886(9): mov $0x0,0x48(%rsp)
388f(5): jmp 0xfffff264(%rip)
3894(5): mov $0x1,0xe(%rsp)
3899(5): mov $0x0,0x7c(%rsp)
389e(3): xor %r12d,%r12d
38a1(9): mov $0x0,0x50(%rsp)
38aa(5): mov $0x1,0xf(%rsp)
38af(5): mov $0x1,0xd(%rsp)
38b4(5): jmp 0xfffff21f(%rip)
38b9(3): cmp %r15,%r13
38bc(2): jbe 0x7(%rip)
38be(5): mov $0x30,0x0(%r14,%r15,1)
38c3(4): lea 0x2(%rcx),%rax
38c7(3): cmp %rax,%r13
38ca(2): jbe 0x8(%rip)
38cc(6): mov $0x30,0x2(%r14,%rcx,1)
38d2(3): mov %r12d,%eax
38d5(4): lea 0x3(%rcx),%r15
38d9(3): xor %r12d,%r12d
38dc(5): mov $0x30,%ebx
38e1(5): jmp 0xfffff367(%rip)
38e6(a): nop 0x0(%rax,%rax,1)
38f0(5): movzx 0xf(%rsp),%ebx
38f5(3): mov %r11,%rbp
38f8(4): mov %bl,0xd(%rsp)
38fc(5): jmp 0xfffffcad(%rip)
3901(5): movzx 0xd(%rsp),%edx
3906(3): xor %r12d,%r12d
3909(5): jmp 0xfffffb07(%rip)
390e(3): xor %r10d,%r10d
3911(5): jmp 0xfffffbbc(%rip)
3916(9): mov $0x0,0x50(%rsp)
391f(5): mov $0x1,0xe(%rsp)
3924(3): xor %r12d,%r12d
3927(5): mov $0x0,0x7c(%rsp)
392c(5): jmp 0xfffffddf(%rip)
3931(5): mov 0x30(%rsp),%r11
3936(3): mov %r14,%rsi
3939(3): mov %r13,%rcx
393c(3): mov %rbx,%rax
393f(3): mov %rbx,%rdi
3942(6): movzx 0x7d(%rsp),%r8d
3948(5): movzx 0x7e(%rsp),%ebx
394d(8): mov 0x88(%rsp),%r9
3955(3): cmp %r11,%rsi
3958(6): movzx 0x7f(%rsp),%r10d
395e(8): mov 0x80(%rsp),%r15
3966(5): mov 0x40(%rsp),%r14
396b(5): mov 0x70(%rsp),%r13
3970(2): jnb 0x28(%rip)
3972(3): cmp $0x0,(%rcx)
3975(2): jnz 0x12(%rip)
3977(2): jmp 0x21(%rip)
3979(7): nop 0x0(%rax)
3980(5): cmp $0x0,0x0(%r9,%rax,1)
3985(2): jz 0x10(%rip)
3987(4): add $0x1,%rax
398b(5): lea 0x0(%rbp,%rax,1),%rdx
3990(3): cmp %rdx,%r11
3993(2): jnbe 0xffffffed(%rip)
3995(3): mov %rax,%rdi
3998(5): movzx 0xd(%rsp),%edx
399d(3): xor %r12d,%r12d
39a0(5): jmp 0xfffffa66(%rip)
39a5(3): mov %rbx,%rdi
39a8(6): movzx 0x7d(%rsp),%r8d
39ae(5): movzx 0x7e(%rsp),%ebx
39b3(6): movzx 0x7f(%rsp),%r10d
39b9(8): mov 0x80(%rsp),%r15
39c1(3): xor %r12d,%r12d
39c4(5): mov 0x40(%rsp),%r14
39c9(5): mov 0x70(%rsp),%r13
39ce(5): mov 0x30(%rsp),%r11
39d3(5): movzx 0xd(%rsp),%edx
39d8(5): jmp 0xfffffa2e(%rip)
39dd(5): mov 0x68(%rsp),%rdx
39e2(3): movzx (%rdx),%eax
39e5(2): test %al,%al
39e7(6): jz 0xfffffe35(%rip)
39ed(3): nop (%rax)
39f0(3): cmp %r15,%r13
39f3(2): jbe 0x6(%rip)
39f5(4): mov %al,0x0(%r14,%r15,1)
39f9(4): add $0x1,%r15
39fd(5): movzx 0x0(%rdx,%r15,1),%eax
3a02(2): test %al,%al
3a04(2): jnz 0xffffffec(%rip)
3a06(5): jmp 0xfffffe16(%rip)
3a0b(2): mov %edx,%eax
3a0d(5): jmp 0xfffff55a(%rip)
3a12(4): movzx 0x0(%rax,%rcx,1),%ebx
3a16(3): cmp $0x3e,%bl
3a19(6): jnbe 0xfffff877(%rip)
3a1f(a): mov $0x8070630310989004800,%rax
3a29(4): bt %rbx,%rax
3a2d(6): jnb 0xfffff863(%rip)
3a33(5): cmp $0x0,0xf(%rsp)
3a38(6): jnz 0x1ea(%rip)
3a3e(3): cmp %r15,%r13
3a41(2): jbe 0x7(%rip)
3a43(5): mov $0x3f,0x0(%r14,%r15,1)
3a48(4): lea 0x1(%r15),%rax
3a4c(3): cmp %rax,%r13
3a4f(2): jbe 0x8(%rip)
3a51(6): mov $0x22,0x1(%r14,%r15,1)
3a57(4): lea 0x2(%r15),%rax
3a5b(3): cmp %rax,%r13
3a5e(2): jbe 0x8(%rip)
3a60(6): mov $0x22,0x2(%r14,%r15,1)
3a66(4): lea 0x3(%r15),%rax
3a6a(3): cmp %rax,%r13
3a6d(2): jbe 0x8(%rip)
3a6f(6): mov $0x3f,0x3(%r14,%r15,1)
3a75(4): add $0x4,%r15
3a79(2): xor %edx,%edx
3a7b(3): xor %r12d,%r12d
3a7e(2): xor %eax,%eax
3a80(3): mov %rcx,%rbp
3a83(5): jmp 0xfffff1c5(%rip)
3a88(2): test %ebx,%ebx
3a8a(6): jz 0x18e(%rip)
3a90(7): lea 0x1c56(%rip),%rax
3a97(5): mov $0x1,0xe(%rsp)
3a9c(5): mov $0x0,0x7c(%rsp)
3aa1(3): xor %r12d,%r12d
3aa4(9): mov $0x0,0x50(%rsp)
3aad(5): mov $0x1,0xf(%rsp)
3ab2(5): mov $0x0,0xd(%rsp)
3ab7(9): mov $0x1,0x18(%rsp)
3ac0(3): xor %r15d,%r15d
3ac3(5): mov %rax,0x48(%rsp)
3ac8(5): jmp 0xfffff02b(%rip)
3acd(3): nop (%rax)
3ad0(3): mov %r11,%rbp
3ad3(5): movzx 0xf(%rsp),%eax
3ad8(5): jmp 0xfffffad1(%rip)
3add(7): lea 0x1c07(%rip),%rax
3ae4(5): mov $0x1,0xe(%rsp)
3ae9(5): mov $0x0,0x7c(%rsp)
3aee(3): xor %r12d,%r12d
3af1(9): mov $0x0,0x50(%rsp)
3afa(5): mov $0x1,0xf(%rsp)
3aff(5): mov $0x1,0xd(%rsp)
3b04(9): mov $0x1,0x18(%rsp)
3b0d(3): xor %r15d,%r15d
3b10(5): mov %rax,0x48(%rsp)
3b15(5): jmp 0xffffefde(%rip)
3b1a(2): mov %edx,%eax
3b1c(5): mov 0x48(%rsp),%rbx
3b21(3): test %rbx,%rbx
3b24(2): jz 0x2e(%rip)
3b26(2): test %al,%al
3b28(2): jz 0x2a(%rip)
3b2a(3): movzx (%rbx),%ecx
3b2d(3): mov %rbx,%rax
3b30(2): test %cl,%cl
3b32(2): jz 0x20(%rip)
3b34(3): mov %r15,%rdx
3b37(3): sub %r15,%rax
3b3a(3): cmp %rdx,%r13
3b3d(2): jbe 0x6(%rip)
3b3f(4): mov %cl,0x0(%r14,%rdx,1)
3b43(4): add $0x1,%rdx
3b47(4): movzx 0x0(%rax,%rdx,1),%ecx
3b4b(2): test %cl,%cl
3b4d(2): jnz 0xffffffed(%rip)
3b4f(3): mov %rdx,%r15
3b52(3): cmp %r15,%r13
3b55(6): jbe 0xfffffaa4(%rip)
3b5b(5): mov $0x0,0x0(%r14,%r15,1)
3b60(5): jmp 0xfffffa99(%rip)
3b65(5): cmp $0x2,0x8(%rsp)
3b6a(5): movzx 0xf(%rsp),%ebx
3b6f(3): mov %r11,%rbp
3b72(3): setz %al
3b75(4): mov %bl,0xd(%rsp)
3b79(5): jmp 0xfffffa30(%rip)
3b7e(4): mov 0x8(%rsp),%esi
3b82(3): mov %rcx,%rdi
3b85(5): call 0xffffedab(%rip)
3b8a(5): mov %rax,0x68(%rsp)
3b8f(5): jmp 0xfffffc57(%rip)
3b94(4): mov 0x8(%rsp),%esi
3b98(3): mov %rcx,%rdi
3b9b(5): call 0xffffed95(%rip)
3ba0(5): mov %rax,0x60(%rsp)
3ba5(5): jmp 0xfffffc6c(%rip)
3baa(5): movzx 0xf(%rsp),%ebx
3baf(3): mov %r11,%rbp
3bb2(2): mov %edx,%eax
3bb4(4): mov %bl,0xd(%rsp)
3bb8(5): jmp 0xfffff9f1(%rip)
3bbd(4): sub $0x8,%rsp
3bc1(6): mov $0x5,%r8d
3bc7(3): mov %r11,%rcx
3bca(4): push 0x68(%rsp)
3bce(4): push 0x78(%rsp)
3bd2(3): mov %r14,%rdi
3bd5(4): push 0x38(%rsp)
3bd9(8): mov 0x98(%rsp),%r9d
3be1(5): mov 0x30(%rsp),%rdx
3be6(5): mov 0x70(%rsp),%rsi
3beb(5): call 0xffffee35(%rip)
3bf0(4): add $0x20,%rsp
3bf4(3): mov %rax,%r15
3bf7(5): jmp 0xfffffa02(%rip)
3bfc(5): movzx 0x7c(%rsp),%eax
3c01(5): jmp 0xffffff1b(%rip)
3c06(8): mov $0x2,0x8(%rsp)
3c0e(5): jmp 0xfffff99b(%rip)
3c13(5): call 0xffffd86d(%rip)
3c18(5): mov $0x0,0xd(%rsp)
3c1d(5): jmp 0xfffffa74(%rip)
3c22(3): mov %r11,%rbp
3c25(5): jmp 0xfffff99b(%rip)
3c2a(5): mov $0x1,0xe(%rsp)
3c2f(2): xor %eax,%eax
3c31(3): xor %r12d,%r12d
3c34(9): mov $0x0,0x50(%rsp)
3c3d(5): jmp 0xfffff5a7(%rip)
3c42(3): mov %r13,%rdx
3c45(5): mov 0x50(%rsp),%r13
3c4a(5): jmp 0xfffff5f8(%rip)
3c4f(5): call 0xffffd771(%rip)

"quotearg_n_options" :
3c60(2): push %r15
3c62(2): push %r14
3c64(3): movsxd %edi,%r15
3c67(2): push %r13
3c69(2): push %r12
3c6b(3): mov %rdx,%r14
3c6e(1): push %rbp
3c6f(1): push %rbx
3c70(3): mov %rcx,%rbp
3c73(4): sub $0x28,%rsp
3c77(5): mov %rsi,0x8(%rsp)
3c7c(5): call 0xffffd754(%rip)
3c81(3): mov %rax,%r13
3c84(2): mov (%rax),%eax
3c86(3): test %r15d,%r15d
3c89(7): mov 0x2043f0(%rip),%rbx
3c90(4): mov %eax,0x18(%rsp)
3c94(6): js 0x16d(%rip)
3c9a(7): cmp %r15d,0x2043d7(%rip)
3ca1(2): jnle 0x64(%rip)
3ca3(7): cmp $0x7fffffff,%r15d
3caa(6): jz 0x15c(%rip)
3cb0(4): lea 0x1(%r15),%r12d
3cb4(7): lea 0x2043d5(%rip),%rax
3cbb(3): movsxd %r12d,%rsi
3cbe(4): shl/sal $0x4,%rsi
3cc2(3): cmp %rax,%rbx
3cc5(6): jz 0x11b(%rip)
3ccb(3): mov %rbx,%rdi
3cce(5): call 0xf72(%rip)
3cd3(3): mov %rax,%rbx
3cd6(7): mov %rax,0x2043a3(%rip)
3cdd(7): movsxd 0x204394(%rip),%rdi
3ce4(3): mov %r12d,%edx
3ce7(2): xor %esi,%esi
3ce9(2): sub %edi,%edx
3ceb(4): shl/sal $0x4,%rdi
3cef(3): movsxd %edx,%rdx
3cf2(3): add %rbx,%rdi
3cf5(4): shl/sal $0x4,%rdx
3cf9(5): call 0xffffd7e7(%rip)
3cfe(7): mov %r12d,0x204373(%rip)
3d05(3): mov 0x4(%rbp),%eax
3d08(4): shl/sal $0x4,%r15
3d0c(4): sub $0x8,%rsp
3d10(3): add %r15,%rbx
3d13(4): lea 0x8(%rbp),%r15
3d17(4): mov 0x0(%rbp),%r8d
3d1b(3): mov (%rbx),%r11
3d1e(4): mov 0x8(%rbx),%r12
3d22(3): mov %r14,%rcx
3d25(3): or $0x1,%eax
3d28(4): mov %eax,0x24(%rsp)
3d2c(3): push 0x30(%rbp)
3d2f(3): mov %eax,%r9d
3d32(3): push 0x28(%rbp)
3d35(2): push %r15
3d37(3): mov %r11,%rsi
3d3a(5): mov 0x28(%rsp),%rdx
3d3f(3): mov %r12,%rdi
3d42(5): mov %r11,0x30(%rsp)
3d47(5): call 0xffffecd9(%rip)
3d4c(4): add $0x20,%rsp
3d50(5): mov 0x10(%rsp),%r11
3d55(3): cmp %rax,%r11
3d58(2): jnbe 0x69(%rip)
3d5a(4): lea 0x1(%rax),%rsi
3d5e(7): lea 0x2043bb(%rip),%rax
3d65(3): cmp %rax,%r12
3d68(3): mov %rsi,(%rbx)
3d6b(2): jz 0x14(%rip)
3d6d(3): mov %r12,%rdi
3d70(5): mov %rsi,0x10(%rsp)
3d75(5): call 0xffffd63b(%rip)
3d7a(5): mov 0x10(%rsp),%rsi
3d7f(3): mov %rsi,%rdi
3d82(5): mov %rsi,0x10(%rsp)
3d87(5): call 0xe59(%rip)
3d8c(4): sub $0x8,%rsp
3d90(4): mov %rax,0x8(%rbx)
3d94(4): mov 0x0(%rbp),%r8d
3d98(3): push 0x30(%rbp)
3d9b(3): push 0x28(%rbp)
3d9e(3): mov %r14,%rcx
3da1(2): push %r15
3da3(5): mov 0x3c(%rsp),%r9d
3da8(3): mov %rax,%rdi
3dab(5): mov 0x28(%rsp),%rdx
3db0(5): mov 0x30(%rsp),%rsi
3db5(3): mov %rax,%r12
3db8(5): call 0xffffec68(%rip)
3dbd(4): add $0x20,%rsp
3dc1(4): mov 0x18(%rsp),%eax
3dc5(4): mov %eax,0x0(%r13)
3dc9(4): add $0x28,%rsp
3dcd(3): mov %r12,%rax
3dd0(1): pop %rbx
3dd1(1): pop %rbp
3dd2(2): pop %r12
3dd4(2): pop %r13
3dd6(2): pop %r14
3dd8(2): pop %r15
3dda(1): ret near (%rsp)
3ddb(5): nop 0x0(%rax,%rax,1)
3de0(2): xor %edi,%edi
3de2(5): call 0xe5e(%rip)
3de7(8): movdqa 0x2042a1(%rip),%xmm0
3def(3): mov %rax,%rbx
3df2(7): mov %rax,0x204287(%rip)
3df9(3): movups %xmm0,(%rax)
3dfc(5): jmp 0xfffffee1(%rip)
3e01(5): call 0xffffd5bf(%rip)
3e06(5): call 0x102a(%rip)

"clone_quoting_options" :
3e10(2): push %r12
3e12(1): push %rbp
3e13(1): push %rbx
3e14(3): mov %rdi,%rbx
3e17(5): call 0xffffd5b9(%rip)
3e1c(3): mov (%rax),%r12d
3e1f(3): mov %rax,%rbp
3e22(7): lea 0x2043f7(%rip),%rax
3e29(3): test %rbx,%rbx
3e2c(5): mov $0x38,%esi
3e31(4): cmove %rax,%rbx
3e35(3): mov %rbx,%rdi
3e38(5): call 0xfa8(%rip)
3e3d(4): mov %r12d,0x0(%rbp)
3e41(1): pop %rbx
3e42(1): pop %rbp
3e43(2): pop %r12
3e45(1): ret near (%rsp)

"get_quoting_style" :
3e50(7): lea 0x2043c9(%rip),%rax
3e57(3): test %rdi,%rdi
3e5a(4): cmove %rax,%rdi
3e5e(2): mov (%rdi),%eax
3e60(1): ret near (%rsp)

"set_quoting_style" :
3e70(7): lea 0x2043a9(%rip),%rax
3e77(3): test %rdi,%rdi
3e7a(4): cmove %rax,%rdi
3e7e(2): mov %esi,(%rdi)
3e80(1): ret near (%rsp)

"set_char_quoting" :
3e90(7): lea 0x204389(%rip),%rax
3e97(3): test %rdi,%rdi
3e9a(2): mov %esi,%ecx
3e9c(4): cmove %rax,%rdi
3ea0(2): mov %esi,%eax
3ea2(3): and $0x1f,%ecx
3ea5(3): shr $0x5,%al
3ea8(3): movzx %al,%eax
3eab(5): lea 0x8(%rdi,%rax,4),%rdi
3eb0(2): mov (%rdi),%esi
3eb2(2): mov %esi,%eax
3eb4(2): shr %cl,%eax
3eb6(2): xor %eax,%edx
3eb8(3): and $0x1,%eax
3ebb(3): and $0x1,%edx
3ebe(2): shl/sal %cl,%edx
3ec0(2): xor %esi,%edx
3ec2(2): mov %edx,(%rdi)
3ec4(1): ret near (%rsp)

"set_quoting_flags" :
3ed0(7): lea 0x204349(%rip),%rax
3ed7(3): test %rdi,%rdi
3eda(4): cmove %rax,%rdi
3ede(3): mov 0x4(%rdi),%eax
3ee1(3): mov %esi,0x4(%rdi)
3ee4(1): ret near (%rsp)

"set_custom_quoting" :
3ef0(7): lea 0x204329(%rip),%rax
3ef7(3): test %rdi,%rdi
3efa(4): cmove %rax,%rdi
3efe(3): test %rsi,%rsi
3f01(6): mov $0xa,(%rdi)
3f07(2): jz 0x10(%rip)
3f09(3): test %rdx,%rdx
3f0c(2): jz 0xb(%rip)
3f0e(4): mov %rsi,0x28(%rdi)
3f12(4): mov %rdx,0x30(%rdi)
3f16(1): ret near (%rsp)
3f17(4): sub $0x8,%rsp
3f1b(5): call 0xffffd4a5(%rip)

"quotearg_buffer" :
3f20(2): push %r15
3f22(2): push %r14
3f24(7): lea 0x2042f5(%rip),%rax
3f2b(2): push %r13
3f2d(2): push %r12
3f2f(3): mov %rdi,%r13
3f32(1): push %rbp
3f33(1): push %rbx
3f34(3): mov %r8,%rbx
3f37(3): mov %rsi,%r14
3f3a(3): mov %rdx,%r15
3f3d(4): sub $0x18,%rsp
3f41(3): test %r8,%r8
3f44(4): cmove %rax,%rbx
3f48(5): mov %rcx,0x8(%rsp)
3f4d(5): call 0xffffd483(%rip)
3f52(3): mov (%rax),%r12d
3f55(3): mov %rax,%rbp
3f58(4): lea 0x8(%rbx),%rax
3f5c(4): sub $0x8,%rsp
3f60(4): mov 0x4(%rbx),%r9d
3f64(3): push 0x30(%rbx)
3f67(3): mov (%rbx),%r8d
3f6a(3): push 0x28(%rbx)
3f6d(3): mov %r15,%rdx
3f70(1): push %rax
3f71(5): mov 0x28(%rsp),%rcx
3f76(3): mov %r14,%rsi
3f79(3): mov %r13,%rdi
3f7c(5): call 0xffffeaa4(%rip)
3f81(4): mov %r12d,0x0(%rbp)
3f85(4): add $0x38,%rsp
3f89(1): pop %rbx
3f8a(1): pop %rbp
3f8b(2): pop %r12
3f8d(2): pop %r13
3f8f(2): pop %r14
3f91(2): pop %r15
3f93(1): ret near (%rsp)

"quotearg_alloc_mem" :
3fa0(2): push %r15
3fa2(2): push %r14
3fa4(7): lea 0x204275(%rip),%rax
3fab(2): push %r13
3fad(2): push %r12
3faf(3): mov %rdx,%r12
3fb2(1): push %rbp
3fb3(1): push %rbx
3fb4(3): mov %rcx,%rbx
3fb7(3): mov %rdi,%r14
3fba(3): mov %rsi,%r15
3fbd(4): sub $0x38,%rsp
3fc1(3): test %rcx,%rcx
3fc4(4): cmove %rax,%rbx
3fc8(2): xor %ebp,%ebp
3fca(5): call 0xffffd406(%rip)
3fcf(3): test %r12,%r12
3fd2(3): mov %rax,%r13
3fd5(2): mov (%rax),%eax
3fd7(4): setz %bpl
3fdb(3): or 0x4(%rbx),%ebp
3fde(4): lea 0x8(%rbx),%r10
3fe2(4): sub $0x8,%rsp
3fe6(3): mov (%rbx),%r8d
3fe9(3): mov %r15,%rcx
3fec(4): mov %eax,0x14(%rsp)
3ff0(3): push 0x30(%rbx)
3ff3(3): mov %r14,%rdx
3ff6(3): push 0x28(%rbx)
3ff9(2): push %r10
3ffb(2): xor %esi,%esi
3ffd(3): mov %ebp,%r9d
4000(2): xor %edi,%edi
4002(5): mov %r10,0x40(%rsp)
4007(5): call 0xffffea19(%rip)
400c(4): lea 0x1(%rax),%rsi
4010(5): mov %rax,0x48(%rsp)
4015(4): add $0x20,%rsp
4019(3): mov %rsi,%rdi
401c(5): mov %rsi,0x18(%rsp)
4021(5): call 0xbbf(%rip)
4026(5): mov %rax,0x10(%rsp)
402b(4): sub $0x8,%rsp
402f(3): push 0x30(%rbx)
4032(3): push 0x28(%rbx)
4035(5): mov 0x38(%rsp),%r10
403a(3): mov %ebp,%r9d
403d(3): mov (%rbx),%r8d
4040(3): mov %r15,%rcx
4043(3): mov %r14,%rdx
4046(3): mov %rax,%rdi
4049(2): push %r10
404b(5): mov 0x38(%rsp),%rsi
4050(5): call 0xffffe9d0(%rip)
4055(4): mov 0x2c(%rsp),%eax
4059(4): add $0x20,%rsp
405d(3): test %r12,%r12
4060(4): mov %eax,0x0(%r13)
4064(2): jz 0xb(%rip)
4066(5): mov 0x28(%rsp),%r11
406b(4): mov %r11,(%r12)
406f(5): mov 0x10(%rsp),%rax
4074(4): add $0x38,%rsp
4078(1): pop %rbx
4079(1): pop %rbp
407a(2): pop %r12
407c(2): pop %r13
407e(2): pop %r14
4080(2): pop %r15
4082(1): ret near (%rsp)

"quotearg_alloc" :
4090(3): mov %rdx,%rcx
4093(2): xor %edx,%edx
4095(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
40a0(6): mov 0x203fd2(%rip),%eax
40a6(2): push %r12
40a8(7): mov 0x203fd1(%rip),%r12
40af(1): push %rbp
40b0(1): push %rbx
40b1(3): cmp $0x1,%eax
40b4(2): jle 0x2d(%rip)
40b6(3): sub $0x2,%eax
40b9(5): lea 0x18(%r12),%rbx
40be(4): shl/sal $0x4,%rax
40c2(5): lea 0x28(%r12,%rax,1),%rbp
40c7(9): nop 0x0(%rax,%rax,1)
40d0(3): mov (%rbx),%rdi
40d3(4): add $0x10,%rbx
40d7(5): call 0xffffd2d9(%rip)
40dc(3): cmp %rbp,%rbx
40df(2): jnz 0xfffffff1(%rip)
40e1(5): mov 0x8(%r12),%rdi
40e6(7): lea 0x204033(%rip),%rbx
40ed(3): cmp %rbx,%rdi
40f0(2): jz 0x19(%rip)
40f2(5): call 0xffffd2be(%rip)
40f7(b): mov $0x100,0x203f8e(%rip)
4102(7): mov %rbx,0x203f8f(%rip)
4109(7): lea 0x203f80(%rip),%rbx
4110(3): cmp %rbx,%r12
4113(2): jz 0x11(%rip)
4115(3): mov %r12,%rdi
4118(5): call 0xffffd298(%rip)
411d(7): mov %rbx,0x203f5c(%rip)
4124(1): pop %rbx
4125(a): mov $0x1,0x203f49(%rip)
412f(1): pop %rbp
4130(2): pop %r12
4132(1): ret near (%rsp)

"quotearg_n" :
4140(7): lea 0x2040d9(%rip),%rcx
4147(7): mov $0xffffffff,%rdx
414e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4160(7): lea 0x2040b9(%rip),%rcx
4167(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4170(7): lea 0x2040a9(%rip),%rcx
4177(3): mov %rdi,%rsi
417a(7): mov $0xffffffff,%rdx
4181(2): xor %edi,%edi
4183(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4190(7): lea 0x204089(%rip),%rcx
4197(3): mov %rsi,%rdx
419a(3): mov %rdi,%rsi
419d(2): xor %edi,%edi
419f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
41b0(4): sub $0x48,%rsp
41b4(3): mov %rdx,%rax
41b7(9): mov $0x28,%rdx
41c0(5): mov %rdx,0x38(%rsp)
41c5(2): xor %edx,%edx
41c7(3): cmp $0xa,%esi
41ca(2): jz 0x6a(%rip)
41cc(3): mov %esi,(%rsp)
41cf(3): mov %rsp,%rcx
41d2(7): mov $0xffffffff,%rdx
41d9(3): mov %rax,%rsi
41dc(9): mov $0x0,0x4(%rsp)
41e5(9): mov $0x0,0xc(%rsp)
41ee(9): mov $0x0,0x14(%rsp)
41f7(9): mov $0x0,0x1c(%rsp)
4200(9): mov $0x0,0x24(%rsp)
4209(9): mov $0x0,0x2c(%rsp)
4212(8): mov $0x0,0x34(%rsp)
421a(5): call 0xfffffa46(%rip)
421f(5): mov 0x38(%rsp),%rcx
4224(9): xor $0x28,%rcx
422d(2): jnz 0xc(%rip)
422f(4): add $0x48,%rsp
4233(1): ret near (%rsp)
4234(5): call 0xffffd18c(%rip)
4239(5): call 0xffffd247(%rip)

"quotearg_n_style_mem" :
4240(4): sub $0x48,%rsp
4244(3): mov %rdx,%rax
4247(3): mov %rcx,%rdx
424a(9): mov $0x28,%rcx
4253(5): mov %rcx,0x38(%rsp)
4258(2): xor %ecx,%ecx
425a(3): cmp $0xa,%esi
425d(2): jz 0x63(%rip)
425f(3): mov %esi,(%rsp)
4262(3): mov %rsp,%rcx
4265(3): mov %rax,%rsi
4268(9): mov $0x0,0x4(%rsp)
4271(9): mov $0x0,0xc(%rsp)
427a(9): mov $0x0,0x14(%rsp)
4283(9): mov $0x0,0x1c(%rsp)
428c(9): mov $0x0,0x24(%rsp)
4295(9): mov $0x0,0x2c(%rsp)
429e(8): mov $0x0,0x34(%rsp)
42a6(5): call 0xfffff9ba(%rip)
42ab(5): mov 0x38(%rsp),%rdx
42b0(9): xor $0x28,%rdx
42b9(2): jnz 0xc(%rip)
42bb(4): add $0x48,%rsp
42bf(1): ret near (%rsp)
42c0(5): call 0xffffd100(%rip)
42c5(5): call 0xffffd1bb(%rip)

"quotearg_style" :
42d0(3): mov %rsi,%rdx
42d3(2): mov %edi,%esi
42d5(2): xor %edi,%edi
42d7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
42e0(3): mov %rdx,%rcx
42e3(3): mov %rsi,%rdx
42e6(2): mov %edi,%esi
42e8(2): xor %edi,%edi
42ea(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
42f0(4): sub $0x48,%rsp
42f4(2): mov %edx,%ecx
42f6(9): mov $0x28,%rax
42ff(5): mov %rax,0x38(%rsp)
4304(2): xor %eax,%eax
4306(7): mov 0x203f43(%rip),%rax
430d(3): mov %rsp,%r8
4310(3): and $0x1f,%ecx
4313(8): movdqa 0x203f05(%rip),%xmm0
431b(5): mov %rax,0x30(%rsp)
4320(2): mov %edx,%eax
4322(4): movaps %xmm0,(%rsp)
4326(3): shr $0x5,%al
4329(3): movzx %al,%eax
432c(5): lea 0x8(%r8,%rax,4),%r9
4331(8): movdqa 0x203ef7(%rip),%xmm0
4339(5): movaps %xmm0,0x10(%rsp)
433e(8): movdqa 0x203efa(%rip),%xmm0
4346(5): movaps %xmm0,0x20(%rsp)
434b(3): mov (%r9),%edx
434e(2): mov %edx,%eax
4350(2): shr %cl,%eax
4352(2): not %eax
4354(3): and $0x1,%eax
4357(2): shl/sal %cl,%eax
4359(3): mov %r8,%rcx
435c(2): xor %edx,%eax
435e(3): mov %rsi,%rdx
4361(3): mov %rdi,%rsi
4364(3): mov %eax,(%r9)
4367(2): xor %edi,%edi
4369(5): call 0xfffff8f7(%rip)
436e(5): mov 0x38(%rsp),%rsi
4373(9): xor $0x28,%rsi
437c(2): jnz 0x7(%rip)
437e(4): add $0x48,%rsp
4382(1): ret near (%rsp)
4383(5): call 0xffffd0fd(%rip)

"quotearg_char" :
4390(4): movsx %sil,%edx
4394(7): mov $0xffffffff,%rsi
439b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
43a0(5): mov $0x3a,%edx
43a5(7): mov $0xffffffff,%rsi
43ac(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
43c0(5): mov $0x3a,%edx
43c5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
43d0(4): sub $0x48,%rsp
43d4(3): mov %rdx,%rax
43d7(9): mov $0x28,%rdx
43e0(5): mov %rdx,0x38(%rsp)
43e5(2): xor %edx,%edx
43e7(3): cmp $0xa,%esi
43ea(2): jz 0x6a(%rip)
43ec(3): mov %esi,(%rsp)
43ef(3): mov %rsp,%rcx
43f2(7): mov $0xffffffff,%rdx
43f9(3): mov %rax,%rsi
43fc(9): mov $0x0,0x4(%rsp)
4405(9): mov $0x4000000,0xc(%rsp)
440e(9): mov $0x0,0x14(%rsp)
4417(9): mov $0x0,0x1c(%rsp)
4420(9): mov $0x0,0x24(%rsp)
4429(9): mov $0x0,0x2c(%rsp)
4432(8): mov $0x0,0x34(%rsp)
443a(5): call 0xfffff826(%rip)
443f(5): mov 0x38(%rsp),%rcx
4444(9): xor $0x28,%rcx
444d(2): jnz 0xc(%rip)
444f(4): add $0x48,%rsp
4453(1): ret near (%rsp)
4454(5): call 0xffffcf6c(%rip)
4459(5): call 0xffffd027(%rip)

"quotearg_n_custom_mem" :
4460(4): sub $0x48,%rsp
4464(3): mov %rcx,%r9
4467(7): mov 0x203de2(%rip),%rcx
446e(8): movdqa 0x203daa(%rip),%xmm0
4476(9): mov $0x28,%rax
447f(5): mov %rax,0x38(%rsp)
4484(2): xor %eax,%eax
4486(4): movaps %xmm0,(%rsp)
448a(3): test %rsi,%rsi
448d(5): mov %rcx,0x30(%rsp)
4492(7): mov $0xa,(%rsp)
4499(8): movdqa 0x203d8f(%rip),%xmm0
44a1(5): movaps %xmm0,0x10(%rsp)
44a6(8): movdqa 0x203d92(%rip),%xmm0
44ae(5): movaps %xmm0,0x20(%rsp)
44b3(2): jz 0x34(%rip)
44b5(3): test %rdx,%rdx
44b8(2): jz 0x2f(%rip)
44ba(5): mov %rsi,0x28(%rsp)
44bf(5): mov %rdx,0x30(%rsp)
44c4(3): mov %rsp,%rcx
44c7(3): mov %r8,%rdx
44ca(3): mov %r9,%rsi
44cd(5): call 0xfffff793(%rip)
44d2(5): mov 0x38(%rsp),%rdi
44d7(9): xor $0x28,%rdi
44e0(2): jnz 0xc(%rip)
44e2(4): add $0x48,%rsp
44e6(1): ret near (%rsp)
44e7(5): call 0xffffced9(%rip)
44ec(5): call 0xffffcf94(%rip)

"quotearg_n_custom" :
4500(7): mov $0xffffffff,%r8
4507(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4510(3): mov %rdx,%rcx
4513(7): mov $0xffffffff,%r8
451a(3): mov %rsi,%rdx
451d(3): mov %rdi,%rsi
4520(2): xor %edi,%edi
4522(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4530(3): mov %rcx,%r8
4533(3): mov %rdx,%rcx
4536(3): mov %rsi,%rdx
4539(3): mov %rdi,%rsi
453c(2): xor %edi,%edi
453e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4550(7): lea 0x203ae9(%rip),%rcx
4557(5): jmp 0xfffff709(%rip)

"quote_mem" :
4560(7): lea 0x203ad9(%rip),%rcx
4567(3): mov %rsi,%rdx
456a(3): mov %rdi,%rsi
456d(2): xor %edi,%edi
456f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4580(7): lea 0x203ab9(%rip),%rcx
4587(7): mov $0xffffffff,%rdx
458e(5): jmp 0xfffff6d2(%rip)

"quote" :
45a0(7): lea 0x203a99(%rip),%rcx
45a7(3): mov %rdi,%rsi
45aa(7): mov $0xffffffff,%rdx
45b1(2): xor %edi,%edi
45b3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
45c0(2): push %r15
45c2(2): push %r14
45c4(2): push %r13
45c6(2): push %r12
45c8(3): mov %r9,%r12
45cb(1): push %rbp
45cc(1): push %rbx
45cd(3): mov %rdi,%rbp
45d0(3): mov %r8,%rbx
45d3(4): sub $0x28,%rsp
45d7(3): test %rsi,%rsi
45da(6): jz 0x11e(%rip)
45e0(3): mov %rdx,%r8
45e3(7): lea 0x15be(%rip),%rdx
45ea(3): mov %rcx,%r9
45ed(2): xor %eax,%eax
45ef(3): mov %rsi,%rcx
45f2(5): mov $0x1,%esi
45f7(5): call 0xffffd039(%rip)
45fc(7): lea 0x15b8(%rip),%rsi
4603(2): xor %edi,%edi
4605(5): mov $0x5,%edx
460a(5): call 0xffffce46(%rip)
460f(7): lea 0x18ca(%rip),%rdx
4616(3): mov %rax,%rcx
4619(6): mov $0x7e3,%r8d
461f(5): mov $0x1,%esi
4624(3): mov %rbp,%rdi
4627(2): xor %eax,%eax
4629(5): call 0xffffd007(%rip)
462e(7): lea 0x1613(%rip),%rsi
4635(2): xor %edi,%edi
4637(5): mov $0x5,%edx
463c(5): call 0xffffce14(%rip)
4641(3): mov %rbp,%rsi
4644(3): mov %rax,%rdi
4647(5): call 0xffffcec9(%rip)
464c(4): cmp $0x9,%r12
4650(6): jnbe 0x340(%rip)
4656(7): lea 0x184b(%rip),%rdx
465d(4): movsxd 0x0(%rdx,%r12,4),%rax
4661(3): add %rdx,%rax
4664(2): jmp %rax
4666(a): nop 0x0(%rax,%rax,1)
4670(4): mov 0x38(%rbx),%r9
4674(4): mov 0x10(%rbx),%rax
4678(7): lea 0x1739(%rip),%rsi
467f(4): mov 0x8(%rbx),%r8
4683(5): mov $0x5,%edx
4688(2): xor %edi,%edi
468a(4): mov 0x30(%rbx),%r13
468e(4): mov 0x28(%rbx),%r12
4692(5): mov %r9,0x10(%rsp)
4697(4): mov 0x20(%rbx),%r15
469b(4): mov 0x18(%rbx),%r14
469f(4): mov %rax,(%rsp)
46a3(5): mov %r8,0x8(%rsp)
46a8(3): mov (%rbx),%rbx
46ab(5): call 0xffffcda5(%rip)
46b0(4): sub $0x8,%rsp
46b4(5): mov 0x18(%rsp),%r9
46b9(3): mov %rax,%rdx
46bc(3): mov %rbx,%rcx
46bf(5): mov $0x1,%esi
46c4(3): mov %rbp,%rdi
46c7(2): xor %eax,%eax
46c9(2): push %r9
46cb(2): push %r13
46cd(2): push %r12
46cf(2): push %r15
46d1(2): push %r14
46d3(5): mov 0x30(%rsp),%r9
46d8(5): mov 0x38(%rsp),%r8
46dd(5): call 0xffffcf53(%rip)
46e2(4): add $0x30,%rsp
46e6(4): add $0x28,%rsp
46ea(1): pop %rbx
46eb(1): pop %rbp
46ec(2): pop %r12
46ee(2): pop %r13
46f0(2): pop %r14
46f2(2): pop %r15
46f4(1): ret near (%rsp)
46f5(3): nop (%rax)
46f8(3): mov %rcx,%r8
46fb(3): mov %rdx,%rcx
46fe(7): lea 0x14af(%rip),%rdx
4705(5): mov $0x1,%esi
470a(2): xor %eax,%eax
470c(5): call 0xffffcf24(%rip)
4711(5): jmp 0xfffffeeb(%rip)
4716(a): nop 0x0(%rax,%rax,1)
4720(4): mov 0x40(%rbx),%r10
4724(4): mov 0x38(%rbx),%r9
4728(7): lea 0x16b9(%rip),%rsi
472f(4): mov 0x10(%rbx),%rax
4733(4): mov 0x8(%rbx),%r8
4737(5): mov $0x5,%edx
473c(4): mov 0x30(%rbx),%r13
4740(4): mov 0x28(%rbx),%r12
4744(4): mov 0x20(%rbx),%r15
4748(4): mov 0x18(%rbx),%r14
474c(3): mov (%rbx),%rbx
474f(5): mov %r10,0x18(%rsp)
4754(5): mov %r9,0x10(%rsp)
4759(4): mov %rax,(%rsp)
475d(5): mov %r8,0x8(%rsp)
4762(2): xor %edi,%edi
4764(5): call 0xffffccec(%rip)
4769(5): mov 0x18(%rsp),%r10
476e(2): push %r10
4770(5): jmp 0xffffff44(%rip)
4775(3): nop (%rax)
4778(3): mov (%rbx),%rbx
477b(7): lea 0x143d(%rip),%rsi
4782(5): mov $0x5,%edx
4787(2): xor %edi,%edi
4789(5): call 0xffffccc7(%rip)
478e(4): add $0x28,%rsp
4792(3): mov %rbx,%rcx
4795(3): mov %rbp,%rdi
4798(1): pop %rbx
4799(1): pop %rbp
479a(2): pop %r12
479c(2): pop %r13
479e(2): pop %r14
47a0(2): pop %r15
47a2(3): mov %rax,%rdx
47a5(5): mov $0x1,%esi
47aa(2): xor %eax,%eax
47ac(5): jmp 0xffffce84(%rip)
47b1(7): nop 0x0(%rax)
47b8(4): mov 0x8(%rbx),%r12
47bc(7): lea 0x140c(%rip),%rsi
47c3(3): mov (%rbx),%rbx
47c6(5): mov $0x5,%edx
47cb(2): xor %edi,%edi
47cd(5): call 0xffffcc83(%rip)
47d2(4): add $0x28,%rsp
47d6(3): mov %r12,%r8
47d9(3): mov %rbx,%rcx
47dc(3): mov %rbp,%rdi
47df(3): mov %rax,%rdx
47e2(5): mov $0x1,%esi
47e7(1): pop %rbx
47e8(1): pop %rbp
47e9(2): pop %r12
47eb(2): pop %r13
47ed(2): pop %r14
47ef(2): pop %r15
47f1(2): xor %eax,%eax
47f3(5): jmp 0xffffce3d(%rip)
47f8(8): nop 0x0(%rax,%rax,1)
4800(4): mov 0x10(%rbx),%r13
4804(4): mov 0x8(%rbx),%r12
4808(7): lea 0x13d7(%rip),%rsi
480f(3): mov (%rbx),%rbx
4812(5): mov $0x5,%edx
4817(2): xor %edi,%edi
4819(5): call 0xffffcc37(%rip)
481e(4): add $0x28,%rsp
4822(3): mov %r13,%r9
4825(3): mov %r12,%r8
4828(3): mov %rbx,%rcx
482b(3): mov %rbp,%rdi
482e(3): mov %rax,%rdx
4831(1): pop %rbx
4832(1): pop %rbp
4833(2): pop %r12
4835(2): pop %r13
4837(2): pop %r14
4839(2): pop %r15
483b(5): mov $0x1,%esi
4840(2): xor %eax,%eax
4842(5): jmp 0xffffcdee(%rip)
4847(9): nop 0x0(%rax,%rax,1)
4850(7): lea 0x14c1(%rip),%rsi
4857(5): mov $0x5,%edx
485c(2): xor %edi,%edi
485e(4): mov 0x18(%rbx),%r14
4862(4): mov 0x10(%rbx),%r13
4866(4): mov 0x8(%rbx),%r12
486a(3): mov (%rbx),%rbx
486d(5): call 0xffffcbe3(%rip)
4872(4): sub $0x8,%rsp
4876(2): push %r14
4878(3): mov %rax,%rdx
487b(3): mov %r13,%r9
487e(3): mov %r12,%r8
4881(3): mov %rbx,%rcx
4884(3): mov %rbp,%rdi
4887(5): mov $0x1,%esi
488c(2): xor %eax,%eax
488e(5): call 0xffffcda2(%rip)
4893(1): pop %rax
4894(1): pop %rdx
4895(4): add $0x28,%rsp
4899(1): pop %rbx
489a(1): pop %rbp
489b(2): pop %r12
489d(2): pop %r13
489f(2): pop %r14
48a1(2): pop %r15
48a3(1): ret near (%rsp)
48a4(4): nop 0x0(%rax)
48a8(4): mov 0x20(%rbx),%r15
48ac(7): lea 0x1485(%rip),%rsi
48b3(5): mov $0x5,%edx
48b8(2): xor %edi,%edi
48ba(4): mov 0x18(%rbx),%r14
48be(4): mov 0x10(%rbx),%r13
48c2(4): mov 0x8(%rbx),%r12
48c6(3): mov (%rbx),%rbx
48c9(5): call 0xffffcb87(%rip)
48ce(2): push %r15
48d0(2): jmp 0xffffffa6(%rip)
48d2(6): nop 0x0(%rax,%rax,1)
48d8(4): mov 0x8(%rbx),%r8
48dc(4): mov 0x28(%rbx),%r12
48e0(7): lea 0x1479(%rip),%rsi
48e7(4): mov 0x20(%rbx),%r15
48eb(4): mov 0x18(%rbx),%r14
48ef(5): mov $0x5,%edx
48f4(4): mov 0x10(%rbx),%r13
48f8(2): xor %edi,%edi
48fa(3): mov (%rbx),%rbx
48fd(4): mov %r8,(%rsp)
4901(5): call 0xffffcb4f(%rip)
4906(4): sub $0x8,%rsp
490a(3): mov %r13,%r9
490d(2): push %r12
490f(2): push %r15
4911(2): push %r14
4913(5): mov 0x20(%rsp),%r8
4918(3): mov %rbx,%rcx
491b(3): mov %rax,%rdx
491e(3): mov %rbp,%rdi
4921(5): mov $0x1,%esi
4926(2): xor %eax,%eax
4928(5): call 0xffffcd08(%rip)
492d(4): add $0x20,%rsp
4931(4): add $0x28,%rsp
4935(1): pop %rbx
4936(1): pop %rbp
4937(2): pop %r12
4939(2): pop %r13
493b(2): pop %r14
493d(2): pop %r15
493f(1): ret near (%rsp)
4940(4): mov 0x10(%rbx),%r9
4944(4): mov 0x30(%rbx),%r13
4948(7): lea 0x1439(%rip),%rsi
494f(4): mov 0x28(%rbx),%r12
4953(4): mov 0x20(%rbx),%r15
4957(5): mov $0x5,%edx
495c(4): mov 0x18(%rbx),%r14
4960(4): mov 0x8(%rbx),%r8
4964(2): xor %edi,%edi
4966(5): mov %r9,0x8(%rsp)
496b(3): mov (%rbx),%rbx
496e(4): mov %r8,(%rsp)
4972(5): call 0xffffcade(%rip)
4977(2): push %r13
4979(2): push %r12
497b(2): push %r15
497d(2): push %r14
497f(5): mov 0x28(%rsp),%r9
4984(2): jmp 0xffffff8f(%rip)
4986(a): nop 0x0(%rax,%rax,1)
4990(4): mov 0x40(%rbx),%r10
4994(4): mov 0x38(%rbx),%r9
4998(5): mov $0x5,%edx
499d(4): mov 0x10(%rbx),%rax
49a1(4): mov 0x8(%rbx),%r8
49a5(7): lea 0x1474(%rip),%rsi
49ac(4): mov 0x30(%rbx),%r13
49b0(4): mov 0x28(%rbx),%r12
49b4(4): mov 0x20(%rbx),%r15
49b8(4): mov 0x18(%rbx),%r14
49bc(5): mov %r10,0x18(%rsp)
49c1(5): mov %r9,0x10(%rsp)
49c6(4): mov %rax,(%rsp)
49ca(5): mov %r8,0x8(%rsp)
49cf(3): mov (%rbx),%rbx
49d2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
49e0(3): xor %r9d,%r9d
49e3(4): cmp $0x0,(%r8)
49e7(2): jz 0x14(%rip)
49e9(7): nop 0x0(%rax)
49f0(4): add $0x1,%r9
49f4(5): cmp $0x0,0x0(%r8,%r9,8)
49f9(2): jnz 0xfffffff7(%rip)
49fb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4a00(4): sub $0x68,%rsp
4a04(3): mov %r8,%r10
4a07(3): xor %r9d,%r9d
4a0a(9): mov $0x28,%rax
4a13(5): mov %rax,0x58(%rsp)
4a18(2): xor %eax,%eax
4a1a(3): mov %rsp,%r8
4a1d(3): nop (%rax)
4a20(3): mov (%r10),%eax
4a23(3): cmp $0x2f,%eax
4a26(2): jnbe 0x44(%rip)
4a28(3): mov %eax,%r11d
4a2b(4): add 0x10(%r10),%r11
4a2f(3): add $0x8,%eax
4a32(3): mov %eax,(%r10)
4a35(3): mov (%r11),%rax
4a38(3): test %rax,%rax
4a3b(4): mov %rax,0x0(%r8,%r9,8)
4a3f(2): jz 0xc(%rip)
4a41(4): add $0x1,%r9
4a45(4): cmp $0xa,%r9
4a49(2): jnz 0xffffffd7(%rip)
4a4b(5): call 0xfffffb75(%rip)
4a50(5): mov 0x58(%rsp),%rax
4a55(9): xor $0x28,%rax
4a5e(2): jnz 0x7(%rip)
4a60(4): add $0x68,%rsp
4a64(1): ret near (%rsp)
4a65(5): call 0xffffca1b(%rip)
4a6a(4): mov 0x8(%r10),%r11
4a6e(4): lea 0x8(%r11),%rax
4a72(4): mov %rax,0x8(%r10)
4a76(2): jmp 0xffffffbf(%rip)

"version_etc" :
4a80(1): push %rbp
4a81(1): push %rbx
4a82(6): mov $0x20,%r10d
4a88(3): xor %r11d,%r11d
4a8b(7): sub $0xb8,%rsp
4a92(9): mov $0x28,%rax
4a9b(5): mov %rax,0x78(%rsp)
4aa0(2): xor %eax,%eax
4aa2(8): lea 0xd0(%rsp),%rax
4aaa(8): mov %r8,0xa0(%rsp)
4ab2(8): lea 0xd0(%rsp),%rbx
4aba(5): lea 0x20(%rsp),%r8
4abf(8): mov %r9,0xa8(%rsp)
4ac7(8): mov $0x20,0x8(%rsp)
4acf(5): mov %rax,0x10(%rsp)
4ad4(8): lea 0x80(%rsp),%rax
4adc(3): xor %r9d,%r9d
4adf(5): mov %rax,0x18(%rsp)
4ae4(3): mov %rax,%rbp
4ae7(9): nop 0x0(%rax,%rax,1)
4af0(4): cmp $0x2f,%r10d
4af4(2): jnbe 0x58(%rip)
4af6(3): mov %r10d,%eax
4af9(6): mov $0x1,%r11d
4aff(4): add $0x8,%r10d
4b03(3): add %rbp,%rax
4b06(3): mov (%rax),%rax
4b09(3): test %rax,%rax
4b0c(4): mov %rax,0x0(%r8,%r9,8)
4b10(2): jz 0xc(%rip)
4b12(4): add $0x1,%r9
4b16(4): cmp $0xa,%r9
4b1a(2): jnz 0xffffffd6(%rip)
4b1c(3): test %r11b,%r11b
4b1f(2): jnz 0x26(%rip)
4b21(5): call 0xfffffa9f(%rip)
4b26(5): mov 0x78(%rsp),%rax
4b2b(9): xor $0x28,%rax
4b34(2): jnz 0xc(%rip)
4b36(7): add $0xb8,%rsp
4b3d(1): pop %rbx
4b3e(1): pop %rbp
4b3f(1): ret near (%rsp)
4b40(5): call 0xffffc940(%rip)
4b45(5): mov %r10d,0x8(%rsp)
4b4a(2): jmp 0xffffffd7(%rip)
4b4c(3): mov %rbx,%rax
4b4f(4): add $0x8,%rbx
4b53(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4b60(1): push %rbx
4b61(7): lea 0x109a(%rip),%rsi
4b68(5): mov $0x5,%edx
4b6d(2): xor %edi,%edi
4b6f(5): call 0xffffc8e1(%rip)
4b74(7): lea 0x109c(%rip),%rdx
4b7b(3): mov %rax,%rsi
4b7e(5): mov $0x1,%edi
4b83(2): xor %eax,%eax
4b85(5): call 0xffffca3b(%rip)
4b8a(7): lea 0x109c(%rip),%rsi
4b91(5): mov $0x5,%edx
4b96(2): xor %edi,%edi
4b98(5): call 0xffffc8b8(%rip)
4b9d(7): lea 0xa0c(%rip),%rcx
4ba4(7): lea 0x6da(%rip),%rdx
4bab(3): mov %rax,%rsi
4bae(5): mov $0x1,%edi
4bb3(2): xor %eax,%eax
4bb5(5): call 0xffffca0b(%rip)
4bba(7): mov 0x2034e7(%rip),%rbx
4bc1(7): lea 0x1298(%rip),%rsi
4bc8(2): xor %edi,%edi
4bca(5): mov $0x5,%edx
4bcf(5): call 0xffffc881(%rip)
4bd4(3): mov %rbx,%rsi
4bd7(3): mov %rax,%rdi
4bda(1): pop %rbx
4bdb(5): jmp 0xffffc935(%rip)

"xmalloc" :
4be0(1): push %rbx
4be1(3): mov %rdi,%rbx
4be4(5): call 0xffffc96c(%rip)
4be9(3): test %rax,%rax
4bec(2): jnz 0x7(%rip)
4bee(3): test %rbx,%rbx
4bf1(2): jnz 0x4(%rip)
4bf3(1): pop %rbx
4bf4(1): ret near (%rsp)
4bf5(5): call 0x23b(%rip)

"xnmalloc" :
4c00(3): mov %rdi,%rax
4c03(3): mul %rax,%rsi,%rdx
4c06(3): mov %rax,%rdi
4c09(3): seto %al
4c0c(3): test %rdi,%rdi
4c0f(2): js 0xc(%rip)
4c11(3): movzx %al,%eax
4c14(3): test %rax,%rax
4c17(2): jnz 0x4(%rip)
4c19(2): jmp 0xffffffc7(%rip)
4c1b(4): sub $0x8,%rsp
4c1f(5): call 0x211(%rip)

"xrealloc" :
4c40(3): test %rsi,%rsi
4c43(1): push %rbx
4c44(3): mov %rsi,%rbx
4c47(2): jnz 0x7(%rip)
4c49(3): test %rdi,%rdi
4c4c(2): jnz 0x1c(%rip)
4c4e(3): mov %rbx,%rsi
4c51(5): call 0xffffc94f(%rip)
4c56(3): test %rax,%rax
4c59(2): jnz 0x7(%rip)
4c5b(3): test %rbx,%rbx
4c5e(2): jnz 0x13(%rip)
4c60(1): pop %rbx
4c61(1): ret near (%rsp)
4c62(6): nop 0x0(%rax,%rax,1)
4c68(5): call 0xffffc748(%rip)
4c6d(2): xor %eax,%eax
4c6f(1): pop %rbx
4c70(1): ret near (%rsp)
4c71(5): call 0x1bf(%rip)

"xnrealloc" :
4c80(3): mov %rsi,%rax
4c83(3): mul %rax,%rdx,%rdx
4c86(3): mov %rax,%rsi
4c89(3): seto %al
4c8c(3): test %rsi,%rsi
4c8f(2): js 0xc(%rip)
4c91(3): movzx %al,%eax
4c94(3): test %rax,%rax
4c97(2): jnz 0x4(%rip)
4c99(2): jmp 0xffffffa7(%rip)
4c9b(4): sub $0x8,%rsp
4c9f(5): call 0x191(%rip)

"x2nrealloc" :
4cb0(3): test %rdi,%rdi
4cb3(3): mov %rdx,%r9
4cb6(3): mov (%rsi),%rcx
4cb9(2): jz 0x37(%rip)
4cbb(2): xor %edx,%edx
4cbd(a): mov $0x6148914691236517204,%rax
4cc7(3): div %r9,%rax
4cca(3): cmp %rcx,%rax
4ccd(2): jbe 0x3e(%rip)
4ccf(3): mov %rcx,%rax
4cd2(3): shr $0x1,%rax
4cd5(5): lea 0x1(%rax,%rcx,1),%rcx
4cda(3): mov %rcx,(%rsi)
4cdd(4): imul %r9,%rcx
4ce1(3): mov %rcx,%rsi
4ce4(5): jmp 0xffffff5c(%rip)
4ce9(7): nop 0x0(%rax)
4cf0(3): test %rcx,%rcx
4cf3(2): jz 0x25(%rip)
4cf5(3): mov %rcx,%rax
4cf8(3): mul %rax,%r9,%rdx
4cfb(3): seto %dl
4cfe(3): test %rax,%rax
4d01(3): movzx %dl,%edx
4d04(2): js 0x7(%rip)
4d06(3): test %rdx,%rdx
4d09(2): jz 0xffffffd1(%rip)
4d0b(4): sub $0x8,%rsp
4d0f(5): call 0x121(%rip)
4d14(4): nop 0x0(%rax)
4d18(2): xor %edx,%edx
4d1a(5): mov $0x80,%eax
4d1f(3): xor %r8d,%r8d
4d22(3): div %r9,%rax
4d25(3): test %rax,%rax
4d28(4): setz %r8b
4d2c(4): lea 0x0(%r8,%rax,1),%rcx
4d30(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4d40(3): test %rdi,%rdi
4d43(3): mov (%rsi),%rax
4d46(2): jz 0x2a(%rip)
4d48(a): mov $0x6148914691236517203,%rdx
4d52(3): cmp %rdx,%rax
4d55(2): jnbe 0x2c(%rip)
4d57(3): mov %rax,%rdx
4d5a(3): shr $0x1,%rdx
4d5d(5): lea 0x1(%rdx,%rax,1),%rax
4d62(3): mov %rax,(%rsi)
4d65(3): mov %rax,%rsi
4d68(5): jmp 0xfffffed8(%rip)
4d6d(3): nop (%rax)
4d70(3): test %rax,%rax
4d73(5): mov $0x80,%edx
4d78(4): cmove %rdx,%rax
4d7c(3): test %rax,%rax
4d7f(2): jns 0xffffffe3(%rip)
4d81(4): sub $0x8,%rsp
4d85(5): call 0xab(%rip)

"xzalloc" :
4d90(1): push %rbx
4d91(3): mov %rdi,%rbx
4d94(5): call 0xfffffe4c(%rip)
4d99(3): mov %rbx,%rdx
4d9c(2): xor %esi,%esi
4d9e(3): mov %rax,%rdi
4da1(1): pop %rbx
4da2(5): jmp 0xffffc73e(%rip)

"xcalloc" :
4db0(3): mov %rdi,%rax
4db3(4): sub $0x8,%rsp
4db7(3): mul %rax,%rsi,%rdx
4dba(3): seto %dl
4dbd(3): test %rax,%rax
4dc0(2): js 0x19(%rip)
4dc2(3): movzx %dl,%edx
4dc5(3): test %rdx,%rdx
4dc8(2): jnz 0x11(%rip)
4dca(5): call 0xffffc756(%rip)
4dcf(3): test %rax,%rax
4dd2(2): jz 0x7(%rip)
4dd4(4): add $0x8,%rsp
4dd8(1): ret near (%rsp)
4dd9(5): call 0x57(%rip)

"xmemdup" :
4de0(1): push %rbp
4de1(1): push %rbx
4de2(3): mov %rdi,%rbp
4de5(3): mov %rsi,%rdi
4de8(3): mov %rsi,%rbx
4deb(4): sub $0x8,%rsp
4def(5): call 0xfffffdf1(%rip)
4df4(4): add $0x8,%rsp
4df8(3): mov %rbx,%rdx
4dfb(3): mov %rbp,%rsi
4dfe(1): pop %rbx
4dff(1): pop %rbp
4e00(3): mov %rax,%rdi
4e03(5): jmp 0xffffc72d(%rip)

"xstrdup" :
4e10(1): push %rbx
4e11(3): mov %rdi,%rbx
4e14(5): call 0xffffc65c(%rip)
4e19(3): mov %rbx,%rdi
4e1c(4): lea 0x1(%rax),%rsi
4e20(1): pop %rbx
4e21(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4e30(7): lea 0x10d8(%rip),%rsi
4e37(4): sub $0x8,%rsp
4e3b(5): mov $0x5,%edx
4e40(2): xor %edi,%edi
4e42(5): call 0xffffc60e(%rip)
4e47(6): mov 0x2031d3(%rip),%edi
4e4d(7): lea 0x841(%rip),%rdx
4e54(3): mov %rax,%rcx
4e57(2): xor %esi,%esi
4e59(2): xor %eax,%eax
4e5b(5): call 0xffffc775(%rip)
4e60(5): call 0xffffc560(%rip)

"rpl_fclose" :
4e70(2): push %r12
4e72(1): push %rbp
4e73(1): push %rbx
4e74(3): mov %rdi,%rbx
4e77(5): call 0xffffc6c9(%rip)
4e7c(2): test %eax,%eax
4e7e(3): mov %rbx,%rdi
4e81(2): js 0x56(%rip)
4e83(5): call 0xffffc6fd(%rip)
4e88(2): test %eax,%eax
4e8a(2): jnz 0x2e(%rip)
4e8c(3): mov %rbx,%rdi
4e8f(5): call 0x61(%rip)
4e94(2): test %eax,%eax
4e96(2): jz 0x3e(%rip)
4e98(5): call 0xffffc538(%rip)
4e9d(3): mov (%rax),%r12d
4ea0(3): mov %rbx,%rdi
4ea3(3): mov %rax,%rbp
4ea6(5): call 0xffffc58a(%rip)
4eab(3): test %r12d,%r12d
4eae(2): jnz 0x32(%rip)
4eb0(1): pop %rbx
4eb1(1): pop %rbp
4eb2(2): pop %r12
4eb4(1): ret near (%rsp)
4eb5(3): nop (%rax)
4eb8(3): mov %rbx,%rdi
4ebb(5): call 0xffffc685(%rip)
4ec0(2): xor %esi,%esi
4ec2(5): mov $0x1,%edx
4ec7(2): mov %eax,%edi
4ec9(5): call 0xffffc607(%rip)
4ece(4): cmp $0xffffffff,%rax
4ed2(2): jnz 0xffffffba(%rip)
4ed4(3): mov %rbx,%rdi
4ed7(1): pop %rbx
4ed8(1): pop %rbp
4ed9(2): pop %r12
4edb(5): jmp 0xffffc555(%rip)
4ee0(4): mov %r12d,0x0(%rbp)
4ee4(5): mov $0xffffffff,%eax
4ee9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4ef0(3): test %rdi,%rdi
4ef3(1): push %rbx
4ef4(3): mov %rdi,%rbx
4ef7(2): jz 0x13(%rip)
4ef9(5): call 0xffffc687(%rip)
4efe(2): test %eax,%eax
4f00(2): jz 0xa(%rip)
4f02(6): test $0x100,(%rbx)
4f08(2): jnz 0x10(%rip)
4f0a(3): mov %rbx,%rdi
4f0d(1): pop %rbx
4f0e(5): jmp 0xffffc652(%rip)
4f13(5): nop 0x0(%rax,%rax,1)
4f18(3): mov %rbx,%rdi
4f1b(5): mov $0x1,%edx
4f20(2): xor %esi,%esi
4f22(5): call 0xe(%rip)
4f27(3): mov %rbx,%rdi
4f2a(1): pop %rbx
4f2b(5): jmp 0xffffc635(%rip)

"rpl_fseeko" :
4f30(4): mov 0x8(%rdi),%rax
4f34(4): cmp %rax,0x10(%rdi)
4f38(2): jz 0x8(%rip)
4f3a(5): jmp 0xffffc6a6(%rip)
4f3f(1): nop 
4f40(4): mov 0x20(%rdi),%rax
4f44(4): cmp %rax,0x28(%rdi)
4f48(2): jnz 0xfffffff2(%rip)
4f4a(5): cmp $0x0,0x48(%rdi)
4f4f(2): jnz 0xffffffeb(%rip)
4f51(2): push %r12
4f53(1): push %rbp
4f54(3): mov %edx,%r12d
4f57(1): push %rbx
4f58(3): mov %rsi,%rbp
4f5b(3): mov %rdi,%rbx
4f5e(5): call 0xffffc5e2(%rip)
4f63(3): mov %r12d,%edx
4f66(3): mov %rbp,%rsi
4f69(2): mov %eax,%edi
4f6b(5): call 0xffffc565(%rip)
4f70(4): cmp $0xffffffff,%rax
4f74(2): jz 0xe(%rip)
4f76(3): and $0xef,(%rbx)
4f79(7): mov %rax,0x90(%rbx)
4f80(2): xor %eax,%eax
4f82(1): pop %rbx
4f83(1): pop %rbp
4f84(2): pop %r12
4f86(1): ret near (%rsp)

"rpl_mbrtowc" :
4f90(2): push %r13
4f92(2): push %r12
4f94(3): mov %rsi,%r13
4f97(1): push %rbp
4f98(1): push %rbx
4f99(3): mov %rdi,%rbx
4f9c(3): mov %rdx,%r12
4f9f(4): sub $0x18,%rsp
4fa3(9): mov $0x28,%rax
4fac(5): mov %rax,0x8(%rsp)
4fb1(2): xor %eax,%eax
4fb3(5): lea 0x4(%rsp),%rax
4fb8(3): test %rdi,%rdi
4fbb(4): cmove %rax,%rbx
4fbf(3): mov %rbx,%rdi
4fc2(5): call 0xffffc4de(%rip)
4fc7(4): cmp $0xfffffffd,%rax
4fcb(3): mov %rax,%rbp
4fce(2): jbe 0x22(%rip)
4fd0(3): test %r12,%r12
4fd3(2): jz 0x1d(%rip)
4fd5(2): xor %edi,%edi
4fd7(5): call 0xc9(%rip)
4fdc(2): test %al,%al
4fde(2): jnz 0x12(%rip)
4fe0(5): movzx 0x0(%r13),%eax
4fe5(5): mov $0x1,%ebp
4fea(2): mov %eax,(%rbx)
4fec(4): nop 0x0(%rax)
4ff0(5): mov 0x8(%rsp),%rdx
4ff5(9): xor $0x28,%rdx
4ffe(3): mov %rbp,%rax
5001(2): jnz 0xd(%rip)
5003(4): add $0x18,%rsp
5007(1): pop %rbx
5008(1): pop %rbp
5009(2): pop %r12
500b(2): pop %r13
500d(1): ret near (%rsp)
500e(5): call 0xffffc472(%rip)

"close_stream" :
5020(2): push %r12
5022(1): push %rbp
5023(3): mov %rdi,%rbp
5026(1): push %rbx
5027(5): call 0xffffc3d9(%rip)
502c(3): mov 0x0(%rbp),%ebx
502f(3): mov %rbp,%rdi
5032(3): mov %rax,%r12
5035(5): call 0xfffffe3b(%rip)
503a(3): and $0x20,%ebx
503d(2): test %ebx,%ebx
503f(2): jnz 0x19(%rip)
5041(2): test %eax,%eax
5043(2): jz 0xc(%rip)
5045(3): test %r12,%r12
5048(5): mov $0xffffffff,%eax
504d(2): jz 0x3b(%rip)
504f(1): pop %rbx
5050(1): pop %rbp
5051(2): pop %r12
5053(1): ret near (%rsp)
5054(4): nop 0x0(%rax)
5058(2): test %eax,%eax
505a(2): jnz 0x1e(%rip)
505c(5): call 0xffffc374(%rip)
5061(6): mov $0x0,(%rax)
5067(5): mov $0xffffffff,%eax
506c(1): pop %rbx
506d(1): pop %rbp
506e(2): pop %r12
5070(1): ret near (%rsp)
5071(7): nop 0x0(%rax)
5078(1): pop %rbx
5079(5): mov $0xffffffff,%eax
507e(1): pop %rbp
507f(2): pop %r12
5081(1): ret near (%rsp)
5082(6): nop 0x0(%rax,%rax,1)
5088(5): call 0xffffc348(%rip)
508d(3): cmp $0x9,(%rax)
5090(1): pop %rbx
5091(1): pop %rbp
5092(2): pop %r12
5094(3): setnz %al
5097(3): movzx %al,%eax
509a(2): neg %eax
509c(1): ret near (%rsp)

"hard_locale" :
50a0(4): sub $0x8,%rsp
50a4(2): xor %esi,%esi
50a6(5): call 0xffffc50a(%rip)
50ab(3): mov %rax,%rdx
50ae(5): mov $0x1,%eax
50b3(3): test %rdx,%rdx
50b6(2): jz 0x1f(%rip)
50b8(7): lea 0xe61(%rip),%rdi
50bf(5): mov $0x2,%ecx
50c4(3): mov %rdx,%rsi
50c7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
50c9(3): setnbe %cl
50cc(3): sbb $0x0,%cl
50cf(2): xor %eax,%eax
50d1(2): test %cl,%cl
50d3(2): jnz 0xd(%rip)
50d5(4): add $0x8,%rsp
50d9(1): ret near (%rsp)
50da(6): nop 0x0(%rax,%rax,1)
50e0(7): lea 0xe3b(%rip),%rdi
50e7(5): mov $0x6,%ecx
50ec(3): mov %rdx,%rsi
50ef(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
50f1(3): setnbe %al
50f4(2): sbb $0x0,%al
50f6(2): test %al,%al
50f8(3): setnz %al
50fb(4): add $0x8,%rsp
50ff(1): ret near (%rsp)

"locale_charset" :
5100(4): sub $0x8,%rsp
5104(5): mov $0xe,%edi
5109(5): call 0xffffc467(%rip)
510e(3): test %rax,%rax
5111(2): jz 0x1f(%rip)
5113(3): cmp $0x0,(%rax)
5116(7): lea 0xe0b(%rip),%rdx
511d(4): cmove %rdx,%rax
5121(4): add $0x8,%rsp
5125(1): ret near (%rsp)
5126(a): nop 0x0(%rax,%rax,1)
5130(7): lea 0xdf1(%rip),%rax
5137(4): add $0x8,%rsp
513b(1): ret near (%rsp)

"__libc_csu_init" :
5140(2): push %r15
5142(2): push %r14
5144(3): mov %rdx,%r15
5147(2): push %r13
5149(2): push %r12
514b(7): lea 0x2029de(%rip),%r12
5152(1): push %rbp
5153(7): lea 0x2029de(%rip),%rbp
515a(1): push %rbx
515b(3): mov %edi,%r13d
515e(3): mov %rsi,%r14
5161(3): sub %r12,%rbp
5164(4): sub $0x8,%rsp
5168(4): sar $0x3,%rbp
516c(5): call 0xffffc20c(%rip)
5171(3): test %rbp,%rbp
5174(2): jz 0x22(%rip)
5176(2): xor %ebx,%ebx
5178(8): nop 0x0(%rax,%rax,1)
5180(3): mov %r15,%rdx
5183(3): mov %r14,%rsi
5186(3): mov %r13d,%edi
5189(4): call 0x0(%r12,%rbx,8)
518d(4): add $0x1,%rbx
5191(3): cmp %rbx,%rbp
5194(2): jnz 0xffffffec(%rip)
5196(4): add $0x8,%rsp
519a(1): pop %rbx
519b(1): pop %rbp
519c(2): pop %r12
519e(2): pop %r13
51a0(2): pop %r14
51a2(2): pop %r15
51a4(1): ret near (%rsp)

"atexit" :
51c0(7): mov 0x202e41(%rip),%rdx
51c7(2): xor %esi,%esi
51c9(5): jmp 0xffffc437(%rip)

"_fini" :
51d0(4): sub $0x8,%rsp
51d4(4): add $0x8,%rsp
51d8(1): ret near (%rsp)

