
"free@plt" :
12e0(6): jmp 0x206b9a(%rip)
12e6(5): push $0x0

"abort@plt" :
12f0(6): jmp 0x206b92(%rip)
12f6(5): push $0x1

"__errno_location@plt" :
1300(6): jmp 0x206b8a(%rip)
1306(5): push $0x2

"strncmp@plt" :
1310(6): jmp 0x206b82(%rip)
1316(5): push $0x3

"_exit@plt" :
1320(6): jmp 0x206b7a(%rip)
1326(5): push $0x4

"__fpending@plt" :
1330(6): jmp 0x206b72(%rip)
1336(5): push $0x5

"fread_unlocked@plt" :
1340(6): jmp 0x206b6a(%rip)
1346(5): push $0x6

"textdomain@plt" :
1350(6): jmp 0x206b62(%rip)
1356(5): push $0x7

"fclose@plt" :
1360(6): jmp 0x206b5a(%rip)
1366(5): push $0x8

"bindtextdomain@plt" :
1370(6): jmp 0x206b52(%rip)
1376(5): push $0x9

"dcgettext@plt" :
1380(6): jmp 0x206b4a(%rip)
1386(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1390(6): jmp 0x206b42(%rip)
1396(5): push $0xb

"strlen@plt" :
13a0(6): jmp 0x206b3a(%rip)
13a6(5): push $0xc

"__stack_chk_fail@plt" :
13b0(6): jmp 0x206b32(%rip)
13b6(5): push $0xd

"getopt_long@plt" :
13c0(6): jmp 0x206b2a(%rip)
13c6(5): push $0xe

"mbrtowc@plt" :
13d0(6): jmp 0x206b22(%rip)
13d6(5): push $0xf

"strrchr@plt" :
13e0(6): jmp 0x206b1a(%rip)
13e6(5): push $0x10

"lseek@plt" :
13f0(6): jmp 0x206b12(%rip)
13f6(5): push $0x11

"memset@plt" :
1400(6): jmp 0x206b0a(%rip)
1406(5): push $0x12

"posix_fadvise@plt" :
1410(6): jmp 0x206b02(%rip)
1416(5): push $0x13

"memcmp@plt" :
1420(6): jmp 0x206afa(%rip)
1426(5): push $0x14

"fputs_unlocked@plt" :
1430(6): jmp 0x206af2(%rip)
1436(5): push $0x15

"calloc@plt" :
1440(6): jmp 0x206aea(%rip)
1446(5): push $0x16

"memcpy@plt" :
1450(6): jmp 0x206ae2(%rip)
1456(5): push $0x17

"fileno@plt" :
1460(6): jmp 0x206ada(%rip)
1466(5): push $0x18

"malloc@plt" :
1470(6): jmp 0x206ad2(%rip)
1476(5): push $0x19

"fflush@plt" :
1480(6): jmp 0x206aca(%rip)
1486(5): push $0x1a

"nl_langinfo@plt" :
1490(6): jmp 0x206ac2(%rip)
1496(5): push $0x1b

"__freading@plt" :
14a0(6): jmp 0x206aba(%rip)
14a6(5): push $0x1c

"realloc@plt" :
14b0(6): jmp 0x206ab2(%rip)
14b6(5): push $0x1d

"setlocale@plt" :
14c0(6): jmp 0x206aaa(%rip)
14c6(5): push $0x1e

"__printf_chk@plt" :
14d0(6): jmp 0x206aa2(%rip)
14d6(5): push $0x1f

"setvbuf@plt" :
14e0(6): jmp 0x206a9a(%rip)
14e6(5): push $0x20

"error@plt" :
14f0(6): jmp 0x206a92(%rip)
14f6(5): push $0x21

"fseeko@plt" :
1500(6): jmp 0x206a8a(%rip)
1506(5): push $0x22

"fopen@plt" :
1510(6): jmp 0x206a82(%rip)
1516(5): push $0x23

"__cxa_atexit@plt" :
1520(6): jmp 0x206a7a(%rip)
1526(5): push $0x24

"exit@plt" :
1530(6): jmp 0x206a72(%rip)
1536(5): push $0x25

"fwrite@plt" :
1540(6): jmp 0x206a6a(%rip)
1546(5): push $0x26

"__fprintf_chk@plt" :
1550(6): jmp 0x206a62(%rip)
1556(5): push $0x27

"mbsinit@plt" :
1560(6): jmp 0x206a5a(%rip)
1566(5): push $0x28

"iswprint@plt" :
1570(6): jmp 0x206a52(%rip)
1576(5): push $0x29

"__ctype_b_loc@plt" :
1580(6): jmp 0x206a4a(%rip)
1586(5): push $0x2a

".plt.got" :
1590(6): jmp 0x206a62(%rip)
1596(2): nop 

"_init" :
12b0(4): sub $0x8,%rsp
12b4(7): mov 0x206d2d(%rip),%rax
12bb(3): test %rax,%rax
12be(2): jz 0x4(%rip)
12c0(2): call %rax
12c2(4): add $0x8,%rsp
12c6(1): ret near (%rsp)

"main" :
15a0(2): push %r12
15a2(3): mov %edi,%r12d
15a5(1): push %rbp
15a6(1): push %rbx
15a7(3): mov (%rsi),%rdi
15aa(3): mov %rsi,%rbp
15ad(5): call 0xc83(%rip)
15b2(7): lea 0x4601(%rip),%rsi
15b9(5): mov $0x6,%edi
15be(5): call 0xffffff02(%rip)
15c3(7): lea 0x3698(%rip),%rsi
15ca(7): lea 0x3668(%rip),%rdi
15d1(5): call 0xfffffd9f(%rip)
15d6(7): lea 0x365c(%rip),%rdi
15dd(5): call 0xfffffd73(%rip)
15e2(7): lea 0x887(%rip),%rdi
15e9(5): call 0x3577(%rip)
15ee(7): mov 0x206a93(%rip),%rdi
15f5(2): xor %ecx,%ecx
15f7(2): xor %esi,%esi
15f9(5): mov $0x1,%edx
15fe(5): call 0xfffffee2(%rip)
1603(7): lea 0x3670(%rip),%rax
160a(4): sub $0x8,%rsp
160e(7): mov 0x2069fb(%rip),%r8
1615(2): push $0x0
1617(7): lea 0x361b(%rip),%rcx
161e(7): lea 0x3594(%rip),%rdx
1625(1): push %rax
1626(7): lea 0x4d3(%rip),%rax
162d(6): mov $0x1,%r9d
1633(3): mov %rbp,%rsi
1636(3): mov %r12d,%edi
1639(1): push %rax
163a(2): xor %eax,%eax
163c(5): call 0xab4(%rip)
1641(6): mov 0x206a51(%rip),%eax
1647(4): add $0x20,%rsp
164b(7): mov $0x0,0x206a97(%rip)
1652(3): cmp %r12d,%eax
1655(6): jz 0x83(%rip)
165b(6): jnl 0x8f(%rip)
1661(3): movsxd %eax,%rdx
1664(2): not %eax
1666(3): add %r12d,%eax
1669(5): lea 0x0(%rbp,%rdx,8),%rbx
166e(3): add %rdx,%rax
1671(5): lea 0x8(%rbp,%rax,8),%r12
1676(5): mov $0x1,%ebp
167b(5): nop 0x0(%rax,%rax,1)
1680(3): mov (%rbx),%rdi
1683(5): mov $0x1,%esi
1688(4): add $0x8,%rbx
168c(5): call 0x184(%rip)
1691(2): and %eax,%ebp
1693(3): cmp %r12,%rbx
1696(2): jnz 0xffffffea(%rip)
1698(7): cmp $0x0,0x206a4a(%rip)
169f(2): jnz 0xe(%rip)
16a1(3): xor $0x1,%ebp
16a4(4): movzx %bpl,%eax
16a8(1): pop %rbx
16a9(1): pop %rbp
16aa(2): pop %r12
16ac(1): ret near (%rsp)
16ad(7): mov 0x2069dc(%rip),%rdi
16b4(5): call 0x315c(%rip)
16b9(3): add $0x1,%eax
16bc(2): jnz 0xffffffe5(%rip)
16be(5): call 0xfffffc42(%rip)
16c3(2): mov (%rax),%esi
16c5(7): lea 0x3fb6(%rip),%rdx
16cc(5): mov $0x1,%edi
16d1(2): xor %eax,%eax
16d3(5): call 0xfffffe1d(%rip)
16d8(7): lea 0x3fa3(%rip),%rdi
16df(2): xor %esi,%esi
16e1(5): call 0x12f(%rip)
16e6(2): mov %eax,%ebp
16e8(2): jmp 0xffffffb0(%rip)
16ea(5): mov $0x1,%ebp
16ef(2): jmp 0xffffffb2(%rip)

"_start" :
1700(2): xor %ebp,%ebp
1702(3): mov %rdx,%r9
1705(1): pop %rsi
1706(3): mov %rsp,%rdx
1709(4): and $0xfffffff0,%rsp
170d(1): push %rax
170e(1): push %rsp
170f(7): lea 0x343a(%rip),%r8
1716(7): lea 0x33c3(%rip),%rcx
171d(7): lea 0xfffffe7c(%rip),%rdi
1724(6): call 0x2068b6(%rip)
172a(1): hlt 

"deregister_tm_clones" :
1730(7): lea 0x206949(%rip),%rdi
1737(1): push %rbp
1738(7): lea 0x206941(%rip),%rax
173f(3): cmp %rdi,%rax
1742(3): mov %rsp,%rbp
1745(2): jz 0x1b(%rip)
1747(7): mov 0x20688a(%rip),%rax
174e(3): test %rax,%rax
1751(2): jz 0xf(%rip)
1753(1): pop %rbp
1754(2): jmp %rax
1756(a): nop 0x0(%rax,%rax,1)
1760(1): pop %rbp
1761(1): ret near (%rsp)

"register_tm_clones" :
1770(7): lea 0x206909(%rip),%rdi
1777(7): lea 0x206902(%rip),%rsi
177e(1): push %rbp
177f(3): sub %rdi,%rsi
1782(3): mov %rsp,%rbp
1785(4): sar $0x3,%rsi
1789(3): mov %rsi,%rax
178c(4): shr $0x3f,%rax
1790(3): add %rax,%rsi
1793(3): sar $0x1,%rsi
1796(2): jz 0x1a(%rip)
1798(7): mov 0x206851(%rip),%rax
179f(3): test %rax,%rax
17a2(2): jz 0xe(%rip)
17a4(1): pop %rbp
17a5(2): jmp %rax
17a7(9): nop 0x0(%rax,%rax,1)
17b0(1): pop %rbp
17b1(1): ret near (%rsp)

"__do_global_dtors_aux" :
17c0(7): cmp $0x0,0x206921(%rip)
17c7(2): jnz 0x31(%rip)
17c9(8): cmp $0x0,0x206827(%rip)
17d1(1): push %rbp
17d2(3): mov %rsp,%rbp
17d5(2): jz 0xe(%rip)
17d7(7): mov 0x20682a(%rip),%rdi
17de(5): call 0xfffffdb2(%rip)
17e3(5): call 0xffffff4d(%rip)
17e8(7): mov $0x1,0x2068f9(%rip)
17ef(1): pop %rbp
17f0(1): ret near (%rsp)
17f1(7): nop 0x0(%rax)
17f8(2): REP ret near (%rsp)

"frame_dummy" :
1800(1): push %rbp
1801(3): mov %rsp,%rbp
1804(1): pop %rbp
1805(5): jmp 0xffffff6b(%rip)

"cksum" :
1810(2): push %r15
1812(2): push %r14
1814(5): mov $0x2,%ecx
1819(2): push %r13
181b(2): push %r12
181d(3): mov %rdi,%r12
1820(1): push %rbp
1821(1): push %rbx
1822(7): sub $0x10048,%rsp
1829(4): mov %esi,0xc(%rsp)
182d(3): mov %rdi,%rsi
1830(7): lea 0x3e4b(%rip),%rdi
1837(9): mov $0x28,%rax
1840(8): mov %rax,0x10038(%rsp)
1848(2): xor %eax,%eax
184a(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
184c(3): setnbe %al
184f(2): sbb $0x0,%al
1851(2): test %al,%al
1853(6): jnz 0x219(%rip)
1859(7): mov 0x206830(%rip),%rbp
1860(7): mov $0x1,0x206882(%rip)
1867(5): lea 0x30(%rsp),%r13
186c(7): lea 0x35ad(%rip),%r14
1873(5): mov $0x2,%esi
1878(3): mov %rbp,%rdi
187b(3): xor %r15d,%r15d
187e(2): xor %ebx,%ebx
1880(5): call 0x6b0(%rip)
1885(3): nop (%rax)
1888(3): mov %rbp,%rcx
188b(5): mov $0x10000,%edx
1890(5): mov $0x1,%esi
1895(3): mov %r13,%rdi
1898(5): call 0xfffffaa8(%rip)
189d(3): test %rax,%rax
18a0(6): jz 0x168(%rip)
18a6(3): add %rax,%r15
18a9(6): jb 0x1e3(%rip)
18af(3): add %r13,%rax
18b2(3): mov %r13,%rdx
18b5(3): nop (%rax)
18b8(4): add $0x1,%rdx
18bc(3): mov %rbx,%rcx
18bf(4): shr $0x18,%rbx
18c3(3): xor 0xffffffff(%rdx),%bl
18c6(4): shl/sal $0x8,%rcx
18ca(3): movzx %bl,%ebx
18cd(4): xor 0x0(%r14,%rbx,8),%rcx
18d1(3): cmp %rax,%rdx
18d4(3): mov %rcx,%rbx
18d7(2): jnz 0xffffffe1(%rip)
18d9(3): mov 0x0(%rbp),%eax
18dc(2): test $0x10,%al
18de(2): jz 0xffffffaa(%rip)
18e0(2): test $0x20,%al
18e2(6): jnz 0x131(%rip)
18e8(7): lea 0x3d93(%rip),%rdi
18ef(5): mov $0x2,%ecx
18f4(3): mov %r12,%rsi
18f7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
18f9(3): setnbe %al
18fc(2): sbb $0x0,%al
18fe(2): test %al,%al
1900(6): jnz 0xa7(%rip)
1906(5): lea 0x10(%rsp),%rsi
190b(3): mov %r15,%rdi
190e(5): call 0x652(%rip)
1913(3): test %r15,%r15
1916(2): jz 0x2b(%rip)
1918(7): lea 0x3501(%rip),%rdi
191f(1): nop 
1920(3): mov %rbx,%rsi
1923(4): shr $0x18,%rbx
1927(3): xor %r15,%rbx
192a(4): shl/sal $0x8,%rsi
192e(4): shr $0x8,%r15
1932(3): movzx %bl,%edx
1935(4): xor 0x0(%rdi,%rdx,8),%rsi
1939(3): test %r15,%r15
193c(3): mov %rsi,%rbx
193f(2): jnz 0xffffffe1(%rip)
1941(5): cmp $0x0,0xc(%rsp)
1946(3): not %rbx
1949(6): jnz 0x9f(%rip)
194f(7): lea 0x324a(%rip),%rsi
1956(3): mov %rax,%rcx
1959(2): mov %ebx,%edx
195b(5): mov $0x1,%edi
1960(2): xor %eax,%eax
1962(5): call 0xfffffb6e(%rip)
1967(7): mov 0x20671a(%rip),%rax
196e(3): test $0x20,(%rax)
1971(6): jnz 0x154(%rip)
1977(5): mov $0x1,%ebx
197c(8): mov 0x10038(%rsp),%rdi
1984(9): xor $0x28,%rdi
198d(2): mov %ebx,%eax
198f(6): jnz 0x169(%rip)
1995(7): add $0x10048,%rsp
199c(1): pop %rbx
199d(1): pop %rbp
199e(2): pop %r12
19a0(2): pop %r13
19a2(2): pop %r14
19a4(2): pop %r15
19a6(1): ret near (%rsp)
19a7(3): mov %rbp,%rdi
19aa(5): call 0x2e66(%rip)
19af(3): cmp $0xff,%eax
19b2(6): jnz 0xffffff54(%rip)
19b8(3): mov %r12,%rdx
19bb(5): mov $0x3,%esi
19c0(2): xor %edi,%edi
19c2(5): call 0x23ae(%rip)
19c7(3): mov %rax,%rbx
19ca(5): call 0xfffff936(%rip)
19cf(2): mov (%rax),%esi
19d1(7): lea 0x31de(%rip),%rdx
19d8(3): mov %rbx,%rcx
19db(2): xor %edi,%edi
19dd(2): xor %eax,%eax
19df(2): xor %ebx,%ebx
19e1(5): call 0xfffffb0f(%rip)
19e6(2): jmp 0xffffff96(%rip)
19e8(7): lea 0x31a7(%rip),%rsi
19ef(3): mov %rax,%rcx
19f2(3): mov %r12,%r8
19f5(2): mov %ebx,%edx
19f7(5): mov $0x1,%edi
19fc(2): xor %eax,%eax
19fe(5): call 0xfffffad2(%rip)
1a03(5): jmp 0xffffff64(%rip)
1a08(3): mov 0x0(%rbp),%eax
1a0b(2): test $0x20,%al
1a0d(6): jz 0xfffffedb(%rip)
1a13(2): xor %edi,%edi
1a15(3): mov %r12,%rdx
1a18(5): mov $0x3,%esi
1a1d(5): call 0x2353(%rip)
1a22(3): mov %rax,%rbx
1a25(5): call 0xfffff8db(%rip)
1a2a(2): mov (%rax),%esi
1a2c(7): lea 0x3183(%rip),%rdx
1a33(3): mov %rbx,%rcx
1a36(2): xor %edi,%edi
1a38(2): xor %eax,%eax
1a3a(5): call 0xfffffab6(%rip)
1a3f(7): lea 0x3c3c(%rip),%rdi
1a46(5): mov $0x2,%ecx
1a4b(3): mov %r12,%rsi
1a4e(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1a50(3): setnbe %al
1a53(2): sbb $0x0,%al
1a55(2): xor %ebx,%ebx
1a57(2): test %al,%al
1a59(6): jz 0xffffff23(%rip)
1a5f(3): mov %rbp,%rdi
1a62(5): call 0x2dae(%rip)
1a67(5): jmp 0xffffff15(%rip)
1a6c(7): lea 0x313e(%rip),%rsi
1a73(3): mov %r12,%rdi
1a76(5): call 0xfffffa9a(%rip)
1a7b(3): test %rax,%rax
1a7e(3): mov %rax,%rbp
1a81(6): jnz 0xfffffde6(%rip)
1a87(5): jmp 0xffffff31(%rip)
1a8c(3): mov %r12,%rdx
1a8f(5): mov $0x3,%esi
1a94(2): xor %edi,%edi
1a96(5): call 0x22da(%rip)
1a9b(7): lea 0x30e2(%rip),%rsi
1aa2(3): mov %rax,%rbx
1aa5(5): mov $0x5,%edx
1aaa(2): xor %edi,%edi
1aac(5): call 0xfffff8d4(%rip)
1ab1(3): mov %rbx,%rcx
1ab4(3): mov %rax,%rdx
1ab7(2): xor %esi,%esi
1ab9(5): mov $0x1,%edi
1abe(2): xor %eax,%eax
1ac0(5): call 0xfffffa30(%rip)
1ac5(7): lea 0x30db(%rip),%rsi
1acc(5): mov $0x5,%edx
1ad1(2): xor %edi,%edi
1ad3(5): call 0xfffff8ad(%rip)
1ad8(3): mov %rax,%rbx
1adb(5): call 0xfffff825(%rip)
1ae0(2): mov (%rax),%esi
1ae2(7): lea 0x30ca(%rip),%rdx
1ae9(3): mov %rbx,%rcx
1aec(5): mov $0x1,%edi
1af1(2): xor %eax,%eax
1af3(5): call 0xfffff9fd(%rip)
1af8(5): call 0xfffff8b8(%rip)

"usage" :
1b00(2): push %r13
1b02(2): push %r12
1b04(5): mov $0x5,%edx
1b09(1): push %rbp
1b0a(1): push %rbx
1b0b(2): mov %edi,%ebp
1b0d(7): sub $0x88,%rsp
1b14(7): mov 0x2065e5(%rip),%rbx
1b1b(9): mov $0x28,%rax
1b24(5): mov %rax,0x78(%rsp)
1b29(2): xor %eax,%eax
1b2b(2): test %edi,%edi
1b2d(2): jz 0x30(%rip)
1b2f(7): lea 0x3152(%rip),%rsi
1b36(2): xor %edi,%edi
1b38(5): call 0xfffff848(%rip)
1b3d(7): mov 0x20659c(%rip),%rdi
1b44(3): mov %rax,%rdx
1b47(3): mov %rbx,%rcx
1b4a(5): mov $0x1,%esi
1b4f(2): xor %eax,%eax
1b51(5): call 0xfffff9ff(%rip)
1b56(2): mov %ebp,%edi
1b58(5): call 0xfffff9d8(%rip)
1b5d(7): lea 0x314c(%rip),%rsi
1b64(2): xor %edi,%edi
1b66(5): call 0xfffff81a(%rip)
1b6b(3): mov %rbx,%rcx
1b6e(3): mov %rbx,%rdx
1b71(3): mov %rax,%rsi
1b74(5): mov $0x1,%edi
1b79(2): xor %eax,%eax
1b7b(5): call 0xfffff955(%rip)
1b80(7): mov 0x206501(%rip),%rbx
1b87(7): lea 0x314a(%rip),%rsi
1b8e(5): mov $0x5,%edx
1b93(2): xor %edi,%edi
1b95(5): call 0xfffff7eb(%rip)
1b9a(3): mov %rbx,%rsi
1b9d(3): mov %rax,%rdi
1ba0(5): call 0xfffff890(%rip)
1ba5(7): mov 0x2064dc(%rip),%rbx
1bac(7): lea 0x315d(%rip),%rsi
1bb3(5): mov $0x5,%edx
1bb8(2): xor %edi,%edi
1bba(5): call 0xfffff7c6(%rip)
1bbf(3): mov %rbx,%rsi
1bc2(3): mov %rax,%rdi
1bc5(5): call 0xfffff86b(%rip)
1bca(7): mov 0x2064b7(%rip),%rbx
1bd1(7): lea 0x3168(%rip),%rsi
1bd8(5): mov $0x5,%edx
1bdd(2): xor %edi,%edi
1bdf(5): call 0xfffff7a1(%rip)
1be4(3): mov %rbx,%rsi
1be7(3): mov %rax,%rdi
1bea(7): lea 0x2fc8(%rip),%rbx
1bf1(5): call 0xfffff83f(%rip)
1bf6(7): lea 0x2fc2(%rip),%rax
1bfd(7): lea 0x2ffc(%rip),%rcx
1c04(9): mov $0x0,0x60(%rsp)
1c0d(9): mov $0x0,0x68(%rsp)
1c16(3): mov %rsp,%rdx
1c19(4): mov %rax,(%rsp)
1c1d(7): lea 0x2f9d(%rip),%rax
1c24(5): mov %rcx,0x30(%rsp)
1c29(7): lea 0x2fda(%rip),%rcx
1c30(5): mov %rax,0x8(%rsp)
1c35(7): lea 0x2ffd(%rip),%rax
1c3c(5): mov %rcx,0x40(%rsp)
1c41(7): lea 0x2fcc(%rip),%rcx
1c48(5): mov %rax,0x10(%rsp)
1c4d(7): lea 0x2f7d(%rip),%rax
1c54(5): mov %rcx,0x50(%rsp)
1c59(5): mov %rax,0x18(%rsp)
1c5e(7): lea 0x2f82(%rip),%rax
1c65(5): mov %rax,0x20(%rsp)
1c6a(7): lea 0x2f80(%rip),%rax
1c71(5): mov %rax,0x28(%rsp)
1c76(5): mov %rax,0x38(%rsp)
1c7b(5): mov %rax,0x48(%rsp)
1c80(5): mov %rax,0x58(%rsp)
1c85(3): nop (%rax)
1c88(4): add $0x10,%rdx
1c8c(3): mov (%rdx),%rdi
1c8f(3): test %rdi,%rdi
1c92(2): jz 0x15(%rip)
1c94(5): mov $0x6,%ecx
1c99(3): mov %rbx,%rsi
1c9c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c9e(3): setnbe %al
1ca1(2): sbb $0x0,%al
1ca3(2): test %al,%al
1ca5(2): jnz 0xffffffe3(%rip)
1ca7(4): mov 0x8(%rdx),%r12
1cab(2): xor %edi,%edi
1cad(5): mov $0x5,%edx
1cb2(7): lea 0x2f65(%rip),%rsi
1cb9(3): test %r12,%r12
1cbc(6): jz 0xc7(%rip)
1cc2(5): call 0xfffff6be(%rip)
1cc7(7): lea 0x30aa(%rip),%rcx
1cce(7): lea 0x2f60(%rip),%rdx
1cd5(3): mov %rax,%rsi
1cd8(5): mov $0x1,%edi
1cdd(2): xor %eax,%eax
1cdf(5): call 0xfffff7f1(%rip)
1ce4(2): xor %esi,%esi
1ce6(5): mov $0x5,%edi
1ceb(5): call 0xfffff7d5(%rip)
1cf0(3): test %rax,%rax
1cf3(2): jz 0x1e(%rip)
1cf5(7): lea 0x2f47(%rip),%rsi
1cfc(5): mov $0x3,%edx
1d01(3): mov %rax,%rdi
1d04(5): call 0xfffff60c(%rip)
1d09(2): test %eax,%eax
1d0b(6): jnz 0x10d(%rip)
1d11(7): lea 0x2f2f(%rip),%rsi
1d18(2): xor %edi,%edi
1d1a(5): mov $0x5,%edx
1d1f(5): call 0xfffff661(%rip)
1d24(7): lea 0x2e8e(%rip),%rcx
1d2b(7): lea 0x3046(%rip),%rdx
1d32(3): mov %rax,%rsi
1d35(5): mov $0x1,%edi
1d3a(2): xor %eax,%eax
1d3c(5): call 0xfffff794(%rip)
1d41(3): cmp %rbx,%r12
1d44(7): lea 0x2e90(%rip),%rcx
1d4b(7): lea 0x3e68(%rip),%rbx
1d52(4): cmove %rcx,%rbx
1d56(7): lea 0x308b(%rip),%rsi
1d5d(2): xor %edi,%edi
1d5f(5): mov $0x5,%edx
1d64(5): call 0xfffff61c(%rip)
1d69(3): mov %rbx,%rcx
1d6c(3): mov %rax,%rsi
1d6f(3): mov %r12,%rdx
1d72(5): mov $0x1,%edi
1d77(2): xor %eax,%eax
1d79(5): call 0xfffff757(%rip)
1d7e(5): jmp 0xfffffdd8(%rip)
1d83(5): call 0xfffff5fd(%rip)
1d88(7): lea 0x2fe9(%rip),%rcx
1d8f(7): lea 0x2e9f(%rip),%rdx
1d96(3): mov %rax,%rsi
1d99(5): mov $0x1,%edi
1d9e(2): xor %eax,%eax
1da0(5): call 0xfffff730(%rip)
1da5(2): xor %esi,%esi
1da7(5): mov $0x5,%edi
1dac(5): call 0xfffff714(%rip)
1db1(3): test %rax,%rax
1db4(2): jz 0x1a(%rip)
1db6(7): lea 0x2e86(%rip),%rsi
1dbd(5): mov $0x3,%edx
1dc2(3): mov %rax,%rdi
1dc5(5): call 0xfffff54b(%rip)
1dca(2): test %eax,%eax
1dcc(2): jnz 0x45(%rip)
1dce(7): lea 0x2e72(%rip),%rsi
1dd5(5): mov $0x5,%edx
1dda(2): xor %edi,%edi
1ddc(7): lea 0x2dd6(%rip),%r12
1de3(7): lea 0x2df1(%rip),%rbx
1dea(5): call 0xfffff596(%rip)
1def(7): lea 0x2dc3(%rip),%rcx
1df6(7): lea 0x2f7b(%rip),%rdx
1dfd(3): mov %rax,%rsi
1e00(5): mov $0x1,%edi
1e05(2): xor %eax,%eax
1e07(5): call 0xfffff6c9(%rip)
1e0c(5): jmp 0xffffff4a(%rip)
1e11(7): lea 0x2da1(%rip),%r12
1e18(7): mov 0x206269(%rip),%r13
1e1f(7): lea 0x2f7a(%rip),%rsi
1e26(2): xor %edi,%edi
1e28(5): mov $0x5,%edx
1e2d(5): call 0xfffff553(%rip)
1e32(3): mov %r13,%rsi
1e35(3): mov %rax,%rdi
1e38(5): call 0xfffff5f8(%rip)
1e3d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1e50(7): mov %rdi,0x2062a1(%rip)
1e57(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1e60(7): mov %dil,0x206289(%rip)
1e67(1): ret near (%rsp)

"close_stdout" :
1e70(1): push %rbp
1e71(1): push %rbx
1e72(4): sub $0x8,%rsp
1e76(7): mov 0x20620b(%rip),%rdi
1e7d(5): call 0x2b43(%rip)
1e82(2): test %eax,%eax
1e84(2): jz 0x18(%rip)
1e86(5): call 0xfffff47a(%rip)
1e8b(7): cmp $0x0,0x20625e(%rip)
1e92(3): mov %rax,%rbx
1e95(2): jz 0x1e(%rip)
1e97(3): cmp $0x20,(%rax)
1e9a(2): jnz 0x19(%rip)
1e9c(7): mov 0x20623d(%rip),%rdi
1ea3(5): call 0x2b1d(%rip)
1ea8(2): test %eax,%eax
1eaa(2): jnz 0x48(%rip)
1eac(4): add $0x8,%rsp
1eb0(1): pop %rbx
1eb1(1): pop %rbp
1eb2(1): ret near (%rsp)
1eb3(7): lea 0x2ced(%rip),%rsi
1eba(2): xor %edi,%edi
1ebc(5): mov $0x5,%edx
1ec1(5): call 0xfffff4bf(%rip)
1ec6(7): mov 0x20622b(%rip),%rdi
1ecd(3): mov %rax,%rbp
1ed0(3): test %rdi,%rdi
1ed3(2): jz 0x2a(%rip)
1ed5(5): call 0x1e6b(%rip)
1eda(2): mov (%rbx),%esi
1edc(7): lea 0x3742(%rip),%rdx
1ee3(3): mov %rax,%rcx
1ee6(3): mov %rbp,%r8
1ee9(2): xor %edi,%edi
1eeb(2): xor %eax,%eax
1eed(5): call 0xfffff603(%rip)
1ef2(6): mov 0x206120(%rip),%edi
1ef8(5): call 0xfffff428(%rip)
1efd(2): mov (%rbx),%esi
1eff(7): lea 0x2cb0(%rip),%rdx
1f06(3): mov %rax,%rcx
1f09(2): xor %edi,%edi
1f0b(2): xor %eax,%eax
1f0d(5): call 0xfffff5e3(%rip)
1f12(2): jmp 0xffffffe0(%rip)

"fadvise" :
1f30(3): test %rdi,%rdi
1f33(2): jz 0x1d(%rip)
1f35(1): push %rbx
1f36(2): mov %esi,%ebx
1f38(5): call 0xfffff528(%rip)
1f3d(2): mov %ebx,%ecx
1f3f(2): xor %edx,%edx
1f41(2): xor %esi,%esi
1f43(1): pop %rbx
1f44(2): mov %eax,%edi
1f46(5): jmp 0xfffff4ca(%rip)
1f4b(5): nop 0x0(%rax,%rax,1)
1f50(2): REP ret near (%rsp)

"umaxtostr" :
1f60(4): lea 0x14(%rsi),%rcx
1f64(4): mov $0x0,0x14(%rsi)
1f68(a): mov $0x-3689348814741910323,%rsi
1f72(6): nop 0x0(%rax,%rax,1)
1f78(3): mov %rdi,%rax
1f7b(4): sub $0x1,%rcx
1f7f(3): mul %rax,%rsi,%rdx
1f82(4): shr $0x3,%rdx
1f86(4): lea 0x0(%rdx,%rdx,4),%rax
1f8a(3): add %rax,%rax
1f8d(3): sub %rax,%rdi
1f90(3): add $0x30,%edi
1f93(3): test %rdx,%rdx
1f96(3): mov %dil,(%rcx)
1f99(3): mov %rdx,%rdi
1f9c(2): jnz 0xffffffdc(%rip)
1f9e(3): mov %rcx,%rax
1fa1(1): ret near (%rsp)

"parse_long_options" :
1fb0(2): push %r13
1fb2(2): push %r12
1fb4(3): mov %r8,%r13
1fb7(1): push %rbp
1fb8(1): push %rbx
1fb9(3): mov %rdx,%rbp
1fbc(3): mov %rcx,%r12
1fbf(7): sub $0xe8,%rsp
1fc6(2): test %al,%al
1fc8(2): jz 0x3c(%rip)
1fca(5): movaps %xmm0,0x60(%rsp)
1fcf(5): movaps %xmm1,0x70(%rsp)
1fd4(8): movaps %xmm2,0x80(%rsp)
1fdc(8): movaps %xmm3,0x90(%rsp)
1fe4(8): movaps %xmm4,0xa0(%rsp)
1fec(8): movaps %xmm5,0xb0(%rsp)
1ff4(8): movaps %xmm6,0xc0(%rsp)
1ffc(8): movaps %xmm7,0xd0(%rsp)
2004(9): mov $0x28,%rax
200d(5): mov %rax,0x28(%rsp)
2012(2): xor %eax,%eax
2014(3): cmp $0x2,%edi
2017(6): mov 0x2060a3(%rip),%ebx
201d(a): mov $0x0,0x206099(%rip)
2027(2): jz 0x39(%rip)
2029(5): mov 0x28(%rsp),%rax
202e(9): xor $0x28,%rax
2037(6): mov %ebx,0x206083(%rip)
203d(a): mov $0x0,0x206051(%rip)
2047(6): jnz 0xa3(%rip)
204d(7): add $0xe8,%rsp
2054(1): pop %rbx
2055(1): pop %rbp
2056(2): pop %r12
2058(2): pop %r13
205a(1): ret near (%rsp)
205b(5): nop 0x0(%rax,%rax,1)
2060(7): lea 0x205b59(%rip),%rcx
2067(7): lea 0x35be(%rip),%rdx
206e(3): xor %r8d,%r8d
2071(5): mov %r9,0x8(%rsp)
2076(5): call 0xfffff34a(%rip)
207b(3): cmp $0xff,%eax
207e(2): jz 0xffffffab(%rip)
2080(3): cmp $0x68,%eax
2083(5): mov 0x8(%rsp),%r9
2088(2): jz 0x58(%rip)
208a(3): cmp $0x76,%eax
208d(2): jnz 0xffffff9c(%rip)
208f(8): lea 0x110(%rsp),%rax
2097(7): mov 0x205fea(%rip),%rdi
209e(5): lea 0x10(%rsp),%r8
20a3(3): mov %r13,%rcx
20a6(3): mov %r12,%rdx
20a9(3): mov %rbp,%rsi
20ac(5): mov %rax,0x18(%rsp)
20b1(5): lea 0x30(%rsp),%rax
20b6(8): mov $0x30,0x10(%rsp)
20be(8): mov $0x30,0x14(%rsp)
20c6(5): mov %rax,0x20(%rsp)
20cb(5): call 0x22d5(%rip)
20d0(2): xor %edi,%edi
20d2(5): call 0xfffff45e(%rip)
20d7(9): nop 0x0(%rax,%rax,1)
20e0(2): xor %edi,%edi
20e2(3): call %r9
20e5(5): jmp 0xffffff44(%rip)
20ea(5): call 0xfffff2c6(%rip)

"parse_gnu_standard_options_only" :
20f0(2): push %r14
20f2(2): push %r13
20f4(3): mov %r8,%r14
20f7(2): push %r12
20f9(1): push %rbp
20fa(3): mov %rdx,%r12
20fd(1): push %rbx
20fe(3): mov %rcx,%r13
2101(7): sub $0xd0,%rsp
2108(2): test %al,%al
210a(8): mov 0x100(%rsp),%rbp
2112(2): jz 0x39(%rip)
2114(5): movaps %xmm0,0x50(%rsp)
2119(5): movaps %xmm1,0x60(%rsp)
211e(5): movaps %xmm2,0x70(%rsp)
2123(8): movaps %xmm3,0x80(%rsp)
212b(8): movaps %xmm4,0x90(%rsp)
2133(8): movaps %xmm5,0xa0(%rsp)
213b(8): movaps %xmm6,0xb0(%rsp)
2143(8): movaps %xmm7,0xc0(%rsp)
214b(9): mov $0x28,%rax
2154(5): mov %rax,0x18(%rsp)
2159(2): xor %eax,%eax
215b(7): lea 0x3a58(%rip),%rdx
2162(7): lea 0x34c3(%rip),%rax
2169(3): test %r9b,%r9b
216c(7): lea 0x205a4d(%rip),%rcx
2173(4): cmove %rax,%rdx
2177(3): xor %r8d,%r8d
217a(6): mov 0x205f40(%rip),%ebx
2180(a): mov $0x1,0x205f36(%rip)
218a(5): call 0xfffff236(%rip)
218f(3): cmp $0xff,%eax
2192(2): jz 0x66(%rip)
2194(3): cmp $0x68,%eax
2197(6): jz 0x89(%rip)
219d(3): cmp $0x76,%eax
21a0(2): jnz 0x50(%rip)
21a2(8): lea 0x108(%rsp),%rax
21aa(7): mov 0x205ed7(%rip),%rdi
21b1(3): mov %rsp,%r8
21b4(3): mov %r14,%rcx
21b7(3): mov %r13,%rdx
21ba(3): mov %r12,%rsi
21bd(5): mov %rax,0x8(%rsp)
21c2(5): lea 0x20(%rsp),%rax
21c7(7): mov $0x30,(%rsp)
21ce(8): mov $0x30,0x4(%rsp)
21d6(5): mov %rax,0x10(%rsp)
21db(5): call 0x21c5(%rip)
21e0(2): xor %edi,%edi
21e2(5): call 0xfffff34e(%rip)
21e7(9): nop 0x0(%rax,%rax,1)
21f0(6): mov 0x205e22(%rip),%edi
21f6(2): call %rbp
21f8(5): mov 0x18(%rsp),%rax
21fd(9): xor $0x28,%rax
2206(6): mov %ebx,0x205eb4(%rip)
220c(2): jnz 0x1a(%rip)
220e(7): add $0xd0,%rsp
2215(1): pop %rbx
2216(1): pop %rbp
2217(2): pop %r12
2219(2): pop %r13
221b(2): pop %r14
221d(1): ret near (%rsp)
221e(2): nop 
2220(2): xor %edi,%edi
2222(2): call %rbp
2224(2): jmp 0xffffffd4(%rip)
2226(5): call 0xfffff18a(%rip)

"set_program_name" :
2230(3): test %rdi,%rdi
2233(1): push %rbx
2234(2): jz 0x79(%rip)
2236(5): mov $0x2f,%esi
223b(3): mov %rdi,%rbx
223e(5): call 0xfffff1a2(%rip)
2243(3): test %rax,%rax
2246(2): jz 0x57(%rip)
2248(4): lea 0x1(%rax),%r8
224c(3): mov %r8,%rdx
224f(3): sub %rbx,%rdx
2252(4): cmp $0x6,%rdx
2256(2): jle 0x47(%rip)
2258(4): lea 0xfffffffa(%rax),%rsi
225c(7): lea 0x3415(%rip),%rdi
2263(5): mov $0x7,%ecx
2268(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
226a(3): setnbe %dl
226d(3): sbb $0x0,%dl
2270(2): test %dl,%dl
2272(2): jnz 0x2b(%rip)
2274(7): lea 0x3405(%rip),%rdi
227b(5): mov $0x3,%ecx
2280(3): mov %r8,%rsi
2283(3): mov %r8,%rbx
2286(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2288(3): setnbe %dl
228b(3): sbb $0x0,%dl
228e(2): test %dl,%dl
2290(2): jnz 0xd(%rip)
2292(4): lea 0x4(%rax),%rbx
2296(7): mov %rbx,0x205de3(%rip)
229d(7): mov %rbx,0x205e5c(%rip)
22a4(7): mov %rbx,0x205df5(%rip)
22ab(1): pop %rbx
22ac(1): ret near (%rsp)
22ad(7): mov 0x205e2c(%rip),%rcx
22b4(7): lea 0x3385(%rip),%rdi
22bb(5): mov $0x37,%edx
22c0(5): mov $0x1,%esi
22c5(5): call 0xfffff27b(%rip)
22ca(5): call 0xfffff026(%rip)

"gettext_quote.part.1" :
22d0(1): push %rbp
22d1(1): push %rbx
22d2(3): mov %rdi,%rbp
22d5(2): mov %esi,%ebx
22d7(4): sub $0x8,%rsp
22db(5): call 0x27c5(%rip)
22e0(3): movzx (%rax),%edx
22e3(3): and $0xdf,%edx
22e6(3): cmp $0x55,%dl
22e9(2): jz 0x77(%rip)
22eb(3): cmp $0x47,%dl
22ee(2): jz 0x22(%rip)
22f0(7): lea 0x339c(%rip),%rax
22f7(7): lea 0x3397(%rip),%rdx
22fe(3): cmp $0x9,%ebx
2301(4): cmovne %rdx,%rax
2305(4): add $0x8,%rsp
2309(1): pop %rbx
230a(1): pop %rbp
230b(1): ret near (%rsp)
230c(4): nop 0x0(%rax)
2310(4): movzx 0x1(%rax),%edx
2314(3): and $0xdf,%edx
2317(3): cmp $0x42,%dl
231a(2): jnz 0xffffffd6(%rip)
231c(4): cmp $0x31,0x2(%rax)
2320(2): jnz 0xffffffd0(%rip)
2322(4): cmp $0x38,0x3(%rax)
2326(2): jnz 0xffffffca(%rip)
2328(4): cmp $0x30,0x4(%rax)
232c(2): jnz 0xffffffc4(%rip)
232e(4): cmp $0x33,0x5(%rax)
2332(2): jnz 0xffffffbe(%rip)
2334(4): cmp $0x30,0x6(%rax)
2338(2): jnz 0xffffffb8(%rip)
233a(4): cmp $0x0,0x7(%rax)
233e(2): jnz 0xffffffb2(%rip)
2340(4): cmp $0x60,0x0(%rbp)
2344(7): lea 0x3341(%rip),%rax
234b(7): lea 0x333e(%rip),%rdx
2352(4): cmovne %rdx,%rax
2356(4): add $0x8,%rsp
235a(1): pop %rbx
235b(1): pop %rbp
235c(1): ret near (%rsp)
235d(3): nop (%rax)
2360(4): movzx 0x1(%rax),%edx
2364(3): and $0xdf,%edx
2367(3): cmp $0x54,%dl
236a(2): jnz 0xffffff86(%rip)
236c(4): movzx 0x2(%rax),%edx
2370(3): and $0xdf,%edx
2373(3): cmp $0x46,%dl
2376(6): jnz 0xffffff7a(%rip)
237c(4): cmp $0x2d,0x3(%rax)
2380(6): jnz 0xffffff70(%rip)
2386(4): cmp $0x38,0x4(%rax)
238a(6): jnz 0xffffff66(%rip)
2390(4): cmp $0x0,0x5(%rax)
2394(6): jnz 0xffffff5c(%rip)
239a(4): cmp $0x60,0x0(%rbp)
239e(7): lea 0x32df(%rip),%rax
23a5(7): lea 0x32dc(%rip),%rdx
23ac(4): cmovne %rdx,%rax
23b0(4): add $0x8,%rsp
23b4(1): pop %rbx
23b5(1): pop %rbp
23b6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
23c0(2): push %r15
23c2(2): push %r14
23c4(3): mov %r8d,%r15d
23c7(2): push %r13
23c9(2): push %r12
23cb(3): mov %rdi,%r14
23ce(1): push %rbp
23cf(1): push %rbx
23d0(3): mov %r9d,%ebx
23d3(3): mov %rsi,%r13
23d6(3): mov %rcx,%rbp
23d9(3): and $0x2,%ebx
23dc(7): sub $0xb8,%rsp
23e3(8): mov 0xf0(%rsp),%rax
23eb(5): mov %rdx,0x10(%rsp)
23f0(5): mov %r8d,0x8(%rsp)
23f5(5): mov %r9d,0x78(%rsp)
23fa(5): mov %rax,0x20(%rsp)
23ff(8): mov 0xf8(%rsp),%rax
2407(5): mov %rax,0x68(%rsp)
240c(8): mov 0x100(%rsp),%rax
2414(5): mov %rax,0x60(%rsp)
2419(9): mov $0x28,%rax
2422(8): mov %rax,0xa8(%rsp)
242a(2): xor %eax,%eax
242c(5): call 0xffffef64(%rip)
2431(4): cmp $0xa,%r15d
2435(5): mov %rax,0x58(%rsp)
243a(6): jnbe 0x11b5(%rip)
2440(7): lea 0x32b9(%rip),%rcx
2447(3): mov %r15d,%edx
244a(4): movsxd 0x0(%rcx,%rdx,4),%rax
244e(3): add %rcx,%rax
2451(2): jmp %rax
2453(5): mov $0x1,0xe(%rsp)
2458(5): mov $0x0,0x7c(%rsp)
245d(3): xor %r12d,%r12d
2460(9): mov $0x0,0x50(%rsp)
2469(5): mov $0x1,0xf(%rsp)
246e(5): mov $0x0,0xd(%rsp)
2473(7): lea 0x321b(%rip),%rax
247a(9): mov $0x1,0x18(%rsp)
2483(3): xor %r15d,%r15d
2486(8): mov $0x2,0x8(%rsp)
248e(5): mov %rax,0x48(%rsp)
2493(3): xor %r11d,%r11d
2496(3): mov %rbp,%rax
2499(3): mov %r12d,%r8d
249c(3): mov %r11,%rbp
249f(3): mov %rax,%r11
24a2(6): nop 0x0(%rax,%rax,1)
24a8(3): cmp %rbp,%r11
24ab(4): setnz %r12b
24af(4): cmp $0xffffffff,%r11
24b3(2): jnz 0xf(%rip)
24b5(5): mov 0x10(%rsp),%rax
24ba(4): cmp $0x0,0x0(%rax,%rbp,1)
24be(4): setnz %r12b
24c2(3): test %r12b,%r12b
24c5(6): jz 0x65b(%rip)
24cb(5): cmp $0x2,0x8(%rsp)
24d0(5): mov 0x10(%rsp),%rdi
24d5(4): lea 0x0(%rdi,%rbp,1),%r9
24d9(3): setnz %al
24dc(4): and 0xd(%rsp),%al
24e0(3): mov %eax,%r10d
24e3(6): jz 0xad(%rip)
24e9(5): mov 0x18(%rsp),%rax
24ee(3): test %rax,%rax
24f1(6): jz 0x42f(%rip)
24f7(4): cmp $0xffffffff,%r11
24fb(5): lea 0x0(%rbp,%rax,1),%rbx
2500(2): jnz 0x30(%rip)
2502(4): cmp $0x1,%rax
2506(2): jbe 0x2a(%rip)
2508(5): mov %r8b,0x38(%rsp)
250d(5): mov %r10b,0x30(%rsp)
2512(5): mov %r9,0x28(%rsp)
2517(5): call 0xffffee89(%rip)
251c(6): movzx 0x38(%rsp),%r8d
2522(6): movzx 0x30(%rsp),%r10d
2528(3): mov %rax,%r11
252b(5): mov 0x28(%rsp),%r9
2530(3): cmp %r11,%rbx
2533(5): mov %r10b,0x28(%rsp)
2538(6): jnbe 0x5b8(%rip)
253e(5): mov 0x18(%rsp),%rdx
2543(5): mov 0x48(%rsp),%rsi
2548(3): mov %r9,%rdi
254b(5): mov %r11,0x40(%rsp)
2550(5): mov %r8b,0x38(%rsp)
2555(5): mov %r9,0x30(%rsp)
255a(5): call 0xffffeec6(%rip)
255f(2): test %eax,%eax
2561(5): mov 0x30(%rsp),%r9
2566(6): movzx 0x38(%rsp),%r8d
256c(5): mov 0x40(%rsp),%r11
2571(6): jnz 0x57f(%rip)
2577(5): cmp $0x0,0xf(%rsp)
257c(6): movzx 0x28(%rsp),%r10d
2582(6): jnz 0xf83(%rip)
2588(8): nop 0x0(%rax,%rax,1)
2590(4): movzx (%r9),%ebx
2594(3): cmp $0x7e,%bl
2597(6): jnbe 0x321(%rip)
259d(7): lea 0x3188(%rip),%rcx
25a4(3): movzx %bl,%edx
25a7(4): movsxd 0x0(%rcx,%rdx,4),%rax
25ab(3): add %rcx,%rax
25ae(2): jmp %rax
25b0(3): xor %r10d,%r10d
25b3(4): cmp $0x1,%r11
25b7(3): setnz %al
25ba(4): cmp $0xffffffff,%r11
25be(2): jnz 0xe(%rip)
25c0(5): mov 0x10(%rsp),%rax
25c5(4): cmp $0x0,0x1(%rax)
25c9(3): setnz %al
25cc(5): cmp $0x2,0x8(%rsp)
25d1(3): setz %dl
25d4(2): test %al,%al
25d6(6): jz 0x252(%rip)
25dc(3): xor %r12d,%r12d
25df(2): xor %eax,%eax
25e1(7): nop 0x0(%rax)
25e8(5): cmp $0x1,0xd(%rsp)
25ed(6): jnz 0x115(%rip)
25f3(2): test %dl,%dl
25f5(6): jnz 0x10d(%rip)
25fb(5): mov 0x20(%rsp),%rsi
2600(3): test %rsi,%rsi
2603(2): jz 0x16(%rip)
2605(2): mov %ebx,%edx
2607(3): shr $0x5,%dl
260a(3): movzx %dl,%edx
260d(3): mov 0x0(%rsi,%rdx,4),%edx
2610(3): bt %ebx,%edx
2613(6): jb 0x150(%rip)
2619(3): test %r10b,%r10b
261c(6): jnz 0x147(%rip)
2622(3): xor $0x1,%eax
2625(4): add $0x1,%rbp
2629(3): and %r8d,%eax
262c(2): test %al,%al
262e(2): jz 0x22(%rip)
2630(3): cmp %r15,%r13
2633(2): jbe 0x7(%rip)
2635(5): mov $0x27,0x0(%r14,%r15,1)
263a(4): lea 0x1(%r15),%rax
263e(3): cmp %rax,%r13
2641(2): jbe 0x8(%rip)
2643(6): mov $0x27,0x1(%r14,%r15,1)
2649(4): add $0x2,%r15
264d(3): xor %r8d,%r8d
2650(3): cmp %r13,%r15
2653(2): jnb 0x6(%rip)
2655(4): mov %bl,0x0(%r14,%r15,1)
2659(5): movzx 0xe(%rsp),%edi
265e(4): add $0x1,%r15
2662(5): mov $0x0,%eax
2667(3): test %r12b,%r12b
266a(3): cmove %eax,%edi
266d(5): mov %dil,0xe(%rsp)
2672(5): jmp 0xfffffe36(%rip)
2677(9): nop 0x0(%rax,%rax,1)
2680(3): xor %r10d,%r10d
2683(4): mov 0x8(%rsp),%eax
2687(3): cmp $0x2,%eax
268a(6): jz 0x5be(%rip)
2690(3): cmp $0x5,%eax
2693(6): jz 0x575(%rip)
2699(3): cmp $0x2,%eax
269c(5): mov $0x3f,%ebx
26a1(3): setz %dl
26a4(3): xor %r12d,%r12d
26a7(2): xor %eax,%eax
26a9(5): jmp 0xffffff3f(%rip)
26ae(2): nop 
26b0(3): xor %r10d,%r10d
26b3(5): cmp $0x2,0x8(%rsp)
26b8(6): jz 0x508(%rip)
26be(5): mov %r12b,0x7c(%rsp)
26c3(2): xor %edx,%edx
26c5(2): xor %eax,%eax
26c7(5): mov $0x27,%ebx
26cc(5): jmp 0xffffff1c(%rip)
26d1(7): nop 0x0(%rax)
26d8(5): mov $0x9,%edx
26dd(5): mov $0x74,%ebx
26e2(5): cmp $0x2,0x8(%rsp)
26e7(3): setz %al
26ea(4): and 0xf(%rsp),%al
26ee(6): jnz 0x150(%rip)
26f4(5): cmp $0x0,0xd(%rsp)
26f9(2): jnz 0x67(%rip)
26fb(2): mov %edx,%ebx
26fd(3): xor %r12d,%r12d
2700(2): xor %eax,%eax
2702(5): cmp $0x0,0xf(%rsp)
2707(6): jnz 0xfffffef4(%rip)
270d(5): jmp 0xffffff0c(%rip)
2712(6): nop 0x0(%rax,%rax,1)
2718(5): mov $0x8,%edx
271d(5): mov $0x62,%ebx
2722(2): jmp 0xffffffd2(%rip)
2724(4): nop 0x0(%rax)
2728(5): cmp $0x2,0x8(%rsp)
272d(6): jz 0x3d3(%rip)
2733(5): cmp $0x0,0xd(%rsp)
2738(6): jz 0x218(%rip)
273e(5): cmp $0x0,0xf(%rsp)
2743(6): jz 0x20d(%rip)
2749(6): cmp $0x0,0x18(%rsp)
274f(6): jnz 0x3bc(%rip)
2755(5): mov $0x5c,%ebx
275a(6): nop 0x0(%rax,%rax,1)
2760(3): xor %r12d,%r12d
2763(5): cmp $0x2,0x8(%rsp)
2768(3): setz %dl
276b(5): cmp $0x0,0xf(%rsp)
2770(2): mov %edx,%eax
2772(6): jnz 0x856(%rip)
2778(3): mov %r8d,%eax
277b(3): xor $0x1,%eax
277e(2): and %dl,%al
2780(2): jz 0x31(%rip)
2782(3): cmp %r15,%r13
2785(2): jbe 0x7(%rip)
2787(5): mov $0x27,0x0(%r14,%r15,1)
278c(4): lea 0x1(%r15),%rdx
2790(3): cmp %rdx,%r13
2793(2): jbe 0x8(%rip)
2795(6): mov $0x24,0x1(%r14,%r15,1)
279b(4): lea 0x2(%r15),%rdx
279f(3): cmp %rdx,%r13
27a2(2): jbe 0x8(%rip)
27a4(6): mov $0x27,0x2(%r14,%r15,1)
27aa(4): add $0x3,%r15
27ae(3): mov %eax,%r8d
27b1(3): cmp %r15,%r13
27b4(2): jbe 0x7(%rip)
27b6(5): mov $0x5c,0x0(%r14,%r15,1)
27bb(4): add $0x1,%r15
27bf(4): add $0x1,%rbp
27c3(5): jmp 0xfffffe8d(%rip)
27c8(8): nop 0x0(%rax,%rax,1)
27d0(5): cmp $0x0,0xd(%rsp)
27d5(6): jnz 0x1ce(%rip)
27db(2): xor %edx,%edx
27dd(5): test $0x1,0x78(%rsp)
27e2(6): jz 0xffffff19(%rip)
27e8(4): add $0x1,%rbp
27ec(5): jmp 0xfffffcbc(%rip)
27f1(7): nop 0x0(%rax)
27f8(5): cmp $0x2,0x8(%rsp)
27fd(3): setz %dl
2800(2): xor %eax,%eax
2802(5): jmp 0xfffffde6(%rip)
2807(9): nop 0x0(%rax,%rax,1)
2810(5): mov $0x7,%edx
2815(5): mov $0x61,%ebx
281a(5): jmp 0xfffffeda(%rip)
281f(1): nop 
2820(5): cmp $0x2,0x8(%rsp)
2825(3): setz %dl
2828(3): test %rbp,%rbp
282b(6): jnz 0xfffffdb1(%rip)
2831(5): movzx 0xf(%rsp),%eax
2836(2): and %dl,%al
2838(6): jz 0xfffffdb0(%rip)
283e(3): mov %r11,%rbp
2841(8): mov $0x2,0x8(%rsp)
2849(5): jmp 0x700(%rip)
284e(2): nop 
2850(5): cmp $0x2,0x8(%rsp)
2855(3): setz %dl
2858(3): xor %r12d,%r12d
285b(2): jmp 0xffffffd6(%rip)
285d(3): nop (%rax)
2860(5): cmp $0x2,0x8(%rsp)
2865(5): mov $0x20,%ebx
286a(3): setz %dl
286d(2): jmp 0xffffffc4(%rip)
286f(1): nop 
2870(5): mov $0xd,%edx
2875(5): mov $0x72,%ebx
287a(5): jmp 0xfffffe68(%rip)
287f(1): nop 
2880(5): mov $0xc,%edx
2885(5): mov $0x66,%ebx
288a(5): jmp 0xfffffe6a(%rip)
288f(1): nop 
2890(5): mov $0xb,%edx
2895(5): mov $0x76,%ebx
289a(5): jmp 0xfffffe5a(%rip)
289f(1): nop 
28a0(5): mov $0xa,%edx
28a5(5): mov $0x6e,%ebx
28aa(5): jmp 0xfffffe38(%rip)
28af(1): nop 
28b0(3): xor %r10d,%r10d
28b3(5): nop 0x0(%rax,%rax,1)
28b8(6): cmp $0x1,0x58(%rsp)
28be(6): jnz 0x3aa(%rip)
28c4(5): mov %r11,0x38(%rsp)
28c9(5): mov %r8b,0x30(%rsp)
28ce(5): mov %r10b,0x28(%rsp)
28d3(5): call 0xffffecad(%rip)
28d8(3): mov (%rax),%rcx
28db(3): movzx %bl,%edx
28de(6): movzx 0x28(%rsp),%r10d
28e4(6): movzx 0x30(%rsp),%r8d
28ea(5): mov 0x38(%rsp),%r11
28ef(5): mov $0x1,%edi
28f4(4): movzx 0x0(%rcx,%rdx,2),%eax
28f8(4): and $0x4000,%ax
28fc(4): setnz %r12b
2900(3): setz %al
2903(4): and 0xd(%rsp),%al
2907(2): test %al,%al
2909(6): jnz 0x998(%rip)
290f(5): cmp $0x2,0x8(%rsp)
2914(3): setz %dl
2917(5): jmp 0xfffffcd1(%rip)
291c(4): nop 0x0(%rax)
2920(4): movzx (%r9),%ebx
2924(3): cmp $0x7e,%bl
2927(2): jnbe 0xffffff89(%rip)
2929(7): lea 0x2ff8(%rip),%rcx
2930(3): movzx %bl,%edx
2933(4): movsxd 0x0(%rcx,%rdx,4),%rax
2937(3): add %rcx,%rax
293a(2): jmp %rax
293c(4): nop 0x0(%rax)
2940(3): xor %r10d,%r10d
2943(5): cmp $0x0,0xd(%rsp)
2948(6): jnz 0xfffffdf6(%rip)
294e(2): nop 
2950(5): mov $0x5c,%edx
2955(5): mov $0x5c,%ebx
295a(5): jmp 0xfffffd9a(%rip)
295f(1): nop 
2960(5): mov $0xc,%edx
2965(3): xor %r10d,%r10d
2968(5): mov $0x66,%ebx
296d(5): jmp 0xfffffd87(%rip)
2972(6): nop 0x0(%rax,%rax,1)
2978(5): mov $0xa,%edx
297d(3): xor %r10d,%r10d
2980(5): mov $0x6e,%ebx
2985(5): jmp 0xfffffd5d(%rip)
298a(6): nop 0x0(%rax,%rax,1)
2990(5): mov $0x61,%ebx
2995(5): jmp 0xfffffdcb(%rip)
299a(6): nop 0x0(%rax,%rax,1)
29a0(3): xor %r10d,%r10d
29a3(5): cmp $0x2,0x8(%rsp)
29a8(3): setz %dl
29ab(5): cmp $0x0,0xf(%rsp)
29b0(6): jnz 0xb9a(%rip)
29b6(3): mov %r8d,%eax
29b9(3): mov %r15,%rcx
29bc(3): xor $0x1,%eax
29bf(2): and %dl,%al
29c1(2): jz 0x2f(%rip)
29c3(3): cmp %r15,%r13
29c6(2): jbe 0x7(%rip)
29c8(5): mov $0x27,0x0(%r14,%r15,1)
29cd(4): lea 0x1(%r15),%rcx
29d1(3): cmp %rcx,%r13
29d4(2): jbe 0x8(%rip)
29d6(6): mov $0x24,0x1(%r14,%r15,1)
29dc(4): lea 0x2(%r15),%rcx
29e0(3): cmp %rcx,%r13
29e3(6): jnbe 0x636(%rip)
29e9(4): lea 0x3(%r15),%rcx
29ed(3): mov %eax,%r8d
29f0(3): cmp %rcx,%r13
29f3(2): jbe 0x7(%rip)
29f5(5): mov $0x5c,0x0(%r14,%rcx,1)
29fa(5): cmp $0x2,0x8(%rsp)
29ff(4): lea 0x1(%rcx),%r15
2a03(6): jz 0x606(%rip)
2a09(4): lea 0x1(%rbp),%rax
2a0d(3): cmp %r11,%rax
2a10(2): jnb 0x1b(%rip)
2a12(5): mov 0x10(%rsp),%rax
2a17(5): movzx 0x1(%rax,%rbp,1),%eax
2a1c(4): mov %al,0x28(%rsp)
2a20(3): sub $0x30,%eax
2a23(2): cmp $0x9,%al
2a25(6): jbe 0x834(%rip)
2a2b(3): mov %r12d,%eax
2a2e(5): mov $0x30,%ebx
2a33(3): xor %r12d,%r12d
2a36(5): jmp 0xfffffbb2(%rip)
2a3b(5): nop 0x0(%rax,%rax,1)
2a40(5): cmp $0x2,0x8(%rsp)
2a45(3): mov %r10d,%r12d
2a48(3): setz %dl
2a4b(3): xor %r10d,%r10d
2a4e(2): xor %eax,%eax
2a50(5): jmp 0xfffffb98(%rip)
2a55(3): nop (%rax)
2a58(5): cmp $0x2,0x8(%rsp)
2a5d(3): setz %dl
2a60(3): xor %r10d,%r10d
2a63(5): jmp 0xfffffdc5(%rip)
2a68(8): nop 0x0(%rax,%rax,1)
2a70(5): cmp $0x2,0x8(%rsp)
2a75(3): setz %dl
2a78(3): xor %r10d,%r10d
2a7b(3): xor %r12d,%r12d
2a7e(5): jmp 0xfffffdb3(%rip)
2a83(5): nop 0x0(%rax,%rax,1)
2a88(5): cmp $0x2,0x8(%rsp)
2a8d(3): mov %r10d,%r12d
2a90(5): mov $0x20,%ebx
2a95(3): setz %dl
2a98(3): xor %r10d,%r10d
2a9b(5): jmp 0xfffffd96(%rip)
2aa0(5): mov $0xd,%edx
2aa5(3): xor %r10d,%r10d
2aa8(5): mov $0x72,%ebx
2aad(5): jmp 0xfffffc35(%rip)
2ab2(6): nop 0x0(%rax,%rax,1)
2ab8(5): mov $0x76,%ebx
2abd(5): jmp 0xfffffca3(%rip)
2ac2(6): nop 0x0(%rax,%rax,1)
2ac8(5): mov $0x9,%edx
2acd(3): xor %r10d,%r10d
2ad0(5): mov $0x74,%ebx
2ad5(5): jmp 0xfffffc0d(%rip)
2ada(6): nop 0x0(%rax,%rax,1)
2ae0(5): mov $0x62,%ebx
2ae5(5): jmp 0xfffffc7b(%rip)
2aea(6): nop 0x0(%rax,%rax,1)
2af0(3): xor %r10d,%r10d
2af3(5): jmp 0xfffffa9d(%rip)
2af8(8): nop 0x0(%rax,%rax,1)
2b00(5): cmp $0x0,0xf(%rsp)
2b05(6): jnz 0x96b(%rip)
2b0b(4): add $0x1,%rbp
2b0f(3): mov %r8d,%eax
2b12(3): xor %r12d,%r12d
2b15(5): mov $0x5c,%ebx
2b1a(5): jmp 0xfffffb12(%rip)
2b1f(1): nop 
2b20(5): cmp $0x2,0x8(%rsp)
2b25(5): movzx 0xf(%rsp),%ebx
2b2a(3): mov %r8d,%r12d
2b2d(3): mov %r11,%rbp
2b30(3): setz %dl
2b33(2): mov %ebx,%eax
2b35(3): test %r15,%r15
2b38(3): setz %cl
2b3b(2): and %edx,%eax
2b3d(2): and %cl,%al
2b3f(6): jnz 0xa67(%rip)
2b45(2): mov %ebx,%eax
2b47(3): xor $0x1,%eax
2b4a(2): and %al,%dl
2b4c(6): jz 0x970(%rip)
2b52(5): cmp $0x0,0x7c(%rsp)
2b57(6): jz 0x963(%rip)
2b5d(5): cmp $0x0,0xe(%rsp)
2b62(6): jnz 0x9fb(%rip)
2b68(3): test %r13,%r13
2b6b(3): setz %al
2b6e(6): cmp $0x0,0x50(%rsp)
2b74(3): setnz %dl
2b77(2): and %dl,%al
2b79(6): jz 0xa23(%rip)
2b7f(5): mov 0x50(%rsp),%r13
2b84(7): lea 0x2b0a(%rip),%rbx
2b8b(4): mov $0x27,(%r14)
2b8f(8): mov $0x2,0x8(%rsp)
2b97(6): mov $0x1,%r15d
2b9d(9): mov $0x1,0x18(%rsp)
2ba6(5): mov $0x0,0xf(%rsp)
2bab(5): mov %rbx,0x48(%rsp)
2bb0(4): mov %al,0x7c(%rsp)
2bb4(5): jmp 0xfffff8df(%rip)
2bb9(7): nop 0x0(%rax)
2bc0(5): cmp $0x0,0xf(%rsp)
2bc5(6): jnz 0x8ab(%rip)
2bcb(3): test %r13,%r13
2bce(6): jz 0x402(%rip)
2bd4(2): xor %edx,%edx
2bd6(6): cmp $0x0,0x50(%rsp)
2bdc(6): jnz 0x3f4(%rip)
2be2(5): mov %r13,0x50(%rsp)
2be7(4): add $0x3,%r15
2beb(2): xor %eax,%eax
2bed(5): mov %r12b,0x7c(%rsp)
2bf2(3): xor %r8d,%r8d
2bf5(3): mov %rdx,%r13
2bf8(5): mov $0x27,%ebx
2bfd(5): jmp 0xfffffa1c(%rip)
2c02(6): nop 0x0(%rax,%rax,1)
2c08(5): test $0x4,0x78(%rsp)
2c0d(2): jz 0x23(%rip)
2c0f(4): lea 0x2(%rbp),%rcx
2c13(3): cmp %r11,%rcx
2c16(2): jnb 0x1a(%rip)
2c18(5): mov 0x10(%rsp),%rax
2c1d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2c22(6): jz 0x790(%rip)
2c28(8): nop 0x0(%rax,%rax,1)
2c30(2): xor %edx,%edx
2c32(3): xor %r12d,%r12d
2c35(2): xor %eax,%eax
2c37(5): mov $0x3f,%ebx
2c3c(5): jmp 0xfffff9ac(%rip)
2c41(7): nop 0x0(%rax)
2c48(5): cmp $0x0,0xf(%rsp)
2c4d(6): jnz 0x823(%rip)
2c53(3): xor %r12d,%r12d
2c56(2): xor %eax,%eax
2c58(5): mov $0x3f,%ebx
2c5d(5): jmp 0xfffff9bc(%rip)
2c62(6): nop 0x0(%rax,%rax,1)
2c68(8): lea 0xa0(%rsp),%rax
2c70(4): cmp $0xffffffff,%r11
2c74(c): mov $0x0,0xa0(%rsp)
2c80(5): mov %rax,0x28(%rsp)
2c85(2): jnz 0x2f(%rip)
2c87(5): mov 0x10(%rsp),%rdi
2c8c(5): mov %r8b,0x40(%rsp)
2c91(5): mov %r10b,0x38(%rsp)
2c96(5): mov %r9,0x30(%rsp)
2c9b(5): call 0xffffe705(%rip)
2ca0(6): movzx 0x40(%rsp),%r8d
2ca6(6): movzx 0x38(%rsp),%r10d
2cac(3): mov %rax,%r11
2caf(5): mov 0x30(%rsp),%r9
2cb4(8): lea 0x9c(%rsp),%rax
2cbc(2): xor %ecx,%ecx
2cbe(4): mov %bl,0x7e(%rsp)
2cc2(5): mov %r8b,0x7d(%rsp)
2cc7(3): mov %rcx,%rbx
2cca(8): mov %r9,0x88(%rsp)
2cd2(5): mov %rax,0x38(%rsp)
2cd7(5): mov %r10b,0x7f(%rsp)
2cdc(8): mov %r15,0x80(%rsp)
2ce4(5): mov %r14,0x40(%rsp)
2ce9(5): mov %r13,0x70(%rsp)
2cee(5): mov %r11,0x30(%rsp)
2cf3(5): mov 0x10(%rsp),%rax
2cf8(5): lea 0x0(%rbp,%rbx,1),%r14
2cfd(5): mov 0x30(%rsp),%rdx
2d02(5): mov 0x28(%rsp),%rcx
2d07(5): mov 0x38(%rsp),%rdi
2d0c(4): lea 0x0(%rax,%r14,1),%r13
2d10(3): sub %r14,%rdx
2d13(3): mov %r13,%rsi
2d16(5): call 0x1c1a(%rip)
2d1b(3): test %rax,%rax
2d1e(3): mov %rax,%r15
2d21(2): jz 0x50(%rip)
2d23(4): cmp $0xffffffff,%rax
2d27(6): jz 0x61e(%rip)
2d2d(4): cmp $0xfffffffe,%rax
2d31(6): jz 0x5a0(%rip)
2d37(5): cmp $0x2,0x8(%rsp)
2d3c(3): setz %al
2d3f(4): and 0xf(%rsp),%al
2d43(6): jnz 0x19d(%rip)
2d49(7): mov 0x9c(%rsp),%edi
2d50(5): call 0xffffe820(%rip)
2d55(5): mov 0x28(%rsp),%rdi
2d5a(2): test %eax,%eax
2d5c(5): mov $0x0,%eax
2d61(4): cmove %eax,%r12d
2d65(3): add %r15,%rbx
2d68(5): call 0xffffe7f8(%rip)
2d6d(2): test %eax,%eax
2d6f(2): jz 0xffffff84(%rip)
2d71(3): mov %r12d,%edx
2d74(3): mov %rbx,%rdi
2d77(6): movzx 0x7d(%rsp),%r8d
2d7d(3): xor $0x1,%edx
2d80(5): movzx 0x7e(%rsp),%ebx
2d85(6): movzx 0x7f(%rsp),%r10d
2d8b(4): and 0xd(%rsp),%dl
2d8f(8): mov 0x80(%rsp),%r15
2d97(5): mov 0x40(%rsp),%r14
2d9c(5): mov 0x70(%rsp),%r13
2da1(5): mov 0x30(%rsp),%r11
2da6(4): cmp $0x1,%rdi
2daa(6): jbe 0x601(%rip)
2db0(3): mov %rdi,%rcx
2db3(2): xor %esi,%esi
2db5(6): movzx 0xf(%rsp),%r9d
2dbb(3): add %rbp,%rcx
2dbe(5): mov 0x10(%rsp),%rdi
2dc3(5): jmp 0xbb(%rip)
2dc8(8): nop 0x0(%rax,%rax,1)
2dd0(5): cmp $0x2,0x8(%rsp)
2dd5(3): setz %al
2dd8(3): test %r9b,%r9b
2ddb(6): jnz 0x4b5(%rip)
2de1(3): mov %r8d,%esi
2de4(3): xor $0x1,%esi
2de7(3): and %sil,%al
2dea(2): jz 0x31(%rip)
2dec(3): cmp %r15,%r13
2def(2): jbe 0x7(%rip)
2df1(5): mov $0x27,0x0(%r14,%r15,1)
2df6(4): lea 0x1(%r15),%rsi
2dfa(3): cmp %rsi,%r13
2dfd(2): jbe 0x8(%rip)
2dff(6): mov $0x24,0x1(%r14,%r15,1)
2e05(4): lea 0x2(%r15),%rsi
2e09(3): cmp %rsi,%r13
2e0c(2): jbe 0x8(%rip)
2e0e(6): mov $0x27,0x2(%r14,%r15,1)
2e14(4): add $0x3,%r15
2e18(3): mov %eax,%r8d
2e1b(3): cmp %r15,%r13
2e1e(2): jbe 0x7(%rip)
2e20(5): mov $0x5c,0x0(%r14,%r15,1)
2e25(4): lea 0x1(%r15),%rax
2e29(3): cmp %rax,%r13
2e2c(2): jbe 0xf(%rip)
2e2e(2): mov %ebx,%eax
2e30(3): shr $0x6,%al
2e33(3): add $0x30,%eax
2e36(5): mov %al,0x1(%r14,%r15,1)
2e3b(4): lea 0x2(%r15),%rax
2e3f(3): cmp %rax,%r13
2e42(2): jbe 0x12(%rip)
2e44(2): mov %ebx,%eax
2e46(3): shr $0x3,%al
2e49(3): and $0x7,%eax
2e4c(3): add $0x30,%eax
2e4f(5): mov %al,0x2(%r14,%r15,1)
2e54(3): and $0x7,%ebx
2e57(4): add $0x1,%rbp
2e5b(4): add $0x3,%r15
2e5f(3): add $0x30,%ebx
2e62(3): cmp %rcx,%rbp
2e65(6): jnb 0xfffff7eb(%rip)
2e6b(2): mov %edx,%esi
2e6d(3): cmp %r15,%r13
2e70(2): jbe 0x6(%rip)
2e72(4): mov %bl,0x0(%r14,%r15,1)
2e76(4): movzx 0x0(%rdi,%rbp,1),%ebx
2e7a(4): add $0x1,%r15
2e7e(2): test %dl,%dl
2e80(6): jnz 0xffffff50(%rip)
2e86(2): mov %esi,%eax
2e88(3): xor $0x1,%eax
2e8b(3): and %r8d,%eax
2e8e(3): test %r10b,%r10b
2e91(2): jz 0x10(%rip)
2e93(3): cmp %r15,%r13
2e96(2): jbe 0x7(%rip)
2e98(5): mov $0x5c,0x0(%r14,%r15,1)
2e9d(4): add $0x1,%r15
2ea1(4): add $0x1,%rbp
2ea5(3): cmp %rcx,%rbp
2ea8(6): jnb 0xfffff784(%rip)
2eae(2): test %al,%al
2eb0(6): jz 0x3fe(%rip)
2eb6(3): cmp %r15,%r13
2eb9(2): jbe 0x7(%rip)
2ebb(5): mov $0x27,0x0(%r14,%r15,1)
2ec0(4): lea 0x1(%r15),%rax
2ec4(3): cmp %rax,%r13
2ec7(2): jbe 0x8(%rip)
2ec9(6): mov $0x27,0x1(%r14,%r15,1)
2ecf(4): add $0x2,%r15
2ed3(3): xor %r10d,%r10d
2ed6(3): xor %r8d,%r8d
2ed9(2): jmp 0xffffff94(%rip)
2edb(5): nop 0x0(%rax,%rax,1)
2ee0(4): cmp $0x1,%r15
2ee4(6): jz 0xfffffe65(%rip)
2eea(5): mov 0x10(%rsp),%rdi
2eef(4): lea 0x0(%rdi,%r15,1),%rcx
2ef3(5): lea 0x1(%rdi,%r14,1),%rdx
2ef8(4): lea 0x0(%rcx,%r14,1),%r8
2efc(2): jmp 0x11(%rip)
2efe(2): nop 
2f00(4): add $0x1,%rdx
2f04(3): cmp %rdx,%r8
2f07(6): jz 0xfffffe42(%rip)
2f0d(3): movzx (%rdx),%ecx
2f10(3): sub $0x5b,%ecx
2f13(3): cmp $0x21,%cl
2f16(2): jnbe 0xffffffea(%rip)
2f18(5): mov $0x1,%esi
2f1d(3): shl/sal %cl,%rsi
2f20(3): mov %rsi,%rcx
2f23(a): mov $0x8589934635,%rsi
2f2d(3): test %rsi,%rcx
2f30(2): jz 0xffffffd0(%rip)
2f32(5): mov 0x40(%rsp),%r14
2f37(5): mov 0x70(%rsp),%r13
2f3c(5): mov 0x30(%rsp),%rbp
2f41(8): mov $0x2,0x8(%rsp)
2f49(5): cmp $0x0,0xd(%rsp)
2f4e(2): jz 0x12(%rip)
2f50(2): test %al,%al
2f52(5): mov $0x4,%eax
2f57(5): cmove 0x8(%rsp),%eax
2f5c(4): mov %eax,0x8(%rsp)
2f60(4): sub $0x8,%rsp
2f64(3): mov %rbp,%rcx
2f67(3): mov %r13,%rsi
2f6a(4): push 0x68(%rsp)
2f6e(4): push 0x78(%rsp)
2f72(3): mov %r14,%rdi
2f75(2): push $0x0
2f77(8): mov 0x98(%rsp),%r9d
2f7f(5): mov 0x28(%rsp),%r8d
2f84(5): mov 0x30(%rsp),%rdx
2f89(4): and $0xfd,%r9d
2f8d(5): call 0xfffff433(%rip)
2f92(4): add $0x20,%rsp
2f96(3): mov %rax,%r15
2f99(8): mov 0xa8(%rsp),%rbx
2fa1(9): xor $0x28,%rbx
2faa(3): mov %r15,%rax
2fad(6): jnz 0x606(%rip)
2fb3(7): add $0xb8,%rsp
2fba(1): pop %rbx
2fbb(1): pop %rbp
2fbc(2): pop %r12
2fbe(2): pop %r13
2fc0(2): pop %r14
2fc2(2): pop %r15
2fc4(1): ret near (%rsp)
2fc5(3): nop (%rax)
2fc8(3): mov %r11,%rbp
2fcb(5): jmp 0xffffff7e(%rip)
2fd0(3): cmp %r15,%r13
2fd3(2): jbe 0x7(%rip)
2fd5(5): mov $0x27,0x0(%r14,%r15,1)
2fda(4): lea 0x1(%r15),%rax
2fde(3): cmp %rax,%r13
2fe1(2): jbe 0x8(%rip)
2fe3(6): mov $0x5c,0x1(%r14,%r15,1)
2fe9(4): lea 0x2(%r15),%rax
2fed(3): cmp %rax,%r13
2ff0(6): jbe 0x5f2(%rip)
2ff6(3): mov %r13,%rdx
2ff9(6): mov $0x27,0x2(%r14,%r15,1)
2fff(5): mov 0x50(%rsp),%r13
3004(5): jmp 0xfffffbde(%rip)
3009(3): mov %r12d,%eax
300c(5): mov $0x30,%ebx
3011(3): xor %r12d,%r12d
3014(5): jmp 0xfffff605(%rip)
3019(6): mov $0x27,0x2(%r14,%r15,1)
301f(5): jmp 0xfffff9ca(%rip)
3024(2): test %ebx,%ebx
3026(6): jnz 0xfffff42d(%rip)
302c(5): mov $0x1,0xd(%rsp)
3031(3): test %r13,%r13
3034(6): jnz 0x596(%rip)
303a(7): lea 0x2654(%rip),%rax
3041(9): mov $0x0,0x50(%rsp)
304a(5): mov $0x1,0xe(%rsp)
304f(5): mov $0x0,0x7c(%rsp)
3054(3): xor %r12d,%r12d
3057(5): mov $0x0,0xf(%rsp)
305c(9): mov $0x1,0x18(%rsp)
3065(5): mov %rax,0x48(%rsp)
306a(6): mov $0x1,%r15d
3070(8): mov $0x2,0x8(%rsp)
3078(5): jmp 0xfffff41b(%rip)
307d(3): nop (%rax)
3080(2): test %ebx,%ebx
3082(6): jnz 0x3fb(%rip)
3088(3): test %r13,%r13
308b(6): jz 0x22b(%rip)
3091(4): mov $0x22,(%r14)
3095(5): mov $0x1,0xe(%rsp)
309a(3): xor %r12d,%r12d
309d(5): mov $0x0,0x7c(%rsp)
30a2(9): mov $0x0,0x50(%rsp)
30ab(7): lea 0x25e1(%rip),%rax
30b2(5): mov $0x0,0xf(%rsp)
30b7(5): mov $0x1,0xd(%rsp)
30bc(9): mov $0x1,0x18(%rsp)
30c5(6): mov $0x1,%r15d
30cb(5): mov %rax,0x48(%rsp)
30d0(5): jmp 0xfffff3c3(%rip)
30d5(7): lea 0x25b7(%rip),%rax
30dc(5): mov $0x1,0xe(%rsp)
30e1(5): mov $0x0,0x7c(%rsp)
30e6(3): xor %r12d,%r12d
30e9(9): mov $0x0,0x50(%rsp)
30f2(5): mov $0x1,0xf(%rsp)
30f7(5): mov $0x1,0xd(%rsp)
30fc(9): mov $0x1,0x18(%rsp)
3105(3): xor %r15d,%r15d
3108(5): mov %rax,0x48(%rsp)
310d(8): mov $0x5,0x8(%rsp)
3115(5): jmp 0xfffff37e(%rip)
311a(5): mov $0x1,0xe(%rsp)
311f(5): mov $0x0,0x7c(%rsp)
3124(3): xor %r12d,%r12d
3127(9): mov $0x0,0x50(%rsp)
3130(5): mov $0x0,0xf(%rsp)
3135(3): xor %r15d,%r15d
3138(5): mov $0x1,0xd(%rsp)
313d(9): mov $0x0,0x18(%rsp)
3146(9): mov $0x0,0x48(%rsp)
314f(5): jmp 0xfffff344(%rip)
3154(5): cmp $0xa,0x8(%rsp)
3159(2): jz 0x58(%rip)
315b(7): lea 0x2535(%rip),%rsi
3162(2): xor %edi,%edi
3164(5): mov $0x5,%edx
3169(5): call 0xffffe217(%rip)
316e(3): mov %rax,%rcx
3171(5): mov %rax,0x68(%rsp)
3176(7): lea 0x251a(%rip),%rax
317d(3): cmp %rax,%rcx
3180(6): jz 0x39e(%rip)
3186(7): lea 0x2508(%rip),%rsi
318d(2): xor %edi,%edi
318f(5): mov $0x5,%edx
3194(5): call 0xffffe1ec(%rip)
3199(3): mov %rax,%rcx
319c(5): mov %rax,0x60(%rsp)
31a1(7): lea 0x24ed(%rip),%rax
31a8(3): cmp %rax,%rcx
31ab(6): jz 0x389(%rip)
31b1(3): xor %r15d,%r15d
31b4(2): test %ebx,%ebx
31b6(6): jz 0x1c7(%rip)
31bc(2): test %ebx,%ebx
31be(5): mov 0x60(%rsp),%rbx
31c3(5): setnz 0xf(%rsp)
31c8(3): xor %r12d,%r12d
31cb(3): mov %rbx,%rdi
31ce(5): call 0xffffe1d2(%rip)
31d3(5): mov %rbx,0x48(%rsp)
31d8(5): mov %rax,0x18(%rsp)
31dd(5): mov $0x1,0xe(%rsp)
31e2(5): mov $0x0,0x7c(%rsp)
31e7(9): mov $0x0,0x50(%rsp)
31f0(5): mov $0x1,0xd(%rsp)
31f5(5): jmp 0xfffff29e(%rip)
31fa(5): mov $0x1,0xe(%rsp)
31ff(5): mov $0x0,0x7c(%rsp)
3204(3): xor %r12d,%r12d
3207(9): mov $0x0,0x50(%rsp)
3210(5): mov $0x0,0xf(%rsp)
3215(3): xor %r15d,%r15d
3218(5): mov $0x0,0xd(%rsp)
321d(9): mov $0x0,0x18(%rsp)
3226(9): mov $0x0,0x48(%rsp)
322f(5): jmp 0xfffff264(%rip)
3234(5): mov $0x1,0xe(%rsp)
3239(5): mov $0x0,0x7c(%rsp)
323e(3): xor %r12d,%r12d
3241(9): mov $0x0,0x50(%rsp)
324a(5): mov $0x1,0xf(%rsp)
324f(5): mov $0x1,0xd(%rsp)
3254(5): jmp 0xfffff21f(%rip)
3259(3): cmp %r15,%r13
325c(2): jbe 0x7(%rip)
325e(5): mov $0x30,0x0(%r14,%r15,1)
3263(4): lea 0x2(%rcx),%rax
3267(3): cmp %rax,%r13
326a(2): jbe 0x8(%rip)
326c(6): mov $0x30,0x2(%r14,%rcx,1)
3272(3): mov %r12d,%eax
3275(4): lea 0x3(%rcx),%r15
3279(3): xor %r12d,%r12d
327c(5): mov $0x30,%ebx
3281(5): jmp 0xfffff367(%rip)
3286(a): nop 0x0(%rax,%rax,1)
3290(5): movzx 0xf(%rsp),%ebx
3295(3): mov %r11,%rbp
3298(4): mov %bl,0xd(%rsp)
329c(5): jmp 0xfffffcad(%rip)
32a1(5): movzx 0xd(%rsp),%edx
32a6(3): xor %r12d,%r12d
32a9(5): jmp 0xfffffb07(%rip)
32ae(3): xor %r10d,%r10d
32b1(5): jmp 0xfffffbbc(%rip)
32b6(9): mov $0x0,0x50(%rsp)
32bf(5): mov $0x1,0xe(%rsp)
32c4(3): xor %r12d,%r12d
32c7(5): mov $0x0,0x7c(%rsp)
32cc(5): jmp 0xfffffddf(%rip)
32d1(5): mov 0x30(%rsp),%r11
32d6(3): mov %r14,%rsi
32d9(3): mov %r13,%rcx
32dc(3): mov %rbx,%rax
32df(3): mov %rbx,%rdi
32e2(6): movzx 0x7d(%rsp),%r8d
32e8(5): movzx 0x7e(%rsp),%ebx
32ed(8): mov 0x88(%rsp),%r9
32f5(3): cmp %r11,%rsi
32f8(6): movzx 0x7f(%rsp),%r10d
32fe(8): mov 0x80(%rsp),%r15
3306(5): mov 0x40(%rsp),%r14
330b(5): mov 0x70(%rsp),%r13
3310(2): jnb 0x28(%rip)
3312(3): cmp $0x0,(%rcx)
3315(2): jnz 0x12(%rip)
3317(2): jmp 0x21(%rip)
3319(7): nop 0x0(%rax)
3320(5): cmp $0x0,0x0(%r9,%rax,1)
3325(2): jz 0x10(%rip)
3327(4): add $0x1,%rax
332b(5): lea 0x0(%rbp,%rax,1),%rdx
3330(3): cmp %rdx,%r11
3333(2): jnbe 0xffffffed(%rip)
3335(3): mov %rax,%rdi
3338(5): movzx 0xd(%rsp),%edx
333d(3): xor %r12d,%r12d
3340(5): jmp 0xfffffa66(%rip)
3345(3): mov %rbx,%rdi
3348(6): movzx 0x7d(%rsp),%r8d
334e(5): movzx 0x7e(%rsp),%ebx
3353(6): movzx 0x7f(%rsp),%r10d
3359(8): mov 0x80(%rsp),%r15
3361(3): xor %r12d,%r12d
3364(5): mov 0x40(%rsp),%r14
3369(5): mov 0x70(%rsp),%r13
336e(5): mov 0x30(%rsp),%r11
3373(5): movzx 0xd(%rsp),%edx
3378(5): jmp 0xfffffa2e(%rip)
337d(5): mov 0x68(%rsp),%rdx
3382(3): movzx (%rdx),%eax
3385(2): test %al,%al
3387(6): jz 0xfffffe35(%rip)
338d(3): nop (%rax)
3390(3): cmp %r15,%r13
3393(2): jbe 0x6(%rip)
3395(4): mov %al,0x0(%r14,%r15,1)
3399(4): add $0x1,%r15
339d(5): movzx 0x0(%rdx,%r15,1),%eax
33a2(2): test %al,%al
33a4(2): jnz 0xffffffec(%rip)
33a6(5): jmp 0xfffffe16(%rip)
33ab(2): mov %edx,%eax
33ad(5): jmp 0xfffff55a(%rip)
33b2(4): movzx 0x0(%rax,%rcx,1),%ebx
33b6(3): cmp $0x3e,%bl
33b9(6): jnbe 0xfffff877(%rip)
33bf(a): mov $0x8070630310989004800,%rax
33c9(4): bt %rbx,%rax
33cd(6): jnb 0xfffff863(%rip)
33d3(5): cmp $0x0,0xf(%rsp)
33d8(6): jnz 0x1ea(%rip)
33de(3): cmp %r15,%r13
33e1(2): jbe 0x7(%rip)
33e3(5): mov $0x3f,0x0(%r14,%r15,1)
33e8(4): lea 0x1(%r15),%rax
33ec(3): cmp %rax,%r13
33ef(2): jbe 0x8(%rip)
33f1(6): mov $0x22,0x1(%r14,%r15,1)
33f7(4): lea 0x2(%r15),%rax
33fb(3): cmp %rax,%r13
33fe(2): jbe 0x8(%rip)
3400(6): mov $0x22,0x2(%r14,%r15,1)
3406(4): lea 0x3(%r15),%rax
340a(3): cmp %rax,%r13
340d(2): jbe 0x8(%rip)
340f(6): mov $0x3f,0x3(%r14,%r15,1)
3415(4): add $0x4,%r15
3419(2): xor %edx,%edx
341b(3): xor %r12d,%r12d
341e(2): xor %eax,%eax
3420(3): mov %rcx,%rbp
3423(5): jmp 0xfffff1c5(%rip)
3428(2): test %ebx,%ebx
342a(6): jz 0x18e(%rip)
3430(7): lea 0x225e(%rip),%rax
3437(5): mov $0x1,0xe(%rsp)
343c(5): mov $0x0,0x7c(%rsp)
3441(3): xor %r12d,%r12d
3444(9): mov $0x0,0x50(%rsp)
344d(5): mov $0x1,0xf(%rsp)
3452(5): mov $0x0,0xd(%rsp)
3457(9): mov $0x1,0x18(%rsp)
3460(3): xor %r15d,%r15d
3463(5): mov %rax,0x48(%rsp)
3468(5): jmp 0xfffff02b(%rip)
346d(3): nop (%rax)
3470(3): mov %r11,%rbp
3473(5): movzx 0xf(%rsp),%eax
3478(5): jmp 0xfffffad1(%rip)
347d(7): lea 0x220f(%rip),%rax
3484(5): mov $0x1,0xe(%rsp)
3489(5): mov $0x0,0x7c(%rsp)
348e(3): xor %r12d,%r12d
3491(9): mov $0x0,0x50(%rsp)
349a(5): mov $0x1,0xf(%rsp)
349f(5): mov $0x1,0xd(%rsp)
34a4(9): mov $0x1,0x18(%rsp)
34ad(3): xor %r15d,%r15d
34b0(5): mov %rax,0x48(%rsp)
34b5(5): jmp 0xffffefde(%rip)
34ba(2): mov %edx,%eax
34bc(5): mov 0x48(%rsp),%rbx
34c1(3): test %rbx,%rbx
34c4(2): jz 0x2e(%rip)
34c6(2): test %al,%al
34c8(2): jz 0x2a(%rip)
34ca(3): movzx (%rbx),%ecx
34cd(3): mov %rbx,%rax
34d0(2): test %cl,%cl
34d2(2): jz 0x20(%rip)
34d4(3): mov %r15,%rdx
34d7(3): sub %r15,%rax
34da(3): cmp %rdx,%r13
34dd(2): jbe 0x6(%rip)
34df(4): mov %cl,0x0(%r14,%rdx,1)
34e3(4): add $0x1,%rdx
34e7(4): movzx 0x0(%rax,%rdx,1),%ecx
34eb(2): test %cl,%cl
34ed(2): jnz 0xffffffed(%rip)
34ef(3): mov %rdx,%r15
34f2(3): cmp %r15,%r13
34f5(6): jbe 0xfffffaa4(%rip)
34fb(5): mov $0x0,0x0(%r14,%r15,1)
3500(5): jmp 0xfffffa99(%rip)
3505(5): cmp $0x2,0x8(%rsp)
350a(5): movzx 0xf(%rsp),%ebx
350f(3): mov %r11,%rbp
3512(3): setz %al
3515(4): mov %bl,0xd(%rsp)
3519(5): jmp 0xfffffa30(%rip)
351e(4): mov 0x8(%rsp),%esi
3522(3): mov %rcx,%rdi
3525(5): call 0xffffedab(%rip)
352a(5): mov %rax,0x68(%rsp)
352f(5): jmp 0xfffffc57(%rip)
3534(4): mov 0x8(%rsp),%esi
3538(3): mov %rcx,%rdi
353b(5): call 0xffffed95(%rip)
3540(5): mov %rax,0x60(%rsp)
3545(5): jmp 0xfffffc6c(%rip)
354a(5): movzx 0xf(%rsp),%ebx
354f(3): mov %r11,%rbp
3552(2): mov %edx,%eax
3554(4): mov %bl,0xd(%rsp)
3558(5): jmp 0xfffff9f1(%rip)
355d(4): sub $0x8,%rsp
3561(6): mov $0x5,%r8d
3567(3): mov %r11,%rcx
356a(4): push 0x68(%rsp)
356e(4): push 0x78(%rsp)
3572(3): mov %r14,%rdi
3575(4): push 0x38(%rsp)
3579(8): mov 0x98(%rsp),%r9d
3581(5): mov 0x30(%rsp),%rdx
3586(5): mov 0x70(%rsp),%rsi
358b(5): call 0xffffee35(%rip)
3590(4): add $0x20,%rsp
3594(3): mov %rax,%r15
3597(5): jmp 0xfffffa02(%rip)
359c(5): movzx 0x7c(%rsp),%eax
35a1(5): jmp 0xffffff1b(%rip)
35a6(8): mov $0x2,0x8(%rsp)
35ae(5): jmp 0xfffff99b(%rip)
35b3(5): call 0xffffddfd(%rip)
35b8(5): mov $0x0,0xd(%rsp)
35bd(5): jmp 0xfffffa74(%rip)
35c2(3): mov %r11,%rbp
35c5(5): jmp 0xfffff99b(%rip)
35ca(5): mov $0x1,0xe(%rsp)
35cf(2): xor %eax,%eax
35d1(3): xor %r12d,%r12d
35d4(9): mov $0x0,0x50(%rsp)
35dd(5): jmp 0xfffff5a7(%rip)
35e2(3): mov %r13,%rdx
35e5(5): mov 0x50(%rsp),%r13
35ea(5): jmp 0xfffff5f8(%rip)
35ef(5): call 0xffffdd01(%rip)

"quotearg_n_options" :
3600(2): push %r15
3602(2): push %r14
3604(3): movsxd %edi,%r15
3607(2): push %r13
3609(2): push %r12
360b(3): mov %rdx,%r14
360e(1): push %rbp
360f(1): push %rbx
3610(3): mov %rcx,%rbp
3613(4): sub $0x28,%rsp
3617(5): mov %rsi,0x8(%rsp)
361c(5): call 0xffffdce4(%rip)
3621(3): mov %rax,%r13
3624(2): mov (%rax),%eax
3626(3): test %r15d,%r15d
3629(7): mov 0x204a30(%rip),%rbx
3630(4): mov %eax,0x18(%rsp)
3634(6): js 0x16d(%rip)
363a(7): cmp %r15d,0x204a17(%rip)
3641(2): jnle 0x64(%rip)
3643(7): cmp $0x7fffffff,%r15d
364a(6): jz 0x15c(%rip)
3650(4): lea 0x1(%r15),%r12d
3654(7): lea 0x204a15(%rip),%rax
365b(3): movsxd %r12d,%rsi
365e(4): shl/sal $0x4,%rsi
3662(3): cmp %rax,%rbx
3665(6): jz 0x11b(%rip)
366b(3): mov %rbx,%rdi
366e(5): call 0xf72(%rip)
3673(3): mov %rax,%rbx
3676(7): mov %rax,0x2049e3(%rip)
367d(7): movsxd 0x2049d4(%rip),%rdi
3684(3): mov %r12d,%edx
3687(2): xor %esi,%esi
3689(2): sub %edi,%edx
368b(4): shl/sal $0x4,%rdi
368f(3): movsxd %edx,%rdx
3692(3): add %rbx,%rdi
3695(4): shl/sal $0x4,%rdx
3699(5): call 0xffffdd67(%rip)
369e(7): mov %r12d,0x2049b3(%rip)
36a5(3): mov 0x4(%rbp),%eax
36a8(4): shl/sal $0x4,%r15
36ac(4): sub $0x8,%rsp
36b0(3): add %r15,%rbx
36b3(4): lea 0x8(%rbp),%r15
36b7(4): mov 0x0(%rbp),%r8d
36bb(3): mov (%rbx),%r11
36be(4): mov 0x8(%rbx),%r12
36c2(3): mov %r14,%rcx
36c5(3): or $0x1,%eax
36c8(4): mov %eax,0x24(%rsp)
36cc(3): push 0x30(%rbp)
36cf(3): mov %eax,%r9d
36d2(3): push 0x28(%rbp)
36d5(2): push %r15
36d7(3): mov %r11,%rsi
36da(5): mov 0x28(%rsp),%rdx
36df(3): mov %r12,%rdi
36e2(5): mov %r11,0x30(%rsp)
36e7(5): call 0xffffecd9(%rip)
36ec(4): add $0x20,%rsp
36f0(5): mov 0x10(%rsp),%r11
36f5(3): cmp %rax,%r11
36f8(2): jnbe 0x69(%rip)
36fa(4): lea 0x1(%rax),%rsi
36fe(7): lea 0x204a1b(%rip),%rax
3705(3): cmp %rax,%r12
3708(3): mov %rsi,(%rbx)
370b(2): jz 0x14(%rip)
370d(3): mov %r12,%rdi
3710(5): mov %rsi,0x10(%rsp)
3715(5): call 0xffffdbcb(%rip)
371a(5): mov 0x10(%rsp),%rsi
371f(3): mov %rsi,%rdi
3722(5): mov %rsi,0x10(%rsp)
3727(5): call 0xe59(%rip)
372c(4): sub $0x8,%rsp
3730(4): mov %rax,0x8(%rbx)
3734(4): mov 0x0(%rbp),%r8d
3738(3): push 0x30(%rbp)
373b(3): push 0x28(%rbp)
373e(3): mov %r14,%rcx
3741(2): push %r15
3743(5): mov 0x3c(%rsp),%r9d
3748(3): mov %rax,%rdi
374b(5): mov 0x28(%rsp),%rdx
3750(5): mov 0x30(%rsp),%rsi
3755(3): mov %rax,%r12
3758(5): call 0xffffec68(%rip)
375d(4): add $0x20,%rsp
3761(4): mov 0x18(%rsp),%eax
3765(4): mov %eax,0x0(%r13)
3769(4): add $0x28,%rsp
376d(3): mov %r12,%rax
3770(1): pop %rbx
3771(1): pop %rbp
3772(2): pop %r12
3774(2): pop %r13
3776(2): pop %r14
3778(2): pop %r15
377a(1): ret near (%rsp)
377b(5): nop 0x0(%rax,%rax,1)
3780(2): xor %edi,%edi
3782(5): call 0xe5e(%rip)
3787(8): movdqa 0x2048e1(%rip),%xmm0
378f(3): mov %rax,%rbx
3792(7): mov %rax,0x2048c7(%rip)
3799(3): movups %xmm0,(%rax)
379c(5): jmp 0xfffffee1(%rip)
37a1(5): call 0xffffdb4f(%rip)
37a6(5): call 0x102a(%rip)

"clone_quoting_options" :
37b0(2): push %r12
37b2(1): push %rbp
37b3(1): push %rbx
37b4(3): mov %rdi,%rbx
37b7(5): call 0xffffdb49(%rip)
37bc(3): mov (%rax),%r12d
37bf(3): mov %rax,%rbp
37c2(7): lea 0x204a57(%rip),%rax
37c9(3): test %rbx,%rbx
37cc(5): mov $0x38,%esi
37d1(4): cmove %rax,%rbx
37d5(3): mov %rbx,%rdi
37d8(5): call 0xfa8(%rip)
37dd(4): mov %r12d,0x0(%rbp)
37e1(1): pop %rbx
37e2(1): pop %rbp
37e3(2): pop %r12
37e5(1): ret near (%rsp)

"get_quoting_style" :
37f0(7): lea 0x204a29(%rip),%rax
37f7(3): test %rdi,%rdi
37fa(4): cmove %rax,%rdi
37fe(2): mov (%rdi),%eax
3800(1): ret near (%rsp)

"set_quoting_style" :
3810(7): lea 0x204a09(%rip),%rax
3817(3): test %rdi,%rdi
381a(4): cmove %rax,%rdi
381e(2): mov %esi,(%rdi)
3820(1): ret near (%rsp)

"set_char_quoting" :
3830(7): lea 0x2049e9(%rip),%rax
3837(3): test %rdi,%rdi
383a(2): mov %esi,%ecx
383c(4): cmove %rax,%rdi
3840(2): mov %esi,%eax
3842(3): and $0x1f,%ecx
3845(3): shr $0x5,%al
3848(3): movzx %al,%eax
384b(5): lea 0x8(%rdi,%rax,4),%rdi
3850(2): mov (%rdi),%esi
3852(2): mov %esi,%eax
3854(2): shr %cl,%eax
3856(2): xor %eax,%edx
3858(3): and $0x1,%eax
385b(3): and $0x1,%edx
385e(2): shl/sal %cl,%edx
3860(2): xor %esi,%edx
3862(2): mov %edx,(%rdi)
3864(1): ret near (%rsp)

"set_quoting_flags" :
3870(7): lea 0x2049a9(%rip),%rax
3877(3): test %rdi,%rdi
387a(4): cmove %rax,%rdi
387e(3): mov 0x4(%rdi),%eax
3881(3): mov %esi,0x4(%rdi)
3884(1): ret near (%rsp)

"set_custom_quoting" :
3890(7): lea 0x204989(%rip),%rax
3897(3): test %rdi,%rdi
389a(4): cmove %rax,%rdi
389e(3): test %rsi,%rsi
38a1(6): mov $0xa,(%rdi)
38a7(2): jz 0x10(%rip)
38a9(3): test %rdx,%rdx
38ac(2): jz 0xb(%rip)
38ae(4): mov %rsi,0x28(%rdi)
38b2(4): mov %rdx,0x30(%rdi)
38b6(1): ret near (%rsp)
38b7(4): sub $0x8,%rsp
38bb(5): call 0xffffda35(%rip)

"quotearg_buffer" :
38c0(2): push %r15
38c2(2): push %r14
38c4(7): lea 0x204955(%rip),%rax
38cb(2): push %r13
38cd(2): push %r12
38cf(3): mov %rdi,%r13
38d2(1): push %rbp
38d3(1): push %rbx
38d4(3): mov %r8,%rbx
38d7(3): mov %rsi,%r14
38da(3): mov %rdx,%r15
38dd(4): sub $0x18,%rsp
38e1(3): test %r8,%r8
38e4(4): cmove %rax,%rbx
38e8(5): mov %rcx,0x8(%rsp)
38ed(5): call 0xffffda13(%rip)
38f2(3): mov (%rax),%r12d
38f5(3): mov %rax,%rbp
38f8(4): lea 0x8(%rbx),%rax
38fc(4): sub $0x8,%rsp
3900(4): mov 0x4(%rbx),%r9d
3904(3): push 0x30(%rbx)
3907(3): mov (%rbx),%r8d
390a(3): push 0x28(%rbx)
390d(3): mov %r15,%rdx
3910(1): push %rax
3911(5): mov 0x28(%rsp),%rcx
3916(3): mov %r14,%rsi
3919(3): mov %r13,%rdi
391c(5): call 0xffffeaa4(%rip)
3921(4): mov %r12d,0x0(%rbp)
3925(4): add $0x38,%rsp
3929(1): pop %rbx
392a(1): pop %rbp
392b(2): pop %r12
392d(2): pop %r13
392f(2): pop %r14
3931(2): pop %r15
3933(1): ret near (%rsp)

"quotearg_alloc_mem" :
3940(2): push %r15
3942(2): push %r14
3944(7): lea 0x2048d5(%rip),%rax
394b(2): push %r13
394d(2): push %r12
394f(3): mov %rdx,%r12
3952(1): push %rbp
3953(1): push %rbx
3954(3): mov %rcx,%rbx
3957(3): mov %rdi,%r14
395a(3): mov %rsi,%r15
395d(4): sub $0x38,%rsp
3961(3): test %rcx,%rcx
3964(4): cmove %rax,%rbx
3968(2): xor %ebp,%ebp
396a(5): call 0xffffd996(%rip)
396f(3): test %r12,%r12
3972(3): mov %rax,%r13
3975(2): mov (%rax),%eax
3977(4): setz %bpl
397b(3): or 0x4(%rbx),%ebp
397e(4): lea 0x8(%rbx),%r10
3982(4): sub $0x8,%rsp
3986(3): mov (%rbx),%r8d
3989(3): mov %r15,%rcx
398c(4): mov %eax,0x14(%rsp)
3990(3): push 0x30(%rbx)
3993(3): mov %r14,%rdx
3996(3): push 0x28(%rbx)
3999(2): push %r10
399b(2): xor %esi,%esi
399d(3): mov %ebp,%r9d
39a0(2): xor %edi,%edi
39a2(5): mov %r10,0x40(%rsp)
39a7(5): call 0xffffea19(%rip)
39ac(4): lea 0x1(%rax),%rsi
39b0(5): mov %rax,0x48(%rsp)
39b5(4): add $0x20,%rsp
39b9(3): mov %rsi,%rdi
39bc(5): mov %rsi,0x18(%rsp)
39c1(5): call 0xbbf(%rip)
39c6(5): mov %rax,0x10(%rsp)
39cb(4): sub $0x8,%rsp
39cf(3): push 0x30(%rbx)
39d2(3): push 0x28(%rbx)
39d5(5): mov 0x38(%rsp),%r10
39da(3): mov %ebp,%r9d
39dd(3): mov (%rbx),%r8d
39e0(3): mov %r15,%rcx
39e3(3): mov %r14,%rdx
39e6(3): mov %rax,%rdi
39e9(2): push %r10
39eb(5): mov 0x38(%rsp),%rsi
39f0(5): call 0xffffe9d0(%rip)
39f5(4): mov 0x2c(%rsp),%eax
39f9(4): add $0x20,%rsp
39fd(3): test %r12,%r12
3a00(4): mov %eax,0x0(%r13)
3a04(2): jz 0xb(%rip)
3a06(5): mov 0x28(%rsp),%r11
3a0b(4): mov %r11,(%r12)
3a0f(5): mov 0x10(%rsp),%rax
3a14(4): add $0x38,%rsp
3a18(1): pop %rbx
3a19(1): pop %rbp
3a1a(2): pop %r12
3a1c(2): pop %r13
3a1e(2): pop %r14
3a20(2): pop %r15
3a22(1): ret near (%rsp)

"quotearg_alloc" :
3a30(3): mov %rdx,%rcx
3a33(2): xor %edx,%edx
3a35(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3a40(6): mov 0x204612(%rip),%eax
3a46(2): push %r12
3a48(7): mov 0x204611(%rip),%r12
3a4f(1): push %rbp
3a50(1): push %rbx
3a51(3): cmp $0x1,%eax
3a54(2): jle 0x2d(%rip)
3a56(3): sub $0x2,%eax
3a59(5): lea 0x18(%r12),%rbx
3a5e(4): shl/sal $0x4,%rax
3a62(5): lea 0x28(%r12,%rax,1),%rbp
3a67(9): nop 0x0(%rax,%rax,1)
3a70(3): mov (%rbx),%rdi
3a73(4): add $0x10,%rbx
3a77(5): call 0xffffd869(%rip)
3a7c(3): cmp %rbp,%rbx
3a7f(2): jnz 0xfffffff1(%rip)
3a81(5): mov 0x8(%r12),%rdi
3a86(7): lea 0x204693(%rip),%rbx
3a8d(3): cmp %rbx,%rdi
3a90(2): jz 0x19(%rip)
3a92(5): call 0xffffd84e(%rip)
3a97(b): mov $0x100,0x2045ce(%rip)
3aa2(7): mov %rbx,0x2045cf(%rip)
3aa9(7): lea 0x2045c0(%rip),%rbx
3ab0(3): cmp %rbx,%r12
3ab3(2): jz 0x11(%rip)
3ab5(3): mov %r12,%rdi
3ab8(5): call 0xffffd828(%rip)
3abd(7): mov %rbx,0x20459c(%rip)
3ac4(1): pop %rbx
3ac5(a): mov $0x1,0x204589(%rip)
3acf(1): pop %rbp
3ad0(2): pop %r12
3ad2(1): ret near (%rsp)

"quotearg_n" :
3ae0(7): lea 0x204739(%rip),%rcx
3ae7(7): mov $0xffffffff,%rdx
3aee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3b00(7): lea 0x204719(%rip),%rcx
3b07(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3b10(7): lea 0x204709(%rip),%rcx
3b17(3): mov %rdi,%rsi
3b1a(7): mov $0xffffffff,%rdx
3b21(2): xor %edi,%edi
3b23(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3b30(7): lea 0x2046e9(%rip),%rcx
3b37(3): mov %rsi,%rdx
3b3a(3): mov %rdi,%rsi
3b3d(2): xor %edi,%edi
3b3f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3b50(4): sub $0x48,%rsp
3b54(3): mov %rdx,%rax
3b57(9): mov $0x28,%rdx
3b60(5): mov %rdx,0x38(%rsp)
3b65(2): xor %edx,%edx
3b67(3): cmp $0xa,%esi
3b6a(2): jz 0x6a(%rip)
3b6c(3): mov %esi,(%rsp)
3b6f(3): mov %rsp,%rcx
3b72(7): mov $0xffffffff,%rdx
3b79(3): mov %rax,%rsi
3b7c(9): mov $0x0,0x4(%rsp)
3b85(9): mov $0x0,0xc(%rsp)
3b8e(9): mov $0x0,0x14(%rsp)
3b97(9): mov $0x0,0x1c(%rsp)
3ba0(9): mov $0x0,0x24(%rsp)
3ba9(9): mov $0x0,0x2c(%rsp)
3bb2(8): mov $0x0,0x34(%rsp)
3bba(5): call 0xfffffa46(%rip)
3bbf(5): mov 0x38(%rsp),%rcx
3bc4(9): xor $0x28,%rcx
3bcd(2): jnz 0xc(%rip)
3bcf(4): add $0x48,%rsp
3bd3(1): ret near (%rsp)
3bd4(5): call 0xffffd71c(%rip)
3bd9(5): call 0xffffd7d7(%rip)

"quotearg_n_style_mem" :
3be0(4): sub $0x48,%rsp
3be4(3): mov %rdx,%rax
3be7(3): mov %rcx,%rdx
3bea(9): mov $0x28,%rcx
3bf3(5): mov %rcx,0x38(%rsp)
3bf8(2): xor %ecx,%ecx
3bfa(3): cmp $0xa,%esi
3bfd(2): jz 0x63(%rip)
3bff(3): mov %esi,(%rsp)
3c02(3): mov %rsp,%rcx
3c05(3): mov %rax,%rsi
3c08(9): mov $0x0,0x4(%rsp)
3c11(9): mov $0x0,0xc(%rsp)
3c1a(9): mov $0x0,0x14(%rsp)
3c23(9): mov $0x0,0x1c(%rsp)
3c2c(9): mov $0x0,0x24(%rsp)
3c35(9): mov $0x0,0x2c(%rsp)
3c3e(8): mov $0x0,0x34(%rsp)
3c46(5): call 0xfffff9ba(%rip)
3c4b(5): mov 0x38(%rsp),%rdx
3c50(9): xor $0x28,%rdx
3c59(2): jnz 0xc(%rip)
3c5b(4): add $0x48,%rsp
3c5f(1): ret near (%rsp)
3c60(5): call 0xffffd690(%rip)
3c65(5): call 0xffffd74b(%rip)

"quotearg_style" :
3c70(3): mov %rsi,%rdx
3c73(2): mov %edi,%esi
3c75(2): xor %edi,%edi
3c77(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3c80(3): mov %rdx,%rcx
3c83(3): mov %rsi,%rdx
3c86(2): mov %edi,%esi
3c88(2): xor %edi,%edi
3c8a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3c90(4): sub $0x48,%rsp
3c94(2): mov %edx,%ecx
3c96(9): mov $0x28,%rax
3c9f(5): mov %rax,0x38(%rsp)
3ca4(2): xor %eax,%eax
3ca6(7): mov 0x2045a3(%rip),%rax
3cad(3): mov %rsp,%r8
3cb0(3): and $0x1f,%ecx
3cb3(8): movdqa 0x204565(%rip),%xmm0
3cbb(5): mov %rax,0x30(%rsp)
3cc0(2): mov %edx,%eax
3cc2(4): movaps %xmm0,(%rsp)
3cc6(3): shr $0x5,%al
3cc9(3): movzx %al,%eax
3ccc(5): lea 0x8(%r8,%rax,4),%r9
3cd1(8): movdqa 0x204557(%rip),%xmm0
3cd9(5): movaps %xmm0,0x10(%rsp)
3cde(8): movdqa 0x20455a(%rip),%xmm0
3ce6(5): movaps %xmm0,0x20(%rsp)
3ceb(3): mov (%r9),%edx
3cee(2): mov %edx,%eax
3cf0(2): shr %cl,%eax
3cf2(2): not %eax
3cf4(3): and $0x1,%eax
3cf7(2): shl/sal %cl,%eax
3cf9(3): mov %r8,%rcx
3cfc(2): xor %edx,%eax
3cfe(3): mov %rsi,%rdx
3d01(3): mov %rdi,%rsi
3d04(3): mov %eax,(%r9)
3d07(2): xor %edi,%edi
3d09(5): call 0xfffff8f7(%rip)
3d0e(5): mov 0x38(%rsp),%rsi
3d13(9): xor $0x28,%rsi
3d1c(2): jnz 0x7(%rip)
3d1e(4): add $0x48,%rsp
3d22(1): ret near (%rsp)
3d23(5): call 0xffffd68d(%rip)

"quotearg_char" :
3d30(4): movsx %sil,%edx
3d34(7): mov $0xffffffff,%rsi
3d3b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3d40(5): mov $0x3a,%edx
3d45(7): mov $0xffffffff,%rsi
3d4c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3d60(5): mov $0x3a,%edx
3d65(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3d70(4): sub $0x48,%rsp
3d74(3): mov %rdx,%rax
3d77(9): mov $0x28,%rdx
3d80(5): mov %rdx,0x38(%rsp)
3d85(2): xor %edx,%edx
3d87(3): cmp $0xa,%esi
3d8a(2): jz 0x6a(%rip)
3d8c(3): mov %esi,(%rsp)
3d8f(3): mov %rsp,%rcx
3d92(7): mov $0xffffffff,%rdx
3d99(3): mov %rax,%rsi
3d9c(9): mov $0x0,0x4(%rsp)
3da5(9): mov $0x4000000,0xc(%rsp)
3dae(9): mov $0x0,0x14(%rsp)
3db7(9): mov $0x0,0x1c(%rsp)
3dc0(9): mov $0x0,0x24(%rsp)
3dc9(9): mov $0x0,0x2c(%rsp)
3dd2(8): mov $0x0,0x34(%rsp)
3dda(5): call 0xfffff826(%rip)
3ddf(5): mov 0x38(%rsp),%rcx
3de4(9): xor $0x28,%rcx
3ded(2): jnz 0xc(%rip)
3def(4): add $0x48,%rsp
3df3(1): ret near (%rsp)
3df4(5): call 0xffffd4fc(%rip)
3df9(5): call 0xffffd5b7(%rip)

"quotearg_n_custom_mem" :
3e00(4): sub $0x48,%rsp
3e04(3): mov %rcx,%r9
3e07(7): mov 0x204442(%rip),%rcx
3e0e(8): movdqa 0x20440a(%rip),%xmm0
3e16(9): mov $0x28,%rax
3e1f(5): mov %rax,0x38(%rsp)
3e24(2): xor %eax,%eax
3e26(4): movaps %xmm0,(%rsp)
3e2a(3): test %rsi,%rsi
3e2d(5): mov %rcx,0x30(%rsp)
3e32(7): mov $0xa,(%rsp)
3e39(8): movdqa 0x2043ef(%rip),%xmm0
3e41(5): movaps %xmm0,0x10(%rsp)
3e46(8): movdqa 0x2043f2(%rip),%xmm0
3e4e(5): movaps %xmm0,0x20(%rsp)
3e53(2): jz 0x34(%rip)
3e55(3): test %rdx,%rdx
3e58(2): jz 0x2f(%rip)
3e5a(5): mov %rsi,0x28(%rsp)
3e5f(5): mov %rdx,0x30(%rsp)
3e64(3): mov %rsp,%rcx
3e67(3): mov %r8,%rdx
3e6a(3): mov %r9,%rsi
3e6d(5): call 0xfffff793(%rip)
3e72(5): mov 0x38(%rsp),%rdi
3e77(9): xor $0x28,%rdi
3e80(2): jnz 0xc(%rip)
3e82(4): add $0x48,%rsp
3e86(1): ret near (%rsp)
3e87(5): call 0xffffd469(%rip)
3e8c(5): call 0xffffd524(%rip)

"quotearg_n_custom" :
3ea0(7): mov $0xffffffff,%r8
3ea7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3eb0(3): mov %rdx,%rcx
3eb3(7): mov $0xffffffff,%r8
3eba(3): mov %rsi,%rdx
3ebd(3): mov %rdi,%rsi
3ec0(2): xor %edi,%edi
3ec2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3ed0(3): mov %rcx,%r8
3ed3(3): mov %rdx,%rcx
3ed6(3): mov %rsi,%rdx
3ed9(3): mov %rdi,%rsi
3edc(2): xor %edi,%edi
3ede(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3ef0(7): lea 0x204129(%rip),%rcx
3ef7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3f00(7): lea 0x204119(%rip),%rcx
3f07(3): mov %rsi,%rdx
3f0a(3): mov %rdi,%rsi
3f0d(2): xor %edi,%edi
3f0f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3f20(7): lea 0x2040f9(%rip),%rcx
3f27(7): mov $0xffffffff,%rdx
3f2e(5): jmp 0xfffff6d2(%rip)

"quote" :
3f40(7): lea 0x2040d9(%rip),%rcx
3f47(3): mov %rdi,%rsi
3f4a(7): mov $0xffffffff,%rdx
3f51(2): xor %edi,%edi
3f53(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3f60(2): push %r15
3f62(2): push %r14
3f64(2): push %r13
3f66(2): push %r12
3f68(3): mov %r9,%r12
3f6b(1): push %rbp
3f6c(1): push %rbx
3f6d(3): mov %rdi,%rbp
3f70(3): mov %r8,%rbx
3f73(4): sub $0x28,%rsp
3f77(3): test %rsi,%rsi
3f7a(6): jz 0x11e(%rip)
3f80(3): mov %rdx,%r8
3f83(7): lea 0x1bde(%rip),%rdx
3f8a(3): mov %rcx,%r9
3f8d(2): xor %eax,%eax
3f8f(3): mov %rsi,%rcx
3f92(5): mov $0x1,%esi
3f97(5): call 0xffffd5b9(%rip)
3f9c(7): lea 0x1bd1(%rip),%rsi
3fa3(2): xor %edi,%edi
3fa5(5): mov $0x5,%edx
3faa(5): call 0xffffd3d6(%rip)
3faf(7): lea 0x1eea(%rip),%rdx
3fb6(3): mov %rax,%rcx
3fb9(6): mov $0x7e3,%r8d
3fbf(5): mov $0x1,%esi
3fc4(3): mov %rbp,%rdi
3fc7(2): xor %eax,%eax
3fc9(5): call 0xffffd587(%rip)
3fce(7): lea 0x1c2b(%rip),%rsi
3fd5(2): xor %edi,%edi
3fd7(5): mov $0x5,%edx
3fdc(5): call 0xffffd3a4(%rip)
3fe1(3): mov %rbp,%rsi
3fe4(3): mov %rax,%rdi
3fe7(5): call 0xffffd449(%rip)
3fec(4): cmp $0x9,%r12
3ff0(6): jnbe 0x340(%rip)
3ff6(7): lea 0x1e63(%rip),%rdx
3ffd(4): movsxd 0x0(%rdx,%r12,4),%rax
4001(3): add %rdx,%rax
4004(2): jmp %rax
4006(a): nop 0x0(%rax,%rax,1)
4010(4): mov 0x38(%rbx),%r9
4014(4): mov 0x10(%rbx),%rax
4018(7): lea 0x1d51(%rip),%rsi
401f(4): mov 0x8(%rbx),%r8
4023(5): mov $0x5,%edx
4028(2): xor %edi,%edi
402a(4): mov 0x30(%rbx),%r13
402e(4): mov 0x28(%rbx),%r12
4032(5): mov %r9,0x10(%rsp)
4037(4): mov 0x20(%rbx),%r15
403b(4): mov 0x18(%rbx),%r14
403f(4): mov %rax,(%rsp)
4043(5): mov %r8,0x8(%rsp)
4048(3): mov (%rbx),%rbx
404b(5): call 0xffffd335(%rip)
4050(4): sub $0x8,%rsp
4054(5): mov 0x18(%rsp),%r9
4059(3): mov %rax,%rdx
405c(3): mov %rbx,%rcx
405f(5): mov $0x1,%esi
4064(3): mov %rbp,%rdi
4067(2): xor %eax,%eax
4069(2): push %r9
406b(2): push %r13
406d(2): push %r12
406f(2): push %r15
4071(2): push %r14
4073(5): mov 0x30(%rsp),%r9
4078(5): mov 0x38(%rsp),%r8
407d(5): call 0xffffd4d3(%rip)
4082(4): add $0x30,%rsp
4086(4): add $0x28,%rsp
408a(1): pop %rbx
408b(1): pop %rbp
408c(2): pop %r12
408e(2): pop %r13
4090(2): pop %r14
4092(2): pop %r15
4094(1): ret near (%rsp)
4095(3): nop (%rax)
4098(3): mov %rcx,%r8
409b(3): mov %rdx,%rcx
409e(7): lea 0xaf4(%rip),%rdx
40a5(5): mov $0x1,%esi
40aa(2): xor %eax,%eax
40ac(5): call 0xffffd4a4(%rip)
40b1(5): jmp 0xfffffeeb(%rip)
40b6(a): nop 0x0(%rax,%rax,1)
40c0(4): mov 0x40(%rbx),%r10
40c4(4): mov 0x38(%rbx),%r9
40c8(7): lea 0x1cd1(%rip),%rsi
40cf(4): mov 0x10(%rbx),%rax
40d3(4): mov 0x8(%rbx),%r8
40d7(5): mov $0x5,%edx
40dc(4): mov 0x30(%rbx),%r13
40e0(4): mov 0x28(%rbx),%r12
40e4(4): mov 0x20(%rbx),%r15
40e8(4): mov 0x18(%rbx),%r14
40ec(3): mov (%rbx),%rbx
40ef(5): mov %r10,0x18(%rsp)
40f4(5): mov %r9,0x10(%rsp)
40f9(4): mov %rax,(%rsp)
40fd(5): mov %r8,0x8(%rsp)
4102(2): xor %edi,%edi
4104(5): call 0xffffd27c(%rip)
4109(5): mov 0x18(%rsp),%r10
410e(2): push %r10
4110(5): jmp 0xffffff44(%rip)
4115(3): nop (%rax)
4118(3): mov (%rbx),%rbx
411b(7): lea 0x1a56(%rip),%rsi
4122(5): mov $0x5,%edx
4127(2): xor %edi,%edi
4129(5): call 0xffffd257(%rip)
412e(4): add $0x28,%rsp
4132(3): mov %rbx,%rcx
4135(3): mov %rbp,%rdi
4138(1): pop %rbx
4139(1): pop %rbp
413a(2): pop %r12
413c(2): pop %r13
413e(2): pop %r14
4140(2): pop %r15
4142(3): mov %rax,%rdx
4145(5): mov $0x1,%esi
414a(2): xor %eax,%eax
414c(5): jmp 0xffffd404(%rip)
4151(7): nop 0x0(%rax)
4158(4): mov 0x8(%rbx),%r12
415c(7): lea 0x1a25(%rip),%rsi
4163(3): mov (%rbx),%rbx
4166(5): mov $0x5,%edx
416b(2): xor %edi,%edi
416d(5): call 0xffffd213(%rip)
4172(4): add $0x28,%rsp
4176(3): mov %r12,%r8
4179(3): mov %rbx,%rcx
417c(3): mov %rbp,%rdi
417f(3): mov %rax,%rdx
4182(5): mov $0x1,%esi
4187(1): pop %rbx
4188(1): pop %rbp
4189(2): pop %r12
418b(2): pop %r13
418d(2): pop %r14
418f(2): pop %r15
4191(2): xor %eax,%eax
4193(5): jmp 0xffffd3bd(%rip)
4198(8): nop 0x0(%rax,%rax,1)
41a0(4): mov 0x10(%rbx),%r13
41a4(4): mov 0x8(%rbx),%r12
41a8(7): lea 0x19f0(%rip),%rsi
41af(3): mov (%rbx),%rbx
41b2(5): mov $0x5,%edx
41b7(2): xor %edi,%edi
41b9(5): call 0xffffd1c7(%rip)
41be(4): add $0x28,%rsp
41c2(3): mov %r13,%r9
41c5(3): mov %r12,%r8
41c8(3): mov %rbx,%rcx
41cb(3): mov %rbp,%rdi
41ce(3): mov %rax,%rdx
41d1(1): pop %rbx
41d2(1): pop %rbp
41d3(2): pop %r12
41d5(2): pop %r13
41d7(2): pop %r14
41d9(2): pop %r15
41db(5): mov $0x1,%esi
41e0(2): xor %eax,%eax
41e2(5): jmp 0xffffd36e(%rip)
41e7(9): nop 0x0(%rax,%rax,1)
41f0(7): lea 0x1ad9(%rip),%rsi
41f7(5): mov $0x5,%edx
41fc(2): xor %edi,%edi
41fe(4): mov 0x18(%rbx),%r14
4202(4): mov 0x10(%rbx),%r13
4206(4): mov 0x8(%rbx),%r12
420a(3): mov (%rbx),%rbx
420d(5): call 0xffffd173(%rip)
4212(4): sub $0x8,%rsp
4216(2): push %r14
4218(3): mov %rax,%rdx
421b(3): mov %r13,%r9
421e(3): mov %r12,%r8
4221(3): mov %rbx,%rcx
4224(3): mov %rbp,%rdi
4227(5): mov $0x1,%esi
422c(2): xor %eax,%eax
422e(5): call 0xffffd322(%rip)
4233(1): pop %rax
4234(1): pop %rdx
4235(4): add $0x28,%rsp
4239(1): pop %rbx
423a(1): pop %rbp
423b(2): pop %r12
423d(2): pop %r13
423f(2): pop %r14
4241(2): pop %r15
4243(1): ret near (%rsp)
4244(4): nop 0x0(%rax)
4248(4): mov 0x20(%rbx),%r15
424c(7): lea 0x1a9d(%rip),%rsi
4253(5): mov $0x5,%edx
4258(2): xor %edi,%edi
425a(4): mov 0x18(%rbx),%r14
425e(4): mov 0x10(%rbx),%r13
4262(4): mov 0x8(%rbx),%r12
4266(3): mov (%rbx),%rbx
4269(5): call 0xffffd117(%rip)
426e(2): push %r15
4270(2): jmp 0xffffffa6(%rip)
4272(6): nop 0x0(%rax,%rax,1)
4278(4): mov 0x8(%rbx),%r8
427c(4): mov 0x28(%rbx),%r12
4280(7): lea 0x1a91(%rip),%rsi
4287(4): mov 0x20(%rbx),%r15
428b(4): mov 0x18(%rbx),%r14
428f(5): mov $0x5,%edx
4294(4): mov 0x10(%rbx),%r13
4298(2): xor %edi,%edi
429a(3): mov (%rbx),%rbx
429d(4): mov %r8,(%rsp)
42a1(5): call 0xffffd0df(%rip)
42a6(4): sub $0x8,%rsp
42aa(3): mov %r13,%r9
42ad(2): push %r12
42af(2): push %r15
42b1(2): push %r14
42b3(5): mov 0x20(%rsp),%r8
42b8(3): mov %rbx,%rcx
42bb(3): mov %rax,%rdx
42be(3): mov %rbp,%rdi
42c1(5): mov $0x1,%esi
42c6(2): xor %eax,%eax
42c8(5): call 0xffffd288(%rip)
42cd(4): add $0x20,%rsp
42d1(4): add $0x28,%rsp
42d5(1): pop %rbx
42d6(1): pop %rbp
42d7(2): pop %r12
42d9(2): pop %r13
42db(2): pop %r14
42dd(2): pop %r15
42df(1): ret near (%rsp)
42e0(4): mov 0x10(%rbx),%r9
42e4(4): mov 0x30(%rbx),%r13
42e8(7): lea 0x1a51(%rip),%rsi
42ef(4): mov 0x28(%rbx),%r12
42f3(4): mov 0x20(%rbx),%r15
42f7(5): mov $0x5,%edx
42fc(4): mov 0x18(%rbx),%r14
4300(4): mov 0x8(%rbx),%r8
4304(2): xor %edi,%edi
4306(5): mov %r9,0x8(%rsp)
430b(3): mov (%rbx),%rbx
430e(4): mov %r8,(%rsp)
4312(5): call 0xffffd06e(%rip)
4317(2): push %r13
4319(2): push %r12
431b(2): push %r15
431d(2): push %r14
431f(5): mov 0x28(%rsp),%r9
4324(2): jmp 0xffffff8f(%rip)
4326(a): nop 0x0(%rax,%rax,1)
4330(4): mov 0x40(%rbx),%r10
4334(4): mov 0x38(%rbx),%r9
4338(5): mov $0x5,%edx
433d(4): mov 0x10(%rbx),%rax
4341(4): mov 0x8(%rbx),%r8
4345(7): lea 0x1a8c(%rip),%rsi
434c(4): mov 0x30(%rbx),%r13
4350(4): mov 0x28(%rbx),%r12
4354(4): mov 0x20(%rbx),%r15
4358(4): mov 0x18(%rbx),%r14
435c(5): mov %r10,0x18(%rsp)
4361(5): mov %r9,0x10(%rsp)
4366(4): mov %rax,(%rsp)
436a(5): mov %r8,0x8(%rsp)
436f(3): mov (%rbx),%rbx
4372(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4380(3): xor %r9d,%r9d
4383(4): cmp $0x0,(%r8)
4387(2): jz 0x14(%rip)
4389(7): nop 0x0(%rax)
4390(4): add $0x1,%r9
4394(5): cmp $0x0,0x0(%r8,%r9,8)
4399(2): jnz 0xfffffff7(%rip)
439b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
43a0(4): sub $0x68,%rsp
43a4(3): mov %r8,%r10
43a7(3): xor %r9d,%r9d
43aa(9): mov $0x28,%rax
43b3(5): mov %rax,0x58(%rsp)
43b8(2): xor %eax,%eax
43ba(3): mov %rsp,%r8
43bd(3): nop (%rax)
43c0(3): mov (%r10),%eax
43c3(3): cmp $0x2f,%eax
43c6(2): jnbe 0x44(%rip)
43c8(3): mov %eax,%r11d
43cb(4): add 0x10(%r10),%r11
43cf(3): add $0x8,%eax
43d2(3): mov %eax,(%r10)
43d5(3): mov (%r11),%rax
43d8(3): test %rax,%rax
43db(4): mov %rax,0x0(%r8,%r9,8)
43df(2): jz 0xc(%rip)
43e1(4): add $0x1,%r9
43e5(4): cmp $0xa,%r9
43e9(2): jnz 0xffffffd7(%rip)
43eb(5): call 0xfffffb75(%rip)
43f0(5): mov 0x58(%rsp),%rax
43f5(9): xor $0x28,%rax
43fe(2): jnz 0x7(%rip)
4400(4): add $0x68,%rsp
4404(1): ret near (%rsp)
4405(5): call 0xffffcfab(%rip)
440a(4): mov 0x8(%r10),%r11
440e(4): lea 0x8(%r11),%rax
4412(4): mov %rax,0x8(%r10)
4416(2): jmp 0xffffffbf(%rip)

"version_etc" :
4420(1): push %rbp
4421(1): push %rbx
4422(6): mov $0x20,%r10d
4428(3): xor %r11d,%r11d
442b(7): sub $0xb8,%rsp
4432(9): mov $0x28,%rax
443b(5): mov %rax,0x78(%rsp)
4440(2): xor %eax,%eax
4442(8): lea 0xd0(%rsp),%rax
444a(8): mov %r8,0xa0(%rsp)
4452(8): lea 0xd0(%rsp),%rbx
445a(5): lea 0x20(%rsp),%r8
445f(8): mov %r9,0xa8(%rsp)
4467(8): mov $0x20,0x8(%rsp)
446f(5): mov %rax,0x10(%rsp)
4474(8): lea 0x80(%rsp),%rax
447c(3): xor %r9d,%r9d
447f(5): mov %rax,0x18(%rsp)
4484(3): mov %rax,%rbp
4487(9): nop 0x0(%rax,%rax,1)
4490(4): cmp $0x2f,%r10d
4494(2): jnbe 0x58(%rip)
4496(3): mov %r10d,%eax
4499(6): mov $0x1,%r11d
449f(4): add $0x8,%r10d
44a3(3): add %rbp,%rax
44a6(3): mov (%rax),%rax
44a9(3): test %rax,%rax
44ac(4): mov %rax,0x0(%r8,%r9,8)
44b0(2): jz 0xc(%rip)
44b2(4): add $0x1,%r9
44b6(4): cmp $0xa,%r9
44ba(2): jnz 0xffffffd6(%rip)
44bc(3): test %r11b,%r11b
44bf(2): jnz 0x26(%rip)
44c1(5): call 0xfffffa9f(%rip)
44c6(5): mov 0x78(%rsp),%rax
44cb(9): xor $0x28,%rax
44d4(2): jnz 0xc(%rip)
44d6(7): add $0xb8,%rsp
44dd(1): pop %rbx
44de(1): pop %rbp
44df(1): ret near (%rsp)
44e0(5): call 0xffffced0(%rip)
44e5(5): mov %r10d,0x8(%rsp)
44ea(2): jmp 0xffffffd7(%rip)
44ec(3): mov %rbx,%rax
44ef(4): add $0x8,%rbx
44f3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4500(1): push %rbx
4501(7): lea 0x16b3(%rip),%rsi
4508(5): mov $0x5,%edx
450d(2): xor %edi,%edi
450f(5): call 0xffffce71(%rip)
4514(7): lea 0x16b5(%rip),%rdx
451b(3): mov %rax,%rsi
451e(5): mov $0x1,%edi
4523(2): xor %eax,%eax
4525(5): call 0xffffcfab(%rip)
452a(7): lea 0x16b5(%rip),%rsi
4531(5): mov $0x5,%edx
4536(2): xor %edi,%edi
4538(5): call 0xffffce48(%rip)
453d(7): lea 0x834(%rip),%rcx
4544(7): lea 0x6ea(%rip),%rdx
454b(3): mov %rax,%rsi
454e(5): mov $0x1,%edi
4553(2): xor %eax,%eax
4555(5): call 0xffffcf7b(%rip)
455a(7): mov 0x203b27(%rip),%rbx
4561(7): lea 0x18b0(%rip),%rsi
4568(2): xor %edi,%edi
456a(5): mov $0x5,%edx
456f(5): call 0xffffce11(%rip)
4574(3): mov %rbx,%rsi
4577(3): mov %rax,%rdi
457a(1): pop %rbx
457b(5): jmp 0xffffceb5(%rip)

"xmalloc" :
4580(1): push %rbx
4581(3): mov %rdi,%rbx
4584(5): call 0xffffceec(%rip)
4589(3): test %rax,%rax
458c(2): jnz 0x7(%rip)
458e(3): test %rbx,%rbx
4591(2): jnz 0x4(%rip)
4593(1): pop %rbx
4594(1): ret near (%rsp)
4595(5): call 0x23b(%rip)

"xnmalloc" :
45a0(3): mov %rdi,%rax
45a3(3): mul %rax,%rsi,%rdx
45a6(3): mov %rax,%rdi
45a9(3): seto %al
45ac(3): test %rdi,%rdi
45af(2): js 0xc(%rip)
45b1(3): movzx %al,%eax
45b4(3): test %rax,%rax
45b7(2): jnz 0x4(%rip)
45b9(2): jmp 0xffffffc7(%rip)
45bb(4): sub $0x8,%rsp
45bf(5): call 0x211(%rip)

"xrealloc" :
45e0(3): test %rsi,%rsi
45e3(1): push %rbx
45e4(3): mov %rsi,%rbx
45e7(2): jnz 0x7(%rip)
45e9(3): test %rdi,%rdi
45ec(2): jnz 0x1c(%rip)
45ee(3): mov %rbx,%rsi
45f1(5): call 0xffffcebf(%rip)
45f6(3): test %rax,%rax
45f9(2): jnz 0x7(%rip)
45fb(3): test %rbx,%rbx
45fe(2): jnz 0x13(%rip)
4600(1): pop %rbx
4601(1): ret near (%rsp)
4602(6): nop 0x0(%rax,%rax,1)
4608(5): call 0xffffccd8(%rip)
460d(2): xor %eax,%eax
460f(1): pop %rbx
4610(1): ret near (%rsp)
4611(5): call 0x1bf(%rip)

"xnrealloc" :
4620(3): mov %rsi,%rax
4623(3): mul %rax,%rdx,%rdx
4626(3): mov %rax,%rsi
4629(3): seto %al
462c(3): test %rsi,%rsi
462f(2): js 0xc(%rip)
4631(3): movzx %al,%eax
4634(3): test %rax,%rax
4637(2): jnz 0x4(%rip)
4639(2): jmp 0xffffffa7(%rip)
463b(4): sub $0x8,%rsp
463f(5): call 0x191(%rip)

"x2nrealloc" :
4650(3): test %rdi,%rdi
4653(3): mov %rdx,%r9
4656(3): mov (%rsi),%rcx
4659(2): jz 0x37(%rip)
465b(2): xor %edx,%edx
465d(a): mov $0x6148914691236517204,%rax
4667(3): div %r9,%rax
466a(3): cmp %rcx,%rax
466d(2): jbe 0x3e(%rip)
466f(3): mov %rcx,%rax
4672(3): shr $0x1,%rax
4675(5): lea 0x1(%rax,%rcx,1),%rcx
467a(3): mov %rcx,(%rsi)
467d(4): imul %r9,%rcx
4681(3): mov %rcx,%rsi
4684(5): jmp 0xffffff5c(%rip)
4689(7): nop 0x0(%rax)
4690(3): test %rcx,%rcx
4693(2): jz 0x25(%rip)
4695(3): mov %rcx,%rax
4698(3): mul %rax,%r9,%rdx
469b(3): seto %dl
469e(3): test %rax,%rax
46a1(3): movzx %dl,%edx
46a4(2): js 0x7(%rip)
46a6(3): test %rdx,%rdx
46a9(2): jz 0xffffffd1(%rip)
46ab(4): sub $0x8,%rsp
46af(5): call 0x121(%rip)
46b4(4): nop 0x0(%rax)
46b8(2): xor %edx,%edx
46ba(5): mov $0x80,%eax
46bf(3): xor %r8d,%r8d
46c2(3): div %r9,%rax
46c5(3): test %rax,%rax
46c8(4): setz %r8b
46cc(4): lea 0x0(%r8,%rax,1),%rcx
46d0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
46e0(3): test %rdi,%rdi
46e3(3): mov (%rsi),%rax
46e6(2): jz 0x2a(%rip)
46e8(a): mov $0x6148914691236517203,%rdx
46f2(3): cmp %rdx,%rax
46f5(2): jnbe 0x2c(%rip)
46f7(3): mov %rax,%rdx
46fa(3): shr $0x1,%rdx
46fd(5): lea 0x1(%rdx,%rax,1),%rax
4702(3): mov %rax,(%rsi)
4705(3): mov %rax,%rsi
4708(5): jmp 0xfffffed8(%rip)
470d(3): nop (%rax)
4710(3): test %rax,%rax
4713(5): mov $0x80,%edx
4718(4): cmove %rdx,%rax
471c(3): test %rax,%rax
471f(2): jns 0xffffffe3(%rip)
4721(4): sub $0x8,%rsp
4725(5): call 0xab(%rip)

"xzalloc" :
4730(1): push %rbx
4731(3): mov %rdi,%rbx
4734(5): call 0xfffffe4c(%rip)
4739(3): mov %rbx,%rdx
473c(2): xor %esi,%esi
473e(3): mov %rax,%rdi
4741(1): pop %rbx
4742(5): jmp 0xffffccbe(%rip)

"xcalloc" :
4750(3): mov %rdi,%rax
4753(4): sub $0x8,%rsp
4757(3): mul %rax,%rsi,%rdx
475a(3): seto %dl
475d(3): test %rax,%rax
4760(2): js 0x19(%rip)
4762(3): movzx %dl,%edx
4765(3): test %rdx,%rdx
4768(2): jnz 0x11(%rip)
476a(5): call 0xffffccd6(%rip)
476f(3): test %rax,%rax
4772(2): jz 0x7(%rip)
4774(4): add $0x8,%rsp
4778(1): ret near (%rsp)
4779(5): call 0x57(%rip)

"xmemdup" :
4780(1): push %rbp
4781(1): push %rbx
4782(3): mov %rdi,%rbp
4785(3): mov %rsi,%rdi
4788(3): mov %rsi,%rbx
478b(4): sub $0x8,%rsp
478f(5): call 0xfffffdf1(%rip)
4794(4): add $0x8,%rsp
4798(3): mov %rbx,%rdx
479b(3): mov %rbp,%rsi
479e(1): pop %rbx
479f(1): pop %rbp
47a0(3): mov %rax,%rdi
47a3(5): jmp 0xffffccad(%rip)

"xstrdup" :
47b0(1): push %rbx
47b1(3): mov %rdi,%rbx
47b4(5): call 0xffffcbec(%rip)
47b9(3): mov %rbx,%rdi
47bc(4): lea 0x1(%rax),%rsi
47c0(1): pop %rbx
47c1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
47d0(7): lea 0x16f8(%rip),%rsi
47d7(4): sub $0x8,%rsp
47db(5): mov $0x5,%edx
47e0(2): xor %edi,%edi
47e2(5): call 0xffffcb9e(%rip)
47e7(6): mov 0x20382b(%rip),%edi
47ed(7): lea 0x3c2(%rip),%rdx
47f4(3): mov %rax,%rcx
47f7(2): xor %esi,%esi
47f9(2): xor %eax,%eax
47fb(5): call 0xffffccf5(%rip)
4800(5): call 0xffffcaf0(%rip)

"rpl_fclose" :
4810(2): push %r12
4812(1): push %rbp
4813(1): push %rbx
4814(3): mov %rdi,%rbx
4817(5): call 0xffffcc49(%rip)
481c(2): test %eax,%eax
481e(3): mov %rbx,%rdi
4821(2): js 0x56(%rip)
4823(5): call 0xffffcc7d(%rip)
4828(2): test %eax,%eax
482a(2): jnz 0x2e(%rip)
482c(3): mov %rbx,%rdi
482f(5): call 0x61(%rip)
4834(2): test %eax,%eax
4836(2): jz 0x3e(%rip)
4838(5): call 0xffffcac8(%rip)
483d(3): mov (%rax),%r12d
4840(3): mov %rbx,%rdi
4843(3): mov %rax,%rbp
4846(5): call 0xffffcb1a(%rip)
484b(3): test %r12d,%r12d
484e(2): jnz 0x32(%rip)
4850(1): pop %rbx
4851(1): pop %rbp
4852(2): pop %r12
4854(1): ret near (%rsp)
4855(3): nop (%rax)
4858(3): mov %rbx,%rdi
485b(5): call 0xffffcc05(%rip)
4860(2): xor %esi,%esi
4862(5): mov $0x1,%edx
4867(2): mov %eax,%edi
4869(5): call 0xffffcb87(%rip)
486e(4): cmp $0xffffffff,%rax
4872(2): jnz 0xffffffba(%rip)
4874(3): mov %rbx,%rdi
4877(1): pop %rbx
4878(1): pop %rbp
4879(2): pop %r12
487b(5): jmp 0xffffcae5(%rip)
4880(4): mov %r12d,0x0(%rbp)
4884(5): mov $0xffffffff,%eax
4889(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4890(3): test %rdi,%rdi
4893(1): push %rbx
4894(3): mov %rdi,%rbx
4897(2): jz 0x13(%rip)
4899(5): call 0xffffcc07(%rip)
489e(2): test %eax,%eax
48a0(2): jz 0xa(%rip)
48a2(6): test $0x100,(%rbx)
48a8(2): jnz 0x10(%rip)
48aa(3): mov %rbx,%rdi
48ad(1): pop %rbx
48ae(5): jmp 0xffffcbd2(%rip)
48b3(5): nop 0x0(%rax,%rax,1)
48b8(3): mov %rbx,%rdi
48bb(5): mov $0x1,%edx
48c0(2): xor %esi,%esi
48c2(5): call 0xe(%rip)
48c7(3): mov %rbx,%rdi
48ca(1): pop %rbx
48cb(5): jmp 0xffffcbb5(%rip)

"rpl_fseeko" :
48d0(4): mov 0x8(%rdi),%rax
48d4(4): cmp %rax,0x10(%rdi)
48d8(2): jz 0x8(%rip)
48da(5): jmp 0xffffcc26(%rip)
48df(1): nop 
48e0(4): mov 0x20(%rdi),%rax
48e4(4): cmp %rax,0x28(%rdi)
48e8(2): jnz 0xfffffff2(%rip)
48ea(5): cmp $0x0,0x48(%rdi)
48ef(2): jnz 0xffffffeb(%rip)
48f1(2): push %r12
48f3(1): push %rbp
48f4(3): mov %edx,%r12d
48f7(1): push %rbx
48f8(3): mov %rsi,%rbp
48fb(3): mov %rdi,%rbx
48fe(5): call 0xffffcb62(%rip)
4903(3): mov %r12d,%edx
4906(3): mov %rbp,%rsi
4909(2): mov %eax,%edi
490b(5): call 0xffffcae5(%rip)
4910(4): cmp $0xffffffff,%rax
4914(2): jz 0xe(%rip)
4916(3): and $0xef,(%rbx)
4919(7): mov %rax,0x90(%rbx)
4920(2): xor %eax,%eax
4922(1): pop %rbx
4923(1): pop %rbp
4924(2): pop %r12
4926(1): ret near (%rsp)

"rpl_mbrtowc" :
4930(2): push %r13
4932(2): push %r12
4934(3): mov %rsi,%r13
4937(1): push %rbp
4938(1): push %rbx
4939(3): mov %rdi,%rbx
493c(3): mov %rdx,%r12
493f(4): sub $0x18,%rsp
4943(9): mov $0x28,%rax
494c(5): mov %rax,0x8(%rsp)
4951(2): xor %eax,%eax
4953(5): lea 0x4(%rsp),%rax
4958(3): test %rdi,%rdi
495b(4): cmove %rax,%rbx
495f(3): mov %rbx,%rdi
4962(5): call 0xffffca6e(%rip)
4967(4): cmp $0xfffffffd,%rax
496b(3): mov %rax,%rbp
496e(2): jbe 0x22(%rip)
4970(3): test %r12,%r12
4973(2): jz 0x1d(%rip)
4975(2): xor %edi,%edi
4977(5): call 0xc9(%rip)
497c(2): test %al,%al
497e(2): jnz 0x12(%rip)
4980(5): movzx 0x0(%r13),%eax
4985(5): mov $0x1,%ebp
498a(2): mov %eax,(%rbx)
498c(4): nop 0x0(%rax)
4990(5): mov 0x8(%rsp),%rdx
4995(9): xor $0x28,%rdx
499e(3): mov %rbp,%rax
49a1(2): jnz 0xd(%rip)
49a3(4): add $0x18,%rsp
49a7(1): pop %rbx
49a8(1): pop %rbp
49a9(2): pop %r12
49ab(2): pop %r13
49ad(1): ret near (%rsp)
49ae(5): call 0xffffca02(%rip)

"close_stream" :
49c0(2): push %r12
49c2(1): push %rbp
49c3(3): mov %rdi,%rbp
49c6(1): push %rbx
49c7(5): call 0xffffc969(%rip)
49cc(3): mov 0x0(%rbp),%ebx
49cf(3): mov %rbp,%rdi
49d2(3): mov %rax,%r12
49d5(5): call 0xfffffe3b(%rip)
49da(3): and $0x20,%ebx
49dd(2): test %ebx,%ebx
49df(2): jnz 0x19(%rip)
49e1(2): test %eax,%eax
49e3(2): jz 0xc(%rip)
49e5(3): test %r12,%r12
49e8(5): mov $0xffffffff,%eax
49ed(2): jz 0x3b(%rip)
49ef(1): pop %rbx
49f0(1): pop %rbp
49f1(2): pop %r12
49f3(1): ret near (%rsp)
49f4(4): nop 0x0(%rax)
49f8(2): test %eax,%eax
49fa(2): jnz 0x1e(%rip)
49fc(5): call 0xffffc904(%rip)
4a01(6): mov $0x0,(%rax)
4a07(5): mov $0xffffffff,%eax
4a0c(1): pop %rbx
4a0d(1): pop %rbp
4a0e(2): pop %r12
4a10(1): ret near (%rsp)
4a11(7): nop 0x0(%rax)
4a18(1): pop %rbx
4a19(5): mov $0xffffffff,%eax
4a1e(1): pop %rbp
4a1f(2): pop %r12
4a21(1): ret near (%rsp)
4a22(6): nop 0x0(%rax,%rax,1)
4a28(5): call 0xffffc8d8(%rip)
4a2d(3): cmp $0x9,(%rax)
4a30(1): pop %rbx
4a31(1): pop %rbp
4a32(2): pop %r12
4a34(3): setnz %al
4a37(3): movzx %al,%eax
4a3a(2): neg %eax
4a3c(1): ret near (%rsp)

"hard_locale" :
4a40(4): sub $0x8,%rsp
4a44(2): xor %esi,%esi
4a46(5): call 0xffffca7a(%rip)
4a4b(3): mov %rax,%rdx
4a4e(5): mov $0x1,%eax
4a53(3): test %rdx,%rdx
4a56(2): jz 0x1f(%rip)
4a58(7): lea 0x1481(%rip),%rdi
4a5f(5): mov $0x2,%ecx
4a64(3): mov %rdx,%rsi
4a67(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4a69(3): setnbe %cl
4a6c(3): sbb $0x0,%cl
4a6f(2): xor %eax,%eax
4a71(2): test %cl,%cl
4a73(2): jnz 0xd(%rip)
4a75(4): add $0x8,%rsp
4a79(1): ret near (%rsp)
4a7a(6): nop 0x0(%rax,%rax,1)
4a80(7): lea 0x145b(%rip),%rdi
4a87(5): mov $0x6,%ecx
4a8c(3): mov %rdx,%rsi
4a8f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4a91(3): setnbe %al
4a94(2): sbb $0x0,%al
4a96(2): test %al,%al
4a98(3): setnz %al
4a9b(4): add $0x8,%rsp
4a9f(1): ret near (%rsp)

"locale_charset" :
4aa0(4): sub $0x8,%rsp
4aa4(5): mov $0xe,%edi
4aa9(5): call 0xffffc9e7(%rip)
4aae(3): test %rax,%rax
4ab1(2): jz 0x1f(%rip)
4ab3(3): cmp $0x0,(%rax)
4ab6(7): lea 0x142b(%rip),%rdx
4abd(4): cmove %rdx,%rax
4ac1(4): add $0x8,%rsp
4ac5(1): ret near (%rsp)
4ac6(a): nop 0x0(%rax,%rax,1)
4ad0(7): lea 0x1411(%rip),%rax
4ad7(4): add $0x8,%rsp
4adb(1): ret near (%rsp)

"__libc_csu_init" :
4ae0(2): push %r15
4ae2(2): push %r14
4ae4(3): mov %rdx,%r15
4ae7(2): push %r13
4ae9(2): push %r12
4aeb(7): lea 0x2030be(%rip),%r12
4af2(1): push %rbp
4af3(7): lea 0x2030be(%rip),%rbp
4afa(1): push %rbx
4afb(3): mov %edi,%r13d
4afe(3): mov %rsi,%r14
4b01(3): sub %r12,%rbp
4b04(4): sub $0x8,%rsp
4b08(4): sar $0x3,%rbp
4b0c(5): call 0xffffc7a4(%rip)
4b11(3): test %rbp,%rbp
4b14(2): jz 0x22(%rip)
4b16(2): xor %ebx,%ebx
4b18(8): nop 0x0(%rax,%rax,1)
4b20(3): mov %r15,%rdx
4b23(3): mov %r14,%rsi
4b26(3): mov %r13d,%edi
4b29(4): call 0x0(%r12,%rbx,8)
4b2d(4): add $0x1,%rbx
4b31(3): cmp %rbx,%rbp
4b34(2): jnz 0xffffffec(%rip)
4b36(4): add $0x8,%rsp
4b3a(1): pop %rbx
4b3b(1): pop %rbp
4b3c(2): pop %r12
4b3e(2): pop %r13
4b40(2): pop %r14
4b42(2): pop %r15
4b44(1): ret near (%rsp)

"atexit" :
4b60(7): mov 0x2034a1(%rip),%rdx
4b67(2): xor %esi,%esi
4b69(5): jmp 0xffffc9b7(%rip)

"_fini" :
4b70(4): sub $0x8,%rsp
4b74(4): add $0x8,%rsp
4b78(1): ret near (%rsp)

