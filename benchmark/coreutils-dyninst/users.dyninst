
"utmpxname@plt" :
13c0(6): jmp 0x205a7a(%rip)
13c6(5): push $0x0

"free@plt" :
13d0(6): jmp 0x205a72(%rip)
13d6(5): push $0x1

"abort@plt" :
13e0(6): jmp 0x205a6a(%rip)
13e6(5): push $0x2

"__errno_location@plt" :
13f0(6): jmp 0x205a62(%rip)
13f6(5): push $0x3

"strncpy@plt" :
1400(6): jmp 0x205a5a(%rip)
1406(5): push $0x4

"strncmp@plt" :
1410(6): jmp 0x205a52(%rip)
1416(5): push $0x5

"_exit@plt" :
1420(6): jmp 0x205a4a(%rip)
1426(5): push $0x6

"__fpending@plt" :
1430(6): jmp 0x205a42(%rip)
1436(5): push $0x7

"qsort@plt" :
1440(6): jmp 0x205a3a(%rip)
1446(5): push $0x8

"textdomain@plt" :
1450(6): jmp 0x205a32(%rip)
1456(5): push $0x9

"endutxent@plt" :
1460(6): jmp 0x205a2a(%rip)
1466(5): push $0xa

"fclose@plt" :
1470(6): jmp 0x205a22(%rip)
1476(5): push $0xb

"bindtextdomain@plt" :
1480(6): jmp 0x205a1a(%rip)
1486(5): push $0xc

"dcgettext@plt" :
1490(6): jmp 0x205a12(%rip)
1496(5): push $0xd

"__ctype_get_mb_cur_max@plt" :
14a0(6): jmp 0x205a0a(%rip)
14a6(5): push $0xe

"strlen@plt" :
14b0(6): jmp 0x205a02(%rip)
14b6(5): push $0xf

"__stack_chk_fail@plt" :
14c0(6): jmp 0x2059fa(%rip)
14c6(5): push $0x10

"getopt_long@plt" :
14d0(6): jmp 0x2059f2(%rip)
14d6(5): push $0x11

"mbrtowc@plt" :
14e0(6): jmp 0x2059ea(%rip)
14e6(5): push $0x12

"__overflow@plt" :
14f0(6): jmp 0x2059e2(%rip)
14f6(5): push $0x13

"strrchr@plt" :
1500(6): jmp 0x2059da(%rip)
1506(5): push $0x14

"lseek@plt" :
1510(6): jmp 0x2059d2(%rip)
1516(5): push $0x15

"memset@plt" :
1520(6): jmp 0x2059ca(%rip)
1526(5): push $0x16

"memcmp@plt" :
1530(6): jmp 0x2059c2(%rip)
1536(5): push $0x17

"fputs_unlocked@plt" :
1540(6): jmp 0x2059ba(%rip)
1546(5): push $0x18

"calloc@plt" :
1550(6): jmp 0x2059b2(%rip)
1556(5): push $0x19

"strcmp@plt" :
1560(6): jmp 0x2059aa(%rip)
1566(5): push $0x1a

"setutxent@plt" :
1570(6): jmp 0x2059a2(%rip)
1576(5): push $0x1b

"memcpy@plt" :
1580(6): jmp 0x20599a(%rip)
1586(5): push $0x1c

"kill@plt" :
1590(6): jmp 0x205992(%rip)
1596(5): push $0x1d

"fileno@plt" :
15a0(6): jmp 0x20598a(%rip)
15a6(5): push $0x1e

"malloc@plt" :
15b0(6): jmp 0x205982(%rip)
15b6(5): push $0x1f

"fflush@plt" :
15c0(6): jmp 0x20597a(%rip)
15c6(5): push $0x20

"nl_langinfo@plt" :
15d0(6): jmp 0x205972(%rip)
15d6(5): push $0x21

"__freading@plt" :
15e0(6): jmp 0x20596a(%rip)
15e6(5): push $0x22

"realloc@plt" :
15f0(6): jmp 0x205962(%rip)
15f6(5): push $0x23

"setlocale@plt" :
1600(6): jmp 0x20595a(%rip)
1606(5): push $0x24

"__printf_chk@plt" :
1610(6): jmp 0x205952(%rip)
1616(5): push $0x25

"getutxent@plt" :
1620(6): jmp 0x20594a(%rip)
1626(5): push $0x26

"error@plt" :
1630(6): jmp 0x205942(%rip)
1636(5): push $0x27

"fseeko@plt" :
1640(6): jmp 0x20593a(%rip)
1646(5): push $0x28

"__cxa_atexit@plt" :
1650(6): jmp 0x205932(%rip)
1656(5): push $0x29

"exit@plt" :
1660(6): jmp 0x20592a(%rip)
1666(5): push $0x2a

"fwrite@plt" :
1670(6): jmp 0x205922(%rip)
1676(5): push $0x2b

"__fprintf_chk@plt" :
1680(6): jmp 0x20591a(%rip)
1686(5): push $0x2c

"mbsinit@plt" :
1690(6): jmp 0x205912(%rip)
1696(5): push $0x2d

"iswprint@plt" :
16a0(6): jmp 0x20590a(%rip)
16a6(5): push $0x2e

"__ctype_b_loc@plt" :
16b0(6): jmp 0x205902(%rip)
16b6(5): push $0x2f

".plt.got" :
16c0(6): jmp 0x20591a(%rip)
16c6(2): nop 

"_init" :
1390(4): sub $0x8,%rsp
1394(7): mov 0x205c35(%rip),%rax
139b(3): test %rax,%rax
139e(2): jz 0x4(%rip)
13a0(2): call %rax
13a2(4): add $0x8,%rsp
13a6(1): ret near (%rsp)

"main" :
16d0(1): push %rbp
16d1(1): push %rbx
16d2(2): mov %edi,%ebx
16d4(3): mov %rsi,%rbp
16d7(4): sub $0x8,%rsp
16db(3): mov (%rsi),%rdi
16de(5): call 0xab2(%rip)
16e3(7): lea 0x3e77(%rip),%rsi
16ea(5): mov $0x6,%edi
16ef(5): call 0xffffff11(%rip)
16f4(7): lea 0x36cc(%rip),%rsi
16fb(7): lea 0x369c(%rip),%rdi
1702(5): call 0xfffffd7e(%rip)
1707(7): lea 0x3690(%rip),%rdi
170e(5): call 0xfffffd42(%rip)
1713(7): lea 0x746(%rip),%rdi
171a(5): call 0x3596(%rip)
171f(7): lea 0x36b9(%rip),%rax
1726(2): push $0x0
1728(7): mov 0x2058e1(%rip),%r8
172f(7): lea 0x3664(%rip),%rcx
1736(7): lea 0x35a7(%rip),%rdx
173d(2): mov %ebx,%edi
173f(1): push %rax
1740(7): lea 0x36a8(%rip),%rax
1747(6): mov $0x1,%r9d
174d(3): mov %rbp,%rsi
1750(1): push %rax
1751(7): lea 0x398(%rip),%rax
1758(1): push %rax
1759(2): xor %eax,%eax
175b(5): call 0x8f5(%rip)
1760(7): movsxd 0x205929(%rip),%rax
1767(4): add $0x20,%rsp
176b(2): sub %eax,%ebx
176d(2): jz 0x1c(%rip)
176f(3): sub $0x1,%ebx
1772(2): jnz 0x2a(%rip)
1774(5): mov 0x0(%rbp,%rax,8),%rdi
1779(2): xor %esi,%esi
177b(5): call 0x185(%rip)
1780(4): add $0x8,%rsp
1784(2): xor %eax,%eax
1786(1): pop %rbx
1787(1): pop %rbp
1788(1): ret near (%rsp)
1789(7): lea 0x3586(%rip),%rdi
1790(5): mov $0x1,%esi
1795(5): call 0x16b(%rip)
179a(2): jmp 0xffffffe6(%rip)
179c(5): mov 0x8(%rbp,%rax,8),%rdi
17a1(5): call 0x26ff(%rip)
17a6(7): lea 0x3653(%rip),%rsi
17ad(3): mov %rax,%rbx
17b0(5): mov $0x5,%edx
17b5(2): xor %edi,%edi
17b7(5): call 0xfffffcd9(%rip)
17bc(2): xor %edi,%edi
17be(3): mov %rax,%rdx
17c1(3): mov %rbx,%rcx
17c4(2): xor %esi,%esi
17c6(2): xor %eax,%eax
17c8(5): call 0xfffffe68(%rip)
17cd(5): mov $0x1,%edi
17d2(5): call 0x31e(%rip)

"_start" :
17e0(2): xor %ebp,%ebp
17e2(3): mov %rdx,%r9
17e5(1): pop %rsi
17e6(3): mov %rsp,%rdx
17e9(4): and $0xfffffff0,%rsp
17ed(1): push %rax
17ee(1): push %rsp
17ef(7): lea 0x34aa(%rip),%r8
17f6(7): lea 0x3433(%rip),%rcx
17fd(7): lea 0xfffffecc(%rip),%rdi
1804(6): call 0x2057be(%rip)
180a(1): hlt 

"deregister_tm_clones" :
1810(7): lea 0x205869(%rip),%rdi
1817(1): push %rbp
1818(7): lea 0x205861(%rip),%rax
181f(3): cmp %rdi,%rax
1822(3): mov %rsp,%rbp
1825(2): jz 0x1b(%rip)
1827(7): mov 0x205792(%rip),%rax
182e(3): test %rax,%rax
1831(2): jz 0xf(%rip)
1833(1): pop %rbp
1834(2): jmp %rax
1836(a): nop 0x0(%rax,%rax,1)
1840(1): pop %rbp
1841(1): ret near (%rsp)

"register_tm_clones" :
1850(7): lea 0x205829(%rip),%rdi
1857(7): lea 0x205822(%rip),%rsi
185e(1): push %rbp
185f(3): sub %rdi,%rsi
1862(3): mov %rsp,%rbp
1865(4): sar $0x3,%rsi
1869(3): mov %rsi,%rax
186c(4): shr $0x3f,%rax
1870(3): add %rax,%rsi
1873(3): sar $0x1,%rsi
1876(2): jz 0x1a(%rip)
1878(7): mov 0x205759(%rip),%rax
187f(3): test %rax,%rax
1882(2): jz 0xe(%rip)
1884(1): pop %rbp
1885(2): jmp %rax
1887(9): nop 0x0(%rax,%rax,1)
1890(1): pop %rbp
1891(1): ret near (%rsp)

"__do_global_dtors_aux" :
18a0(7): cmp $0x0,0x205821(%rip)
18a7(2): jnz 0x31(%rip)
18a9(8): cmp $0x0,0x20572f(%rip)
18b1(1): push %rbp
18b2(3): mov %rsp,%rbp
18b5(2): jz 0xe(%rip)
18b7(7): mov 0x20574a(%rip),%rdi
18be(5): call 0xfffffe02(%rip)
18c3(5): call 0xffffff4d(%rip)
18c8(7): mov $0x1,0x2057f9(%rip)
18cf(1): pop %rbp
18d0(1): ret near (%rsp)
18d1(7): nop 0x0(%rax)
18d8(2): REP ret near (%rsp)

"frame_dummy" :
18e0(1): push %rbp
18e1(3): mov %rsp,%rbp
18e4(1): pop %rbp
18e5(5): jmp 0xffffff6b(%rip)

"userid_compare" :
18f0(3): mov (%rsi),%rsi
18f3(3): mov (%rdi),%rdi
18f6(5): jmp 0xfffffc6a(%rip)

"users" :
1900(2): push %r15
1902(2): push %r14
1904(2): mov %esi,%ecx
1906(2): push %r13
1908(2): push %r12
190a(1): push %rbp
190b(1): push %rbx
190c(3): mov %rdi,%rbx
190f(4): sub $0x28,%rsp
1913(5): lea 0x10(%rsp),%rdx
1918(5): lea 0x8(%rsp),%rsi
191d(9): mov $0x28,%rax
1926(5): mov %rax,0x18(%rsp)
192b(2): xor %eax,%eax
192d(5): call 0x2f33(%rip)
1932(2): test %eax,%eax
1934(6): jnz 0x18a(%rip)
193a(5): mov 0x8(%rsp),%r12
193f(5): mov $0x8,%edx
1944(2): xor %ecx,%ecx
1946(3): mov %rdx,%rax
1949(5): mov 0x10(%rsp),%rbx
194e(3): mul %rax,%r12,%rdx
1951(6): jo 0x163(%rip)
1957(3): test %rax,%rax
195a(6): js 0x155(%rip)
1960(3): test %rcx,%rcx
1963(6): jnz 0x14c(%rip)
1969(8): lea 0x0(,%r12,8),%rdi
1971(5): lea 0xffffffff(%r12),%rbp
1976(5): call 0x2b6a(%rip)
197b(3): test %r12,%r12
197e(3): mov %rax,%r14
1981(6): jz 0x111(%rip)
1987(3): xor %r15d,%r15d
198a(6): nop 0x0(%rax,%rax,1)
1990(4): cmp $0x0,0x2c(%rbx)
1994(2): jz 0xc(%rip)
1996(4): cmp $0x7,(%rbx)
199a(6): jz 0xd9(%rip)
19a0(4): sub $0x1,%rbp
19a4(7): add $0x180,%rbx
19ab(4): cmp $0xffffffff,%rbp
19af(2): jnz 0xffffffe1(%rip)
19b1(7): lea 0xffffff38(%rip),%rcx
19b8(5): mov $0x8,%edx
19bd(3): mov %r15,%rsi
19c0(3): mov %r14,%rdi
19c3(5): call 0xfffffa7d(%rip)
19c8(3): test %r15,%r15
19cb(2): jz 0x77(%rip)
19cd(4): lea 0xffffffff(%r15),%r13
19d1(2): xor %ebx,%ebx
19d3(5): nop 0x0(%rax,%rax,1)
19d8(3): cmp %r13,%rbx
19db(4): mov 0x0(%r14,%rbx,8),%rdi
19df(7): mov 0x2056a2(%rip),%rsi
19e6(3): sbb %r12d,%r12d
19e9(4): and $0x16,%r12d
19ed(4): add $0xa,%r12d
19f1(3): cmp %r13,%rbx
19f4(2): sbb %ebp,%ebp
19f6(5): call 0xfffffb4a(%rip)
19fb(7): mov 0x205686(%rip),%rdi
1a02(3): and $0x16,%ebp
1a05(3): add $0xa,%ebp
1a08(4): mov 0x28(%rdi),%rax
1a0c(4): cmp 0x30(%rdi),%rax
1a10(2): jnb 0x78(%rip)
1a12(4): lea 0x1(%rax),%rdx
1a16(4): mov %rdx,0x28(%rdi)
1a1a(3): mov %bpl,(%rax)
1a1d(4): add $0x1,%rbx
1a21(3): cmp %r15,%rbx
1a24(2): jnz 0xffffffb4(%rip)
1a26(4): lea 0x0(%r14,%rbx,8),%rbx
1a2a(3): mov %r14,%rbp
1a2d(3): nop (%rax)
1a30(4): mov 0x0(%rbp),%rdi
1a34(4): add $0x8,%rbp
1a38(5): call 0xfffff998(%rip)
1a3d(3): cmp %rbx,%rbp
1a40(2): jnz 0xfffffff0(%rip)
1a42(3): mov %r14,%rdi
1a45(5): call 0xfffff98b(%rip)
1a4a(5): mov 0x10(%rsp),%rdi
1a4f(5): call 0xfffff981(%rip)
1a54(5): mov 0x18(%rsp),%rax
1a59(9): xor $0x28,%rax
1a62(2): jnz 0x48(%rip)
1a64(4): add $0x28,%rsp
1a68(1): pop %rbx
1a69(1): pop %rbp
1a6a(2): pop %r12
1a6c(2): pop %r13
1a6e(2): pop %r14
1a70(2): pop %r15
1a72(1): ret near (%rsp)
1a73(3): mov %rbx,%rdi
1a76(5): call 0x2d8a(%rip)
1a7b(4): mov %rax,0x0(%r14,%r15,8)
1a7f(4): add $0x1,%r15
1a83(5): jmp 0xffffff1d(%rip)
1a88(3): mov %r12d,%esi
1a8b(5): call 0xfffffa65(%rip)
1a90(2): jmp 0xffffff8d(%rip)
1a92(7): lea 0xfffffe57(%rip),%rcx
1a99(5): mov $0x8,%edx
1a9e(2): xor %esi,%esi
1aa0(3): mov %rax,%rdi
1aa3(5): call 0xfffff99d(%rip)
1aa8(2): jmp 0xffffff9a(%rip)
1aaa(5): call 0xfffffa16(%rip)
1aaf(5): call 0x2c81(%rip)
1ab4(5): mov $0x1,%ecx
1ab9(5): jmp 0xfffffe9e(%rip)
1abe(3): mov %rbx,%rdx
1ac1(5): mov $0x3,%esi
1ac6(2): xor %edi,%edi
1ac8(5): call 0x2208(%rip)
1acd(3): mov %rax,%rbx
1ad0(5): call 0xfffff920(%rip)
1ad5(2): mov (%rax),%esi
1ad7(7): lea 0x34f2(%rip),%rdx
1ade(3): mov %rbx,%rcx
1ae1(5): mov $0x1,%edi
1ae6(2): xor %eax,%eax
1ae8(5): call 0xfffffb48(%rip)
1aed(3): nop (%rax)
1af0(2): push %r13
1af2(2): push %r12
1af4(5): mov $0x5,%edx
1af9(1): push %rbp
1afa(1): push %rbx
1afb(2): mov %edi,%ebp
1afd(7): sub $0x88,%rsp
1b04(7): mov 0x2055d5(%rip),%rbx
1b0b(9): mov $0x28,%rax
1b14(5): mov %rax,0x78(%rsp)
1b19(2): xor %eax,%eax
1b1b(2): test %edi,%edi
1b1d(2): jz 0x30(%rip)
1b1f(7): lea 0x32f2(%rip),%rsi
1b26(2): xor %edi,%edi
1b28(5): call 0xfffff968(%rip)
1b2d(7): mov 0x20558c(%rip),%rdi
1b34(3): mov %rax,%rdx
1b37(3): mov %rbx,%rcx
1b3a(5): mov $0x1,%esi
1b3f(2): xor %eax,%eax
1b41(5): call 0xfffffb3f(%rip)
1b46(2): mov %ebp,%edi
1b48(5): call 0xfffffb18(%rip)
1b4d(7): lea 0x3196(%rip),%rsi
1b54(2): xor %edi,%edi
1b56(5): call 0xfffff93a(%rip)
1b5b(3): mov %rbx,%rdx
1b5e(3): mov %rax,%rsi
1b61(5): mov $0x1,%edi
1b66(2): xor %eax,%eax
1b68(5): call 0xfffffaa8(%rip)
1b6d(7): lea 0x32cc(%rip),%rsi
1b74(5): mov $0x5,%edx
1b79(2): xor %edi,%edi
1b7b(5): call 0xfffff915(%rip)
1b80(7): lea 0x3181(%rip),%rcx
1b87(7): lea 0x3188(%rip),%rdx
1b8e(3): mov %rax,%rsi
1b91(5): mov $0x1,%edi
1b96(2): xor %eax,%eax
1b98(5): call 0xfffffa78(%rip)
1b9d(7): mov 0x2054e4(%rip),%rbx
1ba4(7): lea 0x3305(%rip),%rsi
1bab(5): mov $0x5,%edx
1bb0(2): xor %edi,%edi
1bb2(5): call 0xfffff8de(%rip)
1bb7(3): mov %rbx,%rsi
1bba(3): mov %rax,%rdi
1bbd(5): call 0xfffff983(%rip)
1bc2(7): mov 0x2054bf(%rip),%rbx
1bc9(7): lea 0x3310(%rip),%rsi
1bd0(5): mov $0x5,%edx
1bd5(2): xor %edi,%edi
1bd7(5): call 0xfffff8b9(%rip)
1bdc(3): mov %rbx,%rsi
1bdf(3): mov %rax,%rdi
1be2(7): lea 0x3186(%rip),%rbx
1be9(5): call 0xfffff957(%rip)
1bee(7): lea 0x312f(%rip),%rax
1bf5(7): lea 0x3169(%rip),%rcx
1bfc(5): mov %rbx,0x40(%rsp)
1c01(7): lea 0x30dc(%rip),%rbx
1c08(9): mov $0x0,0x60(%rsp)
1c11(9): mov $0x0,0x68(%rsp)
1c1a(4): mov %rax,(%rsp)
1c1e(7): lea 0x3101(%rip),%rax
1c25(5): mov %rcx,0x30(%rsp)
1c2a(7): lea 0x3148(%rip),%rcx
1c31(3): mov %rsp,%rdx
1c34(5): mov %rax,0x8(%rsp)
1c39(7): lea 0x315e(%rip),%rax
1c40(5): mov %rcx,0x50(%rsp)
1c45(5): mov %rax,0x10(%rsp)
1c4a(7): lea 0x30e5(%rip),%rax
1c51(5): mov %rax,0x18(%rsp)
1c56(7): lea 0x30ef(%rip),%rax
1c5d(5): mov %rax,0x20(%rsp)
1c62(7): lea 0x30ed(%rip),%rax
1c69(5): mov %rax,0x28(%rsp)
1c6e(5): mov %rax,0x38(%rsp)
1c73(5): mov %rax,0x48(%rsp)
1c78(5): mov %rax,0x58(%rsp)
1c7d(3): nop (%rax)
1c80(4): add $0x10,%rdx
1c84(3): mov (%rdx),%rdi
1c87(3): test %rdi,%rdi
1c8a(2): jz 0x15(%rip)
1c8c(5): mov $0x6,%ecx
1c91(3): mov %rbx,%rsi
1c94(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c96(3): setnbe %al
1c99(2): sbb $0x0,%al
1c9b(2): test %al,%al
1c9d(2): jnz 0xffffffe3(%rip)
1c9f(4): mov 0x8(%rdx),%r12
1ca3(2): xor %edi,%edi
1ca5(5): mov $0x5,%edx
1caa(7): lea 0x30d2(%rip),%rsi
1cb1(3): test %r12,%r12
1cb4(6): jz 0xc7(%rip)
1cba(5): call 0xfffff7d6(%rip)
1cbf(7): lea 0x3252(%rip),%rcx
1cc6(7): lea 0x30cd(%rip),%rdx
1ccd(3): mov %rax,%rsi
1cd0(5): mov $0x1,%edi
1cd5(2): xor %eax,%eax
1cd7(5): call 0xfffff939(%rip)
1cdc(2): xor %esi,%esi
1cde(5): mov $0x5,%edi
1ce3(5): call 0xfffff91d(%rip)
1ce8(3): test %rax,%rax
1ceb(2): jz 0x1e(%rip)
1ced(7): lea 0x30b4(%rip),%rsi
1cf4(5): mov $0x3,%edx
1cf9(3): mov %rax,%rdi
1cfc(5): call 0xfffff714(%rip)
1d01(2): test %eax,%eax
1d03(6): jnz 0x10d(%rip)
1d09(7): lea 0x309c(%rip),%rsi
1d10(2): xor %edi,%edi
1d12(5): mov $0x5,%edx
1d17(5): call 0xfffff779(%rip)
1d1c(7): lea 0x2fc1(%rip),%rcx
1d23(7): lea 0x31ee(%rip),%rdx
1d2a(3): mov %rax,%rsi
1d2d(5): mov $0x1,%edi
1d32(2): xor %eax,%eax
1d34(5): call 0xfffff8dc(%rip)
1d39(3): cmp %rbx,%r12
1d3c(7): lea 0x2ffd(%rip),%rcx
1d43(7): lea 0x3817(%rip),%rbx
1d4a(4): cmove %rcx,%rbx
1d4e(7): lea 0x3233(%rip),%rsi
1d55(2): xor %edi,%edi
1d57(5): mov $0x5,%edx
1d5c(5): call 0xfffff734(%rip)
1d61(3): mov %rbx,%rcx
1d64(3): mov %rax,%rsi
1d67(3): mov %r12,%rdx
1d6a(5): mov $0x1,%edi
1d6f(2): xor %eax,%eax
1d71(5): call 0xfffff89f(%rip)
1d76(5): jmp 0xfffffdd0(%rip)
1d7b(5): call 0xfffff715(%rip)
1d80(7): lea 0x3191(%rip),%rcx
1d87(7): lea 0x300c(%rip),%rdx
1d8e(3): mov %rax,%rsi
1d91(5): mov $0x1,%edi
1d96(2): xor %eax,%eax
1d98(5): call 0xfffff878(%rip)
1d9d(2): xor %esi,%esi
1d9f(5): mov $0x5,%edi
1da4(5): call 0xfffff85c(%rip)
1da9(3): test %rax,%rax
1dac(2): jz 0x1a(%rip)
1dae(7): lea 0x2ff3(%rip),%rsi
1db5(5): mov $0x3,%edx
1dba(3): mov %rax,%rdi
1dbd(5): call 0xfffff653(%rip)
1dc2(2): test %eax,%eax
1dc4(2): jnz 0x45(%rip)
1dc6(7): lea 0x2fdf(%rip),%rsi
1dcd(5): mov $0x5,%edx
1dd2(2): xor %edi,%edi
1dd4(7): lea 0x2f09(%rip),%r12
1ddb(7): lea 0x2f5e(%rip),%rbx
1de2(5): call 0xfffff6ae(%rip)
1de7(7): lea 0x2ef6(%rip),%rcx
1dee(7): lea 0x3123(%rip),%rdx
1df5(3): mov %rax,%rsi
1df8(5): mov $0x1,%edi
1dfd(2): xor %eax,%eax
1dff(5): call 0xfffff811(%rip)
1e04(5): jmp 0xffffff4a(%rip)
1e09(7): lea 0x2ed4(%rip),%r12
1e10(7): mov 0x205271(%rip),%r13
1e17(7): lea 0x3122(%rip),%rsi
1e1e(2): xor %edi,%edi
1e20(5): mov $0x5,%edx
1e25(5): call 0xfffff66b(%rip)
1e2a(3): mov %r13,%rsi
1e2d(3): mov %rax,%rdi
1e30(5): call 0xfffff710(%rip)
1e35(5): jmp 0xfffffed4(%rip)

"usage" :
1af0(2): push %r13
1af2(2): push %r12
1af4(5): mov $0x5,%edx
1af9(1): push %rbp
1afa(1): push %rbx
1afb(2): mov %edi,%ebp
1afd(7): sub $0x88,%rsp
1b04(7): mov 0x2055d5(%rip),%rbx
1b0b(9): mov $0x28,%rax
1b14(5): mov %rax,0x78(%rsp)
1b19(2): xor %eax,%eax
1b1b(2): test %edi,%edi
1b1d(2): jz 0x30(%rip)
1b1f(7): lea 0x32f2(%rip),%rsi
1b26(2): xor %edi,%edi
1b28(5): call 0xfffff968(%rip)
1b2d(7): mov 0x20558c(%rip),%rdi
1b34(3): mov %rax,%rdx
1b37(3): mov %rbx,%rcx
1b3a(5): mov $0x1,%esi
1b3f(2): xor %eax,%eax
1b41(5): call 0xfffffb3f(%rip)
1b46(2): mov %ebp,%edi
1b48(5): call 0xfffffb18(%rip)
1b4d(7): lea 0x3196(%rip),%rsi
1b54(2): xor %edi,%edi
1b56(5): call 0xfffff93a(%rip)
1b5b(3): mov %rbx,%rdx
1b5e(3): mov %rax,%rsi
1b61(5): mov $0x1,%edi
1b66(2): xor %eax,%eax
1b68(5): call 0xfffffaa8(%rip)
1b6d(7): lea 0x32cc(%rip),%rsi
1b74(5): mov $0x5,%edx
1b79(2): xor %edi,%edi
1b7b(5): call 0xfffff915(%rip)
1b80(7): lea 0x3181(%rip),%rcx
1b87(7): lea 0x3188(%rip),%rdx
1b8e(3): mov %rax,%rsi
1b91(5): mov $0x1,%edi
1b96(2): xor %eax,%eax
1b98(5): call 0xfffffa78(%rip)
1b9d(7): mov 0x2054e4(%rip),%rbx
1ba4(7): lea 0x3305(%rip),%rsi
1bab(5): mov $0x5,%edx
1bb0(2): xor %edi,%edi
1bb2(5): call 0xfffff8de(%rip)
1bb7(3): mov %rbx,%rsi
1bba(3): mov %rax,%rdi
1bbd(5): call 0xfffff983(%rip)
1bc2(7): mov 0x2054bf(%rip),%rbx
1bc9(7): lea 0x3310(%rip),%rsi
1bd0(5): mov $0x5,%edx
1bd5(2): xor %edi,%edi
1bd7(5): call 0xfffff8b9(%rip)
1bdc(3): mov %rbx,%rsi
1bdf(3): mov %rax,%rdi
1be2(7): lea 0x3186(%rip),%rbx
1be9(5): call 0xfffff957(%rip)
1bee(7): lea 0x312f(%rip),%rax
1bf5(7): lea 0x3169(%rip),%rcx
1bfc(5): mov %rbx,0x40(%rsp)
1c01(7): lea 0x30dc(%rip),%rbx
1c08(9): mov $0x0,0x60(%rsp)
1c11(9): mov $0x0,0x68(%rsp)
1c1a(4): mov %rax,(%rsp)
1c1e(7): lea 0x3101(%rip),%rax
1c25(5): mov %rcx,0x30(%rsp)
1c2a(7): lea 0x3148(%rip),%rcx
1c31(3): mov %rsp,%rdx
1c34(5): mov %rax,0x8(%rsp)
1c39(7): lea 0x315e(%rip),%rax
1c40(5): mov %rcx,0x50(%rsp)
1c45(5): mov %rax,0x10(%rsp)
1c4a(7): lea 0x30e5(%rip),%rax
1c51(5): mov %rax,0x18(%rsp)
1c56(7): lea 0x30ef(%rip),%rax
1c5d(5): mov %rax,0x20(%rsp)
1c62(7): lea 0x30ed(%rip),%rax
1c69(5): mov %rax,0x28(%rsp)
1c6e(5): mov %rax,0x38(%rsp)
1c73(5): mov %rax,0x48(%rsp)
1c78(5): mov %rax,0x58(%rsp)
1c7d(3): nop (%rax)
1c80(4): add $0x10,%rdx
1c84(3): mov (%rdx),%rdi
1c87(3): test %rdi,%rdi
1c8a(2): jz 0x15(%rip)
1c8c(5): mov $0x6,%ecx
1c91(3): mov %rbx,%rsi
1c94(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c96(3): setnbe %al
1c99(2): sbb $0x0,%al
1c9b(2): test %al,%al
1c9d(2): jnz 0xffffffe3(%rip)
1c9f(4): mov 0x8(%rdx),%r12
1ca3(2): xor %edi,%edi
1ca5(5): mov $0x5,%edx
1caa(7): lea 0x30d2(%rip),%rsi
1cb1(3): test %r12,%r12
1cb4(6): jz 0xc7(%rip)
1cba(5): call 0xfffff7d6(%rip)
1cbf(7): lea 0x3252(%rip),%rcx
1cc6(7): lea 0x30cd(%rip),%rdx
1ccd(3): mov %rax,%rsi
1cd0(5): mov $0x1,%edi
1cd5(2): xor %eax,%eax
1cd7(5): call 0xfffff939(%rip)
1cdc(2): xor %esi,%esi
1cde(5): mov $0x5,%edi
1ce3(5): call 0xfffff91d(%rip)
1ce8(3): test %rax,%rax
1ceb(2): jz 0x1e(%rip)
1ced(7): lea 0x30b4(%rip),%rsi
1cf4(5): mov $0x3,%edx
1cf9(3): mov %rax,%rdi
1cfc(5): call 0xfffff714(%rip)
1d01(2): test %eax,%eax
1d03(6): jnz 0x10d(%rip)
1d09(7): lea 0x309c(%rip),%rsi
1d10(2): xor %edi,%edi
1d12(5): mov $0x5,%edx
1d17(5): call 0xfffff779(%rip)
1d1c(7): lea 0x2fc1(%rip),%rcx
1d23(7): lea 0x31ee(%rip),%rdx
1d2a(3): mov %rax,%rsi
1d2d(5): mov $0x1,%edi
1d32(2): xor %eax,%eax
1d34(5): call 0xfffff8dc(%rip)
1d39(3): cmp %rbx,%r12
1d3c(7): lea 0x2ffd(%rip),%rcx
1d43(7): lea 0x3817(%rip),%rbx
1d4a(4): cmove %rcx,%rbx
1d4e(7): lea 0x3233(%rip),%rsi
1d55(2): xor %edi,%edi
1d57(5): mov $0x5,%edx
1d5c(5): call 0xfffff734(%rip)
1d61(3): mov %rbx,%rcx
1d64(3): mov %rax,%rsi
1d67(3): mov %r12,%rdx
1d6a(5): mov $0x1,%edi
1d6f(2): xor %eax,%eax
1d71(5): call 0xfffff89f(%rip)
1d76(5): jmp 0xfffffdd0(%rip)
1d7b(5): call 0xfffff715(%rip)
1d80(7): lea 0x3191(%rip),%rcx
1d87(7): lea 0x300c(%rip),%rdx
1d8e(3): mov %rax,%rsi
1d91(5): mov $0x1,%edi
1d96(2): xor %eax,%eax
1d98(5): call 0xfffff878(%rip)
1d9d(2): xor %esi,%esi
1d9f(5): mov $0x5,%edi
1da4(5): call 0xfffff85c(%rip)
1da9(3): test %rax,%rax
1dac(2): jz 0x1a(%rip)
1dae(7): lea 0x2ff3(%rip),%rsi
1db5(5): mov $0x3,%edx
1dba(3): mov %rax,%rdi
1dbd(5): call 0xfffff653(%rip)
1dc2(2): test %eax,%eax
1dc4(2): jnz 0x45(%rip)
1dc6(7): lea 0x2fdf(%rip),%rsi
1dcd(5): mov $0x5,%edx
1dd2(2): xor %edi,%edi
1dd4(7): lea 0x2f09(%rip),%r12
1ddb(7): lea 0x2f5e(%rip),%rbx
1de2(5): call 0xfffff6ae(%rip)
1de7(7): lea 0x2ef6(%rip),%rcx
1dee(7): lea 0x3123(%rip),%rdx
1df5(3): mov %rax,%rsi
1df8(5): mov $0x1,%edi
1dfd(2): xor %eax,%eax
1dff(5): call 0xfffff811(%rip)
1e04(5): jmp 0xffffff4a(%rip)
1e09(7): lea 0x2ed4(%rip),%r12
1e10(7): mov 0x205271(%rip),%r13
1e17(7): lea 0x3122(%rip),%rsi
1e1e(2): xor %edi,%edi
1e20(5): mov $0x5,%edx
1e25(5): call 0xfffff66b(%rip)
1e2a(3): mov %r13,%rsi
1e2d(3): mov %rax,%rdi
1e30(5): call 0xfffff710(%rip)
1e35(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1e40(7): mov %rdi,0x205291(%rip)
1e47(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1e50(7): mov %dil,0x205279(%rip)
1e57(1): ret near (%rsp)

"close_stdout" :
1e60(1): push %rbp
1e61(1): push %rbx
1e62(4): sub $0x8,%rsp
1e66(7): mov 0x20521b(%rip),%rdi
1e6d(5): call 0x2b83(%rip)
1e72(2): test %eax,%eax
1e74(2): jz 0x18(%rip)
1e76(5): call 0xfffff57a(%rip)
1e7b(7): cmp $0x0,0x20524e(%rip)
1e82(3): mov %rax,%rbx
1e85(2): jz 0x1e(%rip)
1e87(3): cmp $0x20,(%rax)
1e8a(2): jnz 0x19(%rip)
1e8c(7): mov 0x20522d(%rip),%rdi
1e93(5): call 0x2b5d(%rip)
1e98(2): test %eax,%eax
1e9a(2): jnz 0x48(%rip)
1e9c(4): add $0x8,%rsp
1ea0(1): pop %rbx
1ea1(1): pop %rbp
1ea2(1): ret near (%rsp)
1ea3(7): lea 0x3116(%rip),%rsi
1eaa(2): xor %edi,%edi
1eac(5): mov $0x5,%edx
1eb1(5): call 0xfffff5df(%rip)
1eb6(7): mov 0x20521b(%rip),%rdi
1ebd(3): mov %rax,%rbp
1ec0(3): test %rdi,%rdi
1ec3(2): jz 0x2a(%rip)
1ec5(5): call 0x1ddb(%rip)
1eca(2): mov (%rbx),%esi
1ecc(7): lea 0x30f9(%rip),%rdx
1ed3(3): mov %rax,%rcx
1ed6(3): mov %rbp,%r8
1ed9(2): xor %edi,%edi
1edb(2): xor %eax,%eax
1edd(5): call 0xfffff753(%rip)
1ee2(6): mov 0x205130(%rip),%edi
1ee8(5): call 0xfffff538(%rip)
1eed(2): mov (%rbx),%esi
1eef(7): lea 0x30da(%rip),%rdx
1ef6(3): mov %rax,%rcx
1ef9(2): xor %edi,%edi
1efb(2): xor %eax,%eax
1efd(5): call 0xfffff733(%rip)
1f02(2): jmp 0xffffffe0(%rip)

"parse_long_options" :
1f10(2): push %r13
1f12(2): push %r12
1f14(3): mov %r8,%r13
1f17(1): push %rbp
1f18(1): push %rbx
1f19(3): mov %rdx,%rbp
1f1c(3): mov %rcx,%r12
1f1f(7): sub $0xe8,%rsp
1f26(2): test %al,%al
1f28(2): jz 0x3c(%rip)
1f2a(5): movaps %xmm0,0x60(%rsp)
1f2f(5): movaps %xmm1,0x70(%rsp)
1f34(8): movaps %xmm2,0x80(%rsp)
1f3c(8): movaps %xmm3,0x90(%rsp)
1f44(8): movaps %xmm4,0xa0(%rsp)
1f4c(8): movaps %xmm5,0xb0(%rsp)
1f54(8): movaps %xmm6,0xc0(%rsp)
1f5c(8): movaps %xmm7,0xd0(%rsp)
1f64(9): mov $0x28,%rax
1f6d(5): mov %rax,0x28(%rsp)
1f72(2): xor %eax,%eax
1f74(3): cmp $0x2,%edi
1f77(6): mov 0x205123(%rip),%ebx
1f7d(a): mov $0x0,0x205119(%rip)
1f87(2): jz 0x39(%rip)
1f89(5): mov 0x28(%rsp),%rax
1f8e(9): xor $0x28,%rax
1f97(6): mov %ebx,0x205103(%rip)
1f9d(a): mov $0x0,0x2050e9(%rip)
1fa7(6): jnz 0xa3(%rip)
1fad(7): add $0xe8,%rsp
1fb4(1): pop %rbx
1fb5(1): pop %rbp
1fb6(2): pop %r12
1fb8(2): pop %r13
1fba(1): ret near (%rsp)
1fbb(5): nop 0x0(%rax,%rax,1)
1fc0(7): lea 0x204bb9(%rip),%rcx
1fc7(7): lea 0x3005(%rip),%rdx
1fce(3): xor %r8d,%r8d
1fd1(5): mov %r9,0x8(%rsp)
1fd6(5): call 0xfffff4fa(%rip)
1fdb(3): cmp $0xff,%eax
1fde(2): jz 0xffffffab(%rip)
1fe0(3): cmp $0x68,%eax
1fe3(5): mov 0x8(%rsp),%r9
1fe8(2): jz 0x58(%rip)
1fea(3): cmp $0x76,%eax
1fed(2): jnz 0xffffff9c(%rip)
1fef(8): lea 0x110(%rsp),%rax
1ff7(7): mov 0x20508a(%rip),%rdi
1ffe(5): lea 0x10(%rsp),%r8
2003(3): mov %r13,%rcx
2006(3): mov %r12,%rdx
2009(3): mov %rbp,%rsi
200c(5): mov %rax,0x18(%rsp)
2011(5): lea 0x30(%rsp),%rax
2016(8): mov $0x30,0x10(%rsp)
201e(8): mov $0x30,0x14(%rsp)
2026(5): mov %rax,0x20(%rsp)
202b(5): call 0x22d5(%rip)
2030(2): xor %edi,%edi
2032(5): call 0xfffff62e(%rip)
2037(9): nop 0x0(%rax,%rax,1)
2040(2): xor %edi,%edi
2042(3): call %r9
2045(5): jmp 0xffffff44(%rip)
204a(5): call 0xfffff476(%rip)

"parse_gnu_standard_options_only" :
2050(2): push %r14
2052(2): push %r13
2054(3): mov %r8,%r14
2057(2): push %r12
2059(1): push %rbp
205a(3): mov %rdx,%r12
205d(1): push %rbx
205e(3): mov %rcx,%r13
2061(7): sub $0xd0,%rsp
2068(2): test %al,%al
206a(8): mov 0x100(%rsp),%rbp
2072(2): jz 0x39(%rip)
2074(5): movaps %xmm0,0x50(%rsp)
2079(5): movaps %xmm1,0x60(%rsp)
207e(5): movaps %xmm2,0x70(%rsp)
2083(8): movaps %xmm3,0x80(%rsp)
208b(8): movaps %xmm4,0x90(%rsp)
2093(8): movaps %xmm5,0xa0(%rsp)
209b(8): movaps %xmm6,0xb0(%rsp)
20a3(8): movaps %xmm7,0xc0(%rsp)
20ab(9): mov $0x28,%rax
20b4(5): mov %rax,0x18(%rsp)
20b9(2): xor %eax,%eax
20bb(7): lea 0x349f(%rip),%rdx
20c2(7): lea 0x2f0a(%rip),%rax
20c9(3): test %r9b,%r9b
20cc(7): lea 0x204aad(%rip),%rcx
20d3(4): cmove %rax,%rdx
20d7(3): xor %r8d,%r8d
20da(6): mov 0x204fc0(%rip),%ebx
20e0(a): mov $0x1,0x204fb6(%rip)
20ea(5): call 0xfffff3e6(%rip)
20ef(3): cmp $0xff,%eax
20f2(2): jz 0x66(%rip)
20f4(3): cmp $0x68,%eax
20f7(6): jz 0x89(%rip)
20fd(3): cmp $0x76,%eax
2100(2): jnz 0x50(%rip)
2102(8): lea 0x108(%rsp),%rax
210a(7): mov 0x204f77(%rip),%rdi
2111(3): mov %rsp,%r8
2114(3): mov %r14,%rcx
2117(3): mov %r13,%rdx
211a(3): mov %r12,%rsi
211d(5): mov %rax,0x8(%rsp)
2122(5): lea 0x20(%rsp),%rax
2127(7): mov $0x30,(%rsp)
212e(8): mov $0x30,0x4(%rsp)
2136(5): mov %rax,0x10(%rsp)
213b(5): call 0x21c5(%rip)
2140(2): xor %edi,%edi
2142(5): call 0xfffff51e(%rip)
2147(9): nop 0x0(%rax,%rax,1)
2150(6): mov 0x204ec2(%rip),%edi
2156(2): call %rbp
2158(5): mov 0x18(%rsp),%rax
215d(9): xor $0x28,%rax
2166(6): mov %ebx,0x204f34(%rip)
216c(2): jnz 0x1a(%rip)
216e(7): add $0xd0,%rsp
2175(1): pop %rbx
2176(1): pop %rbp
2177(2): pop %r12
2179(2): pop %r13
217b(2): pop %r14
217d(1): ret near (%rsp)
217e(2): nop 
2180(2): xor %edi,%edi
2182(2): call %rbp
2184(2): jmp 0xffffffd4(%rip)
2186(5): call 0xfffff33a(%rip)

"set_program_name" :
2190(3): test %rdi,%rdi
2193(1): push %rbx
2194(2): jz 0x79(%rip)
2196(5): mov $0x2f,%esi
219b(3): mov %rdi,%rbx
219e(5): call 0xfffff362(%rip)
21a3(3): test %rax,%rax
21a6(2): jz 0x57(%rip)
21a8(4): lea 0x1(%rax),%r8
21ac(3): mov %r8,%rdx
21af(3): sub %rbx,%rdx
21b2(4): cmp $0x6,%rdx
21b6(2): jle 0x47(%rip)
21b8(4): lea 0xfffffffa(%rax),%rsi
21bc(7): lea 0x2e5d(%rip),%rdi
21c3(5): mov $0x7,%ecx
21c8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
21ca(3): setnbe %dl
21cd(3): sbb $0x0,%dl
21d0(2): test %dl,%dl
21d2(2): jnz 0x2b(%rip)
21d4(7): lea 0x2e4d(%rip),%rdi
21db(5): mov $0x3,%ecx
21e0(3): mov %r8,%rsi
21e3(3): mov %r8,%rbx
21e6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
21e8(3): setnbe %dl
21eb(3): sbb $0x0,%dl
21ee(2): test %dl,%dl
21f0(2): jnz 0xd(%rip)
21f2(4): lea 0x4(%rax),%rbx
21f6(7): mov %rbx,0x204e83(%rip)
21fd(7): mov %rbx,0x204edc(%rip)
2204(7): mov %rbx,0x204e8d(%rip)
220b(1): pop %rbx
220c(1): ret near (%rsp)
220d(7): mov 0x204eac(%rip),%rcx
2214(7): lea 0x2dcd(%rip),%rdi
221b(5): mov $0x37,%edx
2220(5): mov $0x1,%esi
2225(5): call 0xfffff44b(%rip)
222a(5): call 0xfffff1b6(%rip)

"gettext_quote.part.1" :
2230(1): push %rbp
2231(1): push %rbx
2232(3): mov %rdi,%rbp
2235(2): mov %esi,%ebx
2237(4): sub $0x8,%rsp
223b(5): call 0x2895(%rip)
2240(3): movzx (%rax),%edx
2243(3): and $0xdf,%edx
2246(3): cmp $0x55,%dl
2249(2): jz 0x77(%rip)
224b(3): cmp $0x47,%dl
224e(2): jz 0x22(%rip)
2250(7): lea 0x2de4(%rip),%rax
2257(7): lea 0x2ddf(%rip),%rdx
225e(3): cmp $0x9,%ebx
2261(4): cmovne %rdx,%rax
2265(4): add $0x8,%rsp
2269(1): pop %rbx
226a(1): pop %rbp
226b(1): ret near (%rsp)
226c(4): nop 0x0(%rax)
2270(4): movzx 0x1(%rax),%edx
2274(3): and $0xdf,%edx
2277(3): cmp $0x42,%dl
227a(2): jnz 0xffffffd6(%rip)
227c(4): cmp $0x31,0x2(%rax)
2280(2): jnz 0xffffffd0(%rip)
2282(4): cmp $0x38,0x3(%rax)
2286(2): jnz 0xffffffca(%rip)
2288(4): cmp $0x30,0x4(%rax)
228c(2): jnz 0xffffffc4(%rip)
228e(4): cmp $0x33,0x5(%rax)
2292(2): jnz 0xffffffbe(%rip)
2294(4): cmp $0x30,0x6(%rax)
2298(2): jnz 0xffffffb8(%rip)
229a(4): cmp $0x0,0x7(%rax)
229e(2): jnz 0xffffffb2(%rip)
22a0(4): cmp $0x60,0x0(%rbp)
22a4(7): lea 0x2d89(%rip),%rax
22ab(7): lea 0x2d86(%rip),%rdx
22b2(4): cmovne %rdx,%rax
22b6(4): add $0x8,%rsp
22ba(1): pop %rbx
22bb(1): pop %rbp
22bc(1): ret near (%rsp)
22bd(3): nop (%rax)
22c0(4): movzx 0x1(%rax),%edx
22c4(3): and $0xdf,%edx
22c7(3): cmp $0x54,%dl
22ca(2): jnz 0xffffff86(%rip)
22cc(4): movzx 0x2(%rax),%edx
22d0(3): and $0xdf,%edx
22d3(3): cmp $0x46,%dl
22d6(6): jnz 0xffffff7a(%rip)
22dc(4): cmp $0x2d,0x3(%rax)
22e0(6): jnz 0xffffff70(%rip)
22e6(4): cmp $0x38,0x4(%rax)
22ea(6): jnz 0xffffff66(%rip)
22f0(4): cmp $0x0,0x5(%rax)
22f4(6): jnz 0xffffff5c(%rip)
22fa(4): cmp $0x60,0x0(%rbp)
22fe(7): lea 0x2d27(%rip),%rax
2305(7): lea 0x2d24(%rip),%rdx
230c(4): cmovne %rdx,%rax
2310(4): add $0x8,%rsp
2314(1): pop %rbx
2315(1): pop %rbp
2316(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2320(2): push %r15
2322(2): push %r14
2324(3): mov %r8d,%r15d
2327(2): push %r13
2329(2): push %r12
232b(3): mov %rdi,%r14
232e(1): push %rbp
232f(1): push %rbx
2330(3): mov %r9d,%ebx
2333(3): mov %rsi,%r13
2336(3): mov %rcx,%rbp
2339(3): and $0x2,%ebx
233c(7): sub $0xb8,%rsp
2343(8): mov 0xf0(%rsp),%rax
234b(5): mov %rdx,0x10(%rsp)
2350(5): mov %r8d,0x8(%rsp)
2355(5): mov %r9d,0x78(%rsp)
235a(5): mov %rax,0x20(%rsp)
235f(8): mov 0xf8(%rsp),%rax
2367(5): mov %rax,0x68(%rsp)
236c(8): mov 0x100(%rsp),%rax
2374(5): mov %rax,0x60(%rsp)
2379(9): mov $0x28,%rax
2382(8): mov %rax,0xa8(%rsp)
238a(2): xor %eax,%eax
238c(5): call 0xfffff114(%rip)
2391(4): cmp $0xa,%r15d
2395(5): mov %rax,0x58(%rsp)
239a(6): jnbe 0x11b5(%rip)
23a0(7): lea 0x2cf9(%rip),%rcx
23a7(3): mov %r15d,%edx
23aa(4): movsxd 0x0(%rcx,%rdx,4),%rax
23ae(3): add %rcx,%rax
23b1(2): jmp %rax
23b3(5): mov $0x1,0xe(%rsp)
23b8(5): mov $0x0,0x7c(%rsp)
23bd(3): xor %r12d,%r12d
23c0(9): mov $0x0,0x50(%rsp)
23c9(5): mov $0x1,0xf(%rsp)
23ce(5): mov $0x0,0xd(%rsp)
23d3(7): lea 0x2c63(%rip),%rax
23da(9): mov $0x1,0x18(%rsp)
23e3(3): xor %r15d,%r15d
23e6(8): mov $0x2,0x8(%rsp)
23ee(5): mov %rax,0x48(%rsp)
23f3(3): xor %r11d,%r11d
23f6(3): mov %rbp,%rax
23f9(3): mov %r12d,%r8d
23fc(3): mov %r11,%rbp
23ff(3): mov %rax,%r11
2402(6): nop 0x0(%rax,%rax,1)
2408(3): cmp %rbp,%r11
240b(4): setnz %r12b
240f(4): cmp $0xffffffff,%r11
2413(2): jnz 0xf(%rip)
2415(5): mov 0x10(%rsp),%rax
241a(4): cmp $0x0,0x0(%rax,%rbp,1)
241e(4): setnz %r12b
2422(3): test %r12b,%r12b
2425(6): jz 0x65b(%rip)
242b(5): cmp $0x2,0x8(%rsp)
2430(5): mov 0x10(%rsp),%rdi
2435(4): lea 0x0(%rdi,%rbp,1),%r9
2439(3): setnz %al
243c(4): and 0xd(%rsp),%al
2440(3): mov %eax,%r10d
2443(6): jz 0xad(%rip)
2449(5): mov 0x18(%rsp),%rax
244e(3): test %rax,%rax
2451(6): jz 0x42f(%rip)
2457(4): cmp $0xffffffff,%r11
245b(5): lea 0x0(%rbp,%rax,1),%rbx
2460(2): jnz 0x30(%rip)
2462(4): cmp $0x1,%rax
2466(2): jbe 0x2a(%rip)
2468(5): mov %r8b,0x38(%rsp)
246d(5): mov %r10b,0x30(%rsp)
2472(5): mov %r9,0x28(%rsp)
2477(5): call 0xfffff039(%rip)
247c(6): movzx 0x38(%rsp),%r8d
2482(6): movzx 0x30(%rsp),%r10d
2488(3): mov %rax,%r11
248b(5): mov 0x28(%rsp),%r9
2490(3): cmp %r11,%rbx
2493(5): mov %r10b,0x28(%rsp)
2498(6): jnbe 0x5b8(%rip)
249e(5): mov 0x18(%rsp),%rdx
24a3(5): mov 0x48(%rsp),%rsi
24a8(3): mov %r9,%rdi
24ab(5): mov %r11,0x40(%rsp)
24b0(5): mov %r8b,0x38(%rsp)
24b5(5): mov %r9,0x30(%rsp)
24ba(5): call 0xfffff076(%rip)
24bf(2): test %eax,%eax
24c1(5): mov 0x30(%rsp),%r9
24c6(6): movzx 0x38(%rsp),%r8d
24cc(5): mov 0x40(%rsp),%r11
24d1(6): jnz 0x57f(%rip)
24d7(5): cmp $0x0,0xf(%rsp)
24dc(6): movzx 0x28(%rsp),%r10d
24e2(6): jnz 0xf83(%rip)
24e8(8): nop 0x0(%rax,%rax,1)
24f0(4): movzx (%r9),%ebx
24f4(3): cmp $0x7e,%bl
24f7(6): jnbe 0x321(%rip)
24fd(7): lea 0x2bc8(%rip),%rcx
2504(3): movzx %bl,%edx
2507(4): movsxd 0x0(%rcx,%rdx,4),%rax
250b(3): add %rcx,%rax
250e(2): jmp %rax
2510(3): xor %r10d,%r10d
2513(4): cmp $0x1,%r11
2517(3): setnz %al
251a(4): cmp $0xffffffff,%r11
251e(2): jnz 0xe(%rip)
2520(5): mov 0x10(%rsp),%rax
2525(4): cmp $0x0,0x1(%rax)
2529(3): setnz %al
252c(5): cmp $0x2,0x8(%rsp)
2531(3): setz %dl
2534(2): test %al,%al
2536(6): jz 0x252(%rip)
253c(3): xor %r12d,%r12d
253f(2): xor %eax,%eax
2541(7): nop 0x0(%rax)
2548(5): cmp $0x1,0xd(%rsp)
254d(6): jnz 0x115(%rip)
2553(2): test %dl,%dl
2555(6): jnz 0x10d(%rip)
255b(5): mov 0x20(%rsp),%rsi
2560(3): test %rsi,%rsi
2563(2): jz 0x16(%rip)
2565(2): mov %ebx,%edx
2567(3): shr $0x5,%dl
256a(3): movzx %dl,%edx
256d(3): mov 0x0(%rsi,%rdx,4),%edx
2570(3): bt %ebx,%edx
2573(6): jb 0x150(%rip)
2579(3): test %r10b,%r10b
257c(6): jnz 0x147(%rip)
2582(3): xor $0x1,%eax
2585(4): add $0x1,%rbp
2589(3): and %r8d,%eax
258c(2): test %al,%al
258e(2): jz 0x22(%rip)
2590(3): cmp %r15,%r13
2593(2): jbe 0x7(%rip)
2595(5): mov $0x27,0x0(%r14,%r15,1)
259a(4): lea 0x1(%r15),%rax
259e(3): cmp %rax,%r13
25a1(2): jbe 0x8(%rip)
25a3(6): mov $0x27,0x1(%r14,%r15,1)
25a9(4): add $0x2,%r15
25ad(3): xor %r8d,%r8d
25b0(3): cmp %r13,%r15
25b3(2): jnb 0x6(%rip)
25b5(4): mov %bl,0x0(%r14,%r15,1)
25b9(5): movzx 0xe(%rsp),%edi
25be(4): add $0x1,%r15
25c2(5): mov $0x0,%eax
25c7(3): test %r12b,%r12b
25ca(3): cmove %eax,%edi
25cd(5): mov %dil,0xe(%rsp)
25d2(5): jmp 0xfffffe36(%rip)
25d7(9): nop 0x0(%rax,%rax,1)
25e0(3): xor %r10d,%r10d
25e3(4): mov 0x8(%rsp),%eax
25e7(3): cmp $0x2,%eax
25ea(6): jz 0x5be(%rip)
25f0(3): cmp $0x5,%eax
25f3(6): jz 0x575(%rip)
25f9(3): cmp $0x2,%eax
25fc(5): mov $0x3f,%ebx
2601(3): setz %dl
2604(3): xor %r12d,%r12d
2607(2): xor %eax,%eax
2609(5): jmp 0xffffff3f(%rip)
260e(2): nop 
2610(3): xor %r10d,%r10d
2613(5): cmp $0x2,0x8(%rsp)
2618(6): jz 0x508(%rip)
261e(5): mov %r12b,0x7c(%rsp)
2623(2): xor %edx,%edx
2625(2): xor %eax,%eax
2627(5): mov $0x27,%ebx
262c(5): jmp 0xffffff1c(%rip)
2631(7): nop 0x0(%rax)
2638(5): mov $0x9,%edx
263d(5): mov $0x74,%ebx
2642(5): cmp $0x2,0x8(%rsp)
2647(3): setz %al
264a(4): and 0xf(%rsp),%al
264e(6): jnz 0x150(%rip)
2654(5): cmp $0x0,0xd(%rsp)
2659(2): jnz 0x67(%rip)
265b(2): mov %edx,%ebx
265d(3): xor %r12d,%r12d
2660(2): xor %eax,%eax
2662(5): cmp $0x0,0xf(%rsp)
2667(6): jnz 0xfffffef4(%rip)
266d(5): jmp 0xffffff0c(%rip)
2672(6): nop 0x0(%rax,%rax,1)
2678(5): mov $0x8,%edx
267d(5): mov $0x62,%ebx
2682(2): jmp 0xffffffd2(%rip)
2684(4): nop 0x0(%rax)
2688(5): cmp $0x2,0x8(%rsp)
268d(6): jz 0x3d3(%rip)
2693(5): cmp $0x0,0xd(%rsp)
2698(6): jz 0x218(%rip)
269e(5): cmp $0x0,0xf(%rsp)
26a3(6): jz 0x20d(%rip)
26a9(6): cmp $0x0,0x18(%rsp)
26af(6): jnz 0x3bc(%rip)
26b5(5): mov $0x5c,%ebx
26ba(6): nop 0x0(%rax,%rax,1)
26c0(3): xor %r12d,%r12d
26c3(5): cmp $0x2,0x8(%rsp)
26c8(3): setz %dl
26cb(5): cmp $0x0,0xf(%rsp)
26d0(2): mov %edx,%eax
26d2(6): jnz 0x856(%rip)
26d8(3): mov %r8d,%eax
26db(3): xor $0x1,%eax
26de(2): and %dl,%al
26e0(2): jz 0x31(%rip)
26e2(3): cmp %r15,%r13
26e5(2): jbe 0x7(%rip)
26e7(5): mov $0x27,0x0(%r14,%r15,1)
26ec(4): lea 0x1(%r15),%rdx
26f0(3): cmp %rdx,%r13
26f3(2): jbe 0x8(%rip)
26f5(6): mov $0x24,0x1(%r14,%r15,1)
26fb(4): lea 0x2(%r15),%rdx
26ff(3): cmp %rdx,%r13
2702(2): jbe 0x8(%rip)
2704(6): mov $0x27,0x2(%r14,%r15,1)
270a(4): add $0x3,%r15
270e(3): mov %eax,%r8d
2711(3): cmp %r15,%r13
2714(2): jbe 0x7(%rip)
2716(5): mov $0x5c,0x0(%r14,%r15,1)
271b(4): add $0x1,%r15
271f(4): add $0x1,%rbp
2723(5): jmp 0xfffffe8d(%rip)
2728(8): nop 0x0(%rax,%rax,1)
2730(5): cmp $0x0,0xd(%rsp)
2735(6): jnz 0x1ce(%rip)
273b(2): xor %edx,%edx
273d(5): test $0x1,0x78(%rsp)
2742(6): jz 0xffffff19(%rip)
2748(4): add $0x1,%rbp
274c(5): jmp 0xfffffcbc(%rip)
2751(7): nop 0x0(%rax)
2758(5): cmp $0x2,0x8(%rsp)
275d(3): setz %dl
2760(2): xor %eax,%eax
2762(5): jmp 0xfffffde6(%rip)
2767(9): nop 0x0(%rax,%rax,1)
2770(5): mov $0x7,%edx
2775(5): mov $0x61,%ebx
277a(5): jmp 0xfffffeda(%rip)
277f(1): nop 
2780(5): cmp $0x2,0x8(%rsp)
2785(3): setz %dl
2788(3): test %rbp,%rbp
278b(6): jnz 0xfffffdb1(%rip)
2791(5): movzx 0xf(%rsp),%eax
2796(2): and %dl,%al
2798(6): jz 0xfffffdb0(%rip)
279e(3): mov %r11,%rbp
27a1(8): mov $0x2,0x8(%rsp)
27a9(5): jmp 0x700(%rip)
27ae(2): nop 
27b0(5): cmp $0x2,0x8(%rsp)
27b5(3): setz %dl
27b8(3): xor %r12d,%r12d
27bb(2): jmp 0xffffffd6(%rip)
27bd(3): nop (%rax)
27c0(5): cmp $0x2,0x8(%rsp)
27c5(5): mov $0x20,%ebx
27ca(3): setz %dl
27cd(2): jmp 0xffffffc4(%rip)
27cf(1): nop 
27d0(5): mov $0xd,%edx
27d5(5): mov $0x72,%ebx
27da(5): jmp 0xfffffe68(%rip)
27df(1): nop 
27e0(5): mov $0xc,%edx
27e5(5): mov $0x66,%ebx
27ea(5): jmp 0xfffffe6a(%rip)
27ef(1): nop 
27f0(5): mov $0xb,%edx
27f5(5): mov $0x76,%ebx
27fa(5): jmp 0xfffffe5a(%rip)
27ff(1): nop 
2800(5): mov $0xa,%edx
2805(5): mov $0x6e,%ebx
280a(5): jmp 0xfffffe38(%rip)
280f(1): nop 
2810(3): xor %r10d,%r10d
2813(5): nop 0x0(%rax,%rax,1)
2818(6): cmp $0x1,0x58(%rsp)
281e(6): jnz 0x3aa(%rip)
2824(5): mov %r11,0x38(%rsp)
2829(5): mov %r8b,0x30(%rsp)
282e(5): mov %r10b,0x28(%rsp)
2833(5): call 0xffffee7d(%rip)
2838(3): mov (%rax),%rcx
283b(3): movzx %bl,%edx
283e(6): movzx 0x28(%rsp),%r10d
2844(6): movzx 0x30(%rsp),%r8d
284a(5): mov 0x38(%rsp),%r11
284f(5): mov $0x1,%edi
2854(4): movzx 0x0(%rcx,%rdx,2),%eax
2858(4): and $0x4000,%ax
285c(4): setnz %r12b
2860(3): setz %al
2863(4): and 0xd(%rsp),%al
2867(2): test %al,%al
2869(6): jnz 0x998(%rip)
286f(5): cmp $0x2,0x8(%rsp)
2874(3): setz %dl
2877(5): jmp 0xfffffcd1(%rip)
287c(4): nop 0x0(%rax)
2880(4): movzx (%r9),%ebx
2884(3): cmp $0x7e,%bl
2887(2): jnbe 0xffffff89(%rip)
2889(7): lea 0x2a38(%rip),%rcx
2890(3): movzx %bl,%edx
2893(4): movsxd 0x0(%rcx,%rdx,4),%rax
2897(3): add %rcx,%rax
289a(2): jmp %rax
289c(4): nop 0x0(%rax)
28a0(3): xor %r10d,%r10d
28a3(5): cmp $0x0,0xd(%rsp)
28a8(6): jnz 0xfffffdf6(%rip)
28ae(2): nop 
28b0(5): mov $0x5c,%edx
28b5(5): mov $0x5c,%ebx
28ba(5): jmp 0xfffffd9a(%rip)
28bf(1): nop 
28c0(5): mov $0xc,%edx
28c5(3): xor %r10d,%r10d
28c8(5): mov $0x66,%ebx
28cd(5): jmp 0xfffffd87(%rip)
28d2(6): nop 0x0(%rax,%rax,1)
28d8(5): mov $0xa,%edx
28dd(3): xor %r10d,%r10d
28e0(5): mov $0x6e,%ebx
28e5(5): jmp 0xfffffd5d(%rip)
28ea(6): nop 0x0(%rax,%rax,1)
28f0(5): mov $0x61,%ebx
28f5(5): jmp 0xfffffdcb(%rip)
28fa(6): nop 0x0(%rax,%rax,1)
2900(3): xor %r10d,%r10d
2903(5): cmp $0x2,0x8(%rsp)
2908(3): setz %dl
290b(5): cmp $0x0,0xf(%rsp)
2910(6): jnz 0xb9a(%rip)
2916(3): mov %r8d,%eax
2919(3): mov %r15,%rcx
291c(3): xor $0x1,%eax
291f(2): and %dl,%al
2921(2): jz 0x2f(%rip)
2923(3): cmp %r15,%r13
2926(2): jbe 0x7(%rip)
2928(5): mov $0x27,0x0(%r14,%r15,1)
292d(4): lea 0x1(%r15),%rcx
2931(3): cmp %rcx,%r13
2934(2): jbe 0x8(%rip)
2936(6): mov $0x24,0x1(%r14,%r15,1)
293c(4): lea 0x2(%r15),%rcx
2940(3): cmp %rcx,%r13
2943(6): jnbe 0x636(%rip)
2949(4): lea 0x3(%r15),%rcx
294d(3): mov %eax,%r8d
2950(3): cmp %rcx,%r13
2953(2): jbe 0x7(%rip)
2955(5): mov $0x5c,0x0(%r14,%rcx,1)
295a(5): cmp $0x2,0x8(%rsp)
295f(4): lea 0x1(%rcx),%r15
2963(6): jz 0x606(%rip)
2969(4): lea 0x1(%rbp),%rax
296d(3): cmp %r11,%rax
2970(2): jnb 0x1b(%rip)
2972(5): mov 0x10(%rsp),%rax
2977(5): movzx 0x1(%rax,%rbp,1),%eax
297c(4): mov %al,0x28(%rsp)
2980(3): sub $0x30,%eax
2983(2): cmp $0x9,%al
2985(6): jbe 0x834(%rip)
298b(3): mov %r12d,%eax
298e(5): mov $0x30,%ebx
2993(3): xor %r12d,%r12d
2996(5): jmp 0xfffffbb2(%rip)
299b(5): nop 0x0(%rax,%rax,1)
29a0(5): cmp $0x2,0x8(%rsp)
29a5(3): mov %r10d,%r12d
29a8(3): setz %dl
29ab(3): xor %r10d,%r10d
29ae(2): xor %eax,%eax
29b0(5): jmp 0xfffffb98(%rip)
29b5(3): nop (%rax)
29b8(5): cmp $0x2,0x8(%rsp)
29bd(3): setz %dl
29c0(3): xor %r10d,%r10d
29c3(5): jmp 0xfffffdc5(%rip)
29c8(8): nop 0x0(%rax,%rax,1)
29d0(5): cmp $0x2,0x8(%rsp)
29d5(3): setz %dl
29d8(3): xor %r10d,%r10d
29db(3): xor %r12d,%r12d
29de(5): jmp 0xfffffdb3(%rip)
29e3(5): nop 0x0(%rax,%rax,1)
29e8(5): cmp $0x2,0x8(%rsp)
29ed(3): mov %r10d,%r12d
29f0(5): mov $0x20,%ebx
29f5(3): setz %dl
29f8(3): xor %r10d,%r10d
29fb(5): jmp 0xfffffd96(%rip)
2a00(5): mov $0xd,%edx
2a05(3): xor %r10d,%r10d
2a08(5): mov $0x72,%ebx
2a0d(5): jmp 0xfffffc35(%rip)
2a12(6): nop 0x0(%rax,%rax,1)
2a18(5): mov $0x76,%ebx
2a1d(5): jmp 0xfffffca3(%rip)
2a22(6): nop 0x0(%rax,%rax,1)
2a28(5): mov $0x9,%edx
2a2d(3): xor %r10d,%r10d
2a30(5): mov $0x74,%ebx
2a35(5): jmp 0xfffffc0d(%rip)
2a3a(6): nop 0x0(%rax,%rax,1)
2a40(5): mov $0x62,%ebx
2a45(5): jmp 0xfffffc7b(%rip)
2a4a(6): nop 0x0(%rax,%rax,1)
2a50(3): xor %r10d,%r10d
2a53(5): jmp 0xfffffa9d(%rip)
2a58(8): nop 0x0(%rax,%rax,1)
2a60(5): cmp $0x0,0xf(%rsp)
2a65(6): jnz 0x96b(%rip)
2a6b(4): add $0x1,%rbp
2a6f(3): mov %r8d,%eax
2a72(3): xor %r12d,%r12d
2a75(5): mov $0x5c,%ebx
2a7a(5): jmp 0xfffffb12(%rip)
2a7f(1): nop 
2a80(5): cmp $0x2,0x8(%rsp)
2a85(5): movzx 0xf(%rsp),%ebx
2a8a(3): mov %r8d,%r12d
2a8d(3): mov %r11,%rbp
2a90(3): setz %dl
2a93(2): mov %ebx,%eax
2a95(3): test %r15,%r15
2a98(3): setz %cl
2a9b(2): and %edx,%eax
2a9d(2): and %cl,%al
2a9f(6): jnz 0xa67(%rip)
2aa5(2): mov %ebx,%eax
2aa7(3): xor $0x1,%eax
2aaa(2): and %al,%dl
2aac(6): jz 0x970(%rip)
2ab2(5): cmp $0x0,0x7c(%rsp)
2ab7(6): jz 0x963(%rip)
2abd(5): cmp $0x0,0xe(%rsp)
2ac2(6): jnz 0x9fb(%rip)
2ac8(3): test %r13,%r13
2acb(3): setz %al
2ace(6): cmp $0x0,0x50(%rsp)
2ad4(3): setnz %dl
2ad7(2): and %dl,%al
2ad9(6): jz 0xa23(%rip)
2adf(5): mov 0x50(%rsp),%r13
2ae4(7): lea 0x2552(%rip),%rbx
2aeb(4): mov $0x27,(%r14)
2aef(8): mov $0x2,0x8(%rsp)
2af7(6): mov $0x1,%r15d
2afd(9): mov $0x1,0x18(%rsp)
2b06(5): mov $0x0,0xf(%rsp)
2b0b(5): mov %rbx,0x48(%rsp)
2b10(4): mov %al,0x7c(%rsp)
2b14(5): jmp 0xfffff8df(%rip)
2b19(7): nop 0x0(%rax)
2b20(5): cmp $0x0,0xf(%rsp)
2b25(6): jnz 0x8ab(%rip)
2b2b(3): test %r13,%r13
2b2e(6): jz 0x402(%rip)
2b34(2): xor %edx,%edx
2b36(6): cmp $0x0,0x50(%rsp)
2b3c(6): jnz 0x3f4(%rip)
2b42(5): mov %r13,0x50(%rsp)
2b47(4): add $0x3,%r15
2b4b(2): xor %eax,%eax
2b4d(5): mov %r12b,0x7c(%rsp)
2b52(3): xor %r8d,%r8d
2b55(3): mov %rdx,%r13
2b58(5): mov $0x27,%ebx
2b5d(5): jmp 0xfffffa1c(%rip)
2b62(6): nop 0x0(%rax,%rax,1)
2b68(5): test $0x4,0x78(%rsp)
2b6d(2): jz 0x23(%rip)
2b6f(4): lea 0x2(%rbp),%rcx
2b73(3): cmp %r11,%rcx
2b76(2): jnb 0x1a(%rip)
2b78(5): mov 0x10(%rsp),%rax
2b7d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2b82(6): jz 0x790(%rip)
2b88(8): nop 0x0(%rax,%rax,1)
2b90(2): xor %edx,%edx
2b92(3): xor %r12d,%r12d
2b95(2): xor %eax,%eax
2b97(5): mov $0x3f,%ebx
2b9c(5): jmp 0xfffff9ac(%rip)
2ba1(7): nop 0x0(%rax)
2ba8(5): cmp $0x0,0xf(%rsp)
2bad(6): jnz 0x823(%rip)
2bb3(3): xor %r12d,%r12d
2bb6(2): xor %eax,%eax
2bb8(5): mov $0x3f,%ebx
2bbd(5): jmp 0xfffff9bc(%rip)
2bc2(6): nop 0x0(%rax,%rax,1)
2bc8(8): lea 0xa0(%rsp),%rax
2bd0(4): cmp $0xffffffff,%r11
2bd4(c): mov $0x0,0xa0(%rsp)
2be0(5): mov %rax,0x28(%rsp)
2be5(2): jnz 0x2f(%rip)
2be7(5): mov 0x10(%rsp),%rdi
2bec(5): mov %r8b,0x40(%rsp)
2bf1(5): mov %r10b,0x38(%rsp)
2bf6(5): mov %r9,0x30(%rsp)
2bfb(5): call 0xffffe8b5(%rip)
2c00(6): movzx 0x40(%rsp),%r8d
2c06(6): movzx 0x38(%rsp),%r10d
2c0c(3): mov %rax,%r11
2c0f(5): mov 0x30(%rsp),%r9
2c14(8): lea 0x9c(%rsp),%rax
2c1c(2): xor %ecx,%ecx
2c1e(4): mov %bl,0x7e(%rsp)
2c22(5): mov %r8b,0x7d(%rsp)
2c27(3): mov %rcx,%rbx
2c2a(8): mov %r9,0x88(%rsp)
2c32(5): mov %rax,0x38(%rsp)
2c37(5): mov %r10b,0x7f(%rsp)
2c3c(8): mov %r15,0x80(%rsp)
2c44(5): mov %r14,0x40(%rsp)
2c49(5): mov %r13,0x70(%rsp)
2c4e(5): mov %r11,0x30(%rsp)
2c53(5): mov 0x10(%rsp),%rax
2c58(5): lea 0x0(%rbp,%rbx,1),%r14
2c5d(5): mov 0x30(%rsp),%rdx
2c62(5): mov 0x28(%rsp),%rcx
2c67(5): mov 0x38(%rsp),%rdi
2c6c(4): lea 0x0(%rax,%r14,1),%r13
2c70(3): sub %r14,%rdx
2c73(3): mov %r13,%rsi
2c76(5): call 0x1afa(%rip)
2c7b(3): test %rax,%rax
2c7e(3): mov %rax,%r15
2c81(2): jz 0x50(%rip)
2c83(4): cmp $0xffffffff,%rax
2c87(6): jz 0x61e(%rip)
2c8d(4): cmp $0xfffffffe,%rax
2c91(6): jz 0x5a0(%rip)
2c97(5): cmp $0x2,0x8(%rsp)
2c9c(3): setz %al
2c9f(4): and 0xf(%rsp),%al
2ca3(6): jnz 0x19d(%rip)
2ca9(7): mov 0x9c(%rsp),%edi
2cb0(5): call 0xffffe9f0(%rip)
2cb5(5): mov 0x28(%rsp),%rdi
2cba(2): test %eax,%eax
2cbc(5): mov $0x0,%eax
2cc1(4): cmove %eax,%r12d
2cc5(3): add %r15,%rbx
2cc8(5): call 0xffffe9c8(%rip)
2ccd(2): test %eax,%eax
2ccf(2): jz 0xffffff84(%rip)
2cd1(3): mov %r12d,%edx
2cd4(3): mov %rbx,%rdi
2cd7(6): movzx 0x7d(%rsp),%r8d
2cdd(3): xor $0x1,%edx
2ce0(5): movzx 0x7e(%rsp),%ebx
2ce5(6): movzx 0x7f(%rsp),%r10d
2ceb(4): and 0xd(%rsp),%dl
2cef(8): mov 0x80(%rsp),%r15
2cf7(5): mov 0x40(%rsp),%r14
2cfc(5): mov 0x70(%rsp),%r13
2d01(5): mov 0x30(%rsp),%r11
2d06(4): cmp $0x1,%rdi
2d0a(6): jbe 0x601(%rip)
2d10(3): mov %rdi,%rcx
2d13(2): xor %esi,%esi
2d15(6): movzx 0xf(%rsp),%r9d
2d1b(3): add %rbp,%rcx
2d1e(5): mov 0x10(%rsp),%rdi
2d23(5): jmp 0xbb(%rip)
2d28(8): nop 0x0(%rax,%rax,1)
2d30(5): cmp $0x2,0x8(%rsp)
2d35(3): setz %al
2d38(3): test %r9b,%r9b
2d3b(6): jnz 0x4b5(%rip)
2d41(3): mov %r8d,%esi
2d44(3): xor $0x1,%esi
2d47(3): and %sil,%al
2d4a(2): jz 0x31(%rip)
2d4c(3): cmp %r15,%r13
2d4f(2): jbe 0x7(%rip)
2d51(5): mov $0x27,0x0(%r14,%r15,1)
2d56(4): lea 0x1(%r15),%rsi
2d5a(3): cmp %rsi,%r13
2d5d(2): jbe 0x8(%rip)
2d5f(6): mov $0x24,0x1(%r14,%r15,1)
2d65(4): lea 0x2(%r15),%rsi
2d69(3): cmp %rsi,%r13
2d6c(2): jbe 0x8(%rip)
2d6e(6): mov $0x27,0x2(%r14,%r15,1)
2d74(4): add $0x3,%r15
2d78(3): mov %eax,%r8d
2d7b(3): cmp %r15,%r13
2d7e(2): jbe 0x7(%rip)
2d80(5): mov $0x5c,0x0(%r14,%r15,1)
2d85(4): lea 0x1(%r15),%rax
2d89(3): cmp %rax,%r13
2d8c(2): jbe 0xf(%rip)
2d8e(2): mov %ebx,%eax
2d90(3): shr $0x6,%al
2d93(3): add $0x30,%eax
2d96(5): mov %al,0x1(%r14,%r15,1)
2d9b(4): lea 0x2(%r15),%rax
2d9f(3): cmp %rax,%r13
2da2(2): jbe 0x12(%rip)
2da4(2): mov %ebx,%eax
2da6(3): shr $0x3,%al
2da9(3): and $0x7,%eax
2dac(3): add $0x30,%eax
2daf(5): mov %al,0x2(%r14,%r15,1)
2db4(3): and $0x7,%ebx
2db7(4): add $0x1,%rbp
2dbb(4): add $0x3,%r15
2dbf(3): add $0x30,%ebx
2dc2(3): cmp %rcx,%rbp
2dc5(6): jnb 0xfffff7eb(%rip)
2dcb(2): mov %edx,%esi
2dcd(3): cmp %r15,%r13
2dd0(2): jbe 0x6(%rip)
2dd2(4): mov %bl,0x0(%r14,%r15,1)
2dd6(4): movzx 0x0(%rdi,%rbp,1),%ebx
2dda(4): add $0x1,%r15
2dde(2): test %dl,%dl
2de0(6): jnz 0xffffff50(%rip)
2de6(2): mov %esi,%eax
2de8(3): xor $0x1,%eax
2deb(3): and %r8d,%eax
2dee(3): test %r10b,%r10b
2df1(2): jz 0x10(%rip)
2df3(3): cmp %r15,%r13
2df6(2): jbe 0x7(%rip)
2df8(5): mov $0x5c,0x0(%r14,%r15,1)
2dfd(4): add $0x1,%r15
2e01(4): add $0x1,%rbp
2e05(3): cmp %rcx,%rbp
2e08(6): jnb 0xfffff784(%rip)
2e0e(2): test %al,%al
2e10(6): jz 0x3fe(%rip)
2e16(3): cmp %r15,%r13
2e19(2): jbe 0x7(%rip)
2e1b(5): mov $0x27,0x0(%r14,%r15,1)
2e20(4): lea 0x1(%r15),%rax
2e24(3): cmp %rax,%r13
2e27(2): jbe 0x8(%rip)
2e29(6): mov $0x27,0x1(%r14,%r15,1)
2e2f(4): add $0x2,%r15
2e33(3): xor %r10d,%r10d
2e36(3): xor %r8d,%r8d
2e39(2): jmp 0xffffff94(%rip)
2e3b(5): nop 0x0(%rax,%rax,1)
2e40(4): cmp $0x1,%r15
2e44(6): jz 0xfffffe65(%rip)
2e4a(5): mov 0x10(%rsp),%rdi
2e4f(4): lea 0x0(%rdi,%r15,1),%rcx
2e53(5): lea 0x1(%rdi,%r14,1),%rdx
2e58(4): lea 0x0(%rcx,%r14,1),%r8
2e5c(2): jmp 0x11(%rip)
2e5e(2): nop 
2e60(4): add $0x1,%rdx
2e64(3): cmp %rdx,%r8
2e67(6): jz 0xfffffe42(%rip)
2e6d(3): movzx (%rdx),%ecx
2e70(3): sub $0x5b,%ecx
2e73(3): cmp $0x21,%cl
2e76(2): jnbe 0xffffffea(%rip)
2e78(5): mov $0x1,%esi
2e7d(3): shl/sal %cl,%rsi
2e80(3): mov %rsi,%rcx
2e83(a): mov $0x8589934635,%rsi
2e8d(3): test %rsi,%rcx
2e90(2): jz 0xffffffd0(%rip)
2e92(5): mov 0x40(%rsp),%r14
2e97(5): mov 0x70(%rsp),%r13
2e9c(5): mov 0x30(%rsp),%rbp
2ea1(8): mov $0x2,0x8(%rsp)
2ea9(5): cmp $0x0,0xd(%rsp)
2eae(2): jz 0x12(%rip)
2eb0(2): test %al,%al
2eb2(5): mov $0x4,%eax
2eb7(5): cmove 0x8(%rsp),%eax
2ebc(4): mov %eax,0x8(%rsp)
2ec0(4): sub $0x8,%rsp
2ec4(3): mov %rbp,%rcx
2ec7(3): mov %r13,%rsi
2eca(4): push 0x68(%rsp)
2ece(4): push 0x78(%rsp)
2ed2(3): mov %r14,%rdi
2ed5(2): push $0x0
2ed7(8): mov 0x98(%rsp),%r9d
2edf(5): mov 0x28(%rsp),%r8d
2ee4(5): mov 0x30(%rsp),%rdx
2ee9(4): and $0xfd,%r9d
2eed(5): call 0xfffff433(%rip)
2ef2(4): add $0x20,%rsp
2ef6(3): mov %rax,%r15
2ef9(8): mov 0xa8(%rsp),%rbx
2f01(9): xor $0x28,%rbx
2f0a(3): mov %r15,%rax
2f0d(6): jnz 0x606(%rip)
2f13(7): add $0xb8,%rsp
2f1a(1): pop %rbx
2f1b(1): pop %rbp
2f1c(2): pop %r12
2f1e(2): pop %r13
2f20(2): pop %r14
2f22(2): pop %r15
2f24(1): ret near (%rsp)
2f25(3): nop (%rax)
2f28(3): mov %r11,%rbp
2f2b(5): jmp 0xffffff7e(%rip)
2f30(3): cmp %r15,%r13
2f33(2): jbe 0x7(%rip)
2f35(5): mov $0x27,0x0(%r14,%r15,1)
2f3a(4): lea 0x1(%r15),%rax
2f3e(3): cmp %rax,%r13
2f41(2): jbe 0x8(%rip)
2f43(6): mov $0x5c,0x1(%r14,%r15,1)
2f49(4): lea 0x2(%r15),%rax
2f4d(3): cmp %rax,%r13
2f50(6): jbe 0x5f2(%rip)
2f56(3): mov %r13,%rdx
2f59(6): mov $0x27,0x2(%r14,%r15,1)
2f5f(5): mov 0x50(%rsp),%r13
2f64(5): jmp 0xfffffbde(%rip)
2f69(3): mov %r12d,%eax
2f6c(5): mov $0x30,%ebx
2f71(3): xor %r12d,%r12d
2f74(5): jmp 0xfffff605(%rip)
2f79(6): mov $0x27,0x2(%r14,%r15,1)
2f7f(5): jmp 0xfffff9ca(%rip)
2f84(2): test %ebx,%ebx
2f86(6): jnz 0xfffff42d(%rip)
2f8c(5): mov $0x1,0xd(%rsp)
2f91(3): test %r13,%r13
2f94(6): jnz 0x596(%rip)
2f9a(7): lea 0x209c(%rip),%rax
2fa1(9): mov $0x0,0x50(%rsp)
2faa(5): mov $0x1,0xe(%rsp)
2faf(5): mov $0x0,0x7c(%rsp)
2fb4(3): xor %r12d,%r12d
2fb7(5): mov $0x0,0xf(%rsp)
2fbc(9): mov $0x1,0x18(%rsp)
2fc5(5): mov %rax,0x48(%rsp)
2fca(6): mov $0x1,%r15d
2fd0(8): mov $0x2,0x8(%rsp)
2fd8(5): jmp 0xfffff41b(%rip)
2fdd(3): nop (%rax)
2fe0(2): test %ebx,%ebx
2fe2(6): jnz 0x3fb(%rip)
2fe8(3): test %r13,%r13
2feb(6): jz 0x22b(%rip)
2ff1(4): mov $0x22,(%r14)
2ff5(5): mov $0x1,0xe(%rsp)
2ffa(3): xor %r12d,%r12d
2ffd(5): mov $0x0,0x7c(%rsp)
3002(9): mov $0x0,0x50(%rsp)
300b(7): lea 0x2029(%rip),%rax
3012(5): mov $0x0,0xf(%rsp)
3017(5): mov $0x1,0xd(%rsp)
301c(9): mov $0x1,0x18(%rsp)
3025(6): mov $0x1,%r15d
302b(5): mov %rax,0x48(%rsp)
3030(5): jmp 0xfffff3c3(%rip)
3035(7): lea 0x1fff(%rip),%rax
303c(5): mov $0x1,0xe(%rsp)
3041(5): mov $0x0,0x7c(%rsp)
3046(3): xor %r12d,%r12d
3049(9): mov $0x0,0x50(%rsp)
3052(5): mov $0x1,0xf(%rsp)
3057(5): mov $0x1,0xd(%rsp)
305c(9): mov $0x1,0x18(%rsp)
3065(3): xor %r15d,%r15d
3068(5): mov %rax,0x48(%rsp)
306d(8): mov $0x5,0x8(%rsp)
3075(5): jmp 0xfffff37e(%rip)
307a(5): mov $0x1,0xe(%rsp)
307f(5): mov $0x0,0x7c(%rsp)
3084(3): xor %r12d,%r12d
3087(9): mov $0x0,0x50(%rsp)
3090(5): mov $0x0,0xf(%rsp)
3095(3): xor %r15d,%r15d
3098(5): mov $0x1,0xd(%rsp)
309d(9): mov $0x0,0x18(%rsp)
30a6(9): mov $0x0,0x48(%rsp)
30af(5): jmp 0xfffff344(%rip)
30b4(5): cmp $0xa,0x8(%rsp)
30b9(2): jz 0x58(%rip)
30bb(7): lea 0x1f7d(%rip),%rsi
30c2(2): xor %edi,%edi
30c4(5): mov $0x5,%edx
30c9(5): call 0xffffe3c7(%rip)
30ce(3): mov %rax,%rcx
30d1(5): mov %rax,0x68(%rsp)
30d6(7): lea 0x1f62(%rip),%rax
30dd(3): cmp %rax,%rcx
30e0(6): jz 0x39e(%rip)
30e6(7): lea 0x1f50(%rip),%rsi
30ed(2): xor %edi,%edi
30ef(5): mov $0x5,%edx
30f4(5): call 0xffffe39c(%rip)
30f9(3): mov %rax,%rcx
30fc(5): mov %rax,0x60(%rsp)
3101(7): lea 0x1f35(%rip),%rax
3108(3): cmp %rax,%rcx
310b(6): jz 0x389(%rip)
3111(3): xor %r15d,%r15d
3114(2): test %ebx,%ebx
3116(6): jz 0x1c7(%rip)
311c(2): test %ebx,%ebx
311e(5): mov 0x60(%rsp),%rbx
3123(5): setnz 0xf(%rsp)
3128(3): xor %r12d,%r12d
312b(3): mov %rbx,%rdi
312e(5): call 0xffffe382(%rip)
3133(5): mov %rbx,0x48(%rsp)
3138(5): mov %rax,0x18(%rsp)
313d(5): mov $0x1,0xe(%rsp)
3142(5): mov $0x0,0x7c(%rsp)
3147(9): mov $0x0,0x50(%rsp)
3150(5): mov $0x1,0xd(%rsp)
3155(5): jmp 0xfffff29e(%rip)
315a(5): mov $0x1,0xe(%rsp)
315f(5): mov $0x0,0x7c(%rsp)
3164(3): xor %r12d,%r12d
3167(9): mov $0x0,0x50(%rsp)
3170(5): mov $0x0,0xf(%rsp)
3175(3): xor %r15d,%r15d
3178(5): mov $0x0,0xd(%rsp)
317d(9): mov $0x0,0x18(%rsp)
3186(9): mov $0x0,0x48(%rsp)
318f(5): jmp 0xfffff264(%rip)
3194(5): mov $0x1,0xe(%rsp)
3199(5): mov $0x0,0x7c(%rsp)
319e(3): xor %r12d,%r12d
31a1(9): mov $0x0,0x50(%rsp)
31aa(5): mov $0x1,0xf(%rsp)
31af(5): mov $0x1,0xd(%rsp)
31b4(5): jmp 0xfffff21f(%rip)
31b9(3): cmp %r15,%r13
31bc(2): jbe 0x7(%rip)
31be(5): mov $0x30,0x0(%r14,%r15,1)
31c3(4): lea 0x2(%rcx),%rax
31c7(3): cmp %rax,%r13
31ca(2): jbe 0x8(%rip)
31cc(6): mov $0x30,0x2(%r14,%rcx,1)
31d2(3): mov %r12d,%eax
31d5(4): lea 0x3(%rcx),%r15
31d9(3): xor %r12d,%r12d
31dc(5): mov $0x30,%ebx
31e1(5): jmp 0xfffff367(%rip)
31e6(a): nop 0x0(%rax,%rax,1)
31f0(5): movzx 0xf(%rsp),%ebx
31f5(3): mov %r11,%rbp
31f8(4): mov %bl,0xd(%rsp)
31fc(5): jmp 0xfffffcad(%rip)
3201(5): movzx 0xd(%rsp),%edx
3206(3): xor %r12d,%r12d
3209(5): jmp 0xfffffb07(%rip)
320e(3): xor %r10d,%r10d
3211(5): jmp 0xfffffbbc(%rip)
3216(9): mov $0x0,0x50(%rsp)
321f(5): mov $0x1,0xe(%rsp)
3224(3): xor %r12d,%r12d
3227(5): mov $0x0,0x7c(%rsp)
322c(5): jmp 0xfffffddf(%rip)
3231(5): mov 0x30(%rsp),%r11
3236(3): mov %r14,%rsi
3239(3): mov %r13,%rcx
323c(3): mov %rbx,%rax
323f(3): mov %rbx,%rdi
3242(6): movzx 0x7d(%rsp),%r8d
3248(5): movzx 0x7e(%rsp),%ebx
324d(8): mov 0x88(%rsp),%r9
3255(3): cmp %r11,%rsi
3258(6): movzx 0x7f(%rsp),%r10d
325e(8): mov 0x80(%rsp),%r15
3266(5): mov 0x40(%rsp),%r14
326b(5): mov 0x70(%rsp),%r13
3270(2): jnb 0x28(%rip)
3272(3): cmp $0x0,(%rcx)
3275(2): jnz 0x12(%rip)
3277(2): jmp 0x21(%rip)
3279(7): nop 0x0(%rax)
3280(5): cmp $0x0,0x0(%r9,%rax,1)
3285(2): jz 0x10(%rip)
3287(4): add $0x1,%rax
328b(5): lea 0x0(%rbp,%rax,1),%rdx
3290(3): cmp %rdx,%r11
3293(2): jnbe 0xffffffed(%rip)
3295(3): mov %rax,%rdi
3298(5): movzx 0xd(%rsp),%edx
329d(3): xor %r12d,%r12d
32a0(5): jmp 0xfffffa66(%rip)
32a5(3): mov %rbx,%rdi
32a8(6): movzx 0x7d(%rsp),%r8d
32ae(5): movzx 0x7e(%rsp),%ebx
32b3(6): movzx 0x7f(%rsp),%r10d
32b9(8): mov 0x80(%rsp),%r15
32c1(3): xor %r12d,%r12d
32c4(5): mov 0x40(%rsp),%r14
32c9(5): mov 0x70(%rsp),%r13
32ce(5): mov 0x30(%rsp),%r11
32d3(5): movzx 0xd(%rsp),%edx
32d8(5): jmp 0xfffffa2e(%rip)
32dd(5): mov 0x68(%rsp),%rdx
32e2(3): movzx (%rdx),%eax
32e5(2): test %al,%al
32e7(6): jz 0xfffffe35(%rip)
32ed(3): nop (%rax)
32f0(3): cmp %r15,%r13
32f3(2): jbe 0x6(%rip)
32f5(4): mov %al,0x0(%r14,%r15,1)
32f9(4): add $0x1,%r15
32fd(5): movzx 0x0(%rdx,%r15,1),%eax
3302(2): test %al,%al
3304(2): jnz 0xffffffec(%rip)
3306(5): jmp 0xfffffe16(%rip)
330b(2): mov %edx,%eax
330d(5): jmp 0xfffff55a(%rip)
3312(4): movzx 0x0(%rax,%rcx,1),%ebx
3316(3): cmp $0x3e,%bl
3319(6): jnbe 0xfffff877(%rip)
331f(a): mov $0x8070630310989004800,%rax
3329(4): bt %rbx,%rax
332d(6): jnb 0xfffff863(%rip)
3333(5): cmp $0x0,0xf(%rsp)
3338(6): jnz 0x1ea(%rip)
333e(3): cmp %r15,%r13
3341(2): jbe 0x7(%rip)
3343(5): mov $0x3f,0x0(%r14,%r15,1)
3348(4): lea 0x1(%r15),%rax
334c(3): cmp %rax,%r13
334f(2): jbe 0x8(%rip)
3351(6): mov $0x22,0x1(%r14,%r15,1)
3357(4): lea 0x2(%r15),%rax
335b(3): cmp %rax,%r13
335e(2): jbe 0x8(%rip)
3360(6): mov $0x22,0x2(%r14,%r15,1)
3366(4): lea 0x3(%r15),%rax
336a(3): cmp %rax,%r13
336d(2): jbe 0x8(%rip)
336f(6): mov $0x3f,0x3(%r14,%r15,1)
3375(4): add $0x4,%r15
3379(2): xor %edx,%edx
337b(3): xor %r12d,%r12d
337e(2): xor %eax,%eax
3380(3): mov %rcx,%rbp
3383(5): jmp 0xfffff1c5(%rip)
3388(2): test %ebx,%ebx
338a(6): jz 0x18e(%rip)
3390(7): lea 0x1ca6(%rip),%rax
3397(5): mov $0x1,0xe(%rsp)
339c(5): mov $0x0,0x7c(%rsp)
33a1(3): xor %r12d,%r12d
33a4(9): mov $0x0,0x50(%rsp)
33ad(5): mov $0x1,0xf(%rsp)
33b2(5): mov $0x0,0xd(%rsp)
33b7(9): mov $0x1,0x18(%rsp)
33c0(3): xor %r15d,%r15d
33c3(5): mov %rax,0x48(%rsp)
33c8(5): jmp 0xfffff02b(%rip)
33cd(3): nop (%rax)
33d0(3): mov %r11,%rbp
33d3(5): movzx 0xf(%rsp),%eax
33d8(5): jmp 0xfffffad1(%rip)
33dd(7): lea 0x1c57(%rip),%rax
33e4(5): mov $0x1,0xe(%rsp)
33e9(5): mov $0x0,0x7c(%rsp)
33ee(3): xor %r12d,%r12d
33f1(9): mov $0x0,0x50(%rsp)
33fa(5): mov $0x1,0xf(%rsp)
33ff(5): mov $0x1,0xd(%rsp)
3404(9): mov $0x1,0x18(%rsp)
340d(3): xor %r15d,%r15d
3410(5): mov %rax,0x48(%rsp)
3415(5): jmp 0xffffefde(%rip)
341a(2): mov %edx,%eax
341c(5): mov 0x48(%rsp),%rbx
3421(3): test %rbx,%rbx
3424(2): jz 0x2e(%rip)
3426(2): test %al,%al
3428(2): jz 0x2a(%rip)
342a(3): movzx (%rbx),%ecx
342d(3): mov %rbx,%rax
3430(2): test %cl,%cl
3432(2): jz 0x20(%rip)
3434(3): mov %r15,%rdx
3437(3): sub %r15,%rax
343a(3): cmp %rdx,%r13
343d(2): jbe 0x6(%rip)
343f(4): mov %cl,0x0(%r14,%rdx,1)
3443(4): add $0x1,%rdx
3447(4): movzx 0x0(%rax,%rdx,1),%ecx
344b(2): test %cl,%cl
344d(2): jnz 0xffffffed(%rip)
344f(3): mov %rdx,%r15
3452(3): cmp %r15,%r13
3455(6): jbe 0xfffffaa4(%rip)
345b(5): mov $0x0,0x0(%r14,%r15,1)
3460(5): jmp 0xfffffa99(%rip)
3465(5): cmp $0x2,0x8(%rsp)
346a(5): movzx 0xf(%rsp),%ebx
346f(3): mov %r11,%rbp
3472(3): setz %al
3475(4): mov %bl,0xd(%rsp)
3479(5): jmp 0xfffffa30(%rip)
347e(4): mov 0x8(%rsp),%esi
3482(3): mov %rcx,%rdi
3485(5): call 0xffffedab(%rip)
348a(5): mov %rax,0x68(%rsp)
348f(5): jmp 0xfffffc57(%rip)
3494(4): mov 0x8(%rsp),%esi
3498(3): mov %rcx,%rdi
349b(5): call 0xffffed95(%rip)
34a0(5): mov %rax,0x60(%rsp)
34a5(5): jmp 0xfffffc6c(%rip)
34aa(5): movzx 0xf(%rsp),%ebx
34af(3): mov %r11,%rbp
34b2(2): mov %edx,%eax
34b4(4): mov %bl,0xd(%rsp)
34b8(5): jmp 0xfffff9f1(%rip)
34bd(4): sub $0x8,%rsp
34c1(6): mov $0x5,%r8d
34c7(3): mov %r11,%rcx
34ca(4): push 0x68(%rsp)
34ce(4): push 0x78(%rsp)
34d2(3): mov %r14,%rdi
34d5(4): push 0x38(%rsp)
34d9(8): mov 0x98(%rsp),%r9d
34e1(5): mov 0x30(%rsp),%rdx
34e6(5): mov 0x70(%rsp),%rsi
34eb(5): call 0xffffee35(%rip)
34f0(4): add $0x20,%rsp
34f4(3): mov %rax,%r15
34f7(5): jmp 0xfffffa02(%rip)
34fc(5): movzx 0x7c(%rsp),%eax
3501(5): jmp 0xffffff1b(%rip)
3506(8): mov $0x2,0x8(%rsp)
350e(5): jmp 0xfffff99b(%rip)
3513(5): call 0xffffdfad(%rip)
3518(5): mov $0x0,0xd(%rsp)
351d(5): jmp 0xfffffa74(%rip)
3522(3): mov %r11,%rbp
3525(5): jmp 0xfffff99b(%rip)
352a(5): mov $0x1,0xe(%rsp)
352f(2): xor %eax,%eax
3531(3): xor %r12d,%r12d
3534(9): mov $0x0,0x50(%rsp)
353d(5): jmp 0xfffff5a7(%rip)
3542(3): mov %r13,%rdx
3545(5): mov 0x50(%rsp),%r13
354a(5): jmp 0xfffff5f8(%rip)
354f(5): call 0xffffde91(%rip)

"quotearg_n_options" :
3560(2): push %r15
3562(2): push %r14
3564(3): movsxd %edi,%r15
3567(2): push %r13
3569(2): push %r12
356b(3): mov %rdx,%r14
356e(1): push %rbp
356f(1): push %rbx
3570(3): mov %rcx,%rbp
3573(4): sub $0x28,%rsp
3577(5): mov %rsi,0x8(%rsp)
357c(5): call 0xffffde74(%rip)
3581(3): mov %rax,%r13
3584(2): mov (%rax),%eax
3586(3): test %r15d,%r15d
3589(7): mov 0x203ad0(%rip),%rbx
3590(4): mov %eax,0x18(%rsp)
3594(6): js 0x16d(%rip)
359a(7): cmp %r15d,0x203ab7(%rip)
35a1(2): jnle 0x64(%rip)
35a3(7): cmp $0x7fffffff,%r15d
35aa(6): jz 0x15c(%rip)
35b0(4): lea 0x1(%r15),%r12d
35b4(7): lea 0x203ab5(%rip),%rax
35bb(3): movsxd %r12d,%rsi
35be(4): shl/sal $0x4,%rsi
35c2(3): cmp %rax,%rbx
35c5(6): jz 0x11b(%rip)
35cb(3): mov %rbx,%rdi
35ce(5): call 0xf72(%rip)
35d3(3): mov %rax,%rbx
35d6(7): mov %rax,0x203a83(%rip)
35dd(7): movsxd 0x203a74(%rip),%rdi
35e4(3): mov %r12d,%edx
35e7(2): xor %esi,%esi
35e9(2): sub %edi,%edx
35eb(4): shl/sal $0x4,%rdi
35ef(3): movsxd %edx,%rdx
35f2(3): add %rbx,%rdi
35f5(4): shl/sal $0x4,%rdx
35f9(5): call 0xffffdf27(%rip)
35fe(7): mov %r12d,0x203a53(%rip)
3605(3): mov 0x4(%rbp),%eax
3608(4): shl/sal $0x4,%r15
360c(4): sub $0x8,%rsp
3610(3): add %r15,%rbx
3613(4): lea 0x8(%rbp),%r15
3617(4): mov 0x0(%rbp),%r8d
361b(3): mov (%rbx),%r11
361e(4): mov 0x8(%rbx),%r12
3622(3): mov %r14,%rcx
3625(3): or $0x1,%eax
3628(4): mov %eax,0x24(%rsp)
362c(3): push 0x30(%rbp)
362f(3): mov %eax,%r9d
3632(3): push 0x28(%rbp)
3635(2): push %r15
3637(3): mov %r11,%rsi
363a(5): mov 0x28(%rsp),%rdx
363f(3): mov %r12,%rdi
3642(5): mov %r11,0x30(%rsp)
3647(5): call 0xffffecd9(%rip)
364c(4): add $0x20,%rsp
3650(5): mov 0x10(%rsp),%r11
3655(3): cmp %rax,%r11
3658(2): jnbe 0x69(%rip)
365a(4): lea 0x1(%rax),%rsi
365e(7): lea 0x203a9b(%rip),%rax
3665(3): cmp %rax,%r12
3668(3): mov %rsi,(%rbx)
366b(2): jz 0x14(%rip)
366d(3): mov %r12,%rdi
3670(5): mov %rsi,0x10(%rsp)
3675(5): call 0xffffdd5b(%rip)
367a(5): mov 0x10(%rsp),%rsi
367f(3): mov %rsi,%rdi
3682(5): mov %rsi,0x10(%rsp)
3687(5): call 0xe59(%rip)
368c(4): sub $0x8,%rsp
3690(4): mov %rax,0x8(%rbx)
3694(4): mov 0x0(%rbp),%r8d
3698(3): push 0x30(%rbp)
369b(3): push 0x28(%rbp)
369e(3): mov %r14,%rcx
36a1(2): push %r15
36a3(5): mov 0x3c(%rsp),%r9d
36a8(3): mov %rax,%rdi
36ab(5): mov 0x28(%rsp),%rdx
36b0(5): mov 0x30(%rsp),%rsi
36b5(3): mov %rax,%r12
36b8(5): call 0xffffec68(%rip)
36bd(4): add $0x20,%rsp
36c1(4): mov 0x18(%rsp),%eax
36c5(4): mov %eax,0x0(%r13)
36c9(4): add $0x28,%rsp
36cd(3): mov %r12,%rax
36d0(1): pop %rbx
36d1(1): pop %rbp
36d2(2): pop %r12
36d4(2): pop %r13
36d6(2): pop %r14
36d8(2): pop %r15
36da(1): ret near (%rsp)
36db(5): nop 0x0(%rax,%rax,1)
36e0(2): xor %edi,%edi
36e2(5): call 0xe5e(%rip)
36e7(8): movdqa 0x203981(%rip),%xmm0
36ef(3): mov %rax,%rbx
36f2(7): mov %rax,0x203967(%rip)
36f9(3): movups %xmm0,(%rax)
36fc(5): jmp 0xfffffee1(%rip)
3701(5): call 0xffffdcdf(%rip)
3706(5): call 0x102a(%rip)

"clone_quoting_options" :
3710(2): push %r12
3712(1): push %rbp
3713(1): push %rbx
3714(3): mov %rdi,%rbx
3717(5): call 0xffffdcd9(%rip)
371c(3): mov (%rax),%r12d
371f(3): mov %rax,%rbp
3722(7): lea 0x203ad7(%rip),%rax
3729(3): test %rbx,%rbx
372c(5): mov $0x38,%esi
3731(4): cmove %rax,%rbx
3735(3): mov %rbx,%rdi
3738(5): call 0xfa8(%rip)
373d(4): mov %r12d,0x0(%rbp)
3741(1): pop %rbx
3742(1): pop %rbp
3743(2): pop %r12
3745(1): ret near (%rsp)

"get_quoting_style" :
3750(7): lea 0x203aa9(%rip),%rax
3757(3): test %rdi,%rdi
375a(4): cmove %rax,%rdi
375e(2): mov (%rdi),%eax
3760(1): ret near (%rsp)

"set_quoting_style" :
3770(7): lea 0x203a89(%rip),%rax
3777(3): test %rdi,%rdi
377a(4): cmove %rax,%rdi
377e(2): mov %esi,(%rdi)
3780(1): ret near (%rsp)

"set_char_quoting" :
3790(7): lea 0x203a69(%rip),%rax
3797(3): test %rdi,%rdi
379a(2): mov %esi,%ecx
379c(4): cmove %rax,%rdi
37a0(2): mov %esi,%eax
37a2(3): and $0x1f,%ecx
37a5(3): shr $0x5,%al
37a8(3): movzx %al,%eax
37ab(5): lea 0x8(%rdi,%rax,4),%rdi
37b0(2): mov (%rdi),%esi
37b2(2): mov %esi,%eax
37b4(2): shr %cl,%eax
37b6(2): xor %eax,%edx
37b8(3): and $0x1,%eax
37bb(3): and $0x1,%edx
37be(2): shl/sal %cl,%edx
37c0(2): xor %esi,%edx
37c2(2): mov %edx,(%rdi)
37c4(1): ret near (%rsp)

"set_quoting_flags" :
37d0(7): lea 0x203a29(%rip),%rax
37d7(3): test %rdi,%rdi
37da(4): cmove %rax,%rdi
37de(3): mov 0x4(%rdi),%eax
37e1(3): mov %esi,0x4(%rdi)
37e4(1): ret near (%rsp)

"set_custom_quoting" :
37f0(7): lea 0x203a09(%rip),%rax
37f7(3): test %rdi,%rdi
37fa(4): cmove %rax,%rdi
37fe(3): test %rsi,%rsi
3801(6): mov $0xa,(%rdi)
3807(2): jz 0x10(%rip)
3809(3): test %rdx,%rdx
380c(2): jz 0xb(%rip)
380e(4): mov %rsi,0x28(%rdi)
3812(4): mov %rdx,0x30(%rdi)
3816(1): ret near (%rsp)
3817(4): sub $0x8,%rsp
381b(5): call 0xffffdbc5(%rip)

"quotearg_buffer" :
3820(2): push %r15
3822(2): push %r14
3824(7): lea 0x2039d5(%rip),%rax
382b(2): push %r13
382d(2): push %r12
382f(3): mov %rdi,%r13
3832(1): push %rbp
3833(1): push %rbx
3834(3): mov %r8,%rbx
3837(3): mov %rsi,%r14
383a(3): mov %rdx,%r15
383d(4): sub $0x18,%rsp
3841(3): test %r8,%r8
3844(4): cmove %rax,%rbx
3848(5): mov %rcx,0x8(%rsp)
384d(5): call 0xffffdba3(%rip)
3852(3): mov (%rax),%r12d
3855(3): mov %rax,%rbp
3858(4): lea 0x8(%rbx),%rax
385c(4): sub $0x8,%rsp
3860(4): mov 0x4(%rbx),%r9d
3864(3): push 0x30(%rbx)
3867(3): mov (%rbx),%r8d
386a(3): push 0x28(%rbx)
386d(3): mov %r15,%rdx
3870(1): push %rax
3871(5): mov 0x28(%rsp),%rcx
3876(3): mov %r14,%rsi
3879(3): mov %r13,%rdi
387c(5): call 0xffffeaa4(%rip)
3881(4): mov %r12d,0x0(%rbp)
3885(4): add $0x38,%rsp
3889(1): pop %rbx
388a(1): pop %rbp
388b(2): pop %r12
388d(2): pop %r13
388f(2): pop %r14
3891(2): pop %r15
3893(1): ret near (%rsp)

"quotearg_alloc_mem" :
38a0(2): push %r15
38a2(2): push %r14
38a4(7): lea 0x203955(%rip),%rax
38ab(2): push %r13
38ad(2): push %r12
38af(3): mov %rdx,%r12
38b2(1): push %rbp
38b3(1): push %rbx
38b4(3): mov %rcx,%rbx
38b7(3): mov %rdi,%r14
38ba(3): mov %rsi,%r15
38bd(4): sub $0x38,%rsp
38c1(3): test %rcx,%rcx
38c4(4): cmove %rax,%rbx
38c8(2): xor %ebp,%ebp
38ca(5): call 0xffffdb26(%rip)
38cf(3): test %r12,%r12
38d2(3): mov %rax,%r13
38d5(2): mov (%rax),%eax
38d7(4): setz %bpl
38db(3): or 0x4(%rbx),%ebp
38de(4): lea 0x8(%rbx),%r10
38e2(4): sub $0x8,%rsp
38e6(3): mov (%rbx),%r8d
38e9(3): mov %r15,%rcx
38ec(4): mov %eax,0x14(%rsp)
38f0(3): push 0x30(%rbx)
38f3(3): mov %r14,%rdx
38f6(3): push 0x28(%rbx)
38f9(2): push %r10
38fb(2): xor %esi,%esi
38fd(3): mov %ebp,%r9d
3900(2): xor %edi,%edi
3902(5): mov %r10,0x40(%rsp)
3907(5): call 0xffffea19(%rip)
390c(4): lea 0x1(%rax),%rsi
3910(5): mov %rax,0x48(%rsp)
3915(4): add $0x20,%rsp
3919(3): mov %rsi,%rdi
391c(5): mov %rsi,0x18(%rsp)
3921(5): call 0xbbf(%rip)
3926(5): mov %rax,0x10(%rsp)
392b(4): sub $0x8,%rsp
392f(3): push 0x30(%rbx)
3932(3): push 0x28(%rbx)
3935(5): mov 0x38(%rsp),%r10
393a(3): mov %ebp,%r9d
393d(3): mov (%rbx),%r8d
3940(3): mov %r15,%rcx
3943(3): mov %r14,%rdx
3946(3): mov %rax,%rdi
3949(2): push %r10
394b(5): mov 0x38(%rsp),%rsi
3950(5): call 0xffffe9d0(%rip)
3955(4): mov 0x2c(%rsp),%eax
3959(4): add $0x20,%rsp
395d(3): test %r12,%r12
3960(4): mov %eax,0x0(%r13)
3964(2): jz 0xb(%rip)
3966(5): mov 0x28(%rsp),%r11
396b(4): mov %r11,(%r12)
396f(5): mov 0x10(%rsp),%rax
3974(4): add $0x38,%rsp
3978(1): pop %rbx
3979(1): pop %rbp
397a(2): pop %r12
397c(2): pop %r13
397e(2): pop %r14
3980(2): pop %r15
3982(1): ret near (%rsp)

"quotearg_alloc" :
3990(3): mov %rdx,%rcx
3993(2): xor %edx,%edx
3995(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
39a0(6): mov 0x2036b2(%rip),%eax
39a6(2): push %r12
39a8(7): mov 0x2036b1(%rip),%r12
39af(1): push %rbp
39b0(1): push %rbx
39b1(3): cmp $0x1,%eax
39b4(2): jle 0x2d(%rip)
39b6(3): sub $0x2,%eax
39b9(5): lea 0x18(%r12),%rbx
39be(4): shl/sal $0x4,%rax
39c2(5): lea 0x28(%r12,%rax,1),%rbp
39c7(9): nop 0x0(%rax,%rax,1)
39d0(3): mov (%rbx),%rdi
39d3(4): add $0x10,%rbx
39d7(5): call 0xffffd9f9(%rip)
39dc(3): cmp %rbp,%rbx
39df(2): jnz 0xfffffff1(%rip)
39e1(5): mov 0x8(%r12),%rdi
39e6(7): lea 0x203713(%rip),%rbx
39ed(3): cmp %rbx,%rdi
39f0(2): jz 0x19(%rip)
39f2(5): call 0xffffd9de(%rip)
39f7(b): mov $0x100,0x20366e(%rip)
3a02(7): mov %rbx,0x20366f(%rip)
3a09(7): lea 0x203660(%rip),%rbx
3a10(3): cmp %rbx,%r12
3a13(2): jz 0x11(%rip)
3a15(3): mov %r12,%rdi
3a18(5): call 0xffffd9b8(%rip)
3a1d(7): mov %rbx,0x20363c(%rip)
3a24(1): pop %rbx
3a25(a): mov $0x1,0x203629(%rip)
3a2f(1): pop %rbp
3a30(2): pop %r12
3a32(1): ret near (%rsp)

"quotearg_n" :
3a40(7): lea 0x2037b9(%rip),%rcx
3a47(7): mov $0xffffffff,%rdx
3a4e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3a60(7): lea 0x203799(%rip),%rcx
3a67(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3a70(7): lea 0x203789(%rip),%rcx
3a77(3): mov %rdi,%rsi
3a7a(7): mov $0xffffffff,%rdx
3a81(2): xor %edi,%edi
3a83(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3a90(7): lea 0x203769(%rip),%rcx
3a97(3): mov %rsi,%rdx
3a9a(3): mov %rdi,%rsi
3a9d(2): xor %edi,%edi
3a9f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3ab0(4): sub $0x48,%rsp
3ab4(3): mov %rdx,%rax
3ab7(9): mov $0x28,%rdx
3ac0(5): mov %rdx,0x38(%rsp)
3ac5(2): xor %edx,%edx
3ac7(3): cmp $0xa,%esi
3aca(2): jz 0x6a(%rip)
3acc(3): mov %esi,(%rsp)
3acf(3): mov %rsp,%rcx
3ad2(7): mov $0xffffffff,%rdx
3ad9(3): mov %rax,%rsi
3adc(9): mov $0x0,0x4(%rsp)
3ae5(9): mov $0x0,0xc(%rsp)
3aee(9): mov $0x0,0x14(%rsp)
3af7(9): mov $0x0,0x1c(%rsp)
3b00(9): mov $0x0,0x24(%rsp)
3b09(9): mov $0x0,0x2c(%rsp)
3b12(8): mov $0x0,0x34(%rsp)
3b1a(5): call 0xfffffa46(%rip)
3b1f(5): mov 0x38(%rsp),%rcx
3b24(9): xor $0x28,%rcx
3b2d(2): jnz 0xc(%rip)
3b2f(4): add $0x48,%rsp
3b33(1): ret near (%rsp)
3b34(5): call 0xffffd8ac(%rip)
3b39(5): call 0xffffd987(%rip)

"quotearg_n_style_mem" :
3b40(4): sub $0x48,%rsp
3b44(3): mov %rdx,%rax
3b47(3): mov %rcx,%rdx
3b4a(9): mov $0x28,%rcx
3b53(5): mov %rcx,0x38(%rsp)
3b58(2): xor %ecx,%ecx
3b5a(3): cmp $0xa,%esi
3b5d(2): jz 0x63(%rip)
3b5f(3): mov %esi,(%rsp)
3b62(3): mov %rsp,%rcx
3b65(3): mov %rax,%rsi
3b68(9): mov $0x0,0x4(%rsp)
3b71(9): mov $0x0,0xc(%rsp)
3b7a(9): mov $0x0,0x14(%rsp)
3b83(9): mov $0x0,0x1c(%rsp)
3b8c(9): mov $0x0,0x24(%rsp)
3b95(9): mov $0x0,0x2c(%rsp)
3b9e(8): mov $0x0,0x34(%rsp)
3ba6(5): call 0xfffff9ba(%rip)
3bab(5): mov 0x38(%rsp),%rdx
3bb0(9): xor $0x28,%rdx
3bb9(2): jnz 0xc(%rip)
3bbb(4): add $0x48,%rsp
3bbf(1): ret near (%rsp)
3bc0(5): call 0xffffd820(%rip)
3bc5(5): call 0xffffd8fb(%rip)

"quotearg_style" :
3bd0(3): mov %rsi,%rdx
3bd3(2): mov %edi,%esi
3bd5(2): xor %edi,%edi
3bd7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3be0(3): mov %rdx,%rcx
3be3(3): mov %rsi,%rdx
3be6(2): mov %edi,%esi
3be8(2): xor %edi,%edi
3bea(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3bf0(4): sub $0x48,%rsp
3bf4(2): mov %edx,%ecx
3bf6(9): mov $0x28,%rax
3bff(5): mov %rax,0x38(%rsp)
3c04(2): xor %eax,%eax
3c06(7): mov 0x203623(%rip),%rax
3c0d(3): mov %rsp,%r8
3c10(3): and $0x1f,%ecx
3c13(8): movdqa 0x2035e5(%rip),%xmm0
3c1b(5): mov %rax,0x30(%rsp)
3c20(2): mov %edx,%eax
3c22(4): movaps %xmm0,(%rsp)
3c26(3): shr $0x5,%al
3c29(3): movzx %al,%eax
3c2c(5): lea 0x8(%r8,%rax,4),%r9
3c31(8): movdqa 0x2035d7(%rip),%xmm0
3c39(5): movaps %xmm0,0x10(%rsp)
3c3e(8): movdqa 0x2035da(%rip),%xmm0
3c46(5): movaps %xmm0,0x20(%rsp)
3c4b(3): mov (%r9),%edx
3c4e(2): mov %edx,%eax
3c50(2): shr %cl,%eax
3c52(2): not %eax
3c54(3): and $0x1,%eax
3c57(2): shl/sal %cl,%eax
3c59(3): mov %r8,%rcx
3c5c(2): xor %edx,%eax
3c5e(3): mov %rsi,%rdx
3c61(3): mov %rdi,%rsi
3c64(3): mov %eax,(%r9)
3c67(2): xor %edi,%edi
3c69(5): call 0xfffff8f7(%rip)
3c6e(5): mov 0x38(%rsp),%rsi
3c73(9): xor $0x28,%rsi
3c7c(2): jnz 0x7(%rip)
3c7e(4): add $0x48,%rsp
3c82(1): ret near (%rsp)
3c83(5): call 0xffffd83d(%rip)

"quotearg_char" :
3c90(4): movsx %sil,%edx
3c94(7): mov $0xffffffff,%rsi
3c9b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3ca0(5): mov $0x3a,%edx
3ca5(7): mov $0xffffffff,%rsi
3cac(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3cc0(5): mov $0x3a,%edx
3cc5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3cd0(4): sub $0x48,%rsp
3cd4(3): mov %rdx,%rax
3cd7(9): mov $0x28,%rdx
3ce0(5): mov %rdx,0x38(%rsp)
3ce5(2): xor %edx,%edx
3ce7(3): cmp $0xa,%esi
3cea(2): jz 0x6a(%rip)
3cec(3): mov %esi,(%rsp)
3cef(3): mov %rsp,%rcx
3cf2(7): mov $0xffffffff,%rdx
3cf9(3): mov %rax,%rsi
3cfc(9): mov $0x0,0x4(%rsp)
3d05(9): mov $0x4000000,0xc(%rsp)
3d0e(9): mov $0x0,0x14(%rsp)
3d17(9): mov $0x0,0x1c(%rsp)
3d20(9): mov $0x0,0x24(%rsp)
3d29(9): mov $0x0,0x2c(%rsp)
3d32(8): mov $0x0,0x34(%rsp)
3d3a(5): call 0xfffff826(%rip)
3d3f(5): mov 0x38(%rsp),%rcx
3d44(9): xor $0x28,%rcx
3d4d(2): jnz 0xc(%rip)
3d4f(4): add $0x48,%rsp
3d53(1): ret near (%rsp)
3d54(5): call 0xffffd68c(%rip)
3d59(5): call 0xffffd767(%rip)

"quotearg_n_custom_mem" :
3d60(4): sub $0x48,%rsp
3d64(3): mov %rcx,%r9
3d67(7): mov 0x2034c2(%rip),%rcx
3d6e(8): movdqa 0x20348a(%rip),%xmm0
3d76(9): mov $0x28,%rax
3d7f(5): mov %rax,0x38(%rsp)
3d84(2): xor %eax,%eax
3d86(4): movaps %xmm0,(%rsp)
3d8a(3): test %rsi,%rsi
3d8d(5): mov %rcx,0x30(%rsp)
3d92(7): mov $0xa,(%rsp)
3d99(8): movdqa 0x20346f(%rip),%xmm0
3da1(5): movaps %xmm0,0x10(%rsp)
3da6(8): movdqa 0x203472(%rip),%xmm0
3dae(5): movaps %xmm0,0x20(%rsp)
3db3(2): jz 0x34(%rip)
3db5(3): test %rdx,%rdx
3db8(2): jz 0x2f(%rip)
3dba(5): mov %rsi,0x28(%rsp)
3dbf(5): mov %rdx,0x30(%rsp)
3dc4(3): mov %rsp,%rcx
3dc7(3): mov %r8,%rdx
3dca(3): mov %r9,%rsi
3dcd(5): call 0xfffff793(%rip)
3dd2(5): mov 0x38(%rsp),%rdi
3dd7(9): xor $0x28,%rdi
3de0(2): jnz 0xc(%rip)
3de2(4): add $0x48,%rsp
3de6(1): ret near (%rsp)
3de7(5): call 0xffffd5f9(%rip)
3dec(5): call 0xffffd6d4(%rip)

"quotearg_n_custom" :
3e00(7): mov $0xffffffff,%r8
3e07(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3e10(3): mov %rdx,%rcx
3e13(7): mov $0xffffffff,%r8
3e1a(3): mov %rsi,%rdx
3e1d(3): mov %rdi,%rsi
3e20(2): xor %edi,%edi
3e22(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3e30(3): mov %rcx,%r8
3e33(3): mov %rdx,%rcx
3e36(3): mov %rsi,%rdx
3e39(3): mov %rdi,%rsi
3e3c(2): xor %edi,%edi
3e3e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3e50(7): lea 0x2031c9(%rip),%rcx
3e57(5): jmp 0xfffff709(%rip)

"quote_mem" :
3e60(7): lea 0x2031b9(%rip),%rcx
3e67(3): mov %rsi,%rdx
3e6a(3): mov %rdi,%rsi
3e6d(2): xor %edi,%edi
3e6f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3e80(7): lea 0x203199(%rip),%rcx
3e87(7): mov $0xffffffff,%rdx
3e8e(5): jmp 0xfffff6d2(%rip)

"quote" :
3ea0(7): lea 0x203179(%rip),%rcx
3ea7(3): mov %rdi,%rsi
3eaa(7): mov $0xffffffff,%rdx
3eb1(2): xor %edi,%edi
3eb3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3ec0(2): push %r15
3ec2(2): push %r14
3ec4(2): push %r13
3ec6(2): push %r12
3ec8(3): mov %r9,%r12
3ecb(1): push %rbp
3ecc(1): push %rbx
3ecd(3): mov %rdi,%rbp
3ed0(3): mov %r8,%rbx
3ed3(4): sub $0x28,%rsp
3ed7(3): test %rsi,%rsi
3eda(6): jz 0x11e(%rip)
3ee0(3): mov %rdx,%r8
3ee3(7): lea 0x161e(%rip),%rdx
3eea(3): mov %rcx,%r9
3eed(2): xor %eax,%eax
3eef(3): mov %rsi,%rcx
3ef2(5): mov $0x1,%esi
3ef7(5): call 0xffffd789(%rip)
3efc(7): lea 0x1618(%rip),%rsi
3f03(2): xor %edi,%edi
3f05(5): mov $0x5,%edx
3f0a(5): call 0xffffd586(%rip)
3f0f(7): lea 0x192a(%rip),%rdx
3f16(3): mov %rax,%rcx
3f19(6): mov $0x7e3,%r8d
3f1f(5): mov $0x1,%esi
3f24(3): mov %rbp,%rdi
3f27(2): xor %eax,%eax
3f29(5): call 0xffffd757(%rip)
3f2e(7): lea 0x1673(%rip),%rsi
3f35(2): xor %edi,%edi
3f37(5): mov $0x5,%edx
3f3c(5): call 0xffffd554(%rip)
3f41(3): mov %rbp,%rsi
3f44(3): mov %rax,%rdi
3f47(5): call 0xffffd5f9(%rip)
3f4c(4): cmp $0x9,%r12
3f50(6): jnbe 0x340(%rip)
3f56(7): lea 0x18ab(%rip),%rdx
3f5d(4): movsxd 0x0(%rdx,%r12,4),%rax
3f61(3): add %rdx,%rax
3f64(2): jmp %rax
3f66(a): nop 0x0(%rax,%rax,1)
3f70(4): mov 0x38(%rbx),%r9
3f74(4): mov 0x10(%rbx),%rax
3f78(7): lea 0x1799(%rip),%rsi
3f7f(4): mov 0x8(%rbx),%r8
3f83(5): mov $0x5,%edx
3f88(2): xor %edi,%edi
3f8a(4): mov 0x30(%rbx),%r13
3f8e(4): mov 0x28(%rbx),%r12
3f92(5): mov %r9,0x10(%rsp)
3f97(4): mov 0x20(%rbx),%r15
3f9b(4): mov 0x18(%rbx),%r14
3f9f(4): mov %rax,(%rsp)
3fa3(5): mov %r8,0x8(%rsp)
3fa8(3): mov (%rbx),%rbx
3fab(5): call 0xffffd4e5(%rip)
3fb0(4): sub $0x8,%rsp
3fb4(5): mov 0x18(%rsp),%r9
3fb9(3): mov %rax,%rdx
3fbc(3): mov %rbx,%rcx
3fbf(5): mov $0x1,%esi
3fc4(3): mov %rbp,%rdi
3fc7(2): xor %eax,%eax
3fc9(2): push %r9
3fcb(2): push %r13
3fcd(2): push %r12
3fcf(2): push %r15
3fd1(2): push %r14
3fd3(5): mov 0x30(%rsp),%r9
3fd8(5): mov 0x38(%rsp),%r8
3fdd(5): call 0xffffd6a3(%rip)
3fe2(4): add $0x30,%rsp
3fe6(4): add $0x28,%rsp
3fea(1): pop %rbx
3feb(1): pop %rbp
3fec(2): pop %r12
3fee(2): pop %r13
3ff0(2): pop %r14
3ff2(2): pop %r15
3ff4(1): ret near (%rsp)
3ff5(3): nop (%rax)
3ff8(3): mov %rcx,%r8
3ffb(3): mov %rdx,%rcx
3ffe(7): lea 0x150f(%rip),%rdx
4005(5): mov $0x1,%esi
400a(2): xor %eax,%eax
400c(5): call 0xffffd674(%rip)
4011(5): jmp 0xfffffeeb(%rip)
4016(a): nop 0x0(%rax,%rax,1)
4020(4): mov 0x40(%rbx),%r10
4024(4): mov 0x38(%rbx),%r9
4028(7): lea 0x1719(%rip),%rsi
402f(4): mov 0x10(%rbx),%rax
4033(4): mov 0x8(%rbx),%r8
4037(5): mov $0x5,%edx
403c(4): mov 0x30(%rbx),%r13
4040(4): mov 0x28(%rbx),%r12
4044(4): mov 0x20(%rbx),%r15
4048(4): mov 0x18(%rbx),%r14
404c(3): mov (%rbx),%rbx
404f(5): mov %r10,0x18(%rsp)
4054(5): mov %r9,0x10(%rsp)
4059(4): mov %rax,(%rsp)
405d(5): mov %r8,0x8(%rsp)
4062(2): xor %edi,%edi
4064(5): call 0xffffd42c(%rip)
4069(5): mov 0x18(%rsp),%r10
406e(2): push %r10
4070(5): jmp 0xffffff44(%rip)
4075(3): nop (%rax)
4078(3): mov (%rbx),%rbx
407b(7): lea 0x149d(%rip),%rsi
4082(5): mov $0x5,%edx
4087(2): xor %edi,%edi
4089(5): call 0xffffd407(%rip)
408e(4): add $0x28,%rsp
4092(3): mov %rbx,%rcx
4095(3): mov %rbp,%rdi
4098(1): pop %rbx
4099(1): pop %rbp
409a(2): pop %r12
409c(2): pop %r13
409e(2): pop %r14
40a0(2): pop %r15
40a2(3): mov %rax,%rdx
40a5(5): mov $0x1,%esi
40aa(2): xor %eax,%eax
40ac(5): jmp 0xffffd5d4(%rip)
40b1(7): nop 0x0(%rax)
40b8(4): mov 0x8(%rbx),%r12
40bc(7): lea 0x146c(%rip),%rsi
40c3(3): mov (%rbx),%rbx
40c6(5): mov $0x5,%edx
40cb(2): xor %edi,%edi
40cd(5): call 0xffffd3c3(%rip)
40d2(4): add $0x28,%rsp
40d6(3): mov %r12,%r8
40d9(3): mov %rbx,%rcx
40dc(3): mov %rbp,%rdi
40df(3): mov %rax,%rdx
40e2(5): mov $0x1,%esi
40e7(1): pop %rbx
40e8(1): pop %rbp
40e9(2): pop %r12
40eb(2): pop %r13
40ed(2): pop %r14
40ef(2): pop %r15
40f1(2): xor %eax,%eax
40f3(5): jmp 0xffffd58d(%rip)
40f8(8): nop 0x0(%rax,%rax,1)
4100(4): mov 0x10(%rbx),%r13
4104(4): mov 0x8(%rbx),%r12
4108(7): lea 0x1437(%rip),%rsi
410f(3): mov (%rbx),%rbx
4112(5): mov $0x5,%edx
4117(2): xor %edi,%edi
4119(5): call 0xffffd377(%rip)
411e(4): add $0x28,%rsp
4122(3): mov %r13,%r9
4125(3): mov %r12,%r8
4128(3): mov %rbx,%rcx
412b(3): mov %rbp,%rdi
412e(3): mov %rax,%rdx
4131(1): pop %rbx
4132(1): pop %rbp
4133(2): pop %r12
4135(2): pop %r13
4137(2): pop %r14
4139(2): pop %r15
413b(5): mov $0x1,%esi
4140(2): xor %eax,%eax
4142(5): jmp 0xffffd53e(%rip)
4147(9): nop 0x0(%rax,%rax,1)
4150(7): lea 0x1521(%rip),%rsi
4157(5): mov $0x5,%edx
415c(2): xor %edi,%edi
415e(4): mov 0x18(%rbx),%r14
4162(4): mov 0x10(%rbx),%r13
4166(4): mov 0x8(%rbx),%r12
416a(3): mov (%rbx),%rbx
416d(5): call 0xffffd323(%rip)
4172(4): sub $0x8,%rsp
4176(2): push %r14
4178(3): mov %rax,%rdx
417b(3): mov %r13,%r9
417e(3): mov %r12,%r8
4181(3): mov %rbx,%rcx
4184(3): mov %rbp,%rdi
4187(5): mov $0x1,%esi
418c(2): xor %eax,%eax
418e(5): call 0xffffd4f2(%rip)
4193(1): pop %rax
4194(1): pop %rdx
4195(4): add $0x28,%rsp
4199(1): pop %rbx
419a(1): pop %rbp
419b(2): pop %r12
419d(2): pop %r13
419f(2): pop %r14
41a1(2): pop %r15
41a3(1): ret near (%rsp)
41a4(4): nop 0x0(%rax)
41a8(4): mov 0x20(%rbx),%r15
41ac(7): lea 0x14e5(%rip),%rsi
41b3(5): mov $0x5,%edx
41b8(2): xor %edi,%edi
41ba(4): mov 0x18(%rbx),%r14
41be(4): mov 0x10(%rbx),%r13
41c2(4): mov 0x8(%rbx),%r12
41c6(3): mov (%rbx),%rbx
41c9(5): call 0xffffd2c7(%rip)
41ce(2): push %r15
41d0(2): jmp 0xffffffa6(%rip)
41d2(6): nop 0x0(%rax,%rax,1)
41d8(4): mov 0x8(%rbx),%r8
41dc(4): mov 0x28(%rbx),%r12
41e0(7): lea 0x14d9(%rip),%rsi
41e7(4): mov 0x20(%rbx),%r15
41eb(4): mov 0x18(%rbx),%r14
41ef(5): mov $0x5,%edx
41f4(4): mov 0x10(%rbx),%r13
41f8(2): xor %edi,%edi
41fa(3): mov (%rbx),%rbx
41fd(4): mov %r8,(%rsp)
4201(5): call 0xffffd28f(%rip)
4206(4): sub $0x8,%rsp
420a(3): mov %r13,%r9
420d(2): push %r12
420f(2): push %r15
4211(2): push %r14
4213(5): mov 0x20(%rsp),%r8
4218(3): mov %rbx,%rcx
421b(3): mov %rax,%rdx
421e(3): mov %rbp,%rdi
4221(5): mov $0x1,%esi
4226(2): xor %eax,%eax
4228(5): call 0xffffd458(%rip)
422d(4): add $0x20,%rsp
4231(4): add $0x28,%rsp
4235(1): pop %rbx
4236(1): pop %rbp
4237(2): pop %r12
4239(2): pop %r13
423b(2): pop %r14
423d(2): pop %r15
423f(1): ret near (%rsp)
4240(4): mov 0x10(%rbx),%r9
4244(4): mov 0x30(%rbx),%r13
4248(7): lea 0x1499(%rip),%rsi
424f(4): mov 0x28(%rbx),%r12
4253(4): mov 0x20(%rbx),%r15
4257(5): mov $0x5,%edx
425c(4): mov 0x18(%rbx),%r14
4260(4): mov 0x8(%rbx),%r8
4264(2): xor %edi,%edi
4266(5): mov %r9,0x8(%rsp)
426b(3): mov (%rbx),%rbx
426e(4): mov %r8,(%rsp)
4272(5): call 0xffffd21e(%rip)
4277(2): push %r13
4279(2): push %r12
427b(2): push %r15
427d(2): push %r14
427f(5): mov 0x28(%rsp),%r9
4284(2): jmp 0xffffff8f(%rip)
4286(a): nop 0x0(%rax,%rax,1)
4290(4): mov 0x40(%rbx),%r10
4294(4): mov 0x38(%rbx),%r9
4298(5): mov $0x5,%edx
429d(4): mov 0x10(%rbx),%rax
42a1(4): mov 0x8(%rbx),%r8
42a5(7): lea 0x14d4(%rip),%rsi
42ac(4): mov 0x30(%rbx),%r13
42b0(4): mov 0x28(%rbx),%r12
42b4(4): mov 0x20(%rbx),%r15
42b8(4): mov 0x18(%rbx),%r14
42bc(5): mov %r10,0x18(%rsp)
42c1(5): mov %r9,0x10(%rsp)
42c6(4): mov %rax,(%rsp)
42ca(5): mov %r8,0x8(%rsp)
42cf(3): mov (%rbx),%rbx
42d2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
42e0(3): xor %r9d,%r9d
42e3(4): cmp $0x0,(%r8)
42e7(2): jz 0x14(%rip)
42e9(7): nop 0x0(%rax)
42f0(4): add $0x1,%r9
42f4(5): cmp $0x0,0x0(%r8,%r9,8)
42f9(2): jnz 0xfffffff7(%rip)
42fb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4300(4): sub $0x68,%rsp
4304(3): mov %r8,%r10
4307(3): xor %r9d,%r9d
430a(9): mov $0x28,%rax
4313(5): mov %rax,0x58(%rsp)
4318(2): xor %eax,%eax
431a(3): mov %rsp,%r8
431d(3): nop (%rax)
4320(3): mov (%r10),%eax
4323(3): cmp $0x2f,%eax
4326(2): jnbe 0x44(%rip)
4328(3): mov %eax,%r11d
432b(4): add 0x10(%r10),%r11
432f(3): add $0x8,%eax
4332(3): mov %eax,(%r10)
4335(3): mov (%r11),%rax
4338(3): test %rax,%rax
433b(4): mov %rax,0x0(%r8,%r9,8)
433f(2): jz 0xc(%rip)
4341(4): add $0x1,%r9
4345(4): cmp $0xa,%r9
4349(2): jnz 0xffffffd7(%rip)
434b(5): call 0xfffffb75(%rip)
4350(5): mov 0x58(%rsp),%rax
4355(9): xor $0x28,%rax
435e(2): jnz 0x7(%rip)
4360(4): add $0x68,%rsp
4364(1): ret near (%rsp)
4365(5): call 0xffffd15b(%rip)
436a(4): mov 0x8(%r10),%r11
436e(4): lea 0x8(%r11),%rax
4372(4): mov %rax,0x8(%r10)
4376(2): jmp 0xffffffbf(%rip)

"version_etc" :
4380(1): push %rbp
4381(1): push %rbx
4382(6): mov $0x20,%r10d
4388(3): xor %r11d,%r11d
438b(7): sub $0xb8,%rsp
4392(9): mov $0x28,%rax
439b(5): mov %rax,0x78(%rsp)
43a0(2): xor %eax,%eax
43a2(8): lea 0xd0(%rsp),%rax
43aa(8): mov %r8,0xa0(%rsp)
43b2(8): lea 0xd0(%rsp),%rbx
43ba(5): lea 0x20(%rsp),%r8
43bf(8): mov %r9,0xa8(%rsp)
43c7(8): mov $0x20,0x8(%rsp)
43cf(5): mov %rax,0x10(%rsp)
43d4(8): lea 0x80(%rsp),%rax
43dc(3): xor %r9d,%r9d
43df(5): mov %rax,0x18(%rsp)
43e4(3): mov %rax,%rbp
43e7(9): nop 0x0(%rax,%rax,1)
43f0(4): cmp $0x2f,%r10d
43f4(2): jnbe 0x58(%rip)
43f6(3): mov %r10d,%eax
43f9(6): mov $0x1,%r11d
43ff(4): add $0x8,%r10d
4403(3): add %rbp,%rax
4406(3): mov (%rax),%rax
4409(3): test %rax,%rax
440c(4): mov %rax,0x0(%r8,%r9,8)
4410(2): jz 0xc(%rip)
4412(4): add $0x1,%r9
4416(4): cmp $0xa,%r9
441a(2): jnz 0xffffffd6(%rip)
441c(3): test %r11b,%r11b
441f(2): jnz 0x26(%rip)
4421(5): call 0xfffffa9f(%rip)
4426(5): mov 0x78(%rsp),%rax
442b(9): xor $0x28,%rax
4434(2): jnz 0xc(%rip)
4436(7): add $0xb8,%rsp
443d(1): pop %rbx
443e(1): pop %rbp
443f(1): ret near (%rsp)
4440(5): call 0xffffd080(%rip)
4445(5): mov %r10d,0x8(%rsp)
444a(2): jmp 0xffffffd7(%rip)
444c(3): mov %rbx,%rax
444f(4): add $0x8,%rbx
4453(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4460(1): push %rbx
4461(7): lea 0x10fa(%rip),%rsi
4468(5): mov $0x5,%edx
446d(2): xor %edi,%edi
446f(5): call 0xffffd021(%rip)
4474(7): lea 0x10fc(%rip),%rdx
447b(3): mov %rax,%rsi
447e(5): mov $0x1,%edi
4483(2): xor %eax,%eax
4485(5): call 0xffffd18b(%rip)
448a(7): lea 0x10fc(%rip),%rsi
4491(5): mov $0x5,%edx
4496(2): xor %edi,%edi
4498(5): call 0xffffcff8(%rip)
449d(7): lea 0xa74(%rip),%rcx
44a4(7): lea 0x8ef(%rip),%rdx
44ab(3): mov %rax,%rsi
44ae(5): mov $0x1,%edi
44b3(2): xor %eax,%eax
44b5(5): call 0xffffd15b(%rip)
44ba(7): mov 0x202bc7(%rip),%rbx
44c1(7): lea 0x12f8(%rip),%rsi
44c8(2): xor %edi,%edi
44ca(5): mov $0x5,%edx
44cf(5): call 0xffffcfc1(%rip)
44d4(3): mov %rbx,%rsi
44d7(3): mov %rax,%rdi
44da(1): pop %rbx
44db(5): jmp 0xffffd065(%rip)

"xmalloc" :
44e0(1): push %rbx
44e1(3): mov %rdi,%rbx
44e4(5): call 0xffffd0cc(%rip)
44e9(3): test %rax,%rax
44ec(2): jnz 0x7(%rip)
44ee(3): test %rbx,%rbx
44f1(2): jnz 0x4(%rip)
44f3(1): pop %rbx
44f4(1): ret near (%rsp)
44f5(5): call 0x23b(%rip)

"xnmalloc" :
4500(3): mov %rdi,%rax
4503(3): mul %rax,%rsi,%rdx
4506(3): mov %rax,%rdi
4509(3): seto %al
450c(3): test %rdi,%rdi
450f(2): js 0xc(%rip)
4511(3): movzx %al,%eax
4514(3): test %rax,%rax
4517(2): jnz 0x4(%rip)
4519(2): jmp 0xffffffc7(%rip)
451b(4): sub $0x8,%rsp
451f(5): call 0x211(%rip)

"xrealloc" :
4540(3): test %rsi,%rsi
4543(1): push %rbx
4544(3): mov %rsi,%rbx
4547(2): jnz 0x7(%rip)
4549(3): test %rdi,%rdi
454c(2): jnz 0x1c(%rip)
454e(3): mov %rbx,%rsi
4551(5): call 0xffffd09f(%rip)
4556(3): test %rax,%rax
4559(2): jnz 0x7(%rip)
455b(3): test %rbx,%rbx
455e(2): jnz 0x13(%rip)
4560(1): pop %rbx
4561(1): ret near (%rsp)
4562(6): nop 0x0(%rax,%rax,1)
4568(5): call 0xffffce68(%rip)
456d(2): xor %eax,%eax
456f(1): pop %rbx
4570(1): ret near (%rsp)
4571(5): call 0x1bf(%rip)

"xnrealloc" :
4580(3): mov %rsi,%rax
4583(3): mul %rax,%rdx,%rdx
4586(3): mov %rax,%rsi
4589(3): seto %al
458c(3): test %rsi,%rsi
458f(2): js 0xc(%rip)
4591(3): movzx %al,%eax
4594(3): test %rax,%rax
4597(2): jnz 0x4(%rip)
4599(2): jmp 0xffffffa7(%rip)
459b(4): sub $0x8,%rsp
459f(5): call 0x191(%rip)

"x2nrealloc" :
45b0(3): test %rdi,%rdi
45b3(3): mov %rdx,%r9
45b6(3): mov (%rsi),%rcx
45b9(2): jz 0x37(%rip)
45bb(2): xor %edx,%edx
45bd(a): mov $0x6148914691236517204,%rax
45c7(3): div %r9,%rax
45ca(3): cmp %rcx,%rax
45cd(2): jbe 0x3e(%rip)
45cf(3): mov %rcx,%rax
45d2(3): shr $0x1,%rax
45d5(5): lea 0x1(%rax,%rcx,1),%rcx
45da(3): mov %rcx,(%rsi)
45dd(4): imul %r9,%rcx
45e1(3): mov %rcx,%rsi
45e4(5): jmp 0xffffff5c(%rip)
45e9(7): nop 0x0(%rax)
45f0(3): test %rcx,%rcx
45f3(2): jz 0x25(%rip)
45f5(3): mov %rcx,%rax
45f8(3): mul %rax,%r9,%rdx
45fb(3): seto %dl
45fe(3): test %rax,%rax
4601(3): movzx %dl,%edx
4604(2): js 0x7(%rip)
4606(3): test %rdx,%rdx
4609(2): jz 0xffffffd1(%rip)
460b(4): sub $0x8,%rsp
460f(5): call 0x121(%rip)
4614(4): nop 0x0(%rax)
4618(2): xor %edx,%edx
461a(5): mov $0x80,%eax
461f(3): xor %r8d,%r8d
4622(3): div %r9,%rax
4625(3): test %rax,%rax
4628(4): setz %r8b
462c(4): lea 0x0(%r8,%rax,1),%rcx
4630(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4640(3): test %rdi,%rdi
4643(3): mov (%rsi),%rax
4646(2): jz 0x2a(%rip)
4648(a): mov $0x6148914691236517203,%rdx
4652(3): cmp %rdx,%rax
4655(2): jnbe 0x2c(%rip)
4657(3): mov %rax,%rdx
465a(3): shr $0x1,%rdx
465d(5): lea 0x1(%rdx,%rax,1),%rax
4662(3): mov %rax,(%rsi)
4665(3): mov %rax,%rsi
4668(5): jmp 0xfffffed8(%rip)
466d(3): nop (%rax)
4670(3): test %rax,%rax
4673(5): mov $0x80,%edx
4678(4): cmove %rdx,%rax
467c(3): test %rax,%rax
467f(2): jns 0xffffffe3(%rip)
4681(4): sub $0x8,%rsp
4685(5): call 0xab(%rip)

"xzalloc" :
4690(1): push %rbx
4691(3): mov %rdi,%rbx
4694(5): call 0xfffffe4c(%rip)
4699(3): mov %rbx,%rdx
469c(2): xor %esi,%esi
469e(3): mov %rax,%rdi
46a1(1): pop %rbx
46a2(5): jmp 0xffffce7e(%rip)

"xcalloc" :
46b0(3): mov %rdi,%rax
46b3(4): sub $0x8,%rsp
46b7(3): mul %rax,%rsi,%rdx
46ba(3): seto %dl
46bd(3): test %rax,%rax
46c0(2): js 0x19(%rip)
46c2(3): movzx %dl,%edx
46c5(3): test %rdx,%rdx
46c8(2): jnz 0x11(%rip)
46ca(5): call 0xffffce86(%rip)
46cf(3): test %rax,%rax
46d2(2): jz 0x7(%rip)
46d4(4): add $0x8,%rsp
46d8(1): ret near (%rsp)
46d9(5): call 0x57(%rip)

"xmemdup" :
46e0(1): push %rbp
46e1(1): push %rbx
46e2(3): mov %rdi,%rbp
46e5(3): mov %rsi,%rdi
46e8(3): mov %rsi,%rbx
46eb(4): sub $0x8,%rsp
46ef(5): call 0xfffffdf1(%rip)
46f4(4): add $0x8,%rsp
46f8(3): mov %rbx,%rdx
46fb(3): mov %rbp,%rsi
46fe(1): pop %rbx
46ff(1): pop %rbp
4700(3): mov %rax,%rdi
4703(5): jmp 0xffffce7d(%rip)

"xstrdup" :
4710(1): push %rbx
4711(3): mov %rdi,%rbx
4714(5): call 0xffffcd9c(%rip)
4719(3): mov %rbx,%rdi
471c(4): lea 0x1(%rax),%rsi
4720(1): pop %rbx
4721(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4730(7): lea 0x1138(%rip),%rsi
4737(4): sub $0x8,%rsp
473b(5): mov $0x5,%edx
4740(2): xor %edi,%edi
4742(5): call 0xffffcd4e(%rip)
4747(6): mov 0x2028cb(%rip),%edi
474d(7): lea 0x87c(%rip),%rdx
4754(3): mov %rax,%rcx
4757(2): xor %esi,%esi
4759(2): xor %eax,%eax
475b(5): call 0xffffced5(%rip)
4760(5): call 0xffffcc80(%rip)

"rpl_mbrtowc" :
4770(2): push %r13
4772(2): push %r12
4774(3): mov %rsi,%r13
4777(1): push %rbp
4778(1): push %rbx
4779(3): mov %rdi,%rbx
477c(3): mov %rdx,%r12
477f(4): sub $0x18,%rsp
4783(9): mov $0x28,%rax
478c(5): mov %rax,0x8(%rsp)
4791(2): xor %eax,%eax
4793(5): lea 0x4(%rsp),%rax
4798(3): test %rdi,%rdi
479b(4): cmove %rax,%rbx
479f(3): mov %rbx,%rdi
47a2(5): call 0xffffcd3e(%rip)
47a7(4): cmp $0xfffffffd,%rax
47ab(3): mov %rax,%rbp
47ae(2): jbe 0x22(%rip)
47b0(3): test %r12,%r12
47b3(2): jz 0x1d(%rip)
47b5(2): xor %edi,%edi
47b7(5): call 0x2b9(%rip)
47bc(2): test %al,%al
47be(2): jnz 0x12(%rip)
47c0(5): movzx 0x0(%r13),%eax
47c5(5): mov $0x1,%ebp
47ca(2): mov %eax,(%rbx)
47cc(4): nop 0x0(%rax)
47d0(5): mov 0x8(%rsp),%rdx
47d5(9): xor $0x28,%rdx
47de(3): mov %rbp,%rax
47e1(2): jnz 0xd(%rip)
47e3(4): add $0x18,%rsp
47e7(1): pop %rbx
47e8(1): pop %rbp
47e9(2): pop %r12
47eb(2): pop %r13
47ed(1): ret near (%rsp)
47ee(5): call 0xffffccd2(%rip)

"extract_trimmed_name" :
4800(1): push %rbp
4801(1): push %rbx
4802(3): mov %rdi,%rbp
4805(5): mov $0x21,%edi
480a(4): sub $0x8,%rsp
480e(5): call 0xfffffcd2(%rip)
4813(4): lea 0x2c(%rbp),%rsi
4817(3): mov %rax,%rbx
481a(5): mov $0x20,%edx
481f(3): mov %rax,%rdi
4822(5): call 0xffffcbde(%rip)
4827(3): mov %rbx,%rdi
482a(4): mov $0x0,0x20(%rbx)
482e(5): call 0xffffcc82(%rip)
4833(3): add %rbx,%rax
4836(3): cmp %rax,%rbx
4839(2): jnb 0x8(%rip)
483b(4): cmp $0x20,0xffffffff(%rax)
483f(2): jz 0x11(%rip)
4841(4): add $0x8,%rsp
4845(3): mov %rbx,%rax
4848(1): pop %rbx
4849(1): pop %rbp
484a(1): ret near (%rsp)
484b(5): nop 0x0(%rax,%rax,1)
4850(4): sub $0x1,%rax
4854(3): mov $0x0,(%rax)
4857(3): cmp %rax,%rbx
485a(2): jnz 0xffffffe1(%rip)
485c(2): jmp 0xffffffe5(%rip)

"read_utmp" :
4860(2): push %r15
4862(2): push %r14
4864(3): xor %r14d,%r14d
4867(2): push %r13
4869(3): mov %ecx,%r13d
486c(2): push %r12
486e(1): push %rbp
486f(1): push %rbx
4870(3): mov %r13d,%r12d
4873(2): xor %ebx,%ebx
4875(2): xor %ebp,%ebp
4877(4): and $0x2,%r12d
487b(4): sub $0x18,%rsp
487f(4): and $0x1,%r13d
4883(4): mov %rsi,(%rsp)
4887(5): mov %rdx,0x8(%rsp)
488c(5): call 0xffffcb34(%rip)
4891(5): call 0xffffccdf(%rip)
4896(5): call 0xffffcd8a(%rip)
489b(3): test %rax,%rax
489e(3): mov %rax,%r15
48a1(2): jz 0x70(%rip)
48a3(5): cmp $0x7,(%r15)
48a8(2): jnz 0xd(%rip)
48aa(5): cmp $0x0,0x2c(%r15)
48af(6): jnz 0x91(%rip)
48b5(3): test %r12d,%r12d
48b8(2): jnz 0xffffffde(%rip)
48ba(3): cmp %rbx,%rbp
48bd(6): jz 0xc3(%rip)
48c3(4): lea 0x0(%rbx,%rbx,2),%rax
48c7(3): mov (%r15),%rdx
48ca(3): mov %r15,%rsi
48cd(4): add $0x1,%rbx
48d1(4): shl/sal $0x7,%rax
48d5(3): add %r14,%rax
48d8(3): mov %rdx,(%rax)
48db(4): lea 0x8(%rax),%rdi
48df(7): mov 0x178(%r15),%rdx
48e6(4): and $0xfffffff8,%rdi
48ea(7): mov %rdx,0x178(%rax)
48f1(3): sub %rdi,%rax
48f4(3): sub %rax,%rsi
48f7(5): add $0x180,%eax
48fc(3): shr $0x3,%eax
48ff(2): mov %eax,%ecx
4901(3): REP movsd rsi(%ds,10),rdi(%es,10)
4904(5): call 0xffffcd1c(%rip)
4909(3): test %rax,%rax
490c(3): mov %rax,%r15
490f(2): jnz 0xffffff94(%rip)
4911(5): call 0xffffcb4f(%rip)
4916(4): mov (%rsp),%rax
491a(3): mov %rbx,(%rax)
491d(5): mov 0x8(%rsp),%rax
4922(3): mov %r14,(%rax)
4925(4): add $0x18,%rsp
4929(2): xor %eax,%eax
492b(1): pop %rbx
492c(1): pop %rbp
492d(2): pop %r12
492f(2): pop %r13
4931(2): pop %r14
4933(2): pop %r15
4935(1): ret near (%rsp)
4936(a): nop 0x0(%rax,%rax,1)
4940(4): mov 0x4(%r15),%edi
4944(2): test %edi,%edi
4946(6): jle 0xffffff74(%rip)
494c(3): test %r13b,%r13b
494f(6): jz 0xffffff6b(%rip)
4955(2): xor %esi,%esi
4957(5): call 0xffffcc39(%rip)
495c(2): test %eax,%eax
495e(6): jns 0xffffff5c(%rip)
4964(5): call 0xffffca8c(%rip)
4969(3): cmp $0x3,(%rax)
496c(6): jz 0xffffff2a(%rip)
4972(3): cmp %rbx,%rbp
4975(6): jnz 0xffffff4e(%rip)
497b(5): nop 0x0(%rax,%rax,1)
4980(3): test %r14,%r14
4983(2): jz 0x35(%rip)
4985(a): mov $0x16012798675095095,%rax
498f(3): cmp %rax,%rbp
4992(2): jnbe 0x4b(%rip)
4994(3): mov %rbp,%rax
4997(3): shr $0x1,%rax
499a(5): lea 0x1(%rbp,%rax,1),%rbp
499f(5): lea 0x0(%rbp,%rbp,2),%rsi
49a4(3): mov %r14,%rdi
49a7(4): shl/sal $0x7,%rsi
49ab(5): call 0xfffffb95(%rip)
49b0(3): mov %rax,%r14
49b3(5): jmp 0xffffff10(%rip)
49b8(3): test %rbp,%rbp
49bb(5): mov $0x1,%eax
49c0(5): mov $0x180,%edx
49c5(4): cmove %rax,%rbp
49c9(3): mov %rdx,%rax
49cc(2): xor %esi,%esi
49ce(3): mul %rax,%rbp,%rdx
49d1(2): jo 0x11(%rip)
49d3(3): test %rax,%rax
49d6(2): js 0x7(%rip)
49d8(3): test %rsi,%rsi
49db(2): jz 0xffffffc4(%rip)
49dd(5): call 0xfffffd53(%rip)
49e2(5): mov $0x1,%esi
49e7(2): jmp 0xffffffec(%rip)

"close_stream" :
49f0(2): push %r12
49f2(1): push %rbp
49f3(3): mov %rdi,%rbp
49f6(1): push %rbx
49f7(5): call 0xffffca39(%rip)
49fc(3): mov 0x0(%rbp),%ebx
49ff(3): mov %rbp,%rdi
4a02(3): mov %rax,%r12
4a05(5): call 0x10b(%rip)
4a0a(3): and $0x20,%ebx
4a0d(2): test %ebx,%ebx
4a0f(2): jnz 0x19(%rip)
4a11(2): test %eax,%eax
4a13(2): jz 0xc(%rip)
4a15(3): test %r12,%r12
4a18(5): mov $0xffffffff,%eax
4a1d(2): jz 0x3b(%rip)
4a1f(1): pop %rbx
4a20(1): pop %rbp
4a21(2): pop %r12
4a23(1): ret near (%rsp)
4a24(4): nop 0x0(%rax)
4a28(2): test %eax,%eax
4a2a(2): jnz 0x1e(%rip)
4a2c(5): call 0xffffc9c4(%rip)
4a31(6): mov $0x0,(%rax)
4a37(5): mov $0xffffffff,%eax
4a3c(1): pop %rbx
4a3d(1): pop %rbp
4a3e(2): pop %r12
4a40(1): ret near (%rsp)
4a41(7): nop 0x0(%rax)
4a48(1): pop %rbx
4a49(5): mov $0xffffffff,%eax
4a4e(1): pop %rbp
4a4f(2): pop %r12
4a51(1): ret near (%rsp)
4a52(6): nop 0x0(%rax,%rax,1)
4a58(5): call 0xffffc998(%rip)
4a5d(3): cmp $0x9,(%rax)
4a60(1): pop %rbx
4a61(1): pop %rbp
4a62(2): pop %r12
4a64(3): setnz %al
4a67(3): movzx %al,%eax
4a6a(2): neg %eax
4a6c(1): ret near (%rsp)

"hard_locale" :
4a70(4): sub $0x8,%rsp
4a74(2): xor %esi,%esi
4a76(5): call 0xffffcb8a(%rip)
4a7b(3): mov %rax,%rdx
4a7e(5): mov $0x1,%eax
4a83(3): test %rdx,%rdx
4a86(2): jz 0x1f(%rip)
4a88(7): lea 0xdf1(%rip),%rdi
4a8f(5): mov $0x2,%ecx
4a94(3): mov %rdx,%rsi
4a97(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4a99(3): setnbe %cl
4a9c(3): sbb $0x0,%cl
4a9f(2): xor %eax,%eax
4aa1(2): test %cl,%cl
4aa3(2): jnz 0xd(%rip)
4aa5(4): add $0x8,%rsp
4aa9(1): ret near (%rsp)
4aaa(6): nop 0x0(%rax,%rax,1)
4ab0(7): lea 0xdcb(%rip),%rdi
4ab7(5): mov $0x6,%ecx
4abc(3): mov %rdx,%rsi
4abf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4ac1(3): setnbe %al
4ac4(2): sbb $0x0,%al
4ac6(2): test %al,%al
4ac8(3): setnz %al
4acb(4): add $0x8,%rsp
4acf(1): ret near (%rsp)

"locale_charset" :
4ad0(4): sub $0x8,%rsp
4ad4(5): mov $0xe,%edi
4ad9(5): call 0xffffcaf7(%rip)
4ade(3): test %rax,%rax
4ae1(2): jz 0x1f(%rip)
4ae3(3): cmp $0x0,(%rax)
4ae6(7): lea 0xd9b(%rip),%rdx
4aed(4): cmove %rdx,%rax
4af1(4): add $0x8,%rsp
4af5(1): ret near (%rsp)
4af6(a): nop 0x0(%rax,%rax,1)
4b00(7): lea 0xd81(%rip),%rax
4b07(4): add $0x8,%rsp
4b0b(1): ret near (%rsp)

"rpl_fclose" :
4b10(2): push %r12
4b12(1): push %rbp
4b13(1): push %rbx
4b14(3): mov %rdi,%rbx
4b17(5): call 0xffffca89(%rip)
4b1c(2): test %eax,%eax
4b1e(3): mov %rbx,%rdi
4b21(2): js 0x56(%rip)
4b23(5): call 0xffffcabd(%rip)
4b28(2): test %eax,%eax
4b2a(2): jnz 0x2e(%rip)
4b2c(3): mov %rbx,%rdi
4b2f(5): call 0x61(%rip)
4b34(2): test %eax,%eax
4b36(2): jz 0x3e(%rip)
4b38(5): call 0xffffc8b8(%rip)
4b3d(3): mov (%rax),%r12d
4b40(3): mov %rbx,%rdi
4b43(3): mov %rax,%rbp
4b46(5): call 0xffffc92a(%rip)
4b4b(3): test %r12d,%r12d
4b4e(2): jnz 0x32(%rip)
4b50(1): pop %rbx
4b51(1): pop %rbp
4b52(2): pop %r12
4b54(1): ret near (%rsp)
4b55(3): nop (%rax)
4b58(3): mov %rbx,%rdi
4b5b(5): call 0xffffca45(%rip)
4b60(2): xor %esi,%esi
4b62(5): mov $0x1,%edx
4b67(2): mov %eax,%edi
4b69(5): call 0xffffc9a7(%rip)
4b6e(4): cmp $0xffffffff,%rax
4b72(2): jnz 0xffffffba(%rip)
4b74(3): mov %rbx,%rdi
4b77(1): pop %rbx
4b78(1): pop %rbp
4b79(2): pop %r12
4b7b(5): jmp 0xffffc8f5(%rip)
4b80(4): mov %r12d,0x0(%rbp)
4b84(5): mov $0xffffffff,%eax
4b89(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4b90(3): test %rdi,%rdi
4b93(1): push %rbx
4b94(3): mov %rdi,%rbx
4b97(2): jz 0x13(%rip)
4b99(5): call 0xffffca47(%rip)
4b9e(2): test %eax,%eax
4ba0(2): jz 0xa(%rip)
4ba2(6): test $0x100,(%rbx)
4ba8(2): jnz 0x10(%rip)
4baa(3): mov %rbx,%rdi
4bad(1): pop %rbx
4bae(5): jmp 0xffffca12(%rip)
4bb3(5): nop 0x0(%rax,%rax,1)
4bb8(3): mov %rbx,%rdi
4bbb(5): mov $0x1,%edx
4bc0(2): xor %esi,%esi
4bc2(5): call 0xe(%rip)
4bc7(3): mov %rbx,%rdi
4bca(1): pop %rbx
4bcb(5): jmp 0xffffc9f5(%rip)

"rpl_fseeko" :
4bd0(4): mov 0x8(%rdi),%rax
4bd4(4): cmp %rax,0x10(%rdi)
4bd8(2): jz 0x8(%rip)
4bda(5): jmp 0xffffca66(%rip)
4bdf(1): nop 
4be0(4): mov 0x20(%rdi),%rax
4be4(4): cmp %rax,0x28(%rdi)
4be8(2): jnz 0xfffffff2(%rip)
4bea(5): cmp $0x0,0x48(%rdi)
4bef(2): jnz 0xffffffeb(%rip)
4bf1(2): push %r12
4bf3(1): push %rbp
4bf4(3): mov %edx,%r12d
4bf7(1): push %rbx
4bf8(3): mov %rsi,%rbp
4bfb(3): mov %rdi,%rbx
4bfe(5): call 0xffffc9a2(%rip)
4c03(3): mov %r12d,%edx
4c06(3): mov %rbp,%rsi
4c09(2): mov %eax,%edi
4c0b(5): call 0xffffc905(%rip)
4c10(4): cmp $0xffffffff,%rax
4c14(2): jz 0xe(%rip)
4c16(3): and $0xef,(%rbx)
4c19(7): mov %rax,0x90(%rbx)
4c20(2): xor %eax,%eax
4c22(1): pop %rbx
4c23(1): pop %rbp
4c24(2): pop %r12
4c26(1): ret near (%rsp)

"__libc_csu_init" :
4c30(2): push %r15
4c32(2): push %r14
4c34(3): mov %rdx,%r15
4c37(2): push %r13
4c39(2): push %r12
4c3b(7): lea 0x201f2e(%rip),%r12
4c42(1): push %rbp
4c43(7): lea 0x201f2e(%rip),%rbp
4c4a(1): push %rbx
4c4b(3): mov %edi,%r13d
4c4e(3): mov %rsi,%r14
4c51(3): sub %r12,%rbp
4c54(4): sub $0x8,%rsp
4c58(4): sar $0x3,%rbp
4c5c(5): call 0xffffc734(%rip)
4c61(3): test %rbp,%rbp
4c64(2): jz 0x22(%rip)
4c66(2): xor %ebx,%ebx
4c68(8): nop 0x0(%rax,%rax,1)
4c70(3): mov %r15,%rdx
4c73(3): mov %r14,%rsi
4c76(3): mov %r13d,%edi
4c79(4): call 0x0(%r12,%rbx,8)
4c7d(4): add $0x1,%rbx
4c81(3): cmp %rbx,%rbp
4c84(2): jnz 0xffffffec(%rip)
4c86(4): add $0x8,%rsp
4c8a(1): pop %rbx
4c8b(1): pop %rbp
4c8c(2): pop %r12
4c8e(2): pop %r13
4c90(2): pop %r14
4c92(2): pop %r15
4c94(1): ret near (%rsp)

"atexit" :
4cb0(7): mov 0x202351(%rip),%rdx
4cb7(2): xor %esi,%esi
4cb9(5): jmp 0xffffc997(%rip)

"_fini" :
4cc0(4): sub $0x8,%rsp
4cc4(4): add $0x8,%rsp
4cc8(1): ret near (%rsp)

