
"free@plt" :
1530(6): jmp 0x20690a(%rip)
1536(5): push $0x0

"abort@plt" :
1540(6): jmp 0x206902(%rip)
1546(5): push $0x1

"__errno_location@plt" :
1550(6): jmp 0x2068fa(%rip)
1556(5): push $0x2

"strncmp@plt" :
1560(6): jmp 0x2068f2(%rip)
1566(5): push $0x3

"_exit@plt" :
1570(6): jmp 0x2068ea(%rip)
1576(5): push $0x4

"__fpending@plt" :
1580(6): jmp 0x2068e2(%rip)
1586(5): push $0x5

"fcntl@plt" :
1590(6): jmp 0x2068da(%rip)
1596(5): push $0x6

"clearerr_unlocked@plt" :
15a0(6): jmp 0x2068d2(%rip)
15a6(5): push $0x7

"textdomain@plt" :
15b0(6): jmp 0x2068ca(%rip)
15b6(5): push $0x8

"fclose@plt" :
15c0(6): jmp 0x2068c2(%rip)
15c6(5): push $0x9

"bindtextdomain@plt" :
15d0(6): jmp 0x2068ba(%rip)
15d6(5): push $0xa

"dcgettext@plt" :
15e0(6): jmp 0x2068b2(%rip)
15e6(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
15f0(6): jmp 0x2068aa(%rip)
15f6(5): push $0xc

"strlen@plt" :
1600(6): jmp 0x2068a2(%rip)
1606(5): push $0xd

"__stack_chk_fail@plt" :
1610(6): jmp 0x20689a(%rip)
1616(5): push $0xe

"getopt_long@plt" :
1620(6): jmp 0x206892(%rip)
1626(5): push $0xf

"mbrtowc@plt" :
1630(6): jmp 0x20688a(%rip)
1636(5): push $0x10

"__overflow@plt" :
1640(6): jmp 0x206882(%rip)
1646(5): push $0x11

"strrchr@plt" :
1650(6): jmp 0x20687a(%rip)
1656(5): push $0x12

"lseek@plt" :
1660(6): jmp 0x206872(%rip)
1666(5): push $0x13

"memset@plt" :
1670(6): jmp 0x20686a(%rip)
1676(5): push $0x14

"close@plt" :
1680(6): jmp 0x206862(%rip)
1686(5): push $0x15

"posix_fadvise@plt" :
1690(6): jmp 0x20685a(%rip)
1696(5): push $0x16

"read@plt" :
16a0(6): jmp 0x206852(%rip)
16a6(5): push $0x17

"memcmp@plt" :
16b0(6): jmp 0x20684a(%rip)
16b6(5): push $0x18

"fputs_unlocked@plt" :
16c0(6): jmp 0x206842(%rip)
16c6(5): push $0x19

"calloc@plt" :
16d0(6): jmp 0x20683a(%rip)
16d6(5): push $0x1a

"signal@plt" :
16e0(6): jmp 0x206832(%rip)
16e6(5): push $0x1b

"memcpy@plt" :
16f0(6): jmp 0x20682a(%rip)
16f6(5): push $0x1c

"fileno@plt" :
1700(6): jmp 0x206822(%rip)
1706(5): push $0x1d

"malloc@plt" :
1710(6): jmp 0x20681a(%rip)
1716(5): push $0x1e

"fflush@plt" :
1720(6): jmp 0x206812(%rip)
1726(5): push $0x1f

"nl_langinfo@plt" :
1730(6): jmp 0x20680a(%rip)
1736(5): push $0x20

"__freading@plt" :
1740(6): jmp 0x206802(%rip)
1746(5): push $0x21

"fwrite_unlocked@plt" :
1750(6): jmp 0x2067fa(%rip)
1756(5): push $0x22

"realloc@plt" :
1760(6): jmp 0x2067f2(%rip)
1766(5): push $0x23

"fdopen@plt" :
1770(6): jmp 0x2067ea(%rip)
1776(5): push $0x24

"setlocale@plt" :
1780(6): jmp 0x2067e2(%rip)
1786(5): push $0x25

"__printf_chk@plt" :
1790(6): jmp 0x2067da(%rip)
1796(5): push $0x26

"setvbuf@plt" :
17a0(6): jmp 0x2067d2(%rip)
17a6(5): push $0x27

"error@plt" :
17b0(6): jmp 0x2067ca(%rip)
17b6(5): push $0x28

"fseeko@plt" :
17c0(6): jmp 0x2067c2(%rip)
17c6(5): push $0x29

"fopen@plt" :
17d0(6): jmp 0x2067ba(%rip)
17d6(5): push $0x2a

"__cxa_atexit@plt" :
17e0(6): jmp 0x2067b2(%rip)
17e6(5): push $0x2b

"exit@plt" :
17f0(6): jmp 0x2067aa(%rip)
17f6(5): push $0x2c

"fwrite@plt" :
1800(6): jmp 0x2067a2(%rip)
1806(5): push $0x2d

"__fprintf_chk@plt" :
1810(6): jmp 0x20679a(%rip)
1816(5): push $0x2e

"mbsinit@plt" :
1820(6): jmp 0x206792(%rip)
1826(5): push $0x2f

"iswprint@plt" :
1830(6): jmp 0x20678a(%rip)
1836(5): push $0x30

"__ctype_b_loc@plt" :
1840(6): jmp 0x206782(%rip)
1846(5): push $0x31

".plt.got" :
1850(6): jmp 0x20679a(%rip)
1856(2): nop 

"_init" :
1508(4): sub $0x8,%rsp
150c(7): mov 0x206acd(%rip),%rax
1513(3): test %rax,%rax
1516(2): jz 0x4(%rip)
1518(2): call %rax
151a(4): add $0x8,%rsp
151e(1): ret near (%rsp)

"main" :
1860(2): push %r12
1862(1): push %rbp
1863(2): mov %edi,%ebp
1865(1): push %rbx
1866(3): mov (%rsi),%rdi
1869(3): mov %rsi,%rbx
186c(7): lea 0x2062ad(%rip),%r12
1873(5): call 0xffd(%rip)
1878(7): lea 0x4802(%rip),%rsi
187f(5): mov $0x6,%edi
1884(5): call 0xfffffefc(%rip)
1889(7): lea 0x3c9a(%rip),%rsi
1890(7): lea 0x3c6a(%rip),%rdi
1897(5): call 0xfffffd39(%rip)
189c(7): lea 0x3c5e(%rip),%rdi
18a3(5): call 0xfffffd0d(%rip)
18a8(7): lea 0xe31(%rip),%rdi
18af(5): call 0x3b81(%rip)
18b4(7): mov $0x0,0x206836(%rip)
18bb(7): mov $0x0,0x20682e(%rip)
18c2(7): lea 0x3cb8(%rip),%rdx
18c9(3): xor %r8d,%r8d
18cc(3): mov %r12,%rcx
18cf(3): mov %rbx,%rsi
18d2(2): mov %ebp,%edi
18d4(5): call 0xfffffd4c(%rip)
18d9(3): cmp $0xff,%eax
18dc(6): jz 0xef(%rip)
18e2(3): cmp $0x61,%eax
18e5(6): jz 0xbb(%rip)
18eb(2): jle 0x65(%rip)
18ed(3): cmp $0x69,%eax
18f0(6): jz 0xc0(%rip)
18f6(3): cmp $0x70,%eax
18f9(6): jnz 0x140(%rip)
18ff(7): mov 0x2067ba(%rip),%rsi
1906(3): test %rsi,%rsi
1909(6): jz 0xb3(%rip)
190f(7): mov 0x206702(%rip),%r9
1916(7): lea 0x2061c3(%rip),%rdx
191d(7): lea 0x416c(%rip),%rcx
1924(7): lea 0x3c17(%rip),%rdi
192b(6): mov $0x4,%r8d
1931(5): call 0xccf(%rip)
1936(7): lea 0x4153(%rip),%rdx
193d(3): mov 0x0(%rdx,%rax,4),%eax
1940(6): mov %eax,0x2067a6(%rip)
1946(5): jmp 0xffffff7c(%rip)
194b(5): nop 0x0(%rax,%rax,1)
1950(5): cmp $0xffffff7d,%eax
1955(6): jnz 0xd6(%rip)
195b(7): lea 0x3c0f(%rip),%rax
1962(7): mov 0x20673f(%rip),%rdi
1969(7): mov 0x2066a0(%rip),%rcx
1970(2): push $0x0
1972(7): lea 0x3bd8(%rip),%r9
1979(7): lea 0x3be5(%rip),%r8
1980(1): push %rax
1981(7): lea 0x3b75(%rip),%rdx
1988(7): lea 0x3af4(%rip),%rsi
198f(2): xor %eax,%eax
1991(5): call 0x30df(%rip)
1996(2): xor %edi,%edi
1998(5): call 0xfffffe58(%rip)
199d(3): nop (%rax)
19a0(7): mov $0x1,0x20674a(%rip)
19a7(5): jmp 0xffffff1b(%rip)
19ac(4): nop 0x0(%rax)
19b0(7): mov $0x1,0x206739(%rip)
19b7(5): jmp 0xffffff0b(%rip)
19bc(a): mov $0x2,0x206726(%rip)
19c6(5): jmp 0xfffffefc(%rip)
19cb(7): cmp $0x0,0x20671e(%rip)
19d2(2): jnz 0x37(%rip)
19d4(7): cmp $0x0,0x206711(%rip)
19db(2): jnz 0x3f(%rip)
19dd(7): movsxd 0x2066d4(%rip),%rdx
19e4(2): mov %ebp,%edi
19e6(4): lea 0x0(%rbx,%rdx,8),%rsi
19ea(2): sub %edx,%edi
19ec(5): call 0x1a4(%rip)
19f1(2): xor %edi,%edi
19f3(2): mov %eax,%ebx
19f5(5): call 0xfffffc8b(%rip)
19fa(2): test %eax,%eax
19fc(2): jnz 0x47(%rip)
19fe(3): xor $0x1,%ebx
1a01(3): movzx %bl,%eax
1a04(1): pop %rbx
1a05(1): pop %rbp
1a06(2): pop %r12
1a08(1): ret near (%rsp)
1a09(5): mov $0x1,%esi
1a0e(5): mov $0x2,%edi
1a13(5): call 0xfffffccd(%rip)
1a18(2): jmp 0xffffffbc(%rip)
1a1a(5): mov $0x1,%esi
1a1f(5): mov $0xd,%edi
1a24(5): call 0xfffffcbc(%rip)
1a29(2): jmp 0xffffffb4(%rip)
1a2b(5): cmp $0xffffff7e,%eax
1a30(2): jnz 0x9(%rip)
1a32(2): xor %edi,%edi
1a34(5): call 0x56c(%rip)
1a39(5): mov $0x1,%edi
1a3e(5): call 0x562(%rip)
1a43(7): lea 0x3b3b(%rip),%rsi
1a4a(5): mov $0x5,%edx
1a4f(2): xor %edi,%edi
1a51(5): call 0xfffffb8f(%rip)
1a56(3): mov %rax,%rbx
1a59(5): call 0xfffffaf7(%rip)
1a5e(2): mov (%rax),%esi
1a60(7): lea 0x4095(%rip),%rdx
1a67(3): mov %rbx,%rcx
1a6a(5): mov $0x1,%edi
1a6f(2): xor %eax,%eax
1a71(5): call 0xfffffd3f(%rip)
1a76(a): nop 0x0(%rax,%rax,1)
1a80(2): xor %ebp,%ebp
1a82(3): mov %rdx,%r9
1a85(1): pop %rsi
1a86(3): mov %rsp,%rdx
1a89(4): and $0xfffffff0,%rsp
1a8d(1): push %rax
1a8e(1): push %rsp
1a8f(7): lea 0x398a(%rip),%r8
1a96(7): lea 0x3913(%rip),%rcx
1a9d(7): lea 0xfffffdbc(%rip),%rdi
1aa4(6): call 0x20652e(%rip)
1aaa(1): hlt 

"_start" :
1a80(2): xor %ebp,%ebp
1a82(3): mov %rdx,%r9
1a85(1): pop %rsi
1a86(3): mov %rsp,%rdx
1a89(4): and $0xfffffff0,%rsp
1a8d(1): push %rax
1a8e(1): push %rsp
1a8f(7): lea 0x398a(%rip),%r8
1a96(7): lea 0x3913(%rip),%rcx
1a9d(7): lea 0xfffffdbc(%rip),%rdi
1aa4(6): call 0x20652e(%rip)
1aaa(1): hlt 

"deregister_tm_clones" :
1ab0(7): lea 0x2065e9(%rip),%rdi
1ab7(1): push %rbp
1ab8(7): lea 0x2065e1(%rip),%rax
1abf(3): cmp %rdi,%rax
1ac2(3): mov %rsp,%rbp
1ac5(2): jz 0x1b(%rip)
1ac7(7): mov 0x206502(%rip),%rax
1ace(3): test %rax,%rax
1ad1(2): jz 0xf(%rip)
1ad3(1): pop %rbp
1ad4(2): jmp %rax
1ad6(a): nop 0x0(%rax,%rax,1)
1ae0(1): pop %rbp
1ae1(1): ret near (%rsp)

"register_tm_clones" :
1af0(7): lea 0x2065a9(%rip),%rdi
1af7(7): lea 0x2065a2(%rip),%rsi
1afe(1): push %rbp
1aff(3): sub %rdi,%rsi
1b02(3): mov %rsp,%rbp
1b05(4): sar $0x3,%rsi
1b09(3): mov %rsi,%rax
1b0c(4): shr $0x3f,%rax
1b10(3): add %rax,%rsi
1b13(3): sar $0x1,%rsi
1b16(2): jz 0x1a(%rip)
1b18(7): mov 0x2064c9(%rip),%rax
1b1f(3): test %rax,%rax
1b22(2): jz 0xe(%rip)
1b24(1): pop %rbp
1b25(2): jmp %rax
1b27(9): nop 0x0(%rax,%rax,1)
1b30(1): pop %rbp
1b31(1): ret near (%rsp)

"__do_global_dtors_aux" :
1b40(7): cmp $0x0,0x2065a1(%rip)
1b47(2): jnz 0x31(%rip)
1b49(8): cmp $0x0,0x20649f(%rip)
1b51(1): push %rbp
1b52(3): mov %rsp,%rbp
1b55(2): jz 0xe(%rip)
1b57(7): mov 0x2064aa(%rip),%rdi
1b5e(5): call 0xfffffcf2(%rip)
1b63(5): call 0xffffff4d(%rip)
1b68(7): mov $0x1,0x206579(%rip)
1b6f(1): pop %rbp
1b70(1): ret near (%rsp)
1b71(7): nop 0x0(%rax)
1b78(2): REP ret near (%rsp)

"frame_dummy" :
1b80(1): push %rbp
1b81(3): mov %rsp,%rbp
1b84(1): pop %rbp
1b85(5): jmp 0xffffff6b(%rip)

"tee_files" :
1b90(2): push %r15
1b92(2): push %r14
1b94(3): mov %rsi,%r15
1b97(2): push %r13
1b99(2): push %r12
1b9b(7): lea 0x38c4(%rip),%r12
1ba2(1): push %rbp
1ba3(1): push %rbx
1ba4(2): mov %edi,%ebx
1ba6(5): mov $0x2,%esi
1bab(7): sub $0x2038,%rsp
1bb2(9): mov $0x28,%rax
1bbb(8): mov %rax,0x2028(%rsp)
1bc3(2): xor %eax,%eax
1bc5(7): cmp $0x0,0x206525(%rip)
1bcc(4): mov %edi,0x1c(%rsp)
1bd0(7): lea 0x388d(%rip),%rax
1bd7(7): mov 0x2064d2(%rip),%rdi
1bde(4): cmovne %rax,%r12
1be2(5): call 0xbbe(%rip)
1be7(3): lea 0x1(%rbx),%edi
1bea(5): mov $0x8,%edx
1bef(3): mov %rdx,%rax
1bf2(3): movsxd %edi,%rdi
1bf5(3): mul %rax,%rdi,%rdx
1bf8(6): jo 0x38f(%rip)
1bfe(2): xor %ecx,%ecx
1c00(3): test %rax,%rax
1c03(6): js 0x37f(%rip)
1c09(3): test %rcx,%rcx
1c0c(6): jnz 0x376(%rip)
1c12(4): shl/sal $0x3,%rdi
1c16(5): call 0x2fba(%rip)
1c1b(3): mov %rax,%rbx
1c1e(7): mov 0x206483(%rip),%rax
1c25(7): lea 0x383c(%rip),%rsi
1c2c(2): xor %edi,%edi
1c2e(5): mov $0x5,%edx
1c33(3): mov %rax,(%rbx)
1c36(5): call 0xfffff9aa(%rip)
1c3b(7): mov 0x206466(%rip),%rdi
1c42(2): xor %ecx,%ecx
1c44(2): xor %esi,%esi
1c46(4): mov %rax,0xfffffff8(%r15)
1c4a(5): mov $0x2,%edx
1c4f(5): call 0xfffffb51(%rip)
1c54(4): mov 0x1c(%rsp),%eax
1c58(2): test %eax,%eax
1c5a(6): jle 0x314(%rip)
1c60(3): sub $0x1,%eax
1c63(3): xor %r14d,%r14d
1c66(5): mov $0x1,0x18(%rsp)
1c6b(4): mov %eax,0x10(%rsp)
1c6f(8): lea 0x8(,%rax,8),%r13
1c77(5): mov $0x1,%ebp
1c7c(2): jmp 0x22(%rip)
1c7e(2): nop 
1c80(2): xor %ecx,%ecx
1c82(2): xor %esi,%esi
1c84(5): mov $0x2,%edx
1c89(3): mov %rax,%rdi
1c8c(4): add $0x8,%r14
1c90(4): add $0x1,%rbp
1c94(5): call 0xfffffb0c(%rip)
1c99(3): cmp %r13,%r14
1c9c(2): jz 0x67(%rip)
1c9e(4): mov 0x0(%r15,%r14,1),%rdi
1ca2(3): mov %r12,%rsi
1ca5(5): call 0xb2b(%rip)
1caa(3): test %rax,%rax
1cad(5): mov %rax,0x8(%rbx,%r14,1)
1cb2(2): jnz 0xffffffce(%rip)
1cb4(4): mov 0x0(%r15,%r14,1),%rdx
1cb8(2): xor %edi,%edi
1cba(5): mov $0x3,%esi
1cbf(5): call 0x26f1(%rip)
1cc4(5): mov %rax,0x8(%rsp)
1cc9(5): call 0xfffff887(%rip)
1cce(6): mov 0x206418(%rip),%ecx
1cd4(2): mov (%rax),%esi
1cd6(2): xor %edi,%edi
1cd8(3): lea 0xfffffffd(%rcx),%edx
1cdb(5): mov 0x8(%rsp),%rcx
1ce0(3): cmp $0x1,%edx
1ce3(7): lea 0x3e12(%rip),%rdx
1cea(4): setbe %dil
1cee(2): xor %eax,%eax
1cf0(4): add $0x8,%r14
1cf4(5): call 0xfffffabc(%rip)
1cf9(3): cmp %r13,%r14
1cfc(5): mov $0x0,0x18(%rsp)
1d01(2): jnz 0xffffff9d(%rip)
1d03(3): test %rbp,%rbp
1d06(2): jz 0x66(%rip)
1d08(4): mov 0x1c(%rsp),%eax
1d0c(8): lea 0x8(,%rax,8),%rax
1d14(5): mov %rax,0x8(%rsp)
1d19(5): lea 0x20(%rsp),%rax
1d1e(5): mov %rax,0x10(%rsp)
1d23(5): nop 0x0(%rax,%rax,1)
1d28(5): mov 0x10(%rsp),%rsi
1d2d(2): xor %edi,%edi
1d2f(5): mov $0x2000,%edx
1d34(5): call 0xfffff96c(%rip)
1d39(3): test %rax,%rax
1d3c(3): mov %rax,%r12
1d3f(6): jns 0xe1(%rip)
1d45(5): call 0xfffff80b(%rip)
1d4a(3): cmp $0x4,(%rax)
1d4d(6): jz 0x1a8(%rip)
1d53(4): cmp $0xffffffff,%r12
1d57(6): jz 0x1e4(%rip)
1d5d(4): mov 0x1c(%rsp),%eax
1d61(2): test %eax,%eax
1d63(2): jle 0x7d(%rip)
1d65(3): sub $0x1,%eax
1d68(4): mov %eax,0x10(%rsp)
1d6c(5): mov 0x10(%rsp),%r14d
1d71(2): xor %ebp,%ebp
1d73(7): lea 0x3d82(%rip),%r13
1d7a(8): lea 0x8(,%r14,8),%r12
1d82(2): jmp 0xf(%rip)
1d84(4): nop 0x0(%rax)
1d88(4): add $0x8,%rbp
1d8c(3): cmp %r12,%rbp
1d8f(2): jz 0x51(%rip)
1d91(5): mov 0x8(%rbx,%rbp,1),%rdi
1d96(3): test %rdi,%rdi
1d99(2): jz 0xffffffef(%rip)
1d9b(5): call 0x30c5(%rip)
1da0(2): test %eax,%eax
1da2(2): jz 0xffffffe6(%rip)
1da4(4): mov 0x0(%r15,%rbp,1),%rdx
1da8(2): xor %edi,%edi
1daa(5): mov $0x3,%esi
1daf(4): add $0x8,%rbp
1db3(5): call 0x25fd(%rip)
1db8(3): mov %rax,%r14
1dbb(5): call 0xfffff795(%rip)
1dc0(2): mov (%rax),%esi
1dc2(2): xor %edi,%edi
1dc4(2): xor %eax,%eax
1dc6(3): mov %r14,%rcx
1dc9(3): mov %r13,%rdx
1dcc(5): call 0xfffff9e4(%rip)
1dd1(3): cmp %r12,%rbp
1dd4(5): mov $0x0,0x18(%rsp)
1dd9(2): jnz 0xffffffb8(%rip)
1ddb(5): nop 0x0(%rax,%rax,1)
1de0(3): mov %rbx,%rdi
1de3(5): call 0xfffff74d(%rip)
1de8(8): mov 0x2028(%rsp),%rcx
1df0(9): xor $0x28,%rcx
1df9(5): movzx 0x18(%rsp),%eax
1dfe(6): jnz 0x17f(%rip)
1e04(7): add $0x2038,%rsp
1e0b(1): pop %rbx
1e0c(1): pop %rbp
1e0d(2): pop %r12
1e0f(2): pop %r13
1e11(2): pop %r14
1e13(2): pop %r15
1e15(1): ret near (%rsp)
1e16(a): nop 0x0(%rax,%rax,1)
1e20(6): jz 0xffffff3d(%rip)
1e26(4): mov 0x1c(%rsp),%eax
1e2a(2): test %eax,%eax
1e2c(6): js 0xc9(%rip)
1e32(3): xor %r14d,%r14d
1e35(3): nop (%rax)
1e38(4): mov 0x0(%rbx,%r14,1),%r13
1e3c(3): test %r13,%r13
1e3f(6): jz 0xa7(%rip)
1e45(5): mov 0x10(%rsp),%rdi
1e4a(3): mov %r13,%rcx
1e4d(5): mov $0x1,%edx
1e52(3): mov %r12,%rsi
1e55(5): call 0xfffff8fb(%rip)
1e5a(4): cmp $0x1,%rax
1e5e(6): jz 0x88(%rip)
1e64(5): call 0xfffff6ec(%rip)
1e69(3): mov (%rax),%r10d
1e6c(7): mov 0x206235(%rip),%rax
1e73(4): cmp $0x20,%r10d
1e77(6): jz 0x91(%rip)
1e7d(3): cmp %rax,%r13
1e80(2): jnz 0x14(%rip)
1e82(3): mov %r13,%rdi
1e85(5): mov %r10d,0x18(%rsp)
1e8a(5): call 0xfffff716(%rip)
1e8f(5): mov 0x18(%rsp),%r10d
1e94(5): mov 0xfffffff8(%r15,%r14,1),%rdx
1e99(2): xor %edi,%edi
1e9b(5): mov $0x3,%esi
1ea0(5): mov %r10d,0x18(%rsp)
1ea5(5): call 0x250b(%rip)
1eaa(6): mov 0x20623c(%rip),%ecx
1eb0(5): mov 0x18(%rsp),%r10d
1eb5(2): xor %edi,%edi
1eb7(3): lea 0xfffffffd(%rcx),%edx
1eba(3): mov %r10d,%esi
1ebd(3): mov %rax,%rcx
1ec0(3): cmp $0x1,%edx
1ec3(7): lea 0x3c32(%rip),%rdx
1eca(4): setbe %dil
1ece(2): xor %eax,%eax
1ed0(5): call 0xfffff8e0(%rip)
1ed5(8): mov $0x0,0x0(%rbx,%r14,1)
1edd(5): mov $0x0,0x18(%rsp)
1ee2(4): sub $0x1,%rbp
1ee6(4): add $0x8,%r14
1eea(5): cmp %r14,0x8(%rsp)
1eef(6): jnz 0xffffff49(%rip)
1ef5(3): test %rbp,%rbp
1ef8(6): jnz 0xfffffe30(%rip)
1efe(5): jmp 0xfffffe55(%rip)
1f03(5): nop 0x0(%rax,%rax,1)
1f08(6): mov 0x2061de(%rip),%edx
1f0e(3): and $0xfd,%edx
1f11(3): cmp $0x1,%edx
1f14(6): jz 0xffffff69(%rip)
1f1a(3): cmp %rax,%r13
1f1d(2): jz 0xc(%rip)
1f1f(8): mov $0x0,0x0(%rbx,%r14,1)
1f27(2): jmp 0xffffffbb(%rip)
1f29(3): mov %r13,%rdi
1f2c(5): call 0xfffff674(%rip)
1f31(8): mov $0x0,0x0(%rbx,%r14,1)
1f39(2): jmp 0xffffffa9(%rip)
1f3b(7): lea 0x3536(%rip),%rsi
1f42(5): mov $0x5,%edx
1f47(2): xor %edi,%edi
1f49(5): call 0xfffff697(%rip)
1f4e(3): mov %rax,%rbp
1f51(5): call 0xfffff5ff(%rip)
1f56(2): mov (%rax),%esi
1f58(3): mov %rbp,%rdx
1f5b(2): xor %edi,%edi
1f5d(2): xor %eax,%eax
1f5f(5): call 0xfffff851(%rip)
1f64(5): mov $0x0,0x18(%rsp)
1f69(5): jmp 0xfffffdf4(%rip)
1f6e(5): mov $0x1,0x18(%rsp)
1f73(5): mov $0x1,%ebp
1f78(5): jmp 0xfffffd90(%rip)
1f7d(5): call 0xfffff693(%rip)
1f82(5): call 0x2e9e(%rip)
1f87(5): mov $0x1,%ecx
1f8c(5): jmp 0xfffffc74(%rip)

"usage" :
1fa0(2): push %r13
1fa2(2): push %r12
1fa4(5): mov $0x5,%edx
1fa9(1): push %rbp
1faa(1): push %rbx
1fab(2): mov %edi,%ebp
1fad(7): sub $0x88,%rsp
1fb4(7): mov 0x20614d(%rip),%rbx
1fbb(9): mov $0x28,%rax
1fc4(5): mov %rax,0x78(%rsp)
1fc9(2): xor %eax,%eax
1fcb(2): test %edi,%edi
1fcd(2): jz 0x30(%rip)
1fcf(7): lea 0x360a(%rip),%rsi
1fd6(2): xor %edi,%edi
1fd8(5): call 0xfffff608(%rip)
1fdd(7): mov 0x2060fc(%rip),%rdi
1fe4(3): mov %rax,%rdx
1fe7(3): mov %rbx,%rcx
1fea(5): mov $0x1,%esi
1fef(2): xor %eax,%eax
1ff1(5): call 0xfffff81f(%rip)
1ff6(2): mov %ebp,%edi
1ff8(5): call 0xfffff7f8(%rip)
1ffd(7): lea 0x3604(%rip),%rsi
2004(2): xor %edi,%edi
2006(5): call 0xfffff5da(%rip)
200b(3): mov %rbx,%rdx
200e(3): mov %rax,%rsi
2011(5): mov $0x1,%edi
2016(2): xor %eax,%eax
2018(5): call 0xfffff778(%rip)
201d(7): mov 0x206084(%rip),%rbx
2024(7): lea 0x3605(%rip),%rsi
202b(5): mov $0x5,%edx
2030(2): xor %edi,%edi
2032(5): call 0xfffff5ae(%rip)
2037(3): mov %rbx,%rsi
203a(3): mov %rax,%rdi
203d(5): call 0xfffff683(%rip)
2042(7): mov 0x20605f(%rip),%rbx
2049(7): lea 0x36a0(%rip),%rsi
2050(5): mov $0x5,%edx
2055(2): xor %edi,%edi
2057(5): call 0xfffff589(%rip)
205c(3): mov %rbx,%rsi
205f(3): mov %rax,%rdi
2062(5): call 0xfffff65e(%rip)
2067(7): mov 0x20603a(%rip),%rbx
206e(7): lea 0x370b(%rip),%rsi
2075(5): mov $0x5,%edx
207a(2): xor %edi,%edi
207c(5): call 0xfffff564(%rip)
2081(3): mov %rbx,%rsi
2084(3): mov %rax,%rdi
2087(5): call 0xfffff639(%rip)
208c(7): mov 0x206015(%rip),%rbx
2093(7): lea 0x3716(%rip),%rsi
209a(5): mov $0x5,%edx
209f(2): xor %edi,%edi
20a1(5): call 0xfffff53f(%rip)
20a6(3): mov %rbx,%rsi
20a9(3): mov %rax,%rdi
20ac(5): call 0xfffff614(%rip)
20b1(7): mov 0x205ff0(%rip),%rbx
20b8(7): lea 0x3729(%rip),%rsi
20bf(5): mov $0x5,%edx
20c4(2): xor %edi,%edi
20c6(5): call 0xfffff51a(%rip)
20cb(3): mov %rbx,%rsi
20ce(3): mov %rax,%rdi
20d1(7): lea 0x33ab(%rip),%rbx
20d8(5): call 0xfffff5e8(%rip)
20dd(7): lea 0x33a3(%rip),%rax
20e4(7): lea 0x33dd(%rip),%rcx
20eb(9): mov $0x0,0x60(%rsp)
20f4(9): mov $0x0,0x68(%rsp)
20fd(3): mov %rsp,%rdx
2100(4): mov %rax,(%rsp)
2104(7): lea 0x337e(%rip),%rax
210b(5): mov %rcx,0x30(%rsp)
2110(7): lea 0x33bb(%rip),%rcx
2117(5): mov %rax,0x8(%rsp)
211c(7): lea 0x33de(%rip),%rax
2123(5): mov %rcx,0x40(%rsp)
2128(7): lea 0x33ad(%rip),%rcx
212f(5): mov %rax,0x10(%rsp)
2134(7): lea 0x335e(%rip),%rax
213b(5): mov %rcx,0x50(%rsp)
2140(5): mov %rax,0x18(%rsp)
2145(7): lea 0x3363(%rip),%rax
214c(5): mov %rax,0x20(%rsp)
2151(7): lea 0x3361(%rip),%rax
2158(5): mov %rax,0x28(%rsp)
215d(5): mov %rax,0x38(%rsp)
2162(5): mov %rax,0x48(%rsp)
2167(5): mov %rax,0x58(%rsp)
216c(4): nop 0x0(%rax)
2170(4): add $0x10,%rdx
2174(3): mov (%rdx),%rdi
2177(3): test %rdi,%rdi
217a(2): jz 0x15(%rip)
217c(5): mov $0x4,%ecx
2181(3): mov %rbx,%rsi
2184(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2186(3): setnbe %al
2189(2): sbb $0x0,%al
218b(2): test %al,%al
218d(2): jnz 0xffffffe3(%rip)
218f(4): mov 0x8(%rdx),%r12
2193(2): xor %edi,%edi
2195(5): mov $0x5,%edx
219a(7): lea 0x3345(%rip),%rsi
21a1(3): test %r12,%r12
21a4(6): jz 0xc7(%rip)
21aa(5): call 0xfffff436(%rip)
21af(7): lea 0x3832(%rip),%rcx
21b6(7): lea 0x3340(%rip),%rdx
21bd(3): mov %rax,%rsi
21c0(5): mov $0x1,%edi
21c5(2): xor %eax,%eax
21c7(5): call 0xfffff5c9(%rip)
21cc(2): xor %esi,%esi
21ce(5): mov $0x5,%edi
21d3(5): call 0xfffff5ad(%rip)
21d8(3): test %rax,%rax
21db(2): jz 0x1e(%rip)
21dd(7): lea 0x3327(%rip),%rsi
21e4(5): mov $0x3,%edx
21e9(3): mov %rax,%rdi
21ec(5): call 0xfffff374(%rip)
21f1(2): test %eax,%eax
21f3(6): jnz 0x10d(%rip)
21f9(7): lea 0x330f(%rip),%rsi
2200(2): xor %edi,%edi
2202(5): mov $0x5,%edx
2207(5): call 0xfffff3d9(%rip)
220c(7): lea 0x3270(%rip),%rcx
2213(7): lea 0x37ce(%rip),%rdx
221a(3): mov %rax,%rsi
221d(5): mov $0x1,%edi
2222(2): xor %eax,%eax
2224(5): call 0xfffff56c(%rip)
2229(3): cmp %rbx,%r12
222c(7): lea 0x3270(%rip),%rcx
2233(7): lea 0x3e47(%rip),%rbx
223a(4): cmove %rcx,%rbx
223e(7): lea 0x3813(%rip),%rsi
2245(2): xor %edi,%edi
2247(5): mov $0x5,%edx
224c(5): call 0xfffff394(%rip)
2251(3): mov %rbx,%rcx
2254(3): mov %rax,%rsi
2257(3): mov %r12,%rdx
225a(5): mov $0x1,%edi
225f(2): xor %eax,%eax
2261(5): call 0xfffff52f(%rip)
2266(5): jmp 0xfffffd90(%rip)
226b(5): call 0xfffff375(%rip)
2270(7): lea 0x3771(%rip),%rcx
2277(7): lea 0x327f(%rip),%rdx
227e(3): mov %rax,%rsi
2281(5): mov $0x1,%edi
2286(2): xor %eax,%eax
2288(5): call 0xfffff508(%rip)
228d(2): xor %esi,%esi
228f(5): mov $0x5,%edi
2294(5): call 0xfffff4ec(%rip)
2299(3): test %rax,%rax
229c(2): jz 0x1a(%rip)
229e(7): lea 0x3266(%rip),%rsi
22a5(5): mov $0x3,%edx
22aa(3): mov %rax,%rdi
22ad(5): call 0xfffff2b3(%rip)
22b2(2): test %eax,%eax
22b4(2): jnz 0x45(%rip)
22b6(7): lea 0x3252(%rip),%rsi
22bd(5): mov $0x5,%edx
22c2(2): xor %edi,%edi
22c4(7): lea 0x31b8(%rip),%r12
22cb(7): lea 0x31d1(%rip),%rbx
22d2(5): call 0xfffff30e(%rip)
22d7(7): lea 0x31a5(%rip),%rcx
22de(7): lea 0x3703(%rip),%rdx
22e5(3): mov %rax,%rsi
22e8(5): mov $0x1,%edi
22ed(2): xor %eax,%eax
22ef(5): call 0xfffff4a1(%rip)
22f4(5): jmp 0xffffff4a(%rip)
22f9(7): lea 0x3183(%rip),%r12
2300(7): mov 0x205da1(%rip),%r13
2307(7): lea 0x3702(%rip),%rsi
230e(2): xor %edi,%edi
2310(5): mov $0x5,%edx
2315(5): call 0xfffff2cb(%rip)
231a(3): mov %r13,%rsi
231d(3): mov %rax,%rdi
2320(5): call 0xfffff3a0(%rip)
2325(5): jmp 0xfffffed4(%rip)

"__argmatch_die" :
2330(5): mov $0x1,%edi
2335(5): jmp 0xfffffc6b(%rip)

"argmatch" :
2340(2): push %r15
2342(2): push %r14
2344(3): mov %rsi,%r15
2347(2): push %r13
2349(2): push %r12
234b(3): mov %rcx,%r13
234e(1): push %rbp
234f(1): push %rbx
2350(3): mov %rdx,%rbp
2353(4): sub $0x28,%rsp
2357(5): mov %rdi,0x8(%rsp)
235c(5): mov %rdx,0x18(%rsp)
2361(5): call 0xfffff29f(%rip)
2366(3): mov (%r15),%r14
2369(8): mov $0xffffffff,(%rsp)
2371(3): test %r14,%r14
2374(6): jz 0xb9(%rip)
237a(3): mov %rax,%r12
237d(5): mov $0x0,0x17(%rsp)
2382(2): xor %ebx,%ebx
2384(2): jmp 0x53(%rip)
2386(a): nop 0x0(%rax,%rax,1)
2390(5): mov 0x18(%rsp),%rax
2395(3): test %rax,%rax
2398(6): jz 0xa8(%rip)
239e(4): mov (%rsp),%rdi
23a2(3): mov %r13,%rdx
23a5(3): mov %rbp,%rsi
23a8(4): imul %r13,%rdi
23ac(3): add %rax,%rdi
23af(5): call 0xfffff301(%rip)
23b4(2): test %eax,%eax
23b6(5): movzx 0x17(%rsp),%eax
23bb(5): mov $0x1,%ecx
23c0(3): cmovne %ecx,%eax
23c3(4): mov %al,0x17(%rsp)
23c7(4): add $0x1,%rbx
23cb(3): add %r13,%rbp
23ce(4): mov 0x0(%r15,%rbx,8),%r14
23d2(3): test %r14,%r14
23d5(2): jz 0x43(%rip)
23d7(5): mov 0x8(%rsp),%rsi
23dc(3): mov %r12,%rdx
23df(3): mov %r14,%rdi
23e2(5): call 0xfffff17e(%rip)
23e7(2): test %eax,%eax
23e9(2): jnz 0xffffffde(%rip)
23eb(3): mov %r14,%rdi
23ee(5): call 0xfffff212(%rip)
23f3(3): cmp %r12,%rax
23f6(2): jz 0x5a(%rip)
23f8(5): cmp $0xffffffff,(%rsp)
23fd(2): jnz 0xffffff93(%rip)
23ff(4): mov %rbx,(%rsp)
2403(4): add $0x1,%rbx
2407(3): add %r13,%rbp
240a(4): mov 0x0(%r15,%rbx,8),%r14
240e(3): test %r14,%r14
2411(2): jnz 0xffffffc6(%rip)
2413(5): nop 0x0(%rax,%rax,1)
2418(5): cmp $0x0,0x17(%rsp)
241d(7): mov $0xfffffffe,%rax
2424(5): cmove (%rsp),%rax
2429(4): mov %rax,(%rsp)
242d(4): mov (%rsp),%rax
2431(4): add $0x28,%rsp
2435(1): pop %rbx
2436(1): pop %rbp
2437(2): pop %r12
2439(2): pop %r13
243b(2): pop %r14
243d(2): pop %r15
243f(1): ret near (%rsp)
2440(5): mov $0x1,0x17(%rsp)
2445(2): jmp 0xffffff82(%rip)
2447(9): nop 0x0(%rax,%rax,1)
2450(4): mov %rbx,(%rsp)
2454(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
2460(4): cmp $0xffffffff,%rdx
2464(2): push %r12
2466(5): mov $0x5,%edx
246b(1): push %rbp
246c(3): mov %rsi,%r12
246f(1): push %rbx
2470(3): mov %rdi,%rbp
2473(2): jz 0x4d(%rip)
2475(7): lea 0x3644(%rip),%rsi
247c(2): xor %edi,%edi
247e(5): call 0xfffff162(%rip)
2483(3): mov %rax,%rbx
2486(3): mov %rbp,%rsi
2489(5): mov $0x1,%edi
248e(5): call 0x20d2(%rip)
2493(3): mov %r12,%rdx
2496(3): mov %rax,%rbp
2499(5): mov $0x8,%esi
249e(2): xor %edi,%edi
24a0(5): call 0x1cf0(%rip)
24a5(3): mov %rbp,%r8
24a8(3): mov %rbx,%rdx
24ab(3): mov %rax,%rcx
24ae(1): pop %rbx
24af(1): pop %rbp
24b0(2): pop %r12
24b2(2): xor %esi,%esi
24b4(2): xor %edi,%edi
24b6(2): xor %eax,%eax
24b8(5): jmp 0xfffff2f8(%rip)
24bd(3): nop (%rax)
24c0(7): lea 0x35de(%rip),%rsi
24c7(2): xor %edi,%edi
24c9(5): call 0xfffff117(%rip)
24ce(3): mov %rax,%rbx
24d1(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
24e0(2): push %r15
24e2(2): push %r14
24e4(3): mov %rdi,%r14
24e7(2): push %r13
24e9(2): push %r12
24eb(2): xor %edi,%edi
24ed(1): push %rbp
24ee(1): push %rbx
24ef(3): mov %rsi,%rbp
24f2(7): lea 0x35e4(%rip),%rsi
24f9(3): mov %rdx,%r12
24fc(5): mov $0x5,%edx
2501(4): sub $0x8,%rsp
2505(7): mov 0x205bd4(%rip),%rbx
250c(5): call 0xfffff0d4(%rip)
2511(3): mov %rax,%rdi
2514(3): mov %rbx,%rsi
2517(5): call 0xfffff1a9(%rip)
251c(3): mov (%r14),%r15
251f(3): test %r15,%r15
2522(6): jz 0x96(%rip)
2528(3): xor %r13d,%r13d
252b(2): xor %ebx,%ebx
252d(2): jmp 0x3b(%rip)
252f(1): nop 
2530(3): mov %r15,%rdi
2533(4): add $0x1,%rbx
2537(3): mov %rbp,%r13
253a(5): call 0x2046(%rip)
253f(7): mov 0x205b9a(%rip),%rdi
2546(7): lea 0x35a5(%rip),%rdx
254d(3): mov %rax,%rcx
2550(5): mov $0x1,%esi
2555(2): xor %eax,%eax
2557(3): add %r12,%rbp
255a(5): call 0xfffff2b6(%rip)
255f(4): mov 0x0(%r14,%rbx,8),%r15
2563(3): test %r15,%r15
2566(2): jz 0x52(%rip)
2568(3): test %rbx,%rbx
256b(2): jz 0xffffffc5(%rip)
256d(3): mov %r12,%rdx
2570(3): mov %rbp,%rsi
2573(3): mov %r13,%rdi
2576(5): call 0xfffff13a(%rip)
257b(2): test %eax,%eax
257d(2): jnz 0xffffffb3(%rip)
257f(3): mov %r15,%rdi
2582(4): add $0x1,%rbx
2586(3): add %r12,%rbp
2589(5): call 0x1ff7(%rip)
258e(7): mov 0x205b4b(%rip),%rdi
2595(7): lea 0x355e(%rip),%rdx
259c(3): mov %rax,%rcx
259f(5): mov $0x1,%esi
25a4(2): xor %eax,%eax
25a6(5): call 0xfffff26a(%rip)
25ab(4): mov 0x0(%r14,%rbx,8),%r15
25af(3): test %r15,%r15
25b2(2): jnz 0xffffffb6(%rip)
25b4(4): nop 0x0(%rax)
25b8(7): mov 0x205b21(%rip),%rdi
25bf(4): mov 0x28(%rdi),%rax
25c3(4): cmp 0x30(%rdi),%rax
25c7(2): jnb 0x21(%rip)
25c9(4): lea 0x1(%rax),%rdx
25cd(4): mov %rdx,0x28(%rdi)
25d1(3): mov $0xa,(%rax)
25d4(4): add $0x8,%rsp
25d8(1): pop %rbx
25d9(1): pop %rbp
25da(2): pop %r12
25dc(2): pop %r13
25de(2): pop %r14
25e0(2): pop %r15
25e2(1): ret near (%rsp)
25e3(5): nop 0x0(%rax,%rax,1)
25e8(4): add $0x8,%rsp
25ec(5): mov $0xa,%esi
25f1(1): pop %rbx
25f2(1): pop %rbp
25f3(2): pop %r12
25f5(2): pop %r13
25f7(2): pop %r14
25f9(2): pop %r15
25fb(5): jmp 0xfffff045(%rip)

"__xargmatch_internal" :
2600(2): push %r15
2602(2): push %r14
2604(3): mov %rdi,%r14
2607(2): push %r13
2609(2): push %r12
260b(3): mov %rsi,%r12
260e(1): push %rbp
260f(1): push %rbx
2610(3): mov %rcx,%rbp
2613(3): mov %rdx,%rbx
2616(3): mov %r8,%rcx
2619(3): mov %rbp,%rdx
261c(4): sub $0x8,%rsp
2620(3): mov %rbx,%rsi
2623(3): mov %r12,%rdi
2626(3): mov %r8,%r15
2629(3): mov %r9,%r13
262c(5): call 0xfffffd14(%rip)
2631(3): test %rax,%rax
2634(2): js 0x11(%rip)
2636(4): add $0x8,%rsp
263a(1): pop %rbx
263b(1): pop %rbp
263c(2): pop %r12
263e(2): pop %r13
2640(2): pop %r14
2642(2): pop %r15
2644(1): ret near (%rsp)
2645(3): mov %rax,%rdx
2648(3): mov %r12,%rsi
264b(3): mov %r14,%rdi
264e(5): call 0xfffffe12(%rip)
2653(3): mov %r15,%rdx
2656(3): mov %rbp,%rsi
2659(3): mov %rbx,%rdi
265c(5): call 0xfffffe84(%rip)
2661(3): call %r13
2664(7): mov $0xffffffff,%rax
266b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
2670(2): push %r14
2672(2): push %r13
2674(2): push %r12
2676(1): push %rbp
2677(1): push %rbx
2678(3): mov (%rsi),%r14
267b(3): test %r14,%r14
267e(2): jz 0x33(%rip)
2680(3): mov %rcx,%r12
2683(3): mov %rdi,%r13
2686(3): mov %rdx,%rbp
2689(4): lea 0x8(%rsi),%rbx
268d(2): jmp 0x12(%rip)
268f(1): nop 
2690(3): mov (%rbx),%r14
2693(3): add %r12,%rbp
2696(4): add $0x8,%rbx
269a(3): test %r14,%r14
269d(2): jz 0x14(%rip)
269f(3): mov %r12,%rdx
26a2(3): mov %rbp,%rsi
26a5(3): mov %r13,%rdi
26a8(5): call 0xfffff008(%rip)
26ad(2): test %eax,%eax
26af(2): jnz 0xffffffe1(%rip)
26b1(1): pop %rbx
26b2(3): mov %r14,%rax
26b5(1): pop %rbp
26b6(2): pop %r12
26b8(2): pop %r13
26ba(2): pop %r14
26bc(1): ret near (%rsp)

"close_stdout_set_file_name" :
26c0(7): mov %rdi,0x205a39(%rip)
26c7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
26d0(7): mov %dil,0x205a21(%rip)
26d7(1): ret near (%rsp)

"close_stdout" :
26e0(1): push %rbp
26e1(1): push %rbx
26e2(4): sub $0x8,%rsp
26e6(7): mov 0x2059bb(%rip),%rdi
26ed(5): call 0x2ba3(%rip)
26f2(2): test %eax,%eax
26f4(2): jz 0x18(%rip)
26f6(5): call 0xffffee5a(%rip)
26fb(7): cmp $0x0,0x2059f6(%rip)
2702(3): mov %rax,%rbx
2705(2): jz 0x1e(%rip)
2707(3): cmp $0x20,(%rax)
270a(2): jnz 0x19(%rip)
270c(7): mov 0x2059cd(%rip),%rdi
2713(5): call 0x2b7d(%rip)
2718(2): test %eax,%eax
271a(2): jnz 0x48(%rip)
271c(4): add $0x8,%rsp
2720(1): pop %rbx
2721(1): pop %rbp
2722(1): ret near (%rsp)
2723(7): lea 0x33d5(%rip),%rsi
272a(2): xor %edi,%edi
272c(5): mov $0x5,%edx
2731(5): call 0xffffeeaf(%rip)
2736(7): mov 0x2059c3(%rip),%rdi
273d(3): mov %rax,%rbp
2740(3): test %rdi,%rdi
2743(2): jz 0x2a(%rip)
2745(5): call 0x1c3b(%rip)
274a(2): mov (%rbx),%esi
274c(7): lea 0x33b8(%rip),%rdx
2753(3): mov %rax,%rcx
2756(3): mov %rbp,%r8
2759(2): xor %edi,%edi
275b(2): xor %eax,%eax
275d(5): call 0xfffff053(%rip)
2762(6): mov 0x2058b8(%rip),%edi
2768(5): call 0xffffee08(%rip)
276d(2): mov (%rbx),%esi
276f(7): lea 0x3386(%rip),%rdx
2776(3): mov %rax,%rcx
2779(2): xor %edi,%edi
277b(2): xor %eax,%eax
277d(5): call 0xfffff033(%rip)
2782(2): jmp 0xffffffe0(%rip)

"fadvise" :
27a0(3): test %rdi,%rdi
27a3(2): jz 0x1d(%rip)
27a5(1): push %rbx
27a6(2): mov %esi,%ebx
27a8(5): call 0xffffef58(%rip)
27ad(2): mov %ebx,%ecx
27af(2): xor %edx,%edx
27b1(2): xor %esi,%esi
27b3(1): pop %rbx
27b4(2): mov %eax,%edi
27b6(5): jmp 0xffffeeda(%rip)
27bb(5): nop 0x0(%rax,%rax,1)
27c0(2): REP ret near (%rsp)

"fopen_safer" :
27d0(2): push %r12
27d2(1): push %rbp
27d3(3): mov %rsi,%rbp
27d6(1): push %rbx
27d7(5): call 0xffffeff9(%rip)
27dc(3): test %rax,%rax
27df(3): mov %rax,%rbx
27e2(2): jz 0xf(%rip)
27e4(3): mov %rax,%rdi
27e7(5): call 0xffffef19(%rip)
27ec(3): cmp $0x2,%eax
27ef(2): jbe 0x11(%rip)
27f1(3): mov %rbx,%rax
27f4(1): pop %rbx
27f5(1): pop %rbp
27f6(2): pop %r12
27f8(1): ret near (%rsp)
27f9(7): nop 0x0(%rax)
2800(2): mov %eax,%edi
2802(5): call 0x1d9e(%rip)
2807(2): test %eax,%eax
2809(3): mov %eax,%r12d
280c(2): js 0x3c(%rip)
280e(3): mov %rbx,%rdi
2811(5): call 0x264f(%rip)
2816(2): test %eax,%eax
2818(2): jnz 0x15(%rip)
281a(3): mov %rbp,%rsi
281d(3): mov %r12d,%edi
2820(5): call 0xffffef50(%rip)
2825(3): test %rax,%rax
2828(3): mov %rax,%rbx
282b(2): jnz 0xffffffc6(%rip)
282d(5): call 0xffffed23(%rip)
2832(2): mov (%rax),%ebp
2834(3): mov %rax,%rbx
2837(3): mov %r12d,%edi
283a(5): call 0xffffee46(%rip)
283f(2): mov %ebp,(%rbx)
2841(2): xor %ebx,%ebx
2843(2): jmp 0xffffffae(%rip)
2845(3): nop (%rax)
2848(5): call 0xffffed08(%rip)
284d(3): mov (%rax),%r12d
2850(3): mov %rax,%rbp
2853(3): mov %rbx,%rdi
2856(5): call 0x260a(%rip)
285b(2): xor %ebx,%ebx
285d(4): mov %r12d,0x0(%rbp)
2861(2): jmp 0xffffff90(%rip)

"set_program_name" :
2870(3): test %rdi,%rdi
2873(1): push %rbx
2874(2): jz 0x79(%rip)
2876(5): mov $0x2f,%esi
287b(3): mov %rdi,%rbx
287e(5): call 0xffffedd2(%rip)
2883(3): test %rax,%rax
2886(2): jz 0x57(%rip)
2888(4): lea 0x1(%rax),%r8
288c(3): mov %r8,%rdx
288f(3): sub %rbx,%rdx
2892(4): cmp $0x6,%rdx
2896(2): jle 0x47(%rip)
2898(4): lea 0xfffffffa(%rax),%rsi
289c(7): lea 0x32ad(%rip),%rdi
28a3(5): mov $0x7,%ecx
28a8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
28aa(3): setnbe %dl
28ad(3): sbb $0x0,%dl
28b0(2): test %dl,%dl
28b2(2): jnz 0x2b(%rip)
28b4(7): lea 0x329d(%rip),%rdi
28bb(5): mov $0x3,%ecx
28c0(3): mov %r8,%rsi
28c3(3): mov %r8,%rbx
28c6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
28c8(3): setnbe %dl
28cb(3): sbb $0x0,%dl
28ce(2): test %dl,%dl
28d0(2): jnz 0xd(%rip)
28d2(4): lea 0x4(%rax),%rbx
28d6(7): mov %rbx,0x2057c3(%rip)
28dd(7): mov %rbx,0x205824(%rip)
28e4(7): mov %rbx,0x2057dd(%rip)
28eb(1): pop %rbx
28ec(1): ret near (%rsp)
28ed(7): mov 0x2057ec(%rip),%rcx
28f4(7): lea 0x321d(%rip),%rdi
28fb(5): mov $0x37,%edx
2900(5): mov $0x1,%esi
2905(5): call 0xffffeefb(%rip)
290a(5): call 0xffffec36(%rip)

"gettext_quote.part.1" :
2910(1): push %rbp
2911(1): push %rbx
2912(3): mov %rdi,%rbp
2915(2): mov %esi,%ebx
2917(4): sub $0x8,%rsp
291b(5): call 0x2a55(%rip)
2920(3): movzx (%rax),%edx
2923(3): and $0xdf,%edx
2926(3): cmp $0x55,%dl
2929(2): jz 0x77(%rip)
292b(3): cmp $0x47,%dl
292e(2): jz 0x22(%rip)
2930(7): lea 0x3234(%rip),%rax
2937(7): lea 0x322f(%rip),%rdx
293e(3): cmp $0x9,%ebx
2941(4): cmovne %rdx,%rax
2945(4): add $0x8,%rsp
2949(1): pop %rbx
294a(1): pop %rbp
294b(1): ret near (%rsp)
294c(4): nop 0x0(%rax)
2950(4): movzx 0x1(%rax),%edx
2954(3): and $0xdf,%edx
2957(3): cmp $0x42,%dl
295a(2): jnz 0xffffffd6(%rip)
295c(4): cmp $0x31,0x2(%rax)
2960(2): jnz 0xffffffd0(%rip)
2962(4): cmp $0x38,0x3(%rax)
2966(2): jnz 0xffffffca(%rip)
2968(4): cmp $0x30,0x4(%rax)
296c(2): jnz 0xffffffc4(%rip)
296e(4): cmp $0x33,0x5(%rax)
2972(2): jnz 0xffffffbe(%rip)
2974(4): cmp $0x30,0x6(%rax)
2978(2): jnz 0xffffffb8(%rip)
297a(4): cmp $0x0,0x7(%rax)
297e(2): jnz 0xffffffb2(%rip)
2980(4): cmp $0x60,0x0(%rbp)
2984(7): lea 0x31d9(%rip),%rax
298b(7): lea 0x31d6(%rip),%rdx
2992(4): cmovne %rdx,%rax
2996(4): add $0x8,%rsp
299a(1): pop %rbx
299b(1): pop %rbp
299c(1): ret near (%rsp)
299d(3): nop (%rax)
29a0(4): movzx 0x1(%rax),%edx
29a4(3): and $0xdf,%edx
29a7(3): cmp $0x54,%dl
29aa(2): jnz 0xffffff86(%rip)
29ac(4): movzx 0x2(%rax),%edx
29b0(3): and $0xdf,%edx
29b3(3): cmp $0x46,%dl
29b6(6): jnz 0xffffff7a(%rip)
29bc(4): cmp $0x2d,0x3(%rax)
29c0(6): jnz 0xffffff70(%rip)
29c6(4): cmp $0x38,0x4(%rax)
29ca(6): jnz 0xffffff66(%rip)
29d0(4): cmp $0x0,0x5(%rax)
29d4(6): jnz 0xffffff5c(%rip)
29da(4): cmp $0x60,0x0(%rbp)
29de(7): lea 0x3177(%rip),%rax
29e5(7): lea 0x3174(%rip),%rdx
29ec(4): cmovne %rdx,%rax
29f0(4): add $0x8,%rsp
29f4(1): pop %rbx
29f5(1): pop %rbp
29f6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2a00(2): push %r15
2a02(2): push %r14
2a04(3): mov %r8d,%r15d
2a07(2): push %r13
2a09(2): push %r12
2a0b(3): mov %rdi,%r14
2a0e(1): push %rbp
2a0f(1): push %rbx
2a10(3): mov %r9d,%ebx
2a13(3): mov %rsi,%r13
2a16(3): mov %rcx,%rbp
2a19(3): and $0x2,%ebx
2a1c(7): sub $0xb8,%rsp
2a23(8): mov 0xf0(%rsp),%rax
2a2b(5): mov %rdx,0x10(%rsp)
2a30(5): mov %r8d,0x8(%rsp)
2a35(5): mov %r9d,0x78(%rsp)
2a3a(5): mov %rax,0x20(%rsp)
2a3f(8): mov 0xf8(%rsp),%rax
2a47(5): mov %rax,0x68(%rsp)
2a4c(8): mov 0x100(%rsp),%rax
2a54(5): mov %rax,0x60(%rsp)
2a59(9): mov $0x28,%rax
2a62(8): mov %rax,0xa8(%rsp)
2a6a(2): xor %eax,%eax
2a6c(5): call 0xffffeb84(%rip)
2a71(4): cmp $0xa,%r15d
2a75(5): mov %rax,0x58(%rsp)
2a7a(6): jnbe 0x11b5(%rip)
2a80(7): lea 0x3139(%rip),%rcx
2a87(3): mov %r15d,%edx
2a8a(4): movsxd 0x0(%rcx,%rdx,4),%rax
2a8e(3): add %rcx,%rax
2a91(2): jmp %rax
2a93(5): mov $0x1,0xe(%rsp)
2a98(5): mov $0x0,0x7c(%rsp)
2a9d(3): xor %r12d,%r12d
2aa0(9): mov $0x0,0x50(%rsp)
2aa9(5): mov $0x1,0xf(%rsp)
2aae(5): mov $0x0,0xd(%rsp)
2ab3(7): lea 0x30b3(%rip),%rax
2aba(9): mov $0x1,0x18(%rsp)
2ac3(3): xor %r15d,%r15d
2ac6(8): mov $0x2,0x8(%rsp)
2ace(5): mov %rax,0x48(%rsp)
2ad3(3): xor %r11d,%r11d
2ad6(3): mov %rbp,%rax
2ad9(3): mov %r12d,%r8d
2adc(3): mov %r11,%rbp
2adf(3): mov %rax,%r11
2ae2(6): nop 0x0(%rax,%rax,1)
2ae8(3): cmp %rbp,%r11
2aeb(4): setnz %r12b
2aef(4): cmp $0xffffffff,%r11
2af3(2): jnz 0xf(%rip)
2af5(5): mov 0x10(%rsp),%rax
2afa(4): cmp $0x0,0x0(%rax,%rbp,1)
2afe(4): setnz %r12b
2b02(3): test %r12b,%r12b
2b05(6): jz 0x65b(%rip)
2b0b(5): cmp $0x2,0x8(%rsp)
2b10(5): mov 0x10(%rsp),%rdi
2b15(4): lea 0x0(%rdi,%rbp,1),%r9
2b19(3): setnz %al
2b1c(4): and 0xd(%rsp),%al
2b20(3): mov %eax,%r10d
2b23(6): jz 0xad(%rip)
2b29(5): mov 0x18(%rsp),%rax
2b2e(3): test %rax,%rax
2b31(6): jz 0x42f(%rip)
2b37(4): cmp $0xffffffff,%r11
2b3b(5): lea 0x0(%rbp,%rax,1),%rbx
2b40(2): jnz 0x30(%rip)
2b42(4): cmp $0x1,%rax
2b46(2): jbe 0x2a(%rip)
2b48(5): mov %r8b,0x38(%rsp)
2b4d(5): mov %r10b,0x30(%rsp)
2b52(5): mov %r9,0x28(%rsp)
2b57(5): call 0xffffeaa9(%rip)
2b5c(6): movzx 0x38(%rsp),%r8d
2b62(6): movzx 0x30(%rsp),%r10d
2b68(3): mov %rax,%r11
2b6b(5): mov 0x28(%rsp),%r9
2b70(3): cmp %r11,%rbx
2b73(5): mov %r10b,0x28(%rsp)
2b78(6): jnbe 0x5b8(%rip)
2b7e(5): mov 0x18(%rsp),%rdx
2b83(5): mov 0x48(%rsp),%rsi
2b88(3): mov %r9,%rdi
2b8b(5): mov %r11,0x40(%rsp)
2b90(5): mov %r8b,0x38(%rsp)
2b95(5): mov %r9,0x30(%rsp)
2b9a(5): call 0xffffeb16(%rip)
2b9f(2): test %eax,%eax
2ba1(5): mov 0x30(%rsp),%r9
2ba6(6): movzx 0x38(%rsp),%r8d
2bac(5): mov 0x40(%rsp),%r11
2bb1(6): jnz 0x57f(%rip)
2bb7(5): cmp $0x0,0xf(%rsp)
2bbc(6): movzx 0x28(%rsp),%r10d
2bc2(6): jnz 0xf83(%rip)
2bc8(8): nop 0x0(%rax,%rax,1)
2bd0(4): movzx (%r9),%ebx
2bd4(3): cmp $0x7e,%bl
2bd7(6): jnbe 0x321(%rip)
2bdd(7): lea 0x3008(%rip),%rcx
2be4(3): movzx %bl,%edx
2be7(4): movsxd 0x0(%rcx,%rdx,4),%rax
2beb(3): add %rcx,%rax
2bee(2): jmp %rax
2bf0(3): xor %r10d,%r10d
2bf3(4): cmp $0x1,%r11
2bf7(3): setnz %al
2bfa(4): cmp $0xffffffff,%r11
2bfe(2): jnz 0xe(%rip)
2c00(5): mov 0x10(%rsp),%rax
2c05(4): cmp $0x0,0x1(%rax)
2c09(3): setnz %al
2c0c(5): cmp $0x2,0x8(%rsp)
2c11(3): setz %dl
2c14(2): test %al,%al
2c16(6): jz 0x252(%rip)
2c1c(3): xor %r12d,%r12d
2c1f(2): xor %eax,%eax
2c21(7): nop 0x0(%rax)
2c28(5): cmp $0x1,0xd(%rsp)
2c2d(6): jnz 0x115(%rip)
2c33(2): test %dl,%dl
2c35(6): jnz 0x10d(%rip)
2c3b(5): mov 0x20(%rsp),%rsi
2c40(3): test %rsi,%rsi
2c43(2): jz 0x16(%rip)
2c45(2): mov %ebx,%edx
2c47(3): shr $0x5,%dl
2c4a(3): movzx %dl,%edx
2c4d(3): mov 0x0(%rsi,%rdx,4),%edx
2c50(3): bt %ebx,%edx
2c53(6): jb 0x150(%rip)
2c59(3): test %r10b,%r10b
2c5c(6): jnz 0x147(%rip)
2c62(3): xor $0x1,%eax
2c65(4): add $0x1,%rbp
2c69(3): and %r8d,%eax
2c6c(2): test %al,%al
2c6e(2): jz 0x22(%rip)
2c70(3): cmp %r15,%r13
2c73(2): jbe 0x7(%rip)
2c75(5): mov $0x27,0x0(%r14,%r15,1)
2c7a(4): lea 0x1(%r15),%rax
2c7e(3): cmp %rax,%r13
2c81(2): jbe 0x8(%rip)
2c83(6): mov $0x27,0x1(%r14,%r15,1)
2c89(4): add $0x2,%r15
2c8d(3): xor %r8d,%r8d
2c90(3): cmp %r13,%r15
2c93(2): jnb 0x6(%rip)
2c95(4): mov %bl,0x0(%r14,%r15,1)
2c99(5): movzx 0xe(%rsp),%edi
2c9e(4): add $0x1,%r15
2ca2(5): mov $0x0,%eax
2ca7(3): test %r12b,%r12b
2caa(3): cmove %eax,%edi
2cad(5): mov %dil,0xe(%rsp)
2cb2(5): jmp 0xfffffe36(%rip)
2cb7(9): nop 0x0(%rax,%rax,1)
2cc0(3): xor %r10d,%r10d
2cc3(4): mov 0x8(%rsp),%eax
2cc7(3): cmp $0x2,%eax
2cca(6): jz 0x5be(%rip)
2cd0(3): cmp $0x5,%eax
2cd3(6): jz 0x575(%rip)
2cd9(3): cmp $0x2,%eax
2cdc(5): mov $0x3f,%ebx
2ce1(3): setz %dl
2ce4(3): xor %r12d,%r12d
2ce7(2): xor %eax,%eax
2ce9(5): jmp 0xffffff3f(%rip)
2cee(2): nop 
2cf0(3): xor %r10d,%r10d
2cf3(5): cmp $0x2,0x8(%rsp)
2cf8(6): jz 0x508(%rip)
2cfe(5): mov %r12b,0x7c(%rsp)
2d03(2): xor %edx,%edx
2d05(2): xor %eax,%eax
2d07(5): mov $0x27,%ebx
2d0c(5): jmp 0xffffff1c(%rip)
2d11(7): nop 0x0(%rax)
2d18(5): mov $0x9,%edx
2d1d(5): mov $0x74,%ebx
2d22(5): cmp $0x2,0x8(%rsp)
2d27(3): setz %al
2d2a(4): and 0xf(%rsp),%al
2d2e(6): jnz 0x150(%rip)
2d34(5): cmp $0x0,0xd(%rsp)
2d39(2): jnz 0x67(%rip)
2d3b(2): mov %edx,%ebx
2d3d(3): xor %r12d,%r12d
2d40(2): xor %eax,%eax
2d42(5): cmp $0x0,0xf(%rsp)
2d47(6): jnz 0xfffffef4(%rip)
2d4d(5): jmp 0xffffff0c(%rip)
2d52(6): nop 0x0(%rax,%rax,1)
2d58(5): mov $0x8,%edx
2d5d(5): mov $0x62,%ebx
2d62(2): jmp 0xffffffd2(%rip)
2d64(4): nop 0x0(%rax)
2d68(5): cmp $0x2,0x8(%rsp)
2d6d(6): jz 0x3d3(%rip)
2d73(5): cmp $0x0,0xd(%rsp)
2d78(6): jz 0x218(%rip)
2d7e(5): cmp $0x0,0xf(%rsp)
2d83(6): jz 0x20d(%rip)
2d89(6): cmp $0x0,0x18(%rsp)
2d8f(6): jnz 0x3bc(%rip)
2d95(5): mov $0x5c,%ebx
2d9a(6): nop 0x0(%rax,%rax,1)
2da0(3): xor %r12d,%r12d
2da3(5): cmp $0x2,0x8(%rsp)
2da8(3): setz %dl
2dab(5): cmp $0x0,0xf(%rsp)
2db0(2): mov %edx,%eax
2db2(6): jnz 0x856(%rip)
2db8(3): mov %r8d,%eax
2dbb(3): xor $0x1,%eax
2dbe(2): and %dl,%al
2dc0(2): jz 0x31(%rip)
2dc2(3): cmp %r15,%r13
2dc5(2): jbe 0x7(%rip)
2dc7(5): mov $0x27,0x0(%r14,%r15,1)
2dcc(4): lea 0x1(%r15),%rdx
2dd0(3): cmp %rdx,%r13
2dd3(2): jbe 0x8(%rip)
2dd5(6): mov $0x24,0x1(%r14,%r15,1)
2ddb(4): lea 0x2(%r15),%rdx
2ddf(3): cmp %rdx,%r13
2de2(2): jbe 0x8(%rip)
2de4(6): mov $0x27,0x2(%r14,%r15,1)
2dea(4): add $0x3,%r15
2dee(3): mov %eax,%r8d
2df1(3): cmp %r15,%r13
2df4(2): jbe 0x7(%rip)
2df6(5): mov $0x5c,0x0(%r14,%r15,1)
2dfb(4): add $0x1,%r15
2dff(4): add $0x1,%rbp
2e03(5): jmp 0xfffffe8d(%rip)
2e08(8): nop 0x0(%rax,%rax,1)
2e10(5): cmp $0x0,0xd(%rsp)
2e15(6): jnz 0x1ce(%rip)
2e1b(2): xor %edx,%edx
2e1d(5): test $0x1,0x78(%rsp)
2e22(6): jz 0xffffff19(%rip)
2e28(4): add $0x1,%rbp
2e2c(5): jmp 0xfffffcbc(%rip)
2e31(7): nop 0x0(%rax)
2e38(5): cmp $0x2,0x8(%rsp)
2e3d(3): setz %dl
2e40(2): xor %eax,%eax
2e42(5): jmp 0xfffffde6(%rip)
2e47(9): nop 0x0(%rax,%rax,1)
2e50(5): mov $0x7,%edx
2e55(5): mov $0x61,%ebx
2e5a(5): jmp 0xfffffeda(%rip)
2e5f(1): nop 
2e60(5): cmp $0x2,0x8(%rsp)
2e65(3): setz %dl
2e68(3): test %rbp,%rbp
2e6b(6): jnz 0xfffffdb1(%rip)
2e71(5): movzx 0xf(%rsp),%eax
2e76(2): and %dl,%al
2e78(6): jz 0xfffffdb0(%rip)
2e7e(3): mov %r11,%rbp
2e81(8): mov $0x2,0x8(%rsp)
2e89(5): jmp 0x700(%rip)
2e8e(2): nop 
2e90(5): cmp $0x2,0x8(%rsp)
2e95(3): setz %dl
2e98(3): xor %r12d,%r12d
2e9b(2): jmp 0xffffffd6(%rip)
2e9d(3): nop (%rax)
2ea0(5): cmp $0x2,0x8(%rsp)
2ea5(5): mov $0x20,%ebx
2eaa(3): setz %dl
2ead(2): jmp 0xffffffc4(%rip)
2eaf(1): nop 
2eb0(5): mov $0xd,%edx
2eb5(5): mov $0x72,%ebx
2eba(5): jmp 0xfffffe68(%rip)
2ebf(1): nop 
2ec0(5): mov $0xc,%edx
2ec5(5): mov $0x66,%ebx
2eca(5): jmp 0xfffffe6a(%rip)
2ecf(1): nop 
2ed0(5): mov $0xb,%edx
2ed5(5): mov $0x76,%ebx
2eda(5): jmp 0xfffffe5a(%rip)
2edf(1): nop 
2ee0(5): mov $0xa,%edx
2ee5(5): mov $0x6e,%ebx
2eea(5): jmp 0xfffffe38(%rip)
2eef(1): nop 
2ef0(3): xor %r10d,%r10d
2ef3(5): nop 0x0(%rax,%rax,1)
2ef8(6): cmp $0x1,0x58(%rsp)
2efe(6): jnz 0x3aa(%rip)
2f04(5): mov %r11,0x38(%rsp)
2f09(5): mov %r8b,0x30(%rsp)
2f0e(5): mov %r10b,0x28(%rsp)
2f13(5): call 0xffffe92d(%rip)
2f18(3): mov (%rax),%rcx
2f1b(3): movzx %bl,%edx
2f1e(6): movzx 0x28(%rsp),%r10d
2f24(6): movzx 0x30(%rsp),%r8d
2f2a(5): mov 0x38(%rsp),%r11
2f2f(5): mov $0x1,%edi
2f34(4): movzx 0x0(%rcx,%rdx,2),%eax
2f38(4): and $0x4000,%ax
2f3c(4): setnz %r12b
2f40(3): setz %al
2f43(4): and 0xd(%rsp),%al
2f47(2): test %al,%al
2f49(6): jnz 0x998(%rip)
2f4f(5): cmp $0x2,0x8(%rsp)
2f54(3): setz %dl
2f57(5): jmp 0xfffffcd1(%rip)
2f5c(4): nop 0x0(%rax)
2f60(4): movzx (%r9),%ebx
2f64(3): cmp $0x7e,%bl
2f67(2): jnbe 0xffffff89(%rip)
2f69(7): lea 0x2e78(%rip),%rcx
2f70(3): movzx %bl,%edx
2f73(4): movsxd 0x0(%rcx,%rdx,4),%rax
2f77(3): add %rcx,%rax
2f7a(2): jmp %rax
2f7c(4): nop 0x0(%rax)
2f80(3): xor %r10d,%r10d
2f83(5): cmp $0x0,0xd(%rsp)
2f88(6): jnz 0xfffffdf6(%rip)
2f8e(2): nop 
2f90(5): mov $0x5c,%edx
2f95(5): mov $0x5c,%ebx
2f9a(5): jmp 0xfffffd9a(%rip)
2f9f(1): nop 
2fa0(5): mov $0xc,%edx
2fa5(3): xor %r10d,%r10d
2fa8(5): mov $0x66,%ebx
2fad(5): jmp 0xfffffd87(%rip)
2fb2(6): nop 0x0(%rax,%rax,1)
2fb8(5): mov $0xa,%edx
2fbd(3): xor %r10d,%r10d
2fc0(5): mov $0x6e,%ebx
2fc5(5): jmp 0xfffffd5d(%rip)
2fca(6): nop 0x0(%rax,%rax,1)
2fd0(5): mov $0x61,%ebx
2fd5(5): jmp 0xfffffdcb(%rip)
2fda(6): nop 0x0(%rax,%rax,1)
2fe0(3): xor %r10d,%r10d
2fe3(5): cmp $0x2,0x8(%rsp)
2fe8(3): setz %dl
2feb(5): cmp $0x0,0xf(%rsp)
2ff0(6): jnz 0xb9a(%rip)
2ff6(3): mov %r8d,%eax
2ff9(3): mov %r15,%rcx
2ffc(3): xor $0x1,%eax
2fff(2): and %dl,%al
3001(2): jz 0x2f(%rip)
3003(3): cmp %r15,%r13
3006(2): jbe 0x7(%rip)
3008(5): mov $0x27,0x0(%r14,%r15,1)
300d(4): lea 0x1(%r15),%rcx
3011(3): cmp %rcx,%r13
3014(2): jbe 0x8(%rip)
3016(6): mov $0x24,0x1(%r14,%r15,1)
301c(4): lea 0x2(%r15),%rcx
3020(3): cmp %rcx,%r13
3023(6): jnbe 0x636(%rip)
3029(4): lea 0x3(%r15),%rcx
302d(3): mov %eax,%r8d
3030(3): cmp %rcx,%r13
3033(2): jbe 0x7(%rip)
3035(5): mov $0x5c,0x0(%r14,%rcx,1)
303a(5): cmp $0x2,0x8(%rsp)
303f(4): lea 0x1(%rcx),%r15
3043(6): jz 0x606(%rip)
3049(4): lea 0x1(%rbp),%rax
304d(3): cmp %r11,%rax
3050(2): jnb 0x1b(%rip)
3052(5): mov 0x10(%rsp),%rax
3057(5): movzx 0x1(%rax,%rbp,1),%eax
305c(4): mov %al,0x28(%rsp)
3060(3): sub $0x30,%eax
3063(2): cmp $0x9,%al
3065(6): jbe 0x834(%rip)
306b(3): mov %r12d,%eax
306e(5): mov $0x30,%ebx
3073(3): xor %r12d,%r12d
3076(5): jmp 0xfffffbb2(%rip)
307b(5): nop 0x0(%rax,%rax,1)
3080(5): cmp $0x2,0x8(%rsp)
3085(3): mov %r10d,%r12d
3088(3): setz %dl
308b(3): xor %r10d,%r10d
308e(2): xor %eax,%eax
3090(5): jmp 0xfffffb98(%rip)
3095(3): nop (%rax)
3098(5): cmp $0x2,0x8(%rsp)
309d(3): setz %dl
30a0(3): xor %r10d,%r10d
30a3(5): jmp 0xfffffdc5(%rip)
30a8(8): nop 0x0(%rax,%rax,1)
30b0(5): cmp $0x2,0x8(%rsp)
30b5(3): setz %dl
30b8(3): xor %r10d,%r10d
30bb(3): xor %r12d,%r12d
30be(5): jmp 0xfffffdb3(%rip)
30c3(5): nop 0x0(%rax,%rax,1)
30c8(5): cmp $0x2,0x8(%rsp)
30cd(3): mov %r10d,%r12d
30d0(5): mov $0x20,%ebx
30d5(3): setz %dl
30d8(3): xor %r10d,%r10d
30db(5): jmp 0xfffffd96(%rip)
30e0(5): mov $0xd,%edx
30e5(3): xor %r10d,%r10d
30e8(5): mov $0x72,%ebx
30ed(5): jmp 0xfffffc35(%rip)
30f2(6): nop 0x0(%rax,%rax,1)
30f8(5): mov $0x76,%ebx
30fd(5): jmp 0xfffffca3(%rip)
3102(6): nop 0x0(%rax,%rax,1)
3108(5): mov $0x9,%edx
310d(3): xor %r10d,%r10d
3110(5): mov $0x74,%ebx
3115(5): jmp 0xfffffc0d(%rip)
311a(6): nop 0x0(%rax,%rax,1)
3120(5): mov $0x62,%ebx
3125(5): jmp 0xfffffc7b(%rip)
312a(6): nop 0x0(%rax,%rax,1)
3130(3): xor %r10d,%r10d
3133(5): jmp 0xfffffa9d(%rip)
3138(8): nop 0x0(%rax,%rax,1)
3140(5): cmp $0x0,0xf(%rsp)
3145(6): jnz 0x96b(%rip)
314b(4): add $0x1,%rbp
314f(3): mov %r8d,%eax
3152(3): xor %r12d,%r12d
3155(5): mov $0x5c,%ebx
315a(5): jmp 0xfffffb12(%rip)
315f(1): nop 
3160(5): cmp $0x2,0x8(%rsp)
3165(5): movzx 0xf(%rsp),%ebx
316a(3): mov %r8d,%r12d
316d(3): mov %r11,%rbp
3170(3): setz %dl
3173(2): mov %ebx,%eax
3175(3): test %r15,%r15
3178(3): setz %cl
317b(2): and %edx,%eax
317d(2): and %cl,%al
317f(6): jnz 0xa67(%rip)
3185(2): mov %ebx,%eax
3187(3): xor $0x1,%eax
318a(2): and %al,%dl
318c(6): jz 0x970(%rip)
3192(5): cmp $0x0,0x7c(%rsp)
3197(6): jz 0x963(%rip)
319d(5): cmp $0x0,0xe(%rsp)
31a2(6): jnz 0x9fb(%rip)
31a8(3): test %r13,%r13
31ab(3): setz %al
31ae(6): cmp $0x0,0x50(%rsp)
31b4(3): setnz %dl
31b7(2): and %dl,%al
31b9(6): jz 0xa23(%rip)
31bf(5): mov 0x50(%rsp),%r13
31c4(7): lea 0x29a2(%rip),%rbx
31cb(4): mov $0x27,(%r14)
31cf(8): mov $0x2,0x8(%rsp)
31d7(6): mov $0x1,%r15d
31dd(9): mov $0x1,0x18(%rsp)
31e6(5): mov $0x0,0xf(%rsp)
31eb(5): mov %rbx,0x48(%rsp)
31f0(4): mov %al,0x7c(%rsp)
31f4(5): jmp 0xfffff8df(%rip)
31f9(7): nop 0x0(%rax)
3200(5): cmp $0x0,0xf(%rsp)
3205(6): jnz 0x8ab(%rip)
320b(3): test %r13,%r13
320e(6): jz 0x402(%rip)
3214(2): xor %edx,%edx
3216(6): cmp $0x0,0x50(%rsp)
321c(6): jnz 0x3f4(%rip)
3222(5): mov %r13,0x50(%rsp)
3227(4): add $0x3,%r15
322b(2): xor %eax,%eax
322d(5): mov %r12b,0x7c(%rsp)
3232(3): xor %r8d,%r8d
3235(3): mov %rdx,%r13
3238(5): mov $0x27,%ebx
323d(5): jmp 0xfffffa1c(%rip)
3242(6): nop 0x0(%rax,%rax,1)
3248(5): test $0x4,0x78(%rsp)
324d(2): jz 0x23(%rip)
324f(4): lea 0x2(%rbp),%rcx
3253(3): cmp %r11,%rcx
3256(2): jnb 0x1a(%rip)
3258(5): mov 0x10(%rsp),%rax
325d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3262(6): jz 0x790(%rip)
3268(8): nop 0x0(%rax,%rax,1)
3270(2): xor %edx,%edx
3272(3): xor %r12d,%r12d
3275(2): xor %eax,%eax
3277(5): mov $0x3f,%ebx
327c(5): jmp 0xfffff9ac(%rip)
3281(7): nop 0x0(%rax)
3288(5): cmp $0x0,0xf(%rsp)
328d(6): jnz 0x823(%rip)
3293(3): xor %r12d,%r12d
3296(2): xor %eax,%eax
3298(5): mov $0x3f,%ebx
329d(5): jmp 0xfffff9bc(%rip)
32a2(6): nop 0x0(%rax,%rax,1)
32a8(8): lea 0xa0(%rsp),%rax
32b0(4): cmp $0xffffffff,%r11
32b4(c): mov $0x0,0xa0(%rsp)
32c0(5): mov %rax,0x28(%rsp)
32c5(2): jnz 0x2f(%rip)
32c7(5): mov 0x10(%rsp),%rdi
32cc(5): mov %r8b,0x40(%rsp)
32d1(5): mov %r10b,0x38(%rsp)
32d6(5): mov %r9,0x30(%rsp)
32db(5): call 0xffffe325(%rip)
32e0(6): movzx 0x40(%rsp),%r8d
32e6(6): movzx 0x38(%rsp),%r10d
32ec(3): mov %rax,%r11
32ef(5): mov 0x30(%rsp),%r9
32f4(8): lea 0x9c(%rsp),%rax
32fc(2): xor %ecx,%ecx
32fe(4): mov %bl,0x7e(%rsp)
3302(5): mov %r8b,0x7d(%rsp)
3307(3): mov %rcx,%rbx
330a(8): mov %r9,0x88(%rsp)
3312(5): mov %rax,0x38(%rsp)
3317(5): mov %r10b,0x7f(%rsp)
331c(8): mov %r15,0x80(%rsp)
3324(5): mov %r14,0x40(%rsp)
3329(5): mov %r13,0x70(%rsp)
332e(5): mov %r11,0x30(%rsp)
3333(5): mov 0x10(%rsp),%rax
3338(5): lea 0x0(%rbp,%rbx,1),%r14
333d(5): mov 0x30(%rsp),%rdx
3342(5): mov 0x28(%rsp),%rcx
3347(5): mov 0x38(%rsp),%rdi
334c(4): lea 0x0(%rax,%r14,1),%r13
3350(3): sub %r14,%rdx
3353(3): mov %r13,%rsi
3356(5): call 0x1eaa(%rip)
335b(3): test %rax,%rax
335e(3): mov %rax,%r15
3361(2): jz 0x50(%rip)
3363(4): cmp $0xffffffff,%rax
3367(6): jz 0x61e(%rip)
336d(4): cmp $0xfffffffe,%rax
3371(6): jz 0x5a0(%rip)
3377(5): cmp $0x2,0x8(%rsp)
337c(3): setz %al
337f(4): and 0xf(%rsp),%al
3383(6): jnz 0x19d(%rip)
3389(7): mov 0x9c(%rsp),%edi
3390(5): call 0xffffe4a0(%rip)
3395(5): mov 0x28(%rsp),%rdi
339a(2): test %eax,%eax
339c(5): mov $0x0,%eax
33a1(4): cmove %eax,%r12d
33a5(3): add %r15,%rbx
33a8(5): call 0xffffe478(%rip)
33ad(2): test %eax,%eax
33af(2): jz 0xffffff84(%rip)
33b1(3): mov %r12d,%edx
33b4(3): mov %rbx,%rdi
33b7(6): movzx 0x7d(%rsp),%r8d
33bd(3): xor $0x1,%edx
33c0(5): movzx 0x7e(%rsp),%ebx
33c5(6): movzx 0x7f(%rsp),%r10d
33cb(4): and 0xd(%rsp),%dl
33cf(8): mov 0x80(%rsp),%r15
33d7(5): mov 0x40(%rsp),%r14
33dc(5): mov 0x70(%rsp),%r13
33e1(5): mov 0x30(%rsp),%r11
33e6(4): cmp $0x1,%rdi
33ea(6): jbe 0x601(%rip)
33f0(3): mov %rdi,%rcx
33f3(2): xor %esi,%esi
33f5(6): movzx 0xf(%rsp),%r9d
33fb(3): add %rbp,%rcx
33fe(5): mov 0x10(%rsp),%rdi
3403(5): jmp 0xbb(%rip)
3408(8): nop 0x0(%rax,%rax,1)
3410(5): cmp $0x2,0x8(%rsp)
3415(3): setz %al
3418(3): test %r9b,%r9b
341b(6): jnz 0x4b5(%rip)
3421(3): mov %r8d,%esi
3424(3): xor $0x1,%esi
3427(3): and %sil,%al
342a(2): jz 0x31(%rip)
342c(3): cmp %r15,%r13
342f(2): jbe 0x7(%rip)
3431(5): mov $0x27,0x0(%r14,%r15,1)
3436(4): lea 0x1(%r15),%rsi
343a(3): cmp %rsi,%r13
343d(2): jbe 0x8(%rip)
343f(6): mov $0x24,0x1(%r14,%r15,1)
3445(4): lea 0x2(%r15),%rsi
3449(3): cmp %rsi,%r13
344c(2): jbe 0x8(%rip)
344e(6): mov $0x27,0x2(%r14,%r15,1)
3454(4): add $0x3,%r15
3458(3): mov %eax,%r8d
345b(3): cmp %r15,%r13
345e(2): jbe 0x7(%rip)
3460(5): mov $0x5c,0x0(%r14,%r15,1)
3465(4): lea 0x1(%r15),%rax
3469(3): cmp %rax,%r13
346c(2): jbe 0xf(%rip)
346e(2): mov %ebx,%eax
3470(3): shr $0x6,%al
3473(3): add $0x30,%eax
3476(5): mov %al,0x1(%r14,%r15,1)
347b(4): lea 0x2(%r15),%rax
347f(3): cmp %rax,%r13
3482(2): jbe 0x12(%rip)
3484(2): mov %ebx,%eax
3486(3): shr $0x3,%al
3489(3): and $0x7,%eax
348c(3): add $0x30,%eax
348f(5): mov %al,0x2(%r14,%r15,1)
3494(3): and $0x7,%ebx
3497(4): add $0x1,%rbp
349b(4): add $0x3,%r15
349f(3): add $0x30,%ebx
34a2(3): cmp %rcx,%rbp
34a5(6): jnb 0xfffff7eb(%rip)
34ab(2): mov %edx,%esi
34ad(3): cmp %r15,%r13
34b0(2): jbe 0x6(%rip)
34b2(4): mov %bl,0x0(%r14,%r15,1)
34b6(4): movzx 0x0(%rdi,%rbp,1),%ebx
34ba(4): add $0x1,%r15
34be(2): test %dl,%dl
34c0(6): jnz 0xffffff50(%rip)
34c6(2): mov %esi,%eax
34c8(3): xor $0x1,%eax
34cb(3): and %r8d,%eax
34ce(3): test %r10b,%r10b
34d1(2): jz 0x10(%rip)
34d3(3): cmp %r15,%r13
34d6(2): jbe 0x7(%rip)
34d8(5): mov $0x5c,0x0(%r14,%r15,1)
34dd(4): add $0x1,%r15
34e1(4): add $0x1,%rbp
34e5(3): cmp %rcx,%rbp
34e8(6): jnb 0xfffff784(%rip)
34ee(2): test %al,%al
34f0(6): jz 0x3fe(%rip)
34f6(3): cmp %r15,%r13
34f9(2): jbe 0x7(%rip)
34fb(5): mov $0x27,0x0(%r14,%r15,1)
3500(4): lea 0x1(%r15),%rax
3504(3): cmp %rax,%r13
3507(2): jbe 0x8(%rip)
3509(6): mov $0x27,0x1(%r14,%r15,1)
350f(4): add $0x2,%r15
3513(3): xor %r10d,%r10d
3516(3): xor %r8d,%r8d
3519(2): jmp 0xffffff94(%rip)
351b(5): nop 0x0(%rax,%rax,1)
3520(4): cmp $0x1,%r15
3524(6): jz 0xfffffe65(%rip)
352a(5): mov 0x10(%rsp),%rdi
352f(4): lea 0x0(%rdi,%r15,1),%rcx
3533(5): lea 0x1(%rdi,%r14,1),%rdx
3538(4): lea 0x0(%rcx,%r14,1),%r8
353c(2): jmp 0x11(%rip)
353e(2): nop 
3540(4): add $0x1,%rdx
3544(3): cmp %rdx,%r8
3547(6): jz 0xfffffe42(%rip)
354d(3): movzx (%rdx),%ecx
3550(3): sub $0x5b,%ecx
3553(3): cmp $0x21,%cl
3556(2): jnbe 0xffffffea(%rip)
3558(5): mov $0x1,%esi
355d(3): shl/sal %cl,%rsi
3560(3): mov %rsi,%rcx
3563(a): mov $0x8589934635,%rsi
356d(3): test %rsi,%rcx
3570(2): jz 0xffffffd0(%rip)
3572(5): mov 0x40(%rsp),%r14
3577(5): mov 0x70(%rsp),%r13
357c(5): mov 0x30(%rsp),%rbp
3581(8): mov $0x2,0x8(%rsp)
3589(5): cmp $0x0,0xd(%rsp)
358e(2): jz 0x12(%rip)
3590(2): test %al,%al
3592(5): mov $0x4,%eax
3597(5): cmove 0x8(%rsp),%eax
359c(4): mov %eax,0x8(%rsp)
35a0(4): sub $0x8,%rsp
35a4(3): mov %rbp,%rcx
35a7(3): mov %r13,%rsi
35aa(4): push 0x68(%rsp)
35ae(4): push 0x78(%rsp)
35b2(3): mov %r14,%rdi
35b5(2): push $0x0
35b7(8): mov 0x98(%rsp),%r9d
35bf(5): mov 0x28(%rsp),%r8d
35c4(5): mov 0x30(%rsp),%rdx
35c9(4): and $0xfd,%r9d
35cd(5): call 0xfffff433(%rip)
35d2(4): add $0x20,%rsp
35d6(3): mov %rax,%r15
35d9(8): mov 0xa8(%rsp),%rbx
35e1(9): xor $0x28,%rbx
35ea(3): mov %r15,%rax
35ed(6): jnz 0x606(%rip)
35f3(7): add $0xb8,%rsp
35fa(1): pop %rbx
35fb(1): pop %rbp
35fc(2): pop %r12
35fe(2): pop %r13
3600(2): pop %r14
3602(2): pop %r15
3604(1): ret near (%rsp)
3605(3): nop (%rax)
3608(3): mov %r11,%rbp
360b(5): jmp 0xffffff7e(%rip)
3610(3): cmp %r15,%r13
3613(2): jbe 0x7(%rip)
3615(5): mov $0x27,0x0(%r14,%r15,1)
361a(4): lea 0x1(%r15),%rax
361e(3): cmp %rax,%r13
3621(2): jbe 0x8(%rip)
3623(6): mov $0x5c,0x1(%r14,%r15,1)
3629(4): lea 0x2(%r15),%rax
362d(3): cmp %rax,%r13
3630(6): jbe 0x5f2(%rip)
3636(3): mov %r13,%rdx
3639(6): mov $0x27,0x2(%r14,%r15,1)
363f(5): mov 0x50(%rsp),%r13
3644(5): jmp 0xfffffbde(%rip)
3649(3): mov %r12d,%eax
364c(5): mov $0x30,%ebx
3651(3): xor %r12d,%r12d
3654(5): jmp 0xfffff605(%rip)
3659(6): mov $0x27,0x2(%r14,%r15,1)
365f(5): jmp 0xfffff9ca(%rip)
3664(2): test %ebx,%ebx
3666(6): jnz 0xfffff42d(%rip)
366c(5): mov $0x1,0xd(%rsp)
3671(3): test %r13,%r13
3674(6): jnz 0x596(%rip)
367a(7): lea 0x24ec(%rip),%rax
3681(9): mov $0x0,0x50(%rsp)
368a(5): mov $0x1,0xe(%rsp)
368f(5): mov $0x0,0x7c(%rsp)
3694(3): xor %r12d,%r12d
3697(5): mov $0x0,0xf(%rsp)
369c(9): mov $0x1,0x18(%rsp)
36a5(5): mov %rax,0x48(%rsp)
36aa(6): mov $0x1,%r15d
36b0(8): mov $0x2,0x8(%rsp)
36b8(5): jmp 0xfffff41b(%rip)
36bd(3): nop (%rax)
36c0(2): test %ebx,%ebx
36c2(6): jnz 0x3fb(%rip)
36c8(3): test %r13,%r13
36cb(6): jz 0x22b(%rip)
36d1(4): mov $0x22,(%r14)
36d5(5): mov $0x1,0xe(%rsp)
36da(3): xor %r12d,%r12d
36dd(5): mov $0x0,0x7c(%rsp)
36e2(9): mov $0x0,0x50(%rsp)
36eb(7): lea 0x2479(%rip),%rax
36f2(5): mov $0x0,0xf(%rsp)
36f7(5): mov $0x1,0xd(%rsp)
36fc(9): mov $0x1,0x18(%rsp)
3705(6): mov $0x1,%r15d
370b(5): mov %rax,0x48(%rsp)
3710(5): jmp 0xfffff3c3(%rip)
3715(7): lea 0x244f(%rip),%rax
371c(5): mov $0x1,0xe(%rsp)
3721(5): mov $0x0,0x7c(%rsp)
3726(3): xor %r12d,%r12d
3729(9): mov $0x0,0x50(%rsp)
3732(5): mov $0x1,0xf(%rsp)
3737(5): mov $0x1,0xd(%rsp)
373c(9): mov $0x1,0x18(%rsp)
3745(3): xor %r15d,%r15d
3748(5): mov %rax,0x48(%rsp)
374d(8): mov $0x5,0x8(%rsp)
3755(5): jmp 0xfffff37e(%rip)
375a(5): mov $0x1,0xe(%rsp)
375f(5): mov $0x0,0x7c(%rsp)
3764(3): xor %r12d,%r12d
3767(9): mov $0x0,0x50(%rsp)
3770(5): mov $0x0,0xf(%rsp)
3775(3): xor %r15d,%r15d
3778(5): mov $0x1,0xd(%rsp)
377d(9): mov $0x0,0x18(%rsp)
3786(9): mov $0x0,0x48(%rsp)
378f(5): jmp 0xfffff344(%rip)
3794(5): cmp $0xa,0x8(%rsp)
3799(2): jz 0x58(%rip)
379b(7): lea 0x23cd(%rip),%rsi
37a2(2): xor %edi,%edi
37a4(5): mov $0x5,%edx
37a9(5): call 0xffffde37(%rip)
37ae(3): mov %rax,%rcx
37b1(5): mov %rax,0x68(%rsp)
37b6(7): lea 0x23b2(%rip),%rax
37bd(3): cmp %rax,%rcx
37c0(6): jz 0x39e(%rip)
37c6(7): lea 0x23a0(%rip),%rsi
37cd(2): xor %edi,%edi
37cf(5): mov $0x5,%edx
37d4(5): call 0xffffde0c(%rip)
37d9(3): mov %rax,%rcx
37dc(5): mov %rax,0x60(%rsp)
37e1(7): lea 0x2385(%rip),%rax
37e8(3): cmp %rax,%rcx
37eb(6): jz 0x389(%rip)
37f1(3): xor %r15d,%r15d
37f4(2): test %ebx,%ebx
37f6(6): jz 0x1c7(%rip)
37fc(2): test %ebx,%ebx
37fe(5): mov 0x60(%rsp),%rbx
3803(5): setnz 0xf(%rsp)
3808(3): xor %r12d,%r12d
380b(3): mov %rbx,%rdi
380e(5): call 0xffffddf2(%rip)
3813(5): mov %rbx,0x48(%rsp)
3818(5): mov %rax,0x18(%rsp)
381d(5): mov $0x1,0xe(%rsp)
3822(5): mov $0x0,0x7c(%rsp)
3827(9): mov $0x0,0x50(%rsp)
3830(5): mov $0x1,0xd(%rsp)
3835(5): jmp 0xfffff29e(%rip)
383a(5): mov $0x1,0xe(%rsp)
383f(5): mov $0x0,0x7c(%rsp)
3844(3): xor %r12d,%r12d
3847(9): mov $0x0,0x50(%rsp)
3850(5): mov $0x0,0xf(%rsp)
3855(3): xor %r15d,%r15d
3858(5): mov $0x0,0xd(%rsp)
385d(9): mov $0x0,0x18(%rsp)
3866(9): mov $0x0,0x48(%rsp)
386f(5): jmp 0xfffff264(%rip)
3874(5): mov $0x1,0xe(%rsp)
3879(5): mov $0x0,0x7c(%rsp)
387e(3): xor %r12d,%r12d
3881(9): mov $0x0,0x50(%rsp)
388a(5): mov $0x1,0xf(%rsp)
388f(5): mov $0x1,0xd(%rsp)
3894(5): jmp 0xfffff21f(%rip)
3899(3): cmp %r15,%r13
389c(2): jbe 0x7(%rip)
389e(5): mov $0x30,0x0(%r14,%r15,1)
38a3(4): lea 0x2(%rcx),%rax
38a7(3): cmp %rax,%r13
38aa(2): jbe 0x8(%rip)
38ac(6): mov $0x30,0x2(%r14,%rcx,1)
38b2(3): mov %r12d,%eax
38b5(4): lea 0x3(%rcx),%r15
38b9(3): xor %r12d,%r12d
38bc(5): mov $0x30,%ebx
38c1(5): jmp 0xfffff367(%rip)
38c6(a): nop 0x0(%rax,%rax,1)
38d0(5): movzx 0xf(%rsp),%ebx
38d5(3): mov %r11,%rbp
38d8(4): mov %bl,0xd(%rsp)
38dc(5): jmp 0xfffffcad(%rip)
38e1(5): movzx 0xd(%rsp),%edx
38e6(3): xor %r12d,%r12d
38e9(5): jmp 0xfffffb07(%rip)
38ee(3): xor %r10d,%r10d
38f1(5): jmp 0xfffffbbc(%rip)
38f6(9): mov $0x0,0x50(%rsp)
38ff(5): mov $0x1,0xe(%rsp)
3904(3): xor %r12d,%r12d
3907(5): mov $0x0,0x7c(%rsp)
390c(5): jmp 0xfffffddf(%rip)
3911(5): mov 0x30(%rsp),%r11
3916(3): mov %r14,%rsi
3919(3): mov %r13,%rcx
391c(3): mov %rbx,%rax
391f(3): mov %rbx,%rdi
3922(6): movzx 0x7d(%rsp),%r8d
3928(5): movzx 0x7e(%rsp),%ebx
392d(8): mov 0x88(%rsp),%r9
3935(3): cmp %r11,%rsi
3938(6): movzx 0x7f(%rsp),%r10d
393e(8): mov 0x80(%rsp),%r15
3946(5): mov 0x40(%rsp),%r14
394b(5): mov 0x70(%rsp),%r13
3950(2): jnb 0x28(%rip)
3952(3): cmp $0x0,(%rcx)
3955(2): jnz 0x12(%rip)
3957(2): jmp 0x21(%rip)
3959(7): nop 0x0(%rax)
3960(5): cmp $0x0,0x0(%r9,%rax,1)
3965(2): jz 0x10(%rip)
3967(4): add $0x1,%rax
396b(5): lea 0x0(%rbp,%rax,1),%rdx
3970(3): cmp %rdx,%r11
3973(2): jnbe 0xffffffed(%rip)
3975(3): mov %rax,%rdi
3978(5): movzx 0xd(%rsp),%edx
397d(3): xor %r12d,%r12d
3980(5): jmp 0xfffffa66(%rip)
3985(3): mov %rbx,%rdi
3988(6): movzx 0x7d(%rsp),%r8d
398e(5): movzx 0x7e(%rsp),%ebx
3993(6): movzx 0x7f(%rsp),%r10d
3999(8): mov 0x80(%rsp),%r15
39a1(3): xor %r12d,%r12d
39a4(5): mov 0x40(%rsp),%r14
39a9(5): mov 0x70(%rsp),%r13
39ae(5): mov 0x30(%rsp),%r11
39b3(5): movzx 0xd(%rsp),%edx
39b8(5): jmp 0xfffffa2e(%rip)
39bd(5): mov 0x68(%rsp),%rdx
39c2(3): movzx (%rdx),%eax
39c5(2): test %al,%al
39c7(6): jz 0xfffffe35(%rip)
39cd(3): nop (%rax)
39d0(3): cmp %r15,%r13
39d3(2): jbe 0x6(%rip)
39d5(4): mov %al,0x0(%r14,%r15,1)
39d9(4): add $0x1,%r15
39dd(5): movzx 0x0(%rdx,%r15,1),%eax
39e2(2): test %al,%al
39e4(2): jnz 0xffffffec(%rip)
39e6(5): jmp 0xfffffe16(%rip)
39eb(2): mov %edx,%eax
39ed(5): jmp 0xfffff55a(%rip)
39f2(4): movzx 0x0(%rax,%rcx,1),%ebx
39f6(3): cmp $0x3e,%bl
39f9(6): jnbe 0xfffff877(%rip)
39ff(a): mov $0x8070630310989004800,%rax
3a09(4): bt %rbx,%rax
3a0d(6): jnb 0xfffff863(%rip)
3a13(5): cmp $0x0,0xf(%rsp)
3a18(6): jnz 0x1ea(%rip)
3a1e(3): cmp %r15,%r13
3a21(2): jbe 0x7(%rip)
3a23(5): mov $0x3f,0x0(%r14,%r15,1)
3a28(4): lea 0x1(%r15),%rax
3a2c(3): cmp %rax,%r13
3a2f(2): jbe 0x8(%rip)
3a31(6): mov $0x22,0x1(%r14,%r15,1)
3a37(4): lea 0x2(%r15),%rax
3a3b(3): cmp %rax,%r13
3a3e(2): jbe 0x8(%rip)
3a40(6): mov $0x22,0x2(%r14,%r15,1)
3a46(4): lea 0x3(%r15),%rax
3a4a(3): cmp %rax,%r13
3a4d(2): jbe 0x8(%rip)
3a4f(6): mov $0x3f,0x3(%r14,%r15,1)
3a55(4): add $0x4,%r15
3a59(2): xor %edx,%edx
3a5b(3): xor %r12d,%r12d
3a5e(2): xor %eax,%eax
3a60(3): mov %rcx,%rbp
3a63(5): jmp 0xfffff1c5(%rip)
3a68(2): test %ebx,%ebx
3a6a(6): jz 0x18e(%rip)
3a70(7): lea 0x20f6(%rip),%rax
3a77(5): mov $0x1,0xe(%rsp)
3a7c(5): mov $0x0,0x7c(%rsp)
3a81(3): xor %r12d,%r12d
3a84(9): mov $0x0,0x50(%rsp)
3a8d(5): mov $0x1,0xf(%rsp)
3a92(5): mov $0x0,0xd(%rsp)
3a97(9): mov $0x1,0x18(%rsp)
3aa0(3): xor %r15d,%r15d
3aa3(5): mov %rax,0x48(%rsp)
3aa8(5): jmp 0xfffff02b(%rip)
3aad(3): nop (%rax)
3ab0(3): mov %r11,%rbp
3ab3(5): movzx 0xf(%rsp),%eax
3ab8(5): jmp 0xfffffad1(%rip)
3abd(7): lea 0x20a7(%rip),%rax
3ac4(5): mov $0x1,0xe(%rsp)
3ac9(5): mov $0x0,0x7c(%rsp)
3ace(3): xor %r12d,%r12d
3ad1(9): mov $0x0,0x50(%rsp)
3ada(5): mov $0x1,0xf(%rsp)
3adf(5): mov $0x1,0xd(%rsp)
3ae4(9): mov $0x1,0x18(%rsp)
3aed(3): xor %r15d,%r15d
3af0(5): mov %rax,0x48(%rsp)
3af5(5): jmp 0xffffefde(%rip)
3afa(2): mov %edx,%eax
3afc(5): mov 0x48(%rsp),%rbx
3b01(3): test %rbx,%rbx
3b04(2): jz 0x2e(%rip)
3b06(2): test %al,%al
3b08(2): jz 0x2a(%rip)
3b0a(3): movzx (%rbx),%ecx
3b0d(3): mov %rbx,%rax
3b10(2): test %cl,%cl
3b12(2): jz 0x20(%rip)
3b14(3): mov %r15,%rdx
3b17(3): sub %r15,%rax
3b1a(3): cmp %rdx,%r13
3b1d(2): jbe 0x6(%rip)
3b1f(4): mov %cl,0x0(%r14,%rdx,1)
3b23(4): add $0x1,%rdx
3b27(4): movzx 0x0(%rax,%rdx,1),%ecx
3b2b(2): test %cl,%cl
3b2d(2): jnz 0xffffffed(%rip)
3b2f(3): mov %rdx,%r15
3b32(3): cmp %r15,%r13
3b35(6): jbe 0xfffffaa4(%rip)
3b3b(5): mov $0x0,0x0(%r14,%r15,1)
3b40(5): jmp 0xfffffa99(%rip)
3b45(5): cmp $0x2,0x8(%rsp)
3b4a(5): movzx 0xf(%rsp),%ebx
3b4f(3): mov %r11,%rbp
3b52(3): setz %al
3b55(4): mov %bl,0xd(%rsp)
3b59(5): jmp 0xfffffa30(%rip)
3b5e(4): mov 0x8(%rsp),%esi
3b62(3): mov %rcx,%rdi
3b65(5): call 0xffffedab(%rip)
3b6a(5): mov %rax,0x68(%rsp)
3b6f(5): jmp 0xfffffc57(%rip)
3b74(4): mov 0x8(%rsp),%esi
3b78(3): mov %rcx,%rdi
3b7b(5): call 0xffffed95(%rip)
3b80(5): mov %rax,0x60(%rsp)
3b85(5): jmp 0xfffffc6c(%rip)
3b8a(5): movzx 0xf(%rsp),%ebx
3b8f(3): mov %r11,%rbp
3b92(2): mov %edx,%eax
3b94(4): mov %bl,0xd(%rsp)
3b98(5): jmp 0xfffff9f1(%rip)
3b9d(4): sub $0x8,%rsp
3ba1(6): mov $0x5,%r8d
3ba7(3): mov %r11,%rcx
3baa(4): push 0x68(%rsp)
3bae(4): push 0x78(%rsp)
3bb2(3): mov %r14,%rdi
3bb5(4): push 0x38(%rsp)
3bb9(8): mov 0x98(%rsp),%r9d
3bc1(5): mov 0x30(%rsp),%rdx
3bc6(5): mov 0x70(%rsp),%rsi
3bcb(5): call 0xffffee35(%rip)
3bd0(4): add $0x20,%rsp
3bd4(3): mov %rax,%r15
3bd7(5): jmp 0xfffffa02(%rip)
3bdc(5): movzx 0x7c(%rsp),%eax
3be1(5): jmp 0xffffff1b(%rip)
3be6(8): mov $0x2,0x8(%rsp)
3bee(5): jmp 0xfffff99b(%rip)
3bf3(5): call 0xffffda1d(%rip)
3bf8(5): mov $0x0,0xd(%rsp)
3bfd(5): jmp 0xfffffa74(%rip)
3c02(3): mov %r11,%rbp
3c05(5): jmp 0xfffff99b(%rip)
3c0a(5): mov $0x1,0xe(%rsp)
3c0f(2): xor %eax,%eax
3c11(3): xor %r12d,%r12d
3c14(9): mov $0x0,0x50(%rsp)
3c1d(5): jmp 0xfffff5a7(%rip)
3c22(3): mov %r13,%rdx
3c25(5): mov 0x50(%rsp),%r13
3c2a(5): jmp 0xfffff5f8(%rip)
3c2f(5): call 0xffffd911(%rip)

"quotearg_n_options" :
3c40(2): push %r15
3c42(2): push %r14
3c44(3): movsxd %edi,%r15
3c47(2): push %r13
3c49(2): push %r12
3c4b(3): mov %rdx,%r14
3c4e(1): push %rbp
3c4f(1): push %rbx
3c50(3): mov %rcx,%rbp
3c53(4): sub $0x28,%rsp
3c57(5): mov %rsi,0x8(%rsp)
3c5c(5): call 0xffffd8f4(%rip)
3c61(3): mov %rax,%r13
3c64(2): mov (%rax),%eax
3c66(3): test %r15d,%r15d
3c69(7): mov 0x204410(%rip),%rbx
3c70(4): mov %eax,0x18(%rsp)
3c74(6): js 0x16d(%rip)
3c7a(7): cmp %r15d,0x2043f7(%rip)
3c81(2): jnle 0x64(%rip)
3c83(7): cmp $0x7fffffff,%r15d
3c8a(6): jz 0x15c(%rip)
3c90(4): lea 0x1(%r15),%r12d
3c94(7): lea 0x2043f5(%rip),%rax
3c9b(3): movsxd %r12d,%rsi
3c9e(4): shl/sal $0x4,%rsi
3ca2(3): cmp %rax,%rbx
3ca5(6): jz 0x11b(%rip)
3cab(3): mov %rbx,%rdi
3cae(5): call 0xf82(%rip)
3cb3(3): mov %rax,%rbx
3cb6(7): mov %rax,0x2043c3(%rip)
3cbd(7): movsxd 0x2043b4(%rip),%rdi
3cc4(3): mov %r12d,%edx
3cc7(2): xor %esi,%esi
3cc9(2): sub %edi,%edx
3ccb(4): shl/sal $0x4,%rdi
3ccf(3): movsxd %edx,%rdx
3cd2(3): add %rbx,%rdi
3cd5(4): shl/sal $0x4,%rdx
3cd9(5): call 0xffffd997(%rip)
3cde(7): mov %r12d,0x204393(%rip)
3ce5(3): mov 0x4(%rbp),%eax
3ce8(4): shl/sal $0x4,%r15
3cec(4): sub $0x8,%rsp
3cf0(3): add %r15,%rbx
3cf3(4): lea 0x8(%rbp),%r15
3cf7(4): mov 0x0(%rbp),%r8d
3cfb(3): mov (%rbx),%r11
3cfe(4): mov 0x8(%rbx),%r12
3d02(3): mov %r14,%rcx
3d05(3): or $0x1,%eax
3d08(4): mov %eax,0x24(%rsp)
3d0c(3): push 0x30(%rbp)
3d0f(3): mov %eax,%r9d
3d12(3): push 0x28(%rbp)
3d15(2): push %r15
3d17(3): mov %r11,%rsi
3d1a(5): mov 0x28(%rsp),%rdx
3d1f(3): mov %r12,%rdi
3d22(5): mov %r11,0x30(%rsp)
3d27(5): call 0xffffecd9(%rip)
3d2c(4): add $0x20,%rsp
3d30(5): mov 0x10(%rsp),%r11
3d35(3): cmp %rax,%r11
3d38(2): jnbe 0x69(%rip)
3d3a(4): lea 0x1(%rax),%rsi
3d3e(7): lea 0x2043db(%rip),%rax
3d45(3): cmp %rax,%r12
3d48(3): mov %rsi,(%rbx)
3d4b(2): jz 0x14(%rip)
3d4d(3): mov %r12,%rdi
3d50(5): mov %rsi,0x10(%rsp)
3d55(5): call 0xffffd7db(%rip)
3d5a(5): mov 0x10(%rsp),%rsi
3d5f(3): mov %rsi,%rdi
3d62(5): mov %rsi,0x10(%rsp)
3d67(5): call 0xe69(%rip)
3d6c(4): sub $0x8,%rsp
3d70(4): mov %rax,0x8(%rbx)
3d74(4): mov 0x0(%rbp),%r8d
3d78(3): push 0x30(%rbp)
3d7b(3): push 0x28(%rbp)
3d7e(3): mov %r14,%rcx
3d81(2): push %r15
3d83(5): mov 0x3c(%rsp),%r9d
3d88(3): mov %rax,%rdi
3d8b(5): mov 0x28(%rsp),%rdx
3d90(5): mov 0x30(%rsp),%rsi
3d95(3): mov %rax,%r12
3d98(5): call 0xffffec68(%rip)
3d9d(4): add $0x20,%rsp
3da1(4): mov 0x18(%rsp),%eax
3da5(4): mov %eax,0x0(%r13)
3da9(4): add $0x28,%rsp
3dad(3): mov %r12,%rax
3db0(1): pop %rbx
3db1(1): pop %rbp
3db2(2): pop %r12
3db4(2): pop %r13
3db6(2): pop %r14
3db8(2): pop %r15
3dba(1): ret near (%rsp)
3dbb(5): nop 0x0(%rax,%rax,1)
3dc0(2): xor %edi,%edi
3dc2(5): call 0xe6e(%rip)
3dc7(8): movdqa 0x2042c1(%rip),%xmm0
3dcf(3): mov %rax,%rbx
3dd2(7): mov %rax,0x2042a7(%rip)
3dd9(3): movups %xmm0,(%rax)
3ddc(5): jmp 0xfffffee1(%rip)
3de1(5): call 0xffffd75f(%rip)
3de6(5): call 0x103a(%rip)

"clone_quoting_options" :
3df0(2): push %r12
3df2(1): push %rbp
3df3(1): push %rbx
3df4(3): mov %rdi,%rbx
3df7(5): call 0xffffd759(%rip)
3dfc(3): mov (%rax),%r12d
3dff(3): mov %rax,%rbp
3e02(7): lea 0x204417(%rip),%rax
3e09(3): test %rbx,%rbx
3e0c(5): mov $0x38,%esi
3e11(4): cmove %rax,%rbx
3e15(3): mov %rbx,%rdi
3e18(5): call 0xfb8(%rip)
3e1d(4): mov %r12d,0x0(%rbp)
3e21(1): pop %rbx
3e22(1): pop %rbp
3e23(2): pop %r12
3e25(1): ret near (%rsp)

"get_quoting_style" :
3e30(7): lea 0x2043e9(%rip),%rax
3e37(3): test %rdi,%rdi
3e3a(4): cmove %rax,%rdi
3e3e(2): mov (%rdi),%eax
3e40(1): ret near (%rsp)

"set_quoting_style" :
3e50(7): lea 0x2043c9(%rip),%rax
3e57(3): test %rdi,%rdi
3e5a(4): cmove %rax,%rdi
3e5e(2): mov %esi,(%rdi)
3e60(1): ret near (%rsp)

"set_char_quoting" :
3e70(7): lea 0x2043a9(%rip),%rax
3e77(3): test %rdi,%rdi
3e7a(2): mov %esi,%ecx
3e7c(4): cmove %rax,%rdi
3e80(2): mov %esi,%eax
3e82(3): and $0x1f,%ecx
3e85(3): shr $0x5,%al
3e88(3): movzx %al,%eax
3e8b(5): lea 0x8(%rdi,%rax,4),%rdi
3e90(2): mov (%rdi),%esi
3e92(2): mov %esi,%eax
3e94(2): shr %cl,%eax
3e96(2): xor %eax,%edx
3e98(3): and $0x1,%eax
3e9b(3): and $0x1,%edx
3e9e(2): shl/sal %cl,%edx
3ea0(2): xor %esi,%edx
3ea2(2): mov %edx,(%rdi)
3ea4(1): ret near (%rsp)

"set_quoting_flags" :
3eb0(7): lea 0x204369(%rip),%rax
3eb7(3): test %rdi,%rdi
3eba(4): cmove %rax,%rdi
3ebe(3): mov 0x4(%rdi),%eax
3ec1(3): mov %esi,0x4(%rdi)
3ec4(1): ret near (%rsp)

"set_custom_quoting" :
3ed0(7): lea 0x204349(%rip),%rax
3ed7(3): test %rdi,%rdi
3eda(4): cmove %rax,%rdi
3ede(3): test %rsi,%rsi
3ee1(6): mov $0xa,(%rdi)
3ee7(2): jz 0x10(%rip)
3ee9(3): test %rdx,%rdx
3eec(2): jz 0xb(%rip)
3eee(4): mov %rsi,0x28(%rdi)
3ef2(4): mov %rdx,0x30(%rdi)
3ef6(1): ret near (%rsp)
3ef7(4): sub $0x8,%rsp
3efb(5): call 0xffffd645(%rip)

"quotearg_buffer" :
3f00(2): push %r15
3f02(2): push %r14
3f04(7): lea 0x204315(%rip),%rax
3f0b(2): push %r13
3f0d(2): push %r12
3f0f(3): mov %rdi,%r13
3f12(1): push %rbp
3f13(1): push %rbx
3f14(3): mov %r8,%rbx
3f17(3): mov %rsi,%r14
3f1a(3): mov %rdx,%r15
3f1d(4): sub $0x18,%rsp
3f21(3): test %r8,%r8
3f24(4): cmove %rax,%rbx
3f28(5): mov %rcx,0x8(%rsp)
3f2d(5): call 0xffffd623(%rip)
3f32(3): mov (%rax),%r12d
3f35(3): mov %rax,%rbp
3f38(4): lea 0x8(%rbx),%rax
3f3c(4): sub $0x8,%rsp
3f40(4): mov 0x4(%rbx),%r9d
3f44(3): push 0x30(%rbx)
3f47(3): mov (%rbx),%r8d
3f4a(3): push 0x28(%rbx)
3f4d(3): mov %r15,%rdx
3f50(1): push %rax
3f51(5): mov 0x28(%rsp),%rcx
3f56(3): mov %r14,%rsi
3f59(3): mov %r13,%rdi
3f5c(5): call 0xffffeaa4(%rip)
3f61(4): mov %r12d,0x0(%rbp)
3f65(4): add $0x38,%rsp
3f69(1): pop %rbx
3f6a(1): pop %rbp
3f6b(2): pop %r12
3f6d(2): pop %r13
3f6f(2): pop %r14
3f71(2): pop %r15
3f73(1): ret near (%rsp)

"quotearg_alloc_mem" :
3f80(2): push %r15
3f82(2): push %r14
3f84(7): lea 0x204295(%rip),%rax
3f8b(2): push %r13
3f8d(2): push %r12
3f8f(3): mov %rdx,%r12
3f92(1): push %rbp
3f93(1): push %rbx
3f94(3): mov %rcx,%rbx
3f97(3): mov %rdi,%r14
3f9a(3): mov %rsi,%r15
3f9d(4): sub $0x38,%rsp
3fa1(3): test %rcx,%rcx
3fa4(4): cmove %rax,%rbx
3fa8(2): xor %ebp,%ebp
3faa(5): call 0xffffd5a6(%rip)
3faf(3): test %r12,%r12
3fb2(3): mov %rax,%r13
3fb5(2): mov (%rax),%eax
3fb7(4): setz %bpl
3fbb(3): or 0x4(%rbx),%ebp
3fbe(4): lea 0x8(%rbx),%r10
3fc2(4): sub $0x8,%rsp
3fc6(3): mov (%rbx),%r8d
3fc9(3): mov %r15,%rcx
3fcc(4): mov %eax,0x14(%rsp)
3fd0(3): push 0x30(%rbx)
3fd3(3): mov %r14,%rdx
3fd6(3): push 0x28(%rbx)
3fd9(2): push %r10
3fdb(2): xor %esi,%esi
3fdd(3): mov %ebp,%r9d
3fe0(2): xor %edi,%edi
3fe2(5): mov %r10,0x40(%rsp)
3fe7(5): call 0xffffea19(%rip)
3fec(4): lea 0x1(%rax),%rsi
3ff0(5): mov %rax,0x48(%rsp)
3ff5(4): add $0x20,%rsp
3ff9(3): mov %rsi,%rdi
3ffc(5): mov %rsi,0x18(%rsp)
4001(5): call 0xbcf(%rip)
4006(5): mov %rax,0x10(%rsp)
400b(4): sub $0x8,%rsp
400f(3): push 0x30(%rbx)
4012(3): push 0x28(%rbx)
4015(5): mov 0x38(%rsp),%r10
401a(3): mov %ebp,%r9d
401d(3): mov (%rbx),%r8d
4020(3): mov %r15,%rcx
4023(3): mov %r14,%rdx
4026(3): mov %rax,%rdi
4029(2): push %r10
402b(5): mov 0x38(%rsp),%rsi
4030(5): call 0xffffe9d0(%rip)
4035(4): mov 0x2c(%rsp),%eax
4039(4): add $0x20,%rsp
403d(3): test %r12,%r12
4040(4): mov %eax,0x0(%r13)
4044(2): jz 0xb(%rip)
4046(5): mov 0x28(%rsp),%r11
404b(4): mov %r11,(%r12)
404f(5): mov 0x10(%rsp),%rax
4054(4): add $0x38,%rsp
4058(1): pop %rbx
4059(1): pop %rbp
405a(2): pop %r12
405c(2): pop %r13
405e(2): pop %r14
4060(2): pop %r15
4062(1): ret near (%rsp)

"quotearg_alloc" :
4070(3): mov %rdx,%rcx
4073(2): xor %edx,%edx
4075(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4080(6): mov 0x203ff2(%rip),%eax
4086(2): push %r12
4088(7): mov 0x203ff1(%rip),%r12
408f(1): push %rbp
4090(1): push %rbx
4091(3): cmp $0x1,%eax
4094(2): jle 0x2d(%rip)
4096(3): sub $0x2,%eax
4099(5): lea 0x18(%r12),%rbx
409e(4): shl/sal $0x4,%rax
40a2(5): lea 0x28(%r12,%rax,1),%rbp
40a7(9): nop 0x0(%rax,%rax,1)
40b0(3): mov (%rbx),%rdi
40b3(4): add $0x10,%rbx
40b7(5): call 0xffffd479(%rip)
40bc(3): cmp %rbp,%rbx
40bf(2): jnz 0xfffffff1(%rip)
40c1(5): mov 0x8(%r12),%rdi
40c6(7): lea 0x204053(%rip),%rbx
40cd(3): cmp %rbx,%rdi
40d0(2): jz 0x19(%rip)
40d2(5): call 0xffffd45e(%rip)
40d7(b): mov $0x100,0x203fae(%rip)
40e2(7): mov %rbx,0x203faf(%rip)
40e9(7): lea 0x203fa0(%rip),%rbx
40f0(3): cmp %rbx,%r12
40f3(2): jz 0x11(%rip)
40f5(3): mov %r12,%rdi
40f8(5): call 0xffffd438(%rip)
40fd(7): mov %rbx,0x203f7c(%rip)
4104(1): pop %rbx
4105(a): mov $0x1,0x203f69(%rip)
410f(1): pop %rbp
4110(2): pop %r12
4112(1): ret near (%rsp)

"quotearg_n" :
4120(7): lea 0x2040f9(%rip),%rcx
4127(7): mov $0xffffffff,%rdx
412e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4140(7): lea 0x2040d9(%rip),%rcx
4147(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4150(7): lea 0x2040c9(%rip),%rcx
4157(3): mov %rdi,%rsi
415a(7): mov $0xffffffff,%rdx
4161(2): xor %edi,%edi
4163(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4170(7): lea 0x2040a9(%rip),%rcx
4177(3): mov %rsi,%rdx
417a(3): mov %rdi,%rsi
417d(2): xor %edi,%edi
417f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4190(4): sub $0x48,%rsp
4194(3): mov %rdx,%rax
4197(9): mov $0x28,%rdx
41a0(5): mov %rdx,0x38(%rsp)
41a5(2): xor %edx,%edx
41a7(3): cmp $0xa,%esi
41aa(2): jz 0x6a(%rip)
41ac(3): mov %esi,(%rsp)
41af(3): mov %rsp,%rcx
41b2(7): mov $0xffffffff,%rdx
41b9(3): mov %rax,%rsi
41bc(9): mov $0x0,0x4(%rsp)
41c5(9): mov $0x0,0xc(%rsp)
41ce(9): mov $0x0,0x14(%rsp)
41d7(9): mov $0x0,0x1c(%rsp)
41e0(9): mov $0x0,0x24(%rsp)
41e9(9): mov $0x0,0x2c(%rsp)
41f2(8): mov $0x0,0x34(%rsp)
41fa(5): call 0xfffffa46(%rip)
41ff(5): mov 0x38(%rsp),%rcx
4204(9): xor $0x28,%rcx
420d(2): jnz 0xc(%rip)
420f(4): add $0x48,%rsp
4213(1): ret near (%rsp)
4214(5): call 0xffffd32c(%rip)
4219(5): call 0xffffd3f7(%rip)

"quotearg_n_style_mem" :
4220(4): sub $0x48,%rsp
4224(3): mov %rdx,%rax
4227(3): mov %rcx,%rdx
422a(9): mov $0x28,%rcx
4233(5): mov %rcx,0x38(%rsp)
4238(2): xor %ecx,%ecx
423a(3): cmp $0xa,%esi
423d(2): jz 0x63(%rip)
423f(3): mov %esi,(%rsp)
4242(3): mov %rsp,%rcx
4245(3): mov %rax,%rsi
4248(9): mov $0x0,0x4(%rsp)
4251(9): mov $0x0,0xc(%rsp)
425a(9): mov $0x0,0x14(%rsp)
4263(9): mov $0x0,0x1c(%rsp)
426c(9): mov $0x0,0x24(%rsp)
4275(9): mov $0x0,0x2c(%rsp)
427e(8): mov $0x0,0x34(%rsp)
4286(5): call 0xfffff9ba(%rip)
428b(5): mov 0x38(%rsp),%rdx
4290(9): xor $0x28,%rdx
4299(2): jnz 0xc(%rip)
429b(4): add $0x48,%rsp
429f(1): ret near (%rsp)
42a0(5): call 0xffffd2a0(%rip)
42a5(5): call 0xffffd36b(%rip)

"quotearg_style" :
42b0(3): mov %rsi,%rdx
42b3(2): mov %edi,%esi
42b5(2): xor %edi,%edi
42b7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
42c0(3): mov %rdx,%rcx
42c3(3): mov %rsi,%rdx
42c6(2): mov %edi,%esi
42c8(2): xor %edi,%edi
42ca(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
42d0(4): sub $0x48,%rsp
42d4(2): mov %edx,%ecx
42d6(9): mov $0x28,%rax
42df(5): mov %rax,0x38(%rsp)
42e4(2): xor %eax,%eax
42e6(7): mov 0x203f63(%rip),%rax
42ed(3): mov %rsp,%r8
42f0(3): and $0x1f,%ecx
42f3(8): movdqa 0x203f25(%rip),%xmm0
42fb(5): mov %rax,0x30(%rsp)
4300(2): mov %edx,%eax
4302(4): movaps %xmm0,(%rsp)
4306(3): shr $0x5,%al
4309(3): movzx %al,%eax
430c(5): lea 0x8(%r8,%rax,4),%r9
4311(8): movdqa 0x203f17(%rip),%xmm0
4319(5): movaps %xmm0,0x10(%rsp)
431e(8): movdqa 0x203f1a(%rip),%xmm0
4326(5): movaps %xmm0,0x20(%rsp)
432b(3): mov (%r9),%edx
432e(2): mov %edx,%eax
4330(2): shr %cl,%eax
4332(2): not %eax
4334(3): and $0x1,%eax
4337(2): shl/sal %cl,%eax
4339(3): mov %r8,%rcx
433c(2): xor %edx,%eax
433e(3): mov %rsi,%rdx
4341(3): mov %rdi,%rsi
4344(3): mov %eax,(%r9)
4347(2): xor %edi,%edi
4349(5): call 0xfffff8f7(%rip)
434e(5): mov 0x38(%rsp),%rsi
4353(9): xor $0x28,%rsi
435c(2): jnz 0x7(%rip)
435e(4): add $0x48,%rsp
4362(1): ret near (%rsp)
4363(5): call 0xffffd2ad(%rip)

"quotearg_char" :
4370(4): movsx %sil,%edx
4374(7): mov $0xffffffff,%rsi
437b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4380(5): mov $0x3a,%edx
4385(7): mov $0xffffffff,%rsi
438c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
43a0(5): mov $0x3a,%edx
43a5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
43b0(4): sub $0x48,%rsp
43b4(3): mov %rdx,%rax
43b7(9): mov $0x28,%rdx
43c0(5): mov %rdx,0x38(%rsp)
43c5(2): xor %edx,%edx
43c7(3): cmp $0xa,%esi
43ca(2): jz 0x6a(%rip)
43cc(3): mov %esi,(%rsp)
43cf(3): mov %rsp,%rcx
43d2(7): mov $0xffffffff,%rdx
43d9(3): mov %rax,%rsi
43dc(9): mov $0x0,0x4(%rsp)
43e5(9): mov $0x4000000,0xc(%rsp)
43ee(9): mov $0x0,0x14(%rsp)
43f7(9): mov $0x0,0x1c(%rsp)
4400(9): mov $0x0,0x24(%rsp)
4409(9): mov $0x0,0x2c(%rsp)
4412(8): mov $0x0,0x34(%rsp)
441a(5): call 0xfffff826(%rip)
441f(5): mov 0x38(%rsp),%rcx
4424(9): xor $0x28,%rcx
442d(2): jnz 0xc(%rip)
442f(4): add $0x48,%rsp
4433(1): ret near (%rsp)
4434(5): call 0xffffd10c(%rip)
4439(5): call 0xffffd1d7(%rip)

"quotearg_n_custom_mem" :
4440(4): sub $0x48,%rsp
4444(3): mov %rcx,%r9
4447(7): mov 0x203e02(%rip),%rcx
444e(8): movdqa 0x203dca(%rip),%xmm0
4456(9): mov $0x28,%rax
445f(5): mov %rax,0x38(%rsp)
4464(2): xor %eax,%eax
4466(4): movaps %xmm0,(%rsp)
446a(3): test %rsi,%rsi
446d(5): mov %rcx,0x30(%rsp)
4472(7): mov $0xa,(%rsp)
4479(8): movdqa 0x203daf(%rip),%xmm0
4481(5): movaps %xmm0,0x10(%rsp)
4486(8): movdqa 0x203db2(%rip),%xmm0
448e(5): movaps %xmm0,0x20(%rsp)
4493(2): jz 0x34(%rip)
4495(3): test %rdx,%rdx
4498(2): jz 0x2f(%rip)
449a(5): mov %rsi,0x28(%rsp)
449f(5): mov %rdx,0x30(%rsp)
44a4(3): mov %rsp,%rcx
44a7(3): mov %r8,%rdx
44aa(3): mov %r9,%rsi
44ad(5): call 0xfffff793(%rip)
44b2(5): mov 0x38(%rsp),%rdi
44b7(9): xor $0x28,%rdi
44c0(2): jnz 0xc(%rip)
44c2(4): add $0x48,%rsp
44c6(1): ret near (%rsp)
44c7(5): call 0xffffd079(%rip)
44cc(5): call 0xffffd144(%rip)

"quotearg_n_custom" :
44e0(7): mov $0xffffffff,%r8
44e7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
44f0(3): mov %rdx,%rcx
44f3(7): mov $0xffffffff,%r8
44fa(3): mov %rsi,%rdx
44fd(3): mov %rdi,%rsi
4500(2): xor %edi,%edi
4502(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4510(3): mov %rcx,%r8
4513(3): mov %rdx,%rcx
4516(3): mov %rsi,%rdx
4519(3): mov %rdi,%rsi
451c(2): xor %edi,%edi
451e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4530(7): lea 0x203b09(%rip),%rcx
4537(5): jmp 0xfffff709(%rip)

"quote_mem" :
4540(7): lea 0x203af9(%rip),%rcx
4547(3): mov %rsi,%rdx
454a(3): mov %rdi,%rsi
454d(2): xor %edi,%edi
454f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4560(7): lea 0x203ad9(%rip),%rcx
4567(7): mov $0xffffffff,%rdx
456e(5): jmp 0xfffff6d2(%rip)

"quote" :
4580(7): lea 0x203ab9(%rip),%rcx
4587(3): mov %rdi,%rsi
458a(7): mov $0xffffffff,%rdx
4591(2): xor %edi,%edi
4593(5): jmp 0xfffff6ad(%rip)

"dup_safer" :
45a0(5): mov $0x3,%edx
45a5(2): xor %esi,%esi
45a7(2): xor %eax,%eax
45a9(5): jmp 0x937(%rip)

"version_etc_arn" :
45b0(2): push %r15
45b2(2): push %r14
45b4(2): push %r13
45b6(2): push %r12
45b8(3): mov %r9,%r12
45bb(1): push %rbp
45bc(1): push %rbx
45bd(3): mov %rdi,%rbp
45c0(3): mov %r8,%rbx
45c3(4): sub $0x28,%rsp
45c7(3): test %rsi,%rsi
45ca(6): jz 0x11e(%rip)
45d0(3): mov %rdx,%r8
45d3(7): lea 0x1a4e(%rip),%rdx
45da(3): mov %rcx,%r9
45dd(2): xor %eax,%eax
45df(3): mov %rsi,%rcx
45e2(5): mov $0x1,%esi
45e7(5): call 0xffffd229(%rip)
45ec(7): lea 0x1a48(%rip),%rsi
45f3(2): xor %edi,%edi
45f5(5): mov $0x5,%edx
45fa(5): call 0xffffcfe6(%rip)
45ff(7): lea 0x1d5a(%rip),%rdx
4606(3): mov %rax,%rcx
4609(6): mov $0x7e3,%r8d
460f(5): mov $0x1,%esi
4614(3): mov %rbp,%rdi
4617(2): xor %eax,%eax
4619(5): call 0xffffd1f7(%rip)
461e(7): lea 0x1aa3(%rip),%rsi
4625(2): xor %edi,%edi
4627(5): mov $0x5,%edx
462c(5): call 0xffffcfb4(%rip)
4631(3): mov %rbp,%rsi
4634(3): mov %rax,%rdi
4637(5): call 0xffffd089(%rip)
463c(4): cmp $0x9,%r12
4640(6): jnbe 0x340(%rip)
4646(7): lea 0x1cdb(%rip),%rdx
464d(4): movsxd 0x0(%rdx,%r12,4),%rax
4651(3): add %rdx,%rax
4654(2): jmp %rax
4656(a): nop 0x0(%rax,%rax,1)
4660(4): mov 0x38(%rbx),%r9
4664(4): mov 0x10(%rbx),%rax
4668(7): lea 0x1bc9(%rip),%rsi
466f(4): mov 0x8(%rbx),%r8
4673(5): mov $0x5,%edx
4678(2): xor %edi,%edi
467a(4): mov 0x30(%rbx),%r13
467e(4): mov 0x28(%rbx),%r12
4682(5): mov %r9,0x10(%rsp)
4687(4): mov 0x20(%rbx),%r15
468b(4): mov 0x18(%rbx),%r14
468f(4): mov %rax,(%rsp)
4693(5): mov %r8,0x8(%rsp)
4698(3): mov (%rbx),%rbx
469b(5): call 0xffffcf45(%rip)
46a0(4): sub $0x8,%rsp
46a4(5): mov 0x18(%rsp),%r9
46a9(3): mov %rax,%rdx
46ac(3): mov %rbx,%rcx
46af(5): mov $0x1,%esi
46b4(3): mov %rbp,%rdi
46b7(2): xor %eax,%eax
46b9(2): push %r9
46bb(2): push %r13
46bd(2): push %r12
46bf(2): push %r15
46c1(2): push %r14
46c3(5): mov 0x30(%rsp),%r9
46c8(5): mov 0x38(%rsp),%r8
46cd(5): call 0xffffd143(%rip)
46d2(4): add $0x30,%rsp
46d6(4): add $0x28,%rsp
46da(1): pop %rbx
46db(1): pop %rbp
46dc(2): pop %r12
46de(2): pop %r13
46e0(2): pop %r14
46e2(2): pop %r15
46e4(1): ret near (%rsp)
46e5(3): nop (%rax)
46e8(3): mov %rcx,%r8
46eb(3): mov %rdx,%rcx
46ee(7): lea 0x193f(%rip),%rdx
46f5(5): mov $0x1,%esi
46fa(2): xor %eax,%eax
46fc(5): call 0xffffd114(%rip)
4701(5): jmp 0xfffffeeb(%rip)
4706(a): nop 0x0(%rax,%rax,1)
4710(4): mov 0x40(%rbx),%r10
4714(4): mov 0x38(%rbx),%r9
4718(7): lea 0x1b49(%rip),%rsi
471f(4): mov 0x10(%rbx),%rax
4723(4): mov 0x8(%rbx),%r8
4727(5): mov $0x5,%edx
472c(4): mov 0x30(%rbx),%r13
4730(4): mov 0x28(%rbx),%r12
4734(4): mov 0x20(%rbx),%r15
4738(4): mov 0x18(%rbx),%r14
473c(3): mov (%rbx),%rbx
473f(5): mov %r10,0x18(%rsp)
4744(5): mov %r9,0x10(%rsp)
4749(4): mov %rax,(%rsp)
474d(5): mov %r8,0x8(%rsp)
4752(2): xor %edi,%edi
4754(5): call 0xffffce8c(%rip)
4759(5): mov 0x18(%rsp),%r10
475e(2): push %r10
4760(5): jmp 0xffffff44(%rip)
4765(3): nop (%rax)
4768(3): mov (%rbx),%rbx
476b(7): lea 0x18cd(%rip),%rsi
4772(5): mov $0x5,%edx
4777(2): xor %edi,%edi
4779(5): call 0xffffce67(%rip)
477e(4): add $0x28,%rsp
4782(3): mov %rbx,%rcx
4785(3): mov %rbp,%rdi
4788(1): pop %rbx
4789(1): pop %rbp
478a(2): pop %r12
478c(2): pop %r13
478e(2): pop %r14
4790(2): pop %r15
4792(3): mov %rax,%rdx
4795(5): mov $0x1,%esi
479a(2): xor %eax,%eax
479c(5): jmp 0xffffd074(%rip)
47a1(7): nop 0x0(%rax)
47a8(4): mov 0x8(%rbx),%r12
47ac(7): lea 0x189c(%rip),%rsi
47b3(3): mov (%rbx),%rbx
47b6(5): mov $0x5,%edx
47bb(2): xor %edi,%edi
47bd(5): call 0xffffce23(%rip)
47c2(4): add $0x28,%rsp
47c6(3): mov %r12,%r8
47c9(3): mov %rbx,%rcx
47cc(3): mov %rbp,%rdi
47cf(3): mov %rax,%rdx
47d2(5): mov $0x1,%esi
47d7(1): pop %rbx
47d8(1): pop %rbp
47d9(2): pop %r12
47db(2): pop %r13
47dd(2): pop %r14
47df(2): pop %r15
47e1(2): xor %eax,%eax
47e3(5): jmp 0xffffd02d(%rip)
47e8(8): nop 0x0(%rax,%rax,1)
47f0(4): mov 0x10(%rbx),%r13
47f4(4): mov 0x8(%rbx),%r12
47f8(7): lea 0x1867(%rip),%rsi
47ff(3): mov (%rbx),%rbx
4802(5): mov $0x5,%edx
4807(2): xor %edi,%edi
4809(5): call 0xffffcdd7(%rip)
480e(4): add $0x28,%rsp
4812(3): mov %r13,%r9
4815(3): mov %r12,%r8
4818(3): mov %rbx,%rcx
481b(3): mov %rbp,%rdi
481e(3): mov %rax,%rdx
4821(1): pop %rbx
4822(1): pop %rbp
4823(2): pop %r12
4825(2): pop %r13
4827(2): pop %r14
4829(2): pop %r15
482b(5): mov $0x1,%esi
4830(2): xor %eax,%eax
4832(5): jmp 0xffffcfde(%rip)
4837(9): nop 0x0(%rax,%rax,1)
4840(7): lea 0x1951(%rip),%rsi
4847(5): mov $0x5,%edx
484c(2): xor %edi,%edi
484e(4): mov 0x18(%rbx),%r14
4852(4): mov 0x10(%rbx),%r13
4856(4): mov 0x8(%rbx),%r12
485a(3): mov (%rbx),%rbx
485d(5): call 0xffffcd83(%rip)
4862(4): sub $0x8,%rsp
4866(2): push %r14
4868(3): mov %rax,%rdx
486b(3): mov %r13,%r9
486e(3): mov %r12,%r8
4871(3): mov %rbx,%rcx
4874(3): mov %rbp,%rdi
4877(5): mov $0x1,%esi
487c(2): xor %eax,%eax
487e(5): call 0xffffcf92(%rip)
4883(1): pop %rax
4884(1): pop %rdx
4885(4): add $0x28,%rsp
4889(1): pop %rbx
488a(1): pop %rbp
488b(2): pop %r12
488d(2): pop %r13
488f(2): pop %r14
4891(2): pop %r15
4893(1): ret near (%rsp)
4894(4): nop 0x0(%rax)
4898(4): mov 0x20(%rbx),%r15
489c(7): lea 0x1915(%rip),%rsi
48a3(5): mov $0x5,%edx
48a8(2): xor %edi,%edi
48aa(4): mov 0x18(%rbx),%r14
48ae(4): mov 0x10(%rbx),%r13
48b2(4): mov 0x8(%rbx),%r12
48b6(3): mov (%rbx),%rbx
48b9(5): call 0xffffcd27(%rip)
48be(2): push %r15
48c0(2): jmp 0xffffffa6(%rip)
48c2(6): nop 0x0(%rax,%rax,1)
48c8(4): mov 0x8(%rbx),%r8
48cc(4): mov 0x28(%rbx),%r12
48d0(7): lea 0x1909(%rip),%rsi
48d7(4): mov 0x20(%rbx),%r15
48db(4): mov 0x18(%rbx),%r14
48df(5): mov $0x5,%edx
48e4(4): mov 0x10(%rbx),%r13
48e8(2): xor %edi,%edi
48ea(3): mov (%rbx),%rbx
48ed(4): mov %r8,(%rsp)
48f1(5): call 0xffffccef(%rip)
48f6(4): sub $0x8,%rsp
48fa(3): mov %r13,%r9
48fd(2): push %r12
48ff(2): push %r15
4901(2): push %r14
4903(5): mov 0x20(%rsp),%r8
4908(3): mov %rbx,%rcx
490b(3): mov %rax,%rdx
490e(3): mov %rbp,%rdi
4911(5): mov $0x1,%esi
4916(2): xor %eax,%eax
4918(5): call 0xffffcef8(%rip)
491d(4): add $0x20,%rsp
4921(4): add $0x28,%rsp
4925(1): pop %rbx
4926(1): pop %rbp
4927(2): pop %r12
4929(2): pop %r13
492b(2): pop %r14
492d(2): pop %r15
492f(1): ret near (%rsp)
4930(4): mov 0x10(%rbx),%r9
4934(4): mov 0x30(%rbx),%r13
4938(7): lea 0x18c9(%rip),%rsi
493f(4): mov 0x28(%rbx),%r12
4943(4): mov 0x20(%rbx),%r15
4947(5): mov $0x5,%edx
494c(4): mov 0x18(%rbx),%r14
4950(4): mov 0x8(%rbx),%r8
4954(2): xor %edi,%edi
4956(5): mov %r9,0x8(%rsp)
495b(3): mov (%rbx),%rbx
495e(4): mov %r8,(%rsp)
4962(5): call 0xffffcc7e(%rip)
4967(2): push %r13
4969(2): push %r12
496b(2): push %r15
496d(2): push %r14
496f(5): mov 0x28(%rsp),%r9
4974(2): jmp 0xffffff8f(%rip)
4976(a): nop 0x0(%rax,%rax,1)
4980(4): mov 0x40(%rbx),%r10
4984(4): mov 0x38(%rbx),%r9
4988(5): mov $0x5,%edx
498d(4): mov 0x10(%rbx),%rax
4991(4): mov 0x8(%rbx),%r8
4995(7): lea 0x1904(%rip),%rsi
499c(4): mov 0x30(%rbx),%r13
49a0(4): mov 0x28(%rbx),%r12
49a4(4): mov 0x20(%rbx),%r15
49a8(4): mov 0x18(%rbx),%r14
49ac(5): mov %r10,0x18(%rsp)
49b1(5): mov %r9,0x10(%rsp)
49b6(4): mov %rax,(%rsp)
49ba(5): mov %r8,0x8(%rsp)
49bf(3): mov (%rbx),%rbx
49c2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
49d0(3): xor %r9d,%r9d
49d3(4): cmp $0x0,(%r8)
49d7(2): jz 0x14(%rip)
49d9(7): nop 0x0(%rax)
49e0(4): add $0x1,%r9
49e4(5): cmp $0x0,0x0(%r8,%r9,8)
49e9(2): jnz 0xfffffff7(%rip)
49eb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
49f0(4): sub $0x68,%rsp
49f4(3): mov %r8,%r10
49f7(3): xor %r9d,%r9d
49fa(9): mov $0x28,%rax
4a03(5): mov %rax,0x58(%rsp)
4a08(2): xor %eax,%eax
4a0a(3): mov %rsp,%r8
4a0d(3): nop (%rax)
4a10(3): mov (%r10),%eax
4a13(3): cmp $0x2f,%eax
4a16(2): jnbe 0x44(%rip)
4a18(3): mov %eax,%r11d
4a1b(4): add 0x10(%r10),%r11
4a1f(3): add $0x8,%eax
4a22(3): mov %eax,(%r10)
4a25(3): mov (%r11),%rax
4a28(3): test %rax,%rax
4a2b(4): mov %rax,0x0(%r8,%r9,8)
4a2f(2): jz 0xc(%rip)
4a31(4): add $0x1,%r9
4a35(4): cmp $0xa,%r9
4a39(2): jnz 0xffffffd7(%rip)
4a3b(5): call 0xfffffb75(%rip)
4a40(5): mov 0x58(%rsp),%rax
4a45(9): xor $0x28,%rax
4a4e(2): jnz 0x7(%rip)
4a50(4): add $0x68,%rsp
4a54(1): ret near (%rsp)
4a55(5): call 0xffffcbbb(%rip)
4a5a(4): mov 0x8(%r10),%r11
4a5e(4): lea 0x8(%r11),%rax
4a62(4): mov %rax,0x8(%r10)
4a66(2): jmp 0xffffffbf(%rip)

"version_etc" :
4a70(1): push %rbp
4a71(1): push %rbx
4a72(6): mov $0x20,%r10d
4a78(3): xor %r11d,%r11d
4a7b(7): sub $0xb8,%rsp
4a82(9): mov $0x28,%rax
4a8b(5): mov %rax,0x78(%rsp)
4a90(2): xor %eax,%eax
4a92(8): lea 0xd0(%rsp),%rax
4a9a(8): mov %r8,0xa0(%rsp)
4aa2(8): lea 0xd0(%rsp),%rbx
4aaa(5): lea 0x20(%rsp),%r8
4aaf(8): mov %r9,0xa8(%rsp)
4ab7(8): mov $0x20,0x8(%rsp)
4abf(5): mov %rax,0x10(%rsp)
4ac4(8): lea 0x80(%rsp),%rax
4acc(3): xor %r9d,%r9d
4acf(5): mov %rax,0x18(%rsp)
4ad4(3): mov %rax,%rbp
4ad7(9): nop 0x0(%rax,%rax,1)
4ae0(4): cmp $0x2f,%r10d
4ae4(2): jnbe 0x58(%rip)
4ae6(3): mov %r10d,%eax
4ae9(6): mov $0x1,%r11d
4aef(4): add $0x8,%r10d
4af3(3): add %rbp,%rax
4af6(3): mov (%rax),%rax
4af9(3): test %rax,%rax
4afc(4): mov %rax,0x0(%r8,%r9,8)
4b00(2): jz 0xc(%rip)
4b02(4): add $0x1,%r9
4b06(4): cmp $0xa,%r9
4b0a(2): jnz 0xffffffd6(%rip)
4b0c(3): test %r11b,%r11b
4b0f(2): jnz 0x26(%rip)
4b11(5): call 0xfffffa9f(%rip)
4b16(5): mov 0x78(%rsp),%rax
4b1b(9): xor $0x28,%rax
4b24(2): jnz 0xc(%rip)
4b26(7): add $0xb8,%rsp
4b2d(1): pop %rbx
4b2e(1): pop %rbp
4b2f(1): ret near (%rsp)
4b30(5): call 0xffffcae0(%rip)
4b35(5): mov %r10d,0x8(%rsp)
4b3a(2): jmp 0xffffffd7(%rip)
4b3c(3): mov %rbx,%rax
4b3f(4): add $0x8,%rbx
4b43(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4b50(1): push %rbx
4b51(7): lea 0x152a(%rip),%rsi
4b58(5): mov $0x5,%edx
4b5d(2): xor %edi,%edi
4b5f(5): call 0xffffca81(%rip)
4b64(7): lea 0x152c(%rip),%rdx
4b6b(3): mov %rax,%rsi
4b6e(5): mov $0x1,%edi
4b73(2): xor %eax,%eax
4b75(5): call 0xffffcc1b(%rip)
4b7a(7): lea 0x152c(%rip),%rsi
4b81(5): mov $0x5,%edx
4b86(2): xor %edi,%edi
4b88(5): call 0xffffca58(%rip)
4b8d(7): lea 0xe54(%rip),%rcx
4b94(7): lea 0x962(%rip),%rdx
4b9b(3): mov %rax,%rsi
4b9e(5): mov $0x1,%edi
4ba3(2): xor %eax,%eax
4ba5(5): call 0xffffcbeb(%rip)
4baa(7): mov 0x2034f7(%rip),%rbx
4bb1(7): lea 0x1728(%rip),%rsi
4bb8(2): xor %edi,%edi
4bba(5): mov $0x5,%edx
4bbf(5): call 0xffffca21(%rip)
4bc4(3): mov %rbx,%rsi
4bc7(3): mov %rax,%rdi
4bca(1): pop %rbx
4bcb(5): jmp 0xffffcaf5(%rip)

"xmalloc" :
4bd0(1): push %rbx
4bd1(3): mov %rdi,%rbx
4bd4(5): call 0xffffcb3c(%rip)
4bd9(3): test %rax,%rax
4bdc(2): jnz 0x7(%rip)
4bde(3): test %rbx,%rbx
4be1(2): jnz 0x4(%rip)
4be3(1): pop %rbx
4be4(1): ret near (%rsp)
4be5(5): call 0x23b(%rip)

"xnmalloc" :
4bf0(3): mov %rdi,%rax
4bf3(3): mul %rax,%rsi,%rdx
4bf6(3): mov %rax,%rdi
4bf9(3): seto %al
4bfc(3): test %rdi,%rdi
4bff(2): js 0xc(%rip)
4c01(3): movzx %al,%eax
4c04(3): test %rax,%rax
4c07(2): jnz 0x4(%rip)
4c09(2): jmp 0xffffffc7(%rip)
4c0b(4): sub $0x8,%rsp
4c0f(5): call 0x211(%rip)

"xrealloc" :
4c30(3): test %rsi,%rsi
4c33(1): push %rbx
4c34(3): mov %rsi,%rbx
4c37(2): jnz 0x7(%rip)
4c39(3): test %rdi,%rdi
4c3c(2): jnz 0x1c(%rip)
4c3e(3): mov %rbx,%rsi
4c41(5): call 0xffffcb1f(%rip)
4c46(3): test %rax,%rax
4c49(2): jnz 0x7(%rip)
4c4b(3): test %rbx,%rbx
4c4e(2): jnz 0x13(%rip)
4c50(1): pop %rbx
4c51(1): ret near (%rsp)
4c52(6): nop 0x0(%rax,%rax,1)
4c58(5): call 0xffffc8d8(%rip)
4c5d(2): xor %eax,%eax
4c5f(1): pop %rbx
4c60(1): ret near (%rsp)
4c61(5): call 0x1bf(%rip)

"xnrealloc" :
4c70(3): mov %rsi,%rax
4c73(3): mul %rax,%rdx,%rdx
4c76(3): mov %rax,%rsi
4c79(3): seto %al
4c7c(3): test %rsi,%rsi
4c7f(2): js 0xc(%rip)
4c81(3): movzx %al,%eax
4c84(3): test %rax,%rax
4c87(2): jnz 0x4(%rip)
4c89(2): jmp 0xffffffa7(%rip)
4c8b(4): sub $0x8,%rsp
4c8f(5): call 0x191(%rip)

"x2nrealloc" :
4ca0(3): test %rdi,%rdi
4ca3(3): mov %rdx,%r9
4ca6(3): mov (%rsi),%rcx
4ca9(2): jz 0x37(%rip)
4cab(2): xor %edx,%edx
4cad(a): mov $0x6148914691236517204,%rax
4cb7(3): div %r9,%rax
4cba(3): cmp %rcx,%rax
4cbd(2): jbe 0x3e(%rip)
4cbf(3): mov %rcx,%rax
4cc2(3): shr $0x1,%rax
4cc5(5): lea 0x1(%rax,%rcx,1),%rcx
4cca(3): mov %rcx,(%rsi)
4ccd(4): imul %r9,%rcx
4cd1(3): mov %rcx,%rsi
4cd4(5): jmp 0xffffff5c(%rip)
4cd9(7): nop 0x0(%rax)
4ce0(3): test %rcx,%rcx
4ce3(2): jz 0x25(%rip)
4ce5(3): mov %rcx,%rax
4ce8(3): mul %rax,%r9,%rdx
4ceb(3): seto %dl
4cee(3): test %rax,%rax
4cf1(3): movzx %dl,%edx
4cf4(2): js 0x7(%rip)
4cf6(3): test %rdx,%rdx
4cf9(2): jz 0xffffffd1(%rip)
4cfb(4): sub $0x8,%rsp
4cff(5): call 0x121(%rip)
4d04(4): nop 0x0(%rax)
4d08(2): xor %edx,%edx
4d0a(5): mov $0x80,%eax
4d0f(3): xor %r8d,%r8d
4d12(3): div %r9,%rax
4d15(3): test %rax,%rax
4d18(4): setz %r8b
4d1c(4): lea 0x0(%r8,%rax,1),%rcx
4d20(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4d30(3): test %rdi,%rdi
4d33(3): mov (%rsi),%rax
4d36(2): jz 0x2a(%rip)
4d38(a): mov $0x6148914691236517203,%rdx
4d42(3): cmp %rdx,%rax
4d45(2): jnbe 0x2c(%rip)
4d47(3): mov %rax,%rdx
4d4a(3): shr $0x1,%rdx
4d4d(5): lea 0x1(%rdx,%rax,1),%rax
4d52(3): mov %rax,(%rsi)
4d55(3): mov %rax,%rsi
4d58(5): jmp 0xfffffed8(%rip)
4d5d(3): nop (%rax)
4d60(3): test %rax,%rax
4d63(5): mov $0x80,%edx
4d68(4): cmove %rdx,%rax
4d6c(3): test %rax,%rax
4d6f(2): jns 0xffffffe3(%rip)
4d71(4): sub $0x8,%rsp
4d75(5): call 0xab(%rip)

"xzalloc" :
4d80(1): push %rbx
4d81(3): mov %rdi,%rbx
4d84(5): call 0xfffffe4c(%rip)
4d89(3): mov %rbx,%rdx
4d8c(2): xor %esi,%esi
4d8e(3): mov %rax,%rdi
4d91(1): pop %rbx
4d92(5): jmp 0xffffc8de(%rip)

"xcalloc" :
4da0(3): mov %rdi,%rax
4da3(4): sub $0x8,%rsp
4da7(3): mul %rax,%rsi,%rdx
4daa(3): seto %dl
4dad(3): test %rax,%rax
4db0(2): js 0x19(%rip)
4db2(3): movzx %dl,%edx
4db5(3): test %rdx,%rdx
4db8(2): jnz 0x11(%rip)
4dba(5): call 0xffffc916(%rip)
4dbf(3): test %rax,%rax
4dc2(2): jz 0x7(%rip)
4dc4(4): add $0x8,%rsp
4dc8(1): ret near (%rsp)
4dc9(5): call 0x57(%rip)

"xmemdup" :
4dd0(1): push %rbp
4dd1(1): push %rbx
4dd2(3): mov %rdi,%rbp
4dd5(3): mov %rsi,%rdi
4dd8(3): mov %rsi,%rbx
4ddb(4): sub $0x8,%rsp
4ddf(5): call 0xfffffdf1(%rip)
4de4(4): add $0x8,%rsp
4de8(3): mov %rbx,%rdx
4deb(3): mov %rbp,%rsi
4dee(1): pop %rbx
4def(1): pop %rbp
4df0(3): mov %rax,%rdi
4df3(5): jmp 0xffffc8fd(%rip)

"xstrdup" :
4e00(1): push %rbx
4e01(3): mov %rdi,%rbx
4e04(5): call 0xffffc7fc(%rip)
4e09(3): mov %rbx,%rdi
4e0c(4): lea 0x1(%rax),%rsi
4e10(1): pop %rbx
4e11(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4e20(7): lea 0x1568(%rip),%rsi
4e27(4): sub $0x8,%rsp
4e2b(5): mov $0x5,%edx
4e30(2): xor %edi,%edi
4e32(5): call 0xffffc7ae(%rip)
4e37(6): mov 0x2031e3(%rip),%edi
4e3d(7): lea 0xcb8(%rip),%rdx
4e44(3): mov %rax,%rcx
4e47(2): xor %esi,%esi
4e49(2): xor %eax,%eax
4e4b(5): call 0xffffc965(%rip)
4e50(5): call 0xffffc6f0(%rip)

"rpl_fclose" :
4e60(2): push %r12
4e62(1): push %rbp
4e63(1): push %rbx
4e64(3): mov %rdi,%rbx
4e67(5): call 0xffffc899(%rip)
4e6c(2): test %eax,%eax
4e6e(3): mov %rbx,%rdi
4e71(2): js 0x56(%rip)
4e73(5): call 0xffffc8cd(%rip)
4e78(2): test %eax,%eax
4e7a(2): jnz 0x2e(%rip)
4e7c(3): mov %rbx,%rdi
4e7f(5): call 0x2e1(%rip)
4e84(2): test %eax,%eax
4e86(2): jz 0x3e(%rip)
4e88(5): call 0xffffc6c8(%rip)
4e8d(3): mov (%rax),%r12d
4e90(3): mov %rbx,%rdi
4e93(3): mov %rax,%rbp
4e96(5): call 0xffffc72a(%rip)
4e9b(3): test %r12d,%r12d
4e9e(2): jnz 0x32(%rip)
4ea0(1): pop %rbx
4ea1(1): pop %rbp
4ea2(2): pop %r12
4ea4(1): ret near (%rsp)
4ea5(3): nop (%rax)
4ea8(3): mov %rbx,%rdi
4eab(5): call 0xffffc855(%rip)
4eb0(2): xor %esi,%esi
4eb2(5): mov $0x1,%edx
4eb7(2): mov %eax,%edi
4eb9(5): call 0xffffc7a7(%rip)
4ebe(4): cmp $0xffffffff,%rax
4ec2(2): jnz 0xffffffba(%rip)
4ec4(3): mov %rbx,%rdi
4ec7(1): pop %rbx
4ec8(1): pop %rbp
4ec9(2): pop %r12
4ecb(5): jmp 0xffffc6f5(%rip)
4ed0(4): mov %r12d,0x0(%rbp)
4ed4(5): mov $0xffffffff,%eax
4ed9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
4ee0(2): push %r12
4ee2(1): push %rbp
4ee3(2): mov %edi,%ebp
4ee5(1): push %rbx
4ee6(4): sub $0x50,%rsp
4eea(9): mov $0x28,%rax
4ef3(5): mov %rax,0x18(%rsp)
4ef8(2): xor %eax,%eax
4efa(5): lea 0x70(%rsp),%rax
4eff(2): test %esi,%esi
4f01(5): mov %rdx,0x30(%rsp)
4f06(5): mov %rcx,0x38(%rsp)
4f0b(5): mov %r8,0x40(%rsp)
4f10(5): mov %rax,0x8(%rsp)
4f15(5): lea 0x20(%rsp),%rax
4f1a(5): mov %r9,0x48(%rsp)
4f1f(7): mov $0x10,(%rsp)
4f26(5): mov %rax,0x10(%rsp)
4f2b(6): jz 0x207(%rip)
4f31(6): cmp $0x406,%esi
4f37(2): jnz 0x49(%rip)
4f39(5): mov 0x10(%rsp),%rax
4f3e(7): cmp $0x0,0x203313(%rip)
4f45(7): mov $0x18,(%rsp)
4f4c(4): mov 0x10(%rax),%r12d
4f50(3): mov %r12d,%edx
4f53(6): js 0x130(%rip)
4f59(2): xor %eax,%eax
4f5b(5): mov $0x406,%esi
4f60(5): call 0xffffc630(%rip)
4f65(2): test %eax,%eax
4f67(2): mov %eax,%ebx
4f69(6): js 0x18f(%rip)
4f6f(a): mov $0x1,0x2032df(%rip)
4f79(2): jmp 0x47(%rip)
4f7b(5): nop 0x0(%rax,%rax,1)
4f80(3): cmp $0xb,%esi
4f83(2): jz 0x2d(%rip)
4f85(2): jnle 0x5b(%rip)
4f87(3): cmp $0x4,%esi
4f8a(6): jz 0xd6(%rip)
4f90(6): jnle 0xc0(%rip)
4f96(3): cmp $0x2,%esi
4f99(6): jz 0xc7(%rip)
4f9f(2): jnle 0x11(%rip)
4fa1(3): cmp $0x1,%esi
4fa4(2): jnz 0x64(%rip)
4fa6(a): nop 0x0(%rax,%rax,1)
4fb0(2): mov %ebp,%edi
4fb2(2): xor %eax,%eax
4fb4(5): call 0xffffc5dc(%rip)
4fb9(2): mov %eax,%ebx
4fbb(5): nop 0x0(%rax,%rax,1)
4fc0(5): mov 0x18(%rsp),%rcx
4fc5(9): xor $0x28,%rcx
4fce(2): mov %ebx,%eax
4fd0(6): jnz 0x15d(%rip)
4fd6(4): add $0x50,%rsp
4fda(1): pop %rbx
4fdb(1): pop %rbp
4fdc(2): pop %r12
4fde(1): ret near (%rsp)
4fdf(1): nop 
4fe0(6): cmp $0x407,%esi
4fe6(2): jnle 0x4a(%rip)
4fe8(6): cmp $0x406,%esi
4fee(2): jnl 0x72(%rip)
4ff0(6): cmp $0x401,%esi
4ff6(2): jz 0xffffffba(%rip)
4ff8(6): cmp $0x402,%esi
4ffe(2): jz 0x62(%rip)
5000(6): cmp $0x400,%esi
5006(2): jz 0x5a(%rip)
5008(3): mov (%rsp),%eax
500b(3): cmp $0x2f,%eax
500e(6): jnbe 0x13c(%rip)
5014(5): add 0x10(%rsp),%rax
5019(3): mov (%rax),%rdx
501c(2): mov %ebp,%edi
501e(2): xor %eax,%eax
5020(5): call 0xffffc570(%rip)
5025(2): mov %eax,%ebx
5027(2): jmp 0xffffff99(%rip)
5029(7): nop 0x0(%rax)
5030(6): cmp $0x409,%esi
5036(2): jz 0x2a(%rip)
5038(6): jl 0xffffff78(%rip)
503e(6): cmp $0x40a,%esi
5044(2): jnz 0xffffffc4(%rip)
5046(5): jmp 0xffffff6a(%rip)
504b(5): nop 0x0(%rax,%rax,1)
5050(3): cmp $0x9,%esi
5053(6): jz 0xffffff5d(%rip)
5059(2): jnle 0x7(%rip)
505b(3): cmp $0x8,%esi
505e(2): jnz 0xffffffaa(%rip)
5060(3): mov (%rsp),%eax
5063(3): cmp $0x2f,%eax
5066(6): jnbe 0xee(%rip)
506c(5): add 0x10(%rsp),%rax
5071(2): mov (%rax),%edx
5073(2): mov %ebp,%edi
5075(2): xor %eax,%eax
5077(5): call 0xffffc519(%rip)
507c(2): mov %eax,%ebx
507e(5): jmp 0xffffff42(%rip)
5083(2): xor %esi,%esi
5085(2): xor %eax,%eax
5087(5): call 0xffffc509(%rip)
508c(2): test %eax,%eax
508e(2): mov %eax,%ebx
5090(6): js 0xffffff30(%rip)
5096(7): cmp $0xff,0x2031bb(%rip)
509d(6): jnz 0xffffff23(%rip)
50a3(2): xor %eax,%eax
50a5(5): mov $0x1,%esi
50aa(2): mov %ebx,%edi
50ac(5): call 0xffffc4e4(%rip)
50b1(2): test %eax,%eax
50b3(2): js 0x1e(%rip)
50b5(3): or $0x1,%eax
50b8(5): mov $0x2,%esi
50bd(2): mov %ebx,%edi
50bf(2): mov %eax,%edx
50c1(2): xor %eax,%eax
50c3(5): call 0xffffc4cd(%rip)
50c8(3): cmp $0xff,%eax
50cb(6): jnz 0xfffffef5(%rip)
50d1(5): call 0xffffc47f(%rip)
50d6(3): mov (%rax),%r12d
50d9(3): mov %rax,%rbp
50dc(2): mov %ebx,%edi
50de(5): call 0xffffc5a2(%rip)
50e3(5): mov $0xffffffff,%ebx
50e8(4): mov %r12d,0x0(%rbp)
50ec(5): jmp 0xfffffed4(%rip)
50f1(7): nop 0x0(%rax)
50f8(5): call 0xffffc458(%rip)
50fd(3): cmp $0x16,(%rax)
5100(6): jnz 0xfffffe6f(%rip)
5106(2): xor %esi,%esi
5108(2): xor %eax,%eax
510a(3): mov %r12d,%edx
510d(2): mov %ebp,%edi
510f(5): call 0xffffc481(%rip)
5114(2): test %eax,%eax
5116(2): mov %eax,%ebx
5118(6): js 0xfffffea8(%rip)
511e(a): mov $0xffffffff,0x203130(%rip)
5128(5): jmp 0xffffff7b(%rip)
512d(5): call 0xffffc4e3(%rip)
5132(5): mov 0x10(%rsp),%rax
5137(2): xor %esi,%esi
5139(3): mov 0x10(%rax),%edx
513c(2): xor %eax,%eax
513e(5): call 0xffffc452(%rip)
5143(2): mov %eax,%ebx
5145(5): jmp 0xfffffe7b(%rip)
514a(5): mov 0x8(%rsp),%rax
514f(5): jmp 0xfffffeca(%rip)
5154(5): mov 0x8(%rsp),%rax
5159(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
5160(3): test %rdi,%rdi
5163(1): push %rbx
5164(3): mov %rdi,%rbx
5167(2): jz 0x13(%rip)
5169(5): call 0xffffc5d7(%rip)
516e(2): test %eax,%eax
5170(2): jz 0xa(%rip)
5172(6): test $0x100,(%rbx)
5178(2): jnz 0x10(%rip)
517a(3): mov %rbx,%rdi
517d(1): pop %rbx
517e(5): jmp 0xffffc5a2(%rip)
5183(5): nop 0x0(%rax,%rax,1)
5188(3): mov %rbx,%rdi
518b(5): mov $0x1,%edx
5190(2): xor %esi,%esi
5192(5): call 0xe(%rip)
5197(3): mov %rbx,%rdi
519a(1): pop %rbx
519b(5): jmp 0xffffc585(%rip)

"rpl_fseeko" :
51a0(4): mov 0x8(%rdi),%rax
51a4(4): cmp %rax,0x10(%rdi)
51a8(2): jz 0x8(%rip)
51aa(5): jmp 0xffffc616(%rip)
51af(1): nop 
51b0(4): mov 0x20(%rdi),%rax
51b4(4): cmp %rax,0x28(%rdi)
51b8(2): jnz 0xfffffff2(%rip)
51ba(5): cmp $0x0,0x48(%rdi)
51bf(2): jnz 0xffffffeb(%rip)
51c1(2): push %r12
51c3(1): push %rbp
51c4(3): mov %edx,%r12d
51c7(1): push %rbx
51c8(3): mov %rsi,%rbp
51cb(3): mov %rdi,%rbx
51ce(5): call 0xffffc532(%rip)
51d3(3): mov %r12d,%edx
51d6(3): mov %rbp,%rsi
51d9(2): mov %eax,%edi
51db(5): call 0xffffc485(%rip)
51e0(4): cmp $0xffffffff,%rax
51e4(2): jz 0xe(%rip)
51e6(3): and $0xef,(%rbx)
51e9(7): mov %rax,0x90(%rbx)
51f0(2): xor %eax,%eax
51f2(1): pop %rbx
51f3(1): pop %rbp
51f4(2): pop %r12
51f6(1): ret near (%rsp)

"rpl_mbrtowc" :
5200(2): push %r13
5202(2): push %r12
5204(3): mov %rsi,%r13
5207(1): push %rbp
5208(1): push %rbx
5209(3): mov %rdi,%rbx
520c(3): mov %rdx,%r12
520f(4): sub $0x18,%rsp
5213(9): mov $0x28,%rax
521c(5): mov %rax,0x8(%rsp)
5221(2): xor %eax,%eax
5223(5): lea 0x4(%rsp),%rax
5228(3): test %rdi,%rdi
522b(4): cmove %rax,%rbx
522f(3): mov %rbx,%rdi
5232(5): call 0xffffc3fe(%rip)
5237(4): cmp $0xfffffffd,%rax
523b(3): mov %rax,%rbp
523e(2): jbe 0x22(%rip)
5240(3): test %r12,%r12
5243(2): jz 0x1d(%rip)
5245(2): xor %edi,%edi
5247(5): call 0xc9(%rip)
524c(2): test %al,%al
524e(2): jnz 0x12(%rip)
5250(5): movzx 0x0(%r13),%eax
5255(5): mov $0x1,%ebp
525a(2): mov %eax,(%rbx)
525c(4): nop 0x0(%rax)
5260(5): mov 0x8(%rsp),%rdx
5265(9): xor $0x28,%rdx
526e(3): mov %rbp,%rax
5271(2): jnz 0xd(%rip)
5273(4): add $0x18,%rsp
5277(1): pop %rbx
5278(1): pop %rbp
5279(2): pop %r12
527b(2): pop %r13
527d(1): ret near (%rsp)
527e(5): call 0xffffc392(%rip)

"close_stream" :
5290(2): push %r12
5292(1): push %rbp
5293(3): mov %rdi,%rbp
5296(1): push %rbx
5297(5): call 0xffffc2e9(%rip)
529c(3): mov 0x0(%rbp),%ebx
529f(3): mov %rbp,%rdi
52a2(3): mov %rax,%r12
52a5(5): call 0xfffffbbb(%rip)
52aa(3): and $0x20,%ebx
52ad(2): test %ebx,%ebx
52af(2): jnz 0x19(%rip)
52b1(2): test %eax,%eax
52b3(2): jz 0xc(%rip)
52b5(3): test %r12,%r12
52b8(5): mov $0xffffffff,%eax
52bd(2): jz 0x3b(%rip)
52bf(1): pop %rbx
52c0(1): pop %rbp
52c1(2): pop %r12
52c3(1): ret near (%rsp)
52c4(4): nop 0x0(%rax)
52c8(2): test %eax,%eax
52ca(2): jnz 0x1e(%rip)
52cc(5): call 0xffffc284(%rip)
52d1(6): mov $0x0,(%rax)
52d7(5): mov $0xffffffff,%eax
52dc(1): pop %rbx
52dd(1): pop %rbp
52de(2): pop %r12
52e0(1): ret near (%rsp)
52e1(7): nop 0x0(%rax)
52e8(1): pop %rbx
52e9(5): mov $0xffffffff,%eax
52ee(1): pop %rbp
52ef(2): pop %r12
52f1(1): ret near (%rsp)
52f2(6): nop 0x0(%rax,%rax,1)
52f8(5): call 0xffffc258(%rip)
52fd(3): cmp $0x9,(%rax)
5300(1): pop %rbx
5301(1): pop %rbp
5302(2): pop %r12
5304(3): setnz %al
5307(3): movzx %al,%eax
530a(2): neg %eax
530c(1): ret near (%rsp)

"hard_locale" :
5310(4): sub $0x8,%rsp
5314(2): xor %esi,%esi
5316(5): call 0xffffc46a(%rip)
531b(3): mov %rax,%rdx
531e(5): mov $0x1,%eax
5323(3): test %rdx,%rdx
5326(2): jz 0x1f(%rip)
5328(7): lea 0x1071(%rip),%rdi
532f(5): mov $0x2,%ecx
5334(3): mov %rdx,%rsi
5337(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5339(3): setnbe %cl
533c(3): sbb $0x0,%cl
533f(2): xor %eax,%eax
5341(2): test %cl,%cl
5343(2): jnz 0xd(%rip)
5345(4): add $0x8,%rsp
5349(1): ret near (%rsp)
534a(6): nop 0x0(%rax,%rax,1)
5350(7): lea 0x104b(%rip),%rdi
5357(5): mov $0x6,%ecx
535c(3): mov %rdx,%rsi
535f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5361(3): setnbe %al
5364(2): sbb $0x0,%al
5366(2): test %al,%al
5368(3): setnz %al
536b(4): add $0x8,%rsp
536f(1): ret near (%rsp)

"locale_charset" :
5370(4): sub $0x8,%rsp
5374(5): mov $0xe,%edi
5379(5): call 0xffffc3b7(%rip)
537e(3): test %rax,%rax
5381(2): jz 0x1f(%rip)
5383(3): cmp $0x0,(%rax)
5386(7): lea 0x101b(%rip),%rdx
538d(4): cmove %rdx,%rax
5391(4): add $0x8,%rsp
5395(1): ret near (%rsp)
5396(a): nop 0x0(%rax,%rax,1)
53a0(7): lea 0x1001(%rip),%rax
53a7(4): add $0x8,%rsp
53ab(1): ret near (%rsp)

"__libc_csu_init" :
53b0(2): push %r15
53b2(2): push %r14
53b4(3): mov %rdx,%r15
53b7(2): push %r13
53b9(2): push %r12
53bb(7): lea 0x20270e(%rip),%r12
53c2(1): push %rbp
53c3(7): lea 0x20270e(%rip),%rbp
53ca(1): push %rbx
53cb(3): mov %edi,%r13d
53ce(3): mov %rsi,%r14
53d1(3): sub %r12,%rbp
53d4(4): sub $0x8,%rsp
53d8(4): sar $0x3,%rbp
53dc(5): call 0xffffc12c(%rip)
53e1(3): test %rbp,%rbp
53e4(2): jz 0x22(%rip)
53e6(2): xor %ebx,%ebx
53e8(8): nop 0x0(%rax,%rax,1)
53f0(3): mov %r15,%rdx
53f3(3): mov %r14,%rsi
53f6(3): mov %r13d,%edi
53f9(4): call 0x0(%r12,%rbx,8)
53fd(4): add $0x1,%rbx
5401(3): cmp %rbx,%rbp
5404(2): jnz 0xffffffec(%rip)
5406(4): add $0x8,%rsp
540a(1): pop %rbx
540b(1): pop %rbp
540c(2): pop %r12
540e(2): pop %r13
5410(2): pop %r14
5412(2): pop %r15
5414(1): ret near (%rsp)

"atexit" :
5430(7): mov 0x202bd1(%rip),%rdx
5437(2): xor %esi,%esi
5439(5): jmp 0xffffc3a7(%rip)

"_fini" :
5440(4): sub $0x8,%rsp
5444(4): add $0x8,%rsp
5448(1): ret near (%rsp)

