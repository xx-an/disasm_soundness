
"__ctype_toupper_loc@plt" :
1ac0(6): jmp 0x21a2ba(%rip)
1ac6(5): push $0x0

"sigprocmask@plt" :
1ad0(6): jmp 0x21a2b2(%rip)
1ad6(5): push $0x1

"__snprintf_chk@plt" :
1ae0(6): jmp 0x21a2aa(%rip)
1ae6(5): push $0x2

"raise@plt" :
1af0(6): jmp 0x21a2a2(%rip)
1af6(5): push $0x3

"free@plt" :
1b00(6): jmp 0x21a29a(%rip)
1b06(5): push $0x4

"abort@plt" :
1b10(6): jmp 0x21a292(%rip)
1b16(5): push $0x5

"__errno_location@plt" :
1b20(6): jmp 0x21a28a(%rip)
1b26(5): push $0x6

"unlink@plt" :
1b30(6): jmp 0x21a282(%rip)
1b36(5): push $0x7

"strncmp@plt" :
1b40(6): jmp 0x21a27a(%rip)
1b46(5): push $0x8

"_exit@plt" :
1b50(6): jmp 0x21a272(%rip)
1b56(5): push $0x9

"strcpy@plt" :
1b60(6): jmp 0x21a26a(%rip)
1b66(5): push $0xa

"__fpending@plt" :
1b70(6): jmp 0x21a262(%rip)
1b76(5): push $0xb

"sigaction@plt" :
1b80(6): jmp 0x21a25a(%rip)
1b86(5): push $0xc

"fcntl@plt" :
1b90(6): jmp 0x21a252(%rip)
1b96(5): push $0xd

"textdomain@plt" :
1ba0(6): jmp 0x21a24a(%rip)
1ba6(5): push $0xe

"__strtol_internal@plt" :
1bb0(6): jmp 0x21a242(%rip)
1bb6(5): push $0xf

"iswctype@plt" :
1bc0(6): jmp 0x21a23a(%rip)
1bc6(5): push $0x10

"fclose@plt" :
1bd0(6): jmp 0x21a232(%rip)
1bd6(5): push $0x11

"bindtextdomain@plt" :
1be0(6): jmp 0x21a22a(%rip)
1be6(5): push $0x12

"dcgettext@plt" :
1bf0(6): jmp 0x21a222(%rip)
1bf6(5): push $0x13

"__ctype_get_mb_cur_max@plt" :
1c00(6): jmp 0x21a21a(%rip)
1c06(5): push $0x14

"strlen@plt" :
1c10(6): jmp 0x21a212(%rip)
1c16(5): push $0x15

"__stack_chk_fail@plt" :
1c20(6): jmp 0x21a20a(%rip)
1c26(5): push $0x16

"getopt_long@plt" :
1c30(6): jmp 0x21a202(%rip)
1c36(5): push $0x17

"mbrtowc@plt" :
1c40(6): jmp 0x21a1fa(%rip)
1c46(5): push $0x18

"dup2@plt" :
1c50(6): jmp 0x21a1f2(%rip)
1c56(5): push $0x19

"strchr@plt" :
1c60(6): jmp 0x21a1ea(%rip)
1c66(5): push $0x1a

"strrchr@plt" :
1c70(6): jmp 0x21a1e2(%rip)
1c76(5): push $0x1b

"lseek@plt" :
1c80(6): jmp 0x21a1da(%rip)
1c86(5): push $0x1c

"__assert_fail@plt" :
1c90(6): jmp 0x21a1d2(%rip)
1c96(5): push $0x1d

"__strtoul_internal@plt" :
1ca0(6): jmp 0x21a1ca(%rip)
1ca6(5): push $0x1e

"memset@plt" :
1cb0(6): jmp 0x21a1c2(%rip)
1cb6(5): push $0x1f

"close@plt" :
1cc0(6): jmp 0x21a1ba(%rip)
1cc6(5): push $0x20

"fputc@plt" :
1cd0(6): jmp 0x21a1b2(%rip)
1cd6(5): push $0x21

"memchr@plt" :
1ce0(6): jmp 0x21a1aa(%rip)
1ce6(5): push $0x22

"read@plt" :
1cf0(6): jmp 0x21a1a2(%rip)
1cf6(5): push $0x23

"memcmp@plt" :
1d00(6): jmp 0x21a19a(%rip)
1d06(5): push $0x24

"wctype@plt" :
1d10(6): jmp 0x21a192(%rip)
1d16(5): push $0x25

"fputs_unlocked@plt" :
1d20(6): jmp 0x21a18a(%rip)
1d26(5): push $0x26

"calloc@plt" :
1d30(6): jmp 0x21a182(%rip)
1d36(5): push $0x27

"strcmp@plt" :
1d40(6): jmp 0x21a17a(%rip)
1d46(5): push $0x28

"signal@plt" :
1d50(6): jmp 0x21a172(%rip)
1d56(5): push $0x29

"sigemptyset@plt" :
1d60(6): jmp 0x21a16a(%rip)
1d66(5): push $0x2a

"memcpy@plt" :
1d70(6): jmp 0x21a162(%rip)
1d76(5): push $0x2b

"fileno@plt" :
1d80(6): jmp 0x21a15a(%rip)
1d86(5): push $0x2c

"iswalnum@plt" :
1d90(6): jmp 0x21a152(%rip)
1d96(5): push $0x2d

"malloc@plt" :
1da0(6): jmp 0x21a14a(%rip)
1da6(5): push $0x2e

"wcrtomb@plt" :
1db0(6): jmp 0x21a142(%rip)
1db6(5): push $0x2f

"fflush@plt" :
1dc0(6): jmp 0x21a13a(%rip)
1dc6(5): push $0x30

"nl_langinfo@plt" :
1dd0(6): jmp 0x21a132(%rip)
1dd6(5): push $0x31

"__freading@plt" :
1de0(6): jmp 0x21a12a(%rip)
1de6(5): push $0x32

"fwrite_unlocked@plt" :
1df0(6): jmp 0x21a122(%rip)
1df6(5): push $0x33

"realloc@plt" :
1e00(6): jmp 0x21a11a(%rip)
1e06(5): push $0x34

"fdopen@plt" :
1e10(6): jmp 0x21a112(%rip)
1e16(5): push $0x35

"setlocale@plt" :
1e20(6): jmp 0x21a10a(%rip)
1e26(5): push $0x36

"__printf_chk@plt" :
1e30(6): jmp 0x21a102(%rip)
1e36(5): push $0x37

"btowc@plt" :
1e40(6): jmp 0x21a0fa(%rip)
1e46(5): push $0x38

"memmove@plt" :
1e50(6): jmp 0x21a0f2(%rip)
1e56(5): push $0x39

"error@plt" :
1e60(6): jmp 0x21a0ea(%rip)
1e66(5): push $0x3a

"open@plt" :
1e70(6): jmp 0x21a0e2(%rip)
1e76(5): push $0x3b

"fseeko@plt" :
1e80(6): jmp 0x21a0da(%rip)
1e86(5): push $0x3c

"fopen@plt" :
1e90(6): jmp 0x21a0d2(%rip)
1e96(5): push $0x3d

"towlower@plt" :
1ea0(6): jmp 0x21a0ca(%rip)
1ea6(5): push $0x3e

"towupper@plt" :
1eb0(6): jmp 0x21a0c2(%rip)
1eb6(5): push $0x3f

"__cxa_atexit@plt" :
1ec0(6): jmp 0x21a0ba(%rip)
1ec6(5): push $0x40

"sigismember@plt" :
1ed0(6): jmp 0x21a0b2(%rip)
1ed6(5): push $0x41

"exit@plt" :
1ee0(6): jmp 0x21a0aa(%rip)
1ee6(5): push $0x42

"fwrite@plt" :
1ef0(6): jmp 0x21a0a2(%rip)
1ef6(5): push $0x43

"__fprintf_chk@plt" :
1f00(6): jmp 0x21a09a(%rip)
1f06(5): push $0x44

"mbsinit@plt" :
1f10(6): jmp 0x21a092(%rip)
1f16(5): push $0x45

"iswprint@plt" :
1f20(6): jmp 0x21a08a(%rip)
1f26(5): push $0x46

"sigaddset@plt" :
1f30(6): jmp 0x21a082(%rip)
1f36(5): push $0x47

"__ctype_tolower_loc@plt" :
1f40(6): jmp 0x21a07a(%rip)
1f46(5): push $0x48

"__ctype_b_loc@plt" :
1f50(6): jmp 0x21a072(%rip)
1f56(5): push $0x49

"__sprintf_chk@plt" :
1f60(6): jmp 0x21a06a(%rip)
1f66(5): push $0x4a

".plt.got" :
1f70(6): jmp 0x21a082(%rip)
1f76(2): nop 

"_init" :
1a98(4): sub $0x8,%rsp
1a9c(7): mov 0x21a545(%rip),%rax
1aa3(3): test %rax,%rax
1aa6(2): jz 0x4(%rip)
1aa8(2): call %rax
1aaa(4): add $0x8,%rsp
1aae(1): ret near (%rsp)

"regexp_error" :
1f80(2): push %r13
1f82(2): push %r12
1f84(1): push %rbp
1f85(1): push %rbx
1f86(2): mov %edx,%ebp
1f88(3): mov %rsi,%rbx
1f8b(4): sub $0x28,%rsp
1f8f(4): movsxd 0x18(%rdi),%rdx
1f93(9): mov $0x28,%rax
1f9c(5): mov %rax,0x18(%rsp)
1fa1(2): xor %eax,%eax
1fa3(7): mov 0x21a20e(%rip),%rax
1faa(4): mov 0x0(%rax,%rdx,8),%rdi
1fae(5): call 0x42b2(%rip)
1fb3(7): lea 0x14033(%rip),%rsi
1fba(2): xor %edi,%edi
1fbc(7): mov 0x21a275(%rip),%r12
1fc3(5): mov $0x5,%edx
1fc8(3): mov %rax,%r13
1fcb(5): call 0xfffffc25(%rip)
1fd0(7): mov 0x21a109(%rip),%rdi
1fd7(3): mov %rax,%rdx
1fda(3): mov %r13,%r8
1fdd(2): xor %eax,%eax
1fdf(3): mov %r12,%rcx
1fe2(5): mov $0x1,%esi
1fe7(5): call 0xffffff19(%rip)
1fec(3): test %rbx,%rbx
1fef(2): jz 0x3e(%rip)
1ff1(3): mov %rsp,%rsi
1ff4(3): mov %rbx,%rdi
1ff7(5): call 0x2509(%rip)
1ffc(7): lea 0x13fbb(%rip),%rsi
2003(2): xor %edi,%edi
2005(5): mov $0x5,%edx
200a(3): mov %rax,%rbx
200d(5): call 0xfffffbe3(%rip)
2012(7): mov 0x21a0c7(%rip),%rdi
2019(3): mov %rax,%rdx
201c(3): mov %rbx,%rcx
201f(5): mov $0x1,%esi
2024(2): xor %eax,%eax
2026(5): call 0xfffffeda(%rip)
202b(2): jmp 0x13(%rip)
202d(7): mov 0x21a0ac(%rip),%rsi
2034(5): mov $0xa,%edi
2039(5): call 0xfffffc97(%rip)
203e(3): test %bpl,%bpl
2041(2): jnz 0xc(%rip)
2043(5): call 0x1d2d(%rip)
2048(5): call 0x1238(%rip)
204d(5): call 0x11d3(%rip)

"main" :
2060(2): push %r15
2062(2): push %r14
2064(2): push %r13
2066(2): push %r12
2068(3): mov %rsi,%r12
206b(1): push %rbp
206c(1): push %rbx
206d(7): lea 0x21994c(%rip),%rbx
2074(7): sub $0x108,%rsp
207b(4): mov %edi,0x8(%rsp)
207f(3): mov (%rsi),%rdi
2082(9): mov $0x28,%rax
208b(8): mov %rax,0xf8(%rsp)
2093(2): xor %eax,%eax
2095(5): call 0x24bb(%rip)
209a(7): lea 0x15040(%rip),%rsi
20a1(5): mov $0x6,%edi
20a6(5): call 0xfffffd7a(%rip)
20ab(7): lea 0x14011(%rip),%rsi
20b2(7): lea 0x13fe1(%rip),%rdi
20b9(5): call 0xfffffb27(%rip)
20be(7): lea 0x13fd5(%rip),%rdi
20c5(5): call 0xfffffadb(%rip)
20ca(7): lea 0x227f(%rip),%rdi
20d1(5): call 0x13e9f(%rip)
20d6(7): lea 0x13ffe(%rip),%rax
20dd(7): mov $0x1,0x21a0ce(%rip)
20e4(7): mov %r12,0x21a0cd(%rip)
20eb(b): mov $0x0,0x21a0b2(%rip)
20f6(b): mov $0x0,0x21a09f(%rip)
2101(7): mov $0x0,0x21a0ab(%rip)
2108(7): mov $0x0,0x21a0a1(%rip)
210f(7): mov %rax,0x21a0d2(%rip)
2116(a): nop 0x0(%rax,%rax,1)
2120(4): mov 0x8(%rsp),%edi
2124(7): lea 0x13fde(%rip),%rdx
212b(3): xor %r8d,%r8d
212e(3): mov %rbx,%rcx
2131(3): mov %r12,%rsi
2134(5): call 0xfffffafc(%rip)
2139(3): cmp $0xff,%eax
213c(6): jz 0x155(%rip)
2142(3): cmp $0x6b,%eax
2145(6): jz 0xcb(%rip)
214b(2): jle 0x2d(%rip)
214d(3): cmp $0x73,%eax
2150(6): jz 0xac(%rip)
2156(2): jle 0x5a(%rip)
2158(3): cmp $0x7a,%eax
215b(6): jz 0xc5(%rip)
2161(3): add $0x80,%eax
2164(6): jnz 0xc2b(%rip)
216a(7): mov $0x1,0x21a03f(%rip)
2171(2): jmp 0xffffffaf(%rip)
2173(5): nop 0x0(%rax,%rax,1)
2178(5): cmp $0xffffff7e,%eax
217d(6): jz 0xc1c(%rip)
2183(6): jle 0xc5(%rip)
2189(3): cmp $0x62,%eax
218c(6): jz 0xa4(%rip)
2192(3): cmp $0x66,%eax
2195(6): jnz 0xbfa(%rip)
219b(7): mov 0x219f16(%rip),%rax
21a2(7): mov %rax,0x21a03f(%rip)
21a9(5): jmp 0xffffff77(%rip)
21ae(2): nop 
21b0(3): cmp $0x6e,%eax
21b3(2): jnz 0x40(%rip)
21b5(7): lea 0x13f22(%rip),%rsi
21bc(5): mov $0x5,%edx
21c1(2): xor %edi,%edi
21c3(5): call 0xfffffa2d(%rip)
21c8(7): mov 0x219ee9(%rip),%rdi
21cf(7): lea 0x14f0b(%rip),%rcx
21d6(3): mov %rax,%r8
21d9(3): xor %r9d,%r9d
21dc(5): mov $0x7fffffff,%edx
21e1(2): xor %esi,%esi
21e3(5): call 0x4a9d(%rip)
21e8(6): mov %eax,0x219e22(%rip)
21ee(5): jmp 0xffffff32(%rip)
21f3(3): cmp $0x71,%eax
21f6(6): jnz 0xb99(%rip)
21fc(7): mov $0x1,0x219fb0(%rip)
2203(5): jmp 0xffffff1d(%rip)
2208(8): nop 0x0(%rax,%rax,1)
2210(7): mov $0x0,0x219f9b(%rip)
2217(5): jmp 0xffffff09(%rip)
221c(4): nop 0x0(%rax)
2220(7): mov $0x1,0x219f8a(%rip)
2227(5): jmp 0xfffffef9(%rip)
222c(4): nop 0x0(%rax)
2230(7): mov 0x219e81(%rip),%rax
2237(7): mov %rax,0x219fa2(%rip)
223e(5): jmp 0xfffffee2(%rip)
2243(5): nop 0x0(%rax,%rax,1)
2248(5): cmp $0xffffff7d,%eax
224d(6): jnz 0xb42(%rip)
2253(4): sub $0x8,%rsp
2257(7): mov 0x219e4a(%rip),%rdi
225e(7): mov 0x219db3(%rip),%rcx
2265(2): push $0x0
2267(7): lea 0x13e7f(%rip),%r9
226e(7): lea 0x13e88(%rip),%r8
2275(7): lea 0x13e1a(%rip),%rdx
227c(7): lea 0x13d96(%rip),%rsi
2283(2): xor %eax,%eax
2285(5): call 0x452b(%rip)
228a(2): xor %edi,%edi
228c(5): call 0xfffffc54(%rip)
2291(6): mov 0x219e19(%rip),%eax
2297(4): mov 0x8(%rsp),%edx
229b(2): sub %eax,%edx
229d(3): sub $0x1,%edx
22a0(6): jle 0xac4(%rip)
22a6(7): mov 0x219f3b(%rip),%rdi
22ad(2): xor %eax,%eax
22af(4): or $0xffffffff,%rcx
22b3(2): REPNZ scasb rdi(%es,10),%al
22b5(3): mov %rcx,%rax
22b8(3): not %rax
22bb(4): lea 0xffffffff(%rax),%rbx
22bf(7): mov 0x219f1a(%rip),%rax
22c6(3): test %rax,%rax
22c9(2): jz 0x4d(%rip)
22cb(7): mov 0x219f0e(%rip),%r8
22d2(2): xor %edi,%edi
22d4(4): movzx (%r8),%ecx
22d8(3): mov %r8,%rdx
22db(2): test %cl,%cl
22dd(2): jnz 0x18(%rip)
22df(5): jmp 0x95c(%rip)
22e4(4): nop 0x0(%rax)
22e8(2): mov %esi,%ecx
22ea(2): test %cl,%cl
22ec(3): mov %rax,%rdx
22ef(6): jz 0x7bc(%rip)
22f5(3): cmp $0x25,%cl
22f8(4): lea 0x1(%rdx),%rax
22fc(4): movzx 0x1(%rdx),%esi
2300(2): jnz 0xffffffe8(%rip)
2302(4): cmp $0x25,%sil
2306(6): jnz 0x63c(%rip)
230c(4): movzx 0x2(%rdx),%ecx
2310(4): lea 0x2(%rdx),%rax
2314(2): jmp 0xffffffd6(%rip)
2316(6): mov 0x219cf4(%rip),%eax
231c(3): cmp $0x9,%eax
231f(6): jbe 0x87c(%rip)
2325(7): movsxd 0x219ce4(%rip),%rdx
232c(7): mov $0xfffffffe,%rax
2333(3): sub %rbx,%rax
2336(3): cmp %rdx,%rax
2339(6): jb 0x79e(%rip)
233f(5): lea 0x1(%rbx,%rdx,1),%rdi
2344(5): call 0x45cc(%rip)
2349(6): mov 0x219d61(%rip),%ebx
234f(7): mov %rax,0x219e9a(%rip)
2356(7): lea 0x1484d(%rip),%rsi
235d(3): movsxd %ebx,%rax
2360(4): mov 0x0(%r12,%rax,8),%rbp
2364(3): lea 0x1(%rax),%ebx
2367(6): mov %ebx,0x219d43(%rip)
236d(3): mov %rbp,%rdi
2370(5): call 0xfffff9d0(%rip)
2375(2): test %eax,%eax
2377(6): jnz 0x772(%rip)
237d(4): cmp 0x8(%rsp),%ebx
2381(6): jnl 0x1e7(%rip)
2387(3): movsxd %ebx,%rax
238a(4): mov 0x0(%r12,%rax,8),%rbp
238e(5): mov %rax,0x10(%rsp)
2393(5): lea 0x30(%rsp),%rax
2398(5): mov %rax,0x20(%rsp)
239d(5): lea 0x38(%rsp),%rax
23a2(5): mov %rax,0x28(%rsp)
23a7(4): movzx 0x0(%rbp),%eax
23ab(2): cmp $0x25,%al
23ad(4): setz %r15b
23b1(2): cmp $0x2f,%al
23b3(6): jz 0xc5(%rip)
23b9(7): nop 0x0(%rax)
23c0(3): test %r15b,%r15b
23c3(6): jnz 0xb5(%rip)
23c9(5): mov 0x10(%rsp),%rax
23ce(4): lea 0x0(%r12,%rax,8),%rbp
23d2(5): call 0x147e(%rip)
23d7(5): mov 0x20(%rsp),%rcx
23dc(4): mov 0x0(%rbp),%rdi
23e0(7): lea 0x14cfa(%rip),%r8
23e7(2): xor %esi,%esi
23e9(3): mov %ebx,0x18(%rax)
23ec(5): mov $0xa,%edx
23f1(3): mov %rax,%r14
23f4(5): call 0x4f7c(%rip)
23f9(2): test %eax,%eax
23fb(6): jnz 0x88f(%rip)
2401(5): mov 0x30(%rsp),%rax
2406(3): test %rax,%rax
2409(6): jz 0x856(%rip)
240f(7): mov 0x219cfa(%rip),%rdi
2416(3): cmp %rdi,%rax
2419(6): jb 0x905(%rip)
241f(6): jz 0x37b(%rip)
2425(7): mov %rax,0x219ce4(%rip)
242c(4): mov %rax,0x8(%r14)
2430(3): lea 0x1(%rbx),%eax
2433(4): cmp %eax,0x8(%rsp)
2437(6): jle 0x131(%rip)
243d(5): mov 0x10(%rsp),%r13
2442(4): add $0x1,%r13
2446(4): mov 0x0(%r12,%r13,8),%rbp
244a(8): lea 0x0(,%r13,8),%r15
2452(4): cmp $0x7b,0x0(%rbp)
2456(6): jz 0x2cc(%rip)
245c(2): cwde 
245e(3): mov %rax,%rbx
2461(5): mov %rax,0x10(%rsp)
2466(4): movzx 0x0(%rbp),%eax
246a(2): cmp $0x25,%al
246c(4): setz %r15b
2470(2): cmp $0x2f,%al
2472(6): jnz 0xffffff4e(%rip)
2478(3): movsx %al,%esi
247b(4): lea 0x1(%rbp),%rax
247f(3): mov %esi,%r14d
2482(3): mov %rax,%rdi
2485(5): mov %rax,0x18(%rsp)
248a(5): call 0xfffff7e6(%rip)
248f(3): test %rax,%rax
2492(3): mov %rax,%r13
2495(6): jz 0x85f(%rip)
249b(5): call 0x13b5(%rip)
24a0(5): mov $0x100,%edi
24a5(4): mov %r15b,0x1d(%rax)
24a9(3): mov %ebx,0x18(%rax)
24ac(4): mov $0x1,0x1e(%rax)
24b0(8): mov $0x0,0x20(%rax)
24b8(3): mov %rax,%r14
24bb(8): mov $0x0,0x28(%rax)
24c3(5): call 0x444d(%rip)
24c8(3): mov %r13,%rsi
24cb(5): mov 0x18(%rsp),%rdi
24d0(4): lea 0x20(%r14),%rdx
24d4(3): sub %rbp,%rsi
24d7(4): mov %rax,0x40(%r14)
24db(8): mov $0x0,0x48(%r14)
24e3(4): sub $0x1,%rsi
24e7(b): mov $0x2c6,0x219e8e(%rip)
24f2(5): call 0x12e8e(%rip)
24f7(3): test %rax,%rax
24fa(3): mov %rax,%r15
24fd(6): jnz 0x7c0(%rip)
2503(5): cmp $0x0,0x1(%r13)
2508(6): jz 0xffffff28(%rip)
250e(4): lea 0x1(%r13),%rdi
2512(7): lea 0x14bc8(%rip),%r8
2519(2): xor %esi,%esi
251b(3): mov %r14,%rcx
251e(5): mov $0xa,%edx
2523(5): call 0x478d(%rip)
2528(2): test %eax,%eax
252a(6): jz 0xffffff06(%rip)
2530(3): mov %rbp,%rdi
2533(5): call 0x3d2d(%rip)
2538(7): lea 0x14459(%rip),%rsi
253f(3): mov %rax,%rbx
2542(5): mov $0x5,%edx
2547(2): xor %edi,%edi
2549(5): call 0xfffff6a7(%rip)
254e(3): mov %rbx,%rcx
2551(3): mov %rax,%rdx
2554(2): xor %esi,%esi
2556(5): mov $0x1,%edi
255b(2): xor %eax,%eax
255d(5): call 0xfffff903(%rip)
2562(6): nop 0x0(%rax,%rax,1)
2568(7): lea 0x145b1(%rip),%rbx
256f(7): lea 0x219baa(%rip),%rdi
2576(5): lea 0x40(%rsp),%r13
257b(7): lea 0x219b9e(%rip),%r15
2582(4): lea 0x2c(%rbx),%r14
2586(3): mov %rbx,%rbp
2589(5): call 0xfffff7d7(%rip)
258e(4): mov 0x0(%rbp),%r12d
2592(2): xor %esi,%esi
2594(3): mov %r13,%rdx
2597(3): mov %r12d,%edi
259a(5): call 0xfffff5e6(%rip)
259f(6): cmp $0x1,0x40(%rsp)
25a5(2): jz 0xd(%rip)
25a7(3): mov %r12d,%esi
25aa(3): mov %r15,%rdi
25ad(5): call 0xfffff983(%rip)
25b2(4): add $0x4,%rbp
25b6(3): cmp %rbp,%r14
25b9(2): jnz 0xffffffd5(%rip)
25bb(7): lea 0x101e(%rip),%rax
25c2(5): lea 0x48(%rsp),%rdi
25c7(7): lea 0x219b52(%rip),%rsi
25ce(5): mov $0x20,%ecx
25d3(b): mov $0x0,0xc8(%rsp)
25de(7): lea 0x219b3b(%rip),%r14
25e5(5): mov %rax,0x40(%rsp)
25ea(2): REP movsd rsi(%ds,10),rdi(%es,10)
25ec(2): jmp 0xd(%rip)
25ee(2): nop 
25f0(4): add $0x4,%rbx
25f4(3): cmp %rbx,%rbp
25f7(2): jz 0x2a(%rip)
25f9(3): mov (%rbx),%r12d
25fc(3): mov %r14,%rdi
25ff(3): mov %r12d,%esi
2602(5): call 0xfffff8ce(%rip)
2607(2): test %eax,%eax
2609(2): jz 0xffffffe7(%rip)
260b(2): xor %edx,%edx
260d(3): mov %r13,%rsi
2610(3): mov %r12d,%edi
2613(4): add $0x4,%rbx
2617(5): call 0xfffff569(%rip)
261c(3): cmp %rbx,%rbp
261f(2): jnz 0xffffffda(%rip)
2621(9): mov $0x0,0x8(%rsp)
262a(5): mov 0x8(%rsp),%rax
262f(7): cmp 0x219b6a(%rip),%rax
2636(6): jnb 0x56f(%rip)
263c(6): imul 0x8(%rsp),$0x60,%r15
2642(7): mov 0x219b5f(%rip),%r12
2649(3): xor %r14d,%r14d
264c(6): cmp $0x0,0x1e(%r12,%r15,1)
2652(6): jz 0x1d1(%rip)
2658(4): lea 0x0(%r12,%r15,1),%rbx
265c(4): cmp $0x0,0x1c(%rbx)
2660(2): jnz 0xc(%rip)
2662(4): cmp 0x10(%rbx),%r14
2666(6): jnbe 0x3a3(%rip)
266c(5): movzx 0x1d(%rbx),%r12d
2671(3): test %r12b,%r12b
2674(6): jz 0x42d(%rip)
267a(7): cmp $0x0,0x219b2f(%rip)
2681(2): jz 0x10(%rip)
2683(8): cmp $0x0,0x219b75(%rip)
268b(6): jnz 0x57a(%rip)
2691(4): cmp $0x0,(%rbx)
2695(4): lea 0x20(%rbx),%rbp
2699(2): jns 0x4d(%rip)
269b(5): jmp 0x25d(%rip)
26a0(3): mov (%rax),%rcx
26a3(4): mov 0x8(%rax),%rsi
26a7(3): mov %rbp,%rdi
26aa(5): cmp $0xa,0xffffffff(%rsi,%rcx,1)
26af(4): lea 0xffffffff(%rcx),%rdx
26b3(4): cmovne %rcx,%rdx
26b7(3): xor %r9d,%r9d
26ba(2): xor %ecx,%ecx
26bc(3): mov %rdx,%r8
26bf(5): call 0x13661(%rip)
26c4(4): cmp $0xfffffffe,%rax
26c8(6): jz 0x742(%rip)
26ce(4): cmp $0xffffffff,%rax
26d2(6): jnz 0x342(%rip)
26d8(5): call 0x15b8(%rip)
26dd(3): test %r12b,%r12b
26e0(6): jz 0x3fc(%rip)
26e6(7): mov 0x219b13(%rip),%rax
26ed(4): lea 0x1(%rax),%rdi
26f1(7): mov %rdi,0x219b08(%rip)
26f8(5): call 0x16a8(%rip)
26fd(3): test %rax,%rax
2700(2): jnz 0xffffffa0(%rip)
2702(4): cmp $0x0,0x1c(%rbx)
2706(6): jz 0x796(%rip)
270c(3): test %r12b,%r12b
270f(2): jnz 0xc(%rip)
2711(5): call 0x165f(%rip)
2716(5): call 0xb6a(%rip)
271b(2): xor %edi,%edi
271d(5): call 0xfffff7c3(%rip)
2722(2): xor %eax,%eax
2724(4): or $0xffffffff,%rcx
2728(3): mov %rbp,%rdi
272b(2): REPNZ scasb rdi(%es,10),%al
272d(3): mov %rcx,%rax
2730(3): not %rax
2733(5): lea 0xfffffffe(%rbp,%rax,1),%r13
2738(5): cmp $0x7d,0x0(%r13)
273d(6): jnz 0x72d(%rip)
2743(4): lea 0x1(%rbp),%rdi
2747(4): lea 0xffffffff(%r13),%rax
274b(5): mov $0x0,0x0(%r13)
2750(3): cmp %rax,%rdi
2753(2): jz 0x81(%rip)
2755(5): mov 0x28(%rsp),%rcx
275a(7): lea 0x14980(%rip),%r8
2761(2): xor %esi,%esi
2763(5): mov $0xa,%edx
2768(5): call 0x4c08(%rip)
276d(2): test %eax,%eax
276f(6): jnz 0x6c1(%rip)
2775(5): mov 0x38(%rsp),%rax
277a(4): mov %rax,0x10(%r14)
277e(3): lea 0x2(%rbx),%eax
2781(4): cmp %eax,0x8(%rsp)
2785(5): mov $0x7d,0x0(%r13)
278a(6): jle 0xfffffdde(%rip)
2790(5): mov 0x8(%r12,%r15,1),%rbp
2795(5): jmp 0xfffffcc7(%rip)
279a(4): mov 0x0(%rbp),%rdi
279e(5): call 0x3ac2(%rip)
27a3(7): lea 0x14286(%rip),%rsi
27aa(3): mov %rax,%rbp
27ad(5): mov $0x5,%edx
27b2(2): xor %edi,%edi
27b4(5): call 0xfffff43c(%rip)
27b9(3): mov %rbp,%rcx
27bc(3): mov %rax,%rdx
27bf(2): xor %esi,%esi
27c1(2): xor %eax,%eax
27c3(2): xor %edi,%edi
27c5(5): call 0xfffff69b(%rip)
27ca(5): mov 0x30(%rsp),%rax
27cf(5): jmp 0xfffffc56(%rip)
27d4(4): cmp $0x2a,0x1(%rbp)
27d8(6): jnz 0xffffff7d(%rip)
27de(5): mov $0x1,0x1c(%r14)
27e3(2): jmp 0xffffff9b(%rip)
27e5(5): call 0xa9b(%rip)
27ea(7): cmp $0x0,0x2199bf(%rip)
27f1(6): jnz 0xc0(%rip)
27f7(9): nop 0x0(%rax,%rax,1)
2800(7): mov 0x2199f9(%rip),%rax
2807(4): lea 0x1(%rax),%rdi
280b(5): call 0x1595(%rip)
2810(3): test %rax,%rax
2813(6): jz 0x120(%rip)
2819(7): mov 0x219988(%rip),%r12
2820(3): mov %r13,%r14
2823(3): add %r15,%r12
2826(6): cmp $0x0,0x1c(%r12)
282c(2): jnz 0xd(%rip)
282e(5): cmp 0x10(%r12),%r14
2833(6): jnbe 0x1d6(%rip)
2839(5): mov 0x8(%r12),%rbp
283e(4): lea 0x1(%r14),%r13
2842(5): call 0xc8e(%rip)
2847(7): mov 0x2199b2(%rip),%rax
284e(4): imul %r13,%rbp
2852(4): lea 0x1(%rax),%rdi
2856(5): call 0x154a(%rip)
285b(3): test %rax,%rax
285e(6): jz 0xbb(%rip)
2864(5): call 0x163c(%rip)
2869(3): cmp %rax,%rbp
286c(4): lea 0x1(%rax),%rbx
2870(6): jbe 0xffffff75(%rip)
2876(4): add $0x1,%rbp
287a(6): nop 0x0(%rax,%rax,1)
2880(5): call 0x1410(%rip)
2885(3): test %rax,%rax
2888(6): jz 0x9e(%rip)
288e(3): mov %rax,%rdi
2891(4): add $0x1,%rbx
2895(5): call 0xbab(%rip)
289a(3): cmp %rbp,%rbx
289d(2): jnz 0xffffffe3(%rip)
289f(5): call 0x9e1(%rip)
28a4(7): cmp $0x0,0x219905(%rip)
28ab(6): jz 0xffffff55(%rip)
28b1(5): call 0x13df(%rip)
28b6(5): jmp 0xffffff4a(%rip)
28bb(5): nop 0x0(%rax,%rax,1)
28c0(3): mov (%rax),%rcx
28c3(4): mov 0x8(%rax),%rsi
28c7(3): mov %rbp,%rdi
28ca(5): cmp $0xa,0xffffffff(%rsi,%rcx,1)
28cf(4): lea 0xffffffff(%rcx),%rdx
28d3(4): cmovne %rcx,%rdx
28d7(3): xor %r9d,%r9d
28da(2): xor %ecx,%ecx
28dc(3): mov %rdx,%r8
28df(5): call 0x13441(%rip)
28e4(4): cmp $0xfffffffe,%rax
28e8(6): jz 0x522(%rip)
28ee(4): cmp $0xffffffff,%rax
28f2(6): jnz 0x122(%rip)
28f8(7): mov 0x219901(%rip),%rax
28ff(4): lea 0x1(%rax),%rdi
2903(7): mov %rdi,0x2198f6(%rip)
290a(5): call 0x1496(%rip)
290f(3): test %rax,%rax
2912(2): jnz 0xffffffae(%rip)
2914(5): jmp 0xfffffdee(%rip)
2919(7): cmp $0x0,0x219890(%rip)
2920(6): jz 0xffffff44(%rip)
2926(5): mov 0x8(%r12),%rdi
292b(3): mov %r14,%rsi
292e(5): call 0xce2(%rip)
2933(7): cmp $0x0,0x219876(%rip)
293a(6): jnz 0xfffffedf(%rip)
2940(2): jmp 0xffffffe6(%rip)
2942(3): test %dil,%dil
2945(6): jnz 0x566(%rip)
294b(2): xor %edi,%edi
294d(3): movzx (%rax),%edx
2950(3): mov %rax,%rsi
2953(3): cmp $0x27,%dl
2956(6): jz 0xab(%rip)
295c(2): jnle 0x10(%rip)
295e(3): cmp $0x23,%dl
2961(2): jnz 0x15(%rip)
2963(3): or $0x2,%edi
2966(4): add $0x1,%rax
296a(2): jmp 0xffffffe3(%rip)
296c(3): cmp $0x2d,%dl
296f(2): jz 0xfffffff7(%rip)
2971(3): cmp $0x30,%dl
2974(2): jz 0xfffffff2(%rip)
2976(3): movsx %dl,%eax
2979(3): sub $0x30,%eax
297c(3): cmp $0x9,%eax
297f(2): jnbe 0x1a(%rip)
2981(7): nop 0x0(%rax)
2988(4): add $0x1,%rsi
298c(3): movsx (%rsi),%eax
298f(2): mov %eax,%edx
2991(3): sub $0x30,%eax
2994(3): cmp $0x9,%eax
2997(2): jbe 0xfffffff1(%rip)
2999(3): cmp $0x2e,%dl
299c(2): jz 0x54(%rip)
299e(4): movzx (%rsi),%r13d
29a2(4): cmp $0x69,%r13b
29a6(3): mov %r13,%rbp
29a9(6): jz 0x24f(%rip)
29af(6): jle 0x195(%rip)
29b5(4): cmp $0x75,%r13b
29b9(6): jz 0x235(%rip)
29bf(4): cmp $0x78,%r13b
29c3(2): jz 0xc(%rip)
29c5(4): cmp $0x6f,%r13b
29c9(6): jnz 0x198(%rip)
29cf(5): mov $0x2,%eax
29d4(2): not %eax
29d6(2): and %eax,%edi
29d8(6): jnz 0x3fb(%rip)
29de(4): movzx 0x1(%rsi),%ecx
29e2(4): lea 0x1(%rsi),%rax
29e6(5): mov $0x1,%edi
29eb(5): jmp 0xfffff8ff(%rip)
29f0(4): add $0x1,%rsi
29f4(3): movsx (%rsi),%eax
29f7(3): sub $0x30,%eax
29fa(3): cmp $0x9,%eax
29fd(2): jnbe 0xffffffa1(%rip)
29ff(2): jmp 0xfffffff1(%rip)
2a01(3): or $0x1,%edi
2a04(5): jmp 0xffffff62(%rip)
2a09(6): add $0x1,0x8(%rsp)
2a0f(5): jmp 0xfffffc1b(%rip)
2a14(7): mov 0x2197e5(%rip),%rax
2a1b(3): add (%rbx),%rax
2a1e(3): mov %rax,%rbp
2a21(5): mov %rax,0x10(%rsp)
2a26(3): mov 0x18(%rbx),%eax
2a29(4): mov %eax,0x18(%rsp)
2a2d(5): call 0x1473(%rip)
2a32(3): cmp %rax,%rbp
2a35(6): jb 0x4db(%rip)
2a3b(5): mov 0x10(%rsp),%r13
2a40(3): sub %rax,%r13
2a43(2): jz 0x33(%rip)
2a45(2): xor %ebp,%ebp
2a47(2): jmp 0x12(%rip)
2a49(7): nop 0x0(%rax)
2a50(4): add $0x1,%rbp
2a54(3): cmp %rbp,%r13
2a57(2): jz 0x1f(%rip)
2a59(5): call 0x1237(%rip)
2a5e(3): test %rax,%rax
2a61(6): jz 0x46e(%rip)
2a67(3): test %r12b,%r12b
2a6a(2): jnz 0xffffffe6(%rip)
2a6c(3): mov %rax,%rdi
2a6f(5): call 0x9d1(%rip)
2a74(2): jmp 0xffffffdc(%rip)
2a76(3): test %r12b,%r12b
2a79(6): jz 0x196(%rip)
2a7f(4): cmp $0x0,(%rbx)
2a83(2): jle 0xe(%rip)
2a85(5): mov 0x10(%rsp),%rax
2a8a(7): mov %rax,0x21976f(%rip)
2a91(4): add $0x1,%r14
2a95(7): mov 0x21970c(%rip),%r12
2a9c(5): jmp 0xfffffbbc(%rip)
2aa1(5): call 0xa2f(%rip)
2aa6(5): jmp 0xfffffbd4(%rip)
2aab(3): test %dil,%dil
2aae(6): jz 0x18d(%rip)
2ab4(4): or $0xff,%r9d
2ab8(4): or $0xffffffff,%rcx
2abc(5): mov $0x1,%edx
2ac1(2): xor %esi,%esi
2ac3(2): xor %edi,%edi
2ac5(2): xor %eax,%eax
2ac7(5): call 0xfffff019(%rip)
2acc(2): test %eax,%eax
2ace(3): movsxd %eax,%rdx
2ad1(6): jns 0xfffff86e(%rip)
2ad7(5): call 0xd39(%rip)
2adc(3): mov %rax,%rdi
2adf(5): call 0x961(%rip)
2ae4(5): jmp 0xfffffc02(%rip)
2ae9(2): xor %ecx,%ecx
2aeb(2): xor %edx,%edx
2aed(2): xor %edi,%edi
2aef(3): mov %rbp,%rsi
2af2(5): call 0x190e(%rip)
2af7(2): test %eax,%eax
2af9(6): mov 0x2195b1(%rip),%ebx
2aff(6): jns 0xfffff87e(%rip)
2b05(3): mov %rbp,%rsi
2b08(5): mov $0x4,%edi
2b0d(5): call 0x3483(%rip)
2b12(7): lea 0x13624(%rip),%rsi
2b19(5): mov $0x5,%edx
2b1e(2): xor %edi,%edi
2b20(3): mov %rax,%rbp
2b23(5): call 0xfffff0cd(%rip)
2b28(3): mov %rax,%rbx
2b2b(5): call 0xffffeff5(%rip)
2b30(2): mov (%rax),%esi
2b32(3): mov %rbp,%rcx
2b35(3): mov %rbx,%rdx
2b38(5): mov $0x1,%edi
2b3d(2): xor %eax,%eax
2b3f(5): call 0xfffff321(%rip)
2b44(4): cmp $0x58,%r13b
2b48(6): jz 0xfffffe87(%rip)
2b4e(4): cmp $0x64,%r13b
2b52(6): jz 0xa6(%rip)
2b58(3): test %r13b,%r13b
2b5b(6): jz 0x3c7(%rip)
2b61(5): call 0xfffff3ef(%rip)
2b66(3): mov (%rax),%rax
2b69(5): mov $0x5,%edx
2b6e(5): test $0x40,0x1(%rax,%rbp,2)
2b73(6): jz 0xa6(%rip)
2b79(7): lea 0x13d30(%rip),%rsi
2b80(2): xor %edi,%edi
2b82(5): call 0xfffff06e(%rip)
2b87(3): mov %r13d,%ecx
2b8a(3): mov %rax,%rdx
2b8d(2): xor %esi,%esi
2b8f(5): mov $0x1,%edi
2b94(2): xor %eax,%eax
2b96(5): call 0xfffff2ca(%rip)
2b9b(5): mov $0xa,%edx
2ba0(5): jmp 0xfffff79f(%rip)
2ba5(5): call 0x92b(%rip)
2baa(5): call 0x11c6(%rip)
2baf(5): call 0x6d1(%rip)
2bb4(2): xor %edi,%edi
2bb6(5): call 0xfffff10a(%rip)
2bbb(2): test %eax,%eax
2bbd(6): jnz 0x1e8(%rip)
2bc3(2): xor %eax,%eax
2bc5(8): mov 0xf8(%rsp),%rcx
2bcd(9): xor $0x28,%rcx
2bd6(6): jnz 0x1ca(%rip)
2bdc(7): add $0x108,%rsp
2be3(1): pop %rbx
2be4(1): pop %rbp
2be5(2): pop %r12
2be7(2): pop %r13
2be9(2): pop %r14
2beb(2): pop %r15
2bed(1): ret near (%rsp)
2bee(5): mov $0x1,%eax
2bf3(5): jmp 0xfffffde1(%rip)
2bf8(3): mov $0x75,(%rsi)
2bfb(5): mov $0x1,%eax
2c00(5): jmp 0xfffffdd4(%rip)
2c05(5): call 0x108b(%rip)
2c0a(5): jmp 0xfffffa87(%rip)
2c0f(5): call 0x671(%rip)
2c14(5): jmp 0xfffffe6b(%rip)
2c19(7): lea 0x13cc0(%rip),%rsi
2c20(2): xor %edi,%edi
2c22(5): call 0xffffefce(%rip)
2c27(3): mov %r13d,%ecx
2c2a(3): mov %rax,%rdx
2c2d(2): xor %esi,%esi
2c2f(5): mov $0x1,%edi
2c34(2): xor %eax,%eax
2c36(5): call 0xfffff22a(%rip)
2c3b(7): lea 0x13be6(%rip),%rsi
2c42(5): mov $0x5,%edx
2c47(2): xor %edi,%edi
2c49(5): call 0xffffefa7(%rip)
2c4e(2): xor %esi,%esi
2c50(3): mov %rax,%rdx
2c53(5): mov $0x1,%edi
2c58(2): xor %eax,%eax
2c5a(5): call 0xfffff206(%rip)
2c5f(4): mov 0x0(%rbp),%rbx
2c63(7): lea 0x13d56(%rip),%rsi
2c6a(5): mov $0x5,%edx
2c6f(2): xor %edi,%edi
2c71(5): call 0xffffef7f(%rip)
2c76(3): mov %rbx,%rcx
2c79(3): mov %rax,%rdx
2c7c(2): xor %esi,%esi
2c7e(5): mov $0x1,%edi
2c83(2): xor %eax,%eax
2c85(5): call 0xfffff1db(%rip)
2c8a(4): mov 0x0(%rbp),%rdi
2c8e(5): call 0x35d2(%rip)
2c93(7): lea 0x134be(%rip),%rsi
2c9a(3): mov %rax,%rbx
2c9d(5): mov $0x5,%edx
2ca2(2): xor %edi,%edi
2ca4(5): call 0xffffef4c(%rip)
2ca9(3): mov %rbx,%rcx
2cac(3): mov %rax,%rdx
2caf(2): xor %esi,%esi
2cb1(5): mov $0x1,%edi
2cb6(2): xor %eax,%eax
2cb8(5): call 0xfffff1a8(%rip)
2cbd(3): mov %rbp,%rdi
2cc0(5): call 0x35a0(%rip)
2cc5(7): lea 0x13ca4(%rip),%rsi
2ccc(3): mov %rax,%rbx
2ccf(5): mov $0x5,%edx
2cd4(2): xor %edi,%edi
2cd6(5): call 0xffffef1a(%rip)
2cdb(3): mov %r15,%r8
2cde(3): mov %rax,%rdx
2ce1(3): mov %rbx,%rcx
2ce4(2): xor %esi,%esi
2ce6(2): xor %edi,%edi
2ce8(2): xor %eax,%eax
2cea(5): call 0xfffff176(%rip)
2cef(5): call 0x531(%rip)
2cf4(7): lea 0x13c4d(%rip),%rsi
2cfb(5): mov $0x5,%edx
2d00(2): xor %edi,%edi
2d02(5): call 0xffffeeee(%rip)
2d07(3): mov %r14d,%r8d
2d0a(3): mov %rax,%rdx
2d0d(3): mov %rbp,%rcx
2d10(2): xor %esi,%esi
2d12(5): mov $0x1,%edi
2d17(2): xor %eax,%eax
2d19(5): call 0xfffff147(%rip)
2d1e(8): lea 0xe0(%rsp),%rsi
2d26(5): call 0x17da(%rip)
2d2b(4): mov 0x0(%rbp),%rdi
2d2f(3): mov %rax,%r12
2d32(5): call 0x352e(%rip)
2d37(7): lea 0x13cb2(%rip),%rsi
2d3e(3): mov %rax,%rbx
2d41(5): mov $0x5,%edx
2d46(2): xor %edi,%edi
2d48(5): call 0xffffeea8(%rip)
2d4d(3): mov %r12,%r8
2d50(3): mov %rax,%rdx
2d53(3): mov %rbx,%rcx
2d56(2): xor %esi,%esi
2d58(5): mov $0x1,%edi
2d5d(2): xor %eax,%eax
2d5f(5): call 0xfffff101(%rip)
2d64(4): cmp 0x8(%rsp),%eax
2d68(6): jl 0x1de(%rip)
2d6e(7): lea 0x1339f(%rip),%rsi
2d75(5): mov $0x5,%edx
2d7a(2): xor %edi,%edi
2d7c(5): call 0xffffee74(%rip)
2d81(2): xor %esi,%esi
2d83(3): mov %rax,%rdx
2d86(2): xor %edi,%edi
2d88(2): xor %eax,%eax
2d8a(5): call 0xfffff0d6(%rip)
2d8f(5): mov $0x1,%edi
2d94(5): call 0x117c(%rip)
2d99(2): xor %edi,%edi
2d9b(5): call 0x1175(%rip)
2da0(5): call 0xffffee80(%rip)
2da5(7): lea 0x13236(%rip),%rsi
2dac(5): mov $0x5,%edx
2db1(2): xor %edi,%edi
2db3(5): call 0xffffee3d(%rip)
2db8(3): mov %rax,%rbx
2dbb(5): call 0xffffed65(%rip)
2dc0(2): mov (%rax),%esi
2dc2(3): mov %rbx,%rdx
2dc5(2): xor %edi,%edi
2dc7(2): xor %eax,%eax
2dc9(5): call 0xfffff097(%rip)
2dce(5): call 0x452(%rip)
2dd3(3): and $0x2,%edi
2dd6(7): lea 0x13b33(%rip),%rsi
2ddd(5): mov $0x5,%edx
2de2(3): cmp $0x1,%edi
2de5(2): sbb %ebx,%ebx
2de7(2): xor %edi,%edi
2de9(3): and $0x4,%ebx
2dec(3): add $0x23,%ebx
2def(5): call 0xffffee01(%rip)
2df4(3): mov %r13d,%r8d
2df7(3): mov %rax,%rdx
2dfa(2): mov %ebx,%ecx
2dfc(2): xor %esi,%esi
2dfe(5): mov $0x1,%edi
2e03(2): xor %eax,%eax
2e05(5): call 0xfffff05b(%rip)
2e0a(7): lea 0x13cb7(%rip),%rsi
2e11(5): mov $0x5,%edx
2e16(2): xor %edi,%edi
2e18(5): call 0xffffedd8(%rip)
2e1d(2): xor %esi,%esi
2e1f(3): mov %rax,%rdx
2e22(2): xor %edi,%edi
2e24(2): xor %eax,%eax
2e26(5): call 0xfffff03a(%rip)
2e2b(5): call 0x3f5(%rip)
2e30(7): mov 0x219381(%rip),%rax
2e37(4): mov 0x0(%rax,%r15,1),%rdi
2e3b(5): call 0x3425(%rip)
2e40(7): lea 0x13c51(%rip),%rsi
2e47(3): mov %rax,%rbx
2e4a(5): mov $0x5,%edx
2e4f(2): xor %edi,%edi
2e51(5): call 0xffffed9f(%rip)
2e56(3): mov %rbx,%rcx
2e59(3): mov %rax,%rdx
2e5c(2): xor %esi,%esi
2e5e(5): mov $0x1,%edi
2e63(2): xor %eax,%eax
2e65(5): call 0xffffeffb(%rip)
2e6a(3): mov %rbp,%rdi
2e6d(5): call 0x33f3(%rip)
2e72(7): lea 0x13bf7(%rip),%rsi
2e79(3): mov %rax,%rbx
2e7c(5): mov $0x5,%edx
2e81(2): xor %edi,%edi
2e83(5): call 0xffffed6d(%rip)
2e88(3): mov %rbx,%rcx
2e8b(3): mov %rax,%rdx
2e8e(2): xor %esi,%esi
2e90(5): mov $0x1,%edi
2e95(2): xor %eax,%eax
2e97(5): call 0xffffefc9(%rip)
2e9c(4): movzx %r12b,%edx
2ea0(3): mov %r14,%rsi
2ea3(3): mov %rbx,%rdi
2ea6(5): call 0xfffff0da(%rip)
2eab(7): lea 0x139a6(%rip),%rsi
2eb2(5): mov $0x5,%edx
2eb7(2): xor %edi,%edi
2eb9(5): call 0xffffed37(%rip)
2ebe(2): xor %esi,%esi
2ec0(3): mov %rax,%rdx
2ec3(5): mov $0x1,%edi
2ec8(2): xor %eax,%eax
2eca(5): call 0xffffef96(%rip)
2ecf(5): movsxd 0x18(%rsp),%rax
2ed4(7): mov 0x2192dd(%rip),%rdx
2edb(4): mov 0x0(%rdx,%rax,8),%rdi
2edf(5): call 0x3381(%rip)
2ee4(7): lea 0x13281(%rip),%rsi
2eeb(3): mov %rax,%rbx
2eee(5): mov $0x5,%edx
2ef3(2): xor %edi,%edi
2ef5(5): call 0xffffecfb(%rip)
2efa(3): mov %rbx,%rcx
2efd(3): mov %rax,%rdx
2f00(2): xor %esi,%esi
2f02(2): xor %edi,%edi
2f04(2): xor %eax,%eax
2f06(5): call 0xffffef5a(%rip)
2f0b(5): call 0x315(%rip)
2f10(5): movsxd 0x18(%rsp),%rdx
2f15(7): mov 0x21929c(%rip),%rax
2f1c(4): mov 0x0(%rax,%rdx,8),%rdi
2f20(2): jmp 0xffffffbf(%rip)
2f22(7): lea 0x1395f(%rip),%rsi
2f29(5): mov $0x5,%edx
2f2e(2): xor %edi,%edi
2f30(5): call 0xffffecc0(%rip)
2f35(2): xor %esi,%esi
2f37(3): mov %rax,%rdx
2f3a(5): mov $0x1,%edi
2f3f(2): xor %eax,%eax
2f41(5): call 0xffffef1f(%rip)
2f46(5): movsxd 0x8(%rsp),%r14
2f4b(5): mov 0xfffffff8(%r12,%r14,8),%rdi
2f50(5): call 0x3310(%rip)
2f55(7): lea 0x131c8(%rip),%rsi
2f5c(3): mov %rax,%rbx
2f5f(2): xor %edi,%edi
2f61(5): mov $0x5,%edx
2f66(5): call 0xffffec8a(%rip)
2f6b(3): mov %rbx,%rcx
2f6e(3): mov %rax,%rdx
2f71(2): xor %esi,%esi
2f73(2): xor %edi,%edi
2f75(2): xor %eax,%eax
2f77(5): call 0xffffeee9(%rip)
2f7c(5): jmp 0xfffffe13(%rip)

"_start" :
2f90(2): xor %ebp,%ebp
2f92(3): mov %rdx,%r9
2f95(1): pop %rsi
2f96(3): mov %rsp,%rdx
2f99(4): and $0xfffffff0,%rsp
2f9d(1): push %rax
2f9e(1): push %rsp
2f9f(7): lea 0x12fba(%rip),%r8
2fa6(7): lea 0x12f43(%rip),%rcx
2fad(7): lea 0xfffff0ac(%rip),%rdi
2fb4(6): call 0x219026(%rip)
2fba(1): hlt 

"deregister_tm_clones" :
2fc0(7): lea 0x2190d9(%rip),%rdi
2fc7(1): push %rbp
2fc8(7): lea 0x2190d1(%rip),%rax
2fcf(3): cmp %rdi,%rax
2fd2(3): mov %rsp,%rbp
2fd5(2): jz 0x1b(%rip)
2fd7(7): mov 0x218ffa(%rip),%rax
2fde(3): test %rax,%rax
2fe1(2): jz 0xf(%rip)
2fe3(1): pop %rbp
2fe4(2): jmp %rax
2fe6(a): nop 0x0(%rax,%rax,1)
2ff0(1): pop %rbp
2ff1(1): ret near (%rsp)

"register_tm_clones" :
3000(7): lea 0x219099(%rip),%rdi
3007(7): lea 0x219092(%rip),%rsi
300e(1): push %rbp
300f(3): sub %rdi,%rsi
3012(3): mov %rsp,%rbp
3015(4): sar $0x3,%rsi
3019(3): mov %rsi,%rax
301c(4): shr $0x3f,%rax
3020(3): add %rax,%rsi
3023(3): sar $0x1,%rsi
3026(2): jz 0x1a(%rip)
3028(7): mov 0x218fc1(%rip),%rax
302f(3): test %rax,%rax
3032(2): jz 0xe(%rip)
3034(1): pop %rbp
3035(2): jmp %rax
3037(9): nop 0x0(%rax,%rax,1)
3040(1): pop %rbp
3041(1): ret near (%rsp)

"__do_global_dtors_aux" :
3050(7): cmp $0x0,0x219091(%rip)
3057(2): jnz 0x31(%rip)
3059(8): cmp $0x0,0x218f97(%rip)
3061(1): push %rbp
3062(3): mov %rsp,%rbp
3065(2): jz 0xe(%rip)
3067(7): mov 0x218f9a(%rip),%rdi
306e(5): call 0xffffef02(%rip)
3073(5): call 0xffffff4d(%rip)
3078(7): mov $0x1,0x219069(%rip)
307f(1): pop %rbp
3080(1): ret near (%rsp)
3081(7): nop 0x0(%rax)
3088(2): REP ret near (%rsp)

"frame_dummy" :
3090(1): push %rbp
3091(3): mov %rsp,%rbp
3094(1): pop %rbp
3095(5): jmp 0xffffff6b(%rip)

"make_filename" :
30a0(2): push %r12
30a2(7): mov 0x21913f(%rip),%rsi
30a9(1): push %rbp
30aa(2): mov %edi,%ebp
30ac(7): mov 0x21913d(%rip),%rdi
30b3(1): push %rbx
30b4(5): call 0xffffeaac(%rip)
30b9(7): mov 0x219120(%rip),%rax
30c0(3): test %rax,%rax
30c3(2): jz 0x4d(%rip)
30c5(7): mov 0x219114(%rip),%r12
30cc(7): mov 0x21911d(%rip),%rbx
30d3(7): mov 0x21910e(%rip),%rdi
30da(5): call 0xffffeb36(%rip)
30df(4): lea 0x0(%rbx,%rax,1),%rdi
30e3(3): mov %ebp,%r8d
30e6(3): mov %r12,%rcx
30e9(7): mov $0xffffffff,%rdx
30f0(5): mov $0x1,%esi
30f5(2): xor %eax,%eax
30f7(5): call 0xffffee69(%rip)
30fc(1): pop %rbx
30fd(7): mov 0x2190ec(%rip),%rax
3104(1): pop %rbp
3105(2): pop %r12
3107(1): ret near (%rsp)
3108(8): nop 0x0(%rax,%rax,1)
3110(7): mov 0x218ef9(%rip),%r12d
3117(7): mov 0x2190d2(%rip),%rbx
311e(7): mov 0x2190c3(%rip),%rdi
3125(5): call 0xffffeaeb(%rip)
312a(7): lea 0x12e73(%rip),%rcx
3131(4): lea 0x0(%rbx,%rax,1),%rdi
3135(3): mov %ebp,%r9d
3138(3): mov %r12d,%r8d
313b(7): mov $0xffffffff,%rdx
3142(5): mov $0x1,%esi
3147(2): xor %eax,%eax
3149(5): call 0xffffee17(%rip)
314e(1): pop %rbx
314f(7): mov 0x21909a(%rip),%rax
3156(1): pop %rbp
3157(2): pop %r12
3159(1): ret near (%rsp)

"delete_all_files.part.0" :
3160(6): mov 0x219072(%rip),%eax
3166(2): test %eax,%eax
3168(6): jz 0xa0(%rip)
316e(2): push %r13
3170(2): push %r12
3172(7): lea 0x139e8(%rip),%r13
3179(1): push %rbp
317a(1): push %rbx
317b(3): mov %edi,%r12d
317e(2): xor %ebx,%ebx
3180(4): sub $0x8,%rsp
3184(2): jmp 0x19(%rip)
3186(a): nop 0x0(%rax,%rax,1)
3190(6): mov 0x219042(%rip),%eax
3196(3): add $0x1,%ebx
3199(2): cmp %eax,%ebx
319b(2): jnb 0x52(%rip)
319d(2): mov %ebx,%edi
319f(5): call 0xffffff01(%rip)
31a4(3): mov %rax,%rdi
31a7(3): mov %rax,%rbp
31aa(5): call 0xffffe986(%rip)
31af(2): test %eax,%eax
31b1(2): jz 0xffffffdf(%rip)
31b3(3): test %r12b,%r12b
31b6(2): jnz 0xffffffda(%rip)
31b8(3): mov %rbp,%rdx
31bb(2): xor %edi,%edi
31bd(5): mov $0x3,%esi
31c2(5): call 0x2ece(%rip)
31c7(3): mov %rax,%rbp
31ca(3): add $0x1,%ebx
31cd(5): call 0xffffe953(%rip)
31d2(2): mov (%rax),%esi
31d4(2): xor %edi,%edi
31d6(2): xor %eax,%eax
31d8(3): mov %rbp,%rcx
31db(3): mov %r13,%rdx
31de(5): call 0xffffec82(%rip)
31e3(6): mov 0x218fef(%rip),%eax
31e9(2): cmp %eax,%ebx
31eb(2): jb 0xffffffb2(%rip)
31ed(a): mov $0x0,0x218fe1(%rip)
31f7(4): add $0x8,%rsp
31fb(1): pop %rbx
31fc(1): pop %rbp
31fd(2): pop %r12
31ff(2): pop %r13
3201(1): ret near (%rsp)
3202(6): nop 0x0(%rax,%rax,1)
3208(a): mov $0x0,0x218fc6(%rip)
3212(1): ret near (%rsp)

"cleanup_fatal" :
3220(1): push %rbx
3221(7): sub $0x90,%rsp
3228(9): mov $0x28,%rax
3231(8): mov %rax,0x88(%rsp)
3239(2): xor %eax,%eax
323b(3): mov %rsp,%rbx
323e(5): call 0x42(%rip)
3243(7): lea 0x218ed6(%rip),%rsi
324a(2): xor %edi,%edi
324c(3): mov %rbx,%rdx
324f(5): call 0xffffe881(%rip)
3254(7): movzx 0x218f57(%rip),%eax
325b(2): test %al,%al
325d(2): jz 0x9(%rip)
325f(2): xor %edi,%edi
3261(5): call 0xfffffeff(%rip)
3266(5): mov $0x2,%edi
326b(2): xor %edx,%edx
326d(3): mov %rbx,%rsi
3270(5): call 0xffffe860(%rip)
3275(5): mov $0x1,%edi
327a(5): call 0xffffec66(%rip)

"close_output_file" :
3280(2): push %r13
3282(2): push %r12
3284(1): push %rbp
3285(1): push %rbx
3286(7): sub $0xa8,%rsp
328d(7): mov 0x218f34(%rip),%rdi
3294(9): mov $0x28,%rax
329d(8): mov %rax,0x98(%rsp)
32a5(2): xor %eax,%eax
32a7(3): test %rdi,%rdi
32aa(2): jz 0x41(%rip)
32ac(3): test $0x20,(%rdi)
32af(6): jnz 0x157(%rip)
32b5(5): call 0x44db(%rip)
32ba(2): test %eax,%eax
32bc(6): jnz 0x10a(%rip)
32c2(7): mov 0x218f07(%rip),%rdi
32c9(3): test %rdi,%rdi
32cc(2): jnz 0xb(%rip)
32ce(7): cmp $0x0,0x218edc(%rip)
32d5(2): jnz 0x6b(%rip)
32d7(7): cmp $0x0,0x218ed5(%rip)
32de(2): jz 0x32(%rip)
32e0(b): mov $0x0,0x218edd(%rip)
32eb(8): mov 0x98(%rsp),%rax
32f3(9): xor $0x28,%rax
32fc(6): jnz 0xc5(%rip)
3302(7): add $0xa8,%rsp
3309(1): pop %rbx
330a(1): pop %rbp
330b(2): pop %r12
330d(2): pop %r13
330f(1): ret near (%rsp)
3310(8): lea 0x80(%rsp),%rsi
3318(5): call 0x11e8(%rip)
331d(7): mov 0x218d84(%rip),%rdi
3324(7): lea 0x13d65(%rip),%rdx
332b(3): mov %rax,%rcx
332e(5): mov $0x1,%esi
3333(2): xor %eax,%eax
3335(5): call 0xffffebcb(%rip)
333a(2): jmp 0xffffffa6(%rip)
333c(4): nop 0x0(%rax)
3340(7): lea 0x218dd9(%rip),%rsi
3347(3): mov %rsp,%rbp
334a(3): mov %rbp,%rdx
334d(5): call 0xffffe783(%rip)
3352(7): mov 0x218e67(%rip),%r12
3359(3): mov %r12,%rdi
335c(5): call 0xffffe7d4(%rip)
3361(2): mov %eax,%ebx
3363(5): call 0xffffe7bd(%rip)
3368(3): mov (%rax),%r13d
336b(6): mov 0x218e67(%rip),%eax
3371(2): xor %edx,%edx
3373(2): test %ebx,%ebx
3375(3): mov %rbp,%rsi
3378(5): mov $0x2,%edi
337d(3): setz %dl
3380(2): sub %edx,%eax
3382(2): xor %edx,%edx
3384(6): mov %eax,0x218e4e(%rip)
338a(5): call 0xffffe746(%rip)
338f(2): test %ebx,%ebx
3391(6): jz 0xffffff4f(%rip)
3397(3): mov %r12,%rdx
339a(2): xor %edi,%edi
339c(5): mov $0x3,%esi
33a1(5): call 0x2cef(%rip)
33a6(7): lea 0x137b4(%rip),%rdx
33ad(3): mov %rax,%rcx
33b0(3): mov %r13d,%esi
33b3(2): xor %edi,%edi
33b5(2): xor %eax,%eax
33b7(5): call 0xffffeaa9(%rip)
33bc(5): jmp 0xffffff24(%rip)
33c1(5): call 0xffffe85f(%rip)
33c6(7): mov 0x218df3(%rip),%rdx
33cd(5): mov $0x3,%esi
33d2(2): xor %edi,%edi
33d4(5): call 0x2cbc(%rip)
33d9(3): mov %rax,%rbx
33dc(5): call 0xffffe744(%rip)
33e1(2): mov (%rax),%esi
33e3(7): lea 0x13777(%rip),%rdx
33ea(3): mov %rbx,%rcx
33ed(2): xor %edi,%edi
33ef(2): xor %eax,%eax
33f1(5): call 0xffffea6f(%rip)
33f6(b): mov $0x0,0x218dc7(%rip)
3401(5): call 0xfffffe1f(%rip)
3406(7): mov 0x218db3(%rip),%rsi
340d(5): mov $0x4,%edi
3412(5): call 0x2b7e(%rip)
3417(7): lea 0x12b8b(%rip),%rsi
341e(3): mov %rax,%rbx
3421(5): mov $0x5,%edx
3426(2): xor %edi,%edi
3428(5): call 0xffffe7c8(%rip)
342d(3): mov %rbx,%rcx
3430(3): mov %rax,%rdx
3433(2): xor %esi,%esi
3435(2): jmp 0xffffffb8(%rip)

"save_line_to_file" :
3440(1): push %rbp
3441(1): push %rbx
3442(3): mov %rdi,%rbx
3445(5): mov $0x1,%esi
344a(4): sub $0x8,%rsp
344e(3): mov (%rbx),%rdx
3451(4): mov 0x8(%rdi),%rdi
3455(7): mov 0x218d6c(%rip),%rcx
345c(5): call 0xffffe994(%rip)
3461(3): mov (%rbx),%rdx
3464(3): cmp %rax,%rdx
3467(2): jnz 0x10(%rip)
3469(7): add %rdx,0x218d60(%rip)
3470(4): add $0x8,%rsp
3474(1): pop %rbx
3475(1): pop %rbp
3476(1): ret near (%rsp)
3477(7): mov 0x218d42(%rip),%rsi
347e(5): mov $0x4,%edi
3483(5): call 0x2b0d(%rip)
3488(7): lea 0x12b1a(%rip),%rsi
348f(5): mov $0x5,%edx
3494(2): xor %edi,%edi
3496(3): mov %rax,%rbp
3499(5): call 0xffffe757(%rip)
349e(3): mov %rax,%rbx
34a1(5): call 0xffffe67f(%rip)
34a6(2): mov (%rax),%esi
34a8(3): mov %rbp,%rcx
34ab(3): mov %rbx,%rdx
34ae(2): xor %edi,%edi
34b0(2): xor %eax,%eax
34b2(5): call 0xffffe9ae(%rip)
34b7(b): mov $0x0,0x218d06(%rip)
34c2(5): call 0xfffffd5e(%rip)

"create_output_file" :
34d0(2): push %r12
34d2(1): push %rbp
34d3(5): mov $0x4b,%ebp
34d8(1): push %rbx
34d9(7): sub $0x90,%rsp
34e0(9): mov $0x28,%rax
34e9(8): mov %rax,0x88(%rsp)
34f1(2): xor %eax,%eax
34f3(6): mov 0x218cdf(%rip),%edi
34f9(5): call 0xfffffba7(%rip)
34fe(3): mov %rax,%rbx
3501(7): mov %rax,0x218cb8(%rip)
3508(6): mov 0x218cca(%rip),%eax
350e(3): cmp $0xff,%eax
3511(2): jnz 0x2f(%rip)
3513(3): mov %rbx,%rdx
3516(5): mov $0x3,%esi
351b(2): xor %edi,%edi
351d(5): call 0x2b73(%rip)
3522(7): lea 0x13638(%rip),%rdx
3529(3): mov %rax,%rcx
352c(2): mov %ebp,%esi
352e(2): xor %edi,%edi
3530(2): xor %eax,%eax
3532(5): call 0xffffe92e(%rip)
3537(5): call 0xfffffce9(%rip)
353c(4): nop 0x0(%rax)
3540(3): mov %rsp,%r12
3543(7): lea 0x218bd6(%rip),%rsi
354a(2): xor %edi,%edi
354c(3): mov %r12,%rdx
354f(5): call 0xffffe581(%rip)
3554(7): lea 0x12a61(%rip),%rsi
355b(3): mov %rbx,%rdi
355e(5): call 0xf02(%rip)
3563(3): mov %rax,%rbx
3566(7): mov %rax,0x218c5b(%rip)
356d(5): call 0xffffe5b3(%rip)
3572(6): mov 0x218c60(%rip),%edx
3578(2): mov (%rax),%ebp
357a(2): xor %eax,%eax
357c(3): test %rbx,%rbx
357f(3): mov %r12,%rsi
3582(5): mov $0x2,%edi
3587(3): setnz %al
358a(2): add %edx,%eax
358c(2): xor %edx,%edx
358e(6): mov %eax,0x218c44(%rip)
3594(5): call 0xffffe53c(%rip)
3599(3): test %rbx,%rbx
359c(2): jz 0x31(%rip)
359e(8): mov 0x88(%rsp),%rax
35a6(9): xor $0x28,%rax
35af(b): mov $0x0,0x218c16(%rip)
35ba(2): jnz 0xe(%rip)
35bc(7): add $0x90,%rsp
35c3(1): pop %rbx
35c4(1): pop %rbp
35c5(2): pop %r12
35c7(1): ret near (%rsp)
35c8(5): call 0xffffe658(%rip)
35cd(7): mov 0x218bec(%rip),%rbx
35d4(5): jmp 0xffffff3f(%rip)

"interrupt_handler" :
35e0(7): movzx 0x218bcb(%rip),%eax
35e7(1): push %rbx
35e8(2): mov %edi,%ebx
35ea(2): test %al,%al
35ec(2): jz 0xc(%rip)
35ee(5): mov $0x1,%edi
35f3(5): call 0xfffffb6d(%rip)
35f8(2): mov %ebx,%edi
35fa(2): xor %esi,%esi
35fc(5): call 0xffffe754(%rip)
3601(2): mov %ebx,%edi
3603(1): pop %rbx
3604(5): jmp 0xffffe4ec(%rip)

"handle_line_error.isra.1" :
3610(2): push %r13
3612(2): push %r12
3614(1): push %rbp
3615(1): push %rbx
3616(3): mov %rsi,%rbx
3619(4): sub $0x28,%rsp
361d(3): mov %rsp,%rbp
3620(3): mov %rbp,%rsi
3623(9): mov $0x28,%rax
362c(5): mov %rax,0x18(%rsp)
3631(2): xor %eax,%eax
3633(5): call 0xecd(%rip)
3638(3): mov %rax,%rdi
363b(5): call 0x2c25(%rip)
3640(7): lea 0x12ba9(%rip),%rsi
3647(2): xor %edi,%edi
3649(7): mov 0x218be8(%rip),%r12
3650(5): mov $0x5,%edx
3655(3): mov %rax,%r13
3658(5): call 0xffffe598(%rip)
365d(7): mov 0x218a7c(%rip),%rdi
3664(3): mov %rax,%rdx
3667(3): mov %r13,%r8
366a(2): xor %eax,%eax
366c(3): mov %r12,%rcx
366f(5): mov $0x1,%esi
3674(5): call 0xffffe88c(%rip)
3679(3): test %rbx,%rbx
367c(2): jz 0x41(%rip)
367e(3): mov %rbx,%rdi
3681(3): mov %rbp,%rsi
3684(5): call 0xe7c(%rip)
3689(7): lea 0x1292e(%rip),%rsi
3690(5): mov $0x5,%edx
3695(2): xor %edi,%edi
3697(3): mov %rax,%rbx
369a(5): call 0xffffe556(%rip)
369f(7): mov 0x218a3a(%rip),%rdi
36a6(3): mov %rax,%rdx
36a9(3): mov %rbx,%rcx
36ac(5): mov $0x1,%esi
36b1(2): xor %eax,%eax
36b3(5): call 0xffffe84d(%rip)
36b8(5): call 0xfffffb68(%rip)
36bd(7): mov 0x218a1c(%rip),%rsi
36c4(5): mov $0xa,%edi
36c9(5): call 0xffffe607(%rip)
36ce(2): jmp 0xffffffea(%rip)

"keep_new_line.isra.2" :
36d0(2): push %r13
36d2(2): push %r12
36d4(3): mov %rdx,%r13
36d7(1): push %rbp
36d8(1): push %rbx
36d9(3): mov %rsi,%rbp
36dc(3): mov %rcx,%r12
36df(4): sub $0x8,%rsp
36e3(4): cmp $0x0,(%rdi)
36e7(6): jz 0x99(%rip)
36ed(4): mov 0x0(%rbp),%rbx
36f1(3): mov (%rbx),%rax
36f4(4): cmp $0x50,%rax
36f8(2): jz 0x38(%rip)
36fa(4): mov 0x8(%rbx),%rsi
36fe(4): add $0x1,%rax
3702(3): mov %rsi,%rdi
3705(4): add $0x1,%rsi
3709(4): shl/sal $0x4,%rdi
370d(3): add %rbx,%rdi
3710(4): mov %r13,0x20(%rdi)
3714(4): mov %r12,0x18(%rdi)
3718(3): mov %rax,(%rbx)
371b(4): mov %rsi,0x8(%rbx)
371f(4): add $0x8,%rsp
3723(1): pop %rbx
3724(1): pop %rbp
3725(2): pop %r12
3727(2): pop %r13
3729(1): ret near (%rsp)
372a(6): nop 0x0(%rax,%rax,1)
3730(5): mov $0x520,%edi
3735(5): call 0x31db(%rip)
373a(b): mov $0x0,0x518(%rax)
3745(7): mov $0x0,(%rax)
374c(8): mov $0x0,0x8(%rax)
3754(8): mov $0x0,0x10(%rax)
375c(7): mov %rax,0x518(%rbx)
3763(4): mov 0x0(%rbp),%rax
3767(7): mov 0x518(%rax),%rbx
376e(4): mov %rbx,0x0(%rbp)
3772(3): mov (%rbx),%rax
3775(5): jmp 0xffffff85(%rip)
377a(6): nop 0x0(%rax,%rax,1)
3780(3): mov %rdi,%rbx
3783(5): mov $0x520,%edi
3788(5): call 0x3188(%rip)
378d(4): mov %rax,0x0(%rbp)
3791(b): mov $0x0,0x518(%rax)
379c(7): mov $0x0,(%rax)
37a3(8): mov $0x0,0x8(%rax)
37ab(8): mov $0x0,0x10(%rax)
37b3(3): mov %rax,(%rbx)
37b6(5): jmp 0xffffff37(%rip)

"free_buffer.isra.4" :
37c0(2): push %r12
37c2(1): push %rbp
37c3(3): mov %rdi,%rbp
37c6(3): mov (%rsi),%rdi
37c9(1): push %rbx
37ca(3): mov %rsi,%r12
37cd(3): test %rdi,%rdi
37d0(2): jz 0x1c(%rip)
37d2(6): nop 0x0(%rax,%rax,1)
37d8(7): mov 0x518(%rdi),%rbx
37df(5): call 0xffffe321(%rip)
37e4(3): test %rbx,%rbx
37e7(3): mov %rbx,%rdi
37ea(2): jnz 0xffffffee(%rip)
37ec(4): mov 0x0(%rbp),%rdi
37f0(8): mov $0x0,(%r12)
37f8(5): call 0xffffe308(%rip)
37fd(8): mov $0x0,0x0(%rbp)
3805(1): pop %rbx
3806(1): pop %rbp
3807(2): pop %r12
3809(1): ret near (%rsp)

"xalloc_die" :
3810(7): lea 0x127ba(%rip),%rsi
3817(4): sub $0x8,%rsp
381b(5): mov $0x5,%edx
3820(2): xor %edi,%edi
3822(5): call 0xffffe3ce(%rip)
3827(7): lea 0x13333(%rip),%rdx
382e(3): mov %rax,%rcx
3831(2): xor %esi,%esi
3833(2): xor %edi,%edi
3835(2): xor %eax,%eax
3837(5): call 0xffffe629(%rip)
383c(5): call 0xfffff9e4(%rip)

"new_control_record" :
3850(4): sub $0x8,%rsp
3854(7): mov 0x218945(%rip),%rcx
385b(7): cmp 0x2188a6(%rip),%rcx
3862(7): mov 0x21893f(%rip),%rdi
3869(2): jz 0x3f(%rip)
386b(4): lea 0x1(%rcx),%rax
386f(7): mov %rax,0x21892a(%rip)
3876(4): lea 0x0(%rcx,%rcx,2),%rax
387a(4): shl/sal $0x5,%rax
387e(3): add %rdi,%rax
3881(4): mov $0x0,0x1e(%rax)
3885(8): mov $0x0,0x10(%rax)
388d(4): mov $0x0,0x1c(%rax)
3891(8): mov $0x0,0x8(%rax)
3899(7): mov $0x0,(%rax)
38a0(4): add $0x8,%rsp
38a4(1): ret near (%rsp)
38a5(3): nop (%rax)
38a8(3): test %rdi,%rdi
38ab(2): jz 0x4d(%rip)
38ad(a): mov $0x64051194700380386,%rax
38b7(3): cmp %rax,%rcx
38ba(2): jnbe 0x63(%rip)
38bc(3): mov %rcx,%rax
38bf(3): shr $0x1,%rax
38c2(5): lea 0x1(%rcx,%rax,1),%rcx
38c7(4): lea 0x0(%rcx,%rcx,2),%rsi
38cb(7): mov %rcx,0x218836(%rip)
38d2(4): shl/sal $0x5,%rsi
38d6(5): call 0x309a(%rip)
38db(7): mov 0x2188be(%rip),%rcx
38e2(3): mov %rax,%rdi
38e5(7): mov %rax,0x2188bc(%rip)
38ec(5): jmp 0xffffff7f(%rip)
38f1(7): nop 0x0(%rax)
38f8(3): test %rcx,%rcx
38fb(5): mov $0x1,%eax
3900(5): mov $0x60,%edx
3905(4): cmove %rax,%rcx
3909(3): mov %rdx,%rax
390c(2): xor %esi,%esi
390e(3): mul %rax,%rcx,%rdx
3911(2): jo 0x11(%rip)
3913(3): test %rax,%rax
3916(2): js 0x7(%rip)
3918(3): test %rsi,%rsi
391b(2): jz 0xffffffac(%rip)
391d(5): call 0xfffffef3(%rip)
3922(5): mov $0x1,%esi
3927(2): jmp 0xffffffec(%rip)

"load_buffer.part.5" :
3930(2): push %r15
3932(2): push %r14
3934(5): mov $0x1fff,%ecx
3939(2): push %r13
393b(2): push %r12
393d(1): push %rbp
393e(1): push %rbx
393f(4): sub $0x18,%rsp
3943(b): cmp $0x1fff,0x2188c2(%rip)
394e(8): cmovnb 0x2188ba(%rip),%rcx
3956(3): mov %rcx,%rbp
3959(7): cmp $0x1fff,%rbp
3960(6): jbe 0x1cc(%rip)
3966(a): nop 0x0(%rax,%rax,1)
3970(7): sub $0x1800,%rbp
3977(7): and $0xfffff800,%rbp
397e(7): lea 0x1fff(%rbp),%r13
3985(7): add $0x2000,%rbp
398c(5): mov $0x48,%edi
3991(5): call 0x2f7f(%rip)
3996(3): mov %rbp,%rdi
3999(3): mov %rax,%rbx
399c(5): call 0x2f74(%rip)
39a1(7): mov 0x218868(%rip),%rbp
39a8(3): mov %rax,%r12
39ab(4): mov %rax,0x28(%rbx)
39af(7): mov 0x218852(%rip),%rax
39b6(3): mov %r13,(%rbx)
39b9(8): mov $0x0,0x38(%rbx)
39c1(8): mov $0x0,0x30(%rbx)
39c9(8): mov $0x0,0x20(%rbx)
39d1(8): mov $0x0,0x8(%rbx)
39d9(4): add $0x1,%rax
39dd(3): test %rbp,%rbp
39e0(8): mov $0x0,0x40(%rbx)
39e8(4): mov %rax,0x18(%rbx)
39ec(4): mov %rax,0x10(%rbx)
39f0(6): jnz 0x150(%rip)
39f6(2): xor %edi,%edi
39f8(3): mov %r13,%rdx
39fb(3): mov %r12,%rsi
39fe(5): call 0x2882(%rip)
3a03(3): test %rax,%rax
3a06(6): jnz 0x172(%rip)
3a0c(7): mov $0x1,0x2187e5(%rip)
3a13(4): add 0x8(%rbx),%rax
3a17(3): test %rax,%rax
3a1a(3): mov %rax,%rbp
3a1d(4): mov %rax,0x8(%rbx)
3a21(6): jz 0xb3(%rip)
3a27(4): mov 0x28(%rbx),%r12
3a2b(4): lea 0x38(%rbx),%rax
3a2f(3): xor %r14d,%r14d
3a32(5): mov %rax,0x8(%rsp)
3a37(2): jmp 0x32(%rip)
3a39(7): nop 0x0(%rax)
3a40(3): mov %rax,%r13
3a43(5): mov 0x8(%rsp),%rsi
3a48(3): mov %r12,%rdx
3a4b(3): sub %r12,%r13
3a4e(4): lea 0x30(%rbx),%rdi
3a52(4): lea 0x1(%r15),%r12
3a56(4): add $0x1,%r13
3a5a(4): add $0x1,%r14
3a5e(3): mov %r13,%rcx
3a61(3): sub %r13,%rbp
3a64(5): call 0xfffffc6c(%rip)
3a69(3): mov %rbp,%rdx
3a6c(5): mov $0xa,%esi
3a71(3): mov %r12,%rdi
3a74(5): call 0xffffe26c(%rip)
3a79(3): test %rax,%rax
3a7c(3): mov %rax,%r15
3a7f(2): jnz 0xffffffc1(%rip)
3a81(3): test %rbp,%rbp
3a84(2): jz 0x26(%rip)
3a86(7): cmp $0x0,0x21876b(%rip)
3a8d(6): jz 0x173(%rip)
3a93(4): lea 0x38(%rbx),%rsi
3a97(4): lea 0x30(%rbx),%rdi
3a9b(3): mov %rbp,%rcx
3a9e(3): mov %r12,%rdx
3aa1(4): add $0x1,%r14
3aa5(5): call 0xfffffc2b(%rip)
3aaa(7): mov 0x218757(%rip),%rax
3ab1(4): mov %r14,0x20(%rbx)
3ab5(4): lea 0x1(%rax),%rdx
3ab9(3): add %r14,%rax
3abc(3): test %r14,%r14
3abf(7): mov %rax,0x218742(%rip)
3ac6(4): mov %rdx,0x10(%rbx)
3aca(4): mov %rdx,0x18(%rbx)
3ace(6): jnz 0xe2(%rip)
3ad4(7): cmp $0x0,0x21871d(%rip)
3adb(6): jnz 0x155(%rip)
3ae1(3): mov (%rbx),%rcx
3ae4(5): mov $0x2,%eax
3ae9(2): xor %esi,%esi
3aeb(3): mul %rax,%rcx,%rdx
3aee(6): jo 0x18d(%rip)
3af4(3): test %rax,%rax
3af7(6): js 0x18e(%rip)
3afd(3): test %rsi,%rsi
3b00(6): jnz 0x185(%rip)
3b06(4): lea 0x30(%rbx),%rsi
3b0a(4): lea 0x28(%rbx),%rdi
3b0e(4): lea 0x0(%rcx,%rcx,1),%rbp
3b12(5): call 0xfffffcae(%rip)
3b17(3): mov %rbx,%rdi
3b1a(5): call 0xffffdfe6(%rip)
3b1f(7): cmp $0x1fff,%rbp
3b26(6): jnbe 0xfffffe4a(%rip)
3b2c(5): mov $0x2000,%ebp
3b31(6): mov $0x1fff,%r13d
3b37(5): jmp 0xfffffe55(%rip)
3b3c(4): nop 0x0(%rax)
3b40(7): mov 0x2186d1(%rip),%rsi
3b47(3): mov %rbp,%rdx
3b4a(3): mov %r12,%rdi
3b4d(5): call 0xffffe223(%rip)
3b52(3): sub %rbp,%r13
3b55(4): mov %rbp,0x8(%rbx)
3b59(b): mov $0x0,0x2186ac(%rip)
3b64(6): jz 0xfffffec7(%rip)
3b6a(3): add %rbp,%r12
3b6d(5): jmp 0xfffffe89(%rip)
3b72(6): nop 0x0(%rax,%rax,1)
3b78(4): cmp $0xffffffff,%rax
3b7c(6): jnz 0xfffffe97(%rip)
3b82(7): lea 0x12459(%rip),%rsi
3b89(5): mov $0x5,%edx
3b8e(2): xor %edi,%edi
3b90(5): call 0xffffe060(%rip)
3b95(3): mov %rax,%rbx
3b98(5): call 0xffffdf88(%rip)
3b9d(2): mov (%rax),%esi
3b9f(3): mov %rbx,%rdx
3ba2(2): xor %edi,%edi
3ba4(2): xor %eax,%eax
3ba6(5): call 0xffffe2ba(%rip)
3bab(5): call 0xfffff675(%rip)
3bb0(4): mov 0x30(%rbx),%rax
3bb4(8): mov $0x0,0x40(%rbx)
3bbc(4): mov %rax,0x38(%rbx)
3bc0(7): mov 0x218659(%rip),%rax
3bc7(3): test %rax,%rax
3bca(2): jnz 0x11(%rip)
3bcc(5): jmp 0x94(%rip)
3bd1(7): nop 0x0(%rax)
3bd8(3): mov %rdx,%rax
3bdb(4): mov 0x40(%rax),%rdx
3bdf(3): test %rdx,%rdx
3be2(2): jnz 0xfffffff6(%rip)
3be4(4): mov %rbx,0x40(%rax)
3be8(4): add $0x18,%rsp
3bec(5): mov $0x1,%eax
3bf1(1): pop %rbx
3bf2(1): pop %rbp
3bf3(2): pop %r12
3bf5(2): pop %r13
3bf7(2): pop %r14
3bf9(2): pop %r15
3bfb(1): ret near (%rsp)
3bfc(4): nop 0x0(%rax)
3c00(3): mov %r12,%rdi
3c03(3): mov %rbp,%rsi
3c06(5): call 0x2f0a(%rip)
3c0b(7): mov 0x218606(%rip),%rdi
3c12(3): mov %rax,%r12
3c15(5): call 0xffffdeeb(%rip)
3c1a(7): mov %r12,0x2185f7(%rip)
3c21(7): mov %rbp,0x2185e8(%rip)
3c28(5): jmp 0xfffffe82(%rip)
3c2d(3): nop (%rax)
3c30(4): lea 0x30(%rbx),%rsi
3c34(4): lea 0x28(%rbx),%rdi
3c38(5): call 0xfffffb88(%rip)
3c3d(3): mov %rbx,%rdi
3c40(5): call 0xffffdec0(%rip)
3c45(4): add $0x18,%rsp
3c49(2): xor %eax,%eax
3c4b(1): pop %rbx
3c4c(1): pop %rbp
3c4d(2): pop %r12
3c4f(2): pop %r13
3c51(2): pop %r14
3c53(2): pop %r15
3c55(1): ret near (%rsp)
3c56(a): nop 0x0(%rax,%rax,1)
3c60(7): mov %rbx,0x2185b9(%rip)
3c67(4): add $0x18,%rsp
3c6b(5): mov $0x1,%eax
3c70(1): pop %rbx
3c71(1): pop %rbp
3c72(2): pop %r12
3c74(2): pop %r13
3c76(2): pop %r14
3c78(2): pop %r15
3c7a(1): ret near (%rsp)
3c7b(5): mov $0x1,%esi
3c80(5): jmp 0xfffffe74(%rip)
3c85(5): call 0xfffffb8b(%rip)

"remove_line" :
3c90(1): push %rbx
3c91(7): mov 0x218468(%rip),%rbx
3c98(3): test %rbx,%rbx
3c9b(2): jz 0x22(%rip)
3c9d(4): lea 0x30(%rbx),%rsi
3ca1(4): lea 0x28(%rbx),%rdi
3ca5(5): call 0xfffffb1b(%rip)
3caa(3): mov %rbx,%rdi
3cad(5): call 0xffffde53(%rip)
3cb2(b): mov $0x0,0x218443(%rip)
3cbd(7): mov 0x21855c(%rip),%rdx
3cc4(3): test %rdx,%rdx
3cc7(2): jz 0x79(%rip)
3cc9(4): mov 0x18(%rdx),%rax
3ccd(7): cmp 0x21852c(%rip),%rax
3cd4(2): jbe 0x9(%rip)
3cd6(7): mov %rax,0x218523(%rip)
3cdd(4): mov 0x38(%rdx),%rsi
3ce1(4): add $0x1,%rax
3ce5(4): mov %rax,0x18(%rdx)
3ce9(4): mov 0x10(%rsi),%rax
3ced(4): lea 0x1(%rax),%rcx
3cf1(3): mov %rcx,%rax
3cf4(4): mov %rcx,0x10(%rsi)
3cf8(4): shl/sal $0x4,%rax
3cfc(3): cmp %rcx,(%rsi)
3cff(5): lea 0x8(%rsi,%rax,1),%rax
3d04(2): jz 0xc(%rip)
3d06(1): pop %rbx
3d07(1): ret near (%rsp)
3d08(8): nop 0x0(%rax,%rax,1)
3d10(7): mov 0x518(%rsi),%rcx
3d17(3): test %rcx,%rcx
3d1a(4): mov %rcx,0x38(%rdx)
3d1e(2): jz 0x8(%rip)
3d20(4): cmp $0x0,(%rcx)
3d24(2): jnz 0xffffffe2(%rip)
3d26(7): mov %rdx,0x2183d3(%rip)
3d2d(4): mov 0x40(%rdx),%rdx
3d31(1): pop %rbx
3d32(7): mov %rdx,0x2184e7(%rip)
3d39(1): ret near (%rsp)
3d3a(6): nop 0x0(%rax,%rax,1)
3d40(7): cmp $0x0,0x2184b1(%rip)
3d47(2): jnz 0x19(%rip)
3d49(5): call 0xfffffbe7(%rip)
3d4e(2): test %al,%al
3d50(2): jz 0x10(%rip)
3d52(7): mov 0x2184c7(%rip),%rdx
3d59(5): jmp 0xffffff70(%rip)
3d5e(2): nop 
3d60(2): xor %eax,%eax
3d62(1): pop %rbx
3d63(1): ret near (%rsp)

"dump_rest_of_file" :
3d70(4): sub $0x8,%rsp
3d74(2): jmp 0x14(%rip)
3d76(a): nop 0x0(%rax,%rax,1)
3d80(3): mov %rax,%rdi
3d83(5): call 0xfffff6bd(%rip)
3d88(5): call 0xffffff08(%rip)
3d8d(3): test %rax,%rax
3d90(2): jnz 0xfffffff0(%rip)
3d92(4): add $0x8,%rsp
3d96(1): ret near (%rsp)

"find_line" :
3da0(1): push %rbp
3da1(1): push %rbx
3da2(3): mov %rdi,%rbp
3da5(4): sub $0x8,%rsp
3da9(7): mov 0x218470(%rip),%rbx
3db0(3): test %rbx,%rbx
3db3(6): jz 0xc5(%rip)
3db9(4): mov 0x10(%rbx),%rdx
3dbd(3): cmp %rbp,%rdx
3dc0(2): jbe 0x17(%rip)
3dc2(5): jmp 0xa6(%rip)
3dc7(9): nop 0x0(%rax,%rax,1)
3dd0(4): mov 0x10(%rax),%rdx
3dd4(3): mov %rax,%rbx
3dd7(4): mov 0x20(%rbx),%rax
3ddb(3): add %rdx,%rax
3dde(3): cmp %rbp,%rax
3de1(2): jnbe 0x4f(%rip)
3de3(4): mov 0x40(%rbx),%rax
3de7(3): test %rax,%rax
3dea(2): jnz 0xffffffe6(%rip)
3dec(7): cmp $0x0,0x218405(%rip)
3df3(2): jnz 0x75(%rip)
3df5(5): call 0xfffffb3b(%rip)
3dfa(2): test %al,%al
3dfc(2): jz 0x6c(%rip)
3dfe(4): mov 0x40(%rbx),%rax
3e02(3): test %rax,%rax
3e05(2): jnz 0xffffffcb(%rip)
3e07(7): lea 0x12cf2(%rip),%rcx
3e0e(7): lea 0x12403(%rip),%rsi
3e15(7): lea 0x121e9(%rip),%rdi
3e1c(5): mov $0x26a,%edx
3e21(5): call 0xffffde6f(%rip)
3e26(a): nop 0x0(%rax,%rax,1)
3e30(3): sub %rdx,%rbp
3e33(4): mov 0x30(%rbx),%rax
3e37(4): cmp $0x4f,%rbp
3e3b(2): jbe 0x16(%rip)
3e3d(3): nop (%rax)
3e40(4): sub $0x50,%rbp
3e44(7): mov 0x518(%rax),%rax
3e4b(4): cmp $0x4f,%rbp
3e4f(2): jnbe 0xfffffff1(%rip)
3e51(4): shl/sal $0x4,%rbp
3e55(4): add $0x8,%rsp
3e59(5): lea 0x18(%rax,%rbp,1),%rax
3e5e(1): pop %rbx
3e5f(1): pop %rbp
3e60(1): ret near (%rsp)
3e61(7): nop 0x0(%rax)
3e68(4): add $0x8,%rsp
3e6c(2): xor %eax,%eax
3e6e(1): pop %rbx
3e6f(1): pop %rbp
3e70(1): ret near (%rsp)
3e71(7): nop 0x0(%rax)
3e78(7): cmp $0x0,0x218379(%rip)
3e7f(2): jnz 0xffffffe9(%rip)
3e81(5): call 0xfffffaaf(%rip)
3e86(2): test %al,%al
3e88(2): jz 0xffffffe0(%rip)
3e8a(7): mov 0x21838f(%rip),%rbx
3e91(5): jmp 0xffffff28(%rip)

"get_first_line_in_buffer" :
3ea0(7): mov 0x218379(%rip),%rax
3ea7(3): test %rax,%rax
3eaa(2): jz 0xe(%rip)
3eac(4): mov 0x18(%rax),%rax
3eb0(1): ret near (%rsp)
3eb1(7): nop 0x0(%rax)
3eb8(7): cmp $0x0,0x218339(%rip)
3ebf(1): push %rbx
3ec0(2): jnz 0x18(%rip)
3ec2(5): call 0xfffffa6e(%rip)
3ec7(2): test %al,%al
3ec9(2): jz 0xf(%rip)
3ecb(7): mov 0x21834e(%rip),%rax
3ed2(1): pop %rbx
3ed3(4): mov 0x18(%rax),%rax
3ed7(1): ret near (%rsp)
3ed8(7): lea 0x12128(%rip),%rsi
3edf(5): mov $0x5,%edx
3ee4(2): xor %edi,%edi
3ee6(5): call 0xffffdd0a(%rip)
3eeb(3): mov %rax,%rbx
3eee(5): call 0xffffdc32(%rip)
3ef3(2): mov (%rax),%esi
3ef5(3): mov %rbx,%rdx
3ef8(5): mov $0x1,%edi
3efd(2): xor %eax,%eax
3eff(5): call 0xffffdf61(%rip)
3f04(2): nop 
3f06(a): nop 0x0(%rax,%rax,1)
3f10(2): push %r13
3f12(2): push %r12
3f14(5): mov $0x5,%edx
3f19(1): push %rbp
3f1a(1): push %rbx
3f1b(2): mov %edi,%ebp
3f1d(7): sub $0x88,%rsp
3f24(7): mov 0x21830d(%rip),%rbx
3f2b(9): mov $0x28,%rax
3f34(5): mov %rax,0x78(%rsp)
3f39(2): xor %eax,%eax
3f3b(2): test %edi,%edi
3f3d(2): jz 0x30(%rip)
3f3f(7): lea 0x122f2(%rip),%rsi
3f46(2): xor %edi,%edi
3f48(5): call 0xffffdca8(%rip)
3f4d(7): mov 0x21818c(%rip),%rdi
3f54(3): mov %rax,%rdx
3f57(3): mov %rbx,%rcx
3f5a(5): mov $0x1,%esi
3f5f(2): xor %eax,%eax
3f61(5): call 0xffffdf9f(%rip)
3f66(2): mov %ebp,%edi
3f68(5): call 0xffffdf78(%rip)
3f6d(7): lea 0x122ec(%rip),%rsi
3f74(2): xor %edi,%edi
3f76(5): call 0xffffdc7a(%rip)
3f7b(3): mov %rbx,%rdx
3f7e(3): mov %rax,%rsi
3f81(5): mov $0x1,%edi
3f86(2): xor %eax,%eax
3f88(5): call 0xffffdea8(%rip)
3f8d(7): mov 0x218114(%rip),%rbx
3f94(7): lea 0x122ed(%rip),%rsi
3f9b(5): mov $0x5,%edx
3fa0(2): xor %edi,%edi
3fa2(5): call 0xffffdc4e(%rip)
3fa7(3): mov %rbx,%rsi
3faa(3): mov %rax,%rdi
3fad(5): call 0xffffdd73(%rip)
3fb2(7): mov 0x2180ef(%rip),%rbx
3fb9(7): lea 0x12350(%rip),%rsi
3fc0(5): mov $0x5,%edx
3fc5(2): xor %edi,%edi
3fc7(5): call 0xffffdc29(%rip)
3fcc(3): mov %rbx,%rsi
3fcf(3): mov %rax,%rdi
3fd2(5): call 0xffffdd4e(%rip)
3fd7(7): mov 0x2180ca(%rip),%rbx
3fde(7): lea 0x12353(%rip),%rsi
3fe5(5): mov $0x5,%edx
3fea(2): xor %edi,%edi
3fec(5): call 0xffffdc04(%rip)
3ff1(3): mov %rbx,%rsi
3ff4(3): mov %rax,%rdi
3ff7(5): call 0xffffdd29(%rip)
3ffc(7): mov 0x2180a5(%rip),%rbx
4003(7): lea 0x1237e(%rip),%rsi
400a(5): mov $0x5,%edx
400f(2): xor %edi,%edi
4011(5): call 0xffffdbdf(%rip)
4016(3): mov %rbx,%rsi
4019(3): mov %rax,%rdi
401c(5): call 0xffffdd04(%rip)
4021(7): mov 0x218080(%rip),%rbx
4028(7): lea 0x12419(%rip),%rsi
402f(5): mov $0x5,%edx
4034(2): xor %edi,%edi
4036(5): call 0xffffdbba(%rip)
403b(3): mov %rbx,%rsi
403e(3): mov %rax,%rdi
4041(5): call 0xffffdcdf(%rip)
4046(7): mov 0x21805b(%rip),%rbx
404d(7): lea 0x1243c(%rip),%rsi
4054(5): mov $0x5,%edx
4059(2): xor %edi,%edi
405b(5): call 0xffffdb95(%rip)
4060(3): mov %rbx,%rsi
4063(3): mov %rax,%rdi
4066(5): call 0xffffdcba(%rip)
406b(7): mov 0x218036(%rip),%rbx
4072(7): lea 0x124df(%rip),%rsi
4079(5): mov $0x5,%edx
407e(2): xor %edi,%edi
4080(5): call 0xffffdb70(%rip)
4085(3): mov %rbx,%rsi
4088(3): mov %rax,%rdi
408b(5): call 0xffffdc95(%rip)
4090(7): mov 0x218011(%rip),%rbx
4097(7): lea 0x124ea(%rip),%rsi
409e(5): mov $0x5,%edx
40a3(2): xor %edi,%edi
40a5(5): call 0xffffdb4b(%rip)
40aa(3): mov %rbx,%rsi
40ad(3): mov %rax,%rdi
40b0(5): call 0xffffdc70(%rip)
40b5(7): mov 0x217fec(%rip),%rbx
40bc(7): lea 0x124fd(%rip),%rsi
40c3(5): mov $0x5,%edx
40c8(2): xor %edi,%edi
40ca(5): call 0xffffdb26(%rip)
40cf(3): mov %rbx,%rsi
40d2(3): mov %rax,%rdi
40d5(7): lea 0x11f3d(%rip),%rbx
40dc(5): call 0xffffdc44(%rip)
40e1(7): lea 0x11f38(%rip),%rax
40e8(7): lea 0x11f72(%rip),%rcx
40ef(9): mov $0x0,0x60(%rsp)
40f8(9): mov $0x0,0x68(%rsp)
4101(3): mov %rsp,%rdx
4104(4): mov %rax,(%rsp)
4108(7): lea 0x11f13(%rip),%rax
410f(5): mov %rcx,0x30(%rsp)
4114(7): lea 0x11f50(%rip),%rcx
411b(5): mov %rax,0x8(%rsp)
4120(7): lea 0x11f73(%rip),%rax
4127(5): mov %rcx,0x40(%rsp)
412c(7): lea 0x11f42(%rip),%rcx
4133(5): mov %rax,0x10(%rsp)
4138(7): lea 0x11ef3(%rip),%rax
413f(5): mov %rcx,0x50(%rsp)
4144(5): mov %rax,0x18(%rsp)
4149(7): lea 0x11ef8(%rip),%rax
4150(5): mov %rax,0x20(%rsp)
4155(7): lea 0x11ef6(%rip),%rax
415c(5): mov %rax,0x28(%rsp)
4161(5): mov %rax,0x38(%rsp)
4166(5): mov %rax,0x48(%rsp)
416b(5): mov %rax,0x58(%rsp)
4170(4): add $0x10,%rdx
4174(3): mov (%rdx),%rdi
4177(3): test %rdi,%rdi
417a(2): jz 0x15(%rip)
417c(5): mov $0x7,%ecx
4181(3): mov %rbx,%rsi
4184(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4186(3): setnbe %al
4189(2): sbb $0x0,%al
418b(2): test %al,%al
418d(2): jnz 0xffffffe3(%rip)
418f(4): mov 0x8(%rdx),%r12
4193(2): xor %edi,%edi
4195(5): mov $0x5,%edx
419a(7): lea 0x11ede(%rip),%rsi
41a1(3): test %r12,%r12
41a4(6): jz 0xc7(%rip)
41aa(5): call 0xffffda46(%rip)
41af(7): lea 0x125ca(%rip),%rcx
41b6(7): lea 0x11ed9(%rip),%rdx
41bd(3): mov %rax,%rsi
41c0(5): mov $0x1,%edi
41c5(2): xor %eax,%eax
41c7(5): call 0xffffdc69(%rip)
41cc(2): xor %esi,%esi
41ce(5): mov $0x5,%edi
41d3(5): call 0xffffdc4d(%rip)
41d8(3): test %rax,%rax
41db(2): jz 0x1e(%rip)
41dd(7): lea 0x11ec0(%rip),%rsi
41e4(5): mov $0x3,%edx
41e9(3): mov %rax,%rdi
41ec(5): call 0xffffd954(%rip)
41f1(2): test %eax,%eax
41f3(6): jnz 0x10d(%rip)
41f9(7): lea 0x11ea8(%rip),%rsi
4200(2): xor %edi,%edi
4202(5): mov $0x5,%edx
4207(5): call 0xffffd9e9(%rip)
420c(7): lea 0x11e06(%rip),%rcx
4213(7): lea 0x12566(%rip),%rdx
421a(3): mov %rax,%rsi
421d(5): mov $0x1,%edi
4222(2): xor %eax,%eax
4224(5): call 0xffffdc0c(%rip)
4229(3): cmp %rbx,%r12
422c(7): lea 0x11e09(%rip),%rcx
4233(7): lea 0x12ea7(%rip),%rbx
423a(4): cmove %rcx,%rbx
423e(7): lea 0x125ab(%rip),%rsi
4245(2): xor %edi,%edi
4247(5): mov $0x5,%edx
424c(5): call 0xffffd9a4(%rip)
4251(3): mov %rbx,%rcx
4254(3): mov %rax,%rsi
4257(3): mov %r12,%rdx
425a(5): mov $0x1,%edi
425f(2): xor %eax,%eax
4261(5): call 0xffffdbcf(%rip)
4266(5): jmp 0xfffffd00(%rip)
426b(5): call 0xffffd985(%rip)
4270(7): lea 0x12509(%rip),%rcx
4277(7): lea 0x11e18(%rip),%rdx
427e(3): mov %rax,%rsi
4281(5): mov $0x1,%edi
4286(2): xor %eax,%eax
4288(5): call 0xffffdba8(%rip)
428d(2): xor %esi,%esi
428f(5): mov $0x5,%edi
4294(5): call 0xffffdb8c(%rip)
4299(3): test %rax,%rax
429c(2): jz 0x1a(%rip)
429e(7): lea 0x11dff(%rip),%rsi
42a5(5): mov $0x3,%edx
42aa(3): mov %rax,%rdi
42ad(5): call 0xffffd893(%rip)
42b2(2): test %eax,%eax
42b4(2): jnz 0x45(%rip)
42b6(7): lea 0x11deb(%rip),%rsi
42bd(5): mov $0x5,%edx
42c2(2): xor %edi,%edi
42c4(7): lea 0x11d4e(%rip),%r12
42cb(7): lea 0x11d6a(%rip),%rbx
42d2(5): call 0xffffd91e(%rip)
42d7(7): lea 0x11d3b(%rip),%rcx
42de(7): lea 0x1249b(%rip),%rdx
42e5(3): mov %rax,%rsi
42e8(5): mov $0x1,%edi
42ed(2): xor %eax,%eax
42ef(5): call 0xffffdb41(%rip)
42f4(5): jmp 0xffffff4a(%rip)
42f9(7): lea 0x11d19(%rip),%r12
4300(7): mov 0x217da1(%rip),%r13
4307(7): lea 0x1249a(%rip),%rsi
430e(2): xor %edi,%edi
4310(5): mov $0x5,%edx
4315(5): call 0xffffd8db(%rip)
431a(3): mov %r13,%rsi
431d(3): mov %rax,%rdi
4320(5): call 0xffffda00(%rip)
4325(5): jmp 0xfffffed4(%rip)

"usage" :
3f10(2): push %r13
3f12(2): push %r12
3f14(5): mov $0x5,%edx
3f19(1): push %rbp
3f1a(1): push %rbx
3f1b(2): mov %edi,%ebp
3f1d(7): sub $0x88,%rsp
3f24(7): mov 0x21830d(%rip),%rbx
3f2b(9): mov $0x28,%rax
3f34(5): mov %rax,0x78(%rsp)
3f39(2): xor %eax,%eax
3f3b(2): test %edi,%edi
3f3d(2): jz 0x30(%rip)
3f3f(7): lea 0x122f2(%rip),%rsi
3f46(2): xor %edi,%edi
3f48(5): call 0xffffdca8(%rip)
3f4d(7): mov 0x21818c(%rip),%rdi
3f54(3): mov %rax,%rdx
3f57(3): mov %rbx,%rcx
3f5a(5): mov $0x1,%esi
3f5f(2): xor %eax,%eax
3f61(5): call 0xffffdf9f(%rip)
3f66(2): mov %ebp,%edi
3f68(5): call 0xffffdf78(%rip)
3f6d(7): lea 0x122ec(%rip),%rsi
3f74(2): xor %edi,%edi
3f76(5): call 0xffffdc7a(%rip)
3f7b(3): mov %rbx,%rdx
3f7e(3): mov %rax,%rsi
3f81(5): mov $0x1,%edi
3f86(2): xor %eax,%eax
3f88(5): call 0xffffdea8(%rip)
3f8d(7): mov 0x218114(%rip),%rbx
3f94(7): lea 0x122ed(%rip),%rsi
3f9b(5): mov $0x5,%edx
3fa0(2): xor %edi,%edi
3fa2(5): call 0xffffdc4e(%rip)
3fa7(3): mov %rbx,%rsi
3faa(3): mov %rax,%rdi
3fad(5): call 0xffffdd73(%rip)
3fb2(7): mov 0x2180ef(%rip),%rbx
3fb9(7): lea 0x12350(%rip),%rsi
3fc0(5): mov $0x5,%edx
3fc5(2): xor %edi,%edi
3fc7(5): call 0xffffdc29(%rip)
3fcc(3): mov %rbx,%rsi
3fcf(3): mov %rax,%rdi
3fd2(5): call 0xffffdd4e(%rip)
3fd7(7): mov 0x2180ca(%rip),%rbx
3fde(7): lea 0x12353(%rip),%rsi
3fe5(5): mov $0x5,%edx
3fea(2): xor %edi,%edi
3fec(5): call 0xffffdc04(%rip)
3ff1(3): mov %rbx,%rsi
3ff4(3): mov %rax,%rdi
3ff7(5): call 0xffffdd29(%rip)
3ffc(7): mov 0x2180a5(%rip),%rbx
4003(7): lea 0x1237e(%rip),%rsi
400a(5): mov $0x5,%edx
400f(2): xor %edi,%edi
4011(5): call 0xffffdbdf(%rip)
4016(3): mov %rbx,%rsi
4019(3): mov %rax,%rdi
401c(5): call 0xffffdd04(%rip)
4021(7): mov 0x218080(%rip),%rbx
4028(7): lea 0x12419(%rip),%rsi
402f(5): mov $0x5,%edx
4034(2): xor %edi,%edi
4036(5): call 0xffffdbba(%rip)
403b(3): mov %rbx,%rsi
403e(3): mov %rax,%rdi
4041(5): call 0xffffdcdf(%rip)
4046(7): mov 0x21805b(%rip),%rbx
404d(7): lea 0x1243c(%rip),%rsi
4054(5): mov $0x5,%edx
4059(2): xor %edi,%edi
405b(5): call 0xffffdb95(%rip)
4060(3): mov %rbx,%rsi
4063(3): mov %rax,%rdi
4066(5): call 0xffffdcba(%rip)
406b(7): mov 0x218036(%rip),%rbx
4072(7): lea 0x124df(%rip),%rsi
4079(5): mov $0x5,%edx
407e(2): xor %edi,%edi
4080(5): call 0xffffdb70(%rip)
4085(3): mov %rbx,%rsi
4088(3): mov %rax,%rdi
408b(5): call 0xffffdc95(%rip)
4090(7): mov 0x218011(%rip),%rbx
4097(7): lea 0x124ea(%rip),%rsi
409e(5): mov $0x5,%edx
40a3(2): xor %edi,%edi
40a5(5): call 0xffffdb4b(%rip)
40aa(3): mov %rbx,%rsi
40ad(3): mov %rax,%rdi
40b0(5): call 0xffffdc70(%rip)
40b5(7): mov 0x217fec(%rip),%rbx
40bc(7): lea 0x124fd(%rip),%rsi
40c3(5): mov $0x5,%edx
40c8(2): xor %edi,%edi
40ca(5): call 0xffffdb26(%rip)
40cf(3): mov %rbx,%rsi
40d2(3): mov %rax,%rdi
40d5(7): lea 0x11f3d(%rip),%rbx
40dc(5): call 0xffffdc44(%rip)
40e1(7): lea 0x11f38(%rip),%rax
40e8(7): lea 0x11f72(%rip),%rcx
40ef(9): mov $0x0,0x60(%rsp)
40f8(9): mov $0x0,0x68(%rsp)
4101(3): mov %rsp,%rdx
4104(4): mov %rax,(%rsp)
4108(7): lea 0x11f13(%rip),%rax
410f(5): mov %rcx,0x30(%rsp)
4114(7): lea 0x11f50(%rip),%rcx
411b(5): mov %rax,0x8(%rsp)
4120(7): lea 0x11f73(%rip),%rax
4127(5): mov %rcx,0x40(%rsp)
412c(7): lea 0x11f42(%rip),%rcx
4133(5): mov %rax,0x10(%rsp)
4138(7): lea 0x11ef3(%rip),%rax
413f(5): mov %rcx,0x50(%rsp)
4144(5): mov %rax,0x18(%rsp)
4149(7): lea 0x11ef8(%rip),%rax
4150(5): mov %rax,0x20(%rsp)
4155(7): lea 0x11ef6(%rip),%rax
415c(5): mov %rax,0x28(%rsp)
4161(5): mov %rax,0x38(%rsp)
4166(5): mov %rax,0x48(%rsp)
416b(5): mov %rax,0x58(%rsp)
4170(4): add $0x10,%rdx
4174(3): mov (%rdx),%rdi
4177(3): test %rdi,%rdi
417a(2): jz 0x15(%rip)
417c(5): mov $0x7,%ecx
4181(3): mov %rbx,%rsi
4184(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4186(3): setnbe %al
4189(2): sbb $0x0,%al
418b(2): test %al,%al
418d(2): jnz 0xffffffe3(%rip)
418f(4): mov 0x8(%rdx),%r12
4193(2): xor %edi,%edi
4195(5): mov $0x5,%edx
419a(7): lea 0x11ede(%rip),%rsi
41a1(3): test %r12,%r12
41a4(6): jz 0xc7(%rip)
41aa(5): call 0xffffda46(%rip)
41af(7): lea 0x125ca(%rip),%rcx
41b6(7): lea 0x11ed9(%rip),%rdx
41bd(3): mov %rax,%rsi
41c0(5): mov $0x1,%edi
41c5(2): xor %eax,%eax
41c7(5): call 0xffffdc69(%rip)
41cc(2): xor %esi,%esi
41ce(5): mov $0x5,%edi
41d3(5): call 0xffffdc4d(%rip)
41d8(3): test %rax,%rax
41db(2): jz 0x1e(%rip)
41dd(7): lea 0x11ec0(%rip),%rsi
41e4(5): mov $0x3,%edx
41e9(3): mov %rax,%rdi
41ec(5): call 0xffffd954(%rip)
41f1(2): test %eax,%eax
41f3(6): jnz 0x10d(%rip)
41f9(7): lea 0x11ea8(%rip),%rsi
4200(2): xor %edi,%edi
4202(5): mov $0x5,%edx
4207(5): call 0xffffd9e9(%rip)
420c(7): lea 0x11e06(%rip),%rcx
4213(7): lea 0x12566(%rip),%rdx
421a(3): mov %rax,%rsi
421d(5): mov $0x1,%edi
4222(2): xor %eax,%eax
4224(5): call 0xffffdc0c(%rip)
4229(3): cmp %rbx,%r12
422c(7): lea 0x11e09(%rip),%rcx
4233(7): lea 0x12ea7(%rip),%rbx
423a(4): cmove %rcx,%rbx
423e(7): lea 0x125ab(%rip),%rsi
4245(2): xor %edi,%edi
4247(5): mov $0x5,%edx
424c(5): call 0xffffd9a4(%rip)
4251(3): mov %rbx,%rcx
4254(3): mov %rax,%rsi
4257(3): mov %r12,%rdx
425a(5): mov $0x1,%edi
425f(2): xor %eax,%eax
4261(5): call 0xffffdbcf(%rip)
4266(5): jmp 0xfffffd00(%rip)
426b(5): call 0xffffd985(%rip)
4270(7): lea 0x12509(%rip),%rcx
4277(7): lea 0x11e18(%rip),%rdx
427e(3): mov %rax,%rsi
4281(5): mov $0x1,%edi
4286(2): xor %eax,%eax
4288(5): call 0xffffdba8(%rip)
428d(2): xor %esi,%esi
428f(5): mov $0x5,%edi
4294(5): call 0xffffdb8c(%rip)
4299(3): test %rax,%rax
429c(2): jz 0x1a(%rip)
429e(7): lea 0x11dff(%rip),%rsi
42a5(5): mov $0x3,%edx
42aa(3): mov %rax,%rdi
42ad(5): call 0xffffd893(%rip)
42b2(2): test %eax,%eax
42b4(2): jnz 0x45(%rip)
42b6(7): lea 0x11deb(%rip),%rsi
42bd(5): mov $0x5,%edx
42c2(2): xor %edi,%edi
42c4(7): lea 0x11d4e(%rip),%r12
42cb(7): lea 0x11d6a(%rip),%rbx
42d2(5): call 0xffffd91e(%rip)
42d7(7): lea 0x11d3b(%rip),%rcx
42de(7): lea 0x1249b(%rip),%rdx
42e5(3): mov %rax,%rsi
42e8(5): mov $0x1,%edi
42ed(2): xor %eax,%eax
42ef(5): call 0xffffdb41(%rip)
42f4(5): jmp 0xffffff4a(%rip)
42f9(7): lea 0x11d19(%rip),%r12
4300(7): mov 0x217da1(%rip),%r13
4307(7): lea 0x1249a(%rip),%rsi
430e(2): xor %edi,%edi
4310(5): mov $0x5,%edx
4315(5): call 0xffffd8db(%rip)
431a(3): mov %r13,%rsi
431d(3): mov %rax,%rdi
4320(5): call 0xffffda00(%rip)
4325(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
4330(7): mov %rdi,0x217ef9(%rip)
4337(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
4340(7): mov %dil,0x217ee1(%rip)
4347(1): ret near (%rsp)

"close_stdout" :
4350(1): push %rbp
4351(1): push %rbx
4352(4): sub $0x8,%rsp
4356(7): mov 0x217d4b(%rip),%rdi
435d(5): call 0x11a73(%rip)
4362(2): test %eax,%eax
4364(2): jz 0x18(%rip)
4366(5): call 0xffffd7ba(%rip)
436b(7): cmp $0x0,0x217eb6(%rip)
4372(3): mov %rax,%rbx
4375(2): jz 0x1e(%rip)
4377(3): cmp $0x20,(%rax)
437a(2): jnz 0x19(%rip)
437c(7): mov 0x217d5d(%rip),%rdi
4383(5): call 0x11a4d(%rip)
4388(2): test %eax,%eax
438a(2): jnz 0x48(%rip)
438c(4): add $0x8,%rsp
4390(1): pop %rbx
4391(1): pop %rbp
4392(1): ret near (%rsp)
4393(7): lea 0x127b7(%rip),%rsi
439a(2): xor %edi,%edi
439c(5): mov $0x5,%edx
43a1(5): call 0xffffd84f(%rip)
43a6(7): mov 0x217e83(%rip),%rdi
43ad(3): mov %rax,%rbp
43b0(3): test %rdi,%rdi
43b3(2): jz 0x2a(%rip)
43b5(5): call 0x1cab(%rip)
43ba(2): mov (%rbx),%esi
43bc(7): lea 0x1279a(%rip),%rdx
43c3(3): mov %rax,%rcx
43c6(3): mov %rbp,%r8
43c9(2): xor %edi,%edi
43cb(2): xor %eax,%eax
43cd(5): call 0xffffda93(%rip)
43d2(6): mov 0x217c48(%rip),%edi
43d8(5): call 0xffffd778(%rip)
43dd(2): mov (%rbx),%esi
43df(7): lea 0x1277b(%rip),%rdx
43e6(3): mov %rax,%rcx
43e9(2): xor %edi,%edi
43eb(2): xor %eax,%eax
43ed(5): call 0xffffda73(%rip)
43f2(2): jmp 0xffffffe0(%rip)

"fd_reopen" :
4400(2): push %r13
4402(2): push %r12
4404(2): xor %eax,%eax
4406(1): push %rbp
4407(1): push %rbx
4408(2): mov %edi,%ebp
440a(3): mov %rsi,%rdi
440d(2): mov %edx,%esi
440f(2): mov %ecx,%edx
4411(4): sub $0x8,%rsp
4415(5): call 0xffffda5b(%rip)
441a(2): cmp %eax,%ebp
441c(2): mov %eax,%ebx
441e(2): jz 0x2b(%rip)
4420(2): test %eax,%eax
4422(2): js 0x27(%rip)
4424(2): mov %ebp,%esi
4426(2): mov %eax,%edi
4428(5): call 0xffffd828(%rip)
442d(3): mov %eax,%r12d
4430(5): call 0xffffd6f0(%rip)
4435(3): mov (%rax),%r13d
4438(3): mov %rax,%rbp
443b(2): mov %ebx,%edi
443d(5): call 0xffffd883(%rip)
4442(3): mov %r12d,%ebx
4445(4): mov %r13d,0x0(%rbp)
4449(4): add $0x8,%rsp
444d(2): mov %ebx,%eax
444f(1): pop %rbx
4450(1): pop %rbp
4451(2): pop %r12
4453(2): pop %r13
4455(1): ret near (%rsp)

"fopen_safer" :
4460(2): push %r12
4462(1): push %rbp
4463(3): mov %rsi,%rbp
4466(1): push %rbx
4467(5): call 0xffffda29(%rip)
446c(3): test %rax,%rax
446f(3): mov %rax,%rbx
4472(2): jz 0xf(%rip)
4474(3): mov %rax,%rdi
4477(5): call 0xffffd909(%rip)
447c(3): cmp $0x2,%eax
447f(2): jbe 0x11(%rip)
4481(3): mov %rbx,%rax
4484(1): pop %rbx
4485(1): pop %rbp
4486(2): pop %r12
4488(1): ret near (%rsp)
4489(7): nop 0x0(%rax)
4490(2): mov %eax,%edi
4492(5): call 0x1e4e(%rip)
4497(2): test %eax,%eax
4499(3): mov %eax,%r12d
449c(2): js 0x3c(%rip)
449e(3): mov %rbx,%rdi
44a1(5): call 0x32ef(%rip)
44a6(2): test %eax,%eax
44a8(2): jnz 0x15(%rip)
44aa(3): mov %rbp,%rsi
44ad(3): mov %r12d,%edi
44b0(5): call 0xffffd960(%rip)
44b5(3): test %rax,%rax
44b8(3): mov %rax,%rbx
44bb(2): jnz 0xffffffc6(%rip)
44bd(5): call 0xffffd663(%rip)
44c2(2): mov (%rax),%ebp
44c4(3): mov %rax,%rbx
44c7(3): mov %r12d,%edi
44ca(5): call 0xffffd7f6(%rip)
44cf(2): mov %ebp,(%rbx)
44d1(2): xor %ebx,%ebx
44d3(2): jmp 0xffffffae(%rip)
44d5(3): nop (%rax)
44d8(5): call 0xffffd648(%rip)
44dd(3): mov (%rax),%r12d
44e0(3): mov %rax,%rbp
44e3(3): mov %rbx,%rdi
44e6(5): call 0x32aa(%rip)
44eb(2): xor %ebx,%ebx
44ed(4): mov %r12d,0x0(%rbp)
44f1(2): jmp 0xffffff90(%rip)

"umaxtostr" :
4500(4): lea 0x14(%rsi),%rcx
4504(4): mov $0x0,0x14(%rsi)
4508(a): mov $0x-3689348814741910323,%rsi
4512(6): nop 0x0(%rax,%rax,1)
4518(3): mov %rdi,%rax
451b(4): sub $0x1,%rcx
451f(3): mul %rax,%rsi,%rdx
4522(4): shr $0x3,%rdx
4526(4): lea 0x0(%rdx,%rdx,4),%rax
452a(3): add %rax,%rax
452d(3): sub %rax,%rdi
4530(3): add $0x30,%edi
4533(3): test %rdx,%rdx
4536(3): mov %dil,(%rcx)
4539(3): mov %rdx,%rdi
453c(2): jnz 0xffffffdc(%rip)
453e(3): mov %rcx,%rax
4541(1): ret near (%rsp)

"set_program_name" :
4550(3): test %rdi,%rdi
4553(1): push %rbx
4554(2): jz 0x79(%rip)
4556(5): mov $0x2f,%esi
455b(3): mov %rdi,%rbx
455e(5): call 0xffffd712(%rip)
4563(3): test %rax,%rax
4566(2): jz 0x57(%rip)
4568(4): lea 0x1(%rax),%r8
456c(3): mov %r8,%rdx
456f(3): sub %rbx,%rdx
4572(4): cmp $0x6,%rdx
4576(2): jle 0x47(%rip)
4578(4): lea 0xfffffffa(%rax),%rsi
457c(7): lea 0x1261d(%rip),%rdi
4583(5): mov $0x7,%ecx
4588(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
458a(3): setnbe %dl
458d(3): sbb $0x0,%dl
4590(2): test %dl,%dl
4592(2): jnz 0x2b(%rip)
4594(7): lea 0x1260d(%rip),%rdi
459b(5): mov $0x3,%ecx
45a0(3): mov %r8,%rsi
45a3(3): mov %r8,%rbx
45a6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
45a8(3): setnbe %dl
45ab(3): sbb $0x0,%dl
45ae(2): test %dl,%dl
45b0(2): jnz 0xd(%rip)
45b2(4): lea 0x4(%rax),%rbx
45b6(7): mov %rbx,0x217ae3(%rip)
45bd(7): mov %rbx,0x217c74(%rip)
45c4(7): mov %rbx,0x217af5(%rip)
45cb(1): pop %rbx
45cc(1): ret near (%rsp)
45cd(7): mov 0x217b0c(%rip),%rcx
45d4(7): lea 0x1258d(%rip),%rdi
45db(5): mov $0x37,%edx
45e0(5): mov $0x1,%esi
45e5(5): call 0xffffd90b(%rip)
45ea(5): call 0xffffd526(%rip)

"gettext_quote.part.1" :
45f0(1): push %rbp
45f1(1): push %rbx
45f2(3): mov %rdi,%rbp
45f5(2): mov %esi,%ebx
45f7(4): sub $0x8,%rsp
45fb(5): call 0x118b5(%rip)
4600(3): movzx (%rax),%edx
4603(3): and $0xdf,%edx
4606(3): cmp $0x55,%dl
4609(2): jz 0x77(%rip)
460b(3): cmp $0x47,%dl
460e(2): jz 0x22(%rip)
4610(7): lea 0x125a4(%rip),%rax
4617(7): lea 0x1259f(%rip),%rdx
461e(3): cmp $0x9,%ebx
4621(4): cmovne %rdx,%rax
4625(4): add $0x8,%rsp
4629(1): pop %rbx
462a(1): pop %rbp
462b(1): ret near (%rsp)
462c(4): nop 0x0(%rax)
4630(4): movzx 0x1(%rax),%edx
4634(3): and $0xdf,%edx
4637(3): cmp $0x42,%dl
463a(2): jnz 0xffffffd6(%rip)
463c(4): cmp $0x31,0x2(%rax)
4640(2): jnz 0xffffffd0(%rip)
4642(4): cmp $0x38,0x3(%rax)
4646(2): jnz 0xffffffca(%rip)
4648(4): cmp $0x30,0x4(%rax)
464c(2): jnz 0xffffffc4(%rip)
464e(4): cmp $0x33,0x5(%rax)
4652(2): jnz 0xffffffbe(%rip)
4654(4): cmp $0x30,0x6(%rax)
4658(2): jnz 0xffffffb8(%rip)
465a(4): cmp $0x0,0x7(%rax)
465e(2): jnz 0xffffffb2(%rip)
4660(4): cmp $0x60,0x0(%rbp)
4664(7): lea 0x12549(%rip),%rax
466b(7): lea 0x12546(%rip),%rdx
4672(4): cmovne %rdx,%rax
4676(4): add $0x8,%rsp
467a(1): pop %rbx
467b(1): pop %rbp
467c(1): ret near (%rsp)
467d(3): nop (%rax)
4680(4): movzx 0x1(%rax),%edx
4684(3): and $0xdf,%edx
4687(3): cmp $0x54,%dl
468a(2): jnz 0xffffff86(%rip)
468c(4): movzx 0x2(%rax),%edx
4690(3): and $0xdf,%edx
4693(3): cmp $0x46,%dl
4696(6): jnz 0xffffff7a(%rip)
469c(4): cmp $0x2d,0x3(%rax)
46a0(6): jnz 0xffffff70(%rip)
46a6(4): cmp $0x38,0x4(%rax)
46aa(6): jnz 0xffffff66(%rip)
46b0(4): cmp $0x0,0x5(%rax)
46b4(6): jnz 0xffffff5c(%rip)
46ba(4): cmp $0x60,0x0(%rbp)
46be(7): lea 0x124e7(%rip),%rax
46c5(7): lea 0x124e4(%rip),%rdx
46cc(4): cmovne %rdx,%rax
46d0(4): add $0x8,%rsp
46d4(1): pop %rbx
46d5(1): pop %rbp
46d6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
46e0(2): push %r15
46e2(2): push %r14
46e4(3): mov %r8d,%r15d
46e7(2): push %r13
46e9(2): push %r12
46eb(3): mov %rdi,%r14
46ee(1): push %rbp
46ef(1): push %rbx
46f0(3): mov %r9d,%ebx
46f3(3): mov %rsi,%r13
46f6(3): mov %rcx,%rbp
46f9(3): and $0x2,%ebx
46fc(7): sub $0xb8,%rsp
4703(8): mov 0xf0(%rsp),%rax
470b(5): mov %rdx,0x10(%rsp)
4710(5): mov %r8d,0x8(%rsp)
4715(5): mov %r9d,0x78(%rsp)
471a(5): mov %rax,0x20(%rsp)
471f(8): mov 0xf8(%rsp),%rax
4727(5): mov %rax,0x68(%rsp)
472c(8): mov 0x100(%rsp),%rax
4734(5): mov %rax,0x60(%rsp)
4739(9): mov $0x28,%rax
4742(8): mov %rax,0xa8(%rsp)
474a(2): xor %eax,%eax
474c(5): call 0xffffd4b4(%rip)
4751(4): cmp $0xa,%r15d
4755(5): mov %rax,0x58(%rsp)
475a(6): jnbe 0x11b5(%rip)
4760(7): lea 0x124b9(%rip),%rcx
4767(3): mov %r15d,%edx
476a(4): movsxd 0x0(%rcx,%rdx,4),%rax
476e(3): add %rcx,%rax
4771(2): jmp %rax
4773(5): mov $0x1,0xe(%rsp)
4778(5): mov $0x0,0x7c(%rsp)
477d(3): xor %r12d,%r12d
4780(9): mov $0x0,0x50(%rsp)
4789(5): mov $0x1,0xf(%rsp)
478e(5): mov $0x0,0xd(%rsp)
4793(7): lea 0x12423(%rip),%rax
479a(9): mov $0x1,0x18(%rsp)
47a3(3): xor %r15d,%r15d
47a6(8): mov $0x2,0x8(%rsp)
47ae(5): mov %rax,0x48(%rsp)
47b3(3): xor %r11d,%r11d
47b6(3): mov %rbp,%rax
47b9(3): mov %r12d,%r8d
47bc(3): mov %r11,%rbp
47bf(3): mov %rax,%r11
47c2(6): nop 0x0(%rax,%rax,1)
47c8(3): cmp %rbp,%r11
47cb(4): setnz %r12b
47cf(4): cmp $0xffffffff,%r11
47d3(2): jnz 0xf(%rip)
47d5(5): mov 0x10(%rsp),%rax
47da(4): cmp $0x0,0x0(%rax,%rbp,1)
47de(4): setnz %r12b
47e2(3): test %r12b,%r12b
47e5(6): jz 0x65b(%rip)
47eb(5): cmp $0x2,0x8(%rsp)
47f0(5): mov 0x10(%rsp),%rdi
47f5(4): lea 0x0(%rdi,%rbp,1),%r9
47f9(3): setnz %al
47fc(4): and 0xd(%rsp),%al
4800(3): mov %eax,%r10d
4803(6): jz 0xad(%rip)
4809(5): mov 0x18(%rsp),%rax
480e(3): test %rax,%rax
4811(6): jz 0x42f(%rip)
4817(4): cmp $0xffffffff,%r11
481b(5): lea 0x0(%rbp,%rax,1),%rbx
4820(2): jnz 0x30(%rip)
4822(4): cmp $0x1,%rax
4826(2): jbe 0x2a(%rip)
4828(5): mov %r8b,0x38(%rsp)
482d(5): mov %r10b,0x30(%rsp)
4832(5): mov %r9,0x28(%rsp)
4837(5): call 0xffffd3d9(%rip)
483c(6): movzx 0x38(%rsp),%r8d
4842(6): movzx 0x30(%rsp),%r10d
4848(3): mov %rax,%r11
484b(5): mov 0x28(%rsp),%r9
4850(3): cmp %r11,%rbx
4853(5): mov %r10b,0x28(%rsp)
4858(6): jnbe 0x5b8(%rip)
485e(5): mov 0x18(%rsp),%rdx
4863(5): mov 0x48(%rsp),%rsi
4868(3): mov %r9,%rdi
486b(5): mov %r11,0x40(%rsp)
4870(5): mov %r8b,0x38(%rsp)
4875(5): mov %r9,0x30(%rsp)
487a(5): call 0xffffd486(%rip)
487f(2): test %eax,%eax
4881(5): mov 0x30(%rsp),%r9
4886(6): movzx 0x38(%rsp),%r8d
488c(5): mov 0x40(%rsp),%r11
4891(6): jnz 0x57f(%rip)
4897(5): cmp $0x0,0xf(%rsp)
489c(6): movzx 0x28(%rsp),%r10d
48a2(6): jnz 0xf83(%rip)
48a8(8): nop 0x0(%rax,%rax,1)
48b0(4): movzx (%r9),%ebx
48b4(3): cmp $0x7e,%bl
48b7(6): jnbe 0x321(%rip)
48bd(7): lea 0x12388(%rip),%rcx
48c4(3): movzx %bl,%edx
48c7(4): movsxd 0x0(%rcx,%rdx,4),%rax
48cb(3): add %rcx,%rax
48ce(2): jmp %rax
48d0(3): xor %r10d,%r10d
48d3(4): cmp $0x1,%r11
48d7(3): setnz %al
48da(4): cmp $0xffffffff,%r11
48de(2): jnz 0xe(%rip)
48e0(5): mov 0x10(%rsp),%rax
48e5(4): cmp $0x0,0x1(%rax)
48e9(3): setnz %al
48ec(5): cmp $0x2,0x8(%rsp)
48f1(3): setz %dl
48f4(2): test %al,%al
48f6(6): jz 0x252(%rip)
48fc(3): xor %r12d,%r12d
48ff(2): xor %eax,%eax
4901(7): nop 0x0(%rax)
4908(5): cmp $0x1,0xd(%rsp)
490d(6): jnz 0x115(%rip)
4913(2): test %dl,%dl
4915(6): jnz 0x10d(%rip)
491b(5): mov 0x20(%rsp),%rsi
4920(3): test %rsi,%rsi
4923(2): jz 0x16(%rip)
4925(2): mov %ebx,%edx
4927(3): shr $0x5,%dl
492a(3): movzx %dl,%edx
492d(3): mov 0x0(%rsi,%rdx,4),%edx
4930(3): bt %ebx,%edx
4933(6): jb 0x150(%rip)
4939(3): test %r10b,%r10b
493c(6): jnz 0x147(%rip)
4942(3): xor $0x1,%eax
4945(4): add $0x1,%rbp
4949(3): and %r8d,%eax
494c(2): test %al,%al
494e(2): jz 0x22(%rip)
4950(3): cmp %r15,%r13
4953(2): jbe 0x7(%rip)
4955(5): mov $0x27,0x0(%r14,%r15,1)
495a(4): lea 0x1(%r15),%rax
495e(3): cmp %rax,%r13
4961(2): jbe 0x8(%rip)
4963(6): mov $0x27,0x1(%r14,%r15,1)
4969(4): add $0x2,%r15
496d(3): xor %r8d,%r8d
4970(3): cmp %r13,%r15
4973(2): jnb 0x6(%rip)
4975(4): mov %bl,0x0(%r14,%r15,1)
4979(5): movzx 0xe(%rsp),%edi
497e(4): add $0x1,%r15
4982(5): mov $0x0,%eax
4987(3): test %r12b,%r12b
498a(3): cmove %eax,%edi
498d(5): mov %dil,0xe(%rsp)
4992(5): jmp 0xfffffe36(%rip)
4997(9): nop 0x0(%rax,%rax,1)
49a0(3): xor %r10d,%r10d
49a3(4): mov 0x8(%rsp),%eax
49a7(3): cmp $0x2,%eax
49aa(6): jz 0x5be(%rip)
49b0(3): cmp $0x5,%eax
49b3(6): jz 0x575(%rip)
49b9(3): cmp $0x2,%eax
49bc(5): mov $0x3f,%ebx
49c1(3): setz %dl
49c4(3): xor %r12d,%r12d
49c7(2): xor %eax,%eax
49c9(5): jmp 0xffffff3f(%rip)
49ce(2): nop 
49d0(3): xor %r10d,%r10d
49d3(5): cmp $0x2,0x8(%rsp)
49d8(6): jz 0x508(%rip)
49de(5): mov %r12b,0x7c(%rsp)
49e3(2): xor %edx,%edx
49e5(2): xor %eax,%eax
49e7(5): mov $0x27,%ebx
49ec(5): jmp 0xffffff1c(%rip)
49f1(7): nop 0x0(%rax)
49f8(5): mov $0x9,%edx
49fd(5): mov $0x74,%ebx
4a02(5): cmp $0x2,0x8(%rsp)
4a07(3): setz %al
4a0a(4): and 0xf(%rsp),%al
4a0e(6): jnz 0x150(%rip)
4a14(5): cmp $0x0,0xd(%rsp)
4a19(2): jnz 0x67(%rip)
4a1b(2): mov %edx,%ebx
4a1d(3): xor %r12d,%r12d
4a20(2): xor %eax,%eax
4a22(5): cmp $0x0,0xf(%rsp)
4a27(6): jnz 0xfffffef4(%rip)
4a2d(5): jmp 0xffffff0c(%rip)
4a32(6): nop 0x0(%rax,%rax,1)
4a38(5): mov $0x8,%edx
4a3d(5): mov $0x62,%ebx
4a42(2): jmp 0xffffffd2(%rip)
4a44(4): nop 0x0(%rax)
4a48(5): cmp $0x2,0x8(%rsp)
4a4d(6): jz 0x3d3(%rip)
4a53(5): cmp $0x0,0xd(%rsp)
4a58(6): jz 0x218(%rip)
4a5e(5): cmp $0x0,0xf(%rsp)
4a63(6): jz 0x20d(%rip)
4a69(6): cmp $0x0,0x18(%rsp)
4a6f(6): jnz 0x3bc(%rip)
4a75(5): mov $0x5c,%ebx
4a7a(6): nop 0x0(%rax,%rax,1)
4a80(3): xor %r12d,%r12d
4a83(5): cmp $0x2,0x8(%rsp)
4a88(3): setz %dl
4a8b(5): cmp $0x0,0xf(%rsp)
4a90(2): mov %edx,%eax
4a92(6): jnz 0x856(%rip)
4a98(3): mov %r8d,%eax
4a9b(3): xor $0x1,%eax
4a9e(2): and %dl,%al
4aa0(2): jz 0x31(%rip)
4aa2(3): cmp %r15,%r13
4aa5(2): jbe 0x7(%rip)
4aa7(5): mov $0x27,0x0(%r14,%r15,1)
4aac(4): lea 0x1(%r15),%rdx
4ab0(3): cmp %rdx,%r13
4ab3(2): jbe 0x8(%rip)
4ab5(6): mov $0x24,0x1(%r14,%r15,1)
4abb(4): lea 0x2(%r15),%rdx
4abf(3): cmp %rdx,%r13
4ac2(2): jbe 0x8(%rip)
4ac4(6): mov $0x27,0x2(%r14,%r15,1)
4aca(4): add $0x3,%r15
4ace(3): mov %eax,%r8d
4ad1(3): cmp %r15,%r13
4ad4(2): jbe 0x7(%rip)
4ad6(5): mov $0x5c,0x0(%r14,%r15,1)
4adb(4): add $0x1,%r15
4adf(4): add $0x1,%rbp
4ae3(5): jmp 0xfffffe8d(%rip)
4ae8(8): nop 0x0(%rax,%rax,1)
4af0(5): cmp $0x0,0xd(%rsp)
4af5(6): jnz 0x1ce(%rip)
4afb(2): xor %edx,%edx
4afd(5): test $0x1,0x78(%rsp)
4b02(6): jz 0xffffff19(%rip)
4b08(4): add $0x1,%rbp
4b0c(5): jmp 0xfffffcbc(%rip)
4b11(7): nop 0x0(%rax)
4b18(5): cmp $0x2,0x8(%rsp)
4b1d(3): setz %dl
4b20(2): xor %eax,%eax
4b22(5): jmp 0xfffffde6(%rip)
4b27(9): nop 0x0(%rax,%rax,1)
4b30(5): mov $0x7,%edx
4b35(5): mov $0x61,%ebx
4b3a(5): jmp 0xfffffeda(%rip)
4b3f(1): nop 
4b40(5): cmp $0x2,0x8(%rsp)
4b45(3): setz %dl
4b48(3): test %rbp,%rbp
4b4b(6): jnz 0xfffffdb1(%rip)
4b51(5): movzx 0xf(%rsp),%eax
4b56(2): and %dl,%al
4b58(6): jz 0xfffffdb0(%rip)
4b5e(3): mov %r11,%rbp
4b61(8): mov $0x2,0x8(%rsp)
4b69(5): jmp 0x700(%rip)
4b6e(2): nop 
4b70(5): cmp $0x2,0x8(%rsp)
4b75(3): setz %dl
4b78(3): xor %r12d,%r12d
4b7b(2): jmp 0xffffffd6(%rip)
4b7d(3): nop (%rax)
4b80(5): cmp $0x2,0x8(%rsp)
4b85(5): mov $0x20,%ebx
4b8a(3): setz %dl
4b8d(2): jmp 0xffffffc4(%rip)
4b8f(1): nop 
4b90(5): mov $0xd,%edx
4b95(5): mov $0x72,%ebx
4b9a(5): jmp 0xfffffe68(%rip)
4b9f(1): nop 
4ba0(5): mov $0xc,%edx
4ba5(5): mov $0x66,%ebx
4baa(5): jmp 0xfffffe6a(%rip)
4baf(1): nop 
4bb0(5): mov $0xb,%edx
4bb5(5): mov $0x76,%ebx
4bba(5): jmp 0xfffffe5a(%rip)
4bbf(1): nop 
4bc0(5): mov $0xa,%edx
4bc5(5): mov $0x6e,%ebx
4bca(5): jmp 0xfffffe38(%rip)
4bcf(1): nop 
4bd0(3): xor %r10d,%r10d
4bd3(5): nop 0x0(%rax,%rax,1)
4bd8(6): cmp $0x1,0x58(%rsp)
4bde(6): jnz 0x3aa(%rip)
4be4(5): mov %r11,0x38(%rsp)
4be9(5): mov %r8b,0x30(%rsp)
4bee(5): mov %r10b,0x28(%rsp)
4bf3(5): call 0xffffd35d(%rip)
4bf8(3): mov (%rax),%rcx
4bfb(3): movzx %bl,%edx
4bfe(6): movzx 0x28(%rsp),%r10d
4c04(6): movzx 0x30(%rsp),%r8d
4c0a(5): mov 0x38(%rsp),%r11
4c0f(5): mov $0x1,%edi
4c14(4): movzx 0x0(%rcx,%rdx,2),%eax
4c18(4): and $0x4000,%ax
4c1c(4): setnz %r12b
4c20(3): setz %al
4c23(4): and 0xd(%rsp),%al
4c27(2): test %al,%al
4c29(6): jnz 0x998(%rip)
4c2f(5): cmp $0x2,0x8(%rsp)
4c34(3): setz %dl
4c37(5): jmp 0xfffffcd1(%rip)
4c3c(4): nop 0x0(%rax)
4c40(4): movzx (%r9),%ebx
4c44(3): cmp $0x7e,%bl
4c47(2): jnbe 0xffffff89(%rip)
4c49(7): lea 0x121f8(%rip),%rcx
4c50(3): movzx %bl,%edx
4c53(4): movsxd 0x0(%rcx,%rdx,4),%rax
4c57(3): add %rcx,%rax
4c5a(2): jmp %rax
4c5c(4): nop 0x0(%rax)
4c60(3): xor %r10d,%r10d
4c63(5): cmp $0x0,0xd(%rsp)
4c68(6): jnz 0xfffffdf6(%rip)
4c6e(2): nop 
4c70(5): mov $0x5c,%edx
4c75(5): mov $0x5c,%ebx
4c7a(5): jmp 0xfffffd9a(%rip)
4c7f(1): nop 
4c80(5): mov $0xc,%edx
4c85(3): xor %r10d,%r10d
4c88(5): mov $0x66,%ebx
4c8d(5): jmp 0xfffffd87(%rip)
4c92(6): nop 0x0(%rax,%rax,1)
4c98(5): mov $0xa,%edx
4c9d(3): xor %r10d,%r10d
4ca0(5): mov $0x6e,%ebx
4ca5(5): jmp 0xfffffd5d(%rip)
4caa(6): nop 0x0(%rax,%rax,1)
4cb0(5): mov $0x61,%ebx
4cb5(5): jmp 0xfffffdcb(%rip)
4cba(6): nop 0x0(%rax,%rax,1)
4cc0(3): xor %r10d,%r10d
4cc3(5): cmp $0x2,0x8(%rsp)
4cc8(3): setz %dl
4ccb(5): cmp $0x0,0xf(%rsp)
4cd0(6): jnz 0xb9a(%rip)
4cd6(3): mov %r8d,%eax
4cd9(3): mov %r15,%rcx
4cdc(3): xor $0x1,%eax
4cdf(2): and %dl,%al
4ce1(2): jz 0x2f(%rip)
4ce3(3): cmp %r15,%r13
4ce6(2): jbe 0x7(%rip)
4ce8(5): mov $0x27,0x0(%r14,%r15,1)
4ced(4): lea 0x1(%r15),%rcx
4cf1(3): cmp %rcx,%r13
4cf4(2): jbe 0x8(%rip)
4cf6(6): mov $0x24,0x1(%r14,%r15,1)
4cfc(4): lea 0x2(%r15),%rcx
4d00(3): cmp %rcx,%r13
4d03(6): jnbe 0x636(%rip)
4d09(4): lea 0x3(%r15),%rcx
4d0d(3): mov %eax,%r8d
4d10(3): cmp %rcx,%r13
4d13(2): jbe 0x7(%rip)
4d15(5): mov $0x5c,0x0(%r14,%rcx,1)
4d1a(5): cmp $0x2,0x8(%rsp)
4d1f(4): lea 0x1(%rcx),%r15
4d23(6): jz 0x606(%rip)
4d29(4): lea 0x1(%rbp),%rax
4d2d(3): cmp %r11,%rax
4d30(2): jnb 0x1b(%rip)
4d32(5): mov 0x10(%rsp),%rax
4d37(5): movzx 0x1(%rax,%rbp,1),%eax
4d3c(4): mov %al,0x28(%rsp)
4d40(3): sub $0x30,%eax
4d43(2): cmp $0x9,%al
4d45(6): jbe 0x834(%rip)
4d4b(3): mov %r12d,%eax
4d4e(5): mov $0x30,%ebx
4d53(3): xor %r12d,%r12d
4d56(5): jmp 0xfffffbb2(%rip)
4d5b(5): nop 0x0(%rax,%rax,1)
4d60(5): cmp $0x2,0x8(%rsp)
4d65(3): mov %r10d,%r12d
4d68(3): setz %dl
4d6b(3): xor %r10d,%r10d
4d6e(2): xor %eax,%eax
4d70(5): jmp 0xfffffb98(%rip)
4d75(3): nop (%rax)
4d78(5): cmp $0x2,0x8(%rsp)
4d7d(3): setz %dl
4d80(3): xor %r10d,%r10d
4d83(5): jmp 0xfffffdc5(%rip)
4d88(8): nop 0x0(%rax,%rax,1)
4d90(5): cmp $0x2,0x8(%rsp)
4d95(3): setz %dl
4d98(3): xor %r10d,%r10d
4d9b(3): xor %r12d,%r12d
4d9e(5): jmp 0xfffffdb3(%rip)
4da3(5): nop 0x0(%rax,%rax,1)
4da8(5): cmp $0x2,0x8(%rsp)
4dad(3): mov %r10d,%r12d
4db0(5): mov $0x20,%ebx
4db5(3): setz %dl
4db8(3): xor %r10d,%r10d
4dbb(5): jmp 0xfffffd96(%rip)
4dc0(5): mov $0xd,%edx
4dc5(3): xor %r10d,%r10d
4dc8(5): mov $0x72,%ebx
4dcd(5): jmp 0xfffffc35(%rip)
4dd2(6): nop 0x0(%rax,%rax,1)
4dd8(5): mov $0x76,%ebx
4ddd(5): jmp 0xfffffca3(%rip)
4de2(6): nop 0x0(%rax,%rax,1)
4de8(5): mov $0x9,%edx
4ded(3): xor %r10d,%r10d
4df0(5): mov $0x74,%ebx
4df5(5): jmp 0xfffffc0d(%rip)
4dfa(6): nop 0x0(%rax,%rax,1)
4e00(5): mov $0x62,%ebx
4e05(5): jmp 0xfffffc7b(%rip)
4e0a(6): nop 0x0(%rax,%rax,1)
4e10(3): xor %r10d,%r10d
4e13(5): jmp 0xfffffa9d(%rip)
4e18(8): nop 0x0(%rax,%rax,1)
4e20(5): cmp $0x0,0xf(%rsp)
4e25(6): jnz 0x96b(%rip)
4e2b(4): add $0x1,%rbp
4e2f(3): mov %r8d,%eax
4e32(3): xor %r12d,%r12d
4e35(5): mov $0x5c,%ebx
4e3a(5): jmp 0xfffffb12(%rip)
4e3f(1): nop 
4e40(5): cmp $0x2,0x8(%rsp)
4e45(5): movzx 0xf(%rsp),%ebx
4e4a(3): mov %r8d,%r12d
4e4d(3): mov %r11,%rbp
4e50(3): setz %dl
4e53(2): mov %ebx,%eax
4e55(3): test %r15,%r15
4e58(3): setz %cl
4e5b(2): and %edx,%eax
4e5d(2): and %cl,%al
4e5f(6): jnz 0xa67(%rip)
4e65(2): mov %ebx,%eax
4e67(3): xor $0x1,%eax
4e6a(2): and %al,%dl
4e6c(6): jz 0x970(%rip)
4e72(5): cmp $0x0,0x7c(%rsp)
4e77(6): jz 0x963(%rip)
4e7d(5): cmp $0x0,0xe(%rsp)
4e82(6): jnz 0x9fb(%rip)
4e88(3): test %r13,%r13
4e8b(3): setz %al
4e8e(6): cmp $0x0,0x50(%rsp)
4e94(3): setnz %dl
4e97(2): and %dl,%al
4e99(6): jz 0xa23(%rip)
4e9f(5): mov 0x50(%rsp),%r13
4ea4(7): lea 0x11d12(%rip),%rbx
4eab(4): mov $0x27,(%r14)
4eaf(8): mov $0x2,0x8(%rsp)
4eb7(6): mov $0x1,%r15d
4ebd(9): mov $0x1,0x18(%rsp)
4ec6(5): mov $0x0,0xf(%rsp)
4ecb(5): mov %rbx,0x48(%rsp)
4ed0(4): mov %al,0x7c(%rsp)
4ed4(5): jmp 0xfffff8df(%rip)
4ed9(7): nop 0x0(%rax)
4ee0(5): cmp $0x0,0xf(%rsp)
4ee5(6): jnz 0x8ab(%rip)
4eeb(3): test %r13,%r13
4eee(6): jz 0x402(%rip)
4ef4(2): xor %edx,%edx
4ef6(6): cmp $0x0,0x50(%rsp)
4efc(6): jnz 0x3f4(%rip)
4f02(5): mov %r13,0x50(%rsp)
4f07(4): add $0x3,%r15
4f0b(2): xor %eax,%eax
4f0d(5): mov %r12b,0x7c(%rsp)
4f12(3): xor %r8d,%r8d
4f15(3): mov %rdx,%r13
4f18(5): mov $0x27,%ebx
4f1d(5): jmp 0xfffffa1c(%rip)
4f22(6): nop 0x0(%rax,%rax,1)
4f28(5): test $0x4,0x78(%rsp)
4f2d(2): jz 0x23(%rip)
4f2f(4): lea 0x2(%rbp),%rcx
4f33(3): cmp %r11,%rcx
4f36(2): jnb 0x1a(%rip)
4f38(5): mov 0x10(%rsp),%rax
4f3d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4f42(6): jz 0x790(%rip)
4f48(8): nop 0x0(%rax,%rax,1)
4f50(2): xor %edx,%edx
4f52(3): xor %r12d,%r12d
4f55(2): xor %eax,%eax
4f57(5): mov $0x3f,%ebx
4f5c(5): jmp 0xfffff9ac(%rip)
4f61(7): nop 0x0(%rax)
4f68(5): cmp $0x0,0xf(%rsp)
4f6d(6): jnz 0x823(%rip)
4f73(3): xor %r12d,%r12d
4f76(2): xor %eax,%eax
4f78(5): mov $0x3f,%ebx
4f7d(5): jmp 0xfffff9bc(%rip)
4f82(6): nop 0x0(%rax,%rax,1)
4f88(8): lea 0xa0(%rsp),%rax
4f90(4): cmp $0xffffffff,%r11
4f94(c): mov $0x0,0xa0(%rsp)
4fa0(5): mov %rax,0x28(%rsp)
4fa5(2): jnz 0x2f(%rip)
4fa7(5): mov 0x10(%rsp),%rdi
4fac(5): mov %r8b,0x40(%rsp)
4fb1(5): mov %r10b,0x38(%rsp)
4fb6(5): mov %r9,0x30(%rsp)
4fbb(5): call 0xffffcc55(%rip)
4fc0(6): movzx 0x40(%rsp),%r8d
4fc6(6): movzx 0x38(%rsp),%r10d
4fcc(3): mov %rax,%r11
4fcf(5): mov 0x30(%rsp),%r9
4fd4(8): lea 0x9c(%rsp),%rax
4fdc(2): xor %ecx,%ecx
4fde(4): mov %bl,0x7e(%rsp)
4fe2(5): mov %r8b,0x7d(%rsp)
4fe7(3): mov %rcx,%rbx
4fea(8): mov %r9,0x88(%rsp)
4ff2(5): mov %rax,0x38(%rsp)
4ff7(5): mov %r10b,0x7f(%rsp)
4ffc(8): mov %r15,0x80(%rsp)
5004(5): mov %r14,0x40(%rsp)
5009(5): mov %r13,0x70(%rsp)
500e(5): mov %r11,0x30(%rsp)
5013(5): mov 0x10(%rsp),%rax
5018(5): lea 0x0(%rbp,%rbx,1),%r14
501d(5): mov 0x30(%rsp),%rdx
5022(5): mov 0x28(%rsp),%rcx
5027(5): mov 0x38(%rsp),%rdi
502c(4): lea 0x0(%rax,%r14,1),%r13
5030(3): sub %r14,%rdx
5033(3): mov %r13,%rsi
5036(5): call 0x2afa(%rip)
503b(3): test %rax,%rax
503e(3): mov %rax,%r15
5041(2): jz 0x50(%rip)
5043(4): cmp $0xffffffff,%rax
5047(6): jz 0x61e(%rip)
504d(4): cmp $0xfffffffe,%rax
5051(6): jz 0x5a0(%rip)
5057(5): cmp $0x2,0x8(%rsp)
505c(3): setz %al
505f(4): and 0xf(%rsp),%al
5063(6): jnz 0x19d(%rip)
5069(7): mov 0x9c(%rsp),%edi
5070(5): call 0xffffceb0(%rip)
5075(5): mov 0x28(%rsp),%rdi
507a(2): test %eax,%eax
507c(5): mov $0x0,%eax
5081(4): cmove %eax,%r12d
5085(3): add %r15,%rbx
5088(5): call 0xffffce88(%rip)
508d(2): test %eax,%eax
508f(2): jz 0xffffff84(%rip)
5091(3): mov %r12d,%edx
5094(3): mov %rbx,%rdi
5097(6): movzx 0x7d(%rsp),%r8d
509d(3): xor $0x1,%edx
50a0(5): movzx 0x7e(%rsp),%ebx
50a5(6): movzx 0x7f(%rsp),%r10d
50ab(4): and 0xd(%rsp),%dl
50af(8): mov 0x80(%rsp),%r15
50b7(5): mov 0x40(%rsp),%r14
50bc(5): mov 0x70(%rsp),%r13
50c1(5): mov 0x30(%rsp),%r11
50c6(4): cmp $0x1,%rdi
50ca(6): jbe 0x601(%rip)
50d0(3): mov %rdi,%rcx
50d3(2): xor %esi,%esi
50d5(6): movzx 0xf(%rsp),%r9d
50db(3): add %rbp,%rcx
50de(5): mov 0x10(%rsp),%rdi
50e3(5): jmp 0xbb(%rip)
50e8(8): nop 0x0(%rax,%rax,1)
50f0(5): cmp $0x2,0x8(%rsp)
50f5(3): setz %al
50f8(3): test %r9b,%r9b
50fb(6): jnz 0x4b5(%rip)
5101(3): mov %r8d,%esi
5104(3): xor $0x1,%esi
5107(3): and %sil,%al
510a(2): jz 0x31(%rip)
510c(3): cmp %r15,%r13
510f(2): jbe 0x7(%rip)
5111(5): mov $0x27,0x0(%r14,%r15,1)
5116(4): lea 0x1(%r15),%rsi
511a(3): cmp %rsi,%r13
511d(2): jbe 0x8(%rip)
511f(6): mov $0x24,0x1(%r14,%r15,1)
5125(4): lea 0x2(%r15),%rsi
5129(3): cmp %rsi,%r13
512c(2): jbe 0x8(%rip)
512e(6): mov $0x27,0x2(%r14,%r15,1)
5134(4): add $0x3,%r15
5138(3): mov %eax,%r8d
513b(3): cmp %r15,%r13
513e(2): jbe 0x7(%rip)
5140(5): mov $0x5c,0x0(%r14,%r15,1)
5145(4): lea 0x1(%r15),%rax
5149(3): cmp %rax,%r13
514c(2): jbe 0xf(%rip)
514e(2): mov %ebx,%eax
5150(3): shr $0x6,%al
5153(3): add $0x30,%eax
5156(5): mov %al,0x1(%r14,%r15,1)
515b(4): lea 0x2(%r15),%rax
515f(3): cmp %rax,%r13
5162(2): jbe 0x12(%rip)
5164(2): mov %ebx,%eax
5166(3): shr $0x3,%al
5169(3): and $0x7,%eax
516c(3): add $0x30,%eax
516f(5): mov %al,0x2(%r14,%r15,1)
5174(3): and $0x7,%ebx
5177(4): add $0x1,%rbp
517b(4): add $0x3,%r15
517f(3): add $0x30,%ebx
5182(3): cmp %rcx,%rbp
5185(6): jnb 0xfffff7eb(%rip)
518b(2): mov %edx,%esi
518d(3): cmp %r15,%r13
5190(2): jbe 0x6(%rip)
5192(4): mov %bl,0x0(%r14,%r15,1)
5196(4): movzx 0x0(%rdi,%rbp,1),%ebx
519a(4): add $0x1,%r15
519e(2): test %dl,%dl
51a0(6): jnz 0xffffff50(%rip)
51a6(2): mov %esi,%eax
51a8(3): xor $0x1,%eax
51ab(3): and %r8d,%eax
51ae(3): test %r10b,%r10b
51b1(2): jz 0x10(%rip)
51b3(3): cmp %r15,%r13
51b6(2): jbe 0x7(%rip)
51b8(5): mov $0x5c,0x0(%r14,%r15,1)
51bd(4): add $0x1,%r15
51c1(4): add $0x1,%rbp
51c5(3): cmp %rcx,%rbp
51c8(6): jnb 0xfffff784(%rip)
51ce(2): test %al,%al
51d0(6): jz 0x3fe(%rip)
51d6(3): cmp %r15,%r13
51d9(2): jbe 0x7(%rip)
51db(5): mov $0x27,0x0(%r14,%r15,1)
51e0(4): lea 0x1(%r15),%rax
51e4(3): cmp %rax,%r13
51e7(2): jbe 0x8(%rip)
51e9(6): mov $0x27,0x1(%r14,%r15,1)
51ef(4): add $0x2,%r15
51f3(3): xor %r10d,%r10d
51f6(3): xor %r8d,%r8d
51f9(2): jmp 0xffffff94(%rip)
51fb(5): nop 0x0(%rax,%rax,1)
5200(4): cmp $0x1,%r15
5204(6): jz 0xfffffe65(%rip)
520a(5): mov 0x10(%rsp),%rdi
520f(4): lea 0x0(%rdi,%r15,1),%rcx
5213(5): lea 0x1(%rdi,%r14,1),%rdx
5218(4): lea 0x0(%rcx,%r14,1),%r8
521c(2): jmp 0x11(%rip)
521e(2): nop 
5220(4): add $0x1,%rdx
5224(3): cmp %rdx,%r8
5227(6): jz 0xfffffe42(%rip)
522d(3): movzx (%rdx),%ecx
5230(3): sub $0x5b,%ecx
5233(3): cmp $0x21,%cl
5236(2): jnbe 0xffffffea(%rip)
5238(5): mov $0x1,%esi
523d(3): shl/sal %cl,%rsi
5240(3): mov %rsi,%rcx
5243(a): mov $0x8589934635,%rsi
524d(3): test %rsi,%rcx
5250(2): jz 0xffffffd0(%rip)
5252(5): mov 0x40(%rsp),%r14
5257(5): mov 0x70(%rsp),%r13
525c(5): mov 0x30(%rsp),%rbp
5261(8): mov $0x2,0x8(%rsp)
5269(5): cmp $0x0,0xd(%rsp)
526e(2): jz 0x12(%rip)
5270(2): test %al,%al
5272(5): mov $0x4,%eax
5277(5): cmove 0x8(%rsp),%eax
527c(4): mov %eax,0x8(%rsp)
5280(4): sub $0x8,%rsp
5284(3): mov %rbp,%rcx
5287(3): mov %r13,%rsi
528a(4): push 0x68(%rsp)
528e(4): push 0x78(%rsp)
5292(3): mov %r14,%rdi
5295(2): push $0x0
5297(8): mov 0x98(%rsp),%r9d
529f(5): mov 0x28(%rsp),%r8d
52a4(5): mov 0x30(%rsp),%rdx
52a9(4): and $0xfd,%r9d
52ad(5): call 0xfffff433(%rip)
52b2(4): add $0x20,%rsp
52b6(3): mov %rax,%r15
52b9(8): mov 0xa8(%rsp),%rbx
52c1(9): xor $0x28,%rbx
52ca(3): mov %r15,%rax
52cd(6): jnz 0x606(%rip)
52d3(7): add $0xb8,%rsp
52da(1): pop %rbx
52db(1): pop %rbp
52dc(2): pop %r12
52de(2): pop %r13
52e0(2): pop %r14
52e2(2): pop %r15
52e4(1): ret near (%rsp)
52e5(3): nop (%rax)
52e8(3): mov %r11,%rbp
52eb(5): jmp 0xffffff7e(%rip)
52f0(3): cmp %r15,%r13
52f3(2): jbe 0x7(%rip)
52f5(5): mov $0x27,0x0(%r14,%r15,1)
52fa(4): lea 0x1(%r15),%rax
52fe(3): cmp %rax,%r13
5301(2): jbe 0x8(%rip)
5303(6): mov $0x5c,0x1(%r14,%r15,1)
5309(4): lea 0x2(%r15),%rax
530d(3): cmp %rax,%r13
5310(6): jbe 0x5f2(%rip)
5316(3): mov %r13,%rdx
5319(6): mov $0x27,0x2(%r14,%r15,1)
531f(5): mov 0x50(%rsp),%r13
5324(5): jmp 0xfffffbde(%rip)
5329(3): mov %r12d,%eax
532c(5): mov $0x30,%ebx
5331(3): xor %r12d,%r12d
5334(5): jmp 0xfffff605(%rip)
5339(6): mov $0x27,0x2(%r14,%r15,1)
533f(5): jmp 0xfffff9ca(%rip)
5344(2): test %ebx,%ebx
5346(6): jnz 0xfffff42d(%rip)
534c(5): mov $0x1,0xd(%rsp)
5351(3): test %r13,%r13
5354(6): jnz 0x596(%rip)
535a(7): lea 0x1185c(%rip),%rax
5361(9): mov $0x0,0x50(%rsp)
536a(5): mov $0x1,0xe(%rsp)
536f(5): mov $0x0,0x7c(%rsp)
5374(3): xor %r12d,%r12d
5377(5): mov $0x0,0xf(%rsp)
537c(9): mov $0x1,0x18(%rsp)
5385(5): mov %rax,0x48(%rsp)
538a(6): mov $0x1,%r15d
5390(8): mov $0x2,0x8(%rsp)
5398(5): jmp 0xfffff41b(%rip)
539d(3): nop (%rax)
53a0(2): test %ebx,%ebx
53a2(6): jnz 0x3fb(%rip)
53a8(3): test %r13,%r13
53ab(6): jz 0x22b(%rip)
53b1(4): mov $0x22,(%r14)
53b5(5): mov $0x1,0xe(%rsp)
53ba(3): xor %r12d,%r12d
53bd(5): mov $0x0,0x7c(%rsp)
53c2(9): mov $0x0,0x50(%rsp)
53cb(7): lea 0x117e9(%rip),%rax
53d2(5): mov $0x0,0xf(%rsp)
53d7(5): mov $0x1,0xd(%rsp)
53dc(9): mov $0x1,0x18(%rsp)
53e5(6): mov $0x1,%r15d
53eb(5): mov %rax,0x48(%rsp)
53f0(5): jmp 0xfffff3c3(%rip)
53f5(7): lea 0x117bf(%rip),%rax
53fc(5): mov $0x1,0xe(%rsp)
5401(5): mov $0x0,0x7c(%rsp)
5406(3): xor %r12d,%r12d
5409(9): mov $0x0,0x50(%rsp)
5412(5): mov $0x1,0xf(%rsp)
5417(5): mov $0x1,0xd(%rsp)
541c(9): mov $0x1,0x18(%rsp)
5425(3): xor %r15d,%r15d
5428(5): mov %rax,0x48(%rsp)
542d(8): mov $0x5,0x8(%rsp)
5435(5): jmp 0xfffff37e(%rip)
543a(5): mov $0x1,0xe(%rsp)
543f(5): mov $0x0,0x7c(%rsp)
5444(3): xor %r12d,%r12d
5447(9): mov $0x0,0x50(%rsp)
5450(5): mov $0x0,0xf(%rsp)
5455(3): xor %r15d,%r15d
5458(5): mov $0x1,0xd(%rsp)
545d(9): mov $0x0,0x18(%rsp)
5466(9): mov $0x0,0x48(%rsp)
546f(5): jmp 0xfffff344(%rip)
5474(5): cmp $0xa,0x8(%rsp)
5479(2): jz 0x58(%rip)
547b(7): lea 0x1173d(%rip),%rsi
5482(2): xor %edi,%edi
5484(5): mov $0x5,%edx
5489(5): call 0xffffc767(%rip)
548e(3): mov %rax,%rcx
5491(5): mov %rax,0x68(%rsp)
5496(7): lea 0x11722(%rip),%rax
549d(3): cmp %rax,%rcx
54a0(6): jz 0x39e(%rip)
54a6(7): lea 0x11710(%rip),%rsi
54ad(2): xor %edi,%edi
54af(5): mov $0x5,%edx
54b4(5): call 0xffffc73c(%rip)
54b9(3): mov %rax,%rcx
54bc(5): mov %rax,0x60(%rsp)
54c1(7): lea 0x116f5(%rip),%rax
54c8(3): cmp %rax,%rcx
54cb(6): jz 0x389(%rip)
54d1(3): xor %r15d,%r15d
54d4(2): test %ebx,%ebx
54d6(6): jz 0x1c7(%rip)
54dc(2): test %ebx,%ebx
54de(5): mov 0x60(%rsp),%rbx
54e3(5): setnz 0xf(%rsp)
54e8(3): xor %r12d,%r12d
54eb(3): mov %rbx,%rdi
54ee(5): call 0xffffc722(%rip)
54f3(5): mov %rbx,0x48(%rsp)
54f8(5): mov %rax,0x18(%rsp)
54fd(5): mov $0x1,0xe(%rsp)
5502(5): mov $0x0,0x7c(%rsp)
5507(9): mov $0x0,0x50(%rsp)
5510(5): mov $0x1,0xd(%rsp)
5515(5): jmp 0xfffff29e(%rip)
551a(5): mov $0x1,0xe(%rsp)
551f(5): mov $0x0,0x7c(%rsp)
5524(3): xor %r12d,%r12d
5527(9): mov $0x0,0x50(%rsp)
5530(5): mov $0x0,0xf(%rsp)
5535(3): xor %r15d,%r15d
5538(5): mov $0x0,0xd(%rsp)
553d(9): mov $0x0,0x18(%rsp)
5546(9): mov $0x0,0x48(%rsp)
554f(5): jmp 0xfffff264(%rip)
5554(5): mov $0x1,0xe(%rsp)
5559(5): mov $0x0,0x7c(%rsp)
555e(3): xor %r12d,%r12d
5561(9): mov $0x0,0x50(%rsp)
556a(5): mov $0x1,0xf(%rsp)
556f(5): mov $0x1,0xd(%rsp)
5574(5): jmp 0xfffff21f(%rip)
5579(3): cmp %r15,%r13
557c(2): jbe 0x7(%rip)
557e(5): mov $0x30,0x0(%r14,%r15,1)
5583(4): lea 0x2(%rcx),%rax
5587(3): cmp %rax,%r13
558a(2): jbe 0x8(%rip)
558c(6): mov $0x30,0x2(%r14,%rcx,1)
5592(3): mov %r12d,%eax
5595(4): lea 0x3(%rcx),%r15
5599(3): xor %r12d,%r12d
559c(5): mov $0x30,%ebx
55a1(5): jmp 0xfffff367(%rip)
55a6(a): nop 0x0(%rax,%rax,1)
55b0(5): movzx 0xf(%rsp),%ebx
55b5(3): mov %r11,%rbp
55b8(4): mov %bl,0xd(%rsp)
55bc(5): jmp 0xfffffcad(%rip)
55c1(5): movzx 0xd(%rsp),%edx
55c6(3): xor %r12d,%r12d
55c9(5): jmp 0xfffffb07(%rip)
55ce(3): xor %r10d,%r10d
55d1(5): jmp 0xfffffbbc(%rip)
55d6(9): mov $0x0,0x50(%rsp)
55df(5): mov $0x1,0xe(%rsp)
55e4(3): xor %r12d,%r12d
55e7(5): mov $0x0,0x7c(%rsp)
55ec(5): jmp 0xfffffddf(%rip)
55f1(5): mov 0x30(%rsp),%r11
55f6(3): mov %r14,%rsi
55f9(3): mov %r13,%rcx
55fc(3): mov %rbx,%rax
55ff(3): mov %rbx,%rdi
5602(6): movzx 0x7d(%rsp),%r8d
5608(5): movzx 0x7e(%rsp),%ebx
560d(8): mov 0x88(%rsp),%r9
5615(3): cmp %r11,%rsi
5618(6): movzx 0x7f(%rsp),%r10d
561e(8): mov 0x80(%rsp),%r15
5626(5): mov 0x40(%rsp),%r14
562b(5): mov 0x70(%rsp),%r13
5630(2): jnb 0x28(%rip)
5632(3): cmp $0x0,(%rcx)
5635(2): jnz 0x12(%rip)
5637(2): jmp 0x21(%rip)
5639(7): nop 0x0(%rax)
5640(5): cmp $0x0,0x0(%r9,%rax,1)
5645(2): jz 0x10(%rip)
5647(4): add $0x1,%rax
564b(5): lea 0x0(%rbp,%rax,1),%rdx
5650(3): cmp %rdx,%r11
5653(2): jnbe 0xffffffed(%rip)
5655(3): mov %rax,%rdi
5658(5): movzx 0xd(%rsp),%edx
565d(3): xor %r12d,%r12d
5660(5): jmp 0xfffffa66(%rip)
5665(3): mov %rbx,%rdi
5668(6): movzx 0x7d(%rsp),%r8d
566e(5): movzx 0x7e(%rsp),%ebx
5673(6): movzx 0x7f(%rsp),%r10d
5679(8): mov 0x80(%rsp),%r15
5681(3): xor %r12d,%r12d
5684(5): mov 0x40(%rsp),%r14
5689(5): mov 0x70(%rsp),%r13
568e(5): mov 0x30(%rsp),%r11
5693(5): movzx 0xd(%rsp),%edx
5698(5): jmp 0xfffffa2e(%rip)
569d(5): mov 0x68(%rsp),%rdx
56a2(3): movzx (%rdx),%eax
56a5(2): test %al,%al
56a7(6): jz 0xfffffe35(%rip)
56ad(3): nop (%rax)
56b0(3): cmp %r15,%r13
56b3(2): jbe 0x6(%rip)
56b5(4): mov %al,0x0(%r14,%r15,1)
56b9(4): add $0x1,%r15
56bd(5): movzx 0x0(%rdx,%r15,1),%eax
56c2(2): test %al,%al
56c4(2): jnz 0xffffffec(%rip)
56c6(5): jmp 0xfffffe16(%rip)
56cb(2): mov %edx,%eax
56cd(5): jmp 0xfffff55a(%rip)
56d2(4): movzx 0x0(%rax,%rcx,1),%ebx
56d6(3): cmp $0x3e,%bl
56d9(6): jnbe 0xfffff877(%rip)
56df(a): mov $0x8070630310989004800,%rax
56e9(4): bt %rbx,%rax
56ed(6): jnb 0xfffff863(%rip)
56f3(5): cmp $0x0,0xf(%rsp)
56f8(6): jnz 0x1ea(%rip)
56fe(3): cmp %r15,%r13
5701(2): jbe 0x7(%rip)
5703(5): mov $0x3f,0x0(%r14,%r15,1)
5708(4): lea 0x1(%r15),%rax
570c(3): cmp %rax,%r13
570f(2): jbe 0x8(%rip)
5711(6): mov $0x22,0x1(%r14,%r15,1)
5717(4): lea 0x2(%r15),%rax
571b(3): cmp %rax,%r13
571e(2): jbe 0x8(%rip)
5720(6): mov $0x22,0x2(%r14,%r15,1)
5726(4): lea 0x3(%r15),%rax
572a(3): cmp %rax,%r13
572d(2): jbe 0x8(%rip)
572f(6): mov $0x3f,0x3(%r14,%r15,1)
5735(4): add $0x4,%r15
5739(2): xor %edx,%edx
573b(3): xor %r12d,%r12d
573e(2): xor %eax,%eax
5740(3): mov %rcx,%rbp
5743(5): jmp 0xfffff1c5(%rip)
5748(2): test %ebx,%ebx
574a(6): jz 0x18e(%rip)
5750(7): lea 0x11466(%rip),%rax
5757(5): mov $0x1,0xe(%rsp)
575c(5): mov $0x0,0x7c(%rsp)
5761(3): xor %r12d,%r12d
5764(9): mov $0x0,0x50(%rsp)
576d(5): mov $0x1,0xf(%rsp)
5772(5): mov $0x0,0xd(%rsp)
5777(9): mov $0x1,0x18(%rsp)
5780(3): xor %r15d,%r15d
5783(5): mov %rax,0x48(%rsp)
5788(5): jmp 0xfffff02b(%rip)
578d(3): nop (%rax)
5790(3): mov %r11,%rbp
5793(5): movzx 0xf(%rsp),%eax
5798(5): jmp 0xfffffad1(%rip)
579d(7): lea 0x11417(%rip),%rax
57a4(5): mov $0x1,0xe(%rsp)
57a9(5): mov $0x0,0x7c(%rsp)
57ae(3): xor %r12d,%r12d
57b1(9): mov $0x0,0x50(%rsp)
57ba(5): mov $0x1,0xf(%rsp)
57bf(5): mov $0x1,0xd(%rsp)
57c4(9): mov $0x1,0x18(%rsp)
57cd(3): xor %r15d,%r15d
57d0(5): mov %rax,0x48(%rsp)
57d5(5): jmp 0xffffefde(%rip)
57da(2): mov %edx,%eax
57dc(5): mov 0x48(%rsp),%rbx
57e1(3): test %rbx,%rbx
57e4(2): jz 0x2e(%rip)
57e6(2): test %al,%al
57e8(2): jz 0x2a(%rip)
57ea(3): movzx (%rbx),%ecx
57ed(3): mov %rbx,%rax
57f0(2): test %cl,%cl
57f2(2): jz 0x20(%rip)
57f4(3): mov %r15,%rdx
57f7(3): sub %r15,%rax
57fa(3): cmp %rdx,%r13
57fd(2): jbe 0x6(%rip)
57ff(4): mov %cl,0x0(%r14,%rdx,1)
5803(4): add $0x1,%rdx
5807(4): movzx 0x0(%rax,%rdx,1),%ecx
580b(2): test %cl,%cl
580d(2): jnz 0xffffffed(%rip)
580f(3): mov %rdx,%r15
5812(3): cmp %r15,%r13
5815(6): jbe 0xfffffaa4(%rip)
581b(5): mov $0x0,0x0(%r14,%r15,1)
5820(5): jmp 0xfffffa99(%rip)
5825(5): cmp $0x2,0x8(%rsp)
582a(5): movzx 0xf(%rsp),%ebx
582f(3): mov %r11,%rbp
5832(3): setz %al
5835(4): mov %bl,0xd(%rsp)
5839(5): jmp 0xfffffa30(%rip)
583e(4): mov 0x8(%rsp),%esi
5842(3): mov %rcx,%rdi
5845(5): call 0xffffedab(%rip)
584a(5): mov %rax,0x68(%rsp)
584f(5): jmp 0xfffffc57(%rip)
5854(4): mov 0x8(%rsp),%esi
5858(3): mov %rcx,%rdi
585b(5): call 0xffffed95(%rip)
5860(5): mov %rax,0x60(%rsp)
5865(5): jmp 0xfffffc6c(%rip)
586a(5): movzx 0xf(%rsp),%ebx
586f(3): mov %r11,%rbp
5872(2): mov %edx,%eax
5874(4): mov %bl,0xd(%rsp)
5878(5): jmp 0xfffff9f1(%rip)
587d(4): sub $0x8,%rsp
5881(6): mov $0x5,%r8d
5887(3): mov %r11,%rcx
588a(4): push 0x68(%rsp)
588e(4): push 0x78(%rsp)
5892(3): mov %r14,%rdi
5895(4): push 0x38(%rsp)
5899(8): mov 0x98(%rsp),%r9d
58a1(5): mov 0x30(%rsp),%rdx
58a6(5): mov 0x70(%rsp),%rsi
58ab(5): call 0xffffee35(%rip)
58b0(4): add $0x20,%rsp
58b4(3): mov %rax,%r15
58b7(5): jmp 0xfffffa02(%rip)
58bc(5): movzx 0x7c(%rsp),%eax
58c1(5): jmp 0xffffff1b(%rip)
58c6(8): mov $0x2,0x8(%rsp)
58ce(5): jmp 0xfffff99b(%rip)
58d3(5): call 0xffffc34d(%rip)
58d8(5): mov $0x0,0xd(%rsp)
58dd(5): jmp 0xfffffa74(%rip)
58e2(3): mov %r11,%rbp
58e5(5): jmp 0xfffff99b(%rip)
58ea(5): mov $0x1,0xe(%rsp)
58ef(2): xor %eax,%eax
58f1(3): xor %r12d,%r12d
58f4(9): mov $0x0,0x50(%rsp)
58fd(5): jmp 0xfffff5a7(%rip)
5902(3): mov %r13,%rdx
5905(5): mov 0x50(%rsp),%r13
590a(5): jmp 0xfffff5f8(%rip)
590f(5): call 0xffffc201(%rip)

"quotearg_n_options" :
5920(2): push %r15
5922(2): push %r14
5924(3): movsxd %edi,%r15
5927(2): push %r13
5929(2): push %r12
592b(3): mov %rdx,%r14
592e(1): push %rbp
592f(1): push %rbx
5930(3): mov %rcx,%rbp
5933(4): sub $0x28,%rsp
5937(5): mov %rsi,0x8(%rsp)
593c(5): call 0xffffc1e4(%rip)
5941(3): mov %rax,%r13
5944(2): mov (%rax),%eax
5946(3): test %r15d,%r15d
5949(7): mov 0x216730(%rip),%rbx
5950(4): mov %eax,0x18(%rsp)
5954(6): js 0x16d(%rip)
595a(7): cmp %r15d,0x216717(%rip)
5961(2): jnle 0x64(%rip)
5963(7): cmp $0x7fffffff,%r15d
596a(6): jz 0x15c(%rip)
5970(4): lea 0x1(%r15),%r12d
5974(7): lea 0x216715(%rip),%rax
597b(3): movsxd %r12d,%rsi
597e(4): shl/sal $0x4,%rsi
5982(3): cmp %rax,%rbx
5985(6): jz 0x11b(%rip)
598b(3): mov %rbx,%rdi
598e(5): call 0xfe2(%rip)
5993(3): mov %rax,%rbx
5996(7): mov %rax,0x2166e3(%rip)
599d(7): movsxd 0x2166d4(%rip),%rdi
59a4(3): mov %r12d,%edx
59a7(2): xor %esi,%esi
59a9(2): sub %edi,%edx
59ab(4): shl/sal $0x4,%rdi
59af(3): movsxd %edx,%rdx
59b2(3): add %rbx,%rdi
59b5(4): shl/sal $0x4,%rdx
59b9(5): call 0xffffc2f7(%rip)
59be(7): mov %r12d,0x2166b3(%rip)
59c5(3): mov 0x4(%rbp),%eax
59c8(4): shl/sal $0x4,%r15
59cc(4): sub $0x8,%rsp
59d0(3): add %r15,%rbx
59d3(4): lea 0x8(%rbp),%r15
59d7(4): mov 0x0(%rbp),%r8d
59db(3): mov (%rbx),%r11
59de(4): mov 0x8(%rbx),%r12
59e2(3): mov %r14,%rcx
59e5(3): or $0x1,%eax
59e8(4): mov %eax,0x24(%rsp)
59ec(3): push 0x30(%rbp)
59ef(3): mov %eax,%r9d
59f2(3): push 0x28(%rbp)
59f5(2): push %r15
59f7(3): mov %r11,%rsi
59fa(5): mov 0x28(%rsp),%rdx
59ff(3): mov %r12,%rdi
5a02(5): mov %r11,0x30(%rsp)
5a07(5): call 0xffffecd9(%rip)
5a0c(4): add $0x20,%rsp
5a10(5): mov 0x10(%rsp),%r11
5a15(3): cmp %rax,%r11
5a18(2): jnbe 0x69(%rip)
5a1a(4): lea 0x1(%rax),%rsi
5a1e(7): lea 0x21681b(%rip),%rax
5a25(3): cmp %rax,%r12
5a28(3): mov %rsi,(%rbx)
5a2b(2): jz 0x14(%rip)
5a2d(3): mov %r12,%rdi
5a30(5): mov %rsi,0x10(%rsp)
5a35(5): call 0xffffc0cb(%rip)
5a3a(5): mov 0x10(%rsp),%rsi
5a3f(3): mov %rsi,%rdi
5a42(5): mov %rsi,0x10(%rsp)
5a47(5): call 0xec9(%rip)
5a4c(4): sub $0x8,%rsp
5a50(4): mov %rax,0x8(%rbx)
5a54(4): mov 0x0(%rbp),%r8d
5a58(3): push 0x30(%rbp)
5a5b(3): push 0x28(%rbp)
5a5e(3): mov %r14,%rcx
5a61(2): push %r15
5a63(5): mov 0x3c(%rsp),%r9d
5a68(3): mov %rax,%rdi
5a6b(5): mov 0x28(%rsp),%rdx
5a70(5): mov 0x30(%rsp),%rsi
5a75(3): mov %rax,%r12
5a78(5): call 0xffffec68(%rip)
5a7d(4): add $0x20,%rsp
5a81(4): mov 0x18(%rsp),%eax
5a85(4): mov %eax,0x0(%r13)
5a89(4): add $0x28,%rsp
5a8d(3): mov %r12,%rax
5a90(1): pop %rbx
5a91(1): pop %rbp
5a92(2): pop %r12
5a94(2): pop %r13
5a96(2): pop %r14
5a98(2): pop %r15
5a9a(1): ret near (%rsp)
5a9b(5): nop 0x0(%rax,%rax,1)
5aa0(2): xor %edi,%edi
5aa2(5): call 0xece(%rip)
5aa7(8): movdqa 0x2165e1(%rip),%xmm0
5aaf(3): mov %rax,%rbx
5ab2(7): mov %rax,0x2165c7(%rip)
5ab9(3): movups %xmm0,(%rax)
5abc(5): jmp 0xfffffee1(%rip)
5ac1(5): call 0xffffc04f(%rip)
5ac6(5): call 0xffffdd4a(%rip)

"clone_quoting_options" :
5ad0(2): push %r12
5ad2(1): push %rbp
5ad3(1): push %rbx
5ad4(3): mov %rdi,%rbx
5ad7(5): call 0xffffc049(%rip)
5adc(3): mov (%rax),%r12d
5adf(3): mov %rax,%rbp
5ae2(7): lea 0x216857(%rip),%rax
5ae9(3): test %rbx,%rbx
5aec(5): mov $0x38,%esi
5af1(4): cmove %rax,%rbx
5af5(3): mov %rbx,%rdi
5af8(5): call 0x1018(%rip)
5afd(4): mov %r12d,0x0(%rbp)
5b01(1): pop %rbx
5b02(1): pop %rbp
5b03(2): pop %r12
5b05(1): ret near (%rsp)

"get_quoting_style" :
5b10(7): lea 0x216829(%rip),%rax
5b17(3): test %rdi,%rdi
5b1a(4): cmove %rax,%rdi
5b1e(2): mov (%rdi),%eax
5b20(1): ret near (%rsp)

"set_quoting_style" :
5b30(7): lea 0x216809(%rip),%rax
5b37(3): test %rdi,%rdi
5b3a(4): cmove %rax,%rdi
5b3e(2): mov %esi,(%rdi)
5b40(1): ret near (%rsp)

"set_char_quoting" :
5b50(7): lea 0x2167e9(%rip),%rax
5b57(3): test %rdi,%rdi
5b5a(2): mov %esi,%ecx
5b5c(4): cmove %rax,%rdi
5b60(2): mov %esi,%eax
5b62(3): and $0x1f,%ecx
5b65(3): shr $0x5,%al
5b68(3): movzx %al,%eax
5b6b(5): lea 0x8(%rdi,%rax,4),%rdi
5b70(2): mov (%rdi),%esi
5b72(2): mov %esi,%eax
5b74(2): shr %cl,%eax
5b76(2): xor %eax,%edx
5b78(3): and $0x1,%eax
5b7b(3): and $0x1,%edx
5b7e(2): shl/sal %cl,%edx
5b80(2): xor %esi,%edx
5b82(2): mov %edx,(%rdi)
5b84(1): ret near (%rsp)

"set_quoting_flags" :
5b90(7): lea 0x2167a9(%rip),%rax
5b97(3): test %rdi,%rdi
5b9a(4): cmove %rax,%rdi
5b9e(3): mov 0x4(%rdi),%eax
5ba1(3): mov %esi,0x4(%rdi)
5ba4(1): ret near (%rsp)

"set_custom_quoting" :
5bb0(7): lea 0x216789(%rip),%rax
5bb7(3): test %rdi,%rdi
5bba(4): cmove %rax,%rdi
5bbe(3): test %rsi,%rsi
5bc1(6): mov $0xa,(%rdi)
5bc7(2): jz 0x10(%rip)
5bc9(3): test %rdx,%rdx
5bcc(2): jz 0xb(%rip)
5bce(4): mov %rsi,0x28(%rdi)
5bd2(4): mov %rdx,0x30(%rdi)
5bd6(1): ret near (%rsp)
5bd7(4): sub $0x8,%rsp
5bdb(5): call 0xffffbf35(%rip)

"quotearg_buffer" :
5be0(2): push %r15
5be2(2): push %r14
5be4(7): lea 0x216755(%rip),%rax
5beb(2): push %r13
5bed(2): push %r12
5bef(3): mov %rdi,%r13
5bf2(1): push %rbp
5bf3(1): push %rbx
5bf4(3): mov %r8,%rbx
5bf7(3): mov %rsi,%r14
5bfa(3): mov %rdx,%r15
5bfd(4): sub $0x18,%rsp
5c01(3): test %r8,%r8
5c04(4): cmove %rax,%rbx
5c08(5): mov %rcx,0x8(%rsp)
5c0d(5): call 0xffffbf13(%rip)
5c12(3): mov (%rax),%r12d
5c15(3): mov %rax,%rbp
5c18(4): lea 0x8(%rbx),%rax
5c1c(4): sub $0x8,%rsp
5c20(4): mov 0x4(%rbx),%r9d
5c24(3): push 0x30(%rbx)
5c27(3): mov (%rbx),%r8d
5c2a(3): push 0x28(%rbx)
5c2d(3): mov %r15,%rdx
5c30(1): push %rax
5c31(5): mov 0x28(%rsp),%rcx
5c36(3): mov %r14,%rsi
5c39(3): mov %r13,%rdi
5c3c(5): call 0xffffeaa4(%rip)
5c41(4): mov %r12d,0x0(%rbp)
5c45(4): add $0x38,%rsp
5c49(1): pop %rbx
5c4a(1): pop %rbp
5c4b(2): pop %r12
5c4d(2): pop %r13
5c4f(2): pop %r14
5c51(2): pop %r15
5c53(1): ret near (%rsp)

"quotearg_alloc_mem" :
5c60(2): push %r15
5c62(2): push %r14
5c64(7): lea 0x2166d5(%rip),%rax
5c6b(2): push %r13
5c6d(2): push %r12
5c6f(3): mov %rdx,%r12
5c72(1): push %rbp
5c73(1): push %rbx
5c74(3): mov %rcx,%rbx
5c77(3): mov %rdi,%r14
5c7a(3): mov %rsi,%r15
5c7d(4): sub $0x38,%rsp
5c81(3): test %rcx,%rcx
5c84(4): cmove %rax,%rbx
5c88(2): xor %ebp,%ebp
5c8a(5): call 0xffffbe96(%rip)
5c8f(3): test %r12,%r12
5c92(3): mov %rax,%r13
5c95(2): mov (%rax),%eax
5c97(4): setz %bpl
5c9b(3): or 0x4(%rbx),%ebp
5c9e(4): lea 0x8(%rbx),%r10
5ca2(4): sub $0x8,%rsp
5ca6(3): mov (%rbx),%r8d
5ca9(3): mov %r15,%rcx
5cac(4): mov %eax,0x14(%rsp)
5cb0(3): push 0x30(%rbx)
5cb3(3): mov %r14,%rdx
5cb6(3): push 0x28(%rbx)
5cb9(2): push %r10
5cbb(2): xor %esi,%esi
5cbd(3): mov %ebp,%r9d
5cc0(2): xor %edi,%edi
5cc2(5): mov %r10,0x40(%rsp)
5cc7(5): call 0xffffea19(%rip)
5ccc(4): lea 0x1(%rax),%rsi
5cd0(5): mov %rax,0x48(%rsp)
5cd5(4): add $0x20,%rsp
5cd9(3): mov %rsi,%rdi
5cdc(5): mov %rsi,0x18(%rsp)
5ce1(5): call 0xc2f(%rip)
5ce6(5): mov %rax,0x10(%rsp)
5ceb(4): sub $0x8,%rsp
5cef(3): push 0x30(%rbx)
5cf2(3): push 0x28(%rbx)
5cf5(5): mov 0x38(%rsp),%r10
5cfa(3): mov %ebp,%r9d
5cfd(3): mov (%rbx),%r8d
5d00(3): mov %r15,%rcx
5d03(3): mov %r14,%rdx
5d06(3): mov %rax,%rdi
5d09(2): push %r10
5d0b(5): mov 0x38(%rsp),%rsi
5d10(5): call 0xffffe9d0(%rip)
5d15(4): mov 0x2c(%rsp),%eax
5d19(4): add $0x20,%rsp
5d1d(3): test %r12,%r12
5d20(4): mov %eax,0x0(%r13)
5d24(2): jz 0xb(%rip)
5d26(5): mov 0x28(%rsp),%r11
5d2b(4): mov %r11,(%r12)
5d2f(5): mov 0x10(%rsp),%rax
5d34(4): add $0x38,%rsp
5d38(1): pop %rbx
5d39(1): pop %rbp
5d3a(2): pop %r12
5d3c(2): pop %r13
5d3e(2): pop %r14
5d40(2): pop %r15
5d42(1): ret near (%rsp)

"quotearg_alloc" :
5d50(3): mov %rdx,%rcx
5d53(2): xor %edx,%edx
5d55(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5d60(6): mov 0x216312(%rip),%eax
5d66(2): push %r12
5d68(7): mov 0x216311(%rip),%r12
5d6f(1): push %rbp
5d70(1): push %rbx
5d71(3): cmp $0x1,%eax
5d74(2): jle 0x2d(%rip)
5d76(3): sub $0x2,%eax
5d79(5): lea 0x18(%r12),%rbx
5d7e(4): shl/sal $0x4,%rax
5d82(5): lea 0x28(%r12,%rax,1),%rbp
5d87(9): nop 0x0(%rax,%rax,1)
5d90(3): mov (%rbx),%rdi
5d93(4): add $0x10,%rbx
5d97(5): call 0xffffbd69(%rip)
5d9c(3): cmp %rbp,%rbx
5d9f(2): jnz 0xfffffff1(%rip)
5da1(5): mov 0x8(%r12),%rdi
5da6(7): lea 0x216493(%rip),%rbx
5dad(3): cmp %rbx,%rdi
5db0(2): jz 0x19(%rip)
5db2(5): call 0xffffbd4e(%rip)
5db7(b): mov $0x100,0x2162ce(%rip)
5dc2(7): mov %rbx,0x2162cf(%rip)
5dc9(7): lea 0x2162c0(%rip),%rbx
5dd0(3): cmp %rbx,%r12
5dd3(2): jz 0x11(%rip)
5dd5(3): mov %r12,%rdi
5dd8(5): call 0xffffbd28(%rip)
5ddd(7): mov %rbx,0x21629c(%rip)
5de4(1): pop %rbx
5de5(a): mov $0x1,0x216289(%rip)
5def(1): pop %rbp
5df0(2): pop %r12
5df2(1): ret near (%rsp)

"quotearg_n" :
5e00(7): lea 0x216539(%rip),%rcx
5e07(7): mov $0xffffffff,%rdx
5e0e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5e20(7): lea 0x216519(%rip),%rcx
5e27(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5e30(7): lea 0x216509(%rip),%rcx
5e37(3): mov %rdi,%rsi
5e3a(7): mov $0xffffffff,%rdx
5e41(2): xor %edi,%edi
5e43(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5e50(7): lea 0x2164e9(%rip),%rcx
5e57(3): mov %rsi,%rdx
5e5a(3): mov %rdi,%rsi
5e5d(2): xor %edi,%edi
5e5f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5e70(4): sub $0x48,%rsp
5e74(3): mov %rdx,%rax
5e77(9): mov $0x28,%rdx
5e80(5): mov %rdx,0x38(%rsp)
5e85(2): xor %edx,%edx
5e87(3): cmp $0xa,%esi
5e8a(2): jz 0x6a(%rip)
5e8c(3): mov %esi,(%rsp)
5e8f(3): mov %rsp,%rcx
5e92(7): mov $0xffffffff,%rdx
5e99(3): mov %rax,%rsi
5e9c(9): mov $0x0,0x4(%rsp)
5ea5(9): mov $0x0,0xc(%rsp)
5eae(9): mov $0x0,0x14(%rsp)
5eb7(9): mov $0x0,0x1c(%rsp)
5ec0(9): mov $0x0,0x24(%rsp)
5ec9(9): mov $0x0,0x2c(%rsp)
5ed2(8): mov $0x0,0x34(%rsp)
5eda(5): call 0xfffffa46(%rip)
5edf(5): mov 0x38(%rsp),%rcx
5ee4(9): xor $0x28,%rcx
5eed(2): jnz 0xc(%rip)
5eef(4): add $0x48,%rsp
5ef3(1): ret near (%rsp)
5ef4(5): call 0xffffbc1c(%rip)
5ef9(5): call 0xffffbd27(%rip)

"quotearg_n_style_mem" :
5f00(4): sub $0x48,%rsp
5f04(3): mov %rdx,%rax
5f07(3): mov %rcx,%rdx
5f0a(9): mov $0x28,%rcx
5f13(5): mov %rcx,0x38(%rsp)
5f18(2): xor %ecx,%ecx
5f1a(3): cmp $0xa,%esi
5f1d(2): jz 0x63(%rip)
5f1f(3): mov %esi,(%rsp)
5f22(3): mov %rsp,%rcx
5f25(3): mov %rax,%rsi
5f28(9): mov $0x0,0x4(%rsp)
5f31(9): mov $0x0,0xc(%rsp)
5f3a(9): mov $0x0,0x14(%rsp)
5f43(9): mov $0x0,0x1c(%rsp)
5f4c(9): mov $0x0,0x24(%rsp)
5f55(9): mov $0x0,0x2c(%rsp)
5f5e(8): mov $0x0,0x34(%rsp)
5f66(5): call 0xfffff9ba(%rip)
5f6b(5): mov 0x38(%rsp),%rdx
5f70(9): xor $0x28,%rdx
5f79(2): jnz 0xc(%rip)
5f7b(4): add $0x48,%rsp
5f7f(1): ret near (%rsp)
5f80(5): call 0xffffbb90(%rip)
5f85(5): call 0xffffbc9b(%rip)

"quotearg_style" :
5f90(3): mov %rsi,%rdx
5f93(2): mov %edi,%esi
5f95(2): xor %edi,%edi
5f97(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5fa0(3): mov %rdx,%rcx
5fa3(3): mov %rsi,%rdx
5fa6(2): mov %edi,%esi
5fa8(2): xor %edi,%edi
5faa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5fb0(4): sub $0x48,%rsp
5fb4(2): mov %edx,%ecx
5fb6(9): mov $0x28,%rax
5fbf(5): mov %rax,0x38(%rsp)
5fc4(2): xor %eax,%eax
5fc6(7): mov 0x2163a3(%rip),%rax
5fcd(3): mov %rsp,%r8
5fd0(3): and $0x1f,%ecx
5fd3(8): movdqa 0x216365(%rip),%xmm0
5fdb(5): mov %rax,0x30(%rsp)
5fe0(2): mov %edx,%eax
5fe2(4): movaps %xmm0,(%rsp)
5fe6(3): shr $0x5,%al
5fe9(3): movzx %al,%eax
5fec(5): lea 0x8(%r8,%rax,4),%r9
5ff1(8): movdqa 0x216357(%rip),%xmm0
5ff9(5): movaps %xmm0,0x10(%rsp)
5ffe(8): movdqa 0x21635a(%rip),%xmm0
6006(5): movaps %xmm0,0x20(%rsp)
600b(3): mov (%r9),%edx
600e(2): mov %edx,%eax
6010(2): shr %cl,%eax
6012(2): not %eax
6014(3): and $0x1,%eax
6017(2): shl/sal %cl,%eax
6019(3): mov %r8,%rcx
601c(2): xor %edx,%eax
601e(3): mov %rsi,%rdx
6021(3): mov %rdi,%rsi
6024(3): mov %eax,(%r9)
6027(2): xor %edi,%edi
6029(5): call 0xfffff8f7(%rip)
602e(5): mov 0x38(%rsp),%rsi
6033(9): xor $0x28,%rsi
603c(2): jnz 0x7(%rip)
603e(4): add $0x48,%rsp
6042(1): ret near (%rsp)
6043(5): call 0xffffbbdd(%rip)

"quotearg_char" :
6050(4): movsx %sil,%edx
6054(7): mov $0xffffffff,%rsi
605b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
6060(5): mov $0x3a,%edx
6065(7): mov $0xffffffff,%rsi
606c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
6080(5): mov $0x3a,%edx
6085(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
6090(4): sub $0x48,%rsp
6094(3): mov %rdx,%rax
6097(9): mov $0x28,%rdx
60a0(5): mov %rdx,0x38(%rsp)
60a5(2): xor %edx,%edx
60a7(3): cmp $0xa,%esi
60aa(2): jz 0x6a(%rip)
60ac(3): mov %esi,(%rsp)
60af(3): mov %rsp,%rcx
60b2(7): mov $0xffffffff,%rdx
60b9(3): mov %rax,%rsi
60bc(9): mov $0x0,0x4(%rsp)
60c5(9): mov $0x4000000,0xc(%rsp)
60ce(9): mov $0x0,0x14(%rsp)
60d7(9): mov $0x0,0x1c(%rsp)
60e0(9): mov $0x0,0x24(%rsp)
60e9(9): mov $0x0,0x2c(%rsp)
60f2(8): mov $0x0,0x34(%rsp)
60fa(5): call 0xfffff826(%rip)
60ff(5): mov 0x38(%rsp),%rcx
6104(9): xor $0x28,%rcx
610d(2): jnz 0xc(%rip)
610f(4): add $0x48,%rsp
6113(1): ret near (%rsp)
6114(5): call 0xffffb9fc(%rip)
6119(5): call 0xffffbb07(%rip)

"quotearg_n_custom_mem" :
6120(4): sub $0x48,%rsp
6124(3): mov %rcx,%r9
6127(7): mov 0x216242(%rip),%rcx
612e(8): movdqa 0x21620a(%rip),%xmm0
6136(9): mov $0x28,%rax
613f(5): mov %rax,0x38(%rsp)
6144(2): xor %eax,%eax
6146(4): movaps %xmm0,(%rsp)
614a(3): test %rsi,%rsi
614d(5): mov %rcx,0x30(%rsp)
6152(7): mov $0xa,(%rsp)
6159(8): movdqa 0x2161ef(%rip),%xmm0
6161(5): movaps %xmm0,0x10(%rsp)
6166(8): movdqa 0x2161f2(%rip),%xmm0
616e(5): movaps %xmm0,0x20(%rsp)
6173(2): jz 0x34(%rip)
6175(3): test %rdx,%rdx
6178(2): jz 0x2f(%rip)
617a(5): mov %rsi,0x28(%rsp)
617f(5): mov %rdx,0x30(%rsp)
6184(3): mov %rsp,%rcx
6187(3): mov %r8,%rdx
618a(3): mov %r9,%rsi
618d(5): call 0xfffff793(%rip)
6192(5): mov 0x38(%rsp),%rdi
6197(9): xor $0x28,%rdi
61a0(2): jnz 0xc(%rip)
61a2(4): add $0x48,%rsp
61a6(1): ret near (%rsp)
61a7(5): call 0xffffb969(%rip)
61ac(5): call 0xffffba74(%rip)

"quotearg_n_custom" :
61c0(7): mov $0xffffffff,%r8
61c7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
61d0(3): mov %rdx,%rcx
61d3(7): mov $0xffffffff,%r8
61da(3): mov %rsi,%rdx
61dd(3): mov %rdi,%rsi
61e0(2): xor %edi,%edi
61e2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
61f0(3): mov %rcx,%r8
61f3(3): mov %rdx,%rcx
61f6(3): mov %rsi,%rdx
61f9(3): mov %rdi,%rsi
61fc(2): xor %edi,%edi
61fe(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
6210(7): lea 0x215e29(%rip),%rcx
6217(5): jmp 0xfffff709(%rip)

"quote_mem" :
6220(7): lea 0x215e19(%rip),%rcx
6227(3): mov %rsi,%rdx
622a(3): mov %rdi,%rsi
622d(2): xor %edi,%edi
622f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
6240(7): lea 0x215df9(%rip),%rcx
6247(7): mov $0xffffffff,%rdx
624e(5): jmp 0xfffff6d2(%rip)

"quote" :
6260(7): lea 0x215dd9(%rip),%rcx
6267(3): mov %rdi,%rsi
626a(7): mov $0xffffffff,%rdx
6271(2): xor %edi,%edi
6273(5): jmp 0xfffff6ad(%rip)

"safe_read" :
6280(2): push %r13
6282(2): push %r12
6284(3): mov %edi,%r13d
6287(1): push %rbp
6288(1): push %rbx
6289(3): mov %rsi,%r12
628c(3): mov %rdx,%rbx
628f(4): sub $0x8,%rsp
6293(5): nop 0x0(%rax,%rax,1)
6298(3): mov %rbx,%rdx
629b(3): mov %r12,%rsi
629e(3): mov %r13d,%edi
62a1(5): call 0xffffba4f(%rip)
62a6(3): test %rax,%rax
62a9(3): mov %rax,%rbp
62ac(2): jns 0x24(%rip)
62ae(5): call 0xffffb872(%rip)
62b3(2): mov (%rax),%eax
62b5(3): cmp $0x4,%eax
62b8(2): jz 0xffffffe0(%rip)
62ba(7): cmp $0x7ff00000,%rbx
62c1(2): jbe 0xf(%rip)
62c3(3): cmp $0x16,%eax
62c6(2): jnz 0xa(%rip)
62c8(5): mov $0x7ff00000,%ebx
62cd(2): jmp 0xffffffcb(%rip)
62cf(1): nop 
62d0(4): add $0x8,%rsp
62d4(3): mov %rbp,%rax
62d7(1): pop %rbx
62d8(1): pop %rbp
62d9(2): pop %r12
62db(2): pop %r13
62dd(1): ret near (%rsp)

"dup_safer" :
62e0(5): mov $0x3,%edx
62e5(2): xor %esi,%esi
62e7(2): xor %eax,%eax
62e9(5): jmp 0x1527(%rip)

"version_etc_arn" :
62f0(2): push %r15
62f2(2): push %r14
62f4(2): push %r13
62f6(2): push %r12
62f8(3): mov %r9,%r12
62fb(1): push %rbp
62fc(1): push %rbx
62fd(3): mov %rdi,%rbp
6300(3): mov %r8,%rbx
6303(4): sub $0x28,%rsp
6307(3): test %rsi,%rsi
630a(6): jz 0x11e(%rip)
6310(3): mov %rdx,%r8
6313(7): lea 0x10d6e(%rip),%rdx
631a(3): mov %rcx,%r9
631d(2): xor %eax,%eax
631f(3): mov %rsi,%rcx
6322(5): mov $0x1,%esi
6327(5): call 0xffffbbd9(%rip)
632c(7): lea 0x10d68(%rip),%rsi
6333(2): xor %edi,%edi
6335(5): mov $0x5,%edx
633a(5): call 0xffffb8b6(%rip)
633f(7): lea 0x1107a(%rip),%rdx
6346(3): mov %rax,%rcx
6349(6): mov $0x7e3,%r8d
634f(5): mov $0x1,%esi
6354(3): mov %rbp,%rdi
6357(2): xor %eax,%eax
6359(5): call 0xffffbba7(%rip)
635e(7): lea 0x10dc3(%rip),%rsi
6365(2): xor %edi,%edi
6367(5): mov $0x5,%edx
636c(5): call 0xffffb884(%rip)
6371(3): mov %rbp,%rsi
6374(3): mov %rax,%rdi
6377(5): call 0xffffb9a9(%rip)
637c(4): cmp $0x9,%r12
6380(6): jnbe 0x340(%rip)
6386(7): lea 0x10ff7(%rip),%rdx
638d(4): movsxd 0x0(%rdx,%r12,4),%rax
6391(3): add %rdx,%rax
6394(2): jmp %rax
6396(a): nop 0x0(%rax,%rax,1)
63a0(4): mov 0x38(%rbx),%r9
63a4(4): mov 0x10(%rbx),%rax
63a8(7): lea 0x10ee9(%rip),%rsi
63af(4): mov 0x8(%rbx),%r8
63b3(5): mov $0x5,%edx
63b8(2): xor %edi,%edi
63ba(4): mov 0x30(%rbx),%r13
63be(4): mov 0x28(%rbx),%r12
63c2(5): mov %r9,0x10(%rsp)
63c7(4): mov 0x20(%rbx),%r15
63cb(4): mov 0x18(%rbx),%r14
63cf(4): mov %rax,(%rsp)
63d3(5): mov %r8,0x8(%rsp)
63d8(3): mov (%rbx),%rbx
63db(5): call 0xffffb815(%rip)
63e0(4): sub $0x8,%rsp
63e4(5): mov 0x18(%rsp),%r9
63e9(3): mov %rax,%rdx
63ec(3): mov %rbx,%rcx
63ef(5): mov $0x1,%esi
63f4(3): mov %rbp,%rdi
63f7(2): xor %eax,%eax
63f9(2): push %r9
63fb(2): push %r13
63fd(2): push %r12
63ff(2): push %r15
6401(2): push %r14
6403(5): mov 0x30(%rsp),%r9
6408(5): mov 0x38(%rsp),%r8
640d(5): call 0xffffbaf3(%rip)
6412(4): add $0x30,%rsp
6416(4): add $0x28,%rsp
641a(1): pop %rbx
641b(1): pop %rbp
641c(2): pop %r12
641e(2): pop %r13
6420(2): pop %r14
6422(2): pop %r15
6424(1): ret near (%rsp)
6425(3): nop (%rax)
6428(3): mov %rcx,%r8
642b(3): mov %rdx,%rcx
642e(7): lea 0x10c5f(%rip),%rdx
6435(5): mov $0x1,%esi
643a(2): xor %eax,%eax
643c(5): call 0xffffbac4(%rip)
6441(5): jmp 0xfffffeeb(%rip)
6446(a): nop 0x0(%rax,%rax,1)
6450(4): mov 0x40(%rbx),%r10
6454(4): mov 0x38(%rbx),%r9
6458(7): lea 0x10e69(%rip),%rsi
645f(4): mov 0x10(%rbx),%rax
6463(4): mov 0x8(%rbx),%r8
6467(5): mov $0x5,%edx
646c(4): mov 0x30(%rbx),%r13
6470(4): mov 0x28(%rbx),%r12
6474(4): mov 0x20(%rbx),%r15
6478(4): mov 0x18(%rbx),%r14
647c(3): mov (%rbx),%rbx
647f(5): mov %r10,0x18(%rsp)
6484(5): mov %r9,0x10(%rsp)
6489(4): mov %rax,(%rsp)
648d(5): mov %r8,0x8(%rsp)
6492(2): xor %edi,%edi
6494(5): call 0xffffb75c(%rip)
6499(5): mov 0x18(%rsp),%r10
649e(2): push %r10
64a0(5): jmp 0xffffff44(%rip)
64a5(3): nop (%rax)
64a8(3): mov (%rbx),%rbx
64ab(7): lea 0x10bed(%rip),%rsi
64b2(5): mov $0x5,%edx
64b7(2): xor %edi,%edi
64b9(5): call 0xffffb737(%rip)
64be(4): add $0x28,%rsp
64c2(3): mov %rbx,%rcx
64c5(3): mov %rbp,%rdi
64c8(1): pop %rbx
64c9(1): pop %rbp
64ca(2): pop %r12
64cc(2): pop %r13
64ce(2): pop %r14
64d0(2): pop %r15
64d2(3): mov %rax,%rdx
64d5(5): mov $0x1,%esi
64da(2): xor %eax,%eax
64dc(5): jmp 0xffffba24(%rip)
64e1(7): nop 0x0(%rax)
64e8(4): mov 0x8(%rbx),%r12
64ec(7): lea 0x10bbc(%rip),%rsi
64f3(3): mov (%rbx),%rbx
64f6(5): mov $0x5,%edx
64fb(2): xor %edi,%edi
64fd(5): call 0xffffb6f3(%rip)
6502(4): add $0x28,%rsp
6506(3): mov %r12,%r8
6509(3): mov %rbx,%rcx
650c(3): mov %rbp,%rdi
650f(3): mov %rax,%rdx
6512(5): mov $0x1,%esi
6517(1): pop %rbx
6518(1): pop %rbp
6519(2): pop %r12
651b(2): pop %r13
651d(2): pop %r14
651f(2): pop %r15
6521(2): xor %eax,%eax
6523(5): jmp 0xffffb9dd(%rip)
6528(8): nop 0x0(%rax,%rax,1)
6530(4): mov 0x10(%rbx),%r13
6534(4): mov 0x8(%rbx),%r12
6538(7): lea 0x10b87(%rip),%rsi
653f(3): mov (%rbx),%rbx
6542(5): mov $0x5,%edx
6547(2): xor %edi,%edi
6549(5): call 0xffffb6a7(%rip)
654e(4): add $0x28,%rsp
6552(3): mov %r13,%r9
6555(3): mov %r12,%r8
6558(3): mov %rbx,%rcx
655b(3): mov %rbp,%rdi
655e(3): mov %rax,%rdx
6561(1): pop %rbx
6562(1): pop %rbp
6563(2): pop %r12
6565(2): pop %r13
6567(2): pop %r14
6569(2): pop %r15
656b(5): mov $0x1,%esi
6570(2): xor %eax,%eax
6572(5): jmp 0xffffb98e(%rip)
6577(9): nop 0x0(%rax,%rax,1)
6580(7): lea 0x10c71(%rip),%rsi
6587(5): mov $0x5,%edx
658c(2): xor %edi,%edi
658e(4): mov 0x18(%rbx),%r14
6592(4): mov 0x10(%rbx),%r13
6596(4): mov 0x8(%rbx),%r12
659a(3): mov (%rbx),%rbx
659d(5): call 0xffffb653(%rip)
65a2(4): sub $0x8,%rsp
65a6(2): push %r14
65a8(3): mov %rax,%rdx
65ab(3): mov %r13,%r9
65ae(3): mov %r12,%r8
65b1(3): mov %rbx,%rcx
65b4(3): mov %rbp,%rdi
65b7(5): mov $0x1,%esi
65bc(2): xor %eax,%eax
65be(5): call 0xffffb942(%rip)
65c3(1): pop %rax
65c4(1): pop %rdx
65c5(4): add $0x28,%rsp
65c9(1): pop %rbx
65ca(1): pop %rbp
65cb(2): pop %r12
65cd(2): pop %r13
65cf(2): pop %r14
65d1(2): pop %r15
65d3(1): ret near (%rsp)
65d4(4): nop 0x0(%rax)
65d8(4): mov 0x20(%rbx),%r15
65dc(7): lea 0x10c35(%rip),%rsi
65e3(5): mov $0x5,%edx
65e8(2): xor %edi,%edi
65ea(4): mov 0x18(%rbx),%r14
65ee(4): mov 0x10(%rbx),%r13
65f2(4): mov 0x8(%rbx),%r12
65f6(3): mov (%rbx),%rbx
65f9(5): call 0xffffb5f7(%rip)
65fe(2): push %r15
6600(2): jmp 0xffffffa6(%rip)
6602(6): nop 0x0(%rax,%rax,1)
6608(4): mov 0x8(%rbx),%r8
660c(4): mov 0x28(%rbx),%r12
6610(7): lea 0x10c29(%rip),%rsi
6617(4): mov 0x20(%rbx),%r15
661b(4): mov 0x18(%rbx),%r14
661f(5): mov $0x5,%edx
6624(4): mov 0x10(%rbx),%r13
6628(2): xor %edi,%edi
662a(3): mov (%rbx),%rbx
662d(4): mov %r8,(%rsp)
6631(5): call 0xffffb5bf(%rip)
6636(4): sub $0x8,%rsp
663a(3): mov %r13,%r9
663d(2): push %r12
663f(2): push %r15
6641(2): push %r14
6643(5): mov 0x20(%rsp),%r8
6648(3): mov %rbx,%rcx
664b(3): mov %rax,%rdx
664e(3): mov %rbp,%rdi
6651(5): mov $0x1,%esi
6656(2): xor %eax,%eax
6658(5): call 0xffffb8a8(%rip)
665d(4): add $0x20,%rsp
6661(4): add $0x28,%rsp
6665(1): pop %rbx
6666(1): pop %rbp
6667(2): pop %r12
6669(2): pop %r13
666b(2): pop %r14
666d(2): pop %r15
666f(1): ret near (%rsp)
6670(4): mov 0x10(%rbx),%r9
6674(4): mov 0x30(%rbx),%r13
6678(7): lea 0x10be9(%rip),%rsi
667f(4): mov 0x28(%rbx),%r12
6683(4): mov 0x20(%rbx),%r15
6687(5): mov $0x5,%edx
668c(4): mov 0x18(%rbx),%r14
6690(4): mov 0x8(%rbx),%r8
6694(2): xor %edi,%edi
6696(5): mov %r9,0x8(%rsp)
669b(3): mov (%rbx),%rbx
669e(4): mov %r8,(%rsp)
66a2(5): call 0xffffb54e(%rip)
66a7(2): push %r13
66a9(2): push %r12
66ab(2): push %r15
66ad(2): push %r14
66af(5): mov 0x28(%rsp),%r9
66b4(2): jmp 0xffffff8f(%rip)
66b6(a): nop 0x0(%rax,%rax,1)
66c0(4): mov 0x40(%rbx),%r10
66c4(4): mov 0x38(%rbx),%r9
66c8(5): mov $0x5,%edx
66cd(4): mov 0x10(%rbx),%rax
66d1(4): mov 0x8(%rbx),%r8
66d5(7): lea 0x10c24(%rip),%rsi
66dc(4): mov 0x30(%rbx),%r13
66e0(4): mov 0x28(%rbx),%r12
66e4(4): mov 0x20(%rbx),%r15
66e8(4): mov 0x18(%rbx),%r14
66ec(5): mov %r10,0x18(%rsp)
66f1(5): mov %r9,0x10(%rsp)
66f6(4): mov %rax,(%rsp)
66fa(5): mov %r8,0x8(%rsp)
66ff(3): mov (%rbx),%rbx
6702(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
6710(3): xor %r9d,%r9d
6713(4): cmp $0x0,(%r8)
6717(2): jz 0x14(%rip)
6719(7): nop 0x0(%rax)
6720(4): add $0x1,%r9
6724(5): cmp $0x0,0x0(%r8,%r9,8)
6729(2): jnz 0xfffffff7(%rip)
672b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
6730(4): sub $0x68,%rsp
6734(3): mov %r8,%r10
6737(3): xor %r9d,%r9d
673a(9): mov $0x28,%rax
6743(5): mov %rax,0x58(%rsp)
6748(2): xor %eax,%eax
674a(3): mov %rsp,%r8
674d(3): nop (%rax)
6750(3): mov (%r10),%eax
6753(3): cmp $0x2f,%eax
6756(2): jnbe 0x44(%rip)
6758(3): mov %eax,%r11d
675b(4): add 0x10(%r10),%r11
675f(3): add $0x8,%eax
6762(3): mov %eax,(%r10)
6765(3): mov (%r11),%rax
6768(3): test %rax,%rax
676b(4): mov %rax,0x0(%r8,%r9,8)
676f(2): jz 0xc(%rip)
6771(4): add $0x1,%r9
6775(4): cmp $0xa,%r9
6779(2): jnz 0xffffffd7(%rip)
677b(5): call 0xfffffb75(%rip)
6780(5): mov 0x58(%rsp),%rax
6785(9): xor $0x28,%rax
678e(2): jnz 0x7(%rip)
6790(4): add $0x68,%rsp
6794(1): ret near (%rsp)
6795(5): call 0xffffb48b(%rip)
679a(4): mov 0x8(%r10),%r11
679e(4): lea 0x8(%r11),%rax
67a2(4): mov %rax,0x8(%r10)
67a6(2): jmp 0xffffffbf(%rip)

"version_etc" :
67b0(1): push %rbp
67b1(1): push %rbx
67b2(6): mov $0x20,%r10d
67b8(3): xor %r11d,%r11d
67bb(7): sub $0xb8,%rsp
67c2(9): mov $0x28,%rax
67cb(5): mov %rax,0x78(%rsp)
67d0(2): xor %eax,%eax
67d2(8): lea 0xd0(%rsp),%rax
67da(8): mov %r8,0xa0(%rsp)
67e2(8): lea 0xd0(%rsp),%rbx
67ea(5): lea 0x20(%rsp),%r8
67ef(8): mov %r9,0xa8(%rsp)
67f7(8): mov $0x20,0x8(%rsp)
67ff(5): mov %rax,0x10(%rsp)
6804(8): lea 0x80(%rsp),%rax
680c(3): xor %r9d,%r9d
680f(5): mov %rax,0x18(%rsp)
6814(3): mov %rax,%rbp
6817(9): nop 0x0(%rax,%rax,1)
6820(4): cmp $0x2f,%r10d
6824(2): jnbe 0x58(%rip)
6826(3): mov %r10d,%eax
6829(6): mov $0x1,%r11d
682f(4): add $0x8,%r10d
6833(3): add %rbp,%rax
6836(3): mov (%rax),%rax
6839(3): test %rax,%rax
683c(4): mov %rax,0x0(%r8,%r9,8)
6840(2): jz 0xc(%rip)
6842(4): add $0x1,%r9
6846(4): cmp $0xa,%r9
684a(2): jnz 0xffffffd6(%rip)
684c(3): test %r11b,%r11b
684f(2): jnz 0x26(%rip)
6851(5): call 0xfffffa9f(%rip)
6856(5): mov 0x78(%rsp),%rax
685b(9): xor $0x28,%rax
6864(2): jnz 0xc(%rip)
6866(7): add $0xb8,%rsp
686d(1): pop %rbx
686e(1): pop %rbp
686f(1): ret near (%rsp)
6870(5): call 0xffffb3b0(%rip)
6875(5): mov %r10d,0x8(%rsp)
687a(2): jmp 0xffffffd7(%rip)
687c(3): mov %rbx,%rax
687f(4): add $0x8,%rbx
6883(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6890(1): push %rbx
6891(7): lea 0x1084a(%rip),%rsi
6898(5): mov $0x5,%edx
689d(2): xor %edi,%edi
689f(5): call 0xffffb351(%rip)
68a4(7): lea 0x1084c(%rip),%rdx
68ab(3): mov %rax,%rsi
68ae(5): mov $0x1,%edi
68b3(2): xor %eax,%eax
68b5(5): call 0xffffb57b(%rip)
68ba(7): lea 0x1084c(%rip),%rsi
68c1(5): mov $0x5,%edx
68c6(2): xor %edi,%edi
68c8(5): call 0xffffb328(%rip)
68cd(7): lea 0xfeac(%rip),%rcx
68d4(7): lea 0xf7bb(%rip),%rdx
68db(3): mov %rax,%rsi
68de(5): mov $0x1,%edi
68e3(2): xor %eax,%eax
68e5(5): call 0xffffb54b(%rip)
68ea(7): mov 0x2157b7(%rip),%rbx
68f1(7): lea 0x10a48(%rip),%rsi
68f8(2): xor %edi,%edi
68fa(5): mov $0x5,%edx
68ff(5): call 0xffffb2f1(%rip)
6904(3): mov %rbx,%rsi
6907(3): mov %rax,%rdi
690a(1): pop %rbx
690b(5): jmp 0xffffb415(%rip)

"xmalloc" :
6910(1): push %rbx
6911(3): mov %rdi,%rbx
6914(5): call 0xffffb48c(%rip)
6919(3): test %rax,%rax
691c(2): jnz 0x7(%rip)
691e(3): test %rbx,%rbx
6921(2): jnz 0x4(%rip)
6923(1): pop %rbx
6924(1): ret near (%rsp)
6925(5): call 0xffffceeb(%rip)

"xnmalloc" :
6930(3): mov %rdi,%rax
6933(3): mul %rax,%rsi,%rdx
6936(3): mov %rax,%rdi
6939(3): seto %al
693c(3): test %rdi,%rdi
693f(2): js 0xc(%rip)
6941(3): movzx %al,%eax
6944(3): test %rax,%rax
6947(2): jnz 0x4(%rip)
6949(2): jmp 0xffffffc7(%rip)
694b(4): sub $0x8,%rsp
694f(5): call 0xffffcec1(%rip)

"xrealloc" :
6970(3): test %rsi,%rsi
6973(1): push %rbx
6974(3): mov %rsi,%rbx
6977(2): jnz 0x7(%rip)
6979(3): test %rdi,%rdi
697c(2): jnz 0x1c(%rip)
697e(3): mov %rbx,%rsi
6981(5): call 0xffffb47f(%rip)
6986(3): test %rax,%rax
6989(2): jnz 0x7(%rip)
698b(3): test %rbx,%rbx
698e(2): jnz 0x13(%rip)
6990(1): pop %rbx
6991(1): ret near (%rsp)
6992(6): nop 0x0(%rax,%rax,1)
6998(5): call 0xffffb168(%rip)
699d(2): xor %eax,%eax
699f(1): pop %rbx
69a0(1): ret near (%rsp)
69a1(5): call 0xffffce6f(%rip)

"xnrealloc" :
69b0(3): mov %rsi,%rax
69b3(3): mul %rax,%rdx,%rdx
69b6(3): mov %rax,%rsi
69b9(3): seto %al
69bc(3): test %rsi,%rsi
69bf(2): js 0xc(%rip)
69c1(3): movzx %al,%eax
69c4(3): test %rax,%rax
69c7(2): jnz 0x4(%rip)
69c9(2): jmp 0xffffffa7(%rip)
69cb(4): sub $0x8,%rsp
69cf(5): call 0xffffce41(%rip)

"x2nrealloc" :
69e0(3): test %rdi,%rdi
69e3(3): mov %rdx,%r9
69e6(3): mov (%rsi),%rcx
69e9(2): jz 0x37(%rip)
69eb(2): xor %edx,%edx
69ed(a): mov $0x6148914691236517204,%rax
69f7(3): div %r9,%rax
69fa(3): cmp %rcx,%rax
69fd(2): jbe 0x3e(%rip)
69ff(3): mov %rcx,%rax
6a02(3): shr $0x1,%rax
6a05(5): lea 0x1(%rax,%rcx,1),%rcx
6a0a(3): mov %rcx,(%rsi)
6a0d(4): imul %r9,%rcx
6a11(3): mov %rcx,%rsi
6a14(5): jmp 0xffffff5c(%rip)
6a19(7): nop 0x0(%rax)
6a20(3): test %rcx,%rcx
6a23(2): jz 0x25(%rip)
6a25(3): mov %rcx,%rax
6a28(3): mul %rax,%r9,%rdx
6a2b(3): seto %dl
6a2e(3): test %rax,%rax
6a31(3): movzx %dl,%edx
6a34(2): js 0x7(%rip)
6a36(3): test %rdx,%rdx
6a39(2): jz 0xffffffd1(%rip)
6a3b(4): sub $0x8,%rsp
6a3f(5): call 0xffffcdd1(%rip)
6a44(4): nop 0x0(%rax)
6a48(2): xor %edx,%edx
6a4a(5): mov $0x80,%eax
6a4f(3): xor %r8d,%r8d
6a52(3): div %r9,%rax
6a55(3): test %rax,%rax
6a58(4): setz %r8b
6a5c(4): lea 0x0(%r8,%rax,1),%rcx
6a60(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6a70(3): test %rdi,%rdi
6a73(3): mov (%rsi),%rax
6a76(2): jz 0x2a(%rip)
6a78(a): mov $0x6148914691236517203,%rdx
6a82(3): cmp %rdx,%rax
6a85(2): jnbe 0x2c(%rip)
6a87(3): mov %rax,%rdx
6a8a(3): shr $0x1,%rdx
6a8d(5): lea 0x1(%rdx,%rax,1),%rax
6a92(3): mov %rax,(%rsi)
6a95(3): mov %rax,%rsi
6a98(5): jmp 0xfffffed8(%rip)
6a9d(3): nop (%rax)
6aa0(3): test %rax,%rax
6aa3(5): mov $0x80,%edx
6aa8(4): cmove %rdx,%rax
6aac(3): test %rax,%rax
6aaf(2): jns 0xffffffe3(%rip)
6ab1(4): sub $0x8,%rsp
6ab5(5): call 0xffffcd5b(%rip)

"xzalloc" :
6ac0(1): push %rbx
6ac1(3): mov %rdi,%rbx
6ac4(5): call 0xfffffe4c(%rip)
6ac9(3): mov %rbx,%rdx
6acc(2): xor %esi,%esi
6ace(3): mov %rax,%rdi
6ad1(1): pop %rbx
6ad2(5): jmp 0xffffb1de(%rip)

"xcalloc" :
6ae0(3): mov %rdi,%rax
6ae3(4): sub $0x8,%rsp
6ae7(3): mul %rax,%rsi,%rdx
6aea(3): seto %dl
6aed(3): test %rax,%rax
6af0(2): js 0x19(%rip)
6af2(3): movzx %dl,%edx
6af5(3): test %rdx,%rdx
6af8(2): jnz 0x11(%rip)
6afa(5): call 0xffffb236(%rip)
6aff(3): test %rax,%rax
6b02(2): jz 0x7(%rip)
6b04(4): add $0x8,%rsp
6b08(1): ret near (%rsp)
6b09(5): call 0xffffcd07(%rip)

"xmemdup" :
6b10(1): push %rbp
6b11(1): push %rbx
6b12(3): mov %rdi,%rbp
6b15(3): mov %rsi,%rdi
6b18(3): mov %rsi,%rbx
6b1b(4): sub $0x8,%rsp
6b1f(5): call 0xfffffdf1(%rip)
6b24(4): add $0x8,%rsp
6b28(3): mov %rbx,%rdx
6b2b(3): mov %rbp,%rsi
6b2e(1): pop %rbx
6b2f(1): pop %rbp
6b30(3): mov %rax,%rdi
6b33(5): jmp 0xffffb23d(%rip)

"xstrdup" :
6b40(1): push %rbx
6b41(3): mov %rdi,%rbx
6b44(5): call 0xffffb0cc(%rip)
6b49(3): mov %rbx,%rdi
6b4c(4): lea 0x1(%rax),%rsi
6b50(1): pop %rbx
6b51(2): jmp 0xffffffbf(%rip)

"xnumtoimax" :
6b60(2): push %r15
6b62(2): push %r14
6b64(3): mov %rcx,%r15
6b67(2): push %r13
6b69(2): push %r12
6b6b(3): mov %rdx,%r14
6b6e(1): push %rbp
6b6f(1): push %rbx
6b70(2): mov %esi,%edx
6b72(2): xor %esi,%esi
6b74(3): mov %rdi,%r12
6b77(3): mov %r9,%r13
6b7a(4): sub $0x18,%rsp
6b7e(3): mov %rsp,%rcx
6b81(4): mov 0x50(%rsp),%ebx
6b85(9): mov $0x28,%rax
6b8e(5): mov %rax,0x8(%rsp)
6b93(2): xor %eax,%eax
6b95(5): call 0x11b(%rip)
6b9a(2): test %eax,%eax
6b9c(6): jnz 0x94(%rip)
6ba2(4): mov (%rsp),%rbp
6ba6(3): cmp %r14,%rbp
6ba9(2): jl 0x7(%rip)
6bab(3): cmp %r15,%rbp
6bae(2): jle 0x58(%rip)
6bb0(5): call 0xffffaf70(%rip)
6bb5(7): cmp $0x3fffffff,%rbp
6bbc(3): mov %rax,%r14
6bbf(6): jle 0x91(%rip)
6bc5(7): mov $0x4b,(%r14)
6bcc(3): mov %r12,%rdi
6bcf(5): call 0xfffff691(%rip)
6bd4(3): mov (%r14),%esi
6bd7(3): mov %rax,%r8
6bda(5): mov $0x0,%eax
6bdf(7): lea 0xff77(%rip),%rdx
6be6(3): mov %r13,%rcx
6be9(3): cmp $0x16,%esi
6bec(3): cmove %eax,%esi
6bef(2): test %ebx,%ebx
6bf1(5): mov $0x1,%eax
6bf6(3): cmove %eax,%ebx
6bf9(2): xor %eax,%eax
6bfb(2): mov %ebx,%edi
6bfd(5): call 0xffffb263(%rip)
6c02(4): mov (%rsp),%rbp
6c06(5): mov 0x8(%rsp),%rdx
6c0b(9): xor $0x28,%rdx
6c14(3): mov %rbp,%rax
6c17(2): jnz 0x55(%rip)
6c19(4): add $0x18,%rsp
6c1d(1): pop %rbx
6c1e(1): pop %rbp
6c1f(2): pop %r12
6c21(2): pop %r13
6c23(2): pop %r14
6c25(2): pop %r15
6c27(1): ret near (%rsp)
6c28(8): nop 0x0(%rax,%rax,1)
6c30(2): mov %eax,%ebp
6c32(5): call 0xffffaeee(%rip)
6c37(3): cmp $0x1,%ebp
6c3a(3): mov %rax,%r14
6c3d(2): jz 0xffffff88(%rip)
6c3f(3): cmp $0x3,%ebp
6c42(2): jnz 0xffffff8a(%rip)
6c44(6): mov $0x0,(%rax)
6c4a(2): jmp 0xffffff82(%rip)
6c4c(4): nop 0x0(%rax)
6c50(7): cmp $0xbfffffff,%rbp
6c57(5): mov $0x22,%eax
6c5c(5): mov $0x4b,%edx
6c61(3): cmovng %edx,%eax
6c64(3): mov %eax,(%r14)
6c67(5): jmp 0xffffff65(%rip)
6c6c(5): call 0xffffafb4(%rip)

"xdectoimax" :
6c80(4): sub $0x10,%rsp
6c84(2): push %r9
6c86(3): mov %r8,%r9
6c89(3): mov %rcx,%r8
6c8c(3): mov %rdx,%rcx
6c8f(3): mov %rsi,%rdx
6c92(5): mov $0xa,%esi
6c97(5): call 0xfffffec9(%rip)
6c9c(4): add $0x18,%rsp
6ca0(1): ret near (%rsp)

"xstrtoimax" :
6cb0(2): push %r15
6cb2(2): push %r14
6cb4(2): push %r13
6cb6(2): push %r12
6cb8(1): push %rbp
6cb9(1): push %rbx
6cba(4): sub $0x28,%rsp
6cbe(9): mov $0x28,%rax
6cc7(5): mov %rax,0x18(%rsp)
6ccc(2): xor %eax,%eax
6cce(3): cmp $0x24,%edx
6cd1(6): jnbe 0x66e(%rip)
6cd7(5): lea 0x10(%rsp),%rax
6cdc(3): test %rsi,%rsi
6cdf(3): mov %rsi,%rbx
6ce2(3): mov %rdi,%r12
6ce5(2): mov %edx,%ebp
6ce7(3): mov %rcx,%r14
6cea(4): cmove %rax,%rbx
6cee(3): mov %r8,%r15
6cf1(5): call 0xffffae2f(%rip)
6cf6(2): xor %ecx,%ecx
6cf8(2): mov %ebp,%edx
6cfa(6): mov $0x0,(%rax)
6d00(3): mov %rbx,%rsi
6d03(3): mov %r12,%rdi
6d06(3): mov %rax,%r13
6d09(5): call 0xffffaea7(%rip)
6d0e(3): mov (%rbx),%rcx
6d11(3): mov %rax,%rbp
6d14(3): cmp %r12,%rcx
6d17(2): jz 0x61(%rip)
6d19(4): mov 0x0(%r13),%eax
6d1d(2): test %eax,%eax
6d1f(2): jnz 0x41(%rip)
6d21(3): xor %r12d,%r12d
6d24(3): test %r15,%r15
6d27(2): jz 0xf(%rip)
6d29(4): movzx (%rcx),%r13d
6d2d(3): test %r13b,%r13b
6d30(6): jnz 0x83(%rip)
6d36(3): mov %rbp,(%r14)
6d39(5): mov 0x18(%rsp),%rdi
6d3e(9): xor $0x28,%rdi
6d47(3): mov %r12d,%eax
6d4a(6): jnz 0x614(%rip)
6d50(4): add $0x28,%rsp
6d54(1): pop %rbx
6d55(1): pop %rbp
6d56(2): pop %r12
6d58(2): pop %r13
6d5a(2): pop %r14
6d5c(2): pop %r15
6d5e(1): ret near (%rsp)
6d5f(1): nop 
6d60(3): cmp $0x22,%eax
6d63(6): mov $0x4,%r12d
6d69(2): jnz 0xffffffd0(%rip)
6d6b(6): mov $0x1,%r12d
6d71(2): jmp 0xffffffb3(%rip)
6d73(5): nop 0x0(%rax,%rax,1)
6d78(3): test %r15,%r15
6d7b(6): jz 0x495(%rip)
6d81(4): movzx (%rcx),%r13d
6d85(5): mov %rcx,0x8(%rsp)
6d8a(6): mov $0x4,%r12d
6d90(3): test %r13b,%r13b
6d93(2): jz 0xffffffa6(%rip)
6d95(4): movsx %r13b,%esi
6d99(3): mov %r15,%rdi
6d9c(5): call 0xffffaec4(%rip)
6da1(3): test %rax,%rax
6da4(5): mov 0x8(%rsp),%rcx
6da9(2): jz 0xffffff90(%rip)
6dab(5): mov $0x1,%ebp
6db0(3): xor %r12d,%r12d
6db3(4): movsx %r13b,%esi
6db7(3): mov %r15,%rdi
6dba(5): mov %rcx,0x8(%rsp)
6dbf(5): call 0xffffaea1(%rip)
6dc4(3): test %rax,%rax
6dc7(5): mov 0x8(%rsp),%rcx
6dcc(2): jz 0x5c(%rip)
6dce(4): lea 0xffffffbb(%r13),%eax
6dd2(2): cmp $0x2f,%al
6dd4(2): jnbe 0x64(%rip)
6dd6(a): mov $0x142129060940101,%rdx
6de0(4): bt %rax,%rdx
6de4(2): jnb 0x54(%rip)
6de6(5): mov $0x30,%esi
6deb(3): mov %r15,%rdi
6dee(5): mov %rcx,0x8(%rsp)
6df3(5): call 0xffffae6d(%rip)
6df8(3): test %rax,%rax
6dfb(5): mov 0x8(%rsp),%rcx
6e00(2): jz 0x38(%rip)
6e02(4): movzx 0x1(%rcx),%eax
6e06(2): cmp $0x44,%al
6e08(2): jz 0xe(%rip)
6e0a(2): cmp $0x69,%al
6e0c(6): jz 0x4ec(%rip)
6e12(2): cmp $0x42,%al
6e14(2): jnz 0x24(%rip)
6e16(5): mov $0x2,%edi
6e1b(5): mov $0x3e8,%eax
6e20(2): jmp 0x22(%rip)
6e22(6): nop 0x0(%rax,%rax,1)
6e28(3): mov %rbp,(%r14)
6e2b(4): or $0x2,%r12d
6e2f(5): jmp 0xffffff0a(%rip)
6e34(4): nop 0x0(%rax)
6e38(5): mov $0x1,%edi
6e3d(5): mov $0x400,%eax
6e42(4): sub $0x42,%r13d
6e46(4): cmp $0x35,%r13b
6e4a(2): jnbe 0xffffffde(%rip)
6e4c(7): lea 0x105e5(%rip),%rsi
6e53(4): movzx %r13b,%r13d
6e57(4): movsxd 0x0(%rsi,%r13,4),%rdx
6e5b(3): add %rsi,%rdx
6e5e(2): jmp %rdx
6e60(a): mov $0x-9223372036854775808,%r8
6e6a(3): movsxd %eax,%rsi
6e6d(3): mov %r8,%rax
6e70(2): cdq %rax
6e72(3): idiv %rsi,%rax
6e75(3): cmp %rax,%rbp
6e78(3): mov %rax,%r9
6e7b(6): jl 0x4aa(%rip)
6e81(a): mov $0x9223372036854775807,%r10
6e8b(3): mov %r10,%rax
6e8e(2): cdq %rax
6e90(3): idiv %rsi,%rax
6e93(3): cmp %rax,%rbp
6e96(6): jnle 0x49c(%rip)
6e9c(4): imul %rsi,%rbp
6ea0(3): cmp %rbp,%r9
6ea3(6): jnle 0x482(%rip)
6ea9(3): cmp %rbp,%rax
6eac(6): jl 0x486(%rip)
6eb2(4): imul %rsi,%rbp
6eb6(2): xor %eax,%eax
6eb8(3): or %eax,%r12d
6ebb(5): nop 0x0(%rax,%rax,1)
6ec0(3): movsxd %edi,%rax
6ec3(3): add %rax,%rcx
6ec6(3): mov %r12d,%eax
6ec9(3): or $0x2,%eax
6ecc(3): mov %rcx,(%rbx)
6ecf(3): cmp $0x0,(%rcx)
6ed2(4): cmovne %eax,%r12d
6ed6(5): jmp 0xfffffe60(%rip)
6edb(5): nop 0x0(%rax,%rax,1)
6ee0(a): mov $0x-4611686018427387904,%rax
6eea(3): cmp %rax,%rbp
6eed(6): jl 0x333(%rip)
6ef3(a): mov $0x4611686018427387903,%rax
6efd(3): cmp %rax,%rbp
6f00(6): jnle 0x3e0(%rip)
6f06(3): add %rbp,%rbp
6f09(2): jmp 0xffffffb7(%rip)
6f0b(5): nop 0x0(%rax,%rax,1)
6f10(a): mov $0x-18014398509481984,%rax
6f1a(3): cmp %rax,%rbp
6f1d(6): jl 0x303(%rip)
6f23(a): mov $0x18014398509481983,%rax
6f2d(3): cmp %rax,%rbp
6f30(6): jnle 0x3b0(%rip)
6f36(4): shl/sal $0x9,%rbp
6f3a(2): jmp 0xffffff86(%rip)
6f3c(4): nop 0x0(%rax)
6f40(3): movsxd %eax,%rsi
6f43(a): mov $0x-9223372036854775808,%rax
6f4d(6): mov $0x7,%r8d
6f53(2): cdq %rax
6f55(3): xor %r11d,%r11d
6f58(a): mov $0x9223372036854775807,%r9
6f62(3): idiv %rsi,%rax
6f65(3): mov %rax,%r10
6f68(2): jmp 0x27(%rip)
6f6a(6): nop 0x0(%rax,%rax,1)
6f70(3): mov %r9,%rax
6f73(2): cdq %rax
6f75(3): idiv %rsi,%rax
6f78(3): cmp %rbp,%rax
6f7b(6): jl 0x2ed(%rip)
6f81(4): imul %rsi,%rbp
6f85(4): sub $0x1,%r8d
6f89(6): jz 0x127(%rip)
6f8f(3): cmp %rbp,%r10
6f92(2): jle 0xffffffde(%rip)
6f94(6): mov $0x1,%r11d
6f9a(a): mov $0x-9223372036854775808,%rbp
6fa4(2): jmp 0xffffffe1(%rip)
6fa6(a): nop 0x0(%rax,%rax,1)
6fb0(3): movsxd %eax,%rsi
6fb3(a): mov $0x-9223372036854775808,%rax
6fbd(6): mov $0x8,%r8d
6fc3(2): cdq %rax
6fc5(3): xor %r11d,%r11d
6fc8(a): mov $0x9223372036854775807,%r9
6fd2(3): idiv %rsi,%rax
6fd5(3): mov %rax,%r10
6fd8(2): jmp 0x27(%rip)
6fda(6): nop 0x0(%rax,%rax,1)
6fe0(3): mov %r9,%rax
6fe3(2): cdq %rax
6fe5(3): idiv %rsi,%rax
6fe8(3): cmp %rbp,%rax
6feb(6): jl 0x24d(%rip)
6ff1(4): imul %rsi,%rbp
6ff5(4): sub $0x1,%r8d
6ff9(6): jz 0xb7(%rip)
6fff(3): cmp %rbp,%r10
7002(2): jle 0xffffffde(%rip)
7004(6): mov $0x1,%r11d
700a(a): mov $0x-9223372036854775808,%rbp
7014(2): jmp 0xffffffe1(%rip)
7016(a): nop 0x0(%rax,%rax,1)
7020(a): mov $0x-9223372036854775808,%r8
702a(3): movsxd %eax,%rsi
702d(3): mov %r8,%rax
7030(2): cdq %rax
7032(3): idiv %rsi,%rax
7035(3): cmp %rax,%rbp
7038(6): jl 0x1e8(%rip)
703e(4): sub $0x1,%r8
7042(3): mov %r8,%rax
7045(2): cdq %rax
7047(3): idiv %rsi,%rax
704a(3): cmp %rax,%rbp
704d(6): jnle 0x293(%rip)
7053(4): imul %rsi,%rbp
7057(5): jmp 0xfffffe69(%rip)
705c(4): nop 0x0(%rax)
7060(3): movsxd %eax,%rsi
7063(a): mov $0x-9223372036854775808,%rax
706d(6): mov $0x3,%r8d
7073(2): cdq %rax
7075(3): xor %r11d,%r11d
7078(a): mov $0x9223372036854775807,%r9
7082(3): idiv %rsi,%rax
7085(3): mov %rax,%r10
7088(3): cmp %rbp,%r10
708b(6): jnle 0x1f5(%rip)
7091(3): mov %r9,%rax
7094(2): cdq %rax
7096(3): idiv %rsi,%rax
7099(3): cmp %rbp,%rax
709c(6): jl 0x274(%rip)
70a2(4): imul %rsi,%rbp
70a6(4): sub $0x1,%r8d
70aa(2): jnz 0xffffffde(%rip)
70ac(4): nop 0x0(%rax)
70b0(3): or %r11d,%r12d
70b3(5): jmp 0xfffffe0d(%rip)
70b8(8): nop 0x0(%rax,%rax,1)
70c0(3): movsxd %eax,%rsi
70c3(a): mov $0x-9223372036854775808,%rax
70cd(6): mov $0x6,%r8d
70d3(2): cdq %rax
70d5(3): xor %r11d,%r11d
70d8(a): mov $0x9223372036854775807,%r9
70e2(3): idiv %rsi,%rax
70e5(3): mov %rax,%r10
70e8(2): jmp 0x23(%rip)
70ea(6): nop 0x0(%rax,%rax,1)
70f0(3): mov %r9,%rax
70f3(2): cdq %rax
70f5(3): idiv %rsi,%rax
70f8(3): cmp %rbp,%rax
70fb(6): jl 0x19d(%rip)
7101(4): imul %rsi,%rbp
7105(4): sub $0x1,%r8d
7109(2): jz 0xffffffa7(%rip)
710b(3): cmp %rbp,%r10
710e(2): jle 0xffffffe2(%rip)
7110(6): mov $0x1,%r11d
7116(a): mov $0x-9223372036854775808,%rbp
7120(2): jmp 0xffffffe5(%rip)
7122(6): nop 0x0(%rax,%rax,1)
7128(3): movsxd %eax,%rsi
712b(a): mov $0x-9223372036854775808,%rax
7135(6): mov $0x5,%r8d
713b(2): cdq %rax
713d(3): xor %r11d,%r11d
7140(a): mov $0x9223372036854775807,%r9
714a(3): idiv %rsi,%rax
714d(3): mov %rax,%r10
7150(2): jmp 0x27(%rip)
7152(6): nop 0x0(%rax,%rax,1)
7158(3): mov %r9,%rax
715b(2): cdq %rax
715d(3): idiv %rsi,%rax
7160(3): cmp %rbp,%rax
7163(6): jl 0x14d(%rip)
7169(4): imul %rsi,%rbp
716d(4): sub $0x1,%r8d
7171(6): jz 0xffffff3f(%rip)
7177(3): cmp %rbp,%r10
717a(2): jle 0xffffffde(%rip)
717c(6): mov $0x1,%r11d
7182(a): mov $0x-9223372036854775808,%rbp
718c(2): jmp 0xffffffe1(%rip)
718e(2): nop 
7190(a): mov $0x-9007199254740992,%rax
719a(3): cmp %rax,%rbp
719d(6): jl 0x83(%rip)
71a3(a): mov $0x9007199254740991,%rax
71ad(3): cmp %rax,%rbp
71b0(6): jnle 0x130(%rip)
71b6(4): shl/sal $0xa,%rbp
71ba(5): jmp 0xfffffd06(%rip)
71bf(1): nop 
71c0(3): movsxd %eax,%rsi
71c3(a): mov $0x-9223372036854775808,%rax
71cd(6): mov $0x4,%r8d
71d3(2): cdq %rax
71d5(3): xor %r11d,%r11d
71d8(a): mov $0x9223372036854775807,%r9
71e2(3): idiv %rsi,%rax
71e5(3): mov %rax,%r10
71e8(3): cmp %rbp,%r10
71eb(2): jnle 0x65(%rip)
71ed(3): mov %r9,%rax
71f0(2): cdq %rax
71f2(3): idiv %rsi,%rax
71f5(3): cmp %rbp,%rax
71f8(6): jl 0xd0(%rip)
71fe(4): imul %rsi,%rbp
7202(4): sub $0x1,%r8d
7206(2): jnz 0xffffffe2(%rip)
7208(5): jmp 0xfffffea8(%rip)
720d(3): nop (%rax)
7210(6): mov $0x4,%r12d
7216(5): jmp 0xfffffb23(%rip)
721b(5): nop 0x0(%rax,%rax,1)
7220(6): mov $0x1,%r12d
7226(a): mov $0x-9223372036854775808,%rbp
7230(5): jmp 0xfffffc90(%rip)
7235(3): nop (%rax)
7238(6): mov $0x1,%r11d
723e(a): mov $0x9223372036854775807,%rbp
7248(5): jmp 0xfffffdad(%rip)
724d(3): nop (%rax)
7250(6): mov $0x1,%r11d
7256(a): mov $0x-9223372036854775808,%rbp
7260(2): jmp 0xffffffa2(%rip)
7262(6): nop 0x0(%rax,%rax,1)
7268(6): mov $0x1,%r11d
726e(a): mov $0x9223372036854775807,%rbp
7278(5): jmp 0xfffffd0d(%rip)
727d(3): nop (%rax)
7280(6): mov $0x1,%r11d
7286(a): mov $0x-9223372036854775808,%rbp
7290(5): jmp 0xfffffe16(%rip)
7295(3): nop (%rax)
7298(6): mov $0x1,%r11d
729e(a): mov $0x9223372036854775807,%rbp
72a8(5): jmp 0xfffffe5d(%rip)
72ad(3): nop (%rax)
72b0(6): mov $0x1,%r11d
72b6(a): mov $0x9223372036854775807,%rbp
72c0(5): jmp 0xfffffead(%rip)
72c5(3): nop (%rax)
72c8(6): mov $0x1,%r11d
72ce(a): mov $0x9223372036854775807,%rbp
72d8(5): jmp 0xffffff2a(%rip)
72dd(3): nop (%rax)
72e0(6): mov $0x1,%r12d
72e6(a): mov $0x9223372036854775807,%rbp
72f0(5): jmp 0xfffffbd0(%rip)
72f5(3): nop (%rax)
72f8(2): xor %edi,%edi
72fa(4): cmp $0x42,0x2(%rcx)
72fe(5): mov $0x400,%eax
7303(4): setz %dil
7307(4): lea 0x1(%rdi,%rdi,1),%edi
730b(5): jmp 0xfffffb37(%rip)
7310(6): mov $0x1,%r11d
7316(a): mov $0x9223372036854775807,%rbp
7320(5): jmp 0xfffffd86(%rip)
7325(5): mov $0x1,%eax
732a(3): mov %r8,%rbp
732d(5): jmp 0xfffffb8b(%rip)
7332(5): mov $0x1,%eax
7337(3): mov %r10,%rbp
733a(5): jmp 0xfffffb7e(%rip)
733f(7): lea 0x101ca(%rip),%rcx
7346(7): lea 0x100a3(%rip),%rsi
734d(7): lea 0x100bc(%rip),%rdi
7354(5): mov $0x54,%edx
7359(5): call 0xffffa937(%rip)
735e(5): call 0xffffa8c2(%rip)

"xstrtoumax" :
7370(2): push %r15
7372(2): push %r14
7374(2): push %r13
7376(2): push %r12
7378(1): push %rbp
7379(1): push %rbx
737a(4): sub $0x28,%rsp
737e(9): mov $0x28,%rax
7387(5): mov %rax,0x18(%rsp)
738c(2): xor %eax,%eax
738e(3): cmp $0x24,%edx
7391(6): jnbe 0x364(%rip)
7397(5): lea 0x10(%rsp),%rax
739c(3): mov %rsi,%r15
739f(3): test %rsi,%rsi
73a2(3): mov %rdi,%rbp
73a5(4): mov %edx,0x8(%rsp)
73a9(3): mov %rcx,%r14
73ac(3): mov %r8,%r13
73af(4): cmove %rax,%r15
73b3(5): call 0xffffa76d(%rip)
73b8(6): mov $0x0,(%rax)
73be(3): mov %rax,%r12
73c1(4): movzx 0x0(%rbp),%ebx
73c5(5): call 0xffffab8b(%rip)
73ca(4): mov 0x8(%rsp),%edx
73ce(3): mov (%rax),%rsi
73d1(3): mov %rbp,%rax
73d4(2): jmp 0x13(%rip)
73d6(a): nop 0x0(%rax,%rax,1)
73e0(4): add $0x1,%rax
73e4(3): movzx (%rax),%ebx
73e7(3): movzx %bl,%ecx
73ea(5): test $0x20,0x1(%rsi,%rcx,2)
73ef(2): jnz 0xfffffff1(%rip)
73f1(3): cmp $0x2d,%bl
73f4(2): jz 0x54(%rip)
73f6(2): xor %ecx,%ecx
73f8(3): mov %r15,%rsi
73fb(3): mov %rbp,%rdi
73fe(5): call 0xffffa8a2(%rip)
7403(3): mov (%r15),%rcx
7406(3): mov %rax,%rbx
7409(3): cmp %rbp,%rcx
740c(2): jz 0x2c(%rip)
740e(4): mov (%r12),%eax
7412(2): test %eax,%eax
7414(2): jz 0x64(%rip)
7416(3): cmp $0x22,%eax
7419(5): mov $0x1,%ebp
741e(2): jnz 0x2a(%rip)
7420(3): test %r13,%r13
7423(2): jz 0xb(%rip)
7425(4): movzx (%rcx),%r12d
7429(3): test %r12b,%r12b
742c(2): jnz 0x7b(%rip)
742e(3): mov %rbx,(%r14)
7431(2): jmp 0x1c(%rip)
7433(5): nop 0x0(%rax,%rax,1)
7438(3): test %r13,%r13
743b(5): mov %rcx,0x8(%rsp)
7440(2): jnz 0x40(%rip)
7442(6): nop 0x0(%rax,%rax,1)
7448(5): mov $0x4,%ebp
744d(5): mov 0x18(%rsp),%rdi
7452(9): xor $0x28,%rdi
745b(2): mov %ebp,%eax
745d(6): jnz 0x293(%rip)
7463(4): add $0x28,%rsp
7467(1): pop %rbx
7468(1): pop %rbp
7469(2): pop %r12
746b(2): pop %r13
746d(2): pop %r14
746f(2): pop %r15
7471(1): ret near (%rsp)
7472(6): nop 0x0(%rax,%rax,1)
7478(2): xor %ebp,%ebp
747a(2): jmp 0xffffffa6(%rip)
747c(4): nop 0x0(%rax)
7480(5): movzx 0x0(%rbp),%r12d
7485(3): test %r12b,%r12b
7488(2): jz 0xffffffc0(%rip)
748a(4): movsx %r12b,%esi
748e(3): mov %r13,%rdi
7491(2): xor %ebp,%ebp
7493(5): call 0xffffa7cd(%rip)
7498(3): test %rax,%rax
749b(5): mov $0x1,%ebx
74a0(5): mov 0x8(%rsp),%rcx
74a5(2): jz 0xffffffa3(%rip)
74a7(4): movsx %r12b,%esi
74ab(3): mov %r13,%rdi
74ae(5): mov %rcx,0x8(%rsp)
74b3(5): call 0xffffa7ad(%rip)
74b8(3): test %rax,%rax
74bb(5): mov 0x8(%rsp),%rcx
74c0(6): jz 0xcc(%rip)
74c6(5): lea 0xffffffbb(%r12),%eax
74cb(2): cmp $0x2f,%al
74cd(2): jnbe 0x53(%rip)
74cf(a): mov $0x142129060940101,%rdx
74d9(4): bt %rax,%rdx
74dd(2): jnb 0x43(%rip)
74df(5): mov $0x30,%esi
74e4(3): mov %r13,%rdi
74e7(5): mov %rcx,0x8(%rsp)
74ec(5): call 0xffffa774(%rip)
74f1(3): test %rax,%rax
74f4(5): mov 0x8(%rsp),%rcx
74f9(2): jz 0x27(%rip)
74fb(4): movzx 0x1(%rcx),%eax
74ff(2): cmp $0x44,%al
7501(2): jz 0xe(%rip)
7503(2): cmp $0x69,%al
7505(6): jz 0x1d3(%rip)
750b(2): cmp $0x42,%al
750d(2): jnz 0x13(%rip)
750f(5): mov $0x2,%edi
7514(5): mov $0x3e8,%esi
7519(2): jmp 0x11(%rip)
751b(5): nop 0x0(%rax,%rax,1)
7520(5): mov $0x1,%edi
7525(5): mov $0x400,%esi
752a(4): sub $0x42,%r12d
752e(4): cmp $0x35,%r12b
7532(2): jnbe 0x5a(%rip)
7534(7): lea 0xffe5(%rip),%rdx
753b(4): movzx %r12b,%r12d
753f(4): movsxd 0x0(%rdx,%r12,4),%rax
7543(3): add %rdx,%rax
7546(2): jmp %rax
7548(3): mov %rbx,%rax
754b(3): mul %rax,%rsi,%rdx
754e(6): jo 0x1f3(%rip)
7554(3): xor %r8d,%r8d
7557(3): mul %rax,%rsi,%rdx
755a(6): jo 0x1d8(%rip)
7560(3): mov %rax,%rbx
7563(3): or %r8d,%ebp
7566(a): nop 0x0(%rax,%rax,1)
7570(3): movsxd %edi,%rdi
7573(2): mov %ebp,%eax
7575(3): add %rdi,%rcx
7578(3): or $0x2,%eax
757b(3): mov %rcx,(%r15)
757e(3): cmp $0x0,(%rcx)
7581(3): mov %rbx,(%r14)
7584(3): cmovne %eax,%ebp
7587(5): jmp 0xfffffec6(%rip)
758c(3): mov %rbx,(%r14)
758f(3): or $0x2,%ebp
7592(5): jmp 0xfffffebb(%rip)
7597(5): mov $0x2,%edx
759c(3): mov %rdx,%rax
759f(3): mul %rax,%rbx,%rdx
75a2(6): jo 0x9c(%rip)
75a8(3): add %rbx,%rbx
75ab(2): jmp 0xffffffc5(%rip)
75ad(5): mov $0x200,%edx
75b2(3): mov %rdx,%rax
75b5(3): mul %rax,%rbx,%rdx
75b8(6): jo 0x86(%rip)
75be(4): shl/sal $0x9,%rbx
75c2(2): jmp 0xffffffae(%rip)
75c4(6): mov $0x7,%r8d
75ca(3): xor %r9d,%r9d
75cd(3): nop (%rax)
75d0(3): mov %rbx,%rax
75d3(3): mul %rax,%rsi,%rdx
75d6(3): mov %rax,%rbx
75d9(6): jo 0x195(%rip)
75df(4): sub $0x1,%r8d
75e3(2): jnz 0xffffffed(%rip)
75e5(3): or %r9d,%ebp
75e8(2): jmp 0xffffff88(%rip)
75ea(6): mov $0x8,%r8d
75f0(3): xor %r9d,%r9d
75f3(5): nop 0x0(%rax,%rax,1)
75f8(3): mov %rbx,%rax
75fb(3): mul %rax,%rsi,%rdx
75fe(3): mov %rax,%rbx
7601(6): jo 0x14f(%rip)
7607(4): sub $0x1,%r8d
760b(2): jnz 0xffffffed(%rip)
760d(2): jmp 0xffffffd8(%rip)
760f(6): mov $0x4,%r8d
7615(3): xor %r9d,%r9d
7618(3): mov %rbx,%rax
761b(3): mul %rax,%rsi,%rdx
761e(3): mov %rax,%rbx
7621(6): jo 0x102(%rip)
7627(4): sub $0x1,%r8d
762b(2): jnz 0xffffffed(%rip)
762d(2): jmp 0xffffffb8(%rip)
762f(3): mov %rbx,%rax
7632(3): mul %rax,%rsi,%rdx
7635(3): mov %rax,%rbx
7638(6): jno 0xffffff38(%rip)
763e(5): mov $0x1,%ebp
7643(4): or $0xffffffff,%rbx
7647(5): jmp 0xffffff29(%rip)
764c(4): nop 0x0(%rax)
7650(6): mov $0x5,%r8d
7656(3): xor %r9d,%r9d
7659(3): mov %rbx,%rax
765c(3): mul %rax,%rsi,%rdx
765f(3): mov %rax,%rbx
7662(6): jo 0xfd(%rip)
7668(4): sub $0x1,%r8d
766c(2): jnz 0xffffffed(%rip)
766e(5): jmp 0xffffff77(%rip)
7673(6): mov $0x6,%r8d
7679(3): xor %r9d,%r9d
767c(3): mov %rbx,%rax
767f(3): mul %rax,%rsi,%rdx
7682(3): mov %rax,%rbx
7685(6): jo 0x8f(%rip)
768b(4): sub $0x1,%r8d
768f(2): jnz 0xffffffed(%rip)
7691(5): jmp 0xffffff54(%rip)
7696(5): mov $0x400,%edx
769b(3): mov %rdx,%rax
769e(3): mul %rax,%rbx,%rdx
76a1(2): jo 0xffffff9d(%rip)
76a3(4): shl/sal $0xa,%rbx
76a7(5): jmp 0xfffffec9(%rip)
76ac(3): mov %rbx,%rax
76af(3): mul %rax,%rsi,%rdx
76b2(6): jo 0xcb(%rip)
76b8(3): xor %r8d,%r8d
76bb(3): mul %rax,%rsi,%rdx
76be(6): jno 0xfffffe99(%rip)
76c4(6): mov $0x1,%r8d
76ca(4): or $0xffffffff,%rax
76ce(5): jmp 0xfffffe89(%rip)
76d3(5): nop 0x0(%rax,%rax,1)
76d8(2): xor %edi,%edi
76da(4): cmp $0x42,0x2(%rcx)
76de(5): mov $0x400,%esi
76e3(4): setz %dil
76e7(4): lea 0x1(%rdi,%rdi,1),%edi
76eb(5): jmp 0xfffffe3f(%rip)
76f0(5): call 0xffffa530(%rip)
76f5(7): lea 0xfefc(%rip),%rcx
76fc(7): lea 0xfced(%rip),%rsi
7703(7): lea 0xfd06(%rip),%rdi
770a(5): mov $0x54,%edx
770f(5): call 0xffffa581(%rip)
7714(6): mov $0x1,%r9d
771a(4): or $0xffffffff,%rbx
771e(5): jmp 0xffffff6d(%rip)
7723(6): mov $0x1,%r9d
7729(4): or $0xffffffff,%rbx
772d(5): jmp 0xfffffefa(%rip)
7732(6): mov $0x1,%r8d
7738(4): or $0xffffffff,%rbx
773c(5): jmp 0xfffffe27(%rip)
7741(4): or $0xffffffff,%rax
7745(6): mov $0x1,%r8d
774b(5): jmp 0xfffffe0c(%rip)
7750(6): mov $0x1,%r9d
7756(4): or $0xffffffff,%rbx
775a(5): jmp 0xfffffead(%rip)
775f(6): mov $0x1,%r9d
7765(4): or $0xffffffff,%rbx
7769(5): jmp 0xfffffeff(%rip)
776e(6): mov $0x1,%r9d
7774(4): or $0xffffffff,%rbx
7778(5): jmp 0xfffffe67(%rip)
777d(6): mov $0x1,%r8d
7783(4): or $0xffffffff,%rax
7787(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
7790(2): push %r12
7792(1): push %rbp
7793(1): push %rbx
7794(3): mov %rdi,%rbx
7797(5): call 0xffffa5e9(%rip)
779c(2): test %eax,%eax
779e(3): mov %rbx,%rdi
77a1(2): js 0x56(%rip)
77a3(5): call 0xffffa63d(%rip)
77a8(2): test %eax,%eax
77aa(2): jnz 0x2e(%rip)
77ac(3): mov %rbx,%rdi
77af(5): call 0x2e1(%rip)
77b4(2): test %eax,%eax
77b6(2): jz 0x3e(%rip)
77b8(5): call 0xffffa368(%rip)
77bd(3): mov (%rax),%r12d
77c0(3): mov %rbx,%rdi
77c3(3): mov %rax,%rbp
77c6(5): call 0xffffa40a(%rip)
77cb(3): test %r12d,%r12d
77ce(2): jnz 0x32(%rip)
77d0(1): pop %rbx
77d1(1): pop %rbp
77d2(2): pop %r12
77d4(1): ret near (%rsp)
77d5(3): nop (%rax)
77d8(3): mov %rbx,%rdi
77db(5): call 0xffffa5a5(%rip)
77e0(2): xor %esi,%esi
77e2(5): mov $0x1,%edx
77e7(2): mov %eax,%edi
77e9(5): call 0xffffa497(%rip)
77ee(4): cmp $0xffffffff,%rax
77f2(2): jnz 0xffffffba(%rip)
77f4(3): mov %rbx,%rdi
77f7(1): pop %rbx
77f8(1): pop %rbp
77f9(2): pop %r12
77fb(5): jmp 0xffffa3d5(%rip)
7800(4): mov %r12d,0x0(%rbp)
7804(5): mov $0xffffffff,%eax
7809(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
7810(2): push %r12
7812(1): push %rbp
7813(2): mov %edi,%ebp
7815(1): push %rbx
7816(4): sub $0x50,%rsp
781a(9): mov $0x28,%rax
7823(5): mov %rax,0x18(%rsp)
7828(2): xor %eax,%eax
782a(5): lea 0x70(%rsp),%rax
782f(2): test %esi,%esi
7831(5): mov %rdx,0x30(%rsp)
7836(5): mov %rcx,0x38(%rsp)
783b(5): mov %r8,0x40(%rsp)
7840(5): mov %rax,0x8(%rsp)
7845(5): lea 0x20(%rsp),%rax
784a(5): mov %r9,0x48(%rsp)
784f(7): mov $0x10,(%rsp)
7856(5): mov %rax,0x10(%rsp)
785b(6): jz 0x207(%rip)
7861(6): cmp $0x406,%esi
7867(2): jnz 0x49(%rip)
7869(5): mov 0x10(%rsp),%rax
786e(7): cmp $0x0,0x214b03(%rip)
7875(7): mov $0x18,(%rsp)
787c(4): mov 0x10(%rax),%r12d
7880(3): mov %r12d,%edx
7883(6): js 0x130(%rip)
7889(2): xor %eax,%eax
788b(5): mov $0x406,%esi
7890(5): call 0xffffa300(%rip)
7895(2): test %eax,%eax
7897(2): mov %eax,%ebx
7899(6): js 0x18f(%rip)
789f(a): mov $0x1,0x214acf(%rip)
78a9(2): jmp 0x47(%rip)
78ab(5): nop 0x0(%rax,%rax,1)
78b0(3): cmp $0xb,%esi
78b3(2): jz 0x2d(%rip)
78b5(2): jnle 0x5b(%rip)
78b7(3): cmp $0x4,%esi
78ba(6): jz 0xd6(%rip)
78c0(6): jnle 0xc0(%rip)
78c6(3): cmp $0x2,%esi
78c9(6): jz 0xc7(%rip)
78cf(2): jnle 0x11(%rip)
78d1(3): cmp $0x1,%esi
78d4(2): jnz 0x64(%rip)
78d6(a): nop 0x0(%rax,%rax,1)
78e0(2): mov %ebp,%edi
78e2(2): xor %eax,%eax
78e4(5): call 0xffffa2ac(%rip)
78e9(2): mov %eax,%ebx
78eb(5): nop 0x0(%rax,%rax,1)
78f0(5): mov 0x18(%rsp),%rcx
78f5(9): xor $0x28,%rcx
78fe(2): mov %ebx,%eax
7900(6): jnz 0x15d(%rip)
7906(4): add $0x50,%rsp
790a(1): pop %rbx
790b(1): pop %rbp
790c(2): pop %r12
790e(1): ret near (%rsp)
790f(1): nop 
7910(6): cmp $0x407,%esi
7916(2): jnle 0x4a(%rip)
7918(6): cmp $0x406,%esi
791e(2): jnl 0x72(%rip)
7920(6): cmp $0x401,%esi
7926(2): jz 0xffffffba(%rip)
7928(6): cmp $0x402,%esi
792e(2): jz 0x62(%rip)
7930(6): cmp $0x400,%esi
7936(2): jz 0x5a(%rip)
7938(3): mov (%rsp),%eax
793b(3): cmp $0x2f,%eax
793e(6): jnbe 0x13c(%rip)
7944(5): add 0x10(%rsp),%rax
7949(3): mov (%rax),%rdx
794c(2): mov %ebp,%edi
794e(2): xor %eax,%eax
7950(5): call 0xffffa240(%rip)
7955(2): mov %eax,%ebx
7957(2): jmp 0xffffff99(%rip)
7959(7): nop 0x0(%rax)
7960(6): cmp $0x409,%esi
7966(2): jz 0x2a(%rip)
7968(6): jl 0xffffff78(%rip)
796e(6): cmp $0x40a,%esi
7974(2): jnz 0xffffffc4(%rip)
7976(5): jmp 0xffffff6a(%rip)
797b(5): nop 0x0(%rax,%rax,1)
7980(3): cmp $0x9,%esi
7983(6): jz 0xffffff5d(%rip)
7989(2): jnle 0x7(%rip)
798b(3): cmp $0x8,%esi
798e(2): jnz 0xffffffaa(%rip)
7990(3): mov (%rsp),%eax
7993(3): cmp $0x2f,%eax
7996(6): jnbe 0xee(%rip)
799c(5): add 0x10(%rsp),%rax
79a1(2): mov (%rax),%edx
79a3(2): mov %ebp,%edi
79a5(2): xor %eax,%eax
79a7(5): call 0xffffa1e9(%rip)
79ac(2): mov %eax,%ebx
79ae(5): jmp 0xffffff42(%rip)
79b3(2): xor %esi,%esi
79b5(2): xor %eax,%eax
79b7(5): call 0xffffa1d9(%rip)
79bc(2): test %eax,%eax
79be(2): mov %eax,%ebx
79c0(6): js 0xffffff30(%rip)
79c6(7): cmp $0xff,0x2149ab(%rip)
79cd(6): jnz 0xffffff23(%rip)
79d3(2): xor %eax,%eax
79d5(5): mov $0x1,%esi
79da(2): mov %ebx,%edi
79dc(5): call 0xffffa1b4(%rip)
79e1(2): test %eax,%eax
79e3(2): js 0x1e(%rip)
79e5(3): or $0x1,%eax
79e8(5): mov $0x2,%esi
79ed(2): mov %ebx,%edi
79ef(2): mov %eax,%edx
79f1(2): xor %eax,%eax
79f3(5): call 0xffffa19d(%rip)
79f8(3): cmp $0xff,%eax
79fb(6): jnz 0xfffffef5(%rip)
7a01(5): call 0xffffa11f(%rip)
7a06(3): mov (%rax),%r12d
7a09(3): mov %rax,%rbp
7a0c(2): mov %ebx,%edi
7a0e(5): call 0xffffa2b2(%rip)
7a13(5): mov $0xffffffff,%ebx
7a18(4): mov %r12d,0x0(%rbp)
7a1c(5): jmp 0xfffffed4(%rip)
7a21(7): nop 0x0(%rax)
7a28(5): call 0xffffa0f8(%rip)
7a2d(3): cmp $0x16,(%rax)
7a30(6): jnz 0xfffffe6f(%rip)
7a36(2): xor %esi,%esi
7a38(2): xor %eax,%eax
7a3a(3): mov %r12d,%edx
7a3d(2): mov %ebp,%edi
7a3f(5): call 0xffffa151(%rip)
7a44(2): test %eax,%eax
7a46(2): mov %eax,%ebx
7a48(6): js 0xfffffea8(%rip)
7a4e(a): mov $0xffffffff,0x214920(%rip)
7a58(5): jmp 0xffffff7b(%rip)
7a5d(5): call 0xffffa1c3(%rip)
7a62(5): mov 0x10(%rsp),%rax
7a67(2): xor %esi,%esi
7a69(3): mov 0x10(%rax),%edx
7a6c(2): xor %eax,%eax
7a6e(5): call 0xffffa122(%rip)
7a73(2): mov %eax,%ebx
7a75(5): jmp 0xfffffe7b(%rip)
7a7a(5): mov 0x8(%rsp),%rax
7a7f(5): jmp 0xfffffeca(%rip)
7a84(5): mov 0x8(%rsp),%rax
7a89(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
7a90(3): test %rdi,%rdi
7a93(1): push %rbx
7a94(3): mov %rdi,%rbx
7a97(2): jz 0x13(%rip)
7a99(5): call 0xffffa347(%rip)
7a9e(2): test %eax,%eax
7aa0(2): jz 0xa(%rip)
7aa2(6): test $0x100,(%rbx)
7aa8(2): jnz 0x10(%rip)
7aaa(3): mov %rbx,%rdi
7aad(1): pop %rbx
7aae(5): jmp 0xffffa312(%rip)
7ab3(5): nop 0x0(%rax,%rax,1)
7ab8(3): mov %rbx,%rdi
7abb(5): mov $0x1,%edx
7ac0(2): xor %esi,%esi
7ac2(5): call 0xe(%rip)
7ac7(3): mov %rbx,%rdi
7aca(1): pop %rbx
7acb(5): jmp 0xffffa2f5(%rip)

"rpl_fseeko" :
7ad0(4): mov 0x8(%rdi),%rax
7ad4(4): cmp %rax,0x10(%rdi)
7ad8(2): jz 0x8(%rip)
7ada(5): jmp 0xffffa3a6(%rip)
7adf(1): nop 
7ae0(4): mov 0x20(%rdi),%rax
7ae4(4): cmp %rax,0x28(%rdi)
7ae8(2): jnz 0xfffffff2(%rip)
7aea(5): cmp $0x0,0x48(%rdi)
7aef(2): jnz 0xffffffeb(%rip)
7af1(2): push %r12
7af3(1): push %rbp
7af4(3): mov %edx,%r12d
7af7(1): push %rbx
7af8(3): mov %rsi,%rbp
7afb(3): mov %rdi,%rbx
7afe(5): call 0xffffa282(%rip)
7b03(3): mov %r12d,%edx
7b06(3): mov %rbp,%rsi
7b09(2): mov %eax,%edi
7b0b(5): call 0xffffa175(%rip)
7b10(4): cmp $0xffffffff,%rax
7b14(2): jz 0xe(%rip)
7b16(3): and $0xef,(%rbx)
7b19(7): mov %rax,0x90(%rbx)
7b20(2): xor %eax,%eax
7b22(1): pop %rbx
7b23(1): pop %rbp
7b24(2): pop %r12
7b26(1): ret near (%rsp)

"rpl_mbrtowc" :
7b30(2): push %r13
7b32(2): push %r12
7b34(3): mov %rsi,%r13
7b37(1): push %rbp
7b38(1): push %rbx
7b39(3): mov %rdi,%rbx
7b3c(3): mov %rdx,%r12
7b3f(4): sub $0x18,%rsp
7b43(9): mov $0x28,%rax
7b4c(5): mov %rax,0x8(%rsp)
7b51(2): xor %eax,%eax
7b53(5): lea 0x4(%rsp),%rax
7b58(3): test %rdi,%rdi
7b5b(4): cmove %rax,%rbx
7b5f(3): mov %rbx,%rdi
7b62(5): call 0xffffa0de(%rip)
7b67(4): cmp $0xfffffffd,%rax
7b6b(3): mov %rax,%rbp
7b6e(2): jbe 0x22(%rip)
7b70(3): test %r12,%r12
7b73(2): jz 0x1d(%rip)
7b75(2): xor %edi,%edi
7b77(5): call 0xe2d9(%rip)
7b7c(2): test %al,%al
7b7e(2): jnz 0x12(%rip)
7b80(5): movzx 0x0(%r13),%eax
7b85(5): mov $0x1,%ebp
7b8a(2): mov %eax,(%rbx)
7b8c(4): nop 0x0(%rax)
7b90(5): mov 0x8(%rsp),%rdx
7b95(9): xor $0x28,%rdx
7b9e(3): mov %rbp,%rax
7ba1(2): jnz 0xd(%rip)
7ba3(4): add $0x18,%rsp
7ba7(1): pop %rbx
7ba8(1): pop %rbp
7ba9(2): pop %r12
7bab(2): pop %r13
7bad(1): ret near (%rsp)
7bae(5): call 0xffffa072(%rip)

"peek_token_bracket" :
7bc0(4): mov 0x48(%rsi),%rax
7bc4(4): cmp %rax,0x68(%rsi)
7bc8(2): jle 0x58(%rip)
7bca(4): mov 0x8(%rsi),%r8
7bce(7): cmp $0x1,0x90(%rsi)
7bd5(5): movzx 0x0(%r8,%rax,1),%ecx
7bda(2): mov %cl,(%rdi)
7bdc(2): jle 0x17(%rip)
7bde(4): cmp 0x30(%rsi),%rax
7be2(2): jz 0x11(%rip)
7be4(4): mov 0x10(%rsi),%r9
7be8(5): cmp $0xff,0x0(%r9,%rax,4)
7bed(6): jz 0x82(%rip)
7bf3(3): cmp $0x5c,%cl
7bf6(2): jz 0x6a(%rip)
7bf8(3): cmp $0x5b,%cl
7bfb(2): jz 0x35(%rip)
7bfd(3): cmp $0x5d,%cl
7c00(6): jz 0xa0(%rip)
7c06(3): cmp $0x5e,%cl
7c09(6): jz 0x87(%rip)
7c0f(3): cmp $0x2d,%cl
7c12(2): jnz 0x5d(%rip)
7c14(4): mov $0x16,0x8(%rdi)
7c18(5): mov $0x1,%eax
7c1d(1): ret near (%rsp)
7c1e(2): nop 
7c20(4): mov $0x2,0x8(%rdi)
7c24(2): xor %eax,%eax
7c26(1): ret near (%rsp)
7c27(9): nop 0x0(%rax,%rax,1)
7c30(4): lea 0x1(%rax),%rcx
7c34(4): cmp 0x58(%rsi),%rcx
7c38(2): jnl 0x48(%rip)
7c3a(6): movzx 0x1(%r8,%rax,1),%eax
7c40(2): cmp $0x3a,%al
7c42(2): mov %al,(%rdi)
7c44(6): jz 0x9c(%rip)
7c4a(2): cmp $0x3d,%al
7c4c(6): jz 0x84(%rip)
7c52(2): cmp $0x2e,%al
7c54(2): jnz 0x2c(%rip)
7c56(4): mov $0x1a,0x8(%rdi)
7c5a(5): mov $0x2,%eax
7c5f(1): ret near (%rsp)
7c60(3): and $0x1,%edx
7c63(2): jz 0xc(%rip)
7c65(4): lea 0x1(%rax),%rdx
7c69(4): cmp 0x58(%rsi),%rdx
7c6d(2): jl 0x43(%rip)
7c6f(4): mov $0x1,0x8(%rdi)
7c73(5): mov $0x1,%eax
7c78(1): ret near (%rsp)
7c79(7): nop 0x0(%rax)
7c80(4): mov $0x1,0x8(%rdi)
7c84(3): mov $0x5b,(%rdi)
7c87(5): mov $0x1,%eax
7c8c(1): ret near (%rsp)
7c8d(3): nop (%rax)
7c90(4): mov $0x19,0x8(%rdi)
7c94(5): mov $0x1,%eax
7c99(1): ret near (%rsp)
7c9a(6): nop 0x0(%rax,%rax,1)
7ca0(4): mov $0x15,0x8(%rdi)
7ca4(5): mov $0x1,%eax
7ca9(1): ret near (%rsp)
7caa(6): nop 0x0(%rax,%rax,1)
7cb0(4): mov %rdx,0x48(%rsi)
7cb4(6): movzx 0x1(%r8,%rax,1),%eax
7cba(4): mov $0x1,0x8(%rdi)
7cbe(2): mov %al,(%rdi)
7cc0(5): mov $0x1,%eax
7cc5(1): ret near (%rsp)
7cc6(a): nop 0x0(%rax,%rax,1)
7cd0(4): mov $0x1c,0x8(%rdi)
7cd4(5): mov $0x2,%eax
7cd9(1): ret near (%rsp)
7cda(6): nop 0x0(%rax,%rax,1)
7ce0(3): and $0x4,%edx
7ce3(2): jz 0xffffff9d(%rip)
7ce5(4): mov $0x1e,0x8(%rdi)
7ce9(5): mov $0x2,%eax
7cee(1): ret near (%rsp)

"mark_opt_subexp" :
7cf0(4): cmp $0x11,0x30(%rsi)
7cf4(2): jz 0xc(%rip)
7cf6(2): xor %eax,%eax
7cf8(1): ret near (%rsp)
7cf9(7): nop 0x0(%rax)
7d00(4): cmp 0x28(%rsi),%rdi
7d04(2): jnz 0xfffffff2(%rip)
7d06(4): or $0x8,0x32(%rsi)
7d0a(2): xor %eax,%eax
7d0c(1): ret near (%rsp)

"check_dst_limits_calc_pos_1" :
7d10(2): push %r15
7d12(2): push %r14
7d14(3): mov %rdx,%r9
7d17(2): push %r13
7d19(2): push %r12
7d1b(4): lea 0x0(%rcx,%rcx,2),%rdx
7d1f(1): push %rbp
7d20(1): push %rbx
7d21(3): mov %esi,%r15d
7d24(4): sub $0x48,%rsp
7d28(7): mov 0x98(%rdi),%r14
7d2f(4): mov %rdi,(%rsp)
7d33(4): mov 0x30(%r14),%rax
7d37(4): lea 0x0(%rax,%rdx,8),%r12
7d3b(6): cmp $0x0,0x8(%r12)
7d41(6): jle 0x194(%rip)
7d47(4): lea 0x0(%r8,%r8,4),%rax
7d4b(3): mov %rcx,%r11
7d4e(3): mov %r9d,%ecx
7d51(3): mov %r8,%r10
7d54(2): xor %ebx,%ebx
7d56(4): mov %esi,0x20(%rsp)
7d5a(4): shl/sal $0x3,%rax
7d5e(3): mov %r9,%r15
7d61(5): mov %r11,0x10(%rsp)
7d66(5): mov %rax,0x28(%rsp)
7d6b(5): mov $0x1,%eax
7d70(3): shl/sal %cl,%rax
7d73(5): mov %rax,0x18(%rsp)
7d78(2): not %eax
7d7a(5): mov %ax,0x26(%rsp)
7d7f(2): mov %esi,%eax
7d81(3): and $0x1,%eax
7d84(4): mov %eax,0xc(%rsp)
7d88(2): mov %esi,%eax
7d8a(3): and $0x2,%eax
7d8d(4): mov %eax,0x8(%rsp)
7d91(2): jmp 0x24(%rip)
7d93(5): nop 0x0(%rax,%rax,1)
7d98(3): cmp $0x9,%dl
7d9b(6): jz 0x155(%rip)
7da1(3): cmp $0x4,%dl
7da4(2): jz 0x54(%rip)
7da6(4): add $0x1,%rbx
7daa(5): cmp %rbx,0x8(%r12)
7daf(6): jle 0x121(%rip)
7db5(5): mov 0x10(%r12),%rax
7dba(4): mov 0x0(%rax,%rbx,8),%rbp
7dbe(3): mov %rbp,%rax
7dc1(4): shl/sal $0x4,%rax
7dc5(3): add (%r14),%rax
7dc8(4): movzx 0x8(%rax),%edx
7dcc(3): cmp $0x8,%dl
7dcf(2): jnz 0xffffffc9(%rip)
7dd1(4): mov 0xc(%rsp),%ecx
7dd5(2): test %ecx,%ecx
7dd7(2): jz 0xffffffcf(%rip)
7dd9(3): cmp %r15,(%rax)
7ddc(2): jnz 0xffffffca(%rip)
7dde(4): add $0x48,%rsp
7de2(5): mov $0xffffffff,%eax
7de7(1): pop %rbx
7de8(1): pop %rbp
7de9(2): pop %r12
7deb(2): pop %r13
7ded(2): pop %r14
7def(2): pop %r15
7df1(1): ret near (%rsp)
7df2(6): nop 0x0(%rax,%rax,1)
7df8(4): cmp $0xffffffff,%r10
7dfc(2): jz 0xffffffaa(%rip)
7dfe(4): mov (%rsp),%rax
7e02(5): mov 0x28(%rsp),%r13
7e07(3): mov %rbp,%rdi
7e0a(5): mov %r12,0x30(%rsp)
7e0f(5): mov %rbx,0x38(%rsp)
7e14(3): mov %r10,%r12
7e17(7): add 0xd8(%rax),%r13
7e1e(5): lea 0x0(%rbp,%rbp,2),%rax
7e23(3): mov %r14,%rbp
7e26(3): mov %rdi,%r14
7e29(4): shl/sal $0x3,%rax
7e2d(3): mov %rax,%rbx
7e30(4): cmp %r14,0x0(%r13)
7e34(2): jnz 0x6c(%rip)
7e36(4): cmp $0x3f,%r15
7e3a(2): jnle 0xe(%rip)
7e3c(5): movzx 0x22(%r13),%eax
7e41(5): test %rax,0x18(%rsp)
7e46(2): jz 0x5a(%rip)
7e48(4): mov 0x28(%rbp),%rax
7e4c(5): mov 0x10(%rax,%rbx,1),%rax
7e51(3): mov (%rax),%rcx
7e54(5): cmp %rcx,0x10(%rsp)
7e59(6): jz 0xc7(%rip)
7e5f(4): mov 0x20(%rsp),%esi
7e63(4): mov (%rsp),%rdi
7e67(3): mov %r12,%r8
7e6a(3): mov %r15,%rdx
7e6d(5): call 0xfffffea3(%rip)
7e72(3): cmp $0xff,%eax
7e75(6): jz 0xffffff69(%rip)
7e7b(2): test %eax,%eax
7e7d(2): jnz 0xa(%rip)
7e7f(4): mov 0x8(%rsp),%esi
7e83(2): test %esi,%esi
7e85(2): jnz 0x80(%rip)
7e87(4): cmp $0x3f,%r15
7e8b(2): jnle 0x15(%rip)
7e8d(5): movzx 0x26(%rsp),%eax
7e92(5): and %ax,0x22(%r13)
7e97(9): nop 0x0(%rax,%rax,1)
7ea0(4): add $0x28,%r13
7ea4(5): cmp $0x0,0xfffffff8(%r13)
7ea9(2): jnz 0xffffff87(%rip)
7eab(5): mov 0x38(%rsp),%rbx
7eb0(3): mov %r12,%r10
7eb3(5): mov 0x30(%rsp),%r12
7eb8(3): mov %rbp,%r14
7ebb(4): add $0x1,%rbx
7ebf(5): cmp %rbx,0x8(%r12)
7ec4(6): jnle 0xfffffef1(%rip)
7eca(6): nop 0x0(%rax,%rax,1)
7ed0(5): mov 0x20(%rsp),%r15d
7ed5(4): add $0x48,%rsp
7ed9(3): mov %r15d,%eax
7edc(1): pop %rbx
7edd(2): sar $0x1,%eax
7edf(1): pop %rbp
7ee0(2): pop %r12
7ee2(2): pop %r13
7ee4(2): pop %r14
7ee6(2): pop %r15
7ee8(1): ret near (%rsp)
7ee9(7): nop 0x0(%rax)
7ef0(4): mov 0x8(%rsp),%edx
7ef4(2): test %edx,%edx
7ef6(6): jz 0xfffffeb0(%rip)
7efc(3): cmp %r15,(%rax)
7eff(6): jnz 0xfffffea7(%rip)
7f05(4): add $0x48,%rsp
7f09(2): xor %eax,%eax
7f0b(1): pop %rbx
7f0c(1): pop %rbp
7f0d(2): pop %r12
7f0f(2): pop %r13
7f11(2): pop %r14
7f13(2): pop %r15
7f15(1): ret near (%rsp)
7f16(a): nop 0x0(%rax,%rax,1)
7f20(5): mov 0x20(%rsp),%r15d
7f25(4): add $0x48,%rsp
7f29(1): pop %rbx
7f2a(1): pop %rbp
7f2b(3): mov %r15d,%eax
7f2e(3): and $0x1,%eax
7f31(2): pop %r12
7f33(2): neg %eax
7f35(2): pop %r13
7f37(2): pop %r14
7f39(2): pop %r15
7f3b(1): ret near (%rsp)

"check_dst_limits_calc_pos" :
7f40(7): mov 0xd8(%rdi),%rax
7f47(4): lea 0x0(%rsi,%rsi,4),%rsi
7f4b(4): lea 0x0(%rax,%rsi,8),%rax
7f4f(4): mov 0x10(%rax),%r10
7f53(3): cmp %r8,%r10
7f56(2): jnle 0x4a(%rip)
7f58(4): mov 0x18(%rax),%rax
7f5c(3): cmp %r8,%rax
7f5f(2): jl 0x21(%rip)
7f61(2): xor %esi,%esi
7f63(3): cmp %r8,%r10
7f66(4): setz %sil
7f6a(3): or $0x2,%esi
7f6d(3): cmp %r8,%rax
7f70(2): jz 0x25(%rip)
7f72(2): xor %eax,%eax
7f74(3): cmp %r8,%r10
7f77(2): jz 0x19(%rip)
7f79(2): REP ret near (%rsp)
7f7b(5): nop 0x0(%rax,%rax,1)
7f80(5): mov $0x1,%eax
7f85(1): ret near (%rsp)
7f86(a): nop 0x0(%rax,%rax,1)
7f90(5): mov $0x1,%esi
7f95(3): mov %r9,%r8
7f98(5): jmp 0xfffffd78(%rip)
7f9d(3): nop (%rax)
7fa0(5): mov $0xffffffff,%eax
7fa5(1): ret near (%rsp)

"postorder" :
7fb0(2): push %r12
7fb2(3): mov %rsi,%r12
7fb5(1): push %rbp
7fb6(3): mov %rdx,%rbp
7fb9(1): push %rbx
7fba(3): mov %rdi,%rbx
7fbd(2): jmp 0x6(%rip)
7fbf(1): nop 
7fc0(3): mov %rax,%rbx
7fc3(4): mov 0x8(%rbx),%rax
7fc7(3): test %rax,%rax
7fca(2): jnz 0xfffffff6(%rip)
7fcc(4): mov 0x10(%rbx),%rax
7fd0(3): test %rax,%rax
7fd3(2): jnz 0xffffffed(%rip)
7fd5(3): mov %rbx,%rsi
7fd8(3): mov %rbp,%rdi
7fdb(3): call %r12
7fde(2): test %eax,%eax
7fe0(2): jnz 0x36(%rip)
7fe2(6): nop 0x0(%rax,%rax,1)
7fe8(3): mov (%rbx),%rdx
7feb(3): test %rdx,%rdx
7fee(2): jz 0x28(%rip)
7ff0(4): mov 0x10(%rdx),%rax
7ff4(3): cmp %rbx,%rax
7ff7(3): mov %rdx,%rbx
7ffa(4): setz %sil
7ffe(3): test %rax,%rax
8001(3): setz %cl
8004(3): or %cl,%sil
8007(2): jz 0xffffffb9(%rip)
8009(3): mov %rbx,%rsi
800c(3): mov %rbp,%rdi
800f(3): call %r12
8012(2): test %eax,%eax
8014(2): jz 0xffffffd4(%rip)
8016(1): pop %rbx
8017(1): pop %rbp
8018(2): pop %r12
801a(1): ret near (%rsp)

"preorder" :
8020(2): push %r12
8022(3): mov %rsi,%r12
8025(1): push %rbp
8026(3): mov %rdx,%rbp
8029(1): push %rbx
802a(3): mov %rdi,%rbx
802d(2): jmp 0x6(%rip)
802f(1): nop 
8030(3): mov %rdx,%rbx
8033(3): mov %rbx,%rsi
8036(3): mov %rbp,%rdi
8039(3): call %r12
803c(2): test %eax,%eax
803e(2): jnz 0x2e(%rip)
8040(4): mov 0x8(%rbx),%rdx
8044(2): xor %ecx,%ecx
8046(3): test %rdx,%rdx
8049(2): jnz 0xffffffe7(%rip)
804b(2): jmp 0x8(%rip)
804d(3): nop (%rax)
8050(3): mov %rdx,%rbx
8053(4): mov 0x10(%rbx),%rdx
8057(3): cmp %rcx,%rdx
805a(2): jz 0x7(%rip)
805c(3): test %rdx,%rdx
805f(2): jnz 0xffffffd1(%rip)
8061(3): mov (%rbx),%rdx
8064(3): mov %rbx,%rcx
8067(3): test %rdx,%rdx
806a(2): jnz 0xffffffe6(%rip)
806c(1): pop %rbx
806d(1): pop %rbp
806e(2): pop %r12
8070(1): ret near (%rsp)

"re_string_realloc_buffers" :
8080(1): push %rbp
8081(1): push %rbx
8082(3): mov %rsi,%rbp
8085(3): mov %rdi,%rbx
8088(4): sub $0x8,%rsp
808c(7): cmp $0x1,0x90(%rdi)
8093(2): jle 0x4a(%rip)
8095(a): mov $0x2305843009213693951,%rax
809f(3): cmp %rax,%rsi
80a2(2): jnbe 0x6e(%rip)
80a4(4): mov 0x10(%rdi),%rdi
80a8(8): lea 0x0(,%rsi,4),%rsi
80b0(5): call 0xffff9d50(%rip)
80b5(3): test %rax,%rax
80b8(2): jz 0x58(%rip)
80ba(4): mov 0x18(%rbx),%rdi
80be(4): mov %rax,0x10(%rbx)
80c2(3): test %rdi,%rdi
80c5(2): jz 0x18(%rip)
80c7(8): lea 0x0(,%rbp,8),%rsi
80cf(5): call 0xffff9d31(%rip)
80d4(3): test %rax,%rax
80d7(2): jz 0x39(%rip)
80d9(4): mov %rax,0x18(%rbx)
80dd(7): cmp $0x0,0x8b(%rbx)
80e4(2): jnz 0x14(%rip)
80e6(4): mov %rbp,0x40(%rbx)
80ea(4): add $0x8,%rsp
80ee(2): xor %eax,%eax
80f0(1): pop %rbx
80f1(1): pop %rbp
80f2(1): ret near (%rsp)
80f3(5): nop 0x0(%rax,%rax,1)
80f8(4): mov 0x8(%rbx),%rdi
80fc(3): mov %rbp,%rsi
80ff(5): call 0xffff9d01(%rip)
8104(3): test %rax,%rax
8107(2): jz 0x9(%rip)
8109(4): mov %rax,0x8(%rbx)
810d(2): jmp 0xffffffd9(%rip)
810f(1): nop 
8110(4): add $0x8,%rsp
8114(5): mov $0xc,%eax
8119(1): pop %rbx
811a(1): pop %rbp
811b(1): ret near (%rsp)

"re_node_set_insert_last" :
8120(1): push %rbp
8121(1): push %rbx
8122(3): mov %rsi,%rbp
8125(3): mov %rdi,%rbx
8128(4): sub $0x8,%rsp
812c(4): mov 0x8(%rdi),%rsi
8130(3): cmp %rsi,(%rdi)
8133(4): mov 0x10(%rdi),%rax
8137(2): jz 0x21(%rip)
8139(4): lea 0x1(%rsi),%rdx
813d(4): mov %rdx,0x8(%rbx)
8141(4): mov %rbp,0x0(%rax,%rsi,8)
8145(5): mov $0x1,%eax
814a(4): add $0x8,%rsp
814e(1): pop %rbx
814f(1): pop %rbp
8150(1): ret near (%rsp)
8151(7): nop 0x0(%rax)
8158(4): add $0x1,%rsi
815c(4): lea 0x0(%rsi,%rsi,1),%rdx
8160(4): shl/sal $0x4,%rsi
8164(3): mov %rdx,(%rdi)
8167(3): mov %rax,%rdi
816a(5): call 0xffff9c96(%rip)
816f(3): test %rax,%rax
8172(2): jz 0xe(%rip)
8174(4): mov %rax,0x10(%rbx)
8178(4): mov 0x8(%rbx),%rsi
817c(2): jmp 0xffffffbd(%rip)
817e(2): nop 
8180(2): xor %eax,%eax
8182(2): jmp 0xffffffc8(%rip)

"re_node_set_insert" :
8190(1): push %rbp
8191(1): push %rbx
8192(3): mov %rsi,%rbp
8195(3): mov %rdi,%rbx
8198(4): sub $0x8,%rsp
819c(3): mov (%rdi),%rdx
819f(3): test %rdx,%rdx
81a2(2): jz 0x26(%rip)
81a4(4): mov 0x8(%rdi),%rsi
81a8(4): mov 0x10(%rdi),%rax
81ac(3): test %rsi,%rsi
81af(2): jnz 0x51(%rip)
81b1(3): mov %rbp,(%rax)
81b4(5): add $0x1,0x8(%rdi)
81b9(5): mov $0x1,%eax
81be(4): add $0x8,%rsp
81c2(1): pop %rbx
81c3(1): pop %rbp
81c4(1): ret near (%rsp)
81c5(3): nop (%rax)
81c8(7): mov $0x1,(%rdi)
81cf(8): mov $0x1,0x8(%rdi)
81d7(5): mov $0x8,%edi
81dc(5): call 0xffff9bc4(%rip)
81e1(3): test %rax,%rax
81e4(4): mov %rax,0x10(%rbx)
81e8(6): jz 0x90(%rip)
81ee(3): mov %rbp,(%rax)
81f1(4): add $0x8,%rsp
81f5(5): mov $0x1,%eax
81fa(1): pop %rbx
81fb(1): pop %rbp
81fc(1): ret near (%rsp)
81fd(3): nop (%rax)
8200(3): cmp %rsi,%rdx
8203(6): jz 0x8d(%rip)
8209(3): cmp %rbp,(%rax)
820c(8): lea 0x0(,%rsi,8),%rdx
8214(2): jle 0x3c(%rip)
8216(3): test %rsi,%rsi
8219(2): jle 0x1a(%rip)
821b(3): add %rax,%rdx
821e(2): nop 
8220(4): mov 0xfffffff8(%rdx),%rcx
8224(4): sub $0x8,%rdx
8228(4): mov %rcx,0x8(%rdx)
822c(3): cmp %rdx,%rax
822f(2): jnz 0xfffffff1(%rip)
8231(2): xor %edx,%edx
8233(4): mov %rbp,0x0(%rax,%rdx,1)
8237(5): mov $0x1,%eax
823c(5): add $0x1,0x8(%rbx)
8241(5): jmp 0xffffff7d(%rip)
8246(a): nop 0x0(%rax,%rax,1)
8250(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
8255(3): cmp %rcx,%rbp
8258(2): jnl 0xffffffdb(%rip)
825a(6): nop 0x0(%rax,%rax,1)
8260(4): mov %rcx,0x0(%rax,%rdx,1)
8264(4): sub $0x8,%rdx
8268(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
826d(3): cmp %rbp,%rcx
8270(2): jnle 0xfffffff0(%rip)
8272(2): jmp 0xffffffc1(%rip)
8274(4): nop 0x0(%rax)
8278(8): mov $0x0,0x8(%rbx)
8280(7): mov $0x0,(%rbx)
8287(5): jmp 0xffffff37(%rip)
828c(4): nop 0x0(%rax)
8290(4): lea 0x0(%rsi,%rsi,1),%rdx
8294(4): shl/sal $0x4,%rsi
8298(3): mov %rdx,(%rdi)
829b(3): mov %rax,%rdi
829e(5): call 0xffff9b62(%rip)
82a3(3): test %rax,%rax
82a6(2): jz 0xf(%rip)
82a8(4): mov %rax,0x10(%rbx)
82ac(4): mov 0x8(%rbx),%rsi
82b0(5): jmp 0xffffff59(%rip)
82b5(2): xor %eax,%eax
82b7(5): jmp 0xffffff07(%rip)

"register_state" :
82c0(2): push %r14
82c2(2): push %r13
82c4(3): mov %rdi,%r14
82c7(2): push %r12
82c9(1): push %rbp
82ca(3): mov %rdx,%r12
82cd(1): push %rbx
82ce(4): mov 0x10(%rsi),%rbx
82d2(3): mov %rsi,%rbp
82d5(3): mov %rdx,(%rsi)
82d8(8): mov $0x0,0x28(%rsi)
82e0(4): lea 0x20(%rsi),%r13
82e4(8): lea 0x0(,%rbx,8),%rdi
82ec(4): mov %rbx,0x20(%rsi)
82f0(5): call 0xffff9ab0(%rip)
82f5(3): test %rax,%rax
82f8(4): mov %rax,0x30(%rbp)
82fc(2): jz 0x42(%rip)
82fe(3): test %rbx,%rbx
8301(2): jle 0x4f(%rip)
8303(2): xor %ebx,%ebx
8305(2): jmp 0x15(%rip)
8307(9): nop 0x0(%rax,%rax,1)
8310(4): add $0x1,%rbx
8314(4): cmp %rbx,0x10(%rbp)
8318(2): jle 0x38(%rip)
831a(4): mov 0x18(%rbp),%rax
831e(4): mov 0x0(%rax,%rbx,8),%rsi
8322(3): mov %rsi,%rax
8325(4): shl/sal $0x4,%rax
8329(3): add (%r14),%rax
832c(4): test $0x8,0x8(%rax)
8330(2): jnz 0xffffffe0(%rip)
8332(3): mov %r13,%rdi
8335(5): call 0xfffffdeb(%rip)
833a(2): test %al,%al
833c(2): jnz 0xffffffd4(%rip)
833e(1): pop %rbx
833f(5): mov $0xc,%eax
8344(1): pop %rbp
8345(2): pop %r12
8347(2): pop %r13
8349(2): pop %r14
834b(1): ret near (%rsp)
834c(4): nop 0x0(%rax)
8350(7): and 0x88(%r14),%r12
8357(4): mov 0x40(%r14),%rax
835b(4): lea 0x0(%r12,%r12,2),%rdx
835f(4): lea 0x0(%rax,%rdx,8),%rbx
8363(3): mov (%rbx),%rdx
8366(4): cmp %rdx,0x8(%rbx)
836a(4): mov 0x10(%rbx),%rax
836e(4): lea 0x1(%rdx),%rsi
8372(2): jle 0x14(%rip)
8374(3): mov %rsi,(%rbx)
8377(4): mov %rbp,0x0(%rax,%rdx,8)
837b(2): xor %eax,%eax
837d(1): pop %rbx
837e(1): pop %rbp
837f(2): pop %r12
8381(2): pop %r13
8383(2): pop %r14
8385(1): ret near (%rsp)
8386(4): lea 0x0(%rsi,%rsi,1),%r12
838a(3): mov %rax,%rdi
838d(4): shl/sal $0x4,%rsi
8391(5): call 0xffff9a6f(%rip)
8396(3): test %rax,%rax
8399(2): jz 0xffffffa5(%rip)
839b(3): mov (%rbx),%rdx
839e(4): mov %rax,0x10(%rbx)
83a2(4): mov %r12,0x8(%rbx)
83a6(4): lea 0x1(%rdx),%rsi
83aa(2): jmp 0xffffffca(%rip)

"build_upper_buffer" :
83b0(2): push %r12
83b2(4): mov 0x58(%rdi),%r12
83b6(4): cmp %r12,0x40(%rdi)
83ba(1): push %rbp
83bb(3): mov %rdi,%rbp
83be(5): cmovng 0x40(%rdi),%r12
83c3(1): push %rbx
83c4(4): mov 0x30(%rdi),%rbx
83c8(3): cmp %rbx,%r12
83cb(2): jle 0x3a(%rip)
83cd(5): call 0xffff96f3(%rip)
83d2(6): nop 0x0(%rax,%rax,1)
83d8(4): mov 0x0(%rbp),%rdx
83dc(4): mov 0x78(%rbp),%rcx
83e0(3): add %rbx,%rdx
83e3(4): add 0x28(%rbp),%rdx
83e7(3): test %rcx,%rcx
83ea(3): movzx (%rdx),%edx
83ed(2): jnz 0x2b(%rip)
83ef(3): mov (%rax),%rsi
83f2(4): mov 0x8(%rbp),%rcx
83f6(3): mov 0x0(%rsi,%rdx,4),%edx
83f9(3): mov %dl,0x0(%rcx,%rbx,1)
83fc(4): add $0x1,%rbx
8400(3): cmp %rbx,%r12
8403(2): jnz 0xffffffd5(%rip)
8405(4): mov %rbx,0x30(%rbp)
8409(4): mov %rbx,0x38(%rbp)
840d(1): pop %rbx
840e(1): pop %rbp
840f(2): pop %r12
8411(1): ret near (%rsp)
8412(6): nop 0x0(%rax,%rax,1)
8418(4): movzx 0x0(%rcx,%rdx,1),%edx
841c(2): jmp 0xffffffd3(%rip)

"build_wcs_buffer" :
8420(2): push %r15
8422(2): push %r14
8424(2): push %r13
8426(2): push %r12
8428(1): push %rbp
8429(1): push %rbx
842a(3): mov %rdi,%rbx
842d(4): sub $0x68,%rsp
8431(4): mov 0x58(%rdi),%r12
8435(4): mov 0x30(%rdi),%rbp
8439(9): mov $0x28,%rax
8442(5): mov %rax,0x58(%rsp)
8447(2): xor %eax,%eax
8449(4): cmp %r12,0x40(%rdi)
844d(5): cmovng 0x40(%rdi),%r12
8452(3): cmp %rbp,%r12
8455(6): jle 0x8f(%rip)
845b(4): lea 0x20(%rdi),%r14
845f(5): lea 0xc(%rsp),%r13
8464(4): nop 0x0(%rax)
8468(4): mov 0x78(%rbx),%rdi
846c(3): mov %r12,%rdx
846f(4): mov 0x20(%rbx),%r15
8473(3): sub %rbp,%rdx
8476(3): test %rdi,%rdi
8479(6): jnz 0xe7(%rip)
847f(4): mov 0x28(%rbx),%rsi
8483(3): add %rbp,%rsi
8486(3): add (%rbx),%rsi
8489(3): mov %r14,%rcx
848c(3): mov %r13,%rdi
848f(5): call 0xfffff6a1(%rip)
8494(4): lea 0xffffffff(%rax),%rdx
8498(4): cmp $0xfffffffd,%rdx
849c(6): jnbe 0x94(%rip)
84a2(4): cmp $0xfffffffe,%rax
84a6(4): mov 0xc(%rsp),%edx
84aa(2): jz 0x76(%rip)
84ac(4): mov 0x10(%rbx),%rcx
84b0(4): lea 0x1(%rbp),%rsi
84b4(8): lea 0x0(,%rbp,4),%rdi
84bc(3): mov %edx,0x0(%rcx,%rbp,4)
84bf(3): add %rax,%rbp
84c2(3): cmp %rbp,%rsi
84c5(2): jnl 0x4b(%rip)
84c7(5): lea 0x4(%rcx,%rdi,1),%rdx
84cc(4): lea 0x0(%rcx,%rbp,4),%rax
84d0(6): mov $0xffffffff,(%rdx)
84d6(4): add $0x4,%rdx
84da(3): cmp %rdx,%rax
84dd(2): jnz 0xfffffff3(%rip)
84df(3): cmp %r12,%rbp
84e2(2): jl 0xffffff86(%rip)
84e4(5): mov 0x58(%rsp),%rax
84e9(9): xor $0x28,%rax
84f2(4): mov %rbp,0x30(%rbx)
84f6(4): mov %rbp,0x38(%rbx)
84fa(6): jnz 0xe4(%rip)
8500(4): add $0x68,%rsp
8504(1): pop %rbx
8505(1): pop %rbp
8506(2): pop %r12
8508(2): pop %r13
850a(2): pop %r14
850c(2): pop %r15
850e(1): ret near (%rsp)
850f(1): nop 
8510(3): mov %rsi,%rbp
8513(3): cmp %r12,%rbp
8516(6): jl 0xffffff52(%rip)
851c(2): jmp 0xffffffc8(%rip)
851e(2): nop 
8520(4): mov 0x58(%rbx),%rax
8524(4): cmp %rax,0x40(%rbx)
8528(6): jl 0xa0(%rip)
852e(2): nop 
8530(3): mov (%rbx),%rax
8533(4): mov 0x78(%rbx),%rcx
8537(3): add %rbp,%rax
853a(4): add 0x28(%rbx),%rax
853e(3): test %rcx,%rcx
8541(3): movzx (%rax),%edx
8544(4): mov %edx,0xc(%rsp)
8548(6): jnz 0x89(%rip)
854e(4): mov %r15,0x20(%rbx)
8552(5): mov $0x1,%eax
8557(5): jmp 0xffffff55(%rip)
855c(4): nop 0x0(%rax)
8560(6): mov 0x90(%rbx),%ecx
8566(2): xor %eax,%eax
8568(5): lea 0x10(%rsp),%rsi
856d(2): test %ecx,%ecx
856f(2): jnle 0x22(%rip)
8571(5): jmp 0xffffff18(%rip)
8576(a): nop 0x0(%rax,%rax,1)
8580(4): add $0x1,%rax
8584(3): cmp %rax,%rdx
8587(6): jz 0xffffff02(%rip)
858d(4): mov 0x78(%rbx),%rdi
8591(3): mov (%rbx),%rcx
8594(3): add %rbp,%rcx
8597(3): add %rax,%rcx
859a(4): add 0x28(%rbx),%rcx
859e(3): movzx (%rcx),%ecx
85a1(4): movzx 0x0(%rdi,%rcx,1),%ecx
85a5(4): mov 0x8(%rbx),%rdi
85a9(3): add %rbp,%rdi
85ac(3): mov %cl,0x0(%rdi,%rax,1)
85af(3): mov %cl,0x0(%rsi,%rax,1)
85b2(3): lea 0x1(%rax),%ecx
85b5(6): cmp 0x90(%rbx),%ecx
85bb(2): jl 0xffffffc5(%rip)
85bd(5): jmp 0xfffffecc(%rip)
85c2(6): nop 0x0(%rax,%rax,1)
85c8(4): mov %r15,0x20(%rbx)
85cc(5): jmp 0xffffff18(%rip)
85d1(4): movzx 0x0(%rcx,%rdx,1),%edx
85d5(4): mov %edx,0xc(%rsp)
85d9(5): jmp 0xffffff75(%rip)
85de(5): call 0xffff9642(%rip)

"build_wcs_upper_buffer" :
85f0(2): push %r15
85f2(2): push %r14
85f4(3): mov %rdi,%r14
85f7(2): push %r13
85f9(2): push %r12
85fb(1): push %rbp
85fc(1): push %rbx
85fd(7): sub $0xa8,%rsp
8604(4): mov 0x58(%rdi),%rbx
8608(4): mov 0x30(%rdi),%r15
860c(9): mov $0x28,%rax
8615(8): mov %rax,0x98(%rsp)
861d(2): xor %eax,%eax
861f(4): cmp %rbx,0x40(%rdi)
8623(5): cmovng 0x40(%rdi),%rbx
8628(7): cmp $0x0,0x8a(%rdi)
862f(2): jnz 0xd(%rip)
8631(5): cmp $0x0,0x78(%rdi)
8636(6): jz 0x18a(%rip)
863c(4): mov 0x38(%r14),%r13
8640(3): cmp %rbx,%r15
8643(2): jl 0x3d(%rip)
8645(4): mov %r15,0x30(%r14)
8649(4): mov %r13,0x38(%r14)
864d(2): xor %eax,%eax
864f(8): mov 0x98(%rsp),%rcx
8657(9): xor $0x28,%rcx
8660(6): jnz 0x58a(%rip)
8666(7): add $0xa8,%rsp
866d(1): pop %rbx
866e(1): pop %rbp
866f(2): pop %r12
8671(2): pop %r13
8673(2): pop %r14
8675(2): pop %r15
8677(1): ret near (%rsp)
8678(8): nop 0x0(%rax,%rax,1)
8680(4): lea 0x20(%r14),%rax
8684(5): mov %rax,0x8(%rsp)
8689(3): mov %rbx,%rax
868c(3): sub %r15,%rax
868f(5): mov %rax,0x10(%rsp)
8694(5): lea 0x44(%rsp),%rax
8699(5): mov %rax,0x20(%rsp)
869e(4): mov 0x78(%r14),%rdx
86a2(4): mov 0x20(%r14),%rax
86a6(3): test %rdx,%rdx
86a9(5): mov %rax,0x48(%rsp)
86ae(6): jnz 0x30b(%rip)
86b4(4): mov 0x28(%r14),%rbp
86b8(3): add %r13,%rbp
86bb(3): add (%r14),%rbp
86be(5): mov %rbp,0x18(%rsp)
86c3(5): mov 0x8(%rsp),%rcx
86c8(5): mov 0x10(%rsp),%rdx
86cd(5): mov 0x18(%rsp),%rsi
86d2(5): mov 0x20(%rsp),%rdi
86d7(5): call 0xfffff459(%rip)
86dc(3): mov %rax,%rbp
86df(4): lea 0xffffffff(%rax),%rax
86e3(4): cmp $0xfffffffc,%rax
86e7(5): mov %rax,0x20(%rsp)
86ec(6): jnbe 0x33d(%rip)
86f2(4): mov 0x44(%rsp),%edx
86f6(2): mov %edx,%edi
86f8(4): mov %edx,0x10(%rsp)
86fc(5): call 0xffff97b4(%rip)
8701(4): mov 0x10(%rsp),%edx
8705(3): mov %eax,%r12d
8708(5): mov %r15,0x8(%rsp)
870d(2): cmp %eax,%edx
870f(6): jz 0x301(%rip)
8715(5): lea 0x50(%rsp),%rcx
871a(5): lea 0x48(%rsp),%rdx
871f(2): mov %eax,%esi
8721(3): mov %rcx,%rdi
8724(5): mov %rcx,0x10(%rsp)
8729(5): call 0xffff9687(%rip)
872e(3): cmp %rax,%rbp
8731(3): mov %rax,%r11
8734(5): mov 0x10(%rsp),%rcx
8739(6): jnz 0x38d(%rip)
873f(4): mov 0x8(%r14),%rdi
8743(3): mov %rbp,%rdx
8746(3): mov %rcx,%rsi
8749(3): add %r15,%rdi
874c(5): call 0xffff9624(%rip)
8751(8): cmp $0x0,0x8c(%r14)
8759(5): lea 0x0(%rbp,%r13,1),%rax
875e(6): jnz 0x337(%rip)
8764(4): add $0x1,%r15
8768(5): mov 0x8(%rsp),%rsi
876d(4): mov 0x10(%r14),%rdx
8771(5): lea 0xffffffff(%r15,%rbp,1),%rcx
8776(3): mov %rax,%r13
8779(3): cmp %rcx,%r15
877c(8): lea 0x0(,%rsi,4),%rax
8784(4): mov %r12d,0x0(%rdx,%rsi,4)
8788(6): jnl 0xfffffeb8(%rip)
878e(5): lea 0x4(%rdx,%rax,1),%rax
8793(4): lea 0x0(%rdx,%rcx,4),%rdx
8797(9): nop 0x0(%rax,%rax,1)
87a0(6): mov $0xffffffff,(%rax)
87a6(4): add $0x4,%rax
87aa(3): cmp %rax,%rdx
87ad(2): jnz 0xfffffff3(%rip)
87af(3): mov %rcx,%r15
87b2(5): jmp 0xfffffe8e(%rip)
87b7(9): nop 0x0(%rax,%rax,1)
87c0(7): cmp $0x0,0x8c(%rdi)
87c7(6): jnz 0xfffffe75(%rip)
87cd(3): cmp %rbx,%r15
87d0(6): jnl 0x198(%rip)
87d6(4): lea 0x20(%rdi),%rax
87da(5): mov %rax,0x8(%rsp)
87df(5): lea 0x44(%rsp),%rax
87e4(5): mov %rax,0x30(%rsp)
87e9(5): lea 0x48(%rsp),%rax
87ee(5): mov %rax,0x38(%rsp)
87f3(5): lea 0x50(%rsp),%rax
87f8(5): mov %rax,0x28(%rsp)
87fd(3): nop (%rax)
8800(4): mov 0x28(%r14),%rbp
8804(3): mov %r15,%r13
8807(3): add %r15,%rbp
880a(3): add (%r14),%rbp
880d(5): movzx 0x0(%rbp),%r12d
8812(4): test $0x80,%r12b
8816(2): jnz 0x14(%rip)
8818(5): mov 0x8(%rsp),%rdi
881d(5): call 0xffff96f3(%rip)
8822(2): test %eax,%eax
8824(6): jnz 0xf4(%rip)
882a(4): mov 0x20(%r14),%rax
882e(5): mov 0x30(%rsp),%rdi
8833(3): mov %rbx,%rdx
8836(5): mov 0x8(%rsp),%rcx
883b(3): sub %r15,%rdx
883e(3): mov %rbp,%rsi
8841(5): mov %rdx,0x10(%rsp)
8846(5): mov %rax,0x48(%rsp)
884b(5): mov %rdi,0x20(%rsp)
8850(5): call 0xfffff2e0(%rip)
8855(3): mov %rax,%rbp
8858(4): lea 0xffffffff(%rax),%rax
885c(4): cmp $0xfffffffc,%rax
8860(6): jnbe 0xe8(%rip)
8866(4): mov 0x44(%rsp),%edx
886a(2): mov %edx,%edi
886c(4): mov %edx,0x18(%rsp)
8870(5): call 0xffff9640(%rip)
8875(4): mov 0x18(%rsp),%edx
8879(3): mov %eax,%r12d
887c(2): cmp %eax,%edx
887e(2): jz 0x7a(%rip)
8880(5): mov 0x38(%rsp),%rdx
8885(5): mov 0x28(%rsp),%rdi
888a(2): mov %eax,%esi
888c(5): call 0xffff9524(%rip)
8891(3): cmp %rax,%rbp
8894(6): jnz 0x174(%rip)
889a(4): mov 0x8(%r14),%rdi
889e(5): mov 0x28(%rsp),%rsi
88a3(3): mov %rbp,%rdx
88a6(3): add %r15,%rdi
88a9(5): call 0xffff94c7(%rip)
88ae(4): add $0x1,%r15
88b2(4): mov 0x10(%r14),%rdx
88b6(8): lea 0x0(,%r13,4),%rax
88be(5): lea 0xffffffff(%r15,%rbp,1),%rcx
88c3(3): cmp %rcx,%r15
88c6(4): mov %r12d,0x0(%rdx,%r13,4)
88ca(2): jnl 0x20(%rip)
88cc(5): lea 0x4(%rdx,%rax,1),%rax
88d1(4): lea 0x0(%rdx,%rcx,4),%rdx
88d5(3): nop (%rax)
88d8(6): mov $0xffffffff,(%rax)
88de(4): add $0x4,%rax
88e2(3): cmp %rax,%rdx
88e5(2): jnz 0xfffffff3(%rip)
88e7(3): mov %rcx,%r15
88ea(3): cmp %r15,%rbx
88ed(6): jnle 0xffffff13(%rip)
88f3(2): jmp 0x75(%rip)
88f5(3): nop (%rax)
88f8(4): mov 0x28(%r14),%rsi
88fc(4): mov 0x8(%r14),%rdi
8900(3): mov %rbp,%rdx
8903(3): add %r15,%rsi
8906(3): add (%r14),%rsi
8909(3): add %r15,%rdi
890c(5): call 0xffff9464(%rip)
8911(2): jmp 0xffffff9d(%rip)
8913(5): nop 0x0(%rax,%rax,1)
8918(5): call 0xffff91a8(%rip)
891d(3): mov (%rax),%rax
8920(4): mov 0x8(%r14),%rdx
8924(4): mov 0x0(%rax,%r12,4),%eax
8928(4): mov %al,0x0(%rdx,%r15,1)
892c(4): mov 0x8(%r14),%rdx
8930(4): mov 0x10(%r14),%rax
8934(5): movzx 0x0(%rdx,%r15,1),%edx
8939(4): mov %edx,0x0(%rax,%r15,4)
893d(4): add $0x1,%r15
8941(2): jmp 0xffffffa9(%rip)
8943(5): nop 0x0(%rax,%rax,1)
8948(4): cmp $0xfffffffd,%rax
894c(2): jnz 0x34(%rip)
894e(4): mov 0x58(%r14),%rax
8952(4): cmp %rax,0x40(%r14)
8956(2): jnl 0x2a(%rip)
8958(5): mov 0x48(%rsp),%rax
895d(4): mov %rax,0x20(%r14)
8961(7): nop 0x0(%rax)
8968(4): mov %r15,0x30(%r14)
896c(4): mov %r15,0x38(%r14)
8970(2): xor %eax,%eax
8972(5): jmp 0xfffffcdd(%rip)
8977(9): nop 0x0(%rax,%rax,1)
8980(3): mov (%r14),%rax
8983(4): mov 0x8(%r14),%rdx
8987(3): add %r15,%rax
898a(4): add 0x28(%r14),%rax
898e(3): movzx (%rax),%eax
8991(4): mov %al,0x0(%rdx,%r15,1)
8995(4): mov 0x10(%r14),%rdx
8999(4): add $0x1,%r15
899d(4): cmp $0xffffffff,%rbp
89a1(4): mov %eax,0x0(%rdx,%r13,4)
89a5(6): jnz 0xffffff45(%rip)
89ab(5): mov 0x48(%rsp),%rax
89b0(4): mov %rax,0x20(%r14)
89b4(5): jmp 0xffffff36(%rip)
89b9(7): mov 0x90(%r14),%eax
89c0(2): test %eax,%eax
89c2(6): jle 0x21e(%rip)
89c8(4): mov 0x28(%r14),%rdi
89cc(4): lea 0xffffffff(%rax),%r11d
89d0(5): lea 0x50(%rsp),%rcx
89d5(2): xor %eax,%eax
89d7(3): add %r13,%rdi
89da(3): add (%r14),%rdi
89dd(2): jmp 0xd(%rip)
89df(4): add $0x1,%rax
89e3(5): cmp %rax,0x10(%rsp)
89e8(2): jz 0x13(%rip)
89ea(4): movzx 0x0(%rdi,%rax,1),%esi
89ee(3): cmp %rax,%r11
89f1(4): movzx 0x0(%rdx,%rsi,1),%esi
89f5(4): mov %sil,0x0(%rcx,%rax,1)
89f9(2): jnz 0xffffffe6(%rip)
89fb(5): mov %rcx,0x18(%rsp)
8a00(5): jmp 0xfffffcc3(%rip)
8a05(3): nop (%rax)
8a08(3): mov %r15,%r13
8a0b(5): jmp 0xfffffc93(%rip)
8a10(4): mov 0x8(%r14),%rdi
8a14(5): mov 0x18(%rsp),%rsi
8a19(3): mov %rbp,%rdx
8a1c(3): add %r15,%rdi
8a1f(5): call 0xffff9351(%rip)
8a24(5): jmp 0xfffffd2d(%rip)
8a29(6): cmp $0xfffffffd,0x20(%rsp)
8a2f(2): jnz 0xc(%rip)
8a31(4): mov 0x58(%r14),%rax
8a35(4): cmp %rax,0x40(%r14)
8a39(2): jl 0x7f(%rip)
8a3b(3): mov (%r14),%rax
8a3e(4): mov 0x78(%r14),%rdx
8a42(3): add %r13,%rax
8a45(4): add 0x28(%r14),%rax
8a49(3): test %rdx,%rdx
8a4c(3): movzx (%rax),%eax
8a4f(6): jnz 0x1ad(%rip)
8a55(4): mov 0x8(%r14),%rdx
8a59(3): mov %r15,%rcx
8a5c(4): mov %al,0x0(%rdx,%r15,1)
8a60(8): cmp $0x0,0x8c(%r14)
8a68(6): jnz 0x187(%rip)
8a6e(4): mov 0x10(%r14),%rdx
8a72(4): add $0x1,%r13
8a76(4): add $0x1,%r15
8a7a(4): cmp $0xffffffff,%rbp
8a7e(3): mov %eax,0x0(%rdx,%rcx,4)
8a81(6): jnz 0xfffffbbf(%rip)
8a87(5): mov 0x48(%rsp),%rax
8a8c(4): mov %rax,0x20(%r14)
8a90(5): jmp 0xfffffbb0(%rip)
8a95(4): mov 0x18(%r14),%rdx
8a99(3): mov %r15,%rcx
8a9c(3): mov %r13,%r10
8a9f(3): sub %r13,%rcx
8aa2(4): lea 0x0(%rdx,%rcx,8),%rdx
8aa6(4): mov %r10,0x0(%rdx,%r10,8)
8aaa(4): add $0x1,%r10
8aae(3): cmp %r10,%rax
8ab1(2): jnz 0xfffffff5(%rip)
8ab3(5): jmp 0xfffffcb1(%rip)
8ab8(5): mov 0x48(%rsp),%rax
8abd(4): mov %rax,0x20(%r14)
8ac1(5): jmp 0xfffffb84(%rip)
8ac6(4): cmp $0xffffffff,%rax
8aca(6): jz 0xffffff46(%rip)
8ad0(4): lea 0x0(%rax,%r15,1),%rax
8ad4(3): mov %rax,%rsi
8ad7(5): mov %rax,0x8(%rsp)
8adc(4): mov 0x40(%r14),%rax
8ae0(3): cmp %rax,%rsi
8ae3(2): jnbe 0xffffffd5(%rip)
8ae5(5): cmp $0x0,0x18(%r14)
8aea(6): jz 0xbe(%rip)
8af0(8): cmp $0x0,0x8c(%r14)
8af8(2): jnz 0x22(%rip)
8afa(3): test %r15,%r15
8afd(2): jz 0x15(%rip)
8aff(4): mov 0x18(%r14),%rdx
8b03(2): xor %eax,%eax
8b05(4): mov %rax,0x0(%rdx,%rax,8)
8b09(4): add $0x1,%rax
8b0d(3): cmp %r15,%rax
8b10(2): jnz 0xfffffff5(%rip)
8b12(8): mov $0x1,0x8c(%r14)
8b1a(4): mov 0x8(%r14),%rdi
8b1e(3): mov %rcx,%rsi
8b21(3): mov %r11,%rdx
8b24(5): mov %r11,0x10(%rsp)
8b29(3): add %r15,%rdi
8b2c(5): call 0xffff9244(%rip)
8b31(4): mov 0x10(%r14),%rax
8b35(5): mov 0x10(%rsp),%r11
8b3a(4): lea 0x0(%rax,%r15,4),%rcx
8b3e(4): mov 0x18(%r14),%rax
8b42(4): cmp $0x1,%r11
8b46(3): mov %r12d,(%rcx)
8b49(4): lea 0x0(%rax,%r15,8),%rsi
8b4d(3): mov %r13,(%rsi)
8b50(2): jbe 0x2a(%rip)
8b52(5): mov $0x1,%eax
8b57(5): mov 0x20(%rsp),%rdx
8b5c(3): cmp %rbp,%rax
8b5f(4): cmovnae %rax,%rdx
8b63(3): add %r13,%rdx
8b66(4): mov %rdx,0x0(%rsi,%rax,8)
8b6a(7): mov $0xffffffff,0x0(%rcx,%rax,4)
8b71(4): add $0x1,%rax
8b75(3): cmp %r11,%rax
8b78(2): jnz 0xffffffdf(%rip)
8b7a(4): mov 0x58(%r14),%rbx
8b7e(3): sub %rbp,%r11
8b81(3): add %r11,%rbx
8b84(4): cmp 0x60(%r14),%r13
8b88(4): mov %rbx,0x58(%r14)
8b8c(2): jnl 0x6(%rip)
8b8e(4): add %r11,0x68(%r14)
8b92(4): cmp %rbx,0x40(%r14)
8b96(5): mov 0x8(%rsp),%r15
8b9b(5): cmovng 0x40(%r14),%rbx
8ba0(3): add %rbp,%r13
8ba3(5): jmp 0xfffffa9d(%rip)
8ba8(8): lea 0x0(,%rax,8),%rdi
8bb0(5): mov %rcx,0x18(%rsp)
8bb5(5): mov %r11,0x10(%rsp)
8bba(5): call 0xffff91e6(%rip)
8bbf(3): test %rax,%rax
8bc2(4): mov %rax,0x18(%r14)
8bc6(5): mov 0x10(%rsp),%r11
8bcb(5): mov 0x18(%rsp),%rcx
8bd0(6): jnz 0xffffff20(%rip)
8bd6(5): mov $0xc,%eax
8bdb(5): jmp 0xfffffa74(%rip)
8be0(5): lea 0x50(%rsp),%rcx
8be5(5): jmp 0xfffffe16(%rip)
8bea(5): call 0xffff9036(%rip)
8bef(4): mov 0x18(%r14),%rdx
8bf3(4): mov %r13,0x0(%rdx,%r15,8)
8bf7(5): jmp 0xfffffe77(%rip)
8bfc(4): movzx 0x0(%rdx,%rax,1),%eax
8c00(5): jmp 0xfffffe55(%rip)

"extend_buffers" :
8c10(1): push %rbp
8c11(1): push %rbx
8c12(a): mov $0x1152921504606846974,%rdx
8c1c(4): sub $0x8,%rsp
8c20(4): mov 0x40(%rdi),%rax
8c24(3): cmp %rdx,%rax
8c27(6): jnbe 0x111(%rip)
8c2d(4): mov 0x58(%rdi),%rdx
8c31(3): add %rax,%rax
8c34(3): movsxd %esi,%rsi
8c37(3): mov %rdi,%rbx
8c3a(3): cmp %rdx,%rax
8c3d(4): cmovnl %rdx,%rax
8c41(3): cmp %rsi,%rax
8c44(4): cmovnl %rax,%rsi
8c48(5): call 0xfffff438(%rip)
8c4d(2): test %eax,%eax
8c4f(2): mov %eax,%ebp
8c51(6): jnz 0xbc(%rip)
8c57(7): mov 0xb8(%rbx),%rdi
8c5e(3): test %rdi,%rdi
8c61(2): jz 0x23(%rip)
8c63(4): mov 0x40(%rbx),%rax
8c67(8): lea 0x8(,%rax,8),%rsi
8c6f(5): call 0xffff9191(%rip)
8c74(3): test %rax,%rax
8c77(6): jz 0xc1(%rip)
8c7d(7): mov %rax,0xb8(%rbx)
8c84(7): cmp $0x0,0x88(%rbx)
8c8b(6): mov 0x90(%rbx),%eax
8c91(2): jz 0x1f(%rip)
8c93(3): cmp $0x1,%eax
8c96(3): mov %rbx,%rdi
8c99(6): jle 0xb7(%rip)
8c9f(4): add $0x8,%rsp
8ca3(1): pop %rbx
8ca4(1): pop %rbp
8ca5(5): jmp 0xfffff94b(%rip)
8caa(6): nop 0x0(%rax,%rax,1)
8cb0(3): cmp $0x1,%eax
8cb3(2): jnle 0x6d(%rip)
8cb5(4): mov 0x78(%rbx),%rcx
8cb9(3): test %rcx,%rcx
8cbc(2): jz 0x51(%rip)
8cbe(4): mov 0x58(%rbx),%rsi
8cc2(4): cmp %rsi,0x40(%rbx)
8cc6(5): cmovng 0x40(%rbx),%rsi
8ccb(4): mov 0x30(%rbx),%rax
8ccf(3): cmp %rax,%rsi
8cd2(2): jnle 0x12(%rip)
8cd4(2): jmp 0x31(%rip)
8cd6(a): nop 0x0(%rax,%rax,1)
8ce0(4): mov 0x78(%rbx),%rcx
8ce4(3): mov (%rbx),%rdx
8ce7(3): add %rax,%rdx
8cea(4): add 0x28(%rbx),%rdx
8cee(3): movzx (%rdx),%edx
8cf1(4): movzx 0x0(%rcx,%rdx,1),%ecx
8cf5(4): mov 0x8(%rbx),%rdx
8cf9(3): mov %cl,0x0(%rdx,%rax,1)
8cfc(4): add $0x1,%rax
8d00(3): cmp %rax,%rsi
8d03(2): jnz 0xffffffdd(%rip)
8d05(4): mov %rax,0x30(%rbx)
8d09(4): mov %rax,0x38(%rbx)
8d0d(4): add $0x8,%rsp
8d11(2): mov %ebp,%eax
8d13(1): pop %rbx
8d14(1): pop %rbp
8d15(1): ret near (%rsp)
8d16(a): nop 0x0(%rax,%rax,1)
8d20(3): mov %rbx,%rdi
8d23(5): call 0xfffff6fd(%rip)
8d28(4): add $0x8,%rsp
8d2c(2): mov %ebp,%eax
8d2e(1): pop %rbx
8d2f(1): pop %rbp
8d30(1): ret near (%rsp)
8d31(7): nop 0x0(%rax)
8d38(5): mov $0xc,%ebp
8d3d(4): add $0x8,%rsp
8d41(2): mov %ebp,%eax
8d43(1): pop %rbx
8d44(1): pop %rbp
8d45(1): ret near (%rsp)
8d46(a): nop 0x0(%rax,%rax,1)
8d50(5): call 0xfffff660(%rip)
8d55(4): add $0x8,%rsp
8d59(2): mov %ebp,%eax
8d5b(1): pop %rbx
8d5c(1): pop %rbp
8d5d(1): ret near (%rsp)

"clean_state_log_if_needed" :
8d60(2): push %r12
8d62(1): push %rbp
8d63(3): mov %rsi,%rbp
8d66(1): push %rbx
8d67(4): mov 0x40(%rdi),%rax
8d6b(3): mov %rdi,%rbx
8d6e(7): mov 0xc0(%rdi),%r12
8d75(3): cmp %rsi,%rax
8d78(2): jnle 0x28(%rip)
8d7a(4): cmp 0x58(%rdi),%rax
8d7e(2): jnl 0x22(%rip)
8d80(3): lea 0x1(%rbp),%esi
8d83(3): mov %rbx,%rdi
8d86(5): call 0xfffffe8a(%rip)
8d8b(2): test %eax,%eax
8d8d(2): jnz 0x9(%rip)
8d8f(3): cmp %rbp,%r12
8d92(2): jl 0x2e(%rip)
8d94(2): xor %eax,%eax
8d96(1): pop %rbx
8d97(1): pop %rbp
8d98(2): pop %r12
8d9a(1): ret near (%rsp)
8d9b(5): nop 0x0(%rax,%rax,1)
8da0(4): mov 0x30(%rbx),%rax
8da4(3): cmp %rbp,%rax
8da7(2): jnle 0xffffffe8(%rip)
8da9(4): cmp 0x58(%rbx),%rax
8dad(2): jnl 0xffffffe2(%rip)
8daf(3): lea 0x1(%rbp),%esi
8db2(3): mov %rbx,%rdi
8db5(5): call 0xfffffe5b(%rip)
8dba(2): test %eax,%eax
8dbc(2): jz 0xffffffd3(%rip)
8dbe(2): jmp 0xffffffd8(%rip)
8dc0(7): mov 0xb8(%rbx),%rax
8dc7(3): mov %rbp,%rdx
8dca(2): xor %esi,%esi
8dcc(3): sub %r12,%rdx
8dcf(4): shl/sal $0x3,%rdx
8dd3(5): lea 0x8(%rax,%r12,8),%rdi
8dd8(5): call 0xffff8ed8(%rip)
8ddd(7): mov %rbp,0xc0(%rbx)
8de4(2): jmp 0xffffffb0(%rip)

"free_charset" :
8df0(1): push %rbx
8df1(3): mov %rdi,%rbx
8df4(3): mov (%rdi),%rdi
8df7(5): call 0xffff8d09(%rip)
8dfc(4): mov 0x8(%rbx),%rdi
8e00(5): call 0xffff8d00(%rip)
8e05(4): mov 0x10(%rbx),%rdi
8e09(5): call 0xffff8cf7(%rip)
8e0e(4): mov 0x18(%rbx),%rdi
8e12(5): call 0xffff8cee(%rip)
8e17(3): mov %rbx,%rdi
8e1a(1): pop %rbx
8e1b(5): jmp 0xffff8ce5(%rip)

"free_token" :
8e20(3): mov 0x8(%rdi),%eax
8e23(5): and $0x400ff,%eax
8e28(3): cmp $0x6,%eax
8e2b(2): jz 0x15(%rip)
8e2d(3): cmp $0x3,%eax
8e30(2): jz 0x8(%rip)
8e32(2): REP ret near (%rsp)
8e34(4): nop 0x0(%rax)
8e38(3): mov (%rdi),%rdi
8e3b(5): jmp 0xffff8cc5(%rip)
8e40(3): mov (%rdi),%rdi
8e43(2): jmp 0xffffffad(%rip)

"free_tree" :
8e50(4): lea 0x28(%rsi),%rdi
8e54(4): sub $0x8,%rsp
8e58(5): call 0xffffffc8(%rip)
8e5d(2): xor %eax,%eax
8e5f(4): add $0x8,%rsp
8e63(1): ret near (%rsp)

"re_dfa_add_node" :
8e70(2): push %r15
8e72(2): push %r14
8e74(3): mov %rsi,%r14
8e77(2): push %r13
8e79(2): push %r12
8e7b(1): push %rbp
8e7c(1): push %rbx
8e7d(3): mov %rdi,%rbx
8e80(4): sub $0x18,%rsp
8e84(4): mov 0x10(%rdi),%rsi
8e88(4): mov 0x8(%rdi),%rbp
8e8c(3): cmp %rbp,%rsi
8e8f(6): jnb 0xb1(%rip)
8e95(4): mov 0x18(%rdi),%r12
8e99(4): mov 0x28(%rdi),%rbp
8e9d(3): mov %rsi,%rax
8ea0(2): mov %edx,%ecx
8ea2(4): shl/sal $0x4,%rax
8ea6(3): add (%rbx),%rax
8ea9(6): and $0xfffc00ff,%ecx
8eaf(4): mov %rdx,0x8(%rax)
8eb3(3): mov %ecx,0x8(%rax)
8eb6(2): xor %ecx,%ecx
8eb8(3): cmp $0x6,%dl
8ebb(3): mov %r14,(%rax)
8ebe(3): setz %cl
8ec1(3): cmp $0x5,%dl
8ec4(2): jnz 0xe(%rip)
8ec6(2): xor %ecx,%ecx
8ec8(7): cmp $0x1,0xb4(%rbx)
8ecf(3): setnle %cl
8ed2(4): movzx 0xa(%rax),%edx
8ed6(3): shl/sal $0x4,%ecx
8ed9(4): pxor %xmm0,%xmm0
8edd(3): and $0xef,%edx
8ee0(2): or %ecx,%edx
8ee2(3): mov %dl,0xa(%rax)
8ee5(8): mov $0xffffffff,0x0(%r12,%rsi,8)
8eed(4): mov 0x10(%rbx),%rax
8ef1(4): lea 0x0(%rax,%rax,2),%rax
8ef5(5): lea 0x0(%rbp,%rax,8),%rax
8efa(3): movups %xmm0,(%rax)
8efd(8): mov $0x0,0x10(%rax)
8f05(4): mov 0x10(%rbx),%rax
8f09(4): lea 0x0(%rax,%rax,2),%rdx
8f0d(4): mov 0x30(%rbx),%rax
8f11(4): lea 0x0(%rax,%rdx,8),%rax
8f15(3): movups %xmm0,(%rax)
8f18(8): mov $0x0,0x10(%rax)
8f20(4): mov 0x10(%rbx),%rax
8f24(4): lea 0x1(%rax),%rdx
8f28(4): mov %rdx,0x10(%rbx)
8f2c(4): add $0x18,%rsp
8f30(1): pop %rbx
8f31(1): pop %rbp
8f32(2): pop %r12
8f34(2): pop %r13
8f36(2): pop %r14
8f38(2): pop %r15
8f3a(1): ret near (%rsp)
8f3b(5): nop 0x0(%rax,%rax,1)
8f40(5): lea 0x0(%rbp,%rbp,1),%r13
8f45(a): mov $0x768614336404564650,%rax
8f4f(3): cmp %rax,%r13
8f52(6): jnbe 0xe0(%rip)
8f58(3): mov (%rdi),%rdi
8f5b(3): mov %rbp,%rsi
8f5e(5): mov %rdx,0x8(%rsp)
8f63(4): shl/sal $0x5,%rsi
8f67(5): call 0xffff8e99(%rip)
8f6c(3): test %rax,%rax
8f6f(6): jz 0xc3(%rip)
8f75(3): mov %rbp,%r15
8f78(4): mov 0x18(%rbx),%rdi
8f7c(3): mov %rax,(%rbx)
8f7f(4): shl/sal $0x4,%r15
8f83(3): mov %r15,%rsi
8f86(5): call 0xffff8e7a(%rip)
8f8b(4): mov 0x20(%rbx),%rdi
8f8f(3): mov %r15,%rsi
8f92(5): lea 0x0(%r13,%rbp,4),%r15
8f97(3): mov %rax,%r12
8f9a(4): shl/sal $0x3,%r15
8f9e(5): call 0xffff8e62(%rip)
8fa3(4): mov 0x28(%rbx),%rdi
8fa7(3): mov %r15,%rsi
8faa(4): mov %rax,(%rsp)
8fae(5): call 0xffff8e52(%rip)
8fb3(4): mov 0x30(%rbx),%rdi
8fb7(3): mov %r15,%rsi
8fba(3): mov %rax,%rbp
8fbd(5): call 0xffff8e43(%rip)
8fc2(3): test %r12,%r12
8fc5(4): mov (%rsp),%rcx
8fc9(2): jz 0x37(%rip)
8fcb(3): test %rcx,%rcx
8fce(2): jz 0x32(%rip)
8fd0(3): test %rbp,%rbp
8fd3(2): jz 0x2d(%rip)
8fd5(3): test %rax,%rax
8fd8(5): mov 0x8(%rsp),%rdx
8fdd(2): jz 0x23(%rip)
8fdf(4): mov %r12,0x18(%rbx)
8fe3(4): mov %rcx,0x20(%rbx)
8fe7(4): mov %rbp,0x28(%rbx)
8feb(4): mov %rax,0x30(%rbx)
8fef(4): mov %r13,0x8(%rbx)
8ff3(4): mov 0x10(%rbx),%rsi
8ff7(5): jmp 0xfffffea6(%rip)
8ffc(4): nop 0x0(%rax)
9000(3): mov %r12,%rdi
9003(5): mov %rax,0x8(%rsp)
9008(4): mov %rcx,(%rsp)
900c(5): call 0xffff8af4(%rip)
9011(4): mov (%rsp),%rcx
9015(3): mov %rcx,%rdi
9018(5): call 0xffff8ae8(%rip)
901d(3): mov %rbp,%rdi
9020(5): call 0xffff8ae0(%rip)
9025(5): mov 0x8(%rsp),%rax
902a(3): mov %rax,%rdi
902d(5): call 0xffff8ad3(%rip)
9032(7): mov $0xffffffff,%rax
9039(5): jmp 0xfffffef3(%rip)

"duplicate_node" :
9040(2): push %r13
9042(2): push %r12
9044(3): mov %rsi,%r13
9047(1): push %rbp
9048(1): push %rbx
9049(4): shl/sal $0x4,%r13
904d(3): mov %rsi,%rbp
9050(3): mov %edx,%r12d
9053(3): mov %rdi,%rbx
9056(4): sub $0x8,%rsp
905a(3): mov (%rdi),%rax
905d(4): mov 0x0(%rax,%r13,1),%rsi
9061(5): mov 0x8(%rax,%r13,1),%rdx
9066(5): call 0xfffffe0a(%rip)
906b(4): cmp $0xffffffff,%rax
906f(2): jz 0x65(%rip)
9071(3): mov %r12d,%edi
9074(3): mov (%rbx),%r8
9077(3): mov %rax,%rsi
907a(5): and $0x3ff,%di
907f(4): shl/sal $0x4,%rsi
9083(2): mov %edi,%ecx
9085(6): and $0x3ff,%ecx
908b(3): add %r8,%rsi
908e(3): shl/sal $0x8,%ecx
9091(2): mov %ecx,%edx
9093(3): mov 0x8(%rsi),%ecx
9096(6): and $0xfffc00ff,%ecx
909c(2): or %edx,%ecx
909e(3): mov %ecx,0x8(%rsi)
90a1(5): mov 0x8(%r8,%r13,1),%edx
90a6(6): and $0xfffc00ff,%ecx
90ac(3): shr $0x8,%edx
90af(2): or %edi,%edx
90b1(6): and $0x3ff,%edx
90b7(3): shl/sal $0x8,%edx
90ba(2): or %ecx,%edx
90bc(2): mov %edx,%ecx
90be(3): mov %edx,0x8(%rsi)
90c1(3): shr $0x10,%ecx
90c4(2): mov %ecx,%edx
90c6(3): or $0x4,%edx
90c9(3): mov %dl,0xa(%rsi)
90cc(4): mov 0x20(%rbx),%rdx
90d0(4): mov %rbp,0x0(%rdx,%rax,8)
90d4(4): add $0x8,%rsp
90d8(1): pop %rbx
90d9(1): pop %rbp
90da(2): pop %r12
90dc(2): pop %r13
90de(1): ret near (%rsp)

"duplicate_node_closure" :
90e0(2): push %r15
90e2(2): push %r14
90e4(3): mov %rsi,%r9
90e7(2): push %r13
90e9(2): push %r12
90eb(3): mov %rdi,%r14
90ee(1): push %rbp
90ef(1): push %rbx
90f0(3): mov %rdx,%r13
90f3(3): mov %r8d,%ebp
90f6(4): sub $0x18,%rsp
90fa(5): mov %rcx,0x8(%rsp)
90ff(3): mov (%r14),%r8
9102(3): mov %r9,%rax
9105(4): mov 0x28(%r14),%rdi
9109(4): shl/sal $0x4,%rax
910d(3): mov %r13,%r12
9110(3): add %r8,%rax
9113(4): cmp $0x4,0x8(%rax)
9117(6): jz 0x1b9(%rip)
911d(4): lea 0x0(%r9,%r9,2),%r12
9121(4): shl/sal $0x3,%r12
9125(4): lea 0x0(%rdi,%r12,1),%rsi
9129(4): mov 0x8(%rsi),%rcx
912d(3): test %rcx,%rcx
9130(6): jz 0x1f9(%rip)
9136(5): lea 0x0(%r13,%r13,2),%rbx
913b(4): mov 0x10(%rsi),%rsi
913f(4): shl/sal $0x3,%rbx
9143(3): add %rbx,%rdi
9146(4): cmp $0x1,%rcx
914a(3): mov (%rsi),%r15
914d(8): mov $0x0,0x8(%rdi)
9155(6): jz 0x11b(%rip)
915b(4): mov 0x10(%r14),%rdx
915f(4): lea 0xffffffff(%rdx),%rsi
9163(3): mov %rsi,%rax
9166(4): shl/sal $0x4,%rax
916a(3): add %r8,%rax
916d(4): test $0x4,0xa(%rax)
9171(6): jz 0xaf(%rip)
9177(3): test %rsi,%rsi
917a(6): jle 0xa6(%rip)
9180(4): shl/sal $0x4,%rdx
9184(3): sub %rax,%r8
9187(4): mov 0x20(%r14),%rcx
918b(5): lea 0xffffffe0(%r8,%rdx,1),%r8
9190(2): jmp 0x1a(%rip)
9192(6): nop 0x0(%rax,%rax,1)
9198(3): add %r8,%rax
919b(4): sub $0x1,%rsi
919f(4): test $0x4,0xa(%rax)
91a3(2): jz 0x7d(%rip)
91a5(3): test %rsi,%rsi
91a8(2): jle 0x78(%rip)
91aa(4): cmp %r15,0x0(%rcx,%rsi,8)
91ae(2): jnz 0xffffffea(%rip)
91b0(3): mov 0x8(%rax),%edx
91b3(3): shr $0x8,%edx
91b6(6): and $0x3ff,%edx
91bc(2): cmp %edx,%ebp
91be(2): jnz 0xffffffda(%rip)
91c0(5): call 0xffffefd0(%rip)
91c5(2): test %al,%al
91c7(2): jz 0x44(%rip)
91c9(4): mov 0x28(%r14),%rax
91cd(2): mov %ebp,%edx
91cf(3): mov %r14,%rdi
91d2(5): mov 0x10(%rax,%r12,1),%rax
91d7(4): mov 0x8(%rax),%r9
91db(3): mov %r9,%rsi
91de(4): mov %r9,(%rsp)
91e2(5): call 0xfffffe5e(%rip)
91e7(4): cmp $0xffffffff,%rax
91eb(3): mov %rax,%r13
91ee(2): jz 0x1d(%rip)
91f0(4): add 0x28(%r14),%rbx
91f4(3): mov %r13,%rsi
91f7(3): mov %rbx,%rdi
91fa(5): call 0xffffef96(%rip)
91ff(2): test %al,%al
9201(4): mov (%rsp),%r9
9205(6): jnz 0xfffffefa(%rip)
920b(5): mov $0xc,%eax
9210(4): add $0x18,%rsp
9214(1): pop %rbx
9215(1): pop %rbp
9216(2): pop %r12
9218(2): pop %r13
921a(2): pop %r14
921c(2): pop %r15
921e(1): ret near (%rsp)
921f(1): nop 
9220(2): mov %ebp,%edx
9222(3): mov %r15,%rsi
9225(3): mov %r14,%rdi
9228(5): call 0xfffffe18(%rip)
922d(4): cmp $0xffffffff,%rax
9231(3): mov %rax,%r13
9234(2): jz 0xffffffd7(%rip)
9236(4): mov 0x28(%r14),%rdi
923a(3): mov %r13,%rsi
923d(3): add %rbx,%rdi
9240(5): call 0xffffef50(%rip)
9245(2): test %al,%al
9247(2): jz 0xffffffc4(%rip)
9249(5): mov 0x8(%rsp),%rcx
924e(3): mov %ebp,%r8d
9251(3): mov %r13,%rdx
9254(3): mov %r15,%rsi
9257(3): mov %r14,%rdi
925a(5): call 0xfffffe86(%rip)
925f(2): test %eax,%eax
9261(6): jz 0xffffff68(%rip)
9267(2): jmp 0xffffffa9(%rip)
9269(7): nop 0x0(%rax)
9270(5): cmp 0x8(%rsp),%r9
9275(2): jnz 0xb(%rip)
9277(3): cmp %r13,%r9
927a(6): jnz 0xc2(%rip)
9280(3): mov 0x8(%rax),%eax
9283(3): mov %r15,%rsi
9286(3): mov %r14,%rdi
9289(3): shr $0x8,%eax
928c(5): and $0x3ff,%eax
9291(2): or %eax,%ebp
9293(2): mov %ebp,%edx
9295(5): call 0xfffffdab(%rip)
929a(4): cmp $0xffffffff,%rax
929e(3): mov %rax,%r13
92a1(6): jz 0xffffff6a(%rip)
92a7(4): add 0x28(%r14),%rbx
92ab(3): mov %rax,%rsi
92ae(3): mov %rbx,%rdi
92b1(5): call 0xffffeedf(%rip)
92b6(2): test %al,%al
92b8(6): jz 0xffffff53(%rip)
92be(3): mov %r15,%r9
92c1(5): jmp 0xfffffe3e(%rip)
92c6(a): nop 0x0(%rax,%rax,1)
92d0(4): mov 0x18(%r14),%rax
92d4(5): lea 0x0(%r13,%r13,2),%rbx
92d9(8): lea 0x0(,%r9,8),%r15
92e1(2): mov %ebp,%edx
92e3(4): shl/sal $0x3,%rbx
92e7(4): mov 0x0(%rax,%r9,8),%r9
92eb(9): mov $0x0,0x8(%rdi,%rbx,1)
92f4(3): mov %r14,%rdi
92f7(3): mov %r9,%rsi
92fa(4): mov %r9,(%rsp)
92fe(5): call 0xfffffd42(%rip)
9303(4): cmp $0xffffffff,%rax
9307(3): mov %rax,%r13
930a(4): mov (%rsp),%r9
930e(6): jz 0xfffffefd(%rip)
9314(4): mov 0x18(%r14),%rax
9318(4): mov %r9,(%rsp)
931c(4): mov 0x0(%rax,%r15,1),%rcx
9320(4): mov %rcx,0x0(%rax,%r12,8)
9324(5): jmp 0xfffffecc(%rip)
9329(4): mov 0x18(%r14),%rax
932d(4): mov 0x0(%rax,%r9,8),%rcx
9331(4): mov %rcx,0x0(%rax,%r13,8)
9335(2): xor %eax,%eax
9337(5): jmp 0xfffffed9(%rip)
933c(3): mov %r15,%rsi
933f(5): call 0xffffee51(%rip)
9344(2): mov %eax,%edx
9346(2): xor %eax,%eax
9348(2): test %dl,%dl
934a(6): jnz 0xfffffec6(%rip)
9350(5): jmp 0xfffffebb(%rip)

"free_state" :
9360(1): push %rbx
9361(3): mov %rdi,%rbx
9364(4): mov 0x30(%rdi),%rdi
9368(5): call 0xffff8798(%rip)
936d(4): mov 0x48(%rbx),%rdi
9371(5): call 0xffff878f(%rip)
9376(4): mov 0x50(%rbx),%rax
937a(4): lea 0x8(%rbx),%rdx
937e(3): cmp %rdx,%rax
9381(2): jz 0x14(%rip)
9383(4): mov 0x10(%rax),%rdi
9387(5): call 0xffff8779(%rip)
938c(4): mov 0x50(%rbx),%rdi
9390(5): call 0xffff8770(%rip)
9395(4): mov 0x18(%rbx),%rdi
9399(5): call 0xffff8767(%rip)
939e(4): mov 0x60(%rbx),%rdi
93a2(5): call 0xffff875e(%rip)
93a7(4): mov 0x58(%rbx),%rdi
93ab(5): call 0xffff8755(%rip)
93b0(3): mov %rbx,%rdi
93b3(1): pop %rbx
93b4(5): jmp 0xffff874c(%rip)

"re_string_destruct" :
93c0(1): push %rbx
93c1(3): mov %rdi,%rbx
93c4(4): mov 0x10(%rdi),%rdi
93c8(5): call 0xffff8738(%rip)
93cd(4): mov 0x18(%rbx),%rdi
93d1(5): call 0xffff872f(%rip)
93d6(7): cmp $0x0,0x8b(%rbx)
93dd(2): jnz 0xb(%rip)
93df(1): pop %rbx
93e0(1): ret near (%rsp)
93e1(7): nop 0x0(%rax)
93e8(4): mov 0x8(%rbx),%rdi
93ec(1): pop %rbx
93ed(5): jmp 0xffff8713(%rip)

"free_dfa_content" :
9400(2): push %r14
9402(2): push %r13
9404(2): push %r12
9406(3): mov %rdi,%r12
9409(1): push %rbp
940a(1): push %rbx
940b(3): mov (%rdi),%rdi
940e(3): test %rdi,%rdi
9411(2): jz 0x2d(%rip)
9413(6): cmp $0x0,0x10(%r12)
9419(2): jz 0x25(%rip)
941b(2): xor %ebx,%ebx
941d(2): jmp 0x7(%rip)
941f(1): nop 
9420(4): mov (%r12),%rdi
9424(3): mov %rbx,%rax
9427(4): add $0x1,%rbx
942b(4): shl/sal $0x4,%rax
942f(3): add %rax,%rdi
9432(5): call 0xfffff9ee(%rip)
9437(5): cmp %rbx,0x10(%r12)
943c(2): jnbe 0xffffffe4(%rip)
943e(5): mov 0x18(%r12),%rdi
9443(5): call 0xffff86bd(%rip)
9448(6): cmp $0x0,0x10(%r12)
944e(2): jz 0x55(%rip)
9450(2): xor %ebx,%ebx
9452(2): xor %ebp,%ebp
9454(4): nop 0x0(%rax)
9458(5): mov 0x30(%r12),%rax
945d(3): test %rax,%rax
9460(2): jz 0xc(%rip)
9462(5): mov 0x10(%rax,%rbx,1),%rdi
9467(5): call 0xffff8699(%rip)
946c(5): mov 0x38(%r12),%rax
9471(3): test %rax,%rax
9474(2): jz 0xc(%rip)
9476(5): mov 0x10(%rax,%rbx,1),%rdi
947b(5): call 0xffff8685(%rip)
9480(5): mov 0x28(%r12),%rax
9485(3): test %rax,%rax
9488(2): jz 0xc(%rip)
948a(5): mov 0x10(%rax,%rbx,1),%rdi
948f(5): call 0xffff8671(%rip)
9494(4): add $0x1,%rbp
9498(4): add $0x18,%rbx
949c(5): cmp %rbp,0x10(%r12)
94a1(2): jnbe 0xffffffb7(%rip)
94a3(5): mov 0x28(%r12),%rdi
94a8(5): call 0xffff8658(%rip)
94ad(5): mov 0x30(%r12),%rdi
94b2(5): call 0xffff864e(%rip)
94b7(5): mov 0x38(%r12),%rdi
94bc(5): call 0xffff8644(%rip)
94c1(4): mov (%r12),%rdi
94c5(5): call 0xffff863b(%rip)
94ca(5): mov 0x40(%r12),%rdi
94cf(3): test %rdi,%rdi
94d2(2): jz 0x55(%rip)
94d4(3): xor %r14d,%r14d
94d7(3): xor %r13d,%r13d
94da(6): nop 0x0(%rax,%rax,1)
94e0(4): lea 0x0(%rdi,%r14,1),%rbp
94e4(5): cmp $0x0,0x0(%rbp)
94e9(2): jle 0x1e(%rip)
94eb(2): xor %ebx,%ebx
94ed(3): nop (%rax)
94f0(4): mov 0x10(%rbp),%rax
94f4(4): mov 0x0(%rax,%rbx,8),%rdi
94f8(4): add $0x1,%rbx
94fc(5): call 0xfffffe64(%rip)
9501(4): cmp %rbx,0x0(%rbp)
9505(2): jnle 0xffffffeb(%rip)
9507(4): mov 0x10(%rbp),%rdi
950b(4): add $0x1,%r13
950f(4): add $0x18,%r14
9513(5): call 0xffff85ed(%rip)
9518(8): cmp %r13,0x88(%r12)
9520(5): mov 0x40(%r12),%rdi
9525(2): jnb 0xffffffbb(%rip)
9527(5): call 0xffff85d9(%rip)
952c(5): mov 0x78(%r12),%rdi
9531(7): lea 0xe708(%rip),%rax
9538(3): cmp %rax,%rdi
953b(2): jz 0x7(%rip)
953d(5): call 0xffff85c3(%rip)
9542(8): mov 0xe0(%r12),%rdi
954a(5): call 0xffff85b6(%rip)
954f(1): pop %rbx
9550(3): mov %r12,%rdi
9553(1): pop %rbp
9554(2): pop %r12
9556(2): pop %r13
9558(2): pop %r14
955a(5): jmp 0xffff85a6(%rip)

"match_ctx_clean" :
9560(2): push %r14
9562(2): push %r13
9564(3): mov %rdi,%r14
9567(2): push %r12
9569(1): push %rbp
956a(1): push %rbx
956b(8): cmp $0x0,0xe8(%rdi)
9573(6): jle 0x86(%rip)
9579(3): xor %r13d,%r13d
957c(4): nop 0x0(%rax)
9580(7): mov 0xf8(%r14),%rax
9587(4): mov 0x0(%rax,%r13,8),%r12
958b(6): cmp $0x0,0x20(%r12)
9591(2): jle 0x2c(%rip)
9593(2): xor %ebx,%ebx
9595(3): nop (%rax)
9598(5): mov 0x28(%r12),%rax
959d(4): mov 0x0(%rax,%rbx,8),%rbp
95a1(4): add $0x1,%rbx
95a5(4): mov 0x20(%rbp),%rdi
95a9(5): call 0xffff8557(%rip)
95ae(3): mov %rbp,%rdi
95b1(5): call 0xffff854f(%rip)
95b6(5): cmp %rbx,0x20(%r12)
95bb(2): jnle 0xffffffdd(%rip)
95bd(5): mov 0x28(%r12),%rdi
95c2(5): call 0xffff853e(%rip)
95c7(5): mov 0x10(%r12),%rax
95cc(3): test %rax,%rax
95cf(2): jz 0x15(%rip)
95d1(4): mov 0x10(%rax),%rdi
95d5(5): call 0xffff852b(%rip)
95da(5): mov 0x10(%r12),%rdi
95df(5): call 0xffff8521(%rip)
95e4(3): mov %r12,%rdi
95e7(4): add $0x1,%r13
95eb(5): call 0xffff8515(%rip)
95f0(7): cmp %r13,0xe8(%r14)
95f7(2): jnle 0xffffff89(%rip)
95f9(1): pop %rbx
95fa(b): mov $0x0,0xe8(%r14)
9605(b): mov $0x0,0xc8(%r14)
9610(1): pop %rbp
9611(2): pop %r12
9613(2): pop %r13
9615(2): pop %r14
9617(1): ret near (%rsp)

"re_string_char_size_at.part.0" :
9620(4): mov 0x30(%rdi),%rcx
9624(4): lea 0x1(%rsi),%rax
9628(3): cmp %rcx,%rax
962b(2): jnl 0x3d(%rip)
962d(4): mov 0x10(%rdi),%rdx
9631(8): lea 0x0(,%rax,4),%rdi
9639(4): cmp $0xff,0x0(%rdx,%rax,4)
963d(2): jnz 0x2b(%rip)
963f(3): sub %rsi,%rcx
9642(5): lea 0xfffffffc(%rdx,%rdi,1),%rsi
9647(5): mov $0x2,%edx
964c(2): jmp 0xf(%rip)
964e(2): nop 
9650(4): add $0x1,%rdx
9654(5): cmp $0xff,0xfffffffc(%rsi,%rdx,4)
9659(2): jnz 0x14(%rip)
965b(3): cmp %rcx,%rdx
965e(2): mov %edx,%eax
9660(2): jnz 0xfffffff0(%rip)
9662(2): REP ret near (%rsp)
9664(4): nop 0x0(%rax)
9668(5): mov $0x1,%eax
966d(2): REP ret near (%rsp)

"re_node_set_compare.part.2" :
9670(4): mov 0x8(%rdi),%rdx
9674(2): xor %eax,%eax
9676(4): cmp 0x8(%rsi),%rdx
967a(2): jz 0x6(%rip)
967c(2): REP ret near (%rsp)
967e(2): nop 
9680(4): lea 0xffffffff(%rdx),%rax
9684(8): lea 0x0(,%rax,8),%rdx
968c(2): jmp 0x21(%rip)
968e(2): nop 
9690(4): mov 0x10(%rdi),%rcx
9694(4): mov 0x0(%rcx,%rdx,1),%r8
9698(4): mov 0x10(%rsi),%rcx
969c(4): mov 0x0(%rcx,%rdx,1),%rcx
96a0(4): sub $0x8,%rdx
96a4(3): cmp %rcx,%r8
96a7(2): jnz 0x19(%rip)
96a9(4): sub $0x1,%rax
96ad(3): test %rax,%rax
96b0(2): jns 0xffffffe0(%rip)
96b2(5): mov $0x1,%eax
96b7(1): ret near (%rsp)
96b8(8): nop 0x0(%rax,%rax,1)
96c0(2): xor %eax,%eax
96c2(1): ret near (%rsp)

"re_node_set_contains.isra.3" :
96d0(2): xor %eax,%eax
96d2(3): test %rdi,%rdi
96d5(2): jle 0x40(%rip)
96d7(3): mov (%rsi),%r8
96da(4): sub $0x1,%rdi
96de(2): xor %esi,%esi
96e0(3): cmp %rdi,%rsi
96e3(2): jnb 0x2a(%rip)
96e5(4): lea 0x0(%rsi,%rdi,1),%rcx
96e9(3): shr $0x1,%rcx
96ec(4): cmp 0x0(%r8,%rcx,8),%rdx
96f0(2): jle 0x18(%rip)
96f2(2): jmp 0x2e(%rip)
96f4(4): nop 0x0(%rax)
96f8(4): lea 0x0(%rsi,%rcx,1),%rax
96fc(3): shr $0x1,%rax
96ff(4): cmp %rdx,0x0(%r8,%rax,8)
9703(2): jl 0x2d(%rip)
9705(3): mov %rax,%rcx
9708(3): cmp %rcx,%rsi
970b(2): jb 0xffffffed(%rip)
970d(2): xor %eax,%eax
970f(4): cmp 0x0(%r8,%rsi,8),%rdx
9713(2): jz 0x2d(%rip)
9715(2): REP ret near (%rsp)
9717(9): nop 0x0(%rax,%rax,1)
9720(3): mov %rcx,%rax
9723(3): mov %rdi,%rcx
9726(a): nop 0x0(%rax,%rax,1)
9730(4): lea 0x1(%rax),%rsi
9734(3): mov %rcx,%rdi
9737(2): jmp 0xffffffa9(%rip)
9739(7): nop 0x0(%rax)
9740(4): lea 0x1(%rsi),%rax
9744(1): ret near (%rsp)

"check_arrival_expand_ecl_sub" :
9750(2): push %r15
9752(2): push %r14
9754(4): lea 0x10(%rsi),%r14
9758(2): push %r13
975a(2): push %r12
975c(3): mov %rcx,%r15
975f(1): push %rbp
9760(1): push %rbx
9761(3): mov %rdi,%r12
9764(3): mov %rsi,%rbp
9767(3): mov %rdx,%rbx
976a(3): mov %r8d,%r13d
976d(4): sub $0x8,%rsp
9771(4): mov 0x8(%rbp),%rdi
9775(3): mov %rbx,%rdx
9778(3): mov %r14,%rsi
977b(5): call 0xffffff55(%rip)
9780(3): test %rax,%rax
9783(2): jnz 0x6d(%rip)
9785(3): mov %rbx,%rax
9788(4): shl/sal $0x4,%rax
978c(4): add (%r12),%rax
9790(4): movzx 0x8(%rax),%edx
9794(3): cmp %r13d,%edx
9797(2): jnz 0x7(%rip)
9799(3): cmp %r15,(%rax)
979c(2): jz 0x3c(%rip)
979e(3): mov %rbx,%rsi
97a1(3): mov %rbp,%rdi
97a4(5): call 0xffffe9ec(%rip)
97a9(2): test %al,%al
97ab(2): jz 0x5d(%rip)
97ad(4): lea 0x0(%rbx,%rbx,2),%rbx
97b1(5): mov 0x28(%r12),%rdx
97b6(4): shl/sal $0x3,%rbx
97ba(3): add %rbx,%rdx
97bd(4): mov 0x8(%rdx),%rax
97c1(3): test %rax,%rax
97c4(2): jz 0x2c(%rip)
97c6(4): cmp $0x2,%rax
97ca(4): mov 0x10(%rdx),%rdx
97ce(2): jz 0x52(%rip)
97d0(3): mov (%rdx),%rbx
97d3(2): jmp 0xffffff9e(%rip)
97d5(3): nop (%rax)
97d8(4): cmp $0x9,%r13d
97dc(2): jnz 0x14(%rip)
97de(3): mov %rbx,%rsi
97e1(3): mov %rbp,%rdi
97e4(5): call 0xffffe9ac(%rip)
97e9(2): test %al,%al
97eb(2): jz 0x1d(%rip)
97ed(3): nop (%rax)
97f0(2): xor %eax,%eax
97f2(4): add $0x8,%rsp
97f6(1): pop %rbx
97f7(1): pop %rbp
97f8(2): pop %r12
97fa(2): pop %r13
97fc(2): pop %r14
97fe(2): pop %r15
9800(1): ret near (%rsp)
9801(7): nop 0x0(%rax)
9808(4): add $0x8,%rsp
980c(5): mov $0xc,%eax
9811(1): pop %rbx
9812(1): pop %rbp
9813(2): pop %r12
9815(2): pop %r13
9817(2): pop %r14
9819(2): pop %r15
981b(1): ret near (%rsp)
981c(4): nop 0x0(%rax)
9820(4): mov 0x8(%rdx),%rdx
9824(3): mov %r13d,%r8d
9827(3): mov %r15,%rcx
982a(3): mov %rbp,%rsi
982d(3): mov %r12,%rdi
9830(5): call 0xffffff20(%rip)
9835(2): test %eax,%eax
9837(2): jnz 0xffffffbb(%rip)
9839(5): mov 0x28(%r12),%rax
983e(5): mov 0x10(%rax,%rbx,1),%rdx
9843(2): jmp 0xffffff8d(%rip)

"re_node_set_remove_at.isra.4.part.5" :
9850(3): mov (%rdi),%rax
9853(3): cmp %rdx,%rax
9856(2): jle 0x2c(%rip)
9858(4): sub $0x1,%rax
985c(3): cmp %rax,%rdx
985f(3): mov %rax,(%rdi)
9862(2): jnl 0x20(%rip)
9864(3): mov (%rsi),%rax
9867(9): nop 0x0(%rax,%rax,1)
9870(5): mov 0x8(%rax,%rdx,8),%rcx
9875(4): mov %rcx,0x0(%rax,%rdx,8)
9879(4): add $0x1,%rdx
987d(3): cmp (%rdi),%rdx
9880(2): jl 0xfffffff0(%rip)
9882(2): REP ret near (%rsp)

"optimize_subexps" :
9890(4): movzx 0x30(%rsi),%eax
9894(2): cmp $0x4,%al
9896(2): jz 0x5a(%rip)
9898(2): cmp $0x11,%al
989a(2): jz 0x6(%rip)
989c(2): xor %eax,%eax
989e(1): ret near (%rsp)
989f(1): nop 
98a0(4): mov 0x8(%rsi),%rax
98a4(3): test %rax,%rax
98a7(2): jz 0xfffffff5(%rip)
98a9(4): cmp $0x11,0x30(%rax)
98ad(2): jnz 0xffffffef(%rip)
98af(4): mov 0x28(%rax),%rcx
98b3(4): mov 0x8(%rax),%rax
98b7(3): test %rax,%rax
98ba(4): mov %rax,0x8(%rsi)
98be(2): jz 0x5(%rip)
98c0(3): mov %rsi,(%rax)
98c3(7): mov 0xe0(%rdi),%rax
98ca(4): mov 0x28(%rsi),%rdx
98ce(4): cmp $0x3f,%rcx
98d2(4): mov 0x0(%rax,%rdx,8),%rdx
98d6(4): mov %rdx,0x0(%rax,%rcx,8)
98da(2): jnle 0xffffffc2(%rip)
98dc(7): mov $0xfffffffe,%rax
98e3(3): rol %cl,%rax
98e6(7): and %rax,0xa0(%rdi)
98ed(2): jmp 0xffffffaf(%rip)
98ef(1): nop 
98f0(7): mov 0xe0(%rdi),%rax
98f7(3): test %rax,%rax
98fa(2): jz 0xffffffa2(%rip)
98fc(4): movsxd 0x28(%rsi),%rdx
9900(4): mov 0x0(%rax,%rdx,8),%rcx
9904(5): mov $0x1,%eax
9909(2): shl/sal %cl,%eax
990b(4): mov %rcx,0x28(%rsi)
990f(2): cwde 
9911(7): or %rax,0xa0(%rdi)
9918(2): xor %eax,%eax
991a(1): ret near (%rsp)

"calc_next" :
9920(4): movzx 0x30(%rsi),%eax
9924(4): mov 0x8(%rsi),%rdx
9928(2): cmp $0xb,%al
992a(2): jz 0x46(%rip)
992c(2): cmp $0x10,%al
992e(2): jz 0x2a(%rip)
9930(3): test %rdx,%rdx
9933(2): jz 0xa(%rip)
9935(4): mov 0x20(%rsi),%rax
9939(4): mov %rax,0x20(%rdx)
993d(4): mov 0x10(%rsi),%rax
9941(3): test %rax,%rax
9944(2): jz 0xa(%rip)
9946(4): mov 0x20(%rsi),%rdx
994a(4): mov %rdx,0x20(%rax)
994e(2): xor %eax,%eax
9950(1): ret near (%rsp)
9951(7): nop 0x0(%rax)
9958(4): mov 0x10(%rsi),%rax
995c(4): mov 0x18(%rax),%rcx
9960(4): mov %rcx,0x20(%rdx)
9964(4): mov 0x20(%rsi),%rdx
9968(4): mov %rdx,0x20(%rax)
996c(2): xor %eax,%eax
996e(1): ret near (%rsp)
996f(1): nop 
9970(4): mov %rsi,0x20(%rdx)
9974(2): xor %eax,%eax
9976(1): ret near (%rsp)

"check_dst_limits.isra.13" :
9980(2): push %r15
9982(2): push %r14
9984(2): push %r13
9986(2): push %r12
9988(1): push %rbp
9989(1): push %rbx
998a(2): xor %ebx,%ebx
998c(4): sub $0x48,%rsp
9990(7): mov 0x98(%rdi),%rax
9997(7): mov 0xc8(%rdi),%r15
999e(8): mov 0x80(%rsp),%r12
99a6(5): mov %rax,0x8(%rsp)
99ab(3): mov %r15,%rbp
99ae(3): cmp %rbp,%rbx
99b1(2): jnl 0x5a(%rip)
99b3(4): lea 0x0(%rbx,%rbp,1),%rax
99b7(7): mov 0xd8(%rdi),%r13
99be(3): mov %rax,%r10
99c1(4): shr $0x3f,%r10
99c5(3): add %rax,%r10
99c8(3): sar $0x1,%r10
99cb(4): lea 0x0(%r10,%r10,4),%rax
99cf(5): cmp 0x8(%r13,%rax,8),%r8
99d4(2): jle 0x32(%rip)
99d6(5): jmp 0x19a(%rip)
99db(5): nop 0x0(%rax,%rax,1)
99e0(4): lea 0x0(%rbx,%r10,1),%r11
99e4(3): mov %r11,%rax
99e7(4): shr $0x3f,%rax
99eb(3): add %r11,%rax
99ee(3): sar $0x1,%rax
99f1(4): lea 0x0(%rax,%rax,4),%r11
99f5(3): mov %rax,%r14
99f8(5): cmp %r8,0x8(%r13,%r11,8)
99fd(6): jl 0x183(%rip)
9a03(3): mov %rax,%r10
9a06(3): cmp %r10,%rbx
9a09(2): jl 0xffffffd7(%rip)
9a0b(3): cmp %rbx,%r15
9a0e(6): jle 0x1a2(%rip)
9a14(7): mov 0xd8(%rdi),%r11
9a1b(4): lea 0x0(%rbx,%rbx,4),%rax
9a1f(4): lea 0x0(%r11,%rax,8),%rax
9a23(4): cmp 0x8(%rax),%r8
9a27(7): mov $0xffffffff,%rax
9a2e(4): cmovne %rax,%rbx
9a32(3): mov %r15,%rax
9a35(2): xor %ebp,%ebp
9a37(3): cmp %rax,%rbp
9a3a(2): jnl 0x5a(%rip)
9a3c(5): lea 0x0(%rbp,%rax,1),%r11
9a41(3): mov %r11,%r10
9a44(4): shr $0x3f,%r10
9a48(3): add %r11,%r10
9a4b(7): mov 0xd8(%rdi),%r11
9a52(3): sar $0x1,%r10
9a55(4): lea 0x0(%r10,%r10,4),%r13
9a59(5): cmp 0x8(%r11,%r13,8),%r12
9a5e(2): jle 0x31(%rip)
9a60(5): jmp 0x130(%rip)
9a65(3): nop (%rax)
9a68(5): lea 0x0(%rbp,%r10,1),%r13
9a6d(3): mov %r13,%rax
9a70(4): shr $0x3f,%rax
9a74(3): add %r13,%rax
9a77(3): sar $0x1,%rax
9a7a(4): lea 0x0(%rax,%rax,4),%r13
9a7e(3): mov %rax,%r14
9a81(5): cmp %r12,0x8(%r11,%r13,8)
9a86(6): jl 0x11a(%rip)
9a8c(3): mov %rax,%r10
9a8f(3): cmp %r10,%rbp
9a92(2): jl 0xffffffd6(%rip)
9a94(3): cmp %rbp,%r15
9a97(6): jle 0x129(%rip)
9a9d(7): mov 0xd8(%rdi),%r10
9aa4(5): lea 0x0(%rbp,%rbp,4),%rax
9aa9(4): lea 0x0(%r10,%rax,8),%rax
9aad(4): cmp 0x8(%rax),%r12
9ab1(7): mov $0xffffffff,%rax
9ab8(4): cmovne %rax,%rbp
9abc(4): cmp $0x0,(%rsi)
9ac0(6): jle 0x122(%rip)
9ac6(5): mov %rbp,0x30(%rsp)
9acb(5): mov %r9,0x20(%rsp)
9ad0(3): mov %rdi,%r13
9ad3(5): mov %r8,0x18(%rsp)
9ad8(5): mov %rcx,0x10(%rsp)
9add(3): xor %r14d,%r14d
9ae0(5): mov %rsi,0x38(%rsp)
9ae5(5): mov %rbx,0x28(%rsp)
9aea(3): mov %rdx,%rbp
9aed(3): mov %r12,%r15
9af0(4): mov 0x0(%rbp),%rax
9af4(7): mov 0xd8(%r13),%rdx
9afb(3): mov %r13,%rdi
9afe(5): mov 0x28(%rsp),%r9
9b03(5): mov 0x18(%rsp),%r8
9b08(5): mov 0x10(%rsp),%rcx
9b0d(4): mov 0x0(%rax,%r14,8),%rsi
9b11(4): lea 0x0(%rsi,%rsi,4),%rax
9b15(4): lea 0x0(%rdx,%rax,8),%rax
9b19(5): mov 0x8(%rsp),%rdx
9b1e(3): mov (%rax),%rax
9b21(4): shl/sal $0x4,%rax
9b25(3): add (%rdx),%rax
9b28(3): mov (%rax),%r12
9b2b(3): mov %r12,%rdx
9b2e(5): call 0xffffe412(%rip)
9b33(2): mov %eax,%ebx
9b35(4): mov 0x0(%rbp),%rax
9b39(5): mov 0x30(%rsp),%r9
9b3e(5): mov 0x20(%rsp),%rcx
9b43(3): mov %r15,%r8
9b46(3): mov %r12,%rdx
9b49(3): mov %r13,%rdi
9b4c(4): mov 0x0(%rax,%r14,8),%rsi
9b50(5): call 0xffffe3f0(%rip)
9b55(2): cmp %eax,%ebx
9b57(2): jz 0x79(%rip)
9b59(5): mov $0x1,%eax
9b5e(4): add $0x48,%rsp
9b62(1): pop %rbx
9b63(1): pop %rbp
9b64(2): pop %r12
9b66(2): pop %r13
9b68(2): pop %r14
9b6a(2): pop %r15
9b6c(1): ret near (%rsp)
9b6d(3): nop (%rax)
9b70(3): mov %r10,%r14
9b73(3): mov %rbp,%r10
9b76(a): nop 0x0(%rax,%rax,1)
9b80(4): lea 0x1(%r14),%rbx
9b84(3): mov %r10,%rbp
9b87(5): jmp 0xfffffe27(%rip)
9b8c(4): nop 0x0(%rax)
9b90(3): mov %r10,%r14
9b93(3): mov %rax,%r10
9b96(a): nop 0x0(%rax,%rax,1)
9ba0(4): lea 0x1(%r14),%rbp
9ba4(3): mov %r10,%rax
9ba7(5): jmp 0xfffffe90(%rip)
9bac(4): nop 0x0(%rax)
9bb0(7): mov $0xffffffff,%rbx
9bb7(5): jmp 0xfffffe7b(%rip)
9bbc(4): nop 0x0(%rax)
9bc0(7): mov $0xffffffff,%rbp
9bc7(5): jmp 0xfffffef5(%rip)
9bcc(4): nop 0x0(%rax)
9bd0(5): mov 0x38(%rsp),%rax
9bd5(4): add $0x1,%r14
9bd9(3): cmp (%rax),%r14
9bdc(6): jl 0xffffff14(%rip)
9be2(2): xor %eax,%eax
9be4(5): jmp 0xffffff7a(%rip)

"re_node_set_merge" :
9bf0(3): test %rsi,%rsi
9bf3(6): jz 0xf5(%rip)
9bf9(4): mov 0x8(%rsi),%rdx
9bfd(3): test %rdx,%rdx
9c00(6): jz 0xe8(%rip)
9c06(2): push %r12
9c08(1): push %rbp
9c09(3): mov %rsi,%r12
9c0c(1): push %rbx
9c0d(4): mov 0x8(%rdi),%rax
9c11(3): mov %rdi,%rbx
9c14(3): mov (%rdi),%rsi
9c17(4): lea 0x0(%rax,%rdx,2),%rcx
9c1b(3): cmp %rcx,%rsi
9c1e(6): jl 0x14a(%rip)
9c24(3): test %rax,%rax
9c27(6): jz 0x179(%rip)
9c2d(4): lea 0x0(%rax,%rdx,2),%rbp
9c31(4): sub $0x1,%rdx
9c35(4): sub $0x1,%rax
9c39(3): mov %rdx,%rdi
9c3c(3): not %rdi
9c3f(3): test %rdi,%rdi
9c42(2): jns 0x3e(%rip)
9c44(3): test %rax,%rax
9c47(2): js 0x39(%rip)
9c49(4): mov 0x10(%rbx),%rcx
9c4d(5): mov 0x10(%r12),%rsi
9c52(4): mov 0x0(%rsi,%rdx,8),%rsi
9c56(4): cmp %rsi,0x0(%rcx,%rax,8)
9c5a(6): jz 0x96(%rip)
9c60(6): jnl 0xa8(%rip)
9c66(4): sub $0x1,%rdx
9c6a(4): sub $0x1,%rbp
9c6e(3): mov %rdx,%rdi
9c71(4): mov %rsi,0x0(%rcx,%rbp,8)
9c75(3): not %rdi
9c78(3): test %rdi,%rdi
9c7b(2): js 0xffffffc9(%rip)
9c7d(3): nop (%rax)
9c80(3): test %rdx,%rdx
9c83(6): jns 0x95(%rip)
9c89(4): mov 0x8(%rbx),%rcx
9c8d(5): mov 0x8(%r12),%rax
9c92(5): lea 0xffffffff(%rcx,%rax,2),%r8
9c97(3): mov %r8,%rdx
9c9a(3): sub %rbp,%rdx
9c9d(4): add $0x1,%rdx
9ca1(2): jz 0x39(%rip)
9ca3(4): mov 0x10(%rbx),%rdi
9ca7(4): lea 0xffffffff(%rcx),%rax
9cab(3): add %rdx,%rcx
9cae(4): mov %rcx,0x8(%rbx)
9cb2(6): nop 0x0(%rax,%rax,1)
9cb8(4): mov 0x0(%rdi,%r8,8),%rsi
9cbc(4): mov 0x0(%rdi,%rax,8),%rcx
9cc0(4): lea 0x0(%rax,%rdx,1),%r9
9cc4(4): lea 0x0(%rdi,%r9,8),%r9
9cc8(3): cmp %rcx,%rsi
9ccb(2): jle 0x75(%rip)
9ccd(4): sub $0x1,%r8
9cd1(4): sub $0x1,%rdx
9cd5(3): mov %rsi,(%r9)
9cd8(2): jnz 0xffffffe0(%rip)
9cda(2): xor %eax,%eax
9cdc(1): pop %rbx
9cdd(1): pop %rbp
9cde(2): pop %r12
9ce0(1): ret near (%rsp)
9ce1(7): nop 0x0(%rax)
9ce8(2): xor %eax,%eax
9cea(1): ret near (%rsp)
9ceb(5): nop 0x0(%rax,%rax,1)
9cf0(4): sub $0x1,%rdx
9cf4(4): sub $0x1,%rax
9cf8(3): mov %rdx,%rdi
9cfb(3): not %rdi
9cfe(5): jmp 0xffffff41(%rip)
9d03(5): nop 0x0(%rax,%rax,1)
9d08(4): sub $0x1,%rax
9d0c(5): jmp 0xffffff33(%rip)
9d11(7): nop 0x0(%rax)
9d18(4): mov 0x10(%rbx),%rax
9d1c(4): add $0x1,%rdx
9d20(5): mov 0x10(%r12),%rsi
9d25(3): sub %rdx,%rbp
9d28(4): shl/sal $0x3,%rdx
9d2c(4): lea 0x0(%rax,%rbp,8),%rdi
9d30(5): call 0xffff8040(%rip)
9d35(5): jmp 0xffffff54(%rip)
9d3a(6): nop 0x0(%rax,%rax,1)
9d40(4): sub $0x1,%rax
9d44(3): mov %rcx,(%r9)
9d47(6): jns 0xffffff71(%rip)
9d4d(4): lea 0x0(%rdi,%rbp,8),%rsi
9d51(4): shl/sal $0x3,%rdx
9d55(5): call 0xffff801b(%rip)
9d5a(2): xor %eax,%eax
9d5c(5): jmp 0xffffff80(%rip)
9d61(7): nop 0x0(%rax)
9d68(3): add %rsi,%rdx
9d6b(4): mov 0x10(%rdi),%rdi
9d6f(4): lea 0x0(%rdx,%rdx,1),%rbp
9d73(4): shl/sal $0x4,%rdx
9d77(3): mov %rdx,%rsi
9d7a(5): call 0xffff8086(%rip)
9d7f(3): test %rax,%rax
9d82(2): jz 0x42(%rip)
9d84(4): mov %rax,0x10(%rbx)
9d88(3): mov %rbp,(%rbx)
9d8b(4): mov 0x8(%rbx),%rax
9d8f(5): mov 0x8(%r12),%rdx
9d94(5): jmp 0xfffffe90(%rip)
9d99(7): nop 0x0(%rax)
9da0(4): mov %rdx,0x8(%rbx)
9da4(5): mov 0x8(%r12),%rax
9da9(4): mov 0x10(%rbx),%rdi
9dad(5): mov 0x10(%r12),%rsi
9db2(8): lea 0x0(,%rax,8),%rdx
9dba(5): call 0xffff7fb6(%rip)
9dbf(5): jmp 0xffffff1b(%rip)
9dc4(5): mov $0xc,%eax
9dc9(5): jmp 0xffffff13(%rip)

"calc_eclosure_iter" :
9dd0(2): push %r15
9dd2(2): push %r14
9dd4(3): mov %rsi,%r15
9dd7(2): push %r13
9dd9(2): push %r12
9ddb(1): push %rbp
9ddc(1): push %rbx
9ddd(4): lea 0x0(%rdx,%rdx,2),%rbx
9de1(3): mov %rdx,%rbp
9de4(4): sub $0x68,%rsp
9de8(4): mov 0x28(%rsi),%r12
9dec(4): shl/sal $0x3,%rbx
9df0(9): mov $0x28,%rax
9df9(5): mov %rax,0x58(%rsp)
9dfe(2): xor %eax,%eax
9e00(5): mov %rdi,0x10(%rsp)
9e05(4): mov %ecx,0x1c(%rsp)
9e09(3): add %rbx,%r12
9e0c(5): mov 0x8(%r12),%rax
9e11(9): mov $0x0,0x28(%rsp)
9e1a(4): lea 0x1(%rax),%rdi
9e1e(5): mov %rdi,0x20(%rsp)
9e23(4): shl/sal $0x3,%rdi
9e27(5): call 0xffff7f79(%rip)
9e2c(3): test %rax,%rax
9e2f(5): mov %rax,0x30(%rsp)
9e34(6): jz 0x23c(%rip)
9e3a(4): mov 0x30(%r15),%rax
9e3e(3): mov (%r15),%rdx
9e41(3): mov %rbp,%r13
9e44(4): shl/sal $0x4,%r13
9e48(9): mov $0xffffffff,0x8(%rax,%rbx,1)
9e51(4): lea 0x0(%rdx,%r13,1),%rax
9e55(4): mov 0x8(%rax),%r8d
9e59(7): test $0x3ff00,%r8d
9e60(6): jnz 0x1a0(%rip)
9e66(4): test $0x8,0x8(%rax)
9e6a(6): jz 0xc6(%rip)
9e70(4): mov 0x28(%r15),%rsi
9e74(4): lea 0x0(%rsi,%rbx,1),%rax
9e78(5): cmp $0x0,0x8(%rax)
9e7d(6): jle 0xb3(%rip)
9e83(5): lea 0x20(%rsp),%rdx
9e88(5): mov $0x0,0x1b(%rsp)
9e8d(3): xor %r14d,%r14d
9e90(5): lea 0x40(%rsp),%r12
9e95(5): mov %rdx,0x8(%rsp)
9e9a(2): jmp 0x1c(%rip)
9e9c(4): nop 0x0(%rax)
9ea0(4): mov 0x28(%r15),%rsi
9ea4(4): add $0x1,%r14
9ea8(4): lea 0x0(%rsi,%rbx,1),%rax
9eac(4): cmp %r14,0x8(%rax)
9eb0(6): jle 0x107(%rip)
9eb6(4): mov 0x10(%rax),%rax
9eba(4): mov 0x0(%rax,%r14,8),%rdx
9ebe(4): mov 0x30(%r15),%rax
9ec2(4): lea 0x0(%rdx,%rdx,2),%r8
9ec6(8): lea 0x0(,%r8,8),%r13
9ece(3): add %r13,%rax
9ed1(4): mov 0x8(%rax),%rcx
9ed5(4): cmp $0xffffffff,%rcx
9ed9(6): jz 0xc7(%rip)
9edf(3): test %rcx,%rcx
9ee2(6): jz 0x176(%rip)
9ee8(4): movdqu (%rax),%xmm0
9eec(5): movaps %xmm0,0x40(%rsp)
9ef1(4): mov 0x10(%rax),%rax
9ef5(5): mov %rax,0x50(%rsp)
9efa(5): mov 0x8(%rsp),%rdi
9eff(3): mov %r12,%rsi
9f02(5): call 0xfffffcee(%rip)
9f07(2): test %eax,%eax
9f09(2): jnz 0x6d(%rip)
9f0b(4): mov 0x30(%r15),%rax
9f0f(6): cmp $0x0,0x8(%rax,%r13,1)
9f15(2): jnz 0xffffff8b(%rip)
9f17(5): mov 0x50(%rsp),%rdi
9f1c(5): call 0xffff7be4(%rip)
9f21(5): mov $0x1,0x1b(%rsp)
9f26(5): jmp 0xffffff7a(%rip)
9f2b(5): nop 0x0(%rax,%rax,1)
9f30(5): lea 0x20(%rsp),%rdi
9f35(3): mov %rbp,%rsi
9f38(5): call 0xffffe258(%rip)
9f3d(2): test %al,%al
9f3f(6): jz 0x131(%rip)
9f45(4): mov 0x30(%r15),%rax
9f49(6): movdqa 0x20(%rsp),%xmm0
9f4f(4): movups %xmm0,0x0(%rax,%rbx,1)
9f53(5): mov 0x30(%rsp),%rdx
9f58(5): mov %rdx,0x10(%rax,%rbx,1)
9f5d(5): mov 0x10(%rsp),%rbx
9f62(5): mov 0x30(%rsp),%rax
9f67(6): movdqa 0x20(%rsp),%xmm0
9f6d(3): movaps %xmm0,(%rbx)
9f70(4): mov %rax,0x10(%rbx)
9f74(2): xor %eax,%eax
9f76(5): mov 0x58(%rsp),%rsi
9f7b(9): xor $0x28,%rsi
9f84(6): jnz 0xf6(%rip)
9f8a(4): add $0x68,%rsp
9f8e(1): pop %rbx
9f8f(1): pop %rbp
9f90(2): pop %r12
9f92(2): pop %r13
9f94(2): pop %r14
9f96(2): pop %r15
9f98(1): ret near (%rsp)
9f99(7): nop 0x0(%rax)
9fa0(4): lea 0x0(%rsi,%rbx,1),%rax
9fa4(4): add $0x1,%r14
9fa8(5): mov $0x1,0x1b(%rsp)
9fad(4): cmp %r14,0x8(%rax)
9fb1(6): jnle 0xffffff05(%rip)
9fb7(5): lea 0x20(%rsp),%rdi
9fbc(3): mov %rbp,%rsi
9fbf(5): call 0xffffe1d1(%rip)
9fc4(2): test %al,%al
9fc6(6): jz 0xaa(%rip)
9fcc(5): cmp $0x1,0x1c(%rsp)
9fd1(4): mov 0x30(%r15),%rax
9fd5(4): lea 0x0(%rax,%rbx,1),%rdx
9fd9(6): jz 0xffffff70(%rip)
9fdf(5): cmp $0x0,0x1b(%rsp)
9fe4(6): jz 0xffffff65(%rip)
9fea(8): mov $0x0,0x8(%rdx)
9ff2(5): jmp 0xffffff6b(%rip)
9ff7(9): nop 0x0(%rax,%rax,1)
a000(6): cmp $0x0,0x8(%r12)
a006(6): jz 0xffffff2a(%rip)
a00c(5): mov 0x10(%r12),%rcx
a011(3): mov (%rcx),%rcx
a014(4): shl/sal $0x4,%rcx
a018(5): test $0x4,0xa(%rdx,%rcx,1)
a01d(6): jnz 0xfffffe49(%rip)
a023(4): shr $0x8,%r8d
a027(3): mov %rbp,%rcx
a02a(3): mov %rbp,%rdx
a02d(7): and $0x3ff,%r8d
a034(3): mov %rbp,%rsi
a037(3): mov %r15,%rdi
a03a(5): call 0xfffff0a6(%rip)
a03f(2): test %eax,%eax
a041(6): jnz 0xffffff35(%rip)
a047(3): mov (%r15),%rax
a04a(3): add %r13,%rax
a04d(5): jmp 0xfffffe19(%rip)
a052(6): nop 0x0(%rax,%rax,1)
a058(3): mov %r15,%rsi
a05b(3): mov %r12,%rdi
a05e(5): call 0xfffffd72(%rip)
a063(2): test %eax,%eax
a065(6): jz 0xfffffe95(%rip)
a06b(5): jmp 0xffffff0b(%rip)
a070(5): mov $0xc,%eax
a075(5): jmp 0xffffff01(%rip)
a07a(5): call 0xffff7ba6(%rip)

"check_arrival_expand_ecl" :
a080(2): push %r15
a082(2): push %r14
a084(3): mov %rdi,%r14
a087(2): push %r13
a089(2): push %r12
a08b(3): mov %rsi,%r15
a08e(1): push %rbp
a08f(1): push %rbx
a090(3): mov %rdx,%rbp
a093(2): mov %ecx,%ebx
a095(4): sub $0x38,%rsp
a099(4): mov 0x8(%rsi),%r12
a09d(9): mov $0x28,%rax
a0a6(5): mov %rax,0x28(%rsp)
a0ab(2): xor %eax,%eax
a0ad(9): mov $0x0,0x18(%rsp)
a0b6(8): lea 0x0(,%r12,8),%rdi
a0be(5): mov %r12,0x10(%rsp)
a0c3(5): call 0xffff7cdd(%rip)
a0c8(3): test %rax,%rax
a0cb(5): mov %rax,0x20(%rsp)
a0d0(6): jz 0xfd(%rip)
a0d6(3): test %r12,%r12
a0d9(6): jle 0x92(%rip)
a0df(5): lea 0x10(%rsp),%r12
a0e4(3): xor %r13d,%r13d
a0e7(9): nop 0x0(%rax,%rax,1)
a0f0(4): mov 0x10(%r15),%rax
a0f4(4): mov 0x0(%rax,%r13,8),%rdx
a0f8(4): mov 0x30(%r14),%rax
a0fc(4): lea 0x0(%rdx,%rdx,2),%rcx
a100(4): lea 0x0(%rax,%rcx,8),%rsi
a104(4): mov 0x8(%rsi),%r8
a108(3): test %r8,%r8
a10b(6): jle 0x85(%rip)
a111(4): mov 0x10(%rsi),%r10
a115(3): mov (%r14),%r9
a118(2): xor %ecx,%ecx
a11a(2): jmp 0xf(%rip)
a11c(4): nop 0x0(%rax)
a120(4): add $0x1,%rcx
a124(3): cmp %rcx,%r8
a127(2): jz 0x69(%rip)
a129(4): mov 0x0(%r10,%rcx,8),%rdi
a12d(3): mov %rdi,%rax
a130(4): shl/sal $0x4,%rax
a134(3): add %r9,%rax
a137(5): movzx 0x8(%rax),%r11d
a13c(3): cmp %r11d,%ebx
a13f(2): jnz 0xffffffe1(%rip)
a141(3): cmp (%rax),%rbp
a144(2): jnz 0xffffffdc(%rip)
a146(4): cmp $0xffffffff,%rdi
a14a(2): jz 0x46(%rip)
a14c(3): mov %ebx,%r8d
a14f(3): mov %rbp,%rcx
a152(3): mov %r12,%rsi
a155(3): mov %r14,%rdi
a158(5): call 0xfffff5f8(%rip)
a15d(2): test %eax,%eax
a15f(2): jnz 0x3d(%rip)
a161(4): add $0x1,%r13
a165(4): cmp %r13,0x8(%r15)
a169(2): jnle 0xffffff87(%rip)
a16b(4): mov 0x10(%r15),%rdi
a16f(5): call 0xffff7991(%rip)
a174(5): mov 0x20(%rsp),%rax
a179(6): movdqa 0x10(%rsp),%xmm0
a17f(4): mov %rax,0x10(%r15)
a183(2): xor %eax,%eax
a185(4): movaps %xmm0,(%r15)
a189(2): jmp 0x25(%rip)
a18b(5): nop 0x0(%rax,%rax,1)
a190(3): mov %r12,%rdi
a193(5): call 0xfffffa5d(%rip)
a198(2): test %eax,%eax
a19a(2): jz 0xffffffc7(%rip)
a19c(5): mov 0x20(%rsp),%rdi
a1a1(4): mov %eax,0xc(%rsp)
a1a5(5): call 0xffff795b(%rip)
a1aa(4): mov 0xc(%rsp),%eax
a1ae(5): mov 0x28(%rsp),%rdx
a1b3(9): xor $0x28,%rdx
a1bc(2): jnz 0x18(%rip)
a1be(4): add $0x38,%rsp
a1c2(1): pop %rbx
a1c3(1): pop %rbp
a1c4(2): pop %r12
a1c6(2): pop %r13
a1c8(2): pop %r14
a1ca(2): pop %r15
a1cc(1): ret near (%rsp)
a1cd(5): mov $0xc,%eax
a1d2(2): jmp 0xffffffdc(%rip)
a1d4(5): call 0xffff7a4c(%rip)

"re_node_set_add_intersect" :
a1e0(4): mov 0x8(%rsi),%r9
a1e4(2): xor %eax,%eax
a1e6(3): test %r9,%r9
a1e9(6): jz 0xbf(%rip)
a1ef(4): mov 0x8(%rdx),%r11
a1f3(3): test %r11,%r11
a1f6(6): jz 0xb2(%rip)
a1fc(2): push %r13
a1fe(2): push %r12
a200(4): lea 0x0(%r9,%r11,1),%rax
a204(1): push %rbp
a205(1): push %rbx
a206(3): mov %rdx,%r12
a209(3): mov %rdi,%rbx
a20c(3): mov %rsi,%rbp
a20f(4): sub $0x8,%rsp
a213(4): mov 0x8(%rdi),%rcx
a217(3): mov (%rdi),%r13
a21a(4): mov 0x10(%rdi),%rdi
a21e(4): lea 0x0(%rax,%rcx,1),%rdx
a222(3): cmp %r13,%rdx
a225(6): jnle 0x12b(%rip)
a22b(4): lea 0x0(%rcx,%r9,1),%rsi
a22f(4): mov 0x10(%rbp),%r13
a233(5): mov 0x10(%r12),%rdx
a238(4): sub $0x1,%r9
a23c(4): sub $0x1,%rcx
a240(3): add %r11,%rsi
a243(4): sub $0x1,%r11
a247(5): mov 0x0(%r13,%r9,8),%rax
a24c(4): mov 0x0(%rdx,%r11,8),%r8
a250(3): cmp %r8,%rax
a253(2): jz 0x13(%rip)
a255(2): jnl 0x5b(%rip)
a257(4): sub $0x1,%r11
a25b(2): js 0x65(%rip)
a25d(4): mov 0x0(%rdx,%r11,8),%r8
a261(3): cmp %r8,%rax
a264(2): jnz 0xfffffff1(%rip)
a266(3): test %rcx,%rcx
a269(2): jns 0x11(%rip)
a26b(2): jmp 0x1d(%rip)
a26d(3): nop (%rax)
a270(4): sub $0x1,%rcx
a274(4): cmp $0xffffffff,%rcx
a278(2): jz 0x10(%rip)
a27a(4): mov 0x0(%rdi,%rcx,8),%r10
a27e(3): cmp %r8,%r10
a281(2): jnle 0xffffffef(%rip)
a283(3): cmp %r8,%r10
a286(2): jz 0xa(%rip)
a288(4): sub $0x1,%rsi
a28c(4): mov %r8,0x0(%rdi,%rsi,8)
a290(4): sub $0x1,%r9
a294(2): js 0x2c(%rip)
a296(4): sub $0x1,%r11
a29a(2): js 0x26(%rip)
a29c(5): mov 0x0(%r13,%r9,8),%rax
a2a1(2): jmp 0xffffffbc(%rip)
a2a3(5): nop 0x0(%rax,%rax,1)
a2a8(2): REP ret near (%rsp)
a2aa(6): nop 0x0(%rax,%rax,1)
a2b0(4): sub $0x1,%r9
a2b4(2): js 0xc(%rip)
a2b6(5): mov 0x0(%r13,%r9,8),%rax
a2bb(2): jmp 0xffffff95(%rip)
a2bd(3): nop (%rax)
a2c0(4): mov 0x8(%rbx),%rcx
a2c4(4): mov 0x8(%rbp),%rdx
a2c8(3): add %rcx,%rdx
a2cb(5): add 0x8(%r12),%rdx
a2d0(4): lea 0xffffffff(%rcx),%rax
a2d4(4): lea 0xffffffff(%rdx),%r9
a2d8(3): sub %rsi,%rdx
a2db(3): add %rdx,%rcx
a2de(3): test %rdx,%rdx
a2e1(4): mov %rcx,0x8(%rbx)
a2e5(2): jle 0x48(%rip)
a2e7(3): test %rax,%rax
a2ea(2): js 0x43(%rip)
a2ec(4): nop 0x0(%rax)
a2f0(4): mov 0x0(%rdi,%r9,8),%r8
a2f4(4): mov 0x0(%rdi,%rax,8),%rcx
a2f8(4): lea 0x0(%rax,%rdx,1),%r10
a2fc(4): lea 0x0(%rdi,%r10,8),%r10
a300(3): cmp %rcx,%r8
a303(2): jle 0x1d(%rip)
a305(4): sub $0x1,%r9
a309(4): sub $0x1,%rdx
a30d(3): mov %r8,(%r10)
a310(2): jnz 0xffffffe0(%rip)
a312(2): xor %edx,%edx
a314(2): jmp 0x1d(%rip)
a316(a): nop 0x0(%rax,%rax,1)
a320(4): sub $0x1,%rax
a324(3): mov %rcx,(%r10)
a327(4): cmp $0xffffffff,%rax
a32b(2): jnz 0xffffffc5(%rip)
a32d(4): shl/sal $0x3,%rdx
a331(4): lea 0x0(%rdi,%rsi,8),%rsi
a335(5): call 0xffff7a3b(%rip)
a33a(2): xor %eax,%eax
a33c(4): add $0x8,%rsp
a340(1): pop %rbx
a341(1): pop %rbp
a342(2): pop %r12
a344(2): pop %r13
a346(1): ret near (%rsp)
a347(9): nop 0x0(%rax,%rax,1)
a350(3): add %rax,%r13
a353(8): lea 0x0(,%r13,8),%rsi
a35b(5): call 0xffff7aa5(%rip)
a360(3): test %rax,%rax
a363(3): mov %rax,%rdi
a366(2): jz 0x1b(%rip)
a368(4): mov %rax,0x10(%rbx)
a36c(3): mov %r13,(%rbx)
a36f(4): mov 0x8(%rbx),%rcx
a373(4): mov 0x8(%rbp),%r9
a377(5): mov 0x8(%r12),%r11
a37c(5): jmp 0xfffffeaf(%rip)
a381(5): mov $0xc,%eax
a386(2): jmp 0xffffffb6(%rip)

"create_token_tree.isra.16" :
a390(1): push %rbx
a391(3): mov %rdi,%rbx
a394(4): sub $0x20,%rsp
a398(2): mov (%rsi),%eax
a39a(3): cmp $0xf,%eax
a39d(2): jz 0x7b(%rip)
a39f(3): movsxd %eax,%r9
a3a2(4): lea 0x1(%rax),%r10d
a3a6(3): mov (%rdi),%rdi
a3a9(3): mov %r9,%rax
a3ac(4): shl/sal $0x6,%rax
a3b0(4): add $0x8,%rax
a3b4(4): shl/sal $0x6,%r9
a3b8(3): mov %r10d,(%rsi)
a3bb(3): add %rdi,%rax
a3be(4): lea 0x0(%rdi,%r9,1),%rsi
a3c2(8): mov $0x0,0x8(%rsi)
a3ca(4): mov %rdx,0x10(%rsi)
a3ce(4): lea 0x20(%rsi),%rdi
a3d2(4): mov %rcx,0x18(%rsi)
a3d6(5): movdqu (%r8),%xmm0
a3db(4): movups %xmm0,0x30(%rsi)
a3df(4): and $0xf3,0x1a(%rdi)
a3e3(3): test %rdx,%rdx
a3e6(8): mov $0x0,0x20(%rsi)
a3ee(8): mov $0x0,0x28(%rsi)
a3f6(8): mov $0xffffffff,0x40(%rsi)
a3fe(2): jz 0x5(%rip)
a400(3): mov %rax,(%rdx)
a403(3): test %rcx,%rcx
a406(2): jz 0x5(%rip)
a408(3): mov %rax,(%rcx)
a40b(4): add $0x20,%rsp
a40f(1): pop %rbx
a410(1): ret near (%rsp)
a411(7): nop 0x0(%rax)
a418(5): mov $0x3c8,%edi
a41d(5): mov %r8,0x18(%rsp)
a422(5): mov %rcx,0x10(%rsp)
a427(5): mov %rdx,0x8(%rsp)
a42c(4): mov %rsi,(%rsp)
a430(5): call 0xffff7970(%rip)
a435(3): test %rax,%rax
a438(3): mov %rax,%rdi
a43b(2): jz 0x31(%rip)
a43d(3): mov (%rbx),%rax
a440(6): mov $0x1,%r10d
a446(3): mov %rdi,(%rbx)
a449(3): xor %r9d,%r9d
a44c(5): mov 0x18(%rsp),%r8
a451(5): mov 0x10(%rsp),%rcx
a456(5): mov 0x8(%rsp),%rdx
a45b(4): mov (%rsp),%rsi
a45f(3): mov %rax,(%rdi)
a462(5): mov $0x8,%eax
a467(5): jmp 0xffffff4d(%rip)
a46c(2): xor %eax,%eax
a46e(2): jmp 0xffffff9d(%rip)

"duplicate_tree" :
a470(2): push %r14
a472(2): push %r13
a474(4): lea 0x70(%rsi),%r13
a478(2): push %r12
a47a(1): push %rbp
a47b(7): lea 0x80(%rsi),%r12
a482(1): push %rbx
a483(3): mov %rdi,%rbx
a486(4): sub $0x10,%rsp
a48a(3): mov (%rdi),%rbp
a48d(9): mov $0x28,%rax
a496(5): mov %rax,0x8(%rsp)
a49b(2): xor %eax,%eax
a49d(3): mov %rsp,%r14
a4a0(4): lea 0x28(%rbx),%r8
a4a4(2): xor %ecx,%ecx
a4a6(2): xor %edx,%edx
a4a8(3): mov %r12,%rsi
a4ab(3): mov %r13,%rdi
a4ae(5): call 0xfffffee2(%rip)
a4b3(3): test %rax,%rax
a4b6(3): mov %rax,(%r14)
a4b9(2): jz 0x53(%rip)
a4bb(3): mov %rbp,(%rax)
a4be(3): mov (%r14),%rbp
a4c1(4): or $0x4,0x32(%rbp)
a4c5(4): mov 0x8(%rbx),%rax
a4c9(3): test %rax,%rax
a4cc(2): jz 0x14(%rip)
a4ce(4): lea 0x8(%rbp),%r14
a4d2(3): mov %rax,%rbx
a4d5(2): jmp 0xffffffcb(%rip)
a4d7(9): nop 0x0(%rax,%rax,1)
a4e0(2): xor %edx,%edx
a4e2(2): jmp 0x9(%rip)
a4e4(4): nop 0x0(%rax)
a4e8(3): mov %rax,%rbx
a4eb(4): mov 0x10(%rbx),%rax
a4ef(3): test %rax,%rax
a4f2(2): jz 0x7(%rip)
a4f4(3): cmp %rdx,%rax
a4f7(2): jnz 0x39(%rip)
a4f9(3): mov (%rbx),%rax
a4fc(4): mov 0x0(%rbp),%rbp
a500(3): mov %rbx,%rdx
a503(3): test %rax,%rax
a506(2): jnz 0xffffffe2(%rip)
a508(4): mov (%rsp),%rax
a50c(5): mov 0x8(%rsp),%rcx
a511(9): xor $0x28,%rcx
a51a(2): jnz 0x22(%rip)
a51c(4): add $0x10,%rsp
a520(1): pop %rbx
a521(1): pop %rbp
a522(2): pop %r12
a524(2): pop %r13
a526(2): pop %r14
a528(1): ret near (%rsp)
a529(7): nop 0x0(%rax)
a530(4): lea 0x10(%rbp),%r14
a534(3): mov %rax,%rbx
a537(5): jmp 0xffffff69(%rip)
a53c(5): call 0xffff76e4(%rip)

"lower_subexp" :
a550(2): push %r15
a552(2): push %r14
a554(2): push %r13
a556(2): push %r12
a558(3): mov %rdx,%r13
a55b(1): push %rbp
a55c(1): push %rbx
a55d(4): sub $0x48,%rsp
a561(3): mov (%rsi),%rbx
a564(4): mov 0x8(%rdx),%rbp
a568(9): mov $0x28,%rax
a571(5): mov %rax,0x38(%rsp)
a576(2): xor %eax,%eax
a578(4): test $0x10,0x38(%rsi)
a57c(5): mov %rdi,0x18(%rsp)
a581(6): jz 0x177(%rip)
a587(3): test %rbp,%rbp
a58a(2): jz 0x76(%rip)
a58c(4): mov 0x28(%rdx),%rax
a590(4): cmp $0x3f,%rax
a594(6): jnle 0x139(%rip)
a59a(7): mov 0xa0(%rbx),%rdx
a5a1(4): bt %rax,%rdx
a5a5(6): jnb 0x128(%rip)
a5ab(4): lea 0x70(%rbx),%rax
a5af(5): lea 0x20(%rsp),%r14
a5b4(4): sub $0xffffff80,%rbx
a5b8(2): xor %ecx,%ecx
a5ba(2): xor %edx,%edx
a5bc(3): mov %rbx,%rsi
a5bf(3): mov %rax,%r15
a5c2(3): mov %r14,%r8
a5c5(3): mov %rax,%rdi
a5c8(5): mov $0x8,0x28(%rsp)
a5cd(5): mov %rax,0x8(%rsp)
a5d2(5): call 0xfffffdbe(%rip)
a5d7(3): mov %r15,%rdi
a5da(3): mov %r14,%r8
a5dd(2): xor %ecx,%ecx
a5df(2): xor %edx,%edx
a5e1(3): mov %rbx,%rsi
a5e4(3): mov %rax,%r12
a5e7(5): mov $0x9,0x28(%rsp)
a5ec(5): call 0xfffffda4(%rip)
a5f1(3): mov %rax,%r15
a5f4(5): jmp 0x159(%rip)
a5f9(7): nop 0x0(%rax)
a600(4): lea 0x70(%rbx),%rax
a604(5): lea 0x20(%rsp),%r14
a609(4): sub $0xffffff80,%rbx
a60d(2): xor %ecx,%ecx
a60f(2): xor %edx,%edx
a611(3): mov %rbx,%rsi
a614(3): mov %rax,%r15
a617(3): mov %r14,%r8
a61a(3): mov %rax,%rdi
a61d(5): mov $0x8,0x28(%rsp)
a622(5): mov %rax,0x8(%rsp)
a627(5): call 0xfffffd69(%rip)
a62c(3): mov %r15,%rdi
a62f(3): mov %r14,%r8
a632(2): xor %ecx,%ecx
a634(2): xor %edx,%edx
a636(3): mov %rbx,%rsi
a639(3): mov %rax,%r12
a63c(5): mov $0x9,0x28(%rsp)
a641(5): call 0xfffffd4f(%rip)
a646(3): mov %rax,%r11
a649(3): mov %rax,%r15
a64c(5): mov 0x8(%rsp),%rdi
a651(3): mov %r14,%r8
a654(3): mov %r11,%rcx
a657(3): mov %r12,%rdx
a65a(3): mov %rbx,%rsi
a65d(5): mov $0x10,0x28(%rsp)
a662(5): mov %r11,0x10(%rsp)
a667(5): call 0xfffffd29(%rip)
a66c(3): test %rax,%rax
a66f(3): mov %rax,%rbp
a672(6): jz 0xfe(%rip)
a678(5): mov 0x10(%rsp),%r11
a67d(3): test %r11,%r11
a680(6): jz 0xf0(%rip)
a686(3): test %r12,%r12
a689(6): jz 0xe7(%rip)
a68f(3): test %r15,%r15
a692(6): jz 0xde(%rip)
a698(4): mov 0x28(%r13),%rax
a69c(4): mov %rax,0x28(%r15)
a6a0(5): mov %rax,0x28(%r12)
a6a5(5): movzx 0x32(%r13),%eax
a6aa(5): movzx 0x32(%r15),%edx
a6af(3): and $0x8,%eax
a6b2(3): and $0xf7,%edx
a6b5(2): mov %eax,%ecx
a6b7(2): or %ecx,%edx
a6b9(4): mov %dl,0x32(%r15)
a6bd(6): movzx 0x32(%r12),%eax
a6c3(3): and $0xf7,%eax
a6c6(2): or %ecx,%eax
a6c8(5): mov %al,0x32(%r12)
a6cd(5): mov 0x38(%rsp),%rdi
a6d2(9): xor $0x28,%rdi
a6db(3): mov %rbp,%rax
a6de(6): jnz 0xa4(%rip)
a6e4(4): add $0x48,%rsp
a6e8(1): pop %rbx
a6e9(1): pop %rbp
a6ea(2): pop %r12
a6ec(2): pop %r13
a6ee(2): pop %r14
a6f0(2): pop %r15
a6f2(1): ret near (%rsp)
a6f3(5): nop 0x0(%rax,%rax,1)
a6f8(4): lea 0x70(%rbx),%rax
a6fc(5): lea 0x20(%rsp),%r14
a701(4): sub $0xffffff80,%rbx
a705(2): xor %ecx,%ecx
a707(2): xor %edx,%edx
a709(3): mov %rbx,%rsi
a70c(3): mov %rax,%r15
a70f(3): mov %r14,%r8
a712(3): mov %rax,%rdi
a715(5): mov $0x8,0x28(%rsp)
a71a(5): mov %rax,0x8(%rsp)
a71f(5): call 0xfffffc71(%rip)
a724(2): xor %ecx,%ecx
a726(2): xor %edx,%edx
a728(3): mov %r15,%rdi
a72b(3): mov %r14,%r8
a72e(3): mov %rbx,%rsi
a731(3): mov %rax,%r12
a734(5): mov $0x9,0x28(%rsp)
a739(5): call 0xfffffc57(%rip)
a73e(3): test %rbp,%rbp
a741(3): mov %rax,%r15
a744(3): mov %rax,%r11
a747(6): jz 0xffffff05(%rip)
a74d(5): mov 0x8(%rsp),%rdi
a752(3): mov %r14,%r8
a755(3): mov %r15,%rcx
a758(3): mov %rbp,%rdx
a75b(3): mov %rbx,%rsi
a75e(5): mov $0x10,0x28(%rsp)
a763(5): call 0xfffffc2d(%rip)
a768(3): mov %rax,%r11
a76b(5): jmp 0xfffffee1(%rip)
a770(5): mov 0x18(%rsp),%rax
a775(2): xor %ebp,%ebp
a777(6): mov $0xc,(%rax)
a77d(5): jmp 0xffffff50(%rip)
a782(5): call 0xffff749e(%rip)

"lower_subexps" :
a790(1): push %rbp
a791(1): push %rbx
a792(3): mov %rdi,%rbp
a795(3): mov %rsi,%rbx
a798(4): sub $0x18,%rsp
a79c(4): mov 0x8(%rsi),%rdx
a7a0(9): mov $0x28,%rax
a7a9(5): mov %rax,0x8(%rsp)
a7ae(2): xor %eax,%eax
a7b0(8): mov $0x0,0x4(%rsp)
a7b8(3): test %rdx,%rdx
a7bb(2): jz 0x8(%rip)
a7bd(4): cmp $0x11,0x30(%rdx)
a7c1(2): jz 0x4f(%rip)
a7c3(4): mov 0x10(%rbx),%rdx
a7c7(3): test %rdx,%rdx
a7ca(2): jz 0x8(%rip)
a7cc(4): cmp $0x11,0x30(%rdx)
a7d0(2): jz 0x20(%rip)
a7d2(5): mov 0x8(%rsp),%rcx
a7d7(9): xor $0x28,%rcx
a7e0(4): mov 0x4(%rsp),%eax
a7e4(2): jnz 0x47(%rip)
a7e6(4): add $0x18,%rsp
a7ea(1): pop %rbx
a7eb(1): pop %rbp
a7ec(1): ret near (%rsp)
a7ed(3): nop (%rax)
a7f0(5): lea 0x4(%rsp),%rdi
a7f5(3): mov %rbp,%rsi
a7f8(5): call 0xfffffd58(%rip)
a7fd(3): test %rax,%rax
a800(4): mov %rax,0x10(%rbx)
a804(2): jz 0xffffffce(%rip)
a806(3): mov %rbx,(%rax)
a809(2): jmp 0xffffffc9(%rip)
a80b(5): nop 0x0(%rax,%rax,1)
a810(5): lea 0x4(%rsp),%rdi
a815(3): mov %rbp,%rsi
a818(5): call 0xfffffd38(%rip)
a81d(3): test %rax,%rax
a820(4): mov %rax,0x8(%rbx)
a824(2): jz 0xffffff9f(%rip)
a826(3): mov %rbx,(%rax)
a829(2): jmp 0xffffff9a(%rip)
a82b(5): call 0xffff73f5(%rip)

"re_node_set_init_copy" :
a830(2): push %r12
a832(1): push %rbp
a833(1): push %rbx
a834(4): mov 0x8(%rsi),%rax
a838(4): mov %rax,0x8(%rdi)
a83c(4): mov 0x8(%rsi),%r12
a840(3): test %r12,%r12
a843(2): jle 0x3d(%rip)
a845(3): mov %rdi,%rbx
a848(3): mov %rax,(%rdi)
a84b(8): lea 0x0(,%rax,8),%rdi
a853(3): mov %rsi,%rbp
a856(5): call 0xffff754a(%rip)
a85b(3): test %rax,%rax
a85e(4): mov %rax,0x10(%rbx)
a862(2): jz 0x3e(%rip)
a864(4): mov 0x10(%rbp),%rsi
a868(8): lea 0x0(,%r12,8),%rdx
a870(3): mov %rax,%rdi
a873(5): call 0xffff74fd(%rip)
a878(2): xor %eax,%eax
a87a(1): pop %rbx
a87b(1): pop %rbp
a87c(2): pop %r12
a87e(1): ret near (%rsp)
a87f(1): nop 
a880(4): pxor %xmm0,%xmm0
a884(8): mov $0x0,0x10(%rdi)
a88c(2): xor %eax,%eax
a88e(3): movups %xmm0,(%rdi)
a891(1): pop %rbx
a892(1): pop %rbp
a893(2): pop %r12
a895(1): ret near (%rsp)
a896(a): nop 0x0(%rax,%rax,1)
a8a0(8): mov $0x0,0x8(%rbx)
a8a8(7): mov $0x0,(%rbx)
a8af(5): mov $0xc,%eax
a8b4(2): jmp 0xffffffc6(%rip)

"re_node_set_init_union" :
a8c0(3): test %rsi,%rsi
a8c3(2): push %r14
a8c5(2): push %r13
a8c7(2): push %r12
a8c9(1): push %rbp
a8ca(1): push %rbx
a8cb(6): jz 0xaa(%rip)
a8d1(3): test %rdx,%rdx
a8d4(4): mov 0x8(%rsi),%r13
a8d8(6): jz 0x98(%rip)
a8de(3): test %r13,%r13
a8e1(6): jle 0x8f(%rip)
a8e7(4): mov 0x8(%rdx),%r14
a8eb(3): test %r14,%r14
a8ee(6): jle 0xb5(%rip)
a8f4(3): mov %rdi,%r12
a8f7(5): lea 0x0(%r13,%r14,1),%rdi
a8fc(3): mov %rdx,%rbx
a8ff(3): mov %rsi,%rbp
a902(4): mov %rdi,(%r12)
a906(4): shl/sal $0x3,%rdi
a90a(5): call 0xffff7496(%rip)
a90f(3): test %rax,%rax
a912(5): mov %rax,0x10(%r12)
a917(6): jz 0xf1(%rip)
a91d(4): mov 0x10(%rbx),%r9
a921(4): mov 0x10(%rbp),%r8
a925(2): xor %ebx,%ebx
a927(2): xor %ecx,%ecx
a929(2): xor %esi,%esi
a92b(2): jmp 0x23(%rip)
a92d(3): nop (%rax)
a930(4): setz %dil
a934(5): mov %rdx,0xfffffff8(%rax,%rbx,8)
a939(4): add $0x1,%rsi
a93d(4): movzx %dil,%edi
a941(3): add %rdi,%rcx
a944(3): cmp %rsi,%r13
a947(2): jle 0x69(%rip)
a949(3): cmp %rcx,%r14
a94c(2): jle 0x7c(%rip)
a94e(4): mov 0x0(%r8,%rsi,8),%rdx
a952(4): mov 0x0(%r9,%rcx,8),%rdi
a956(4): add $0x1,%rbx
a95a(3): cmp %rdi,%rdx
a95d(2): jle 0xffffffd3(%rip)
a95f(4): add $0x1,%rcx
a963(5): mov %rdi,0xfffffff8(%rax,%rbx,8)
a968(2): jmp 0xffffffdc(%rip)
a96a(6): nop 0x0(%rax,%rax,1)
a970(3): test %r13,%r13
a973(2): jnle 0x30(%rip)
a975(3): test %rdx,%rdx
a978(2): jz 0x9(%rip)
a97a(5): cmp $0x0,0x8(%rdx)
a97f(2): jnle 0x21(%rip)
a981(4): pxor %xmm0,%xmm0
a985(8): mov $0x0,0x10(%rdi)
a98d(2): xor %eax,%eax
a98f(3): movaps %xmm0,(%rdi)
a992(1): pop %rbx
a993(1): pop %rbp
a994(2): pop %r12
a996(2): pop %r13
a998(2): pop %r14
a99a(1): ret near (%rsp)
a99b(5): nop 0x0(%rax,%rax,1)
a9a0(3): mov %rdx,%rsi
a9a3(1): pop %rbx
a9a4(1): pop %rbp
a9a5(2): pop %r12
a9a7(2): pop %r13
a9a9(2): pop %r14
a9ab(5): jmp 0xfffffe85(%rip)
a9b0(3): cmp %rcx,%r14
a9b3(2): jnle 0x35(%rip)
a9b5(5): mov %rbx,0x8(%r12)
a9ba(2): xor %eax,%eax
a9bc(1): pop %rbx
a9bd(1): pop %rbp
a9be(2): pop %r12
a9c0(2): pop %r13
a9c2(2): pop %r14
a9c4(1): ret near (%rsp)
a9c5(3): nop (%rax)
a9c8(3): sub %rsi,%r13
a9cb(4): lea 0x0(%rax,%rbx,8),%rdi
a9cf(4): lea 0x0(%r8,%rsi,8),%rsi
a9d3(8): lea 0x0(,%r13,8),%rdx
a9db(3): add %r13,%rbx
a9de(5): call 0xffff7392(%rip)
a9e3(2): jmp 0xffffffd2(%rip)
a9e5(3): nop (%rax)
a9e8(3): sub %rcx,%r14
a9eb(4): lea 0x0(%rax,%rbx,8),%rdi
a9ef(4): lea 0x0(%r9,%rcx,8),%rsi
a9f3(8): lea 0x0(,%r14,8),%rdx
a9fb(3): add %r14,%rbx
a9fe(5): call 0xffff7372(%rip)
aa03(2): jmp 0xffffffb2(%rip)
aa05(3): nop (%rax)
aa08(5): mov $0xc,%eax
aa0d(5): jmp 0xffffff85(%rip)

"re_acquire_state_context" :
aa20(2): push %r15
aa22(2): push %r14
aa24(2): push %r13
aa26(2): push %r12
aa28(1): push %rbp
aa29(1): push %rbx
aa2a(4): sub $0x28,%rsp
aa2e(4): mov 0x8(%rdx),%r10
aa32(3): test %r10,%r10
aa35(6): jz 0x28a(%rip)
aa3b(3): mov %ecx,%r8d
aa3e(3): test %r10,%r10
aa41(4): lea 0x0(%r8,%r10,1),%r12
aa45(2): jle 0x17(%rip)
aa47(4): mov 0x10(%rdx),%rax
aa4b(4): lea 0x0(%rax,%r10,8),%r10
aa4f(1): nop 
aa50(3): add (%rax),%r12
aa53(4): add $0x8,%rax
aa57(3): cmp %rax,%r10
aa5a(2): jnz 0xfffffff6(%rip)
aa5c(7): mov 0x88(%rsi),%rax
aa63(3): mov %rdx,%rbp
aa66(4): mov %ecx,0x4(%rsp)
aa6a(3): mov %rsi,%r13
aa6d(5): mov %rdi,0x18(%rsp)
aa72(3): and %r12,%rax
aa75(4): lea 0x0(%rax,%rax,2),%rdx
aa79(4): mov 0x40(%rsi),%rax
aa7d(4): lea 0x0(%rax,%rdx,8),%rax
aa81(3): mov (%rax),%r11
aa84(3): test %r11,%r11
aa87(2): jle 0x59(%rip)
aa89(4): mov 0x10(%rax),%rbx
aa8d(3): xor %r10d,%r10d
aa90(3): mov %ecx,%r9d
aa93(2): jmp 0xe(%rip)
aa95(3): nop (%rax)
aa98(4): add $0x1,%r10
aa9c(3): cmp %r11,%r10
aa9f(2): jz 0x41(%rip)
aaa1(4): mov 0x0(%rbx,%r10,8),%r14
aaa5(3): cmp %r12,(%r14)
aaa8(2): jnz 0xfffffff0(%rip)
aaaa(5): movzx 0x68(%r14),%eax
aaaf(3): and $0xf,%eax
aab2(3): cmp %r9d,%eax
aab5(2): jnz 0xffffffe3(%rip)
aab7(4): mov 0x50(%r14),%rdi
aabb(3): test %rdi,%rdi
aabe(2): jz 0xffffffda(%rip)
aac0(3): mov %rbp,%rsi
aac3(5): call 0xffffebad(%rip)
aac8(2): test %al,%al
aaca(2): jz 0xffffffce(%rip)
aacc(4): add $0x28,%rsp
aad0(3): mov %r14,%rax
aad3(1): pop %rbx
aad4(1): pop %rbp
aad5(2): pop %r12
aad7(2): pop %r13
aad9(2): pop %r14
aadb(2): pop %r15
aadd(1): ret near (%rsp)
aade(2): nop 
aae0(5): mov $0x1,%esi
aae5(5): mov $0x70,%edi
aaea(5): call 0xffff7246(%rip)
aaef(3): test %rax,%rax
aaf2(3): mov %rax,%r14
aaf5(6): jz 0x141(%rip)
aafb(4): lea 0x8(%rax),%rax
aaff(3): mov %rbp,%rsi
ab02(3): mov %rax,%rdi
ab05(3): mov %rax,%rbx
ab08(5): call 0xfffffd28(%rip)
ab0d(2): test %eax,%eax
ab0f(6): jnz 0x1be(%rip)
ab15(5): movzx 0x68(%r14),%eax
ab1a(5): movzx 0x4(%rsp),%edx
ab1f(4): mov %rbx,0x50(%r14)
ab23(3): and $0xf,%edx
ab26(3): and $0xf0,%eax
ab29(2): or %edx,%eax
ab2b(5): cmp $0x0,0x8(%rbp)
ab30(4): mov %al,0x68(%r14)
ab34(6): jle 0xe4(%rip)
ab3a(4): lea 0x18(%r14),%rcx
ab3e(3): xor %r15d,%r15d
ab41(5): mov %r12,0x10(%rsp)
ab46(3): xor %r10d,%r10d
ab49(3): mov %r13,%r12
ab4c(3): mov %r15,%r13
ab4f(5): mov %rcx,0x8(%rsp)
ab54(3): mov %rbx,%r15
ab57(9): nop 0x0(%rax,%rax,1)
ab60(4): mov 0x10(%rbp),%rax
ab64(4): mov 0x0(%rax,%r13,8),%rax
ab68(4): shl/sal $0x4,%rax
ab6c(4): add (%r12),%rax
ab70(4): movzx 0x8(%rax),%esi
ab74(3): mov 0x8(%rax),%ebx
ab77(3): shr $0x8,%ebx
ab7a(5): and $0x3ff,%bx
ab7f(3): cmp $0x1,%esi
ab82(3): movzx %bx,%edi
ab85(2): jnz 0x6(%rip)
ab87(2): test %edi,%edi
ab89(2): jz 0x79(%rip)
ab8b(5): movzx 0x68(%r14),%edx
ab90(4): movzx 0xa(%rax),%eax
ab94(3): mov %edx,%r9d
ab97(3): shr $0x4,%al
ab9a(3): and $0xdf,%edx
ab9d(4): shr $0x5,%r9b
aba1(3): or %r9d,%eax
aba4(3): and $0x1,%eax
aba7(3): shl/sal $0x5,%eax
abaa(2): or %edx,%eax
abac(3): cmp $0x2,%esi
abaf(4): mov %al,0x68(%r14)
abb3(6): jz 0xcd(%rip)
abb9(3): cmp $0x4,%esi
abbc(2): jnz 0x9(%rip)
abbe(3): or $0x40,%eax
abc1(4): mov %al,0x68(%r14)
abc5(2): test %edi,%edi
abc7(2): jz 0x3b(%rip)
abc9(4): cmp 0x50(%r14),%r15
abcd(6): jz 0xc3(%rip)
abd3(3): test $0x1,%bl
abd6(2): jz 0x7a(%rip)
abd8(5): test $0x1,0x4(%rsp)
abdd(2): jz 0xb(%rip)
abdf(3): test $0x2,%bl
abe2(2): jz 0x7a(%rip)
abe4(4): nop 0x0(%rax)
abe8(3): mov %r13,%rdx
abeb(3): sub %r10,%rdx
abee(2): js 0x10(%rip)
abf0(5): mov 0x8(%rsp),%rsi
abf5(4): lea 0x10(%r14),%rdi
abf9(5): call 0xffffec57(%rip)
abfe(4): add $0x1,%r10
ac02(4): add $0x1,%r13
ac06(4): cmp 0x8(%rbp),%r13
ac0a(6): jl 0xffffff56(%rip)
ac10(3): mov %r12,%r13
ac13(5): mov 0x10(%rsp),%r12
ac18(3): mov %r12,%rdx
ac1b(3): mov %r14,%rsi
ac1e(3): mov %r13,%rdi
ac21(5): call 0xffffd69f(%rip)
ac26(2): test %eax,%eax
ac28(6): jz 0xfffffea4(%rip)
ac2e(3): mov %r14,%rdi
ac31(5): call 0xffffe72f(%rip)
ac36(5): mov 0x18(%rsp),%rax
ac3b(3): xor %r14d,%r14d
ac3e(6): mov $0xc,(%rax)
ac44(5): jmp 0xfffffe88(%rip)
ac49(7): nop 0x0(%rax)
ac50(3): test $0x2,%bl
ac53(2): jz 0x9(%rip)
ac55(5): test $0x1,0x4(%rsp)
ac5a(2): jnz 0xffffff8e(%rip)
ac5c(3): test $0x10,%bl
ac5f(2): jz 0x9(%rip)
ac61(5): test $0x2,0x4(%rsp)
ac66(2): jz 0xffffff82(%rip)
ac68(3): and $0x40,%ebx
ac6b(2): jz 0xffffff97(%rip)
ac6d(5): test $0x4,0x4(%rsp)
ac72(2): jnz 0xffffff90(%rip)
ac74(5): jmp 0xffffff74(%rip)
ac79(7): nop 0x0(%rax)
ac80(3): or $0x10,%eax
ac83(4): mov %al,0x68(%r14)
ac87(5): jmp 0xffffff3e(%rip)
ac8c(4): nop 0x0(%rax)
ac90(5): mov $0x18,%edi
ac95(5): call 0xffff710b(%rip)
ac9a(3): test %rax,%rax
ac9d(4): mov %rax,0x50(%r14)
aca1(2): jz 0xffffff8d(%rip)
aca3(3): mov %rbp,%rsi
aca6(3): mov %rax,%rdi
aca9(5): call 0xfffffb87(%rip)
acae(2): test %eax,%eax
acb0(2): jnz 0xffffff86(%rip)
acb2(5): or $0x80,0x68(%r14)
acb7(3): xor %r10d,%r10d
acba(5): jmp 0xffffff19(%rip)
acbf(6): mov $0x0,(%rdi)
acc5(3): xor %r14d,%r14d
acc8(5): jmp 0xfffffe04(%rip)
accd(3): mov %r14,%rdi
acd0(5): call 0xffff6e30(%rip)
acd5(5): jmp 0xffffff61(%rip)

"re_acquire_state" :
ace0(2): push %r15
ace2(2): push %r14
ace4(2): push %r13
ace6(2): push %r12
ace8(1): push %rbp
ace9(1): push %rbx
acea(4): sub $0x8,%rsp
acee(4): mov 0x8(%rdx),%rbp
acf2(3): test %rbp,%rbp
acf5(6): jz 0x1db(%rip)
acfb(3): test %rbp,%rbp
acfe(2): jle 0x1e(%rip)
ad00(4): mov 0x10(%rdx),%rax
ad04(4): lea 0x0(%rax,%rbp,8),%rcx
ad08(8): nop 0x0(%rax,%rax,1)
ad10(3): add (%rax),%rbp
ad13(4): add $0x8,%rax
ad17(3): cmp %rax,%rcx
ad1a(2): jnz 0xfffffff6(%rip)
ad1c(7): mov 0x88(%rsi),%rax
ad23(3): mov %rdx,%r14
ad26(3): mov %rsi,%r12
ad29(3): mov %rdi,%r13
ad2c(3): and %rbp,%rax
ad2f(4): lea 0x0(%rax,%rax,2),%rdx
ad33(4): mov 0x40(%rsi),%rax
ad37(4): lea 0x0(%rax,%rdx,8),%rax
ad3b(3): mov (%rax),%r10
ad3e(3): test %r10,%r10
ad41(2): jle 0x35(%rip)
ad43(4): mov 0x10(%rax),%r11
ad47(3): xor %r9d,%r9d
ad4a(6): nop 0x0(%rax,%rax,1)
ad50(4): mov 0x0(%r11,%r9,8),%rbx
ad54(3): cmp %rbp,(%rbx)
ad57(2): jnz 0x16(%rip)
ad59(4): lea 0x8(%rbx),%rdi
ad5d(3): mov %r14,%rsi
ad60(5): call 0xffffe910(%rip)
ad65(2): test %al,%al
ad67(6): jnz 0x108(%rip)
ad6d(4): add $0x1,%r9
ad71(3): cmp %r9,%r10
ad74(2): jnz 0xffffffdc(%rip)
ad76(5): mov $0x1,%esi
ad7b(5): mov $0x70,%edi
ad80(5): call 0xffff6fb0(%rip)
ad85(3): test %rax,%rax
ad88(3): mov %rax,%rbx
ad8b(6): jz 0x12d(%rip)
ad91(4): lea 0x8(%rax),%r15
ad95(3): mov %r14,%rsi
ad98(3): mov %r15,%rdi
ad9b(5): call 0xfffffa95(%rip)
ada0(2): test %eax,%eax
ada2(6): jnz 0x10e(%rip)
ada8(4): mov 0x8(%r14),%rax
adac(4): mov %r15,0x50(%rbx)
adb0(3): test %rax,%rax
adb3(6): jle 0xaa(%rip)
adb9(4): mov 0x10(%r14),%rsi
adbd(4): mov (%r12),%r8
adc1(4): lea 0x0(%rsi,%rax,8),%r9
adc5(2): jmp 0x4f(%rip)
adc7(9): nop 0x0(%rax,%rax,1)
add0(4): movzx 0x68(%rbx),%ecx
add4(4): movzx 0xa(%rax),%edx
add8(3): mov %ecx,%r10d
addb(3): shr $0x4,%dl
adde(3): and $0xdf,%ecx
ade1(4): shr $0x5,%r10b
ade5(3): or %r10d,%edx
ade8(3): and $0x1,%edx
adeb(3): shl/sal $0x5,%edx
adee(2): or %ecx,%edx
adf0(3): cmp $0x2,%edi
adf3(3): mov %dl,0x68(%rbx)
adf6(6): jz 0x92(%rip)
adfc(3): cmp $0x4,%edi
adff(6): jnz 0x99(%rip)
ae05(3): or $0x40,%edx
ae08(3): mov %dl,0x68(%rbx)
ae0b(4): add $0x8,%rsi
ae0f(3): cmp %rsi,%r9
ae12(2): jz 0x4b(%rip)
ae14(3): mov (%rsi),%rax
ae17(4): shl/sal $0x4,%rax
ae1b(3): add %r8,%rax
ae1e(4): movzx 0x8(%rax),%edi
ae22(3): cmp $0x1,%edi
ae25(2): jnz 0xffffffab(%rip)
ae27(7): test $0x3ff00,0x8(%rax)
ae2e(2): jz 0xffffffdd(%rip)
ae30(4): movzx 0x68(%rbx),%edx
ae34(4): movzx 0xa(%rax),%eax
ae38(2): mov %edx,%ecx
ae3a(3): shr $0x4,%al
ae3d(3): and $0xdf,%edx
ae40(3): shr $0x5,%cl
ae43(2): or %ecx,%eax
ae45(3): and $0x1,%eax
ae48(3): shl/sal $0x5,%eax
ae4b(2): or %edx,%eax
ae4d(3): mov %al,0x68(%rbx)
ae50(4): add $0x8,%rsi
ae54(4): or $0x80,0x68(%rbx)
ae58(3): cmp %rsi,%r9
ae5b(2): jnz 0xffffffb9(%rip)
ae5d(3): mov %rbp,%rdx
ae60(3): mov %rbx,%rsi
ae63(3): mov %r12,%rdi
ae66(5): call 0xffffd45a(%rip)
ae6b(2): test %eax,%eax
ae6d(2): jnz 0x57(%rip)
ae6f(4): add $0x8,%rsp
ae73(3): mov %rbx,%rax
ae76(1): pop %rbx
ae77(1): pop %rbp
ae78(2): pop %r12
ae7a(2): pop %r13
ae7c(2): pop %r14
ae7e(2): pop %r15
ae80(1): ret near (%rsp)
ae81(7): nop 0x0(%rax)
ae88(3): or $0x10,%edx
ae8b(3): mov %dl,0x68(%rbx)
ae8e(5): jmp 0xffffff7d(%rip)
ae93(5): nop 0x0(%rax,%rax,1)
ae98(3): cmp $0xc,%edi
ae9b(2): jz 0xffffffb5(%rip)
ae9d(7): test $0x3ff00,0x8(%rax)
aea4(6): jz 0xffffff67(%rip)
aeaa(2): jmp 0xffffffa6(%rip)
aeac(4): nop 0x0(%rax)
aeb0(3): mov %rbx,%rdi
aeb3(5): call 0xffff6c4d(%rip)
aeb8(8): mov $0xc,0x0(%r13)
aec0(2): xor %ebx,%ebx
aec2(2): jmp 0xffffffad(%rip)
aec4(3): mov %rbx,%rdi
aec7(5): call 0xffffe499(%rip)
aecc(2): jmp 0xffffffec(%rip)
aece(2): nop 
aed0(6): mov $0x0,(%rdi)
aed6(2): xor %ebx,%ebx
aed8(2): jmp 0xffffff97(%rip)

"merge_state_array" :
aee0(2): push %r15
aee2(2): push %r14
aee4(2): push %r13
aee6(2): push %r12
aee8(1): push %rbp
aee9(1): push %rbx
aeea(4): sub $0x48,%rsp
aeee(9): mov $0x28,%rax
aef7(5): mov %rax,0x38(%rsp)
aefc(2): xor %eax,%eax
aefe(3): test %rcx,%rcx
af01(6): jle 0x95(%rip)
af07(5): lea 0x1c(%rsp),%rax
af0c(3): mov %rdi,%r14
af0f(3): mov %rsi,%rbx
af12(3): mov %rdx,%r12
af15(3): mov %rcx,%rbp
af18(3): xor %r15d,%r15d
af1b(5): lea 0x20(%rsp),%r13
af20(5): mov %rax,0x8(%rsp)
af25(2): jmp 0x57(%rip)
af27(9): nop 0x0(%rax,%rax,1)
af30(3): test %rdx,%rdx
af33(2): jz 0x40(%rip)
af35(4): add $0x8,%rdx
af39(4): add $0x8,%rsi
af3d(3): mov %r13,%rdi
af40(5): call 0xfffff980(%rip)
af45(2): test %eax,%eax
af47(4): mov %eax,0x1c(%rsp)
af4b(2): jnz 0x4d(%rip)
af4d(5): mov 0x8(%rsp),%rdi
af52(3): mov %r13,%rdx
af55(3): mov %r14,%rsi
af58(5): call 0xfffffd88(%rip)
af5d(5): mov 0x30(%rsp),%rdi
af62(4): mov %rax,0x0(%rbx,%r15,8)
af66(5): call 0xffff6b9a(%rip)
af6b(4): mov 0x1c(%rsp),%eax
af6f(2): test %eax,%eax
af71(2): jnz 0x27(%rip)
af73(4): add $0x1,%r15
af77(3): cmp %r15,%rbp
af7a(2): jz 0x1c(%rip)
af7c(4): mov 0x0(%rbx,%r15,8),%rsi
af80(4): mov 0x0(%r12,%r15,8),%rdx
af84(3): test %rsi,%rsi
af87(2): jnz 0xffffffa9(%rip)
af89(4): mov %rdx,0x0(%rbx,%r15,8)
af8d(4): add $0x1,%r15
af91(3): cmp %r15,%rbp
af94(2): jnz 0xffffffe8(%rip)
af96(2): xor %eax,%eax
af98(5): mov 0x38(%rsp),%rcx
af9d(9): xor $0x28,%rcx
afa6(2): jnz 0x11(%rip)
afa8(4): add $0x48,%rsp
afac(1): pop %rbx
afad(1): pop %rbp
afae(2): pop %r12
afb0(2): pop %r13
afb2(2): pop %r14
afb4(2): pop %r15
afb6(1): ret near (%rsp)
afb7(5): call 0xffff6c69(%rip)

"expand_bkref_cache" :
afc0(2): push %r15
afc2(2): push %r14
afc4(2): push %r13
afc6(2): push %r12
afc8(3): mov %rdx,%r12
afcb(1): push %rbp
afcc(1): push %rbx
afcd(3): mov %rdi,%rbx
afd0(3): mov %rsi,%rbp
afd3(2): xor %esi,%esi
afd5(4): sub $0x78,%rsp
afd9(7): mov 0xc8(%rdi),%rdi
afe0(9): mov $0x28,%rax
afe9(5): mov %rax,0x68(%rsp)
afee(2): xor %eax,%eax
aff0(5): mov %rcx,0x20(%rsp)
aff5(5): mov %r8d,0x2c(%rsp)
affa(3): mov %rdi,%rdx
affd(3): cmp %rdx,%rsi
b000(2): jnl 0x57(%rip)
b002(4): lea 0x0(%rsi,%rdx,1),%rax
b006(7): mov 0xd8(%rbx),%r8
b00d(3): mov %rax,%rcx
b010(4): shr $0x3f,%rcx
b014(3): add %rax,%rcx
b017(3): sar $0x1,%rcx
b01a(4): lea 0x0(%rcx,%rcx,4),%rax
b01e(5): cmp 0x8(%r8,%rax,8),%r12
b023(2): jle 0x2f(%rip)
b025(5): jmp 0x83(%rip)
b02a(6): nop 0x0(%rax,%rax,1)
b030(4): lea 0x0(%rsi,%rcx,1),%rdx
b034(3): mov %rdx,%rax
b037(4): shr $0x3f,%rax
b03b(3): add %rdx,%rax
b03e(3): sar $0x1,%rax
b041(4): lea 0x0(%rax,%rax,4),%rdx
b045(3): mov %rax,%r9
b048(5): cmp 0x8(%r8,%rdx,8),%r12
b04d(2): jnle 0x63(%rip)
b04f(3): mov %rax,%rcx
b052(3): cmp %rcx,%rsi
b055(2): jl 0xffffffdb(%rip)
b057(3): cmp %rsi,%rdi
b05a(2): jle 0x23(%rip)
b05c(7): mov 0xd8(%rbx),%rcx
b063(4): lea 0x0(%rsi,%rsi,4),%rax
b067(4): shl/sal $0x3,%rax
b06b(5): cmp %r12,0x8(%rcx,%rax,1)
b070(5): mov %rax,0x30(%rsp)
b075(2): jnz 0x8(%rip)
b077(4): cmp $0xffffffff,%rsi
b07b(2): jnz 0x45(%rip)
b07d(2): xor %eax,%eax
b07f(5): mov 0x68(%rsp),%rbx
b084(9): xor $0x28,%rbx
b08d(6): jnz 0x2cc(%rip)
b093(4): add $0x78,%rsp
b097(1): pop %rbx
b098(1): pop %rbp
b099(2): pop %r12
b09b(2): pop %r13
b09d(2): pop %r14
b09f(2): pop %r15
b0a1(1): ret near (%rsp)
b0a2(6): nop 0x0(%rax,%rax,1)
b0a8(3): mov %rcx,%r9
b0ab(3): mov %rdx,%rcx
b0ae(2): nop 
b0b0(4): lea 0x1(%r9),%rsi
b0b4(3): mov %rcx,%rdx
b0b7(5): jmp 0xffffff46(%rip)
b0bc(4): nop 0x0(%rax)
b0c0(4): lea 0x10(%rbp),%rax
b0c4(7): mov 0x98(%rbx),%r13
b0cb(4): mov %rax,(%rsp)
b0cf(5): lea 0x4c(%rsp),%rax
b0d4(5): mov %rax,0x38(%rsp)
b0d9(5): lea 0x50(%rsp),%rax
b0de(5): mov %rax,0x10(%rsp)
b0e3(5): mov 0x30(%rsp),%rax
b0e8(4): lea 0x0(%rcx,%rax,1),%r15
b0ec(5): jmp 0xdc(%rip)
b0f1(7): nop 0x0(%rax)
b0f8(4): mov 0x18(%r13),%rax
b0fc(4): mov 0x0(%rax,%r10,8),%rcx
b100(7): mov 0xb8(%rbx),%r10
b107(8): lea 0x0(,%r14,8),%rax
b10f(5): mov %rax,0x18(%rsp)
b114(3): add %rax,%r10
b117(5): mov %rcx,0x8(%rsp)
b11c(3): mov (%r10),%r9
b11f(3): test %r9,%r9
b122(6): jz 0x18e(%rip)
b128(4): mov 0x10(%r9),%rdi
b12c(4): lea 0x18(%r9),%rsi
b130(3): mov %rcx,%rdx
b133(5): call 0xffffe59d(%rip)
b138(3): test %rax,%rax
b13b(2): jnz 0x7e(%rip)
b13d(5): mov 0x10(%rsp),%rdi
b142(4): lea 0x8(%r9),%rsi
b146(5): call 0xfffff6ea(%rip)
b14b(5): mov 0x8(%rsp),%rsi
b150(5): mov 0x10(%rsp),%rdi
b155(4): mov %eax,0x4c(%rsp)
b159(5): call 0xffffd037(%rip)
b15e(4): mov 0x4c(%rsp),%edx
b162(2): test %edx,%edx
b164(6): jnz 0x1a2(%rip)
b16a(2): cmp $0x1,%al
b16c(6): jnz 0x19a(%rip)
b172(5): mov 0x18(%rsp),%r10
b177(7): add 0xb8(%rbx),%r10
b17e(5): mov 0x10(%rsp),%rdx
b183(5): mov 0x38(%rsp),%rdi
b188(3): mov %r13,%rsi
b18b(5): mov %r10,0x8(%rsp)
b190(5): call 0xfffffb50(%rip)
b195(5): mov 0x8(%rsp),%r10
b19a(5): mov 0x60(%rsp),%rdi
b19f(3): mov %rax,(%r10)
b1a2(5): call 0xffff695e(%rip)
b1a7(7): mov 0xb8(%rbx),%rax
b1ae(5): cmp $0x0,0x0(%rax,%r14,8)
b1b3(6): jz 0x142(%rip)
b1b9(4): add $0x28,%r15
b1bd(5): cmp $0x0,0xfffffff8(%r15)
b1c2(6): jz 0xfffffebb(%rip)
b1c8(3): mov (%r15),%r10
b1cb(4): mov 0x8(%rbp),%r9
b1cf(4): mov (%rsp),%rsi
b1d3(3): mov %r10,%rdx
b1d6(3): mov %r9,%rdi
b1d9(5): call 0xffffe4f7(%rip)
b1de(3): test %rax,%rax
b1e1(2): jz 0xffffffd8(%rip)
b1e3(4): mov 0x18(%r15),%r8
b1e7(3): add %r12,%r8
b1ea(3): mov %r8,%r14
b1ed(4): sub 0x10(%r15),%r14
b1f1(3): cmp %r14,%r12
b1f4(6): jnz 0xffffff04(%rip)
b1fa(4): mov 0x28(%r13),%rcx
b1fe(4): lea 0x0(%r10,%r10,2),%rax
b202(4): mov (%rsp),%rsi
b206(3): mov %r9,%rdi
b209(4): lea 0x0(%rcx,%rax,8),%rax
b20d(4): mov 0x10(%rax),%rax
b211(3): mov (%rax),%r14
b214(3): mov %r14,%rdx
b217(5): call 0xffffe4b9(%rip)
b21c(3): test %rax,%rax
b21f(2): jnz 0xffffff9a(%rip)
b221(5): mov $0x8,%edi
b226(9): mov $0x1,0x50(%rsp)
b22f(9): mov $0x1,0x58(%rsp)
b238(5): call 0xffff6b68(%rip)
b23d(3): test %rax,%rax
b240(5): mov %rax,0x60(%rsp)
b245(6): jz 0xf8(%rip)
b24b(3): mov %r14,(%rax)
b24e(2): xor %eax,%eax
b250(5): mov 0x10(%rsp),%r15
b255(5): mov 0x20(%rsp),%rdx
b25a(3): mov %r13,%rdi
b25d(4): mov 0x2c(%rsp),%ecx
b261(4): mov %eax,0x4c(%rsp)
b265(3): mov %r15,%rsi
b268(5): call 0xffffee18(%rip)
b26d(3): mov %r15,%rsi
b270(3): mov %rbp,%rdi
b273(3): mov %eax,%r14d
b276(5): call 0xffffe97a(%rip)
b27b(5): mov 0x60(%rsp),%rdi
b280(3): mov %eax,%r15d
b283(5): call 0xffff687d(%rip)
b288(4): mov 0x4c(%rsp),%eax
b28c(3): mov %r14d,%edx
b28f(3): or %r15d,%edx
b292(2): or %eax,%edx
b294(6): jnz 0x92(%rip)
b29a(7): mov 0xd8(%rbx),%rcx
b2a1(5): jmp 0xfffffe42(%rip)
b2a6(a): nop 0x0(%rax,%rax,1)
b2b0(5): mov $0x8,%edi
b2b5(5): mov %r10,0x18(%rsp)
b2ba(9): mov $0x1,0x50(%rsp)
b2c3(9): mov $0x1,0x58(%rsp)
b2cc(5): call 0xffff6ad4(%rip)
b2d1(3): test %rax,%rax
b2d4(5): mov %rax,0x60(%rsp)
b2d9(2): jz 0x43(%rip)
b2db(5): mov 0x8(%rsp),%rdi
b2e0(8): mov $0x0,0x4c(%rsp)
b2e8(5): mov 0x18(%rsp),%r10
b2ed(3): mov %rdi,(%rax)
b2f0(5): jmp 0xfffffe8e(%rip)
b2f5(4): mov 0x4c(%rsp),%eax
b2f9(2): test %eax,%eax
b2fb(6): jz 0xfffffebe(%rip)
b301(5): jmp 0xfffffd7e(%rip)
b306(5): mov 0x60(%rsp),%rdi
b30b(5): call 0xffff67f5(%rip)
b310(4): mov 0x4c(%rsp),%eax
b314(2): test %eax,%eax
b316(6): jnz 0xfffffd69(%rip)
b31c(5): mov $0xc,%eax
b321(5): jmp 0xfffffd5e(%rip)
b326(2): test %eax,%eax
b328(6): jnz 0xfffffd57(%rip)
b32e(3): test %r14d,%r14d
b331(3): mov %r14d,%eax
b334(4): cmove %r15d,%eax
b338(5): jmp 0xfffffd47(%rip)
b33d(9): mov $0x0,0x58(%rsp)
b346(9): mov $0x0,0x50(%rsp)
b34f(5): mov $0xc,%eax
b354(5): jmp 0xfffffefc(%rip)
b359(5): call 0xffff68c7(%rip)

"check_subexp_matching_top.isra.18" :
b360(2): push %r15
b362(2): push %r14
b364(2): push %r13
b366(2): push %r12
b368(1): push %rbp
b369(1): push %rbx
b36a(4): sub $0x28,%rsp
b36e(4): cmp $0x0,(%rsi)
b372(7): mov 0x98(%rdi),%r13
b379(6): jle 0xc7(%rip)
b37f(3): mov %rdx,%r14
b382(3): mov %rsi,%r12
b385(3): mov %rdi,%r15
b388(2): xor %ebx,%ebx
b38a(2): jmp 0x14(%rip)
b38c(4): nop 0x0(%rax)
b390(4): add $0x1,%rbx
b394(4): cmp (%r12),%rbx
b398(6): jnl 0xa8(%rip)
b39e(3): mov (%r14),%rax
b3a1(4): mov 0x0(%rax,%rbx,8),%rbp
b3a5(3): mov %rbp,%rax
b3a8(4): shl/sal $0x4,%rax
b3ac(4): add 0x0(%r13),%rax
b3b0(4): cmp $0x8,0x8(%rax)
b3b4(2): jnz 0xffffffdc(%rip)
b3b6(3): mov (%rax),%rax
b3b9(4): cmp $0x3f,%rax
b3bd(2): jnle 0xffffffd3(%rip)
b3bf(7): mov 0xa0(%r13),%rsi
b3c6(4): bt %rax,%rsi
b3ca(2): jnb 0xffffffc6(%rip)
b3cc(7): mov 0xe8(%r15),%r8
b3d3(7): cmp 0xf0(%r15),%r8
b3da(7): mov 0xf8(%r15),%r9
b3e1(2): jz 0x77(%rip)
b3e3(5): mov $0x30,%esi
b3e8(5): mov $0x1,%edi
b3ed(5): mov %r9,0x10(%rsp)
b3f2(5): mov %r8,0x8(%rsp)
b3f7(5): mov %rcx,0x18(%rsp)
b3fc(5): call 0xffff6934(%rip)
b401(5): mov 0x8(%rsp),%r8
b406(5): mov 0x10(%rsp),%r9
b40b(3): test %rax,%rax
b40e(4): mov %rax,0x0(%r9,%r8,8)
b412(2): jz 0x3f(%rip)
b414(4): add $0x1,%r8
b418(4): add $0x1,%rbx
b41c(5): mov 0x18(%rsp),%rcx
b421(7): mov %r8,0xe8(%r15)
b428(4): cmp (%r12),%rbx
b42c(4): mov %rbp,0x8(%rax)
b430(3): mov %rcx,(%rax)
b433(6): jl 0xffffff6b(%rip)
b439(7): nop 0x0(%rax)
b440(2): xor %eax,%eax
b442(4): add $0x28,%rsp
b446(1): pop %rbx
b447(1): pop %rbp
b448(2): pop %r12
b44a(2): pop %r13
b44c(2): pop %r14
b44e(2): pop %r15
b450(1): ret near (%rsp)
b451(5): mov $0xc,%eax
b456(2): jmp 0xffffffec(%rip)
b458(4): lea 0x0(%r8,%r8,1),%rax
b45c(3): mov %r8,%rsi
b45f(3): mov %r9,%rdi
b462(4): shl/sal $0x4,%rsi
b466(5): mov %rcx,0x8(%rsp)
b46b(5): mov %rax,0x10(%rsp)
b470(5): call 0xffff6990(%rip)
b475(3): test %rax,%rax
b478(3): mov %rax,%r9
b47b(5): mov 0x8(%rsp),%rcx
b480(2): jz 0xffffffd1(%rip)
b482(7): mov %rax,0xf8(%r15)
b489(5): mov 0x10(%rsp),%rax
b48e(7): mov 0xe8(%r15),%r8
b495(7): mov %rax,0xf0(%r15)
b49c(5): jmp 0xffffff47(%rip)

"re_string_context_at" :
b4b0(1): push %rbp
b4b1(1): push %rbx
b4b2(3): mov %rdi,%rbp
b4b5(4): sub $0x8,%rsp
b4b9(3): test %rsi,%rsi
b4bc(2): js 0x54(%rip)
b4be(4): cmp %rsi,0x58(%rdi)
b4c2(6): jz 0xa6(%rip)
b4c8(7): cmp $0x1,0x90(%rdi)
b4cf(2): jle 0x51(%rip)
b4d1(4): mov 0x10(%rdi),%rax
b4d5(2): jmp 0x15(%rip)
b4d7(9): nop 0x0(%rax,%rax,1)
b4e0(4): sub $0x1,%rsi
b4e4(4): cmp $0xffffffff,%rsi
b4e8(2): jz 0x28(%rip)
b4ea(3): mov 0x0(%rax,%rsi,4),%ebx
b4ed(3): cmp $0xff,%ebx
b4f0(2): jz 0xfffffff0(%rip)
b4f2(7): cmp $0x0,0x8e(%rbp)
b4f9(2): jnz 0x7f(%rip)
b4fb(2): xor %eax,%eax
b4fd(3): cmp $0xa,%ebx
b500(2): jz 0x4c(%rip)
b502(4): add $0x8,%rsp
b506(1): pop %rbx
b507(1): pop %rbp
b508(1): ret near (%rsp)
b509(7): nop 0x0(%rax)
b510(3): mov 0x70(%rbp),%eax
b513(4): add $0x8,%rsp
b517(1): pop %rbx
b518(1): pop %rbp
b519(1): ret near (%rsp)
b51a(6): nop 0x0(%rax,%rax,1)
b520(4): mov 0x8(%rdi),%rax
b524(7): mov 0x80(%rdi),%rcx
b52b(4): movzx 0x0(%rax,%rsi,1),%eax
b52f(3): mov %rax,%rdx
b532(4): sar $0x6,%rax
b536(4): mov 0x0(%rcx,%rax,8),%rcx
b53a(5): mov $0x1,%eax
b53f(4): bt %rdx,%rcx
b543(2): jb 0xffffffbf(%rip)
b545(2): xor %eax,%eax
b547(3): cmp $0xa,%dl
b54a(2): jnz 0xffffffb8(%rip)
b54c(2): xor %eax,%eax
b54e(7): cmp $0x0,0x8d(%rbp)
b555(3): setnz %al
b558(4): add $0x8,%rsp
b55c(2): add %eax,%eax
b55e(1): pop %rbx
b55f(1): pop %rbp
b560(1): ret near (%rsp)
b561(7): nop 0x0(%rax)
b568(3): and $0x2,%edx
b56b(3): cmp $0x1,%edx
b56e(2): sbb %eax,%eax
b570(3): and $0x2,%eax
b573(3): add $0x8,%eax
b576(2): jmp 0xffffff8c(%rip)
b578(2): mov %ebx,%edi
b57a(5): call 0xffff6816(%rip)
b57f(2): test %eax,%eax
b581(2): jnz 0xb(%rip)
b583(3): cmp $0x5f,%ebx
b586(6): jnz 0xffffff75(%rip)
b58c(5): mov $0x1,%eax
b591(5): jmp 0xffffff71(%rip)

"check_node_accept" :
b5a0(4): mov 0x8(%rdi),%rax
b5a4(4): movzx 0x0(%rax,%rdx,1),%ecx
b5a8(4): movzx 0x8(%rsi),%eax
b5ac(2): cmp $0x3,%al
b5ae(6): jz 0xba(%rip)
b5b4(6): jbe 0x9c(%rip)
b5ba(2): cmp $0x5,%al
b5bc(2): jz 0x14(%rip)
b5be(2): cmp $0x7,%al
b5c0(6): jnz 0xa0(%rip)
b5c6(2): xor %eax,%eax
b5c8(2): test %cl,%cl
b5ca(6): js 0x90(%rip)
b5d0(3): cmp $0xa,%cl
b5d3(6): jz 0xc5(%rip)
b5d9(2): test %cl,%cl
b5db(2): jnz 0x15(%rip)
b5dd(7): mov 0x98(%rdi),%rcx
b5e4(2): xor %eax,%eax
b5e6(7): test $0x80,0xd8(%rcx)
b5ed(2): jnz 0x6d(%rip)
b5ef(1): nop 
b5f0(1): push %rbx
b5f1(3): mov 0x8(%rsi),%ebx
b5f4(5): mov $0x1,%eax
b5f9(6): test $0x3ff00,%ebx
b5ff(2): jz 0x4d(%rip)
b601(3): mov %rdx,%rsi
b604(6): mov 0xa0(%rdi),%edx
b60a(3): shr $0x8,%ebx
b60d(5): call 0xfffffea3(%rip)
b612(2): mov %ebx,%ecx
b614(2): mov %eax,%edx
b616(5): and $0x3ff,%cx
b61b(3): test $0x4,%bl
b61e(2): jz 0x6a(%rip)
b620(2): xor %eax,%eax
b622(3): test $0x1,%dl
b625(2): jz 0x27(%rip)
b627(3): and $0x8,%ebx
b62a(2): jnz 0x22(%rip)
b62c(3): test $0x20,%cl
b62f(2): jz 0x9(%rip)
b631(2): xor %eax,%eax
b633(3): test $0x2,%dl
b636(2): jz 0x16(%rip)
b638(3): shr $0x3,%edx
b63b(5): mov $0x1,%eax
b640(3): and $0x1,%edx
b643(6): and $0x80,%ecx
b649(3): cmovne %edx,%eax
b64c(1): pop %rbx
b64d(1): ret near (%rsp)
b64e(2): nop 
b650(2): cmp $0x1,%al
b652(2): jnz 0xe(%rip)
b654(2): xor %eax,%eax
b656(2): cmp %cl,(%rsi)
b658(2): jz 0xffffff98(%rip)
b65a(2): REP ret near (%rsp)
b65c(4): nop 0x0(%rax)
b660(2): xor %eax,%eax
b662(1): ret near (%rsp)
b663(5): nop 0x0(%rax,%rax,1)
b668(3): mov (%rsi),%r8
b66b(3): movzx %cl,%eax
b66e(4): sar $0x6,%rax
b672(4): mov 0x0(%r8,%rax,8),%r8
b676(2): xor %eax,%eax
b678(4): bt %rcx,%r8
b67c(6): jb 0xffffff74(%rip)
b682(2): REP ret near (%rsp)
b684(4): nop 0x0(%rax)
b688(3): and $0x8,%ebx
b68b(2): jz 0xffffffa1(%rip)
b68d(2): test $0x1,%al
b68f(2): jz 0xffffff9d(%rip)
b691(2): xor %eax,%eax
b693(1): pop %rbx
b694(1): ret near (%rsp)
b695(3): nop (%rax)
b698(7): mov 0x98(%rdi),%rcx
b69f(2): xor %eax,%eax
b6a1(7): test $0x40,0xd8(%rcx)
b6a8(6): jnz 0xffffff48(%rip)
b6ae(2): REP ret near (%rsp)

"check_halt_state_context.isra.20" :
b6b0(2): push %r12
b6b2(3): mov %rdx,%r12
b6b5(1): push %rbp
b6b6(1): push %rbx
b6b7(6): mov 0xa0(%rdi),%edx
b6bd(3): mov %rsi,%rbx
b6c0(3): mov %rcx,%rsi
b6c3(3): mov %rdi,%rbp
b6c6(5): call 0xfffffdea(%rip)
b6cb(3): test %rbx,%rbx
b6ce(6): jle 0xaa(%rip)
b6d4(7): mov 0x98(%rbp),%rdx
b6db(3): mov %eax,%r11d
b6de(2): mov %eax,%ebp
b6e0(3): and $0x1,%eax
b6e3(4): mov (%r12),%r9
b6e7(2): xor %esi,%esi
b6e9(3): and $0x8,%ebp
b6ec(4): and $0x2,%r11d
b6f0(3): mov %eax,%r10d
b6f3(3): mov (%rdx),%r8
b6f6(2): jmp 0x13(%rip)
b6f8(8): nop 0x0(%rax,%rax,1)
b700(4): add $0x1,%rsi
b704(3): cmp %rbx,%rsi
b707(2): jz 0x71(%rip)
b709(4): mov 0x0(%r9,%rsi,8),%rax
b70d(3): mov %rax,%rdx
b710(4): shl/sal $0x4,%rdx
b714(3): add %r8,%rdx
b717(3): mov 0x8(%rdx),%ecx
b71a(3): shr $0x8,%ecx
b71d(2): mov %ecx,%edi
b71f(5): and $0x3ff,%di
b724(4): cmp $0x2,0x8(%rdx)
b728(2): jnz 0xffffffd8(%rip)
b72a(3): test %di,%di
b72d(2): jz 0x28(%rip)
b72f(3): test $0x4,%cl
b732(2): jz 0x2e(%rip)
b734(3): test %r10d,%r10d
b737(2): jz 0xffffffc9(%rip)
b739(3): and $0x8,%ecx
b73c(2): jnz 0xffffffc4(%rip)
b73e(4): test $0x20,%dil
b742(2): jz 0x7(%rip)
b744(3): test %r11d,%r11d
b747(2): jz 0xffffffb9(%rip)
b749(6): and $0x80,%edi
b74f(2): jz 0x6(%rip)
b751(2): test %ebp,%ebp
b753(2): jz 0xffffffad(%rip)
b755(1): pop %rbx
b756(1): pop %rbp
b757(2): pop %r12
b759(1): ret near (%rsp)
b75a(6): nop 0x0(%rax,%rax,1)
b760(3): and $0x8,%ecx
b763(2): jz 0xffffffdb(%rip)
b765(3): test %r10d,%r10d
b768(2): jnz 0xffffff98(%rip)
b76a(4): test $0x20,%dil
b76e(2): jz 0xffffffdb(%rip)
b770(2): jmp 0xffffffd4(%rip)
b772(6): nop 0x0(%rax,%rax,1)
b778(1): pop %rbx
b779(2): xor %eax,%eax
b77b(1): pop %rbp
b77c(2): pop %r12
b77e(1): ret near (%rsp)

"re_string_reconstruct" :
b780(2): push %r15
b782(2): push %r14
b784(3): mov %rsi,%r15
b787(2): push %r13
b789(2): push %r12
b78b(3): mov %edx,%r10d
b78e(1): push %rbp
b78f(1): push %rbx
b790(3): mov %rsi,%rbp
b793(3): mov %rdi,%rbx
b796(4): sub $0x48,%rsp
b79a(9): mov $0x28,%rax
b7a3(5): mov %rax,0x38(%rsp)
b7a8(2): xor %eax,%eax
b7aa(4): mov 0x28(%rdi),%rax
b7ae(3): sub %rax,%rbp
b7b1(3): cmp %rsi,%rax
b7b4(2): jle 0x62(%rip)
b7b6(7): cmp $0x1,0x90(%rdi)
b7bd(6): jnle 0x133(%rip)
b7c3(4): mov 0x50(%rbx),%rax
b7c7(8): mov $0x0,0x30(%rbx)
b7cf(3): mov %r15,%rbp
b7d2(8): mov $0x0,0x28(%rbx)
b7da(8): mov $0x0,0x38(%rbx)
b7e2(7): mov $0x0,0x8c(%rbx)
b7e9(4): mov %rax,0x58(%rbx)
b7ed(4): mov 0x60(%rbx),%rax
b7f1(4): mov %rax,0x68(%rbx)
b7f5(3): mov %r10d,%eax
b7f8(3): and $0x1,%eax
b7fb(3): cmp $0x1,%eax
b7fe(2): sbb %eax,%eax
b800(3): and $0x2,%eax
b803(3): add $0x4,%eax
b806(7): cmp $0x0,0x8b(%rbx)
b80d(3): mov %eax,0x70(%rbx)
b810(6): jz 0xd0(%rip)
b816(3): test %rbp,%rbp
b819(2): jz 0x65(%rip)
b81b(4): mov 0x38(%rbx),%rax
b81f(7): movzx 0x8c(%rbx),%edx
b826(4): mov 0x30(%rbx),%r8
b82a(3): cmp %rbp,%rax
b82d(6): jle 0x123(%rip)
b833(2): test %dl,%dl
b835(6): jnz 0x213(%rip)
b83b(4): lea 0xffffffff(%rbp),%rsi
b83f(3): mov %r10d,%edx
b842(3): mov %rbx,%rdi
b845(4): mov %r8,(%rsp)
b849(5): call 0xfffffc67(%rip)
b84e(4): mov (%rsp),%r8
b852(3): mov %eax,0x70(%rbx)
b855(3): sub %rbp,%r8
b858(7): cmp $0x1,0x90(%rbx)
b85f(6): jnle 0xa1(%rip)
b865(7): cmp $0x0,0x8b(%rbx)
b86c(6): jnz 0x3a4(%rip)
b872(4): sub %rbp,0x38(%rbx)
b876(4): mov %r8,0x30(%rbx)
b87a(4): add %rbp,0x8(%rbx)
b87e(4): mov 0x58(%rbx),%rax
b882(4): sub %rbp,0x68(%rbx)
b886(4): mov %r15,0x28(%rbx)
b88a(3): sub %rbp,%rax
b88d(7): cmp $0x1,0x90(%rbx)
b894(4): mov %rax,0x58(%rbx)
b898(6): jle 0xa0(%rip)
b89e(7): cmp $0x0,0x88(%rbx)
b8a5(3): mov %rbx,%rdi
b8a8(2): jz 0x80(%rip)
b8aa(5): call 0xffffcd46(%rip)
b8af(2): test %eax,%eax
b8b1(2): jnz 0xc(%rip)
b8b3(8): mov $0x0,0x48(%rbx)
b8bb(2): xor %eax,%eax
b8bd(5): mov 0x38(%rsp),%rcx
b8c2(9): xor $0x28,%rcx
b8cb(6): jnz 0x64f(%rip)
b8d1(4): add $0x48,%rsp
b8d5(1): pop %rbx
b8d6(1): pop %rbp
b8d7(2): pop %r12
b8d9(2): pop %r13
b8db(2): pop %r14
b8dd(2): pop %r15
b8df(1): ret near (%rsp)
b8e0(3): mov (%rbx),%rax
b8e3(4): mov %rax,0x8(%rbx)
b8e7(5): jmp 0xffffff2f(%rip)
b8ec(4): nop 0x0(%rax)
b8f0(8): mov $0x0,0x20(%rdi)
b8f8(5): jmp 0xfffffecb(%rip)
b8fd(3): nop (%rax)
b900(4): mov 0x10(%rbx),%rdi
b904(8): lea 0x0(,%r8,4),%rdx
b90c(4): lea 0x0(%rdi,%rbp,4),%rsi
b910(5): call 0xffff6540(%rip)
b915(4): mov 0x30(%rbx),%r8
b919(3): sub %rbp,%r8
b91c(5): jmp 0xffffff49(%rip)
b921(7): nop 0x0(%rax)
b928(5): call 0xffffcaf8(%rip)
b92d(5): jmp 0xffffff86(%rip)
b932(6): nop 0x0(%rax,%rax,1)
b938(7): cmp $0x0,0x8b(%rbx)
b93f(6): jnz 0x3b1(%rip)
b945(4): mov %rax,0x30(%rbx)
b949(5): jmp 0xffffff6a(%rip)
b94e(2): nop 
b950(2): test %dl,%dl
b952(6): jnz 0x4ab(%rip)
b958(7): movsxd 0x90(%rbx),%rdx
b95f(8): mov $0x0,0x30(%rbx)
b967(4): mov 0x28(%rbx),%r11
b96b(3): cmp $0x1,%edx
b96e(6): jle 0x3ea(%rip)
b974(7): cmp $0x0,0x89(%rbx)
b97b(6): jnz 0x2bd(%rip)
b981(4): lea 0x0(%r11,%rax,1),%r14
b985(3): cmp %r14,%r15
b988(6): jle 0x447(%rip)
b98e(4): lea 0x20(%rbx),%rax
b992(5): lea 0x24(%rsp),%r13
b997(5): mov %rax,0x10(%rsp)
b99c(4): nop 0x0(%rax)
b9a0(4): mov 0x50(%rbx),%r12
b9a4(3): mov (%rbx),%rsi
b9a7(3): mov %r13,%rdi
b9aa(4): mov 0x20(%rbx),%rax
b9ae(5): mov 0x10(%rsp),%rcx
b9b3(5): mov %r10d,0xc(%rsp)
b9b8(4): mov %r8,(%rsp)
b9bc(3): sub %r14,%r12
b9bf(3): add %r14,%rsi
b9c2(3): mov %r12,%rdx
b9c5(5): mov %rax,0x18(%rsp)
b9ca(5): call 0xffffc166(%rip)
b9cf(4): lea 0xffffffff(%rax),%rcx
b9d3(4): mov 0x24(%rsp),%edx
b9d7(4): mov (%rsp),%r8
b9db(5): mov 0xc(%rsp),%r10d
b9e0(4): cmp $0xfffffffc,%rcx
b9e4(6): jnbe 0x441(%rip)
b9ea(3): add %rax,%r14
b9ed(3): cmp %r14,%r15
b9f0(2): jnle 0xffffffb0(%rip)
b9f2(3): sub %r15,%r14
b9f5(3): cmp $0xff,%edx
b9f8(3): mov %r14,%r12
b9fb(4): mov %r14,0x30(%rbx)
b9ff(6): jz 0x3da(%rip)
ba05(7): cmp $0x0,0x8e(%rbx)
ba0c(6): jnz 0x46d(%rip)
ba12(2): xor %eax,%eax
ba14(3): cmp $0xa,%edx
ba17(2): jnz 0x10(%rip)
ba19(2): xor %eax,%eax
ba1b(7): cmp $0x0,0x8d(%rbx)
ba22(3): setnz %al
ba25(2): add %eax,%eax
ba27(3): mov %eax,0x70(%rbx)
ba2a(4): cmp $0x0,%r12
ba2e(6): jnz 0x41c(%rip)
ba34(7): movzx 0x8b(%rbx),%eax
ba3b(4): mov %r12,0x38(%rbx)
ba3f(5): jmp 0x1bd(%rip)
ba44(4): nop 0x0(%rax)
ba48(4): mov 0x18(%rbx),%r14
ba4c(3): mov %r8,%rcx
ba4f(2): xor %esi,%esi
ba51(2): jmp 0x12(%rip)
ba53(5): nop 0x0(%rax,%rax,1)
ba58(2): jnl 0x3b(%rip)
ba5a(4): lea 0x1(%rax),%rsi
ba5e(3): cmp %rcx,%rsi
ba61(2): jnl 0x27(%rip)
ba63(4): lea 0x0(%rsi,%rcx,1),%rdx
ba67(3): mov %rdx,%rax
ba6a(4): shr $0x3f,%rax
ba6e(3): add %rdx,%rax
ba71(3): sar $0x1,%rax
ba74(4): mov 0x0(%r14,%rax,8),%rdx
ba78(3): mov %rax,%r12
ba7b(3): cmp %rbp,%rdx
ba7e(2): jle 0xffffffda(%rip)
ba80(3): mov %rax,%rcx
ba83(2): jmp 0xffffffdb(%rip)
ba85(3): nop (%rax)
ba88(4): lea 0x1(%rax),%r12
ba8c(3): cmp %rbp,%rdx
ba8f(4): cmovnl %rax,%r12
ba93(5): lea 0xffffffff(%r12),%r13
ba98(3): mov %r10d,%edx
ba9b(3): mov %rbx,%rdi
ba9e(4): mov %r8,(%rsp)
baa2(3): mov %r13,%rsi
baa5(5): call 0xfffffa0b(%rip)
baaa(3): cmp %r12,%rbp
baad(3): mov %eax,0x70(%rbx)
bab0(4): mov (%rsp),%r8
bab4(6): jnz 0x84(%rip)
baba(3): cmp %r8,%rbp
babd(2): jnl 0x7b(%rip)
babf(4): cmp %rbp,0x0(%r14,%r12,8)
bac3(2): jnz 0x75(%rip)
bac5(4): mov 0x10(%rbx),%rdi
bac9(3): sub %rbp,%r8
bacc(8): lea 0x0(,%r8,4),%rdx
bad4(4): lea 0x0(%rdi,%rbp,4),%rsi
bad8(5): call 0xffff6378(%rip)
badd(4): mov 0x8(%rbx),%rdi
bae1(4): mov 0x30(%rbx),%rdx
bae5(4): lea 0x0(%rdi,%rbp,1),%rsi
bae9(3): sub %rbp,%rdx
baec(5): call 0xffff6364(%rip)
baf1(4): mov 0x30(%rbx),%rax
baf5(4): sub %rbp,0x38(%rbx)
baf9(3): sub %rbp,%rax
bafc(3): test %rax,%rax
baff(4): mov %rax,0x30(%rbx)
bb03(2): jle 0x25(%rip)
bb05(4): mov 0x18(%rbx),%rcx
bb09(2): xor %eax,%eax
bb0b(4): lea 0x0(%rcx,%rbp,8),%rsi
bb0f(1): nop 
bb10(4): mov 0x0(%rsi,%rax,8),%rdx
bb14(3): sub %rbp,%rdx
bb17(4): mov %rdx,0x0(%rcx,%rax,8)
bb1b(4): add $0x1,%rax
bb1f(4): cmp %rax,0x30(%rbx)
bb23(2): jnle 0xffffffed(%rip)
bb25(3): nop (%rax)
bb28(7): movzx 0x8b(%rbx),%eax
bb2f(5): jmp 0xcd(%rip)
bb34(4): nop 0x0(%rax)
bb38(4): mov 0x50(%rbx),%rax
bb3c(7): mov $0x0,0x8c(%rbx)
bb43(3): add %rbp,%rax
bb46(3): sub %r15,%rax
bb49(4): mov %rax,0x58(%rbx)
bb4d(4): mov 0x60(%rbx),%rax
bb51(3): add %rbp,%rax
bb54(3): sub %r15,%rax
bb57(3): test %r12,%r12
bb5a(4): mov %rax,0x68(%rbx)
bb5e(2): jle 0x25(%rip)
bb60(5): cmp %rbp,0xfffffff8(%r14,%r12,8)
bb65(2): jz 0x16(%rip)
bb67(2): jmp 0x1c(%rip)
bb69(7): nop 0x0(%rax)
bb70(5): cmp %rbp,0xfffffff8(%r14,%r13,8)
bb75(2): jnz 0xe(%rip)
bb77(4): sub $0x1,%r13
bb7b(3): test %r13,%r13
bb7e(3): mov %r13,%r12
bb81(2): jnz 0xffffffef(%rip)
bb83(3): cmp %r8,%r12
bb86(6): jnl 0x232(%rip)
bb8c(4): mov 0x10(%rbx),%rax
bb90(2): jmp 0x15(%rip)
bb92(6): nop 0x0(%rax,%rax,1)
bb98(4): add $0x1,%r12
bb9c(3): cmp %r8,%r12
bb9f(6): jz 0x221(%rip)
bba5(5): cmp $0xff,0x0(%rax,%r12,4)
bbaa(2): jz 0xffffffee(%rip)
bbac(4): mov 0x0(%r14,%r12,8),%rdx
bbb0(3): sub %rbp,%rdx
bbb3(4): cmp $0x0,%rdx
bbb7(4): mov %rdx,0x30(%rbx)
bbbb(2): jz 0x36(%rip)
bbbd(2): jle 0x22(%rip)
bbbf(4): mov 0x10(%rbx),%rax
bbc3(4): lea 0x0(%rax,%rdx,4),%rcx
bbc7(9): nop 0x0(%rax,%rax,1)
bbd0(6): mov $0xffffffff,(%rax)
bbd6(4): add $0x4,%rax
bbda(3): cmp %rax,%rcx
bbdd(2): jnz 0xfffffff3(%rip)
bbdf(4): mov 0x8(%rbx),%rdi
bbe3(5): mov $0xff,%esi
bbe8(5): call 0xffff60c8(%rip)
bbed(4): mov 0x30(%rbx),%rdx
bbf1(7): movzx 0x8b(%rbx),%eax
bbf8(4): mov %rdx,0x38(%rbx)
bbfc(2): test %al,%al
bbfe(6): jz 0xfffffc7c(%rip)
bc04(5): jmp 0xfffffc7a(%rip)
bc09(7): nop 0x0(%rax)
bc10(4): mov 0x8(%rbx),%rdi
bc14(3): mov %r8,%rdx
bc17(4): lea 0x0(%rdi,%rbp,1),%rsi
bc1b(5): call 0xffff6235(%rip)
bc20(7): movzx 0x8b(%rbx),%eax
bc27(4): sub %rbp,0x30(%rbx)
bc2b(4): sub %rbp,0x38(%rbx)
bc2f(2): jmp 0xffffffcd(%rip)
bc31(7): nop 0x0(%rax)
bc38(3): mov (%rbx),%rcx
bc3b(3): mov %rbp,%rdi
bc3e(3): sub %rdx,%rdi
bc41(3): mov %rdi,%rdx
bc44(4): lea 0x0(%rcx,%r11,1),%r12
bc48(3): add %r12,%rdx
bc4b(5): lea 0xffffffff(%r12,%rbp,1),%rsi
bc50(3): cmp %rdx,%rcx
bc53(4): cmovnae %rdx,%rcx
bc57(3): cmp %rsi,%rcx
bc5a(2): jbe 0x1b(%rip)
bc5c(5): jmp 0xfffffd25(%rip)
bc61(7): nop 0x0(%rax)
bc68(4): sub $0x1,%rsi
bc6c(3): cmp %rsi,%rcx
bc6f(6): jnbe 0xfffffd12(%rip)
bc75(3): movzx (%rsi),%edx
bc78(3): and $0xc0,%edx
bc7b(3): cmp $0x80,%dl
bc7e(2): jz 0xffffffea(%rip)
bc80(4): mov 0x58(%rbx),%rdx
bc84(4): mov 0x78(%rbx),%rcx
bc88(3): mov %rsi,%r14
bc8b(3): add %r12,%rdx
bc8e(3): sub %rsi,%rdx
bc91(3): test %rcx,%rcx
bc94(6): jnz 0x24e(%rip)
bc9a(5): lea 0x24(%rsp),%r13
bc9f(3): add %rbp,%r12
bca2(5): lea 0x28(%rsp),%rcx
bca7(3): sub %r14,%r12
bcaa(5): mov %r10d,0xc(%rsp)
bcaf(4): mov %r8,(%rsp)
bcb3(3): mov %r13,%rdi
bcb6(9): mov $0x0,0x28(%rsp)
bcbf(5): call 0xffffbe71(%rip)
bcc4(3): cmp %rax,%r12
bcc7(4): mov (%rsp),%r8
bccb(5): mov 0xc(%rsp),%r10d
bcd0(2): jnbe 0xc(%rip)
bcd2(4): cmp $0xfffffffd,%rax
bcd6(6): jbe 0x1cb(%rip)
bcdc(4): mov 0x28(%rbx),%r11
bce0(4): mov 0x38(%rbx),%rax
bce4(5): jmp 0xfffffc9d(%rip)
bce9(7): nop 0x0(%rax)
bcf0(7): cmp $0x0,0x88(%rbx)
bcf7(6): jnz 0xf9(%rip)
bcfd(4): mov 0x78(%rbx),%rcx
bd01(3): test %rcx,%rcx
bd04(6): jz 0xfffffbaf(%rip)
bd0a(4): cmp %rax,0x40(%rbx)
bd0e(4): mov 0x30(%rbx),%rdx
bd12(5): cmovng 0x40(%rbx),%rax
bd17(3): cmp %rdx,%rax
bd1a(2): jnle 0xe(%rip)
bd1c(2): jmp 0x2c(%rip)
bd1e(2): nop 
bd20(4): mov 0x28(%rbx),%r15
bd24(4): mov 0x78(%rbx),%rcx
bd28(3): mov (%rbx),%rsi
bd2b(3): add %rdx,%rsi
bd2e(5): movzx 0x0(%rsi,%r15,1),%esi
bd33(4): movzx 0x0(%rcx,%rsi,1),%esi
bd37(4): mov 0x8(%rbx),%rcx
bd3b(4): mov %sil,0x0(%rcx,%rdx,1)
bd3f(4): add $0x1,%rdx
bd43(3): cmp %rdx,%rax
bd46(2): jnz 0xffffffda(%rip)
bd48(4): mov %rdx,0x30(%rbx)
bd4c(4): mov %rdx,0x38(%rbx)
bd50(5): jmp 0xfffffb63(%rip)
bd55(3): nop (%rax)
bd58(3): mov (%rbx),%rax
bd5b(4): mov 0x78(%rbx),%rdx
bd5f(3): add %rbp,%rax
bd62(3): test %rdx,%rdx
bd65(6): movzx 0xffffffff(%r11,%rax,1),%eax
bd6b(8): mov $0x0,0x38(%rbx)
bd73(2): jz 0x6(%rip)
bd75(4): movzx 0x0(%rdx,%rax,1),%eax
bd79(7): mov 0x80(%rbx),%rcx
bd80(3): movzx %al,%edx
bd83(4): sar $0x6,%rdx
bd87(4): mov 0x0(%rcx,%rdx,8),%rcx
bd8b(5): mov $0x1,%edx
bd90(4): bt %rax,%rcx
bd94(2): jb 0x1c(%rip)
bd96(2): xor %edx,%edx
bd98(2): cmp $0xa,%al
bd9a(2): jnz 0x16(%rip)
bd9c(2): xor %edx,%edx
bd9e(7): cmp $0x0,0x8d(%rbx)
bda5(3): setnz %dl
bda8(2): add %edx,%edx
bdaa(6): nop 0x0(%rax,%rax,1)
bdb0(3): mov %edx,0x70(%rbx)
bdb3(5): jmp 0xfffffd75(%rip)
bdb8(6): jnz 0xfffffdf4(%rip)
bdbe(2): nop 
bdc0(8): mov $0x0,0x30(%rbx)
bdc8(2): xor %edx,%edx
bdca(5): jmp 0xfffffe27(%rip)
bdcf(3): sub %r15,%r14
bdd2(3): mov %r14,%r12
bdd5(4): mov %r14,0x30(%rbx)
bdd9(4): lea 0xffffffff(%r8),%rsi
bddd(3): mov %r10d,%edx
bde0(3): mov %rbx,%rdi
bde3(5): call 0xfffff6cd(%rip)
bde8(3): mov %eax,0x70(%rbx)
bdeb(5): jmp 0xfffffc3f(%rip)
bdf0(3): mov %rbx,%rdi
bdf3(5): call 0xffffc5bd(%rip)
bdf8(5): jmp 0xfffffabb(%rip)
bdfd(4): mov 0x50(%rbx),%rdx
be01(7): mov $0x0,0x8c(%rbx)
be08(3): add %rbp,%rdx
be0b(3): sub %r15,%rdx
be0e(4): mov %rdx,0x58(%rbx)
be12(4): mov 0x60(%rbx),%rdx
be16(3): add %rbp,%rdx
be19(3): sub %r15,%rdx
be1c(4): mov %rdx,0x68(%rbx)
be20(5): jmp 0xfffffb38(%rip)
be25(3): test %rax,%rax
be28(2): jz 0x75(%rip)
be2a(3): test %r12,%r12
be2d(2): jz 0x70(%rip)
be2f(3): mov (%rbx),%rax
be32(5): movzx 0x0(%rax,%r14,1),%edx
be37(5): mov 0x18(%rsp),%rax
be3c(4): mov %rax,0x20(%rbx)
be40(5): mov $0x1,%eax
be45(5): jmp 0xfffffba5(%rip)
be4a(2): jle 0x1d(%rip)
be4c(4): mov 0x10(%rbx),%rax
be50(4): lea 0x0(%rax,%r12,4),%rdx
be54(4): nop 0x0(%rax)
be58(6): mov $0xffffffff,(%rax)
be5e(4): add $0x4,%rax
be62(3): cmp %rax,%rdx
be65(2): jnz 0xfffffff3(%rip)
be67(7): cmp $0x0,0x8b(%rbx)
be6e(2): jnz 0x5a(%rip)
be70(4): mov %r12,0x38(%rbx)
be74(5): jmp 0xfffffa06(%rip)
be79(2): mov %edx,%edi
be7b(3): mov %edx,(%rsp)
be7e(5): call 0xffff5f12(%rip)
be83(2): test %eax,%eax
be85(2): jnz 0xe(%rip)
be87(3): mov (%rsp),%edx
be8a(3): cmp $0x5f,%edx
be8d(6): jnz 0xfffffb85(%rip)
be93(5): mov $0x1,%eax
be98(5): jmp 0xfffffb8f(%rip)
be9d(2): xor %edx,%edx
be9f(2): jmp 0xffffff98(%rip)
bea1(4): mov 0x24(%rsp),%edx
bea5(3): sub %r12,%rax
bea8(8): mov $0x0,0x20(%rbx)
beb0(3): mov %rax,%r12
beb3(4): mov %rax,0x30(%rbx)
beb7(3): cmp $0xff,%edx
beba(6): jnz 0xfffffb4b(%rip)
bec0(5): jmp 0xfffffe1c(%rip)
bec5(3): nop (%rax)
bec8(4): mov 0x8(%rbx),%rdi
becc(3): mov %r12,%rdx
becf(5): mov $0xff,%esi
bed4(5): call 0xffff5ddc(%rip)
bed9(4): mov 0x30(%rbx),%r12
bedd(5): jmp 0xfffffb57(%rip)
bee2(4): cmp $0x6,%rdx
bee6(5): mov $0x6,%edi
beeb(5): lea 0x32(%rsp),%r11
bef0(4): cmovng %rdx,%rdi
bef4(3): sub $0x1,%edi
bef7(2): test %edi,%edi
bef9(3): movsxd %edi,%rax
befc(2): js 0x16(%rip)
befe(4): movzx 0x0(%rsi,%rax,1),%edi
bf02(4): movzx 0x0(%rcx,%rdi,1),%edi
bf06(4): mov %dil,0x0(%r11,%rax,1)
bf0a(4): sub $0x1,%rax
bf0e(2): test %eax,%eax
bf10(2): jns 0xffffffee(%rip)
bf12(3): mov %r11,%rsi
bf15(5): jmp 0xfffffd85(%rip)
bf1a(5): call 0xffff5d06(%rip)

"sub_epsilon_src_nodes" :
bf20(2): push %r15
bf22(2): push %r14
bf24(3): mov %rdx,%r14
bf27(2): push %r13
bf29(2): push %r12
bf2b(4): lea 0x0(%rsi,%rsi,2),%rdx
bf2f(1): push %rbp
bf30(1): push %rbx
bf31(4): pxor %xmm0,%xmm0
bf35(4): sub $0x48,%rsp
bf39(9): mov $0x28,%rax
bf42(5): mov %rax,0x38(%rsp)
bf47(2): xor %eax,%eax
bf49(4): mov 0x38(%rdi),%rax
bf4d(9): mov $0x0,0x30(%rsp)
bf56(5): movaps %xmm0,0x20(%rsp)
bf5b(5): mov %rcx,0x10(%rsp)
bf60(4): lea 0x0(%rax,%rdx,8),%rbp
bf64(4): mov 0x8(%rbp),%r10
bf68(3): test %r10,%r10
bf6b(6): jle 0x1e7(%rip)
bf71(5): lea 0x20(%rsp),%rax
bf76(3): mov %rdi,%r12
bf79(3): mov %rsi,%r13
bf7c(2): xor %ebx,%ebx
bf7e(5): mov %rax,0x18(%rsp)
bf83(2): jmp 0x5a(%rip)
bf85(3): nop (%rax)
bf88(3): test %rax,%rax
bf8b(6): jnz 0xdd(%rip)
bf91(4): mov 0x8(%r14),%rdi
bf95(4): lea 0x10(%r14),%rsi
bf99(3): mov %r8,%rdx
bf9c(5): call 0xffffd734(%rip)
bfa1(3): test %rax,%rax
bfa4(6): jz 0xc4(%rip)
bfaa(5): mov 0x38(%r12),%rdx
bfaf(5): mov 0x10(%rsp),%rsi
bfb4(5): mov 0x18(%rsp),%rdi
bfb9(3): add %r9,%rdx
bfbc(5): call 0xffffe224(%rip)
bfc1(2): test %eax,%eax
bfc3(6): jnz 0x17d(%rip)
bfc9(4): mov 0x8(%rbp),%r10
bfcd(3): nop (%rax)
bfd0(4): add $0x1,%rbx
bfd4(3): cmp %rbx,%r10
bfd7(6): jle 0xd9(%rip)
bfdd(4): mov 0x10(%rbp),%rax
bfe1(4): mov 0x0(%rax,%rbx,8),%rax
bfe5(3): cmp %rax,%r13
bfe8(2): jz 0xffffffe8(%rip)
bfea(3): mov %rax,%rdx
bfed(4): shl/sal $0x4,%rdx
bff1(4): add (%r12),%rdx
bff5(4): test $0x8,0x8(%rdx)
bff9(2): jz 0xffffffd7(%rip)
bffb(4): lea 0x0(%rax,%rax,2),%r9
bfff(5): mov 0x28(%r12),%rcx
c004(4): lea 0x10(%rbp),%r11
c008(3): mov %r10,%rdi
c00b(4): shl/sal $0x3,%r9
c00f(3): mov %r11,%rsi
c012(3): add %r9,%rcx
c015(4): mov 0x10(%rcx),%r15
c019(5): mov %rcx,0x8(%rsp)
c01e(3): mov (%r15),%r8
c021(3): mov %r8,%rdx
c024(4): mov %r8,(%rsp)
c028(5): call 0xffffd6a8(%rip)
c02d(5): mov 0x8(%rsp),%rcx
c032(4): mov (%rsp),%r8
c036(5): cmp $0x1,0x8(%rcx)
c03b(6): jnle 0xffffff4d(%rip)
c041(3): test %rax,%rax
c044(2): jnz 0xffffff8c(%rip)
c046(4): mov 0x8(%r14),%rdi
c04a(4): lea 0x10(%r14),%rsi
c04e(3): mov %r8,%rdx
c051(5): call 0xffffd67f(%rip)
c056(3): test %rax,%rax
c059(6): jnz 0xffffff51(%rip)
c05f(5): jmp 0xffffff71(%rip)
c064(4): nop 0x0(%rax)
c068(4): mov 0x8(%r15),%r15
c06c(3): test %r15,%r15
c06f(6): jle 0xffffff61(%rip)
c075(3): mov %r15,%rdx
c078(3): mov %r11,%rsi
c07b(3): mov %r10,%rdi
c07e(5): call 0xffffd652(%rip)
c083(3): test %rax,%rax
c086(6): jnz 0xffffff4a(%rip)
c08c(4): mov 0x8(%r14),%rdi
c090(4): lea 0x10(%r14),%rsi
c094(5): call 0xffffd63c(%rip)
c099(3): test %rax,%rax
c09c(6): jz 0xffffff34(%rip)
c0a2(5): jmp 0xffffff08(%rip)
c0a7(9): nop 0x0(%rax,%rax,1)
c0b0(3): xor %r9d,%r9d
c0b3(3): test %r10,%r10
c0b6(5): lea 0x30(%rsp),%r11
c0bb(2): jle 0x51(%rip)
c0bd(3): nop (%rax)
c0c0(4): mov 0x10(%rbp),%rax
c0c4(5): mov 0x28(%rsp),%rdi
c0c9(3): mov %r11,%rsi
c0cc(4): mov 0x0(%rax,%r9,8),%r10
c0d0(3): mov %r10,%rdx
c0d3(5): call 0xffffd5fd(%rip)
c0d8(3): test %rax,%rax
c0db(2): jnz 0x27(%rip)
c0dd(4): lea 0x10(%r14),%rbx
c0e1(4): mov 0x8(%r14),%rdi
c0e5(3): mov %rbx,%rsi
c0e8(5): call 0xffffd5e8(%rip)
c0ed(4): sub $0x1,%rax
c0f1(3): mov %rax,%rdx
c0f4(2): js 0xe(%rip)
c0f6(4): lea 0x8(%r14),%rdi
c0fa(3): mov %rbx,%rsi
c0fd(5): call 0xffffd753(%rip)
c102(4): add $0x1,%r9
c106(4): cmp %r9,0x8(%rbp)
c10a(2): jnle 0xffffffb6(%rip)
c10c(5): mov 0x30(%rsp),%rdi
c111(5): call 0xffff59ef(%rip)
c116(2): xor %eax,%eax
c118(5): mov 0x38(%rsp),%rsi
c11d(9): xor $0x28,%rsi
c126(2): jnz 0x30(%rip)
c128(4): add $0x48,%rsp
c12c(1): pop %rbx
c12d(1): pop %rbp
c12e(2): pop %r12
c130(2): pop %r13
c132(2): pop %r14
c134(2): pop %r15
c136(1): ret near (%rsp)
c137(9): nop 0x0(%rax,%rax,1)
c140(5): mov 0x30(%rsp),%rdi
c145(3): mov %eax,(%rsp)
c148(5): call 0xffff59b8(%rip)
c14d(3): mov (%rsp),%eax
c150(2): jmp 0xffffffc8(%rip)
c152(2): xor %edi,%edi
c154(2): jmp 0xffffffbd(%rip)
c156(5): call 0xffff5aca(%rip)

"build_trtable" :
c160(2): push %r15
c162(2): push %r14
c164(3): mov %rdi,%r15
c167(2): push %r13
c169(2): push %r12
c16b(5): mov $0x3800,%edi
c170(1): push %rbp
c171(1): push %rbx
c172(7): sub $0x108,%rsp
c179(9): mov $0x28,%rax
c182(8): mov %rax,0xf8(%rsp)
c18a(2): xor %eax,%eax
c18c(5): mov %rsi,0x8(%rsp)
c191(5): call 0xffff5c0f(%rip)
c196(3): test %rax,%rax
c199(5): mov %rax,0x18(%rsp)
c19e(6): jz 0x3d2(%rip)
c1a4(5): mov 0x18(%rsp),%rax
c1a9(4): pxor %xmm0,%xmm0
c1ad(7): lea 0x1800(%rax),%rbx
c1b4(5): mov 0x8(%rsp),%rax
c1b9(8): movaps %xmm0,0x90(%rsp)
c1c1(5): mov %rbx,0x40(%rsp)
c1c6(8): movaps %xmm0,0xa0(%rsp)
c1ce(5): cmp $0x0,0x10(%rax)
c1d3(8): mov $0x0,0x58(%rax)
c1db(8): mov $0x0,0x60(%rax)
c1e3(6): jle 0xa77(%rip)
c1e9(5): mov %r15,0x30(%rsp)
c1ee(2): xor %ebp,%ebp
c1f0(9): mov $0x0,0x10(%rsp)
c1f9(3): mov %rbx,%r15
c1fc(5): mov 0x10(%rsp),%rbx
c201(8): lea 0x0(,%rbx,8),%rax
c209(5): mov %rax,0x20(%rsp)
c20e(5): mov 0x8(%rsp),%rax
c213(4): mov 0x18(%rax),%rax
c217(4): mov 0x0(%rax,%rbx,8),%r13
c21b(5): mov 0x30(%rsp),%rax
c220(4): shl/sal $0x4,%r13
c224(3): add (%rax),%r13
c227(5): movzx 0x8(%r13),%r14d
c22c(4): mov 0x8(%r13),%eax
c230(3): shr $0x8,%eax
c233(4): and $0x3ff,%ax
c237(4): cmp $0x1,%r14d
c23b(6): jz 0x365(%rip)
c241(4): cmp $0x3,%r14d
c245(6): jz 0x7cb(%rip)
c24b(4): cmp $0x5,%r14d
c24f(6): jz 0x681(%rip)
c255(4): cmp $0x7,%r14d
c259(6): jz 0x7e0(%rip)
c25f(5): mov 0x8(%rsp),%rbx
c264(6): add $0x1,0x10(%rsp)
c26a(5): mov 0x10(%rsp),%rax
c26f(4): cmp 0x10(%rbx),%rax
c273(2): jl 0xffffff89(%rip)
c275(3): test %rbp,%rbp
c278(5): mov 0x30(%rsp),%r15
c27d(6): jle 0xa5c(%rip)
c283(4): lea 0x1(%rbp),%rbx
c287(9): mov $0x0,0x78(%rsp)
c290(5): mov %rbx,0x70(%rsp)
c295(4): shl/sal $0x3,%rbx
c299(3): mov %rbx,%rdi
c29c(5): call 0xffff5b04(%rip)
c2a1(3): test %rax,%rax
c2a4(3): mov %rax,%r12
c2a7(8): mov %rax,0x80(%rsp)
c2af(6): jz 0x800(%rip)
c2b5(a): mov $0x768614336404564053,%rax
c2bf(8): mov $0x0,0x6c(%rsp)
c2c7(3): cmp %rax,%rbp
c2ca(6): jnle 0x7e5(%rip)
c2d0(5): lea 0x0(%rbp,%rbp,2),%rax
c2d5(4): shl/sal $0x3,%rax
c2d9(3): mov %rax,%rdi
c2dc(5): mov %rax,0x58(%rsp)
c2e1(5): call 0xffff5abf(%rip)
c2e6(3): test %rax,%rax
c2e9(5): mov %rax,0x10(%rsp)
c2ee(6): jz 0x7c1(%rip)
c2f4(5): mov 0x10(%rsp),%rax
c2f9(4): sub $0x8,%rbx
c2fd(5): mov 0x40(%rsp),%r12
c302(4): pxor %xmm0,%xmm0
c306(5): lea 0x70(%rsp),%r14
c30b(5): mov %rbp,0x20(%rsp)
c310(5): mov $0x0,0x4f(%rsp)
c315(3): mov %r15,%rbp
c318(3): add %rbx,%rax
c31b(5): mov %r12,0x50(%rsp)
c320(3): add %rax,%rbx
c323(5): mov %rax,0x30(%rsp)
c328(5): mov 0x18(%rsp),%rax
c32d(8): movaps %xmm0,0xd0(%rsp)
c335(5): mov %rbx,0x38(%rsp)
c33a(2): xor %ebx,%ebx
c33c(4): lea 0x8(%rax),%r13
c340(5): lea 0x6c(%rsp),%rax
c345(8): movaps %xmm0,0xe0(%rsp)
c34d(5): mov %rax,0x28(%rsp)
c352(9): mov $0x0,0x78(%rsp)
c35b(5): cmp $0x0,0x0(%r13)
c360(2): jle 0x48(%rip)
c362(3): xor %r15d,%r15d
c365(3): nop (%rax)
c368(4): mov 0x8(%r13),%rax
c36c(4): mov 0x0(%rax,%r15,8),%rdx
c370(4): mov 0x18(%rbp),%rax
c374(4): mov 0x0(%rax,%rdx,8),%rax
c378(4): cmp $0xffffffff,%rax
c37c(2): jz 0x22(%rip)
c37e(4): lea 0x0(%rax,%rax,2),%rdx
c382(4): mov 0x30(%rbp),%rax
c386(3): mov %r14,%rdi
c389(4): lea 0x0(%rax,%rdx,8),%rsi
c38d(5): call 0xffffd863(%rip)
c392(2): test %eax,%eax
c394(4): mov %eax,0x6c(%rsp)
c398(6): jnz 0x700(%rip)
c39e(4): add $0x1,%r15
c3a2(4): cmp %r15,0x0(%r13)
c3a6(2): jnle 0xffffffc2(%rip)
c3a8(5): mov 0x28(%rsp),%rdi
c3ad(2): xor %ecx,%ecx
c3af(3): mov %rbp,%rsi
c3b2(3): mov %r14,%rdx
c3b5(5): call 0xffffe66b(%rip)
c3ba(5): mov 0x10(%rsp),%rsi
c3bf(3): test %rax,%rax
c3c2(4): mov %rax,0x0(%rsi,%rbx,8)
c3c6(6): jz 0x7b2(%rip)
c3cc(4): cmp $0x0,0x68(%rax)
c3d0(6): js 0x720(%rip)
c3d6(5): mov 0x30(%rsp),%rdi
c3db(5): mov 0x38(%rsp),%rsi
c3e0(4): mov %rax,0x0(%rdi,%rbx,8)
c3e4(5): mov 0x10(%rsp),%rax
c3e9(4): mov 0x0(%rax,%rbx,8),%rax
c3ed(4): mov %rax,0x0(%rsi,%rbx,8)
c3f1(8): lea 0xd0(%rsp),%rdx
c3f9(2): xor %eax,%eax
c3fb(4): mov 0x0(%rdx,%rax,1),%rcx
c3ff(4): or 0x0(%r12,%rax,1),%rcx
c403(4): mov %rcx,0x0(%rdx,%rax,1)
c407(4): add $0x8,%rax
c40b(4): cmp $0x20,%rax
c40f(2): jnz 0xffffffec(%rip)
c411(4): add $0x1,%rbx
c415(4): add $0x18,%r13
c419(4): add $0x20,%r12
c41d(5): cmp 0x20(%rsp),%rbx
c422(6): jnz 0xffffff30(%rip)
c428(5): cmp $0x0,0x4f(%rsp)
c42d(3): mov %rbp,%r15
c430(5): mov 0x20(%rsp),%rbp
c435(5): mov %rdx,0x20(%rsp)
c43a(6): jnz 0x74f(%rip)
c440(5): mov $0x100,%esi
c445(5): mov $0x8,%edi
c44a(5): call 0xffff58e6(%rip)
c44f(3): mov %rax,%r11
c452(5): mov 0x8(%rsp),%rax
c457(3): test %r11,%r11
c45a(4): mov %r11,0x58(%rax)
c45e(6): jz 0x63f(%rip)
c464(5): mov 0x40(%rsp),%rbx
c469(5): mov 0x10(%rsp),%r12
c46e(3): xor %r9d,%r9d
c471(5): mov 0x30(%rsp),%r13
c476(5): mov 0x20(%rsp),%rdx
c47b(4): add $0x20,%rbx
c47f(4): mov 0x0(%rdx,%r9,1),%rax
c483(3): test %rax,%rax
c486(2): jz 0x2e(%rip)
c488(3): mov %r9,%rsi
c48b(5): mov $0x1,%ecx
c490(4): shl/sal $0x6,%rsi
c494(3): add %r11,%rsi
c497(9): nop 0x0(%rax,%rax,1)
c4a0(2): test $0x1,%al
c4a2(6): jnz 0x766(%rip)
c4a8(3): add %rcx,%rcx
c4ab(4): add $0x8,%rsi
c4af(3): shr $0x1,%rax
c4b2(2): jnz 0xffffffee(%rip)
c4b4(4): add $0x8,%r9
c4b8(4): cmp $0x20,%r9
c4bc(2): jnz 0xffffffc3(%rip)
c4be(8): test $0x4,0xd1(%rsp)
c4c6(2): jz 0x3c(%rip)
c4c8(2): xor %eax,%eax
c4ca(5): mov 0x50(%rsp),%rdx
c4cf(2): jmp 0xf(%rip)
c4d1(4): add $0x1,%rax
c4d5(4): add $0x20,%rdx
c4d9(3): cmp %rbp,%rax
c4dc(2): jz 0x26(%rip)
c4de(7): test $0x400,(%rdx)
c4e5(2): jz 0xffffffec(%rip)
c4e7(5): mov 0x38(%rsp),%rbx
c4ec(5): cmp $0x0,0x4f(%rsp)
c4f1(4): mov 0x0(%rbx,%rax,8),%rax
c4f5(4): mov %rax,0x50(%r11)
c4f9(2): jz 0x9(%rip)
c4fb(7): mov %rax,0x850(%r11)
c502(5): mov 0x10(%rsp),%rdi
c507(5): call 0xffff55f9(%rip)
c50c(8): mov 0x80(%rsp),%rdi
c514(5): call 0xffff55ec(%rip)
c519(5): mov 0x18(%rsp),%rax
c51e(5): mov 0x58(%rsp),%rbx
c523(4): lea 0x10(%rax),%rbp
c527(3): add %rbp,%rbx
c52a(4): mov 0x0(%rbp),%rdi
c52e(4): add $0x18,%rbp
c532(5): call 0xffff55ce(%rip)
c537(3): cmp %rbp,%rbx
c53a(2): jnz 0xfffffff0(%rip)
c53c(5): mov 0x18(%rsp),%rdi
c541(5): call 0xffff55bf(%rip)
c546(5): mov $0x1,%eax
c54b(2): jmp 0x27(%rip)
c54d(3): test %rbp,%rbp
c550(8): mov $0x0,0x8(%rbx)
c558(7): mov $0x0,(%rbx)
c55f(6): jnz 0x331(%rip)
c565(5): mov 0x18(%rsp),%rdi
c56a(5): call 0xffff5596(%rip)
c56f(1): nop 
c570(2): xor %eax,%eax
c572(8): mov 0xf8(%rsp),%rbx
c57a(9): xor $0x28,%rbx
c583(6): jnz 0x751(%rip)
c589(7): add $0x108,%rsp
c590(1): pop %rbx
c591(1): pop %rbp
c592(2): pop %r12
c594(2): pop %r13
c596(2): pop %r14
c598(2): pop %r15
c59a(1): ret near (%rsp)
c59b(5): nop 0x0(%rax,%rax,1)
c5a0(5): movzx 0x0(%r13),%ecx
c5a5(8): lea 0x90(%rsp),%r12
c5ad(5): mov $0x1,%edi
c5b2(3): mov %rcx,%rdx
c5b5(3): and $0x3f,%ecx
c5b8(4): shr $0x3,%rdx
c5bc(3): shl/sal %cl,%rdi
c5bf(3): and $0x18,%edx
c5c2(4): or %rdi,0x0(%r12,%rdx,1)
c5c6(3): test %ax,%ax
c5c9(6): jz 0xc7(%rip)
c5cf(2): test $0x20,%al
c5d1(6): jnz 0x36f(%rip)
c5d7(2): test $0x80,%al
c5d9(6): jnz 0x29b(%rip)
c5df(2): test $0x4,%al
c5e1(2): jz 0x54(%rip)
c5e3(4): cmp $0x1,%r14d
c5e7(6): jz 0x3de(%rip)
c5ed(5): mov 0x30(%rsp),%r8
c5f2(8): cmp $0x1,0xb4(%r8)
c5fa(6): jle 0x458(%rip)
c600(4): mov 0x78(%r8),%rdi
c604(2): xor %esi,%esi
c606(2): xor %ecx,%ecx
c608(4): mov 0x0(%rdi,%rcx,8),%rdx
c60c(3): not %rdx
c60f(8): or 0xb8(%r8,%rcx,8),%rdx
c617(4): and 0x0(%r12,%rcx,8),%rdx
c61b(4): mov %rdx,0x0(%r12,%rcx,8)
c61f(4): add $0x1,%rcx
c623(3): or %rdx,%rsi
c626(4): cmp $0x4,%rcx
c62a(2): jnz 0xffffffde(%rip)
c62c(3): test %rsi,%rsi
c62f(6): jz 0xfffffc30(%rip)
c635(2): test $0x8,%al
c637(2): jz 0x59(%rip)
c639(4): cmp $0x1,%r14d
c63d(6): jz 0x334(%rip)
c643(5): mov 0x30(%rsp),%rdi
c648(7): cmp $0x1,0xb4(%rdi)
c64f(6): jle 0x33f(%rip)
c655(4): mov 0x78(%rdi),%rsi
c659(2): xor %ecx,%ecx
c65b(2): xor %edx,%edx
c65d(8): mov 0xb8(%rdi,%rdx,8),%rax
c665(4): and 0x0(%rsi,%rdx,8),%rax
c669(3): not %rax
c66c(4): and 0x0(%r12,%rdx,8),%rax
c670(4): mov %rax,0x0(%r12,%rdx,8)
c674(4): add $0x1,%rdx
c678(3): or %rax,%rcx
c67b(4): cmp $0x4,%rdx
c67f(2): jnz 0xffffffde(%rip)
c681(3): test %rcx,%rcx
c684(6): jz 0xfffffbdb(%rip)
c68a(6): nop 0x0(%rax,%rax,1)
c690(2): xor %ebx,%ebx
c692(3): test %rbp,%rbp
c695(6): jle 0x166(%rip)
c69b(5): mov %r13,0x28(%rsp)
c6a0(3): mov %r15,%r13
c6a3(5): nop 0x0(%rax,%rax,1)
c6a8(3): mov %rbx,%r10
c6ab(4): shl/sal $0x5,%r10
c6af(4): cmp $0x1,%r14d
c6b3(2): jnz 0x25(%rip)
c6b5(5): mov 0x28(%rsp),%rax
c6ba(3): movzx (%rax),%edx
c6bd(3): mov %rdx,%rax
c6c0(4): shr $0x3,%rax
c6c4(3): and $0x18,%eax
c6c7(3): add %r13,%rax
c6ca(4): mov 0x0(%rax,%r10,1),%rax
c6ce(4): bt %rdx,%rax
c6d2(6): jnb 0x119(%rip)
c6d8(5): lea 0x0(%r13,%r10,1),%rdi
c6dd(8): lea 0xb0(%rsp),%rsi
c6e5(2): xor %ecx,%ecx
c6e7(2): xor %eax,%eax
c6e9(4): mov 0x0(%r12,%rax,8),%rdx
c6ed(4): and 0x0(%rdi,%rax,8),%rdx
c6f1(4): mov %rdx,0x0(%rsi,%rax,8)
c6f5(4): add $0x1,%rax
c6f9(3): or %rdx,%rcx
c6fc(4): cmp $0x4,%rax
c700(2): jnz 0xffffffe9(%rip)
c702(3): test %rcx,%rcx
c705(6): jz 0xe6(%rip)
c70b(8): lea 0xd0(%rsp),%r11
c713(3): xor %r15d,%r15d
c716(3): xor %r9d,%r9d
c719(2): xor %ecx,%ecx
c71b(4): mov 0x0(%r12,%rcx,8),%rsi
c71f(4): mov 0x0(%rdi,%rcx,8),%rax
c723(3): mov %rsi,%rdx
c726(3): not %rdx
c729(3): and %rax,%rdx
c72c(3): not %rax
c72f(3): and %rsi,%rax
c732(4): mov %rdx,0x0(%r11,%rcx,8)
c736(3): or %rdx,%r9
c739(4): mov %rax,0x0(%r12,%rcx,8)
c73d(4): add $0x1,%rcx
c741(3): or %rax,%r15
c744(4): cmp $0x4,%rcx
c748(2): jnz 0xffffffd3(%rip)
c74a(5): mov 0x18(%rsp),%rdi
c74f(4): lea 0x0(%rbx,%rbx,2),%rax
c753(3): test %r9,%r9
c756(4): lea 0x0(%rdi,%rax,8),%rdx
c75a(2): jz 0x6a(%rip)
c75c(3): mov %rbp,%rax
c75f(9): movdqa 0xd0(%rsp),%xmm0
c768(4): shl/sal $0x5,%rax
c76c(3): mov %rdx,%rsi
c76f(5): mov %rdx,0x38(%rsp)
c774(3): add %r13,%rax
c777(3): movups %xmm0,(%rax)
c77a(9): movdqa 0xe0(%rsp),%xmm0
c783(4): movups %xmm0,0x10(%rax)
c787(5): lea 0x0(%rbp,%rbp,2),%rax
c78c(4): lea 0x0(%rdi,%rax,8),%rdi
c790(9): movdqa 0xb0(%rsp),%xmm0
c799(6): movups %xmm0,0x0(%r13,%r10,1)
c79f(9): movdqa 0xc0(%rsp),%xmm0
c7a8(6): movups %xmm0,0x10(%r13,%r10,1)
c7ae(5): call 0xffffe082(%rip)
c7b3(2): test %eax,%eax
c7b5(6): jnz 0xdb(%rip)
c7bb(5): mov 0x38(%rsp),%rdx
c7c0(4): add $0x1,%rbp
c7c4(5): mov 0x8(%rsp),%rax
c7c9(5): mov 0x20(%rsp),%rsi
c7ce(3): mov %rdx,%rdi
c7d1(4): mov 0x18(%rax),%rax
c7d5(4): mov 0x0(%rax,%rsi,1),%rsi
c7d9(5): call 0xffffb9b7(%rip)
c7de(2): test %al,%al
c7e0(6): jz 0xb0(%rip)
c7e6(3): test %r15,%r15
c7e9(2): jz 0xf(%rip)
c7eb(4): add $0x1,%rbx
c7ef(3): cmp %rbp,%rbx
c7f2(6): jl 0xfffffeb6(%rip)
c7f8(3): mov %r13,%r15
c7fb(3): cmp %rbx,%rbp
c7fe(6): jnz 0xfffffa61(%rip)
c804(3): mov %rbp,%rax
c807(9): movdqa 0x90(%rsp),%xmm0
c810(4): shl/sal $0x5,%rax
c814(5): mov 0x20(%rsp),%rbx
c819(5): mov $0x8,%edi
c81e(3): add %r15,%rax
c821(3): movups %xmm0,(%rax)
c824(9): movdqa 0xa0(%rsp),%xmm0
c82d(4): movups %xmm0,0x10(%rax)
c831(5): mov 0x8(%rsp),%rax
c836(4): mov 0x18(%rax),%rax
c83a(4): mov 0x0(%rax,%rbx,1),%r13
c83e(5): mov 0x18(%rsp),%rbx
c843(5): lea 0x0(%rbp,%rbp,2),%rax
c848(4): lea 0x0(%rbx,%rax,8),%rbx
c84c(7): mov $0x1,(%rbx)
c853(8): mov $0x1,0x8(%rbx)
c85b(5): call 0xffff5545(%rip)
c860(3): test %rax,%rax
c863(4): mov %rax,0x10(%rbx)
c867(6): jz 0xfffffce6(%rip)
c86d(3): mov %r13,(%rax)
c870(4): add $0x1,%rbp
c874(4): pxor %xmm0,%xmm0
c878(5): movaps %xmm0,(%r12)
c87d(6): movaps %xmm0,0x10(%r12)
c883(5): jmp 0xfffff9dc(%rip)
c888(8): nop 0x0(%rax,%rax,1)
c890(5): mov 0x18(%rsp),%rax
c895(4): lea 0x10(%rax),%rbx
c899(5): lea 0x0(%rbp,%rbp,2),%rax
c89e(4): lea 0x0(%rbx,%rax,8),%rbp
c8a2(6): nop 0x0(%rax,%rax,1)
c8a8(3): mov (%rbx),%rdi
c8ab(4): add $0x18,%rbx
c8af(5): call 0xffff5251(%rip)
c8b4(3): cmp %rbx,%rbp
c8b7(2): jnz 0xfffffff1(%rip)
c8b9(5): mov 0x18(%rsp),%rdi
c8be(5): call 0xffff5242(%rip)
c8c3(5): jmp 0xfffffcad(%rip)
c8c8(8): nop 0x0(%rax,%rax,1)
c8d0(5): mov 0x30(%rsp),%rsi
c8d5(7): cmp $0x1,0xb4(%rsi)
c8dc(6): jle 0x109(%rip)
c8e2(4): mov 0x78(%rsi),%rsi
c8e6(8): lea 0x90(%rsp),%r12
c8ee(2): xor %edx,%edx
c8f0(4): mov 0x0(%r12,%rdx,1),%rcx
c8f4(4): or 0x0(%rsi,%rdx,1),%rcx
c8f8(4): mov %rcx,0x0(%r12,%rdx,1)
c8fc(4): add $0x8,%rdx
c900(4): cmp $0x20,%rdx
c904(2): jnz 0xffffffec(%rip)
c906(5): mov 0x30(%rsp),%rbx
c90b(7): mov 0xd8(%rbx),%rdx
c912(3): test $0x40,%dl
c915(2): jnz 0xe(%rip)
c917(c): and $0xfffffbff,0x90(%rsp)
c923(6): and $0x80,%edx
c929(6): jz 0xfffffc9d(%rip)
c92f(9): and $0xfffffffe,0x90(%rsp)
c938(5): jmp 0xfffffc8e(%rip)
c93d(3): nop (%rax)
c940(8): mov 0x90(%rsp),%rdx
c948(4): pxor %xmm0,%xmm0
c94c(3): and $0x4,%dh
c94f(5): movaps %xmm0,(%r12)
c954(6): movaps %xmm0,0x10(%r12)
c95a(6): jz 0xfffff905(%rip)
c960(c): mov $0x400,0x90(%rsp)
c96c(5): jmp 0xfffffc6b(%rip)
c971(5): test $0x40,0xa(%r13)
c976(6): jnz 0xfffffefe(%rip)
c97c(5): mov 0x30(%rsp),%rdi
c981(7): cmp $0x1,0xb4(%rdi)
c988(6): jnle 0xfffffccd(%rip)
c98e(5): mov 0x30(%rsp),%rsi
c993(2): xor %ecx,%ecx
c995(2): xor %edx,%edx
c997(8): mov 0xb8(%rsi,%rdx,8),%rax
c99f(3): not %rax
c9a2(4): and 0x0(%r12,%rdx,8),%rax
c9a6(4): mov %rax,0x0(%r12,%rdx,8)
c9aa(4): add $0x1,%rdx
c9ae(3): or %rax,%rcx
c9b1(4): cmp $0x4,%rdx
c9b5(2): jnz 0xffffffe2(%rip)
c9b7(3): test %rcx,%rcx
c9ba(6): jnz 0xfffffcd6(%rip)
c9c0(5): jmp 0xfffff89f(%rip)
c9c5(5): test $0x40,0xa(%r13)
c9ca(6): jz 0xfffffeaa(%rip)
c9d0(5): mov 0x30(%rsp),%r8
c9d5(8): cmp $0x1,0xb4(%r8)
c9dd(6): jnle 0xfffffc23(%rip)
c9e3(2): jmp 0x6f(%rip)
c9e5(4): pcmpeqd %xmm0,%xmm0
c9e9(8): lea 0x90(%rsp),%r12
c9f1(8): movaps %xmm0,0x90(%rsp)
c9f9(8): movaps %xmm0,0xa0(%rsp)
ca01(5): jmp 0xffffff05(%rip)
ca06(a): nop 0x0(%rax,%rax,1)
ca10(4): mov 0x0(%r13),%rsi
ca14(8): lea 0x90(%rsp),%r12
ca1c(2): xor %edx,%edx
ca1e(4): mov 0x0(%r12,%rdx,1),%rcx
ca22(4): or 0x0(%rsi,%rdx,1),%rcx
ca26(4): mov %rcx,0x0(%r12,%rdx,1)
ca2a(4): add $0x8,%rdx
ca2e(4): cmp $0x20,%rdx
ca32(2): jnz 0xffffffec(%rip)
ca34(5): jmp 0xfffffb92(%rip)
ca39(4): pcmpeqd %xmm0,%xmm0
ca3d(8): lea 0x90(%rsp),%r12
ca45(8): movaps %xmm0,0x90(%rsp)
ca4d(5): jmp 0xfffffeb9(%rip)
ca52(5): mov 0x30(%rsp),%rdi
ca57(2): xor %esi,%esi
ca59(2): xor %edx,%edx
ca5b(4): mov 0x0(%r12,%rdx,8),%rcx
ca5f(8): and 0xb8(%rdi,%rdx,8),%rcx
ca67(4): mov %rcx,0x0(%r12,%rdx,8)
ca6b(4): add $0x1,%rdx
ca6f(3): or %rcx,%rsi
ca72(4): cmp $0x4,%rdx
ca76(2): jnz 0xffffffe5(%rip)
ca78(3): test %rsi,%rsi
ca7b(6): jnz 0xfffffbba(%rip)
ca81(5): jmp 0xfffff7de(%rip)
ca86(4): mov 0x6c(%rsp),%edx
ca8a(2): test %edx,%edx
ca8c(6): jz 0x8b(%rip)
ca92(6): nop 0x0(%rax,%rax,1)
ca98(5): mov 0x20(%rsp),%rbp
ca9d(5): mov 0x10(%rsp),%rdi
caa2(5): call 0xffff505e(%rip)
caa7(8): mov 0x80(%rsp),%r12
caaf(3): mov %r12,%rdi
cab2(5): call 0xffff504e(%rip)
cab7(5): mov 0x18(%rsp),%rax
cabc(4): lea 0x10(%rax),%rbx
cac0(5): lea 0x0(%rbp,%rbp,2),%rax
cac5(4): lea 0x0(%rbx,%rax,8),%rbp
cac9(7): nop 0x0(%rax)
cad0(3): mov (%rbx),%rdi
cad3(4): add $0x18,%rbx
cad7(5): call 0xffff5029(%rip)
cadc(3): cmp %rbx,%rbp
cadf(2): jnz 0xfffffff1(%rip)
cae1(5): mov 0x18(%rsp),%rdi
cae6(5): call 0xffff501a(%rip)
caeb(5): jmp 0xfffffa85(%rip)
caf0(5): mov 0x28(%rsp),%rdi
caf5(5): mov $0x1,%ecx
cafa(3): mov %r14,%rdx
cafd(3): mov %rbp,%rsi
cb00(5): call 0xffffdf20(%rip)
cb05(5): mov 0x30(%rsp),%rdi
cb0a(3): test %rax,%rax
cb0d(4): mov %rax,0x0(%rdi,%rbx,8)
cb11(6): jz 0xffffff75(%rip)
cb17(5): mov 0x10(%rsp),%rdi
cb1c(4): cmp 0x0(%rdi,%rbx,8),%rax
cb20(2): jz 0x1b(%rip)
cb22(5): movzx 0x4f(%rsp),%edi
cb27(7): cmp $0x2,0xb4(%rbp)
cb2e(5): mov $0x1,%eax
cb33(3): cmovnl %eax,%edi
cb36(5): mov %dil,0x4f(%rsp)
cb3b(5): mov 0x28(%rsp),%rdi
cb40(3): mov %rbp,%rsi
cb43(5): mov $0x2,%ecx
cb48(3): mov %r14,%rdx
cb4b(5): call 0xffffded5(%rip)
cb50(5): mov 0x38(%rsp),%rsi
cb55(3): test %rax,%rax
cb58(4): mov %rax,0x0(%rsi,%rbx,8)
cb5c(6): jnz 0xfffff895(%rip)
cb62(4): mov 0x6c(%rsp),%eax
cb66(2): test %eax,%eax
cb68(6): jz 0xfffff889(%rip)
cb6e(5): jmp 0xffffff2a(%rip)
cb73(5): nop 0x0(%rax,%rax,1)
cb78(4): mov 0x6c(%rsp),%ecx
cb7c(2): test %ecx,%ecx
cb7e(6): jz 0xfffff84e(%rip)
cb84(5): jmp 0xffffff14(%rip)
cb89(5): mov $0x200,%esi
cb8e(5): mov $0x8,%edi
cb93(5): call 0xffff519d(%rip)
cb98(3): mov %rax,%r11
cb9b(5): mov 0x8(%rsp),%rax
cba0(3): test %r11,%r11
cba3(4): mov %r11,0x60(%rax)
cba7(6): jz 0xfffffef6(%rip)
cbad(5): mov 0x40(%rsp),%r13
cbb2(5): mov 0x10(%rsp),%r10
cbb7(3): mov %r11,%r12
cbba(5): mov 0x30(%rsp),%r14
cbbf(5): mov 0x20(%rsp),%rdx
cbc4(2): xor %ebx,%ebx
cbc6(4): add $0x20,%r13
cbca(4): mov 0x0(%rdx,%rbx,1),%rax
cbce(3): test %rax,%rax
cbd1(2): jz 0x1e(%rip)
cbd3(3): mov %r12,%rsi
cbd6(5): mov $0x1,%ecx
cbdb(2): test $0x1,%al
cbdd(6): jnz 0xaf(%rip)
cbe3(3): add %rcx,%rcx
cbe6(4): add $0x8,%rsi
cbea(3): shr $0x1,%rax
cbed(2): jnz 0xffffffee(%rip)
cbef(4): add $0x8,%rbx
cbf3(7): add $0x200,%r12
cbfa(4): cmp $0x20,%rbx
cbfe(2): jnz 0xffffffcc(%rip)
cc00(5): jmp 0xfffff8be(%rip)
cc05(3): nop (%rax)
cc08(5): mov 0x18(%rsp),%rdi
cc0d(8): test %rcx,0x1800(%rdi,%r9,1)
cc15(2): jnz 0x72(%rip)
cc17(4): lea 0x0(%rbx,%r9,1),%rdi
cc1b(3): xor %r8d,%r8d
cc1e(2): nop 
cc20(3): mov (%rdi),%r10
cc23(4): add $0x1,%r8
cc27(4): add $0x20,%rdi
cc2b(3): and %rcx,%r10
cc2e(3): test %r10,%r10
cc31(2): jz 0xffffffef(%rip)
cc33(4): shl/sal $0x3,%r8
cc37(8): test %rcx,0xb8(%r15,%r9,1)
cc3f(2): jz 0xf(%rip)
cc41(5): mov 0x0(%r13,%r8,1),%rdi
cc46(3): mov %rdi,(%rsi)
cc49(5): jmp 0xfffff85f(%rip)
cc4e(4): mov 0x0(%r12,%r8,1),%rdi
cc52(3): mov %rdi,(%rsi)
cc55(5): jmp 0xfffff853(%rip)
cc5a(5): mov 0x18(%rsp),%rdi
cc5f(5): call 0xffff4ea1(%rip)
cc64(5): mov $0x100,%esi
cc69(5): mov $0x8,%edi
cc6e(5): call 0xffff50c2(%rip)
cc73(5): mov 0x8(%rsp),%rbx
cc78(3): test %rax,%rax
cc7b(4): mov %rax,0x58(%rbx)
cc7f(3): setnz %al
cc82(5): jmp 0xfffff8f0(%rip)
cc87(3): xor %r8d,%r8d
cc8a(2): jmp 0xffffffad(%rip)
cc8c(5): mov 0x18(%rsp),%rdi
cc91(8): test %rcx,0x1800(%rdi,%rbx,1)
cc99(2): jnz 0x37(%rip)
cc9b(5): lea 0x0(%r13,%rbx,1),%r9
cca0(3): xor %r8d,%r8d
cca3(3): mov (%r9),%r15
cca6(4): add $0x1,%r8
ccaa(4): add $0x20,%r9
ccae(3): mov %r8,%rdi
ccb1(3): and %rcx,%r15
ccb4(3): test %r15,%r15
ccb7(2): jz 0xffffffec(%rip)
ccb9(4): mov 0x0(%r10,%rdi,8),%r8
ccbd(3): mov %r8,(%rsi)
ccc0(4): mov 0x0(%r14,%rdi,8),%rdi
ccc4(7): mov %rdi,0x800(%rsi)
cccb(5): jmp 0xffffff18(%rip)
ccd0(2): xor %edi,%edi
ccd2(2): jmp 0xffffffe7(%rip)
ccd4(5): call 0xffff4f4c(%rip)
ccd9(5): mov 0x18(%rsp),%rdi
ccde(5): call 0xffff4e22(%rip)
cce3(3): test %rbp,%rbp
cce6(6): jnz 0xfffff88a(%rip)
ccec(5): jmp 0xffffff78(%rip)

"calc_first" :
cd00(4): cmp $0x10,0x30(%rsi)
cd04(2): jz 0x64(%rip)
cd06(1): push %rbp
cd07(1): push %rbx
cd08(3): mov %rsi,%rbx
cd0b(3): mov %rdi,%rbp
cd0e(4): sub $0x8,%rsp
cd12(4): mov %rsi,0x18(%rbx)
cd16(4): mov 0x30(%rbx),%rdx
cd1a(4): mov 0x28(%rsi),%rsi
cd1e(5): call 0xffffc152(%rip)
cd23(4): cmp $0xffffffff,%rax
cd27(3): mov %rax,%rdx
cd2a(4): mov %rax,0x38(%rbx)
cd2e(2): jz 0x52(%rip)
cd30(2): xor %eax,%eax
cd32(4): cmp $0xc,0x30(%rbx)
cd36(2): jnz 0x26(%rip)
cd38(3): mov 0x28(%rbx),%ecx
cd3b(4): shl/sal $0x4,%rdx
cd3f(4): add 0x0(%rbp),%rdx
cd43(6): and $0x3ff,%ecx
cd49(3): shl/sal $0x8,%ecx
cd4c(2): mov %ecx,%esi
cd4e(3): mov 0x8(%rdx),%ecx
cd51(6): and $0xfffc00ff,%ecx
cd57(2): or %esi,%ecx
cd59(3): mov %ecx,0x8(%rdx)
cd5c(4): add $0x8,%rsp
cd60(1): pop %rbx
cd61(1): pop %rbp
cd62(1): ret near (%rsp)
cd63(5): nop 0x0(%rax,%rax,1)
cd68(4): mov 0x8(%rsi),%rax
cd6c(4): mov 0x18(%rax),%rdx
cd70(4): mov 0x38(%rax),%rax
cd74(4): mov %rdx,0x18(%rsi)
cd78(4): mov %rax,0x38(%rsi)
cd7c(2): xor %eax,%eax
cd7e(1): ret near (%rsp)
cd7f(1): nop 
cd80(5): mov $0xc,%eax
cd85(2): jmp 0xffffffd7(%rip)

"free_fail_stack_return.part.24" :
cd90(2): push %r12
cd92(1): push %rbp
cd93(3): mov %rdi,%rbp
cd96(1): push %rbx
cd97(4): cmp $0x0,(%rdi)
cd9b(2): jle 0x37(%rip)
cd9d(2): xor %ebx,%ebx
cd9f(3): xor %r12d,%r12d
cda2(6): nop 0x0(%rax,%rax,1)
cda8(4): mov 0x10(%rbp),%rax
cdac(4): add $0x1,%r12
cdb0(5): mov 0x28(%rax,%rbx,1),%rdi
cdb5(5): call 0xffff4d4b(%rip)
cdba(4): mov 0x10(%rbp),%rax
cdbe(5): mov 0x10(%rax,%rbx,1),%rdi
cdc3(4): add $0x30,%rbx
cdc7(5): call 0xffff4d39(%rip)
cdcc(4): cmp 0x0(%rbp),%r12
cdd0(2): jl 0xffffffd8(%rip)
cdd2(1): pop %rbx
cdd3(4): mov 0x10(%rbp),%rdi
cdd7(1): pop %rbp
cdd8(2): pop %r12
cdda(5): jmp 0xffff4d26(%rip)

"pop_fail_stack.isra.25" :
cde0(2): push %r12
cde2(1): push %rbp
cde3(1): push %rbx
cde4(3): mov (%rdi),%rax
cde7(4): sub $0x1,%rax
cdeb(3): test %rax,%rax
cdee(3): mov %rax,(%rdi)
cdf1(2): js 0x64(%rip)
cdf3(4): lea 0x0(%rax,%rax,2),%rbx
cdf7(3): mov (%rsi),%rax
cdfa(3): mov %rsi,%r12
cdfd(4): shl/sal $0x4,%rcx
ce01(3): mov %r9,%rbp
ce04(3): mov %r8,%rdi
ce07(4): shl/sal $0x4,%rbx
ce0b(3): add %rbx,%rax
ce0e(3): mov (%rax),%rsi
ce11(3): mov %rsi,(%rdx)
ce14(4): mov 0x10(%rax),%rsi
ce18(3): mov %rcx,%rdx
ce1b(5): call 0xffff4f55(%rip)
ce20(4): mov 0x10(%rbp),%rdi
ce24(5): call 0xffff4cdc(%rip)
ce29(4): mov (%r12),%rax
ce2d(5): mov 0x10(%rax,%rbx,1),%rdi
ce32(5): call 0xffff4cce(%rip)
ce37(4): add (%r12),%rbx
ce3b(5): movdqu 0x18(%rbx),%xmm0
ce40(4): movaps %xmm0,0x0(%rbp)
ce44(4): mov 0x28(%rbx),%rax
ce48(4): mov %rax,0x10(%rbp)
ce4c(4): mov 0x8(%rbx),%rax
ce50(1): pop %rbx
ce51(1): pop %rbp
ce52(2): pop %r12
ce54(1): ret near (%rsp)
ce55(7): lea 0xad84(%rip),%rcx
ce5c(7): lea 0xa7a5(%rip),%rsi
ce63(7): lea 0xa806(%rip),%rdi
ce6a(5): mov $0x555,%edx
ce6f(5): call 0xffff4e21(%rip)

"build_equiv_class.isra.27" :
ce80(1): push %rbp
ce81(1): push %rbx
ce82(3): mov %rdi,%rbp
ce85(3): mov %rsi,%rdi
ce88(3): mov %rsi,%rbx
ce8b(4): sub $0x8,%rsp
ce8f(5): call 0xffff4d81(%rip)
ce94(4): cmp $0x1,%rax
ce98(2): jnz 0x28(%rip)
ce9a(3): movzx (%rbx),%ecx
ce9d(3): mov %rcx,%rdx
cea0(3): and $0x3f,%ecx
cea3(4): shr $0x3,%rdx
cea7(3): shl/sal %cl,%rax
ceaa(3): and $0x18,%edx
cead(5): or %rax,0x0(%rbp,%rdx,1)
ceb2(4): add $0x8,%rsp
ceb6(2): xor %eax,%eax
ceb8(1): pop %rbx
ceb9(1): pop %rbp
ceba(1): ret near (%rsp)
cebb(5): nop 0x0(%rax,%rax,1)
cec0(4): add $0x8,%rsp
cec4(5): mov $0x3,%eax
cec9(1): pop %rbx
ceca(1): pop %rbp
cecb(1): ret near (%rsp)

"build_charclass.isra.29" :
ced0(2): push %r14
ced2(2): push %r13
ced4(3): mov %rcx,%r13
ced7(2): push %r12
ced9(1): push %rbp
ceda(3): mov %r9,%r12
cedd(1): push %rbx
cede(3): mov %rdi,%rbp
cee1(3): mov %rsi,%rbx
cee4(4): sub $0x10,%rsp
cee8(9): test $0x400000,0x40(%rsp)
cef1(2): jz 0x27(%rip)
cef3(7): lea 0xa785(%rip),%rdi
cefa(5): mov $0x6,%ecx
ceff(3): mov %r9,%rsi
cf02(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
cf04(3): setnbe %al
cf07(2): sbb $0x0,%al
cf09(2): test %al,%al
cf0b(6): jnz 0xfb(%rip)
cf11(7): lea 0xa761(%rip),%r12
cf18(4): mov 0x0(%r13),%rcx
cf1c(3): cmp %rcx,(%r8)
cf1f(3): mov (%rdx),%rax
cf22(6): jz 0x117(%rip)
cf28(4): lea 0x1(%rcx),%rdx
cf2c(3): mov %r12,%rdi
cf2f(4): mov %rdx,0x0(%r13)
cf33(4): lea 0x0(%rax,%rcx,8),%r13
cf37(5): call 0xffff4dd9(%rip)
cf3c(7): lea 0xa748(%rip),%rdi
cf43(4): mov %rax,0x0(%r13)
cf47(5): mov $0x6,%ecx
cf4c(3): mov %r12,%rsi
cf4f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
cf51(3): setnbe %al
cf54(2): sbb $0x0,%al
cf56(2): test %al,%al
cf58(2): jz 0x70(%rip)
cf5a(7): lea 0xa730(%rip),%rdi
cf61(5): mov $0x6,%ecx
cf66(3): mov %r12,%rsi
cf69(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
cf6b(3): setnbe %al
cf6e(2): sbb $0x0,%al
cf70(2): test %al,%al
cf72(6): jnz 0x106(%rip)
cf78(5): call 0xffff4fd8(%rip)
cf7d(2): xor %ecx,%ecx
cf7f(3): test %rbp,%rbp
cf82(3): mov (%rax),%rdx
cf85(5): mov $0x1,%edi
cf8a(6): jnz 0x2c0(%rip)
cf90(4): test $0x2,0x0(%rdx,%rcx,2)
cf94(2): jz 0x13(%rip)
cf96(3): mov %rcx,%rax
cf99(3): mov %rdi,%rsi
cf9c(4): sar $0x6,%rax
cfa0(3): shl/sal %cl,%rsi
cfa3(4): or %rsi,0x0(%rbx,%rax,8)
cfa7(4): add $0x1,%rcx
cfab(7): cmp $0x100,%rcx
cfb2(2): jnz 0xffffffde(%rip)
cfb4(2): xor %eax,%eax
cfb6(4): add $0x10,%rsp
cfba(1): pop %rbx
cfbb(1): pop %rbp
cfbc(2): pop %r12
cfbe(2): pop %r13
cfc0(2): pop %r14
cfc2(1): ret near (%rsp)
cfc3(5): nop 0x0(%rax,%rax,1)
cfc8(5): call 0xffff4f88(%rip)
cfcd(2): xor %ecx,%ecx
cfcf(3): test %rbp,%rbp
cfd2(3): mov (%rax),%rdx
cfd5(5): mov $0x1,%edi
cfda(6): jnz 0x1f0(%rip)
cfe0(4): test $0x8,0x0(%rdx,%rcx,2)
cfe4(2): jz 0x13(%rip)
cfe6(3): mov %rcx,%rax
cfe9(3): mov %rdi,%rsi
cfec(4): sar $0x6,%rax
cff0(3): shl/sal %cl,%rsi
cff3(4): or %rsi,0x0(%rbx,%rax,8)
cff7(4): add $0x1,%rcx
cffb(7): cmp $0x100,%rcx
d002(2): jnz 0xffffffde(%rip)
d004(2): jmp 0xffffffb0(%rip)
d006(7): lea 0xa678(%rip),%rdi
d00d(5): mov $0x6,%ecx
d012(3): mov %r9,%rsi
d015(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d017(4): mov 0x0(%r13),%rcx
d01b(3): setnbe %al
d01e(2): sbb $0x0,%al
d020(2): test %al,%al
d022(7): lea 0xa650(%rip),%rax
d029(4): cmove %rax,%r12
d02d(3): cmp %rcx,(%r8)
d030(3): mov (%rdx),%rax
d033(6): jnz 0xfffffef5(%rip)
d039(5): lea 0x1(%rcx,%rcx,1),%r14
d03e(3): mov %rax,%rdi
d041(5): mov %r8,0x8(%rsp)
d046(4): mov %rdx,(%rsp)
d04a(8): lea 0x0(,%r14,8),%rsi
d052(5): call 0xffff4dae(%rip)
d057(3): test %rax,%rax
d05a(6): jz 0x31e(%rip)
d060(4): mov (%rsp),%rdx
d064(5): mov 0x8(%rsp),%r8
d069(3): mov %rax,(%rdx)
d06c(3): mov %r14,(%r8)
d06f(4): mov 0x0(%r13),%rcx
d073(5): jmp 0xfffffeb5(%rip)
d078(7): lea 0xa606(%rip),%rdi
d07f(5): mov $0x6,%ecx
d084(3): mov %r12,%rsi
d087(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d089(3): setnbe %al
d08c(2): sbb $0x0,%al
d08e(2): test %al,%al
d090(2): jz 0x6a(%rip)
d092(7): lea 0xa5fe(%rip),%rdi
d099(5): mov $0x6,%ecx
d09e(3): mov %r12,%rsi
d0a1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d0a3(3): setnbe %al
d0a6(2): sbb $0x0,%al
d0a8(2): test %al,%al
d0aa(6): jnz 0x98(%rip)
d0b0(5): call 0xffff4ea0(%rip)
d0b5(2): xor %ecx,%ecx
d0b7(3): test %rbp,%rbp
d0ba(3): mov (%rax),%rdx
d0bd(5): mov $0x1,%edi
d0c2(6): jnz 0x35c(%rip)
d0c8(8): nop 0x0(%rax,%rax,1)
d0d0(5): test $0x20,0x1(%rdx,%rcx,2)
d0d5(2): jz 0x13(%rip)
d0d7(3): mov %rcx,%rax
d0da(3): mov %rdi,%rsi
d0dd(4): sar $0x6,%rax
d0e1(3): shl/sal %cl,%rsi
d0e4(4): or %rsi,0x0(%rbx,%rax,8)
d0e8(4): add $0x1,%rcx
d0ec(7): cmp $0x100,%rcx
d0f3(2): jnz 0xffffffdd(%rip)
d0f5(5): jmp 0xfffffebf(%rip)
d0fa(5): call 0xffff4e56(%rip)
d0ff(2): xor %ecx,%ecx
d101(3): test %rbp,%rbp
d104(3): mov (%rax),%rdx
d107(5): mov $0x1,%edi
d10c(6): jnz 0x1d6(%rip)
d112(6): nop 0x0(%rax,%rax,1)
d118(5): test $0x2,0x1(%rdx,%rcx,2)
d11d(2): jz 0x13(%rip)
d11f(3): mov %rcx,%rax
d122(3): mov %rdi,%rsi
d125(4): sar $0x6,%rax
d129(3): shl/sal %cl,%rsi
d12c(4): or %rsi,0x0(%rbx,%rax,8)
d130(4): add $0x1,%rcx
d134(7): cmp $0x100,%rcx
d13b(2): jnz 0xffffffdd(%rip)
d13d(5): jmp 0xfffffe77(%rip)
d142(7): lea 0xa530(%rip),%rdi
d149(5): mov $0x6,%ecx
d14e(3): mov %r12,%rsi
d151(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d153(3): setnbe %al
d156(2): sbb $0x0,%al
d158(2): test %al,%al
d15a(6): jz 0xa9(%rip)
d160(7): lea 0xa54f(%rip),%rdi
d167(5): mov $0x6,%ecx
d16c(3): mov %r12,%rsi
d16f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d171(3): setnbe %al
d174(2): sbb $0x0,%al
d176(2): test %al,%al
d178(6): jnz 0x10b(%rip)
d17e(5): call 0xffff4dd2(%rip)
d183(2): xor %ecx,%ecx
d185(3): test %rbp,%rbp
d188(3): mov (%rax),%rdx
d18b(5): mov $0x1,%edi
d190(6): jnz 0x4aa(%rip)
d196(a): nop 0x0(%rax,%rax,1)
d1a0(5): test $0x8,0x1(%rdx,%rcx,2)
d1a5(2): jz 0x13(%rip)
d1a7(3): mov %rcx,%rax
d1aa(3): mov %rdi,%rsi
d1ad(4): sar $0x6,%rax
d1b1(3): shl/sal %cl,%rsi
d1b4(4): or %rsi,0x0(%rbx,%rax,8)
d1b8(4): add $0x1,%rcx
d1bc(7): cmp $0x100,%rcx
d1c3(2): jnz 0xffffffdd(%rip)
d1c5(5): jmp 0xfffffdef(%rip)
d1ca(2): xor %eax,%eax
d1cc(4): nop 0x0(%rax)
d1d0(4): test $0x8,0x0(%rdx,%rax,2)
d1d4(2): jz 0x1e(%rip)
d1d6(5): movzx 0x0(%rbp,%rax,1),%ecx
d1db(3): mov %rdi,%r10
d1de(3): mov %rcx,%rsi
d1e1(3): and $0x3f,%ecx
d1e4(4): shr $0x3,%rsi
d1e8(3): shl/sal %cl,%r10
d1eb(3): and $0x18,%esi
d1ee(4): or %r10,0x0(%rbx,%rsi,1)
d1f2(4): add $0x1,%rax
d1f6(6): cmp $0x100,%rax
d1fc(2): jnz 0xffffffd4(%rip)
d1fe(5): jmp 0xfffffdb6(%rip)
d203(5): call 0xffff4d4d(%rip)
d208(2): xor %ecx,%ecx
d20a(3): test %rbp,%rbp
d20d(3): mov (%rax),%rdx
d210(5): mov $0x1,%edi
d215(6): jnz 0x1d3(%rip)
d21b(5): nop 0x0(%rax,%rax,1)
d220(5): test $0x4,0x1(%rdx,%rcx,2)
d225(2): jz 0x13(%rip)
d227(3): mov %rcx,%rax
d22a(3): mov %rdi,%rsi
d22d(4): sar $0x6,%rax
d231(3): shl/sal %cl,%rsi
d234(4): or %rsi,0x0(%rbx,%rax,8)
d238(4): add $0x1,%rcx
d23c(7): cmp $0x100,%rcx
d243(2): jnz 0xffffffdd(%rip)
d245(5): jmp 0xfffffd6f(%rip)
d24a(2): xor %eax,%eax
d24c(4): nop 0x0(%rax)
d250(4): test $0x2,0x0(%rdx,%rax,2)
d254(2): jz 0x1e(%rip)
d256(5): movzx 0x0(%rbp,%rax,1),%ecx
d25b(3): mov %rdi,%r11
d25e(3): mov %rcx,%rsi
d261(3): and $0x3f,%ecx
d264(4): shr $0x3,%rsi
d268(3): shl/sal %cl,%r11
d26b(3): and $0x18,%esi
d26e(4): or %r11,0x0(%rbx,%rsi,1)
d272(4): add $0x1,%rax
d276(6): cmp $0x100,%rax
d27c(2): jnz 0xffffffd4(%rip)
d27e(5): jmp 0xfffffd36(%rip)
d283(7): lea 0xa413(%rip),%rdi
d28a(5): mov $0x6,%ecx
d28f(3): mov %r12,%rsi
d292(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d294(3): setnbe %al
d297(2): sbb $0x0,%al
d299(2): test %al,%al
d29b(2): jnz 0x81(%rip)
d29d(5): call 0xffff4cb3(%rip)
d2a2(2): xor %ecx,%ecx
d2a4(3): test %rbp,%rbp
d2a7(3): mov (%rax),%rdx
d2aa(5): mov $0x1,%edi
d2af(6): jnz 0x3f8(%rip)
d2b5(3): nop (%rax)
d2b8(5): test $0x40,0x1(%rdx,%rcx,2)
d2bd(2): jz 0x13(%rip)
d2bf(3): mov %rcx,%rax
d2c2(3): mov %rdi,%rsi
d2c5(4): sar $0x6,%rax
d2c9(3): shl/sal %cl,%rsi
d2cc(4): or %rsi,0x0(%rbx,%rax,8)
d2d0(4): add $0x1,%rcx
d2d4(7): cmp $0x100,%rcx
d2db(2): jnz 0xffffffdd(%rip)
d2dd(5): jmp 0xfffffcd7(%rip)
d2e2(2): xor %eax,%eax
d2e4(4): nop 0x0(%rax)
d2e8(5): test $0x2,0x1(%rdx,%rax,2)
d2ed(2): jz 0x1e(%rip)
d2ef(5): movzx 0x0(%rbp,%rax,1),%ecx
d2f4(3): mov %rdi,%r14
d2f7(3): mov %rcx,%rsi
d2fa(3): and $0x3f,%ecx
d2fd(4): shr $0x3,%rsi
d301(3): shl/sal %cl,%r14
d304(3): and $0x18,%esi
d307(4): or %r14,0x0(%rbx,%rsi,1)
d30b(4): add $0x1,%rax
d30f(6): cmp $0x100,%rax
d315(2): jnz 0xffffffd3(%rip)
d317(5): jmp 0xfffffc9d(%rip)
d31c(7): lea 0xa35c(%rip),%rdi
d323(5): mov $0x6,%ecx
d328(3): mov %r12,%rsi
d32b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d32d(3): setnbe %al
d330(2): sbb $0x0,%al
d332(2): test %al,%al
d334(2): jnz 0x4e(%rip)
d336(5): call 0xffff4c1a(%rip)
d33b(2): xor %ecx,%ecx
d33d(3): test %rbp,%rbp
d340(3): mov (%rax),%rax
d343(5): mov $0x1,%edi
d348(6): jnz 0x328(%rip)
d34e(5): test $0x1,0x1(%rax,%rcx,2)
d353(2): jz 0x13(%rip)
d355(3): mov %rcx,%rdx
d358(3): mov %rdi,%rsi
d35b(4): sar $0x6,%rdx
d35f(3): shl/sal %cl,%rsi
d362(4): or %rsi,0x0(%rbx,%rdx,8)
d366(4): add $0x1,%rcx
d36a(7): cmp $0x100,%rcx
d371(2): jnz 0xffffffdd(%rip)
d373(5): jmp 0xfffffc41(%rip)
d378(5): mov $0xc,%eax
d37d(5): jmp 0xfffffc39(%rip)
d382(7): lea 0xa31a(%rip),%rdi
d389(5): mov $0x6,%ecx
d38e(3): mov %r12,%rsi
d391(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d393(3): setnbe %al
d396(2): sbb $0x0,%al
d398(2): test %al,%al
d39a(6): jnz 0xf4(%rip)
d3a0(5): call 0xffff4bb0(%rip)
d3a5(2): xor %ecx,%ecx
d3a7(3): test %rbp,%rbp
d3aa(3): mov (%rax),%rdx
d3ad(5): mov $0x1,%esi
d3b2(6): jnz 0xa2(%rip)
d3b8(4): test $0x1,0x0(%rdx,%rcx,2)
d3bc(2): jz 0x13(%rip)
d3be(3): mov %rcx,%rax
d3c1(3): mov %rsi,%rdi
d3c4(4): sar $0x6,%rax
d3c8(3): shl/sal %cl,%rdi
d3cb(4): or %rdi,0x0(%rbx,%rax,8)
d3cf(4): add $0x1,%rcx
d3d3(7): cmp $0x100,%rcx
d3da(2): jnz 0xffffffde(%rip)
d3dc(5): jmp 0xfffffbd8(%rip)
d3e1(7): nop 0x0(%rax)
d3e8(2): xor %eax,%eax
d3ea(5): test $0x4,0x1(%rdx,%rax,2)
d3ef(2): jz 0x1e(%rip)
d3f1(5): movzx 0x0(%rbp,%rax,1),%ecx
d3f6(3): mov %rdi,%r9
d3f9(3): mov %rcx,%rsi
d3fc(3): and $0x3f,%ecx
d3ff(4): shr $0x3,%rsi
d403(3): shl/sal %cl,%r9
d406(3): and $0x18,%esi
d409(4): or %r9,0x0(%rbx,%rsi,1)
d40d(4): add $0x1,%rax
d411(6): cmp $0x100,%rax
d417(2): jnz 0xffffffd3(%rip)
d419(5): jmp 0xfffffb9b(%rip)
d41e(2): xor %eax,%eax
d420(5): test $0x20,0x1(%rdx,%rax,2)
d425(2): jz 0x1e(%rip)
d427(5): movzx 0x0(%rbp,%rax,1),%ecx
d42c(3): mov %rdi,%r9
d42f(3): mov %rcx,%rsi
d432(3): and $0x3f,%ecx
d435(4): shr $0x3,%rsi
d439(3): shl/sal %cl,%r9
d43c(3): and $0x18,%esi
d43f(4): or %r9,0x0(%rbx,%rsi,1)
d443(4): add $0x1,%rax
d447(6): cmp $0x100,%rax
d44d(2): jnz 0xffffffd3(%rip)
d44f(5): jmp 0xfffffb65(%rip)
d454(2): xor %eax,%eax
d456(5): mov $0x1,%edi
d45b(4): test $0x1,0x0(%rdx,%rax,2)
d45f(2): jz 0x1e(%rip)
d461(5): movzx 0x0(%rbp,%rax,1),%ecx
d466(3): mov %rdi,%r14
d469(3): mov %rcx,%rsi
d46c(3): and $0x3f,%ecx
d46f(4): shr $0x3,%rsi
d473(3): shl/sal %cl,%r14
d476(3): and $0x18,%esi
d479(4): or %r14,0x0(%rbx,%rsi,1)
d47d(4): add $0x1,%rax
d481(6): cmp $0x100,%rax
d487(2): jnz 0xffffffd4(%rip)
d489(5): jmp 0xfffffb2b(%rip)
d48e(7): lea 0xa214(%rip),%rsi
d495(3): mov %r12,%rdi
d498(5): call 0xffff48a8(%rip)
d49d(2): test %eax,%eax
d49f(2): jnz 0x7b(%rip)
d4a1(5): call 0xffff4aaf(%rip)
d4a6(2): xor %ecx,%ecx
d4a8(3): test %rbp,%rbp
d4ab(3): mov (%rax),%rsi
d4ae(5): mov $0x1,%edx
d4b3(2): jnz 0x2c(%rip)
d4b5(5): cmp $0x0,0x0(%rsi,%rcx,2)
d4ba(2): jns 0x13(%rip)
d4bc(3): mov %rcx,%rax
d4bf(3): mov %rdx,%rdi
d4c2(4): sar $0x6,%rax
d4c6(3): shl/sal %cl,%rdi
d4c9(4): or %rdi,0x0(%rbx,%rax,8)
d4cd(4): add $0x1,%rcx
d4d1(7): cmp $0x100,%rcx
d4d8(2): jnz 0xffffffdd(%rip)
d4da(5): jmp 0xfffffada(%rip)
d4df(2): xor %eax,%eax
d4e1(5): mov $0x1,%edi
d4e6(5): cmp $0x0,0x0(%rsi,%rax,2)
d4eb(2): jns 0x1e(%rip)
d4ed(5): movzx 0x0(%rbp,%rax,1),%ecx
d4f2(3): mov %rdi,%r9
d4f5(3): mov %rcx,%rdx
d4f8(3): and $0x3f,%ecx
d4fb(4): shr $0x3,%rdx
d4ff(3): shl/sal %cl,%r9
d502(3): and $0x18,%edx
d505(4): or %r9,0x0(%rbx,%rdx,1)
d509(4): add $0x1,%rax
d50d(6): cmp $0x100,%rax
d513(2): jnz 0xffffffd3(%rip)
d515(5): jmp 0xfffffa9f(%rip)
d51a(7): lea 0xa18e(%rip),%rsi
d521(3): mov %r12,%rdi
d524(5): call 0xffff481c(%rip)
d529(2): test %eax,%eax
d52b(2): jnz 0x79(%rip)
d52d(5): call 0xffff4a23(%rip)
d532(2): xor %ecx,%ecx
d534(3): test %rbp,%rbp
d537(3): mov (%rax),%rsi
d53a(5): mov $0x1,%edx
d53f(2): jnz 0x2b(%rip)
d541(4): test $0x4,0x0(%rsi,%rcx,2)
d545(2): jz 0x13(%rip)
d547(3): mov %rcx,%rax
d54a(3): mov %rdx,%rdi
d54d(4): sar $0x6,%rax
d551(3): shl/sal %cl,%rdi
d554(4): or %rdi,0x0(%rbx,%rax,8)
d558(4): add $0x1,%rcx
d55c(7): cmp $0x100,%rcx
d563(2): jnz 0xffffffde(%rip)
d565(5): jmp 0xfffffa4f(%rip)
d56a(2): xor %eax,%eax
d56c(5): mov $0x1,%edi
d571(4): test $0x4,0x0(%rsi,%rax,2)
d575(2): jz 0x1e(%rip)
d577(5): movzx 0x0(%rbp,%rax,1),%ecx
d57c(3): mov %rdi,%r14
d57f(3): mov %rcx,%rdx
d582(3): and $0x3f,%ecx
d585(4): shr $0x3,%rdx
d589(3): shl/sal %cl,%r14
d58c(3): and $0x18,%edx
d58f(4): or %r14,0x0(%rbx,%rdx,1)
d593(4): add $0x1,%rax
d597(6): cmp $0x100,%rax
d59d(2): jnz 0xffffffd4(%rip)
d59f(5): jmp 0xfffffa15(%rip)
d5a4(7): lea 0xa10a(%rip),%rsi
d5ab(3): mov %r12,%rdi
d5ae(5): call 0xffff4792(%rip)
d5b3(2): test %eax,%eax
d5b5(2): jnz 0x7b(%rip)
d5b7(5): call 0xffff4999(%rip)
d5bc(2): xor %ecx,%ecx
d5be(3): test %rbp,%rbp
d5c1(3): mov (%rax),%rsi
d5c4(5): mov $0x1,%edx
d5c9(2): jnz 0x2c(%rip)
d5cb(5): test $0x10,0x1(%rsi,%rcx,2)
d5d0(2): jz 0x13(%rip)
d5d2(3): mov %rcx,%rax
d5d5(3): mov %rdx,%rdi
d5d8(4): sar $0x6,%rax
d5dc(3): shl/sal %cl,%rdi
d5df(4): or %rdi,0x0(%rbx,%rax,8)
d5e3(4): add $0x1,%rcx
d5e7(7): cmp $0x100,%rcx
d5ee(2): jnz 0xffffffdd(%rip)
d5f0(5): jmp 0xfffff9c4(%rip)
d5f5(2): xor %eax,%eax
d5f7(5): mov $0x1,%edi
d5fc(5): test $0x10,0x1(%rsi,%rax,2)
d601(2): jz 0x1e(%rip)
d603(5): movzx 0x0(%rbp,%rax,1),%ecx
d608(3): mov %rdi,%r9
d60b(3): mov %rcx,%rdx
d60e(3): and $0x3f,%ecx
d611(4): shr $0x3,%rdx
d615(3): shl/sal %cl,%r9
d618(3): and $0x18,%edx
d61b(4): or %r9,0x0(%rbx,%rdx,1)
d61f(4): add $0x1,%rax
d623(6): cmp $0x100,%rax
d629(2): jnz 0xffffffd3(%rip)
d62b(5): jmp 0xfffff989(%rip)
d630(5): mov $0x4,%eax
d635(5): jmp 0xfffff981(%rip)
d63a(2): xor %eax,%eax
d63c(5): test $0x8,0x1(%rdx,%rax,2)
d641(2): jz 0x1e(%rip)
d643(5): movzx 0x0(%rbp,%rax,1),%ecx
d648(3): mov %rdi,%r14
d64b(3): mov %rcx,%rsi
d64e(3): and $0x3f,%ecx
d651(4): shr $0x3,%rsi
d655(3): shl/sal %cl,%r14
d658(3): and $0x18,%esi
d65b(4): or %r14,0x0(%rbx,%rsi,1)
d65f(4): add $0x1,%rax
d663(6): cmp $0x100,%rax
d669(2): jnz 0xffffffd3(%rip)
d66b(5): jmp 0xfffff949(%rip)
d670(2): xor %edx,%edx
d672(5): test $0x1,0x1(%rax,%rdx,2)
d677(2): jz 0x1e(%rip)
d679(5): movzx 0x0(%rbp,%rdx,1),%ecx
d67e(3): mov %rdi,%r9
d681(3): mov %rcx,%rsi
d684(3): and $0x3f,%ecx
d687(4): shr $0x3,%rsi
d68b(3): shl/sal %cl,%r9
d68e(3): and $0x18,%esi
d691(4): or %r9,0x0(%rbx,%rsi,1)
d695(4): add $0x1,%rdx
d699(7): cmp $0x100,%rdx
d6a0(2): jnz 0xffffffd2(%rip)
d6a2(5): jmp 0xfffff912(%rip)
d6a7(2): xor %eax,%eax
d6a9(5): test $0x40,0x1(%rdx,%rax,2)
d6ae(2): jz 0x1e(%rip)
d6b0(5): movzx 0x0(%rbp,%rax,1),%ecx
d6b5(3): mov %rdi,%r14
d6b8(3): mov %rcx,%rsi
d6bb(3): and $0x3f,%ecx
d6be(4): shr $0x3,%rsi
d6c2(3): shl/sal %cl,%r14
d6c5(3): and $0x18,%esi
d6c8(4): or %r14,0x0(%rbx,%rsi,1)
d6cc(4): add $0x1,%rax
d6d0(6): cmp $0x100,%rax
d6d6(2): jnz 0xffffffd3(%rip)
d6d8(5): jmp 0xfffff8dc(%rip)

"build_charclass_op" :
d6e0(2): push %r15
d6e2(2): push %r14
d6e4(3): mov %rdx,%r14
d6e7(2): push %r13
d6e9(2): push %r12
d6eb(3): mov %rcx,%r13
d6ee(1): push %rbp
d6ef(1): push %rbx
d6f0(3): mov %rdi,%rbp
d6f3(5): mov $0x20,%edi
d6f8(3): mov %r8d,%r12d
d6fb(4): sub $0x58,%rsp
d6ff(4): mov %rsi,(%rsp)
d703(5): mov $0x1,%esi
d708(5): mov %r9,0x8(%rsp)
d70d(9): mov $0x28,%rax
d716(5): mov %rax,0x48(%rsp)
d71b(2): xor %eax,%eax
d71d(9): mov $0x0,0x18(%rsp)
d726(5): call 0xffff460a(%rip)
d72b(3): test %rax,%rax
d72e(6): jz 0x1c2(%rip)
d734(5): mov $0x1,%esi
d739(5): mov $0x50,%edi
d73e(3): mov %rax,%rbx
d741(5): call 0xffff45ef(%rip)
d746(3): test %rax,%rax
d749(3): mov %rax,%r15
d74c(6): jz 0x1b4(%rip)
d752(4): movzx 0x20(%rax),%eax
d756(4): sub $0x8,%rsp
d75a(3): mov %r12d,%edx
d75d(2): push $0x0
d75f(3): and $0x1,%edx
d762(5): mov 0x10(%rsp),%rdi
d767(4): lea 0x48(%r15),%rcx
d76b(3): mov %r14,%r9
d76e(3): mov %rbx,%rsi
d771(5): lea 0x28(%rsp),%r8
d776(3): and $0xfe,%eax
d779(2): or %edx,%eax
d77b(4): lea 0x18(%r15),%rdx
d77f(4): mov %al,0x20(%r15)
d783(5): call 0xfffff74d(%rip)
d788(2): test %eax,%eax
d78a(1): pop %rdx
d78b(1): pop %rcx
d78c(6): jnz 0x194(%rip)
d792(5): movsx 0x0(%r13),%rcx
d797(5): mov $0x1,%esi
d79c(2): test %cl,%cl
d79e(2): jz 0x3c(%rip)
d7a0(4): lea 0x3f(%rcx),%rax
d7a4(3): test %rcx,%rcx
d7a7(3): mov %rcx,%rdx
d7aa(4): cmovns %rcx,%rax
d7ae(4): sar $0x3f,%rdx
d7b2(4): add $0x1,%r13
d7b6(4): shr $0x3a,%rdx
d7ba(4): sar $0x6,%rax
d7be(3): add %rdx,%rcx
d7c1(3): and $0x3f,%ecx
d7c4(3): sub %rdx,%rcx
d7c7(3): mov %rsi,%rdx
d7ca(3): shl/sal %cl,%rdx
d7cd(5): movsx 0x0(%r13),%rcx
d7d2(4): or %rdx,0x0(%rbx,%rax,8)
d7d6(2): test %cl,%cl
d7d8(2): jnz 0xffffffc8(%rip)
d7da(3): test %r12b,%r12b
d7dd(2): jz 0x15(%rip)
d7df(4): lea 0x20(%rbx),%rdx
d7e3(3): mov %rbx,%rax
d7e6(3): not (%rax)
d7e9(4): add $0x8,%rax
d7ed(3): cmp %rax,%rdx
d7f0(2): jnz 0xfffffff6(%rip)
d7f2(7): cmp $0x1,0xb4(%rbp)
d7f9(2): jle 0x1a(%rip)
d7fb(4): mov 0x78(%rbp),%rcx
d7ff(2): xor %eax,%eax
d801(4): mov 0x0(%rcx,%rax,1),%rdx
d805(4): and %rdx,0x0(%rbx,%rax,1)
d809(4): add $0x8,%rax
d80d(4): cmp $0x20,%rax
d811(2): jnz 0xfffffff0(%rip)
d813(5): lea 0x20(%rsp),%r9
d818(4): lea 0x70(%rbp),%r12
d81c(7): lea 0x80(%rbp),%r13
d823(2): xor %ecx,%ecx
d825(2): xor %edx,%edx
d827(5): mov $0x3,0x28(%rsp)
d82c(3): mov %r9,%r8
d82f(3): mov %r13,%rsi
d832(3): mov %r12,%rdi
d835(5): mov %rbx,0x20(%rsp)
d83a(4): mov %r9,(%rsp)
d83e(5): call 0xffffcb52(%rip)
d843(3): test %rax,%rax
d846(3): mov %rax,%r14
d849(6): jz 0x97(%rip)
d84f(7): cmp $0x1,0xb4(%rbp)
d856(2): jle 0x7a(%rip)
d858(7): or $0x2,0xb0(%rbp)
d85f(4): mov (%rsp),%r9
d863(2): xor %ecx,%ecx
d865(2): xor %edx,%edx
d867(3): mov %r13,%rsi
d86a(3): mov %r12,%rdi
d86d(5): mov $0x6,0x28(%rsp)
d872(5): mov %r15,0x20(%rsp)
d877(3): mov %r9,%r8
d87a(5): call 0xffffcb16(%rip)
d87f(3): test %rax,%rax
d882(2): jz 0x5e(%rip)
d884(5): lea 0x30(%rsp),%r8
d889(3): mov %r14,%rdx
d88c(3): mov %rax,%rcx
d88f(3): mov %r13,%rsi
d892(3): mov %r12,%rdi
d895(5): mov $0xa,0x38(%rsp)
d89a(5): call 0xffffcaf6(%rip)
d89f(3): mov %rax,%r14
d8a2(5): mov 0x48(%rsp),%rdi
d8a7(9): xor $0x28,%rdi
d8b0(3): mov %r14,%rax
d8b3(6): jnz 0x92(%rip)
d8b9(4): add $0x58,%rsp
d8bd(1): pop %rbx
d8be(1): pop %rbp
d8bf(2): pop %r12
d8c1(2): pop %r13
d8c3(2): pop %r14
d8c5(2): pop %r15
d8c7(1): ret near (%rsp)
d8c8(8): nop 0x0(%rax,%rax,1)
d8d0(3): mov %r15,%rdi
d8d3(5): call 0xffffb51d(%rip)
d8d8(2): jmp 0xffffffca(%rip)
d8da(6): nop 0x0(%rax,%rax,1)
d8e0(3): mov %rbx,%rdi
d8e3(5): call 0xffff421d(%rip)
d8e8(3): mov %r15,%rdi
d8eb(5): call 0xffffb505(%rip)
d8f0(5): mov 0x8(%rsp),%rax
d8f5(3): xor %r14d,%r14d
d8f8(6): mov $0xc,(%rax)
d8fe(2): jmp 0xffffffa4(%rip)
d900(3): mov %rbx,%rdi
d903(3): xor %r14d,%r14d
d906(5): call 0xffff41fa(%rip)
d90b(5): mov 0x8(%rsp),%rax
d910(6): mov $0xc,(%rax)
d916(2): jmp 0xffffff8c(%rip)
d918(8): nop 0x0(%rax,%rax,1)
d920(3): mov %rbx,%rdi
d923(3): mov %eax,(%rsp)
d926(3): xor %r14d,%r14d
d929(5): call 0xffff41d7(%rip)
d92e(3): mov %r15,%rdi
d931(5): call 0xffffb4bf(%rip)
d936(5): mov 0x8(%rsp),%rdi
d93b(3): mov (%rsp),%eax
d93e(2): mov %eax,(%rdi)
d940(5): jmp 0xffffff62(%rip)
d945(5): call 0xffff42db(%rip)

"re_compile_fastmap_iter.isra.30" :
d950(2): push %r15
d952(2): push %r14
d954(3): mov %rdi,%rax
d957(2): push %r13
d959(2): push %r12
d95b(1): push %rbp
d95c(1): push %rbx
d95d(2): xor %ebx,%ebx
d95f(3): mov %rcx,%rbp
d962(7): sub $0x178,%rsp
d969(3): mov (%rax),%rax
d96c(5): mov %rdi,0x30(%rsp)
d971(5): mov %rsi,0x20(%rsp)
d976(9): mov $0x28,%rdi
d97f(8): mov %rdi,0x168(%rsp)
d987(2): xor %edi,%edi
d989(7): cmp $0x1,0xb4(%rax)
d990(5): mov %rdx,0x28(%rsp)
d995(5): mov %rax,0x8(%rsp)
d99a(2): jnz 0x19(%rip)
d99c(5): mov 0x30(%rsp),%rax
d9a1(4): mov 0x18(%rax),%rax
d9a5(3): mov %rax,%rbx
d9a8(4): mov %rax,(%rsp)
d9ac(4): shr $0x16,%rbx
d9b0(3): and $0x1,%ebx
d9b3(5): mov 0x20(%rsp),%rax
d9b8(4): cmp $0x0,(%rax)
d9bc(6): jle 0x411(%rip)
d9c2(5): lea 0x58(%rsp),%rax
d9c7(8): mov $0x0,(%rsp)
d9cf(5): mov %rax,0x40(%rsp)
d9d4(5): lea 0x54(%rsp),%rax
d9d9(5): mov %rax,0x48(%rsp)
d9de(5): lea 0x60(%rsp),%rax
d9e3(5): mov %rax,0x38(%rsp)
d9e8(2): jmp 0x46(%rip)
d9ea(6): nop 0x0(%rax,%rax,1)
d9f0(3): cmp $0x3,%eax
d9f3(6): jz 0x2f3(%rip)
d9f9(3): cmp $0x6,%eax
d9fc(6): jz 0x18c(%rip)
da02(3): and $0xfd,%edx
da05(3): cmp $0x5,%dl
da08(6): jz 0x3fc(%rip)
da0e(3): cmp $0x2,%eax
da11(6): jz 0x353(%rip)
da17(5): mov 0x20(%rsp),%rdi
da1c(5): add $0x1,(%rsp)
da21(4): mov (%rsp),%rax
da25(3): cmp (%rdi),%rax
da28(6): jnl 0x3a5(%rip)
da2e(5): mov 0x28(%rsp),%rax
da33(4): mov (%rsp),%rdi
da37(3): mov (%rax),%rax
da3a(4): mov 0x0(%rax,%rdi,8),%r12
da3e(5): mov 0x8(%rsp),%rax
da43(3): mov (%rax),%rcx
da46(3): mov %r12,%rax
da49(4): shl/sal $0x4,%rax
da4d(5): mov %rax,0x10(%rsp)
da52(4): lea 0x0(%rcx,%rax,1),%rsi
da56(4): movzx 0x8(%rsi),%eax
da5a(3): cmp $0x1,%eax
da5d(2): mov %eax,%edx
da5f(2): jnz 0xffffff91(%rip)
da61(4): movzx (%rsi),%r13d
da65(2): test %ebx,%ebx
da67(6): mov $0x1,0x0(%rbp,%r13,1)
da6d(2): jz 0x13(%rip)
da6f(5): call 0xffff44d1(%rip)
da74(3): mov (%rax),%rax
da77(4): movsxd 0x0(%rax,%r13,4),%rax
da7b(5): mov $0x1,0x0(%rbp,%rax,1)
da80(5): mov 0x30(%rsp),%rax
da85(4): test $0x40,0x1a(%rax)
da89(2): jz 0xffffff8e(%rip)
da8b(5): mov 0x8(%rsp),%rsi
da90(7): cmp $0x1,0xb4(%rsi)
da97(6): jle 0xffffff80(%rip)
da9d(3): mov (%rsi),%rax
daa0(5): mov 0x10(%rsp),%rdi
daa5(4): movzx 0x0(%rax,%rdi,1),%edx
daa9(4): mov %dl,0x60(%rsp)
daad(5): lea 0x1(%r12),%rdx
dab2(4): cmp %rdx,0x10(%rsi)
dab6(6): jbe 0x340(%rip)
dabc(5): lea 0x10(%rax,%rdi,1),%rcx
dac1(3): mov 0x8(%rcx),%eax
dac4(5): and $0x2000ff,%eax
dac9(5): cmp $0x200001,%eax
dace(6): jnz 0x328(%rip)
dad4(4): add $0x20,%rdi
dad8(3): mov %rdi,%r13
dadb(5): mov 0x38(%rsp),%rdi
dae0(4): lea 0x1(%rdi),%rax
dae4(2): jmp 0x27(%rip)
dae6(a): nop 0x0(%rax,%rax,1)
daf0(3): mov (%rsi),%rcx
daf3(3): add %r13,%rcx
daf6(4): add $0x10,%r13
dafa(3): mov 0x8(%rcx),%edx
dafd(6): and $0x2000ff,%edx
db03(6): cmp $0x200001,%edx
db09(2): jnz 0x1b(%rip)
db0b(3): movzx (%rcx),%edx
db0e(4): add $0x1,%rax
db12(3): mov %dl,0xffffffff(%rax)
db15(3): mov %rax,%rdx
db18(3): sub %rdi,%rdx
db1b(3): add %r12,%rdx
db1e(4): cmp %rdx,0x10(%rsi)
db22(2): jnbe 0xffffffce(%rip)
db24(5): mov 0x38(%rsp),%rsi
db29(5): mov 0x40(%rsp),%rcx
db2e(5): mov 0x48(%rsp),%rdi
db33(3): sub %rsi,%rax
db36(7): mov $0x0,(%rcx)
db3d(3): mov %rax,%r12
db40(3): mov %rax,%rdx
db43(5): call 0xffff9fed(%rip)
db48(3): cmp %rax,%r12
db4b(6): jnz 0xfffffecc(%rip)
db51(4): mov 0x54(%rsp),%edi
db55(5): call 0xffff434b(%rip)
db5a(5): mov 0x40(%rsp),%rdx
db5f(5): mov 0x38(%rsp),%rdi
db64(2): mov %eax,%esi
db66(5): call 0xffff424a(%rip)
db6b(4): cmp $0xffffffff,%rax
db6f(6): jz 0xfffffea8(%rip)
db75(5): movzx 0x60(%rsp),%eax
db7a(5): mov $0x1,0x0(%rbp,%rax,1)
db7f(5): jmp 0xfffffe98(%rip)
db84(4): nop 0x0(%rax)
db88(5): mov 0x8(%rsp),%rax
db8d(3): mov (%rsi),%r12
db90(7): cmp $0x1,0xb4(%rax)
db97(2): jle 0x26(%rip)
db99(6): cmp $0x0,0x48(%r12)
db9f(6): jnz 0x100(%rip)
dba5(6): test $0x1,0x20(%r12)
dbab(6): jnz 0xf4(%rip)
dbb1(6): cmp $0x0,0x40(%r12)
dbb7(6): jnz 0xe8(%rip)
dbbd(3): xor %r13d,%r13d
dbc0(6): cmp $0x0,0x28(%r12)
dbc6(6): jle 0xfffffe51(%rip)
dbcc(3): mov %r12,%r15
dbcf(5): mov 0x40(%rsp),%r14
dbd4(3): mov %rbp,%r12
dbd7(3): mov %r13,%rbp
dbda(3): mov %ebx,%r13d
dbdd(2): jmp 0x10(%rip)
dbdf(4): add $0x1,%rbp
dbe3(4): cmp 0x28(%r15),%rbp
dbe7(6): jnl 0xad(%rip)
dbed(7): mov $0x0,(%r14)
dbf4(3): mov (%r15),%rax
dbf7(3): mov %r14,%rdx
dbfa(5): mov 0x38(%rsp),%rdi
dbff(8): lea 0x0(,%rbp,4),%rbx
dc07(3): mov 0x0(%rax,%rbp,4),%esi
dc0a(5): call 0xffff41a6(%rip)
dc0f(4): cmp $0xffffffff,%rax
dc13(2): jz 0x2c(%rip)
dc15(5): movzx 0x60(%rsp),%edx
dc1a(3): test %r13d,%r13d
dc1d(5): mov $0x1,0x0(%r12,%rdx,1)
dc22(5): mov %rdx,0x10(%rsp)
dc27(2): jz 0x18(%rip)
dc29(5): call 0xffff4317(%rip)
dc2e(5): mov 0x10(%rsp),%rdx
dc33(3): mov (%rax),%rax
dc36(4): movsxd 0x0(%rax,%rdx,4),%rax
dc3a(5): mov $0x1,0x0(%r12,%rax,1)
dc3f(5): mov 0x30(%rsp),%rax
dc44(4): test $0x40,0x1a(%rax)
dc48(2): jz 0xffffff97(%rip)
dc4a(5): mov 0x8(%rsp),%rax
dc4f(7): cmp $0x1,0xb4(%rax)
dc56(2): jle 0xffffff89(%rip)
dc58(3): mov (%r15),%rax
dc5b(3): mov 0x0(%rax,%rbx,1),%edi
dc5e(5): call 0xffff4242(%rip)
dc63(5): mov 0x38(%rsp),%rdi
dc68(3): mov %r14,%rdx
dc6b(2): mov %eax,%esi
dc6d(5): call 0xffff4143(%rip)
dc72(4): cmp $0xffffffff,%rax
dc76(6): jz 0xffffff69(%rip)
dc7c(5): movzx 0x60(%rsp),%eax
dc81(4): add $0x1,%rbp
dc85(5): mov $0x1,0x0(%r12,%rax,1)
dc8a(4): cmp 0x28(%r15),%rbp
dc8e(6): jl 0xffffff5f(%rip)
dc94(3): mov %r13d,%ebx
dc97(3): mov %r12,%rbp
dc9a(5): jmp 0xfffffd7d(%rip)
dc9f(5): mov 0x40(%rsp),%r12
dca4(5): mov 0x48(%rsp),%r13
dca9(5): mov $0x0,0x54(%rsp)
dcae(2): nop 
dcb0(2): xor %edi,%edi
dcb2(8): mov $0x0,(%r12)
dcba(3): mov %r12,%rcx
dcbd(5): mov $0x1,%edx
dcc2(3): mov %r13,%rsi
dcc5(5): call 0xffff9e6b(%rip)
dcca(4): cmp $0xfffffffe,%rax
dcce(2): jnz 0xc(%rip)
dcd0(5): movzx 0x54(%rsp),%eax
dcd5(5): mov $0x1,0x0(%rbp,%rax,1)
dcda(5): add $0x1,0x54(%rsp)
dcdf(2): jnz 0xffffffd1(%rip)
dce1(5): jmp 0xfffffd36(%rip)
dce6(3): mov %rbp,%r13
dce9(3): xor %r12d,%r12d
dcec(9): mov $0x0,0x18(%rsp)
dcf5(5): mov 0x10(%rsp),%rax
dcfa(5): mov 0x18(%rsp),%rsi
dcff(3): xor %r14d,%r14d
dd02(4): mov 0x0(%rcx,%rax,1),%rax
dd06(4): mov 0x0(%rax,%rsi,1),%r15
dd0a(6): nop 0x0(%rax,%rax,1)
dd10(4): bt %r14,%r15
dd14(2): jnb 0x21(%rip)
dd16(2): test %ebx,%ebx
dd18(6): mov $0x1,0x0(%r13,%r14,1)
dd1e(2): jz 0x17(%rip)
dd20(5): call 0xffff4220(%rip)
dd25(3): mov (%rax),%rax
dd28(4): lea 0x0(%r12,%r14,1),%rdx
dd2c(4): movsxd 0x0(%rax,%rdx,4),%rax
dd30(5): mov $0x1,0x0(%rbp,%rax,1)
dd35(4): add $0x1,%r14
dd39(4): cmp $0x40,%r14
dd3d(2): jnz 0xffffffd3(%rip)
dd3f(4): add $0x40,%r12
dd43(6): add $0x8,0x18(%rsp)
dd49(4): add $0x40,%r13
dd4d(7): cmp $0x100,%r12
dd54(6): jz 0xfffffcc3(%rip)
dd5a(5): mov 0x8(%rsp),%rax
dd5f(3): mov (%rax),%rcx
dd62(2): jmp 0xffffff93(%rip)
dd64(8): movdqa 0xa114(%rip),%xmm0
dd6c(4): movups %xmm0,0x0(%rbp)
dd70(4): movups %xmm0,0x10(%rbp)
dd74(4): movups %xmm0,0x20(%rbp)
dd78(4): movups %xmm0,0x30(%rbp)
dd7c(4): movups %xmm0,0x40(%rbp)
dd80(4): movups %xmm0,0x50(%rbp)
dd84(4): movups %xmm0,0x60(%rbp)
dd88(4): movups %xmm0,0x70(%rbp)
dd8c(7): movups %xmm0,0x80(%rbp)
dd93(7): movups %xmm0,0x90(%rbp)
dd9a(7): movups %xmm0,0xa0(%rbp)
dda1(7): movups %xmm0,0xb0(%rbp)
dda8(7): movups %xmm0,0xc0(%rbp)
ddaf(7): movups %xmm0,0xd0(%rbp)
ddb6(7): movups %xmm0,0xe0(%rbp)
ddbd(7): movups %xmm0,0xf0(%rbp)
ddc4(5): mov 0x30(%rsp),%rax
ddc9(4): or $0x1,0x38(%rax)
ddcd(8): mov 0x168(%rsp),%rax
ddd5(9): xor $0x28,%rax
ddde(6): jnz 0x94(%rip)
dde4(7): add $0x178,%rsp
ddeb(1): pop %rbx
ddec(1): pop %rbp
dded(2): pop %r12
ddef(2): pop %r13
ddf1(2): pop %r14
ddf3(2): pop %r15
ddf5(1): ret near (%rsp)
ddf6(5): mov 0x38(%rsp),%rax
ddfb(4): add $0x1,%rax
ddff(5): jmp 0xfffffd25(%rip)
de04(8): movdqa 0xa074(%rip),%xmm0
de0c(3): cmp $0x2,%eax
de0f(4): movups %xmm0,0x0(%rbp)
de13(4): movups %xmm0,0x10(%rbp)
de17(4): movups %xmm0,0x20(%rbp)
de1b(4): movups %xmm0,0x30(%rbp)
de1f(4): movups %xmm0,0x40(%rbp)
de23(4): movups %xmm0,0x50(%rbp)
de27(4): movups %xmm0,0x60(%rbp)
de2b(4): movups %xmm0,0x70(%rbp)
de2f(7): movups %xmm0,0x80(%rbp)
de36(7): movups %xmm0,0x90(%rbp)
de3d(7): movups %xmm0,0xa0(%rbp)
de44(7): movups %xmm0,0xb0(%rbp)
de4b(7): movups %xmm0,0xc0(%rbp)
de52(7): movups %xmm0,0xd0(%rbp)
de59(7): movups %xmm0,0xe0(%rbp)
de60(7): movups %xmm0,0xf0(%rbp)
de67(6): jnz 0xffffff66(%rip)
de6d(5): jmp 0xffffff57(%rip)
de72(5): call 0xffff3dae(%rip)

"check_node_accept_bytes.isra.31" :
de80(4): shl/sal $0x4,%rdx
de84(2): push %r13
de86(2): push %r12
de88(4): lea 0x0(%rdi,%rdx,1),%r9
de8c(1): push %rbp
de8d(1): push %rbx
de8e(4): sub $0x8,%rsp
de92(5): movzx 0x8(%r9),%r11d
de97(4): cmp $0x7,%r11b
de9b(6): jz 0x115(%rip)
dea1(7): cmp $0x1,0x90(%rcx)
dea8(6): jz 0xc8(%rip)
deae(3): mov %rsi,%rbx
deb1(3): mov %rcx,%rdi
deb4(3): mov %r8,%rsi
deb7(3): mov %rcx,%r10
deba(5): call 0xffffb766(%rip)
debf(4): cmp $0x5,%r11b
dec3(2): mov %eax,%ebp
dec5(6): jz 0xbb(%rip)
decb(4): cmp $0x6,%r11b
decf(6): jnz 0xa1(%rip)
ded5(3): cmp $0x1,%eax
ded8(6): jle 0x98(%rip)
dede(3): mov (%r9),%r13
dee1(4): mov 0x40(%r13),%rsi
dee5(4): mov 0x28(%r13),%rdx
dee9(3): test %rsi,%rsi
deec(2): jnz 0xd(%rip)
deee(5): cmp $0x0,0x48(%r13)
def3(6): jz 0xf5(%rip)
def9(4): mov 0x10(%r10),%rax
defd(3): test %rdx,%rdx
df00(4): mov 0x0(%rax,%r8,4),%r12d
df04(2): jle 0x23(%rip)
df06(4): mov 0x0(%r13),%rcx
df0a(3): cmp (%rcx),%r12d
df0d(2): jz 0x55(%rip)
df0f(2): xor %eax,%eax
df11(2): jmp 0xd(%rip)
df13(5): nop 0x0(%rax,%rax,1)
df18(4): cmp 0x0(%rcx,%rax,4),%r12d
df1c(2): jz 0x46(%rip)
df1e(4): add $0x1,%rax
df22(3): cmp %rdx,%rax
df25(2): jnz 0xfffffff3(%rip)
df27(4): mov 0x48(%r13),%rax
df2b(3): test %rax,%rax
df2e(6): jle 0xde(%rip)
df34(2): xor %ebx,%ebx
df36(2): jmp 0x18(%rip)
df38(8): nop 0x0(%rax,%rax,1)
df40(4): add $0x1,%rbx
df44(4): cmp 0x48(%r13),%rbx
df48(6): jnl 0xc0(%rip)
df4e(4): mov 0x18(%r13),%rax
df52(3): mov %r12d,%edi
df55(4): mov 0x0(%rax,%rbx,8),%rsi
df59(5): call 0xffff3c67(%rip)
df5e(2): test %eax,%eax
df60(2): jz 0xffffffe0(%rip)
df62(5): test $0x1,0x20(%r13)
df67(2): jz 0xb(%rip)
df69(7): nop 0x0(%rax)
df70(2): xor %ebp,%ebp
df72(4): add $0x8,%rsp
df76(2): mov %ebp,%eax
df78(1): pop %rbx
df79(1): pop %rbp
df7a(2): pop %r12
df7c(2): pop %r13
df7e(1): ret near (%rsp)
df7f(1): nop 
df80(3): cmp $0x1,%eax
df83(2): jle 0xffffffed(%rip)
df85(3): mov (%rbx),%rax
df88(2): test $0x40,%al
df8a(2): jz 0x16(%rip)
df8c(2): test $0x80,%al
df8e(2): jz 0xffffffe4(%rip)
df90(4): mov 0x8(%r10),%rax
df94(5): cmp $0x0,0x0(%rax,%r8,1)
df99(2): jz 0xffffffd7(%rip)
df9b(2): jmp 0xffffffd7(%rip)
df9d(3): nop (%rax)
dfa0(4): mov 0x8(%r10),%rdx
dfa4(5): cmp $0xa,0x0(%rdx,%r8,1)
dfa9(2): jnz 0xffffffe3(%rip)
dfab(2): jmp 0xffffffc5(%rip)
dfad(3): nop (%rax)
dfb0(4): mov 0x8(%rcx),%rdx
dfb4(4): lea 0x0(%rdx,%r8,1),%rsi
dfb8(3): movzx (%rsi),%eax
dfbb(2): cmp $0xc1,%al
dfbd(2): jbe 0xffffffb3(%rip)
dfbf(4): mov 0x58(%rcx),%rcx
dfc3(4): lea 0x1(%r8),%rdi
dfc7(3): cmp %rcx,%rdi
dfca(2): jnl 0xffffffa6(%rip)
dfcc(2): cmp $0xdf,%al
dfce(6): movzx 0x1(%rdx,%r8,1),%edx
dfd4(2): jnbe 0x6a(%rip)
dfd6(3): add $0x80,%edx
dfd9(5): mov $0x2,%ebp
dfde(3): cmp $0x3f,%dl
dfe1(2): jnbe 0xffffff8f(%rip)
dfe3(2): jmp 0xffffff8f(%rip)
dfe5(3): nop (%rax)
dfe8(3): test %rdx,%rdx
dfeb(6): jnz 0xffffff0e(%rip)
dff1(5): test $0x1,0x20(%r13)
dff6(6): jnz 0xffffff7c(%rip)
dffc(5): jmp 0xffffff74(%rip)
e001(7): nop 0x0(%rax)
e008(4): mov 0x40(%r13),%rsi
e00c(3): test %rsi,%rsi
e00f(2): jle 0xffffffe2(%rip)
e011(4): mov 0x8(%r13),%rdx
e015(2): xor %eax,%eax
e017(2): jmp 0x12(%rip)
e019(7): nop 0x0(%rax)
e020(4): add $0x1,%rax
e024(3): cmp %rsi,%rax
e027(2): jz 0xffffffca(%rip)
e029(4): cmp 0x0(%rdx,%rax,4),%r12d
e02d(2): jl 0xfffffff3(%rip)
e02f(4): mov 0x10(%r13),%rcx
e033(4): cmp 0x0(%rcx,%rax,4),%r12d
e037(2): jnle 0xffffffe9(%rip)
e039(5): jmp 0xffffff29(%rip)
e03e(2): cmp $0xef,%al
e040(2): jnbe 0x48(%rip)
e042(2): cmp $0xe0,%al
e044(2): jnz 0xb(%rip)
e046(3): cmp $0x9f,%dl
e049(6): jbe 0xffffff27(%rip)
e04f(5): mov $0x3,%ebp
e054(3): movsxd %ebp,%rdi
e057(3): add %rdi,%r8
e05a(3): cmp %r8,%rcx
e05d(6): jl 0xffffff13(%rip)
e063(5): mov $0x1,%eax
e068(2): jmp 0xf(%rip)
e06a(4): add $0x1,%rax
e06e(3): cmp %rax,%rdi
e071(6): jle 0xffffff01(%rip)
e077(4): movzx 0x0(%rsi,%rax,1),%ebx
e07b(3): lea 0xffffff80(%rbx),%edx
e07e(3): cmp $0x3f,%dl
e081(2): jbe 0xffffffe9(%rip)
e083(5): jmp 0xfffffeed(%rip)
e088(2): cmp $0xf7,%al
e08a(2): jnbe 0x16(%rip)
e08c(2): cmp $0xf0,%al
e08e(2): jnz 0xb(%rip)
e090(3): cmp $0x8f,%dl
e093(6): jbe 0xfffffedd(%rip)
e099(5): mov $0x4,%ebp
e09e(2): jmp 0xffffffb6(%rip)
e0a0(2): cmp $0xfb,%al
e0a2(2): jnbe 0x16(%rip)
e0a4(2): cmp $0xf8,%al
e0a6(2): jnz 0xb(%rip)
e0a8(3): cmp $0x87,%dl
e0ab(6): jbe 0xfffffec5(%rip)
e0b1(5): mov $0x5,%ebp
e0b6(2): jmp 0xffffff9e(%rip)
e0b8(2): cmp $0xfd,%al
e0ba(6): jnbe 0xfffffeb6(%rip)
e0c0(2): cmp $0xfc,%al
e0c2(2): jnz 0xb(%rip)
e0c4(3): cmp $0x83,%dl
e0c7(6): jbe 0xfffffea9(%rip)
e0cd(5): mov $0x6,%ebp
e0d2(2): jmp 0xffffff82(%rip)

"check_arrival" :
e0e0(2): push %r15
e0e2(2): push %r14
e0e4(3): mov %rdi,%r15
e0e7(2): push %r13
e0e9(2): push %r12
e0eb(1): push %rbp
e0ec(1): push %rbx
e0ed(3): mov %rcx,%rbp
e0f0(3): mov %rdx,%rbx
e0f3(7): sub $0xd8,%rsp
e0fa(7): mov 0x98(%rdi),%rcx
e101(4): mov 0x8(%rsi),%r13
e105(9): mov $0x28,%rax
e10e(8): mov %rax,0xc8(%rsp)
e116(2): xor %eax,%eax
e118(3): mov %rdx,%rax
e11b(5): mov %rsi,0x60(%rsp)
e120(5): mov %r8,0x78(%rsp)
e125(4): shl/sal $0x4,%rax
e129(3): add (%rcx),%rax
e12c(5): mov %r9,0x40(%rsp)
e131(5): mov %rcx,0x30(%rsp)
e136(b): mov $0x0,0x88(%rsp)
e141(3): mov (%rax),%rax
e144(5): mov %rax,0x48(%rsp)
e149(7): movsxd 0xe0(%rdi),%rax
e150(3): add %r9,%rax
e153(3): cmp %r13,%rax
e156(6): jnl 0x620(%rip)
e15c(5): mov 0x60(%rsp),%rax
e161(7): mov 0xb8(%r15),%rdx
e168(4): mov 0x48(%r15),%rcx
e16c(3): mov (%rax),%r12
e16f(4): mov 0x10(%rax),%r14
e173(5): mov %rdx,0x68(%rsp)
e178(5): mov %rcx,0x70(%rsp)
e17d(7): mov 0xa0(%r15),%edx
e184(3): test %r12,%r12
e187(7): mov %r14,0xb8(%r15)
e18e(6): jz 0x3e2(%rip)
e194(5): lea 0xffffffff(%r12),%rsi
e199(4): mov %r12,0x48(%r15)
e19d(3): mov %r15,%rdi
e1a0(5): call 0xffffd310(%rip)
e1a5(3): cmp %rbp,%r12
e1a8(3): mov %eax,%r13d
e1ab(6): jz 0x3d8(%rip)
e1b1(4): mov 0x0(%r14,%r12,8),%rbp
e1b5(3): test %rbp,%rbp
e1b8(2): jz 0xc(%rip)
e1ba(4): test $0x40,0x68(%rbp)
e1be(6): jnz 0x522(%rip)
e1c4(4): pxor %xmm0,%xmm0
e1c8(c): mov $0x0,0xa0(%rsp)
e1d4(8): movaps %xmm0,0x90(%rsp)
e1dc(5): cmp 0x40(%rsp),%r12
e1e1(6): jnl 0x327(%rip)
e1e7(7): mov 0xe0(%r15),%ecx
e1ee(2): test %ecx,%ecx
e1f0(6): js 0x318(%rip)
e1f6(8): lea 0x90(%rsp),%rbx
e1fe(8): lea 0x8(,%r12,8),%rax
e206(4): mov %r12,(%rsp)
e20a(9): mov $0x0,0x20(%rsp)
e213(5): mov %rbx,0x8(%rsp)
e218(8): lea 0xb0(%rsp),%rbx
e220(5): mov %rax,0x10(%rsp)
e225(7): mov 0xb8(%r15),%rax
e22c(5): mov %rbx,0x18(%rsp)
e231(8): lea 0x8c(%rsp),%rbx
e239(5): mov %rbx,0x58(%rsp)
e23e(5): mov 0x10(%rsp),%rcx
e243(c): mov $0x0,0x98(%rsp)
e24f(4): mov 0x0(%rax,%rcx,1),%rsi
e253(3): test %rsi,%rsi
e256(6): jz 0x3c2(%rip)
e25c(5): mov 0x8(%rsp),%rdi
e261(4): add $0x8,%rsi
e265(5): call 0xffffb98b(%rip)
e26a(2): test %eax,%eax
e26c(7): mov %eax,0x88(%rsp)
e273(6): jnz 0x3dd(%rip)
e279(3): test %rbp,%rbp
e27c(6): jz 0x1ac(%rip)
e282(5): cmp $0x0,0x28(%rbp)
e287(5): mov 0x18(%rsp),%rax
e28c(4): pxor %xmm0,%xmm0
e290(7): mov 0x98(%r15),%r12
e297(b): mov $0x0,0x8c(%rsp)
e2a2(8): mov $0x0,0x10(%rax)
e2aa(3): movaps %xmm0,(%rax)
e2ad(6): jle 0x533(%rip)
e2b3(8): lea 0xd8(%r12),%rax
e2bb(2): xor %ebx,%ebx
e2bd(5): mov %rax,0x28(%rsp)
e2c2(2): jmp 0x47(%rip)
e2c4(4): nop 0x0(%rax)
e2c8(4): mov (%rsp),%rdx
e2cc(3): mov %r15,%rdi
e2cf(5): call 0xffffd2d1(%rip)
e2d4(2): test %al,%al
e2d6(2): jz 0x25(%rip)
e2d8(8): lea 0x0(,%r14,8),%r13
e2e0(5): mov 0x18(%r12),%rax
e2e5(5): mov 0x8(%rsp),%rdi
e2ea(4): mov 0x0(%rax,%r13,1),%rsi
e2ee(5): call 0xffff9ea2(%rip)
e2f3(2): test %al,%al
e2f5(6): jz 0x343(%rip)
e2fb(4): add $0x1,%rbx
e2ff(4): cmp 0x28(%rbp),%rbx
e303(6): jnl 0x38d(%rip)
e309(4): mov 0x30(%rbp),%rax
e30d(4): mov (%r12),%rdi
e311(4): mov 0x0(%rax,%rbx,8),%r14
e315(3): mov %r14,%r13
e318(4): shl/sal $0x4,%r13
e31c(4): lea 0x0(%rdi,%r13,1),%rsi
e320(4): test $0x10,0xa(%rsi)
e324(2): jz 0xffffffa4(%rip)
e326(4): mov (%rsp),%r8
e32a(5): mov 0x28(%rsp),%rsi
e32f(3): mov %r15,%rcx
e332(3): mov %r14,%rdx
e335(5): call 0xfffffb4b(%rip)
e33a(3): cmp $0x1,%eax
e33d(6): jle 0x2c3(%rip)
e343(2): cwde 
e345(4): add (%rsp),%rax
e349(5): mov 0x18(%r12),%rdx
e34e(8): lea 0x0(,%r14,8),%r13
e356(4): mov 0x0(%rdx,%r14,8),%rdx
e35a(3): mov %rax,%rcx
e35d(5): mov %rax,0x38(%rsp)
e362(8): lea 0x0(,%rax,8),%r14
e36a(7): mov 0xb8(%r15),%rax
e371(4): mov 0x0(%rax,%rcx,8),%rsi
e375(c): mov $0x0,0xb8(%rsp)
e381(3): test %rsi,%rsi
e384(2): jz 0x25(%rip)
e386(5): mov 0x18(%rsp),%rdi
e38b(4): add $0x8,%rsi
e38f(5): mov %rdx,0x50(%rsp)
e394(5): call 0xffffb85c(%rip)
e399(2): test %eax,%eax
e39b(7): mov %eax,0x8c(%rsp)
e3a2(5): mov 0x50(%rsp),%rdx
e3a7(2): jnz 0x59(%rip)
e3a9(5): mov 0x18(%rsp),%rdi
e3ae(3): mov %rdx,%rsi
e3b1(5): call 0xffff9ddf(%rip)
e3b6(2): test %al,%al
e3b8(6): jz 0x280(%rip)
e3be(7): add 0xb8(%r15),%r14
e3c5(5): mov 0x18(%rsp),%rdx
e3ca(3): mov %r12,%rsi
e3cd(5): mov 0x58(%rsp),%rdi
e3d2(5): call 0xffffc90e(%rip)
e3d7(5): mov 0x38(%rsp),%rdx
e3dc(3): mov %rax,(%r14)
e3df(7): mov 0xb8(%r15),%rax
e3e6(5): cmp $0x0,0x0(%rax,%rdx,8)
e3eb(6): jnz 0xfffffef5(%rip)
e3f1(7): mov 0x8c(%rsp),%edx
e3f8(2): test %edx,%edx
e3fa(6): jz 0xfffffee6(%rip)
e400(8): mov 0xc0(%rsp),%rdi
e408(5): call 0xffff36f8(%rip)
e40d(7): mov 0x8c(%rsp),%eax
e414(2): test %eax,%eax
e416(7): mov %eax,0x88(%rsp)
e41d(6): jnz 0x233(%rip)
e423(5): nop 0x0(%rax,%rax,1)
e428(4): mov (%rsp),%rax
e42c(9): cmp $0x0,0x98(%rsp)
e435(4): lea 0x1(%rax),%rbx
e439(3): mov %rbx,%r12
e43c(2): jz 0x58(%rip)
e43e(7): mov 0x110(%rsp),%ecx
e445(5): mov 0x48(%rsp),%rdx
e44a(5): mov 0x8(%rsp),%rsi
e44f(5): mov 0x30(%rsp),%rdi
e454(5): call 0xffffbc2c(%rip)
e459(2): test %eax,%eax
e45b(7): mov %eax,0x88(%rsp)
e462(6): jnz 0x1ee(%rip)
e468(8): mov 0x110(%rsp),%r8d
e470(5): mov 0x48(%rsp),%rcx
e475(3): mov %rbx,%rdx
e478(5): mov 0x8(%rsp),%rsi
e47d(3): mov %r15,%rdi
e480(5): call 0xffffcb40(%rip)
e485(2): test %eax,%eax
e487(7): mov %eax,0x88(%rsp)
e48e(6): jnz 0x1c2(%rip)
e494(7): mov 0xa0(%r15),%edx
e49b(4): mov (%rsp),%rsi
e49f(3): mov %r15,%rdi
e4a2(5): call 0xffffd00e(%rip)
e4a7(5): mov 0x8(%rsp),%rdx
e4ac(5): mov 0x30(%rsp),%rsi
e4b1(8): lea 0x88(%rsp),%rdi
e4b9(2): mov %eax,%ecx
e4bb(5): call 0xffffc565(%rip)
e4c0(3): test %rax,%rax
e4c3(3): mov %rax,%rbp
e4c6(6): jz 0x1ea(%rip)
e4cc(7): mov 0xb8(%r15),%rax
e4d3(5): mov 0x10(%rsp),%rdx
e4d8(9): mov $0x0,0x20(%rsp)
e4e1(4): mov %rbp,0x0(%rax,%rdx,1)
e4e5(5): cmp %rbx,0x40(%rsp)
e4ea(2): jle 0x1e(%rip)
e4ec(7): movsxd 0xe0(%r15),%rdx
e4f3(6): add $0x8,0x10(%rsp)
e4f9(5): cmp 0x20(%rsp),%rdx
e4fe(4): mov %rbx,(%rsp)
e502(6): jnl 0xfffffd3c(%rip)
e508(8): mov 0xa0(%rsp),%rdi
e510(5): call 0xffff35f0(%rip)
e515(7): mov 0xb8(%r15),%rax
e51c(5): mov 0x40(%rsp),%rbx
e521(4): mov 0x0(%rax,%rbx,8),%rax
e525(3): test %rax,%rax
e528(6): jz 0x2dd(%rip)
e52e(5): mov 0x60(%rsp),%rbx
e533(5): mov 0x78(%rsp),%rdx
e538(4): lea 0x18(%rax),%rsi
e53c(3): mov %r12,(%rbx)
e53f(5): mov 0x68(%rsp),%rbx
e544(7): mov %rbx,0xb8(%r15)
e54b(5): mov 0x70(%rsp),%rbx
e550(4): mov %rbx,0x48(%r15)
e554(4): mov 0x10(%rax),%rdi
e558(5): call 0xffffb178(%rip)
e55d(3): test %rax,%rax
e560(3): setz %al
e563(3): movzx %al,%eax
e566(5): jmp 0xfe(%rip)
e56b(5): nop 0x0(%rax,%rax,1)
e570(4): lea 0xffffffff(%rbp),%rsi
e574(4): mov %rbp,0x48(%r15)
e578(3): mov %r15,%rdi
e57b(5): call 0xffffcf35(%rip)
e580(3): mov %eax,%r13d
e583(5): mov $0x8,%edi
e588(c): mov $0x1,0x90(%rsp)
e594(c): mov $0x1,0x98(%rsp)
e5a0(5): call 0xffff3800(%rip)
e5a5(3): test %rax,%rax
e5a8(8): mov %rax,0xa0(%rsp)
e5b0(6): jz 0x24b(%rip)
e5b6(3): mov %rbx,(%rax)
e5b9(7): mov 0x110(%rsp),%ecx
e5c0(8): lea 0x90(%rsp),%rbx
e5c8(5): mov 0x48(%rsp),%rdx
e5cd(5): mov 0x30(%rsp),%rdi
e5d2(3): mov %rbp,%r12
e5d5(3): mov %rbx,%rsi
e5d8(b): mov $0x0,0x88(%rsp)
e5e3(5): call 0xffffba9d(%rip)
e5e8(2): test %eax,%eax
e5ea(7): mov %eax,0x88(%rsp)
e5f1(6): jz 0x11c(%rip)
e5f7(2): jmp 0x59(%rip)
e5f9(7): nop 0x0(%rax)
e600(2): test %eax,%eax
e602(6): jnz 0xfffffcd6(%rip)
e608(4): mov (%r12),%rsi
e60c(3): add %r13,%rsi
e60f(5): jmp 0xfffffcb9(%rip)
e614(4): nop 0x0(%rax)
e618(3): test %rbp,%rbp
e61b(6): jnz 0xfffffc67(%rip)
e621(4): mov (%rsp),%rax
e625(4): lea 0x1(%rax),%rbx
e629(3): mov %rbx,%r12
e62c(5): jmp 0xfffffe68(%rip)
e631(7): nop 0x0(%rax)
e638(8): mov 0xc0(%rsp),%rdi
e640(5): call 0xffff34c0(%rip)
e645(b): mov $0xc,0x88(%rsp)
e650(8): mov 0xa0(%rsp),%rdi
e658(5): call 0xffff34a8(%rip)
e65d(7): mov 0x88(%rsp),%eax
e664(8): mov 0xc8(%rsp),%rbx
e66c(9): xor $0x28,%rbx
e675(6): jnz 0x1b7(%rip)
e67b(7): add $0xd8,%rsp
e682(1): pop %rbx
e683(1): pop %rbp
e684(2): pop %r12
e686(2): pop %r13
e688(2): pop %r14
e68a(2): pop %r15
e68c(1): ret near (%rsp)
e68d(3): nop (%rax)
e690(8): mov 0xc0(%rsp),%rdi
e698(5): call 0xffff3468(%rip)
e69d(b): mov $0x0,0x88(%rsp)
e6a8(5): jmp 0xfffffd80(%rip)
e6ad(3): nop (%rax)
e6b0(7): mov 0x88(%rsp),%eax
e6b7(2): test %eax,%eax
e6b9(2): jnz 0xffffff97(%rip)
e6bb(7): mov 0xb8(%r15),%rax
e6c2(5): mov 0x10(%rsp),%rdx
e6c7(6): add $0x1,0x20(%rsp)
e6cd(8): mov $0x0,0x0(%rax,%rdx,1)
e6d5(5): jmp 0xfffffe10(%rip)
e6da(6): nop 0x0(%rax,%rax,1)
e6e0(8): lea 0x90(%rsp),%rbx
e6e8(4): lea 0x8(%rbp),%rsi
e6ec(3): mov %rbx,%rdi
e6ef(5): call 0xffffc141(%rip)
e6f4(2): test %eax,%eax
e6f6(7): mov %eax,0x88(%rsp)
e6fd(6): jnz 0xffffff67(%rip)
e703(4): test $0x40,0x68(%rbp)
e707(6): jz 0xfffffad5(%rip)
e70d(9): cmp $0x0,0x98(%rsp)
e716(2): jz 0x2c(%rip)
e718(8): mov 0x110(%rsp),%r8d
e720(5): mov 0x48(%rsp),%rcx
e725(3): mov %r12,%rdx
e728(3): mov %rbx,%rsi
e72b(3): mov %r15,%rdi
e72e(5): call 0xffffc892(%rip)
e733(2): test %eax,%eax
e735(7): mov %eax,0x88(%rsp)
e73c(6): jnz 0xffffff14(%rip)
e742(5): mov 0x30(%rsp),%rsi
e747(8): lea 0x88(%rsp),%rdi
e74f(3): mov %r13d,%ecx
e752(3): mov %rbx,%rdx
e755(5): call 0xffffc2cb(%rip)
e75a(3): test %rax,%rax
e75d(3): mov %rax,%rbp
e760(6): jz 0x87(%rip)
e766(7): mov 0xb8(%r15),%rax
e76d(4): mov %rbp,0x0(%rax,%r12,8)
e771(5): jmp 0xfffffa6b(%rip)
e776(4): lea 0x1(%rax),%r12
e77a(a): mov $0x9223372036854775807,%rax
e784(3): sub %r13,%rax
e787(3): cmp %r12,%rax
e78a(2): jl 0x71(%rip)
e78c(5): lea 0x0(%r13,%r12,1),%r14
e791(a): mov $0x2305843009213693951,%rax
e79b(3): cmp %rax,%r14
e79e(2): jnbe 0x5d(%rip)
e7a0(5): mov 0x60(%rsp),%rax
e7a5(8): lea 0x0(,%r14,8),%rsi
e7ad(4): mov 0x10(%rax),%rdi
e7b1(5): call 0xffff364f(%rip)
e7b6(3): test %rax,%rax
e7b9(2): jz 0x42(%rip)
e7bb(5): mov 0x60(%rsp),%rcx
e7c0(8): lea 0x0(,%r12,8),%rdx
e7c8(4): lea 0x0(%rax,%r13,8),%rdi
e7cc(2): xor %esi,%esi
e7ce(4): mov %rax,0x10(%rcx)
e7d2(4): mov %r14,0x8(%rcx)
e7d6(5): call 0xffff34da(%rip)
e7db(5): jmp 0xfffff981(%rip)
e7e0(2): xor %edi,%edi
e7e2(5): jmp 0xfffffeb6(%rip)
e7e7(7): mov 0x88(%rsp),%esi
e7ee(2): test %esi,%esi
e7f0(6): jz 0xffffff76(%rip)
e7f6(5): jmp 0xfffffe5a(%rip)
e7fb(5): mov $0xc,%eax
e800(5): jmp 0xfffffe64(%rip)
e805(5): mov 0x60(%rsp),%rax
e80a(3): mov %r12,(%rax)
e80d(5): mov 0x68(%rsp),%rax
e812(7): mov %rax,0xb8(%r15)
e819(5): mov 0x70(%rsp),%rax
e81e(4): mov %rax,0x48(%r15)
e822(5): mov $0x1,%eax
e827(5): jmp 0xfffffe3d(%rip)
e82c(5): call 0xffff33f4(%rip)

"set_regs" :
e840(1): push %rbp
e841(3): mov %rsp,%rbp
e844(2): push %r15
e846(2): push %r14
e848(2): push %r13
e84a(2): push %r12
e84c(3): mov %rcx,%r13
e84f(1): push %rbx
e850(3): mov %rsi,%r12
e853(7): sub $0xb8,%rsp
e85a(7): mov %rdx,0xffffff68(%rbp)
e861(8): mov $0x0,0xffffffb0(%rbp)
e869(9): mov $0x28,%rax
e872(4): mov %rax,0xffffffc8(%rbp)
e876(2): xor %eax,%eax
e878(3): mov (%rdi),%rax
e87b(3): test %r8b,%r8b
e87e(8): mov $0x2,0xffffffb8(%rbp)
e886(8): mov $0x0,0xffffffc0(%rbp)
e88e(7): mov %rax,0xffffff70(%rbp)
e895(6): jz 0x7a8(%rip)
e89b(5): mov $0x60,%edi
e8a0(5): call 0xffff3500(%rip)
e8a5(4): lea 0xffffffb0(%rbp),%rcx
e8a9(3): test %rax,%rax
e8ac(4): mov %rax,0xffffffc0(%rbp)
e8b0(7): mov %rcx,0xffffff78(%rbp)
e8b7(6): jz 0x725(%rip)
e8bd(7): mov 0xffffff70(%rbp),%rax
e8c4(4): pxor %xmm0,%xmm0
e8c8(8): mov $0x0,0xffffffa0(%rbp)
e8d0(7): mov 0x90(%rax),%rbx
e8d7(7): mov 0xffffff68(%rbp),%rax
e8de(4): movaps %xmm0,0xffffff90(%rbp)
e8e2(4): shl/sal $0x4,%rax
e8e6(6): cmp $0xfbf,%rax
e8ec(7): mov %rax,0xffffff48(%rbp)
e8f3(6): jnbe 0x6f3(%rip)
e8f9(4): add $0x10,%rax
e8fd(7): mov $0x0,0xffffff37(%rbp)
e904(3): sub %rax,%rsp
e907(5): lea 0xf(%rsp),%rax
e90c(4): and $0xfffffff0,%rax
e910(7): mov %rax,0xffffff40(%rbp)
e917(7): mov 0xffffff48(%rbp),%rdx
e91e(7): mov 0xffffff40(%rbp),%rdi
e925(3): mov %r13,%rsi
e928(5): call 0xffff3448(%rip)
e92d(4): lea 0xffffff90(%rbp),%rax
e931(4): mov 0x0(%r13),%rcx
e935(7): mov %rax,0xffffff58(%rbp)
e93c(4): add $0x10,%rax
e940(4): mov %rcx,0xffffff88(%rbp)
e944(7): mov %rax,0xffffff38(%rbp)
e94b(4): lea 0xffffff88(%rbp),%rax
e94f(7): mov %rax,0xffffff50(%rbp)
e956(5): jmp 0xe3(%rip)
e95b(5): nop 0x0(%rax,%rax,1)
e960(3): cmp $0x9,%esi
e963(6): jz 0x1ed(%rip)
e969(3): cmp %rcx,%rax
e96c(2): jnz 0x10(%rip)
e96e(8): cmp %rbx,0xb0(%r12)
e976(6): jz 0x3da(%rip)
e97c(8): mov 0x98(%r12),%r14
e984(3): mov (%r14),%rdi
e987(4): lea 0x0(%rdi,%r9,1),%rsi
e98b(4): movzx 0x8(%rsi),%eax
e98f(2): test $0x8,%al
e991(6): jnz 0x10f(%rip)
e997(4): test $0x10,0xa(%rsi)
e99b(6): jnz 0x205(%rip)
e9a1(2): cmp $0x4,%al
e9a3(6): jz 0x23d(%rip)
e9a9(4): mov 0xffffff88(%rbp),%rcx
e9ad(3): mov %rcx,%rdx
e9b0(3): mov %r12,%rdi
e9b3(7): mov %rcx,0xffffff60(%rbp)
e9ba(5): call 0xffffcbe6(%rip)
e9bf(2): test %al,%al
e9c1(7): mov 0xffffff60(%rbp),%rcx
e9c8(6): jz 0x450(%rip)
e9ce(4): mov 0x18(%r14),%rax
e9d2(4): lea 0x1(%rcx),%rdx
e9d6(4): mov 0x0(%rax,%r15,8),%rbx
e9da(8): cmp $0x0,0xffffff78(%rbp)
e9e2(4): mov %rdx,0xffffff88(%rbp)
e9e6(2): jz 0x3e(%rip)
e9e8(8): cmp 0xa8(%r12),%rdx
e9f0(6): jnle 0x436(%rip)
e9f6(8): mov 0xb8(%r12),%rax
e9fe(4): mov 0x0(%rax,%rdx,8),%rax
ea02(3): test %rax,%rax
ea05(6): jz 0x421(%rip)
ea0b(4): mov 0x10(%rax),%rdi
ea0f(4): lea 0x18(%rax),%rsi
ea13(3): mov %rbx,%rdx
ea16(5): call 0xffffacba(%rip)
ea1b(3): test %rax,%rax
ea1e(6): jz 0x408(%rip)
ea24(8): mov $0x0,0xffffff98(%rbp)
ea2c(3): test %rbx,%rbx
ea2f(6): js 0x3db(%rip)
ea35(4): mov 0xffffff88(%rbp),%rcx
ea39(4): mov 0x8(%r13),%rax
ea3d(3): cmp %rcx,%rax
ea40(6): jl 0x4f0(%rip)
ea46(7): mov 0xffffff70(%rbp),%rdi
ea4d(3): mov %rbx,%r9
ea50(3): mov %rbx,%r15
ea53(4): shl/sal $0x4,%r9
ea57(3): mov (%rdi),%rdx
ea5a(3): add %r9,%rdx
ea5d(4): movzx 0x8(%rdx),%esi
ea61(3): cmp $0x8,%esi
ea64(6): jnz 0xfffffefc(%rip)
ea6a(3): mov (%rdx),%rdx
ea6d(4): add $0x1,%rdx
ea71(7): cmp %rdx,0xffffff68(%rbp)
ea78(6): jle 0xfffffef1(%rip)
ea7e(4): shl/sal $0x4,%rdx
ea82(3): add %r13,%rdx
ea85(8): mov $0xffffffff,0x8(%rdx)
ea8d(3): mov %rcx,(%rdx)
ea90(4): mov 0x8(%r13),%rax
ea94(5): jmp 0xfffffed5(%rip)
ea99(7): nop 0x0(%rax)
eaa0(8): mov 0xb8(%r12),%rax
eaa8(4): mov 0xffffff88(%rbp),%rdx
eaac(3): mov %rbx,%rsi
eaaf(7): mov 0xffffff58(%rbp),%rdi
eab6(4): mov 0x0(%rax,%rdx,8),%r9
eaba(4): mov 0x28(%r14),%rax
eabe(4): lea 0x0(%rbx,%rbx,2),%rdx
eac2(7): mov %r9,0xffffff60(%rbp)
eac9(4): lea 0x0(%rax,%rdx,8),%r15
eacd(5): call 0xffff96c3(%rip)
ead2(2): test %al,%al
ead4(7): mov 0xffffff60(%rbp),%r9
eadb(6): jz 0x4dd(%rip)
eae1(4): mov 0x8(%r15),%r10
eae5(3): test %r10,%r10
eae8(6): jle 0x330(%rip)
eaee(4): mov 0x10(%r15),%r15
eaf2(4): mov 0x10(%r9),%r11
eaf6(4): lea 0x18(%r9),%r14
eafa(7): mov $0xffffffff,%rbx
eb01(3): xor %r9d,%r9d
eb04(7): mov %r12,0xffffff60(%rbp)
eb0b(5): nop 0x0(%rax,%rax,1)
eb10(4): mov 0x0(%r15,%r9,8),%r12
eb14(3): mov %r14,%rsi
eb17(3): mov %r11,%rdi
eb1a(3): mov %r12,%rdx
eb1d(5): call 0xffffabb3(%rip)
eb22(3): test %rax,%rax
eb25(2): jz 0xf(%rip)
eb27(4): cmp $0xffffffff,%rbx
eb2b(6): jnz 0x155(%rip)
eb31(3): mov %r12,%rbx
eb34(4): add $0x1,%r9
eb38(3): cmp %r9,%r10
eb3b(2): jnz 0xffffffd5(%rip)
eb3d(7): mov 0xffffff60(%rbp),%r12
eb44(5): jmp 0xfffffee8(%rip)
eb49(7): nop 0x0(%rax)
eb50(3): mov (%rdx),%rdi
eb53(4): lea 0x1(%rdi),%rsi
eb57(7): cmp %rsi,0xffffff68(%rbp)
eb5e(6): jle 0xfffffe0b(%rip)
eb64(4): shl/sal $0x4,%rsi
eb68(5): lea 0x0(%r13,%rsi,1),%rax
eb6d(3): cmp %rcx,(%rax)
eb70(6): jl 0x380(%rip)
eb76(4): test $0x8,0xa(%rdx)
eb7a(2): jz 0x14(%rip)
eb7c(7): mov 0xffffff40(%rbp),%rdi
eb83(5): cmp $0xffffffff,0x0(%rdi,%rsi,1)
eb88(6): jnz 0x3f3(%rip)
eb8e(4): mov %rcx,0x8(%rax)
eb92(4): mov 0x8(%r13),%rax
eb96(5): jmp 0xfffffdd3(%rip)
eb9b(5): nop 0x0(%rax,%rax,1)
eba0(4): mov 0xffffff88(%rbp),%r8
eba4(7): lea 0xd8(%r14),%rsi
ebab(3): mov %r12,%rcx
ebae(3): mov %rbx,%rdx
ebb1(7): mov %r9,0xffffff60(%rbp)
ebb8(5): call 0xfffff2c8(%rip)
ebbd(3): movsxd %eax,%rcx
ebc0(3): test %rcx,%rcx
ebc3(6): jnz 0x1fe(%rip)
ebc9(7): mov 0xffffff60(%rbp),%r9
ebd0(3): mov (%r14),%rsi
ebd3(4): mov 0xffffff88(%rbp),%rcx
ebd7(3): add %r9,%rsi
ebda(5): jmp 0xfffffdd3(%rip)
ebdf(1): nop 
ebe0(3): mov (%rsi),%rax
ebe3(4): add $0x1,%rax
ebe7(4): shl/sal $0x4,%rax
ebeb(3): add %r13,%rax
ebee(4): mov 0x8(%rax),%rdx
ebf2(3): mov (%rax),%rdi
ebf5(3): mov %rdx,%rcx
ebf8(3): sub %rdi,%rcx
ebfb(8): cmp $0x0,0xffffff78(%rbp)
ec03(6): jz 0x1b5(%rip)
ec09(4): cmp $0xffffffff,%rdi
ec0d(6): jz 0x219(%rip)
ec13(4): cmp $0xffffffff,%rdx
ec17(6): jz 0x20f(%rip)
ec1d(3): test %rcx,%rcx
ec20(6): jz 0x250(%rip)
ec26(4): mov 0xffffff88(%rbp),%r15
ec2a(5): mov 0x30(%r12),%rdx
ec2f(5): mov 0x8(%r12),%rax
ec34(3): sub %r15,%rdx
ec37(3): cmp %rdx,%rcx
ec3a(6): jnle 0x1ec(%rip)
ec40(4): lea 0x0(%rax,%r15,1),%rsi
ec44(3): add %rax,%rdi
ec47(3): mov %rcx,%rdx
ec4a(7): mov %rcx,0xffffff60(%rbp)
ec51(5): call 0xffff30af(%rip)
ec56(2): test %eax,%eax
ec58(7): mov 0xffffff60(%rbp),%rcx
ec5f(6): jnz 0x1c7(%rip)
ec65(4): mov 0x18(%r14),%rax
ec69(4): lea 0x0(%r15,%rcx,1),%rdx
ec6d(4): mov 0x0(%rax,%rbx,8),%rbx
ec71(5): jmp 0xfffffd69(%rip)
ec76(a): nop 0x0(%rax,%rax,1)
ec80(7): mov 0xffffff38(%rbp),%rsi
ec87(4): mov 0xffffff98(%rbp),%rdi
ec8b(3): mov %rbx,%rdx
ec8e(3): mov %r12,%r14
ec91(7): mov 0xffffff60(%rbp),%r12
ec98(5): call 0xffffaa38(%rip)
ec9d(3): test %rax,%rax
eca0(6): jnz 0x1c0(%rip)
eca6(7): mov 0xffffff78(%rbp),%rcx
ecad(3): test %rcx,%rcx
ecb0(6): jz 0xfffffd7c(%rip)
ecb6(3): mov (%rcx),%r15
ecb9(4): mov 0xffffff88(%rbp),%rdx
ecbd(4): lea 0x1(%r15),%rax
ecc1(4): cmp 0x8(%rcx),%rax
ecc5(3): mov %rax,(%rcx)
ecc8(6): jz 0x385(%rip)
ecce(4): mov 0x10(%rcx),%rax
ecd2(4): lea 0x0(%r15,%r15,2),%r15
ecd6(4): shl/sal $0x4,%r15
ecda(3): add %rax,%r15
ecdd(4): mov %r14,0x8(%r15)
ece1(7): mov 0xffffff48(%rbp),%r14
ece8(3): mov %rdx,(%r15)
eceb(3): mov %r14,%rdi
ecee(5): call 0xffff30b2(%rip)
ecf3(3): test %rax,%rax
ecf6(4): mov %rax,0x10(%r15)
ecfa(2): jz 0x28(%rip)
ecfc(3): mov %r14,%rdx
ecff(3): mov %r13,%rsi
ed02(3): mov %rax,%rdi
ed05(5): call 0xffff306b(%rip)
ed0a(7): mov 0xffffff58(%rbp),%rsi
ed11(4): lea 0x18(%r15),%rdi
ed15(5): call 0xffffbb1b(%rip)
ed1a(2): test %eax,%eax
ed1c(6): jz 0xfffffd10(%rip)
ed22(4): mov 0xffffffa0(%rbp),%rdi
ed26(5): call 0xffff2dda(%rip)
ed2b(7): cmp $0x0,0xffffff37(%rbp)
ed32(6): jnz 0x399(%rip)
ed38(7): mov 0xffffff78(%rbp),%rdi
ed3f(5): call 0xffffe051(%rip)
ed44(5): mov $0xc,%eax
ed49(5): jmp 0x210(%rip)
ed4e(2): nop 
ed50(8): cmp $0x0,0xffffff78(%rbp)
ed58(6): jz 0x334(%rip)
ed5e(7): mov 0xffffff68(%rbp),%rcx
ed65(3): test %rcx,%rcx
ed68(2): jz 0x22(%rip)
ed6a(3): mov %r13,%rax
ed6d(2): xor %edx,%edx
ed6f(1): nop 
ed70(4): cmp $0x0,(%rax)
ed74(2): js 0x9(%rip)
ed76(5): cmp $0xffffffff,0x8(%rax)
ed7b(2): jz 0x55(%rip)
ed7d(4): add $0x1,%rdx
ed81(4): add $0x10,%rax
ed85(3): cmp %rdx,%rcx
ed88(2): jnz 0xffffffe8(%rip)
ed8a(4): mov 0xffffffa0(%rbp),%rdi
ed8e(5): call 0xffff2d72(%rip)
ed93(7): cmp $0x0,0xffffff37(%rbp)
ed9a(6): jnz 0x37a(%rip)
eda0(7): mov 0xffffff78(%rbp),%rdi
eda7(5): call 0xffffdfe9(%rip)
edac(2): xor %eax,%eax
edae(5): jmp 0x1ab(%rip)
edb3(5): nop 0x0(%rax,%rax,1)
edb8(3): test %rcx,%rcx
edbb(6): jz 0xb5(%rip)
edc1(4): mov 0xffffff88(%rbp),%r15
edc5(5): jmp 0xfffffea0(%rip)
edca(6): nop 0x0(%rax,%rax,1)
edd0(7): mov 0xffffff78(%rbp),%rdi
edd7(7): mov 0xffffff58(%rbp),%r9
edde(3): mov %r13,%r8
ede1(7): mov 0xffffff68(%rbp),%rcx
ede8(7): mov 0xffffff50(%rbp),%rdx
edef(4): lea 0x10(%rdi),%rsi
edf3(5): call 0xffffdfed(%rip)
edf8(3): mov %rax,%r9
edfb(3): mov %rax,%rbx
edfe(3): mov %rax,%r15
ee01(4): shl/sal $0x4,%r9
ee05(5): jmp 0xfffffb77(%rip)
ee0a(4): cmp $0xfffffffe,%rbx
ee0e(6): jz 0x1aa(%rip)
ee14(4): nop 0x0(%rax)
ee18(8): cmp $0x0,0xffffff78(%rbp)
ee20(6): jz 0x2bc(%rip)
ee26(7): mov 0xffffff78(%rbp),%rdi
ee2d(7): mov 0xffffff68(%rbp),%rcx
ee34(4): lea 0xffffff88(%rbp),%rdx
ee38(7): mov 0xffffff58(%rbp),%r9
ee3f(3): mov %r13,%r8
ee42(4): lea 0x10(%rdi),%rsi
ee46(5): call 0xffffdf9a(%rip)
ee4b(4): mov 0xffffff88(%rbp),%rcx
ee4f(3): mov %rax,%rbx
ee52(5): jmp 0xfffffaf9(%rip)
ee57(9): nop 0x0(%rax,%rax,1)
ee60(3): mov %r14,%rbx
ee63(5): jmp 0xfffffbc9(%rip)
ee68(8): nop 0x0(%rax,%rax,1)
ee70(7): mov 0xffffff58(%rbp),%rdi
ee77(3): mov %rbx,%rsi
ee7a(7): mov %r9,0xffffff60(%rbp)
ee81(5): call 0xffff930f(%rip)
ee86(2): test %al,%al
ee88(6): jz 0x130(%rip)
ee8e(4): mov 0x28(%r14),%rdx
ee92(4): lea 0x0(%rbx,%rbx,2),%rax
ee96(4): mov 0xffffff88(%rbp),%rcx
ee9a(4): lea 0x0(%rdx,%rax,8),%rax
ee9e(7): mov %rcx,0xffffff28(%rbp)
eea5(4): mov 0x10(%rax),%rax
eea9(3): mov (%rax),%rbx
eeac(8): mov 0xb8(%r12),%rax
eeb4(4): mov 0x0(%rax,%rcx,8),%rax
eeb8(3): mov %rbx,%rdx
eebb(4): mov 0x10(%rax),%rdi
eebf(4): lea 0x18(%rax),%rsi
eec3(5): call 0xffffa80d(%rip)
eec8(3): test %rax,%rax
eecb(6): jnz 0xfffffb61(%rip)
eed1(7): mov 0xffffff60(%rbp),%r9
eed8(3): mov (%r14),%rsi
eedb(7): mov 0xffffff28(%rbp),%rcx
eee2(3): add %r9,%rsi
eee5(5): jmp 0xfffffac8(%rip)
eeea(6): nop 0x0(%rax,%rax,1)
eef0(7): mov 0xffffff48(%rbp),%rdx
eef7(7): mov 0xffffff40(%rbp),%rdi
eefe(3): mov %r13,%rsi
ef01(4): mov %rcx,0x8(%rax)
ef05(7): mov %r9,0xffffff28(%rbp)
ef0c(7): mov %rcx,0xffffff60(%rbp)
ef13(5): call 0xffff2e5d(%rip)
ef18(4): mov 0x8(%r13),%rax
ef1c(7): mov 0xffffff60(%rbp),%rcx
ef23(7): mov 0xffffff28(%rbp),%r9
ef2a(5): jmp 0xfffffa3f(%rip)
ef2f(1): nop 
ef30(4): mov 0xffffffa0(%rbp),%rdi
ef34(5): call 0xffff2bcc(%rip)
ef39(7): cmp $0x0,0xffffff37(%rbp)
ef40(6): jnz 0xdc(%rip)
ef46(7): mov 0xffffff78(%rbp),%rdi
ef4d(3): test %rdi,%rdi
ef50(2): jz 0x7(%rip)
ef52(5): call 0xffffde3e(%rip)
ef57(2): xor %eax,%eax
ef59(4): mov 0xffffffc8(%rbp),%rbx
ef5d(9): xor $0x28,%rbx
ef66(6): jnz 0x1bf(%rip)
ef6c(4): lea 0xffffffd8(%rbp),%rsp
ef70(1): pop %rbx
ef71(2): pop %r12
ef73(2): pop %r13
ef75(2): pop %r14
ef77(2): pop %r15
ef79(1): pop %rbp
ef7a(1): ret near (%rsp)
ef7b(7): mov 0xffffff48(%rbp),%rdx
ef82(3): mov %rdi,%rsi
ef85(3): mov %r13,%rdi
ef88(7): mov %rcx,0xffffff28(%rbp)
ef8f(7): mov %r9,0xffffff60(%rbp)
ef96(5): call 0xffff2dda(%rip)
ef9b(4): mov 0x8(%r13),%rax
ef9f(7): mov 0xffffff60(%rbp),%r9
efa6(7): mov 0xffffff28(%rbp),%rcx
efad(5): jmp 0xfffff9bc(%rip)
efb2(6): nop 0x0(%rax,%rax,1)
efb8(4): mov 0xffffffa0(%rbp),%rdi
efbc(5): call 0xffff2b44(%rip)
efc1(7): cmp $0x0,0xffffff37(%rbp)
efc8(6): jnz 0x103(%rip)
efce(8): cmp $0x0,0xffffff78(%rbp)
efd6(6): jnz 0xfffffd62(%rip)
efdc(5): mov $0xc,%eax
efe1(5): jmp 0xffffff78(%rip)
efe6(7): mov 0xffffff48(%rbp),%rdi
efed(5): call 0xffff2db3(%rip)
eff2(3): test %rax,%rax
eff5(7): mov %rax,0xffffff40(%rbp)
effc(7): mov $0x1,0xffffff37(%rbp)
f003(6): jnz 0xfffff914(%rip)
f009(7): mov 0xffffff78(%rbp),%rdi
f010(3): test %rdi,%rdi
f013(2): jz 0xffffffc9(%rip)
f015(5): call 0xffffdd7b(%rip)
f01a(2): jmp 0xffffffc2(%rip)
f01c(7): mov 0xffffff40(%rbp),%rdi
f023(5): call 0xffff2add(%rip)
f028(7): mov 0xffffff78(%rbp),%rdi
f02f(3): test %rdi,%rdi
f032(6): jnz 0xffffff20(%rip)
f038(5): jmp 0xffffff1f(%rip)
f03d(b): mov $0x0,0xffffff78(%rbp)
f048(5): jmp 0xfffff875(%rip)
f04d(4): lea 0x0(%rax,%rax,2),%rsi
f051(7): mov 0xffffff78(%rbp),%rax
f058(7): mov %rdx,0xffffff60(%rbp)
f05f(4): shl/sal $0x5,%rsi
f063(4): mov 0x10(%rax),%rdi
f067(5): call 0xffff2d99(%rip)
f06c(3): test %rax,%rax
f06f(2): jz 0x46(%rip)
f071(7): mov 0xffffff78(%rbp),%rcx
f078(7): mov 0xffffff60(%rbp),%rdx
f07f(4): shl/sal $0x1,0x8(%rcx)
f083(4): mov %rax,0x10(%rcx)
f087(5): jmp 0xfffffc4b(%rip)
f08c(4): mov 0xffffffa0(%rbp),%rdi
f090(5): call 0xffff2a70(%rip)
f095(7): cmp $0x0,0xffffff37(%rbp)
f09c(6): jz 0xfffffebb(%rip)
f0a2(7): mov 0xffffff40(%rbp),%rdi
f0a9(5): call 0xffff2a57(%rip)
f0ae(2): xor %eax,%eax
f0b0(5): jmp 0xfffffea9(%rip)
f0b5(4): mov 0xffffffa0(%rbp),%rdi
f0b9(5): call 0xffff2a47(%rip)
f0be(7): cmp $0x0,0xffffff37(%rbp)
f0c5(6): jz 0xfffffc73(%rip)
f0cb(7): mov 0xffffff40(%rbp),%rdi
f0d2(5): call 0xffff2a2e(%rip)
f0d7(5): jmp 0xfffffef7(%rip)
f0dc(4): mov 0xffffffa0(%rbp),%rdi
f0e0(5): call 0xffff2a20(%rip)
f0e5(7): cmp $0x0,0xffffff37(%rbp)
f0ec(5): mov $0x1,%eax
f0f1(6): jz 0xfffffe68(%rip)
f0f7(7): mov 0xffffff40(%rbp),%rdi
f0fe(6): mov %eax,0xffffff78(%rbp)
f104(5): call 0xffff29fc(%rip)
f109(6): mov 0xffffff78(%rbp),%eax
f10f(5): jmp 0xfffffe4a(%rip)
f114(7): mov 0xffffff40(%rbp),%rdi
f11b(5): call 0xffff29e5(%rip)
f120(5): jmp 0xfffffc80(%rip)
f125(5): call 0xffff2afb(%rip)

"get_subexp_sub.isra.32" :
f130(2): push %r15
f132(2): push %r14
f134(3): mov %rcx,%r14
f137(2): push %r13
f139(2): push %r12
f13b(3): mov %rsi,%r13
f13e(1): push %rbp
f13f(1): push %rbx
f140(4): lea 0x10(%rdx),%rsi
f144(3): mov %rdx,%rbp
f147(3): mov %r8,%r9
f14a(3): mov %r8,%r12
f14d(4): sub $0x20,%rsp
f151(4): mov 0x8(%rdx),%rcx
f155(3): mov %r14,%r8
f158(2): push $0x8
f15a(3): mov (%rdx),%rdx
f15d(3): mov %rdi,%rbx
f160(5): call 0xffffef80(%rip)
f165(2): test %eax,%eax
f167(1): pop %rdx
f168(1): pop %rcx
f169(2): jz 0x17(%rip)
f16b(4): add $0x18,%rsp
f16f(1): pop %rbx
f170(1): pop %rbp
f171(2): pop %r12
f173(2): pop %r13
f175(2): pop %r14
f177(2): pop %r15
f179(1): ret near (%rsp)
f17a(6): nop 0x0(%rax,%rax,1)
f180(7): mov 0xc8(%rbx),%rax
f187(7): mov 0xd0(%rbx),%rdx
f18e(4): mov 0x8(%rbp),%r15
f192(4): mov 0x0(%r13),%rcx
f196(7): mov 0xd8(%rbx),%rdi
f19d(3): cmp %rdx,%rax
f1a0(3): mov %r15,%rsi
f1a3(6): jnl 0x9d(%rip)
f1a9(4): lea 0x0(%rax,%rax,4),%rdx
f1ad(4): shl/sal $0x3,%rdx
f1b1(3): test %rax,%rax
f1b4(2): jle 0xd(%rip)
f1b6(5): lea 0xffffffd8(%rdi,%rdx,1),%r8
f1bb(4): cmp 0x8(%r8),%r12
f1bf(2): jz 0x71(%rip)
f1c1(3): add %rdx,%rdi
f1c4(2): xor %edx,%edx
f1c6(3): cmp %rcx,%r15
f1c9(3): setz %dl
f1cc(4): add $0x1,%rax
f1d0(3): mov %r14,(%rdi)
f1d3(2): neg %edx
f1d5(4): mov %r12,0x8(%rdi)
f1d9(4): mov %rcx,0x10(%rdi)
f1dd(4): mov %dx,0x22(%rdi)
f1e1(4): mov %r15,0x18(%rdi)
f1e5(7): mov %rax,0xc8(%rbx)
f1ec(4): mov $0x0,0x20(%rdi)
f1f0(3): mov %r15,%rax
f1f3(7): movsxd 0xe0(%rbx),%rdx
f1fa(3): sub %rcx,%rax
f1fd(3): cmp %rax,%rdx
f200(2): jnl 0xc(%rip)
f202(3): sub %ecx,%r15d
f205(7): mov %r15d,0xe0(%rbx)
f20c(3): add %r12,%rsi
f20f(4): sub 0x0(%r13),%rsi
f213(4): add $0x18,%rsp
f217(3): mov %rbx,%rdi
f21a(1): pop %rbx
f21b(1): pop %rbp
f21c(2): pop %r12
f21e(2): pop %r13
f220(2): pop %r14
f222(2): pop %r15
f224(5): jmp 0xffff9b3c(%rip)
f229(7): nop 0x0(%rax)
f230(5): mov $0x1,0x20(%r8)
f235(2): jmp 0xffffff8c(%rip)
f237(9): nop 0x0(%rax,%rax,1)
f240(4): lea 0x0(%rdx,%rdx,4),%rsi
f244(5): mov %rcx,0x8(%rsp)
f249(4): shl/sal $0x4,%rsi
f24d(5): call 0xffff2bb3(%rip)
f252(3): test %rax,%rax
f255(5): mov 0x8(%rsp),%rcx
f25a(2): jz 0x56(%rip)
f25c(7): mov 0xc8(%rbx),%rsi
f263(7): mov 0xd0(%rbx),%rdx
f26a(7): mov %rax,0xd8(%rbx)
f271(5): mov %rcx,0x8(%rsp)
f276(4): lea 0x0(%rsi,%rsi,4),%rsi
f27a(4): lea 0x0(%rdx,%rdx,4),%rdx
f27e(4): lea 0x0(%rax,%rsi,8),%rdi
f282(4): shl/sal $0x3,%rdx
f286(2): xor %esi,%esi
f288(5): call 0xffff2a28(%rip)
f28d(7): shl/sal $0x1,0xd0(%rbx)
f294(7): mov 0xc8(%rbx),%rax
f29b(7): mov 0xd8(%rbx),%rdi
f2a2(4): mov 0x8(%rbp),%rsi
f2a6(5): mov 0x8(%rsp),%rcx
f2ab(5): jmp 0xfffffefe(%rip)
f2b0(7): mov 0xd8(%rbx),%rdi
f2b7(5): call 0xffff2849(%rip)
f2bc(5): mov $0xc,%eax
f2c1(5): jmp 0xfffffeaa(%rip)

"transit_state_bkref.isra.34" :
f2d0(2): push %r15
f2d2(2): push %r14
f2d4(2): push %r13
f2d6(2): push %r12
f2d8(1): push %rbp
f2d9(1): push %rbx
f2da(7): sub $0xb8,%rsp
f2e1(4): mov 0x48(%rdi),%r15
f2e5(9): mov $0x28,%rax
f2ee(8): mov %rax,0xa8(%rsp)
f2f6(2): xor %eax,%eax
f2f8(4): cmp $0x0,(%rsi)
f2fc(7): mov 0x98(%rdi),%rax
f303(5): mov %rsi,0x48(%rsp)
f308(5): mov %rdx,0x40(%rsp)
f30d(5): mov %rax,0x38(%rsp)
f312(6): jle 0x32e(%rip)
f318(8): lea 0x0(,%r15,8),%rax
f320(3): mov %rdi,%r14
f323(8): mov $0x0,(%rsp)
f32b(5): mov %r15,0x8(%rsp)
f330(5): mov %rax,0x60(%rsp)
f335(8): lea 0x90(%rsp),%rax
f33d(5): mov %rax,0x68(%rsp)
f342(8): lea 0x8c(%rsp),%rax
f34a(5): mov %rax,0x78(%rsp)
f34f(2): jmp 0x48(%rip)
f351(7): nop 0x0(%rax)
f358(2): test $0x1,%al
f35a(2): jz 0x26(%rip)
f35c(3): and $0x8,%edx
f35f(2): jnz 0x21(%rip)
f361(3): test $0x20,%cl
f364(2): jz 0x6(%rip)
f366(2): test $0x2,%al
f368(2): jz 0x18(%rip)
f36a(6): and $0x80,%ecx
f370(6): jz 0xa0(%rip)
f376(2): test $0x8,%al
f378(6): jnz 0x98(%rip)
f37e(2): nop 
f380(5): mov 0x48(%rsp),%rdi
f385(5): add $0x1,(%rsp)
f38a(4): mov (%rsp),%rax
f38e(3): cmp (%rdi),%rax
f391(6): jnl 0x2af(%rip)
f397(5): mov 0x40(%rsp),%rax
f39c(4): mov (%rsp),%rdi
f3a0(3): mov (%rax),%rax
f3a3(4): mov 0x0(%rax,%rdi,8),%r13
f3a7(5): mov 0x38(%rsp),%rdi
f3ac(3): mov (%rdi),%rax
f3af(3): mov %r13,%rbx
f3b2(4): shl/sal $0x4,%rbx
f3b6(3): add %rbx,%rax
f3b9(4): cmp $0x4,0x8(%rax)
f3bd(2): jnz 0xffffffc3(%rip)
f3bf(3): mov 0x8(%rax),%ebp
f3c2(6): test $0x3ff00,%ebp
f3c8(2): jz 0x48(%rip)
f3ca(7): mov 0xa0(%r14),%edx
f3d1(5): mov 0x8(%rsp),%rsi
f3d6(3): mov %r14,%rdi
f3d9(5): call 0xffffc0d7(%rip)
f3de(2): mov %ebp,%edx
f3e0(3): shr $0x8,%edx
f3e3(2): mov %edx,%ecx
f3e5(5): and $0x3ff,%cx
f3ea(3): test $0x4,%dl
f3ed(6): jnz 0xffffff6b(%rip)
f3f3(3): and $0x8,%edx
f3f6(6): jz 0xffffff6b(%rip)
f3fc(2): test $0x1,%al
f3fe(6): jz 0xffffff63(%rip)
f404(5): jmp 0xffffff7c(%rip)
f409(7): nop 0x0(%rax)
f410(7): mov 0xc8(%r14),%rdi
f417(7): mov 0x98(%r14),%rax
f41e(2): xor %ecx,%ecx
f420(4): mov 0x8(%r14),%r10
f424(5): mov 0x8(%rsp),%r9
f429(5): mov %rdi,0x70(%rsp)
f42e(5): mov %rax,0x50(%rsp)
f433(3): cmp %rdi,%rcx
f436(2): jnl 0x55(%rip)
f438(4): lea 0x0(%rcx,%rdi,1),%rax
f43c(7): mov 0xd8(%r14),%r11
f443(3): mov %rax,%rsi
f446(4): shr $0x3f,%rsi
f44a(3): add %rax,%rsi
f44d(3): sar $0x1,%rsi
f450(4): lea 0x0(%rsi,%rsi,4),%rax
f454(5): cmp 0x8(%r11,%rax,8),%r9
f459(2): jle 0x2d(%rip)
f45b(5): jmp 0x1cd(%rip)
f460(4): lea 0x0(%rsi,%rcx,1),%rdx
f464(3): mov %rdx,%rax
f467(4): shr $0x3f,%rax
f46b(3): add %rdx,%rax
f46e(3): sar $0x1,%rax
f471(4): lea 0x0(%rax,%rax,4),%rdx
f475(3): mov %rax,%r8
f478(5): cmp 0x8(%r11,%rdx,8),%r9
f47d(6): jnle 0x1b3(%rip)
f483(3): mov %rax,%rsi
f486(3): cmp %rcx,%rsi
f489(2): jnle 0xffffffd7(%rip)
f48b(5): cmp %rcx,0x70(%rsp)
f490(2): jle 0x26(%rip)
f492(7): mov 0xd8(%r14),%rdx
f499(4): lea 0x0(%rcx,%rcx,4),%rax
f49d(5): mov 0x8(%rsp),%rdi
f4a2(4): lea 0x0(%rdx,%rax,8),%rax
f4a6(4): cmp %rdi,0x8(%rax)
f4aa(2): jnz 0xc(%rip)
f4ac(4): cmp $0xffffffff,%rcx
f4b0(6): jnz 0x1d6(%rip)
f4b6(5): mov 0x50(%rsp),%rax
f4bb(8): cmp $0x0,0xe8(%r14)
f4c3(3): mov (%rax),%rdx
f4c6(4): mov 0x0(%rdx,%rbx,1),%rax
f4ca(5): mov %rax,0x58(%rsp)
f4cf(6): jle 0x1bc(%rip)
f4d5(5): mov %r13,0x30(%rsp)
f4da(9): mov $0x0,0x28(%rsp)
f4e3(3): mov %r10,%r13
f4e6(7): mov 0xf8(%r14),%rax
f4ed(5): mov 0x28(%rsp),%rbx
f4f2(5): mov 0x58(%rsp),%rdi
f4f7(4): mov 0x0(%rax,%rbx,8),%rbx
f4fb(4): mov 0x8(%rbx),%rax
f4ff(4): shl/sal $0x4,%rax
f503(4): cmp 0x0(%rdx,%rax,1),%rdi
f507(2): jz 0x29(%rip)
f509(6): add $0x1,0x28(%rsp)
f50f(5): mov 0x28(%rsp),%rax
f514(7): cmp 0xe8(%r14),%rax
f51b(6): jnl 0x676(%rip)
f521(5): mov 0x50(%rsp),%rax
f526(3): mov (%rax),%rdx
f529(2): jmp 0xffffffbd(%rip)
f52b(5): nop 0x0(%rax,%rax,1)
f530(5): cmp $0x0,0x20(%rbx)
f535(3): mov (%rbx),%r11
f538(6): jle 0x66a(%rip)
f53e(5): mov 0x8(%rsp),%rcx
f543(3): mov %r13,%r8
f546(2): xor %ebp,%ebp
f548(3): mov %rbx,%r13
f54b(3): mov %rcx,%rbx
f54e(2): jmp 0x6e(%rip)
f550(4): lea 0x0(%r8,%r11,1),%rsi
f554(4): lea 0x0(%r8,%rbx,1),%rdi
f558(5): mov %r9,0x20(%rsp)
f55d(5): mov %r11,0x18(%rsp)
f562(5): mov %r8,0x10(%rsp)
f567(5): call 0xffff2799(%rip)
f56c(2): test %eax,%eax
f56e(5): mov 0x10(%rsp),%r8
f573(5): mov 0x18(%rsp),%r11
f578(5): mov 0x20(%rsp),%r9
f57d(6): jnz 0x4cb(%rip)
f583(5): mov 0x8(%rsp),%r8
f588(5): mov 0x30(%rsp),%rcx
f58d(3): mov %r9,%rdx
f590(3): mov %r13,%rsi
f593(3): mov %r14,%rdi
f596(5): call 0xfffffb9a(%rip)
f59b(3): cmp $0x1,%eax
f59e(4): mov 0x8(%r14),%r8
f5a2(6): jnbe 0xa6(%rip)
f5a8(4): add $0x1,%rbp
f5ac(4): cmp 0x20(%r13),%rbp
f5b0(3): mov %r15,%r11
f5b3(3): mov %r12,%rbx
f5b6(6): jnl 0x2b2(%rip)
f5bc(4): mov 0x28(%r13),%rax
f5c0(4): mov 0x0(%rax,%rbp,8),%r9
f5c4(4): mov 0x8(%r9),%r15
f5c8(3): mov %r15,%rdx
f5cb(3): sub %r11,%rdx
f5ce(3): test %rdx,%rdx
f5d1(4): lea 0x0(%rdx,%rbx,1),%r12
f5d5(2): jle 0xffffffae(%rip)
f5d7(4): cmp %r12,0x30(%r14)
f5db(6): jnl 0xffffff75(%rip)
f5e1(4): cmp %r12,0x58(%r14)
f5e5(5): mov %rdx,0x18(%rsp)
f5ea(5): mov %r9,0x10(%rsp)
f5ef(6): jl 0x459(%rip)
f5f5(3): mov %r12,%rsi
f5f8(3): mov %r14,%rdi
f5fb(5): mov %r11,0x20(%rsp)
f600(5): call 0xffff9760(%rip)
f605(2): test %eax,%eax
f607(2): jnz 0x41(%rip)
f609(4): mov 0x8(%r14),%r8
f60d(5): mov 0x18(%rsp),%rdx
f612(5): mov 0x10(%rsp),%r9
f617(5): mov 0x20(%rsp),%r11
f61c(5): jmp 0xffffff34(%rip)
f621(7): nop 0x0(%rax)
f628(3): mov %rsi,%r8
f62b(3): mov %rdi,%rsi
f62e(2): nop 
f630(4): lea 0x1(%r8),%rcx
f634(3): mov %rsi,%rdi
f637(5): jmp 0xfffffdfc(%rip)
f63c(4): nop 0x0(%rax)
f640(2): xor %eax,%eax
f642(6): nop 0x0(%rax,%rax,1)
f648(8): mov 0xa8(%rsp),%rbx
f650(9): xor $0x28,%rbx
f659(6): jnz 0x553(%rip)
f65f(7): add $0xb8,%rsp
f666(1): pop %rbx
f667(1): pop %rbp
f668(2): pop %r12
f66a(2): pop %r13
f66c(2): pop %r14
f66e(2): pop %r15
f670(1): ret near (%rsp)
f671(7): nop 0x0(%rax)
f678(4): add $0x28,%rax
f67c(4): cmp $0x0,0xfffffff8(%rax)
f680(6): jz 0xfffffe36(%rip)
f686(3): cmp (%rax),%r13
f689(2): jnz 0xffffffef(%rip)
f68b(5): mov 0x70(%rsp),%rax
f690(5): cmp %rax,0x70(%rsp)
f695(b): mov $0x0,0x8c(%rsp)
f6a0(6): jnl 0xfffffce0(%rip)
f6a6(8): lea 0x0(,%r13,8),%rax
f6ae(5): mov 0x70(%rsp),%r12
f6b3(5): mov 0x38(%rsp),%rbp
f6b8(5): mov %rax,0x50(%rsp)
f6bd(5): lea 0x0(%r13,%r13,2),%rax
f6c2(4): lea 0x0(%r12,%r12,4),%r8
f6c6(4): shl/sal $0x3,%rax
f6ca(5): mov %rax,0x58(%rsp)
f6cf(8): lea 0x0(,%r8,8),%r15
f6d7(5): jmp 0x136(%rip)
f6dc(4): nop 0x0(%rax)
f6e0(4): mov 0x28(%rbp),%rcx
f6e4(5): mov 0x58(%rsp),%rdi
f6e9(5): mov 0x10(%rcx,%rdi,1),%rcx
f6ee(3): mov (%rcx),%rcx
f6f1(4): lea 0x0(%rcx,%rcx,2),%rcx
f6f5(4): lea 0x0(%rdx,%rcx,8),%rcx
f6f9(5): mov %rcx,0x18(%rsp)
f6fe(5): add 0x8(%rsp),%rbx
f703(7): mov 0xa0(%r14),%edx
f70a(3): mov %r14,%rdi
f70d(3): sub %rax,%rbx
f710(4): lea 0xffffffff(%rbx),%rsi
f714(5): call 0xffffbd9c(%rip)
f719(5): mov 0x60(%rsp),%rsi
f71e(2): mov %eax,%ecx
f720(7): mov 0xb8(%r14),%rax
f727(8): lea 0x0(,%rbx,8),%r10
f72f(9): mov $0x0,0x10(%rsp)
f738(4): lea 0x0(%rax,%r10,1),%r11
f73c(4): mov 0x0(%rax,%rsi,1),%rax
f740(3): mov (%r11),%rdx
f743(3): test %rax,%rax
f746(2): jz 0xb(%rip)
f748(4): mov 0x10(%rax),%rax
f74c(5): mov %rax,0x10(%rsp)
f751(3): test %rdx,%rdx
f754(6): jz 0x31c(%rip)
f75a(4): mov 0x50(%rdx),%rsi
f75e(5): mov 0x68(%rsp),%rdi
f763(5): mov 0x18(%rsp),%rdx
f768(5): mov %r10,0x30(%rsp)
f76d(4): mov %ecx,0x28(%rsp)
f771(5): call 0xffffb14f(%rip)
f776(2): test %eax,%eax
f778(7): mov %eax,0x8c(%rsp)
f77f(4): mov 0x28(%rsp),%ecx
f783(5): mov 0x30(%rsp),%r10
f788(6): jnz 0x390(%rip)
f78e(7): add 0xb8(%r14),%r10
f795(5): mov 0x68(%rsp),%rdx
f79a(3): mov %rbp,%rsi
f79d(5): mov 0x78(%rsp),%rdi
f7a2(5): mov %r10,0x28(%rsp)
f7a7(5): call 0xffffb279(%rip)
f7ac(5): mov 0x28(%rsp),%r10
f7b1(8): mov 0xa0(%rsp),%rdi
f7b9(3): mov %rax,(%r10)
f7bc(5): call 0xffff2344(%rip)
f7c1(7): mov 0xb8(%r14),%rdx
f7c8(5): cmp $0x0,0x0(%rdx,%rbx,8)
f7cd(6): jz 0x2d4(%rip)
f7d3(6): cmp $0x0,0x20(%rsp)
f7d9(2): jnz 0x1f(%rip)
f7db(5): mov 0x60(%rsp),%rax
f7e0(5): mov 0x10(%rsp),%rbx
f7e5(4): mov 0x0(%rdx,%rax,1),%rax
f7e9(4): cmp %rbx,0x10(%rax)
f7ed(6): jnle 0x2cb(%rip)
f7f3(5): nop 0x0(%rax,%rax,1)
f7f8(4): add $0x1,%r12
f7fc(4): add $0x28,%r15
f800(7): cmp 0xc8(%r14),%r12
f807(6): jnl 0xfffffb79(%rip)
f80d(7): mov 0xd8(%r14),%rax
f814(3): add %r15,%rax
f817(3): cmp (%rax),%r13
f81a(2): jnz 0xffffffde(%rip)
f81c(5): mov 0x8(%rsp),%rdi
f821(4): cmp 0x8(%rax),%rdi
f825(2): jnz 0xffffffd3(%rip)
f827(4): mov 0x18(%rax),%rbx
f82b(4): mov 0x10(%rax),%rax
f82f(4): mov 0x30(%rbp),%rdx
f833(3): mov %rbx,%rcx
f836(3): sub %rax,%rcx
f839(5): mov %rcx,0x20(%rsp)
f83e(6): jz 0xfffffea2(%rip)
f844(4): mov 0x18(%rbp),%rcx
f848(5): mov 0x50(%rsp),%rdi
f84d(4): mov 0x0(%rcx,%rdi,1),%rcx
f851(4): lea 0x0(%rcx,%rcx,2),%rcx
f855(4): lea 0x0(%rdx,%rcx,8),%rcx
f859(5): mov %rcx,0x18(%rsp)
f85e(5): jmp 0xfffffea0(%rip)
f863(5): nop 0x0(%rax,%rax,1)
f868(3): mov %r13,%rbx
f86b(3): mov %r8,%r13
f86e(4): lea 0x1(%r15),%r11
f872(5): cmp %r11,0x8(%rsp)
f877(6): jl 0xfffffc92(%rip)
f87d(3): mov %r12,%rax
f880(8): lea 0x0(,%r11,8),%r15
f888(3): mov %rbx,%r12
f88b(3): mov %r11,%rbx
f88e(3): mov %r13,%r11
f891(3): mov %rax,%r13
f894(4): nop 0x0(%rax)
f898(3): mov %rbx,%rax
f89b(4): sub (%r12),%rax
f89f(3): test %rax,%rax
f8a2(2): jle 0x23(%rip)
f8a4(4): cmp %r13,0x30(%r14)
f8a8(6): jle 0x289(%rip)
f8ae(6): movzx 0xffffffff(%r11,%rbx,1),%ecx
f8b4(4): lea 0x1(%r13),%rax
f8b8(4): cmp %cl,0x0(%r11,%r13,1)
f8bc(6): jnz 0x136(%rip)
f8c2(3): mov %rax,%r13
f8c5(7): mov 0xb8(%r14),%rax
f8cc(4): mov 0x0(%rax,%r15,1),%rax
f8d0(3): test %rax,%rax
f8d3(6): jz 0x10c(%rip)
f8d9(4): mov 0x10(%rax),%rcx
f8dd(3): test %rcx,%rcx
f8e0(6): jle 0xff(%rip)
f8e6(4): mov 0x18(%rax),%rdi
f8ea(5): mov 0x50(%rsp),%rax
f8ef(2): xor %edx,%edx
f8f1(5): mov 0x58(%rsp),%r8
f8f6(3): mov (%rax),%rsi
f8f9(2): jmp 0x14(%rip)
f8fb(5): nop 0x0(%rax,%rax,1)
f900(4): add $0x1,%rdx
f904(3): cmp %rdx,%rcx
f907(6): jz 0xd8(%rip)
f90d(4): mov 0x0(%rdi,%rdx,8),%rbp
f911(3): mov %rbp,%rax
f914(4): shl/sal $0x4,%rax
f918(3): add %rsi,%rax
f91b(4): cmp $0x9,0x8(%rax)
f91f(2): jnz 0xffffffe1(%rip)
f921(3): cmp (%rax),%r8
f924(2): jnz 0xffffffdc(%rip)
f926(4): cmp $0xffffffff,%rbp
f92a(6): jz 0xb5(%rip)
f930(5): mov 0x10(%r12),%rsi
f935(4): mov (%r12),%rcx
f939(3): test %rsi,%rsi
f93c(6): jz 0xc4(%rip)
f942(5): mov %r11,0x10(%rsp)
f947(5): mov 0x8(%r12),%rdx
f94c(4): sub $0x8,%rsp
f950(2): push $0x9
f952(3): mov %rbx,%r9
f955(3): mov %rbp,%r8
f958(3): mov %r14,%rdi
f95b(5): call 0xffffe785(%rip)
f960(1): pop %rdx
f961(3): cmp $0x1,%eax
f964(1): pop %rcx
f965(5): mov 0x10(%rsp),%r11
f96a(2): jz 0x75(%rip)
f96c(2): test %eax,%eax
f96e(6): jnz 0xfffffcda(%rip)
f974(5): mov 0x20(%r12),%rax
f979(5): cmp 0x18(%r12),%rax
f97e(6): jz 0x1da(%rip)
f984(5): mov $0x28,%esi
f989(5): mov $0x1,%edi
f98e(5): call 0xffff23a2(%rip)
f993(3): test %rax,%rax
f996(6): jz 0xa3(%rip)
f99c(5): mov 0x20(%r12),%rdx
f9a1(5): mov 0x28(%r12),%rcx
f9a6(3): mov %r12,%rsi
f9a9(5): mov 0x8(%rsp),%r8
f9ae(3): mov %r14,%rdi
f9b1(4): mov %rax,0x0(%rcx,%rdx,8)
f9b5(5): mov 0x30(%rsp),%rcx
f9ba(4): add $0x1,%rdx
f9be(3): mov %rbp,(%rax)
f9c1(4): mov %rbx,0x8(%rax)
f9c5(5): mov %rdx,0x20(%r12)
f9ca(3): mov %rax,%rdx
f9cd(5): call 0xfffff763(%rip)
f9d2(3): cmp $0x1,%eax
f9d5(4): mov 0x8(%r14),%r11
f9d9(6): jnbe 0xfffffc6f(%rip)
f9df(4): add $0x1,%rbx
f9e3(4): add $0x8,%r15
f9e7(5): cmp %rbx,0x8(%rsp)
f9ec(6): jnl 0xfffffeac(%rip)
f9f2(3): mov %r11,%r13
f9f5(5): jmp 0xfffffb14(%rip)
f9fa(6): nop 0x0(%rax,%rax,1)
fa00(3): mov %rbx,%rsi
fa03(5): mov $0x18,%edi
fa08(5): mov %r11,0x18(%rsp)
fa0d(3): sub %rcx,%rsi
fa10(5): mov %rcx,0x10(%rsp)
fa15(4): add $0x1,%rsi
fa19(5): call 0xffff2317(%rip)
fa1e(3): test %rax,%rax
fa21(3): mov %rax,%rsi
fa24(5): mov %rax,0x10(%r12)
fa29(5): mov 0x10(%rsp),%rcx
fa2e(5): mov 0x18(%rsp),%r11
fa33(6): jnz 0xffffff0f(%rip)
fa39(5): mov $0xc,%eax
fa3e(5): jmp 0xfffffc0a(%rip)
fa43(5): nop 0x0(%rax,%rax,1)
fa48(3): mov %rbx,%rcx
fa4b(3): mov %r13,%rbx
fa4e(3): mov %r8,%r13
fa51(4): cmp %rbp,0x20(%rbx)
fa55(6): jnle 0xfffffab4(%rip)
fa5b(3): test %rbp,%rbp
fa5e(3): mov %rcx,%r12
fa61(6): jz 0xfffffe11(%rip)
fa67(3): mov %r11,%r15
fa6a(5): jmp 0xfffffe04(%rip)
fa6f(1): nop 
fa70(5): mov 0x18(%rsp),%rdx
fa75(5): mov 0x78(%rsp),%rdi
fa7a(3): mov %rbp,%rsi
fa7d(5): mov %r11,0x28(%rsp)
fa82(5): call 0xffffaf9e(%rip)
fa87(5): mov 0x28(%rsp),%r11
fa8c(7): mov 0xb8(%r14),%rdx
fa93(3): mov %rax,(%r11)
fa96(5): cmp $0x0,0x0(%rdx,%rbx,8)
fa9b(6): jnz 0xfffffd38(%rip)
faa1(7): mov 0x8c(%rsp),%eax
faa8(2): test %eax,%eax
faaa(6): jz 0xfffffd29(%rip)
fab0(5): jmp 0xfffffb98(%rip)
fab5(3): nop (%rax)
fab8(5): mov 0x18(%rsp),%rax
fabd(5): mov 0x8(%rsp),%rcx
fac2(3): mov %r14,%rdi
fac5(4): lea 0x10(%rax),%r8
fac9(4): lea 0x8(%rax),%rbx
facd(3): mov %r8,%rdx
fad0(3): mov %rbx,%rsi
fad3(5): mov %r8,0x10(%rsp)
fad8(5): call 0xffffb888(%rip)
fadd(2): test %eax,%eax
fadf(7): mov %eax,0x8c(%rsp)
fae6(6): jnz 0xfffffb62(%rip)
faec(5): mov 0x10(%rsp),%r8
faf1(3): mov %rbx,%rsi
faf4(3): mov %r14,%rdi
faf7(3): mov %r8,%rdx
fafa(5): call 0xfffff7d6(%rip)
faff(2): test %eax,%eax
fb01(7): mov %eax,0x8c(%rsp)
fb08(6): jz 0xfffffcf0(%rip)
fb0e(5): jmp 0xfffffb3a(%rip)
fb13(5): nop 0x0(%rax,%rax,1)
fb18(8): mov 0xa0(%rsp),%rdi
fb20(5): call 0xffff1fe0(%rip)
fb25(7): mov 0x8c(%rsp),%eax
fb2c(5): jmp 0xfffffb1c(%rip)
fb31(4): cmp %r13,0x58(%r14)
fb35(6): jle 0xfffffebd(%rip)
fb3b(4): lea 0x1(%r13),%esi
fb3f(3): mov %r14,%rdi
fb42(5): call 0xffff90ce(%rip)
fb47(2): test %eax,%eax
fb49(6): jnz 0xfffffaff(%rip)
fb4f(4): mov 0x8(%r14),%r11
fb53(5): jmp 0xfffffd5b(%rip)
fb58(5): lea 0x1(%rax,%rax,1),%rdx
fb5d(5): mov 0x28(%r12),%rdi
fb62(8): lea 0x0(,%rdx,8),%rsi
fb6a(5): mov %rdx,0x10(%rsp)
fb6f(5): call 0xffff2291(%rip)
fb74(3): test %rax,%rax
fb77(6): jz 0xfffffec2(%rip)
fb7d(5): mov 0x10(%rsp),%rdx
fb82(5): mov %rax,0x28(%r12)
fb87(5): mov %rdx,0x18(%r12)
fb8c(5): jmp 0xfffffdf8(%rip)
fb91(5): mov 0x30(%rsp),%r13
fb96(7): mov 0xc8(%r14),%rax
fb9d(5): jmp 0xfffffaf3(%rip)
fba2(5): mov 0x8(%rsp),%r12
fba7(5): jmp 0xfffffccb(%rip)
fbac(5): call 0xffff2074(%rip)

"merge_state_with_log" :
fbc0(2): push %r15
fbc2(2): push %r14
fbc4(2): push %r13
fbc6(2): push %r12
fbc8(3): mov %rdi,%r13
fbcb(1): push %rbp
fbcc(1): push %rbx
fbcd(3): mov %rsi,%rbx
fbd0(4): sub $0x38,%rsp
fbd4(4): mov 0x48(%rsi),%r12
fbd8(7): mov 0xb8(%rsi),%r14
fbdf(9): mov $0x28,%rax
fbe8(5): mov %rax,0x28(%rsp)
fbed(2): xor %eax,%eax
fbef(7): mov 0x98(%rsi),%r15
fbf6(8): lea 0x0(,%r12,8),%rbp
fbfe(3): add %rbp,%r14
fc01(7): cmp %r12,0xc0(%rsi)
fc08(2): jnl 0x48(%rip)
fc0a(3): mov %rdx,(%r14)
fc0d(3): mov %rdx,%rbp
fc10(7): mov %r12,0xc0(%rsi)
fc17(8): cmp $0x0,0x98(%r15)
fc1f(6): jnz 0x129(%rip)
fc25(5): mov 0x28(%rsp),%rcx
fc2a(9): xor $0x28,%rcx
fc33(3): mov %rbp,%rax
fc36(6): jnz 0x171(%rip)
fc3c(4): add $0x38,%rsp
fc40(1): pop %rbx
fc41(1): pop %rbp
fc42(2): pop %r12
fc44(2): pop %r13
fc46(2): pop %r14
fc48(2): pop %r15
fc4a(1): ret near (%rsp)
fc4b(5): nop 0x0(%rax,%rax,1)
fc50(3): mov (%r14),%rax
fc53(3): test %rax,%rax
fc56(6): jz 0xe2(%rip)
fc5c(3): test %rdx,%rdx
fc5f(4): mov 0x50(%rax),%rax
fc63(6): jz 0x8d(%rip)
fc69(4): mov 0x50(%rdx),%r14
fc6d(5): lea 0x10(%rsp),%rdi
fc72(3): mov %rax,%rdx
fc75(4): mov %rdi,(%rsp)
fc79(3): mov %r14,%rsi
fc7c(5): call 0xffffac44(%rip)
fc81(2): test %eax,%eax
fc83(4): mov %eax,0x0(%r13)
fc87(6): jnz 0x119(%rip)
fc8d(4): mov 0x48(%rbx),%rax
fc91(6): mov 0xa0(%rbx),%edx
fc97(3): mov %rbx,%rdi
fc9a(4): lea 0xffffffff(%rax),%rsi
fc9e(5): call 0xffffb812(%rip)
fca3(7): mov 0xb8(%rbx),%r8
fcaa(4): mov (%rsp),%rdx
fcae(2): mov %eax,%ecx
fcb0(3): mov %r15,%rsi
fcb3(3): mov %r13,%rdi
fcb6(3): add %rbp,%r8
fcb9(5): mov %r8,0x8(%rsp)
fcbe(5): call 0xffffad62(%rip)
fcc3(5): mov 0x8(%rsp),%r8
fcc8(3): test %r14,%r14
fccb(3): mov %rax,%rbp
fcce(3): mov %rax,(%r8)
fcd1(6): jz 0xffffff46(%rip)
fcd7(5): mov 0x20(%rsp),%rdi
fcdc(5): call 0xffff1e24(%rip)
fce1(5): jmp 0xffffff36(%rip)
fce6(a): nop 0x0(%rax,%rax,1)
fcf0(4): movdqu (%rax),%xmm0
fcf4(3): mov %rbx,%rdi
fcf7(6): mov 0xa0(%rsi),%edx
fcfd(5): lea 0xffffffff(%r12),%rsi
fd02(5): movaps %xmm0,0x10(%rsp)
fd07(4): mov 0x10(%rax),%rax
fd0b(5): mov %rax,0x20(%rsp)
fd10(5): call 0xffffb7a0(%rip)
fd15(5): lea 0x10(%rsp),%rdx
fd1a(2): mov %eax,%ecx
fd1c(3): mov %r15,%rsi
fd1f(3): mov %r13,%rdi
fd22(5): call 0xffffacfe(%rip)
fd27(3): mov %rax,%rbp
fd2a(3): mov %rax,(%r14)
fd2d(5): jmp 0xfffffeea(%rip)
fd32(6): nop 0x0(%rax,%rax,1)
fd38(3): mov %rdx,(%r14)
fd3b(3): mov %rdx,%rbp
fd3e(5): jmp 0xfffffed9(%rip)
fd43(5): nop 0x0(%rax,%rax,1)
fd48(3): test %rbp,%rbp
fd4b(2): jz 0x55(%rip)
fd4d(4): lea 0x10(%rbp),%r14
fd51(4): lea 0x18(%rbp),%r15
fd55(3): mov %r12,%rcx
fd58(3): mov %rbx,%rdi
fd5b(3): mov %r15,%rdx
fd5e(3): mov %r14,%rsi
fd61(5): call 0xffffb5ff(%rip)
fd66(2): test %eax,%eax
fd68(4): mov %eax,0x0(%r13)
fd6c(2): jnz 0x34(%rip)
fd6e(4): test $0x40,0x68(%rbp)
fd72(6): jz 0xfffffeb3(%rip)
fd78(3): mov %r15,%rdx
fd7b(3): mov %r14,%rsi
fd7e(3): mov %rbx,%rdi
fd81(5): call 0xfffff54f(%rip)
fd86(2): test %eax,%eax
fd88(4): mov %eax,0x0(%r13)
fd8c(2): jnz 0x14(%rip)
fd8e(7): mov 0xb8(%rbx),%rax
fd95(4): mov 0x0(%rax,%r12,8),%rbp
fd99(5): jmp 0xfffffe8c(%rip)
fd9e(2): nop 
fda0(2): xor %ebp,%ebp
fda2(5): jmp 0xfffffe83(%rip)
fda7(5): call 0xffff1e79(%rip)

"sift_states_backward" :
fdb0(2): push %r15
fdb2(2): push %r14
fdb4(3): mov %rdi,%r14
fdb7(2): push %r13
fdb9(2): push %r12
fdbb(3): mov %rsi,%r13
fdbe(1): push %rbp
fdbf(1): push %rbx
fdc0(4): sub $0x68,%rsp
fdc4(4): mov 0x18(%rsi),%r15
fdc8(4): mov 0x10(%rsi),%rbx
fdcc(4): mov %rdi,(%rsp)
fdd0(5): mov $0x8,%edi
fdd5(9): mov $0x1,0x40(%rsp)
fdde(9): mov $0x28,%rax
fde7(5): mov %rax,0x58(%rsp)
fdec(2): xor %eax,%eax
fdee(9): mov $0x1,0x48(%rsp)
fdf7(5): call 0xffff1fa9(%rip)
fdfc(3): test %rax,%rax
fdff(5): mov %rax,0x50(%rsp)
fe04(6): jz 0x2e0(%rip)
fe0a(5): lea 0x40(%rsp),%rcx
fe0f(3): mov %rbx,(%rax)
fe12(3): mov %r15,%rdx
fe15(3): mov %r13,%rsi
fe18(3): mov %r14,%rdi
fe1b(5): mov %rcx,0x10(%rsp)
fe20(5): call 0x1a00(%rip)
fe25(2): test %eax,%eax
fe27(6): jnz 0x28e(%rip)
fe2d(8): lea 0x0(,%r15,8),%rax
fe35(3): test %r15,%r15
fe38(8): mov $0x0,0x2c(%rsp)
fe40(5): mov %rax,0x8(%rsp)
fe45(4): lea 0x30(%r13),%rax
fe49(5): mov %rax,0x38(%rsp)
fe4e(6): jle 0x209(%rip)
fe54(4): mov 0x0(%r13),%rdi
fe58(5): mov 0x8(%rsp),%rax
fe5d(5): cmp $0x0,0x0(%rdi,%rax,1)
fe62(6): jz 0x216(%rip)
fe68(4): mov (%rsp),%rax
fe6c(8): mov $0x0,0x2c(%rsp)
fe74(4): mov 0x2c(%rsp),%ecx
fe78(6): cmp %ecx,0xe0(%rax)
fe7e(6): jl 0x213(%rip)
fe84(4): mov (%rsp),%rbx
fe88(5): mov 0x8(%rsp),%rdi
fe8d(4): sub $0x1,%r15
fe91(9): mov $0x0,0x48(%rsp)
fe9a(7): mov 0xb8(%rbx),%rax
fea1(5): mov 0xfffffff8(%rax,%rdi,1),%r12
fea6(3): test %r12,%r12
fea9(6): jz 0x187(%rip)
feaf(6): cmp $0x0,0x28(%r12)
feb5(7): mov 0x98(%rbx),%r14
febc(6): jle 0x174(%rip)
fec2(2): xor %ebx,%ebx
fec4(5): jmp 0xa7(%rip)
fec9(7): nop 0x0(%rax)
fed0(4): mov (%rsp),%rdi
fed4(3): mov %r15,%rdx
fed7(5): call 0xffffb6c9(%rip)
fedc(2): test %al,%al
fede(2): jz 0x7e(%rip)
fee0(4): mov 0x0(%r13),%rax
fee4(5): mov 0x8(%rsp),%rcx
fee9(4): mov 0x0(%rax,%rcx,1),%rax
feed(3): test %rax,%rax
fef0(2): jz 0x6c(%rip)
fef2(4): mov 0x18(%r14),%rdx
fef6(4): mov 0x10(%rax),%rdi
fefa(4): lea 0x18(%rax),%rsi
fefe(4): mov 0x0(%rdx,%rbp,8),%rdx
ff02(5): call 0xffff97ce(%rip)
ff07(3): test %rax,%rax
ff0a(2): jz 0x52(%rip)
ff0c(6): mov $0x1,%r10d
ff12(5): cmp $0x0,0x28(%r13)
ff17(2): jz 0x30(%rip)
ff19(4): mov 0x18(%r14),%rax
ff1d(4): sub $0x8,%rsp
ff21(4): lea 0x28(%r13),%rsi
ff25(4): lea 0x0(%r10,%r15,1),%r8
ff29(3): mov %rbp,%r9
ff2c(4): mov 0x0(%rax,%rbp,8),%rcx
ff30(2): push %r15
ff32(5): mov 0x48(%rsp),%rdx
ff37(5): mov 0x10(%rsp),%rdi
ff3c(5): call 0xffff9a44(%rip)
ff41(2): test %al,%al
ff43(1): pop %rdx
ff44(1): pop %rcx
ff45(2): jnz 0x17(%rip)
ff47(5): mov 0x10(%rsp),%rdi
ff4c(3): mov %rbp,%rsi
ff4f(5): call 0xffff8241(%rip)
ff54(2): test %al,%al
ff56(6): jz 0x15a(%rip)
ff5c(4): add $0x1,%rbx
ff60(5): cmp 0x28(%r12),%rbx
ff65(6): jnl 0xcb(%rip)
ff6b(5): mov 0x30(%r12),%rax
ff70(3): mov (%r14),%rsi
ff73(4): mov 0x0(%rax,%rbx,8),%rbp
ff77(3): mov %rbp,%r9
ff7a(4): shl/sal $0x4,%r9
ff7e(3): add %r9,%rsi
ff81(4): test $0x10,0xa(%rsi)
ff85(6): jz 0xffffff4b(%rip)
ff8b(4): mov (%rsp),%rcx
ff8f(4): mov 0x18(%r13),%rax
ff93(3): mov %r15,%r8
ff96(3): mov %rbp,%rdx
ff99(5): mov %r9,0x18(%rsp)
ff9e(7): mov 0x98(%rcx),%r11
ffa5(5): mov %rax,0x20(%rsp)
ffaa(3): mov (%r11),%rdi
ffad(7): lea 0xd8(%r11),%rsi
ffb4(5): mov %r11,0x30(%rsp)
ffb9(5): call 0xffffdec7(%rip)
ffbe(3): movsxd %eax,%r10
ffc1(5): mov 0x18(%rsp),%r9
ffc6(4): cmp $0x0,%r10d
ffca(6): jle 0x96(%rip)
ffd0(3): movsxd %r10d,%rax
ffd3(3): add %r15,%rax
ffd6(5): cmp %rax,0x20(%rsp)
ffdb(6): jl 0xffffff37(%rip)
ffe1(4): mov 0x0(%r13),%rdx
ffe5(5): mov 0x30(%rsp),%r11
ffea(4): mov 0x0(%rdx,%rax,8),%rax
ffee(3): test %rax,%rax
fff1(2): jz 0x75(%rip)
fff3(4): mov 0x18(%r11),%rdx
fff7(4): mov 0x10(%rax),%rdi
fffb(4): lea 0x18(%rax),%rsi
ffff(5): mov %r9,0x18(%rsp)
10004(4): mov 0x0(%rdx,%rbp,8),%rdx
10008(5): call 0xffff96c8(%rip)
1000d(3): test %rax,%rax
10010(6): jnz 0xffffff02(%rip)
10016(5): mov 0x18(%rsp),%r9
1001b(3): mov (%r14),%rsi
1001e(3): add %r9,%rsi
10021(5): jmp 0xfffffeaf(%rip)
10026(a): nop 0x0(%rax,%rax,1)
10030(5): mov 0x10(%rsp),%rcx
10035(4): mov (%rsp),%rdi
10039(3): mov %r15,%rdx
1003c(3): mov %r13,%rsi
1003f(5): call 0x17e1(%rip)
10044(2): test %eax,%eax
10046(2): jnz 0x6f(%rip)
10048(6): sub $0x8,0x8(%rsp)
1004e(3): test %r15,%r15
10051(6): jnz 0xfffffe03(%rip)
10057(2): xor %eax,%eax
10059(2): jmp 0x5c(%rip)
1005b(5): nop 0x0(%rax,%rax,1)
10060(6): jnz 0xfffffeb2(%rip)
10066(3): mov (%r14),%rsi
10069(3): add %r9,%rsi
1006c(5): jmp 0xfffffe64(%rip)
10071(7): nop 0x0(%rax)
10078(4): mov (%rsp),%rax
1007c(5): add $0x1,0x2c(%rsp)
10081(4): mov 0x2c(%rsp),%ecx
10085(6): cmp %ecx,0xe0(%rax)
1008b(6): jnl 0xfffffdf9(%rip)
10091(5): mov 0x8(%rsp),%rdx
10096(2): xor %esi,%esi
10098(5): call 0xffff1c18(%rip)
1009d(5): mov 0x50(%rsp),%rdi
100a2(5): call 0xffff1a5e(%rip)
100a7(2): xor %eax,%eax
100a9(2): jmp 0x1c(%rip)
100ab(5): nop 0x0(%rax,%rax,1)
100b0(5): mov $0xc,%eax
100b5(5): mov 0x50(%rsp),%rdi
100ba(3): mov %eax,(%rsp)
100bd(5): call 0xffff1a43(%rip)
100c2(3): mov (%rsp),%eax
100c5(5): mov 0x58(%rsp),%rdx
100ca(9): xor $0x28,%rdx
100d3(2): jnz 0x18(%rip)
100d5(4): add $0x68,%rsp
100d9(1): pop %rbx
100da(1): pop %rbp
100db(2): pop %r12
100dd(2): pop %r13
100df(2): pop %r14
100e1(2): pop %r15
100e3(1): ret near (%rsp)
100e4(5): mov $0xc,%eax
100e9(2): jmp 0xffffffdc(%rip)
100eb(5): call 0xffff1b35(%rip)

"re_search_internal" :
100f0(2): push %r15
100f2(2): push %r14
100f4(2): push %r13
100f6(2): push %r12
100f8(3): mov %r9,%r13
100fb(1): push %rbp
100fc(1): push %rbx
100fd(3): mov %rcx,%rbp
10100(5): mov $0x20,%ecx
10105(3): mov %r8,%r12
10108(7): sub $0x238,%rsp
1010f(3): mov (%rdi),%rbx
10112(8): mov 0x278(%rsp),%rax
1011a(5): mov %rdi,0x48(%rsp)
1011f(5): mov %rsi,0x78(%rsp)
10124(3): mov %rdi,%rsi
10127(8): lea 0x120(%rsp),%rdi
1012f(8): mov %rdx,0x88(%rsp)
10137(5): mov %rbx,0x38(%rsp)
1013c(8): mov %rax,0xb8(%rsp)
10144(4): mov %rdi,(%rsp)
10148(9): mov $0x28,%rax
10151(8): mov %rax,0x228(%rsp)
10159(2): xor %eax,%eax
1015b(3): REP stosd %rax,rdi(%es,10)
1015e(4): mov 0x20(%rsi),%rdi
10162(8): mov %rbx,0x1b8(%rsp)
1016a(3): test %rdi,%rdi
1016d(5): mov %rdi,0x68(%rsp)
10172(2): jz 0x24(%rip)
10174(4): movzx 0x38(%rsi),%edx
10178(3): test $0x8,%dl
1017b(6): jz 0x495(%rip)
10181(3): cmp %r8,%rbp
10184(6): jz 0x48c(%rip)
1018a(3): and $0x1,%edx
1018d(4): cmove %rdi,%rax
10191(5): mov %rax,0x68(%rsp)
10196(5): mov 0x48(%rsp),%rax
1019b(c): mov $0x0,0x98(%rsp)
101a7(4): mov 0x30(%rax),%rax
101ab(8): cmp 0x270(%rsp),%rax
101b3(2): jnb 0x21(%rip)
101b5(8): mov 0x270(%rsp),%rcx
101bd(4): lea 0xffffffff(%rcx),%rdx
101c1(3): sub %rax,%rdx
101c4(8): sub %rdx,0x270(%rsp)
101cc(8): mov %rdx,0x98(%rsp)
101d4(5): mov 0x48(%rsp),%rsi
101d9(5): cmp $0x0,0x10(%rsi)
101de(6): jz 0xe92(%rip)
101e4(5): mov 0x38(%rsp),%rdi
101e9(4): mov 0x48(%rdi),%rax
101ed(3): test %rax,%rax
101f0(6): jz 0xe80(%rip)
101f6(4): mov 0x50(%rdi),%rdx
101fa(3): test %rdx,%rdx
101fd(6): jz 0xe73(%rip)
10203(4): mov 0x58(%rdi),%rcx
10207(3): test %rcx,%rcx
1020a(6): jz 0xe66(%rip)
10210(5): cmp $0x0,0x60(%rdi)
10215(6): jz 0xe5b(%rip)
1021b(5): cmp $0x0,0x10(%rax)
10220(2): jnz 0x38(%rip)
10222(5): cmp $0x0,0x10(%rdx)
10227(2): jnz 0x31(%rip)
10229(5): cmp $0x0,0x10(%rcx)
1022e(2): jz 0x8(%rip)
10230(4): cmp $0x0,0x38(%rsi)
10234(2): js 0x24(%rip)
10236(3): test %rbp,%rbp
10239(2): jz 0x13(%rip)
1023b(3): test %r12,%r12
1023e(8): mov $0x1,0x5c(%rsp)
10246(6): jnz 0xa23(%rip)
1024c(3): xor %r12d,%r12d
1024f(2): xor %ebp,%ebp
10251(7): nop 0x0(%rax)
10258(9): cmp $0x0,0x270(%rsp)
10261(8): mov $0x1,0x58(%rsp)
10269(6): jz 0x387(%rip)
1026f(5): mov 0x38(%rsp),%r11
10274(5): mov 0x48(%rsp),%rax
10279(8): mov 0x88(%rsp),%rdi
10281(4): mov 0x10(%r11),%rsi
10285(4): mov 0x28(%rax),%rbx
10289(7): mov 0xb4(%r11),%edx
10290(4): mov 0x18(%rax),%rax
10294(8): mov %rdi,0x178(%rsp)
1029c(8): mov %rdi,0x170(%rsp)
102a4(5): mov %rsi,0x8(%rsp)
102a9(4): lea 0x1(%rsi),%rsi
102ad(8): mov %rbx,0xb0(%rsp)
102b5(3): movsxd %edx,%rcx
102b8(4): shr $0x16,%rax
102bc(8): mov %rbx,0x198(%rsp)
102c4(3): and $0x1,%eax
102c7(3): cmp %rcx,%rsi
102ca(7): mov %edx,0x1b0(%rsp)
102d1(4): cmovnge %rcx,%rsi
102d5(4): lea 0x1(%rdi),%rcx
102d9(7): mov %al,0x1a8(%rsp)
102e0(8): mov %rdi,0x188(%rsp)
102e8(8): mov %rdi,0x180(%rsp)
102f0(3): cmp %rcx,%rsi
102f3(4): mov (%rsp),%rdi
102f7(4): cmovnl %rcx,%rsi
102fb(3): test %rbx,%rbx
102fe(5): mov 0x78(%rsp),%rcx
10303(3): setnz %bl
10306(2): or %ebx,%eax
10308(7): mov %al,0x1ab(%rsp)
1030f(8): movzx 0xb0(%r11),%eax
10317(8): mov %rcx,0x120(%rsp)
1031f(2): mov %eax,%edx
10321(3): shr $0x3,%al
10324(3): shr $0x2,%dl
10327(3): and $0x1,%eax
1032a(3): and $0x1,%edx
1032d(7): mov %al,0x1aa(%rsp)
10334(7): mov %dl,0x1a9(%rsp)
1033b(5): call 0xffff7d45(%rip)
10340(2): test %eax,%eax
10342(4): mov %eax,0x5c(%rsp)
10346(6): jnz 0x8fa(%rip)
1034c(5): mov 0x38(%rsp),%rdi
10351(7): lea 0xb8(%rdi),%rax
10358(8): mov %rax,0x1a0(%rsp)
10360(7): movzx 0xb0(%rdi),%eax
10367(4): mov %al,0x8(%rsp)
1036b(3): shr $0x4,%al
1036e(3): and $0x1,%eax
10371(8): cmp $0x0,0x1ab(%rsp)
10379(7): mov %al,0x1ae(%rsp)
10380(2): jnz 0x25(%rip)
10382(5): mov 0x38(%rsp),%rsi
10387(5): mov 0x78(%rsp),%rax
1038c(7): cmp $0x1,0xb4(%rsi)
10393(8): mov %rax,0x128(%rsp)
1039b(8): mov 0x88(%rsp),%rax
103a3(2): jle 0x4(%rip)
103a5(2): xor %eax,%eax
103a7(8): mov %rax,0x150(%rsp)
103af(8): mov %rax,0x158(%rsp)
103b7(5): mov 0x48(%rsp),%rax
103bc(8): mov %r13,0x188(%rsp)
103c4(8): mov %r13,0x180(%rsp)
103cc(4): movzx 0x38(%rax),%eax
103d0(4): mov %al,0x8(%rsp)
103d4(3): shr $0x7,%al
103d7(7): mov %al,0x1ad(%rsp)
103de(5): mov 0x38(%rsp),%rax
103e3(7): mov 0x98(%rax),%r14
103ea(7): mov 0x280(%rsp),%eax
103f1(c): mov $0xffffffff,0x1c8(%rsp)
103fd(4): lea 0x0(%r14,%r14,1),%r13
10401(7): mov %eax,0x1c0(%rsp)
10408(3): test %r13,%r13
1040b(2): jle 0x54(%rip)
1040d(a): mov $0x461168601842738790,%rax
10417(3): cmp %rax,%r13
1041a(6): jnle 0xd46(%rip)
10420(5): lea 0x0(%r13,%r14,8),%rdi
10425(4): shl/sal $0x3,%rdi
10429(5): call 0xffff1977(%rip)
1042e(3): mov %r14,%rdi
10431(3): mov %rax,%r15
10434(8): mov %rax,0x1f8(%rsp)
1043c(4): shl/sal $0x4,%rdi
10440(5): call 0xffff1960(%rip)
10445(3): test %rax,%rax
10448(8): mov %rax,0x218(%rsp)
10450(6): jz 0xd10(%rip)
10456(3): test %r15,%r15
10459(6): jz 0xd07(%rip)
1045f(9): cmp $0x1,0x270(%rsp)
10468(8): mov %r13,0x1f0(%rsp)
10470(b): mov $0x1,0x200(%rsp)
1047b(8): mov %r13,0x210(%rsp)
10483(6): jbe 0x1125(%rip)
10489(8): mov 0x160(%rsp),%rax
10491(a): mov $0x2305843009213693950,%rdx
1049b(3): cmp %rdx,%rax
1049e(6): jnbe 0xcc2(%rip)
104a4(8): lea 0x8(,%rax,8),%rdi
104ac(5): call 0xffff18f4(%rip)
104b1(3): test %rax,%rax
104b4(3): mov %rax,%rdi
104b7(8): mov %rax,0x1d8(%rsp)
104bf(6): jz 0xcf1(%rip)
104c5(7): mov 0x280(%rsp),%eax
104cc(8): mov %rbp,0xd8(%rsp)
104d4(3): and $0x1,%eax
104d7(3): cmp $0x1,%eax
104da(2): sbb %eax,%eax
104dc(3): and $0x2,%eax
104df(3): add $0x4,%eax
104e2(7): mov %eax,0x190(%rsp)
104e9(2): xor %eax,%eax
104eb(3): cmp %r12,%rbp
104ee(3): setle %al
104f1(4): lea 0xffffffff(%rax,%rax,1),%eax
104f5(7): mov %eax,0xac(%rsp)
104fc(3): mov %r12,%rax
104ff(4): cmovng %rbp,%rax
10503(8): mov %rax,0x90(%rsp)
1050b(3): mov %r12,%rax
1050e(4): cmovnl %rbp,%rax
10512(6): cmp $0x0,0x68(%rsp)
10518(5): mov %rax,0x70(%rsp)
1051d(5): mov 0x38(%rsp),%rax
10522(6): mov 0xb4(%rax),%esi
10528(5): mov $0x8,%eax
1052d(7): mov %esi,0xc8(%rsp)
10534(2): jz 0x3b(%rip)
10536(3): cmp $0x1,%esi
10539(5): mov $0x4,%ecx
1053e(2): jz 0x20(%rip)
10540(5): mov 0x48(%rsp),%rax
10545(4): test $0x40,0x1a(%rax)
10549(6): jnz 0xd85(%rip)
1054f(9): cmp $0x0,0xb0(%rsp)
10558(6): jnz 0xd76(%rip)
1055e(2): xor %edx,%edx
10560(3): cmp %r12,%rbp
10563(3): movzx %bl,%eax
10566(3): setle %dl
10569(2): or %ecx,%eax
1056b(2): add %edx,%edx
1056d(2): or %edx,%eax
1056f(5): cmp 0x70(%rsp),%rbp
10574(3): setnle %cl
10577(8): cmp 0x90(%rsp),%rbp
1057f(3): setl %dl
10582(2): or %dl,%cl
10584(6): jnz 0xad5(%rip)
1058a(8): lea 0xd8(%rsp),%rcx
10592(3): cmp %r12,%rbp
10595(5): mov $0x0,%edx
1059a(4): cmovng %rcx,%rdx
1059e(3): test %rdx,%rdx
105a1(8): mov %rdx,0xc0(%rsp)
105a9(8): setnz 0xcf(%rsp)
105b1(3): sub $0x4,%eax
105b4(7): mov %eax,0xa8(%rsp)
105bb(8): lea 0xd0(%rsp),%rax
105c3(5): mov %rax,0x28(%rsp)
105c8(7): mov 0xa8(%rsp),%eax
105cf(3): cmp $0x4,%eax
105d2(6): jnbe 0xbeb(%rip)
105d8(7): lea 0x7181(%rip),%rcx
105df(4): movsxd 0x0(%rcx,%rax,4),%rax
105e3(3): add %rcx,%rax
105e6(2): jmp %rax
105e8(8): nop 0x0(%rax,%rax,1)
105f0(5): mov 0x38(%rsp),%rax
105f5(8): cmp $0x0,0x98(%rax)
105fd(3): setnz %al
10600(3): movzx %al,%eax
10603(4): mov %eax,0x58(%rsp)
10607(5): jmp 0xfffffc68(%rip)
1060c(4): nop 0x0(%rax)
10610(9): mov $0x0,0x68(%rsp)
10619(5): jmp 0xfffffb7d(%rip)
1061e(5): cmp %rbp,0x70(%rsp)
10623(2): jle 0x5c(%rip)
10625(5): mov 0x78(%rsp),%rax
1062a(5): mov 0x68(%rsp),%rdi
1062f(4): movzx 0x0(%rax,%rbp,1),%edx
10633(4): lea 0x1(%rbp),%rax
10637(4): cmp $0x0,0x0(%rdi,%rdx,1)
1063b(6): jnz 0x8d(%rip)
10641(5): mov 0x68(%rsp),%rsi
10646(5): mov 0x70(%rsp),%rcx
1064b(5): mov 0x78(%rsp),%rdi
10650(2): jmp 0x1a(%rip)
10652(6): nop 0x0(%rax,%rax,1)
10658(4): movzx 0x0(%rdi,%rax,1),%edx
1065c(4): lea 0x1(%rax),%rax
10660(4): cmp $0x0,0x0(%rsi,%rdx,1)
10664(6): jnz 0x119d(%rip)
1066a(3): cmp %rax,%rcx
1066d(3): mov %rax,%rbp
10670(2): jnz 0xffffffe8(%rip)
10672(5): mov 0x70(%rsp),%rax
10677(8): mov %rax,0xd8(%rsp)
1067f(5): cmp %rbp,0x70(%rsp)
10684(2): jnz 0x44(%rip)
10686(2): xor %eax,%eax
10688(5): mov 0x70(%rsp),%rsi
1068d(8): cmp %rsi,0x88(%rsp)
10695(2): jle 0xb(%rip)
10697(5): mov 0x78(%rsp),%rax
1069c(4): movzx 0x0(%rax,%rsi,1),%eax
106a0(8): mov 0xb0(%rsp),%rsi
106a8(3): test %rsi,%rsi
106ab(2): jz 0x6(%rip)
106ad(4): movzx 0x0(%rsi,%rax,1),%eax
106b1(5): mov 0x68(%rsp),%rdi
106b6(4): cmp $0x0,0x0(%rdi,%rax,1)
106ba(6): jz 0x99f(%rip)
106c0(5): mov 0x70(%rsp),%rbp
106c5(3): nop (%rax)
106c8(7): mov 0x280(%rsp),%edx
106cf(4): mov (%rsp),%rdi
106d3(3): mov %rbp,%rsi
106d6(5): call 0xffffb0aa(%rip)
106db(2): test %eax,%eax
106dd(4): mov %eax,0x5c(%rsp)
106e1(6): jnz 0x55f(%rip)
106e7(8): cmp $0x1,0xc8(%rsp)
106ef(2): jz 0x1e(%rip)
106f1(9): cmp $0x0,0x150(%rsp)
106fa(2): jz 0x13(%rip)
106fc(8): mov 0x130(%rsp),%rax
10704(3): cmp $0xff,(%rax)
10707(6): jz 0x92a(%rip)
1070d(8): mov 0x1b8(%rsp),%rbx
10715(5): movzx 0x58(%rsp),%eax
1071a(b): mov $0x0,0x200(%rsp)
10725(c): mov $0x0,0x1e8(%rsp)
10731(c): mov $0x0,0x1e0(%rsp)
1073d(b): mov $0x0,0xd0(%rsp)
10748(4): mov 0x48(%rbx),%r14
1074c(3): and $0x1,%eax
1074f(7): mov %al,0xce(%rsp)
10756(8): mov 0x168(%rsp),%rax
1075e(5): cmp $0x0,0x68(%r14)
10763(5): mov %rax,0x8(%rsp)
10768(6): js 0x978(%rip)
1076e(8): mov 0x1d8(%rsp),%rax
10776(3): test %rax,%rax
10779(2): jz 0x19(%rip)
1077b(8): cmp $0x0,0x98(%rbx)
10783(5): mov 0x8(%rsp),%rdi
10788(4): mov %r14,0x0(%rax,%rdi,8)
1078c(6): jnz 0xeef(%rip)
10792(8): movzx 0xcf(%rsp),%eax
1079a(4): mov %al,0x18(%rsp)
1079e(5): movzx 0x68(%r14),%eax
107a3(2): test $0x10,%al
107a5(9): mov $0xffffffff,0x20(%rsp)
107ae(9): mov $0x0,0x30(%rsp)
107b7(6): jnz 0xe89(%rip)
107bd(8): mov 0xc0(%rsp),%rax
107c5(8): mov 0x168(%rsp),%r8
107cd(5): mov %rax,0x50(%rsp)
107d2(8): lea 0xe0(%rsp),%rax
107da(5): mov %rax,0x60(%rsp)
107df(8): lea 0xd4(%rsp),%rax
107e7(8): mov %rax,0x80(%rsp)
107ef(2): jmp 0x5d(%rip)
107f1(7): nop 0x0(%rax)
107f8(3): cmp %r13,%r14
107fb(8): mov 0x168(%rsp),%r8
10803(3): setz %al
10806(4): and %al,0x18(%rsp)
1080a(5): movzx 0x68(%r13),%eax
1080f(6): cmove 0x8(%rsp),%rbx
10815(2): test $0x10,%al
10817(5): mov %rbx,0x8(%rsp)
1081c(2): jz 0x2d(%rip)
1081e(2): test %al,%al
10820(6): js 0x4c0(%rip)
10826(4): mov 0x58(%rsp),%eax
1082a(5): mov %r8,0x20(%rsp)
1082f(2): test %eax,%eax
10831(6): jz 0x125(%rip)
10837(9): mov $0x1,0x30(%rsp)
10840(9): mov $0x0,0x50(%rsp)
10849(3): mov %r13,%r14
1084c(8): cmp %r8,0x188(%rsp)
10854(6): jle 0xf0(%rip)
1085a(8): mov 0x160(%rsp),%rax
10862(4): lea 0x1(%r8),%rbx
10866(3): cmp %rax,%rbx
10869(6): jnl 0x4a7(%rip)
1086f(8): mov 0x150(%rsp),%rax
10877(3): cmp %rax,%rbx
1087a(6): jnl 0x786(%rip)
10880(5): test $0x20,0x68(%r14)
10885(6): jnz 0x4cb(%rip)
1088b(4): lea 0x1(%r8),%rax
1088f(8): mov %rax,0x168(%rsp)
10897(8): mov 0x128(%rsp),%rax
1089f(5): movzx 0x0(%rax,%r8,1),%r13d
108a4(4): mov 0x58(%r14),%rax
108a8(3): test %rax,%rax
108ab(6): jz 0x715(%rip)
108b1(4): mov 0x0(%rax,%r13,8),%r13
108b5(9): cmp $0x0,0x1d8(%rsp)
108be(2): jz 0x16(%rip)
108c0(4): mov (%rsp),%rsi
108c4(5): mov 0x28(%rsp),%rdi
108c9(3): mov %r13,%rdx
108cc(5): call 0xfffff2f4(%rip)
108d1(3): mov %rax,%r13
108d4(3): test %r13,%r13
108d7(6): jnz 0xffffff21(%rip)
108dd(7): mov 0xd0(%rsp),%ecx
108e4(8): mov 0x1d8(%rsp),%rdi
108ec(2): test %ecx,%ecx
108ee(6): jnz 0x8c2(%rip)
108f4(3): test %rdi,%rdi
108f7(2): jz 0x4d(%rip)
108f9(8): movzx 0xce(%rsp),%eax
10901(3): xor $0x1,%eax
10904(4): test %al,0x30(%rsp)
10908(2): jnz 0x3c(%rip)
1090a(8): mov 0x1e0(%rsp),%rsi
10912(8): mov 0x168(%rsp),%rax
1091a(2): xor %ecx,%ecx
1091c(2): jmp 0x17(%rip)
1091e(2): nop 
10920(5): cmp $0x0,0x0(%rdi,%rdx,8)
10925(3): mov %rdx,%rax
10928(5): mov $0x1,%ecx
1092d(6): jnz 0x373(%rip)
10933(4): lea 0x1(%rax),%rdx
10937(3): cmp %rdx,%rsi
1093a(2): jnl 0xffffffe6(%rip)
1093c(2): test %cl,%cl
1093e(6): jnz 0xed0(%rip)
10944(5): mov 0x50(%rsp),%rax
10949(3): test %rax,%rax
1094c(2): jz 0xa(%rip)
1094e(5): mov 0x8(%rsp),%rdi
10953(3): add %rdi,(%rax)
10956(5): mov 0x20(%rsp),%rax
1095b(4): cmp $0xffffffff,%rax
1095f(6): jz 0x6c1(%rip)
10965(4): cmp $0xfffffffe,%rax
10969(6): jz 0x7f7(%rip)
1096f(5): mov 0x20(%rsp),%rax
10974(8): mov %rax,0x1c8(%rsp)
1097c(5): mov 0x48(%rsp),%rax
10981(4): test $0x10,0x38(%rax)
10985(6): jnz 0x7bb(%rip)
1098b(9): cmp $0x1,0x270(%rsp)
10994(6): jbe 0x8f8(%rip)
1099a(5): mov 0x20(%rsp),%rcx
1099f(8): mov 0x1d8(%rsp),%rbx
109a7(4): mov (%rsp),%rdi
109ab(4): mov 0x0(%rbx,%rcx,8),%rax
109af(4): mov 0x10(%rax),%rsi
109b3(4): lea 0x18(%rax),%rdx
109b7(5): call 0xffffacf9(%rip)
109bc(3): mov %rax,%r13
109bf(8): mov %rax,0x1d0(%rsp)
109c7(5): mov 0x38(%rsp),%rax
109cc(7): test $0x1,0xb0(%rax)
109d3(2): jnz 0x1d(%rip)
109d5(5): mov 0x38(%rsp),%rax
109da(8): cmp $0x0,0x98(%rax)
109e2(6): jz 0x99a(%rip)
109e8(8): mov 0x1d0(%rsp),%r13
109f0(a): mov $0x2305843009213693950,%rsi
109fa(5): cmp %rsi,0x20(%rsp)
109ff(8): mov 0x1b8(%rsp),%r15
10a07(6): jnbe 0xc64(%rip)
10a0d(5): mov 0x20(%rsp),%rax
10a12(4): add $0x1,%rax
10a16(8): lea 0x0(,%rax,8),%rbx
10a1e(5): mov %rax,0x8(%rsp)
10a23(3): mov %rbx,%rdi
10a26(5): call 0xffff137a(%rip)
10a2b(3): test %rax,%rax
10a2e(3): mov %rax,%r12
10a31(6): jz 0x72f(%rip)
10a37(8): cmp $0x0,0x98(%r15)
10a3f(6): jz 0x896(%rip)
10a45(3): mov %rbx,%rdi
10a48(5): call 0xffff1358(%rip)
10a4d(3): test %rax,%rax
10a50(3): mov %rax,%rbp
10a53(6): jz 0x705(%rip)
10a59(5): mov 0x20(%rsp),%r14
10a5e(8): lea 0xe0(%rsp),%rbx
10a66(5): mov %r15,0x10(%rsp)
10a6b(5): mov %rax,0x18(%rsp)
10a70(5): mov 0x8(%rsp),%rax
10a75(2): xor %esi,%esi
10a77(3): mov %rbp,%rdi
10a7a(8): lea 0x0(,%rax,8),%rdx
10a82(5): call 0xffff122e(%rip)
10a87(4): pxor %xmm0,%xmm0
10a8b(8): mov %r12,0xe0(%rsp)
10a93(8): mov %rbp,0xe8(%rsp)
10a9b(8): mov %r13,0xf0(%rsp)
10aa3(3): mov %rbx,%rsi
10aa6(8): mov %r14,0xf8(%rsp)
10aae(4): mov (%rsp),%rdi
10ab2(4): movaps %xmm0,0x20(%rbx)
10ab6(8): mov $0x0,0x30(%rbx)
10abe(5): call 0xfffff2f2(%rip)
10ac3(8): mov 0x110(%rsp),%rdi
10acb(3): mov %eax,%r15d
10ace(5): call 0xffff1032(%rip)
10ad3(3): test %r15d,%r15d
10ad6(6): jnz 0xc1e(%rip)
10adc(5): cmp $0x0,(%r12)
10ae1(6): jnz 0xc72(%rip)
10ae7(5): cmp $0x0,0x0(%rbp)
10aec(6): jnz 0xc67(%rip)
10af2(8): mov 0x1d8(%rsp),%rdx
10afa(6): nop 0x0(%rax,%rax,1)
10b00(4): sub $0x1,%r14
10b04(4): cmp $0xffffffff,%r14
10b08(6): jz 0xac3(%rip)
10b0e(4): mov 0x0(%rdx,%r14,8),%rax
10b12(3): test %rax,%rax
10b15(2): jz 0xffffffeb(%rip)
10b17(4): test $0x10,0x68(%rax)
10b1b(2): jz 0xffffffe5(%rip)
10b1d(4): mov 0x10(%rax),%rsi
10b21(4): mov (%rsp),%rdi
10b25(4): lea 0x18(%rax),%rdx
10b29(3): mov %r14,%rcx
10b2c(5): call 0xffffab84(%rip)
10b31(3): mov %rax,%r13
10b34(4): lea 0x1(%r14),%rax
10b38(5): mov %rax,0x8(%rsp)
10b3d(5): jmp 0xffffff33(%rip)
10b42(5): cmp %rbp,0x70(%rsp)
10b47(6): jle 0xfffffb38(%rip)
10b4d(5): mov 0x78(%rsp),%rax
10b52(8): mov 0xb0(%rsp),%rdi
10b5a(5): mov 0x68(%rsp),%rsi
10b5f(4): movzx 0x0(%rax,%rbp,1),%eax
10b63(4): movzx 0x0(%rdi,%rax,1),%edx
10b67(4): lea 0x1(%rbp),%rax
10b6b(4): cmp $0x0,0x0(%rsi,%rdx,1)
10b6f(6): jnz 0xfffffb59(%rip)
10b75(5): mov 0x68(%rsp),%rsi
10b7a(8): mov 0xb0(%rsp),%rdi
10b82(5): mov 0x70(%rsp),%rcx
10b87(5): mov 0x78(%rsp),%r8
10b8c(2): jmp 0x1b(%rip)
10b8e(2): nop 
10b90(5): movzx 0x0(%r8,%rax,1),%eax
10b95(4): movzx 0x0(%rdi,%rax,1),%edx
10b99(4): lea 0x1(%rbp),%rax
10b9d(4): cmp $0x0,0x0(%rsi,%rdx,1)
10ba1(6): jnz 0xc60(%rip)
10ba7(3): cmp %rax,%rcx
10baa(3): mov %rax,%rbp
10bad(2): jnz 0xffffffe3(%rip)
10baf(5): jmp 0xfffffac3(%rip)
10bb4(8): cmp %rbp,0x90(%rsp)
10bbc(6): jnle 0x49d(%rip)
10bc2(2): xor %ecx,%ecx
10bc4(3): mov %rbp,%rax
10bc7(5): mov 0x68(%rsp),%rdi
10bcc(8): mov 0xb0(%rsp),%rsi
10bd4(8): mov 0x90(%rsp),%r9
10bdc(5): mov 0x78(%rsp),%r10
10be1(8): mov 0x88(%rsp),%r8
10be9(2): jmp 0x19(%rip)
10beb(5): nop 0x0(%rax,%rax,1)
10bf0(4): sub $0x1,%rax
10bf4(5): mov $0x1,%ecx
10bf9(3): cmp %r9,%rax
10bfc(6): jl 0x9e4(%rip)
10c02(2): xor %edx,%edx
10c04(3): cmp %rax,%r8
10c07(2): jle 0x7(%rip)
10c09(5): movzx 0x0(%r10,%rax,1),%edx
10c0e(3): test %rsi,%rsi
10c11(2): jz 0x6(%rip)
10c13(4): movzx 0x0(%rsi,%rdx,1),%edx
10c17(4): cmp $0x0,0x0(%rdi,%rdx,1)
10c1b(2): jz 0xffffffd5(%rip)
10c1d(2): test %cl,%cl
10c1f(6): jz 0xfffffaa9(%rip)
10c25(8): mov %rax,0xd8(%rsp)
10c2d(3): mov %rax,%rbp
10c30(5): jmp 0xfffffa98(%rip)
10c35(3): nop (%rax)
10c38(4): mov %eax,0x5c(%rsp)
10c3c(4): nop 0x0(%rax)
10c40(8): mov 0x1d8(%rsp),%rdi
10c48(5): call 0xffff0eb8(%rip)
10c4d(5): mov 0x38(%rsp),%rax
10c52(8): cmp $0x0,0x98(%rax)
10c5a(6): jnz 0x926(%rip)
10c60(4): mov (%rsp),%rdi
10c64(5): call 0xffff875c(%rip)
10c69(8): mov 0x228(%rsp),%rsi
10c71(9): xor $0x28,%rsi
10c7a(4): mov 0x5c(%rsp),%eax
10c7e(6): jnz 0xb9d(%rip)
10c84(7): add $0x238,%rsp
10c8b(1): pop %rbx
10c8c(1): pop %rbp
10c8d(2): pop %r12
10c8f(2): pop %r13
10c91(2): pop %r14
10c93(2): pop %r15
10c95(1): ret near (%rsp)
10c96(a): nop 0x0(%rax,%rax,1)
10ca0(4): mov (%rsp),%rsi
10ca4(5): mov 0x28(%rsp),%rdi
10ca9(8): mov %rdx,0x168(%rsp)
10cb1(2): xor %edx,%edx
10cb3(5): call 0xffffef0d(%rip)
10cb8(7): mov 0xd0(%rsp),%edx
10cbf(2): test %edx,%edx
10cc1(6): jnz 0x93c(%rip)
10cc7(3): test %rax,%rax
10cca(6): jnz 0x946(%rip)
10cd0(8): mov 0x1d8(%rsp),%rdi
10cd8(5): jmp 0xfffffc32(%rip)
10cdd(3): nop (%rax)
10ce0(4): mov 0x10(%r13),%rsi
10ce4(4): mov (%rsp),%rdi
10ce8(4): lea 0x18(%r13),%rdx
10cec(3): mov %r8,%rcx
10cef(5): mov %r8,0x10(%rsp)
10cf4(5): call 0xffffa9bc(%rip)
10cf9(3): test %rax,%rax
10cfc(5): mov 0x10(%rsp),%r8
10d01(6): jz 0xfffffb48(%rip)
10d07(5): jmp 0xfffffb1f(%rip)
10d0c(4): nop 0x0(%rax)
10d10(8): cmp 0x178(%rsp),%rax
10d18(6): jnl 0xfffffb57(%rip)
10d1e(4): mov (%rsp),%rdi
10d22(3): lea 0x1(%rbx),%esi
10d25(5): call 0xffff7eeb(%rip)
10d2a(2): test %eax,%eax
10d2c(7): mov %eax,0xd0(%rsp)
10d33(6): jnz 0x8e5(%rip)
10d39(5): test $0x20,0x68(%r14)
10d3e(8): mov 0x168(%rsp),%r8
10d46(6): jz 0xfffffb45(%rip)
10d4c(4): nop 0x0(%rax)
10d50(5): cmp $0x0,0x10(%r14)
10d55(8): mov 0x1b8(%rsp),%r13
10d5d(6): jle 0x32e(%rip)
10d63(7): lea 0xd8(%r13),%rax
10d6a(3): xor %r12d,%r12d
10d6d(8): mov %rbx,0xa0(%rsp)
10d75(3): mov %r12,%rbx
10d78(3): mov %r8,%r12
10d7b(5): mov %rax,0x40(%rsp)
10d80(5): jmp 0x158(%rip)
10d85(3): nop (%rax)
10d88(2): test $0x1,%al
10d8a(6): jz 0x140(%rip)
10d90(3): and $0x8,%ecx
10d93(6): jnz 0x137(%rip)
10d99(3): test $0x20,%dl
10d9c(2): jz 0xa(%rip)
10d9e(2): test $0x2,%al
10da0(6): jz 0x12a(%rip)
10da6(6): and $0x80,%edx
10dac(2): jz 0x14(%rip)
10dae(2): test $0x8,%al
10db0(6): jz 0x11a(%rip)
10db6(a): nop 0x0(%rax,%rax,1)
10dc0(4): mov (%rsp),%rcx
10dc4(5): mov 0x40(%rsp),%rsi
10dc9(3): mov %r12,%r8
10dcc(3): mov %r15,%rdx
10dcf(3): mov %rbp,%rdi
10dd2(5): call 0xffffd0ae(%rip)
10dd7(2): test %eax,%eax
10dd9(6): jz 0xe9(%rip)
10ddf(3): movsxd %eax,%rbp
10de2(8): add 0x168(%rsp),%rbp
10dea(7): cmp %eax,0x200(%rsp)
10df1(8): cmovnl 0x200(%rsp),%eax
10df9(4): mov (%rsp),%rdi
10dfd(3): mov %rbp,%rsi
10e00(7): mov %eax,0x200(%rsp)
10e07(5): call 0xffff7f59(%rip)
10e0c(2): test %eax,%eax
10e0e(7): mov %eax,0xd4(%rsp)
10e15(6): jnz 0x29b(%rip)
10e1b(4): mov 0x18(%r13),%rax
10e1f(8): lea 0x0(,%rbp,8),%r12
10e27(4): mov 0x0(%rax,%r15,8),%rax
10e2b(8): mov 0x1d8(%rsp),%r15
10e33(4): lea 0x0(%rax,%rax,2),%rdx
10e37(4): mov 0x30(%r13),%rax
10e3b(3): add %r12,%r15
10e3e(4): lea 0x0(%rax,%rdx,8),%rdx
10e42(3): mov (%r15),%rax
10e45(3): test %rax,%rax
10e48(6): jz 0x100(%rip)
10e4e(4): mov 0x50(%rax),%rsi
10e52(5): mov 0x60(%rsp),%rdi
10e57(5): call 0xffff9a69(%rip)
10e5c(2): test %eax,%eax
10e5e(7): mov %eax,0xd4(%rsp)
10e65(6): jnz 0x24b(%rip)
10e6b(7): mov 0x1c0(%rsp),%edx
10e72(4): mov (%rsp),%rdi
10e76(4): lea 0xffffffff(%rbp),%rsi
10e7a(5): call 0xffffa636(%rip)
10e7f(5): mov 0x60(%rsp),%rdx
10e84(8): mov 0x80(%rsp),%rdi
10e8c(2): mov %eax,%ecx
10e8e(8): add 0x1d8(%rsp),%r12
10e96(3): mov %r13,%rsi
10e99(5): call 0xffff9b87(%rip)
10e9e(8): mov 0xf0(%rsp),%rdi
10ea6(4): mov %rax,(%r12)
10eaa(5): call 0xffff0c56(%rip)
10eaf(8): mov 0x1d8(%rsp),%rdi
10eb7(5): cmp $0x0,0x0(%rdi,%rbp,8)
10ebc(6): jz 0xe5(%rip)
10ec2(8): mov 0x168(%rsp),%r12
10eca(4): add $0x1,%rbx
10ece(4): cmp 0x10(%r14),%rbx
10ed2(6): jnl 0x1ae(%rip)
10ed8(4): mov 0x18(%r14),%rax
10edc(4): mov 0x0(%r13),%rbp
10ee0(4): mov 0x0(%rax,%rbx,8),%r15
10ee4(3): mov %r15,%rax
10ee7(4): shl/sal $0x4,%rax
10eeb(3): add %rbp,%rax
10eee(4): test $0x10,0xa(%rax)
10ef2(2): jz 0xffffffd8(%rip)
10ef4(3): mov 0x8(%rax),%ecx
10ef7(6): test $0x3ff00,%ecx
10efd(4): mov %ecx,0x10(%rsp)
10f01(6): jz 0xfffffebf(%rip)
10f07(7): mov 0x1c0(%rsp),%edx
10f0e(4): mov (%rsp),%rdi
10f12(3): mov %r12,%rsi
10f15(5): call 0xffffa59b(%rip)
10f1a(4): mov 0x10(%rsp),%ecx
10f1e(3): shr $0x8,%ecx
10f21(2): mov %ecx,%edx
10f23(5): and $0x3ff,%dx
10f28(3): test $0x4,%cl
10f2b(6): jnz 0xfffffe5d(%rip)
10f31(3): and $0x8,%ecx
10f34(6): jz 0xfffffe65(%rip)
10f3a(2): test $0x1,%al
10f3c(6): jz 0xfffffe5d(%rip)
10f42(2): jmp 0xffffff88(%rip)
10f44(4): nop 0x0(%rax)
10f48(4): movdqu (%rdx),%xmm0
10f4c(4): lea 0xffffffff(%rbp),%rsi
10f50(4): mov (%rsp),%rdi
10f54(8): movaps %xmm0,0xe0(%rsp)
10f5c(4): mov 0x10(%rdx),%rax
10f60(7): mov 0x1c0(%rsp),%edx
10f67(8): mov %rax,0xf0(%rsp)
10f6f(5): call 0xffffa541(%rip)
10f74(8): mov 0x80(%rsp),%rdi
10f7c(5): mov 0x60(%rsp),%rdx
10f81(2): mov %eax,%ecx
10f83(3): mov %r13,%rsi
10f86(5): call 0xffff9a9a(%rip)
10f8b(8): mov 0x1d8(%rsp),%rdi
10f93(3): mov %rax,(%r15)
10f96(5): cmp $0x0,0x0(%rdi,%rbp,8)
10f9b(6): jnz 0xffffff27(%rip)
10fa1(7): mov 0xd4(%rsp),%eax
10fa8(2): test %eax,%eax
10faa(6): jz 0xffffff18(%rip)
10fb0(8): mov 0xa0(%rsp),%rbx
10fb8(5): jmp 0x108(%rip)
10fbd(3): nop (%rax)
10fc0(4): mov 0x60(%r14),%rbp
10fc4(3): test %rbp,%rbp
10fc7(6): jz 0x1ae(%rip)
10fcd(8): mov 0x168(%rsp),%rax
10fd5(7): mov 0x1c0(%rsp),%edx
10fdc(4): mov (%rsp),%rdi
10fe0(4): lea 0xffffffff(%rax),%rsi
10fe4(5): call 0xffffa4cc(%rip)
10fe9(2): test $0x1,%al
10feb(6): jz 0xb5(%rip)
10ff1(8): mov 0x800(%rbp,%r13,8),%r13
10ff9(5): jmp 0xfffff8bc(%rip)
10ffe(2): nop 
11000(8): cmp 0x178(%rsp),%rax
11008(6): jnl 0xfffff878(%rip)
1100e(5): jmp 0xfffffd10(%rip)
11013(3): mov %r12,%rdi
11016(5): call 0xffff0aea(%rip)
1101b(5): nop 0x0(%rax,%rax,1)
11020(4): mov (%rsp),%rdi
11024(5): call 0xffff853c(%rip)
11029(8): mov 0xd8(%rsp),%rbp
11031(8): movsxd 0xac(%rsp),%rax
11039(3): add %rax,%rbp
1103c(8): cmp 0x90(%rsp),%rbp
11044(8): mov %rbp,0xd8(%rsp)
1104c(2): jl 0xd(%rip)
1104e(5): cmp 0x70(%rsp),%rbp
11053(6): jle 0xfffff575(%rip)
11059(8): mov 0x1d8(%rsp),%rdi
11061(8): mov $0x1,0x5c(%rsp)
11069(5): jmp 0xfffffbdf(%rip)
1106e(2): nop 
11070(8): mov $0x1,0x5c(%rsp)
11078(5): jmp 0xfffffbf1(%rip)
1107d(3): nop (%rax)
11080(8): mov 0xa0(%rsp),%rbx
11088(3): mov %r12,%r8
1108b(b): mov $0x0,0xd0(%rsp)
11096(5): jmp 0xfffff7f5(%rip)
1109b(5): nop 0x0(%rax,%rax,1)
110a0(5): mov 0x0(%rbp,%r13,8),%r13
110a5(5): jmp 0xfffff810(%rip)
110aa(6): nop 0x0(%rax,%rax,1)
110b0(8): mov 0xa0(%rsp),%rbx
110b8(8): mov 0x1d8(%rsp),%rdi
110c0(3): test %rdi,%rdi
110c3(7): mov %eax,0xd0(%rsp)
110ca(6): jz 0xe6(%rip)
110d0(3): xor %r13d,%r13d
110d3(5): jmp 0xfffff7ed(%rip)
110d8(8): nop 0x0(%rax,%rax,1)
110e0(7): mov 0x1c0(%rsp),%edx
110e7(4): mov (%rsp),%rdi
110eb(4): lea 0xffffffff(%rax),%rsi
110ef(5): call 0xffffa3c1(%rip)
110f4(2): test $0x1,%al
110f6(6): jz 0x16f(%rip)
110fc(4): mov 0x50(%rbx),%r14
11100(3): test %r14,%r14
11103(6): jnz 0xfffff66b(%rip)
11109(7): mov 0xd0(%rsp),%eax
11110(3): cmp $0xc,%eax
11113(4): mov %eax,0x5c(%rsp)
11117(6): jz 0xfffffb29(%rip)
1111d(7): lea 0x6acc(%rip),%rcx
11124(7): lea 0x64dd(%rip),%rsi
1112b(7): lea 0x658a(%rip),%rdi
11132(5): mov $0x435,%edx
11137(5): call 0xffff0b59(%rip)
1113c(4): nop 0x0(%rax)
11140(5): mov 0x38(%rsp),%rax
11145(8): cmp $0x0,0x98(%rax)
1114d(6): jz 0x22f(%rip)
11153(5): jmp 0x14c(%rip)
11158(3): mov %r12,%rdi
1115b(5): call 0xffff09a5(%rip)
11160(8): mov 0x1d8(%rsp),%rdi
11168(8): mov $0xc,0x5c(%rsp)
11170(5): jmp 0xfffffad8(%rip)
11175(8): mov 0x1b8(%rsp),%rdi
1117d(3): mov %r14,%rsi
11180(5): call 0xffffafe0(%rip)
11185(2): test %al,%al
11187(6): jnz 0xfffff71d(%rip)
1118d(8): mov 0x1d8(%rsp),%rdi
11195(b): mov $0xc,0xd0(%rsp)
111a0(3): test %rdi,%rdi
111a3(6): jnz 0xffffff2d(%rip)
111a9(7): nop 0x0(%rax)
111b0(8): mov $0xc,0x5c(%rsp)
111b8(5): jmp 0xfffffa90(%rip)
111bd(5): mov 0x68(%rsp),%rbx
111c2(8): mov 0xac(%rsp),%r13d
111ca(8): mov 0x90(%rsp),%r14
111d2(5): mov 0x70(%rsp),%r15
111d7(8): mov 0x88(%rsp),%r12
111df(2): jmp 0x49(%rip)
111e1(7): nop 0x0(%rax)
111e8(3): cmp %rbp,%r12
111eb(3): mov %rbx,%rax
111ee(2): jle 0x11(%rip)
111f0(8): mov 0x128(%rsp),%rax
111f8(4): movzx 0x0(%rax,%rdx,1),%eax
111fc(3): add %rbx,%rax
111ff(3): cmp $0x0,(%rax)
11202(6): jnz 0xfffff4c6(%rip)
11208(3): movsxd %r13d,%rax
1120b(3): add %rax,%rbp
1120e(3): cmp %r14,%rbp
11211(8): mov %rbp,0xd8(%rsp)
11219(6): jl 0xfffffe40(%rip)
1121f(3): cmp %r15,%rbp
11222(6): jnle 0xfffffe37(%rip)
11228(3): mov %rbp,%rdx
1122b(8): sub 0x148(%rsp),%rdx
11233(8): cmp %rdx,0x158(%rsp)
1123b(2): jnbe 0xffffffad(%rip)
1123d(7): mov 0x280(%rsp),%edx
11244(4): mov (%rsp),%rdi
11248(3): mov %rbp,%rsi
1124b(5): call 0xffffa535(%rip)
11250(2): test %eax,%eax
11252(6): jnz 0xfffff9e6(%rip)
11258(3): mov %rbp,%rdx
1125b(8): sub 0x148(%rsp),%rdx
11263(2): jmp 0xffffff85(%rip)
11265(2): test %eax,%eax
11267(6): jz 0xfffff507(%rip)
1126d(2): mov %eax,%edx
1126f(3): and $0x6,%edx
11272(3): cmp $0x6,%edx
11275(6): jz 0x46a(%rip)
1127b(2): test $0x2,%al
1127d(6): jz 0x4b3(%rip)
11283(4): mov 0x58(%rbx),%r14
11287(5): jmp 0xfffffe79(%rip)
1128c(5): mov 0x38(%rsp),%rax
11291(8): cmp $0x0,0x98(%rax)
11299(6): jz 0xe3(%rip)
1129f(5): mov 0x20(%rsp),%rcx
112a4(8): mov 0x1d8(%rsp),%rbx
112ac(4): mov (%rsp),%rdi
112b0(4): mov 0x0(%rbx,%rcx,8),%rax
112b4(4): mov 0x10(%rax),%rsi
112b8(4): lea 0x18(%rax),%rdx
112bc(5): call 0xffffa3f4(%rip)
112c1(8): mov %rax,0x1d0(%rsp)
112c9(5): jmp 0xfffff71f(%rip)
112ce(2): xor %ecx,%ecx
112d0(5): jmp 0xfffff28e(%rip)
112d5(4): pxor %xmm0,%xmm0
112d9(8): mov %rax,0xe0(%rsp)
112e1(4): mov (%rsp),%rdi
112e5(5): mov 0x20(%rsp),%rax
112ea(8): lea 0xe0(%rsp),%rbx
112f2(c): mov $0x0,0xe8(%rsp)
112fe(8): mov %r13,0xf0(%rsp)
11306(3): mov %rbx,%rsi
11309(c): mov $0x0,0x110(%rsp)
11315(8): movaps %xmm0,0x100(%rsp)
1131d(8): mov %rax,0xf8(%rsp)
11325(5): call 0xffffea8b(%rip)
1132a(8): mov 0x110(%rsp),%rdi
11332(4): mov %eax,0x8(%rsp)
11336(5): call 0xffff07ca(%rip)
1133b(4): mov 0x8(%rsp),%eax
1133f(2): test %eax,%eax
11341(6): jnz 0x447(%rip)
11347(5): cmp $0x0,(%r12)
1134c(6): jz 0xfffffcc7(%rip)
11352(8): mov 0x1d8(%rsp),%rdi
1135a(5): call 0xffff07a6(%rip)
1135f(5): mov 0x20(%rsp),%rax
11364(8): mov %r12,0x1d8(%rsp)
1136c(8): mov %r13,0x1d0(%rsp)
11374(8): mov %rax,0x1c8(%rsp)
1137c(9): cmp $0x0,0x270(%rsp)
11385(6): jz 0xfffff8bb(%rip)
1138b(9): cmp $0x1,0x270(%rsp)
11394(6): jz 0x424(%rip)
1139a(8): mov 0xb8(%rsp),%rsi
113a2(8): mov 0x270(%rsp),%rcx
113aa(7): mov $0xffffffff,%rdx
113b1(4): shl/sal $0x4,%rcx
113b5(4): lea 0x10(%rsi),%rax
113b9(3): add %rsi,%rcx
113bc(4): mov %rdx,0x8(%rax)
113c0(3): mov %rdx,(%rax)
113c3(4): add $0x10,%rax
113c7(3): cmp %rax,%rcx
113ca(2): jnz 0xfffffff2(%rip)
113cc(8): mov 0xb8(%rsp),%rdi
113d4(8): mov 0x1c8(%rsp),%rax
113dc(4): mov %rax,0x8(%rdi)
113e0(5): mov 0x48(%rsp),%rax
113e5(7): mov $0x0,(%rdi)
113ec(4): test $0x10,0x38(%rax)
113f0(6): jnz 0x3e3(%rip)
113f6(9): cmp $0x1,0x270(%rsp)
113ff(6): jz 0x3d4(%rip)
11405(5): mov 0x38(%rsp),%rax
1140a(3): xor %r8d,%r8d
1140d(7): test $0x1,0xb0(%rax)
11414(2): jz 0x11(%rip)
11416(3): xor %r8d,%r8d
11419(8): cmp $0x0,0x98(%rax)
11421(4): setnle %r8b
11425(8): mov 0xb8(%rsp),%rbx
1142d(8): mov 0x270(%rsp),%rdx
11435(4): mov (%rsp),%rsi
11439(5): mov 0x48(%rsp),%rdi
1143e(3): mov %rbx,%rcx
11441(5): call 0xffffd3ff(%rip)
11446(2): test %eax,%eax
11448(6): jnz 0x2d5(%rip)
1144e(3): mov (%rbx),%rax
11451(9): movzx 0x1ac(%rsp),%r11d
1145a(8): mov 0x150(%rsp),%r10
11462(2): xor %ecx,%ecx
11464(8): mov 0x138(%rsp),%r9
1146c(8): mov 0x158(%rsp),%r8
11474(8): mov 0xd8(%rsp),%rdi
1147c(8): mov 0xb8(%rsp),%rdx
11484(2): jmp 0x5(%rip)
11486(3): mov (%rdx),%rax
11489(4): cmp $0xffffffff,%rax
1148d(2): jz 0x1c(%rip)
1148f(3): test %r11b,%r11b
11492(4): mov 0x8(%rdx),%rsi
11496(6): jnz 0x344(%rip)
1149c(3): add %rdi,%rax
1149f(3): add %rdi,%rsi
114a2(3): mov %rax,(%rdx)
114a5(4): mov %rsi,0x8(%rdx)
114a9(4): add $0x1,%rcx
114ad(4): add $0x10,%rdx
114b1(8): cmp 0x270(%rsp),%rcx
114b9(2): jnz 0xffffffcd(%rip)
114bb(9): cmp $0x0,0x98(%rsp)
114c4(2): jle 0x41(%rip)
114c6(8): mov 0x98(%rsp),%rdx
114ce(8): mov 0xb8(%rsp),%rdi
114d6(3): mov %rcx,%rax
114d9(4): shl/sal $0x4,%rax
114dd(3): add %rcx,%rdx
114e0(5): lea 0x8(%rdi,%rax,1),%rax
114e5(4): shl/sal $0x4,%rdx
114e9(5): lea 0x8(%rdi,%rdx,1),%rsi
114ee(7): mov $0xffffffff,%rdx
114f5(4): mov %rdx,0xfffffff8(%rax)
114f9(3): mov %rdx,(%rax)
114fc(4): add $0x10,%rax
11500(3): cmp %rax,%rsi
11503(2): jnz 0xfffffff2(%rip)
11505(5): mov 0x38(%rsp),%rax
1150a(8): mov 0x1d8(%rsp),%rdi
11512(7): mov 0xe0(%rax),%r9
11519(3): test %r9,%r9
1151c(6): jz 0xfffff72c(%rip)
11522(8): mov 0xb8(%rsp),%r10
1152a(3): xor %r8d,%r8d
1152d(4): lea 0x10(%r10),%rdx
11531(2): jmp 0x38(%rip)
11533(5): mov 0xfffffff8(%r9,%rsi,8),%rax
11538(3): cmp %r8,%rax
1153b(2): jz 0x27(%rip)
1153d(4): add $0x1,%rax
11541(4): shl/sal $0x4,%rax
11545(4): mov 0x0(%r10,%rax,1),%rax
11549(3): mov %rax,(%rdx)
1154c(5): mov 0xfffffff8(%r9,%rsi,8),%rax
11551(4): add $0x1,%rax
11555(4): shl/sal $0x4,%rax
11559(5): mov 0x8(%r10,%rax,1),%rax
1155e(4): mov %rax,0x8(%rdx)
11562(4): add $0x10,%rdx
11566(3): mov %rsi,%r8
11569(4): lea 0x1(%r8),%rsi
1156d(3): cmp %rcx,%rsi
11570(2): jnz 0xffffffc3(%rip)
11572(5): jmp 0xfffff6d6(%rip)
11577(9): nop 0x0(%rax,%rax,1)
11580(4): mov (%rsp),%rdi
11584(5): call 0xffff7fdc(%rip)
11589(8): mov 0x218(%rsp),%rdi
11591(5): call 0xffff056f(%rip)
11596(8): mov 0x1f8(%rsp),%rdi
1159e(5): call 0xffff0562(%rip)
115a3(5): jmp 0xfffff6bd(%rip)
115a8(5): mov 0x38(%rsp),%rax
115ad(7): test $0x2,0xb0(%rax)
115b4(6): jnz 0xffffeed5(%rip)
115ba(c): mov $0x0,0x1d8(%rsp)
115c6(5): jmp 0xffffeeff(%rip)
115cb(3): mov %r12,%rdi
115ce(5): call 0xffff0532(%rip)
115d3(3): mov %rbp,%rdi
115d6(5): call 0xffff052a(%rip)
115db(5): jmp 0xfffffa45(%rip)
115e0(8): mov %rax,0xd8(%rsp)
115e8(8): mov 0x1d8(%rsp),%rdi
115f0(8): mov $0x1,0x5c(%rsp)
115f8(5): jmp 0xfffff650(%rip)
115fd(3): test %rax,%rax
11600(3): mov %rax,%r13
11603(6): jnz 0xfffff1f5(%rip)
11609(5): jmp 0xfffff33b(%rip)
1160e(2): nop 
11610(3): mov %rax,%r13
11613(5): jmp 0xfffff1e5(%rip)
11618(3): cmp $0xc,%eax
1161b(6): jz 0xfffffb45(%rip)
11621(7): lea 0x65c8(%rip),%rcx
11628(7): lea 0x5fd9(%rip),%rsi
1162f(7): lea 0x6086(%rip),%rdi
11636(5): mov $0x46c,%edx
1163b(5): call 0xffff0655(%rip)
11640(5): cmp $0x0,0x68(%r14)
11645(2): js 0x71(%rip)
11647(4): mov 0x58(%rsp),%esi
1164b(5): mov 0x8(%rsp),%rax
11650(2): test %esi,%esi
11652(5): mov %rax,0x20(%rsp)
11657(6): jz 0xfffff2ff(%rip)
1165d(9): mov $0x1,0x30(%rsp)
11666(5): jmp 0xfffff157(%rip)
1166b(3): mov %rbx,%rdi
1166e(8): mov $0xc,0x5c(%rsp)
11676(5): jmp 0xfffff5d2(%rip)
1167b(4): lea 0x10(%r14),%rbx
1167f(4): lea 0x18(%r14),%rbp
11683(4): mov (%rsp),%rdi
11687(2): xor %ecx,%ecx
11689(3): mov %rbp,%rdx
1168c(3): mov %rbx,%rsi
1168f(5): call 0xffff9cd1(%rip)
11694(2): test %eax,%eax
11696(7): mov %eax,0xd0(%rsp)
1169d(2): jnz 0x4b(%rip)
1169f(5): movzx 0x68(%r14),%eax
116a4(2): test $0x40,%al
116a6(6): jnz 0xea(%rip)
116ac(5): mov $0x0,0x18(%rsp)
116b1(5): jmp 0xfffff0f2(%rip)
116b6(4): mov 0x10(%r14),%rsi
116ba(5): mov 0x8(%rsp),%rcx
116bf(4): lea 0x18(%r14),%rdx
116c3(4): mov (%rsp),%rdi
116c7(5): call 0xffff9fe9(%rip)
116cc(3): test %rax,%rax
116cf(5): mov %rax,0x30(%rsp)
116d4(6): jz 0xfffff0e9(%rip)
116da(5): jmp 0xffffff6d(%rip)
116df(4): mov 0x60(%rbx),%r14
116e3(5): jmp 0xfffffa1d(%rip)
116e8(2): cwde 
116ea(5): mov %rax,0x20(%rsp)
116ef(5): jmp 0xfffff267(%rip)
116f4(5): mov 0x18(%rsp),%r14
116f9(3): mov %r15d,%eax
116fc(3): mov %r12,%rdi
116ff(4): mov %eax,0x8(%rsp)
11703(5): call 0xffff03fd(%rip)
11708(3): mov %r14,%rdi
1170b(5): call 0xffff03f5(%rip)
11710(4): mov 0x8(%rsp),%eax
11714(3): cmp $0x1,%eax
11717(6): jz 0xfffff909(%rip)
1171d(8): mov 0x1d8(%rsp),%rdi
11725(4): mov %eax,0x5c(%rsp)
11729(5): jmp 0xfffff51f(%rip)
1172e(2): nop 
11730(2): test $0x4,%al
11732(6): jz 0xfffff03c(%rip)
11738(4): mov 0x50(%r14),%rdx
1173c(5): mov 0x28(%rsp),%rdi
11741(2): mov %eax,%ecx
11743(3): mov %rbx,%rsi
11746(5): call 0xffff92da(%rip)
1174b(3): mov %rax,%r14
1174e(5): jmp 0xfffff9b2(%rip)
11753(5): mov 0x10(%rsp),%r15
11758(5): mov 0x8(%rsp),%rcx
1175d(3): mov %rbp,%rdx
11760(3): mov %r12,%rsi
11763(5): mov %r14,0x20(%rsp)
11768(3): mov %r15,%rdi
1176b(5): call 0xffff9775(%rip)
11770(3): mov %rbp,%rdi
11773(4): mov %eax,0x8(%rsp)
11777(5): call 0xffff0389(%rip)
1177c(4): mov 0x8(%rsp),%eax
11780(2): test %eax,%eax
11782(6): jz 0xfffffbd0(%rip)
11788(3): xor %r14d,%r14d
1178b(5): jmp 0xffffff71(%rip)
11790(4): mov (%rsp),%rdi
11794(3): mov %rbp,%rdx
11797(3): mov %rbx,%rsi
1179a(5): call 0xffffdb36(%rip)
1179f(2): test %eax,%eax
117a1(7): mov %eax,0xd0(%rsp)
117a8(6): jnz 0xffffff40(%rip)
117ae(5): movzx 0x68(%r14),%eax
117b3(5): jmp 0xfffffef9(%rip)
117b8(8): mov 0xb8(%rsp),%rsi
117c0(8): mov 0x1c8(%rsp),%rax
117c8(7): mov $0x0,(%rsi)
117cf(4): mov %rax,0x8(%rsi)
117d3(2): xor %eax,%eax
117d5(5): jmp 0xfffffc7c(%rip)
117da(3): cmp %rax,%r10
117dd(2): jz 0x1f(%rip)
117df(4): mov 0x0(%r9,%rax,8),%rax
117e3(3): cmp %rsi,%r10
117e6(3): mov %rax,(%rdx)
117e9(2): jz 0xb(%rip)
117eb(4): mov 0x0(%r9,%rsi,8),%rsi
117ef(5): jmp 0xfffffcad(%rip)
117f4(3): mov %r8,%rsi
117f7(5): jmp 0xfffffca5(%rip)
117fc(3): mov %r8,%rax
117ff(2): jmp 0xffffffe4(%rip)
11801(8): mov %rbp,0xd8(%rsp)
11809(5): jmp 0xffffeebf(%rip)
1180e(8): mov %rax,0x168(%rsp)
11816(5): jmp 0xfffff12e(%rip)
1181b(5): call 0xffff0405(%rip)

"update_cur_sifted_state" :
11820(2): push %r15
11822(2): push %r14
11824(3): mov %rdi,%rax
11827(2): push %r13
11829(2): push %r12
1182b(3): mov %rsi,%r13
1182e(1): push %rbp
1182f(1): push %rbx
11830(3): mov %rdx,%rbp
11833(3): mov %rcx,%rbx
11836(8): lea 0x0(,%rdx,8),%rcx
1183e(7): sub $0xa8,%rsp
11845(7): mov 0x98(%rax),%r12
1184c(7): mov 0xb8(%rax),%rax
11853(5): mov %rdi,0x8(%rsp)
11858(5): mov %rcx,0x18(%rsp)
1185d(9): mov $0x28,%rdi
11866(8): mov %rdi,0x98(%rsp)
1186e(2): xor %edi,%edi
11870(4): mov 0x0(%rax,%rdx,8),%rdx
11874(8): mov $0x0,0x5c(%rsp)
1187c(4): mov 0x8(%rbx),%rcx
11880(3): test %rdx,%rdx
11883(6): jz 0x255(%rip)
11889(4): lea 0x8(%rdx),%rdi
1188d(3): test %rcx,%rcx
11890(5): mov %rdi,0x10(%rsp)
11895(2): jnz 0x53(%rip)
11897(3): mov (%rsi),%rdx
1189a(8): mov $0x0,0x0(%rdx,%rbp,8)
118a2(4): mov 0x0(%rax,%rbp,8),%rdx
118a6(2): xor %eax,%eax
118a8(4): test $0x40,0x68(%rdx)
118ac(6): jnz 0xe3(%rip)
118b2(6): nop 0x0(%rax,%rax,1)
118b8(8): mov 0x98(%rsp),%rdi
118c0(9): xor $0x28,%rdi
118c9(6): jnz 0x7a2(%rip)
118cf(7): add $0xa8,%rsp
118d6(1): pop %rbx
118d7(1): pop %rbp
118d8(2): pop %r12
118da(2): pop %r13
118dc(2): pop %r14
118de(2): pop %r15
118e0(1): ret near (%rsp)
118e1(7): nop 0x0(%rax)
118e8(5): lea 0x60(%rsp),%rdi
118ed(3): mov %rbx,%rdx
118f0(3): mov %r12,%rsi
118f3(8): mov $0x0,0x60(%rsp)
118fb(5): call 0xffff93e5(%rip)
11900(3): mov %rax,%rdx
11903(4): mov 0x60(%rsp),%eax
11907(2): test %eax,%eax
11909(2): jnz 0xffffffaf(%rip)
1190b(4): mov 0x38(%rdx),%r15
1190f(4): lea 0x38(%rdx),%r14
11913(3): test %r15,%r15
11916(6): jz 0x20a(%rip)
1191c(5): mov 0x10(%rsp),%rsi
11921(3): mov %r14,%rdx
11924(3): mov %rbx,%rdi
11927(5): call 0xffff88b9(%rip)
1192c(2): test %eax,%eax
1192e(4): mov %eax,0x5c(%rsp)
11932(2): jnz 0xffffff86(%rip)
11934(5): cmp $0x0,0x28(%r13)
11939(6): jnz 0x277(%rip)
1193f(5): mov 0x18(%rsp),%r14
11944(4): add 0x0(%r13),%r14
11948(5): lea 0x5c(%rsp),%rdi
1194d(3): mov %rbx,%rdx
11950(3): mov %r12,%rsi
11953(5): call 0xffff938d(%rip)
11958(3): mov %rax,(%r14)
1195b(4): mov 0x5c(%rsp),%eax
1195f(2): test %eax,%eax
11961(6): jnz 0xffffff57(%rip)
11967(6): cmp $0x0,0x10(%rsp)
1196d(6): jz 0xffffff4b(%rip)
11973(5): mov 0x8(%rsp),%rax
11978(7): mov 0xb8(%rax),%rax
1197f(4): mov 0x0(%rax,%rbp,8),%rdx
11983(2): xor %eax,%eax
11985(4): test $0x40,0x68(%rdx)
11989(6): jz 0xffffff2f(%rip)
1198f(5): mov 0x8(%rsp),%rax
11994(2): xor %ebx,%ebx
11996(7): mov 0xc8(%rax),%rsi
1199d(3): mov %rsi,%rdx
119a0(3): cmp %rdx,%rbx
119a3(2): jnl 0x60(%rip)
119a5(4): lea 0x0(%rbx,%rdx,1),%rax
119a9(3): mov %rax,%rcx
119ac(4): shr $0x3f,%rcx
119b0(3): add %rax,%rcx
119b3(5): mov 0x8(%rsp),%rax
119b8(3): sar $0x1,%rcx
119bb(7): mov 0xd8(%rax),%rdi
119c2(4): lea 0x0(%rcx,%rcx,4),%rax
119c6(5): cmp 0x8(%rdi,%rax,8),%rbp
119cb(2): jle 0x33(%rip)
119cd(5): jmp 0x13a(%rip)
119d2(6): nop 0x0(%rax,%rax,1)
119d8(4): lea 0x0(%rbx,%rcx,1),%rdx
119dc(3): mov %rdx,%rax
119df(4): shr $0x3f,%rax
119e3(3): add %rdx,%rax
119e6(3): sar $0x1,%rax
119e9(4): lea 0x0(%rax,%rax,4),%rdx
119ed(3): mov %rax,%r8
119f0(5): cmp 0x8(%rdi,%rdx,8),%rbp
119f5(6): jnle 0x11b(%rip)
119fb(3): mov %rax,%rcx
119fe(3): cmp %rcx,%rbx
11a01(2): jl 0xffffffd7(%rip)
11a03(3): cmp %rbx,%rsi
11a06(6): jle 0xfa(%rip)
11a0c(4): lea 0x0(%rbx,%rbx,4),%rax
11a10(8): lea 0x0(,%rax,8),%rsi
11a18(5): mov 0x8(%rsp),%rax
11a1d(5): mov %rsi,0x40(%rsp)
11a22(7): mov 0xd8(%rax),%rax
11a29(5): cmp 0x8(%rax,%rsi,1),%rbp
11a2e(6): jnz 0xd2(%rip)
11a34(4): cmp $0xffffffff,%rbx
11a38(6): jz 0xc8(%rip)
11a3e(5): mov 0x8(%rsp),%rax
11a43(9): mov $0x0,0x60(%rsp)
11a4c(7): mov 0x98(%rax),%r12
11a53(5): mov 0x10(%rsp),%rax
11a58(5): cmp $0x0,0x8(%rax)
11a5d(6): jle 0xa3(%rip)
11a63(5): lea 0x60(%rsp),%rax
11a68(9): mov $0x0,0x20(%rsp)
11a71(5): mov %rbx,0x48(%rsp)
11a76(3): mov %r13,%r15
11a79(5): mov %rax,0x38(%rsp)
11a7e(2): jmp 0x24(%rip)
11a80(2): cmp $0x4,%al
11a82(6): jz 0x386(%rip)
11a88(5): mov 0x10(%rsp),%rcx
11a8d(6): add $0x1,0x20(%rsp)
11a93(5): mov 0x20(%rsp),%rax
11a98(4): cmp 0x8(%rcx),%rax
11a9c(6): jnl 0x5bf(%rip)
11aa2(5): mov 0x10(%rsp),%rax
11aa7(5): mov 0x20(%rsp),%rdi
11aac(4): mov 0x10(%rax),%rax
11ab0(4): mov 0x0(%rax,%rdi,8),%r14
11ab4(3): mov %r14,%rax
11ab7(4): shl/sal $0x4,%rax
11abb(4): add (%r12),%rax
11abf(4): cmp 0x10(%r15),%r14
11ac3(4): movzx 0x8(%rax),%eax
11ac7(2): jnz 0xffffffb9(%rip)
11ac9(4): cmp 0x18(%r15),%rbp
11acd(2): jnz 0xffffffb3(%rip)
11acf(2): jmp 0xffffffb9(%rip)
11ad1(7): nop 0x0(%rax)
11ad8(8): lea 0x0(,%rbp,8),%r14
11ae0(3): add (%rsi),%r14
11ae3(3): test %rcx,%rcx
11ae6(6): jnz 0xba(%rip)
11aec(7): mov $0x0,(%r14)
11af3(2): xor %eax,%eax
11af5(5): jmp 0xfffffdc3(%rip)
11afa(6): nop 0x0(%rax,%rax,1)
11b00(2): xor %eax,%eax
11b02(5): jmp 0xfffffdb6(%rip)
11b07(3): mov %rcx,%r8
11b0a(3): mov %rdx,%rcx
11b0d(3): nop (%rax)
11b10(4): lea 0x1(%r8),%rbx
11b14(3): mov %rcx,%rdx
11b17(5): jmp 0xfffffe89(%rip)
11b1c(4): nop 0x0(%rax)
11b20(4): mov 0x8(%rbx),%rdi
11b24(8): mov $0x0,0x40(%rdx)
11b2c(5): mov %rdx,0x20(%rsp)
11b31(4): mov %rdi,0x38(%rdx)
11b35(4): shl/sal $0x3,%rdi
11b39(5): call 0xffff0267(%rip)
11b3e(5): mov 0x20(%rsp),%rdx
11b43(3): test %rax,%rax
11b46(4): mov %rax,0x48(%rdx)
11b4a(2): jz 0x49(%rip)
11b4c(5): cmp $0x0,0x8(%rbx)
11b51(8): mov $0x0,0x60(%rsp)
11b59(2): jnle 0x15(%rip)
11b5b(5): jmp 0xfffffdc1(%rip)
11b60(4): add $0x1,%r15
11b64(4): cmp 0x8(%rbx),%r15
11b68(6): jnl 0xfffffdb4(%rip)
11b6e(4): mov 0x10(%rbx),%rax
11b72(3): mov %r14,%rdi
11b75(4): mov 0x0(%rax,%r15,8),%rax
11b79(4): lea 0x0(%rax,%rax,2),%rdx
11b7d(5): mov 0x38(%r12),%rax
11b82(4): lea 0x0(%rax,%rdx,8),%rsi
11b86(5): call 0xffff806a(%rip)
11b8b(2): test %eax,%eax
11b8d(4): mov %eax,0x60(%rsp)
11b91(2): jz 0xffffffcf(%rip)
11b93(5): mov $0xc,%eax
11b98(5): jmp 0xfffffd20(%rip)
11b9d(3): nop (%rax)
11ba0(9): mov $0x0,0x10(%rsp)
11ba9(5): jmp 0xfffffd9f(%rip)
11bae(2): nop 
11bb0(5): mov 0x8(%rsp),%rax
11bb5(7): mov 0xd8(%rax),%rax
11bbc(5): mov %rax,0x20(%rsp)
11bc1(6): jle 0xda(%rip)
11bc7(3): xor %r15d,%r15d
11bca(6): nop 0x0(%rax,%rax,1)
11bd0(4): mov 0x30(%r13),%rax
11bd4(5): mov 0x20(%rsp),%rdi
11bd9(4): mov 0x0(%rax,%r15,8),%rax
11bdd(4): lea 0x0(%rax,%rax,4),%rax
11be1(4): lea 0x0(%rdi,%rax,8),%rdx
11be5(4): cmp 0x10(%rdx),%rbp
11be9(6): jle 0xa4(%rip)
11bef(4): cmp 0x8(%rdx),%rbp
11bf3(6): jnle 0x9a(%rip)
11bf9(3): mov (%rdx),%rcx
11bfc(4): mov (%r12),%rax
11c00(4): mov 0x8(%rbx),%rsi
11c04(4): shl/sal $0x4,%rcx
11c08(4): cmp 0x18(%rdx),%rbp
11c0c(4): mov 0x0(%rax,%rcx,1),%r8
11c10(6): jz 0xa0(%rip)
11c16(3): xor %r14d,%r14d
11c19(3): test %rsi,%rsi
11c1c(2): jle 0x71(%rip)
11c1e(5): mov %rbp,0x28(%rsp)
11c23(3): mov %r8,%rbp
11c26(2): jmp 0x18(%rip)
11c28(8): nop 0x0(%rax,%rax,1)
11c30(4): add $0x1,%r14
11c34(4): cmp 0x8(%rbx),%r14
11c38(2): jnl 0x50(%rip)
11c3a(4): mov (%r12),%rax
11c3e(4): mov 0x10(%rbx),%rdx
11c42(4): mov 0x0(%rdx,%r14,8),%rsi
11c46(3): mov %rsi,%rdx
11c49(4): shl/sal $0x4,%rdx
11c4d(3): add %rdx,%rax
11c50(4): movzx 0x8(%rax),%edx
11c54(3): sub $0x8,%edx
11c57(3): cmp $0x1,%edx
11c5a(2): jnbe 0xffffffd6(%rip)
11c5c(3): cmp (%rax),%rbp
11c5f(2): jnz 0xffffffd1(%rip)
11c61(5): mov 0x10(%rsp),%rcx
11c66(3): mov %rbx,%rdx
11c69(3): mov %r12,%rdi
11c6c(5): call 0xffffa2b4(%rip)
11c71(2): test %eax,%eax
11c73(6): jnz 0xfffffc45(%rip)
11c79(4): add $0x1,%r14
11c7d(4): cmp 0x8(%rbx),%r14
11c81(2): jl 0xffffffb9(%rip)
11c83(5): nop 0x0(%rax,%rax,1)
11c88(5): mov 0x28(%rsp),%rbp
11c8d(4): add $0x1,%r15
11c91(4): cmp 0x28(%r13),%r15
11c95(6): jl 0xffffff3b(%rip)
11c9b(8): mov $0x0,0x5c(%rsp)
11ca3(5): jmp 0xfffffc9c(%rip)
11ca8(8): nop 0x0(%rax,%rax,1)
11cb0(3): test %rsi,%rsi
11cb3(2): jle 0xffffffda(%rip)
11cb5(4): mov 0x10(%rbx),%r10
11cb9(7): mov $0xffffffff,%r9
11cc0(4): lea 0x0(%r10,%rsi,8),%r11
11cc4(3): mov %r10,%rcx
11cc7(3): mov %r9,%rsi
11cca(2): jmp 0x1c(%rip)
11ccc(4): nop 0x0(%rax)
11cd0(4): cmp $0x9,%r14d
11cd4(2): jnz 0x9(%rip)
11cd6(3): cmp (%rdx),%r8
11cd9(4): cmove %rdi,%r9
11cdd(4): add $0x8,%rcx
11ce1(3): cmp %rcx,%r11
11ce4(2): jz 0x2a(%rip)
11ce6(3): mov (%rcx),%rdi
11ce9(3): mov %rdi,%rdx
11cec(4): shl/sal $0x4,%rdx
11cf0(3): add %rax,%rdx
11cf3(5): movzx 0x8(%rdx),%r14d
11cf8(4): cmp $0x8,%r14d
11cfc(2): jnz 0xffffffd4(%rip)
11cfe(3): cmp (%rdx),%r8
11d01(4): cmove %rdi,%rsi
11d05(4): add $0x8,%rcx
11d09(3): cmp %rcx,%r11
11d0c(2): jnz 0xffffffda(%rip)
11d0e(3): test %rsi,%rsi
11d11(3): mov %r9,%r14
11d14(5): mov %r9,0x28(%rsp)
11d19(6): js 0xc7(%rip)
11d1f(5): mov 0x10(%rsp),%rcx
11d24(3): mov %rbx,%rdx
11d27(3): mov %r12,%rdi
11d2a(5): call 0xffffa1f6(%rip)
11d2f(2): test %eax,%eax
11d31(6): jnz 0xfffffb87(%rip)
11d37(3): test %r14,%r14
11d3a(6): js 0xffffff53(%rip)
11d40(5): cmp $0x0,0x8(%rbx)
11d45(6): jle 0xffffff48(%rip)
11d4b(4): mov 0x10(%rbx),%r10
11d4f(3): xor %r14d,%r14d
11d52(5): mov %rbp,0x30(%rsp)
11d57(3): mov %r14,%rbp
11d5a(5): mov 0x28(%rsp),%r14
11d5f(2): jmp 0x1b(%rip)
11d61(7): nop 0x0(%rax)
11d68(4): add $0x1,%rbp
11d6c(4): cmp 0x8(%rbx),%rbp
11d70(6): jnl 0x88(%rip)
11d76(4): mov 0x10(%rbx),%r10
11d7a(4): mov 0x0(%r10,%rbp,8),%r10
11d7e(5): mov 0x38(%r12),%rax
11d83(3): mov %r14,%rdx
11d86(4): lea 0x0(%r10,%r10,2),%r9
11d8a(4): shl/sal $0x3,%r9
11d8e(3): add %r9,%rax
11d91(4): mov 0x8(%rax),%rdi
11d95(4): lea 0x10(%rax),%rsi
11d99(5): call 0xffff7937(%rip)
11d9e(3): test %rax,%rax
11da1(2): jnz 0xffffffc7(%rip)
11da3(5): add 0x30(%r12),%r9
11da8(4): mov 0x8(%r9),%rdi
11dac(4): lea 0x10(%r9),%rsi
11db0(5): call 0xffff7920(%rip)
11db5(3): test %rax,%rax
11db8(2): jnz 0xffffffb0(%rip)
11dba(5): mov 0x10(%rsp),%rcx
11dbf(3): mov %rbx,%rdx
11dc2(3): mov %r10,%rsi
11dc5(3): mov %r12,%rdi
11dc8(5): call 0xffffa158(%rip)
11dcd(2): test %eax,%eax
11dcf(6): jnz 0xfffffae9(%rip)
11dd5(4): sub $0x1,%rbp
11dd9(2): jmp 0xffffff8f(%rip)
11ddb(5): nop 0x0(%rax,%rax,1)
11de0(6): cmp $0x0,0x28(%rsp)
11de6(6): jns 0xffffff69(%rip)
11dec(5): jmp 0xfffffea1(%rip)
11df1(7): nop 0x0(%rax)
11df8(5): mov 0x30(%rsp),%rbp
11dfd(5): jmp 0xfffffe90(%rip)
11e02(6): nop 0x0(%rax,%rax,1)
11e08(5): mov 0x8(%rsp),%rax
11e0d(5): mov 0x40(%rsp),%r13
11e12(5): mov 0x48(%rsp),%rbx
11e17(7): add 0xd8(%rax),%r13
11e1e(4): lea 0x0(%r14,%r14,2),%rax
11e22(4): shl/sal $0x3,%rax
11e26(5): mov %rax,0x30(%rsp)
11e2b(8): lea 0x0(,%r14,8),%rax
11e33(5): mov %rax,0x28(%rsp)
11e38(3): mov %r15,%rax
11e3b(3): mov %r13,%r15
11e3e(3): mov %rbx,%r13
11e41(3): mov %rax,%rbx
11e44(5): jmp 0x16a(%rip)
11e49(7): nop 0x0(%rax)
11e50(4): mov 0x18(%r15),%rax
11e54(4): sub 0x10(%r15),%rax
11e58(3): test %rax,%rax
11e5b(5): lea 0x0(%rbp,%rax,1),%r9
11e60(6): jz 0x160(%rip)
11e66(5): mov 0x18(%r12),%rax
11e6b(5): mov 0x28(%rsp),%rsi
11e70(4): mov 0x0(%rax,%rsi,1),%r10
11e74(4): cmp 0x18(%rbx),%r9
11e78(6): jnle 0x13f(%rip)
11e7e(3): mov (%rbx),%rax
11e81(4): mov 0x0(%rax,%r9,8),%rax
11e85(3): test %rax,%rax
11e88(6): jz 0x12f(%rip)
11e8e(4): mov 0x10(%rax),%rdi
11e92(4): lea 0x18(%rax),%rsi
11e96(3): mov %r10,%rdx
11e99(5): call 0xffff7837(%rip)
11e9e(3): test %rax,%rax
11ea1(6): jz 0x116(%rip)
11ea7(4): sub $0x8,%rsp
11eab(4): lea 0x30(%rbx),%rdx
11eaf(4): lea 0x28(%rbx),%rsi
11eb3(2): push %r9
11eb5(5): mov 0x18(%rsp),%rdi
11eba(3): mov %r14,%rcx
11ebd(3): mov %r10,%r9
11ec0(3): mov %rbp,%r8
11ec3(5): call 0xffff7abd(%rip)
11ec8(2): test %al,%al
11eca(1): pop %rdx
11ecb(1): pop %rcx
11ecc(6): jnz 0xeb(%rip)
11ed2(6): cmp $0x0,0x60(%rsp)
11ed8(6): jz 0x110(%rip)
11ede(5): mov 0x38(%rsp),%rax
11ee3(3): mov %r13,%rsi
11ee6(5): mov %r14,0x70(%rsp)
11eeb(5): mov %rbp,0x78(%rsp)
11ef0(4): lea 0x20(%rax),%rdi
11ef4(5): call 0xffff629c(%rip)
11ef9(2): test %al,%al
11efb(6): jz 0x159(%rip)
11f01(5): mov 0x18(%rsp),%rdi
11f06(5): mov 0x60(%rsp),%rax
11f0b(5): mov 0x38(%rsp),%rsi
11f10(4): mov 0x0(%rax,%rdi,1),%r15
11f14(5): mov 0x8(%rsp),%rdi
11f19(5): call 0xffffde97(%rip)
11f1e(2): test %eax,%eax
11f20(6): jnz 0x10e(%rip)
11f26(4): mov 0x8(%rbx),%rsi
11f2a(5): mov 0x60(%rsp),%rdx
11f2f(3): test %rsi,%rsi
11f32(2): jz 0x1b(%rip)
11f34(4): lea 0x1(%rbp),%rcx
11f38(3): mov %r12,%rdi
11f3b(5): call 0xffff8fa5(%rip)
11f40(2): test %eax,%eax
11f42(6): jnz 0xec(%rip)
11f48(5): mov 0x60(%rsp),%rdx
11f4d(5): mov 0x38(%rsp),%r11
11f52(5): mov 0x18(%rsp),%rax
11f57(8): mov 0x88(%rsp),%rdi
11f5f(4): lea 0x30(%r11),%r9
11f63(4): mov %r15,0x0(%rdx,%rax,1)
11f67(3): mov %r13,%rdx
11f6a(3): mov %r9,%rsi
11f6d(5): call 0xffff7763(%rip)
11f72(4): sub $0x1,%rax
11f76(3): mov %rax,%rdx
11f79(2): js 0xe(%rip)
11f7b(4): lea 0x28(%r11),%rdi
11f7f(3): mov %r9,%rsi
11f82(5): call 0xffff78ce(%rip)
11f87(5): mov 0x8(%rsp),%rcx
11f8c(5): lea 0x0(%r13,%r13,4),%rax
11f91(7): mov 0xd8(%rcx),%rdx
11f98(4): lea 0x0(%rdx,%rax,8),%rax
11f9c(4): nop 0x0(%rax)
11fa0(4): add $0x1,%r13
11fa4(4): cmp $0x0,0x20(%rax)
11fa8(4): lea 0x28(%rax),%r15
11fac(2): jz 0x34(%rip)
11fae(3): cmp (%r15),%r14
11fb1(6): jz 0xfffffe9f(%rip)
11fb7(3): mov %r15,%rax
11fba(2): jmp 0xffffffe6(%rip)
11fbc(4): nop 0x0(%rax)
11fc0(5): mov 0x28(%r12),%rax
11fc5(5): mov 0x30(%rsp),%rdi
11fca(5): mov 0x10(%rax,%rdi,1),%rax
11fcf(3): mov (%rax),%r10
11fd2(5): jmp 0xfffffea2(%rip)
11fd7(9): nop 0x0(%rax,%rax,1)
11fe0(3): mov %rbx,%r15
11fe3(5): jmp 0xfffffaa5(%rip)
11fe8(4): mov 0x30(%rbx),%rax
11fec(4): lea 0x20(%rbx),%rsi
11ff0(4): movdqa (%rbx),%xmm0
11ff4(8): mov %rax,0x90(%rsp)
11ffc(5): mov 0x38(%rsp),%rax
12001(5): movaps %xmm0,0x60(%rsp)
12006(4): lea 0x20(%rax),%rdi
1200a(5): movdqa 0x10(%rbx),%xmm0
1200f(5): movaps %xmm0,0x70(%rsp)
12014(5): movdqa 0x20(%rbx),%xmm0
12019(8): movaps %xmm0,0x80(%rsp)
12021(5): call 0xffff880f(%rip)
12026(2): test %eax,%eax
12028(6): jz 0xfffffeb6(%rip)
1202e(6): cmp $0x0,0x60(%rsp)
12034(6): jz 0xfffff884(%rip)
1203a(8): mov 0x90(%rsp),%rdi
12042(4): mov %eax,0x8(%rsp)
12046(5): call 0xfffefaba(%rip)
1204b(4): mov 0x8(%rsp),%eax
1204f(5): jmp 0xfffff869(%rip)
12054(5): mov $0xc,%eax
12059(2): jmp 0xffffffd5(%rip)
1205b(6): cmp $0x0,0x60(%rsp)
12061(6): jz 0xfffffa9f(%rip)
12067(2): xor %eax,%eax
12069(2): jmp 0xffffffd1(%rip)
1206b(5): call 0xfffefbb5(%rip)

"parse_bracket_element.constprop.37" :
12070(2): push %r14
12072(2): push %r13
12074(3): mov %rsi,%r10
12077(2): push %r12
12079(1): push %rbp
1207a(3): movsxd %ecx,%r11
1207d(1): push %rbx
1207e(3): mov %rdx,%rbp
12081(3): mov %rdi,%rbx
12084(4): sub $0x20,%rsp
12088(4): mov 0x48(%rsi),%r12
1208c(9): mov $0x28,%rax
12095(5): mov %rax,0x18(%rsp)
1209a(2): xor %eax,%eax
1209c(7): cmp $0x1,0x90(%rsi)
120a3(2): jz 0x55(%rip)
120a5(3): mov %r12,%rsi
120a8(3): mov %r10,%rdi
120ab(5): call 0xffff7575(%rip)
120b0(3): cmp $0x1,%eax
120b3(2): jle 0x45(%rip)
120b5(4): mov 0x10(%r10),%rdx
120b9(2): cwde 
120bb(6): mov $0x1,(%rbx)
120c1(3): add %r12,%rax
120c4(4): mov 0x0(%rdx,%r12,4),%edx
120c8(3): mov %edx,0x8(%rbx)
120cb(4): mov %rax,0x48(%r10)
120cf(2): xor %eax,%eax
120d1(5): mov 0x18(%rsp),%rcx
120d6(9): xor $0x28,%rcx
120df(6): jnz 0x1e9(%rip)
120e5(4): add $0x20,%rsp
120e9(1): pop %rbx
120ea(1): pop %rbp
120eb(2): pop %r12
120ed(2): pop %r13
120ef(2): pop %r14
120f1(1): ret near (%rsp)
120f2(6): nop 0x0(%rax,%rax,1)
120f8(4): movzx 0x8(%rbp),%eax
120fc(3): add %r12,%r11
120ff(4): mov %r11,0x48(%r10)
12103(2): mov %eax,%edx
12105(3): and $0xfb,%edx
12108(3): cmp $0x1a,%dl
1210b(2): jz 0x25(%rip)
1210d(2): cmp $0x1c,%al
1210f(2): jz 0x21(%rip)
12111(2): cmp $0x16,%al
12113(2): jnz 0xb(%rip)
12115(3): test %r9b,%r9b
12118(6): jz 0x14a(%rip)
1211e(4): movzx 0x0(%rbp),%eax
12122(6): mov $0x0,(%rbx)
12128(3): mov %al,0x8(%rbx)
1212b(2): xor %eax,%eax
1212d(2): jmp 0xffffffa4(%rip)
1212f(1): nop 
12130(4): mov 0x68(%r10),%r12
12134(3): cmp %r12,%r11
12137(6): jnl 0x121(%rip)
1213d(5): movzx 0x0(%rbp),%r13d
12142(3): xor %r8d,%r8d
12145(2): jmp 0x2d(%rip)
12147(9): nop 0x0(%rax,%rax,1)
12150(4): mov 0x8(%rbx),%rax
12154(4): mov %r9b,0x0(%rax,%r8,1)
12158(4): add $0x1,%r8
1215c(4): cmp $0x20,%r8
12160(6): jz 0xf8(%rip)
12166(4): movzx 0x8(%rbp),%eax
1216a(4): mov 0x48(%r10),%r11
1216e(4): mov 0x68(%r10),%r12
12172(2): cmp $0x1e,%al
12174(3): movsxd %r8d,%r14
12177(2): jz 0x69(%rip)
12179(4): mov 0x8(%r10),%rdx
1217d(4): lea 0x1(%r11),%rax
12181(4): mov %rax,0x48(%r10)
12185(5): movzx 0x0(%rdx,%r11,1),%r9d
1218a(3): cmp %r12,%rax
1218d(6): jnl 0xcb(%rip)
12193(3): cmp %r9b,%r13b
12196(2): jnz 0xffffffba(%rip)
12198(4): mov 0x8(%r10),%rdx
1219c(4): cmp $0x5d,0x0(%rdx,%rax,1)
121a0(2): jnz 0xffffffb0(%rip)
121a2(4): add $0x1,%rax
121a6(4): mov %rax,0x48(%r10)
121aa(4): mov 0x8(%rbx),%rax
121ae(5): mov $0x0,0x0(%rax,%r14,1)
121b3(4): movzx 0x8(%rbp),%eax
121b7(2): cmp $0x1c,%al
121b9(6): jz 0x102(%rip)
121bf(2): cmp $0x1e,%al
121c1(6): jz 0xed(%rip)
121c7(2): cmp $0x1a,%al
121c9(6): jz 0xd8(%rip)
121cf(2): xor %eax,%eax
121d1(5): jmp 0xffffff00(%rip)
121d6(a): nop 0x0(%rax,%rax,1)
121e0(8): cmp $0x0,0x8b(%r10)
121e8(2): jz 0xffffff91(%rip)
121ea(8): cmp $0x0,0x8c(%r10)
121f2(6): jz 0x96(%rip)
121f8(4): cmp 0x30(%r10),%r11
121fc(2): jz 0x11(%rip)
121fe(4): mov 0x10(%r10),%rax
12202(5): cmp $0xff,0x0(%rax,%r11,4)
12207(6): jz 0xffffff72(%rip)
1220d(4): mov 0x18(%r10),%rax
12211(4): mov 0x0(%rax,%r11,8),%rax
12215(3): add (%r10),%rax
12218(4): add 0x28(%r10),%rax
1221c(4): movzx (%rax),%r9d
12220(4): test $0x80,%r9b
12224(6): jnz 0xffffff55(%rip)
1222a(8): cmp $0x1,0x90(%r10)
12232(5): mov $0x1,%eax
12237(2): jz 0xf(%rip)
12239(3): mov %r11,%rsi
1223c(3): mov %r10,%rdi
1223f(5): call 0xffff73e1(%rip)
12244(2): cwde 
12246(3): add %r11,%rax
12249(4): mov %rax,0x48(%r10)
1224d(5): jmp 0xffffff3d(%rip)
12252(6): nop 0x0(%rax,%rax,1)
12258(5): mov $0x7,%eax
1225d(5): jmp 0xfffffe74(%rip)
12262(3): mov %rsp,%rdi
12265(3): mov %r8,%rdx
12268(3): mov %r10,%rsi
1226b(5): call 0xffff5955(%rip)
12270(5): cmp $0x15,0x8(%rsp)
12275(5): mov $0xb,%eax
1227a(6): jz 0xfffffea4(%rip)
12280(5): jmp 0xfffffe51(%rip)
12285(3): nop (%rax)
12288(4): lea 0x1(%r11),%rax
1228c(3): add (%r10),%r11
1228f(4): mov 0x28(%r10),%rdx
12293(4): mov %rax,0x48(%r10)
12297(5): movzx 0x0(%r11,%rdx,1),%r9d
1229c(5): jmp 0xfffffeee(%rip)
122a1(6): mov $0x3,(%rbx)
122a7(2): xor %eax,%eax
122a9(5): jmp 0xfffffe28(%rip)
122ae(6): mov $0x4,(%rbx)
122b4(2): xor %eax,%eax
122b6(5): jmp 0xfffffe1b(%rip)
122bb(6): mov $0x2,(%rbx)
122c1(2): xor %eax,%eax
122c3(5): jmp 0xfffffe0e(%rip)
122c8(5): call 0xfffef958(%rip)

"peek_token" :
122d0(2): push %r15
122d2(2): push %r14
122d4(2): push %r13
122d6(2): push %r12
122d8(1): push %rbp
122d9(1): push %rbx
122da(3): mov %rdi,%rbp
122dd(4): sub $0x38,%rsp
122e1(4): mov 0x48(%rsi),%r14
122e5(9): mov $0x28,%rax
122ee(5): mov %rax,0x28(%rsp)
122f3(2): xor %eax,%eax
122f5(4): cmp %r14,0x68(%rsi)
122f9(6): jle 0x97(%rip)
122ff(5): movzx 0xa(%rdi),%r13d
12304(3): mov %rdx,%r15
12307(4): mov 0x8(%rsi),%rdx
1230b(3): mov %rsi,%rbx
1230e(5): movzx 0x0(%rdx,%r14,1),%r12d
12313(4): and $0x9f,%r13d
12317(4): mov %r13b,0xa(%rdi)
1231b(6): mov 0x90(%rsi),%eax
12321(3): mov %r12b,(%rdi)
12324(3): cmp $0x1,%eax
12327(6): jle 0x99(%rip)
1232d(4): cmp 0x30(%rsi),%r14
12331(6): jz 0x19f(%rip)
12337(4): mov 0x10(%rsi),%rcx
1233b(4): mov 0x0(%rcx,%r14,4),%ecx
1233f(3): cmp $0xff,%ecx
12342(6): jz 0xde(%rip)
12348(4): cmp $0x5c,%r12b
1234c(6): jz 0xf4(%rip)
12352(4): mov $0x1,0x8(%rdi)
12356(2): mov %ecx,%edi
12358(5): mov %rdx,0x8(%rsp)
1235d(3): mov %ecx,(%rsp)
12360(5): call 0xfffefa30(%rip)
12365(3): mov (%rsp),%ecx
12368(2): test %eax,%eax
1236a(3): setnz %al
1236d(3): cmp $0x5f,%ecx
12370(3): setz %cl
12373(2): or %ecx,%eax
12375(3): shl/sal $0x6,%eax
12378(3): or %eax,%r13d
1237b(4): mov %r13b,0xa(%rbp)
1237f(5): mov 0x8(%rsp),%rdx
12384(2): jmp 0x78(%rip)
12386(a): nop 0x0(%rax,%rax,1)
12390(4): mov $0x2,0x8(%rdi)
12394(5): mov 0x28(%rsp),%rdi
12399(9): xor $0x28,%rdi
123a2(6): jnz 0x626(%rip)
123a8(4): add $0x38,%rsp
123ac(1): pop %rbx
123ad(1): pop %rbp
123ae(2): pop %r12
123b0(2): pop %r13
123b2(2): pop %r14
123b4(2): pop %r15
123b6(1): ret near (%rsp)
123b7(9): nop 0x0(%rax,%rax,1)
123c0(4): cmp $0x5c,%r12b
123c4(2): jz 0x7c(%rip)
123c6(4): mov $0x1,0x8(%rbp)
123ca(4): mov %rdx,(%rsp)
123ce(5): call 0xfffefb82(%rip)
123d3(3): mov (%rax),%rsi
123d6(4): movzx %r12b,%ecx
123da(4): movzx 0x0(%rsi,%rcx,2),%eax
123de(4): shr $0x3,%ax
123e2(3): and $0x1,%eax
123e5(4): cmp $0x5f,%r12b
123e9(3): setz %cl
123ec(2): or %ecx,%eax
123ee(3): shl/sal $0x6,%eax
123f1(3): or %eax,%r13d
123f4(4): mov %r13b,0xa(%rbp)
123f8(4): mov (%rsp),%rdx
123fc(4): sub $0xa,%r12d
12400(4): cmp $0x73,%r12b
12404(6): jnbe 0x138(%rip)
1240a(7): lea 0x5363(%rip),%rcx
12411(4): movzx %r12b,%r12d
12415(4): movsxd 0x0(%rcx,%r12,4),%rax
12419(3): add %rcx,%rax
1241c(2): jmp %rax
1241e(2): nop 
12420(4): or $0x20,%r13d
12424(4): mov $0x1,0x8(%rdi)
12428(5): mov $0x1,%eax
1242d(4): mov %r13b,0xa(%rdi)
12431(5): jmp 0xffffff63(%rip)
12436(a): nop 0x0(%rax,%rax,1)
12440(4): lea 0x1(%r14),%rsi
12444(4): cmp 0x58(%rbx),%rsi
12448(6): jnl 0xa8(%rip)
1244e(7): cmp $0x0,0x8b(%rbx)
12455(6): jnz 0x48b(%rip)
1245b(6): movzx 0x1(%rdx,%r14,1),%edi
12461(3): mov %edi,%r12d
12464(4): mov %edi,0x8(%rsp)
12468(3): cmp $0x1,%eax
1246b(4): mov %r12b,0x0(%rbp)
1246f(4): mov $0x1,0x8(%rbp)
12473(6): jle 0x44d(%rip)
12479(4): mov 0x10(%rbx),%rax
1247d(4): mov 0x0(%rax,%rsi,4),%r8d
12481(3): mov %r8d,%edi
12484(4): mov %r8d,(%rsp)
12488(5): call 0xfffef908(%rip)
1248d(4): mov (%rsp),%r8d
12491(2): test %eax,%eax
12493(3): setnz %al
12496(4): cmp $0x5f,%r8d
1249a(3): setz %dl
1249d(5): lea 0xffffffd9(%r12),%ecx
124a2(2): or %edx,%eax
124a4(3): shl/sal $0x6,%eax
124a7(3): or %eax,%r13d
124aa(3): cmp $0x56,%cl
124ad(4): mov %r13b,0xa(%rbp)
124b1(6): jnbe 0x404(%rip)
124b7(7): lea 0x5486(%rip),%rdx
124be(3): movzx %cl,%ecx
124c1(4): movsxd 0x0(%rdx,%rcx,4),%rax
124c5(3): add %rdx,%rax
124c8(2): jmp %rax
124ca(6): nop 0x0(%rax,%rax,1)
124d0(4): cmp $0x5c,%r12b
124d4(6): jz 0xffffff6c(%rip)
124da(4): mov 0x10(%rbx),%rax
124de(4): mov $0x1,0x8(%rbp)
124e2(4): mov 0x0(%rax,%r14,4),%ecx
124e6(5): jmp 0xfffffe70(%rip)
124eb(5): nop 0x0(%rax,%rax,1)
124f0(4): mov $0x24,0x8(%rbp)
124f4(5): mov $0x1,%eax
124f9(5): jmp 0xfffffe9b(%rip)
124fe(2): nop 
12500(7): and $0x1200,%r15d
12507(5): mov $0x1,%eax
1250c(7): cmp $0x1200,%r15
12513(6): jnz 0xfffffe81(%rip)
12519(4): mov $0x18,0x8(%rbp)
1251d(5): jmp 0xfffffe77(%rip)
12522(6): nop 0x0(%rax,%rax,1)
12528(7): and $0x8400,%r15d
1252f(7): cmp $0x8000,%r15
12536(6): jz 0xdc(%rip)
1253c(5): mov $0x1,%eax
12541(5): jmp 0xfffffe53(%rip)
12546(a): nop 0x0(%rax,%rax,1)
12550(7): and $0x1200,%r15d
12557(5): mov $0x1,%eax
1255c(7): cmp $0x1200,%r15
12563(6): jnz 0xfffffe31(%rip)
12569(4): mov $0x17,0x8(%rbp)
1256d(5): jmp 0xfffffe27(%rip)
12572(6): nop 0x0(%rax,%rax,1)
12578(7): test $0x800008,%r15d
1257f(2): jnz 0xb(%rip)
12581(3): test %r14,%r14
12584(6): jnz 0x3c6(%rip)
1258a(4): mov $0xc,0x8(%rbp)
1258e(7): mov $0x10,0x0(%rbp)
12595(5): mov $0x1,%eax
1259a(5): jmp 0xfffffdfa(%rip)
1259f(1): nop 
125a0(4): mov $0x14,0x8(%rbp)
125a4(5): mov $0x1,%eax
125a9(5): jmp 0xfffffdeb(%rip)
125ae(2): nop 
125b0(7): test $0x402,%r15d
125b7(5): mov $0x1,%eax
125bc(6): jnz 0xfffffdd8(%rip)
125c2(4): mov $0x13,0x8(%rbp)
125c6(5): jmp 0xfffffdce(%rip)
125cb(5): nop 0x0(%rax,%rax,1)
125d0(4): mov $0x5,0x8(%rbp)
125d4(5): mov $0x1,%eax
125d9(5): jmp 0xfffffdbb(%rip)
125de(2): nop 
125e0(7): test $0x402,%r15d
125e7(5): mov $0x1,%eax
125ec(6): jnz 0xfffffda8(%rip)
125f2(4): mov $0x12,0x8(%rbp)
125f6(5): jmp 0xfffffd9e(%rip)
125fb(5): nop 0x0(%rax,%rax,1)
12600(7): test $0x800,%r15d
12607(5): mov $0x1,%eax
1260c(6): jz 0xfffffd88(%rip)
12612(4): mov $0xa,0x8(%rbp)
12616(5): mov $0x1,%eax
1261b(5): jmp 0xfffffd79(%rip)
12620(4): mov $0xb,0x8(%rbp)
12624(5): mov $0x1,%eax
12629(5): jmp 0xfffffd6b(%rip)
1262e(2): nop 
12630(7): test $0x2000,%r15d
12637(5): mov $0x1,%eax
1263c(6): jz 0xfffffd58(%rip)
12642(4): mov $0x9,0x8(%rbp)
12646(5): jmp 0xfffffd4e(%rip)
1264b(5): nop 0x0(%rax,%rax,1)
12650(7): test $0x2000,%r15d
12657(5): mov $0x1,%eax
1265c(6): jz 0xfffffd38(%rip)
12662(4): mov $0x8,0x8(%rbp)
12666(5): jmp 0xfffffd2e(%rip)
1266b(5): nop 0x0(%rax,%rax,1)
12670(4): test $0x8,%r15b
12674(2): jnz 0x10(%rip)
12676(4): add $0x1,%r14
1267a(4): cmp 0x58(%rbx),%r14
1267e(6): jnz 0x2fd(%rip)
12684(4): mov $0xc,0x8(%rbp)
12688(7): mov $0x20,0x0(%rbp)
1268f(5): mov $0x1,%eax
12694(5): jmp 0xfffffd00(%rip)
12699(7): test $0x8400,%r15d
126a0(5): mov $0x2,%eax
126a5(6): jnz 0xfffffcef(%rip)
126ab(4): mov $0xa,0x8(%rbp)
126af(5): jmp 0xfffffce5(%rip)
126b4(7): and $0x1200,%r15d
126bb(5): mov $0x2,%eax
126c0(7): cmp $0x200,%r15
126c7(6): jnz 0xfffffccd(%rip)
126cd(5): jmp 0xfffffe9c(%rip)
126d2(7): test $0x80000,%r15d
126d9(5): mov $0x2,%eax
126de(6): jnz 0xfffffcb6(%rip)
126e4(4): mov $0x20,0x8(%rbp)
126e8(5): jmp 0xfffffcac(%rip)
126ed(7): test $0x80000,%r15d
126f4(5): mov $0x2,%eax
126f9(6): jnz 0xfffffc9b(%rip)
126ff(4): mov $0x22,0x8(%rbp)
12703(5): jmp 0xfffffc91(%rip)
12708(7): and $0x1200,%r15d
1270f(5): mov $0x2,%eax
12714(7): cmp $0x200,%r15
1271b(6): jnz 0xfffffc79(%rip)
12721(5): jmp 0xfffffdf8(%rip)
12726(7): test $0x80000,%r15d
1272d(5): mov $0x2,%eax
12732(6): jnz 0xfffffc62(%rip)
12738(4): mov $0xc,0x8(%rbp)
1273c(7): mov $0x100,0x0(%rbp)
12743(5): jmp 0xfffffc51(%rip)
12748(7): test $0x80000,%r15d
1274f(5): mov $0x2,%eax
12754(6): jnz 0xfffffc40(%rip)
1275a(4): mov $0xc,0x8(%rbp)
1275e(7): mov $0x40,0x0(%rbp)
12765(5): jmp 0xfffffc2f(%rip)
1276a(7): test $0x80000,%r15d
12771(5): mov $0x2,%eax
12776(6): jnz 0xfffffc1e(%rip)
1277c(4): mov $0x21,0x8(%rbp)
12780(5): jmp 0xfffffc14(%rip)
12785(7): test $0x80000,%r15d
1278c(5): mov $0x2,%eax
12791(6): jnz 0xfffffc03(%rip)
12797(4): mov $0x23,0x8(%rbp)
1279b(5): jmp 0xfffffbf9(%rip)
127a0(7): test $0x80000,%r15d
127a7(5): mov $0x2,%eax
127ac(6): jnz 0xfffffbe8(%rip)
127b2(4): mov $0xc,0x8(%rbp)
127b6(7): mov $0x200,0x0(%rbp)
127bd(5): jmp 0xfffffbd7(%rip)
127c2(7): and $0x402,%r15d
127c9(5): mov $0x2,%eax
127ce(4): cmp $0x2,%r15
127d2(6): jnz 0xfffffbc2(%rip)
127d8(5): jmp 0xfffffdea(%rip)
127dd(7): test $0x80000,%r15d
127e4(5): mov $0x2,%eax
127e9(6): jnz 0xfffffbab(%rip)
127ef(4): mov $0xc,0x8(%rbp)
127f3(7): mov $0x9,0x0(%rbp)
127fa(5): jmp 0xfffffb9a(%rip)
127ff(7): test $0x80000,%r15d
12806(5): mov $0x2,%eax
1280b(6): jnz 0xfffffb89(%rip)
12811(4): mov $0xc,0x8(%rbp)
12815(7): mov $0x6,0x0(%rbp)
1281c(5): jmp 0xfffffb78(%rip)
12821(7): test $0x4000,%r15d
12828(5): mov $0x2,%eax
1282d(6): jnz 0xfffffb67(%rip)
12833(4): mov 0x8(%rsp),%edx
12837(4): mov $0x4,0x8(%rbp)
1283b(3): sub $0x31,%edx
1283e(3): movsxd %edx,%rdx
12841(4): mov %rdx,0x0(%rbp)
12845(5): jmp 0xfffffb4f(%rip)
1284a(7): and $0x402,%r15d
12851(5): mov $0x2,%eax
12856(4): cmp $0x2,%r15
1285a(6): jnz 0xfffffb3a(%rip)
12860(5): jmp 0xfffffd92(%rip)
12865(7): test $0x2000,%r15d
1286c(5): mov $0x2,%eax
12871(6): jnz 0xfffffb23(%rip)
12877(5): jmp 0xfffffdcb(%rip)
1287c(7): test $0x2000,%r15d
12883(5): mov $0x2,%eax
12888(6): jnz 0xfffffb0c(%rip)
1288e(5): jmp 0xfffffdd4(%rip)
12893(7): test $0x80000,%r15d
1289a(5): mov $0x2,%eax
1289f(6): jnz 0xfffffaf5(%rip)
128a5(4): mov $0xc,0x8(%rbp)
128a9(7): mov $0x80,0x0(%rbp)
128b0(5): jmp 0xfffffae4(%rip)
128b5(5): mov $0x2,%eax
128ba(5): jmp 0xfffffada(%rip)
128bf(1): nop 
128c0(5): call 0xfffef690(%rip)
128c5(3): mov (%rax),%rsi
128c8(4): movzx %r12b,%edx
128cc(4): movzx 0x0(%rsi,%rdx,2),%eax
128d0(4): shr $0x3,%ax
128d4(3): and $0x1,%eax
128d7(4): cmp $0x5f,%r12b
128db(5): jmp 0xfffffbbf(%rip)
128e0(3): cmp $0x1,%eax
128e3(2): jle 0x31(%rip)
128e5(4): mov 0x10(%rbx),%rcx
128e9(8): lea 0x0(,%rsi,4),%rdi
128f1(4): mov 0x0(%rcx,%rsi,4),%r8d
128f5(4): cmp $0xff,%r8d
128f9(6): jz 0xb6(%rip)
128ff(4): lea 0x2(%r14),%r9
12903(4): cmp %r9,0x30(%rbx)
12907(2): jz 0xd(%rip)
12909(5): cmp $0xff,0x4(%rcx,%rdi,1)
1290e(6): jz 0xa1(%rip)
12914(7): cmp $0x0,0x8c(%rbx)
1291b(3): mov (%rbx),%rcx
1291e(4): mov 0x28(%rbx),%rdi
12922(2): jz 0x46(%rip)
12924(4): mov 0x18(%rbx),%r8
12928(3): add %rdi,%rcx
1292b(4): add 0x0(%r8,%rsi,8),%rcx
1292f(3): movzx (%rcx),%edi
12932(3): mov %edi,%r12d
12935(4): mov %edi,0x8(%rsp)
12939(6): and $0x80,%edi
1293f(6): jnz 0xfffffb1c(%rip)
12945(5): jmp 0xfffffb23(%rip)
1294a(6): cmp $0xa,0xffffffff(%rdx,%r14,1)
12950(6): jnz 0xfffffbec(%rip)
12956(7): test $0x800,%r15d
1295d(6): jz 0xfffffbdf(%rip)
12963(5): jmp 0xfffffc27(%rip)
12968(3): add %rsi,%rcx
1296b(4): movzx 0x0(%rcx,%rdi,1),%edi
1296f(3): mov %edi,%r12d
12972(4): mov %edi,0x8(%rsp)
12976(5): jmp 0xfffffaf2(%rip)
1297b(5): lea 0x10(%rsp),%rdi
12980(3): mov %r15,%rdx
12983(4): mov %r14,0x48(%rbx)
12987(3): mov %rbx,%rsi
1298a(5): call 0xfffff946(%rip)
1298f(5): movzx 0x18(%rsp),%eax
12994(5): sub $0x1,0x48(%rbx)
12999(3): lea 0xfffffff7(%rax),%edx
1299c(5): mov $0x1,%eax
129a1(3): cmp $0x1,%dl
129a4(6): jnbe 0xfffff9f0(%rip)
129aa(5): jmp 0xfffffcda(%rip)
129af(6): movzx 0x1(%rdx,%r14,1),%eax
129b5(4): mov $0x1,0x8(%rbp)
129b9(3): mov %eax,%r12d
129bc(3): mov %al,0x0(%rbp)
129bf(4): mov %eax,0x8(%rsp)
129c3(5): jmp 0xfffffabe(%rip)
129c8(5): call 0xfffef258(%rip)

"fetch_number" :
129d0(2): push %r14
129d2(3): mov %rdi,%r14
129d5(2): push %r13
129d7(3): mov %rsi,%r13
129da(2): push %r12
129dc(7): mov $0xfffffffe,%r12
129e3(1): push %rbp
129e4(3): mov %rdx,%rbp
129e7(1): push %rbx
129e8(7): mov $0xffffffff,%rbx
129ef(1): nop 
129f0(3): mov %rbp,%rdx
129f3(3): mov %r14,%rsi
129f6(3): mov %r13,%rdi
129f9(5): call 0xfffff8d7(%rip)
129fe(2): cwde 
12a00(4): add %rax,0x48(%r14)
12a04(5): movzx 0x8(%r13),%eax
12a09(5): movzx 0x0(%r13),%edx
12a0e(2): cmp $0x2,%al
12a10(2): jz 0x50(%rip)
12a12(2): cmp $0x18,%al
12a14(2): jz 0x53(%rip)
12a16(3): cmp $0x2c,%dl
12a19(2): jz 0x4e(%rip)
12a1b(2): cmp $0x1,%al
12a1d(2): jz 0xb(%rip)
12a1f(3): mov %r12,%rbx
12a22(2): jmp 0xffffffce(%rip)
12a24(4): nop 0x0(%rax)
12a28(3): lea 0xffffffd0(%rdx),%eax
12a2b(2): cmp $0x9,%al
12a2d(2): jnbe 0xfffffff2(%rip)
12a2f(4): cmp $0xfffffffe,%rbx
12a33(2): jz 0xffffffec(%rip)
12a35(4): cmp $0xffffffff,%rbx
12a39(2): jz 0x3f(%rip)
12a3b(4): lea 0x0(%rbx,%rbx,4),%rax
12a3f(4): lea 0x0(%rdx,%rax,2),%rbx
12a43(5): mov $0x8030,%eax
12a48(7): cmp $0x8030,%rbx
12a4f(4): cmovnl %rax,%rbx
12a53(4): sub $0x30,%rbx
12a57(2): jmp 0xffffff99(%rip)
12a59(7): nop 0x0(%rax)
12a60(7): mov $0xfffffffe,%rbx
12a67(3): mov %rbx,%rax
12a6a(1): pop %rbx
12a6b(1): pop %rbp
12a6c(2): pop %r12
12a6e(2): pop %r13
12a70(2): pop %r14
12a72(1): ret near (%rsp)
12a73(5): nop 0x0(%rax,%rax,1)
12a78(3): movzx %dl,%ebx
12a7b(3): sub $0x30,%ebx
12a7e(3): movsxd %ebx,%rbx
12a81(5): jmp 0xffffff6f(%rip)

"parse_expression" :
12a90(2): push %r15
12a92(2): push %r14
12a94(2): push %r13
12a96(2): push %r12
12a98(1): push %rbp
12a99(1): push %rbx
12a9a(7): sub $0x128,%rsp
12aa1(5): mov %rcx,0x20(%rsp)
12aa6(4): movzx 0x8(%rdx),%ecx
12aaa(9): mov $0x28,%rax
12ab3(8): mov %rax,0x118(%rsp)
12abb(2): xor %eax,%eax
12abd(3): mov (%rsi),%rax
12ac0(5): mov %rdx,0x18(%rsp)
12ac5(5): mov %r9,0x40(%rsp)
12aca(3): cmp $0x24,%cl
12acd(5): mov %rax,0x10(%rsp)
12ad2(6): jnbe 0xbe(%rip)
12ad8(3): mov %rsi,%rbp
12adb(7): lea 0x4fbe(%rip),%rsi
12ae2(3): movzx %cl,%edx
12ae5(3): mov %rdi,%r14
12ae8(4): movsxd 0x0(%rsi,%rdx,4),%rax
12aec(3): add %rsi,%rax
12aef(2): jmp %rax
12af1(4): mov 0x30(%rbp),%rbx
12af5(5): mov 0x20(%rsp),%r15
12afa(3): mov %rdi,%rsi
12afd(5): mov 0x18(%rsp),%r13
12b02(4): mov %r8,(%rsp)
12b06(4): lea 0x1(%rbx),%rax
12b0a(3): mov %r15,%rdx
12b0d(7): or $0x800000,%rdx
12b14(3): mov %r13,%rdi
12b17(4): mov %rax,0x30(%rbp)
12b1b(5): call 0xfffff7b5(%rip)
12b20(2): cwde 
12b22(4): add %rax,0x48(%r14)
12b26(2): xor %eax,%eax
12b28(5): cmp $0x9,0x8(%r13)
12b2d(3): mov %r13,%rdx
12b30(6): jz 0xb00(%rip)
12b36(5): mov 0x40(%rsp),%r13
12b3b(4): mov (%rsp),%r8
12b3f(3): mov %r15,%rcx
12b42(3): mov %rbp,%rsi
12b45(3): mov %r14,%rdi
12b48(4): add $0x1,%r8
12b4c(3): mov %r13,%r9
12b4f(5): call 0x15b1(%rip)
12b54(4): mov 0x0(%r13),%r11d
12b58(3): test %r11d,%r11d
12b5b(2): jnz 0x35(%rip)
12b5d(5): mov 0x18(%rsp),%rdx
12b62(4): cmp $0x9,0x8(%rdx)
12b66(6): jz 0xaca(%rip)
12b6c(3): test %rax,%rax
12b6f(2): jz 0x13(%rip)
12b71(7): lea 0xffff62d8(%rip),%rsi
12b78(2): xor %edx,%edx
12b7a(3): mov %rax,%rdi
12b7d(5): call 0xffff5433(%rip)
12b82(5): mov 0x40(%rsp),%rax
12b87(6): mov $0x8,(%rax)
12b8d(3): nop (%rax)
12b90(9): mov $0x0,0x28(%rsp)
12b99(7): nop 0x0(%rax)
12ba0(8): mov 0x118(%rsp),%rdi
12ba8(9): xor $0x28,%rdi
12bb1(5): mov 0x28(%rsp),%rax
12bb6(6): jnz 0x1378(%rip)
12bbc(7): add $0x128,%rsp
12bc3(1): pop %rbx
12bc4(1): pop %rbp
12bc5(2): pop %r12
12bc7(2): pop %r13
12bc9(2): pop %r14
12bcb(2): pop %r15
12bcd(1): ret near (%rsp)
12bce(9): test $0x1000000,0x20(%rsp)
12bd7(6): jnz 0x256(%rip)
12bdd(5): mov 0x20(%rsp),%rax
12be2(2): test $0x20,%al
12be4(6): jnz 0x249(%rip)
12bea(2): test $0x10,%al
12bec(6): jnz 0xe69(%rip)
12bf2(3): cmp $0x9,%cl
12bf5(6): jz 0xa13(%rip)
12bfb(5): mov 0x10(%rsp),%rax
12c00(5): mov 0x18(%rsp),%r8
12c05(2): xor %ecx,%ecx
12c07(2): xor %edx,%edx
12c09(7): lea 0x80(%rax),%rsi
12c10(4): lea 0x70(%rax),%rdi
12c14(5): mov $0x1,0x8(%r8)
12c19(5): call 0xffff7777(%rip)
12c1e(3): test %rax,%rax
12c21(5): mov %rax,0x28(%rsp)
12c26(6): jz 0x9d2(%rip)
12c2c(5): mov 0x18(%rsp),%rbx
12c31(5): mov 0x20(%rsp),%rdx
12c36(3): mov %r14,%rsi
12c39(8): lea 0xc0(%rsp),%r15
12c41(3): mov %rbx,%rdi
12c44(5): call 0xfffff68c(%rip)
12c49(2): cwde 
12c4b(4): add %rax,0x48(%r14)
12c4f(4): movzx 0x8(%rbx),%eax
12c53(5): nop 0x0(%rax,%rax,1)
12c58(2): cmp $0x17,%al
12c5a(6): jnbe 0xffffff46(%rip)
12c60(2): cmp $0x12,%al
12c62(5): mov $0x8c0800,%ecx
12c67(3): setz %bl
12c6a(4): bt %rax,%rcx
12c6e(6): jnb 0xffffff32(%rip)
12c74(5): mov 0x18(%rsp),%rcx
12c79(2): cmp $0x17,%al
12c7b(4): mov 0x48(%r14),%rbp
12c7f(4): movdqa (%rcx),%xmm0
12c83(6): jz 0x325(%rip)
12c89(2): cmp $0x13,%al
12c8b(3): movzx %bl,%ebx
12c8e(6): jz 0x2b2(%rip)
12c94(5): mov 0x20(%rsp),%rdx
12c99(5): mov 0x18(%rsp),%rdi
12c9e(3): mov %r14,%rsi
12ca1(5): call 0xfffff62f(%rip)
12ca6(2): cwde 
12ca8(4): add %rax,0x48(%r14)
12cac(6): cmp $0x0,0x28(%rsp)
12cb2(6): jz 0x38e(%rip)
12cb8(8): mov $0xffffffff,(%rsp)
12cc0(3): test %rbx,%rbx
12cc3(5): mov 0x28(%rsp),%rbp
12cc8(9): mov $0x0,0x30(%rsp)
12cd1(6): jnle 0x17f(%rip)
12cd7(4): cmp $0x11,0x30(%rbp)
12cdb(6): jz 0x345(%rip)
12ce1(5): cmp $0xffffffff,(%rsp)
12ce6(3): mov %rbp,%rdx
12ce9(3): mov %r15,%r8
12cec(3): setz %al
12cef(2): xor %ecx,%ecx
12cf1(3): add $0xa,%eax
12cf4(7): mov %al,0xc8(%rsp)
12cfb(5): mov 0x10(%rsp),%rax
12d00(4): lea 0x70(%rax),%r12
12d04(7): lea 0x80(%rax),%r13
12d0b(3): mov %r12,%rdi
12d0e(3): mov %r13,%rsi
12d11(5): call 0xffff767f(%rip)
12d16(3): test %rax,%rax
12d19(3): mov %rax,%rdx
12d1c(6): jz 0x1f4(%rip)
12d22(4): add $0x2,%rbx
12d26(4): cmp (%rsp),%rbx
12d2a(2): jnle 0x81(%rip)
12d2c(5): mov %r14,0x48(%rsp)
12d31(3): mov %rax,%r14
12d34(5): mov 0x10(%rsp),%rsi
12d39(3): mov %rbp,%rdi
12d3c(5): call 0xffff7734(%rip)
12d41(3): mov %r15,%r8
12d44(3): mov %rax,%rbp
12d47(3): mov %rax,%rcx
12d4a(3): mov %r14,%rdx
12d4d(3): mov %r13,%rsi
12d50(3): mov %r12,%rdi
12d53(8): mov $0x10,0xc8(%rsp)
12d5b(5): call 0xffff7635(%rip)
12d60(3): test %rbp,%rbp
12d63(6): jz 0x1ad(%rip)
12d69(3): test %rax,%rax
12d6c(6): jz 0x1a4(%rip)
12d72(2): xor %ecx,%ecx
12d74(3): mov %r15,%r8
12d77(3): mov %rax,%rdx
12d7a(3): mov %r13,%rsi
12d7d(3): mov %r12,%rdi
12d80(8): mov $0xa,0xc8(%rsp)
12d88(5): call 0xffff7608(%rip)
12d8d(3): test %rax,%rax
12d90(3): mov %rax,%r14
12d93(6): jz 0x17d(%rip)
12d99(4): add $0x1,%rbx
12d9d(4): cmp (%rsp),%rbx
12da1(2): jle 0xffffff93(%rip)
12da3(5): mov 0x48(%rsp),%r14
12da8(3): mov %rax,%rdx
12dab(5): mov 0x30(%rsp),%rax
12db0(3): test %rax,%rax
12db3(6): jz 0x2ad(%rip)
12db9(3): mov %rdx,%rcx
12dbc(3): mov %r15,%r8
12dbf(3): mov %rax,%rdx
12dc2(3): mov %r13,%rsi
12dc5(3): mov %r12,%rdi
12dc8(8): mov $0x10,0xc8(%rsp)
12dd0(5): call 0xffff75c0(%rip)
12dd5(5): mov 0x40(%rsp),%rdi
12dda(2): mov (%rdi),%edx
12ddc(2): test %edx,%edx
12dde(2): jz 0xb(%rip)
12de0(3): test %rax,%rax
12de3(6): jz 0x358(%rip)
12de9(5): mov %rax,0x28(%rsp)
12dee(9): test $0x1000000,0x20(%rsp)
12df7(5): mov 0x18(%rsp),%rax
12dfc(4): movzx 0x8(%rax),%eax
12e00(6): jz 0xfffffe58(%rip)
12e06(2): cmp $0xb,%al
12e08(2): jz 0xa(%rip)
12e0a(2): cmp $0x17,%al
12e0c(6): jnz 0xfffffe4c(%rip)
12e12(5): mov 0x28(%rsp),%rax
12e17(3): test %rax,%rax
12e1a(2): jz 0x13(%rip)
12e1c(7): lea 0xffff602d(%rip),%rsi
12e23(2): xor %edx,%edx
12e25(3): mov %rax,%rdi
12e28(5): call 0xffff5188(%rip)
12e2d(5): mov 0x40(%rsp),%rax
12e32(9): mov $0x0,0x28(%rsp)
12e3b(6): mov $0xd,(%rax)
12e41(5): jmp 0xfffffd5f(%rip)
12e46(a): nop 0x0(%rax,%rax,1)
12e50(4): cmp $0x1,%rbx
12e54(6): jz 0x838(%rip)
12e5a(5): mov 0x10(%rsp),%rax
12e5f(3): mov %rbp,%r13
12e62(5): mov %r14,0x48(%rsp)
12e67(7): lea 0x80(%rax),%r12
12e6e(4): lea 0x70(%rax),%rdi
12e72(3): mov %rbp,%rax
12e75(3): mov %rax,%r14
12e78(5): mov $0x2,%ebp
12e7d(3): mov %r12,%rsi
12e80(5): mov %rdi,0x30(%rsp)
12e85(3): mov %r13,%r12
12e88(3): mov %rbx,%r13
12e8b(3): mov %rsi,%rbx
12e8e(2): nop 
12e90(5): mov 0x10(%rsp),%rsi
12e95(3): mov %r12,%rdi
12e98(5): call 0xffff75d8(%rip)
12e9d(5): mov 0x30(%rsp),%rdi
12ea2(3): mov %rax,%r12
12ea5(3): mov %r14,%rdx
12ea8(3): mov %r15,%r8
12eab(3): mov %rax,%rcx
12eae(3): mov %rbx,%rsi
12eb1(8): mov $0x10,0xc8(%rsp)
12eb9(5): call 0xffff74d7(%rip)
12ebe(3): test %r12,%r12
12ec1(3): mov %rax,%r14
12ec4(2): jz 0x4c(%rip)
12ec6(3): test %rax,%rax
12ec9(2): jz 0x47(%rip)
12ecb(4): add $0x1,%rbp
12ecf(3): cmp %r13,%rbp
12ed2(2): jle 0xffffffbe(%rip)
12ed4(5): mov 0x48(%rsp),%r14
12ed9(3): mov %r13,%rbx
12edc(5): mov %rax,0x30(%rsp)
12ee1(3): mov %r12,%r13
12ee4(4): cmp %rbx,(%rsp)
12ee8(6): jz 0x16c(%rip)
12eee(5): mov 0x10(%rsp),%rsi
12ef3(3): mov %r13,%rdi
12ef6(5): call 0xffff757a(%rip)
12efb(3): test %rax,%rax
12efe(3): mov %rax,%rbp
12f01(6): jnz 0xfffffdd6(%rip)
12f07(9): nop 0x0(%rax,%rax,1)
12f10(5): mov 0x40(%rsp),%rax
12f15(6): mov $0xc,(%rax)
12f1b(5): mov 0x28(%rsp),%rdi
12f20(7): lea 0xffff5f29(%rip),%rsi
12f27(2): xor %edx,%edx
12f29(5): call 0xffff5087(%rip)
12f2e(9): mov $0x0,0x28(%rsp)
12f37(5): jmp 0xfffffc69(%rip)
12f3c(4): nop 0x0(%rax)
12f40(8): mov $0x1,(%rsp)
12f48(5): mov 0x20(%rsp),%rdx
12f4d(5): mov 0x18(%rsp),%rdi
12f52(3): mov %r14,%rsi
12f55(5): call 0xfffff37b(%rip)
12f5a(2): cwde 
12f5c(4): add %rax,0x48(%r14)
12f60(6): cmp $0x0,0x28(%rsp)
12f66(6): jz 0xda(%rip)
12f6c(4): mov (%rsp),%rax
12f70(3): or %rbx,%rax
12f73(6): jnz 0xfffffd4d(%rip)
12f79(5): mov 0x28(%rsp),%rdi
12f7e(7): lea 0xffff5ecb(%rip),%rsi
12f85(2): xor %edx,%edx
12f87(5): call 0xffff5029(%rip)
12f8c(5): mov 0x40(%rsp),%rax
12f91(2): mov (%rax),%esi
12f93(2): test %esi,%esi
12f95(2): jnz 0xffffff86(%rip)
12f97(9): mov $0x0,0x28(%rsp)
12fa0(5): jmp 0xfffffe4e(%rip)
12fa5(3): nop (%rax)
12fa8(5): mov 0x20(%rsp),%rdx
12fad(3): mov %rcx,%rsi
12fb0(3): mov %r14,%rdi
12fb3(4): movaps %xmm0,(%rsp)
12fb7(5): call 0xfffffa19(%rip)
12fbc(4): cmp $0xffffffff,%rax
12fc0(3): mov %rax,%rbx
12fc3(5): movdqa (%rsp),%xmm0
12fc8(6): jz 0xa8(%rip)
12fce(4): cmp $0xfffffffe,%rax
12fd2(2): jz 0x1b(%rip)
12fd4(5): mov 0x18(%rsp),%rax
12fd9(4): movzx 0x8(%rax),%eax
12fdd(2): cmp $0x18,%al
12fdf(6): jz 0x121(%rip)
12fe5(2): cmp $0x1,%al
12fe7(6): jz 0x12c(%rip)
12fed(9): test $0x200000,0x20(%rsp)
12ff6(6): jz 0xf3d(%rip)
12ffc(5): mov 0x18(%rsp),%rax
13001(4): mov %rbp,0x48(%r14)
13005(3): movaps %xmm0,(%rax)
13008(4): mov $0x1,0x8(%rax)
1300c(5): mov 0x28(%rsp),%rax
13011(5): jmp 0xfffffdc4(%rip)
13016(a): nop 0x0(%rax,%rax,1)
13020(4): mov 0x28(%rbp),%rdx
13024(7): lea 0xffff4cc5(%rip),%rsi
1302b(3): mov %rbp,%rdi
1302e(5): call 0xffff4f82(%rip)
13033(5): jmp 0xfffffcae(%rip)
13038(8): nop 0x0(%rax,%rax,1)
13040(5): mov 0x40(%rsp),%rax
13045(2): mov (%rax),%ecx
13047(2): test %ecx,%ecx
13049(6): jz 0xffffff4e(%rip)
1304f(5): jmp 0xfffffb41(%rip)
13054(5): mov 0x30(%rsp),%rdx
13059(7): nop 0x0(%rax)
13060(5): mov %rdx,0x28(%rsp)
13065(5): jmp 0xfffffd89(%rip)
1306a(6): nop 0x0(%rax,%rax,1)
13070(5): mov 0x18(%rsp),%rax
13075(4): cmp $0x1,0x8(%rax)
13079(6): jnz 0xb7(%rip)
1307f(5): mov 0x18(%rsp),%rax
13084(3): cmp $0x2c,(%rax)
13087(6): jnz 0xa9(%rip)
1308d(2): xor %ebx,%ebx
1308f(5): mov 0x20(%rsp),%rdx
13094(5): mov 0x18(%rsp),%rsi
13099(3): mov %r14,%rdi
1309c(5): movaps %xmm0,0x30(%rsp)
130a1(5): call 0xfffff92f(%rip)
130a6(4): cmp $0xfffffffe,%rax
130aa(4): mov %rax,(%rsp)
130ae(6): movdqa 0x30(%rsp),%xmm0
130b4(6): jz 0xffffff39(%rip)
130ba(4): mov (%rsp),%rax
130be(4): cmp $0xffffffff,%rax
130c2(2): jz 0x7(%rip)
130c4(3): cmp %rbx,%rax
130c7(2): jl 0x69(%rip)
130c9(5): mov 0x18(%rsp),%rax
130ce(4): cmp $0x18,0x8(%rax)
130d2(2): jnz 0x5e(%rip)
130d4(5): cmp $0xffffffff,(%rsp)
130d9(2): jnz 0x2b(%rip)
130db(2): xor %eax,%eax
130dd(7): cmp $0x7fff,%rbx
130e4(3): setnle %al
130e7(3): test %rax,%rax
130ea(6): jz 0xfffffe5e(%rip)
130f0(5): mov 0x40(%rsp),%rax
130f5(6): mov $0xf,(%rax)
130fb(2): jmp 0x40(%rip)
130fd(3): nop (%rax)
13100(4): mov %rbx,(%rsp)
13104(2): xor %eax,%eax
13106(8): cmp $0x7fff,(%rsp)
1310e(3): setnle %al
13111(2): jmp 0xffffffd6(%rip)
13113(5): mov 0x18(%rsp),%rax
13118(3): cmp $0x2c,(%rax)
1311b(6): jz 0xffffff74(%rip)
13121(9): test $0x200000,0x20(%rsp)
1312a(6): jnz 0xfffffed2(%rip)
13130(5): mov 0x40(%rsp),%rax
13135(6): mov $0xa,(%rax)
1313b(6): cmp $0x0,0x28(%rsp)
13141(6): jnz 0xfffffdda(%rip)
13147(5): jmp 0xfffffa49(%rip)
1314c(4): nop 0x0(%rax)
13150(5): mov 0x18(%rsp),%rax
13155(2): mov (%rax),%ebp
13157(6): test $0x30f,%ebp
1315d(2): jz 0x64(%rip)
1315f(5): mov 0x10(%rsp),%rax
13164(7): movzx 0xb0(%rax),%eax
1316b(2): test $0x10,%al
1316d(2): jnz 0x54(%rip)
1316f(5): mov 0x10(%rsp),%rdi
13174(3): or $0x10,%eax
13177(2): test $0x8,%al
13179(6): mov %al,0xb0(%rdi)
1317f(6): jnz 0xc04(%rip)
13185(a): mov $0x287948901175001088,%rdx
1318f(2): test $0x4,%al
13191(7): mov %rdx,0xb8(%rdi)
13198(a): mov $0x576460745995190270,%rdx
131a2(7): mov %rdx,0xc0(%rdi)
131a9(6): jz 0xb5f(%rip)
131af(4): pxor %xmm0,%xmm0
131b3(5): mov 0x18(%rsp),%rax
131b8(7): movups %xmm0,0xc8(%rdi)
131bf(2): mov (%rax),%ebp
131c1(5): mov 0x10(%rsp),%rax
131c6(4): lea 0x70(%rax),%rbx
131ca(7): lea 0x80(%rax),%r12
131d1(6): lea 0xffffff00(%rbp),%eax
131d7(5): test $0xfffffeff,%eax
131dc(6): jnz 0x66e(%rip)
131e2(6): cmp $0x100,%ebp
131e8(5): mov 0x18(%rsp),%r15
131ed(6): jz 0x635(%rip)
131f3(7): mov $0x5,(%r15)
131fa(3): mov %r15,%r8
131fd(2): xor %ecx,%ecx
131ff(2): xor %edx,%edx
13201(3): mov %r12,%rsi
13204(3): mov %rbx,%rdi
13207(5): call 0xffff7189(%rip)
1320c(7): mov $0xa,(%r15)
13213(3): mov %rax,%rbp
13216(5): mov 0x18(%rsp),%r8
1321b(2): xor %ecx,%ecx
1321d(2): xor %edx,%edx
1321f(3): mov %r12,%rsi
13222(3): mov %rbx,%rdi
13225(5): call 0xffff716b(%rip)
1322a(8): lea 0xc0(%rsp),%r8
13232(3): mov %rbp,%rdx
13235(3): mov %rbx,%rdi
13238(3): mov %rax,%rcx
1323b(3): mov %r12,%rsi
1323e(3): mov %rax,%r13
13241(8): mov $0xa,0xc8(%rsp)
13249(5): call 0xffff7147(%rip)
1324e(3): test %rbp,%rbp
13251(3): mov %rax,%rdi
13254(5): mov %rax,0x28(%rsp)
13259(3): setz %dl
1325c(3): test %r13,%r13
1325f(3): setz %al
13262(2): or %al,%dl
13264(6): jnz 0x394(%rip)
1326a(3): test %rdi,%rdi
1326d(6): jz 0x38b(%rip)
13273(5): mov 0x20(%rsp),%rdx
13278(5): mov 0x18(%rsp),%rdi
1327d(3): mov %r14,%rsi
13280(5): call 0xfffff050(%rip)
13285(2): cwde 
13287(4): add %rax,0x48(%r14)
1328b(5): jmp 0xfffff915(%rip)
13290(5): mov $0x1,%esi
13295(5): mov $0x20,%edi
1329a(c): mov $0x0,0x98(%rsp)
132a6(5): call 0xfffeea8a(%rip)
132ab(5): mov $0x1,%esi
132b0(3): mov %rax,%r12
132b3(5): mov $0x50,%edi
132b8(5): call 0xfffeea78(%rip)
132bd(3): test %r12,%r12
132c0(3): mov %rax,%r13
132c3(3): setz %dl
132c6(3): test %rax,%rax
132c9(3): setz %al
132cc(2): or %al,%dl
132ce(6): jnz 0x7db(%rip)
132d4(5): mov 0x18(%rsp),%r10
132d9(5): mov 0x20(%rsp),%rdx
132de(3): mov %r14,%rsi
132e1(3): mov %r10,%rdi
132e4(5): call 0xffff48dc(%rip)
132e9(3): movsxd %eax,%rbx
132ec(5): movzx 0x8(%r10),%eax
132f1(2): cmp $0x2,%al
132f3(6): jz 0x7a6(%rip)
132f9(2): cmp $0x19,%al
132fb(5): mov $0x0,0x57(%rsp)
13300(6): jz 0x4ca(%rip)
13306(2): cmp $0x15,%al
13308(6): jz 0x50c(%rip)
1330e(8): lea 0xd0(%rsp),%rax
13316(5): mov 0x18(%rsp),%r15
1331b(7): lea 0x4812(%rip),%rbp
13322(9): mov $0x0,0x48(%rsp)
1332b(6): mov $0x1,%r9d
13331(9): mov $0x0,0x30(%rsp)
1333a(5): mov %rax,0x28(%rsp)
1333f(8): lea 0xa0(%rsp),%rax
13347(4): mov %rax,(%rsp)
1334b(8): lea 0x98(%rsp),%rax
13353(5): mov %rax,0x58(%rsp)
13358(8): lea 0xc0(%rsp),%rax
13360(5): mov %rax,0x60(%rsp)
13365(8): lea 0xf0(%rsp),%rax
1336d(5): mov %rax,0x68(%rsp)
13372(5): mov 0x28(%rsp),%rax
13377(5): mov 0x20(%rsp),%r8
1337c(4): and $0x1,%r9d
13380(4): mov (%rsp),%rdi
13384(2): mov %ebx,%ecx
13386(3): mov %r15,%rdx
13389(3): mov %r14,%rsi
1338c(b): mov $0x3,0xa0(%rsp)
13397(8): mov %rax,0xa8(%rsp)
1339f(5): call 0xffffecd1(%rip)
133a4(2): test %eax,%eax
133a6(6): jnz 0x4e5(%rip)
133ac(5): mov 0x20(%rsp),%rdx
133b1(3): mov %r14,%rsi
133b4(3): mov %r15,%rdi
133b7(5): call 0xffff4809(%rip)
133bc(3): movsxd %eax,%rbx
133bf(7): mov 0xa0(%rsp),%eax
133c6(3): lea 0xfffffffe(%rax),%edx
133c9(3): and $0xfd,%edx
133cc(2): jz 0x19(%rip)
133ce(5): movzx 0x8(%r15),%edx
133d3(3): cmp $0x2,%dl
133d6(6): jz 0x49b(%rip)
133dc(3): cmp $0x16,%dl
133df(6): jz 0x4b8(%rip)
133e5(3): cmp $0x4,%eax
133e8(6): jnbe 0x9a2(%rip)
133ee(5): movsxd 0x0(%rbp,%rax,4),%rax
133f3(3): add %rbp,%rax
133f6(2): jmp %rax
133f8(5): mov 0x40(%rsp),%rbx
133fd(3): cmp $0x23,%cl
13400(4): mov 0x78(%rdi),%rsi
13404(4): setz %r8b
13408(7): lea 0x3cd2(%rip),%rcx
1340f(7): lea 0x4281(%rip),%rdx
13416(4): movzx %r8b,%r8d
1341a(3): mov %rbx,%r9
1341d(5): mov 0x10(%rsp),%rdi
13422(5): call 0xffffa2be(%rip)
13427(2): mov (%rbx),%edi
13429(5): mov %rax,0x28(%rsp)
1342e(2): test %edi,%edi
13430(6): jz 0xfffff7fc(%rip)
13436(3): test %rax,%rax
13439(6): jnz 0xfffff7f3(%rip)
1343f(5): jmp 0xfffff751(%rip)
13444(4): nop 0x0(%rax)
13448(5): mov 0x40(%rsp),%rbx
1344d(3): cmp $0x21,%cl
13450(4): mov 0x78(%rdi),%rsi
13454(4): setz %r8b
13458(7): lea 0x2c47(%rip),%rcx
1345f(7): lea 0x4225(%rip),%rdx
13466(4): movzx %r8b,%r8d
1346a(3): mov %rbx,%r9
1346d(2): jmp 0xffffffb0(%rip)
1346f(5): mov 0x18(%rsp),%rax
13474(5): mov 0x10(%rsp),%rdi
13479(3): mov (%rax),%rcx
1347c(5): mov $0x1,%eax
13481(2): shl/sal %cl,%eax
13483(2): cwde 
13485(7): test %rax,0xa8(%rdi)
1348c(6): jz 0x632(%rip)
13492(5): mov 0x10(%rsp),%rbx
13497(5): mov 0x18(%rsp),%r8
1349c(2): xor %ecx,%ecx
1349e(2): xor %edx,%edx
134a0(7): or %rax,0xa0(%rbx)
134a7(7): lea 0x80(%rbx),%rsi
134ae(4): lea 0x70(%rbx),%rdi
134b2(5): call 0xffff6ede(%rip)
134b7(3): test %rax,%rax
134ba(5): mov %rax,0x28(%rsp)
134bf(6): jz 0x139(%rip)
134c5(8): add $0x1,0x98(%rbx)
134cd(7): or $0x2,0xb0(%rbx)
134d4(5): jmp 0xfffff758(%rip)
134d9(5): mov 0x10(%rsp),%rbx
134de(5): mov 0x18(%rsp),%r8
134e3(2): xor %ecx,%ecx
134e5(2): xor %edx,%edx
134e7(7): lea 0x80(%rbx),%rsi
134ee(4): lea 0x70(%rbx),%rdi
134f2(5): call 0xffff6e9e(%rip)
134f7(3): test %rax,%rax
134fa(5): mov %rax,0x28(%rsp)
134ff(6): jz 0xf9(%rip)
13505(7): cmp $0x1,0xb4(%rbx)
1350c(6): jle 0xfffff720(%rip)
13512(7): or $0x2,0xb0(%rbx)
13519(5): jmp 0xfffff713(%rip)
1351e(5): mov 0x10(%rsp),%rax
13523(5): mov 0x18(%rsp),%r8
13528(2): xor %ecx,%ecx
1352a(2): xor %edx,%edx
1352c(4): lea 0x70(%rax),%rbx
13530(7): lea 0x80(%rax),%rbp
13537(3): mov %rbx,%rdi
1353a(3): mov %rbp,%rsi
1353d(5): call 0xffff6e53(%rip)
13542(3): test %rax,%rax
13545(5): mov %rax,0x28(%rsp)
1354a(6): jz 0xae(%rip)
13550(5): mov 0x10(%rsp),%rax
13555(8): lea 0xc0(%rsp),%r12
1355d(5): mov 0x28(%rsp),%r15
13562(7): cmp $0x1,0xb4(%rax)
13569(6): jle 0xfffff6c3(%rip)
1356f(4): mov 0x48(%r14),%rax
13573(4): cmp %rax,0x68(%r14)
13577(6): jle 0x30a(%rip)
1357d(4): cmp 0x30(%r14),%rax
13581(6): jz 0x300(%rip)
13587(4): mov 0x10(%r14),%rdx
1358b(4): cmp $0xff,0x0(%rdx,%rax,4)
1358f(6): jnz 0x2f2(%rip)
13595(5): mov 0x18(%rsp),%r13
1359a(5): mov 0x20(%rsp),%rdx
1359f(3): mov %r14,%rsi
135a2(3): mov %r13,%rdi
135a5(5): call 0xffffed2b(%rip)
135aa(2): cwde 
135ac(4): add %rax,0x48(%r14)
135b0(3): mov %r13,%r8
135b3(2): xor %ecx,%ecx
135b5(2): xor %edx,%edx
135b7(3): mov %rbp,%rsi
135ba(3): mov %rbx,%rdi
135bd(5): call 0xffff6dd3(%rip)
135c2(3): mov %r15,%rdx
135c5(3): mov %rax,%r13
135c8(3): mov %r12,%r8
135cb(3): mov %rax,%rcx
135ce(3): mov %rbp,%rsi
135d1(3): mov %rbx,%rdi
135d4(8): mov $0x10,0xc8(%rsp)
135dc(5): call 0xffff6db4(%rip)
135e1(3): test %r13,%r13
135e4(3): mov %rax,%r15
135e7(3): setz %dl
135ea(3): test %rax,%rax
135ed(3): setz %al
135f0(2): or %al,%dl
135f2(6): jz 0xffffff7d(%rip)
135f8(5): mov 0x40(%rsp),%rax
135fd(6): mov $0xc,(%rax)
13603(5): jmp 0xfffff58d(%rip)
13608(9): test $0x20000,0x20(%rsp)
13611(6): jnz 0xfffff5ea(%rip)
13617(5): mov 0x40(%rsp),%rax
1361c(9): mov $0x0,0x28(%rsp)
13625(6): mov $0x10,(%rax)
1362b(5): jmp 0xfffff575(%rip)
13630(4): cmp $0x8,%rbx
13634(2): jbe 0x67(%rip)
13636(5): mov 0x10(%rsp),%rdi
1363b(8): lea 0xc0(%rsp),%r8
13643(2): xor %ecx,%ecx
13645(3): mov %rax,%rdx
13648(8): mov $0x11,0xc8(%rsp)
13650(7): lea 0x80(%rdi),%rsi
13657(4): add $0x70,%rdi
1365b(5): call 0xffff6d35(%rip)
13660(3): test %rax,%rax
13663(5): mov %rax,0x28(%rsp)
13668(2): jz 0xffffff90(%rip)
1366a(4): mov %rbx,0x28(%rax)
1366e(5): jmp 0xfffff5be(%rip)
13673(5): mov 0x40(%rsp),%rax
13678(9): mov $0x0,0x28(%rsp)
13681(6): mov $0x5,(%rax)
13687(5): jmp 0xfffff519(%rip)
1368c(5): mov 0x28(%rsp),%r13
13691(5): mov %r13,0x30(%rsp)
13696(5): jmp 0xfffff84e(%rip)
1369b(5): mov 0x10(%rsp),%rsi
136a0(5): mov $0x1,%edx
136a5(2): mov %ebx,%ecx
136a7(2): shl/sal %cl,%edx
136a9(3): movsxd %edx,%rdx
136ac(7): or %rdx,0xa8(%rsi)
136b3(2): jmp 0xffffff83(%rip)
136b5(8): mov 0xa8(%rsp),%rsi
136bd(3): mov %r12,%rdi
136c0(5): call 0xffff97c0(%rip)
136c5(5): mov 0x40(%rsp),%rdx
136ca(2): test %eax,%eax
136cc(2): mov %eax,(%rdx)
136ce(2): jnz 0x3a(%rip)
136d0(5): movzx 0x8(%r15),%eax
136d5(2): cmp $0x2,%al
136d7(6): jz 0x19a(%rip)
136dd(2): cmp $0x15,%al
136df(6): jz 0x413(%rip)
136e5(3): xor %r9d,%r9d
136e8(5): jmp 0xfffffc8a(%rip)
136ed(8): mov 0xa8(%rsp),%rsi
136f5(3): mov %r12,%rdi
136f8(5): call 0xffff9788(%rip)
136fd(5): mov 0x40(%rsp),%rdx
13702(2): test %eax,%eax
13704(2): mov %eax,(%rdx)
13706(2): jz 0xffffffca(%rip)
13708(3): mov %r12,%rdi
1370b(5): call 0xfffee3f5(%rip)
13710(3): mov %r13,%rdi
13713(5): call 0xffff56dd(%rip)
13718(5): mov 0x40(%rsp),%rax
1371d(3): mov (%rax),%r8d
13720(3): test %r8d,%r8d
13723(6): jnz 0xfffff46d(%rip)
13729(9): mov $0x0,0x28(%rsp)
13732(5): jmp 0xfffff4fa(%rip)
13737(4): mov 0x28(%r13),%rdx
1373b(5): cmp 0x30(%rsp),%rdx
13740(4): mov 0x0(%r13),%rax
13744(6): jz 0x4fa(%rip)
1374a(4): lea 0x1(%rdx),%rcx
1374e(4): mov %rcx,0x28(%r13)
13752(7): mov 0xa8(%rsp),%ecx
13759(3): mov %ecx,0x0(%rax,%rdx,4)
1375c(5): jmp 0xffffff74(%rip)
13761(8): movzx 0xa8(%rsp),%edx
13769(5): mov $0x1,%esi
1376e(3): mov %rdx,%rax
13771(3): and $0x3f,%edx
13774(4): shr $0x3,%rax
13778(2): mov %edx,%ecx
1377a(3): and $0x18,%eax
1377d(3): shl/sal %cl,%rsi
13780(4): or %rsi,0x0(%r12,%rax,1)
13784(5): jmp 0xffffff4c(%rip)
13789(4): sub $0x8,%rsp
1378d(4): mov 0x78(%r14),%rdi
13791(4): lea 0x18(%r13),%rdx
13795(4): push 0x28(%rsp)
13799(8): mov 0xb8(%rsp),%r9
137a1(4): lea 0x48(%r13),%rcx
137a5(5): mov 0x68(%rsp),%r8
137aa(3): mov %r12,%rsi
137ad(5): call 0xffff9723(%rip)
137b2(5): mov 0x50(%rsp),%rdx
137b7(2): test %eax,%eax
137b9(2): mov %eax,(%rdx)
137bb(2): pop %r9
137bd(2): pop %r10
137bf(6): jz 0xffffff11(%rip)
137c5(5): jmp 0xffffff43(%rip)
137ca(5): or $0x1,0x20(%r13)
137cf(9): test $0x100,0x20(%rsp)
137d8(2): jz 0xa(%rip)
137da(8): or $0x400,(%r12)
137e2(4): add %rbx,0x48(%r14)
137e6(5): mov 0x18(%rsp),%r11
137eb(3): mov %r14,%rsi
137ee(5): mov 0x20(%rsp),%rdx
137f3(3): mov %r11,%rdi
137f6(5): call 0xffff43ca(%rip)
137fb(2): mov %eax,%ebx
137fd(5): movzx 0x8(%r11),%eax
13802(2): cmp $0x2,%al
13804(6): jz 0x295(%rip)
1380a(5): mov $0x1,0x57(%rsp)
1380f(5): jmp 0xfffffaf7(%rip)
13814(5): mov 0x18(%rsp),%rax
13819(4): mov $0x1,0x8(%rax)
1381d(5): jmp 0xfffffaf1(%rip)
13822(7): mov $0x6,(%r15)
13829(3): mov %r15,%r8
1382c(2): xor %ecx,%ecx
1382e(2): xor %edx,%edx
13830(3): mov %r12,%rsi
13833(3): mov %rbx,%rdi
13836(5): call 0xffff6b5a(%rip)
1383b(7): mov $0x9,(%r15)
13842(3): mov %rax,%rbp
13845(5): jmp 0xfffff9d1(%rip)
1384a(5): mov 0x18(%rsp),%r8
1384f(2): xor %ecx,%ecx
13851(2): xor %edx,%edx
13853(3): mov %r12,%rsi
13856(3): mov %rbx,%rdi
13859(5): call 0xffff6b37(%rip)
1385e(3): test %rax,%rax
13861(5): mov %rax,0x28(%rsp)
13866(6): jnz 0xfffffa0d(%rip)
1386c(5): jmp 0xfffffd8c(%rip)
13871(5): mov 0x40(%rsp),%rax
13876(6): mov $0x7,(%rax)
1387c(5): jmp 0xfffffe8c(%rip)
13881(5): mov %r15,0x28(%rsp)
13886(5): jmp 0xfffff3a6(%rip)
1388b(5): mov 0x40(%rsp),%rdx
13890(2): mov %eax,(%rdx)
13892(5): jmp 0xfffffe76(%rip)
13897(3): movsxd %ebx,%rax
1389a(5): mov 0x20(%rsp),%r11
1389f(4): add %rax,0x48(%r14)
138a3(5): mov 0x60(%rsp),%r10
138a8(3): mov %r11,%rdx
138ab(3): mov %r10,%rdi
138ae(5): call 0xffff4312(%rip)
138b3(8): movzx 0xc8(%rsp),%edx
138bb(3): cmp $0x2,%dl
138be(2): jz 0xffffffb3(%rip)
138c0(3): cmp $0x15,%dl
138c3(6): jz 0x214(%rip)
138c9(5): mov 0x68(%rsp),%rdx
138ce(8): lea 0xb0(%rsp),%rdi
138d6(6): mov $0x1,%r9d
138dc(3): mov %r11,%r8
138df(2): mov %eax,%ecx
138e1(b): mov $0x3,0xb0(%rsp)
138ec(8): mov %rdx,0xb8(%rsp)
138f4(3): mov %r10,%rdx
138f7(5): call 0xffffe779(%rip)
138fc(2): test %eax,%eax
138fe(2): jnz 0xffffff8d(%rip)
13900(5): mov 0x20(%rsp),%rdx
13905(3): mov %r14,%rsi
13908(3): mov %r15,%rdi
1390b(5): call 0xffff42b5(%rip)
13910(3): movsxd %eax,%rbx
13913(5): mov 0x10(%rsp),%rax
13918(7): mov 0xa0(%rsp),%esi
1391f(6): mov $0x0,%r9d
13925(7): cmp $0x1,0xb4(%rax)
1392c(3): lea 0xfffffffe(%rsi),%eax
1392f(4): cmovnl %r13,%r9
13933(3): and $0xfd,%eax
13936(6): jz 0x473(%rip)
1393c(8): mov 0xb0(%rsp),%r10d
13944(4): lea 0xfffffffe(%r10),%eax
13948(3): and $0xfd,%eax
1394b(6): jz 0x45e(%rip)
13951(3): cmp $0x3,%esi
13954(4): setz %r11b
13958(6): jz 0x495(%rip)
1395e(4): cmp $0x3,%r10d
13962(6): jz 0x457(%rip)
13968(2): test %esi,%esi
1396a(6): jnz 0x36f(%rip)
13970(8): movzx 0xa8(%rsp),%edx
13978(3): test %r10d,%r10d
1397b(6): jnz 0x342(%rip)
13981(9): movzx 0xb8(%rsp),%r8d
1398a(2): test %esi,%esi
1398c(6): jz 0x2ea(%rip)
13992(3): test %r11b,%r11b
13995(6): jnz 0x2e1(%rip)
1399b(3): test %r9,%r9
1399e(7): mov 0xa8(%rsp),%edx
139a5(2): jz 0x1f(%rip)
139a7(3): mov %r8d,%edi
139aa(4): mov %edx,0x78(%rsp)
139ae(5): mov %r9,0x70(%rsp)
139b3(5): call 0xfffee48d(%rip)
139b8(5): mov 0x70(%rsp),%r9
139bd(4): mov 0x78(%rsp),%edx
139c1(3): mov %eax,%r8d
139c4(3): cmp $0xff,%edx
139c7(6): jz 0x416(%rip)
139cd(4): cmp $0xff,%r8d
139d1(6): jz 0x40c(%rip)
139d7(9): test $0x10000,0x20(%rsp)
139e0(2): jz 0xb(%rip)
139e2(3): cmp %edx,%r8d
139e5(6): jb 0x3c4(%rip)
139eb(3): test %r9,%r9
139ee(2): jz 0x28(%rip)
139f0(4): mov 0x40(%r9),%rax
139f4(5): cmp 0x48(%rsp),%rax
139f9(4): mov 0x8(%r9),%rcx
139fd(6): jz 0x416(%rip)
13a03(3): mov %edx,0x0(%rcx,%rax,4)
13a06(4): mov 0x10(%r9),%rcx
13a0a(4): lea 0x1(%rax),%rsi
13a0e(4): mov %rsi,0x40(%r9)
13a12(4): mov %r8d,0x0(%rcx,%rax,4)
13a16(2): xor %eax,%eax
13a18(5): mov $0x1,%edi
13a1d(2): cmp %eax,%edx
13a1f(2): mov %eax,%ecx
13a21(2): jnbe 0x18(%rip)
13a23(3): cmp %eax,%r8d
13a26(2): jb 0x13(%rip)
13a28(3): mov %rax,%rsi
13a2b(3): mov %rdi,%r11
13a2e(4): sar $0x6,%rsi
13a32(3): shl/sal %cl,%r11
13a35(4): or %r11,0x0(%r12,%rsi,8)
13a39(4): add $0x1,%rax
13a3d(6): cmp $0x100,%rax
13a43(2): jnz 0xffffffda(%rip)
13a45(5): mov 0x40(%rsp),%rax
13a4a(6): mov $0x0,(%rax)
13a50(5): jmp 0xfffffc80(%rip)
13a55(5): mov 0x18(%rsp),%rbx
13a5a(3): mov %rax,%rdx
13a5d(3): mov %r14,%rsi
13a60(4): mov %r8,(%rsp)
13a64(3): mov %rax,%r15
13a67(3): mov %rbx,%rdi
13a6a(5): call 0xffffe866(%rip)
13a6f(2): cwde 
13a71(4): add %rax,0x48(%r14)
13a75(5): mov 0x40(%rsp),%r9
13a7a(4): mov (%rsp),%r8
13a7e(3): mov %r15,%rcx
13a81(3): mov %rbx,%rdx
13a84(3): mov %rbp,%rsi
13a87(3): mov %r14,%rdi
13a8a(5): call 0xfffff006(%rip)
13a8f(5): mov %rax,0x28(%rsp)
13a94(5): jmp 0xfffff10c(%rip)
13a99(5): mov 0x40(%rsp),%rax
13a9e(6): mov $0x2,(%rax)
13aa4(5): jmp 0xfffffc64(%rip)
13aa9(3): mov %r12,%rdi
13aac(5): call 0xfffee054(%rip)
13ab1(3): mov %r13,%rdi
13ab4(5): call 0xfffee04c(%rip)
13ab9(5): jmp 0xfffffb3f(%rip)
13abe(5): mov 0x40(%rsp),%rax
13ac3(9): mov $0x0,0x28(%rsp)
13acc(6): mov $0x6,(%rax)
13ad2(5): jmp 0xfffff0ce(%rip)
13ad7(2): mov %ebx,%eax
13ad9(2): neg %eax
13adb(2): cwde 
13add(4): add %rax,0x48(%r14)
13ae1(5): mov $0x1,0x8(%r15)
13ae6(7): mov 0xa0(%rsp),%eax
13aed(5): jmp 0xfffff8f8(%rip)
13af2(4): add %rbx,0x48(%r14)
13af6(5): cmp $0x0,0x57(%rsp)
13afb(2): jz 0x16(%rip)
13afd(5): lea 0x20(%r12),%rdx
13b02(3): mov %r12,%rax
13b05(3): not (%rax)
13b08(4): add $0x8,%rax
13b0c(3): cmp %rax,%rdx
13b0f(2): jnz 0xfffffff6(%rip)
13b11(5): mov 0x10(%rsp),%rax
13b16(6): mov 0xb4(%rax),%edx
13b1c(3): cmp $0x1,%edx
13b1f(2): jle 0x1a(%rip)
13b21(4): mov 0x78(%rax),%rcx
13b25(2): xor %eax,%eax
13b27(4): mov 0x0(%rcx,%rax,1),%rsi
13b2b(4): and %rsi,0x0(%r12,%rax,1)
13b2f(4): add $0x8,%rax
13b33(4): cmp $0x20,%rax
13b37(2): jnz 0xfffffff0(%rip)
13b39(5): cmp $0x0,0x28(%r13)
13b3e(6): jnz 0x8a(%rip)
13b44(5): cmp $0x0,0x30(%r13)
13b49(2): jnz 0x7f(%rip)
13b4b(5): cmp $0x0,0x38(%r13)
13b50(2): jnz 0x78(%rip)
13b52(5): cmp $0x0,0x40(%r13)
13b57(2): jnz 0x71(%rip)
13b59(3): sub $0x1,%edx
13b5c(2): jle 0x10(%rip)
13b5e(5): cmp $0x0,0x48(%r13)
13b63(2): jnz 0x65(%rip)
13b65(5): test $0x1,0x20(%r13)
13b6a(2): jnz 0x5e(%rip)
13b6c(3): mov %r13,%rdi
13b6f(5): call 0xffff5281(%rip)
13b74(5): mov 0x10(%rsp),%rax
13b79(8): lea 0xb0(%rsp),%r8
13b81(2): xor %ecx,%ecx
13b83(2): xor %edx,%edx
13b85(8): mov $0x3,0xb8(%rsp)
13b8d(8): mov %r12,0xb0(%rsp)
13b95(7): lea 0x80(%rax),%rsi
13b9c(4): lea 0x70(%rax),%rdi
13ba0(5): call 0xffff67f0(%rip)
13ba5(3): test %rax,%rax
13ba8(5): mov %rax,0x28(%rsp)
13bad(6): jnz 0xfffff07f(%rip)
13bb3(5): mov 0x40(%rsp),%rax
13bb8(6): mov $0xc,(%rax)
13bbe(5): jmp 0xfffffb4a(%rip)
13bc3(5): nop 0x0(%rax,%rax,1)
13bc8(5): mov 0x10(%rsp),%rax
13bcd(8): lea 0xb0(%rsp),%r15
13bd5(2): xor %edx,%edx
13bd7(2): xor %ecx,%ecx
13bd9(3): mov %r15,%r8
13bdc(7): or $0x2,0xb0(%rax)
13be3(4): lea 0x70(%rax),%rbx
13be7(7): lea 0x80(%rax),%rbp
13bee(8): mov $0x6,0xb8(%rsp)
13bf6(8): mov %r13,0xb0(%rsp)
13bfe(3): mov %rbx,%rdi
13c01(3): mov %rbp,%rsi
13c04(5): call 0xffff678c(%rip)
13c09(3): mov %rax,%rdi
13c0c(5): mov %rax,0x28(%rsp)
13c11(5): lea 0x20(%r12),%rdx
13c16(3): test %rdi,%rdi
13c19(3): mov %r12,%rax
13c1c(2): jz 0xffffff97(%rip)
13c1e(4): cmp $0x0,(%rax)
13c22(6): jnz 0x2ab(%rip)
13c28(4): add $0x8,%rax
13c2c(3): cmp %rax,%rdx
13c2f(2): jnz 0xffffffef(%rip)
13c31(3): mov %r12,%rdi
13c34(5): call 0xfffedecc(%rip)
13c39(5): jmp 0xffffeff3(%rip)
13c3e(5): mov 0x30(%rsp),%rdx
13c43(5): lea 0x1(%rdx,%rdx,1),%rdi
13c48(8): lea 0x0(,%rdi,4),%rsi
13c50(5): mov %rdi,0x30(%rsp)
13c55(3): mov %rax,%rdi
13c58(5): call 0xfffee1a8(%rip)
13c5d(3): test %rax,%rax
13c60(6): jz 0xffffff53(%rip)
13c66(4): mov %rax,0x0(%r13)
13c6a(4): mov 0x28(%r13),%rdx
13c6e(5): jmp 0xfffffadc(%rip)
13c73(3): xor %r8d,%r8d
13c76(3): test %r9,%r9
13c79(2): jz 0x7b(%rip)
13c7b(2): mov %edx,%edi
13c7d(5): mov %r8d,0x78(%rsp)
13c82(5): mov %r9,0x70(%rsp)
13c87(5): call 0xfffee1b9(%rip)
13c8c(2): mov %eax,%edx
13c8e(7): mov 0xb0(%rsp),%eax
13c95(5): mov 0x70(%rsp),%r9
13c9a(5): mov 0x78(%rsp),%r8d
13c9f(3): cmp $0x3,%eax
13ca2(6): jz 0xfffffd05(%rip)
13ca8(2): test %eax,%eax
13caa(6): jz 0xfffffcfd(%rip)
13cb0(8): mov 0xb8(%rsp),%r8d
13cb8(5): jmp 0xfffffd0c(%rip)
13cbd(4): cmp $0x3,%r10d
13cc1(6): jz 0x291(%rip)
13cc7(2): test %esi,%esi
13cc9(2): jz 0xffffffaa(%rip)
13ccb(3): test %r11b,%r11b
13cce(2): jnz 0xffffffa5(%rip)
13cd0(7): mov 0xa8(%rsp),%edx
13cd7(2): jmp 0xffffffd9(%rip)
13cd9(2): xor %edx,%edx
13cdb(3): cmp $0x3,%esi
13cde(6): jnz 0xfffffc9a(%rip)
13ce4(8): mov 0xa8(%rsp),%rax
13cec(3): movzx (%rax),%edx
13cef(5): jmp 0xfffffc89(%rip)
13cf4(3): test %r10d,%r10d
13cf7(6): jz 0xfffffce0(%rip)
13cfd(4): cmp $0x3,%r10d
13d01(2): jnz 0xffffffaf(%rip)
13d03(5): jmp 0xfffffcd4(%rip)
13d08(5): mov $0x80,%ebx
13d0d(6): mov $0x2,%r12d
13d13(5): call 0xfffee23d(%rip)
13d18(3): movsxd %ebx,%rdx
13d1b(3): movsxd %r12d,%r9
13d1e(6): mov $0x1,%r8d
13d24(3): add %rdx,%rdx
13d27(3): add (%rax),%rdx
13d2a(5): mov 0x10(%rsp),%rax
13d2f(4): lea 0x0(%rax,%r9,8),%rdi
13d33(2): xor %eax,%eax
13d35(2): jmp 0x1d(%rip)
13d37(9): nop 0x0(%rax,%rax,1)
13d40(3): lea 0x0(%rbx,%rax,1),%esi
13d43(3): cmp $0x5f,%esi
13d46(2): jz 0x14(%rip)
13d48(4): add $0x1,%rax
13d4c(4): cmp $0x40,%rax
13d50(2): jz 0x19(%rip)
13d52(4): test $0x8,0x0(%rdx,%rax,2)
13d56(2): mov %eax,%ecx
13d58(2): jz 0xffffffe8(%rip)
13d5a(3): mov %r8,%rsi
13d5d(3): shl/sal %cl,%rsi
13d60(7): or %rsi,0xb8(%rdi)
13d67(2): jmp 0xffffffe1(%rip)
13d69(4): add $0x1,%r9
13d6d(3): add $0x40,%ebx
13d70(4): sub $0xffffff80,%rdx
13d74(4): add $0x8,%rdi
13d78(4): cmp $0x3,%r9d
13d7c(2): jle 0xffffffb7(%rip)
13d7e(5): jmp 0xfffff443(%rip)
13d83(2): xor %ebx,%ebx
13d85(3): xor %r12d,%r12d
13d88(2): jmp 0xffffff8b(%rip)
13d8a(7): lea 0x3e7f(%rip),%rcx
13d91(7): lea 0x3890(%rip),%rsi
13d98(7): lea 0x38d8(%rip),%rdi
13d9f(5): mov $0xced,%edx
13da4(5): call 0xfffedeec(%rip)
13da9(5): mov 0x40(%rsp),%rax
13dae(6): mov $0xb,(%rax)
13db4(5): jmp 0xfffff954(%rip)
13db9(8): mov 0xb8(%rsp),%rdi
13dc1(2): xor %eax,%eax
13dc3(4): or $0xffffffff,%rcx
13dc7(2): REPNZ scasb rdi(%es,10),%al
13dc9(3): mov %rcx,%rax
13dcc(3): not %rax
13dcf(4): sub $0x1,%rax
13dd3(4): cmp $0x1,%rax
13dd7(6): jbe 0xfffffb91(%rip)
13ddd(5): mov 0x40(%rsp),%rax
13de2(6): mov $0x3,(%rax)
13de8(5): jmp 0xfffff920(%rip)
13ded(8): mov 0xa8(%rsp),%rdi
13df5(2): xor %eax,%eax
13df7(4): or $0xffffffff,%rcx
13dfb(2): REPNZ scasb rdi(%es,10),%al
13dfd(3): mov %rcx,%rax
13e00(3): not %rax
13e03(4): sub $0x1,%rax
13e07(4): cmp $0x1,%rax
13e0b(6): jbe 0xfffffb53(%rip)
13e11(2): jmp 0xffffffcc(%rip)
13e13(5): mov 0x48(%rsp),%rax
13e18(3): mov %rcx,%rdi
13e1b(8): mov %r8d,0x8c(%rsp)
13e23(7): mov %edx,0x88(%rsp)
13e2a(5): mov %r9,0x70(%rsp)
13e2f(3): add %rax,%rax
13e32(4): add $0x1,%rax
13e36(8): lea 0x0(,%rax,4),%r10
13e3e(5): mov %rax,0x48(%rsp)
13e43(3): mov %r10,%rsi
13e46(8): mov %r10,0x80(%rsp)
13e4e(5): call 0xfffedfb2(%rip)
13e53(5): mov 0x70(%rsp),%r9
13e58(8): mov 0x80(%rsp),%r10
13e60(5): mov %rax,0x78(%rsp)
13e65(4): mov 0x10(%r9),%rdi
13e69(3): mov %r10,%rsi
13e6c(5): call 0xfffedf94(%rip)
13e71(5): mov 0x78(%rsp),%rcx
13e76(3): test %rcx,%rcx
13e79(2): jz 0x2c(%rip)
13e7b(3): test %rax,%rax
13e7e(5): mov 0x70(%rsp),%r9
13e83(7): mov 0x88(%rsp),%edx
13e8a(8): mov 0x8c(%rsp),%r8d
13e92(2): jz 0x13(%rip)
13e94(4): mov %rax,0x10(%r9)
13e98(4): mov %rcx,0x8(%r9)
13e9c(4): mov 0x40(%r9),%rax
13ea0(5): jmp 0xfffffb63(%rip)
13ea5(3): mov %rcx,%rdi
13ea8(4): mov %rax,(%rsp)
13eac(5): call 0xfffedc54(%rip)
13eb1(4): mov (%rsp),%rax
13eb5(3): mov %rax,%rdi
13eb8(5): call 0xfffedc48(%rip)
13ebd(5): mov 0x40(%rsp),%rax
13ec2(6): mov $0xc,(%rax)
13ec8(5): jmp 0xfffff840(%rip)
13ecd(2): xor %ecx,%ecx
13ecf(2): xor %edx,%edx
13ed1(3): mov %r15,%r8
13ed4(3): mov %rbp,%rsi
13ed7(3): mov %rbx,%rdi
13eda(8): mov $0x3,0xb8(%rsp)
13ee2(8): mov %r12,0xb0(%rsp)
13eea(5): call 0xffff64a6(%rip)
13eef(3): test %rax,%rax
13ef2(6): jz 0xfffffcc1(%rip)
13ef8(5): mov 0x28(%rsp),%rcx
13efd(8): lea 0xc0(%rsp),%r8
13f05(3): mov %rax,%rdx
13f08(3): mov %rbp,%rsi
13f0b(3): mov %rbx,%rdi
13f0e(8): mov $0xa,0xc8(%rsp)
13f16(5): call 0xffff647a(%rip)
13f1b(3): test %rax,%rax
13f1e(5): mov %rax,0x28(%rsp)
13f23(6): jnz 0xffffed09(%rip)
13f29(5): jmp 0xfffffc8a(%rip)
13f2e(5): call 0xfffedcf2(%rip)
13f33(5): mov 0x18(%rsp),%rax
13f38(4): cmp $0x2,0x8(%rax)
13f3c(6): jnz 0xfffff1f4(%rip)
13f42(5): mov 0x40(%rsp),%rax
13f47(6): mov $0x9,(%rax)
13f4d(5): jmp 0xfffff1ee(%rip)
13f52(8): mov 0xb8(%rsp),%rax
13f5a(4): movzx (%rax),%r8d
13f5e(5): jmp 0xfffffa2c(%rip)

"parse_branch" :
13f70(2): push %r15
13f72(2): push %r14
13f74(3): mov %rcx,%r15
13f77(2): push %r13
13f79(2): push %r12
13f7b(3): mov %rsi,%r13
13f7e(1): push %rbp
13f7f(1): push %rbx
13f80(3): mov %r9,%rbx
13f83(3): mov %rdx,%rbp
13f86(3): mov %r8,%r12
13f89(4): sub $0x48,%rsp
13f8d(9): mov $0x28,%rax
13f96(5): mov %rax,0x38(%rsp)
13f9b(2): xor %eax,%eax
13f9d(3): mov (%rsi),%rax
13fa0(4): mov %rdi,(%rsp)
13fa4(5): mov %rax,0x10(%rsp)
13fa9(5): call 0xffffeae7(%rip)
13fae(2): mov (%rbx),%edx
13fb0(3): mov %rax,%r14
13fb3(2): test %edx,%edx
13fb5(2): jz 0xb(%rip)
13fb7(3): test %rax,%rax
13fba(6): jz 0x100(%rip)
13fc0(5): lea 0x20(%rsp),%rax
13fc5(5): mov %rax,0x18(%rsp)
13fca(6): nop 0x0(%rax,%rax,1)
13fd0(4): movzx 0x8(%rbp),%eax
13fd4(2): mov %eax,%edx
13fd6(3): and $0xf7,%edx
13fd9(3): cmp $0x2,%dl
13fdc(6): jz 0x94(%rip)
13fe2(2): cmp $0x9,%al
13fe4(2): jnz 0xb(%rip)
13fe6(3): test %r12,%r12
13fe9(6): jnz 0x87(%rip)
13fef(4): mov (%rsp),%rdi
13ff3(3): mov %rbx,%r9
13ff6(3): mov %r12,%r8
13ff9(3): mov %r15,%rcx
13ffc(3): mov %rbp,%rdx
13fff(3): mov %r13,%rsi
14002(5): call 0xffffea8e(%rip)
14007(3): mov %rax,%r9
1400a(2): mov (%rbx),%eax
1400c(2): test %eax,%eax
1400e(2): jz 0xb(%rip)
14010(3): test %r9,%r9
14013(6): jz 0x91(%rip)
14019(3): test %r14,%r14
1401c(2): jz 0x7c(%rip)
1401e(3): test %r9,%r9
14021(2): jz 0x77(%rip)
14023(5): mov 0x10(%rsp),%rax
14028(5): mov 0x18(%rsp),%r8
1402d(3): mov %r9,%rcx
14030(3): mov %r14,%rdx
14033(5): mov %r9,0x8(%rsp)
14038(5): mov $0x10,0x28(%rsp)
1403d(7): lea 0x80(%rax),%rsi
14044(4): lea 0x70(%rax),%rdi
14048(5): call 0xffff6348(%rip)
1404d(3): test %rax,%rax
14050(5): mov 0x8(%rsp),%r9
14055(2): jz 0x6b(%rip)
14057(3): mov %rax,%r14
1405a(4): movzx 0x8(%rbp),%eax
1405e(2): mov %eax,%edx
14060(3): and $0xf7,%edx
14063(3): cmp $0x2,%dl
14066(6): jnz 0xffffff7c(%rip)
1406c(4): nop 0x0(%rax)
14070(5): mov 0x38(%rsp),%rcx
14075(9): xor $0x28,%rcx
1407e(3): mov %r14,%rax
14081(2): jnz 0x6c(%rip)
14083(4): add $0x48,%rsp
14087(1): pop %rbx
14088(1): pop %rbp
14089(2): pop %r12
1408b(2): pop %r13
1408d(2): pop %r14
1408f(2): pop %r15
14091(1): ret near (%rsp)
14092(6): nop 0x0(%rax,%rax,1)
14098(3): test %r14,%r14
1409b(4): cmove %r9,%r14
1409f(5): jmp 0xffffff31(%rip)
140a4(3): test %r14,%r14
140a7(2): jz 0x13(%rip)
140a9(7): lea 0xffff4da0(%rip),%rsi
140b0(2): xor %edx,%edx
140b2(3): mov %r14,%rdi
140b5(5): call 0xffff3efb(%rip)
140ba(3): xor %r14d,%r14d
140bd(2): jmp 0xffffffb3(%rip)
140bf(1): nop 
140c0(7): lea 0xffff4d89(%rip),%rsi
140c7(3): mov %r9,%rdi
140ca(2): xor %edx,%edx
140cc(5): call 0xffff3ee4(%rip)
140d1(7): lea 0xffff4d78(%rip),%rsi
140d8(3): mov %r14,%rdi
140db(2): xor %edx,%edx
140dd(3): xor %r14d,%r14d
140e0(5): call 0xffff3ed0(%rip)
140e5(6): mov $0xc,(%rbx)
140eb(2): jmp 0xffffff85(%rip)
140ed(5): call 0xfffedb33(%rip)

"parse_reg_exp" :
14100(2): push %r15
14102(2): push %r14
14104(3): mov %rcx,%r14
14107(2): push %r13
14109(2): push %r12
1410b(3): mov %r9,%r13
1410e(1): push %rbp
1410f(1): push %rbx
14110(3): mov %rdx,%rbp
14113(3): mov %rdi,%r12
14116(4): sub $0x58,%rsp
1411a(3): mov (%rsi),%rbx
1411d(9): mov $0x28,%rax
14126(5): mov %rax,0x48(%rsp)
1412b(2): xor %eax,%eax
1412d(5): mov %rsi,0x28(%rsp)
14132(5): mov %r8,0x10(%rsp)
14137(7): mov 0xa8(%rbx),%rax
1413e(5): mov %rax,0x20(%rsp)
14143(5): call 0xfffffe2d(%rip)
14148(4): mov 0x0(%r13),%edx
1414c(3): mov %rax,%r15
1414f(2): test %edx,%edx
14151(2): jz 0xb(%rip)
14153(3): test %rax,%rax
14156(6): jz 0xec(%rip)
1415c(5): lea 0x30(%rsp),%rax
14161(5): mov %rax,0x8(%rsp)
14166(5): jmp 0x8e(%rip)
1416b(5): nop 0x0(%rax,%rax,1)
14170(2): cmp $0x9,%al
14172(2): jnz 0xe(%rip)
14174(6): cmp $0x0,0x10(%rsp)
1417a(6): jnz 0xae(%rip)
14180(7): mov 0xa8(%rbx),%rax
14187(5): mov 0x10(%rsp),%r8
1418c(3): mov %r14,%rcx
1418f(5): mov 0x28(%rsp),%rsi
14194(3): mov %r13,%r9
14197(3): mov %rbp,%rdx
1419a(3): mov %r12,%rdi
1419d(5): mov %rax,0x18(%rsp)
141a2(5): mov 0x20(%rsp),%rax
141a7(7): mov %rax,0xa8(%rbx)
141ae(5): call 0xfffffdc2(%rip)
141b3(3): mov %rax,%rcx
141b6(4): mov 0x0(%r13),%eax
141ba(2): test %eax,%eax
141bc(2): jz 0x7(%rip)
141be(3): test %rcx,%rcx
141c1(2): jz 0x6b(%rip)
141c3(5): mov 0x18(%rsp),%rax
141c8(7): or %rax,0xa8(%rbx)
141cf(5): mov 0x8(%rsp),%r8
141d4(7): lea 0x80(%rbx),%rsi
141db(4): lea 0x70(%rbx),%rdi
141df(3): mov %r15,%rdx
141e2(5): mov $0xa,0x38(%rsp)
141e7(5): call 0xffff61a9(%rip)
141ec(3): test %rax,%rax
141ef(3): mov %rax,%r15
141f2(2): jz 0x7e(%rip)
141f4(4): cmp $0xa,0x8(%rbp)
141f8(2): jnz 0x50(%rip)
141fa(3): mov %r14,%rdx
141fd(3): mov %r12,%rsi
14200(3): mov %rbp,%rdi
14203(7): or $0x800000,%rdx
1420a(5): call 0xffffe0c6(%rip)
1420f(2): cwde 
14211(5): add %rax,0x48(%r12)
14216(4): movzx 0x8(%rbp),%eax
1421a(2): mov %eax,%edx
1421c(3): and $0xf7,%edx
1421f(3): cmp $0x2,%dl
14222(6): jnz 0xffffff4e(%rip)
14228(2): xor %ecx,%ecx
1422a(2): jmp 0xffffffa5(%rip)
1422c(3): test %r15,%r15
1422f(2): jz 0x13(%rip)
14231(7): lea 0xffff4c18(%rip),%rsi
14238(2): xor %edx,%edx
1423a(3): mov %r15,%rdi
1423d(5): call 0xffff3d73(%rip)
14242(3): xor %r15d,%r15d
14245(3): nop (%rax)
14248(5): mov 0x48(%rsp),%rcx
1424d(9): xor $0x28,%rcx
14256(3): mov %r15,%rax
14259(2): jnz 0x21(%rip)
1425b(4): add $0x58,%rsp
1425f(1): pop %rbx
14260(1): pop %rbp
14261(2): pop %r12
14263(2): pop %r13
14265(2): pop %r14
14267(2): pop %r15
14269(1): ret near (%rsp)
1426a(6): nop 0x0(%rax,%rax,1)
14270(8): mov $0xc,0x0(%r13)
14278(2): jmp 0xffffffd0(%rip)
1427a(5): call 0xfffed9a6(%rip)

"re_compile_internal" :
14280(2): push %r15
14282(2): push %r14
14284(2): push %r13
14286(2): push %r12
14288(1): push %rbp
14289(1): push %rbx
1428a(7): sub $0x128,%rsp
14291(4): mov %rcx,0x18(%rdi)
14295(8): mov $0x0,0x10(%rdi)
1429d(9): mov $0x28,%rax
142a6(8): mov %rax,0x118(%rsp)
142ae(2): xor %eax,%eax
142b0(4): movzx 0x38(%rdi),%eax
142b4(5): mov %rdi,0x8(%rsp)
142b9(5): mov %rsi,0x10(%rsp)
142be(4): mov %rdx,(%rsp)
142c2(5): mov %rcx,0x18(%rsp)
142c7(8): mov $0x0,0x4c(%rsp)
142cf(8): mov $0x0,0x30(%rdi)
142d7(3): mov (%rdi),%rbx
142da(4): mov %al,0x20(%rsp)
142de(3): and $0x90,%eax
142e1(8): cmp $0xe7,0x8(%rdi)
142e9(3): mov %al,0x38(%rdi)
142ec(6): jbe 0xdfa(%rip)
142f2(4): lea 0x8(%rbx),%rdi
142f6(5): mov 0x8(%rsp),%rax
142fb(3): mov %rbx,%rcx
142fe(4): and $0xfffffff8,%rdi
14302(3): sub %rdi,%rcx
14305(8): mov $0xe8,0x10(%rax)
1430d(2): xor %eax,%eax
1430f(6): add $0xe8,%ecx
14315(7): mov $0x0,(%rbx)
1431c(b): mov $0x0,0xe0(%rbx)
14327(3): shr $0x3,%ecx
1432a(3): REP stosd %rax,rdi(%es,10)
1432d(a): mov $0x384307168202282324,%rax
14337(a): mov $0xf,0x80(%rbx)
14341(4): cmp %rax,(%rsp)
14345(6): jnbe 0x641(%rip)
1434b(4): mov (%rsp),%r14
1434f(4): lea 0x1(%r14),%rax
14353(3): mov %rax,%rdi
14356(4): mov %rax,0x8(%rbx)
1435a(5): mov %rax,0x28(%rsp)
1435f(4): shl/sal $0x4,%rdi
14363(5): call 0xfffeda3d(%rip)
14368(3): test %r14,%r14
1436b(3): mov %rax,(%rbx)
1436e(6): jz 0xce7(%rip)
14374(5): mov $0x1,%esi
14379(7): nop 0x0(%rax)
14380(3): add %rsi,%rsi
14383(4): cmp %rsi,(%rsp)
14387(2): jnb 0xfffffff9(%rip)
14389(4): lea 0xffffffff(%rsi),%rbp
1438d(5): mov $0x18,%edi
14392(5): call 0xfffed99e(%rip)
14397(7): mov %rbp,0x88(%rbx)
1439e(4): mov %rax,0x40(%rbx)
143a2(5): call 0xfffed85e(%rip)
143a7(5): mov $0xe,%edi
143ac(6): mov %eax,0xb4(%rbx)
143b2(5): call 0xfffeda1e(%rip)
143b7(3): movzx (%rax),%edx
143ba(3): and $0xdf,%edx
143bd(3): cmp $0x55,%dl
143c0(2): jnz 0x50(%rip)
143c2(4): movzx 0x1(%rax),%edx
143c6(3): and $0xdf,%edx
143c9(3): cmp $0x54,%dl
143cc(2): jnz 0x44(%rip)
143ce(4): movzx 0x2(%rax),%edx
143d2(3): and $0xdf,%edx
143d5(3): cmp $0x46,%dl
143d8(2): jnz 0x38(%rip)
143da(2): xor %edx,%edx
143dc(4): cmp $0x2d,0x3(%rax)
143e0(7): lea 0x32e7(%rip),%rdi
143e7(5): mov $0x2,%ecx
143ec(3): setz %dl
143ef(5): lea 0x3(%rax,%rdx,1),%rsi
143f4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
143f6(3): setnbe %al
143f9(2): sbb $0x0,%al
143fb(2): test %al,%al
143fd(2): jnz 0x13(%rip)
143ff(7): or $0x4,0xb0(%rbx)
14406(a): nop 0x0(%rax,%rax,1)
14410(7): movzx 0xb0(%rbx),%eax
14417(2): mov %eax,%edx
14419(3): and $0xf7,%edx
1441c(7): cmp $0x1,0xb4(%rbx)
14423(6): mov %dl,0xb0(%rbx)
14429(2): jle 0x15(%rip)
1442b(2): test $0x4,%al
1442d(6): jz 0x566(%rip)
14433(7): lea 0x3806(%rip),%rax
1443a(4): mov %rax,0x78(%rbx)
1443e(4): cmp $0x0,(%rbx)
14442(6): jz 0x544(%rip)
14448(5): cmp $0x0,0x40(%rbx)
1444d(6): jz 0x539(%rip)
14453(5): mov 0x18(%rsp),%rax
14458(8): lea 0x80(%rsp),%rbp
14460(5): mov $0x12,%ecx
14465(8): mov $0x0,0x4c(%rsp)
1446d(4): lea 0x8(%rbp),%r8
14471(5): and $0x400000,%eax
14476(5): mov %rax,0x20(%rsp)
1447b(5): mov 0x8(%rsp),%rax
14480(3): setnz %dl
14483(3): mov %r8,%rdi
14486(4): mov 0x28(%rax),%rsi
1448a(2): xor %eax,%eax
1448c(3): REP stosd %rax,rdi(%es,10)
1448f(5): mov 0x10(%rsp),%rax
14494(4): mov (%rsp),%rdi
14498(3): test %rsi,%rsi
1449b(7): mov %dl,0x108(%rsp)
144a2(6): mov 0xb4(%rbx),%ecx
144a8(4): setnz %r12b
144ac(8): mov %rsi,0xf8(%rsp)
144b4(8): mov %rax,0x80(%rsp)
144bc(7): movzx 0xb0(%rbx),%eax
144c3(3): or %edx,%r12d
144c6(8): mov %rdi,0xd8(%rsp)
144ce(8): mov %rdi,0xd0(%rsp)
144d6(3): mov %r12d,%esi
144d9(8): mov %r12b,0x10b(%rsp)
144e1(7): mov %ecx,0x110(%rsp)
144e8(8): mov %rdi,0xe8(%rsp)
144f0(8): mov %rdi,0xe0(%rsp)
144f8(2): mov %eax,%edx
144fa(3): shr $0x3,%al
144fd(3): shr $0x2,%dl
14500(3): and $0x1,%eax
14503(3): and $0x1,%edx
14506(3): test %rdi,%rdi
14509(7): mov %al,0x10a(%rsp)
14510(7): mov %dl,0x109(%rsp)
14517(6): jnz 0x43e(%rip)
1451d(3): test %sil,%sil
14520(2): jz 0xf(%rip)
14522(8): mov 0x88(%rsp),%rax
1452a(5): mov %rax,0x10(%rsp)
1452f(6): cmp $0x0,0x20(%rsp)
14535(5): mov 0x10(%rsp),%rax
1453a(8): mov %rax,0x88(%rsp)
14542(6): jz 0x103(%rip)
14548(3): cmp $0x1,%ecx
1454b(6): jle 0xbf2(%rip)
14551(3): mov %rbp,%rdi
14554(5): call 0xffff409c(%rip)
14559(2): test %eax,%eax
1455b(2): jnz 0x45(%rip)
1455d(4): mov (%rsp),%rax
14561(8): cmp 0xb8(%rsp),%rax
14569(6): jle 0xbb7(%rip)
1456f(7): movsxd 0xb4(%rbx),%rax
14576(8): mov 0xc0(%rsp),%rsi
1457e(8): add 0xb0(%rsp),%rax
14586(3): cmp %rax,%rsi
14589(6): jnle 0xb97(%rip)
1458f(3): add %rsi,%rsi
14592(3): mov %rbp,%rdi
14595(5): call 0xffff3aeb(%rip)
1459a(2): test %eax,%eax
1459c(2): jz 0xffffffb5(%rip)
1459e(2): nop 
145a0(4): mov %eax,0x4c(%rsp)
145a4(5): mov 0x8(%rsp),%rax
145a9(3): mov (%rax),%r13
145ac(4): mov 0x70(%r13),%rdi
145b0(3): test %rdi,%rdi
145b3(2): jz 0x15(%rip)
145b5(3): nop (%rax)
145b8(3): mov (%rdi),%r12
145bb(5): call 0xfffed545(%rip)
145c0(3): test %r12,%r12
145c3(3): mov %r12,%rdi
145c6(2): jnz 0xfffffff2(%rip)
145c8(4): mov 0x20(%r13),%rdi
145cc(8): mov $0x0,0x70(%r13)
145d4(b): mov $0xf,0x80(%r13)
145df(8): mov $0x0,0x68(%r13)
145e7(5): call 0xfffed519(%rip)
145ec(8): mov $0x0,0x20(%r13)
145f4(3): mov %rbp,%rdi
145f7(5): call 0xffff4dc9(%rip)
145fc(3): mov %rbx,%rdi
145ff(5): call 0xffff4e01(%rip)
14604(5): mov 0x8(%rsp),%rax
14609(7): mov $0x0,(%rax)
14610(8): mov $0x0,0x8(%rax)
14618(4): mov 0x4c(%rsp),%eax
1461c(8): mov 0x118(%rsp),%rbx
14624(9): xor $0x28,%rbx
1462d(6): jnz 0xd43(%rip)
14633(7): add $0x128,%rsp
1463a(1): pop %rbx
1463b(1): pop %rbp
1463c(2): pop %r12
1463e(2): pop %r13
14640(2): pop %r14
14642(2): pop %r15
14644(1): ret near (%rsp)
14645(3): cmp $0x1,%ecx
14648(6): jnle 0x9b2(%rip)
1464e(3): test %r12b,%r12b
14651(8): mov 0xc0(%rsp),%rsi
14659(6): jz 0x61b(%rip)
1465f(8): cmp %rsi,0xd8(%rsp)
14667(8): mov 0xb0(%rsp),%rax
1466f(9): cmovng 0xd8(%rsp),%rsi
14678(3): cmp %rax,%rsi
1467b(2): jnle 0x12(%rip)
1467d(2): jmp 0x43(%rip)
1467f(1): nop 
14680(8): mov 0x88(%rsp),%rdx
14688(5): mov %rdx,0x10(%rsp)
1468d(8): mov 0x80(%rsp),%rdx
14695(8): mov 0xf8(%rsp),%rcx
1469d(3): add %rax,%rdx
146a0(8): add 0xa8(%rsp),%rdx
146a8(3): movzx (%rdx),%edx
146ab(4): movzx 0x0(%rcx,%rdx,1),%edx
146af(5): mov 0x10(%rsp),%rcx
146b4(3): mov %dl,0x0(%rcx,%rax,1)
146b7(4): add $0x1,%rax
146bb(3): cmp %rax,%rsi
146be(2): jnz 0xffffffc2(%rip)
146c0(8): mov %rax,0xb0(%rsp)
146c8(8): mov %rax,0xb8(%rsp)
146d0(8): mov $0x0,0x4c(%rsp)
146d8(5): mov 0x8(%rsp),%r12
146dd(5): mov 0x18(%rsp),%r14
146e2(5): lea 0x50(%rsp),%r13
146e7(3): mov %rbp,%rsi
146ea(3): mov %r13,%rdi
146ed(5): mov %r13,0x28(%rsp)
146f2(4): mov (%r12),%r15
146f6(3): mov %r14,%rdx
146f9(9): mov $0x0,0x30(%r12)
14702(7): or $0x800000,%rdx
14709(7): mov %r14,0xd8(%r15)
14710(5): call 0xffffdbc0(%rip)
14715(5): lea 0x4c(%rsp),%r9
1471a(3): xor %r8d,%r8d
1471d(3): mov %r14,%rcx
14720(3): mov %r13,%rdx
14723(3): mov %r12,%rsi
14726(3): mov %rbp,%rdi
14729(2): cwde 
1472b(8): add %rax,0xc8(%rsp)
14733(5): call 0xfffff9cd(%rip)
14738(4): mov 0x4c(%rsp),%ecx
1473c(2): test %ecx,%ecx
1473e(6): jnz 0xa29(%rip)
14744(4): lea 0x70(%r15),%r13
14748(5): lea 0x60(%rsp),%r12
1474d(4): sub $0xffffff80,%r15
14751(2): xor %edx,%edx
14753(2): xor %ecx,%ecx
14755(3): mov %r15,%rsi
14758(3): mov %r12,%r8
1475b(3): mov %r13,%rdi
1475e(4): mov %rax,(%rsp)
14762(5): mov $0x2,0x68(%rsp)
14767(5): call 0xffff5c29(%rip)
1476c(4): mov (%rsp),%r9
14770(3): mov %rax,%r11
14773(3): mov %rax,%rdx
14776(3): test %r9,%r9
14779(2): jz 0x29(%rip)
1477b(3): mov %r11,%rcx
1477e(3): mov %r9,%rdx
14781(3): mov %r12,%r8
14784(3): mov %r15,%rsi
14787(3): mov %r13,%rdi
1478a(4): mov %r11,(%rsp)
1478e(5): mov $0x10,0x68(%rsp)
14793(5): call 0xffff5bfd(%rip)
14798(4): mov (%rsp),%r11
1479c(3): mov %r11,%rdx
1479f(3): mov %rax,%r11
147a2(3): test %rdx,%rdx
147a5(5): mov 0x8(%rsp),%rcx
147aa(3): setz %dl
147ad(3): test %r11,%r11
147b0(3): setz %al
147b3(2): or %al,%dl
147b5(3): mov (%rcx),%r13
147b8(6): jnz 0x99a(%rip)
147be(4): mov 0x8(%r13),%r15
147c2(4): mov %r11,0x68(%rbx)
147c6(8): lea 0x0(,%r15,8),%rcx
147ce(4): lea 0x0(%r15,%r15,2),%r15
147d2(3): mov %rcx,%rdi
147d5(4): mov %rcx,(%rsp)
147d9(4): shl/sal $0x3,%r15
147dd(5): call 0xfffed5c3(%rip)
147e2(4): mov (%rsp),%rcx
147e6(4): mov %rax,0x18(%r13)
147ea(5): mov %rax,0x18(%rsp)
147ef(3): mov %rcx,%rdi
147f2(5): call 0xfffed5ae(%rip)
147f7(3): mov %r15,%rdi
147fa(4): mov %rax,0x20(%r13)
147fe(5): mov %rax,0x10(%rsp)
14803(5): call 0xfffed59d(%rip)
14808(3): mov %r15,%rdi
1480b(4): mov %rax,0x28(%r13)
1480f(4): mov %rax,(%rsp)
14813(5): call 0xfffed58d(%rip)
14818(5): mov 0x18(%rsp),%rdx
1481d(4): mov %rax,0x30(%r13)
14821(4): mov (%rsp),%rsi
14825(5): mov 0x10(%rsp),%rcx
1482a(3): test %rdx,%rdx
1482d(6): jz 0x7c0(%rip)
14833(3): test %rcx,%rcx
14836(6): jz 0x7b7(%rip)
1483c(3): test %rsi,%rsi
1483f(6): jz 0x7ae(%rip)
14845(3): test %rax,%rax
14848(6): jz 0x7a5(%rip)
1484e(5): mov 0x8(%rsp),%rax
14853(4): mov 0x30(%rax),%r15
14857(8): lea 0x0(,%r15,8),%rdi
1485f(5): call 0xfffed541(%rip)
14864(3): test %rax,%rax
14867(7): mov %rax,0xe0(%r13)
1486e(2): jz 0x6f(%rip)
14870(3): test %r15,%r15
14873(2): jz 0x1a(%rip)
14875(2): xor %edx,%edx
14877(9): nop 0x0(%rax,%rax,1)
14880(4): mov %rdx,0x0(%rax,%rdx,8)
14884(4): add $0x1,%rdx
14888(3): cmp %r15,%rdx
1488b(2): jnz 0xfffffff5(%rip)
1488d(4): mov 0x68(%r13),%rdi
14891(7): lea 0xffff4ff8(%rip),%rsi
14898(3): mov %r13,%rdx
1489b(5): call 0xffff3785(%rip)
148a0(5): mov 0x8(%rsp),%rax
148a5(7): mov 0xe0(%r13),%rdi
148ac(4): mov 0x30(%rax),%rdx
148b0(3): test %rdx,%rdx
148b3(6): jz 0x8f1(%rip)
148b9(3): mov (%rdi),%rax
148bc(3): test %rax,%rax
148bf(2): jz 0xf(%rip)
148c1(2): jmp 0x1c(%rip)
148c3(5): nop 0x0(%rax,%rax,1)
148c8(4): cmp %rax,0x0(%rdi,%rax,8)
148cc(2): jnz 0x11(%rip)
148ce(4): add $0x1,%rax
148d2(3): cmp %rax,%rdx
148d5(2): jnbe 0xfffffff3(%rip)
148d7(6): jz 0x8cd(%rip)
148dd(4): mov 0x68(%r13),%rdi
148e1(5): mov 0x8(%rsp),%rdx
148e6(7): lea 0xffff5ea3(%rip),%rsi
148ed(5): call 0xffff36c3(%rip)
148f2(2): test %eax,%eax
148f4(6): jnz 0xfffffcac(%rip)
148fa(4): mov 0x68(%r13),%rdi
148fe(7): lea 0xffff83fb(%rip),%rsi
14905(3): mov %r13,%rdx
14908(5): call 0xffff36a8(%rip)
1490d(2): test %eax,%eax
1490f(6): jnz 0xfffffc91(%rip)
14915(4): mov 0x68(%r13),%rdi
14919(7): lea 0xffff5000(%rip),%rsi
14920(3): mov %r13,%rdx
14923(5): call 0xffff36fd(%rip)
14928(4): mov 0x68(%r13),%rdx
1492c(7): lea 0x3215(%rip),%rsi
14933(5): nop 0x0(%rax,%rax,1)
14938(4): movzx 0x30(%rdx),%ecx
1493c(4): mov 0x38(%rdx),%rdi
14940(3): cmp $0x10,%cl
14943(6): jnbe 0xd5(%rip)
14949(3): movzx %cl,%eax
1494c(4): movsxd 0x0(%rsi,%rax,4),%rax
14950(3): add %rsi,%rax
14953(2): jmp %rax
14955(5): mov 0x28(%rsp),%rsi
1495a(3): mov %rbp,%rdi
1495d(5): call 0xffff3723(%rip)
14962(2): test %eax,%eax
14964(6): jnz 0xfffffc3c(%rip)
1496a(8): movzx 0x10b(%rsp),%esi
14972(6): mov 0xb4(%rbx),%ecx
14978(3): test %sil,%sil
1497b(6): jz 0xfffffbb4(%rip)
14981(5): jmp 0xfffffba1(%rip)
14986(8): mov $0xc,0x4c(%rsp)
1498e(5): jmp 0xfffffc6e(%rip)
14993(5): mov $0x1,%esi
14998(5): mov $0x20,%edi
1499d(5): call 0xfffed393(%rip)
149a2(3): test %rax,%rax
149a5(4): mov %rax,0x78(%rbx)
149a9(2): jz 0xffffffdd(%rip)
149ab(3): xor %r12d,%r12d
149ae(2): xor %ebp,%ebp
149b0(6): mov $0x1,%r13d
149b6(3): xor %r15d,%r15d
149b9(7): nop 0x0(%rax)
149c0(5): lea 0x0(%rbp,%r15,1),%r14d
149c5(3): mov %r14d,%edi
149c8(5): call 0xfffed478(%rip)
149cd(3): cmp $0xff,%eax
149d0(2): jz 0x15(%rip)
149d2(4): mov 0x78(%rbx),%rsi
149d6(3): mov %r13,%rdi
149d9(3): mov %r15d,%ecx
149dc(3): shl/sal %cl,%rdi
149df(3): add %r12,%rsi
149e2(3): or %rdi,(%rsi)
149e5(7): test $0xffffff80,%r14d
149ec(2): jnz 0xe(%rip)
149ee(3): cmp %r14d,%eax
149f1(2): jz 0x9(%rip)
149f3(7): or $0x8,0xb0(%rbx)
149fa(4): add $0x1,%r15
149fe(4): cmp $0x40,%r15
14a02(2): jnz 0xffffffbe(%rip)
14a04(3): add $0x40,%ebp
14a07(4): add $0x8,%r12
14a0b(6): cmp $0x100,%ebp
14a11(2): jnz 0xffffffa5(%rip)
14a13(5): jmp 0xfffffa2b(%rip)
14a18(3): and $0x8,%ecx
14a1b(6): jnz 0x917(%rip)
14a21(4): mov 0x20(%rdx),%rax
14a25(4): mov 0x38(%rax),%rcx
14a29(4): mov 0x18(%r13),%rax
14a2d(4): mov %rcx,0x0(%rax,%rdi,8)
14a31(4): mov 0x8(%rdx),%r15
14a35(2): xor %edi,%edi
14a37(3): test %r15,%r15
14a3a(2): jz 0x11(%rip)
14a3c(3): mov %r15,%rdx
14a3f(5): jmp 0xfffffef9(%rip)
14a44(4): nop 0x0(%rax)
14a48(3): mov %rax,%rdx
14a4b(4): mov 0x10(%rdx),%r15
14a4f(3): test %r15,%r15
14a52(3): setz %cl
14a55(3): cmp %rdi,%r15
14a58(3): setz %al
14a5b(2): or %al,%cl
14a5d(4): mov %cl,0x10(%rsp)
14a61(2): jz 0xffffffdb(%rip)
14a63(3): mov (%rdx),%rax
14a66(3): mov %rdx,%rdi
14a69(3): test %rax,%rax
14a6c(2): jnz 0xffffffdc(%rip)
14a6e(3): xor %r14d,%r14d
14a71(3): xor %r15d,%r15d
14a74(4): nop 0x0(%rax)
14a78(4): mov 0x10(%r13),%rdx
14a7c(3): cmp %r15,%rdx
14a7f(2): jz 0x27(%rip)
14a81(4): lea 0x0(%r15,%r15,2),%r10
14a85(4): mov 0x30(%r13),%rax
14a89(4): shl/sal $0x3,%r10
14a8d(6): cmp $0x0,0x8(%rax,%r10,1)
14a93(6): jz 0x205(%rip)
14a99(4): mov 0x10(%r13),%rdx
14a9d(4): add $0x1,%r15
14aa1(3): cmp %r15,%rdx
14aa4(2): jnz 0xffffffdd(%rip)
14aa6(3): test %r14b,%r14b
14aa9(6): jz 0x245(%rip)
14aaf(3): xor %r14d,%r14d
14ab2(3): xor %r15d,%r15d
14ab5(2): jmp 0xffffffcc(%rip)
14ab7(8): or $0x1,0xb0(%r13)
14abf(4): mov 0x8(%rdx),%r15
14ac3(3): test %r15,%r15
14ac6(6): jz 0x613(%rip)
14acc(4): mov 0x18(%r15),%rax
14ad0(4): mov 0x38(%rax),%rcx
14ad4(4): mov 0x10(%rdx),%rax
14ad8(3): test %rax,%rax
14adb(6): jz 0x5f1(%rip)
14ae1(4): mov 0x18(%rax),%rax
14ae5(4): mov 0x38(%rax),%r9
14ae9(3): test %rcx,%rcx
14aec(6): js 0x865(%rip)
14af2(3): test %r9,%r9
14af5(6): js 0x81e(%rip)
14afb(4): mov 0x28(%r13),%rax
14aff(4): lea 0x0(%rdi,%rdi,2),%rdi
14b03(5): mov %rsi,0x38(%rsp)
14b08(5): mov %r9,0x30(%rsp)
14b0d(5): mov %rcx,0x18(%rsp)
14b12(5): mov %rdx,0x10(%rsp)
14b17(4): lea 0x0(%rax,%rdi,8),%r10
14b1b(5): mov $0x10,%edi
14b20(7): mov $0x2,(%r10)
14b27(4): mov %r10,(%rsp)
14b2b(5): call 0xfffed275(%rip)
14b30(4): mov (%rsp),%r10
14b34(3): test %rax,%rax
14b37(5): mov 0x10(%rsp),%rdx
14b3c(5): mov 0x18(%rsp),%rcx
14b41(5): mov 0x30(%rsp),%r9
14b46(5): mov 0x38(%rsp),%rsi
14b4b(4): mov %rax,0x10(%r10)
14b4f(6): jz 0x29b(%rip)
14b55(3): cmp %r9,%rcx
14b58(6): jz 0x5d5(%rip)
14b5e(8): mov $0x2,0x8(%r10)
14b66(6): jl 0x5ae(%rip)
14b6c(3): mov %r9,(%rax)
14b6f(4): mov %rcx,0x8(%rax)
14b73(5): jmp 0xfffffec2(%rip)
14b78(4): mov 0x20(%rdx),%rax
14b7c(4): lea 0x0(%rdi,%rdi,2),%rcx
14b80(5): mov $0x8,%edi
14b85(5): mov %rsi,0x10(%rsp)
14b8a(4): mov %rdx,(%rsp)
14b8e(4): mov 0x38(%rax),%r14
14b92(4): mov 0x28(%r13),%rax
14b96(4): lea 0x0(%rax,%rcx,8),%r15
14b9a(7): mov $0x1,(%r15)
14ba1(8): mov $0x1,0x8(%r15)
14ba9(5): call 0xfffed1f7(%rip)
14bae(3): test %rax,%rax
14bb1(4): mov %rax,0x10(%r15)
14bb5(4): mov (%rsp),%rdx
14bb9(5): mov 0x10(%rsp),%rsi
14bbe(6): jz 0x6aa(%rip)
14bc4(3): mov %r14,(%rax)
14bc7(4): mov 0x8(%rdx),%r15
14bcb(5): jmp 0xfffffe6a(%rip)
14bd0(5): cmp $0x0,0x20(%rdx)
14bd5(6): jz 0xfffffe5c(%rip)
14bdb(7): lea 0x301e(%rip),%rcx
14be2(7): lea 0x2a3f(%rip),%rsi
14be9(7): lea 0x2ae0(%rip),%rdi
14bf0(5): mov $0x59f,%edx
14bf5(5): call 0xfffed09b(%rip)
14bfa(6): nop 0x0(%rax,%rax,1)
14c00(4): mov 0x20(%rdx),%rax
14c04(4): mov 0x38(%rax),%r15
14c08(4): mov 0x18(%r13),%rax
14c0c(4): mov %r15,0x0(%rax,%rdi,8)
14c10(4): cmp $0x4,0x30(%rdx)
14c14(6): jnz 0xfffffe1d(%rip)
14c1a(4): mov 0x28(%r13),%rax
14c1e(4): lea 0x0(%rdi,%rdi,2),%rcx
14c22(5): mov $0x8,%edi
14c27(5): mov %rsi,0x18(%rsp)
14c2c(5): mov %rdx,0x10(%rsp)
14c31(4): lea 0x0(%rax,%rcx,8),%rcx
14c35(7): mov $0x1,(%rcx)
14c3c(8): mov $0x1,0x8(%rcx)
14c44(4): mov %rcx,(%rsp)
14c48(5): call 0xfffed158(%rip)
14c4d(4): mov (%rsp),%rcx
14c51(3): test %rax,%rax
14c54(5): mov 0x10(%rsp),%rdx
14c59(5): mov 0x18(%rsp),%rsi
14c5e(4): mov %rax,0x10(%rcx)
14c62(6): jz 0x64e(%rip)
14c68(3): mov %r15,(%rax)
14c6b(4): mov 0x8(%rdx),%r15
14c6f(5): jmp 0xfffffdc6(%rip)
14c74(8): mov %rsi,0xb0(%rsp)
14c7c(8): mov %rsi,0xb8(%rsp)
14c84(8): mov $0x0,0x4c(%rsp)
14c8c(5): jmp 0xfffffa4c(%rip)
14c91(7): nop 0x0(%rax)
14c98(5): mov $0x1,%ecx
14c9d(3): mov %r15,%rdx
14ca0(3): mov %r13,%rsi
14ca3(3): mov %r12,%rdi
14ca6(4): mov %r10,(%rsp)
14caa(5): call 0xffff5126(%rip)
14caf(2): test %eax,%eax
14cb1(6): jnz 0xfffff8ef(%rip)
14cb7(4): mov 0x30(%r13),%rax
14cbb(4): mov (%rsp),%r10
14cbf(4): add $0x1,%r15
14cc3(6): cmp $0x0,0x8(%rax,%r10,1)
14cc9(6): jnz 0xfffffdaf(%rip)
14ccf(5): mov 0x70(%rsp),%rdi
14cd4(5): call 0xfffece2c(%rip)
14cd9(4): cmp %r15,0x10(%r13)
14cdd(6): jz 0xfffffdd2(%rip)
14ce3(6): movzx 0x10(%rsp),%r14d
14ce9(5): jmp 0xfffffd98(%rip)
14cee(5): mov 0x8(%rsp),%rax
14cf3(4): test $0x10,0x38(%rax)
14cf7(2): jnz 0x13(%rip)
14cf9(5): cmp $0x0,0x30(%rax)
14cfe(2): jz 0xc(%rip)
14d00(8): test $0x1,0xb0(%r13)
14d08(2): jnz 0x10(%rip)
14d0a(8): cmp $0x0,0x98(%r13)
14d12(6): jz 0xf9(%rip)
14d18(4): lea 0x0(%rdx,%rdx,2),%rdi
14d1c(4): mov %rdx,(%rsp)
14d20(4): shl/sal $0x3,%rdi
14d24(5): call 0xfffed07c(%rip)
14d29(3): test %rax,%rax
14d2c(4): mov %rax,0x38(%r13)
14d30(6): jz 0x54c(%rip)
14d36(4): mov (%rsp),%rdx
14d3a(2): xor %esi,%esi
14d3c(2): xor %ecx,%ecx
14d3e(3): test %rdx,%rdx
14d41(2): jnz 0x13(%rip)
14d43(5): jmp 0xc8(%rip)
14d48(8): nop 0x0(%rax,%rax,1)
14d50(4): mov 0x38(%r13),%rax
14d54(4): pxor %xmm0,%xmm0
14d58(3): add %rsi,%rax
14d5b(4): add $0x1,%rcx
14d5f(8): mov $0x0,0x10(%rax)
14d67(4): add $0x18,%rsi
14d6b(3): movups %xmm0,(%rax)
14d6e(4): mov 0x10(%r13),%rax
14d72(3): cmp %rax,%rcx
14d75(2): jb 0xffffffdb(%rip)
14d77(3): test %rax,%rax
14d7a(6): jz 0x91(%rip)
14d80(4): mov 0x30(%r13),%rax
14d84(9): mov $0x0,0x18(%rsp)
14d8d(9): mov $0x0,0x10(%rsp)
14d96(5): mov 0x18(%rsp),%rcx
14d9b(4): lea 0x0(%rax,%rcx,1),%rdx
14d9f(5): cmp $0x0,0x8(%rdx)
14da4(4): mov 0x10(%rdx),%rcx
14da8(2): jle 0x4c(%rip)
14daa(3): xor %r15d,%r15d
14dad(2): jmp 0x1b(%rip)
14daf(1): nop 
14db0(4): mov 0x30(%r13),%rax
14db4(5): mov 0x18(%rsp),%rdx
14db9(4): add $0x1,%r15
14dbd(4): mov (%rsp),%rcx
14dc1(5): cmp 0x8(%rax,%rdx,1),%r15
14dc6(2): jnl 0x2e(%rip)
14dc8(4): mov 0x0(%rcx,%r15,8),%rax
14dcc(4): mov %rcx,(%rsp)
14dd0(4): lea 0x0(%rax,%rax,2),%rsi
14dd4(4): mov 0x38(%r13),%rax
14dd8(4): lea 0x0(%rax,%rsi,8),%rdi
14ddc(5): mov 0x10(%rsp),%rsi
14de1(5): call 0xffff333f(%rip)
14de6(2): test %al,%al
14de8(2): jnz 0xffffffc8(%rip)
14dea(5): mov $0xc,%eax
14def(5): jmp 0xfffff7b1(%rip)
14df4(6): add $0x1,0x10(%rsp)
14dfa(6): add $0x18,0x18(%rsp)
14e00(5): mov 0x10(%rsp),%rdx
14e05(4): cmp 0x10(%r13),%rdx
14e09(2): jb 0xffffff8d(%rip)
14e0b(7): movzx 0xb0(%rbx),%eax
14e12(8): mov $0x0,0x4c(%rsp)
14e1a(3): shr $0x2,%al
14e1d(6): cmp $0x0,0x20(%rsp)
14e23(3): setz %dl
14e26(2): and %dl,%al
14e28(6): jnz 0x1e7(%rip)
14e2e(4): mov 0x68(%rbx),%rax
14e32(3): mov %r12,%rdi
14e35(4): mov 0x18(%rax),%rax
14e39(4): mov 0x38(%rax),%rax
14e3d(4): lea 0x0(%rax,%rax,2),%rdx
14e41(7): mov %rax,0x90(%rbx)
14e48(4): mov 0x30(%rbx),%rax
14e4c(4): lea 0x0(%rax,%rdx,8),%rsi
14e50(5): call 0xffff59e0(%rip)
14e55(2): test %eax,%eax
14e57(3): mov %eax,%r15d
14e5a(4): mov %eax,0x50(%rsp)
14e5e(6): jnz 0x121(%rip)
14e64(8): cmp $0x0,0x98(%rbx)
14e6c(6): jle 0xd4(%rip)
14e72(5): mov 0x68(%rsp),%r9
14e77(3): test %r9,%r9
14e7a(6): jle 0xc6(%rip)
14e80(3): xor %r10d,%r10d
14e83(5): lea 0x10(%r12),%r13
14e88(2): jmp 0x15(%rip)
14e8a(6): nop 0x0(%rax,%rax,1)
14e90(4): add $0x1,%r10
14e94(3): cmp %r10,%r9
14e97(6): jle 0xa9(%rip)
14e9d(5): mov 0x70(%rsp),%rcx
14ea2(3): mov (%rbx),%rsi
14ea5(4): mov 0x0(%rcx,%r10,8),%r8
14ea9(3): mov %r8,%rdi
14eac(4): shl/sal $0x4,%rdi
14eb0(3): add %rsi,%rdi
14eb3(4): cmp $0x4,0x8(%rdi)
14eb7(2): jnz 0xffffffd9(%rip)
14eb9(2): xor %edx,%edx
14ebb(2): jmp 0xe(%rip)
14ebd(3): nop (%rax)
14ec0(4): add $0x1,%rdx
14ec4(3): cmp %rdx,%r9
14ec7(2): jz 0xffffffc9(%rip)
14ec9(4): mov 0x0(%rcx,%rdx,8),%rax
14ecd(4): shl/sal $0x4,%rax
14ed1(3): add %rsi,%rax
14ed4(4): cmp $0x9,0x8(%rax)
14ed8(2): jnz 0xffffffe8(%rip)
14eda(3): mov (%rdi),%r11
14edd(3): cmp %r11,(%rax)
14ee0(2): jnz 0xffffffe0(%rip)
14ee2(4): mov 0x28(%rbx),%rdx
14ee6(4): lea 0x0(%r8,%r8,2),%rax
14eea(3): mov %r13,%rsi
14eed(3): mov %r9,%rdi
14ef0(4): lea 0x0(%rdx,%rax,8),%rax
14ef4(4): mov 0x10(%rax),%rax
14ef8(3): mov (%rax),%r11
14efb(3): mov %r11,%rdx
14efe(5): call 0xffff47d2(%rip)
14f03(3): test %rax,%rax
14f06(2): jnz 0xffffff8a(%rip)
14f08(4): mov 0x30(%rbx),%rax
14f0c(4): lea 0x0(%r11,%r11,2),%rdx
14f10(3): mov %r12,%rdi
14f13(4): lea 0x0(%rax,%rdx,8),%rsi
14f17(5): call 0xffff4cd9(%rip)
14f1c(2): test %eax,%eax
14f1e(6): jnz 0x342(%rip)
14f24(5): mov 0x68(%rsp),%r9
14f29(6): mov $0x1,%r10d
14f2f(3): cmp %r10,%r9
14f32(6): jnle 0xffffff6b(%rip)
14f38(8): nop 0x0(%rax,%rax,1)
14f40(5): mov 0x28(%rsp),%rdi
14f45(2): xor %ecx,%ecx
14f47(3): mov %r12,%rdx
14f4a(3): mov %rbx,%rsi
14f4d(5): call 0xffff5ad3(%rip)
14f52(3): test %rax,%rax
14f55(4): mov %rax,0x48(%rbx)
14f59(6): jz 0x169(%rip)
14f5f(4): cmp $0x0,0x68(%rax)
14f63(6): js 0xfe(%rip)
14f69(4): mov %rax,0x60(%rbx)
14f6d(4): mov %rax,0x58(%rbx)
14f71(4): mov %rax,0x50(%rbx)
14f75(5): mov 0x70(%rsp),%rdi
14f7a(5): call 0xfffecb86(%rip)
14f7f(5): mov 0x8(%rsp),%rax
14f84(5): mov %r15d,0x4c(%rsp)
14f89(3): mov (%rax),%r13
14f8c(4): mov 0x70(%r13),%rdi
14f90(3): test %rdi,%rdi
14f93(2): jz 0x15(%rip)
14f95(3): nop (%rax)
14f98(3): mov (%rdi),%r12
14f9b(5): call 0xfffecb65(%rip)
14fa0(3): test %r12,%r12
14fa3(3): mov %r12,%rdi
14fa6(2): jnz 0xfffffff2(%rip)
14fa8(4): mov 0x20(%r13),%rdi
14fac(8): mov $0x0,0x70(%r13)
14fb4(b): mov $0xf,0x80(%r13)
14fbf(8): mov $0x0,0x68(%r13)
14fc7(5): call 0xfffecb39(%rip)
14fcc(8): mov $0x0,0x20(%r13)
14fd4(3): mov %rbp,%rdi
14fd7(5): call 0xffff43e9(%rip)
14fdc(4): mov 0x4c(%rsp),%eax
14fe0(2): test %eax,%eax
14fe2(6): jz 0xfffff63a(%rip)
14fe8(5): jmp 0xfffff614(%rip)
14fed(8): mov $0xc,0x4c(%rsp)
14ff5(5): jmp 0xfffff5b7(%rip)
14ffa(3): mov %rbp,%rdi
14ffd(5): call 0xffff3423(%rip)
15002(8): mov $0x0,0x4c(%rsp)
1500a(5): jmp 0xfffff6ce(%rip)
1500f(5): mov 0x8(%rsp),%rcx
15014(5): cmp $0x0,0x28(%rcx)
15019(6): jnz 0xfffffe15(%rip)
1501f(4): mov 0x10(%rbx),%r10
15023(3): test %r10,%r10
15026(6): jz 0x2b4(%rip)
1502c(3): mov (%rbx),%rsi
1502f(7): lea 0x2b56(%rip),%r9
15036(3): xor %r8d,%r8d
15039(2): xor %edx,%edx
1503b(3): mov %rsi,%rcx
1503e(4): cmp $0xc,0x8(%rcx)
15042(6): jnbe 0x2cc(%rip)
15048(4): movzx 0x8(%rcx),%edi
1504c(4): movsxd 0x0(%r9,%rdi,4),%rdi
15050(3): add %r9,%rdi
15053(2): jmp %rdi
15055(2): xor %ebp,%ebp
15057(5): mov $0x1,%esi
1505c(5): jmp 0xfffff331(%rip)
15061(5): mov 0x28(%rsp),%r14
15066(5): mov $0x1,%ecx
1506b(3): mov %r12,%rdx
1506e(3): mov %rbx,%rsi
15071(3): mov %r14,%rdi
15074(5): call 0xffff59ac(%rip)
15079(5): mov $0x2,%ecx
1507e(3): mov %r12,%rdx
15081(3): mov %rbx,%rsi
15084(3): mov %r14,%rdi
15087(4): mov %rax,0x50(%rbx)
1508b(5): call 0xffff5995(%rip)
15090(5): mov $0x6,%ecx
15095(4): mov %rax,0x58(%rbx)
15099(3): mov %r12,%rdx
1509c(3): mov %rbx,%rsi
1509f(3): mov %r14,%rdi
150a2(5): call 0xffff597e(%rip)
150a7(5): cmp $0x0,0x50(%rbx)
150ac(4): mov %rax,0x60(%rbx)
150b0(2): jz 0x12(%rip)
150b2(5): cmp $0x0,0x58(%rbx)
150b7(2): jz 0xb(%rip)
150b9(3): test %rax,%rax
150bc(6): jnz 0xfffffeb9(%rip)
150c2(5): mov 0x50(%rsp),%r15d
150c7(5): jmp 0xfffffeb8(%rip)
150cc(4): mov 0x20(%rdx),%rax
150d0(4): mov 0x38(%rax),%r9
150d4(5): jmp 0xfffffa15(%rip)
150d9(4): mov 0x20(%rdx),%rax
150dd(4): mov 0x38(%rax),%rcx
150e1(5): jmp 0xfffff9f3(%rip)
150e6(3): mov %rbx,%rdi
150e9(5): mov $0xe8,%esi
150ee(5): call 0xfffecd12(%rip)
150f3(3): test %rax,%rax
150f6(3): mov %rax,%rbx
150f9(6): jz 0x198(%rip)
150ff(5): mov 0x8(%rsp),%rax
15104(8): mov $0xe8,0x8(%rax)
1510c(3): mov %rbx,(%rax)
1510f(5): jmp 0xfffff1e3(%rip)
15114(3): mov %rcx,(%rax)
15117(4): mov %r9,0x8(%rax)
1511b(5): jmp 0xfffff91a(%rip)
15120(8): mov $0x0,0x4c(%rsp)
15128(5): jmp 0xfffff5b0(%rip)
1512d(8): mov $0x1,0x8(%r10)
15135(3): mov %rcx,(%rax)
15138(5): jmp 0xfffff8fd(%rip)
1513d(3): mov %rbp,%rdi
15140(5): call 0xffff3270(%rip)
15145(8): mov $0x0,0x4c(%rsp)
1514d(5): jmp 0xfffff58b(%rip)
15152(8): mov $0xc,0x4c(%rsp)
1515a(8): mov $0x0,0x68(%rbx)
15162(5): jmp 0xfffff44a(%rip)
15167(3): test %rax,%rax
1516a(6): jz 0x131(%rip)
15170(4): lea 0x70(%r15),%r13
15174(5): lea 0x60(%rsp),%r12
15179(4): sub $0xffffff80,%r15
1517d(2): xor %ecx,%ecx
1517f(2): xor %edx,%edx
15181(3): mov %r15,%rsi
15184(3): mov %r12,%r8
15187(3): mov %r13,%rdi
1518a(4): mov %rax,(%rsp)
1518e(5): mov $0x2,0x68(%rsp)
15193(5): call 0xffff51fd(%rip)
15198(4): mov (%rsp),%r9
1519c(3): mov %rax,%r11
1519f(5): jmp 0xfffff5dc(%rip)
151a4(5): call 0xfffec95c(%rip)
151a9(b): mov $0x0,0xe0(%r13)
151b4(5): jmp 0xfffff729(%rip)
151b9(3): mov %eax,%r8d
151bc(4): add $0x1,%rdx
151c0(4): add $0x10,%rcx
151c4(3): cmp %r10,%rdx
151c7(6): jnz 0xfffffe77(%rip)
151cd(3): or %r8b,%r14b
151d0(6): jz 0x10a(%rip)
151d6(3): mov %rdx,%rax
151d9(4): shl/sal $0x4,%rax
151dd(3): add %rsi,%rax
151e0(2): jmp 0x18(%rip)
151e2(3): cmp $0x5,%dl
151e5(2): jnz 0x6(%rip)
151e7(4): mov $0x7,0x8(%rsi)
151eb(4): add $0x10,%rsi
151ef(3): cmp %rsi,%rax
151f2(6): jz 0xe5(%rip)
151f8(4): movzx 0x8(%rsi),%edx
151fc(3): cmp $0x1,%dl
151ff(2): jnz 0xffffffe3(%rip)
15201(3): cmp $0x0,(%rsi)
15204(2): jns 0xffffffe7(%rip)
15206(4): and $0xdf,0xa(%rsi)
1520a(2): jmp 0xffffffe1(%rip)
1520c(4): nop 0x0(%rax)
15210(3): cmp $0x0,(%rcx)
15213(4): cmovs %eax,%r14d
15217(2): jmp 0xffffffa5(%rip)
15219(2): mov (%rcx),%edi
1521b(3): cmp $0x20,%edi
1521e(2): jz 0xffffff9e(%rip)
15220(6): jbe 0xa9(%rip)
15226(3): cmp $0x40,%edi
15229(2): jz 0xffffff93(%rip)
1522b(3): add $0x80,%edi
1522e(2): jz 0xffffff8e(%rip)
15230(5): jmp 0xfffffbfe(%rip)
15235(3): nop (%rax)
15238(3): mov (%rcx),%rdi
1523b(5): cmp $0x0,0x10(%rdi)
15240(6): jnz 0xfffffbee(%rip)
15246(5): cmp $0x0,0x18(%rdi)
1524b(6): jz 0xffffff71(%rip)
15251(5): jmp 0xfffffbdd(%rip)
15256(a): nop 0x0(%rax,%rax,1)
15260(3): mov %eax,%r15d
15263(5): jmp 0xfffffd1c(%rip)
15268(8): mov $0x0,0x8(%r15)
15270(7): mov $0x0,(%r15)
15277(5): jmp 0xfffffb73(%rip)
1527c(5): mov 0x8(%rsp),%rax
15281(8): mov $0xc,0x4c(%rsp)
15289(3): mov (%rax),%r13
1528c(5): jmp 0xfffff320(%rip)
15291(5): mov $0xc,%eax
15296(5): jmp 0xfffff386(%rip)
1529b(5): mov 0x8(%rsp),%rax
152a0(8): mov $0x0,0x68(%rbx)
152a8(3): mov (%rax),%r13
152ab(5): jmp 0xfffff301(%rip)
152b0(8): mov $0x0,0x8(%rcx)
152b8(7): mov $0x0,(%rcx)
152bf(5): mov $0xc,%eax
152c4(5): jmp 0xfffff2dc(%rip)
152c9(3): cmp $0x10,%edi
152cc(6): jz 0xfffffef0(%rip)
152d2(5): jmp 0xfffffb5c(%rip)
152d7(3): mov %r8d,%r14d
152da(8): cmp $0x0,0x98(%rbx)
152e2(7): movzx 0xb0(%rbx),%edx
152e9(a): mov $0x1,0xb4(%rbx)
152f3(3): setnle %al
152f6(3): and $0xf9,%edx
152f9(3): or %r14d,%eax
152fc(3): and $0x1,%eax
152ff(2): add %eax,%eax
15301(2): or %edx,%eax
15303(6): mov %al,0xb0(%rbx)
15309(5): jmp 0xfffffb25(%rip)
1530e(5): call 0xfffec802(%rip)
15313(7): lea 0x28e6(%rip),%rcx
1531a(7): lea 0x2307(%rip),%rsi
15321(7): lea 0x23c5(%rip),%rdi
15328(5): mov $0x5b0,%edx
1532d(5): call 0xfffec963(%rip)
15332(7): lea 0x28c7(%rip),%rcx
15339(7): lea 0x22e8(%rip),%rsi
15340(7): lea 0x2301(%rip),%rdi
15347(5): mov $0x5c2,%edx
1534c(5): call 0xfffec944(%rip)
15351(7): lea 0x28a8(%rip),%rcx
15358(7): lea 0x22c9(%rip),%rsi
1535f(7): lea 0x237d(%rip),%rdi
15366(5): mov $0x5af,%edx
1536b(5): call 0xfffec925(%rip)
15370(5): call 0xfffec8b0(%rip)

"rpl_re_compile_pattern" :
15380(4): sub $0x8,%rsp
15384(7): mov 0x206ff5(%rip),%rcx
1538b(3): mov %rdi,%r8
1538e(3): mov %rdx,%rdi
15391(3): mov %rcx,%rax
15394(4): shr $0x19,%rax
15398(3): and $0x1,%eax
1539b(3): shl/sal $0x4,%eax
1539e(2): mov %eax,%edx
153a0(4): movzx 0x38(%rdi),%eax
153a4(3): and $0xef,%eax
153a7(2): or %edx,%eax
153a9(3): mov %rsi,%rdx
153ac(3): mov %r8,%rsi
153af(3): or $0x80,%eax
153b2(3): mov %al,0x38(%rdi)
153b5(5): call 0xffffeecb(%rip)
153ba(2): test %eax,%eax
153bc(2): jz 0x2c(%rip)
153be(7): lea 0x289b(%rip),%rdx
153c5(2): cwde 
153c7(7): lea 0x2932(%rip),%rsi
153ce(2): xor %edi,%edi
153d0(4): add 0x0(%rdx,%rax,8),%rsi
153d4(5): mov $0x5,%edx
153d9(4): add $0x8,%rsp
153dd(5): jmp 0xfffec813(%rip)
153e2(6): nop 0x0(%rax,%rax,1)
153e8(2): xor %eax,%eax
153ea(4): add $0x8,%rsp
153ee(1): ret near (%rsp)

"rpl_re_set_syntax" :
153f0(7): mov 0x206f89(%rip),%rax
153f7(7): mov %rdi,0x206f82(%rip)
153fe(1): ret near (%rsp)

"rpl_re_compile_fastmap" :
15400(2): push %r12
15402(1): push %rbp
15403(2): xor %eax,%eax
15405(1): push %rbx
15406(4): mov 0x20(%rdi),%rbp
1540a(3): mov %rdi,%rbx
1540d(3): mov (%rdi),%r12
15410(4): lea 0x8(%rbp),%rdi
15414(3): mov %rbp,%rcx
15417(8): mov $0x0,0x0(%rbp)
1541f(b): mov $0x0,0xf8(%rbp)
1542a(4): and $0xfffffff8,%rdi
1542e(3): sub %rdi,%rcx
15431(6): add $0x100,%ecx
15437(3): shr $0x3,%ecx
1543a(3): REP stosd %rax,rdi(%es,10)
1543d(3): mov %rbp,%rcx
15440(3): mov %rbx,%rdi
15443(5): mov 0x48(%r12),%rsi
15448(4): lea 0x18(%rsi),%rdx
1544c(4): add $0x10,%rsi
15450(5): call 0xffff8500(%rip)
15455(5): mov 0x50(%r12),%rax
1545a(5): cmp %rax,0x48(%r12)
1545f(2): jz 0x1a(%rip)
15461(4): lea 0x18(%rax),%rdx
15465(4): lea 0x10(%rax),%rsi
15469(3): mov %rbp,%rcx
1546c(3): mov %rbx,%rdi
1546f(5): call 0xffff84e1(%rip)
15474(5): mov 0x48(%r12),%rax
15479(5): mov 0x58(%r12),%rsi
1547e(3): cmp %rax,%rsi
15481(2): jz 0x1a(%rip)
15483(4): lea 0x18(%rsi),%rdx
15487(3): mov %rbp,%rcx
1548a(4): add $0x10,%rsi
1548e(3): mov %rbx,%rdi
15491(5): call 0xffff84bf(%rip)
15496(5): mov 0x48(%r12),%rax
1549b(5): mov 0x60(%r12),%rsi
154a0(3): cmp %rax,%rsi
154a3(2): jz 0x15(%rip)
154a5(4): lea 0x18(%rsi),%rdx
154a9(3): mov %rbp,%rcx
154ac(4): add $0x10,%rsi
154b0(3): mov %rbx,%rdi
154b3(5): call 0xffff849d(%rip)
154b8(4): or $0x8,0x38(%rbx)
154bc(2): xor %eax,%eax
154be(1): pop %rbx
154bf(1): pop %rbp
154c0(2): pop %r12
154c2(1): ret near (%rsp)

"re_search_stub" :
154d0(2): push %r15
154d2(2): push %r14
154d4(3): mov %r8,%rax
154d7(2): push %r13
154d9(2): push %r12
154db(3): add %rcx,%r8
154de(1): push %rbp
154df(1): push %rbx
154e0(4): sub $0x38,%rsp
154e4(3): test %rcx,%rcx
154e7(4): mov 0x78(%rsp),%ebx
154eb(5): mov 0x70(%rsp),%r12
154f0(4): mov %ebx,0x28(%rsp)
154f4(6): js 0x33c(%rip)
154fa(3): cmp %rdx,%rcx
154fd(6): jnle 0x333(%rip)
15503(3): cmp %rdx,%r8
15506(3): mov %rcx,%rbx
15509(3): mov %rdi,%r15
1550c(6): jnle 0x284(%rip)
15512(3): test %rax,%rax
15515(2): js 0xb(%rip)
15517(3): cmp %r8,%rcx
1551a(6): jnle 0x276(%rip)
15520(3): test %r8,%r8
15523(6): js 0x2e5(%rip)
15529(3): test %rax,%rax
1552c(2): jns 0xb(%rip)
1552e(3): cmp %r8,%rbx
15531(6): jle 0x2d7(%rip)
15537(5): movzx 0x38(%r15),%eax
1553c(3): mov %eax,%r13d
1553f(4): shr $0x5,%r13b
15543(3): mov %r13d,%edi
15546(3): and $0x3,%edi
15549(3): cmp %rbx,%r8
1554c(4): mov %edi,0x2c(%rsp)
15550(2): jle 0x11(%rip)
15552(5): cmp $0x0,0x20(%r15)
15557(2): jz 0xa(%rip)
15559(2): test $0x8,%al
1555b(6): jz 0x1f5(%rip)
15561(2): test $0x10,%al
15563(6): jnz 0x1cd(%rip)
15569(3): test %r12,%r12
1556c(6): jz 0x1c4(%rip)
15572(3): and $0x6,%eax
15575(4): mov 0x30(%r15),%rcx
15579(2): cmp $0x4,%al
1557b(6): jz 0x195(%rip)
15581(4): lea 0x1(%rcx),%r14
15585(3): mov %r14,%r13
15588(3): mov %r14,%rdi
1558b(4): shl/sal $0x4,%rdi
1558f(5): mov %r9,0x20(%rsp)
15594(5): mov %rdx,0x18(%rsp)
15599(5): mov %rsi,0x10(%rsp)
1559e(5): mov %r8,0x8(%rsp)
155a3(5): call 0xfffec7fd(%rip)
155a8(3): test %rax,%rax
155ab(3): mov %rax,%rbp
155ae(6): jz 0x292(%rip)
155b4(4): sub $0x8,%rsp
155b8(3): mov %rbx,%rcx
155bb(3): mov %r15,%rdi
155be(4): mov 0x34(%rsp),%eax
155c2(1): push %rax
155c3(1): push %rbp
155c4(2): push %r14
155c6(5): mov 0x40(%rsp),%r9
155cb(5): mov 0x28(%rsp),%r8
155d0(5): mov 0x38(%rsp),%rdx
155d5(5): mov 0x30(%rsp),%rsi
155da(5): call 0xffffab16(%rip)
155df(4): add $0x20,%rsp
155e3(2): test %eax,%eax
155e5(2): jz 0x33(%rip)
155e7(3): cmp $0x1,%eax
155ea(7): mov $0xffffffff,%r12
155f1(2): jz 0x9(%rip)
155f3(7): mov $0xfffffffe,%r12
155fa(3): mov %rbp,%rdi
155fd(5): call 0xfffec503(%rip)
15602(4): add $0x38,%rsp
15606(3): mov %r12,%rax
15609(1): pop %rbx
1560a(1): pop %rbp
1560b(2): pop %r12
1560d(2): pop %r13
1560f(2): pop %r14
15611(2): pop %r15
15613(1): ret near (%rsp)
15614(4): nop 0x0(%rax)
15618(3): test %r12,%r12
1561b(6): jz 0xcd(%rip)
15621(5): movzx 0x38(%r15),%eax
15626(4): lea 0x1(%r13),%rdx
1562a(2): shr $0x1,%al
1562c(3): and $0x3,%eax
1562f(6): jz 0x171(%rip)
15635(3): cmp $0x1,%eax
15638(6): jz 0x218(%rip)
1563e(3): cmp $0x2,%eax
15641(6): jnz 0x2ef(%rip)
15647(4): cmp (%r12),%r14
1564b(6): jnbe 0x2c6(%rip)
15651(6): mov $0x2,%r9d
15657(3): test %r13,%r13
1565a(6): jle 0x26e(%rip)
15660(5): mov 0x8(%r12),%r8
15665(5): mov 0x10(%r12),%rdi
1566a(8): lea 0x0(,%r13,8),%rsi
15672(3): mov %r13,%rdx
15675(2): xor %eax,%eax
15677(9): nop 0x0(%rax,%rax,1)
15680(5): mov 0x0(%rbp,%rax,2),%rcx
15685(4): mov %rcx,0x0(%r8,%rax,1)
15689(5): mov 0x8(%rbp,%rax,2),%rcx
1568e(4): mov %rcx,0x0(%rdi,%rax,1)
15692(4): add $0x8,%rax
15696(3): cmp %rax,%rsi
15699(2): jnz 0xffffffe7(%rip)
1569b(4): cmp %rdx,(%r12)
1569f(2): jbe 0x2e(%rip)
156a1(5): mov 0x10(%r12),%rsi
156a6(5): mov 0x8(%r12),%rcx
156ab(7): mov $0xffffffff,%rax
156b2(6): nop 0x0(%rax,%rax,1)
156b8(4): mov %rax,0x0(%rsi,%rdx,8)
156bc(4): add $0x1,%r13
156c0(4): mov %rax,0x0(%rcx,%rdx,8)
156c4(4): cmp (%r12),%r13
156c8(3): mov %r13,%rdx
156cb(2): jb 0xffffffed(%rip)
156cd(5): movzx 0x38(%r15),%eax
156d2(4): lea 0x0(%r9,%r9,1),%r13d
156d6(3): and $0xf9,%eax
156d9(3): or %r13d,%eax
156dc(2): test $0x6,%al
156de(4): mov %al,0x38(%r15)
156e2(6): jz 0xffffff11(%rip)
156e8(5): cmp $0x0,0x28(%rsp)
156ed(4): mov 0x0(%rbp),%r12
156f1(6): jz 0xffffff09(%rip)
156f7(3): cmp %rbx,%r12
156fa(6): jnz 0x1f8(%rip)
15700(4): mov 0x8(%rbp),%r12
15704(3): sub %rbx,%r12
15707(5): jmp 0xfffffef3(%rip)
1570c(4): nop 0x0(%rax)
15710(4): mov (%r12),%r14
15714(3): cmp %rcx,%r14
15717(6): jnbe 0xfffffe6a(%rip)
1571d(3): test %r14,%r14
15720(3): mov %r14,%r13
15723(6): jnle 0xfffffe65(%rip)
15729(7): nop 0x0(%rax)
15730(5): mov $0x10,%edi
15735(6): mov $0x1,%r14d
1573b(6): mov $0x1,%r13d
15741(3): xor %r12d,%r12d
15744(5): jmp 0xfffffe4b(%rip)
15749(7): nop 0x0(%rax)
15750(3): mov %r15,%rdi
15753(5): mov %r9,0x20(%rsp)
15758(5): mov %rdx,0x18(%rsp)
1575d(5): mov %rsi,0x10(%rsp)
15762(5): mov %r8,0x8(%rsp)
15767(5): call 0xfffffc99(%rip)
1576c(5): movzx 0x38(%r15),%eax
15771(5): mov 0x20(%rsp),%r9
15776(5): mov 0x18(%rsp),%rdx
1577b(5): mov 0x10(%rsp),%rsi
15780(5): mov 0x8(%rsp),%r8
15785(5): jmp 0xfffffddc(%rip)
1578a(6): nop 0x0(%rax,%rax,1)
15790(3): mov %rdx,%r8
15793(5): jmp 0xfffffda4(%rip)
15798(8): nop 0x0(%rax,%rax,1)
157a0(8): lea 0x0(,%rdx,8),%r14
157a8(5): mov %rdx,0x8(%rsp)
157ad(3): mov %r14,%rdi
157b0(5): call 0xfffec5f0(%rip)
157b5(3): test %rax,%rax
157b8(5): mov %rax,0x8(%r12)
157bd(5): mov 0x8(%rsp),%rdx
157c2(6): jz 0x118(%rip)
157c8(3): mov %r14,%rdi
157cb(5): mov %rdx,0x8(%rsp)
157d0(5): mov %rax,0x10(%rsp)
157d5(5): call 0xfffec5cb(%rip)
157da(3): test %rax,%rax
157dd(5): mov %rax,0x10(%r12)
157e2(5): mov 0x8(%rsp),%rdx
157e7(5): mov 0x10(%rsp),%rcx
157ec(6): jz 0xe6(%rip)
157f2(4): mov %rdx,(%r12)
157f6(6): mov $0x1,%r9d
157fc(5): jmp 0xfffffe5b(%rip)
15801(7): nop 0x0(%rax)
15808(5): movzx 0x38(%r15),%eax
1580d(3): xor %r8d,%r8d
15810(3): mov %eax,%r13d
15813(4): shr $0x5,%r13b
15817(3): mov %r13d,%edi
1581a(3): and $0x3,%edi
1581d(4): mov %edi,0x2c(%rsp)
15821(5): jmp 0xfffffd40(%rip)
15826(a): nop 0x0(%rax,%rax,1)
15830(7): mov $0xffffffff,%r12
15837(5): jmp 0xfffffdcb(%rip)
1583c(4): nop 0x0(%rax)
15840(7): mov $0xfffffffe,%r12
15847(5): jmp 0xfffffdbb(%rip)
1584c(4): nop 0x0(%rax)
15850(4): cmp %rdx,(%r12)
15854(6): mov $0x1,%r9d
1585a(6): jnb 0xfffffdfd(%rip)
15860(8): lea 0x0(,%rdx,8),%rcx
15868(5): mov 0x8(%r12),%rdi
1586d(5): mov %r9b,0x18(%rsp)
15872(5): mov %rdx,0x10(%rsp)
15877(3): mov %rcx,%rsi
1587a(5): mov %rcx,0x8(%rsp)
1587f(5): call 0xfffec581(%rip)
15884(3): test %rax,%rax
15887(3): mov %rax,%r14
1588a(2): jz 0x50(%rip)
1588c(5): mov 0x8(%rsp),%rcx
15891(5): mov 0x10(%r12),%rdi
15896(3): mov %rcx,%rsi
15899(5): call 0xfffec567(%rip)
1589e(3): test %rax,%rax
158a1(5): mov 0x10(%rsp),%rdx
158a6(6): movzx 0x18(%rsp),%r9d
158ac(2): jz 0x36(%rip)
158ae(5): mov %r14,0x8(%r12)
158b3(5): mov %rax,0x10(%r12)
158b8(4): mov %rdx,(%r12)
158bc(5): jmp 0xfffffd9b(%rip)
158c1(7): nop 0x0(%rax)
158c8(2): xor %edx,%edx
158ca(3): xor %r13d,%r13d
158cd(5): jmp 0xfffffdce(%rip)
158d2(3): mov %rcx,%rdi
158d5(5): call 0xfffec22b(%rip)
158da(3): xor %r9d,%r9d
158dd(5): jmp 0xfffffdf0(%rip)
158e2(3): mov %r14,%rdi
158e5(5): call 0xfffec21b(%rip)
158ea(3): xor %r9d,%r9d
158ed(5): jmp 0xfffffde0(%rip)
158f2(7): lea 0x22d7(%rip),%rcx
158f9(7): lea 0x1d08(%rip),%rsi
15900(7): lea 0x1e26(%rip),%rdi
15907(5): mov $0x1be,%edx
1590c(5): call 0xfffec384(%rip)
15911(7): lea 0x22a8(%rip),%rcx
15918(7): lea 0x1ce9(%rip),%rsi
1591f(7): lea 0x1def(%rip),%rdi
15926(5): mov $0x1fb,%edx
1592b(5): call 0xfffec365(%rip)
15930(7): lea 0x2289(%rip),%rcx
15937(7): lea 0x1cca(%rip),%rsi
1593e(7): lea 0x1db3(%rip),%rdi
15945(5): mov $0x1f9,%edx
1594a(5): call 0xfffec346(%rip)

"re_search_2_stub" :
15950(2): push %r15
15952(2): push %r14
15954(2): push %r13
15956(2): push %r12
15958(3): mov %rdi,%r12
1595b(1): push %rbp
1595c(1): push %rbx
1595d(3): mov %r8,%rbp
15960(3): mov %rdx,%rbx
15963(3): mov %rbp,%rdx
15966(4): sub $0x28,%rsp
1596a(4): shr $0x3f,%rdx
1596e(5): mov 0x70(%rsp),%rax
15973(2): mov %edx,%edi
15975(5): mov 0x78(%rsp),%r8d
1597a(4): shr $0x3f,%rax
1597e(3): or %al,%dil
15981(6): jnz 0xcf(%rip)
15987(3): test %rbx,%rbx
1598a(6): js 0xc6(%rip)
15990(3): mov %rbx,%r15
15993(3): add %rbp,%r15
15996(6): jo 0xba(%rip)
1599c(3): test %rbp,%rbp
1599f(3): mov %rcx,%r14
159a2(3): mov %r9,%rcx
159a5(6): jz 0xbb(%rip)
159ab(3): xor %r13d,%r13d
159ae(3): test %rbx,%rbx
159b1(5): mov %rsi,0x8(%rsp)
159b6(2): jnz 0x4a(%rip)
159b8(4): movzx %r8b,%r8d
159bc(3): mov %r15,%rdx
159bf(3): mov %r14,%rsi
159c2(2): push %r8
159c4(4): push 0x70(%rsp)
159c8(3): mov %r12,%rdi
159cb(8): mov 0x80(%rsp),%r9
159d3(5): mov 0x70(%rsp),%r8
159d8(5): call 0xfffffaf8(%rip)
159dd(3): mov %r13,%rdi
159e0(3): mov %rax,%rbx
159e3(5): call 0xfffec11d(%rip)
159e8(1): pop %rax
159e9(1): pop %rdx
159ea(4): add $0x28,%rsp
159ee(3): mov %rbx,%rax
159f1(1): pop %rbx
159f2(1): pop %rbp
159f3(2): pop %r12
159f5(2): pop %r13
159f7(2): pop %r14
159f9(2): pop %r15
159fb(1): ret near (%rsp)
159fc(4): nop 0x0(%rax)
15a00(3): mov %r15,%rdi
15a03(5): mov %r8d,0x1c(%rsp)
15a08(5): mov %r9,0x10(%rsp)
15a0d(5): call 0xfffec393(%rip)
15a12(3): test %rax,%rax
15a15(3): mov %rax,%r13
15a18(2): jz 0x38(%rip)
15a1a(5): mov 0x8(%rsp),%rsi
15a1f(3): mov %rbx,%rdx
15a22(3): mov %rax,%rdi
15a25(5): call 0xfffec34b(%rip)
15a2a(5): lea 0x0(%r13,%rbx,1),%rdi
15a2f(3): mov %r14,%rsi
15a32(3): mov %rbp,%rdx
15a35(3): mov %r13,%r14
15a38(5): call 0xfffec338(%rip)
15a3d(5): mov 0x10(%rsp),%rcx
15a42(5): mov 0x1c(%rsp),%r8d
15a47(5): jmp 0xffffff71(%rip)
15a4c(4): nop 0x0(%rax)
15a50(7): mov $0xfffffffe,%rbx
15a57(2): jmp 0xffffff93(%rip)
15a59(7): nop 0x0(%rax)
15a60(3): mov %rsi,%r14
15a63(3): xor %r13d,%r13d
15a66(5): jmp 0xffffff52(%rip)

"rpl_regcomp" :
15a70(2): mov %edx,%eax
15a72(2): push %r14
15a74(2): push %r13
15a76(3): and $0x1,%eax
15a79(2): push %r12
15a7b(1): push %rbp
15a7c(3): cmp $0x1,%eax
15a7f(1): push %rbx
15a80(3): mov %rdi,%rbx
15a83(3): sbb %r14,%r14
15a86(7): mov $0x0,(%rdi)
15a8d(8): mov $0x0,0x8(%rdi)
15a95(7): and $0xfd4fca,%r14d
15a9c(8): mov $0x0,0x10(%rdi)
15aa4(5): mov $0x100,%edi
15aa9(3): mov %rsi,%r12
15aac(2): mov %edx,%ebp
15aae(7): add $0x3b2fc,%r14
15ab5(5): call 0xfffec2eb(%rip)
15aba(3): test %rax,%rax
15abd(4): mov %rax,0x20(%rbx)
15ac1(6): jz 0xaf(%rip)
15ac7(3): mov %rbp,%r13
15aca(4): shl/sal $0x15,%r13
15ace(7): and $0x400000,%r13d
15ad5(3): or %r14,%r13
15ad8(4): test $0x4,%bpl
15adc(2): jnz 0x64(%rip)
15ade(4): and $0x7f,0x38(%rbx)
15ae2(4): movzx 0x38(%rbx),%edx
15ae6(3): shr $0x3,%ebp
15ae9(3): mov %r12,%rdi
15aec(3): and $0x1,%ebp
15aef(8): mov $0x0,0x28(%rbx)
15af7(3): shl/sal $0x4,%ebp
15afa(3): and $0xef,%edx
15afd(2): or %edx,%ebp
15aff(4): mov %bpl,0x38(%rbx)
15b03(5): call 0xfffec10d(%rip)
15b08(3): mov %r13,%rcx
15b0b(3): mov %rax,%rdx
15b0e(3): mov %r12,%rsi
15b11(3): mov %rbx,%rdi
15b14(5): call 0xffffe76c(%rip)
15b19(3): cmp $0x10,%eax
15b1c(2): mov %eax,%ebp
15b1e(2): jz 0x3a(%rip)
15b20(2): test %eax,%eax
15b22(2): jnz 0x3b(%rip)
15b24(3): mov %rbx,%rdi
15b27(5): call 0xfffff8d9(%rip)
15b2c(1): pop %rbx
15b2d(2): mov %ebp,%eax
15b2f(1): pop %rbp
15b30(2): pop %r12
15b32(2): pop %r13
15b34(2): pop %r14
15b36(1): ret near (%rsp)
15b37(9): nop 0x0(%rax,%rax,1)
15b40(4): and $0xffffffbf,%r13
15b44(4): or $0x80,0x38(%rbx)
15b48(7): or $0x100,%r13
15b4f(2): jmp 0xffffff93(%rip)
15b51(7): nop 0x0(%rax)
15b58(5): mov $0x8,%ebp
15b5d(4): mov 0x20(%rbx),%rdi
15b61(5): call 0xfffebf9f(%rip)
15b66(8): mov $0x0,0x20(%rbx)
15b6e(2): jmp 0xffffffbe(%rip)
15b70(5): mov $0xc,%ebp
15b75(1): pop %rbx
15b76(2): mov %ebp,%eax
15b78(1): pop %rbp
15b79(2): pop %r12
15b7b(2): pop %r13
15b7d(2): pop %r14
15b7f(1): ret near (%rsp)

"rpl_regerror" :
15b80(2): push %r13
15b82(2): push %r12
15b84(1): push %rbp
15b85(1): push %rbx
15b86(4): sub $0x8,%rsp
15b8a(3): cmp $0x10,%edi
15b8d(2): jnbe 0x63(%rip)
15b8f(7): lea 0x20ca(%rip),%rax
15b96(3): movsxd %edi,%rdi
15b99(7): lea 0x2160(%rip),%rsi
15ba0(3): mov %rdx,%rbp
15ba3(5): mov $0x5,%edx
15ba8(3): mov %rcx,%r12
15bab(4): add 0x0(%rax,%rdi,8),%rsi
15baf(2): xor %edi,%edi
15bb1(5): call 0xfffec03f(%rip)
15bb6(3): mov %rax,%rdi
15bb9(3): mov %rax,%r13
15bbc(5): call 0xfffec054(%rip)
15bc1(3): test %r12,%r12
15bc4(4): lea 0x1(%rax),%rbx
15bc8(2): jz 0x15(%rip)
15bca(3): cmp %r12,%rbx
15bcd(3): mov %rbx,%rdx
15bd0(2): jnbe 0x28(%rip)
15bd2(3): mov %r13,%rsi
15bd5(3): mov %rbp,%rdi
15bd8(5): call 0xfffec198(%rip)
15bdd(4): add $0x8,%rsp
15be1(3): mov %rbx,%rax
15be4(1): pop %rbx
15be5(1): pop %rbp
15be6(2): pop %r12
15be8(2): pop %r13
15bea(1): ret near (%rsp)
15beb(5): nop 0x0(%rax,%rax,1)
15bf0(5): call 0xfffebf20(%rip)
15bf5(3): nop (%rax)
15bf8(5): lea 0xffffffff(%r12),%rdx
15bfd(6): mov $0x0,0xffffffff(%rbp,%r12,1)
15c03(2): jmp 0xffffffcf(%rip)

"rpl_regfree" :
15c10(1): push %rbx
15c11(3): mov %rdi,%rbx
15c14(3): mov (%rdi),%rdi
15c17(3): test %rdi,%rdi
15c1a(2): jz 0x7(%rip)
15c1c(5): call 0xffff37e4(%rip)
15c21(4): mov 0x20(%rbx),%rdi
15c25(7): mov $0x0,(%rbx)
15c2c(8): mov $0x0,0x8(%rbx)
15c34(5): call 0xfffebecc(%rip)
15c39(4): mov 0x28(%rbx),%rdi
15c3d(8): mov $0x0,0x20(%rbx)
15c45(5): call 0xfffebebb(%rip)
15c4a(8): mov $0x0,0x28(%rbx)
15c52(1): pop %rbx
15c53(1): ret near (%rsp)

"rpl_regexec" :
15c60(7): test $0xfffffff8,%r8d
15c67(6): jnz 0x91(%rip)
15c6d(2): push %r13
15c6f(2): push %r12
15c71(3): mov %rdx,%r13
15c74(1): push %rbp
15c75(1): push %rbx
15c76(3): mov %rcx,%r12
15c79(3): mov %r8d,%ebx
15c7c(3): mov %rdi,%rbp
15c7f(4): sub $0x18,%rsp
15c83(4): test $0x4,%r8b
15c87(2): jnz 0x51(%rip)
15c89(3): mov %rsi,%rdi
15c8c(5): mov %rsi,0x8(%rsp)
15c91(5): call 0xfffebf7f(%rip)
15c96(2): xor %ecx,%ecx
15c98(4): test $0x10,0x38(%rbp)
15c9c(3): mov %rax,%rdx
15c9f(5): mov 0x8(%rsp),%rsi
15ca4(2): jz 0x42(%rip)
15ca6(4): sub $0x8,%rsp
15caa(1): push %rbx
15cab(2): push $0x0
15cad(2): push $0x0
15caf(3): mov %rbp,%rdi
15cb2(3): mov %rdx,%r9
15cb5(3): mov %rdx,%r8
15cb8(5): call 0xffffa438(%rip)
15cbd(4): add $0x20,%rsp
15cc1(2): test %eax,%eax
15cc3(3): setnz %al
15cc6(4): add $0x18,%rsp
15cca(1): pop %rbx
15ccb(3): movzx %al,%eax
15cce(1): pop %rbp
15ccf(2): pop %r12
15cd1(2): pop %r13
15cd3(1): ret near (%rsp)
15cd4(4): nop 0x0(%rax)
15cd8(4): test $0x10,0x38(%rbp)
15cdc(3): mov (%rcx),%rcx
15cdf(5): mov 0x8(%r12),%rdx
15ce4(2): jnz 0xffffffc2(%rip)
15ce6(4): sub $0x8,%rsp
15cea(1): push %rbx
15ceb(2): push %r12
15ced(2): push %r13
15cef(2): jmp 0xffffffc0(%rip)
15cf1(7): nop 0x0(%rax)
15cf8(5): mov $0x2,%eax
15cfd(1): ret near (%rsp)

"rpl_re_match" :
15d00(4): sub $0x8,%rsp
15d04(3): mov %rdx,%r9
15d07(2): push $0x1
15d09(2): push %r8
15d0b(3): xor %r8d,%r8d
15d0e(5): call 0xfffff7c2(%rip)
15d13(4): add $0x18,%rsp
15d17(1): ret near (%rsp)

"rpl_re_search" :
15d20(4): sub $0x8,%rsp
15d24(2): push $0x0
15d26(2): push %r9
15d28(3): mov %rdx,%r9
15d2b(5): call 0xfffff7a5(%rip)
15d30(4): add $0x18,%rsp
15d34(1): ret near (%rsp)

"rpl_re_match_2" :
15d40(4): sub $0x8,%rsp
15d44(2): push $0x1
15d46(4): push 0x20(%rsp)
15d4a(4): push 0x20(%rsp)
15d4e(2): push $0x0
15d50(5): call 0xfffffc00(%rip)
15d55(4): add $0x28,%rsp
15d59(1): ret near (%rsp)

"rpl_re_search_2" :
15d60(4): sub $0x8,%rsp
15d64(2): push $0x0
15d66(4): push 0x28(%rsp)
15d6a(4): push 0x28(%rsp)
15d6e(4): push 0x28(%rsp)
15d72(5): call 0xfffffbde(%rip)
15d77(4): add $0x28,%rsp
15d7b(1): ret near (%rsp)

"rpl_re_set_registers" :
15d80(3): test %rdx,%rdx
15d83(2): jnz 0x25(%rip)
15d85(4): and $0xf9,0x38(%rdi)
15d89(7): mov $0x0,(%rsi)
15d90(8): mov $0x0,0x10(%rsi)
15d98(8): mov $0x0,0x8(%rsi)
15da0(1): ret near (%rsp)
15da1(7): nop 0x0(%rax)
15da8(4): movzx 0x38(%rdi),%eax
15dac(3): and $0xf9,%eax
15daf(3): or $0x2,%eax
15db2(3): mov %al,0x38(%rdi)
15db5(3): mov %rdx,(%rsi)
15db8(4): mov %rcx,0x8(%rsi)
15dbc(4): mov %r8,0x10(%rsi)
15dc0(1): ret near (%rsp)

"close_stream" :
15dd0(2): push %r12
15dd2(1): push %rbp
15dd3(3): mov %rdi,%rbp
15dd6(1): push %rbx
15dd7(5): call 0xfffebd99(%rip)
15ddc(3): mov 0x0(%rbp),%ebx
15ddf(3): mov %rbp,%rdi
15de2(3): mov %rax,%r12
15de5(5): call 0xffff19ab(%rip)
15dea(3): and $0x20,%ebx
15ded(2): test %ebx,%ebx
15def(2): jnz 0x19(%rip)
15df1(2): test %eax,%eax
15df3(2): jz 0xc(%rip)
15df5(3): test %r12,%r12
15df8(5): mov $0xffffffff,%eax
15dfd(2): jz 0x3b(%rip)
15dff(1): pop %rbx
15e00(1): pop %rbp
15e01(2): pop %r12
15e03(1): ret near (%rsp)
15e04(4): nop 0x0(%rax)
15e08(2): test %eax,%eax
15e0a(2): jnz 0x1e(%rip)
15e0c(5): call 0xfffebd14(%rip)
15e11(6): mov $0x0,(%rax)
15e17(5): mov $0xffffffff,%eax
15e1c(1): pop %rbx
15e1d(1): pop %rbp
15e1e(2): pop %r12
15e20(1): ret near (%rsp)
15e21(7): nop 0x0(%rax)
15e28(1): pop %rbx
15e29(5): mov $0xffffffff,%eax
15e2e(1): pop %rbp
15e2f(2): pop %r12
15e31(1): ret near (%rsp)
15e32(6): nop 0x0(%rax,%rax,1)
15e38(5): call 0xfffebce8(%rip)
15e3d(3): cmp $0x9,(%rax)
15e40(1): pop %rbx
15e41(1): pop %rbp
15e42(2): pop %r12
15e44(3): setnz %al
15e47(3): movzx %al,%eax
15e4a(2): neg %eax
15e4c(1): ret near (%rsp)

"hard_locale" :
15e50(4): sub $0x8,%rsp
15e54(2): xor %esi,%esi
15e56(5): call 0xfffebfca(%rip)
15e5b(3): mov %rax,%rdx
15e5e(5): mov $0x1,%eax
15e63(3): test %rdx,%rdx
15e66(2): jz 0x1f(%rip)
15e68(7): lea 0x2021(%rip),%rdi
15e6f(5): mov $0x2,%ecx
15e74(3): mov %rdx,%rsi
15e77(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
15e79(3): setnbe %cl
15e7c(3): sbb $0x0,%cl
15e7f(2): xor %eax,%eax
15e81(2): test %cl,%cl
15e83(2): jnz 0xd(%rip)
15e85(4): add $0x8,%rsp
15e89(1): ret near (%rsp)
15e8a(6): nop 0x0(%rax,%rax,1)
15e90(7): lea 0x1ffb(%rip),%rdi
15e97(5): mov $0x6,%ecx
15e9c(3): mov %rdx,%rsi
15e9f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
15ea1(3): setnbe %al
15ea4(2): sbb $0x0,%al
15ea6(2): test %al,%al
15ea8(3): setnz %al
15eab(4): add $0x8,%rsp
15eaf(1): ret near (%rsp)

"locale_charset" :
15eb0(4): sub $0x8,%rsp
15eb4(5): mov $0xe,%edi
15eb9(5): call 0xfffebf17(%rip)
15ebe(3): test %rax,%rax
15ec1(2): jz 0x1f(%rip)
15ec3(3): cmp $0x0,(%rax)
15ec6(7): lea 0x1fcb(%rip),%rdx
15ecd(4): cmove %rdx,%rax
15ed1(4): add $0x8,%rsp
15ed5(1): ret near (%rsp)
15ed6(a): nop 0x0(%rax,%rax,1)
15ee0(7): lea 0x1fb1(%rip),%rax
15ee7(4): add $0x8,%rsp
15eeb(1): ret near (%rsp)

"__libc_csu_init" :
15ef0(2): push %r15
15ef2(2): push %r14
15ef4(3): mov %rdx,%r15
15ef7(2): push %r13
15ef9(2): push %r12
15efb(7): lea 0x205aae(%rip),%r12
15f02(1): push %rbp
15f03(7): lea 0x205aae(%rip),%rbp
15f0a(1): push %rbx
15f0b(3): mov %edi,%r13d
15f0e(3): mov %rsi,%r14
15f11(3): sub %r12,%rbp
15f14(4): sub $0x8,%rsp
15f18(4): sar $0x3,%rbp
15f1c(5): call 0xfffebb7c(%rip)
15f21(3): test %rbp,%rbp
15f24(2): jz 0x22(%rip)
15f26(2): xor %ebx,%ebx
15f28(8): nop 0x0(%rax,%rax,1)
15f30(3): mov %r15,%rdx
15f33(3): mov %r14,%rsi
15f36(3): mov %r13d,%edi
15f39(4): call 0x0(%r12,%rbx,8)
15f3d(4): add $0x1,%rbx
15f41(3): cmp %rbx,%rbp
15f44(2): jnz 0xffffffec(%rip)
15f46(4): add $0x8,%rsp
15f4a(1): pop %rbx
15f4b(1): pop %rbp
15f4c(2): pop %r12
15f4e(2): pop %r13
15f50(2): pop %r14
15f52(2): pop %r15
15f54(1): ret near (%rsp)

"atexit" :
15f70(7): mov 0x206091(%rip),%rdx
15f77(2): xor %esi,%esi
15f79(5): jmp 0xfffebf47(%rip)

"_fini" :
15f80(4): sub $0x8,%rsp
15f84(4): add $0x8,%rsp
15f88(1): ret near (%rsp)

