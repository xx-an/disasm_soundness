
"abort@plt" :
16f0(6): jmp 0x20c70a(%rip)
16f6(5): push $0x0

"__errno_location@plt" :
1700(6): jmp 0x20c702(%rip)
1706(5): push $0x1

"strncmp@plt" :
1710(6): jmp 0x20c6fa(%rip)
1716(5): push $0x2

"_exit@plt" :
1720(6): jmp 0x20c6f2(%rip)
1726(5): push $0x3

"__fpending@plt" :
1730(6): jmp 0x20c6ea(%rip)
1736(5): push $0x4

"qsort@plt" :
1740(6): jmp 0x20c6e2(%rip)
1746(5): push $0x5

"fcntl@plt" :
1750(6): jmp 0x20c6da(%rip)
1756(5): push $0x6

"textdomain@plt" :
1760(6): jmp 0x20c6d2(%rip)
1766(5): push $0x7

"fclose@plt" :
1770(6): jmp 0x20c6ca(%rip)
1776(5): push $0x8

"bindtextdomain@plt" :
1780(6): jmp 0x20c6c2(%rip)
1786(5): push $0x9

"dcgettext@plt" :
1790(6): jmp 0x20c6ba(%rip)
1796(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
17a0(6): jmp 0x20c6b2(%rip)
17a6(5): push $0xb

"strlen@plt" :
17b0(6): jmp 0x20c6aa(%rip)
17b6(5): push $0xc

"__lxstat@plt" :
17c0(6): jmp 0x20c6a2(%rip)
17c6(5): push $0xd

"openat@plt" :
17d0(6): jmp 0x20c69a(%rip)
17d6(5): push $0xe

"__stack_chk_fail@plt" :
17e0(6): jmp 0x20c692(%rip)
17e6(5): push $0xf

"getopt_long@plt" :
17f0(6): jmp 0x20c68a(%rip)
17f6(5): push $0x10

"mbrtowc@plt" :
1800(6): jmp 0x20c682(%rip)
1806(5): push $0x11

"__fxstatat@plt" :
1810(6): jmp 0x20c67a(%rip)
1816(5): push $0x12

"strrchr@plt" :
1820(6): jmp 0x20c672(%rip)
1826(5): push $0x13

"lseek@plt" :
1830(6): jmp 0x20c66a(%rip)
1836(5): push $0x14

"__assert_fail@plt" :
1840(6): jmp 0x20c662(%rip)
1846(5): push $0x15

"memset@plt" :
1850(6): jmp 0x20c65a(%rip)
1856(5): push $0x16

"close@plt" :
1860(6): jmp 0x20c652(%rip)
1866(5): push $0x17

"closedir@plt" :
1870(6): jmp 0x20c64a(%rip)
1876(5): push $0x18

"memcmp@plt" :
1880(6): jmp 0x20c642(%rip)
1886(5): push $0x19

"fputs_unlocked@plt" :
1890(6): jmp 0x20c63a(%rip)
1896(5): push $0x1a

"calloc@plt" :
18a0(6): jmp 0x20c632(%rip)
18a6(5): push $0x1b

"strcmp@plt" :
18b0(6): jmp 0x20c62a(%rip)
18b6(5): push $0x1c

"dirfd@plt" :
18c0(6): jmp 0x20c622(%rip)
18c6(5): push $0x1d

"umask@plt" :
18d0(6): jmp 0x20c61a(%rip)
18d6(5): push $0x1e

"memcpy@plt" :
18e0(6): jmp 0x20c612(%rip)
18e6(5): push $0x1f

"fileno@plt" :
18f0(6): jmp 0x20c60a(%rip)
18f6(5): push $0x20

"__xstat@plt" :
1900(6): jmp 0x20c602(%rip)
1906(5): push $0x21

"readdir@plt" :
1910(6): jmp 0x20c5fa(%rip)
1916(5): push $0x22

"malloc@plt" :
1920(6): jmp 0x20c5f2(%rip)
1926(5): push $0x23

"fflush@plt" :
1930(6): jmp 0x20c5ea(%rip)
1936(5): push $0x24

"fchmodat@plt" :
1940(6): jmp 0x20c5e2(%rip)
1946(5): push $0x25

"nl_langinfo@plt" :
1950(6): jmp 0x20c5da(%rip)
1956(5): push $0x26

"__fxstat@plt" :
1960(6): jmp 0x20c5d2(%rip)
1966(5): push $0x27

"__freading@plt" :
1970(6): jmp 0x20c5ca(%rip)
1976(5): push $0x28

"fchdir@plt" :
1980(6): jmp 0x20c5c2(%rip)
1986(5): push $0x29

"realloc@plt" :
1990(6): jmp 0x20c5ba(%rip)
1996(5): push $0x2a

"setlocale@plt" :
19a0(6): jmp 0x20c5b2(%rip)
19a6(5): push $0x2b

"__printf_chk@plt" :
19b0(6): jmp 0x20c5aa(%rip)
19b6(5): push $0x2c

"memmove@plt" :
19c0(6): jmp 0x20c5a2(%rip)
19c6(5): push $0x2d

"error@plt" :
19d0(6): jmp 0x20c59a(%rip)
19d6(5): push $0x2e

"open@plt" :
19e0(6): jmp 0x20c592(%rip)
19e6(5): push $0x2f

"fseeko@plt" :
19f0(6): jmp 0x20c58a(%rip)
19f6(5): push $0x30

"fdopendir@plt" :
1a00(6): jmp 0x20c582(%rip)
1a06(5): push $0x31

"fstatfs@plt" :
1a10(6): jmp 0x20c57a(%rip)
1a16(5): push $0x32

"__cxa_atexit@plt" :
1a20(6): jmp 0x20c572(%rip)
1a26(5): push $0x33

"exit@plt" :
1a30(6): jmp 0x20c56a(%rip)
1a36(5): push $0x34

"fwrite@plt" :
1a40(6): jmp 0x20c562(%rip)
1a46(5): push $0x35

"__fprintf_chk@plt" :
1a50(6): jmp 0x20c55a(%rip)
1a56(5): push $0x36

"mbsinit@plt" :
1a60(6): jmp 0x20c552(%rip)
1a66(5): push $0x37

"iswprint@plt" :
1a70(6): jmp 0x20c54a(%rip)
1a76(5): push $0x38

"__ctype_b_loc@plt" :
1a80(6): jmp 0x20c542(%rip)
1a86(5): push $0x39

".plt.got" :
1a90(6): jmp 0x20c53a(%rip)
1a96(2): nop 
1a98(6): jmp 0x20c55a(%rip)
1a9e(2): nop 

"_init" :
16c8(4): sub $0x8,%rsp
16cc(7): mov 0x20c915(%rip),%rax
16d3(3): test %rax,%rax
16d6(2): jz 0x4(%rip)
16d8(2): call %rax
16da(4): add $0x8,%rsp
16de(1): ret near (%rsp)

"main" :
1aa0(2): push %r15
1aa2(2): push %r14
1aa4(3): xor %r15d,%r15d
1aa7(2): push %r13
1aa9(2): push %r12
1aab(3): xor %r14d,%r14d
1aae(1): push %rbp
1aaf(1): push %rbx
1ab0(3): movsxd %edi,%rbp
1ab3(3): mov %rsi,%rbx
1ab6(3): xor %r12d,%r12d
1ab9(3): xor %r13d,%r13d
1abc(7): sub $0xf8,%rsp
1ac3(3): mov (%rsi),%rdi
1ac6(9): mov $0x28,%rax
1acf(8): mov %rax,0xe8(%rsp)
1ad7(2): xor %eax,%eax
1ad9(9): mov $0x0,0x38(%rsp)
1ae2(5): call 0x1a3e(%rip)
1ae7(7): lea 0x90d3(%rip),%rsi
1aee(5): mov $0x6,%edi
1af3(5): call 0xfffffead(%rip)
1af8(7): lea 0x81ae(%rip),%rsi
1aff(7): lea 0x817e(%rip),%rdi
1b06(5): call 0xfffffc7a(%rip)
1b0b(7): lea 0x8172(%rip),%rdi
1b12(5): call 0xfffffc4e(%rip)
1b17(7): lea 0x1202(%rip),%rdi
1b1e(5): call 0x80b2(%rip)
1b23(5): lea 0x38(%rsp),%rax
1b28(7): mov $0x0,0x20c5d9(%rip)
1b2f(7): mov $0x0,0x20c5d3(%rip)
1b36(7): mov $0x0,0x20c5cd(%rip)
1b3d(5): mov %rax,0x18(%rsp)
1b42(6): nop 0x0(%rax,%rax,1)
1b48(7): lea 0x20bef1(%rip),%rcx
1b4f(7): lea 0x86fa(%rip),%rdx
1b56(3): xor %r8d,%r8d
1b59(3): mov %rbx,%rsi
1b5c(2): mov %ebp,%edi
1b5e(5): call 0xfffffc92(%rip)
1b63(3): cmp $0xff,%eax
1b66(6): jz 0x1ee(%rip)
1b6c(3): cmp $0x63,%eax
1b6f(6): jz 0x171(%rip)
1b75(2): jle 0x4b(%rip)
1b77(3): cmp $0x76,%eax
1b7a(6): jz 0x176(%rip)
1b80(6): jle 0xb0(%rip)
1b86(5): cmp $0x80,%eax
1b8b(6): jz 0x185(%rip)
1b91(6): jle 0x9a1(%rip)
1b97(5): cmp $0x81,%eax
1b9c(6): jz 0x164(%rip)
1ba2(5): cmp $0x82,%eax
1ba7(6): jnz 0xb02(%rip)
1bad(7): mov 0x20c504(%rip),%r15
1bb4(2): jmp 0xffffff94(%rip)
1bb6(a): nop 0x0(%rax,%rax,1)
1bc0(3): cmp $0x37,%eax
1bc3(6): jnle 0x8d(%rip)
1bc9(3): cmp $0x30,%eax
1bcc(6): jnl 0xac(%rip)
1bd2(5): cmp $0xffffff7e,%eax
1bd7(6): jz 0xb33(%rip)
1bdd(6): jnle 0x89c(%rip)
1be3(5): cmp $0xffffff7d,%eax
1be8(6): jnz 0xac1(%rip)
1bee(4): sub $0x8,%rsp
1bf2(7): mov 0x20c4af(%rip),%rdi
1bf9(7): mov 0x20c418(%rip),%rcx
1c00(2): push $0x0
1c02(7): lea 0x80bc(%rip),%r9
1c09(7): lea 0x80c2(%rip),%r8
1c10(7): lea 0x8069(%rip),%rdx
1c17(7): lea 0x7fe6(%rip),%rsi
1c1e(2): xor %eax,%eax
1c20(5): call 0x3b70(%rip)
1c25(2): xor %edi,%edi
1c27(5): call 0xfffffe09(%rip)
1c2c(4): nop 0x0(%rax)
1c30(3): cmp $0x6f,%eax
1c33(2): jz 0x45(%rip)
1c35(6): jnle 0x90b(%rip)
1c3b(3): cmp $0x66,%eax
1c3e(6): jnz 0x8e6(%rip)
1c44(7): mov $0x1,0x20c4be(%rip)
1c4b(5): jmp 0xfffffefd(%rip)
1c50(3): cmp $0x52,%eax
1c53(2): jnz 0xe(%rip)
1c55(7): mov $0x1,0x20c4ae(%rip)
1c5c(5): jmp 0xfffffeec(%rip)
1c61(6): jle 0x47e(%rip)
1c67(3): cmp $0x58,%eax
1c6a(2): jz 0xe(%rip)
1c6c(3): cmp $0x61,%eax
1c6f(6): jnz 0xa3a(%rip)
1c75(3): nop (%rax)
1c78(7): movsxd 0x20c431(%rip),%rax
1c7f(5): mov 0xfffffff8(%rbx,%rax,8),%rax
1c84(3): mov %rax,%rdi
1c87(5): mov %rax,0x8(%rsp)
1c8c(5): call 0xfffffb24(%rip)
1c91(2): xor %ecx,%ecx
1c93(3): test %r12,%r12
1c96(3): mov %rax,%rdx
1c99(3): setnz %cl
1c9c(3): add %r12,%rcx
1c9f(4): lea 0x0(%rax,%rcx,1),%r8
1ca3(5): cmp %r8,0x38(%rsp)
1ca8(2): jbe 0x70(%rip)
1caa(5): mov 0x8(%rsp),%rsi
1caf(5): lea 0x0(%r13,%rcx,1),%rdi
1cb4(6): mov $0x2c,0x0(%r13,%r12,1)
1cba(4): add $0x1,%rdx
1cbe(5): mov %r8,0x10(%rsp)
1cc3(5): call 0xfffffc1d(%rip)
1cc8(5): mov 0x10(%rsp),%r8
1ccd(7): mov $0x1,0x20c434(%rip)
1cd4(3): mov %r8,%r12
1cd7(5): jmp 0xfffffe71(%rip)
1cdc(4): nop 0x0(%rax)
1ce0(a): mov $0x1,0x20c326(%rip)
1cea(5): jmp 0xfffffe5e(%rip)
1cef(1): nop 
1cf0(a): mov $0x0,0x20c316(%rip)
1cfa(5): jmp 0xfffffe4e(%rip)
1cff(1): nop 
1d00(6): mov $0x1,%r14d
1d06(5): jmp 0xfffffe42(%rip)
1d0b(5): nop 0x0(%rax,%rax,1)
1d10(3): xor %r14d,%r14d
1d13(5): jmp 0xfffffe35(%rip)
1d18(5): mov 0x18(%rsp),%rsi
1d1d(5): mov %rax,0x28(%rsp)
1d22(4): lea 0x1(%r8),%rax
1d26(3): mov %r13,%rdi
1d29(5): mov %rcx,0x20(%rsp)
1d2e(5): mov %r8,0x10(%rsp)
1d33(5): mov %rax,0x38(%rsp)
1d38(5): call 0x3d18(%rip)
1d3d(5): mov 0x28(%rsp),%rdx
1d42(3): mov %rax,%r13
1d45(5): mov 0x20(%rsp),%rcx
1d4a(5): mov 0x10(%rsp),%r8
1d4f(5): jmp 0xffffff5b(%rip)
1d54(3): test %r15,%r15
1d57(6): jz 0x396(%rip)
1d5d(3): test %r13,%r13
1d60(6): jnz 0xa65(%rip)
1d66(6): cmp 0x20c344(%rip),%ebp
1d6c(6): jle 0x91c(%rip)
1d72(3): mov %r15,%rdi
1d75(5): call 0x15ab(%rip)
1d7a(3): mov %rax,%rbp
1d7d(7): mov %rax,0x20c38c(%rip)
1d84(5): call 0xfffff97c(%rip)
1d89(3): test %rbp,%rbp
1d8c(3): mov %rax,%r12
1d8f(6): jz 0x987(%rip)
1d95(7): and 0x20c36e(%rip),%r14b
1d9c(5): call 0xfffff964(%rip)
1da1(5): mov %rax,0x20(%rsp)
1da6(3): test %r14b,%r14b
1da9(6): jnz 0x838(%rip)
1daf(b): mov $0x0,0x20c346(%rip)
1dba(7): movsxd 0x20c2ef(%rip),%rax
1dc1(2): xor %edx,%edx
1dc3(5): mov $0x411,%esi
1dc8(7): lea 0x87a5(%rip),%r12
1dcf(4): lea 0x0(%rbx,%rax,8),%rdi
1dd3(5): mov $0x1,%ebx
1dd8(5): call 0x3da8(%rip)
1ddd(3): mov %rax,%rbp
1de0(8): lea 0xd0(%rsp),%rax
1de8(3): mov %rbp,%rdi
1deb(5): mov %rax,0x8(%rsp)
1df0(8): lea 0xdc(%rsp),%rax
1df8(5): mov %rax,0x10(%rsp)
1dfd(8): lea 0xdd(%rsp),%rax
1e05(5): mov %rax,0x18(%rsp)
1e0a(5): call 0x5916(%rip)
1e0f(3): test %rax,%rax
1e12(3): mov %rax,%r14
1e15(2): jz 0x46(%rip)
1e17(9): nop 0x0(%rax,%rax,1)
1e20(5): cmp $0xd,0x70(%rax)
1e25(4): mov 0x38(%rax),%r13
1e29(6): jnbe 0x1e6(%rip)
1e2f(4): movzx 0x70(%rax),%eax
1e33(4): movsxd 0x0(%r12,%rax,4),%rax
1e37(3): add %r12,%rax
1e3a(2): jmp %rax
1e3c(6): mov $0x1,%r15d
1e42(6): nop 0x0(%rax,%rax,1)
1e48(3): mov %rbp,%rdi
1e4b(3): and %r15d,%ebx
1e4e(5): call 0x58d2(%rip)
1e53(3): test %rax,%rax
1e56(3): mov %rax,%r14
1e59(2): jnz 0xffffffc7(%rip)
1e5b(5): mov 0x20(%rsp),%rax
1e60(3): cmp $0x0,(%rax)
1e63(2): jz 0x13(%rip)
1e65(7): movzx 0x20c29d(%rip),%ebx
1e6c(2): test %bl,%bl
1e6e(6): jz 0x748(%rip)
1e74(2): xor %ebx,%ebx
1e76(3): mov %rbp,%rdi
1e79(5): call 0x5717(%rip)
1e7e(2): test %eax,%eax
1e80(2): jz 0x2a(%rip)
1e82(7): lea 0x7f05(%rip),%rsi
1e89(5): mov $0x5,%edx
1e8e(2): xor %edi,%edi
1e90(2): xor %ebx,%ebx
1e92(5): call 0xfffff8fe(%rip)
1e97(3): mov %rax,%rdx
1e9a(5): mov 0x20(%rsp),%rax
1e9f(2): xor %edi,%edi
1ea1(2): mov (%rax),%esi
1ea3(2): xor %eax,%eax
1ea5(5): call 0xfffffb2b(%rip)
1eaa(3): xor $0x1,%ebx
1ead(3): movzx %bl,%eax
1eb0(8): mov 0xe8(%rsp),%rbx
1eb8(9): xor $0x28,%rbx
1ec1(6): jnz 0x850(%rip)
1ec7(7): add $0xf8,%rsp
1ece(1): pop %rbx
1ecf(1): pop %rbp
1ed0(2): pop %r12
1ed2(2): pop %r13
1ed4(2): pop %r14
1ed6(2): pop %r15
1ed8(1): ret near (%rsp)
1ed9(7): cmp $0x0,0x20c229(%rip)
1ee0(6): jz 0x66e(%rip)
1ee6(a): nop 0x0(%rax,%rax,1)
1ef0(7): cmp $0x2,0x20c119(%rip)
1ef7(2): jz 0xf(%rip)
1ef9(7): cmp $0x0,0x20c110(%rip)
1f00(6): jz 0x22f(%rip)
1f06(3): xor %r15d,%r15d
1f09(7): cmp $0x0,0x20c1fa(%rip)
1f10(6): jnz 0xffffff38(%rip)
1f16(5): mov $0x4,%edx
1f1b(3): mov %r14,%rsi
1f1e(3): mov %rbp,%rdi
1f21(5): call 0x5f7f(%rip)
1f26(5): jmp 0xffffff22(%rip)
1f2b(7): cmp $0x0,0x20c1d7(%rip)
1f32(2): jnz 0xffffffbe(%rip)
1f34(3): mov %r13,%rsi
1f37(5): mov $0x4,%edi
1f3c(5): call 0x3024(%rip)
1f41(7): lea 0x83a0(%rip),%rsi
1f48(3): mov %rax,%r15
1f4b(2): xor %edi,%edi
1f4d(5): mov $0x5,%edx
1f52(5): call 0xfffff83e(%rip)
1f57(3): mov %r15,%rcx
1f5a(3): mov %rax,%rdx
1f5d(2): xor %esi,%esi
1f5f(2): xor %edi,%edi
1f61(2): xor %eax,%eax
1f63(5): call 0xfffffa6d(%rip)
1f68(2): jmp 0xffffff88(%rip)
1f6a(5): cmp $0x0,0x58(%r14)
1f6f(2): jnz 0xd(%rip)
1f71(5): cmp $0x0,0x20(%r14)
1f76(6): jz 0x6c7(%rip)
1f7c(7): cmp $0x0,0x20c186(%rip)
1f83(6): jnz 0xffffff6d(%rip)
1f89(3): mov %r13,%rsi
1f8c(5): mov $0x4,%edi
1f91(5): call 0x2fcf(%rip)
1f96(7): lea 0x7d8f(%rip),%rsi
1f9d(3): mov %rax,%r15
1fa0(5): mov $0x5,%edx
1fa5(2): xor %edi,%edi
1fa7(5): call 0xfffff7e9(%rip)
1fac(4): mov 0x40(%r14),%esi
1fb0(3): mov %rax,%rdx
1fb3(3): mov %r15,%rcx
1fb6(2): xor %edi,%edi
1fb8(2): xor %eax,%eax
1fba(5): call 0xfffffa16(%rip)
1fbf(5): jmp 0xffffff31(%rip)
1fc4(7): cmp $0x0,0x20c13e(%rip)
1fcb(6): jnz 0xffffff25(%rip)
1fd1(3): mov %r13,%rdx
1fd4(2): xor %edi,%edi
1fd6(5): mov $0x3,%esi
1fdb(5): call 0x3085(%rip)
1fe0(4): mov 0x40(%r14),%esi
1fe4(7): lea 0x7d2e(%rip),%rdx
1feb(3): mov %rax,%rcx
1fee(2): xor %edi,%edi
1ff0(2): xor %eax,%eax
1ff2(5): call 0xfffff9de(%rip)
1ff7(5): jmp 0xfffffef9(%rip)
1ffc(3): mov %r14,%rsi
1fff(3): mov %rbp,%rdi
2002(5): call 0x3bce(%rip)
2007(2): test %al,%al
2009(6): jnz 0x566(%rip)
200f(7): mov 0x20c0ea(%rip),%rax
2016(3): test %rax,%rax
2019(2): jz 0x12(%rip)
201b(3): mov (%rax),%rcx
201e(7): cmp %rcx,0x80(%r14)
2025(6): jz 0x465(%rip)
202b(7): mov 0x90(%r14),%edi
2032(4): mov 0x30(%r14),%rax
2036(2): xor %esi,%esi
2038(6): mov 0x20c0ce(%rip),%edx
203e(7): mov 0x20c0cb(%rip),%rcx
2045(3): mov %edi,%r15d
2048(5): mov %rax,0x28(%rsp)
204d(4): mov %edi,0x4(%rsp)
2051(7): and $0xf000,%r15d
2058(7): cmp $0x4000,%r15d
205f(4): setz %sil
2063(3): xor %r8d,%r8d
2066(5): call 0x134a(%rip)
206b(7): cmp $0xa000,%r15d
2072(2): mov %eax,%edx
2074(3): mov %eax,(%rsp)
2077(6): jz 0x14b(%rip)
207d(3): mov 0x2c(%rbp),%edi
2080(5): mov 0x28(%rsp),%rsi
2085(2): xor %ecx,%ecx
2087(5): call 0xfffff8b9(%rip)
208c(2): test %eax,%eax
208e(6): jz 0x18e(%rip)
2094(7): cmp $0x0,0x20c06e(%rip)
209b(6): jnz 0xfffffe55(%rip)
20a1(3): mov %r13,%rsi
20a4(5): mov $0x4,%edi
20a9(5): call 0x2eb7(%rip)
20ae(7): lea 0x7ca1(%rip),%rsi
20b5(2): xor %edi,%edi
20b7(5): mov $0x5,%edx
20bc(3): mov %rax,%r15
20bf(5): call 0xfffff6d1(%rip)
20c4(3): mov %rax,%rdx
20c7(5): mov 0x20(%rsp),%rax
20cc(3): mov %r15,%rcx
20cf(2): xor %edi,%edi
20d1(2): mov (%rax),%esi
20d3(2): xor %eax,%eax
20d5(5): call 0xfffff8fb(%rip)
20da(5): jmp 0xfffffe16(%rip)
20df(3): cmp $0x3d,%eax
20e2(6): jz 0xfffffb96(%rip)
20e8(5): jmp 0x5c1(%rip)
20ed(3): test %r13,%r13
20f0(7): movsxd 0x20bfb9(%rip),%rax
20f7(6): jz 0x569(%rip)
20fd(2): cmp %eax,%ebp
20ff(6): jle 0x6bf(%rip)
2105(3): mov %r13,%rdi
2108(5): call 0xe68(%rip)
210d(3): test %rax,%rax
2110(7): mov %rax,0x20bff9(%rip)
2117(6): jz 0x638(%rip)
211d(2): xor %edi,%edi
211f(5): call 0xfffff7b1(%rip)
2124(6): mov %eax,0x20bfe2(%rip)
212a(5): jmp 0xfffffc6b(%rip)
212f(5): mov 0x8(%rsp),%rsi
2134(3): mov (%rsp),%edi
2137(5): call 0xc99(%rip)
213c(5): mov 0x10(%rsp),%rsi
2141(4): mov 0x4(%rsp),%edi
2145(8): mov $0x0,0xda(%rsp)
214d(5): call 0xc83(%rip)
2152(7): lea 0x83b7(%rip),%rsi
2159(5): mov $0x5,%edx
215e(2): xor %edi,%edi
2160(8): mov $0x0,0xe6(%rsp)
2168(5): call 0xfffff628(%rip)
216d(3): mov %r13,%rsi
2170(5): mov $0x4,%edi
2175(3): mov %rax,%r15
2178(5): call 0x2de8(%rip)
217d(4): mov 0x4(%rsp),%ecx
2181(4): sub $0x8,%rsp
2185(3): mov %r15,%rsi
2188(5): mov 0x10(%rsp),%rdx
218d(5): mov $0x1,%edi
2192(3): xor %r15d,%r15d
2195(6): and $0xfff,%ecx
219b(4): add $0x1,%rdx
219f(1): push %rdx
21a0(5): mov 0x10(%rsp),%r9d
21a5(3): mov %rax,%rdx
21a8(5): mov 0x28(%rsp),%r8
21ad(2): xor %eax,%eax
21af(7): and $0xfff,%r9d
21b6(5): call 0xfffff7fa(%rip)
21bb(1): pop %rax
21bc(1): pop %rdx
21bd(5): jmp 0xfffffd4c(%rip)
21c2(6): mov 0x20be48(%rip),%eax
21c8(3): cmp $0x2,%eax
21cb(2): jz 0x46(%rip)
21cd(2): test %eax,%eax
21cf(2): jnz 0x42(%rip)
21d1(3): mov %r13,%rsi
21d4(5): mov $0x4,%edi
21d9(6): mov $0x1,%r15d
21df(5): call 0x2d81(%rip)
21e4(7): lea 0x82ed(%rip),%rsi
21eb(3): mov %rax,%r13
21ee(5): mov $0x5,%edx
21f3(2): xor %edi,%edi
21f5(5): call 0xfffff59b(%rip)
21fa(3): mov %r13,%rdx
21fd(3): mov %rax,%rsi
2200(5): mov $0x1,%edi
2205(2): xor %eax,%eax
2207(5): call 0xfffff7a9(%rip)
220c(5): jmp 0xfffffcfd(%rip)
2211(6): mov $0x1,%r15d
2217(5): jmp 0xfffffcf2(%rip)
221c(7): cmp $0x2,0x20bded(%rip)
2223(6): jz 0xae(%rip)
2229(3): mov (%rsp),%ecx
222c(2): mov %ecx,%eax
222e(3): and $0xe,%ch
2231(6): jnz 0x160(%rip)
2237(4): xor 0x4(%rsp),%eax
223b(5): test $0xfff,%eax
2240(6): jz 0x1b5(%rip)
2246(5): mov 0x8(%rsp),%rsi
224b(3): mov (%rsp),%edi
224e(5): call 0xb82(%rip)
2253(5): mov 0x10(%rsp),%rsi
2258(4): mov 0x4(%rsp),%edi
225c(8): mov $0x0,0xda(%rsp)
2264(5): call 0xb6c(%rip)
2269(7): lea 0x8230(%rip),%rsi
2270(5): mov $0x5,%edx
2275(2): xor %edi,%edi
2277(8): mov $0x0,0xe6(%rsp)
227f(5): call 0xfffff511(%rip)
2284(3): mov %r13,%rsi
2287(5): mov $0x4,%edi
228c(3): mov %rax,%r15
228f(5): call 0x2cd1(%rip)
2294(4): mov 0x4(%rsp),%ecx
2298(4): sub $0x8,%rsp
229c(5): mov $0x1,%edi
22a1(5): mov 0x10(%rsp),%rsi
22a6(6): and $0xfff,%ecx
22ac(4): lea 0x1(%rsi),%rdx
22b0(3): mov %r15,%rsi
22b3(1): push %rdx
22b4(5): mov 0x10(%rsp),%r9d
22b9(3): mov %rax,%rdx
22bc(5): mov 0x28(%rsp),%r8
22c1(2): xor %eax,%eax
22c3(7): and $0xfff,%r9d
22ca(5): call 0xfffff6e6(%rip)
22cf(1): pop %rcx
22d0(1): pop %rsi
22d1(8): movzx 0x20be2f(%rip),%r15d
22d9(3): test %r15b,%r15b
22dc(6): jz 0xffffff35(%rip)
22e2(4): mov 0x4(%rsp),%edi
22e6(7): mov 0x20be23(%rip),%rcx
22ed(2): xor %esi,%esi
22ef(2): mov %edi,%eax
22f1(5): and $0xf000,%eax
22f6(5): cmp $0x4000,%eax
22fb(4): setz %sil
22ff(2): xor %edx,%edx
2301(3): xor %r8d,%r8d
2304(5): call 0x10ac(%rip)
2309(2): mov %eax,%edx
230b(2): not %edx
230d(3): test %edx,(%rsp)
2310(6): jz 0xfffffbf9(%rip)
2316(5): mov 0x8(%rsp),%r15
231b(3): mov (%rsp),%edi
231e(4): mov %eax,0x28(%rsp)
2322(3): mov %r15,%rsi
2325(5): call 0xaab(%rip)
232a(4): mov 0x28(%rsp),%eax
232e(5): mov 0x10(%rsp),%rsi
2333(2): mov %eax,%edi
2335(5): call 0xa9b(%rip)
233a(3): mov %r13,%rdx
233d(5): mov $0x3,%esi
2342(2): xor %edi,%edi
2344(8): mov $0x0,0xe6(%rsp)
234c(8): mov $0x0,0xda(%rsp)
2354(5): call 0x2d0c(%rip)
2359(7): lea 0x8118(%rip),%rsi
2360(5): mov $0x5,%edx
2365(2): xor %edi,%edi
2367(3): mov %rax,%r13
236a(5): call 0xfffff426(%rip)
236f(5): mov 0x18(%rsp),%r9
2374(4): lea 0x1(%r15),%r8
2378(3): mov %rax,%rdx
237b(3): mov %r13,%rcx
237e(2): xor %esi,%esi
2380(2): xor %edi,%edi
2382(2): xor %eax,%eax
2384(3): xor %r15d,%r15d
2387(5): call 0xfffff649(%rip)
238c(5): jmp 0xfffffb7d(%rip)
2391(3): mov 0x2c(%rbp),%esi
2394(5): mov 0x28(%rsp),%rdx
2399(5): lea 0x40(%rsp),%rcx
239e(3): xor %r8d,%r8d
23a1(5): mov $0x1,%edi
23a6(5): call 0xfffff46a(%rip)
23ab(2): test %eax,%eax
23ad(6): jz 0x200(%rip)
23b3(7): cmp $0x0,0x20bd4f(%rip)
23ba(2): jnz 0x3b(%rip)
23bc(3): mov %r13,%rsi
23bf(5): mov $0x4,%edi
23c4(5): call 0x2b9c(%rip)
23c9(7): lea 0x79a1(%rip),%rsi
23d0(5): mov $0x5,%edx
23d5(2): xor %edi,%edi
23d7(3): mov %rax,%r15
23da(5): call 0xfffff3b6(%rip)
23df(3): mov %rax,%rdx
23e2(5): mov 0x20(%rsp),%rax
23e7(3): mov %r15,%rcx
23ea(2): xor %edi,%edi
23ec(2): mov (%rax),%esi
23ee(2): xor %eax,%eax
23f0(5): call 0xfffff5e0(%rip)
23f5(7): cmp $0x0,0x20bc14(%rip)
23fc(6): jnz 0xfffffed5(%rip)
2402(5): mov 0x8(%rsp),%rsi
2407(3): mov (%rsp),%edi
240a(5): call 0x9c6(%rip)
240f(5): mov 0x10(%rsp),%rsi
2414(4): mov 0x4(%rsp),%edi
2418(8): mov $0x0,0xda(%rsp)
2420(5): call 0x9b0(%rip)
2425(7): lea 0x8124(%rip),%rsi
242c(5): mov $0x5,%edx
2431(2): xor %edi,%edi
2433(8): mov $0x0,0xe6(%rsp)
243b(5): call 0xfffff355(%rip)
2440(3): mov %r13,%rsi
2443(5): mov $0x4,%edi
2448(3): mov %rax,%r15
244b(5): call 0x2b15(%rip)
2450(5): mov 0x8(%rsp),%rdx
2455(3): mov (%rsp),%ecx
2458(3): mov %r15,%rsi
245b(5): mov $0x1,%edi
2460(4): lea 0x1(%rdx),%r8
2464(6): and $0xfff,%ecx
246a(3): mov %rax,%rdx
246d(2): xor %eax,%eax
246f(5): call 0xfffff541(%rip)
2474(5): jmp 0xfffffe5d(%rip)
2479(3): sub $0x2b,%eax
247c(3): cmp $0x1,%eax
247f(6): jbe 0xfffff7f9(%rip)
2485(5): jmp 0x224(%rip)
248a(4): mov 0x8(%rax),%rax
248e(4): cmp %rax,0x78(%r14)
2492(6): jnz 0xfffffb99(%rip)
2498(7): lea 0x81e7(%rip),%rsi
249f(3): mov %r13,%rdi
24a2(5): call 0xfffff40e(%rip)
24a7(2): test %eax,%eax
24a9(6): jnz 0x20a(%rip)
24af(3): mov %r13,%rsi
24b2(5): mov $0x4,%edi
24b7(5): call 0x2aa9(%rip)
24bc(7): lea 0x7f0d(%rip),%rsi
24c3(3): mov %rax,%r13
24c6(5): mov $0x5,%edx
24cb(2): xor %edi,%edi
24cd(5): call 0xfffff2c3(%rip)
24d2(3): mov %r13,%rcx
24d5(3): mov %rax,%rdx
24d8(2): xor %esi,%esi
24da(2): xor %edi,%edi
24dc(2): xor %eax,%eax
24de(5): call 0xfffff4f2(%rip)
24e3(7): lea 0x7f56(%rip),%rsi
24ea(5): mov $0x5,%edx
24ef(2): xor %edi,%edi
24f1(3): xor %r15d,%r15d
24f4(5): call 0xfffff29c(%rip)
24f9(2): xor %esi,%esi
24fb(3): mov %rax,%rdx
24fe(2): xor %edi,%edi
2500(2): xor %eax,%eax
2502(5): call 0xfffff4ce(%rip)
2507(5): mov $0x4,%edx
250c(3): mov %r14,%rsi
250f(3): mov %rbp,%rdi
2512(5): call 0x598e(%rip)
2517(3): mov %rbp,%rdi
251a(5): call 0x5206(%rip)
251f(5): jmp 0xfffff929(%rip)
2524(3): cmp $0x67,%eax
2527(6): jz 0xfffff751(%rip)
252d(5): jmp 0x17c(%rip)
2532(3): cmp $0x78,%eax
2535(6): jle 0xfffff743(%rip)
253b(5): jmp 0x16e(%rip)
2540(3): cmp $0x72,%eax
2543(6): jnl 0xfffff735(%rip)
2549(5): jmp 0x160(%rip)
254e(3): mov %r13,%rsi
2551(5): mov $0x4,%edi
2556(5): call 0x2a0a(%rip)
255b(5): mov $0x5,%edx
2560(3): mov %rax,%r15
2563(7): lea 0x77d3(%rip),%rsi
256a(5): jmp 0xfffffa3b(%rip)
256f(3): mov %r13,%rdx
2572(5): mov $0x3,%esi
2577(2): xor %edi,%edi
2579(5): call 0x2ae7(%rip)
257e(7): lea 0x7d8b(%rip),%rsi
2585(3): mov %rax,%r13
2588(5): mov $0x5,%edx
258d(2): xor %edi,%edi
258f(3): xor %r15d,%r15d
2592(5): call 0xfffff1fe(%rip)
2597(3): mov %r13,%rcx
259a(3): mov %rax,%rdx
259d(2): xor %esi,%esi
259f(2): xor %edi,%edi
25a1(2): xor %eax,%eax
25a3(5): call 0xfffff42d(%rip)
25a8(5): jmp 0xfffff8a0(%rip)
25ad(4): mov 0x58(%rsp),%eax
25b1(5): jmp 0xfffffc86(%rip)
25b6(7): lea 0x775f(%rip),%rsi
25bd(2): xor %edi,%edi
25bf(5): mov $0x5,%edx
25c4(5): call 0xfffff1cc(%rip)
25c9(3): mov %rax,%rdx
25cc(5): mov 0x20(%rsp),%rax
25d1(2): xor %edi,%edi
25d3(2): mov (%rax),%esi
25d5(2): xor %eax,%eax
25d7(5): call 0xfffff3f9(%rip)
25dc(5): jmp 0xfffff89a(%rip)
25e1(7): lea 0x20bb08(%rip),%rdi
25e8(5): call 0x2c68(%rip)
25ed(3): test %rax,%rax
25f0(7): mov %rax,0x20bb09(%rip)
25f7(6): jnz 0xfffff7c3(%rip)
25fd(7): lea 0x8082(%rip),%rsi
2604(5): mov $0x4,%edi
2609(5): call 0x2957(%rip)
260e(7): lea 0x7cb3(%rip),%rsi
2615(5): mov $0x5,%edx
261a(2): xor %edi,%edi
261c(3): mov %rax,%rbx
261f(5): call 0xfffff171(%rip)
2624(3): mov %rax,%rdx
2627(5): mov 0x20(%rsp),%rax
262c(3): mov %rbx,%rcx
262f(5): mov $0x1,%edi
2634(2): mov (%rax),%esi
2636(2): xor %eax,%eax
2638(5): call 0xfffff398(%rip)
263d(8): mov $0x1,0x20(%r14)
2645(5): mov $0x1,%edx
264a(3): mov %r14,%rsi
264d(3): mov %rbp,%rdi
2650(6): mov $0x1,%r15d
2656(5): call 0x584a(%rip)
265b(5): jmp 0xfffff7ed(%rip)
2660(3): lea 0x1(%rax),%edx
2663(4): mov 0x0(%rbx,%rax,8),%r13
2667(2): cmp %ebp,%edx
2669(6): mov %edx,0x20ba41(%rip)
266f(6): jl 0xfffffa96(%rip)
2675(3): test %r13,%r13
2678(2): jz 0x10(%rip)
267a(3): movsxd %edx,%rdx
267d(5): cmp %r13,0xfffffff8(%rbx,%rdx,8)
2682(6): jz 0x106(%rip)
2688(7): lea 0x7653(%rip),%rsi
268f(5): mov $0x5,%edx
2694(2): xor %edi,%edi
2696(5): call 0xfffff0fa(%rip)
269b(2): xor %esi,%esi
269d(3): mov %rax,%rdx
26a0(2): xor %edi,%edi
26a2(2): xor %eax,%eax
26a4(5): call 0xfffff32c(%rip)
26a9(5): mov $0x1,%edi
26ae(5): call 0x242(%rip)
26b3(7): lea 0x7fcc(%rip),%rdx
26ba(5): mov $0x4,%esi
26bf(5): mov $0x1,%edi
26c4(5): call 0x277c(%rip)
26c9(3): mov %r13,%rdx
26cc(2): xor %edi,%edi
26ce(5): mov $0x4,%esi
26d3(3): mov %rax,%r15
26d6(5): call 0x276a(%rip)
26db(7): lea 0x7d1e(%rip),%rsi
26e2(3): mov %rax,%r13
26e5(2): xor %edi,%edi
26e7(5): mov $0x5,%edx
26ec(5): call 0xfffff0a4(%rip)
26f1(3): mov %r15,%r8
26f4(3): mov %rax,%rdx
26f7(3): mov %r13,%rcx
26fa(2): xor %esi,%esi
26fc(2): xor %edi,%edi
26fe(2): xor %eax,%eax
2700(5): call 0xfffff2d0(%rip)
2705(5): jmp 0xfffffdde(%rip)
270a(2): xor %edi,%edi
270c(5): call 0x1e4(%rip)
2711(5): call 0xfffff0cf(%rip)
2716(3): mov %r15,%rsi
2719(5): mov $0x4,%edi
271e(5): call 0x2842(%rip)
2723(7): lea 0x7b9e(%rip),%rsi
272a(5): mov $0x5,%edx
272f(2): xor %edi,%edi
2731(3): mov %rax,%rbx
2734(5): call 0xfffff05c(%rip)
2739(4): mov (%r12),%esi
273d(3): mov %rax,%rdx
2740(3): mov %rbx,%rcx
2743(5): mov $0x1,%edi
2748(2): xor %eax,%eax
274a(5): call 0xfffff286(%rip)
274f(3): mov %r13,%rdi
2752(5): call 0x2ade(%rip)
2757(7): lea 0x75ad(%rip),%rsi
275e(3): mov %rax,%rbx
2761(5): mov $0x5,%edx
2766(2): xor %edi,%edi
2768(5): call 0xfffff028(%rip)
276d(2): xor %edi,%edi
276f(3): mov %rax,%rdx
2772(3): mov %rbx,%rcx
2775(2): xor %esi,%esi
2777(2): xor %eax,%eax
2779(5): call 0xfffff257(%rip)
277e(5): mov $0x1,%edi
2783(5): call 0x16d(%rip)
2788(5): mov 0xfffffff8(%rbx,%rbp,8),%rdi
278d(5): call 0x2aa3(%rip)
2792(7): lea 0x7559(%rip),%rsi
2799(3): mov %rax,%rbx
279c(2): xor %edi,%edi
279e(5): mov $0x5,%edx
27a3(5): call 0xffffefed(%rip)
27a8(3): mov %rbx,%rcx
27ab(3): mov %rax,%rdx
27ae(2): xor %esi,%esi
27b0(2): xor %edi,%edi
27b2(2): xor %eax,%eax
27b4(5): call 0xfffff21c(%rip)
27b9(5): jmp 0xfffffef0(%rip)
27be(2): mov %eax,%edx
27c0(5): jmp 0xfffffeba(%rip)
27c5(5): mov $0x5,%edx
27ca(7): lea 0x7ac7(%rip),%rsi
27d1(5): jmp 0xfffffec3(%rip)

"_start" :
27e0(2): xor %ebp,%ebp
27e2(3): mov %rdx,%r9
27e5(1): pop %rsi
27e6(3): mov %rsp,%rdx
27e9(4): and $0xfffffff0,%rsp
27ed(1): push %rax
27ee(1): push %rsp
27ef(7): lea 0x73ca(%rip),%r8
27f6(7): lea 0x7353(%rip),%rcx
27fd(7): lea 0xfffff29c(%rip),%rdi
2804(6): call 0x20b7d6(%rip)
280a(1): hlt 

"deregister_tm_clones" :
2810(7): lea 0x20b889(%rip),%rdi
2817(1): push %rbp
2818(7): lea 0x20b881(%rip),%rax
281f(3): cmp %rdi,%rax
2822(3): mov %rsp,%rbp
2825(2): jz 0x1b(%rip)
2827(7): mov 0x20b7aa(%rip),%rax
282e(3): test %rax,%rax
2831(2): jz 0xf(%rip)
2833(1): pop %rbp
2834(2): jmp %rax
2836(a): nop 0x0(%rax,%rax,1)
2840(1): pop %rbp
2841(1): ret near (%rsp)

"register_tm_clones" :
2850(7): lea 0x20b849(%rip),%rdi
2857(7): lea 0x20b842(%rip),%rsi
285e(1): push %rbp
285f(3): sub %rdi,%rsi
2862(3): mov %rsp,%rbp
2865(4): sar $0x3,%rsi
2869(3): mov %rsi,%rax
286c(4): shr $0x3f,%rax
2870(3): add %rax,%rsi
2873(3): sar $0x1,%rsi
2876(2): jz 0x1a(%rip)
2878(7): mov 0x20b771(%rip),%rax
287f(3): test %rax,%rax
2882(2): jz 0xe(%rip)
2884(1): pop %rbp
2885(2): jmp %rax
2887(9): nop 0x0(%rax,%rax,1)
2890(1): pop %rbp
2891(1): ret near (%rsp)

"__do_global_dtors_aux" :
28a0(7): cmp $0x0,0x20b841(%rip)
28a7(2): jnz 0x31(%rip)
28a9(8): cmp $0x0,0x20b747(%rip)
28b1(1): push %rbp
28b2(3): mov %rsp,%rbp
28b5(2): jz 0xe(%rip)
28b7(7): mov 0x20b74a(%rip),%rdi
28be(5): call 0xfffff1da(%rip)
28c3(5): call 0xffffff4d(%rip)
28c8(7): mov $0x1,0x20b819(%rip)
28cf(1): pop %rbp
28d0(1): ret near (%rsp)
28d1(7): nop 0x0(%rax)
28d8(2): REP ret near (%rsp)

"frame_dummy" :
28e0(1): push %rbp
28e1(3): mov %rsp,%rbp
28e4(1): pop %rbp
28e5(5): jmp 0xffffff6b(%rip)

"usage" :
28f0(2): push %r13
28f2(2): push %r12
28f4(5): mov $0x5,%edx
28f9(1): push %rbp
28fa(1): push %rbx
28fb(2): mov %edi,%ebp
28fd(7): sub $0x88,%rsp
2904(7): mov 0x20b81d(%rip),%rbx
290b(9): mov $0x28,%rax
2914(5): mov %rax,0x78(%rsp)
2919(2): xor %eax,%eax
291b(2): test %edi,%edi
291d(2): jz 0x30(%rip)
291f(7): lea 0x74ca(%rip),%rsi
2926(2): xor %edi,%edi
2928(5): call 0xffffee68(%rip)
292d(7): mov 0x20b7ac(%rip),%rdi
2934(3): mov %rax,%rdx
2937(3): mov %rbx,%rcx
293a(5): mov $0x1,%esi
293f(2): xor %eax,%eax
2941(5): call 0xfffff10f(%rip)
2946(2): mov %ebp,%edi
2948(5): call 0xfffff0e8(%rip)
294d(7): lea 0x74c4(%rip),%rsi
2954(2): xor %edi,%edi
2956(5): call 0xffffee3a(%rip)
295b(3): mov %rbx,%rcx
295e(3): mov %rbx,%r8
2961(3): mov %rbx,%rdx
2964(3): mov %rax,%rsi
2967(5): mov $0x1,%edi
296c(2): xor %eax,%eax
296e(5): call 0xfffff042(%rip)
2973(7): mov 0x20b72e(%rip),%rbx
297a(7): lea 0x751f(%rip),%rsi
2981(5): mov $0x5,%edx
2986(2): xor %edi,%edi
2988(5): call 0xffffee08(%rip)
298d(3): mov %rbx,%rsi
2990(3): mov %rax,%rdi
2993(5): call 0xffffeefd(%rip)
2998(7): mov 0x20b709(%rip),%rbx
299f(7): lea 0x756a(%rip),%rsi
29a6(5): mov $0x5,%edx
29ab(2): xor %edi,%edi
29ad(5): call 0xffffede3(%rip)
29b2(3): mov %rbx,%rsi
29b5(3): mov %rax,%rdi
29b8(5): call 0xffffeed8(%rip)
29bd(7): mov 0x20b6e4(%rip),%rbx
29c4(7): lea 0x7615(%rip),%rsi
29cb(5): mov $0x5,%edx
29d0(2): xor %edi,%edi
29d2(5): call 0xffffedbe(%rip)
29d7(3): mov %rbx,%rsi
29da(3): mov %rax,%rdi
29dd(5): call 0xffffeeb3(%rip)
29e2(7): mov 0x20b6bf(%rip),%rbx
29e9(7): lea 0x7670(%rip),%rsi
29f0(5): mov $0x5,%edx
29f5(2): xor %edi,%edi
29f7(5): call 0xffffed99(%rip)
29fc(3): mov %rbx,%rsi
29ff(3): mov %rax,%rdi
2a02(5): call 0xffffee8e(%rip)
2a07(7): mov 0x20b69a(%rip),%rbx
2a0e(7): lea 0x7693(%rip),%rsi
2a15(5): mov $0x5,%edx
2a1a(2): xor %edi,%edi
2a1c(5): call 0xffffed74(%rip)
2a21(3): mov %rbx,%rsi
2a24(3): mov %rax,%rdi
2a27(5): call 0xffffee69(%rip)
2a2c(7): mov 0x20b675(%rip),%rbx
2a33(7): lea 0x76b6(%rip),%rsi
2a3a(5): mov $0x5,%edx
2a3f(2): xor %edi,%edi
2a41(5): call 0xffffed4f(%rip)
2a46(3): mov %rbx,%rsi
2a49(3): mov %rax,%rdi
2a4c(5): call 0xffffee44(%rip)
2a51(7): mov 0x20b650(%rip),%rbx
2a58(7): lea 0x76c1(%rip),%rsi
2a5f(5): mov $0x5,%edx
2a64(2): xor %edi,%edi
2a66(5): call 0xffffed2a(%rip)
2a6b(3): mov %rbx,%rsi
2a6e(3): mov %rax,%rdi
2a71(5): call 0xffffee1f(%rip)
2a76(7): mov 0x20b62b(%rip),%rbx
2a7d(7): lea 0x76d4(%rip),%rsi
2a84(5): mov $0x5,%edx
2a89(2): xor %edi,%edi
2a8b(5): call 0xffffed05(%rip)
2a90(3): mov %rbx,%rsi
2a93(3): mov %rax,%rdi
2a96(7): lea 0x7167(%rip),%rbx
2a9d(5): call 0xffffedf3(%rip)
2aa2(7): lea 0x7161(%rip),%rax
2aa9(7): lea 0x719b(%rip),%rcx
2ab0(9): mov $0x0,0x60(%rsp)
2ab9(9): mov $0x0,0x68(%rsp)
2ac2(3): mov %rsp,%rdx
2ac5(4): mov %rax,(%rsp)
2ac9(7): lea 0x713c(%rip),%rax
2ad0(5): mov %rcx,0x30(%rsp)
2ad5(7): lea 0x7179(%rip),%rcx
2adc(5): mov %rax,0x8(%rsp)
2ae1(7): lea 0x719c(%rip),%rax
2ae8(5): mov %rcx,0x40(%rsp)
2aed(7): lea 0x716b(%rip),%rcx
2af4(5): mov %rax,0x10(%rsp)
2af9(7): lea 0x711c(%rip),%rax
2b00(5): mov %rcx,0x50(%rsp)
2b05(5): mov %rax,0x18(%rsp)
2b0a(7): lea 0x7121(%rip),%rax
2b11(5): mov %rax,0x20(%rsp)
2b16(7): lea 0x711f(%rip),%rax
2b1d(5): mov %rax,0x28(%rsp)
2b22(5): mov %rax,0x38(%rsp)
2b27(5): mov %rax,0x48(%rsp)
2b2c(5): mov %rax,0x58(%rsp)
2b31(7): nop 0x0(%rax)
2b38(4): add $0x10,%rdx
2b3c(3): mov (%rdx),%rdi
2b3f(3): test %rdi,%rdi
2b42(2): jz 0x15(%rip)
2b44(5): mov $0x6,%ecx
2b49(3): mov %rbx,%rsi
2b4c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b4e(3): setnbe %al
2b51(2): sbb $0x0,%al
2b53(2): test %al,%al
2b55(2): jnz 0xffffffe3(%rip)
2b57(4): mov 0x8(%rdx),%r12
2b5b(2): xor %edi,%edi
2b5d(5): mov $0x5,%edx
2b62(7): lea 0x7100(%rip),%rsi
2b69(3): test %r12,%r12
2b6c(6): jz 0xc7(%rip)
2b72(5): call 0xffffec1e(%rip)
2b77(7): lea 0x762a(%rip),%rcx
2b7e(7): lea 0x70fb(%rip),%rdx
2b85(3): mov %rax,%rsi
2b88(5): mov $0x1,%edi
2b8d(2): xor %eax,%eax
2b8f(5): call 0xffffee21(%rip)
2b94(2): xor %esi,%esi
2b96(5): mov $0x5,%edi
2b9b(5): call 0xffffee05(%rip)
2ba0(3): test %rax,%rax
2ba3(2): jz 0x1e(%rip)
2ba5(7): lea 0x70e2(%rip),%rsi
2bac(5): mov $0x3,%edx
2bb1(3): mov %rax,%rdi
2bb4(5): call 0xffffeb5c(%rip)
2bb9(2): test %eax,%eax
2bbb(6): jnz 0x10d(%rip)
2bc1(7): lea 0x70ca(%rip),%rsi
2bc8(2): xor %edi,%edi
2bca(5): mov $0x5,%edx
2bcf(5): call 0xffffebc1(%rip)
2bd4(7): lea 0x7029(%rip),%rcx
2bdb(7): lea 0x75c6(%rip),%rdx
2be2(3): mov %rax,%rsi
2be5(5): mov $0x1,%edi
2bea(2): xor %eax,%eax
2bec(5): call 0xffffedc4(%rip)
2bf1(3): cmp %rbx,%r12
2bf4(7): lea 0x702b(%rip),%rcx
2bfb(7): lea 0x7fbf(%rip),%rbx
2c02(4): cmove %rcx,%rbx
2c06(7): lea 0x760b(%rip),%rsi
2c0d(2): xor %edi,%edi
2c0f(5): mov $0x5,%edx
2c14(5): call 0xffffeb7c(%rip)
2c19(3): mov %rbx,%rcx
2c1c(3): mov %rax,%rsi
2c1f(3): mov %r12,%rdx
2c22(5): mov $0x1,%edi
2c27(2): xor %eax,%eax
2c29(5): call 0xffffed87(%rip)
2c2e(5): jmp 0xfffffd18(%rip)
2c33(5): call 0xffffeb5d(%rip)
2c38(7): lea 0x7569(%rip),%rcx
2c3f(7): lea 0x703a(%rip),%rdx
2c46(3): mov %rax,%rsi
2c49(5): mov $0x1,%edi
2c4e(2): xor %eax,%eax
2c50(5): call 0xffffed60(%rip)
2c55(2): xor %esi,%esi
2c57(5): mov $0x5,%edi
2c5c(5): call 0xffffed44(%rip)
2c61(3): test %rax,%rax
2c64(2): jz 0x1a(%rip)
2c66(7): lea 0x7021(%rip),%rsi
2c6d(5): mov $0x3,%edx
2c72(3): mov %rax,%rdi
2c75(5): call 0xffffea9b(%rip)
2c7a(2): test %eax,%eax
2c7c(2): jnz 0x45(%rip)
2c7e(7): lea 0x700d(%rip),%rsi
2c85(5): mov $0x5,%edx
2c8a(2): xor %edi,%edi
2c8c(7): lea 0x6f71(%rip),%r12
2c93(7): lea 0x6f8c(%rip),%rbx
2c9a(5): call 0xffffeaf6(%rip)
2c9f(7): lea 0x6f5e(%rip),%rcx
2ca6(7): lea 0x74fb(%rip),%rdx
2cad(3): mov %rax,%rsi
2cb0(5): mov $0x1,%edi
2cb5(2): xor %eax,%eax
2cb7(5): call 0xffffecf9(%rip)
2cbc(5): jmp 0xffffff4a(%rip)
2cc1(7): lea 0x6f3c(%rip),%r12
2cc8(7): mov 0x20b3d9(%rip),%r13
2ccf(7): lea 0x74fa(%rip),%rsi
2cd6(2): xor %edi,%edi
2cd8(5): mov $0x5,%edx
2cdd(5): call 0xffffeab3(%rip)
2ce2(3): mov %r13,%rsi
2ce5(3): mov %rax,%rdi
2ce8(5): call 0xffffeba8(%rip)
2ced(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2d00(7): mov %rdi,0x20b419(%rip)
2d07(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2d10(7): mov %dil,0x20b401(%rip)
2d17(1): ret near (%rsp)

"close_stdout" :
2d20(1): push %rbp
2d21(1): push %rbx
2d22(4): sub $0x8,%rsp
2d26(7): mov 0x20b37b(%rip),%rdi
2d2d(5): call 0x5383(%rip)
2d32(2): test %eax,%eax
2d34(2): jz 0x18(%rip)
2d36(5): call 0xffffe9ca(%rip)
2d3b(7): cmp $0x0,0x20b3d6(%rip)
2d42(3): mov %rax,%rbx
2d45(2): jz 0x1e(%rip)
2d47(3): cmp $0x20,(%rax)
2d4a(2): jnz 0x19(%rip)
2d4c(7): mov 0x20b38d(%rip),%rdi
2d53(5): call 0x535d(%rip)
2d58(2): test %eax,%eax
2d5a(2): jnz 0x48(%rip)
2d5c(4): add $0x8,%rsp
2d60(1): pop %rbx
2d61(1): pop %rbp
2d62(1): ret near (%rsp)
2d63(7): lea 0x7847(%rip),%rsi
2d6a(2): xor %edi,%edi
2d6c(5): mov $0x5,%edx
2d71(5): call 0xffffea1f(%rip)
2d76(7): mov 0x20b3a3(%rip),%rdi
2d7d(3): mov %rax,%rbp
2d80(3): test %rdi,%rdi
2d83(2): jz 0x2a(%rip)
2d85(5): call 0x22ab(%rip)
2d8a(2): mov (%rbx),%esi
2d8c(7): lea 0x782a(%rip),%rdx
2d93(3): mov %rax,%rcx
2d96(3): mov %rbp,%r8
2d99(2): xor %edi,%edi
2d9b(2): xor %eax,%eax
2d9d(5): call 0xffffec33(%rip)
2da2(6): mov 0x20b278(%rip),%edi
2da8(5): call 0xffffe978(%rip)
2dad(2): mov (%rbx),%esi
2daf(7): lea 0x6f63(%rip),%rdx
2db6(3): mov %rax,%rcx
2db9(2): xor %edi,%edi
2dbb(2): xor %eax,%eax
2dbd(5): call 0xffffec13(%rip)
2dc2(2): jmp 0xffffffe0(%rip)

"strmode" :
2dd0(2): mov %edi,%edx
2dd2(5): mov $0x2d,%eax
2dd7(6): and $0xf000,%edx
2ddd(6): cmp $0x8000,%edx
2de3(2): jz 0x5d(%rip)
2de5(6): cmp $0x4000,%edx
2deb(5): mov $0x64,%eax
2df0(2): jz 0x50(%rip)
2df2(6): cmp $0x6000,%edx
2df8(5): mov $0x62,%eax
2dfd(2): jz 0x43(%rip)
2dff(6): cmp $0x2000,%edx
2e05(5): mov $0x63,%eax
2e0a(2): jz 0x36(%rip)
2e0c(6): cmp $0xa000,%edx
2e12(5): mov $0x6c,%eax
2e17(2): jz 0x29(%rip)
2e19(6): cmp $0x1000,%edx
2e1f(5): mov $0x70,%eax
2e24(2): jz 0x1c(%rip)
2e26(6): cmp $0xc000,%edx
2e2c(5): mov $0x73,%eax
2e31(5): mov $0x3f,%edx
2e36(3): cmovne %edx,%eax
2e39(7): nop 0x0(%rax)
2e40(2): mov %al,(%rsi)
2e42(2): mov %edi,%eax
2e44(5): and $0x100,%eax
2e49(3): cmp $0x1,%eax
2e4c(2): sbb %eax,%eax
2e4e(3): and $0xbb,%eax
2e51(3): add $0x72,%eax
2e54(3): mov %al,0x1(%rsi)
2e57(2): mov %edi,%eax
2e59(5): and $0x80,%eax
2e5e(3): cmp $0x1,%eax
2e61(2): sbb %eax,%eax
2e63(3): and $0xb6,%eax
2e66(3): add $0x77,%eax
2e69(3): mov %al,0x2(%rsi)
2e6c(2): mov %edi,%eax
2e6e(3): and $0x40,%eax
2e71(3): cmp $0x1,%eax
2e74(2): sbb %eax,%eax
2e76(6): test $0x800,%edi
2e7c(6): jz 0xa4(%rip)
2e82(3): and $0xe0,%eax
2e85(3): add $0x73,%eax
2e88(3): mov %al,0x3(%rsi)
2e8b(2): mov %edi,%eax
2e8d(3): and $0x20,%eax
2e90(3): cmp $0x1,%eax
2e93(2): sbb %eax,%eax
2e95(3): and $0xbb,%eax
2e98(3): add $0x72,%eax
2e9b(3): mov %al,0x4(%rsi)
2e9e(2): mov %edi,%eax
2ea0(3): and $0x10,%eax
2ea3(3): cmp $0x1,%eax
2ea6(2): sbb %eax,%eax
2ea8(3): and $0xb6,%eax
2eab(3): add $0x77,%eax
2eae(3): mov %al,0x5(%rsi)
2eb1(2): mov %edi,%eax
2eb3(3): and $0x8,%eax
2eb6(3): cmp $0x1,%eax
2eb9(2): sbb %eax,%eax
2ebb(6): test $0x400,%edi
2ec1(6): jz 0x87(%rip)
2ec7(3): and $0xe0,%eax
2eca(3): add $0x73,%eax
2ecd(3): mov %al,0x6(%rsi)
2ed0(2): mov %edi,%eax
2ed2(3): and $0x4,%eax
2ed5(3): cmp $0x1,%eax
2ed8(2): sbb %eax,%eax
2eda(3): and $0xbb,%eax
2edd(3): add $0x72,%eax
2ee0(3): mov %al,0x7(%rsi)
2ee3(2): mov %edi,%eax
2ee5(3): and $0x2,%eax
2ee8(3): cmp $0x1,%eax
2eeb(2): sbb %eax,%eax
2eed(3): and $0xb6,%eax
2ef0(3): add $0x77,%eax
2ef3(3): mov %al,0x8(%rsi)
2ef6(2): mov %edi,%eax
2ef8(3): and $0x1,%eax
2efb(3): cmp $0x1,%eax
2efe(2): sbb %eax,%eax
2f00(6): and $0x200,%edi
2f06(2): jz 0x2a(%rip)
2f08(3): and $0xe0,%eax
2f0b(3): add $0x74,%eax
2f0e(3): mov %al,0x9(%rsi)
2f11(5): mov $0x20,%eax
2f16(4): mov %ax,0xa(%rsi)
2f1a(1): ret near (%rsp)
2f1b(5): nop 0x0(%rax,%rax,1)
2f20(3): and $0xb5,%eax
2f23(3): add $0x78,%eax
2f26(5): jmp 0xffffff62(%rip)
2f2b(5): nop 0x0(%rax,%rax,1)
2f30(3): and $0xb5,%eax
2f33(3): add $0x78,%eax
2f36(3): mov %al,0x9(%rsi)
2f39(5): mov $0x20,%eax
2f3e(4): mov %ax,0xa(%rsi)
2f42(1): ret near (%rsp)
2f43(5): nop 0x0(%rax,%rax,1)
2f48(3): and $0xb5,%eax
2f4b(3): add $0x78,%eax
2f4e(5): jmp 0xffffff7f(%rip)

"filemodestring" :
2f60(3): mov 0x18(%rdi),%edi
2f63(5): jmp 0xfffffe6d(%rip)

"mode_compile" :
2f70(1): push %rbp
2f71(1): push %rbx
2f72(3): mov %rdi,%rbx
2f75(4): sub $0x8,%rsp
2f79(3): movsx (%rdi),%eax
2f7c(3): lea 0xffffffd0(%rax),%edx
2f7f(3): cmp $0x7,%dl
2f82(6): jbe 0xb6(%rip)
2f88(2): test %al,%al
2f8a(3): mov %rdi,%rcx
2f8d(5): mov $0x1,%edi
2f92(2): jz 0x29(%rip)
2f94(4): nop 0x0(%rax)
2f98(2): mov %eax,%edx
2f9a(3): and $0xef,%edx
2f9d(3): cmp $0x2d,%dl
2fa0(3): setz %dl
2fa3(2): cmp $0x2b,%al
2fa5(3): setz %al
2fa8(4): add $0x1,%rcx
2fac(2): or %edx,%eax
2fae(3): movzx %al,%eax
2fb1(3): add %rax,%rdi
2fb4(3): movzx (%rcx),%eax
2fb7(2): test %al,%al
2fb9(2): jnz 0xffffffdf(%rip)
2fbb(5): mov $0x10,%edx
2fc0(2): xor %ecx,%ecx
2fc2(3): mov %rdx,%rax
2fc5(3): mul %rax,%rdi,%rdx
2fc8(6): jo 0x317(%rip)
2fce(3): test %rax,%rax
2fd1(6): js 0x318(%rip)
2fd7(3): test %rcx,%rcx
2fda(6): jnz 0x30f(%rip)
2fe0(4): shl/sal $0x4,%rdi
2fe4(7): lea 0x75d9(%rip),%rbp
2feb(5): call 0x2905(%rip)
2ff0(2): xor %esi,%esi
2ff2(3): xor %r11d,%r11d
2ff5(4): movzx (%rbx),%r9d
2ff9(4): cmp $0x61,%r9b
2ffd(6): jz 0x253(%rip)
3003(2): jle 0x6d(%rip)
3005(4): cmp $0x6f,%r9b
3009(6): jz 0x277(%rip)
300f(4): cmp $0x75,%r9b
3013(6): jz 0x25d(%rip)
3019(4): cmp $0x67,%r9b
301d(6): jz 0x243(%rip)
3023(3): mov %rax,%rdi
3026(5): call 0xffffea6a(%rip)
302b(2): xor %eax,%eax
302d(4): add $0x8,%rsp
3031(1): pop %rbx
3032(1): pop %rbp
3033(1): ret near (%rsp)
3034(4): nop 0x0(%rax)
3038(3): mov %rdi,%rdx
303b(2): xor %ebp,%ebp
303d(2): jmp 0x12(%rip)
303f(1): nop 
3040(3): movsx (%rdx),%eax
3043(3): lea 0xffffffd0(%rax),%ecx
3046(3): cmp $0x7,%cl
3049(6): jnbe 0x247(%rip)
304f(4): lea 0xffffffd0(%rax,%rbp,8),%ebp
3053(4): add $0x1,%rdx
3057(6): cmp $0xfff,%ebp
305d(2): jbe 0xffffffe3(%rip)
305f(4): add $0x8,%rsp
3063(2): xor %eax,%eax
3065(1): pop %rbx
3066(1): pop %rbp
3067(1): ret near (%rsp)
3068(8): nop 0x0(%rax,%rax,1)
3070(4): cmp $0x2d,%r9b
3074(2): jz 0xe(%rip)
3076(4): cmp $0x3d,%r9b
307a(2): jz 0x8(%rip)
307c(4): cmp $0x2b,%r9b
3080(2): jnz 0xffffffa3(%rip)
3082(4): lea 0x1(%rsi),%rdi
3086(4): shl/sal $0x4,%rsi
308a(3): add %rax,%rsi
308d(2): jmp 0x67(%rip)
308f(1): nop 
3090(3): cmp $0x6f,%dl
3093(4): lea 0x2(%rbx),%r8
3097(6): jz 0x199(%rip)
309d(3): cmp $0x75,%dl
30a0(6): mov $0x1c0,%r10d
30a6(6): jnz 0xda(%rip)
30ac(3): mov %r9b,(%rsi)
30af(4): mov $0x3,0x1(%rsi)
30b3(5): movzx 0x2(%rbx),%r9d
30b8(4): mov %r11d,0x4(%rsi)
30bc(3): mov %r8,%rbx
30bf(4): mov %r10d,0x8(%rsi)
30c3(3): mov %r10d,%edx
30c6(3): and %r11d,%edx
30c9(3): test %r11d,%r11d
30cc(4): cmovne %edx,%r10d
30d0(3): mov %r9d,%edx
30d3(4): mov %r10d,0xc(%rsi)
30d7(4): add $0x10,%rsi
30db(3): and $0xef,%edx
30de(4): lea 0x1(%rdi),%rcx
30e2(3): cmp $0x2d,%dl
30e5(2): jz 0xc(%rip)
30e7(4): cmp $0x2b,%r9b
30eb(6): jnz 0x205(%rip)
30f1(3): mov %rcx,%rdi
30f4(4): movsx 0x1(%rbx),%edx
30f8(4): lea 0x1(%rbx),%rcx
30fc(3): cmp $0x67,%dl
30ff(6): jz 0x141(%rip)
3105(2): jnle 0xffffff8b(%rip)
3107(4): lea 0xffffffd0(%rdx),%r8d
310b(4): cmp $0x7,%r8b
310f(2): jnbe 0x71(%rip)
3111(3): xor %r8d,%r8d
3114(4): nop 0x0(%rax)
3118(5): lea 0xffffffd0(%rdx,%r8,8),%r8d
311d(4): add $0x1,%rcx
3121(7): cmp $0xfff,%r8d
3128(6): jnbe 0xfffffefb(%rip)
312e(3): movsx (%rcx),%edx
3131(4): lea 0xffffffd0(%rdx),%r10d
3135(4): cmp $0x7,%r10b
3139(2): jbe 0xffffffdf(%rip)
313b(3): test %r11d,%r11d
313e(6): jnz 0xfffffee5(%rip)
3144(2): test %dl,%dl
3146(2): jz 0xb(%rip)
3148(3): cmp $0x2c,%dl
314b(6): jnz 0xfffffed8(%rip)
3151(3): mov %r9b,(%rsi)
3154(4): mov $0x1,0x1(%rsi)
3158(3): mov %edx,%r9d
315b(7): mov $0xfff,0x4(%rsi)
3162(4): mov %r8d,0x8(%rsi)
3166(3): mov %rcx,%rbx
3169(6): mov $0xfff,%r11d
316f(6): mov $0xfff,%r10d
3175(5): jmp 0xffffff5b(%rip)
317a(6): nop 0x0(%rax,%rax,1)
3180(4): lea 0xffffffa8(%rdx),%r8d
3184(3): xor %r10d,%r10d
3187(5): mov $0x1,%ebx
318c(4): cmp $0x20,%r8b
3190(2): jnbe 0x39(%rip)
3192(6): nop 0x0(%rax,%rax,1)
3198(4): movzx %r8b,%r8d
319c(5): movsxd 0x0(%rbp,%r8,4),%r8
31a1(3): add %rbp,%r8
31a4(3): jmp %r8
31a7(9): nop 0x0(%rax,%rax,1)
31b0(5): mov $0x2,%ebx
31b5(3): nop (%rax)
31b8(4): add $0x1,%rcx
31bc(3): movzx (%rcx),%edx
31bf(4): lea 0xffffffa8(%rdx),%r8d
31c3(4): cmp $0x20,%r8b
31c7(2): jbe 0xffffffd1(%rip)
31c9(3): mov %r9b,(%rsi)
31cc(3): mov %bl,0x1(%rsi)
31cf(3): mov %edx,%r9d
31d2(4): mov %r11d,0x4(%rsi)
31d6(4): mov %r10d,0x8(%rsi)
31da(3): mov %rcx,%rbx
31dd(5): jmp 0xfffffee6(%rip)
31e2(6): nop 0x0(%rax,%rax,1)
31e8(4): or $0x49,%r10d
31ec(2): jmp 0xffffffcc(%rip)
31ee(2): nop 
31f0(4): or $0x92,%r10b
31f4(2): jmp 0xffffffc4(%rip)
31f6(a): nop 0x0(%rax,%rax,1)
3200(7): or $0x200,%r10d
3207(2): jmp 0xffffffb1(%rip)
3209(7): nop 0x0(%rax)
3210(7): or $0xc00,%r10d
3217(2): jmp 0xffffffa1(%rip)
3219(7): nop 0x0(%rax)
3220(7): or $0x124,%r10d
3227(2): jmp 0xffffff91(%rip)
3229(7): nop 0x0(%rax)
3230(6): mov $0x7,%r10d
3236(5): jmp 0xfffffe76(%rip)
323b(5): nop 0x0(%rax,%rax,1)
3240(4): lea 0x2(%rbx),%r8
3244(6): mov $0x38,%r10d
324a(5): jmp 0xfffffe62(%rip)
324f(1): nop 
3250(6): mov $0xfff,%r11d
3256(4): add $0x1,%rbx
325a(5): jmp 0xfffffd9b(%rip)
325f(1): nop 
3260(7): or $0x438,%r11d
3267(2): jmp 0xffffffef(%rip)
3269(7): nop 0x0(%rax)
3270(7): or $0x9c0,%r11d
3277(2): jmp 0xffffffdf(%rip)
3279(7): nop 0x0(%rax)
3280(7): or $0x207,%r11d
3287(2): jmp 0xffffffcf(%rip)
3289(7): nop 0x0(%rax)
3290(2): test %al,%al
3292(6): jnz 0xfffffdcd(%rip)
3298(3): sub %rbx,%rdx
329b(2): mov %ebp,%ebx
329d(5): mov $0xfff,%eax
32a2(6): and $0xc00,%ebx
32a8(5): mov $0x20,%edi
32ad(6): or $0x3ff,%ebx
32b3(4): cmp $0x5,%rdx
32b7(3): cmovnl %eax,%ebx
32ba(5): call 0x2636(%rip)
32bf(5): mov $0x13d,%edx
32c4(7): mov $0xfff,0x4(%rax)
32cb(3): mov %ebp,0x8(%rax)
32ce(3): mov %dx,(%rax)
32d1(3): mov %ebx,0xc(%rax)
32d4(4): mov $0x0,0x11(%rax)
32d8(4): add $0x8,%rsp
32dc(1): pop %rbx
32dd(1): pop %rbp
32de(1): ret near (%rsp)
32df(5): mov $0x1,%ecx
32e4(5): jmp 0xfffffcea(%rip)
32e9(5): call 0x2857(%rip)
32ee(2): nop 
32f0(4): cmp $0x2c,%r9b
32f4(2): jnz 0xe(%rip)
32f6(4): add $0x1,%rbx
32fa(3): mov %rdi,%rsi
32fd(5): jmp 0xfffffcf5(%rip)
3302(3): test %r9b,%r9b
3305(6): jnz 0xfffffd1e(%rip)
330b(4): shl/sal $0x4,%rdi
330f(5): mov $0x0,0x1(%rax,%rdi,1)
3314(5): jmp 0xfffffd19(%rip)

"mode_create_from_ref" :
3320(1): push %rbx
3321(3): mov %rdi,%rsi
3324(5): mov $0x1,%edi
3329(7): sub $0xa0,%rsp
3330(3): mov %rsp,%rdx
3333(9): mov $0x28,%rax
333c(8): mov %rax,0x98(%rsp)
3344(2): xor %eax,%eax
3346(5): call 0xffffe5ba(%rip)
334b(2): test %eax,%eax
334d(2): jnz 0x53(%rip)
334f(4): mov 0x18(%rsp),%ebx
3353(5): mov $0x20,%edi
3358(5): call 0x2598(%rip)
335d(5): mov $0x13d,%edx
3362(7): mov $0xfff,0x4(%rax)
3369(7): mov $0xfff,0xc(%rax)
3370(3): mov %dx,(%rax)
3373(3): mov %ebx,0x8(%rax)
3376(4): mov $0x0,0x11(%rax)
337a(8): mov 0x98(%rsp),%rcx
3382(9): xor $0x28,%rcx
338b(2): jnz 0x19(%rip)
338d(7): add $0xa0,%rsp
3394(1): pop %rbx
3395(1): ret near (%rsp)
3396(a): nop 0x0(%rax,%rax,1)
33a0(2): xor %eax,%eax
33a2(2): jmp 0xffffffd8(%rip)
33a4(5): call 0xffffe43c(%rip)

"mode_adjust" :
33b0(5): movzx 0x1(%rcx),%r10d
33b5(2): mov %edi,%eax
33b7(5): and $0xfff,%eax
33bc(3): test %r10b,%r10b
33bf(6): jz 0x151(%rip)
33c5(4): cmp $0x1,%sil
33c9(2): push %r12
33cb(1): push %rbp
33cc(1): push %rbx
33cd(2): sbb %ebx,%ebx
33cf(4): movzx %sil,%ebp
33d3(2): not %ebx
33d5(3): xor %r11d,%r11d
33d8(6): and $0xc00,%ebx
33de(2): jmp 0x3c(%rip)
33e0(3): mov %r9d,%edi
33e3(2): or %edx,%edi
33e5(2): not %edi
33e7(2): and %edi,%esi
33e9(4): cmp $0x2d,%r12b
33ed(6): jz 0x113(%rip)
33f3(4): cmp $0x3d,%r12b
33f7(6): jz 0xb4(%rip)
33fd(4): cmp $0x2b,%r12b
3401(2): jnz 0x7(%rip)
3403(3): or %esi,%r11d
3406(2): or %esi,%eax
3408(4): add $0x10,%rcx
340c(5): movzx 0x1(%rcx),%r10d
3411(3): test %r10b,%r10b
3414(6): jz 0xb8(%rip)
341a(4): mov 0xc(%rcx),%r9d
341e(3): mov 0x4(%rcx),%edi
3421(3): mov 0x8(%rcx),%esi
3424(3): not %r9d
3427(3): and %ebx,%r9d
342a(4): cmp $0x2,%r10b
342e(6): jz 0xb2(%rip)
3434(4): cmp $0x3,%r10b
3438(2): jnz 0x40(%rip)
343a(2): and %eax,%esi
343c(3): mov %esi,%r10d
343f(7): and $0x124,%r10d
3446(4): cmp $0x1,%r10d
344a(3): sbb %r10d,%r10d
344d(3): not %r10d
3450(7): and $0x124,%r10d
3457(3): mov %r10d,%r12d
345a(4): or $0x92,%r12b
345e(4): test $0x92,%sil
3462(4): cmovne %r12d,%r10d
3466(3): mov %r10d,%r12d
3469(4): or $0x49,%r12d
346d(4): test $0x49,%sil
3471(4): cmovne %r12d,%r10d
3475(3): or %r10d,%esi
3478(3): mov %r9d,%r10d
347b(2): test %edi,%edi
347d(4): movzx (%rcx),%r12d
3481(3): not %r10d
3484(6): jz 0xffffff5c(%rip)
348a(3): and %edi,%r10d
348d(3): and %r10d,%esi
3490(4): cmp $0x2d,%r12b
3494(2): jz 0x6c(%rip)
3496(4): cmp $0x3d,%r12b
349a(6): jnz 0xffffff63(%rip)
34a0(2): not %edi
34a2(3): or %edi,%r9d
34a5(3): mov %r9d,%r10d
34a8(3): not %r10d
34ab(7): and $0xfff,%r10d
34b2(4): add $0x10,%rcx
34b6(3): and %r9d,%eax
34b9(3): or %r10d,%r11d
34bc(5): movzx 0x1(%rcx),%r10d
34c1(2): or %esi,%eax
34c3(3): test %r10b,%r10b
34c6(6): jnz 0xffffff54(%rip)
34cc(3): test %r8,%r8
34cf(2): jz 0x5(%rip)
34d1(3): mov %r11d,(%r8)
34d4(1): pop %rbx
34d5(1): pop %rbp
34d6(2): pop %r12
34d8(1): ret near (%rsp)
34d9(7): nop 0x0(%rax)
34e0(3): mov %eax,%r12d
34e3(3): mov %esi,%r10d
34e6(4): and $0x49,%r12d
34ea(4): or $0x49,%r10d
34ee(3): or %ebp,%r12d
34f1(4): cmovne %r10d,%esi
34f5(2): jmp 0xffffff83(%rip)
34f7(9): nop 0x0(%rax,%rax,1)
3500(3): or %esi,%r11d
3503(2): not %esi
3505(2): and %esi,%eax
3507(5): jmp 0xffffff01(%rip)
350c(4): nop 0x0(%rax)
3510(3): xor %r11d,%r11d
3513(3): test %r8,%r8
3516(2): jz 0x5(%rip)
3518(3): mov %r11d,(%r8)
351b(2): REP ret near (%rsp)

"set_program_name" :
3520(3): test %rdi,%rdi
3523(1): push %rbx
3524(2): jz 0x79(%rip)
3526(5): mov $0x2f,%esi
352b(3): mov %rdi,%rbx
352e(5): call 0xffffe2f2(%rip)
3533(3): test %rax,%rax
3536(2): jz 0x57(%rip)
3538(4): lea 0x1(%rax),%r8
353c(3): mov %r8,%rdx
353f(3): sub %rbx,%rdx
3542(4): cmp $0x6,%rdx
3546(2): jle 0x47(%rip)
3548(4): lea 0xfffffffa(%rax),%rsi
354c(7): lea 0x712d(%rip),%rdi
3553(5): mov $0x7,%ecx
3558(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
355a(3): setnbe %dl
355d(3): sbb $0x0,%dl
3560(2): test %dl,%dl
3562(2): jnz 0x2b(%rip)
3564(7): lea 0x711d(%rip),%rdi
356b(5): mov $0x3,%ecx
3570(3): mov %r8,%rsi
3573(3): mov %r8,%rbx
3576(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3578(3): setnbe %dl
357b(3): sbb $0x0,%dl
357e(2): test %dl,%dl
3580(2): jnz 0xd(%rip)
3582(4): lea 0x4(%rax),%rbx
3586(7): mov %rbx,0x20ab13(%rip)
358d(7): mov %rbx,0x20ab94(%rip)
3594(7): mov %rbx,0x20ab25(%rip)
359b(1): pop %rbx
359c(1): ret near (%rsp)
359d(7): mov 0x20ab3c(%rip),%rcx
35a4(7): lea 0x709d(%rip),%rdi
35ab(5): mov $0x37,%edx
35b0(5): mov $0x1,%esi
35b5(5): call 0xffffe48b(%rip)
35ba(5): call 0xffffe136(%rip)

"gettext_quote.part.1" :
35c0(1): push %rbp
35c1(1): push %rbx
35c2(3): mov %rdi,%rbp
35c5(2): mov %esi,%ebx
35c7(4): sub $0x8,%rsp
35cb(5): call 0x6065(%rip)
35d0(3): movzx (%rax),%edx
35d3(3): and $0xdf,%edx
35d6(3): cmp $0x55,%dl
35d9(2): jz 0x77(%rip)
35db(3): cmp $0x47,%dl
35de(2): jz 0x22(%rip)
35e0(7): lea 0x70b4(%rip),%rax
35e7(7): lea 0x70af(%rip),%rdx
35ee(3): cmp $0x9,%ebx
35f1(4): cmovne %rdx,%rax
35f5(4): add $0x8,%rsp
35f9(1): pop %rbx
35fa(1): pop %rbp
35fb(1): ret near (%rsp)
35fc(4): nop 0x0(%rax)
3600(4): movzx 0x1(%rax),%edx
3604(3): and $0xdf,%edx
3607(3): cmp $0x42,%dl
360a(2): jnz 0xffffffd6(%rip)
360c(4): cmp $0x31,0x2(%rax)
3610(2): jnz 0xffffffd0(%rip)
3612(4): cmp $0x38,0x3(%rax)
3616(2): jnz 0xffffffca(%rip)
3618(4): cmp $0x30,0x4(%rax)
361c(2): jnz 0xffffffc4(%rip)
361e(4): cmp $0x33,0x5(%rax)
3622(2): jnz 0xffffffbe(%rip)
3624(4): cmp $0x30,0x6(%rax)
3628(2): jnz 0xffffffb8(%rip)
362a(4): cmp $0x0,0x7(%rax)
362e(2): jnz 0xffffffb2(%rip)
3630(4): cmp $0x60,0x0(%rbp)
3634(7): lea 0x7059(%rip),%rax
363b(7): lea 0x7056(%rip),%rdx
3642(4): cmovne %rdx,%rax
3646(4): add $0x8,%rsp
364a(1): pop %rbx
364b(1): pop %rbp
364c(1): ret near (%rsp)
364d(3): nop (%rax)
3650(4): movzx 0x1(%rax),%edx
3654(3): and $0xdf,%edx
3657(3): cmp $0x54,%dl
365a(2): jnz 0xffffff86(%rip)
365c(4): movzx 0x2(%rax),%edx
3660(3): and $0xdf,%edx
3663(3): cmp $0x46,%dl
3666(6): jnz 0xffffff7a(%rip)
366c(4): cmp $0x2d,0x3(%rax)
3670(6): jnz 0xffffff70(%rip)
3676(4): cmp $0x38,0x4(%rax)
367a(6): jnz 0xffffff66(%rip)
3680(4): cmp $0x0,0x5(%rax)
3684(6): jnz 0xffffff5c(%rip)
368a(4): cmp $0x60,0x0(%rbp)
368e(7): lea 0x6ff7(%rip),%rax
3695(7): lea 0x6ff4(%rip),%rdx
369c(4): cmovne %rdx,%rax
36a0(4): add $0x8,%rsp
36a4(1): pop %rbx
36a5(1): pop %rbp
36a6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
36b0(2): push %r15
36b2(2): push %r14
36b4(3): mov %r8d,%r15d
36b7(2): push %r13
36b9(2): push %r12
36bb(3): mov %rdi,%r14
36be(1): push %rbp
36bf(1): push %rbx
36c0(3): mov %r9d,%ebx
36c3(3): mov %rsi,%r13
36c6(3): mov %rcx,%rbp
36c9(3): and $0x2,%ebx
36cc(7): sub $0xb8,%rsp
36d3(8): mov 0xf0(%rsp),%rax
36db(5): mov %rdx,0x10(%rsp)
36e0(5): mov %r8d,0x8(%rsp)
36e5(5): mov %r9d,0x78(%rsp)
36ea(5): mov %rax,0x20(%rsp)
36ef(8): mov 0xf8(%rsp),%rax
36f7(5): mov %rax,0x68(%rsp)
36fc(8): mov 0x100(%rsp),%rax
3704(5): mov %rax,0x60(%rsp)
3709(9): mov $0x28,%rax
3712(8): mov %rax,0xa8(%rsp)
371a(2): xor %eax,%eax
371c(5): call 0xffffe084(%rip)
3721(4): cmp $0xa,%r15d
3725(5): mov %rax,0x58(%rsp)
372a(6): jnbe 0x11b5(%rip)
3730(7): lea 0x6fc9(%rip),%rcx
3737(3): mov %r15d,%edx
373a(4): movsxd 0x0(%rcx,%rdx,4),%rax
373e(3): add %rcx,%rax
3741(2): jmp %rax
3743(5): mov $0x1,0xe(%rsp)
3748(5): mov $0x0,0x7c(%rsp)
374d(3): xor %r12d,%r12d
3750(9): mov $0x0,0x50(%rsp)
3759(5): mov $0x1,0xf(%rsp)
375e(5): mov $0x0,0xd(%rsp)
3763(7): lea 0x6f33(%rip),%rax
376a(9): mov $0x1,0x18(%rsp)
3773(3): xor %r15d,%r15d
3776(8): mov $0x2,0x8(%rsp)
377e(5): mov %rax,0x48(%rsp)
3783(3): xor %r11d,%r11d
3786(3): mov %rbp,%rax
3789(3): mov %r12d,%r8d
378c(3): mov %r11,%rbp
378f(3): mov %rax,%r11
3792(6): nop 0x0(%rax,%rax,1)
3798(3): cmp %rbp,%r11
379b(4): setnz %r12b
379f(4): cmp $0xffffffff,%r11
37a3(2): jnz 0xf(%rip)
37a5(5): mov 0x10(%rsp),%rax
37aa(4): cmp $0x0,0x0(%rax,%rbp,1)
37ae(4): setnz %r12b
37b2(3): test %r12b,%r12b
37b5(6): jz 0x65b(%rip)
37bb(5): cmp $0x2,0x8(%rsp)
37c0(5): mov 0x10(%rsp),%rdi
37c5(4): lea 0x0(%rdi,%rbp,1),%r9
37c9(3): setnz %al
37cc(4): and 0xd(%rsp),%al
37d0(3): mov %eax,%r10d
37d3(6): jz 0xad(%rip)
37d9(5): mov 0x18(%rsp),%rax
37de(3): test %rax,%rax
37e1(6): jz 0x42f(%rip)
37e7(4): cmp $0xffffffff,%r11
37eb(5): lea 0x0(%rbp,%rax,1),%rbx
37f0(2): jnz 0x30(%rip)
37f2(4): cmp $0x1,%rax
37f6(2): jbe 0x2a(%rip)
37f8(5): mov %r8b,0x38(%rsp)
37fd(5): mov %r10b,0x30(%rsp)
3802(5): mov %r9,0x28(%rsp)
3807(5): call 0xffffdfa9(%rip)
380c(6): movzx 0x38(%rsp),%r8d
3812(6): movzx 0x30(%rsp),%r10d
3818(3): mov %rax,%r11
381b(5): mov 0x28(%rsp),%r9
3820(3): cmp %r11,%rbx
3823(5): mov %r10b,0x28(%rsp)
3828(6): jnbe 0x5b8(%rip)
382e(5): mov 0x18(%rsp),%rdx
3833(5): mov 0x48(%rsp),%rsi
3838(3): mov %r9,%rdi
383b(5): mov %r11,0x40(%rsp)
3840(5): mov %r8b,0x38(%rsp)
3845(5): mov %r9,0x30(%rsp)
384a(5): call 0xffffe036(%rip)
384f(2): test %eax,%eax
3851(5): mov 0x30(%rsp),%r9
3856(6): movzx 0x38(%rsp),%r8d
385c(5): mov 0x40(%rsp),%r11
3861(6): jnz 0x57f(%rip)
3867(5): cmp $0x0,0xf(%rsp)
386c(6): movzx 0x28(%rsp),%r10d
3872(6): jnz 0xf83(%rip)
3878(8): nop 0x0(%rax,%rax,1)
3880(4): movzx (%r9),%ebx
3884(3): cmp $0x7e,%bl
3887(6): jnbe 0x321(%rip)
388d(7): lea 0x6e98(%rip),%rcx
3894(3): movzx %bl,%edx
3897(4): movsxd 0x0(%rcx,%rdx,4),%rax
389b(3): add %rcx,%rax
389e(2): jmp %rax
38a0(3): xor %r10d,%r10d
38a3(4): cmp $0x1,%r11
38a7(3): setnz %al
38aa(4): cmp $0xffffffff,%r11
38ae(2): jnz 0xe(%rip)
38b0(5): mov 0x10(%rsp),%rax
38b5(4): cmp $0x0,0x1(%rax)
38b9(3): setnz %al
38bc(5): cmp $0x2,0x8(%rsp)
38c1(3): setz %dl
38c4(2): test %al,%al
38c6(6): jz 0x252(%rip)
38cc(3): xor %r12d,%r12d
38cf(2): xor %eax,%eax
38d1(7): nop 0x0(%rax)
38d8(5): cmp $0x1,0xd(%rsp)
38dd(6): jnz 0x115(%rip)
38e3(2): test %dl,%dl
38e5(6): jnz 0x10d(%rip)
38eb(5): mov 0x20(%rsp),%rsi
38f0(3): test %rsi,%rsi
38f3(2): jz 0x16(%rip)
38f5(2): mov %ebx,%edx
38f7(3): shr $0x5,%dl
38fa(3): movzx %dl,%edx
38fd(3): mov 0x0(%rsi,%rdx,4),%edx
3900(3): bt %ebx,%edx
3903(6): jb 0x150(%rip)
3909(3): test %r10b,%r10b
390c(6): jnz 0x147(%rip)
3912(3): xor $0x1,%eax
3915(4): add $0x1,%rbp
3919(3): and %r8d,%eax
391c(2): test %al,%al
391e(2): jz 0x22(%rip)
3920(3): cmp %r15,%r13
3923(2): jbe 0x7(%rip)
3925(5): mov $0x27,0x0(%r14,%r15,1)
392a(4): lea 0x1(%r15),%rax
392e(3): cmp %rax,%r13
3931(2): jbe 0x8(%rip)
3933(6): mov $0x27,0x1(%r14,%r15,1)
3939(4): add $0x2,%r15
393d(3): xor %r8d,%r8d
3940(3): cmp %r13,%r15
3943(2): jnb 0x6(%rip)
3945(4): mov %bl,0x0(%r14,%r15,1)
3949(5): movzx 0xe(%rsp),%edi
394e(4): add $0x1,%r15
3952(5): mov $0x0,%eax
3957(3): test %r12b,%r12b
395a(3): cmove %eax,%edi
395d(5): mov %dil,0xe(%rsp)
3962(5): jmp 0xfffffe36(%rip)
3967(9): nop 0x0(%rax,%rax,1)
3970(3): xor %r10d,%r10d
3973(4): mov 0x8(%rsp),%eax
3977(3): cmp $0x2,%eax
397a(6): jz 0x5be(%rip)
3980(3): cmp $0x5,%eax
3983(6): jz 0x575(%rip)
3989(3): cmp $0x2,%eax
398c(5): mov $0x3f,%ebx
3991(3): setz %dl
3994(3): xor %r12d,%r12d
3997(2): xor %eax,%eax
3999(5): jmp 0xffffff3f(%rip)
399e(2): nop 
39a0(3): xor %r10d,%r10d
39a3(5): cmp $0x2,0x8(%rsp)
39a8(6): jz 0x508(%rip)
39ae(5): mov %r12b,0x7c(%rsp)
39b3(2): xor %edx,%edx
39b5(2): xor %eax,%eax
39b7(5): mov $0x27,%ebx
39bc(5): jmp 0xffffff1c(%rip)
39c1(7): nop 0x0(%rax)
39c8(5): mov $0x9,%edx
39cd(5): mov $0x74,%ebx
39d2(5): cmp $0x2,0x8(%rsp)
39d7(3): setz %al
39da(4): and 0xf(%rsp),%al
39de(6): jnz 0x150(%rip)
39e4(5): cmp $0x0,0xd(%rsp)
39e9(2): jnz 0x67(%rip)
39eb(2): mov %edx,%ebx
39ed(3): xor %r12d,%r12d
39f0(2): xor %eax,%eax
39f2(5): cmp $0x0,0xf(%rsp)
39f7(6): jnz 0xfffffef4(%rip)
39fd(5): jmp 0xffffff0c(%rip)
3a02(6): nop 0x0(%rax,%rax,1)
3a08(5): mov $0x8,%edx
3a0d(5): mov $0x62,%ebx
3a12(2): jmp 0xffffffd2(%rip)
3a14(4): nop 0x0(%rax)
3a18(5): cmp $0x2,0x8(%rsp)
3a1d(6): jz 0x3d3(%rip)
3a23(5): cmp $0x0,0xd(%rsp)
3a28(6): jz 0x218(%rip)
3a2e(5): cmp $0x0,0xf(%rsp)
3a33(6): jz 0x20d(%rip)
3a39(6): cmp $0x0,0x18(%rsp)
3a3f(6): jnz 0x3bc(%rip)
3a45(5): mov $0x5c,%ebx
3a4a(6): nop 0x0(%rax,%rax,1)
3a50(3): xor %r12d,%r12d
3a53(5): cmp $0x2,0x8(%rsp)
3a58(3): setz %dl
3a5b(5): cmp $0x0,0xf(%rsp)
3a60(2): mov %edx,%eax
3a62(6): jnz 0x856(%rip)
3a68(3): mov %r8d,%eax
3a6b(3): xor $0x1,%eax
3a6e(2): and %dl,%al
3a70(2): jz 0x31(%rip)
3a72(3): cmp %r15,%r13
3a75(2): jbe 0x7(%rip)
3a77(5): mov $0x27,0x0(%r14,%r15,1)
3a7c(4): lea 0x1(%r15),%rdx
3a80(3): cmp %rdx,%r13
3a83(2): jbe 0x8(%rip)
3a85(6): mov $0x24,0x1(%r14,%r15,1)
3a8b(4): lea 0x2(%r15),%rdx
3a8f(3): cmp %rdx,%r13
3a92(2): jbe 0x8(%rip)
3a94(6): mov $0x27,0x2(%r14,%r15,1)
3a9a(4): add $0x3,%r15
3a9e(3): mov %eax,%r8d
3aa1(3): cmp %r15,%r13
3aa4(2): jbe 0x7(%rip)
3aa6(5): mov $0x5c,0x0(%r14,%r15,1)
3aab(4): add $0x1,%r15
3aaf(4): add $0x1,%rbp
3ab3(5): jmp 0xfffffe8d(%rip)
3ab8(8): nop 0x0(%rax,%rax,1)
3ac0(5): cmp $0x0,0xd(%rsp)
3ac5(6): jnz 0x1ce(%rip)
3acb(2): xor %edx,%edx
3acd(5): test $0x1,0x78(%rsp)
3ad2(6): jz 0xffffff19(%rip)
3ad8(4): add $0x1,%rbp
3adc(5): jmp 0xfffffcbc(%rip)
3ae1(7): nop 0x0(%rax)
3ae8(5): cmp $0x2,0x8(%rsp)
3aed(3): setz %dl
3af0(2): xor %eax,%eax
3af2(5): jmp 0xfffffde6(%rip)
3af7(9): nop 0x0(%rax,%rax,1)
3b00(5): mov $0x7,%edx
3b05(5): mov $0x61,%ebx
3b0a(5): jmp 0xfffffeda(%rip)
3b0f(1): nop 
3b10(5): cmp $0x2,0x8(%rsp)
3b15(3): setz %dl
3b18(3): test %rbp,%rbp
3b1b(6): jnz 0xfffffdb1(%rip)
3b21(5): movzx 0xf(%rsp),%eax
3b26(2): and %dl,%al
3b28(6): jz 0xfffffdb0(%rip)
3b2e(3): mov %r11,%rbp
3b31(8): mov $0x2,0x8(%rsp)
3b39(5): jmp 0x700(%rip)
3b3e(2): nop 
3b40(5): cmp $0x2,0x8(%rsp)
3b45(3): setz %dl
3b48(3): xor %r12d,%r12d
3b4b(2): jmp 0xffffffd6(%rip)
3b4d(3): nop (%rax)
3b50(5): cmp $0x2,0x8(%rsp)
3b55(5): mov $0x20,%ebx
3b5a(3): setz %dl
3b5d(2): jmp 0xffffffc4(%rip)
3b5f(1): nop 
3b60(5): mov $0xd,%edx
3b65(5): mov $0x72,%ebx
3b6a(5): jmp 0xfffffe68(%rip)
3b6f(1): nop 
3b70(5): mov $0xc,%edx
3b75(5): mov $0x66,%ebx
3b7a(5): jmp 0xfffffe6a(%rip)
3b7f(1): nop 
3b80(5): mov $0xb,%edx
3b85(5): mov $0x76,%ebx
3b8a(5): jmp 0xfffffe5a(%rip)
3b8f(1): nop 
3b90(5): mov $0xa,%edx
3b95(5): mov $0x6e,%ebx
3b9a(5): jmp 0xfffffe38(%rip)
3b9f(1): nop 
3ba0(3): xor %r10d,%r10d
3ba3(5): nop 0x0(%rax,%rax,1)
3ba8(6): cmp $0x1,0x58(%rsp)
3bae(6): jnz 0x3aa(%rip)
3bb4(5): mov %r11,0x38(%rsp)
3bb9(5): mov %r8b,0x30(%rsp)
3bbe(5): mov %r10b,0x28(%rsp)
3bc3(5): call 0xffffdebd(%rip)
3bc8(3): mov (%rax),%rcx
3bcb(3): movzx %bl,%edx
3bce(6): movzx 0x28(%rsp),%r10d
3bd4(6): movzx 0x30(%rsp),%r8d
3bda(5): mov 0x38(%rsp),%r11
3bdf(5): mov $0x1,%edi
3be4(4): movzx 0x0(%rcx,%rdx,2),%eax
3be8(4): and $0x4000,%ax
3bec(4): setnz %r12b
3bf0(3): setz %al
3bf3(4): and 0xd(%rsp),%al
3bf7(2): test %al,%al
3bf9(6): jnz 0x998(%rip)
3bff(5): cmp $0x2,0x8(%rsp)
3c04(3): setz %dl
3c07(5): jmp 0xfffffcd1(%rip)
3c0c(4): nop 0x0(%rax)
3c10(4): movzx (%r9),%ebx
3c14(3): cmp $0x7e,%bl
3c17(2): jnbe 0xffffff89(%rip)
3c19(7): lea 0x6d08(%rip),%rcx
3c20(3): movzx %bl,%edx
3c23(4): movsxd 0x0(%rcx,%rdx,4),%rax
3c27(3): add %rcx,%rax
3c2a(2): jmp %rax
3c2c(4): nop 0x0(%rax)
3c30(3): xor %r10d,%r10d
3c33(5): cmp $0x0,0xd(%rsp)
3c38(6): jnz 0xfffffdf6(%rip)
3c3e(2): nop 
3c40(5): mov $0x5c,%edx
3c45(5): mov $0x5c,%ebx
3c4a(5): jmp 0xfffffd9a(%rip)
3c4f(1): nop 
3c50(5): mov $0xc,%edx
3c55(3): xor %r10d,%r10d
3c58(5): mov $0x66,%ebx
3c5d(5): jmp 0xfffffd87(%rip)
3c62(6): nop 0x0(%rax,%rax,1)
3c68(5): mov $0xa,%edx
3c6d(3): xor %r10d,%r10d
3c70(5): mov $0x6e,%ebx
3c75(5): jmp 0xfffffd5d(%rip)
3c7a(6): nop 0x0(%rax,%rax,1)
3c80(5): mov $0x61,%ebx
3c85(5): jmp 0xfffffdcb(%rip)
3c8a(6): nop 0x0(%rax,%rax,1)
3c90(3): xor %r10d,%r10d
3c93(5): cmp $0x2,0x8(%rsp)
3c98(3): setz %dl
3c9b(5): cmp $0x0,0xf(%rsp)
3ca0(6): jnz 0xb9a(%rip)
3ca6(3): mov %r8d,%eax
3ca9(3): mov %r15,%rcx
3cac(3): xor $0x1,%eax
3caf(2): and %dl,%al
3cb1(2): jz 0x2f(%rip)
3cb3(3): cmp %r15,%r13
3cb6(2): jbe 0x7(%rip)
3cb8(5): mov $0x27,0x0(%r14,%r15,1)
3cbd(4): lea 0x1(%r15),%rcx
3cc1(3): cmp %rcx,%r13
3cc4(2): jbe 0x8(%rip)
3cc6(6): mov $0x24,0x1(%r14,%r15,1)
3ccc(4): lea 0x2(%r15),%rcx
3cd0(3): cmp %rcx,%r13
3cd3(6): jnbe 0x636(%rip)
3cd9(4): lea 0x3(%r15),%rcx
3cdd(3): mov %eax,%r8d
3ce0(3): cmp %rcx,%r13
3ce3(2): jbe 0x7(%rip)
3ce5(5): mov $0x5c,0x0(%r14,%rcx,1)
3cea(5): cmp $0x2,0x8(%rsp)
3cef(4): lea 0x1(%rcx),%r15
3cf3(6): jz 0x606(%rip)
3cf9(4): lea 0x1(%rbp),%rax
3cfd(3): cmp %r11,%rax
3d00(2): jnb 0x1b(%rip)
3d02(5): mov 0x10(%rsp),%rax
3d07(5): movzx 0x1(%rax,%rbp,1),%eax
3d0c(4): mov %al,0x28(%rsp)
3d10(3): sub $0x30,%eax
3d13(2): cmp $0x9,%al
3d15(6): jbe 0x834(%rip)
3d1b(3): mov %r12d,%eax
3d1e(5): mov $0x30,%ebx
3d23(3): xor %r12d,%r12d
3d26(5): jmp 0xfffffbb2(%rip)
3d2b(5): nop 0x0(%rax,%rax,1)
3d30(5): cmp $0x2,0x8(%rsp)
3d35(3): mov %r10d,%r12d
3d38(3): setz %dl
3d3b(3): xor %r10d,%r10d
3d3e(2): xor %eax,%eax
3d40(5): jmp 0xfffffb98(%rip)
3d45(3): nop (%rax)
3d48(5): cmp $0x2,0x8(%rsp)
3d4d(3): setz %dl
3d50(3): xor %r10d,%r10d
3d53(5): jmp 0xfffffdc5(%rip)
3d58(8): nop 0x0(%rax,%rax,1)
3d60(5): cmp $0x2,0x8(%rsp)
3d65(3): setz %dl
3d68(3): xor %r10d,%r10d
3d6b(3): xor %r12d,%r12d
3d6e(5): jmp 0xfffffdb3(%rip)
3d73(5): nop 0x0(%rax,%rax,1)
3d78(5): cmp $0x2,0x8(%rsp)
3d7d(3): mov %r10d,%r12d
3d80(5): mov $0x20,%ebx
3d85(3): setz %dl
3d88(3): xor %r10d,%r10d
3d8b(5): jmp 0xfffffd96(%rip)
3d90(5): mov $0xd,%edx
3d95(3): xor %r10d,%r10d
3d98(5): mov $0x72,%ebx
3d9d(5): jmp 0xfffffc35(%rip)
3da2(6): nop 0x0(%rax,%rax,1)
3da8(5): mov $0x76,%ebx
3dad(5): jmp 0xfffffca3(%rip)
3db2(6): nop 0x0(%rax,%rax,1)
3db8(5): mov $0x9,%edx
3dbd(3): xor %r10d,%r10d
3dc0(5): mov $0x74,%ebx
3dc5(5): jmp 0xfffffc0d(%rip)
3dca(6): nop 0x0(%rax,%rax,1)
3dd0(5): mov $0x62,%ebx
3dd5(5): jmp 0xfffffc7b(%rip)
3dda(6): nop 0x0(%rax,%rax,1)
3de0(3): xor %r10d,%r10d
3de3(5): jmp 0xfffffa9d(%rip)
3de8(8): nop 0x0(%rax,%rax,1)
3df0(5): cmp $0x0,0xf(%rsp)
3df5(6): jnz 0x96b(%rip)
3dfb(4): add $0x1,%rbp
3dff(3): mov %r8d,%eax
3e02(3): xor %r12d,%r12d
3e05(5): mov $0x5c,%ebx
3e0a(5): jmp 0xfffffb12(%rip)
3e0f(1): nop 
3e10(5): cmp $0x2,0x8(%rsp)
3e15(5): movzx 0xf(%rsp),%ebx
3e1a(3): mov %r8d,%r12d
3e1d(3): mov %r11,%rbp
3e20(3): setz %dl
3e23(2): mov %ebx,%eax
3e25(3): test %r15,%r15
3e28(3): setz %cl
3e2b(2): and %edx,%eax
3e2d(2): and %cl,%al
3e2f(6): jnz 0xa67(%rip)
3e35(2): mov %ebx,%eax
3e37(3): xor $0x1,%eax
3e3a(2): and %al,%dl
3e3c(6): jz 0x970(%rip)
3e42(5): cmp $0x0,0x7c(%rsp)
3e47(6): jz 0x963(%rip)
3e4d(5): cmp $0x0,0xe(%rsp)
3e52(6): jnz 0x9fb(%rip)
3e58(3): test %r13,%r13
3e5b(3): setz %al
3e5e(6): cmp $0x0,0x50(%rsp)
3e64(3): setnz %dl
3e67(2): and %dl,%al
3e69(6): jz 0xa23(%rip)
3e6f(5): mov 0x50(%rsp),%r13
3e74(7): lea 0x6822(%rip),%rbx
3e7b(4): mov $0x27,(%r14)
3e7f(8): mov $0x2,0x8(%rsp)
3e87(6): mov $0x1,%r15d
3e8d(9): mov $0x1,0x18(%rsp)
3e96(5): mov $0x0,0xf(%rsp)
3e9b(5): mov %rbx,0x48(%rsp)
3ea0(4): mov %al,0x7c(%rsp)
3ea4(5): jmp 0xfffff8df(%rip)
3ea9(7): nop 0x0(%rax)
3eb0(5): cmp $0x0,0xf(%rsp)
3eb5(6): jnz 0x8ab(%rip)
3ebb(3): test %r13,%r13
3ebe(6): jz 0x402(%rip)
3ec4(2): xor %edx,%edx
3ec6(6): cmp $0x0,0x50(%rsp)
3ecc(6): jnz 0x3f4(%rip)
3ed2(5): mov %r13,0x50(%rsp)
3ed7(4): add $0x3,%r15
3edb(2): xor %eax,%eax
3edd(5): mov %r12b,0x7c(%rsp)
3ee2(3): xor %r8d,%r8d
3ee5(3): mov %rdx,%r13
3ee8(5): mov $0x27,%ebx
3eed(5): jmp 0xfffffa1c(%rip)
3ef2(6): nop 0x0(%rax,%rax,1)
3ef8(5): test $0x4,0x78(%rsp)
3efd(2): jz 0x23(%rip)
3eff(4): lea 0x2(%rbp),%rcx
3f03(3): cmp %r11,%rcx
3f06(2): jnb 0x1a(%rip)
3f08(5): mov 0x10(%rsp),%rax
3f0d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3f12(6): jz 0x790(%rip)
3f18(8): nop 0x0(%rax,%rax,1)
3f20(2): xor %edx,%edx
3f22(3): xor %r12d,%r12d
3f25(2): xor %eax,%eax
3f27(5): mov $0x3f,%ebx
3f2c(5): jmp 0xfffff9ac(%rip)
3f31(7): nop 0x0(%rax)
3f38(5): cmp $0x0,0xf(%rsp)
3f3d(6): jnz 0x823(%rip)
3f43(3): xor %r12d,%r12d
3f46(2): xor %eax,%eax
3f48(5): mov $0x3f,%ebx
3f4d(5): jmp 0xfffff9bc(%rip)
3f52(6): nop 0x0(%rax,%rax,1)
3f58(8): lea 0xa0(%rsp),%rax
3f60(4): cmp $0xffffffff,%r11
3f64(c): mov $0x0,0xa0(%rsp)
3f70(5): mov %rax,0x28(%rsp)
3f75(2): jnz 0x2f(%rip)
3f77(5): mov 0x10(%rsp),%rdi
3f7c(5): mov %r8b,0x40(%rsp)
3f81(5): mov %r10b,0x38(%rsp)
3f86(5): mov %r9,0x30(%rsp)
3f8b(5): call 0xffffd825(%rip)
3f90(6): movzx 0x40(%rsp),%r8d
3f96(6): movzx 0x38(%rsp),%r10d
3f9c(3): mov %rax,%r11
3f9f(5): mov 0x30(%rsp),%r9
3fa4(8): lea 0x9c(%rsp),%rax
3fac(2): xor %ecx,%ecx
3fae(4): mov %bl,0x7e(%rsp)
3fb2(5): mov %r8b,0x7d(%rsp)
3fb7(3): mov %rcx,%rbx
3fba(8): mov %r9,0x88(%rsp)
3fc2(5): mov %rax,0x38(%rsp)
3fc7(5): mov %r10b,0x7f(%rsp)
3fcc(8): mov %r15,0x80(%rsp)
3fd4(5): mov %r14,0x40(%rsp)
3fd9(5): mov %r13,0x70(%rsp)
3fde(5): mov %r11,0x30(%rsp)
3fe3(5): mov 0x10(%rsp),%rax
3fe8(5): lea 0x0(%rbp,%rbx,1),%r14
3fed(5): mov 0x30(%rsp),%rdx
3ff2(5): mov 0x28(%rsp),%rcx
3ff7(5): mov 0x38(%rsp),%rdi
3ffc(4): lea 0x0(%rax,%r14,1),%r13
4000(3): sub %r14,%rdx
4003(3): mov %r13,%rsi
4006(5): call 0x401a(%rip)
400b(3): test %rax,%rax
400e(3): mov %rax,%r15
4011(2): jz 0x50(%rip)
4013(4): cmp $0xffffffff,%rax
4017(6): jz 0x61e(%rip)
401d(4): cmp $0xfffffffe,%rax
4021(6): jz 0x5a0(%rip)
4027(5): cmp $0x2,0x8(%rsp)
402c(3): setz %al
402f(4): and 0xf(%rsp),%al
4033(6): jnz 0x19d(%rip)
4039(7): mov 0x9c(%rsp),%edi
4040(5): call 0xffffda30(%rip)
4045(5): mov 0x28(%rsp),%rdi
404a(2): test %eax,%eax
404c(5): mov $0x0,%eax
4051(4): cmove %eax,%r12d
4055(3): add %r15,%rbx
4058(5): call 0xffffda08(%rip)
405d(2): test %eax,%eax
405f(2): jz 0xffffff84(%rip)
4061(3): mov %r12d,%edx
4064(3): mov %rbx,%rdi
4067(6): movzx 0x7d(%rsp),%r8d
406d(3): xor $0x1,%edx
4070(5): movzx 0x7e(%rsp),%ebx
4075(6): movzx 0x7f(%rsp),%r10d
407b(4): and 0xd(%rsp),%dl
407f(8): mov 0x80(%rsp),%r15
4087(5): mov 0x40(%rsp),%r14
408c(5): mov 0x70(%rsp),%r13
4091(5): mov 0x30(%rsp),%r11
4096(4): cmp $0x1,%rdi
409a(6): jbe 0x601(%rip)
40a0(3): mov %rdi,%rcx
40a3(2): xor %esi,%esi
40a5(6): movzx 0xf(%rsp),%r9d
40ab(3): add %rbp,%rcx
40ae(5): mov 0x10(%rsp),%rdi
40b3(5): jmp 0xbb(%rip)
40b8(8): nop 0x0(%rax,%rax,1)
40c0(5): cmp $0x2,0x8(%rsp)
40c5(3): setz %al
40c8(3): test %r9b,%r9b
40cb(6): jnz 0x4b5(%rip)
40d1(3): mov %r8d,%esi
40d4(3): xor $0x1,%esi
40d7(3): and %sil,%al
40da(2): jz 0x31(%rip)
40dc(3): cmp %r15,%r13
40df(2): jbe 0x7(%rip)
40e1(5): mov $0x27,0x0(%r14,%r15,1)
40e6(4): lea 0x1(%r15),%rsi
40ea(3): cmp %rsi,%r13
40ed(2): jbe 0x8(%rip)
40ef(6): mov $0x24,0x1(%r14,%r15,1)
40f5(4): lea 0x2(%r15),%rsi
40f9(3): cmp %rsi,%r13
40fc(2): jbe 0x8(%rip)
40fe(6): mov $0x27,0x2(%r14,%r15,1)
4104(4): add $0x3,%r15
4108(3): mov %eax,%r8d
410b(3): cmp %r15,%r13
410e(2): jbe 0x7(%rip)
4110(5): mov $0x5c,0x0(%r14,%r15,1)
4115(4): lea 0x1(%r15),%rax
4119(3): cmp %rax,%r13
411c(2): jbe 0xf(%rip)
411e(2): mov %ebx,%eax
4120(3): shr $0x6,%al
4123(3): add $0x30,%eax
4126(5): mov %al,0x1(%r14,%r15,1)
412b(4): lea 0x2(%r15),%rax
412f(3): cmp %rax,%r13
4132(2): jbe 0x12(%rip)
4134(2): mov %ebx,%eax
4136(3): shr $0x3,%al
4139(3): and $0x7,%eax
413c(3): add $0x30,%eax
413f(5): mov %al,0x2(%r14,%r15,1)
4144(3): and $0x7,%ebx
4147(4): add $0x1,%rbp
414b(4): add $0x3,%r15
414f(3): add $0x30,%ebx
4152(3): cmp %rcx,%rbp
4155(6): jnb 0xfffff7eb(%rip)
415b(2): mov %edx,%esi
415d(3): cmp %r15,%r13
4160(2): jbe 0x6(%rip)
4162(4): mov %bl,0x0(%r14,%r15,1)
4166(4): movzx 0x0(%rdi,%rbp,1),%ebx
416a(4): add $0x1,%r15
416e(2): test %dl,%dl
4170(6): jnz 0xffffff50(%rip)
4176(2): mov %esi,%eax
4178(3): xor $0x1,%eax
417b(3): and %r8d,%eax
417e(3): test %r10b,%r10b
4181(2): jz 0x10(%rip)
4183(3): cmp %r15,%r13
4186(2): jbe 0x7(%rip)
4188(5): mov $0x5c,0x0(%r14,%r15,1)
418d(4): add $0x1,%r15
4191(4): add $0x1,%rbp
4195(3): cmp %rcx,%rbp
4198(6): jnb 0xfffff784(%rip)
419e(2): test %al,%al
41a0(6): jz 0x3fe(%rip)
41a6(3): cmp %r15,%r13
41a9(2): jbe 0x7(%rip)
41ab(5): mov $0x27,0x0(%r14,%r15,1)
41b0(4): lea 0x1(%r15),%rax
41b4(3): cmp %rax,%r13
41b7(2): jbe 0x8(%rip)
41b9(6): mov $0x27,0x1(%r14,%r15,1)
41bf(4): add $0x2,%r15
41c3(3): xor %r10d,%r10d
41c6(3): xor %r8d,%r8d
41c9(2): jmp 0xffffff94(%rip)
41cb(5): nop 0x0(%rax,%rax,1)
41d0(4): cmp $0x1,%r15
41d4(6): jz 0xfffffe65(%rip)
41da(5): mov 0x10(%rsp),%rdi
41df(4): lea 0x0(%rdi,%r15,1),%rcx
41e3(5): lea 0x1(%rdi,%r14,1),%rdx
41e8(4): lea 0x0(%rcx,%r14,1),%r8
41ec(2): jmp 0x11(%rip)
41ee(2): nop 
41f0(4): add $0x1,%rdx
41f4(3): cmp %rdx,%r8
41f7(6): jz 0xfffffe42(%rip)
41fd(3): movzx (%rdx),%ecx
4200(3): sub $0x5b,%ecx
4203(3): cmp $0x21,%cl
4206(2): jnbe 0xffffffea(%rip)
4208(5): mov $0x1,%esi
420d(3): shl/sal %cl,%rsi
4210(3): mov %rsi,%rcx
4213(a): mov $0x8589934635,%rsi
421d(3): test %rsi,%rcx
4220(2): jz 0xffffffd0(%rip)
4222(5): mov 0x40(%rsp),%r14
4227(5): mov 0x70(%rsp),%r13
422c(5): mov 0x30(%rsp),%rbp
4231(8): mov $0x2,0x8(%rsp)
4239(5): cmp $0x0,0xd(%rsp)
423e(2): jz 0x12(%rip)
4240(2): test %al,%al
4242(5): mov $0x4,%eax
4247(5): cmove 0x8(%rsp),%eax
424c(4): mov %eax,0x8(%rsp)
4250(4): sub $0x8,%rsp
4254(3): mov %rbp,%rcx
4257(3): mov %r13,%rsi
425a(4): push 0x68(%rsp)
425e(4): push 0x78(%rsp)
4262(3): mov %r14,%rdi
4265(2): push $0x0
4267(8): mov 0x98(%rsp),%r9d
426f(5): mov 0x28(%rsp),%r8d
4274(5): mov 0x30(%rsp),%rdx
4279(4): and $0xfd,%r9d
427d(5): call 0xfffff433(%rip)
4282(4): add $0x20,%rsp
4286(3): mov %rax,%r15
4289(8): mov 0xa8(%rsp),%rbx
4291(9): xor $0x28,%rbx
429a(3): mov %r15,%rax
429d(6): jnz 0x606(%rip)
42a3(7): add $0xb8,%rsp
42aa(1): pop %rbx
42ab(1): pop %rbp
42ac(2): pop %r12
42ae(2): pop %r13
42b0(2): pop %r14
42b2(2): pop %r15
42b4(1): ret near (%rsp)
42b5(3): nop (%rax)
42b8(3): mov %r11,%rbp
42bb(5): jmp 0xffffff7e(%rip)
42c0(3): cmp %r15,%r13
42c3(2): jbe 0x7(%rip)
42c5(5): mov $0x27,0x0(%r14,%r15,1)
42ca(4): lea 0x1(%r15),%rax
42ce(3): cmp %rax,%r13
42d1(2): jbe 0x8(%rip)
42d3(6): mov $0x5c,0x1(%r14,%r15,1)
42d9(4): lea 0x2(%r15),%rax
42dd(3): cmp %rax,%r13
42e0(6): jbe 0x5f2(%rip)
42e6(3): mov %r13,%rdx
42e9(6): mov $0x27,0x2(%r14,%r15,1)
42ef(5): mov 0x50(%rsp),%r13
42f4(5): jmp 0xfffffbde(%rip)
42f9(3): mov %r12d,%eax
42fc(5): mov $0x30,%ebx
4301(3): xor %r12d,%r12d
4304(5): jmp 0xfffff605(%rip)
4309(6): mov $0x27,0x2(%r14,%r15,1)
430f(5): jmp 0xfffff9ca(%rip)
4314(2): test %ebx,%ebx
4316(6): jnz 0xfffff42d(%rip)
431c(5): mov $0x1,0xd(%rsp)
4321(3): test %r13,%r13
4324(6): jnz 0x596(%rip)
432a(7): lea 0x636c(%rip),%rax
4331(9): mov $0x0,0x50(%rsp)
433a(5): mov $0x1,0xe(%rsp)
433f(5): mov $0x0,0x7c(%rsp)
4344(3): xor %r12d,%r12d
4347(5): mov $0x0,0xf(%rsp)
434c(9): mov $0x1,0x18(%rsp)
4355(5): mov %rax,0x48(%rsp)
435a(6): mov $0x1,%r15d
4360(8): mov $0x2,0x8(%rsp)
4368(5): jmp 0xfffff41b(%rip)
436d(3): nop (%rax)
4370(2): test %ebx,%ebx
4372(6): jnz 0x3fb(%rip)
4378(3): test %r13,%r13
437b(6): jz 0x22b(%rip)
4381(4): mov $0x22,(%r14)
4385(5): mov $0x1,0xe(%rsp)
438a(3): xor %r12d,%r12d
438d(5): mov $0x0,0x7c(%rsp)
4392(9): mov $0x0,0x50(%rsp)
439b(7): lea 0x62f9(%rip),%rax
43a2(5): mov $0x0,0xf(%rsp)
43a7(5): mov $0x1,0xd(%rsp)
43ac(9): mov $0x1,0x18(%rsp)
43b5(6): mov $0x1,%r15d
43bb(5): mov %rax,0x48(%rsp)
43c0(5): jmp 0xfffff3c3(%rip)
43c5(7): lea 0x62cf(%rip),%rax
43cc(5): mov $0x1,0xe(%rsp)
43d1(5): mov $0x0,0x7c(%rsp)
43d6(3): xor %r12d,%r12d
43d9(9): mov $0x0,0x50(%rsp)
43e2(5): mov $0x1,0xf(%rsp)
43e7(5): mov $0x1,0xd(%rsp)
43ec(9): mov $0x1,0x18(%rsp)
43f5(3): xor %r15d,%r15d
43f8(5): mov %rax,0x48(%rsp)
43fd(8): mov $0x5,0x8(%rsp)
4405(5): jmp 0xfffff37e(%rip)
440a(5): mov $0x1,0xe(%rsp)
440f(5): mov $0x0,0x7c(%rsp)
4414(3): xor %r12d,%r12d
4417(9): mov $0x0,0x50(%rsp)
4420(5): mov $0x0,0xf(%rsp)
4425(3): xor %r15d,%r15d
4428(5): mov $0x1,0xd(%rsp)
442d(9): mov $0x0,0x18(%rsp)
4436(9): mov $0x0,0x48(%rsp)
443f(5): jmp 0xfffff344(%rip)
4444(5): cmp $0xa,0x8(%rsp)
4449(2): jz 0x58(%rip)
444b(7): lea 0x624d(%rip),%rsi
4452(2): xor %edi,%edi
4454(5): mov $0x5,%edx
4459(5): call 0xffffd337(%rip)
445e(3): mov %rax,%rcx
4461(5): mov %rax,0x68(%rsp)
4466(7): lea 0x6232(%rip),%rax
446d(3): cmp %rax,%rcx
4470(6): jz 0x39e(%rip)
4476(7): lea 0x6220(%rip),%rsi
447d(2): xor %edi,%edi
447f(5): mov $0x5,%edx
4484(5): call 0xffffd30c(%rip)
4489(3): mov %rax,%rcx
448c(5): mov %rax,0x60(%rsp)
4491(7): lea 0x6205(%rip),%rax
4498(3): cmp %rax,%rcx
449b(6): jz 0x389(%rip)
44a1(3): xor %r15d,%r15d
44a4(2): test %ebx,%ebx
44a6(6): jz 0x1c7(%rip)
44ac(2): test %ebx,%ebx
44ae(5): mov 0x60(%rsp),%rbx
44b3(5): setnz 0xf(%rsp)
44b8(3): xor %r12d,%r12d
44bb(3): mov %rbx,%rdi
44be(5): call 0xffffd2f2(%rip)
44c3(5): mov %rbx,0x48(%rsp)
44c8(5): mov %rax,0x18(%rsp)
44cd(5): mov $0x1,0xe(%rsp)
44d2(5): mov $0x0,0x7c(%rsp)
44d7(9): mov $0x0,0x50(%rsp)
44e0(5): mov $0x1,0xd(%rsp)
44e5(5): jmp 0xfffff29e(%rip)
44ea(5): mov $0x1,0xe(%rsp)
44ef(5): mov $0x0,0x7c(%rsp)
44f4(3): xor %r12d,%r12d
44f7(9): mov $0x0,0x50(%rsp)
4500(5): mov $0x0,0xf(%rsp)
4505(3): xor %r15d,%r15d
4508(5): mov $0x0,0xd(%rsp)
450d(9): mov $0x0,0x18(%rsp)
4516(9): mov $0x0,0x48(%rsp)
451f(5): jmp 0xfffff264(%rip)
4524(5): mov $0x1,0xe(%rsp)
4529(5): mov $0x0,0x7c(%rsp)
452e(3): xor %r12d,%r12d
4531(9): mov $0x0,0x50(%rsp)
453a(5): mov $0x1,0xf(%rsp)
453f(5): mov $0x1,0xd(%rsp)
4544(5): jmp 0xfffff21f(%rip)
4549(3): cmp %r15,%r13
454c(2): jbe 0x7(%rip)
454e(5): mov $0x30,0x0(%r14,%r15,1)
4553(4): lea 0x2(%rcx),%rax
4557(3): cmp %rax,%r13
455a(2): jbe 0x8(%rip)
455c(6): mov $0x30,0x2(%r14,%rcx,1)
4562(3): mov %r12d,%eax
4565(4): lea 0x3(%rcx),%r15
4569(3): xor %r12d,%r12d
456c(5): mov $0x30,%ebx
4571(5): jmp 0xfffff367(%rip)
4576(a): nop 0x0(%rax,%rax,1)
4580(5): movzx 0xf(%rsp),%ebx
4585(3): mov %r11,%rbp
4588(4): mov %bl,0xd(%rsp)
458c(5): jmp 0xfffffcad(%rip)
4591(5): movzx 0xd(%rsp),%edx
4596(3): xor %r12d,%r12d
4599(5): jmp 0xfffffb07(%rip)
459e(3): xor %r10d,%r10d
45a1(5): jmp 0xfffffbbc(%rip)
45a6(9): mov $0x0,0x50(%rsp)
45af(5): mov $0x1,0xe(%rsp)
45b4(3): xor %r12d,%r12d
45b7(5): mov $0x0,0x7c(%rsp)
45bc(5): jmp 0xfffffddf(%rip)
45c1(5): mov 0x30(%rsp),%r11
45c6(3): mov %r14,%rsi
45c9(3): mov %r13,%rcx
45cc(3): mov %rbx,%rax
45cf(3): mov %rbx,%rdi
45d2(6): movzx 0x7d(%rsp),%r8d
45d8(5): movzx 0x7e(%rsp),%ebx
45dd(8): mov 0x88(%rsp),%r9
45e5(3): cmp %r11,%rsi
45e8(6): movzx 0x7f(%rsp),%r10d
45ee(8): mov 0x80(%rsp),%r15
45f6(5): mov 0x40(%rsp),%r14
45fb(5): mov 0x70(%rsp),%r13
4600(2): jnb 0x28(%rip)
4602(3): cmp $0x0,(%rcx)
4605(2): jnz 0x12(%rip)
4607(2): jmp 0x21(%rip)
4609(7): nop 0x0(%rax)
4610(5): cmp $0x0,0x0(%r9,%rax,1)
4615(2): jz 0x10(%rip)
4617(4): add $0x1,%rax
461b(5): lea 0x0(%rbp,%rax,1),%rdx
4620(3): cmp %rdx,%r11
4623(2): jnbe 0xffffffed(%rip)
4625(3): mov %rax,%rdi
4628(5): movzx 0xd(%rsp),%edx
462d(3): xor %r12d,%r12d
4630(5): jmp 0xfffffa66(%rip)
4635(3): mov %rbx,%rdi
4638(6): movzx 0x7d(%rsp),%r8d
463e(5): movzx 0x7e(%rsp),%ebx
4643(6): movzx 0x7f(%rsp),%r10d
4649(8): mov 0x80(%rsp),%r15
4651(3): xor %r12d,%r12d
4654(5): mov 0x40(%rsp),%r14
4659(5): mov 0x70(%rsp),%r13
465e(5): mov 0x30(%rsp),%r11
4663(5): movzx 0xd(%rsp),%edx
4668(5): jmp 0xfffffa2e(%rip)
466d(5): mov 0x68(%rsp),%rdx
4672(3): movzx (%rdx),%eax
4675(2): test %al,%al
4677(6): jz 0xfffffe35(%rip)
467d(3): nop (%rax)
4680(3): cmp %r15,%r13
4683(2): jbe 0x6(%rip)
4685(4): mov %al,0x0(%r14,%r15,1)
4689(4): add $0x1,%r15
468d(5): movzx 0x0(%rdx,%r15,1),%eax
4692(2): test %al,%al
4694(2): jnz 0xffffffec(%rip)
4696(5): jmp 0xfffffe16(%rip)
469b(2): mov %edx,%eax
469d(5): jmp 0xfffff55a(%rip)
46a2(4): movzx 0x0(%rax,%rcx,1),%ebx
46a6(3): cmp $0x3e,%bl
46a9(6): jnbe 0xfffff877(%rip)
46af(a): mov $0x8070630310989004800,%rax
46b9(4): bt %rbx,%rax
46bd(6): jnb 0xfffff863(%rip)
46c3(5): cmp $0x0,0xf(%rsp)
46c8(6): jnz 0x1ea(%rip)
46ce(3): cmp %r15,%r13
46d1(2): jbe 0x7(%rip)
46d3(5): mov $0x3f,0x0(%r14,%r15,1)
46d8(4): lea 0x1(%r15),%rax
46dc(3): cmp %rax,%r13
46df(2): jbe 0x8(%rip)
46e1(6): mov $0x22,0x1(%r14,%r15,1)
46e7(4): lea 0x2(%r15),%rax
46eb(3): cmp %rax,%r13
46ee(2): jbe 0x8(%rip)
46f0(6): mov $0x22,0x2(%r14,%r15,1)
46f6(4): lea 0x3(%r15),%rax
46fa(3): cmp %rax,%r13
46fd(2): jbe 0x8(%rip)
46ff(6): mov $0x3f,0x3(%r14,%r15,1)
4705(4): add $0x4,%r15
4709(2): xor %edx,%edx
470b(3): xor %r12d,%r12d
470e(2): xor %eax,%eax
4710(3): mov %rcx,%rbp
4713(5): jmp 0xfffff1c5(%rip)
4718(2): test %ebx,%ebx
471a(6): jz 0x18e(%rip)
4720(7): lea 0x5f76(%rip),%rax
4727(5): mov $0x1,0xe(%rsp)
472c(5): mov $0x0,0x7c(%rsp)
4731(3): xor %r12d,%r12d
4734(9): mov $0x0,0x50(%rsp)
473d(5): mov $0x1,0xf(%rsp)
4742(5): mov $0x0,0xd(%rsp)
4747(9): mov $0x1,0x18(%rsp)
4750(3): xor %r15d,%r15d
4753(5): mov %rax,0x48(%rsp)
4758(5): jmp 0xfffff02b(%rip)
475d(3): nop (%rax)
4760(3): mov %r11,%rbp
4763(5): movzx 0xf(%rsp),%eax
4768(5): jmp 0xfffffad1(%rip)
476d(7): lea 0x5f27(%rip),%rax
4774(5): mov $0x1,0xe(%rsp)
4779(5): mov $0x0,0x7c(%rsp)
477e(3): xor %r12d,%r12d
4781(9): mov $0x0,0x50(%rsp)
478a(5): mov $0x1,0xf(%rsp)
478f(5): mov $0x1,0xd(%rsp)
4794(9): mov $0x1,0x18(%rsp)
479d(3): xor %r15d,%r15d
47a0(5): mov %rax,0x48(%rsp)
47a5(5): jmp 0xffffefde(%rip)
47aa(2): mov %edx,%eax
47ac(5): mov 0x48(%rsp),%rbx
47b1(3): test %rbx,%rbx
47b4(2): jz 0x2e(%rip)
47b6(2): test %al,%al
47b8(2): jz 0x2a(%rip)
47ba(3): movzx (%rbx),%ecx
47bd(3): mov %rbx,%rax
47c0(2): test %cl,%cl
47c2(2): jz 0x20(%rip)
47c4(3): mov %r15,%rdx
47c7(3): sub %r15,%rax
47ca(3): cmp %rdx,%r13
47cd(2): jbe 0x6(%rip)
47cf(4): mov %cl,0x0(%r14,%rdx,1)
47d3(4): add $0x1,%rdx
47d7(4): movzx 0x0(%rax,%rdx,1),%ecx
47db(2): test %cl,%cl
47dd(2): jnz 0xffffffed(%rip)
47df(3): mov %rdx,%r15
47e2(3): cmp %r15,%r13
47e5(6): jbe 0xfffffaa4(%rip)
47eb(5): mov $0x0,0x0(%r14,%r15,1)
47f0(5): jmp 0xfffffa99(%rip)
47f5(5): cmp $0x2,0x8(%rsp)
47fa(5): movzx 0xf(%rsp),%ebx
47ff(3): mov %r11,%rbp
4802(3): setz %al
4805(4): mov %bl,0xd(%rsp)
4809(5): jmp 0xfffffa30(%rip)
480e(4): mov 0x8(%rsp),%esi
4812(3): mov %rcx,%rdi
4815(5): call 0xffffedab(%rip)
481a(5): mov %rax,0x68(%rsp)
481f(5): jmp 0xfffffc57(%rip)
4824(4): mov 0x8(%rsp),%esi
4828(3): mov %rcx,%rdi
482b(5): call 0xffffed95(%rip)
4830(5): mov %rax,0x60(%rsp)
4835(5): jmp 0xfffffc6c(%rip)
483a(5): movzx 0xf(%rsp),%ebx
483f(3): mov %r11,%rbp
4842(2): mov %edx,%eax
4844(4): mov %bl,0xd(%rsp)
4848(5): jmp 0xfffff9f1(%rip)
484d(4): sub $0x8,%rsp
4851(6): mov $0x5,%r8d
4857(3): mov %r11,%rcx
485a(4): push 0x68(%rsp)
485e(4): push 0x78(%rsp)
4862(3): mov %r14,%rdi
4865(4): push 0x38(%rsp)
4869(8): mov 0x98(%rsp),%r9d
4871(5): mov 0x30(%rsp),%rdx
4876(5): mov 0x70(%rsp),%rsi
487b(5): call 0xffffee35(%rip)
4880(4): add $0x20,%rsp
4884(3): mov %rax,%r15
4887(5): jmp 0xfffffa02(%rip)
488c(5): movzx 0x7c(%rsp),%eax
4891(5): jmp 0xffffff1b(%rip)
4896(8): mov $0x2,0x8(%rsp)
489e(5): jmp 0xfffff99b(%rip)
48a3(5): call 0xffffcf3d(%rip)
48a8(5): mov $0x0,0xd(%rsp)
48ad(5): jmp 0xfffffa74(%rip)
48b2(3): mov %r11,%rbp
48b5(5): jmp 0xfffff99b(%rip)
48ba(5): mov $0x1,0xe(%rsp)
48bf(2): xor %eax,%eax
48c1(3): xor %r12d,%r12d
48c4(9): mov $0x0,0x50(%rsp)
48cd(5): jmp 0xfffff5a7(%rip)
48d2(3): mov %r13,%rdx
48d5(5): mov 0x50(%rsp),%r13
48da(5): jmp 0xfffff5f8(%rip)
48df(5): call 0xffffce11(%rip)

"quotearg_n_options" :
48f0(2): push %r15
48f2(2): push %r14
48f4(3): movsxd %edi,%r15
48f7(2): push %r13
48f9(2): push %r12
48fb(3): mov %rdx,%r14
48fe(1): push %rbp
48ff(1): push %rbx
4900(3): mov %rcx,%rbp
4903(4): sub $0x28,%rsp
4907(5): mov %rsi,0x8(%rsp)
490c(5): call 0xffffcdf4(%rip)
4911(3): mov %rax,%r13
4914(2): mov (%rax),%eax
4916(3): test %r15d,%r15d
4919(7): mov 0x209760(%rip),%rbx
4920(4): mov %eax,0x18(%rsp)
4924(6): js 0x16d(%rip)
492a(7): cmp %r15d,0x209747(%rip)
4931(2): jnle 0x64(%rip)
4933(7): cmp $0x7fffffff,%r15d
493a(6): jz 0x15c(%rip)
4940(4): lea 0x1(%r15),%r12d
4944(7): lea 0x209745(%rip),%rax
494b(3): movsxd %r12d,%rsi
494e(4): shl/sal $0x4,%rsi
4952(3): cmp %rax,%rbx
4955(6): jz 0x11b(%rip)
495b(3): mov %rbx,%rdi
495e(5): call 0xff2(%rip)
4963(3): mov %rax,%rbx
4966(7): mov %rax,0x209713(%rip)
496d(7): movsxd 0x209704(%rip),%rdi
4974(3): mov %r12d,%edx
4977(2): xor %esi,%esi
4979(2): sub %edi,%edx
497b(4): shl/sal $0x4,%rdi
497f(3): movsxd %edx,%rdx
4982(3): add %rbx,%rdi
4985(4): shl/sal $0x4,%rdx
4989(5): call 0xffffcec7(%rip)
498e(7): mov %r12d,0x2096e3(%rip)
4995(3): mov 0x4(%rbp),%eax
4998(4): shl/sal $0x4,%r15
499c(4): sub $0x8,%rsp
49a0(3): add %r15,%rbx
49a3(4): lea 0x8(%rbp),%r15
49a7(4): mov 0x0(%rbp),%r8d
49ab(3): mov (%rbx),%r11
49ae(4): mov 0x8(%rbx),%r12
49b2(3): mov %r14,%rcx
49b5(3): or $0x1,%eax
49b8(4): mov %eax,0x24(%rsp)
49bc(3): push 0x30(%rbp)
49bf(3): mov %eax,%r9d
49c2(3): push 0x28(%rbp)
49c5(2): push %r15
49c7(3): mov %r11,%rsi
49ca(5): mov 0x28(%rsp),%rdx
49cf(3): mov %r12,%rdi
49d2(5): mov %r11,0x30(%rsp)
49d7(5): call 0xffffecd9(%rip)
49dc(4): add $0x20,%rsp
49e0(5): mov 0x10(%rsp),%r11
49e5(3): cmp %rax,%r11
49e8(2): jnbe 0x69(%rip)
49ea(4): lea 0x1(%rax),%rsi
49ee(7): lea 0x20974b(%rip),%rax
49f5(3): cmp %rax,%r12
49f8(3): mov %rsi,(%rbx)
49fb(2): jz 0x14(%rip)
49fd(3): mov %r12,%rdi
4a00(5): mov %rsi,0x10(%rsp)
4a05(5): call 0xffffd08b(%rip)
4a0a(5): mov 0x10(%rsp),%rsi
4a0f(3): mov %rsi,%rdi
4a12(5): mov %rsi,0x10(%rsp)
4a17(5): call 0xed9(%rip)
4a1c(4): sub $0x8,%rsp
4a20(4): mov %rax,0x8(%rbx)
4a24(4): mov 0x0(%rbp),%r8d
4a28(3): push 0x30(%rbp)
4a2b(3): push 0x28(%rbp)
4a2e(3): mov %r14,%rcx
4a31(2): push %r15
4a33(5): mov 0x3c(%rsp),%r9d
4a38(3): mov %rax,%rdi
4a3b(5): mov 0x28(%rsp),%rdx
4a40(5): mov 0x30(%rsp),%rsi
4a45(3): mov %rax,%r12
4a48(5): call 0xffffec68(%rip)
4a4d(4): add $0x20,%rsp
4a51(4): mov 0x18(%rsp),%eax
4a55(4): mov %eax,0x0(%r13)
4a59(4): add $0x28,%rsp
4a5d(3): mov %r12,%rax
4a60(1): pop %rbx
4a61(1): pop %rbp
4a62(2): pop %r12
4a64(2): pop %r13
4a66(2): pop %r14
4a68(2): pop %r15
4a6a(1): ret near (%rsp)
4a6b(5): nop 0x0(%rax,%rax,1)
4a70(2): xor %edi,%edi
4a72(5): call 0xede(%rip)
4a77(8): movdqa 0x209611(%rip),%xmm0
4a7f(3): mov %rax,%rbx
4a82(7): mov %rax,0x2095f7(%rip)
4a89(3): movups %xmm0,(%rax)
4a8c(5): jmp 0xfffffee1(%rip)
4a91(5): call 0xffffcc5f(%rip)
4a96(5): call 0x10aa(%rip)

"clone_quoting_options" :
4aa0(2): push %r12
4aa2(1): push %rbp
4aa3(1): push %rbx
4aa4(3): mov %rdi,%rbx
4aa7(5): call 0xffffcc59(%rip)
4aac(3): mov (%rax),%r12d
4aaf(3): mov %rax,%rbp
4ab2(7): lea 0x209787(%rip),%rax
4ab9(3): test %rbx,%rbx
4abc(5): mov $0x38,%esi
4ac1(4): cmove %rax,%rbx
4ac5(3): mov %rbx,%rdi
4ac8(5): call 0x1028(%rip)
4acd(4): mov %r12d,0x0(%rbp)
4ad1(1): pop %rbx
4ad2(1): pop %rbp
4ad3(2): pop %r12
4ad5(1): ret near (%rsp)

"get_quoting_style" :
4ae0(7): lea 0x209759(%rip),%rax
4ae7(3): test %rdi,%rdi
4aea(4): cmove %rax,%rdi
4aee(2): mov (%rdi),%eax
4af0(1): ret near (%rsp)

"set_quoting_style" :
4b00(7): lea 0x209739(%rip),%rax
4b07(3): test %rdi,%rdi
4b0a(4): cmove %rax,%rdi
4b0e(2): mov %esi,(%rdi)
4b10(1): ret near (%rsp)

"set_char_quoting" :
4b20(7): lea 0x209719(%rip),%rax
4b27(3): test %rdi,%rdi
4b2a(2): mov %esi,%ecx
4b2c(4): cmove %rax,%rdi
4b30(2): mov %esi,%eax
4b32(3): and $0x1f,%ecx
4b35(3): shr $0x5,%al
4b38(3): movzx %al,%eax
4b3b(5): lea 0x8(%rdi,%rax,4),%rdi
4b40(2): mov (%rdi),%esi
4b42(2): mov %esi,%eax
4b44(2): shr %cl,%eax
4b46(2): xor %eax,%edx
4b48(3): and $0x1,%eax
4b4b(3): and $0x1,%edx
4b4e(2): shl/sal %cl,%edx
4b50(2): xor %esi,%edx
4b52(2): mov %edx,(%rdi)
4b54(1): ret near (%rsp)

"set_quoting_flags" :
4b60(7): lea 0x2096d9(%rip),%rax
4b67(3): test %rdi,%rdi
4b6a(4): cmove %rax,%rdi
4b6e(3): mov 0x4(%rdi),%eax
4b71(3): mov %esi,0x4(%rdi)
4b74(1): ret near (%rsp)

"set_custom_quoting" :
4b80(7): lea 0x2096b9(%rip),%rax
4b87(3): test %rdi,%rdi
4b8a(4): cmove %rax,%rdi
4b8e(3): test %rsi,%rsi
4b91(6): mov $0xa,(%rdi)
4b97(2): jz 0x10(%rip)
4b99(3): test %rdx,%rdx
4b9c(2): jz 0xb(%rip)
4b9e(4): mov %rsi,0x28(%rdi)
4ba2(4): mov %rdx,0x30(%rdi)
4ba6(1): ret near (%rsp)
4ba7(4): sub $0x8,%rsp
4bab(5): call 0xffffcb45(%rip)

"quotearg_buffer" :
4bb0(2): push %r15
4bb2(2): push %r14
4bb4(7): lea 0x209685(%rip),%rax
4bbb(2): push %r13
4bbd(2): push %r12
4bbf(3): mov %rdi,%r13
4bc2(1): push %rbp
4bc3(1): push %rbx
4bc4(3): mov %r8,%rbx
4bc7(3): mov %rsi,%r14
4bca(3): mov %rdx,%r15
4bcd(4): sub $0x18,%rsp
4bd1(3): test %r8,%r8
4bd4(4): cmove %rax,%rbx
4bd8(5): mov %rcx,0x8(%rsp)
4bdd(5): call 0xffffcb23(%rip)
4be2(3): mov (%rax),%r12d
4be5(3): mov %rax,%rbp
4be8(4): lea 0x8(%rbx),%rax
4bec(4): sub $0x8,%rsp
4bf0(4): mov 0x4(%rbx),%r9d
4bf4(3): push 0x30(%rbx)
4bf7(3): mov (%rbx),%r8d
4bfa(3): push 0x28(%rbx)
4bfd(3): mov %r15,%rdx
4c00(1): push %rax
4c01(5): mov 0x28(%rsp),%rcx
4c06(3): mov %r14,%rsi
4c09(3): mov %r13,%rdi
4c0c(5): call 0xffffeaa4(%rip)
4c11(4): mov %r12d,0x0(%rbp)
4c15(4): add $0x38,%rsp
4c19(1): pop %rbx
4c1a(1): pop %rbp
4c1b(2): pop %r12
4c1d(2): pop %r13
4c1f(2): pop %r14
4c21(2): pop %r15
4c23(1): ret near (%rsp)

"quotearg_alloc_mem" :
4c30(2): push %r15
4c32(2): push %r14
4c34(7): lea 0x209605(%rip),%rax
4c3b(2): push %r13
4c3d(2): push %r12
4c3f(3): mov %rdx,%r12
4c42(1): push %rbp
4c43(1): push %rbx
4c44(3): mov %rcx,%rbx
4c47(3): mov %rdi,%r14
4c4a(3): mov %rsi,%r15
4c4d(4): sub $0x38,%rsp
4c51(3): test %rcx,%rcx
4c54(4): cmove %rax,%rbx
4c58(2): xor %ebp,%ebp
4c5a(5): call 0xffffcaa6(%rip)
4c5f(3): test %r12,%r12
4c62(3): mov %rax,%r13
4c65(2): mov (%rax),%eax
4c67(4): setz %bpl
4c6b(3): or 0x4(%rbx),%ebp
4c6e(4): lea 0x8(%rbx),%r10
4c72(4): sub $0x8,%rsp
4c76(3): mov (%rbx),%r8d
4c79(3): mov %r15,%rcx
4c7c(4): mov %eax,0x14(%rsp)
4c80(3): push 0x30(%rbx)
4c83(3): mov %r14,%rdx
4c86(3): push 0x28(%rbx)
4c89(2): push %r10
4c8b(2): xor %esi,%esi
4c8d(3): mov %ebp,%r9d
4c90(2): xor %edi,%edi
4c92(5): mov %r10,0x40(%rsp)
4c97(5): call 0xffffea19(%rip)
4c9c(4): lea 0x1(%rax),%rsi
4ca0(5): mov %rax,0x48(%rsp)
4ca5(4): add $0x20,%rsp
4ca9(3): mov %rsi,%rdi
4cac(5): mov %rsi,0x18(%rsp)
4cb1(5): call 0xc3f(%rip)
4cb6(5): mov %rax,0x10(%rsp)
4cbb(4): sub $0x8,%rsp
4cbf(3): push 0x30(%rbx)
4cc2(3): push 0x28(%rbx)
4cc5(5): mov 0x38(%rsp),%r10
4cca(3): mov %ebp,%r9d
4ccd(3): mov (%rbx),%r8d
4cd0(3): mov %r15,%rcx
4cd3(3): mov %r14,%rdx
4cd6(3): mov %rax,%rdi
4cd9(2): push %r10
4cdb(5): mov 0x38(%rsp),%rsi
4ce0(5): call 0xffffe9d0(%rip)
4ce5(4): mov 0x2c(%rsp),%eax
4ce9(4): add $0x20,%rsp
4ced(3): test %r12,%r12
4cf0(4): mov %eax,0x0(%r13)
4cf4(2): jz 0xb(%rip)
4cf6(5): mov 0x28(%rsp),%r11
4cfb(4): mov %r11,(%r12)
4cff(5): mov 0x10(%rsp),%rax
4d04(4): add $0x38,%rsp
4d08(1): pop %rbx
4d09(1): pop %rbp
4d0a(2): pop %r12
4d0c(2): pop %r13
4d0e(2): pop %r14
4d10(2): pop %r15
4d12(1): ret near (%rsp)

"quotearg_alloc" :
4d20(3): mov %rdx,%rcx
4d23(2): xor %edx,%edx
4d25(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4d30(6): mov 0x209342(%rip),%eax
4d36(2): push %r12
4d38(7): mov 0x209341(%rip),%r12
4d3f(1): push %rbp
4d40(1): push %rbx
4d41(3): cmp $0x1,%eax
4d44(2): jle 0x2d(%rip)
4d46(3): sub $0x2,%eax
4d49(5): lea 0x18(%r12),%rbx
4d4e(4): shl/sal $0x4,%rax
4d52(5): lea 0x28(%r12,%rax,1),%rbp
4d57(9): nop 0x0(%rax,%rax,1)
4d60(3): mov (%rbx),%rdi
4d63(4): add $0x10,%rbx
4d67(5): call 0xffffcd29(%rip)
4d6c(3): cmp %rbp,%rbx
4d6f(2): jnz 0xfffffff1(%rip)
4d71(5): mov 0x8(%r12),%rdi
4d76(7): lea 0x2093c3(%rip),%rbx
4d7d(3): cmp %rbx,%rdi
4d80(2): jz 0x19(%rip)
4d82(5): call 0xffffcd0e(%rip)
4d87(b): mov $0x100,0x2092fe(%rip)
4d92(7): mov %rbx,0x2092ff(%rip)
4d99(7): lea 0x2092f0(%rip),%rbx
4da0(3): cmp %rbx,%r12
4da3(2): jz 0x11(%rip)
4da5(3): mov %r12,%rdi
4da8(5): call 0xffffcce8(%rip)
4dad(7): mov %rbx,0x2092cc(%rip)
4db4(1): pop %rbx
4db5(a): mov $0x1,0x2092b9(%rip)
4dbf(1): pop %rbp
4dc0(2): pop %r12
4dc2(1): ret near (%rsp)

"quotearg_n" :
4dd0(7): lea 0x209469(%rip),%rcx
4dd7(7): mov $0xffffffff,%rdx
4dde(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4df0(7): lea 0x209449(%rip),%rcx
4df7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4e00(7): lea 0x209439(%rip),%rcx
4e07(3): mov %rdi,%rsi
4e0a(7): mov $0xffffffff,%rdx
4e11(2): xor %edi,%edi
4e13(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4e20(7): lea 0x209419(%rip),%rcx
4e27(3): mov %rsi,%rdx
4e2a(3): mov %rdi,%rsi
4e2d(2): xor %edi,%edi
4e2f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4e40(4): sub $0x48,%rsp
4e44(3): mov %rdx,%rax
4e47(9): mov $0x28,%rdx
4e50(5): mov %rdx,0x38(%rsp)
4e55(2): xor %edx,%edx
4e57(3): cmp $0xa,%esi
4e5a(2): jz 0x6a(%rip)
4e5c(3): mov %esi,(%rsp)
4e5f(3): mov %rsp,%rcx
4e62(7): mov $0xffffffff,%rdx
4e69(3): mov %rax,%rsi
4e6c(9): mov $0x0,0x4(%rsp)
4e75(9): mov $0x0,0xc(%rsp)
4e7e(9): mov $0x0,0x14(%rsp)
4e87(9): mov $0x0,0x1c(%rsp)
4e90(9): mov $0x0,0x24(%rsp)
4e99(9): mov $0x0,0x2c(%rsp)
4ea2(8): mov $0x0,0x34(%rsp)
4eaa(5): call 0xfffffa46(%rip)
4eaf(5): mov 0x38(%rsp),%rcx
4eb4(9): xor $0x28,%rcx
4ebd(2): jnz 0xc(%rip)
4ebf(4): add $0x48,%rsp
4ec3(1): ret near (%rsp)
4ec4(5): call 0xffffc82c(%rip)
4ec9(5): call 0xffffc917(%rip)

"quotearg_n_style_mem" :
4ed0(4): sub $0x48,%rsp
4ed4(3): mov %rdx,%rax
4ed7(3): mov %rcx,%rdx
4eda(9): mov $0x28,%rcx
4ee3(5): mov %rcx,0x38(%rsp)
4ee8(2): xor %ecx,%ecx
4eea(3): cmp $0xa,%esi
4eed(2): jz 0x63(%rip)
4eef(3): mov %esi,(%rsp)
4ef2(3): mov %rsp,%rcx
4ef5(3): mov %rax,%rsi
4ef8(9): mov $0x0,0x4(%rsp)
4f01(9): mov $0x0,0xc(%rsp)
4f0a(9): mov $0x0,0x14(%rsp)
4f13(9): mov $0x0,0x1c(%rsp)
4f1c(9): mov $0x0,0x24(%rsp)
4f25(9): mov $0x0,0x2c(%rsp)
4f2e(8): mov $0x0,0x34(%rsp)
4f36(5): call 0xfffff9ba(%rip)
4f3b(5): mov 0x38(%rsp),%rdx
4f40(9): xor $0x28,%rdx
4f49(2): jnz 0xc(%rip)
4f4b(4): add $0x48,%rsp
4f4f(1): ret near (%rsp)
4f50(5): call 0xffffc7a0(%rip)
4f55(5): call 0xffffc88b(%rip)

"quotearg_style" :
4f60(3): mov %rsi,%rdx
4f63(2): mov %edi,%esi
4f65(2): xor %edi,%edi
4f67(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4f70(3): mov %rdx,%rcx
4f73(3): mov %rsi,%rdx
4f76(2): mov %edi,%esi
4f78(2): xor %edi,%edi
4f7a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4f80(4): sub $0x48,%rsp
4f84(2): mov %edx,%ecx
4f86(9): mov $0x28,%rax
4f8f(5): mov %rax,0x38(%rsp)
4f94(2): xor %eax,%eax
4f96(7): mov 0x2092d3(%rip),%rax
4f9d(3): mov %rsp,%r8
4fa0(3): and $0x1f,%ecx
4fa3(8): movdqa 0x209295(%rip),%xmm0
4fab(5): mov %rax,0x30(%rsp)
4fb0(2): mov %edx,%eax
4fb2(4): movaps %xmm0,(%rsp)
4fb6(3): shr $0x5,%al
4fb9(3): movzx %al,%eax
4fbc(5): lea 0x8(%r8,%rax,4),%r9
4fc1(8): movdqa 0x209287(%rip),%xmm0
4fc9(5): movaps %xmm0,0x10(%rsp)
4fce(8): movdqa 0x20928a(%rip),%xmm0
4fd6(5): movaps %xmm0,0x20(%rsp)
4fdb(3): mov (%r9),%edx
4fde(2): mov %edx,%eax
4fe0(2): shr %cl,%eax
4fe2(2): not %eax
4fe4(3): and $0x1,%eax
4fe7(2): shl/sal %cl,%eax
4fe9(3): mov %r8,%rcx
4fec(2): xor %edx,%eax
4fee(3): mov %rsi,%rdx
4ff1(3): mov %rdi,%rsi
4ff4(3): mov %eax,(%r9)
4ff7(2): xor %edi,%edi
4ff9(5): call 0xfffff8f7(%rip)
4ffe(5): mov 0x38(%rsp),%rsi
5003(9): xor $0x28,%rsi
500c(2): jnz 0x7(%rip)
500e(4): add $0x48,%rsp
5012(1): ret near (%rsp)
5013(5): call 0xffffc7cd(%rip)

"quotearg_char" :
5020(4): movsx %sil,%edx
5024(7): mov $0xffffffff,%rsi
502b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5030(5): mov $0x3a,%edx
5035(7): mov $0xffffffff,%rsi
503c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5050(5): mov $0x3a,%edx
5055(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5060(4): sub $0x48,%rsp
5064(3): mov %rdx,%rax
5067(9): mov $0x28,%rdx
5070(5): mov %rdx,0x38(%rsp)
5075(2): xor %edx,%edx
5077(3): cmp $0xa,%esi
507a(2): jz 0x6a(%rip)
507c(3): mov %esi,(%rsp)
507f(3): mov %rsp,%rcx
5082(7): mov $0xffffffff,%rdx
5089(3): mov %rax,%rsi
508c(9): mov $0x0,0x4(%rsp)
5095(9): mov $0x4000000,0xc(%rsp)
509e(9): mov $0x0,0x14(%rsp)
50a7(9): mov $0x0,0x1c(%rsp)
50b0(9): mov $0x0,0x24(%rsp)
50b9(9): mov $0x0,0x2c(%rsp)
50c2(8): mov $0x0,0x34(%rsp)
50ca(5): call 0xfffff826(%rip)
50cf(5): mov 0x38(%rsp),%rcx
50d4(9): xor $0x28,%rcx
50dd(2): jnz 0xc(%rip)
50df(4): add $0x48,%rsp
50e3(1): ret near (%rsp)
50e4(5): call 0xffffc60c(%rip)
50e9(5): call 0xffffc6f7(%rip)

"quotearg_n_custom_mem" :
50f0(4): sub $0x48,%rsp
50f4(3): mov %rcx,%r9
50f7(7): mov 0x209172(%rip),%rcx
50fe(8): movdqa 0x20913a(%rip),%xmm0
5106(9): mov $0x28,%rax
510f(5): mov %rax,0x38(%rsp)
5114(2): xor %eax,%eax
5116(4): movaps %xmm0,(%rsp)
511a(3): test %rsi,%rsi
511d(5): mov %rcx,0x30(%rsp)
5122(7): mov $0xa,(%rsp)
5129(8): movdqa 0x20911f(%rip),%xmm0
5131(5): movaps %xmm0,0x10(%rsp)
5136(8): movdqa 0x209122(%rip),%xmm0
513e(5): movaps %xmm0,0x20(%rsp)
5143(2): jz 0x34(%rip)
5145(3): test %rdx,%rdx
5148(2): jz 0x2f(%rip)
514a(5): mov %rsi,0x28(%rsp)
514f(5): mov %rdx,0x30(%rsp)
5154(3): mov %rsp,%rcx
5157(3): mov %r8,%rdx
515a(3): mov %r9,%rsi
515d(5): call 0xfffff793(%rip)
5162(5): mov 0x38(%rsp),%rdi
5167(9): xor $0x28,%rdi
5170(2): jnz 0xc(%rip)
5172(4): add $0x48,%rsp
5176(1): ret near (%rsp)
5177(5): call 0xffffc579(%rip)
517c(5): call 0xffffc664(%rip)

"quotearg_n_custom" :
5190(7): mov $0xffffffff,%r8
5197(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
51a0(3): mov %rdx,%rcx
51a3(7): mov $0xffffffff,%r8
51aa(3): mov %rsi,%rdx
51ad(3): mov %rdi,%rsi
51b0(2): xor %edi,%edi
51b2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
51c0(3): mov %rcx,%r8
51c3(3): mov %rdx,%rcx
51c6(3): mov %rsi,%rdx
51c9(3): mov %rdi,%rsi
51cc(2): xor %edi,%edi
51ce(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
51e0(7): lea 0x208e59(%rip),%rcx
51e7(5): jmp 0xfffff709(%rip)

"quote_mem" :
51f0(7): lea 0x208e49(%rip),%rcx
51f7(3): mov %rsi,%rdx
51fa(3): mov %rdi,%rsi
51fd(2): xor %edi,%edi
51ff(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5210(7): lea 0x208e29(%rip),%rcx
5217(7): mov $0xffffffff,%rdx
521e(5): jmp 0xfffff6d2(%rip)

"quote" :
5230(7): lea 0x208e09(%rip),%rcx
5237(3): mov %rdi,%rsi
523a(7): mov $0xffffffff,%rdx
5241(2): xor %edi,%edi
5243(5): jmp 0xfffff6ad(%rip)

"get_root_dev_ino" :
5250(1): push %rbx
5251(7): lea 0x542e(%rip),%rsi
5258(3): mov %rdi,%rbx
525b(5): mov $0x1,%edi
5260(7): sub $0xa0,%rsp
5267(3): mov %rsp,%rdx
526a(9): mov $0x28,%rax
5273(8): mov %rax,0x98(%rsp)
527b(2): xor %eax,%eax
527d(5): call 0xffffc543(%rip)
5282(2): test %eax,%eax
5284(2): jnz 0x34(%rip)
5286(5): mov 0x8(%rsp),%rax
528b(3): mov %rax,(%rbx)
528e(4): mov (%rsp),%rax
5292(4): mov %rax,0x8(%rbx)
5296(3): mov %rbx,%rax
5299(8): mov 0x98(%rsp),%rcx
52a1(9): xor $0x28,%rcx
52aa(2): jnz 0x12(%rip)
52ac(7): add $0xa0,%rsp
52b3(1): pop %rbx
52b4(1): ret near (%rsp)
52b5(3): nop (%rax)
52b8(2): xor %eax,%eax
52ba(2): jmp 0xffffffdf(%rip)
52bc(5): call 0xffffc524(%rip)

"version_etc_arn" :
52d0(2): push %r15
52d2(2): push %r14
52d4(2): push %r13
52d6(2): push %r12
52d8(3): mov %r9,%r12
52db(1): push %rbp
52dc(1): push %rbx
52dd(3): mov %rdi,%rbp
52e0(3): mov %r8,%rbx
52e3(4): sub $0x28,%rsp
52e7(3): test %rsi,%rsi
52ea(6): jz 0x11e(%rip)
52f0(3): mov %rdx,%r8
52f3(7): lea 0x586e(%rip),%rdx
52fa(3): mov %rcx,%r9
52fd(2): xor %eax,%eax
52ff(3): mov %rsi,%rcx
5302(5): mov $0x1,%esi
5307(5): call 0xffffc749(%rip)
530c(7): lea 0x5868(%rip),%rsi
5313(2): xor %edi,%edi
5315(5): mov $0x5,%edx
531a(5): call 0xffffc476(%rip)
531f(7): lea 0x5b7a(%rip),%rdx
5326(3): mov %rax,%rcx
5329(6): mov $0x7e3,%r8d
532f(5): mov $0x1,%esi
5334(3): mov %rbp,%rdi
5337(2): xor %eax,%eax
5339(5): call 0xffffc717(%rip)
533e(7): lea 0x58c3(%rip),%rsi
5345(2): xor %edi,%edi
5347(5): mov $0x5,%edx
534c(5): call 0xffffc444(%rip)
5351(3): mov %rbp,%rsi
5354(3): mov %rax,%rdi
5357(5): call 0xffffc539(%rip)
535c(4): cmp $0x9,%r12
5360(6): jnbe 0x340(%rip)
5366(7): lea 0x5af7(%rip),%rdx
536d(4): movsxd 0x0(%rdx,%r12,4),%rax
5371(3): add %rdx,%rax
5374(2): jmp %rax
5376(a): nop 0x0(%rax,%rax,1)
5380(4): mov 0x38(%rbx),%r9
5384(4): mov 0x10(%rbx),%rax
5388(7): lea 0x59e9(%rip),%rsi
538f(4): mov 0x8(%rbx),%r8
5393(5): mov $0x5,%edx
5398(2): xor %edi,%edi
539a(4): mov 0x30(%rbx),%r13
539e(4): mov 0x28(%rbx),%r12
53a2(5): mov %r9,0x10(%rsp)
53a7(4): mov 0x20(%rbx),%r15
53ab(4): mov 0x18(%rbx),%r14
53af(4): mov %rax,(%rsp)
53b3(5): mov %r8,0x8(%rsp)
53b8(3): mov (%rbx),%rbx
53bb(5): call 0xffffc3d5(%rip)
53c0(4): sub $0x8,%rsp
53c4(5): mov 0x18(%rsp),%r9
53c9(3): mov %rax,%rdx
53cc(3): mov %rbx,%rcx
53cf(5): mov $0x1,%esi
53d4(3): mov %rbp,%rdi
53d7(2): xor %eax,%eax
53d9(2): push %r9
53db(2): push %r13
53dd(2): push %r12
53df(2): push %r15
53e1(2): push %r14
53e3(5): mov 0x30(%rsp),%r9
53e8(5): mov 0x38(%rsp),%r8
53ed(5): call 0xffffc663(%rip)
53f2(4): add $0x30,%rsp
53f6(4): add $0x28,%rsp
53fa(1): pop %rbx
53fb(1): pop %rbp
53fc(2): pop %r12
53fe(2): pop %r13
5400(2): pop %r14
5402(2): pop %r15
5404(1): ret near (%rsp)
5405(3): nop (%rax)
5408(3): mov %rcx,%r8
540b(3): mov %rdx,%rcx
540e(7): lea 0x575f(%rip),%rdx
5415(5): mov $0x1,%esi
541a(2): xor %eax,%eax
541c(5): call 0xffffc634(%rip)
5421(5): jmp 0xfffffeeb(%rip)
5426(a): nop 0x0(%rax,%rax,1)
5430(4): mov 0x40(%rbx),%r10
5434(4): mov 0x38(%rbx),%r9
5438(7): lea 0x5969(%rip),%rsi
543f(4): mov 0x10(%rbx),%rax
5443(4): mov 0x8(%rbx),%r8
5447(5): mov $0x5,%edx
544c(4): mov 0x30(%rbx),%r13
5450(4): mov 0x28(%rbx),%r12
5454(4): mov 0x20(%rbx),%r15
5458(4): mov 0x18(%rbx),%r14
545c(3): mov (%rbx),%rbx
545f(5): mov %r10,0x18(%rsp)
5464(5): mov %r9,0x10(%rsp)
5469(4): mov %rax,(%rsp)
546d(5): mov %r8,0x8(%rsp)
5472(2): xor %edi,%edi
5474(5): call 0xffffc31c(%rip)
5479(5): mov 0x18(%rsp),%r10
547e(2): push %r10
5480(5): jmp 0xffffff44(%rip)
5485(3): nop (%rax)
5488(3): mov (%rbx),%rbx
548b(7): lea 0x56ed(%rip),%rsi
5492(5): mov $0x5,%edx
5497(2): xor %edi,%edi
5499(5): call 0xffffc2f7(%rip)
549e(4): add $0x28,%rsp
54a2(3): mov %rbx,%rcx
54a5(3): mov %rbp,%rdi
54a8(1): pop %rbx
54a9(1): pop %rbp
54aa(2): pop %r12
54ac(2): pop %r13
54ae(2): pop %r14
54b0(2): pop %r15
54b2(3): mov %rax,%rdx
54b5(5): mov $0x1,%esi
54ba(2): xor %eax,%eax
54bc(5): jmp 0xffffc594(%rip)
54c1(7): nop 0x0(%rax)
54c8(4): mov 0x8(%rbx),%r12
54cc(7): lea 0x56bc(%rip),%rsi
54d3(3): mov (%rbx),%rbx
54d6(5): mov $0x5,%edx
54db(2): xor %edi,%edi
54dd(5): call 0xffffc2b3(%rip)
54e2(4): add $0x28,%rsp
54e6(3): mov %r12,%r8
54e9(3): mov %rbx,%rcx
54ec(3): mov %rbp,%rdi
54ef(3): mov %rax,%rdx
54f2(5): mov $0x1,%esi
54f7(1): pop %rbx
54f8(1): pop %rbp
54f9(2): pop %r12
54fb(2): pop %r13
54fd(2): pop %r14
54ff(2): pop %r15
5501(2): xor %eax,%eax
5503(5): jmp 0xffffc54d(%rip)
5508(8): nop 0x0(%rax,%rax,1)
5510(4): mov 0x10(%rbx),%r13
5514(4): mov 0x8(%rbx),%r12
5518(7): lea 0x5687(%rip),%rsi
551f(3): mov (%rbx),%rbx
5522(5): mov $0x5,%edx
5527(2): xor %edi,%edi
5529(5): call 0xffffc267(%rip)
552e(4): add $0x28,%rsp
5532(3): mov %r13,%r9
5535(3): mov %r12,%r8
5538(3): mov %rbx,%rcx
553b(3): mov %rbp,%rdi
553e(3): mov %rax,%rdx
5541(1): pop %rbx
5542(1): pop %rbp
5543(2): pop %r12
5545(2): pop %r13
5547(2): pop %r14
5549(2): pop %r15
554b(5): mov $0x1,%esi
5550(2): xor %eax,%eax
5552(5): jmp 0xffffc4fe(%rip)
5557(9): nop 0x0(%rax,%rax,1)
5560(7): lea 0x5771(%rip),%rsi
5567(5): mov $0x5,%edx
556c(2): xor %edi,%edi
556e(4): mov 0x18(%rbx),%r14
5572(4): mov 0x10(%rbx),%r13
5576(4): mov 0x8(%rbx),%r12
557a(3): mov (%rbx),%rbx
557d(5): call 0xffffc213(%rip)
5582(4): sub $0x8,%rsp
5586(2): push %r14
5588(3): mov %rax,%rdx
558b(3): mov %r13,%r9
558e(3): mov %r12,%r8
5591(3): mov %rbx,%rcx
5594(3): mov %rbp,%rdi
5597(5): mov $0x1,%esi
559c(2): xor %eax,%eax
559e(5): call 0xffffc4b2(%rip)
55a3(1): pop %rax
55a4(1): pop %rdx
55a5(4): add $0x28,%rsp
55a9(1): pop %rbx
55aa(1): pop %rbp
55ab(2): pop %r12
55ad(2): pop %r13
55af(2): pop %r14
55b1(2): pop %r15
55b3(1): ret near (%rsp)
55b4(4): nop 0x0(%rax)
55b8(4): mov 0x20(%rbx),%r15
55bc(7): lea 0x5735(%rip),%rsi
55c3(5): mov $0x5,%edx
55c8(2): xor %edi,%edi
55ca(4): mov 0x18(%rbx),%r14
55ce(4): mov 0x10(%rbx),%r13
55d2(4): mov 0x8(%rbx),%r12
55d6(3): mov (%rbx),%rbx
55d9(5): call 0xffffc1b7(%rip)
55de(2): push %r15
55e0(2): jmp 0xffffffa6(%rip)
55e2(6): nop 0x0(%rax,%rax,1)
55e8(4): mov 0x8(%rbx),%r8
55ec(4): mov 0x28(%rbx),%r12
55f0(7): lea 0x5729(%rip),%rsi
55f7(4): mov 0x20(%rbx),%r15
55fb(4): mov 0x18(%rbx),%r14
55ff(5): mov $0x5,%edx
5604(4): mov 0x10(%rbx),%r13
5608(2): xor %edi,%edi
560a(3): mov (%rbx),%rbx
560d(4): mov %r8,(%rsp)
5611(5): call 0xffffc17f(%rip)
5616(4): sub $0x8,%rsp
561a(3): mov %r13,%r9
561d(2): push %r12
561f(2): push %r15
5621(2): push %r14
5623(5): mov 0x20(%rsp),%r8
5628(3): mov %rbx,%rcx
562b(3): mov %rax,%rdx
562e(3): mov %rbp,%rdi
5631(5): mov $0x1,%esi
5636(2): xor %eax,%eax
5638(5): call 0xffffc418(%rip)
563d(4): add $0x20,%rsp
5641(4): add $0x28,%rsp
5645(1): pop %rbx
5646(1): pop %rbp
5647(2): pop %r12
5649(2): pop %r13
564b(2): pop %r14
564d(2): pop %r15
564f(1): ret near (%rsp)
5650(4): mov 0x10(%rbx),%r9
5654(4): mov 0x30(%rbx),%r13
5658(7): lea 0x56e9(%rip),%rsi
565f(4): mov 0x28(%rbx),%r12
5663(4): mov 0x20(%rbx),%r15
5667(5): mov $0x5,%edx
566c(4): mov 0x18(%rbx),%r14
5670(4): mov 0x8(%rbx),%r8
5674(2): xor %edi,%edi
5676(5): mov %r9,0x8(%rsp)
567b(3): mov (%rbx),%rbx
567e(4): mov %r8,(%rsp)
5682(5): call 0xffffc10e(%rip)
5687(2): push %r13
5689(2): push %r12
568b(2): push %r15
568d(2): push %r14
568f(5): mov 0x28(%rsp),%r9
5694(2): jmp 0xffffff8f(%rip)
5696(a): nop 0x0(%rax,%rax,1)
56a0(4): mov 0x40(%rbx),%r10
56a4(4): mov 0x38(%rbx),%r9
56a8(5): mov $0x5,%edx
56ad(4): mov 0x10(%rbx),%rax
56b1(4): mov 0x8(%rbx),%r8
56b5(7): lea 0x5724(%rip),%rsi
56bc(4): mov 0x30(%rbx),%r13
56c0(4): mov 0x28(%rbx),%r12
56c4(4): mov 0x20(%rbx),%r15
56c8(4): mov 0x18(%rbx),%r14
56cc(5): mov %r10,0x18(%rsp)
56d1(5): mov %r9,0x10(%rsp)
56d6(4): mov %rax,(%rsp)
56da(5): mov %r8,0x8(%rsp)
56df(3): mov (%rbx),%rbx
56e2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
56f0(3): xor %r9d,%r9d
56f3(4): cmp $0x0,(%r8)
56f7(2): jz 0x14(%rip)
56f9(7): nop 0x0(%rax)
5700(4): add $0x1,%r9
5704(5): cmp $0x0,0x0(%r8,%r9,8)
5709(2): jnz 0xfffffff7(%rip)
570b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5710(4): sub $0x68,%rsp
5714(3): mov %r8,%r10
5717(3): xor %r9d,%r9d
571a(9): mov $0x28,%rax
5723(5): mov %rax,0x58(%rsp)
5728(2): xor %eax,%eax
572a(3): mov %rsp,%r8
572d(3): nop (%rax)
5730(3): mov (%r10),%eax
5733(3): cmp $0x2f,%eax
5736(2): jnbe 0x44(%rip)
5738(3): mov %eax,%r11d
573b(4): add 0x10(%r10),%r11
573f(3): add $0x8,%eax
5742(3): mov %eax,(%r10)
5745(3): mov (%r11),%rax
5748(3): test %rax,%rax
574b(4): mov %rax,0x0(%r8,%r9,8)
574f(2): jz 0xc(%rip)
5751(4): add $0x1,%r9
5755(4): cmp $0xa,%r9
5759(2): jnz 0xffffffd7(%rip)
575b(5): call 0xfffffb75(%rip)
5760(5): mov 0x58(%rsp),%rax
5765(9): xor $0x28,%rax
576e(2): jnz 0x7(%rip)
5770(4): add $0x68,%rsp
5774(1): ret near (%rsp)
5775(5): call 0xffffc06b(%rip)
577a(4): mov 0x8(%r10),%r11
577e(4): lea 0x8(%r11),%rax
5782(4): mov %rax,0x8(%r10)
5786(2): jmp 0xffffffbf(%rip)

"version_etc" :
5790(1): push %rbp
5791(1): push %rbx
5792(6): mov $0x20,%r10d
5798(3): xor %r11d,%r11d
579b(7): sub $0xb8,%rsp
57a2(9): mov $0x28,%rax
57ab(5): mov %rax,0x78(%rsp)
57b0(2): xor %eax,%eax
57b2(8): lea 0xd0(%rsp),%rax
57ba(8): mov %r8,0xa0(%rsp)
57c2(8): lea 0xd0(%rsp),%rbx
57ca(5): lea 0x20(%rsp),%r8
57cf(8): mov %r9,0xa8(%rsp)
57d7(8): mov $0x20,0x8(%rsp)
57df(5): mov %rax,0x10(%rsp)
57e4(8): lea 0x80(%rsp),%rax
57ec(3): xor %r9d,%r9d
57ef(5): mov %rax,0x18(%rsp)
57f4(3): mov %rax,%rbp
57f7(9): nop 0x0(%rax,%rax,1)
5800(4): cmp $0x2f,%r10d
5804(2): jnbe 0x58(%rip)
5806(3): mov %r10d,%eax
5809(6): mov $0x1,%r11d
580f(4): add $0x8,%r10d
5813(3): add %rbp,%rax
5816(3): mov (%rax),%rax
5819(3): test %rax,%rax
581c(4): mov %rax,0x0(%r8,%r9,8)
5820(2): jz 0xc(%rip)
5822(4): add $0x1,%r9
5826(4): cmp $0xa,%r9
582a(2): jnz 0xffffffd6(%rip)
582c(3): test %r11b,%r11b
582f(2): jnz 0x26(%rip)
5831(5): call 0xfffffa9f(%rip)
5836(5): mov 0x78(%rsp),%rax
583b(9): xor $0x28,%rax
5844(2): jnz 0xc(%rip)
5846(7): add $0xb8,%rsp
584d(1): pop %rbx
584e(1): pop %rbp
584f(1): ret near (%rsp)
5850(5): call 0xffffbf90(%rip)
5855(5): mov %r10d,0x8(%rsp)
585a(2): jmp 0xffffffd7(%rip)
585c(3): mov %rbx,%rax
585f(4): add $0x8,%rbx
5863(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5870(1): push %rbx
5871(7): lea 0x534a(%rip),%rsi
5878(5): mov $0x5,%edx
587d(2): xor %edi,%edi
587f(5): call 0xffffbf11(%rip)
5884(7): lea 0x534c(%rip),%rdx
588b(3): mov %rax,%rsi
588e(5): mov $0x1,%edi
5893(2): xor %eax,%eax
5895(5): call 0xffffc11b(%rip)
589a(7): lea 0x534c(%rip),%rsi
58a1(5): mov $0x5,%edx
58a6(2): xor %edi,%edi
58a8(5): call 0xffffbee8(%rip)
58ad(7): lea 0x48f4(%rip),%rcx
58b4(7): lea 0x43c5(%rip),%rdx
58bb(3): mov %rax,%rsi
58be(5): mov $0x1,%edi
58c3(2): xor %eax,%eax
58c5(5): call 0xffffc0eb(%rip)
58ca(7): mov 0x2087d7(%rip),%rbx
58d1(7): lea 0x5548(%rip),%rsi
58d8(2): xor %edi,%edi
58da(5): mov $0x5,%edx
58df(5): call 0xffffbeb1(%rip)
58e4(3): mov %rbx,%rsi
58e7(3): mov %rax,%rdi
58ea(1): pop %rbx
58eb(5): jmp 0xffffbfa5(%rip)

"xmalloc" :
58f0(1): push %rbx
58f1(3): mov %rdi,%rbx
58f4(5): call 0xffffc02c(%rip)
58f9(3): test %rax,%rax
58fc(2): jnz 0x7(%rip)
58fe(3): test %rbx,%rbx
5901(2): jnz 0x4(%rip)
5903(1): pop %rbx
5904(1): ret near (%rsp)
5905(5): call 0x23b(%rip)

"xnmalloc" :
5910(3): mov %rdi,%rax
5913(3): mul %rax,%rsi,%rdx
5916(3): mov %rax,%rdi
5919(3): seto %al
591c(3): test %rdi,%rdi
591f(2): js 0xc(%rip)
5921(3): movzx %al,%eax
5924(3): test %rax,%rax
5927(2): jnz 0x4(%rip)
5929(2): jmp 0xffffffc7(%rip)
592b(4): sub $0x8,%rsp
592f(5): call 0x211(%rip)

"xrealloc" :
5950(3): test %rsi,%rsi
5953(1): push %rbx
5954(3): mov %rsi,%rbx
5957(2): jnz 0x7(%rip)
5959(3): test %rdi,%rdi
595c(2): jnz 0x1c(%rip)
595e(3): mov %rbx,%rsi
5961(5): call 0xffffc02f(%rip)
5966(3): test %rax,%rax
5969(2): jnz 0x7(%rip)
596b(3): test %rbx,%rbx
596e(2): jnz 0x13(%rip)
5970(1): pop %rbx
5971(1): ret near (%rsp)
5972(6): nop 0x0(%rax,%rax,1)
5978(5): call 0xffffc118(%rip)
597d(2): xor %eax,%eax
597f(1): pop %rbx
5980(1): ret near (%rsp)
5981(5): call 0x1bf(%rip)

"xnrealloc" :
5990(3): mov %rsi,%rax
5993(3): mul %rax,%rdx,%rdx
5996(3): mov %rax,%rsi
5999(3): seto %al
599c(3): test %rsi,%rsi
599f(2): js 0xc(%rip)
59a1(3): movzx %al,%eax
59a4(3): test %rax,%rax
59a7(2): jnz 0x4(%rip)
59a9(2): jmp 0xffffffa7(%rip)
59ab(4): sub $0x8,%rsp
59af(5): call 0x191(%rip)

"x2nrealloc" :
59c0(3): test %rdi,%rdi
59c3(3): mov %rdx,%r9
59c6(3): mov (%rsi),%rcx
59c9(2): jz 0x37(%rip)
59cb(2): xor %edx,%edx
59cd(a): mov $0x6148914691236517204,%rax
59d7(3): div %r9,%rax
59da(3): cmp %rcx,%rax
59dd(2): jbe 0x3e(%rip)
59df(3): mov %rcx,%rax
59e2(3): shr $0x1,%rax
59e5(5): lea 0x1(%rax,%rcx,1),%rcx
59ea(3): mov %rcx,(%rsi)
59ed(4): imul %r9,%rcx
59f1(3): mov %rcx,%rsi
59f4(5): jmp 0xffffff5c(%rip)
59f9(7): nop 0x0(%rax)
5a00(3): test %rcx,%rcx
5a03(2): jz 0x25(%rip)
5a05(3): mov %rcx,%rax
5a08(3): mul %rax,%r9,%rdx
5a0b(3): seto %dl
5a0e(3): test %rax,%rax
5a11(3): movzx %dl,%edx
5a14(2): js 0x7(%rip)
5a16(3): test %rdx,%rdx
5a19(2): jz 0xffffffd1(%rip)
5a1b(4): sub $0x8,%rsp
5a1f(5): call 0x121(%rip)
5a24(4): nop 0x0(%rax)
5a28(2): xor %edx,%edx
5a2a(5): mov $0x80,%eax
5a2f(3): xor %r8d,%r8d
5a32(3): div %r9,%rax
5a35(3): test %rax,%rax
5a38(4): setz %r8b
5a3c(4): lea 0x0(%r8,%rax,1),%rcx
5a40(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5a50(3): test %rdi,%rdi
5a53(3): mov (%rsi),%rax
5a56(2): jz 0x2a(%rip)
5a58(a): mov $0x6148914691236517203,%rdx
5a62(3): cmp %rdx,%rax
5a65(2): jnbe 0x2c(%rip)
5a67(3): mov %rax,%rdx
5a6a(3): shr $0x1,%rdx
5a6d(5): lea 0x1(%rdx,%rax,1),%rax
5a72(3): mov %rax,(%rsi)
5a75(3): mov %rax,%rsi
5a78(5): jmp 0xfffffed8(%rip)
5a7d(3): nop (%rax)
5a80(3): test %rax,%rax
5a83(5): mov $0x80,%edx
5a88(4): cmove %rdx,%rax
5a8c(3): test %rax,%rax
5a8f(2): jns 0xffffffe3(%rip)
5a91(4): sub $0x8,%rsp
5a95(5): call 0xab(%rip)

"xzalloc" :
5aa0(1): push %rbx
5aa1(3): mov %rdi,%rbx
5aa4(5): call 0xfffffe4c(%rip)
5aa9(3): mov %rbx,%rdx
5aac(2): xor %esi,%esi
5aae(3): mov %rax,%rdi
5ab1(1): pop %rbx
5ab2(5): jmp 0xffffbd9e(%rip)

"xcalloc" :
5ac0(3): mov %rdi,%rax
5ac3(4): sub $0x8,%rsp
5ac7(3): mul %rax,%rsi,%rdx
5aca(3): seto %dl
5acd(3): test %rax,%rax
5ad0(2): js 0x19(%rip)
5ad2(3): movzx %dl,%edx
5ad5(3): test %rdx,%rdx
5ad8(2): jnz 0x11(%rip)
5ada(5): call 0xffffbdc6(%rip)
5adf(3): test %rax,%rax
5ae2(2): jz 0x7(%rip)
5ae4(4): add $0x8,%rsp
5ae8(1): ret near (%rsp)
5ae9(5): call 0x57(%rip)

"xmemdup" :
5af0(1): push %rbp
5af1(1): push %rbx
5af2(3): mov %rdi,%rbp
5af5(3): mov %rsi,%rdi
5af8(3): mov %rsi,%rbx
5afb(4): sub $0x8,%rsp
5aff(5): call 0xfffffdf1(%rip)
5b04(4): add $0x8,%rsp
5b08(3): mov %rbx,%rdx
5b0b(3): mov %rbp,%rsi
5b0e(1): pop %rbx
5b0f(1): pop %rbp
5b10(3): mov %rax,%rdi
5b13(5): jmp 0xffffbdcd(%rip)

"xstrdup" :
5b20(1): push %rbx
5b21(3): mov %rdi,%rbx
5b24(5): call 0xffffbc8c(%rip)
5b29(3): mov %rbx,%rdi
5b2c(4): lea 0x1(%rax),%rsi
5b30(1): pop %rbx
5b31(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5b40(7): lea 0x5388(%rip),%rsi
5b47(4): sub $0x8,%rsp
5b4b(5): mov $0x5,%edx
5b50(2): xor %edi,%edi
5b52(5): call 0xffffbc3e(%rip)
5b57(6): mov 0x2084c3(%rip),%edi
5b5d(7): lea 0x41b5(%rip),%rdx
5b64(3): mov %rax,%rcx
5b67(2): xor %esi,%esi
5b69(2): xor %eax,%eax
5b6b(5): call 0xffffbe65(%rip)
5b70(5): call 0xffffbb80(%rip)

"xfts_open" :
5b80(4): sub $0x8,%rsp
5b84(6): or $0x200,%esi
5b8a(5): call 0x1656(%rip)
5b8f(3): test %rax,%rax
5b92(2): jz 0xe(%rip)
5b94(4): add $0x8,%rsp
5b98(1): ret near (%rsp)
5b99(7): nop 0x0(%rax)
5ba0(5): call 0xffffbb60(%rip)
5ba5(3): cmp $0x16,(%rax)
5ba8(2): jz 0x8(%rip)
5baa(5): call 0xffffff96(%rip)
5baf(1): nop 
5bb0(7): lea 0x5359(%rip),%rcx
5bb7(7): lea 0x5322(%rip),%rsi
5bbe(7): lea 0x5338(%rip),%rdi
5bc5(5): mov $0x29,%edx
5bca(5): call 0xffffbc76(%rip)

"cycle_warning_required" :
5bd0(3): mov 0x48(%rdi),%edx
5bd3(5): mov $0x1,%eax
5bd8(3): and $0x11,%edx
5bdb(3): cmp $0x10,%edx
5bde(2): jz 0x9(%rip)
5be0(2): xor %eax,%eax
5be2(3): cmp $0x11,%edx
5be5(2): jz 0xb(%rip)
5be7(2): REP ret near (%rsp)
5be9(7): nop 0x0(%rax)
5bf0(5): cmp $0x0,0x58(%rsi)
5bf5(3): setnz %al
5bf8(1): ret near (%rsp)

"AD_compare" :
5c00(2): xor %eax,%eax
5c02(4): mov 0x8(%rsi),%rdx
5c06(4): cmp %rdx,0x8(%rdi)
5c0a(2): jz 0x6(%rip)
5c0c(2): REP ret near (%rsp)
5c0e(2): nop 
5c10(3): mov (%rsi),%rax
5c13(3): cmp %rax,(%rdi)
5c16(3): setz %al
5c19(1): ret near (%rsp)

"AD_hash" :
5c20(4): mov 0x8(%rdi),%rax
5c24(2): xor %edx,%edx
5c26(3): div %rsi,%rax
5c29(3): mov %rdx,%rax
5c2c(1): ret near (%rsp)

"dev_type_hash" :
5c30(3): mov (%rdi),%rax
5c33(2): xor %edx,%edx
5c35(3): div %rsi,%rax
5c38(3): mov %rdx,%rax
5c3b(1): ret near (%rsp)

"dev_type_compare" :
5c40(3): mov (%rsi),%rax
5c43(3): cmp %rax,(%rdi)
5c46(3): setz %al
5c49(1): ret near (%rsp)

"fts_compare_ino" :
5c50(3): mov (%rdi),%rdx
5c53(3): mov (%rsi),%rax
5c56(7): mov 0x80(%rax),%rax
5c5d(7): cmp %rax,0x80(%rdx)
5c64(2): jb 0xc(%rip)
5c66(3): setnbe %al
5c69(3): movzx %al,%eax
5c6c(1): ret near (%rsp)
5c6d(3): nop (%rax)
5c70(5): mov $0xffffffff,%eax
5c75(1): ret near (%rsp)

"fts_stat" :
5c80(2): push %r12
5c82(1): push %rbp
5c83(3): mov %rsi,%rbp
5c86(1): push %rbx
5c87(5): cmp $0x0,0x58(%rbp)
5c8c(4): lea 0x78(%rsi),%rbx
5c90(3): mov %rdi,%r12
5c93(3): mov 0x48(%rdi),%eax
5c96(4): mov 0x30(%rsi),%rsi
5c9a(2): jnz 0x66(%rip)
5c9c(2): test $0x1,%al
5c9e(2): jz 0x62(%rip)
5ca0(3): mov %rbx,%rdx
5ca3(5): mov $0x1,%edi
5ca8(5): call 0xffffbc58(%rip)
5cad(2): test %eax,%eax
5caf(2): jz 0x7c(%rip)
5cb1(5): call 0xffffba4f(%rip)
5cb6(3): mov %rax,%r12
5cb9(2): mov (%rax),%eax
5cbb(3): cmp $0x2,%eax
5cbe(6): jz 0x112(%rip)
5cc4(4): lea 0x8(%rbx),%rdi
5cc8(3): mov %eax,0x40(%rbp)
5ccb(8): mov $0x0,0x78(%rbp)
5cd3(b): mov $0x0,0x88(%rbx)
5cde(2): xor %eax,%eax
5ce0(4): and $0xfffffff8,%rdi
5ce4(3): sub %rdi,%rbx
5ce7(6): lea 0x90(%rbx),%ecx
5ced(3): shr $0x3,%ecx
5cf0(3): REP stosd %rax,rdi(%es,10)
5cf3(5): mov $0xa,%eax
5cf8(1): pop %rbx
5cf9(1): pop %rbp
5cfa(2): pop %r12
5cfc(1): ret near (%rsp)
5cfd(3): nop (%rax)
5d00(2): test $0x2,%al
5d02(2): jnz 0xffffff9e(%rip)
5d04(2): test %dl,%dl
5d06(2): jnz 0xffffff9a(%rip)
5d08(3): mov %rsi,%rdx
5d0b(5): mov 0x2c(%r12),%esi
5d10(6): mov $0x100,%r8d
5d16(3): mov %rbx,%rcx
5d19(5): mov $0x1,%edi
5d1e(5): call 0xffffbaf2(%rip)
5d23(2): test %eax,%eax
5d25(6): jnz 0x9b(%rip)
5d2b(6): mov 0x90(%rbp),%eax
5d31(5): and $0xf000,%eax
5d36(5): cmp $0x4000,%eax
5d3b(2): jz 0x25(%rip)
5d3d(5): cmp $0xa000,%eax
5d42(6): jz 0xd6(%rip)
5d48(5): cmp $0x8000,%eax
5d4d(3): setz %al
5d50(3): movzx %al,%eax
5d53(1): pop %rbx
5d54(4): lea 0x3(%rax,%rax,4),%eax
5d58(1): pop %rbp
5d59(2): pop %r12
5d5b(1): ret near (%rsp)
5d5c(4): nop 0x0(%rax)
5d60(7): mov 0x88(%rbp),%rax
5d67(4): cmp $0x1,%rax
5d6b(6): jbe 0x85(%rip)
5d71(5): cmp $0x0,0x58(%rbp)
5d76(2): jle 0x7a(%rip)
5d78(6): test $0x20,0x48(%r12)
5d7e(4): lea 0xfffffffe(%rax),%rdx
5d82(4): cmove %rdx,%rax
5d86(7): cmp $0x2e,0x108(%rbp)
5d8d(4): mov %rax,0x68(%rbp)
5d91(5): mov $0x1,%eax
5d96(6): jnz 0xffffff62(%rip)
5d9c(7): cmp $0x0,0x109(%rbp)
5da3(6): jnz 0x85(%rip)
5da9(5): cmp $0x1,0x58(%rbp)
5dae(2): sbb %eax,%eax
5db0(3): and $0xfc,%eax
5db3(3): add $0x5,%eax
5db6(5): jmp 0xffffff42(%rip)
5dbb(5): nop 0x0(%rax,%rax,1)
5dc0(5): call 0xffffb940(%rip)
5dc5(2): mov (%rax),%eax
5dc7(5): jmp 0xfffffefd(%rip)
5dcc(4): nop 0x0(%rax)
5dd0(4): mov 0x30(%rbp),%rsi
5dd4(3): mov %rbx,%rdx
5dd7(5): mov $0x1,%edi
5ddc(5): call 0xffffb9e4(%rip)
5de1(2): test %eax,%eax
5de3(2): jz 0x1d(%rip)
5de5(4): mov (%r12),%eax
5de9(5): jmp 0xfffffedb(%rip)
5dee(2): nop 
5df0(7): mov $0xffffffff,%rax
5df7(2): jmp 0xffffff8f(%rip)
5df9(7): nop 0x0(%rax)
5e00(8): mov $0x0,(%r12)
5e08(5): mov $0xd,%eax
5e0d(5): jmp 0xfffffeeb(%rip)
5e12(6): nop 0x0(%rax,%rax,1)
5e18(5): mov $0xc,%eax
5e1d(5): jmp 0xfffffedb(%rip)
5e22(6): nop 0x0(%rax,%rax,1)
5e28(6): mov 0x108(%rbp),%edx
5e2e(6): and $0xffff00,%edx
5e34(6): cmp $0x2e00,%edx
5e3a(6): jnz 0xfffffebe(%rip)
5e40(5): jmp 0xffffff69(%rip)

"fts_sort" :
5e50(2): push %r13
5e52(2): push %r12
5e54(3): mov %rdx,%r12
5e57(1): push %rbp
5e58(1): push %rbx
5e59(3): mov %rdi,%rbp
5e5c(3): mov %rsi,%rbx
5e5f(4): sub $0x8,%rsp
5e63(4): cmp %rdx,0x38(%rbp)
5e67(4): mov 0x40(%rdi),%r13
5e6b(4): mov 0x10(%rdi),%rdi
5e6f(2): jnb 0x36(%rip)
5e71(4): lea 0x28(%rdx),%rsi
5e75(a): mov $0x2305843009213693951,%rax
5e7f(3): cmp %rax,%rsi
5e82(4): mov %rsi,0x38(%rbp)
5e86(6): jnbe 0x9e(%rip)
5e8c(4): shl/sal $0x3,%rsi
5e90(5): call 0xffffbb00(%rip)
5e95(3): test %rax,%rax
5e98(3): mov %rax,%rdi
5e9b(6): jz 0x85(%rip)
5ea1(4): mov %rax,0x10(%rbp)
5ea5(3): test %rbx,%rbx
5ea8(2): jz 0x19(%rip)
5eaa(3): mov %rdi,%rdx
5ead(3): nop (%rax)
5eb0(4): add $0x8,%rdx
5eb4(4): mov %rbx,0xfffffff8(%rdx)
5eb8(4): mov 0x10(%rbx),%rbx
5ebc(3): test %rbx,%rbx
5ebf(2): jnz 0xfffffff1(%rip)
5ec1(3): mov %r13,%rcx
5ec4(5): mov $0x8,%edx
5ec9(3): mov %r12,%rsi
5ecc(5): call 0xffffb874(%rip)
5ed1(4): mov 0x10(%rbp),%r8
5ed5(3): mov %r12,%rcx
5ed8(4): sub $0x1,%rcx
5edc(3): mov (%r8),%rax
5edf(2): jz 0x71(%rip)
5ee1(3): mov %rax,%rdi
5ee4(3): mov %r8,%rdx
5ee7(2): jmp 0xc(%rip)
5ee9(7): nop 0x0(%rax)
5ef0(3): mov (%rdx),%rdi
5ef3(4): mov 0x8(%rdx),%rsi
5ef7(4): add $0x8,%rdx
5efb(4): sub $0x1,%rcx
5eff(4): mov %rsi,0x10(%rdi)
5f03(2): jnz 0xffffffed(%rip)
5f05(5): mov 0xfffffff8(%r8,%r12,8),%rdx
5f0a(8): mov $0x0,0x10(%rdx)
5f12(4): add $0x8,%rsp
5f16(1): pop %rbx
5f17(1): pop %rbp
5f18(2): pop %r12
5f1a(2): pop %r13
5f1c(1): ret near (%rsp)
5f1d(3): nop (%rax)
5f20(4): mov 0x10(%rbp),%rdi
5f24(5): call 0xffffbb6c(%rip)
5f29(8): mov $0x0,0x10(%rbp)
5f31(8): mov $0x0,0x38(%rbp)
5f39(4): add $0x8,%rsp
5f3d(3): mov %rbx,%rax
5f40(1): pop %rbx
5f41(1): pop %rbp
5f42(2): pop %r12
5f44(2): pop %r13
5f46(1): ret near (%rsp)
5f47(9): nop 0x0(%rax,%rax,1)
5f50(3): mov %rax,%rdx
5f53(2): jmp 0xffffffb7(%rip)

"fts_alloc" :
5f60(2): push %r13
5f62(2): push %r12
5f64(3): mov %rdi,%r12
5f67(1): push %rbp
5f68(7): lea 0x110(%rdx),%rdi
5f6f(1): push %rbx
5f70(3): mov %rsi,%r13
5f73(3): mov %rdx,%rbp
5f76(4): sub $0x8,%rsp
5f7a(4): and $0xfffffff8,%rdi
5f7e(5): call 0xffffb9a2(%rip)
5f83(3): test %rax,%rax
5f86(3): mov %rax,%rbx
5f89(2): jz 0x53(%rip)
5f8b(7): lea 0x108(%rax),%rdi
5f92(3): mov %rbp,%rdx
5f95(3): mov %r13,%rsi
5f98(5): call 0xffffb948(%rip)
5f9d(5): mov 0x20(%r12),%rax
5fa2(8): mov $0x0,0x108(%rbx,%rbp,1)
5faa(4): mov %rbp,0x60(%rbx)
5fae(4): mov %r12,0x50(%rbx)
5fb2(7): mov $0x0,0x40(%rbx)
5fb9(8): mov $0x0,0x18(%rbx)
5fc1(4): mov %rax,0x38(%rbx)
5fc5(7): mov $0x30000,0x72(%rbx)
5fcc(8): mov $0x0,0x20(%rbx)
5fd4(8): mov $0x0,0x28(%rbx)
5fdc(4): add $0x8,%rsp
5fe0(3): mov %rbx,%rax
5fe3(1): pop %rbx
5fe4(1): pop %rbp
5fe5(2): pop %r12
5fe7(2): pop %r13
5fe9(1): ret near (%rsp)

"fts_lfree" :
5ff0(3): test %rdi,%rdi
5ff3(2): jz 0x3d(%rip)
5ff5(1): push %rbp
5ff6(1): push %rbx
5ff7(3): mov %rdi,%rbx
5ffa(4): sub $0x8,%rsp
5ffe(2): nop 
6000(4): mov 0x18(%rbx),%rdi
6004(4): mov 0x10(%rbx),%rbp
6008(3): test %rdi,%rdi
600b(2): jz 0x7(%rip)
600d(5): call 0xffffb863(%rip)
6012(3): mov %rbx,%rdi
6015(3): mov %rbp,%rbx
6018(5): call 0xffffba78(%rip)
601d(3): test %rbp,%rbp
6020(2): jnz 0xffffffe0(%rip)
6022(4): add $0x8,%rsp
6026(1): pop %rbx
6027(1): pop %rbp
6028(1): ret near (%rsp)
6029(7): nop 0x0(%rax)
6030(2): REP ret near (%rsp)

"fd_ring_clear" :
6040(1): push %rbx
6041(3): mov %rdi,%rbx
6044(2): jmp 0x18(%rip)
6046(a): nop 0x0(%rax,%rax,1)
6050(3): mov %rbx,%rdi
6053(5): call 0x359d(%rip)
6058(2): test %eax,%eax
605a(2): jns 0x16(%rip)
605c(3): mov %rbx,%rdi
605f(5): call 0x3541(%rip)
6064(2): test %al,%al
6066(2): jz 0xffffffea(%rip)
6068(1): pop %rbx
6069(1): ret near (%rsp)
606a(6): nop 0x0(%rax,%rax,1)
6070(2): mov %eax,%edi
6072(5): call 0xffffb7ee(%rip)
6077(2): jmp 0xffffffe5(%rip)

"filesystem_type" :
6080(2): push %r13
6082(2): push %r12
6084(1): push %rbp
6085(1): push %rbx
6086(7): sub $0x98,%rsp
608d(4): mov 0x50(%rdi),%rbx
6091(9): mov $0x28,%rax
609a(8): mov %rax,0x88(%rsp)
60a2(2): xor %eax,%eax
60a4(4): test $0x2,0x49(%rbx)
60a8(2): jz 0x6a(%rip)
60aa(4): mov 0x50(%rbx),%r12
60ae(3): mov %rdi,%rbp
60b1(3): mov %esi,%r13d
60b4(3): test %r12,%r12
60b7(2): jz 0x29(%rip)
60b9(4): mov 0x78(%rbp),%rax
60bd(3): mov %rsp,%rsi
60c0(3): mov %r12,%rdi
60c3(4): mov %rax,(%rsp)
60c7(5): call 0x27d9(%rip)
60cc(3): test %rax,%rax
60cf(2): jz 0x3e(%rip)
60d1(4): mov 0x8(%rax),%rbx
60d5(2): jmp 0x3f(%rip)
60d7(9): nop 0x0(%rax,%rax,1)
60e0(7): mov 0x207ee9(%rip),%r8
60e7(7): lea 0xfffffb52(%rip),%rcx
60ee(7): lea 0xfffffb3b(%rip),%rdx
60f5(2): xor %esi,%esi
60f7(5): mov $0xd,%edi
60fc(5): call 0x2a14(%rip)
6101(3): test %rax,%rax
6104(3): mov %rax,%r12
6107(4): mov %rax,0x50(%rbx)
610b(2): jnz 0xffffffae(%rip)
610d(3): test %r13d,%r13d
6110(2): jns 0x30(%rip)
6112(2): xor %ebx,%ebx
6114(8): mov 0x88(%rsp),%rdx
611c(9): xor $0x28,%rdx
6125(3): mov %rbx,%rax
6128(2): jnz 0x7a(%rip)
612a(7): add $0x98,%rsp
6131(1): pop %rbx
6132(1): pop %rbp
6133(2): pop %r12
6135(2): pop %r13
6137(1): ret near (%rsp)
6138(8): nop 0x0(%rax,%rax,1)
6140(5): lea 0x10(%rsp),%rsi
6145(3): mov %r13d,%edi
6148(5): call 0xffffb8c8(%rip)
614d(2): test %eax,%eax
614f(2): jnz 0xffffffc3(%rip)
6151(3): test %r12,%r12
6154(5): mov 0x10(%rsp),%rbx
6159(2): jz 0xffffffbb(%rip)
615b(5): mov $0x10,%edi
6160(5): call 0xffffb7c0(%rip)
6165(3): test %rax,%rax
6168(3): mov %rax,%r13
616b(2): jz 0xffffffa9(%rip)
616d(4): mov 0x78(%rbp),%rax
6171(4): mov %rbx,0x8(%r13)
6175(3): mov %r13,%rsi
6178(3): mov %r12,%rdi
617b(4): mov %rax,0x0(%r13)
617f(5): call 0x3191(%rip)
6184(3): test %rax,%rax
6187(2): jz 0x11(%rip)
6189(3): cmp %rax,%r13
618c(2): jnz 0x1b(%rip)
618e(5): mov 0x10(%rsp),%rbx
6193(5): jmp 0xffffff81(%rip)
6198(3): mov %r13,%rdi
619b(5): call 0xffffb8f5(%rip)
61a0(2): jmp 0xffffffee(%rip)
61a2(5): call 0xffffb63e(%rip)
61a7(5): call 0xffffb549(%rip)

"leaf_optimization" :
61b0(4): sub $0x8,%rsp
61b4(5): call 0xfffffecc(%rip)
61b9(6): cmp $0x52654973,%rax
61bf(2): jz 0x51(%rip)
61c1(2): jle 0x2f(%rip)
61c3(6): cmp $0x58465342,%rax
61c9(2): jz 0x47(%rip)
61cb(5): mov $0xff534d42,%edx
61d0(3): cmp %rdx,%rax
61d3(2): jz 0x32(%rip)
61d5(6): cmp $0x5346414f,%rax
61db(2): jz 0x2a(%rip)
61dd(5): mov $0x1,%eax
61e2(4): add $0x8,%rsp
61e6(1): ret near (%rsp)
61e7(9): nop 0x0(%rax,%rax,1)
61f0(6): cmp $0x6969,%rax
61f6(2): jz 0xf(%rip)
61f8(6): cmp $0x9fa0,%rax
61fe(2): jz 0x7(%rip)
6200(3): test %rax,%rax
6203(2): jnz 0xffffffda(%rip)
6205(2): xor %eax,%eax
6207(4): add $0x8,%rsp
620b(1): ret near (%rsp)
620c(4): nop 0x0(%rax)
6210(5): mov $0x2,%eax
6215(4): add $0x8,%rsp
6219(1): ret near (%rsp)

"cwd_advance_fd" :
6220(1): push %rbp
6221(1): push %rbx
6222(2): mov %esi,%ebp
6224(3): mov %rdi,%rbx
6227(4): sub $0x8,%rsp
622b(3): mov 0x2c(%rdi),%esi
622e(2): cmp %ebp,%esi
6230(2): jnz 0x7(%rip)
6232(3): cmp $0x9c,%esi
6235(2): jnz 0x4c(%rip)
6237(2): test %dl,%dl
6239(2): jnz 0x17(%rip)
623b(4): test $0x4,0x48(%rbx)
623f(2): jnz 0x6(%rip)
6241(2): test %esi,%esi
6243(2): jns 0x2d(%rip)
6245(3): mov %ebp,0x2c(%rbx)
6248(4): add $0x8,%rsp
624c(1): pop %rbx
624d(1): pop %rbp
624e(1): ret near (%rsp)
624f(1): nop 
6250(4): lea 0x60(%rbx),%rdi
6254(5): call 0x335c(%rip)
6259(2): test %eax,%eax
625b(2): js 0xffffffea(%rip)
625d(2): mov %eax,%edi
625f(5): call 0xffffb601(%rip)
6264(3): mov %ebp,0x2c(%rbx)
6267(4): add $0x8,%rsp
626b(1): pop %rbx
626c(1): pop %rbp
626d(1): ret near (%rsp)
626e(2): nop 
6270(2): mov %esi,%edi
6272(5): call 0xffffb5ee(%rip)
6277(3): mov %ebp,0x2c(%rbx)
627a(4): add $0x8,%rsp
627e(1): pop %rbx
627f(1): pop %rbp
6280(1): ret near (%rsp)
6281(5): call 0xffffb46f(%rip)

"restore_initial_cwd" :
6290(1): push %rbp
6291(1): push %rbx
6292(3): mov %rdi,%rbx
6295(4): sub $0x8,%rsp
6299(3): mov 0x48(%rdi),%edx
629c(2): mov %edx,%ebp
629e(3): and $0x4,%ebp
62a1(2): jnz 0x47(%rip)
62a3(3): and $0x2,%dh
62a6(2): jnz 0x2a(%rip)
62a8(3): mov 0x28(%rdi),%edi
62ab(2): xor %ebp,%ebp
62ad(5): call 0xffffb6d3(%rip)
62b2(2): test %eax,%eax
62b4(4): setnz %bpl
62b8(4): lea 0x60(%rbx),%rdi
62bc(5): call 0xfffffd84(%rip)
62c1(4): add $0x8,%rsp
62c5(2): mov %ebp,%eax
62c7(1): pop %rbx
62c8(1): pop %rbp
62c9(1): ret near (%rsp)
62ca(6): nop 0x0(%rax,%rax,1)
62d0(5): mov $0x1,%edx
62d5(5): mov $0xffffff9c,%esi
62da(5): call 0xffffff46(%rip)
62df(2): jmp 0xffffffd9(%rip)
62e1(7): nop 0x0(%rax)
62e8(2): xor %ebp,%ebp
62ea(2): jmp 0xffffffce(%rip)

"fts_palloc.isra.2" :
62f0(1): push %rbx
62f1(3): mov (%rsi),%rcx
62f4(3): mov %rdi,%rbx
62f7(3): mov (%rdi),%rdi
62fa(8): lea 0x100(%rcx,%rdx,1),%rax
6302(3): cmp %rax,%rcx
6305(2): jnbe 0x23(%rip)
6307(3): mov %rax,(%rsi)
630a(3): mov %rax,%rsi
630d(5): call 0xffffb683(%rip)
6312(3): test %rax,%rax
6315(2): jz 0x33(%rip)
6317(3): mov %rax,(%rbx)
631a(5): mov $0x1,%eax
631f(1): pop %rbx
6320(1): ret near (%rsp)
6321(7): nop 0x0(%rax)
6328(5): call 0xffffb768(%rip)
632d(7): mov $0x0,(%rbx)
6334(5): call 0xffffb3cc(%rip)
6339(6): mov $0x24,(%rax)
633f(2): xor %eax,%eax
6341(1): pop %rbx
6342(1): ret near (%rsp)
6343(5): nop 0x0(%rax,%rax,1)
6348(3): mov (%rbx),%rdi
634b(5): call 0xffffb745(%rip)
6350(7): mov $0x0,(%rbx)
6357(2): xor %eax,%eax
6359(1): pop %rbx
635a(1): ret near (%rsp)

"setup_dir.isra.4" :
6360(6): and $0x102,%edi
6366(1): push %rbx
6367(3): mov %rsi,%rbx
636a(2): jz 0x36(%rip)
636c(7): mov 0x207c5d(%rip),%r8
6373(7): lea 0xfffff886(%rip),%rcx
637a(7): lea 0xfffff89f(%rip),%rdx
6381(2): xor %esi,%esi
6383(5): mov $0x1f,%edi
6388(5): call 0x2788(%rip)
638d(3): test %rax,%rax
6390(3): mov %rax,(%rbx)
6393(3): setnz %al
6396(1): pop %rbx
6397(1): ret near (%rsp)
6398(8): nop 0x0(%rax,%rax,1)
63a0(5): mov $0x20,%edi
63a5(5): call 0xffffb57b(%rip)
63aa(3): mov %rax,%rdi
63ad(3): mov %rax,(%rbx)
63b0(2): xor %eax,%eax
63b2(3): test %rdi,%rdi
63b5(2): jz 0xffffffe1(%rip)
63b7(5): call 0x1d79(%rip)
63bc(5): mov $0x1,%eax
63c1(1): pop %rbx
63c2(1): ret near (%rsp)

"diropen.isra.6" :
63d0(3): mov %rdx,%rax
63d3(2): mov %esi,%edx
63d5(3): shl/sal $0xd,%edx
63d8(6): and $0x20000,%edx
63de(6): or $0x90900,%edx
63e4(6): and $0x200,%esi
63ea(2): jnz 0x16(%rip)
63ec(3): mov %rax,%rdi
63ef(2): mov %edx,%esi
63f1(2): xor %eax,%eax
63f3(5): jmp 0x1ddd(%rip)
63f8(8): nop 0x0(%rax,%rax,1)
6400(3): mov %rax,%rsi
6403(2): xor %eax,%eax
6405(5): jmp 0x326b(%rip)

"fts_safe_changedir" :
6410(2): push %r15
6412(2): push %r14
6414(3): mov %rsi,%r14
6417(2): push %r13
6419(2): push %r12
641b(3): mov %rdi,%r13
641e(1): push %rbp
641f(1): push %rbx
6420(3): mov %edx,%r12d
6423(3): mov %rcx,%rbp
6426(7): sub $0xb8,%rsp
642d(3): mov 0x48(%rdi),%ebx
6430(9): mov $0x28,%rax
6439(8): mov %rax,0xa8(%rsp)
6441(2): xor %eax,%eax
6443(3): mov %ebx,%r9d
6446(4): and $0x4,%r9d
644a(3): test %rcx,%rcx
644d(6): jz 0xb3(%rip)
6453(7): lea 0x4ac0(%rip),%rdx
645a(5): mov $0x3,%ecx
645f(3): mov %rbp,%rsi
6462(3): mov %rdx,%rdi
6465(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6467(3): setnbe %al
646a(2): sbb $0x0,%al
646c(2): test %al,%al
646e(6): jnz 0x92(%rip)
6474(3): test %r9d,%r9d
6477(6): jnz 0x8e(%rip)
647d(3): test %r12d,%r12d
6480(6): jns 0x1ea(%rip)
6486(3): test $0x2,%bh
6489(6): jnz 0x147(%rip)
648f(5): mov $0x1,0xf(%rsp)
6494(4): mov 0x2c(%r13),%edi
6498(3): mov %rbp,%rdx
649b(2): mov %ebx,%esi
649d(5): call 0xffffff33(%rip)
64a2(2): test %eax,%eax
64a4(3): mov %eax,%r15d
64a7(6): js 0x1b4(%rip)
64ad(4): mov 0x48(%r13),%ebx
64b1(3): test $0x2,%bl
64b4(6): jz 0xa6(%rip)
64ba(6): nop 0x0(%rax,%rax,1)
64c0(5): lea 0x10(%rsp),%rdx
64c5(3): mov %r15d,%esi
64c8(5): mov $0x1,%edi
64cd(5): call 0xffffb493(%rip)
64d2(2): test %eax,%eax
64d4(6): jz 0xcc(%rip)
64da(5): mov $0xffffffff,%ebx
64df(3): test %r12d,%r12d
64e2(2): jns 0x33(%rip)
64e4(5): call 0xffffb21c(%rip)
64e9(3): mov (%rax),%r12d
64ec(3): mov %rax,%rbp
64ef(3): mov %r15d,%edi
64f2(5): call 0xffffb36e(%rip)
64f7(4): mov %r12d,0x0(%rbp)
64fb(2): jmp 0x1a(%rip)
64fd(3): nop (%rax)
6500(3): test %r9d,%r9d
6503(2): jz 0x3d(%rip)
6505(3): and $0x2,%bh
6508(2): jz 0xb(%rip)
650a(3): test %r12d,%r12d
650d(6): jns 0xb3(%rip)
6513(2): xor %ebx,%ebx
6515(8): mov 0xa8(%rsp),%rcx
651d(9): xor $0x28,%rcx
6526(2): mov %ebx,%eax
6528(6): jnz 0x13d(%rip)
652e(7): add $0xb8,%rsp
6535(1): pop %rbx
6536(1): pop %rbp
6537(2): pop %r12
6539(2): pop %r13
653b(2): pop %r14
653d(2): pop %r15
653f(1): ret near (%rsp)
6540(3): test %r12d,%r12d
6543(6): js 0x13d(%rip)
6549(3): test $0x2,%bl
654c(3): mov %r12d,%r15d
654f(5): mov $0x0,0xf(%rsp)
6554(6): jnz 0xffffff6c(%rip)
655a(3): test %rbp,%rbp
655d(2): jz 0x23(%rip)
655f(7): lea 0x49b4(%rip),%rdx
6566(5): mov $0x3,%ecx
656b(3): mov %rbp,%rsi
656e(3): mov %rdx,%rdi
6571(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6573(3): setnbe %al
6576(2): sbb $0x0,%al
6578(2): test %al,%al
657a(6): jz 0xffffff46(%rip)
6580(3): and $0x2,%bh
6583(6): jnz 0x95(%rip)
6589(3): mov %r15d,%edi
658c(5): call 0xffffb3f4(%rip)
6591(2): mov %eax,%ebx
6593(5): jmp 0xffffff4c(%rip)
6598(8): nop 0x0(%rax,%rax,1)
65a0(5): mov 0x10(%rsp),%rax
65a5(4): cmp %rax,0x78(%r14)
65a9(6): jz 0x97(%rip)
65af(5): call 0xffffb151(%rip)
65b4(6): mov $0x2,(%rax)
65ba(5): jmp 0xffffff20(%rip)
65bf(1): nop 
65c0(3): mov %r12d,%edi
65c3(2): xor %ebx,%ebx
65c5(5): call 0xffffb29b(%rip)
65ca(5): jmp 0xffffff4b(%rip)
65cf(1): nop 
65d0(4): lea 0x60(%r13),%r15
65d4(3): mov %r15,%rdi
65d7(5): call 0x2fc9(%rip)
65dc(2): test %al,%al
65de(4): mov %al,0xf(%rsp)
65e2(6): jnz 0xfffffeb2(%rip)
65e8(3): mov %r15,%rdi
65eb(5): call 0x3005(%rip)
65f0(2): test %eax,%eax
65f2(3): mov %eax,%r15d
65f5(4): mov 0x48(%r13),%ebx
65f9(6): js 0xfffffe96(%rip)
65ff(3): test $0x2,%bl
6602(3): mov %eax,%r12d
6605(5): mov $0x1,0xf(%rsp)
660a(6): jz 0xffffff76(%rip)
6610(5): jmp 0xfffffeb0(%rip)
6615(3): nop (%rax)
6618(6): movzx 0xf(%rsp),%r14d
661e(3): mov %r15d,%esi
6621(3): mov %r13,%rdi
6624(2): xor %ebx,%ebx
6626(4): xor $0x1,%r14d
662a(4): movzx %r14b,%edx
662e(5): call 0xfffffbf2(%rip)
6633(5): jmp 0xfffffee2(%rip)
6638(8): nop 0x0(%rax,%rax,1)
6640(5): mov 0x18(%rsp),%rax
6645(7): cmp %rax,0x80(%r14)
664c(6): jnz 0xffffff63(%rip)
6652(4): mov 0x48(%r13),%ebx
6656(5): jmp 0xffffff2a(%rip)
665b(5): mov $0xffffffff,%ebx
6660(5): jmp 0xfffffeb5(%rip)
6665(5): call 0xffffb17b(%rip)
666a(3): test $0x2,%bl
666d(3): mov %r12d,%r15d
6670(5): mov $0x1,0xf(%rsp)
6675(6): jz 0xfffffef1(%rip)
667b(5): jmp 0xfffffe45(%rip)
6680(5): mov $0x0,0xf(%rsp)
6685(5): jmp 0xfffffe0f(%rip)

"enter_dir.isra.10" :
6690(6): and $0x102,%edi
6696(2): push %r12
6698(3): mov %rsi,%r12
669b(1): push %rbp
669c(1): push %rbx
669d(3): mov %rdx,%rbx
66a0(2): jz 0x70(%rip)
66a2(5): mov $0x18,%edi
66a7(5): call 0xffffb279(%rip)
66ac(3): test %rax,%rax
66af(3): mov %rax,%rbp
66b2(6): jz 0x86(%rip)
66b8(4): mov 0x78(%rbx),%rax
66bc(4): mov (%r12),%rdi
66c0(3): mov %rbp,%rsi
66c3(4): mov %rbx,0x10(%rbp)
66c7(4): mov %rax,0x0(%rbp)
66cb(7): mov 0x80(%rbx),%rax
66d2(4): mov %rax,0x8(%rbp)
66d6(5): call 0x2c3a(%rip)
66db(3): cmp %rax,%rbp
66de(3): mov %rax,%r12
66e1(2): jz 0x20(%rip)
66e3(3): mov %rbp,%rdi
66e6(5): call 0xffffb3aa(%rip)
66eb(3): test %r12,%r12
66ee(2): jz 0x4a(%rip)
66f0(5): mov 0x10(%r12),%rax
66f5(5): mov $0x2,%ecx
66fa(4): mov %cx,0x70(%rbx)
66fe(3): mov %rax,(%rbx)
6701(1): pop %rbx
6702(5): mov $0x1,%eax
6707(1): pop %rbp
6708(2): pop %r12
670a(1): ret near (%rsp)
670b(5): nop 0x0(%rax,%rax,1)
6710(4): mov (%r12),%rdi
6714(4): lea 0x78(%rdx),%rsi
6718(5): call 0x1a28(%rip)
671d(2): test %al,%al
671f(2): jz 0xffffffe2(%rip)
6721(5): mov $0x2,%edx
6726(3): mov %rbx,(%rbx)
6729(4): mov %dx,0x70(%rbx)
672d(1): pop %rbx
672e(1): pop %rbp
672f(2): pop %r12
6731(1): ret near (%rsp)
6732(6): nop 0x0(%rax,%rax,1)
6738(1): pop %rbx
6739(2): xor %eax,%eax
673b(1): pop %rbp
673c(2): pop %r12
673e(1): ret near (%rsp)

"leave_dir.isra.12" :
6740(4): sub $0x28,%rsp
6744(3): mov %rsi,%rcx
6747(9): mov $0x28,%rax
6750(5): mov %rax,0x18(%rsp)
6755(2): xor %eax,%eax
6757(6): and $0x102,%edi
675d(2): jnz 0x43(%rip)
675f(4): mov 0x8(%rdx),%rax
6763(3): test %rax,%rax
6766(2): jz 0x1f(%rip)
6768(5): cmp $0x0,0x58(%rax)
676d(2): js 0x18(%rip)
676f(3): mov (%rsi),%rcx
6772(5): cmp $0x0,0x10(%rcx)
6777(2): jz 0x7c(%rip)
6779(7): mov 0x80(%rdx),%rsi
6780(3): cmp %rsi,(%rcx)
6783(2): jz 0x4d(%rip)
6785(5): mov 0x18(%rsp),%rax
678a(9): xor $0x28,%rax
6793(2): jnz 0x5b(%rip)
6795(4): add $0x28,%rsp
6799(1): ret near (%rsp)
679a(6): nop 0x0(%rax,%rax,1)
67a0(4): mov 0x78(%rdx),%rax
67a4(3): mov (%rcx),%rdi
67a7(3): mov %rsp,%rsi
67aa(4): mov %rax,(%rsp)
67ae(7): mov 0x80(%rdx),%rax
67b5(5): mov %rax,0x8(%rsp)
67ba(5): call 0x2bb6(%rip)
67bf(3): test %rax,%rax
67c2(2): jz 0x31(%rip)
67c4(3): mov %rax,%rdi
67c7(5): call 0xffffb2c9(%rip)
67cc(2): jmp 0xffffffb9(%rip)
67ce(2): nop 
67d0(4): mov 0x78(%rdx),%rsi
67d4(4): cmp %rsi,0x8(%rcx)
67d8(2): jnz 0xffffffad(%rip)
67da(4): mov 0x78(%rax),%rdx
67de(7): mov 0x80(%rax),%rax
67e5(4): mov %rdx,0x8(%rcx)
67e9(3): mov %rax,(%rcx)
67ec(2): jmp 0xffffff99(%rip)
67ee(5): call 0xffffaff2(%rip)
67f3(5): call 0xffffaefd(%rip)

"fts_build" :
6800(2): push %r15
6802(2): push %r14
6804(3): mov %rdi,%r15
6807(2): push %r13
6809(2): push %r12
680b(1): push %rbp
680c(1): push %rbx
680d(4): sub $0x78,%rsp
6811(3): mov (%rdi),%rbp
6814(9): mov $0x28,%rax
681d(5): mov %rax,0x68(%rsp)
6822(2): xor %eax,%eax
6824(4): mov %esi,0x58(%rsp)
6828(4): mov 0x18(%rbp),%rax
682c(3): test %rax,%rax
682f(5): mov %rax,0x50(%rsp)
6834(6): jz 0x43c(%rip)
683a(3): mov %rax,%rdi
683d(5): call 0xffffb083(%rip)
6842(2): test %eax,%eax
6844(4): mov %eax,0x64(%rsp)
6848(6): js 0x558(%rip)
684e(5): cmp $0x0,0x40(%r15)
6853(6): jz 0x7d5(%rip)
6859(9): mov $0xffffffff,0x38(%rsp)
6862(4): mov 0x48(%r15),%edi
6866(5): mov $0x1,0x5f(%rsp)
686b(4): mov 0x48(%rbp),%rcx
686f(4): mov 0x38(%rbp),%rdx
6873(9): mov $0x0,0x40(%rsp)
687c(5): cmp $0x2f,0xffffffff(%rdx,%rcx,1)
6881(4): lea 0xffffffff(%rcx),%rax
6885(4): cmovne %rcx,%rax
6889(3): and $0x4,%edi
688c(5): mov %rax,0x48(%rsp)
6891(2): jz 0x12(%rip)
6893(4): add 0x20(%r15),%rax
6897(4): lea 0x1(%rax),%rbx
689b(3): mov $0x2f,(%rax)
689e(5): mov %rbx,0x40(%rsp)
68a3(5): mov 0x48(%rsp),%rax
68a8(4): mov 0x30(%r15),%rbx
68ac(5): mov $0x0,0x5e(%rsp)
68b1(5): mov $0x0,0x5d(%rsp)
68b6(9): mov $0x0,0x8(%rsp)
68bf(9): mov $0x0,0x10(%rsp)
68c8(4): add $0x1,%rax
68cc(5): mov %rbp,0x20(%rsp)
68d1(3): sub %rax,%rbx
68d4(5): mov %rax,0x18(%rsp)
68d9(4): mov 0x58(%rbp),%rax
68dd(5): mov %rbx,0x28(%rsp)
68e2(2): xor %ebx,%ebx
68e4(4): add $0x1,%rax
68e8(5): mov %rax,0x30(%rsp)
68ed(5): jmp 0xe2(%rip)
68f2(6): nop 0x0(%rax,%rax,1)
68f8(3): mov %r14,%r9
68fb(5): add 0x18(%rsp),%r9
6900(6): jb 0x860(%rip)
6906(5): mov 0x30(%rsp),%rax
690b(7): lea 0x108(%r13),%rsi
6912(4): mov %rax,0x58(%r13)
6916(3): mov (%r15),%rax
6919(4): mov %r9,0x48(%r13)
691d(4): mov %rax,0x8(%r13)
6921(4): mov 0x0(%rbp),%rax
6925(7): mov %rax,0x80(%r13)
692c(4): mov 0x48(%r15),%eax
6930(2): test $0x4,%al
6932(6): jnz 0x26e(%rip)
6938(4): mov %rsi,0x30(%r13)
693c(5): cmp $0x0,0x40(%r15)
6941(2): jz 0xb(%rip)
6943(3): test $0x4,%ah
6946(6): jz 0x302(%rip)
694c(4): movzx 0x12(%rbp),%edx
6950(3): and $0x18,%eax
6953(2): mov %edx,%esi
6955(3): sub $0x1,%edx
6958(3): cmp $0x18,%eax
695b(6): jz 0x2b5(%rip)
6961(5): mov $0xb,%ecx
6966(3): cmp $0xb,%edx
6969(5): mov %cx,0x70(%r13)
696e(6): jnbe 0x26a(%rip)
6974(7): lea 0x45a5(%rip),%rax
697b(3): mov 0x0(%rax,%rdx,4),%eax
697e(7): mov %eax,0x90(%r13)
6985(5): mov $0x2,%eax
698a(7): mov %rax,0xa8(%r13)
6991(6): cmp $0x0,0x10(%rsp)
6997(8): mov $0x0,0x10(%r13)
699f(6): jz 0x229(%rip)
69a5(5): mov 0x8(%rsp),%rax
69aa(4): mov %r13,0x10(%rax)
69ae(7): cmp $0x2710,%rbx
69b5(6): jz 0xfb(%rip)
69bb(4): add $0x1,%rbx
69bf(5): cmp 0x38(%rsp),%rbx
69c4(6): jnb 0x144(%rip)
69ca(5): mov %r13,0x8(%rsp)
69cf(5): mov 0x20(%rsp),%rax
69d4(4): mov 0x18(%rax),%r13
69d8(3): test %r13,%r13
69db(6): jz 0x4cd(%rip)
69e1(5): call 0xffffad1f(%rip)
69e6(3): mov %r13,%rdi
69e9(6): mov $0x0,(%rax)
69ef(3): mov %rax,%r12
69f2(5): call 0xffffaf1e(%rip)
69f7(3): test %rax,%rax
69fa(3): mov %rax,%rbp
69fd(6): jz 0x583(%rip)
6a03(5): test $0x20,0x48(%r15)
6a08(2): jnz 0xc(%rip)
6a0a(4): cmp $0x2e,0x13(%rax)
6a0e(6): jz 0x1e2(%rip)
6a14(4): lea 0x13(%rbp),%r13
6a18(3): mov %r13,%rdi
6a1b(5): call 0xffffad95(%rip)
6a20(3): mov %r13,%rsi
6a23(3): mov %rax,%rdx
6a26(3): mov %r15,%rdi
6a29(3): mov %rax,%r14
6a2c(5): call 0xfffff534(%rip)
6a31(3): test %rax,%rax
6a34(3): mov %rax,%r13
6a37(6): jz 0x419(%rip)
6a3d(5): cmp %r14,0x28(%rsp)
6a42(6): jnbe 0xfffffeb6(%rip)
6a48(4): mov 0x20(%r15),%rax
6a4c(4): lea 0x30(%r15),%rsi
6a50(4): lea 0x20(%r15),%rdi
6a54(5): mov %rax,0x28(%rsp)
6a59(5): mov 0x48(%rsp),%rax
6a5e(5): lea 0x2(%rax,%r14,1),%rdx
6a63(5): call 0xfffff88d(%rip)
6a68(2): test %al,%al
6a6a(6): jz 0x3e6(%rip)
6a70(4): mov 0x20(%r15),%rdx
6a74(5): cmp 0x28(%rsp),%rdx
6a79(6): jz 0x1e7(%rip)
6a7f(5): add 0x18(%rsp),%rdx
6a84(5): test $0x4,0x48(%r15)
6a89(6): cmove 0x40(%rsp),%rdx
6a8f(5): mov %rdx,0x40(%rsp)
6a94(4): mov 0x30(%r15),%rcx
6a98(5): sub 0x18(%rsp),%rcx
6a9d(4): mov %al,0x5d(%rsp)
6aa1(5): mov %rcx,0x28(%rsp)
6aa6(5): jmp 0xfffffe52(%rip)
6aab(5): nop 0x0(%rax,%rax,1)
6ab0(5): cmp $0x0,0x40(%r15)
6ab5(6): jnz 0xffffff06(%rip)
6abb(4): mov 0x64(%rsp),%esi
6abf(5): mov 0x20(%rsp),%rdi
6ac4(5): call 0xfffff5bc(%rip)
6ac9(6): cmp $0x1021994,%rax
6acf(6): jz 0x371(%rip)
6ad5(5): mov $0xff534d42,%ecx
6ada(3): cmp %rcx,%rax
6add(6): jz 0x363(%rip)
6ae3(6): cmp $0x6969,%rax
6ae9(6): jz 0x357(%rip)
6aef(4): add $0x1,%rbx
6af3(5): cmp 0x38(%rsp),%rbx
6af8(5): mov $0x1,0x5e(%rsp)
6afd(6): jb 0xfffffecd(%rip)
6b03(5): nop 0x0(%rax,%rax,1)
6b08(5): cmp $0x0,0x5d(%rsp)
6b0d(5): mov 0x20(%rsp),%rbp
6b12(6): jz 0x3a4(%rip)
6b18(4): mov 0x8(%r15),%rax
6b1c(4): mov 0x20(%r15),%rcx
6b20(3): test %rax,%rax
6b23(2): jz 0x2d(%rip)
6b25(3): nop (%rax)
6b28(4): mov 0x30(%rax),%rdx
6b2c(7): lea 0x108(%rax),%rsi
6b33(3): cmp %rsi,%rdx
6b36(2): jz 0xd(%rip)
6b38(4): sub 0x38(%rax),%rdx
6b3c(3): add %rcx,%rdx
6b3f(4): mov %rdx,0x30(%rax)
6b43(4): mov %rcx,0x38(%rax)
6b47(4): mov 0x10(%rax),%rax
6b4b(3): test %rax,%rax
6b4e(2): jnz 0xffffffda(%rip)
6b50(5): mov 0x10(%rsp),%rax
6b55(2): jmp 0xe(%rip)
6b57(9): nop 0x0(%rax,%rax,1)
6b60(3): mov %rdx,%rax
6b63(5): cmp $0x0,0x58(%rax)
6b68(6): js 0x34e(%rip)
6b6e(4): mov 0x30(%rax),%rdx
6b72(7): lea 0x108(%rax),%rsi
6b79(3): cmp %rsi,%rdx
6b7c(2): jz 0xd(%rip)
6b7e(4): sub 0x38(%rax),%rdx
6b82(3): add %rcx,%rdx
6b85(4): mov %rdx,0x30(%rax)
6b89(4): mov 0x10(%rax),%rdx
6b8d(4): mov %rcx,0x38(%rax)
6b91(3): test %rdx,%rdx
6b94(2): jnz 0xffffffcc(%rip)
6b96(4): mov 0x8(%rax),%rdx
6b9a(2): jmp 0xffffffc6(%rip)
6b9c(4): nop 0x0(%rax)
6ba0(4): mov 0x38(%r13),%rax
6ba4(5): mov 0x40(%rsp),%rdi
6ba9(4): mov %rax,0x30(%r13)
6bad(4): mov 0x60(%r13),%rax
6bb1(4): lea 0x1(%rax),%rdx
6bb5(5): call 0xffffae0b(%rip)
6bba(4): mov 0x48(%r15),%eax
6bbe(5): jmp 0xfffffd7e(%rip)
6bc3(5): nop 0x0(%rax,%rax,1)
6bc8(5): mov %r13,0x10(%rsp)
6bcd(5): jmp 0xfffffde1(%rip)
6bd2(6): nop 0x0(%rax,%rax,1)
6bd8(b): mov $0x0,0x90(%r13)
6be3(5): mov $0x2,%eax
6be8(5): jmp 0xfffffda2(%rip)
6bed(3): nop (%rax)
6bf0(4): cmp $0x0,0x14(%rax)
6bf4(2): jz 0xd(%rip)
6bf6(5): cmp $0x2e,0x14(%rax)
6bfb(6): jnz 0xfffffe19(%rip)
6c01(5): mov 0x8(%rsp),%r13
6c06(5): jmp 0xfffffdc4(%rip)
6c0b(5): nop 0x0(%rax,%rax,1)
6c10(6): and $0xfb,%esi
6c16(6): jz 0xfffffd4b(%rip)
6c1c(5): mov $0xb,%eax
6c21(3): cmp $0xb,%edx
6c24(5): mov %ax,0x70(%r13)
6c29(6): jbe 0x58d(%rip)
6c2f(b): mov $0x0,0x90(%r13)
6c3a(5): mov $0x1,%eax
6c3f(5): jmp 0xfffffd4b(%rip)
6c44(4): nop 0x0(%rax)
6c48(2): xor %edx,%edx
6c4a(3): mov %r13,%rsi
6c4d(3): mov %r15,%rdi
6c50(5): call 0xfffff030(%rip)
6c55(5): mov %ax,0x70(%r13)
6c5a(5): jmp 0xfffffd37(%rip)
6c5f(1): nop 
6c60(5): movzx 0x5d(%rsp),%eax
6c65(5): jmp 0xfffffe2f(%rip)
6c6a(6): nop 0x0(%rax,%rax,1)
6c70(3): mov 0x48(%rdi),%eax
6c73(2): mov %eax,%edx
6c75(3): and $0x10,%edx
6c78(2): jz 0xf(%rip)
6c7a(2): test $0x1,%al
6c7c(5): mov $0x20000,%edx
6c81(6): jnz 0x107(%rip)
6c87(5): and $0x204,%eax
6c8c(4): mov 0x30(%rbp),%rsi
6c90(5): mov $0xffffff9c,%edi
6c95(5): cmp $0x200,%eax
6c9a(2): jnz 0x6(%rip)
6c9c(4): mov 0x2c(%r15),%edi
6ca0(5): lea 0x64(%rsp),%rcx
6ca5(5): call 0x2a3b(%rip)
6caa(3): test %rax,%rax
6cad(4): mov %rax,0x18(%rbp)
6cb1(6): jz 0x31f(%rip)
6cb7(5): cmp $0xb,0x70(%rbp)
6cbc(6): jz 0x394(%rip)
6cc2(4): mov 0x48(%r15),%edi
6cc6(6): test $0x100,%edi
6ccc(6): jnz 0x124(%rip)
6cd2(5): cmp $0x1,0x40(%r15)
6cd7(3): sbb %rax,%rax
6cda(5): and $0x186a1,%eax
6cdf(4): sub $0x1,%rax
6ce3(5): cmp $0x2,0x58(%rsp)
6ce8(5): mov %rax,0x38(%rsp)
6ced(6): jz 0x353(%rip)
6cf3(4): mov 0x48(%r15),%edx
6cf7(4): mov 0x64(%rsp),%eax
6cfb(3): and $0x38,%edx
6cfe(3): cmp $0x18,%edx
6d01(6): jz 0x3a3(%rip)
6d07(5): cmp $0x3,0x58(%rsp)
6d0c(6): mov $0x1,%r12d
6d12(3): setz %bl
6d15(5): test $0x2,0x49(%r15)
6d1a(6): jnz 0x3e2(%rip)
6d20(2): test %eax,%eax
6d22(6): jns 0x366(%rip)
6d28(2): test %bl,%bl
6d2a(2): jz 0x11(%rip)
6d2c(3): test %r12b,%r12b
6d2f(2): jz 0xc(%rip)
6d31(5): call 0xffffa9cf(%rip)
6d36(2): mov (%rax),%eax
6d38(3): mov %eax,0x40(%rbp)
6d3b(5): or $0x1,0x72(%rbp)
6d40(4): mov 0x18(%rbp),%rdi
6d44(5): call 0xffffab2c(%rip)
6d49(4): mov 0x48(%r15),%edi
6d4d(8): mov $0x0,0x18(%rbp)
6d55(6): test $0x200,%edi
6d5b(2): jz 0x15(%rip)
6d5d(4): mov 0x64(%rsp),%eax
6d61(2): test %eax,%eax
6d63(2): js 0xd(%rip)
6d65(2): mov %eax,%edi
6d67(5): call 0xffffaaf9(%rip)
6d6c(4): mov 0x48(%r15),%edi
6d70(8): mov $0x0,0x18(%rbp)
6d78(5): mov $0x0,0x5f(%rsp)
6d7d(5): jmp 0xfffffaee(%rip)
6d82(6): nop 0x0(%rax,%rax,1)
6d88(2): xor %edx,%edx
6d8a(5): cmp $0x0,0x58(%rbp)
6d8f(3): setnz %dl
6d92(3): shl/sal $0x11,%edx
6d95(5): jmp 0xfffffef2(%rip)
6d9a(6): nop 0x0(%rax,%rax,1)
6da0(4): mov 0x18(%rbp),%rdi
6da4(5): call 0xffffaacc(%rip)
6da9(5): cmp $0x3,0x58(%rsp)
6dae(8): mov $0x0,0x18(%rbp)
6db6(6): jz 0x225(%rip)
6dbc(9): mov $0x0,0x10(%rsp)
6dc5(5): mov 0x68(%rsp),%rbx
6dca(9): xor $0x28,%rbx
6dd3(5): mov 0x10(%rsp),%rax
6dd8(6): jnz 0x3d9(%rip)
6dde(4): add $0x78,%rsp
6de2(1): pop %rbx
6de3(1): pop %rbp
6de4(2): pop %r12
6de6(2): pop %r13
6de8(2): pop %r14
6dea(2): pop %r15
6dec(1): ret near (%rsp)
6ded(3): nop (%rax)
6df0(4): lea 0x58(%r15),%rbx
6df4(3): mov %rbp,%rdx
6df7(3): mov %rbx,%rsi
6dfa(5): call 0xfffff946(%rip)
6dff(2): xor %edx,%edx
6e01(3): mov %rbp,%rsi
6e04(3): mov %r15,%rdi
6e07(5): call 0xffffee79(%rip)
6e0c(4): mov 0x48(%r15),%edi
6e10(3): mov %rbp,%rdx
6e13(3): mov %rbx,%rsi
6e16(5): call 0xfffff87a(%rip)
6e1b(2): test %al,%al
6e1d(6): jnz 0xfffffeb5(%rip)
6e23(5): call 0xffffa8dd(%rip)
6e28(9): mov $0x0,0x10(%rsp)
6e31(6): mov $0xc,(%rax)
6e37(2): jmp 0xffffff8e(%rip)
6e39(7): nop 0x0(%rax)
6e40(5): mov $0x0,0x5e(%rsp)
6e45(5): jmp 0xfffffb76(%rip)
6e4a(6): nop 0x0(%rax,%rax,1)
6e50(3): mov %r13,%rdi
6e53(5): mov 0x20(%rsp),%rbp
6e58(4): mov (%r12),%ebx
6e5c(5): call 0xffffac34(%rip)
6e61(5): mov 0x10(%rsp),%rdi
6e66(5): call 0xfffff18a(%rip)
6e6b(4): mov 0x18(%rbp),%rdi
6e6f(5): call 0xffffaa01(%rip)
6e74(6): mov $0x7,%r9d
6e7a(8): mov $0x0,0x18(%rbp)
6e82(9): mov $0x0,0x10(%rsp)
6e8b(5): mov %r9w,0x70(%rbp)
6e90(8): or $0x2000,0x48(%r15)
6e98(4): mov %ebx,(%r12)
6e9c(5): jmp 0xffffff29(%rip)
6ea1(7): nop 0x0(%rax)
6ea8(3): mov %rax,%rbp
6eab(5): cmp $0x0,0x5d(%rsp)
6eb0(6): jnz 0xfffffc68(%rip)
6eb6(5): test $0x4,0x48(%r15)
6ebb(2): jz 0x20(%rip)
6ebd(5): mov 0x18(%rsp),%rax
6ec2(4): cmp %rax,0x30(%r15)
6ec6(2): jz 0x7(%rip)
6ec8(3): test %rbx,%rbx
6ecb(2): jnz 0x8(%rip)
6ecd(6): sub $0x1,0x40(%rsp)
6ed3(5): mov 0x40(%rsp),%rax
6ed8(3): mov $0x0,(%rax)
6edb(6): cmp $0x0,0x50(%rsp)
6ee1(2): jnz 0x6f(%rip)
6ee3(5): cmp $0x0,0x5f(%rsp)
6ee8(2): jz 0x68(%rip)
6eea(5): cmp $0x1,0x58(%rsp)
6eef(2): jz 0x41(%rip)
6ef1(3): test %rbx,%rbx
6ef4(2): jz 0x3c(%rip)
6ef6(5): cmp $0x0,0x5e(%rsp)
6efb(6): jnz 0xfd(%rip)
6f01(5): cmp $0x0,0x40(%r15)
6f06(6): jz 0xfffffebf(%rip)
6f0c(4): cmp $0x1,%rbx
6f10(6): jz 0xfffffeb5(%rip)
6f16(5): mov 0x10(%rsp),%rsi
6f1b(3): mov %rbx,%rdx
6f1e(3): mov %r15,%rdi
6f21(5): call 0xffffef2f(%rip)
6f26(5): mov %rax,0x10(%rsp)
6f2b(5): jmp 0xfffffe9a(%rip)
6f30(5): cmp $0x0,0x58(%rbp)
6f35(6): jnz 0x131(%rip)
6f3b(3): mov %r15,%rdi
6f3e(5): call 0xfffff352(%rip)
6f43(2): test %eax,%eax
6f45(3): setnz %al
6f48(2): test %al,%al
6f4a(6): jnz 0x189(%rip)
6f50(3): test %rbx,%rbx
6f53(2): jnz 0xffffffa3(%rip)
6f55(5): cmp $0x3,0x58(%rsp)
6f5a(6): jz 0x1be(%rip)
6f60(5): mov 0x10(%rsp),%rdi
6f65(5): call 0xfffff08b(%rip)
6f6a(9): mov $0x0,0x10(%rsp)
6f73(5): jmp 0xfffffe52(%rip)
6f78(8): nop 0x0(%rax,%rax,1)
6f80(4): mov (%r12),%eax
6f84(5): mov 0x20(%rsp),%rbp
6f89(2): test %eax,%eax
6f8b(2): jz 0x23(%rip)
6f8d(3): test %rbx,%rbx
6f90(3): mov %eax,0x40(%rbp)
6f93(6): jnz 0x136(%rip)
6f99(6): cmp $0x0,0x50(%rsp)
6f9f(5): mov $0x4,%eax
6fa4(6): jnz 0x125(%rip)
6faa(4): mov %ax,0x70(%rbp)
6fae(4): mov 0x18(%rbp),%rdi
6fb2(3): test %rdi,%rdi
6fb5(6): jz 0xfffffef6(%rip)
6fbb(5): call 0xffffa8b5(%rip)
6fc0(8): mov $0x0,0x18(%rbp)
6fc8(5): jmp 0xfffffee3(%rip)
6fcd(3): nop (%rax)
6fd0(5): cmp $0x3,0x58(%rsp)
6fd5(6): jnz 0xfffffde7(%rip)
6fdb(6): mov $0x4,%r10d
6fe1(5): mov %r10w,0x70(%rbp)
6fe6(5): call 0xffffa71a(%rip)
6feb(2): mov (%rax),%eax
6fed(3): mov %eax,0x40(%rbp)
6ff0(5): jmp 0xfffffdcc(%rip)
6ff5(3): nop (%rax)
6ff8(7): lea 0xffffec51(%rip),%rax
6fff(5): mov 0x10(%rsp),%rsi
7004(3): mov %rbx,%rdx
7007(3): mov %r15,%rdi
700a(4): mov %rax,0x40(%r15)
700e(5): call 0xffffee42(%rip)
7013(8): mov $0x0,0x40(%r15)
701b(5): mov %rax,0x10(%rsp)
7020(5): jmp 0xfffffda5(%rip)
7025(3): nop (%rax)
7028(9): mov $0x186a0,0x38(%rsp)
7031(5): mov $0x1,0x5f(%rsp)
7036(4): mov 0x48(%r15),%edi
703a(5): jmp 0xfffff831(%rip)
703f(1): nop 
7040(5): mov $0x0,0x5f(%rsp)
7045(4): mov 0x48(%r15),%edi
7049(5): jmp 0xfffff822(%rip)
704e(2): nop 
7050(2): xor %edx,%edx
7052(3): mov %rbp,%rsi
7055(3): mov %r15,%rdi
7058(5): call 0xffffec28(%rip)
705d(4): mov %ax,0x70(%rbp)
7061(5): jmp 0xfffffc71(%rip)
7066(4): mov 0x8(%rbp),%rsi
706a(7): lea 0x3ea9(%rip),%rcx
7071(5): mov $0xffffffff,%edx
7076(3): mov %r15,%rdi
7079(5): call 0xfffff397(%rip)
707e(2): test %eax,%eax
7080(3): setnz %al
7083(5): jmp 0xfffffec5(%rip)
7088(2): xor %ecx,%ecx
708a(2): mov %eax,%edx
708c(3): mov %rbp,%rsi
708f(3): mov %r15,%rdi
7092(5): call 0xfffff37e(%rip)
7097(2): test %eax,%eax
7099(6): jnz 0xfffffc8f(%rip)
709f(5): jmp 0xfffff7c3(%rip)
70a4(8): cmp $0x2,0x88(%rbp)
70ac(6): jnz 0xfffffc5b(%rip)
70b2(2): mov %eax,%esi
70b4(3): mov %rbp,%rdi
70b7(5): call 0xfffff0f9(%rip)
70bc(2): test %eax,%eax
70be(2): jnz 0x80(%rip)
70c0(4): mov 0x64(%rsp),%eax
70c4(5): jmp 0xfffffc43(%rip)
70c9(5): mov $0x7,%eax
70ce(5): jmp 0xfffffedc(%rip)
70d3(5): mov $0x7,%edi
70d8(4): mov %di,0x70(%rbp)
70dc(8): or $0x2000,0x48(%r15)
70e4(5): mov 0x10(%rsp),%rdi
70e9(5): call 0xffffef07(%rip)
70ee(9): mov $0x0,0x10(%rsp)
70f7(5): jmp 0xfffffcce(%rip)
70fc(2): mov %eax,%edi
70fe(5): mov $0x3,%edx
7103(5): mov $0x406,%esi
7108(2): xor %eax,%eax
710a(5): call 0x2716(%rip)
710f(4): mov %eax,0x64(%rsp)
7113(5): jmp 0xfffffc0d(%rip)
7118(4): movzx 0x70(%rbp),%eax
711c(4): cmp $0x7,%ax
7120(6): jz 0xfffffe40(%rip)
7126(4): cmp $0x4,%ax
712a(6): jz 0xfffffe36(%rip)
7130(5): mov $0x6,%esi
7135(4): mov %si,0x70(%rbp)
7139(5): jmp 0xfffffe27(%rip)
713e(5): cmp $0x3,0x58(%rsp)
7143(6): jnz 0xfffffefd(%rip)
7149(4): mov 0x64(%rsp),%eax
714d(3): xor %r12d,%r12d
7150(5): mov $0x1,%ebx
7155(5): jmp 0xfffffbc0(%rip)
715a(6): nop 0x0(%rax,%rax,1)
7160(3): mov %r13,%rdi
7163(5): mov 0x20(%rsp),%rbp
7168(5): call 0xffffa928(%rip)
716d(5): mov 0x10(%rsp),%rdi
7172(5): call 0xffffee7e(%rip)
7177(4): mov 0x18(%rbp),%rdi
717b(5): call 0xffffa6f5(%rip)
7180(6): mov $0x7,%r8d
7186(8): mov $0x0,0x18(%rbp)
718e(9): mov $0x0,0x10(%rsp)
7197(5): mov %r8w,0x70(%rbp)
719c(8): or $0x2000,0x48(%r15)
71a4(8): mov $0x24,(%r12)
71ac(5): jmp 0xfffffc19(%rip)
71b1(5): call 0xffffa62f(%rip)
71b6(7): lea 0x3d63(%rip),%rax
71bd(3): mov 0x0(%rax,%rdx,4),%eax
71c0(7): mov %eax,0x90(%r13)
71c7(5): mov $0x1,%eax
71cc(5): jmp 0xfffff7be(%rip)

"rpl_fts_open" :
71e0(2): push %r15
71e2(2): push %r14
71e4(2): push %r13
71e6(2): push %r12
71e8(1): push %rbp
71e9(1): push %rbx
71ea(4): sub $0x28,%rsp
71ee(6): test $0xfffff000,%esi
71f4(6): jnz 0x384(%rip)
71fa(2): mov %esi,%eax
71fc(2): mov %esi,%ebp
71fe(5): and $0x204,%eax
7203(5): cmp $0x204,%eax
7208(6): jz 0x370(%rip)
720e(4): test $0x12,%sil
7212(6): jz 0x366(%rip)
7218(3): mov %rdi,%r13
721b(5): mov $0x1,%esi
7220(5): mov $0x80,%edi
7225(3): mov %rdx,%r14
7228(5): call 0xffffa678(%rip)
722d(3): test %rax,%rax
7230(3): mov %rax,%rbx
7233(6): jz 0x25b(%rip)
7239(4): test $0x2,%bpl
723d(4): mov %r14,0x40(%rax)
7241(6): jnz 0x25f(%rip)
7247(4): mov 0x0(%r13),%rdi
724b(3): mov %ebp,0x48(%rax)
724e(7): mov $0xffffff9c,0x2c(%rbx)
7255(3): test %rdi,%rdi
7258(6): jz 0x267(%rip)
725e(3): mov %r13,%r15
7261(3): xor %r12d,%r12d
7264(4): nop 0x0(%rax)
7268(5): call 0xffffa548(%rip)
726d(3): cmp %rax,%r12
7270(4): cmovnae %rax,%r12
7274(4): add $0x8,%r15
7278(3): mov (%r15),%rdi
727b(3): test %rdi,%rdi
727e(2): jnz 0xffffffea(%rip)
7280(5): lea 0x1(%r12),%rdx
7285(5): mov $0x1000,%eax
728a(7): cmp $0x1000,%rdx
7291(4): cmovnae %rax,%rdx
7295(4): lea 0x30(%rbx),%rsi
7299(4): lea 0x20(%rbx),%rdi
729d(5): call 0xfffff053(%rip)
72a2(2): test %al,%al
72a4(4): mov %al,0x16(%rsp)
72a8(6): jz 0x2a1(%rip)
72ae(4): mov 0x0(%r13),%rsi
72b2(3): test %rsi,%rsi
72b5(6): jz 0x2ab(%rip)
72bb(7): lea 0x38ff(%rip),%rsi
72c2(2): xor %edx,%edx
72c4(3): mov %rbx,%rdi
72c7(5): call 0xffffec99(%rip)
72cc(3): test %rax,%rax
72cf(3): mov %rax,%r15
72d2(6): jz 0x26e(%rip)
72d8(7): mov $0xffffffff,%rax
72df(3): test %r14,%r14
72e2(4): mov 0x0(%r13),%rsi
72e6(4): mov %rax,0x58(%r15)
72ea(4): mov %rax,0x68(%r15)
72ee(2): jz 0xf(%rip)
72f0(3): mov 0x48(%rbx),%eax
72f3(3): shr $0xa,%eax
72f6(3): and $0x1,%eax
72f9(4): mov %al,0x16(%rsp)
72fd(3): test %rsi,%rsi
7300(6): jz 0x26c(%rip)
7306(3): shr $0xb,%ebp
7309(9): mov $0x0,0x18(%rsp)
7312(3): xor %r12d,%r12d
7315(3): xor $0x1,%ebp
7318(2): mov %ebp,%eax
731a(2): xor %ebp,%ebp
731c(3): and $0x1,%eax
731f(4): mov %al,0x17(%rsp)
7323(2): jmp 0x79(%rip)
7325(3): nop (%rax)
7328(3): mov %rax,%rdx
732b(3): mov %rbx,%rdi
732e(5): call 0xffffec32(%rip)
7333(3): test %rax,%rax
7336(3): mov %rax,%rcx
7339(6): jz 0x1f7(%rip)
733f(8): mov $0x0,0x58(%rax)
7347(4): mov %r15,0x8(%rax)
734b(7): lea 0x108(%rax),%rax
7352(3): test %r12,%r12
7355(4): mov %rax,0x30(%rcx)
7359(6): jz 0x177(%rip)
735f(5): cmp $0x0,0x16(%rsp)
7364(6): jz 0x16c(%rip)
736a(5): mov $0xb,%esi
736f(3): test %r14,%r14
7372(b): mov $0x2,0xa8(%rcx)
737d(4): mov %si,0x70(%rcx)
7381(6): jz 0x18f(%rip)
7387(4): mov %r12,0x10(%rcx)
738b(3): mov %rcx,%r12
738e(4): add $0x1,%rbp
7392(5): mov 0x0(%r13,%rbp,8),%rsi
7397(3): test %rsi,%rsi
739a(2): jz 0x56(%rip)
739c(3): mov %rsi,%rdi
739f(5): mov %rsi,0x8(%rsp)
73a4(5): call 0xffffa40c(%rip)
73a9(4): cmp $0x2,%rax
73ad(5): mov 0x8(%rsp),%rsi
73b2(6): jbe 0xffffff76(%rip)
73b8(5): cmp $0x0,0x17(%rsp)
73bd(6): jz 0xffffff6b(%rip)
73c3(5): cmp $0x2f,0xffffffff(%rsi,%rax,1)
73c8(6): jnz 0xffffff60(%rip)
73ce(2): nop 
73d0(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
73d5(6): jnz 0xffffff53(%rip)
73db(4): sub $0x1,%rax
73df(4): cmp $0x1,%rax
73e3(2): jnz 0xffffffed(%rip)
73e5(5): jmp 0xffffff43(%rip)
73ea(6): nop 0x0(%rax,%rax,1)
73f0(3): test %r14,%r14
73f3(2): jz 0x19(%rip)
73f5(4): cmp $0x1,%rbp
73f9(2): jbe 0x13(%rip)
73fb(3): mov %r12,%rsi
73fe(3): mov %rbp,%rdx
7401(3): mov %rbx,%rdi
7404(5): call 0xffffea4c(%rip)
7409(3): mov %rax,%r12
740c(7): lea 0x37ae(%rip),%rsi
7413(2): xor %edx,%edx
7415(3): mov %rbx,%rdi
7418(5): call 0xffffeb48(%rip)
741d(3): test %rax,%rax
7420(3): mov %rax,(%rbx)
7423(6): jz 0x10d(%rip)
7429(3): mov 0x48(%rbx),%edi
742c(5): mov $0x9,%edx
7431(4): lea 0x58(%rbx),%rsi
7435(4): mov %r12,0x10(%rax)
7439(4): mov %dx,0x70(%rax)
743d(8): mov $0x1,0x58(%rax)
7445(5): call 0xffffef1b(%rip)
744a(2): test %al,%al
744c(6): jz 0xe4(%rip)
7452(3): mov 0x48(%rbx),%esi
7455(6): test $0x204,%esi
745b(2): jnz 0x25(%rip)
745d(3): mov 0x2c(%rbx),%edi
7460(7): lea 0x3ab4(%rip),%rdx
7467(5): call 0xffffef69(%rip)
746c(2): test %eax,%eax
746e(3): mov %eax,0x28(%rbx)
7471(2): jns 0xf(%rip)
7473(4): or $0x4,0x48(%rbx)
7477(9): nop 0x0(%rax,%rax,1)
7480(4): lea 0x60(%rbx),%rdi
7484(5): mov $0xffffffff,%esi
7489(5): call 0x20f7(%rip)
748e(4): add $0x28,%rsp
7492(3): mov %rbx,%rax
7495(1): pop %rbx
7496(1): pop %rbp
7497(2): pop %r12
7499(2): pop %r13
749b(2): pop %r14
749d(2): pop %r15
749f(1): ret near (%rsp)
74a0(4): mov 0x0(%r13),%rdi
74a4(2): mov %ebp,%eax
74a6(7): mov $0xffffff9c,0x2c(%rbx)
74ad(3): and $0xfd,%ah
74b0(3): or $0x4,%eax
74b3(3): test %rdi,%rdi
74b6(3): mov %eax,0x48(%rbx)
74b9(6): jnz 0xfffffda5(%rip)
74bf(5): mov $0x1000,%edx
74c4(5): jmp 0xfffffdd1(%rip)
74c9(7): nop 0x0(%rax)
74d0(2): xor %edx,%edx
74d2(3): mov %rcx,%rsi
74d5(3): mov %rbx,%rdi
74d8(5): mov %rcx,0x8(%rsp)
74dd(5): call 0xffffe7a3(%rip)
74e2(5): mov 0x8(%rsp),%rcx
74e7(3): test %r14,%r14
74ea(4): mov %ax,0x70(%rcx)
74ee(6): jnz 0xfffffe99(%rip)
74f4(3): test %r12,%r12
74f7(8): mov $0x0,0x10(%rcx)
74ff(2): jnz 0x19(%rip)
7501(5): mov %rcx,0x18(%rsp)
7506(3): mov %rcx,%r12
7509(5): jmp 0xfffffe85(%rip)
750e(2): nop 
7510(8): mov $0x0,0x10(%rcx)
7518(5): mov 0x18(%rsp),%rax
751d(5): mov %rcx,0x18(%rsp)
7522(4): mov %rcx,0x10(%rax)
7526(5): jmp 0xfffffe68(%rip)
752b(5): nop 0x0(%rax,%rax,1)
7530(3): mov %r12,%rdi
7533(5): call 0xffffeabd(%rip)
7538(3): mov %r15,%rdi
753b(5): call 0xffffa555(%rip)
7540(4): mov 0x20(%rbx),%rdi
7544(5): call 0xffffa54c(%rip)
7549(3): mov %rbx,%rdi
754c(2): xor %ebx,%ebx
754e(5): call 0xffffa542(%rip)
7553(5): jmp 0xffffff3b(%rip)
7558(8): nop 0x0(%rax,%rax,1)
7560(3): xor %r15d,%r15d
7563(3): test %r14,%r14
7566(6): jnz 0xfffffd8a(%rip)
756c(3): xor %r12d,%r12d
756f(5): jmp 0xfffffe9d(%rip)
7574(4): nop 0x0(%rax)
7578(5): call 0xffffa188(%rip)
757d(2): xor %ebx,%ebx
757f(6): mov $0x16,(%rax)
7585(5): jmp 0xffffff09(%rip)

"rpl_fts_close" :
7590(2): push %r12
7592(1): push %rbp
7593(3): mov %rdi,%rbp
7596(1): push %rbx
7597(3): mov (%rdi),%rdi
759a(3): test %rdi,%rdi
759d(2): jz 0x46(%rip)
759f(5): cmp $0x0,0x58(%rdi)
75a4(2): jns 0x1b(%rip)
75a6(5): jmp 0x11a(%rip)
75ab(5): nop 0x0(%rax,%rax,1)
75b0(5): call 0xffffa4e0(%rip)
75b5(5): cmp $0x0,0x58(%rbx)
75ba(3): mov %rbx,%rdi
75bd(2): js 0x1e(%rip)
75bf(4): mov 0x10(%rdi),%rbx
75c3(3): test %rbx,%rbx
75c6(2): jnz 0xffffffea(%rip)
75c8(4): mov 0x8(%rdi),%rbx
75cc(5): call 0xffffa4c4(%rip)
75d1(5): cmp $0x0,0x58(%rbx)
75d6(3): mov %rbx,%rdi
75d9(2): jns 0xffffffe6(%rip)
75db(3): mov %rbx,%rdi
75de(5): call 0xffffa4b2(%rip)
75e3(4): mov 0x8(%rbp),%rdi
75e7(3): test %rdi,%rdi
75ea(2): jz 0x7(%rip)
75ec(5): call 0xffffea04(%rip)
75f1(4): mov 0x10(%rbp),%rdi
75f5(5): call 0xffffa49b(%rip)
75fa(4): mov 0x20(%rbp),%rdi
75fe(5): call 0xffffa492(%rip)
7603(3): mov 0x48(%rbp),%eax
7606(3): test $0x2,%ah
7609(2): jz 0x67(%rip)
760b(3): mov 0x2c(%rbp),%edi
760e(2): test %edi,%edi
7610(6): jns 0x90(%rip)
7616(2): xor %ebx,%ebx
7618(4): lea 0x60(%rbp),%rdi
761c(5): call 0xffffea24(%rip)
7621(4): mov 0x50(%rbp),%rdi
7625(3): test %rdi,%rdi
7628(2): jz 0x7(%rip)
762a(5): call 0x1736(%rip)
762f(7): test $0x102,0x48(%rbp)
7636(4): mov 0x58(%rbp),%rdi
763a(2): jz 0x26(%rip)
763c(3): test %rdi,%rdi
763f(2): jz 0x7(%rip)
7641(5): call 0x171f(%rip)
7646(3): mov %rbp,%rdi
7649(5): call 0xffffa447(%rip)
764e(2): test %ebx,%ebx
7650(6): jnz 0xb1(%rip)
7656(2): mov %ebx,%eax
7658(1): pop %rbx
7659(1): pop %rbp
765a(2): pop %r12
765c(1): ret near (%rsp)
765d(3): nop (%rax)
7660(5): call 0xffffa430(%rip)
7665(2): jmp 0xffffffe1(%rip)
7667(9): nop 0x0(%rax,%rax,1)
7670(2): test $0x4,%al
7672(2): jnz 0xffffffa4(%rip)
7674(3): mov 0x28(%rbp),%edi
7677(5): call 0xffffa309(%rip)
767c(2): test %eax,%eax
767e(2): jnz 0x52(%rip)
7680(3): mov 0x28(%rbp),%edi
7683(5): call 0xffffa1dd(%rip)
7688(2): test %eax,%eax
768a(2): jz 0xffffff8c(%rip)
768c(5): call 0xffffa074(%rip)
7691(3): mov %rax,%r12
7694(2): jmp 0x64(%rip)
7696(a): nop 0x0(%rax,%rax,1)
76a0(5): call 0xffffa1c0(%rip)
76a5(2): test %eax,%eax
76a7(6): jz 0xffffff6f(%rip)
76ad(5): call 0xffffa053(%rip)
76b2(2): mov (%rax),%ebx
76b4(5): jmp 0xffffff64(%rip)
76b9(7): nop 0x0(%rax)
76c0(3): mov %rdi,%rbx
76c3(3): mov %rbx,%rdi
76c6(5): call 0xffffa3ca(%rip)
76cb(5): jmp 0xffffff18(%rip)
76d0(5): call 0xffffa030(%rip)
76d5(3): mov 0x28(%rbp),%edi
76d8(3): mov %rax,%r12
76db(2): mov (%rax),%ebx
76dd(5): call 0xffffa183(%rip)
76e2(2): test %eax,%eax
76e4(6): jz 0xffffff34(%rip)
76ea(2): test %ebx,%ebx
76ec(6): jnz 0xffffff2c(%rip)
76f2(6): nop 0x0(%rax,%rax,1)
76f8(4): mov (%r12),%ebx
76fc(5): jmp 0xffffff1c(%rip)
7701(5): call 0xffff9fff(%rip)
7706(2): mov %ebx,(%rax)
7708(5): mov $0xffffffff,%ebx
770d(5): jmp 0xffffff49(%rip)

"rpl_fts_read" :
7720(2): push %r14
7722(2): push %r13
7724(2): push %r12
7726(1): push %rbp
7727(1): push %rbx
7728(3): mov (%rdi),%rbp
772b(3): test %rbp,%rbp
772e(6): jz 0x110(%rip)
7734(3): mov 0x48(%rdi),%edx
7737(3): test $0x20,%dh
773a(6): jnz 0x104(%rip)
7740(4): movzx 0x74(%rbp),%eax
7744(5): mov $0x3,%ebx
7749(3): mov %rdi,%r12
774c(4): mov %bx,0x74(%rbp)
7750(4): cmp $0x1,%ax
7754(6): jz 0x24c(%rip)
775a(4): cmp $0x2,%ax
775e(4): movzx 0x70(%rbp),%ecx
7762(6): jz 0xee(%rip)
7768(4): cmp $0x1,%cx
776c(2): jnz 0x34(%rip)
776e(5): jmp 0x222(%rip)
7773(5): nop 0x0(%rax,%rax,1)
7778(4): mov %rbx,(%r12)
777c(3): mov %rbp,%rdi
777f(5): call 0xffffa311(%rip)
7784(5): cmp $0x0,0x58(%rbx)
7789(6): jz 0x237(%rip)
778f(4): movzx 0x74(%rbx),%eax
7793(3): mov %rbx,%rbp
7796(4): cmp $0x4,%ax
779a(6): jnz 0x32e(%rip)
77a0(4): mov 0x10(%rbp),%rbx
77a4(3): test %rbx,%rbx
77a7(2): jnz 0xffffffd1(%rip)
77a9(4): mov 0x8(%rbp),%rbx
77ad(5): cmp $0x0,0x18(%rbx)
77b2(6): jnz 0x56e(%rip)
77b8(4): mov %rbx,(%r12)
77bc(3): mov %rbp,%rdi
77bf(5): call 0xffffa2d1(%rip)
77c4(5): cmp $0xffffffff,0x58(%rbx)
77c9(6): jz 0x4b9(%rip)
77cf(5): cmp $0xb,0x70(%rbx)
77d4(6): jz 0x13b(%rip)
77da(5): mov 0x20(%r12),%rdx
77df(4): mov 0x48(%rbx),%rax
77e3(4): mov $0x0,0x0(%rdx,%rax,1)
77e7(5): cmp $0x0,0x58(%rbx)
77ec(6): jz 0x3c4(%rip)
77f2(4): movzx 0x72(%rbx),%eax
77f6(2): test $0x2,%al
77f8(6): jz 0x370(%rip)
77fe(5): mov 0x48(%r12),%eax
7803(3): mov 0x44(%rbx),%edi
7806(2): test $0x4,%al
7808(6): jz 0x404(%rip)
780e(5): call 0xffffa052(%rip)
7813(5): mov 0x48(%r12),%edi
7818(5): cmp $0x2,0x70(%rbx)
781d(2): jz 0x16(%rip)
781f(3): mov 0x40(%rbx),%ecx
7822(2): test %ecx,%ecx
7824(6): jz 0x3a4(%rip)
782a(5): mov $0x7,%edx
782f(4): mov %dx,0x70(%rbx)
7833(6): and $0x2000,%edi
7839(3): mov %rbx,%rbp
783c(2): jz 0x7e(%rip)
783e(2): xor %ebp,%ebp
7840(1): pop %rbx
7841(3): mov %rbp,%rax
7844(1): pop %rbp
7845(2): pop %r12
7847(2): pop %r13
7849(2): pop %r14
784b(1): ret near (%rsp)
784c(4): nop 0x0(%rax)
7850(3): lea 0xfffffff4(%rcx),%eax
7853(4): cmp $0x1,%ax
7857(2): jbe 0x79(%rip)
7859(4): cmp $0x1,%cx
785d(6): jnz 0xffffff43(%rip)
7863(3): test $0x40,%dl
7866(6): jz 0xb2(%rip)
786c(5): mov 0x18(%r12),%rax
7871(4): cmp %rax,0x78(%rbp)
7875(6): jz 0xa3(%rip)
787b(4): test $0x2,0x72(%rbp)
787f(6): jnz 0x4e1(%rip)
7885(5): mov 0x8(%r12),%rdi
788a(3): test %rdi,%rdi
788d(2): jz 0x10(%rip)
788f(5): call 0xffffe761(%rip)
7894(9): mov $0x0,0x8(%r12)
789d(5): mov 0x48(%r12),%edi
78a2(6): mov $0x6,%r10d
78a8(5): lea 0x58(%r12),%rsi
78ad(5): mov %r10w,0x70(%rbp)
78b2(3): mov %rbp,%rdx
78b5(5): call 0xffffee8b(%rip)
78ba(1): pop %rbx
78bb(3): mov %rbp,%rax
78be(1): pop %rbp
78bf(2): pop %r12
78c1(2): pop %r13
78c3(2): pop %r14
78c5(1): ret near (%rsp)
78c6(a): nop 0x0(%rax,%rax,1)
78d0(5): mov $0x1,%edx
78d5(3): mov %rbp,%rsi
78d8(5): call 0xffffe3a8(%rip)
78dd(4): cmp $0x1,%ax
78e1(4): mov %ax,0x70(%rbp)
78e5(6): jz 0x347(%rip)
78eb(4): cmp $0xb,%ax
78ef(4): mov %rbp,(%r12)
78f3(2): jnz 0xffffffc7(%rip)
78f5(3): nop (%rax)
78f8(7): mov 0xa8(%rbp),%rax
78ff(4): cmp $0x2,%rax
7903(6): jz 0x3a5(%rip)
7909(4): cmp $0x1,%rax
790d(2): jz 0xffffffad(%rip)
790f(5): call 0xffff9de1(%rip)
7914(4): nop 0x0(%rax)
7918(5): mov 0x8(%r12),%rdi
791d(3): test %rdi,%rdi
7920(6): jz 0x218(%rip)
7926(3): test $0x10,%dh
7929(6): jnz 0x1f9(%rip)
792f(4): mov 0x30(%rbp),%rcx
7933(5): mov $0xffffffff,%edx
7938(3): mov %rbp,%rsi
793b(3): mov %r12,%rdi
793e(5): call 0xffffead2(%rip)
7943(2): test %eax,%eax
7945(6): jz 0x2bd(%rip)
794b(5): call 0xffff9db5(%rip)
7950(2): mov (%rax),%eax
7952(5): or $0x1,0x72(%rbp)
7957(3): mov %eax,0x40(%rbp)
795a(5): mov 0x8(%r12),%rbp
795f(3): test %rbp,%rbp
7962(6): jz 0x1f4(%rip)
7968(3): mov %rbp,%rax
796b(5): nop 0x0(%rax,%rax,1)
7970(4): mov 0x8(%rax),%rdx
7974(4): mov 0x30(%rdx),%rdx
7978(4): mov %rdx,0x30(%rax)
797c(4): mov 0x10(%rax),%rax
7980(3): test %rax,%rax
7983(2): jnz 0xffffffed(%rip)
7985(5): jmp 0x1d1(%rip)
798a(6): nop 0x0(%rax,%rax,1)
7990(4): cmp $0x4,%ax
7994(6): jnz 0xfffffecf(%rip)
799a(5): jmp 0xfffffee1(%rip)
799f(1): nop 
79a0(3): mov %rbp,%rsi
79a3(2): xor %edx,%edx
79a5(5): call 0xffffe2db(%rip)
79aa(4): mov %ax,0x70(%rbp)
79ae(3): mov %rbp,%rax
79b1(1): pop %rbx
79b2(1): pop %rbp
79b3(2): pop %r12
79b5(2): pop %r13
79b7(2): pop %r14
79b9(1): ret near (%rsp)
79ba(6): nop 0x0(%rax,%rax,1)
79c0(3): mov %r12,%rdi
79c3(5): call 0xffffe8cd(%rip)
79c8(2): test %eax,%eax
79ca(6): jnz 0x407(%rip)
79d0(9): test $0x102,0x48(%r12)
79d9(5): mov 0x58(%r12),%rdi
79de(6): jz 0x13a(%rip)
79e4(3): test %rdi,%rdi
79e7(2): jz 0x7(%rip)
79e9(5): call 0x1377(%rip)
79ee(4): mov 0x60(%rbx),%rdx
79f2(7): lea 0x108(%rbx),%rbp
79f9(5): mov 0x20(%r12),%rdi
79fe(3): mov %rbp,%rsi
7a01(4): mov %rdx,0x48(%rbx)
7a05(4): add $0x1,%rdx
7a09(5): call 0xffff9fb7(%rip)
7a0e(5): mov $0x2f,%esi
7a13(3): mov %rbp,%rdi
7a16(5): call 0xffff9e0a(%rip)
7a1b(3): test %rax,%rax
7a1e(2): jz 0x2d(%rip)
7a20(3): cmp %rax,%rbp
7a23(6): jz 0x1cd(%rip)
7a29(4): lea 0x1(%rax),%r13
7a2d(3): mov %r13,%rdi
7a30(5): call 0xffff9d80(%rip)
7a35(4): lea 0x1(%rax),%rdx
7a39(3): mov %rax,%r14
7a3c(3): mov %r13,%rsi
7a3f(3): mov %rbp,%rdi
7a42(5): call 0xffff9f7e(%rip)
7a47(4): mov %r14,0x60(%rbx)
7a4b(5): mov 0x20(%r12),%rax
7a50(5): mov 0x48(%r12),%edi
7a55(5): lea 0x58(%r12),%rsi
7a5a(3): mov %rbx,%rbp
7a5d(4): mov %rax,0x38(%rbx)
7a61(4): mov %rax,0x30(%rbx)
7a65(5): call 0xffffe8fb(%rip)
7a6a(4): movzx 0x70(%rbx),%eax
7a6e(4): cmp $0xb,%ax
7a72(4): mov %rbp,(%r12)
7a76(6): jz 0xfffffe82(%rip)
7a7c(4): cmp $0x1,%ax
7a80(6): jnz 0xfffffe3a(%rip)
7a86(5): cmp $0x0,0x58(%rbp)
7a8b(2): jnz 0xb(%rip)
7a8d(4): mov 0x78(%rbp),%rax
7a91(5): mov %rax,0x18(%r12)
7a96(5): mov 0x48(%r12),%edi
7a9b(5): lea 0x58(%r12),%rsi
7aa0(3): mov %rbp,%rdx
7aa3(5): call 0xffffebed(%rip)
7aa8(2): test %al,%al
7aaa(6): jnz 0xfffffe10(%rip)
7ab0(5): call 0xffff9c50(%rip)
7ab5(2): xor %ebp,%ebp
7ab7(6): mov $0xc,(%rax)
7abd(5): jmp 0xfffffdfd(%rip)
7ac2(6): nop 0x0(%rax,%rax,1)
7ac8(4): cmp $0x2,%ax
7acc(6): jz 0x2a1(%rip)
7ad2(4): mov 0x8(%rbp),%rax
7ad6(7): lea 0x108(%rbp),%rsi
7add(4): mov 0x48(%rax),%rdi
7ae1(4): mov 0x38(%rax),%rax
7ae5(5): cmp $0x2f,0xffffffff(%rax,%rdi,1)
7aea(4): lea 0xffffffff(%rdi),%rdx
7aee(4): cmove %rdx,%rdi
7af2(5): add 0x20(%r12),%rdi
7af7(3): mov $0x2f,(%rdi)
7afa(4): mov 0x60(%rbp),%rax
7afe(4): add $0x1,%rdi
7b02(4): lea 0x1(%rax),%rdx
7b06(5): call 0xffff9eba(%rip)
7b0b(4): movzx 0x70(%rbp),%eax
7b0f(5): jmp 0xffffff5f(%rip)
7b14(4): nop 0x0(%rax)
7b18(5): call 0xffff9f78(%rip)
7b1d(5): jmp 0xfffffed1(%rip)
7b22(3): and $0xef,%dh
7b25(5): mov %edx,0x48(%r12)
7b2a(5): call 0xffffe4c6(%rip)
7b2f(9): mov $0x0,0x8(%r12)
7b38(5): mov $0x3,%esi
7b3d(3): mov %r12,%rdi
7b40(5): call 0xffffecc0(%rip)
7b45(3): test %rax,%rax
7b48(5): mov %rax,0x8(%r12)
7b4d(6): jz 0xf7(%rip)
7b53(3): mov %rax,%rbp
7b56(9): mov $0x0,0x8(%r12)
7b5f(5): jmp 0xffffff73(%rip)
7b64(4): nop 0x0(%rax)
7b68(2): test $0x1,%al
7b6a(6): jnz 0xfffffca9(%rip)
7b70(4): mov 0x8(%rbx),%rsi
7b74(7): lea 0x339f(%rip),%rcx
7b7b(5): mov $0xffffffff,%edx
7b80(3): mov %r12,%rdi
7b83(5): call 0xffffe88d(%rip)
7b88(2): test %eax,%eax
7b8a(6): jz 0xfffffc89(%rip)
7b90(5): call 0xffff9b70(%rip)
7b95(5): mov 0x48(%r12),%edi
7b9a(2): mov (%rax),%eax
7b9c(6): or $0x2000,%edi
7ba2(3): mov %eax,0x40(%rbx)
7ba5(5): mov %edi,0x48(%r12)
7baa(5): jmp 0xfffffc6e(%rip)
7baf(1): nop 
7bb0(3): mov %r12,%rdi
7bb3(5): call 0xffffe6dd(%rip)
7bb8(2): test %eax,%eax
7bba(2): jnz 0xffffffd6(%rip)
7bbc(5): jmp 0xfffffc57(%rip)
7bc1(7): nop 0x0(%rax)
7bc8(5): mov $0x6,%eax
7bcd(5): lea 0x58(%r12),%rsi
7bd2(3): mov %rbx,%rdx
7bd5(4): mov %ax,0x70(%rbx)
7bd9(5): call 0xffffeb67(%rip)
7bde(5): mov 0x48(%r12),%edi
7be3(5): jmp 0xfffffc50(%rip)
7be8(8): nop 0x0(%rax,%rax,1)
7bf0(7): cmp $0x0,0x109(%rbx)
7bf7(6): jnz 0xfffffe32(%rip)
7bfd(5): jmp 0xfffffe4e(%rip)
7c02(5): mov 0x8(%r12),%rbp
7c07(5): jmp 0xffffff4f(%rip)
7c0c(3): test $0x2,%ah
7c0f(6): jz 0x19e(%rip)
7c15(2): mov %edi,%esi
7c17(5): mov $0x1,%edx
7c1c(3): mov %r12,%rdi
7c1f(5): call 0xffffe601(%rip)
7c24(3): mov 0x44(%rbx),%edi
7c27(5): jmp 0xfffffbe7(%rip)
7c2c(5): mov 0x48(%r12),%esi
7c31(4): test $0x4,%sil
7c35(6): jz 0x207(%rip)
7c3b(4): mov %rbp,(%r12)
7c3f(5): jmp 0xfffffe47(%rip)
7c44(5): mov 0x48(%r12),%edi
7c49(6): test $0x2000,%edi
7c4f(6): jnz 0xfffffbef(%rip)
7c55(4): mov 0x40(%rbp),%r9d
7c59(3): test %r9d,%r9d
7c5c(2): jz 0x14(%rip)
7c5e(5): cmp $0x4,0x70(%rbp)
7c63(2): jz 0xd(%rip)
7c65(6): mov $0x7,%r8d
7c6b(5): mov %r8w,0x70(%rbp)
7c70(5): lea 0x58(%r12),%rsi
7c75(3): mov %rbp,%rdx
7c78(5): call 0xffffeac8(%rip)
7c7d(5): jmp 0xfffffc3d(%rip)
7c82(3): mov %rbx,%rdi
7c85(2): xor %ebp,%ebp
7c87(5): call 0xffff9e09(%rip)
7c8c(5): call 0xffff9a74(%rip)
7c91(6): mov $0x0,(%rax)
7c97(8): mov $0x0,(%r12)
7c9f(5): jmp 0xfffffc1b(%rip)
7ca4(4): nop 0x0(%rax)
7ca8(4): mov 0x8(%rbp),%rbx
7cac(5): cmp $0x0,0x68(%rbx)
7cb1(2): jnz 0x13(%rip)
7cb3(5): mov 0x48(%r12),%eax
7cb8(3): and $0x18,%eax
7cbb(3): cmp $0x18,%eax
7cbe(6): jz 0x15f(%rip)
7cc4(2): xor %edx,%edx
7cc6(3): mov %rbp,%rsi
7cc9(3): mov %r12,%rdi
7ccc(5): call 0xffffdfb4(%rip)
7cd1(6): mov 0x90(%rbp),%edx
7cd7(4): mov %ax,0x70(%rbp)
7cdb(6): and $0xf000,%edx
7ce1(6): cmp $0x4000,%edx
7ce7(6): jnz 0xfffffd95(%rip)
7ced(5): cmp $0x0,0x58(%rbp)
7cf2(6): jz 0x11c(%rip)
7cf8(4): mov 0x68(%rbx),%rcx
7cfc(4): lea 0xffffffff(%rcx),%rdx
7d00(4): cmp $0xfffffffd,%rdx
7d04(2): jnbe 0x6(%rip)
7d06(4): mov %rdx,0x68(%rbx)
7d0a(4): cmp $0x1,%ax
7d0e(6): jnz 0xfffffbac(%rip)
7d14(5): jmp 0xfffffd82(%rip)
7d19(7): nop 0x0(%rax)
7d20(4): mov 0x48(%rbx),%rax
7d24(5): mov 0x20(%r12),%rdx
7d29(5): mov $0x3,%esi
7d2e(4): mov %rbx,(%r12)
7d32(3): mov %r12,%rdi
7d35(4): mov $0x0,0x0(%rdx,%rax,1)
7d39(5): call 0xffffeac7(%rip)
7d3e(3): test %rax,%rax
7d41(3): mov %rax,%rbx
7d44(2): jz 0x54(%rip)
7d46(3): mov %rbp,%rdi
7d49(3): mov %rbx,%rbp
7d4c(5): call 0xffff9d44(%rip)
7d51(5): jmp 0xfffffd81(%rip)
7d56(a): nop 0x0(%rax,%rax,1)
7d60(3): mov 0x44(%rbp),%edi
7d63(5): call 0xffff9afd(%rip)
7d68(5): jmp 0xfffffb1d(%rip)
7d6d(5): mov $0x1,%edx
7d72(3): mov %rbx,%rsi
7d75(3): mov %r12,%rdi
7d78(5): call 0xffffdf08(%rip)
7d7d(4): cmp $0x1,%ax
7d81(4): mov %ax,0x70(%rbx)
7d85(2): jz 0x5c(%rip)
7d87(5): mov $0x3,%esi
7d8c(3): mov %rbx,%rbp
7d8f(4): mov %si,0x74(%rbx)
7d93(5): jmp 0xfffffd3f(%rip)
7d98(6): test $0x20,0x49(%r12)
7d9e(6): jnz 0xfffffaa0(%rip)
7da4(4): mov 0x8(%rbp),%rbx
7da8(5): jmp 0xfffffa10(%rip)
7dad(5): call 0xffff9bd3(%rip)
7db2(2): test %eax,%eax
7db4(2): jz 0x15(%rip)
7db6(5): call 0xffff994a(%rip)
7dbb(2): mov (%rax),%eax
7dbd(3): mov %eax,0x40(%rbx)
7dc0(9): or $0x2000,0x48(%r12)
7dc9(3): mov 0x44(%rbx),%edi
7dcc(5): jmp 0xfffffa42(%rip)
7dd1(9): or $0x2000,0x48(%r12)
7dda(2): xor %ebp,%ebp
7ddc(5): jmp 0xfffffade(%rip)
7de1(5): mov 0x48(%r12),%esi
7de6(4): test $0x4,%sil
7dea(2): jnz 0xffffff9d(%rip)
7dec(5): mov 0x2c(%r12),%edi
7df1(7): lea 0x3123(%rip),%rdx
7df8(5): call 0xffffe5d8(%rip)
7dfd(2): test %eax,%eax
7dff(3): mov %eax,0x44(%rbx)
7e02(2): js 0x7e(%rip)
7e04(5): or $0x2,0x72(%rbx)
7e09(5): jmp 0xffffff7e(%rip)
7e0e(4): cmp $0x1,%ax
7e12(6): jnz 0xfffffaa8(%rip)
7e18(5): jmp 0xfffffc75(%rip)
7e1d(5): mov 0x2c(%r12),%esi
7e22(3): mov %rbx,%rdi
7e25(5): call 0xffffe38b(%rip)
7e2a(3): cmp $0x2,%eax
7e2d(6): jnz 0xfffffe97(%rip)
7e33(4): movzx 0x70(%rbp),%eax
7e37(5): jmp 0xfffffc45(%rip)
7e3c(5): mov 0x2c(%r12),%edi
7e41(7): lea 0x30d3(%rip),%rdx
7e48(5): call 0xffffe588(%rip)
7e4d(2): test %eax,%eax
7e4f(3): mov %eax,0x44(%rbp)
7e52(2): js 0x10(%rip)
7e54(5): or $0x2,0x72(%rbp)
7e59(4): movzx 0x70(%rbp),%eax
7e5d(5): jmp 0xfffffc11(%rip)
7e62(5): call 0xffff989e(%rip)
7e67(2): mov (%rax),%eax
7e69(6): mov $0x7,%r11d
7e6f(5): mov %r11w,0x70(%rbp)
7e74(3): mov %eax,0x40(%rbp)
7e77(4): mov %rbp,(%r12)
7e7b(5): jmp 0xfffffa3f(%rip)
7e80(5): call 0xffff9880(%rip)
7e85(2): mov (%rax),%eax
7e87(5): mov $0x7,%edi
7e8c(4): mov %di,0x70(%rbx)
7e90(3): mov %eax,0x40(%rbx)
7e93(5): jmp 0xfffffef4(%rip)

"rpl_fts_set" :
7ea0(3): cmp $0x4,%edx
7ea3(2): jnbe 0xd(%rip)
7ea5(4): mov %dx,0x74(%rsi)
7ea9(2): xor %eax,%eax
7eab(1): ret near (%rsp)
7eac(4): nop 0x0(%rax)
7eb0(4): sub $0x8,%rsp
7eb4(5): call 0xffff984c(%rip)
7eb9(6): mov $0x16,(%rax)
7ebf(5): mov $0x1,%eax
7ec4(4): add $0x8,%rsp
7ec8(1): ret near (%rsp)

"rpl_fts_children" :
7ed0(2): push %r14
7ed2(2): push %r13
7ed4(2): push %r12
7ed6(1): push %rbp
7ed7(3): mov %esi,%r12d
7eda(1): push %rbx
7edb(3): mov %rdi,%rbx
7ede(5): call 0xffff9822(%rip)
7ee3(7): test $0xffffefff,%r12d
7eea(3): mov %rax,%r13
7eed(6): jnz 0xeb(%rip)
7ef3(3): mov (%rbx),%rbp
7ef6(6): mov $0x0,(%rax)
7efc(4): test $0x20,0x49(%rbx)
7f00(2): jnz 0x80(%rip)
7f02(4): movzx 0x70(%rbp),%eax
7f06(4): cmp $0x9,%ax
7f0a(2): jz 0x66(%rip)
7f0c(4): cmp $0x1,%ax
7f10(2): jnz 0x70(%rip)
7f12(4): mov 0x8(%rbx),%rdi
7f16(3): test %rdi,%rdi
7f19(2): jz 0x7(%rip)
7f1b(5): call 0xffffe0d5(%rip)
7f20(7): cmp $0x1000,%r12d
7f27(6): mov $0x1,%r14d
7f2d(2): jnz 0xf(%rip)
7f2f(7): or $0x1000,0x48(%rbx)
7f36(6): mov $0x2,%r14d
7f3c(5): cmp $0x0,0x58(%rbp)
7f41(2): jnz 0x14(%rip)
7f43(4): mov 0x30(%rbp),%rax
7f47(3): cmp $0x2f,(%rax)
7f4a(2): jz 0xb(%rip)
7f4c(3): mov 0x48(%rbx),%esi
7f4f(4): test $0x4,%sil
7f53(2): jz 0x3d(%rip)
7f55(3): mov %r14d,%esi
7f58(3): mov %rbx,%rdi
7f5b(5): call 0xffffe8a5(%rip)
7f60(4): mov %rax,0x8(%rbx)
7f64(1): pop %rbx
7f65(1): pop %rbp
7f66(2): pop %r12
7f68(2): pop %r13
7f6a(2): pop %r14
7f6c(1): ret near (%rsp)
7f6d(3): nop (%rax)
7f70(1): pop %rbx
7f71(4): mov 0x10(%rbp),%rax
7f75(1): pop %rbp
7f76(2): pop %r12
7f78(2): pop %r13
7f7a(2): pop %r14
7f7c(1): ret near (%rsp)
7f7d(3): nop (%rax)
7f80(1): pop %rbx
7f81(2): xor %eax,%eax
7f83(1): pop %rbp
7f84(2): pop %r12
7f86(2): pop %r13
7f88(2): pop %r14
7f8a(1): ret near (%rsp)
7f8b(5): nop 0x0(%rax,%rax,1)
7f90(3): mov 0x2c(%rbx),%edi
7f93(7): lea 0x2f81(%rip),%rdx
7f9a(5): call 0xffffe436(%rip)
7f9f(2): test %eax,%eax
7fa1(2): mov %eax,%ebp
7fa3(2): js 0x56(%rip)
7fa5(3): mov %r14d,%esi
7fa8(3): mov %rbx,%rdi
7fab(5): call 0xffffe855(%rip)
7fb0(4): test $0x2,0x49(%rbx)
7fb4(4): mov %rax,0x8(%rbx)
7fb8(2): jnz 0x30(%rip)
7fba(2): mov %ebp,%edi
7fbc(5): call 0xffff99c4(%rip)
7fc1(2): test %eax,%eax
7fc3(2): jnz 0x45(%rip)
7fc5(2): mov %ebp,%edi
7fc7(5): call 0xffff9899(%rip)
7fcc(4): mov 0x8(%rbx),%rax
7fd0(2): jmp 0xffffff94(%rip)
7fd2(6): nop 0x0(%rax,%rax,1)
7fd8(6): mov $0x16,(%rax)
7fde(2): xor %eax,%eax
7fe0(5): jmp 0xffffff84(%rip)
7fe5(3): nop (%rax)
7fe8(5): mov $0x1,%edx
7fed(2): mov %ebp,%esi
7fef(3): mov %rbx,%rdi
7ff2(5): call 0xffffe22e(%rip)
7ff7(2): jmp 0xffffffd5(%rip)
7ff9(8): mov $0x0,0x8(%rbx)
8001(2): xor %eax,%eax
8003(5): jmp 0xffffff61(%rip)
8008(4): mov 0x0(%r13),%ebx
800c(2): mov %ebp,%edi
800e(5): call 0xffff9852(%rip)
8013(2): xor %eax,%eax
8015(4): mov %ebx,0x0(%r13)
8019(5): jmp 0xffffff4b(%rip)

"rpl_mbrtowc" :
8020(2): push %r13
8022(2): push %r12
8024(3): mov %rsi,%r13
8027(1): push %rbp
8028(1): push %rbx
8029(3): mov %rdi,%rbx
802c(3): mov %rdx,%r12
802f(4): sub $0x18,%rsp
8033(9): mov $0x28,%rax
803c(5): mov %rax,0x8(%rsp)
8041(2): xor %eax,%eax
8043(5): lea 0x4(%rsp),%rax
8048(3): test %rdi,%rdi
804b(4): cmove %rax,%rbx
804f(3): mov %rbx,%rdi
8052(5): call 0xffff97ae(%rip)
8057(4): cmp $0xfffffffd,%rax
805b(3): mov %rax,%rbp
805e(2): jbe 0x22(%rip)
8060(3): test %r12,%r12
8063(2): jz 0x1d(%rip)
8065(2): xor %edi,%edi
8067(5): call 0x1d9(%rip)
806c(2): test %al,%al
806e(2): jnz 0x12(%rip)
8070(5): movzx 0x0(%r13),%eax
8075(5): mov $0x1,%ebp
807a(2): mov %eax,(%rbx)
807c(4): nop 0x0(%rax)
8080(5): mov 0x8(%rsp),%rdx
8085(9): xor $0x28,%rdx
808e(3): mov %rbp,%rax
8091(2): jnz 0xd(%rip)
8093(4): add $0x18,%rsp
8097(1): pop %rbx
8098(1): pop %rbp
8099(2): pop %r12
809b(2): pop %r13
809d(1): ret near (%rsp)
809e(5): call 0xffff9742(%rip)

"close_stream" :
80b0(2): push %r12
80b2(1): push %rbp
80b3(3): mov %rdi,%rbp
80b6(1): push %rbx
80b7(5): call 0xffff9679(%rip)
80bc(3): mov 0x0(%rbp),%ebx
80bf(3): mov %rbp,%rdi
80c2(3): mov %rax,%r12
80c5(5): call 0x16db(%rip)
80ca(3): and $0x20,%ebx
80cd(2): test %ebx,%ebx
80cf(2): jnz 0x19(%rip)
80d1(2): test %eax,%eax
80d3(2): jz 0xc(%rip)
80d5(3): test %r12,%r12
80d8(5): mov $0xffffffff,%eax
80dd(2): jz 0x3b(%rip)
80df(1): pop %rbx
80e0(1): pop %rbp
80e1(2): pop %r12
80e3(1): ret near (%rsp)
80e4(4): nop 0x0(%rax)
80e8(2): test %eax,%eax
80ea(2): jnz 0x1e(%rip)
80ec(5): call 0xffff9614(%rip)
80f1(6): mov $0x0,(%rax)
80f7(5): mov $0xffffffff,%eax
80fc(1): pop %rbx
80fd(1): pop %rbp
80fe(2): pop %r12
8100(1): ret near (%rsp)
8101(7): nop 0x0(%rax)
8108(1): pop %rbx
8109(5): mov $0xffffffff,%eax
810e(1): pop %rbp
810f(2): pop %r12
8111(1): ret near (%rsp)
8112(6): nop 0x0(%rax,%rax,1)
8118(5): call 0xffff95e8(%rip)
811d(3): cmp $0x9,(%rax)
8120(1): pop %rbx
8121(1): pop %rbp
8122(2): pop %r12
8124(3): setnz %al
8127(3): movzx %al,%eax
812a(2): neg %eax
812c(1): ret near (%rsp)

"cycle_check_init" :
8130(8): mov $0x0,0x10(%rdi)
8138(7): mov $0x95f616,0x18(%rdi)
813f(1): ret near (%rsp)

"cycle_check" :
8140(7): cmp $0x95f616,0x18(%rdi)
8147(2): jnz 0x60(%rip)
8149(4): mov 0x10(%rdi),%rdx
814d(4): mov 0x8(%rsi),%rcx
8151(3): test %rdx,%rdx
8154(2): jz 0x1c(%rip)
8156(3): cmp %rcx,(%rdi)
8159(2): jz 0x2f(%rip)
815b(4): lea 0x1(%rdx),%r8
815f(2): xor %eax,%eax
8161(3): test %r8,%rdx
8164(4): mov %r8,0x10(%rdi)
8168(2): jz 0x38(%rip)
816a(2): REP ret near (%rsp)
816c(4): nop 0x0(%rax)
8170(8): mov $0x1,0x10(%rdi)
8178(3): mov (%rsi),%rax
817b(3): mov %rcx,(%rdi)
817e(4): mov %rax,0x8(%rdi)
8182(2): xor %eax,%eax
8184(1): ret near (%rsp)
8185(3): nop (%rax)
8188(4): mov 0x8(%rdi),%rax
818c(3): cmp %rax,(%rsi)
818f(2): jnz 0xffffffcc(%rip)
8191(5): mov $0x1,%eax
8196(1): ret near (%rsp)
8197(9): nop 0x0(%rax,%rax,1)
81a0(3): test %r8,%r8
81a3(2): jz 0xffffffee(%rip)
81a5(2): jmp 0xffffffd3(%rip)
81a7(7): lea 0x2de2(%rip),%rcx
81ae(7): lea 0x2d9b(%rip),%rsi
81b5(7): lea 0x2db8(%rip),%rdi
81bc(4): sub $0x8,%rsp
81c0(5): mov $0x3c,%edx
81c5(5): call 0xffff967b(%rip)

"open_safer" :
81d0(4): sub $0x58,%rsp
81d4(5): mov %rdx,0x30(%rsp)
81d9(2): xor %edx,%edx
81db(9): mov $0x28,%rax
81e4(5): mov %rax,0x18(%rsp)
81e9(2): xor %eax,%eax
81eb(4): test $0x40,%sil
81ef(2): jnz 0x29(%rip)
81f1(2): xor %eax,%eax
81f3(5): call 0xffff97ed(%rip)
81f8(2): mov %eax,%edi
81fa(5): call 0x1566(%rip)
81ff(5): mov 0x18(%rsp),%rcx
8204(9): xor $0x28,%rcx
820d(2): jnz 0x2c(%rip)
820f(4): add $0x58,%rsp
8213(1): ret near (%rsp)
8214(4): nop 0x0(%rax)
8218(5): lea 0x60(%rsp),%rax
821d(7): mov $0x10,(%rsp)
8224(4): mov 0x30(%rsp),%edx
8228(5): mov %rax,0x8(%rsp)
822d(5): lea 0x20(%rsp),%rax
8232(5): mov %rax,0x10(%rsp)
8237(2): jmp 0xffffffba(%rip)
8239(5): call 0xffff95a7(%rip)

"hard_locale" :
8240(4): sub $0x8,%rsp
8244(2): xor %esi,%esi
8246(5): call 0xffff975a(%rip)
824b(3): mov %rax,%rdx
824e(5): mov $0x1,%eax
8253(3): test %rdx,%rdx
8256(2): jz 0x1f(%rip)
8258(7): lea 0x2d3d(%rip),%rdi
825f(5): mov $0x2,%ecx
8264(3): mov %rdx,%rsi
8267(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8269(3): setnbe %cl
826c(3): sbb $0x0,%cl
826f(2): xor %eax,%eax
8271(2): test %cl,%cl
8273(2): jnz 0xd(%rip)
8275(4): add $0x8,%rsp
8279(1): ret near (%rsp)
827a(6): nop 0x0(%rax,%rax,1)
8280(7): lea 0x2d17(%rip),%rdi
8287(5): mov $0x6,%ecx
828c(3): mov %rdx,%rsi
828f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8291(3): setnbe %al
8294(2): sbb $0x0,%al
8296(2): test %al,%al
8298(3): setnz %al
829b(4): add $0x8,%rsp
829f(1): ret near (%rsp)

"next_prime" :
82a0(4): cmp $0xa,%rdi
82a4(5): mov $0xa,%eax
82a9(a): mov $0x-6148914691236517205,%r9
82b3(4): cmovnae %rax,%rdi
82b7(4): or $0x1,%rdi
82bb(4): cmp $0xffffffff,%rdi
82bf(2): jz 0x70(%rip)
82c1(7): nop 0x0(%rax)
82c8(3): mov %rdi,%rax
82cb(3): mov %rdi,%rcx
82ce(3): mul %rax,%r9,%rdx
82d1(3): mov %rdx,%rax
82d4(3): shr $0x1,%rax
82d7(4): lea 0x0(%rax,%rax,2),%rax
82db(3): sub %rax,%rcx
82de(4): cmp $0x9,%rdi
82e2(3): mov %rcx,%rax
82e5(2): jbe 0x3b(%rip)
82e7(3): test %rcx,%rcx
82ea(2): jz 0x3b(%rip)
82ec(6): mov $0x10,%r8d
82f2(5): mov $0x9,%esi
82f7(5): mov $0x3,%ecx
82fc(2): jmp 0xd(%rip)
82fe(2): nop 
8300(4): add $0x8,%r8
8304(3): test %rdx,%rdx
8307(2): jz 0x1e(%rip)
8309(4): add $0x2,%rcx
830d(2): xor %edx,%edx
830f(3): mov %rdi,%rax
8312(3): div %rcx,%rax
8315(3): add %r8,%rsi
8318(3): cmp %rdi,%rsi
831b(3): mov %rdx,%rax
831e(2): jb 0xffffffe2(%rip)
8320(3): test %rax,%rax
8323(2): jnz 0xc(%rip)
8325(4): add $0x2,%rdi
8329(4): cmp $0xffffffff,%rdi
832d(2): jnz 0xffffff9b(%rip)
832f(3): mov %rdi,%rax
8332(1): ret near (%rsp)

"raw_hasher" :
8340(3): mov %rdi,%rax
8343(2): xor %edx,%edx
8345(4): ror $0x3,%rax
8349(3): div %rsi,%rax
834c(3): mov %rdx,%rax
834f(1): ret near (%rsp)

"raw_comparator" :
8350(3): cmp %rsi,%rdi
8353(3): setz %al
8356(1): ret near (%rsp)

"safe_hasher" :
8360(1): push %rbx
8361(3): mov %rdi,%rbx
8364(3): mov %rsi,%rdi
8367(4): mov 0x10(%rbx),%rsi
836b(3): call 0x30(%rbx)
836e(4): cmp %rax,0x10(%rbx)
8372(2): jbe 0xb(%rip)
8374(4): shl/sal $0x4,%rax
8378(3): add (%rbx),%rax
837b(1): pop %rbx
837c(1): ret near (%rsp)
837d(5): call 0xffff9373(%rip)

"hash_find_entry" :
8390(2): push %r14
8392(2): push %r13
8394(3): mov %rdx,%r14
8397(2): push %r12
8399(1): push %rbp
839a(3): mov %rdi,%r12
839d(1): push %rbx
839e(3): mov %rsi,%rbp
83a1(3): mov %ecx,%r13d
83a4(5): call 0xffffffbc(%rip)
83a9(3): mov %rax,(%r14)
83ac(3): mov (%rax),%rsi
83af(3): test %rsi,%rsi
83b2(6): jz 0xee(%rip)
83b8(3): cmp %rbp,%rsi
83bb(3): mov %rax,%rbx
83be(6): jz 0x95(%rip)
83c4(3): mov %rbp,%rdi
83c7(5): call 0x38(%r12)
83cc(2): test %al,%al
83ce(6): jnz 0x82(%rip)
83d4(4): mov 0x8(%rbx),%rax
83d8(3): test %rax,%rax
83db(6): jz 0xc5(%rip)
83e1(3): mov (%rax),%rsi
83e4(3): cmp %rsi,%rbp
83e7(2): jnz 0x22(%rip)
83e9(2): jmp 0x33(%rip)
83eb(5): nop 0x0(%rax,%rax,1)
83f0(4): mov 0x8(%rbx),%rbx
83f4(4): mov 0x8(%rbx),%rax
83f8(3): test %rax,%rax
83fb(6): jz 0xa5(%rip)
8401(3): mov (%rax),%rsi
8404(3): cmp %rbp,%rsi
8407(2): jz 0x15(%rip)
8409(3): mov %rbp,%rdi
840c(5): call 0x38(%r12)
8411(2): test %al,%al
8413(2): jz 0xffffffdd(%rip)
8415(4): mov 0x8(%rbx),%rax
8419(3): mov (%rax),%rsi
841c(3): test %r13b,%r13b
841f(2): jz 0x1f(%rip)
8421(4): mov 0x8(%rax),%rdx
8425(4): mov %rdx,0x8(%rbx)
8429(7): mov $0x0,(%rax)
8430(5): mov 0x48(%r12),%rdx
8435(4): mov %rdx,0x8(%rax)
8439(5): mov %rax,0x48(%r12)
843e(1): pop %rbx
843f(3): mov %rsi,%rax
8442(1): pop %rbp
8443(2): pop %r12
8445(2): pop %r13
8447(2): pop %r14
8449(1): ret near (%rsp)
844a(6): nop 0x0(%rax,%rax,1)
8450(3): mov (%rbx),%rsi
8453(3): test %r13b,%r13b
8456(2): jz 0xffffffe8(%rip)
8458(4): mov 0x8(%rbx),%rax
845c(3): test %rax,%rax
845f(2): jz 0x31(%rip)
8461(4): movdqu (%rax),%xmm0
8465(3): movups %xmm0,(%rbx)
8468(7): mov $0x0,(%rax)
846f(5): mov 0x48(%r12),%rdx
8474(4): mov %rdx,0x8(%rax)
8478(5): mov %rax,0x48(%r12)
847d(3): mov %rsi,%rax
8480(1): pop %rbx
8481(1): pop %rbp
8482(2): pop %r12
8484(2): pop %r13
8486(2): pop %r14
8488(1): ret near (%rsp)
8489(7): nop 0x0(%rax)
8490(7): mov $0x0,(%rbx)
8497(2): jmp 0xffffffa7(%rip)
8499(7): nop 0x0(%rax)
84a0(2): xor %esi,%esi
84a2(1): pop %rbx
84a3(3): mov %rsi,%rax
84a6(1): pop %rbp
84a7(2): pop %r12
84a9(2): pop %r13
84ab(2): pop %r14
84ad(1): ret near (%rsp)

"check_tuning.isra.0" :
84b0(3): mov (%rdi),%rdx
84b3(7): lea 0x2b66(%rip),%rcx
84ba(5): mov $0x1,%eax
84bf(3): cmp %rcx,%rdx
84c2(2): jz 0x63(%rip)
84c4(5): movss 0x8(%rdx),%xmm0
84c9(7): ucomiss 0x2b64(%rip),%xmm0
84d0(2): jbe 0x50(%rip)
84d2(8): movss 0x2b5e(%rip),%xmm1
84da(3): ucomiss %xmm0,%xmm1
84dd(2): jbe 0x43(%rip)
84df(5): movss 0xc(%rdx),%xmm1
84e4(7): ucomiss 0x2b51(%rip),%xmm1
84eb(2): jbe 0x35(%rip)
84ed(4): movss (%rdx),%xmm1
84f1(7): ucomiss 0x2b48(%rip),%xmm1
84f8(2): jb 0x28(%rip)
84fa(8): addss 0x2b32(%rip),%xmm1
8502(5): movss 0x4(%rdx),%xmm2
8507(3): ucomiss %xmm1,%xmm2
850a(2): jbe 0x16(%rip)
850c(8): movss 0x2b30(%rip),%xmm3
8514(3): ucomiss %xmm2,%xmm3
8517(2): jb 0x9(%rip)
8519(3): ucomiss %xmm1,%xmm0
851c(2): jnbe 0x9(%rip)
851e(2): nop 
8520(3): mov %rcx,(%rdi)
8523(2): xor %eax,%eax
8525(2): REP ret near (%rsp)

"transfer_entries" :
8530(2): push %r15
8532(2): push %r14
8534(2): push %r13
8536(2): push %r12
8538(1): push %rbp
8539(1): push %rbx
853a(4): sub $0x8,%rsp
853e(3): mov (%rsi),%r12
8541(4): cmp 0x8(%rsi),%r12
8545(6): jnb 0xe3(%rip)
854b(3): mov %rdi,%rbp
854e(3): mov %rsi,%r13
8551(3): mov %edx,%r14d
8554(4): nop 0x0(%rax)
8558(4): mov (%r12),%r15
855c(3): test %r15,%r15
855f(6): jz 0xbb(%rip)
8565(5): mov 0x8(%r12),%rbx
856a(3): test %rbx,%rbx
856d(2): jnz 0x1f(%rip)
856f(2): jmp 0x5c(%rip)
8571(7): nop 0x0(%rax)
8578(4): mov 0x8(%rax),%rcx
857c(3): test %rdx,%rdx
857f(4): mov %rcx,0x8(%rbx)
8583(4): mov %rbx,0x8(%rax)
8587(3): mov %rdx,%rbx
858a(2): jz 0x3d(%rip)
858c(3): mov (%rbx),%r15
858f(3): mov %rbp,%rdi
8592(3): mov %r15,%rsi
8595(5): call 0xfffffdcb(%rip)
859a(4): cmp $0x0,(%rax)
859e(4): mov 0x8(%rbx),%rdx
85a2(2): jnz 0xffffffd6(%rip)
85a4(3): mov %r15,(%rax)
85a7(5): add $0x1,0x18(%rbp)
85ac(3): test %rdx,%rdx
85af(7): mov $0x0,(%rbx)
85b6(4): mov 0x48(%rbp),%rax
85ba(4): mov %rax,0x8(%rbx)
85be(4): mov %rbx,0x48(%rbp)
85c2(3): mov %rdx,%rbx
85c5(2): jnz 0xffffffc7(%rip)
85c7(4): mov (%r12),%r15
85cb(3): test %r14b,%r14b
85ce(9): mov $0x0,0x8(%r12)
85d7(2): jnz 0x43(%rip)
85d9(3): mov %r15,%rsi
85dc(3): mov %rbp,%rdi
85df(5): call 0xfffffd81(%rip)
85e4(4): cmp $0x0,(%rax)
85e8(3): mov %rax,%rbx
85eb(2): jz 0x55(%rip)
85ed(4): mov 0x48(%rbp),%rax
85f1(3): test %rax,%rax
85f4(2): jz 0x5c(%rip)
85f6(4): mov 0x8(%rax),%rdx
85fa(4): mov %rdx,0x48(%rbp)
85fe(4): mov 0x8(%rbx),%rdx
8602(3): mov %r15,(%rax)
8605(4): mov %rdx,0x8(%rax)
8609(4): mov %rax,0x8(%rbx)
860d(8): mov $0x0,(%r12)
8615(5): sub $0x1,0x18(%r13)
861a(4): add $0x10,%r12
861e(4): cmp %r12,0x8(%r13)
8622(6): jnbe 0xffffff36(%rip)
8628(4): add $0x8,%rsp
862c(5): mov $0x1,%eax
8631(1): pop %rbx
8632(1): pop %rbp
8633(2): pop %r12
8635(2): pop %r13
8637(2): pop %r14
8639(2): pop %r15
863b(1): ret near (%rsp)
863c(4): nop 0x0(%rax)
8640(3): mov %r15,(%rax)
8643(5): add $0x1,0x18(%rbp)
8648(2): jmp 0xffffffc5(%rip)
864a(6): nop 0x0(%rax,%rax,1)
8650(5): mov $0x10,%edi
8655(5): call 0xffff92cb(%rip)
865a(3): test %rax,%rax
865d(2): jnz 0xffffffa1(%rip)
865f(4): add $0x8,%rsp
8663(2): xor %eax,%eax
8665(1): pop %rbx
8666(1): pop %rbp
8667(2): pop %r12
8669(2): pop %r13
866b(2): pop %r14
866d(2): pop %r15
866f(1): ret near (%rsp)

"hash_get_n_buckets" :
8670(4): mov 0x10(%rdi),%rax
8674(1): ret near (%rsp)

"hash_get_n_buckets_used" :
8680(4): mov 0x18(%rdi),%rax
8684(1): ret near (%rsp)

"hash_get_n_entries" :
8690(4): mov 0x20(%rdi),%rax
8694(1): ret near (%rsp)

"hash_get_max_bucket_length" :
86a0(3): mov (%rdi),%rsi
86a3(4): mov 0x8(%rdi),%rdi
86a7(2): xor %eax,%eax
86a9(3): cmp %rdi,%rsi
86ac(2): jnb 0x3b(%rip)
86ae(2): nop 
86b0(4): cmp $0x0,(%rsi)
86b4(2): jz 0x28(%rip)
86b6(4): mov 0x8(%rsi),%rdx
86ba(5): mov $0x1,%ecx
86bf(3): test %rdx,%rdx
86c2(2): jz 0x13(%rip)
86c4(4): nop 0x0(%rax)
86c8(4): mov 0x8(%rdx),%rdx
86cc(4): add $0x1,%rcx
86d0(3): test %rdx,%rdx
86d3(2): jnz 0xfffffff5(%rip)
86d5(3): cmp %rcx,%rax
86d8(4): cmovnae %rcx,%rax
86dc(4): add $0x10,%rsi
86e0(3): cmp %rdi,%rsi
86e3(2): jb 0xffffffcd(%rip)
86e5(2): REP ret near (%rsp)
86e7(2): REP ret near (%rsp)

"hash_table_ok" :
86f0(3): mov (%rdi),%rcx
86f3(4): mov 0x8(%rdi),%r8
86f7(2): xor %edx,%edx
86f9(2): xor %esi,%esi
86fb(3): cmp %r8,%rcx
86fe(2): jnb 0x38(%rip)
8700(4): cmp $0x0,(%rcx)
8704(2): jz 0x29(%rip)
8706(4): mov 0x8(%rcx),%rax
870a(4): add $0x1,%rsi
870e(4): add $0x1,%rdx
8712(3): test %rax,%rax
8715(2): jz 0x18(%rip)
8717(9): nop 0x0(%rax,%rax,1)
8720(4): mov 0x8(%rax),%rax
8724(4): add $0x1,%rdx
8728(3): test %rax,%rax
872b(2): jnz 0xfffffff5(%rip)
872d(4): add $0x10,%rcx
8731(3): cmp %r8,%rcx
8734(2): jb 0xffffffcc(%rip)
8736(2): xor %eax,%eax
8738(4): cmp %rsi,0x18(%rdi)
873c(2): jz 0x4(%rip)
873e(2): REP ret near (%rsp)
8740(4): cmp %rdx,0x20(%rdi)
8744(3): setz %al
8747(1): ret near (%rsp)

"hash_print_statistics" :
8750(2): push %r13
8752(2): push %r12
8754(3): mov %rsi,%r12
8757(1): push %rbp
8758(1): push %rbx
8759(2): xor %ebx,%ebx
875b(4): sub $0x8,%rsp
875f(3): mov (%rdi),%rsi
8762(4): mov 0x20(%rdi),%rcx
8766(4): mov 0x10(%rdi),%rbp
876a(4): mov 0x18(%rdi),%r13
876e(4): mov 0x8(%rdi),%rdi
8772(3): cmp %rdi,%rsi
8775(2): jnb 0x40(%rip)
8777(9): nop 0x0(%rax,%rax,1)
8780(4): cmp $0x0,(%rsi)
8784(2): jz 0x28(%rip)
8786(4): mov 0x8(%rsi),%rax
878a(5): mov $0x1,%edx
878f(3): test %rax,%rax
8792(2): jz 0x13(%rip)
8794(4): nop 0x0(%rax)
8798(4): mov 0x8(%rax),%rax
879c(4): add $0x1,%rdx
87a0(3): test %rax,%rax
87a3(2): jnz 0xfffffff5(%rip)
87a5(3): cmp %rdx,%rbx
87a8(4): cmovnae %rdx,%rbx
87ac(4): add $0x10,%rsi
87b0(3): cmp %rdi,%rsi
87b3(2): jb 0xffffffcd(%rip)
87b5(7): lea 0x27e8(%rip),%rdx
87bc(5): mov $0x1,%esi
87c1(3): mov %r12,%rdi
87c4(2): xor %eax,%eax
87c6(5): call 0xffff928a(%rip)
87cb(7): lea 0x27ea(%rip),%rdx
87d2(2): xor %eax,%eax
87d4(3): mov %rbp,%rcx
87d7(5): mov $0x1,%esi
87dc(3): mov %r12,%rdi
87df(5): call 0xffff9271(%rip)
87e4(3): test %r13,%r13
87e7(2): js 0x69(%rip)
87e9(4): pxor %xmm0,%xmm0
87ed(3): test %rbp,%rbp
87f0(5): cvtsi2sd %r13,%xmm0
87f5(8): mulsd 0x285b(%rip),%xmm0
87fd(2): js 0x7c(%rip)
87ff(4): pxor %xmm1,%xmm1
8803(5): cvtsi2sd %rbp,%xmm1
8808(4): divsd %xmm1,%xmm0
880c(7): lea 0x27dd(%rip),%rdx
8813(3): mov %r13,%rcx
8816(3): mov %r12,%rdi
8819(5): mov $0x1,%esi
881e(5): mov $0x1,%eax
8823(5): call 0xffff922d(%rip)
8828(4): add $0x8,%rsp
882c(3): mov %rbx,%rcx
882f(3): mov %r12,%rdi
8832(1): pop %rbx
8833(1): pop %rbp
8834(2): pop %r12
8836(2): pop %r13
8838(7): lea 0x2795(%rip),%rdx
883f(5): mov $0x1,%esi
8844(2): xor %eax,%eax
8846(5): jmp 0xffff920a(%rip)
884b(5): nop 0x0(%rax,%rax,1)
8850(3): mov %r13,%rax
8853(3): mov %r13,%rdx
8856(4): pxor %xmm0,%xmm0
885a(3): shr $0x1,%rax
885d(3): and $0x1,%edx
8860(3): or %rdx,%rax
8863(3): test %rbp,%rbp
8866(5): cvtsi2sd %rax,%xmm0
886b(4): addsd %xmm0,%xmm0
886f(8): mulsd 0x27e1(%rip),%xmm0
8877(2): jns 0xffffff88(%rip)
8879(3): mov %rbp,%rax
887c(4): pxor %xmm1,%xmm1
8880(3): shr $0x1,%rax
8883(3): and $0x1,%ebp
8886(3): or %rbp,%rax
8889(5): cvtsi2sd %rax,%xmm1
888e(4): addsd %xmm1,%xmm1
8892(5): jmp 0xffffff76(%rip)

"hash_lookup" :
88a0(2): push %r12
88a2(1): push %rbp
88a3(3): mov %rdi,%r12
88a6(1): push %rbx
88a7(3): mov %rsi,%rbp
88aa(5): call 0xfffffab6(%rip)
88af(3): mov (%rax),%rsi
88b2(3): test %rsi,%rsi
88b5(2): jz 0x28(%rip)
88b7(3): mov %rax,%rbx
88ba(2): jmp 0x9(%rip)
88bc(4): nop 0x0(%rax)
88c0(3): mov (%rbx),%rsi
88c3(3): cmp %rbp,%rsi
88c6(2): jz 0x19(%rip)
88c8(3): mov %rbp,%rdi
88cb(5): call 0x38(%r12)
88d0(2): test %al,%al
88d2(2): jnz 0x1e(%rip)
88d4(4): mov 0x8(%rbx),%rbx
88d8(3): test %rbx,%rbx
88db(2): jnz 0xffffffe5(%rip)
88dd(2): xor %esi,%esi
88df(1): pop %rbx
88e0(3): mov %rsi,%rax
88e3(1): pop %rbp
88e4(2): pop %r12
88e6(1): ret near (%rsp)
88e7(9): nop 0x0(%rax,%rax,1)
88f0(3): mov (%rbx),%rsi
88f3(1): pop %rbx
88f4(1): pop %rbp
88f5(3): mov %rsi,%rax
88f8(2): pop %r12
88fa(1): ret near (%rsp)

"hash_get_first" :
8900(5): cmp $0x0,0x20(%rdi)
8905(2): jz 0x2e(%rip)
8907(3): mov (%rdi),%rdx
890a(4): mov 0x8(%rdi),%rcx
890e(3): cmp %rcx,%rdx
8911(2): jnb 0x27(%rip)
8913(3): mov (%rdx),%rax
8916(3): test %rax,%rax
8919(2): jnz 0x1d(%rip)
891b(5): nop 0x0(%rax,%rax,1)
8920(4): add $0x10,%rdx
8924(3): cmp %rcx,%rdx
8927(2): jnb 0x11(%rip)
8929(3): mov (%rdx),%rax
892c(3): test %rax,%rax
892f(2): jz 0xfffffff1(%rip)
8931(2): REP ret near (%rsp)
8933(2): xor %eax,%eax
8935(1): ret near (%rsp)
8936(2): REP ret near (%rsp)
8938(4): sub $0x8,%rsp
893c(5): call 0xffff8db4(%rip)

"hash_get_next" :
8950(1): push %rbp
8951(1): push %rbx
8952(3): mov %rdi,%rbp
8955(3): mov %rsi,%rbx
8958(4): sub $0x8,%rsp
895c(5): call 0xfffffa04(%rip)
8961(3): mov %rax,%rdx
8964(3): mov %rax,%rcx
8967(3): mov (%rdx),%rax
896a(4): mov 0x8(%rdx),%rdx
896e(3): cmp %rbx,%rax
8971(2): jz 0x18(%rip)
8973(5): nop 0x0(%rax,%rax,1)
8978(3): test %rdx,%rdx
897b(2): jz 0x13(%rip)
897d(3): mov (%rdx),%rax
8980(4): mov 0x8(%rdx),%rdx
8984(3): cmp %rbx,%rax
8987(2): jnz 0xfffffff1(%rip)
8989(3): test %rdx,%rdx
898c(2): jnz 0x2c(%rip)
898e(4): mov 0x8(%rbp),%rdx
8992(2): jmp 0xe(%rip)
8994(4): nop 0x0(%rax)
8998(3): mov (%rcx),%rax
899b(3): test %rax,%rax
899e(2): jnz 0xd(%rip)
89a0(4): add $0x10,%rcx
89a4(3): cmp %rcx,%rdx
89a7(2): jnbe 0xfffffff1(%rip)
89a9(2): xor %eax,%eax
89ab(4): add $0x8,%rsp
89af(1): pop %rbx
89b0(1): pop %rbp
89b1(1): ret near (%rsp)
89b2(6): nop 0x0(%rax,%rax,1)
89b8(3): mov (%rdx),%rax
89bb(4): add $0x8,%rsp
89bf(1): pop %rbx
89c0(1): pop %rbp
89c1(1): ret near (%rsp)

"hash_get_entries" :
89d0(3): mov (%rdi),%r9
89d3(4): cmp %r9,0x8(%rdi)
89d7(2): jbe 0x5b(%rip)
89d9(3): xor %r8d,%r8d
89dc(3): mov (%r9),%rcx
89df(3): test %rcx,%rcx
89e2(2): jz 0x3b(%rip)
89e4(3): cmp %r8,%rdx
89e7(2): jbe 0x40(%rip)
89e9(4): mov %rcx,0x0(%rsi,%r8,8)
89ed(4): mov 0x8(%r9),%rcx
89f1(4): lea 0x1(%r8),%rax
89f5(3): test %rcx,%rcx
89f8(2): jz 0x22(%rip)
89fa(6): nop 0x0(%rax,%rax,1)
8a00(3): cmp %rax,%rdx
8a03(2): jz 0x2d(%rip)
8a05(3): mov (%rcx),%r8
8a08(4): add $0x1,%rax
8a0c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
8a11(4): mov 0x8(%rcx),%rcx
8a15(3): test %rcx,%rcx
8a18(2): jnz 0xffffffe8(%rip)
8a1a(3): mov %rax,%r8
8a1d(4): add $0x10,%r9
8a21(4): cmp %r9,0x8(%rdi)
8a25(2): jnbe 0xffffffb7(%rip)
8a27(3): mov %r8,%rax
8a2a(1): ret near (%rsp)
8a2b(5): nop 0x0(%rax,%rax,1)
8a30(2): REP ret near (%rsp)
8a32(2): xor %eax,%eax
8a34(1): ret near (%rsp)

"hash_do_for_each" :
8a40(2): push %r15
8a42(2): push %r14
8a44(2): push %r13
8a46(2): push %r12
8a48(1): push %rbp
8a49(1): push %rbx
8a4a(4): sub $0x8,%rsp
8a4e(3): mov (%rdi),%r14
8a51(4): cmp %r14,0x8(%rdi)
8a55(2): jbe 0x51(%rip)
8a57(3): mov %rdx,%r13
8a5a(3): mov %rsi,%r12
8a5d(3): mov %rdi,%r15
8a60(2): xor %ebp,%ebp
8a62(3): mov (%r14),%rdi
8a65(3): test %rdi,%rdi
8a68(2): jz 0x22(%rip)
8a6a(3): mov %r14,%rbx
8a6d(2): jmp 0x6(%rip)
8a6f(1): nop 
8a70(3): mov (%rbx),%rdi
8a73(3): mov %r13,%rsi
8a76(3): call %r12
8a79(2): test %al,%al
8a7b(2): jz 0x19(%rip)
8a7d(4): mov 0x8(%rbx),%rbx
8a81(4): add $0x1,%rbp
8a85(3): test %rbx,%rbx
8a88(2): jnz 0xffffffe8(%rip)
8a8a(4): add $0x10,%r14
8a8e(4): cmp %r14,0x8(%r15)
8a92(2): jnbe 0xffffffd0(%rip)
8a94(4): add $0x8,%rsp
8a98(3): mov %rbp,%rax
8a9b(1): pop %rbx
8a9c(1): pop %rbp
8a9d(2): pop %r12
8a9f(2): pop %r13
8aa1(2): pop %r14
8aa3(2): pop %r15
8aa5(1): ret near (%rsp)
8aa6(2): xor %ebp,%ebp
8aa8(2): jmp 0xffffffec(%rip)

"hash_string" :
8ab0(3): movzx (%rdi),%ecx
8ab3(2): xor %edx,%edx
8ab5(2): test %cl,%cl
8ab7(2): jz 0x26(%rip)
8ab9(7): nop 0x0(%rax)
8ac0(3): mov %rdx,%rax
8ac3(4): add $0x1,%rdi
8ac7(4): shl/sal $0x5,%rax
8acb(3): sub %rdx,%rax
8ace(2): xor %edx,%edx
8ad0(3): add %rcx,%rax
8ad3(3): movzx (%rdi),%ecx
8ad6(3): div %rsi,%rax
8ad9(2): test %cl,%cl
8adb(2): jnz 0xffffffe5(%rip)
8add(3): mov %rdx,%rax
8ae0(1): ret near (%rsp)

"hash_reset_tuning" :
8af0(a): mov $0x4575657221408423936,%rax
8afa(4): mov $0x0,0x10(%rdi)
8afe(3): mov %rax,(%rdi)
8b01(a): mov $0x4590573145673223373,%rax
8b0b(4): mov %rax,0x8(%rdi)
8b0f(1): ret near (%rsp)

"hash_initialize" :
8b10(2): push %r15
8b12(2): push %r14
8b14(7): lea 0xfffff825(%rip),%rax
8b1b(2): push %r13
8b1d(2): push %r12
8b1f(3): mov %rdx,%r12
8b22(1): push %rbp
8b23(1): push %rbx
8b24(3): mov %rcx,%r13
8b27(3): mov %rdi,%rbp
8b2a(5): mov $0x50,%edi
8b2f(3): mov %rsi,%r15
8b32(4): sub $0x8,%rsp
8b36(3): test %rdx,%rdx
8b39(3): mov %r8,%r14
8b3c(4): cmove %rax,%r12
8b40(7): lea 0xfffff809(%rip),%rax
8b47(3): test %rcx,%rcx
8b4a(4): cmove %rax,%r13
8b4e(5): call 0xffff8dd2(%rip)
8b53(3): test %rax,%rax
8b56(3): mov %rax,%rbx
8b59(6): jz 0xb1(%rip)
8b5f(3): test %r15,%r15
8b62(4): lea 0x28(%rax),%rdi
8b66(6): jz 0xba(%rip)
8b6c(4): mov %r15,0x28(%rax)
8b70(5): call 0xfffff940(%rip)
8b75(2): test %al,%al
8b77(6): jz 0x89(%rip)
8b7d(5): cmp $0x0,0x10(%r15)
8b82(6): jz 0xfe(%rip)
8b88(3): mov %rbp,%rdi
8b8b(5): call 0xfffff715(%rip)
8b90(5): mov $0x8,%edx
8b95(3): mov %rax,%rbp
8b98(2): xor %ecx,%ecx
8b9a(3): mov %rdx,%rax
8b9d(3): mul %rax,%rbp,%rdx
8ba0(6): jo 0x11a(%rip)
8ba6(3): test %rax,%rax
8ba9(2): js 0x57(%rip)
8bab(3): test %rcx,%rcx
8bae(2): jnz 0x52(%rip)
8bb0(3): test %rbp,%rbp
8bb3(4): mov %rbp,0x10(%rbx)
8bb7(2): jz 0x49(%rip)
8bb9(5): mov $0x10,%esi
8bbe(3): mov %rbp,%rdi
8bc1(5): call 0xffff8cdf(%rip)
8bc6(3): test %rax,%rax
8bc9(3): mov %rax,(%rbx)
8bcc(2): jz 0x34(%rip)
8bce(4): shl/sal $0x4,%rbp
8bd2(8): mov $0x0,0x18(%rbx)
8bda(8): mov $0x0,0x20(%rbx)
8be2(3): add %rax,%rbp
8be5(4): mov %r12,0x30(%rbx)
8be9(4): mov %r13,0x38(%rbx)
8bed(4): mov %rbp,0x8(%rbx)
8bf1(4): mov %r14,0x40(%rbx)
8bf5(8): mov $0x0,0x48(%rbx)
8bfd(2): jmp 0xd(%rip)
8bff(1): nop 
8c00(3): mov %rbx,%rdi
8c03(2): xor %ebx,%ebx
8c05(5): call 0xffff8e8b(%rip)
8c0a(4): add $0x8,%rsp
8c0e(3): mov %rbx,%rax
8c11(1): pop %rbx
8c12(1): pop %rbp
8c13(2): pop %r12
8c15(2): pop %r13
8c17(2): pop %r14
8c19(2): pop %r15
8c1b(1): ret near (%rsp)
8c1c(4): nop 0x0(%rax)
8c20(7): lea 0x23f9(%rip),%rax
8c27(4): mov %rax,0x28(%rbx)
8c2b(5): call 0xfffff885(%rip)
8c30(2): test %al,%al
8c32(8): movss 0x240e(%rip),%xmm1
8c3a(2): jz 0xffffffc6(%rip)
8c3c(3): test %rbp,%rbp
8c3f(2): js 0x4c(%rip)
8c41(4): pxor %xmm0,%xmm0
8c45(5): cvtsi2ss %rbp,%xmm0
8c4a(4): divss %xmm1,%xmm0
8c4e(7): ucomiss 0x23f7(%rip),%xmm0
8c55(2): jnb 0xffffffab(%rip)
8c57(7): ucomiss 0x23f2(%rip),%xmm0
8c5e(2): jb 0x52(%rip)
8c60(8): subss 0x23e8(%rip),%xmm0
8c68(a): mov $0x-9223372036854775808,%rax
8c72(5): cvttss2si %xmm0,%rbp
8c77(3): xor %rax,%rbp
8c7a(5): jmp 0xffffff0e(%rip)
8c7f(1): nop 
8c80(3): test %rbp,%rbp
8c83(6): movss 0x8(%r15),%xmm1
8c89(2): jns 0xffffffb8(%rip)
8c8b(3): mov %rbp,%rax
8c8e(4): pxor %xmm0,%xmm0
8c92(3): shr $0x1,%rax
8c95(3): and $0x1,%ebp
8c98(3): or %rbp,%rax
8c9b(5): cvtsi2ss %rax,%xmm0
8ca0(4): addss %xmm0,%xmm0
8ca4(2): jmp 0xffffffa6(%rip)
8ca6(a): nop 0x0(%rax,%rax,1)
8cb0(5): cvttss2si %xmm0,%rbp
8cb5(5): jmp 0xfffffed3(%rip)
8cba(5): mov $0x1,%ecx
8cbf(5): jmp 0xfffffee7(%rip)

"hash_clear" :
8cd0(2): push %r12
8cd2(1): push %rbp
8cd3(3): mov %rdi,%rbp
8cd6(1): push %rbx
8cd7(3): mov (%rdi),%r12
8cda(4): cmp 0x8(%rdi),%r12
8cde(2): jnb 0x6d(%rip)
8ce0(5): cmp $0x0,(%r12)
8ce5(2): jz 0x5c(%rip)
8ce7(5): mov 0x8(%r12),%rbx
8cec(4): mov 0x40(%rbp),%rax
8cf0(3): test %rbx,%rbx
8cf3(2): jz 0x32(%rip)
8cf5(3): nop (%rax)
8cf8(3): test %rax,%rax
8cfb(2): jz 0xb(%rip)
8cfd(3): mov (%rbx),%rdi
8d00(2): call %rax
8d02(4): mov 0x40(%rbp),%rax
8d06(4): mov 0x8(%rbx),%rdx
8d0a(4): mov 0x48(%rbp),%rcx
8d0e(7): mov $0x0,(%rbx)
8d15(3): test %rdx,%rdx
8d18(4): mov %rcx,0x8(%rbx)
8d1c(4): mov %rbx,0x48(%rbp)
8d20(3): mov %rdx,%rbx
8d23(2): jnz 0xffffffd5(%rip)
8d25(3): test %rax,%rax
8d28(2): jz 0x8(%rip)
8d2a(4): mov (%r12),%rdi
8d2e(2): call %rax
8d30(8): mov $0x0,(%r12)
8d38(9): mov $0x0,0x8(%r12)
8d41(4): add $0x10,%r12
8d45(4): cmp %r12,0x8(%rbp)
8d49(2): jnbe 0xffffff97(%rip)
8d4b(8): mov $0x0,0x18(%rbp)
8d53(8): mov $0x0,0x20(%rbp)
8d5b(1): pop %rbx
8d5c(1): pop %rbp
8d5d(2): pop %r12
8d5f(1): ret near (%rsp)

"hash_free" :
8d60(2): push %r12
8d62(1): push %rbp
8d63(3): mov %rdi,%r12
8d66(1): push %rbx
8d67(5): cmp $0x0,0x40(%rdi)
8d6c(3): mov (%rdi),%rbp
8d6f(4): mov 0x8(%rdi),%rax
8d73(2): jz 0x50(%rip)
8d75(5): cmp $0x0,0x20(%rdi)
8d7a(2): jz 0x49(%rip)
8d7c(3): cmp %rax,%rbp
8d7f(2): jnb 0x7d(%rip)
8d81(7): nop 0x0(%rax)
8d88(4): mov 0x0(%rbp),%rdi
8d8c(3): test %rdi,%rdi
8d8f(2): jz 0x27(%rip)
8d91(3): mov %rbp,%rbx
8d94(2): jmp 0xf(%rip)
8d96(a): nop 0x0(%rax,%rax,1)
8da0(3): mov (%rbx),%rdi
8da3(5): call 0x40(%r12)
8da8(4): mov 0x8(%rbx),%rbx
8dac(3): test %rbx,%rbx
8daf(2): jnz 0xfffffff1(%rip)
8db1(5): mov 0x8(%r12),%rax
8db6(4): add $0x10,%rbp
8dba(3): cmp %rbp,%rax
8dbd(2): jnbe 0xffffffcb(%rip)
8dbf(4): mov (%r12),%rbp
8dc3(3): cmp %rax,%rbp
8dc6(2): jnb 0x36(%rip)
8dc8(8): nop 0x0(%rax,%rax,1)
8dd0(4): mov 0x8(%rbp),%rdi
8dd4(3): test %rdi,%rdi
8dd7(2): jz 0x1a(%rip)
8dd9(7): nop 0x0(%rax)
8de0(4): mov 0x8(%rdi),%rbx
8de4(5): call 0xffff8cac(%rip)
8de9(3): test %rbx,%rbx
8dec(3): mov %rbx,%rdi
8def(2): jnz 0xfffffff1(%rip)
8df1(4): add $0x10,%rbp
8df5(5): cmp %rbp,0x8(%r12)
8dfa(2): jnbe 0xffffffd6(%rip)
8dfc(5): mov 0x48(%r12),%rdi
8e01(3): test %rdi,%rdi
8e04(2): jz 0x1d(%rip)
8e06(a): nop 0x0(%rax,%rax,1)
8e10(4): mov 0x8(%rdi),%rbx
8e14(5): call 0xffff8c7c(%rip)
8e19(3): test %rbx,%rbx
8e1c(3): mov %rbx,%rdi
8e1f(2): jnz 0xfffffff1(%rip)
8e21(4): mov (%r12),%rdi
8e25(5): call 0xffff8c6b(%rip)
8e2a(1): pop %rbx
8e2b(3): mov %r12,%rdi
8e2e(1): pop %rbp
8e2f(2): pop %r12
8e31(5): jmp 0xffff8c5f(%rip)

"hash_rehash" :
8e40(2): push %r12
8e42(1): push %rbp
8e43(3): mov %rdi,%rbp
8e46(1): push %rbx
8e47(4): sub $0x60,%rsp
8e4b(4): mov 0x28(%rdi),%r12
8e4f(9): mov $0x28,%rax
8e58(5): mov %rax,0x58(%rsp)
8e5d(2): xor %eax,%eax
8e5f(6): cmp $0x0,0x10(%r12)
8e65(2): jnz 0x53(%rip)
8e67(3): test %rsi,%rsi
8e6a(6): js 0x17e(%rip)
8e70(4): pxor %xmm0,%xmm0
8e74(5): cvtsi2ss %rsi,%xmm0
8e79(7): divss 0x8(%r12),%xmm0
8e80(7): ucomiss 0x21c5(%rip),%xmm0
8e87(6): jnb 0x139(%rip)
8e8d(7): ucomiss 0x21bc(%rip),%xmm0
8e94(6): jb 0x17c(%rip)
8e9a(8): subss 0x21ae(%rip),%xmm0
8ea2(a): mov $0x-9223372036854775808,%rax
8eac(5): cvttss2si %xmm0,%rsi
8eb1(3): xor %rax,%rsi
8eb4(4): nop 0x0(%rax)
8eb8(3): mov %rsi,%rdi
8ebb(5): call 0xfffff3e5(%rip)
8ec0(5): mov $0x8,%edx
8ec5(3): mov %rax,%rbx
8ec8(2): xor %ecx,%ecx
8eca(3): mov %rdx,%rax
8ecd(3): mul %rax,%rbx,%rdx
8ed0(6): jo 0x19f(%rip)
8ed6(3): test %rax,%rax
8ed9(5): mov $0x1,%eax
8ede(4): cmovs %rax,%rcx
8ee2(3): test %rbx,%rbx
8ee5(6): jz 0xdb(%rip)
8eeb(3): and $0x1,%ecx
8eee(6): jnz 0xd2(%rip)
8ef4(4): cmp %rbx,0x10(%rbp)
8ef8(6): jz 0x128(%rip)
8efe(5): mov $0x10,%esi
8f03(3): mov %rbx,%rdi
8f06(5): call 0xffff899a(%rip)
8f0b(3): test %rax,%rax
8f0e(4): mov %rax,(%rsp)
8f12(6): jz 0xae(%rip)
8f18(5): mov %rbx,0x10(%rsp)
8f1d(4): shl/sal $0x4,%rbx
8f21(5): mov %r12,0x28(%rsp)
8f26(3): add %rax,%rbx
8f29(4): mov 0x30(%rbp),%rax
8f2d(3): mov %rsp,%r12
8f30(2): xor %edx,%edx
8f32(3): mov %rbp,%rsi
8f35(3): mov %r12,%rdi
8f38(5): mov %rbx,0x8(%rsp)
8f3d(9): mov $0x0,0x18(%rsp)
8f46(5): mov %rax,0x30(%rsp)
8f4b(4): mov 0x38(%rbp),%rax
8f4f(9): mov $0x0,0x20(%rsp)
8f58(5): mov %rax,0x38(%rsp)
8f5d(4): mov 0x40(%rbp),%rax
8f61(5): mov %rax,0x40(%rsp)
8f66(4): mov 0x48(%rbp),%rax
8f6a(5): mov %rax,0x48(%rsp)
8f6f(5): call 0xfffff5c1(%rip)
8f74(2): test %al,%al
8f76(2): mov %eax,%ebx
8f78(6): jnz 0xb8(%rip)
8f7e(5): mov 0x48(%rsp),%rax
8f83(5): mov $0x1,%edx
8f88(3): mov %r12,%rsi
8f8b(3): mov %rbp,%rdi
8f8e(4): mov %rax,0x48(%rbp)
8f92(5): call 0xfffff59e(%rip)
8f97(2): test %al,%al
8f99(6): jz 0xe0(%rip)
8f9f(2): xor %edx,%edx
8fa1(3): mov %r12,%rsi
8fa4(3): mov %rbp,%rdi
8fa7(5): call 0xfffff589(%rip)
8fac(2): test %al,%al
8fae(6): jz 0xcb(%rip)
8fb4(4): mov (%rsp),%rdi
8fb8(5): call 0xffff8ad8(%rip)
8fbd(2): jmp 0x5(%rip)
8fbf(1): nop 
8fc0(2): xor %ebx,%ebx
8fc2(5): mov 0x58(%rsp),%rcx
8fc7(9): xor $0x28,%rcx
8fd0(2): mov %ebx,%eax
8fd2(6): jnz 0x98(%rip)
8fd8(4): add $0x60,%rsp
8fdc(1): pop %rbx
8fdd(1): pop %rbp
8fde(2): pop %r12
8fe0(1): ret near (%rsp)
8fe1(7): nop 0x0(%rax)
8fe8(3): mov %rsi,%rax
8feb(4): pxor %xmm0,%xmm0
8fef(3): shr $0x1,%rax
8ff2(3): and $0x1,%esi
8ff5(3): or %rsi,%rax
8ff8(5): cvtsi2ss %rax,%xmm0
8ffd(4): addss %xmm0,%xmm0
9001(5): jmp 0xfffffe78(%rip)
9006(a): nop 0x0(%rax,%rax,1)
9010(5): cvttss2si %xmm0,%rsi
9015(5): jmp 0xfffffea3(%rip)
901a(6): nop 0x0(%rax,%rax,1)
9020(5): mov $0x1,%ebx
9025(2): jmp 0xffffff9d(%rip)
9027(9): nop 0x0(%rax,%rax,1)
9030(4): mov 0x0(%rbp),%rdi
9034(5): call 0xffff8a5c(%rip)
9039(4): mov (%rsp),%rax
903d(4): mov %rax,0x0(%rbp)
9041(5): mov 0x8(%rsp),%rax
9046(4): mov %rax,0x8(%rbp)
904a(5): mov 0x10(%rsp),%rax
904f(4): mov %rax,0x10(%rbp)
9053(5): mov 0x18(%rsp),%rax
9058(4): mov %rax,0x18(%rbp)
905c(5): mov 0x48(%rsp),%rax
9061(4): mov %rax,0x48(%rbp)
9065(5): jmp 0xffffff5d(%rip)
906a(5): call 0xffff8776(%rip)
906f(5): mov $0x1,%ecx
9074(5): jmp 0xfffffe62(%rip)
9079(5): call 0xffff8677(%rip)

"hash_insert_if_absent" :
9080(2): push %r13
9082(2): push %r12
9084(1): push %rbp
9085(1): push %rbx
9086(4): sub $0x18,%rsp
908a(9): mov $0x28,%rax
9093(5): mov %rax,0x8(%rsp)
9098(2): xor %eax,%eax
909a(3): test %rsi,%rsi
909d(6): jz 0x1c0(%rip)
90a3(3): mov %rsp,%r12
90a6(2): xor %ecx,%ecx
90a8(3): mov %rdx,%r13
90ab(3): mov %r12,%rdx
90ae(3): mov %rdi,%rbx
90b1(3): mov %rsi,%rbp
90b4(5): call 0xfffff2dc(%rip)
90b9(3): test %rax,%rax
90bc(3): mov %rax,%rdx
90bf(2): jz 0x31(%rip)
90c1(2): xor %eax,%eax
90c3(3): test %r13,%r13
90c6(2): jz 0x6(%rip)
90c8(4): mov %rdx,0x0(%r13)
90cc(5): mov 0x8(%rsp),%rcx
90d1(9): xor $0x28,%rcx
90da(6): jnz 0x225(%rip)
90e0(4): add $0x18,%rsp
90e4(1): pop %rbx
90e5(1): pop %rbp
90e6(2): pop %r12
90e8(2): pop %r13
90ea(1): ret near (%rsp)
90eb(5): nop 0x0(%rax,%rax,1)
90f0(4): mov 0x18(%rbx),%rax
90f4(3): test %rax,%rax
90f7(2): js 0x79(%rip)
90f9(4): pxor %xmm1,%xmm1
90fd(4): mov 0x28(%rbx),%rdx
9101(5): cvtsi2ss %rax,%xmm1
9106(4): mov 0x10(%rbx),%rax
910a(3): test %rax,%rax
910d(6): js 0x8d(%rip)
9113(4): pxor %xmm0,%xmm0
9117(5): cvtsi2ss %rax,%xmm0
911c(5): mulss 0x8(%rdx),%xmm0
9121(3): ucomiss %xmm0,%xmm1
9124(6): jnbe 0x9c(%rip)
912a(4): mov (%rsp),%r12
912e(5): cmp $0x0,(%r12)
9133(6): jz 0x135(%rip)
9139(4): mov 0x48(%rbx),%rax
913d(3): test %rax,%rax
9140(6): jz 0x140(%rip)
9146(4): mov 0x8(%rax),%rdx
914a(4): mov %rdx,0x48(%rbx)
914e(5): mov 0x8(%r12),%rdx
9153(3): mov %rbp,(%rax)
9156(4): mov %rdx,0x8(%rax)
915a(5): mov %rax,0x8(%r12)
915f(5): mov $0x1,%eax
9164(5): add $0x1,0x20(%rbx)
9169(5): jmp 0xffffff63(%rip)
916e(2): nop 
9170(3): mov %rax,%rdx
9173(4): pxor %xmm1,%xmm1
9177(3): and $0x1,%eax
917a(3): shr $0x1,%rdx
917d(3): or %rax,%rdx
9180(4): mov 0x10(%rbx),%rax
9184(5): cvtsi2ss %rdx,%xmm1
9189(4): mov 0x28(%rbx),%rdx
918d(3): test %rax,%rax
9190(4): addss %xmm1,%xmm1
9194(6): jns 0xffffff7f(%rip)
919a(3): mov %rax,%rcx
919d(4): pxor %xmm0,%xmm0
91a1(3): shr $0x1,%rcx
91a4(3): and $0x1,%eax
91a7(3): or %rax,%rcx
91aa(5): cvtsi2ss %rcx,%xmm0
91af(4): addss %xmm0,%xmm0
91b3(5): jmp 0xffffff69(%rip)
91b8(8): nop 0x0(%rax,%rax,1)
91c0(4): lea 0x28(%rbx),%rdi
91c4(5): call 0xfffff2ec(%rip)
91c9(4): mov 0x10(%rbx),%rax
91cd(4): mov 0x28(%rbx),%rdx
91d1(3): test %rax,%rax
91d4(5): movss 0x8(%rdx),%xmm2
91d9(6): js 0xc7(%rip)
91df(4): pxor %xmm0,%xmm0
91e3(5): cvtsi2ss %rax,%xmm0
91e8(4): mov 0x18(%rbx),%rax
91ec(3): test %rax,%rax
91ef(6): js 0xd1(%rip)
91f5(4): pxor %xmm1,%xmm1
91f9(5): cvtsi2ss %rax,%xmm1
91fe(3): movaps %xmm2,%xmm3
9201(4): mulss %xmm0,%xmm3
9205(3): ucomiss %xmm3,%xmm1
9208(6): jbe 0xffffff22(%rip)
920e(4): cmp $0x0,0x10(%rdx)
9212(5): mulss 0xc(%rdx),%xmm0
9217(2): jnz 0x6(%rip)
9219(4): mulss %xmm2,%xmm0
921d(7): ucomiss 0x1e28(%rip),%xmm0
9224(2): jnb 0x6f(%rip)
9226(7): ucomiss 0x1e23(%rip),%xmm0
922d(6): jnb 0xb3(%rip)
9233(5): cvttss2si %xmm0,%rsi
9238(3): mov %rbx,%rdi
923b(5): call 0xfffffc05(%rip)
9240(2): test %al,%al
9242(2): jz 0x51(%rip)
9244(2): xor %ecx,%ecx
9246(3): mov %r12,%rdx
9249(3): mov %rbp,%rsi
924c(3): mov %rbx,%rdi
924f(5): call 0xfffff141(%rip)
9254(3): test %rax,%rax
9257(6): jz 0xfffffed3(%rip)
925d(5): call 0xffff8493(%rip)
9262(6): nop 0x0(%rax,%rax,1)
9268(4): mov %rbp,(%r12)
926c(5): mov $0x1,%eax
9271(5): add $0x1,0x20(%rbx)
9276(5): add $0x1,0x18(%rbx)
927b(5): jmp 0xfffffe51(%rip)
9280(5): mov $0x10,%edi
9285(5): call 0xffff869b(%rip)
928a(3): test %rax,%rax
928d(6): jnz 0xfffffec1(%rip)
9293(5): mov $0xffffffff,%eax
9298(5): jmp 0xfffffe34(%rip)
929d(3): nop (%rax)
92a0(3): mov %rax,%rcx
92a3(4): pxor %xmm0,%xmm0
92a7(3): shr $0x1,%rcx
92aa(3): and $0x1,%eax
92ad(3): or %rax,%rcx
92b0(5): cvtsi2ss %rcx,%xmm0
92b5(4): addss %xmm0,%xmm0
92b9(5): jmp 0xffffff2f(%rip)
92be(2): nop 
92c0(3): mov %rax,%rcx
92c3(4): pxor %xmm1,%xmm1
92c7(3): shr $0x1,%rcx
92ca(3): and $0x1,%eax
92cd(3): or %rax,%rcx
92d0(5): cvtsi2ss %rcx,%xmm1
92d5(4): addss %xmm1,%xmm1
92d9(5): jmp 0xffffff25(%rip)
92de(2): nop 
92e0(8): subss 0x1d68(%rip),%xmm0
92e8(a): mov $0x-9223372036854775808,%rax
92f2(5): cvttss2si %xmm0,%rsi
92f7(3): xor %rax,%rsi
92fa(5): jmp 0xffffff3e(%rip)
92ff(5): call 0xffff84e1(%rip)

"hash_insert" :
9310(1): push %rbx
9311(3): mov %rsi,%rbx
9314(4): sub $0x10,%rsp
9318(3): mov %rsp,%rdx
931b(9): mov $0x28,%rax
9324(5): mov %rax,0x8(%rsp)
9329(2): xor %eax,%eax
932b(5): call 0xfffffd55(%rip)
9330(3): cmp $0xff,%eax
9333(2): jz 0x2d(%rip)
9335(2): test %eax,%eax
9337(2): jnz 0x6(%rip)
9339(4): mov (%rsp),%rbx
933d(5): mov 0x8(%rsp),%rcx
9342(9): xor $0x28,%rcx
934b(3): mov %rbx,%rax
934e(2): jnz 0x16(%rip)
9350(4): add $0x10,%rsp
9354(1): pop %rbx
9355(1): ret near (%rsp)
9356(a): nop 0x0(%rax,%rax,1)
9360(2): xor %ebx,%ebx
9362(2): jmp 0xffffffdb(%rip)
9364(5): call 0xffff847c(%rip)

"hash_delete" :
9370(2): push %r12
9372(1): push %rbp
9373(5): mov $0x1,%ecx
9378(1): push %rbx
9379(3): mov %rdi,%rbx
937c(4): sub $0x10,%rsp
9380(3): mov %rsp,%rdx
9383(9): mov $0x28,%rax
938c(5): mov %rax,0x8(%rsp)
9391(2): xor %eax,%eax
9393(5): call 0xffffeffd(%rip)
9398(3): test %rax,%rax
939b(3): mov %rax,%rbp
939e(2): jz 0x11(%rip)
93a0(4): mov (%rsp),%rax
93a4(5): sub $0x1,0x20(%rbx)
93a9(4): cmp $0x0,(%rax)
93ad(2): jz 0x23(%rip)
93af(5): mov 0x8(%rsp),%rcx
93b4(9): xor $0x28,%rcx
93bd(3): mov %rbp,%rax
93c0(6): jnz 0x1ae(%rip)
93c6(4): add $0x10,%rsp
93ca(1): pop %rbx
93cb(1): pop %rbp
93cc(2): pop %r12
93ce(1): ret near (%rsp)
93cf(1): nop 
93d0(4): mov 0x18(%rbx),%rax
93d4(4): sub $0x1,%rax
93d8(3): test %rax,%rax
93db(4): mov %rax,0x18(%rbx)
93df(6): js 0x101(%rip)
93e5(4): pxor %xmm0,%xmm0
93e9(5): cvtsi2ss %rax,%xmm0
93ee(4): mov 0x10(%rbx),%rax
93f2(4): mov 0x28(%rbx),%rdx
93f6(3): test %rax,%rax
93f9(6): js 0xc7(%rip)
93ff(4): pxor %xmm1,%xmm1
9403(5): cvtsi2ss %rax,%xmm1
9408(4): mulss (%rdx),%xmm1
940c(3): ucomiss %xmm0,%xmm1
940f(2): jbe 0xffffffa0(%rip)
9411(4): lea 0x28(%rbx),%rdi
9415(5): call 0xfffff09b(%rip)
941a(4): mov 0x10(%rbx),%rax
941e(4): mov 0x28(%rbx),%rdx
9422(3): test %rax,%rax
9425(6): js 0x12b(%rip)
942b(4): pxor %xmm0,%xmm0
942f(5): cvtsi2ss %rax,%xmm0
9434(4): mov 0x18(%rbx),%rax
9438(3): test %rax,%rax
943b(6): js 0xf5(%rip)
9441(4): pxor %xmm1,%xmm1
9445(5): cvtsi2ss %rax,%xmm1
944a(4): movss (%rdx),%xmm2
944e(4): mulss %xmm0,%xmm2
9452(3): ucomiss %xmm1,%xmm2
9455(6): jbe 0xffffff5a(%rip)
945b(4): cmp $0x0,0x10(%rdx)
945f(5): mulss 0x4(%rdx),%xmm0
9464(6): jz 0xbc(%rip)
946a(7): ucomiss 0x1bdf(%rip),%xmm0
9471(6): jnb 0x8f(%rip)
9477(5): cvttss2si %xmm0,%rsi
947c(3): mov %rbx,%rdi
947f(5): call 0xfffff9c1(%rip)
9484(2): test %al,%al
9486(6): jnz 0xffffff29(%rip)
948c(4): mov 0x48(%rbx),%rdi
9490(3): test %rdi,%rdi
9493(2): jz 0x16(%rip)
9495(3): nop (%rax)
9498(4): mov 0x8(%rdi),%r12
949c(5): call 0xffff85f4(%rip)
94a1(3): test %r12,%r12
94a4(3): mov %r12,%rdi
94a7(2): jnz 0xfffffff1(%rip)
94a9(8): mov $0x0,0x48(%rbx)
94b1(5): jmp 0xfffffefe(%rip)
94b6(a): nop 0x0(%rax,%rax,1)
94c0(3): mov %rax,%rcx
94c3(4): pxor %xmm1,%xmm1
94c7(3): shr $0x1,%rcx
94ca(3): and $0x1,%eax
94cd(3): or %rax,%rcx
94d0(5): cvtsi2ss %rcx,%xmm1
94d5(4): addss %xmm1,%xmm1
94d9(5): jmp 0xffffff2f(%rip)
94de(2): nop 
94e0(3): mov %rax,%rdx
94e3(4): pxor %xmm0,%xmm0
94e7(3): shr $0x1,%rdx
94ea(3): and $0x1,%eax
94ed(3): or %rax,%rdx
94f0(5): cvtsi2ss %rdx,%xmm0
94f5(4): addss %xmm0,%xmm0
94f9(5): jmp 0xfffffef5(%rip)
94fe(2): nop 
9500(8): subss 0x1b48(%rip),%xmm0
9508(a): mov $0x-9223372036854775808,%rax
9512(5): cvttss2si %xmm0,%rsi
9517(3): xor %rax,%rsi
951a(5): jmp 0xffffff62(%rip)
951f(1): nop 
9520(5): mulss 0x8(%rdx),%xmm0
9525(5): jmp 0xffffff45(%rip)
952a(6): nop 0x0(%rax,%rax,1)
9530(3): mov %rax,%rcx
9533(4): pxor %xmm1,%xmm1
9537(3): shr $0x1,%rcx
953a(3): and $0x1,%eax
953d(3): or %rax,%rcx
9540(5): cvtsi2ss %rcx,%xmm1
9545(4): addss %xmm1,%xmm1
9549(5): jmp 0xffffff01(%rip)
954e(2): nop 
9550(3): mov %rax,%rcx
9553(4): pxor %xmm0,%xmm0
9557(3): shr $0x1,%rcx
955a(3): and $0x1,%eax
955d(3): or %rax,%rcx
9560(5): cvtsi2ss %rcx,%xmm0
9565(4): addss %xmm0,%xmm0
9569(5): jmp 0xfffffecb(%rip)
956e(5): call 0xffff8272(%rip)

"i_ring_init" :
9580(4): mov $0x1,0x1c(%rdi)
9584(8): mov $0x0,0x14(%rdi)
958c(2): mov %esi,(%rdi)
958e(3): mov %esi,0x4(%rdi)
9591(3): mov %esi,0x8(%rdi)
9594(3): mov %esi,0xc(%rdi)
9597(3): mov %esi,0x10(%rdi)
959a(1): ret near (%rsp)

"i_ring_empty" :
95a0(4): movzx 0x1c(%rdi),%eax
95a4(1): ret near (%rsp)

"i_ring_push" :
95b0(4): movzx 0x1c(%rdi),%edx
95b4(3): mov 0x14(%rdi),%ecx
95b7(3): xor $0x1,%edx
95ba(3): movzx %dl,%edx
95bd(2): add %edx,%ecx
95bf(3): and $0x3,%ecx
95c2(2): mov %ecx,%eax
95c4(4): lea 0x0(%rdi,%rax,4),%r8
95c8(3): mov (%r8),%eax
95cb(3): mov %esi,(%r8)
95ce(3): mov 0x18(%rdi),%esi
95d1(3): mov %ecx,0x14(%rdi)
95d4(2): cmp %ecx,%esi
95d6(2): jnz 0xa(%rip)
95d8(2): add %esi,%edx
95da(3): and $0x3,%edx
95dd(3): mov %edx,0x18(%rdi)
95e0(4): mov $0x0,0x1c(%rdi)
95e4(1): ret near (%rsp)

"i_ring_pop" :
95f0(4): cmp $0x0,0x1c(%rdi)
95f4(2): jnz 0x31(%rip)
95f6(3): mov 0x14(%rdi),%eax
95f9(3): mov 0x10(%rdi),%esi
95fc(4): lea 0x0(%rdi,%rax,4),%rcx
9600(3): mov %rax,%rdx
9603(2): mov (%rcx),%eax
9605(2): mov %esi,(%rcx)
9607(3): cmp 0x18(%rdi),%edx
960a(2): jz 0x16(%rip)
960c(3): add $0x3,%edx
960f(3): and $0x3,%edx
9612(3): mov %edx,0x14(%rdi)
9615(1): ret near (%rsp)
9616(a): nop 0x0(%rax,%rax,1)
9620(4): mov $0x1,0x1c(%rdi)
9624(1): ret near (%rsp)
9625(4): sub $0x8,%rsp
9629(5): call 0xffff80c7(%rip)

"locale_charset" :
9630(4): sub $0x8,%rsp
9634(5): mov $0xe,%edi
9639(5): call 0xffff8317(%rip)
963e(3): test %rax,%rax
9641(2): jz 0x1f(%rip)
9643(3): cmp $0x0,(%rax)
9646(7): lea 0x1a13(%rip),%rdx
964d(4): cmove %rdx,%rax
9651(4): add $0x8,%rsp
9655(1): ret near (%rsp)
9656(a): nop 0x0(%rax,%rax,1)
9660(7): lea 0x19f9(%rip),%rax
9667(4): add $0x8,%rsp
966b(1): ret near (%rsp)

"openat_safer" :
9670(4): sub $0x58,%rsp
9674(5): mov %rcx,0x38(%rsp)
9679(2): xor %ecx,%ecx
967b(9): mov $0x28,%rax
9684(5): mov %rax,0x18(%rsp)
9689(2): xor %eax,%eax
968b(3): test $0x40,%dl
968e(2): jnz 0x2a(%rip)
9690(2): xor %eax,%eax
9692(5): call 0xffff813e(%rip)
9697(2): mov %eax,%edi
9699(5): call 0xc7(%rip)
969e(5): mov 0x18(%rsp),%rsi
96a3(9): xor $0x28,%rsi
96ac(2): jnz 0x2d(%rip)
96ae(4): add $0x58,%rsp
96b2(1): ret near (%rsp)
96b3(5): nop 0x0(%rax,%rax,1)
96b8(5): lea 0x60(%rsp),%rax
96bd(7): mov $0x18,(%rsp)
96c4(4): mov 0x38(%rsp),%ecx
96c8(5): mov %rax,0x8(%rsp)
96cd(5): lea 0x20(%rsp),%rax
96d2(5): mov %rax,0x10(%rsp)
96d7(2): jmp 0xffffffb9(%rip)
96d9(5): call 0xffff8107(%rip)

"opendirat" :
96e0(2): push %r13
96e2(2): push %r12
96e4(6): or $0x90900,%edx
96ea(1): push %rbp
96eb(1): push %rbx
96ec(2): xor %eax,%eax
96ee(3): mov %rcx,%r12
96f1(4): sub $0x8,%rsp
96f5(5): call 0xffffff7b(%rip)
96fa(2): test %eax,%eax
96fc(2): js 0x54(%rip)
96fe(2): mov %eax,%edi
9700(2): mov %eax,%ebx
9702(5): call 0xffff82fe(%rip)
9707(3): test %rax,%rax
970a(3): mov %rax,%rbp
970d(2): jz 0x1b(%rip)
970f(4): mov %ebx,(%r12)
9713(4): add $0x8,%rsp
9717(3): mov %rbp,%rax
971a(1): pop %rbx
971b(1): pop %rbp
971c(2): pop %r12
971e(2): pop %r13
9720(1): ret near (%rsp)
9721(7): nop 0x0(%rax)
9728(5): call 0xffff7fd8(%rip)
972d(3): mov (%rax),%r13d
9730(3): mov %rax,%r12
9733(2): mov %ebx,%edi
9735(5): call 0xffff812b(%rip)
973a(3): mov %rbp,%rax
973d(4): mov %r13d,(%r12)
9741(4): add $0x8,%rsp
9745(1): pop %rbx
9746(1): pop %rbp
9747(2): pop %r12
9749(2): pop %r13
974b(1): ret near (%rsp)
974c(4): nop 0x0(%rax)
9750(4): add $0x8,%rsp
9754(2): xor %ebp,%ebp
9756(1): pop %rbx
9757(3): mov %rbp,%rax
975a(1): pop %rbp
975b(2): pop %r12
975d(2): pop %r13
975f(1): ret near (%rsp)

"fd_safer" :
9760(2): push %r13
9762(2): push %r12
9764(1): push %rbp
9765(1): push %rbx
9766(2): mov %edi,%ebx
9768(4): sub $0x8,%rsp
976c(3): cmp $0x2,%edi
976f(2): jnbe 0x23(%rip)
9771(5): call 0x3cf(%rip)
9776(3): mov %eax,%r12d
9779(5): call 0xffff7f87(%rip)
977e(3): mov (%rax),%r13d
9781(3): mov %rax,%rbp
9784(2): mov %ebx,%edi
9786(5): call 0xffff80da(%rip)
978b(3): mov %r12d,%ebx
978e(4): mov %r13d,0x0(%rbp)
9792(4): add $0x8,%rsp
9796(2): mov %ebx,%eax
9798(1): pop %rbx
9799(1): pop %rbp
979a(2): pop %r12
979c(2): pop %r13
979e(1): ret near (%rsp)

"rpl_fclose" :
97a0(2): push %r12
97a2(1): push %rbp
97a3(1): push %rbx
97a4(3): mov %rdi,%rbx
97a7(5): call 0xffff8149(%rip)
97ac(2): test %eax,%eax
97ae(3): mov %rbx,%rdi
97b1(2): js 0x56(%rip)
97b3(5): call 0xffff81bd(%rip)
97b8(2): test %eax,%eax
97ba(2): jnz 0x2e(%rip)
97bc(3): mov %rbx,%rdi
97bf(5): call 0x2e1(%rip)
97c4(2): test %eax,%eax
97c6(2): jz 0x3e(%rip)
97c8(5): call 0xffff7f38(%rip)
97cd(3): mov (%rax),%r12d
97d0(3): mov %rbx,%rdi
97d3(3): mov %rax,%rbp
97d6(5): call 0xffff7f9a(%rip)
97db(3): test %r12d,%r12d
97de(2): jnz 0x32(%rip)
97e0(1): pop %rbx
97e1(1): pop %rbp
97e2(2): pop %r12
97e4(1): ret near (%rsp)
97e5(3): nop (%rax)
97e8(3): mov %rbx,%rdi
97eb(5): call 0xffff8105(%rip)
97f0(2): xor %esi,%esi
97f2(5): mov $0x1,%edx
97f7(2): mov %eax,%edi
97f9(5): call 0xffff8037(%rip)
97fe(4): cmp $0xffffffff,%rax
9802(2): jnz 0xffffffba(%rip)
9804(3): mov %rbx,%rdi
9807(1): pop %rbx
9808(1): pop %rbp
9809(2): pop %r12
980b(5): jmp 0xffff7f65(%rip)
9810(4): mov %r12d,0x0(%rbp)
9814(5): mov $0xffffffff,%eax
9819(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
9820(2): push %r12
9822(1): push %rbp
9823(2): mov %edi,%ebp
9825(1): push %rbx
9826(4): sub $0x50,%rsp
982a(9): mov $0x28,%rax
9833(5): mov %rax,0x18(%rsp)
9838(2): xor %eax,%eax
983a(5): lea 0x70(%rsp),%rax
983f(2): test %esi,%esi
9841(5): mov %rdx,0x30(%rsp)
9846(5): mov %rcx,0x38(%rsp)
984b(5): mov %r8,0x40(%rsp)
9850(5): mov %rax,0x8(%rsp)
9855(5): lea 0x20(%rsp),%rax
985a(5): mov %r9,0x48(%rsp)
985f(7): mov $0x10,(%rsp)
9866(5): mov %rax,0x10(%rsp)
986b(6): jz 0x207(%rip)
9871(6): cmp $0x406,%esi
9877(2): jnz 0x49(%rip)
9879(5): mov 0x10(%rsp),%rax
987e(7): cmp $0x0,0x2049f3(%rip)
9885(7): mov $0x18,(%rsp)
988c(4): mov 0x10(%rax),%r12d
9890(3): mov %r12d,%edx
9893(6): js 0x130(%rip)
9899(2): xor %eax,%eax
989b(5): mov $0x406,%esi
98a0(5): call 0xffff7eb0(%rip)
98a5(2): test %eax,%eax
98a7(2): mov %eax,%ebx
98a9(6): js 0x18f(%rip)
98af(a): mov $0x1,0x2049bf(%rip)
98b9(2): jmp 0x47(%rip)
98bb(5): nop 0x0(%rax,%rax,1)
98c0(3): cmp $0xb,%esi
98c3(2): jz 0x2d(%rip)
98c5(2): jnle 0x5b(%rip)
98c7(3): cmp $0x4,%esi
98ca(6): jz 0xd6(%rip)
98d0(6): jnle 0xc0(%rip)
98d6(3): cmp $0x2,%esi
98d9(6): jz 0xc7(%rip)
98df(2): jnle 0x11(%rip)
98e1(3): cmp $0x1,%esi
98e4(2): jnz 0x64(%rip)
98e6(a): nop 0x0(%rax,%rax,1)
98f0(2): mov %ebp,%edi
98f2(2): xor %eax,%eax
98f4(5): call 0xffff7e5c(%rip)
98f9(2): mov %eax,%ebx
98fb(5): nop 0x0(%rax,%rax,1)
9900(5): mov 0x18(%rsp),%rcx
9905(9): xor $0x28,%rcx
990e(2): mov %ebx,%eax
9910(6): jnz 0x15d(%rip)
9916(4): add $0x50,%rsp
991a(1): pop %rbx
991b(1): pop %rbp
991c(2): pop %r12
991e(1): ret near (%rsp)
991f(1): nop 
9920(6): cmp $0x407,%esi
9926(2): jnle 0x4a(%rip)
9928(6): cmp $0x406,%esi
992e(2): jnl 0x72(%rip)
9930(6): cmp $0x401,%esi
9936(2): jz 0xffffffba(%rip)
9938(6): cmp $0x402,%esi
993e(2): jz 0x62(%rip)
9940(6): cmp $0x400,%esi
9946(2): jz 0x5a(%rip)
9948(3): mov (%rsp),%eax
994b(3): cmp $0x2f,%eax
994e(6): jnbe 0x13c(%rip)
9954(5): add 0x10(%rsp),%rax
9959(3): mov (%rax),%rdx
995c(2): mov %ebp,%edi
995e(2): xor %eax,%eax
9960(5): call 0xffff7df0(%rip)
9965(2): mov %eax,%ebx
9967(2): jmp 0xffffff99(%rip)
9969(7): nop 0x0(%rax)
9970(6): cmp $0x409,%esi
9976(2): jz 0x2a(%rip)
9978(6): jl 0xffffff78(%rip)
997e(6): cmp $0x40a,%esi
9984(2): jnz 0xffffffc4(%rip)
9986(5): jmp 0xffffff6a(%rip)
998b(5): nop 0x0(%rax,%rax,1)
9990(3): cmp $0x9,%esi
9993(6): jz 0xffffff5d(%rip)
9999(2): jnle 0x7(%rip)
999b(3): cmp $0x8,%esi
999e(2): jnz 0xffffffaa(%rip)
99a0(3): mov (%rsp),%eax
99a3(3): cmp $0x2f,%eax
99a6(6): jnbe 0xee(%rip)
99ac(5): add 0x10(%rsp),%rax
99b1(2): mov (%rax),%edx
99b3(2): mov %ebp,%edi
99b5(2): xor %eax,%eax
99b7(5): call 0xffff7d99(%rip)
99bc(2): mov %eax,%ebx
99be(5): jmp 0xffffff42(%rip)
99c3(2): xor %esi,%esi
99c5(2): xor %eax,%eax
99c7(5): call 0xffff7d89(%rip)
99cc(2): test %eax,%eax
99ce(2): mov %eax,%ebx
99d0(6): js 0xffffff30(%rip)
99d6(7): cmp $0xff,0x20489b(%rip)
99dd(6): jnz 0xffffff23(%rip)
99e3(2): xor %eax,%eax
99e5(5): mov $0x1,%esi
99ea(2): mov %ebx,%edi
99ec(5): call 0xffff7d64(%rip)
99f1(2): test %eax,%eax
99f3(2): js 0x1e(%rip)
99f5(3): or $0x1,%eax
99f8(5): mov $0x2,%esi
99fd(2): mov %ebx,%edi
99ff(2): mov %eax,%edx
9a01(2): xor %eax,%eax
9a03(5): call 0xffff7d4d(%rip)
9a08(3): cmp $0xff,%eax
9a0b(6): jnz 0xfffffef5(%rip)
9a11(5): call 0xffff7cef(%rip)
9a16(3): mov (%rax),%r12d
9a19(3): mov %rax,%rbp
9a1c(2): mov %ebx,%edi
9a1e(5): call 0xffff7e42(%rip)
9a23(5): mov $0xffffffff,%ebx
9a28(4): mov %r12d,0x0(%rbp)
9a2c(5): jmp 0xfffffed4(%rip)
9a31(7): nop 0x0(%rax)
9a38(5): call 0xffff7cc8(%rip)
9a3d(3): cmp $0x16,(%rax)
9a40(6): jnz 0xfffffe6f(%rip)
9a46(2): xor %esi,%esi
9a48(2): xor %eax,%eax
9a4a(3): mov %r12d,%edx
9a4d(2): mov %ebp,%edi
9a4f(5): call 0xffff7d01(%rip)
9a54(2): test %eax,%eax
9a56(2): mov %eax,%ebx
9a58(6): js 0xfffffea8(%rip)
9a5e(a): mov $0xffffffff,0x204810(%rip)
9a68(5): jmp 0xffffff7b(%rip)
9a6d(5): call 0xffff7d73(%rip)
9a72(5): mov 0x10(%rsp),%rax
9a77(2): xor %esi,%esi
9a79(3): mov 0x10(%rax),%edx
9a7c(2): xor %eax,%eax
9a7e(5): call 0xffff7cd2(%rip)
9a83(2): mov %eax,%ebx
9a85(5): jmp 0xfffffe7b(%rip)
9a8a(5): mov 0x8(%rsp),%rax
9a8f(5): jmp 0xfffffeca(%rip)
9a94(5): mov 0x8(%rsp),%rax
9a99(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
9aa0(3): test %rdi,%rdi
9aa3(1): push %rbx
9aa4(3): mov %rdi,%rbx
9aa7(2): jz 0x13(%rip)
9aa9(5): call 0xffff7ec7(%rip)
9aae(2): test %eax,%eax
9ab0(2): jz 0xa(%rip)
9ab2(6): test $0x100,(%rbx)
9ab8(2): jnz 0x10(%rip)
9aba(3): mov %rbx,%rdi
9abd(1): pop %rbx
9abe(5): jmp 0xffff7e72(%rip)
9ac3(5): nop 0x0(%rax,%rax,1)
9ac8(3): mov %rbx,%rdi
9acb(5): mov $0x1,%edx
9ad0(2): xor %esi,%esi
9ad2(5): call 0xe(%rip)
9ad7(3): mov %rbx,%rdi
9ada(1): pop %rbx
9adb(5): jmp 0xffff7e55(%rip)

"rpl_fseeko" :
9ae0(4): mov 0x8(%rdi),%rax
9ae4(4): cmp %rax,0x10(%rdi)
9ae8(2): jz 0x8(%rip)
9aea(5): jmp 0xffff7f06(%rip)
9aef(1): nop 
9af0(4): mov 0x20(%rdi),%rax
9af4(4): cmp %rax,0x28(%rdi)
9af8(2): jnz 0xfffffff2(%rip)
9afa(5): cmp $0x0,0x48(%rdi)
9aff(2): jnz 0xffffffeb(%rip)
9b01(2): push %r12
9b03(1): push %rbp
9b04(3): mov %edx,%r12d
9b07(1): push %rbx
9b08(3): mov %rsi,%rbp
9b0b(3): mov %rdi,%rbx
9b0e(5): call 0xffff7de2(%rip)
9b13(3): mov %r12d,%edx
9b16(3): mov %rbp,%rsi
9b19(2): mov %eax,%edi
9b1b(5): call 0xffff7d15(%rip)
9b20(4): cmp $0xffffffff,%rax
9b24(2): jz 0xe(%rip)
9b26(3): and $0xef,(%rbx)
9b29(7): mov %rax,0x90(%rbx)
9b30(2): xor %eax,%eax
9b32(1): pop %rbx
9b33(1): pop %rbp
9b34(2): pop %r12
9b36(1): ret near (%rsp)

"dup_safer" :
9b40(5): mov $0x3,%edx
9b45(2): xor %esi,%esi
9b47(2): xor %eax,%eax
9b49(5): jmp 0xfffffcd7(%rip)

"__libc_csu_init" :
9b50(2): push %r15
9b52(2): push %r14
9b54(3): mov %rdx,%r15
9b57(2): push %r13
9b59(2): push %r12
9b5b(7): lea 0x203ece(%rip),%r12
9b62(1): push %rbp
9b63(7): lea 0x203ece(%rip),%rbp
9b6a(1): push %rbx
9b6b(3): mov %edi,%r13d
9b6e(3): mov %rsi,%r14
9b71(3): sub %r12,%rbp
9b74(4): sub $0x8,%rsp
9b78(4): sar $0x3,%rbp
9b7c(5): call 0xffff7b4c(%rip)
9b81(3): test %rbp,%rbp
9b84(2): jz 0x22(%rip)
9b86(2): xor %ebx,%ebx
9b88(8): nop 0x0(%rax,%rax,1)
9b90(3): mov %r15,%rdx
9b93(3): mov %r14,%rsi
9b96(3): mov %r13d,%edi
9b99(4): call 0x0(%r12,%rbx,8)
9b9d(4): add $0x1,%rbx
9ba1(3): cmp %rbx,%rbp
9ba4(2): jnz 0xffffffec(%rip)
9ba6(4): add $0x8,%rsp
9baa(1): pop %rbx
9bab(1): pop %rbp
9bac(2): pop %r12
9bae(2): pop %r13
9bb0(2): pop %r14
9bb2(2): pop %r15
9bb4(1): ret near (%rsp)

"atexit" :
9bd0(7): mov 0x204431(%rip),%rdx
9bd7(2): xor %esi,%esi
9bd9(5): jmp 0xffff7e47(%rip)

"_fini" :
9be0(4): sub $0x8,%rsp
9be4(4): add $0x8,%rsp
9be8(1): ret near (%rsp)

