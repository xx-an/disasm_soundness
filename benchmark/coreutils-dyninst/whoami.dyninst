
"free@plt" :
1260(6): jmp 0x205c1a(%rip)
1266(5): push $0x0

"abort@plt" :
1270(6): jmp 0x205c12(%rip)
1276(5): push $0x1

"__errno_location@plt" :
1280(6): jmp 0x205c0a(%rip)
1286(5): push $0x2

"strncmp@plt" :
1290(6): jmp 0x205c02(%rip)
1296(5): push $0x3

"_exit@plt" :
12a0(6): jmp 0x205bfa(%rip)
12a6(5): push $0x4

"__fpending@plt" :
12b0(6): jmp 0x205bf2(%rip)
12b6(5): push $0x5

"puts@plt" :
12c0(6): jmp 0x205bea(%rip)
12c6(5): push $0x6

"textdomain@plt" :
12d0(6): jmp 0x205be2(%rip)
12d6(5): push $0x7

"fclose@plt" :
12e0(6): jmp 0x205bda(%rip)
12e6(5): push $0x8

"getpwuid@plt" :
12f0(6): jmp 0x205bd2(%rip)
12f6(5): push $0x9

"bindtextdomain@plt" :
1300(6): jmp 0x205bca(%rip)
1306(5): push $0xa

"dcgettext@plt" :
1310(6): jmp 0x205bc2(%rip)
1316(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1320(6): jmp 0x205bba(%rip)
1326(5): push $0xc

"strlen@plt" :
1330(6): jmp 0x205bb2(%rip)
1336(5): push $0xd

"__stack_chk_fail@plt" :
1340(6): jmp 0x205baa(%rip)
1346(5): push $0xe

"getopt_long@plt" :
1350(6): jmp 0x205ba2(%rip)
1356(5): push $0xf

"mbrtowc@plt" :
1360(6): jmp 0x205b9a(%rip)
1366(5): push $0x10

"strrchr@plt" :
1370(6): jmp 0x205b92(%rip)
1376(5): push $0x11

"lseek@plt" :
1380(6): jmp 0x205b8a(%rip)
1386(5): push $0x12

"memset@plt" :
1390(6): jmp 0x205b82(%rip)
1396(5): push $0x13

"geteuid@plt" :
13a0(6): jmp 0x205b7a(%rip)
13a6(5): push $0x14

"memcmp@plt" :
13b0(6): jmp 0x205b72(%rip)
13b6(5): push $0x15

"fputs_unlocked@plt" :
13c0(6): jmp 0x205b6a(%rip)
13c6(5): push $0x16

"calloc@plt" :
13d0(6): jmp 0x205b62(%rip)
13d6(5): push $0x17

"memcpy@plt" :
13e0(6): jmp 0x205b5a(%rip)
13e6(5): push $0x18

"fileno@plt" :
13f0(6): jmp 0x205b52(%rip)
13f6(5): push $0x19

"malloc@plt" :
1400(6): jmp 0x205b4a(%rip)
1406(5): push $0x1a

"fflush@plt" :
1410(6): jmp 0x205b42(%rip)
1416(5): push $0x1b

"nl_langinfo@plt" :
1420(6): jmp 0x205b3a(%rip)
1426(5): push $0x1c

"__freading@plt" :
1430(6): jmp 0x205b32(%rip)
1436(5): push $0x1d

"realloc@plt" :
1440(6): jmp 0x205b2a(%rip)
1446(5): push $0x1e

"setlocale@plt" :
1450(6): jmp 0x205b22(%rip)
1456(5): push $0x1f

"__printf_chk@plt" :
1460(6): jmp 0x205b1a(%rip)
1466(5): push $0x20

"error@plt" :
1470(6): jmp 0x205b12(%rip)
1476(5): push $0x21

"fseeko@plt" :
1480(6): jmp 0x205b0a(%rip)
1486(5): push $0x22

"__cxa_atexit@plt" :
1490(6): jmp 0x205b02(%rip)
1496(5): push $0x23

"exit@plt" :
14a0(6): jmp 0x205afa(%rip)
14a6(5): push $0x24

"fwrite@plt" :
14b0(6): jmp 0x205af2(%rip)
14b6(5): push $0x25

"__fprintf_chk@plt" :
14c0(6): jmp 0x205aea(%rip)
14c6(5): push $0x26

"mbsinit@plt" :
14d0(6): jmp 0x205ae2(%rip)
14d6(5): push $0x27

"iswprint@plt" :
14e0(6): jmp 0x205ada(%rip)
14e6(5): push $0x28

"__ctype_b_loc@plt" :
14f0(6): jmp 0x205ad2(%rip)
14f6(5): push $0x29

".plt.got" :
1500(6): jmp 0x205aea(%rip)
1506(2): nop 

"_init" :
1230(4): sub $0x8,%rsp
1234(7): mov 0x205da5(%rip),%rax
123b(3): test %rax,%rax
123e(2): jz 0x4(%rip)
1240(2): call %rax
1242(4): add $0x8,%rsp
1246(1): ret near (%rsp)

"main" :
1510(1): push %rbp
1511(1): push %rbx
1512(2): mov %edi,%ebp
1514(3): mov %rsi,%rbx
1517(4): sub $0x8,%rsp
151b(3): mov (%rsi),%rdi
151e(5): call 0x8e2(%rip)
1523(7): lea 0x3257(%rip),%rsi
152a(5): mov $0x6,%edi
152f(5): call 0xffffff21(%rip)
1534(7): lea 0x32ea(%rip),%rsi
153b(7): lea 0x32ba(%rip),%rdi
1542(5): call 0xfffffdbe(%rip)
1547(7): lea 0x32ae(%rip),%rdi
154e(5): call 0xfffffd82(%rip)
1553(7): lea 0x576(%rip),%rdi
155a(5): call 0x31d6(%rip)
155f(7): lea 0x32d7(%rip),%rax
1566(4): sub $0x8,%rsp
156a(7): mov 0x205a9f(%rip),%r8
1571(2): push $0x0
1573(7): lea 0x327e(%rip),%rcx
157a(7): lea 0x31e3(%rip),%rdx
1581(1): push %rax
1582(7): lea 0x1d7(%rip),%rax
1589(6): mov $0x1,%r9d
158f(3): mov %rbx,%rsi
1592(2): mov %ebp,%edi
1594(1): push %rax
1595(2): xor %eax,%eax
1597(5): call 0x729(%rip)
159c(7): movsxd 0x205aed(%rip),%rax
15a3(4): add $0x20,%rsp
15a7(2): cmp %ebp,%eax
15a9(2): jnz 0x66(%rip)
15ab(5): call 0xfffffcd5(%rip)
15b0(6): mov $0x0,(%rax)
15b6(3): mov %rax,%rbp
15b9(5): call 0xfffffde7(%rip)
15be(3): cmp $0xff,%eax
15c1(2): mov %eax,%ebx
15c3(2): jnz 0x8(%rip)
15c5(4): cmp $0x0,0x0(%rbp)
15c9(2): jnz 0x1f(%rip)
15cb(2): mov %ebx,%edi
15cd(5): call 0xfffffd23(%rip)
15d2(3): test %rax,%rax
15d5(2): jz 0x13(%rip)
15d7(3): mov (%rax),%rdi
15da(5): call 0xfffffce6(%rip)
15df(4): add $0x8,%rsp
15e3(2): xor %eax,%eax
15e5(1): pop %rbx
15e6(1): pop %rbp
15e7(1): ret near (%rsp)
15e8(7): lea 0x3401(%rip),%rsi
15ef(5): mov $0x5,%edx
15f4(2): xor %edi,%edi
15f6(5): call 0xfffffd1a(%rip)
15fb(3): mov 0x0(%rbp),%esi
15fe(3): mov %rax,%rdx
1601(2): mov %ebx,%ecx
1603(5): mov $0x1,%edi
1608(2): xor %eax,%eax
160a(5): call 0xfffffe66(%rip)
160f(4): mov 0x0(%rbx,%rax,8),%rdi
1613(5): call 0x24fd(%rip)
1618(7): lea 0x322f(%rip),%rsi
161f(3): mov %rax,%rbx
1622(5): mov $0x5,%edx
1627(2): xor %edi,%edi
1629(5): call 0xfffffce7(%rip)
162e(2): xor %edi,%edi
1630(3): mov %rax,%rdx
1633(3): mov %rbx,%rcx
1636(2): xor %esi,%esi
1638(2): xor %eax,%eax
163a(5): call 0xfffffe36(%rip)
163f(5): mov $0x1,%edi
1644(5): call 0x11c(%rip)

"_start" :
1650(2): xor %ebp,%ebp
1652(3): mov %rdx,%r9
1655(1): pop %rsi
1656(3): mov %rsp,%rdx
1659(4): and $0xfffffff0,%rsp
165d(1): push %rax
165e(1): push %rsp
165f(7): lea 0x30ba(%rip),%r8
1666(7): lea 0x3043(%rip),%rcx
166d(7): lea 0xfffffe9c(%rip),%rdi
1674(6): call 0x20595e(%rip)
167a(1): hlt 

"deregister_tm_clones" :
1680(7): lea 0x2059f9(%rip),%rdi
1687(1): push %rbp
1688(7): lea 0x2059f1(%rip),%rax
168f(3): cmp %rdi,%rax
1692(3): mov %rsp,%rbp
1695(2): jz 0x1b(%rip)
1697(7): mov 0x205932(%rip),%rax
169e(3): test %rax,%rax
16a1(2): jz 0xf(%rip)
16a3(1): pop %rbp
16a4(2): jmp %rax
16a6(a): nop 0x0(%rax,%rax,1)
16b0(1): pop %rbp
16b1(1): ret near (%rsp)

"register_tm_clones" :
16c0(7): lea 0x2059b9(%rip),%rdi
16c7(7): lea 0x2059b2(%rip),%rsi
16ce(1): push %rbp
16cf(3): sub %rdi,%rsi
16d2(3): mov %rsp,%rbp
16d5(4): sar $0x3,%rsi
16d9(3): mov %rsi,%rax
16dc(4): shr $0x3f,%rax
16e0(3): add %rax,%rsi
16e3(3): sar $0x1,%rsi
16e6(2): jz 0x1a(%rip)
16e8(7): mov 0x2058f9(%rip),%rax
16ef(3): test %rax,%rax
16f2(2): jz 0xe(%rip)
16f4(1): pop %rbp
16f5(2): jmp %rax
16f7(9): nop 0x0(%rax,%rax,1)
1700(1): pop %rbp
1701(1): ret near (%rsp)

"__do_global_dtors_aux" :
1710(7): cmp $0x0,0x2059b1(%rip)
1717(2): jnz 0x31(%rip)
1719(8): cmp $0x0,0x2058cf(%rip)
1721(1): push %rbp
1722(3): mov %rsp,%rbp
1725(2): jz 0xe(%rip)
1727(7): mov 0x2058da(%rip),%rdi
172e(5): call 0xfffffdd2(%rip)
1733(5): call 0xffffff4d(%rip)
1738(7): mov $0x1,0x205989(%rip)
173f(1): pop %rbp
1740(1): ret near (%rsp)
1741(7): nop 0x0(%rax)
1748(2): REP ret near (%rsp)

"frame_dummy" :
1750(1): push %rbp
1751(3): mov %rsp,%rbp
1754(1): pop %rbp
1755(5): jmp 0xffffff6b(%rip)

"usage" :
1760(2): push %r13
1762(2): push %r12
1764(5): mov $0x5,%edx
1769(1): push %rbp
176a(1): push %rbx
176b(2): mov %edi,%ebp
176d(7): sub $0x88,%rsp
1774(7): mov 0x205965(%rip),%rbx
177b(9): mov $0x28,%rax
1784(5): mov %rax,0x78(%rsp)
1789(2): xor %eax,%eax
178b(2): test %edi,%edi
178d(2): jz 0x30(%rip)
178f(7): lea 0x30ca(%rip),%rsi
1796(2): xor %edi,%edi
1798(5): call 0xfffffb78(%rip)
179d(7): mov 0x20591c(%rip),%rdi
17a4(3): mov %rax,%rdx
17a7(3): mov %rbx,%rcx
17aa(5): mov $0x1,%esi
17af(2): xor %eax,%eax
17b1(5): call 0xfffffd0f(%rip)
17b6(2): mov %ebp,%edi
17b8(5): call 0xfffffce8(%rip)
17bd(7): lea 0x2fa7(%rip),%rsi
17c4(2): xor %edi,%edi
17c6(5): call 0xfffffb4a(%rip)
17cb(3): mov %rbx,%rdx
17ce(3): mov %rax,%rsi
17d1(5): mov $0x1,%edi
17d6(2): xor %eax,%eax
17d8(5): call 0xfffffc88(%rip)
17dd(7): mov 0x2058a4(%rip),%rbx
17e4(7): lea 0x309d(%rip),%rsi
17eb(5): mov $0x5,%edx
17f0(2): xor %edi,%edi
17f2(5): call 0xfffffb1e(%rip)
17f7(3): mov %rbx,%rsi
17fa(3): mov %rax,%rdi
17fd(5): call 0xfffffbc3(%rip)
1802(7): mov 0x20587f(%rip),%rbx
1809(7): lea 0x30d0(%rip),%rsi
1810(5): mov $0x5,%edx
1815(2): xor %edi,%edi
1817(5): call 0xfffffaf9(%rip)
181c(3): mov %rbx,%rsi
181f(3): mov %rax,%rdi
1822(5): call 0xfffffb9e(%rip)
1827(7): mov 0x20585a(%rip),%rbx
182e(7): lea 0x30db(%rip),%rsi
1835(5): mov $0x5,%edx
183a(2): xor %edi,%edi
183c(5): call 0xfffffad4(%rip)
1841(3): mov %rbx,%rsi
1844(3): mov %rax,%rdi
1847(7): lea 0x2f16(%rip),%rbx
184e(5): call 0xfffffb72(%rip)
1853(7): lea 0x2f28(%rip),%rax
185a(7): lea 0x2f62(%rip),%rcx
1861(9): mov $0x0,0x60(%rsp)
186a(9): mov $0x0,0x68(%rsp)
1873(3): mov %rsp,%rdx
1876(4): mov %rax,(%rsp)
187a(7): lea 0x2f03(%rip),%rax
1881(5): mov %rcx,0x30(%rsp)
1886(7): lea 0x2f40(%rip),%rcx
188d(5): mov %rax,0x8(%rsp)
1892(7): lea 0x2f63(%rip),%rax
1899(5): mov %rcx,0x40(%rsp)
189e(7): lea 0x2f32(%rip),%rcx
18a5(5): mov %rax,0x10(%rsp)
18aa(7): lea 0x2ee3(%rip),%rax
18b1(5): mov %rcx,0x50(%rsp)
18b6(5): mov %rax,0x18(%rsp)
18bb(7): lea 0x2ee8(%rip),%rax
18c2(5): mov %rax,0x20(%rsp)
18c7(7): lea 0x2ee6(%rip),%rax
18ce(5): mov %rax,0x28(%rsp)
18d3(5): mov %rax,0x38(%rsp)
18d8(5): mov %rax,0x48(%rsp)
18dd(5): mov %rax,0x58(%rsp)
18e2(6): nop 0x0(%rax,%rax,1)
18e8(4): add $0x10,%rdx
18ec(3): mov (%rdx),%rdi
18ef(3): test %rdi,%rdi
18f2(2): jz 0x15(%rip)
18f4(5): mov $0x7,%ecx
18f9(3): mov %rbx,%rsi
18fc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
18fe(3): setnbe %al
1901(2): sbb $0x0,%al
1903(2): test %al,%al
1905(2): jnz 0xffffffe3(%rip)
1907(4): mov 0x8(%rdx),%r12
190b(2): xor %edi,%edi
190d(5): mov $0x5,%edx
1912(7): lea 0x2ec8(%rip),%rsi
1919(3): test %r12,%r12
191c(6): jz 0xc7(%rip)
1922(5): call 0xfffff9ee(%rip)
1927(7): lea 0x301a(%rip),%rcx
192e(7): lea 0x2ec3(%rip),%rdx
1935(3): mov %rax,%rsi
1938(5): mov $0x1,%edi
193d(2): xor %eax,%eax
193f(5): call 0xfffffb21(%rip)
1944(2): xor %esi,%esi
1946(5): mov $0x5,%edi
194b(5): call 0xfffffb05(%rip)
1950(3): test %rax,%rax
1953(2): jz 0x1e(%rip)
1955(7): lea 0x2eaa(%rip),%rsi
195c(5): mov $0x3,%edx
1961(3): mov %rax,%rdi
1964(5): call 0xfffff92c(%rip)
1969(2): test %eax,%eax
196b(6): jnz 0x10d(%rip)
1971(7): lea 0x2e92(%rip),%rsi
1978(2): xor %edi,%edi
197a(5): mov $0x5,%edx
197f(5): call 0xfffff991(%rip)
1984(7): lea 0x2dd9(%rip),%rcx
198b(7): lea 0x2fb6(%rip),%rdx
1992(3): mov %rax,%rsi
1995(5): mov $0x1,%edi
199a(2): xor %eax,%eax
199c(5): call 0xfffffac4(%rip)
19a1(3): cmp %rbx,%r12
19a4(7): lea 0x2df3(%rip),%rcx
19ab(7): lea 0x2dcf(%rip),%rbx
19b2(4): cmove %rcx,%rbx
19b6(7): lea 0x2ffb(%rip),%rsi
19bd(2): xor %edi,%edi
19bf(5): mov $0x5,%edx
19c4(5): call 0xfffff94c(%rip)
19c9(3): mov %rbx,%rcx
19cc(3): mov %rax,%rsi
19cf(3): mov %r12,%rdx
19d2(5): mov $0x1,%edi
19d7(2): xor %eax,%eax
19d9(5): call 0xfffffa87(%rip)
19de(5): jmp 0xfffffdd8(%rip)
19e3(5): call 0xfffff92d(%rip)
19e8(7): lea 0x2f59(%rip),%rcx
19ef(7): lea 0x2e02(%rip),%rdx
19f6(3): mov %rax,%rsi
19f9(5): mov $0x1,%edi
19fe(2): xor %eax,%eax
1a00(5): call 0xfffffa60(%rip)
1a05(2): xor %esi,%esi
1a07(5): mov $0x5,%edi
1a0c(5): call 0xfffffa44(%rip)
1a11(3): test %rax,%rax
1a14(2): jz 0x1a(%rip)
1a16(7): lea 0x2de9(%rip),%rsi
1a1d(5): mov $0x3,%edx
1a22(3): mov %rax,%rdi
1a25(5): call 0xfffff86b(%rip)
1a2a(2): test %eax,%eax
1a2c(2): jnz 0x45(%rip)
1a2e(7): lea 0x2dd5(%rip),%rsi
1a35(5): mov $0x5,%edx
1a3a(2): xor %edi,%edi
1a3c(7): lea 0x2d21(%rip),%r12
1a43(7): lea 0x2d54(%rip),%rbx
1a4a(5): call 0xfffff8c6(%rip)
1a4f(7): lea 0x2d0e(%rip),%rcx
1a56(7): lea 0x2eeb(%rip),%rdx
1a5d(3): mov %rax,%rsi
1a60(5): mov $0x1,%edi
1a65(2): xor %eax,%eax
1a67(5): call 0xfffff9f9(%rip)
1a6c(5): jmp 0xffffff4a(%rip)
1a71(7): lea 0x2cec(%rip),%r12
1a78(7): mov 0x205609(%rip),%r13
1a7f(7): lea 0x2eea(%rip),%rsi
1a86(2): xor %edi,%edi
1a88(5): mov $0x5,%edx
1a8d(5): call 0xfffff883(%rip)
1a92(3): mov %r13,%rsi
1a95(3): mov %rax,%rdi
1a98(5): call 0xfffff928(%rip)
1a9d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1ab0(7): mov %rdi,0x205621(%rip)
1ab7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1ac0(7): mov %dil,0x205609(%rip)
1ac7(1): ret near (%rsp)

"close_stdout" :
1ad0(1): push %rbp
1ad1(1): push %rbx
1ad2(4): sub $0x8,%rsp
1ad6(7): mov 0x2055ab(%rip),%rdi
1add(5): call 0x2993(%rip)
1ae2(2): test %eax,%eax
1ae4(2): jz 0x18(%rip)
1ae6(5): call 0xfffff79a(%rip)
1aeb(7): cmp $0x0,0x2055de(%rip)
1af2(3): mov %rax,%rbx
1af5(2): jz 0x1e(%rip)
1af7(3): cmp $0x20,(%rax)
1afa(2): jnz 0x19(%rip)
1afc(7): mov 0x2055bd(%rip),%rdi
1b03(5): call 0x296d(%rip)
1b08(2): test %eax,%eax
1b0a(2): jnz 0x48(%rip)
1b0c(4): add $0x8,%rsp
1b10(1): pop %rbx
1b11(1): pop %rbp
1b12(1): ret near (%rsp)
1b13(7): lea 0x2efc(%rip),%rsi
1b1a(2): xor %edi,%edi
1b1c(5): mov $0x5,%edx
1b21(5): call 0xfffff7ef(%rip)
1b26(7): mov 0x2055ab(%rip),%rdi
1b2d(3): mov %rax,%rbp
1b30(3): test %rdi,%rdi
1b33(2): jz 0x2a(%rip)
1b35(5): call 0x1ddb(%rip)
1b3a(2): mov (%rbx),%esi
1b3c(7): lea 0x2edf(%rip),%rdx
1b43(3): mov %rax,%rcx
1b46(3): mov %rbp,%r8
1b49(2): xor %edi,%edi
1b4b(2): xor %eax,%eax
1b4d(5): call 0xfffff923(%rip)
1b52(6): mov 0x2054c0(%rip),%edi
1b58(5): call 0xfffff748(%rip)
1b5d(2): mov (%rbx),%esi
1b5f(7): lea 0x2ec0(%rip),%rdx
1b66(3): mov %rax,%rcx
1b69(2): xor %edi,%edi
1b6b(2): xor %eax,%eax
1b6d(5): call 0xfffff903(%rip)
1b72(2): jmp 0xffffffe0(%rip)

"parse_long_options" :
1b80(2): push %r13
1b82(2): push %r12
1b84(3): mov %r8,%r13
1b87(1): push %rbp
1b88(1): push %rbx
1b89(3): mov %rdx,%rbp
1b8c(3): mov %rcx,%r12
1b8f(7): sub $0xe8,%rsp
1b96(2): test %al,%al
1b98(2): jz 0x3c(%rip)
1b9a(5): movaps %xmm0,0x60(%rsp)
1b9f(5): movaps %xmm1,0x70(%rsp)
1ba4(8): movaps %xmm2,0x80(%rsp)
1bac(8): movaps %xmm3,0x90(%rsp)
1bb4(8): movaps %xmm4,0xa0(%rsp)
1bbc(8): movaps %xmm5,0xb0(%rsp)
1bc4(8): movaps %xmm6,0xc0(%rsp)
1bcc(8): movaps %xmm7,0xd0(%rsp)
1bd4(9): mov $0x28,%rax
1bdd(5): mov %rax,0x28(%rsp)
1be2(2): xor %eax,%eax
1be4(3): cmp $0x2,%edi
1be7(6): mov 0x2054b3(%rip),%ebx
1bed(a): mov $0x0,0x2054a9(%rip)
1bf7(2): jz 0x39(%rip)
1bf9(5): mov 0x28(%rsp),%rax
1bfe(9): xor $0x28,%rax
1c07(6): mov %ebx,0x205493(%rip)
1c0d(a): mov $0x0,0x205479(%rip)
1c17(6): jnz 0xa3(%rip)
1c1d(7): add $0xe8,%rsp
1c24(1): pop %rbx
1c25(1): pop %rbp
1c26(2): pop %r12
1c28(2): pop %r13
1c2a(1): ret near (%rsp)
1c2b(5): nop 0x0(%rax,%rax,1)
1c30(7): lea 0x204f89(%rip),%rcx
1c37(7): lea 0x2deb(%rip),%rdx
1c3e(3): xor %r8d,%r8d
1c41(5): mov %r9,0x8(%rsp)
1c46(5): call 0xfffff70a(%rip)
1c4b(3): cmp $0xff,%eax
1c4e(2): jz 0xffffffab(%rip)
1c50(3): cmp $0x68,%eax
1c53(5): mov 0x8(%rsp),%r9
1c58(2): jz 0x58(%rip)
1c5a(3): cmp $0x76,%eax
1c5d(2): jnz 0xffffff9c(%rip)
1c5f(8): lea 0x110(%rsp),%rax
1c67(7): mov 0x20541a(%rip),%rdi
1c6e(5): lea 0x10(%rsp),%r8
1c73(3): mov %r13,%rcx
1c76(3): mov %r12,%rdx
1c79(3): mov %rbp,%rsi
1c7c(5): mov %rax,0x18(%rsp)
1c81(5): lea 0x30(%rsp),%rax
1c86(8): mov $0x30,0x10(%rsp)
1c8e(8): mov $0x30,0x14(%rsp)
1c96(5): mov %rax,0x20(%rsp)
1c9b(5): call 0x22d5(%rip)
1ca0(2): xor %edi,%edi
1ca2(5): call 0xfffff7fe(%rip)
1ca7(9): nop 0x0(%rax,%rax,1)
1cb0(2): xor %edi,%edi
1cb2(3): call %r9
1cb5(5): jmp 0xffffff44(%rip)
1cba(5): call 0xfffff686(%rip)

"parse_gnu_standard_options_only" :
1cc0(2): push %r14
1cc2(2): push %r13
1cc4(3): mov %r8,%r14
1cc7(2): push %r12
1cc9(1): push %rbp
1cca(3): mov %rdx,%r12
1ccd(1): push %rbx
1cce(3): mov %rcx,%r13
1cd1(7): sub $0xd0,%rsp
1cd8(2): test %al,%al
1cda(8): mov 0x100(%rsp),%rbp
1ce2(2): jz 0x39(%rip)
1ce4(5): movaps %xmm0,0x50(%rsp)
1ce9(5): movaps %xmm1,0x60(%rsp)
1cee(5): movaps %xmm2,0x70(%rsp)
1cf3(8): movaps %xmm3,0x80(%rsp)
1cfb(8): movaps %xmm4,0x90(%rsp)
1d03(8): movaps %xmm5,0xa0(%rsp)
1d0b(8): movaps %xmm6,0xb0(%rsp)
1d13(8): movaps %xmm7,0xc0(%rsp)
1d1b(9): mov $0x28,%rax
1d24(5): mov %rax,0x18(%rsp)
1d29(2): xor %eax,%eax
1d2b(7): lea 0x2a4f(%rip),%rdx
1d32(7): lea 0x2cf0(%rip),%rax
1d39(3): test %r9b,%r9b
1d3c(7): lea 0x204e7d(%rip),%rcx
1d43(4): cmove %rax,%rdx
1d47(3): xor %r8d,%r8d
1d4a(6): mov 0x205350(%rip),%ebx
1d50(a): mov $0x1,0x205346(%rip)
1d5a(5): call 0xfffff5f6(%rip)
1d5f(3): cmp $0xff,%eax
1d62(2): jz 0x66(%rip)
1d64(3): cmp $0x68,%eax
1d67(6): jz 0x89(%rip)
1d6d(3): cmp $0x76,%eax
1d70(2): jnz 0x50(%rip)
1d72(8): lea 0x108(%rsp),%rax
1d7a(7): mov 0x205307(%rip),%rdi
1d81(3): mov %rsp,%r8
1d84(3): mov %r14,%rcx
1d87(3): mov %r13,%rdx
1d8a(3): mov %r12,%rsi
1d8d(5): mov %rax,0x8(%rsp)
1d92(5): lea 0x20(%rsp),%rax
1d97(7): mov $0x30,(%rsp)
1d9e(8): mov $0x30,0x4(%rsp)
1da6(5): mov %rax,0x10(%rsp)
1dab(5): call 0x21c5(%rip)
1db0(2): xor %edi,%edi
1db2(5): call 0xfffff6ee(%rip)
1db7(9): nop 0x0(%rax,%rax,1)
1dc0(6): mov 0x205252(%rip),%edi
1dc6(2): call %rbp
1dc8(5): mov 0x18(%rsp),%rax
1dcd(9): xor $0x28,%rax
1dd6(6): mov %ebx,0x2052c4(%rip)
1ddc(2): jnz 0x1a(%rip)
1dde(7): add $0xd0,%rsp
1de5(1): pop %rbx
1de6(1): pop %rbp
1de7(2): pop %r12
1de9(2): pop %r13
1deb(2): pop %r14
1ded(1): ret near (%rsp)
1dee(2): nop 
1df0(2): xor %edi,%edi
1df2(2): call %rbp
1df4(2): jmp 0xffffffd4(%rip)
1df6(5): call 0xfffff54a(%rip)

"set_program_name" :
1e00(3): test %rdi,%rdi
1e03(1): push %rbx
1e04(2): jz 0x79(%rip)
1e06(5): mov $0x2f,%esi
1e0b(3): mov %rdi,%rbx
1e0e(5): call 0xfffff562(%rip)
1e13(3): test %rax,%rax
1e16(2): jz 0x57(%rip)
1e18(4): lea 0x1(%rax),%r8
1e1c(3): mov %r8,%rdx
1e1f(3): sub %rbx,%rdx
1e22(4): cmp $0x6,%rdx
1e26(2): jle 0x47(%rip)
1e28(4): lea 0xfffffffa(%rax),%rsi
1e2c(7): lea 0x2c3d(%rip),%rdi
1e33(5): mov $0x7,%ecx
1e38(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e3a(3): setnbe %dl
1e3d(3): sbb $0x0,%dl
1e40(2): test %dl,%dl
1e42(2): jnz 0x2b(%rip)
1e44(7): lea 0x2c2d(%rip),%rdi
1e4b(5): mov $0x3,%ecx
1e50(3): mov %r8,%rsi
1e53(3): mov %r8,%rbx
1e56(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e58(3): setnbe %dl
1e5b(3): sbb $0x0,%dl
1e5e(2): test %dl,%dl
1e60(2): jnz 0xd(%rip)
1e62(4): lea 0x4(%rax),%rbx
1e66(7): mov %rbx,0x205213(%rip)
1e6d(7): mov %rbx,0x20526c(%rip)
1e74(7): mov %rbx,0x20521d(%rip)
1e7b(1): pop %rbx
1e7c(1): ret near (%rsp)
1e7d(7): mov 0x20523c(%rip),%rcx
1e84(7): lea 0x2bad(%rip),%rdi
1e8b(5): mov $0x37,%edx
1e90(5): mov $0x1,%esi
1e95(5): call 0xfffff61b(%rip)
1e9a(5): call 0xfffff3d6(%rip)

"gettext_quote.part.1" :
1ea0(1): push %rbp
1ea1(1): push %rbx
1ea2(3): mov %rdi,%rbp
1ea5(2): mov %esi,%ebx
1ea7(4): sub $0x8,%rsp
1eab(5): call 0x26a5(%rip)
1eb0(3): movzx (%rax),%edx
1eb3(3): and $0xdf,%edx
1eb6(3): cmp $0x55,%dl
1eb9(2): jz 0x77(%rip)
1ebb(3): cmp $0x47,%dl
1ebe(2): jz 0x22(%rip)
1ec0(7): lea 0x2bc4(%rip),%rax
1ec7(7): lea 0x2bbf(%rip),%rdx
1ece(3): cmp $0x9,%ebx
1ed1(4): cmovne %rdx,%rax
1ed5(4): add $0x8,%rsp
1ed9(1): pop %rbx
1eda(1): pop %rbp
1edb(1): ret near (%rsp)
1edc(4): nop 0x0(%rax)
1ee0(4): movzx 0x1(%rax),%edx
1ee4(3): and $0xdf,%edx
1ee7(3): cmp $0x42,%dl
1eea(2): jnz 0xffffffd6(%rip)
1eec(4): cmp $0x31,0x2(%rax)
1ef0(2): jnz 0xffffffd0(%rip)
1ef2(4): cmp $0x38,0x3(%rax)
1ef6(2): jnz 0xffffffca(%rip)
1ef8(4): cmp $0x30,0x4(%rax)
1efc(2): jnz 0xffffffc4(%rip)
1efe(4): cmp $0x33,0x5(%rax)
1f02(2): jnz 0xffffffbe(%rip)
1f04(4): cmp $0x30,0x6(%rax)
1f08(2): jnz 0xffffffb8(%rip)
1f0a(4): cmp $0x0,0x7(%rax)
1f0e(2): jnz 0xffffffb2(%rip)
1f10(4): cmp $0x60,0x0(%rbp)
1f14(7): lea 0x2b69(%rip),%rax
1f1b(7): lea 0x2b66(%rip),%rdx
1f22(4): cmovne %rdx,%rax
1f26(4): add $0x8,%rsp
1f2a(1): pop %rbx
1f2b(1): pop %rbp
1f2c(1): ret near (%rsp)
1f2d(3): nop (%rax)
1f30(4): movzx 0x1(%rax),%edx
1f34(3): and $0xdf,%edx
1f37(3): cmp $0x54,%dl
1f3a(2): jnz 0xffffff86(%rip)
1f3c(4): movzx 0x2(%rax),%edx
1f40(3): and $0xdf,%edx
1f43(3): cmp $0x46,%dl
1f46(6): jnz 0xffffff7a(%rip)
1f4c(4): cmp $0x2d,0x3(%rax)
1f50(6): jnz 0xffffff70(%rip)
1f56(4): cmp $0x38,0x4(%rax)
1f5a(6): jnz 0xffffff66(%rip)
1f60(4): cmp $0x0,0x5(%rax)
1f64(6): jnz 0xffffff5c(%rip)
1f6a(4): cmp $0x60,0x0(%rbp)
1f6e(7): lea 0x2b07(%rip),%rax
1f75(7): lea 0x2b04(%rip),%rdx
1f7c(4): cmovne %rdx,%rax
1f80(4): add $0x8,%rsp
1f84(1): pop %rbx
1f85(1): pop %rbp
1f86(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1f90(2): push %r15
1f92(2): push %r14
1f94(3): mov %r8d,%r15d
1f97(2): push %r13
1f99(2): push %r12
1f9b(3): mov %rdi,%r14
1f9e(1): push %rbp
1f9f(1): push %rbx
1fa0(3): mov %r9d,%ebx
1fa3(3): mov %rsi,%r13
1fa6(3): mov %rcx,%rbp
1fa9(3): and $0x2,%ebx
1fac(7): sub $0xb8,%rsp
1fb3(8): mov 0xf0(%rsp),%rax
1fbb(5): mov %rdx,0x10(%rsp)
1fc0(5): mov %r8d,0x8(%rsp)
1fc5(5): mov %r9d,0x78(%rsp)
1fca(5): mov %rax,0x20(%rsp)
1fcf(8): mov 0xf8(%rsp),%rax
1fd7(5): mov %rax,0x68(%rsp)
1fdc(8): mov 0x100(%rsp),%rax
1fe4(5): mov %rax,0x60(%rsp)
1fe9(9): mov $0x28,%rax
1ff2(8): mov %rax,0xa8(%rsp)
1ffa(2): xor %eax,%eax
1ffc(5): call 0xfffff324(%rip)
2001(4): cmp $0xa,%r15d
2005(5): mov %rax,0x58(%rsp)
200a(6): jnbe 0x11b5(%rip)
2010(7): lea 0x2ac9(%rip),%rcx
2017(3): mov %r15d,%edx
201a(4): movsxd 0x0(%rcx,%rdx,4),%rax
201e(3): add %rcx,%rax
2021(2): jmp %rax
2023(5): mov $0x1,0xe(%rsp)
2028(5): mov $0x0,0x7c(%rsp)
202d(3): xor %r12d,%r12d
2030(9): mov $0x0,0x50(%rsp)
2039(5): mov $0x1,0xf(%rsp)
203e(5): mov $0x0,0xd(%rsp)
2043(7): lea 0x2a43(%rip),%rax
204a(9): mov $0x1,0x18(%rsp)
2053(3): xor %r15d,%r15d
2056(8): mov $0x2,0x8(%rsp)
205e(5): mov %rax,0x48(%rsp)
2063(3): xor %r11d,%r11d
2066(3): mov %rbp,%rax
2069(3): mov %r12d,%r8d
206c(3): mov %r11,%rbp
206f(3): mov %rax,%r11
2072(6): nop 0x0(%rax,%rax,1)
2078(3): cmp %rbp,%r11
207b(4): setnz %r12b
207f(4): cmp $0xffffffff,%r11
2083(2): jnz 0xf(%rip)
2085(5): mov 0x10(%rsp),%rax
208a(4): cmp $0x0,0x0(%rax,%rbp,1)
208e(4): setnz %r12b
2092(3): test %r12b,%r12b
2095(6): jz 0x65b(%rip)
209b(5): cmp $0x2,0x8(%rsp)
20a0(5): mov 0x10(%rsp),%rdi
20a5(4): lea 0x0(%rdi,%rbp,1),%r9
20a9(3): setnz %al
20ac(4): and 0xd(%rsp),%al
20b0(3): mov %eax,%r10d
20b3(6): jz 0xad(%rip)
20b9(5): mov 0x18(%rsp),%rax
20be(3): test %rax,%rax
20c1(6): jz 0x42f(%rip)
20c7(4): cmp $0xffffffff,%r11
20cb(5): lea 0x0(%rbp,%rax,1),%rbx
20d0(2): jnz 0x30(%rip)
20d2(4): cmp $0x1,%rax
20d6(2): jbe 0x2a(%rip)
20d8(5): mov %r8b,0x38(%rsp)
20dd(5): mov %r10b,0x30(%rsp)
20e2(5): mov %r9,0x28(%rsp)
20e7(5): call 0xfffff249(%rip)
20ec(6): movzx 0x38(%rsp),%r8d
20f2(6): movzx 0x30(%rsp),%r10d
20f8(3): mov %rax,%r11
20fb(5): mov 0x28(%rsp),%r9
2100(3): cmp %r11,%rbx
2103(5): mov %r10b,0x28(%rsp)
2108(6): jnbe 0x5b8(%rip)
210e(5): mov 0x18(%rsp),%rdx
2113(5): mov 0x48(%rsp),%rsi
2118(3): mov %r9,%rdi
211b(5): mov %r11,0x40(%rsp)
2120(5): mov %r8b,0x38(%rsp)
2125(5): mov %r9,0x30(%rsp)
212a(5): call 0xfffff286(%rip)
212f(2): test %eax,%eax
2131(5): mov 0x30(%rsp),%r9
2136(6): movzx 0x38(%rsp),%r8d
213c(5): mov 0x40(%rsp),%r11
2141(6): jnz 0x57f(%rip)
2147(5): cmp $0x0,0xf(%rsp)
214c(6): movzx 0x28(%rsp),%r10d
2152(6): jnz 0xf83(%rip)
2158(8): nop 0x0(%rax,%rax,1)
2160(4): movzx (%r9),%ebx
2164(3): cmp $0x7e,%bl
2167(6): jnbe 0x321(%rip)
216d(7): lea 0x2998(%rip),%rcx
2174(3): movzx %bl,%edx
2177(4): movsxd 0x0(%rcx,%rdx,4),%rax
217b(3): add %rcx,%rax
217e(2): jmp %rax
2180(3): xor %r10d,%r10d
2183(4): cmp $0x1,%r11
2187(3): setnz %al
218a(4): cmp $0xffffffff,%r11
218e(2): jnz 0xe(%rip)
2190(5): mov 0x10(%rsp),%rax
2195(4): cmp $0x0,0x1(%rax)
2199(3): setnz %al
219c(5): cmp $0x2,0x8(%rsp)
21a1(3): setz %dl
21a4(2): test %al,%al
21a6(6): jz 0x252(%rip)
21ac(3): xor %r12d,%r12d
21af(2): xor %eax,%eax
21b1(7): nop 0x0(%rax)
21b8(5): cmp $0x1,0xd(%rsp)
21bd(6): jnz 0x115(%rip)
21c3(2): test %dl,%dl
21c5(6): jnz 0x10d(%rip)
21cb(5): mov 0x20(%rsp),%rsi
21d0(3): test %rsi,%rsi
21d3(2): jz 0x16(%rip)
21d5(2): mov %ebx,%edx
21d7(3): shr $0x5,%dl
21da(3): movzx %dl,%edx
21dd(3): mov 0x0(%rsi,%rdx,4),%edx
21e0(3): bt %ebx,%edx
21e3(6): jb 0x150(%rip)
21e9(3): test %r10b,%r10b
21ec(6): jnz 0x147(%rip)
21f2(3): xor $0x1,%eax
21f5(4): add $0x1,%rbp
21f9(3): and %r8d,%eax
21fc(2): test %al,%al
21fe(2): jz 0x22(%rip)
2200(3): cmp %r15,%r13
2203(2): jbe 0x7(%rip)
2205(5): mov $0x27,0x0(%r14,%r15,1)
220a(4): lea 0x1(%r15),%rax
220e(3): cmp %rax,%r13
2211(2): jbe 0x8(%rip)
2213(6): mov $0x27,0x1(%r14,%r15,1)
2219(4): add $0x2,%r15
221d(3): xor %r8d,%r8d
2220(3): cmp %r13,%r15
2223(2): jnb 0x6(%rip)
2225(4): mov %bl,0x0(%r14,%r15,1)
2229(5): movzx 0xe(%rsp),%edi
222e(4): add $0x1,%r15
2232(5): mov $0x0,%eax
2237(3): test %r12b,%r12b
223a(3): cmove %eax,%edi
223d(5): mov %dil,0xe(%rsp)
2242(5): jmp 0xfffffe36(%rip)
2247(9): nop 0x0(%rax,%rax,1)
2250(3): xor %r10d,%r10d
2253(4): mov 0x8(%rsp),%eax
2257(3): cmp $0x2,%eax
225a(6): jz 0x5be(%rip)
2260(3): cmp $0x5,%eax
2263(6): jz 0x575(%rip)
2269(3): cmp $0x2,%eax
226c(5): mov $0x3f,%ebx
2271(3): setz %dl
2274(3): xor %r12d,%r12d
2277(2): xor %eax,%eax
2279(5): jmp 0xffffff3f(%rip)
227e(2): nop 
2280(3): xor %r10d,%r10d
2283(5): cmp $0x2,0x8(%rsp)
2288(6): jz 0x508(%rip)
228e(5): mov %r12b,0x7c(%rsp)
2293(2): xor %edx,%edx
2295(2): xor %eax,%eax
2297(5): mov $0x27,%ebx
229c(5): jmp 0xffffff1c(%rip)
22a1(7): nop 0x0(%rax)
22a8(5): mov $0x9,%edx
22ad(5): mov $0x74,%ebx
22b2(5): cmp $0x2,0x8(%rsp)
22b7(3): setz %al
22ba(4): and 0xf(%rsp),%al
22be(6): jnz 0x150(%rip)
22c4(5): cmp $0x0,0xd(%rsp)
22c9(2): jnz 0x67(%rip)
22cb(2): mov %edx,%ebx
22cd(3): xor %r12d,%r12d
22d0(2): xor %eax,%eax
22d2(5): cmp $0x0,0xf(%rsp)
22d7(6): jnz 0xfffffef4(%rip)
22dd(5): jmp 0xffffff0c(%rip)
22e2(6): nop 0x0(%rax,%rax,1)
22e8(5): mov $0x8,%edx
22ed(5): mov $0x62,%ebx
22f2(2): jmp 0xffffffd2(%rip)
22f4(4): nop 0x0(%rax)
22f8(5): cmp $0x2,0x8(%rsp)
22fd(6): jz 0x3d3(%rip)
2303(5): cmp $0x0,0xd(%rsp)
2308(6): jz 0x218(%rip)
230e(5): cmp $0x0,0xf(%rsp)
2313(6): jz 0x20d(%rip)
2319(6): cmp $0x0,0x18(%rsp)
231f(6): jnz 0x3bc(%rip)
2325(5): mov $0x5c,%ebx
232a(6): nop 0x0(%rax,%rax,1)
2330(3): xor %r12d,%r12d
2333(5): cmp $0x2,0x8(%rsp)
2338(3): setz %dl
233b(5): cmp $0x0,0xf(%rsp)
2340(2): mov %edx,%eax
2342(6): jnz 0x856(%rip)
2348(3): mov %r8d,%eax
234b(3): xor $0x1,%eax
234e(2): and %dl,%al
2350(2): jz 0x31(%rip)
2352(3): cmp %r15,%r13
2355(2): jbe 0x7(%rip)
2357(5): mov $0x27,0x0(%r14,%r15,1)
235c(4): lea 0x1(%r15),%rdx
2360(3): cmp %rdx,%r13
2363(2): jbe 0x8(%rip)
2365(6): mov $0x24,0x1(%r14,%r15,1)
236b(4): lea 0x2(%r15),%rdx
236f(3): cmp %rdx,%r13
2372(2): jbe 0x8(%rip)
2374(6): mov $0x27,0x2(%r14,%r15,1)
237a(4): add $0x3,%r15
237e(3): mov %eax,%r8d
2381(3): cmp %r15,%r13
2384(2): jbe 0x7(%rip)
2386(5): mov $0x5c,0x0(%r14,%r15,1)
238b(4): add $0x1,%r15
238f(4): add $0x1,%rbp
2393(5): jmp 0xfffffe8d(%rip)
2398(8): nop 0x0(%rax,%rax,1)
23a0(5): cmp $0x0,0xd(%rsp)
23a5(6): jnz 0x1ce(%rip)
23ab(2): xor %edx,%edx
23ad(5): test $0x1,0x78(%rsp)
23b2(6): jz 0xffffff19(%rip)
23b8(4): add $0x1,%rbp
23bc(5): jmp 0xfffffcbc(%rip)
23c1(7): nop 0x0(%rax)
23c8(5): cmp $0x2,0x8(%rsp)
23cd(3): setz %dl
23d0(2): xor %eax,%eax
23d2(5): jmp 0xfffffde6(%rip)
23d7(9): nop 0x0(%rax,%rax,1)
23e0(5): mov $0x7,%edx
23e5(5): mov $0x61,%ebx
23ea(5): jmp 0xfffffeda(%rip)
23ef(1): nop 
23f0(5): cmp $0x2,0x8(%rsp)
23f5(3): setz %dl
23f8(3): test %rbp,%rbp
23fb(6): jnz 0xfffffdb1(%rip)
2401(5): movzx 0xf(%rsp),%eax
2406(2): and %dl,%al
2408(6): jz 0xfffffdb0(%rip)
240e(3): mov %r11,%rbp
2411(8): mov $0x2,0x8(%rsp)
2419(5): jmp 0x700(%rip)
241e(2): nop 
2420(5): cmp $0x2,0x8(%rsp)
2425(3): setz %dl
2428(3): xor %r12d,%r12d
242b(2): jmp 0xffffffd6(%rip)
242d(3): nop (%rax)
2430(5): cmp $0x2,0x8(%rsp)
2435(5): mov $0x20,%ebx
243a(3): setz %dl
243d(2): jmp 0xffffffc4(%rip)
243f(1): nop 
2440(5): mov $0xd,%edx
2445(5): mov $0x72,%ebx
244a(5): jmp 0xfffffe68(%rip)
244f(1): nop 
2450(5): mov $0xc,%edx
2455(5): mov $0x66,%ebx
245a(5): jmp 0xfffffe6a(%rip)
245f(1): nop 
2460(5): mov $0xb,%edx
2465(5): mov $0x76,%ebx
246a(5): jmp 0xfffffe5a(%rip)
246f(1): nop 
2470(5): mov $0xa,%edx
2475(5): mov $0x6e,%ebx
247a(5): jmp 0xfffffe38(%rip)
247f(1): nop 
2480(3): xor %r10d,%r10d
2483(5): nop 0x0(%rax,%rax,1)
2488(6): cmp $0x1,0x58(%rsp)
248e(6): jnz 0x3aa(%rip)
2494(5): mov %r11,0x38(%rsp)
2499(5): mov %r8b,0x30(%rsp)
249e(5): mov %r10b,0x28(%rsp)
24a3(5): call 0xfffff04d(%rip)
24a8(3): mov (%rax),%rcx
24ab(3): movzx %bl,%edx
24ae(6): movzx 0x28(%rsp),%r10d
24b4(6): movzx 0x30(%rsp),%r8d
24ba(5): mov 0x38(%rsp),%r11
24bf(5): mov $0x1,%edi
24c4(4): movzx 0x0(%rcx,%rdx,2),%eax
24c8(4): and $0x4000,%ax
24cc(4): setnz %r12b
24d0(3): setz %al
24d3(4): and 0xd(%rsp),%al
24d7(2): test %al,%al
24d9(6): jnz 0x998(%rip)
24df(5): cmp $0x2,0x8(%rsp)
24e4(3): setz %dl
24e7(5): jmp 0xfffffcd1(%rip)
24ec(4): nop 0x0(%rax)
24f0(4): movzx (%r9),%ebx
24f4(3): cmp $0x7e,%bl
24f7(2): jnbe 0xffffff89(%rip)
24f9(7): lea 0x2808(%rip),%rcx
2500(3): movzx %bl,%edx
2503(4): movsxd 0x0(%rcx,%rdx,4),%rax
2507(3): add %rcx,%rax
250a(2): jmp %rax
250c(4): nop 0x0(%rax)
2510(3): xor %r10d,%r10d
2513(5): cmp $0x0,0xd(%rsp)
2518(6): jnz 0xfffffdf6(%rip)
251e(2): nop 
2520(5): mov $0x5c,%edx
2525(5): mov $0x5c,%ebx
252a(5): jmp 0xfffffd9a(%rip)
252f(1): nop 
2530(5): mov $0xc,%edx
2535(3): xor %r10d,%r10d
2538(5): mov $0x66,%ebx
253d(5): jmp 0xfffffd87(%rip)
2542(6): nop 0x0(%rax,%rax,1)
2548(5): mov $0xa,%edx
254d(3): xor %r10d,%r10d
2550(5): mov $0x6e,%ebx
2555(5): jmp 0xfffffd5d(%rip)
255a(6): nop 0x0(%rax,%rax,1)
2560(5): mov $0x61,%ebx
2565(5): jmp 0xfffffdcb(%rip)
256a(6): nop 0x0(%rax,%rax,1)
2570(3): xor %r10d,%r10d
2573(5): cmp $0x2,0x8(%rsp)
2578(3): setz %dl
257b(5): cmp $0x0,0xf(%rsp)
2580(6): jnz 0xb9a(%rip)
2586(3): mov %r8d,%eax
2589(3): mov %r15,%rcx
258c(3): xor $0x1,%eax
258f(2): and %dl,%al
2591(2): jz 0x2f(%rip)
2593(3): cmp %r15,%r13
2596(2): jbe 0x7(%rip)
2598(5): mov $0x27,0x0(%r14,%r15,1)
259d(4): lea 0x1(%r15),%rcx
25a1(3): cmp %rcx,%r13
25a4(2): jbe 0x8(%rip)
25a6(6): mov $0x24,0x1(%r14,%r15,1)
25ac(4): lea 0x2(%r15),%rcx
25b0(3): cmp %rcx,%r13
25b3(6): jnbe 0x636(%rip)
25b9(4): lea 0x3(%r15),%rcx
25bd(3): mov %eax,%r8d
25c0(3): cmp %rcx,%r13
25c3(2): jbe 0x7(%rip)
25c5(5): mov $0x5c,0x0(%r14,%rcx,1)
25ca(5): cmp $0x2,0x8(%rsp)
25cf(4): lea 0x1(%rcx),%r15
25d3(6): jz 0x606(%rip)
25d9(4): lea 0x1(%rbp),%rax
25dd(3): cmp %r11,%rax
25e0(2): jnb 0x1b(%rip)
25e2(5): mov 0x10(%rsp),%rax
25e7(5): movzx 0x1(%rax,%rbp,1),%eax
25ec(4): mov %al,0x28(%rsp)
25f0(3): sub $0x30,%eax
25f3(2): cmp $0x9,%al
25f5(6): jbe 0x834(%rip)
25fb(3): mov %r12d,%eax
25fe(5): mov $0x30,%ebx
2603(3): xor %r12d,%r12d
2606(5): jmp 0xfffffbb2(%rip)
260b(5): nop 0x0(%rax,%rax,1)
2610(5): cmp $0x2,0x8(%rsp)
2615(3): mov %r10d,%r12d
2618(3): setz %dl
261b(3): xor %r10d,%r10d
261e(2): xor %eax,%eax
2620(5): jmp 0xfffffb98(%rip)
2625(3): nop (%rax)
2628(5): cmp $0x2,0x8(%rsp)
262d(3): setz %dl
2630(3): xor %r10d,%r10d
2633(5): jmp 0xfffffdc5(%rip)
2638(8): nop 0x0(%rax,%rax,1)
2640(5): cmp $0x2,0x8(%rsp)
2645(3): setz %dl
2648(3): xor %r10d,%r10d
264b(3): xor %r12d,%r12d
264e(5): jmp 0xfffffdb3(%rip)
2653(5): nop 0x0(%rax,%rax,1)
2658(5): cmp $0x2,0x8(%rsp)
265d(3): mov %r10d,%r12d
2660(5): mov $0x20,%ebx
2665(3): setz %dl
2668(3): xor %r10d,%r10d
266b(5): jmp 0xfffffd96(%rip)
2670(5): mov $0xd,%edx
2675(3): xor %r10d,%r10d
2678(5): mov $0x72,%ebx
267d(5): jmp 0xfffffc35(%rip)
2682(6): nop 0x0(%rax,%rax,1)
2688(5): mov $0x76,%ebx
268d(5): jmp 0xfffffca3(%rip)
2692(6): nop 0x0(%rax,%rax,1)
2698(5): mov $0x9,%edx
269d(3): xor %r10d,%r10d
26a0(5): mov $0x74,%ebx
26a5(5): jmp 0xfffffc0d(%rip)
26aa(6): nop 0x0(%rax,%rax,1)
26b0(5): mov $0x62,%ebx
26b5(5): jmp 0xfffffc7b(%rip)
26ba(6): nop 0x0(%rax,%rax,1)
26c0(3): xor %r10d,%r10d
26c3(5): jmp 0xfffffa9d(%rip)
26c8(8): nop 0x0(%rax,%rax,1)
26d0(5): cmp $0x0,0xf(%rsp)
26d5(6): jnz 0x96b(%rip)
26db(4): add $0x1,%rbp
26df(3): mov %r8d,%eax
26e2(3): xor %r12d,%r12d
26e5(5): mov $0x5c,%ebx
26ea(5): jmp 0xfffffb12(%rip)
26ef(1): nop 
26f0(5): cmp $0x2,0x8(%rsp)
26f5(5): movzx 0xf(%rsp),%ebx
26fa(3): mov %r8d,%r12d
26fd(3): mov %r11,%rbp
2700(3): setz %dl
2703(2): mov %ebx,%eax
2705(3): test %r15,%r15
2708(3): setz %cl
270b(2): and %edx,%eax
270d(2): and %cl,%al
270f(6): jnz 0xa67(%rip)
2715(2): mov %ebx,%eax
2717(3): xor $0x1,%eax
271a(2): and %al,%dl
271c(6): jz 0x970(%rip)
2722(5): cmp $0x0,0x7c(%rsp)
2727(6): jz 0x963(%rip)
272d(5): cmp $0x0,0xe(%rsp)
2732(6): jnz 0x9fb(%rip)
2738(3): test %r13,%r13
273b(3): setz %al
273e(6): cmp $0x0,0x50(%rsp)
2744(3): setnz %dl
2747(2): and %dl,%al
2749(6): jz 0xa23(%rip)
274f(5): mov 0x50(%rsp),%r13
2754(7): lea 0x2332(%rip),%rbx
275b(4): mov $0x27,(%r14)
275f(8): mov $0x2,0x8(%rsp)
2767(6): mov $0x1,%r15d
276d(9): mov $0x1,0x18(%rsp)
2776(5): mov $0x0,0xf(%rsp)
277b(5): mov %rbx,0x48(%rsp)
2780(4): mov %al,0x7c(%rsp)
2784(5): jmp 0xfffff8df(%rip)
2789(7): nop 0x0(%rax)
2790(5): cmp $0x0,0xf(%rsp)
2795(6): jnz 0x8ab(%rip)
279b(3): test %r13,%r13
279e(6): jz 0x402(%rip)
27a4(2): xor %edx,%edx
27a6(6): cmp $0x0,0x50(%rsp)
27ac(6): jnz 0x3f4(%rip)
27b2(5): mov %r13,0x50(%rsp)
27b7(4): add $0x3,%r15
27bb(2): xor %eax,%eax
27bd(5): mov %r12b,0x7c(%rsp)
27c2(3): xor %r8d,%r8d
27c5(3): mov %rdx,%r13
27c8(5): mov $0x27,%ebx
27cd(5): jmp 0xfffffa1c(%rip)
27d2(6): nop 0x0(%rax,%rax,1)
27d8(5): test $0x4,0x78(%rsp)
27dd(2): jz 0x23(%rip)
27df(4): lea 0x2(%rbp),%rcx
27e3(3): cmp %r11,%rcx
27e6(2): jnb 0x1a(%rip)
27e8(5): mov 0x10(%rsp),%rax
27ed(5): cmp $0x3f,0x1(%rax,%rbp,1)
27f2(6): jz 0x790(%rip)
27f8(8): nop 0x0(%rax,%rax,1)
2800(2): xor %edx,%edx
2802(3): xor %r12d,%r12d
2805(2): xor %eax,%eax
2807(5): mov $0x3f,%ebx
280c(5): jmp 0xfffff9ac(%rip)
2811(7): nop 0x0(%rax)
2818(5): cmp $0x0,0xf(%rsp)
281d(6): jnz 0x823(%rip)
2823(3): xor %r12d,%r12d
2826(2): xor %eax,%eax
2828(5): mov $0x3f,%ebx
282d(5): jmp 0xfffff9bc(%rip)
2832(6): nop 0x0(%rax,%rax,1)
2838(8): lea 0xa0(%rsp),%rax
2840(4): cmp $0xffffffff,%r11
2844(c): mov $0x0,0xa0(%rsp)
2850(5): mov %rax,0x28(%rsp)
2855(2): jnz 0x2f(%rip)
2857(5): mov 0x10(%rsp),%rdi
285c(5): mov %r8b,0x40(%rsp)
2861(5): mov %r10b,0x38(%rsp)
2866(5): mov %r9,0x30(%rsp)
286b(5): call 0xffffeac5(%rip)
2870(6): movzx 0x40(%rsp),%r8d
2876(6): movzx 0x38(%rsp),%r10d
287c(3): mov %rax,%r11
287f(5): mov 0x30(%rsp),%r9
2884(8): lea 0x9c(%rsp),%rax
288c(2): xor %ecx,%ecx
288e(4): mov %bl,0x7e(%rsp)
2892(5): mov %r8b,0x7d(%rsp)
2897(3): mov %rcx,%rbx
289a(8): mov %r9,0x88(%rsp)
28a2(5): mov %rax,0x38(%rsp)
28a7(5): mov %r10b,0x7f(%rsp)
28ac(8): mov %r15,0x80(%rsp)
28b4(5): mov %r14,0x40(%rsp)
28b9(5): mov %r13,0x70(%rsp)
28be(5): mov %r11,0x30(%rsp)
28c3(5): mov 0x10(%rsp),%rax
28c8(5): lea 0x0(%rbp,%rbx,1),%r14
28cd(5): mov 0x30(%rsp),%rdx
28d2(5): mov 0x28(%rsp),%rcx
28d7(5): mov 0x38(%rsp),%rdi
28dc(4): lea 0x0(%rax,%r14,1),%r13
28e0(3): sub %r14,%rdx
28e3(3): mov %r13,%rsi
28e6(5): call 0x1afa(%rip)
28eb(3): test %rax,%rax
28ee(3): mov %rax,%r15
28f1(2): jz 0x50(%rip)
28f3(4): cmp $0xffffffff,%rax
28f7(6): jz 0x61e(%rip)
28fd(4): cmp $0xfffffffe,%rax
2901(6): jz 0x5a0(%rip)
2907(5): cmp $0x2,0x8(%rsp)
290c(3): setz %al
290f(4): and 0xf(%rsp),%al
2913(6): jnz 0x19d(%rip)
2919(7): mov 0x9c(%rsp),%edi
2920(5): call 0xffffebc0(%rip)
2925(5): mov 0x28(%rsp),%rdi
292a(2): test %eax,%eax
292c(5): mov $0x0,%eax
2931(4): cmove %eax,%r12d
2935(3): add %r15,%rbx
2938(5): call 0xffffeb98(%rip)
293d(2): test %eax,%eax
293f(2): jz 0xffffff84(%rip)
2941(3): mov %r12d,%edx
2944(3): mov %rbx,%rdi
2947(6): movzx 0x7d(%rsp),%r8d
294d(3): xor $0x1,%edx
2950(5): movzx 0x7e(%rsp),%ebx
2955(6): movzx 0x7f(%rsp),%r10d
295b(4): and 0xd(%rsp),%dl
295f(8): mov 0x80(%rsp),%r15
2967(5): mov 0x40(%rsp),%r14
296c(5): mov 0x70(%rsp),%r13
2971(5): mov 0x30(%rsp),%r11
2976(4): cmp $0x1,%rdi
297a(6): jbe 0x601(%rip)
2980(3): mov %rdi,%rcx
2983(2): xor %esi,%esi
2985(6): movzx 0xf(%rsp),%r9d
298b(3): add %rbp,%rcx
298e(5): mov 0x10(%rsp),%rdi
2993(5): jmp 0xbb(%rip)
2998(8): nop 0x0(%rax,%rax,1)
29a0(5): cmp $0x2,0x8(%rsp)
29a5(3): setz %al
29a8(3): test %r9b,%r9b
29ab(6): jnz 0x4b5(%rip)
29b1(3): mov %r8d,%esi
29b4(3): xor $0x1,%esi
29b7(3): and %sil,%al
29ba(2): jz 0x31(%rip)
29bc(3): cmp %r15,%r13
29bf(2): jbe 0x7(%rip)
29c1(5): mov $0x27,0x0(%r14,%r15,1)
29c6(4): lea 0x1(%r15),%rsi
29ca(3): cmp %rsi,%r13
29cd(2): jbe 0x8(%rip)
29cf(6): mov $0x24,0x1(%r14,%r15,1)
29d5(4): lea 0x2(%r15),%rsi
29d9(3): cmp %rsi,%r13
29dc(2): jbe 0x8(%rip)
29de(6): mov $0x27,0x2(%r14,%r15,1)
29e4(4): add $0x3,%r15
29e8(3): mov %eax,%r8d
29eb(3): cmp %r15,%r13
29ee(2): jbe 0x7(%rip)
29f0(5): mov $0x5c,0x0(%r14,%r15,1)
29f5(4): lea 0x1(%r15),%rax
29f9(3): cmp %rax,%r13
29fc(2): jbe 0xf(%rip)
29fe(2): mov %ebx,%eax
2a00(3): shr $0x6,%al
2a03(3): add $0x30,%eax
2a06(5): mov %al,0x1(%r14,%r15,1)
2a0b(4): lea 0x2(%r15),%rax
2a0f(3): cmp %rax,%r13
2a12(2): jbe 0x12(%rip)
2a14(2): mov %ebx,%eax
2a16(3): shr $0x3,%al
2a19(3): and $0x7,%eax
2a1c(3): add $0x30,%eax
2a1f(5): mov %al,0x2(%r14,%r15,1)
2a24(3): and $0x7,%ebx
2a27(4): add $0x1,%rbp
2a2b(4): add $0x3,%r15
2a2f(3): add $0x30,%ebx
2a32(3): cmp %rcx,%rbp
2a35(6): jnb 0xfffff7eb(%rip)
2a3b(2): mov %edx,%esi
2a3d(3): cmp %r15,%r13
2a40(2): jbe 0x6(%rip)
2a42(4): mov %bl,0x0(%r14,%r15,1)
2a46(4): movzx 0x0(%rdi,%rbp,1),%ebx
2a4a(4): add $0x1,%r15
2a4e(2): test %dl,%dl
2a50(6): jnz 0xffffff50(%rip)
2a56(2): mov %esi,%eax
2a58(3): xor $0x1,%eax
2a5b(3): and %r8d,%eax
2a5e(3): test %r10b,%r10b
2a61(2): jz 0x10(%rip)
2a63(3): cmp %r15,%r13
2a66(2): jbe 0x7(%rip)
2a68(5): mov $0x5c,0x0(%r14,%r15,1)
2a6d(4): add $0x1,%r15
2a71(4): add $0x1,%rbp
2a75(3): cmp %rcx,%rbp
2a78(6): jnb 0xfffff784(%rip)
2a7e(2): test %al,%al
2a80(6): jz 0x3fe(%rip)
2a86(3): cmp %r15,%r13
2a89(2): jbe 0x7(%rip)
2a8b(5): mov $0x27,0x0(%r14,%r15,1)
2a90(4): lea 0x1(%r15),%rax
2a94(3): cmp %rax,%r13
2a97(2): jbe 0x8(%rip)
2a99(6): mov $0x27,0x1(%r14,%r15,1)
2a9f(4): add $0x2,%r15
2aa3(3): xor %r10d,%r10d
2aa6(3): xor %r8d,%r8d
2aa9(2): jmp 0xffffff94(%rip)
2aab(5): nop 0x0(%rax,%rax,1)
2ab0(4): cmp $0x1,%r15
2ab4(6): jz 0xfffffe65(%rip)
2aba(5): mov 0x10(%rsp),%rdi
2abf(4): lea 0x0(%rdi,%r15,1),%rcx
2ac3(5): lea 0x1(%rdi,%r14,1),%rdx
2ac8(4): lea 0x0(%rcx,%r14,1),%r8
2acc(2): jmp 0x11(%rip)
2ace(2): nop 
2ad0(4): add $0x1,%rdx
2ad4(3): cmp %rdx,%r8
2ad7(6): jz 0xfffffe42(%rip)
2add(3): movzx (%rdx),%ecx
2ae0(3): sub $0x5b,%ecx
2ae3(3): cmp $0x21,%cl
2ae6(2): jnbe 0xffffffea(%rip)
2ae8(5): mov $0x1,%esi
2aed(3): shl/sal %cl,%rsi
2af0(3): mov %rsi,%rcx
2af3(a): mov $0x8589934635,%rsi
2afd(3): test %rsi,%rcx
2b00(2): jz 0xffffffd0(%rip)
2b02(5): mov 0x40(%rsp),%r14
2b07(5): mov 0x70(%rsp),%r13
2b0c(5): mov 0x30(%rsp),%rbp
2b11(8): mov $0x2,0x8(%rsp)
2b19(5): cmp $0x0,0xd(%rsp)
2b1e(2): jz 0x12(%rip)
2b20(2): test %al,%al
2b22(5): mov $0x4,%eax
2b27(5): cmove 0x8(%rsp),%eax
2b2c(4): mov %eax,0x8(%rsp)
2b30(4): sub $0x8,%rsp
2b34(3): mov %rbp,%rcx
2b37(3): mov %r13,%rsi
2b3a(4): push 0x68(%rsp)
2b3e(4): push 0x78(%rsp)
2b42(3): mov %r14,%rdi
2b45(2): push $0x0
2b47(8): mov 0x98(%rsp),%r9d
2b4f(5): mov 0x28(%rsp),%r8d
2b54(5): mov 0x30(%rsp),%rdx
2b59(4): and $0xfd,%r9d
2b5d(5): call 0xfffff433(%rip)
2b62(4): add $0x20,%rsp
2b66(3): mov %rax,%r15
2b69(8): mov 0xa8(%rsp),%rbx
2b71(9): xor $0x28,%rbx
2b7a(3): mov %r15,%rax
2b7d(6): jnz 0x606(%rip)
2b83(7): add $0xb8,%rsp
2b8a(1): pop %rbx
2b8b(1): pop %rbp
2b8c(2): pop %r12
2b8e(2): pop %r13
2b90(2): pop %r14
2b92(2): pop %r15
2b94(1): ret near (%rsp)
2b95(3): nop (%rax)
2b98(3): mov %r11,%rbp
2b9b(5): jmp 0xffffff7e(%rip)
2ba0(3): cmp %r15,%r13
2ba3(2): jbe 0x7(%rip)
2ba5(5): mov $0x27,0x0(%r14,%r15,1)
2baa(4): lea 0x1(%r15),%rax
2bae(3): cmp %rax,%r13
2bb1(2): jbe 0x8(%rip)
2bb3(6): mov $0x5c,0x1(%r14,%r15,1)
2bb9(4): lea 0x2(%r15),%rax
2bbd(3): cmp %rax,%r13
2bc0(6): jbe 0x5f2(%rip)
2bc6(3): mov %r13,%rdx
2bc9(6): mov $0x27,0x2(%r14,%r15,1)
2bcf(5): mov 0x50(%rsp),%r13
2bd4(5): jmp 0xfffffbde(%rip)
2bd9(3): mov %r12d,%eax
2bdc(5): mov $0x30,%ebx
2be1(3): xor %r12d,%r12d
2be4(5): jmp 0xfffff605(%rip)
2be9(6): mov $0x27,0x2(%r14,%r15,1)
2bef(5): jmp 0xfffff9ca(%rip)
2bf4(2): test %ebx,%ebx
2bf6(6): jnz 0xfffff42d(%rip)
2bfc(5): mov $0x1,0xd(%rsp)
2c01(3): test %r13,%r13
2c04(6): jnz 0x596(%rip)
2c0a(7): lea 0x1e7c(%rip),%rax
2c11(9): mov $0x0,0x50(%rsp)
2c1a(5): mov $0x1,0xe(%rsp)
2c1f(5): mov $0x0,0x7c(%rsp)
2c24(3): xor %r12d,%r12d
2c27(5): mov $0x0,0xf(%rsp)
2c2c(9): mov $0x1,0x18(%rsp)
2c35(5): mov %rax,0x48(%rsp)
2c3a(6): mov $0x1,%r15d
2c40(8): mov $0x2,0x8(%rsp)
2c48(5): jmp 0xfffff41b(%rip)
2c4d(3): nop (%rax)
2c50(2): test %ebx,%ebx
2c52(6): jnz 0x3fb(%rip)
2c58(3): test %r13,%r13
2c5b(6): jz 0x22b(%rip)
2c61(4): mov $0x22,(%r14)
2c65(5): mov $0x1,0xe(%rsp)
2c6a(3): xor %r12d,%r12d
2c6d(5): mov $0x0,0x7c(%rsp)
2c72(9): mov $0x0,0x50(%rsp)
2c7b(7): lea 0x1e09(%rip),%rax
2c82(5): mov $0x0,0xf(%rsp)
2c87(5): mov $0x1,0xd(%rsp)
2c8c(9): mov $0x1,0x18(%rsp)
2c95(6): mov $0x1,%r15d
2c9b(5): mov %rax,0x48(%rsp)
2ca0(5): jmp 0xfffff3c3(%rip)
2ca5(7): lea 0x1ddf(%rip),%rax
2cac(5): mov $0x1,0xe(%rsp)
2cb1(5): mov $0x0,0x7c(%rsp)
2cb6(3): xor %r12d,%r12d
2cb9(9): mov $0x0,0x50(%rsp)
2cc2(5): mov $0x1,0xf(%rsp)
2cc7(5): mov $0x1,0xd(%rsp)
2ccc(9): mov $0x1,0x18(%rsp)
2cd5(3): xor %r15d,%r15d
2cd8(5): mov %rax,0x48(%rsp)
2cdd(8): mov $0x5,0x8(%rsp)
2ce5(5): jmp 0xfffff37e(%rip)
2cea(5): mov $0x1,0xe(%rsp)
2cef(5): mov $0x0,0x7c(%rsp)
2cf4(3): xor %r12d,%r12d
2cf7(9): mov $0x0,0x50(%rsp)
2d00(5): mov $0x0,0xf(%rsp)
2d05(3): xor %r15d,%r15d
2d08(5): mov $0x1,0xd(%rsp)
2d0d(9): mov $0x0,0x18(%rsp)
2d16(9): mov $0x0,0x48(%rsp)
2d1f(5): jmp 0xfffff344(%rip)
2d24(5): cmp $0xa,0x8(%rsp)
2d29(2): jz 0x58(%rip)
2d2b(7): lea 0x1d5d(%rip),%rsi
2d32(2): xor %edi,%edi
2d34(5): mov $0x5,%edx
2d39(5): call 0xffffe5d7(%rip)
2d3e(3): mov %rax,%rcx
2d41(5): mov %rax,0x68(%rsp)
2d46(7): lea 0x1d42(%rip),%rax
2d4d(3): cmp %rax,%rcx
2d50(6): jz 0x39e(%rip)
2d56(7): lea 0x1d30(%rip),%rsi
2d5d(2): xor %edi,%edi
2d5f(5): mov $0x5,%edx
2d64(5): call 0xffffe5ac(%rip)
2d69(3): mov %rax,%rcx
2d6c(5): mov %rax,0x60(%rsp)
2d71(7): lea 0x1d15(%rip),%rax
2d78(3): cmp %rax,%rcx
2d7b(6): jz 0x389(%rip)
2d81(3): xor %r15d,%r15d
2d84(2): test %ebx,%ebx
2d86(6): jz 0x1c7(%rip)
2d8c(2): test %ebx,%ebx
2d8e(5): mov 0x60(%rsp),%rbx
2d93(5): setnz 0xf(%rsp)
2d98(3): xor %r12d,%r12d
2d9b(3): mov %rbx,%rdi
2d9e(5): call 0xffffe592(%rip)
2da3(5): mov %rbx,0x48(%rsp)
2da8(5): mov %rax,0x18(%rsp)
2dad(5): mov $0x1,0xe(%rsp)
2db2(5): mov $0x0,0x7c(%rsp)
2db7(9): mov $0x0,0x50(%rsp)
2dc0(5): mov $0x1,0xd(%rsp)
2dc5(5): jmp 0xfffff29e(%rip)
2dca(5): mov $0x1,0xe(%rsp)
2dcf(5): mov $0x0,0x7c(%rsp)
2dd4(3): xor %r12d,%r12d
2dd7(9): mov $0x0,0x50(%rsp)
2de0(5): mov $0x0,0xf(%rsp)
2de5(3): xor %r15d,%r15d
2de8(5): mov $0x0,0xd(%rsp)
2ded(9): mov $0x0,0x18(%rsp)
2df6(9): mov $0x0,0x48(%rsp)
2dff(5): jmp 0xfffff264(%rip)
2e04(5): mov $0x1,0xe(%rsp)
2e09(5): mov $0x0,0x7c(%rsp)
2e0e(3): xor %r12d,%r12d
2e11(9): mov $0x0,0x50(%rsp)
2e1a(5): mov $0x1,0xf(%rsp)
2e1f(5): mov $0x1,0xd(%rsp)
2e24(5): jmp 0xfffff21f(%rip)
2e29(3): cmp %r15,%r13
2e2c(2): jbe 0x7(%rip)
2e2e(5): mov $0x30,0x0(%r14,%r15,1)
2e33(4): lea 0x2(%rcx),%rax
2e37(3): cmp %rax,%r13
2e3a(2): jbe 0x8(%rip)
2e3c(6): mov $0x30,0x2(%r14,%rcx,1)
2e42(3): mov %r12d,%eax
2e45(4): lea 0x3(%rcx),%r15
2e49(3): xor %r12d,%r12d
2e4c(5): mov $0x30,%ebx
2e51(5): jmp 0xfffff367(%rip)
2e56(a): nop 0x0(%rax,%rax,1)
2e60(5): movzx 0xf(%rsp),%ebx
2e65(3): mov %r11,%rbp
2e68(4): mov %bl,0xd(%rsp)
2e6c(5): jmp 0xfffffcad(%rip)
2e71(5): movzx 0xd(%rsp),%edx
2e76(3): xor %r12d,%r12d
2e79(5): jmp 0xfffffb07(%rip)
2e7e(3): xor %r10d,%r10d
2e81(5): jmp 0xfffffbbc(%rip)
2e86(9): mov $0x0,0x50(%rsp)
2e8f(5): mov $0x1,0xe(%rsp)
2e94(3): xor %r12d,%r12d
2e97(5): mov $0x0,0x7c(%rsp)
2e9c(5): jmp 0xfffffddf(%rip)
2ea1(5): mov 0x30(%rsp),%r11
2ea6(3): mov %r14,%rsi
2ea9(3): mov %r13,%rcx
2eac(3): mov %rbx,%rax
2eaf(3): mov %rbx,%rdi
2eb2(6): movzx 0x7d(%rsp),%r8d
2eb8(5): movzx 0x7e(%rsp),%ebx
2ebd(8): mov 0x88(%rsp),%r9
2ec5(3): cmp %r11,%rsi
2ec8(6): movzx 0x7f(%rsp),%r10d
2ece(8): mov 0x80(%rsp),%r15
2ed6(5): mov 0x40(%rsp),%r14
2edb(5): mov 0x70(%rsp),%r13
2ee0(2): jnb 0x28(%rip)
2ee2(3): cmp $0x0,(%rcx)
2ee5(2): jnz 0x12(%rip)
2ee7(2): jmp 0x21(%rip)
2ee9(7): nop 0x0(%rax)
2ef0(5): cmp $0x0,0x0(%r9,%rax,1)
2ef5(2): jz 0x10(%rip)
2ef7(4): add $0x1,%rax
2efb(5): lea 0x0(%rbp,%rax,1),%rdx
2f00(3): cmp %rdx,%r11
2f03(2): jnbe 0xffffffed(%rip)
2f05(3): mov %rax,%rdi
2f08(5): movzx 0xd(%rsp),%edx
2f0d(3): xor %r12d,%r12d
2f10(5): jmp 0xfffffa66(%rip)
2f15(3): mov %rbx,%rdi
2f18(6): movzx 0x7d(%rsp),%r8d
2f1e(5): movzx 0x7e(%rsp),%ebx
2f23(6): movzx 0x7f(%rsp),%r10d
2f29(8): mov 0x80(%rsp),%r15
2f31(3): xor %r12d,%r12d
2f34(5): mov 0x40(%rsp),%r14
2f39(5): mov 0x70(%rsp),%r13
2f3e(5): mov 0x30(%rsp),%r11
2f43(5): movzx 0xd(%rsp),%edx
2f48(5): jmp 0xfffffa2e(%rip)
2f4d(5): mov 0x68(%rsp),%rdx
2f52(3): movzx (%rdx),%eax
2f55(2): test %al,%al
2f57(6): jz 0xfffffe35(%rip)
2f5d(3): nop (%rax)
2f60(3): cmp %r15,%r13
2f63(2): jbe 0x6(%rip)
2f65(4): mov %al,0x0(%r14,%r15,1)
2f69(4): add $0x1,%r15
2f6d(5): movzx 0x0(%rdx,%r15,1),%eax
2f72(2): test %al,%al
2f74(2): jnz 0xffffffec(%rip)
2f76(5): jmp 0xfffffe16(%rip)
2f7b(2): mov %edx,%eax
2f7d(5): jmp 0xfffff55a(%rip)
2f82(4): movzx 0x0(%rax,%rcx,1),%ebx
2f86(3): cmp $0x3e,%bl
2f89(6): jnbe 0xfffff877(%rip)
2f8f(a): mov $0x8070630310989004800,%rax
2f99(4): bt %rbx,%rax
2f9d(6): jnb 0xfffff863(%rip)
2fa3(5): cmp $0x0,0xf(%rsp)
2fa8(6): jnz 0x1ea(%rip)
2fae(3): cmp %r15,%r13
2fb1(2): jbe 0x7(%rip)
2fb3(5): mov $0x3f,0x0(%r14,%r15,1)
2fb8(4): lea 0x1(%r15),%rax
2fbc(3): cmp %rax,%r13
2fbf(2): jbe 0x8(%rip)
2fc1(6): mov $0x22,0x1(%r14,%r15,1)
2fc7(4): lea 0x2(%r15),%rax
2fcb(3): cmp %rax,%r13
2fce(2): jbe 0x8(%rip)
2fd0(6): mov $0x22,0x2(%r14,%r15,1)
2fd6(4): lea 0x3(%r15),%rax
2fda(3): cmp %rax,%r13
2fdd(2): jbe 0x8(%rip)
2fdf(6): mov $0x3f,0x3(%r14,%r15,1)
2fe5(4): add $0x4,%r15
2fe9(2): xor %edx,%edx
2feb(3): xor %r12d,%r12d
2fee(2): xor %eax,%eax
2ff0(3): mov %rcx,%rbp
2ff3(5): jmp 0xfffff1c5(%rip)
2ff8(2): test %ebx,%ebx
2ffa(6): jz 0x18e(%rip)
3000(7): lea 0x1a86(%rip),%rax
3007(5): mov $0x1,0xe(%rsp)
300c(5): mov $0x0,0x7c(%rsp)
3011(3): xor %r12d,%r12d
3014(9): mov $0x0,0x50(%rsp)
301d(5): mov $0x1,0xf(%rsp)
3022(5): mov $0x0,0xd(%rsp)
3027(9): mov $0x1,0x18(%rsp)
3030(3): xor %r15d,%r15d
3033(5): mov %rax,0x48(%rsp)
3038(5): jmp 0xfffff02b(%rip)
303d(3): nop (%rax)
3040(3): mov %r11,%rbp
3043(5): movzx 0xf(%rsp),%eax
3048(5): jmp 0xfffffad1(%rip)
304d(7): lea 0x1a37(%rip),%rax
3054(5): mov $0x1,0xe(%rsp)
3059(5): mov $0x0,0x7c(%rsp)
305e(3): xor %r12d,%r12d
3061(9): mov $0x0,0x50(%rsp)
306a(5): mov $0x1,0xf(%rsp)
306f(5): mov $0x1,0xd(%rsp)
3074(9): mov $0x1,0x18(%rsp)
307d(3): xor %r15d,%r15d
3080(5): mov %rax,0x48(%rsp)
3085(5): jmp 0xffffefde(%rip)
308a(2): mov %edx,%eax
308c(5): mov 0x48(%rsp),%rbx
3091(3): test %rbx,%rbx
3094(2): jz 0x2e(%rip)
3096(2): test %al,%al
3098(2): jz 0x2a(%rip)
309a(3): movzx (%rbx),%ecx
309d(3): mov %rbx,%rax
30a0(2): test %cl,%cl
30a2(2): jz 0x20(%rip)
30a4(3): mov %r15,%rdx
30a7(3): sub %r15,%rax
30aa(3): cmp %rdx,%r13
30ad(2): jbe 0x6(%rip)
30af(4): mov %cl,0x0(%r14,%rdx,1)
30b3(4): add $0x1,%rdx
30b7(4): movzx 0x0(%rax,%rdx,1),%ecx
30bb(2): test %cl,%cl
30bd(2): jnz 0xffffffed(%rip)
30bf(3): mov %rdx,%r15
30c2(3): cmp %r15,%r13
30c5(6): jbe 0xfffffaa4(%rip)
30cb(5): mov $0x0,0x0(%r14,%r15,1)
30d0(5): jmp 0xfffffa99(%rip)
30d5(5): cmp $0x2,0x8(%rsp)
30da(5): movzx 0xf(%rsp),%ebx
30df(3): mov %r11,%rbp
30e2(3): setz %al
30e5(4): mov %bl,0xd(%rsp)
30e9(5): jmp 0xfffffa30(%rip)
30ee(4): mov 0x8(%rsp),%esi
30f2(3): mov %rcx,%rdi
30f5(5): call 0xffffedab(%rip)
30fa(5): mov %rax,0x68(%rsp)
30ff(5): jmp 0xfffffc57(%rip)
3104(4): mov 0x8(%rsp),%esi
3108(3): mov %rcx,%rdi
310b(5): call 0xffffed95(%rip)
3110(5): mov %rax,0x60(%rsp)
3115(5): jmp 0xfffffc6c(%rip)
311a(5): movzx 0xf(%rsp),%ebx
311f(3): mov %r11,%rbp
3122(2): mov %edx,%eax
3124(4): mov %bl,0xd(%rsp)
3128(5): jmp 0xfffff9f1(%rip)
312d(4): sub $0x8,%rsp
3131(6): mov $0x5,%r8d
3137(3): mov %r11,%rcx
313a(4): push 0x68(%rsp)
313e(4): push 0x78(%rsp)
3142(3): mov %r14,%rdi
3145(4): push 0x38(%rsp)
3149(8): mov 0x98(%rsp),%r9d
3151(5): mov 0x30(%rsp),%rdx
3156(5): mov 0x70(%rsp),%rsi
315b(5): call 0xffffee35(%rip)
3160(4): add $0x20,%rsp
3164(3): mov %rax,%r15
3167(5): jmp 0xfffffa02(%rip)
316c(5): movzx 0x7c(%rsp),%eax
3171(5): jmp 0xffffff1b(%rip)
3176(8): mov $0x2,0x8(%rsp)
317e(5): jmp 0xfffff99b(%rip)
3183(5): call 0xffffe1bd(%rip)
3188(5): mov $0x0,0xd(%rsp)
318d(5): jmp 0xfffffa74(%rip)
3192(3): mov %r11,%rbp
3195(5): jmp 0xfffff99b(%rip)
319a(5): mov $0x1,0xe(%rsp)
319f(2): xor %eax,%eax
31a1(3): xor %r12d,%r12d
31a4(9): mov $0x0,0x50(%rsp)
31ad(5): jmp 0xfffff5a7(%rip)
31b2(3): mov %r13,%rdx
31b5(5): mov 0x50(%rsp),%r13
31ba(5): jmp 0xfffff5f8(%rip)
31bf(5): call 0xffffe0b1(%rip)

"quotearg_n_options" :
31d0(2): push %r15
31d2(2): push %r14
31d4(3): movsxd %edi,%r15
31d7(2): push %r13
31d9(2): push %r12
31db(3): mov %rdx,%r14
31de(1): push %rbp
31df(1): push %rbx
31e0(3): mov %rcx,%rbp
31e3(4): sub $0x28,%rsp
31e7(5): mov %rsi,0x8(%rsp)
31ec(5): call 0xffffe094(%rip)
31f1(3): mov %rax,%r13
31f4(2): mov (%rax),%eax
31f6(3): test %r15d,%r15d
31f9(7): mov 0x203e60(%rip),%rbx
3200(4): mov %eax,0x18(%rsp)
3204(6): js 0x16d(%rip)
320a(7): cmp %r15d,0x203e47(%rip)
3211(2): jnle 0x64(%rip)
3213(7): cmp $0x7fffffff,%r15d
321a(6): jz 0x15c(%rip)
3220(4): lea 0x1(%r15),%r12d
3224(7): lea 0x203e45(%rip),%rax
322b(3): movsxd %r12d,%rsi
322e(4): shl/sal $0x4,%rsi
3232(3): cmp %rax,%rbx
3235(6): jz 0x11b(%rip)
323b(3): mov %rbx,%rdi
323e(5): call 0xf72(%rip)
3243(3): mov %rax,%rbx
3246(7): mov %rax,0x203e13(%rip)
324d(7): movsxd 0x203e04(%rip),%rdi
3254(3): mov %r12d,%edx
3257(2): xor %esi,%esi
3259(2): sub %edi,%edx
325b(4): shl/sal $0x4,%rdi
325f(3): movsxd %edx,%rdx
3262(3): add %rbx,%rdi
3265(4): shl/sal $0x4,%rdx
3269(5): call 0xffffe127(%rip)
326e(7): mov %r12d,0x203de3(%rip)
3275(3): mov 0x4(%rbp),%eax
3278(4): shl/sal $0x4,%r15
327c(4): sub $0x8,%rsp
3280(3): add %r15,%rbx
3283(4): lea 0x8(%rbp),%r15
3287(4): mov 0x0(%rbp),%r8d
328b(3): mov (%rbx),%r11
328e(4): mov 0x8(%rbx),%r12
3292(3): mov %r14,%rcx
3295(3): or $0x1,%eax
3298(4): mov %eax,0x24(%rsp)
329c(3): push 0x30(%rbp)
329f(3): mov %eax,%r9d
32a2(3): push 0x28(%rbp)
32a5(2): push %r15
32a7(3): mov %r11,%rsi
32aa(5): mov 0x28(%rsp),%rdx
32af(3): mov %r12,%rdi
32b2(5): mov %r11,0x30(%rsp)
32b7(5): call 0xffffecd9(%rip)
32bc(4): add $0x20,%rsp
32c0(5): mov 0x10(%rsp),%r11
32c5(3): cmp %rax,%r11
32c8(2): jnbe 0x69(%rip)
32ca(4): lea 0x1(%rax),%rsi
32ce(7): lea 0x203e2b(%rip),%rax
32d5(3): cmp %rax,%r12
32d8(3): mov %rsi,(%rbx)
32db(2): jz 0x14(%rip)
32dd(3): mov %r12,%rdi
32e0(5): mov %rsi,0x10(%rsp)
32e5(5): call 0xffffdf7b(%rip)
32ea(5): mov 0x10(%rsp),%rsi
32ef(3): mov %rsi,%rdi
32f2(5): mov %rsi,0x10(%rsp)
32f7(5): call 0xe59(%rip)
32fc(4): sub $0x8,%rsp
3300(4): mov %rax,0x8(%rbx)
3304(4): mov 0x0(%rbp),%r8d
3308(3): push 0x30(%rbp)
330b(3): push 0x28(%rbp)
330e(3): mov %r14,%rcx
3311(2): push %r15
3313(5): mov 0x3c(%rsp),%r9d
3318(3): mov %rax,%rdi
331b(5): mov 0x28(%rsp),%rdx
3320(5): mov 0x30(%rsp),%rsi
3325(3): mov %rax,%r12
3328(5): call 0xffffec68(%rip)
332d(4): add $0x20,%rsp
3331(4): mov 0x18(%rsp),%eax
3335(4): mov %eax,0x0(%r13)
3339(4): add $0x28,%rsp
333d(3): mov %r12,%rax
3340(1): pop %rbx
3341(1): pop %rbp
3342(2): pop %r12
3344(2): pop %r13
3346(2): pop %r14
3348(2): pop %r15
334a(1): ret near (%rsp)
334b(5): nop 0x0(%rax,%rax,1)
3350(2): xor %edi,%edi
3352(5): call 0xe5e(%rip)
3357(8): movdqa 0x203d11(%rip),%xmm0
335f(3): mov %rax,%rbx
3362(7): mov %rax,0x203cf7(%rip)
3369(3): movups %xmm0,(%rax)
336c(5): jmp 0xfffffee1(%rip)
3371(5): call 0xffffdeff(%rip)
3376(5): call 0x102a(%rip)

"clone_quoting_options" :
3380(2): push %r12
3382(1): push %rbp
3383(1): push %rbx
3384(3): mov %rdi,%rbx
3387(5): call 0xffffdef9(%rip)
338c(3): mov (%rax),%r12d
338f(3): mov %rax,%rbp
3392(7): lea 0x203e67(%rip),%rax
3399(3): test %rbx,%rbx
339c(5): mov $0x38,%esi
33a1(4): cmove %rax,%rbx
33a5(3): mov %rbx,%rdi
33a8(5): call 0xfa8(%rip)
33ad(4): mov %r12d,0x0(%rbp)
33b1(1): pop %rbx
33b2(1): pop %rbp
33b3(2): pop %r12
33b5(1): ret near (%rsp)

"get_quoting_style" :
33c0(7): lea 0x203e39(%rip),%rax
33c7(3): test %rdi,%rdi
33ca(4): cmove %rax,%rdi
33ce(2): mov (%rdi),%eax
33d0(1): ret near (%rsp)

"set_quoting_style" :
33e0(7): lea 0x203e19(%rip),%rax
33e7(3): test %rdi,%rdi
33ea(4): cmove %rax,%rdi
33ee(2): mov %esi,(%rdi)
33f0(1): ret near (%rsp)

"set_char_quoting" :
3400(7): lea 0x203df9(%rip),%rax
3407(3): test %rdi,%rdi
340a(2): mov %esi,%ecx
340c(4): cmove %rax,%rdi
3410(2): mov %esi,%eax
3412(3): and $0x1f,%ecx
3415(3): shr $0x5,%al
3418(3): movzx %al,%eax
341b(5): lea 0x8(%rdi,%rax,4),%rdi
3420(2): mov (%rdi),%esi
3422(2): mov %esi,%eax
3424(2): shr %cl,%eax
3426(2): xor %eax,%edx
3428(3): and $0x1,%eax
342b(3): and $0x1,%edx
342e(2): shl/sal %cl,%edx
3430(2): xor %esi,%edx
3432(2): mov %edx,(%rdi)
3434(1): ret near (%rsp)

"set_quoting_flags" :
3440(7): lea 0x203db9(%rip),%rax
3447(3): test %rdi,%rdi
344a(4): cmove %rax,%rdi
344e(3): mov 0x4(%rdi),%eax
3451(3): mov %esi,0x4(%rdi)
3454(1): ret near (%rsp)

"set_custom_quoting" :
3460(7): lea 0x203d99(%rip),%rax
3467(3): test %rdi,%rdi
346a(4): cmove %rax,%rdi
346e(3): test %rsi,%rsi
3471(6): mov $0xa,(%rdi)
3477(2): jz 0x10(%rip)
3479(3): test %rdx,%rdx
347c(2): jz 0xb(%rip)
347e(4): mov %rsi,0x28(%rdi)
3482(4): mov %rdx,0x30(%rdi)
3486(1): ret near (%rsp)
3487(4): sub $0x8,%rsp
348b(5): call 0xffffdde5(%rip)

"quotearg_buffer" :
3490(2): push %r15
3492(2): push %r14
3494(7): lea 0x203d65(%rip),%rax
349b(2): push %r13
349d(2): push %r12
349f(3): mov %rdi,%r13
34a2(1): push %rbp
34a3(1): push %rbx
34a4(3): mov %r8,%rbx
34a7(3): mov %rsi,%r14
34aa(3): mov %rdx,%r15
34ad(4): sub $0x18,%rsp
34b1(3): test %r8,%r8
34b4(4): cmove %rax,%rbx
34b8(5): mov %rcx,0x8(%rsp)
34bd(5): call 0xffffddc3(%rip)
34c2(3): mov (%rax),%r12d
34c5(3): mov %rax,%rbp
34c8(4): lea 0x8(%rbx),%rax
34cc(4): sub $0x8,%rsp
34d0(4): mov 0x4(%rbx),%r9d
34d4(3): push 0x30(%rbx)
34d7(3): mov (%rbx),%r8d
34da(3): push 0x28(%rbx)
34dd(3): mov %r15,%rdx
34e0(1): push %rax
34e1(5): mov 0x28(%rsp),%rcx
34e6(3): mov %r14,%rsi
34e9(3): mov %r13,%rdi
34ec(5): call 0xffffeaa4(%rip)
34f1(4): mov %r12d,0x0(%rbp)
34f5(4): add $0x38,%rsp
34f9(1): pop %rbx
34fa(1): pop %rbp
34fb(2): pop %r12
34fd(2): pop %r13
34ff(2): pop %r14
3501(2): pop %r15
3503(1): ret near (%rsp)

"quotearg_alloc_mem" :
3510(2): push %r15
3512(2): push %r14
3514(7): lea 0x203ce5(%rip),%rax
351b(2): push %r13
351d(2): push %r12
351f(3): mov %rdx,%r12
3522(1): push %rbp
3523(1): push %rbx
3524(3): mov %rcx,%rbx
3527(3): mov %rdi,%r14
352a(3): mov %rsi,%r15
352d(4): sub $0x38,%rsp
3531(3): test %rcx,%rcx
3534(4): cmove %rax,%rbx
3538(2): xor %ebp,%ebp
353a(5): call 0xffffdd46(%rip)
353f(3): test %r12,%r12
3542(3): mov %rax,%r13
3545(2): mov (%rax),%eax
3547(4): setz %bpl
354b(3): or 0x4(%rbx),%ebp
354e(4): lea 0x8(%rbx),%r10
3552(4): sub $0x8,%rsp
3556(3): mov (%rbx),%r8d
3559(3): mov %r15,%rcx
355c(4): mov %eax,0x14(%rsp)
3560(3): push 0x30(%rbx)
3563(3): mov %r14,%rdx
3566(3): push 0x28(%rbx)
3569(2): push %r10
356b(2): xor %esi,%esi
356d(3): mov %ebp,%r9d
3570(2): xor %edi,%edi
3572(5): mov %r10,0x40(%rsp)
3577(5): call 0xffffea19(%rip)
357c(4): lea 0x1(%rax),%rsi
3580(5): mov %rax,0x48(%rsp)
3585(4): add $0x20,%rsp
3589(3): mov %rsi,%rdi
358c(5): mov %rsi,0x18(%rsp)
3591(5): call 0xbbf(%rip)
3596(5): mov %rax,0x10(%rsp)
359b(4): sub $0x8,%rsp
359f(3): push 0x30(%rbx)
35a2(3): push 0x28(%rbx)
35a5(5): mov 0x38(%rsp),%r10
35aa(3): mov %ebp,%r9d
35ad(3): mov (%rbx),%r8d
35b0(3): mov %r15,%rcx
35b3(3): mov %r14,%rdx
35b6(3): mov %rax,%rdi
35b9(2): push %r10
35bb(5): mov 0x38(%rsp),%rsi
35c0(5): call 0xffffe9d0(%rip)
35c5(4): mov 0x2c(%rsp),%eax
35c9(4): add $0x20,%rsp
35cd(3): test %r12,%r12
35d0(4): mov %eax,0x0(%r13)
35d4(2): jz 0xb(%rip)
35d6(5): mov 0x28(%rsp),%r11
35db(4): mov %r11,(%r12)
35df(5): mov 0x10(%rsp),%rax
35e4(4): add $0x38,%rsp
35e8(1): pop %rbx
35e9(1): pop %rbp
35ea(2): pop %r12
35ec(2): pop %r13
35ee(2): pop %r14
35f0(2): pop %r15
35f2(1): ret near (%rsp)

"quotearg_alloc" :
3600(3): mov %rdx,%rcx
3603(2): xor %edx,%edx
3605(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3610(6): mov 0x203a42(%rip),%eax
3616(2): push %r12
3618(7): mov 0x203a41(%rip),%r12
361f(1): push %rbp
3620(1): push %rbx
3621(3): cmp $0x1,%eax
3624(2): jle 0x2d(%rip)
3626(3): sub $0x2,%eax
3629(5): lea 0x18(%r12),%rbx
362e(4): shl/sal $0x4,%rax
3632(5): lea 0x28(%r12,%rax,1),%rbp
3637(9): nop 0x0(%rax,%rax,1)
3640(3): mov (%rbx),%rdi
3643(4): add $0x10,%rbx
3647(5): call 0xffffdc19(%rip)
364c(3): cmp %rbp,%rbx
364f(2): jnz 0xfffffff1(%rip)
3651(5): mov 0x8(%r12),%rdi
3656(7): lea 0x203aa3(%rip),%rbx
365d(3): cmp %rbx,%rdi
3660(2): jz 0x19(%rip)
3662(5): call 0xffffdbfe(%rip)
3667(b): mov $0x100,0x2039fe(%rip)
3672(7): mov %rbx,0x2039ff(%rip)
3679(7): lea 0x2039f0(%rip),%rbx
3680(3): cmp %rbx,%r12
3683(2): jz 0x11(%rip)
3685(3): mov %r12,%rdi
3688(5): call 0xffffdbd8(%rip)
368d(7): mov %rbx,0x2039cc(%rip)
3694(1): pop %rbx
3695(a): mov $0x1,0x2039b9(%rip)
369f(1): pop %rbp
36a0(2): pop %r12
36a2(1): ret near (%rsp)

"quotearg_n" :
36b0(7): lea 0x203b49(%rip),%rcx
36b7(7): mov $0xffffffff,%rdx
36be(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
36d0(7): lea 0x203b29(%rip),%rcx
36d7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
36e0(7): lea 0x203b19(%rip),%rcx
36e7(3): mov %rdi,%rsi
36ea(7): mov $0xffffffff,%rdx
36f1(2): xor %edi,%edi
36f3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3700(7): lea 0x203af9(%rip),%rcx
3707(3): mov %rsi,%rdx
370a(3): mov %rdi,%rsi
370d(2): xor %edi,%edi
370f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3720(4): sub $0x48,%rsp
3724(3): mov %rdx,%rax
3727(9): mov $0x28,%rdx
3730(5): mov %rdx,0x38(%rsp)
3735(2): xor %edx,%edx
3737(3): cmp $0xa,%esi
373a(2): jz 0x6a(%rip)
373c(3): mov %esi,(%rsp)
373f(3): mov %rsp,%rcx
3742(7): mov $0xffffffff,%rdx
3749(3): mov %rax,%rsi
374c(9): mov $0x0,0x4(%rsp)
3755(9): mov $0x0,0xc(%rsp)
375e(9): mov $0x0,0x14(%rsp)
3767(9): mov $0x0,0x1c(%rsp)
3770(9): mov $0x0,0x24(%rsp)
3779(9): mov $0x0,0x2c(%rsp)
3782(8): mov $0x0,0x34(%rsp)
378a(5): call 0xfffffa46(%rip)
378f(5): mov 0x38(%rsp),%rcx
3794(9): xor $0x28,%rcx
379d(2): jnz 0xc(%rip)
379f(4): add $0x48,%rsp
37a3(1): ret near (%rsp)
37a4(5): call 0xffffdacc(%rip)
37a9(5): call 0xffffdb97(%rip)

"quotearg_n_style_mem" :
37b0(4): sub $0x48,%rsp
37b4(3): mov %rdx,%rax
37b7(3): mov %rcx,%rdx
37ba(9): mov $0x28,%rcx
37c3(5): mov %rcx,0x38(%rsp)
37c8(2): xor %ecx,%ecx
37ca(3): cmp $0xa,%esi
37cd(2): jz 0x63(%rip)
37cf(3): mov %esi,(%rsp)
37d2(3): mov %rsp,%rcx
37d5(3): mov %rax,%rsi
37d8(9): mov $0x0,0x4(%rsp)
37e1(9): mov $0x0,0xc(%rsp)
37ea(9): mov $0x0,0x14(%rsp)
37f3(9): mov $0x0,0x1c(%rsp)
37fc(9): mov $0x0,0x24(%rsp)
3805(9): mov $0x0,0x2c(%rsp)
380e(8): mov $0x0,0x34(%rsp)
3816(5): call 0xfffff9ba(%rip)
381b(5): mov 0x38(%rsp),%rdx
3820(9): xor $0x28,%rdx
3829(2): jnz 0xc(%rip)
382b(4): add $0x48,%rsp
382f(1): ret near (%rsp)
3830(5): call 0xffffda40(%rip)
3835(5): call 0xffffdb0b(%rip)

"quotearg_style" :
3840(3): mov %rsi,%rdx
3843(2): mov %edi,%esi
3845(2): xor %edi,%edi
3847(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3850(3): mov %rdx,%rcx
3853(3): mov %rsi,%rdx
3856(2): mov %edi,%esi
3858(2): xor %edi,%edi
385a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3860(4): sub $0x48,%rsp
3864(2): mov %edx,%ecx
3866(9): mov $0x28,%rax
386f(5): mov %rax,0x38(%rsp)
3874(2): xor %eax,%eax
3876(7): mov 0x2039b3(%rip),%rax
387d(3): mov %rsp,%r8
3880(3): and $0x1f,%ecx
3883(8): movdqa 0x203975(%rip),%xmm0
388b(5): mov %rax,0x30(%rsp)
3890(2): mov %edx,%eax
3892(4): movaps %xmm0,(%rsp)
3896(3): shr $0x5,%al
3899(3): movzx %al,%eax
389c(5): lea 0x8(%r8,%rax,4),%r9
38a1(8): movdqa 0x203967(%rip),%xmm0
38a9(5): movaps %xmm0,0x10(%rsp)
38ae(8): movdqa 0x20396a(%rip),%xmm0
38b6(5): movaps %xmm0,0x20(%rsp)
38bb(3): mov (%r9),%edx
38be(2): mov %edx,%eax
38c0(2): shr %cl,%eax
38c2(2): not %eax
38c4(3): and $0x1,%eax
38c7(2): shl/sal %cl,%eax
38c9(3): mov %r8,%rcx
38cc(2): xor %edx,%eax
38ce(3): mov %rsi,%rdx
38d1(3): mov %rdi,%rsi
38d4(3): mov %eax,(%r9)
38d7(2): xor %edi,%edi
38d9(5): call 0xfffff8f7(%rip)
38de(5): mov 0x38(%rsp),%rsi
38e3(9): xor $0x28,%rsi
38ec(2): jnz 0x7(%rip)
38ee(4): add $0x48,%rsp
38f2(1): ret near (%rsp)
38f3(5): call 0xffffda4d(%rip)

"quotearg_char" :
3900(4): movsx %sil,%edx
3904(7): mov $0xffffffff,%rsi
390b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3910(5): mov $0x3a,%edx
3915(7): mov $0xffffffff,%rsi
391c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3930(5): mov $0x3a,%edx
3935(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3940(4): sub $0x48,%rsp
3944(3): mov %rdx,%rax
3947(9): mov $0x28,%rdx
3950(5): mov %rdx,0x38(%rsp)
3955(2): xor %edx,%edx
3957(3): cmp $0xa,%esi
395a(2): jz 0x6a(%rip)
395c(3): mov %esi,(%rsp)
395f(3): mov %rsp,%rcx
3962(7): mov $0xffffffff,%rdx
3969(3): mov %rax,%rsi
396c(9): mov $0x0,0x4(%rsp)
3975(9): mov $0x4000000,0xc(%rsp)
397e(9): mov $0x0,0x14(%rsp)
3987(9): mov $0x0,0x1c(%rsp)
3990(9): mov $0x0,0x24(%rsp)
3999(9): mov $0x0,0x2c(%rsp)
39a2(8): mov $0x0,0x34(%rsp)
39aa(5): call 0xfffff826(%rip)
39af(5): mov 0x38(%rsp),%rcx
39b4(9): xor $0x28,%rcx
39bd(2): jnz 0xc(%rip)
39bf(4): add $0x48,%rsp
39c3(1): ret near (%rsp)
39c4(5): call 0xffffd8ac(%rip)
39c9(5): call 0xffffd977(%rip)

"quotearg_n_custom_mem" :
39d0(4): sub $0x48,%rsp
39d4(3): mov %rcx,%r9
39d7(7): mov 0x203852(%rip),%rcx
39de(8): movdqa 0x20381a(%rip),%xmm0
39e6(9): mov $0x28,%rax
39ef(5): mov %rax,0x38(%rsp)
39f4(2): xor %eax,%eax
39f6(4): movaps %xmm0,(%rsp)
39fa(3): test %rsi,%rsi
39fd(5): mov %rcx,0x30(%rsp)
3a02(7): mov $0xa,(%rsp)
3a09(8): movdqa 0x2037ff(%rip),%xmm0
3a11(5): movaps %xmm0,0x10(%rsp)
3a16(8): movdqa 0x203802(%rip),%xmm0
3a1e(5): movaps %xmm0,0x20(%rsp)
3a23(2): jz 0x34(%rip)
3a25(3): test %rdx,%rdx
3a28(2): jz 0x2f(%rip)
3a2a(5): mov %rsi,0x28(%rsp)
3a2f(5): mov %rdx,0x30(%rsp)
3a34(3): mov %rsp,%rcx
3a37(3): mov %r8,%rdx
3a3a(3): mov %r9,%rsi
3a3d(5): call 0xfffff793(%rip)
3a42(5): mov 0x38(%rsp),%rdi
3a47(9): xor $0x28,%rdi
3a50(2): jnz 0xc(%rip)
3a52(4): add $0x48,%rsp
3a56(1): ret near (%rsp)
3a57(5): call 0xffffd819(%rip)
3a5c(5): call 0xffffd8e4(%rip)

"quotearg_n_custom" :
3a70(7): mov $0xffffffff,%r8
3a77(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3a80(3): mov %rdx,%rcx
3a83(7): mov $0xffffffff,%r8
3a8a(3): mov %rsi,%rdx
3a8d(3): mov %rdi,%rsi
3a90(2): xor %edi,%edi
3a92(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3aa0(3): mov %rcx,%r8
3aa3(3): mov %rdx,%rcx
3aa6(3): mov %rsi,%rdx
3aa9(3): mov %rdi,%rsi
3aac(2): xor %edi,%edi
3aae(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3ac0(7): lea 0x203559(%rip),%rcx
3ac7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3ad0(7): lea 0x203549(%rip),%rcx
3ad7(3): mov %rsi,%rdx
3ada(3): mov %rdi,%rsi
3add(2): xor %edi,%edi
3adf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3af0(7): lea 0x203529(%rip),%rcx
3af7(7): mov $0xffffffff,%rdx
3afe(5): jmp 0xfffff6d2(%rip)

"quote" :
3b10(7): lea 0x203509(%rip),%rcx
3b17(3): mov %rdi,%rsi
3b1a(7): mov $0xffffffff,%rdx
3b21(2): xor %edi,%edi
3b23(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3b30(2): push %r15
3b32(2): push %r14
3b34(2): push %r13
3b36(2): push %r12
3b38(3): mov %r9,%r12
3b3b(1): push %rbp
3b3c(1): push %rbx
3b3d(3): mov %rdi,%rbp
3b40(3): mov %r8,%rbx
3b43(4): sub $0x28,%rsp
3b47(3): test %rsi,%rsi
3b4a(6): jz 0x11e(%rip)
3b50(3): mov %rdx,%r8
3b53(7): lea 0x13ee(%rip),%rdx
3b5a(3): mov %rcx,%r9
3b5d(2): xor %eax,%eax
3b5f(3): mov %rsi,%rcx
3b62(5): mov $0x1,%esi
3b67(5): call 0xffffd959(%rip)
3b6c(7): lea 0x13e8(%rip),%rsi
3b73(2): xor %edi,%edi
3b75(5): mov $0x5,%edx
3b7a(5): call 0xffffd796(%rip)
3b7f(7): lea 0x16fa(%rip),%rdx
3b86(3): mov %rax,%rcx
3b89(6): mov $0x7e3,%r8d
3b8f(5): mov $0x1,%esi
3b94(3): mov %rbp,%rdi
3b97(2): xor %eax,%eax
3b99(5): call 0xffffd927(%rip)
3b9e(7): lea 0x1443(%rip),%rsi
3ba5(2): xor %edi,%edi
3ba7(5): mov $0x5,%edx
3bac(5): call 0xffffd764(%rip)
3bb1(3): mov %rbp,%rsi
3bb4(3): mov %rax,%rdi
3bb7(5): call 0xffffd809(%rip)
3bbc(4): cmp $0x9,%r12
3bc0(6): jnbe 0x340(%rip)
3bc6(7): lea 0x167b(%rip),%rdx
3bcd(4): movsxd 0x0(%rdx,%r12,4),%rax
3bd1(3): add %rdx,%rax
3bd4(2): jmp %rax
3bd6(a): nop 0x0(%rax,%rax,1)
3be0(4): mov 0x38(%rbx),%r9
3be4(4): mov 0x10(%rbx),%rax
3be8(7): lea 0x1569(%rip),%rsi
3bef(4): mov 0x8(%rbx),%r8
3bf3(5): mov $0x5,%edx
3bf8(2): xor %edi,%edi
3bfa(4): mov 0x30(%rbx),%r13
3bfe(4): mov 0x28(%rbx),%r12
3c02(5): mov %r9,0x10(%rsp)
3c07(4): mov 0x20(%rbx),%r15
3c0b(4): mov 0x18(%rbx),%r14
3c0f(4): mov %rax,(%rsp)
3c13(5): mov %r8,0x8(%rsp)
3c18(3): mov (%rbx),%rbx
3c1b(5): call 0xffffd6f5(%rip)
3c20(4): sub $0x8,%rsp
3c24(5): mov 0x18(%rsp),%r9
3c29(3): mov %rax,%rdx
3c2c(3): mov %rbx,%rcx
3c2f(5): mov $0x1,%esi
3c34(3): mov %rbp,%rdi
3c37(2): xor %eax,%eax
3c39(2): push %r9
3c3b(2): push %r13
3c3d(2): push %r12
3c3f(2): push %r15
3c41(2): push %r14
3c43(5): mov 0x30(%rsp),%r9
3c48(5): mov 0x38(%rsp),%r8
3c4d(5): call 0xffffd873(%rip)
3c52(4): add $0x30,%rsp
3c56(4): add $0x28,%rsp
3c5a(1): pop %rbx
3c5b(1): pop %rbp
3c5c(2): pop %r12
3c5e(2): pop %r13
3c60(2): pop %r14
3c62(2): pop %r15
3c64(1): ret near (%rsp)
3c65(3): nop (%rax)
3c68(3): mov %rcx,%r8
3c6b(3): mov %rdx,%rcx
3c6e(7): lea 0x12df(%rip),%rdx
3c75(5): mov $0x1,%esi
3c7a(2): xor %eax,%eax
3c7c(5): call 0xffffd844(%rip)
3c81(5): jmp 0xfffffeeb(%rip)
3c86(a): nop 0x0(%rax,%rax,1)
3c90(4): mov 0x40(%rbx),%r10
3c94(4): mov 0x38(%rbx),%r9
3c98(7): lea 0x14e9(%rip),%rsi
3c9f(4): mov 0x10(%rbx),%rax
3ca3(4): mov 0x8(%rbx),%r8
3ca7(5): mov $0x5,%edx
3cac(4): mov 0x30(%rbx),%r13
3cb0(4): mov 0x28(%rbx),%r12
3cb4(4): mov 0x20(%rbx),%r15
3cb8(4): mov 0x18(%rbx),%r14
3cbc(3): mov (%rbx),%rbx
3cbf(5): mov %r10,0x18(%rsp)
3cc4(5): mov %r9,0x10(%rsp)
3cc9(4): mov %rax,(%rsp)
3ccd(5): mov %r8,0x8(%rsp)
3cd2(2): xor %edi,%edi
3cd4(5): call 0xffffd63c(%rip)
3cd9(5): mov 0x18(%rsp),%r10
3cde(2): push %r10
3ce0(5): jmp 0xffffff44(%rip)
3ce5(3): nop (%rax)
3ce8(3): mov (%rbx),%rbx
3ceb(7): lea 0x126d(%rip),%rsi
3cf2(5): mov $0x5,%edx
3cf7(2): xor %edi,%edi
3cf9(5): call 0xffffd617(%rip)
3cfe(4): add $0x28,%rsp
3d02(3): mov %rbx,%rcx
3d05(3): mov %rbp,%rdi
3d08(1): pop %rbx
3d09(1): pop %rbp
3d0a(2): pop %r12
3d0c(2): pop %r13
3d0e(2): pop %r14
3d10(2): pop %r15
3d12(3): mov %rax,%rdx
3d15(5): mov $0x1,%esi
3d1a(2): xor %eax,%eax
3d1c(5): jmp 0xffffd7a4(%rip)
3d21(7): nop 0x0(%rax)
3d28(4): mov 0x8(%rbx),%r12
3d2c(7): lea 0x123c(%rip),%rsi
3d33(3): mov (%rbx),%rbx
3d36(5): mov $0x5,%edx
3d3b(2): xor %edi,%edi
3d3d(5): call 0xffffd5d3(%rip)
3d42(4): add $0x28,%rsp
3d46(3): mov %r12,%r8
3d49(3): mov %rbx,%rcx
3d4c(3): mov %rbp,%rdi
3d4f(3): mov %rax,%rdx
3d52(5): mov $0x1,%esi
3d57(1): pop %rbx
3d58(1): pop %rbp
3d59(2): pop %r12
3d5b(2): pop %r13
3d5d(2): pop %r14
3d5f(2): pop %r15
3d61(2): xor %eax,%eax
3d63(5): jmp 0xffffd75d(%rip)
3d68(8): nop 0x0(%rax,%rax,1)
3d70(4): mov 0x10(%rbx),%r13
3d74(4): mov 0x8(%rbx),%r12
3d78(7): lea 0x1207(%rip),%rsi
3d7f(3): mov (%rbx),%rbx
3d82(5): mov $0x5,%edx
3d87(2): xor %edi,%edi
3d89(5): call 0xffffd587(%rip)
3d8e(4): add $0x28,%rsp
3d92(3): mov %r13,%r9
3d95(3): mov %r12,%r8
3d98(3): mov %rbx,%rcx
3d9b(3): mov %rbp,%rdi
3d9e(3): mov %rax,%rdx
3da1(1): pop %rbx
3da2(1): pop %rbp
3da3(2): pop %r12
3da5(2): pop %r13
3da7(2): pop %r14
3da9(2): pop %r15
3dab(5): mov $0x1,%esi
3db0(2): xor %eax,%eax
3db2(5): jmp 0xffffd70e(%rip)
3db7(9): nop 0x0(%rax,%rax,1)
3dc0(7): lea 0x12f1(%rip),%rsi
3dc7(5): mov $0x5,%edx
3dcc(2): xor %edi,%edi
3dce(4): mov 0x18(%rbx),%r14
3dd2(4): mov 0x10(%rbx),%r13
3dd6(4): mov 0x8(%rbx),%r12
3dda(3): mov (%rbx),%rbx
3ddd(5): call 0xffffd533(%rip)
3de2(4): sub $0x8,%rsp
3de6(2): push %r14
3de8(3): mov %rax,%rdx
3deb(3): mov %r13,%r9
3dee(3): mov %r12,%r8
3df1(3): mov %rbx,%rcx
3df4(3): mov %rbp,%rdi
3df7(5): mov $0x1,%esi
3dfc(2): xor %eax,%eax
3dfe(5): call 0xffffd6c2(%rip)
3e03(1): pop %rax
3e04(1): pop %rdx
3e05(4): add $0x28,%rsp
3e09(1): pop %rbx
3e0a(1): pop %rbp
3e0b(2): pop %r12
3e0d(2): pop %r13
3e0f(2): pop %r14
3e11(2): pop %r15
3e13(1): ret near (%rsp)
3e14(4): nop 0x0(%rax)
3e18(4): mov 0x20(%rbx),%r15
3e1c(7): lea 0x12b5(%rip),%rsi
3e23(5): mov $0x5,%edx
3e28(2): xor %edi,%edi
3e2a(4): mov 0x18(%rbx),%r14
3e2e(4): mov 0x10(%rbx),%r13
3e32(4): mov 0x8(%rbx),%r12
3e36(3): mov (%rbx),%rbx
3e39(5): call 0xffffd4d7(%rip)
3e3e(2): push %r15
3e40(2): jmp 0xffffffa6(%rip)
3e42(6): nop 0x0(%rax,%rax,1)
3e48(4): mov 0x8(%rbx),%r8
3e4c(4): mov 0x28(%rbx),%r12
3e50(7): lea 0x12a9(%rip),%rsi
3e57(4): mov 0x20(%rbx),%r15
3e5b(4): mov 0x18(%rbx),%r14
3e5f(5): mov $0x5,%edx
3e64(4): mov 0x10(%rbx),%r13
3e68(2): xor %edi,%edi
3e6a(3): mov (%rbx),%rbx
3e6d(4): mov %r8,(%rsp)
3e71(5): call 0xffffd49f(%rip)
3e76(4): sub $0x8,%rsp
3e7a(3): mov %r13,%r9
3e7d(2): push %r12
3e7f(2): push %r15
3e81(2): push %r14
3e83(5): mov 0x20(%rsp),%r8
3e88(3): mov %rbx,%rcx
3e8b(3): mov %rax,%rdx
3e8e(3): mov %rbp,%rdi
3e91(5): mov $0x1,%esi
3e96(2): xor %eax,%eax
3e98(5): call 0xffffd628(%rip)
3e9d(4): add $0x20,%rsp
3ea1(4): add $0x28,%rsp
3ea5(1): pop %rbx
3ea6(1): pop %rbp
3ea7(2): pop %r12
3ea9(2): pop %r13
3eab(2): pop %r14
3ead(2): pop %r15
3eaf(1): ret near (%rsp)
3eb0(4): mov 0x10(%rbx),%r9
3eb4(4): mov 0x30(%rbx),%r13
3eb8(7): lea 0x1269(%rip),%rsi
3ebf(4): mov 0x28(%rbx),%r12
3ec3(4): mov 0x20(%rbx),%r15
3ec7(5): mov $0x5,%edx
3ecc(4): mov 0x18(%rbx),%r14
3ed0(4): mov 0x8(%rbx),%r8
3ed4(2): xor %edi,%edi
3ed6(5): mov %r9,0x8(%rsp)
3edb(3): mov (%rbx),%rbx
3ede(4): mov %r8,(%rsp)
3ee2(5): call 0xffffd42e(%rip)
3ee7(2): push %r13
3ee9(2): push %r12
3eeb(2): push %r15
3eed(2): push %r14
3eef(5): mov 0x28(%rsp),%r9
3ef4(2): jmp 0xffffff8f(%rip)
3ef6(a): nop 0x0(%rax,%rax,1)
3f00(4): mov 0x40(%rbx),%r10
3f04(4): mov 0x38(%rbx),%r9
3f08(5): mov $0x5,%edx
3f0d(4): mov 0x10(%rbx),%rax
3f11(4): mov 0x8(%rbx),%r8
3f15(7): lea 0x12a4(%rip),%rsi
3f1c(4): mov 0x30(%rbx),%r13
3f20(4): mov 0x28(%rbx),%r12
3f24(4): mov 0x20(%rbx),%r15
3f28(4): mov 0x18(%rbx),%r14
3f2c(5): mov %r10,0x18(%rsp)
3f31(5): mov %r9,0x10(%rsp)
3f36(4): mov %rax,(%rsp)
3f3a(5): mov %r8,0x8(%rsp)
3f3f(3): mov (%rbx),%rbx
3f42(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3f50(3): xor %r9d,%r9d
3f53(4): cmp $0x0,(%r8)
3f57(2): jz 0x14(%rip)
3f59(7): nop 0x0(%rax)
3f60(4): add $0x1,%r9
3f64(5): cmp $0x0,0x0(%r8,%r9,8)
3f69(2): jnz 0xfffffff7(%rip)
3f6b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3f70(4): sub $0x68,%rsp
3f74(3): mov %r8,%r10
3f77(3): xor %r9d,%r9d
3f7a(9): mov $0x28,%rax
3f83(5): mov %rax,0x58(%rsp)
3f88(2): xor %eax,%eax
3f8a(3): mov %rsp,%r8
3f8d(3): nop (%rax)
3f90(3): mov (%r10),%eax
3f93(3): cmp $0x2f,%eax
3f96(2): jnbe 0x44(%rip)
3f98(3): mov %eax,%r11d
3f9b(4): add 0x10(%r10),%r11
3f9f(3): add $0x8,%eax
3fa2(3): mov %eax,(%r10)
3fa5(3): mov (%r11),%rax
3fa8(3): test %rax,%rax
3fab(4): mov %rax,0x0(%r8,%r9,8)
3faf(2): jz 0xc(%rip)
3fb1(4): add $0x1,%r9
3fb5(4): cmp $0xa,%r9
3fb9(2): jnz 0xffffffd7(%rip)
3fbb(5): call 0xfffffb75(%rip)
3fc0(5): mov 0x58(%rsp),%rax
3fc5(9): xor $0x28,%rax
3fce(2): jnz 0x7(%rip)
3fd0(4): add $0x68,%rsp
3fd4(1): ret near (%rsp)
3fd5(5): call 0xffffd36b(%rip)
3fda(4): mov 0x8(%r10),%r11
3fde(4): lea 0x8(%r11),%rax
3fe2(4): mov %rax,0x8(%r10)
3fe6(2): jmp 0xffffffbf(%rip)

"version_etc" :
3ff0(1): push %rbp
3ff1(1): push %rbx
3ff2(6): mov $0x20,%r10d
3ff8(3): xor %r11d,%r11d
3ffb(7): sub $0xb8,%rsp
4002(9): mov $0x28,%rax
400b(5): mov %rax,0x78(%rsp)
4010(2): xor %eax,%eax
4012(8): lea 0xd0(%rsp),%rax
401a(8): mov %r8,0xa0(%rsp)
4022(8): lea 0xd0(%rsp),%rbx
402a(5): lea 0x20(%rsp),%r8
402f(8): mov %r9,0xa8(%rsp)
4037(8): mov $0x20,0x8(%rsp)
403f(5): mov %rax,0x10(%rsp)
4044(8): lea 0x80(%rsp),%rax
404c(3): xor %r9d,%r9d
404f(5): mov %rax,0x18(%rsp)
4054(3): mov %rax,%rbp
4057(9): nop 0x0(%rax,%rax,1)
4060(4): cmp $0x2f,%r10d
4064(2): jnbe 0x58(%rip)
4066(3): mov %r10d,%eax
4069(6): mov $0x1,%r11d
406f(4): add $0x8,%r10d
4073(3): add %rbp,%rax
4076(3): mov (%rax),%rax
4079(3): test %rax,%rax
407c(4): mov %rax,0x0(%r8,%r9,8)
4080(2): jz 0xc(%rip)
4082(4): add $0x1,%r9
4086(4): cmp $0xa,%r9
408a(2): jnz 0xffffffd6(%rip)
408c(3): test %r11b,%r11b
408f(2): jnz 0x26(%rip)
4091(5): call 0xfffffa9f(%rip)
4096(5): mov 0x78(%rsp),%rax
409b(9): xor $0x28,%rax
40a4(2): jnz 0xc(%rip)
40a6(7): add $0xb8,%rsp
40ad(1): pop %rbx
40ae(1): pop %rbp
40af(1): ret near (%rsp)
40b0(5): call 0xffffd290(%rip)
40b5(5): mov %r10d,0x8(%rsp)
40ba(2): jmp 0xffffffd7(%rip)
40bc(3): mov %rbx,%rax
40bf(4): add $0x8,%rbx
40c3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
40d0(1): push %rbx
40d1(7): lea 0xeca(%rip),%rsi
40d8(5): mov $0x5,%edx
40dd(2): xor %edi,%edi
40df(5): call 0xffffd231(%rip)
40e4(7): lea 0xecc(%rip),%rdx
40eb(3): mov %rax,%rsi
40ee(5): mov $0x1,%edi
40f3(2): xor %eax,%eax
40f5(5): call 0xffffd36b(%rip)
40fa(7): lea 0xecc(%rip),%rsi
4101(5): mov $0x5,%edx
4106(2): xor %edi,%edi
4108(5): call 0xffffd208(%rip)
410d(7): lea 0x834(%rip),%rcx
4114(7): lea 0x6dd(%rip),%rdx
411b(3): mov %rax,%rsi
411e(5): mov $0x1,%edi
4123(2): xor %eax,%eax
4125(5): call 0xffffd33b(%rip)
412a(7): mov 0x202f57(%rip),%rbx
4131(7): lea 0x10c8(%rip),%rsi
4138(2): xor %edi,%edi
413a(5): mov $0x5,%edx
413f(5): call 0xffffd1d1(%rip)
4144(3): mov %rbx,%rsi
4147(3): mov %rax,%rdi
414a(1): pop %rbx
414b(5): jmp 0xffffd275(%rip)

"xmalloc" :
4150(1): push %rbx
4151(3): mov %rdi,%rbx
4154(5): call 0xffffd2ac(%rip)
4159(3): test %rax,%rax
415c(2): jnz 0x7(%rip)
415e(3): test %rbx,%rbx
4161(2): jnz 0x4(%rip)
4163(1): pop %rbx
4164(1): ret near (%rsp)
4165(5): call 0x23b(%rip)

"xnmalloc" :
4170(3): mov %rdi,%rax
4173(3): mul %rax,%rsi,%rdx
4176(3): mov %rax,%rdi
4179(3): seto %al
417c(3): test %rdi,%rdi
417f(2): js 0xc(%rip)
4181(3): movzx %al,%eax
4184(3): test %rax,%rax
4187(2): jnz 0x4(%rip)
4189(2): jmp 0xffffffc7(%rip)
418b(4): sub $0x8,%rsp
418f(5): call 0x211(%rip)

"xrealloc" :
41b0(3): test %rsi,%rsi
41b3(1): push %rbx
41b4(3): mov %rsi,%rbx
41b7(2): jnz 0x7(%rip)
41b9(3): test %rdi,%rdi
41bc(2): jnz 0x1c(%rip)
41be(3): mov %rbx,%rsi
41c1(5): call 0xffffd27f(%rip)
41c6(3): test %rax,%rax
41c9(2): jnz 0x7(%rip)
41cb(3): test %rbx,%rbx
41ce(2): jnz 0x13(%rip)
41d0(1): pop %rbx
41d1(1): ret near (%rsp)
41d2(6): nop 0x0(%rax,%rax,1)
41d8(5): call 0xffffd088(%rip)
41dd(2): xor %eax,%eax
41df(1): pop %rbx
41e0(1): ret near (%rsp)
41e1(5): call 0x1bf(%rip)

"xnrealloc" :
41f0(3): mov %rsi,%rax
41f3(3): mul %rax,%rdx,%rdx
41f6(3): mov %rax,%rsi
41f9(3): seto %al
41fc(3): test %rsi,%rsi
41ff(2): js 0xc(%rip)
4201(3): movzx %al,%eax
4204(3): test %rax,%rax
4207(2): jnz 0x4(%rip)
4209(2): jmp 0xffffffa7(%rip)
420b(4): sub $0x8,%rsp
420f(5): call 0x191(%rip)

"x2nrealloc" :
4220(3): test %rdi,%rdi
4223(3): mov %rdx,%r9
4226(3): mov (%rsi),%rcx
4229(2): jz 0x37(%rip)
422b(2): xor %edx,%edx
422d(a): mov $0x6148914691236517204,%rax
4237(3): div %r9,%rax
423a(3): cmp %rcx,%rax
423d(2): jbe 0x3e(%rip)
423f(3): mov %rcx,%rax
4242(3): shr $0x1,%rax
4245(5): lea 0x1(%rax,%rcx,1),%rcx
424a(3): mov %rcx,(%rsi)
424d(4): imul %r9,%rcx
4251(3): mov %rcx,%rsi
4254(5): jmp 0xffffff5c(%rip)
4259(7): nop 0x0(%rax)
4260(3): test %rcx,%rcx
4263(2): jz 0x25(%rip)
4265(3): mov %rcx,%rax
4268(3): mul %rax,%r9,%rdx
426b(3): seto %dl
426e(3): test %rax,%rax
4271(3): movzx %dl,%edx
4274(2): js 0x7(%rip)
4276(3): test %rdx,%rdx
4279(2): jz 0xffffffd1(%rip)
427b(4): sub $0x8,%rsp
427f(5): call 0x121(%rip)
4284(4): nop 0x0(%rax)
4288(2): xor %edx,%edx
428a(5): mov $0x80,%eax
428f(3): xor %r8d,%r8d
4292(3): div %r9,%rax
4295(3): test %rax,%rax
4298(4): setz %r8b
429c(4): lea 0x0(%r8,%rax,1),%rcx
42a0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
42b0(3): test %rdi,%rdi
42b3(3): mov (%rsi),%rax
42b6(2): jz 0x2a(%rip)
42b8(a): mov $0x6148914691236517203,%rdx
42c2(3): cmp %rdx,%rax
42c5(2): jnbe 0x2c(%rip)
42c7(3): mov %rax,%rdx
42ca(3): shr $0x1,%rdx
42cd(5): lea 0x1(%rdx,%rax,1),%rax
42d2(3): mov %rax,(%rsi)
42d5(3): mov %rax,%rsi
42d8(5): jmp 0xfffffed8(%rip)
42dd(3): nop (%rax)
42e0(3): test %rax,%rax
42e3(5): mov $0x80,%edx
42e8(4): cmove %rdx,%rax
42ec(3): test %rax,%rax
42ef(2): jns 0xffffffe3(%rip)
42f1(4): sub $0x8,%rsp
42f5(5): call 0xab(%rip)

"xzalloc" :
4300(1): push %rbx
4301(3): mov %rdi,%rbx
4304(5): call 0xfffffe4c(%rip)
4309(3): mov %rbx,%rdx
430c(2): xor %esi,%esi
430e(3): mov %rax,%rdi
4311(1): pop %rbx
4312(5): jmp 0xffffd07e(%rip)

"xcalloc" :
4320(3): mov %rdi,%rax
4323(4): sub $0x8,%rsp
4327(3): mul %rax,%rsi,%rdx
432a(3): seto %dl
432d(3): test %rax,%rax
4330(2): js 0x19(%rip)
4332(3): movzx %dl,%edx
4335(3): test %rdx,%rdx
4338(2): jnz 0x11(%rip)
433a(5): call 0xffffd096(%rip)
433f(3): test %rax,%rax
4342(2): jz 0x7(%rip)
4344(4): add $0x8,%rsp
4348(1): ret near (%rsp)
4349(5): call 0x57(%rip)

"xmemdup" :
4350(1): push %rbp
4351(1): push %rbx
4352(3): mov %rdi,%rbp
4355(3): mov %rsi,%rdi
4358(3): mov %rsi,%rbx
435b(4): sub $0x8,%rsp
435f(5): call 0xfffffdf1(%rip)
4364(4): add $0x8,%rsp
4368(3): mov %rbx,%rdx
436b(3): mov %rbp,%rsi
436e(1): pop %rbx
436f(1): pop %rbp
4370(3): mov %rax,%rdi
4373(5): jmp 0xffffd06d(%rip)

"xstrdup" :
4380(1): push %rbx
4381(3): mov %rdi,%rbx
4384(5): call 0xffffcfac(%rip)
4389(3): mov %rbx,%rdi
438c(4): lea 0x1(%rax),%rsi
4390(1): pop %rbx
4391(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
43a0(7): lea 0xf08(%rip),%rsi
43a7(4): sub $0x8,%rsp
43ab(5): mov $0x5,%edx
43b0(2): xor %edi,%edi
43b2(5): call 0xffffcf5e(%rip)
43b7(6): mov 0x202c5b(%rip),%edi
43bd(7): lea 0x662(%rip),%rdx
43c4(3): mov %rax,%rcx
43c7(2): xor %esi,%esi
43c9(2): xor %eax,%eax
43cb(5): call 0xffffd0a5(%rip)
43d0(5): call 0xffffcea0(%rip)

"rpl_mbrtowc" :
43e0(2): push %r13
43e2(2): push %r12
43e4(3): mov %rsi,%r13
43e7(1): push %rbp
43e8(1): push %rbx
43e9(3): mov %rdi,%rbx
43ec(3): mov %rdx,%r12
43ef(4): sub $0x18,%rsp
43f3(9): mov $0x28,%rax
43fc(5): mov %rax,0x8(%rsp)
4401(2): xor %eax,%eax
4403(5): lea 0x4(%rsp),%rax
4408(3): test %rdi,%rdi
440b(4): cmove %rax,%rbx
440f(3): mov %rbx,%rdi
4412(5): call 0xffffcf4e(%rip)
4417(4): cmp $0xfffffffd,%rax
441b(3): mov %rax,%rbp
441e(2): jbe 0x22(%rip)
4420(3): test %r12,%r12
4423(2): jz 0x1d(%rip)
4425(2): xor %edi,%edi
4427(5): call 0xc9(%rip)
442c(2): test %al,%al
442e(2): jnz 0x12(%rip)
4430(5): movzx 0x0(%r13),%eax
4435(5): mov $0x1,%ebp
443a(2): mov %eax,(%rbx)
443c(4): nop 0x0(%rax)
4440(5): mov 0x8(%rsp),%rdx
4445(9): xor $0x28,%rdx
444e(3): mov %rbp,%rax
4451(2): jnz 0xd(%rip)
4453(4): add $0x18,%rsp
4457(1): pop %rbx
4458(1): pop %rbp
4459(2): pop %r12
445b(2): pop %r13
445d(1): ret near (%rsp)
445e(5): call 0xffffcee2(%rip)

"close_stream" :
4470(2): push %r12
4472(1): push %rbp
4473(3): mov %rdi,%rbp
4476(1): push %rbx
4477(5): call 0xffffce39(%rip)
447c(3): mov 0x0(%rbp),%ebx
447f(3): mov %rbp,%rdi
4482(3): mov %rax,%r12
4485(5): call 0x10b(%rip)
448a(3): and $0x20,%ebx
448d(2): test %ebx,%ebx
448f(2): jnz 0x19(%rip)
4491(2): test %eax,%eax
4493(2): jz 0xc(%rip)
4495(3): test %r12,%r12
4498(5): mov $0xffffffff,%eax
449d(2): jz 0x3b(%rip)
449f(1): pop %rbx
44a0(1): pop %rbp
44a1(2): pop %r12
44a3(1): ret near (%rsp)
44a4(4): nop 0x0(%rax)
44a8(2): test %eax,%eax
44aa(2): jnz 0x1e(%rip)
44ac(5): call 0xffffcdd4(%rip)
44b1(6): mov $0x0,(%rax)
44b7(5): mov $0xffffffff,%eax
44bc(1): pop %rbx
44bd(1): pop %rbp
44be(2): pop %r12
44c0(1): ret near (%rsp)
44c1(7): nop 0x0(%rax)
44c8(1): pop %rbx
44c9(5): mov $0xffffffff,%eax
44ce(1): pop %rbp
44cf(2): pop %r12
44d1(1): ret near (%rsp)
44d2(6): nop 0x0(%rax,%rax,1)
44d8(5): call 0xffffcda8(%rip)
44dd(3): cmp $0x9,(%rax)
44e0(1): pop %rbx
44e1(1): pop %rbp
44e2(2): pop %r12
44e4(3): setnz %al
44e7(3): movzx %al,%eax
44ea(2): neg %eax
44ec(1): ret near (%rsp)

"hard_locale" :
44f0(4): sub $0x8,%rsp
44f4(2): xor %esi,%esi
44f6(5): call 0xffffcf5a(%rip)
44fb(3): mov %rax,%rdx
44fe(5): mov $0x1,%eax
4503(3): test %rdx,%rdx
4506(2): jz 0x1f(%rip)
4508(7): lea 0xdb1(%rip),%rdi
450f(5): mov $0x2,%ecx
4514(3): mov %rdx,%rsi
4517(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4519(3): setnbe %cl
451c(3): sbb $0x0,%cl
451f(2): xor %eax,%eax
4521(2): test %cl,%cl
4523(2): jnz 0xd(%rip)
4525(4): add $0x8,%rsp
4529(1): ret near (%rsp)
452a(6): nop 0x0(%rax,%rax,1)
4530(7): lea 0xd8b(%rip),%rdi
4537(5): mov $0x6,%ecx
453c(3): mov %rdx,%rsi
453f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4541(3): setnbe %al
4544(2): sbb $0x0,%al
4546(2): test %al,%al
4548(3): setnz %al
454b(4): add $0x8,%rsp
454f(1): ret near (%rsp)

"locale_charset" :
4550(4): sub $0x8,%rsp
4554(5): mov $0xe,%edi
4559(5): call 0xffffcec7(%rip)
455e(3): test %rax,%rax
4561(2): jz 0x1f(%rip)
4563(3): cmp $0x0,(%rax)
4566(7): lea 0xd5b(%rip),%rdx
456d(4): cmove %rdx,%rax
4571(4): add $0x8,%rsp
4575(1): ret near (%rsp)
4576(a): nop 0x0(%rax,%rax,1)
4580(7): lea 0xd41(%rip),%rax
4587(4): add $0x8,%rsp
458b(1): ret near (%rsp)

"rpl_fclose" :
4590(2): push %r12
4592(1): push %rbp
4593(1): push %rbx
4594(3): mov %rdi,%rbx
4597(5): call 0xffffce59(%rip)
459c(2): test %eax,%eax
459e(3): mov %rbx,%rdi
45a1(2): js 0x56(%rip)
45a3(5): call 0xffffce8d(%rip)
45a8(2): test %eax,%eax
45aa(2): jnz 0x2e(%rip)
45ac(3): mov %rbx,%rdi
45af(5): call 0x61(%rip)
45b4(2): test %eax,%eax
45b6(2): jz 0x3e(%rip)
45b8(5): call 0xffffccc8(%rip)
45bd(3): mov (%rax),%r12d
45c0(3): mov %rbx,%rdi
45c3(3): mov %rax,%rbp
45c6(5): call 0xffffcd1a(%rip)
45cb(3): test %r12d,%r12d
45ce(2): jnz 0x32(%rip)
45d0(1): pop %rbx
45d1(1): pop %rbp
45d2(2): pop %r12
45d4(1): ret near (%rsp)
45d5(3): nop (%rax)
45d8(3): mov %rbx,%rdi
45db(5): call 0xffffce15(%rip)
45e0(2): xor %esi,%esi
45e2(5): mov $0x1,%edx
45e7(2): mov %eax,%edi
45e9(5): call 0xffffcd97(%rip)
45ee(4): cmp $0xffffffff,%rax
45f2(2): jnz 0xffffffba(%rip)
45f4(3): mov %rbx,%rdi
45f7(1): pop %rbx
45f8(1): pop %rbp
45f9(2): pop %r12
45fb(5): jmp 0xffffcce5(%rip)
4600(4): mov %r12d,0x0(%rbp)
4604(5): mov $0xffffffff,%eax
4609(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4610(3): test %rdi,%rdi
4613(1): push %rbx
4614(3): mov %rdi,%rbx
4617(2): jz 0x13(%rip)
4619(5): call 0xffffce17(%rip)
461e(2): test %eax,%eax
4620(2): jz 0xa(%rip)
4622(6): test $0x100,(%rbx)
4628(2): jnz 0x10(%rip)
462a(3): mov %rbx,%rdi
462d(1): pop %rbx
462e(5): jmp 0xffffcde2(%rip)
4633(5): nop 0x0(%rax,%rax,1)
4638(3): mov %rbx,%rdi
463b(5): mov $0x1,%edx
4640(2): xor %esi,%esi
4642(5): call 0xe(%rip)
4647(3): mov %rbx,%rdi
464a(1): pop %rbx
464b(5): jmp 0xffffcdc5(%rip)

"rpl_fseeko" :
4650(4): mov 0x8(%rdi),%rax
4654(4): cmp %rax,0x10(%rdi)
4658(2): jz 0x8(%rip)
465a(5): jmp 0xffffce26(%rip)
465f(1): nop 
4660(4): mov 0x20(%rdi),%rax
4664(4): cmp %rax,0x28(%rdi)
4668(2): jnz 0xfffffff2(%rip)
466a(5): cmp $0x0,0x48(%rdi)
466f(2): jnz 0xffffffeb(%rip)
4671(2): push %r12
4673(1): push %rbp
4674(3): mov %edx,%r12d
4677(1): push %rbx
4678(3): mov %rsi,%rbp
467b(3): mov %rdi,%rbx
467e(5): call 0xffffcd72(%rip)
4683(3): mov %r12d,%edx
4686(3): mov %rbp,%rsi
4689(2): mov %eax,%edi
468b(5): call 0xffffccf5(%rip)
4690(4): cmp $0xffffffff,%rax
4694(2): jz 0xe(%rip)
4696(3): and $0xef,(%rbx)
4699(7): mov %rax,0x90(%rbx)
46a0(2): xor %eax,%eax
46a2(1): pop %rbx
46a3(1): pop %rbp
46a4(2): pop %r12
46a6(1): ret near (%rsp)

"__libc_csu_init" :
46b0(2): push %r15
46b2(2): push %r14
46b4(3): mov %rdx,%r15
46b7(2): push %r13
46b9(2): push %r12
46bb(7): lea 0x2024ee(%rip),%r12
46c2(1): push %rbp
46c3(7): lea 0x2024ee(%rip),%rbp
46ca(1): push %rbx
46cb(3): mov %edi,%r13d
46ce(3): mov %rsi,%r14
46d1(3): sub %r12,%rbp
46d4(4): sub $0x8,%rsp
46d8(4): sar $0x3,%rbp
46dc(5): call 0xffffcb54(%rip)
46e1(3): test %rbp,%rbp
46e4(2): jz 0x22(%rip)
46e6(2): xor %ebx,%ebx
46e8(8): nop 0x0(%rax,%rax,1)
46f0(3): mov %r15,%rdx
46f3(3): mov %r14,%rsi
46f6(3): mov %r13d,%edi
46f9(4): call 0x0(%r12,%rbx,8)
46fd(4): add $0x1,%rbx
4701(3): cmp %rbx,%rbp
4704(2): jnz 0xffffffec(%rip)
4706(4): add $0x8,%rsp
470a(1): pop %rbx
470b(1): pop %rbp
470c(2): pop %r12
470e(2): pop %r13
4710(2): pop %r14
4712(2): pop %r15
4714(1): ret near (%rsp)

"atexit" :
4730(7): mov 0x2028d1(%rip),%rdx
4737(2): xor %esi,%esi
4739(5): jmp 0xffffcd57(%rip)

"_fini" :
4740(4): sub $0x8,%rsp
4744(4): add $0x8,%rsp
4748(1): ret near (%rsp)

