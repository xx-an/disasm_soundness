
"abort@plt" :
1990(6): jmp 0x20d42a(%rip)
1996(5): push $0x0

"__errno_location@plt" :
19a0(6): jmp 0x20d422(%rip)
19a6(5): push $0x1

"strncmp@plt" :
19b0(6): jmp 0x20d41a(%rip)
19b6(5): push $0x2

"_exit@plt" :
19c0(6): jmp 0x20d412(%rip)
19c6(5): push $0x3

"__fpending@plt" :
19d0(6): jmp 0x20d40a(%rip)
19d6(5): push $0x4

"unlinkat@plt" :
19e0(6): jmp 0x20d402(%rip)
19e6(5): push $0x5

"qsort@plt" :
19f0(6): jmp 0x20d3fa(%rip)
19f6(5): push $0x6

"isatty@plt" :
1a00(6): jmp 0x20d3f2(%rip)
1a06(5): push $0x7

"faccessat@plt" :
1a10(6): jmp 0x20d3ea(%rip)
1a16(5): push $0x8

"fcntl@plt" :
1a20(6): jmp 0x20d3e2(%rip)
1a26(5): push $0x9

"textdomain@plt" :
1a30(6): jmp 0x20d3da(%rip)
1a36(5): push $0xa

"fclose@plt" :
1a40(6): jmp 0x20d3d2(%rip)
1a46(5): push $0xb

"bindtextdomain@plt" :
1a50(6): jmp 0x20d3ca(%rip)
1a56(5): push $0xc

"dcgettext@plt" :
1a60(6): jmp 0x20d3c2(%rip)
1a66(5): push $0xd

"__ctype_get_mb_cur_max@plt" :
1a70(6): jmp 0x20d3ba(%rip)
1a76(5): push $0xe

"strlen@plt" :
1a80(6): jmp 0x20d3b2(%rip)
1a86(5): push $0xf

"__lxstat@plt" :
1a90(6): jmp 0x20d3aa(%rip)
1a96(5): push $0x10

"openat@plt" :
1aa0(6): jmp 0x20d3a2(%rip)
1aa6(5): push $0x11

"__stack_chk_fail@plt" :
1ab0(6): jmp 0x20d39a(%rip)
1ab6(5): push $0x12

"getopt_long@plt" :
1ac0(6): jmp 0x20d392(%rip)
1ac6(5): push $0x13

"mbrtowc@plt" :
1ad0(6): jmp 0x20d38a(%rip)
1ad6(5): push $0x14

"__fxstatat@plt" :
1ae0(6): jmp 0x20d382(%rip)
1ae6(5): push $0x15

"__overflow@plt" :
1af0(6): jmp 0x20d37a(%rip)
1af6(5): push $0x16

"strrchr@plt" :
1b00(6): jmp 0x20d372(%rip)
1b06(5): push $0x17

"lseek@plt" :
1b10(6): jmp 0x20d36a(%rip)
1b16(5): push $0x18

"__assert_fail@plt" :
1b20(6): jmp 0x20d362(%rip)
1b26(5): push $0x19

"memset@plt" :
1b30(6): jmp 0x20d35a(%rip)
1b36(5): push $0x1a

"geteuid@plt" :
1b40(6): jmp 0x20d352(%rip)
1b46(5): push $0x1b

"close@plt" :
1b50(6): jmp 0x20d34a(%rip)
1b56(5): push $0x1c

"closedir@plt" :
1b60(6): jmp 0x20d342(%rip)
1b66(5): push $0x1d

"memcmp@plt" :
1b70(6): jmp 0x20d33a(%rip)
1b76(5): push $0x1e

"fputs_unlocked@plt" :
1b80(6): jmp 0x20d332(%rip)
1b86(5): push $0x1f

"calloc@plt" :
1b90(6): jmp 0x20d32a(%rip)
1b96(5): push $0x20

"__getdelim@plt" :
1ba0(6): jmp 0x20d322(%rip)
1ba6(5): push $0x21

"strcmp@plt" :
1bb0(6): jmp 0x20d31a(%rip)
1bb6(5): push $0x22

"dirfd@plt" :
1bc0(6): jmp 0x20d312(%rip)
1bc6(5): push $0x23

"rpmatch@plt" :
1bd0(6): jmp 0x20d30a(%rip)
1bd6(5): push $0x24

"memcpy@plt" :
1be0(6): jmp 0x20d302(%rip)
1be6(5): push $0x25

"fileno@plt" :
1bf0(6): jmp 0x20d2fa(%rip)
1bf6(5): push $0x26

"__xstat@plt" :
1c00(6): jmp 0x20d2f2(%rip)
1c06(5): push $0x27

"readdir@plt" :
1c10(6): jmp 0x20d2ea(%rip)
1c16(5): push $0x28

"malloc@plt" :
1c20(6): jmp 0x20d2e2(%rip)
1c26(5): push $0x29

"fflush@plt" :
1c30(6): jmp 0x20d2da(%rip)
1c36(5): push $0x2a

"nl_langinfo@plt" :
1c40(6): jmp 0x20d2d2(%rip)
1c46(5): push $0x2b

"__fxstat@plt" :
1c50(6): jmp 0x20d2ca(%rip)
1c56(5): push $0x2c

"__freading@plt" :
1c60(6): jmp 0x20d2c2(%rip)
1c66(5): push $0x2d

"fchdir@plt" :
1c70(6): jmp 0x20d2ba(%rip)
1c76(5): push $0x2e

"realloc@plt" :
1c80(6): jmp 0x20d2b2(%rip)
1c86(5): push $0x2f

"setlocale@plt" :
1c90(6): jmp 0x20d2aa(%rip)
1c96(5): push $0x30

"__printf_chk@plt" :
1ca0(6): jmp 0x20d2a2(%rip)
1ca6(5): push $0x31

"mempcpy@plt" :
1cb0(6): jmp 0x20d29a(%rip)
1cb6(5): push $0x32

"memmove@plt" :
1cc0(6): jmp 0x20d292(%rip)
1cc6(5): push $0x33

"error@plt" :
1cd0(6): jmp 0x20d28a(%rip)
1cd6(5): push $0x34

"open@plt" :
1ce0(6): jmp 0x20d282(%rip)
1ce6(5): push $0x35

"fseeko@plt" :
1cf0(6): jmp 0x20d27a(%rip)
1cf6(5): push $0x36

"dcngettext@plt" :
1d00(6): jmp 0x20d272(%rip)
1d06(5): push $0x37

"fdopendir@plt" :
1d10(6): jmp 0x20d26a(%rip)
1d16(5): push $0x38

"fstatfs@plt" :
1d20(6): jmp 0x20d262(%rip)
1d26(5): push $0x39

"__cxa_atexit@plt" :
1d30(6): jmp 0x20d25a(%rip)
1d36(5): push $0x3a

"exit@plt" :
1d40(6): jmp 0x20d252(%rip)
1d46(5): push $0x3b

"fwrite@plt" :
1d50(6): jmp 0x20d24a(%rip)
1d56(5): push $0x3c

"__fprintf_chk@plt" :
1d60(6): jmp 0x20d242(%rip)
1d66(5): push $0x3d

"mbsinit@plt" :
1d70(6): jmp 0x20d23a(%rip)
1d76(5): push $0x3e

"iswprint@plt" :
1d80(6): jmp 0x20d232(%rip)
1d86(5): push $0x3f

"__ctype_b_loc@plt" :
1d90(6): jmp 0x20d22a(%rip)
1d96(5): push $0x40

".plt.got" :
1da0(6): jmp 0x20d222(%rip)
1da6(2): nop 
1da8(6): jmp 0x20d242(%rip)
1dae(2): nop 

"_init" :
1960(4): sub $0x8,%rsp
1964(7): mov 0x20d675(%rip),%rax
196b(3): test %rax,%rax
196e(2): jz 0x4(%rip)
1970(2): call %rax
1972(4): add $0x8,%rsp
1976(1): ret near (%rsp)

"main" :
1db0(2): push %r14
1db2(2): push %r13
1db4(7): lea 0x8c35(%rip),%r13
1dbb(2): push %r12
1dbd(1): push %rbp
1dbe(2): mov %edi,%ebp
1dc0(1): push %rbx
1dc1(3): mov %rsi,%rbx
1dc4(6): mov $0x1,%r14d
1dca(7): sub $0xc0,%rsp
1dd1(3): mov (%rsi),%rdi
1dd4(9): mov $0x28,%rax
1ddd(8): mov %rax,0xb8(%rsp)
1de5(2): xor %eax,%eax
1de7(5): call 0x2349(%rip)
1dec(7): lea 0xa0ae(%rip),%rsi
1df3(5): mov $0x6,%edi
1df8(5): call 0xfffffe98(%rip)
1dfd(7): lea 0x8bc6(%rip),%rsi
1e04(7): lea 0x8b96(%rip),%rdi
1e0b(5): call 0xfffffc45(%rip)
1e10(7): lea 0x8b8a(%rip),%rdi
1e17(5): call 0xfffffc19(%rip)
1e1c(7): lea 0x1e6d(%rip),%rdi
1e23(5): call 0x8acd(%rip)
1e28(2): xor %edi,%edi
1e2a(4): mov $0x0,(%rsp)
1e2e(8): mov $0x4,0x4(%rsp)
1e36(5): mov $0x0,0x8(%rsp)
1e3b(5): mov $0x0,0xa(%rsp)
1e40(5): mov $0x0,0x9(%rsp)
1e45(9): mov $0x0,0x10(%rsp)
1e4e(5): mov $0x0,0x18(%rsp)
1e53(5): call 0xfffffbad(%rip)
1e58(2): test %eax,%eax
1e5a(5): mov $0x0,0x1a(%rsp)
1e5f(5): mov $0x0,0x1b(%rsp)
1e64(5): setnz 0x19(%rsp)
1e69(3): xor %r12d,%r12d
1e6c(4): nop 0x0(%rax)
1e70(7): lea 0x20cb69(%rip),%rcx
1e77(7): lea 0x8bc5(%rip),%rdx
1e7e(3): xor %r8d,%r8d
1e81(3): mov %rbx,%rsi
1e84(2): mov %ebp,%edi
1e86(5): call 0xfffffc3a(%rip)
1e8b(3): cmp $0xff,%eax
1e8e(6): jz 0x230(%rip)
1e94(3): cmp $0x69,%eax
1e97(6): jz 0xd9(%rip)
1e9d(2): jle 0x33(%rip)
1e9f(5): cmp $0x81,%eax
1ea4(6): jz 0x1dc(%rip)
1eaa(2): jle 0x5e(%rip)
1eac(5): cmp $0x83,%eax
1eb1(6): jz 0x18f(%rip)
1eb7(6): jl 0x159(%rip)
1ebd(5): cmp $0x84,%eax
1ec2(6): jnz 0x1dd(%rip)
1ec8(5): mov $0x1,0x19(%rsp)
1ecd(2): jmp 0xffffffa3(%rip)
1ecf(1): nop 
1ed0(3): cmp $0x49,%eax
1ed3(6): jz 0xb5(%rip)
1ed9(6): jle 0xc7(%rip)
1edf(3): cmp $0x64,%eax
1ee2(6): jz 0x1ae(%rip)
1ee8(3): cmp $0x66,%eax
1eeb(6): jnz 0x1c4(%rip)
1ef1(8): mov $0x5,0x4(%rsp)
1ef9(4): mov $0x1,(%rsp)
1efd(3): xor %r12d,%r12d
1f00(5): jmp 0xffffff70(%rip)
1f05(3): nop (%rax)
1f08(3): cmp $0x76,%eax
1f0b(6): jz 0xf5(%rip)
1f11(5): cmp $0x80,%eax
1f16(6): jnz 0x184(%rip)
1f1c(7): mov 0x20d19d(%rip),%rsi
1f23(3): test %rsi,%rsi
1f26(2): jz 0x4a(%rip)
1f28(7): mov 0x20d0e9(%rip),%r9
1f2f(7): lea 0x20ca6a(%rip),%rdx
1f36(7): lea 0x9513(%rip),%rcx
1f3d(7): lea 0x8a9e(%rip),%rdi
1f44(6): mov $0x4,%r8d
1f4a(5): call 0x1c76(%rip)
1f4f(7): lea 0x94fa(%rip),%rdx
1f56(3): mov 0x0(%rdx,%rax,4),%eax
1f59(3): cmp $0x1,%eax
1f5c(2): jz 0x2c(%rip)
1f5e(6): jb 0x265(%rip)
1f64(3): cmp $0x2,%eax
1f67(6): jnz 0xffffff09(%rip)
1f6d(3): nop (%rax)
1f70(8): mov $0x3,0x4(%rsp)
1f78(4): mov $0x0,(%rsp)
1f7c(3): xor %r12d,%r12d
1f7f(5): jmp 0xfffffef1(%rip)
1f84(4): nop 0x0(%rax)
1f88(8): mov $0x4,0x4(%rsp)
1f90(4): mov $0x0,(%rsp)
1f94(6): mov $0x1,%r12d
1f9a(5): jmp 0xfffffed6(%rip)
1f9f(1): nop 
1fa0(5): cmp $0xffffff7d,%eax
1fa5(6): jnz 0x34c(%rip)
1fab(7): lea 0x8a70(%rip),%rax
1fb2(4): sub $0x8,%rsp
1fb6(7): mov 0x20d0eb(%rip),%rdi
1fbd(2): push $0x0
1fbf(7): mov 0x20d04a(%rip),%rcx
1fc6(7): lea 0x8a3a(%rip),%r9
1fcd(1): push %rax
1fce(7): lea 0x8a5a(%rip),%rax
1fd5(7): lea 0x8a3b(%rip),%r8
1fdc(7): lea 0x89ba(%rip),%rdx
1fe3(7): lea 0x893a(%rip),%rsi
1fea(1): push %rax
1feb(2): xor %eax,%eax
1fed(5): call 0x43b3(%rip)
1ff2(4): add $0x20,%rsp
1ff6(2): xor %edi,%edi
1ff8(5): call 0xfffffd48(%rip)
1ffd(3): nop (%rax)
2000(5): mov $0x1,0x1a(%rsp)
2005(5): jmp 0xfffffe6b(%rip)
200a(6): nop 0x0(%rax,%rax,1)
2010(7): movsxd 0x20d0a1(%rip),%rax
2017(5): mov $0x13,%ecx
201c(3): mov %r13,%rdi
201f(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2024(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2026(3): setnbe %al
2029(2): sbb $0x0,%al
202b(2): test %al,%al
202d(6): jnz 0x338(%rip)
2033(3): xor %r14d,%r14d
2036(5): jmp 0xfffffe3a(%rip)
203b(5): nop 0x0(%rax,%rax,1)
2040(7): mov 0x20d079(%rip),%r14
2047(3): test %r14,%r14
204a(6): jz 0x13b(%rip)
2050(7): lea 0x89ac(%rip),%rsi
2057(3): mov %r14,%rdi
205a(5): call 0xfffffb56(%rip)
205f(2): test %eax,%eax
2061(6): jnz 0x2cd(%rip)
2067(5): mov $0x1,0x18(%rsp)
206c(6): mov $0x1,%r14d
2072(5): jmp 0xfffffdfe(%rip)
2077(9): nop 0x0(%rax,%rax,1)
2080(5): mov $0x1,0x8(%rsp)
2085(5): jmp 0xfffffdeb(%rip)
208a(6): nop 0x0(%rax,%rax,1)
2090(5): mov $0x1,0xa(%rsp)
2095(5): jmp 0xfffffddb(%rip)
209a(3): cmp $0x72,%eax
209d(2): jz 0x17(%rip)
209f(6): mov $0x1,%r12d
20a5(5): lea 0x20(%rsp),%r14
20aa(5): jmp 0x12d(%rip)
20af(3): cmp $0x52,%eax
20b2(2): jnz 0xffffffed(%rip)
20b4(5): mov $0x1,0x9(%rsp)
20b9(5): jmp 0xfffffdb7(%rip)
20be(6): cmp %ebp,0x20cff4(%rip)
20c4(6): jnl 0xcc(%rip)
20ca(5): cmp $0x0,0x9(%rsp)
20cf(2): jz 0xb(%rip)
20d1(3): test %r14b,%r14b
20d4(6): jnz 0x1c0(%rip)
20da(7): movsxd 0x20cfd7(%rip),%rdx
20e1(3): test %r12b,%r12b
20e4(4): lea 0x0(%rbx,%rdx,8),%r13
20e8(2): jz 0x62(%rip)
20ea(2): sub %edx,%ebp
20ec(5): cmp $0x0,0x9(%rsp)
20f1(3): movsxd %ebp,%rbx
20f4(6): jnz 0x176(%rip)
20fa(4): cmp $0x3,%rbx
20fe(2): jbe 0x4c(%rip)
2100(7): lea 0x8985(%rip),%rdx
2107(7): lea 0x8999(%rip),%rsi
210e(6): mov $0x5,%r8d
2114(3): mov %rbx,%rcx
2117(2): xor %edi,%edi
2119(7): mov 0x20cff8(%rip),%rbp
2120(5): call 0xfffffbe0(%rip)
2125(7): mov 0x20cfb4(%rip),%rdi
212c(3): mov %rax,%rdx
212f(3): mov %rbx,%r8
2132(3): mov %rbp,%rcx
2135(5): mov $0x1,%esi
213a(2): xor %eax,%eax
213c(5): call 0xfffffc24(%rip)
2141(5): call 0x470f(%rip)
2146(2): test %al,%al
2148(2): jz 0x52(%rip)
214a(3): mov %rsp,%rsi
214d(3): mov %r13,%rdi
2150(5): call 0xf40(%rip)
2155(3): lea 0xfffffffe(%rax),%edx
2158(3): cmp $0x4,%eax
215b(3): setz %al
215e(3): cmp $0x2,%edx
2161(3): movzx %al,%eax
2164(2): jbe 0x38(%rip)
2166(7): lea 0x92d3(%rip),%rcx
216d(7): lea 0x88e7(%rip),%rsi
2174(7): lea 0x88fb(%rip),%rdi
217b(5): mov $0x173,%edx
2180(5): call 0xfffff9a0(%rip)
2185(6): mov $0x1,%r14d
218b(5): jmp 0xfffffce5(%rip)
2190(4): cmp $0x0,(%rsp)
2194(6): jz 0x174(%rip)
219a(2): xor %eax,%eax
219c(8): mov 0xb8(%rsp),%rdx
21a4(9): xor $0x28,%rdx
21ad(6): jnz 0x156(%rip)
21b3(7): add $0xc0,%rsp
21ba(1): pop %rbx
21bb(1): pop %rbp
21bc(2): pop %r12
21be(2): pop %r13
21c0(2): pop %r14
21c2(1): ret near (%rsp)
21c3(8): mov $0x5,0x4(%rsp)
21cb(3): xor %r12d,%r12d
21ce(5): jmp 0xfffffca2(%rip)
21d3(4): add $0x1,%r12
21d7(3): cmp %r12d,%ebp
21da(6): jle 0x86(%rip)
21e0(4): mov 0x0(%rbx,%r12,8),%r13
21e4(5): cmp $0x2d,0x0(%r13)
21e9(2): jnz 0xffffffea(%rip)
21eb(5): cmp $0x0,0x1(%r13)
21f0(2): jz 0xffffffe3(%rip)
21f2(3): mov %r14,%rdx
21f5(3): mov %r13,%rsi
21f8(5): mov $0x1,%edi
21fd(5): call 0xfffff893(%rip)
2202(2): test %eax,%eax
2204(2): jnz 0xffffffcf(%rip)
2206(3): mov %r13,%rsi
2209(5): mov $0x4,%edi
220e(5): call 0x3962(%rip)
2213(3): mov %r13,%rdx
2216(5): mov $0x3,%esi
221b(5): mov $0x1,%edi
2220(3): mov %rax,%r12
2223(5): call 0x382d(%rip)
2228(7): lea 0x9171(%rip),%rsi
222f(3): mov (%rbx),%rbx
2232(5): mov $0x5,%edx
2237(2): xor %edi,%edi
2239(3): mov %rax,%rbp
223c(5): call 0xfffff824(%rip)
2241(7): mov 0x20ce98(%rip),%rdi
2248(3): mov %rax,%rdx
224b(3): mov %r12,%r9
224e(3): mov %rbp,%r8
2251(3): mov %rbx,%rcx
2254(5): mov $0x1,%esi
2259(2): xor %eax,%eax
225b(5): call 0xfffffb05(%rip)
2260(5): mov $0x1,%edi
2265(5): call 0x23b(%rip)
226a(7): lea 0x9177(%rip),%rdx
2271(7): lea 0x9198(%rip),%rsi
2278(6): mov $0x5,%r8d
227e(3): mov %rbx,%rcx
2281(2): xor %edi,%edi
2283(7): mov 0x20ce8e(%rip),%rbp
228a(5): call 0xfffffa76(%rip)
228f(5): jmp 0xfffffe96(%rip)
2294(7): lea 0x20ce55(%rip),%rdi
229b(5): call 0x3bc5(%rip)
22a0(3): test %rax,%rax
22a3(5): mov %rax,0x10(%rsp)
22a8(6): jnz 0xfffffe32(%rip)
22ae(7): lea 0x96c1(%rip),%rsi
22b5(5): mov $0x4,%edi
22ba(5): call 0x38b6(%rip)
22bf(7): lea 0x9102(%rip),%rsi
22c6(5): mov $0x5,%edx
22cb(2): xor %edi,%edi
22cd(3): mov %rax,%rbp
22d0(5): call 0xfffff790(%rip)
22d5(3): mov %rax,%rbx
22d8(5): call 0xfffff6c8(%rip)
22dd(2): mov (%rax),%esi
22df(3): mov %rbp,%rcx
22e2(3): mov %rbx,%rdx
22e5(5): mov $0x1,%edi
22ea(2): xor %eax,%eax
22ec(5): call 0xfffff9e4(%rip)
22f1(5): cmp $0xffffff7e,%eax
22f6(6): jnz 0xfffffda9(%rip)
22fc(2): xor %edi,%edi
22fe(5): call 0x1a2(%rip)
2303(5): call 0xfffff7ad(%rip)
2308(7): lea 0x873c(%rip),%rsi
230f(2): xor %edi,%edi
2311(5): mov $0x5,%edx
2316(5): call 0xfffff74a(%rip)
231b(2): xor %esi,%esi
231d(3): mov %rax,%rdx
2320(2): xor %edi,%edi
2322(2): xor %eax,%eax
2324(5): call 0xfffff9ac(%rip)
2329(5): jmp 0xffffff37(%rip)
232e(3): mov %r14,%rsi
2331(5): mov $0x4,%edi
2336(5): call 0x383a(%rip)
233b(7): lea 0x902e(%rip),%rsi
2342(3): mov %rax,%rbx
2345(5): mov $0x5,%edx
234a(2): xor %edi,%edi
234c(5): call 0xfffff714(%rip)
2351(3): mov %rbx,%rcx
2354(3): mov %rax,%rdx
2357(2): xor %esi,%esi
2359(5): mov $0x1,%edi
235e(2): xor %eax,%eax
2360(5): call 0xfffff970(%rip)
2365(7): lea 0x8fcc(%rip),%rsi
236c(5): mov $0x5,%edx
2371(2): xor %edi,%edi
2373(5): call 0xfffff6ed(%rip)
2378(2): xor %esi,%esi
237a(3): mov %rax,%rdx
237d(5): mov $0x1,%edi
2382(2): xor %eax,%eax
2384(5): call 0xfffff94c(%rip)
2389(7): nop 0x0(%rax)
2390(2): xor %ebp,%ebp
2392(3): mov %rdx,%r9
2395(1): pop %rsi
2396(3): mov %rsp,%rdx
2399(4): and $0xfffffff0,%rsp
239d(1): push %rax
239e(1): push %rsp
239f(7): lea 0x853a(%rip),%r8
23a6(7): lea 0x84c3(%rip),%rcx
23ad(7): lea 0xfffff9fc(%rip),%rdi
23b4(6): call 0x20cc1e(%rip)
23ba(1): hlt 

"_start" :
2390(2): xor %ebp,%ebp
2392(3): mov %rdx,%r9
2395(1): pop %rsi
2396(3): mov %rsp,%rdx
2399(4): and $0xfffffff0,%rsp
239d(1): push %rax
239e(1): push %rsp
239f(7): lea 0x853a(%rip),%r8
23a6(7): lea 0x84c3(%rip),%rcx
23ad(7): lea 0xfffff9fc(%rip),%rdi
23b4(6): call 0x20cc1e(%rip)
23ba(1): hlt 

"deregister_tm_clones" :
23c0(7): lea 0x20ccd9(%rip),%rdi
23c7(1): push %rbp
23c8(7): lea 0x20ccd1(%rip),%rax
23cf(3): cmp %rdi,%rax
23d2(3): mov %rsp,%rbp
23d5(2): jz 0x1b(%rip)
23d7(7): mov 0x20cbf2(%rip),%rax
23de(3): test %rax,%rax
23e1(2): jz 0xf(%rip)
23e3(1): pop %rbp
23e4(2): jmp %rax
23e6(a): nop 0x0(%rax,%rax,1)
23f0(1): pop %rbp
23f1(1): ret near (%rsp)

"register_tm_clones" :
2400(7): lea 0x20cc99(%rip),%rdi
2407(7): lea 0x20cc92(%rip),%rsi
240e(1): push %rbp
240f(3): sub %rdi,%rsi
2412(3): mov %rsp,%rbp
2415(4): sar $0x3,%rsi
2419(3): mov %rsi,%rax
241c(4): shr $0x3f,%rax
2420(3): add %rax,%rsi
2423(3): sar $0x1,%rsi
2426(2): jz 0x1a(%rip)
2428(7): mov 0x20cbb9(%rip),%rax
242f(3): test %rax,%rax
2432(2): jz 0xe(%rip)
2434(1): pop %rbp
2435(2): jmp %rax
2437(9): nop 0x0(%rax,%rax,1)
2440(1): pop %rbp
2441(1): ret near (%rsp)

"__do_global_dtors_aux" :
2450(7): cmp $0x0,0x20cc91(%rip)
2457(2): jnz 0x31(%rip)
2459(8): cmp $0x0,0x20cb8f(%rip)
2461(1): push %rbp
2462(3): mov %rsp,%rbp
2465(2): jz 0xe(%rip)
2467(7): mov 0x20cb9a(%rip),%rdi
246e(5): call 0xfffff93a(%rip)
2473(5): call 0xffffff4d(%rip)
2478(7): mov $0x1,0x20cc69(%rip)
247f(1): pop %rbp
2480(1): ret near (%rsp)
2481(7): nop 0x0(%rax)
2488(2): REP ret near (%rsp)

"frame_dummy" :
2490(1): push %rbp
2491(3): mov %rsp,%rbp
2494(1): pop %rbp
2495(5): jmp 0xffffff6b(%rip)

"usage" :
24a0(2): push %r13
24a2(2): push %r12
24a4(5): mov $0x5,%edx
24a9(1): push %rbp
24aa(1): push %rbx
24ab(2): mov %edi,%ebp
24ad(7): sub $0x88,%rsp
24b4(7): mov 0x20cc5d(%rip),%rbx
24bb(9): mov $0x28,%rax
24c4(5): mov %rax,0x78(%rsp)
24c9(2): xor %eax,%eax
24cb(2): test %edi,%edi
24cd(2): jz 0x30(%rip)
24cf(7): lea 0x8652(%rip),%rsi
24d6(2): xor %edi,%edi
24d8(5): call 0xfffff588(%rip)
24dd(7): mov 0x20cbfc(%rip),%rdi
24e4(3): mov %rax,%rdx
24e7(3): mov %rbx,%rcx
24ea(5): mov $0x1,%esi
24ef(2): xor %eax,%eax
24f1(5): call 0xfffff86f(%rip)
24f6(2): mov %ebp,%edi
24f8(5): call 0xfffff848(%rip)
24fd(7): lea 0x864c(%rip),%rsi
2504(2): xor %edi,%edi
2506(5): call 0xfffff55a(%rip)
250b(3): mov %rbx,%rdx
250e(3): mov %rax,%rsi
2511(5): mov $0x1,%edi
2516(2): xor %eax,%eax
2518(5): call 0xfffff788(%rip)
251d(7): mov 0x20cb84(%rip),%rbx
2524(7): lea 0x864d(%rip),%rsi
252b(5): mov $0x5,%edx
2530(2): xor %edi,%edi
2532(5): call 0xfffff52e(%rip)
2537(3): mov %rbx,%rsi
253a(3): mov %rax,%rdi
253d(5): call 0xfffff643(%rip)
2542(7): mov 0x20cb5f(%rip),%rbx
2549(7): lea 0x86c8(%rip),%rsi
2550(5): mov $0x5,%edx
2555(2): xor %edi,%edi
2557(5): call 0xfffff509(%rip)
255c(3): mov %rbx,%rsi
255f(3): mov %rax,%rdi
2562(5): call 0xfffff61e(%rip)
2567(7): mov 0x20cb3a(%rip),%rbx
256e(7): lea 0x881b(%rip),%rsi
2575(5): mov $0x5,%edx
257a(2): xor %edi,%edi
257c(5): call 0xfffff4e4(%rip)
2581(3): mov %rbx,%rsi
2584(3): mov %rax,%rdi
2587(5): call 0xfffff5f9(%rip)
258c(7): mov 0x20cb15(%rip),%rbx
2593(7): lea 0x88d6(%rip),%rsi
259a(5): mov $0x5,%edx
259f(2): xor %edi,%edi
25a1(5): call 0xfffff4bf(%rip)
25a6(3): mov %rbx,%rsi
25a9(3): mov %rax,%rdi
25ac(5): call 0xfffff5d4(%rip)
25b1(7): mov 0x20caf0(%rip),%rbx
25b8(7): lea 0x89b1(%rip),%rsi
25bf(5): mov $0x5,%edx
25c4(2): xor %edi,%edi
25c6(5): call 0xfffff49a(%rip)
25cb(3): mov %rbx,%rsi
25ce(3): mov %rax,%rdi
25d1(5): call 0xfffff5af(%rip)
25d6(7): mov 0x20cacb(%rip),%rbx
25dd(7): lea 0x8a3c(%rip),%rsi
25e4(5): mov $0x5,%edx
25e9(2): xor %edi,%edi
25eb(5): call 0xfffff475(%rip)
25f0(3): mov %rbx,%rsi
25f3(3): mov %rax,%rdi
25f6(5): call 0xfffff58a(%rip)
25fb(7): mov 0x20caa6(%rip),%rbx
2602(7): lea 0x8a47(%rip),%rsi
2609(5): mov $0x5,%edx
260e(2): xor %edi,%edi
2610(5): call 0xfffff450(%rip)
2615(3): mov %rbx,%rsi
2618(3): mov %rax,%rdi
261b(5): call 0xfffff565(%rip)
2620(7): mov 0x20ca81(%rip),%rbx
2627(7): lea 0x8a5a(%rip),%rsi
262e(5): mov $0x5,%edx
2633(2): xor %edi,%edi
2635(5): call 0xfffff42b(%rip)
263a(3): mov %rbx,%rsi
263d(3): mov %rax,%rdi
2640(5): call 0xfffff540(%rip)
2645(7): mov 0x20cacc(%rip),%rbx
264c(7): lea 0x8ad5(%rip),%rsi
2653(2): xor %edi,%edi
2655(5): mov $0x5,%edx
265a(5): call 0xfffff406(%rip)
265f(3): mov %rbx,%rcx
2662(3): mov %rbx,%rdx
2665(3): mov %rax,%rsi
2668(5): mov $0x1,%edi
266d(2): xor %eax,%eax
266f(5): call 0xfffff631(%rip)
2674(7): mov 0x20ca2d(%rip),%rbx
267b(7): lea 0x8b26(%rip),%rsi
2682(5): mov $0x5,%edx
2687(2): xor %edi,%edi
2689(5): call 0xfffff3d7(%rip)
268e(3): mov %rbx,%rsi
2691(3): mov %rax,%rdi
2694(7): lea 0x8289(%rip),%rbx
269b(5): call 0xfffff4e5(%rip)
26a0(7): lea 0x8280(%rip),%rax
26a7(7): lea 0x82ba(%rip),%rcx
26ae(9): mov $0x0,0x60(%rsp)
26b7(9): mov $0x0,0x68(%rsp)
26c0(3): mov %rsp,%rdx
26c3(4): mov %rax,(%rsp)
26c7(7): lea 0x825b(%rip),%rax
26ce(5): mov %rcx,0x30(%rsp)
26d3(7): lea 0x8298(%rip),%rcx
26da(5): mov %rax,0x8(%rsp)
26df(7): lea 0x82bb(%rip),%rax
26e6(5): mov %rcx,0x40(%rsp)
26eb(7): lea 0x828a(%rip),%rcx
26f2(5): mov %rax,0x10(%rsp)
26f7(7): lea 0x823b(%rip),%rax
26fe(5): mov %rcx,0x50(%rsp)
2703(5): mov %rax,0x18(%rsp)
2708(7): lea 0x8240(%rip),%rax
270f(5): mov %rax,0x20(%rsp)
2714(7): lea 0x823e(%rip),%rax
271b(5): mov %rax,0x28(%rsp)
2720(5): mov %rax,0x38(%rsp)
2725(5): mov %rax,0x48(%rsp)
272a(5): mov %rax,0x58(%rsp)
272f(1): nop 
2730(4): add $0x10,%rdx
2734(3): mov (%rdx),%rdi
2737(3): test %rdi,%rdi
273a(2): jz 0x15(%rip)
273c(5): mov $0x3,%ecx
2741(3): mov %rbx,%rsi
2744(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2746(3): setnbe %al
2749(2): sbb $0x0,%al
274b(2): test %al,%al
274d(2): jnz 0xffffffe3(%rip)
274f(4): mov 0x8(%rdx),%r12
2753(2): xor %edi,%edi
2755(5): mov $0x5,%edx
275a(7): lea 0x8225(%rip),%rsi
2761(3): test %r12,%r12
2764(6): jz 0xc7(%rip)
276a(5): call 0xfffff2f6(%rip)
276f(7): lea 0x8b1a(%rip),%rcx
2776(7): lea 0x8220(%rip),%rdx
277d(3): mov %rax,%rsi
2780(5): mov $0x1,%edi
2785(2): xor %eax,%eax
2787(5): call 0xfffff519(%rip)
278c(2): xor %esi,%esi
278e(5): mov $0x5,%edi
2793(5): call 0xfffff4fd(%rip)
2798(3): test %rax,%rax
279b(2): jz 0x1e(%rip)
279d(7): lea 0x8207(%rip),%rsi
27a4(5): mov $0x3,%edx
27a9(3): mov %rax,%rdi
27ac(5): call 0xfffff204(%rip)
27b1(2): test %eax,%eax
27b3(6): jnz 0x10d(%rip)
27b9(7): lea 0x81ef(%rip),%rsi
27c0(2): xor %edi,%edi
27c2(5): mov $0x5,%edx
27c7(5): call 0xfffff299(%rip)
27cc(7): lea 0x8151(%rip),%rcx
27d3(7): lea 0x8ab6(%rip),%rdx
27da(3): mov %rax,%rsi
27dd(5): mov $0x1,%edi
27e2(2): xor %eax,%eax
27e4(5): call 0xfffff4bc(%rip)
27e9(3): cmp %rbx,%r12
27ec(7): lea 0x8150(%rip),%rcx
27f3(7): lea 0x96a7(%rip),%rbx
27fa(4): cmove %rcx,%rbx
27fe(7): lea 0x8afb(%rip),%rsi
2805(2): xor %edi,%edi
2807(5): mov $0x5,%edx
280c(5): call 0xfffff254(%rip)
2811(3): mov %rbx,%rcx
2814(3): mov %rax,%rsi
2817(3): mov %r12,%rdx
281a(5): mov $0x1,%edi
281f(2): xor %eax,%eax
2821(5): call 0xfffff47f(%rip)
2826(5): jmp 0xfffffcd0(%rip)
282b(5): call 0xfffff235(%rip)
2830(7): lea 0x8a59(%rip),%rcx
2837(7): lea 0x815f(%rip),%rdx
283e(3): mov %rax,%rsi
2841(5): mov $0x1,%edi
2846(2): xor %eax,%eax
2848(5): call 0xfffff458(%rip)
284d(2): xor %esi,%esi
284f(5): mov $0x5,%edi
2854(5): call 0xfffff43c(%rip)
2859(3): test %rax,%rax
285c(2): jz 0x1a(%rip)
285e(7): lea 0x8146(%rip),%rsi
2865(5): mov $0x3,%edx
286a(3): mov %rax,%rdi
286d(5): call 0xfffff143(%rip)
2872(2): test %eax,%eax
2874(2): jnz 0x45(%rip)
2876(7): lea 0x8132(%rip),%rsi
287d(5): mov $0x5,%edx
2882(2): xor %edi,%edi
2884(7): lea 0x8099(%rip),%r12
288b(7): lea 0x80b1(%rip),%rbx
2892(5): call 0xfffff1ce(%rip)
2897(7): lea 0x8086(%rip),%rcx
289e(7): lea 0x89eb(%rip),%rdx
28a5(3): mov %rax,%rsi
28a8(5): mov $0x1,%edi
28ad(2): xor %eax,%eax
28af(5): call 0xfffff3f1(%rip)
28b4(5): jmp 0xffffff4a(%rip)
28b9(7): lea 0x8064(%rip),%r12
28c0(7): mov 0x20c7e1(%rip),%r13
28c7(7): lea 0x89ea(%rip),%rsi
28ce(2): xor %edi,%edi
28d0(5): mov $0x5,%edx
28d5(5): call 0xfffff18b(%rip)
28da(3): mov %r13,%rsi
28dd(3): mov %rax,%rdi
28e0(5): call 0xfffff2a0(%rip)
28e5(5): jmp 0xfffffed4(%rip)

"excise" :
28f0(2): push %r13
28f2(2): push %r12
28f4(3): mov %rdx,%r13
28f7(1): push %rbp
28f8(1): push %rbx
28f9(2): xor %edx,%edx
28fb(3): mov %rdi,%r12
28fe(3): mov %rsi,%rbx
2901(2): mov %ecx,%ebp
2903(7): sub $0xa8,%rsp
290a(4): mov 0x30(%rsi),%rsi
290e(3): mov 0x2c(%rdi),%edi
2911(9): mov $0x28,%rax
291a(8): mov %rax,0x98(%rsp)
2922(2): xor %eax,%eax
2924(2): test %cl,%cl
2926(3): setnz %dl
2929(3): shl/sal $0x9,%edx
292c(5): call 0xfffff0b4(%rip)
2931(2): test %eax,%eax
2933(2): jnz 0x3d(%rip)
2935(5): cmp $0x0,0x1a(%r13)
293a(5): mov $0x2,%eax
293f(6): jnz 0xe9(%rip)
2945(8): mov 0x98(%rsp),%rcx
294d(9): xor $0x28,%rcx
2956(6): jnz 0x1e2(%rip)
295c(7): add $0xa8,%rsp
2963(1): pop %rbx
2964(1): pop %rbp
2965(2): pop %r12
2967(2): pop %r13
2969(1): ret near (%rsp)
296a(6): nop 0x0(%rax,%rax,1)
2970(5): call 0xfffff030(%rip)
2975(2): mov (%rax),%edx
2977(3): mov %rax,%rbp
297a(3): cmp $0x1e,%edx
297d(6): jz 0xfb(%rip)
2983(5): cmp $0x0,0x0(%r13)
2988(2): jz 0x28(%rip)
298a(3): cmp $0x14,%edx
298d(6): jz 0x16c(%rip)
2993(6): jle 0x15d(%rip)
2999(3): cmp $0x16,%edx
299c(6): jz 0x15d(%rip)
29a2(3): cmp $0x54,%edx
29a5(6): jz 0x154(%rip)
29ab(5): nop 0x0(%rax,%rax,1)
29b0(5): cmp $0x4,0x70(%rbx)
29b5(6): jz 0xfb(%rip)
29bb(4): mov 0x38(%rbx),%rsi
29bf(5): mov $0x4,%edi
29c4(5): call 0x31ac(%rip)
29c9(7): lea 0x8aba(%rip),%rsi
29d0(2): xor %edi,%edi
29d2(5): mov $0x5,%edx
29d7(3): mov %rax,%r12
29da(5): call 0xfffff086(%rip)
29df(3): mov 0x0(%rbp),%esi
29e2(3): mov %rax,%rdx
29e5(2): xor %edi,%edi
29e7(2): xor %eax,%eax
29e9(3): mov %r12,%rcx
29ec(5): call 0xfffff2e4(%rip)
29f1(4): mov 0x8(%rbx),%rax
29f5(5): cmp $0x0,0x58(%rax)
29fa(2): jns 0x19(%rip)
29fc(2): jmp 0x1e(%rip)
29fe(2): nop 
2a00(8): mov $0x1,0x20(%rax)
2a08(4): mov 0x8(%rax),%rax
2a0c(5): cmp $0x0,0x58(%rax)
2a11(2): js 0x9(%rip)
2a13(5): cmp $0x0,0x20(%rax)
2a18(2): jz 0xffffffe8(%rip)
2a1a(5): mov $0x4,%eax
2a1f(5): jmp 0xffffff26(%rip)
2a24(4): nop 0x0(%rax)
2a28(4): mov 0x38(%rbx),%rsi
2a2c(5): mov $0x4,%edi
2a31(5): call 0x313f(%rip)
2a36(3): test %bpl,%bpl
2a39(3): mov %rax,%rbx
2a3c(5): mov $0x5,%edx
2a41(6): jz 0xc7(%rip)
2a47(7): lea 0x8a1a(%rip),%rsi
2a4e(2): xor %edi,%edi
2a50(5): call 0xfffff010(%rip)
2a55(3): mov %rax,%rsi
2a58(3): mov %rbx,%rdx
2a5b(5): mov $0x1,%edi
2a60(2): xor %eax,%eax
2a62(5): call 0xfffff23e(%rip)
2a67(5): mov $0x2,%eax
2a6c(5): jmp 0xfffffed9(%rip)
2a71(7): nop 0x0(%rax)
2a78(4): mov 0x30(%rbx),%rdx
2a7c(5): mov 0x2c(%r12),%esi
2a81(3): mov %rsp,%rcx
2a84(6): mov $0x100,%r8d
2a8a(5): mov $0x1,%edi
2a8f(5): call 0xfffff051(%rip)
2a94(2): test %eax,%eax
2a96(2): jz 0xa(%rip)
2a98(3): mov 0x0(%rbp),%edx
2a9b(3): cmp $0x2,%edx
2a9e(2): jz 0x7d(%rip)
2aa0(7): mov $0x1e,0x0(%rbp)
2aa7(5): jmp 0xffffff14(%rip)
2aac(4): nop 0x0(%rax)
2ab0(3): cmp $0x27,%edx
2ab3(6): jnbe 0xffffff08(%rip)
2ab9(a): mov $0x549759090688,%rax
2ac3(4): bt %rdx,%rax
2ac7(6): jnb 0xfffffef4(%rip)
2acd(3): mov 0x40(%rbx),%eax
2ad0(3): cmp $0x1,%eax
2ad3(2): jz 0xb(%rip)
2ad5(3): cmp $0xd,%eax
2ad8(6): jnz 0xfffffee3(%rip)
2ade(3): mov %eax,0x0(%rbp)
2ae1(5): jmp 0xfffffeda(%rip)
2ae6(a): nop 0x0(%rax,%rax,1)
2af0(3): cmp $0x2,%edx
2af3(6): jnz 0xfffffebd(%rip)
2af9(5): mov $0x2,%eax
2afe(5): jmp 0xfffffe47(%rip)
2b03(5): nop 0x0(%rax,%rax,1)
2b08(7): lea 0x896f(%rip),%rsi
2b0f(2): xor %edi,%edi
2b11(5): call 0xffffef4f(%rip)
2b16(5): jmp 0xffffff3f(%rip)
2b1b(5): cmp $0x0,0x0(%r13)
2b20(5): mov $0x2,%eax
2b25(6): jnz 0xfffffe20(%rip)
2b2b(5): cmp $0x4,0x70(%rbx)
2b30(6): jnz 0xfffffe8b(%rip)
2b36(2): jmp 0xffffff83(%rip)
2b38(5): call 0xffffef78(%rip)

"cache_fstatat.constprop.3" :
2b40(1): push %rbx
2b41(4): mov 0x30(%rdx),%rax
2b45(3): mov %rdx,%rbx
2b48(4): cmp $0xffffffff,%rax
2b4c(2): jz 0x14(%rip)
2b4e(3): test %rax,%rax
2b51(2): js 0x55(%rip)
2b53(2): xor %eax,%eax
2b55(1): pop %rbx
2b56(1): ret near (%rsp)
2b57(9): nop 0x0(%rax,%rax,1)
2b60(3): mov %rdx,%rcx
2b63(6): mov $0x100,%r8d
2b69(3): mov %rsi,%rdx
2b6c(2): mov %edi,%esi
2b6e(5): mov $0x1,%edi
2b73(5): call 0xffffef6d(%rip)
2b78(2): test %eax,%eax
2b7a(2): jz 0x26(%rip)
2b7c(8): mov $0xfffffffe,0x30(%rbx)
2b84(5): call 0xffffee1c(%rip)
2b89(3): movsxd (%rax),%rdx
2b8c(4): mov %rdx,0x8(%rbx)
2b90(2): mov %edx,(%rax)
2b92(5): mov $0xffffffff,%eax
2b97(1): pop %rbx
2b98(1): ret near (%rsp)
2b99(7): nop 0x0(%rax)
2ba0(4): mov 0x30(%rbx),%rax
2ba4(2): jmp 0xffffffaa(%rip)
2ba6(5): call 0xffffedfa(%rip)
2bab(4): mov 0x8(%rbx),%rdx
2baf(2): jmp 0xffffffe1(%rip)

"prompt" :
2bc0(2): push %r15
2bc2(2): push %r14
2bc4(2): push %r13
2bc6(2): push %r12
2bc8(3): mov %rcx,%r13
2bcb(1): push %rbp
2bcc(1): push %rbx
2bcd(3): mov %rsi,%rbx
2bd0(7): sub $0xc8,%rsp
2bd7(3): mov 0x2c(%rdi),%edi
2bda(4): mov 0x30(%rsi),%r15
2bde(9): mov $0x28,%rax
2be7(8): mov %rax,0xb8(%rsp)
2bef(2): xor %eax,%eax
2bf1(4): mov 0x38(%rsi),%rax
2bf5(3): test %r9,%r9
2bf8(5): mov %r8d,0x14(%rsp)
2bfd(4): mov %edi,0x10(%rsp)
2c01(5): mov %rax,0x8(%rsp)
2c06(6): jz 0x1ea(%rip)
2c0c(2): xor %ebp,%ebp
2c0e(2): test %dl,%dl
2c10(7): mov $0x2,(%r9)
2c17(4): setnz %bpl
2c1b(5): mov $0x30900,%edx
2c20(2): xor %eax,%eax
2c22(3): mov %r15,%rsi
2c25(3): mov %r9,%r12
2c28(9): mov $0xffffffff,0x50(%rsp)
2c31(3): shl/sal $0x2,%ebp
2c34(5): call 0xffffee6c(%rip)
2c39(2): test %eax,%eax
2c3b(2): js 0x6a(%rip)
2c3d(2): mov %eax,%edi
2c3f(4): mov %eax,0x18(%rsp)
2c43(5): call 0xfffff0cd(%rip)
2c48(3): test %rax,%rax
2c4b(3): mov %rax,%r14
2c4e(4): mov 0x18(%rsp),%edx
2c52(6): jz 0x25e(%rip)
2c58(5): call 0xffffed48(%rip)
2c5d(5): mov %rax,0x18(%rsp)
2c62(6): mov $0x0,(%rax)
2c68(8): nop 0x0(%rax,%rax,1)
2c70(3): mov %r14,%rdi
2c73(5): call 0xffffef9d(%rip)
2c78(3): test %rax,%rax
2c7b(6): jz 0x24d(%rip)
2c81(4): cmp $0x2e,0x13(%rax)
2c85(2): jnz 0x18(%rip)
2c87(2): xor %edx,%edx
2c89(4): cmp $0x2e,0x14(%rax)
2c8d(3): setz %dl
2c90(5): movzx 0x14(%rax,%rdx,1),%eax
2c95(2): test %al,%al
2c97(2): jz 0xffffffd9(%rip)
2c99(2): cmp $0x2f,%al
2c9b(2): jz 0xffffffd5(%rip)
2c9d(3): mov %r14,%rdi
2ca0(5): call 0xffffeec0(%rip)
2ca5(3): xor %r14d,%r14d
2ca8(5): mov $0x3,%eax
2cad(4): mov %eax,(%r12)
2cb1(5): cmp $0x0,0x20(%rbx)
2cb6(6): jnz 0x12a(%rip)
2cbc(4): mov 0x4(%r13),%eax
2cc0(3): cmp $0x5,%eax
2cc3(2): jz 0x2f(%rip)
2cc5(5): cmp $0x0,0x0(%r13)
2cca(2): jnz 0x1f(%rip)
2ccc(3): cmp $0x3,%eax
2ccf(2): jz 0x9(%rip)
2cd1(5): cmp $0x0,0x19(%r13)
2cd6(2): jz 0x1c(%rip)
2cd8(5): call 0x3828(%rip)
2cdd(2): test %al,%al
2cdf(6): jz 0x2c9(%rip)
2ce5(4): mov 0x4(%r13),%eax
2ce9(3): cmp $0x3,%eax
2cec(6): jz 0x134(%rip)
2cf2(5): mov $0x2,%eax
2cf7(8): mov 0xb8(%rsp),%rcx
2cff(9): xor $0x28,%rcx
2d08(6): jnz 0x37b(%rip)
2d0e(7): add $0xc8,%rsp
2d15(1): pop %rbx
2d16(1): pop %rbp
2d17(2): pop %r12
2d19(2): pop %r13
2d1b(2): pop %r14
2d1d(2): pop %r15
2d1f(1): ret near (%rsp)
2d20(5): lea 0x20(%rsp),%rbx
2d25(4): mov 0x10(%rsp),%edi
2d29(3): mov %r15,%rsi
2d2c(3): mov %rbx,%rdx
2d2f(5): call 0xfffffe11(%rip)
2d34(2): test %eax,%eax
2d36(6): jnz 0x1ca(%rip)
2d3c(4): mov 0x38(%rsp),%eax
2d40(5): and $0xf000,%eax
2d45(5): cmp $0xa000,%eax
2d4a(6): jz 0x24a(%rip)
2d50(5): cmp $0x4000,%eax
2d55(6): jz 0xdf(%rip)
2d5b(5): mov 0x8(%rsp),%rsi
2d60(5): mov $0x4,%edi
2d65(5): call 0x2e0b(%rip)
2d6a(3): mov %rax,%rbp
2d6d(4): mov 0x10(%rsp),%edi
2d71(3): mov %rbx,%rdx
2d74(3): mov %r15,%rsi
2d77(5): call 0xfffffdc9(%rip)
2d7c(2): test %eax,%eax
2d7e(6): jnz 0x2b2(%rip)
2d84(3): mov %rbx,%rdi
2d87(5): call 0x1199(%rip)
2d8c(3): test %r12d,%r12d
2d8f(3): mov %rax,%r13
2d92(7): mov 0x20c37f(%rip),%rbx
2d99(5): mov $0x5,%edx
2d9e(6): jz 0x27a(%rip)
2da4(7): lea 0x87b5(%rip),%rsi
2dab(2): xor %edi,%edi
2dad(5): call 0xffffecb3(%rip)
2db2(7): mov 0x20c327(%rip),%rdi
2db9(3): mov %rax,%rdx
2dbc(3): mov %rbp,%r9
2dbf(3): mov %r13,%r8
2dc2(3): mov %rbx,%rcx
2dc5(5): mov $0x1,%esi
2dca(2): xor %eax,%eax
2dcc(5): call 0xffffef94(%rip)
2dd1(5): call 0x3a7f(%rip)
2dd6(2): test %al,%al
2dd8(6): jnz 0xffffff1a(%rip)
2dde(2): nop 
2de0(5): mov $0x3,%eax
2de5(5): jmp 0xffffff12(%rip)
2dea(6): nop 0x0(%rax,%rax,1)
2df0(3): cmp $0x1,%dl
2df3(3): mov %edx,%r14d
2df6(5): mov $0x0,%eax
2dfb(2): sbb %ebp,%ebp
2dfd(9): mov $0xffffffff,0x50(%rsp)
2e06(2): not %ebp
2e08(3): and $0x4,%ebp
2e0b(2): test %dl,%dl
2e0d(4): cmovne %eax,%r14d
2e11(5): jmp 0xfffffea0(%rip)
2e16(a): nop 0x0(%rax,%rax,1)
2e20(3): xor %r12d,%r12d
2e23(2): test %ebp,%ebp
2e25(6): jz 0xfffffefb(%rip)
2e2b(3): cmp $0x4,%ebp
2e2e(6): jnz 0x14a(%rip)
2e34(5): cmp $0x0,0x9(%r13)
2e39(6): jz 0x117(%rip)
2e3f(5): mov 0x8(%rsp),%rsi
2e44(5): mov $0x4,%edi
2e49(5): call 0x2d27(%rip)
2e4e(5): cmp $0x2,0x14(%rsp)
2e53(3): mov %rax,%rbp
2e56(6): jnz 0x134(%rip)
2e5c(3): test %r14b,%r14b
2e5f(6): jnz 0x12b(%rip)
2e65(3): test %r12d,%r12d
2e68(7): mov 0x20c2a9(%rip),%rbx
2e6f(5): mov $0x5,%edx
2e74(6): jz 0x1fc(%rip)
2e7a(7): lea 0x868f(%rip),%rsi
2e81(2): xor %edi,%edi
2e83(5): call 0xffffebdd(%rip)
2e88(7): mov 0x20c251(%rip),%rdi
2e8f(3): mov %rax,%rdx
2e92(3): mov %rbp,%r8
2e95(3): mov %rbx,%rcx
2e98(5): mov $0x1,%esi
2e9d(2): xor %eax,%eax
2e9f(5): call 0xffffeec1(%rip)
2ea4(5): jmp 0xffffff2d(%rip)
2ea9(7): nop 0x0(%rax)
2eb0(2): mov %edx,%edi
2eb2(5): call 0xffffec9e(%rip)
2eb7(5): mov $0x3,%eax
2ebc(5): jmp 0xfffffdf1(%rip)
2ec1(7): nop 0x0(%rax)
2ec8(5): mov 0x18(%rsp),%rax
2ecd(3): mov %r14,%rdi
2ed0(2): mov (%rax),%edx
2ed2(4): mov %edx,0x18(%rsp)
2ed6(5): call 0xffffec8a(%rip)
2edb(4): mov 0x18(%rsp),%edx
2edf(2): test %edx,%edx
2ee1(6): jnz 0xfffffdc4(%rip)
2ee7(6): mov $0x1,%r14d
2eed(5): mov $0x4,%eax
2ef2(5): jmp 0xfffffdbb(%rip)
2ef7(9): nop 0x0(%rax,%rax,1)
2f00(5): call 0xffffeaa0(%rip)
2f05(2): mov (%rax),%ebx
2f07(5): mov 0x8(%rsp),%rsi
2f0c(5): mov $0x4,%edi
2f11(5): call 0x2c5f(%rip)
2f16(3): mov %rax,%rbp
2f19(7): lea 0x856a(%rip),%rsi
2f20(5): mov $0x5,%edx
2f25(2): xor %edi,%edi
2f27(5): call 0xffffeb39(%rip)
2f2c(3): mov %rbp,%rcx
2f2f(3): mov %rax,%rdx
2f32(2): mov %ebx,%esi
2f34(2): xor %eax,%eax
2f36(2): xor %edi,%edi
2f38(5): call 0xffffed98(%rip)
2f3d(5): mov $0x4,%eax
2f42(5): jmp 0xfffffdb5(%rip)
2f47(9): nop 0x0(%rax,%rax,1)
2f50(5): cmp $0x0,0xa(%r13)
2f55(2): jz 0x7(%rip)
2f57(3): test %r14b,%r14b
2f5a(2): jnz 0x1e(%rip)
2f5c(5): mov 0x8(%rsp),%rsi
2f61(5): mov $0x4,%edi
2f66(5): mov $0x15,%ebx
2f6b(5): call 0x2c05(%rip)
2f70(3): mov %rax,%rbp
2f73(2): jmp 0xffffffa6(%rip)
2f75(3): nop (%rax)
2f78(5): mov 0x8(%rsp),%rsi
2f7d(5): mov $0x4,%edi
2f82(5): call 0x2bee(%rip)
2f87(3): mov %rax,%rbp
2f8a(5): lea 0x20(%rsp),%rbx
2f8f(5): jmp 0xfffffdde(%rip)
2f94(5): cmp $0x3,0x4(%r13)
2f99(6): jnz 0xfffffd59(%rip)
2f9f(5): jmp 0xfffffdbc(%rip)
2fa4(4): nop 0x0(%rax)
2fa8(5): lea 0x20(%rsp),%rbx
2fad(4): mov 0x10(%rsp),%edi
2fb1(3): mov %r15,%rsi
2fb4(3): mov %rbx,%rdx
2fb7(5): call 0xfffffb89(%rip)
2fbc(2): test %eax,%eax
2fbe(6): jnz 0xffffff42(%rip)
2fc4(4): mov 0x38(%rsp),%eax
2fc8(5): and $0xf000,%eax
2fcd(5): cmp $0xa000,%eax
2fd2(6): jz 0xfffffd13(%rip)
2fd8(4): mov 0x10(%rsp),%edi
2fdc(5): mov $0x200,%ecx
2fe1(5): mov $0x2,%edx
2fe6(3): mov %r15,%rsi
2fe9(5): call 0xffffea27(%rip)
2fee(2): test %eax,%eax
2ff0(6): jz 0xfffffcf5(%rip)
2ff6(5): call 0xffffe9aa(%rip)
2ffb(2): mov (%rax),%ebx
2ffd(6): mov $0x1,%r12d
3003(3): cmp $0xd,%ebx
3006(6): jz 0xfffffe1d(%rip)
300c(5): jmp 0xfffffefb(%rip)
3011(7): nop 0x0(%rax)
3018(7): lea 0x847c(%rip),%rsi
301f(2): xor %edi,%edi
3021(5): call 0xffffea3f(%rip)
3026(5): jmp 0xfffffd8c(%rip)
302b(5): nop 0x0(%rax,%rax,1)
3030(7): lea 0x8453(%rip),%rsi
3037(5): mov $0x5,%edx
303c(2): xor %edi,%edi
303e(5): call 0xffffea22(%rip)
3043(3): mov %rax,%rbx
3046(5): call 0xffffe95a(%rip)
304b(2): mov (%rax),%esi
304d(3): mov %rbp,%rcx
3050(2): xor %eax,%eax
3052(3): mov %rbx,%rdx
3055(2): xor %edi,%edi
3057(5): call 0xffffec79(%rip)
305c(5): mov $0x4,%eax
3061(5): jmp 0xfffffc96(%rip)
3066(a): nop 0x0(%rax,%rax,1)
3070(7): lea 0x84c9(%rip),%rsi
3077(2): xor %edi,%edi
3079(5): call 0xffffe9e7(%rip)
307e(5): jmp 0xfffffe0a(%rip)
3083(5): call 0xffffea2d(%rip)

"rm" :
3090(2): push %r15
3092(2): push %r14
3094(2): push %r13
3096(2): push %r12
3098(1): push %rbp
3099(1): push %rbx
309a(7): sub $0xd8,%rsp
30a1(9): mov $0x28,%rax
30aa(8): mov %rax,0xc8(%rsp)
30b2(2): xor %eax,%eax
30b4(4): cmp $0x0,(%rdi)
30b8(6): jz 0x770(%rip)
30be(4): cmp $0x1,0x8(%rsi)
30c2(3): mov %rsi,%r13
30c5(7): lea 0x872c(%rip),%r12
30cc(5): mov $0x2,%ebp
30d1(2): sbb %esi,%esi
30d3(2): xor %edx,%edx
30d5(3): and $0xc0,%esi
30d8(6): add $0x258,%esi
30de(5): call 0x36f2(%rip)
30e3(3): mov %rax,%rbx
30e6(5): lea 0x2c(%rsp),%rax
30eb(5): mov %rax,0x10(%rsp)
30f0(5): lea 0x30(%rsp),%rax
30f5(5): mov %rax,0x18(%rsp)
30fa(6): nop 0x0(%rax,%rax,1)
3100(3): mov %rbx,%rdi
3103(5): call 0x53dd(%rip)
3108(3): test %rax,%rax
310b(3): mov %rax,%r15
310e(6): jz 0x8c(%rip)
3114(4): movzx 0x70(%rax),%edx
3118(4): cmp $0xd,%dx
311c(6): jnbe 0x75b(%rip)
3122(3): movzx %dx,%eax
3125(4): movsxd 0x0(%r12,%rax,4),%rax
3129(3): add %r12,%rax
312c(2): jmp %rax
312e(2): nop 
3130(4): mov 0x38(%r15),%rdx
3134(5): mov $0x3,%esi
3139(2): xor %edi,%edi
313b(5): call 0x2b35(%rip)
3140(7): lea 0x837a(%rip),%rsi
3147(5): mov $0x5,%edx
314c(2): xor %edi,%edi
314e(3): mov %rax,%rbp
3151(5): call 0xffffe90f(%rip)
3156(4): mov 0x40(%r15),%esi
315a(3): mov %rbp,%rcx
315d(3): mov %rax,%rdx
3160(2): xor %edi,%edi
3162(2): xor %eax,%eax
3164(5): call 0xffffeb6c(%rip)
3169(3): mov %r15,%rsi
316c(5): mov $0x4,%edx
3171(3): mov %rbx,%rdi
3174(5): call 0x5aec(%rip)
3179(3): mov %rbx,%rdi
317c(5): mov $0x4,%ebp
3181(5): call 0x535f(%rip)
3186(3): mov %rbx,%rdi
3189(5): call 0x5357(%rip)
318e(3): test %rax,%rax
3191(3): mov %rax,%r15
3194(6): jnz 0xffffff80(%rip)
319a(5): call 0xffffe806(%rip)
319f(3): mov %rax,%r12
31a2(2): mov (%rax),%eax
31a4(2): test %eax,%eax
31a6(6): jnz 0x512(%rip)
31ac(3): mov %rbx,%rdi
31af(5): call 0x51a1(%rip)
31b4(2): test %eax,%eax
31b6(6): jnz 0x53a(%rip)
31bc(8): mov 0xc8(%rsp),%rbx
31c4(9): xor $0x28,%rbx
31cd(2): mov %ebp,%eax
31cf(6): jnz 0x711(%rip)
31d5(7): add $0xd8,%rsp
31dc(1): pop %rbx
31dd(1): pop %rbp
31de(2): pop %r12
31e0(2): pop %r13
31e2(2): pop %r14
31e4(2): pop %r15
31e6(1): ret near (%rsp)
31e7(9): nop 0x0(%rax,%rax,1)
31f0(4): cmp $0x6,%dx
31f4(2): jnz 0x24(%rip)
31f6(5): cmp $0x0,0x8(%r13)
31fb(2): jz 0x1d(%rip)
31fd(5): cmp $0x0,0x58(%r15)
3202(2): jle 0x16(%rip)
3204(4): mov 0x18(%rbx),%rax
3208(4): cmp %rax,0x78(%r15)
320c(6): jnz 0x5ac(%rip)
3212(6): nop 0x0(%rax,%rax,1)
3218(3): and $0xfd,%edx
321b(3): xor %r14d,%r14d
321e(3): mov %r13,%rcx
3221(4): cmp $0x4,%dx
3225(6): mov $0x3,%r8d
322b(3): mov %r15,%rsi
322e(4): setz %r14b
3232(3): mov %rbx,%rdi
3235(3): xor %r9d,%r9d
3238(3): mov %r14d,%edx
323b(5): call 0xfffff985(%rip)
3240(3): cmp $0x2,%eax
3243(2): mov %eax,%ecx
3245(6): jz 0x263(%rip)
324b(3): lea 0xfffffffe(%rcx),%eax
324e(3): cmp $0x2,%eax
3251(6): jnbe 0x670(%rip)
3257(3): cmp $0x4,%ecx
325a(6): jz 0x68b(%rip)
3260(3): cmp $0x3,%ecx
3263(6): jnz 0xfffffe9d(%rip)
3269(3): cmp $0x2,%ebp
326c(5): mov $0x3,%eax
3271(3): cmove %eax,%ebp
3274(5): jmp 0xfffffe8c(%rip)
3279(7): nop 0x0(%rax)
3280(4): mov 0x38(%r15),%rdx
3284(5): mov $0x3,%esi
3289(2): xor %edi,%edi
328b(5): call 0x29e5(%rip)
3290(7): lea 0x8421(%rip),%rsi
3297(3): mov %rax,%rbp
329a(5): mov $0x5,%edx
329f(2): xor %edi,%edi
32a1(5): call 0xffffe7bf(%rip)
32a6(3): mov %rbp,%rcx
32a9(3): mov %rax,%rdx
32ac(2): xor %esi,%esi
32ae(5): jmp 0xfffffeb2(%rip)
32b3(5): nop 0x0(%rax,%rax,1)
32b8(5): cmp $0x0,0x9(%r13)
32bd(6): jnz 0xbb(%rip)
32c3(5): cmp $0x0,0xa(%r13)
32c8(6): jz 0x168(%rip)
32ce(4): mov 0x30(%r15),%rsi
32d2(3): mov 0x2c(%rbx),%edi
32d5(2): xor %eax,%eax
32d7(5): mov $0x30900,%edx
32dc(5): call 0xffffe7c4(%rip)
32e1(2): test %eax,%eax
32e3(2): js 0x5e(%rip)
32e5(2): mov %eax,%edi
32e7(4): mov %eax,0x8(%rsp)
32eb(5): call 0xffffea25(%rip)
32f0(3): test %rax,%rax
32f3(3): mov %rax,%r14
32f6(4): mov 0x8(%rsp),%edx
32fa(6): jz 0x538(%rip)
3300(5): call 0xffffe6a0(%rip)
3305(5): mov %rax,0x8(%rsp)
330a(6): mov $0x0,(%rax)
3310(3): mov %r14,%rdi
3313(5): call 0xffffe8fd(%rip)
3318(3): test %rax,%rax
331b(2): jz 0x3b(%rip)
331d(4): cmp $0x2e,0x13(%rax)
3321(2): jnz 0x18(%rip)
3323(2): xor %edx,%edx
3325(4): cmp $0x2e,0x14(%rax)
3329(3): setz %dl
332c(5): movzx 0x14(%rax,%rdx,1),%eax
3331(2): test %al,%al
3333(2): jz 0xffffffdd(%rip)
3335(2): cmp $0x2f,%al
3337(2): jz 0xffffffd9(%rip)
3339(3): mov %r14,%rdi
333c(5): call 0xffffe824(%rip)
3341(5): cmp $0x0,0xa(%r13)
3346(6): jz 0xea(%rip)
334c(5): mov $0x27,%ebp
3351(5): jmp 0xe4(%rip)
3356(5): mov 0x8(%rsp),%rax
335b(3): mov %r14,%rdi
335e(2): mov (%rax),%edx
3360(4): mov %edx,0x8(%rsp)
3364(5): call 0xffffe7fc(%rip)
3369(4): mov 0x8(%rsp),%edx
336d(2): test %edx,%edx
336f(2): jnz 0xffffffd2(%rip)
3371(7): nop 0x0(%rax)
3378(5): cmp $0x0,0x58(%r15)
337d(2): jnz 0x3b(%rip)
337f(4): mov 0x30(%r15),%r14
3383(3): mov %r14,%rdi
3386(5): call 0xaea(%rip)
338b(3): cmp $0x2e,(%rax)
338e(6): jz 0x182(%rip)
3394(4): mov 0x10(%r13),%rax
3398(3): test %rax,%rax
339b(2): jz 0x12(%rip)
339d(3): mov (%rax),%rcx
33a0(7): cmp %rcx,0x80(%r15)
33a7(6): jz 0x379(%rip)
33ad(5): cmp $0x0,0x18(%r13)
33b2(6): jnz 0x1f6(%rip)
33b8(5): mov 0x10(%rsp),%r9
33bd(3): mov %r13,%rcx
33c0(6): mov $0x2,%r8d
33c6(5): mov $0x1,%edx
33cb(3): mov %r15,%rsi
33ce(3): mov %rbx,%rdi
33d1(5): call 0xfffff7ef(%rip)
33d6(3): cmp $0x2,%eax
33d9(2): mov %eax,%ecx
33db(6): jz 0xe5(%rip)
33e1(4): mov 0x8(%r15),%rax
33e5(5): cmp $0x0,0x58(%rax)
33ea(2): jns 0x19(%rip)
33ec(2): jmp 0x1e(%rip)
33ee(2): nop 
33f0(8): mov $0x1,0x20(%rax)
33f8(4): mov 0x8(%rax),%rax
33fc(5): cmp $0x0,0x58(%rax)
3401(2): js 0x9(%rip)
3403(5): cmp $0x0,0x20(%rax)
3408(2): jz 0xffffffe8(%rip)
340a(5): mov $0x4,%edx
340f(3): mov %r15,%rsi
3412(3): mov %rbx,%rdi
3415(4): mov %ecx,0x8(%rsp)
3419(5): call 0x5847(%rip)
341e(3): mov %rbx,%rdi
3421(5): call 0x50bf(%rip)
3426(4): mov 0x8(%rsp),%ecx
342a(5): jmp 0xfffffe21(%rip)
342f(1): nop 
3430(5): mov $0x15,%ebp
3435(4): mov 0x38(%r15),%rsi
3439(5): mov $0x4,%edi
343e(5): call 0x2732(%rip)
3443(7): lea 0x8040(%rip),%rsi
344a(2): xor %edi,%edi
344c(3): mov %rax,%r14
344f(5): mov $0x5,%edx
3454(5): call 0xffffe60c(%rip)
3459(2): xor %edi,%edi
345b(3): mov %rax,%rdx
345e(3): mov %r14,%rcx
3461(2): xor %eax,%eax
3463(2): mov %ebp,%esi
3465(5): call 0xffffe86b(%rip)
346a(4): mov 0x8(%r15),%rax
346e(5): cmp $0x0,0x58(%rax)
3473(2): jns 0x24(%rip)
3475(5): jmp 0xfffffcf4(%rip)
347a(6): nop 0x0(%rax,%rax,1)
3480(8): mov $0x1,0x20(%rax)
3488(4): mov 0x8(%rax),%rax
348c(5): cmp $0x0,0x58(%rax)
3491(6): js 0xfffffcd8(%rip)
3497(5): cmp $0x0,0x20(%rax)
349c(2): jz 0xffffffe4(%rip)
349e(5): jmp 0xfffffccb(%rip)
34a3(5): nop 0x0(%rax,%rax,1)
34a8(3): mov %r14d,%ecx
34ab(3): mov %r13,%rdx
34ae(3): mov %r15,%rsi
34b1(3): mov %rbx,%rdi
34b4(5): call 0xfffff43c(%rip)
34b9(2): mov %eax,%ecx
34bb(5): jmp 0xfffffd90(%rip)
34c0(5): cmp $0x4,0x2c(%rsp)
34c5(6): jnz 0xfffffc3b(%rip)
34cb(5): mov $0x1,%ecx
34d0(3): mov %r13,%rdx
34d3(3): mov %r15,%rsi
34d6(3): mov %rbx,%rdi
34d9(5): call 0xfffff417(%rip)
34de(5): mov $0x4,%edx
34e3(3): mov %r15,%rsi
34e6(3): mov %rbx,%rdi
34e9(4): mov %eax,0x8(%rsp)
34ed(5): call 0x5773(%rip)
34f2(3): mov %rbx,%rdi
34f5(5): call 0x4feb(%rip)
34fa(4): mov 0x8(%rsp),%ecx
34fe(3): cmp $0x2,%ecx
3501(6): jz 0xfffffbff(%rip)
3507(5): jmp 0xfffffeda(%rip)
350c(4): nop 0x0(%rax)
3510(2): xor %edx,%edx
3512(4): cmp $0x2e,0x1(%rax)
3516(3): setz %dl
3519(5): movzx 0x1(%rax,%rdx,1),%eax
351e(2): test %al,%al
3520(2): jz 0xa(%rip)
3522(2): cmp $0x2f,%al
3524(6): jnz 0xfffffe70(%rip)
352a(4): mov 0x38(%r15),%rdx
352e(5): mov $0x4,%esi
3533(5): mov $0x2,%edi
3538(5): call 0x2518(%rip)
353d(7): lea 0x7f7a(%rip),%rdx
3544(5): mov $0x4,%esi
3549(5): mov $0x1,%edi
354e(3): mov %rax,%rbp
3551(5): call 0x24ff(%rip)
3556(7): lea 0x7f62(%rip),%rdx
355d(2): xor %edi,%edi
355f(5): mov $0x4,%esi
3564(3): mov %rax,%r14
3567(5): call 0x24e9(%rip)
356c(7): lea 0x8015(%rip),%rsi
3573(2): xor %edi,%edi
3575(5): mov $0x5,%edx
357a(5): mov %rax,0x8(%rsp)
357f(5): call 0xffffe4e1(%rip)
3584(5): mov 0x8(%rsp),%rcx
3589(3): mov %rax,%rdx
358c(3): mov %rbp,%r9
358f(3): mov %r14,%r8
3592(2): xor %esi,%esi
3594(2): xor %edi,%edi
3596(2): xor %eax,%eax
3598(5): call 0xffffe738(%rip)
359d(5): jmp 0xfffffbcc(%rip)
35a2(6): nop 0x0(%rax,%rax,1)
35a8(7): lea 0x7f0f(%rip),%rsi
35af(2): xor %edx,%edx
35b1(3): mov %r14,%rdi
35b4(5): call 0xa5c(%rip)
35b9(3): test %rax,%rax
35bc(3): mov %rax,%r14
35bf(2): jz 0x18(%rip)
35c1(5): mov 0x18(%rsp),%rdx
35c6(3): mov %rax,%rsi
35c9(5): mov $0x1,%edi
35ce(5): call 0xffffe4c2(%rip)
35d3(2): test %eax,%eax
35d5(2): jz 0x6b(%rip)
35d7(4): mov 0x30(%r15),%rdx
35db(5): mov $0x4,%esi
35e0(5): mov $0x1,%edi
35e5(5): call 0x246b(%rip)
35ea(3): mov %r14,%rdx
35ed(2): xor %edi,%edi
35ef(5): mov $0x4,%esi
35f4(3): mov %rax,%rbp
35f7(5): call 0x2459(%rip)
35fc(7): lea 0x8065(%rip),%rsi
3603(2): xor %edi,%edi
3605(5): mov $0x5,%edx
360a(5): mov %rax,0x8(%rsp)
360f(5): call 0xffffe451(%rip)
3614(5): mov 0x8(%rsp),%rcx
3619(3): mov %rax,%rdx
361c(2): xor %edi,%edi
361e(3): mov %rbp,%r8
3621(2): xor %esi,%esi
3623(2): xor %eax,%eax
3625(5): call 0xffffe6ab(%rip)
362a(3): mov %r14,%rdi
362d(5): call 0xffffe773(%rip)
3632(5): jmp 0xfffffb37(%rip)
3637(9): nop 0x0(%rax,%rax,1)
3640(3): mov %r14,%rdi
3643(5): call 0xffffe75d(%rip)
3648(5): mov 0x30(%rsp),%rax
364d(4): cmp %rax,0x18(%rbx)
3651(6): jz 0xfffffd67(%rip)
3657(4): mov 0x38(%r15),%rsi
365b(5): mov $0x4,%edi
3660(5): call 0x2510(%rip)
3665(7): lea 0x801c(%rip),%rsi
366c(3): mov %rax,%rbp
366f(5): mov $0x5,%edx
3674(2): xor %edi,%edi
3676(5): call 0xffffe3ea(%rip)
367b(2): xor %esi,%esi
367d(3): mov %rax,%rdx
3680(3): mov %rbp,%rcx
3683(2): xor %edi,%edi
3685(2): xor %eax,%eax
3687(5): call 0xffffe649(%rip)
368c(7): lea 0x813d(%rip),%rsi
3693(5): mov $0x5,%edx
3698(2): xor %edi,%edi
369a(5): call 0xffffe3c6(%rip)
369f(2): xor %esi,%esi
36a1(3): mov %rax,%rdx
36a4(2): xor %edi,%edi
36a6(2): xor %eax,%eax
36a8(5): call 0xffffe628(%rip)
36ad(5): jmp 0xfffffabc(%rip)
36b2(6): nop 0x0(%rax,%rax,1)
36b8(7): lea 0x7def(%rip),%rsi
36bf(2): xor %edi,%edi
36c1(5): mov $0x5,%edx
36c6(5): mov $0x4,%ebp
36cb(5): call 0xffffe395(%rip)
36d0(4): mov (%r12),%esi
36d4(3): mov %rax,%rdx
36d7(2): xor %edi,%edi
36d9(2): xor %eax,%eax
36db(5): call 0xffffe5f5(%rip)
36e0(3): mov %rbx,%rdi
36e3(5): call 0x4c6d(%rip)
36e8(2): test %eax,%eax
36ea(6): jz 0xfffffad2(%rip)
36f0(7): lea 0x7e06(%rip),%rsi
36f7(5): mov $0x5,%edx
36fc(2): xor %edi,%edi
36fe(5): mov $0x4,%ebp
3703(5): call 0xffffe35d(%rip)
3708(4): mov (%r12),%esi
370c(3): mov %rax,%rdx
370f(2): xor %edi,%edi
3711(2): xor %eax,%eax
3713(5): call 0xffffe5bd(%rip)
3718(5): jmp 0xfffffaa4(%rip)
371d(3): nop (%rax)
3720(4): mov 0x8(%rax),%rax
3724(4): cmp %rax,0x78(%r15)
3728(6): jnz 0xfffffc85(%rip)
372e(4): mov 0x38(%r15),%rdx
3732(7): lea 0x823d(%rip),%rdi
3739(5): mov $0x2,%ecx
373e(3): mov %rdx,%rsi
3741(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3743(3): setnbe %al
3746(2): sbb $0x0,%al
3748(2): test %al,%al
374a(6): jz 0xf4(%rip)
3750(7): lea 0x821f(%rip),%rdx
3757(5): mov $0x4,%esi
375c(5): mov $0x1,%edi
3761(5): call 0x22ef(%rip)
3766(4): mov 0x38(%r15),%rdx
376a(5): mov $0x4,%esi
376f(2): xor %edi,%edi
3771(3): mov %rax,%rbp
3774(5): call 0x22dc(%rip)
3779(7): lea 0x7e70(%rip),%rsi
3780(3): mov %rax,%r14
3783(5): mov $0x5,%edx
3788(2): xor %edi,%edi
378a(5): call 0xffffe2d6(%rip)
378f(3): mov %rbp,%r8
3792(3): mov %rax,%rdx
3795(3): mov %r14,%rcx
3798(2): xor %esi,%esi
379a(2): xor %edi,%edi
379c(2): xor %eax,%eax
379e(5): call 0xffffe532(%rip)
37a3(5): mov $0x5,%edx
37a8(7): lea 0x7e81(%rip),%rsi
37af(5): jmp 0xfffffee9(%rip)
37b4(4): nop 0x0(%rax)
37b8(4): mov 0x8(%r15),%rax
37bc(5): cmp $0x0,0x58(%rax)
37c1(2): jns 0x1a(%rip)
37c3(2): jmp 0x1f(%rip)
37c5(3): nop (%rax)
37c8(8): mov $0x1,0x20(%rax)
37d0(4): mov 0x8(%rax),%rax
37d4(5): cmp $0x0,0x58(%rax)
37d9(2): js 0x9(%rip)
37db(5): cmp $0x0,0x20(%rax)
37e0(2): jz 0xffffffe8(%rip)
37e2(4): mov 0x38(%r15),%rsi
37e6(5): mov $0x4,%edi
37eb(5): call 0x2385(%rip)
37f0(7): lea 0x7e91(%rip),%rsi
37f7(3): mov %rax,%rbp
37fa(5): mov $0x5,%edx
37ff(2): xor %edi,%edi
3801(5): call 0xffffe25f(%rip)
3806(3): mov %rbp,%rcx
3809(3): mov %rax,%rdx
380c(2): xor %esi,%esi
380e(2): xor %edi,%edi
3810(2): xor %eax,%eax
3812(5): mov $0x4,%ebp
3817(5): call 0xffffe4b9(%rip)
381c(5): jmp 0xfffff8e4(%rip)
3821(7): nop 0x0(%rax)
3828(5): mov $0x2,%ebp
382d(5): jmp 0xfffff98f(%rip)
3832(2): mov %edx,%edi
3834(5): call 0xffffe31c(%rip)
3839(5): jmp 0xfffffb08(%rip)
383e(3): mov %rdx,%rsi
3841(5): mov $0x4,%edi
3846(5): call 0x232a(%rip)
384b(7): lea 0x7d6e(%rip),%rsi
3852(3): mov %rax,%rbp
3855(2): xor %edi,%edi
3857(5): mov $0x5,%edx
385c(5): call 0xffffe204(%rip)
3861(3): mov %rbp,%rcx
3864(3): mov %rax,%rdx
3867(2): xor %esi,%esi
3869(2): xor %edi,%edi
386b(2): xor %eax,%eax
386d(5): call 0xffffe463(%rip)
3872(5): jmp 0xffffff31(%rip)
3877(4): mov 0x38(%r15),%rdx
387b(5): mov $0x3,%esi
3880(2): xor %edi,%edi
3882(5): call 0x23ee(%rip)
3887(5): movzx 0x70(%r15),%ebx
388c(7): lea 0x7ee5(%rip),%rsi
3893(5): mov $0x5,%edx
3898(2): xor %edi,%edi
389a(3): mov %rax,%rbp
389d(5): call 0xffffe1c3(%rip)
38a2(7): lea 0x7c2d(%rip),%r9
38a9(3): mov %rax,%rdx
38ac(3): mov %rbp,%r8
38af(2): mov %ebx,%ecx
38b1(2): xor %esi,%esi
38b3(2): xor %edi,%edi
38b5(2): xor %eax,%eax
38b7(5): call 0xffffe419(%rip)
38bc(5): call 0xffffe0d4(%rip)
38c1(7): lea 0x7f68(%rip),%rcx
38c8(7): lea 0x7ee1(%rip),%rsi
38cf(7): lea 0x7c16(%rip),%rdi
38d6(5): mov $0x261,%edx
38db(5): call 0xffffe245(%rip)
38e0(5): call 0xffffe1d0(%rip)
38e5(5): mov $0x4,%ebp
38ea(5): jmp 0xfffff816(%rip)

"__argmatch_die" :
38f0(5): mov $0x1,%edi
38f5(5): jmp 0xffffebab(%rip)

"argmatch" :
3900(2): push %r15
3902(2): push %r14
3904(3): mov %rsi,%r15
3907(2): push %r13
3909(2): push %r12
390b(3): mov %rcx,%r13
390e(1): push %rbp
390f(1): push %rbx
3910(3): mov %rdx,%rbp
3913(4): sub $0x28,%rsp
3917(5): mov %rdi,0x8(%rsp)
391c(5): mov %rdx,0x18(%rsp)
3921(5): call 0xffffe15f(%rip)
3926(3): mov (%r15),%r14
3929(8): mov $0xffffffff,(%rsp)
3931(3): test %r14,%r14
3934(6): jz 0xb9(%rip)
393a(3): mov %rax,%r12
393d(5): mov $0x0,0x17(%rsp)
3942(2): xor %ebx,%ebx
3944(2): jmp 0x53(%rip)
3946(a): nop 0x0(%rax,%rax,1)
3950(5): mov 0x18(%rsp),%rax
3955(3): test %rax,%rax
3958(6): jz 0xa8(%rip)
395e(4): mov (%rsp),%rdi
3962(3): mov %r13,%rdx
3965(3): mov %rbp,%rsi
3968(4): imul %r13,%rdi
396c(3): add %rax,%rdi
396f(5): call 0xffffe201(%rip)
3974(2): test %eax,%eax
3976(5): movzx 0x17(%rsp),%eax
397b(5): mov $0x1,%ecx
3980(3): cmovne %ecx,%eax
3983(4): mov %al,0x17(%rsp)
3987(4): add $0x1,%rbx
398b(3): add %r13,%rbp
398e(4): mov 0x0(%r15,%rbx,8),%r14
3992(3): test %r14,%r14
3995(2): jz 0x43(%rip)
3997(5): mov 0x8(%rsp),%rsi
399c(3): mov %r12,%rdx
399f(3): mov %r14,%rdi
39a2(5): call 0xffffe00e(%rip)
39a7(2): test %eax,%eax
39a9(2): jnz 0xffffffde(%rip)
39ab(3): mov %r14,%rdi
39ae(5): call 0xffffe0d2(%rip)
39b3(3): cmp %r12,%rax
39b6(2): jz 0x5a(%rip)
39b8(5): cmp $0xffffffff,(%rsp)
39bd(2): jnz 0xffffff93(%rip)
39bf(4): mov %rbx,(%rsp)
39c3(4): add $0x1,%rbx
39c7(3): add %r13,%rbp
39ca(4): mov 0x0(%r15,%rbx,8),%r14
39ce(3): test %r14,%r14
39d1(2): jnz 0xffffffc6(%rip)
39d3(5): nop 0x0(%rax,%rax,1)
39d8(5): cmp $0x0,0x17(%rsp)
39dd(7): mov $0xfffffffe,%rax
39e4(5): cmove (%rsp),%rax
39e9(4): mov %rax,(%rsp)
39ed(4): mov (%rsp),%rax
39f1(4): add $0x28,%rsp
39f5(1): pop %rbx
39f6(1): pop %rbp
39f7(2): pop %r12
39f9(2): pop %r13
39fb(2): pop %r14
39fd(2): pop %r15
39ff(1): ret near (%rsp)
3a00(5): mov $0x1,0x17(%rsp)
3a05(2): jmp 0xffffff82(%rip)
3a07(9): nop 0x0(%rax,%rax,1)
3a10(4): mov %rbx,(%rsp)
3a14(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
3a20(4): cmp $0xffffffff,%rdx
3a24(2): push %r12
3a26(5): mov $0x5,%edx
3a2b(1): push %rbp
3a2c(3): mov %rsi,%r12
3a2f(1): push %rbx
3a30(3): mov %rdi,%rbp
3a33(2): jz 0x4d(%rip)
3a35(7): lea 0x7e17(%rip),%rsi
3a3c(2): xor %edi,%edi
3a3e(5): call 0xffffe022(%rip)
3a43(3): mov %rax,%rbx
3a46(3): mov %rbp,%rsi
3a49(5): mov $0x1,%edi
3a4e(5): call 0x23d2(%rip)
3a53(3): mov %r12,%rdx
3a56(3): mov %rax,%rbp
3a59(5): mov $0x8,%esi
3a5e(2): xor %edi,%edi
3a60(5): call 0x1ff0(%rip)
3a65(3): mov %rbp,%r8
3a68(3): mov %rbx,%rdx
3a6b(3): mov %rax,%rcx
3a6e(1): pop %rbx
3a6f(1): pop %rbp
3a70(2): pop %r12
3a72(2): xor %esi,%esi
3a74(2): xor %edi,%edi
3a76(2): xor %eax,%eax
3a78(5): jmp 0xffffe258(%rip)
3a7d(3): nop (%rax)
3a80(7): lea 0x7db1(%rip),%rsi
3a87(2): xor %edi,%edi
3a89(5): call 0xffffdfd7(%rip)
3a8e(3): mov %rax,%rbx
3a91(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
3aa0(2): push %r15
3aa2(2): push %r14
3aa4(3): mov %rdi,%r14
3aa7(2): push %r13
3aa9(2): push %r12
3aab(2): xor %edi,%edi
3aad(1): push %rbp
3aae(1): push %rbx
3aaf(3): mov %rsi,%rbp
3ab2(7): lea 0x7db7(%rip),%rsi
3ab9(3): mov %rdx,%r12
3abc(5): mov $0x5,%edx
3ac1(4): sub $0x8,%rsp
3ac5(7): mov 0x20b614(%rip),%rbx
3acc(5): call 0xffffdf94(%rip)
3ad1(3): mov %rax,%rdi
3ad4(3): mov %rbx,%rsi
3ad7(5): call 0xffffe0a9(%rip)
3adc(3): mov (%r14),%r15
3adf(3): test %r15,%r15
3ae2(6): jz 0x96(%rip)
3ae8(3): xor %r13d,%r13d
3aeb(2): xor %ebx,%ebx
3aed(2): jmp 0x3b(%rip)
3aef(1): nop 
3af0(3): mov %r15,%rdi
3af3(4): add $0x1,%rbx
3af7(3): mov %rbp,%r13
3afa(5): call 0x2346(%rip)
3aff(7): mov 0x20b5da(%rip),%rdi
3b06(7): lea 0x7d78(%rip),%rdx
3b0d(3): mov %rax,%rcx
3b10(5): mov $0x1,%esi
3b15(2): xor %eax,%eax
3b17(3): add %r12,%rbp
3b1a(5): call 0xffffe246(%rip)
3b1f(4): mov 0x0(%r14,%rbx,8),%r15
3b23(3): test %r15,%r15
3b26(2): jz 0x52(%rip)
3b28(3): test %rbx,%rbx
3b2b(2): jz 0xffffffc5(%rip)
3b2d(3): mov %r12,%rdx
3b30(3): mov %rbp,%rsi
3b33(3): mov %r13,%rdi
3b36(5): call 0xffffe03a(%rip)
3b3b(2): test %eax,%eax
3b3d(2): jnz 0xffffffb3(%rip)
3b3f(3): mov %r15,%rdi
3b42(4): add $0x1,%rbx
3b46(3): add %r12,%rbp
3b49(5): call 0x22f7(%rip)
3b4e(7): mov 0x20b58b(%rip),%rdi
3b55(7): lea 0x7d31(%rip),%rdx
3b5c(3): mov %rax,%rcx
3b5f(5): mov $0x1,%esi
3b64(2): xor %eax,%eax
3b66(5): call 0xffffe1fa(%rip)
3b6b(4): mov 0x0(%r14,%rbx,8),%r15
3b6f(3): test %r15,%r15
3b72(2): jnz 0xffffffb6(%rip)
3b74(4): nop 0x0(%rax)
3b78(7): mov 0x20b561(%rip),%rdi
3b7f(4): mov 0x28(%rdi),%rax
3b83(4): cmp 0x30(%rdi),%rax
3b87(2): jnb 0x21(%rip)
3b89(4): lea 0x1(%rax),%rdx
3b8d(4): mov %rdx,0x28(%rdi)
3b91(3): mov $0xa,(%rax)
3b94(4): add $0x8,%rsp
3b98(1): pop %rbx
3b99(1): pop %rbp
3b9a(2): pop %r12
3b9c(2): pop %r13
3b9e(2): pop %r14
3ba0(2): pop %r15
3ba2(1): ret near (%rsp)
3ba3(5): nop 0x0(%rax,%rax,1)
3ba8(4): add $0x8,%rsp
3bac(5): mov $0xa,%esi
3bb1(1): pop %rbx
3bb2(1): pop %rbp
3bb3(2): pop %r12
3bb5(2): pop %r13
3bb7(2): pop %r14
3bb9(2): pop %r15
3bbb(5): jmp 0xffffdf35(%rip)

"__xargmatch_internal" :
3bc0(2): push %r15
3bc2(2): push %r14
3bc4(3): mov %rdi,%r14
3bc7(2): push %r13
3bc9(2): push %r12
3bcb(3): mov %rsi,%r12
3bce(1): push %rbp
3bcf(1): push %rbx
3bd0(3): mov %rcx,%rbp
3bd3(3): mov %rdx,%rbx
3bd6(3): mov %r8,%rcx
3bd9(3): mov %rbp,%rdx
3bdc(4): sub $0x8,%rsp
3be0(3): mov %rbx,%rsi
3be3(3): mov %r12,%rdi
3be6(3): mov %r8,%r15
3be9(3): mov %r9,%r13
3bec(5): call 0xfffffd14(%rip)
3bf1(3): test %rax,%rax
3bf4(2): js 0x11(%rip)
3bf6(4): add $0x8,%rsp
3bfa(1): pop %rbx
3bfb(1): pop %rbp
3bfc(2): pop %r12
3bfe(2): pop %r13
3c00(2): pop %r14
3c02(2): pop %r15
3c04(1): ret near (%rsp)
3c05(3): mov %rax,%rdx
3c08(3): mov %r12,%rsi
3c0b(3): mov %r14,%rdi
3c0e(5): call 0xfffffe12(%rip)
3c13(3): mov %r15,%rdx
3c16(3): mov %rbp,%rsi
3c19(3): mov %rbx,%rdi
3c1c(5): call 0xfffffe84(%rip)
3c21(3): call %r13
3c24(7): mov $0xffffffff,%rax
3c2b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
3c30(2): push %r14
3c32(2): push %r13
3c34(2): push %r12
3c36(1): push %rbp
3c37(1): push %rbx
3c38(3): mov (%rsi),%r14
3c3b(3): test %r14,%r14
3c3e(2): jz 0x33(%rip)
3c40(3): mov %rcx,%r12
3c43(3): mov %rdi,%r13
3c46(3): mov %rdx,%rbp
3c49(4): lea 0x8(%rsi),%rbx
3c4d(2): jmp 0x12(%rip)
3c4f(1): nop 
3c50(3): mov (%rbx),%r14
3c53(3): add %r12,%rbp
3c56(4): add $0x8,%rbx
3c5a(3): test %r14,%r14
3c5d(2): jz 0x14(%rip)
3c5f(3): mov %r12,%rdx
3c62(3): mov %rbp,%rsi
3c65(3): mov %r13,%rdi
3c68(5): call 0xffffdf08(%rip)
3c6d(2): test %eax,%eax
3c6f(2): jnz 0xffffffe1(%rip)
3c71(1): pop %rbx
3c72(3): mov %r14,%rax
3c75(1): pop %rbp
3c76(2): pop %r12
3c78(2): pop %r13
3c7a(2): pop %r14
3c7c(1): ret near (%rsp)

"close_stdin_set_file_name" :
3c80(7): mov %rdi,0x20b479(%rip)
3c87(1): ret near (%rsp)

"close_stdin" :
3c90(2): push %r12
3c92(1): push %rbp
3c93(1): push %rbx
3c94(7): mov 0x20b415(%rip),%rbx
3c9b(3): mov %rbx,%rdi
3c9e(5): call 0x2c92(%rip)
3ca3(3): test %rax,%rax
3ca6(6): jnz 0xa2(%rip)
3cac(3): mov %rbx,%rdi
3caf(5): call 0x51c1(%rip)
3cb4(2): test %eax,%eax
3cb6(2): jnz 0x32(%rip)
3cb8(1): pop %rbx
3cb9(1): pop %rbp
3cba(2): pop %r12
3cbc(5): jmp 0x104(%rip)
3cc1(7): nop 0x0(%rax)
3cc8(5): call 0x2c28(%rip)
3ccd(2): test %eax,%eax
3ccf(7): mov 0x20b3da(%rip),%rdi
3cd6(6): jz 0x90(%rip)
3cdc(5): call 0x5194(%rip)
3ce1(7): nop 0x0(%rax)
3ce8(7): lea 0x7ba3(%rip),%rsi
3cef(2): xor %edi,%edi
3cf1(5): mov $0x5,%edx
3cf6(5): call 0xffffdd6a(%rip)
3cfb(7): mov 0x20b3fe(%rip),%rbx
3d02(3): mov %rax,%r12
3d05(5): call 0xffffdc9b(%rip)
3d0a(3): mov %rax,%rbp
3d0d(3): test %rbx,%rbx
3d10(2): jz 0x70(%rip)
3d12(3): mov %rbx,%rdi
3d15(5): call 0x1f2b(%rip)
3d1a(3): mov 0x0(%rbp),%esi
3d1d(7): lea 0x7b81(%rip),%rdx
3d24(3): mov %rax,%rcx
3d27(3): mov %r12,%r8
3d2a(2): xor %edi,%edi
3d2c(2): xor %eax,%eax
3d2e(5): call 0xffffdfa2(%rip)
3d33(5): call 0x8d(%rip)
3d38(6): mov 0x20b2e2(%rip),%edi
3d3e(5): call 0xffffdc82(%rip)
3d43(5): nop 0x0(%rax,%rax,1)
3d48(2): xor %esi,%esi
3d4a(3): mov %rbx,%rdi
3d4d(5): mov $0x1,%edx
3d52(5): call 0x2c0e(%rip)
3d57(2): test %eax,%eax
3d59(7): mov 0x20b350(%rip),%rdi
3d60(6): jz 0xffffff68(%rip)
3d66(5): call 0x510a(%rip)
3d6b(2): test %eax,%eax
3d6d(6): jnz 0xffffff7b(%rip)
3d73(1): pop %rbx
3d74(1): pop %rbp
3d75(2): pop %r12
3d77(5): jmp 0x49(%rip)
3d7c(4): nop 0x0(%rax)
3d80(2): mov (%rax),%esi
3d82(7): lea 0x7b06(%rip),%rdx
3d89(3): mov %r12,%rcx
3d8c(2): xor %edi,%edi
3d8e(2): xor %eax,%eax
3d90(5): call 0xffffdf40(%rip)
3d95(2): jmp 0xffffff9e(%rip)

"close_stdout_set_file_name" :
3da0(7): mov %rdi,0x20b369(%rip)
3da7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3db0(7): mov %dil,0x20b351(%rip)
3db7(1): ret near (%rsp)

"close_stdout" :
3dc0(1): push %rbp
3dc1(1): push %rbx
3dc2(4): sub $0x8,%rsp
3dc6(7): mov 0x20b2db(%rip),%rdi
3dcd(5): call 0x50a3(%rip)
3dd2(2): test %eax,%eax
3dd4(2): jz 0x18(%rip)
3dd6(5): call 0xffffdbca(%rip)
3ddb(7): cmp $0x0,0x20b326(%rip)
3de2(3): mov %rax,%rbx
3de5(2): jz 0x1e(%rip)
3de7(3): cmp $0x20,(%rax)
3dea(2): jnz 0x19(%rip)
3dec(7): mov 0x20b2ed(%rip),%rdi
3df3(5): call 0x507d(%rip)
3df8(2): test %eax,%eax
3dfa(2): jnz 0x48(%rip)
3dfc(4): add $0x8,%rsp
3e00(1): pop %rbx
3e01(1): pop %rbp
3e02(1): ret near (%rsp)
3e03(7): lea 0x7aa2(%rip),%rsi
3e0a(2): xor %edi,%edi
3e0c(5): mov $0x5,%edx
3e11(5): call 0xffffdc4f(%rip)
3e16(7): mov 0x20b2f3(%rip),%rdi
3e1d(3): mov %rax,%rbp
3e20(3): test %rdi,%rdi
3e23(2): jz 0x2a(%rip)
3e25(5): call 0x1e1b(%rip)
3e2a(2): mov (%rbx),%esi
3e2c(7): lea 0x7a72(%rip),%rdx
3e33(3): mov %rax,%rcx
3e36(3): mov %rbp,%r8
3e39(2): xor %edi,%edi
3e3b(2): xor %eax,%eax
3e3d(5): call 0xffffde93(%rip)
3e42(6): mov 0x20b1d8(%rip),%edi
3e48(5): call 0xffffdb78(%rip)
3e4d(2): mov (%rbx),%esi
3e4f(7): lea 0x7a39(%rip),%rdx
3e56(3): mov %rax,%rcx
3e59(2): xor %edi,%edi
3e5b(2): xor %eax,%eax
3e5d(5): call 0xffffde73(%rip)
3e62(2): jmp 0xffffffe0(%rip)

"last_component" :
3e70(3): movzx (%rdi),%edx
3e73(3): mov %rdi,%rax
3e76(3): cmp $0x2f,%dl
3e79(2): jnz 0x13(%rip)
3e7b(5): nop 0x0(%rax,%rax,1)
3e80(4): add $0x1,%rax
3e84(3): movzx (%rax),%edx
3e87(3): cmp $0x2f,%dl
3e8a(2): jz 0xfffffff6(%rip)
3e8c(2): test %dl,%dl
3e8e(2): jz 0x3c(%rip)
3e90(3): mov %rax,%rcx
3e93(2): xor %esi,%esi
3e95(2): jmp 0x20(%rip)
3e97(9): nop 0x0(%rax,%rax,1)
3ea0(3): test %sil,%sil
3ea3(2): jz 0x7(%rip)
3ea5(3): mov %rcx,%rax
3ea8(2): xor %esi,%esi
3eaa(4): add $0x1,%rcx
3eae(3): movzx (%rcx),%edx
3eb1(2): test %dl,%dl
3eb3(2): jz 0x17(%rip)
3eb5(3): cmp $0x2f,%dl
3eb8(2): jnz 0xffffffe8(%rip)
3eba(4): add $0x1,%rcx
3ebe(3): movzx (%rcx),%edx
3ec1(5): mov $0x1,%esi
3ec6(2): test %dl,%dl
3ec8(2): jnz 0xffffffed(%rip)
3eca(2): REP ret near (%rsp)

"base_len" :
3ed0(1): push %rbx
3ed1(3): mov %rdi,%rbx
3ed4(5): call 0xffffdbac(%rip)
3ed9(4): cmp $0x1,%rax
3edd(2): jbe 0xd(%rip)
3edf(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
3ee4(4): lea 0xffffffff(%rax),%rdx
3ee8(2): jz 0x10(%rip)
3eea(1): pop %rbx
3eeb(1): ret near (%rsp)
3eec(4): nop 0x0(%rax)
3ef0(3): mov %rax,%rdx
3ef3(5): nop 0x0(%rax,%rax,1)
3ef8(4): cmp $0x1,%rdx
3efc(2): jz 0x14(%rip)
3efe(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
3f03(4): lea 0xffffffff(%rdx),%rax
3f07(2): jz 0xffffffe9(%rip)
3f09(3): mov %rdx,%rax
3f0c(1): pop %rbx
3f0d(1): ret near (%rsp)
3f0e(2): nop 
3f10(5): mov $0x1,%eax
3f15(1): pop %rbx
3f16(1): ret near (%rsp)

"file_type" :
3f20(3): mov 0x18(%rdi),%eax
3f23(5): mov $0x5,%edx
3f28(5): and $0xf000,%eax
3f2d(5): cmp $0x8000,%eax
3f32(2): jz 0x4e(%rip)
3f34(5): cmp $0x4000,%eax
3f39(6): jz 0x97(%rip)
3f3f(5): cmp $0xa000,%eax
3f44(2): jz 0x6c(%rip)
3f46(5): cmp $0x6000,%eax
3f4b(6): jz 0x95(%rip)
3f51(5): cmp $0x2000,%eax
3f56(6): jz 0x9a(%rip)
3f5c(5): cmp $0x1000,%eax
3f61(6): jz 0x9f(%rip)
3f67(5): cmp $0xc000,%eax
3f6c(2): jz 0x54(%rip)
3f6e(7): lea 0x79b1(%rip),%rsi
3f75(2): xor %edi,%edi
3f77(5): jmp 0xffffdae9(%rip)
3f7c(4): nop 0x0(%rax)
3f80(5): cmp $0x0,0x30(%rdi)
3f85(2): jnz 0x13(%rip)
3f87(7): lea 0x792a(%rip),%rsi
3f8e(2): xor %edi,%edi
3f90(5): jmp 0xffffdad0(%rip)
3f95(3): nop (%rax)
3f98(7): lea 0x792c(%rip),%rsi
3f9f(2): xor %edi,%edi
3fa1(5): jmp 0xffffdabf(%rip)
3fa6(a): nop 0x0(%rax,%rax,1)
3fb0(7): lea 0x792b(%rip),%rsi
3fb7(2): xor %edi,%edi
3fb9(5): jmp 0xffffdaa7(%rip)
3fbe(2): nop 
3fc0(7): lea 0x7958(%rip),%rsi
3fc7(2): xor %edi,%edi
3fc9(5): jmp 0xffffda97(%rip)
3fce(2): nop 
3fd0(7): lea 0x7901(%rip),%rsi
3fd7(2): xor %edi,%edi
3fd9(5): jmp 0xffffda87(%rip)
3fde(2): nop 
3fe0(7): lea 0x7909(%rip),%rsi
3fe7(2): xor %edi,%edi
3fe9(5): jmp 0xffffda77(%rip)
3fee(2): nop 
3ff0(7): lea 0x790c(%rip),%rsi
3ff7(2): xor %edi,%edi
3ff9(5): jmp 0xffffda67(%rip)
3ffe(2): nop 
4000(7): lea 0x7913(%rip),%rsi
4007(2): xor %edi,%edi
4009(5): jmp 0xffffda57(%rip)

"file_name_concat" :
4010(4): sub $0x8,%rsp
4014(5): call 0x1c(%rip)
4019(3): test %rax,%rax
401c(2): jz 0x7(%rip)
401e(4): add $0x8,%rsp
4022(1): ret near (%rsp)
4023(5): call 0x276d(%rip)

"mfile_name_concat" :
4030(2): push %r15
4032(2): push %r14
4034(3): mov %rdx,%r15
4037(2): push %r13
4039(2): push %r12
403b(3): mov %rdi,%r12
403e(1): push %rbp
403f(1): push %rbx
4040(3): mov %rsi,%rbp
4043(4): sub $0x18,%rsp
4047(5): call 0xfffffe29(%rip)
404c(3): mov %rax,%rbx
404f(3): mov %rax,%rdi
4052(5): call 0xfffffe7e(%rip)
4057(3): sub %r12,%rbx
405a(3): mov %rax,%r13
405d(3): mov %rbp,%rdi
4060(3): add %rax,%rbx
4063(5): call 0xffffda1d(%rip)
4068(3): test %r13,%r13
406b(3): mov %rax,%r14
406e(2): jz 0x32(%rip)
4070(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
4076(6): jz 0xaa(%rip)
407c(2): xor %eax,%eax
407e(4): cmp $0x2f,0x0(%rbp)
4082(5): mov $0x0,%edx
4087(3): setnz %al
408a(4): mov %rax,(%rsp)
408e(5): mov $0x2f,%eax
4093(3): cmove %edx,%eax
4096(4): mov %al,0xf(%rsp)
409a(2): jmp 0x24(%rip)
409c(4): nop 0x0(%rax)
40a0(2): xor %eax,%eax
40a2(4): cmp $0x2f,0x0(%rbp)
40a6(5): mov $0x0,%edx
40ab(3): setz %al
40ae(4): mov %rax,(%rsp)
40b2(5): mov $0x2e,%eax
40b7(3): cmovne %edx,%eax
40ba(4): mov %al,0xf(%rsp)
40be(5): lea 0x1(%rbx,%r14,1),%rdi
40c3(4): add (%rsp),%rdi
40c7(5): call 0xffffdb59(%rip)
40cc(3): test %rax,%rax
40cf(3): mov %rax,%r13
40d2(2): jz 0x34(%rip)
40d4(3): mov %rax,%rdi
40d7(3): mov %rbx,%rdx
40da(3): mov %r12,%rsi
40dd(5): call 0xffffdbd3(%rip)
40e2(5): movzx 0xf(%rsp),%ecx
40e7(4): mov (%rsp),%rdi
40eb(3): add %rax,%rdi
40ee(3): test %r15,%r15
40f1(2): mov %cl,(%rax)
40f3(2): jz 0x5(%rip)
40f5(3): mov %rdi,(%r15)
40f8(3): mov %r14,%rdx
40fb(3): mov %rbp,%rsi
40fe(5): call 0xffffdbb2(%rip)
4103(3): mov $0x0,(%rax)
4106(4): add $0x18,%rsp
410a(3): mov %r13,%rax
410d(1): pop %rbx
410e(1): pop %rbp
410f(2): pop %r12
4111(2): pop %r13
4113(2): pop %r14
4115(2): pop %r15
4117(1): ret near (%rsp)
4118(8): nop 0x0(%rax,%rax,1)
4120(8): mov $0x0,(%rsp)
4128(5): mov $0x0,0xf(%rsp)
412d(2): jmp 0xffffff91(%rip)

"set_program_name" :
4130(3): test %rdi,%rdi
4133(1): push %rbx
4134(2): jz 0x79(%rip)
4136(5): mov $0x2f,%esi
413b(3): mov %rdi,%rbx
413e(5): call 0xffffd9c2(%rip)
4143(3): test %rax,%rax
4146(2): jz 0x57(%rip)
4148(4): lea 0x1(%rax),%r8
414c(3): mov %r8,%rdx
414f(3): sub %rbx,%rdx
4152(4): cmp $0x6,%rdx
4156(2): jle 0x47(%rip)
4158(4): lea 0xfffffffa(%rax),%rsi
415c(7): lea 0x780d(%rip),%rdi
4163(5): mov $0x7,%ecx
4168(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
416a(3): setnbe %dl
416d(3): sbb $0x0,%dl
4170(2): test %dl,%dl
4172(2): jnz 0x2b(%rip)
4174(7): lea 0x77fd(%rip),%rdi
417b(5): mov $0x3,%ecx
4180(3): mov %r8,%rsi
4183(3): mov %r8,%rbx
4186(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4188(3): setnbe %dl
418b(3): sbb $0x0,%dl
418e(2): test %dl,%dl
4190(2): jnz 0xd(%rip)
4192(4): lea 0x4(%rax),%rbx
4196(7): mov %rbx,0x20af03(%rip)
419d(7): mov %rbx,0x20af74(%rip)
41a4(7): mov %rbx,0x20af1d(%rip)
41ab(1): pop %rbx
41ac(1): ret near (%rsp)
41ad(7): mov 0x20af2c(%rip),%rcx
41b4(7): lea 0x777d(%rip),%rdi
41bb(5): mov $0x37,%edx
41c0(5): mov $0x1,%esi
41c5(5): call 0xffffdb8b(%rip)
41ca(5): call 0xffffd7c6(%rip)

"gettext_quote.part.1" :
41d0(1): push %rbp
41d1(1): push %rbx
41d2(3): mov %rdi,%rbp
41d5(2): mov %esi,%ebx
41d7(4): sub $0x8,%rsp
41db(5): call 0x6215(%rip)
41e0(3): movzx (%rax),%edx
41e3(3): and $0xdf,%edx
41e6(3): cmp $0x55,%dl
41e9(2): jz 0x77(%rip)
41eb(3): cmp $0x47,%dl
41ee(2): jz 0x22(%rip)
41f0(7): lea 0x7794(%rip),%rax
41f7(7): lea 0x778f(%rip),%rdx
41fe(3): cmp $0x9,%ebx
4201(4): cmovne %rdx,%rax
4205(4): add $0x8,%rsp
4209(1): pop %rbx
420a(1): pop %rbp
420b(1): ret near (%rsp)
420c(4): nop 0x0(%rax)
4210(4): movzx 0x1(%rax),%edx
4214(3): and $0xdf,%edx
4217(3): cmp $0x42,%dl
421a(2): jnz 0xffffffd6(%rip)
421c(4): cmp $0x31,0x2(%rax)
4220(2): jnz 0xffffffd0(%rip)
4222(4): cmp $0x38,0x3(%rax)
4226(2): jnz 0xffffffca(%rip)
4228(4): cmp $0x30,0x4(%rax)
422c(2): jnz 0xffffffc4(%rip)
422e(4): cmp $0x33,0x5(%rax)
4232(2): jnz 0xffffffbe(%rip)
4234(4): cmp $0x30,0x6(%rax)
4238(2): jnz 0xffffffb8(%rip)
423a(4): cmp $0x0,0x7(%rax)
423e(2): jnz 0xffffffb2(%rip)
4240(4): cmp $0x60,0x0(%rbp)
4244(7): lea 0x7739(%rip),%rax
424b(7): lea 0x7736(%rip),%rdx
4252(4): cmovne %rdx,%rax
4256(4): add $0x8,%rsp
425a(1): pop %rbx
425b(1): pop %rbp
425c(1): ret near (%rsp)
425d(3): nop (%rax)
4260(4): movzx 0x1(%rax),%edx
4264(3): and $0xdf,%edx
4267(3): cmp $0x54,%dl
426a(2): jnz 0xffffff86(%rip)
426c(4): movzx 0x2(%rax),%edx
4270(3): and $0xdf,%edx
4273(3): cmp $0x46,%dl
4276(6): jnz 0xffffff7a(%rip)
427c(4): cmp $0x2d,0x3(%rax)
4280(6): jnz 0xffffff70(%rip)
4286(4): cmp $0x38,0x4(%rax)
428a(6): jnz 0xffffff66(%rip)
4290(4): cmp $0x0,0x5(%rax)
4294(6): jnz 0xffffff5c(%rip)
429a(4): cmp $0x60,0x0(%rbp)
429e(7): lea 0x76d7(%rip),%rax
42a5(7): lea 0x76d4(%rip),%rdx
42ac(4): cmovne %rdx,%rax
42b0(4): add $0x8,%rsp
42b4(1): pop %rbx
42b5(1): pop %rbp
42b6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
42c0(2): push %r15
42c2(2): push %r14
42c4(3): mov %r8d,%r15d
42c7(2): push %r13
42c9(2): push %r12
42cb(3): mov %rdi,%r14
42ce(1): push %rbp
42cf(1): push %rbx
42d0(3): mov %r9d,%ebx
42d3(3): mov %rsi,%r13
42d6(3): mov %rcx,%rbp
42d9(3): and $0x2,%ebx
42dc(7): sub $0xb8,%rsp
42e3(8): mov 0xf0(%rsp),%rax
42eb(5): mov %rdx,0x10(%rsp)
42f0(5): mov %r8d,0x8(%rsp)
42f5(5): mov %r9d,0x78(%rsp)
42fa(5): mov %rax,0x20(%rsp)
42ff(8): mov 0xf8(%rsp),%rax
4307(5): mov %rax,0x68(%rsp)
430c(8): mov 0x100(%rsp),%rax
4314(5): mov %rax,0x60(%rsp)
4319(9): mov $0x28,%rax
4322(8): mov %rax,0xa8(%rsp)
432a(2): xor %eax,%eax
432c(5): call 0xffffd744(%rip)
4331(4): cmp $0xa,%r15d
4335(5): mov %rax,0x58(%rsp)
433a(6): jnbe 0x11b5(%rip)
4340(7): lea 0x7699(%rip),%rcx
4347(3): mov %r15d,%edx
434a(4): movsxd 0x0(%rcx,%rdx,4),%rax
434e(3): add %rcx,%rax
4351(2): jmp %rax
4353(5): mov $0x1,0xe(%rsp)
4358(5): mov $0x0,0x7c(%rsp)
435d(3): xor %r12d,%r12d
4360(9): mov $0x0,0x50(%rsp)
4369(5): mov $0x1,0xf(%rsp)
436e(5): mov $0x0,0xd(%rsp)
4373(7): lea 0x7613(%rip),%rax
437a(9): mov $0x1,0x18(%rsp)
4383(3): xor %r15d,%r15d
4386(8): mov $0x2,0x8(%rsp)
438e(5): mov %rax,0x48(%rsp)
4393(3): xor %r11d,%r11d
4396(3): mov %rbp,%rax
4399(3): mov %r12d,%r8d
439c(3): mov %r11,%rbp
439f(3): mov %rax,%r11
43a2(6): nop 0x0(%rax,%rax,1)
43a8(3): cmp %rbp,%r11
43ab(4): setnz %r12b
43af(4): cmp $0xffffffff,%r11
43b3(2): jnz 0xf(%rip)
43b5(5): mov 0x10(%rsp),%rax
43ba(4): cmp $0x0,0x0(%rax,%rbp,1)
43be(4): setnz %r12b
43c2(3): test %r12b,%r12b
43c5(6): jz 0x65b(%rip)
43cb(5): cmp $0x2,0x8(%rsp)
43d0(5): mov 0x10(%rsp),%rdi
43d5(4): lea 0x0(%rdi,%rbp,1),%r9
43d9(3): setnz %al
43dc(4): and 0xd(%rsp),%al
43e0(3): mov %eax,%r10d
43e3(6): jz 0xad(%rip)
43e9(5): mov 0x18(%rsp),%rax
43ee(3): test %rax,%rax
43f1(6): jz 0x42f(%rip)
43f7(4): cmp $0xffffffff,%r11
43fb(5): lea 0x0(%rbp,%rax,1),%rbx
4400(2): jnz 0x30(%rip)
4402(4): cmp $0x1,%rax
4406(2): jbe 0x2a(%rip)
4408(5): mov %r8b,0x38(%rsp)
440d(5): mov %r10b,0x30(%rsp)
4412(5): mov %r9,0x28(%rsp)
4417(5): call 0xffffd669(%rip)
441c(6): movzx 0x38(%rsp),%r8d
4422(6): movzx 0x30(%rsp),%r10d
4428(3): mov %rax,%r11
442b(5): mov 0x28(%rsp),%r9
4430(3): cmp %r11,%rbx
4433(5): mov %r10b,0x28(%rsp)
4438(6): jnbe 0x5b8(%rip)
443e(5): mov 0x18(%rsp),%rdx
4443(5): mov 0x48(%rsp),%rsi
4448(3): mov %r9,%rdi
444b(5): mov %r11,0x40(%rsp)
4450(5): mov %r8b,0x38(%rsp)
4455(5): mov %r9,0x30(%rsp)
445a(5): call 0xffffd716(%rip)
445f(2): test %eax,%eax
4461(5): mov 0x30(%rsp),%r9
4466(6): movzx 0x38(%rsp),%r8d
446c(5): mov 0x40(%rsp),%r11
4471(6): jnz 0x57f(%rip)
4477(5): cmp $0x0,0xf(%rsp)
447c(6): movzx 0x28(%rsp),%r10d
4482(6): jnz 0xf83(%rip)
4488(8): nop 0x0(%rax,%rax,1)
4490(4): movzx (%r9),%ebx
4494(3): cmp $0x7e,%bl
4497(6): jnbe 0x321(%rip)
449d(7): lea 0x7568(%rip),%rcx
44a4(3): movzx %bl,%edx
44a7(4): movsxd 0x0(%rcx,%rdx,4),%rax
44ab(3): add %rcx,%rax
44ae(2): jmp %rax
44b0(3): xor %r10d,%r10d
44b3(4): cmp $0x1,%r11
44b7(3): setnz %al
44ba(4): cmp $0xffffffff,%r11
44be(2): jnz 0xe(%rip)
44c0(5): mov 0x10(%rsp),%rax
44c5(4): cmp $0x0,0x1(%rax)
44c9(3): setnz %al
44cc(5): cmp $0x2,0x8(%rsp)
44d1(3): setz %dl
44d4(2): test %al,%al
44d6(6): jz 0x252(%rip)
44dc(3): xor %r12d,%r12d
44df(2): xor %eax,%eax
44e1(7): nop 0x0(%rax)
44e8(5): cmp $0x1,0xd(%rsp)
44ed(6): jnz 0x115(%rip)
44f3(2): test %dl,%dl
44f5(6): jnz 0x10d(%rip)
44fb(5): mov 0x20(%rsp),%rsi
4500(3): test %rsi,%rsi
4503(2): jz 0x16(%rip)
4505(2): mov %ebx,%edx
4507(3): shr $0x5,%dl
450a(3): movzx %dl,%edx
450d(3): mov 0x0(%rsi,%rdx,4),%edx
4510(3): bt %ebx,%edx
4513(6): jb 0x150(%rip)
4519(3): test %r10b,%r10b
451c(6): jnz 0x147(%rip)
4522(3): xor $0x1,%eax
4525(4): add $0x1,%rbp
4529(3): and %r8d,%eax
452c(2): test %al,%al
452e(2): jz 0x22(%rip)
4530(3): cmp %r15,%r13
4533(2): jbe 0x7(%rip)
4535(5): mov $0x27,0x0(%r14,%r15,1)
453a(4): lea 0x1(%r15),%rax
453e(3): cmp %rax,%r13
4541(2): jbe 0x8(%rip)
4543(6): mov $0x27,0x1(%r14,%r15,1)
4549(4): add $0x2,%r15
454d(3): xor %r8d,%r8d
4550(3): cmp %r13,%r15
4553(2): jnb 0x6(%rip)
4555(4): mov %bl,0x0(%r14,%r15,1)
4559(5): movzx 0xe(%rsp),%edi
455e(4): add $0x1,%r15
4562(5): mov $0x0,%eax
4567(3): test %r12b,%r12b
456a(3): cmove %eax,%edi
456d(5): mov %dil,0xe(%rsp)
4572(5): jmp 0xfffffe36(%rip)
4577(9): nop 0x0(%rax,%rax,1)
4580(3): xor %r10d,%r10d
4583(4): mov 0x8(%rsp),%eax
4587(3): cmp $0x2,%eax
458a(6): jz 0x5be(%rip)
4590(3): cmp $0x5,%eax
4593(6): jz 0x575(%rip)
4599(3): cmp $0x2,%eax
459c(5): mov $0x3f,%ebx
45a1(3): setz %dl
45a4(3): xor %r12d,%r12d
45a7(2): xor %eax,%eax
45a9(5): jmp 0xffffff3f(%rip)
45ae(2): nop 
45b0(3): xor %r10d,%r10d
45b3(5): cmp $0x2,0x8(%rsp)
45b8(6): jz 0x508(%rip)
45be(5): mov %r12b,0x7c(%rsp)
45c3(2): xor %edx,%edx
45c5(2): xor %eax,%eax
45c7(5): mov $0x27,%ebx
45cc(5): jmp 0xffffff1c(%rip)
45d1(7): nop 0x0(%rax)
45d8(5): mov $0x9,%edx
45dd(5): mov $0x74,%ebx
45e2(5): cmp $0x2,0x8(%rsp)
45e7(3): setz %al
45ea(4): and 0xf(%rsp),%al
45ee(6): jnz 0x150(%rip)
45f4(5): cmp $0x0,0xd(%rsp)
45f9(2): jnz 0x67(%rip)
45fb(2): mov %edx,%ebx
45fd(3): xor %r12d,%r12d
4600(2): xor %eax,%eax
4602(5): cmp $0x0,0xf(%rsp)
4607(6): jnz 0xfffffef4(%rip)
460d(5): jmp 0xffffff0c(%rip)
4612(6): nop 0x0(%rax,%rax,1)
4618(5): mov $0x8,%edx
461d(5): mov $0x62,%ebx
4622(2): jmp 0xffffffd2(%rip)
4624(4): nop 0x0(%rax)
4628(5): cmp $0x2,0x8(%rsp)
462d(6): jz 0x3d3(%rip)
4633(5): cmp $0x0,0xd(%rsp)
4638(6): jz 0x218(%rip)
463e(5): cmp $0x0,0xf(%rsp)
4643(6): jz 0x20d(%rip)
4649(6): cmp $0x0,0x18(%rsp)
464f(6): jnz 0x3bc(%rip)
4655(5): mov $0x5c,%ebx
465a(6): nop 0x0(%rax,%rax,1)
4660(3): xor %r12d,%r12d
4663(5): cmp $0x2,0x8(%rsp)
4668(3): setz %dl
466b(5): cmp $0x0,0xf(%rsp)
4670(2): mov %edx,%eax
4672(6): jnz 0x856(%rip)
4678(3): mov %r8d,%eax
467b(3): xor $0x1,%eax
467e(2): and %dl,%al
4680(2): jz 0x31(%rip)
4682(3): cmp %r15,%r13
4685(2): jbe 0x7(%rip)
4687(5): mov $0x27,0x0(%r14,%r15,1)
468c(4): lea 0x1(%r15),%rdx
4690(3): cmp %rdx,%r13
4693(2): jbe 0x8(%rip)
4695(6): mov $0x24,0x1(%r14,%r15,1)
469b(4): lea 0x2(%r15),%rdx
469f(3): cmp %rdx,%r13
46a2(2): jbe 0x8(%rip)
46a4(6): mov $0x27,0x2(%r14,%r15,1)
46aa(4): add $0x3,%r15
46ae(3): mov %eax,%r8d
46b1(3): cmp %r15,%r13
46b4(2): jbe 0x7(%rip)
46b6(5): mov $0x5c,0x0(%r14,%r15,1)
46bb(4): add $0x1,%r15
46bf(4): add $0x1,%rbp
46c3(5): jmp 0xfffffe8d(%rip)
46c8(8): nop 0x0(%rax,%rax,1)
46d0(5): cmp $0x0,0xd(%rsp)
46d5(6): jnz 0x1ce(%rip)
46db(2): xor %edx,%edx
46dd(5): test $0x1,0x78(%rsp)
46e2(6): jz 0xffffff19(%rip)
46e8(4): add $0x1,%rbp
46ec(5): jmp 0xfffffcbc(%rip)
46f1(7): nop 0x0(%rax)
46f8(5): cmp $0x2,0x8(%rsp)
46fd(3): setz %dl
4700(2): xor %eax,%eax
4702(5): jmp 0xfffffde6(%rip)
4707(9): nop 0x0(%rax,%rax,1)
4710(5): mov $0x7,%edx
4715(5): mov $0x61,%ebx
471a(5): jmp 0xfffffeda(%rip)
471f(1): nop 
4720(5): cmp $0x2,0x8(%rsp)
4725(3): setz %dl
4728(3): test %rbp,%rbp
472b(6): jnz 0xfffffdb1(%rip)
4731(5): movzx 0xf(%rsp),%eax
4736(2): and %dl,%al
4738(6): jz 0xfffffdb0(%rip)
473e(3): mov %r11,%rbp
4741(8): mov $0x2,0x8(%rsp)
4749(5): jmp 0x700(%rip)
474e(2): nop 
4750(5): cmp $0x2,0x8(%rsp)
4755(3): setz %dl
4758(3): xor %r12d,%r12d
475b(2): jmp 0xffffffd6(%rip)
475d(3): nop (%rax)
4760(5): cmp $0x2,0x8(%rsp)
4765(5): mov $0x20,%ebx
476a(3): setz %dl
476d(2): jmp 0xffffffc4(%rip)
476f(1): nop 
4770(5): mov $0xd,%edx
4775(5): mov $0x72,%ebx
477a(5): jmp 0xfffffe68(%rip)
477f(1): nop 
4780(5): mov $0xc,%edx
4785(5): mov $0x66,%ebx
478a(5): jmp 0xfffffe6a(%rip)
478f(1): nop 
4790(5): mov $0xb,%edx
4795(5): mov $0x76,%ebx
479a(5): jmp 0xfffffe5a(%rip)
479f(1): nop 
47a0(5): mov $0xa,%edx
47a5(5): mov $0x6e,%ebx
47aa(5): jmp 0xfffffe38(%rip)
47af(1): nop 
47b0(3): xor %r10d,%r10d
47b3(5): nop 0x0(%rax,%rax,1)
47b8(6): cmp $0x1,0x58(%rsp)
47be(6): jnz 0x3aa(%rip)
47c4(5): mov %r11,0x38(%rsp)
47c9(5): mov %r8b,0x30(%rsp)
47ce(5): mov %r10b,0x28(%rsp)
47d3(5): call 0xffffd5bd(%rip)
47d8(3): mov (%rax),%rcx
47db(3): movzx %bl,%edx
47de(6): movzx 0x28(%rsp),%r10d
47e4(6): movzx 0x30(%rsp),%r8d
47ea(5): mov 0x38(%rsp),%r11
47ef(5): mov $0x1,%edi
47f4(4): movzx 0x0(%rcx,%rdx,2),%eax
47f8(4): and $0x4000,%ax
47fc(4): setnz %r12b
4800(3): setz %al
4803(4): and 0xd(%rsp),%al
4807(2): test %al,%al
4809(6): jnz 0x998(%rip)
480f(5): cmp $0x2,0x8(%rsp)
4814(3): setz %dl
4817(5): jmp 0xfffffcd1(%rip)
481c(4): nop 0x0(%rax)
4820(4): movzx (%r9),%ebx
4824(3): cmp $0x7e,%bl
4827(2): jnbe 0xffffff89(%rip)
4829(7): lea 0x73d8(%rip),%rcx
4830(3): movzx %bl,%edx
4833(4): movsxd 0x0(%rcx,%rdx,4),%rax
4837(3): add %rcx,%rax
483a(2): jmp %rax
483c(4): nop 0x0(%rax)
4840(3): xor %r10d,%r10d
4843(5): cmp $0x0,0xd(%rsp)
4848(6): jnz 0xfffffdf6(%rip)
484e(2): nop 
4850(5): mov $0x5c,%edx
4855(5): mov $0x5c,%ebx
485a(5): jmp 0xfffffd9a(%rip)
485f(1): nop 
4860(5): mov $0xc,%edx
4865(3): xor %r10d,%r10d
4868(5): mov $0x66,%ebx
486d(5): jmp 0xfffffd87(%rip)
4872(6): nop 0x0(%rax,%rax,1)
4878(5): mov $0xa,%edx
487d(3): xor %r10d,%r10d
4880(5): mov $0x6e,%ebx
4885(5): jmp 0xfffffd5d(%rip)
488a(6): nop 0x0(%rax,%rax,1)
4890(5): mov $0x61,%ebx
4895(5): jmp 0xfffffdcb(%rip)
489a(6): nop 0x0(%rax,%rax,1)
48a0(3): xor %r10d,%r10d
48a3(5): cmp $0x2,0x8(%rsp)
48a8(3): setz %dl
48ab(5): cmp $0x0,0xf(%rsp)
48b0(6): jnz 0xb9a(%rip)
48b6(3): mov %r8d,%eax
48b9(3): mov %r15,%rcx
48bc(3): xor $0x1,%eax
48bf(2): and %dl,%al
48c1(2): jz 0x2f(%rip)
48c3(3): cmp %r15,%r13
48c6(2): jbe 0x7(%rip)
48c8(5): mov $0x27,0x0(%r14,%r15,1)
48cd(4): lea 0x1(%r15),%rcx
48d1(3): cmp %rcx,%r13
48d4(2): jbe 0x8(%rip)
48d6(6): mov $0x24,0x1(%r14,%r15,1)
48dc(4): lea 0x2(%r15),%rcx
48e0(3): cmp %rcx,%r13
48e3(6): jnbe 0x636(%rip)
48e9(4): lea 0x3(%r15),%rcx
48ed(3): mov %eax,%r8d
48f0(3): cmp %rcx,%r13
48f3(2): jbe 0x7(%rip)
48f5(5): mov $0x5c,0x0(%r14,%rcx,1)
48fa(5): cmp $0x2,0x8(%rsp)
48ff(4): lea 0x1(%rcx),%r15
4903(6): jz 0x606(%rip)
4909(4): lea 0x1(%rbp),%rax
490d(3): cmp %r11,%rax
4910(2): jnb 0x1b(%rip)
4912(5): mov 0x10(%rsp),%rax
4917(5): movzx 0x1(%rax,%rbp,1),%eax
491c(4): mov %al,0x28(%rsp)
4920(3): sub $0x30,%eax
4923(2): cmp $0x9,%al
4925(6): jbe 0x834(%rip)
492b(3): mov %r12d,%eax
492e(5): mov $0x30,%ebx
4933(3): xor %r12d,%r12d
4936(5): jmp 0xfffffbb2(%rip)
493b(5): nop 0x0(%rax,%rax,1)
4940(5): cmp $0x2,0x8(%rsp)
4945(3): mov %r10d,%r12d
4948(3): setz %dl
494b(3): xor %r10d,%r10d
494e(2): xor %eax,%eax
4950(5): jmp 0xfffffb98(%rip)
4955(3): nop (%rax)
4958(5): cmp $0x2,0x8(%rsp)
495d(3): setz %dl
4960(3): xor %r10d,%r10d
4963(5): jmp 0xfffffdc5(%rip)
4968(8): nop 0x0(%rax,%rax,1)
4970(5): cmp $0x2,0x8(%rsp)
4975(3): setz %dl
4978(3): xor %r10d,%r10d
497b(3): xor %r12d,%r12d
497e(5): jmp 0xfffffdb3(%rip)
4983(5): nop 0x0(%rax,%rax,1)
4988(5): cmp $0x2,0x8(%rsp)
498d(3): mov %r10d,%r12d
4990(5): mov $0x20,%ebx
4995(3): setz %dl
4998(3): xor %r10d,%r10d
499b(5): jmp 0xfffffd96(%rip)
49a0(5): mov $0xd,%edx
49a5(3): xor %r10d,%r10d
49a8(5): mov $0x72,%ebx
49ad(5): jmp 0xfffffc35(%rip)
49b2(6): nop 0x0(%rax,%rax,1)
49b8(5): mov $0x76,%ebx
49bd(5): jmp 0xfffffca3(%rip)
49c2(6): nop 0x0(%rax,%rax,1)
49c8(5): mov $0x9,%edx
49cd(3): xor %r10d,%r10d
49d0(5): mov $0x74,%ebx
49d5(5): jmp 0xfffffc0d(%rip)
49da(6): nop 0x0(%rax,%rax,1)
49e0(5): mov $0x62,%ebx
49e5(5): jmp 0xfffffc7b(%rip)
49ea(6): nop 0x0(%rax,%rax,1)
49f0(3): xor %r10d,%r10d
49f3(5): jmp 0xfffffa9d(%rip)
49f8(8): nop 0x0(%rax,%rax,1)
4a00(5): cmp $0x0,0xf(%rsp)
4a05(6): jnz 0x96b(%rip)
4a0b(4): add $0x1,%rbp
4a0f(3): mov %r8d,%eax
4a12(3): xor %r12d,%r12d
4a15(5): mov $0x5c,%ebx
4a1a(5): jmp 0xfffffb12(%rip)
4a1f(1): nop 
4a20(5): cmp $0x2,0x8(%rsp)
4a25(5): movzx 0xf(%rsp),%ebx
4a2a(3): mov %r8d,%r12d
4a2d(3): mov %r11,%rbp
4a30(3): setz %dl
4a33(2): mov %ebx,%eax
4a35(3): test %r15,%r15
4a38(3): setz %cl
4a3b(2): and %edx,%eax
4a3d(2): and %cl,%al
4a3f(6): jnz 0xa67(%rip)
4a45(2): mov %ebx,%eax
4a47(3): xor $0x1,%eax
4a4a(2): and %al,%dl
4a4c(6): jz 0x970(%rip)
4a52(5): cmp $0x0,0x7c(%rsp)
4a57(6): jz 0x963(%rip)
4a5d(5): cmp $0x0,0xe(%rsp)
4a62(6): jnz 0x9fb(%rip)
4a68(3): test %r13,%r13
4a6b(3): setz %al
4a6e(6): cmp $0x0,0x50(%rsp)
4a74(3): setnz %dl
4a77(2): and %dl,%al
4a79(6): jz 0xa23(%rip)
4a7f(5): mov 0x50(%rsp),%r13
4a84(7): lea 0x6f02(%rip),%rbx
4a8b(4): mov $0x27,(%r14)
4a8f(8): mov $0x2,0x8(%rsp)
4a97(6): mov $0x1,%r15d
4a9d(9): mov $0x1,0x18(%rsp)
4aa6(5): mov $0x0,0xf(%rsp)
4aab(5): mov %rbx,0x48(%rsp)
4ab0(4): mov %al,0x7c(%rsp)
4ab4(5): jmp 0xfffff8df(%rip)
4ab9(7): nop 0x0(%rax)
4ac0(5): cmp $0x0,0xf(%rsp)
4ac5(6): jnz 0x8ab(%rip)
4acb(3): test %r13,%r13
4ace(6): jz 0x402(%rip)
4ad4(2): xor %edx,%edx
4ad6(6): cmp $0x0,0x50(%rsp)
4adc(6): jnz 0x3f4(%rip)
4ae2(5): mov %r13,0x50(%rsp)
4ae7(4): add $0x3,%r15
4aeb(2): xor %eax,%eax
4aed(5): mov %r12b,0x7c(%rsp)
4af2(3): xor %r8d,%r8d
4af5(3): mov %rdx,%r13
4af8(5): mov $0x27,%ebx
4afd(5): jmp 0xfffffa1c(%rip)
4b02(6): nop 0x0(%rax,%rax,1)
4b08(5): test $0x4,0x78(%rsp)
4b0d(2): jz 0x23(%rip)
4b0f(4): lea 0x2(%rbp),%rcx
4b13(3): cmp %r11,%rcx
4b16(2): jnb 0x1a(%rip)
4b18(5): mov 0x10(%rsp),%rax
4b1d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4b22(6): jz 0x790(%rip)
4b28(8): nop 0x0(%rax,%rax,1)
4b30(2): xor %edx,%edx
4b32(3): xor %r12d,%r12d
4b35(2): xor %eax,%eax
4b37(5): mov $0x3f,%ebx
4b3c(5): jmp 0xfffff9ac(%rip)
4b41(7): nop 0x0(%rax)
4b48(5): cmp $0x0,0xf(%rsp)
4b4d(6): jnz 0x823(%rip)
4b53(3): xor %r12d,%r12d
4b56(2): xor %eax,%eax
4b58(5): mov $0x3f,%ebx
4b5d(5): jmp 0xfffff9bc(%rip)
4b62(6): nop 0x0(%rax,%rax,1)
4b68(8): lea 0xa0(%rsp),%rax
4b70(4): cmp $0xffffffff,%r11
4b74(c): mov $0x0,0xa0(%rsp)
4b80(5): mov %rax,0x28(%rsp)
4b85(2): jnz 0x2f(%rip)
4b87(5): mov 0x10(%rsp),%rdi
4b8c(5): mov %r8b,0x40(%rsp)
4b91(5): mov %r10b,0x38(%rsp)
4b96(5): mov %r9,0x30(%rsp)
4b9b(5): call 0xffffcee5(%rip)
4ba0(6): movzx 0x40(%rsp),%r8d
4ba6(6): movzx 0x38(%rsp),%r10d
4bac(3): mov %rax,%r11
4baf(5): mov 0x30(%rsp),%r9
4bb4(8): lea 0x9c(%rsp),%rax
4bbc(2): xor %ecx,%ecx
4bbe(4): mov %bl,0x7e(%rsp)
4bc2(5): mov %r8b,0x7d(%rsp)
4bc7(3): mov %rcx,%rbx
4bca(8): mov %r9,0x88(%rsp)
4bd2(5): mov %rax,0x38(%rsp)
4bd7(5): mov %r10b,0x7f(%rsp)
4bdc(8): mov %r15,0x80(%rsp)
4be4(5): mov %r14,0x40(%rsp)
4be9(5): mov %r13,0x70(%rsp)
4bee(5): mov %r11,0x30(%rsp)
4bf3(5): mov 0x10(%rsp),%rax
4bf8(5): lea 0x0(%rbp,%rbx,1),%r14
4bfd(5): mov 0x30(%rsp),%rdx
4c02(5): mov 0x28(%rsp),%rcx
4c07(5): mov 0x38(%rsp),%rdi
4c0c(4): lea 0x0(%rax,%r14,1),%r13
4c10(3): sub %r14,%rdx
4c13(3): mov %r13,%rsi
4c16(5): call 0x41ca(%rip)
4c1b(3): test %rax,%rax
4c1e(3): mov %rax,%r15
4c21(2): jz 0x50(%rip)
4c23(4): cmp $0xffffffff,%rax
4c27(6): jz 0x61e(%rip)
4c2d(4): cmp $0xfffffffe,%rax
4c31(6): jz 0x5a0(%rip)
4c37(5): cmp $0x2,0x8(%rsp)
4c3c(3): setz %al
4c3f(4): and 0xf(%rsp),%al
4c43(6): jnz 0x19d(%rip)
4c49(7): mov 0x9c(%rsp),%edi
4c50(5): call 0xffffd130(%rip)
4c55(5): mov 0x28(%rsp),%rdi
4c5a(2): test %eax,%eax
4c5c(5): mov $0x0,%eax
4c61(4): cmove %eax,%r12d
4c65(3): add %r15,%rbx
4c68(5): call 0xffffd108(%rip)
4c6d(2): test %eax,%eax
4c6f(2): jz 0xffffff84(%rip)
4c71(3): mov %r12d,%edx
4c74(3): mov %rbx,%rdi
4c77(6): movzx 0x7d(%rsp),%r8d
4c7d(3): xor $0x1,%edx
4c80(5): movzx 0x7e(%rsp),%ebx
4c85(6): movzx 0x7f(%rsp),%r10d
4c8b(4): and 0xd(%rsp),%dl
4c8f(8): mov 0x80(%rsp),%r15
4c97(5): mov 0x40(%rsp),%r14
4c9c(5): mov 0x70(%rsp),%r13
4ca1(5): mov 0x30(%rsp),%r11
4ca6(4): cmp $0x1,%rdi
4caa(6): jbe 0x601(%rip)
4cb0(3): mov %rdi,%rcx
4cb3(2): xor %esi,%esi
4cb5(6): movzx 0xf(%rsp),%r9d
4cbb(3): add %rbp,%rcx
4cbe(5): mov 0x10(%rsp),%rdi
4cc3(5): jmp 0xbb(%rip)
4cc8(8): nop 0x0(%rax,%rax,1)
4cd0(5): cmp $0x2,0x8(%rsp)
4cd5(3): setz %al
4cd8(3): test %r9b,%r9b
4cdb(6): jnz 0x4b5(%rip)
4ce1(3): mov %r8d,%esi
4ce4(3): xor $0x1,%esi
4ce7(3): and %sil,%al
4cea(2): jz 0x31(%rip)
4cec(3): cmp %r15,%r13
4cef(2): jbe 0x7(%rip)
4cf1(5): mov $0x27,0x0(%r14,%r15,1)
4cf6(4): lea 0x1(%r15),%rsi
4cfa(3): cmp %rsi,%r13
4cfd(2): jbe 0x8(%rip)
4cff(6): mov $0x24,0x1(%r14,%r15,1)
4d05(4): lea 0x2(%r15),%rsi
4d09(3): cmp %rsi,%r13
4d0c(2): jbe 0x8(%rip)
4d0e(6): mov $0x27,0x2(%r14,%r15,1)
4d14(4): add $0x3,%r15
4d18(3): mov %eax,%r8d
4d1b(3): cmp %r15,%r13
4d1e(2): jbe 0x7(%rip)
4d20(5): mov $0x5c,0x0(%r14,%r15,1)
4d25(4): lea 0x1(%r15),%rax
4d29(3): cmp %rax,%r13
4d2c(2): jbe 0xf(%rip)
4d2e(2): mov %ebx,%eax
4d30(3): shr $0x6,%al
4d33(3): add $0x30,%eax
4d36(5): mov %al,0x1(%r14,%r15,1)
4d3b(4): lea 0x2(%r15),%rax
4d3f(3): cmp %rax,%r13
4d42(2): jbe 0x12(%rip)
4d44(2): mov %ebx,%eax
4d46(3): shr $0x3,%al
4d49(3): and $0x7,%eax
4d4c(3): add $0x30,%eax
4d4f(5): mov %al,0x2(%r14,%r15,1)
4d54(3): and $0x7,%ebx
4d57(4): add $0x1,%rbp
4d5b(4): add $0x3,%r15
4d5f(3): add $0x30,%ebx
4d62(3): cmp %rcx,%rbp
4d65(6): jnb 0xfffff7eb(%rip)
4d6b(2): mov %edx,%esi
4d6d(3): cmp %r15,%r13
4d70(2): jbe 0x6(%rip)
4d72(4): mov %bl,0x0(%r14,%r15,1)
4d76(4): movzx 0x0(%rdi,%rbp,1),%ebx
4d7a(4): add $0x1,%r15
4d7e(2): test %dl,%dl
4d80(6): jnz 0xffffff50(%rip)
4d86(2): mov %esi,%eax
4d88(3): xor $0x1,%eax
4d8b(3): and %r8d,%eax
4d8e(3): test %r10b,%r10b
4d91(2): jz 0x10(%rip)
4d93(3): cmp %r15,%r13
4d96(2): jbe 0x7(%rip)
4d98(5): mov $0x5c,0x0(%r14,%r15,1)
4d9d(4): add $0x1,%r15
4da1(4): add $0x1,%rbp
4da5(3): cmp %rcx,%rbp
4da8(6): jnb 0xfffff784(%rip)
4dae(2): test %al,%al
4db0(6): jz 0x3fe(%rip)
4db6(3): cmp %r15,%r13
4db9(2): jbe 0x7(%rip)
4dbb(5): mov $0x27,0x0(%r14,%r15,1)
4dc0(4): lea 0x1(%r15),%rax
4dc4(3): cmp %rax,%r13
4dc7(2): jbe 0x8(%rip)
4dc9(6): mov $0x27,0x1(%r14,%r15,1)
4dcf(4): add $0x2,%r15
4dd3(3): xor %r10d,%r10d
4dd6(3): xor %r8d,%r8d
4dd9(2): jmp 0xffffff94(%rip)
4ddb(5): nop 0x0(%rax,%rax,1)
4de0(4): cmp $0x1,%r15
4de4(6): jz 0xfffffe65(%rip)
4dea(5): mov 0x10(%rsp),%rdi
4def(4): lea 0x0(%rdi,%r15,1),%rcx
4df3(5): lea 0x1(%rdi,%r14,1),%rdx
4df8(4): lea 0x0(%rcx,%r14,1),%r8
4dfc(2): jmp 0x11(%rip)
4dfe(2): nop 
4e00(4): add $0x1,%rdx
4e04(3): cmp %rdx,%r8
4e07(6): jz 0xfffffe42(%rip)
4e0d(3): movzx (%rdx),%ecx
4e10(3): sub $0x5b,%ecx
4e13(3): cmp $0x21,%cl
4e16(2): jnbe 0xffffffea(%rip)
4e18(5): mov $0x1,%esi
4e1d(3): shl/sal %cl,%rsi
4e20(3): mov %rsi,%rcx
4e23(a): mov $0x8589934635,%rsi
4e2d(3): test %rsi,%rcx
4e30(2): jz 0xffffffd0(%rip)
4e32(5): mov 0x40(%rsp),%r14
4e37(5): mov 0x70(%rsp),%r13
4e3c(5): mov 0x30(%rsp),%rbp
4e41(8): mov $0x2,0x8(%rsp)
4e49(5): cmp $0x0,0xd(%rsp)
4e4e(2): jz 0x12(%rip)
4e50(2): test %al,%al
4e52(5): mov $0x4,%eax
4e57(5): cmove 0x8(%rsp),%eax
4e5c(4): mov %eax,0x8(%rsp)
4e60(4): sub $0x8,%rsp
4e64(3): mov %rbp,%rcx
4e67(3): mov %r13,%rsi
4e6a(4): push 0x68(%rsp)
4e6e(4): push 0x78(%rsp)
4e72(3): mov %r14,%rdi
4e75(2): push $0x0
4e77(8): mov 0x98(%rsp),%r9d
4e7f(5): mov 0x28(%rsp),%r8d
4e84(5): mov 0x30(%rsp),%rdx
4e89(4): and $0xfd,%r9d
4e8d(5): call 0xfffff433(%rip)
4e92(4): add $0x20,%rsp
4e96(3): mov %rax,%r15
4e99(8): mov 0xa8(%rsp),%rbx
4ea1(9): xor $0x28,%rbx
4eaa(3): mov %r15,%rax
4ead(6): jnz 0x606(%rip)
4eb3(7): add $0xb8,%rsp
4eba(1): pop %rbx
4ebb(1): pop %rbp
4ebc(2): pop %r12
4ebe(2): pop %r13
4ec0(2): pop %r14
4ec2(2): pop %r15
4ec4(1): ret near (%rsp)
4ec5(3): nop (%rax)
4ec8(3): mov %r11,%rbp
4ecb(5): jmp 0xffffff7e(%rip)
4ed0(3): cmp %r15,%r13
4ed3(2): jbe 0x7(%rip)
4ed5(5): mov $0x27,0x0(%r14,%r15,1)
4eda(4): lea 0x1(%r15),%rax
4ede(3): cmp %rax,%r13
4ee1(2): jbe 0x8(%rip)
4ee3(6): mov $0x5c,0x1(%r14,%r15,1)
4ee9(4): lea 0x2(%r15),%rax
4eed(3): cmp %rax,%r13
4ef0(6): jbe 0x5f2(%rip)
4ef6(3): mov %r13,%rdx
4ef9(6): mov $0x27,0x2(%r14,%r15,1)
4eff(5): mov 0x50(%rsp),%r13
4f04(5): jmp 0xfffffbde(%rip)
4f09(3): mov %r12d,%eax
4f0c(5): mov $0x30,%ebx
4f11(3): xor %r12d,%r12d
4f14(5): jmp 0xfffff605(%rip)
4f19(6): mov $0x27,0x2(%r14,%r15,1)
4f1f(5): jmp 0xfffff9ca(%rip)
4f24(2): test %ebx,%ebx
4f26(6): jnz 0xfffff42d(%rip)
4f2c(5): mov $0x1,0xd(%rsp)
4f31(3): test %r13,%r13
4f34(6): jnz 0x596(%rip)
4f3a(7): lea 0x6a4c(%rip),%rax
4f41(9): mov $0x0,0x50(%rsp)
4f4a(5): mov $0x1,0xe(%rsp)
4f4f(5): mov $0x0,0x7c(%rsp)
4f54(3): xor %r12d,%r12d
4f57(5): mov $0x0,0xf(%rsp)
4f5c(9): mov $0x1,0x18(%rsp)
4f65(5): mov %rax,0x48(%rsp)
4f6a(6): mov $0x1,%r15d
4f70(8): mov $0x2,0x8(%rsp)
4f78(5): jmp 0xfffff41b(%rip)
4f7d(3): nop (%rax)
4f80(2): test %ebx,%ebx
4f82(6): jnz 0x3fb(%rip)
4f88(3): test %r13,%r13
4f8b(6): jz 0x22b(%rip)
4f91(4): mov $0x22,(%r14)
4f95(5): mov $0x1,0xe(%rsp)
4f9a(3): xor %r12d,%r12d
4f9d(5): mov $0x0,0x7c(%rsp)
4fa2(9): mov $0x0,0x50(%rsp)
4fab(7): lea 0x69d9(%rip),%rax
4fb2(5): mov $0x0,0xf(%rsp)
4fb7(5): mov $0x1,0xd(%rsp)
4fbc(9): mov $0x1,0x18(%rsp)
4fc5(6): mov $0x1,%r15d
4fcb(5): mov %rax,0x48(%rsp)
4fd0(5): jmp 0xfffff3c3(%rip)
4fd5(7): lea 0x69af(%rip),%rax
4fdc(5): mov $0x1,0xe(%rsp)
4fe1(5): mov $0x0,0x7c(%rsp)
4fe6(3): xor %r12d,%r12d
4fe9(9): mov $0x0,0x50(%rsp)
4ff2(5): mov $0x1,0xf(%rsp)
4ff7(5): mov $0x1,0xd(%rsp)
4ffc(9): mov $0x1,0x18(%rsp)
5005(3): xor %r15d,%r15d
5008(5): mov %rax,0x48(%rsp)
500d(8): mov $0x5,0x8(%rsp)
5015(5): jmp 0xfffff37e(%rip)
501a(5): mov $0x1,0xe(%rsp)
501f(5): mov $0x0,0x7c(%rsp)
5024(3): xor %r12d,%r12d
5027(9): mov $0x0,0x50(%rsp)
5030(5): mov $0x0,0xf(%rsp)
5035(3): xor %r15d,%r15d
5038(5): mov $0x1,0xd(%rsp)
503d(9): mov $0x0,0x18(%rsp)
5046(9): mov $0x0,0x48(%rsp)
504f(5): jmp 0xfffff344(%rip)
5054(5): cmp $0xa,0x8(%rsp)
5059(2): jz 0x58(%rip)
505b(7): lea 0x692d(%rip),%rsi
5062(2): xor %edi,%edi
5064(5): mov $0x5,%edx
5069(5): call 0xffffc9f7(%rip)
506e(3): mov %rax,%rcx
5071(5): mov %rax,0x68(%rsp)
5076(7): lea 0x6912(%rip),%rax
507d(3): cmp %rax,%rcx
5080(6): jz 0x39e(%rip)
5086(7): lea 0x6900(%rip),%rsi
508d(2): xor %edi,%edi
508f(5): mov $0x5,%edx
5094(5): call 0xffffc9cc(%rip)
5099(3): mov %rax,%rcx
509c(5): mov %rax,0x60(%rsp)
50a1(7): lea 0x68e5(%rip),%rax
50a8(3): cmp %rax,%rcx
50ab(6): jz 0x389(%rip)
50b1(3): xor %r15d,%r15d
50b4(2): test %ebx,%ebx
50b6(6): jz 0x1c7(%rip)
50bc(2): test %ebx,%ebx
50be(5): mov 0x60(%rsp),%rbx
50c3(5): setnz 0xf(%rsp)
50c8(3): xor %r12d,%r12d
50cb(3): mov %rbx,%rdi
50ce(5): call 0xffffc9b2(%rip)
50d3(5): mov %rbx,0x48(%rsp)
50d8(5): mov %rax,0x18(%rsp)
50dd(5): mov $0x1,0xe(%rsp)
50e2(5): mov $0x0,0x7c(%rsp)
50e7(9): mov $0x0,0x50(%rsp)
50f0(5): mov $0x1,0xd(%rsp)
50f5(5): jmp 0xfffff29e(%rip)
50fa(5): mov $0x1,0xe(%rsp)
50ff(5): mov $0x0,0x7c(%rsp)
5104(3): xor %r12d,%r12d
5107(9): mov $0x0,0x50(%rsp)
5110(5): mov $0x0,0xf(%rsp)
5115(3): xor %r15d,%r15d
5118(5): mov $0x0,0xd(%rsp)
511d(9): mov $0x0,0x18(%rsp)
5126(9): mov $0x0,0x48(%rsp)
512f(5): jmp 0xfffff264(%rip)
5134(5): mov $0x1,0xe(%rsp)
5139(5): mov $0x0,0x7c(%rsp)
513e(3): xor %r12d,%r12d
5141(9): mov $0x0,0x50(%rsp)
514a(5): mov $0x1,0xf(%rsp)
514f(5): mov $0x1,0xd(%rsp)
5154(5): jmp 0xfffff21f(%rip)
5159(3): cmp %r15,%r13
515c(2): jbe 0x7(%rip)
515e(5): mov $0x30,0x0(%r14,%r15,1)
5163(4): lea 0x2(%rcx),%rax
5167(3): cmp %rax,%r13
516a(2): jbe 0x8(%rip)
516c(6): mov $0x30,0x2(%r14,%rcx,1)
5172(3): mov %r12d,%eax
5175(4): lea 0x3(%rcx),%r15
5179(3): xor %r12d,%r12d
517c(5): mov $0x30,%ebx
5181(5): jmp 0xfffff367(%rip)
5186(a): nop 0x0(%rax,%rax,1)
5190(5): movzx 0xf(%rsp),%ebx
5195(3): mov %r11,%rbp
5198(4): mov %bl,0xd(%rsp)
519c(5): jmp 0xfffffcad(%rip)
51a1(5): movzx 0xd(%rsp),%edx
51a6(3): xor %r12d,%r12d
51a9(5): jmp 0xfffffb07(%rip)
51ae(3): xor %r10d,%r10d
51b1(5): jmp 0xfffffbbc(%rip)
51b6(9): mov $0x0,0x50(%rsp)
51bf(5): mov $0x1,0xe(%rsp)
51c4(3): xor %r12d,%r12d
51c7(5): mov $0x0,0x7c(%rsp)
51cc(5): jmp 0xfffffddf(%rip)
51d1(5): mov 0x30(%rsp),%r11
51d6(3): mov %r14,%rsi
51d9(3): mov %r13,%rcx
51dc(3): mov %rbx,%rax
51df(3): mov %rbx,%rdi
51e2(6): movzx 0x7d(%rsp),%r8d
51e8(5): movzx 0x7e(%rsp),%ebx
51ed(8): mov 0x88(%rsp),%r9
51f5(3): cmp %r11,%rsi
51f8(6): movzx 0x7f(%rsp),%r10d
51fe(8): mov 0x80(%rsp),%r15
5206(5): mov 0x40(%rsp),%r14
520b(5): mov 0x70(%rsp),%r13
5210(2): jnb 0x28(%rip)
5212(3): cmp $0x0,(%rcx)
5215(2): jnz 0x12(%rip)
5217(2): jmp 0x21(%rip)
5219(7): nop 0x0(%rax)
5220(5): cmp $0x0,0x0(%r9,%rax,1)
5225(2): jz 0x10(%rip)
5227(4): add $0x1,%rax
522b(5): lea 0x0(%rbp,%rax,1),%rdx
5230(3): cmp %rdx,%r11
5233(2): jnbe 0xffffffed(%rip)
5235(3): mov %rax,%rdi
5238(5): movzx 0xd(%rsp),%edx
523d(3): xor %r12d,%r12d
5240(5): jmp 0xfffffa66(%rip)
5245(3): mov %rbx,%rdi
5248(6): movzx 0x7d(%rsp),%r8d
524e(5): movzx 0x7e(%rsp),%ebx
5253(6): movzx 0x7f(%rsp),%r10d
5259(8): mov 0x80(%rsp),%r15
5261(3): xor %r12d,%r12d
5264(5): mov 0x40(%rsp),%r14
5269(5): mov 0x70(%rsp),%r13
526e(5): mov 0x30(%rsp),%r11
5273(5): movzx 0xd(%rsp),%edx
5278(5): jmp 0xfffffa2e(%rip)
527d(5): mov 0x68(%rsp),%rdx
5282(3): movzx (%rdx),%eax
5285(2): test %al,%al
5287(6): jz 0xfffffe35(%rip)
528d(3): nop (%rax)
5290(3): cmp %r15,%r13
5293(2): jbe 0x6(%rip)
5295(4): mov %al,0x0(%r14,%r15,1)
5299(4): add $0x1,%r15
529d(5): movzx 0x0(%rdx,%r15,1),%eax
52a2(2): test %al,%al
52a4(2): jnz 0xffffffec(%rip)
52a6(5): jmp 0xfffffe16(%rip)
52ab(2): mov %edx,%eax
52ad(5): jmp 0xfffff55a(%rip)
52b2(4): movzx 0x0(%rax,%rcx,1),%ebx
52b6(3): cmp $0x3e,%bl
52b9(6): jnbe 0xfffff877(%rip)
52bf(a): mov $0x8070630310989004800,%rax
52c9(4): bt %rbx,%rax
52cd(6): jnb 0xfffff863(%rip)
52d3(5): cmp $0x0,0xf(%rsp)
52d8(6): jnz 0x1ea(%rip)
52de(3): cmp %r15,%r13
52e1(2): jbe 0x7(%rip)
52e3(5): mov $0x3f,0x0(%r14,%r15,1)
52e8(4): lea 0x1(%r15),%rax
52ec(3): cmp %rax,%r13
52ef(2): jbe 0x8(%rip)
52f1(6): mov $0x22,0x1(%r14,%r15,1)
52f7(4): lea 0x2(%r15),%rax
52fb(3): cmp %rax,%r13
52fe(2): jbe 0x8(%rip)
5300(6): mov $0x22,0x2(%r14,%r15,1)
5306(4): lea 0x3(%r15),%rax
530a(3): cmp %rax,%r13
530d(2): jbe 0x8(%rip)
530f(6): mov $0x3f,0x3(%r14,%r15,1)
5315(4): add $0x4,%r15
5319(2): xor %edx,%edx
531b(3): xor %r12d,%r12d
531e(2): xor %eax,%eax
5320(3): mov %rcx,%rbp
5323(5): jmp 0xfffff1c5(%rip)
5328(2): test %ebx,%ebx
532a(6): jz 0x18e(%rip)
5330(7): lea 0x6656(%rip),%rax
5337(5): mov $0x1,0xe(%rsp)
533c(5): mov $0x0,0x7c(%rsp)
5341(3): xor %r12d,%r12d
5344(9): mov $0x0,0x50(%rsp)
534d(5): mov $0x1,0xf(%rsp)
5352(5): mov $0x0,0xd(%rsp)
5357(9): mov $0x1,0x18(%rsp)
5360(3): xor %r15d,%r15d
5363(5): mov %rax,0x48(%rsp)
5368(5): jmp 0xfffff02b(%rip)
536d(3): nop (%rax)
5370(3): mov %r11,%rbp
5373(5): movzx 0xf(%rsp),%eax
5378(5): jmp 0xfffffad1(%rip)
537d(7): lea 0x6607(%rip),%rax
5384(5): mov $0x1,0xe(%rsp)
5389(5): mov $0x0,0x7c(%rsp)
538e(3): xor %r12d,%r12d
5391(9): mov $0x0,0x50(%rsp)
539a(5): mov $0x1,0xf(%rsp)
539f(5): mov $0x1,0xd(%rsp)
53a4(9): mov $0x1,0x18(%rsp)
53ad(3): xor %r15d,%r15d
53b0(5): mov %rax,0x48(%rsp)
53b5(5): jmp 0xffffefde(%rip)
53ba(2): mov %edx,%eax
53bc(5): mov 0x48(%rsp),%rbx
53c1(3): test %rbx,%rbx
53c4(2): jz 0x2e(%rip)
53c6(2): test %al,%al
53c8(2): jz 0x2a(%rip)
53ca(3): movzx (%rbx),%ecx
53cd(3): mov %rbx,%rax
53d0(2): test %cl,%cl
53d2(2): jz 0x20(%rip)
53d4(3): mov %r15,%rdx
53d7(3): sub %r15,%rax
53da(3): cmp %rdx,%r13
53dd(2): jbe 0x6(%rip)
53df(4): mov %cl,0x0(%r14,%rdx,1)
53e3(4): add $0x1,%rdx
53e7(4): movzx 0x0(%rax,%rdx,1),%ecx
53eb(2): test %cl,%cl
53ed(2): jnz 0xffffffed(%rip)
53ef(3): mov %rdx,%r15
53f2(3): cmp %r15,%r13
53f5(6): jbe 0xfffffaa4(%rip)
53fb(5): mov $0x0,0x0(%r14,%r15,1)
5400(5): jmp 0xfffffa99(%rip)
5405(5): cmp $0x2,0x8(%rsp)
540a(5): movzx 0xf(%rsp),%ebx
540f(3): mov %r11,%rbp
5412(3): setz %al
5415(4): mov %bl,0xd(%rsp)
5419(5): jmp 0xfffffa30(%rip)
541e(4): mov 0x8(%rsp),%esi
5422(3): mov %rcx,%rdi
5425(5): call 0xffffedab(%rip)
542a(5): mov %rax,0x68(%rsp)
542f(5): jmp 0xfffffc57(%rip)
5434(4): mov 0x8(%rsp),%esi
5438(3): mov %rcx,%rdi
543b(5): call 0xffffed95(%rip)
5440(5): mov %rax,0x60(%rsp)
5445(5): jmp 0xfffffc6c(%rip)
544a(5): movzx 0xf(%rsp),%ebx
544f(3): mov %r11,%rbp
5452(2): mov %edx,%eax
5454(4): mov %bl,0xd(%rsp)
5458(5): jmp 0xfffff9f1(%rip)
545d(4): sub $0x8,%rsp
5461(6): mov $0x5,%r8d
5467(3): mov %r11,%rcx
546a(4): push 0x68(%rsp)
546e(4): push 0x78(%rsp)
5472(3): mov %r14,%rdi
5475(4): push 0x38(%rsp)
5479(8): mov 0x98(%rsp),%r9d
5481(5): mov 0x30(%rsp),%rdx
5486(5): mov 0x70(%rsp),%rsi
548b(5): call 0xffffee35(%rip)
5490(4): add $0x20,%rsp
5494(3): mov %rax,%r15
5497(5): jmp 0xfffffa02(%rip)
549c(5): movzx 0x7c(%rsp),%eax
54a1(5): jmp 0xffffff1b(%rip)
54a6(8): mov $0x2,0x8(%rsp)
54ae(5): jmp 0xfffff99b(%rip)
54b3(5): call 0xffffc5fd(%rip)
54b8(5): mov $0x0,0xd(%rsp)
54bd(5): jmp 0xfffffa74(%rip)
54c2(3): mov %r11,%rbp
54c5(5): jmp 0xfffff99b(%rip)
54ca(5): mov $0x1,0xe(%rsp)
54cf(2): xor %eax,%eax
54d1(3): xor %r12d,%r12d
54d4(9): mov $0x0,0x50(%rsp)
54dd(5): jmp 0xfffff5a7(%rip)
54e2(3): mov %r13,%rdx
54e5(5): mov 0x50(%rsp),%r13
54ea(5): jmp 0xfffff5f8(%rip)
54ef(5): call 0xffffc4a1(%rip)

"quotearg_n_options" :
5500(2): push %r15
5502(2): push %r14
5504(3): movsxd %edi,%r15
5507(2): push %r13
5509(2): push %r12
550b(3): mov %rdx,%r14
550e(1): push %rbp
550f(1): push %rbx
5510(3): mov %rcx,%rbp
5513(4): sub $0x28,%rsp
5517(5): mov %rsi,0x8(%rsp)
551c(5): call 0xffffc484(%rip)
5521(3): mov %rax,%r13
5524(2): mov (%rax),%eax
5526(3): test %r15d,%r15d
5529(7): mov 0x209b50(%rip),%rbx
5530(4): mov %eax,0x18(%rsp)
5534(6): js 0x16d(%rip)
553a(7): cmp %r15d,0x209b37(%rip)
5541(2): jnle 0x64(%rip)
5543(7): cmp $0x7fffffff,%r15d
554a(6): jz 0x15c(%rip)
5550(4): lea 0x1(%r15),%r12d
5554(7): lea 0x209b35(%rip),%rax
555b(3): movsxd %r12d,%rsi
555e(4): shl/sal $0x4,%rsi
5562(3): cmp %rax,%rbx
5565(6): jz 0x11b(%rip)
556b(3): mov %rbx,%rdi
556e(5): call 0x1032(%rip)
5573(3): mov %rax,%rbx
5576(7): mov %rax,0x209b03(%rip)
557d(7): movsxd 0x209af4(%rip),%rdi
5584(3): mov %r12d,%edx
5587(2): xor %esi,%esi
5589(2): sub %edi,%edx
558b(4): shl/sal $0x4,%rdi
558f(3): movsxd %edx,%rdx
5592(3): add %rbx,%rdi
5595(4): shl/sal $0x4,%rdx
5599(5): call 0xffffc597(%rip)
559e(7): mov %r12d,0x209ad3(%rip)
55a5(3): mov 0x4(%rbp),%eax
55a8(4): shl/sal $0x4,%r15
55ac(4): sub $0x8,%rsp
55b0(3): add %r15,%rbx
55b3(4): lea 0x8(%rbp),%r15
55b7(4): mov 0x0(%rbp),%r8d
55bb(3): mov (%rbx),%r11
55be(4): mov 0x8(%rbx),%r12
55c2(3): mov %r14,%rcx
55c5(3): or $0x1,%eax
55c8(4): mov %eax,0x24(%rsp)
55cc(3): push 0x30(%rbp)
55cf(3): mov %eax,%r9d
55d2(3): push 0x28(%rbp)
55d5(2): push %r15
55d7(3): mov %r11,%rsi
55da(5): mov 0x28(%rsp),%rdx
55df(3): mov %r12,%rdi
55e2(5): mov %r11,0x30(%rsp)
55e7(5): call 0xffffecd9(%rip)
55ec(4): add $0x20,%rsp
55f0(5): mov 0x10(%rsp),%r11
55f5(3): cmp %rax,%r11
55f8(2): jnbe 0x69(%rip)
55fa(4): lea 0x1(%rax),%rsi
55fe(7): lea 0x209b1b(%rip),%rax
5605(3): cmp %rax,%r12
5608(3): mov %rsi,(%rbx)
560b(2): jz 0x14(%rip)
560d(3): mov %r12,%rdi
5610(5): mov %rsi,0x10(%rsp)
5615(5): call 0xffffc78b(%rip)
561a(5): mov 0x10(%rsp),%rsi
561f(3): mov %rsi,%rdi
5622(5): mov %rsi,0x10(%rsp)
5627(5): call 0xf19(%rip)
562c(4): sub $0x8,%rsp
5630(4): mov %rax,0x8(%rbx)
5634(4): mov 0x0(%rbp),%r8d
5638(3): push 0x30(%rbp)
563b(3): push 0x28(%rbp)
563e(3): mov %r14,%rcx
5641(2): push %r15
5643(5): mov 0x3c(%rsp),%r9d
5648(3): mov %rax,%rdi
564b(5): mov 0x28(%rsp),%rdx
5650(5): mov 0x30(%rsp),%rsi
5655(3): mov %rax,%r12
5658(5): call 0xffffec68(%rip)
565d(4): add $0x20,%rsp
5661(4): mov 0x18(%rsp),%eax
5665(4): mov %eax,0x0(%r13)
5669(4): add $0x28,%rsp
566d(3): mov %r12,%rax
5670(1): pop %rbx
5671(1): pop %rbp
5672(2): pop %r12
5674(2): pop %r13
5676(2): pop %r14
5678(2): pop %r15
567a(1): ret near (%rsp)
567b(5): nop 0x0(%rax,%rax,1)
5680(2): xor %edi,%edi
5682(5): call 0xf1e(%rip)
5687(8): movdqa 0x209a01(%rip),%xmm0
568f(3): mov %rax,%rbx
5692(7): mov %rax,0x2099e7(%rip)
5699(3): movups %xmm0,(%rax)
569c(5): jmp 0xfffffee1(%rip)
56a1(5): call 0xffffc2ef(%rip)
56a6(5): call 0x10ea(%rip)

"clone_quoting_options" :
56b0(2): push %r12
56b2(1): push %rbp
56b3(1): push %rbx
56b4(3): mov %rdi,%rbx
56b7(5): call 0xffffc2e9(%rip)
56bc(3): mov (%rax),%r12d
56bf(3): mov %rax,%rbp
56c2(7): lea 0x209b57(%rip),%rax
56c9(3): test %rbx,%rbx
56cc(5): mov $0x38,%esi
56d1(4): cmove %rax,%rbx
56d5(3): mov %rbx,%rdi
56d8(5): call 0x1068(%rip)
56dd(4): mov %r12d,0x0(%rbp)
56e1(1): pop %rbx
56e2(1): pop %rbp
56e3(2): pop %r12
56e5(1): ret near (%rsp)

"get_quoting_style" :
56f0(7): lea 0x209b29(%rip),%rax
56f7(3): test %rdi,%rdi
56fa(4): cmove %rax,%rdi
56fe(2): mov (%rdi),%eax
5700(1): ret near (%rsp)

"set_quoting_style" :
5710(7): lea 0x209b09(%rip),%rax
5717(3): test %rdi,%rdi
571a(4): cmove %rax,%rdi
571e(2): mov %esi,(%rdi)
5720(1): ret near (%rsp)

"set_char_quoting" :
5730(7): lea 0x209ae9(%rip),%rax
5737(3): test %rdi,%rdi
573a(2): mov %esi,%ecx
573c(4): cmove %rax,%rdi
5740(2): mov %esi,%eax
5742(3): and $0x1f,%ecx
5745(3): shr $0x5,%al
5748(3): movzx %al,%eax
574b(5): lea 0x8(%rdi,%rax,4),%rdi
5750(2): mov (%rdi),%esi
5752(2): mov %esi,%eax
5754(2): shr %cl,%eax
5756(2): xor %eax,%edx
5758(3): and $0x1,%eax
575b(3): and $0x1,%edx
575e(2): shl/sal %cl,%edx
5760(2): xor %esi,%edx
5762(2): mov %edx,(%rdi)
5764(1): ret near (%rsp)

"set_quoting_flags" :
5770(7): lea 0x209aa9(%rip),%rax
5777(3): test %rdi,%rdi
577a(4): cmove %rax,%rdi
577e(3): mov 0x4(%rdi),%eax
5781(3): mov %esi,0x4(%rdi)
5784(1): ret near (%rsp)

"set_custom_quoting" :
5790(7): lea 0x209a89(%rip),%rax
5797(3): test %rdi,%rdi
579a(4): cmove %rax,%rdi
579e(3): test %rsi,%rsi
57a1(6): mov $0xa,(%rdi)
57a7(2): jz 0x10(%rip)
57a9(3): test %rdx,%rdx
57ac(2): jz 0xb(%rip)
57ae(4): mov %rsi,0x28(%rdi)
57b2(4): mov %rdx,0x30(%rdi)
57b6(1): ret near (%rsp)
57b7(4): sub $0x8,%rsp
57bb(5): call 0xffffc1d5(%rip)

"quotearg_buffer" :
57c0(2): push %r15
57c2(2): push %r14
57c4(7): lea 0x209a55(%rip),%rax
57cb(2): push %r13
57cd(2): push %r12
57cf(3): mov %rdi,%r13
57d2(1): push %rbp
57d3(1): push %rbx
57d4(3): mov %r8,%rbx
57d7(3): mov %rsi,%r14
57da(3): mov %rdx,%r15
57dd(4): sub $0x18,%rsp
57e1(3): test %r8,%r8
57e4(4): cmove %rax,%rbx
57e8(5): mov %rcx,0x8(%rsp)
57ed(5): call 0xffffc1b3(%rip)
57f2(3): mov (%rax),%r12d
57f5(3): mov %rax,%rbp
57f8(4): lea 0x8(%rbx),%rax
57fc(4): sub $0x8,%rsp
5800(4): mov 0x4(%rbx),%r9d
5804(3): push 0x30(%rbx)
5807(3): mov (%rbx),%r8d
580a(3): push 0x28(%rbx)
580d(3): mov %r15,%rdx
5810(1): push %rax
5811(5): mov 0x28(%rsp),%rcx
5816(3): mov %r14,%rsi
5819(3): mov %r13,%rdi
581c(5): call 0xffffeaa4(%rip)
5821(4): mov %r12d,0x0(%rbp)
5825(4): add $0x38,%rsp
5829(1): pop %rbx
582a(1): pop %rbp
582b(2): pop %r12
582d(2): pop %r13
582f(2): pop %r14
5831(2): pop %r15
5833(1): ret near (%rsp)

"quotearg_alloc_mem" :
5840(2): push %r15
5842(2): push %r14
5844(7): lea 0x2099d5(%rip),%rax
584b(2): push %r13
584d(2): push %r12
584f(3): mov %rdx,%r12
5852(1): push %rbp
5853(1): push %rbx
5854(3): mov %rcx,%rbx
5857(3): mov %rdi,%r14
585a(3): mov %rsi,%r15
585d(4): sub $0x38,%rsp
5861(3): test %rcx,%rcx
5864(4): cmove %rax,%rbx
5868(2): xor %ebp,%ebp
586a(5): call 0xffffc136(%rip)
586f(3): test %r12,%r12
5872(3): mov %rax,%r13
5875(2): mov (%rax),%eax
5877(4): setz %bpl
587b(3): or 0x4(%rbx),%ebp
587e(4): lea 0x8(%rbx),%r10
5882(4): sub $0x8,%rsp
5886(3): mov (%rbx),%r8d
5889(3): mov %r15,%rcx
588c(4): mov %eax,0x14(%rsp)
5890(3): push 0x30(%rbx)
5893(3): mov %r14,%rdx
5896(3): push 0x28(%rbx)
5899(2): push %r10
589b(2): xor %esi,%esi
589d(3): mov %ebp,%r9d
58a0(2): xor %edi,%edi
58a2(5): mov %r10,0x40(%rsp)
58a7(5): call 0xffffea19(%rip)
58ac(4): lea 0x1(%rax),%rsi
58b0(5): mov %rax,0x48(%rsp)
58b5(4): add $0x20,%rsp
58b9(3): mov %rsi,%rdi
58bc(5): mov %rsi,0x18(%rsp)
58c1(5): call 0xc7f(%rip)
58c6(5): mov %rax,0x10(%rsp)
58cb(4): sub $0x8,%rsp
58cf(3): push 0x30(%rbx)
58d2(3): push 0x28(%rbx)
58d5(5): mov 0x38(%rsp),%r10
58da(3): mov %ebp,%r9d
58dd(3): mov (%rbx),%r8d
58e0(3): mov %r15,%rcx
58e3(3): mov %r14,%rdx
58e6(3): mov %rax,%rdi
58e9(2): push %r10
58eb(5): mov 0x38(%rsp),%rsi
58f0(5): call 0xffffe9d0(%rip)
58f5(4): mov 0x2c(%rsp),%eax
58f9(4): add $0x20,%rsp
58fd(3): test %r12,%r12
5900(4): mov %eax,0x0(%r13)
5904(2): jz 0xb(%rip)
5906(5): mov 0x28(%rsp),%r11
590b(4): mov %r11,(%r12)
590f(5): mov 0x10(%rsp),%rax
5914(4): add $0x38,%rsp
5918(1): pop %rbx
5919(1): pop %rbp
591a(2): pop %r12
591c(2): pop %r13
591e(2): pop %r14
5920(2): pop %r15
5922(1): ret near (%rsp)

"quotearg_alloc" :
5930(3): mov %rdx,%rcx
5933(2): xor %edx,%edx
5935(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5940(6): mov 0x209732(%rip),%eax
5946(2): push %r12
5948(7): mov 0x209731(%rip),%r12
594f(1): push %rbp
5950(1): push %rbx
5951(3): cmp $0x1,%eax
5954(2): jle 0x2d(%rip)
5956(3): sub $0x2,%eax
5959(5): lea 0x18(%r12),%rbx
595e(4): shl/sal $0x4,%rax
5962(5): lea 0x28(%r12,%rax,1),%rbp
5967(9): nop 0x0(%rax,%rax,1)
5970(3): mov (%rbx),%rdi
5973(4): add $0x10,%rbx
5977(5): call 0xffffc429(%rip)
597c(3): cmp %rbp,%rbx
597f(2): jnz 0xfffffff1(%rip)
5981(5): mov 0x8(%r12),%rdi
5986(7): lea 0x209793(%rip),%rbx
598d(3): cmp %rbx,%rdi
5990(2): jz 0x19(%rip)
5992(5): call 0xffffc40e(%rip)
5997(b): mov $0x100,0x2096ee(%rip)
59a2(7): mov %rbx,0x2096ef(%rip)
59a9(7): lea 0x2096e0(%rip),%rbx
59b0(3): cmp %rbx,%r12
59b3(2): jz 0x11(%rip)
59b5(3): mov %r12,%rdi
59b8(5): call 0xffffc3e8(%rip)
59bd(7): mov %rbx,0x2096bc(%rip)
59c4(1): pop %rbx
59c5(a): mov $0x1,0x2096a9(%rip)
59cf(1): pop %rbp
59d0(2): pop %r12
59d2(1): ret near (%rsp)

"quotearg_n" :
59e0(7): lea 0x209839(%rip),%rcx
59e7(7): mov $0xffffffff,%rdx
59ee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5a00(7): lea 0x209819(%rip),%rcx
5a07(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5a10(7): lea 0x209809(%rip),%rcx
5a17(3): mov %rdi,%rsi
5a1a(7): mov $0xffffffff,%rdx
5a21(2): xor %edi,%edi
5a23(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5a30(7): lea 0x2097e9(%rip),%rcx
5a37(3): mov %rsi,%rdx
5a3a(3): mov %rdi,%rsi
5a3d(2): xor %edi,%edi
5a3f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5a50(4): sub $0x48,%rsp
5a54(3): mov %rdx,%rax
5a57(9): mov $0x28,%rdx
5a60(5): mov %rdx,0x38(%rsp)
5a65(2): xor %edx,%edx
5a67(3): cmp $0xa,%esi
5a6a(2): jz 0x6a(%rip)
5a6c(3): mov %esi,(%rsp)
5a6f(3): mov %rsp,%rcx
5a72(7): mov $0xffffffff,%rdx
5a79(3): mov %rax,%rsi
5a7c(9): mov $0x0,0x4(%rsp)
5a85(9): mov $0x0,0xc(%rsp)
5a8e(9): mov $0x0,0x14(%rsp)
5a97(9): mov $0x0,0x1c(%rsp)
5aa0(9): mov $0x0,0x24(%rsp)
5aa9(9): mov $0x0,0x2c(%rsp)
5ab2(8): mov $0x0,0x34(%rsp)
5aba(5): call 0xfffffa46(%rip)
5abf(5): mov 0x38(%rsp),%rcx
5ac4(9): xor $0x28,%rcx
5acd(2): jnz 0xc(%rip)
5acf(4): add $0x48,%rsp
5ad3(1): ret near (%rsp)
5ad4(5): call 0xffffbebc(%rip)
5ad9(5): call 0xffffbfd7(%rip)

"quotearg_n_style_mem" :
5ae0(4): sub $0x48,%rsp
5ae4(3): mov %rdx,%rax
5ae7(3): mov %rcx,%rdx
5aea(9): mov $0x28,%rcx
5af3(5): mov %rcx,0x38(%rsp)
5af8(2): xor %ecx,%ecx
5afa(3): cmp $0xa,%esi
5afd(2): jz 0x63(%rip)
5aff(3): mov %esi,(%rsp)
5b02(3): mov %rsp,%rcx
5b05(3): mov %rax,%rsi
5b08(9): mov $0x0,0x4(%rsp)
5b11(9): mov $0x0,0xc(%rsp)
5b1a(9): mov $0x0,0x14(%rsp)
5b23(9): mov $0x0,0x1c(%rsp)
5b2c(9): mov $0x0,0x24(%rsp)
5b35(9): mov $0x0,0x2c(%rsp)
5b3e(8): mov $0x0,0x34(%rsp)
5b46(5): call 0xfffff9ba(%rip)
5b4b(5): mov 0x38(%rsp),%rdx
5b50(9): xor $0x28,%rdx
5b59(2): jnz 0xc(%rip)
5b5b(4): add $0x48,%rsp
5b5f(1): ret near (%rsp)
5b60(5): call 0xffffbe30(%rip)
5b65(5): call 0xffffbf4b(%rip)

"quotearg_style" :
5b70(3): mov %rsi,%rdx
5b73(2): mov %edi,%esi
5b75(2): xor %edi,%edi
5b77(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5b80(3): mov %rdx,%rcx
5b83(3): mov %rsi,%rdx
5b86(2): mov %edi,%esi
5b88(2): xor %edi,%edi
5b8a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5b90(4): sub $0x48,%rsp
5b94(2): mov %edx,%ecx
5b96(9): mov $0x28,%rax
5b9f(5): mov %rax,0x38(%rsp)
5ba4(2): xor %eax,%eax
5ba6(7): mov 0x2096a3(%rip),%rax
5bad(3): mov %rsp,%r8
5bb0(3): and $0x1f,%ecx
5bb3(8): movdqa 0x209665(%rip),%xmm0
5bbb(5): mov %rax,0x30(%rsp)
5bc0(2): mov %edx,%eax
5bc2(4): movaps %xmm0,(%rsp)
5bc6(3): shr $0x5,%al
5bc9(3): movzx %al,%eax
5bcc(5): lea 0x8(%r8,%rax,4),%r9
5bd1(8): movdqa 0x209657(%rip),%xmm0
5bd9(5): movaps %xmm0,0x10(%rsp)
5bde(8): movdqa 0x20965a(%rip),%xmm0
5be6(5): movaps %xmm0,0x20(%rsp)
5beb(3): mov (%r9),%edx
5bee(2): mov %edx,%eax
5bf0(2): shr %cl,%eax
5bf2(2): not %eax
5bf4(3): and $0x1,%eax
5bf7(2): shl/sal %cl,%eax
5bf9(3): mov %r8,%rcx
5bfc(2): xor %edx,%eax
5bfe(3): mov %rsi,%rdx
5c01(3): mov %rdi,%rsi
5c04(3): mov %eax,(%r9)
5c07(2): xor %edi,%edi
5c09(5): call 0xfffff8f7(%rip)
5c0e(5): mov 0x38(%rsp),%rsi
5c13(9): xor $0x28,%rsi
5c1c(2): jnz 0x7(%rip)
5c1e(4): add $0x48,%rsp
5c22(1): ret near (%rsp)
5c23(5): call 0xffffbe8d(%rip)

"quotearg_char" :
5c30(4): movsx %sil,%edx
5c34(7): mov $0xffffffff,%rsi
5c3b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5c40(5): mov $0x3a,%edx
5c45(7): mov $0xffffffff,%rsi
5c4c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5c60(5): mov $0x3a,%edx
5c65(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5c70(4): sub $0x48,%rsp
5c74(3): mov %rdx,%rax
5c77(9): mov $0x28,%rdx
5c80(5): mov %rdx,0x38(%rsp)
5c85(2): xor %edx,%edx
5c87(3): cmp $0xa,%esi
5c8a(2): jz 0x6a(%rip)
5c8c(3): mov %esi,(%rsp)
5c8f(3): mov %rsp,%rcx
5c92(7): mov $0xffffffff,%rdx
5c99(3): mov %rax,%rsi
5c9c(9): mov $0x0,0x4(%rsp)
5ca5(9): mov $0x4000000,0xc(%rsp)
5cae(9): mov $0x0,0x14(%rsp)
5cb7(9): mov $0x0,0x1c(%rsp)
5cc0(9): mov $0x0,0x24(%rsp)
5cc9(9): mov $0x0,0x2c(%rsp)
5cd2(8): mov $0x0,0x34(%rsp)
5cda(5): call 0xfffff826(%rip)
5cdf(5): mov 0x38(%rsp),%rcx
5ce4(9): xor $0x28,%rcx
5ced(2): jnz 0xc(%rip)
5cef(4): add $0x48,%rsp
5cf3(1): ret near (%rsp)
5cf4(5): call 0xffffbc9c(%rip)
5cf9(5): call 0xffffbdb7(%rip)

"quotearg_n_custom_mem" :
5d00(4): sub $0x48,%rsp
5d04(3): mov %rcx,%r9
5d07(7): mov 0x209542(%rip),%rcx
5d0e(8): movdqa 0x20950a(%rip),%xmm0
5d16(9): mov $0x28,%rax
5d1f(5): mov %rax,0x38(%rsp)
5d24(2): xor %eax,%eax
5d26(4): movaps %xmm0,(%rsp)
5d2a(3): test %rsi,%rsi
5d2d(5): mov %rcx,0x30(%rsp)
5d32(7): mov $0xa,(%rsp)
5d39(8): movdqa 0x2094ef(%rip),%xmm0
5d41(5): movaps %xmm0,0x10(%rsp)
5d46(8): movdqa 0x2094f2(%rip),%xmm0
5d4e(5): movaps %xmm0,0x20(%rsp)
5d53(2): jz 0x34(%rip)
5d55(3): test %rdx,%rdx
5d58(2): jz 0x2f(%rip)
5d5a(5): mov %rsi,0x28(%rsp)
5d5f(5): mov %rdx,0x30(%rsp)
5d64(3): mov %rsp,%rcx
5d67(3): mov %r8,%rdx
5d6a(3): mov %r9,%rsi
5d6d(5): call 0xfffff793(%rip)
5d72(5): mov 0x38(%rsp),%rdi
5d77(9): xor $0x28,%rdi
5d80(2): jnz 0xc(%rip)
5d82(4): add $0x48,%rsp
5d86(1): ret near (%rsp)
5d87(5): call 0xffffbc09(%rip)
5d8c(5): call 0xffffbd24(%rip)

"quotearg_n_custom" :
5da0(7): mov $0xffffffff,%r8
5da7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5db0(3): mov %rdx,%rcx
5db3(7): mov $0xffffffff,%r8
5dba(3): mov %rsi,%rdx
5dbd(3): mov %rdi,%rsi
5dc0(2): xor %edi,%edi
5dc2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5dd0(3): mov %rcx,%r8
5dd3(3): mov %rdx,%rcx
5dd6(3): mov %rsi,%rdx
5dd9(3): mov %rdi,%rsi
5ddc(2): xor %edi,%edi
5dde(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5df0(7): lea 0x209249(%rip),%rcx
5df7(5): jmp 0xfffff709(%rip)

"quote_mem" :
5e00(7): lea 0x209239(%rip),%rcx
5e07(3): mov %rsi,%rdx
5e0a(3): mov %rdi,%rsi
5e0d(2): xor %edi,%edi
5e0f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5e20(7): lea 0x209219(%rip),%rcx
5e27(7): mov $0xffffffff,%rdx
5e2e(5): jmp 0xfffff6d2(%rip)

"quote" :
5e40(7): lea 0x2091f9(%rip),%rcx
5e47(3): mov %rdi,%rsi
5e4a(7): mov $0xffffffff,%rdx
5e51(2): xor %edi,%edi
5e53(5): jmp 0xfffff6ad(%rip)

"get_root_dev_ino" :
5e60(1): push %rbx
5e61(7): lea 0x5b0e(%rip),%rsi
5e68(3): mov %rdi,%rbx
5e6b(5): mov $0x1,%edi
5e70(7): sub $0xa0,%rsp
5e77(3): mov %rsp,%rdx
5e7a(9): mov $0x28,%rax
5e83(8): mov %rax,0x98(%rsp)
5e8b(2): xor %eax,%eax
5e8d(5): call 0xffffbc03(%rip)
5e92(2): test %eax,%eax
5e94(2): jnz 0x34(%rip)
5e96(5): mov 0x8(%rsp),%rax
5e9b(3): mov %rax,(%rbx)
5e9e(4): mov (%rsp),%rax
5ea2(4): mov %rax,0x8(%rbx)
5ea6(3): mov %rbx,%rax
5ea9(8): mov 0x98(%rsp),%rcx
5eb1(9): xor $0x28,%rcx
5eba(2): jnz 0x12(%rip)
5ebc(7): add $0xa0,%rsp
5ec3(1): pop %rbx
5ec4(1): ret near (%rsp)
5ec5(3): nop (%rax)
5ec8(2): xor %eax,%eax
5eca(2): jmp 0xffffffdf(%rip)
5ecc(5): call 0xffffbbe4(%rip)

"version_etc_arn" :
5ee0(2): push %r15
5ee2(2): push %r14
5ee4(2): push %r13
5ee6(2): push %r12
5ee8(3): mov %r9,%r12
5eeb(1): push %rbp
5eec(1): push %rbx
5eed(3): mov %rdi,%rbp
5ef0(3): mov %r8,%rbx
5ef3(4): sub $0x28,%rsp
5ef7(3): test %rsi,%rsi
5efa(6): jz 0x11e(%rip)
5f00(3): mov %rdx,%r8
5f03(7): lea 0x5f3e(%rip),%rdx
5f0a(3): mov %rcx,%r9
5f0d(2): xor %eax,%eax
5f0f(3): mov %rsi,%rcx
5f12(5): mov $0x1,%esi
5f17(5): call 0xffffbe49(%rip)
5f1c(7): lea 0x5f38(%rip),%rsi
5f23(2): xor %edi,%edi
5f25(5): mov $0x5,%edx
5f2a(5): call 0xffffbb36(%rip)
5f2f(7): lea 0x622a(%rip),%rdx
5f36(3): mov %rax,%rcx
5f39(6): mov $0x7e3,%r8d
5f3f(5): mov $0x1,%esi
5f44(3): mov %rbp,%rdi
5f47(2): xor %eax,%eax
5f49(5): call 0xffffbe17(%rip)
5f4e(7): lea 0x5f7b(%rip),%rsi
5f55(2): xor %edi,%edi
5f57(5): mov $0x5,%edx
5f5c(5): call 0xffffbb04(%rip)
5f61(3): mov %rbp,%rsi
5f64(3): mov %rax,%rdi
5f67(5): call 0xffffbc19(%rip)
5f6c(4): cmp $0x9,%r12
5f70(6): jnbe 0x340(%rip)
5f76(7): lea 0x61af(%rip),%rdx
5f7d(4): movsxd 0x0(%rdx,%r12,4),%rax
5f81(3): add %rdx,%rax
5f84(2): jmp %rax
5f86(a): nop 0x0(%rax,%rax,1)
5f90(4): mov 0x38(%rbx),%r9
5f94(4): mov 0x10(%rbx),%rax
5f98(7): lea 0x60a1(%rip),%rsi
5f9f(4): mov 0x8(%rbx),%r8
5fa3(5): mov $0x5,%edx
5fa8(2): xor %edi,%edi
5faa(4): mov 0x30(%rbx),%r13
5fae(4): mov 0x28(%rbx),%r12
5fb2(5): mov %r9,0x10(%rsp)
5fb7(4): mov 0x20(%rbx),%r15
5fbb(4): mov 0x18(%rbx),%r14
5fbf(4): mov %rax,(%rsp)
5fc3(5): mov %r8,0x8(%rsp)
5fc8(3): mov (%rbx),%rbx
5fcb(5): call 0xffffba95(%rip)
5fd0(4): sub $0x8,%rsp
5fd4(5): mov 0x18(%rsp),%r9
5fd9(3): mov %rax,%rdx
5fdc(3): mov %rbx,%rcx
5fdf(5): mov $0x1,%esi
5fe4(3): mov %rbp,%rdi
5fe7(2): xor %eax,%eax
5fe9(2): push %r9
5feb(2): push %r13
5fed(2): push %r12
5fef(2): push %r15
5ff1(2): push %r14
5ff3(5): mov 0x30(%rsp),%r9
5ff8(5): mov 0x38(%rsp),%r8
5ffd(5): call 0xffffbd63(%rip)
6002(4): add $0x30,%rsp
6006(4): add $0x28,%rsp
600a(1): pop %rbx
600b(1): pop %rbp
600c(2): pop %r12
600e(2): pop %r13
6010(2): pop %r14
6012(2): pop %r15
6014(1): ret near (%rsp)
6015(3): nop (%rax)
6018(3): mov %rcx,%r8
601b(3): mov %rdx,%rcx
601e(7): lea 0x5e2f(%rip),%rdx
6025(5): mov $0x1,%esi
602a(2): xor %eax,%eax
602c(5): call 0xffffbd34(%rip)
6031(5): jmp 0xfffffeeb(%rip)
6036(a): nop 0x0(%rax,%rax,1)
6040(4): mov 0x40(%rbx),%r10
6044(4): mov 0x38(%rbx),%r9
6048(7): lea 0x6021(%rip),%rsi
604f(4): mov 0x10(%rbx),%rax
6053(4): mov 0x8(%rbx),%r8
6057(5): mov $0x5,%edx
605c(4): mov 0x30(%rbx),%r13
6060(4): mov 0x28(%rbx),%r12
6064(4): mov 0x20(%rbx),%r15
6068(4): mov 0x18(%rbx),%r14
606c(3): mov (%rbx),%rbx
606f(5): mov %r10,0x18(%rsp)
6074(5): mov %r9,0x10(%rsp)
6079(4): mov %rax,(%rsp)
607d(5): mov %r8,0x8(%rsp)
6082(2): xor %edi,%edi
6084(5): call 0xffffb9dc(%rip)
6089(5): mov 0x18(%rsp),%r10
608e(2): push %r10
6090(5): jmp 0xffffff44(%rip)
6095(3): nop (%rax)
6098(3): mov (%rbx),%rbx
609b(7): lea 0x5dbd(%rip),%rsi
60a2(5): mov $0x5,%edx
60a7(2): xor %edi,%edi
60a9(5): call 0xffffb9b7(%rip)
60ae(4): add $0x28,%rsp
60b2(3): mov %rbx,%rcx
60b5(3): mov %rbp,%rdi
60b8(1): pop %rbx
60b9(1): pop %rbp
60ba(2): pop %r12
60bc(2): pop %r13
60be(2): pop %r14
60c0(2): pop %r15
60c2(3): mov %rax,%rdx
60c5(5): mov $0x1,%esi
60ca(2): xor %eax,%eax
60cc(5): jmp 0xffffbc94(%rip)
60d1(7): nop 0x0(%rax)
60d8(4): mov 0x8(%rbx),%r12
60dc(7): lea 0x5d8c(%rip),%rsi
60e3(3): mov (%rbx),%rbx
60e6(5): mov $0x5,%edx
60eb(2): xor %edi,%edi
60ed(5): call 0xffffb973(%rip)
60f2(4): add $0x28,%rsp
60f6(3): mov %r12,%r8
60f9(3): mov %rbx,%rcx
60fc(3): mov %rbp,%rdi
60ff(3): mov %rax,%rdx
6102(5): mov $0x1,%esi
6107(1): pop %rbx
6108(1): pop %rbp
6109(2): pop %r12
610b(2): pop %r13
610d(2): pop %r14
610f(2): pop %r15
6111(2): xor %eax,%eax
6113(5): jmp 0xffffbc4d(%rip)
6118(8): nop 0x0(%rax,%rax,1)
6120(4): mov 0x10(%rbx),%r13
6124(4): mov 0x8(%rbx),%r12
6128(7): lea 0x5d57(%rip),%rsi
612f(3): mov (%rbx),%rbx
6132(5): mov $0x5,%edx
6137(2): xor %edi,%edi
6139(5): call 0xffffb927(%rip)
613e(4): add $0x28,%rsp
6142(3): mov %r13,%r9
6145(3): mov %r12,%r8
6148(3): mov %rbx,%rcx
614b(3): mov %rbp,%rdi
614e(3): mov %rax,%rdx
6151(1): pop %rbx
6152(1): pop %rbp
6153(2): pop %r12
6155(2): pop %r13
6157(2): pop %r14
6159(2): pop %r15
615b(5): mov $0x1,%esi
6160(2): xor %eax,%eax
6162(5): jmp 0xffffbbfe(%rip)
6167(9): nop 0x0(%rax,%rax,1)
6170(7): lea 0x5e29(%rip),%rsi
6177(5): mov $0x5,%edx
617c(2): xor %edi,%edi
617e(4): mov 0x18(%rbx),%r14
6182(4): mov 0x10(%rbx),%r13
6186(4): mov 0x8(%rbx),%r12
618a(3): mov (%rbx),%rbx
618d(5): call 0xffffb8d3(%rip)
6192(4): sub $0x8,%rsp
6196(2): push %r14
6198(3): mov %rax,%rdx
619b(3): mov %r13,%r9
619e(3): mov %r12,%r8
61a1(3): mov %rbx,%rcx
61a4(3): mov %rbp,%rdi
61a7(5): mov $0x1,%esi
61ac(2): xor %eax,%eax
61ae(5): call 0xffffbbb2(%rip)
61b3(1): pop %rax
61b4(1): pop %rdx
61b5(4): add $0x28,%rsp
61b9(1): pop %rbx
61ba(1): pop %rbp
61bb(2): pop %r12
61bd(2): pop %r13
61bf(2): pop %r14
61c1(2): pop %r15
61c3(1): ret near (%rsp)
61c4(4): nop 0x0(%rax)
61c8(4): mov 0x20(%rbx),%r15
61cc(7): lea 0x5ded(%rip),%rsi
61d3(5): mov $0x5,%edx
61d8(2): xor %edi,%edi
61da(4): mov 0x18(%rbx),%r14
61de(4): mov 0x10(%rbx),%r13
61e2(4): mov 0x8(%rbx),%r12
61e6(3): mov (%rbx),%rbx
61e9(5): call 0xffffb877(%rip)
61ee(2): push %r15
61f0(2): jmp 0xffffffa6(%rip)
61f2(6): nop 0x0(%rax,%rax,1)
61f8(4): mov 0x8(%rbx),%r8
61fc(4): mov 0x28(%rbx),%r12
6200(7): lea 0x5de1(%rip),%rsi
6207(4): mov 0x20(%rbx),%r15
620b(4): mov 0x18(%rbx),%r14
620f(5): mov $0x5,%edx
6214(4): mov 0x10(%rbx),%r13
6218(2): xor %edi,%edi
621a(3): mov (%rbx),%rbx
621d(4): mov %r8,(%rsp)
6221(5): call 0xffffb83f(%rip)
6226(4): sub $0x8,%rsp
622a(3): mov %r13,%r9
622d(2): push %r12
622f(2): push %r15
6231(2): push %r14
6233(5): mov 0x20(%rsp),%r8
6238(3): mov %rbx,%rcx
623b(3): mov %rax,%rdx
623e(3): mov %rbp,%rdi
6241(5): mov $0x1,%esi
6246(2): xor %eax,%eax
6248(5): call 0xffffbb18(%rip)
624d(4): add $0x20,%rsp
6251(4): add $0x28,%rsp
6255(1): pop %rbx
6256(1): pop %rbp
6257(2): pop %r12
6259(2): pop %r13
625b(2): pop %r14
625d(2): pop %r15
625f(1): ret near (%rsp)
6260(4): mov 0x10(%rbx),%r9
6264(4): mov 0x30(%rbx),%r13
6268(7): lea 0x5da1(%rip),%rsi
626f(4): mov 0x28(%rbx),%r12
6273(4): mov 0x20(%rbx),%r15
6277(5): mov $0x5,%edx
627c(4): mov 0x18(%rbx),%r14
6280(4): mov 0x8(%rbx),%r8
6284(2): xor %edi,%edi
6286(5): mov %r9,0x8(%rsp)
628b(3): mov (%rbx),%rbx
628e(4): mov %r8,(%rsp)
6292(5): call 0xffffb7ce(%rip)
6297(2): push %r13
6299(2): push %r12
629b(2): push %r15
629d(2): push %r14
629f(5): mov 0x28(%rsp),%r9
62a4(2): jmp 0xffffff8f(%rip)
62a6(a): nop 0x0(%rax,%rax,1)
62b0(4): mov 0x40(%rbx),%r10
62b4(4): mov 0x38(%rbx),%r9
62b8(5): mov $0x5,%edx
62bd(4): mov 0x10(%rbx),%rax
62c1(4): mov 0x8(%rbx),%r8
62c5(7): lea 0x5ddc(%rip),%rsi
62cc(4): mov 0x30(%rbx),%r13
62d0(4): mov 0x28(%rbx),%r12
62d4(4): mov 0x20(%rbx),%r15
62d8(4): mov 0x18(%rbx),%r14
62dc(5): mov %r10,0x18(%rsp)
62e1(5): mov %r9,0x10(%rsp)
62e6(4): mov %rax,(%rsp)
62ea(5): mov %r8,0x8(%rsp)
62ef(3): mov (%rbx),%rbx
62f2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
6300(3): xor %r9d,%r9d
6303(4): cmp $0x0,(%r8)
6307(2): jz 0x14(%rip)
6309(7): nop 0x0(%rax)
6310(4): add $0x1,%r9
6314(5): cmp $0x0,0x0(%r8,%r9,8)
6319(2): jnz 0xfffffff7(%rip)
631b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
6320(4): sub $0x68,%rsp
6324(3): mov %r8,%r10
6327(3): xor %r9d,%r9d
632a(9): mov $0x28,%rax
6333(5): mov %rax,0x58(%rsp)
6338(2): xor %eax,%eax
633a(3): mov %rsp,%r8
633d(3): nop (%rax)
6340(3): mov (%r10),%eax
6343(3): cmp $0x2f,%eax
6346(2): jnbe 0x44(%rip)
6348(3): mov %eax,%r11d
634b(4): add 0x10(%r10),%r11
634f(3): add $0x8,%eax
6352(3): mov %eax,(%r10)
6355(3): mov (%r11),%rax
6358(3): test %rax,%rax
635b(4): mov %rax,0x0(%r8,%r9,8)
635f(2): jz 0xc(%rip)
6361(4): add $0x1,%r9
6365(4): cmp $0xa,%r9
6369(2): jnz 0xffffffd7(%rip)
636b(5): call 0xfffffb75(%rip)
6370(5): mov 0x58(%rsp),%rax
6375(9): xor $0x28,%rax
637e(2): jnz 0x7(%rip)
6380(4): add $0x68,%rsp
6384(1): ret near (%rsp)
6385(5): call 0xffffb72b(%rip)
638a(4): mov 0x8(%r10),%r11
638e(4): lea 0x8(%r11),%rax
6392(4): mov %rax,0x8(%r10)
6396(2): jmp 0xffffffbf(%rip)

"version_etc" :
63a0(1): push %rbp
63a1(1): push %rbx
63a2(6): mov $0x20,%r10d
63a8(3): xor %r11d,%r11d
63ab(7): sub $0xb8,%rsp
63b2(9): mov $0x28,%rax
63bb(5): mov %rax,0x78(%rsp)
63c0(2): xor %eax,%eax
63c2(8): lea 0xd0(%rsp),%rax
63ca(8): mov %r8,0xa0(%rsp)
63d2(8): lea 0xd0(%rsp),%rbx
63da(5): lea 0x20(%rsp),%r8
63df(8): mov %r9,0xa8(%rsp)
63e7(8): mov $0x20,0x8(%rsp)
63ef(5): mov %rax,0x10(%rsp)
63f4(8): lea 0x80(%rsp),%rax
63fc(3): xor %r9d,%r9d
63ff(5): mov %rax,0x18(%rsp)
6404(3): mov %rax,%rbp
6407(9): nop 0x0(%rax,%rax,1)
6410(4): cmp $0x2f,%r10d
6414(2): jnbe 0x58(%rip)
6416(3): mov %r10d,%eax
6419(6): mov $0x1,%r11d
641f(4): add $0x8,%r10d
6423(3): add %rbp,%rax
6426(3): mov (%rax),%rax
6429(3): test %rax,%rax
642c(4): mov %rax,0x0(%r8,%r9,8)
6430(2): jz 0xc(%rip)
6432(4): add $0x1,%r9
6436(4): cmp $0xa,%r9
643a(2): jnz 0xffffffd6(%rip)
643c(3): test %r11b,%r11b
643f(2): jnz 0x26(%rip)
6441(5): call 0xfffffa9f(%rip)
6446(5): mov 0x78(%rsp),%rax
644b(9): xor $0x28,%rax
6454(2): jnz 0xc(%rip)
6456(7): add $0xb8,%rsp
645d(1): pop %rbx
645e(1): pop %rbp
645f(1): ret near (%rsp)
6460(5): call 0xffffb650(%rip)
6465(5): mov %r10d,0x8(%rsp)
646a(2): jmp 0xffffffd7(%rip)
646c(3): mov %rbx,%rax
646f(4): add $0x8,%rbx
6473(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6480(1): push %rbx
6481(7): lea 0x5a1a(%rip),%rsi
6488(5): mov $0x5,%edx
648d(2): xor %edi,%edi
648f(5): call 0xffffb5d1(%rip)
6494(7): lea 0x503b(%rip),%rdx
649b(3): mov %rax,%rsi
649e(5): mov $0x1,%edi
64a3(2): xor %eax,%eax
64a5(5): call 0xffffb7fb(%rip)
64aa(7): lea 0x5a06(%rip),%rsi
64b1(5): mov $0x5,%edx
64b6(2): xor %edi,%edi
64b8(5): call 0xffffb5a8(%rip)
64bd(7): lea 0x4dcc(%rip),%rcx
64c4(7): lea 0x44d2(%rip),%rdx
64cb(3): mov %rax,%rsi
64ce(5): mov $0x1,%edi
64d3(2): xor %eax,%eax
64d5(5): call 0xffffb7cb(%rip)
64da(7): mov 0x208bc7(%rip),%rbx
64e1(7): lea 0x5c00(%rip),%rsi
64e8(2): xor %edi,%edi
64ea(5): mov $0x5,%edx
64ef(5): call 0xffffb571(%rip)
64f4(3): mov %rbx,%rsi
64f7(3): mov %rax,%rdi
64fa(1): pop %rbx
64fb(5): jmp 0xffffb685(%rip)

"can_write_any_file" :
6500(7): cmp $0x0,0x208d52(%rip)
6507(2): jz 0x11(%rip)
6509(7): movzx 0x208d48(%rip),%eax
6510(1): ret near (%rsp)
6511(7): nop 0x0(%rax)
6518(4): sub $0x8,%rsp
651c(5): call 0xffffb624(%rip)
6521(2): test %eax,%eax
6523(7): mov $0x1,0x208d2f(%rip)
652a(3): setz %al
652d(6): mov %al,0x208d25(%rip)
6533(4): add $0x8,%rsp
6537(1): ret near (%rsp)

"xmalloc" :
6540(1): push %rbx
6541(3): mov %rdi,%rbx
6544(5): call 0xffffb6dc(%rip)
6549(3): test %rax,%rax
654c(2): jnz 0x7(%rip)
654e(3): test %rbx,%rbx
6551(2): jnz 0x4(%rip)
6553(1): pop %rbx
6554(1): ret near (%rsp)
6555(5): call 0x23b(%rip)

"xnmalloc" :
6560(3): mov %rdi,%rax
6563(3): mul %rax,%rsi,%rdx
6566(3): mov %rax,%rdi
6569(3): seto %al
656c(3): test %rdi,%rdi
656f(2): js 0xc(%rip)
6571(3): movzx %al,%eax
6574(3): test %rax,%rax
6577(2): jnz 0x4(%rip)
6579(2): jmp 0xffffffc7(%rip)
657b(4): sub $0x8,%rsp
657f(5): call 0x211(%rip)

"xrealloc" :
65a0(3): test %rsi,%rsi
65a3(1): push %rbx
65a4(3): mov %rsi,%rbx
65a7(2): jnz 0x7(%rip)
65a9(3): test %rdi,%rdi
65ac(2): jnz 0x1c(%rip)
65ae(3): mov %rbx,%rsi
65b1(5): call 0xffffb6cf(%rip)
65b6(3): test %rax,%rax
65b9(2): jnz 0x7(%rip)
65bb(3): test %rbx,%rbx
65be(2): jnz 0x13(%rip)
65c0(1): pop %rbx
65c1(1): ret near (%rsp)
65c2(6): nop 0x0(%rax,%rax,1)
65c8(5): call 0xffffb7d8(%rip)
65cd(2): xor %eax,%eax
65cf(1): pop %rbx
65d0(1): ret near (%rsp)
65d1(5): call 0x1bf(%rip)

"xnrealloc" :
65e0(3): mov %rsi,%rax
65e3(3): mul %rax,%rdx,%rdx
65e6(3): mov %rax,%rsi
65e9(3): seto %al
65ec(3): test %rsi,%rsi
65ef(2): js 0xc(%rip)
65f1(3): movzx %al,%eax
65f4(3): test %rax,%rax
65f7(2): jnz 0x4(%rip)
65f9(2): jmp 0xffffffa7(%rip)
65fb(4): sub $0x8,%rsp
65ff(5): call 0x191(%rip)

"x2nrealloc" :
6610(3): test %rdi,%rdi
6613(3): mov %rdx,%r9
6616(3): mov (%rsi),%rcx
6619(2): jz 0x37(%rip)
661b(2): xor %edx,%edx
661d(a): mov $0x6148914691236517204,%rax
6627(3): div %r9,%rax
662a(3): cmp %rcx,%rax
662d(2): jbe 0x3e(%rip)
662f(3): mov %rcx,%rax
6632(3): shr $0x1,%rax
6635(5): lea 0x1(%rax,%rcx,1),%rcx
663a(3): mov %rcx,(%rsi)
663d(4): imul %r9,%rcx
6641(3): mov %rcx,%rsi
6644(5): jmp 0xffffff5c(%rip)
6649(7): nop 0x0(%rax)
6650(3): test %rcx,%rcx
6653(2): jz 0x25(%rip)
6655(3): mov %rcx,%rax
6658(3): mul %rax,%r9,%rdx
665b(3): seto %dl
665e(3): test %rax,%rax
6661(3): movzx %dl,%edx
6664(2): js 0x7(%rip)
6666(3): test %rdx,%rdx
6669(2): jz 0xffffffd1(%rip)
666b(4): sub $0x8,%rsp
666f(5): call 0x121(%rip)
6674(4): nop 0x0(%rax)
6678(2): xor %edx,%edx
667a(5): mov $0x80,%eax
667f(3): xor %r8d,%r8d
6682(3): div %r9,%rax
6685(3): test %rax,%rax
6688(4): setz %r8b
668c(4): lea 0x0(%r8,%rax,1),%rcx
6690(2): jmp 0xffffffc5(%rip)

"x2realloc" :
66a0(3): test %rdi,%rdi
66a3(3): mov (%rsi),%rax
66a6(2): jz 0x2a(%rip)
66a8(a): mov $0x6148914691236517203,%rdx
66b2(3): cmp %rdx,%rax
66b5(2): jnbe 0x2c(%rip)
66b7(3): mov %rax,%rdx
66ba(3): shr $0x1,%rdx
66bd(5): lea 0x1(%rdx,%rax,1),%rax
66c2(3): mov %rax,(%rsi)
66c5(3): mov %rax,%rsi
66c8(5): jmp 0xfffffed8(%rip)
66cd(3): nop (%rax)
66d0(3): test %rax,%rax
66d3(5): mov $0x80,%edx
66d8(4): cmove %rdx,%rax
66dc(3): test %rax,%rax
66df(2): jns 0xffffffe3(%rip)
66e1(4): sub $0x8,%rsp
66e5(5): call 0xab(%rip)

"xzalloc" :
66f0(1): push %rbx
66f1(3): mov %rdi,%rbx
66f4(5): call 0xfffffe4c(%rip)
66f9(3): mov %rbx,%rdx
66fc(2): xor %esi,%esi
66fe(3): mov %rax,%rdi
6701(1): pop %rbx
6702(5): jmp 0xffffb42e(%rip)

"xcalloc" :
6710(3): mov %rdi,%rax
6713(4): sub $0x8,%rsp
6717(3): mul %rax,%rsi,%rdx
671a(3): seto %dl
671d(3): test %rax,%rax
6720(2): js 0x19(%rip)
6722(3): movzx %dl,%edx
6725(3): test %rdx,%rdx
6728(2): jnz 0x11(%rip)
672a(5): call 0xffffb466(%rip)
672f(3): test %rax,%rax
6732(2): jz 0x7(%rip)
6734(4): add $0x8,%rsp
6738(1): ret near (%rsp)
6739(5): call 0x57(%rip)

"xmemdup" :
6740(1): push %rbp
6741(1): push %rbx
6742(3): mov %rdi,%rbp
6745(3): mov %rsi,%rdi
6748(3): mov %rsi,%rbx
674b(4): sub $0x8,%rsp
674f(5): call 0xfffffdf1(%rip)
6754(4): add $0x8,%rsp
6758(3): mov %rbx,%rdx
675b(3): mov %rbp,%rsi
675e(1): pop %rbx
675f(1): pop %rbp
6760(3): mov %rax,%rdi
6763(5): jmp 0xffffb47d(%rip)

"xstrdup" :
6770(1): push %rbx
6771(3): mov %rdi,%rbx
6774(5): call 0xffffb30c(%rip)
6779(3): mov %rbx,%rdi
677c(4): lea 0x1(%rax),%rsi
6780(1): pop %rbx
6781(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
6790(7): lea 0x59f8(%rip),%rsi
6797(4): sub $0x8,%rsp
679b(5): mov $0x5,%edx
67a0(2): xor %edi,%edi
67a2(5): call 0xffffb2be(%rip)
67a7(6): mov 0x208873(%rip),%edi
67ad(7): lea 0x50db(%rip),%rdx
67b4(3): mov %rax,%rcx
67b7(2): xor %esi,%esi
67b9(2): xor %eax,%eax
67bb(5): call 0xffffb515(%rip)
67c0(5): call 0xffffb1d0(%rip)

"xfts_open" :
67d0(4): sub $0x8,%rsp
67d4(6): or $0x200,%esi
67da(5): call 0x17c6(%rip)
67df(3): test %rax,%rax
67e2(2): jz 0xe(%rip)
67e4(4): add $0x8,%rsp
67e8(1): ret near (%rsp)
67e9(7): nop 0x0(%rax)
67f0(5): call 0xffffb1b0(%rip)
67f5(3): cmp $0x16,(%rax)
67f8(2): jz 0x8(%rip)
67fa(5): call 0xffffff96(%rip)
67ff(1): nop 
6800(7): lea 0x59c9(%rip),%rcx
6807(7): lea 0x5992(%rip),%rsi
680e(7): lea 0x59a8(%rip),%rdi
6815(5): mov $0x29,%edx
681a(5): call 0xffffb306(%rip)

"cycle_warning_required" :
6820(3): mov 0x48(%rdi),%edx
6823(5): mov $0x1,%eax
6828(3): and $0x11,%edx
682b(3): cmp $0x10,%edx
682e(2): jz 0x9(%rip)
6830(2): xor %eax,%eax
6832(3): cmp $0x11,%edx
6835(2): jz 0xb(%rip)
6837(2): REP ret near (%rsp)
6839(7): nop 0x0(%rax)
6840(5): cmp $0x0,0x58(%rsi)
6845(3): setnz %al
6848(1): ret near (%rsp)

"yesno" :
6850(1): push %rbx
6851(5): mov $0xa,%edx
6856(2): xor %ebx,%ebx
6858(4): sub $0x20,%rsp
685c(7): mov 0x20884d(%rip),%rcx
6863(5): lea 0x10(%rsp),%rsi
6868(5): lea 0x8(%rsp),%rdi
686d(9): mov $0x0,0x8(%rsp)
6876(9): mov $0x28,%rax
687f(5): mov %rax,0x18(%rsp)
6884(2): xor %eax,%eax
6886(9): mov $0x0,0x10(%rsp)
688f(5): call 0xffffb311(%rip)
6894(3): test %rax,%rax
6897(2): jle 0x1b(%rip)
6899(5): mov 0x8(%rsp),%rdi
689e(5): lea 0xffffffff(%rdi,%rax,1),%rax
68a3(3): cmp $0xa,(%rax)
68a6(2): jz 0x32(%rip)
68a8(5): call 0xffffb328(%rip)
68ad(2): test %eax,%eax
68af(3): setnle %bl
68b2(5): mov 0x8(%rsp),%rdi
68b7(5): call 0xffffb4e9(%rip)
68bc(5): mov 0x18(%rsp),%rdx
68c1(9): xor $0x28,%rdx
68ca(2): mov %ebx,%eax
68cc(2): jnz 0x16(%rip)
68ce(4): add $0x20,%rsp
68d2(1): pop %rbx
68d3(1): ret near (%rsp)
68d4(4): nop 0x0(%rax)
68d8(3): mov $0x0,(%rax)
68db(5): mov 0x8(%rsp),%rdi
68e0(2): jmp 0xffffffc8(%rip)
68e2(5): call 0xffffb1ce(%rip)

"rpl_fflush" :
68f0(3): test %rdi,%rdi
68f3(1): push %rbx
68f4(3): mov %rdi,%rbx
68f7(2): jz 0x13(%rip)
68f9(5): call 0xffffb367(%rip)
68fe(2): test %eax,%eax
6900(2): jz 0xa(%rip)
6902(6): test $0x100,(%rbx)
6908(2): jnz 0x10(%rip)
690a(3): mov %rbx,%rdi
690d(1): pop %rbx
690e(5): jmp 0xffffb322(%rip)
6913(5): nop 0x0(%rax,%rax,1)
6918(3): mov %rbx,%rdi
691b(5): mov $0x1,%edx
6920(2): xor %esi,%esi
6922(5): call 0x3e(%rip)
6927(3): mov %rbx,%rdi
692a(1): pop %rbx
692b(5): jmp 0xffffb305(%rip)

"freadahead" :
6930(2): xor %eax,%eax
6932(4): mov 0x20(%rdi),%rcx
6936(4): cmp %rcx,0x28(%rdi)
693a(2): jnbe 0x1d(%rip)
693c(4): mov 0x10(%rdi),%rax
6940(4): sub 0x8(%rdi),%rax
6944(6): test $0x100,(%rdi)
694a(2): jz 0xd(%rip)
694c(4): mov 0x58(%rdi),%rdx
6950(4): sub 0x48(%rdi),%rdx
6954(3): add %rdx,%rax
6957(2): REP ret near (%rsp)

"rpl_fseeko" :
6960(4): mov 0x8(%rdi),%rax
6964(4): cmp %rax,0x10(%rdi)
6968(2): jz 0x8(%rip)
696a(5): jmp 0xffffb386(%rip)
696f(1): nop 
6970(4): mov 0x20(%rdi),%rax
6974(4): cmp %rax,0x28(%rdi)
6978(2): jnz 0xfffffff2(%rip)
697a(5): cmp $0x0,0x48(%rdi)
697f(2): jnz 0xffffffeb(%rip)
6981(2): push %r12
6983(1): push %rbp
6984(3): mov %edx,%r12d
6987(1): push %rbx
6988(3): mov %rsi,%rbp
698b(3): mov %rdi,%rbx
698e(5): call 0xffffb262(%rip)
6993(3): mov %r12d,%edx
6996(3): mov %rbp,%rsi
6999(2): mov %eax,%edi
699b(5): call 0xffffb175(%rip)
69a0(4): cmp $0xffffffff,%rax
69a4(2): jz 0xe(%rip)
69a6(3): and $0xef,(%rbx)
69a9(7): mov %rax,0x90(%rbx)
69b0(2): xor %eax,%eax
69b2(1): pop %rbx
69b3(1): pop %rbp
69b4(2): pop %r12
69b6(1): ret near (%rsp)

"AD_compare" :
69c0(2): xor %eax,%eax
69c2(4): mov 0x8(%rsi),%rdx
69c6(4): cmp %rdx,0x8(%rdi)
69ca(2): jz 0x6(%rip)
69cc(2): REP ret near (%rsp)
69ce(2): nop 
69d0(3): mov (%rsi),%rax
69d3(3): cmp %rax,(%rdi)
69d6(3): setz %al
69d9(1): ret near (%rsp)

"AD_hash" :
69e0(4): mov 0x8(%rdi),%rax
69e4(2): xor %edx,%edx
69e6(3): div %rsi,%rax
69e9(3): mov %rdx,%rax
69ec(1): ret near (%rsp)

"dev_type_hash" :
69f0(3): mov (%rdi),%rax
69f3(2): xor %edx,%edx
69f5(3): div %rsi,%rax
69f8(3): mov %rdx,%rax
69fb(1): ret near (%rsp)

"dev_type_compare" :
6a00(3): mov (%rsi),%rax
6a03(3): cmp %rax,(%rdi)
6a06(3): setz %al
6a09(1): ret near (%rsp)

"fts_compare_ino" :
6a10(3): mov (%rdi),%rdx
6a13(3): mov (%rsi),%rax
6a16(7): mov 0x80(%rax),%rax
6a1d(7): cmp %rax,0x80(%rdx)
6a24(2): jb 0xc(%rip)
6a26(3): setnbe %al
6a29(3): movzx %al,%eax
6a2c(1): ret near (%rsp)
6a2d(3): nop (%rax)
6a30(5): mov $0xffffffff,%eax
6a35(1): ret near (%rsp)

"fts_stat" :
6a40(2): push %r12
6a42(1): push %rbp
6a43(3): mov %rsi,%rbp
6a46(1): push %rbx
6a47(5): cmp $0x0,0x58(%rbp)
6a4c(4): lea 0x78(%rsi),%rbx
6a50(3): mov %rdi,%r12
6a53(3): mov 0x48(%rdi),%eax
6a56(4): mov 0x30(%rsi),%rsi
6a5a(2): jnz 0x66(%rip)
6a5c(2): test $0x1,%al
6a5e(2): jz 0x62(%rip)
6a60(3): mov %rbx,%rdx
6a63(5): mov $0x1,%edi
6a68(5): call 0xffffb198(%rip)
6a6d(2): test %eax,%eax
6a6f(2): jz 0x7c(%rip)
6a71(5): call 0xffffaf2f(%rip)
6a76(3): mov %rax,%r12
6a79(2): mov (%rax),%eax
6a7b(3): cmp $0x2,%eax
6a7e(6): jz 0x112(%rip)
6a84(4): lea 0x8(%rbx),%rdi
6a88(3): mov %eax,0x40(%rbp)
6a8b(8): mov $0x0,0x78(%rbp)
6a93(b): mov $0x0,0x88(%rbx)
6a9e(2): xor %eax,%eax
6aa0(4): and $0xfffffff8,%rdi
6aa4(3): sub %rdi,%rbx
6aa7(6): lea 0x90(%rbx),%ecx
6aad(3): shr $0x3,%ecx
6ab0(3): REP stosd %rax,rdi(%es,10)
6ab3(5): mov $0xa,%eax
6ab8(1): pop %rbx
6ab9(1): pop %rbp
6aba(2): pop %r12
6abc(1): ret near (%rsp)
6abd(3): nop (%rax)
6ac0(2): test $0x2,%al
6ac2(2): jnz 0xffffff9e(%rip)
6ac4(2): test %dl,%dl
6ac6(2): jnz 0xffffff9a(%rip)
6ac8(3): mov %rsi,%rdx
6acb(5): mov 0x2c(%r12),%esi
6ad0(6): mov $0x100,%r8d
6ad6(3): mov %rbx,%rcx
6ad9(5): mov $0x1,%edi
6ade(5): call 0xffffb002(%rip)
6ae3(2): test %eax,%eax
6ae5(6): jnz 0x9b(%rip)
6aeb(6): mov 0x90(%rbp),%eax
6af1(5): and $0xf000,%eax
6af6(5): cmp $0x4000,%eax
6afb(2): jz 0x25(%rip)
6afd(5): cmp $0xa000,%eax
6b02(6): jz 0xd6(%rip)
6b08(5): cmp $0x8000,%eax
6b0d(3): setz %al
6b10(3): movzx %al,%eax
6b13(1): pop %rbx
6b14(4): lea 0x3(%rax,%rax,4),%eax
6b18(1): pop %rbp
6b19(2): pop %r12
6b1b(1): ret near (%rsp)
6b1c(4): nop 0x0(%rax)
6b20(7): mov 0x88(%rbp),%rax
6b27(4): cmp $0x1,%rax
6b2b(6): jbe 0x85(%rip)
6b31(5): cmp $0x0,0x58(%rbp)
6b36(2): jle 0x7a(%rip)
6b38(6): test $0x20,0x48(%r12)
6b3e(4): lea 0xfffffffe(%rax),%rdx
6b42(4): cmove %rdx,%rax
6b46(7): cmp $0x2e,0x108(%rbp)
6b4d(4): mov %rax,0x68(%rbp)
6b51(5): mov $0x1,%eax
6b56(6): jnz 0xffffff62(%rip)
6b5c(7): cmp $0x0,0x109(%rbp)
6b63(6): jnz 0x85(%rip)
6b69(5): cmp $0x1,0x58(%rbp)
6b6e(2): sbb %eax,%eax
6b70(3): and $0xfc,%eax
6b73(3): add $0x5,%eax
6b76(5): jmp 0xffffff42(%rip)
6b7b(5): nop 0x0(%rax,%rax,1)
6b80(5): call 0xffffae20(%rip)
6b85(2): mov (%rax),%eax
6b87(5): jmp 0xfffffefd(%rip)
6b8c(4): nop 0x0(%rax)
6b90(4): mov 0x30(%rbp),%rsi
6b94(3): mov %rbx,%rdx
6b97(5): mov $0x1,%edi
6b9c(5): call 0xffffaef4(%rip)
6ba1(2): test %eax,%eax
6ba3(2): jz 0x1d(%rip)
6ba5(4): mov (%r12),%eax
6ba9(5): jmp 0xfffffedb(%rip)
6bae(2): nop 
6bb0(7): mov $0xffffffff,%rax
6bb7(2): jmp 0xffffff8f(%rip)
6bb9(7): nop 0x0(%rax)
6bc0(8): mov $0x0,(%r12)
6bc8(5): mov $0xd,%eax
6bcd(5): jmp 0xfffffeeb(%rip)
6bd2(6): nop 0x0(%rax,%rax,1)
6bd8(5): mov $0xc,%eax
6bdd(5): jmp 0xfffffedb(%rip)
6be2(6): nop 0x0(%rax,%rax,1)
6be8(6): mov 0x108(%rbp),%edx
6bee(6): and $0xffff00,%edx
6bf4(6): cmp $0x2e00,%edx
6bfa(6): jnz 0xfffffebe(%rip)
6c00(5): jmp 0xffffff69(%rip)

"fts_sort" :
6c10(2): push %r13
6c12(2): push %r12
6c14(3): mov %rdx,%r12
6c17(1): push %rbp
6c18(1): push %rbx
6c19(3): mov %rdi,%rbp
6c1c(3): mov %rsi,%rbx
6c1f(4): sub $0x8,%rsp
6c23(4): cmp %rdx,0x38(%rbp)
6c27(4): mov 0x40(%rdi),%r13
6c2b(4): mov 0x10(%rdi),%rdi
6c2f(2): jnb 0x36(%rip)
6c31(4): lea 0x28(%rdx),%rsi
6c35(a): mov $0x2305843009213693951,%rax
6c3f(3): cmp %rax,%rsi
6c42(4): mov %rsi,0x38(%rbp)
6c46(6): jnbe 0x9e(%rip)
6c4c(4): shl/sal $0x3,%rsi
6c50(5): call 0xffffb030(%rip)
6c55(3): test %rax,%rax
6c58(3): mov %rax,%rdi
6c5b(6): jz 0x85(%rip)
6c61(4): mov %rax,0x10(%rbp)
6c65(3): test %rbx,%rbx
6c68(2): jz 0x19(%rip)
6c6a(3): mov %rdi,%rdx
6c6d(3): nop (%rax)
6c70(4): add $0x8,%rdx
6c74(4): mov %rbx,0xfffffff8(%rdx)
6c78(4): mov 0x10(%rbx),%rbx
6c7c(3): test %rbx,%rbx
6c7f(2): jnz 0xfffffff1(%rip)
6c81(3): mov %r13,%rcx
6c84(5): mov $0x8,%edx
6c89(3): mov %r12,%rsi
6c8c(5): call 0xffffad64(%rip)
6c91(4): mov 0x10(%rbp),%r8
6c95(3): mov %r12,%rcx
6c98(4): sub $0x1,%rcx
6c9c(3): mov (%r8),%rax
6c9f(2): jz 0x71(%rip)
6ca1(3): mov %rax,%rdi
6ca4(3): mov %r8,%rdx
6ca7(2): jmp 0xc(%rip)
6ca9(7): nop 0x0(%rax)
6cb0(3): mov (%rdx),%rdi
6cb3(4): mov 0x8(%rdx),%rsi
6cb7(4): add $0x8,%rdx
6cbb(4): sub $0x1,%rcx
6cbf(4): mov %rsi,0x10(%rdi)
6cc3(2): jnz 0xffffffed(%rip)
6cc5(5): mov 0xfffffff8(%r8,%r12,8),%rdx
6cca(8): mov $0x0,0x10(%rdx)
6cd2(4): add $0x8,%rsp
6cd6(1): pop %rbx
6cd7(1): pop %rbp
6cd8(2): pop %r12
6cda(2): pop %r13
6cdc(1): ret near (%rsp)
6cdd(3): nop (%rax)
6ce0(4): mov 0x10(%rbp),%rdi
6ce4(5): call 0xffffb0bc(%rip)
6ce9(8): mov $0x0,0x10(%rbp)
6cf1(8): mov $0x0,0x38(%rbp)
6cf9(4): add $0x8,%rsp
6cfd(3): mov %rbx,%rax
6d00(1): pop %rbx
6d01(1): pop %rbp
6d02(2): pop %r12
6d04(2): pop %r13
6d06(1): ret near (%rsp)
6d07(9): nop 0x0(%rax,%rax,1)
6d10(3): mov %rax,%rdx
6d13(2): jmp 0xffffffb7(%rip)

"fts_alloc" :
6d20(2): push %r13
6d22(2): push %r12
6d24(3): mov %rdi,%r12
6d27(1): push %rbp
6d28(7): lea 0x110(%rdx),%rdi
6d2f(1): push %rbx
6d30(3): mov %rsi,%r13
6d33(3): mov %rdx,%rbp
6d36(4): sub $0x8,%rsp
6d3a(4): and $0xfffffff8,%rdi
6d3e(5): call 0xffffaee2(%rip)
6d43(3): test %rax,%rax
6d46(3): mov %rax,%rbx
6d49(2): jz 0x53(%rip)
6d4b(7): lea 0x108(%rax),%rdi
6d52(3): mov %rbp,%rdx
6d55(3): mov %r13,%rsi
6d58(5): call 0xffffae88(%rip)
6d5d(5): mov 0x20(%r12),%rax
6d62(8): mov $0x0,0x108(%rbx,%rbp,1)
6d6a(4): mov %rbp,0x60(%rbx)
6d6e(4): mov %r12,0x50(%rbx)
6d72(7): mov $0x0,0x40(%rbx)
6d79(8): mov $0x0,0x18(%rbx)
6d81(4): mov %rax,0x38(%rbx)
6d85(7): mov $0x30000,0x72(%rbx)
6d8c(8): mov $0x0,0x20(%rbx)
6d94(8): mov $0x0,0x28(%rbx)
6d9c(4): add $0x8,%rsp
6da0(3): mov %rbx,%rax
6da3(1): pop %rbx
6da4(1): pop %rbp
6da5(2): pop %r12
6da7(2): pop %r13
6da9(1): ret near (%rsp)

"fts_lfree" :
6db0(3): test %rdi,%rdi
6db3(2): jz 0x3d(%rip)
6db5(1): push %rbp
6db6(1): push %rbx
6db7(3): mov %rdi,%rbx
6dba(4): sub $0x8,%rsp
6dbe(2): nop 
6dc0(4): mov 0x18(%rbx),%rdi
6dc4(4): mov 0x10(%rbx),%rbp
6dc8(3): test %rdi,%rdi
6dcb(2): jz 0x7(%rip)
6dcd(5): call 0xffffad93(%rip)
6dd2(3): mov %rbx,%rdi
6dd5(3): mov %rbp,%rbx
6dd8(5): call 0xffffafc8(%rip)
6ddd(3): test %rbp,%rbp
6de0(2): jnz 0xffffffe0(%rip)
6de2(4): add $0x8,%rsp
6de6(1): pop %rbx
6de7(1): pop %rbp
6de8(1): ret near (%rsp)
6de9(7): nop 0x0(%rax)
6df0(2): REP ret near (%rsp)

"fd_ring_clear" :
6e00(1): push %rbx
6e01(3): mov %rdi,%rbx
6e04(2): jmp 0x18(%rip)
6e06(a): nop 0x0(%rax,%rax,1)
6e10(3): mov %rbx,%rdi
6e13(5): call 0x359d(%rip)
6e18(2): test %eax,%eax
6e1a(2): jns 0x16(%rip)
6e1c(3): mov %rbx,%rdi
6e1f(5): call 0x3541(%rip)
6e24(2): test %al,%al
6e26(2): jz 0xffffffea(%rip)
6e28(1): pop %rbx
6e29(1): ret near (%rsp)
6e2a(6): nop 0x0(%rax,%rax,1)
6e30(2): mov %eax,%edi
6e32(5): call 0xffffad1e(%rip)
6e37(2): jmp 0xffffffe5(%rip)

"filesystem_type" :
6e40(2): push %r13
6e42(2): push %r12
6e44(1): push %rbp
6e45(1): push %rbx
6e46(7): sub $0x98,%rsp
6e4d(4): mov 0x50(%rdi),%rbx
6e51(9): mov $0x28,%rax
6e5a(8): mov %rax,0x88(%rsp)
6e62(2): xor %eax,%eax
6e64(4): test $0x2,0x49(%rbx)
6e68(2): jz 0x6a(%rip)
6e6a(4): mov 0x50(%rbx),%r12
6e6e(3): mov %rdi,%rbp
6e71(3): mov %esi,%r13d
6e74(3): test %r12,%r12
6e77(2): jz 0x29(%rip)
6e79(4): mov 0x78(%rbp),%rax
6e7d(3): mov %rsp,%rsi
6e80(3): mov %r12,%rdi
6e83(4): mov %rax,(%rsp)
6e87(5): call 0x27d9(%rip)
6e8c(3): test %rax,%rax
6e8f(2): jz 0x3e(%rip)
6e91(4): mov 0x8(%rax),%rbx
6e95(2): jmp 0x3f(%rip)
6e97(9): nop 0x0(%rax,%rax,1)
6ea0(7): mov 0x208121(%rip),%r8
6ea7(7): lea 0xfffffb52(%rip),%rcx
6eae(7): lea 0xfffffb3b(%rip),%rdx
6eb5(2): xor %esi,%esi
6eb7(5): mov $0xd,%edi
6ebc(5): call 0x2a14(%rip)
6ec1(3): test %rax,%rax
6ec4(3): mov %rax,%r12
6ec7(4): mov %rax,0x50(%rbx)
6ecb(2): jnz 0xffffffae(%rip)
6ecd(3): test %r13d,%r13d
6ed0(2): jns 0x30(%rip)
6ed2(2): xor %ebx,%ebx
6ed4(8): mov 0x88(%rsp),%rdx
6edc(9): xor $0x28,%rdx
6ee5(3): mov %rbx,%rax
6ee8(2): jnz 0x7a(%rip)
6eea(7): add $0x98,%rsp
6ef1(1): pop %rbx
6ef2(1): pop %rbp
6ef3(2): pop %r12
6ef5(2): pop %r13
6ef7(1): ret near (%rsp)
6ef8(8): nop 0x0(%rax,%rax,1)
6f00(5): lea 0x10(%rsp),%rsi
6f05(3): mov %r13d,%edi
6f08(5): call 0xffffae18(%rip)
6f0d(2): test %eax,%eax
6f0f(2): jnz 0xffffffc3(%rip)
6f11(3): test %r12,%r12
6f14(5): mov 0x10(%rsp),%rbx
6f19(2): jz 0xffffffbb(%rip)
6f1b(5): mov $0x10,%edi
6f20(5): call 0xffffad00(%rip)
6f25(3): test %rax,%rax
6f28(3): mov %rax,%r13
6f2b(2): jz 0xffffffa9(%rip)
6f2d(4): mov 0x78(%rbp),%rax
6f31(4): mov %rbx,0x8(%r13)
6f35(3): mov %r13,%rsi
6f38(3): mov %r12,%rdi
6f3b(4): mov %rax,0x0(%r13)
6f3f(5): call 0x3191(%rip)
6f44(3): test %rax,%rax
6f47(2): jz 0x11(%rip)
6f49(3): cmp %rax,%r13
6f4c(2): jnz 0x1b(%rip)
6f4e(5): mov 0x10(%rsp),%rbx
6f53(5): jmp 0xffffff81(%rip)
6f58(3): mov %r13,%rdi
6f5b(5): call 0xffffae45(%rip)
6f60(2): jmp 0xffffffee(%rip)
6f62(5): call 0xffffab4e(%rip)
6f67(5): call 0xffffaa29(%rip)

"leaf_optimization" :
6f70(4): sub $0x8,%rsp
6f74(5): call 0xfffffecc(%rip)
6f79(6): cmp $0x52654973,%rax
6f7f(2): jz 0x51(%rip)
6f81(2): jle 0x2f(%rip)
6f83(6): cmp $0x58465342,%rax
6f89(2): jz 0x47(%rip)
6f8b(5): mov $0xff534d42,%edx
6f90(3): cmp %rdx,%rax
6f93(2): jz 0x32(%rip)
6f95(6): cmp $0x5346414f,%rax
6f9b(2): jz 0x2a(%rip)
6f9d(5): mov $0x1,%eax
6fa2(4): add $0x8,%rsp
6fa6(1): ret near (%rsp)
6fa7(9): nop 0x0(%rax,%rax,1)
6fb0(6): cmp $0x6969,%rax
6fb6(2): jz 0xf(%rip)
6fb8(6): cmp $0x9fa0,%rax
6fbe(2): jz 0x7(%rip)
6fc0(3): test %rax,%rax
6fc3(2): jnz 0xffffffda(%rip)
6fc5(2): xor %eax,%eax
6fc7(4): add $0x8,%rsp
6fcb(1): ret near (%rsp)
6fcc(4): nop 0x0(%rax)
6fd0(5): mov $0x2,%eax
6fd5(4): add $0x8,%rsp
6fd9(1): ret near (%rsp)

"cwd_advance_fd" :
6fe0(1): push %rbp
6fe1(1): push %rbx
6fe2(2): mov %esi,%ebp
6fe4(3): mov %rdi,%rbx
6fe7(4): sub $0x8,%rsp
6feb(3): mov 0x2c(%rdi),%esi
6fee(2): cmp %ebp,%esi
6ff0(2): jnz 0x7(%rip)
6ff2(3): cmp $0x9c,%esi
6ff5(2): jnz 0x4c(%rip)
6ff7(2): test %dl,%dl
6ff9(2): jnz 0x17(%rip)
6ffb(4): test $0x4,0x48(%rbx)
6fff(2): jnz 0x6(%rip)
7001(2): test %esi,%esi
7003(2): jns 0x2d(%rip)
7005(3): mov %ebp,0x2c(%rbx)
7008(4): add $0x8,%rsp
700c(1): pop %rbx
700d(1): pop %rbp
700e(1): ret near (%rsp)
700f(1): nop 
7010(4): lea 0x60(%rbx),%rdi
7014(5): call 0x335c(%rip)
7019(2): test %eax,%eax
701b(2): js 0xffffffea(%rip)
701d(2): mov %eax,%edi
701f(5): call 0xffffab31(%rip)
7024(3): mov %ebp,0x2c(%rbx)
7027(4): add $0x8,%rsp
702b(1): pop %rbx
702c(1): pop %rbp
702d(1): ret near (%rsp)
702e(2): nop 
7030(2): mov %esi,%edi
7032(5): call 0xffffab1e(%rip)
7037(3): mov %ebp,0x2c(%rbx)
703a(4): add $0x8,%rsp
703e(1): pop %rbx
703f(1): pop %rbp
7040(1): ret near (%rsp)
7041(5): call 0xffffa94f(%rip)

"restore_initial_cwd" :
7050(1): push %rbp
7051(1): push %rbx
7052(3): mov %rdi,%rbx
7055(4): sub $0x8,%rsp
7059(3): mov 0x48(%rdi),%edx
705c(2): mov %edx,%ebp
705e(3): and $0x4,%ebp
7061(2): jnz 0x47(%rip)
7063(3): and $0x2,%dh
7066(2): jnz 0x2a(%rip)
7068(3): mov 0x28(%rdi),%edi
706b(2): xor %ebp,%ebp
706d(5): call 0xffffac03(%rip)
7072(2): test %eax,%eax
7074(4): setnz %bpl
7078(4): lea 0x60(%rbx),%rdi
707c(5): call 0xfffffd84(%rip)
7081(4): add $0x8,%rsp
7085(2): mov %ebp,%eax
7087(1): pop %rbx
7088(1): pop %rbp
7089(1): ret near (%rsp)
708a(6): nop 0x0(%rax,%rax,1)
7090(5): mov $0x1,%edx
7095(5): mov $0xffffff9c,%esi
709a(5): call 0xffffff46(%rip)
709f(2): jmp 0xffffffd9(%rip)
70a1(7): nop 0x0(%rax)
70a8(2): xor %ebp,%ebp
70aa(2): jmp 0xffffffce(%rip)

"fts_palloc.isra.2" :
70b0(1): push %rbx
70b1(3): mov (%rsi),%rcx
70b4(3): mov %rdi,%rbx
70b7(3): mov (%rdi),%rdi
70ba(8): lea 0x100(%rcx,%rdx,1),%rax
70c2(3): cmp %rax,%rcx
70c5(2): jnbe 0x23(%rip)
70c7(3): mov %rax,(%rsi)
70ca(3): mov %rax,%rsi
70cd(5): call 0xffffabb3(%rip)
70d2(3): test %rax,%rax
70d5(2): jz 0x33(%rip)
70d7(3): mov %rax,(%rbx)
70da(5): mov $0x1,%eax
70df(1): pop %rbx
70e0(1): ret near (%rsp)
70e1(7): nop 0x0(%rax)
70e8(5): call 0xffffacb8(%rip)
70ed(7): mov $0x0,(%rbx)
70f4(5): call 0xffffa8ac(%rip)
70f9(6): mov $0x24,(%rax)
70ff(2): xor %eax,%eax
7101(1): pop %rbx
7102(1): ret near (%rsp)
7103(5): nop 0x0(%rax,%rax,1)
7108(3): mov (%rbx),%rdi
710b(5): call 0xffffac95(%rip)
7110(7): mov $0x0,(%rbx)
7117(2): xor %eax,%eax
7119(1): pop %rbx
711a(1): ret near (%rsp)

"setup_dir.isra.4" :
7120(6): and $0x102,%edi
7126(1): push %rbx
7127(3): mov %rsi,%rbx
712a(2): jz 0x36(%rip)
712c(7): mov 0x207e95(%rip),%r8
7133(7): lea 0xfffff886(%rip),%rcx
713a(7): lea 0xfffff89f(%rip),%rdx
7141(2): xor %esi,%esi
7143(5): mov $0x1f,%edi
7148(5): call 0x2788(%rip)
714d(3): test %rax,%rax
7150(3): mov %rax,(%rbx)
7153(3): setnz %al
7156(1): pop %rbx
7157(1): ret near (%rsp)
7158(8): nop 0x0(%rax,%rax,1)
7160(5): mov $0x20,%edi
7165(5): call 0xffffaabb(%rip)
716a(3): mov %rax,%rdi
716d(3): mov %rax,(%rbx)
7170(2): xor %eax,%eax
7172(3): test %rdi,%rdi
7175(2): jz 0xffffffe1(%rip)
7177(5): call 0x1d79(%rip)
717c(5): mov $0x1,%eax
7181(1): pop %rbx
7182(1): ret near (%rsp)

"diropen.isra.6" :
7190(3): mov %rdx,%rax
7193(2): mov %esi,%edx
7195(3): shl/sal $0xd,%edx
7198(6): and $0x20000,%edx
719e(6): or $0x90900,%edx
71a4(6): and $0x200,%esi
71aa(2): jnz 0x16(%rip)
71ac(3): mov %rax,%rdi
71af(2): mov %edx,%esi
71b1(2): xor %eax,%eax
71b3(5): jmp 0x1ddd(%rip)
71b8(8): nop 0x0(%rax,%rax,1)
71c0(3): mov %rax,%rsi
71c3(2): xor %eax,%eax
71c5(5): jmp 0x326b(%rip)

"fts_safe_changedir" :
71d0(2): push %r15
71d2(2): push %r14
71d4(3): mov %rsi,%r14
71d7(2): push %r13
71d9(2): push %r12
71db(3): mov %rdi,%r13
71de(1): push %rbp
71df(1): push %rbx
71e0(3): mov %edx,%r12d
71e3(3): mov %rcx,%rbp
71e6(7): sub $0xb8,%rsp
71ed(3): mov 0x48(%rdi),%ebx
71f0(9): mov $0x28,%rax
71f9(8): mov %rax,0xa8(%rsp)
7201(2): xor %eax,%eax
7203(3): mov %ebx,%r9d
7206(4): and $0x4,%r9d
720a(3): test %rcx,%rcx
720d(6): jz 0xb3(%rip)
7213(7): lea 0x42a4(%rip),%rdx
721a(5): mov $0x3,%ecx
721f(3): mov %rbp,%rsi
7222(3): mov %rdx,%rdi
7225(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7227(3): setnbe %al
722a(2): sbb $0x0,%al
722c(2): test %al,%al
722e(6): jnz 0x92(%rip)
7234(3): test %r9d,%r9d
7237(6): jnz 0x8e(%rip)
723d(3): test %r12d,%r12d
7240(6): jns 0x1ea(%rip)
7246(3): test $0x2,%bh
7249(6): jnz 0x147(%rip)
724f(5): mov $0x1,0xf(%rsp)
7254(4): mov 0x2c(%r13),%edi
7258(3): mov %rbp,%rdx
725b(2): mov %ebx,%esi
725d(5): call 0xffffff33(%rip)
7262(2): test %eax,%eax
7264(3): mov %eax,%r15d
7267(6): js 0x1b4(%rip)
726d(4): mov 0x48(%r13),%ebx
7271(3): test $0x2,%bl
7274(6): jz 0xa6(%rip)
727a(6): nop 0x0(%rax,%rax,1)
7280(5): lea 0x10(%rsp),%rdx
7285(3): mov %r15d,%esi
7288(5): mov $0x1,%edi
728d(5): call 0xffffa9c3(%rip)
7292(2): test %eax,%eax
7294(6): jz 0xcc(%rip)
729a(5): mov $0xffffffff,%ebx
729f(3): test %r12d,%r12d
72a2(2): jns 0x33(%rip)
72a4(5): call 0xffffa6fc(%rip)
72a9(3): mov (%rax),%r12d
72ac(3): mov %rax,%rbp
72af(3): mov %r15d,%edi
72b2(5): call 0xffffa89e(%rip)
72b7(4): mov %r12d,0x0(%rbp)
72bb(2): jmp 0x1a(%rip)
72bd(3): nop (%rax)
72c0(3): test %r9d,%r9d
72c3(2): jz 0x3d(%rip)
72c5(3): and $0x2,%bh
72c8(2): jz 0xb(%rip)
72ca(3): test %r12d,%r12d
72cd(6): jns 0xb3(%rip)
72d3(2): xor %ebx,%ebx
72d5(8): mov 0xa8(%rsp),%rcx
72dd(9): xor $0x28,%rcx
72e6(2): mov %ebx,%eax
72e8(6): jnz 0x13d(%rip)
72ee(7): add $0xb8,%rsp
72f5(1): pop %rbx
72f6(1): pop %rbp
72f7(2): pop %r12
72f9(2): pop %r13
72fb(2): pop %r14
72fd(2): pop %r15
72ff(1): ret near (%rsp)
7300(3): test %r12d,%r12d
7303(6): js 0x13d(%rip)
7309(3): test $0x2,%bl
730c(3): mov %r12d,%r15d
730f(5): mov $0x0,0xf(%rsp)
7314(6): jnz 0xffffff6c(%rip)
731a(3): test %rbp,%rbp
731d(2): jz 0x23(%rip)
731f(7): lea 0x4198(%rip),%rdx
7326(5): mov $0x3,%ecx
732b(3): mov %rbp,%rsi
732e(3): mov %rdx,%rdi
7331(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7333(3): setnbe %al
7336(2): sbb $0x0,%al
7338(2): test %al,%al
733a(6): jz 0xffffff46(%rip)
7340(3): and $0x2,%bh
7343(6): jnz 0x95(%rip)
7349(3): mov %r15d,%edi
734c(5): call 0xffffa924(%rip)
7351(2): mov %eax,%ebx
7353(5): jmp 0xffffff4c(%rip)
7358(8): nop 0x0(%rax,%rax,1)
7360(5): mov 0x10(%rsp),%rax
7365(4): cmp %rax,0x78(%r14)
7369(6): jz 0x97(%rip)
736f(5): call 0xffffa631(%rip)
7374(6): mov $0x2,(%rax)
737a(5): jmp 0xffffff20(%rip)
737f(1): nop 
7380(3): mov %r12d,%edi
7383(2): xor %ebx,%ebx
7385(5): call 0xffffa7cb(%rip)
738a(5): jmp 0xffffff4b(%rip)
738f(1): nop 
7390(4): lea 0x60(%r13),%r15
7394(3): mov %r15,%rdi
7397(5): call 0x2fc9(%rip)
739c(2): test %al,%al
739e(4): mov %al,0xf(%rsp)
73a2(6): jnz 0xfffffeb2(%rip)
73a8(3): mov %r15,%rdi
73ab(5): call 0x3005(%rip)
73b0(2): test %eax,%eax
73b2(3): mov %eax,%r15d
73b5(4): mov 0x48(%r13),%ebx
73b9(6): js 0xfffffe96(%rip)
73bf(3): test $0x2,%bl
73c2(3): mov %eax,%r12d
73c5(5): mov $0x1,0xf(%rsp)
73ca(6): jz 0xffffff76(%rip)
73d0(5): jmp 0xfffffeb0(%rip)
73d5(3): nop (%rax)
73d8(6): movzx 0xf(%rsp),%r14d
73de(3): mov %r15d,%esi
73e1(3): mov %r13,%rdi
73e4(2): xor %ebx,%ebx
73e6(4): xor $0x1,%r14d
73ea(4): movzx %r14b,%edx
73ee(5): call 0xfffffbf2(%rip)
73f3(5): jmp 0xfffffee2(%rip)
73f8(8): nop 0x0(%rax,%rax,1)
7400(5): mov 0x18(%rsp),%rax
7405(7): cmp %rax,0x80(%r14)
740c(6): jnz 0xffffff63(%rip)
7412(4): mov 0x48(%r13),%ebx
7416(5): jmp 0xffffff2a(%rip)
741b(5): mov $0xffffffff,%ebx
7420(5): jmp 0xfffffeb5(%rip)
7425(5): call 0xffffa68b(%rip)
742a(3): test $0x2,%bl
742d(3): mov %r12d,%r15d
7430(5): mov $0x1,0xf(%rsp)
7435(6): jz 0xfffffef1(%rip)
743b(5): jmp 0xfffffe45(%rip)
7440(5): mov $0x0,0xf(%rsp)
7445(5): jmp 0xfffffe0f(%rip)

"enter_dir.isra.10" :
7450(6): and $0x102,%edi
7456(2): push %r12
7458(3): mov %rsi,%r12
745b(1): push %rbp
745c(1): push %rbx
745d(3): mov %rdx,%rbx
7460(2): jz 0x70(%rip)
7462(5): mov $0x18,%edi
7467(5): call 0xffffa7b9(%rip)
746c(3): test %rax,%rax
746f(3): mov %rax,%rbp
7472(6): jz 0x86(%rip)
7478(4): mov 0x78(%rbx),%rax
747c(4): mov (%r12),%rdi
7480(3): mov %rbp,%rsi
7483(4): mov %rbx,0x10(%rbp)
7487(4): mov %rax,0x0(%rbp)
748b(7): mov 0x80(%rbx),%rax
7492(4): mov %rax,0x8(%rbp)
7496(5): call 0x2c3a(%rip)
749b(3): cmp %rax,%rbp
749e(3): mov %rax,%r12
74a1(2): jz 0x20(%rip)
74a3(3): mov %rbp,%rdi
74a6(5): call 0xffffa8fa(%rip)
74ab(3): test %r12,%r12
74ae(2): jz 0x4a(%rip)
74b0(5): mov 0x10(%r12),%rax
74b5(5): mov $0x2,%ecx
74ba(4): mov %cx,0x70(%rbx)
74be(3): mov %rax,(%rbx)
74c1(1): pop %rbx
74c2(5): mov $0x1,%eax
74c7(1): pop %rbp
74c8(2): pop %r12
74ca(1): ret near (%rsp)
74cb(5): nop 0x0(%rax,%rax,1)
74d0(4): mov (%r12),%rdi
74d4(4): lea 0x78(%rdx),%rsi
74d8(5): call 0x1a28(%rip)
74dd(2): test %al,%al
74df(2): jz 0xffffffe2(%rip)
74e1(5): mov $0x2,%edx
74e6(3): mov %rbx,(%rbx)
74e9(4): mov %dx,0x70(%rbx)
74ed(1): pop %rbx
74ee(1): pop %rbp
74ef(2): pop %r12
74f1(1): ret near (%rsp)
74f2(6): nop 0x0(%rax,%rax,1)
74f8(1): pop %rbx
74f9(2): xor %eax,%eax
74fb(1): pop %rbp
74fc(2): pop %r12
74fe(1): ret near (%rsp)

"leave_dir.isra.12" :
7500(4): sub $0x28,%rsp
7504(3): mov %rsi,%rcx
7507(9): mov $0x28,%rax
7510(5): mov %rax,0x18(%rsp)
7515(2): xor %eax,%eax
7517(6): and $0x102,%edi
751d(2): jnz 0x43(%rip)
751f(4): mov 0x8(%rdx),%rax
7523(3): test %rax,%rax
7526(2): jz 0x1f(%rip)
7528(5): cmp $0x0,0x58(%rax)
752d(2): js 0x18(%rip)
752f(3): mov (%rsi),%rcx
7532(5): cmp $0x0,0x10(%rcx)
7537(2): jz 0x7c(%rip)
7539(7): mov 0x80(%rdx),%rsi
7540(3): cmp %rsi,(%rcx)
7543(2): jz 0x4d(%rip)
7545(5): mov 0x18(%rsp),%rax
754a(9): xor $0x28,%rax
7553(2): jnz 0x5b(%rip)
7555(4): add $0x28,%rsp
7559(1): ret near (%rsp)
755a(6): nop 0x0(%rax,%rax,1)
7560(4): mov 0x78(%rdx),%rax
7564(3): mov (%rcx),%rdi
7567(3): mov %rsp,%rsi
756a(4): mov %rax,(%rsp)
756e(7): mov 0x80(%rdx),%rax
7575(5): mov %rax,0x8(%rsp)
757a(5): call 0x2bb6(%rip)
757f(3): test %rax,%rax
7582(2): jz 0x31(%rip)
7584(3): mov %rax,%rdi
7587(5): call 0xffffa819(%rip)
758c(2): jmp 0xffffffb9(%rip)
758e(2): nop 
7590(4): mov 0x78(%rdx),%rsi
7594(4): cmp %rsi,0x8(%rcx)
7598(2): jnz 0xffffffad(%rip)
759a(4): mov 0x78(%rax),%rdx
759e(7): mov 0x80(%rax),%rax
75a5(4): mov %rdx,0x8(%rcx)
75a9(3): mov %rax,(%rcx)
75ac(2): jmp 0xffffff99(%rip)
75ae(5): call 0xffffa502(%rip)
75b3(5): call 0xffffa3dd(%rip)

"fts_build" :
75c0(2): push %r15
75c2(2): push %r14
75c4(3): mov %rdi,%r15
75c7(2): push %r13
75c9(2): push %r12
75cb(1): push %rbp
75cc(1): push %rbx
75cd(4): sub $0x78,%rsp
75d1(3): mov (%rdi),%rbp
75d4(9): mov $0x28,%rax
75dd(5): mov %rax,0x68(%rsp)
75e2(2): xor %eax,%eax
75e4(4): mov %esi,0x58(%rsp)
75e8(4): mov 0x18(%rbp),%rax
75ec(3): test %rax,%rax
75ef(5): mov %rax,0x50(%rsp)
75f4(6): jz 0x43c(%rip)
75fa(3): mov %rax,%rdi
75fd(5): call 0xffffa5c3(%rip)
7602(2): test %eax,%eax
7604(4): mov %eax,0x64(%rsp)
7608(6): js 0x558(%rip)
760e(5): cmp $0x0,0x40(%r15)
7613(6): jz 0x7d5(%rip)
7619(9): mov $0xffffffff,0x38(%rsp)
7622(4): mov 0x48(%r15),%edi
7626(5): mov $0x1,0x5f(%rsp)
762b(4): mov 0x48(%rbp),%rcx
762f(4): mov 0x38(%rbp),%rdx
7633(9): mov $0x0,0x40(%rsp)
763c(5): cmp $0x2f,0xffffffff(%rdx,%rcx,1)
7641(4): lea 0xffffffff(%rcx),%rax
7645(4): cmovne %rcx,%rax
7649(3): and $0x4,%edi
764c(5): mov %rax,0x48(%rsp)
7651(2): jz 0x12(%rip)
7653(4): add 0x20(%r15),%rax
7657(4): lea 0x1(%rax),%rbx
765b(3): mov $0x2f,(%rax)
765e(5): mov %rbx,0x40(%rsp)
7663(5): mov 0x48(%rsp),%rax
7668(4): mov 0x30(%r15),%rbx
766c(5): mov $0x0,0x5e(%rsp)
7671(5): mov $0x0,0x5d(%rsp)
7676(9): mov $0x0,0x8(%rsp)
767f(9): mov $0x0,0x10(%rsp)
7688(4): add $0x1,%rax
768c(5): mov %rbp,0x20(%rsp)
7691(3): sub %rax,%rbx
7694(5): mov %rax,0x18(%rsp)
7699(4): mov 0x58(%rbp),%rax
769d(5): mov %rbx,0x28(%rsp)
76a2(2): xor %ebx,%ebx
76a4(4): add $0x1,%rax
76a8(5): mov %rax,0x30(%rsp)
76ad(5): jmp 0xe2(%rip)
76b2(6): nop 0x0(%rax,%rax,1)
76b8(3): mov %r14,%r9
76bb(5): add 0x18(%rsp),%r9
76c0(6): jb 0x860(%rip)
76c6(5): mov 0x30(%rsp),%rax
76cb(7): lea 0x108(%r13),%rsi
76d2(4): mov %rax,0x58(%r13)
76d6(3): mov (%r15),%rax
76d9(4): mov %r9,0x48(%r13)
76dd(4): mov %rax,0x8(%r13)
76e1(4): mov 0x0(%rbp),%rax
76e5(7): mov %rax,0x80(%r13)
76ec(4): mov 0x48(%r15),%eax
76f0(2): test $0x4,%al
76f2(6): jnz 0x26e(%rip)
76f8(4): mov %rsi,0x30(%r13)
76fc(5): cmp $0x0,0x40(%r15)
7701(2): jz 0xb(%rip)
7703(3): test $0x4,%ah
7706(6): jz 0x302(%rip)
770c(4): movzx 0x12(%rbp),%edx
7710(3): and $0x18,%eax
7713(2): mov %edx,%esi
7715(3): sub $0x1,%edx
7718(3): cmp $0x18,%eax
771b(6): jz 0x2b5(%rip)
7721(5): mov $0xb,%ecx
7726(3): cmp $0xb,%edx
7729(5): mov %cx,0x70(%r13)
772e(6): jnbe 0x26a(%rip)
7734(7): lea 0x4aa5(%rip),%rax
773b(3): mov 0x0(%rax,%rdx,4),%eax
773e(7): mov %eax,0x90(%r13)
7745(5): mov $0x2,%eax
774a(7): mov %rax,0xa8(%r13)
7751(6): cmp $0x0,0x10(%rsp)
7757(8): mov $0x0,0x10(%r13)
775f(6): jz 0x229(%rip)
7765(5): mov 0x8(%rsp),%rax
776a(4): mov %r13,0x10(%rax)
776e(7): cmp $0x2710,%rbx
7775(6): jz 0xfb(%rip)
777b(4): add $0x1,%rbx
777f(5): cmp 0x38(%rsp),%rbx
7784(6): jnb 0x144(%rip)
778a(5): mov %r13,0x8(%rsp)
778f(5): mov 0x20(%rsp),%rax
7794(4): mov 0x18(%rax),%r13
7798(3): test %r13,%r13
779b(6): jz 0x4cd(%rip)
77a1(5): call 0xffffa1ff(%rip)
77a6(3): mov %r13,%rdi
77a9(6): mov $0x0,(%rax)
77af(3): mov %rax,%r12
77b2(5): call 0xffffa45e(%rip)
77b7(3): test %rax,%rax
77ba(3): mov %rax,%rbp
77bd(6): jz 0x583(%rip)
77c3(5): test $0x20,0x48(%r15)
77c8(2): jnz 0xc(%rip)
77ca(4): cmp $0x2e,0x13(%rax)
77ce(6): jz 0x1e2(%rip)
77d4(4): lea 0x13(%rbp),%r13
77d8(3): mov %r13,%rdi
77db(5): call 0xffffa2a5(%rip)
77e0(3): mov %r13,%rsi
77e3(3): mov %rax,%rdx
77e6(3): mov %r15,%rdi
77e9(3): mov %rax,%r14
77ec(5): call 0xfffff534(%rip)
77f1(3): test %rax,%rax
77f4(3): mov %rax,%r13
77f7(6): jz 0x419(%rip)
77fd(5): cmp %r14,0x28(%rsp)
7802(6): jnbe 0xfffffeb6(%rip)
7808(4): mov 0x20(%r15),%rax
780c(4): lea 0x30(%r15),%rsi
7810(4): lea 0x20(%r15),%rdi
7814(5): mov %rax,0x28(%rsp)
7819(5): mov 0x48(%rsp),%rax
781e(5): lea 0x2(%rax,%r14,1),%rdx
7823(5): call 0xfffff88d(%rip)
7828(2): test %al,%al
782a(6): jz 0x3e6(%rip)
7830(4): mov 0x20(%r15),%rdx
7834(5): cmp 0x28(%rsp),%rdx
7839(6): jz 0x1e7(%rip)
783f(5): add 0x18(%rsp),%rdx
7844(5): test $0x4,0x48(%r15)
7849(6): cmove 0x40(%rsp),%rdx
784f(5): mov %rdx,0x40(%rsp)
7854(4): mov 0x30(%r15),%rcx
7858(5): sub 0x18(%rsp),%rcx
785d(4): mov %al,0x5d(%rsp)
7861(5): mov %rcx,0x28(%rsp)
7866(5): jmp 0xfffffe52(%rip)
786b(5): nop 0x0(%rax,%rax,1)
7870(5): cmp $0x0,0x40(%r15)
7875(6): jnz 0xffffff06(%rip)
787b(4): mov 0x64(%rsp),%esi
787f(5): mov 0x20(%rsp),%rdi
7884(5): call 0xfffff5bc(%rip)
7889(6): cmp $0x1021994,%rax
788f(6): jz 0x371(%rip)
7895(5): mov $0xff534d42,%ecx
789a(3): cmp %rcx,%rax
789d(6): jz 0x363(%rip)
78a3(6): cmp $0x6969,%rax
78a9(6): jz 0x357(%rip)
78af(4): add $0x1,%rbx
78b3(5): cmp 0x38(%rsp),%rbx
78b8(5): mov $0x1,0x5e(%rsp)
78bd(6): jb 0xfffffecd(%rip)
78c3(5): nop 0x0(%rax,%rax,1)
78c8(5): cmp $0x0,0x5d(%rsp)
78cd(5): mov 0x20(%rsp),%rbp
78d2(6): jz 0x3a4(%rip)
78d8(4): mov 0x8(%r15),%rax
78dc(4): mov 0x20(%r15),%rcx
78e0(3): test %rax,%rax
78e3(2): jz 0x2d(%rip)
78e5(3): nop (%rax)
78e8(4): mov 0x30(%rax),%rdx
78ec(7): lea 0x108(%rax),%rsi
78f3(3): cmp %rsi,%rdx
78f6(2): jz 0xd(%rip)
78f8(4): sub 0x38(%rax),%rdx
78fc(3): add %rcx,%rdx
78ff(4): mov %rdx,0x30(%rax)
7903(4): mov %rcx,0x38(%rax)
7907(4): mov 0x10(%rax),%rax
790b(3): test %rax,%rax
790e(2): jnz 0xffffffda(%rip)
7910(5): mov 0x10(%rsp),%rax
7915(2): jmp 0xe(%rip)
7917(9): nop 0x0(%rax,%rax,1)
7920(3): mov %rdx,%rax
7923(5): cmp $0x0,0x58(%rax)
7928(6): js 0x34e(%rip)
792e(4): mov 0x30(%rax),%rdx
7932(7): lea 0x108(%rax),%rsi
7939(3): cmp %rsi,%rdx
793c(2): jz 0xd(%rip)
793e(4): sub 0x38(%rax),%rdx
7942(3): add %rcx,%rdx
7945(4): mov %rdx,0x30(%rax)
7949(4): mov 0x10(%rax),%rdx
794d(4): mov %rcx,0x38(%rax)
7951(3): test %rdx,%rdx
7954(2): jnz 0xffffffcc(%rip)
7956(4): mov 0x8(%rax),%rdx
795a(2): jmp 0xffffffc6(%rip)
795c(4): nop 0x0(%rax)
7960(4): mov 0x38(%r13),%rax
7964(5): mov 0x40(%rsp),%rdi
7969(4): mov %rax,0x30(%r13)
796d(4): mov 0x60(%r13),%rax
7971(4): lea 0x1(%rax),%rdx
7975(5): call 0xffffa34b(%rip)
797a(4): mov 0x48(%r15),%eax
797e(5): jmp 0xfffffd7e(%rip)
7983(5): nop 0x0(%rax,%rax,1)
7988(5): mov %r13,0x10(%rsp)
798d(5): jmp 0xfffffde1(%rip)
7992(6): nop 0x0(%rax,%rax,1)
7998(b): mov $0x0,0x90(%r13)
79a3(5): mov $0x2,%eax
79a8(5): jmp 0xfffffda2(%rip)
79ad(3): nop (%rax)
79b0(4): cmp $0x0,0x14(%rax)
79b4(2): jz 0xd(%rip)
79b6(5): cmp $0x2e,0x14(%rax)
79bb(6): jnz 0xfffffe19(%rip)
79c1(5): mov 0x8(%rsp),%r13
79c6(5): jmp 0xfffffdc4(%rip)
79cb(5): nop 0x0(%rax,%rax,1)
79d0(6): and $0xfb,%esi
79d6(6): jz 0xfffffd4b(%rip)
79dc(5): mov $0xb,%eax
79e1(3): cmp $0xb,%edx
79e4(5): mov %ax,0x70(%r13)
79e9(6): jbe 0x58d(%rip)
79ef(b): mov $0x0,0x90(%r13)
79fa(5): mov $0x1,%eax
79ff(5): jmp 0xfffffd4b(%rip)
7a04(4): nop 0x0(%rax)
7a08(2): xor %edx,%edx
7a0a(3): mov %r13,%rsi
7a0d(3): mov %r15,%rdi
7a10(5): call 0xfffff030(%rip)
7a15(5): mov %ax,0x70(%r13)
7a1a(5): jmp 0xfffffd37(%rip)
7a1f(1): nop 
7a20(5): movzx 0x5d(%rsp),%eax
7a25(5): jmp 0xfffffe2f(%rip)
7a2a(6): nop 0x0(%rax,%rax,1)
7a30(3): mov 0x48(%rdi),%eax
7a33(2): mov %eax,%edx
7a35(3): and $0x10,%edx
7a38(2): jz 0xf(%rip)
7a3a(2): test $0x1,%al
7a3c(5): mov $0x20000,%edx
7a41(6): jnz 0x107(%rip)
7a47(5): and $0x204,%eax
7a4c(4): mov 0x30(%rbp),%rsi
7a50(5): mov $0xffffff9c,%edi
7a55(5): cmp $0x200,%eax
7a5a(2): jnz 0x6(%rip)
7a5c(4): mov 0x2c(%r15),%edi
7a60(5): lea 0x64(%rsp),%rcx
7a65(5): call 0x2a3b(%rip)
7a6a(3): test %rax,%rax
7a6d(4): mov %rax,0x18(%rbp)
7a71(6): jz 0x31f(%rip)
7a77(5): cmp $0xb,0x70(%rbp)
7a7c(6): jz 0x394(%rip)
7a82(4): mov 0x48(%r15),%edi
7a86(6): test $0x100,%edi
7a8c(6): jnz 0x124(%rip)
7a92(5): cmp $0x1,0x40(%r15)
7a97(3): sbb %rax,%rax
7a9a(5): and $0x186a1,%eax
7a9f(4): sub $0x1,%rax
7aa3(5): cmp $0x2,0x58(%rsp)
7aa8(5): mov %rax,0x38(%rsp)
7aad(6): jz 0x353(%rip)
7ab3(4): mov 0x48(%r15),%edx
7ab7(4): mov 0x64(%rsp),%eax
7abb(3): and $0x38,%edx
7abe(3): cmp $0x18,%edx
7ac1(6): jz 0x3a3(%rip)
7ac7(5): cmp $0x3,0x58(%rsp)
7acc(6): mov $0x1,%r12d
7ad2(3): setz %bl
7ad5(5): test $0x2,0x49(%r15)
7ada(6): jnz 0x3e2(%rip)
7ae0(2): test %eax,%eax
7ae2(6): jns 0x366(%rip)
7ae8(2): test %bl,%bl
7aea(2): jz 0x11(%rip)
7aec(3): test %r12b,%r12b
7aef(2): jz 0xc(%rip)
7af1(5): call 0xffff9eaf(%rip)
7af6(2): mov (%rax),%eax
7af8(3): mov %eax,0x40(%rbp)
7afb(5): or $0x1,0x72(%rbp)
7b00(4): mov 0x18(%rbp),%rdi
7b04(5): call 0xffffa05c(%rip)
7b09(4): mov 0x48(%r15),%edi
7b0d(8): mov $0x0,0x18(%rbp)
7b15(6): test $0x200,%edi
7b1b(2): jz 0x15(%rip)
7b1d(4): mov 0x64(%rsp),%eax
7b21(2): test %eax,%eax
7b23(2): js 0xd(%rip)
7b25(2): mov %eax,%edi
7b27(5): call 0xffffa029(%rip)
7b2c(4): mov 0x48(%r15),%edi
7b30(8): mov $0x0,0x18(%rbp)
7b38(5): mov $0x0,0x5f(%rsp)
7b3d(5): jmp 0xfffffaee(%rip)
7b42(6): nop 0x0(%rax,%rax,1)
7b48(2): xor %edx,%edx
7b4a(5): cmp $0x0,0x58(%rbp)
7b4f(3): setnz %dl
7b52(3): shl/sal $0x11,%edx
7b55(5): jmp 0xfffffef2(%rip)
7b5a(6): nop 0x0(%rax,%rax,1)
7b60(4): mov 0x18(%rbp),%rdi
7b64(5): call 0xffff9ffc(%rip)
7b69(5): cmp $0x3,0x58(%rsp)
7b6e(8): mov $0x0,0x18(%rbp)
7b76(6): jz 0x225(%rip)
7b7c(9): mov $0x0,0x10(%rsp)
7b85(5): mov 0x68(%rsp),%rbx
7b8a(9): xor $0x28,%rbx
7b93(5): mov 0x10(%rsp),%rax
7b98(6): jnz 0x3d9(%rip)
7b9e(4): add $0x78,%rsp
7ba2(1): pop %rbx
7ba3(1): pop %rbp
7ba4(2): pop %r12
7ba6(2): pop %r13
7ba8(2): pop %r14
7baa(2): pop %r15
7bac(1): ret near (%rsp)
7bad(3): nop (%rax)
7bb0(4): lea 0x58(%r15),%rbx
7bb4(3): mov %rbp,%rdx
7bb7(3): mov %rbx,%rsi
7bba(5): call 0xfffff946(%rip)
7bbf(2): xor %edx,%edx
7bc1(3): mov %rbp,%rsi
7bc4(3): mov %r15,%rdi
7bc7(5): call 0xffffee79(%rip)
7bcc(4): mov 0x48(%r15),%edi
7bd0(3): mov %rbp,%rdx
7bd3(3): mov %rbx,%rsi
7bd6(5): call 0xfffff87a(%rip)
7bdb(2): test %al,%al
7bdd(6): jnz 0xfffffeb5(%rip)
7be3(5): call 0xffff9dbd(%rip)
7be8(9): mov $0x0,0x10(%rsp)
7bf1(6): mov $0xc,(%rax)
7bf7(2): jmp 0xffffff8e(%rip)
7bf9(7): nop 0x0(%rax)
7c00(5): mov $0x0,0x5e(%rsp)
7c05(5): jmp 0xfffffb76(%rip)
7c0a(6): nop 0x0(%rax,%rax,1)
7c10(3): mov %r13,%rdi
7c13(5): mov 0x20(%rsp),%rbp
7c18(4): mov (%r12),%ebx
7c1c(5): call 0xffffa184(%rip)
7c21(5): mov 0x10(%rsp),%rdi
7c26(5): call 0xfffff18a(%rip)
7c2b(4): mov 0x18(%rbp),%rdi
7c2f(5): call 0xffff9f31(%rip)
7c34(6): mov $0x7,%r9d
7c3a(8): mov $0x0,0x18(%rbp)
7c42(9): mov $0x0,0x10(%rsp)
7c4b(5): mov %r9w,0x70(%rbp)
7c50(8): or $0x2000,0x48(%r15)
7c58(4): mov %ebx,(%r12)
7c5c(5): jmp 0xffffff29(%rip)
7c61(7): nop 0x0(%rax)
7c68(3): mov %rax,%rbp
7c6b(5): cmp $0x0,0x5d(%rsp)
7c70(6): jnz 0xfffffc68(%rip)
7c76(5): test $0x4,0x48(%r15)
7c7b(2): jz 0x20(%rip)
7c7d(5): mov 0x18(%rsp),%rax
7c82(4): cmp %rax,0x30(%r15)
7c86(2): jz 0x7(%rip)
7c88(3): test %rbx,%rbx
7c8b(2): jnz 0x8(%rip)
7c8d(6): sub $0x1,0x40(%rsp)
7c93(5): mov 0x40(%rsp),%rax
7c98(3): mov $0x0,(%rax)
7c9b(6): cmp $0x0,0x50(%rsp)
7ca1(2): jnz 0x6f(%rip)
7ca3(5): cmp $0x0,0x5f(%rsp)
7ca8(2): jz 0x68(%rip)
7caa(5): cmp $0x1,0x58(%rsp)
7caf(2): jz 0x41(%rip)
7cb1(3): test %rbx,%rbx
7cb4(2): jz 0x3c(%rip)
7cb6(5): cmp $0x0,0x5e(%rsp)
7cbb(6): jnz 0xfd(%rip)
7cc1(5): cmp $0x0,0x40(%r15)
7cc6(6): jz 0xfffffebf(%rip)
7ccc(4): cmp $0x1,%rbx
7cd0(6): jz 0xfffffeb5(%rip)
7cd6(5): mov 0x10(%rsp),%rsi
7cdb(3): mov %rbx,%rdx
7cde(3): mov %r15,%rdi
7ce1(5): call 0xffffef2f(%rip)
7ce6(5): mov %rax,0x10(%rsp)
7ceb(5): jmp 0xfffffe9a(%rip)
7cf0(5): cmp $0x0,0x58(%rbp)
7cf5(6): jnz 0x131(%rip)
7cfb(3): mov %r15,%rdi
7cfe(5): call 0xfffff352(%rip)
7d03(2): test %eax,%eax
7d05(3): setnz %al
7d08(2): test %al,%al
7d0a(6): jnz 0x189(%rip)
7d10(3): test %rbx,%rbx
7d13(2): jnz 0xffffffa3(%rip)
7d15(5): cmp $0x3,0x58(%rsp)
7d1a(6): jz 0x1be(%rip)
7d20(5): mov 0x10(%rsp),%rdi
7d25(5): call 0xfffff08b(%rip)
7d2a(9): mov $0x0,0x10(%rsp)
7d33(5): jmp 0xfffffe52(%rip)
7d38(8): nop 0x0(%rax,%rax,1)
7d40(4): mov (%r12),%eax
7d44(5): mov 0x20(%rsp),%rbp
7d49(2): test %eax,%eax
7d4b(2): jz 0x23(%rip)
7d4d(3): test %rbx,%rbx
7d50(3): mov %eax,0x40(%rbp)
7d53(6): jnz 0x136(%rip)
7d59(6): cmp $0x0,0x50(%rsp)
7d5f(5): mov $0x4,%eax
7d64(6): jnz 0x125(%rip)
7d6a(4): mov %ax,0x70(%rbp)
7d6e(4): mov 0x18(%rbp),%rdi
7d72(3): test %rdi,%rdi
7d75(6): jz 0xfffffef6(%rip)
7d7b(5): call 0xffff9de5(%rip)
7d80(8): mov $0x0,0x18(%rbp)
7d88(5): jmp 0xfffffee3(%rip)
7d8d(3): nop (%rax)
7d90(5): cmp $0x3,0x58(%rsp)
7d95(6): jnz 0xfffffde7(%rip)
7d9b(6): mov $0x4,%r10d
7da1(5): mov %r10w,0x70(%rbp)
7da6(5): call 0xffff9bfa(%rip)
7dab(2): mov (%rax),%eax
7dad(3): mov %eax,0x40(%rbp)
7db0(5): jmp 0xfffffdcc(%rip)
7db5(3): nop (%rax)
7db8(7): lea 0xffffec51(%rip),%rax
7dbf(5): mov 0x10(%rsp),%rsi
7dc4(3): mov %rbx,%rdx
7dc7(3): mov %r15,%rdi
7dca(4): mov %rax,0x40(%r15)
7dce(5): call 0xffffee42(%rip)
7dd3(8): mov $0x0,0x40(%r15)
7ddb(5): mov %rax,0x10(%rsp)
7de0(5): jmp 0xfffffda5(%rip)
7de5(3): nop (%rax)
7de8(9): mov $0x186a0,0x38(%rsp)
7df1(5): mov $0x1,0x5f(%rsp)
7df6(4): mov 0x48(%r15),%edi
7dfa(5): jmp 0xfffff831(%rip)
7dff(1): nop 
7e00(5): mov $0x0,0x5f(%rsp)
7e05(4): mov 0x48(%r15),%edi
7e09(5): jmp 0xfffff822(%rip)
7e0e(2): nop 
7e10(2): xor %edx,%edx
7e12(3): mov %rbp,%rsi
7e15(3): mov %r15,%rdi
7e18(5): call 0xffffec28(%rip)
7e1d(4): mov %ax,0x70(%rbp)
7e21(5): jmp 0xfffffc71(%rip)
7e26(4): mov 0x8(%rbp),%rsi
7e2a(7): lea 0x368d(%rip),%rcx
7e31(5): mov $0xffffffff,%edx
7e36(3): mov %r15,%rdi
7e39(5): call 0xfffff397(%rip)
7e3e(2): test %eax,%eax
7e40(3): setnz %al
7e43(5): jmp 0xfffffec5(%rip)
7e48(2): xor %ecx,%ecx
7e4a(2): mov %eax,%edx
7e4c(3): mov %rbp,%rsi
7e4f(3): mov %r15,%rdi
7e52(5): call 0xfffff37e(%rip)
7e57(2): test %eax,%eax
7e59(6): jnz 0xfffffc8f(%rip)
7e5f(5): jmp 0xfffff7c3(%rip)
7e64(8): cmp $0x2,0x88(%rbp)
7e6c(6): jnz 0xfffffc5b(%rip)
7e72(2): mov %eax,%esi
7e74(3): mov %rbp,%rdi
7e77(5): call 0xfffff0f9(%rip)
7e7c(2): test %eax,%eax
7e7e(2): jnz 0x80(%rip)
7e80(4): mov 0x64(%rsp),%eax
7e84(5): jmp 0xfffffc43(%rip)
7e89(5): mov $0x7,%eax
7e8e(5): jmp 0xfffffedc(%rip)
7e93(5): mov $0x7,%edi
7e98(4): mov %di,0x70(%rbp)
7e9c(8): or $0x2000,0x48(%r15)
7ea4(5): mov 0x10(%rsp),%rdi
7ea9(5): call 0xffffef07(%rip)
7eae(9): mov $0x0,0x10(%rsp)
7eb7(5): jmp 0xfffffcce(%rip)
7ebc(2): mov %eax,%edi
7ebe(5): mov $0x3,%edx
7ec3(5): mov $0x406,%esi
7ec8(2): xor %eax,%eax
7eca(5): call 0x2716(%rip)
7ecf(4): mov %eax,0x64(%rsp)
7ed3(5): jmp 0xfffffc0d(%rip)
7ed8(4): movzx 0x70(%rbp),%eax
7edc(4): cmp $0x7,%ax
7ee0(6): jz 0xfffffe40(%rip)
7ee6(4): cmp $0x4,%ax
7eea(6): jz 0xfffffe36(%rip)
7ef0(5): mov $0x6,%esi
7ef5(4): mov %si,0x70(%rbp)
7ef9(5): jmp 0xfffffe27(%rip)
7efe(5): cmp $0x3,0x58(%rsp)
7f03(6): jnz 0xfffffefd(%rip)
7f09(4): mov 0x64(%rsp),%eax
7f0d(3): xor %r12d,%r12d
7f10(5): mov $0x1,%ebx
7f15(5): jmp 0xfffffbc0(%rip)
7f1a(6): nop 0x0(%rax,%rax,1)
7f20(3): mov %r13,%rdi
7f23(5): mov 0x20(%rsp),%rbp
7f28(5): call 0xffff9e78(%rip)
7f2d(5): mov 0x10(%rsp),%rdi
7f32(5): call 0xffffee7e(%rip)
7f37(4): mov 0x18(%rbp),%rdi
7f3b(5): call 0xffff9c25(%rip)
7f40(6): mov $0x7,%r8d
7f46(8): mov $0x0,0x18(%rbp)
7f4e(9): mov $0x0,0x10(%rsp)
7f57(5): mov %r8w,0x70(%rbp)
7f5c(8): or $0x2000,0x48(%r15)
7f64(8): mov $0x24,(%r12)
7f6c(5): jmp 0xfffffc19(%rip)
7f71(5): call 0xffff9b3f(%rip)
7f76(7): lea 0x4263(%rip),%rax
7f7d(3): mov 0x0(%rax,%rdx,4),%eax
7f80(7): mov %eax,0x90(%r13)
7f87(5): mov $0x1,%eax
7f8c(5): jmp 0xfffff7be(%rip)

"rpl_fts_open" :
7fa0(2): push %r15
7fa2(2): push %r14
7fa4(2): push %r13
7fa6(2): push %r12
7fa8(1): push %rbp
7fa9(1): push %rbx
7faa(4): sub $0x28,%rsp
7fae(6): test $0xfffff000,%esi
7fb4(6): jnz 0x384(%rip)
7fba(2): mov %esi,%eax
7fbc(2): mov %esi,%ebp
7fbe(5): and $0x204,%eax
7fc3(5): cmp $0x204,%eax
7fc8(6): jz 0x370(%rip)
7fce(4): test $0x12,%sil
7fd2(6): jz 0x366(%rip)
7fd8(3): mov %rdi,%r13
7fdb(5): mov $0x1,%esi
7fe0(5): mov $0x80,%edi
7fe5(3): mov %rdx,%r14
7fe8(5): call 0xffff9ba8(%rip)
7fed(3): test %rax,%rax
7ff0(3): mov %rax,%rbx
7ff3(6): jz 0x25b(%rip)
7ff9(4): test $0x2,%bpl
7ffd(4): mov %r14,0x40(%rax)
8001(6): jnz 0x25f(%rip)
8007(4): mov 0x0(%r13),%rdi
800b(3): mov %ebp,0x48(%rax)
800e(7): mov $0xffffff9c,0x2c(%rbx)
8015(3): test %rdi,%rdi
8018(6): jz 0x267(%rip)
801e(3): mov %r13,%r15
8021(3): xor %r12d,%r12d
8024(4): nop 0x0(%rax)
8028(5): call 0xffff9a58(%rip)
802d(3): cmp %rax,%r12
8030(4): cmovnae %rax,%r12
8034(4): add $0x8,%r15
8038(3): mov (%r15),%rdi
803b(3): test %rdi,%rdi
803e(2): jnz 0xffffffea(%rip)
8040(5): lea 0x1(%r12),%rdx
8045(5): mov $0x1000,%eax
804a(7): cmp $0x1000,%rdx
8051(4): cmovnae %rax,%rdx
8055(4): lea 0x30(%rbx),%rsi
8059(4): lea 0x20(%rbx),%rdi
805d(5): call 0xfffff053(%rip)
8062(2): test %al,%al
8064(4): mov %al,0x16(%rsp)
8068(6): jz 0x2a1(%rip)
806e(4): mov 0x0(%r13),%rsi
8072(3): test %rsi,%rsi
8075(6): jz 0x2ab(%rip)
807b(7): lea 0x3e1f(%rip),%rsi
8082(2): xor %edx,%edx
8084(3): mov %rbx,%rdi
8087(5): call 0xffffec99(%rip)
808c(3): test %rax,%rax
808f(3): mov %rax,%r15
8092(6): jz 0x26e(%rip)
8098(7): mov $0xffffffff,%rax
809f(3): test %r14,%r14
80a2(4): mov 0x0(%r13),%rsi
80a6(4): mov %rax,0x58(%r15)
80aa(4): mov %rax,0x68(%r15)
80ae(2): jz 0xf(%rip)
80b0(3): mov 0x48(%rbx),%eax
80b3(3): shr $0xa,%eax
80b6(3): and $0x1,%eax
80b9(4): mov %al,0x16(%rsp)
80bd(3): test %rsi,%rsi
80c0(6): jz 0x26c(%rip)
80c6(3): shr $0xb,%ebp
80c9(9): mov $0x0,0x18(%rsp)
80d2(3): xor %r12d,%r12d
80d5(3): xor $0x1,%ebp
80d8(2): mov %ebp,%eax
80da(2): xor %ebp,%ebp
80dc(3): and $0x1,%eax
80df(4): mov %al,0x17(%rsp)
80e3(2): jmp 0x79(%rip)
80e5(3): nop (%rax)
80e8(3): mov %rax,%rdx
80eb(3): mov %rbx,%rdi
80ee(5): call 0xffffec32(%rip)
80f3(3): test %rax,%rax
80f6(3): mov %rax,%rcx
80f9(6): jz 0x1f7(%rip)
80ff(8): mov $0x0,0x58(%rax)
8107(4): mov %r15,0x8(%rax)
810b(7): lea 0x108(%rax),%rax
8112(3): test %r12,%r12
8115(4): mov %rax,0x30(%rcx)
8119(6): jz 0x177(%rip)
811f(5): cmp $0x0,0x16(%rsp)
8124(6): jz 0x16c(%rip)
812a(5): mov $0xb,%esi
812f(3): test %r14,%r14
8132(b): mov $0x2,0xa8(%rcx)
813d(4): mov %si,0x70(%rcx)
8141(6): jz 0x18f(%rip)
8147(4): mov %r12,0x10(%rcx)
814b(3): mov %rcx,%r12
814e(4): add $0x1,%rbp
8152(5): mov 0x0(%r13,%rbp,8),%rsi
8157(3): test %rsi,%rsi
815a(2): jz 0x56(%rip)
815c(3): mov %rsi,%rdi
815f(5): mov %rsi,0x8(%rsp)
8164(5): call 0xffff991c(%rip)
8169(4): cmp $0x2,%rax
816d(5): mov 0x8(%rsp),%rsi
8172(6): jbe 0xffffff76(%rip)
8178(5): cmp $0x0,0x17(%rsp)
817d(6): jz 0xffffff6b(%rip)
8183(5): cmp $0x2f,0xffffffff(%rsi,%rax,1)
8188(6): jnz 0xffffff60(%rip)
818e(2): nop 
8190(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
8195(6): jnz 0xffffff53(%rip)
819b(4): sub $0x1,%rax
819f(4): cmp $0x1,%rax
81a3(2): jnz 0xffffffed(%rip)
81a5(5): jmp 0xffffff43(%rip)
81aa(6): nop 0x0(%rax,%rax,1)
81b0(3): test %r14,%r14
81b3(2): jz 0x19(%rip)
81b5(4): cmp $0x1,%rbp
81b9(2): jbe 0x13(%rip)
81bb(3): mov %r12,%rsi
81be(3): mov %rbp,%rdx
81c1(3): mov %rbx,%rdi
81c4(5): call 0xffffea4c(%rip)
81c9(3): mov %rax,%r12
81cc(7): lea 0x3cce(%rip),%rsi
81d3(2): xor %edx,%edx
81d5(3): mov %rbx,%rdi
81d8(5): call 0xffffeb48(%rip)
81dd(3): test %rax,%rax
81e0(3): mov %rax,(%rbx)
81e3(6): jz 0x10d(%rip)
81e9(3): mov 0x48(%rbx),%edi
81ec(5): mov $0x9,%edx
81f1(4): lea 0x58(%rbx),%rsi
81f5(4): mov %r12,0x10(%rax)
81f9(4): mov %dx,0x70(%rax)
81fd(8): mov $0x1,0x58(%rax)
8205(5): call 0xffffef1b(%rip)
820a(2): test %al,%al
820c(6): jz 0xe4(%rip)
8212(3): mov 0x48(%rbx),%esi
8215(6): test $0x204,%esi
821b(2): jnz 0x25(%rip)
821d(3): mov 0x2c(%rbx),%edi
8220(7): lea 0x3298(%rip),%rdx
8227(5): call 0xffffef69(%rip)
822c(2): test %eax,%eax
822e(3): mov %eax,0x28(%rbx)
8231(2): jns 0xf(%rip)
8233(4): or $0x4,0x48(%rbx)
8237(9): nop 0x0(%rax,%rax,1)
8240(4): lea 0x60(%rbx),%rdi
8244(5): mov $0xffffffff,%esi
8249(5): call 0x20f7(%rip)
824e(4): add $0x28,%rsp
8252(3): mov %rbx,%rax
8255(1): pop %rbx
8256(1): pop %rbp
8257(2): pop %r12
8259(2): pop %r13
825b(2): pop %r14
825d(2): pop %r15
825f(1): ret near (%rsp)
8260(4): mov 0x0(%r13),%rdi
8264(2): mov %ebp,%eax
8266(7): mov $0xffffff9c,0x2c(%rbx)
826d(3): and $0xfd,%ah
8270(3): or $0x4,%eax
8273(3): test %rdi,%rdi
8276(3): mov %eax,0x48(%rbx)
8279(6): jnz 0xfffffda5(%rip)
827f(5): mov $0x1000,%edx
8284(5): jmp 0xfffffdd1(%rip)
8289(7): nop 0x0(%rax)
8290(2): xor %edx,%edx
8292(3): mov %rcx,%rsi
8295(3): mov %rbx,%rdi
8298(5): mov %rcx,0x8(%rsp)
829d(5): call 0xffffe7a3(%rip)
82a2(5): mov 0x8(%rsp),%rcx
82a7(3): test %r14,%r14
82aa(4): mov %ax,0x70(%rcx)
82ae(6): jnz 0xfffffe99(%rip)
82b4(3): test %r12,%r12
82b7(8): mov $0x0,0x10(%rcx)
82bf(2): jnz 0x19(%rip)
82c1(5): mov %rcx,0x18(%rsp)
82c6(3): mov %rcx,%r12
82c9(5): jmp 0xfffffe85(%rip)
82ce(2): nop 
82d0(8): mov $0x0,0x10(%rcx)
82d8(5): mov 0x18(%rsp),%rax
82dd(5): mov %rcx,0x18(%rsp)
82e2(4): mov %rcx,0x10(%rax)
82e6(5): jmp 0xfffffe68(%rip)
82eb(5): nop 0x0(%rax,%rax,1)
82f0(3): mov %r12,%rdi
82f3(5): call 0xffffeabd(%rip)
82f8(3): mov %r15,%rdi
82fb(5): call 0xffff9aa5(%rip)
8300(4): mov 0x20(%rbx),%rdi
8304(5): call 0xffff9a9c(%rip)
8309(3): mov %rbx,%rdi
830c(2): xor %ebx,%ebx
830e(5): call 0xffff9a92(%rip)
8313(5): jmp 0xffffff3b(%rip)
8318(8): nop 0x0(%rax,%rax,1)
8320(3): xor %r15d,%r15d
8323(3): test %r14,%r14
8326(6): jnz 0xfffffd8a(%rip)
832c(3): xor %r12d,%r12d
832f(5): jmp 0xfffffe9d(%rip)
8334(4): nop 0x0(%rax)
8338(5): call 0xffff9668(%rip)
833d(2): xor %ebx,%ebx
833f(6): mov $0x16,(%rax)
8345(5): jmp 0xffffff09(%rip)

"rpl_fts_close" :
8350(2): push %r12
8352(1): push %rbp
8353(3): mov %rdi,%rbp
8356(1): push %rbx
8357(3): mov (%rdi),%rdi
835a(3): test %rdi,%rdi
835d(2): jz 0x46(%rip)
835f(5): cmp $0x0,0x58(%rdi)
8364(2): jns 0x1b(%rip)
8366(5): jmp 0x11a(%rip)
836b(5): nop 0x0(%rax,%rax,1)
8370(5): call 0xffff9a30(%rip)
8375(5): cmp $0x0,0x58(%rbx)
837a(3): mov %rbx,%rdi
837d(2): js 0x1e(%rip)
837f(4): mov 0x10(%rdi),%rbx
8383(3): test %rbx,%rbx
8386(2): jnz 0xffffffea(%rip)
8388(4): mov 0x8(%rdi),%rbx
838c(5): call 0xffff9a14(%rip)
8391(5): cmp $0x0,0x58(%rbx)
8396(3): mov %rbx,%rdi
8399(2): jns 0xffffffe6(%rip)
839b(3): mov %rbx,%rdi
839e(5): call 0xffff9a02(%rip)
83a3(4): mov 0x8(%rbp),%rdi
83a7(3): test %rdi,%rdi
83aa(2): jz 0x7(%rip)
83ac(5): call 0xffffea04(%rip)
83b1(4): mov 0x10(%rbp),%rdi
83b5(5): call 0xffff99eb(%rip)
83ba(4): mov 0x20(%rbp),%rdi
83be(5): call 0xffff99e2(%rip)
83c3(3): mov 0x48(%rbp),%eax
83c6(3): test $0x2,%ah
83c9(2): jz 0x67(%rip)
83cb(3): mov 0x2c(%rbp),%edi
83ce(2): test %edi,%edi
83d0(6): jns 0x90(%rip)
83d6(2): xor %ebx,%ebx
83d8(4): lea 0x60(%rbp),%rdi
83dc(5): call 0xffffea24(%rip)
83e1(4): mov 0x50(%rbp),%rdi
83e5(3): test %rdi,%rdi
83e8(2): jz 0x7(%rip)
83ea(5): call 0x1736(%rip)
83ef(7): test $0x102,0x48(%rbp)
83f6(4): mov 0x58(%rbp),%rdi
83fa(2): jz 0x26(%rip)
83fc(3): test %rdi,%rdi
83ff(2): jz 0x7(%rip)
8401(5): call 0x171f(%rip)
8406(3): mov %rbp,%rdi
8409(5): call 0xffff9997(%rip)
840e(2): test %ebx,%ebx
8410(6): jnz 0xb1(%rip)
8416(2): mov %ebx,%eax
8418(1): pop %rbx
8419(1): pop %rbp
841a(2): pop %r12
841c(1): ret near (%rsp)
841d(3): nop (%rax)
8420(5): call 0xffff9980(%rip)
8425(2): jmp 0xffffffe1(%rip)
8427(9): nop 0x0(%rax,%rax,1)
8430(2): test $0x4,%al
8432(2): jnz 0xffffffa4(%rip)
8434(3): mov 0x28(%rbp),%edi
8437(5): call 0xffff9839(%rip)
843c(2): test %eax,%eax
843e(2): jnz 0x52(%rip)
8440(3): mov 0x28(%rbp),%edi
8443(5): call 0xffff970d(%rip)
8448(2): test %eax,%eax
844a(2): jz 0xffffff8c(%rip)
844c(5): call 0xffff9554(%rip)
8451(3): mov %rax,%r12
8454(2): jmp 0x64(%rip)
8456(a): nop 0x0(%rax,%rax,1)
8460(5): call 0xffff96f0(%rip)
8465(2): test %eax,%eax
8467(6): jz 0xffffff6f(%rip)
846d(5): call 0xffff9533(%rip)
8472(2): mov (%rax),%ebx
8474(5): jmp 0xffffff64(%rip)
8479(7): nop 0x0(%rax)
8480(3): mov %rdi,%rbx
8483(3): mov %rbx,%rdi
8486(5): call 0xffff991a(%rip)
848b(5): jmp 0xffffff18(%rip)
8490(5): call 0xffff9510(%rip)
8495(3): mov 0x28(%rbp),%edi
8498(3): mov %rax,%r12
849b(2): mov (%rax),%ebx
849d(5): call 0xffff96b3(%rip)
84a2(2): test %eax,%eax
84a4(6): jz 0xffffff34(%rip)
84aa(2): test %ebx,%ebx
84ac(6): jnz 0xffffff2c(%rip)
84b2(6): nop 0x0(%rax,%rax,1)
84b8(4): mov (%r12),%ebx
84bc(5): jmp 0xffffff1c(%rip)
84c1(5): call 0xffff94df(%rip)
84c6(2): mov %ebx,(%rax)
84c8(5): mov $0xffffffff,%ebx
84cd(5): jmp 0xffffff49(%rip)

"rpl_fts_read" :
84e0(2): push %r14
84e2(2): push %r13
84e4(2): push %r12
84e6(1): push %rbp
84e7(1): push %rbx
84e8(3): mov (%rdi),%rbp
84eb(3): test %rbp,%rbp
84ee(6): jz 0x110(%rip)
84f4(3): mov 0x48(%rdi),%edx
84f7(3): test $0x20,%dh
84fa(6): jnz 0x104(%rip)
8500(4): movzx 0x74(%rbp),%eax
8504(5): mov $0x3,%ebx
8509(3): mov %rdi,%r12
850c(4): mov %bx,0x74(%rbp)
8510(4): cmp $0x1,%ax
8514(6): jz 0x24c(%rip)
851a(4): cmp $0x2,%ax
851e(4): movzx 0x70(%rbp),%ecx
8522(6): jz 0xee(%rip)
8528(4): cmp $0x1,%cx
852c(2): jnz 0x34(%rip)
852e(5): jmp 0x222(%rip)
8533(5): nop 0x0(%rax,%rax,1)
8538(4): mov %rbx,(%r12)
853c(3): mov %rbp,%rdi
853f(5): call 0xffff9861(%rip)
8544(5): cmp $0x0,0x58(%rbx)
8549(6): jz 0x237(%rip)
854f(4): movzx 0x74(%rbx),%eax
8553(3): mov %rbx,%rbp
8556(4): cmp $0x4,%ax
855a(6): jnz 0x32e(%rip)
8560(4): mov 0x10(%rbp),%rbx
8564(3): test %rbx,%rbx
8567(2): jnz 0xffffffd1(%rip)
8569(4): mov 0x8(%rbp),%rbx
856d(5): cmp $0x0,0x18(%rbx)
8572(6): jnz 0x56e(%rip)
8578(4): mov %rbx,(%r12)
857c(3): mov %rbp,%rdi
857f(5): call 0xffff9821(%rip)
8584(5): cmp $0xffffffff,0x58(%rbx)
8589(6): jz 0x4b9(%rip)
858f(5): cmp $0xb,0x70(%rbx)
8594(6): jz 0x13b(%rip)
859a(5): mov 0x20(%r12),%rdx
859f(4): mov 0x48(%rbx),%rax
85a3(4): mov $0x0,0x0(%rdx,%rax,1)
85a7(5): cmp $0x0,0x58(%rbx)
85ac(6): jz 0x3c4(%rip)
85b2(4): movzx 0x72(%rbx),%eax
85b6(2): test $0x2,%al
85b8(6): jz 0x370(%rip)
85be(5): mov 0x48(%r12),%eax
85c3(3): mov 0x44(%rbx),%edi
85c6(2): test $0x4,%al
85c8(6): jz 0x404(%rip)
85ce(5): call 0xffff9582(%rip)
85d3(5): mov 0x48(%r12),%edi
85d8(5): cmp $0x2,0x70(%rbx)
85dd(2): jz 0x16(%rip)
85df(3): mov 0x40(%rbx),%ecx
85e2(2): test %ecx,%ecx
85e4(6): jz 0x3a4(%rip)
85ea(5): mov $0x7,%edx
85ef(4): mov %dx,0x70(%rbx)
85f3(6): and $0x2000,%edi
85f9(3): mov %rbx,%rbp
85fc(2): jz 0x7e(%rip)
85fe(2): xor %ebp,%ebp
8600(1): pop %rbx
8601(3): mov %rbp,%rax
8604(1): pop %rbp
8605(2): pop %r12
8607(2): pop %r13
8609(2): pop %r14
860b(1): ret near (%rsp)
860c(4): nop 0x0(%rax)
8610(3): lea 0xfffffff4(%rcx),%eax
8613(4): cmp $0x1,%ax
8617(2): jbe 0x79(%rip)
8619(4): cmp $0x1,%cx
861d(6): jnz 0xffffff43(%rip)
8623(3): test $0x40,%dl
8626(6): jz 0xb2(%rip)
862c(5): mov 0x18(%r12),%rax
8631(4): cmp %rax,0x78(%rbp)
8635(6): jz 0xa3(%rip)
863b(4): test $0x2,0x72(%rbp)
863f(6): jnz 0x4e1(%rip)
8645(5): mov 0x8(%r12),%rdi
864a(3): test %rdi,%rdi
864d(2): jz 0x10(%rip)
864f(5): call 0xffffe761(%rip)
8654(9): mov $0x0,0x8(%r12)
865d(5): mov 0x48(%r12),%edi
8662(6): mov $0x6,%r10d
8668(5): lea 0x58(%r12),%rsi
866d(5): mov %r10w,0x70(%rbp)
8672(3): mov %rbp,%rdx
8675(5): call 0xffffee8b(%rip)
867a(1): pop %rbx
867b(3): mov %rbp,%rax
867e(1): pop %rbp
867f(2): pop %r12
8681(2): pop %r13
8683(2): pop %r14
8685(1): ret near (%rsp)
8686(a): nop 0x0(%rax,%rax,1)
8690(5): mov $0x1,%edx
8695(3): mov %rbp,%rsi
8698(5): call 0xffffe3a8(%rip)
869d(4): cmp $0x1,%ax
86a1(4): mov %ax,0x70(%rbp)
86a5(6): jz 0x347(%rip)
86ab(4): cmp $0xb,%ax
86af(4): mov %rbp,(%r12)
86b3(2): jnz 0xffffffc7(%rip)
86b5(3): nop (%rax)
86b8(7): mov 0xa8(%rbp),%rax
86bf(4): cmp $0x2,%rax
86c3(6): jz 0x3a5(%rip)
86c9(4): cmp $0x1,%rax
86cd(2): jz 0xffffffad(%rip)
86cf(5): call 0xffff92c1(%rip)
86d4(4): nop 0x0(%rax)
86d8(5): mov 0x8(%r12),%rdi
86dd(3): test %rdi,%rdi
86e0(6): jz 0x218(%rip)
86e6(3): test $0x10,%dh
86e9(6): jnz 0x1f9(%rip)
86ef(4): mov 0x30(%rbp),%rcx
86f3(5): mov $0xffffffff,%edx
86f8(3): mov %rbp,%rsi
86fb(3): mov %r12,%rdi
86fe(5): call 0xffffead2(%rip)
8703(2): test %eax,%eax
8705(6): jz 0x2bd(%rip)
870b(5): call 0xffff9295(%rip)
8710(2): mov (%rax),%eax
8712(5): or $0x1,0x72(%rbp)
8717(3): mov %eax,0x40(%rbp)
871a(5): mov 0x8(%r12),%rbp
871f(3): test %rbp,%rbp
8722(6): jz 0x1f4(%rip)
8728(3): mov %rbp,%rax
872b(5): nop 0x0(%rax,%rax,1)
8730(4): mov 0x8(%rax),%rdx
8734(4): mov 0x30(%rdx),%rdx
8738(4): mov %rdx,0x30(%rax)
873c(4): mov 0x10(%rax),%rax
8740(3): test %rax,%rax
8743(2): jnz 0xffffffed(%rip)
8745(5): jmp 0x1d1(%rip)
874a(6): nop 0x0(%rax,%rax,1)
8750(4): cmp $0x4,%ax
8754(6): jnz 0xfffffecf(%rip)
875a(5): jmp 0xfffffee1(%rip)
875f(1): nop 
8760(3): mov %rbp,%rsi
8763(2): xor %edx,%edx
8765(5): call 0xffffe2db(%rip)
876a(4): mov %ax,0x70(%rbp)
876e(3): mov %rbp,%rax
8771(1): pop %rbx
8772(1): pop %rbp
8773(2): pop %r12
8775(2): pop %r13
8777(2): pop %r14
8779(1): ret near (%rsp)
877a(6): nop 0x0(%rax,%rax,1)
8780(3): mov %r12,%rdi
8783(5): call 0xffffe8cd(%rip)
8788(2): test %eax,%eax
878a(6): jnz 0x407(%rip)
8790(9): test $0x102,0x48(%r12)
8799(5): mov 0x58(%r12),%rdi
879e(6): jz 0x13a(%rip)
87a4(3): test %rdi,%rdi
87a7(2): jz 0x7(%rip)
87a9(5): call 0x1377(%rip)
87ae(4): mov 0x60(%rbx),%rdx
87b2(7): lea 0x108(%rbx),%rbp
87b9(5): mov 0x20(%r12),%rdi
87be(3): mov %rbp,%rsi
87c1(4): mov %rdx,0x48(%rbx)
87c5(4): add $0x1,%rdx
87c9(5): call 0xffff94f7(%rip)
87ce(5): mov $0x2f,%esi
87d3(3): mov %rbp,%rdi
87d6(5): call 0xffff932a(%rip)
87db(3): test %rax,%rax
87de(2): jz 0x2d(%rip)
87e0(3): cmp %rax,%rbp
87e3(6): jz 0x1cd(%rip)
87e9(4): lea 0x1(%rax),%r13
87ed(3): mov %r13,%rdi
87f0(5): call 0xffff9290(%rip)
87f5(4): lea 0x1(%rax),%rdx
87f9(3): mov %rax,%r14
87fc(3): mov %r13,%rsi
87ff(3): mov %rbp,%rdi
8802(5): call 0xffff94be(%rip)
8807(4): mov %r14,0x60(%rbx)
880b(5): mov 0x20(%r12),%rax
8810(5): mov 0x48(%r12),%edi
8815(5): lea 0x58(%r12),%rsi
881a(3): mov %rbx,%rbp
881d(4): mov %rax,0x38(%rbx)
8821(4): mov %rax,0x30(%rbx)
8825(5): call 0xffffe8fb(%rip)
882a(4): movzx 0x70(%rbx),%eax
882e(4): cmp $0xb,%ax
8832(4): mov %rbp,(%r12)
8836(6): jz 0xfffffe82(%rip)
883c(4): cmp $0x1,%ax
8840(6): jnz 0xfffffe3a(%rip)
8846(5): cmp $0x0,0x58(%rbp)
884b(2): jnz 0xb(%rip)
884d(4): mov 0x78(%rbp),%rax
8851(5): mov %rax,0x18(%r12)
8856(5): mov 0x48(%r12),%edi
885b(5): lea 0x58(%r12),%rsi
8860(3): mov %rbp,%rdx
8863(5): call 0xffffebed(%rip)
8868(2): test %al,%al
886a(6): jnz 0xfffffe10(%rip)
8870(5): call 0xffff9130(%rip)
8875(2): xor %ebp,%ebp
8877(6): mov $0xc,(%rax)
887d(5): jmp 0xfffffdfd(%rip)
8882(6): nop 0x0(%rax,%rax,1)
8888(4): cmp $0x2,%ax
888c(6): jz 0x2a1(%rip)
8892(4): mov 0x8(%rbp),%rax
8896(7): lea 0x108(%rbp),%rsi
889d(4): mov 0x48(%rax),%rdi
88a1(4): mov 0x38(%rax),%rax
88a5(5): cmp $0x2f,0xffffffff(%rax,%rdi,1)
88aa(4): lea 0xffffffff(%rdi),%rdx
88ae(4): cmove %rdx,%rdi
88b2(5): add 0x20(%r12),%rdi
88b7(3): mov $0x2f,(%rdi)
88ba(4): mov 0x60(%rbp),%rax
88be(4): add $0x1,%rdi
88c2(4): lea 0x1(%rax),%rdx
88c6(5): call 0xffff93fa(%rip)
88cb(4): movzx 0x70(%rbp),%eax
88cf(5): jmp 0xffffff5f(%rip)
88d4(4): nop 0x0(%rax)
88d8(5): call 0xffff94c8(%rip)
88dd(5): jmp 0xfffffed1(%rip)
88e2(3): and $0xef,%dh
88e5(5): mov %edx,0x48(%r12)
88ea(5): call 0xffffe4c6(%rip)
88ef(9): mov $0x0,0x8(%r12)
88f8(5): mov $0x3,%esi
88fd(3): mov %r12,%rdi
8900(5): call 0xffffecc0(%rip)
8905(3): test %rax,%rax
8908(5): mov %rax,0x8(%r12)
890d(6): jz 0xf7(%rip)
8913(3): mov %rax,%rbp
8916(9): mov $0x0,0x8(%r12)
891f(5): jmp 0xffffff73(%rip)
8924(4): nop 0x0(%rax)
8928(2): test $0x1,%al
892a(6): jnz 0xfffffca9(%rip)
8930(4): mov 0x8(%rbx),%rsi
8934(7): lea 0x2b83(%rip),%rcx
893b(5): mov $0xffffffff,%edx
8940(3): mov %r12,%rdi
8943(5): call 0xffffe88d(%rip)
8948(2): test %eax,%eax
894a(6): jz 0xfffffc89(%rip)
8950(5): call 0xffff9050(%rip)
8955(5): mov 0x48(%r12),%edi
895a(2): mov (%rax),%eax
895c(6): or $0x2000,%edi
8962(3): mov %eax,0x40(%rbx)
8965(5): mov %edi,0x48(%r12)
896a(5): jmp 0xfffffc6e(%rip)
896f(1): nop 
8970(3): mov %r12,%rdi
8973(5): call 0xffffe6dd(%rip)
8978(2): test %eax,%eax
897a(2): jnz 0xffffffd6(%rip)
897c(5): jmp 0xfffffc57(%rip)
8981(7): nop 0x0(%rax)
8988(5): mov $0x6,%eax
898d(5): lea 0x58(%r12),%rsi
8992(3): mov %rbx,%rdx
8995(4): mov %ax,0x70(%rbx)
8999(5): call 0xffffeb67(%rip)
899e(5): mov 0x48(%r12),%edi
89a3(5): jmp 0xfffffc50(%rip)
89a8(8): nop 0x0(%rax,%rax,1)
89b0(7): cmp $0x0,0x109(%rbx)
89b7(6): jnz 0xfffffe32(%rip)
89bd(5): jmp 0xfffffe4e(%rip)
89c2(5): mov 0x8(%r12),%rbp
89c7(5): jmp 0xffffff4f(%rip)
89cc(3): test $0x2,%ah
89cf(6): jz 0x19e(%rip)
89d5(2): mov %edi,%esi
89d7(5): mov $0x1,%edx
89dc(3): mov %r12,%rdi
89df(5): call 0xffffe601(%rip)
89e4(3): mov 0x44(%rbx),%edi
89e7(5): jmp 0xfffffbe7(%rip)
89ec(5): mov 0x48(%r12),%esi
89f1(4): test $0x4,%sil
89f5(6): jz 0x207(%rip)
89fb(4): mov %rbp,(%r12)
89ff(5): jmp 0xfffffe47(%rip)
8a04(5): mov 0x48(%r12),%edi
8a09(6): test $0x2000,%edi
8a0f(6): jnz 0xfffffbef(%rip)
8a15(4): mov 0x40(%rbp),%r9d
8a19(3): test %r9d,%r9d
8a1c(2): jz 0x14(%rip)
8a1e(5): cmp $0x4,0x70(%rbp)
8a23(2): jz 0xd(%rip)
8a25(6): mov $0x7,%r8d
8a2b(5): mov %r8w,0x70(%rbp)
8a30(5): lea 0x58(%r12),%rsi
8a35(3): mov %rbp,%rdx
8a38(5): call 0xffffeac8(%rip)
8a3d(5): jmp 0xfffffc3d(%rip)
8a42(3): mov %rbx,%rdi
8a45(2): xor %ebp,%ebp
8a47(5): call 0xffff9359(%rip)
8a4c(5): call 0xffff8f54(%rip)
8a51(6): mov $0x0,(%rax)
8a57(8): mov $0x0,(%r12)
8a5f(5): jmp 0xfffffc1b(%rip)
8a64(4): nop 0x0(%rax)
8a68(4): mov 0x8(%rbp),%rbx
8a6c(5): cmp $0x0,0x68(%rbx)
8a71(2): jnz 0x13(%rip)
8a73(5): mov 0x48(%r12),%eax
8a78(3): and $0x18,%eax
8a7b(3): cmp $0x18,%eax
8a7e(6): jz 0x15f(%rip)
8a84(2): xor %edx,%edx
8a86(3): mov %rbp,%rsi
8a89(3): mov %r12,%rdi
8a8c(5): call 0xffffdfb4(%rip)
8a91(6): mov 0x90(%rbp),%edx
8a97(4): mov %ax,0x70(%rbp)
8a9b(6): and $0xf000,%edx
8aa1(6): cmp $0x4000,%edx
8aa7(6): jnz 0xfffffd95(%rip)
8aad(5): cmp $0x0,0x58(%rbp)
8ab2(6): jz 0x11c(%rip)
8ab8(4): mov 0x68(%rbx),%rcx
8abc(4): lea 0xffffffff(%rcx),%rdx
8ac0(4): cmp $0xfffffffd,%rdx
8ac4(2): jnbe 0x6(%rip)
8ac6(4): mov %rdx,0x68(%rbx)
8aca(4): cmp $0x1,%ax
8ace(6): jnz 0xfffffbac(%rip)
8ad4(5): jmp 0xfffffd82(%rip)
8ad9(7): nop 0x0(%rax)
8ae0(4): mov 0x48(%rbx),%rax
8ae4(5): mov 0x20(%r12),%rdx
8ae9(5): mov $0x3,%esi
8aee(4): mov %rbx,(%r12)
8af2(3): mov %r12,%rdi
8af5(4): mov $0x0,0x0(%rdx,%rax,1)
8af9(5): call 0xffffeac7(%rip)
8afe(3): test %rax,%rax
8b01(3): mov %rax,%rbx
8b04(2): jz 0x54(%rip)
8b06(3): mov %rbp,%rdi
8b09(3): mov %rbx,%rbp
8b0c(5): call 0xffff9294(%rip)
8b11(5): jmp 0xfffffd81(%rip)
8b16(a): nop 0x0(%rax,%rax,1)
8b20(3): mov 0x44(%rbp),%edi
8b23(5): call 0xffff902d(%rip)
8b28(5): jmp 0xfffffb1d(%rip)
8b2d(5): mov $0x1,%edx
8b32(3): mov %rbx,%rsi
8b35(3): mov %r12,%rdi
8b38(5): call 0xffffdf08(%rip)
8b3d(4): cmp $0x1,%ax
8b41(4): mov %ax,0x70(%rbx)
8b45(2): jz 0x5c(%rip)
8b47(5): mov $0x3,%esi
8b4c(3): mov %rbx,%rbp
8b4f(4): mov %si,0x74(%rbx)
8b53(5): jmp 0xfffffd3f(%rip)
8b58(6): test $0x20,0x49(%r12)
8b5e(6): jnz 0xfffffaa0(%rip)
8b64(4): mov 0x8(%rbp),%rbx
8b68(5): jmp 0xfffffa10(%rip)
8b6d(5): call 0xffff9103(%rip)
8b72(2): test %eax,%eax
8b74(2): jz 0x15(%rip)
8b76(5): call 0xffff8e2a(%rip)
8b7b(2): mov (%rax),%eax
8b7d(3): mov %eax,0x40(%rbx)
8b80(9): or $0x2000,0x48(%r12)
8b89(3): mov 0x44(%rbx),%edi
8b8c(5): jmp 0xfffffa42(%rip)
8b91(9): or $0x2000,0x48(%r12)
8b9a(2): xor %ebp,%ebp
8b9c(5): jmp 0xfffffade(%rip)
8ba1(5): mov 0x48(%r12),%esi
8ba6(4): test $0x4,%sil
8baa(2): jnz 0xffffff9d(%rip)
8bac(5): mov 0x2c(%r12),%edi
8bb1(7): lea 0x2907(%rip),%rdx
8bb8(5): call 0xffffe5d8(%rip)
8bbd(2): test %eax,%eax
8bbf(3): mov %eax,0x44(%rbx)
8bc2(2): js 0x7e(%rip)
8bc4(5): or $0x2,0x72(%rbx)
8bc9(5): jmp 0xffffff7e(%rip)
8bce(4): cmp $0x1,%ax
8bd2(6): jnz 0xfffffaa8(%rip)
8bd8(5): jmp 0xfffffc75(%rip)
8bdd(5): mov 0x2c(%r12),%esi
8be2(3): mov %rbx,%rdi
8be5(5): call 0xffffe38b(%rip)
8bea(3): cmp $0x2,%eax
8bed(6): jnz 0xfffffe97(%rip)
8bf3(4): movzx 0x70(%rbp),%eax
8bf7(5): jmp 0xfffffc45(%rip)
8bfc(5): mov 0x2c(%r12),%edi
8c01(7): lea 0x28b7(%rip),%rdx
8c08(5): call 0xffffe588(%rip)
8c0d(2): test %eax,%eax
8c0f(3): mov %eax,0x44(%rbp)
8c12(2): js 0x10(%rip)
8c14(5): or $0x2,0x72(%rbp)
8c19(4): movzx 0x70(%rbp),%eax
8c1d(5): jmp 0xfffffc11(%rip)
8c22(5): call 0xffff8d7e(%rip)
8c27(2): mov (%rax),%eax
8c29(6): mov $0x7,%r11d
8c2f(5): mov %r11w,0x70(%rbp)
8c34(3): mov %eax,0x40(%rbp)
8c37(4): mov %rbp,(%r12)
8c3b(5): jmp 0xfffffa3f(%rip)
8c40(5): call 0xffff8d60(%rip)
8c45(2): mov (%rax),%eax
8c47(5): mov $0x7,%edi
8c4c(4): mov %di,0x70(%rbx)
8c50(3): mov %eax,0x40(%rbx)
8c53(5): jmp 0xfffffef4(%rip)

"rpl_fts_set" :
8c60(3): cmp $0x4,%edx
8c63(2): jnbe 0xd(%rip)
8c65(4): mov %dx,0x74(%rsi)
8c69(2): xor %eax,%eax
8c6b(1): ret near (%rsp)
8c6c(4): nop 0x0(%rax)
8c70(4): sub $0x8,%rsp
8c74(5): call 0xffff8d2c(%rip)
8c79(6): mov $0x16,(%rax)
8c7f(5): mov $0x1,%eax
8c84(4): add $0x8,%rsp
8c88(1): ret near (%rsp)

"rpl_fts_children" :
8c90(2): push %r14
8c92(2): push %r13
8c94(2): push %r12
8c96(1): push %rbp
8c97(3): mov %esi,%r12d
8c9a(1): push %rbx
8c9b(3): mov %rdi,%rbx
8c9e(5): call 0xffff8d02(%rip)
8ca3(7): test $0xffffefff,%r12d
8caa(3): mov %rax,%r13
8cad(6): jnz 0xeb(%rip)
8cb3(3): mov (%rbx),%rbp
8cb6(6): mov $0x0,(%rax)
8cbc(4): test $0x20,0x49(%rbx)
8cc0(2): jnz 0x80(%rip)
8cc2(4): movzx 0x70(%rbp),%eax
8cc6(4): cmp $0x9,%ax
8cca(2): jz 0x66(%rip)
8ccc(4): cmp $0x1,%ax
8cd0(2): jnz 0x70(%rip)
8cd2(4): mov 0x8(%rbx),%rdi
8cd6(3): test %rdi,%rdi
8cd9(2): jz 0x7(%rip)
8cdb(5): call 0xffffe0d5(%rip)
8ce0(7): cmp $0x1000,%r12d
8ce7(6): mov $0x1,%r14d
8ced(2): jnz 0xf(%rip)
8cef(7): or $0x1000,0x48(%rbx)
8cf6(6): mov $0x2,%r14d
8cfc(5): cmp $0x0,0x58(%rbp)
8d01(2): jnz 0x14(%rip)
8d03(4): mov 0x30(%rbp),%rax
8d07(3): cmp $0x2f,(%rax)
8d0a(2): jz 0xb(%rip)
8d0c(3): mov 0x48(%rbx),%esi
8d0f(4): test $0x4,%sil
8d13(2): jz 0x3d(%rip)
8d15(3): mov %r14d,%esi
8d18(3): mov %rbx,%rdi
8d1b(5): call 0xffffe8a5(%rip)
8d20(4): mov %rax,0x8(%rbx)
8d24(1): pop %rbx
8d25(1): pop %rbp
8d26(2): pop %r12
8d28(2): pop %r13
8d2a(2): pop %r14
8d2c(1): ret near (%rsp)
8d2d(3): nop (%rax)
8d30(1): pop %rbx
8d31(4): mov 0x10(%rbp),%rax
8d35(1): pop %rbp
8d36(2): pop %r12
8d38(2): pop %r13
8d3a(2): pop %r14
8d3c(1): ret near (%rsp)
8d3d(3): nop (%rax)
8d40(1): pop %rbx
8d41(2): xor %eax,%eax
8d43(1): pop %rbp
8d44(2): pop %r12
8d46(2): pop %r13
8d48(2): pop %r14
8d4a(1): ret near (%rsp)
8d4b(5): nop 0x0(%rax,%rax,1)
8d50(3): mov 0x2c(%rbx),%edi
8d53(7): lea 0x2765(%rip),%rdx
8d5a(5): call 0xffffe436(%rip)
8d5f(2): test %eax,%eax
8d61(2): mov %eax,%ebp
8d63(2): js 0x56(%rip)
8d65(3): mov %r14d,%esi
8d68(3): mov %rbx,%rdi
8d6b(5): call 0xffffe855(%rip)
8d70(4): test $0x2,0x49(%rbx)
8d74(4): mov %rax,0x8(%rbx)
8d78(2): jnz 0x30(%rip)
8d7a(2): mov %ebp,%edi
8d7c(5): call 0xffff8ef4(%rip)
8d81(2): test %eax,%eax
8d83(2): jnz 0x45(%rip)
8d85(2): mov %ebp,%edi
8d87(5): call 0xffff8dc9(%rip)
8d8c(4): mov 0x8(%rbx),%rax
8d90(2): jmp 0xffffff94(%rip)
8d92(6): nop 0x0(%rax,%rax,1)
8d98(6): mov $0x16,(%rax)
8d9e(2): xor %eax,%eax
8da0(5): jmp 0xffffff84(%rip)
8da5(3): nop (%rax)
8da8(5): mov $0x1,%edx
8dad(2): mov %ebp,%esi
8daf(3): mov %rbx,%rdi
8db2(5): call 0xffffe22e(%rip)
8db7(2): jmp 0xffffffd5(%rip)
8db9(8): mov $0x0,0x8(%rbx)
8dc1(2): xor %eax,%eax
8dc3(5): jmp 0xffffff61(%rip)
8dc8(4): mov 0x0(%r13),%ebx
8dcc(2): mov %ebp,%edi
8dce(5): call 0xffff8d82(%rip)
8dd3(2): xor %eax,%eax
8dd5(4): mov %ebx,0x0(%r13)
8dd9(5): jmp 0xffffff4b(%rip)

"rpl_mbrtowc" :
8de0(2): push %r13
8de2(2): push %r12
8de4(3): mov %rsi,%r13
8de7(1): push %rbp
8de8(1): push %rbx
8de9(3): mov %rdi,%rbx
8dec(3): mov %rdx,%r12
8def(4): sub $0x18,%rsp
8df3(9): mov $0x28,%rax
8dfc(5): mov %rax,0x8(%rsp)
8e01(2): xor %eax,%eax
8e03(5): lea 0x4(%rsp),%rax
8e08(3): test %rdi,%rdi
8e0b(4): cmove %rax,%rbx
8e0f(3): mov %rbx,%rdi
8e12(5): call 0xffff8cbe(%rip)
8e17(4): cmp $0xfffffffd,%rax
8e1b(3): mov %rax,%rbp
8e1e(2): jbe 0x22(%rip)
8e20(3): test %r12,%r12
8e23(2): jz 0x1d(%rip)
8e25(2): xor %edi,%edi
8e27(5): call 0x1d9(%rip)
8e2c(2): test %al,%al
8e2e(2): jnz 0x12(%rip)
8e30(5): movzx 0x0(%r13),%eax
8e35(5): mov $0x1,%ebp
8e3a(2): mov %eax,(%rbx)
8e3c(4): nop 0x0(%rax)
8e40(5): mov 0x8(%rsp),%rdx
8e45(9): xor $0x28,%rdx
8e4e(3): mov %rbp,%rax
8e51(2): jnz 0xd(%rip)
8e53(4): add $0x18,%rsp
8e57(1): pop %rbx
8e58(1): pop %rbp
8e59(2): pop %r12
8e5b(2): pop %r13
8e5d(1): ret near (%rsp)
8e5e(5): call 0xffff8c52(%rip)

"close_stream" :
8e70(2): push %r12
8e72(1): push %rbp
8e73(3): mov %rdi,%rbp
8e76(1): push %rbx
8e77(5): call 0xffff8b59(%rip)
8e7c(3): mov 0x0(%rbp),%ebx
8e7f(3): mov %rbp,%rdi
8e82(3): mov %rax,%r12
8e85(5): call 0x16db(%rip)
8e8a(3): and $0x20,%ebx
8e8d(2): test %ebx,%ebx
8e8f(2): jnz 0x19(%rip)
8e91(2): test %eax,%eax
8e93(2): jz 0xc(%rip)
8e95(3): test %r12,%r12
8e98(5): mov $0xffffffff,%eax
8e9d(2): jz 0x3b(%rip)
8e9f(1): pop %rbx
8ea0(1): pop %rbp
8ea1(2): pop %r12
8ea3(1): ret near (%rsp)
8ea4(4): nop 0x0(%rax)
8ea8(2): test %eax,%eax
8eaa(2): jnz 0x1e(%rip)
8eac(5): call 0xffff8af4(%rip)
8eb1(6): mov $0x0,(%rax)
8eb7(5): mov $0xffffffff,%eax
8ebc(1): pop %rbx
8ebd(1): pop %rbp
8ebe(2): pop %r12
8ec0(1): ret near (%rsp)
8ec1(7): nop 0x0(%rax)
8ec8(1): pop %rbx
8ec9(5): mov $0xffffffff,%eax
8ece(1): pop %rbp
8ecf(2): pop %r12
8ed1(1): ret near (%rsp)
8ed2(6): nop 0x0(%rax,%rax,1)
8ed8(5): call 0xffff8ac8(%rip)
8edd(3): cmp $0x9,(%rax)
8ee0(1): pop %rbx
8ee1(1): pop %rbp
8ee2(2): pop %r12
8ee4(3): setnz %al
8ee7(3): movzx %al,%eax
8eea(2): neg %eax
8eec(1): ret near (%rsp)

"cycle_check_init" :
8ef0(8): mov $0x0,0x10(%rdi)
8ef8(7): mov $0x95f616,0x18(%rdi)
8eff(1): ret near (%rsp)

"cycle_check" :
8f00(7): cmp $0x95f616,0x18(%rdi)
8f07(2): jnz 0x60(%rip)
8f09(4): mov 0x10(%rdi),%rdx
8f0d(4): mov 0x8(%rsi),%rcx
8f11(3): test %rdx,%rdx
8f14(2): jz 0x1c(%rip)
8f16(3): cmp %rcx,(%rdi)
8f19(2): jz 0x2f(%rip)
8f1b(4): lea 0x1(%rdx),%r8
8f1f(2): xor %eax,%eax
8f21(3): test %r8,%rdx
8f24(4): mov %r8,0x10(%rdi)
8f28(2): jz 0x38(%rip)
8f2a(2): REP ret near (%rsp)
8f2c(4): nop 0x0(%rax)
8f30(8): mov $0x1,0x10(%rdi)
8f38(3): mov (%rsi),%rax
8f3b(3): mov %rcx,(%rdi)
8f3e(4): mov %rax,0x8(%rdi)
8f42(2): xor %eax,%eax
8f44(1): ret near (%rsp)
8f45(3): nop (%rax)
8f48(4): mov 0x8(%rdi),%rax
8f4c(3): cmp %rax,(%rsi)
8f4f(2): jnz 0xffffffcc(%rip)
8f51(5): mov $0x1,%eax
8f56(1): ret near (%rsp)
8f57(9): nop 0x0(%rax,%rax,1)
8f60(3): test %r8,%r8
8f63(2): jz 0xffffffee(%rip)
8f65(2): jmp 0xffffffd3(%rip)
8f67(7): lea 0x32e2(%rip),%rcx
8f6e(7): lea 0x329b(%rip),%rsi
8f75(7): lea 0x32b8(%rip),%rdi
8f7c(4): sub $0x8,%rsp
8f80(5): mov $0x3c,%edx
8f85(5): call 0xffff8b9b(%rip)

"open_safer" :
8f90(4): sub $0x58,%rsp
8f94(5): mov %rdx,0x30(%rsp)
8f99(2): xor %edx,%edx
8f9b(9): mov $0x28,%rax
8fa4(5): mov %rax,0x18(%rsp)
8fa9(2): xor %eax,%eax
8fab(4): test $0x40,%sil
8faf(2): jnz 0x29(%rip)
8fb1(2): xor %eax,%eax
8fb3(5): call 0xffff8d2d(%rip)
8fb8(2): mov %eax,%edi
8fba(5): call 0x1566(%rip)
8fbf(5): mov 0x18(%rsp),%rcx
8fc4(9): xor $0x28,%rcx
8fcd(2): jnz 0x2c(%rip)
8fcf(4): add $0x58,%rsp
8fd3(1): ret near (%rsp)
8fd4(4): nop 0x0(%rax)
8fd8(5): lea 0x60(%rsp),%rax
8fdd(7): mov $0x10,(%rsp)
8fe4(4): mov 0x30(%rsp),%edx
8fe8(5): mov %rax,0x8(%rsp)
8fed(5): lea 0x20(%rsp),%rax
8ff2(5): mov %rax,0x10(%rsp)
8ff7(2): jmp 0xffffffba(%rip)
8ff9(5): call 0xffff8ab7(%rip)

"hard_locale" :
9000(4): sub $0x8,%rsp
9004(2): xor %esi,%esi
9006(5): call 0xffff8c8a(%rip)
900b(3): mov %rax,%rdx
900e(5): mov $0x1,%eax
9013(3): test %rdx,%rdx
9016(2): jz 0x1f(%rip)
9018(7): lea 0x323d(%rip),%rdi
901f(5): mov $0x2,%ecx
9024(3): mov %rdx,%rsi
9027(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9029(3): setnbe %cl
902c(3): sbb $0x0,%cl
902f(2): xor %eax,%eax
9031(2): test %cl,%cl
9033(2): jnz 0xd(%rip)
9035(4): add $0x8,%rsp
9039(1): ret near (%rsp)
903a(6): nop 0x0(%rax,%rax,1)
9040(7): lea 0x3217(%rip),%rdi
9047(5): mov $0x6,%ecx
904c(3): mov %rdx,%rsi
904f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9051(3): setnbe %al
9054(2): sbb $0x0,%al
9056(2): test %al,%al
9058(3): setnz %al
905b(4): add $0x8,%rsp
905f(1): ret near (%rsp)

"next_prime" :
9060(4): cmp $0xa,%rdi
9064(5): mov $0xa,%eax
9069(a): mov $0x-6148914691236517205,%r9
9073(4): cmovnae %rax,%rdi
9077(4): or $0x1,%rdi
907b(4): cmp $0xffffffff,%rdi
907f(2): jz 0x70(%rip)
9081(7): nop 0x0(%rax)
9088(3): mov %rdi,%rax
908b(3): mov %rdi,%rcx
908e(3): mul %rax,%r9,%rdx
9091(3): mov %rdx,%rax
9094(3): shr $0x1,%rax
9097(4): lea 0x0(%rax,%rax,2),%rax
909b(3): sub %rax,%rcx
909e(4): cmp $0x9,%rdi
90a2(3): mov %rcx,%rax
90a5(2): jbe 0x3b(%rip)
90a7(3): test %rcx,%rcx
90aa(2): jz 0x3b(%rip)
90ac(6): mov $0x10,%r8d
90b2(5): mov $0x9,%esi
90b7(5): mov $0x3,%ecx
90bc(2): jmp 0xd(%rip)
90be(2): nop 
90c0(4): add $0x8,%r8
90c4(3): test %rdx,%rdx
90c7(2): jz 0x1e(%rip)
90c9(4): add $0x2,%rcx
90cd(2): xor %edx,%edx
90cf(3): mov %rdi,%rax
90d2(3): div %rcx,%rax
90d5(3): add %r8,%rsi
90d8(3): cmp %rdi,%rsi
90db(3): mov %rdx,%rax
90de(2): jb 0xffffffe2(%rip)
90e0(3): test %rax,%rax
90e3(2): jnz 0xc(%rip)
90e5(4): add $0x2,%rdi
90e9(4): cmp $0xffffffff,%rdi
90ed(2): jnz 0xffffff9b(%rip)
90ef(3): mov %rdi,%rax
90f2(1): ret near (%rsp)

"raw_hasher" :
9100(3): mov %rdi,%rax
9103(2): xor %edx,%edx
9105(4): ror $0x3,%rax
9109(3): div %rsi,%rax
910c(3): mov %rdx,%rax
910f(1): ret near (%rsp)

"raw_comparator" :
9110(3): cmp %rsi,%rdi
9113(3): setz %al
9116(1): ret near (%rsp)

"safe_hasher" :
9120(1): push %rbx
9121(3): mov %rdi,%rbx
9124(3): mov %rsi,%rdi
9127(4): mov 0x10(%rbx),%rsi
912b(3): call 0x30(%rbx)
912e(4): cmp %rax,0x10(%rbx)
9132(2): jbe 0xb(%rip)
9134(4): shl/sal $0x4,%rax
9138(3): add (%rbx),%rax
913b(1): pop %rbx
913c(1): ret near (%rsp)
913d(5): call 0xffff8853(%rip)

"hash_find_entry" :
9150(2): push %r14
9152(2): push %r13
9154(3): mov %rdx,%r14
9157(2): push %r12
9159(1): push %rbp
915a(3): mov %rdi,%r12
915d(1): push %rbx
915e(3): mov %rsi,%rbp
9161(3): mov %ecx,%r13d
9164(5): call 0xffffffbc(%rip)
9169(3): mov %rax,(%r14)
916c(3): mov (%rax),%rsi
916f(3): test %rsi,%rsi
9172(6): jz 0xee(%rip)
9178(3): cmp %rbp,%rsi
917b(3): mov %rax,%rbx
917e(6): jz 0x95(%rip)
9184(3): mov %rbp,%rdi
9187(5): call 0x38(%r12)
918c(2): test %al,%al
918e(6): jnz 0x82(%rip)
9194(4): mov 0x8(%rbx),%rax
9198(3): test %rax,%rax
919b(6): jz 0xc5(%rip)
91a1(3): mov (%rax),%rsi
91a4(3): cmp %rsi,%rbp
91a7(2): jnz 0x22(%rip)
91a9(2): jmp 0x33(%rip)
91ab(5): nop 0x0(%rax,%rax,1)
91b0(4): mov 0x8(%rbx),%rbx
91b4(4): mov 0x8(%rbx),%rax
91b8(3): test %rax,%rax
91bb(6): jz 0xa5(%rip)
91c1(3): mov (%rax),%rsi
91c4(3): cmp %rbp,%rsi
91c7(2): jz 0x15(%rip)
91c9(3): mov %rbp,%rdi
91cc(5): call 0x38(%r12)
91d1(2): test %al,%al
91d3(2): jz 0xffffffdd(%rip)
91d5(4): mov 0x8(%rbx),%rax
91d9(3): mov (%rax),%rsi
91dc(3): test %r13b,%r13b
91df(2): jz 0x1f(%rip)
91e1(4): mov 0x8(%rax),%rdx
91e5(4): mov %rdx,0x8(%rbx)
91e9(7): mov $0x0,(%rax)
91f0(5): mov 0x48(%r12),%rdx
91f5(4): mov %rdx,0x8(%rax)
91f9(5): mov %rax,0x48(%r12)
91fe(1): pop %rbx
91ff(3): mov %rsi,%rax
9202(1): pop %rbp
9203(2): pop %r12
9205(2): pop %r13
9207(2): pop %r14
9209(1): ret near (%rsp)
920a(6): nop 0x0(%rax,%rax,1)
9210(3): mov (%rbx),%rsi
9213(3): test %r13b,%r13b
9216(2): jz 0xffffffe8(%rip)
9218(4): mov 0x8(%rbx),%rax
921c(3): test %rax,%rax
921f(2): jz 0x31(%rip)
9221(4): movdqu (%rax),%xmm0
9225(3): movups %xmm0,(%rbx)
9228(7): mov $0x0,(%rax)
922f(5): mov 0x48(%r12),%rdx
9234(4): mov %rdx,0x8(%rax)
9238(5): mov %rax,0x48(%r12)
923d(3): mov %rsi,%rax
9240(1): pop %rbx
9241(1): pop %rbp
9242(2): pop %r12
9244(2): pop %r13
9246(2): pop %r14
9248(1): ret near (%rsp)
9249(7): nop 0x0(%rax)
9250(7): mov $0x0,(%rbx)
9257(2): jmp 0xffffffa7(%rip)
9259(7): nop 0x0(%rax)
9260(2): xor %esi,%esi
9262(1): pop %rbx
9263(3): mov %rsi,%rax
9266(1): pop %rbp
9267(2): pop %r12
9269(2): pop %r13
926b(2): pop %r14
926d(1): ret near (%rsp)

"check_tuning.isra.0" :
9270(3): mov (%rdi),%rdx
9273(7): lea 0x3066(%rip),%rcx
927a(5): mov $0x1,%eax
927f(3): cmp %rcx,%rdx
9282(2): jz 0x63(%rip)
9284(5): movss 0x8(%rdx),%xmm0
9289(7): ucomiss 0x3064(%rip),%xmm0
9290(2): jbe 0x50(%rip)
9292(8): movss 0x305e(%rip),%xmm1
929a(3): ucomiss %xmm0,%xmm1
929d(2): jbe 0x43(%rip)
929f(5): movss 0xc(%rdx),%xmm1
92a4(7): ucomiss 0x3051(%rip),%xmm1
92ab(2): jbe 0x35(%rip)
92ad(4): movss (%rdx),%xmm1
92b1(7): ucomiss 0x3048(%rip),%xmm1
92b8(2): jb 0x28(%rip)
92ba(8): addss 0x3032(%rip),%xmm1
92c2(5): movss 0x4(%rdx),%xmm2
92c7(3): ucomiss %xmm1,%xmm2
92ca(2): jbe 0x16(%rip)
92cc(8): movss 0x3030(%rip),%xmm3
92d4(3): ucomiss %xmm2,%xmm3
92d7(2): jb 0x9(%rip)
92d9(3): ucomiss %xmm1,%xmm0
92dc(2): jnbe 0x9(%rip)
92de(2): nop 
92e0(3): mov %rcx,(%rdi)
92e3(2): xor %eax,%eax
92e5(2): REP ret near (%rsp)

"transfer_entries" :
92f0(2): push %r15
92f2(2): push %r14
92f4(2): push %r13
92f6(2): push %r12
92f8(1): push %rbp
92f9(1): push %rbx
92fa(4): sub $0x8,%rsp
92fe(3): mov (%rsi),%r12
9301(4): cmp 0x8(%rsi),%r12
9305(6): jnb 0xe3(%rip)
930b(3): mov %rdi,%rbp
930e(3): mov %rsi,%r13
9311(3): mov %edx,%r14d
9314(4): nop 0x0(%rax)
9318(4): mov (%r12),%r15
931c(3): test %r15,%r15
931f(6): jz 0xbb(%rip)
9325(5): mov 0x8(%r12),%rbx
932a(3): test %rbx,%rbx
932d(2): jnz 0x1f(%rip)
932f(2): jmp 0x5c(%rip)
9331(7): nop 0x0(%rax)
9338(4): mov 0x8(%rax),%rcx
933c(3): test %rdx,%rdx
933f(4): mov %rcx,0x8(%rbx)
9343(4): mov %rbx,0x8(%rax)
9347(3): mov %rdx,%rbx
934a(2): jz 0x3d(%rip)
934c(3): mov (%rbx),%r15
934f(3): mov %rbp,%rdi
9352(3): mov %r15,%rsi
9355(5): call 0xfffffdcb(%rip)
935a(4): cmp $0x0,(%rax)
935e(4): mov 0x8(%rbx),%rdx
9362(2): jnz 0xffffffd6(%rip)
9364(3): mov %r15,(%rax)
9367(5): add $0x1,0x18(%rbp)
936c(3): test %rdx,%rdx
936f(7): mov $0x0,(%rbx)
9376(4): mov 0x48(%rbp),%rax
937a(4): mov %rax,0x8(%rbx)
937e(4): mov %rbx,0x48(%rbp)
9382(3): mov %rdx,%rbx
9385(2): jnz 0xffffffc7(%rip)
9387(4): mov (%r12),%r15
938b(3): test %r14b,%r14b
938e(9): mov $0x0,0x8(%r12)
9397(2): jnz 0x43(%rip)
9399(3): mov %r15,%rsi
939c(3): mov %rbp,%rdi
939f(5): call 0xfffffd81(%rip)
93a4(4): cmp $0x0,(%rax)
93a8(3): mov %rax,%rbx
93ab(2): jz 0x55(%rip)
93ad(4): mov 0x48(%rbp),%rax
93b1(3): test %rax,%rax
93b4(2): jz 0x5c(%rip)
93b6(4): mov 0x8(%rax),%rdx
93ba(4): mov %rdx,0x48(%rbp)
93be(4): mov 0x8(%rbx),%rdx
93c2(3): mov %r15,(%rax)
93c5(4): mov %rdx,0x8(%rax)
93c9(4): mov %rax,0x8(%rbx)
93cd(8): mov $0x0,(%r12)
93d5(5): sub $0x1,0x18(%r13)
93da(4): add $0x10,%r12
93de(4): cmp %r12,0x8(%r13)
93e2(6): jnbe 0xffffff36(%rip)
93e8(4): add $0x8,%rsp
93ec(5): mov $0x1,%eax
93f1(1): pop %rbx
93f2(1): pop %rbp
93f3(2): pop %r12
93f5(2): pop %r13
93f7(2): pop %r14
93f9(2): pop %r15
93fb(1): ret near (%rsp)
93fc(4): nop 0x0(%rax)
9400(3): mov %r15,(%rax)
9403(5): add $0x1,0x18(%rbp)
9408(2): jmp 0xffffffc5(%rip)
940a(6): nop 0x0(%rax,%rax,1)
9410(5): mov $0x10,%edi
9415(5): call 0xffff880b(%rip)
941a(3): test %rax,%rax
941d(2): jnz 0xffffffa1(%rip)
941f(4): add $0x8,%rsp
9423(2): xor %eax,%eax
9425(1): pop %rbx
9426(1): pop %rbp
9427(2): pop %r12
9429(2): pop %r13
942b(2): pop %r14
942d(2): pop %r15
942f(1): ret near (%rsp)

"hash_get_n_buckets" :
9430(4): mov 0x10(%rdi),%rax
9434(1): ret near (%rsp)

"hash_get_n_buckets_used" :
9440(4): mov 0x18(%rdi),%rax
9444(1): ret near (%rsp)

"hash_get_n_entries" :
9450(4): mov 0x20(%rdi),%rax
9454(1): ret near (%rsp)

"hash_get_max_bucket_length" :
9460(3): mov (%rdi),%rsi
9463(4): mov 0x8(%rdi),%rdi
9467(2): xor %eax,%eax
9469(3): cmp %rdi,%rsi
946c(2): jnb 0x3b(%rip)
946e(2): nop 
9470(4): cmp $0x0,(%rsi)
9474(2): jz 0x28(%rip)
9476(4): mov 0x8(%rsi),%rdx
947a(5): mov $0x1,%ecx
947f(3): test %rdx,%rdx
9482(2): jz 0x13(%rip)
9484(4): nop 0x0(%rax)
9488(4): mov 0x8(%rdx),%rdx
948c(4): add $0x1,%rcx
9490(3): test %rdx,%rdx
9493(2): jnz 0xfffffff5(%rip)
9495(3): cmp %rcx,%rax
9498(4): cmovnae %rcx,%rax
949c(4): add $0x10,%rsi
94a0(3): cmp %rdi,%rsi
94a3(2): jb 0xffffffcd(%rip)
94a5(2): REP ret near (%rsp)
94a7(2): REP ret near (%rsp)

"hash_table_ok" :
94b0(3): mov (%rdi),%rcx
94b3(4): mov 0x8(%rdi),%r8
94b7(2): xor %edx,%edx
94b9(2): xor %esi,%esi
94bb(3): cmp %r8,%rcx
94be(2): jnb 0x38(%rip)
94c0(4): cmp $0x0,(%rcx)
94c4(2): jz 0x29(%rip)
94c6(4): mov 0x8(%rcx),%rax
94ca(4): add $0x1,%rsi
94ce(4): add $0x1,%rdx
94d2(3): test %rax,%rax
94d5(2): jz 0x18(%rip)
94d7(9): nop 0x0(%rax,%rax,1)
94e0(4): mov 0x8(%rax),%rax
94e4(4): add $0x1,%rdx
94e8(3): test %rax,%rax
94eb(2): jnz 0xfffffff5(%rip)
94ed(4): add $0x10,%rcx
94f1(3): cmp %r8,%rcx
94f4(2): jb 0xffffffcc(%rip)
94f6(2): xor %eax,%eax
94f8(4): cmp %rsi,0x18(%rdi)
94fc(2): jz 0x4(%rip)
94fe(2): REP ret near (%rsp)
9500(4): cmp %rdx,0x20(%rdi)
9504(3): setz %al
9507(1): ret near (%rsp)

"hash_print_statistics" :
9510(2): push %r13
9512(2): push %r12
9514(3): mov %rsi,%r12
9517(1): push %rbp
9518(1): push %rbx
9519(2): xor %ebx,%ebx
951b(4): sub $0x8,%rsp
951f(3): mov (%rdi),%rsi
9522(4): mov 0x20(%rdi),%rcx
9526(4): mov 0x10(%rdi),%rbp
952a(4): mov 0x18(%rdi),%r13
952e(4): mov 0x8(%rdi),%rdi
9532(3): cmp %rdi,%rsi
9535(2): jnb 0x40(%rip)
9537(9): nop 0x0(%rax,%rax,1)
9540(4): cmp $0x0,(%rsi)
9544(2): jz 0x28(%rip)
9546(4): mov 0x8(%rsi),%rax
954a(5): mov $0x1,%edx
954f(3): test %rax,%rax
9552(2): jz 0x13(%rip)
9554(4): nop 0x0(%rax)
9558(4): mov 0x8(%rax),%rax
955c(4): add $0x1,%rdx
9560(3): test %rax,%rax
9563(2): jnz 0xfffffff5(%rip)
9565(3): cmp %rdx,%rbx
9568(4): cmovnae %rdx,%rbx
956c(4): add $0x10,%rsi
9570(3): cmp %rdi,%rsi
9573(2): jb 0xffffffcd(%rip)
9575(7): lea 0x2ce8(%rip),%rdx
957c(5): mov $0x1,%esi
9581(3): mov %r12,%rdi
9584(2): xor %eax,%eax
9586(5): call 0xffff87da(%rip)
958b(7): lea 0x2cea(%rip),%rdx
9592(2): xor %eax,%eax
9594(3): mov %rbp,%rcx
9597(5): mov $0x1,%esi
959c(3): mov %r12,%rdi
959f(5): call 0xffff87c1(%rip)
95a4(3): test %r13,%r13
95a7(2): js 0x69(%rip)
95a9(4): pxor %xmm0,%xmm0
95ad(3): test %rbp,%rbp
95b0(5): cvtsi2sd %r13,%xmm0
95b5(8): mulsd 0x2d5b(%rip),%xmm0
95bd(2): js 0x7c(%rip)
95bf(4): pxor %xmm1,%xmm1
95c3(5): cvtsi2sd %rbp,%xmm1
95c8(4): divsd %xmm1,%xmm0
95cc(7): lea 0x2cdd(%rip),%rdx
95d3(3): mov %r13,%rcx
95d6(3): mov %r12,%rdi
95d9(5): mov $0x1,%esi
95de(5): mov $0x1,%eax
95e3(5): call 0xffff877d(%rip)
95e8(4): add $0x8,%rsp
95ec(3): mov %rbx,%rcx
95ef(3): mov %r12,%rdi
95f2(1): pop %rbx
95f3(1): pop %rbp
95f4(2): pop %r12
95f6(2): pop %r13
95f8(7): lea 0x2c95(%rip),%rdx
95ff(5): mov $0x1,%esi
9604(2): xor %eax,%eax
9606(5): jmp 0xffff875a(%rip)
960b(5): nop 0x0(%rax,%rax,1)
9610(3): mov %r13,%rax
9613(3): mov %r13,%rdx
9616(4): pxor %xmm0,%xmm0
961a(3): shr $0x1,%rax
961d(3): and $0x1,%edx
9620(3): or %rdx,%rax
9623(3): test %rbp,%rbp
9626(5): cvtsi2sd %rax,%xmm0
962b(4): addsd %xmm0,%xmm0
962f(8): mulsd 0x2ce1(%rip),%xmm0
9637(2): jns 0xffffff88(%rip)
9639(3): mov %rbp,%rax
963c(4): pxor %xmm1,%xmm1
9640(3): shr $0x1,%rax
9643(3): and $0x1,%ebp
9646(3): or %rbp,%rax
9649(5): cvtsi2sd %rax,%xmm1
964e(4): addsd %xmm1,%xmm1
9652(5): jmp 0xffffff76(%rip)

"hash_lookup" :
9660(2): push %r12
9662(1): push %rbp
9663(3): mov %rdi,%r12
9666(1): push %rbx
9667(3): mov %rsi,%rbp
966a(5): call 0xfffffab6(%rip)
966f(3): mov (%rax),%rsi
9672(3): test %rsi,%rsi
9675(2): jz 0x28(%rip)
9677(3): mov %rax,%rbx
967a(2): jmp 0x9(%rip)
967c(4): nop 0x0(%rax)
9680(3): mov (%rbx),%rsi
9683(3): cmp %rbp,%rsi
9686(2): jz 0x19(%rip)
9688(3): mov %rbp,%rdi
968b(5): call 0x38(%r12)
9690(2): test %al,%al
9692(2): jnz 0x1e(%rip)
9694(4): mov 0x8(%rbx),%rbx
9698(3): test %rbx,%rbx
969b(2): jnz 0xffffffe5(%rip)
969d(2): xor %esi,%esi
969f(1): pop %rbx
96a0(3): mov %rsi,%rax
96a3(1): pop %rbp
96a4(2): pop %r12
96a6(1): ret near (%rsp)
96a7(9): nop 0x0(%rax,%rax,1)
96b0(3): mov (%rbx),%rsi
96b3(1): pop %rbx
96b4(1): pop %rbp
96b5(3): mov %rsi,%rax
96b8(2): pop %r12
96ba(1): ret near (%rsp)

"hash_get_first" :
96c0(5): cmp $0x0,0x20(%rdi)
96c5(2): jz 0x2e(%rip)
96c7(3): mov (%rdi),%rdx
96ca(4): mov 0x8(%rdi),%rcx
96ce(3): cmp %rcx,%rdx
96d1(2): jnb 0x27(%rip)
96d3(3): mov (%rdx),%rax
96d6(3): test %rax,%rax
96d9(2): jnz 0x1d(%rip)
96db(5): nop 0x0(%rax,%rax,1)
96e0(4): add $0x10,%rdx
96e4(3): cmp %rcx,%rdx
96e7(2): jnb 0x11(%rip)
96e9(3): mov (%rdx),%rax
96ec(3): test %rax,%rax
96ef(2): jz 0xfffffff1(%rip)
96f1(2): REP ret near (%rsp)
96f3(2): xor %eax,%eax
96f5(1): ret near (%rsp)
96f6(2): REP ret near (%rsp)
96f8(4): sub $0x8,%rsp
96fc(5): call 0xffff8294(%rip)

"hash_get_next" :
9710(1): push %rbp
9711(1): push %rbx
9712(3): mov %rdi,%rbp
9715(3): mov %rsi,%rbx
9718(4): sub $0x8,%rsp
971c(5): call 0xfffffa04(%rip)
9721(3): mov %rax,%rdx
9724(3): mov %rax,%rcx
9727(3): mov (%rdx),%rax
972a(4): mov 0x8(%rdx),%rdx
972e(3): cmp %rbx,%rax
9731(2): jz 0x18(%rip)
9733(5): nop 0x0(%rax,%rax,1)
9738(3): test %rdx,%rdx
973b(2): jz 0x13(%rip)
973d(3): mov (%rdx),%rax
9740(4): mov 0x8(%rdx),%rdx
9744(3): cmp %rbx,%rax
9747(2): jnz 0xfffffff1(%rip)
9749(3): test %rdx,%rdx
974c(2): jnz 0x2c(%rip)
974e(4): mov 0x8(%rbp),%rdx
9752(2): jmp 0xe(%rip)
9754(4): nop 0x0(%rax)
9758(3): mov (%rcx),%rax
975b(3): test %rax,%rax
975e(2): jnz 0xd(%rip)
9760(4): add $0x10,%rcx
9764(3): cmp %rcx,%rdx
9767(2): jnbe 0xfffffff1(%rip)
9769(2): xor %eax,%eax
976b(4): add $0x8,%rsp
976f(1): pop %rbx
9770(1): pop %rbp
9771(1): ret near (%rsp)
9772(6): nop 0x0(%rax,%rax,1)
9778(3): mov (%rdx),%rax
977b(4): add $0x8,%rsp
977f(1): pop %rbx
9780(1): pop %rbp
9781(1): ret near (%rsp)

"hash_get_entries" :
9790(3): mov (%rdi),%r9
9793(4): cmp %r9,0x8(%rdi)
9797(2): jbe 0x5b(%rip)
9799(3): xor %r8d,%r8d
979c(3): mov (%r9),%rcx
979f(3): test %rcx,%rcx
97a2(2): jz 0x3b(%rip)
97a4(3): cmp %r8,%rdx
97a7(2): jbe 0x40(%rip)
97a9(4): mov %rcx,0x0(%rsi,%r8,8)
97ad(4): mov 0x8(%r9),%rcx
97b1(4): lea 0x1(%r8),%rax
97b5(3): test %rcx,%rcx
97b8(2): jz 0x22(%rip)
97ba(6): nop 0x0(%rax,%rax,1)
97c0(3): cmp %rax,%rdx
97c3(2): jz 0x2d(%rip)
97c5(3): mov (%rcx),%r8
97c8(4): add $0x1,%rax
97cc(5): mov %r8,0xfffffff8(%rsi,%rax,8)
97d1(4): mov 0x8(%rcx),%rcx
97d5(3): test %rcx,%rcx
97d8(2): jnz 0xffffffe8(%rip)
97da(3): mov %rax,%r8
97dd(4): add $0x10,%r9
97e1(4): cmp %r9,0x8(%rdi)
97e5(2): jnbe 0xffffffb7(%rip)
97e7(3): mov %r8,%rax
97ea(1): ret near (%rsp)
97eb(5): nop 0x0(%rax,%rax,1)
97f0(2): REP ret near (%rsp)
97f2(2): xor %eax,%eax
97f4(1): ret near (%rsp)

"hash_do_for_each" :
9800(2): push %r15
9802(2): push %r14
9804(2): push %r13
9806(2): push %r12
9808(1): push %rbp
9809(1): push %rbx
980a(4): sub $0x8,%rsp
980e(3): mov (%rdi),%r14
9811(4): cmp %r14,0x8(%rdi)
9815(2): jbe 0x51(%rip)
9817(3): mov %rdx,%r13
981a(3): mov %rsi,%r12
981d(3): mov %rdi,%r15
9820(2): xor %ebp,%ebp
9822(3): mov (%r14),%rdi
9825(3): test %rdi,%rdi
9828(2): jz 0x22(%rip)
982a(3): mov %r14,%rbx
982d(2): jmp 0x6(%rip)
982f(1): nop 
9830(3): mov (%rbx),%rdi
9833(3): mov %r13,%rsi
9836(3): call %r12
9839(2): test %al,%al
983b(2): jz 0x19(%rip)
983d(4): mov 0x8(%rbx),%rbx
9841(4): add $0x1,%rbp
9845(3): test %rbx,%rbx
9848(2): jnz 0xffffffe8(%rip)
984a(4): add $0x10,%r14
984e(4): cmp %r14,0x8(%r15)
9852(2): jnbe 0xffffffd0(%rip)
9854(4): add $0x8,%rsp
9858(3): mov %rbp,%rax
985b(1): pop %rbx
985c(1): pop %rbp
985d(2): pop %r12
985f(2): pop %r13
9861(2): pop %r14
9863(2): pop %r15
9865(1): ret near (%rsp)
9866(2): xor %ebp,%ebp
9868(2): jmp 0xffffffec(%rip)

"hash_string" :
9870(3): movzx (%rdi),%ecx
9873(2): xor %edx,%edx
9875(2): test %cl,%cl
9877(2): jz 0x26(%rip)
9879(7): nop 0x0(%rax)
9880(3): mov %rdx,%rax
9883(4): add $0x1,%rdi
9887(4): shl/sal $0x5,%rax
988b(3): sub %rdx,%rax
988e(2): xor %edx,%edx
9890(3): add %rcx,%rax
9893(3): movzx (%rdi),%ecx
9896(3): div %rsi,%rax
9899(2): test %cl,%cl
989b(2): jnz 0xffffffe5(%rip)
989d(3): mov %rdx,%rax
98a0(1): ret near (%rsp)

"hash_reset_tuning" :
98b0(a): mov $0x4575657221408423936,%rax
98ba(4): mov $0x0,0x10(%rdi)
98be(3): mov %rax,(%rdi)
98c1(a): mov $0x4590573145673223373,%rax
98cb(4): mov %rax,0x8(%rdi)
98cf(1): ret near (%rsp)

"hash_initialize" :
98d0(2): push %r15
98d2(2): push %r14
98d4(7): lea 0xfffff825(%rip),%rax
98db(2): push %r13
98dd(2): push %r12
98df(3): mov %rdx,%r12
98e2(1): push %rbp
98e3(1): push %rbx
98e4(3): mov %rcx,%r13
98e7(3): mov %rdi,%rbp
98ea(5): mov $0x50,%edi
98ef(3): mov %rsi,%r15
98f2(4): sub $0x8,%rsp
98f6(3): test %rdx,%rdx
98f9(3): mov %r8,%r14
98fc(4): cmove %rax,%r12
9900(7): lea 0xfffff809(%rip),%rax
9907(3): test %rcx,%rcx
990a(4): cmove %rax,%r13
990e(5): call 0xffff8312(%rip)
9913(3): test %rax,%rax
9916(3): mov %rax,%rbx
9919(6): jz 0xb1(%rip)
991f(3): test %r15,%r15
9922(4): lea 0x28(%rax),%rdi
9926(6): jz 0xba(%rip)
992c(4): mov %r15,0x28(%rax)
9930(5): call 0xfffff940(%rip)
9935(2): test %al,%al
9937(6): jz 0x89(%rip)
993d(5): cmp $0x0,0x10(%r15)
9942(6): jz 0xfe(%rip)
9948(3): mov %rbp,%rdi
994b(5): call 0xfffff715(%rip)
9950(5): mov $0x8,%edx
9955(3): mov %rax,%rbp
9958(2): xor %ecx,%ecx
995a(3): mov %rdx,%rax
995d(3): mul %rax,%rbp,%rdx
9960(6): jo 0x11a(%rip)
9966(3): test %rax,%rax
9969(2): js 0x57(%rip)
996b(3): test %rcx,%rcx
996e(2): jnz 0x52(%rip)
9970(3): test %rbp,%rbp
9973(4): mov %rbp,0x10(%rbx)
9977(2): jz 0x49(%rip)
9979(5): mov $0x10,%esi
997e(3): mov %rbp,%rdi
9981(5): call 0xffff820f(%rip)
9986(3): test %rax,%rax
9989(3): mov %rax,(%rbx)
998c(2): jz 0x34(%rip)
998e(4): shl/sal $0x4,%rbp
9992(8): mov $0x0,0x18(%rbx)
999a(8): mov $0x0,0x20(%rbx)
99a2(3): add %rax,%rbp
99a5(4): mov %r12,0x30(%rbx)
99a9(4): mov %r13,0x38(%rbx)
99ad(4): mov %rbp,0x8(%rbx)
99b1(4): mov %r14,0x40(%rbx)
99b5(8): mov $0x0,0x48(%rbx)
99bd(2): jmp 0xd(%rip)
99bf(1): nop 
99c0(3): mov %rbx,%rdi
99c3(2): xor %ebx,%ebx
99c5(5): call 0xffff83db(%rip)
99ca(4): add $0x8,%rsp
99ce(3): mov %rbx,%rax
99d1(1): pop %rbx
99d2(1): pop %rbp
99d3(2): pop %r12
99d5(2): pop %r13
99d7(2): pop %r14
99d9(2): pop %r15
99db(1): ret near (%rsp)
99dc(4): nop 0x0(%rax)
99e0(7): lea 0x28f9(%rip),%rax
99e7(4): mov %rax,0x28(%rbx)
99eb(5): call 0xfffff885(%rip)
99f0(2): test %al,%al
99f2(8): movss 0x290e(%rip),%xmm1
99fa(2): jz 0xffffffc6(%rip)
99fc(3): test %rbp,%rbp
99ff(2): js 0x4c(%rip)
9a01(4): pxor %xmm0,%xmm0
9a05(5): cvtsi2ss %rbp,%xmm0
9a0a(4): divss %xmm1,%xmm0
9a0e(7): ucomiss 0x28f7(%rip),%xmm0
9a15(2): jnb 0xffffffab(%rip)
9a17(7): ucomiss 0x28f2(%rip),%xmm0
9a1e(2): jb 0x52(%rip)
9a20(8): subss 0x28e8(%rip),%xmm0
9a28(a): mov $0x-9223372036854775808,%rax
9a32(5): cvttss2si %xmm0,%rbp
9a37(3): xor %rax,%rbp
9a3a(5): jmp 0xffffff0e(%rip)
9a3f(1): nop 
9a40(3): test %rbp,%rbp
9a43(6): movss 0x8(%r15),%xmm1
9a49(2): jns 0xffffffb8(%rip)
9a4b(3): mov %rbp,%rax
9a4e(4): pxor %xmm0,%xmm0
9a52(3): shr $0x1,%rax
9a55(3): and $0x1,%ebp
9a58(3): or %rbp,%rax
9a5b(5): cvtsi2ss %rax,%xmm0
9a60(4): addss %xmm0,%xmm0
9a64(2): jmp 0xffffffa6(%rip)
9a66(a): nop 0x0(%rax,%rax,1)
9a70(5): cvttss2si %xmm0,%rbp
9a75(5): jmp 0xfffffed3(%rip)
9a7a(5): mov $0x1,%ecx
9a7f(5): jmp 0xfffffee7(%rip)

"hash_clear" :
9a90(2): push %r12
9a92(1): push %rbp
9a93(3): mov %rdi,%rbp
9a96(1): push %rbx
9a97(3): mov (%rdi),%r12
9a9a(4): cmp 0x8(%rdi),%r12
9a9e(2): jnb 0x6d(%rip)
9aa0(5): cmp $0x0,(%r12)
9aa5(2): jz 0x5c(%rip)
9aa7(5): mov 0x8(%r12),%rbx
9aac(4): mov 0x40(%rbp),%rax
9ab0(3): test %rbx,%rbx
9ab3(2): jz 0x32(%rip)
9ab5(3): nop (%rax)
9ab8(3): test %rax,%rax
9abb(2): jz 0xb(%rip)
9abd(3): mov (%rbx),%rdi
9ac0(2): call %rax
9ac2(4): mov 0x40(%rbp),%rax
9ac6(4): mov 0x8(%rbx),%rdx
9aca(4): mov 0x48(%rbp),%rcx
9ace(7): mov $0x0,(%rbx)
9ad5(3): test %rdx,%rdx
9ad8(4): mov %rcx,0x8(%rbx)
9adc(4): mov %rbx,0x48(%rbp)
9ae0(3): mov %rdx,%rbx
9ae3(2): jnz 0xffffffd5(%rip)
9ae5(3): test %rax,%rax
9ae8(2): jz 0x8(%rip)
9aea(4): mov (%r12),%rdi
9aee(2): call %rax
9af0(8): mov $0x0,(%r12)
9af8(9): mov $0x0,0x8(%r12)
9b01(4): add $0x10,%r12
9b05(4): cmp %r12,0x8(%rbp)
9b09(2): jnbe 0xffffff97(%rip)
9b0b(8): mov $0x0,0x18(%rbp)
9b13(8): mov $0x0,0x20(%rbp)
9b1b(1): pop %rbx
9b1c(1): pop %rbp
9b1d(2): pop %r12
9b1f(1): ret near (%rsp)

"hash_free" :
9b20(2): push %r12
9b22(1): push %rbp
9b23(3): mov %rdi,%r12
9b26(1): push %rbx
9b27(5): cmp $0x0,0x40(%rdi)
9b2c(3): mov (%rdi),%rbp
9b2f(4): mov 0x8(%rdi),%rax
9b33(2): jz 0x50(%rip)
9b35(5): cmp $0x0,0x20(%rdi)
9b3a(2): jz 0x49(%rip)
9b3c(3): cmp %rax,%rbp
9b3f(2): jnb 0x7d(%rip)
9b41(7): nop 0x0(%rax)
9b48(4): mov 0x0(%rbp),%rdi
9b4c(3): test %rdi,%rdi
9b4f(2): jz 0x27(%rip)
9b51(3): mov %rbp,%rbx
9b54(2): jmp 0xf(%rip)
9b56(a): nop 0x0(%rax,%rax,1)
9b60(3): mov (%rbx),%rdi
9b63(5): call 0x40(%r12)
9b68(4): mov 0x8(%rbx),%rbx
9b6c(3): test %rbx,%rbx
9b6f(2): jnz 0xfffffff1(%rip)
9b71(5): mov 0x8(%r12),%rax
9b76(4): add $0x10,%rbp
9b7a(3): cmp %rbp,%rax
9b7d(2): jnbe 0xffffffcb(%rip)
9b7f(4): mov (%r12),%rbp
9b83(3): cmp %rax,%rbp
9b86(2): jnb 0x36(%rip)
9b88(8): nop 0x0(%rax,%rax,1)
9b90(4): mov 0x8(%rbp),%rdi
9b94(3): test %rdi,%rdi
9b97(2): jz 0x1a(%rip)
9b99(7): nop 0x0(%rax)
9ba0(4): mov 0x8(%rdi),%rbx
9ba4(5): call 0xffff81fc(%rip)
9ba9(3): test %rbx,%rbx
9bac(3): mov %rbx,%rdi
9baf(2): jnz 0xfffffff1(%rip)
9bb1(4): add $0x10,%rbp
9bb5(5): cmp %rbp,0x8(%r12)
9bba(2): jnbe 0xffffffd6(%rip)
9bbc(5): mov 0x48(%r12),%rdi
9bc1(3): test %rdi,%rdi
9bc4(2): jz 0x1d(%rip)
9bc6(a): nop 0x0(%rax,%rax,1)
9bd0(4): mov 0x8(%rdi),%rbx
9bd4(5): call 0xffff81cc(%rip)
9bd9(3): test %rbx,%rbx
9bdc(3): mov %rbx,%rdi
9bdf(2): jnz 0xfffffff1(%rip)
9be1(4): mov (%r12),%rdi
9be5(5): call 0xffff81bb(%rip)
9bea(1): pop %rbx
9beb(3): mov %r12,%rdi
9bee(1): pop %rbp
9bef(2): pop %r12
9bf1(5): jmp 0xffff81af(%rip)

"hash_rehash" :
9c00(2): push %r12
9c02(1): push %rbp
9c03(3): mov %rdi,%rbp
9c06(1): push %rbx
9c07(4): sub $0x60,%rsp
9c0b(4): mov 0x28(%rdi),%r12
9c0f(9): mov $0x28,%rax
9c18(5): mov %rax,0x58(%rsp)
9c1d(2): xor %eax,%eax
9c1f(6): cmp $0x0,0x10(%r12)
9c25(2): jnz 0x53(%rip)
9c27(3): test %rsi,%rsi
9c2a(6): js 0x17e(%rip)
9c30(4): pxor %xmm0,%xmm0
9c34(5): cvtsi2ss %rsi,%xmm0
9c39(7): divss 0x8(%r12),%xmm0
9c40(7): ucomiss 0x26c5(%rip),%xmm0
9c47(6): jnb 0x139(%rip)
9c4d(7): ucomiss 0x26bc(%rip),%xmm0
9c54(6): jb 0x17c(%rip)
9c5a(8): subss 0x26ae(%rip),%xmm0
9c62(a): mov $0x-9223372036854775808,%rax
9c6c(5): cvttss2si %xmm0,%rsi
9c71(3): xor %rax,%rsi
9c74(4): nop 0x0(%rax)
9c78(3): mov %rsi,%rdi
9c7b(5): call 0xfffff3e5(%rip)
9c80(5): mov $0x8,%edx
9c85(3): mov %rax,%rbx
9c88(2): xor %ecx,%ecx
9c8a(3): mov %rdx,%rax
9c8d(3): mul %rax,%rbx,%rdx
9c90(6): jo 0x19f(%rip)
9c96(3): test %rax,%rax
9c99(5): mov $0x1,%eax
9c9e(4): cmovs %rax,%rcx
9ca2(3): test %rbx,%rbx
9ca5(6): jz 0xdb(%rip)
9cab(3): and $0x1,%ecx
9cae(6): jnz 0xd2(%rip)
9cb4(4): cmp %rbx,0x10(%rbp)
9cb8(6): jz 0x128(%rip)
9cbe(5): mov $0x10,%esi
9cc3(3): mov %rbx,%rdi
9cc6(5): call 0xffff7eca(%rip)
9ccb(3): test %rax,%rax
9cce(4): mov %rax,(%rsp)
9cd2(6): jz 0xae(%rip)
9cd8(5): mov %rbx,0x10(%rsp)
9cdd(4): shl/sal $0x4,%rbx
9ce1(5): mov %r12,0x28(%rsp)
9ce6(3): add %rax,%rbx
9ce9(4): mov 0x30(%rbp),%rax
9ced(3): mov %rsp,%r12
9cf0(2): xor %edx,%edx
9cf2(3): mov %rbp,%rsi
9cf5(3): mov %r12,%rdi
9cf8(5): mov %rbx,0x8(%rsp)
9cfd(9): mov $0x0,0x18(%rsp)
9d06(5): mov %rax,0x30(%rsp)
9d0b(4): mov 0x38(%rbp),%rax
9d0f(9): mov $0x0,0x20(%rsp)
9d18(5): mov %rax,0x38(%rsp)
9d1d(4): mov 0x40(%rbp),%rax
9d21(5): mov %rax,0x40(%rsp)
9d26(4): mov 0x48(%rbp),%rax
9d2a(5): mov %rax,0x48(%rsp)
9d2f(5): call 0xfffff5c1(%rip)
9d34(2): test %al,%al
9d36(2): mov %eax,%ebx
9d38(6): jnz 0xb8(%rip)
9d3e(5): mov 0x48(%rsp),%rax
9d43(5): mov $0x1,%edx
9d48(3): mov %r12,%rsi
9d4b(3): mov %rbp,%rdi
9d4e(4): mov %rax,0x48(%rbp)
9d52(5): call 0xfffff59e(%rip)
9d57(2): test %al,%al
9d59(6): jz 0xe0(%rip)
9d5f(2): xor %edx,%edx
9d61(3): mov %r12,%rsi
9d64(3): mov %rbp,%rdi
9d67(5): call 0xfffff589(%rip)
9d6c(2): test %al,%al
9d6e(6): jz 0xcb(%rip)
9d74(4): mov (%rsp),%rdi
9d78(5): call 0xffff8028(%rip)
9d7d(2): jmp 0x5(%rip)
9d7f(1): nop 
9d80(2): xor %ebx,%ebx
9d82(5): mov 0x58(%rsp),%rcx
9d87(9): xor $0x28,%rcx
9d90(2): mov %ebx,%eax
9d92(6): jnz 0x98(%rip)
9d98(4): add $0x60,%rsp
9d9c(1): pop %rbx
9d9d(1): pop %rbp
9d9e(2): pop %r12
9da0(1): ret near (%rsp)
9da1(7): nop 0x0(%rax)
9da8(3): mov %rsi,%rax
9dab(4): pxor %xmm0,%xmm0
9daf(3): shr $0x1,%rax
9db2(3): and $0x1,%esi
9db5(3): or %rsi,%rax
9db8(5): cvtsi2ss %rax,%xmm0
9dbd(4): addss %xmm0,%xmm0
9dc1(5): jmp 0xfffffe78(%rip)
9dc6(a): nop 0x0(%rax,%rax,1)
9dd0(5): cvttss2si %xmm0,%rsi
9dd5(5): jmp 0xfffffea3(%rip)
9dda(6): nop 0x0(%rax,%rax,1)
9de0(5): mov $0x1,%ebx
9de5(2): jmp 0xffffff9d(%rip)
9de7(9): nop 0x0(%rax,%rax,1)
9df0(4): mov 0x0(%rbp),%rdi
9df4(5): call 0xffff7fac(%rip)
9df9(4): mov (%rsp),%rax
9dfd(4): mov %rax,0x0(%rbp)
9e01(5): mov 0x8(%rsp),%rax
9e06(4): mov %rax,0x8(%rbp)
9e0a(5): mov 0x10(%rsp),%rax
9e0f(4): mov %rax,0x10(%rbp)
9e13(5): mov 0x18(%rsp),%rax
9e18(4): mov %rax,0x18(%rbp)
9e1c(5): mov 0x48(%rsp),%rax
9e21(4): mov %rax,0x48(%rbp)
9e25(5): jmp 0xffffff5d(%rip)
9e2a(5): call 0xffff7c86(%rip)
9e2f(5): mov $0x1,%ecx
9e34(5): jmp 0xfffffe62(%rip)
9e39(5): call 0xffff7b57(%rip)

"hash_insert_if_absent" :
9e40(2): push %r13
9e42(2): push %r12
9e44(1): push %rbp
9e45(1): push %rbx
9e46(4): sub $0x18,%rsp
9e4a(9): mov $0x28,%rax
9e53(5): mov %rax,0x8(%rsp)
9e58(2): xor %eax,%eax
9e5a(3): test %rsi,%rsi
9e5d(6): jz 0x1c0(%rip)
9e63(3): mov %rsp,%r12
9e66(2): xor %ecx,%ecx
9e68(3): mov %rdx,%r13
9e6b(3): mov %r12,%rdx
9e6e(3): mov %rdi,%rbx
9e71(3): mov %rsi,%rbp
9e74(5): call 0xfffff2dc(%rip)
9e79(3): test %rax,%rax
9e7c(3): mov %rax,%rdx
9e7f(2): jz 0x31(%rip)
9e81(2): xor %eax,%eax
9e83(3): test %r13,%r13
9e86(2): jz 0x6(%rip)
9e88(4): mov %rdx,0x0(%r13)
9e8c(5): mov 0x8(%rsp),%rcx
9e91(9): xor $0x28,%rcx
9e9a(6): jnz 0x225(%rip)
9ea0(4): add $0x18,%rsp
9ea4(1): pop %rbx
9ea5(1): pop %rbp
9ea6(2): pop %r12
9ea8(2): pop %r13
9eaa(1): ret near (%rsp)
9eab(5): nop 0x0(%rax,%rax,1)
9eb0(4): mov 0x18(%rbx),%rax
9eb4(3): test %rax,%rax
9eb7(2): js 0x79(%rip)
9eb9(4): pxor %xmm1,%xmm1
9ebd(4): mov 0x28(%rbx),%rdx
9ec1(5): cvtsi2ss %rax,%xmm1
9ec6(4): mov 0x10(%rbx),%rax
9eca(3): test %rax,%rax
9ecd(6): js 0x8d(%rip)
9ed3(4): pxor %xmm0,%xmm0
9ed7(5): cvtsi2ss %rax,%xmm0
9edc(5): mulss 0x8(%rdx),%xmm0
9ee1(3): ucomiss %xmm0,%xmm1
9ee4(6): jnbe 0x9c(%rip)
9eea(4): mov (%rsp),%r12
9eee(5): cmp $0x0,(%r12)
9ef3(6): jz 0x135(%rip)
9ef9(4): mov 0x48(%rbx),%rax
9efd(3): test %rax,%rax
9f00(6): jz 0x140(%rip)
9f06(4): mov 0x8(%rax),%rdx
9f0a(4): mov %rdx,0x48(%rbx)
9f0e(5): mov 0x8(%r12),%rdx
9f13(3): mov %rbp,(%rax)
9f16(4): mov %rdx,0x8(%rax)
9f1a(5): mov %rax,0x8(%r12)
9f1f(5): mov $0x1,%eax
9f24(5): add $0x1,0x20(%rbx)
9f29(5): jmp 0xffffff63(%rip)
9f2e(2): nop 
9f30(3): mov %rax,%rdx
9f33(4): pxor %xmm1,%xmm1
9f37(3): and $0x1,%eax
9f3a(3): shr $0x1,%rdx
9f3d(3): or %rax,%rdx
9f40(4): mov 0x10(%rbx),%rax
9f44(5): cvtsi2ss %rdx,%xmm1
9f49(4): mov 0x28(%rbx),%rdx
9f4d(3): test %rax,%rax
9f50(4): addss %xmm1,%xmm1
9f54(6): jns 0xffffff7f(%rip)
9f5a(3): mov %rax,%rcx
9f5d(4): pxor %xmm0,%xmm0
9f61(3): shr $0x1,%rcx
9f64(3): and $0x1,%eax
9f67(3): or %rax,%rcx
9f6a(5): cvtsi2ss %rcx,%xmm0
9f6f(4): addss %xmm0,%xmm0
9f73(5): jmp 0xffffff69(%rip)
9f78(8): nop 0x0(%rax,%rax,1)
9f80(4): lea 0x28(%rbx),%rdi
9f84(5): call 0xfffff2ec(%rip)
9f89(4): mov 0x10(%rbx),%rax
9f8d(4): mov 0x28(%rbx),%rdx
9f91(3): test %rax,%rax
9f94(5): movss 0x8(%rdx),%xmm2
9f99(6): js 0xc7(%rip)
9f9f(4): pxor %xmm0,%xmm0
9fa3(5): cvtsi2ss %rax,%xmm0
9fa8(4): mov 0x18(%rbx),%rax
9fac(3): test %rax,%rax
9faf(6): js 0xd1(%rip)
9fb5(4): pxor %xmm1,%xmm1
9fb9(5): cvtsi2ss %rax,%xmm1
9fbe(3): movaps %xmm2,%xmm3
9fc1(4): mulss %xmm0,%xmm3
9fc5(3): ucomiss %xmm3,%xmm1
9fc8(6): jbe 0xffffff22(%rip)
9fce(4): cmp $0x0,0x10(%rdx)
9fd2(5): mulss 0xc(%rdx),%xmm0
9fd7(2): jnz 0x6(%rip)
9fd9(4): mulss %xmm2,%xmm0
9fdd(7): ucomiss 0x2328(%rip),%xmm0
9fe4(2): jnb 0x6f(%rip)
9fe6(7): ucomiss 0x2323(%rip),%xmm0
9fed(6): jnb 0xb3(%rip)
9ff3(5): cvttss2si %xmm0,%rsi
9ff8(3): mov %rbx,%rdi
9ffb(5): call 0xfffffc05(%rip)
a000(2): test %al,%al
a002(2): jz 0x51(%rip)
a004(2): xor %ecx,%ecx
a006(3): mov %r12,%rdx
a009(3): mov %rbp,%rsi
a00c(3): mov %rbx,%rdi
a00f(5): call 0xfffff141(%rip)
a014(3): test %rax,%rax
a017(6): jz 0xfffffed3(%rip)
a01d(5): call 0xffff7973(%rip)
a022(6): nop 0x0(%rax,%rax,1)
a028(4): mov %rbp,(%r12)
a02c(5): mov $0x1,%eax
a031(5): add $0x1,0x20(%rbx)
a036(5): add $0x1,0x18(%rbx)
a03b(5): jmp 0xfffffe51(%rip)
a040(5): mov $0x10,%edi
a045(5): call 0xffff7bdb(%rip)
a04a(3): test %rax,%rax
a04d(6): jnz 0xfffffec1(%rip)
a053(5): mov $0xffffffff,%eax
a058(5): jmp 0xfffffe34(%rip)
a05d(3): nop (%rax)
a060(3): mov %rax,%rcx
a063(4): pxor %xmm0,%xmm0
a067(3): shr $0x1,%rcx
a06a(3): and $0x1,%eax
a06d(3): or %rax,%rcx
a070(5): cvtsi2ss %rcx,%xmm0
a075(4): addss %xmm0,%xmm0
a079(5): jmp 0xffffff2f(%rip)
a07e(2): nop 
a080(3): mov %rax,%rcx
a083(4): pxor %xmm1,%xmm1
a087(3): shr $0x1,%rcx
a08a(3): and $0x1,%eax
a08d(3): or %rax,%rcx
a090(5): cvtsi2ss %rcx,%xmm1
a095(4): addss %xmm1,%xmm1
a099(5): jmp 0xffffff25(%rip)
a09e(2): nop 
a0a0(8): subss 0x2268(%rip),%xmm0
a0a8(a): mov $0x-9223372036854775808,%rax
a0b2(5): cvttss2si %xmm0,%rsi
a0b7(3): xor %rax,%rsi
a0ba(5): jmp 0xffffff3e(%rip)
a0bf(5): call 0xffff79f1(%rip)

"hash_insert" :
a0d0(1): push %rbx
a0d1(3): mov %rsi,%rbx
a0d4(4): sub $0x10,%rsp
a0d8(3): mov %rsp,%rdx
a0db(9): mov $0x28,%rax
a0e4(5): mov %rax,0x8(%rsp)
a0e9(2): xor %eax,%eax
a0eb(5): call 0xfffffd55(%rip)
a0f0(3): cmp $0xff,%eax
a0f3(2): jz 0x2d(%rip)
a0f5(2): test %eax,%eax
a0f7(2): jnz 0x6(%rip)
a0f9(4): mov (%rsp),%rbx
a0fd(5): mov 0x8(%rsp),%rcx
a102(9): xor $0x28,%rcx
a10b(3): mov %rbx,%rax
a10e(2): jnz 0x16(%rip)
a110(4): add $0x10,%rsp
a114(1): pop %rbx
a115(1): ret near (%rsp)
a116(a): nop 0x0(%rax,%rax,1)
a120(2): xor %ebx,%ebx
a122(2): jmp 0xffffffdb(%rip)
a124(5): call 0xffff798c(%rip)

"hash_delete" :
a130(2): push %r12
a132(1): push %rbp
a133(5): mov $0x1,%ecx
a138(1): push %rbx
a139(3): mov %rdi,%rbx
a13c(4): sub $0x10,%rsp
a140(3): mov %rsp,%rdx
a143(9): mov $0x28,%rax
a14c(5): mov %rax,0x8(%rsp)
a151(2): xor %eax,%eax
a153(5): call 0xffffeffd(%rip)
a158(3): test %rax,%rax
a15b(3): mov %rax,%rbp
a15e(2): jz 0x11(%rip)
a160(4): mov (%rsp),%rax
a164(5): sub $0x1,0x20(%rbx)
a169(4): cmp $0x0,(%rax)
a16d(2): jz 0x23(%rip)
a16f(5): mov 0x8(%rsp),%rcx
a174(9): xor $0x28,%rcx
a17d(3): mov %rbp,%rax
a180(6): jnz 0x1ae(%rip)
a186(4): add $0x10,%rsp
a18a(1): pop %rbx
a18b(1): pop %rbp
a18c(2): pop %r12
a18e(1): ret near (%rsp)
a18f(1): nop 
a190(4): mov 0x18(%rbx),%rax
a194(4): sub $0x1,%rax
a198(3): test %rax,%rax
a19b(4): mov %rax,0x18(%rbx)
a19f(6): js 0x101(%rip)
a1a5(4): pxor %xmm0,%xmm0
a1a9(5): cvtsi2ss %rax,%xmm0
a1ae(4): mov 0x10(%rbx),%rax
a1b2(4): mov 0x28(%rbx),%rdx
a1b6(3): test %rax,%rax
a1b9(6): js 0xc7(%rip)
a1bf(4): pxor %xmm1,%xmm1
a1c3(5): cvtsi2ss %rax,%xmm1
a1c8(4): mulss (%rdx),%xmm1
a1cc(3): ucomiss %xmm0,%xmm1
a1cf(2): jbe 0xffffffa0(%rip)
a1d1(4): lea 0x28(%rbx),%rdi
a1d5(5): call 0xfffff09b(%rip)
a1da(4): mov 0x10(%rbx),%rax
a1de(4): mov 0x28(%rbx),%rdx
a1e2(3): test %rax,%rax
a1e5(6): js 0x12b(%rip)
a1eb(4): pxor %xmm0,%xmm0
a1ef(5): cvtsi2ss %rax,%xmm0
a1f4(4): mov 0x18(%rbx),%rax
a1f8(3): test %rax,%rax
a1fb(6): js 0xf5(%rip)
a201(4): pxor %xmm1,%xmm1
a205(5): cvtsi2ss %rax,%xmm1
a20a(4): movss (%rdx),%xmm2
a20e(4): mulss %xmm0,%xmm2
a212(3): ucomiss %xmm1,%xmm2
a215(6): jbe 0xffffff5a(%rip)
a21b(4): cmp $0x0,0x10(%rdx)
a21f(5): mulss 0x4(%rdx),%xmm0
a224(6): jz 0xbc(%rip)
a22a(7): ucomiss 0x20df(%rip),%xmm0
a231(6): jnb 0x8f(%rip)
a237(5): cvttss2si %xmm0,%rsi
a23c(3): mov %rbx,%rdi
a23f(5): call 0xfffff9c1(%rip)
a244(2): test %al,%al
a246(6): jnz 0xffffff29(%rip)
a24c(4): mov 0x48(%rbx),%rdi
a250(3): test %rdi,%rdi
a253(2): jz 0x16(%rip)
a255(3): nop (%rax)
a258(4): mov 0x8(%rdi),%r12
a25c(5): call 0xffff7b44(%rip)
a261(3): test %r12,%r12
a264(3): mov %r12,%rdi
a267(2): jnz 0xfffffff1(%rip)
a269(8): mov $0x0,0x48(%rbx)
a271(5): jmp 0xfffffefe(%rip)
a276(a): nop 0x0(%rax,%rax,1)
a280(3): mov %rax,%rcx
a283(4): pxor %xmm1,%xmm1
a287(3): shr $0x1,%rcx
a28a(3): and $0x1,%eax
a28d(3): or %rax,%rcx
a290(5): cvtsi2ss %rcx,%xmm1
a295(4): addss %xmm1,%xmm1
a299(5): jmp 0xffffff2f(%rip)
a29e(2): nop 
a2a0(3): mov %rax,%rdx
a2a3(4): pxor %xmm0,%xmm0
a2a7(3): shr $0x1,%rdx
a2aa(3): and $0x1,%eax
a2ad(3): or %rax,%rdx
a2b0(5): cvtsi2ss %rdx,%xmm0
a2b5(4): addss %xmm0,%xmm0
a2b9(5): jmp 0xfffffef5(%rip)
a2be(2): nop 
a2c0(8): subss 0x2048(%rip),%xmm0
a2c8(a): mov $0x-9223372036854775808,%rax
a2d2(5): cvttss2si %xmm0,%rsi
a2d7(3): xor %rax,%rsi
a2da(5): jmp 0xffffff62(%rip)
a2df(1): nop 
a2e0(5): mulss 0x8(%rdx),%xmm0
a2e5(5): jmp 0xffffff45(%rip)
a2ea(6): nop 0x0(%rax,%rax,1)
a2f0(3): mov %rax,%rcx
a2f3(4): pxor %xmm1,%xmm1
a2f7(3): shr $0x1,%rcx
a2fa(3): and $0x1,%eax
a2fd(3): or %rax,%rcx
a300(5): cvtsi2ss %rcx,%xmm1
a305(4): addss %xmm1,%xmm1
a309(5): jmp 0xffffff01(%rip)
a30e(2): nop 
a310(3): mov %rax,%rcx
a313(4): pxor %xmm0,%xmm0
a317(3): shr $0x1,%rcx
a31a(3): and $0x1,%eax
a31d(3): or %rax,%rcx
a320(5): cvtsi2ss %rcx,%xmm0
a325(4): addss %xmm0,%xmm0
a329(5): jmp 0xfffffecb(%rip)
a32e(5): call 0xffff7782(%rip)

"i_ring_init" :
a340(4): mov $0x1,0x1c(%rdi)
a344(8): mov $0x0,0x14(%rdi)
a34c(2): mov %esi,(%rdi)
a34e(3): mov %esi,0x4(%rdi)
a351(3): mov %esi,0x8(%rdi)
a354(3): mov %esi,0xc(%rdi)
a357(3): mov %esi,0x10(%rdi)
a35a(1): ret near (%rsp)

"i_ring_empty" :
a360(4): movzx 0x1c(%rdi),%eax
a364(1): ret near (%rsp)

"i_ring_push" :
a370(4): movzx 0x1c(%rdi),%edx
a374(3): mov 0x14(%rdi),%ecx
a377(3): xor $0x1,%edx
a37a(3): movzx %dl,%edx
a37d(2): add %edx,%ecx
a37f(3): and $0x3,%ecx
a382(2): mov %ecx,%eax
a384(4): lea 0x0(%rdi,%rax,4),%r8
a388(3): mov (%r8),%eax
a38b(3): mov %esi,(%r8)
a38e(3): mov 0x18(%rdi),%esi
a391(3): mov %ecx,0x14(%rdi)
a394(2): cmp %ecx,%esi
a396(2): jnz 0xa(%rip)
a398(2): add %esi,%edx
a39a(3): and $0x3,%edx
a39d(3): mov %edx,0x18(%rdi)
a3a0(4): mov $0x0,0x1c(%rdi)
a3a4(1): ret near (%rsp)

"i_ring_pop" :
a3b0(4): cmp $0x0,0x1c(%rdi)
a3b4(2): jnz 0x31(%rip)
a3b6(3): mov 0x14(%rdi),%eax
a3b9(3): mov 0x10(%rdi),%esi
a3bc(4): lea 0x0(%rdi,%rax,4),%rcx
a3c0(3): mov %rax,%rdx
a3c3(2): mov (%rcx),%eax
a3c5(2): mov %esi,(%rcx)
a3c7(3): cmp 0x18(%rdi),%edx
a3ca(2): jz 0x16(%rip)
a3cc(3): add $0x3,%edx
a3cf(3): and $0x3,%edx
a3d2(3): mov %edx,0x14(%rdi)
a3d5(1): ret near (%rsp)
a3d6(a): nop 0x0(%rax,%rax,1)
a3e0(4): mov $0x1,0x1c(%rdi)
a3e4(1): ret near (%rsp)
a3e5(4): sub $0x8,%rsp
a3e9(5): call 0xffff75a7(%rip)

"locale_charset" :
a3f0(4): sub $0x8,%rsp
a3f4(5): mov $0xe,%edi
a3f9(5): call 0xffff7847(%rip)
a3fe(3): test %rax,%rax
a401(2): jz 0x1f(%rip)
a403(3): cmp $0x0,(%rax)
a406(7): lea 0x1f13(%rip),%rdx
a40d(4): cmove %rdx,%rax
a411(4): add $0x8,%rsp
a415(1): ret near (%rsp)
a416(a): nop 0x0(%rax,%rax,1)
a420(7): lea 0x1ef9(%rip),%rax
a427(4): add $0x8,%rsp
a42b(1): ret near (%rsp)

"openat_safer" :
a430(4): sub $0x58,%rsp
a434(5): mov %rcx,0x38(%rsp)
a439(2): xor %ecx,%ecx
a43b(9): mov $0x28,%rax
a444(5): mov %rax,0x18(%rsp)
a449(2): xor %eax,%eax
a44b(3): test $0x40,%dl
a44e(2): jnz 0x2a(%rip)
a450(2): xor %eax,%eax
a452(5): call 0xffff764e(%rip)
a457(2): mov %eax,%edi
a459(5): call 0xc7(%rip)
a45e(5): mov 0x18(%rsp),%rsi
a463(9): xor $0x28,%rsi
a46c(2): jnz 0x2d(%rip)
a46e(4): add $0x58,%rsp
a472(1): ret near (%rsp)
a473(5): nop 0x0(%rax,%rax,1)
a478(5): lea 0x60(%rsp),%rax
a47d(7): mov $0x18,(%rsp)
a484(4): mov 0x38(%rsp),%ecx
a488(5): mov %rax,0x8(%rsp)
a48d(5): lea 0x20(%rsp),%rax
a492(5): mov %rax,0x10(%rsp)
a497(2): jmp 0xffffffb9(%rip)
a499(5): call 0xffff7617(%rip)

"opendirat" :
a4a0(2): push %r13
a4a2(2): push %r12
a4a4(6): or $0x90900,%edx
a4aa(1): push %rbp
a4ab(1): push %rbx
a4ac(2): xor %eax,%eax
a4ae(3): mov %rcx,%r12
a4b1(4): sub $0x8,%rsp
a4b5(5): call 0xffffff7b(%rip)
a4ba(2): test %eax,%eax
a4bc(2): js 0x54(%rip)
a4be(2): mov %eax,%edi
a4c0(2): mov %eax,%ebx
a4c2(5): call 0xffff784e(%rip)
a4c7(3): test %rax,%rax
a4ca(3): mov %rax,%rbp
a4cd(2): jz 0x1b(%rip)
a4cf(4): mov %ebx,(%r12)
a4d3(4): add $0x8,%rsp
a4d7(3): mov %rbp,%rax
a4da(1): pop %rbx
a4db(1): pop %rbp
a4dc(2): pop %r12
a4de(2): pop %r13
a4e0(1): ret near (%rsp)
a4e1(7): nop 0x0(%rax)
a4e8(5): call 0xffff74b8(%rip)
a4ed(3): mov (%rax),%r13d
a4f0(3): mov %rax,%r12
a4f3(2): mov %ebx,%edi
a4f5(5): call 0xffff765b(%rip)
a4fa(3): mov %rbp,%rax
a4fd(4): mov %r13d,(%r12)
a501(4): add $0x8,%rsp
a505(1): pop %rbx
a506(1): pop %rbp
a507(2): pop %r12
a509(2): pop %r13
a50b(1): ret near (%rsp)
a50c(4): nop 0x0(%rax)
a510(4): add $0x8,%rsp
a514(2): xor %ebp,%ebp
a516(1): pop %rbx
a517(3): mov %rbp,%rax
a51a(1): pop %rbp
a51b(2): pop %r12
a51d(2): pop %r13
a51f(1): ret near (%rsp)

"fd_safer" :
a520(2): push %r13
a522(2): push %r12
a524(1): push %rbp
a525(1): push %rbx
a526(2): mov %edi,%ebx
a528(4): sub $0x8,%rsp
a52c(3): cmp $0x2,%edi
a52f(2): jnbe 0x23(%rip)
a531(5): call 0x32f(%rip)
a536(3): mov %eax,%r12d
a539(5): call 0xffff7467(%rip)
a53e(3): mov (%rax),%r13d
a541(3): mov %rax,%rbp
a544(2): mov %ebx,%edi
a546(5): call 0xffff760a(%rip)
a54b(3): mov %r12d,%ebx
a54e(4): mov %r13d,0x0(%rbp)
a552(4): add $0x8,%rsp
a556(2): mov %ebx,%eax
a558(1): pop %rbx
a559(1): pop %rbp
a55a(2): pop %r12
a55c(2): pop %r13
a55e(1): ret near (%rsp)

"rpl_fclose" :
a560(2): push %r12
a562(1): push %rbp
a563(1): push %rbx
a564(3): mov %rdi,%rbx
a567(5): call 0xffff7689(%rip)
a56c(2): test %eax,%eax
a56e(3): mov %rbx,%rdi
a571(2): js 0x56(%rip)
a573(5): call 0xffff76ed(%rip)
a578(2): test %eax,%eax
a57a(2): jnz 0x2e(%rip)
a57c(3): mov %rbx,%rdi
a57f(5): call 0xffffc371(%rip)
a584(2): test %eax,%eax
a586(2): jz 0x3e(%rip)
a588(5): call 0xffff7418(%rip)
a58d(3): mov (%rax),%r12d
a590(3): mov %rbx,%rdi
a593(3): mov %rax,%rbp
a596(5): call 0xffff74aa(%rip)
a59b(3): test %r12d,%r12d
a59e(2): jnz 0x32(%rip)
a5a0(1): pop %rbx
a5a1(1): pop %rbp
a5a2(2): pop %r12
a5a4(1): ret near (%rsp)
a5a5(3): nop (%rax)
a5a8(3): mov %rbx,%rdi
a5ab(5): call 0xffff7645(%rip)
a5b0(2): xor %esi,%esi
a5b2(5): mov $0x1,%edx
a5b7(2): mov %eax,%edi
a5b9(5): call 0xffff7557(%rip)
a5be(4): cmp $0xffffffff,%rax
a5c2(2): jnz 0xffffffba(%rip)
a5c4(3): mov %rbx,%rdi
a5c7(1): pop %rbx
a5c8(1): pop %rbp
a5c9(2): pop %r12
a5cb(5): jmp 0xffff7475(%rip)
a5d0(4): mov %r12d,0x0(%rbp)
a5d4(5): mov $0xffffffff,%eax
a5d9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
a5e0(2): push %r12
a5e2(1): push %rbp
a5e3(2): mov %edi,%ebp
a5e5(1): push %rbx
a5e6(4): sub $0x50,%rsp
a5ea(9): mov $0x28,%rax
a5f3(5): mov %rax,0x18(%rsp)
a5f8(2): xor %eax,%eax
a5fa(5): lea 0x70(%rsp),%rax
a5ff(2): test %esi,%esi
a601(5): mov %rdx,0x30(%rsp)
a606(5): mov %rcx,0x38(%rsp)
a60b(5): mov %r8,0x40(%rsp)
a610(5): mov %rax,0x8(%rsp)
a615(5): lea 0x20(%rsp),%rax
a61a(5): mov %r9,0x48(%rsp)
a61f(7): mov $0x10,(%rsp)
a626(5): mov %rax,0x10(%rsp)
a62b(6): jz 0x207(%rip)
a631(6): cmp $0x406,%esi
a637(2): jnz 0x49(%rip)
a639(5): mov 0x10(%rsp),%rax
a63e(7): cmp $0x0,0x204c17(%rip)
a645(7): mov $0x18,(%rsp)
a64c(4): mov 0x10(%rax),%r12d
a650(3): mov %r12d,%edx
a653(6): js 0x130(%rip)
a659(2): xor %eax,%eax
a65b(5): mov $0x406,%esi
a660(5): call 0xffff73c0(%rip)
a665(2): test %eax,%eax
a667(2): mov %eax,%ebx
a669(6): js 0x18f(%rip)
a66f(a): mov $0x1,0x204be3(%rip)
a679(2): jmp 0x47(%rip)
a67b(5): nop 0x0(%rax,%rax,1)
a680(3): cmp $0xb,%esi
a683(2): jz 0x2d(%rip)
a685(2): jnle 0x5b(%rip)
a687(3): cmp $0x4,%esi
a68a(6): jz 0xd6(%rip)
a690(6): jnle 0xc0(%rip)
a696(3): cmp $0x2,%esi
a699(6): jz 0xc7(%rip)
a69f(2): jnle 0x11(%rip)
a6a1(3): cmp $0x1,%esi
a6a4(2): jnz 0x64(%rip)
a6a6(a): nop 0x0(%rax,%rax,1)
a6b0(2): mov %ebp,%edi
a6b2(2): xor %eax,%eax
a6b4(5): call 0xffff736c(%rip)
a6b9(2): mov %eax,%ebx
a6bb(5): nop 0x0(%rax,%rax,1)
a6c0(5): mov 0x18(%rsp),%rcx
a6c5(9): xor $0x28,%rcx
a6ce(2): mov %ebx,%eax
a6d0(6): jnz 0x15d(%rip)
a6d6(4): add $0x50,%rsp
a6da(1): pop %rbx
a6db(1): pop %rbp
a6dc(2): pop %r12
a6de(1): ret near (%rsp)
a6df(1): nop 
a6e0(6): cmp $0x407,%esi
a6e6(2): jnle 0x4a(%rip)
a6e8(6): cmp $0x406,%esi
a6ee(2): jnl 0x72(%rip)
a6f0(6): cmp $0x401,%esi
a6f6(2): jz 0xffffffba(%rip)
a6f8(6): cmp $0x402,%esi
a6fe(2): jz 0x62(%rip)
a700(6): cmp $0x400,%esi
a706(2): jz 0x5a(%rip)
a708(3): mov (%rsp),%eax
a70b(3): cmp $0x2f,%eax
a70e(6): jnbe 0x13c(%rip)
a714(5): add 0x10(%rsp),%rax
a719(3): mov (%rax),%rdx
a71c(2): mov %ebp,%edi
a71e(2): xor %eax,%eax
a720(5): call 0xffff7300(%rip)
a725(2): mov %eax,%ebx
a727(2): jmp 0xffffff99(%rip)
a729(7): nop 0x0(%rax)
a730(6): cmp $0x409,%esi
a736(2): jz 0x2a(%rip)
a738(6): jl 0xffffff78(%rip)
a73e(6): cmp $0x40a,%esi
a744(2): jnz 0xffffffc4(%rip)
a746(5): jmp 0xffffff6a(%rip)
a74b(5): nop 0x0(%rax,%rax,1)
a750(3): cmp $0x9,%esi
a753(6): jz 0xffffff5d(%rip)
a759(2): jnle 0x7(%rip)
a75b(3): cmp $0x8,%esi
a75e(2): jnz 0xffffffaa(%rip)
a760(3): mov (%rsp),%eax
a763(3): cmp $0x2f,%eax
a766(6): jnbe 0xee(%rip)
a76c(5): add 0x10(%rsp),%rax
a771(2): mov (%rax),%edx
a773(2): mov %ebp,%edi
a775(2): xor %eax,%eax
a777(5): call 0xffff72a9(%rip)
a77c(2): mov %eax,%ebx
a77e(5): jmp 0xffffff42(%rip)
a783(2): xor %esi,%esi
a785(2): xor %eax,%eax
a787(5): call 0xffff7299(%rip)
a78c(2): test %eax,%eax
a78e(2): mov %eax,%ebx
a790(6): js 0xffffff30(%rip)
a796(7): cmp $0xff,0x204abf(%rip)
a79d(6): jnz 0xffffff23(%rip)
a7a3(2): xor %eax,%eax
a7a5(5): mov $0x1,%esi
a7aa(2): mov %ebx,%edi
a7ac(5): call 0xffff7274(%rip)
a7b1(2): test %eax,%eax
a7b3(2): js 0x1e(%rip)
a7b5(3): or $0x1,%eax
a7b8(5): mov $0x2,%esi
a7bd(2): mov %ebx,%edi
a7bf(2): mov %eax,%edx
a7c1(2): xor %eax,%eax
a7c3(5): call 0xffff725d(%rip)
a7c8(3): cmp $0xff,%eax
a7cb(6): jnz 0xfffffef5(%rip)
a7d1(5): call 0xffff71cf(%rip)
a7d6(3): mov (%rax),%r12d
a7d9(3): mov %rax,%rbp
a7dc(2): mov %ebx,%edi
a7de(5): call 0xffff7372(%rip)
a7e3(5): mov $0xffffffff,%ebx
a7e8(4): mov %r12d,0x0(%rbp)
a7ec(5): jmp 0xfffffed4(%rip)
a7f1(7): nop 0x0(%rax)
a7f8(5): call 0xffff71a8(%rip)
a7fd(3): cmp $0x16,(%rax)
a800(6): jnz 0xfffffe6f(%rip)
a806(2): xor %esi,%esi
a808(2): xor %eax,%eax
a80a(3): mov %r12d,%edx
a80d(2): mov %ebp,%edi
a80f(5): call 0xffff7211(%rip)
a814(2): test %eax,%eax
a816(2): mov %eax,%ebx
a818(6): js 0xfffffea8(%rip)
a81e(a): mov $0xffffffff,0x204a34(%rip)
a828(5): jmp 0xffffff7b(%rip)
a82d(5): call 0xffff7283(%rip)
a832(5): mov 0x10(%rsp),%rax
a837(2): xor %esi,%esi
a839(3): mov 0x10(%rax),%edx
a83c(2): xor %eax,%eax
a83e(5): call 0xffff71e2(%rip)
a843(2): mov %eax,%ebx
a845(5): jmp 0xfffffe7b(%rip)
a84a(5): mov 0x8(%rsp),%rax
a84f(5): jmp 0xfffffeca(%rip)
a854(5): mov 0x8(%rsp),%rax
a859(5): jmp 0xffffff18(%rip)

"dup_safer" :
a860(5): mov $0x3,%edx
a865(2): xor %esi,%esi
a867(2): xor %eax,%eax
a869(5): jmp 0xfffffd77(%rip)

"__libc_csu_init" :
a870(2): push %r15
a872(2): push %r14
a874(3): mov %rdx,%r15
a877(2): push %r13
a879(2): push %r12
a87b(7): lea 0x20410e(%rip),%r12
a882(1): push %rbp
a883(7): lea 0x20410e(%rip),%rbp
a88a(1): push %rbx
a88b(3): mov %edi,%r13d
a88e(3): mov %rsi,%r14
a891(3): sub %r12,%rbp
a894(4): sub $0x8,%rsp
a898(4): sar $0x3,%rbp
a89c(5): call 0xffff70c4(%rip)
a8a1(3): test %rbp,%rbp
a8a4(2): jz 0x22(%rip)
a8a6(2): xor %ebx,%ebx
a8a8(8): nop 0x0(%rax,%rax,1)
a8b0(3): mov %r15,%rdx
a8b3(3): mov %r14,%rsi
a8b6(3): mov %r13d,%edi
a8b9(4): call 0x0(%r12,%rbx,8)
a8bd(4): add $0x1,%rbx
a8c1(3): cmp %rbx,%rbp
a8c4(2): jnz 0xffffffec(%rip)
a8c6(4): add $0x8,%rsp
a8ca(1): pop %rbx
a8cb(1): pop %rbp
a8cc(2): pop %r12
a8ce(2): pop %r13
a8d0(2): pop %r14
a8d2(2): pop %r15
a8d4(1): ret near (%rsp)

"atexit" :
a8f0(7): mov 0x204711(%rip),%rdx
a8f7(2): xor %esi,%esi
a8f9(5): jmp 0xffff7437(%rip)

"_fini" :
a900(4): sub $0x8,%rsp
a904(4): add $0x8,%rsp
a908(1): ret near (%rsp)

