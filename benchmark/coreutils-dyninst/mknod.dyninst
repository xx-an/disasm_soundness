
"free@plt" :
13c0(6): jmp 0x206a9a(%rip)
13c6(5): push $0x0

"abort@plt" :
13d0(6): jmp 0x206a92(%rip)
13d6(5): push $0x1

"__errno_location@plt" :
13e0(6): jmp 0x206a8a(%rip)
13e6(5): push $0x2

"strncmp@plt" :
13f0(6): jmp 0x206a82(%rip)
13f6(5): push $0x3

"_exit@plt" :
1400(6): jmp 0x206a7a(%rip)
1406(5): push $0x4

"__fpending@plt" :
1410(6): jmp 0x206a72(%rip)
1416(5): push $0x5

"textdomain@plt" :
1420(6): jmp 0x206a6a(%rip)
1426(5): push $0x6

"fclose@plt" :
1430(6): jmp 0x206a62(%rip)
1436(5): push $0x7

"bindtextdomain@plt" :
1440(6): jmp 0x206a5a(%rip)
1446(5): push $0x8

"dcgettext@plt" :
1450(6): jmp 0x206a52(%rip)
1456(5): push $0x9

"__ctype_get_mb_cur_max@plt" :
1460(6): jmp 0x206a4a(%rip)
1466(5): push $0xa

"strlen@plt" :
1470(6): jmp 0x206a42(%rip)
1476(5): push $0xb

"__stack_chk_fail@plt" :
1480(6): jmp 0x206a3a(%rip)
1486(5): push $0xc

"getopt_long@plt" :
1490(6): jmp 0x206a32(%rip)
1496(5): push $0xd

"mbrtowc@plt" :
14a0(6): jmp 0x206a2a(%rip)
14a6(5): push $0xe

"strchr@plt" :
14b0(6): jmp 0x206a22(%rip)
14b6(5): push $0xf

"strrchr@plt" :
14c0(6): jmp 0x206a1a(%rip)
14c6(5): push $0x10

"lseek@plt" :
14d0(6): jmp 0x206a12(%rip)
14d6(5): push $0x11

"__assert_fail@plt" :
14e0(6): jmp 0x206a0a(%rip)
14e6(5): push $0x12

"__strtoul_internal@plt" :
14f0(6): jmp 0x206a02(%rip)
14f6(5): push $0x13

"memset@plt" :
1500(6): jmp 0x2069fa(%rip)
1506(5): push $0x14

"memcmp@plt" :
1510(6): jmp 0x2069f2(%rip)
1516(5): push $0x15

"fputs_unlocked@plt" :
1520(6): jmp 0x2069ea(%rip)
1526(5): push $0x16

"calloc@plt" :
1530(6): jmp 0x2069e2(%rip)
1536(5): push $0x17

"mkfifo@plt" :
1540(6): jmp 0x2069da(%rip)
1546(5): push $0x18

"umask@plt" :
1550(6): jmp 0x2069d2(%rip)
1556(5): push $0x19

"memcpy@plt" :
1560(6): jmp 0x2069ca(%rip)
1566(5): push $0x1a

"__xmknod@plt" :
1570(6): jmp 0x2069c2(%rip)
1576(5): push $0x1b

"fileno@plt" :
1580(6): jmp 0x2069ba(%rip)
1586(5): push $0x1c

"__xstat@plt" :
1590(6): jmp 0x2069b2(%rip)
1596(5): push $0x1d

"malloc@plt" :
15a0(6): jmp 0x2069aa(%rip)
15a6(5): push $0x1e

"fflush@plt" :
15b0(6): jmp 0x2069a2(%rip)
15b6(5): push $0x1f

"nl_langinfo@plt" :
15c0(6): jmp 0x20699a(%rip)
15c6(5): push $0x20

"__freading@plt" :
15d0(6): jmp 0x206992(%rip)
15d6(5): push $0x21

"realloc@plt" :
15e0(6): jmp 0x20698a(%rip)
15e6(5): push $0x22

"setlocale@plt" :
15f0(6): jmp 0x206982(%rip)
15f6(5): push $0x23

"__printf_chk@plt" :
1600(6): jmp 0x20697a(%rip)
1606(5): push $0x24

"chmod@plt" :
1610(6): jmp 0x206972(%rip)
1616(5): push $0x25

"error@plt" :
1620(6): jmp 0x20696a(%rip)
1626(5): push $0x26

"fseeko@plt" :
1630(6): jmp 0x206962(%rip)
1636(5): push $0x27

"__cxa_atexit@plt" :
1640(6): jmp 0x20695a(%rip)
1646(5): push $0x28

"exit@plt" :
1650(6): jmp 0x206952(%rip)
1656(5): push $0x29

"fwrite@plt" :
1660(6): jmp 0x20694a(%rip)
1666(5): push $0x2a

"__fprintf_chk@plt" :
1670(6): jmp 0x206942(%rip)
1676(5): push $0x2b

"mbsinit@plt" :
1680(6): jmp 0x20693a(%rip)
1686(5): push $0x2c

"iswprint@plt" :
1690(6): jmp 0x206932(%rip)
1696(5): push $0x2d

"__ctype_b_loc@plt" :
16a0(6): jmp 0x20692a(%rip)
16a6(5): push $0x2e

".plt.got" :
16b0(6): jmp 0x206942(%rip)
16b6(2): nop 

"_init" :
1390(4): sub $0x8,%rsp
1394(7): mov 0x206c4d(%rip),%rax
139b(3): test %rax,%rax
139e(2): jz 0x4(%rip)
13a0(2): call %rax
13a2(4): add $0x8,%rsp
13a6(1): ret near (%rsp)

"main" :
16c0(2): push %r15
16c2(2): push %r14
16c4(2): push %r13
16c6(2): push %r12
16c8(7): lea 0x206491(%rip),%r12
16cf(1): push %rbp
16d0(1): push %rbx
16d1(3): movsxd %edi,%rbp
16d4(3): mov %rsi,%rbx
16d7(3): xor %r13d,%r13d
16da(4): sub $0x28,%rsp
16de(3): mov (%rsi),%rdi
16e1(9): mov $0x28,%rax
16ea(5): mov %rax,0x18(%rsp)
16ef(2): xor %eax,%eax
16f1(5): call 0x120f(%rip)
16f6(7): lea 0x4da4(%rip),%rsi
16fd(5): mov $0x6,%edi
1702(5): call 0xfffffeee(%rip)
1707(7): lea 0x401f(%rip),%rsi
170e(7): lea 0x3fef(%rip),%rdi
1715(5): call 0xfffffd2b(%rip)
171a(7): lea 0x3fe3(%rip),%rdi
1721(5): call 0xfffffcff(%rip)
1726(7): lea 0xb73(%rip),%rdi
172d(5): call 0x3f23(%rip)
1732(7): lea 0x401c(%rip),%rdx
1739(3): xor %r8d,%r8d
173c(3): mov %r12,%rcx
173f(3): mov %rbx,%rsi
1742(2): mov %ebp,%edi
1744(5): call 0xfffffd4c(%rip)
1749(3): cmp $0xff,%eax
174c(6): jz 0xa8(%rip)
1752(5): cmp $0xffffff7e,%eax
1757(6): jz 0x3e5(%rip)
175d(2): jle 0x23(%rip)
175f(3): cmp $0x5a,%eax
1762(2): jz 0x5e(%rip)
1764(3): cmp $0x6d,%eax
1767(6): jnz 0x282(%rip)
176d(7): mov 0x206924(%rip),%r13
1774(2): jmp 0xffffffbe(%rip)
1776(a): nop 0x0(%rax,%rax,1)
1780(5): cmp $0xffffff7d,%eax
1785(6): jnz 0x264(%rip)
178b(7): mov 0x2068f6(%rip),%rdi
1792(7): mov 0x206877(%rip),%rcx
1799(7): lea 0x3fa5(%rip),%r8
17a0(7): lea 0x3f59(%rip),%rdx
17a7(7): lea 0x3ed6(%rip),%rsi
17ae(3): xor %r9d,%r9d
17b1(2): xor %eax,%eax
17b3(5): call 0x333d(%rip)
17b8(2): xor %edi,%edi
17ba(5): call 0xfffffe96(%rip)
17bf(1): nop 
17c0(8): cmp $0x0,0x2068d0(%rip)
17c8(6): jz 0xffffff6a(%rip)
17ce(7): lea 0x4583(%rip),%rsi
17d5(2): xor %edi,%edi
17d7(5): mov $0x5,%edx
17dc(5): call 0xfffffc74(%rip)
17e1(2): xor %esi,%esi
17e3(3): mov %rax,%rdx
17e6(2): xor %edi,%edi
17e8(2): xor %eax,%eax
17ea(5): call 0xfffffe36(%rip)
17ef(5): jmp 0xffffff43(%rip)
17f4(3): test %r13,%r13
17f7(6): jz 0x314(%rip)
17fd(3): mov %r13,%rdi
1800(5): call 0xb50(%rip)
1805(3): test %rax,%rax
1808(3): mov %rax,%r14
180b(6): jz 0x50f(%rip)
1811(2): xor %edi,%edi
1813(5): call 0xfffffd3d(%rip)
1818(3): mov %eax,%r12d
181b(2): mov %eax,%edi
181d(5): call 0xfffffd33(%rip)
1822(3): xor %r8d,%r8d
1825(3): mov %r12d,%edx
1828(2): xor %esi,%esi
182a(3): mov %r14,%rcx
182d(5): mov $0x1b6,%edi
1832(5): call 0xf5e(%rip)
1837(3): mov %r14,%rdi
183a(3): mov %eax,%r12d
183d(5): call 0xfffffb83(%rip)
1842(7): test $0xfffffe00,%r12d
1849(6): jnz 0x4ad(%rip)
184f(7): movsxd 0x20683a(%rip),%rcx
1856(2): mov %ebp,%edx
1858(2): sub %ecx,%edx
185a(2): cmp %ebp,%ecx
185c(3): movsxd %edx,%rdx
185f(6): jnl 0xab(%rip)
1865(3): lea 0x1(%rcx),%eax
1868(2): cmp %ebp,%eax
186a(6): jnl 0x13a(%rip)
1870(3): movsxd %ecx,%rax
1873(5): mov 0x8(%rbx,%rax,8),%rsi
1878(3): cmp $0x70,(%rsi)
187b(6): jnz 0x129(%rip)
1881(4): cmp $0x1,%rdx
1885(6): jbe 0x37c(%rip)
188b(4): cmp $0x2,%rdx
188f(6): jbe 0x92(%rip)
1895(5): mov 0x10(%rbx,%rax,8),%rdi
189a(5): call 0x2d76(%rip)
189f(7): lea 0x3f19(%rip),%rsi
18a6(2): xor %edi,%edi
18a8(3): mov %rax,%rbx
18ab(5): mov $0x5,%edx
18b0(5): call 0xfffffba0(%rip)
18b5(2): xor %esi,%esi
18b7(3): mov %rax,%rdx
18ba(2): xor %edi,%edi
18bc(2): xor %eax,%eax
18be(3): mov %rbx,%rcx
18c1(5): call 0xfffffd5f(%rip)
18c6(6): sub 0x2067c4(%rip),%ebp
18cc(5): mov $0x5,%edx
18d1(7): lea 0x4538(%rip),%rsi
18d8(3): cmp $0x4,%ebp
18db(6): jnz 0x10e(%rip)
18e1(2): xor %edi,%edi
18e3(5): call 0xfffffb6d(%rip)
18e8(7): mov 0x2067d1(%rip),%rdi
18ef(7): lea 0x4b5a(%rip),%rdx
18f6(3): mov %rax,%rcx
18f9(5): mov $0x1,%esi
18fe(2): xor %eax,%eax
1900(5): call 0xfffffd70(%rip)
1905(5): jmp 0xe4(%rip)
190a(4): cmp $0x1,%rdx
190e(6): jbe 0x23f(%rip)
1914(4): cmp $0x2,%rdx
1918(6): jnz 0x22b(%rip)
191e(3): movsxd %ecx,%rax
1921(4): add $0x1,%rax
1925(4): mov 0x0(%rbx,%rax,8),%rdi
1929(8): lea 0x0(,%rax,8),%rdx
1931(3): movzx (%rdi),%eax
1934(2): cmp $0x63,%al
1936(6): jz 0xc5(%rip)
193c(6): jle 0x1da(%rip)
1942(2): cmp $0x70,%al
1944(6): jnz 0xaf(%rip)
194a(5): mov 0xfffffff8(%rbx,%rdx,1),%rdi
194f(3): mov %r12d,%esi
1952(5): call 0xfffffbee(%rip)
1957(2): test %eax,%eax
1959(6): jnz 0x2c6(%rip)
195f(3): test %r13,%r13
1962(2): jz 0x1d(%rip)
1964(7): movsxd 0x206725(%rip),%rax
196b(3): mov %r12d,%esi
196e(4): mov 0x0(%rbx,%rax,8),%rdi
1972(5): call 0xfffffc9e(%rip)
1977(2): test %eax,%eax
1979(6): jnz 0x2dd(%rip)
197f(2): xor %eax,%eax
1981(5): mov 0x18(%rsp),%rbx
1986(9): xor $0x28,%rbx
198f(6): jnz 0x362(%rip)
1995(4): add $0x28,%rsp
1999(1): pop %rbx
199a(1): pop %rbp
199b(2): pop %r12
199d(2): pop %r13
199f(2): pop %r14
19a1(2): pop %r15
19a3(1): ret near (%rsp)
19a4(4): cmp $0x3,%rdx
19a8(6): jbe 0x2f5(%rip)
19ae(4): cmp $0x4,%rdx
19b2(6): jbe 0xffffff6c(%rip)
19b8(5): mov 0x20(%rbx,%rcx,8),%rdi
19bd(5): call 0x2c53(%rip)
19c2(7): lea 0x3df6(%rip),%rsi
19c9(3): mov %rax,%rbx
19cc(5): mov $0x5,%edx
19d1(2): xor %edi,%edi
19d3(5): call 0xfffffa7d(%rip)
19d8(3): mov %rbx,%rcx
19db(3): mov %rax,%rdx
19de(2): xor %esi,%esi
19e0(2): xor %edi,%edi
19e2(2): xor %eax,%eax
19e4(5): call 0xfffffc3c(%rip)
19e9(5): mov $0x1,%edi
19ee(5): call 0x462(%rip)
19f3(2): cmp $0x75,%al
19f5(6): jnz 0x12e(%rip)
19fb(5): mov $0x2000,%ebp
1a00(5): mov 0x8(%rbx,%rdx,1),%r14
1a05(5): mov 0x10(%rbx,%rdx,1),%r15
1a0a(3): xor %r8d,%r8d
1a0d(2): xor %edx,%edx
1a0f(2): xor %esi,%esi
1a11(3): mov %rsp,%rcx
1a14(3): mov %r14,%rdi
1a17(5): call 0x34c9(%rip)
1a1c(2): test %eax,%eax
1a1e(6): jnz 0x187(%rip)
1a24(4): mov (%rsp),%rax
1a28(2): mov %eax,%edx
1a2a(3): cmp %rdx,%rax
1a2d(6): jnz 0x178(%rip)
1a33(5): lea 0x8(%rsp),%rcx
1a38(3): xor %r8d,%r8d
1a3b(2): xor %edx,%edx
1a3d(2): xor %esi,%esi
1a3f(3): mov %r15,%rdi
1a42(5): call 0x349e(%rip)
1a47(2): test %eax,%eax
1a49(6): jnz 0x12a(%rip)
1a4f(5): mov 0x8(%rsp),%rax
1a54(2): mov %eax,%edx
1a56(3): cmp %rdx,%rax
1a59(6): jnz 0x11a(%rip)
1a5f(4): mov (%rsp),%rcx
1a63(a): mov $0x-17592186044416,%rsi
1a6d(3): mov %rcx,%rdx
1a70(4): shl/sal $0x20,%rcx
1a74(4): shl/sal $0x8,%rdx
1a78(3): and %rsi,%rcx
1a7b(a): mov $0x17592184995840,%rsi
1a85(6): and $0xfff00,%edx
1a8b(3): or %rcx,%rdx
1a8e(3): mov %rax,%rcx
1a91(3): movzx %al,%eax
1a94(4): shl/sal $0xc,%rcx
1a98(3): and %rsi,%rcx
1a9b(3): or %rcx,%rdx
1a9e(3): or %rdx,%rax
1aa1(4): cmp $0xffffffff,%rax
1aa5(6): jz 0x132(%rip)
1aab(7): movsxd 0x2065de(%rip),%rdx
1ab2(5): lea 0x10(%rsp),%rcx
1ab7(2): xor %edi,%edi
1ab9(5): mov %rax,0x10(%rsp)
1abe(4): mov 0x0(%rbx,%rdx,8),%rsi
1ac2(2): mov %ebp,%edx
1ac4(3): or %r12d,%edx
1ac7(5): call 0xfffffaa9(%rip)
1acc(2): test %eax,%eax
1ace(6): jz 0xfffffe91(%rip)
1ad4(7): movsxd 0x2065b5(%rip),%rax
1adb(5): mov $0x3,%esi
1ae0(2): xor %edi,%edi
1ae2(4): mov 0x0(%rbx,%rax,8),%rdx
1ae6(5): call 0x295a(%rip)
1aeb(3): mov %rax,%rbx
1aee(5): call 0xfffff8f2(%rip)
1af3(2): mov (%rax),%esi
1af5(7): lea 0x43a0(%rip),%rdx
1afc(3): mov %rbx,%rcx
1aff(5): mov $0x1,%edi
1b04(2): xor %eax,%eax
1b06(5): call 0xfffffb1a(%rip)
1b0b(6): mov $0x1b6,%r12d
1b11(5): jmp 0xfffffd3e(%rip)
1b16(2): cmp $0x62,%al
1b18(5): mov $0x6000,%ebp
1b1d(6): jz 0xfffffee3(%rip)
1b23(5): call 0x2aed(%rip)
1b28(5): mov $0x5,%edx
1b2d(3): mov %rax,%rbx
1b30(7): lea 0x3c54(%rip),%rsi
1b37(5): jmp 0xfffffe9a(%rip)
1b3c(2): xor %edi,%edi
1b3e(5): call 0x312(%rip)
1b43(5): mov 0x10(%rbx,%rcx,8),%rdi
1b48(5): jmp 0xfffffd52(%rip)
1b4d(7): lea 0x3c12(%rip),%rsi
1b54(2): xor %edi,%edi
1b56(5): mov $0x5,%edx
1b5b(5): call 0xfffff8f5(%rip)
1b60(2): xor %esi,%esi
1b62(3): mov %rax,%rdx
1b65(2): xor %edi,%edi
1b67(2): xor %eax,%eax
1b69(5): call 0xfffffab7(%rip)
1b6e(5): jmp 0xfffffe7b(%rip)
1b73(3): mov %r15,%rdi
1b76(5): call 0x2a9a(%rip)
1b7b(7): lea 0x42e6(%rip),%rsi
1b82(3): mov %rax,%rbx
1b85(5): mov $0x5,%edx
1b8a(2): xor %edi,%edi
1b8c(5): call 0xfffff8c4(%rip)
1b91(3): mov %rbx,%rcx
1b94(3): mov %rax,%rdx
1b97(2): xor %esi,%esi
1b99(5): mov $0x1,%edi
1b9e(2): xor %eax,%eax
1ba0(5): call 0xfffffa80(%rip)
1ba5(3): mov %r14,%rdi
1ba8(5): call 0x2a68(%rip)
1bad(7): lea 0x4294(%rip),%rsi
1bb4(3): mov %rax,%rbx
1bb7(5): mov $0x5,%edx
1bbc(2): xor %edi,%edi
1bbe(5): call 0xfffff892(%rip)
1bc3(3): mov %rbx,%rcx
1bc6(3): mov %rax,%rdx
1bc9(2): xor %esi,%esi
1bcb(5): mov $0x1,%edi
1bd0(2): xor %eax,%eax
1bd2(5): call 0xfffffa4e(%rip)
1bd7(7): lea 0x3b98(%rip),%rsi
1bde(5): mov $0x5,%edx
1be3(2): xor %edi,%edi
1be5(5): call 0xfffff86b(%rip)
1bea(3): mov %r15,%r8
1bed(3): mov %rax,%rdx
1bf0(3): mov %r14,%rcx
1bf3(2): xor %esi,%esi
1bf5(5): mov $0x1,%edi
1bfa(2): xor %eax,%eax
1bfc(5): call 0xfffffa24(%rip)
1c01(5): mov 0xfffffff8(%rbx,%rbp,8),%rdi
1c06(5): call 0x2a0a(%rip)
1c0b(5): mov $0x5,%edx
1c10(3): mov %rax,%rbx
1c13(7): lea 0x3bb6(%rip),%rsi
1c1a(5): jmp 0xfffffdb7(%rip)
1c1f(7): movsxd 0x20646a(%rip),%rax
1c26(5): mov $0x3,%esi
1c2b(2): xor %edi,%edi
1c2d(4): mov 0x0(%rbx,%rax,8),%rdx
1c31(5): call 0x280f(%rip)
1c36(3): mov %rax,%rbx
1c39(5): call 0xfffff7a7(%rip)
1c3e(2): mov (%rax),%esi
1c40(7): lea 0x4255(%rip),%rdx
1c47(3): mov %rbx,%rcx
1c4a(5): mov $0x1,%edi
1c4f(2): xor %eax,%eax
1c51(5): call 0xfffff9cf(%rip)
1c56(7): movsxd 0x206433(%rip),%rax
1c5d(5): mov $0x4,%edi
1c62(4): mov 0x0(%rbx,%rax,8),%rsi
1c66(5): call 0x26da(%rip)
1c6b(7): lea 0x3b30(%rip),%rsi
1c72(5): mov $0x5,%edx
1c77(2): xor %edi,%edi
1c79(3): mov %rax,%rbp
1c7c(5): call 0xfffff7d4(%rip)
1c81(3): mov %rax,%rbx
1c84(5): call 0xfffff75c(%rip)
1c89(2): mov (%rax),%esi
1c8b(3): mov %rbp,%rcx
1c8e(3): mov %rbx,%rdx
1c91(5): mov $0x1,%edi
1c96(2): xor %eax,%eax
1c98(5): call 0xfffff988(%rip)
1c9d(3): movsxd %ebp,%rax
1ca0(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
1ca5(5): call 0x296b(%rip)
1caa(7): lea 0x3b1f(%rip),%rsi
1cb1(2): xor %edi,%edi
1cb3(3): mov %rax,%rbx
1cb6(5): mov $0x5,%edx
1cbb(5): call 0xfffff795(%rip)
1cc0(2): xor %esi,%esi
1cc2(3): mov %rax,%rdx
1cc5(2): xor %edi,%edi
1cc7(2): xor %eax,%eax
1cc9(3): mov %rbx,%rcx
1ccc(5): call 0xfffff954(%rip)
1cd1(6): sub 0x2063b9(%rip),%ebp
1cd7(3): cmp $0x2,%ebp
1cda(6): jnz 0xfffffd0f(%rip)
1ce0(5): mov $0x5,%edx
1ce5(7): lea 0x40ec(%rip),%rsi
1cec(5): jmp 0xfffffbf5(%rip)
1cf1(5): call 0xfffff78f(%rip)
1cf6(7): lea 0x40ab(%rip),%rsi
1cfd(5): mov $0x5,%edx
1d02(2): xor %edi,%edi
1d04(5): call 0xfffff74c(%rip)
1d09(2): xor %esi,%esi
1d0b(3): mov %rax,%rdx
1d0e(5): mov $0x1,%edi
1d13(2): xor %eax,%eax
1d15(5): call 0xfffff90b(%rip)
1d1a(7): lea 0x3a38(%rip),%rsi
1d21(5): mov $0x5,%edx
1d26(2): xor %edi,%edi
1d28(5): call 0xfffff728(%rip)
1d2d(2): xor %esi,%esi
1d2f(3): mov %rax,%rdx
1d32(5): mov $0x1,%edi
1d37(2): xor %eax,%eax
1d39(5): call 0xfffff8e7(%rip)
1d3e(2): nop 
1d40(2): xor %ebp,%ebp
1d42(3): mov %rdx,%r9
1d45(1): pop %rsi
1d46(3): mov %rsp,%rdx
1d49(4): and $0xfffffff0,%rsp
1d4d(1): push %rax
1d4e(1): push %rsp
1d4f(7): lea 0x38ea(%rip),%r8
1d56(7): lea 0x3873(%rip),%rcx
1d5d(7): lea 0xfffff95c(%rip),%rdi
1d64(6): call 0x206276(%rip)
1d6a(1): hlt 

"_start" :
1d40(2): xor %ebp,%ebp
1d42(3): mov %rdx,%r9
1d45(1): pop %rsi
1d46(3): mov %rsp,%rdx
1d49(4): and $0xfffffff0,%rsp
1d4d(1): push %rax
1d4e(1): push %rsp
1d4f(7): lea 0x38ea(%rip),%r8
1d56(7): lea 0x3873(%rip),%rcx
1d5d(7): lea 0xfffff95c(%rip),%rdi
1d64(6): call 0x206276(%rip)
1d6a(1): hlt 

"deregister_tm_clones" :
1d70(7): lea 0x206309(%rip),%rdi
1d77(1): push %rbp
1d78(7): lea 0x206301(%rip),%rax
1d7f(3): cmp %rdi,%rax
1d82(3): mov %rsp,%rbp
1d85(2): jz 0x1b(%rip)
1d87(7): mov 0x20624a(%rip),%rax
1d8e(3): test %rax,%rax
1d91(2): jz 0xf(%rip)
1d93(1): pop %rbp
1d94(2): jmp %rax
1d96(a): nop 0x0(%rax,%rax,1)
1da0(1): pop %rbp
1da1(1): ret near (%rsp)

"register_tm_clones" :
1db0(7): lea 0x2062c9(%rip),%rdi
1db7(7): lea 0x2062c2(%rip),%rsi
1dbe(1): push %rbp
1dbf(3): sub %rdi,%rsi
1dc2(3): mov %rsp,%rbp
1dc5(4): sar $0x3,%rsi
1dc9(3): mov %rsi,%rax
1dcc(4): shr $0x3f,%rax
1dd0(3): add %rax,%rsi
1dd3(3): sar $0x1,%rsi
1dd6(2): jz 0x1a(%rip)
1dd8(7): mov 0x206211(%rip),%rax
1ddf(3): test %rax,%rax
1de2(2): jz 0xe(%rip)
1de4(1): pop %rbp
1de5(2): jmp %rax
1de7(9): nop 0x0(%rax,%rax,1)
1df0(1): pop %rbp
1df1(1): ret near (%rsp)

"__do_global_dtors_aux" :
1e00(7): cmp $0x0,0x2062c1(%rip)
1e07(2): jnz 0x31(%rip)
1e09(8): cmp $0x0,0x2061e7(%rip)
1e11(1): push %rbp
1e12(3): mov %rsp,%rbp
1e15(2): jz 0xe(%rip)
1e17(7): mov 0x2061ea(%rip),%rdi
1e1e(5): call 0xfffff892(%rip)
1e23(5): call 0xffffff4d(%rip)
1e28(7): mov $0x1,0x206299(%rip)
1e2f(1): pop %rbp
1e30(1): ret near (%rsp)
1e31(7): nop 0x0(%rax)
1e38(2): REP ret near (%rsp)

"frame_dummy" :
1e40(1): push %rbp
1e41(3): mov %rsp,%rbp
1e44(1): pop %rbp
1e45(5): jmp 0xffffff6b(%rip)

"usage" :
1e50(2): push %r13
1e52(2): push %r12
1e54(5): mov $0x5,%edx
1e59(1): push %rbp
1e5a(1): push %rbx
1e5b(2): mov %edi,%ebp
1e5d(7): sub $0x88,%rsp
1e64(7): mov 0x206275(%rip),%rbx
1e6b(9): mov $0x28,%rax
1e74(5): mov %rax,0x78(%rsp)
1e79(2): xor %eax,%eax
1e7b(2): test %edi,%edi
1e7d(2): jz 0x30(%rip)
1e7f(7): lea 0x397a(%rip),%rsi
1e86(2): xor %edi,%edi
1e88(5): call 0xfffff5c8(%rip)
1e8d(7): mov 0x20622c(%rip),%rdi
1e94(3): mov %rax,%rdx
1e97(3): mov %rbx,%rcx
1e9a(5): mov $0x1,%esi
1e9f(2): xor %eax,%eax
1ea1(5): call 0xfffff7cf(%rip)
1ea6(2): mov %ebp,%edi
1ea8(5): call 0xfffff7a8(%rip)
1ead(7): lea 0x3974(%rip),%rsi
1eb4(2): xor %edi,%edi
1eb6(5): call 0xfffff59a(%rip)
1ebb(3): mov %rbx,%rdx
1ebe(3): mov %rax,%rsi
1ec1(5): mov $0x1,%edi
1ec6(2): xor %eax,%eax
1ec8(5): call 0xfffff738(%rip)
1ecd(7): mov 0x2061b4(%rip),%rbx
1ed4(7): lea 0x397d(%rip),%rsi
1edb(5): mov $0x5,%edx
1ee0(2): xor %edi,%edi
1ee2(5): call 0xfffff56e(%rip)
1ee7(3): mov %rbx,%rsi
1eea(3): mov %rax,%rdi
1eed(5): call 0xfffff633(%rip)
1ef2(7): mov 0x20618f(%rip),%rbx
1ef9(7): lea 0x3990(%rip),%rsi
1f00(5): mov $0x5,%edx
1f05(2): xor %edi,%edi
1f07(5): call 0xfffff549(%rip)
1f0c(3): mov %rbx,%rsi
1f0f(3): mov %rax,%rdi
1f12(5): call 0xfffff60e(%rip)
1f17(7): mov 0x20616a(%rip),%rbx
1f1e(7): lea 0x39bb(%rip),%rsi
1f25(5): mov $0x5,%edx
1f2a(2): xor %edi,%edi
1f2c(5): call 0xfffff524(%rip)
1f31(3): mov %rbx,%rsi
1f34(3): mov %rax,%rdi
1f37(5): call 0xfffff5e9(%rip)
1f3c(7): mov 0x206145(%rip),%rbx
1f43(7): lea 0x39e6(%rip),%rsi
1f4a(5): mov $0x5,%edx
1f4f(2): xor %edi,%edi
1f51(5): call 0xfffff4ff(%rip)
1f56(3): mov %rbx,%rsi
1f59(3): mov %rax,%rdi
1f5c(5): call 0xfffff5c4(%rip)
1f61(7): mov 0x206120(%rip),%rbx
1f68(7): lea 0x3a91(%rip),%rsi
1f6f(5): mov $0x5,%edx
1f74(2): xor %edi,%edi
1f76(5): call 0xfffff4da(%rip)
1f7b(3): mov %rbx,%rsi
1f7e(3): mov %rax,%rdi
1f81(5): call 0xfffff59f(%rip)
1f86(7): mov 0x2060fb(%rip),%rbx
1f8d(7): lea 0x3a9c(%rip),%rsi
1f94(5): mov $0x5,%edx
1f99(2): xor %edi,%edi
1f9b(5): call 0xfffff4b5(%rip)
1fa0(3): mov %rbx,%rsi
1fa3(3): mov %rax,%rdi
1fa6(5): call 0xfffff57a(%rip)
1fab(7): mov 0x2060d6(%rip),%rbx
1fb2(7): lea 0x3aaf(%rip),%rsi
1fb9(5): mov $0x5,%edx
1fbe(2): xor %edi,%edi
1fc0(5): call 0xfffff490(%rip)
1fc5(3): mov %rbx,%rsi
1fc8(3): mov %rax,%rdi
1fcb(5): call 0xfffff555(%rip)
1fd0(7): mov 0x2060b1(%rip),%rbx
1fd7(7): lea 0x3b92(%rip),%rsi
1fde(5): mov $0x5,%edx
1fe3(2): xor %edi,%edi
1fe5(5): call 0xfffff46b(%rip)
1fea(3): mov %rbx,%rsi
1fed(3): mov %rax,%rdi
1ff0(7): lea 0x368d(%rip),%rbx
1ff7(5): call 0xfffff529(%rip)
1ffc(7): lea 0x3bed(%rip),%rsi
2003(5): mov $0x5,%edx
2008(2): xor %edi,%edi
200a(5): call 0xfffff446(%rip)
200f(7): lea 0x366e(%rip),%rdx
2016(3): mov %rax,%rsi
2019(5): mov $0x1,%edi
201e(2): xor %eax,%eax
2020(5): call 0xfffff5e0(%rip)
2025(7): lea 0x365e(%rip),%rax
202c(7): lea 0x3698(%rip),%rcx
2033(9): mov $0x0,0x60(%rsp)
203c(9): mov $0x0,0x68(%rsp)
2045(3): mov %rsp,%rdx
2048(4): mov %rax,(%rsp)
204c(7): lea 0x3639(%rip),%rax
2053(5): mov %rcx,0x30(%rsp)
2058(7): lea 0x3676(%rip),%rcx
205f(5): mov %rax,0x8(%rsp)
2064(7): lea 0x3699(%rip),%rax
206b(5): mov %rcx,0x40(%rsp)
2070(7): lea 0x3668(%rip),%rcx
2077(5): mov %rax,0x10(%rsp)
207c(7): lea 0x3619(%rip),%rax
2083(5): mov %rcx,0x50(%rsp)
2088(5): mov %rax,0x18(%rsp)
208d(7): lea 0x361e(%rip),%rax
2094(5): mov %rax,0x20(%rsp)
2099(7): lea 0x361c(%rip),%rax
20a0(5): mov %rax,0x28(%rsp)
20a5(5): mov %rax,0x38(%rsp)
20aa(5): mov %rax,0x48(%rsp)
20af(5): mov %rax,0x58(%rsp)
20b4(4): nop 0x0(%rax)
20b8(4): add $0x10,%rdx
20bc(3): mov (%rdx),%rdi
20bf(3): test %rdi,%rdi
20c2(2): jz 0x15(%rip)
20c4(5): mov $0x6,%ecx
20c9(3): mov %rbx,%rsi
20cc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
20ce(3): setnbe %al
20d1(2): sbb $0x0,%al
20d3(2): test %al,%al
20d5(2): jnz 0xffffffe3(%rip)
20d7(4): mov 0x8(%rdx),%r12
20db(2): xor %edi,%edi
20dd(5): mov $0x5,%edx
20e2(7): lea 0x3600(%rip),%rsi
20e9(3): test %r12,%r12
20ec(6): jz 0xc7(%rip)
20f2(5): call 0xfffff35e(%rip)
20f7(7): lea 0x3bb2(%rip),%rcx
20fe(7): lea 0x35fb(%rip),%rdx
2105(3): mov %rax,%rsi
2108(5): mov $0x1,%edi
210d(2): xor %eax,%eax
210f(5): call 0xfffff4f1(%rip)
2114(2): xor %esi,%esi
2116(5): mov $0x5,%edi
211b(5): call 0xfffff4d5(%rip)
2120(3): test %rax,%rax
2123(2): jz 0x1e(%rip)
2125(7): lea 0x35e2(%rip),%rsi
212c(5): mov $0x3,%edx
2131(3): mov %rax,%rdi
2134(5): call 0xfffff2bc(%rip)
2139(2): test %eax,%eax
213b(6): jnz 0x10d(%rip)
2141(7): lea 0x35ca(%rip),%rsi
2148(2): xor %edi,%edi
214a(5): mov $0x5,%edx
214f(5): call 0xfffff301(%rip)
2154(7): lea 0x3529(%rip),%rcx
215b(7): lea 0x3b4e(%rip),%rdx
2162(3): mov %rax,%rsi
2165(5): mov $0x1,%edi
216a(2): xor %eax,%eax
216c(5): call 0xfffff494(%rip)
2171(3): cmp %rbx,%r12
2174(7): lea 0x352b(%rip),%rcx
217b(7): lea 0x431f(%rip),%rbx
2182(4): cmove %rcx,%rbx
2186(7): lea 0x3b93(%rip),%rsi
218d(2): xor %edi,%edi
218f(5): mov $0x5,%edx
2194(5): call 0xfffff2bc(%rip)
2199(3): mov %rbx,%rcx
219c(3): mov %rax,%rsi
219f(3): mov %r12,%rdx
21a2(5): mov $0x1,%edi
21a7(2): xor %eax,%eax
21a9(5): call 0xfffff457(%rip)
21ae(5): jmp 0xfffffcf8(%rip)
21b3(5): call 0xfffff29d(%rip)
21b8(7): lea 0x3af1(%rip),%rcx
21bf(7): lea 0x353a(%rip),%rdx
21c6(3): mov %rax,%rsi
21c9(5): mov $0x1,%edi
21ce(2): xor %eax,%eax
21d0(5): call 0xfffff430(%rip)
21d5(2): xor %esi,%esi
21d7(5): mov $0x5,%edi
21dc(5): call 0xfffff414(%rip)
21e1(3): test %rax,%rax
21e4(2): jz 0x1a(%rip)
21e6(7): lea 0x3521(%rip),%rsi
21ed(5): mov $0x3,%edx
21f2(3): mov %rax,%rdi
21f5(5): call 0xfffff1fb(%rip)
21fa(2): test %eax,%eax
21fc(2): jnz 0x45(%rip)
21fe(7): lea 0x350d(%rip),%rsi
2205(5): mov $0x5,%edx
220a(2): xor %edi,%edi
220c(7): lea 0x3471(%rip),%r12
2213(7): lea 0x348c(%rip),%rbx
221a(5): call 0xfffff236(%rip)
221f(7): lea 0x345e(%rip),%rcx
2226(7): lea 0x3a83(%rip),%rdx
222d(3): mov %rax,%rsi
2230(5): mov $0x1,%edi
2235(2): xor %eax,%eax
2237(5): call 0xfffff3c9(%rip)
223c(5): jmp 0xffffff4a(%rip)
2241(7): lea 0x343c(%rip),%r12
2248(7): mov 0x205e39(%rip),%r13
224f(7): lea 0x3a82(%rip),%rsi
2256(2): xor %edi,%edi
2258(5): mov $0x5,%edx
225d(5): call 0xfffff1f3(%rip)
2262(3): mov %r13,%rsi
2265(3): mov %rax,%rdi
2268(5): call 0xfffff2b8(%rip)
226d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2280(7): mov %rdi,0x205e51(%rip)
2287(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2290(7): mov %dil,0x205e39(%rip)
2297(1): ret near (%rsp)

"close_stdout" :
22a0(1): push %rbp
22a1(1): push %rbx
22a2(4): sub $0x8,%rsp
22a6(7): mov 0x205ddb(%rip),%rdi
22ad(5): call 0x30e3(%rip)
22b2(2): test %eax,%eax
22b4(2): jz 0x18(%rip)
22b6(5): call 0xfffff12a(%rip)
22bb(7): cmp $0x0,0x205e0e(%rip)
22c2(3): mov %rax,%rbx
22c5(2): jz 0x1e(%rip)
22c7(3): cmp $0x20,(%rax)
22ca(2): jnz 0x19(%rip)
22cc(7): mov 0x205ded(%rip),%rdi
22d3(5): call 0x30bd(%rip)
22d8(2): test %eax,%eax
22da(2): jnz 0x48(%rip)
22dc(4): add $0x8,%rsp
22e0(1): pop %rbx
22e1(1): pop %rbp
22e2(1): ret near (%rsp)
22e3(7): lea 0x3ba2(%rip),%rsi
22ea(2): xor %edi,%edi
22ec(5): mov $0x5,%edx
22f1(5): call 0xfffff15f(%rip)
22f6(7): mov 0x205ddb(%rip),%rdi
22fd(3): mov %rax,%rbp
2300(3): test %rdi,%rdi
2303(2): jz 0x2a(%rip)
2305(5): call 0x210b(%rip)
230a(2): mov (%rbx),%esi
230c(7): lea 0x3b85(%rip),%rdx
2313(3): mov %rax,%rcx
2316(3): mov %rbp,%r8
2319(2): xor %edi,%edi
231b(2): xor %eax,%eax
231d(5): call 0xfffff303(%rip)
2322(6): mov 0x205cf0(%rip),%edi
2328(5): call 0xfffff0d8(%rip)
232d(2): mov (%rbx),%esi
232f(7): lea 0x3b66(%rip),%rdx
2336(3): mov %rax,%rcx
2339(2): xor %edi,%edi
233b(2): xor %eax,%eax
233d(5): call 0xfffff2e3(%rip)
2342(2): jmp 0xffffffe0(%rip)

"mode_compile" :
2350(1): push %rbp
2351(1): push %rbx
2352(3): mov %rdi,%rbx
2355(4): sub $0x8,%rsp
2359(3): movsx (%rdi),%eax
235c(3): lea 0xffffffd0(%rax),%edx
235f(3): cmp $0x7,%dl
2362(6): jbe 0xb6(%rip)
2368(2): test %al,%al
236a(3): mov %rdi,%rcx
236d(5): mov $0x1,%edi
2372(2): jz 0x29(%rip)
2374(4): nop 0x0(%rax)
2378(2): mov %eax,%edx
237a(3): and $0xef,%edx
237d(3): cmp $0x2d,%dl
2380(3): setz %dl
2383(2): cmp $0x2b,%al
2385(3): setz %al
2388(4): add $0x1,%rcx
238c(2): or %edx,%eax
238e(3): movzx %al,%eax
2391(3): add %rax,%rdi
2394(3): movzx (%rcx),%eax
2397(2): test %al,%al
2399(2): jnz 0xffffffdf(%rip)
239b(5): mov $0x10,%edx
23a0(2): xor %ecx,%ecx
23a2(3): mov %rdx,%rax
23a5(3): mul %rax,%rdi,%rdx
23a8(6): jo 0x317(%rip)
23ae(3): test %rax,%rax
23b1(6): js 0x318(%rip)
23b7(3): test %rcx,%rcx
23ba(6): jnz 0x30f(%rip)
23c0(4): shl/sal $0x4,%rdi
23c4(7): lea 0x3ad5(%rip),%rbp
23cb(5): call 0x2885(%rip)
23d0(2): xor %esi,%esi
23d2(3): xor %r11d,%r11d
23d5(4): movzx (%rbx),%r9d
23d9(4): cmp $0x61,%r9b
23dd(6): jz 0x253(%rip)
23e3(2): jle 0x6d(%rip)
23e5(4): cmp $0x6f,%r9b
23e9(6): jz 0x277(%rip)
23ef(4): cmp $0x75,%r9b
23f3(6): jz 0x25d(%rip)
23f9(4): cmp $0x67,%r9b
23fd(6): jz 0x243(%rip)
2403(3): mov %rax,%rdi
2406(5): call 0xffffefba(%rip)
240b(2): xor %eax,%eax
240d(4): add $0x8,%rsp
2411(1): pop %rbx
2412(1): pop %rbp
2413(1): ret near (%rsp)
2414(4): nop 0x0(%rax)
2418(3): mov %rdi,%rdx
241b(2): xor %ebp,%ebp
241d(2): jmp 0x12(%rip)
241f(1): nop 
2420(3): movsx (%rdx),%eax
2423(3): lea 0xffffffd0(%rax),%ecx
2426(3): cmp $0x7,%cl
2429(6): jnbe 0x247(%rip)
242f(4): lea 0xffffffd0(%rax,%rbp,8),%ebp
2433(4): add $0x1,%rdx
2437(6): cmp $0xfff,%ebp
243d(2): jbe 0xffffffe3(%rip)
243f(4): add $0x8,%rsp
2443(2): xor %eax,%eax
2445(1): pop %rbx
2446(1): pop %rbp
2447(1): ret near (%rsp)
2448(8): nop 0x0(%rax,%rax,1)
2450(4): cmp $0x2d,%r9b
2454(2): jz 0xe(%rip)
2456(4): cmp $0x3d,%r9b
245a(2): jz 0x8(%rip)
245c(4): cmp $0x2b,%r9b
2460(2): jnz 0xffffffa3(%rip)
2462(4): lea 0x1(%rsi),%rdi
2466(4): shl/sal $0x4,%rsi
246a(3): add %rax,%rsi
246d(2): jmp 0x67(%rip)
246f(1): nop 
2470(3): cmp $0x6f,%dl
2473(4): lea 0x2(%rbx),%r8
2477(6): jz 0x199(%rip)
247d(3): cmp $0x75,%dl
2480(6): mov $0x1c0,%r10d
2486(6): jnz 0xda(%rip)
248c(3): mov %r9b,(%rsi)
248f(4): mov $0x3,0x1(%rsi)
2493(5): movzx 0x2(%rbx),%r9d
2498(4): mov %r11d,0x4(%rsi)
249c(3): mov %r8,%rbx
249f(4): mov %r10d,0x8(%rsi)
24a3(3): mov %r10d,%edx
24a6(3): and %r11d,%edx
24a9(3): test %r11d,%r11d
24ac(4): cmovne %edx,%r10d
24b0(3): mov %r9d,%edx
24b3(4): mov %r10d,0xc(%rsi)
24b7(4): add $0x10,%rsi
24bb(3): and $0xef,%edx
24be(4): lea 0x1(%rdi),%rcx
24c2(3): cmp $0x2d,%dl
24c5(2): jz 0xc(%rip)
24c7(4): cmp $0x2b,%r9b
24cb(6): jnz 0x205(%rip)
24d1(3): mov %rcx,%rdi
24d4(4): movsx 0x1(%rbx),%edx
24d8(4): lea 0x1(%rbx),%rcx
24dc(3): cmp $0x67,%dl
24df(6): jz 0x141(%rip)
24e5(2): jnle 0xffffff8b(%rip)
24e7(4): lea 0xffffffd0(%rdx),%r8d
24eb(4): cmp $0x7,%r8b
24ef(2): jnbe 0x71(%rip)
24f1(3): xor %r8d,%r8d
24f4(4): nop 0x0(%rax)
24f8(5): lea 0xffffffd0(%rdx,%r8,8),%r8d
24fd(4): add $0x1,%rcx
2501(7): cmp $0xfff,%r8d
2508(6): jnbe 0xfffffefb(%rip)
250e(3): movsx (%rcx),%edx
2511(4): lea 0xffffffd0(%rdx),%r10d
2515(4): cmp $0x7,%r10b
2519(2): jbe 0xffffffdf(%rip)
251b(3): test %r11d,%r11d
251e(6): jnz 0xfffffee5(%rip)
2524(2): test %dl,%dl
2526(2): jz 0xb(%rip)
2528(3): cmp $0x2c,%dl
252b(6): jnz 0xfffffed8(%rip)
2531(3): mov %r9b,(%rsi)
2534(4): mov $0x1,0x1(%rsi)
2538(3): mov %edx,%r9d
253b(7): mov $0xfff,0x4(%rsi)
2542(4): mov %r8d,0x8(%rsi)
2546(3): mov %rcx,%rbx
2549(6): mov $0xfff,%r11d
254f(6): mov $0xfff,%r10d
2555(5): jmp 0xffffff5b(%rip)
255a(6): nop 0x0(%rax,%rax,1)
2560(4): lea 0xffffffa8(%rdx),%r8d
2564(3): xor %r10d,%r10d
2567(5): mov $0x1,%ebx
256c(4): cmp $0x20,%r8b
2570(2): jnbe 0x39(%rip)
2572(6): nop 0x0(%rax,%rax,1)
2578(4): movzx %r8b,%r8d
257c(5): movsxd 0x0(%rbp,%r8,4),%r8
2581(3): add %rbp,%r8
2584(3): jmp %r8
2587(9): nop 0x0(%rax,%rax,1)
2590(5): mov $0x2,%ebx
2595(3): nop (%rax)
2598(4): add $0x1,%rcx
259c(3): movzx (%rcx),%edx
259f(4): lea 0xffffffa8(%rdx),%r8d
25a3(4): cmp $0x20,%r8b
25a7(2): jbe 0xffffffd1(%rip)
25a9(3): mov %r9b,(%rsi)
25ac(3): mov %bl,0x1(%rsi)
25af(3): mov %edx,%r9d
25b2(4): mov %r11d,0x4(%rsi)
25b6(4): mov %r10d,0x8(%rsi)
25ba(3): mov %rcx,%rbx
25bd(5): jmp 0xfffffee6(%rip)
25c2(6): nop 0x0(%rax,%rax,1)
25c8(4): or $0x49,%r10d
25cc(2): jmp 0xffffffcc(%rip)
25ce(2): nop 
25d0(4): or $0x92,%r10b
25d4(2): jmp 0xffffffc4(%rip)
25d6(a): nop 0x0(%rax,%rax,1)
25e0(7): or $0x200,%r10d
25e7(2): jmp 0xffffffb1(%rip)
25e9(7): nop 0x0(%rax)
25f0(7): or $0xc00,%r10d
25f7(2): jmp 0xffffffa1(%rip)
25f9(7): nop 0x0(%rax)
2600(7): or $0x124,%r10d
2607(2): jmp 0xffffff91(%rip)
2609(7): nop 0x0(%rax)
2610(6): mov $0x7,%r10d
2616(5): jmp 0xfffffe76(%rip)
261b(5): nop 0x0(%rax,%rax,1)
2620(4): lea 0x2(%rbx),%r8
2624(6): mov $0x38,%r10d
262a(5): jmp 0xfffffe62(%rip)
262f(1): nop 
2630(6): mov $0xfff,%r11d
2636(4): add $0x1,%rbx
263a(5): jmp 0xfffffd9b(%rip)
263f(1): nop 
2640(7): or $0x438,%r11d
2647(2): jmp 0xffffffef(%rip)
2649(7): nop 0x0(%rax)
2650(7): or $0x9c0,%r11d
2657(2): jmp 0xffffffdf(%rip)
2659(7): nop 0x0(%rax)
2660(7): or $0x207,%r11d
2667(2): jmp 0xffffffcf(%rip)
2669(7): nop 0x0(%rax)
2670(2): test %al,%al
2672(6): jnz 0xfffffdcd(%rip)
2678(3): sub %rbx,%rdx
267b(2): mov %ebp,%ebx
267d(5): mov $0xfff,%eax
2682(6): and $0xc00,%ebx
2688(5): mov $0x20,%edi
268d(6): or $0x3ff,%ebx
2693(4): cmp $0x5,%rdx
2697(3): cmovnl %eax,%ebx
269a(5): call 0x25b6(%rip)
269f(5): mov $0x13d,%edx
26a4(7): mov $0xfff,0x4(%rax)
26ab(3): mov %ebp,0x8(%rax)
26ae(3): mov %dx,(%rax)
26b1(3): mov %ebx,0xc(%rax)
26b4(4): mov $0x0,0x11(%rax)
26b8(4): add $0x8,%rsp
26bc(1): pop %rbx
26bd(1): pop %rbp
26be(1): ret near (%rsp)
26bf(5): mov $0x1,%ecx
26c4(5): jmp 0xfffffcea(%rip)
26c9(5): call 0x27d7(%rip)
26ce(2): nop 
26d0(4): cmp $0x2c,%r9b
26d4(2): jnz 0xe(%rip)
26d6(4): add $0x1,%rbx
26da(3): mov %rdi,%rsi
26dd(5): jmp 0xfffffcf5(%rip)
26e2(3): test %r9b,%r9b
26e5(6): jnz 0xfffffd1e(%rip)
26eb(4): shl/sal $0x4,%rdi
26ef(5): mov $0x0,0x1(%rax,%rdi,1)
26f4(5): jmp 0xfffffd19(%rip)

"mode_create_from_ref" :
2700(1): push %rbx
2701(3): mov %rdi,%rsi
2704(5): mov $0x1,%edi
2709(7): sub $0xa0,%rsp
2710(3): mov %rsp,%rdx
2713(9): mov $0x28,%rax
271c(8): mov %rax,0x98(%rsp)
2724(2): xor %eax,%eax
2726(5): call 0xffffee6a(%rip)
272b(2): test %eax,%eax
272d(2): jnz 0x53(%rip)
272f(4): mov 0x18(%rsp),%ebx
2733(5): mov $0x20,%edi
2738(5): call 0x2518(%rip)
273d(5): mov $0x13d,%edx
2742(7): mov $0xfff,0x4(%rax)
2749(7): mov $0xfff,0xc(%rax)
2750(3): mov %dx,(%rax)
2753(3): mov %ebx,0x8(%rax)
2756(4): mov $0x0,0x11(%rax)
275a(8): mov 0x98(%rsp),%rcx
2762(9): xor $0x28,%rcx
276b(2): jnz 0x19(%rip)
276d(7): add $0xa0,%rsp
2774(1): pop %rbx
2775(1): ret near (%rsp)
2776(a): nop 0x0(%rax,%rax,1)
2780(2): xor %eax,%eax
2782(2): jmp 0xffffffd8(%rip)
2784(5): call 0xffffecfc(%rip)

"mode_adjust" :
2790(5): movzx 0x1(%rcx),%r10d
2795(2): mov %edi,%eax
2797(5): and $0xfff,%eax
279c(3): test %r10b,%r10b
279f(6): jz 0x151(%rip)
27a5(4): cmp $0x1,%sil
27a9(2): push %r12
27ab(1): push %rbp
27ac(1): push %rbx
27ad(2): sbb %ebx,%ebx
27af(4): movzx %sil,%ebp
27b3(2): not %ebx
27b5(3): xor %r11d,%r11d
27b8(6): and $0xc00,%ebx
27be(2): jmp 0x3c(%rip)
27c0(3): mov %r9d,%edi
27c3(2): or %edx,%edi
27c5(2): not %edi
27c7(2): and %edi,%esi
27c9(4): cmp $0x2d,%r12b
27cd(6): jz 0x113(%rip)
27d3(4): cmp $0x3d,%r12b
27d7(6): jz 0xb4(%rip)
27dd(4): cmp $0x2b,%r12b
27e1(2): jnz 0x7(%rip)
27e3(3): or %esi,%r11d
27e6(2): or %esi,%eax
27e8(4): add $0x10,%rcx
27ec(5): movzx 0x1(%rcx),%r10d
27f1(3): test %r10b,%r10b
27f4(6): jz 0xb8(%rip)
27fa(4): mov 0xc(%rcx),%r9d
27fe(3): mov 0x4(%rcx),%edi
2801(3): mov 0x8(%rcx),%esi
2804(3): not %r9d
2807(3): and %ebx,%r9d
280a(4): cmp $0x2,%r10b
280e(6): jz 0xb2(%rip)
2814(4): cmp $0x3,%r10b
2818(2): jnz 0x40(%rip)
281a(2): and %eax,%esi
281c(3): mov %esi,%r10d
281f(7): and $0x124,%r10d
2826(4): cmp $0x1,%r10d
282a(3): sbb %r10d,%r10d
282d(3): not %r10d
2830(7): and $0x124,%r10d
2837(3): mov %r10d,%r12d
283a(4): or $0x92,%r12b
283e(4): test $0x92,%sil
2842(4): cmovne %r12d,%r10d
2846(3): mov %r10d,%r12d
2849(4): or $0x49,%r12d
284d(4): test $0x49,%sil
2851(4): cmovne %r12d,%r10d
2855(3): or %r10d,%esi
2858(3): mov %r9d,%r10d
285b(2): test %edi,%edi
285d(4): movzx (%rcx),%r12d
2861(3): not %r10d
2864(6): jz 0xffffff5c(%rip)
286a(3): and %edi,%r10d
286d(3): and %r10d,%esi
2870(4): cmp $0x2d,%r12b
2874(2): jz 0x6c(%rip)
2876(4): cmp $0x3d,%r12b
287a(6): jnz 0xffffff63(%rip)
2880(2): not %edi
2882(3): or %edi,%r9d
2885(3): mov %r9d,%r10d
2888(3): not %r10d
288b(7): and $0xfff,%r10d
2892(4): add $0x10,%rcx
2896(3): and %r9d,%eax
2899(3): or %r10d,%r11d
289c(5): movzx 0x1(%rcx),%r10d
28a1(2): or %esi,%eax
28a3(3): test %r10b,%r10b
28a6(6): jnz 0xffffff54(%rip)
28ac(3): test %r8,%r8
28af(2): jz 0x5(%rip)
28b1(3): mov %r11d,(%r8)
28b4(1): pop %rbx
28b5(1): pop %rbp
28b6(2): pop %r12
28b8(1): ret near (%rsp)
28b9(7): nop 0x0(%rax)
28c0(3): mov %eax,%r12d
28c3(3): mov %esi,%r10d
28c6(4): and $0x49,%r12d
28ca(4): or $0x49,%r10d
28ce(3): or %ebp,%r12d
28d1(4): cmovne %r10d,%esi
28d5(2): jmp 0xffffff83(%rip)
28d7(9): nop 0x0(%rax,%rax,1)
28e0(3): or %esi,%r11d
28e3(2): not %esi
28e5(2): and %esi,%eax
28e7(5): jmp 0xffffff01(%rip)
28ec(4): nop 0x0(%rax)
28f0(3): xor %r11d,%r11d
28f3(3): test %r8,%r8
28f6(2): jz 0x5(%rip)
28f8(3): mov %r11d,(%r8)
28fb(2): REP ret near (%rsp)

"set_program_name" :
2900(3): test %rdi,%rdi
2903(1): push %rbx
2904(2): jz 0x79(%rip)
2906(5): mov $0x2f,%esi
290b(3): mov %rdi,%rbx
290e(5): call 0xffffebb2(%rip)
2913(3): test %rax,%rax
2916(2): jz 0x57(%rip)
2918(4): lea 0x1(%rax),%r8
291c(3): mov %r8,%rdx
291f(3): sub %rbx,%rdx
2922(4): cmp $0x6,%rdx
2926(2): jle 0x47(%rip)
2928(4): lea 0xfffffffa(%rax),%rsi
292c(7): lea 0x362d(%rip),%rdi
2933(5): mov $0x7,%ecx
2938(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
293a(3): setnbe %dl
293d(3): sbb $0x0,%dl
2940(2): test %dl,%dl
2942(2): jnz 0x2b(%rip)
2944(7): lea 0x361d(%rip),%rdi
294b(5): mov $0x3,%ecx
2950(3): mov %r8,%rsi
2953(3): mov %r8,%rbx
2956(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2958(3): setnbe %dl
295b(3): sbb $0x0,%dl
295e(2): test %dl,%dl
2960(2): jnz 0xd(%rip)
2962(4): lea 0x4(%rax),%rbx
2966(7): mov %rbx,0x205713(%rip)
296d(7): mov %rbx,0x20576c(%rip)
2974(7): mov %rbx,0x205725(%rip)
297b(1): pop %rbx
297c(1): ret near (%rsp)
297d(7): mov 0x20573c(%rip),%rcx
2984(7): lea 0x359d(%rip),%rdi
298b(5): mov $0x37,%edx
2990(5): mov $0x1,%esi
2995(5): call 0xffffeccb(%rip)
299a(5): call 0xffffea36(%rip)

"gettext_quote.part.1" :
29a0(1): push %rbp
29a1(1): push %rbx
29a2(3): mov %rdi,%rbp
29a5(2): mov %esi,%ebx
29a7(4): sub $0x8,%rsp
29ab(5): call 0x2ac5(%rip)
29b0(3): movzx (%rax),%edx
29b3(3): and $0xdf,%edx
29b6(3): cmp $0x55,%dl
29b9(2): jz 0x77(%rip)
29bb(3): cmp $0x47,%dl
29be(2): jz 0x22(%rip)
29c0(7): lea 0x35b4(%rip),%rax
29c7(7): lea 0x35af(%rip),%rdx
29ce(3): cmp $0x9,%ebx
29d1(4): cmovne %rdx,%rax
29d5(4): add $0x8,%rsp
29d9(1): pop %rbx
29da(1): pop %rbp
29db(1): ret near (%rsp)
29dc(4): nop 0x0(%rax)
29e0(4): movzx 0x1(%rax),%edx
29e4(3): and $0xdf,%edx
29e7(3): cmp $0x42,%dl
29ea(2): jnz 0xffffffd6(%rip)
29ec(4): cmp $0x31,0x2(%rax)
29f0(2): jnz 0xffffffd0(%rip)
29f2(4): cmp $0x38,0x3(%rax)
29f6(2): jnz 0xffffffca(%rip)
29f8(4): cmp $0x30,0x4(%rax)
29fc(2): jnz 0xffffffc4(%rip)
29fe(4): cmp $0x33,0x5(%rax)
2a02(2): jnz 0xffffffbe(%rip)
2a04(4): cmp $0x30,0x6(%rax)
2a08(2): jnz 0xffffffb8(%rip)
2a0a(4): cmp $0x0,0x7(%rax)
2a0e(2): jnz 0xffffffb2(%rip)
2a10(4): cmp $0x60,0x0(%rbp)
2a14(7): lea 0x3559(%rip),%rax
2a1b(7): lea 0x3556(%rip),%rdx
2a22(4): cmovne %rdx,%rax
2a26(4): add $0x8,%rsp
2a2a(1): pop %rbx
2a2b(1): pop %rbp
2a2c(1): ret near (%rsp)
2a2d(3): nop (%rax)
2a30(4): movzx 0x1(%rax),%edx
2a34(3): and $0xdf,%edx
2a37(3): cmp $0x54,%dl
2a3a(2): jnz 0xffffff86(%rip)
2a3c(4): movzx 0x2(%rax),%edx
2a40(3): and $0xdf,%edx
2a43(3): cmp $0x46,%dl
2a46(6): jnz 0xffffff7a(%rip)
2a4c(4): cmp $0x2d,0x3(%rax)
2a50(6): jnz 0xffffff70(%rip)
2a56(4): cmp $0x38,0x4(%rax)
2a5a(6): jnz 0xffffff66(%rip)
2a60(4): cmp $0x0,0x5(%rax)
2a64(6): jnz 0xffffff5c(%rip)
2a6a(4): cmp $0x60,0x0(%rbp)
2a6e(7): lea 0x34f7(%rip),%rax
2a75(7): lea 0x34f4(%rip),%rdx
2a7c(4): cmovne %rdx,%rax
2a80(4): add $0x8,%rsp
2a84(1): pop %rbx
2a85(1): pop %rbp
2a86(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2a90(2): push %r15
2a92(2): push %r14
2a94(3): mov %r8d,%r15d
2a97(2): push %r13
2a99(2): push %r12
2a9b(3): mov %rdi,%r14
2a9e(1): push %rbp
2a9f(1): push %rbx
2aa0(3): mov %r9d,%ebx
2aa3(3): mov %rsi,%r13
2aa6(3): mov %rcx,%rbp
2aa9(3): and $0x2,%ebx
2aac(7): sub $0xb8,%rsp
2ab3(8): mov 0xf0(%rsp),%rax
2abb(5): mov %rdx,0x10(%rsp)
2ac0(5): mov %r8d,0x8(%rsp)
2ac5(5): mov %r9d,0x78(%rsp)
2aca(5): mov %rax,0x20(%rsp)
2acf(8): mov 0xf8(%rsp),%rax
2ad7(5): mov %rax,0x68(%rsp)
2adc(8): mov 0x100(%rsp),%rax
2ae4(5): mov %rax,0x60(%rsp)
2ae9(9): mov $0x28,%rax
2af2(8): mov %rax,0xa8(%rsp)
2afa(2): xor %eax,%eax
2afc(5): call 0xffffe964(%rip)
2b01(4): cmp $0xa,%r15d
2b05(5): mov %rax,0x58(%rsp)
2b0a(6): jnbe 0x11b5(%rip)
2b10(7): lea 0x34c9(%rip),%rcx
2b17(3): mov %r15d,%edx
2b1a(4): movsxd 0x0(%rcx,%rdx,4),%rax
2b1e(3): add %rcx,%rax
2b21(2): jmp %rax
2b23(5): mov $0x1,0xe(%rsp)
2b28(5): mov $0x0,0x7c(%rsp)
2b2d(3): xor %r12d,%r12d
2b30(9): mov $0x0,0x50(%rsp)
2b39(5): mov $0x1,0xf(%rsp)
2b3e(5): mov $0x0,0xd(%rsp)
2b43(7): lea 0x3433(%rip),%rax
2b4a(9): mov $0x1,0x18(%rsp)
2b53(3): xor %r15d,%r15d
2b56(8): mov $0x2,0x8(%rsp)
2b5e(5): mov %rax,0x48(%rsp)
2b63(3): xor %r11d,%r11d
2b66(3): mov %rbp,%rax
2b69(3): mov %r12d,%r8d
2b6c(3): mov %r11,%rbp
2b6f(3): mov %rax,%r11
2b72(6): nop 0x0(%rax,%rax,1)
2b78(3): cmp %rbp,%r11
2b7b(4): setnz %r12b
2b7f(4): cmp $0xffffffff,%r11
2b83(2): jnz 0xf(%rip)
2b85(5): mov 0x10(%rsp),%rax
2b8a(4): cmp $0x0,0x0(%rax,%rbp,1)
2b8e(4): setnz %r12b
2b92(3): test %r12b,%r12b
2b95(6): jz 0x65b(%rip)
2b9b(5): cmp $0x2,0x8(%rsp)
2ba0(5): mov 0x10(%rsp),%rdi
2ba5(4): lea 0x0(%rdi,%rbp,1),%r9
2ba9(3): setnz %al
2bac(4): and 0xd(%rsp),%al
2bb0(3): mov %eax,%r10d
2bb3(6): jz 0xad(%rip)
2bb9(5): mov 0x18(%rsp),%rax
2bbe(3): test %rax,%rax
2bc1(6): jz 0x42f(%rip)
2bc7(4): cmp $0xffffffff,%r11
2bcb(5): lea 0x0(%rbp,%rax,1),%rbx
2bd0(2): jnz 0x30(%rip)
2bd2(4): cmp $0x1,%rax
2bd6(2): jbe 0x2a(%rip)
2bd8(5): mov %r8b,0x38(%rsp)
2bdd(5): mov %r10b,0x30(%rsp)
2be2(5): mov %r9,0x28(%rsp)
2be7(5): call 0xffffe889(%rip)
2bec(6): movzx 0x38(%rsp),%r8d
2bf2(6): movzx 0x30(%rsp),%r10d
2bf8(3): mov %rax,%r11
2bfb(5): mov 0x28(%rsp),%r9
2c00(3): cmp %r11,%rbx
2c03(5): mov %r10b,0x28(%rsp)
2c08(6): jnbe 0x5b8(%rip)
2c0e(5): mov 0x18(%rsp),%rdx
2c13(5): mov 0x48(%rsp),%rsi
2c18(3): mov %r9,%rdi
2c1b(5): mov %r11,0x40(%rsp)
2c20(5): mov %r8b,0x38(%rsp)
2c25(5): mov %r9,0x30(%rsp)
2c2a(5): call 0xffffe8e6(%rip)
2c2f(2): test %eax,%eax
2c31(5): mov 0x30(%rsp),%r9
2c36(6): movzx 0x38(%rsp),%r8d
2c3c(5): mov 0x40(%rsp),%r11
2c41(6): jnz 0x57f(%rip)
2c47(5): cmp $0x0,0xf(%rsp)
2c4c(6): movzx 0x28(%rsp),%r10d
2c52(6): jnz 0xf83(%rip)
2c58(8): nop 0x0(%rax,%rax,1)
2c60(4): movzx (%r9),%ebx
2c64(3): cmp $0x7e,%bl
2c67(6): jnbe 0x321(%rip)
2c6d(7): lea 0x3398(%rip),%rcx
2c74(3): movzx %bl,%edx
2c77(4): movsxd 0x0(%rcx,%rdx,4),%rax
2c7b(3): add %rcx,%rax
2c7e(2): jmp %rax
2c80(3): xor %r10d,%r10d
2c83(4): cmp $0x1,%r11
2c87(3): setnz %al
2c8a(4): cmp $0xffffffff,%r11
2c8e(2): jnz 0xe(%rip)
2c90(5): mov 0x10(%rsp),%rax
2c95(4): cmp $0x0,0x1(%rax)
2c99(3): setnz %al
2c9c(5): cmp $0x2,0x8(%rsp)
2ca1(3): setz %dl
2ca4(2): test %al,%al
2ca6(6): jz 0x252(%rip)
2cac(3): xor %r12d,%r12d
2caf(2): xor %eax,%eax
2cb1(7): nop 0x0(%rax)
2cb8(5): cmp $0x1,0xd(%rsp)
2cbd(6): jnz 0x115(%rip)
2cc3(2): test %dl,%dl
2cc5(6): jnz 0x10d(%rip)
2ccb(5): mov 0x20(%rsp),%rsi
2cd0(3): test %rsi,%rsi
2cd3(2): jz 0x16(%rip)
2cd5(2): mov %ebx,%edx
2cd7(3): shr $0x5,%dl
2cda(3): movzx %dl,%edx
2cdd(3): mov 0x0(%rsi,%rdx,4),%edx
2ce0(3): bt %ebx,%edx
2ce3(6): jb 0x150(%rip)
2ce9(3): test %r10b,%r10b
2cec(6): jnz 0x147(%rip)
2cf2(3): xor $0x1,%eax
2cf5(4): add $0x1,%rbp
2cf9(3): and %r8d,%eax
2cfc(2): test %al,%al
2cfe(2): jz 0x22(%rip)
2d00(3): cmp %r15,%r13
2d03(2): jbe 0x7(%rip)
2d05(5): mov $0x27,0x0(%r14,%r15,1)
2d0a(4): lea 0x1(%r15),%rax
2d0e(3): cmp %rax,%r13
2d11(2): jbe 0x8(%rip)
2d13(6): mov $0x27,0x1(%r14,%r15,1)
2d19(4): add $0x2,%r15
2d1d(3): xor %r8d,%r8d
2d20(3): cmp %r13,%r15
2d23(2): jnb 0x6(%rip)
2d25(4): mov %bl,0x0(%r14,%r15,1)
2d29(5): movzx 0xe(%rsp),%edi
2d2e(4): add $0x1,%r15
2d32(5): mov $0x0,%eax
2d37(3): test %r12b,%r12b
2d3a(3): cmove %eax,%edi
2d3d(5): mov %dil,0xe(%rsp)
2d42(5): jmp 0xfffffe36(%rip)
2d47(9): nop 0x0(%rax,%rax,1)
2d50(3): xor %r10d,%r10d
2d53(4): mov 0x8(%rsp),%eax
2d57(3): cmp $0x2,%eax
2d5a(6): jz 0x5be(%rip)
2d60(3): cmp $0x5,%eax
2d63(6): jz 0x575(%rip)
2d69(3): cmp $0x2,%eax
2d6c(5): mov $0x3f,%ebx
2d71(3): setz %dl
2d74(3): xor %r12d,%r12d
2d77(2): xor %eax,%eax
2d79(5): jmp 0xffffff3f(%rip)
2d7e(2): nop 
2d80(3): xor %r10d,%r10d
2d83(5): cmp $0x2,0x8(%rsp)
2d88(6): jz 0x508(%rip)
2d8e(5): mov %r12b,0x7c(%rsp)
2d93(2): xor %edx,%edx
2d95(2): xor %eax,%eax
2d97(5): mov $0x27,%ebx
2d9c(5): jmp 0xffffff1c(%rip)
2da1(7): nop 0x0(%rax)
2da8(5): mov $0x9,%edx
2dad(5): mov $0x74,%ebx
2db2(5): cmp $0x2,0x8(%rsp)
2db7(3): setz %al
2dba(4): and 0xf(%rsp),%al
2dbe(6): jnz 0x150(%rip)
2dc4(5): cmp $0x0,0xd(%rsp)
2dc9(2): jnz 0x67(%rip)
2dcb(2): mov %edx,%ebx
2dcd(3): xor %r12d,%r12d
2dd0(2): xor %eax,%eax
2dd2(5): cmp $0x0,0xf(%rsp)
2dd7(6): jnz 0xfffffef4(%rip)
2ddd(5): jmp 0xffffff0c(%rip)
2de2(6): nop 0x0(%rax,%rax,1)
2de8(5): mov $0x8,%edx
2ded(5): mov $0x62,%ebx
2df2(2): jmp 0xffffffd2(%rip)
2df4(4): nop 0x0(%rax)
2df8(5): cmp $0x2,0x8(%rsp)
2dfd(6): jz 0x3d3(%rip)
2e03(5): cmp $0x0,0xd(%rsp)
2e08(6): jz 0x218(%rip)
2e0e(5): cmp $0x0,0xf(%rsp)
2e13(6): jz 0x20d(%rip)
2e19(6): cmp $0x0,0x18(%rsp)
2e1f(6): jnz 0x3bc(%rip)
2e25(5): mov $0x5c,%ebx
2e2a(6): nop 0x0(%rax,%rax,1)
2e30(3): xor %r12d,%r12d
2e33(5): cmp $0x2,0x8(%rsp)
2e38(3): setz %dl
2e3b(5): cmp $0x0,0xf(%rsp)
2e40(2): mov %edx,%eax
2e42(6): jnz 0x856(%rip)
2e48(3): mov %r8d,%eax
2e4b(3): xor $0x1,%eax
2e4e(2): and %dl,%al
2e50(2): jz 0x31(%rip)
2e52(3): cmp %r15,%r13
2e55(2): jbe 0x7(%rip)
2e57(5): mov $0x27,0x0(%r14,%r15,1)
2e5c(4): lea 0x1(%r15),%rdx
2e60(3): cmp %rdx,%r13
2e63(2): jbe 0x8(%rip)
2e65(6): mov $0x24,0x1(%r14,%r15,1)
2e6b(4): lea 0x2(%r15),%rdx
2e6f(3): cmp %rdx,%r13
2e72(2): jbe 0x8(%rip)
2e74(6): mov $0x27,0x2(%r14,%r15,1)
2e7a(4): add $0x3,%r15
2e7e(3): mov %eax,%r8d
2e81(3): cmp %r15,%r13
2e84(2): jbe 0x7(%rip)
2e86(5): mov $0x5c,0x0(%r14,%r15,1)
2e8b(4): add $0x1,%r15
2e8f(4): add $0x1,%rbp
2e93(5): jmp 0xfffffe8d(%rip)
2e98(8): nop 0x0(%rax,%rax,1)
2ea0(5): cmp $0x0,0xd(%rsp)
2ea5(6): jnz 0x1ce(%rip)
2eab(2): xor %edx,%edx
2ead(5): test $0x1,0x78(%rsp)
2eb2(6): jz 0xffffff19(%rip)
2eb8(4): add $0x1,%rbp
2ebc(5): jmp 0xfffffcbc(%rip)
2ec1(7): nop 0x0(%rax)
2ec8(5): cmp $0x2,0x8(%rsp)
2ecd(3): setz %dl
2ed0(2): xor %eax,%eax
2ed2(5): jmp 0xfffffde6(%rip)
2ed7(9): nop 0x0(%rax,%rax,1)
2ee0(5): mov $0x7,%edx
2ee5(5): mov $0x61,%ebx
2eea(5): jmp 0xfffffeda(%rip)
2eef(1): nop 
2ef0(5): cmp $0x2,0x8(%rsp)
2ef5(3): setz %dl
2ef8(3): test %rbp,%rbp
2efb(6): jnz 0xfffffdb1(%rip)
2f01(5): movzx 0xf(%rsp),%eax
2f06(2): and %dl,%al
2f08(6): jz 0xfffffdb0(%rip)
2f0e(3): mov %r11,%rbp
2f11(8): mov $0x2,0x8(%rsp)
2f19(5): jmp 0x700(%rip)
2f1e(2): nop 
2f20(5): cmp $0x2,0x8(%rsp)
2f25(3): setz %dl
2f28(3): xor %r12d,%r12d
2f2b(2): jmp 0xffffffd6(%rip)
2f2d(3): nop (%rax)
2f30(5): cmp $0x2,0x8(%rsp)
2f35(5): mov $0x20,%ebx
2f3a(3): setz %dl
2f3d(2): jmp 0xffffffc4(%rip)
2f3f(1): nop 
2f40(5): mov $0xd,%edx
2f45(5): mov $0x72,%ebx
2f4a(5): jmp 0xfffffe68(%rip)
2f4f(1): nop 
2f50(5): mov $0xc,%edx
2f55(5): mov $0x66,%ebx
2f5a(5): jmp 0xfffffe6a(%rip)
2f5f(1): nop 
2f60(5): mov $0xb,%edx
2f65(5): mov $0x76,%ebx
2f6a(5): jmp 0xfffffe5a(%rip)
2f6f(1): nop 
2f70(5): mov $0xa,%edx
2f75(5): mov $0x6e,%ebx
2f7a(5): jmp 0xfffffe38(%rip)
2f7f(1): nop 
2f80(3): xor %r10d,%r10d
2f83(5): nop 0x0(%rax,%rax,1)
2f88(6): cmp $0x1,0x58(%rsp)
2f8e(6): jnz 0x3aa(%rip)
2f94(5): mov %r11,0x38(%rsp)
2f99(5): mov %r8b,0x30(%rsp)
2f9e(5): mov %r10b,0x28(%rsp)
2fa3(5): call 0xffffe6fd(%rip)
2fa8(3): mov (%rax),%rcx
2fab(3): movzx %bl,%edx
2fae(6): movzx 0x28(%rsp),%r10d
2fb4(6): movzx 0x30(%rsp),%r8d
2fba(5): mov 0x38(%rsp),%r11
2fbf(5): mov $0x1,%edi
2fc4(4): movzx 0x0(%rcx,%rdx,2),%eax
2fc8(4): and $0x4000,%ax
2fcc(4): setnz %r12b
2fd0(3): setz %al
2fd3(4): and 0xd(%rsp),%al
2fd7(2): test %al,%al
2fd9(6): jnz 0x998(%rip)
2fdf(5): cmp $0x2,0x8(%rsp)
2fe4(3): setz %dl
2fe7(5): jmp 0xfffffcd1(%rip)
2fec(4): nop 0x0(%rax)
2ff0(4): movzx (%r9),%ebx
2ff4(3): cmp $0x7e,%bl
2ff7(2): jnbe 0xffffff89(%rip)
2ff9(7): lea 0x3208(%rip),%rcx
3000(3): movzx %bl,%edx
3003(4): movsxd 0x0(%rcx,%rdx,4),%rax
3007(3): add %rcx,%rax
300a(2): jmp %rax
300c(4): nop 0x0(%rax)
3010(3): xor %r10d,%r10d
3013(5): cmp $0x0,0xd(%rsp)
3018(6): jnz 0xfffffdf6(%rip)
301e(2): nop 
3020(5): mov $0x5c,%edx
3025(5): mov $0x5c,%ebx
302a(5): jmp 0xfffffd9a(%rip)
302f(1): nop 
3030(5): mov $0xc,%edx
3035(3): xor %r10d,%r10d
3038(5): mov $0x66,%ebx
303d(5): jmp 0xfffffd87(%rip)
3042(6): nop 0x0(%rax,%rax,1)
3048(5): mov $0xa,%edx
304d(3): xor %r10d,%r10d
3050(5): mov $0x6e,%ebx
3055(5): jmp 0xfffffd5d(%rip)
305a(6): nop 0x0(%rax,%rax,1)
3060(5): mov $0x61,%ebx
3065(5): jmp 0xfffffdcb(%rip)
306a(6): nop 0x0(%rax,%rax,1)
3070(3): xor %r10d,%r10d
3073(5): cmp $0x2,0x8(%rsp)
3078(3): setz %dl
307b(5): cmp $0x0,0xf(%rsp)
3080(6): jnz 0xb9a(%rip)
3086(3): mov %r8d,%eax
3089(3): mov %r15,%rcx
308c(3): xor $0x1,%eax
308f(2): and %dl,%al
3091(2): jz 0x2f(%rip)
3093(3): cmp %r15,%r13
3096(2): jbe 0x7(%rip)
3098(5): mov $0x27,0x0(%r14,%r15,1)
309d(4): lea 0x1(%r15),%rcx
30a1(3): cmp %rcx,%r13
30a4(2): jbe 0x8(%rip)
30a6(6): mov $0x24,0x1(%r14,%r15,1)
30ac(4): lea 0x2(%r15),%rcx
30b0(3): cmp %rcx,%r13
30b3(6): jnbe 0x636(%rip)
30b9(4): lea 0x3(%r15),%rcx
30bd(3): mov %eax,%r8d
30c0(3): cmp %rcx,%r13
30c3(2): jbe 0x7(%rip)
30c5(5): mov $0x5c,0x0(%r14,%rcx,1)
30ca(5): cmp $0x2,0x8(%rsp)
30cf(4): lea 0x1(%rcx),%r15
30d3(6): jz 0x606(%rip)
30d9(4): lea 0x1(%rbp),%rax
30dd(3): cmp %r11,%rax
30e0(2): jnb 0x1b(%rip)
30e2(5): mov 0x10(%rsp),%rax
30e7(5): movzx 0x1(%rax,%rbp,1),%eax
30ec(4): mov %al,0x28(%rsp)
30f0(3): sub $0x30,%eax
30f3(2): cmp $0x9,%al
30f5(6): jbe 0x834(%rip)
30fb(3): mov %r12d,%eax
30fe(5): mov $0x30,%ebx
3103(3): xor %r12d,%r12d
3106(5): jmp 0xfffffbb2(%rip)
310b(5): nop 0x0(%rax,%rax,1)
3110(5): cmp $0x2,0x8(%rsp)
3115(3): mov %r10d,%r12d
3118(3): setz %dl
311b(3): xor %r10d,%r10d
311e(2): xor %eax,%eax
3120(5): jmp 0xfffffb98(%rip)
3125(3): nop (%rax)
3128(5): cmp $0x2,0x8(%rsp)
312d(3): setz %dl
3130(3): xor %r10d,%r10d
3133(5): jmp 0xfffffdc5(%rip)
3138(8): nop 0x0(%rax,%rax,1)
3140(5): cmp $0x2,0x8(%rsp)
3145(3): setz %dl
3148(3): xor %r10d,%r10d
314b(3): xor %r12d,%r12d
314e(5): jmp 0xfffffdb3(%rip)
3153(5): nop 0x0(%rax,%rax,1)
3158(5): cmp $0x2,0x8(%rsp)
315d(3): mov %r10d,%r12d
3160(5): mov $0x20,%ebx
3165(3): setz %dl
3168(3): xor %r10d,%r10d
316b(5): jmp 0xfffffd96(%rip)
3170(5): mov $0xd,%edx
3175(3): xor %r10d,%r10d
3178(5): mov $0x72,%ebx
317d(5): jmp 0xfffffc35(%rip)
3182(6): nop 0x0(%rax,%rax,1)
3188(5): mov $0x76,%ebx
318d(5): jmp 0xfffffca3(%rip)
3192(6): nop 0x0(%rax,%rax,1)
3198(5): mov $0x9,%edx
319d(3): xor %r10d,%r10d
31a0(5): mov $0x74,%ebx
31a5(5): jmp 0xfffffc0d(%rip)
31aa(6): nop 0x0(%rax,%rax,1)
31b0(5): mov $0x62,%ebx
31b5(5): jmp 0xfffffc7b(%rip)
31ba(6): nop 0x0(%rax,%rax,1)
31c0(3): xor %r10d,%r10d
31c3(5): jmp 0xfffffa9d(%rip)
31c8(8): nop 0x0(%rax,%rax,1)
31d0(5): cmp $0x0,0xf(%rsp)
31d5(6): jnz 0x96b(%rip)
31db(4): add $0x1,%rbp
31df(3): mov %r8d,%eax
31e2(3): xor %r12d,%r12d
31e5(5): mov $0x5c,%ebx
31ea(5): jmp 0xfffffb12(%rip)
31ef(1): nop 
31f0(5): cmp $0x2,0x8(%rsp)
31f5(5): movzx 0xf(%rsp),%ebx
31fa(3): mov %r8d,%r12d
31fd(3): mov %r11,%rbp
3200(3): setz %dl
3203(2): mov %ebx,%eax
3205(3): test %r15,%r15
3208(3): setz %cl
320b(2): and %edx,%eax
320d(2): and %cl,%al
320f(6): jnz 0xa67(%rip)
3215(2): mov %ebx,%eax
3217(3): xor $0x1,%eax
321a(2): and %al,%dl
321c(6): jz 0x970(%rip)
3222(5): cmp $0x0,0x7c(%rsp)
3227(6): jz 0x963(%rip)
322d(5): cmp $0x0,0xe(%rsp)
3232(6): jnz 0x9fb(%rip)
3238(3): test %r13,%r13
323b(3): setz %al
323e(6): cmp $0x0,0x50(%rsp)
3244(3): setnz %dl
3247(2): and %dl,%al
3249(6): jz 0xa23(%rip)
324f(5): mov 0x50(%rsp),%r13
3254(7): lea 0x2d22(%rip),%rbx
325b(4): mov $0x27,(%r14)
325f(8): mov $0x2,0x8(%rsp)
3267(6): mov $0x1,%r15d
326d(9): mov $0x1,0x18(%rsp)
3276(5): mov $0x0,0xf(%rsp)
327b(5): mov %rbx,0x48(%rsp)
3280(4): mov %al,0x7c(%rsp)
3284(5): jmp 0xfffff8df(%rip)
3289(7): nop 0x0(%rax)
3290(5): cmp $0x0,0xf(%rsp)
3295(6): jnz 0x8ab(%rip)
329b(3): test %r13,%r13
329e(6): jz 0x402(%rip)
32a4(2): xor %edx,%edx
32a6(6): cmp $0x0,0x50(%rsp)
32ac(6): jnz 0x3f4(%rip)
32b2(5): mov %r13,0x50(%rsp)
32b7(4): add $0x3,%r15
32bb(2): xor %eax,%eax
32bd(5): mov %r12b,0x7c(%rsp)
32c2(3): xor %r8d,%r8d
32c5(3): mov %rdx,%r13
32c8(5): mov $0x27,%ebx
32cd(5): jmp 0xfffffa1c(%rip)
32d2(6): nop 0x0(%rax,%rax,1)
32d8(5): test $0x4,0x78(%rsp)
32dd(2): jz 0x23(%rip)
32df(4): lea 0x2(%rbp),%rcx
32e3(3): cmp %r11,%rcx
32e6(2): jnb 0x1a(%rip)
32e8(5): mov 0x10(%rsp),%rax
32ed(5): cmp $0x3f,0x1(%rax,%rbp,1)
32f2(6): jz 0x790(%rip)
32f8(8): nop 0x0(%rax,%rax,1)
3300(2): xor %edx,%edx
3302(3): xor %r12d,%r12d
3305(2): xor %eax,%eax
3307(5): mov $0x3f,%ebx
330c(5): jmp 0xfffff9ac(%rip)
3311(7): nop 0x0(%rax)
3318(5): cmp $0x0,0xf(%rsp)
331d(6): jnz 0x823(%rip)
3323(3): xor %r12d,%r12d
3326(2): xor %eax,%eax
3328(5): mov $0x3f,%ebx
332d(5): jmp 0xfffff9bc(%rip)
3332(6): nop 0x0(%rax,%rax,1)
3338(8): lea 0xa0(%rsp),%rax
3340(4): cmp $0xffffffff,%r11
3344(c): mov $0x0,0xa0(%rsp)
3350(5): mov %rax,0x28(%rsp)
3355(2): jnz 0x2f(%rip)
3357(5): mov 0x10(%rsp),%rdi
335c(5): mov %r8b,0x40(%rsp)
3361(5): mov %r10b,0x38(%rsp)
3366(5): mov %r9,0x30(%rsp)
336b(5): call 0xffffe105(%rip)
3370(6): movzx 0x40(%rsp),%r8d
3376(6): movzx 0x38(%rsp),%r10d
337c(3): mov %rax,%r11
337f(5): mov 0x30(%rsp),%r9
3384(8): lea 0x9c(%rsp),%rax
338c(2): xor %ecx,%ecx
338e(4): mov %bl,0x7e(%rsp)
3392(5): mov %r8b,0x7d(%rsp)
3397(3): mov %rcx,%rbx
339a(8): mov %r9,0x88(%rsp)
33a2(5): mov %rax,0x38(%rsp)
33a7(5): mov %r10b,0x7f(%rsp)
33ac(8): mov %r15,0x80(%rsp)
33b4(5): mov %r14,0x40(%rsp)
33b9(5): mov %r13,0x70(%rsp)
33be(5): mov %r11,0x30(%rsp)
33c3(5): mov 0x10(%rsp),%rax
33c8(5): lea 0x0(%rbp,%rbx,1),%r14
33cd(5): mov 0x30(%rsp),%rdx
33d2(5): mov 0x28(%rsp),%rcx
33d7(5): mov 0x38(%rsp),%rdi
33dc(4): lea 0x0(%rax,%r14,1),%r13
33e0(3): sub %r14,%rdx
33e3(3): mov %r13,%rsi
33e6(5): call 0x1f1a(%rip)
33eb(3): test %rax,%rax
33ee(3): mov %rax,%r15
33f1(2): jz 0x50(%rip)
33f3(4): cmp $0xffffffff,%rax
33f7(6): jz 0x61e(%rip)
33fd(4): cmp $0xfffffffe,%rax
3401(6): jz 0x5a0(%rip)
3407(5): cmp $0x2,0x8(%rsp)
340c(3): setz %al
340f(4): and 0xf(%rsp),%al
3413(6): jnz 0x19d(%rip)
3419(7): mov 0x9c(%rsp),%edi
3420(5): call 0xffffe270(%rip)
3425(5): mov 0x28(%rsp),%rdi
342a(2): test %eax,%eax
342c(5): mov $0x0,%eax
3431(4): cmove %eax,%r12d
3435(3): add %r15,%rbx
3438(5): call 0xffffe248(%rip)
343d(2): test %eax,%eax
343f(2): jz 0xffffff84(%rip)
3441(3): mov %r12d,%edx
3444(3): mov %rbx,%rdi
3447(6): movzx 0x7d(%rsp),%r8d
344d(3): xor $0x1,%edx
3450(5): movzx 0x7e(%rsp),%ebx
3455(6): movzx 0x7f(%rsp),%r10d
345b(4): and 0xd(%rsp),%dl
345f(8): mov 0x80(%rsp),%r15
3467(5): mov 0x40(%rsp),%r14
346c(5): mov 0x70(%rsp),%r13
3471(5): mov 0x30(%rsp),%r11
3476(4): cmp $0x1,%rdi
347a(6): jbe 0x601(%rip)
3480(3): mov %rdi,%rcx
3483(2): xor %esi,%esi
3485(6): movzx 0xf(%rsp),%r9d
348b(3): add %rbp,%rcx
348e(5): mov 0x10(%rsp),%rdi
3493(5): jmp 0xbb(%rip)
3498(8): nop 0x0(%rax,%rax,1)
34a0(5): cmp $0x2,0x8(%rsp)
34a5(3): setz %al
34a8(3): test %r9b,%r9b
34ab(6): jnz 0x4b5(%rip)
34b1(3): mov %r8d,%esi
34b4(3): xor $0x1,%esi
34b7(3): and %sil,%al
34ba(2): jz 0x31(%rip)
34bc(3): cmp %r15,%r13
34bf(2): jbe 0x7(%rip)
34c1(5): mov $0x27,0x0(%r14,%r15,1)
34c6(4): lea 0x1(%r15),%rsi
34ca(3): cmp %rsi,%r13
34cd(2): jbe 0x8(%rip)
34cf(6): mov $0x24,0x1(%r14,%r15,1)
34d5(4): lea 0x2(%r15),%rsi
34d9(3): cmp %rsi,%r13
34dc(2): jbe 0x8(%rip)
34de(6): mov $0x27,0x2(%r14,%r15,1)
34e4(4): add $0x3,%r15
34e8(3): mov %eax,%r8d
34eb(3): cmp %r15,%r13
34ee(2): jbe 0x7(%rip)
34f0(5): mov $0x5c,0x0(%r14,%r15,1)
34f5(4): lea 0x1(%r15),%rax
34f9(3): cmp %rax,%r13
34fc(2): jbe 0xf(%rip)
34fe(2): mov %ebx,%eax
3500(3): shr $0x6,%al
3503(3): add $0x30,%eax
3506(5): mov %al,0x1(%r14,%r15,1)
350b(4): lea 0x2(%r15),%rax
350f(3): cmp %rax,%r13
3512(2): jbe 0x12(%rip)
3514(2): mov %ebx,%eax
3516(3): shr $0x3,%al
3519(3): and $0x7,%eax
351c(3): add $0x30,%eax
351f(5): mov %al,0x2(%r14,%r15,1)
3524(3): and $0x7,%ebx
3527(4): add $0x1,%rbp
352b(4): add $0x3,%r15
352f(3): add $0x30,%ebx
3532(3): cmp %rcx,%rbp
3535(6): jnb 0xfffff7eb(%rip)
353b(2): mov %edx,%esi
353d(3): cmp %r15,%r13
3540(2): jbe 0x6(%rip)
3542(4): mov %bl,0x0(%r14,%r15,1)
3546(4): movzx 0x0(%rdi,%rbp,1),%ebx
354a(4): add $0x1,%r15
354e(2): test %dl,%dl
3550(6): jnz 0xffffff50(%rip)
3556(2): mov %esi,%eax
3558(3): xor $0x1,%eax
355b(3): and %r8d,%eax
355e(3): test %r10b,%r10b
3561(2): jz 0x10(%rip)
3563(3): cmp %r15,%r13
3566(2): jbe 0x7(%rip)
3568(5): mov $0x5c,0x0(%r14,%r15,1)
356d(4): add $0x1,%r15
3571(4): add $0x1,%rbp
3575(3): cmp %rcx,%rbp
3578(6): jnb 0xfffff784(%rip)
357e(2): test %al,%al
3580(6): jz 0x3fe(%rip)
3586(3): cmp %r15,%r13
3589(2): jbe 0x7(%rip)
358b(5): mov $0x27,0x0(%r14,%r15,1)
3590(4): lea 0x1(%r15),%rax
3594(3): cmp %rax,%r13
3597(2): jbe 0x8(%rip)
3599(6): mov $0x27,0x1(%r14,%r15,1)
359f(4): add $0x2,%r15
35a3(3): xor %r10d,%r10d
35a6(3): xor %r8d,%r8d
35a9(2): jmp 0xffffff94(%rip)
35ab(5): nop 0x0(%rax,%rax,1)
35b0(4): cmp $0x1,%r15
35b4(6): jz 0xfffffe65(%rip)
35ba(5): mov 0x10(%rsp),%rdi
35bf(4): lea 0x0(%rdi,%r15,1),%rcx
35c3(5): lea 0x1(%rdi,%r14,1),%rdx
35c8(4): lea 0x0(%rcx,%r14,1),%r8
35cc(2): jmp 0x11(%rip)
35ce(2): nop 
35d0(4): add $0x1,%rdx
35d4(3): cmp %rdx,%r8
35d7(6): jz 0xfffffe42(%rip)
35dd(3): movzx (%rdx),%ecx
35e0(3): sub $0x5b,%ecx
35e3(3): cmp $0x21,%cl
35e6(2): jnbe 0xffffffea(%rip)
35e8(5): mov $0x1,%esi
35ed(3): shl/sal %cl,%rsi
35f0(3): mov %rsi,%rcx
35f3(a): mov $0x8589934635,%rsi
35fd(3): test %rsi,%rcx
3600(2): jz 0xffffffd0(%rip)
3602(5): mov 0x40(%rsp),%r14
3607(5): mov 0x70(%rsp),%r13
360c(5): mov 0x30(%rsp),%rbp
3611(8): mov $0x2,0x8(%rsp)
3619(5): cmp $0x0,0xd(%rsp)
361e(2): jz 0x12(%rip)
3620(2): test %al,%al
3622(5): mov $0x4,%eax
3627(5): cmove 0x8(%rsp),%eax
362c(4): mov %eax,0x8(%rsp)
3630(4): sub $0x8,%rsp
3634(3): mov %rbp,%rcx
3637(3): mov %r13,%rsi
363a(4): push 0x68(%rsp)
363e(4): push 0x78(%rsp)
3642(3): mov %r14,%rdi
3645(2): push $0x0
3647(8): mov 0x98(%rsp),%r9d
364f(5): mov 0x28(%rsp),%r8d
3654(5): mov 0x30(%rsp),%rdx
3659(4): and $0xfd,%r9d
365d(5): call 0xfffff433(%rip)
3662(4): add $0x20,%rsp
3666(3): mov %rax,%r15
3669(8): mov 0xa8(%rsp),%rbx
3671(9): xor $0x28,%rbx
367a(3): mov %r15,%rax
367d(6): jnz 0x606(%rip)
3683(7): add $0xb8,%rsp
368a(1): pop %rbx
368b(1): pop %rbp
368c(2): pop %r12
368e(2): pop %r13
3690(2): pop %r14
3692(2): pop %r15
3694(1): ret near (%rsp)
3695(3): nop (%rax)
3698(3): mov %r11,%rbp
369b(5): jmp 0xffffff7e(%rip)
36a0(3): cmp %r15,%r13
36a3(2): jbe 0x7(%rip)
36a5(5): mov $0x27,0x0(%r14,%r15,1)
36aa(4): lea 0x1(%r15),%rax
36ae(3): cmp %rax,%r13
36b1(2): jbe 0x8(%rip)
36b3(6): mov $0x5c,0x1(%r14,%r15,1)
36b9(4): lea 0x2(%r15),%rax
36bd(3): cmp %rax,%r13
36c0(6): jbe 0x5f2(%rip)
36c6(3): mov %r13,%rdx
36c9(6): mov $0x27,0x2(%r14,%r15,1)
36cf(5): mov 0x50(%rsp),%r13
36d4(5): jmp 0xfffffbde(%rip)
36d9(3): mov %r12d,%eax
36dc(5): mov $0x30,%ebx
36e1(3): xor %r12d,%r12d
36e4(5): jmp 0xfffff605(%rip)
36e9(6): mov $0x27,0x2(%r14,%r15,1)
36ef(5): jmp 0xfffff9ca(%rip)
36f4(2): test %ebx,%ebx
36f6(6): jnz 0xfffff42d(%rip)
36fc(5): mov $0x1,0xd(%rsp)
3701(3): test %r13,%r13
3704(6): jnz 0x596(%rip)
370a(7): lea 0x286c(%rip),%rax
3711(9): mov $0x0,0x50(%rsp)
371a(5): mov $0x1,0xe(%rsp)
371f(5): mov $0x0,0x7c(%rsp)
3724(3): xor %r12d,%r12d
3727(5): mov $0x0,0xf(%rsp)
372c(9): mov $0x1,0x18(%rsp)
3735(5): mov %rax,0x48(%rsp)
373a(6): mov $0x1,%r15d
3740(8): mov $0x2,0x8(%rsp)
3748(5): jmp 0xfffff41b(%rip)
374d(3): nop (%rax)
3750(2): test %ebx,%ebx
3752(6): jnz 0x3fb(%rip)
3758(3): test %r13,%r13
375b(6): jz 0x22b(%rip)
3761(4): mov $0x22,(%r14)
3765(5): mov $0x1,0xe(%rsp)
376a(3): xor %r12d,%r12d
376d(5): mov $0x0,0x7c(%rsp)
3772(9): mov $0x0,0x50(%rsp)
377b(7): lea 0x27f9(%rip),%rax
3782(5): mov $0x0,0xf(%rsp)
3787(5): mov $0x1,0xd(%rsp)
378c(9): mov $0x1,0x18(%rsp)
3795(6): mov $0x1,%r15d
379b(5): mov %rax,0x48(%rsp)
37a0(5): jmp 0xfffff3c3(%rip)
37a5(7): lea 0x27cf(%rip),%rax
37ac(5): mov $0x1,0xe(%rsp)
37b1(5): mov $0x0,0x7c(%rsp)
37b6(3): xor %r12d,%r12d
37b9(9): mov $0x0,0x50(%rsp)
37c2(5): mov $0x1,0xf(%rsp)
37c7(5): mov $0x1,0xd(%rsp)
37cc(9): mov $0x1,0x18(%rsp)
37d5(3): xor %r15d,%r15d
37d8(5): mov %rax,0x48(%rsp)
37dd(8): mov $0x5,0x8(%rsp)
37e5(5): jmp 0xfffff37e(%rip)
37ea(5): mov $0x1,0xe(%rsp)
37ef(5): mov $0x0,0x7c(%rsp)
37f4(3): xor %r12d,%r12d
37f7(9): mov $0x0,0x50(%rsp)
3800(5): mov $0x0,0xf(%rsp)
3805(3): xor %r15d,%r15d
3808(5): mov $0x1,0xd(%rsp)
380d(9): mov $0x0,0x18(%rsp)
3816(9): mov $0x0,0x48(%rsp)
381f(5): jmp 0xfffff344(%rip)
3824(5): cmp $0xa,0x8(%rsp)
3829(2): jz 0x58(%rip)
382b(7): lea 0x274d(%rip),%rsi
3832(2): xor %edi,%edi
3834(5): mov $0x5,%edx
3839(5): call 0xffffdc17(%rip)
383e(3): mov %rax,%rcx
3841(5): mov %rax,0x68(%rsp)
3846(7): lea 0x2732(%rip),%rax
384d(3): cmp %rax,%rcx
3850(6): jz 0x39e(%rip)
3856(7): lea 0x2720(%rip),%rsi
385d(2): xor %edi,%edi
385f(5): mov $0x5,%edx
3864(5): call 0xffffdbec(%rip)
3869(3): mov %rax,%rcx
386c(5): mov %rax,0x60(%rsp)
3871(7): lea 0x2705(%rip),%rax
3878(3): cmp %rax,%rcx
387b(6): jz 0x389(%rip)
3881(3): xor %r15d,%r15d
3884(2): test %ebx,%ebx
3886(6): jz 0x1c7(%rip)
388c(2): test %ebx,%ebx
388e(5): mov 0x60(%rsp),%rbx
3893(5): setnz 0xf(%rsp)
3898(3): xor %r12d,%r12d
389b(3): mov %rbx,%rdi
389e(5): call 0xffffdbd2(%rip)
38a3(5): mov %rbx,0x48(%rsp)
38a8(5): mov %rax,0x18(%rsp)
38ad(5): mov $0x1,0xe(%rsp)
38b2(5): mov $0x0,0x7c(%rsp)
38b7(9): mov $0x0,0x50(%rsp)
38c0(5): mov $0x1,0xd(%rsp)
38c5(5): jmp 0xfffff29e(%rip)
38ca(5): mov $0x1,0xe(%rsp)
38cf(5): mov $0x0,0x7c(%rsp)
38d4(3): xor %r12d,%r12d
38d7(9): mov $0x0,0x50(%rsp)
38e0(5): mov $0x0,0xf(%rsp)
38e5(3): xor %r15d,%r15d
38e8(5): mov $0x0,0xd(%rsp)
38ed(9): mov $0x0,0x18(%rsp)
38f6(9): mov $0x0,0x48(%rsp)
38ff(5): jmp 0xfffff264(%rip)
3904(5): mov $0x1,0xe(%rsp)
3909(5): mov $0x0,0x7c(%rsp)
390e(3): xor %r12d,%r12d
3911(9): mov $0x0,0x50(%rsp)
391a(5): mov $0x1,0xf(%rsp)
391f(5): mov $0x1,0xd(%rsp)
3924(5): jmp 0xfffff21f(%rip)
3929(3): cmp %r15,%r13
392c(2): jbe 0x7(%rip)
392e(5): mov $0x30,0x0(%r14,%r15,1)
3933(4): lea 0x2(%rcx),%rax
3937(3): cmp %rax,%r13
393a(2): jbe 0x8(%rip)
393c(6): mov $0x30,0x2(%r14,%rcx,1)
3942(3): mov %r12d,%eax
3945(4): lea 0x3(%rcx),%r15
3949(3): xor %r12d,%r12d
394c(5): mov $0x30,%ebx
3951(5): jmp 0xfffff367(%rip)
3956(a): nop 0x0(%rax,%rax,1)
3960(5): movzx 0xf(%rsp),%ebx
3965(3): mov %r11,%rbp
3968(4): mov %bl,0xd(%rsp)
396c(5): jmp 0xfffffcad(%rip)
3971(5): movzx 0xd(%rsp),%edx
3976(3): xor %r12d,%r12d
3979(5): jmp 0xfffffb07(%rip)
397e(3): xor %r10d,%r10d
3981(5): jmp 0xfffffbbc(%rip)
3986(9): mov $0x0,0x50(%rsp)
398f(5): mov $0x1,0xe(%rsp)
3994(3): xor %r12d,%r12d
3997(5): mov $0x0,0x7c(%rsp)
399c(5): jmp 0xfffffddf(%rip)
39a1(5): mov 0x30(%rsp),%r11
39a6(3): mov %r14,%rsi
39a9(3): mov %r13,%rcx
39ac(3): mov %rbx,%rax
39af(3): mov %rbx,%rdi
39b2(6): movzx 0x7d(%rsp),%r8d
39b8(5): movzx 0x7e(%rsp),%ebx
39bd(8): mov 0x88(%rsp),%r9
39c5(3): cmp %r11,%rsi
39c8(6): movzx 0x7f(%rsp),%r10d
39ce(8): mov 0x80(%rsp),%r15
39d6(5): mov 0x40(%rsp),%r14
39db(5): mov 0x70(%rsp),%r13
39e0(2): jnb 0x28(%rip)
39e2(3): cmp $0x0,(%rcx)
39e5(2): jnz 0x12(%rip)
39e7(2): jmp 0x21(%rip)
39e9(7): nop 0x0(%rax)
39f0(5): cmp $0x0,0x0(%r9,%rax,1)
39f5(2): jz 0x10(%rip)
39f7(4): add $0x1,%rax
39fb(5): lea 0x0(%rbp,%rax,1),%rdx
3a00(3): cmp %rdx,%r11
3a03(2): jnbe 0xffffffed(%rip)
3a05(3): mov %rax,%rdi
3a08(5): movzx 0xd(%rsp),%edx
3a0d(3): xor %r12d,%r12d
3a10(5): jmp 0xfffffa66(%rip)
3a15(3): mov %rbx,%rdi
3a18(6): movzx 0x7d(%rsp),%r8d
3a1e(5): movzx 0x7e(%rsp),%ebx
3a23(6): movzx 0x7f(%rsp),%r10d
3a29(8): mov 0x80(%rsp),%r15
3a31(3): xor %r12d,%r12d
3a34(5): mov 0x40(%rsp),%r14
3a39(5): mov 0x70(%rsp),%r13
3a3e(5): mov 0x30(%rsp),%r11
3a43(5): movzx 0xd(%rsp),%edx
3a48(5): jmp 0xfffffa2e(%rip)
3a4d(5): mov 0x68(%rsp),%rdx
3a52(3): movzx (%rdx),%eax
3a55(2): test %al,%al
3a57(6): jz 0xfffffe35(%rip)
3a5d(3): nop (%rax)
3a60(3): cmp %r15,%r13
3a63(2): jbe 0x6(%rip)
3a65(4): mov %al,0x0(%r14,%r15,1)
3a69(4): add $0x1,%r15
3a6d(5): movzx 0x0(%rdx,%r15,1),%eax
3a72(2): test %al,%al
3a74(2): jnz 0xffffffec(%rip)
3a76(5): jmp 0xfffffe16(%rip)
3a7b(2): mov %edx,%eax
3a7d(5): jmp 0xfffff55a(%rip)
3a82(4): movzx 0x0(%rax,%rcx,1),%ebx
3a86(3): cmp $0x3e,%bl
3a89(6): jnbe 0xfffff877(%rip)
3a8f(a): mov $0x8070630310989004800,%rax
3a99(4): bt %rbx,%rax
3a9d(6): jnb 0xfffff863(%rip)
3aa3(5): cmp $0x0,0xf(%rsp)
3aa8(6): jnz 0x1ea(%rip)
3aae(3): cmp %r15,%r13
3ab1(2): jbe 0x7(%rip)
3ab3(5): mov $0x3f,0x0(%r14,%r15,1)
3ab8(4): lea 0x1(%r15),%rax
3abc(3): cmp %rax,%r13
3abf(2): jbe 0x8(%rip)
3ac1(6): mov $0x22,0x1(%r14,%r15,1)
3ac7(4): lea 0x2(%r15),%rax
3acb(3): cmp %rax,%r13
3ace(2): jbe 0x8(%rip)
3ad0(6): mov $0x22,0x2(%r14,%r15,1)
3ad6(4): lea 0x3(%r15),%rax
3ada(3): cmp %rax,%r13
3add(2): jbe 0x8(%rip)
3adf(6): mov $0x3f,0x3(%r14,%r15,1)
3ae5(4): add $0x4,%r15
3ae9(2): xor %edx,%edx
3aeb(3): xor %r12d,%r12d
3aee(2): xor %eax,%eax
3af0(3): mov %rcx,%rbp
3af3(5): jmp 0xfffff1c5(%rip)
3af8(2): test %ebx,%ebx
3afa(6): jz 0x18e(%rip)
3b00(7): lea 0x2476(%rip),%rax
3b07(5): mov $0x1,0xe(%rsp)
3b0c(5): mov $0x0,0x7c(%rsp)
3b11(3): xor %r12d,%r12d
3b14(9): mov $0x0,0x50(%rsp)
3b1d(5): mov $0x1,0xf(%rsp)
3b22(5): mov $0x0,0xd(%rsp)
3b27(9): mov $0x1,0x18(%rsp)
3b30(3): xor %r15d,%r15d
3b33(5): mov %rax,0x48(%rsp)
3b38(5): jmp 0xfffff02b(%rip)
3b3d(3): nop (%rax)
3b40(3): mov %r11,%rbp
3b43(5): movzx 0xf(%rsp),%eax
3b48(5): jmp 0xfffffad1(%rip)
3b4d(7): lea 0x2427(%rip),%rax
3b54(5): mov $0x1,0xe(%rsp)
3b59(5): mov $0x0,0x7c(%rsp)
3b5e(3): xor %r12d,%r12d
3b61(9): mov $0x0,0x50(%rsp)
3b6a(5): mov $0x1,0xf(%rsp)
3b6f(5): mov $0x1,0xd(%rsp)
3b74(9): mov $0x1,0x18(%rsp)
3b7d(3): xor %r15d,%r15d
3b80(5): mov %rax,0x48(%rsp)
3b85(5): jmp 0xffffefde(%rip)
3b8a(2): mov %edx,%eax
3b8c(5): mov 0x48(%rsp),%rbx
3b91(3): test %rbx,%rbx
3b94(2): jz 0x2e(%rip)
3b96(2): test %al,%al
3b98(2): jz 0x2a(%rip)
3b9a(3): movzx (%rbx),%ecx
3b9d(3): mov %rbx,%rax
3ba0(2): test %cl,%cl
3ba2(2): jz 0x20(%rip)
3ba4(3): mov %r15,%rdx
3ba7(3): sub %r15,%rax
3baa(3): cmp %rdx,%r13
3bad(2): jbe 0x6(%rip)
3baf(4): mov %cl,0x0(%r14,%rdx,1)
3bb3(4): add $0x1,%rdx
3bb7(4): movzx 0x0(%rax,%rdx,1),%ecx
3bbb(2): test %cl,%cl
3bbd(2): jnz 0xffffffed(%rip)
3bbf(3): mov %rdx,%r15
3bc2(3): cmp %r15,%r13
3bc5(6): jbe 0xfffffaa4(%rip)
3bcb(5): mov $0x0,0x0(%r14,%r15,1)
3bd0(5): jmp 0xfffffa99(%rip)
3bd5(5): cmp $0x2,0x8(%rsp)
3bda(5): movzx 0xf(%rsp),%ebx
3bdf(3): mov %r11,%rbp
3be2(3): setz %al
3be5(4): mov %bl,0xd(%rsp)
3be9(5): jmp 0xfffffa30(%rip)
3bee(4): mov 0x8(%rsp),%esi
3bf2(3): mov %rcx,%rdi
3bf5(5): call 0xffffedab(%rip)
3bfa(5): mov %rax,0x68(%rsp)
3bff(5): jmp 0xfffffc57(%rip)
3c04(4): mov 0x8(%rsp),%esi
3c08(3): mov %rcx,%rdi
3c0b(5): call 0xffffed95(%rip)
3c10(5): mov %rax,0x60(%rsp)
3c15(5): jmp 0xfffffc6c(%rip)
3c1a(5): movzx 0xf(%rsp),%ebx
3c1f(3): mov %r11,%rbp
3c22(2): mov %edx,%eax
3c24(4): mov %bl,0xd(%rsp)
3c28(5): jmp 0xfffff9f1(%rip)
3c2d(4): sub $0x8,%rsp
3c31(6): mov $0x5,%r8d
3c37(3): mov %r11,%rcx
3c3a(4): push 0x68(%rsp)
3c3e(4): push 0x78(%rsp)
3c42(3): mov %r14,%rdi
3c45(4): push 0x38(%rsp)
3c49(8): mov 0x98(%rsp),%r9d
3c51(5): mov 0x30(%rsp),%rdx
3c56(5): mov 0x70(%rsp),%rsi
3c5b(5): call 0xffffee35(%rip)
3c60(4): add $0x20,%rsp
3c64(3): mov %rax,%r15
3c67(5): jmp 0xfffffa02(%rip)
3c6c(5): movzx 0x7c(%rsp),%eax
3c71(5): jmp 0xffffff1b(%rip)
3c76(8): mov $0x2,0x8(%rsp)
3c7e(5): jmp 0xfffff99b(%rip)
3c83(5): call 0xffffd7fd(%rip)
3c88(5): mov $0x0,0xd(%rsp)
3c8d(5): jmp 0xfffffa74(%rip)
3c92(3): mov %r11,%rbp
3c95(5): jmp 0xfffff99b(%rip)
3c9a(5): mov $0x1,0xe(%rsp)
3c9f(2): xor %eax,%eax
3ca1(3): xor %r12d,%r12d
3ca4(9): mov $0x0,0x50(%rsp)
3cad(5): jmp 0xfffff5a7(%rip)
3cb2(3): mov %r13,%rdx
3cb5(5): mov 0x50(%rsp),%r13
3cba(5): jmp 0xfffff5f8(%rip)
3cbf(5): call 0xffffd711(%rip)

"quotearg_n_options" :
3cd0(2): push %r15
3cd2(2): push %r14
3cd4(3): movsxd %edi,%r15
3cd7(2): push %r13
3cd9(2): push %r12
3cdb(3): mov %rdx,%r14
3cde(1): push %rbp
3cdf(1): push %rbx
3ce0(3): mov %rcx,%rbp
3ce3(4): sub $0x28,%rsp
3ce7(5): mov %rsi,0x8(%rsp)
3cec(5): call 0xffffd6f4(%rip)
3cf1(3): mov %rax,%r13
3cf4(2): mov (%rax),%eax
3cf6(3): test %r15d,%r15d
3cf9(7): mov 0x204360(%rip),%rbx
3d00(4): mov %eax,0x18(%rsp)
3d04(6): js 0x16d(%rip)
3d0a(7): cmp %r15d,0x204347(%rip)
3d11(2): jnle 0x64(%rip)
3d13(7): cmp $0x7fffffff,%r15d
3d1a(6): jz 0x15c(%rip)
3d20(4): lea 0x1(%r15),%r12d
3d24(7): lea 0x204345(%rip),%rax
3d2b(3): movsxd %r12d,%rsi
3d2e(4): shl/sal $0x4,%rsi
3d32(3): cmp %rax,%rbx
3d35(6): jz 0x11b(%rip)
3d3b(3): mov %rbx,%rdi
3d3e(5): call 0xf72(%rip)
3d43(3): mov %rax,%rbx
3d46(7): mov %rax,0x204313(%rip)
3d4d(7): movsxd 0x204304(%rip),%rdi
3d54(3): mov %r12d,%edx
3d57(2): xor %esi,%esi
3d59(2): sub %edi,%edx
3d5b(4): shl/sal $0x4,%rdi
3d5f(3): movsxd %edx,%rdx
3d62(3): add %rbx,%rdi
3d65(4): shl/sal $0x4,%rdx
3d69(5): call 0xffffd797(%rip)
3d6e(7): mov %r12d,0x2042e3(%rip)
3d75(3): mov 0x4(%rbp),%eax
3d78(4): shl/sal $0x4,%r15
3d7c(4): sub $0x8,%rsp
3d80(3): add %r15,%rbx
3d83(4): lea 0x8(%rbp),%r15
3d87(4): mov 0x0(%rbp),%r8d
3d8b(3): mov (%rbx),%r11
3d8e(4): mov 0x8(%rbx),%r12
3d92(3): mov %r14,%rcx
3d95(3): or $0x1,%eax
3d98(4): mov %eax,0x24(%rsp)
3d9c(3): push 0x30(%rbp)
3d9f(3): mov %eax,%r9d
3da2(3): push 0x28(%rbp)
3da5(2): push %r15
3da7(3): mov %r11,%rsi
3daa(5): mov 0x28(%rsp),%rdx
3daf(3): mov %r12,%rdi
3db2(5): mov %r11,0x30(%rsp)
3db7(5): call 0xffffecd9(%rip)
3dbc(4): add $0x20,%rsp
3dc0(5): mov 0x10(%rsp),%r11
3dc5(3): cmp %rax,%r11
3dc8(2): jnbe 0x69(%rip)
3dca(4): lea 0x1(%rax),%rsi
3dce(7): lea 0x20432b(%rip),%rax
3dd5(3): cmp %rax,%r12
3dd8(3): mov %rsi,(%rbx)
3ddb(2): jz 0x14(%rip)
3ddd(3): mov %r12,%rdi
3de0(5): mov %rsi,0x10(%rsp)
3de5(5): call 0xffffd5db(%rip)
3dea(5): mov 0x10(%rsp),%rsi
3def(3): mov %rsi,%rdi
3df2(5): mov %rsi,0x10(%rsp)
3df7(5): call 0xe59(%rip)
3dfc(4): sub $0x8,%rsp
3e00(4): mov %rax,0x8(%rbx)
3e04(4): mov 0x0(%rbp),%r8d
3e08(3): push 0x30(%rbp)
3e0b(3): push 0x28(%rbp)
3e0e(3): mov %r14,%rcx
3e11(2): push %r15
3e13(5): mov 0x3c(%rsp),%r9d
3e18(3): mov %rax,%rdi
3e1b(5): mov 0x28(%rsp),%rdx
3e20(5): mov 0x30(%rsp),%rsi
3e25(3): mov %rax,%r12
3e28(5): call 0xffffec68(%rip)
3e2d(4): add $0x20,%rsp
3e31(4): mov 0x18(%rsp),%eax
3e35(4): mov %eax,0x0(%r13)
3e39(4): add $0x28,%rsp
3e3d(3): mov %r12,%rax
3e40(1): pop %rbx
3e41(1): pop %rbp
3e42(2): pop %r12
3e44(2): pop %r13
3e46(2): pop %r14
3e48(2): pop %r15
3e4a(1): ret near (%rsp)
3e4b(5): nop 0x0(%rax,%rax,1)
3e50(2): xor %edi,%edi
3e52(5): call 0xe5e(%rip)
3e57(8): movdqa 0x204211(%rip),%xmm0
3e5f(3): mov %rax,%rbx
3e62(7): mov %rax,0x2041f7(%rip)
3e69(3): movups %xmm0,(%rax)
3e6c(5): jmp 0xfffffee1(%rip)
3e71(5): call 0xffffd55f(%rip)
3e76(5): call 0x102a(%rip)

"clone_quoting_options" :
3e80(2): push %r12
3e82(1): push %rbp
3e83(1): push %rbx
3e84(3): mov %rdi,%rbx
3e87(5): call 0xffffd559(%rip)
3e8c(3): mov (%rax),%r12d
3e8f(3): mov %rax,%rbp
3e92(7): lea 0x204367(%rip),%rax
3e99(3): test %rbx,%rbx
3e9c(5): mov $0x38,%esi
3ea1(4): cmove %rax,%rbx
3ea5(3): mov %rbx,%rdi
3ea8(5): call 0xfa8(%rip)
3ead(4): mov %r12d,0x0(%rbp)
3eb1(1): pop %rbx
3eb2(1): pop %rbp
3eb3(2): pop %r12
3eb5(1): ret near (%rsp)

"get_quoting_style" :
3ec0(7): lea 0x204339(%rip),%rax
3ec7(3): test %rdi,%rdi
3eca(4): cmove %rax,%rdi
3ece(2): mov (%rdi),%eax
3ed0(1): ret near (%rsp)

"set_quoting_style" :
3ee0(7): lea 0x204319(%rip),%rax
3ee7(3): test %rdi,%rdi
3eea(4): cmove %rax,%rdi
3eee(2): mov %esi,(%rdi)
3ef0(1): ret near (%rsp)

"set_char_quoting" :
3f00(7): lea 0x2042f9(%rip),%rax
3f07(3): test %rdi,%rdi
3f0a(2): mov %esi,%ecx
3f0c(4): cmove %rax,%rdi
3f10(2): mov %esi,%eax
3f12(3): and $0x1f,%ecx
3f15(3): shr $0x5,%al
3f18(3): movzx %al,%eax
3f1b(5): lea 0x8(%rdi,%rax,4),%rdi
3f20(2): mov (%rdi),%esi
3f22(2): mov %esi,%eax
3f24(2): shr %cl,%eax
3f26(2): xor %eax,%edx
3f28(3): and $0x1,%eax
3f2b(3): and $0x1,%edx
3f2e(2): shl/sal %cl,%edx
3f30(2): xor %esi,%edx
3f32(2): mov %edx,(%rdi)
3f34(1): ret near (%rsp)

"set_quoting_flags" :
3f40(7): lea 0x2042b9(%rip),%rax
3f47(3): test %rdi,%rdi
3f4a(4): cmove %rax,%rdi
3f4e(3): mov 0x4(%rdi),%eax
3f51(3): mov %esi,0x4(%rdi)
3f54(1): ret near (%rsp)

"set_custom_quoting" :
3f60(7): lea 0x204299(%rip),%rax
3f67(3): test %rdi,%rdi
3f6a(4): cmove %rax,%rdi
3f6e(3): test %rsi,%rsi
3f71(6): mov $0xa,(%rdi)
3f77(2): jz 0x10(%rip)
3f79(3): test %rdx,%rdx
3f7c(2): jz 0xb(%rip)
3f7e(4): mov %rsi,0x28(%rdi)
3f82(4): mov %rdx,0x30(%rdi)
3f86(1): ret near (%rsp)
3f87(4): sub $0x8,%rsp
3f8b(5): call 0xffffd445(%rip)

"quotearg_buffer" :
3f90(2): push %r15
3f92(2): push %r14
3f94(7): lea 0x204265(%rip),%rax
3f9b(2): push %r13
3f9d(2): push %r12
3f9f(3): mov %rdi,%r13
3fa2(1): push %rbp
3fa3(1): push %rbx
3fa4(3): mov %r8,%rbx
3fa7(3): mov %rsi,%r14
3faa(3): mov %rdx,%r15
3fad(4): sub $0x18,%rsp
3fb1(3): test %r8,%r8
3fb4(4): cmove %rax,%rbx
3fb8(5): mov %rcx,0x8(%rsp)
3fbd(5): call 0xffffd423(%rip)
3fc2(3): mov (%rax),%r12d
3fc5(3): mov %rax,%rbp
3fc8(4): lea 0x8(%rbx),%rax
3fcc(4): sub $0x8,%rsp
3fd0(4): mov 0x4(%rbx),%r9d
3fd4(3): push 0x30(%rbx)
3fd7(3): mov (%rbx),%r8d
3fda(3): push 0x28(%rbx)
3fdd(3): mov %r15,%rdx
3fe0(1): push %rax
3fe1(5): mov 0x28(%rsp),%rcx
3fe6(3): mov %r14,%rsi
3fe9(3): mov %r13,%rdi
3fec(5): call 0xffffeaa4(%rip)
3ff1(4): mov %r12d,0x0(%rbp)
3ff5(4): add $0x38,%rsp
3ff9(1): pop %rbx
3ffa(1): pop %rbp
3ffb(2): pop %r12
3ffd(2): pop %r13
3fff(2): pop %r14
4001(2): pop %r15
4003(1): ret near (%rsp)

"quotearg_alloc_mem" :
4010(2): push %r15
4012(2): push %r14
4014(7): lea 0x2041e5(%rip),%rax
401b(2): push %r13
401d(2): push %r12
401f(3): mov %rdx,%r12
4022(1): push %rbp
4023(1): push %rbx
4024(3): mov %rcx,%rbx
4027(3): mov %rdi,%r14
402a(3): mov %rsi,%r15
402d(4): sub $0x38,%rsp
4031(3): test %rcx,%rcx
4034(4): cmove %rax,%rbx
4038(2): xor %ebp,%ebp
403a(5): call 0xffffd3a6(%rip)
403f(3): test %r12,%r12
4042(3): mov %rax,%r13
4045(2): mov (%rax),%eax
4047(4): setz %bpl
404b(3): or 0x4(%rbx),%ebp
404e(4): lea 0x8(%rbx),%r10
4052(4): sub $0x8,%rsp
4056(3): mov (%rbx),%r8d
4059(3): mov %r15,%rcx
405c(4): mov %eax,0x14(%rsp)
4060(3): push 0x30(%rbx)
4063(3): mov %r14,%rdx
4066(3): push 0x28(%rbx)
4069(2): push %r10
406b(2): xor %esi,%esi
406d(3): mov %ebp,%r9d
4070(2): xor %edi,%edi
4072(5): mov %r10,0x40(%rsp)
4077(5): call 0xffffea19(%rip)
407c(4): lea 0x1(%rax),%rsi
4080(5): mov %rax,0x48(%rsp)
4085(4): add $0x20,%rsp
4089(3): mov %rsi,%rdi
408c(5): mov %rsi,0x18(%rsp)
4091(5): call 0xbbf(%rip)
4096(5): mov %rax,0x10(%rsp)
409b(4): sub $0x8,%rsp
409f(3): push 0x30(%rbx)
40a2(3): push 0x28(%rbx)
40a5(5): mov 0x38(%rsp),%r10
40aa(3): mov %ebp,%r9d
40ad(3): mov (%rbx),%r8d
40b0(3): mov %r15,%rcx
40b3(3): mov %r14,%rdx
40b6(3): mov %rax,%rdi
40b9(2): push %r10
40bb(5): mov 0x38(%rsp),%rsi
40c0(5): call 0xffffe9d0(%rip)
40c5(4): mov 0x2c(%rsp),%eax
40c9(4): add $0x20,%rsp
40cd(3): test %r12,%r12
40d0(4): mov %eax,0x0(%r13)
40d4(2): jz 0xb(%rip)
40d6(5): mov 0x28(%rsp),%r11
40db(4): mov %r11,(%r12)
40df(5): mov 0x10(%rsp),%rax
40e4(4): add $0x38,%rsp
40e8(1): pop %rbx
40e9(1): pop %rbp
40ea(2): pop %r12
40ec(2): pop %r13
40ee(2): pop %r14
40f0(2): pop %r15
40f2(1): ret near (%rsp)

"quotearg_alloc" :
4100(3): mov %rdx,%rcx
4103(2): xor %edx,%edx
4105(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4110(6): mov 0x203f42(%rip),%eax
4116(2): push %r12
4118(7): mov 0x203f41(%rip),%r12
411f(1): push %rbp
4120(1): push %rbx
4121(3): cmp $0x1,%eax
4124(2): jle 0x2d(%rip)
4126(3): sub $0x2,%eax
4129(5): lea 0x18(%r12),%rbx
412e(4): shl/sal $0x4,%rax
4132(5): lea 0x28(%r12,%rax,1),%rbp
4137(9): nop 0x0(%rax,%rax,1)
4140(3): mov (%rbx),%rdi
4143(4): add $0x10,%rbx
4147(5): call 0xffffd279(%rip)
414c(3): cmp %rbp,%rbx
414f(2): jnz 0xfffffff1(%rip)
4151(5): mov 0x8(%r12),%rdi
4156(7): lea 0x203fa3(%rip),%rbx
415d(3): cmp %rbx,%rdi
4160(2): jz 0x19(%rip)
4162(5): call 0xffffd25e(%rip)
4167(b): mov $0x100,0x203efe(%rip)
4172(7): mov %rbx,0x203eff(%rip)
4179(7): lea 0x203ef0(%rip),%rbx
4180(3): cmp %rbx,%r12
4183(2): jz 0x11(%rip)
4185(3): mov %r12,%rdi
4188(5): call 0xffffd238(%rip)
418d(7): mov %rbx,0x203ecc(%rip)
4194(1): pop %rbx
4195(a): mov $0x1,0x203eb9(%rip)
419f(1): pop %rbp
41a0(2): pop %r12
41a2(1): ret near (%rsp)

"quotearg_n" :
41b0(7): lea 0x204049(%rip),%rcx
41b7(7): mov $0xffffffff,%rdx
41be(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
41d0(7): lea 0x204029(%rip),%rcx
41d7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
41e0(7): lea 0x204019(%rip),%rcx
41e7(3): mov %rdi,%rsi
41ea(7): mov $0xffffffff,%rdx
41f1(2): xor %edi,%edi
41f3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4200(7): lea 0x203ff9(%rip),%rcx
4207(3): mov %rsi,%rdx
420a(3): mov %rdi,%rsi
420d(2): xor %edi,%edi
420f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4220(4): sub $0x48,%rsp
4224(3): mov %rdx,%rax
4227(9): mov $0x28,%rdx
4230(5): mov %rdx,0x38(%rsp)
4235(2): xor %edx,%edx
4237(3): cmp $0xa,%esi
423a(2): jz 0x6a(%rip)
423c(3): mov %esi,(%rsp)
423f(3): mov %rsp,%rcx
4242(7): mov $0xffffffff,%rdx
4249(3): mov %rax,%rsi
424c(9): mov $0x0,0x4(%rsp)
4255(9): mov $0x0,0xc(%rsp)
425e(9): mov $0x0,0x14(%rsp)
4267(9): mov $0x0,0x1c(%rsp)
4270(9): mov $0x0,0x24(%rsp)
4279(9): mov $0x0,0x2c(%rsp)
4282(8): mov $0x0,0x34(%rsp)
428a(5): call 0xfffffa46(%rip)
428f(5): mov 0x38(%rsp),%rcx
4294(9): xor $0x28,%rcx
429d(2): jnz 0xc(%rip)
429f(4): add $0x48,%rsp
42a3(1): ret near (%rsp)
42a4(5): call 0xffffd12c(%rip)
42a9(5): call 0xffffd1d7(%rip)

"quotearg_n_style_mem" :
42b0(4): sub $0x48,%rsp
42b4(3): mov %rdx,%rax
42b7(3): mov %rcx,%rdx
42ba(9): mov $0x28,%rcx
42c3(5): mov %rcx,0x38(%rsp)
42c8(2): xor %ecx,%ecx
42ca(3): cmp $0xa,%esi
42cd(2): jz 0x63(%rip)
42cf(3): mov %esi,(%rsp)
42d2(3): mov %rsp,%rcx
42d5(3): mov %rax,%rsi
42d8(9): mov $0x0,0x4(%rsp)
42e1(9): mov $0x0,0xc(%rsp)
42ea(9): mov $0x0,0x14(%rsp)
42f3(9): mov $0x0,0x1c(%rsp)
42fc(9): mov $0x0,0x24(%rsp)
4305(9): mov $0x0,0x2c(%rsp)
430e(8): mov $0x0,0x34(%rsp)
4316(5): call 0xfffff9ba(%rip)
431b(5): mov 0x38(%rsp),%rdx
4320(9): xor $0x28,%rdx
4329(2): jnz 0xc(%rip)
432b(4): add $0x48,%rsp
432f(1): ret near (%rsp)
4330(5): call 0xffffd0a0(%rip)
4335(5): call 0xffffd14b(%rip)

"quotearg_style" :
4340(3): mov %rsi,%rdx
4343(2): mov %edi,%esi
4345(2): xor %edi,%edi
4347(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4350(3): mov %rdx,%rcx
4353(3): mov %rsi,%rdx
4356(2): mov %edi,%esi
4358(2): xor %edi,%edi
435a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4360(4): sub $0x48,%rsp
4364(2): mov %edx,%ecx
4366(9): mov $0x28,%rax
436f(5): mov %rax,0x38(%rsp)
4374(2): xor %eax,%eax
4376(7): mov 0x203eb3(%rip),%rax
437d(3): mov %rsp,%r8
4380(3): and $0x1f,%ecx
4383(8): movdqa 0x203e75(%rip),%xmm0
438b(5): mov %rax,0x30(%rsp)
4390(2): mov %edx,%eax
4392(4): movaps %xmm0,(%rsp)
4396(3): shr $0x5,%al
4399(3): movzx %al,%eax
439c(5): lea 0x8(%r8,%rax,4),%r9
43a1(8): movdqa 0x203e67(%rip),%xmm0
43a9(5): movaps %xmm0,0x10(%rsp)
43ae(8): movdqa 0x203e6a(%rip),%xmm0
43b6(5): movaps %xmm0,0x20(%rsp)
43bb(3): mov (%r9),%edx
43be(2): mov %edx,%eax
43c0(2): shr %cl,%eax
43c2(2): not %eax
43c4(3): and $0x1,%eax
43c7(2): shl/sal %cl,%eax
43c9(3): mov %r8,%rcx
43cc(2): xor %edx,%eax
43ce(3): mov %rsi,%rdx
43d1(3): mov %rdi,%rsi
43d4(3): mov %eax,(%r9)
43d7(2): xor %edi,%edi
43d9(5): call 0xfffff8f7(%rip)
43de(5): mov 0x38(%rsp),%rsi
43e3(9): xor $0x28,%rsi
43ec(2): jnz 0x7(%rip)
43ee(4): add $0x48,%rsp
43f2(1): ret near (%rsp)
43f3(5): call 0xffffd08d(%rip)

"quotearg_char" :
4400(4): movsx %sil,%edx
4404(7): mov $0xffffffff,%rsi
440b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4410(5): mov $0x3a,%edx
4415(7): mov $0xffffffff,%rsi
441c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4430(5): mov $0x3a,%edx
4435(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4440(4): sub $0x48,%rsp
4444(3): mov %rdx,%rax
4447(9): mov $0x28,%rdx
4450(5): mov %rdx,0x38(%rsp)
4455(2): xor %edx,%edx
4457(3): cmp $0xa,%esi
445a(2): jz 0x6a(%rip)
445c(3): mov %esi,(%rsp)
445f(3): mov %rsp,%rcx
4462(7): mov $0xffffffff,%rdx
4469(3): mov %rax,%rsi
446c(9): mov $0x0,0x4(%rsp)
4475(9): mov $0x4000000,0xc(%rsp)
447e(9): mov $0x0,0x14(%rsp)
4487(9): mov $0x0,0x1c(%rsp)
4490(9): mov $0x0,0x24(%rsp)
4499(9): mov $0x0,0x2c(%rsp)
44a2(8): mov $0x0,0x34(%rsp)
44aa(5): call 0xfffff826(%rip)
44af(5): mov 0x38(%rsp),%rcx
44b4(9): xor $0x28,%rcx
44bd(2): jnz 0xc(%rip)
44bf(4): add $0x48,%rsp
44c3(1): ret near (%rsp)
44c4(5): call 0xffffcf0c(%rip)
44c9(5): call 0xffffcfb7(%rip)

"quotearg_n_custom_mem" :
44d0(4): sub $0x48,%rsp
44d4(3): mov %rcx,%r9
44d7(7): mov 0x203d52(%rip),%rcx
44de(8): movdqa 0x203d1a(%rip),%xmm0
44e6(9): mov $0x28,%rax
44ef(5): mov %rax,0x38(%rsp)
44f4(2): xor %eax,%eax
44f6(4): movaps %xmm0,(%rsp)
44fa(3): test %rsi,%rsi
44fd(5): mov %rcx,0x30(%rsp)
4502(7): mov $0xa,(%rsp)
4509(8): movdqa 0x203cff(%rip),%xmm0
4511(5): movaps %xmm0,0x10(%rsp)
4516(8): movdqa 0x203d02(%rip),%xmm0
451e(5): movaps %xmm0,0x20(%rsp)
4523(2): jz 0x34(%rip)
4525(3): test %rdx,%rdx
4528(2): jz 0x2f(%rip)
452a(5): mov %rsi,0x28(%rsp)
452f(5): mov %rdx,0x30(%rsp)
4534(3): mov %rsp,%rcx
4537(3): mov %r8,%rdx
453a(3): mov %r9,%rsi
453d(5): call 0xfffff793(%rip)
4542(5): mov 0x38(%rsp),%rdi
4547(9): xor $0x28,%rdi
4550(2): jnz 0xc(%rip)
4552(4): add $0x48,%rsp
4556(1): ret near (%rsp)
4557(5): call 0xffffce79(%rip)
455c(5): call 0xffffcf24(%rip)

"quotearg_n_custom" :
4570(7): mov $0xffffffff,%r8
4577(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4580(3): mov %rdx,%rcx
4583(7): mov $0xffffffff,%r8
458a(3): mov %rsi,%rdx
458d(3): mov %rdi,%rsi
4590(2): xor %edi,%edi
4592(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
45a0(3): mov %rcx,%r8
45a3(3): mov %rdx,%rcx
45a6(3): mov %rsi,%rdx
45a9(3): mov %rdi,%rsi
45ac(2): xor %edi,%edi
45ae(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
45c0(7): lea 0x203a59(%rip),%rcx
45c7(5): jmp 0xfffff709(%rip)

"quote_mem" :
45d0(7): lea 0x203a49(%rip),%rcx
45d7(3): mov %rsi,%rdx
45da(3): mov %rdi,%rsi
45dd(2): xor %edi,%edi
45df(5): jmp 0xfffff6f1(%rip)

"quote_n" :
45f0(7): lea 0x203a29(%rip),%rcx
45f7(7): mov $0xffffffff,%rdx
45fe(5): jmp 0xfffff6d2(%rip)

"quote" :
4610(7): lea 0x203a09(%rip),%rcx
4617(3): mov %rdi,%rsi
461a(7): mov $0xffffffff,%rdx
4621(2): xor %edi,%edi
4623(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4630(2): push %r15
4632(2): push %r14
4634(2): push %r13
4636(2): push %r12
4638(3): mov %r9,%r12
463b(1): push %rbp
463c(1): push %rbx
463d(3): mov %rdi,%rbp
4640(3): mov %r8,%rbx
4643(4): sub $0x28,%rsp
4647(3): test %rsi,%rsi
464a(6): jz 0x11e(%rip)
4650(3): mov %rdx,%r8
4653(7): lea 0x1dee(%rip),%rdx
465a(3): mov %rcx,%r9
465d(2): xor %eax,%eax
465f(3): mov %rsi,%rcx
4662(5): mov $0x1,%esi
4667(5): call 0xffffd009(%rip)
466c(7): lea 0x1de8(%rip),%rsi
4673(2): xor %edi,%edi
4675(5): mov $0x5,%edx
467a(5): call 0xffffcdd6(%rip)
467f(7): lea 0x20fa(%rip),%rdx
4686(3): mov %rax,%rcx
4689(6): mov $0x7e3,%r8d
468f(5): mov $0x1,%esi
4694(3): mov %rbp,%rdi
4697(2): xor %eax,%eax
4699(5): call 0xffffcfd7(%rip)
469e(7): lea 0x1e43(%rip),%rsi
46a5(2): xor %edi,%edi
46a7(5): mov $0x5,%edx
46ac(5): call 0xffffcda4(%rip)
46b1(3): mov %rbp,%rsi
46b4(3): mov %rax,%rdi
46b7(5): call 0xffffce69(%rip)
46bc(4): cmp $0x9,%r12
46c0(6): jnbe 0x340(%rip)
46c6(7): lea 0x2077(%rip),%rdx
46cd(4): movsxd 0x0(%rdx,%r12,4),%rax
46d1(3): add %rdx,%rax
46d4(2): jmp %rax
46d6(a): nop 0x0(%rax,%rax,1)
46e0(4): mov 0x38(%rbx),%r9
46e4(4): mov 0x10(%rbx),%rax
46e8(7): lea 0x1f69(%rip),%rsi
46ef(4): mov 0x8(%rbx),%r8
46f3(5): mov $0x5,%edx
46f8(2): xor %edi,%edi
46fa(4): mov 0x30(%rbx),%r13
46fe(4): mov 0x28(%rbx),%r12
4702(5): mov %r9,0x10(%rsp)
4707(4): mov 0x20(%rbx),%r15
470b(4): mov 0x18(%rbx),%r14
470f(4): mov %rax,(%rsp)
4713(5): mov %r8,0x8(%rsp)
4718(3): mov (%rbx),%rbx
471b(5): call 0xffffcd35(%rip)
4720(4): sub $0x8,%rsp
4724(5): mov 0x18(%rsp),%r9
4729(3): mov %rax,%rdx
472c(3): mov %rbx,%rcx
472f(5): mov $0x1,%esi
4734(3): mov %rbp,%rdi
4737(2): xor %eax,%eax
4739(2): push %r9
473b(2): push %r13
473d(2): push %r12
473f(2): push %r15
4741(2): push %r14
4743(5): mov 0x30(%rsp),%r9
4748(5): mov 0x38(%rsp),%r8
474d(5): call 0xffffcf23(%rip)
4752(4): add $0x30,%rsp
4756(4): add $0x28,%rsp
475a(1): pop %rbx
475b(1): pop %rbp
475c(2): pop %r12
475e(2): pop %r13
4760(2): pop %r14
4762(2): pop %r15
4764(1): ret near (%rsp)
4765(3): nop (%rax)
4768(3): mov %rcx,%r8
476b(3): mov %rdx,%rcx
476e(7): lea 0x1cdf(%rip),%rdx
4775(5): mov $0x1,%esi
477a(2): xor %eax,%eax
477c(5): call 0xffffcef4(%rip)
4781(5): jmp 0xfffffeeb(%rip)
4786(a): nop 0x0(%rax,%rax,1)
4790(4): mov 0x40(%rbx),%r10
4794(4): mov 0x38(%rbx),%r9
4798(7): lea 0x1ee9(%rip),%rsi
479f(4): mov 0x10(%rbx),%rax
47a3(4): mov 0x8(%rbx),%r8
47a7(5): mov $0x5,%edx
47ac(4): mov 0x30(%rbx),%r13
47b0(4): mov 0x28(%rbx),%r12
47b4(4): mov 0x20(%rbx),%r15
47b8(4): mov 0x18(%rbx),%r14
47bc(3): mov (%rbx),%rbx
47bf(5): mov %r10,0x18(%rsp)
47c4(5): mov %r9,0x10(%rsp)
47c9(4): mov %rax,(%rsp)
47cd(5): mov %r8,0x8(%rsp)
47d2(2): xor %edi,%edi
47d4(5): call 0xffffcc7c(%rip)
47d9(5): mov 0x18(%rsp),%r10
47de(2): push %r10
47e0(5): jmp 0xffffff44(%rip)
47e5(3): nop (%rax)
47e8(3): mov (%rbx),%rbx
47eb(7): lea 0x1c6d(%rip),%rsi
47f2(5): mov $0x5,%edx
47f7(2): xor %edi,%edi
47f9(5): call 0xffffcc57(%rip)
47fe(4): add $0x28,%rsp
4802(3): mov %rbx,%rcx
4805(3): mov %rbp,%rdi
4808(1): pop %rbx
4809(1): pop %rbp
480a(2): pop %r12
480c(2): pop %r13
480e(2): pop %r14
4810(2): pop %r15
4812(3): mov %rax,%rdx
4815(5): mov $0x1,%esi
481a(2): xor %eax,%eax
481c(5): jmp 0xffffce54(%rip)
4821(7): nop 0x0(%rax)
4828(4): mov 0x8(%rbx),%r12
482c(7): lea 0x1c3c(%rip),%rsi
4833(3): mov (%rbx),%rbx
4836(5): mov $0x5,%edx
483b(2): xor %edi,%edi
483d(5): call 0xffffcc13(%rip)
4842(4): add $0x28,%rsp
4846(3): mov %r12,%r8
4849(3): mov %rbx,%rcx
484c(3): mov %rbp,%rdi
484f(3): mov %rax,%rdx
4852(5): mov $0x1,%esi
4857(1): pop %rbx
4858(1): pop %rbp
4859(2): pop %r12
485b(2): pop %r13
485d(2): pop %r14
485f(2): pop %r15
4861(2): xor %eax,%eax
4863(5): jmp 0xffffce0d(%rip)
4868(8): nop 0x0(%rax,%rax,1)
4870(4): mov 0x10(%rbx),%r13
4874(4): mov 0x8(%rbx),%r12
4878(7): lea 0x1c07(%rip),%rsi
487f(3): mov (%rbx),%rbx
4882(5): mov $0x5,%edx
4887(2): xor %edi,%edi
4889(5): call 0xffffcbc7(%rip)
488e(4): add $0x28,%rsp
4892(3): mov %r13,%r9
4895(3): mov %r12,%r8
4898(3): mov %rbx,%rcx
489b(3): mov %rbp,%rdi
489e(3): mov %rax,%rdx
48a1(1): pop %rbx
48a2(1): pop %rbp
48a3(2): pop %r12
48a5(2): pop %r13
48a7(2): pop %r14
48a9(2): pop %r15
48ab(5): mov $0x1,%esi
48b0(2): xor %eax,%eax
48b2(5): jmp 0xffffcdbe(%rip)
48b7(9): nop 0x0(%rax,%rax,1)
48c0(7): lea 0x1cf1(%rip),%rsi
48c7(5): mov $0x5,%edx
48cc(2): xor %edi,%edi
48ce(4): mov 0x18(%rbx),%r14
48d2(4): mov 0x10(%rbx),%r13
48d6(4): mov 0x8(%rbx),%r12
48da(3): mov (%rbx),%rbx
48dd(5): call 0xffffcb73(%rip)
48e2(4): sub $0x8,%rsp
48e6(2): push %r14
48e8(3): mov %rax,%rdx
48eb(3): mov %r13,%r9
48ee(3): mov %r12,%r8
48f1(3): mov %rbx,%rcx
48f4(3): mov %rbp,%rdi
48f7(5): mov $0x1,%esi
48fc(2): xor %eax,%eax
48fe(5): call 0xffffcd72(%rip)
4903(1): pop %rax
4904(1): pop %rdx
4905(4): add $0x28,%rsp
4909(1): pop %rbx
490a(1): pop %rbp
490b(2): pop %r12
490d(2): pop %r13
490f(2): pop %r14
4911(2): pop %r15
4913(1): ret near (%rsp)
4914(4): nop 0x0(%rax)
4918(4): mov 0x20(%rbx),%r15
491c(7): lea 0x1cb5(%rip),%rsi
4923(5): mov $0x5,%edx
4928(2): xor %edi,%edi
492a(4): mov 0x18(%rbx),%r14
492e(4): mov 0x10(%rbx),%r13
4932(4): mov 0x8(%rbx),%r12
4936(3): mov (%rbx),%rbx
4939(5): call 0xffffcb17(%rip)
493e(2): push %r15
4940(2): jmp 0xffffffa6(%rip)
4942(6): nop 0x0(%rax,%rax,1)
4948(4): mov 0x8(%rbx),%r8
494c(4): mov 0x28(%rbx),%r12
4950(7): lea 0x1ca9(%rip),%rsi
4957(4): mov 0x20(%rbx),%r15
495b(4): mov 0x18(%rbx),%r14
495f(5): mov $0x5,%edx
4964(4): mov 0x10(%rbx),%r13
4968(2): xor %edi,%edi
496a(3): mov (%rbx),%rbx
496d(4): mov %r8,(%rsp)
4971(5): call 0xffffcadf(%rip)
4976(4): sub $0x8,%rsp
497a(3): mov %r13,%r9
497d(2): push %r12
497f(2): push %r15
4981(2): push %r14
4983(5): mov 0x20(%rsp),%r8
4988(3): mov %rbx,%rcx
498b(3): mov %rax,%rdx
498e(3): mov %rbp,%rdi
4991(5): mov $0x1,%esi
4996(2): xor %eax,%eax
4998(5): call 0xffffccd8(%rip)
499d(4): add $0x20,%rsp
49a1(4): add $0x28,%rsp
49a5(1): pop %rbx
49a6(1): pop %rbp
49a7(2): pop %r12
49a9(2): pop %r13
49ab(2): pop %r14
49ad(2): pop %r15
49af(1): ret near (%rsp)
49b0(4): mov 0x10(%rbx),%r9
49b4(4): mov 0x30(%rbx),%r13
49b8(7): lea 0x1c69(%rip),%rsi
49bf(4): mov 0x28(%rbx),%r12
49c3(4): mov 0x20(%rbx),%r15
49c7(5): mov $0x5,%edx
49cc(4): mov 0x18(%rbx),%r14
49d0(4): mov 0x8(%rbx),%r8
49d4(2): xor %edi,%edi
49d6(5): mov %r9,0x8(%rsp)
49db(3): mov (%rbx),%rbx
49de(4): mov %r8,(%rsp)
49e2(5): call 0xffffca6e(%rip)
49e7(2): push %r13
49e9(2): push %r12
49eb(2): push %r15
49ed(2): push %r14
49ef(5): mov 0x28(%rsp),%r9
49f4(2): jmp 0xffffff8f(%rip)
49f6(a): nop 0x0(%rax,%rax,1)
4a00(4): mov 0x40(%rbx),%r10
4a04(4): mov 0x38(%rbx),%r9
4a08(5): mov $0x5,%edx
4a0d(4): mov 0x10(%rbx),%rax
4a11(4): mov 0x8(%rbx),%r8
4a15(7): lea 0x1ca4(%rip),%rsi
4a1c(4): mov 0x30(%rbx),%r13
4a20(4): mov 0x28(%rbx),%r12
4a24(4): mov 0x20(%rbx),%r15
4a28(4): mov 0x18(%rbx),%r14
4a2c(5): mov %r10,0x18(%rsp)
4a31(5): mov %r9,0x10(%rsp)
4a36(4): mov %rax,(%rsp)
4a3a(5): mov %r8,0x8(%rsp)
4a3f(3): mov (%rbx),%rbx
4a42(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4a50(3): xor %r9d,%r9d
4a53(4): cmp $0x0,(%r8)
4a57(2): jz 0x14(%rip)
4a59(7): nop 0x0(%rax)
4a60(4): add $0x1,%r9
4a64(5): cmp $0x0,0x0(%r8,%r9,8)
4a69(2): jnz 0xfffffff7(%rip)
4a6b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4a70(4): sub $0x68,%rsp
4a74(3): mov %r8,%r10
4a77(3): xor %r9d,%r9d
4a7a(9): mov $0x28,%rax
4a83(5): mov %rax,0x58(%rsp)
4a88(2): xor %eax,%eax
4a8a(3): mov %rsp,%r8
4a8d(3): nop (%rax)
4a90(3): mov (%r10),%eax
4a93(3): cmp $0x2f,%eax
4a96(2): jnbe 0x44(%rip)
4a98(3): mov %eax,%r11d
4a9b(4): add 0x10(%r10),%r11
4a9f(3): add $0x8,%eax
4aa2(3): mov %eax,(%r10)
4aa5(3): mov (%r11),%rax
4aa8(3): test %rax,%rax
4aab(4): mov %rax,0x0(%r8,%r9,8)
4aaf(2): jz 0xc(%rip)
4ab1(4): add $0x1,%r9
4ab5(4): cmp $0xa,%r9
4ab9(2): jnz 0xffffffd7(%rip)
4abb(5): call 0xfffffb75(%rip)
4ac0(5): mov 0x58(%rsp),%rax
4ac5(9): xor $0x28,%rax
4ace(2): jnz 0x7(%rip)
4ad0(4): add $0x68,%rsp
4ad4(1): ret near (%rsp)
4ad5(5): call 0xffffc9ab(%rip)
4ada(4): mov 0x8(%r10),%r11
4ade(4): lea 0x8(%r11),%rax
4ae2(4): mov %rax,0x8(%r10)
4ae6(2): jmp 0xffffffbf(%rip)

"version_etc" :
4af0(1): push %rbp
4af1(1): push %rbx
4af2(6): mov $0x20,%r10d
4af8(3): xor %r11d,%r11d
4afb(7): sub $0xb8,%rsp
4b02(9): mov $0x28,%rax
4b0b(5): mov %rax,0x78(%rsp)
4b10(2): xor %eax,%eax
4b12(8): lea 0xd0(%rsp),%rax
4b1a(8): mov %r8,0xa0(%rsp)
4b22(8): lea 0xd0(%rsp),%rbx
4b2a(5): lea 0x20(%rsp),%r8
4b2f(8): mov %r9,0xa8(%rsp)
4b37(8): mov $0x20,0x8(%rsp)
4b3f(5): mov %rax,0x10(%rsp)
4b44(8): lea 0x80(%rsp),%rax
4b4c(3): xor %r9d,%r9d
4b4f(5): mov %rax,0x18(%rsp)
4b54(3): mov %rax,%rbp
4b57(9): nop 0x0(%rax,%rax,1)
4b60(4): cmp $0x2f,%r10d
4b64(2): jnbe 0x58(%rip)
4b66(3): mov %r10d,%eax
4b69(6): mov $0x1,%r11d
4b6f(4): add $0x8,%r10d
4b73(3): add %rbp,%rax
4b76(3): mov (%rax),%rax
4b79(3): test %rax,%rax
4b7c(4): mov %rax,0x0(%r8,%r9,8)
4b80(2): jz 0xc(%rip)
4b82(4): add $0x1,%r9
4b86(4): cmp $0xa,%r9
4b8a(2): jnz 0xffffffd6(%rip)
4b8c(3): test %r11b,%r11b
4b8f(2): jnz 0x26(%rip)
4b91(5): call 0xfffffa9f(%rip)
4b96(5): mov 0x78(%rsp),%rax
4b9b(9): xor $0x28,%rax
4ba4(2): jnz 0xc(%rip)
4ba6(7): add $0xb8,%rsp
4bad(1): pop %rbx
4bae(1): pop %rbp
4baf(1): ret near (%rsp)
4bb0(5): call 0xffffc8d0(%rip)
4bb5(5): mov %r10d,0x8(%rsp)
4bba(2): jmp 0xffffffd7(%rip)
4bbc(3): mov %rbx,%rax
4bbf(4): add $0x8,%rbx
4bc3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4bd0(1): push %rbx
4bd1(7): lea 0x18ca(%rip),%rsi
4bd8(5): mov $0x5,%edx
4bdd(2): xor %edi,%edi
4bdf(5): call 0xffffc871(%rip)
4be4(7): lea 0x18cc(%rip),%rdx
4beb(3): mov %rax,%rsi
4bee(5): mov $0x1,%edi
4bf3(2): xor %eax,%eax
4bf5(5): call 0xffffca0b(%rip)
4bfa(7): lea 0x18cc(%rip),%rsi
4c01(5): mov $0x5,%edx
4c06(2): xor %edi,%edi
4c08(5): call 0xffffc848(%rip)
4c0d(7): lea 0x109c(%rip),%rcx
4c14(7): lea 0xae5(%rip),%rdx
4c1b(3): mov %rax,%rsi
4c1e(5): mov $0x1,%edi
4c23(2): xor %eax,%eax
4c25(5): call 0xffffc9db(%rip)
4c2a(7): mov 0x203457(%rip),%rbx
4c31(7): lea 0x1ac8(%rip),%rsi
4c38(2): xor %edi,%edi
4c3a(5): mov $0x5,%edx
4c3f(5): call 0xffffc811(%rip)
4c44(3): mov %rbx,%rsi
4c47(3): mov %rax,%rdi
4c4a(1): pop %rbx
4c4b(5): jmp 0xffffc8d5(%rip)

"xmalloc" :
4c50(1): push %rbx
4c51(3): mov %rdi,%rbx
4c54(5): call 0xffffc94c(%rip)
4c59(3): test %rax,%rax
4c5c(2): jnz 0x7(%rip)
4c5e(3): test %rbx,%rbx
4c61(2): jnz 0x4(%rip)
4c63(1): pop %rbx
4c64(1): ret near (%rsp)
4c65(5): call 0x23b(%rip)

"xnmalloc" :
4c70(3): mov %rdi,%rax
4c73(3): mul %rax,%rsi,%rdx
4c76(3): mov %rax,%rdi
4c79(3): seto %al
4c7c(3): test %rdi,%rdi
4c7f(2): js 0xc(%rip)
4c81(3): movzx %al,%eax
4c84(3): test %rax,%rax
4c87(2): jnz 0x4(%rip)
4c89(2): jmp 0xffffffc7(%rip)
4c8b(4): sub $0x8,%rsp
4c8f(5): call 0x211(%rip)

"xrealloc" :
4cb0(3): test %rsi,%rsi
4cb3(1): push %rbx
4cb4(3): mov %rsi,%rbx
4cb7(2): jnz 0x7(%rip)
4cb9(3): test %rdi,%rdi
4cbc(2): jnz 0x1c(%rip)
4cbe(3): mov %rbx,%rsi
4cc1(5): call 0xffffc91f(%rip)
4cc6(3): test %rax,%rax
4cc9(2): jnz 0x7(%rip)
4ccb(3): test %rbx,%rbx
4cce(2): jnz 0x13(%rip)
4cd0(1): pop %rbx
4cd1(1): ret near (%rsp)
4cd2(6): nop 0x0(%rax,%rax,1)
4cd8(5): call 0xffffc6e8(%rip)
4cdd(2): xor %eax,%eax
4cdf(1): pop %rbx
4ce0(1): ret near (%rsp)
4ce1(5): call 0x1bf(%rip)

"xnrealloc" :
4cf0(3): mov %rsi,%rax
4cf3(3): mul %rax,%rdx,%rdx
4cf6(3): mov %rax,%rsi
4cf9(3): seto %al
4cfc(3): test %rsi,%rsi
4cff(2): js 0xc(%rip)
4d01(3): movzx %al,%eax
4d04(3): test %rax,%rax
4d07(2): jnz 0x4(%rip)
4d09(2): jmp 0xffffffa7(%rip)
4d0b(4): sub $0x8,%rsp
4d0f(5): call 0x191(%rip)

"x2nrealloc" :
4d20(3): test %rdi,%rdi
4d23(3): mov %rdx,%r9
4d26(3): mov (%rsi),%rcx
4d29(2): jz 0x37(%rip)
4d2b(2): xor %edx,%edx
4d2d(a): mov $0x6148914691236517204,%rax
4d37(3): div %r9,%rax
4d3a(3): cmp %rcx,%rax
4d3d(2): jbe 0x3e(%rip)
4d3f(3): mov %rcx,%rax
4d42(3): shr $0x1,%rax
4d45(5): lea 0x1(%rax,%rcx,1),%rcx
4d4a(3): mov %rcx,(%rsi)
4d4d(4): imul %r9,%rcx
4d51(3): mov %rcx,%rsi
4d54(5): jmp 0xffffff5c(%rip)
4d59(7): nop 0x0(%rax)
4d60(3): test %rcx,%rcx
4d63(2): jz 0x25(%rip)
4d65(3): mov %rcx,%rax
4d68(3): mul %rax,%r9,%rdx
4d6b(3): seto %dl
4d6e(3): test %rax,%rax
4d71(3): movzx %dl,%edx
4d74(2): js 0x7(%rip)
4d76(3): test %rdx,%rdx
4d79(2): jz 0xffffffd1(%rip)
4d7b(4): sub $0x8,%rsp
4d7f(5): call 0x121(%rip)
4d84(4): nop 0x0(%rax)
4d88(2): xor %edx,%edx
4d8a(5): mov $0x80,%eax
4d8f(3): xor %r8d,%r8d
4d92(3): div %r9,%rax
4d95(3): test %rax,%rax
4d98(4): setz %r8b
4d9c(4): lea 0x0(%r8,%rax,1),%rcx
4da0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4db0(3): test %rdi,%rdi
4db3(3): mov (%rsi),%rax
4db6(2): jz 0x2a(%rip)
4db8(a): mov $0x6148914691236517203,%rdx
4dc2(3): cmp %rdx,%rax
4dc5(2): jnbe 0x2c(%rip)
4dc7(3): mov %rax,%rdx
4dca(3): shr $0x1,%rdx
4dcd(5): lea 0x1(%rdx,%rax,1),%rax
4dd2(3): mov %rax,(%rsi)
4dd5(3): mov %rax,%rsi
4dd8(5): jmp 0xfffffed8(%rip)
4ddd(3): nop (%rax)
4de0(3): test %rax,%rax
4de3(5): mov $0x80,%edx
4de8(4): cmove %rdx,%rax
4dec(3): test %rax,%rax
4def(2): jns 0xffffffe3(%rip)
4df1(4): sub $0x8,%rsp
4df5(5): call 0xab(%rip)

"xzalloc" :
4e00(1): push %rbx
4e01(3): mov %rdi,%rbx
4e04(5): call 0xfffffe4c(%rip)
4e09(3): mov %rbx,%rdx
4e0c(2): xor %esi,%esi
4e0e(3): mov %rax,%rdi
4e11(1): pop %rbx
4e12(5): jmp 0xffffc6ee(%rip)

"xcalloc" :
4e20(3): mov %rdi,%rax
4e23(4): sub $0x8,%rsp
4e27(3): mul %rax,%rsi,%rdx
4e2a(3): seto %dl
4e2d(3): test %rax,%rax
4e30(2): js 0x19(%rip)
4e32(3): movzx %dl,%edx
4e35(3): test %rdx,%rdx
4e38(2): jnz 0x11(%rip)
4e3a(5): call 0xffffc6f6(%rip)
4e3f(3): test %rax,%rax
4e42(2): jz 0x7(%rip)
4e44(4): add $0x8,%rsp
4e48(1): ret near (%rsp)
4e49(5): call 0x57(%rip)

"xmemdup" :
4e50(1): push %rbp
4e51(1): push %rbx
4e52(3): mov %rdi,%rbp
4e55(3): mov %rsi,%rdi
4e58(3): mov %rsi,%rbx
4e5b(4): sub $0x8,%rsp
4e5f(5): call 0xfffffdf1(%rip)
4e64(4): add $0x8,%rsp
4e68(3): mov %rbx,%rdx
4e6b(3): mov %rbp,%rsi
4e6e(1): pop %rbx
4e6f(1): pop %rbp
4e70(3): mov %rax,%rdi
4e73(5): jmp 0xffffc6ed(%rip)

"xstrdup" :
4e80(1): push %rbx
4e81(3): mov %rdi,%rbx
4e84(5): call 0xffffc5ec(%rip)
4e89(3): mov %rbx,%rdi
4e8c(4): lea 0x1(%rax),%rsi
4e90(1): pop %rbx
4e91(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4ea0(7): lea 0x1908(%rip),%rsi
4ea7(4): sub $0x8,%rsp
4eab(5): mov $0x5,%edx
4eb0(2): xor %edi,%edi
4eb2(5): call 0xffffc59e(%rip)
4eb7(6): mov 0x20315b(%rip),%edi
4ebd(7): lea 0xfd8(%rip),%rdx
4ec4(3): mov %rax,%rcx
4ec7(2): xor %esi,%esi
4ec9(2): xor %eax,%eax
4ecb(5): call 0xffffc755(%rip)
4ed0(5): call 0xffffc500(%rip)

"xstrtoumax" :
4ee0(2): push %r15
4ee2(2): push %r14
4ee4(2): push %r13
4ee6(2): push %r12
4ee8(1): push %rbp
4ee9(1): push %rbx
4eea(4): sub $0x28,%rsp
4eee(9): mov $0x28,%rax
4ef7(5): mov %rax,0x18(%rsp)
4efc(2): xor %eax,%eax
4efe(3): cmp $0x24,%edx
4f01(6): jnbe 0x364(%rip)
4f07(5): lea 0x10(%rsp),%rax
4f0c(3): mov %rsi,%r15
4f0f(3): test %rsi,%rsi
4f12(3): mov %rdi,%rbp
4f15(4): mov %edx,0x8(%rsp)
4f19(3): mov %rcx,%r14
4f1c(3): mov %r8,%r13
4f1f(4): cmove %rax,%r15
4f23(5): call 0xffffc4bd(%rip)
4f28(6): mov $0x0,(%rax)
4f2e(3): mov %rax,%r12
4f31(4): movzx 0x0(%rbp),%ebx
4f35(5): call 0xffffc76b(%rip)
4f3a(4): mov 0x8(%rsp),%edx
4f3e(3): mov (%rax),%rsi
4f41(3): mov %rbp,%rax
4f44(2): jmp 0x13(%rip)
4f46(a): nop 0x0(%rax,%rax,1)
4f50(4): add $0x1,%rax
4f54(3): movzx (%rax),%ebx
4f57(3): movzx %bl,%ecx
4f5a(5): test $0x20,0x1(%rsi,%rcx,2)
4f5f(2): jnz 0xfffffff1(%rip)
4f61(3): cmp $0x2d,%bl
4f64(2): jz 0x54(%rip)
4f66(2): xor %ecx,%ecx
4f68(3): mov %r15,%rsi
4f6b(3): mov %rbp,%rdi
4f6e(5): call 0xffffc582(%rip)
4f73(3): mov (%r15),%rcx
4f76(3): mov %rax,%rbx
4f79(3): cmp %rbp,%rcx
4f7c(2): jz 0x2c(%rip)
4f7e(4): mov (%r12),%eax
4f82(2): test %eax,%eax
4f84(2): jz 0x64(%rip)
4f86(3): cmp $0x22,%eax
4f89(5): mov $0x1,%ebp
4f8e(2): jnz 0x2a(%rip)
4f90(3): test %r13,%r13
4f93(2): jz 0xb(%rip)
4f95(4): movzx (%rcx),%r12d
4f99(3): test %r12b,%r12b
4f9c(2): jnz 0x7b(%rip)
4f9e(3): mov %rbx,(%r14)
4fa1(2): jmp 0x1c(%rip)
4fa3(5): nop 0x0(%rax,%rax,1)
4fa8(3): test %r13,%r13
4fab(5): mov %rcx,0x8(%rsp)
4fb0(2): jnz 0x40(%rip)
4fb2(6): nop 0x0(%rax,%rax,1)
4fb8(5): mov $0x4,%ebp
4fbd(5): mov 0x18(%rsp),%rdi
4fc2(9): xor $0x28,%rdi
4fcb(2): mov %ebp,%eax
4fcd(6): jnz 0x293(%rip)
4fd3(4): add $0x28,%rsp
4fd7(1): pop %rbx
4fd8(1): pop %rbp
4fd9(2): pop %r12
4fdb(2): pop %r13
4fdd(2): pop %r14
4fdf(2): pop %r15
4fe1(1): ret near (%rsp)
4fe2(6): nop 0x0(%rax,%rax,1)
4fe8(2): xor %ebp,%ebp
4fea(2): jmp 0xffffffa6(%rip)
4fec(4): nop 0x0(%rax)
4ff0(5): movzx 0x0(%rbp),%r12d
4ff5(3): test %r12b,%r12b
4ff8(2): jz 0xffffffc0(%rip)
4ffa(4): movsx %r12b,%esi
4ffe(3): mov %r13,%rdi
5001(2): xor %ebp,%ebp
5003(5): call 0xffffc4ad(%rip)
5008(3): test %rax,%rax
500b(5): mov $0x1,%ebx
5010(5): mov 0x8(%rsp),%rcx
5015(2): jz 0xffffffa3(%rip)
5017(4): movsx %r12b,%esi
501b(3): mov %r13,%rdi
501e(5): mov %rcx,0x8(%rsp)
5023(5): call 0xffffc48d(%rip)
5028(3): test %rax,%rax
502b(5): mov 0x8(%rsp),%rcx
5030(6): jz 0xcc(%rip)
5036(5): lea 0xffffffbb(%r12),%eax
503b(2): cmp $0x2f,%al
503d(2): jnbe 0x53(%rip)
503f(a): mov $0x142129060940101,%rdx
5049(4): bt %rax,%rdx
504d(2): jnb 0x43(%rip)
504f(5): mov $0x30,%esi
5054(3): mov %r13,%rdi
5057(5): mov %rcx,0x8(%rsp)
505c(5): call 0xffffc454(%rip)
5061(3): test %rax,%rax
5064(5): mov 0x8(%rsp),%rcx
5069(2): jz 0x27(%rip)
506b(4): movzx 0x1(%rcx),%eax
506f(2): cmp $0x44,%al
5071(2): jz 0xe(%rip)
5073(2): cmp $0x69,%al
5075(6): jz 0x1d3(%rip)
507b(2): cmp $0x42,%al
507d(2): jnz 0x13(%rip)
507f(5): mov $0x2,%edi
5084(5): mov $0x3e8,%esi
5089(2): jmp 0x11(%rip)
508b(5): nop 0x0(%rax,%rax,1)
5090(5): mov $0x1,%edi
5095(5): mov $0x400,%esi
509a(4): sub $0x42,%r12d
509e(4): cmp $0x35,%r12b
50a2(2): jnbe 0x5a(%rip)
50a4(7): lea 0x175d(%rip),%rdx
50ab(4): movzx %r12b,%r12d
50af(4): movsxd 0x0(%rdx,%r12,4),%rax
50b3(3): add %rdx,%rax
50b6(2): jmp %rax
50b8(3): mov %rbx,%rax
50bb(3): mul %rax,%rsi,%rdx
50be(6): jo 0x1f3(%rip)
50c4(3): xor %r8d,%r8d
50c7(3): mul %rax,%rsi,%rdx
50ca(6): jo 0x1d8(%rip)
50d0(3): mov %rax,%rbx
50d3(3): or %r8d,%ebp
50d6(a): nop 0x0(%rax,%rax,1)
50e0(3): movsxd %edi,%rdi
50e3(2): mov %ebp,%eax
50e5(3): add %rdi,%rcx
50e8(3): or $0x2,%eax
50eb(3): mov %rcx,(%r15)
50ee(3): cmp $0x0,(%rcx)
50f1(3): mov %rbx,(%r14)
50f4(3): cmovne %eax,%ebp
50f7(5): jmp 0xfffffec6(%rip)
50fc(3): mov %rbx,(%r14)
50ff(3): or $0x2,%ebp
5102(5): jmp 0xfffffebb(%rip)
5107(5): mov $0x2,%edx
510c(3): mov %rdx,%rax
510f(3): mul %rax,%rbx,%rdx
5112(6): jo 0x9c(%rip)
5118(3): add %rbx,%rbx
511b(2): jmp 0xffffffc5(%rip)
511d(5): mov $0x200,%edx
5122(3): mov %rdx,%rax
5125(3): mul %rax,%rbx,%rdx
5128(6): jo 0x86(%rip)
512e(4): shl/sal $0x9,%rbx
5132(2): jmp 0xffffffae(%rip)
5134(6): mov $0x7,%r8d
513a(3): xor %r9d,%r9d
513d(3): nop (%rax)
5140(3): mov %rbx,%rax
5143(3): mul %rax,%rsi,%rdx
5146(3): mov %rax,%rbx
5149(6): jo 0x195(%rip)
514f(4): sub $0x1,%r8d
5153(2): jnz 0xffffffed(%rip)
5155(3): or %r9d,%ebp
5158(2): jmp 0xffffff88(%rip)
515a(6): mov $0x8,%r8d
5160(3): xor %r9d,%r9d
5163(5): nop 0x0(%rax,%rax,1)
5168(3): mov %rbx,%rax
516b(3): mul %rax,%rsi,%rdx
516e(3): mov %rax,%rbx
5171(6): jo 0x14f(%rip)
5177(4): sub $0x1,%r8d
517b(2): jnz 0xffffffed(%rip)
517d(2): jmp 0xffffffd8(%rip)
517f(6): mov $0x4,%r8d
5185(3): xor %r9d,%r9d
5188(3): mov %rbx,%rax
518b(3): mul %rax,%rsi,%rdx
518e(3): mov %rax,%rbx
5191(6): jo 0x102(%rip)
5197(4): sub $0x1,%r8d
519b(2): jnz 0xffffffed(%rip)
519d(2): jmp 0xffffffb8(%rip)
519f(3): mov %rbx,%rax
51a2(3): mul %rax,%rsi,%rdx
51a5(3): mov %rax,%rbx
51a8(6): jno 0xffffff38(%rip)
51ae(5): mov $0x1,%ebp
51b3(4): or $0xffffffff,%rbx
51b7(5): jmp 0xffffff29(%rip)
51bc(4): nop 0x0(%rax)
51c0(6): mov $0x5,%r8d
51c6(3): xor %r9d,%r9d
51c9(3): mov %rbx,%rax
51cc(3): mul %rax,%rsi,%rdx
51cf(3): mov %rax,%rbx
51d2(6): jo 0xfd(%rip)
51d8(4): sub $0x1,%r8d
51dc(2): jnz 0xffffffed(%rip)
51de(5): jmp 0xffffff77(%rip)
51e3(6): mov $0x6,%r8d
51e9(3): xor %r9d,%r9d
51ec(3): mov %rbx,%rax
51ef(3): mul %rax,%rsi,%rdx
51f2(3): mov %rax,%rbx
51f5(6): jo 0x8f(%rip)
51fb(4): sub $0x1,%r8d
51ff(2): jnz 0xffffffed(%rip)
5201(5): jmp 0xffffff54(%rip)
5206(5): mov $0x400,%edx
520b(3): mov %rdx,%rax
520e(3): mul %rax,%rbx,%rdx
5211(2): jo 0xffffff9d(%rip)
5213(4): shl/sal $0xa,%rbx
5217(5): jmp 0xfffffec9(%rip)
521c(3): mov %rbx,%rax
521f(3): mul %rax,%rsi,%rdx
5222(6): jo 0xcb(%rip)
5228(3): xor %r8d,%r8d
522b(3): mul %rax,%rsi,%rdx
522e(6): jno 0xfffffe99(%rip)
5234(6): mov $0x1,%r8d
523a(4): or $0xffffffff,%rax
523e(5): jmp 0xfffffe89(%rip)
5243(5): nop 0x0(%rax,%rax,1)
5248(2): xor %edi,%edi
524a(4): cmp $0x42,0x2(%rcx)
524e(5): mov $0x400,%esi
5253(4): setz %dil
5257(4): lea 0x1(%rdi,%rdi,1),%edi
525b(5): jmp 0xfffffe3f(%rip)
5260(5): call 0xffffc220(%rip)
5265(7): lea 0x1674(%rip),%rcx
526c(7): lea 0x154d(%rip),%rsi
5273(7): lea 0x1566(%rip),%rdi
527a(5): mov $0x54,%edx
527f(5): call 0xffffc261(%rip)
5284(6): mov $0x1,%r9d
528a(4): or $0xffffffff,%rbx
528e(5): jmp 0xffffff6d(%rip)
5293(6): mov $0x1,%r9d
5299(4): or $0xffffffff,%rbx
529d(5): jmp 0xfffffefa(%rip)
52a2(6): mov $0x1,%r8d
52a8(4): or $0xffffffff,%rbx
52ac(5): jmp 0xfffffe27(%rip)
52b1(4): or $0xffffffff,%rax
52b5(6): mov $0x1,%r8d
52bb(5): jmp 0xfffffe0c(%rip)
52c0(6): mov $0x1,%r9d
52c6(4): or $0xffffffff,%rbx
52ca(5): jmp 0xfffffead(%rip)
52cf(6): mov $0x1,%r9d
52d5(4): or $0xffffffff,%rbx
52d9(5): jmp 0xfffffeff(%rip)
52de(6): mov $0x1,%r9d
52e4(4): or $0xffffffff,%rbx
52e8(5): jmp 0xfffffe67(%rip)
52ed(6): mov $0x1,%r8d
52f3(4): or $0xffffffff,%rax
52f7(5): jmp 0xffffff34(%rip)

"rpl_mbrtowc" :
5300(2): push %r13
5302(2): push %r12
5304(3): mov %rsi,%r13
5307(1): push %rbp
5308(1): push %rbx
5309(3): mov %rdi,%rbx
530c(3): mov %rdx,%r12
530f(4): sub $0x18,%rsp
5313(9): mov $0x28,%rax
531c(5): mov %rax,0x8(%rsp)
5321(2): xor %eax,%eax
5323(5): lea 0x4(%rsp),%rax
5328(3): test %rdi,%rdi
532b(4): cmove %rax,%rbx
532f(3): mov %rbx,%rdi
5332(5): call 0xffffc16e(%rip)
5337(4): cmp $0xfffffffd,%rax
533b(3): mov %rax,%rbp
533e(2): jbe 0x22(%rip)
5340(3): test %r12,%r12
5343(2): jz 0x1d(%rip)
5345(2): xor %edi,%edi
5347(5): call 0xc9(%rip)
534c(2): test %al,%al
534e(2): jnz 0x12(%rip)
5350(5): movzx 0x0(%r13),%eax
5355(5): mov $0x1,%ebp
535a(2): mov %eax,(%rbx)
535c(4): nop 0x0(%rax)
5360(5): mov 0x8(%rsp),%rdx
5365(9): xor $0x28,%rdx
536e(3): mov %rbp,%rax
5371(2): jnz 0xd(%rip)
5373(4): add $0x18,%rsp
5377(1): pop %rbx
5378(1): pop %rbp
5379(2): pop %r12
537b(2): pop %r13
537d(1): ret near (%rsp)
537e(5): call 0xffffc102(%rip)

"close_stream" :
5390(2): push %r12
5392(1): push %rbp
5393(3): mov %rdi,%rbp
5396(1): push %rbx
5397(5): call 0xffffc079(%rip)
539c(3): mov 0x0(%rbp),%ebx
539f(3): mov %rbp,%rdi
53a2(3): mov %rax,%r12
53a5(5): call 0x10b(%rip)
53aa(3): and $0x20,%ebx
53ad(2): test %ebx,%ebx
53af(2): jnz 0x19(%rip)
53b1(2): test %eax,%eax
53b3(2): jz 0xc(%rip)
53b5(3): test %r12,%r12
53b8(5): mov $0xffffffff,%eax
53bd(2): jz 0x3b(%rip)
53bf(1): pop %rbx
53c0(1): pop %rbp
53c1(2): pop %r12
53c3(1): ret near (%rsp)
53c4(4): nop 0x0(%rax)
53c8(2): test %eax,%eax
53ca(2): jnz 0x1e(%rip)
53cc(5): call 0xffffc014(%rip)
53d1(6): mov $0x0,(%rax)
53d7(5): mov $0xffffffff,%eax
53dc(1): pop %rbx
53dd(1): pop %rbp
53de(2): pop %r12
53e0(1): ret near (%rsp)
53e1(7): nop 0x0(%rax)
53e8(1): pop %rbx
53e9(5): mov $0xffffffff,%eax
53ee(1): pop %rbp
53ef(2): pop %r12
53f1(1): ret near (%rsp)
53f2(6): nop 0x0(%rax,%rax,1)
53f8(5): call 0xffffbfe8(%rip)
53fd(3): cmp $0x9,(%rax)
5400(1): pop %rbx
5401(1): pop %rbp
5402(2): pop %r12
5404(3): setnz %al
5407(3): movzx %al,%eax
540a(2): neg %eax
540c(1): ret near (%rsp)

"hard_locale" :
5410(4): sub $0x8,%rsp
5414(2): xor %esi,%esi
5416(5): call 0xffffc1da(%rip)
541b(3): mov %rax,%rdx
541e(5): mov $0x1,%eax
5423(3): test %rdx,%rdx
5426(2): jz 0x1f(%rip)
5428(7): lea 0x14bc(%rip),%rdi
542f(5): mov $0x2,%ecx
5434(3): mov %rdx,%rsi
5437(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5439(3): setnbe %cl
543c(3): sbb $0x0,%cl
543f(2): xor %eax,%eax
5441(2): test %cl,%cl
5443(2): jnz 0xd(%rip)
5445(4): add $0x8,%rsp
5449(1): ret near (%rsp)
544a(6): nop 0x0(%rax,%rax,1)
5450(7): lea 0x1496(%rip),%rdi
5457(5): mov $0x6,%ecx
545c(3): mov %rdx,%rsi
545f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5461(3): setnbe %al
5464(2): sbb $0x0,%al
5466(2): test %al,%al
5468(3): setnz %al
546b(4): add $0x8,%rsp
546f(1): ret near (%rsp)

"locale_charset" :
5470(4): sub $0x8,%rsp
5474(5): mov $0xe,%edi
5479(5): call 0xffffc147(%rip)
547e(3): test %rax,%rax
5481(2): jz 0x1f(%rip)
5483(3): cmp $0x0,(%rax)
5486(7): lea 0x1466(%rip),%rdx
548d(4): cmove %rdx,%rax
5491(4): add $0x8,%rsp
5495(1): ret near (%rsp)
5496(a): nop 0x0(%rax,%rax,1)
54a0(7): lea 0x144c(%rip),%rax
54a7(4): add $0x8,%rsp
54ab(1): ret near (%rsp)

"rpl_fclose" :
54b0(2): push %r12
54b2(1): push %rbp
54b3(1): push %rbx
54b4(3): mov %rdi,%rbx
54b7(5): call 0xffffc0c9(%rip)
54bc(2): test %eax,%eax
54be(3): mov %rbx,%rdi
54c1(2): js 0x56(%rip)
54c3(5): call 0xffffc10d(%rip)
54c8(2): test %eax,%eax
54ca(2): jnz 0x2e(%rip)
54cc(3): mov %rbx,%rdi
54cf(5): call 0x61(%rip)
54d4(2): test %eax,%eax
54d6(2): jz 0x3e(%rip)
54d8(5): call 0xffffbf08(%rip)
54dd(3): mov (%rax),%r12d
54e0(3): mov %rbx,%rdi
54e3(3): mov %rax,%rbp
54e6(5): call 0xffffbf4a(%rip)
54eb(3): test %r12d,%r12d
54ee(2): jnz 0x32(%rip)
54f0(1): pop %rbx
54f1(1): pop %rbp
54f2(2): pop %r12
54f4(1): ret near (%rsp)
54f5(3): nop (%rax)
54f8(3): mov %rbx,%rdi
54fb(5): call 0xffffc085(%rip)
5500(2): xor %esi,%esi
5502(5): mov $0x1,%edx
5507(2): mov %eax,%edi
5509(5): call 0xffffbfc7(%rip)
550e(4): cmp $0xffffffff,%rax
5512(2): jnz 0xffffffba(%rip)
5514(3): mov %rbx,%rdi
5517(1): pop %rbx
5518(1): pop %rbp
5519(2): pop %r12
551b(5): jmp 0xffffbf15(%rip)
5520(4): mov %r12d,0x0(%rbp)
5524(5): mov $0xffffffff,%eax
5529(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5530(3): test %rdi,%rdi
5533(1): push %rbx
5534(3): mov %rdi,%rbx
5537(2): jz 0x13(%rip)
5539(5): call 0xffffc097(%rip)
553e(2): test %eax,%eax
5540(2): jz 0xa(%rip)
5542(6): test $0x100,(%rbx)
5548(2): jnz 0x10(%rip)
554a(3): mov %rbx,%rdi
554d(1): pop %rbx
554e(5): jmp 0xffffc062(%rip)
5553(5): nop 0x0(%rax,%rax,1)
5558(3): mov %rbx,%rdi
555b(5): mov $0x1,%edx
5560(2): xor %esi,%esi
5562(5): call 0xe(%rip)
5567(3): mov %rbx,%rdi
556a(1): pop %rbx
556b(5): jmp 0xffffc045(%rip)

"rpl_fseeko" :
5570(4): mov 0x8(%rdi),%rax
5574(4): cmp %rax,0x10(%rdi)
5578(2): jz 0x8(%rip)
557a(5): jmp 0xffffc0b6(%rip)
557f(1): nop 
5580(4): mov 0x20(%rdi),%rax
5584(4): cmp %rax,0x28(%rdi)
5588(2): jnz 0xfffffff2(%rip)
558a(5): cmp $0x0,0x48(%rdi)
558f(2): jnz 0xffffffeb(%rip)
5591(2): push %r12
5593(1): push %rbp
5594(3): mov %edx,%r12d
5597(1): push %rbx
5598(3): mov %rsi,%rbp
559b(3): mov %rdi,%rbx
559e(5): call 0xffffbfe2(%rip)
55a3(3): mov %r12d,%edx
55a6(3): mov %rbp,%rsi
55a9(2): mov %eax,%edi
55ab(5): call 0xffffbf25(%rip)
55b0(4): cmp $0xffffffff,%rax
55b4(2): jz 0xe(%rip)
55b6(3): and $0xef,(%rbx)
55b9(7): mov %rax,0x90(%rbx)
55c0(2): xor %eax,%eax
55c2(1): pop %rbx
55c3(1): pop %rbp
55c4(2): pop %r12
55c6(1): ret near (%rsp)

"__libc_csu_init" :
55d0(2): push %r15
55d2(2): push %r14
55d4(3): mov %rdx,%r15
55d7(2): push %r13
55d9(2): push %r12
55db(7): lea 0x20256e(%rip),%r12
55e2(1): push %rbp
55e3(7): lea 0x20256e(%rip),%rbp
55ea(1): push %rbx
55eb(3): mov %edi,%r13d
55ee(3): mov %rsi,%r14
55f1(3): sub %r12,%rbp
55f4(4): sub $0x8,%rsp
55f8(4): sar $0x3,%rbp
55fc(5): call 0xffffbd94(%rip)
5601(3): test %rbp,%rbp
5604(2): jz 0x22(%rip)
5606(2): xor %ebx,%ebx
5608(8): nop 0x0(%rax,%rax,1)
5610(3): mov %r15,%rdx
5613(3): mov %r14,%rsi
5616(3): mov %r13d,%edi
5619(4): call 0x0(%r12,%rbx,8)
561d(4): add $0x1,%rbx
5621(3): cmp %rbx,%rbp
5624(2): jnz 0xffffffec(%rip)
5626(4): add $0x8,%rsp
562a(1): pop %rbx
562b(1): pop %rbp
562c(2): pop %r12
562e(2): pop %r13
5630(2): pop %r14
5632(2): pop %r15
5634(1): ret near (%rsp)

"atexit" :
5650(7): mov 0x2029b1(%rip),%rdx
5657(2): xor %esi,%esi
5659(5): jmp 0xffffbfe7(%rip)

"_fini" :
5660(4): sub $0x8,%rsp
5664(4): add $0x8,%rsp
5668(1): ret near (%rsp)

