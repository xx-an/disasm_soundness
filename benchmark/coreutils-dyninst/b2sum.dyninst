
"free@plt" :
17f0(6): jmp 0x20b60a(%rip)
17f6(5): push $0x0

"abort@plt" :
1800(6): jmp 0x20b602(%rip)
1806(5): push $0x1

"__errno_location@plt" :
1810(6): jmp 0x20b5fa(%rip)
1816(5): push $0x2

"strncmp@plt" :
1820(6): jmp 0x20b5f2(%rip)
1826(5): push $0x3

"_exit@plt" :
1830(6): jmp 0x20b5ea(%rip)
1836(5): push $0x4

"__fpending@plt" :
1840(6): jmp 0x20b5e2(%rip)
1846(5): push $0x5

"ferror@plt" :
1850(6): jmp 0x20b5da(%rip)
1856(5): push $0x6

"fread@plt" :
1860(6): jmp 0x20b5d2(%rip)
1866(5): push $0x7

"fcntl@plt" :
1870(6): jmp 0x20b5ca(%rip)
1876(5): push $0x8

"textdomain@plt" :
1880(6): jmp 0x20b5c2(%rip)
1886(5): push $0x9

"fclose@plt" :
1890(6): jmp 0x20b5ba(%rip)
1896(5): push $0xa

"bindtextdomain@plt" :
18a0(6): jmp 0x20b5b2(%rip)
18a6(5): push $0xb

"dcgettext@plt" :
18b0(6): jmp 0x20b5aa(%rip)
18b6(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
18c0(6): jmp 0x20b5a2(%rip)
18c6(5): push $0xd

"strlen@plt" :
18d0(6): jmp 0x20b59a(%rip)
18d6(5): push $0xe

"__stack_chk_fail@plt" :
18e0(6): jmp 0x20b592(%rip)
18e6(5): push $0xf

"getopt_long@plt" :
18f0(6): jmp 0x20b58a(%rip)
18f6(5): push $0x10

"mbrtowc@plt" :
1900(6): jmp 0x20b582(%rip)
1906(5): push $0x11

"strchr@plt" :
1910(6): jmp 0x20b57a(%rip)
1916(5): push $0x12

"__overflow@plt" :
1920(6): jmp 0x20b572(%rip)
1926(5): push $0x13

"strrchr@plt" :
1930(6): jmp 0x20b56a(%rip)
1936(5): push $0x14

"lseek@plt" :
1940(6): jmp 0x20b562(%rip)
1946(5): push $0x15

"__assert_fail@plt" :
1950(6): jmp 0x20b55a(%rip)
1956(5): push $0x16

"__strtoul_internal@plt" :
1960(6): jmp 0x20b552(%rip)
1966(5): push $0x17

"memset@plt" :
1970(6): jmp 0x20b54a(%rip)
1976(5): push $0x18

"close@plt" :
1980(6): jmp 0x20b542(%rip)
1986(5): push $0x19

"posix_fadvise@plt" :
1990(6): jmp 0x20b53a(%rip)
1996(5): push $0x1a

"memcmp@plt" :
19a0(6): jmp 0x20b532(%rip)
19a6(5): push $0x1b

"fputs_unlocked@plt" :
19b0(6): jmp 0x20b52a(%rip)
19b6(5): push $0x1c

"calloc@plt" :
19c0(6): jmp 0x20b522(%rip)
19c6(5): push $0x1d

"__getdelim@plt" :
19d0(6): jmp 0x20b51a(%rip)
19d6(5): push $0x1e

"strcmp@plt" :
19e0(6): jmp 0x20b512(%rip)
19e6(5): push $0x1f

"__memcpy_chk@plt" :
19f0(6): jmp 0x20b50a(%rip)
19f6(5): push $0x20

"feof@plt" :
1a00(6): jmp 0x20b502(%rip)
1a06(5): push $0x21

"memcpy@plt" :
1a10(6): jmp 0x20b4fa(%rip)
1a16(5): push $0x22

"fileno@plt" :
1a20(6): jmp 0x20b4f2(%rip)
1a26(5): push $0x23

"malloc@plt" :
1a30(6): jmp 0x20b4ea(%rip)
1a36(5): push $0x24

"fflush@plt" :
1a40(6): jmp 0x20b4e2(%rip)
1a46(5): push $0x25

"nl_langinfo@plt" :
1a50(6): jmp 0x20b4da(%rip)
1a56(5): push $0x26

"__freading@plt" :
1a60(6): jmp 0x20b4d2(%rip)
1a66(5): push $0x27

"fwrite_unlocked@plt" :
1a70(6): jmp 0x20b4ca(%rip)
1a76(5): push $0x28

"realloc@plt" :
1a80(6): jmp 0x20b4c2(%rip)
1a86(5): push $0x29

"fdopen@plt" :
1a90(6): jmp 0x20b4ba(%rip)
1a96(5): push $0x2a

"setlocale@plt" :
1aa0(6): jmp 0x20b4b2(%rip)
1aa6(5): push $0x2b

"__printf_chk@plt" :
1ab0(6): jmp 0x20b4aa(%rip)
1ab6(5): push $0x2c

"setvbuf@plt" :
1ac0(6): jmp 0x20b4a2(%rip)
1ac6(5): push $0x2d

"error@plt" :
1ad0(6): jmp 0x20b49a(%rip)
1ad6(5): push $0x2e

"fseeko@plt" :
1ae0(6): jmp 0x20b492(%rip)
1ae6(5): push $0x2f

"fopen@plt" :
1af0(6): jmp 0x20b48a(%rip)
1af6(5): push $0x30

"dcngettext@plt" :
1b00(6): jmp 0x20b482(%rip)
1b06(5): push $0x31

"strtoul@plt" :
1b10(6): jmp 0x20b47a(%rip)
1b16(5): push $0x32

"__cxa_atexit@plt" :
1b20(6): jmp 0x20b472(%rip)
1b26(5): push $0x33

"exit@plt" :
1b30(6): jmp 0x20b46a(%rip)
1b36(5): push $0x34

"fwrite@plt" :
1b40(6): jmp 0x20b462(%rip)
1b46(5): push $0x35

"__fprintf_chk@plt" :
1b50(6): jmp 0x20b45a(%rip)
1b56(5): push $0x36

"mbsinit@plt" :
1b60(6): jmp 0x20b452(%rip)
1b66(5): push $0x37

"iswprint@plt" :
1b70(6): jmp 0x20b44a(%rip)
1b76(5): push $0x38

"__ctype_tolower_loc@plt" :
1b80(6): jmp 0x20b442(%rip)
1b86(5): push $0x39

"__ctype_b_loc@plt" :
1b90(6): jmp 0x20b43a(%rip)
1b96(5): push $0x3a

".plt.got" :
1ba0(6): jmp 0x20b452(%rip)
1ba6(2): nop 

"_init" :
17c8(4): sub $0x8,%rsp
17cc(7): mov 0x20b815(%rip),%rax
17d3(3): test %rax,%rax
17d6(2): jz 0x4(%rip)
17d8(2): call %rax
17da(4): add $0x8,%rsp
17de(1): ret near (%rsp)

"main" :
1bb0(2): push %r15
1bb2(2): push %r14
1bb4(3): xor %r14d,%r14d
1bb7(2): push %r13
1bb9(2): push %r12
1bbb(3): mov %edi,%r12d
1bbe(1): push %rbp
1bbf(1): push %rbx
1bc0(3): mov %rsi,%rbx
1bc3(7): lea 0x88d7(%rip),%r13
1bca(5): mov $0xffffffff,%ebp
1bcf(7): sub $0x148,%rsp
1bd6(3): mov (%rsi),%rdi
1bd9(9): mov $0x28,%rax
1be2(8): mov %rax,0x138(%rsp)
1bea(2): xor %eax,%eax
1bec(5): call 0x40a4(%rip)
1bf1(7): lea 0x88a9(%rip),%rsi
1bf8(5): mov $0x6,%edi
1bfd(5): call 0xfffffea3(%rip)
1c02(7): lea 0x769a(%rip),%rsi
1c09(7): lea 0x766a(%rip),%rdi
1c10(5): call 0xfffffc90(%rip)
1c15(7): lea 0x765e(%rip),%rdi
1c1c(5): call 0xfffffc64(%rip)
1c21(7): lea 0x3ed8(%rip),%rdi
1c28(5): call 0x7598(%rip)
1c2d(7): mov 0x20b474(%rip),%rdi
1c34(2): xor %ecx,%ecx
1c36(5): mov $0x1,%edx
1c3b(2): xor %esi,%esi
1c3d(5): call 0xfffffe83(%rip)
1c42(5): mov $0x0,0x78(%rsp)
1c47(9): nop 0x0(%rax,%rax,1)
1c50(7): lea 0x20ad69(%rip),%rcx
1c57(7): lea 0x76b8(%rip),%rdx
1c5e(3): xor %r8d,%r8d
1c61(3): mov %rbx,%rsi
1c64(3): mov %r12d,%edi
1c67(5): call 0xfffffc89(%rip)
1c6c(3): cmp $0xff,%eax
1c6f(6): jz 0x22d(%rip)
1c75(3): cmp $0x77,%eax
1c78(6): jz 0x158(%rip)
1c7e(2): jle 0x3a(%rip)
1c80(5): cmp $0x81,%eax
1c85(6): jz 0xeb(%rip)
1c8b(2): jle 0x6d(%rip)
1c8d(5): cmp $0x83,%eax
1c92(6): jz 0x11e(%rip)
1c98(6): jl 0xf8(%rip)
1c9e(5): cmp $0x84,%eax
1ca3(2): jnz 0x37(%rip)
1ca5(5): mov $0x1,0x78(%rsp)
1caa(5): mov $0x1,%ebp
1caf(2): jmp 0xffffffa1(%rip)
1cb1(7): nop 0x0(%rax)
1cb8(3): cmp $0x62,%eax
1cbb(6): jz 0x105(%rip)
1cc1(2): jle 0x57(%rip)
1cc3(3): cmp $0x6c,%eax
1cc6(6): jz 0x12a(%rip)
1ccc(3): cmp $0x74,%eax
1ccf(6): jz 0x99(%rip)
1cd5(3): cmp $0x63,%eax
1cd8(2): jz 0x10(%rip)
1cda(5): mov $0x1,%edi
1cdf(5): call 0x17a1(%rip)
1ce4(4): nop 0x0(%rax)
1ce8(6): mov $0x1,%r14d
1cee(5): jmp 0xffffff62(%rip)
1cf3(5): nop 0x0(%rax,%rax,1)
1cf8(3): cmp $0x7a,%eax
1cfb(6): jz 0x195(%rip)
1d01(3): add $0x80,%eax
1d04(2): jnz 0xffffffd6(%rip)
1d06(7): mov $0x1,0x20b3f1(%rip)
1d0d(5): jmp 0xffffff43(%rip)
1d12(6): nop 0x0(%rax,%rax,1)
1d18(5): cmp $0xffffff7d,%eax
1d1d(6): jnz 0x11de(%rip)
1d23(4): sub $0x8,%rsp
1d27(7): mov 0x20b37a(%rip),%rdi
1d2e(7): mov 0x20b2eb(%rip),%rcx
1d35(2): push $0x0
1d37(7): lea 0x75bd(%rip),%r9
1d3e(7): lea 0x75c3(%rip),%r8
1d45(7): lea 0x752a(%rip),%rdx
1d4c(7): lea 0x7497(%rip),%rsi
1d53(2): xor %eax,%eax
1d55(5): call 0x613b(%rip)
1d5a(2): xor %edi,%edi
1d5c(5): call 0xfffffdd4(%rip)
1d61(7): nop 0x0(%rax)
1d68(2): xor %ebp,%ebp
1d6a(5): jmp 0xfffffee6(%rip)
1d6f(1): nop 
1d70(7): mov $0x1,0x20b389(%rip)
1d77(7): mov $0x0,0x20b381(%rip)
1d7e(7): mov $0x0,0x20b378(%rip)
1d85(5): jmp 0xfffffecb(%rip)
1d8a(6): nop 0x0(%rax,%rax,1)
1d90(7): mov $0x0,0x20b369(%rip)
1d97(7): mov $0x0,0x20b361(%rip)
1d9e(7): mov $0x1,0x20b358(%rip)
1da5(5): jmp 0xfffffeab(%rip)
1daa(6): nop 0x0(%rax,%rax,1)
1db0(7): mov $0x1,0x20b345(%rip)
1db7(5): jmp 0xfffffe99(%rip)
1dbc(4): nop 0x0(%rax)
1dc0(5): mov $0x1,%ebp
1dc5(5): jmp 0xfffffe8b(%rip)
1dca(6): nop 0x0(%rax,%rax,1)
1dd0(7): mov $0x0,0x20b329(%rip)
1dd7(7): mov $0x1,0x20b321(%rip)
1dde(7): mov $0x0,0x20b318(%rip)
1de5(5): jmp 0xfffffe6b(%rip)
1dea(6): nop 0x0(%rax,%rax,1)
1df0(7): lea 0x74c4(%rip),%rsi
1df7(2): xor %edi,%edi
1df9(5): mov $0x5,%edx
1dfe(5): call 0xfffffab2(%rip)
1e03(7): mov 0x20b2b6(%rip),%rdi
1e0a(7): lea 0x8690(%rip),%rcx
1e11(3): xor %r9d,%r9d
1e14(2): xor %esi,%esi
1e16(3): mov %rax,%r8
1e19(7): mov $0xffffffff,%rdx
1e20(5): call 0x6560(%rip)
1e25(2): test $0x7,%al
1e27(7): mov %rax,0x20b2c2(%rip)
1e2e(7): mov 0x20b28b(%rip),%r13
1e35(6): jz 0xfffffe1b(%rip)
1e3b(3): mov %r13,%rdi
1e3e(5): call 0x5b62(%rip)
1e43(7): lea 0x7480(%rip),%rsi
1e4a(3): mov %rax,%rbx
1e4d(5): mov $0x5,%edx
1e52(2): xor %edi,%edi
1e54(5): call 0xfffffa5c(%rip)
1e59(3): mov %rbx,%rcx
1e5c(3): mov %rax,%rdx
1e5f(2): xor %esi,%esi
1e61(2): xor %edi,%edi
1e63(2): xor %eax,%eax
1e65(5): call 0xfffffc6b(%rip)
1e6a(7): lea 0x746c(%rip),%rsi
1e71(5): mov $0x5,%edx
1e76(2): xor %edi,%edi
1e78(5): call 0xfffffa38(%rip)
1e7d(2): xor %esi,%esi
1e7f(3): mov %rax,%rdx
1e82(5): mov $0x1,%edi
1e87(2): xor %eax,%eax
1e89(5): call 0xfffffc47(%rip)
1e8e(2): nop 
1e90(7): mov $0x0,0x20b179(%rip)
1e97(5): jmp 0xfffffdb9(%rip)
1e9c(7): mov 0x20b24d(%rip),%rax
1ea3(b): mov $0x3,0x20b262(%rip)
1eae(6): cmp $0x200,%rax
1eb4(6): jnbe 0x1059(%rip)
1eba(3): test %rax,%rax
1ebd(2): jnz 0x17(%rip)
1ebf(3): test %r14b,%r14b
1ec2(2): jnz 0x12(%rip)
1ec4(b): mov $0x200,0x20b221(%rip)
1ecf(5): mov $0x200,%eax
1ed4(4): shr $0x2,%rax
1ed8(2): test %ebp,%ebp
1eda(7): mov %rax,0x20b227(%rip)
1ee1(3): setz %al
1ee4(4): test %al,0x78(%rsp)
1ee8(6): jnz 0x1102(%rip)
1eee(7): cmp $0xa,0x20b11b(%rip)
1ef5(6): jz 0x36e(%rip)
1efb(3): test %r14b,%r14b
1efe(5): mov $0x5,%edx
1f03(7): lea 0x7bf6(%rip),%rsi
1f0a(6): jnz 0x386(%rip)
1f10(7): cmp $0x0,0x20b1e7(%rip)
1f17(6): jnz 0x10c2(%rip)
1f1d(7): cmp $0x0,0x20b1dc(%rip)
1f24(6): jnz 0x10a4(%rip)
1f2a(7): cmp $0x0,0x20b1ce(%rip)
1f31(6): jz 0x3a9(%rip)
1f37(3): test %r14b,%r14b
1f3a(5): mov $0x5,%edx
1f3f(7): lea 0x7d12(%rip),%rsi
1f46(6): jz 0x34a(%rip)
1f4c(3): cmp $0xff,%ebp
1f4f(2): jnz 0x4(%rip)
1f51(2): xor %ebp,%ebp
1f53(3): movsxd %r12d,%rax
1f56(4): lea 0x0(%rbx,%rax,8),%rax
1f5a(5): mov %rax,0x60(%rsp)
1f5f(7): movsxd 0x20b152(%rip),%rax
1f66(3): cmp %r12d,%eax
1f69(2): jnz 0x1b(%rip)
1f6b(5): mov 0x60(%rsp),%rsi
1f70(7): lea 0x7ff3(%rip),%rdi
1f77(4): add $0x8,%rsi
1f7b(4): mov %rdi,0xfffffff8(%rsi)
1f7f(5): mov %rsi,0x60(%rsp)
1f84(4): lea 0x0(%rbx,%rax,8),%rax
1f88(5): cmp %rax,0x60(%rsp)
1f8d(5): mov %rax,0x18(%rsp)
1f92(6): jbe 0xee8(%rip)
1f98(3): cmp $0x1,%ebp
1f9b(5): mov $0x1,0x79(%rsp)
1fa0(2): sbb %eax,%eax
1fa2(3): and $0xf6,%eax
1fa5(3): add $0x2a,%eax
1fa8(4): mov %eax,0x7c(%rsp)
1fac(4): mov %al,0x7b(%rsp)
1fb0(5): mov 0x18(%rsp),%rax
1fb5(3): test %r14b,%r14b
1fb8(3): mov (%rax),%rdi
1fbb(5): mov %rdi,0x28(%rsp)
1fc0(6): jz 0x625(%rip)
1fc6(7): lea 0x7f9d(%rip),%rsi
1fcd(5): call 0xfffffa13(%rip)
1fd2(2): test %eax,%eax
1fd4(4): mov %eax,0x4c(%rsp)
1fd8(6): jnz 0x718(%rip)
1fde(7): lea 0x7339(%rip),%rsi
1fe5(5): mov $0x5,%edx
1fea(2): xor %edi,%edi
1fec(7): mov $0x1,0x20b125(%rip)
1ff3(5): call 0xfffff8bd(%rip)
1ff8(7): mov 0x20b0b1(%rip),%r13
1fff(5): mov %rax,0x28(%rsp)
2004(8): lea 0x90(%rsp),%rax
200c(c): mov $0x0,0x88(%rsp)
2018(c): mov $0x0,0x90(%rsp)
2024(5): mov $0x0,0x7a(%rsp)
2029(5): mov $0x0,0x50(%rsp)
202e(6): mov $0x1,%r12d
2034(5): mov %rax,0x10(%rsp)
2039(8): lea 0x88(%rsp),%rax
2041(9): mov $0x0,0x70(%rsp)
204a(9): mov $0x0,0x68(%rsp)
2053(9): mov $0x0,0x30(%rsp)
205c(5): mov %rax,0x8(%rsp)
2061(8): lea 0x98(%rsp),%rax
2069(5): mov %rax,0x58(%rsp)
206e(2): nop 
2070(5): mov 0x10(%rsp),%rsi
2075(5): mov 0x8(%rsp),%rdi
207a(3): mov %r13,%rcx
207d(5): mov $0xa,%edx
2082(5): call 0xfffff94e(%rip)
2087(3): test %rax,%rax
208a(6): jle 0x423(%rip)
2090(8): mov 0x88(%rsp),%rbp
2098(4): movzx 0x0(%rbp),%ecx
209c(3): cmp $0x23,%cl
209f(6): jz 0x174(%rip)
20a5(5): cmp $0xa,0xffffffff(%rbp,%rax,1)
20aa(3): mov %rax,%r15
20ad(2): jnz 0x18(%rip)
20af(4): sub $0x1,%r15
20b3(6): mov $0x0,0x0(%rbp,%r15,1)
20b9(8): mov 0x88(%rsp),%rbp
20c1(4): movzx 0x0(%rbp),%ecx
20c5(3): cmp $0x20,%cl
20c8(2): jz 0x9(%rip)
20ca(2): xor %edx,%edx
20cc(3): cmp $0x9,%cl
20cf(2): jnz 0x1c(%rip)
20d1(2): xor %edx,%edx
20d3(5): nop 0x0(%rax,%rax,1)
20d8(4): add $0x1,%rdx
20dc(5): movzx 0x0(%rbp,%rdx,1),%ecx
20e1(3): cmp $0x20,%cl
20e4(2): jz 0xfffffff4(%rip)
20e6(3): cmp $0x9,%cl
20e9(2): jz 0xffffffef(%rip)
20eb(3): cmp $0x5c,%cl
20ee(5): mov $0x0,0x20(%rsp)
20f3(2): jnz 0xb(%rip)
20f5(4): add $0x1,%rdx
20f9(5): mov %r14b,0x20(%rsp)
20fe(5): lea 0x0(%rbp,%rdx,1),%r8
2103(7): lea 0x70e6(%rip),%rdi
210a(5): mov $0x6,%ecx
210f(3): mov %r8,%rsi
2112(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2114(3): setnbe %al
2117(2): sbb $0x0,%al
2119(2): test %al,%al
211b(6): jnz 0x205(%rip)
2121(4): lea 0x6(%rdx),%r9
2125(5): lea 0x0(%rbp,%r9,1),%r11
212a(4): movzx (%r11),%ebx
212e(2): test %bl,%bl
2130(2): jz 0x62(%rip)
2132(3): cmp $0x20,%bl
2135(6): jz 0x530(%rip)
213b(3): cmp $0x9,%bl
213e(6): jz 0x527(%rip)
2144(3): cmp $0x2d,%bl
2147(2): jz 0x4b(%rip)
2149(3): cmp $0x28,%bl
214c(6): jz 0x561(%rip)
2152(5): lea 0x7(%rbp,%rdx,1),%rax
2157(2): jmp 0x2d(%rip)
2159(7): nop 0x0(%rax)
2160(3): cmp $0x20,%bl
2163(6): jz 0x502(%rip)
2169(3): cmp $0x9,%bl
216c(6): jz 0x4f9(%rip)
2172(3): cmp $0x2d,%bl
2175(2): jz 0x1d(%rip)
2177(4): add $0x1,%rax
217b(3): cmp $0x28,%bl
217e(6): jz 0x52f(%rip)
2184(3): movzx (%rax),%ebx
2187(4): add $0x1,%r9
218b(3): mov %rax,%r11
218e(2): test %bl,%bl
2190(2): jnz 0xffffffd0(%rip)
2192(7): lea 0x20a9e7(%rip),%rsi
2199(2): xor %ecx,%ecx
219b(2): xor %edx,%edx
219d(4): mov $0x0,(%r11)
21a1(3): mov %r8,%rdi
21a4(5): mov %r9,0x38(%rsp)
21a9(5): call 0x35b7(%rip)
21ae(3): test %rax,%rax
21b1(5): mov 0x38(%rsp),%r9
21b6(2): js 0x4a(%rip)
21b8(4): add $0x1,%r9
21bc(6): mov %eax,0x20af36(%rip)
21c2(3): cmp $0x2d,%bl
21c5(6): jz 0x57d(%rip)
21cb(b): mov $0x200,0x20af1a(%rip)
21d6(5): mov $0x80,%eax
21db(7): mov %rax,0x20af26(%rip)
21e2(6): movzx 0x0(%rbp,%r9,1),%eax
21e8(2): cmp $0x20,%al
21ea(2): jnz 0xc(%rip)
21ec(6): movzx 0x1(%rbp,%r9,1),%eax
21f2(4): add $0x1,%r9
21f6(2): cmp $0x28,%al
21f8(6): jz 0x666(%rip)
21fe(2): nop 
2200(6): add $0x1,0x30(%rsp)
2206(7): cmp $0x0,0x20aef2(%rip)
220d(6): jnz 0x253(%rip)
2213(5): test $0x30,0x0(%r13)
2218(6): jnz 0x295(%rip)
221e(4): add $0x1,%r12
2222(6): jnz 0xfffffe4e(%rip)
2228(5): mov 0x28(%rsp),%rdx
222d(5): mov $0x3,%esi
2232(2): xor %edi,%edi
2234(5): call 0x559c(%rip)
2239(7): lea 0x70ed(%rip),%rsi
2240(3): mov %rax,%rbx
2243(5): mov $0x5,%edx
2248(2): xor %edi,%edi
224a(5): call 0xfffff666(%rip)
224f(3): mov %rbx,%rcx
2252(3): mov %rax,%rdx
2255(2): xor %esi,%esi
2257(5): mov $0x1,%edi
225c(2): xor %eax,%eax
225e(5): call 0xfffff872(%rip)
2263(3): test %r14b,%r14b
2266(2): jz 0x15(%rip)
2268(5): cmp $0x0,0x78(%rsp)
226d(5): mov $0x5,%edx
2272(7): lea 0x78c7(%rip),%rsi
2279(2): jnz 0x17(%rip)
227b(2): test %ebp,%ebp
227d(2): js 0x2d(%rip)
227f(3): test %r14b,%r14b
2282(5): mov $0x5,%edx
2287(7): lea 0x78f2(%rip),%rsi
228e(2): jz 0x1c(%rip)
2290(2): xor %edi,%edi
2292(5): call 0xfffff61e(%rip)
2297(2): xor %esi,%esi
2299(3): mov %rax,%rdx
229c(2): xor %edi,%edi
229e(2): xor %eax,%eax
22a0(5): call 0xfffff830(%rip)
22a5(5): jmp 0xfffffa35(%rip)
22aa(7): cmp $0x0,0x20ae4d(%rip)
22b1(6): jz 0xd01(%rip)
22b7(3): test %r14b,%r14b
22ba(6): jz 0xd1f(%rip)
22c0(7): cmp $0x0,0x20ae39(%rip)
22c7(6): jz 0x636(%rip)
22cd(7): cmp $0x0,0x20ae2b(%rip)
22d4(6): jnz 0xfffffc78(%rip)
22da(7): cmp $0x1,0x20ae1c(%rip)
22e1(2): jnz 0x13(%rip)
22e3(3): test %r14b,%r14b
22e6(5): mov $0x5,%edx
22eb(7): lea 0x79a6(%rip),%rsi
22f2(2): jz 0xffffff9e(%rip)
22f4(7): cmp $0x0,0x20ae01(%rip)
22fb(6): jz 0xfffffc51(%rip)
2301(3): test %r14b,%r14b
2304(5): mov $0x5,%edx
2309(7): lea 0x79c8(%rip),%rsi
2310(6): jnz 0xfffffc3c(%rip)
2316(5): jmp 0xffffff7a(%rip)
231b(5): nop 0x0(%rax,%rax,1)
2320(3): mov %r15,%rcx
2323(5): mov %rdx,0x40(%rsp)
2328(5): mov %r8,0x38(%rsp)
232d(3): sub %rdx,%rcx
2330(4): cmp $0x5c,(%r8)
2334(3): setz %al
2337(3): movzx %al,%eax
233a(7): add 0x20adcf(%rip),%rax
2341(3): cmp %rax,%rcx
2344(6): jb 0xfffffebc(%rip)
234a(b): mov $0x0,0x20adb3(%rip)
2355(5): call 0xfffff83b(%rip)
235a(3): xor %r9d,%r9d
235d(3): mov (%rax),%rdi
2360(5): mov 0x40(%rsp),%rdx
2365(2): xor %eax,%eax
2367(5): mov 0x38(%rsp),%r8
236c(2): jmp 0xa(%rip)
236e(2): nop 
2370(3): mov %rsi,%rax
2373(3): mov %r14d,%r9d
2376(5): movzx 0x0(%r8,%rax,1),%ecx
237b(4): lea 0x1(%rax),%rsi
237f(5): test $0x10,0x1(%rdi,%rcx,2)
2384(2): jnz 0xffffffec(%rip)
2386(3): test %r9b,%r9b
2389(6): jz 0xfffffe77(%rip)
238f(4): lea 0xfffffffe(%rax),%rcx
2393(7): mov %rax,0x20ad6e(%rip)
239a(4): cmp $0x7e,%rcx
239e(6): jnbe 0xfffffe62(%rip)
23a4(2): test $0x1,%al
23a6(6): jnz 0xfffffe5a(%rip)
23ac(4): lea 0x0(%rdx,%rax,1),%rbx
23b0(8): lea 0x0(,%rax,4),%rcx
23b8(5): lea 0x0(%rbp,%rbx,1),%rdx
23bd(7): mov %rcx,0x20ad2c(%rip)
23c4(3): movzx (%rdx),%eax
23c7(2): cmp $0x20,%al
23c9(2): jz 0xa(%rip)
23cb(2): cmp $0x9,%al
23cd(6): jnz 0xfffffe33(%rip)
23d3(3): mov $0x0,(%rdx)
23d6(3): mov %r8,%rdi
23d9(5): mov %r8,0x38(%rsp)
23de(5): call 0xdb2(%rip)
23e3(2): test %al,%al
23e5(6): jz 0xfffffe1b(%rip)
23eb(4): lea 0x1(%rbx),%rax
23ef(3): mov %r15,%rcx
23f2(6): mov 0x20ac1c(%rip),%edx
23f8(5): mov 0x38(%rsp),%r8
23fd(3): sub %rax,%rcx
2400(4): sub $0x1,%rcx
2404(2): jz 0x19(%rip)
2406(5): movzx 0x1(%rbp,%rbx,1),%ecx
240b(3): cmp $0x20,%cl
240e(6): jz 0xb79(%rip)
2414(3): cmp $0x2a,%cl
2417(6): jz 0xb70(%rip)
241d(2): test %edx,%edx
241f(6): jz 0xfffffde1(%rip)
2425(a): mov $0x1,0x20abe5(%rip)
242f(3): add %rax,%rbp
2432(5): cmp $0x0,0x20(%rsp)
2437(6): jz 0x74a(%rip)
243d(3): mov %r15,%rsi
2440(3): mov %rbp,%rdi
2443(5): mov %r8,0x20(%rsp)
2448(3): sub %rax,%rsi
244b(5): call 0xcc5(%rip)
2450(3): test %rax,%rax
2453(5): mov 0x20(%rsp),%r8
2458(3): setnz %al
245b(5): jmp 0x71e(%rip)
2460(5): mov 0x28(%rsp),%rdx
2465(2): xor %edi,%edi
2467(5): mov $0x3,%esi
246c(5): call 0x5364(%rip)
2471(7): lea 0x78a0(%rip),%rsi
2478(2): xor %edi,%edi
247a(5): mov $0x5,%edx
247f(3): mov %rax,%rbx
2482(5): call 0xfffff42e(%rip)
2487(7): lea 0x6d62(%rip),%r9
248e(3): mov %rax,%rdx
2491(2): xor %esi,%esi
2493(2): xor %edi,%edi
2495(2): xor %eax,%eax
2497(3): mov %r12,%r8
249a(3): mov %rbx,%rcx
249d(5): call 0xfffff633(%rip)
24a2(5): test $0x30,0x0(%r13)
24a7(6): jz 0xfffffd77(%rip)
24ad(8): mov 0x88(%rsp),%rdi
24b5(5): call 0xfffff33b(%rip)
24ba(4): mov 0x0(%r13),%ebx
24be(3): and $0x20,%ebx
24c1(6): jnz 0x3fd(%rip)
24c7(5): cmp $0x0,0x4c(%rsp)
24cc(6): jnz 0x443(%rip)
24d2(5): cmp $0x0,0x50(%rsp)
24d7(6): jz 0x44d(%rip)
24dd(7): cmp $0x0,0x20ac1c(%rip)
24e4(6): jnz 0x3ca(%rip)
24ea(6): cmp $0x0,0x30(%rsp)
24f0(2): jz 0x36(%rip)
24f2(5): mov 0x30(%rsp),%r15
24f7(7): lea 0x7882(%rip),%rdx
24fe(7): lea 0x78ab(%rip),%rsi
2505(2): xor %edi,%edi
2507(6): mov $0x5,%r8d
250d(3): mov %r15,%rcx
2510(5): call 0xfffff5f0(%rip)
2515(3): mov %r15,%rcx
2518(3): mov %rax,%rdx
251b(2): xor %esi,%esi
251d(2): xor %edi,%edi
251f(2): xor %eax,%eax
2521(5): call 0xfffff5af(%rip)
2526(6): cmp $0x0,0x68(%rsp)
252c(2): jz 0x36(%rip)
252e(5): mov 0x68(%rsp),%r15
2533(7): lea 0x78a6(%rip),%rdx
253a(7): lea 0x78cf(%rip),%rsi
2541(2): xor %edi,%edi
2543(6): mov $0x5,%r8d
2549(3): mov %r15,%rcx
254c(5): call 0xfffff5b4(%rip)
2551(3): mov %r15,%rcx
2554(3): mov %rax,%rdx
2557(2): xor %esi,%esi
2559(2): xor %edi,%edi
255b(2): xor %eax,%eax
255d(5): call 0xfffff573(%rip)
2562(6): cmp $0x0,0x70(%rsp)
2568(2): jz 0x36(%rip)
256a(5): mov 0x70(%rsp),%r15
256f(7): lea 0x78ca(%rip),%rdx
2576(7): lea 0x78f3(%rip),%rsi
257d(2): xor %edi,%edi
257f(6): mov $0x5,%r8d
2585(3): mov %r15,%rcx
2588(5): call 0xfffff578(%rip)
258d(3): mov %r15,%rcx
2590(3): mov %rax,%rdx
2593(2): xor %esi,%esi
2595(2): xor %edi,%edi
2597(2): xor %eax,%eax
2599(5): call 0xfffff537(%rip)
259e(7): cmp $0x0,0x20ab59(%rip)
25a5(6): jz 0x309(%rip)
25ab(5): cmp $0x0,0x7a(%rsp)
25b0(6): jz 0x6cd(%rip)
25b6(5): mov 0x68(%rsp),%rax
25bb(5): or 0x70(%rsp),%rax
25c0(2): jnz 0x1a(%rip)
25c2(7): movzx 0x20ab33(%rip),%eax
25c9(3): xor $0x1,%eax
25cc(6): cmp $0x0,0x30(%rsp)
25d2(3): setz %bl
25d5(2): or %ebx,%eax
25d7(3): movzx %al,%ebx
25da(2): mov %ebx,%eax
25dc(3): and $0x1,%eax
25df(4): and %al,0x79(%rsp)
25e3(2): jmp 0x2b(%rip)
25e5(8): lea 0xa0(%rsp),%rbx
25ed(5): mov 0x28(%rsp),%rdi
25f2(8): lea 0x98(%rsp),%rdx
25fa(3): mov %rbx,%rsi
25fd(5): call 0xcc3(%rip)
2602(2): test %al,%al
2604(6): jnz 0x1ab(%rip)
260a(4): mov %al,0x79(%rsp)
260e(6): add $0x8,0x18(%rsp)
2614(5): mov 0x18(%rsp),%rax
2619(5): cmp %rax,0x60(%rsp)
261e(6): jnbe 0xfffff992(%rip)
2624(7): cmp $0x0,0x20aaed(%rip)
262b(6): jnz 0x453(%rip)
2631(5): movzx 0x79(%rsp),%eax
2636(3): xor $0x1,%eax
2639(8): mov 0x138(%rsp),%rsi
2641(9): xor $0x28,%rsi
264a(3): movzx %al,%eax
264d(6): jnz 0x935(%rip)
2653(7): add $0x148,%rsp
265a(1): pop %rbx
265b(1): pop %rbp
265c(2): pop %r12
265e(2): pop %r13
2660(2): pop %r14
2662(2): pop %r15
2664(1): ret near (%rsp)
2665(7): lea 0x20a514(%rip),%rsi
266c(2): xor %ecx,%ecx
266e(2): xor %edx,%edx
2670(4): mov $0x0,(%r11)
2674(3): mov %r8,%rdi
2677(5): mov %r9,0x40(%rsp)
267c(5): mov %r11,0x38(%rsp)
2681(5): call 0x30df(%rip)
2686(3): test %rax,%rax
2689(6): js 0xfffffb77(%rip)
268f(3): cmp $0x28,%bl
2692(6): mov %eax,0x20aa60(%rip)
2698(5): mov 0x38(%rsp),%r11
269d(5): mov 0x40(%rsp),%r9
26a2(2): jz 0x45(%rip)
26a4(4): add $0x1,%r9
26a8(5): jmp 0xfffffb1a(%rip)
26ad(7): lea 0x20a4cc(%rip),%rsi
26b4(4): mov $0x0,(%r11)
26b8(2): xor %ecx,%ecx
26ba(2): xor %edx,%edx
26bc(3): mov %r8,%rdi
26bf(5): mov %r9,0x40(%rsp)
26c4(5): mov %r11,0x38(%rsp)
26c9(5): call 0x3097(%rip)
26ce(3): test %rax,%rax
26d1(5): mov 0x38(%rsp),%r11
26d6(5): mov 0x40(%rsp),%r9
26db(6): js 0xfffffb25(%rip)
26e1(6): mov %eax,0x20aa11(%rip)
26e7(4): mov $0x28,(%r11)
26eb(5): jmp 0xfffffae0(%rip)
26f0(5): mov 0x28(%rsp),%rdi
26f5(7): lea 0x6c78(%rip),%rsi
26fc(5): call 0x34f4(%rip)
2701(3): test %rax,%rax
2704(3): mov %rax,%r13
2707(6): jnz 0xfffff8fd(%rip)
270d(5): mov 0x28(%rsp),%rdx
2712(5): mov $0x3,%esi
2717(2): xor %edi,%edi
2719(5): call 0x50b7(%rip)
271e(3): mov %rax,%rbx
2721(5): call 0xfffff0ef(%rip)
2726(2): mov (%rax),%esi
2728(7): lea 0x77dd(%rip),%rdx
272f(2): xor %eax,%eax
2731(3): mov %rbx,%rcx
2734(2): xor %edi,%edi
2736(5): call 0xfffff39a(%rip)
273b(2): xor %eax,%eax
273d(5): jmp 0xfffffea2(%rip)
2742(5): mov 0x58(%rsp),%rcx
2747(5): lea 0x0(%rbp,%r9,1),%rdi
274c(3): xor %r8d,%r8d
274f(2): xor %edx,%edx
2751(2): xor %esi,%esi
2753(5): mov %r9,0x38(%rsp)
2758(5): call 0x5c58(%rip)
275d(2): test %eax,%eax
275f(6): jnz 0xfffffaa1(%rip)
2765(8): mov 0x98(%rsp),%rax
276d(5): mov 0x38(%rsp),%r9
2772(4): lea 0xffffffff(%rax),%rdx
2776(7): cmp $0x1ff,%rdx
277d(6): jnbe 0xfffffa83(%rip)
2783(2): test $0x7,%al
2785(6): jnz 0xfffffa7b(%rip)
278b(7): mov %rax,0x20a95e(%rip)
2792(2): jmp 0x6(%rip)
2794(4): add $0x1,%r9
2798(6): movsx 0x0(%rbp,%r9,1),%edx
279e(3): sub $0x30,%edx
27a1(3): cmp $0x9,%edx
27a4(2): jbe 0xfffffff0(%rip)
27a6(4): shr $0x2,%rax
27aa(5): jmp 0xfffffa31(%rip)
27af(5): mov 0x28(%rsp),%rdi
27b4(5): mov $0x5c,%esi
27b9(5): call 0xfffff157(%rip)
27be(3): test %rax,%rax
27c1(6): jz 0x33e(%rip)
27c7(7): cmp $0xa,0x20a842(%rip)
27ce(6): jz 0x2f1(%rip)
27d4(5): cmp $0x0,0x78(%rsp)
27d9(6): jnz 0x18f(%rip)
27df(7): mov 0x20a922(%rip),%rax
27e6(2): xor %ebp,%ebp
27e8(3): shr $0x1,%rax
27eb(6): jz 0x23d(%rip)
27f1(3): xor %r12d,%r12d
27f4(4): nop 0x0(%rax)
27f8(5): movzx 0x0(%rbx,%r12,1),%edx
27fd(7): lea 0x6b98(%rip),%rsi
2804(2): xor %eax,%eax
2806(5): mov $0x1,%edi
280b(4): add $0x1,%r12
280f(5): call 0xfffff2a1(%rip)
2814(7): mov 0x20a8ed(%rip),%rax
281b(3): shr $0x1,%rax
281e(3): cmp %r12,%rax
2821(2): jnbe 0xffffffd7(%rip)
2823(5): cmp $0x0,0x78(%rsp)
2828(6): jz 0x200(%rip)
282e(7): mov 0x20a873(%rip),%rdi
2835(7): movzx 0x20a7d4(%rip),%edx
283c(4): mov 0x28(%rdi),%rax
2840(4): cmp 0x30(%rdi),%rax
2844(6): jnb 0x658(%rip)
284a(4): lea 0x1(%rax),%rcx
284e(4): mov %rcx,0x28(%rdi)
2852(2): mov %dl,(%rax)
2854(5): movzx 0x79(%rsp),%eax
2859(5): jmp 0xfffffdb1(%rip)
285e(4): add $0x1,%r9
2862(3): mov %r15,%r10
2865(3): sub %r9,%r10
2868(6): jz 0xfffff998(%rip)
286e(3): mov %r10,%r11
2871(3): add %r9,%rbp
2874(4): sub $0x1,%r11
2878(2): jz 0x21(%rip)
287a(6): cmp $0x29,0xffffffff(%rbp,%r10,1)
2880(2): jnz 0x13(%rip)
2882(5): jmp 0x29a(%rip)
2887(6): cmp $0x29,0x0(%rbp,%r11,1)
288d(6): jz 0x28f(%rip)
2893(4): sub $0x1,%r11
2897(2): jnz 0xfffffff0(%rip)
2899(4): cmp $0x29,0x0(%rbp)
289d(6): jnz 0xfffff963(%rip)
28a3(3): mov %rbp,%r10
28a6(3): xor %r11d,%r11d
28a9(5): jmp 0x278(%rip)
28ae(5): cmp $0x0,0x7a(%rsp)
28b3(6): jnz 0xfffffd03(%rip)
28b9(5): jmp 0xfffffd21(%rip)
28be(5): mov 0x28(%rsp),%rdx
28c3(5): mov $0x3,%esi
28c8(2): xor %edi,%edi
28ca(5): call 0x4f06(%rip)
28cf(7): lea 0x6a91(%rip),%rsi
28d6(3): mov %rax,%rbx
28d9(5): mov $0x5,%edx
28de(2): xor %edi,%edi
28e0(5): call 0xffffefd0(%rip)
28e5(3): mov %rbx,%rcx
28e8(3): mov %rax,%rdx
28eb(2): xor %esi,%esi
28ed(2): xor %eax,%eax
28ef(2): xor %edi,%edi
28f1(5): call 0xfffff1df(%rip)
28f6(2): xor %eax,%eax
28f8(5): jmp 0xfffffce7(%rip)
28fd(7): cmp $0x0,0x20a7fb(%rip)
2904(6): jnz 0xfffff648(%rip)
290a(5): jmp 0xfffff9ea(%rip)
290f(3): mov %r13,%rdi
2912(5): call 0x62de(%rip)
2917(2): test %eax,%eax
2919(6): jz 0xfffffbb9(%rip)
291f(5): jmp 0xfffffdee(%rip)
2924(5): mov 0x28(%rsp),%rdx
2929(2): xor %edi,%edi
292b(5): mov $0x3,%esi
2930(5): call 0x4ea0(%rip)
2935(7): lea 0x740c(%rip),%rsi
293c(2): xor %edi,%edi
293e(5): mov $0x5,%edx
2943(3): mov %rax,%rbp
2946(5): call 0xffffef6a(%rip)
294b(7): lea 0x689e(%rip),%r8
2952(3): mov %rax,%rdx
2955(3): mov %rbp,%rcx
2958(2): xor %esi,%esi
295a(2): xor %edi,%edi
295c(2): xor %eax,%eax
295e(5): call 0xfffff172(%rip)
2963(5): jmp 0xfffffc77(%rip)
2968(3): xor %r12d,%r12d
296b(2): xor %ebp,%ebp
296d(6): mov 0x20a785(%rip),%eax
2973(7): lea 0x20a206(%rip),%rsi
297a(4): mov 0x0(%rsi,%rax,8),%rdi
297e(7): mov 0x20a723(%rip),%rsi
2985(5): call 0xfffff02b(%rip)
298a(7): mov 0x20a75f(%rip),%rdx
2991(7): cmp $0x1ff,%rdx
2998(6): jbe 0x4ec(%rip)
299e(7): mov 0x20a703(%rip),%rcx
29a5(7): lea 0x69e8(%rip),%rdi
29ac(5): mov $0x2,%edx
29b1(5): mov $0x1,%esi
29b6(5): call 0xfffff0ba(%rip)
29bb(5): mov 0x28(%rsp),%rdi
29c0(2): mov %ebp,%esi
29c2(5): call 0x82e(%rip)
29c7(7): mov 0x20a6da(%rip),%rcx
29ce(7): lea 0x69c2(%rip),%rdi
29d5(5): mov $0x4,%edx
29da(5): mov $0x1,%esi
29df(5): call 0xfffff091(%rip)
29e4(5): cmp $0x0,0x78(%rsp)
29e9(6): jnz 0x2f4(%rip)
29ef(3): test %r12b,%r12b
29f2(6): jz 0x2eb(%rip)
29f8(7): mov 0x20a6a9(%rip),%rdi
29ff(4): mov 0x28(%rdi),%rax
2a03(4): cmp 0x30(%rdi),%rax
2a07(6): jnb 0x2cc(%rip)
2a0d(4): lea 0x1(%rax),%rdx
2a11(4): mov %rdx,0x28(%rdi)
2a15(3): mov $0x5c,(%rax)
2a18(7): mov 0x20a6e9(%rip),%rax
2a1f(3): shr $0x1,%rax
2a22(6): jnz 0xfffffdcf(%rip)
2a28(7): mov 0x20a679(%rip),%rdi
2a2f(4): mov 0x28(%rdi),%rax
2a33(4): cmp %rax,0x30(%rdi)
2a37(6): jbe 0x49c(%rip)
2a3d(4): lea 0x1(%rax),%rdx
2a41(4): mov %rdx,0x28(%rdi)
2a45(3): mov $0x20,(%rax)
2a48(7): mov 0x20a659(%rip),%rdi
2a4f(4): mov 0x28(%rdi),%rax
2a53(4): cmp 0x30(%rdi),%rax
2a57(6): jnb 0x46e(%rip)
2a5d(5): movzx 0x7b(%rsp),%esi
2a62(4): lea 0x1(%rax),%rdx
2a66(4): mov %rdx,0x28(%rdi)
2a6a(3): mov %sil,(%rax)
2a6d(5): mov 0x28(%rsp),%rdi
2a72(2): mov %ebp,%esi
2a74(5): call 0x77c(%rip)
2a79(5): jmp 0xfffffdb5(%rip)
2a7e(7): mov 0x20a62b(%rip),%rdi
2a85(5): call 0x616b(%rip)
2a8a(3): add $0x1,%eax
2a8d(6): jnz 0xfffffba4(%rip)
2a93(7): lea 0x6884(%rip),%rsi
2a9a(5): mov $0x5,%edx
2a9f(2): xor %edi,%edi
2aa1(5): call 0xffffee0f(%rip)
2aa6(3): mov %rax,%rbx
2aa9(5): call 0xffffed67(%rip)
2aae(2): mov (%rax),%esi
2ab0(3): mov %rbx,%rdx
2ab3(5): mov $0x1,%edi
2ab8(2): xor %eax,%eax
2aba(5): call 0xfffff016(%rip)
2abf(5): cmp $0x0,0x78(%rsp)
2ac4(5): mov $0x1,%ebp
2ac9(6): jz 0xffffff2f(%rip)
2acf(7): mov 0x20a5d2(%rip),%rdi
2ad6(4): mov 0x28(%rdi),%rax
2ada(4): cmp 0x30(%rdi),%rax
2ade(6): jnb 0x214(%rip)
2ae4(4): lea 0x1(%rax),%rdx
2ae8(6): movzx 0x78(%rsp),%r12d
2aee(5): mov $0x1,%ebp
2af3(4): mov %rdx,0x28(%rdi)
2af7(3): mov $0x5c,(%rax)
2afa(5): jmp 0xfffffe73(%rip)
2aff(5): mov 0x28(%rsp),%rdi
2b04(5): mov $0xa,%esi
2b09(5): call 0xffffee07(%rip)
2b0e(3): test %rax,%rax
2b11(6): jnz 0xfffffcb6(%rip)
2b17(5): jmp 0xfffffcbd(%rip)
2b1c(5): lea 0x0(%rbp,%r11,1),%r10
2b21(5): cmp $0x0,0x20(%rsp)
2b26(6): jnz 0x194(%rip)
2b2c(4): add $0x1,%r11
2b30(4): mov $0x0,(%r10)
2b34(2): jmp 0x6(%rip)
2b36(4): add $0x1,%r11
2b3a(6): movzx 0x0(%rbp,%r11,1),%eax
2b40(2): cmp $0x20,%al
2b42(2): jz 0xfffffff4(%rip)
2b44(2): cmp $0x9,%al
2b46(2): jz 0xfffffff0(%rip)
2b48(2): cmp $0x3d,%al
2b4a(6): jnz 0xfffff6b6(%rip)
2b50(5): lea 0x1(%rbp,%r11,1),%rdx
2b55(3): movzx (%rdx),%eax
2b58(3): mov %rdx,%r8
2b5b(4): lea 0x1(%rdx),%rdx
2b5f(2): cmp $0x20,%al
2b61(2): jz 0xfffffff4(%rip)
2b63(2): cmp $0x9,%al
2b65(2): jz 0xfffffff0(%rip)
2b67(3): mov %r8,%rdi
2b6a(5): mov %r8,0x20(%rsp)
2b6f(5): call 0x621(%rip)
2b74(5): mov 0x20(%rsp),%r8
2b79(2): test %al,%al
2b7b(6): jz 0xfffff685(%rip)
2b81(4): mov 0x4c(%rsp),%eax
2b85(2): test %eax,%eax
2b87(2): jnz 0x20(%rip)
2b89(7): lea 0x73da(%rip),%rdi
2b90(5): mov $0x2,%ecx
2b95(3): mov %rbp,%rsi
2b98(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b9a(3): setnbe %al
2b9d(2): sbb $0x0,%al
2b9f(2): test %al,%al
2ba1(6): jz 0xfffff65f(%rip)
2ba7(7): cmp $0x0,0x20a552(%rip)
2bae(8): mov $0x0,0x20(%rsp)
2bb6(2): jnz 0x26(%rip)
2bb8(5): mov $0xa,%esi
2bbd(3): mov %rbp,%rdi
2bc0(5): mov %r8,0x38(%rsp)
2bc5(5): call 0xffffed4b(%rip)
2bca(3): test %rax,%rax
2bcd(5): mov 0x38(%rsp),%r8
2bd2(3): setnz %al
2bd5(3): movzx %al,%eax
2bd8(4): mov %eax,0x20(%rsp)
2bdc(8): lea 0xf0(%rsp),%rbx
2be4(5): mov 0x58(%rsp),%rdx
2be9(3): mov %rbp,%rdi
2bec(5): mov %r8,0x38(%rsp)
2bf1(3): mov %rbx,%rsi
2bf4(5): call 0x6cc(%rip)
2bf9(2): test %al,%al
2bfb(2): mov %eax,%edi
2bfd(5): mov 0x38(%rsp),%r8
2c02(6): jnz 0x10e(%rip)
2c08(6): add $0x1,0x68(%rsp)
2c0e(7): cmp $0x0,0x20a4eb(%rip)
2c15(2): jnz 0x5e(%rip)
2c17(5): cmp $0x0,0x20(%rsp)
2c1c(2): jz 0x22(%rip)
2c1e(7): mov 0x20a483(%rip),%rdi
2c25(4): mov 0x28(%rdi),%rax
2c29(4): cmp 0x30(%rdi),%rax
2c2d(6): jnb 0x289(%rip)
2c33(4): lea 0x1(%rax),%rdx
2c37(4): mov %rdx,0x28(%rdi)
2c3b(3): mov $0x5c,(%rax)
2c3e(4): mov 0x20(%rsp),%esi
2c42(3): mov %rbp,%rdi
2c45(5): call 0x5ab(%rip)
2c4a(7): lea 0x66f8(%rip),%rsi
2c51(5): mov $0x5,%edx
2c56(2): xor %edi,%edi
2c58(5): call 0xffffec58(%rip)
2c5d(7): lea 0x784d(%rip),%rsi
2c64(3): mov %rax,%rdx
2c67(5): mov $0x1,%edi
2c6c(2): xor %eax,%eax
2c6e(5): call 0xffffee42(%rip)
2c73(5): mov %r14b,0x50(%rsp)
2c78(5): jmp 0xfffff59b(%rip)
2c7d(5): mov 0x28(%rsp),%rdx
2c82(2): xor %edi,%edi
2c84(5): mov $0x3,%esi
2c89(5): call 0x4b47(%rip)
2c8e(7): lea 0x66e1(%rip),%rsi
2c95(3): mov %rax,%rbp
2c98(2): xor %edi,%edi
2c9a(5): mov $0x5,%edx
2c9f(5): call 0xffffec11(%rip)
2ca4(3): mov %rbp,%rcx
2ca7(3): mov %rax,%rdx
2caa(2): xor %esi,%esi
2cac(2): xor %edi,%edi
2cae(2): xor %eax,%eax
2cb0(5): call 0xffffee20(%rip)
2cb5(5): jmp 0xfffff925(%rip)
2cba(3): mov %r11,%rsi
2cbd(3): mov %rbp,%rdi
2cc0(5): call 0x450(%rip)
2cc5(3): test %rax,%rax
2cc8(6): jnz 0xfffffe64(%rip)
2cce(5): jmp 0xfffff532(%rip)
2cd3(5): mov $0x5c,%esi
2cd8(5): call 0xffffec48(%rip)
2cdd(7): mov 0x20a424(%rip),%rax
2ce4(3): shr $0x1,%rax
2ce7(6): jnz 0xfffffb0a(%rip)
2ced(5): jmp 0xfffffb36(%rip)
2cf2(5): mov $0x5c,%esi
2cf7(5): mov $0x1,%ebp
2cfc(5): call 0xffffec24(%rip)
2d01(6): movzx 0x78(%rsp),%r12d
2d07(5): jmp 0xfffffc66(%rip)
2d0c(4): nop 0x0(%rax)
2d10(7): cmp $0x0,0x20a3e7(%rip)
2d17(2): jz 0x10(%rip)
2d19(8): cmp $0x0,0x98(%rsp)
2d21(6): jnz 0xffffff52(%rip)
2d27(7): mov 0x20a3da(%rip),%rdx
2d2e(5): mov %r8,0x50(%rsp)
2d33(3): shr $0x1,%rdx
2d36(6): jz 0x178(%rip)
2d3c(5): mov %rdx,0x40(%rsp)
2d41(5): mov %dil,0x38(%rsp)
2d46(3): xor %r15d,%r15d
2d49(5): call 0xffffee37(%rip)
2d4e(5): movzx 0x38(%rsp),%edi
2d53(3): mov (%rax),%r9
2d56(5): mov 0x40(%rsp),%rdx
2d5b(5): mov 0x50(%rsp),%r8
2d60(2): jmp 0x25(%rip)
2d62(6): nop 0x0(%rax,%rax,1)
2d68(6): movzx 0x1(%r8,%r15,2),%ecx
2d6e(3): and $0xf,%eax
2d71(5): movsx 0x0(%r10,%rax,1),%eax
2d76(4): cmp %eax,0x0(%r9,%rcx,4)
2d7a(2): jnz 0x2f(%rip)
2d7c(4): add $0x1,%r15
2d80(3): cmp %r15,%rdx
2d83(2): jz 0x60(%rip)
2d85(5): movzx 0x0(%rbx,%r15,1),%eax
2d8a(5): movzx 0x0(%r8,%r15,2),%esi
2d8f(7): lea 0x710a(%rip),%r10
2d96(2): mov %eax,%ecx
2d98(3): shr $0x4,%cl
2d9b(3): and $0xf,%ecx
2d9e(5): movsx 0x0(%r10,%rcx,1),%ecx
2da3(4): cmp %ecx,0x0(%r9,%rsi,4)
2da7(2): jz 0xffffffc1(%rip)
2da9(3): cmp %r15,%rdx
2dac(2): jz 0x37(%rip)
2dae(6): add $0x1,0x70(%rsp)
2db4(7): cmp $0x0,0x20a345(%rip)
2dbb(6): jnz 0xfffffeb8(%rip)
2dc1(5): cmp $0x0,0x20(%rsp)
2dc6(2): jnz 0x56(%rip)
2dc8(2): xor %esi,%esi
2dca(3): mov %rbp,%rdi
2dcd(5): call 0x423(%rip)
2dd2(5): mov $0x5,%edx
2dd7(7): lea 0x657f(%rip),%rsi
2dde(5): jmp 0xfffffe78(%rip)
2de3(3): mov %rdx,%r15
2de6(7): movzx 0x20a313(%rip),%eax
2ded(2): test %al,%al
2def(4): mov %al,0x7a(%rsp)
2df3(6): jnz 0xfffffe80(%rip)
2df9(7): movzx 0x20a2fd(%rip),%eax
2e00(2): test %al,%al
2e02(4): mov %al,0x7a(%rsp)
2e06(6): jnz 0xfffffe6d(%rip)
2e0c(5): cmp $0x0,0x20(%rsp)
2e11(5): mov %dil,0x7a(%rsp)
2e16(6): jz 0x18d(%rip)
2e1c(7): mov 0x20a285(%rip),%rdi
2e23(4): mov 0x28(%rdi),%rax
2e27(4): cmp 0x30(%rdi),%rax
2e2b(6): jnb 0xb7(%rip)
2e31(4): lea 0x1(%rax),%rcx
2e35(4): mov %rcx,0x28(%rdi)
2e39(3): mov $0x5c,(%rax)
2e3c(5): mov $0x1,%esi
2e41(3): mov %rbp,%rdi
2e44(5): mov %rdx,0x20(%rsp)
2e49(5): call 0x3a7(%rip)
2e4e(5): mov 0x20(%rsp),%rdx
2e53(3): cmp %r15,%rdx
2e56(6): jnz 0xffffff7c(%rip)
2e5c(7): cmp $0x0,0x20a29a(%rip)
2e63(6): jnz 0xfffffe10(%rip)
2e69(5): mov $0x5,%edx
2e6e(7): lea 0x64ef(%rip),%rsi
2e75(5): jmp 0xfffffde1(%rip)
2e7a(5): mov $0x1,0x79(%rsp)
2e7f(5): jmp 0xfffff7a5(%rip)
2e84(7): lea 0x6504(%rip),%rsi
2e8b(5): mov $0x1,%edi
2e90(2): xor %eax,%eax
2e92(5): call 0xffffec1e(%rip)
2e97(5): jmp 0xfffffb07(%rip)
2e9c(3): movzx %dl,%esi
2e9f(5): call 0xffffea81(%rip)
2ea4(5): movzx 0x79(%rsp),%eax
2ea9(5): jmp 0xfffff761(%rip)
2eae(3): xor %r15d,%r15d
2eb1(5): jmp 0xffffff35(%rip)
2eb6(5): mov $0x5c,%esi
2ebb(5): call 0xffffea65(%rip)
2ec0(5): jmp 0xfffffd7e(%rip)
2ec5(4): mov 0x7c(%rsp),%esi
2ec9(5): call 0xffffea57(%rip)
2ece(5): jmp 0xfffffb9f(%rip)
2ed3(5): mov $0x20,%esi
2ed8(5): call 0xffffea48(%rip)
2edd(5): jmp 0xfffffb6b(%rip)
2ee2(5): mov $0x5c,%esi
2ee7(5): mov %rdx,0x20(%rsp)
2eec(5): call 0xffffea34(%rip)
2ef1(5): mov 0x20(%rsp),%rdx
2ef6(5): jmp 0xffffff46(%rip)
2efb(5): cmp $0xffffff7e,%eax
2f00(6): jnz 0xffffedda(%rip)
2f06(2): xor %edi,%edi
2f08(5): call 0x578(%rip)
2f0d(3): mov %r13,%rdi
2f10(5): call 0x4a90(%rip)
2f15(7): lea 0x63ae(%rip),%rsi
2f1c(3): mov %rax,%rbx
2f1f(5): mov $0x5,%edx
2f24(2): xor %edi,%edi
2f26(5): call 0xffffe98a(%rip)
2f2b(3): mov %rbx,%rcx
2f2e(3): mov %rax,%rdx
2f31(2): xor %esi,%esi
2f33(2): xor %edi,%edi
2f35(2): xor %eax,%eax
2f37(5): call 0xffffeb99(%rip)
2f3c(6): mov 0x20a1b6(%rip),%edx
2f42(7): lea 0x209c47(%rip),%rax
2f49(4): mov 0x0(%rax,%rdx,8),%rdi
2f4d(5): call 0x4a53(%rip)
2f52(7): lea 0x6b4f(%rip),%rsi
2f59(3): mov %rax,%rbx
2f5c(5): mov $0x5,%edx
2f61(2): xor %edi,%edi
2f63(5): call 0xffffe94d(%rip)
2f68(6): mov $0x200,%r8d
2f6e(3): mov %rax,%rdx
2f71(3): mov %rbx,%rcx
2f74(2): xor %esi,%esi
2f76(5): mov $0x1,%edi
2f7b(2): xor %eax,%eax
2f7d(5): call 0xffffeb53(%rip)
2f82(5): call 0xffffe95e(%rip)
2f87(3): sub $0x1,%edx
2f8a(6): jz 0xfffff4a5(%rip)
2f90(a): mov $0x0,0x20a07a(%rip)
2f9a(4): lea 0x2(%rbx),%rax
2f9e(5): jmp 0xfffff491(%rip)
2fa3(2): xor %esi,%esi
2fa5(3): mov %rbp,%rdi
2fa8(5): call 0x248(%rip)
2fad(5): jmp 0xfffffeaf(%rip)
2fb2(7): cmp $0x0,0x20a147(%rip)
2fb9(6): jz 0xffffef71(%rip)
2fbf(3): test %r14b,%r14b
2fc2(6): jnz 0xfffff93b(%rip)
2fc8(5): mov $0x5,%edx
2fcd(7): lea 0x6c44(%rip),%rsi
2fd4(5): jmp 0xfffff2bc(%rip)
2fd9(5): mov $0x5,%edx
2fde(7): lea 0x6beb(%rip),%rsi
2fe5(5): jmp 0xfffff2ab(%rip)
2fea(5): mov $0x5,%edx
2fef(7): lea 0x6ae2(%rip),%rsi
2ff6(5): jmp 0xfffff29a(%rip)

"_start" :
3000(2): xor %ebp,%ebp
3002(3): mov %rdx,%r9
3005(1): pop %rsi
3006(3): mov %rsp,%rdx
3009(4): and $0xfffffff0,%rsp
300d(1): push %rax
300e(1): push %rsp
300f(7): lea 0x619a(%rip),%r8
3016(7): lea 0x6123(%rip),%rcx
301d(7): lea 0xffffeb8c(%rip),%rdi
3024(6): call 0x209fb6(%rip)
302a(1): hlt 

"deregister_tm_clones" :
3030(7): lea 0x20a069(%rip),%rdi
3037(1): push %rbp
3038(7): lea 0x20a061(%rip),%rax
303f(3): cmp %rdi,%rax
3042(3): mov %rsp,%rbp
3045(2): jz 0x1b(%rip)
3047(7): mov 0x209f8a(%rip),%rax
304e(3): test %rax,%rax
3051(2): jz 0xf(%rip)
3053(1): pop %rbp
3054(2): jmp %rax
3056(a): nop 0x0(%rax,%rax,1)
3060(1): pop %rbp
3061(1): ret near (%rsp)

"register_tm_clones" :
3070(7): lea 0x20a029(%rip),%rdi
3077(7): lea 0x20a022(%rip),%rsi
307e(1): push %rbp
307f(3): sub %rdi,%rsi
3082(3): mov %rsp,%rbp
3085(4): sar $0x3,%rsi
3089(3): mov %rsi,%rax
308c(4): shr $0x3f,%rax
3090(3): add %rax,%rsi
3093(3): sar $0x1,%rsi
3096(2): jz 0x1a(%rip)
3098(7): mov 0x209f51(%rip),%rax
309f(3): test %rax,%rax
30a2(2): jz 0xe(%rip)
30a4(1): pop %rbp
30a5(2): jmp %rax
30a7(9): nop 0x0(%rax,%rax,1)
30b0(1): pop %rbp
30b1(1): ret near (%rsp)

"__do_global_dtors_aux" :
30c0(7): cmp $0x0,0x20a021(%rip)
30c7(2): jnz 0x31(%rip)
30c9(8): cmp $0x0,0x209f27(%rip)
30d1(1): push %rbp
30d2(3): mov %rsp,%rbp
30d5(2): jz 0xe(%rip)
30d7(7): mov 0x209f2a(%rip),%rdi
30de(5): call 0xffffeac2(%rip)
30e3(5): call 0xffffff4d(%rip)
30e8(7): mov $0x1,0x209ff9(%rip)
30ef(1): pop %rbp
30f0(1): ret near (%rsp)
30f1(7): nop 0x0(%rax)
30f8(2): REP ret near (%rsp)

"frame_dummy" :
3100(1): push %rbp
3101(3): mov %rsp,%rbp
3104(1): pop %rbp
3105(5): jmp 0xffffff6b(%rip)

"filename_unescape" :
3110(2): xor %edx,%edx
3112(3): test %rsi,%rsi
3115(4): lea 0x1(%rdi),%rcx
3119(4): lea 0xffffffff(%rsi),%r8
311d(2): jz 0x5a(%rip)
311f(4): movzx 0x0(%rdi,%rdx,1),%eax
3123(2): test %al,%al
3125(2): jz 0x2b(%rip)
3127(2): cmp $0x5c,%al
3129(2): jnz 0x2f(%rip)
312b(3): cmp %rdx,%r8
312e(2): jz 0x22(%rip)
3130(4): add $0x1,%rdx
3134(4): movzx 0x0(%rdi,%rdx,1),%eax
3138(2): cmp $0x5c,%al
313a(2): jz 0x46(%rip)
313c(2): cmp $0x6e,%al
313e(2): jnz 0x12(%rip)
3140(3): mov %rcx,%r9
3143(4): mov $0xa,0xffffffff(%rcx)
3147(2): jmp 0x17(%rip)
3149(7): nop 0x0(%rax)
3150(2): xor %eax,%eax
3152(1): ret near (%rsp)
3153(5): nop 0x0(%rax,%rax,1)
3158(3): mov %rcx,%r9
315b(3): mov %al,0xffffffff(%rcx)
315e(4): add $0x1,%rdx
3162(4): add $0x1,%rcx
3166(3): cmp %rdx,%rsi
3169(2): jnbe 0xffffffb6(%rip)
316b(3): add %rdi,%rsi
316e(3): cmp %rsi,%r9
3171(2): jnb 0x6(%rip)
3173(4): mov $0x0,(%r9)
3177(3): mov %rdi,%rax
317a(1): ret near (%rsp)
317b(5): nop 0x0(%rax,%rax,1)
3180(3): mov %rcx,%r9
3183(4): mov $0x5c,0xffffffff(%rcx)
3187(2): jmp 0xffffffd7(%rip)

"hex_digits" :
3190(1): push %rbp
3191(1): push %rbx
3192(4): sub $0x8,%rsp
3196(7): mov 0x209f6b(%rip),%rbp
319d(3): test %rbp,%rbp
31a0(2): jz 0x40(%rip)
31a2(3): mov %rdi,%rbx
31a5(5): call 0xffffe9eb(%rip)
31aa(3): mov (%rax),%rcx
31ad(3): mov %rbx,%rax
31b0(2): jmp 0x15(%rip)
31b2(6): nop 0x0(%rax,%rax,1)
31b8(4): add $0x1,%rax
31bc(2): mov %eax,%edx
31be(2): sub %ebx,%edx
31c0(3): cmp %rbp,%rdx
31c3(2): jnb 0x20(%rip)
31c5(3): movzx (%rax),%edx
31c8(5): test $0x10,0x1(%rcx,%rdx,2)
31cd(2): jnz 0xffffffeb(%rip)
31cf(4): add $0x8,%rsp
31d3(2): xor %eax,%eax
31d5(1): pop %rbx
31d6(1): pop %rbp
31d7(1): ret near (%rsp)
31d8(8): nop 0x0(%rax,%rax,1)
31e0(3): mov %rdi,%rax
31e3(3): cmp $0x0,(%rax)
31e6(3): setz %al
31e9(4): add $0x8,%rsp
31ed(1): pop %rbx
31ee(1): pop %rbp
31ef(1): ret near (%rsp)

"print_filename" :
31f0(1): push %rbp
31f1(1): push %rbx
31f2(3): mov %rdi,%rbx
31f5(4): sub $0x8,%rsp
31f9(3): test %sil,%sil
31fc(6): jz 0x94(%rip)
3202(3): movzx (%rdi),%esi
3205(7): lea 0x5fd8(%rip),%rbp
320c(3): test %sil,%sil
320f(2): jnz 0x2b(%rip)
3211(2): jmp 0x5d(%rip)
3213(5): nop 0x0(%rax,%rax,1)
3218(7): lea 0x5fc8(%rip),%rdi
321f(5): mov $0x2,%edx
3224(5): mov $0x1,%esi
3229(5): call 0xffffe847(%rip)
322e(4): add $0x1,%rbx
3232(3): movzx (%rbx),%esi
3235(3): test %sil,%sil
3238(2): jz 0x36(%rip)
323a(4): cmp $0xa,%sil
323e(7): mov 0x209e63(%rip),%rcx
3245(2): jz 0x33(%rip)
3247(4): cmp $0x5c,%sil
324b(2): jz 0xffffffcd(%rip)
324d(4): mov 0x28(%rcx),%rax
3251(4): cmp 0x30(%rcx),%rax
3255(2): jnb 0x53(%rip)
3257(4): lea 0x1(%rax),%rdx
325b(4): add $0x1,%rbx
325f(4): mov %rdx,0x28(%rcx)
3263(3): mov %sil,(%rax)
3266(3): movzx (%rbx),%esi
3269(3): test %sil,%sil
326c(2): jnz 0xffffffce(%rip)
326e(4): add $0x8,%rsp
3272(1): pop %rbx
3273(1): pop %rbp
3274(1): ret near (%rsp)
3275(3): nop (%rax)
3278(5): mov $0x2,%edx
327d(5): mov $0x1,%esi
3282(3): mov %rbp,%rdi
3285(5): call 0xffffe7eb(%rip)
328a(2): jmp 0xffffffa4(%rip)
328c(4): nop 0x0(%rax)
3290(7): mov 0x209e11(%rip),%rsi
3297(4): add $0x8,%rsp
329b(1): pop %rbx
329c(1): pop %rbp
329d(5): jmp 0xffffe713(%rip)
32a2(6): nop 0x0(%rax,%rax,1)
32a8(3): mov %rcx,%rdi
32ab(5): call 0xffffe675(%rip)
32b0(5): jmp 0xffffff7e(%rip)

"digest_file.isra.1" :
32c0(2): push %r13
32c2(2): push %r12
32c4(5): mov $0x2,%ecx
32c9(1): push %rbp
32ca(1): push %rbx
32cb(3): mov %rdi,%rbp
32ce(7): lea 0x6c95(%rip),%rdi
32d5(3): mov %rsi,%r12
32d8(3): mov %rbp,%rsi
32db(4): sub $0x8,%rsp
32df(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
32e1(3): mov $0x0,(%rdx)
32e4(3): setnbe %al
32e7(2): sbb $0x0,%al
32e9(2): test %al,%al
32eb(6): jnz 0xa5(%rip)
32f1(7): mov 0x209db8(%rip),%rbx
32f8(5): mov $0x2,%esi
32fd(7): mov $0x1,0x209e14(%rip)
3304(3): mov %rbx,%rdi
3307(5): call 0x28b9(%rip)
330c(7): mov 0x209ddd(%rip),%rdx
3313(3): mov %r12,%rsi
3316(3): mov %rbx,%rdi
3319(4): shr $0x3,%rdx
331d(5): call 0x2303(%rip)
3322(2): test %eax,%eax
3324(2): jnz 0x1c(%rip)
3326(6): mov $0x1,%r12d
332c(4): add $0x8,%rsp
3330(3): mov %r12d,%eax
3333(1): pop %rbx
3334(1): pop %rbp
3335(2): pop %r12
3337(2): pop %r13
3339(1): ret near (%rsp)
333a(6): nop 0x0(%rax,%rax,1)
3340(3): mov %rbp,%rdx
3343(2): xor %edi,%edi
3345(5): mov $0x3,%esi
334a(5): call 0x4486(%rip)
334f(3): mov %rax,%rbp
3352(3): xor %r12d,%r12d
3355(5): call 0xffffe4bb(%rip)
335a(2): mov (%rax),%esi
335c(7): lea 0x6ba9(%rip),%rdx
3363(2): xor %edi,%edi
3365(2): xor %eax,%eax
3367(3): mov %rbp,%rcx
336a(5): call 0xffffe766(%rip)
336f(7): cmp %rbx,0x209d3a(%rip)
3376(2): jz 0xffffffb6(%rip)
3378(3): mov %rbx,%rdi
337b(5): call 0x5875(%rip)
3380(4): add $0x8,%rsp
3384(3): mov %r12d,%eax
3387(1): pop %rbx
3388(1): pop %rbp
3389(2): pop %r12
338b(2): pop %r13
338d(1): ret near (%rsp)
338e(2): nop 
3390(7): lea 0x5fdd(%rip),%rsi
3397(3): mov %rbp,%rdi
339a(3): mov %rdx,%r13
339d(5): call 0x2853(%rip)
33a2(3): test %rax,%rax
33a5(3): mov %rax,%rbx
33a8(2): jz 0x78(%rip)
33aa(3): mov %rax,%rdi
33ad(5): mov $0x2,%esi
33b2(5): call 0x280e(%rip)
33b7(7): mov 0x209d32(%rip),%rdx
33be(3): mov %r12,%rsi
33c1(3): mov %rbx,%rdi
33c4(4): shr $0x3,%rdx
33c8(5): call 0x2258(%rip)
33cd(2): test %eax,%eax
33cf(6): jnz 0xffffff71(%rip)
33d5(3): mov %rbx,%rdi
33d8(5): call 0x5818(%rip)
33dd(2): test %eax,%eax
33df(6): jz 0xffffff47(%rip)
33e5(3): mov %rbp,%rdx
33e8(5): mov $0x3,%esi
33ed(2): xor %edi,%edi
33ef(5): call 0x43e1(%rip)
33f4(3): mov %rax,%rbx
33f7(3): xor %r12d,%r12d
33fa(5): call 0xffffe416(%rip)
33ff(2): mov (%rax),%esi
3401(7): lea 0x6b04(%rip),%rdx
3408(3): mov %rbx,%rcx
340b(2): xor %edi,%edi
340d(2): xor %eax,%eax
340f(5): call 0xffffe6c1(%rip)
3414(5): jmp 0xffffff18(%rip)
3419(7): nop 0x0(%rax)
3420(8): movzx 0x209cd6(%rip),%r12d
3428(5): call 0xffffe3e8(%rip)
342d(3): mov %rax,%rbx
3430(3): test %r12b,%r12b
3433(2): jz 0x7(%rip)
3435(3): cmp $0x2,(%rax)
3438(2): jz 0x38(%rip)
343a(3): mov %rbp,%rdx
343d(5): mov $0x3,%esi
3442(2): xor %edi,%edi
3444(5): call 0x438c(%rip)
3449(2): mov (%rbx),%esi
344b(7): lea 0x6aba(%rip),%rdx
3452(3): mov %rax,%rcx
3455(2): xor %edi,%edi
3457(2): xor %eax,%eax
3459(3): xor %r12d,%r12d
345c(5): call 0xffffe674(%rip)
3461(5): jmp 0xfffffecb(%rip)
3466(a): nop 0x0(%rax,%rax,1)
3470(5): mov $0x1,0x0(%r13)
3475(5): jmp 0xfffffeb7(%rip)

"usage" :
3480(2): push %r13
3482(2): push %r12
3484(5): mov $0x5,%edx
3489(1): push %rbp
348a(1): push %rbx
348b(2): mov %edi,%ebp
348d(7): sub $0x88,%rsp
3494(7): mov 0x209c95(%rip),%rbx
349b(9): mov $0x28,%rax
34a4(5): mov %rax,0x78(%rsp)
34a9(2): xor %eax,%eax
34ab(2): test %edi,%edi
34ad(2): jz 0x30(%rip)
34af(7): lea 0x5f52(%rip),%rsi
34b6(2): xor %edi,%edi
34b8(5): call 0xffffe3f8(%rip)
34bd(7): mov 0x209c1c(%rip),%rdi
34c4(3): mov %rax,%rdx
34c7(3): mov %rbx,%rcx
34ca(5): mov $0x1,%esi
34cf(2): xor %eax,%eax
34d1(5): call 0xffffe67f(%rip)
34d6(2): mov %ebp,%edi
34d8(5): call 0xffffe658(%rip)
34dd(7): lea 0x5f4c(%rip),%rsi
34e4(2): xor %edi,%edi
34e6(5): call 0xffffe3ca(%rip)
34eb(7): lea 0x5cfe(%rip),%rcx
34f2(6): mov $0x200,%r8d
34f8(3): mov %rbx,%rdx
34fb(3): mov %rax,%rsi
34fe(5): mov $0x1,%edi
3503(2): xor %eax,%eax
3505(5): call 0xffffe5ab(%rip)
350a(7): mov 0x209b97(%rip),%rbx
3511(7): lea 0x5f60(%rip),%rsi
3518(5): mov $0x5,%edx
351d(2): xor %edi,%edi
351f(5): call 0xffffe391(%rip)
3524(3): mov %rbx,%rsi
3527(3): mov %rax,%rdi
352a(5): call 0xffffe486(%rip)
352f(7): mov 0x209b72(%rip),%rbx
3536(7): lea 0x5f73(%rip),%rsi
353d(5): mov $0x5,%edx
3542(2): xor %edi,%edi
3544(5): call 0xffffe36c(%rip)
3549(3): mov %rbx,%rsi
354c(3): mov %rax,%rdi
354f(5): call 0xffffe461(%rip)
3554(7): lea 0x5f85(%rip),%rsi
355b(2): xor %edi,%edi
355d(5): mov $0x5,%edx
3562(5): call 0xffffe34e(%rip)
3567(7): lea 0x5c82(%rip),%rdx
356e(3): mov %rax,%rsi
3571(5): mov $0x1,%edi
3576(2): xor %eax,%eax
3578(5): call 0xffffe538(%rip)
357d(7): mov 0x209b24(%rip),%rbx
3584(7): lea 0x5f9d(%rip),%rsi
358b(5): mov $0x5,%edx
3590(2): xor %edi,%edi
3592(5): call 0xffffe31e(%rip)
3597(3): mov %rbx,%rsi
359a(3): mov %rax,%rdi
359d(5): call 0xffffe413(%rip)
35a2(7): mov 0x209aff(%rip),%rbx
35a9(7): lea 0x6010(%rip),%rsi
35b0(5): mov $0x5,%edx
35b5(2): xor %edi,%edi
35b7(5): call 0xffffe2f9(%rip)
35bc(3): mov %rbx,%rsi
35bf(3): mov %rax,%rdi
35c2(5): call 0xffffe3ee(%rip)
35c7(7): mov 0x209ada(%rip),%rbx
35ce(7): lea 0x6023(%rip),%rsi
35d5(5): mov $0x5,%edx
35da(2): xor %edi,%edi
35dc(5): call 0xffffe2d4(%rip)
35e1(3): mov %rbx,%rsi
35e4(3): mov %rax,%rdi
35e7(5): call 0xffffe3c9(%rip)
35ec(7): mov 0x209ab5(%rip),%rbx
35f3(7): lea 0x6036(%rip),%rsi
35fa(5): mov $0x5,%edx
35ff(2): xor %edi,%edi
3601(5): call 0xffffe2af(%rip)
3606(3): mov %rbx,%rsi
3609(3): mov %rax,%rdi
360c(5): call 0xffffe3a4(%rip)
3611(7): mov 0x209a90(%rip),%rbx
3618(7): lea 0x6091(%rip),%rsi
361f(5): mov $0x5,%edx
3624(2): xor %edi,%edi
3626(5): call 0xffffe28a(%rip)
362b(3): mov %rbx,%rsi
362e(3): mov %rax,%rdi
3631(5): call 0xffffe37f(%rip)
3636(7): mov 0x209a6b(%rip),%rbx
363d(7): lea 0x6224(%rip),%rsi
3644(5): mov $0x5,%edx
3649(2): xor %edi,%edi
364b(5): call 0xffffe265(%rip)
3650(3): mov %rbx,%rsi
3653(3): mov %rax,%rdi
3656(5): call 0xffffe35a(%rip)
365b(7): mov 0x209a46(%rip),%rbx
3662(7): lea 0x622f(%rip),%rsi
3669(2): xor %edi,%edi
366b(5): mov $0x5,%edx
3670(5): call 0xffffe240(%rip)
3675(3): mov %rbx,%rsi
3678(3): mov %rax,%rdi
367b(7): lea 0x5b68(%rip),%rbx
3682(5): call 0xffffe32e(%rip)
3687(7): lea 0x6242(%rip),%rsi
368e(5): mov $0x5,%edx
3693(2): xor %edi,%edi
3695(5): call 0xffffe21b(%rip)
369a(7): lea 0x5b56(%rip),%rdx
36a1(3): mov %rax,%rsi
36a4(5): mov $0x1,%edi
36a9(2): xor %eax,%eax
36ab(5): call 0xffffe405(%rip)
36b0(7): lea 0x5b49(%rip),%rax
36b7(7): lea 0x5b83(%rip),%rcx
36be(9): mov $0x0,0x60(%rsp)
36c7(9): mov $0x0,0x68(%rsp)
36d0(3): mov %rsp,%rdx
36d3(4): mov %rax,(%rsp)
36d7(7): lea 0x5b24(%rip),%rax
36de(5): mov %rcx,0x30(%rsp)
36e3(7): lea 0x5b61(%rip),%rcx
36ea(5): mov %rax,0x8(%rsp)
36ef(7): lea 0x5b84(%rip),%rax
36f6(5): mov %rcx,0x40(%rsp)
36fb(7): lea 0x5b53(%rip),%rcx
3702(5): mov %rax,0x10(%rsp)
3707(7): lea 0x5b04(%rip),%rax
370e(5): mov %rcx,0x50(%rsp)
3713(5): mov %rax,0x18(%rsp)
3718(7): lea 0x5b09(%rip),%rax
371f(5): mov %rax,0x20(%rsp)
3724(7): lea 0x5b07(%rip),%rax
372b(5): mov %rax,0x28(%rsp)
3730(5): mov %rax,0x38(%rsp)
3735(5): mov %rax,0x48(%rsp)
373a(5): mov %rax,0x58(%rsp)
373f(1): nop 
3740(4): add $0x10,%rdx
3744(3): mov (%rdx),%rdi
3747(3): test %rdi,%rdi
374a(2): jz 0x15(%rip)
374c(5): mov $0x6,%ecx
3751(3): mov %rbx,%rsi
3754(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3756(3): setnbe %al
3759(2): sbb $0x0,%al
375b(2): test %al,%al
375d(2): jnz 0xffffffe3(%rip)
375f(4): mov 0x8(%rdx),%r12
3763(2): xor %edi,%edi
3765(5): mov $0x5,%edx
376a(7): lea 0x5aee(%rip),%rsi
3771(3): test %r12,%r12
3774(6): jz 0xc7(%rip)
377a(5): call 0xffffe136(%rip)
377f(7): lea 0x627a(%rip),%rcx
3786(7): lea 0x5ae9(%rip),%rdx
378d(3): mov %rax,%rsi
3790(5): mov $0x1,%edi
3795(2): xor %eax,%eax
3797(5): call 0xffffe319(%rip)
379c(2): xor %esi,%esi
379e(5): mov $0x5,%edi
37a3(5): call 0xffffe2fd(%rip)
37a8(3): test %rax,%rax
37ab(2): jz 0x1e(%rip)
37ad(7): lea 0x5ad0(%rip),%rsi
37b4(5): mov $0x3,%edx
37b9(3): mov %rax,%rdi
37bc(5): call 0xffffe064(%rip)
37c1(2): test %eax,%eax
37c3(6): jnz 0x10d(%rip)
37c9(7): lea 0x5ab8(%rip),%rsi
37d0(2): xor %edi,%edi
37d2(5): mov $0x5,%edx
37d7(5): call 0xffffe0d9(%rip)
37dc(7): lea 0x5a07(%rip),%rcx
37e3(7): lea 0x6216(%rip),%rdx
37ea(3): mov %rax,%rsi
37ed(5): mov $0x1,%edi
37f2(2): xor %eax,%eax
37f4(5): call 0xffffe2bc(%rip)
37f9(3): cmp %rbx,%r12
37fc(7): lea 0x5a19(%rip),%rcx
3803(7): lea 0x6c97(%rip),%rbx
380a(4): cmove %rcx,%rbx
380e(7): lea 0x625b(%rip),%rsi
3815(2): xor %edi,%edi
3817(5): mov $0x5,%edx
381c(5): call 0xffffe094(%rip)
3821(3): mov %rbx,%rcx
3824(3): mov %rax,%rsi
3827(3): mov %r12,%rdx
382a(5): mov $0x1,%edi
382f(2): xor %eax,%eax
3831(5): call 0xffffe27f(%rip)
3836(5): jmp 0xfffffca0(%rip)
383b(5): call 0xffffe075(%rip)
3840(7): lea 0x61b9(%rip),%rcx
3847(7): lea 0x5a28(%rip),%rdx
384e(3): mov %rax,%rsi
3851(5): mov $0x1,%edi
3856(2): xor %eax,%eax
3858(5): call 0xffffe258(%rip)
385d(2): xor %esi,%esi
385f(5): mov $0x5,%edi
3864(5): call 0xffffe23c(%rip)
3869(3): test %rax,%rax
386c(2): jz 0x1a(%rip)
386e(7): lea 0x5a0f(%rip),%rsi
3875(5): mov $0x3,%edx
387a(3): mov %rax,%rdi
387d(5): call 0xffffdfa3(%rip)
3882(2): test %eax,%eax
3884(2): jnz 0x45(%rip)
3886(7): lea 0x59fb(%rip),%rsi
388d(5): mov $0x5,%edx
3892(2): xor %edi,%edi
3894(7): lea 0x594f(%rip),%r12
389b(7): lea 0x597a(%rip),%rbx
38a2(5): call 0xffffe00e(%rip)
38a7(7): lea 0x593c(%rip),%rcx
38ae(7): lea 0x614b(%rip),%rdx
38b5(3): mov %rax,%rsi
38b8(5): mov $0x1,%edi
38bd(2): xor %eax,%eax
38bf(5): call 0xffffe1f1(%rip)
38c4(5): jmp 0xffffff4a(%rip)
38c9(7): lea 0x591a(%rip),%r12
38d0(7): mov 0x2097d1(%rip),%r13
38d7(7): lea 0x614a(%rip),%rsi
38de(2): xor %edi,%edi
38e0(5): mov $0x5,%edx
38e5(5): call 0xffffdfcb(%rip)
38ea(3): mov %r13,%rsi
38ed(3): mov %rax,%rdi
38f0(5): call 0xffffe0c0(%rip)
38f5(5): jmp 0xfffffed4(%rip)

"blake2b_compress" :
3900(2): push %r15
3902(2): push %r14
3904(2): push %r13
3906(2): push %r12
3908(1): push %rbp
3909(1): push %rbx
390a(7): sub $0x148,%rsp
3911(9): mov $0x28,%rax
391a(8): mov %rax,0x138(%rsp)
3922(2): xor %eax,%eax
3924(5): lea 0x30(%rsp),%rcx
3929(7): nop 0x0(%rax)
3930(4): mov 0x0(%rsi,%rax,8),%rdx
3934(4): mov %rdx,0x0(%rcx,%rax,8)
3938(4): add $0x1,%rax
393c(4): cmp $0x10,%rax
3940(2): jnz 0xfffffff0(%rip)
3942(8): lea 0xb0(%rsp),%rcx
394a(2): xor %eax,%eax
394c(5): mov %rcx,0x28(%rsp)
3951(7): nop 0x0(%rax)
3958(4): mov 0x0(%rdi,%rax,8),%rdx
395c(4): mov %rdx,0x0(%rcx,%rax,8)
3960(4): add $0x1,%rax
3964(4): cmp $0x8,%rax
3968(2): jnz 0xfffffff0(%rip)
396a(8): mov 0xd8(%rsp),%r8
3972(8): mov 0xb8(%rsp),%rbx
397a(a): mov $0x-7276294671716946913,%rcx
3984(8): mov 0xd0(%rsp),%r13
398c(8): mov 0xb0(%rsp),%rbp
3994(a): mov $0x5840696475078001361,%r9
399e(a): mov $0x-4942790177534073029,%r15
39a8(a): mov $0x7640891576956012808,%r14
39b2(8): mov 0xe0(%rsp),%rsi
39ba(3): add %r8,%rbx
39bd(5): add 0x40(%rsp),%rbx
39c2(8): mov 0xc0(%rsp),%r11
39ca(3): add %r13,%rbp
39cd(5): add 0x30(%rsp),%rbp
39d2(8): mov 0xc8(%rsp),%r10
39da(a): mov $0x2270897969802886507,%rdx
39e4(a): mov $0x4354685564936845355,%r12
39ee(3): add %rsi,%r11
39f1(5): add 0x50(%rsp),%r11
39f6(3): xor %rbx,%rcx
39f9(4): xor 0x48(%rdi),%rcx
39fd(5): add 0x48(%rsp),%rbx
3a02(3): xor %rbp,%r9
3a05(4): xor 0x40(%rdi),%r9
3a09(5): add 0x38(%rsp),%rbp
3a0e(3): xor %r11,%rdx
3a11(4): rol $0x20,%rcx
3a15(3): add %rcx,%r15
3a18(4): rol $0x20,%r9
3a1c(3): xor %r15,%r8
3a1f(3): add %r9,%r14
3a22(4): ror $0x18,%r8
3a26(3): xor %r14,%r13
3a29(3): add %r8,%rbx
3a2c(4): ror $0x18,%r13
3a30(3): xor %rbx,%rcx
3a33(3): add %r13,%rbp
3a36(4): ror $0x10,%rcx
3a3a(3): xor %rbp,%r9
3a3d(4): lea 0x0(%r15,%rcx,1),%rax
3a41(4): ror $0x10,%r9
3a45(a): mov $0x-6534734903238641935,%r15
3a4f(3): add %r9,%r14
3a52(3): xor %rax,%r8
3a55(5): mov %rax,0x8(%rsp)
3a5a(8): mov 0xe8(%rsp),%rax
3a62(3): xor %r14,%r13
3a65(3): rol $0x1,%r8
3a68(3): rol $0x1,%r13
3a6b(4): xor 0x50(%rdi),%rdx
3a6f(5): add 0x58(%rsp),%r11
3a74(3): add %rax,%r10
3a77(5): add 0x60(%rsp),%r10
3a7c(5): mov %r13,0x18(%rsp)
3a81(a): mov $0x6620516959819538809,%r13
3a8b(5): add 0x70(%rsp),%rbp
3a90(4): rol $0x20,%rdx
3a94(3): xor %r10,%r13
3a97(4): xor 0x58(%rdi),%r13
3a9b(5): add 0x68(%rsp),%r10
3aa0(3): add %rdx,%r12
3aa3(3): add %r8,%rbp
3aa6(3): xor %r12,%rsi
3aa9(4): ror $0x18,%rsi
3aad(4): rol $0x20,%r13
3ab1(3): add %rsi,%r11
3ab4(3): add %r13,%r15
3ab7(3): xor %r11,%rdx
3aba(3): xor %r15,%rax
3abd(4): ror $0x10,%rdx
3ac1(4): ror $0x18,%rax
3ac5(3): add %rdx,%r12
3ac8(3): add %rax,%r10
3acb(3): xor %r12,%rsi
3ace(3): xor %r10,%r13
3ad1(3): rol $0x1,%rsi
3ad4(4): ror $0x10,%r13
3ad8(3): add %r13,%r15
3adb(3): xor %rbp,%r13
3ade(4): rol $0x20,%r13
3ae2(3): xor %r15,%rax
3ae5(3): add %r13,%r12
3ae8(3): rol $0x1,%rax
3aeb(3): xor %r12,%r8
3aee(5): add 0x78(%rsp),%rbp
3af3(8): add 0x80(%rsp),%rbx
3afb(4): ror $0x18,%r8
3aff(8): add 0x90(%rsp),%r11
3b07(3): add %r8,%rbp
3b0a(3): add %rsi,%rbx
3b0d(3): xor %rbp,%r13
3b10(3): xor %rbx,%r9
3b13(8): add 0x88(%rsp),%rbx
3b1b(4): ror $0x10,%r13
3b1f(4): rol $0x20,%r9
3b23(3): add %rax,%r11
3b26(3): add %r13,%r12
3b29(5): mov %r13,0x20(%rsp)
3b2e(4): lea 0x0(%r15,%r9,1),%r13
3b32(3): xor %r11,%rcx
3b35(8): add 0x98(%rsp),%r11
3b3d(3): xor %r12,%r8
3b40(3): xor %r13,%rsi
3b43(4): rol $0x20,%rcx
3b47(3): rol $0x1,%r8
3b4a(4): ror $0x18,%rsi
3b4e(3): add %rcx,%r14
3b51(3): add %rsi,%rbx
3b54(3): xor %r14,%rax
3b57(3): xor %rbx,%r9
3b5a(4): ror $0x18,%rax
3b5e(4): ror $0x10,%r9
3b62(3): add %rax,%r11
3b65(5): lea 0x0(%r13,%r9,1),%r15
3b6a(3): xor %r11,%rcx
3b6d(5): mov 0x18(%rsp),%r13
3b72(4): ror $0x10,%rcx
3b76(3): xor %r15,%rsi
3b79(5): mov %r15,0x10(%rsp)
3b7e(3): rol $0x1,%rsi
3b81(3): add %rcx,%r14
3b84(8): add 0xa0(%rsp),%r10
3b8c(5): mov 0x8(%rsp),%r15
3b91(8): add 0xa0(%rsp),%rbp
3b99(3): xor %r14,%rax
3b9c(5): add 0x50(%rsp),%rbx
3ba1(3): rol $0x1,%rax
3ba4(3): add %r13,%r10
3ba7(3): xor %r10,%rdx
3baa(8): add 0xa8(%rsp),%r10
3bb2(4): rol $0x20,%rdx
3bb6(3): add %rdx,%r15
3bb9(3): xor %r15,%r13
3bbc(4): ror $0x18,%r13
3bc0(3): add %r13,%r10
3bc3(3): xor %r10,%rdx
3bc6(4): ror $0x10,%rdx
3bca(3): add %rdx,%r15
3bcd(3): xor %r15,%r13
3bd0(3): rol $0x1,%r13
3bd3(3): add %r13,%rbp
3bd6(3): xor %rbp,%r9
3bd9(8): add 0x80(%rsp),%rbp
3be1(4): rol $0x20,%r9
3be5(3): add %r9,%r14
3be8(3): xor %r14,%r13
3beb(4): ror $0x18,%r13
3bef(3): add %r13,%rbp
3bf2(3): xor %rbp,%r9
3bf5(4): ror $0x10,%r9
3bf9(3): add %r9,%r14
3bfc(3): xor %r14,%r13
3bff(3): rol $0x1,%r13
3c02(3): add %r8,%rbx
3c05(5): add 0x78(%rsp),%r11
3c0a(3): xor %rbx,%rcx
3c0d(5): add 0x70(%rsp),%rbx
3c12(8): add 0x98(%rsp),%r10
3c1a(4): rol $0x20,%rcx
3c1e(5): mov %r13,0x18(%rsp)
3c23(5): mov 0x20(%rsp),%r13
3c28(3): add %rcx,%r15
3c2b(3): add %rsi,%r11
3c2e(3): xor %r15,%r8
3c31(3): xor %r11,%rdx
3c34(4): ror $0x18,%r8
3c38(8): add 0xa8(%rsp),%r11
3c40(4): rol $0x20,%rdx
3c44(3): add %r8,%rbx
3c47(3): add %rax,%r10
3c4a(3): add %rdx,%r12
3c4d(3): xor %rbx,%rcx
3c50(3): xor %r10,%r13
3c53(3): xor %r12,%rsi
3c56(4): ror $0x10,%rcx
3c5a(4): rol $0x20,%r13
3c5e(4): ror $0x18,%rsi
3c62(3): add %rcx,%r15
3c65(3): add %rsi,%r11
3c68(5): mov %r15,0x8(%rsp)
3c6d(3): xor %r15,%r8
3c70(3): xor %r11,%rdx
3c73(5): mov 0x10(%rsp),%r15
3c78(3): rol $0x1,%r8
3c7b(4): ror $0x10,%rdx
3c7f(3): add %rdx,%r12
3c82(3): xor %r12,%rsi
3c85(3): add %r13,%r15
3c88(3): rol $0x1,%rsi
3c8b(3): xor %r15,%rax
3c8e(5): add 0x60(%rsp),%r10
3c93(5): add 0x38(%rsp),%rbp
3c98(4): ror $0x18,%rax
3c9c(5): add 0x30(%rsp),%rbx
3ca1(3): add %rax,%r10
3ca4(3): xor %r10,%r13
3ca7(3): add %r8,%rbp
3caa(3): add %rsi,%rbx
3cad(4): ror $0x10,%r13
3cb1(3): xor %rbx,%r9
3cb4(5): add 0x40(%rsp),%rbx
3cb9(3): add %r13,%r15
3cbc(3): xor %rbp,%r13
3cbf(8): add 0x90(%rsp),%rbp
3cc7(4): rol $0x20,%r13
3ccb(4): rol $0x20,%r9
3ccf(3): xor %r15,%rax
3cd2(3): add %r13,%r12
3cd5(3): add %r9,%r15
3cd8(3): rol $0x1,%rax
3cdb(3): xor %r12,%r8
3cde(3): xor %r15,%rsi
3ce1(4): ror $0x18,%r8
3ce5(4): ror $0x18,%rsi
3ce9(3): add %r8,%rbp
3cec(3): add %rsi,%rbx
3cef(3): xor %rbp,%r13
3cf2(4): ror $0x10,%r13
3cf6(3): add %r13,%r12
3cf9(5): mov %r13,0x20(%rsp)
3cfe(5): mov 0x18(%rsp),%r13
3d03(3): xor %r12,%r8
3d06(3): rol $0x1,%r8
3d09(3): xor %rbx,%r9
3d0c(8): add 0x88(%rsp),%r11
3d14(5): add 0x58(%rsp),%r10
3d19(4): ror $0x10,%r9
3d1d(3): add %r9,%r15
3d20(3): xor %r15,%rsi
3d23(5): mov %r15,0x10(%rsp)
3d28(5): mov 0x8(%rsp),%r15
3d2d(3): add %rax,%r11
3d30(3): rol $0x1,%rsi
3d33(3): add %r13,%r10
3d36(3): xor %r11,%rcx
3d39(5): add 0x68(%rsp),%r11
3d3e(3): xor %r10,%rdx
3d41(4): rol $0x20,%rcx
3d45(5): add 0x48(%rsp),%r10
3d4a(4): rol $0x20,%rdx
3d4e(3): add %rcx,%r14
3d51(3): add %rdx,%r15
3d54(3): xor %r14,%rax
3d57(3): xor %r15,%r13
3d5a(4): ror $0x18,%rax
3d5e(4): ror $0x18,%r13
3d62(3): add %rax,%r11
3d65(3): add %r13,%r10
3d68(3): xor %r11,%rcx
3d6b(3): xor %r10,%rdx
3d6e(4): ror $0x10,%rcx
3d72(4): ror $0x10,%rdx
3d76(3): add %rcx,%r14
3d79(3): add %rdx,%r15
3d7c(3): xor %r14,%rax
3d7f(3): xor %r15,%r13
3d82(3): rol $0x1,%rax
3d85(3): rol $0x1,%r13
3d88(8): add 0x88(%rsp),%rbp
3d90(8): add 0x90(%rsp),%rbx
3d98(3): add %r13,%rbp
3d9b(3): add %r8,%rbx
3d9e(3): xor %rbp,%r9
3da1(5): add 0x70(%rsp),%rbp
3da6(3): xor %rbx,%rcx
3da9(4): rol $0x20,%r9
3dad(4): rol $0x20,%rcx
3db1(5): add 0x30(%rsp),%rbx
3db6(3): add %r9,%r14
3db9(3): add %rcx,%r15
3dbc(3): xor %r14,%r13
3dbf(3): xor %r15,%r8
3dc2(4): ror $0x18,%r13
3dc6(4): ror $0x18,%r8
3dca(3): add %r13,%rbp
3dcd(3): add %r8,%rbx
3dd0(3): xor %rbp,%r9
3dd3(3): xor %rbx,%rcx
3dd6(4): ror $0x10,%r9
3dda(4): ror $0x10,%rcx
3dde(3): add %r9,%r14
3de1(3): add %rcx,%r15
3de4(3): xor %r14,%r13
3de7(5): mov %r15,0x8(%rsp)
3dec(3): xor %r15,%r8
3def(3): rol $0x1,%r13
3df2(3): rol $0x1,%r8
3df5(5): mov %r13,0x18(%rsp)
3dfa(5): add 0x58(%rsp),%r11
3dff(5): mov 0x20(%rsp),%r13
3e04(5): mov 0x10(%rsp),%r15
3e09(3): add %rsi,%r11
3e0c(3): xor %r11,%rdx
3e0f(4): rol $0x20,%rdx
3e13(8): add 0xa8(%rsp),%r10
3e1b(5): add 0x40(%rsp),%r11
3e20(3): add %rdx,%r12
3e23(8): add 0x80(%rsp),%rbp
3e2b(3): xor %r12,%rsi
3e2e(4): ror $0x18,%rsi
3e32(3): add %rax,%r10
3e35(3): add %rsi,%r11
3e38(3): xor %r10,%r13
3e3b(8): add 0x98(%rsp),%r10
3e43(3): xor %r11,%rdx
3e46(4): rol $0x20,%r13
3e4a(3): add %r8,%rbp
3e4d(4): ror $0x10,%rdx
3e51(3): add %r13,%r15
3e54(3): add %rdx,%r12
3e57(3): xor %r15,%rax
3e5a(3): xor %r12,%rsi
3e5d(4): ror $0x18,%rax
3e61(3): rol $0x1,%rsi
3e64(3): add %rax,%r10
3e67(3): xor %r10,%r13
3e6a(4): ror $0x10,%r13
3e6e(3): add %r13,%r15
3e71(3): xor %rbp,%r13
3e74(4): rol $0x20,%r13
3e78(3): xor %r15,%rax
3e7b(3): add %r13,%r12
3e7e(3): rol $0x1,%rax
3e81(3): xor %r12,%r8
3e84(4): ror $0x18,%r8
3e88(8): add 0xa0(%rsp),%rbp
3e90(5): add 0x48(%rsp),%rbx
3e95(5): add 0x68(%rsp),%r11
3e9a(3): add %rsi,%rbx
3e9d(3): add %r8,%rbp
3ea0(3): xor %rbx,%r9
3ea3(3): add %rax,%r11
3ea6(5): add 0x60(%rsp),%rbx
3eab(4): rol $0x20,%r9
3eaf(3): xor %r11,%rcx
3eb2(5): add 0x38(%rsp),%r11
3eb7(3): add %r9,%r15
3eba(4): rol $0x20,%rcx
3ebe(3): xor %rbp,%r13
3ec1(3): xor %r15,%rsi
3ec4(3): add %rcx,%r14
3ec7(4): ror $0x10,%r13
3ecb(4): ror $0x18,%rsi
3ecf(3): xor %r14,%rax
3ed2(3): add %r13,%r12
3ed5(3): add %rsi,%rbx
3ed8(4): ror $0x18,%rax
3edc(3): xor %r12,%r8
3edf(3): xor %rbx,%r9
3ee2(3): add %rax,%r11
3ee5(3): rol $0x1,%r8
3ee8(4): ror $0x10,%r9
3eec(3): xor %r11,%rcx
3eef(5): mov %r13,0x20(%rsp)
3ef4(3): add %r9,%r15
3ef7(4): ror $0x10,%rcx
3efb(5): mov 0x18(%rsp),%r13
3f00(3): xor %r15,%rsi
3f03(5): mov %r15,0x10(%rsp)
3f08(5): mov 0x8(%rsp),%r15
3f0d(3): rol $0x1,%rsi
3f10(3): add %rcx,%r14
3f13(5): add 0x78(%rsp),%r10
3f18(5): add 0x68(%rsp),%rbp
3f1d(3): xor %r14,%rax
3f20(5): add 0x48(%rsp),%rbx
3f25(3): rol $0x1,%rax
3f28(3): add %r13,%r10
3f2b(3): xor %r10,%rdx
3f2e(5): add 0x50(%rsp),%r10
3f33(4): rol $0x20,%rdx
3f37(3): add %rdx,%r15
3f3a(3): xor %r15,%r13
3f3d(4): ror $0x18,%r13
3f41(3): add %r13,%r10
3f44(3): xor %r10,%rdx
3f47(4): ror $0x10,%rdx
3f4b(3): add %rdx,%r15
3f4e(3): xor %r15,%r13
3f51(3): rol $0x1,%r13
3f54(3): add %r13,%rbp
3f57(3): xor %rbp,%r9
3f5a(5): add 0x78(%rsp),%rbp
3f5f(4): rol $0x20,%r9
3f63(3): add %r9,%r14
3f66(3): xor %r14,%r13
3f69(4): ror $0x18,%r13
3f6d(3): add %r13,%rbp
3f70(3): xor %rbp,%r9
3f73(4): ror $0x10,%r9
3f77(3): add %r9,%r14
3f7a(3): xor %r14,%r13
3f7d(3): rol $0x1,%r13
3f80(3): add %r8,%rbx
3f83(8): add 0x98(%rsp),%r11
3f8b(3): xor %rbx,%rcx
3f8e(5): add 0x38(%rsp),%rbx
3f93(8): add 0x88(%rsp),%r10
3f9b(4): rol $0x20,%rcx
3f9f(5): mov %r13,0x18(%rsp)
3fa4(5): mov 0x20(%rsp),%r13
3fa9(3): add %rcx,%r15
3fac(3): add %rsi,%r11
3faf(3): xor %r15,%r8
3fb2(3): xor %r11,%rdx
3fb5(4): ror $0x18,%r8
3fb9(8): add 0x90(%rsp),%r11
3fc1(4): rol $0x20,%rdx
3fc5(3): add %r8,%rbx
3fc8(3): add %rax,%r10
3fcb(3): add %rdx,%r12
3fce(3): xor %rbx,%rcx
3fd1(3): xor %r10,%r13
3fd4(3): xor %r12,%rsi
3fd7(4): ror $0x10,%rcx
3fdb(4): rol $0x20,%r13
3fdf(4): ror $0x18,%rsi
3fe3(3): add %rcx,%r15
3fe6(3): add %rsi,%r11
3fe9(3): xor %r15,%r8
3fec(5): mov %r15,0x8(%rsp)
3ff1(3): xor %r11,%rdx
3ff4(5): mov 0x10(%rsp),%r15
3ff9(3): rol $0x1,%r8
3ffc(4): ror $0x10,%rdx
4000(3): add %rdx,%r12
4003(3): xor %r12,%rsi
4006(3): add %r13,%r15
4009(3): rol $0x1,%rsi
400c(3): xor %r15,%rax
400f(8): add 0xa0(%rsp),%r10
4017(5): add 0x40(%rsp),%rbp
401c(4): ror $0x18,%rax
4020(3): add %rax,%r10
4023(3): xor %r10,%r13
4026(3): add %r8,%rbp
4029(4): ror $0x10,%r13
402d(3): add %r13,%r15
4030(3): xor %rbp,%r13
4033(5): add 0x60(%rsp),%rbp
4038(4): rol $0x20,%r13
403c(3): xor %r15,%rax
403f(3): add %r13,%r12
4042(3): rol $0x1,%rax
4045(3): xor %r12,%r8
4048(4): ror $0x18,%r8
404c(3): add %r8,%rbp
404f(3): xor %rbp,%r13
4052(4): ror $0x10,%r13
4056(5): mov %r13,0x20(%rsp)
405b(5): add 0x58(%rsp),%rbx
4060(3): add %r13,%r12
4063(3): xor %r12,%r8
4066(5): mov 0x18(%rsp),%r13
406b(3): rol $0x1,%r8
406e(3): add %rsi,%rbx
4071(3): xor %rbx,%r9
4074(8): add 0x80(%rsp),%rbx
407c(4): rol $0x20,%r9
4080(3): add %r9,%r15
4083(3): xor %r15,%rsi
4086(4): ror $0x18,%rsi
408a(3): add %rsi,%rbx
408d(3): xor %rbx,%r9
4090(5): add 0x50(%rsp),%r11
4095(8): add 0xa8(%rsp),%r10
409d(4): ror $0x10,%r9
40a1(3): add %r9,%r15
40a4(5): mov %r15,0x10(%rsp)
40a9(3): xor %r15,%rsi
40ac(5): mov 0x8(%rsp),%r15
40b1(3): add %rax,%r11
40b4(3): add %r13,%r10
40b7(3): rol $0x1,%rsi
40ba(3): xor %r11,%rcx
40bd(3): xor %r10,%rdx
40c0(5): add 0x30(%rsp),%r11
40c5(4): rol $0x20,%rcx
40c9(4): rol $0x20,%rdx
40cd(5): add 0x70(%rsp),%r10
40d2(3): add %rcx,%r14
40d5(3): add %rdx,%r15
40d8(3): xor %r14,%rax
40db(3): xor %r15,%r13
40de(4): ror $0x18,%rax
40e2(4): ror $0x18,%r13
40e6(3): add %rax,%r11
40e9(3): add %r13,%r10
40ec(3): xor %r11,%rcx
40ef(3): xor %r10,%rdx
40f2(4): ror $0x10,%rcx
40f6(4): ror $0x10,%rdx
40fa(3): add %rcx,%r14
40fd(3): add %rdx,%r15
4100(3): xor %r14,%rax
4103(3): xor %r15,%r13
4106(3): rol $0x1,%rax
4109(3): rol $0x1,%r13
410c(5): add 0x78(%rsp),%rbp
4111(5): add 0x58(%rsp),%rbx
4116(5): add 0x40(%rsp),%r11
411b(3): add %r13,%rbp
411e(3): add %r8,%rbx
4121(3): xor %rbp,%r9
4124(5): add 0x30(%rsp),%rbp
4129(3): xor %rbx,%rcx
412c(4): rol $0x20,%r9
4130(5): add 0x68(%rsp),%rbx
4135(4): rol $0x20,%rcx
4139(3): add %r9,%r14
413c(3): add %rsi,%r11
413f(3): add %rcx,%r15
4142(3): xor %r14,%r13
4145(3): xor %r11,%rdx
4148(3): xor %r15,%r8
414b(4): ror $0x18,%r13
414f(4): ror $0x18,%r8
4153(3): add %r13,%rbp
4156(3): add %r8,%rbx
4159(3): xor %rbp,%r9
415c(3): xor %rbx,%rcx
415f(4): ror $0x10,%r9
4163(4): ror $0x10,%rcx
4167(3): add %r9,%r14
416a(3): add %rcx,%r15
416d(3): xor %r14,%r13
4170(3): xor %r15,%r8
4173(3): rol $0x1,%r13
4176(5): mov %r15,0x8(%rsp)
417b(3): rol $0x1,%r8
417e(4): rol $0x20,%rdx
4182(8): add 0x80(%rsp),%r10
418a(5): mov %r13,0x18(%rsp)
418f(5): mov 0x20(%rsp),%r13
4194(3): add %rdx,%r12
4197(5): mov 0x10(%rsp),%r15
419c(5): add 0x50(%rsp),%r11
41a1(3): xor %r12,%rsi
41a4(8): add 0xa0(%rsp),%rbp
41ac(4): ror $0x18,%rsi
41b0(3): add %rax,%r10
41b3(3): xor %r10,%r13
41b6(8): add 0xa8(%rsp),%r10
41be(4): rol $0x20,%r13
41c2(3): add %rsi,%r11
41c5(3): add %r13,%r15
41c8(3): xor %r11,%rdx
41cb(3): add %r8,%rbp
41ce(3): xor %r15,%rax
41d1(4): ror $0x10,%rdx
41d5(4): ror $0x18,%rax
41d9(3): add %rdx,%r12
41dc(3): add %rax,%r10
41df(3): xor %r12,%rsi
41e2(3): xor %r10,%r13
41e5(3): rol $0x1,%rsi
41e8(4): ror $0x10,%r13
41ec(3): add %r13,%r15
41ef(3): xor %rbp,%r13
41f2(4): rol $0x20,%r13
41f6(3): xor %r15,%rax
41f9(3): add %r13,%r12
41fc(3): rol $0x1,%rax
41ff(3): xor %r12,%r8
4202(4): ror $0x18,%r8
4206(5): add 0x38(%rsp),%rbp
420b(8): add 0x88(%rsp),%rbx
4213(5): add 0x60(%rsp),%r11
4218(3): add %rsi,%rbx
421b(3): add %r8,%rbp
421e(3): xor %rbx,%r9
4221(3): add %rax,%r11
4224(8): add 0x90(%rsp),%rbx
422c(4): rol $0x20,%r9
4230(3): xor %r11,%rcx
4233(5): add 0x70(%rsp),%r11
4238(3): add %r9,%r15
423b(4): rol $0x20,%rcx
423f(3): xor %rbp,%r13
4242(3): xor %r15,%rsi
4245(3): add %rcx,%r14
4248(4): ror $0x10,%r13
424c(4): ror $0x18,%rsi
4250(3): xor %r14,%rax
4253(3): add %r13,%r12
4256(3): add %rsi,%rbx
4259(4): ror $0x18,%rax
425d(3): xor %r12,%r8
4260(3): xor %rbx,%r9
4263(3): add %rax,%r11
4266(3): rol $0x1,%r8
4269(4): ror $0x10,%r9
426d(3): xor %r11,%rcx
4270(5): mov %r13,0x20(%rsp)
4275(3): add %r9,%r15
4278(4): ror $0x10,%rcx
427c(5): mov 0x18(%rsp),%r13
4281(3): xor %r15,%rsi
4284(5): mov %r15,0x10(%rsp)
4289(5): mov 0x8(%rsp),%r15
428e(3): rol $0x1,%rsi
4291(3): add %rcx,%r14
4294(5): add 0x48(%rsp),%r10
4299(3): xor %r14,%rax
429c(3): rol $0x1,%rax
429f(3): add %r13,%r10
42a2(3): xor %r10,%rdx
42a5(8): add 0x98(%rsp),%r10
42ad(5): add 0x40(%rsp),%rbp
42b2(4): rol $0x20,%rdx
42b6(5): add 0x60(%rsp),%rbx
42bb(3): add %rdx,%r15
42be(3): xor %r15,%r13
42c1(4): ror $0x18,%r13
42c5(3): add %r13,%r10
42c8(3): xor %r10,%rdx
42cb(4): ror $0x10,%rdx
42cf(3): add %rdx,%r15
42d2(3): xor %r15,%r13
42d5(3): rol $0x1,%r13
42d8(3): add %r13,%rbp
42db(3): xor %rbp,%r9
42de(8): add 0x90(%rsp),%rbp
42e6(4): rol $0x20,%r9
42ea(3): add %r9,%r14
42ed(3): xor %r14,%r13
42f0(4): ror $0x18,%r13
42f4(3): add %r13,%rbp
42f7(3): xor %rbp,%r9
42fa(4): ror $0x10,%r9
42fe(3): add %r9,%r14
4301(3): xor %r14,%r13
4304(3): rol $0x1,%r13
4307(3): add %r8,%rbx
430a(5): add 0x30(%rsp),%r11
430f(3): xor %rbx,%rcx
4312(8): add 0x80(%rsp),%rbx
431a(5): add 0x70(%rsp),%r10
431f(4): rol $0x20,%rcx
4323(5): mov %r13,0x18(%rsp)
4328(5): mov 0x20(%rsp),%r13
432d(3): add %rcx,%r15
4330(3): add %rsi,%r11
4333(3): xor %r15,%r8
4336(3): xor %r11,%rdx
4339(4): ror $0x18,%r8
433d(8): add 0x88(%rsp),%r11
4345(4): rol $0x20,%rdx
4349(3): add %r8,%rbx
434c(3): add %rax,%r10
434f(3): add %rdx,%r12
4352(3): xor %rbx,%rcx
4355(3): xor %r10,%r13
4358(3): xor %r12,%rsi
435b(4): ror $0x10,%rcx
435f(4): rol $0x20,%r13
4363(4): ror $0x18,%rsi
4367(3): add %rcx,%r15
436a(3): add %rsi,%r11
436d(5): mov %r15,0x8(%rsp)
4372(3): xor %r15,%r8
4375(3): xor %r11,%rdx
4378(5): mov 0x10(%rsp),%r15
437d(3): rol $0x1,%r8
4380(4): ror $0x10,%rdx
4384(3): add %rdx,%r12
4387(3): xor %r12,%rsi
438a(3): add %r13,%r15
438d(3): rol $0x1,%rsi
4390(3): xor %r15,%rax
4393(5): add 0x48(%rsp),%r10
4398(5): add 0x50(%rsp),%rbp
439d(4): ror $0x18,%rax
43a1(5): add 0x68(%rsp),%rbx
43a6(3): add %rax,%r10
43a9(3): xor %r10,%r13
43ac(3): add %r8,%rbp
43af(3): add %rsi,%rbx
43b2(4): ror $0x10,%r13
43b6(3): xor %rbx,%r9
43b9(5): add 0x58(%rsp),%rbx
43be(3): add %r13,%r15
43c1(3): xor %rbp,%r13
43c4(8): add 0x98(%rsp),%rbp
43cc(4): rol $0x20,%r13
43d0(4): rol $0x20,%r9
43d4(3): xor %r15,%rax
43d7(3): add %r13,%r12
43da(3): add %r9,%r15
43dd(3): rol $0x1,%rax
43e0(3): xor %r12,%r8
43e3(3): xor %r15,%rsi
43e6(4): ror $0x18,%r8
43ea(4): ror $0x18,%rsi
43ee(3): add %r8,%rbp
43f1(3): add %rsi,%rbx
43f4(3): xor %rbp,%r13
43f7(4): ror $0x10,%r13
43fb(3): add %r13,%r12
43fe(5): mov %r13,0x20(%rsp)
4403(5): mov 0x18(%rsp),%r13
4408(3): xor %r12,%r8
440b(3): rol $0x1,%r8
440e(3): xor %rbx,%r9
4411(8): add 0xa8(%rsp),%r11
4419(5): add 0x38(%rsp),%r10
441e(4): ror $0x10,%r9
4422(3): add %r9,%r15
4425(3): xor %r15,%rsi
4428(5): mov %r15,0x10(%rsp)
442d(5): mov 0x8(%rsp),%r15
4432(3): add %rax,%r11
4435(3): rol $0x1,%rsi
4438(3): add %r13,%r10
443b(3): xor %r11,%rcx
443e(8): add 0xa0(%rsp),%r11
4446(3): xor %r10,%rdx
4449(4): rol $0x20,%rcx
444d(5): add 0x78(%rsp),%r10
4452(4): rol $0x20,%rdx
4456(3): add %rcx,%r14
4459(3): add %rdx,%r15
445c(3): xor %r14,%rax
445f(3): xor %r15,%r13
4462(4): ror $0x18,%rax
4466(4): ror $0x18,%r13
446a(3): add %rax,%r11
446d(3): add %r13,%r10
4470(3): xor %r11,%rcx
4473(3): xor %r10,%rdx
4476(4): ror $0x10,%rcx
447a(4): ror $0x10,%rdx
447e(3): add %rcx,%r14
4481(3): add %rdx,%r15
4484(3): xor %r14,%rax
4487(3): xor %r15,%r13
448a(3): rol $0x1,%rax
448d(3): rol $0x1,%r13
4490(8): add 0x90(%rsp),%rbp
4498(5): add 0x38(%rsp),%rbx
449d(8): add 0xa0(%rsp),%r11
44a5(3): add %r13,%rbp
44a8(3): add %r8,%rbx
44ab(3): xor %rbp,%r9
44ae(3): xor %rbx,%rcx
44b1(5): add 0x58(%rsp),%rbp
44b6(4): rol $0x20,%r9
44ba(4): rol $0x20,%rcx
44be(8): add 0xa8(%rsp),%rbx
44c6(3): add %r9,%r14
44c9(3): add %rcx,%r15
44cc(3): add %rsi,%r11
44cf(3): xor %r14,%r13
44d2(3): xor %r15,%r8
44d5(3): xor %r11,%rdx
44d8(4): ror $0x18,%r13
44dc(4): ror $0x18,%r8
44e0(3): add %r13,%rbp
44e3(3): add %r8,%rbx
44e6(3): xor %rbp,%r9
44e9(3): xor %rbx,%rcx
44ec(4): ror $0x10,%r9
44f0(4): ror $0x10,%rcx
44f4(3): add %r9,%r14
44f7(3): add %rcx,%r15
44fa(3): xor %r14,%r13
44fd(3): xor %r15,%r8
4500(5): mov %r15,0x8(%rsp)
4505(3): rol $0x1,%r13
4508(3): rol $0x1,%r8
450b(4): rol $0x20,%rdx
450f(5): mov %r13,0x18(%rsp)
4514(8): add 0x98(%rsp),%r11
451c(3): add %rdx,%r12
451f(5): add 0x50(%rsp),%r10
4524(5): mov 0x20(%rsp),%r13
4529(3): xor %r12,%rsi
452c(5): mov 0x10(%rsp),%r15
4531(5): add 0x30(%rsp),%rbp
4536(4): ror $0x18,%rsi
453a(3): add %rsi,%r11
453d(3): add %rax,%r10
4540(3): xor %r11,%rdx
4543(3): xor %r10,%r13
4546(8): add 0x80(%rsp),%r10
454e(3): add %r8,%rbp
4551(4): rol $0x20,%r13
4555(4): ror $0x10,%rdx
4559(3): add %r13,%r15
455c(3): add %rdx,%r12
455f(3): xor %r15,%rax
4562(3): xor %r12,%rsi
4565(4): ror $0x18,%rax
4569(3): rol $0x1,%rsi
456c(3): add %rax,%r10
456f(3): xor %r10,%r13
4572(4): ror $0x10,%r13
4576(3): add %r13,%r15
4579(3): xor %rbp,%r13
457c(4): rol $0x20,%r13
4580(3): xor %r15,%rax
4583(3): add %r13,%r12
4586(3): rol $0x1,%rax
4589(3): xor %r12,%r8
458c(4): ror $0x18,%r8
4590(5): add 0x68(%rsp),%rbp
4595(5): add 0x60(%rsp),%rbx
459a(5): add 0x78(%rsp),%r11
459f(3): add %rsi,%rbx
45a2(3): add %r8,%rbp
45a5(3): xor %rbx,%r9
45a8(3): add %rax,%r11
45ab(5): add 0x48(%rsp),%rbx
45b0(4): rol $0x20,%r9
45b4(3): xor %r11,%rcx
45b7(5): add 0x40(%rsp),%r11
45bc(3): add %r9,%r15
45bf(4): rol $0x20,%rcx
45c3(3): xor %rbp,%r13
45c6(3): xor %r15,%rsi
45c9(3): add %rcx,%r14
45cc(4): ror $0x10,%r13
45d0(4): ror $0x18,%rsi
45d4(3): xor %r14,%rax
45d7(3): add %r13,%r12
45da(3): add %rsi,%rbx
45dd(4): ror $0x18,%rax
45e1(3): xor %r12,%r8
45e4(3): xor %rbx,%r9
45e7(3): add %rax,%r11
45ea(3): rol $0x1,%r8
45ed(4): ror $0x10,%r9
45f1(3): xor %r11,%rcx
45f4(5): mov %r13,0x20(%rsp)
45f9(3): add %r9,%r15
45fc(4): ror $0x10,%rcx
4600(5): mov 0x18(%rsp),%r13
4605(3): xor %r15,%rsi
4608(5): mov %r15,0x10(%rsp)
460d(5): mov 0x8(%rsp),%r15
4612(3): rol $0x1,%rsi
4615(3): add %rcx,%r14
4618(5): add 0x70(%rsp),%r10
461d(8): add 0x98(%rsp),%rbp
4625(3): xor %r14,%rax
4628(5): add 0x68(%rsp),%rbx
462d(3): rol $0x1,%rax
4630(3): add %r13,%r10
4633(3): xor %r10,%rdx
4636(8): add 0x88(%rsp),%r10
463e(4): rol $0x20,%rdx
4642(3): add %rdx,%r15
4645(3): xor %r15,%r13
4648(4): ror $0x18,%r13
464c(3): add %r13,%r10
464f(3): xor %r10,%rdx
4652(4): ror $0x10,%rdx
4656(3): add %rdx,%r15
4659(3): xor %r15,%r13
465c(3): rol $0x1,%r13
465f(3): add %r13,%rbp
4662(3): xor %rbp,%r9
4665(8): add 0x88(%rsp),%rbp
466d(4): rol $0x20,%r9
4671(3): add %r9,%r14
4674(3): xor %r14,%r13
4677(4): ror $0x18,%r13
467b(3): add %r13,%rbp
467e(3): xor %rbp,%r9
4681(4): ror $0x10,%r9
4685(3): add %r9,%r14
4688(3): xor %r14,%r13
468b(3): rol $0x1,%r13
468e(3): add %r8,%rbx
4691(8): add 0x90(%rsp),%r11
4699(3): xor %rbx,%rcx
469c(8): add 0xa0(%rsp),%rbx
46a4(5): add 0x48(%rsp),%r10
46a9(4): rol $0x20,%rcx
46ad(5): mov %r13,0x18(%rsp)
46b2(5): mov 0x20(%rsp),%r13
46b7(3): add %rcx,%r15
46ba(3): add %rsi,%r11
46bd(3): xor %r15,%r8
46c0(3): xor %r11,%rdx
46c3(4): ror $0x18,%r8
46c7(5): add 0x38(%rsp),%r11
46cc(4): rol $0x20,%rdx
46d0(3): add %r8,%rbx
46d3(3): add %rax,%r10
46d6(3): add %rdx,%r12
46d9(3): xor %rbx,%rcx
46dc(3): xor %r10,%r13
46df(3): xor %r12,%rsi
46e2(4): ror $0x10,%rcx
46e6(4): rol $0x20,%r13
46ea(4): ror $0x18,%rsi
46ee(3): add %rcx,%r15
46f1(3): add %rsi,%r11
46f4(3): xor %r15,%r8
46f7(5): mov %r15,0x8(%rsp)
46fc(3): xor %r11,%rdx
46ff(5): mov 0x10(%rsp),%r15
4704(3): rol $0x1,%r8
4707(4): ror $0x10,%rdx
470b(3): add %rdx,%r12
470e(3): xor %r12,%rsi
4711(3): add %r13,%r15
4714(3): rol $0x1,%rsi
4717(3): xor %r15,%rax
471a(5): add 0x78(%rsp),%r10
471f(5): add 0x58(%rsp),%rbp
4724(4): ror $0x18,%rax
4728(3): add %rax,%r10
472b(3): xor %r10,%r13
472e(3): add %r8,%rbp
4731(4): ror $0x10,%r13
4735(3): add %r13,%r15
4738(3): xor %rbp,%r13
473b(5): add 0x30(%rsp),%rbp
4740(4): rol $0x20,%r13
4744(3): xor %r15,%rax
4747(3): add %r13,%r12
474a(3): rol $0x1,%rax
474d(3): xor %r12,%r8
4750(4): ror $0x18,%r8
4754(3): add %r8,%rbp
4757(3): xor %rbp,%r13
475a(4): ror $0x10,%r13
475e(5): mov %r13,0x20(%rsp)
4763(8): add 0xa8(%rsp),%rbx
476b(3): add %r13,%r12
476e(3): xor %r12,%r8
4771(5): mov 0x18(%rsp),%r13
4776(3): rol $0x1,%r8
4779(3): add %rsi,%rbx
477c(3): xor %rbx,%r9
477f(5): add 0x50(%rsp),%rbx
4784(4): rol $0x20,%r9
4788(3): add %r9,%r15
478b(3): xor %r15,%rsi
478e(4): ror $0x18,%rsi
4792(3): add %rsi,%rbx
4795(3): xor %rbx,%r9
4798(5): add 0x70(%rsp),%r11
479d(5): add 0x40(%rsp),%r10
47a2(4): ror $0x10,%r9
47a6(3): add %r9,%r15
47a9(5): mov %r15,0x10(%rsp)
47ae(3): xor %r15,%rsi
47b1(5): mov 0x8(%rsp),%r15
47b6(3): add %rax,%r11
47b9(3): add %r13,%r10
47bc(3): rol $0x1,%rsi
47bf(3): xor %r11,%rcx
47c2(3): xor %r10,%rdx
47c5(5): add 0x60(%rsp),%r11
47ca(4): rol $0x20,%rcx
47ce(4): rol $0x20,%rdx
47d2(8): add 0x80(%rsp),%r10
47da(3): add %rcx,%r14
47dd(3): add %rdx,%r15
47e0(3): xor %r14,%rax
47e3(3): xor %r15,%r13
47e6(4): ror $0x18,%rax
47ea(4): ror $0x18,%r13
47ee(3): add %rax,%r11
47f1(3): add %r13,%r10
47f4(3): xor %r11,%rcx
47f7(3): xor %r10,%rdx
47fa(4): ror $0x10,%rcx
47fe(4): ror $0x10,%rdx
4802(3): add %rcx,%r14
4805(3): add %rdx,%r15
4808(3): xor %r14,%rax
480b(3): xor %r15,%r13
480e(3): rol $0x1,%rax
4811(3): rol $0x1,%r13
4814(5): add 0x60(%rsp),%rbp
4819(8): add 0xa0(%rsp),%rbx
4821(8): add 0x88(%rsp),%r11
4829(3): add %r13,%rbp
482c(3): add %r8,%rbx
482f(3): xor %rbp,%r9
4832(8): add 0xa8(%rsp),%rbp
483a(3): xor %rbx,%rcx
483d(4): rol $0x20,%r9
4841(5): add 0x78(%rsp),%rbx
4846(4): rol $0x20,%rcx
484a(3): add %r9,%r14
484d(3): add %rsi,%r11
4850(3): add %rcx,%r15
4853(3): xor %r14,%r13
4856(3): xor %r11,%rdx
4859(3): xor %r15,%r8
485c(4): ror $0x18,%r13
4860(4): ror $0x18,%r8
4864(3): add %r13,%rbp
4867(3): add %r8,%rbx
486a(3): xor %rbp,%r9
486d(3): xor %rbx,%rcx
4870(4): ror $0x10,%r9
4874(4): ror $0x10,%rcx
4878(3): add %r9,%r14
487b(3): add %rcx,%r15
487e(3): xor %r14,%r13
4881(3): xor %r15,%r8
4884(3): rol $0x1,%r13
4887(5): mov %r15,0x8(%rsp)
488c(3): rol $0x1,%r8
488f(4): rol $0x20,%rdx
4893(5): add 0x30(%rsp),%r10
4898(5): mov %r13,0x18(%rsp)
489d(5): mov 0x20(%rsp),%r13
48a2(3): add %rdx,%r12
48a5(5): mov 0x10(%rsp),%r15
48aa(5): add 0x48(%rsp),%r11
48af(3): xor %r12,%rsi
48b2(8): add 0x90(%rsp),%rbp
48ba(4): ror $0x18,%rsi
48be(3): add %rax,%r10
48c1(3): xor %r10,%r13
48c4(5): add 0x70(%rsp),%r10
48c9(4): rol $0x20,%r13
48cd(3): add %rsi,%r11
48d0(3): add %r13,%r15
48d3(3): xor %r11,%rdx
48d6(3): add %r8,%rbp
48d9(3): xor %r15,%rax
48dc(4): ror $0x10,%rdx
48e0(4): ror $0x18,%rax
48e4(3): add %rdx,%r12
48e7(3): add %rax,%r10
48ea(3): xor %r12,%rsi
48ed(3): xor %r10,%r13
48f0(3): rol $0x1,%rsi
48f3(4): ror $0x10,%r13
48f7(3): add %r13,%r15
48fa(3): xor %rbp,%r13
48fd(4): rol $0x20,%r13
4901(3): xor %r15,%rax
4904(3): add %r13,%r12
4907(3): rol $0x1,%rax
490a(3): xor %r12,%r8
490d(4): ror $0x18,%r8
4911(5): add 0x40(%rsp),%rbp
4916(8): add 0x98(%rsp),%rbx
491e(5): add 0x38(%rsp),%r11
4923(3): add %rsi,%rbx
4926(3): add %r8,%rbp
4929(3): xor %rbx,%r9
492c(3): add %rax,%r11
492f(5): add 0x68(%rsp),%rbx
4934(4): rol $0x20,%r9
4938(3): xor %r11,%rcx
493b(5): add 0x50(%rsp),%r11
4940(3): add %r9,%r15
4943(4): rol $0x20,%rcx
4947(3): xor %rbp,%r13
494a(3): xor %r15,%rsi
494d(3): add %rcx,%r14
4950(4): ror $0x10,%r13
4954(4): ror $0x18,%rsi
4958(3): xor %r14,%rax
495b(3): add %r13,%r12
495e(3): add %rsi,%rbx
4961(4): ror $0x18,%rax
4965(3): xor %r12,%r8
4968(3): xor %rbx,%r9
496b(3): add %rax,%r11
496e(3): rol $0x1,%r8
4971(4): ror $0x10,%r9
4975(3): xor %r11,%rcx
4978(5): mov %r13,0x20(%rsp)
497d(3): add %r9,%r15
4980(4): ror $0x10,%rcx
4984(5): mov 0x18(%rsp),%r13
4989(3): xor %r15,%rsi
498c(5): mov %r15,0x10(%rsp)
4991(5): mov 0x8(%rsp),%r15
4996(3): rol $0x1,%rsi
4999(3): add %rcx,%r14
499c(8): add 0x80(%rsp),%r10
49a4(3): xor %r14,%rax
49a7(3): rol $0x1,%rax
49aa(3): add %r13,%r10
49ad(3): xor %r10,%rdx
49b0(5): add 0x58(%rsp),%r10
49b5(8): add 0x80(%rsp),%rbp
49bd(4): rol $0x20,%rdx
49c1(5): add 0x70(%rsp),%rbx
49c6(3): add %rdx,%r15
49c9(3): xor %r15,%r13
49cc(4): ror $0x18,%r13
49d0(3): add %r13,%r10
49d3(3): xor %r10,%rdx
49d6(4): ror $0x10,%rdx
49da(3): add %rdx,%r15
49dd(3): xor %r15,%r13
49e0(3): rol $0x1,%r13
49e3(3): add %r13,%rbp
49e6(3): xor %rbp,%r9
49e9(5): add 0x40(%rsp),%rbp
49ee(4): rol $0x20,%r9
49f2(3): add %r9,%r14
49f5(3): xor %r14,%r13
49f8(4): ror $0x18,%r13
49fc(3): add %r13,%rbp
49ff(3): xor %rbp,%r9
4a02(4): ror $0x10,%r9
4a06(3): add %r9,%r14
4a09(3): xor %r14,%r13
4a0c(3): rol $0x1,%r13
4a0f(3): add %r8,%rbx
4a12(5): add 0x68(%rsp),%r11
4a17(3): xor %rbx,%rcx
4a1a(5): add 0x50(%rsp),%rbx
4a1f(5): add 0x38(%rsp),%r10
4a24(4): rol $0x20,%rcx
4a28(5): mov %r13,0x18(%rsp)
4a2d(5): mov 0x20(%rsp),%r13
4a32(3): add %rcx,%r15
4a35(3): add %rsi,%r11
4a38(3): xor %r15,%r8
4a3b(3): xor %r11,%rdx
4a3e(4): ror $0x18,%r8
4a42(5): add 0x60(%rsp),%r11
4a47(4): rol $0x20,%rdx
4a4b(3): add %r8,%rbx
4a4e(3): add %rax,%r10
4a51(3): add %rdx,%r12
4a54(3): xor %rbx,%rcx
4a57(3): xor %r10,%r13
4a5a(3): xor %r12,%rsi
4a5d(4): ror $0x10,%rcx
4a61(4): rol $0x20,%r13
4a65(4): ror $0x18,%rsi
4a69(3): add %rcx,%r15
4a6c(3): add %rsi,%r11
4a6f(5): mov %r15,0x8(%rsp)
4a74(3): xor %r15,%r8
4a77(3): xor %r11,%rdx
4a7a(5): mov 0x10(%rsp),%r15
4a7f(3): rol $0x1,%r8
4a82(4): ror $0x10,%rdx
4a86(3): add %rdx,%r12
4a89(3): xor %r12,%rsi
4a8c(3): add %r13,%r15
4a8f(3): rol $0x1,%rsi
4a92(3): xor %r15,%rax
4a95(5): add 0x58(%rsp),%r10
4a9a(8): add 0xa8(%rsp),%rbp
4aa2(4): ror $0x18,%rax
4aa6(5): add 0x78(%rsp),%rbx
4aab(3): add %rax,%r10
4aae(3): xor %r10,%r13
4ab1(3): add %r8,%rbp
4ab4(3): add %rsi,%rbx
4ab7(4): ror $0x10,%r13
4abb(3): xor %rbx,%r9
4abe(8): add 0xa0(%rsp),%rbx
4ac6(3): add %r13,%r15
4ac9(3): xor %rbp,%r13
4acc(8): add 0x88(%rsp),%rbp
4ad4(4): rol $0x20,%r13
4ad8(4): rol $0x20,%r9
4adc(3): xor %r15,%rax
4adf(3): add %r13,%r12
4ae2(3): add %r9,%r15
4ae5(3): rol $0x1,%rax
4ae8(3): xor %r12,%r8
4aeb(3): xor %r15,%rsi
4aee(4): ror $0x18,%r8
4af2(4): ror $0x18,%rsi
4af6(3): add %r8,%rbp
4af9(3): add %rsi,%rbx
4afc(3): xor %rbp,%r13
4aff(4): ror $0x10,%r13
4b03(3): add %r13,%r12
4b06(5): mov %r13,0x20(%rsp)
4b0b(5): mov 0x18(%rsp),%r13
4b10(3): xor %r12,%r8
4b13(3): rol $0x1,%r8
4b16(3): xor %rbx,%r9
4b19(5): add 0x48(%rsp),%r11
4b1e(8): add 0x98(%rsp),%r10
4b26(4): ror $0x10,%r9
4b2a(3): add %r9,%r15
4b2d(3): xor %r15,%rsi
4b30(5): mov %r15,0x10(%rsp)
4b35(5): mov 0x8(%rsp),%r15
4b3a(3): add %rax,%r11
4b3d(3): rol $0x1,%rsi
4b40(3): add %r13,%r10
4b43(3): xor %r11,%rcx
4b46(8): add 0x90(%rsp),%r11
4b4e(3): xor %r10,%rdx
4b51(4): rol $0x20,%rcx
4b55(5): add 0x30(%rsp),%r10
4b5a(4): rol $0x20,%rdx
4b5e(3): add %rcx,%r14
4b61(3): add %rdx,%r15
4b64(3): xor %r14,%rax
4b67(3): xor %r15,%r13
4b6a(4): ror $0x18,%rax
4b6e(4): ror $0x18,%r13
4b72(3): add %rax,%r11
4b75(3): add %r13,%r10
4b78(3): xor %r11,%rcx
4b7b(3): xor %r10,%rdx
4b7e(4): ror $0x10,%rcx
4b82(4): ror $0x10,%rdx
4b86(3): add %rcx,%r14
4b89(3): add %rdx,%r15
4b8c(3): xor %r14,%rax
4b8f(3): xor %r15,%r13
4b92(3): rol $0x1,%rax
4b95(3): rol $0x1,%r13
4b98(5): add 0x30(%rsp),%rbp
4b9d(5): add 0x40(%rsp),%rbx
4ba2(5): add 0x50(%rsp),%r11
4ba7(3): add %r13,%rbp
4baa(3): add %r8,%rbx
4bad(3): xor %rbp,%r9
4bb0(3): xor %rbx,%rcx
4bb3(5): add 0x38(%rsp),%rbp
4bb8(4): rol $0x20,%r9
4bbc(4): rol $0x20,%rcx
4bc0(5): add 0x48(%rsp),%rbx
4bc5(3): add %r9,%r14
4bc8(3): add %rcx,%r15
4bcb(3): add %rsi,%r11
4bce(3): xor %r14,%r13
4bd1(3): xor %r15,%r8
4bd4(3): xor %r11,%rdx
4bd7(4): ror $0x18,%r13
4bdb(4): ror $0x18,%r8
4bdf(3): add %r13,%rbp
4be2(3): add %r8,%rbx
4be5(3): xor %rbp,%r9
4be8(3): xor %rbx,%rcx
4beb(4): ror $0x10,%r9
4bef(4): ror $0x10,%rcx
4bf3(3): add %r9,%r14
4bf6(3): add %rcx,%r15
4bf9(3): xor %r14,%r13
4bfc(3): xor %r15,%r8
4bff(5): mov %r15,0x8(%rsp)
4c04(3): rol $0x1,%r13
4c07(3): rol $0x1,%r8
4c0a(4): rol $0x20,%rdx
4c0e(5): mov %r13,0x18(%rsp)
4c13(5): add 0x58(%rsp),%r11
4c18(3): add %rdx,%r12
4c1b(5): add 0x60(%rsp),%r10
4c20(5): mov 0x20(%rsp),%r13
4c25(3): xor %r12,%rsi
4c28(5): mov 0x10(%rsp),%r15
4c2d(5): add 0x70(%rsp),%rbp
4c32(4): ror $0x18,%rsi
4c36(3): add %rsi,%r11
4c39(3): add %rax,%r10
4c3c(3): xor %r11,%rdx
4c3f(3): xor %r10,%r13
4c42(5): add 0x68(%rsp),%r10
4c47(3): add %r8,%rbp
4c4a(4): rol $0x20,%r13
4c4e(4): ror $0x10,%rdx
4c52(3): add %r13,%r15
4c55(3): add %rdx,%r12
4c58(3): xor %r15,%rax
4c5b(3): xor %r12,%rsi
4c5e(4): ror $0x18,%rax
4c62(3): rol $0x1,%rsi
4c65(3): add %rax,%r10
4c68(3): xor %r10,%r13
4c6b(4): ror $0x10,%r13
4c6f(3): add %r13,%r15
4c72(3): xor %rbp,%r13
4c75(4): rol $0x20,%r13
4c79(3): xor %r15,%rax
4c7c(3): add %r13,%r12
4c7f(3): rol $0x1,%rax
4c82(3): xor %r12,%r8
4c85(4): ror $0x18,%r8
4c89(5): add 0x78(%rsp),%rbp
4c8e(8): add 0x80(%rsp),%rbx
4c96(8): add 0x90(%rsp),%r11
4c9e(3): add %rsi,%rbx
4ca1(3): add %r8,%rbp
4ca4(3): xor %rbx,%r9
4ca7(3): add %rax,%r11
4caa(8): add 0x88(%rsp),%rbx
4cb2(4): rol $0x20,%r9
4cb6(3): xor %r11,%rcx
4cb9(8): add 0x98(%rsp),%r11
4cc1(3): add %r9,%r15
4cc4(4): rol $0x20,%rcx
4cc8(3): xor %rbp,%r13
4ccb(3): xor %r15,%rsi
4cce(3): add %rcx,%r14
4cd1(4): ror $0x10,%r13
4cd5(4): ror $0x18,%rsi
4cd9(3): xor %r14,%rax
4cdc(3): add %r13,%r12
4cdf(3): add %rsi,%rbx
4ce2(4): ror $0x18,%rax
4ce6(3): xor %r12,%r8
4ce9(3): xor %rbx,%r9
4cec(3): add %rax,%r11
4cef(3): rol $0x1,%r8
4cf2(4): ror $0x10,%r9
4cf6(3): xor %r11,%rcx
4cf9(5): mov %r13,0x20(%rsp)
4cfe(3): add %r9,%r15
4d01(4): ror $0x10,%rcx
4d05(5): mov 0x18(%rsp),%r13
4d0a(3): xor %r15,%rsi
4d0d(5): mov %r15,0x10(%rsp)
4d12(5): mov 0x8(%rsp),%r15
4d17(3): rol $0x1,%rsi
4d1a(3): add %rcx,%r14
4d1d(8): add 0xa0(%rsp),%r10
4d25(8): add 0xa0(%rsp),%rbp
4d2d(3): xor %r14,%rax
4d30(5): add 0x50(%rsp),%rbx
4d35(3): rol $0x1,%rax
4d38(3): add %r13,%r10
4d3b(3): xor %r10,%rdx
4d3e(8): add 0xa8(%rsp),%r10
4d46(4): rol $0x20,%rdx
4d4a(3): add %rdx,%r15
4d4d(3): xor %r15,%r13
4d50(4): ror $0x18,%r13
4d54(3): add %r13,%r10
4d57(3): xor %r10,%rdx
4d5a(4): ror $0x10,%rdx
4d5e(3): add %rdx,%r15
4d61(3): xor %r15,%r13
4d64(3): rol $0x1,%r13
4d67(3): add %r13,%rbp
4d6a(3): xor %rbp,%r9
4d6d(8): add 0x80(%rsp),%rbp
4d75(4): rol $0x20,%r9
4d79(3): add %r9,%r14
4d7c(3): xor %r14,%r13
4d7f(4): ror $0x18,%r13
4d83(3): add %r13,%rbp
4d86(3): xor %rbp,%r9
4d89(4): ror $0x10,%r9
4d8d(3): add %r9,%r14
4d90(3): xor %r14,%r13
4d93(3): rol $0x1,%r13
4d96(3): add %r8,%rbx
4d99(5): add 0x78(%rsp),%r11
4d9e(3): xor %rbx,%rcx
4da1(5): add 0x70(%rsp),%rbx
4da6(8): add 0x98(%rsp),%r10
4dae(4): rol $0x20,%rcx
4db2(5): mov %r13,0x18(%rsp)
4db7(5): mov 0x20(%rsp),%r13
4dbc(3): add %rcx,%r15
4dbf(3): add %rsi,%r11
4dc2(3): xor %r15,%r8
4dc5(3): xor %r11,%rdx
4dc8(4): ror $0x18,%r8
4dcc(8): add 0xa8(%rsp),%r11
4dd4(4): rol $0x20,%rdx
4dd8(3): add %r8,%rbx
4ddb(3): add %rax,%r10
4dde(3): add %rdx,%r12
4de1(3): xor %rbx,%rcx
4de4(3): xor %r10,%r13
4de7(3): xor %r12,%rsi
4dea(4): ror $0x10,%rcx
4dee(4): rol $0x20,%r13
4df2(4): ror $0x18,%rsi
4df6(3): add %rcx,%r15
4df9(3): add %rsi,%r11
4dfc(3): xor %r15,%r8
4dff(5): mov %r15,0x8(%rsp)
4e04(3): xor %r11,%rdx
4e07(5): mov 0x10(%rsp),%r15
4e0c(3): rol $0x1,%r8
4e0f(4): ror $0x10,%rdx
4e13(3): add %rdx,%r12
4e16(3): xor %r12,%rsi
4e19(3): add %r13,%r15
4e1c(3): rol $0x1,%rsi
4e1f(3): xor %r15,%rax
4e22(5): add 0x60(%rsp),%r10
4e27(5): add 0x38(%rsp),%rbp
4e2c(4): ror $0x18,%rax
4e30(3): add %rax,%r10
4e33(3): xor %r10,%r13
4e36(3): add %r8,%rbp
4e39(4): ror $0x10,%r13
4e3d(3): add %r13,%r15
4e40(3): xor %rbp,%r13
4e43(8): add 0x90(%rsp),%rbp
4e4b(4): rol $0x20,%r13
4e4f(3): xor %r15,%rax
4e52(3): add %r13,%r12
4e55(3): rol $0x1,%rax
4e58(3): xor %r12,%r8
4e5b(4): ror $0x18,%r8
4e5f(3): add %r8,%rbp
4e62(3): xor %rbp,%r13
4e65(8): mov %rbp,0xb0(%rsp)
4e6d(4): ror $0x10,%r13
4e71(8): mov %r13,0x128(%rsp)
4e79(5): add 0x30(%rsp),%rbx
4e7e(3): add %r13,%r12
4e81(8): mov %r12,0x100(%rsp)
4e89(3): xor %r8,%r12
4e8c(3): rol $0x1,%r12
4e8f(8): mov %r12,0xd8(%rsp)
4e97(3): add %rsi,%rbx
4e9a(3): xor %rbx,%r9
4e9d(5): add 0x40(%rsp),%rbx
4ea2(4): rol $0x20,%r9
4ea6(3): add %r9,%r15
4ea9(3): xor %r15,%rsi
4eac(4): ror $0x18,%rsi
4eb0(3): add %rsi,%rbx
4eb3(8): mov %rbx,0xb8(%rsp)
4ebb(3): xor %r9,%rbx
4ebe(8): add 0x88(%rsp),%r11
4ec6(4): ror $0x10,%rbx
4eca(3): add %rbx,%r15
4ecd(8): mov %rbx,0x110(%rsp)
4ed5(8): mov %r15,0x108(%rsp)
4edd(3): xor %rsi,%r15
4ee0(3): add %rax,%r11
4ee3(3): rol $0x1,%r15
4ee6(3): xor %r11,%rcx
4ee9(5): add 0x68(%rsp),%r11
4eee(8): mov %r15,0xe0(%rsp)
4ef6(4): rol $0x20,%rcx
4efa(5): mov 0x8(%rsp),%r15
4eff(3): add %rcx,%r14
4f02(3): xor %r14,%rax
4f05(4): ror $0x18,%rax
4f09(3): add %rax,%r11
4f0c(3): xor %r11,%rcx
4f0f(8): mov %r11,0xc0(%rsp)
4f17(4): ror $0x10,%rcx
4f1b(3): add %rcx,%r14
4f1e(8): mov %rcx,0x118(%rsp)
4f26(5): mov 0x58(%rsp),%rcx
4f2b(3): xor %r14,%rax
4f2e(8): mov %r14,0xf0(%rsp)
4f36(3): rol $0x1,%rax
4f39(8): mov %rax,0xe8(%rsp)
4f41(5): mov 0x18(%rsp),%rax
4f46(3): add %r10,%rcx
4f49(3): add %rax,%rcx
4f4c(3): xor %rcx,%rdx
4f4f(5): add 0x48(%rsp),%rcx
4f54(4): rol $0x20,%rdx
4f58(3): add %rdx,%r15
4f5b(3): xor %r15,%rax
4f5e(3): mov %rax,%r13
4f61(4): ror $0x18,%r13
4f65(4): lea 0x0(%rcx,%r13,1),%rax
4f69(3): xor %rax,%rdx
4f6c(8): mov %rax,0xc8(%rsp)
4f74(4): ror $0x10,%rdx
4f78(8): mov %rdx,0x120(%rsp)
4f80(3): add %r15,%rdx
4f83(8): mov %rdx,0xf8(%rsp)
4f8b(3): xor %r13,%rdx
4f8e(3): rol $0x1,%rdx
4f91(2): xor %eax,%eax
4f93(8): mov %rdx,0xd0(%rsp)
4f9b(5): mov 0x28(%rsp),%rdx
4fa0(2): jmp 0x11(%rip)
4fa2(6): nop 0x0(%rax,%rax,1)
4fa8(4): mov 0x0(%rdx,%rax,8),%rbp
4fac(5): mov 0x40(%rdx,%rax,8),%r14
4fb1(3): xor %r14,%rbp
4fb4(4): xor %rbp,0x0(%rdi,%rax,8)
4fb8(4): add $0x1,%rax
4fbc(4): cmp $0x8,%rax
4fc0(2): jnz 0xffffffe8(%rip)
4fc2(8): mov 0x138(%rsp),%rax
4fca(9): xor $0x28,%rax
4fd3(2): jnz 0x14(%rip)
4fd5(7): add $0x148,%rsp
4fdc(1): pop %rbx
4fdd(1): pop %rbp
4fde(2): pop %r12
4fe0(2): pop %r13
4fe2(2): pop %r14
4fe4(2): pop %r15
4fe6(1): ret near (%rsp)
4fe7(5): call 0xffffc8f9(%rip)

"blake2b_update.part.3" :
4ff0(2): push %r15
4ff2(2): push %r14
4ff4(2): push %r13
4ff6(2): push %r12
4ff8(6): mov $0x80,%r13d
4ffe(1): push %rbp
4fff(1): push %rbx
5000(3): mov %rdi,%rbx
5003(4): lea 0x60(%rbx),%r14
5007(3): mov %rsi,%rbp
500a(3): mov %rdx,%r12
500d(4): sub $0x8,%rsp
5011(7): mov 0xe0(%rdi),%rdi
5018(3): sub %rdi,%r13
501b(3): add %r14,%rdi
501e(3): cmp %rdx,%r13
5021(2): jb 0x27(%rip)
5023(3): mov %r12,%rdx
5026(3): mov %rbp,%rsi
5029(5): call 0xffffc9e7(%rip)
502e(7): add %r12,0xe0(%rbx)
5035(4): add $0x8,%rsp
5039(1): pop %rbx
503a(1): pop %rbp
503b(2): pop %r12
503d(2): pop %r13
503f(2): pop %r14
5041(2): pop %r15
5043(1): ret near (%rsp)
5044(4): nop 0x0(%rax)
5048(3): mov %r13,%rdx
504b(b): mov $0x0,0xe0(%rbx)
5056(5): call 0xffffc9ba(%rip)
505b(4): mov 0x40(%rbx),%rax
505f(3): mov %r14,%rsi
5062(3): mov %rbx,%rdi
5065(4): sub $0xffffff80,%rax
5069(4): cmp $0x7f,%rax
506d(4): mov %rax,0x40(%rbx)
5071(3): setbe %al
5074(3): sub %r13,%r12
5077(3): add %r13,%rbp
507a(3): movzx %al,%eax
507d(4): add %rax,0x48(%rbx)
5081(5): call 0xffffe87f(%rip)
5086(7): cmp $0x80,%r12
508d(2): jbe 0x5d(%rip)
508f(8): lea 0xffffff7f(%r12),%r15
5097(4): shr $0x7,%r15
509b(4): lea 0x1(%r15),%r13
509f(4): shl/sal $0x7,%r13
50a3(3): add %rbp,%r13
50a6(a): nop 0x0(%rax,%rax,1)
50b0(4): mov 0x40(%rbx),%rax
50b4(3): mov %rbp,%rsi
50b7(3): mov %rbx,%rdi
50ba(4): sub $0xffffff80,%rax
50be(4): cmp $0x7f,%rax
50c2(4): mov %rax,0x40(%rbx)
50c6(3): setbe %al
50c9(4): sub $0xffffff80,%rbp
50cd(3): movzx %al,%eax
50d0(4): add %rax,0x48(%rbx)
50d4(5): call 0xffffe82c(%rip)
50d9(3): cmp %rbp,%r13
50dc(2): jnz 0xffffffd4(%rip)
50de(3): neg %r15
50e1(4): shl/sal $0x7,%r15
50e5(5): lea 0xffffff80(%r12,%r15,1),%r12
50ea(7): mov 0xe0(%rbx),%rdi
50f1(3): add %r14,%rdi
50f4(5): jmp 0xffffff2f(%rip)

"blake2b_init_param" :
5100(8): mov $0x0,0x40(%rdi)
5108(b): mov $0x0,0xf0(%rdi)
5113(3): mov %rdi,%r8
5116(4): lea 0x48(%rdi),%rdi
511a(3): mov %r8d,%eax
511d(a): mov $0x7640891576956012808,%rdx
5127(4): and $0xfffffff8,%rdi
512b(2): sub %edi,%eax
512d(6): lea 0xf8(%rax),%ecx
5133(2): xor %eax,%eax
5135(3): shr $0x3,%ecx
5138(3): REP stosd %rax,rdi(%es,10)
513b(a): mov $0x-4942790177534073029,%rax
5145(3): mov %rdx,(%r8)
5148(4): mov %rax,0x8(%r8)
514c(a): mov $0x4354685564936845355,%rax
5156(4): mov %rax,0x10(%r8)
515a(a): mov $0x-6534734903238641935,%rax
5164(4): mov %rax,0x18(%r8)
5168(a): mov $0x5840696475078001361,%rax
5172(4): mov %rax,0x20(%r8)
5176(a): mov $0x-7276294671716946913,%rax
5180(4): mov %rax,0x28(%r8)
5184(a): mov $0x2270897969802886507,%rax
518e(4): mov %rax,0x30(%r8)
5192(a): mov $0x6620516959819538809,%rax
519c(4): mov %rax,0x38(%r8)
51a0(2): xor %eax,%eax
51a2(2): jmp 0xa(%rip)
51a4(4): nop 0x0(%rax)
51a8(4): mov 0x0(%r8,%rax,8),%rdx
51ac(4): xor 0x0(%rsi,%rax,8),%rdx
51b0(4): mov %rdx,0x0(%r8,%rax,8)
51b4(4): add $0x1,%rax
51b8(4): cmp $0x8,%rax
51bc(2): jnz 0xffffffec(%rip)
51be(3): movzx (%rsi),%eax
51c1(7): mov %rax,0xe8(%r8)
51c8(2): xor %eax,%eax
51ca(1): ret near (%rsp)

"blake2b_init" :
51d0(4): sub $0x58,%rsp
51d4(9): mov $0x28,%rax
51dd(5): mov %rax,0x48(%rsp)
51e2(2): xor %eax,%eax
51e4(4): lea 0xffffffff(%rsi),%rax
51e8(4): cmp $0x3f,%rax
51ec(2): jnbe 0x64(%rip)
51ee(4): pxor %xmm0,%xmm0
51f2(4): mov %sil,(%rsp)
51f6(2): xor %eax,%eax
51f8(3): mov %rsp,%rsi
51fb(9): mov $0x0,0x12(%rsp)
5204(9): mov $0x10100,0x1(%rsp)
520d(7): mov $0x0,0x1a(%rsi)
5214(4): mov %ax,0x1e(%rsi)
5218(9): mov $0x0,0x9(%rsp)
5221(5): mov $0x0,0x11(%rsp)
5226(5): movaps %xmm0,0x20(%rsp)
522b(5): movaps %xmm0,0x30(%rsp)
5230(5): call 0xfffffed0(%rip)
5235(5): mov 0x48(%rsp),%rdx
523a(9): xor $0x28,%rdx
5243(2): jnz 0x14(%rip)
5245(4): add $0x58,%rsp
5249(1): ret near (%rsp)
524a(6): nop 0x0(%rax,%rax,1)
5250(5): mov $0xffffffff,%eax
5255(2): jmp 0xffffffe0(%rip)
5257(5): call 0xffffc689(%rip)

"blake2b_init_key" :
5260(1): push %rbp
5261(1): push %rbx
5262(7): sub $0xd8,%rsp
5269(9): mov $0x28,%rax
5272(8): mov %rax,0xc8(%rsp)
527a(2): xor %eax,%eax
527c(4): lea 0xffffffff(%rsi),%rax
5280(4): cmp $0x3f,%rax
5284(6): jnbe 0xdc(%rip)
528a(4): lea 0xffffffff(%rcx),%rax
528e(3): mov %rcx,%r9
5291(4): cmp $0x3f,%rax
5295(6): jnbe 0xcb(%rip)
529b(3): test %rdx,%rdx
529e(3): mov %rdx,%r10
52a1(6): jz 0xbf(%rip)
52a7(4): pxor %xmm0,%xmm0
52ab(2): xor %eax,%eax
52ad(4): mov %sil,(%rsp)
52b1(3): mov %rsp,%rsi
52b4(9): mov $0x0,0x12(%rsp)
52bd(3): mov %rdi,%rbp
52c0(7): mov $0x0,0x1a(%rsi)
52c7(4): mov %ax,0x1e(%rsi)
52cb(4): mov %cl,0x1(%rsp)
52cf(9): mov $0x101,0x2(%rsp)
52d8(9): mov $0x0,0xa(%rsp)
52e1(5): movaps %xmm0,0x20(%rsp)
52e6(5): movaps %xmm0,0x30(%rsp)
52eb(5): call 0xfffffe15(%rip)
52f0(2): test %eax,%eax
52f2(2): js 0x6e(%rip)
52f4(5): lea 0x40(%rsp),%rbx
52f9(2): xor %eax,%eax
52fb(5): mov $0x10,%ecx
5300(3): mov %r9,%rdx
5303(3): mov %r10,%rsi
5306(3): mov %rbx,%rdi
5309(3): REP stosd %rax,rdi(%es,10)
530c(5): mov $0x80,%ecx
5311(3): mov %rbx,%rdi
5314(5): call 0xffffc6dc(%rip)
5319(5): mov $0x80,%edx
531e(3): mov %rbx,%rsi
5321(3): mov %rbp,%rdi
5324(5): call 0xfffffccc(%rip)
5329(7): mov 0x207ce8(%rip),%rax
5330(5): mov $0x80,%edx
5335(2): xor %esi,%esi
5337(3): mov %rbx,%rdi
533a(2): call %rax
533c(2): xor %eax,%eax
533e(8): mov 0xc8(%rsp),%rdx
5346(9): xor $0x28,%rdx
534f(2): jnz 0x18(%rip)
5351(7): add $0xd8,%rsp
5358(1): pop %rbx
5359(1): pop %rbp
535a(1): ret near (%rsp)
535b(5): nop 0x0(%rax,%rax,1)
5360(5): mov $0xffffffff,%eax
5365(2): jmp 0xffffffd9(%rip)
5367(5): call 0xffffc579(%rip)

"blake2b_update" :
5370(3): test %rdx,%rdx
5373(2): jz 0x15(%rip)
5375(4): sub $0x8,%rsp
5379(5): call 0xfffffc77(%rip)
537e(2): xor %eax,%eax
5380(4): add $0x8,%rsp
5384(1): ret near (%rsp)
5385(3): nop (%rax)
5388(2): xor %eax,%eax
538a(1): ret near (%rsp)

"blake2b_final" :
5390(2): push %r12
5392(1): push %rbp
5393(1): push %rbx
5394(4): pxor %xmm0,%xmm0
5398(4): sub $0x50,%rsp
539c(9): mov $0x28,%rax
53a5(5): mov %rax,0x48(%rsp)
53aa(2): xor %eax,%eax
53ac(3): test %rsi,%rsi
53af(4): movaps %xmm0,(%rsp)
53b3(5): movaps %xmm0,0x10(%rsp)
53b8(5): movaps %xmm0,0x20(%rsp)
53bd(5): movaps %xmm0,0x30(%rsp)
53c2(6): jz 0x133(%rip)
53c8(3): mov %rdi,%rbx
53cb(7): cmp %rdx,0xe8(%rdi)
53d2(6): jnbe 0x123(%rip)
53d8(5): cmp $0x0,0x50(%rdi)
53dd(6): jnz 0x118(%rip)
53e3(7): mov 0xe0(%rdi),%rdi
53ea(2): xor %eax,%eax
53ec(3): mov %rsi,%r12
53ef(3): mov %rdi,%rdx
53f2(4): add 0x40(%rbx),%rdx
53f6(3): setb %al
53f9(4): add %rax,0x48(%rbx)
53fd(7): cmp $0x0,0xf0(%rbx)
5404(4): mov %rdx,0x40(%rbx)
5408(6): jnz 0xe0(%rip)
540e(4): lea 0x60(%rbx),%rbp
5412(5): mov $0x80,%edx
5417(2): xor %esi,%esi
5419(3): sub %rdi,%rdx
541c(8): mov $0xffffffff,0x50(%rbx)
5424(3): add %rbp,%rdi
5427(5): call 0xffffc549(%rip)
542c(3): mov %rbp,%rsi
542f(3): mov %rbx,%rdi
5432(3): mov %rsp,%rbp
5435(5): call 0xffffe4cb(%rip)
543a(4): lea 0x40(%rbp),%rdi
543e(3): mov %rbx,%rcx
5441(3): mov %rbp,%rax
5444(4): nop 0x0(%rax)
5448(3): mov (%rcx),%rdx
544b(4): add $0x8,%rax
544f(4): add $0x8,%rcx
5453(3): mov %rdx,%rsi
5456(3): mov %dl,0xfffffff8(%rax)
5459(4): shr $0x8,%rsi
545d(4): mov %sil,0xfffffff9(%rax)
5461(3): mov %rdx,%rsi
5464(4): shr $0x10,%rsi
5468(4): mov %sil,0xfffffffa(%rax)
546c(3): mov %rdx,%rsi
546f(4): shr $0x18,%rsi
5473(4): mov %sil,0xfffffffb(%rax)
5477(3): mov %rdx,%rsi
547a(4): shr $0x20,%rsi
547e(4): mov %sil,0xfffffffc(%rax)
5482(3): mov %rdx,%rsi
5485(4): shr $0x28,%rsi
5489(4): mov %sil,0xfffffffd(%rax)
548d(3): mov %rdx,%rsi
5490(4): shr $0x38,%rdx
5494(4): shr $0x30,%rsi
5498(3): mov %dl,0xffffffff(%rax)
549b(4): mov %sil,0xfffffffe(%rax)
549f(3): cmp %rdi,%rax
54a2(2): jnz 0xffffffa6(%rip)
54a4(7): mov 0xe8(%rbx),%rdx
54ab(3): mov %rbp,%rsi
54ae(3): mov %r12,%rdi
54b1(5): call 0xffffc55f(%rip)
54b6(7): mov 0x207b5b(%rip),%rax
54bd(5): mov $0x40,%edx
54c2(2): xor %esi,%esi
54c4(3): mov %rbp,%rdi
54c7(2): call %rax
54c9(2): xor %eax,%eax
54cb(5): mov 0x48(%rsp),%rbx
54d0(9): xor $0x28,%rbx
54d9(2): jnz 0x23(%rip)
54db(4): add $0x50,%rsp
54df(1): pop %rbx
54e0(1): pop %rbp
54e1(2): pop %r12
54e3(1): ret near (%rsp)
54e4(4): nop 0x0(%rax)
54e8(8): mov $0xffffffff,0x58(%rbx)
54f0(5): jmp 0xffffff1e(%rip)
54f5(5): mov $0xffffffff,%eax
54fa(2): jmp 0xffffffd1(%rip)
54fc(5): call 0xffffc3e4(%rip)

"blake2b" :
5510(2): push %r14
5512(2): push %r13
5514(3): mov %rdx,%r14
5517(2): push %r12
5519(1): push %rbp
551a(1): push %rbx
551b(7): sub $0x100,%rsp
5522(9): mov $0x28,%rax
552b(8): mov %rax,0xf8(%rsp)
5533(2): xor %eax,%eax
5535(3): test %rdx,%rdx
5538(3): setz %dl
553b(3): test %rcx,%rcx
553e(3): setnz %al
5541(2): test %al,%dl
5543(6): jnz 0x9d(%rip)
5549(3): test %rdi,%rdi
554c(3): mov %rdi,%r13
554f(6): jz 0x91(%rip)
5555(3): test %r8,%r8
5558(3): mov %rsi,%rbx
555b(3): mov %rcx,%rbp
555e(2): jnz 0x7(%rip)
5560(3): test %r9,%r9
5563(2): jnz 0x7d(%rip)
5565(4): lea 0xffffffff(%rbx),%rax
5569(4): cmp $0x3f,%rax
556d(2): jnbe 0x73(%rip)
556f(4): cmp $0x40,%r9
5573(2): jnbe 0x6d(%rip)
5575(3): test %r9,%r9
5578(3): mov %rsp,%r12
557b(2): jnz 0x4d(%rip)
557d(3): mov %rbx,%rsi
5580(3): mov %r12,%rdi
5583(5): call 0xfffffc4d(%rip)
5588(2): test %eax,%eax
558a(2): js 0x56(%rip)
558c(3): test %rbp,%rbp
558f(2): jnz 0x61(%rip)
5591(3): mov %rbx,%rdx
5594(3): mov %r13,%rsi
5597(3): mov %r12,%rdi
559a(5): call 0xfffffdf6(%rip)
559f(2): xor %eax,%eax
55a1(8): mov 0xf8(%rsp),%rcx
55a9(9): xor $0x28,%rcx
55b2(2): jnz 0x4e(%rip)
55b4(7): add $0x100,%rsp
55bb(1): pop %rbx
55bc(1): pop %rbp
55bd(2): pop %r12
55bf(2): pop %r13
55c1(2): pop %r14
55c3(1): ret near (%rsp)
55c4(4): nop 0x0(%rax)
55c8(3): mov %r9,%rcx
55cb(3): mov %r8,%rdx
55ce(3): mov %rbx,%rsi
55d1(3): mov %r12,%rdi
55d4(5): call 0xfffffc8c(%rip)
55d9(2): test %eax,%eax
55db(2): jns 0xffffffb1(%rip)
55dd(3): nop (%rax)
55e0(5): mov $0xffffffff,%eax
55e5(2): jmp 0xffffffbc(%rip)
55e7(9): nop 0x0(%rax,%rax,1)
55f0(3): mov %rbp,%rdx
55f3(3): mov %r14,%rsi
55f6(3): mov %r12,%rdi
55f9(5): call 0xfffff9f7(%rip)
55fe(2): jmp 0xffffff93(%rip)
5600(5): call 0xffffc2e0(%rip)

"blake2b_stream" :
5620(2): push %r15
5622(2): push %r14
5624(3): mov %rdx,%r14
5627(2): push %r13
5629(2): push %r12
562b(1): push %rbp
562c(1): push %rbx
562d(3): mov %rdi,%rbx
5630(5): mov $0x8000,%edi
5635(7): sub $0x118,%rsp
563c(9): mov $0x28,%rax
5645(8): mov %rax,0x108(%rsp)
564d(2): xor %eax,%eax
564f(5): mov %rsi,0x8(%rsp)
5654(5): call 0xffffc3dc(%rip)
5659(3): test %rax,%rax
565c(6): jz 0xdc(%rip)
5662(5): lea 0x10(%rsp),%r13
5667(3): mov %r14,%rsi
566a(6): mov $0x8000,%r12d
5670(3): mov %rax,%rbp
5673(3): mov %r13,%rdi
5676(5): call 0xfffffb5a(%rip)
567b(3): xor %r15d,%r15d
567e(2): jmp 0x13(%rip)
5680(3): test %rax,%rax
5683(3): mov %rbx,%rdi
5686(2): jz 0x4a(%rip)
5688(5): call 0xffffc378(%rip)
568d(2): test %eax,%eax
568f(2): jnz 0x4f(%rip)
5691(5): lea 0x0(%rbp,%r15,1),%rdi
5696(3): mov %r12,%rdx
5699(3): mov %rbx,%rcx
569c(3): sub %r15,%rdx
569f(5): mov $0x1,%esi
56a4(5): call 0xffffc1bc(%rip)
56a9(3): add %rax,%r15
56ac(7): cmp $0x8000,%r15
56b3(2): jnz 0xffffffcd(%rip)
56b5(5): mov $0x8000,%edx
56ba(3): mov %rbp,%rsi
56bd(3): mov %r13,%rdi
56c0(5): call 0xfffffcb0(%rip)
56c5(2): jmp 0xffffffb6(%rip)
56c7(9): nop 0x0(%rax,%rax,1)
56d0(5): call 0xffffc180(%rip)
56d5(2): test %eax,%eax
56d7(5): mov $0xffffffff,%ebx
56dc(2): jnz 0x19(%rip)
56de(3): test %r15,%r15
56e1(2): jnz 0x47(%rip)
56e3(5): mov 0x8(%rsp),%rsi
56e8(3): mov %r14,%rdx
56eb(3): mov %r13,%rdi
56ee(2): xor %ebx,%ebx
56f0(5): call 0xfffffca0(%rip)
56f5(3): mov %rbp,%rdi
56f8(5): call 0xffffc0f8(%rip)
56fd(8): mov 0x108(%rsp),%rcx
5705(9): xor $0x28,%rcx
570e(2): mov %ebx,%eax
5710(2): jnz 0x2f(%rip)
5712(7): add $0x118,%rsp
5719(1): pop %rbx
571a(1): pop %rbp
571b(2): pop %r12
571d(2): pop %r13
571f(2): pop %r14
5721(2): pop %r15
5723(1): ret near (%rsp)
5724(4): nop 0x0(%rax)
5728(3): mov %r15,%rdx
572b(3): mov %rbp,%rsi
572e(3): mov %r13,%rdi
5731(5): call 0xfffffc3f(%rip)
5736(2): jmp 0xffffffad(%rip)
5738(5): mov $0xffffffff,%ebx
573d(2): jmp 0xffffffc0(%rip)
573f(5): call 0xffffc1a1(%rip)

"__argmatch_die" :
5750(5): mov $0x1,%edi
5755(5): jmp 0xffffdd2b(%rip)

"argmatch" :
5760(2): push %r15
5762(2): push %r14
5764(3): mov %rsi,%r15
5767(2): push %r13
5769(2): push %r12
576b(3): mov %rcx,%r13
576e(1): push %rbp
576f(1): push %rbx
5770(3): mov %rdx,%rbp
5773(4): sub $0x28,%rsp
5777(5): mov %rdi,0x8(%rsp)
577c(5): mov %rdx,0x18(%rsp)
5781(5): call 0xffffc14f(%rip)
5786(3): mov (%r15),%r14
5789(8): mov $0xffffffff,(%rsp)
5791(3): test %r14,%r14
5794(6): jz 0xb9(%rip)
579a(3): mov %rax,%r12
579d(5): mov $0x0,0x17(%rsp)
57a2(2): xor %ebx,%ebx
57a4(2): jmp 0x53(%rip)
57a6(a): nop 0x0(%rax,%rax,1)
57b0(5): mov 0x18(%rsp),%rax
57b5(3): test %rax,%rax
57b8(6): jz 0xa8(%rip)
57be(4): mov (%rsp),%rdi
57c2(3): mov %r13,%rdx
57c5(3): mov %rbp,%rsi
57c8(4): imul %r13,%rdi
57cc(3): add %rax,%rdi
57cf(5): call 0xffffc1d1(%rip)
57d4(2): test %eax,%eax
57d6(5): movzx 0x17(%rsp),%eax
57db(5): mov $0x1,%ecx
57e0(3): cmovne %ecx,%eax
57e3(4): mov %al,0x17(%rsp)
57e7(4): add $0x1,%rbx
57eb(3): add %r13,%rbp
57ee(4): mov 0x0(%r15,%rbx,8),%r14
57f2(3): test %r14,%r14
57f5(2): jz 0x43(%rip)
57f7(5): mov 0x8(%rsp),%rsi
57fc(3): mov %r12,%rdx
57ff(3): mov %r14,%rdi
5802(5): call 0xffffc01e(%rip)
5807(2): test %eax,%eax
5809(2): jnz 0xffffffde(%rip)
580b(3): mov %r14,%rdi
580e(5): call 0xffffc0c2(%rip)
5813(3): cmp %r12,%rax
5816(2): jz 0x5a(%rip)
5818(5): cmp $0xffffffff,(%rsp)
581d(2): jnz 0xffffff93(%rip)
581f(4): mov %rbx,(%rsp)
5823(4): add $0x1,%rbx
5827(3): add %r13,%rbp
582a(4): mov 0x0(%r15,%rbx,8),%r14
582e(3): test %r14,%r14
5831(2): jnz 0xffffffc6(%rip)
5833(5): nop 0x0(%rax,%rax,1)
5838(5): cmp $0x0,0x17(%rsp)
583d(7): mov $0xfffffffe,%rax
5844(5): cmove (%rsp),%rax
5849(4): mov %rax,(%rsp)
584d(4): mov (%rsp),%rax
5851(4): add $0x28,%rsp
5855(1): pop %rbx
5856(1): pop %rbp
5857(2): pop %r12
5859(2): pop %r13
585b(2): pop %r14
585d(2): pop %r15
585f(1): ret near (%rsp)
5860(5): mov $0x1,0x17(%rsp)
5865(2): jmp 0xffffff82(%rip)
5867(9): nop 0x0(%rax,%rax,1)
5870(4): mov %rbx,(%rsp)
5874(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
5880(4): cmp $0xffffffff,%rdx
5884(2): push %r12
5886(5): mov $0x5,%edx
588b(1): push %rbp
588c(3): mov %rsi,%r12
588f(1): push %rbx
5890(3): mov %rdi,%rbp
5893(2): jz 0x4d(%rip)
5895(7): lea 0x4634(%rip),%rsi
589c(2): xor %edi,%edi
589e(5): call 0xffffc012(%rip)
58a3(3): mov %rax,%rbx
58a6(3): mov %rbp,%rsi
58a9(5): mov $0x1,%edi
58ae(5): call 0x20d2(%rip)
58b3(3): mov %r12,%rdx
58b6(3): mov %rax,%rbp
58b9(5): mov $0x8,%esi
58be(2): xor %edi,%edi
58c0(5): call 0x1cf0(%rip)
58c5(3): mov %rbp,%r8
58c8(3): mov %rbx,%rdx
58cb(3): mov %rax,%rcx
58ce(1): pop %rbx
58cf(1): pop %rbp
58d0(2): pop %r12
58d2(2): xor %esi,%esi
58d4(2): xor %edi,%edi
58d6(2): xor %eax,%eax
58d8(5): jmp 0xffffc1f8(%rip)
58dd(3): nop (%rax)
58e0(7): lea 0x45ce(%rip),%rsi
58e7(2): xor %edi,%edi
58e9(5): call 0xffffbfc7(%rip)
58ee(3): mov %rax,%rbx
58f1(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
5900(2): push %r15
5902(2): push %r14
5904(3): mov %rdi,%r14
5907(2): push %r13
5909(2): push %r12
590b(2): xor %edi,%edi
590d(1): push %rbp
590e(1): push %rbx
590f(3): mov %rsi,%rbp
5912(7): lea 0x45d4(%rip),%rsi
5919(3): mov %rdx,%r12
591c(5): mov $0x5,%edx
5921(4): sub $0x8,%rsp
5925(7): mov 0x2077b4(%rip),%rbx
592c(5): call 0xffffbf84(%rip)
5931(3): mov %rax,%rdi
5934(3): mov %rbx,%rsi
5937(5): call 0xffffc079(%rip)
593c(3): mov (%r14),%r15
593f(3): test %r15,%r15
5942(6): jz 0x96(%rip)
5948(3): xor %r13d,%r13d
594b(2): xor %ebx,%ebx
594d(2): jmp 0x3b(%rip)
594f(1): nop 
5950(3): mov %r15,%rdi
5953(4): add $0x1,%rbx
5957(3): mov %rbp,%r13
595a(5): call 0x2046(%rip)
595f(7): mov 0x20777a(%rip),%rdi
5966(7): lea 0x4595(%rip),%rdx
596d(3): mov %rax,%rcx
5970(5): mov $0x1,%esi
5975(2): xor %eax,%eax
5977(3): add %r12,%rbp
597a(5): call 0xffffc1d6(%rip)
597f(4): mov 0x0(%r14,%rbx,8),%r15
5983(3): test %r15,%r15
5986(2): jz 0x52(%rip)
5988(3): test %rbx,%rbx
598b(2): jz 0xffffffc5(%rip)
598d(3): mov %r12,%rdx
5990(3): mov %rbp,%rsi
5993(3): mov %r13,%rdi
5996(5): call 0xffffc00a(%rip)
599b(2): test %eax,%eax
599d(2): jnz 0xffffffb3(%rip)
599f(3): mov %r15,%rdi
59a2(4): add $0x1,%rbx
59a6(3): add %r12,%rbp
59a9(5): call 0x1ff7(%rip)
59ae(7): mov 0x20772b(%rip),%rdi
59b5(7): lea 0x454e(%rip),%rdx
59bc(3): mov %rax,%rcx
59bf(5): mov $0x1,%esi
59c4(2): xor %eax,%eax
59c6(5): call 0xffffc18a(%rip)
59cb(4): mov 0x0(%r14,%rbx,8),%r15
59cf(3): test %r15,%r15
59d2(2): jnz 0xffffffb6(%rip)
59d4(4): nop 0x0(%rax)
59d8(7): mov 0x207701(%rip),%rdi
59df(4): mov 0x28(%rdi),%rax
59e3(4): cmp 0x30(%rdi),%rax
59e7(2): jnb 0x21(%rip)
59e9(4): lea 0x1(%rax),%rdx
59ed(4): mov %rdx,0x28(%rdi)
59f1(3): mov $0xa,(%rax)
59f4(4): add $0x8,%rsp
59f8(1): pop %rbx
59f9(1): pop %rbp
59fa(2): pop %r12
59fc(2): pop %r13
59fe(2): pop %r14
5a00(2): pop %r15
5a02(1): ret near (%rsp)
5a03(5): nop 0x0(%rax,%rax,1)
5a08(4): add $0x8,%rsp
5a0c(5): mov $0xa,%esi
5a11(1): pop %rbx
5a12(1): pop %rbp
5a13(2): pop %r12
5a15(2): pop %r13
5a17(2): pop %r14
5a19(2): pop %r15
5a1b(5): jmp 0xffffbf05(%rip)

"__xargmatch_internal" :
5a20(2): push %r15
5a22(2): push %r14
5a24(3): mov %rdi,%r14
5a27(2): push %r13
5a29(2): push %r12
5a2b(3): mov %rsi,%r12
5a2e(1): push %rbp
5a2f(1): push %rbx
5a30(3): mov %rcx,%rbp
5a33(3): mov %rdx,%rbx
5a36(3): mov %r8,%rcx
5a39(3): mov %rbp,%rdx
5a3c(4): sub $0x8,%rsp
5a40(3): mov %rbx,%rsi
5a43(3): mov %r12,%rdi
5a46(3): mov %r8,%r15
5a49(3): mov %r9,%r13
5a4c(5): call 0xfffffd14(%rip)
5a51(3): test %rax,%rax
5a54(2): js 0x11(%rip)
5a56(4): add $0x8,%rsp
5a5a(1): pop %rbx
5a5b(1): pop %rbp
5a5c(2): pop %r12
5a5e(2): pop %r13
5a60(2): pop %r14
5a62(2): pop %r15
5a64(1): ret near (%rsp)
5a65(3): mov %rax,%rdx
5a68(3): mov %r12,%rsi
5a6b(3): mov %r14,%rdi
5a6e(5): call 0xfffffe12(%rip)
5a73(3): mov %r15,%rdx
5a76(3): mov %rbp,%rsi
5a79(3): mov %rbx,%rdi
5a7c(5): call 0xfffffe84(%rip)
5a81(3): call %r13
5a84(7): mov $0xffffffff,%rax
5a8b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
5a90(2): push %r14
5a92(2): push %r13
5a94(2): push %r12
5a96(1): push %rbp
5a97(1): push %rbx
5a98(3): mov (%rsi),%r14
5a9b(3): test %r14,%r14
5a9e(2): jz 0x33(%rip)
5aa0(3): mov %rcx,%r12
5aa3(3): mov %rdi,%r13
5aa6(3): mov %rdx,%rbp
5aa9(4): lea 0x8(%rsi),%rbx
5aad(2): jmp 0x12(%rip)
5aaf(1): nop 
5ab0(3): mov (%rbx),%r14
5ab3(3): add %r12,%rbp
5ab6(4): add $0x8,%rbx
5aba(3): test %r14,%r14
5abd(2): jz 0x14(%rip)
5abf(3): mov %r12,%rdx
5ac2(3): mov %rbp,%rsi
5ac5(3): mov %r13,%rdi
5ac8(5): call 0xffffbed8(%rip)
5acd(2): test %eax,%eax
5acf(2): jnz 0xffffffe1(%rip)
5ad1(1): pop %rbx
5ad2(3): mov %r14,%rax
5ad5(1): pop %rbp
5ad6(2): pop %r12
5ad8(2): pop %r13
5ada(2): pop %r14
5adc(1): ret near (%rsp)

"close_stdout_set_file_name" :
5ae0(7): mov %rdi,0x207641(%rip)
5ae7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5af0(7): mov %dil,0x207629(%rip)
5af7(1): ret near (%rsp)

"close_stdout" :
5b00(1): push %rbp
5b01(1): push %rbx
5b02(4): sub $0x8,%rsp
5b06(7): mov 0x20759b(%rip),%rdi
5b0d(5): call 0x3513(%rip)
5b12(2): test %eax,%eax
5b14(2): jz 0x18(%rip)
5b16(5): call 0xffffbcfa(%rip)
5b1b(7): cmp $0x0,0x2075fe(%rip)
5b22(3): mov %rax,%rbx
5b25(2): jz 0x1e(%rip)
5b27(3): cmp $0x20,(%rax)
5b2a(2): jnz 0x19(%rip)
5b2c(7): mov 0x2075ad(%rip),%rdi
5b33(5): call 0x34ed(%rip)
5b38(2): test %eax,%eax
5b3a(2): jnz 0x48(%rip)
5b3c(4): add $0x8,%rsp
5b40(1): pop %rbx
5b41(1): pop %rbp
5b42(1): ret near (%rsp)
5b43(7): lea 0x43c5(%rip),%rsi
5b4a(2): xor %edi,%edi
5b4c(5): mov $0x5,%edx
5b51(5): call 0xffffbd5f(%rip)
5b56(7): mov 0x2075cb(%rip),%rdi
5b5d(3): mov %rax,%rbp
5b60(3): test %rdi,%rdi
5b63(2): jz 0x2a(%rip)
5b65(5): call 0x1c3b(%rip)
5b6a(2): mov (%rbx),%esi
5b6c(7): lea 0x43a8(%rip),%rdx
5b73(3): mov %rax,%rcx
5b76(3): mov %rbp,%r8
5b79(2): xor %edi,%edi
5b7b(2): xor %eax,%eax
5b7d(5): call 0xffffbf53(%rip)
5b82(6): mov 0x2074a8(%rip),%edi
5b88(5): call 0xffffbca8(%rip)
5b8d(2): mov (%rbx),%esi
5b8f(7): lea 0x4376(%rip),%rdx
5b96(3): mov %rax,%rcx
5b99(2): xor %edi,%edi
5b9b(2): xor %eax,%eax
5b9d(5): call 0xffffbf33(%rip)
5ba2(2): jmp 0xffffffe0(%rip)

"fadvise" :
5bc0(3): test %rdi,%rdi
5bc3(2): jz 0x1d(%rip)
5bc5(1): push %rbx
5bc6(2): mov %esi,%ebx
5bc8(5): call 0xffffbe58(%rip)
5bcd(2): mov %ebx,%ecx
5bcf(2): xor %edx,%edx
5bd1(2): xor %esi,%esi
5bd3(1): pop %rbx
5bd4(2): mov %eax,%edi
5bd6(5): jmp 0xffffbdba(%rip)
5bdb(5): nop 0x0(%rax,%rax,1)
5be0(2): REP ret near (%rsp)

"fopen_safer" :
5bf0(2): push %r12
5bf2(1): push %rbp
5bf3(3): mov %rsi,%rbp
5bf6(1): push %rbx
5bf7(5): call 0xffffbef9(%rip)
5bfc(3): test %rax,%rax
5bff(3): mov %rax,%rbx
5c02(2): jz 0xf(%rip)
5c04(3): mov %rax,%rdi
5c07(5): call 0xffffbe19(%rip)
5c0c(3): cmp $0x2,%eax
5c0f(2): jbe 0x11(%rip)
5c11(3): mov %rbx,%rax
5c14(1): pop %rbx
5c15(1): pop %rbp
5c16(2): pop %r12
5c18(1): ret near (%rsp)
5c19(7): nop 0x0(%rax)
5c20(2): mov %eax,%edi
5c22(5): call 0x1d9e(%rip)
5c27(2): test %eax,%eax
5c29(3): mov %eax,%r12d
5c2c(2): js 0x3c(%rip)
5c2e(3): mov %rbx,%rdi
5c31(5): call 0x2fbf(%rip)
5c36(2): test %eax,%eax
5c38(2): jnz 0x15(%rip)
5c3a(3): mov %rbp,%rsi
5c3d(3): mov %r12d,%edi
5c40(5): call 0xffffbe50(%rip)
5c45(3): test %rax,%rax
5c48(3): mov %rax,%rbx
5c4b(2): jnz 0xffffffc6(%rip)
5c4d(5): call 0xffffbbc3(%rip)
5c52(2): mov (%rax),%ebp
5c54(3): mov %rax,%rbx
5c57(3): mov %r12d,%edi
5c5a(5): call 0xffffbd26(%rip)
5c5f(2): mov %ebp,(%rbx)
5c61(2): xor %ebx,%ebx
5c63(2): jmp 0xffffffae(%rip)
5c65(3): nop (%rax)
5c68(5): call 0xffffbba8(%rip)
5c6d(3): mov (%rax),%r12d
5c70(3): mov %rax,%rbp
5c73(3): mov %rbx,%rdi
5c76(5): call 0x2f7a(%rip)
5c7b(2): xor %ebx,%ebx
5c7d(4): mov %r12d,0x0(%rbp)
5c81(2): jmp 0xffffff90(%rip)

"set_program_name" :
5c90(3): test %rdi,%rdi
5c93(1): push %rbx
5c94(2): jz 0x79(%rip)
5c96(5): mov $0x2f,%esi
5c9b(3): mov %rdi,%rbx
5c9e(5): call 0xffffbc92(%rip)
5ca3(3): test %rax,%rax
5ca6(2): jz 0x57(%rip)
5ca8(4): lea 0x1(%rax),%r8
5cac(3): mov %r8,%rdx
5caf(3): sub %rbx,%rdx
5cb2(4): cmp $0x6,%rdx
5cb6(2): jle 0x47(%rip)
5cb8(4): lea 0xfffffffa(%rax),%rsi
5cbc(7): lea 0x429d(%rip),%rdi
5cc3(5): mov $0x7,%ecx
5cc8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5cca(3): setnbe %dl
5ccd(3): sbb $0x0,%dl
5cd0(2): test %dl,%dl
5cd2(2): jnz 0x2b(%rip)
5cd4(7): lea 0x428d(%rip),%rdi
5cdb(5): mov $0x3,%ecx
5ce0(3): mov %r8,%rsi
5ce3(3): mov %r8,%rbx
5ce6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5ce8(3): setnbe %dl
5ceb(3): sbb $0x0,%dl
5cee(2): test %dl,%dl
5cf0(2): jnz 0xd(%rip)
5cf2(4): lea 0x4(%rax),%rbx
5cf6(7): mov %rbx,0x2073a3(%rip)
5cfd(7): mov %rbx,0x20742c(%rip)
5d04(7): mov %rbx,0x2073bd(%rip)
5d0b(1): pop %rbx
5d0c(1): ret near (%rsp)
5d0d(7): mov 0x2073cc(%rip),%rcx
5d14(7): lea 0x420d(%rip),%rdi
5d1b(5): mov $0x37,%edx
5d20(5): mov $0x1,%esi
5d25(5): call 0xffffbe1b(%rip)
5d2a(5): call 0xffffbad6(%rip)

"gettext_quote.part.1" :
5d30(1): push %rbp
5d31(1): push %rbx
5d32(3): mov %rdi,%rbp
5d35(2): mov %esi,%ebx
5d37(4): sub $0x8,%rsp
5d3b(5): call 0x33c5(%rip)
5d40(3): movzx (%rax),%edx
5d43(3): and $0xdf,%edx
5d46(3): cmp $0x55,%dl
5d49(2): jz 0x77(%rip)
5d4b(3): cmp $0x47,%dl
5d4e(2): jz 0x22(%rip)
5d50(7): lea 0x4224(%rip),%rax
5d57(7): lea 0x421f(%rip),%rdx
5d5e(3): cmp $0x9,%ebx
5d61(4): cmovne %rdx,%rax
5d65(4): add $0x8,%rsp
5d69(1): pop %rbx
5d6a(1): pop %rbp
5d6b(1): ret near (%rsp)
5d6c(4): nop 0x0(%rax)
5d70(4): movzx 0x1(%rax),%edx
5d74(3): and $0xdf,%edx
5d77(3): cmp $0x42,%dl
5d7a(2): jnz 0xffffffd6(%rip)
5d7c(4): cmp $0x31,0x2(%rax)
5d80(2): jnz 0xffffffd0(%rip)
5d82(4): cmp $0x38,0x3(%rax)
5d86(2): jnz 0xffffffca(%rip)
5d88(4): cmp $0x30,0x4(%rax)
5d8c(2): jnz 0xffffffc4(%rip)
5d8e(4): cmp $0x33,0x5(%rax)
5d92(2): jnz 0xffffffbe(%rip)
5d94(4): cmp $0x30,0x6(%rax)
5d98(2): jnz 0xffffffb8(%rip)
5d9a(4): cmp $0x0,0x7(%rax)
5d9e(2): jnz 0xffffffb2(%rip)
5da0(4): cmp $0x60,0x0(%rbp)
5da4(7): lea 0x41c9(%rip),%rax
5dab(7): lea 0x41c6(%rip),%rdx
5db2(4): cmovne %rdx,%rax
5db6(4): add $0x8,%rsp
5dba(1): pop %rbx
5dbb(1): pop %rbp
5dbc(1): ret near (%rsp)
5dbd(3): nop (%rax)
5dc0(4): movzx 0x1(%rax),%edx
5dc4(3): and $0xdf,%edx
5dc7(3): cmp $0x54,%dl
5dca(2): jnz 0xffffff86(%rip)
5dcc(4): movzx 0x2(%rax),%edx
5dd0(3): and $0xdf,%edx
5dd3(3): cmp $0x46,%dl
5dd6(6): jnz 0xffffff7a(%rip)
5ddc(4): cmp $0x2d,0x3(%rax)
5de0(6): jnz 0xffffff70(%rip)
5de6(4): cmp $0x38,0x4(%rax)
5dea(6): jnz 0xffffff66(%rip)
5df0(4): cmp $0x0,0x5(%rax)
5df4(6): jnz 0xffffff5c(%rip)
5dfa(4): cmp $0x60,0x0(%rbp)
5dfe(7): lea 0x4167(%rip),%rax
5e05(7): lea 0x4164(%rip),%rdx
5e0c(4): cmovne %rdx,%rax
5e10(4): add $0x8,%rsp
5e14(1): pop %rbx
5e15(1): pop %rbp
5e16(1): ret near (%rsp)

"quotearg_buffer_restyled" :
5e20(2): push %r15
5e22(2): push %r14
5e24(3): mov %r8d,%r15d
5e27(2): push %r13
5e29(2): push %r12
5e2b(3): mov %rdi,%r14
5e2e(1): push %rbp
5e2f(1): push %rbx
5e30(3): mov %r9d,%ebx
5e33(3): mov %rsi,%r13
5e36(3): mov %rcx,%rbp
5e39(3): and $0x2,%ebx
5e3c(7): sub $0xb8,%rsp
5e43(8): mov 0xf0(%rsp),%rax
5e4b(5): mov %rdx,0x10(%rsp)
5e50(5): mov %r8d,0x8(%rsp)
5e55(5): mov %r9d,0x78(%rsp)
5e5a(5): mov %rax,0x20(%rsp)
5e5f(8): mov 0xf8(%rsp),%rax
5e67(5): mov %rax,0x68(%rsp)
5e6c(8): mov 0x100(%rsp),%rax
5e74(5): mov %rax,0x60(%rsp)
5e79(9): mov $0x28,%rax
5e82(8): mov %rax,0xa8(%rsp)
5e8a(2): xor %eax,%eax
5e8c(5): call 0xffffba34(%rip)
5e91(4): cmp $0xa,%r15d
5e95(5): mov %rax,0x58(%rsp)
5e9a(6): jnbe 0x11b5(%rip)
5ea0(7): lea 0x4139(%rip),%rcx
5ea7(3): mov %r15d,%edx
5eaa(4): movsxd 0x0(%rcx,%rdx,4),%rax
5eae(3): add %rcx,%rax
5eb1(2): jmp %rax
5eb3(5): mov $0x1,0xe(%rsp)
5eb8(5): mov $0x0,0x7c(%rsp)
5ebd(3): xor %r12d,%r12d
5ec0(9): mov $0x0,0x50(%rsp)
5ec9(5): mov $0x1,0xf(%rsp)
5ece(5): mov $0x0,0xd(%rsp)
5ed3(7): lea 0x40a3(%rip),%rax
5eda(9): mov $0x1,0x18(%rsp)
5ee3(3): xor %r15d,%r15d
5ee6(8): mov $0x2,0x8(%rsp)
5eee(5): mov %rax,0x48(%rsp)
5ef3(3): xor %r11d,%r11d
5ef6(3): mov %rbp,%rax
5ef9(3): mov %r12d,%r8d
5efc(3): mov %r11,%rbp
5eff(3): mov %rax,%r11
5f02(6): nop 0x0(%rax,%rax,1)
5f08(3): cmp %rbp,%r11
5f0b(4): setnz %r12b
5f0f(4): cmp $0xffffffff,%r11
5f13(2): jnz 0xf(%rip)
5f15(5): mov 0x10(%rsp),%rax
5f1a(4): cmp $0x0,0x0(%rax,%rbp,1)
5f1e(4): setnz %r12b
5f22(3): test %r12b,%r12b
5f25(6): jz 0x65b(%rip)
5f2b(5): cmp $0x2,0x8(%rsp)
5f30(5): mov 0x10(%rsp),%rdi
5f35(4): lea 0x0(%rdi,%rbp,1),%r9
5f39(3): setnz %al
5f3c(4): and 0xd(%rsp),%al
5f40(3): mov %eax,%r10d
5f43(6): jz 0xad(%rip)
5f49(5): mov 0x18(%rsp),%rax
5f4e(3): test %rax,%rax
5f51(6): jz 0x42f(%rip)
5f57(4): cmp $0xffffffff,%r11
5f5b(5): lea 0x0(%rbp,%rax,1),%rbx
5f60(2): jnz 0x30(%rip)
5f62(4): cmp $0x1,%rax
5f66(2): jbe 0x2a(%rip)
5f68(5): mov %r8b,0x38(%rsp)
5f6d(5): mov %r10b,0x30(%rsp)
5f72(5): mov %r9,0x28(%rsp)
5f77(5): call 0xffffb959(%rip)
5f7c(6): movzx 0x38(%rsp),%r8d
5f82(6): movzx 0x30(%rsp),%r10d
5f88(3): mov %rax,%r11
5f8b(5): mov 0x28(%rsp),%r9
5f90(3): cmp %r11,%rbx
5f93(5): mov %r10b,0x28(%rsp)
5f98(6): jnbe 0x5b8(%rip)
5f9e(5): mov 0x18(%rsp),%rdx
5fa3(5): mov 0x48(%rsp),%rsi
5fa8(3): mov %r9,%rdi
5fab(5): mov %r11,0x40(%rsp)
5fb0(5): mov %r8b,0x38(%rsp)
5fb5(5): mov %r9,0x30(%rsp)
5fba(5): call 0xffffb9e6(%rip)
5fbf(2): test %eax,%eax
5fc1(5): mov 0x30(%rsp),%r9
5fc6(6): movzx 0x38(%rsp),%r8d
5fcc(5): mov 0x40(%rsp),%r11
5fd1(6): jnz 0x57f(%rip)
5fd7(5): cmp $0x0,0xf(%rsp)
5fdc(6): movzx 0x28(%rsp),%r10d
5fe2(6): jnz 0xf83(%rip)
5fe8(8): nop 0x0(%rax,%rax,1)
5ff0(4): movzx (%r9),%ebx
5ff4(3): cmp $0x7e,%bl
5ff7(6): jnbe 0x321(%rip)
5ffd(7): lea 0x4008(%rip),%rcx
6004(3): movzx %bl,%edx
6007(4): movsxd 0x0(%rcx,%rdx,4),%rax
600b(3): add %rcx,%rax
600e(2): jmp %rax
6010(3): xor %r10d,%r10d
6013(4): cmp $0x1,%r11
6017(3): setnz %al
601a(4): cmp $0xffffffff,%r11
601e(2): jnz 0xe(%rip)
6020(5): mov 0x10(%rsp),%rax
6025(4): cmp $0x0,0x1(%rax)
6029(3): setnz %al
602c(5): cmp $0x2,0x8(%rsp)
6031(3): setz %dl
6034(2): test %al,%al
6036(6): jz 0x252(%rip)
603c(3): xor %r12d,%r12d
603f(2): xor %eax,%eax
6041(7): nop 0x0(%rax)
6048(5): cmp $0x1,0xd(%rsp)
604d(6): jnz 0x115(%rip)
6053(2): test %dl,%dl
6055(6): jnz 0x10d(%rip)
605b(5): mov 0x20(%rsp),%rsi
6060(3): test %rsi,%rsi
6063(2): jz 0x16(%rip)
6065(2): mov %ebx,%edx
6067(3): shr $0x5,%dl
606a(3): movzx %dl,%edx
606d(3): mov 0x0(%rsi,%rdx,4),%edx
6070(3): bt %ebx,%edx
6073(6): jb 0x150(%rip)
6079(3): test %r10b,%r10b
607c(6): jnz 0x147(%rip)
6082(3): xor $0x1,%eax
6085(4): add $0x1,%rbp
6089(3): and %r8d,%eax
608c(2): test %al,%al
608e(2): jz 0x22(%rip)
6090(3): cmp %r15,%r13
6093(2): jbe 0x7(%rip)
6095(5): mov $0x27,0x0(%r14,%r15,1)
609a(4): lea 0x1(%r15),%rax
609e(3): cmp %rax,%r13
60a1(2): jbe 0x8(%rip)
60a3(6): mov $0x27,0x1(%r14,%r15,1)
60a9(4): add $0x2,%r15
60ad(3): xor %r8d,%r8d
60b0(3): cmp %r13,%r15
60b3(2): jnb 0x6(%rip)
60b5(4): mov %bl,0x0(%r14,%r15,1)
60b9(5): movzx 0xe(%rsp),%edi
60be(4): add $0x1,%r15
60c2(5): mov $0x0,%eax
60c7(3): test %r12b,%r12b
60ca(3): cmove %eax,%edi
60cd(5): mov %dil,0xe(%rsp)
60d2(5): jmp 0xfffffe36(%rip)
60d7(9): nop 0x0(%rax,%rax,1)
60e0(3): xor %r10d,%r10d
60e3(4): mov 0x8(%rsp),%eax
60e7(3): cmp $0x2,%eax
60ea(6): jz 0x5be(%rip)
60f0(3): cmp $0x5,%eax
60f3(6): jz 0x575(%rip)
60f9(3): cmp $0x2,%eax
60fc(5): mov $0x3f,%ebx
6101(3): setz %dl
6104(3): xor %r12d,%r12d
6107(2): xor %eax,%eax
6109(5): jmp 0xffffff3f(%rip)
610e(2): nop 
6110(3): xor %r10d,%r10d
6113(5): cmp $0x2,0x8(%rsp)
6118(6): jz 0x508(%rip)
611e(5): mov %r12b,0x7c(%rsp)
6123(2): xor %edx,%edx
6125(2): xor %eax,%eax
6127(5): mov $0x27,%ebx
612c(5): jmp 0xffffff1c(%rip)
6131(7): nop 0x0(%rax)
6138(5): mov $0x9,%edx
613d(5): mov $0x74,%ebx
6142(5): cmp $0x2,0x8(%rsp)
6147(3): setz %al
614a(4): and 0xf(%rsp),%al
614e(6): jnz 0x150(%rip)
6154(5): cmp $0x0,0xd(%rsp)
6159(2): jnz 0x67(%rip)
615b(2): mov %edx,%ebx
615d(3): xor %r12d,%r12d
6160(2): xor %eax,%eax
6162(5): cmp $0x0,0xf(%rsp)
6167(6): jnz 0xfffffef4(%rip)
616d(5): jmp 0xffffff0c(%rip)
6172(6): nop 0x0(%rax,%rax,1)
6178(5): mov $0x8,%edx
617d(5): mov $0x62,%ebx
6182(2): jmp 0xffffffd2(%rip)
6184(4): nop 0x0(%rax)
6188(5): cmp $0x2,0x8(%rsp)
618d(6): jz 0x3d3(%rip)
6193(5): cmp $0x0,0xd(%rsp)
6198(6): jz 0x218(%rip)
619e(5): cmp $0x0,0xf(%rsp)
61a3(6): jz 0x20d(%rip)
61a9(6): cmp $0x0,0x18(%rsp)
61af(6): jnz 0x3bc(%rip)
61b5(5): mov $0x5c,%ebx
61ba(6): nop 0x0(%rax,%rax,1)
61c0(3): xor %r12d,%r12d
61c3(5): cmp $0x2,0x8(%rsp)
61c8(3): setz %dl
61cb(5): cmp $0x0,0xf(%rsp)
61d0(2): mov %edx,%eax
61d2(6): jnz 0x856(%rip)
61d8(3): mov %r8d,%eax
61db(3): xor $0x1,%eax
61de(2): and %dl,%al
61e0(2): jz 0x31(%rip)
61e2(3): cmp %r15,%r13
61e5(2): jbe 0x7(%rip)
61e7(5): mov $0x27,0x0(%r14,%r15,1)
61ec(4): lea 0x1(%r15),%rdx
61f0(3): cmp %rdx,%r13
61f3(2): jbe 0x8(%rip)
61f5(6): mov $0x24,0x1(%r14,%r15,1)
61fb(4): lea 0x2(%r15),%rdx
61ff(3): cmp %rdx,%r13
6202(2): jbe 0x8(%rip)
6204(6): mov $0x27,0x2(%r14,%r15,1)
620a(4): add $0x3,%r15
620e(3): mov %eax,%r8d
6211(3): cmp %r15,%r13
6214(2): jbe 0x7(%rip)
6216(5): mov $0x5c,0x0(%r14,%r15,1)
621b(4): add $0x1,%r15
621f(4): add $0x1,%rbp
6223(5): jmp 0xfffffe8d(%rip)
6228(8): nop 0x0(%rax,%rax,1)
6230(5): cmp $0x0,0xd(%rsp)
6235(6): jnz 0x1ce(%rip)
623b(2): xor %edx,%edx
623d(5): test $0x1,0x78(%rsp)
6242(6): jz 0xffffff19(%rip)
6248(4): add $0x1,%rbp
624c(5): jmp 0xfffffcbc(%rip)
6251(7): nop 0x0(%rax)
6258(5): cmp $0x2,0x8(%rsp)
625d(3): setz %dl
6260(2): xor %eax,%eax
6262(5): jmp 0xfffffde6(%rip)
6267(9): nop 0x0(%rax,%rax,1)
6270(5): mov $0x7,%edx
6275(5): mov $0x61,%ebx
627a(5): jmp 0xfffffeda(%rip)
627f(1): nop 
6280(5): cmp $0x2,0x8(%rsp)
6285(3): setz %dl
6288(3): test %rbp,%rbp
628b(6): jnz 0xfffffdb1(%rip)
6291(5): movzx 0xf(%rsp),%eax
6296(2): and %dl,%al
6298(6): jz 0xfffffdb0(%rip)
629e(3): mov %r11,%rbp
62a1(8): mov $0x2,0x8(%rsp)
62a9(5): jmp 0x700(%rip)
62ae(2): nop 
62b0(5): cmp $0x2,0x8(%rsp)
62b5(3): setz %dl
62b8(3): xor %r12d,%r12d
62bb(2): jmp 0xffffffd6(%rip)
62bd(3): nop (%rax)
62c0(5): cmp $0x2,0x8(%rsp)
62c5(5): mov $0x20,%ebx
62ca(3): setz %dl
62cd(2): jmp 0xffffffc4(%rip)
62cf(1): nop 
62d0(5): mov $0xd,%edx
62d5(5): mov $0x72,%ebx
62da(5): jmp 0xfffffe68(%rip)
62df(1): nop 
62e0(5): mov $0xc,%edx
62e5(5): mov $0x66,%ebx
62ea(5): jmp 0xfffffe6a(%rip)
62ef(1): nop 
62f0(5): mov $0xb,%edx
62f5(5): mov $0x76,%ebx
62fa(5): jmp 0xfffffe5a(%rip)
62ff(1): nop 
6300(5): mov $0xa,%edx
6305(5): mov $0x6e,%ebx
630a(5): jmp 0xfffffe38(%rip)
630f(1): nop 
6310(3): xor %r10d,%r10d
6313(5): nop 0x0(%rax,%rax,1)
6318(6): cmp $0x1,0x58(%rsp)
631e(6): jnz 0x3aa(%rip)
6324(5): mov %r11,0x38(%rsp)
6329(5): mov %r8b,0x30(%rsp)
632e(5): mov %r10b,0x28(%rsp)
6333(5): call 0xffffb85d(%rip)
6338(3): mov (%rax),%rcx
633b(3): movzx %bl,%edx
633e(6): movzx 0x28(%rsp),%r10d
6344(6): movzx 0x30(%rsp),%r8d
634a(5): mov 0x38(%rsp),%r11
634f(5): mov $0x1,%edi
6354(4): movzx 0x0(%rcx,%rdx,2),%eax
6358(4): and $0x4000,%ax
635c(4): setnz %r12b
6360(3): setz %al
6363(4): and 0xd(%rsp),%al
6367(2): test %al,%al
6369(6): jnz 0x998(%rip)
636f(5): cmp $0x2,0x8(%rsp)
6374(3): setz %dl
6377(5): jmp 0xfffffcd1(%rip)
637c(4): nop 0x0(%rax)
6380(4): movzx (%r9),%ebx
6384(3): cmp $0x7e,%bl
6387(2): jnbe 0xffffff89(%rip)
6389(7): lea 0x3e78(%rip),%rcx
6390(3): movzx %bl,%edx
6393(4): movsxd 0x0(%rcx,%rdx,4),%rax
6397(3): add %rcx,%rax
639a(2): jmp %rax
639c(4): nop 0x0(%rax)
63a0(3): xor %r10d,%r10d
63a3(5): cmp $0x0,0xd(%rsp)
63a8(6): jnz 0xfffffdf6(%rip)
63ae(2): nop 
63b0(5): mov $0x5c,%edx
63b5(5): mov $0x5c,%ebx
63ba(5): jmp 0xfffffd9a(%rip)
63bf(1): nop 
63c0(5): mov $0xc,%edx
63c5(3): xor %r10d,%r10d
63c8(5): mov $0x66,%ebx
63cd(5): jmp 0xfffffd87(%rip)
63d2(6): nop 0x0(%rax,%rax,1)
63d8(5): mov $0xa,%edx
63dd(3): xor %r10d,%r10d
63e0(5): mov $0x6e,%ebx
63e5(5): jmp 0xfffffd5d(%rip)
63ea(6): nop 0x0(%rax,%rax,1)
63f0(5): mov $0x61,%ebx
63f5(5): jmp 0xfffffdcb(%rip)
63fa(6): nop 0x0(%rax,%rax,1)
6400(3): xor %r10d,%r10d
6403(5): cmp $0x2,0x8(%rsp)
6408(3): setz %dl
640b(5): cmp $0x0,0xf(%rsp)
6410(6): jnz 0xb9a(%rip)
6416(3): mov %r8d,%eax
6419(3): mov %r15,%rcx
641c(3): xor $0x1,%eax
641f(2): and %dl,%al
6421(2): jz 0x2f(%rip)
6423(3): cmp %r15,%r13
6426(2): jbe 0x7(%rip)
6428(5): mov $0x27,0x0(%r14,%r15,1)
642d(4): lea 0x1(%r15),%rcx
6431(3): cmp %rcx,%r13
6434(2): jbe 0x8(%rip)
6436(6): mov $0x24,0x1(%r14,%r15,1)
643c(4): lea 0x2(%r15),%rcx
6440(3): cmp %rcx,%r13
6443(6): jnbe 0x636(%rip)
6449(4): lea 0x3(%r15),%rcx
644d(3): mov %eax,%r8d
6450(3): cmp %rcx,%r13
6453(2): jbe 0x7(%rip)
6455(5): mov $0x5c,0x0(%r14,%rcx,1)
645a(5): cmp $0x2,0x8(%rsp)
645f(4): lea 0x1(%rcx),%r15
6463(6): jz 0x606(%rip)
6469(4): lea 0x1(%rbp),%rax
646d(3): cmp %r11,%rax
6470(2): jnb 0x1b(%rip)
6472(5): mov 0x10(%rsp),%rax
6477(5): movzx 0x1(%rax,%rbp,1),%eax
647c(4): mov %al,0x28(%rsp)
6480(3): sub $0x30,%eax
6483(2): cmp $0x9,%al
6485(6): jbe 0x834(%rip)
648b(3): mov %r12d,%eax
648e(5): mov $0x30,%ebx
6493(3): xor %r12d,%r12d
6496(5): jmp 0xfffffbb2(%rip)
649b(5): nop 0x0(%rax,%rax,1)
64a0(5): cmp $0x2,0x8(%rsp)
64a5(3): mov %r10d,%r12d
64a8(3): setz %dl
64ab(3): xor %r10d,%r10d
64ae(2): xor %eax,%eax
64b0(5): jmp 0xfffffb98(%rip)
64b5(3): nop (%rax)
64b8(5): cmp $0x2,0x8(%rsp)
64bd(3): setz %dl
64c0(3): xor %r10d,%r10d
64c3(5): jmp 0xfffffdc5(%rip)
64c8(8): nop 0x0(%rax,%rax,1)
64d0(5): cmp $0x2,0x8(%rsp)
64d5(3): setz %dl
64d8(3): xor %r10d,%r10d
64db(3): xor %r12d,%r12d
64de(5): jmp 0xfffffdb3(%rip)
64e3(5): nop 0x0(%rax,%rax,1)
64e8(5): cmp $0x2,0x8(%rsp)
64ed(3): mov %r10d,%r12d
64f0(5): mov $0x20,%ebx
64f5(3): setz %dl
64f8(3): xor %r10d,%r10d
64fb(5): jmp 0xfffffd96(%rip)
6500(5): mov $0xd,%edx
6505(3): xor %r10d,%r10d
6508(5): mov $0x72,%ebx
650d(5): jmp 0xfffffc35(%rip)
6512(6): nop 0x0(%rax,%rax,1)
6518(5): mov $0x76,%ebx
651d(5): jmp 0xfffffca3(%rip)
6522(6): nop 0x0(%rax,%rax,1)
6528(5): mov $0x9,%edx
652d(3): xor %r10d,%r10d
6530(5): mov $0x74,%ebx
6535(5): jmp 0xfffffc0d(%rip)
653a(6): nop 0x0(%rax,%rax,1)
6540(5): mov $0x62,%ebx
6545(5): jmp 0xfffffc7b(%rip)
654a(6): nop 0x0(%rax,%rax,1)
6550(3): xor %r10d,%r10d
6553(5): jmp 0xfffffa9d(%rip)
6558(8): nop 0x0(%rax,%rax,1)
6560(5): cmp $0x0,0xf(%rsp)
6565(6): jnz 0x96b(%rip)
656b(4): add $0x1,%rbp
656f(3): mov %r8d,%eax
6572(3): xor %r12d,%r12d
6575(5): mov $0x5c,%ebx
657a(5): jmp 0xfffffb12(%rip)
657f(1): nop 
6580(5): cmp $0x2,0x8(%rsp)
6585(5): movzx 0xf(%rsp),%ebx
658a(3): mov %r8d,%r12d
658d(3): mov %r11,%rbp
6590(3): setz %dl
6593(2): mov %ebx,%eax
6595(3): test %r15,%r15
6598(3): setz %cl
659b(2): and %edx,%eax
659d(2): and %cl,%al
659f(6): jnz 0xa67(%rip)
65a5(2): mov %ebx,%eax
65a7(3): xor $0x1,%eax
65aa(2): and %al,%dl
65ac(6): jz 0x970(%rip)
65b2(5): cmp $0x0,0x7c(%rsp)
65b7(6): jz 0x963(%rip)
65bd(5): cmp $0x0,0xe(%rsp)
65c2(6): jnz 0x9fb(%rip)
65c8(3): test %r13,%r13
65cb(3): setz %al
65ce(6): cmp $0x0,0x50(%rsp)
65d4(3): setnz %dl
65d7(2): and %dl,%al
65d9(6): jz 0xa23(%rip)
65df(5): mov 0x50(%rsp),%r13
65e4(7): lea 0x3992(%rip),%rbx
65eb(4): mov $0x27,(%r14)
65ef(8): mov $0x2,0x8(%rsp)
65f7(6): mov $0x1,%r15d
65fd(9): mov $0x1,0x18(%rsp)
6606(5): mov $0x0,0xf(%rsp)
660b(5): mov %rbx,0x48(%rsp)
6610(4): mov %al,0x7c(%rsp)
6614(5): jmp 0xfffff8df(%rip)
6619(7): nop 0x0(%rax)
6620(5): cmp $0x0,0xf(%rsp)
6625(6): jnz 0x8ab(%rip)
662b(3): test %r13,%r13
662e(6): jz 0x402(%rip)
6634(2): xor %edx,%edx
6636(6): cmp $0x0,0x50(%rsp)
663c(6): jnz 0x3f4(%rip)
6642(5): mov %r13,0x50(%rsp)
6647(4): add $0x3,%r15
664b(2): xor %eax,%eax
664d(5): mov %r12b,0x7c(%rsp)
6652(3): xor %r8d,%r8d
6655(3): mov %rdx,%r13
6658(5): mov $0x27,%ebx
665d(5): jmp 0xfffffa1c(%rip)
6662(6): nop 0x0(%rax,%rax,1)
6668(5): test $0x4,0x78(%rsp)
666d(2): jz 0x23(%rip)
666f(4): lea 0x2(%rbp),%rcx
6673(3): cmp %r11,%rcx
6676(2): jnb 0x1a(%rip)
6678(5): mov 0x10(%rsp),%rax
667d(5): cmp $0x3f,0x1(%rax,%rbp,1)
6682(6): jz 0x790(%rip)
6688(8): nop 0x0(%rax,%rax,1)
6690(2): xor %edx,%edx
6692(3): xor %r12d,%r12d
6695(2): xor %eax,%eax
6697(5): mov $0x3f,%ebx
669c(5): jmp 0xfffff9ac(%rip)
66a1(7): nop 0x0(%rax)
66a8(5): cmp $0x0,0xf(%rsp)
66ad(6): jnz 0x823(%rip)
66b3(3): xor %r12d,%r12d
66b6(2): xor %eax,%eax
66b8(5): mov $0x3f,%ebx
66bd(5): jmp 0xfffff9bc(%rip)
66c2(6): nop 0x0(%rax,%rax,1)
66c8(8): lea 0xa0(%rsp),%rax
66d0(4): cmp $0xffffffff,%r11
66d4(c): mov $0x0,0xa0(%rsp)
66e0(5): mov %rax,0x28(%rsp)
66e5(2): jnz 0x2f(%rip)
66e7(5): mov 0x10(%rsp),%rdi
66ec(5): mov %r8b,0x40(%rsp)
66f1(5): mov %r10b,0x38(%rsp)
66f6(5): mov %r9,0x30(%rsp)
66fb(5): call 0xffffb1d5(%rip)
6700(6): movzx 0x40(%rsp),%r8d
6706(6): movzx 0x38(%rsp),%r10d
670c(3): mov %rax,%r11
670f(5): mov 0x30(%rsp),%r9
6714(8): lea 0x9c(%rsp),%rax
671c(2): xor %ecx,%ecx
671e(4): mov %bl,0x7e(%rsp)
6722(5): mov %r8b,0x7d(%rsp)
6727(3): mov %rcx,%rbx
672a(8): mov %r9,0x88(%rsp)
6732(5): mov %rax,0x38(%rsp)
6737(5): mov %r10b,0x7f(%rsp)
673c(8): mov %r15,0x80(%rsp)
6744(5): mov %r14,0x40(%rsp)
6749(5): mov %r13,0x70(%rsp)
674e(5): mov %r11,0x30(%rsp)
6753(5): mov 0x10(%rsp),%rax
6758(5): lea 0x0(%rbp,%rbx,1),%r14
675d(5): mov 0x30(%rsp),%rdx
6762(5): mov 0x28(%rsp),%rcx
6767(5): mov 0x38(%rsp),%rdi
676c(4): lea 0x0(%rax,%r14,1),%r13
6770(3): sub %r14,%rdx
6773(3): mov %r13,%rsi
6776(5): call 0x281a(%rip)
677b(3): test %rax,%rax
677e(3): mov %rax,%r15
6781(2): jz 0x50(%rip)
6783(4): cmp $0xffffffff,%rax
6787(6): jz 0x61e(%rip)
678d(4): cmp $0xfffffffe,%rax
6791(6): jz 0x5a0(%rip)
6797(5): cmp $0x2,0x8(%rsp)
679c(3): setz %al
679f(4): and 0xf(%rsp),%al
67a3(6): jnz 0x19d(%rip)
67a9(7): mov 0x9c(%rsp),%edi
67b0(5): call 0xffffb3c0(%rip)
67b5(5): mov 0x28(%rsp),%rdi
67ba(2): test %eax,%eax
67bc(5): mov $0x0,%eax
67c1(4): cmove %eax,%r12d
67c5(3): add %r15,%rbx
67c8(5): call 0xffffb398(%rip)
67cd(2): test %eax,%eax
67cf(2): jz 0xffffff84(%rip)
67d1(3): mov %r12d,%edx
67d4(3): mov %rbx,%rdi
67d7(6): movzx 0x7d(%rsp),%r8d
67dd(3): xor $0x1,%edx
67e0(5): movzx 0x7e(%rsp),%ebx
67e5(6): movzx 0x7f(%rsp),%r10d
67eb(4): and 0xd(%rsp),%dl
67ef(8): mov 0x80(%rsp),%r15
67f7(5): mov 0x40(%rsp),%r14
67fc(5): mov 0x70(%rsp),%r13
6801(5): mov 0x30(%rsp),%r11
6806(4): cmp $0x1,%rdi
680a(6): jbe 0x601(%rip)
6810(3): mov %rdi,%rcx
6813(2): xor %esi,%esi
6815(6): movzx 0xf(%rsp),%r9d
681b(3): add %rbp,%rcx
681e(5): mov 0x10(%rsp),%rdi
6823(5): jmp 0xbb(%rip)
6828(8): nop 0x0(%rax,%rax,1)
6830(5): cmp $0x2,0x8(%rsp)
6835(3): setz %al
6838(3): test %r9b,%r9b
683b(6): jnz 0x4b5(%rip)
6841(3): mov %r8d,%esi
6844(3): xor $0x1,%esi
6847(3): and %sil,%al
684a(2): jz 0x31(%rip)
684c(3): cmp %r15,%r13
684f(2): jbe 0x7(%rip)
6851(5): mov $0x27,0x0(%r14,%r15,1)
6856(4): lea 0x1(%r15),%rsi
685a(3): cmp %rsi,%r13
685d(2): jbe 0x8(%rip)
685f(6): mov $0x24,0x1(%r14,%r15,1)
6865(4): lea 0x2(%r15),%rsi
6869(3): cmp %rsi,%r13
686c(2): jbe 0x8(%rip)
686e(6): mov $0x27,0x2(%r14,%r15,1)
6874(4): add $0x3,%r15
6878(3): mov %eax,%r8d
687b(3): cmp %r15,%r13
687e(2): jbe 0x7(%rip)
6880(5): mov $0x5c,0x0(%r14,%r15,1)
6885(4): lea 0x1(%r15),%rax
6889(3): cmp %rax,%r13
688c(2): jbe 0xf(%rip)
688e(2): mov %ebx,%eax
6890(3): shr $0x6,%al
6893(3): add $0x30,%eax
6896(5): mov %al,0x1(%r14,%r15,1)
689b(4): lea 0x2(%r15),%rax
689f(3): cmp %rax,%r13
68a2(2): jbe 0x12(%rip)
68a4(2): mov %ebx,%eax
68a6(3): shr $0x3,%al
68a9(3): and $0x7,%eax
68ac(3): add $0x30,%eax
68af(5): mov %al,0x2(%r14,%r15,1)
68b4(3): and $0x7,%ebx
68b7(4): add $0x1,%rbp
68bb(4): add $0x3,%r15
68bf(3): add $0x30,%ebx
68c2(3): cmp %rcx,%rbp
68c5(6): jnb 0xfffff7eb(%rip)
68cb(2): mov %edx,%esi
68cd(3): cmp %r15,%r13
68d0(2): jbe 0x6(%rip)
68d2(4): mov %bl,0x0(%r14,%r15,1)
68d6(4): movzx 0x0(%rdi,%rbp,1),%ebx
68da(4): add $0x1,%r15
68de(2): test %dl,%dl
68e0(6): jnz 0xffffff50(%rip)
68e6(2): mov %esi,%eax
68e8(3): xor $0x1,%eax
68eb(3): and %r8d,%eax
68ee(3): test %r10b,%r10b
68f1(2): jz 0x10(%rip)
68f3(3): cmp %r15,%r13
68f6(2): jbe 0x7(%rip)
68f8(5): mov $0x5c,0x0(%r14,%r15,1)
68fd(4): add $0x1,%r15
6901(4): add $0x1,%rbp
6905(3): cmp %rcx,%rbp
6908(6): jnb 0xfffff784(%rip)
690e(2): test %al,%al
6910(6): jz 0x3fe(%rip)
6916(3): cmp %r15,%r13
6919(2): jbe 0x7(%rip)
691b(5): mov $0x27,0x0(%r14,%r15,1)
6920(4): lea 0x1(%r15),%rax
6924(3): cmp %rax,%r13
6927(2): jbe 0x8(%rip)
6929(6): mov $0x27,0x1(%r14,%r15,1)
692f(4): add $0x2,%r15
6933(3): xor %r10d,%r10d
6936(3): xor %r8d,%r8d
6939(2): jmp 0xffffff94(%rip)
693b(5): nop 0x0(%rax,%rax,1)
6940(4): cmp $0x1,%r15
6944(6): jz 0xfffffe65(%rip)
694a(5): mov 0x10(%rsp),%rdi
694f(4): lea 0x0(%rdi,%r15,1),%rcx
6953(5): lea 0x1(%rdi,%r14,1),%rdx
6958(4): lea 0x0(%rcx,%r14,1),%r8
695c(2): jmp 0x11(%rip)
695e(2): nop 
6960(4): add $0x1,%rdx
6964(3): cmp %rdx,%r8
6967(6): jz 0xfffffe42(%rip)
696d(3): movzx (%rdx),%ecx
6970(3): sub $0x5b,%ecx
6973(3): cmp $0x21,%cl
6976(2): jnbe 0xffffffea(%rip)
6978(5): mov $0x1,%esi
697d(3): shl/sal %cl,%rsi
6980(3): mov %rsi,%rcx
6983(a): mov $0x8589934635,%rsi
698d(3): test %rsi,%rcx
6990(2): jz 0xffffffd0(%rip)
6992(5): mov 0x40(%rsp),%r14
6997(5): mov 0x70(%rsp),%r13
699c(5): mov 0x30(%rsp),%rbp
69a1(8): mov $0x2,0x8(%rsp)
69a9(5): cmp $0x0,0xd(%rsp)
69ae(2): jz 0x12(%rip)
69b0(2): test %al,%al
69b2(5): mov $0x4,%eax
69b7(5): cmove 0x8(%rsp),%eax
69bc(4): mov %eax,0x8(%rsp)
69c0(4): sub $0x8,%rsp
69c4(3): mov %rbp,%rcx
69c7(3): mov %r13,%rsi
69ca(4): push 0x68(%rsp)
69ce(4): push 0x78(%rsp)
69d2(3): mov %r14,%rdi
69d5(2): push $0x0
69d7(8): mov 0x98(%rsp),%r9d
69df(5): mov 0x28(%rsp),%r8d
69e4(5): mov 0x30(%rsp),%rdx
69e9(4): and $0xfd,%r9d
69ed(5): call 0xfffff433(%rip)
69f2(4): add $0x20,%rsp
69f6(3): mov %rax,%r15
69f9(8): mov 0xa8(%rsp),%rbx
6a01(9): xor $0x28,%rbx
6a0a(3): mov %r15,%rax
6a0d(6): jnz 0x606(%rip)
6a13(7): add $0xb8,%rsp
6a1a(1): pop %rbx
6a1b(1): pop %rbp
6a1c(2): pop %r12
6a1e(2): pop %r13
6a20(2): pop %r14
6a22(2): pop %r15
6a24(1): ret near (%rsp)
6a25(3): nop (%rax)
6a28(3): mov %r11,%rbp
6a2b(5): jmp 0xffffff7e(%rip)
6a30(3): cmp %r15,%r13
6a33(2): jbe 0x7(%rip)
6a35(5): mov $0x27,0x0(%r14,%r15,1)
6a3a(4): lea 0x1(%r15),%rax
6a3e(3): cmp %rax,%r13
6a41(2): jbe 0x8(%rip)
6a43(6): mov $0x5c,0x1(%r14,%r15,1)
6a49(4): lea 0x2(%r15),%rax
6a4d(3): cmp %rax,%r13
6a50(6): jbe 0x5f2(%rip)
6a56(3): mov %r13,%rdx
6a59(6): mov $0x27,0x2(%r14,%r15,1)
6a5f(5): mov 0x50(%rsp),%r13
6a64(5): jmp 0xfffffbde(%rip)
6a69(3): mov %r12d,%eax
6a6c(5): mov $0x30,%ebx
6a71(3): xor %r12d,%r12d
6a74(5): jmp 0xfffff605(%rip)
6a79(6): mov $0x27,0x2(%r14,%r15,1)
6a7f(5): jmp 0xfffff9ca(%rip)
6a84(2): test %ebx,%ebx
6a86(6): jnz 0xfffff42d(%rip)
6a8c(5): mov $0x1,0xd(%rsp)
6a91(3): test %r13,%r13
6a94(6): jnz 0x596(%rip)
6a9a(7): lea 0x34dc(%rip),%rax
6aa1(9): mov $0x0,0x50(%rsp)
6aaa(5): mov $0x1,0xe(%rsp)
6aaf(5): mov $0x0,0x7c(%rsp)
6ab4(3): xor %r12d,%r12d
6ab7(5): mov $0x0,0xf(%rsp)
6abc(9): mov $0x1,0x18(%rsp)
6ac5(5): mov %rax,0x48(%rsp)
6aca(6): mov $0x1,%r15d
6ad0(8): mov $0x2,0x8(%rsp)
6ad8(5): jmp 0xfffff41b(%rip)
6add(3): nop (%rax)
6ae0(2): test %ebx,%ebx
6ae2(6): jnz 0x3fb(%rip)
6ae8(3): test %r13,%r13
6aeb(6): jz 0x22b(%rip)
6af1(4): mov $0x22,(%r14)
6af5(5): mov $0x1,0xe(%rsp)
6afa(3): xor %r12d,%r12d
6afd(5): mov $0x0,0x7c(%rsp)
6b02(9): mov $0x0,0x50(%rsp)
6b0b(7): lea 0x3469(%rip),%rax
6b12(5): mov $0x0,0xf(%rsp)
6b17(5): mov $0x1,0xd(%rsp)
6b1c(9): mov $0x1,0x18(%rsp)
6b25(6): mov $0x1,%r15d
6b2b(5): mov %rax,0x48(%rsp)
6b30(5): jmp 0xfffff3c3(%rip)
6b35(7): lea 0x343f(%rip),%rax
6b3c(5): mov $0x1,0xe(%rsp)
6b41(5): mov $0x0,0x7c(%rsp)
6b46(3): xor %r12d,%r12d
6b49(9): mov $0x0,0x50(%rsp)
6b52(5): mov $0x1,0xf(%rsp)
6b57(5): mov $0x1,0xd(%rsp)
6b5c(9): mov $0x1,0x18(%rsp)
6b65(3): xor %r15d,%r15d
6b68(5): mov %rax,0x48(%rsp)
6b6d(8): mov $0x5,0x8(%rsp)
6b75(5): jmp 0xfffff37e(%rip)
6b7a(5): mov $0x1,0xe(%rsp)
6b7f(5): mov $0x0,0x7c(%rsp)
6b84(3): xor %r12d,%r12d
6b87(9): mov $0x0,0x50(%rsp)
6b90(5): mov $0x0,0xf(%rsp)
6b95(3): xor %r15d,%r15d
6b98(5): mov $0x1,0xd(%rsp)
6b9d(9): mov $0x0,0x18(%rsp)
6ba6(9): mov $0x0,0x48(%rsp)
6baf(5): jmp 0xfffff344(%rip)
6bb4(5): cmp $0xa,0x8(%rsp)
6bb9(2): jz 0x58(%rip)
6bbb(7): lea 0x33bd(%rip),%rsi
6bc2(2): xor %edi,%edi
6bc4(5): mov $0x5,%edx
6bc9(5): call 0xfffface7(%rip)
6bce(3): mov %rax,%rcx
6bd1(5): mov %rax,0x68(%rsp)
6bd6(7): lea 0x33a2(%rip),%rax
6bdd(3): cmp %rax,%rcx
6be0(6): jz 0x39e(%rip)
6be6(7): lea 0x3390(%rip),%rsi
6bed(2): xor %edi,%edi
6bef(5): mov $0x5,%edx
6bf4(5): call 0xffffacbc(%rip)
6bf9(3): mov %rax,%rcx
6bfc(5): mov %rax,0x60(%rsp)
6c01(7): lea 0x3375(%rip),%rax
6c08(3): cmp %rax,%rcx
6c0b(6): jz 0x389(%rip)
6c11(3): xor %r15d,%r15d
6c14(2): test %ebx,%ebx
6c16(6): jz 0x1c7(%rip)
6c1c(2): test %ebx,%ebx
6c1e(5): mov 0x60(%rsp),%rbx
6c23(5): setnz 0xf(%rsp)
6c28(3): xor %r12d,%r12d
6c2b(3): mov %rbx,%rdi
6c2e(5): call 0xffffaca2(%rip)
6c33(5): mov %rbx,0x48(%rsp)
6c38(5): mov %rax,0x18(%rsp)
6c3d(5): mov $0x1,0xe(%rsp)
6c42(5): mov $0x0,0x7c(%rsp)
6c47(9): mov $0x0,0x50(%rsp)
6c50(5): mov $0x1,0xd(%rsp)
6c55(5): jmp 0xfffff29e(%rip)
6c5a(5): mov $0x1,0xe(%rsp)
6c5f(5): mov $0x0,0x7c(%rsp)
6c64(3): xor %r12d,%r12d
6c67(9): mov $0x0,0x50(%rsp)
6c70(5): mov $0x0,0xf(%rsp)
6c75(3): xor %r15d,%r15d
6c78(5): mov $0x0,0xd(%rsp)
6c7d(9): mov $0x0,0x18(%rsp)
6c86(9): mov $0x0,0x48(%rsp)
6c8f(5): jmp 0xfffff264(%rip)
6c94(5): mov $0x1,0xe(%rsp)
6c99(5): mov $0x0,0x7c(%rsp)
6c9e(3): xor %r12d,%r12d
6ca1(9): mov $0x0,0x50(%rsp)
6caa(5): mov $0x1,0xf(%rsp)
6caf(5): mov $0x1,0xd(%rsp)
6cb4(5): jmp 0xfffff21f(%rip)
6cb9(3): cmp %r15,%r13
6cbc(2): jbe 0x7(%rip)
6cbe(5): mov $0x30,0x0(%r14,%r15,1)
6cc3(4): lea 0x2(%rcx),%rax
6cc7(3): cmp %rax,%r13
6cca(2): jbe 0x8(%rip)
6ccc(6): mov $0x30,0x2(%r14,%rcx,1)
6cd2(3): mov %r12d,%eax
6cd5(4): lea 0x3(%rcx),%r15
6cd9(3): xor %r12d,%r12d
6cdc(5): mov $0x30,%ebx
6ce1(5): jmp 0xfffff367(%rip)
6ce6(a): nop 0x0(%rax,%rax,1)
6cf0(5): movzx 0xf(%rsp),%ebx
6cf5(3): mov %r11,%rbp
6cf8(4): mov %bl,0xd(%rsp)
6cfc(5): jmp 0xfffffcad(%rip)
6d01(5): movzx 0xd(%rsp),%edx
6d06(3): xor %r12d,%r12d
6d09(5): jmp 0xfffffb07(%rip)
6d0e(3): xor %r10d,%r10d
6d11(5): jmp 0xfffffbbc(%rip)
6d16(9): mov $0x0,0x50(%rsp)
6d1f(5): mov $0x1,0xe(%rsp)
6d24(3): xor %r12d,%r12d
6d27(5): mov $0x0,0x7c(%rsp)
6d2c(5): jmp 0xfffffddf(%rip)
6d31(5): mov 0x30(%rsp),%r11
6d36(3): mov %r14,%rsi
6d39(3): mov %r13,%rcx
6d3c(3): mov %rbx,%rax
6d3f(3): mov %rbx,%rdi
6d42(6): movzx 0x7d(%rsp),%r8d
6d48(5): movzx 0x7e(%rsp),%ebx
6d4d(8): mov 0x88(%rsp),%r9
6d55(3): cmp %r11,%rsi
6d58(6): movzx 0x7f(%rsp),%r10d
6d5e(8): mov 0x80(%rsp),%r15
6d66(5): mov 0x40(%rsp),%r14
6d6b(5): mov 0x70(%rsp),%r13
6d70(2): jnb 0x28(%rip)
6d72(3): cmp $0x0,(%rcx)
6d75(2): jnz 0x12(%rip)
6d77(2): jmp 0x21(%rip)
6d79(7): nop 0x0(%rax)
6d80(5): cmp $0x0,0x0(%r9,%rax,1)
6d85(2): jz 0x10(%rip)
6d87(4): add $0x1,%rax
6d8b(5): lea 0x0(%rbp,%rax,1),%rdx
6d90(3): cmp %rdx,%r11
6d93(2): jnbe 0xffffffed(%rip)
6d95(3): mov %rax,%rdi
6d98(5): movzx 0xd(%rsp),%edx
6d9d(3): xor %r12d,%r12d
6da0(5): jmp 0xfffffa66(%rip)
6da5(3): mov %rbx,%rdi
6da8(6): movzx 0x7d(%rsp),%r8d
6dae(5): movzx 0x7e(%rsp),%ebx
6db3(6): movzx 0x7f(%rsp),%r10d
6db9(8): mov 0x80(%rsp),%r15
6dc1(3): xor %r12d,%r12d
6dc4(5): mov 0x40(%rsp),%r14
6dc9(5): mov 0x70(%rsp),%r13
6dce(5): mov 0x30(%rsp),%r11
6dd3(5): movzx 0xd(%rsp),%edx
6dd8(5): jmp 0xfffffa2e(%rip)
6ddd(5): mov 0x68(%rsp),%rdx
6de2(3): movzx (%rdx),%eax
6de5(2): test %al,%al
6de7(6): jz 0xfffffe35(%rip)
6ded(3): nop (%rax)
6df0(3): cmp %r15,%r13
6df3(2): jbe 0x6(%rip)
6df5(4): mov %al,0x0(%r14,%r15,1)
6df9(4): add $0x1,%r15
6dfd(5): movzx 0x0(%rdx,%r15,1),%eax
6e02(2): test %al,%al
6e04(2): jnz 0xffffffec(%rip)
6e06(5): jmp 0xfffffe16(%rip)
6e0b(2): mov %edx,%eax
6e0d(5): jmp 0xfffff55a(%rip)
6e12(4): movzx 0x0(%rax,%rcx,1),%ebx
6e16(3): cmp $0x3e,%bl
6e19(6): jnbe 0xfffff877(%rip)
6e1f(a): mov $0x8070630310989004800,%rax
6e29(4): bt %rbx,%rax
6e2d(6): jnb 0xfffff863(%rip)
6e33(5): cmp $0x0,0xf(%rsp)
6e38(6): jnz 0x1ea(%rip)
6e3e(3): cmp %r15,%r13
6e41(2): jbe 0x7(%rip)
6e43(5): mov $0x3f,0x0(%r14,%r15,1)
6e48(4): lea 0x1(%r15),%rax
6e4c(3): cmp %rax,%r13
6e4f(2): jbe 0x8(%rip)
6e51(6): mov $0x22,0x1(%r14,%r15,1)
6e57(4): lea 0x2(%r15),%rax
6e5b(3): cmp %rax,%r13
6e5e(2): jbe 0x8(%rip)
6e60(6): mov $0x22,0x2(%r14,%r15,1)
6e66(4): lea 0x3(%r15),%rax
6e6a(3): cmp %rax,%r13
6e6d(2): jbe 0x8(%rip)
6e6f(6): mov $0x3f,0x3(%r14,%r15,1)
6e75(4): add $0x4,%r15
6e79(2): xor %edx,%edx
6e7b(3): xor %r12d,%r12d
6e7e(2): xor %eax,%eax
6e80(3): mov %rcx,%rbp
6e83(5): jmp 0xfffff1c5(%rip)
6e88(2): test %ebx,%ebx
6e8a(6): jz 0x18e(%rip)
6e90(7): lea 0x30e6(%rip),%rax
6e97(5): mov $0x1,0xe(%rsp)
6e9c(5): mov $0x0,0x7c(%rsp)
6ea1(3): xor %r12d,%r12d
6ea4(9): mov $0x0,0x50(%rsp)
6ead(5): mov $0x1,0xf(%rsp)
6eb2(5): mov $0x0,0xd(%rsp)
6eb7(9): mov $0x1,0x18(%rsp)
6ec0(3): xor %r15d,%r15d
6ec3(5): mov %rax,0x48(%rsp)
6ec8(5): jmp 0xfffff02b(%rip)
6ecd(3): nop (%rax)
6ed0(3): mov %r11,%rbp
6ed3(5): movzx 0xf(%rsp),%eax
6ed8(5): jmp 0xfffffad1(%rip)
6edd(7): lea 0x3097(%rip),%rax
6ee4(5): mov $0x1,0xe(%rsp)
6ee9(5): mov $0x0,0x7c(%rsp)
6eee(3): xor %r12d,%r12d
6ef1(9): mov $0x0,0x50(%rsp)
6efa(5): mov $0x1,0xf(%rsp)
6eff(5): mov $0x1,0xd(%rsp)
6f04(9): mov $0x1,0x18(%rsp)
6f0d(3): xor %r15d,%r15d
6f10(5): mov %rax,0x48(%rsp)
6f15(5): jmp 0xffffefde(%rip)
6f1a(2): mov %edx,%eax
6f1c(5): mov 0x48(%rsp),%rbx
6f21(3): test %rbx,%rbx
6f24(2): jz 0x2e(%rip)
6f26(2): test %al,%al
6f28(2): jz 0x2a(%rip)
6f2a(3): movzx (%rbx),%ecx
6f2d(3): mov %rbx,%rax
6f30(2): test %cl,%cl
6f32(2): jz 0x20(%rip)
6f34(3): mov %r15,%rdx
6f37(3): sub %r15,%rax
6f3a(3): cmp %rdx,%r13
6f3d(2): jbe 0x6(%rip)
6f3f(4): mov %cl,0x0(%r14,%rdx,1)
6f43(4): add $0x1,%rdx
6f47(4): movzx 0x0(%rax,%rdx,1),%ecx
6f4b(2): test %cl,%cl
6f4d(2): jnz 0xffffffed(%rip)
6f4f(3): mov %rdx,%r15
6f52(3): cmp %r15,%r13
6f55(6): jbe 0xfffffaa4(%rip)
6f5b(5): mov $0x0,0x0(%r14,%r15,1)
6f60(5): jmp 0xfffffa99(%rip)
6f65(5): cmp $0x2,0x8(%rsp)
6f6a(5): movzx 0xf(%rsp),%ebx
6f6f(3): mov %r11,%rbp
6f72(3): setz %al
6f75(4): mov %bl,0xd(%rsp)
6f79(5): jmp 0xfffffa30(%rip)
6f7e(4): mov 0x8(%rsp),%esi
6f82(3): mov %rcx,%rdi
6f85(5): call 0xffffedab(%rip)
6f8a(5): mov %rax,0x68(%rsp)
6f8f(5): jmp 0xfffffc57(%rip)
6f94(4): mov 0x8(%rsp),%esi
6f98(3): mov %rcx,%rdi
6f9b(5): call 0xffffed95(%rip)
6fa0(5): mov %rax,0x60(%rsp)
6fa5(5): jmp 0xfffffc6c(%rip)
6faa(5): movzx 0xf(%rsp),%ebx
6faf(3): mov %r11,%rbp
6fb2(2): mov %edx,%eax
6fb4(4): mov %bl,0xd(%rsp)
6fb8(5): jmp 0xfffff9f1(%rip)
6fbd(4): sub $0x8,%rsp
6fc1(6): mov $0x5,%r8d
6fc7(3): mov %r11,%rcx
6fca(4): push 0x68(%rsp)
6fce(4): push 0x78(%rsp)
6fd2(3): mov %r14,%rdi
6fd5(4): push 0x38(%rsp)
6fd9(8): mov 0x98(%rsp),%r9d
6fe1(5): mov 0x30(%rsp),%rdx
6fe6(5): mov 0x70(%rsp),%rsi
6feb(5): call 0xffffee35(%rip)
6ff0(4): add $0x20,%rsp
6ff4(3): mov %rax,%r15
6ff7(5): jmp 0xfffffa02(%rip)
6ffc(5): movzx 0x7c(%rsp),%eax
7001(5): jmp 0xffffff1b(%rip)
7006(8): mov $0x2,0x8(%rsp)
700e(5): jmp 0xfffff99b(%rip)
7013(5): call 0xffffa8cd(%rip)
7018(5): mov $0x0,0xd(%rsp)
701d(5): jmp 0xfffffa74(%rip)
7022(3): mov %r11,%rbp
7025(5): jmp 0xfffff99b(%rip)
702a(5): mov $0x1,0xe(%rsp)
702f(2): xor %eax,%eax
7031(3): xor %r12d,%r12d
7034(9): mov $0x0,0x50(%rsp)
703d(5): jmp 0xfffff5a7(%rip)
7042(3): mov %r13,%rdx
7045(5): mov 0x50(%rsp),%r13
704a(5): jmp 0xfffff5f8(%rip)
704f(5): call 0xffffa7b1(%rip)

"quotearg_n_options" :
7060(2): push %r15
7062(2): push %r14
7064(3): movsxd %edi,%r15
7067(2): push %r13
7069(2): push %r12
706b(3): mov %rdx,%r14
706e(1): push %rbp
706f(1): push %rbx
7070(3): mov %rcx,%rbp
7073(4): sub $0x28,%rsp
7077(5): mov %rsi,0x8(%rsp)
707c(5): call 0xffffa794(%rip)
7081(3): mov %rax,%r13
7084(2): mov (%rax),%eax
7086(3): test %r15d,%r15d
7089(7): mov 0x205ff0(%rip),%rbx
7090(4): mov %eax,0x18(%rsp)
7094(6): js 0x16d(%rip)
709a(7): cmp %r15d,0x205fd7(%rip)
70a1(2): jnle 0x64(%rip)
70a3(7): cmp $0x7fffffff,%r15d
70aa(6): jz 0x15c(%rip)
70b0(4): lea 0x1(%r15),%r12d
70b4(7): lea 0x205fd5(%rip),%rax
70bb(3): movsxd %r12d,%rsi
70be(4): shl/sal $0x4,%rsi
70c2(3): cmp %rax,%rbx
70c5(6): jz 0x11b(%rip)
70cb(3): mov %rbx,%rdi
70ce(5): call 0xf82(%rip)
70d3(3): mov %rax,%rbx
70d6(7): mov %rax,0x205fa3(%rip)
70dd(7): movsxd 0x205f94(%rip),%rdi
70e4(3): mov %r12d,%edx
70e7(2): xor %esi,%esi
70e9(2): sub %edi,%edx
70eb(4): shl/sal $0x4,%rdi
70ef(3): movsxd %edx,%rdx
70f2(3): add %rbx,%rdi
70f5(4): shl/sal $0x4,%rdx
70f9(5): call 0xffffa877(%rip)
70fe(7): mov %r12d,0x205f73(%rip)
7105(3): mov 0x4(%rbp),%eax
7108(4): shl/sal $0x4,%r15
710c(4): sub $0x8,%rsp
7110(3): add %r15,%rbx
7113(4): lea 0x8(%rbp),%r15
7117(4): mov 0x0(%rbp),%r8d
711b(3): mov (%rbx),%r11
711e(4): mov 0x8(%rbx),%r12
7122(3): mov %r14,%rcx
7125(3): or $0x1,%eax
7128(4): mov %eax,0x24(%rsp)
712c(3): push 0x30(%rbp)
712f(3): mov %eax,%r9d
7132(3): push 0x28(%rbp)
7135(2): push %r15
7137(3): mov %r11,%rsi
713a(5): mov 0x28(%rsp),%rdx
713f(3): mov %r12,%rdi
7142(5): mov %r11,0x30(%rsp)
7147(5): call 0xffffecd9(%rip)
714c(4): add $0x20,%rsp
7150(5): mov 0x10(%rsp),%r11
7155(3): cmp %rax,%r11
7158(2): jnbe 0x69(%rip)
715a(4): lea 0x1(%rax),%rsi
715e(7): lea 0x205fdb(%rip),%rax
7165(3): cmp %rax,%r12
7168(3): mov %rsi,(%rbx)
716b(2): jz 0x14(%rip)
716d(3): mov %r12,%rdi
7170(5): mov %rsi,0x10(%rsp)
7175(5): call 0xffffa67b(%rip)
717a(5): mov 0x10(%rsp),%rsi
717f(3): mov %rsi,%rdi
7182(5): mov %rsi,0x10(%rsp)
7187(5): call 0xe69(%rip)
718c(4): sub $0x8,%rsp
7190(4): mov %rax,0x8(%rbx)
7194(4): mov 0x0(%rbp),%r8d
7198(3): push 0x30(%rbp)
719b(3): push 0x28(%rbp)
719e(3): mov %r14,%rcx
71a1(2): push %r15
71a3(5): mov 0x3c(%rsp),%r9d
71a8(3): mov %rax,%rdi
71ab(5): mov 0x28(%rsp),%rdx
71b0(5): mov 0x30(%rsp),%rsi
71b5(3): mov %rax,%r12
71b8(5): call 0xffffec68(%rip)
71bd(4): add $0x20,%rsp
71c1(4): mov 0x18(%rsp),%eax
71c5(4): mov %eax,0x0(%r13)
71c9(4): add $0x28,%rsp
71cd(3): mov %r12,%rax
71d0(1): pop %rbx
71d1(1): pop %rbp
71d2(2): pop %r12
71d4(2): pop %r13
71d6(2): pop %r14
71d8(2): pop %r15
71da(1): ret near (%rsp)
71db(5): nop 0x0(%rax,%rax,1)
71e0(2): xor %edi,%edi
71e2(5): call 0xe6e(%rip)
71e7(8): movdqa 0x205ea1(%rip),%xmm0
71ef(3): mov %rax,%rbx
71f2(7): mov %rax,0x205e87(%rip)
71f9(3): movups %xmm0,(%rax)
71fc(5): jmp 0xfffffee1(%rip)
7201(5): call 0xffffa5ff(%rip)
7206(5): call 0x103a(%rip)

"clone_quoting_options" :
7210(2): push %r12
7212(1): push %rbp
7213(1): push %rbx
7214(3): mov %rdi,%rbx
7217(5): call 0xffffa5f9(%rip)
721c(3): mov (%rax),%r12d
721f(3): mov %rax,%rbp
7222(7): lea 0x206017(%rip),%rax
7229(3): test %rbx,%rbx
722c(5): mov $0x38,%esi
7231(4): cmove %rax,%rbx
7235(3): mov %rbx,%rdi
7238(5): call 0xfb8(%rip)
723d(4): mov %r12d,0x0(%rbp)
7241(1): pop %rbx
7242(1): pop %rbp
7243(2): pop %r12
7245(1): ret near (%rsp)

"get_quoting_style" :
7250(7): lea 0x205fe9(%rip),%rax
7257(3): test %rdi,%rdi
725a(4): cmove %rax,%rdi
725e(2): mov (%rdi),%eax
7260(1): ret near (%rsp)

"set_quoting_style" :
7270(7): lea 0x205fc9(%rip),%rax
7277(3): test %rdi,%rdi
727a(4): cmove %rax,%rdi
727e(2): mov %esi,(%rdi)
7280(1): ret near (%rsp)

"set_char_quoting" :
7290(7): lea 0x205fa9(%rip),%rax
7297(3): test %rdi,%rdi
729a(2): mov %esi,%ecx
729c(4): cmove %rax,%rdi
72a0(2): mov %esi,%eax
72a2(3): and $0x1f,%ecx
72a5(3): shr $0x5,%al
72a8(3): movzx %al,%eax
72ab(5): lea 0x8(%rdi,%rax,4),%rdi
72b0(2): mov (%rdi),%esi
72b2(2): mov %esi,%eax
72b4(2): shr %cl,%eax
72b6(2): xor %eax,%edx
72b8(3): and $0x1,%eax
72bb(3): and $0x1,%edx
72be(2): shl/sal %cl,%edx
72c0(2): xor %esi,%edx
72c2(2): mov %edx,(%rdi)
72c4(1): ret near (%rsp)

"set_quoting_flags" :
72d0(7): lea 0x205f69(%rip),%rax
72d7(3): test %rdi,%rdi
72da(4): cmove %rax,%rdi
72de(3): mov 0x4(%rdi),%eax
72e1(3): mov %esi,0x4(%rdi)
72e4(1): ret near (%rsp)

"set_custom_quoting" :
72f0(7): lea 0x205f49(%rip),%rax
72f7(3): test %rdi,%rdi
72fa(4): cmove %rax,%rdi
72fe(3): test %rsi,%rsi
7301(6): mov $0xa,(%rdi)
7307(2): jz 0x10(%rip)
7309(3): test %rdx,%rdx
730c(2): jz 0xb(%rip)
730e(4): mov %rsi,0x28(%rdi)
7312(4): mov %rdx,0x30(%rdi)
7316(1): ret near (%rsp)
7317(4): sub $0x8,%rsp
731b(5): call 0xffffa4e5(%rip)

"quotearg_buffer" :
7320(2): push %r15
7322(2): push %r14
7324(7): lea 0x205f15(%rip),%rax
732b(2): push %r13
732d(2): push %r12
732f(3): mov %rdi,%r13
7332(1): push %rbp
7333(1): push %rbx
7334(3): mov %r8,%rbx
7337(3): mov %rsi,%r14
733a(3): mov %rdx,%r15
733d(4): sub $0x18,%rsp
7341(3): test %r8,%r8
7344(4): cmove %rax,%rbx
7348(5): mov %rcx,0x8(%rsp)
734d(5): call 0xffffa4c3(%rip)
7352(3): mov (%rax),%r12d
7355(3): mov %rax,%rbp
7358(4): lea 0x8(%rbx),%rax
735c(4): sub $0x8,%rsp
7360(4): mov 0x4(%rbx),%r9d
7364(3): push 0x30(%rbx)
7367(3): mov (%rbx),%r8d
736a(3): push 0x28(%rbx)
736d(3): mov %r15,%rdx
7370(1): push %rax
7371(5): mov 0x28(%rsp),%rcx
7376(3): mov %r14,%rsi
7379(3): mov %r13,%rdi
737c(5): call 0xffffeaa4(%rip)
7381(4): mov %r12d,0x0(%rbp)
7385(4): add $0x38,%rsp
7389(1): pop %rbx
738a(1): pop %rbp
738b(2): pop %r12
738d(2): pop %r13
738f(2): pop %r14
7391(2): pop %r15
7393(1): ret near (%rsp)

"quotearg_alloc_mem" :
73a0(2): push %r15
73a2(2): push %r14
73a4(7): lea 0x205e95(%rip),%rax
73ab(2): push %r13
73ad(2): push %r12
73af(3): mov %rdx,%r12
73b2(1): push %rbp
73b3(1): push %rbx
73b4(3): mov %rcx,%rbx
73b7(3): mov %rdi,%r14
73ba(3): mov %rsi,%r15
73bd(4): sub $0x38,%rsp
73c1(3): test %rcx,%rcx
73c4(4): cmove %rax,%rbx
73c8(2): xor %ebp,%ebp
73ca(5): call 0xffffa446(%rip)
73cf(3): test %r12,%r12
73d2(3): mov %rax,%r13
73d5(2): mov (%rax),%eax
73d7(4): setz %bpl
73db(3): or 0x4(%rbx),%ebp
73de(4): lea 0x8(%rbx),%r10
73e2(4): sub $0x8,%rsp
73e6(3): mov (%rbx),%r8d
73e9(3): mov %r15,%rcx
73ec(4): mov %eax,0x14(%rsp)
73f0(3): push 0x30(%rbx)
73f3(3): mov %r14,%rdx
73f6(3): push 0x28(%rbx)
73f9(2): push %r10
73fb(2): xor %esi,%esi
73fd(3): mov %ebp,%r9d
7400(2): xor %edi,%edi
7402(5): mov %r10,0x40(%rsp)
7407(5): call 0xffffea19(%rip)
740c(4): lea 0x1(%rax),%rsi
7410(5): mov %rax,0x48(%rsp)
7415(4): add $0x20,%rsp
7419(3): mov %rsi,%rdi
741c(5): mov %rsi,0x18(%rsp)
7421(5): call 0xbcf(%rip)
7426(5): mov %rax,0x10(%rsp)
742b(4): sub $0x8,%rsp
742f(3): push 0x30(%rbx)
7432(3): push 0x28(%rbx)
7435(5): mov 0x38(%rsp),%r10
743a(3): mov %ebp,%r9d
743d(3): mov (%rbx),%r8d
7440(3): mov %r15,%rcx
7443(3): mov %r14,%rdx
7446(3): mov %rax,%rdi
7449(2): push %r10
744b(5): mov 0x38(%rsp),%rsi
7450(5): call 0xffffe9d0(%rip)
7455(4): mov 0x2c(%rsp),%eax
7459(4): add $0x20,%rsp
745d(3): test %r12,%r12
7460(4): mov %eax,0x0(%r13)
7464(2): jz 0xb(%rip)
7466(5): mov 0x28(%rsp),%r11
746b(4): mov %r11,(%r12)
746f(5): mov 0x10(%rsp),%rax
7474(4): add $0x38,%rsp
7478(1): pop %rbx
7479(1): pop %rbp
747a(2): pop %r12
747c(2): pop %r13
747e(2): pop %r14
7480(2): pop %r15
7482(1): ret near (%rsp)

"quotearg_alloc" :
7490(3): mov %rdx,%rcx
7493(2): xor %edx,%edx
7495(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
74a0(6): mov 0x205bd2(%rip),%eax
74a6(2): push %r12
74a8(7): mov 0x205bd1(%rip),%r12
74af(1): push %rbp
74b0(1): push %rbx
74b1(3): cmp $0x1,%eax
74b4(2): jle 0x2d(%rip)
74b6(3): sub $0x2,%eax
74b9(5): lea 0x18(%r12),%rbx
74be(4): shl/sal $0x4,%rax
74c2(5): lea 0x28(%r12,%rax,1),%rbp
74c7(9): nop 0x0(%rax,%rax,1)
74d0(3): mov (%rbx),%rdi
74d3(4): add $0x10,%rbx
74d7(5): call 0xffffa319(%rip)
74dc(3): cmp %rbp,%rbx
74df(2): jnz 0xfffffff1(%rip)
74e1(5): mov 0x8(%r12),%rdi
74e6(7): lea 0x205c53(%rip),%rbx
74ed(3): cmp %rbx,%rdi
74f0(2): jz 0x19(%rip)
74f2(5): call 0xffffa2fe(%rip)
74f7(b): mov $0x100,0x205b8e(%rip)
7502(7): mov %rbx,0x205b8f(%rip)
7509(7): lea 0x205b80(%rip),%rbx
7510(3): cmp %rbx,%r12
7513(2): jz 0x11(%rip)
7515(3): mov %r12,%rdi
7518(5): call 0xffffa2d8(%rip)
751d(7): mov %rbx,0x205b5c(%rip)
7524(1): pop %rbx
7525(a): mov $0x1,0x205b49(%rip)
752f(1): pop %rbp
7530(2): pop %r12
7532(1): ret near (%rsp)

"quotearg_n" :
7540(7): lea 0x205cf9(%rip),%rcx
7547(7): mov $0xffffffff,%rdx
754e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
7560(7): lea 0x205cd9(%rip),%rcx
7567(5): jmp 0xfffffaf9(%rip)

"quotearg" :
7570(7): lea 0x205cc9(%rip),%rcx
7577(3): mov %rdi,%rsi
757a(7): mov $0xffffffff,%rdx
7581(2): xor %edi,%edi
7583(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
7590(7): lea 0x205ca9(%rip),%rcx
7597(3): mov %rsi,%rdx
759a(3): mov %rdi,%rsi
759d(2): xor %edi,%edi
759f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
75b0(4): sub $0x48,%rsp
75b4(3): mov %rdx,%rax
75b7(9): mov $0x28,%rdx
75c0(5): mov %rdx,0x38(%rsp)
75c5(2): xor %edx,%edx
75c7(3): cmp $0xa,%esi
75ca(2): jz 0x6a(%rip)
75cc(3): mov %esi,(%rsp)
75cf(3): mov %rsp,%rcx
75d2(7): mov $0xffffffff,%rdx
75d9(3): mov %rax,%rsi
75dc(9): mov $0x0,0x4(%rsp)
75e5(9): mov $0x0,0xc(%rsp)
75ee(9): mov $0x0,0x14(%rsp)
75f7(9): mov $0x0,0x1c(%rsp)
7600(9): mov $0x0,0x24(%rsp)
7609(9): mov $0x0,0x2c(%rsp)
7612(8): mov $0x0,0x34(%rsp)
761a(5): call 0xfffffa46(%rip)
761f(5): mov 0x38(%rsp),%rcx
7624(9): xor $0x28,%rcx
762d(2): jnz 0xc(%rip)
762f(4): add $0x48,%rsp
7633(1): ret near (%rsp)
7634(5): call 0xffffa1cc(%rip)
7639(5): call 0xffffa2a7(%rip)

"quotearg_n_style_mem" :
7640(4): sub $0x48,%rsp
7644(3): mov %rdx,%rax
7647(3): mov %rcx,%rdx
764a(9): mov $0x28,%rcx
7653(5): mov %rcx,0x38(%rsp)
7658(2): xor %ecx,%ecx
765a(3): cmp $0xa,%esi
765d(2): jz 0x63(%rip)
765f(3): mov %esi,(%rsp)
7662(3): mov %rsp,%rcx
7665(3): mov %rax,%rsi
7668(9): mov $0x0,0x4(%rsp)
7671(9): mov $0x0,0xc(%rsp)
767a(9): mov $0x0,0x14(%rsp)
7683(9): mov $0x0,0x1c(%rsp)
768c(9): mov $0x0,0x24(%rsp)
7695(9): mov $0x0,0x2c(%rsp)
769e(8): mov $0x0,0x34(%rsp)
76a6(5): call 0xfffff9ba(%rip)
76ab(5): mov 0x38(%rsp),%rdx
76b0(9): xor $0x28,%rdx
76b9(2): jnz 0xc(%rip)
76bb(4): add $0x48,%rsp
76bf(1): ret near (%rsp)
76c0(5): call 0xffffa140(%rip)
76c5(5): call 0xffffa21b(%rip)

"quotearg_style" :
76d0(3): mov %rsi,%rdx
76d3(2): mov %edi,%esi
76d5(2): xor %edi,%edi
76d7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
76e0(3): mov %rdx,%rcx
76e3(3): mov %rsi,%rdx
76e6(2): mov %edi,%esi
76e8(2): xor %edi,%edi
76ea(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
76f0(4): sub $0x48,%rsp
76f4(2): mov %edx,%ecx
76f6(9): mov $0x28,%rax
76ff(5): mov %rax,0x38(%rsp)
7704(2): xor %eax,%eax
7706(7): mov 0x205b63(%rip),%rax
770d(3): mov %rsp,%r8
7710(3): and $0x1f,%ecx
7713(8): movdqa 0x205b25(%rip),%xmm0
771b(5): mov %rax,0x30(%rsp)
7720(2): mov %edx,%eax
7722(4): movaps %xmm0,(%rsp)
7726(3): shr $0x5,%al
7729(3): movzx %al,%eax
772c(5): lea 0x8(%r8,%rax,4),%r9
7731(8): movdqa 0x205b17(%rip),%xmm0
7739(5): movaps %xmm0,0x10(%rsp)
773e(8): movdqa 0x205b1a(%rip),%xmm0
7746(5): movaps %xmm0,0x20(%rsp)
774b(3): mov (%r9),%edx
774e(2): mov %edx,%eax
7750(2): shr %cl,%eax
7752(2): not %eax
7754(3): and $0x1,%eax
7757(2): shl/sal %cl,%eax
7759(3): mov %r8,%rcx
775c(2): xor %edx,%eax
775e(3): mov %rsi,%rdx
7761(3): mov %rdi,%rsi
7764(3): mov %eax,(%r9)
7767(2): xor %edi,%edi
7769(5): call 0xfffff8f7(%rip)
776e(5): mov 0x38(%rsp),%rsi
7773(9): xor $0x28,%rsi
777c(2): jnz 0x7(%rip)
777e(4): add $0x48,%rsp
7782(1): ret near (%rsp)
7783(5): call 0xffffa15d(%rip)

"quotearg_char" :
7790(4): movsx %sil,%edx
7794(7): mov $0xffffffff,%rsi
779b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
77a0(5): mov $0x3a,%edx
77a5(7): mov $0xffffffff,%rsi
77ac(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
77c0(5): mov $0x3a,%edx
77c5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
77d0(4): sub $0x48,%rsp
77d4(3): mov %rdx,%rax
77d7(9): mov $0x28,%rdx
77e0(5): mov %rdx,0x38(%rsp)
77e5(2): xor %edx,%edx
77e7(3): cmp $0xa,%esi
77ea(2): jz 0x6a(%rip)
77ec(3): mov %esi,(%rsp)
77ef(3): mov %rsp,%rcx
77f2(7): mov $0xffffffff,%rdx
77f9(3): mov %rax,%rsi
77fc(9): mov $0x0,0x4(%rsp)
7805(9): mov $0x4000000,0xc(%rsp)
780e(9): mov $0x0,0x14(%rsp)
7817(9): mov $0x0,0x1c(%rsp)
7820(9): mov $0x0,0x24(%rsp)
7829(9): mov $0x0,0x2c(%rsp)
7832(8): mov $0x0,0x34(%rsp)
783a(5): call 0xfffff826(%rip)
783f(5): mov 0x38(%rsp),%rcx
7844(9): xor $0x28,%rcx
784d(2): jnz 0xc(%rip)
784f(4): add $0x48,%rsp
7853(1): ret near (%rsp)
7854(5): call 0xffff9fac(%rip)
7859(5): call 0xffffa087(%rip)

"quotearg_n_custom_mem" :
7860(4): sub $0x48,%rsp
7864(3): mov %rcx,%r9
7867(7): mov 0x205a02(%rip),%rcx
786e(8): movdqa 0x2059ca(%rip),%xmm0
7876(9): mov $0x28,%rax
787f(5): mov %rax,0x38(%rsp)
7884(2): xor %eax,%eax
7886(4): movaps %xmm0,(%rsp)
788a(3): test %rsi,%rsi
788d(5): mov %rcx,0x30(%rsp)
7892(7): mov $0xa,(%rsp)
7899(8): movdqa 0x2059af(%rip),%xmm0
78a1(5): movaps %xmm0,0x10(%rsp)
78a6(8): movdqa 0x2059b2(%rip),%xmm0
78ae(5): movaps %xmm0,0x20(%rsp)
78b3(2): jz 0x34(%rip)
78b5(3): test %rdx,%rdx
78b8(2): jz 0x2f(%rip)
78ba(5): mov %rsi,0x28(%rsp)
78bf(5): mov %rdx,0x30(%rsp)
78c4(3): mov %rsp,%rcx
78c7(3): mov %r8,%rdx
78ca(3): mov %r9,%rsi
78cd(5): call 0xfffff793(%rip)
78d2(5): mov 0x38(%rsp),%rdi
78d7(9): xor $0x28,%rdi
78e0(2): jnz 0xc(%rip)
78e2(4): add $0x48,%rsp
78e6(1): ret near (%rsp)
78e7(5): call 0xffff9f19(%rip)
78ec(5): call 0xffff9ff4(%rip)

"quotearg_n_custom" :
7900(7): mov $0xffffffff,%r8
7907(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
7910(3): mov %rdx,%rcx
7913(7): mov $0xffffffff,%r8
791a(3): mov %rsi,%rdx
791d(3): mov %rdi,%rsi
7920(2): xor %edi,%edi
7922(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
7930(3): mov %rcx,%r8
7933(3): mov %rdx,%rcx
7936(3): mov %rsi,%rdx
7939(3): mov %rdi,%rsi
793c(2): xor %edi,%edi
793e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
7950(7): lea 0x2056e9(%rip),%rcx
7957(5): jmp 0xfffff709(%rip)

"quote_mem" :
7960(7): lea 0x2056d9(%rip),%rcx
7967(3): mov %rsi,%rdx
796a(3): mov %rdi,%rsi
796d(2): xor %edi,%edi
796f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
7980(7): lea 0x2056b9(%rip),%rcx
7987(7): mov $0xffffffff,%rdx
798e(5): jmp 0xfffff6d2(%rip)

"quote" :
79a0(7): lea 0x205699(%rip),%rcx
79a7(3): mov %rdi,%rsi
79aa(7): mov $0xffffffff,%rdx
79b1(2): xor %edi,%edi
79b3(5): jmp 0xfffff6ad(%rip)

"dup_safer" :
79c0(5): mov $0x3,%edx
79c5(2): xor %esi,%esi
79c7(2): xor %eax,%eax
79c9(5): jmp 0x12a7(%rip)

"version_etc_arn" :
79d0(2): push %r15
79d2(2): push %r14
79d4(2): push %r13
79d6(2): push %r12
79d8(3): mov %r9,%r12
79db(1): push %rbp
79dc(1): push %rbx
79dd(3): mov %rdi,%rbp
79e0(3): mov %r8,%rbx
79e3(4): sub $0x28,%rsp
79e7(3): test %rsi,%rsi
79ea(6): jz 0x11e(%rip)
79f0(3): mov %rdx,%r8
79f3(7): lea 0x2a4e(%rip),%rdx
79fa(3): mov %rcx,%r9
79fd(2): xor %eax,%eax
79ff(3): mov %rsi,%rcx
7a02(5): mov $0x1,%esi
7a07(5): call 0xffffa149(%rip)
7a0c(7): lea 0x2a48(%rip),%rsi
7a13(2): xor %edi,%edi
7a15(5): mov $0x5,%edx
7a1a(5): call 0xffff9e96(%rip)
7a1f(7): lea 0x2d5a(%rip),%rdx
7a26(3): mov %rax,%rcx
7a29(6): mov $0x7e3,%r8d
7a2f(5): mov $0x1,%esi
7a34(3): mov %rbp,%rdi
7a37(2): xor %eax,%eax
7a39(5): call 0xffffa117(%rip)
7a3e(7): lea 0x2aa3(%rip),%rsi
7a45(2): xor %edi,%edi
7a47(5): mov $0x5,%edx
7a4c(5): call 0xffff9e64(%rip)
7a51(3): mov %rbp,%rsi
7a54(3): mov %rax,%rdi
7a57(5): call 0xffff9f59(%rip)
7a5c(4): cmp $0x9,%r12
7a60(6): jnbe 0x340(%rip)
7a66(7): lea 0x2cd7(%rip),%rdx
7a6d(4): movsxd 0x0(%rdx,%r12,4),%rax
7a71(3): add %rdx,%rax
7a74(2): jmp %rax
7a76(a): nop 0x0(%rax,%rax,1)
7a80(4): mov 0x38(%rbx),%r9
7a84(4): mov 0x10(%rbx),%rax
7a88(7): lea 0x2bc9(%rip),%rsi
7a8f(4): mov 0x8(%rbx),%r8
7a93(5): mov $0x5,%edx
7a98(2): xor %edi,%edi
7a9a(4): mov 0x30(%rbx),%r13
7a9e(4): mov 0x28(%rbx),%r12
7aa2(5): mov %r9,0x10(%rsp)
7aa7(4): mov 0x20(%rbx),%r15
7aab(4): mov 0x18(%rbx),%r14
7aaf(4): mov %rax,(%rsp)
7ab3(5): mov %r8,0x8(%rsp)
7ab8(3): mov (%rbx),%rbx
7abb(5): call 0xffff9df5(%rip)
7ac0(4): sub $0x8,%rsp
7ac4(5): mov 0x18(%rsp),%r9
7ac9(3): mov %rax,%rdx
7acc(3): mov %rbx,%rcx
7acf(5): mov $0x1,%esi
7ad4(3): mov %rbp,%rdi
7ad7(2): xor %eax,%eax
7ad9(2): push %r9
7adb(2): push %r13
7add(2): push %r12
7adf(2): push %r15
7ae1(2): push %r14
7ae3(5): mov 0x30(%rsp),%r9
7ae8(5): mov 0x38(%rsp),%r8
7aed(5): call 0xffffa063(%rip)
7af2(4): add $0x30,%rsp
7af6(4): add $0x28,%rsp
7afa(1): pop %rbx
7afb(1): pop %rbp
7afc(2): pop %r12
7afe(2): pop %r13
7b00(2): pop %r14
7b02(2): pop %r15
7b04(1): ret near (%rsp)
7b05(3): nop (%rax)
7b08(3): mov %rcx,%r8
7b0b(3): mov %rdx,%rcx
7b0e(7): lea 0x293f(%rip),%rdx
7b15(5): mov $0x1,%esi
7b1a(2): xor %eax,%eax
7b1c(5): call 0xffffa034(%rip)
7b21(5): jmp 0xfffffeeb(%rip)
7b26(a): nop 0x0(%rax,%rax,1)
7b30(4): mov 0x40(%rbx),%r10
7b34(4): mov 0x38(%rbx),%r9
7b38(7): lea 0x2b49(%rip),%rsi
7b3f(4): mov 0x10(%rbx),%rax
7b43(4): mov 0x8(%rbx),%r8
7b47(5): mov $0x5,%edx
7b4c(4): mov 0x30(%rbx),%r13
7b50(4): mov 0x28(%rbx),%r12
7b54(4): mov 0x20(%rbx),%r15
7b58(4): mov 0x18(%rbx),%r14
7b5c(3): mov (%rbx),%rbx
7b5f(5): mov %r10,0x18(%rsp)
7b64(5): mov %r9,0x10(%rsp)
7b69(4): mov %rax,(%rsp)
7b6d(5): mov %r8,0x8(%rsp)
7b72(2): xor %edi,%edi
7b74(5): call 0xffff9d3c(%rip)
7b79(5): mov 0x18(%rsp),%r10
7b7e(2): push %r10
7b80(5): jmp 0xffffff44(%rip)
7b85(3): nop (%rax)
7b88(3): mov (%rbx),%rbx
7b8b(7): lea 0x28cd(%rip),%rsi
7b92(5): mov $0x5,%edx
7b97(2): xor %edi,%edi
7b99(5): call 0xffff9d17(%rip)
7b9e(4): add $0x28,%rsp
7ba2(3): mov %rbx,%rcx
7ba5(3): mov %rbp,%rdi
7ba8(1): pop %rbx
7ba9(1): pop %rbp
7baa(2): pop %r12
7bac(2): pop %r13
7bae(2): pop %r14
7bb0(2): pop %r15
7bb2(3): mov %rax,%rdx
7bb5(5): mov $0x1,%esi
7bba(2): xor %eax,%eax
7bbc(5): jmp 0xffff9f94(%rip)
7bc1(7): nop 0x0(%rax)
7bc8(4): mov 0x8(%rbx),%r12
7bcc(7): lea 0x289c(%rip),%rsi
7bd3(3): mov (%rbx),%rbx
7bd6(5): mov $0x5,%edx
7bdb(2): xor %edi,%edi
7bdd(5): call 0xffff9cd3(%rip)
7be2(4): add $0x28,%rsp
7be6(3): mov %r12,%r8
7be9(3): mov %rbx,%rcx
7bec(3): mov %rbp,%rdi
7bef(3): mov %rax,%rdx
7bf2(5): mov $0x1,%esi
7bf7(1): pop %rbx
7bf8(1): pop %rbp
7bf9(2): pop %r12
7bfb(2): pop %r13
7bfd(2): pop %r14
7bff(2): pop %r15
7c01(2): xor %eax,%eax
7c03(5): jmp 0xffff9f4d(%rip)
7c08(8): nop 0x0(%rax,%rax,1)
7c10(4): mov 0x10(%rbx),%r13
7c14(4): mov 0x8(%rbx),%r12
7c18(7): lea 0x2867(%rip),%rsi
7c1f(3): mov (%rbx),%rbx
7c22(5): mov $0x5,%edx
7c27(2): xor %edi,%edi
7c29(5): call 0xffff9c87(%rip)
7c2e(4): add $0x28,%rsp
7c32(3): mov %r13,%r9
7c35(3): mov %r12,%r8
7c38(3): mov %rbx,%rcx
7c3b(3): mov %rbp,%rdi
7c3e(3): mov %rax,%rdx
7c41(1): pop %rbx
7c42(1): pop %rbp
7c43(2): pop %r12
7c45(2): pop %r13
7c47(2): pop %r14
7c49(2): pop %r15
7c4b(5): mov $0x1,%esi
7c50(2): xor %eax,%eax
7c52(5): jmp 0xffff9efe(%rip)
7c57(9): nop 0x0(%rax,%rax,1)
7c60(7): lea 0x2951(%rip),%rsi
7c67(5): mov $0x5,%edx
7c6c(2): xor %edi,%edi
7c6e(4): mov 0x18(%rbx),%r14
7c72(4): mov 0x10(%rbx),%r13
7c76(4): mov 0x8(%rbx),%r12
7c7a(3): mov (%rbx),%rbx
7c7d(5): call 0xffff9c33(%rip)
7c82(4): sub $0x8,%rsp
7c86(2): push %r14
7c88(3): mov %rax,%rdx
7c8b(3): mov %r13,%r9
7c8e(3): mov %r12,%r8
7c91(3): mov %rbx,%rcx
7c94(3): mov %rbp,%rdi
7c97(5): mov $0x1,%esi
7c9c(2): xor %eax,%eax
7c9e(5): call 0xffff9eb2(%rip)
7ca3(1): pop %rax
7ca4(1): pop %rdx
7ca5(4): add $0x28,%rsp
7ca9(1): pop %rbx
7caa(1): pop %rbp
7cab(2): pop %r12
7cad(2): pop %r13
7caf(2): pop %r14
7cb1(2): pop %r15
7cb3(1): ret near (%rsp)
7cb4(4): nop 0x0(%rax)
7cb8(4): mov 0x20(%rbx),%r15
7cbc(7): lea 0x2915(%rip),%rsi
7cc3(5): mov $0x5,%edx
7cc8(2): xor %edi,%edi
7cca(4): mov 0x18(%rbx),%r14
7cce(4): mov 0x10(%rbx),%r13
7cd2(4): mov 0x8(%rbx),%r12
7cd6(3): mov (%rbx),%rbx
7cd9(5): call 0xffff9bd7(%rip)
7cde(2): push %r15
7ce0(2): jmp 0xffffffa6(%rip)
7ce2(6): nop 0x0(%rax,%rax,1)
7ce8(4): mov 0x8(%rbx),%r8
7cec(4): mov 0x28(%rbx),%r12
7cf0(7): lea 0x2909(%rip),%rsi
7cf7(4): mov 0x20(%rbx),%r15
7cfb(4): mov 0x18(%rbx),%r14
7cff(5): mov $0x5,%edx
7d04(4): mov 0x10(%rbx),%r13
7d08(2): xor %edi,%edi
7d0a(3): mov (%rbx),%rbx
7d0d(4): mov %r8,(%rsp)
7d11(5): call 0xffff9b9f(%rip)
7d16(4): sub $0x8,%rsp
7d1a(3): mov %r13,%r9
7d1d(2): push %r12
7d1f(2): push %r15
7d21(2): push %r14
7d23(5): mov 0x20(%rsp),%r8
7d28(3): mov %rbx,%rcx
7d2b(3): mov %rax,%rdx
7d2e(3): mov %rbp,%rdi
7d31(5): mov $0x1,%esi
7d36(2): xor %eax,%eax
7d38(5): call 0xffff9e18(%rip)
7d3d(4): add $0x20,%rsp
7d41(4): add $0x28,%rsp
7d45(1): pop %rbx
7d46(1): pop %rbp
7d47(2): pop %r12
7d49(2): pop %r13
7d4b(2): pop %r14
7d4d(2): pop %r15
7d4f(1): ret near (%rsp)
7d50(4): mov 0x10(%rbx),%r9
7d54(4): mov 0x30(%rbx),%r13
7d58(7): lea 0x28c9(%rip),%rsi
7d5f(4): mov 0x28(%rbx),%r12
7d63(4): mov 0x20(%rbx),%r15
7d67(5): mov $0x5,%edx
7d6c(4): mov 0x18(%rbx),%r14
7d70(4): mov 0x8(%rbx),%r8
7d74(2): xor %edi,%edi
7d76(5): mov %r9,0x8(%rsp)
7d7b(3): mov (%rbx),%rbx
7d7e(4): mov %r8,(%rsp)
7d82(5): call 0xffff9b2e(%rip)
7d87(2): push %r13
7d89(2): push %r12
7d8b(2): push %r15
7d8d(2): push %r14
7d8f(5): mov 0x28(%rsp),%r9
7d94(2): jmp 0xffffff8f(%rip)
7d96(a): nop 0x0(%rax,%rax,1)
7da0(4): mov 0x40(%rbx),%r10
7da4(4): mov 0x38(%rbx),%r9
7da8(5): mov $0x5,%edx
7dad(4): mov 0x10(%rbx),%rax
7db1(4): mov 0x8(%rbx),%r8
7db5(7): lea 0x2904(%rip),%rsi
7dbc(4): mov 0x30(%rbx),%r13
7dc0(4): mov 0x28(%rbx),%r12
7dc4(4): mov 0x20(%rbx),%r15
7dc8(4): mov 0x18(%rbx),%r14
7dcc(5): mov %r10,0x18(%rsp)
7dd1(5): mov %r9,0x10(%rsp)
7dd6(4): mov %rax,(%rsp)
7dda(5): mov %r8,0x8(%rsp)
7ddf(3): mov (%rbx),%rbx
7de2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
7df0(3): xor %r9d,%r9d
7df3(4): cmp $0x0,(%r8)
7df7(2): jz 0x14(%rip)
7df9(7): nop 0x0(%rax)
7e00(4): add $0x1,%r9
7e04(5): cmp $0x0,0x0(%r8,%r9,8)
7e09(2): jnz 0xfffffff7(%rip)
7e0b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
7e10(4): sub $0x68,%rsp
7e14(3): mov %r8,%r10
7e17(3): xor %r9d,%r9d
7e1a(9): mov $0x28,%rax
7e23(5): mov %rax,0x58(%rsp)
7e28(2): xor %eax,%eax
7e2a(3): mov %rsp,%r8
7e2d(3): nop (%rax)
7e30(3): mov (%r10),%eax
7e33(3): cmp $0x2f,%eax
7e36(2): jnbe 0x44(%rip)
7e38(3): mov %eax,%r11d
7e3b(4): add 0x10(%r10),%r11
7e3f(3): add $0x8,%eax
7e42(3): mov %eax,(%r10)
7e45(3): mov (%r11),%rax
7e48(3): test %rax,%rax
7e4b(4): mov %rax,0x0(%r8,%r9,8)
7e4f(2): jz 0xc(%rip)
7e51(4): add $0x1,%r9
7e55(4): cmp $0xa,%r9
7e59(2): jnz 0xffffffd7(%rip)
7e5b(5): call 0xfffffb75(%rip)
7e60(5): mov 0x58(%rsp),%rax
7e65(9): xor $0x28,%rax
7e6e(2): jnz 0x7(%rip)
7e70(4): add $0x68,%rsp
7e74(1): ret near (%rsp)
7e75(5): call 0xffff9a6b(%rip)
7e7a(4): mov 0x8(%r10),%r11
7e7e(4): lea 0x8(%r11),%rax
7e82(4): mov %rax,0x8(%r10)
7e86(2): jmp 0xffffffbf(%rip)

"version_etc" :
7e90(1): push %rbp
7e91(1): push %rbx
7e92(6): mov $0x20,%r10d
7e98(3): xor %r11d,%r11d
7e9b(7): sub $0xb8,%rsp
7ea2(9): mov $0x28,%rax
7eab(5): mov %rax,0x78(%rsp)
7eb0(2): xor %eax,%eax
7eb2(8): lea 0xd0(%rsp),%rax
7eba(8): mov %r8,0xa0(%rsp)
7ec2(8): lea 0xd0(%rsp),%rbx
7eca(5): lea 0x20(%rsp),%r8
7ecf(8): mov %r9,0xa8(%rsp)
7ed7(8): mov $0x20,0x8(%rsp)
7edf(5): mov %rax,0x10(%rsp)
7ee4(8): lea 0x80(%rsp),%rax
7eec(3): xor %r9d,%r9d
7eef(5): mov %rax,0x18(%rsp)
7ef4(3): mov %rax,%rbp
7ef7(9): nop 0x0(%rax,%rax,1)
7f00(4): cmp $0x2f,%r10d
7f04(2): jnbe 0x58(%rip)
7f06(3): mov %r10d,%eax
7f09(6): mov $0x1,%r11d
7f0f(4): add $0x8,%r10d
7f13(3): add %rbp,%rax
7f16(3): mov (%rax),%rax
7f19(3): test %rax,%rax
7f1c(4): mov %rax,0x0(%r8,%r9,8)
7f20(2): jz 0xc(%rip)
7f22(4): add $0x1,%r9
7f26(4): cmp $0xa,%r9
7f2a(2): jnz 0xffffffd6(%rip)
7f2c(3): test %r11b,%r11b
7f2f(2): jnz 0x26(%rip)
7f31(5): call 0xfffffa9f(%rip)
7f36(5): mov 0x78(%rsp),%rax
7f3b(9): xor $0x28,%rax
7f44(2): jnz 0xc(%rip)
7f46(7): add $0xb8,%rsp
7f4d(1): pop %rbx
7f4e(1): pop %rbp
7f4f(1): ret near (%rsp)
7f50(5): call 0xffff9990(%rip)
7f55(5): mov %r10d,0x8(%rsp)
7f5a(2): jmp 0xffffffd7(%rip)
7f5c(3): mov %rbx,%rax
7f5f(4): add $0x8,%rbx
7f63(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
7f70(1): push %rbx
7f71(7): lea 0x252a(%rip),%rsi
7f78(5): mov $0x5,%edx
7f7d(2): xor %edi,%edi
7f7f(5): call 0xffff9931(%rip)
7f84(7): lea 0x252c(%rip),%rdx
7f8b(3): mov %rax,%rsi
7f8e(5): mov $0x1,%edi
7f93(2): xor %eax,%eax
7f95(5): call 0xffff9b1b(%rip)
7f9a(7): lea 0x252c(%rip),%rsi
7fa1(5): mov $0x5,%edx
7fa6(2): xor %edi,%edi
7fa8(5): call 0xffff9908(%rip)
7fad(7): lea 0x1a4c(%rip),%rcx
7fb4(7): lea 0x12bb(%rip),%rdx
7fbb(3): mov %rax,%rsi
7fbe(5): mov $0x1,%edi
7fc3(2): xor %eax,%eax
7fc5(5): call 0xffff9aeb(%rip)
7fca(7): mov 0x2050d7(%rip),%rbx
7fd1(7): lea 0x2728(%rip),%rsi
7fd8(2): xor %edi,%edi
7fda(5): mov $0x5,%edx
7fdf(5): call 0xffff98d1(%rip)
7fe4(3): mov %rbx,%rsi
7fe7(3): mov %rax,%rdi
7fea(1): pop %rbx
7feb(5): jmp 0xffff99c5(%rip)

"xmalloc" :
7ff0(1): push %rbx
7ff1(3): mov %rdi,%rbx
7ff4(5): call 0xffff9a3c(%rip)
7ff9(3): test %rax,%rax
7ffc(2): jnz 0x7(%rip)
7ffe(3): test %rbx,%rbx
8001(2): jnz 0x4(%rip)
8003(1): pop %rbx
8004(1): ret near (%rsp)
8005(5): call 0x23b(%rip)

"xnmalloc" :
8010(3): mov %rdi,%rax
8013(3): mul %rax,%rsi,%rdx
8016(3): mov %rax,%rdi
8019(3): seto %al
801c(3): test %rdi,%rdi
801f(2): js 0xc(%rip)
8021(3): movzx %al,%eax
8024(3): test %rax,%rax
8027(2): jnz 0x4(%rip)
8029(2): jmp 0xffffffc7(%rip)
802b(4): sub $0x8,%rsp
802f(5): call 0x211(%rip)

"xrealloc" :
8050(3): test %rsi,%rsi
8053(1): push %rbx
8054(3): mov %rsi,%rbx
8057(2): jnz 0x7(%rip)
8059(3): test %rdi,%rdi
805c(2): jnz 0x1c(%rip)
805e(3): mov %rbx,%rsi
8061(5): call 0xffff9a1f(%rip)
8066(3): test %rax,%rax
8069(2): jnz 0x7(%rip)
806b(3): test %rbx,%rbx
806e(2): jnz 0x13(%rip)
8070(1): pop %rbx
8071(1): ret near (%rsp)
8072(6): nop 0x0(%rax,%rax,1)
8078(5): call 0xffff9778(%rip)
807d(2): xor %eax,%eax
807f(1): pop %rbx
8080(1): ret near (%rsp)
8081(5): call 0x1bf(%rip)

"xnrealloc" :
8090(3): mov %rsi,%rax
8093(3): mul %rax,%rdx,%rdx
8096(3): mov %rax,%rsi
8099(3): seto %al
809c(3): test %rsi,%rsi
809f(2): js 0xc(%rip)
80a1(3): movzx %al,%eax
80a4(3): test %rax,%rax
80a7(2): jnz 0x4(%rip)
80a9(2): jmp 0xffffffa7(%rip)
80ab(4): sub $0x8,%rsp
80af(5): call 0x191(%rip)

"x2nrealloc" :
80c0(3): test %rdi,%rdi
80c3(3): mov %rdx,%r9
80c6(3): mov (%rsi),%rcx
80c9(2): jz 0x37(%rip)
80cb(2): xor %edx,%edx
80cd(a): mov $0x6148914691236517204,%rax
80d7(3): div %r9,%rax
80da(3): cmp %rcx,%rax
80dd(2): jbe 0x3e(%rip)
80df(3): mov %rcx,%rax
80e2(3): shr $0x1,%rax
80e5(5): lea 0x1(%rax,%rcx,1),%rcx
80ea(3): mov %rcx,(%rsi)
80ed(4): imul %r9,%rcx
80f1(3): mov %rcx,%rsi
80f4(5): jmp 0xffffff5c(%rip)
80f9(7): nop 0x0(%rax)
8100(3): test %rcx,%rcx
8103(2): jz 0x25(%rip)
8105(3): mov %rcx,%rax
8108(3): mul %rax,%r9,%rdx
810b(3): seto %dl
810e(3): test %rax,%rax
8111(3): movzx %dl,%edx
8114(2): js 0x7(%rip)
8116(3): test %rdx,%rdx
8119(2): jz 0xffffffd1(%rip)
811b(4): sub $0x8,%rsp
811f(5): call 0x121(%rip)
8124(4): nop 0x0(%rax)
8128(2): xor %edx,%edx
812a(5): mov $0x80,%eax
812f(3): xor %r8d,%r8d
8132(3): div %r9,%rax
8135(3): test %rax,%rax
8138(4): setz %r8b
813c(4): lea 0x0(%r8,%rax,1),%rcx
8140(2): jmp 0xffffffc5(%rip)

"x2realloc" :
8150(3): test %rdi,%rdi
8153(3): mov (%rsi),%rax
8156(2): jz 0x2a(%rip)
8158(a): mov $0x6148914691236517203,%rdx
8162(3): cmp %rdx,%rax
8165(2): jnbe 0x2c(%rip)
8167(3): mov %rax,%rdx
816a(3): shr $0x1,%rdx
816d(5): lea 0x1(%rdx,%rax,1),%rax
8172(3): mov %rax,(%rsi)
8175(3): mov %rax,%rsi
8178(5): jmp 0xfffffed8(%rip)
817d(3): nop (%rax)
8180(3): test %rax,%rax
8183(5): mov $0x80,%edx
8188(4): cmove %rdx,%rax
818c(3): test %rax,%rax
818f(2): jns 0xffffffe3(%rip)
8191(4): sub $0x8,%rsp
8195(5): call 0xab(%rip)

"xzalloc" :
81a0(1): push %rbx
81a1(3): mov %rdi,%rbx
81a4(5): call 0xfffffe4c(%rip)
81a9(3): mov %rbx,%rdx
81ac(2): xor %esi,%esi
81ae(3): mov %rax,%rdi
81b1(1): pop %rbx
81b2(5): jmp 0xffff97be(%rip)

"xcalloc" :
81c0(3): mov %rdi,%rax
81c3(4): sub $0x8,%rsp
81c7(3): mul %rax,%rsi,%rdx
81ca(3): seto %dl
81cd(3): test %rax,%rax
81d0(2): js 0x19(%rip)
81d2(3): movzx %dl,%edx
81d5(3): test %rdx,%rdx
81d8(2): jnz 0x11(%rip)
81da(5): call 0xffff97e6(%rip)
81df(3): test %rax,%rax
81e2(2): jz 0x7(%rip)
81e4(4): add $0x8,%rsp
81e8(1): ret near (%rsp)
81e9(5): call 0x57(%rip)

"xmemdup" :
81f0(1): push %rbp
81f1(1): push %rbx
81f2(3): mov %rdi,%rbp
81f5(3): mov %rsi,%rdi
81f8(3): mov %rsi,%rbx
81fb(4): sub $0x8,%rsp
81ff(5): call 0xfffffdf1(%rip)
8204(4): add $0x8,%rsp
8208(3): mov %rbx,%rdx
820b(3): mov %rbp,%rsi
820e(1): pop %rbx
820f(1): pop %rbp
8210(3): mov %rax,%rdi
8213(5): jmp 0xffff97fd(%rip)

"xstrdup" :
8220(1): push %rbx
8221(3): mov %rdi,%rbx
8224(5): call 0xffff96ac(%rip)
8229(3): mov %rbx,%rdi
822c(4): lea 0x1(%rax),%rsi
8230(1): pop %rbx
8231(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
8240(7): lea 0x2568(%rip),%rsi
8247(4): sub $0x8,%rsp
824b(5): mov $0x5,%edx
8250(2): xor %edi,%edi
8252(5): call 0xffff965e(%rip)
8257(6): mov 0x204dd3(%rip),%edi
825d(7): lea 0x1ca8(%rip),%rdx
8264(3): mov %rax,%rcx
8267(2): xor %esi,%esi
8269(2): xor %eax,%eax
826b(5): call 0xffff9865(%rip)
8270(5): call 0xffff9590(%rip)

"xnumtoumax" :
8280(2): push %r15
8282(2): push %r14
8284(3): mov %rcx,%r15
8287(2): push %r13
8289(2): push %r12
828b(3): mov %rdx,%r14
828e(1): push %rbp
828f(1): push %rbx
8290(2): mov %esi,%edx
8292(2): xor %esi,%esi
8294(3): mov %rdi,%r12
8297(3): mov %r9,%r13
829a(4): sub $0x18,%rsp
829e(3): mov %rsp,%rcx
82a1(4): mov 0x50(%rsp),%ebx
82a5(9): mov $0x28,%rax
82ae(5): mov %rax,0x8(%rsp)
82b3(2): xor %eax,%eax
82b5(5): call 0x51b(%rip)
82ba(2): test %eax,%eax
82bc(6): jnz 0x94(%rip)
82c2(4): mov (%rsp),%rbp
82c6(3): cmp %r14,%rbp
82c9(2): jb 0x7(%rip)
82cb(3): cmp %r15,%rbp
82ce(2): jbe 0x56(%rip)
82d0(5): call 0xffff9540(%rip)
82d5(7): cmp $0x40000000,%rbp
82dc(3): mov %rax,%r14
82df(2): sbb %eax,%eax
82e1(3): and $0xd7,%eax
82e4(3): add $0x4b,%eax
82e7(3): mov %eax,(%r14)
82ea(3): mov %r12,%rdi
82ed(5): call 0xfffff6b3(%rip)
82f2(3): mov (%r14),%esi
82f5(3): mov %rax,%r8
82f8(5): mov $0x0,%eax
82fd(7): lea 0x1c17(%rip),%rdx
8304(3): mov %r13,%rcx
8307(3): cmp $0x16,%esi
830a(3): cmove %eax,%esi
830d(2): test %ebx,%ebx
830f(5): mov $0x1,%eax
8314(3): cmove %eax,%ebx
8317(2): xor %eax,%eax
8319(2): mov %ebx,%edi
831b(5): call 0xffff97b5(%rip)
8320(4): mov (%rsp),%rbp
8324(5): mov 0x8(%rsp),%rdx
8329(9): xor $0x28,%rdx
8332(3): mov %rbp,%rax
8335(2): jnz 0x46(%rip)
8337(4): add $0x18,%rsp
833b(1): pop %rbx
833c(1): pop %rbp
833d(2): pop %r12
833f(2): pop %r13
8341(2): pop %r14
8343(2): pop %r15
8345(1): ret near (%rsp)
8346(a): nop 0x0(%rax,%rax,1)
8350(2): mov %eax,%ebp
8352(5): call 0xffff94be(%rip)
8357(3): cmp $0x1,%ebp
835a(3): mov %rax,%r14
835d(2): jz 0x13(%rip)
835f(3): cmp $0x3,%ebp
8362(2): jnz 0xffffff88(%rip)
8364(6): mov $0x0,(%rax)
836a(5): jmp 0xffffff80(%rip)
836f(1): nop 
8370(6): mov $0x4b,(%rax)
8376(5): jmp 0xffffff74(%rip)
837b(5): call 0xffff9565(%rip)

"xdectoumax" :
8380(4): sub $0x10,%rsp
8384(2): push %r9
8386(3): mov %r8,%r9
8389(3): mov %rcx,%r8
838c(3): mov %rdx,%rcx
838f(3): mov %rsi,%rdx
8392(5): mov $0xa,%esi
8397(5): call 0xfffffee9(%rip)
839c(4): add $0x18,%rsp
83a0(1): ret near (%rsp)

"xstrtoul" :
83b0(2): push %r15
83b2(2): push %r14
83b4(2): push %r13
83b6(2): push %r12
83b8(1): push %rbp
83b9(1): push %rbx
83ba(4): sub $0x28,%rsp
83be(9): mov $0x28,%rax
83c7(5): mov %rax,0x18(%rsp)
83cc(2): xor %eax,%eax
83ce(3): cmp $0x24,%edx
83d1(6): jnbe 0x364(%rip)
83d7(5): lea 0x10(%rsp),%rax
83dc(3): mov %rsi,%r15
83df(3): test %rsi,%rsi
83e2(3): mov %rdi,%rbp
83e5(4): mov %edx,0x8(%rsp)
83e9(3): mov %rcx,%r14
83ec(3): mov %r8,%r13
83ef(4): cmove %rax,%r15
83f3(5): call 0xffff941d(%rip)
83f8(6): mov $0x0,(%rax)
83fe(3): mov %rax,%r12
8401(4): movzx 0x0(%rbp),%ebx
8405(5): call 0xffff978b(%rip)
840a(4): mov 0x8(%rsp),%edx
840e(3): mov (%rax),%rsi
8411(3): mov %rbp,%rax
8414(2): jmp 0x13(%rip)
8416(a): nop 0x0(%rax,%rax,1)
8420(4): add $0x1,%rax
8424(3): movzx (%rax),%ebx
8427(3): movzx %bl,%ecx
842a(5): test $0x20,0x1(%rsi,%rcx,2)
842f(2): jnz 0xfffffff1(%rip)
8431(3): cmp $0x2d,%bl
8434(2): jz 0x54(%rip)
8436(3): mov %r15,%rsi
8439(3): mov %rbp,%rdi
843c(5): call 0xffff96d4(%rip)
8441(3): mov (%r15),%rcx
8444(3): mov %rax,%rbx
8447(3): cmp %rbp,%rcx
844a(2): jz 0x2e(%rip)
844c(4): mov (%r12),%eax
8450(2): test %eax,%eax
8452(2): jz 0x66(%rip)
8454(3): cmp $0x22,%eax
8457(5): mov $0x1,%ebp
845c(2): jnz 0x2c(%rip)
845e(3): test %r13,%r13
8461(2): jz 0xb(%rip)
8463(4): movzx (%rcx),%r12d
8467(3): test %r12b,%r12b
846a(2): jnz 0x7d(%rip)
846c(3): mov %rbx,(%r14)
846f(2): jmp 0x1e(%rip)
8471(7): nop 0x0(%rax)
8478(3): test %r13,%r13
847b(5): mov %rcx,0x8(%rsp)
8480(2): jnz 0x40(%rip)
8482(6): nop 0x0(%rax,%rax,1)
8488(5): mov $0x4,%ebp
848d(5): mov 0x18(%rsp),%rdi
8492(9): xor $0x28,%rdi
849b(2): mov %ebp,%eax
849d(6): jnz 0x293(%rip)
84a3(4): add $0x28,%rsp
84a7(1): pop %rbx
84a8(1): pop %rbp
84a9(2): pop %r12
84ab(2): pop %r13
84ad(2): pop %r14
84af(2): pop %r15
84b1(1): ret near (%rsp)
84b2(6): nop 0x0(%rax,%rax,1)
84b8(2): xor %ebp,%ebp
84ba(2): jmp 0xffffffa4(%rip)
84bc(4): nop 0x0(%rax)
84c0(5): movzx 0x0(%rbp),%r12d
84c5(3): test %r12b,%r12b
84c8(2): jz 0xffffffc0(%rip)
84ca(4): movsx %r12b,%esi
84ce(3): mov %r13,%rdi
84d1(2): xor %ebp,%ebp
84d3(5): call 0xffff943d(%rip)
84d8(3): test %rax,%rax
84db(5): mov $0x1,%ebx
84e0(5): mov 0x8(%rsp),%rcx
84e5(2): jz 0xffffffa3(%rip)
84e7(4): movsx %r12b,%esi
84eb(3): mov %r13,%rdi
84ee(5): mov %rcx,0x8(%rsp)
84f3(5): call 0xffff941d(%rip)
84f8(3): test %rax,%rax
84fb(5): mov 0x8(%rsp),%rcx
8500(6): jz 0xcc(%rip)
8506(5): lea 0xffffffbb(%r12),%eax
850b(2): cmp $0x2f,%al
850d(2): jnbe 0x53(%rip)
850f(a): mov $0x142129060940101,%rdx
8519(4): bt %rax,%rdx
851d(2): jnb 0x43(%rip)
851f(5): mov $0x30,%esi
8524(3): mov %r13,%rdi
8527(5): mov %rcx,0x8(%rsp)
852c(5): call 0xffff93e4(%rip)
8531(3): test %rax,%rax
8534(5): mov 0x8(%rsp),%rcx
8539(2): jz 0x27(%rip)
853b(4): movzx 0x1(%rcx),%eax
853f(2): cmp $0x44,%al
8541(2): jz 0xe(%rip)
8543(2): cmp $0x69,%al
8545(6): jz 0x1d3(%rip)
854b(2): cmp $0x42,%al
854d(2): jnz 0x13(%rip)
854f(5): mov $0x2,%edi
8554(5): mov $0x3e8,%esi
8559(2): jmp 0x11(%rip)
855b(5): nop 0x0(%rax,%rax,1)
8560(5): mov $0x1,%edi
8565(5): mov $0x400,%esi
856a(4): sub $0x42,%r12d
856e(4): cmp $0x35,%r12b
8572(2): jnbe 0x5a(%rip)
8574(7): lea 0x228d(%rip),%rdx
857b(4): movzx %r12b,%r12d
857f(4): movsxd 0x0(%rdx,%r12,4),%rax
8583(3): add %rdx,%rax
8586(2): jmp %rax
8588(3): mov %rbx,%rax
858b(3): mul %rax,%rsi,%rdx
858e(6): jo 0x1f3(%rip)
8594(3): xor %r8d,%r8d
8597(3): mul %rax,%rsi,%rdx
859a(6): jo 0x1d8(%rip)
85a0(3): mov %rax,%rbx
85a3(3): or %r8d,%ebp
85a6(a): nop 0x0(%rax,%rax,1)
85b0(3): movsxd %edi,%rdi
85b3(2): mov %ebp,%eax
85b5(3): add %rdi,%rcx
85b8(3): or $0x2,%eax
85bb(3): mov %rcx,(%r15)
85be(3): cmp $0x0,(%rcx)
85c1(3): mov %rbx,(%r14)
85c4(3): cmovne %eax,%ebp
85c7(5): jmp 0xfffffec6(%rip)
85cc(3): mov %rbx,(%r14)
85cf(3): or $0x2,%ebp
85d2(5): jmp 0xfffffebb(%rip)
85d7(5): mov $0x2,%edx
85dc(3): mov %rdx,%rax
85df(3): mul %rax,%rbx,%rdx
85e2(6): jo 0x9c(%rip)
85e8(3): add %rbx,%rbx
85eb(2): jmp 0xffffffc5(%rip)
85ed(5): mov $0x200,%edx
85f2(3): mov %rdx,%rax
85f5(3): mul %rax,%rbx,%rdx
85f8(6): jo 0x86(%rip)
85fe(4): shl/sal $0x9,%rbx
8602(2): jmp 0xffffffae(%rip)
8604(6): mov $0x7,%r8d
860a(3): xor %r9d,%r9d
860d(3): nop (%rax)
8610(3): mov %rbx,%rax
8613(3): mul %rax,%rsi,%rdx
8616(3): mov %rax,%rbx
8619(6): jo 0x195(%rip)
861f(4): sub $0x1,%r8d
8623(2): jnz 0xffffffed(%rip)
8625(3): or %r9d,%ebp
8628(2): jmp 0xffffff88(%rip)
862a(6): mov $0x8,%r8d
8630(3): xor %r9d,%r9d
8633(5): nop 0x0(%rax,%rax,1)
8638(3): mov %rbx,%rax
863b(3): mul %rax,%rsi,%rdx
863e(3): mov %rax,%rbx
8641(6): jo 0x14f(%rip)
8647(4): sub $0x1,%r8d
864b(2): jnz 0xffffffed(%rip)
864d(2): jmp 0xffffffd8(%rip)
864f(6): mov $0x4,%r8d
8655(3): xor %r9d,%r9d
8658(3): mov %rbx,%rax
865b(3): mul %rax,%rsi,%rdx
865e(3): mov %rax,%rbx
8661(6): jo 0x102(%rip)
8667(4): sub $0x1,%r8d
866b(2): jnz 0xffffffed(%rip)
866d(2): jmp 0xffffffb8(%rip)
866f(3): mov %rbx,%rax
8672(3): mul %rax,%rsi,%rdx
8675(3): mov %rax,%rbx
8678(6): jno 0xffffff38(%rip)
867e(5): mov $0x1,%ebp
8683(4): or $0xffffffff,%rbx
8687(5): jmp 0xffffff29(%rip)
868c(4): nop 0x0(%rax)
8690(6): mov $0x5,%r8d
8696(3): xor %r9d,%r9d
8699(3): mov %rbx,%rax
869c(3): mul %rax,%rsi,%rdx
869f(3): mov %rax,%rbx
86a2(6): jo 0xfd(%rip)
86a8(4): sub $0x1,%r8d
86ac(2): jnz 0xffffffed(%rip)
86ae(5): jmp 0xffffff77(%rip)
86b3(6): mov $0x6,%r8d
86b9(3): xor %r9d,%r9d
86bc(3): mov %rbx,%rax
86bf(3): mul %rax,%rsi,%rdx
86c2(3): mov %rax,%rbx
86c5(6): jo 0x8f(%rip)
86cb(4): sub $0x1,%r8d
86cf(2): jnz 0xffffffed(%rip)
86d1(5): jmp 0xffffff54(%rip)
86d6(5): mov $0x400,%edx
86db(3): mov %rdx,%rax
86de(3): mul %rax,%rbx,%rdx
86e1(2): jo 0xffffff9d(%rip)
86e3(4): shl/sal $0xa,%rbx
86e7(5): jmp 0xfffffec9(%rip)
86ec(3): mov %rbx,%rax
86ef(3): mul %rax,%rsi,%rdx
86f2(6): jo 0xcb(%rip)
86f8(3): xor %r8d,%r8d
86fb(3): mul %rax,%rsi,%rdx
86fe(6): jno 0xfffffe99(%rip)
8704(6): mov $0x1,%r8d
870a(4): or $0xffffffff,%rax
870e(5): jmp 0xfffffe89(%rip)
8713(5): nop 0x0(%rax,%rax,1)
8718(2): xor %edi,%edi
871a(4): cmp $0x42,0x2(%rcx)
871e(5): mov $0x400,%esi
8723(4): setz %dil
8727(4): lea 0x1(%rdi,%rdi,1),%edi
872b(5): jmp 0xfffffe3f(%rip)
8730(5): call 0xffff91b0(%rip)
8735(7): lea 0x21a4(%rip),%rcx
873c(7): lea 0x207d(%rip),%rsi
8743(7): lea 0x2096(%rip),%rdi
874a(5): mov $0x54,%edx
874f(5): call 0xffff9201(%rip)
8754(6): mov $0x1,%r9d
875a(4): or $0xffffffff,%rbx
875e(5): jmp 0xffffff6d(%rip)
8763(6): mov $0x1,%r9d
8769(4): or $0xffffffff,%rbx
876d(5): jmp 0xfffffefa(%rip)
8772(6): mov $0x1,%r8d
8778(4): or $0xffffffff,%rbx
877c(5): jmp 0xfffffe27(%rip)
8781(4): or $0xffffffff,%rax
8785(6): mov $0x1,%r8d
878b(5): jmp 0xfffffe0c(%rip)
8790(6): mov $0x1,%r9d
8796(4): or $0xffffffff,%rbx
879a(5): jmp 0xfffffead(%rip)
879f(6): mov $0x1,%r9d
87a5(4): or $0xffffffff,%rbx
87a9(5): jmp 0xfffffeff(%rip)
87ae(6): mov $0x1,%r9d
87b4(4): or $0xffffffff,%rbx
87b8(5): jmp 0xfffffe67(%rip)
87bd(6): mov $0x1,%r8d
87c3(4): or $0xffffffff,%rax
87c7(5): jmp 0xffffff34(%rip)

"xstrtoumax" :
87d0(2): push %r15
87d2(2): push %r14
87d4(2): push %r13
87d6(2): push %r12
87d8(1): push %rbp
87d9(1): push %rbx
87da(4): sub $0x28,%rsp
87de(9): mov $0x28,%rax
87e7(5): mov %rax,0x18(%rsp)
87ec(2): xor %eax,%eax
87ee(3): cmp $0x24,%edx
87f1(6): jnbe 0x364(%rip)
87f7(5): lea 0x10(%rsp),%rax
87fc(3): mov %rsi,%r15
87ff(3): test %rsi,%rsi
8802(3): mov %rdi,%rbp
8805(4): mov %edx,0x8(%rsp)
8809(3): mov %rcx,%r14
880c(3): mov %r8,%r13
880f(4): cmove %rax,%r15
8813(5): call 0xffff8ffd(%rip)
8818(6): mov $0x0,(%rax)
881e(3): mov %rax,%r12
8821(4): movzx 0x0(%rbp),%ebx
8825(5): call 0xffff936b(%rip)
882a(4): mov 0x8(%rsp),%edx
882e(3): mov (%rax),%rsi
8831(3): mov %rbp,%rax
8834(2): jmp 0x13(%rip)
8836(a): nop 0x0(%rax,%rax,1)
8840(4): add $0x1,%rax
8844(3): movzx (%rax),%ebx
8847(3): movzx %bl,%ecx
884a(5): test $0x20,0x1(%rsi,%rcx,2)
884f(2): jnz 0xfffffff1(%rip)
8851(3): cmp $0x2d,%bl
8854(2): jz 0x54(%rip)
8856(2): xor %ecx,%ecx
8858(3): mov %r15,%rsi
885b(3): mov %rbp,%rdi
885e(5): call 0xffff9102(%rip)
8863(3): mov (%r15),%rcx
8866(3): mov %rax,%rbx
8869(3): cmp %rbp,%rcx
886c(2): jz 0x2c(%rip)
886e(4): mov (%r12),%eax
8872(2): test %eax,%eax
8874(2): jz 0x64(%rip)
8876(3): cmp $0x22,%eax
8879(5): mov $0x1,%ebp
887e(2): jnz 0x2a(%rip)
8880(3): test %r13,%r13
8883(2): jz 0xb(%rip)
8885(4): movzx (%rcx),%r12d
8889(3): test %r12b,%r12b
888c(2): jnz 0x7b(%rip)
888e(3): mov %rbx,(%r14)
8891(2): jmp 0x1c(%rip)
8893(5): nop 0x0(%rax,%rax,1)
8898(3): test %r13,%r13
889b(5): mov %rcx,0x8(%rsp)
88a0(2): jnz 0x40(%rip)
88a2(6): nop 0x0(%rax,%rax,1)
88a8(5): mov $0x4,%ebp
88ad(5): mov 0x18(%rsp),%rdi
88b2(9): xor $0x28,%rdi
88bb(2): mov %ebp,%eax
88bd(6): jnz 0x293(%rip)
88c3(4): add $0x28,%rsp
88c7(1): pop %rbx
88c8(1): pop %rbp
88c9(2): pop %r12
88cb(2): pop %r13
88cd(2): pop %r14
88cf(2): pop %r15
88d1(1): ret near (%rsp)
88d2(6): nop 0x0(%rax,%rax,1)
88d8(2): xor %ebp,%ebp
88da(2): jmp 0xffffffa6(%rip)
88dc(4): nop 0x0(%rax)
88e0(5): movzx 0x0(%rbp),%r12d
88e5(3): test %r12b,%r12b
88e8(2): jz 0xffffffc0(%rip)
88ea(4): movsx %r12b,%esi
88ee(3): mov %r13,%rdi
88f1(2): xor %ebp,%ebp
88f3(5): call 0xffff901d(%rip)
88f8(3): test %rax,%rax
88fb(5): mov $0x1,%ebx
8900(5): mov 0x8(%rsp),%rcx
8905(2): jz 0xffffffa3(%rip)
8907(4): movsx %r12b,%esi
890b(3): mov %r13,%rdi
890e(5): mov %rcx,0x8(%rsp)
8913(5): call 0xffff8ffd(%rip)
8918(3): test %rax,%rax
891b(5): mov 0x8(%rsp),%rcx
8920(6): jz 0xcc(%rip)
8926(5): lea 0xffffffbb(%r12),%eax
892b(2): cmp $0x2f,%al
892d(2): jnbe 0x53(%rip)
892f(a): mov $0x142129060940101,%rdx
8939(4): bt %rax,%rdx
893d(2): jnb 0x43(%rip)
893f(5): mov $0x30,%esi
8944(3): mov %r13,%rdi
8947(5): mov %rcx,0x8(%rsp)
894c(5): call 0xffff8fc4(%rip)
8951(3): test %rax,%rax
8954(5): mov 0x8(%rsp),%rcx
8959(2): jz 0x27(%rip)
895b(4): movzx 0x1(%rcx),%eax
895f(2): cmp $0x44,%al
8961(2): jz 0xe(%rip)
8963(2): cmp $0x69,%al
8965(6): jz 0x1d3(%rip)
896b(2): cmp $0x42,%al
896d(2): jnz 0x13(%rip)
896f(5): mov $0x2,%edi
8974(5): mov $0x3e8,%esi
8979(2): jmp 0x11(%rip)
897b(5): nop 0x0(%rax,%rax,1)
8980(5): mov $0x1,%edi
8985(5): mov $0x400,%esi
898a(4): sub $0x42,%r12d
898e(4): cmp $0x35,%r12b
8992(2): jnbe 0x5a(%rip)
8994(7): lea 0x1f55(%rip),%rdx
899b(4): movzx %r12b,%r12d
899f(4): movsxd 0x0(%rdx,%r12,4),%rax
89a3(3): add %rdx,%rax
89a6(2): jmp %rax
89a8(3): mov %rbx,%rax
89ab(3): mul %rax,%rsi,%rdx
89ae(6): jo 0x1f3(%rip)
89b4(3): xor %r8d,%r8d
89b7(3): mul %rax,%rsi,%rdx
89ba(6): jo 0x1d8(%rip)
89c0(3): mov %rax,%rbx
89c3(3): or %r8d,%ebp
89c6(a): nop 0x0(%rax,%rax,1)
89d0(3): movsxd %edi,%rdi
89d3(2): mov %ebp,%eax
89d5(3): add %rdi,%rcx
89d8(3): or $0x2,%eax
89db(3): mov %rcx,(%r15)
89de(3): cmp $0x0,(%rcx)
89e1(3): mov %rbx,(%r14)
89e4(3): cmovne %eax,%ebp
89e7(5): jmp 0xfffffec6(%rip)
89ec(3): mov %rbx,(%r14)
89ef(3): or $0x2,%ebp
89f2(5): jmp 0xfffffebb(%rip)
89f7(5): mov $0x2,%edx
89fc(3): mov %rdx,%rax
89ff(3): mul %rax,%rbx,%rdx
8a02(6): jo 0x9c(%rip)
8a08(3): add %rbx,%rbx
8a0b(2): jmp 0xffffffc5(%rip)
8a0d(5): mov $0x200,%edx
8a12(3): mov %rdx,%rax
8a15(3): mul %rax,%rbx,%rdx
8a18(6): jo 0x86(%rip)
8a1e(4): shl/sal $0x9,%rbx
8a22(2): jmp 0xffffffae(%rip)
8a24(6): mov $0x7,%r8d
8a2a(3): xor %r9d,%r9d
8a2d(3): nop (%rax)
8a30(3): mov %rbx,%rax
8a33(3): mul %rax,%rsi,%rdx
8a36(3): mov %rax,%rbx
8a39(6): jo 0x195(%rip)
8a3f(4): sub $0x1,%r8d
8a43(2): jnz 0xffffffed(%rip)
8a45(3): or %r9d,%ebp
8a48(2): jmp 0xffffff88(%rip)
8a4a(6): mov $0x8,%r8d
8a50(3): xor %r9d,%r9d
8a53(5): nop 0x0(%rax,%rax,1)
8a58(3): mov %rbx,%rax
8a5b(3): mul %rax,%rsi,%rdx
8a5e(3): mov %rax,%rbx
8a61(6): jo 0x14f(%rip)
8a67(4): sub $0x1,%r8d
8a6b(2): jnz 0xffffffed(%rip)
8a6d(2): jmp 0xffffffd8(%rip)
8a6f(6): mov $0x4,%r8d
8a75(3): xor %r9d,%r9d
8a78(3): mov %rbx,%rax
8a7b(3): mul %rax,%rsi,%rdx
8a7e(3): mov %rax,%rbx
8a81(6): jo 0x102(%rip)
8a87(4): sub $0x1,%r8d
8a8b(2): jnz 0xffffffed(%rip)
8a8d(2): jmp 0xffffffb8(%rip)
8a8f(3): mov %rbx,%rax
8a92(3): mul %rax,%rsi,%rdx
8a95(3): mov %rax,%rbx
8a98(6): jno 0xffffff38(%rip)
8a9e(5): mov $0x1,%ebp
8aa3(4): or $0xffffffff,%rbx
8aa7(5): jmp 0xffffff29(%rip)
8aac(4): nop 0x0(%rax)
8ab0(6): mov $0x5,%r8d
8ab6(3): xor %r9d,%r9d
8ab9(3): mov %rbx,%rax
8abc(3): mul %rax,%rsi,%rdx
8abf(3): mov %rax,%rbx
8ac2(6): jo 0xfd(%rip)
8ac8(4): sub $0x1,%r8d
8acc(2): jnz 0xffffffed(%rip)
8ace(5): jmp 0xffffff77(%rip)
8ad3(6): mov $0x6,%r8d
8ad9(3): xor %r9d,%r9d
8adc(3): mov %rbx,%rax
8adf(3): mul %rax,%rsi,%rdx
8ae2(3): mov %rax,%rbx
8ae5(6): jo 0x8f(%rip)
8aeb(4): sub $0x1,%r8d
8aef(2): jnz 0xffffffed(%rip)
8af1(5): jmp 0xffffff54(%rip)
8af6(5): mov $0x400,%edx
8afb(3): mov %rdx,%rax
8afe(3): mul %rax,%rbx,%rdx
8b01(2): jo 0xffffff9d(%rip)
8b03(4): shl/sal $0xa,%rbx
8b07(5): jmp 0xfffffec9(%rip)
8b0c(3): mov %rbx,%rax
8b0f(3): mul %rax,%rsi,%rdx
8b12(6): jo 0xcb(%rip)
8b18(3): xor %r8d,%r8d
8b1b(3): mul %rax,%rsi,%rdx
8b1e(6): jno 0xfffffe99(%rip)
8b24(6): mov $0x1,%r8d
8b2a(4): or $0xffffffff,%rax
8b2e(5): jmp 0xfffffe89(%rip)
8b33(5): nop 0x0(%rax,%rax,1)
8b38(2): xor %edi,%edi
8b3a(4): cmp $0x42,0x2(%rcx)
8b3e(5): mov $0x400,%esi
8b43(4): setz %dil
8b47(4): lea 0x1(%rdi,%rdi,1),%edi
8b4b(5): jmp 0xfffffe3f(%rip)
8b50(5): call 0xffff8d90(%rip)
8b55(7): lea 0x1e6c(%rip),%rcx
8b5c(7): lea 0x1c5d(%rip),%rsi
8b63(7): lea 0x1c76(%rip),%rdi
8b6a(5): mov $0x54,%edx
8b6f(5): call 0xffff8de1(%rip)
8b74(6): mov $0x1,%r9d
8b7a(4): or $0xffffffff,%rbx
8b7e(5): jmp 0xffffff6d(%rip)
8b83(6): mov $0x1,%r9d
8b89(4): or $0xffffffff,%rbx
8b8d(5): jmp 0xfffffefa(%rip)
8b92(6): mov $0x1,%r8d
8b98(4): or $0xffffffff,%rbx
8b9c(5): jmp 0xfffffe27(%rip)
8ba1(4): or $0xffffffff,%rax
8ba5(6): mov $0x1,%r8d
8bab(5): jmp 0xfffffe0c(%rip)
8bb0(6): mov $0x1,%r9d
8bb6(4): or $0xffffffff,%rbx
8bba(5): jmp 0xfffffead(%rip)
8bbf(6): mov $0x1,%r9d
8bc5(4): or $0xffffffff,%rbx
8bc9(5): jmp 0xfffffeff(%rip)
8bce(6): mov $0x1,%r9d
8bd4(4): or $0xffffffff,%rbx
8bd8(5): jmp 0xfffffe67(%rip)
8bdd(6): mov $0x1,%r8d
8be3(4): or $0xffffffff,%rax
8be7(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
8bf0(2): push %r12
8bf2(1): push %rbp
8bf3(1): push %rbx
8bf4(3): mov %rdi,%rbx
8bf7(5): call 0xffff8e29(%rip)
8bfc(2): test %eax,%eax
8bfe(3): mov %rbx,%rdi
8c01(2): js 0x56(%rip)
8c03(5): call 0xffff8e5d(%rip)
8c08(2): test %eax,%eax
8c0a(2): jnz 0x2e(%rip)
8c0c(3): mov %rbx,%rdi
8c0f(5): call 0x2e1(%rip)
8c14(2): test %eax,%eax
8c16(2): jz 0x3e(%rip)
8c18(5): call 0xffff8bf8(%rip)
8c1d(3): mov (%rax),%r12d
8c20(3): mov %rbx,%rdi
8c23(3): mov %rax,%rbp
8c26(5): call 0xffff8c6a(%rip)
8c2b(3): test %r12d,%r12d
8c2e(2): jnz 0x32(%rip)
8c30(1): pop %rbx
8c31(1): pop %rbp
8c32(2): pop %r12
8c34(1): ret near (%rsp)
8c35(3): nop (%rax)
8c38(3): mov %rbx,%rdi
8c3b(5): call 0xffff8de5(%rip)
8c40(2): xor %esi,%esi
8c42(5): mov $0x1,%edx
8c47(2): mov %eax,%edi
8c49(5): call 0xffff8cf7(%rip)
8c4e(4): cmp $0xffffffff,%rax
8c52(2): jnz 0xffffffba(%rip)
8c54(3): mov %rbx,%rdi
8c57(1): pop %rbx
8c58(1): pop %rbp
8c59(2): pop %r12
8c5b(5): jmp 0xffff8c35(%rip)
8c60(4): mov %r12d,0x0(%rbp)
8c64(5): mov $0xffffffff,%eax
8c69(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
8c70(2): push %r12
8c72(1): push %rbp
8c73(2): mov %edi,%ebp
8c75(1): push %rbx
8c76(4): sub $0x50,%rsp
8c7a(9): mov $0x28,%rax
8c83(5): mov %rax,0x18(%rsp)
8c88(2): xor %eax,%eax
8c8a(5): lea 0x70(%rsp),%rax
8c8f(2): test %esi,%esi
8c91(5): mov %rdx,0x30(%rsp)
8c96(5): mov %rcx,0x38(%rsp)
8c9b(5): mov %r8,0x40(%rsp)
8ca0(5): mov %rax,0x8(%rsp)
8ca5(5): lea 0x20(%rsp),%rax
8caa(5): mov %r9,0x48(%rsp)
8caf(7): mov $0x10,(%rsp)
8cb6(5): mov %rax,0x10(%rsp)
8cbb(6): jz 0x207(%rip)
8cc1(6): cmp $0x406,%esi
8cc7(2): jnz 0x49(%rip)
8cc9(5): mov 0x10(%rsp),%rax
8cce(7): cmp $0x0,0x2045a3(%rip)
8cd5(7): mov $0x18,(%rsp)
8cdc(4): mov 0x10(%rax),%r12d
8ce0(3): mov %r12d,%edx
8ce3(6): js 0x130(%rip)
8ce9(2): xor %eax,%eax
8ceb(5): mov $0x406,%esi
8cf0(5): call 0xffff8b80(%rip)
8cf5(2): test %eax,%eax
8cf7(2): mov %eax,%ebx
8cf9(6): js 0x18f(%rip)
8cff(a): mov $0x1,0x20456f(%rip)
8d09(2): jmp 0x47(%rip)
8d0b(5): nop 0x0(%rax,%rax,1)
8d10(3): cmp $0xb,%esi
8d13(2): jz 0x2d(%rip)
8d15(2): jnle 0x5b(%rip)
8d17(3): cmp $0x4,%esi
8d1a(6): jz 0xd6(%rip)
8d20(6): jnle 0xc0(%rip)
8d26(3): cmp $0x2,%esi
8d29(6): jz 0xc7(%rip)
8d2f(2): jnle 0x11(%rip)
8d31(3): cmp $0x1,%esi
8d34(2): jnz 0x64(%rip)
8d36(a): nop 0x0(%rax,%rax,1)
8d40(2): mov %ebp,%edi
8d42(2): xor %eax,%eax
8d44(5): call 0xffff8b2c(%rip)
8d49(2): mov %eax,%ebx
8d4b(5): nop 0x0(%rax,%rax,1)
8d50(5): mov 0x18(%rsp),%rcx
8d55(9): xor $0x28,%rcx
8d5e(2): mov %ebx,%eax
8d60(6): jnz 0x15d(%rip)
8d66(4): add $0x50,%rsp
8d6a(1): pop %rbx
8d6b(1): pop %rbp
8d6c(2): pop %r12
8d6e(1): ret near (%rsp)
8d6f(1): nop 
8d70(6): cmp $0x407,%esi
8d76(2): jnle 0x4a(%rip)
8d78(6): cmp $0x406,%esi
8d7e(2): jnl 0x72(%rip)
8d80(6): cmp $0x401,%esi
8d86(2): jz 0xffffffba(%rip)
8d88(6): cmp $0x402,%esi
8d8e(2): jz 0x62(%rip)
8d90(6): cmp $0x400,%esi
8d96(2): jz 0x5a(%rip)
8d98(3): mov (%rsp),%eax
8d9b(3): cmp $0x2f,%eax
8d9e(6): jnbe 0x13c(%rip)
8da4(5): add 0x10(%rsp),%rax
8da9(3): mov (%rax),%rdx
8dac(2): mov %ebp,%edi
8dae(2): xor %eax,%eax
8db0(5): call 0xffff8ac0(%rip)
8db5(2): mov %eax,%ebx
8db7(2): jmp 0xffffff99(%rip)
8db9(7): nop 0x0(%rax)
8dc0(6): cmp $0x409,%esi
8dc6(2): jz 0x2a(%rip)
8dc8(6): jl 0xffffff78(%rip)
8dce(6): cmp $0x40a,%esi
8dd4(2): jnz 0xffffffc4(%rip)
8dd6(5): jmp 0xffffff6a(%rip)
8ddb(5): nop 0x0(%rax,%rax,1)
8de0(3): cmp $0x9,%esi
8de3(6): jz 0xffffff5d(%rip)
8de9(2): jnle 0x7(%rip)
8deb(3): cmp $0x8,%esi
8dee(2): jnz 0xffffffaa(%rip)
8df0(3): mov (%rsp),%eax
8df3(3): cmp $0x2f,%eax
8df6(6): jnbe 0xee(%rip)
8dfc(5): add 0x10(%rsp),%rax
8e01(2): mov (%rax),%edx
8e03(2): mov %ebp,%edi
8e05(2): xor %eax,%eax
8e07(5): call 0xffff8a69(%rip)
8e0c(2): mov %eax,%ebx
8e0e(5): jmp 0xffffff42(%rip)
8e13(2): xor %esi,%esi
8e15(2): xor %eax,%eax
8e17(5): call 0xffff8a59(%rip)
8e1c(2): test %eax,%eax
8e1e(2): mov %eax,%ebx
8e20(6): js 0xffffff30(%rip)
8e26(7): cmp $0xff,0x20444b(%rip)
8e2d(6): jnz 0xffffff23(%rip)
8e33(2): xor %eax,%eax
8e35(5): mov $0x1,%esi
8e3a(2): mov %ebx,%edi
8e3c(5): call 0xffff8a34(%rip)
8e41(2): test %eax,%eax
8e43(2): js 0x1e(%rip)
8e45(3): or $0x1,%eax
8e48(5): mov $0x2,%esi
8e4d(2): mov %ebx,%edi
8e4f(2): mov %eax,%edx
8e51(2): xor %eax,%eax
8e53(5): call 0xffff8a1d(%rip)
8e58(3): cmp $0xff,%eax
8e5b(6): jnz 0xfffffef5(%rip)
8e61(5): call 0xffff89af(%rip)
8e66(3): mov (%rax),%r12d
8e69(3): mov %rax,%rbp
8e6c(2): mov %ebx,%edi
8e6e(5): call 0xffff8b12(%rip)
8e73(5): mov $0xffffffff,%ebx
8e78(4): mov %r12d,0x0(%rbp)
8e7c(5): jmp 0xfffffed4(%rip)
8e81(7): nop 0x0(%rax)
8e88(5): call 0xffff8988(%rip)
8e8d(3): cmp $0x16,(%rax)
8e90(6): jnz 0xfffffe6f(%rip)
8e96(2): xor %esi,%esi
8e98(2): xor %eax,%eax
8e9a(3): mov %r12d,%edx
8e9d(2): mov %ebp,%edi
8e9f(5): call 0xffff89d1(%rip)
8ea4(2): test %eax,%eax
8ea6(2): mov %eax,%ebx
8ea8(6): js 0xfffffea8(%rip)
8eae(a): mov $0xffffffff,0x2043c0(%rip)
8eb8(5): jmp 0xffffff7b(%rip)
8ebd(5): call 0xffff8a23(%rip)
8ec2(5): mov 0x10(%rsp),%rax
8ec7(2): xor %esi,%esi
8ec9(3): mov 0x10(%rax),%edx
8ecc(2): xor %eax,%eax
8ece(5): call 0xffff89a2(%rip)
8ed3(2): mov %eax,%ebx
8ed5(5): jmp 0xfffffe7b(%rip)
8eda(5): mov 0x8(%rsp),%rax
8edf(5): jmp 0xfffffeca(%rip)
8ee4(5): mov 0x8(%rsp),%rax
8ee9(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
8ef0(3): test %rdi,%rdi
8ef3(1): push %rbx
8ef4(3): mov %rdi,%rbx
8ef7(2): jz 0x13(%rip)
8ef9(5): call 0xffff8b67(%rip)
8efe(2): test %eax,%eax
8f00(2): jz 0xa(%rip)
8f02(6): test $0x100,(%rbx)
8f08(2): jnz 0x10(%rip)
8f0a(3): mov %rbx,%rdi
8f0d(1): pop %rbx
8f0e(5): jmp 0xffff8b32(%rip)
8f13(5): nop 0x0(%rax,%rax,1)
8f18(3): mov %rbx,%rdi
8f1b(5): mov $0x1,%edx
8f20(2): xor %esi,%esi
8f22(5): call 0xe(%rip)
8f27(3): mov %rbx,%rdi
8f2a(1): pop %rbx
8f2b(5): jmp 0xffff8b15(%rip)

"rpl_fseeko" :
8f30(4): mov 0x8(%rdi),%rax
8f34(4): cmp %rax,0x10(%rdi)
8f38(2): jz 0x8(%rip)
8f3a(5): jmp 0xffff8ba6(%rip)
8f3f(1): nop 
8f40(4): mov 0x20(%rdi),%rax
8f44(4): cmp %rax,0x28(%rdi)
8f48(2): jnz 0xfffffff2(%rip)
8f4a(5): cmp $0x0,0x48(%rdi)
8f4f(2): jnz 0xffffffeb(%rip)
8f51(2): push %r12
8f53(1): push %rbp
8f54(3): mov %edx,%r12d
8f57(1): push %rbx
8f58(3): mov %rsi,%rbp
8f5b(3): mov %rdi,%rbx
8f5e(5): call 0xffff8ac2(%rip)
8f63(3): mov %r12d,%edx
8f66(3): mov %rbp,%rsi
8f69(2): mov %eax,%edi
8f6b(5): call 0xffff89d5(%rip)
8f70(4): cmp $0xffffffff,%rax
8f74(2): jz 0xe(%rip)
8f76(3): and $0xef,(%rbx)
8f79(7): mov %rax,0x90(%rbx)
8f80(2): xor %eax,%eax
8f82(1): pop %rbx
8f83(1): pop %rbp
8f84(2): pop %r12
8f86(1): ret near (%rsp)

"rpl_mbrtowc" :
8f90(2): push %r13
8f92(2): push %r12
8f94(3): mov %rsi,%r13
8f97(1): push %rbp
8f98(1): push %rbx
8f99(3): mov %rdi,%rbx
8f9c(3): mov %rdx,%r12
8f9f(4): sub $0x18,%rsp
8fa3(9): mov $0x28,%rax
8fac(5): mov %rax,0x8(%rsp)
8fb1(2): xor %eax,%eax
8fb3(5): lea 0x4(%rsp),%rax
8fb8(3): test %rdi,%rdi
8fbb(4): cmove %rax,%rbx
8fbf(3): mov %rbx,%rdi
8fc2(5): call 0xffff893e(%rip)
8fc7(4): cmp $0xfffffffd,%rax
8fcb(3): mov %rax,%rbp
8fce(2): jbe 0x22(%rip)
8fd0(3): test %r12,%r12
8fd3(2): jz 0x1d(%rip)
8fd5(2): xor %edi,%edi
8fd7(5): call 0xc9(%rip)
8fdc(2): test %al,%al
8fde(2): jnz 0x12(%rip)
8fe0(5): movzx 0x0(%r13),%eax
8fe5(5): mov $0x1,%ebp
8fea(2): mov %eax,(%rbx)
8fec(4): nop 0x0(%rax)
8ff0(5): mov 0x8(%rsp),%rdx
8ff5(9): xor $0x28,%rdx
8ffe(3): mov %rbp,%rax
9001(2): jnz 0xd(%rip)
9003(4): add $0x18,%rsp
9007(1): pop %rbx
9008(1): pop %rbp
9009(2): pop %r12
900b(2): pop %r13
900d(1): ret near (%rsp)
900e(5): call 0xffff88d2(%rip)

"close_stream" :
9020(2): push %r12
9022(1): push %rbp
9023(3): mov %rdi,%rbp
9026(1): push %rbx
9027(5): call 0xffff8819(%rip)
902c(3): mov 0x0(%rbp),%ebx
902f(3): mov %rbp,%rdi
9032(3): mov %rax,%r12
9035(5): call 0xfffffbbb(%rip)
903a(3): and $0x20,%ebx
903d(2): test %ebx,%ebx
903f(2): jnz 0x19(%rip)
9041(2): test %eax,%eax
9043(2): jz 0xc(%rip)
9045(3): test %r12,%r12
9048(5): mov $0xffffffff,%eax
904d(2): jz 0x3b(%rip)
904f(1): pop %rbx
9050(1): pop %rbp
9051(2): pop %r12
9053(1): ret near (%rsp)
9054(4): nop 0x0(%rax)
9058(2): test %eax,%eax
905a(2): jnz 0x1e(%rip)
905c(5): call 0xffff87b4(%rip)
9061(6): mov $0x0,(%rax)
9067(5): mov $0xffffffff,%eax
906c(1): pop %rbx
906d(1): pop %rbp
906e(2): pop %r12
9070(1): ret near (%rsp)
9071(7): nop 0x0(%rax)
9078(1): pop %rbx
9079(5): mov $0xffffffff,%eax
907e(1): pop %rbp
907f(2): pop %r12
9081(1): ret near (%rsp)
9082(6): nop 0x0(%rax,%rax,1)
9088(5): call 0xffff8788(%rip)
908d(3): cmp $0x9,(%rax)
9090(1): pop %rbx
9091(1): pop %rbp
9092(2): pop %r12
9094(3): setnz %al
9097(3): movzx %al,%eax
909a(2): neg %eax
909c(1): ret near (%rsp)

"hard_locale" :
90a0(4): sub $0x8,%rsp
90a4(2): xor %esi,%esi
90a6(5): call 0xffff89fa(%rip)
90ab(3): mov %rax,%rdx
90ae(5): mov $0x1,%eax
90b3(3): test %rdx,%rdx
90b6(2): jz 0x1f(%rip)
90b8(7): lea 0x1914(%rip),%rdi
90bf(5): mov $0x2,%ecx
90c4(3): mov %rdx,%rsi
90c7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
90c9(3): setnbe %cl
90cc(3): sbb $0x0,%cl
90cf(2): xor %eax,%eax
90d1(2): test %cl,%cl
90d3(2): jnz 0xd(%rip)
90d5(4): add $0x8,%rsp
90d9(1): ret near (%rsp)
90da(6): nop 0x0(%rax,%rax,1)
90e0(7): lea 0x18ee(%rip),%rdi
90e7(5): mov $0x6,%ecx
90ec(3): mov %rdx,%rsi
90ef(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
90f1(3): setnbe %al
90f4(2): sbb $0x0,%al
90f6(2): test %al,%al
90f8(3): setnz %al
90fb(4): add $0x8,%rsp
90ff(1): ret near (%rsp)

"locale_charset" :
9100(4): sub $0x8,%rsp
9104(5): mov $0xe,%edi
9109(5): call 0xffff8947(%rip)
910e(3): test %rax,%rax
9111(2): jz 0x1f(%rip)
9113(3): cmp $0x0,(%rax)
9116(7): lea 0x18be(%rip),%rdx
911d(4): cmove %rdx,%rax
9121(4): add $0x8,%rsp
9125(1): ret near (%rsp)
9126(a): nop 0x0(%rax,%rax,1)
9130(7): lea 0x18a4(%rip),%rax
9137(4): add $0x8,%rsp
913b(1): ret near (%rsp)

"__libc_csu_init" :
9140(2): push %r15
9142(2): push %r14
9144(3): mov %rdx,%r15
9147(2): push %r13
9149(2): push %r12
914b(7): lea 0x20385e(%rip),%r12
9152(1): push %rbp
9153(7): lea 0x20385e(%rip),%rbp
915a(1): push %rbx
915b(3): mov %edi,%r13d
915e(3): mov %rsi,%r14
9161(3): sub %r12,%rbp
9164(4): sub $0x8,%rsp
9168(4): sar $0x3,%rbp
916c(5): call 0xffff865c(%rip)
9171(3): test %rbp,%rbp
9174(2): jz 0x22(%rip)
9176(2): xor %ebx,%ebx
9178(8): nop 0x0(%rax,%rax,1)
9180(3): mov %r15,%rdx
9183(3): mov %r14,%rsi
9186(3): mov %r13d,%edi
9189(4): call 0x0(%r12,%rbx,8)
918d(4): add $0x1,%rbx
9191(3): cmp %rbx,%rbp
9194(2): jnz 0xffffffec(%rip)
9196(4): add $0x8,%rsp
919a(1): pop %rbx
919b(1): pop %rbp
919c(2): pop %r12
919e(2): pop %r13
91a0(2): pop %r14
91a2(2): pop %r15
91a4(1): ret near (%rsp)

"atexit" :
91c0(7): mov 0x203e41(%rip),%rdx
91c7(2): xor %esi,%esi
91c9(5): jmp 0xffff8957(%rip)

"_fini" :
91d0(4): sub $0x8,%rsp
91d4(4): add $0x8,%rsp
91d8(1): ret near (%rsp)

