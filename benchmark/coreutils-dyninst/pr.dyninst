
"__ctype_toupper_loc@plt" :
1b60(6): jmp 0x20f23a(%rip)
1b66(5): push $0x0

"__uflow@plt" :
1b70(6): jmp 0x20f232(%rip)
1b76(5): push $0x1

"getenv@plt" :
1b80(6): jmp 0x20f22a(%rip)
1b86(5): push $0x2

"free@plt" :
1b90(6): jmp 0x20f222(%rip)
1b96(5): push $0x3

"abort@plt" :
1ba0(6): jmp 0x20f21a(%rip)
1ba6(5): push $0x4

"__errno_location@plt" :
1bb0(6): jmp 0x20f212(%rip)
1bb6(5): push $0x5

"strncmp@plt" :
1bc0(6): jmp 0x20f20a(%rip)
1bc6(5): push $0x6

"localtime_r@plt" :
1bd0(6): jmp 0x20f202(%rip)
1bd6(5): push $0x7

"_exit@plt" :
1be0(6): jmp 0x20f1fa(%rip)
1be6(5): push $0x8

"__fpending@plt" :
1bf0(6): jmp 0x20f1f2(%rip)
1bf6(5): push $0x9

"iswcntrl@plt" :
1c00(6): jmp 0x20f1ea(%rip)
1c06(5): push $0xa

"fcntl@plt" :
1c10(6): jmp 0x20f1e2(%rip)
1c16(5): push $0xb

"clock_gettime@plt" :
1c20(6): jmp 0x20f1da(%rip)
1c26(5): push $0xc

"setenv@plt" :
1c30(6): jmp 0x20f1d2(%rip)
1c36(5): push $0xd

"textdomain@plt" :
1c40(6): jmp 0x20f1ca(%rip)
1c46(5): push $0xe

"__strtol_internal@plt" :
1c50(6): jmp 0x20f1c2(%rip)
1c56(5): push $0xf

"fclose@plt" :
1c60(6): jmp 0x20f1ba(%rip)
1c66(5): push $0x10

"bindtextdomain@plt" :
1c70(6): jmp 0x20f1b2(%rip)
1c76(5): push $0x11

"dcgettext@plt" :
1c80(6): jmp 0x20f1aa(%rip)
1c86(5): push $0x12

"__ctype_get_mb_cur_max@plt" :
1c90(6): jmp 0x20f1a2(%rip)
1c96(5): push $0x13

"strlen@plt" :
1ca0(6): jmp 0x20f19a(%rip)
1ca6(5): push $0x14

"__stack_chk_fail@plt" :
1cb0(6): jmp 0x20f192(%rip)
1cb6(5): push $0x15

"getopt_long@plt" :
1cc0(6): jmp 0x20f18a(%rip)
1cc6(5): push $0x16

"mbrtowc@plt" :
1cd0(6): jmp 0x20f182(%rip)
1cd6(5): push $0x17

"strchr@plt" :
1ce0(6): jmp 0x20f17a(%rip)
1ce6(5): push $0x18

"__overflow@plt" :
1cf0(6): jmp 0x20f172(%rip)
1cf6(5): push $0x19

"strrchr@plt" :
1d00(6): jmp 0x20f16a(%rip)
1d06(5): push $0x1a

"gmtime_r@plt" :
1d10(6): jmp 0x20f162(%rip)
1d16(5): push $0x1b

"lseek@plt" :
1d20(6): jmp 0x20f15a(%rip)
1d26(5): push $0x1c

"__assert_fail@plt" :
1d30(6): jmp 0x20f152(%rip)
1d36(5): push $0x1d

"__strtoul_internal@plt" :
1d40(6): jmp 0x20f14a(%rip)
1d46(5): push $0x1e

"memset@plt" :
1d50(6): jmp 0x20f142(%rip)
1d56(5): push $0x1f

"close@plt" :
1d60(6): jmp 0x20f13a(%rip)
1d66(5): push $0x20

"posix_fadvise@plt" :
1d70(6): jmp 0x20f132(%rip)
1d76(5): push $0x21

"memcmp@plt" :
1d80(6): jmp 0x20f12a(%rip)
1d86(5): push $0x22

"fputs_unlocked@plt" :
1d90(6): jmp 0x20f122(%rip)
1d96(5): push $0x23

"calloc@plt" :
1da0(6): jmp 0x20f11a(%rip)
1da6(5): push $0x24

"strcmp@plt" :
1db0(6): jmp 0x20f112(%rip)
1db6(5): push $0x25

"strtol@plt" :
1dc0(6): jmp 0x20f10a(%rip)
1dc6(5): push $0x26

"memcpy@plt" :
1dd0(6): jmp 0x20f102(%rip)
1dd6(5): push $0x27

"tzset@plt" :
1de0(6): jmp 0x20f0fa(%rip)
1de6(5): push $0x28

"fileno@plt" :
1df0(6): jmp 0x20f0f2(%rip)
1df6(5): push $0x29

"wcwidth@plt" :
1e00(6): jmp 0x20f0ea(%rip)
1e06(5): push $0x2a

"malloc@plt" :
1e10(6): jmp 0x20f0e2(%rip)
1e16(5): push $0x2b

"fflush@plt" :
1e20(6): jmp 0x20f0da(%rip)
1e26(5): push $0x2c

"nl_langinfo@plt" :
1e30(6): jmp 0x20f0d2(%rip)
1e36(5): push $0x2d

"ungetc@plt" :
1e40(6): jmp 0x20f0ca(%rip)
1e46(5): push $0x2e

"__fxstat@plt" :
1e50(6): jmp 0x20f0c2(%rip)
1e56(5): push $0x2f

"mktime@plt" :
1e60(6): jmp 0x20f0ba(%rip)
1e66(5): push $0x30

"__freading@plt" :
1e70(6): jmp 0x20f0b2(%rip)
1e76(5): push $0x31

"realloc@plt" :
1e80(6): jmp 0x20f0aa(%rip)
1e86(5): push $0x32

"fdopen@plt" :
1e90(6): jmp 0x20f0a2(%rip)
1e96(5): push $0x33

"setlocale@plt" :
1ea0(6): jmp 0x20f09a(%rip)
1ea6(5): push $0x34

"__printf_chk@plt" :
1eb0(6): jmp 0x20f092(%rip)
1eb6(5): push $0x35

"timegm@plt" :
1ec0(6): jmp 0x20f08a(%rip)
1ec6(5): push $0x36

"strftime@plt" :
1ed0(6): jmp 0x20f082(%rip)
1ed6(5): push $0x37

"error@plt" :
1ee0(6): jmp 0x20f07a(%rip)
1ee6(5): push $0x38

"fseeko@plt" :
1ef0(6): jmp 0x20f072(%rip)
1ef6(5): push $0x39

"fopen@plt" :
1f00(6): jmp 0x20f06a(%rip)
1f06(5): push $0x3a

"unsetenv@plt" :
1f10(6): jmp 0x20f062(%rip)
1f16(5): push $0x3b

"__cxa_atexit@plt" :
1f20(6): jmp 0x20f05a(%rip)
1f26(5): push $0x3c

"exit@plt" :
1f30(6): jmp 0x20f052(%rip)
1f36(5): push $0x3d

"fwrite@plt" :
1f40(6): jmp 0x20f04a(%rip)
1f46(5): push $0x3e

"__fprintf_chk@plt" :
1f50(6): jmp 0x20f042(%rip)
1f56(5): push $0x3f

"mbsinit@plt" :
1f60(6): jmp 0x20f03a(%rip)
1f66(5): push $0x40

"iswprint@plt" :
1f70(6): jmp 0x20f032(%rip)
1f76(5): push $0x41

"__ctype_tolower_loc@plt" :
1f80(6): jmp 0x20f02a(%rip)
1f86(5): push $0x42

"__ctype_b_loc@plt" :
1f90(6): jmp 0x20f022(%rip)
1f96(5): push $0x43

"__sprintf_chk@plt" :
1fa0(6): jmp 0x20f01a(%rip)
1fa6(5): push $0x44

".plt.got" :
1fb0(6): jmp 0x20f032(%rip)
1fb6(2): nop 

"_init" :
1b30(4): sub $0x8,%rsp
1b34(7): mov 0x20f49d(%rip),%rax
1b3b(3): test %rax,%rax
1b3e(2): jz 0x4(%rip)
1b40(2): call %rax
1b42(4): add $0x8,%rsp
1b46(1): ret near (%rsp)

"main" :
1fc0(2): push %r15
1fc2(2): push %r14
1fc4(2): push %r13
1fc6(2): push %r12
1fc8(3): mov %edi,%r12d
1fcb(1): push %rbp
1fcc(1): push %rbx
1fcd(3): mov %rsi,%r13
1fd0(4): sub $0x58,%rsp
1fd4(3): mov (%rsi),%rdi
1fd7(9): mov $0x28,%rax
1fe0(5): mov %rax,0x48(%rsp)
1fe5(2): xor %eax,%eax
1fe7(9): mov $0x0,0x40(%rsp)
1ff0(5): call 0x59c0(%rip)
1ff5(7): lea 0x9ee9(%rip),%rsi
1ffc(5): mov $0x6,%edi
2001(5): call 0xfffffe9f(%rip)
2006(7): lea 0x9fb3(%rip),%rsi
200d(7): lea 0x9f65(%rip),%rdi
2014(5): call 0xfffffc5c(%rip)
2019(7): lea 0x9f59(%rip),%rdi
2020(5): call 0xfffffc20(%rip)
2025(7): lea 0x38f4(%rip),%rdi
202c(5): call 0x9e04(%rip)
2031(4): cmp $0x1,%r12d
2035(9): mov $0x0,0x20(%rsp)
203e(2): jle 0x18(%rip)
2040(5): lea 0xffffffff(%r12),%edi
2045(3): movsxd %edi,%rdi
2048(4): shl/sal $0x3,%rdi
204c(5): call 0x7cc4(%rip)
2051(5): mov %rax,0x20(%rsp)
2056(5): lea 0x40(%rsp),%rax
205b(5): lea 0x3c(%rsp),%r14
2060(7): lea 0xb379(%rip),%rbp
2067(2): xor %ebx,%ebx
2069(3): xor %r15d,%r15d
206c(5): mov $0x0,0x2f(%rsp)
2071(5): mov $0x0,0x2e(%rsp)
2076(5): mov $0x0,0x2d(%rsp)
207b(8): mov $0x0,0x28(%rsp)
2083(5): mov %rax,0x18(%rsp)
2088(8): nop 0x0(%rax,%rax,1)
2090(7): lea 0xb769(%rip),%rdx
2097(7): lea 0x20e742(%rip),%rcx
209e(3): mov %r14,%r8
20a1(3): mov %r13,%rsi
20a4(3): mov %r12d,%edi
20a7(8): mov $0xffffffff,0x3c(%rsp)
20af(5): call 0xfffffc11(%rip)
20b4(3): cmp $0xff,%eax
20b7(2): mov %eax,%edx
20b9(2): jz 0x6b(%rip)
20bb(3): lea 0xffffffd0(%rax),%eax
20be(3): cmp $0x9,%eax
20c1(2): jbe 0x1f(%rip)
20c3(6): add $0x83,%edx
20c9(6): cmp $0x104,%edx
20cf(6): jnbe 0x782(%rip)
20d5(5): movsxd 0x0(%rbp,%rdx,4),%rax
20da(3): add %rbp,%rax
20dd(2): jmp %rax
20df(1): nop 
20e0(4): lea 0x1(%rbx),%rcx
20e4(5): cmp 0x40(%rsp),%rcx
20e9(2): jnb 0x17(%rip)
20eb(4): mov %dl,0x0(%r15,%rbx,1)
20ef(5): mov $0x0,0x0(%r15,%rcx,1)
20f4(3): mov %rcx,%rbx
20f7(2): jmp 0xffffff99(%rip)
20f9(7): nop 0x0(%rax)
2100(5): mov 0x18(%rsp),%rsi
2105(3): mov %r15,%rdi
2108(4): mov %edx,0x14(%rsp)
210c(5): mov %rcx,0x8(%rsp)
2111(5): call 0x7d5f(%rip)
2116(4): mov 0x14(%rsp),%edx
211a(3): mov %rax,%r15
211d(5): mov 0x8(%rsp),%rcx
2122(2): jmp 0xffffffc9(%rip)
2124(3): test %r15,%r15
2127(2): jz 0x12(%rip)
2129(3): mov %r15,%rdi
212c(5): call 0xbb4(%rip)
2131(3): mov %r15,%rdi
2134(5): call 0xfffffa5c(%rip)
2139(8): cmp $0x0,0x20f02f(%rip)
2141(6): jz 0x647(%rip)
2147(7): lea 0x9ecc(%rip),%rdi
214e(5): call 0xfffffa32(%rip)
2153(3): mov %rax,%rdi
2156(5): call 0x96da(%rip)
215b(8): cmp $0x0,0x20f065(%rip)
2163(7): mov %rax,0x20effe(%rip)
216a(2): jnz 0xd(%rip)
216c(b): mov $0x1,0x20f051(%rip)
2177(7): movzx 0x20f081(%rip),%edi
217e(3): test %dil,%dil
2181(2): jz 0x1c(%rip)
2183(7): cmp $0x0,0x20f071(%rip)
218a(6): jnz 0x754(%rip)
2190(7): cmp $0x0,0x20f05e(%rip)
2197(6): jnz 0x6c4(%rip)
219d(5): cmp $0x0,0x2d(%rsp)
21a2(2): jz 0x34(%rip)
21a4(5): cmp $0x0,0x2e(%rsp)
21a9(6): jz 0x57e(%rip)
21af(3): test %dil,%dil
21b2(2): jnz 0xf(%rip)
21b4(7): cmp $0x0,0x20f040(%rip)
21bb(6): jz 0x683(%rip)
21c1(5): cmp $0x0,0x2f(%rsp)
21c6(7): mov $0x1,0x20f020(%rip)
21cd(2): jz 0x9(%rip)
21cf(7): mov $0x1,0x20efba(%rip)
21d6(6): mov 0x20ef1c(%rip),%eax
21dc(3): cmp %eax,%r12d
21df(2): jle 0x40(%rip)
21e1(4): mov 0x28(%rsp),%ecx
21e5(3): movsxd %eax,%rdx
21e8(3): mov %r12d,%esi
21eb(5): mov 0x20(%rsp),%r9
21f0(2): sub %eax,%esi
21f2(5): lea 0x0(%r13,%rdx,8),%rdx
21f7(2): mov %ecx,%eax
21f9(2): add %eax,%esi
21fb(5): nop 0x0(%rax,%rax,1)
2200(3): mov (%rdx),%r8
2203(3): add $0x1,%ecx
2206(4): add $0x8,%rdx
220a(2): cmp %esi,%ecx
220c(4): mov %r8,0x0(%r9,%rax,8)
2210(2): mov %ecx,%eax
2212(2): jnz 0xffffffee(%rip)
2214(4): mov %ecx,0x28(%rsp)
2218(7): mov %r12d,0x20eed9(%rip)
221f(5): cmp $0x0,0x28(%rsp)
2224(6): jz 0x4f5(%rip)
222a(3): test %dil,%dil
222d(6): jnz 0x5fe(%rip)
2233(4): mov 0x28(%rsp),%eax
2237(5): mov 0x20(%rsp),%rbx
223c(3): sub $0x1,%eax
223f(5): lea 0x8(%rbx,%rax,8),%rbp
2244(4): nop 0x0(%rax)
2248(3): mov %rbx,%rsi
224b(5): mov $0x1,%edi
2250(4): add $0x8,%rbx
2254(5): call 0x208c(%rip)
2259(3): cmp %rbx,%rbp
225c(2): jnz 0xffffffec(%rip)
225e(7): mov 0x20ef3b(%rip),%rdi
2265(5): call 0xfffff92b(%rip)
226a(7): mov 0x20eed7(%rip),%rdi
2271(5): call 0xfffff91f(%rip)
2276(7): mov 0x20efab(%rip),%rdi
227d(5): call 0xfffff913(%rip)
2282(7): mov 0x20ef7f(%rip),%rdi
2289(5): call 0xfffff907(%rip)
228e(7): mov 0x20ef6b(%rip),%rdi
2295(5): call 0xfffff8fb(%rip)
229a(7): mov 0x20ef7f(%rip),%rdi
22a1(5): call 0xfffff8ef(%rip)
22a6(7): cmp $0x0,0x20ef49(%rip)
22ad(6): jnz 0x53d(%rip)
22b3(5): mov 0x48(%rsp),%rbx
22b8(9): xor $0x28,%rbx
22c1(7): movzx 0x20ef08(%rip),%eax
22c8(6): jnz 0x611(%rip)
22ce(4): add $0x58,%rsp
22d2(1): pop %rbx
22d3(1): pop %rbp
22d4(2): pop %r12
22d6(2): pop %r13
22d8(2): pop %r14
22da(2): pop %r15
22dc(1): ret near (%rsp)
22dd(7): mov 0x20ee1c(%rip),%rdx
22e4(3): test %rdx,%rdx
22e7(6): jz 0x598(%rip)
22ed(4): mov 0x3c(%rsp),%edi
22f1(2): xor %esi,%esi
22f3(5): call 0x88d(%rip)
22f8(2): test %al,%al
22fa(6): jz 0x5a9(%rip)
2300(2): xor %ebx,%ebx
2302(5): jmp 0xfffffd8e(%rip)
2307(7): mov 0x20edf2(%rip),%rdi
230e(2): xor %ebx,%ebx
2310(5): call 0x9d0(%rip)
2315(3): mov %r15,%rdi
2318(3): xor %r15d,%r15d
231b(5): call 0xfffff875(%rip)
2320(9): mov $0x0,0x40(%rsp)
2329(5): jmp 0xfffffd67(%rip)
232e(7): lea 0xafb3(%rip),%rsi
2335(2): xor %edi,%edi
2337(5): mov $0x5,%edx
233c(5): call 0xfffff944(%rip)
2341(7): mov 0x20edb8(%rip),%rdi
2348(7): lea 0x9b96(%rip),%rcx
234f(3): xor %r9d,%r9d
2352(5): mov $0x1,%esi
2357(3): mov %rax,%r8
235a(5): mov $0x7fffffff,%edx
235f(5): call 0x7d61(%rip)
2364(7): movzx 0x20ee82(%rip),%esi
236b(3): test %sil,%sil
236e(5): mov %sil,0x2d(%rsp)
2373(5): mov %sil,0x2e(%rsp)
2378(2): jnz 0xffffff88(%rip)
237a(6): mov %eax,0x20ecc4(%rip)
2380(5): mov $0x1,0x2e(%rsp)
2385(2): xor %ebx,%ebx
2387(5): mov $0x1,0x2d(%rsp)
238c(5): jmp 0xfffffd04(%rip)
2391(7): mov $0x1,0x20ee02(%rip)
2398(2): xor %ebx,%ebx
239a(5): jmp 0xfffffcf6(%rip)
239f(7): mov $0x0,0x20eca7(%rip)
23a6(7): mov $0x1,0x20ee4d(%rip)
23ad(2): xor %ebx,%ebx
23af(5): jmp 0xfffffce1(%rip)
23b4(7): movzx 0x20edd5(%rip),%eax
23bb(2): test %al,%al
23bd(4): mov %al,0x2d(%rsp)
23c1(4): mov %al,0x2f(%rsp)
23c5(6): jnz 0xffffff3b(%rip)
23cb(7): mov 0x20ed2e(%rip),%rdi
23d2(3): test %rdi,%rdi
23d5(6): jz 0x3a2(%rip)
23db(5): call 0x8d5(%rip)
23e0(2): xor %ebx,%ebx
23e2(5): mov $0x1,0x2f(%rsp)
23e7(5): mov $0x1,0x2d(%rsp)
23ec(5): jmp 0xfffffca4(%rip)
23f1(7): mov $0x1,0x20ed99(%rip)
23f8(2): xor %ebx,%ebx
23fa(5): jmp 0xfffffc96(%rip)
23ff(7): lea 0xaec2(%rip),%rsi
2406(5): mov $0x5,%edx
240b(2): xor %edi,%edi
240d(2): xor %ebx,%ebx
240f(5): call 0xfffff871(%rip)
2414(7): mov 0x20ece5(%rip),%rdi
241b(7): lea 0x9ac3(%rip),%rcx
2422(3): mov %rax,%r8
2425(3): xor %r9d,%r9d
2428(5): mov $0x7fffffff,%edx
242d(2): xor %esi,%esi
242f(5): call 0x7c91(%rip)
2434(6): mov %eax,0x20eda2(%rip)
243a(5): jmp 0xfffffc56(%rip)
243f(7): mov 0x20ecba(%rip),%rdi
2446(7): mov $0x1,0x20ed5f(%rip)
244d(3): test %rdi,%rdi
2450(6): jz 0xfffffeb0(%rip)
2456(7): lea 0x20ebb3(%rip),%rcx
245d(7): lea 0x20ebbc(%rip),%rdx
2464(5): mov $0x6e,%esi
2469(2): xor %ebx,%ebx
246b(5): call 0x33a5(%rip)
2470(5): jmp 0xfffffc20(%rip)
2475(7): mov $0x1,0x20ed83(%rip)
247c(7): mov $0x0,0x20ebc9(%rip)
2483(2): xor %ebx,%ebx
2485(5): jmp 0xfffffc0b(%rip)
248a(7): lea 0xadd7(%rip),%rsi
2491(5): mov $0x5,%edx
2496(2): xor %edi,%edi
2498(2): xor %ebx,%ebx
249a(5): call 0xfffff7e6(%rip)
249f(7): mov 0x20ec5a(%rip),%rdi
24a6(7): lea 0x9a38(%rip),%rcx
24ad(3): mov %rax,%r8
24b0(3): xor %r9d,%r9d
24b3(5): mov $0x7fffffff,%edx
24b8(5): mov $0x1,%esi
24bd(5): call 0x7c03(%rip)
24c2(6): mov %eax,0x20eb80(%rip)
24c8(5): jmp 0xfffffbc8(%rip)
24cd(7): mov 0x20ec2c(%rip),%rdi
24d4(3): test %rdi,%rdi
24d7(2): jz 0x1a(%rip)
24d9(7): lea 0x20eb54(%rip),%rcx
24e0(7): lea 0x20eb51(%rip),%rdx
24e7(5): mov $0x69,%esi
24ec(5): call 0x3324(%rip)
24f1(7): mov $0x1,0x20ecec(%rip)
24f8(2): xor %ebx,%ebx
24fa(5): jmp 0xfffffb96(%rip)
24ff(7): mov 0x20ebfa(%rip),%rax
2506(2): xor %ebx,%ebx
2508(7): mov %rax,0x20ec69(%rip)
250f(5): jmp 0xfffffb81(%rip)
2514(7): mov 0x20ebe5(%rip),%rdi
251b(3): test %rdi,%rdi
251e(2): jz 0x1a(%rip)
2520(7): lea 0x20eb15(%rip),%rcx
2527(7): lea 0x20eb12(%rip),%rdx
252e(5): mov $0x65,%esi
2533(5): call 0x32dd(%rip)
2538(7): mov $0x1,0x20eca6(%rip)
253f(2): xor %ebx,%ebx
2541(5): jmp 0xfffffb4f(%rip)
2546(7): mov $0x1,0x20ec4b(%rip)
254d(2): xor %ebx,%ebx
254f(5): jmp 0xfffffb41(%rip)
2554(7): mov $0x1,0x20ec3e(%rip)
255b(2): xor %ebx,%ebx
255d(5): jmp 0xfffffb33(%rip)
2562(7): mov $0x1,0x20ec8b(%rip)
2569(2): xor %ebx,%ebx
256b(5): jmp 0xfffffb25(%rip)
2570(7): mov $0x1,0x20ec7e(%rip)
2577(7): mov $0x0,0x20eace(%rip)
257e(2): xor %ebx,%ebx
2580(5): jmp 0xfffffb10(%rip)
2585(7): lea 0xad8c(%rip),%rsi
258c(5): mov $0x5,%edx
2591(2): xor %edi,%edi
2593(7): mov $0x1,0x20ec53(%rip)
259a(2): xor %ebx,%ebx
259c(5): call 0xfffff6e4(%rip)
25a1(7): mov 0x20eb58(%rip),%rdi
25a8(7): lea 0x9936(%rip),%rcx
25af(3): mov %rax,%r8
25b2(3): xor %r9d,%r9d
25b5(5): mov $0x7fffffff,%edx
25ba(5): mov $0x1,%esi
25bf(5): call 0x7b01(%rip)
25c4(5): mov $0x0,0x2e(%rsp)
25c9(6): mov %eax,0x20ea75(%rip)
25cf(5): jmp 0xfffffac1(%rip)
25d4(7): mov $0x0,0x20ea72(%rip)
25db(7): mov $0x0,0x20ec18(%rip)
25e2(2): xor %ebx,%ebx
25e4(5): jmp 0xfffffaac(%rip)
25e9(7): mov 0x20eb10(%rip),%rdi
25f0(7): lea 0x98ee(%rip),%rax
25f7(a): mov $0x0,0x20eb8b(%rip)
2601(7): mov $0x1,0x20eb88(%rip)
2608(5): mov $0x0,0x2f(%rsp)
260d(7): mov %rax,0x20ea3c(%rip)
2614(3): test %rdi,%rdi
2617(6): jz 0xfffffce9(%rip)
261d(5): call 0x693(%rip)
2622(2): xor %ebx,%ebx
2624(5): jmp 0xfffffa6c(%rip)
2629(7): lea 0xac68(%rip),%rsi
2630(5): mov $0x5,%edx
2635(2): xor %edi,%edi
2637(7): mov $0x0,0x20e9da(%rip)
263e(2): xor %ebx,%ebx
2640(5): call 0xfffff640(%rip)
2645(7): mov 0x20eab4(%rip),%rdi
264c(7): lea 0x9892(%rip),%rcx
2653(3): mov %rax,%r8
2656(3): xor %r9d,%r9d
2659(5): mov $0x7fffffff,%edx
265e(7): mov $0x80000000,%rsi
2665(5): call 0x7a5b(%rip)
266a(6): mov %eax,0x20e9a4(%rip)
2670(5): jmp 0xfffffa20(%rip)
2675(7): mov $0x1,0x20eb70(%rip)
267c(2): xor %ebx,%ebx
267e(5): jmp 0xfffffa12(%rip)
2683(7): mov $0x1,0x20eb6d(%rip)
268a(2): xor %ebx,%ebx
268c(5): jmp 0xfffffa04(%rip)
2691(7): mov 0x20ea68(%rip),%rax
2698(2): xor %ebx,%ebx
269a(7): mov %rax,0x20eacf(%rip)
26a1(5): jmp 0xfffff9ef(%rip)
26a6(8): cmp $0x0,0x20eb1a(%rip)
26ae(7): mov 0x20ea4b(%rip),%rax
26b5(2): jnz 0xb(%rip)
26b7(3): cmp $0x2b,(%rax)
26ba(6): jz 0x100(%rip)
26c0(4): mov 0x28(%rsp),%edx
26c4(5): mov 0x20(%rsp),%rsi
26c9(2): xor %ebx,%ebx
26cb(4): mov %rax,0x0(%rsi,%rdx,8)
26cf(3): lea 0x1(%rdx),%eax
26d2(4): mov %eax,0x28(%rsp)
26d6(5): jmp 0xfffff9ba(%rip)
26db(4): sub $0x8,%rsp
26df(7): mov 0x20ea02(%rip),%rdi
26e6(7): mov 0x20e96b(%rip),%rcx
26ed(2): push $0x0
26ef(7): lea 0x98f8(%rip),%r9
26f6(7): lea 0x9900(%rip),%r8
26fd(7): lea 0x9871(%rip),%rdx
2704(7): lea 0x97f1(%rip),%rsi
270b(2): xor %eax,%eax
270d(5): call 0x74a3(%rip)
2712(2): xor %edi,%edi
2714(5): call 0xfffff81c(%rip)
2719(2): xor %esi,%esi
271b(2): xor %edi,%edi
271d(5): call 0x1bc3(%rip)
2722(5): jmp 0xfffffb3c(%rip)
2727(7): cmp $0x1,0x20ea62(%rip)
272e(6): jz 0xfffffaa8(%rip)
2734(5): cmp $0x0,0x2f(%rsp)
2739(6): jz 0xfffffa9d(%rip)
273f(3): test %dil,%dil
2742(2): jnz 0xf(%rip)
2744(7): cmp $0x0,0x20eab0(%rip)
274b(6): jz 0xfffffa8b(%rip)
2751(7): cmp $0x0,0x20ea95(%rip)
2758(6): jnz 0xfffffa77(%rip)
275e(7): cmp $0x0,0x20ea27(%rip)
2765(7): mov $0x1,0x20ea80(%rip)
276c(6): jnle 0xfffffa63(%rip)
2772(5): jmp 0xfffffa64(%rip)
2777(5): mov $0x1,0x2f(%rsp)
277c(5): mov $0x1,0x2d(%rsp)
2781(2): xor %ebx,%ebx
2783(5): jmp 0xfffff90d(%rip)
2788(7): lea 0x987b(%rip),%rdi
278f(5): call 0xfffff3f1(%rip)
2794(3): test %rax,%rax
2797(2): jz 0x4a(%rip)
2799(5): mov $0x2,%edi
279e(5): call 0x3372(%rip)
27a3(2): test %al,%al
27a5(7): lea 0x97f6(%rip),%rdx
27ac(2): jnz 0x35(%rip)
27ae(7): mov %rdx,0x20e9bb(%rip)
27b5(5): jmp 0xfffff992(%rip)
27ba(4): lea 0x1(%rax),%rdx
27be(5): mov $0x2b,%esi
27c3(5): mov $0xfffffffe,%edi
27c8(5): call 0x3b8(%rip)
27cd(2): test %al,%al
27cf(6): jnz 0xfffffb31(%rip)
27d5(7): mov 0x20e924(%rip),%rax
27dc(5): jmp 0xfffffee4(%rip)
27e1(7): lea 0x97c9(%rip),%rdx
27e8(2): jmp 0xffffffc6(%rip)
27ea(7): mov 0x20e8ff(%rip),%rdi
27f1(5): call 0x8b4f(%rip)
27f6(3): add $0x1,%eax
27f9(6): jnz 0xfffffaba(%rip)
27ff(7): lea 0x96cf(%rip),%rsi
2806(5): mov $0x5,%edx
280b(2): xor %edi,%edi
280d(5): call 0xfffff473(%rip)
2812(3): mov %rax,%rbx
2815(5): call 0xfffff39b(%rip)
281a(2): mov (%rax),%esi
281c(3): mov %rbx,%rdx
281f(5): mov $0x1,%edi
2824(2): xor %eax,%eax
2826(5): call 0xfffff6ba(%rip)
282b(5): mov 0x20(%rsp),%rsi
2830(4): mov 0x28(%rsp),%edi
2834(5): call 0x1aac(%rip)
2839(5): jmp 0xfffffa25(%rip)
283e(7): mov $0x1,0x20e9a7(%rip)
2845(5): jmp 0xfffff991(%rip)
284a(2): xor %edi,%edi
284c(5): call 0x2a54(%rip)
2851(5): mov $0x1,%edi
2856(5): call 0x2a4a(%rip)
285b(7): lea 0xab26(%rip),%rsi
2862(5): mov $0x5,%edx
2867(2): xor %edi,%edi
2869(5): call 0xfffff417(%rip)
286e(2): xor %esi,%esi
2870(3): mov %rax,%rdx
2873(5): mov $0x1,%edi
2878(2): xor %eax,%eax
287a(5): call 0xfffff666(%rip)
287f(7): lea 0xa9aa(%rip),%rsi
2886(5): mov $0x5,%edx
288b(2): xor %edi,%edi
288d(5): call 0xfffff3f3(%rip)
2892(2): xor %esi,%esi
2894(3): mov %rax,%rdx
2897(5): mov $0x1,%edi
289c(2): xor %eax,%eax
289e(5): call 0xfffff642(%rip)
28a3(7): mov 0x20e856(%rip),%rdi
28aa(5): call 0x6e16(%rip)
28af(7): lea 0x9722(%rip),%rsi
28b6(3): mov %rax,%rbx
28b9(5): mov $0x5,%edx
28be(2): xor %edi,%edi
28c0(5): call 0xfffff3c0(%rip)
28c5(3): mov %rbx,%rcx
28c8(3): mov %rax,%rdx
28cb(2): xor %esi,%esi
28cd(5): mov $0x1,%edi
28d2(2): xor %eax,%eax
28d4(5): call 0xfffff60c(%rip)
28d9(5): call 0xfffff3d7(%rip)
28de(7): lea 0xaa63(%rip),%rsi
28e5(5): mov $0x5,%edx
28ea(2): xor %edi,%edi
28ec(5): call 0xfffff394(%rip)
28f1(2): xor %esi,%esi
28f3(3): mov %rax,%rdx
28f6(5): mov $0x1,%edi
28fb(2): xor %eax,%eax
28fd(5): call 0xfffff5e3(%rip)
2902(a): nop 0x0(%rax,%rax,1)
290c(4): nop 0x0(%rax)
2910(2): xor %ebp,%ebp
2912(3): mov %rdx,%r9
2915(1): pop %rsi
2916(3): mov %rsp,%rdx
2919(4): and $0xfffffff0,%rsp
291d(1): push %rax
291e(1): push %rsp
291f(7): lea 0x94fa(%rip),%r8
2926(7): lea 0x9483(%rip),%rcx
292d(7): lea 0xfffff68c(%rip),%rdi
2934(6): call 0x20e696(%rip)
293a(1): hlt 

"_start" :
2910(2): xor %ebp,%ebp
2912(3): mov %rdx,%r9
2915(1): pop %rsi
2916(3): mov %rsp,%rdx
2919(4): and $0xfffffff0,%rsp
291d(1): push %rax
291e(1): push %rsp
291f(7): lea 0x94fa(%rip),%r8
2926(7): lea 0x9483(%rip),%rcx
292d(7): lea 0xfffff68c(%rip),%rdi
2934(6): call 0x20e696(%rip)
293a(1): hlt 

"deregister_tm_clones" :
2940(7): lea 0x20e799(%rip),%rdi
2947(1): push %rbp
2948(7): lea 0x20e791(%rip),%rax
294f(3): cmp %rdi,%rax
2952(3): mov %rsp,%rbp
2955(2): jz 0x1b(%rip)
2957(7): mov 0x20e66a(%rip),%rax
295e(3): test %rax,%rax
2961(2): jz 0xf(%rip)
2963(1): pop %rbp
2964(2): jmp %rax
2966(a): nop 0x0(%rax,%rax,1)
2970(1): pop %rbp
2971(1): ret near (%rsp)

"register_tm_clones" :
2980(7): lea 0x20e759(%rip),%rdi
2987(7): lea 0x20e752(%rip),%rsi
298e(1): push %rbp
298f(3): sub %rdi,%rsi
2992(3): mov %rsp,%rbp
2995(4): sar $0x3,%rsi
2999(3): mov %rsi,%rax
299c(4): shr $0x3f,%rax
29a0(3): add %rax,%rsi
29a3(3): sar $0x1,%rsi
29a6(2): jz 0x1a(%rip)
29a8(7): mov 0x20e631(%rip),%rax
29af(3): test %rax,%rax
29b2(2): jz 0xe(%rip)
29b4(1): pop %rbp
29b5(2): jmp %rax
29b7(9): nop 0x0(%rax,%rax,1)
29c0(1): pop %rbp
29c1(1): ret near (%rsp)

"__do_global_dtors_aux" :
29d0(7): cmp $0x0,0x20e751(%rip)
29d7(2): jnz 0x31(%rip)
29d9(8): cmp $0x0,0x20e607(%rip)
29e1(1): push %rbp
29e2(3): mov %rsp,%rbp
29e5(2): jz 0xe(%rip)
29e7(7): mov 0x20e61a(%rip),%rdi
29ee(5): call 0xfffff5c2(%rip)
29f3(5): call 0xffffff4d(%rip)
29f8(7): mov $0x1,0x20e729(%rip)
29ff(1): pop %rbp
2a00(1): ret near (%rsp)
2a01(7): nop 0x0(%rax)
2a08(2): REP ret near (%rsp)

"frame_dummy" :
2a10(1): push %rbp
2a11(3): mov %rsp,%rbp
2a14(1): pop %rbp
2a15(5): jmp 0xffffff6b(%rip)

"cols_ready_to_print" :
2a20(6): mov 0x20e60a(%rip),%eax
2a26(7): mov 0x20e7fb(%rip),%rcx
2a2d(2): test %eax,%eax
2a2f(2): jz 0x47(%rip)
2a31(7): movzx 0x20e614(%rip),%esi
2a38(3): sub $0x1,%eax
2a3b(4): lea 0x10(%rcx),%rdx
2a3f(4): shl/sal $0x6,%rax
2a43(5): lea 0x50(%rcx,%rax,1),%rcx
2a48(2): xor %eax,%eax
2a4a(6): nop 0x0(%rax,%rax,1)
2a50(3): cmp $0x1,(%rdx)
2a53(2): jbe 0x17(%rip)
2a55(3): test %sil,%sil
2a58(2): jz 0x15(%rip)
2a5a(4): mov 0x1c(%rdx),%r8d
2a5e(3): test %r8d,%r8d
2a61(2): jle 0xc(%rip)
2a63(3): mov 0x20(%rdx),%edi
2a66(2): test %edi,%edi
2a68(2): jle 0x5(%rip)
2a6a(3): add $0x1,%eax
2a6d(4): add $0x40,%rdx
2a71(3): cmp %rcx,%rdx
2a74(2): jnz 0xffffffdc(%rip)
2a76(2): REP ret near (%rsp)

"reset_status" :
2a80(6): mov 0x20e5aa(%rip),%edx
2a86(7): mov 0x20e79b(%rip),%rdi
2a8d(2): test %edx,%edx
2a8f(2): jz 0x42(%rip)
2a91(3): sub $0x1,%edx
2a94(6): mov 0x20e726(%rip),%ecx
2a9a(4): lea 0x10(%rdi),%rax
2a9e(4): shl/sal $0x6,%rdx
2aa2(2): xor %esi,%esi
2aa4(5): lea 0x50(%rdi,%rdx,1),%rdx
2aa9(7): nop 0x0(%rax)
2ab0(3): cmp $0x2,(%rax)
2ab3(2): jnz 0x10(%rip)
2ab5(6): mov $0x0,(%rax)
2abb(3): add $0x1,%ecx
2abe(5): mov $0x1,%esi
2ac3(4): add $0x40,%rax
2ac7(3): cmp %rdx,%rax
2aca(2): jnz 0xffffffe6(%rip)
2acc(3): test %sil,%sil
2acf(2): jnz 0x1c(%rip)
2ad1(7): cmp $0x0,0x20e574(%rip)
2ad8(2): jz 0x11(%rip)
2ada(2): xor %eax,%eax
2adc(4): cmp $0x3,0x10(%rdi)
2ae0(3): setnz %al
2ae3(6): mov %eax,0x20e6d7(%rip)
2ae9(2): REP ret near (%rsp)
2aeb(6): mov %ecx,0x20e6cf(%rip)
2af1(2): jmp 0xffffffe0(%rip)

"store_char" :
2b00(6): mov 0x20e712(%rip),%ecx
2b06(1): push %rbx
2b07(2): mov %edi,%ebx
2b09(7): cmp 0x20e700(%rip),%rcx
2b10(7): mov 0x20e709(%rip),%rax
2b17(3): mov %rcx,%rdx
2b1a(2): jb 0x21(%rip)
2b1c(7): lea 0x20e6ed(%rip),%rsi
2b23(3): mov %rax,%rdi
2b26(5): call 0x734a(%rip)
2b2b(6): mov 0x20e6e7(%rip),%ecx
2b31(7): mov %rax,0x20e6e8(%rip)
2b38(3): mov %rcx,%rdx
2b3b(3): add $0x1,%edx
2b3e(3): mov %bl,0x0(%rax,%rcx,1)
2b41(6): mov %edx,0x20e6d1(%rip)
2b47(1): pop %rbx
2b48(1): ret near (%rsp)

"integer_overflow" :
2b50(7): lea 0x930d(%rip),%rsi
2b57(5): mov $0x5,%edx
2b5c(2): xor %edi,%edi
2b5e(4): sub $0x8,%rsp
2b62(5): call 0xfffff11e(%rip)
2b67(2): xor %esi,%esi
2b69(3): mov %rax,%rdx
2b6c(5): mov $0x1,%edi
2b71(2): xor %eax,%eax
2b73(5): call 0xfffff36d(%rip)
2b78(8): nop 0x0(%rax,%rax,1)
2b80(2): push %r14
2b82(2): push %r13
2b84(7): lea 0x935a(%rip),%r8
2b8b(2): push %r12
2b8d(1): push %rbp
2b8e(3): mov %edi,%r14d
2b91(1): push %rbx
2b92(3): mov %rdx,%rbx
2b95(3): mov %esi,%r13d
2b98(5): mov $0xa,%edx
2b9d(3): mov %rbx,%rdi
2ba0(4): sub $0x20,%rsp
2ba4(5): lea 0x8(%rsp),%rcx
2ba9(3): mov %rsp,%r12
2bac(9): mov $0xffffffff,0x10(%rsp)
2bb5(3): mov %r12,%rsi
2bb8(9): mov $0x28,%rax
2bc1(5): mov %rax,0x18(%rsp)
2bc6(2): xor %eax,%eax
2bc8(5): call 0x8358(%rip)
2bcd(5): test $0xfffffffd,%eax
2bd2(6): jnz 0xb6(%rip)
2bd8(4): mov (%rsp),%rdi
2bdc(3): cmp %rbx,%rdi
2bdf(2): jz 0x79(%rip)
2be1(6): cmp $0x0,0x8(%rsp)
2be7(2): jz 0x71(%rip)
2be9(3): movzx (%rdi),%eax
2bec(2): cmp $0x3a,%al
2bee(2): jz 0x2a(%rip)
2bf0(2): test %al,%al
2bf2(2): jnz 0x66(%rip)
2bf4(5): mov 0x8(%rsp),%rax
2bf9(7): mov %rax,0x20e5c8(%rip)
2c00(5): mov 0x10(%rsp),%rax
2c05(7): mov %rax,0x20e41c(%rip)
2c0c(5): mov $0x1,%eax
2c11(2): jmp 0x49(%rip)
2c13(5): nop 0x0(%rax,%rax,1)
2c18(4): lea 0x1(%rdi),%rbp
2c1c(5): lea 0x10(%rsp),%rcx
2c21(7): lea 0x92bd(%rip),%r8
2c28(5): mov $0xa,%edx
2c2d(3): mov %r12,%rsi
2c30(3): mov %rbp,%rdi
2c33(5): call 0x82ed(%rip)
2c38(2): test %eax,%eax
2c3a(2): jnz 0x4e(%rip)
2c3c(4): mov (%rsp),%rax
2c40(3): cmp %rbp,%rax
2c43(2): jz 0x15(%rip)
2c45(5): mov 0x8(%rsp),%rdx
2c4a(5): cmp %rdx,0x10(%rsp)
2c4f(2): jnb 0x31(%rip)
2c51(7): nop 0x0(%rax)
2c58(2): xor %eax,%eax
2c5a(5): mov 0x18(%rsp),%rsi
2c5f(9): xor $0x28,%rsi
2c68(2): jnz 0x38(%rip)
2c6a(4): add $0x20,%rsp
2c6e(1): pop %rbx
2c6f(1): pop %rbp
2c70(2): pop %r12
2c72(2): pop %r13
2c74(2): pop %r14
2c76(1): ret near (%rsp)
2c77(9): nop 0x0(%rax,%rax,1)
2c80(3): movzx (%rax),%eax
2c83(5): jmp 0xffffff6d(%rip)
2c88(7): lea 0x20db51(%rip),%rcx
2c8f(4): movsx %r13b,%edx
2c93(3): mov %rbx,%r8
2c96(3): mov %r14d,%esi
2c99(2): mov %eax,%edi
2c9b(5): call 0x81d5(%rip)
2ca0(5): call 0xfffff010(%rip)

"first_last_page" :
2b80(2): push %r14
2b82(2): push %r13
2b84(7): lea 0x935a(%rip),%r8
2b8b(2): push %r12
2b8d(1): push %rbp
2b8e(3): mov %edi,%r14d
2b91(1): push %rbx
2b92(3): mov %rdx,%rbx
2b95(3): mov %esi,%r13d
2b98(5): mov $0xa,%edx
2b9d(3): mov %rbx,%rdi
2ba0(4): sub $0x20,%rsp
2ba4(5): lea 0x8(%rsp),%rcx
2ba9(3): mov %rsp,%r12
2bac(9): mov $0xffffffff,0x10(%rsp)
2bb5(3): mov %r12,%rsi
2bb8(9): mov $0x28,%rax
2bc1(5): mov %rax,0x18(%rsp)
2bc6(2): xor %eax,%eax
2bc8(5): call 0x8358(%rip)
2bcd(5): test $0xfffffffd,%eax
2bd2(6): jnz 0xb6(%rip)
2bd8(4): mov (%rsp),%rdi
2bdc(3): cmp %rbx,%rdi
2bdf(2): jz 0x79(%rip)
2be1(6): cmp $0x0,0x8(%rsp)
2be7(2): jz 0x71(%rip)
2be9(3): movzx (%rdi),%eax
2bec(2): cmp $0x3a,%al
2bee(2): jz 0x2a(%rip)
2bf0(2): test %al,%al
2bf2(2): jnz 0x66(%rip)
2bf4(5): mov 0x8(%rsp),%rax
2bf9(7): mov %rax,0x20e5c8(%rip)
2c00(5): mov 0x10(%rsp),%rax
2c05(7): mov %rax,0x20e41c(%rip)
2c0c(5): mov $0x1,%eax
2c11(2): jmp 0x49(%rip)
2c13(5): nop 0x0(%rax,%rax,1)
2c18(4): lea 0x1(%rdi),%rbp
2c1c(5): lea 0x10(%rsp),%rcx
2c21(7): lea 0x92bd(%rip),%r8
2c28(5): mov $0xa,%edx
2c2d(3): mov %r12,%rsi
2c30(3): mov %rbp,%rdi
2c33(5): call 0x82ed(%rip)
2c38(2): test %eax,%eax
2c3a(2): jnz 0x4e(%rip)
2c3c(4): mov (%rsp),%rax
2c40(3): cmp %rbp,%rax
2c43(2): jz 0x15(%rip)
2c45(5): mov 0x8(%rsp),%rdx
2c4a(5): cmp %rdx,0x10(%rsp)
2c4f(2): jnb 0x31(%rip)
2c51(7): nop 0x0(%rax)
2c58(2): xor %eax,%eax
2c5a(5): mov 0x18(%rsp),%rsi
2c5f(9): xor $0x28,%rsi
2c68(2): jnz 0x38(%rip)
2c6a(4): add $0x20,%rsp
2c6e(1): pop %rbx
2c6f(1): pop %rbp
2c70(2): pop %r12
2c72(2): pop %r13
2c74(2): pop %r14
2c76(1): ret near (%rsp)
2c77(9): nop 0x0(%rax,%rax,1)
2c80(3): movzx (%rax),%eax
2c83(5): jmp 0xffffff6d(%rip)
2c88(7): lea 0x20db51(%rip),%rcx
2c8f(4): movsx %r13b,%edx
2c93(3): mov %rbx,%r8
2c96(3): mov %r14d,%esi
2c99(2): mov %eax,%edi
2c9b(5): call 0x81d5(%rip)
2ca0(5): call 0xfffff010(%rip)

"separator_string" :
2cb0(1): push %rbx
2cb1(3): mov %rdi,%rbx
2cb4(5): call 0xffffefec(%rip)
2cb9(6): cmp $0x7fffffff,%rax
2cbf(2): jnbe 0x11(%rip)
2cc1(7): mov %rbx,0x20e388(%rip)
2cc8(6): mov %eax,0x20e4be(%rip)
2cce(1): pop %rbx
2ccf(1): ret near (%rsp)
2cd0(5): call 0xfffffe80(%rip)
2cd5(1): nop 
2cd6(a): nop 0x0(%rax,%rax,1)
2ce0(1): push %rbx
2ce1(7): lea 0x918d(%rip),%rsi
2ce8(3): mov %rdi,%rbx
2ceb(5): mov $0x5,%edx
2cf0(2): xor %edi,%edi
2cf2(5): call 0xffffef8e(%rip)
2cf7(7): lea 0x91e7(%rip),%rcx
2cfe(3): mov %rbx,%rdi
2d01(3): mov %rax,%r8
2d04(3): xor %r9d,%r9d
2d07(5): mov $0x7fffffff,%edx
2d0c(5): mov $0x1,%esi
2d11(5): call 0x73af(%rip)
2d16(7): mov $0x1,0x20e4de(%rip)
2d1d(6): mov %eax,0x20e30d(%rip)
2d23(1): pop %rbx
2d24(1): ret near (%rsp)

"parse_column_count" :
2ce0(1): push %rbx
2ce1(7): lea 0x918d(%rip),%rsi
2ce8(3): mov %rdi,%rbx
2ceb(5): mov $0x5,%edx
2cf0(2): xor %edi,%edi
2cf2(5): call 0xffffef8e(%rip)
2cf7(7): lea 0x91e7(%rip),%rcx
2cfe(3): mov %rbx,%rdi
2d01(3): mov %rax,%r8
2d04(3): xor %r9d,%r9d
2d07(5): mov $0x7fffffff,%edx
2d0c(5): mov $0x1,%esi
2d11(5): call 0x73af(%rip)
2d16(7): mov $0x1,0x20e4de(%rip)
2d1d(6): mov %eax,0x20e30d(%rip)
2d23(1): pop %rbx
2d24(1): ret near (%rsp)

"init_header" :
2d30(2): push %r15
2d32(2): push %r14
2d34(5): mov $0x2,%ecx
2d39(2): push %r13
2d3b(2): push %r12
2d3d(3): mov %esi,%r12d
2d40(1): push %rbp
2d41(1): push %rbx
2d42(3): mov %rdi,%rbx
2d45(7): lea 0xb7fd(%rip),%rdi
2d4c(3): mov %rbx,%rsi
2d4f(7): sub $0x108,%rsp
2d56(9): mov $0x28,%rax
2d5f(8): mov %rax,0xf8(%rsp)
2d67(2): xor %eax,%eax
2d69(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d6b(3): setnbe %al
2d6e(2): sbb $0x0,%al
2d70(2): test %al,%al
2d72(6): jz 0x126(%rip)
2d78(3): test %r12d,%r12d
2d7b(6): jns 0x145(%rip)
2d81(8): cmp $0x0,0x20e3a7(%rip)
2d89(6): jz 0x123(%rip)
2d8f(8): movdqa 0x20e399(%rip),%xmm0
2d97(4): movaps %xmm0,(%rsp)
2d9b(5): mov 0x8(%rsp),%r15
2da0(5): lea 0x10(%rsp),%r14
2da5(3): mov %rsp,%rsi
2da8(7): mov 0x20e3b9(%rip),%rdi
2daf(3): mov %r14,%rdx
2db2(5): call 0x8d3e(%rip)
2db7(3): test %rax,%rax
2dba(6): jz 0x146(%rip)
2dc0(7): mov 0x20e3a1(%rip),%r8
2dc7(7): mov 0x20e3a2(%rip),%rdx
2dce(3): mov %r15d,%r9d
2dd1(3): mov %r14,%rcx
2dd4(7): mov $0xffffffff,%rsi
2ddb(2): xor %edi,%edi
2ddd(5): call 0x4b83(%rip)
2de2(4): lea 0x1(%rax),%r13
2de6(3): mov %r13,%rdi
2de9(5): call 0x6f27(%rip)
2dee(7): mov 0x20e373(%rip),%r8
2df5(7): mov 0x20e374(%rip),%rdx
2dfc(3): mov %r15d,%r9d
2dff(3): mov %r14,%rcx
2e02(3): mov %r13,%rsi
2e05(3): mov %rax,%rdi
2e08(3): mov %rax,%rbp
2e0b(5): call 0x4b55(%rip)
2e10(7): mov 0x20e349(%rip),%rdi
2e17(5): call 0xffffed79(%rip)
2e1c(7): mov 0x20e355(%rip),%rax
2e23(7): mov %rbp,0x20e336(%rip)
2e2a(3): test %rax,%rax
2e2d(2): jnz 0x10(%rip)
2e2f(7): lea 0x90af(%rip),%rax
2e36(3): test %r12d,%r12d
2e39(4): cmovns %rbx,%rax
2e3d(2): xor %esi,%esi
2e3f(6): mov 0x20e1ff(%rip),%ebx
2e45(3): mov %rbp,%rdi
2e48(7): mov %rax,0x20e309(%rip)
2e4f(5): call 0x2f81(%rip)
2e54(7): mov 0x20e2fd(%rip),%rdi
2e5b(2): sub %eax,%ebx
2e5d(2): xor %esi,%esi
2e5f(5): call 0x2f71(%rip)
2e64(2): sub %eax,%ebx
2e66(8): mov 0xf8(%rsp),%rax
2e6e(9): xor $0x28,%rax
2e77(6): mov %ebx,0x20e2d3(%rip)
2e7d(6): jnz 0xc7(%rip)
2e83(7): add $0x108,%rsp
2e8a(1): pop %rbx
2e8b(1): pop %rbp
2e8c(2): pop %r12
2e8e(2): pop %r13
2e90(2): pop %r14
2e92(2): pop %r15
2e94(1): ret near (%rsp)
2e95(3): nop (%rax)
2e98(8): cmp $0x0,0x20e290(%rip)
2ea0(6): mov $0xffffffff,%r12d
2ea6(6): jnz 0xfffffee9(%rip)
2eac(7): lea 0x20e27d(%rip),%rdi
2eb3(5): call 0x2bfd(%rip)
2eb8(5): jmp 0xfffffed7(%rip)
2ebd(3): nop (%rax)
2ec0(5): lea 0x50(%rsp),%rdx
2ec5(3): mov %r12d,%esi
2ec8(5): mov $0x1,%edi
2ecd(5): call 0xffffef83(%rip)
2ed2(2): test %eax,%eax
2ed4(6): jnz 0xfffffead(%rip)
2eda(8): mov 0xb0(%rsp),%r15
2ee2(8): mov 0xa8(%rsp),%rax
2eea(5): mov %r15,0x8(%rsp)
2eef(4): mov %rax,(%rsp)
2ef3(5): jmp 0xfffffead(%rip)
2ef8(8): nop 0x0(%rax,%rax,1)
2f00(5): mov $0x21,%edi
2f05(5): call 0x6e0b(%rip)
2f0a(4): mov (%rsp),%rdi
2f0e(8): lea 0xe0(%rsp),%rsi
2f16(3): mov %rax,%rbp
2f19(5): call 0x2c57(%rip)
2f1e(7): lea 0x8f6a(%rip),%rcx
2f25(3): mov %rax,%r8
2f28(3): mov %r15d,%r9d
2f2b(5): mov $0x21,%edx
2f30(5): mov $0x1,%esi
2f35(3): mov %rbp,%rdi
2f38(2): xor %eax,%eax
2f3a(5): call 0xfffff066(%rip)
2f3f(5): jmp 0xfffffed1(%rip)
2f44(5): call 0xffffed6c(%rip)

"pad_across_to" :
2f50(1): push %rbp
2f51(1): push %rbx
2f52(2): mov %edi,%ebp
2f54(4): sub $0x8,%rsp
2f58(7): cmp $0x0,0x20e285(%rip)
2f5f(6): mov 0x20e273(%rip),%ebx
2f65(2): jnz 0x3b(%rip)
2f67(3): add $0x1,%ebx
2f6a(2): cmp %ebp,%ebx
2f6c(2): jnle 0x25(%rip)
2f6e(7): mov 0x20e173(%rip),%rdi
2f75(4): mov 0x28(%rdi),%rax
2f79(4): cmp 0x30(%rdi),%rax
2f7d(2): jnb 0x33(%rip)
2f7f(4): lea 0x1(%rax),%rdx
2f83(3): add $0x1,%ebx
2f86(2): cmp %ebp,%ebx
2f88(4): mov %rdx,0x28(%rdi)
2f8c(3): mov $0x20,(%rax)
2f8f(2): jle 0xffffffdf(%rip)
2f91(6): mov %ebp,0x20e241(%rip)
2f97(4): add $0x8,%rsp
2f9b(1): pop %rbx
2f9c(1): pop %rbp
2f9d(1): ret near (%rsp)
2f9e(2): nop 
2fa0(2): sub %ebx,%ebp
2fa2(6): mov %ebp,0x20e238(%rip)
2fa8(4): add $0x8,%rsp
2fac(1): pop %rbx
2fad(1): pop %rbp
2fae(1): ret near (%rsp)
2faf(1): nop 
2fb0(5): mov $0x20,%esi
2fb5(5): call 0xffffed3b(%rip)
2fba(2): jmp 0xffffffad(%rip)

"print_white_space" :
2fc0(2): push %r12
2fc2(7): mov 0x20e217(%rip),%r12d
2fc9(1): push %rbp
2fca(6): mov 0x20e208(%rip),%ebp
2fd0(1): push %rbx
2fd1(3): add %ebp,%r12d
2fd4(3): mov %r12d,%eax
2fd7(2): sub %ebp,%eax
2fd9(3): cmp $0x1,%eax
2fdc(2): jle 0x48(%rip)
2fde(2): nop 
2fe0(6): mov 0x20e04e(%rip),%ecx
2fe6(2): mov %ebp,%eax
2fe8(1): cdq %eax
2fe9(2): idiv %ecx,%eax
2feb(2): sub %edx,%ecx
2fed(3): lea 0x0(%rcx,%rbp,1),%ebx
2ff0(3): cmp %ebx,%r12d
2ff3(2): jl 0x31(%rip)
2ff5(7): mov 0x20e0ec(%rip),%rdi
2ffc(7): movzx 0x20e035(%rip),%esi
3003(4): mov 0x28(%rdi),%rax
3007(4): cmp 0x30(%rdi),%rax
300b(2): jnb 0x65(%rip)
300d(4): lea 0x1(%rax),%rdx
3011(2): mov %ebx,%ebp
3013(4): mov %rdx,0x28(%rdi)
3017(3): mov %sil,(%rax)
301a(3): mov %r12d,%eax
301d(2): sub %ebp,%eax
301f(3): cmp $0x1,%eax
3022(2): jnle 0xffffffbe(%rip)
3024(3): add $0x1,%ebp
3027(3): cmp %ebp,%r12d
302a(2): jl 0x26(%rip)
302c(7): mov 0x20e0b5(%rip),%rdi
3033(4): mov 0x28(%rdi),%rax
3037(4): cmp 0x30(%rdi),%rax
303b(2): jnb 0x45(%rip)
303d(4): lea 0x1(%rax),%rdx
3041(3): add $0x1,%ebp
3044(3): cmp %ebp,%r12d
3047(4): mov %rdx,0x28(%rdi)
304b(3): mov $0x20,(%rax)
304e(2): jnl 0xffffffde(%rip)
3050(1): pop %rbx
3051(7): mov %r12d,0x20e180(%rip)
3058(a): mov $0x0,0x20e17e(%rip)
3062(1): pop %rbp
3063(2): pop %r12
3065(1): ret near (%rsp)
3066(a): nop 0x0(%rax,%rax,1)
3070(5): call 0xffffec80(%rip)
3075(2): mov %ebx,%ebp
3077(2): jmp 0xffffffa3(%rip)
3079(7): nop 0x0(%rax)
3080(5): mov $0x20,%esi
3085(5): call 0xffffec6b(%rip)
308a(2): jmp 0xffffff9a(%rip)

"print_sep_string" :
3090(6): mov 0x20e0f2(%rip),%edx
3096(6): mov 0x20e144(%rip),%eax
309c(2): test %edx,%edx
309e(6): jle 0xf2(%rip)
30a4(2): push %r14
30a6(2): push %r13
30a8(3): xor %r13d,%r13d
30ab(2): push %r12
30ad(7): mov 0x20df9c(%rip),%r12
30b4(1): push %rbp
30b5(6): mov 0x20e0d1(%rip),%ebp
30bb(1): push %rbx
30bc(4): nop 0x0(%rax)
30c0(5): lea 0x0(%rbp,%r12,1),%r14d
30c5(3): mov %r12,%rbx
30c8(3): mov %r14d,%edx
30cb(2): sub %ebx,%edx
30cd(2): test %edx,%edx
30cf(2): jle 0x52(%rip)
30d1(3): movzx (%rbx),%esi
30d4(4): add $0x1,%rbx
30d8(4): cmp $0x20,%sil
30dc(6): jz 0x84(%rip)
30e2(2): test %eax,%eax
30e4(2): jle 0xb(%rip)
30e6(5): call 0xfffffeda(%rip)
30eb(4): movzx 0xffffffff(%rbx),%esi
30ef(7): mov 0x20dff2(%rip),%rdi
30f6(4): mov 0x28(%rdi),%rax
30fa(4): cmp 0x30(%rdi),%rax
30fe(2): jnb 0x72(%rip)
3100(4): lea 0x1(%rax),%rdx
3104(4): mov %rdx,0x28(%rdi)
3108(3): mov %sil,(%rax)
310b(3): mov %r14d,%edx
310e(7): add $0x1,0x20e0c3(%rip)
3115(6): mov 0x20e0c5(%rip),%eax
311b(2): sub %ebx,%edx
311d(2): test %edx,%edx
311f(2): jnle 0xffffffb2(%rip)
3121(2): test %ebp,%ebp
3123(3): mov %r13d,%edx
3126(3): cmovns %ebp,%edx
3129(3): sub $0x1,%ebp
312c(3): movsxd %edx,%rcx
312f(2): sub %edx,%ebp
3131(3): add %rcx,%r12
3134(2): test %eax,%eax
3136(2): jle 0x7(%rip)
3138(5): call 0xfffffe88(%rip)
313d(6): mov 0x20e045(%rip),%eax
3143(3): sub $0x1,%eax
3146(2): test %eax,%eax
3148(6): mov %eax,0x20e03a(%rip)
314e(2): jle 0x32(%rip)
3150(6): mov 0x20e08a(%rip),%eax
3156(5): jmp 0xffffff6a(%rip)
315b(5): nop 0x0(%rax,%rax,1)
3160(3): add $0x1,%eax
3163(6): mov %eax,0x20e077(%rip)
3169(5): jmp 0xffffff5f(%rip)
316e(2): nop 
3170(5): call 0xffffeb80(%rip)
3175(2): jmp 0xffffff96(%rip)
3177(9): nop 0x0(%rax,%rax,1)
3180(1): pop %rbx
3181(1): pop %rbp
3182(2): pop %r12
3184(2): pop %r13
3186(2): pop %r14
3188(1): ret near (%rsp)
3189(7): nop 0x0(%rax)
3190(2): test %eax,%eax
3192(2): jnle 0x4(%rip)
3194(2): REP ret near (%rsp)
3196(5): jmp 0xfffffe2a(%rip)

"print_header" :
31a0(1): push %rbp
31a1(1): push %rbx
31a2(7): sub $0x128,%rsp
31a9(6): mov 0x20e02d(%rip),%edi
31af(a): mov $0x0,0x20e01f(%rip)
31b9(9): mov $0x28,%rax
31c2(8): mov %rax,0x118(%rsp)
31ca(2): xor %eax,%eax
31cc(5): call 0xfffffd84(%rip)
31d1(5): call 0xfffffdef(%rip)
31d6(7): mov 0x20dfdb(%rip),%rbx
31dd(5): mov $0x5,%edx
31e2(3): test %rbx,%rbx
31e5(6): jz 0xc2(%rip)
31eb(7): lea 0x8cba(%rip),%rsi
31f2(3): mov %rsp,%rbp
31f5(2): xor %edi,%edi
31f7(5): call 0xffffea89(%rip)
31fc(3): mov %rbx,%r8
31ff(3): mov %rax,%rcx
3202(5): mov $0x114,%edx
3207(5): mov $0x1,%esi
320c(3): mov %rbp,%rdi
320f(2): xor %eax,%eax
3211(5): call 0xffffed8f(%rip)
3216(6): mov 0x20df34(%rip),%ebx
321c(2): xor %esi,%esi
321e(3): mov %rbp,%rdi
3221(5): call 0x2baf(%rip)
3226(7): mov 0x20df33(%rip),%r8
322d(6): mov 0x20dfa9(%rip),%edx
3233(7): lea 0x8cab(%rip),%rcx
323a(2): sub %eax,%ebx
323c(5): mov $0x0,%eax
3241(7): lea 0x8c6d(%rip),%rsi
3248(3): cmovs %eax,%ebx
324b(7): lea 0x8c78(%rip),%rax
3252(4): sub $0x8,%rsp
3256(3): mov %ebx,%r9d
3259(1): push %rbp
325a(5): mov $0x1,%edi
325f(3): sar $0x1,%r9d
3262(1): push %rax
3263(3): sub %r9d,%ebx
3266(1): push %rbx
3267(6): push 0x20deeb(%rip)
326d(1): push %rax
326e(2): xor %eax,%eax
3270(5): call 0xffffec40(%rip)
3275(4): add $0x30,%rsp
3279(7): mov $0x0,0x20df78(%rip)
3280(a): mov $0x0,0x20df4e(%rip)
328a(8): mov 0x118(%rsp),%rax
3292(9): xor $0x28,%rax
329b(2): jnz 0x2b(%rip)
329d(7): add $0x128,%rsp
32a4(1): pop %rbx
32a5(1): pop %rbp
32a6(1): ret near (%rsp)
32a7(7): lea 0x8be9(%rip),%rsi
32ae(2): xor %edi,%edi
32b0(5): call 0xffffe9d0(%rip)
32b5(2): xor %esi,%esi
32b7(3): mov %rax,%rdx
32ba(5): mov $0x1,%edi
32bf(2): xor %eax,%eax
32c1(5): call 0xffffec1f(%rip)
32c6(5): call 0xffffe9ea(%rip)

"char_to_clump" :
32d0(2): push %r12
32d2(1): push %rbp
32d3(2): mov %edi,%ebp
32d5(1): push %rbx
32d6(4): sub $0x10,%rsp
32da(7): mov 0x20de67(%rip),%rbx
32e1(6): mov 0x20dd55(%rip),%ecx
32e7(9): mov $0x28,%rax
32f0(5): mov %rax,0x8(%rsp)
32f5(2): xor %eax,%eax
32f7(7): cmp %dil,0x20dd42(%rip)
32fe(2): jz 0x67(%rip)
3300(4): cmp $0x9,%dil
3304(2): jz 0x5c(%rip)
3306(4): movzx %dil,%r12d
330a(5): call 0xffffec86(%rip)
330f(3): mov (%rax),%rax
3312(6): test $0x40,0x1(%rax,%r12,2)
3318(6): jnz 0xe8(%rip)
331e(7): cmp $0x0,0x20de75(%rip)
3325(6): jnz 0x113(%rip)
332b(7): cmp $0x0,0x20de67(%rip)
3332(6): jz 0x15e(%rip)
3338(3): test %bpl,%bpl
333b(6): js 0xfd(%rip)
3341(3): xor $0x40,%ebp
3344(3): mov $0x5e,(%rbx)
3347(6): mov 0x20de87(%rip),%esi
334d(4): mov %bpl,0x1(%rbx)
3351(5): mov $0x2,%eax
3356(5): mov $0x2,%edx
335b(2): jmp 0x35(%rip)
335d(3): nop (%rax)
3360(5): mov $0x8,%ecx
3365(6): mov 0x20de69(%rip),%esi
336b(2): mov %esi,%eax
336d(1): cdq %eax
336e(2): idiv %ecx,%eax
3370(2): sub %edx,%ecx
3372(7): cmp $0x0,0x20de6c(%rip)
3379(2): mov %ecx,%edx
337b(2): jnz 0x3d(%rip)
337d(2): test %edx,%edx
337f(3): mov %bpl,(%rbx)
3382(5): mov $0x1,%eax
3387(2): js 0x5c(%rip)
3389(7): nop 0x0(%rax)
3390(2): add %esi,%edx
3392(6): mov %edx,0x20de3c(%rip)
3398(5): mov 0x8(%rsp),%rdi
339d(9): xor $0x28,%rdi
33a6(6): jnz 0x131(%rip)
33ac(4): add $0x10,%rsp
33b0(1): pop %rbx
33b1(1): pop %rbp
33b2(2): pop %r12
33b4(1): ret near (%rsp)
33b5(3): nop (%rax)
33b8(2): test %ecx,%ecx
33ba(6): jz 0x116(%rip)
33c0(3): lea 0xffffffff(%rcx),%eax
33c3(5): lea 0x1(%rbx,%rax,1),%rax
33c8(8): nop 0x0(%rax,%rax,1)
33d0(4): add $0x1,%rbx
33d4(4): mov $0x20,0xffffffff(%rbx)
33d8(3): cmp %rbx,%rax
33db(2): jnz 0xfffffff5(%rip)
33dd(2): test %edx,%edx
33df(2): mov %edx,%eax
33e1(2): jns 0xffffffaf(%rip)
33e3(2): test %esi,%esi
33e5(2): jz 0x3b(%rip)
33e7(2): mov %edx,%ecx
33e9(2): neg %ecx
33eb(2): cmp %esi,%ecx
33ed(2): jl 0xffffffa3(%rip)
33ef(a): mov $0x0,0x20dddb(%rip)
33f9(2): jmp 0xffffff9f(%rip)
33fb(5): nop 0x0(%rax,%rax,1)
3400(3): mov %bpl,(%rbx)
3403(6): mov 0x20ddcb(%rip),%esi
3409(5): mov $0x1,%eax
340e(5): mov $0x1,%edx
3413(5): jmp 0xffffff7d(%rip)
3418(8): nop 0x0(%rax,%rax,1)
3420(a): mov $0x0,0x20ddaa(%rip)
342a(2): xor %eax,%eax
342c(5): jmp 0xffffff6c(%rip)
3431(7): nop 0x0(%rax)
3438(5): lea 0x4(%rsp),%rdi
343d(7): lea 0x8a88(%rip),%rcx
3444(5): mov $0x4,%edx
3449(5): mov $0x1,%esi
344e(3): mov $0x5c,(%rbx)
3451(4): movzx %bpl,%r8d
3455(2): xor %eax,%eax
3457(5): call 0xffffeb49(%rip)
345c(5): movzx 0x4(%rsp),%eax
3461(6): mov 0x20dd6d(%rip),%esi
3467(5): mov $0x4,%edx
346c(3): mov %al,0x1(%rbx)
346f(5): movzx 0x5(%rsp),%eax
3474(3): mov %al,0x2(%rbx)
3477(5): movzx 0x6(%rsp),%eax
347c(3): mov %al,0x3(%rbx)
347f(5): mov $0x4,%eax
3484(5): jmp 0xffffff0c(%rip)
3489(7): nop 0x0(%rax)
3490(4): cmp $0x8,%bpl
3494(6): mov 0x20dd3a(%rip),%esi
349a(2): jz 0x16(%rip)
349c(3): mov %bpl,(%rbx)
349f(5): mov $0x1,%eax
34a4(2): xor %edx,%edx
34a6(5): jmp 0xfffffeea(%rip)
34ab(5): nop 0x0(%rax,%rax,1)
34b0(2): test %esi,%esi
34b2(3): mov $0x8,(%rbx)
34b5(6): jz 0xffffff6b(%rip)
34bb(5): mov $0x1,%ecx
34c0(5): mov $0x1,%eax
34c5(5): mov $0xffffffff,%edx
34ca(5): jmp 0xffffff21(%rip)
34cf(1): nop 
34d0(2): xor %eax,%eax
34d2(5): jmp 0xfffffebe(%rip)
34d7(5): call 0xffffe7d9(%rip)

"print_char" :
34e0(1): push %rbp
34e1(1): push %rbx
34e2(2): mov %edi,%ebx
34e4(4): sub $0x8,%rsp
34e8(7): cmp $0x0,0x20dcf5(%rip)
34ef(2): jz 0x31(%rip)
34f1(4): cmp $0x20,%dil
34f5(6): mov 0x20dce5(%rip),%eax
34fb(2): jz 0x75(%rip)
34fd(2): test %eax,%eax
34ff(4): movzx %dil,%ebp
3503(2): jnle 0x55(%rip)
3505(5): call 0xffffea8b(%rip)
350a(3): mov (%rax),%rax
350d(5): test $0x40,0x1(%rax,%rbp,2)
3512(2): jnz 0x36(%rip)
3514(3): cmp $0x8,%bl
3517(2): jnz 0x9(%rip)
3519(7): sub $0x1,0x20dcb8(%rip)
3520(7): mov 0x20dbc1(%rip),%rdi
3527(4): mov 0x28(%rdi),%rax
352b(4): cmp 0x30(%rdi),%rax
352f(2): jnb 0x51(%rip)
3531(4): lea 0x1(%rax),%rdx
3535(4): mov %rdx,0x28(%rdi)
3539(2): mov %bl,(%rax)
353b(4): add $0x8,%rsp
353f(1): pop %rbx
3540(1): pop %rbp
3541(1): ret near (%rsp)
3542(6): nop 0x0(%rax,%rax,1)
3548(7): add $0x1,0x20dc89(%rip)
354f(2): jmp 0xffffffd1(%rip)
3551(7): nop 0x0(%rax)
3558(5): call 0xfffffa68(%rip)
355d(5): call 0xffffea33(%rip)
3562(3): mov (%rax),%rax
3565(5): test $0x40,0x1(%rax,%rbp,2)
356a(2): jnz 0xffffffde(%rip)
356c(2): jmp 0xffffffa8(%rip)
356e(2): nop 
3570(3): add $0x1,%eax
3573(6): mov %eax,0x20dc67(%rip)
3579(4): add $0x8,%rsp
357d(1): pop %rbx
357e(1): pop %rbp
357f(1): ret near (%rsp)
3580(4): add $0x8,%rsp
3584(3): movzx %bl,%esi
3587(1): pop %rbx
3588(1): pop %rbp
3589(5): jmp 0xffffe767(%rip)

"print_stored" :
3590(2): push %r13
3592(2): push %r12
3594(3): mov %rdi,%r13
3597(1): push %rbp
3598(1): push %rbx
3599(4): sub $0x8,%rsp
359d(4): movsxd 0x28(%rdi),%r12
35a1(7): mov 0x20dc78(%rip),%rbp
35a8(7): mov $0x1,0x20dbd1(%rip)
35af(5): lea 0x1(%r12),%eax
35b4(3): mov %eax,0x28(%rdi)
35b7(7): mov 0x20dc4a(%rip),%rax
35be(4): movsxd 0x0(%rax,%r12,4),%rbx
35c2(5): movsxd 0x4(%rax,%r12,4),%rax
35c7(3): add %rbp,%rbx
35ca(3): add %rax,%rbp
35cd(7): cmp $0x0,0x20dc24(%rip)
35d4(6): jnz 0xf4(%rip)
35da(5): cmp $0x1,0x10(%r13)
35df(6): jz 0x91(%rip)
35e5(6): mov 0x20dba1(%rip),%eax
35eb(6): mov 0x20db93(%rip),%edi
35f1(2): cmp %edi,%eax
35f3(6): jl 0xf5(%rip)
35f9(7): cmp $0x0,0x20db90(%rip)
3600(6): jnz 0xd8(%rip)
3606(3): cmp %rbp,%rbx
3609(2): jz 0x19(%rip)
360b(5): nop 0x0(%rax,%rax,1)
3610(4): add $0x1,%rbx
3614(4): movsx 0xffffffff(%rbx),%edi
3618(5): call 0xfffffec8(%rip)
361d(3): cmp %rbx,%rbp
3620(2): jnz 0xfffffff0(%rip)
3622(6): mov 0x20dbb8(%rip),%eax
3628(2): test %eax,%eax
362a(2): jnz 0x2f(%rip)
362c(7): mov 0x20dbcd(%rip),%rdx
3633(4): mov 0x34(%r13),%eax
3637(6): mov 0x20db4f(%rip),%ecx
363d(4): mov 0x0(%rdx,%r12,4),%esi
3641(2): add %eax,%esi
3643(2): sub %ecx,%eax
3645(6): cmp 0x20db91(%rip),%eax
364b(2): mov %esi,%edx
364d(6): mov %esi,0x20db85(%rip)
3653(6): jz 0xad(%rip)
3659(4): add $0x8,%rsp
365d(5): mov $0x1,%eax
3662(1): pop %rbx
3663(1): pop %rbp
3664(2): pop %r12
3666(2): pop %r13
3668(1): ret near (%rsp)
3669(7): nop 0x0(%rax)
3670(6): mov 0x20d9ba(%rip),%edx
3676(7): mov 0x20dbab(%rip),%rcx
367d(2): test %edx,%edx
367f(2): jle 0x28(%rip)
3681(3): sub $0x1,%edx
3684(4): lea 0x10(%rcx),%rax
3688(4): shl/sal $0x6,%rdx
368c(5): lea 0x50(%rcx,%rdx,1),%rdx
3691(7): nop 0x0(%rax)
3698(6): mov $0x2,(%rax)
369e(4): add $0x40,%rax
36a2(3): cmp %rdx,%rax
36a5(2): jnz 0xfffffff3(%rip)
36a7(3): mov 0x30(%rcx),%edx
36aa(2): test %edx,%edx
36ac(6): jnle 0xffffff39(%rip)
36b2(7): cmp $0x0,0x20d994(%rip)
36b9(2): jnz 0xffffffa0(%rip)
36bb(7): mov $0x0,0x20dabe(%rip)
36c2(2): jmp 0xffffff97(%rip)
36c4(4): nop 0x0(%rax)
36c8(5): call 0xfffffad8(%rip)
36cd(5): jmp 0xffffff0d(%rip)
36d2(6): nop 0x0(%rax,%rax,1)
36d8(5): call 0xfffff9b8(%rip)
36dd(5): jmp 0xffffff29(%rip)
36e2(6): nop 0x0(%rax,%rax,1)
36e8(2): sub %eax,%edi
36ea(5): call 0xfffff866(%rip)
36ef(a): mov $0x0,0x20da8b(%rip)
36f9(5): jmp 0xffffff00(%rip)
36fe(2): nop 
3700(2): sub %ecx,%edx
3702(5): mov $0x1,%eax
3707(6): mov %edx,0x20dacb(%rip)
370d(4): add $0x8,%rsp
3711(1): pop %rbx
3712(1): pop %rbp
3713(2): pop %r12
3715(2): pop %r13
3717(1): ret near (%rsp)

"hold_file.isra.1" :
3720(7): cmp $0x0,0x20dad8(%rip)
3727(2): jnz 0x69(%rip)
3729(6): mov 0x20d901(%rip),%edx
372f(7): mov 0x20daf2(%rip),%rdi
3736(2): test %edx,%edx
3738(2): jz 0x42(%rip)
373a(3): sub $0x1,%edx
373d(7): movzx 0x20d908(%rip),%ecx
3744(4): lea 0x10(%rdi),%rax
3748(4): shl/sal $0x6,%rdx
374c(5): lea 0x50(%rdi,%rdx,1),%rdx
3751(2): jmp 0x16(%rip)
3753(5): nop 0x0(%rax,%rax,1)
3758(6): mov $0x1,(%rax)
375e(4): add $0x40,%rax
3762(3): cmp %rdx,%rax
3765(2): jz 0x15(%rip)
3767(2): test %cl,%cl
3769(2): jnz 0xffffffef(%rip)
376b(6): mov $0x2,(%rax)
3771(4): add $0x40,%rax
3775(3): cmp %rdx,%rax
3778(2): jnz 0xffffffef(%rip)
377a(6): mov $0x0,(%rsi)
3780(7): sub $0x1,0x20da39(%rip)
3787(1): ret near (%rsp)
3788(8): nop 0x0(%rax,%rax,1)
3790(6): mov $0x2,(%rdi)
3796(7): sub $0x1,0x20da23(%rip)
379d(6): mov $0x0,(%rsi)
37a3(1): ret near (%rsp)

"add_line_number.isra.2" :
37b0(2): push %r12
37b2(7): mov 0x20d9f7(%rip),%r9d
37b9(7): lea 0x8711(%rip),%rcx
37c0(1): push %rbp
37c1(7): mov 0x20d848(%rip),%r8d
37c8(3): mov %rdi,%rbp
37cb(7): mov 0x20d9ce(%rip),%rdi
37d2(1): push %rbx
37d3(7): mov $0xffffffff,%rdx
37da(2): xor %eax,%eax
37dc(5): mov $0x1,%esi
37e1(5): call 0xffffe7bf(%rip)
37e6(6): mov 0x20d824(%rip),%edx
37ec(7): add $0x1,0x20d9bd(%rip)
37f3(2): sub %edx,%eax
37f5(3): movsxd %eax,%rbx
37f8(7): add 0x20d9a1(%rip),%rbx
37ff(2): test %edx,%edx
3801(2): jle 0x1f(%rip)
3803(3): lea 0xffffffff(%rdx),%eax
3806(5): lea 0x1(%rbx,%rax,1),%r12
380b(5): nop 0x0(%rax,%rax,1)
3810(4): add $0x1,%rbx
3814(4): movsx 0xffffffff(%rbx),%edi
3818(3): call 0x0(%rbp)
381b(3): cmp %r12,%rbx
381e(2): jnz 0xfffffff2(%rip)
3820(7): cmp $0x1,0x20d809(%rip)
3827(7): movsx 0x20d7f2(%rip),%edi
382e(2): jnle 0x52(%rip)
3830(3): call 0x0(%rbp)
3833(7): cmp $0x9,0x20d7e6(%rip)
383a(2): jnz 0x1d(%rip)
383c(6): mov 0x20d996(%rip),%esi
3842(6): mov 0x20d7ec(%rip),%ecx
3848(2): mov %esi,%eax
384a(1): cdq %eax
384b(2): idiv %ecx,%eax
384d(2): sub %edx,%ecx
384f(2): add %esi,%ecx
3851(6): mov %ecx,0x20d981(%rip)
3857(7): cmp $0x0,0x20d98f(%rip)
385e(2): jz 0x17(%rip)
3860(7): cmp $0x0,0x20d998(%rip)
3867(2): jnz 0xe(%rip)
3869(6): mov 0x20d939(%rip),%eax
386f(6): add %eax,0x20d95f(%rip)
3875(1): pop %rbx
3876(1): pop %rbp
3877(2): pop %r12
3879(1): ret near (%rsp)
387a(6): nop 0x0(%rax,%rax,1)
3880(4): cmp $0x9,%dil
3884(2): jz 0x7(%rip)
3886(3): call 0x0(%rbp)
3889(2): jmp 0xffffffce(%rip)
388b(6): mov 0x20d917(%rip),%eax
3891(6): sub 0x20d779(%rip),%eax
3897(2): test %eax,%eax
3899(3): lea 0xffffffff(%rax),%ebx
389c(2): jle 0xffffffbb(%rip)
389e(2): nop 
38a0(3): sub $0x1,%ebx
38a3(5): mov $0x20,%edi
38a8(3): call 0x0(%rbp)
38ab(3): cmp $0xff,%ebx
38ae(2): jnz 0xfffffff2(%rip)
38b0(2): jmp 0xffffffa7(%rip)

"align_column" :
38c0(1): push %rbx
38c1(6): mov 0x20d8c5(%rip),%eax
38c7(3): mov %rdi,%rbx
38ca(3): mov 0x34(%rdi),%edi
38cd(2): cmp %eax,%edi
38cf(6): mov %edi,0x20d8af(%rip)
38d5(2): jnle 0x3b(%rip)
38d7(7): cmp $0x0,0x20d8b2(%rip)
38de(2): jnz 0x22(%rip)
38e0(4): cmp $0x0,0x38(%rbx)
38e4(2): jnz 0xc(%rip)
38e6(1): pop %rbx
38e7(1): ret near (%rsp)
38e8(8): nop 0x0(%rax,%rax,1)
38f0(4): lea 0x20(%rbx),%rdi
38f4(1): pop %rbx
38f5(5): jmp 0xfffffebb(%rip)
38fa(6): nop 0x0(%rax,%rax,1)
3900(5): call 0xfffff790(%rip)
3905(2): jmp 0xffffffdb(%rip)
3907(9): nop 0x0(%rax,%rax,1)
3910(2): sub %eax,%edi
3912(5): call 0xfffff63e(%rip)
3917(a): mov $0x0,0x20d863(%rip)
3921(2): jmp 0xffffffb6(%rip)

"close_file.part.4" :
3930(1): push %rbx
3931(3): mov %rdi,%rbx
3934(3): mov (%rdi),%rdi
3937(3): test $0x20,(%rdi)
393a(6): jnz 0xc6(%rip)
3940(5): call 0xffffe4b0(%rip)
3945(2): test %eax,%eax
3947(2): jnz 0x79(%rip)
3949(7): cmp $0x0,0x20d8af(%rip)
3950(2): jnz 0x50(%rip)
3952(6): mov 0x20d6d8(%rip),%edx
3958(7): mov 0x20d8c9(%rip),%rcx
395f(2): test %edx,%edx
3961(2): jz 0x4d(%rip)
3963(3): sub $0x1,%edx
3966(4): lea 0x10(%rcx),%rax
396a(4): shl/sal $0x6,%rdx
396e(5): lea 0x50(%rcx,%rdx,1),%rdx
3973(5): nop 0x0(%rax,%rax,1)
3978(3): mov 0x1c(%rax),%ecx
397b(6): mov $0x3,(%rax)
3981(2): test %ecx,%ecx
3983(2): jnz 0x9(%rip)
3985(7): mov $0x0,0x20(%rax)
398c(4): add $0x40,%rax
3990(3): cmp %rdx,%rax
3993(2): jnz 0xffffffe5(%rip)
3995(7): sub $0x1,0x20d824(%rip)
399c(1): pop %rbx
399d(1): ret near (%rsp)
399e(2): nop 
39a0(7): mov $0x3,0x10(%rbx)
39a7(7): mov $0x0,0x30(%rbx)
39ae(7): sub $0x1,0x20d80b(%rip)
39b5(1): pop %rbx
39b6(1): ret near (%rsp)
39b7(9): nop 0x0(%rax,%rax,1)
39c0(3): mov (%rbx),%rdi
39c3(5): call 0x797d(%rip)
39c8(2): test %eax,%eax
39ca(6): jz 0xffffff7f(%rip)
39d0(4): mov 0x8(%rbx),%rdx
39d4(5): mov $0x3,%esi
39d9(2): xor %edi,%edi
39db(5): call 0x5b15(%rip)
39e0(3): mov %rax,%rbx
39e3(5): call 0xffffe1cd(%rip)
39e8(2): mov (%rax),%esi
39ea(7): lea 0x9e59(%rip),%rdx
39f1(3): mov %rbx,%rcx
39f4(5): mov $0x1,%edi
39f9(2): xor %eax,%eax
39fb(5): call 0xffffe4e5(%rip)
3a00(4): mov 0x8(%rbx),%rdx
3a04(5): mov $0x3,%esi
3a09(2): xor %edi,%edi
3a0b(5): call 0x5ae5(%rip)
3a10(3): mov %rax,%rbx
3a13(5): call 0xffffe19d(%rip)
3a18(2): mov (%rax),%esi
3a1a(7): lea 0x9e29(%rip),%rdx
3a21(3): mov %rbx,%rcx
3a24(5): mov $0x1,%edi
3a29(2): xor %eax,%eax
3a2b(5): call 0xffffe4b5(%rip)
3a30(2): push %r13
3a32(2): push %r12
3a34(3): mov %rdi,%r13
3a37(1): push %rbp
3a38(1): push %rbx
3a39(3): mov %esi,%r12d
3a3c(4): sub $0x8,%rsp
3a40(3): mov (%rdi),%rbx
3a43(4): mov 0x8(%rbx),%rax
3a47(4): cmp 0x10(%rbx),%rax
3a4b(6): jnb 0x1c5(%rip)
3a51(4): lea 0x1(%rax),%rdx
3a55(4): mov %rdx,0x8(%rbx)
3a59(3): movzx (%rax),%eax
3a5c(3): cmp $0xc,%eax
3a5f(6): jz 0x91(%rip)
3a65(5): mov $0x0,0x39(%r13)
3a6a(2): xor %ebp,%ebp
3a6c(7): cmp $0x0,0x20d6cd(%rip)
3a73(2): jnz 0x75(%rip)
3a75(3): cmp $0xa,%eax
3a78(2): jz 0x2e(%rip)
3a7a(3): cmp $0xc,%eax
3a7d(6): jz 0xd3(%rip)
3a83(3): cmp $0xff,%eax
3a86(6): jz 0xaa(%rip)
3a8c(4): mov 0x8(%rbx),%rax
3a90(4): cmp 0x10(%rbx),%rax
3a94(2): jnb 0x44(%rip)
3a96(4): lea 0x1(%rax),%rdx
3a9a(4): mov %rdx,0x8(%rbx)
3a9e(3): movzx (%rax),%eax
3aa1(3): cmp $0xa,%eax
3aa4(2): jnz 0xffffffd6(%rip)
3aa6(7): cmp $0x0,0x20d56b(%rip)
3aad(2): jz 0x1d(%rip)
3aaf(7): cmp $0x1,0x20d749(%rip)
3ab6(2): jnz 0x8(%rip)
3ab8(4): cmp $0x1,%r12d
3abc(2): jnz 0xe(%rip)
3abe(3): test %bpl,%bpl
3ac1(2): jnz 0x9(%rip)
3ac3(7): add $0x1,0x20d552(%rip)
3aca(4): add $0x8,%rsp
3ace(1): pop %rbx
3acf(1): pop %rbp
3ad0(2): pop %r12
3ad2(2): pop %r13
3ad4(1): ret near (%rsp)
3ad5(3): nop (%rax)
3ad8(3): mov %rbx,%rdi
3adb(5): call 0xffffe095(%rip)
3ae0(2): jmp 0xffffff95(%rip)
3ae2(6): nop 0x0(%rax,%rax,1)
3ae8(5): mov $0x1,0x39(%r13)
3aed(2): jmp 0xffffff88(%rip)
3aef(1): nop 
3af0(5): cmp $0x0,0x39(%r13)
3af5(6): jz 0xdb(%rip)
3afb(4): mov 0x8(%rbx),%rax
3aff(4): cmp 0x10(%rbx),%rax
3b03(6): jnb 0x160(%rip)
3b09(4): lea 0x1(%rax),%rdx
3b0d(4): mov %rdx,0x8(%rbx)
3b11(3): movzx (%rax),%eax
3b14(3): cmp $0xa,%eax
3b17(6): jz 0x123(%rip)
3b1d(3): cmp $0xc,%eax
3b20(5): mov $0x0,0x39(%r13)
3b25(4): setz %bpl
3b29(5): jmp 0xffffff43(%rip)
3b2e(2): nop 
3b30(5): cmp $0x3,0x10(%r13)
3b35(6): jz 0xffffff71(%rip)
3b3b(3): mov %r13,%rdi
3b3e(5): call 0xfffffdf2(%rip)
3b43(5): jmp 0xffffff63(%rip)
3b48(8): nop 0x0(%rax,%rax,1)
3b50(7): movzx 0x20d5e9(%rip),%eax
3b57(2): test %al,%al
3b59(2): jz 0x43(%rip)
3b5b(7): cmp $0x0,0x20d69d(%rip)
3b62(6): jnz 0xce(%rip)
3b68(6): mov 0x20d4c2(%rip),%edx
3b6e(7): mov 0x20d6b3(%rip),%rcx
3b75(2): test %edx,%edx
3b77(2): jz 0x25(%rip)
3b79(3): sub $0x1,%edx
3b7c(4): lea 0x39(%rcx),%rax
3b80(4): shl/sal $0x6,%rdx
3b84(5): lea 0x79(%rcx,%rdx,1),%rdx
3b89(7): nop 0x0(%rax)
3b90(3): mov $0x0,(%rax)
3b93(4): add $0x40,%rax
3b97(3): cmp %rdx,%rax
3b9a(2): jnz 0xfffffff6(%rip)
3b9c(4): mov 0x8(%rbx),%rax
3ba0(4): cmp 0x10(%rbx),%rax
3ba4(6): jnb 0xb0(%rip)
3baa(4): lea 0x1(%rax),%rdx
3bae(4): mov %rdx,0x8(%rbx)
3bb2(3): movzx (%rax),%edi
3bb5(3): cmp $0xa,%edi
3bb8(2): jnz 0x38(%rip)
3bba(4): lea 0x30(%r13),%rsi
3bbe(4): lea 0x10(%r13),%rdi
3bc2(5): call 0xfffffb5e(%rip)
3bc7(5): jmp 0xfffffedf(%rip)
3bcc(4): nop 0x0(%rax)
3bd0(7): movzx 0x20d569(%rip),%ebp
3bd7(3): test %bpl,%bpl
3bda(2): mov %ebp,%eax
3bdc(2): jz 0x44(%rip)
3bde(5): mov $0x1,0x39(%r13)
3be3(5): jmp 0xffffff74(%rip)
3be8(8): nop 0x0(%rax,%rax,1)
3bf0(3): mov %rbx,%rsi
3bf3(5): call 0xffffe24d(%rip)
3bf8(4): lea 0x30(%r13),%rsi
3bfc(4): lea 0x10(%r13),%rdi
3c00(5): call 0xfffffb20(%rip)
3c05(5): jmp 0xfffffea1(%rip)
3c0a(6): nop 0x0(%rax,%rax,1)
3c10(3): mov %rbx,%rdi
3c13(5): call 0xffffdf5d(%rip)
3c18(5): jmp 0xfffffe44(%rip)
3c1d(3): nop (%rax)
3c20(5): mov $0x1,%ebp
3c25(5): jmp 0xffffff77(%rip)
3c2a(6): nop 0x0(%rax,%rax,1)
3c30(5): mov $0x0,0x39(%r13)
3c35(5): jmp 0xffffff67(%rip)
3c3a(4): mov 0x8(%rbx),%rax
3c3e(4): cmp 0x10(%rbx),%rax
3c42(2): jnb 0x2e(%rip)
3c44(4): lea 0x1(%rax),%rdx
3c48(4): mov %rdx,0x8(%rbx)
3c4c(3): movzx (%rax),%eax
3c4f(5): jmp 0xfffffece(%rip)
3c54(3): mov %rbx,%rdi
3c57(5): call 0xffffdf19(%rip)
3c5c(2): mov %eax,%edi
3c5e(5): jmp 0xffffff57(%rip)
3c63(3): mov %rbx,%rdi
3c66(5): call 0xffffdf0a(%rip)
3c6b(5): jmp 0xfffffea9(%rip)
3c70(3): mov %rbx,%rdi
3c73(5): call 0xffffdefd(%rip)
3c78(5): jmp 0xfffffea5(%rip)

"skip_read" :
3a30(2): push %r13
3a32(2): push %r12
3a34(3): mov %rdi,%r13
3a37(1): push %rbp
3a38(1): push %rbx
3a39(3): mov %esi,%r12d
3a3c(4): sub $0x8,%rsp
3a40(3): mov (%rdi),%rbx
3a43(4): mov 0x8(%rbx),%rax
3a47(4): cmp 0x10(%rbx),%rax
3a4b(6): jnb 0x1c5(%rip)
3a51(4): lea 0x1(%rax),%rdx
3a55(4): mov %rdx,0x8(%rbx)
3a59(3): movzx (%rax),%eax
3a5c(3): cmp $0xc,%eax
3a5f(6): jz 0x91(%rip)
3a65(5): mov $0x0,0x39(%r13)
3a6a(2): xor %ebp,%ebp
3a6c(7): cmp $0x0,0x20d6cd(%rip)
3a73(2): jnz 0x75(%rip)
3a75(3): cmp $0xa,%eax
3a78(2): jz 0x2e(%rip)
3a7a(3): cmp $0xc,%eax
3a7d(6): jz 0xd3(%rip)
3a83(3): cmp $0xff,%eax
3a86(6): jz 0xaa(%rip)
3a8c(4): mov 0x8(%rbx),%rax
3a90(4): cmp 0x10(%rbx),%rax
3a94(2): jnb 0x44(%rip)
3a96(4): lea 0x1(%rax),%rdx
3a9a(4): mov %rdx,0x8(%rbx)
3a9e(3): movzx (%rax),%eax
3aa1(3): cmp $0xa,%eax
3aa4(2): jnz 0xffffffd6(%rip)
3aa6(7): cmp $0x0,0x20d56b(%rip)
3aad(2): jz 0x1d(%rip)
3aaf(7): cmp $0x1,0x20d749(%rip)
3ab6(2): jnz 0x8(%rip)
3ab8(4): cmp $0x1,%r12d
3abc(2): jnz 0xe(%rip)
3abe(3): test %bpl,%bpl
3ac1(2): jnz 0x9(%rip)
3ac3(7): add $0x1,0x20d552(%rip)
3aca(4): add $0x8,%rsp
3ace(1): pop %rbx
3acf(1): pop %rbp
3ad0(2): pop %r12
3ad2(2): pop %r13
3ad4(1): ret near (%rsp)
3ad5(3): nop (%rax)
3ad8(3): mov %rbx,%rdi
3adb(5): call 0xffffe095(%rip)
3ae0(2): jmp 0xffffff95(%rip)
3ae2(6): nop 0x0(%rax,%rax,1)
3ae8(5): mov $0x1,0x39(%r13)
3aed(2): jmp 0xffffff88(%rip)
3aef(1): nop 
3af0(5): cmp $0x0,0x39(%r13)
3af5(6): jz 0xdb(%rip)
3afb(4): mov 0x8(%rbx),%rax
3aff(4): cmp 0x10(%rbx),%rax
3b03(6): jnb 0x160(%rip)
3b09(4): lea 0x1(%rax),%rdx
3b0d(4): mov %rdx,0x8(%rbx)
3b11(3): movzx (%rax),%eax
3b14(3): cmp $0xa,%eax
3b17(6): jz 0x123(%rip)
3b1d(3): cmp $0xc,%eax
3b20(5): mov $0x0,0x39(%r13)
3b25(4): setz %bpl
3b29(5): jmp 0xffffff43(%rip)
3b2e(2): nop 
3b30(5): cmp $0x3,0x10(%r13)
3b35(6): jz 0xffffff71(%rip)
3b3b(3): mov %r13,%rdi
3b3e(5): call 0xfffffdf2(%rip)
3b43(5): jmp 0xffffff63(%rip)
3b48(8): nop 0x0(%rax,%rax,1)
3b50(7): movzx 0x20d5e9(%rip),%eax
3b57(2): test %al,%al
3b59(2): jz 0x43(%rip)
3b5b(7): cmp $0x0,0x20d69d(%rip)
3b62(6): jnz 0xce(%rip)
3b68(6): mov 0x20d4c2(%rip),%edx
3b6e(7): mov 0x20d6b3(%rip),%rcx
3b75(2): test %edx,%edx
3b77(2): jz 0x25(%rip)
3b79(3): sub $0x1,%edx
3b7c(4): lea 0x39(%rcx),%rax
3b80(4): shl/sal $0x6,%rdx
3b84(5): lea 0x79(%rcx,%rdx,1),%rdx
3b89(7): nop 0x0(%rax)
3b90(3): mov $0x0,(%rax)
3b93(4): add $0x40,%rax
3b97(3): cmp %rdx,%rax
3b9a(2): jnz 0xfffffff6(%rip)
3b9c(4): mov 0x8(%rbx),%rax
3ba0(4): cmp 0x10(%rbx),%rax
3ba4(6): jnb 0xb0(%rip)
3baa(4): lea 0x1(%rax),%rdx
3bae(4): mov %rdx,0x8(%rbx)
3bb2(3): movzx (%rax),%edi
3bb5(3): cmp $0xa,%edi
3bb8(2): jnz 0x38(%rip)
3bba(4): lea 0x30(%r13),%rsi
3bbe(4): lea 0x10(%r13),%rdi
3bc2(5): call 0xfffffb5e(%rip)
3bc7(5): jmp 0xfffffedf(%rip)
3bcc(4): nop 0x0(%rax)
3bd0(7): movzx 0x20d569(%rip),%ebp
3bd7(3): test %bpl,%bpl
3bda(2): mov %ebp,%eax
3bdc(2): jz 0x44(%rip)
3bde(5): mov $0x1,0x39(%r13)
3be3(5): jmp 0xffffff74(%rip)
3be8(8): nop 0x0(%rax,%rax,1)
3bf0(3): mov %rbx,%rsi
3bf3(5): call 0xffffe24d(%rip)
3bf8(4): lea 0x30(%r13),%rsi
3bfc(4): lea 0x10(%r13),%rdi
3c00(5): call 0xfffffb20(%rip)
3c05(5): jmp 0xfffffea1(%rip)
3c0a(6): nop 0x0(%rax,%rax,1)
3c10(3): mov %rbx,%rdi
3c13(5): call 0xffffdf5d(%rip)
3c18(5): jmp 0xfffffe44(%rip)
3c1d(3): nop (%rax)
3c20(5): mov $0x1,%ebp
3c25(5): jmp 0xffffff77(%rip)
3c2a(6): nop 0x0(%rax,%rax,1)
3c30(5): mov $0x0,0x39(%r13)
3c35(5): jmp 0xffffff67(%rip)
3c3a(4): mov 0x8(%rbx),%rax
3c3e(4): cmp 0x10(%rbx),%rax
3c42(2): jnb 0x2e(%rip)
3c44(4): lea 0x1(%rax),%rdx
3c48(4): mov %rdx,0x8(%rbx)
3c4c(3): movzx (%rax),%eax
3c4f(5): jmp 0xfffffece(%rip)
3c54(3): mov %rbx,%rdi
3c57(5): call 0xffffdf19(%rip)
3c5c(2): mov %eax,%edi
3c5e(5): jmp 0xffffff57(%rip)
3c63(3): mov %rbx,%rdi
3c66(5): call 0xffffdf0a(%rip)
3c6b(5): jmp 0xfffffea9(%rip)
3c70(3): mov %rbx,%rdi
3c73(5): call 0xffffdefd(%rip)
3c78(5): jmp 0xfffffea5(%rip)

"read_rest_of_line" :
3c80(1): push %rbp
3c81(1): push %rbx
3c82(3): mov %rdi,%rbp
3c85(4): sub $0x8,%rsp
3c89(3): mov (%rdi),%rbx
3c8c(2): jmp 0x1e(%rip)
3c8e(2): nop 
3c90(4): lea 0x1(%rax),%rdx
3c94(4): mov %rdx,0x8(%rbx)
3c98(3): movzx (%rax),%eax
3c9b(3): cmp $0xa,%eax
3c9e(2): jz 0x23(%rip)
3ca0(3): cmp $0xc,%eax
3ca3(2): jz 0x2d(%rip)
3ca5(3): cmp $0xff,%eax
3ca8(2): jz 0x68(%rip)
3caa(4): mov 0x8(%rbx),%rax
3cae(4): cmp 0x10(%rbx),%rax
3cb2(2): jb 0xffffffde(%rip)
3cb4(3): mov %rbx,%rdi
3cb7(5): call 0xffffdeb9(%rip)
3cbc(3): cmp $0xa,%eax
3cbf(2): jnz 0xffffffe1(%rip)
3cc1(4): add $0x8,%rsp
3cc5(1): pop %rbx
3cc6(1): pop %rbp
3cc7(1): ret near (%rsp)
3cc8(8): nop 0x0(%rax,%rax,1)
3cd0(4): mov 0x8(%rbx),%rax
3cd4(4): cmp 0x10(%rbx),%rax
3cd8(2): jnb 0x63(%rip)
3cda(4): lea 0x1(%rax),%rdx
3cde(4): mov %rdx,0x8(%rbx)
3ce2(3): movzx (%rax),%edi
3ce5(3): cmp $0xa,%edi
3ce8(2): jnz 0x40(%rip)
3cea(7): cmp $0x0,0x20d509(%rip)
3cf1(2): jz 0x9(%rip)
3cf3(7): mov $0x1,0x20d4ff(%rip)
3cfa(4): add $0x8,%rsp
3cfe(4): lea 0x30(%rbp),%rsi
3d02(4): lea 0x10(%rbp),%rdi
3d06(1): pop %rbx
3d07(1): pop %rbp
3d08(5): jmp 0xfffffa18(%rip)
3d0d(3): nop (%rax)
3d10(4): cmp $0x3,0x10(%rbp)
3d14(2): jz 0xffffffad(%rip)
3d16(4): add $0x8,%rsp
3d1a(3): mov %rbp,%rdi
3d1d(1): pop %rbx
3d1e(1): pop %rbp
3d1f(5): jmp 0xfffffc11(%rip)
3d24(4): nop 0x0(%rax)
3d28(3): mov %rbx,%rsi
3d2b(5): call 0xffffe115(%rip)
3d30(7): cmp $0x0,0x20d4c3(%rip)
3d37(2): jnz 0xffffffbc(%rip)
3d39(2): jmp 0xffffffc1(%rip)
3d3b(3): mov %rbx,%rdi
3d3e(5): call 0xffffde32(%rip)
3d43(2): mov %eax,%edi
3d45(2): jmp 0xffffffa0(%rip)

"read_line" :
3d50(2): push %r14
3d52(2): push %r13
3d54(2): push %r12
3d56(1): push %rbp
3d57(1): push %rbx
3d58(3): mov %rdi,%rbx
3d5b(3): mov (%rdi),%rdi
3d5e(4): mov 0x8(%rdi),%rax
3d62(4): cmp 0x10(%rdi),%rax
3d66(6): jnb 0x3ba(%rip)
3d6c(4): lea 0x1(%rax),%rdx
3d70(4): mov %rdx,0x8(%rdi)
3d74(3): movzx (%rax),%ebp
3d77(3): cmp $0xc,%ebp
3d7a(7): mov 0x20d453(%rip),%r13d
3d81(6): jz 0x21f(%rip)
3d87(3): cmp $0xa,%ebp
3d8a(4): mov $0x0,0x39(%rbx)
3d8e(2): jz 0x20(%rip)
3d90(3): cmp $0xc,%ebp
3d93(6): jz 0x25d(%rip)
3d99(3): cmp $0xff,%ebp
3d9c(6): jz 0x104(%rip)
3da2(4): movsx %bpl,%edi
3da6(5): call 0xfffff52a(%rip)
3dab(3): mov %eax,%r12d
3dae(7): cmp $0x0,0x20d438(%rip)
3db5(6): jnz 0xc3(%rip)
3dbb(7): lea 0xffffed3e(%rip),%rax
3dc2(4): cmp %rax,0x20(%rbx)
3dc6(6): jz 0x11b(%rip)
3dcc(7): cmp $0x0,0x20d425(%rip)
3dd3(7): mov $0x1,0x20d3a6(%rip)
3dda(2): jz 0xf(%rip)
3ddc(7): cmp $0x0,0x20d269(%rip)
3de3(6): jz 0x34d(%rip)
3de9(7): cmp $0x0,0x20d40f(%rip)
3df0(6): jz 0xd0(%rip)
3df6(7): cmp $0x0,0x20d401(%rip)
3dfd(6): jz 0xc3(%rip)
3e03(6): mov 0x20d37f(%rip),%eax
3e09(7): mov 0x20d418(%rip),%r13
3e10(a): mov $0x0,0x20d36e(%rip)
3e1a(2): test %eax,%eax
3e1c(2): jle 0x2c(%rip)
3e1e(4): lea 0xffffffff(%rax),%r14d
3e22(4): add $0x1,%r14
3e26(4): shl/sal $0x6,%r14
3e2a(3): add %r13,%r14
3e2d(3): nop (%rax)
3e30(3): mov %r13,%rdi
3e33(4): add $0x40,%r13
3e37(5): call 0xfffffa89(%rip)
3e3c(7): add $0x1,0x20d345(%rip)
3e43(3): cmp %r13,%r14
3e46(2): jnz 0xffffffea(%rip)
3e48(7): cmp $0x0,0x20d39e(%rip)
3e4f(3): mov 0x34(%rbx),%edi
3e52(6): mov %edi,0x20d32c(%rip)
3e58(6): jz 0x320(%rip)
3e5e(6): mov 0x20d384(%rip),%eax
3e64(6): mov %eax,0x20d376(%rip)
3e6a(7): mov $0x0,0x20d38d(%rip)
3e71(2): jmp 0x55(%rip)
3e73(5): nop 0x0(%rax,%rax,1)
3e78(6): mov 0x20d36a(%rip),%eax
3e7e(6): cmp %eax,0x20d350(%rip)
3e84(6): jle 0xffffff37(%rip)
3e8a(1): pop %rbx
3e8b(7): mov %r13d,0x20d342(%rip)
3e92(2): xor %eax,%eax
3e94(1): pop %rbp
3e95(2): pop %r12
3e97(2): pop %r13
3e99(2): pop %r14
3e9b(1): ret near (%rsp)
3e9c(4): nop 0x0(%rax)
3ea0(4): cmp $0x3,0x10(%rbx)
3ea4(6): jnz 0x1bc(%rip)
3eaa(5): mov $0x1,%eax
3eaf(1): pop %rbx
3eb0(1): pop %rbp
3eb1(2): pop %r12
3eb3(2): pop %r13
3eb5(2): pop %r14
3eb7(1): ret near (%rsp)
3eb8(8): nop 0x0(%rax,%rax,1)
3ec0(6): mov 0x20d2be(%rip),%edi
3ec6(6): mov 0x20d2c0(%rip),%eax
3ecc(2): cmp %edi,%eax
3ece(6): jl 0x1d2(%rip)
3ed4(7): cmp $0x0,0x20d2b5(%rip)
3edb(6): jnz 0x1e5(%rip)
3ee1(4): cmp $0x0,0x38(%rbx)
3ee5(6): jnz 0x223(%rip)
3eeb(3): cmp $0xa,%ebp
3eee(7): mov $0x0,0x20d308(%rip)
3ef5(2): jz 0xffffffb5(%rip)
3ef7(3): test %r12d,%r12d
3efa(7): mov 0x20d247(%rip),%rbp
3f01(2): jz 0x1f(%rip)
3f03(5): lea 0xffffffff(%r12),%eax
3f08(5): lea 0x1(%rbp,%rax,1),%r12
3f0d(3): nop (%rax)
3f10(4): add $0x1,%rbp
3f14(4): movsx 0xffffffff(%rbp),%edi
3f18(3): call 0x20(%rbx)
3f1b(3): cmp %rbp,%r12
3f1e(2): jnz 0xfffffff2(%rip)
3f20(3): mov (%rbx),%rdi
3f23(4): mov 0x8(%rdi),%rax
3f27(4): cmp 0x10(%rdi),%rax
3f2b(6): jnb 0x265(%rip)
3f31(4): lea 0x1(%rax),%rdx
3f35(4): mov %rdx,0x8(%rdi)
3f39(3): movzx (%rax),%eax
3f3c(3): cmp $0xa,%eax
3f3f(6): jz 0xffffff6b(%rip)
3f45(3): cmp $0xc,%eax
3f48(6): jz 0x188(%rip)
3f4e(3): cmp $0xff,%eax
3f51(6): jz 0xffffff4f(%rip)
3f57(3): movsx %al,%edi
3f5a(6): mov 0x20d274(%rip),%ebp
3f60(5): call 0xfffff370(%rip)
3f65(7): cmp $0x0,0x20d281(%rip)
3f6c(6): jnz 0x1d4(%rip)
3f72(2): test %eax,%eax
3f74(7): mov 0x20d1cd(%rip),%rbp
3f7b(2): jz 0xffffffa5(%rip)
3f7d(3): sub $0x1,%eax
3f80(5): lea 0x1(%rbp,%rax,1),%r12
3f85(3): nop (%rax)
3f88(4): add $0x1,%rbp
3f8c(4): movsx 0xffffffff(%rbp),%edi
3f90(3): call 0x20(%rbx)
3f93(3): cmp %r12,%rbp
3f96(2): jnz 0xfffffff2(%rip)
3f98(2): jmp 0xffffff88(%rip)
3f9a(6): nop 0x0(%rax,%rax,1)
3fa0(4): cmp $0x0,0x39(%rbx)
3fa4(3): mov (%rbx),%rdi
3fa7(4): mov 0x8(%rdi),%rax
3fab(4): mov 0x10(%rdi),%rdx
3faf(2): jz 0x4c(%rip)
3fb1(3): cmp %rax,%rdx
3fb4(6): jbe 0x1fc(%rip)
3fba(4): lea 0x1(%rax),%rdx
3fbe(4): mov %rdx,0x8(%rdi)
3fc2(3): movzx (%rax),%ebp
3fc5(3): cmp $0xa,%ebp
3fc8(6): jnz 0xfffffdbf(%rip)
3fce(3): mov (%rbx),%rdi
3fd1(4): mov 0x8(%rdi),%rax
3fd5(4): cmp 0x10(%rdi),%rax
3fd9(6): jnb 0x1ef(%rip)
3fdf(4): lea 0x1(%rax),%rdx
3fe3(4): mov %rdx,0x8(%rdi)
3fe7(3): movzx (%rax),%ebp
3fea(5): jmp 0xfffffd9d(%rip)
3fef(1): nop 
3ff0(3): mov (%rbx),%rdi
3ff3(4): mov 0x8(%rdi),%rax
3ff7(4): mov 0x10(%rdi),%rdx
3ffb(3): cmp %rdx,%rax
3ffe(6): jnb 0x1a2(%rip)
4004(4): lea 0x1(%rax),%rdx
4008(4): mov %rdx,0x8(%rdi)
400c(3): movzx (%rax),%edi
400f(3): cmp $0xa,%edi
4012(2): jnz 0x6e(%rip)
4014(7): cmp $0x0,0x20d1dd(%rip)
401b(7): mov $0x1,0x20d1da(%rip)
4022(2): jz 0xf(%rip)
4024(7): cmp $0x0,0x20d021(%rip)
402b(6): jz 0x135(%rip)
4031(7): cmp $0x0,0x20d1c2(%rip)
4038(2): jz 0x9(%rip)
403a(7): mov $0x1,0x20d1b8(%rip)
4041(4): lea 0x30(%rbx),%rsi
4045(4): lea 0x10(%rbx),%rdi
4049(5): call 0xfffff6d7(%rip)
404e(1): pop %rbx
404f(5): mov $0x1,%eax
4054(1): pop %rbp
4055(2): pop %r12
4057(2): pop %r13
4059(2): pop %r14
405b(1): ret near (%rsp)
405c(4): nop 0x0(%rax)
4060(3): mov %rbx,%rdi
4063(5): call 0xfffff8cd(%rip)
4068(1): pop %rbx
4069(5): mov $0x1,%eax
406e(1): pop %rbp
406f(2): pop %r12
4071(2): pop %r13
4073(2): pop %r14
4075(1): ret near (%rsp)
4076(a): nop 0x0(%rax,%rax,1)
4080(3): mov (%rbx),%rsi
4083(5): call 0xffffddbd(%rip)
4088(7): cmp $0x0,0x20d169(%rip)
408f(7): mov $0x1,0x20d166(%rip)
4096(2): jz 0xffffff9b(%rip)
4098(2): jmp 0xffffff8c(%rip)
409a(6): nop 0x0(%rax,%rax,1)
40a0(2): sub %eax,%edi
40a2(5): call 0xffffeeae(%rip)
40a7(a): mov $0x0,0x20d0d3(%rip)
40b1(5): jmp 0xfffffe23(%rip)
40b6(a): nop 0x0(%rax,%rax,1)
40c0(5): call 0xffffefd0(%rip)
40c5(5): jmp 0xfffffe1c(%rip)
40ca(6): nop 0x0(%rax,%rax,1)
40d0(3): mov (%rbx),%rdi
40d3(4): mov 0x8(%rdi),%rax
40d7(4): cmp 0x10(%rdi),%rax
40db(6): jnb 0xe1(%rip)
40e1(4): lea 0x1(%rax),%rdx
40e5(4): mov %rdx,0x8(%rdi)
40e9(3): movzx (%rax),%edi
40ec(3): cmp $0xa,%edi
40ef(6): jz 0xffffff42(%rip)
40f5(3): mov (%rbx),%rsi
40f8(5): call 0xffffdd48(%rip)
40fd(5): jmp 0xffffff34(%rip)
4102(6): nop 0x0(%rax,%rax,1)
4108(4): lea 0x20(%rbx),%rdi
410c(5): call 0xfffff6a4(%rip)
4111(5): jmp 0xfffffdda(%rip)
4116(a): nop 0x0(%rax,%rax,1)
4120(5): call 0xffffda50(%rip)
4125(2): mov %eax,%ebp
4127(5): jmp 0xfffffc50(%rip)
412c(4): nop 0x0(%rax)
4130(5): call 0xfffff070(%rip)
4135(5): jmp 0xfffffcb4(%rip)
413a(6): nop 0x0(%rax,%rax,1)
4140(6): mov 0x20d0a2(%rip),%ecx
4146(6): cmp %ecx,0x20d088(%rip)
414c(6): jle 0xfffffe26(%rip)
4152(6): mov %ebp,0x20d07c(%rip)
4158(2): xor %eax,%eax
415a(5): jmp 0xfffffd55(%rip)
415f(1): nop 
4160(7): mov $0x1,0x20d019(%rip)
4167(5): call 0xfffff039(%rip)
416c(5): jmp 0xfffffed5(%rip)
4171(7): nop 0x0(%rax)
4178(a): mov $0x0,0x20d05e(%rip)
4182(5): jmp 0xfffffce8(%rip)
4187(9): nop 0x0(%rax,%rax,1)
4190(5): call 0xffffd9e0(%rip)
4195(5): jmp 0xfffffda7(%rip)
419a(6): nop 0x0(%rax,%rax,1)
41a0(5): call 0xffffd9d0(%rip)
41a5(2): mov %eax,%edi
41a7(5): jmp 0xfffffe68(%rip)
41ac(4): nop 0x0(%rax)
41b0(5): call 0xffffd9c0(%rip)
41b5(2): mov %eax,%ebp
41b7(5): jmp 0xfffffe0e(%rip)
41bc(5): call 0xffffd9b4(%rip)
41c1(2): mov %eax,%edi
41c3(5): jmp 0xffffff29(%rip)
41c8(5): call 0xffffd9a8(%rip)
41cd(2): mov %eax,%ebp
41cf(5): jmp 0xfffffbb8(%rip)

"open_file" :
41e0(1): push %rbp
41e1(1): push %rbx
41e2(3): mov %rdi,%rbp
41e5(7): lea 0xa35d(%rip),%rdi
41ec(3): mov %rsi,%rbx
41ef(5): mov $0x2,%ecx
41f4(4): sub $0x8,%rsp
41f8(3): mov %rbp,%rsi
41fb(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
41fd(3): setnbe %al
4200(2): sbb $0x0,%al
4202(2): test %al,%al
4204(2): jnz 0x5c(%rip)
4206(7): lea 0x7cc8(%rip),%rsi
420d(2): xor %edi,%edi
420f(5): mov $0x5,%edx
4214(5): call 0xffffda6c(%rip)
4219(7): mov 0x20ced0(%rip),%rdi
4220(4): mov %rax,0x8(%rbx)
4224(7): mov $0x1,0x20cfcb(%rip)
422b(3): test %rdi,%rdi
422e(3): mov %rdi,(%rbx)
4231(2): jz 0x4d(%rip)
4233(5): mov $0x2,%esi
4238(5): call 0x17a8(%rip)
423d(7): mov $0x0,0x10(%rbx)
4244(4): mov $0x0,0x39(%rbx)
4248(5): mov $0x1,%ebx
424d(7): add $0x1,0x20cf40(%rip)
4254(4): add $0x8,%rsp
4258(2): mov %ebx,%eax
425a(1): pop %rbx
425b(1): pop %rbp
425c(1): ret near (%rsp)
425d(3): nop (%rax)
4260(7): lea 0x7e46(%rip),%rsi
4267(3): mov %rbp,%rdi
426a(4): mov %rbp,0x8(%rbx)
426e(5): call 0x17a2(%rip)
4273(3): mov %rax,%rdi
4276(3): mov %rax,(%rbx)
4279(3): test %rdi,%rdi
427c(2): jnz 0xffffffb7(%rip)
427e(7): movzx 0x20cf0c(%rip),%ebx
4285(7): mov $0x1,0x20cf44(%rip)
428c(2): test %bl,%bl
428e(2): jz 0x12(%rip)
4290(2): xor %ebx,%ebx
4292(4): add $0x8,%rsp
4296(2): mov %ebx,%eax
4298(1): pop %rbx
4299(1): pop %rbp
429a(1): ret near (%rsp)
429b(5): nop 0x0(%rax,%rax,1)
42a0(3): mov %rbp,%rdx
42a3(5): mov $0x3,%esi
42a8(5): call 0x5248(%rip)
42ad(3): mov %rax,%rbp
42b0(5): call 0xffffd900(%rip)
42b5(2): mov (%rax),%esi
42b7(7): lea 0x958c(%rip),%rdx
42be(3): mov %rbp,%rcx
42c1(2): xor %eax,%eax
42c3(2): xor %edi,%edi
42c5(5): call 0xffffdc1b(%rip)
42ca(4): add $0x8,%rsp
42ce(2): mov %ebx,%eax
42d0(1): pop %rbx
42d1(1): pop %rbp
42d2(1): ret near (%rsp)

"print_files" :
42e0(2): push %r15
42e2(2): push %r14
42e4(2): push %r13
42e6(2): push %r12
42e8(3): mov %edi,%r12d
42eb(1): push %rbp
42ec(1): push %rbx
42ed(3): mov %rsi,%rbp
42f0(4): sub $0x18,%rsp
42f4(6): mov 0x20cd4e(%rip),%edx
42fa(3): lea 0xfffffff6(%rdx),%eax
42fd(2): test %eax,%eax
42ff(6): mov %eax,0x20ceeb(%rip)
4305(6): jle 0x26e(%rip)
430b(7): cmp $0x0,0x20cd3b(%rip)
4312(6): jz 0x26f(%rip)
4318(7): cmp $0x0,0x20ce79(%rip)
431f(2): jz 0x17(%rip)
4321(6): mov 0x20cec9(%rip),%edx
4327(2): mov %edx,%eax
4329(3): shr $0x1f,%eax
432c(2): add %edx,%eax
432e(2): sar $0x1,%eax
4330(6): mov %eax,0x20ceba(%rip)
4336(3): test %r12d,%r12d
4339(6): jnz 0x21e(%rip)
433f(6): mov 0x20cceb(%rip),%ecx
4345(7): mov $0x0,0x20ceb3(%rip)
434c(7): cmp $0x0,0x20ccf9(%rip)
4353(2): jz 0x9(%rip)
4355(7): mov $0x1,0x20ce98(%rip)
435c(3): cmp $0x1,%ecx
435f(7): movzx 0x20ce86(%rip),%edx
4366(6): jle 0x424(%rip)
436c(7): cmp $0x0,0x20ce1d(%rip)
4373(6): jnz 0x219(%rip)
4379(2): test %dl,%dl
437b(6): jnz 0x421(%rip)
4381(7): lea 0x7b42(%rip),%rax
4388(7): mov %rax,0x20ccc1(%rip)
438f(a): mov $0x1,0x20cdf3(%rip)
4399(7): mov $0x1,0x20cdf0(%rip)
43a0(5): mov $0x1,%eax
43a5(7): mov $0x1,0x20ce41(%rip)
43ac(7): mov $0x1,0x20ce31(%rip)
43b3(2): test %dl,%dl
43b5(2): jz 0x9(%rip)
43b7(7): mov $0x0,0x20ce2f(%rip)
43be(7): movzx 0x20cde7(%rip),%esi
43c5(3): test %sil,%sil
43c8(6): jz 0x208(%rip)
43ce(7): cmp $0x9,0x20cc4b(%rip)
43d5(6): mov 0x20cc39(%rip),%edx
43db(6): mov %edx,0x20cc3b(%rip)
43e1(6): mov 0x20cc29(%rip),%edx
43e7(6): jz 0xd74(%rip)
43ed(3): add $0x1,%edx
43f0(6): mov %edx,0x20cdb2(%rip)
43f6(7): cmp $0x0,0x20ce02(%rip)
43fd(6): jz 0x1d3(%rip)
4403(6): mov 0x20cd9f(%rip),%edi
4409(3): lea 0xffffffff(%rcx),%edx
440c(3): imul %eax,%edx
440f(6): jo 0xe7e(%rip)
4415(6): mov 0x20cc29(%rip),%eax
441b(2): sub %edi,%eax
441d(2): sub %edx,%eax
441f(6): jo 0xe30(%rip)
4425(1): cdq %eax
4426(2): idiv %ecx,%eax
4428(2): test %eax,%eax
442a(6): mov %eax,0x20cdb8(%rip)
4430(6): jle 0xe29(%rip)
4436(3): test %sil,%sil
4439(2): jz 0x33(%rip)
443b(7): mov 0x20cd5e(%rip),%rdi
4442(5): call 0xffffd74e(%rip)
4447(7): cmp $0xb,0x20cbc2(%rip)
444e(5): mov $0xb,%edi
4453(7): cmovnb 0x20cbb6(%rip),%edi
445a(2): mov %edi,%edi
445c(4): add $0x1,%rdi
4460(5): call 0x58b0(%rip)
4465(7): mov %rax,0x20cd34(%rip)
446c(7): mov 0x20ccd5(%rip),%rdi
4473(5): call 0xffffd71d(%rip)
4478(7): cmp $0x8,0x20cbbd(%rip)
447f(5): mov $0x8,%edi
4484(7): cmovnl 0x20cbb1(%rip),%edi
448b(3): movsxd %edi,%rdi
448e(5): call 0x5882(%rip)
4493(7): mov 0x20cd8e(%rip),%rdi
449a(7): mov %rax,0x20cca7(%rip)
44a1(a): mov $0x0,0x20cce9(%rip)
44ab(5): call 0xffffd6e5(%rip)
44b0(7): movsxd 0x20cb79(%rip),%rdi
44b7(5): mov $0x40,%edx
44bc(2): xor %ecx,%ecx
44be(3): mov %rdx,%rax
44c1(3): mul %rax,%rdi,%rdx
44c4(6): jo 0xd81(%rip)
44ca(3): test %rax,%rax
44cd(6): js 0xdb0(%rip)
44d3(3): test %rcx,%rcx
44d6(6): jnz 0xda7(%rip)
44dc(4): shl/sal $0x6,%rdi
44e0(5): call 0x5830(%rip)
44e5(7): cmp $0x0,0x20cd13(%rip)
44ec(3): mov %rax,%rbx
44ef(7): mov %rax,0x20cd32(%rip)
44f6(6): jz 0xe1(%rip)
44fc(3): test %r12d,%r12d
44ff(2): jz 0x39(%rip)
4501(5): lea 0xffffffff(%r12),%eax
4506(5): lea 0x8(%rbp,%rax,8),%r12
450b(5): nop 0x0(%rax,%rax,1)
4510(4): mov 0x0(%rbp),%rdi
4514(3): mov %rbx,%rsi
4517(5): call 0xfffffcc9(%rip)
451c(2): test %al,%al
451e(2): jnz 0xd(%rip)
4520(7): sub $0x1,0x20cb09(%rip)
4527(4): sub $0x40,%rbx
452b(4): add $0x8,%rbp
452f(4): add $0x40,%rbx
4533(3): cmp %r12,%rbp
4536(2): jnz 0xffffffda(%rip)
4538(7): mov 0x20caf1(%rip),%r11d
453f(3): test %r11d,%r11d
4542(6): jnz 0xa82(%rip)
4548(4): add $0x18,%rsp
454c(1): pop %rbx
454d(1): pop %rbp
454e(2): pop %r12
4550(2): pop %r13
4552(2): pop %r14
4554(2): pop %r15
4556(1): ret near (%rsp)
4557(7): cmp $0x0,0x20cca1(%rip)
455e(6): jz 0xd24(%rip)
4564(7): mov %r12d,0x20cac5(%rip)
456b(3): mov %r12d,%ecx
456e(5): jmp 0xfffffdde(%rip)
4573(7): mov $0x0,0x20cad3(%rip)
457a(7): mov $0x1,0x20cc79(%rip)
4581(6): mov %edx,0x20cc69(%rip)
4587(5): jmp 0xfffffd91(%rip)
458c(2): test %dl,%dl
458e(6): mov 0x20cbf8(%rip),%eax
4594(6): jnz 0xfffffe11(%rip)
459a(3): cmp $0x1,%eax
459d(6): jnz 0xfffffe08(%rip)
45a3(7): mov 0x20caa6(%rip),%rsi
45aa(3): cmp $0x9,(%rsi)
45ad(6): jnz 0xfffffdf8(%rip)
45b3(7): lea 0x7910(%rip),%rsi
45ba(7): mov %rsi,0x20ca8f(%rip)
45c1(5): jmp 0xfffffde4(%rip)
45c6(a): nop 0x0(%rax,%rax,1)
45d0(2): xor %edi,%edi
45d2(5): jmp 0xfffffe37(%rip)
45d7(3): test %r12d,%r12d
45da(6): jle 0xb2a(%rip)
45e0(4): mov 0x0(%rbp),%rdi
45e4(3): mov %rax,%rsi
45e7(5): call 0xfffffbf9(%rip)
45ec(2): test %al,%al
45ee(6): jz 0xffffff5a(%rip)
45f4(3): mov (%rbx),%rdi
45f7(5): call 0xffffd7f9(%rip)
45fc(4): mov 0x0(%rbp),%rdi
4600(2): mov %eax,%esi
4602(5): call 0xffffe72e(%rip)
4607(7): mov $0x0,0x2c(%rbx)
460e(6): mov 0x20ca1c(%rip),%esi
4614(4): mov 0x8(%rbx),%rdx
4618(4): lea 0x40(%rbx),%rax
461c(3): mov (%rbx),%rcx
461f(3): cmp $0x1,%esi
4622(2): jz 0x38(%rip)
4624(3): sub $0x2,%esi
4627(4): add $0x2,%rsi
462b(4): shl/sal $0x6,%rsi
462f(3): add %rsi,%rbx
4632(6): nop 0x0(%rax,%rax,1)
4638(4): mov %rdx,0x8(%rax)
463c(3): mov %rcx,(%rax)
463f(4): add $0x40,%rax
4643(7): mov $0x0,0xffffffd0(%rax)
464a(4): mov $0x0,0xfffffff9(%rax)
464e(7): mov $0x0,0xffffffec(%rax)
4655(3): cmp %rbx,%rax
4658(2): jnz 0xffffffe0(%rip)
465a(7): cmp $0x0,0x20c9eb(%rip)
4661(6): mov 0x20cb2d(%rip),%eax
4667(6): mov %eax,0x20cb53(%rip)
466d(6): jnz 0x96d(%rip)
4673(7): mov 0x20cb4e(%rip),%r13
467a(4): cmp $0x1,%r13
467e(6): jnbe 0x800(%rip)
4684(b): mov $0x1,0x20cb29(%rip)
468f(7): movzx 0x20cb57(%rip),%ebx
4696(3): xor %r8d,%r8d
4699(6): mov 0x20cb3d(%rip),%esi
469f(2): test %bl,%bl
46a1(2): jz 0x25(%rip)
46a3(7): mov 0x20cb3e(%rip),%r8d
46aa(3): add %esi,%r8d
46ad(7): cmp $0x0,0x20cb4b(%rip)
46b4(2): jz 0x12(%rip)
46b6(7): cmp $0x0,0x20caef(%rip)
46bd(2): jz 0x9(%rip)
46bf(7): add 0x20cae2(%rip),%r8d
46c6(6): mov 0x20cac0(%rip),%eax
46cc(7): mov 0x20c95d(%rip),%r10d
46d3(8): movzx 0x20c971(%rip),%r11d
46db(7): mov 0x20cb46(%rip),%r9
46e2(2): add %eax,%esi
46e4(4): cmp $0x1,%r10d
46e8(4): mov %eax,0x8(%rsp)
46ec(3): mov %r9,%rax
46ef(3): mov %r11d,%ecx
46f2(6): jle 0xb0b(%rip)
46f8(7): movzx 0x20cb00(%rip),%eax
46ff(7): movzx 0x20caa6(%rip),%edi
4706(5): mov $0x1,%edx
470b(7): mov 0x20cad6(%rip),%r15d
4712(7): lea 0xffffedc7(%rip),%r14
4719(7): lea 0xfffff630(%rip),%r13
4720(7): lea 0xffffe3d9(%rip),%r12
4727(7): lea 0xffffee62(%rip),%rbp
472e(3): xor $0x1,%eax
4731(4): mov %al,0xf(%rsp)
4735(3): mov %r9,%rax
4738(2): jmp 0x43(%rip)
473a(6): nop 0x0(%rax,%rax,1)
4740(4): mov %r12,0x20(%rax)
4744(4): mov %rbp,0x18(%rax)
4748(2): xor %ecx,%ecx
474a(3): test %dil,%dil
474d(2): jz 0xc(%rip)
474f(3): cmp $0x1,%edx
4752(3): setz %cl
4755(4): or 0xf(%rsp),%cl
4759(2): test %bl,%bl
475b(3): mov %cl,0x38(%rax)
475e(3): mov %esi,0x34(%rax)
4761(2): jz 0x4f(%rip)
4763(4): mov 0x8(%rsp),%ecx
4767(3): add $0x1,%edx
476a(4): add $0x40,%rax
476e(3): cmp %r10d,%edx
4771(4): lea 0x0(%rcx,%r8,1),%esi
4775(4): lea 0x0(%rsi,%r15,1),%r8d
4779(2): jz 0x48(%rip)
477b(3): test %r11b,%r11b
477e(2): jnz 0xffffffc2(%rip)
4780(4): mov %r14,0x20(%rax)
4784(4): mov %r13,0x18(%rax)
4788(2): jmp 0xffffffc0(%rip)
478a(7): mov $0x0,0x20c8bb(%rip)
4791(6): mov 0x20c9f5(%rip),%eax
4797(5): jmp 0xfffffc1c(%rip)
479c(7): lea 0x7741(%rip),%rax
47a3(7): mov %rax,0x20c8a6(%rip)
47aa(5): jmp 0xfffffbe5(%rip)
47af(1): nop 
47b0(3): add $0x1,%edx
47b3(3): xor %r8d,%r8d
47b6(2): xor %esi,%esi
47b8(4): add $0x40,%rax
47bc(3): cmp %r10d,%edx
47bf(2): jnz 0xffffffbc(%rip)
47c1(3): lea 0xfffffffe(%rdx),%eax
47c4(3): mov %r11d,%ecx
47c7(4): add $0x1,%rax
47cb(4): shl/sal $0x6,%rax
47cf(3): add %r9,%rax
47d2(3): test %r11b,%r11b
47d5(6): jz 0x625(%rip)
47db(7): cmp $0x0,0x20ca12(%rip)
47e2(6): jz 0x618(%rip)
47e8(7): lea 0xffffe311(%rip),%rbx
47ef(4): mov %rbx,0x20(%rax)
47f3(7): lea 0xffffed96(%rip),%rbx
47fa(4): mov %rbx,0x18(%rax)
47fe(3): test %dil,%dil
4801(2): jz 0x14(%rip)
4803(7): movzx 0x20c9f5(%rip),%edi
480a(3): xor $0x1,%edi
480d(3): cmp $0x1,%edx
4810(3): setz %dl
4813(2): or %edx,%edi
4815(4): mov %dil,0x38(%rax)
4819(3): mov %esi,0x34(%rax)
481c(2): test %cl,%cl
481e(6): mov 0x20c7f8(%rip),%eax
4824(3): mov %r9,%rbp
4827(6): mov %eax,0x20c983(%rip)
482d(6): jnz 0x2ef(%rip)
4833(3): test %r10d,%r10d
4836(2): jz 0x45(%rip)
4838(4): lea 0xffffffff(%r10),%edx
483c(6): mov 0x20c9ae(%rip),%ecx
4842(4): lea 0x30(%r9),%rax
4846(4): shl/sal $0x6,%rdx
484a(5): lea 0x70(%r9,%rdx,1),%rdx
484f(2): jmp 0x14(%rip)
4851(7): nop 0x0(%rax)
4858(2): mov %ecx,(%rax)
485a(4): add $0x40,%rax
485e(3): cmp %rax,%rdx
4861(2): jz 0x1a(%rip)
4863(4): mov 0xffffffe0(%rax),%r8d
4867(3): test %r8d,%r8d
486a(2): jz 0xffffffee(%rip)
486c(6): mov $0x0,(%rax)
4872(4): add $0x40,%rax
4876(3): cmp %rax,%rdx
4879(2): jnz 0xffffffea(%rip)
487b(5): call 0xffffe1a5(%rip)
4880(2): test %eax,%eax
4882(6): jz 0xfffffcc6(%rip)
4888(7): cmp $0x0,0x20c7be(%rip)
488f(2): jz 0x9(%rip)
4891(7): mov $0x1,0x20c960(%rip)
4898(7): cmp $0x0,0x20c8f9(%rip)
489f(7): mov $0x0,0x20c8da(%rip)
48a6(7): mov 0x20c943(%rip),%r13d
48ad(2): jz 0x5(%rip)
48af(3): add %r13d,%r13d
48b2(3): xor %r12d,%r12d
48b5(4): cmp $0x0,%r13d
48b9(6): jle 0x929(%rip)
48bf(1): nop 
48c0(5): call 0xffffe160(%rip)
48c5(2): test %eax,%eax
48c7(6): jz 0x1bf(%rip)
48cd(6): mov 0x20c75d(%rip),%edi
48d3(a): mov $0x0,0x20c8fb(%rip)
48dd(a): mov $0x0,0x20c8f9(%rip)
48e7(a): mov $0x0,0x20c897(%rip)
48f1(7): mov $0x0,0x20c888(%rip)
48f8(7): mov $0x0,0x20c8ff(%rip)
48ff(2): test %edi,%edi
4901(7): mov $0x1,0x20c8f5(%rip)
4908(7): mov 0x20c919(%rip),%rbx
490f(6): jle 0xed(%rip)
4915(5): mov $0x1,%ebp
491a(2): jmp 0x59(%rip)
491c(4): nop 0x0(%rax)
4920(7): cmp $0x0,0x20c8d8(%rip)
4927(2): jz 0x29(%rip)
4929(3): mov 0x10(%rbx),%eax
492c(2): test %eax,%eax
492e(2): jz 0x22(%rip)
4930(7): cmp $0x0,0x20c8c6(%rip)
4937(6): jnz 0x339(%rip)
493d(3): cmp $0x3,%eax
4940(6): jz 0x360(%rip)
4946(3): cmp $0x2,%eax
4949(6): jz 0x397(%rip)
494f(1): nop 
4950(7): cmp $0x0,0x20c839(%rip)
4957(2): jz 0x9(%rip)
4959(7): add $0x1,0x20c828(%rip)
4960(3): add $0x1,%ebp
4963(4): add $0x40,%rbx
4967(6): cmp 0x20c6c3(%rip),%ebp
496d(6): jnle 0x343(%rip)
4973(3): mov 0x30(%rbx),%esi
4976(a): mov $0x0,0x20c854(%rip)
4980(2): test %esi,%esi
4982(6): jle 0x2fe(%rip)
4988(3): mov 0x34(%rbx),%eax
498b(7): mov $0x0,0x20c86a(%rip)
4992(3): mov %rbx,%rdi
4995(6): mov %eax,0x20c7e9(%rip)
499b(3): call 0x18(%rbx)
499e(2): test %al,%al
49a0(6): jz 0x2c0(%rip)
49a6(3): mov 0x30(%rbx),%eax
49a9(8): movzx 0x20c7cf(%rip),%r9d
49b1(3): sub $0x1,%eax
49b4(3): or %r9d,%r12d
49b7(2): test %eax,%eax
49b9(3): mov %eax,0x30(%rbx)
49bc(6): jnle 0xffffff64(%rip)
49c2(5): call 0xffffe05e(%rip)
49c7(2): test %eax,%eax
49c9(6): jnz 0xffffff57(%rip)
49cf(3): test %r9b,%r9b
49d2(6): jz 0x2f6(%rip)
49d8(7): mov 0x20c709(%rip),%rdi
49df(4): mov 0x28(%rdi),%rax
49e3(4): cmp 0x30(%rdi),%rax
49e7(6): jnb 0x3e4(%rip)
49ed(4): lea 0x1(%rax),%rdx
49f1(4): mov %rdx,0x28(%rdi)
49f5(3): mov $0xa,(%rax)
49f8(4): sub $0x1,%r13d
49fc(5): call 0xffffe024(%rip)
4a01(2): test %eax,%eax
4a03(6): jz 0x2c5(%rip)
4a09(7): cmp $0x0,0x20c788(%rip)
4a10(2): jz 0x2b(%rip)
4a12(3): test %r12b,%r12b
4a15(2): jz 0x26(%rip)
4a17(7): mov 0x20c6ca(%rip),%rdi
4a1e(4): mov 0x28(%rdi),%rax
4a22(4): cmp 0x30(%rdi),%rax
4a26(6): jnb 0x3ef(%rip)
4a2c(4): lea 0x1(%rax),%rdx
4a30(4): mov %rdx,0x28(%rdi)
4a34(3): mov $0xa,(%rax)
4a37(4): sub $0x1,%r13d
4a3b(3): test %r13d,%r13d
4a3e(6): jnle 0xfffffe82(%rip)
4a44(3): test %r13d,%r13d
4a47(2): jnz 0x3f(%rip)
4a49(7): mov 0x20c5e0(%rip),%r10d
4a50(7): mov 0x20c7d1(%rip),%r9
4a57(3): test %r10d,%r10d
4a5a(2): jle 0x2c(%rip)
4a5c(4): lea 0xffffffff(%r10),%edx
4a60(4): lea 0x10(%r9),%rax
4a64(4): shl/sal $0x6,%rdx
4a68(5): lea 0x50(%r9,%rdx,1),%rdx
4a6d(3): nop (%rax)
4a70(2): mov (%rax),%ecx
4a72(2): test %ecx,%ecx
4a74(2): jnz 0x6(%rip)
4a76(4): mov $0x1,0x29(%rax)
4a7a(4): add $0x40,%rax
4a7e(3): cmp %rax,%rdx
4a81(2): jnz 0xffffffef(%rip)
4a83(3): xor %r13d,%r13d
4a86(3): test %r12b,%r12b
4a89(7): mov %r12b,0x20c6f0(%rip)
4a90(2): jz 0xf(%rip)
4a92(7): cmp $0x0,0x20c5b4(%rip)
4a99(6): jnz 0x38b(%rip)
4a9f(7): cmp $0x0,0x20c754(%rip)
4aa6(2): jz 0x32(%rip)
4aa8(7): cmp $0x0,0x20c74a(%rip)
4aaf(2): jz 0x29(%rip)
4ab1(7): mov 0x20c630(%rip),%rdi
4ab8(4): mov 0x28(%rdi),%rax
4abc(4): cmp 0x30(%rdi),%rax
4ac0(6): jnb 0x74e(%rip)
4ac6(4): lea 0x1(%rax),%rdx
4aca(4): mov %rdx,0x28(%rdi)
4ace(3): mov $0xc,(%rax)
4ad1(7): mov $0x0,0x20c721(%rip)
4ad8(7): mov 0x20c6d9(%rip),%rax
4adf(4): add $0x1,%rax
4ae3(7): cmp 0x20c53e(%rip),%rax
4aea(7): mov %rax,0x20c6c7(%rip)
4af1(6): jnbe 0xfffffa57(%rip)
4af7(5): call 0xffffdf89(%rip)
4afc(7): movzx 0x20c549(%rip),%ecx
4b03(7): mov 0x20c71e(%rip),%r9
4b0a(7): mov 0x20c51f(%rip),%r10d
4b11(3): mov %r9,%rbp
4b14(2): test %cl,%cl
4b16(6): jz 0xfffffd1d(%rip)
4b1c(8): movzx 0x20c6d0(%rip),%r11d
4b24(3): mov %r10d,%esi
4b27(a): mov $0x0,0x20c6e7(%rip)
4b31(4): cmp $0x1,%r11b
4b35(3): sbb $0x0,%esi
4b38(2): test %esi,%esi
4b3a(4): mov %esi,0x8(%rsp)
4b3e(6): jle 0x47a(%rip)
4b44(3): lea 0xffffffff(%rsi),%edx
4b47(4): lea 0x2c(%r9),%rax
4b4b(4): shl/sal $0x6,%rdx
4b4f(5): lea 0x6c(%r9,%rdx,1),%rdx
4b54(4): nop 0x0(%rax)
4b58(6): mov $0x0,(%rax)
4b5e(4): add $0x40,%rax
4b62(3): cmp %rax,%rdx
4b65(2): jnz 0xfffffff3(%rip)
4b67(6): mov 0x20c653(%rip),%eax
4b6d(2): test %eax,%eax
4b6f(6): jz 0x44b(%rip)
4b75(3): xor %r13d,%r13d
4b78(6): mov $0x1,%r14d
4b7e(3): xor %r12d,%r12d
4b81(3): xor %r15d,%r15d
4b84(4): nop 0x0(%rax)
4b88(6): mov 0x20c662(%rip),%ebx
4b8e(4): mov %r12d,0x28(%rbp)
4b92(2): test %ebx,%ebx
4b94(2): jnz 0x11(%rip)
4b96(2): jmp 0x7f(%rip)
4b98(8): nop 0x0(%rax,%rax,1)
4ba0(3): sub $0x1,%ebx
4ba3(2): jz 0x72(%rip)
4ba5(6): mov 0x20c615(%rip),%esi
4bab(2): test %esi,%esi
4bad(6): jz 0x153(%rip)
4bb3(3): mov 0x10(%rbp),%ecx
4bb6(2): test %ecx,%ecx
4bb8(2): jnz 0xffffffe8(%rip)
4bba(3): mov %rbp,%rdi
4bbd(a): mov $0x0,0x20c60d(%rip)
4bc7(5): call 0xfffff189(%rip)
4bcc(2): test %al,%al
4bce(6): jz 0x122(%rip)
4bd4(3): mov 0x10(%rbp),%edx
4bd7(6): mov 0x20c63b(%rip),%eax
4bdd(2): test %edx,%edx
4bdf(2): jz 0x7(%rip)
4be1(3): cmp %eax,%r13d
4be4(2): jz 0xffffffbc(%rip)
4be6(7): mov 0x20c61b(%rip),%rcx
4bed(4): add $0x1,0x2c(%rbp)
4bf1(4): add $0x1,%r12d
4bf5(6): mov 0x20c5d9(%rip),%esi
4bfb(3): sub $0x1,%ebx
4bfe(4): mov %r13d,0x0(%rcx,%r15,4)
4c02(3): mov %eax,%r13d
4c05(7): mov 0x20c5f4(%rip),%rcx
4c0c(4): mov %esi,0x0(%rcx,%r15,4)
4c10(3): mov %r12d,%r15d
4c13(2): jnz 0xffffff92(%rip)
4c15(4): add $0x1,%r14d
4c19(4): add $0x40,%rbp
4c1d(5): cmp %r14d,0x8(%rsp)
4c22(8): lea 0x0(,%r15,4),%rcx
4c2a(3): mov %r13d,%eax
4c2d(2): jl 0x10(%rip)
4c2f(6): mov 0x20c58b(%rip),%ebx
4c35(2): test %ebx,%ebx
4c37(6): jnz 0xffffff51(%rip)
4c3d(7): mov 0x20c5e4(%rip),%rbp
4c44(7): mov 0x20c3e5(%rip),%r10d
4c4b(8): movzx 0x20c5a1(%rip),%r11d
4c53(3): mov %rbp,%r9
4c56(5): jmp 0xce(%rip)
4c5b(5): nop 0x0(%rax,%rax,1)
4c60(3): mov %rbx,%rdi
4c63(5): call 0xfffff01d(%rip)
4c68(5): jmp 0xfffffd3e(%rip)
4c6d(3): nop (%rax)
4c70(7): mov $0x1,0x20c587(%rip)
4c77(5): jmp 0xfffffcd9(%rip)
4c7c(4): nop 0x0(%rax)
4c80(4): cmp $0x1,0x10(%rbx)
4c84(6): jz 0xfffffd04(%rip)
4c8a(7): cmp $0x0,0x20c56e(%rip)
4c91(6): jz 0xfffffcbf(%rip)
4c97(7): cmp $0x0,0x20c55f(%rip)
4c9e(2): jnz 0xffffffd2(%rip)
4ca0(3): mov %rbx,%rdi
4ca3(5): call 0xffffec1d(%rip)
4ca8(5): jmp 0xfffffca8(%rip)
4cad(3): nop (%rax)
4cb0(7): cmp $0x0,0x20c4c9(%rip)
4cb7(6): jnz 0xfffffd21(%rip)
4cbd(5): jmp 0xfffffd3f(%rip)
4cc2(6): nop 0x0(%rax,%rax,1)
4cc8(7): cmp $0x0,0x20c37e(%rip)
4ccf(6): jnz 0xfffffd3a(%rip)
4cd5(5): jmp 0xfffffd6f(%rip)
4cda(6): nop 0x0(%rax,%rax,1)
4ce0(7): cmp $0x0,0x20c515(%rip)
4ce7(6): jz 0xfffffc69(%rip)
4ced(2): jmp 0xffffffb3(%rip)
4cef(1): nop 
4cf0(3): mov %rbp,%rdi
4cf3(5): call 0xffffef8d(%rip)
4cf8(5): jmp 0xfffffedc(%rip)
4cfd(3): nop (%rax)
4d00(7): mov 0x20c521(%rip),%r9
4d07(8): movzx 0x20c4e5(%rip),%r11d
4d0f(8): lea 0x0(,%r15,4),%rcx
4d17(7): mov 0x20c312(%rip),%r10d
4d1e(3): mov %r13d,%eax
4d21(3): mov %r9,%rbp
4d24(7): mov 0x20c4dd(%rip),%rdx
4d2b(3): test %r11b,%r11b
4d2e(4): lea 0xffffffff(%r10),%r13d
4d32(3): mov %eax,0x0(%rdx,%rcx,1)
4d35(6): jz 0xa5(%rip)
4d3b(3): test %r10d,%r10d
4d3e(2): jle 0x40(%rip)
4d40(3): mov %r12d,%eax
4d43(4): lea 0x1(%r10),%ebx
4d47(2): xor %edi,%edi
4d49(1): cdq %eax
4d4a(3): mov %r9,%rsi
4d4d(5): mov $0x1,%ecx
4d52(3): idiv %r10d,%eax
4d55(4): lea 0x1(%rax),%r12d
4d59(7): nop 0x0(%rax)
4d60(2): cmp %edx,%ecx
4d62(3): mov %r12d,%r8d
4d65(3): mov %edi,0x28(%rsi)
4d68(4): cmovnl %eax,%r8d
4d6c(3): add $0x1,%ecx
4d6f(4): add $0x40,%rsi
4d73(4): mov %r8d,0xffffffec(%rsi)
4d77(3): add %r8d,%edi
4d7a(2): cmp %ecx,%ebx
4d7c(2): jnz 0xffffffe4(%rip)
4d7e(3): test %r13d,%r13d
4d81(2): jz 0x3f(%rip)
4d83(4): lea 0xfffffffe(%r10),%edx
4d87(4): lea 0x2c(%r9),%rax
4d8b(3): mov %rdx,%rcx
4d8e(4): shl/sal $0x6,%rdx
4d92(5): lea 0x6c(%r9,%rdx,1),%rsi
4d97(9): nop 0x0(%rax,%rax,1)
4da0(2): mov (%rax),%edx
4da2(4): add $0x40,%rax
4da6(3): mov %edx,0xffffffc4(%rax)
4da9(3): cmp %rax,%rsi
4dac(2): jnz 0xfffffff4(%rip)
4dae(2): mov %ecx,%ebp
4db0(4): add $0x1,%rbp
4db4(4): shl/sal $0x6,%rbp
4db8(3): add %r9,%rbp
4dbb(3): test %r11b,%r11b
4dbe(2): jz 0x21(%rip)
4dc0(3): mov 0x2c(%rbp),%eax
4dc3(3): mov %eax,0x30(%rbp)
4dc6(5): jmp 0xfffffab5(%rip)
4dcb(5): mov $0xa,%esi
4dd0(5): call 0xffffcf20(%rip)
4dd5(5): jmp 0xfffffc23(%rip)
4dda(3): test %r13d,%r13d
4ddd(2): jnz 0xffffffa6(%rip)
4ddf(4): mov 0x10(%rbp),%r11d
4de3(3): test %r11d,%r11d
4de6(6): jnz 0x8c(%rip)
4dec(6): mov 0x20c3fe(%rip),%eax
4df2(3): mov %eax,0x30(%rbp)
4df5(5): jmp 0xfffffa86(%rip)
4dfa(7): lea 0xffffe6df(%rip),%rbx
4e01(4): mov %rbx,0x20(%rax)
4e05(7): lea 0xffffef44(%rip),%rbx
4e0c(4): mov %rbx,0x18(%rax)
4e10(5): jmp 0xfffff9ee(%rip)
4e15(5): mov $0xa,%esi
4e1a(5): call 0xffffced6(%rip)
4e1f(5): jmp 0xfffffc18(%rip)
4e24(7): cmp $0x0,0x20c3cc(%rip)
4e2b(6): jnz 0x396(%rip)
4e31(4): add $0x5,%r13d
4e35(2): jnz 0x20(%rip)
4e37(5): jmp 0xfffffca1(%rip)
4e3c(4): nop 0x0(%rax)
4e40(4): lea 0x1(%rax),%rdx
4e44(4): mov %rdx,0x28(%rdi)
4e48(3): mov $0xa,(%rax)
4e4b(4): sub $0x1,%r13d
4e4f(6): jz 0xfffffc89(%rip)
4e55(7): mov 0x20c28c(%rip),%rdi
4e5c(4): mov 0x28(%rdi),%rax
4e60(4): cmp 0x30(%rdi),%rax
4e64(2): jb 0xffffffdc(%rip)
4e66(5): mov $0xa,%esi
4e6b(5): call 0xffffce85(%rip)
4e70(2): jmp 0xffffffdb(%rip)
4e72(7): mov $0x0,0x30(%rbp)
4e79(5): jmp 0xfffffa02(%rip)
4e7e(6): mov $0x1,%r12d
4e84(4): nop 0x0(%rax)
4e88(7): cmp $0x1,0x20c361(%rip)
4e8f(7): mov 0x20c392(%rip),%rbx
4e96(6): mov $0x1,%r14d
4e9c(6): mov 0x20c18e(%rip),%eax
4ea2(2): jle 0x59(%rip)
4ea4(4): nop 0x0(%rax)
4ea8(2): test %eax,%eax
4eaa(2): jle 0x44(%rip)
4eac(5): mov $0x1,%ebp
4eb1(2): jmp 0x12(%rip)
4eb3(5): nop 0x0(%rax,%rax,1)
4eb8(3): add $0x1,%ebp
4ebb(4): add $0x40,%rbx
4ebf(2): cmp %eax,%ebp
4ec1(2): jnle 0x26(%rip)
4ec3(4): mov 0x10(%rbx),%r10d
4ec7(3): test %r10d,%r10d
4eca(2): jnz 0xffffffee(%rip)
4ecc(2): mov %ebp,%esi
4ece(3): mov %rbx,%rdi
4ed1(3): add $0x1,%ebp
4ed4(5): call 0xffffeb5c(%rip)
4ed9(6): mov 0x20c151(%rip),%eax
4edf(4): add $0x40,%rbx
4ee3(2): cmp %eax,%ebp
4ee5(2): jle 0xffffffde(%rip)
4ee7(7): mov 0x20c33a(%rip),%rbx
4eee(4): add $0x1,%r14d
4ef2(7): cmp 0x20c2f7(%rip),%r14d
4ef9(2): jl 0xffffffaf(%rip)
4efb(2): test %eax,%eax
4efd(7): mov $0x1,0x20c23c(%rip)
4f04(2): jle 0x78(%rip)
4f06(5): mov $0x1,%ebp
4f0b(2): jmp 0x10(%rip)
4f0d(3): nop (%rax)
4f10(3): add $0x1,%ebp
4f13(4): add $0x40,%rbx
4f17(2): cmp %eax,%ebp
4f19(2): jnle 0x26(%rip)
4f1b(4): mov 0x10(%rbx),%r9d
4f1f(3): test %r9d,%r9d
4f22(2): jnz 0xffffffee(%rip)
4f24(2): mov %ebp,%esi
4f26(3): mov %rbx,%rdi
4f29(3): add $0x1,%ebp
4f2c(5): call 0xffffeb04(%rip)
4f31(6): mov 0x20c0f9(%rip),%eax
4f37(4): add $0x40,%rbx
4f3b(2): cmp %eax,%ebp
4f3d(2): jle 0xffffffde(%rip)
4f3f(7): cmp $0x0,0x20c106(%rip)
4f46(2): jz 0x36(%rip)
4f48(2): test %eax,%eax
4f4a(7): mov 0x20c2d7(%rip),%rcx
4f51(2): jle 0x2b(%rip)
4f53(3): sub $0x1,%eax
4f56(4): lea 0x10(%rcx),%rdx
4f5a(4): shl/sal $0x6,%rax
4f5e(5): lea 0x50(%rcx,%rax,1),%rax
4f63(5): nop 0x0(%rax,%rax,1)
4f68(3): cmp $0x3,(%rdx)
4f6b(2): jz 0x8(%rip)
4f6d(6): mov $0x2,(%rdx)
4f73(4): add $0x40,%rdx
4f77(3): cmp %rax,%rdx
4f7a(2): jnz 0xffffffee(%rip)
4f7c(5): call 0xffffdb04(%rip)
4f81(7): mov 0x20c238(%rip),%r8d
4f88(7): mov $0x0,0x20c1b1(%rip)
4f8f(3): test %r8d,%r8d
4f92(6): jle 0x1eb(%rip)
4f98(4): add $0x1,%r12
4f9c(3): cmp %r12,%r13
4f9f(6): jnz 0xfffffee9(%rip)
4fa5(7): mov 0x20c21c(%rip),%rax
4fac(7): mov %rax,0x20c205(%rip)
4fb3(5): jmp 0xfffff6dc(%rip)
4fb8(2): xor %eax,%eax
4fba(2): xor %ecx,%ecx
4fbc(3): xor %r12d,%r12d
4fbf(5): jmp 0xfffffd65(%rip)
4fc4(7): lea 0x6f1a(%rip),%rdi
4fcb(5): mov $0xffffffff,%esi
4fd0(5): call 0xffffdd60(%rip)
4fd5(5): jmp 0xfffff685(%rip)
4fda(6): mov 0x20c210(%rip),%ebx
4fe0(7): imul 0x20c049(%rip),%ebx
4fe7(6): jo 0x24f(%rip)
4fed(3): mov %ebx,%r12d
4ff0(4): add $0x1,%r12d
4ff4(6): jo 0x242(%rip)
4ffa(6): mov 0x20c1e8(%rip),%ebp
5000(3): add $0x1,%ebp
5003(6): jo 0x233(%rip)
5009(3): imul %ebx,%ebp
500c(6): jo 0x22a(%rip)
5012(7): mov 0x20c1ef(%rip),%rdi
5019(5): call 0xffffcb77(%rip)
501e(5): mov $0x4,%edx
5023(3): movsxd %r12d,%rcx
5026(2): xor %esi,%esi
5028(3): mov %rdx,%rax
502b(3): mul %rax,%rcx,%rdx
502e(6): jo 0x1fe(%rip)
5034(3): test %rax,%rax
5037(6): js 0x246(%rip)
503d(3): test %rsi,%rsi
5040(6): jnz 0x23d(%rip)
5046(8): lea 0x0(,%rcx,4),%rdi
504e(3): movsxd %ebx,%rbx
5051(5): call 0x4cbf(%rip)
5056(7): mov 0x20c1a3(%rip),%rdi
505d(7): mov %rax,0x20c1a4(%rip)
5064(5): call 0xffffcb2c(%rip)
5069(5): mov $0x4,%edx
506e(2): xor %ecx,%ecx
5070(3): mov %rdx,%rax
5073(3): mul %rax,%rbx,%rdx
5076(6): jo 0x1c5(%rip)
507c(3): test %rax,%rax
507f(6): js 0x1fe(%rip)
5085(3): test %rcx,%rcx
5088(6): jnz 0x1f5(%rip)
508e(8): lea 0x0(,%rbx,4),%rdi
5096(3): movsxd %ebp,%rbp
5099(5): call 0x4c77(%rip)
509e(7): mov 0x20c17b(%rip),%rdi
50a5(7): mov %rax,0x20c154(%rip)
50ac(5): call 0xffffcae4(%rip)
50b1(7): movzx 0x20c0d8(%rip),%eax
50b8(4): lea 0x1(%rax),%rdi
50bc(3): mov %rdi,%rax
50bf(3): mul %rax,%rbp,%rdx
50c2(3): mov %rax,%rdi
50c5(3): seto %al
50c8(3): test %rdi,%rdi
50cb(3): movzx %al,%eax
50ce(6): js 0x1af(%rip)
50d4(3): test %rax,%rax
50d7(6): jnz 0x1a6(%rip)
50dd(5): call 0x4c33(%rip)
50e2(7): mov %rax,0x20c137(%rip)
50e9(7): movzx 0x20c0a0(%rip),%eax
50f0(4): add $0x1,%rax
50f4(4): imul %rax,%rbp
50f8(7): mov %rbp,0x20c111(%rip)
50ff(5): jmp 0xfffff574(%rip)
5104(7): lea 0x6dca(%rip),%rsi
510b(5): mov $0x5,%edx
5110(2): xor %edi,%edi
5112(5): call 0xffffcb6e(%rip)
5117(4): mov %rax,0x8(%rbx)
511b(7): mov 0x20bfce(%rip),%rax
5122(7): lea 0x6dbc(%rip),%rdi
5129(7): mov $0x0,0x10(%rbx)
5130(4): mov $0x0,0x39(%rbx)
5134(5): mov $0xffffffff,%esi
5139(7): mov $0x1,0x20c0b6(%rip)
5140(7): add $0x1,0x20c04d(%rip)
5147(3): mov %rax,(%rbx)
514a(5): call 0xffffdbe6(%rip)
514f(7): mov $0x0,0x2c(%rbx)
5156(5): jmp 0xfffff4b8(%rip)
515b(2): mov %edx,%edi
515d(3): sar $0x1f,%edi
5160(3): shr $0x1d,%edi
5163(4): lea 0x0(%rdx,%rdi,1),%r8d
5167(4): and $0x7,%r8d
516b(3): sub %r8d,%edi
516e(4): lea 0x8(%rdx,%rdi,1),%edx
5172(6): mov %edx,0x20c030(%rip)
5178(5): jmp 0xfffff27e(%rip)
517d(7): lea 0x6fa4(%rip),%rsi
5184(2): xor %edi,%edi
5186(5): mov $0x5,%edx
518b(5): call 0xffffcaf5(%rip)
5190(2): xor %edi,%edi
5192(3): mov %rax,%rdx
5195(2): xor %esi,%esi
5197(2): xor %eax,%eax
5199(3): mov %r12,%r8
519c(3): mov %r13,%rcx
519f(5): call 0xffffcd41(%rip)
51a4(6): mov 0x20c016(%rip),%edi
51aa(2): test %edi,%edi
51ac(6): jnle 0xfffffdf9(%rip)
51b2(4): add $0x18,%rsp
51b6(1): pop %rbx
51b7(1): pop %rbp
51b8(2): pop %r12
51ba(2): pop %r13
51bc(2): pop %r14
51be(2): pop %r15
51c0(1): ret near (%rsp)
51c1(7): mov 0x20bf20(%rip),%rdi
51c8(4): mov 0x28(%rdi),%rax
51cc(4): cmp 0x30(%rdi),%rax
51d0(2): jnb 0x4d(%rip)
51d2(4): lea 0x1(%rax),%rdx
51d6(4): mov %rdx,0x28(%rdi)
51da(3): mov $0xc,(%rax)
51dd(5): jmp 0xfffff8fb(%rip)
51e2(6): jnz 0xfffff8bd(%rip)
51e8(3): test %r10d,%r10d
51eb(6): jnle 0xfffff871(%rip)
51f1(7): mov $0x0,0x20bf88(%rip)
51f8(5): jmp 0xfffff8a7(%rip)
51fd(5): mov $0x1,%edx
5202(7): movzx 0x20bfa3(%rip),%edi
5209(5): jmp 0xfffff5c9(%rip)
520e(5): mov $0xc,%esi
5213(5): call 0xffffcadd(%rip)
5218(5): jmp 0xfffff8b9(%rip)
521d(5): mov $0xc,%esi
5222(5): call 0xffffcace(%rip)
5227(5): jmp 0xfffff8b1(%rip)
522c(5): mov $0x1,%esi
5231(5): jmp 0xfffffe03(%rip)
5236(5): call 0xffffd91a(%rip)
523b(5): mov $0x1,%ecx
5240(5): jmp 0xfffffe3c(%rip)
5245(5): mov $0x1,%ecx
524a(5): jmp 0xfffff280(%rip)
524f(a): mov $0x0,0x20bf8f(%rip)
5259(7): lea 0x6c86(%rip),%rsi
5260(5): mov $0x5,%edx
5265(2): xor %edi,%edi
5267(5): call 0xffffca19(%rip)
526c(2): xor %esi,%esi
526e(3): mov %rax,%rdx
5271(5): mov $0x1,%edi
5276(2): xor %eax,%eax
5278(5): call 0xffffcc68(%rip)
527d(5): call 0x4ce3(%rip)
5282(6): mov 0x20bda8(%rip),%ecx
5288(5): jmp 0xfffff0c4(%rip)
528d(5): mov $0x7fffffff,%edx
5292(5): jmp 0xfffff183(%rip)

"usage" :
52a0(2): push %r13
52a2(2): push %r12
52a4(5): mov $0x5,%edx
52a9(1): push %rbp
52aa(1): push %rbx
52ab(2): mov %edi,%ebp
52ad(7): sub $0x88,%rsp
52b4(7): mov 0x20bf85(%rip),%rbx
52bb(9): mov $0x28,%rax
52c4(5): mov %rax,0x78(%rsp)
52c9(2): xor %eax,%eax
52cb(2): test %edi,%edi
52cd(2): jz 0x30(%rip)
52cf(7): lea 0x6e82(%rip),%rsi
52d6(2): xor %edi,%edi
52d8(5): call 0xffffc9a8(%rip)
52dd(7): mov 0x20be3c(%rip),%rdi
52e4(3): mov %rax,%rdx
52e7(3): mov %rbx,%rcx
52ea(5): mov $0x1,%esi
52ef(2): xor %eax,%eax
52f1(5): call 0xffffcc5f(%rip)
52f6(2): mov %ebp,%edi
52f8(5): call 0xffffcc38(%rip)
52fd(7): lea 0x6e7c(%rip),%rsi
5304(2): xor %edi,%edi
5306(5): call 0xffffc97a(%rip)
530b(3): mov %rbx,%rdx
530e(3): mov %rax,%rsi
5311(5): mov $0x1,%edi
5316(2): xor %eax,%eax
5318(5): call 0xffffcb98(%rip)
531d(7): mov 0x20bdc4(%rip),%rbx
5324(7): lea 0x6e7d(%rip),%rsi
532b(5): mov $0x5,%edx
5330(2): xor %edi,%edi
5332(5): call 0xffffc94e(%rip)
5337(3): mov %rbx,%rsi
533a(3): mov %rax,%rdi
533d(5): call 0xffffca53(%rip)
5342(7): mov 0x20bd9f(%rip),%rbx
5349(7): lea 0x6e88(%rip),%rsi
5350(5): mov $0x5,%edx
5355(2): xor %edi,%edi
5357(5): call 0xffffc929(%rip)
535c(3): mov %rbx,%rsi
535f(3): mov %rax,%rdi
5362(5): call 0xffffca2e(%rip)
5367(7): mov 0x20bd7a(%rip),%rbx
536e(7): lea 0x6e9b(%rip),%rsi
5375(5): mov $0x5,%edx
537a(2): xor %edi,%edi
537c(5): call 0xffffc904(%rip)
5381(3): mov %rbx,%rsi
5384(3): mov %rax,%rdi
5387(5): call 0xffffca09(%rip)
538c(7): mov 0x20bd55(%rip),%rbx
5393(7): lea 0x6ec6(%rip),%rsi
539a(5): mov $0x5,%edx
539f(2): xor %edi,%edi
53a1(5): call 0xffffc8df(%rip)
53a6(3): mov %rbx,%rsi
53a9(3): mov %rax,%rdi
53ac(5): call 0xffffc9e4(%rip)
53b1(7): mov 0x20bd30(%rip),%rbx
53b8(7): lea 0x6ff1(%rip),%rsi
53bf(5): mov $0x5,%edx
53c4(2): xor %edi,%edi
53c6(5): call 0xffffc8ba(%rip)
53cb(3): mov %rbx,%rsi
53ce(3): mov %rax,%rdi
53d1(5): call 0xffffc9bf(%rip)
53d6(7): mov 0x20bd0b(%rip),%rbx
53dd(7): lea 0x70dc(%rip),%rsi
53e4(5): mov $0x5,%edx
53e9(2): xor %edi,%edi
53eb(5): call 0xffffc895(%rip)
53f0(3): mov %rbx,%rsi
53f3(3): mov %rax,%rdi
53f6(5): call 0xffffc99a(%rip)
53fb(7): mov 0x20bce6(%rip),%rbx
5402(7): lea 0x7247(%rip),%rsi
5409(5): mov $0x5,%edx
540e(2): xor %edi,%edi
5410(5): call 0xffffc870(%rip)
5415(3): mov %rbx,%rsi
5418(3): mov %rax,%rdi
541b(5): call 0xffffc975(%rip)
5420(7): mov 0x20bcc1(%rip),%rbx
5427(7): lea 0x73d2(%rip),%rsi
542e(5): mov $0x5,%edx
5433(2): xor %edi,%edi
5435(5): call 0xffffc84b(%rip)
543a(3): mov %rbx,%rsi
543d(3): mov %rax,%rdi
5440(5): call 0xffffc950(%rip)
5445(7): mov 0x20bc9c(%rip),%rbx
544c(7): lea 0x748d(%rip),%rsi
5453(5): mov $0x5,%edx
5458(2): xor %edi,%edi
545a(5): call 0xffffc826(%rip)
545f(3): mov %rbx,%rsi
5462(3): mov %rax,%rdi
5465(5): call 0xffffc92b(%rip)
546a(7): mov 0x20bc77(%rip),%rbx
5471(7): lea 0x74f8(%rip),%rsi
5478(5): mov $0x5,%edx
547d(2): xor %edi,%edi
547f(5): call 0xffffc801(%rip)
5484(3): mov %rbx,%rsi
5487(3): mov %rax,%rdi
548a(5): call 0xffffc906(%rip)
548f(7): mov 0x20bc52(%rip),%rbx
5496(7): lea 0x7633(%rip),%rsi
549d(5): mov $0x5,%edx
54a2(2): xor %edi,%edi
54a4(5): call 0xffffc7dc(%rip)
54a9(3): mov %rbx,%rsi
54ac(3): mov %rax,%rdi
54af(5): call 0xffffc8e1(%rip)
54b4(7): mov 0x20bc2d(%rip),%rbx
54bb(7): lea 0x770e(%rip),%rsi
54c2(5): mov $0x5,%edx
54c7(2): xor %edi,%edi
54c9(5): call 0xffffc7b7(%rip)
54ce(3): mov %rbx,%rsi
54d1(3): mov %rax,%rdi
54d4(5): call 0xffffc8bc(%rip)
54d9(7): mov 0x20bc08(%rip),%rbx
54e0(7): lea 0x7831(%rip),%rsi
54e7(5): mov $0x5,%edx
54ec(2): xor %edi,%edi
54ee(5): call 0xffffc792(%rip)
54f3(3): mov %rbx,%rsi
54f6(3): mov %rax,%rdi
54f9(5): call 0xffffc897(%rip)
54fe(7): mov 0x20bbe3(%rip),%rbx
5505(7): lea 0x78fc(%rip),%rsi
550c(5): mov $0x5,%edx
5511(2): xor %edi,%edi
5513(5): call 0xffffc76d(%rip)
5518(3): mov %rbx,%rsi
551b(3): mov %rax,%rdi
551e(5): call 0xffffc872(%rip)
5523(7): mov 0x20bbbe(%rip),%rbx
552a(7): lea 0x793f(%rip),%rsi
5531(5): mov $0x5,%edx
5536(2): xor %edi,%edi
5538(5): call 0xffffc748(%rip)
553d(3): mov %rbx,%rsi
5540(3): mov %rax,%rdi
5543(5): call 0xffffc84d(%rip)
5548(7): mov 0x20bb99(%rip),%rbx
554f(7): lea 0x7ab2(%rip),%rsi
5556(5): mov $0x5,%edx
555b(2): xor %edi,%edi
555d(5): call 0xffffc723(%rip)
5562(3): mov %rbx,%rsi
5565(3): mov %rax,%rdi
5568(5): call 0xffffc828(%rip)
556d(7): mov 0x20bb74(%rip),%rbx
5574(7): lea 0x7b65(%rip),%rsi
557b(5): mov $0x5,%edx
5580(2): xor %edi,%edi
5582(5): call 0xffffc6fe(%rip)
5587(3): mov %rbx,%rsi
558a(3): mov %rax,%rdi
558d(5): call 0xffffc803(%rip)
5592(7): mov 0x20bb4f(%rip),%rbx
5599(7): lea 0x7b70(%rip),%rsi
55a0(5): mov $0x5,%edx
55a5(2): xor %edi,%edi
55a7(5): call 0xffffc6d9(%rip)
55ac(3): mov %rbx,%rsi
55af(3): mov %rax,%rdi
55b2(7): lea 0x6943(%rip),%rbx
55b9(5): call 0xffffc7d7(%rip)
55be(7): lea 0x693a(%rip),%rax
55c5(7): lea 0x6974(%rip),%rcx
55cc(9): mov $0x0,0x60(%rsp)
55d5(9): mov $0x0,0x68(%rsp)
55de(3): mov %rsp,%rdx
55e1(4): mov %rax,(%rsp)
55e5(7): lea 0x6915(%rip),%rax
55ec(5): mov %rcx,0x30(%rsp)
55f1(7): lea 0x6952(%rip),%rcx
55f8(5): mov %rax,0x8(%rsp)
55fd(7): lea 0x6975(%rip),%rax
5604(5): mov %rcx,0x40(%rsp)
5609(7): lea 0x6944(%rip),%rcx
5610(5): mov %rax,0x10(%rsp)
5615(7): lea 0x68f5(%rip),%rax
561c(5): mov %rcx,0x50(%rsp)
5621(5): mov %rax,0x18(%rsp)
5626(7): lea 0x68fa(%rip),%rax
562d(5): mov %rax,0x20(%rsp)
5632(7): lea 0x68f8(%rip),%rax
5639(5): mov %rax,0x28(%rsp)
563e(5): mov %rax,0x38(%rsp)
5643(5): mov %rax,0x48(%rsp)
5648(5): mov %rax,0x58(%rsp)
564d(3): nop (%rax)
5650(4): add $0x10,%rdx
5654(3): mov (%rdx),%rdi
5657(3): test %rdi,%rdi
565a(2): jz 0x15(%rip)
565c(5): mov $0x3,%ecx
5661(3): mov %rbx,%rsi
5664(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5666(3): setnbe %al
5669(2): sbb $0x0,%al
566b(2): test %al,%al
566d(2): jnz 0xffffffe3(%rip)
566f(4): mov 0x8(%rdx),%r12
5673(2): xor %edi,%edi
5675(5): mov $0x5,%edx
567a(7): lea 0x68dd(%rip),%rsi
5681(3): test %r12,%r12
5684(6): jz 0xc7(%rip)
568a(5): call 0xffffc5f6(%rip)
568f(7): lea 0x7ab2(%rip),%rcx
5696(7): lea 0x68d8(%rip),%rdx
569d(3): mov %rax,%rsi
56a0(5): mov $0x1,%edi
56a5(2): xor %eax,%eax
56a7(5): call 0xffffc809(%rip)
56ac(2): xor %esi,%esi
56ae(5): mov $0x5,%edi
56b3(5): call 0xffffc7ed(%rip)
56b8(3): test %rax,%rax
56bb(2): jz 0x1e(%rip)
56bd(7): lea 0x68bf(%rip),%rsi
56c4(5): mov $0x3,%edx
56c9(3): mov %rax,%rdi
56cc(5): call 0xffffc4f4(%rip)
56d1(2): test %eax,%eax
56d3(6): jnz 0x10d(%rip)
56d9(7): lea 0x68a7(%rip),%rsi
56e0(2): xor %edi,%edi
56e2(5): mov $0x5,%edx
56e7(5): call 0xffffc599(%rip)
56ec(7): lea 0x6809(%rip),%rcx
56f3(7): lea 0x7a4e(%rip),%rdx
56fa(3): mov %rax,%rsi
56fd(5): mov $0x1,%edi
5702(2): xor %eax,%eax
5704(5): call 0xffffc7ac(%rip)
5709(3): cmp %rbx,%r12
570c(7): lea 0x6808(%rip),%rcx
5713(7): lea 0x67cb(%rip),%rbx
571a(4): cmove %rcx,%rbx
571e(7): lea 0x7a93(%rip),%rsi
5725(2): xor %edi,%edi
5727(5): mov $0x5,%edx
572c(5): call 0xffffc554(%rip)
5731(3): mov %rbx,%rcx
5734(3): mov %rax,%rsi
5737(3): mov %r12,%rdx
573a(5): mov $0x1,%edi
573f(2): xor %eax,%eax
5741(5): call 0xffffc76f(%rip)
5746(5): jmp 0xfffffbb0(%rip)
574b(5): call 0xffffc535(%rip)
5750(7): lea 0x79f1(%rip),%rcx
5757(7): lea 0x6817(%rip),%rdx
575e(3): mov %rax,%rsi
5761(5): mov $0x1,%edi
5766(2): xor %eax,%eax
5768(5): call 0xffffc748(%rip)
576d(2): xor %esi,%esi
576f(5): mov $0x5,%edi
5774(5): call 0xffffc72c(%rip)
5779(3): test %rax,%rax
577c(2): jz 0x1a(%rip)
577e(7): lea 0x67fe(%rip),%rsi
5785(5): mov $0x3,%edx
578a(3): mov %rax,%rdi
578d(5): call 0xffffc433(%rip)
5792(2): test %eax,%eax
5794(2): jnz 0x45(%rip)
5796(7): lea 0x67ea(%rip),%rsi
579d(5): mov $0x5,%edx
57a2(2): xor %edi,%edi
57a4(7): lea 0x6751(%rip),%r12
57ab(7): lea 0x6769(%rip),%rbx
57b2(5): call 0xffffc4ce(%rip)
57b7(7): lea 0x673e(%rip),%rcx
57be(7): lea 0x7983(%rip),%rdx
57c5(3): mov %rax,%rsi
57c8(5): mov $0x1,%edi
57cd(2): xor %eax,%eax
57cf(5): call 0xffffc6e1(%rip)
57d4(5): jmp 0xffffff4a(%rip)
57d9(7): lea 0x671c(%rip),%r12
57e0(7): mov 0x20b901(%rip),%r13
57e7(7): lea 0x7982(%rip),%rsi
57ee(2): xor %edi,%edi
57f0(5): mov $0x5,%edx
57f5(5): call 0xffffc48b(%rip)
57fa(3): mov %r13,%rsi
57fd(3): mov %rax,%rdi
5800(5): call 0xffffc590(%rip)
5805(5): jmp 0xfffffed4(%rip)

"getoptarg" :
5810(2): push %r12
5812(1): push %rbp
5813(3): mov %esi,%r12d
5816(1): push %rbx
5817(3): mov %rcx,%rbp
581a(3): mov %rdi,%rbx
581d(4): sub $0x10,%rsp
5821(3): movsx (%rdi),%esi
5824(9): mov $0x28,%rax
582d(5): mov %rax,0x8(%rsp)
5832(2): xor %eax,%eax
5834(2): mov %esi,%eax
5836(3): sub $0x30,%esi
5839(3): cmp $0x9,%esi
583c(2): jbe 0xc(%rip)
583e(2): mov %al,(%rdx)
5840(4): movzx 0x1(%rdi),%eax
5844(4): add $0x1,%rbx
5848(2): test %al,%al
584a(2): jnz 0x26(%rip)
584c(5): mov 0x8(%rsp),%rax
5851(9): xor $0x28,%rax
585a(6): jnz 0xa0(%rip)
5860(4): add $0x10,%rsp
5864(1): pop %rbx
5865(1): pop %rbp
5866(2): pop %r12
5868(1): ret near (%rsp)
5869(7): nop 0x0(%rax)
5870(7): lea 0x666e(%rip),%r8
5877(2): xor %esi,%esi
5879(3): mov %rsp,%rcx
587c(5): mov $0xa,%edx
5881(3): mov %rbx,%rdi
5884(5): call 0x4f2c(%rip)
5889(2): test %eax,%eax
588b(2): jnz 0x18(%rip)
588d(4): mov (%rsp),%rax
5891(4): lea 0xffffffff(%rax),%rdx
5895(7): cmp $0x7ffffffe,%rdx
589c(2): jnbe 0x7(%rip)
589e(3): mov %eax,0x0(%rbp)
58a1(2): jmp 0xffffffab(%rip)
58a3(3): mov %rbx,%rdi
58a6(4): movsx %r12b,%r12d
58aa(5): call 0x3e16(%rip)
58af(7): lea 0x793a(%rip),%rsi
58b6(2): xor %edi,%edi
58b8(5): mov $0x5,%edx
58bd(3): mov %rax,%rbp
58c0(5): call 0xffffc3c0(%rip)
58c5(8): cmp $0x7fffffff,(%rsp)
58cd(3): mov %rax,%rbx
58d0(5): mov $0x4b,%esi
58d5(2): jnle 0x9(%rip)
58d7(5): call 0xffffc2d9(%rip)
58dc(2): mov (%rax),%esi
58de(2): xor %edi,%edi
58e0(3): mov %rbp,%r8
58e3(3): mov %r12d,%ecx
58e6(3): mov %rbx,%rdx
58e9(2): xor %eax,%eax
58eb(5): call 0xffffc5f5(%rip)
58f0(5): mov $0x1,%edi
58f5(5): call 0xfffff9ab(%rip)
58fa(5): call 0xffffc3b6(%rip)

"close_stdout_set_file_name" :
5900(7): mov %rdi,0x20b931(%rip)
5907(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5910(7): mov %dil,0x20b919(%rip)
5917(1): ret near (%rsp)

"close_stdout" :
5920(1): push %rbp
5921(1): push %rbx
5922(4): sub $0x8,%rsp
5926(7): mov 0x20b7bb(%rip),%rdi
592d(5): call 0x63c3(%rip)
5932(2): test %eax,%eax
5934(2): jz 0x18(%rip)
5936(5): call 0xffffc27a(%rip)
593b(7): cmp $0x0,0x20b8ee(%rip)
5942(3): mov %rax,%rbx
5945(2): jz 0x1e(%rip)
5947(3): cmp $0x20,(%rax)
594a(2): jnz 0x19(%rip)
594c(7): mov 0x20b7cd(%rip),%rdi
5953(5): call 0x639d(%rip)
5958(2): test %eax,%eax
595a(2): jnz 0x48(%rip)
595c(4): add $0x8,%rsp
5960(1): pop %rbx
5961(1): pop %rbp
5962(1): ret near (%rsp)
5963(7): lea 0x7ed0(%rip),%rsi
596a(2): xor %edi,%edi
596c(5): mov $0x5,%edx
5971(5): call 0xffffc30f(%rip)
5976(7): mov 0x20b8bb(%rip),%rdi
597d(3): mov %rax,%rbp
5980(3): test %rdi,%rdi
5983(2): jz 0x2a(%rip)
5985(5): call 0x3b3b(%rip)
598a(2): mov (%rbx),%esi
598c(7): lea 0x7eb3(%rip),%rdx
5993(3): mov %rax,%rcx
5996(3): mov %rbp,%r8
5999(2): xor %edi,%edi
599b(2): xor %eax,%eax
599d(5): call 0xffffc543(%rip)
59a2(6): mov 0x20b6b8(%rip),%edi
59a8(5): call 0xffffc238(%rip)
59ad(2): mov (%rbx),%esi
59af(7): lea 0x7e94(%rip),%rdx
59b6(3): mov %rax,%rcx
59b9(2): xor %edi,%edi
59bb(2): xor %eax,%eax
59bd(5): call 0xffffc523(%rip)
59c2(2): jmp 0xffffffe0(%rip)

"fadvise" :
59e0(3): test %rdi,%rdi
59e3(2): jz 0x1d(%rip)
59e5(1): push %rbx
59e6(2): mov %esi,%ebx
59e8(5): call 0xffffc408(%rip)
59ed(2): mov %ebx,%ecx
59ef(2): xor %edx,%edx
59f1(2): xor %esi,%esi
59f3(1): pop %rbx
59f4(2): mov %eax,%edi
59f6(5): jmp 0xffffc37a(%rip)
59fb(5): nop 0x0(%rax,%rax,1)
5a00(2): REP ret near (%rsp)

"fopen_safer" :
5a10(2): push %r12
5a12(1): push %rbp
5a13(3): mov %rsi,%rbp
5a16(1): push %rbx
5a17(5): call 0xffffc4e9(%rip)
5a1c(3): test %rax,%rax
5a1f(3): mov %rax,%rbx
5a22(2): jz 0xf(%rip)
5a24(3): mov %rax,%rdi
5a27(5): call 0xffffc3c9(%rip)
5a2c(3): cmp $0x2,%eax
5a2f(2): jbe 0x11(%rip)
5a31(3): mov %rbx,%rax
5a34(1): pop %rbx
5a35(1): pop %rbp
5a36(2): pop %r12
5a38(1): ret near (%rsp)
5a39(7): nop 0x0(%rax)
5a40(2): mov %eax,%edi
5a42(5): call 0x3c9e(%rip)
5a47(2): test %eax,%eax
5a49(3): mov %eax,%r12d
5a4c(2): js 0x3c(%rip)
5a4e(3): mov %rbx,%rdi
5a51(5): call 0x58ef(%rip)
5a56(2): test %eax,%eax
5a58(2): jnz 0x15(%rip)
5a5a(3): mov %rbp,%rsi
5a5d(3): mov %r12d,%edi
5a60(5): call 0xffffc430(%rip)
5a65(3): test %rax,%rax
5a68(3): mov %rax,%rbx
5a6b(2): jnz 0xffffffc6(%rip)
5a6d(5): call 0xffffc143(%rip)
5a72(2): mov (%rax),%ebp
5a74(3): mov %rax,%rbx
5a77(3): mov %r12d,%edi
5a7a(5): call 0xffffc2e6(%rip)
5a7f(2): mov %ebp,(%rbx)
5a81(2): xor %ebx,%ebx
5a83(2): jmp 0xffffffae(%rip)
5a85(3): nop (%rax)
5a88(5): call 0xffffc128(%rip)
5a8d(3): mov (%rax),%r12d
5a90(3): mov %rax,%rbp
5a93(3): mov %rbx,%rdi
5a96(5): call 0x58aa(%rip)
5a9b(2): xor %ebx,%ebx
5a9d(4): mov %r12d,0x0(%rbp)
5aa1(2): jmp 0xffffff90(%rip)

"gettime" :
5ab0(3): mov %rdi,%rsi
5ab3(2): xor %edi,%edi
5ab5(5): jmp 0xffffc16b(%rip)

"current_timespec" :
5ac0(4): sub $0x28,%rsp
5ac4(2): xor %edi,%edi
5ac6(3): mov %rsp,%rsi
5ac9(9): mov $0x28,%rax
5ad2(5): mov %rax,0x18(%rsp)
5ad7(2): xor %eax,%eax
5ad9(5): call 0xffffc147(%rip)
5ade(5): mov 0x18(%rsp),%rcx
5ae3(9): xor $0x28,%rcx
5aec(4): mov (%rsp),%rax
5af0(5): mov 0x8(%rsp),%rdx
5af5(2): jnz 0x7(%rip)
5af7(4): add $0x28,%rsp
5afb(1): ret near (%rsp)
5afc(5): call 0xffffc1b4(%rip)

"hard_locale" :
5b10(4): sub $0x8,%rsp
5b14(2): xor %esi,%esi
5b16(5): call 0xffffc38a(%rip)
5b1b(3): mov %rax,%rdx
5b1e(5): mov $0x1,%eax
5b23(3): test %rdx,%rdx
5b26(2): jz 0x1f(%rip)
5b28(7): lea 0x7d1e(%rip),%rdi
5b2f(5): mov $0x2,%ecx
5b34(3): mov %rdx,%rsi
5b37(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5b39(3): setnbe %cl
5b3c(3): sbb $0x0,%cl
5b3f(2): xor %eax,%eax
5b41(2): test %cl,%cl
5b43(2): jnz 0xd(%rip)
5b45(4): add $0x8,%rsp
5b49(1): ret near (%rsp)
5b4a(6): nop 0x0(%rax,%rax,1)
5b50(7): lea 0x7cf8(%rip),%rdi
5b57(5): mov $0x6,%ecx
5b5c(3): mov %rdx,%rsi
5b5f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5b61(3): setnbe %al
5b64(2): sbb $0x0,%al
5b66(2): test %al,%al
5b68(3): setnz %al
5b6b(4): add $0x8,%rsp
5b6f(1): ret near (%rsp)

"imaxtostr" :
5b70(3): test %rdi,%rdi
5b73(4): lea 0x14(%rsi),%rcx
5b77(4): mov $0x0,0x14(%rsi)
5b7b(a): mov $0x7378697629483820647,%r9
5b85(a): mov $0x-3689348814741910323,%rsi
5b8f(6): mov $0x30,%r8d
5b95(2): js 0x3e(%rip)
5b97(9): nop 0x0(%rax,%rax,1)
5ba0(3): mov %rdi,%rax
5ba3(4): sub $0x1,%rcx
5ba7(3): mul %rax,%rsi,%rdx
5baa(4): shr $0x3,%rdx
5bae(4): lea 0x0(%rdx,%rdx,4),%rax
5bb2(3): add %rax,%rax
5bb5(3): sub %rax,%rdi
5bb8(3): add $0x30,%edi
5bbb(3): test %rdx,%rdx
5bbe(3): mov %dil,(%rcx)
5bc1(3): mov %rdx,%rdi
5bc4(2): jnz 0xffffffdc(%rip)
5bc6(3): mov %rcx,%rax
5bc9(1): ret near (%rsp)
5bca(6): nop 0x0(%rax,%rax,1)
5bd0(3): mov %rsi,%rcx
5bd3(3): mov %rdi,%rax
5bd6(4): lea 0xffffffff(%rcx),%rsi
5bda(3): imul %rax,%r9,%rdx
5bdd(3): mov %rdi,%rax
5be0(4): sar $0x3f,%rax
5be4(4): sar $0x2,%rdx
5be8(3): sub %rax,%rdx
5beb(4): lea 0x0(%rdx,%rdx,4),%rax
5bef(4): lea 0x0(%r8,%rax,2),%eax
5bf3(2): sub %edi,%eax
5bf5(3): test %rdx,%rdx
5bf8(3): mov %rdx,%rdi
5bfb(3): mov %al,0xffffffff(%rcx)
5bfe(2): jnz 0xffffffd2(%rip)
5c00(4): sub $0x2,%rcx
5c04(4): mov $0x2d,0xffffffff(%rsi)
5c08(3): mov %rcx,%rax
5c0b(1): ret near (%rsp)

"mbsnwidth" :
5c10(2): push %r15
5c12(2): push %r14
5c14(2): push %r13
5c16(2): push %r12
5c18(4): lea 0x0(%rdi,%rsi,1),%r13
5c1c(1): push %rbp
5c1d(1): push %rbx
5c1e(3): mov %rdi,%rbx
5c21(4): sub $0x38,%rsp
5c25(9): mov $0x28,%rax
5c2e(5): mov %rax,0x28(%rsp)
5c33(2): xor %eax,%eax
5c35(4): mov %edx,0xc(%rsp)
5c39(5): call 0xffffc057(%rip)
5c3e(4): cmp $0x1,%rax
5c42(6): jbe 0x136(%rip)
5c48(2): xor %ebp,%ebp
5c4a(3): cmp %r13,%rbx
5c4d(6): jnb 0xf0(%rip)
5c53(5): lea 0x20(%rsp),%r12
5c58(5): lea 0x1c(%rsp),%r14
5c5d(2): jmp 0x1e(%rip)
5c5f(1): nop 
5c60(2): cmp $0x25,%al
5c62(2): jnl 0x9(%rip)
5c64(3): sub $0x20,%eax
5c67(2): cmp $0x3,%al
5c69(2): jnbe 0x28(%rip)
5c6b(4): add $0x1,%rbx
5c6f(3): add $0x1,%ebp
5c72(3): cmp %r13,%rbx
5c75(6): jnb 0xc8(%rip)
5c7b(3): movzx (%rbx),%eax
5c7e(2): cmp $0x3f,%al
5c80(2): jle 0xffffffe0(%rip)
5c82(2): cmp $0x41,%al
5c84(2): jl 0xd(%rip)
5c86(2): cmp $0x5f,%al
5c88(2): jle 0xffffffe3(%rip)
5c8a(3): sub $0x61,%eax
5c8d(2): cmp $0x1d,%al
5c8f(2): jbe 0xffffffdc(%rip)
5c91(8): mov $0x0,(%r12)
5c99(2): jmp 0x27(%rip)
5c9b(5): nop 0x0(%rax,%rax,1)
5ca0(5): mov $0x7fffffff,%ecx
5ca5(2): sub %ebp,%ecx
5ca7(2): cmp %eax,%ecx
5ca9(6): jl 0x117(%rip)
5caf(2): add %eax,%ebp
5cb1(3): mov %r12,%rdi
5cb4(3): add %r15,%rbx
5cb7(5): call 0xffffc2a9(%rip)
5cbc(2): test %eax,%eax
5cbe(2): jnz 0xffffffb4(%rip)
5cc0(3): mov %r13,%rdx
5cc3(3): mov %r12,%rcx
5cc6(3): mov %rbx,%rsi
5cc9(3): sub %rbx,%rdx
5ccc(3): mov %r14,%rdi
5ccf(5): call 0x5a11(%rip)
5cd4(4): cmp $0xffffffff,%rax
5cd8(3): mov %rax,%r15
5cdb(2): jz 0x4d(%rip)
5cdd(4): cmp $0xfffffffe,%rax
5ce1(2): jz 0x7f(%rip)
5ce3(4): mov 0x1c(%rsp),%edi
5ce7(3): test %rax,%rax
5cea(5): mov $0x1,%eax
5cef(4): cmove %rax,%r15
5cf3(5): call 0xffffc10d(%rip)
5cf8(2): test %eax,%eax
5cfa(2): jns 0xffffffa6(%rip)
5cfc(5): test $0x2,0xc(%rsp)
5d01(2): jnz 0x37(%rip)
5d03(4): mov 0x1c(%rsp),%edi
5d07(5): call 0xffffbef9(%rip)
5d0c(2): test %eax,%eax
5d0e(2): jnz 0xffffffa3(%rip)
5d10(6): cmp $0x7fffffff,%ebp
5d16(6): jz 0xaa(%rip)
5d1c(3): add $0x1,%ebp
5d1f(2): jmp 0xffffff92(%rip)
5d21(7): nop 0x0(%rax)
5d28(5): test $0x1,0xc(%rsp)
5d2d(6): jz 0xffffff3e(%rip)
5d33(5): nop 0x0(%rax,%rax,1)
5d38(5): mov $0xffffffff,%ebp
5d3d(5): mov 0x28(%rsp),%rsi
5d42(9): xor $0x28,%rsi
5d4b(2): mov %ebp,%eax
5d4d(2): jnz 0x7d(%rip)
5d4f(4): add $0x38,%rsp
5d53(1): pop %rbx
5d54(1): pop %rbp
5d55(2): pop %r12
5d57(2): pop %r13
5d59(2): pop %r14
5d5b(2): pop %r15
5d5d(1): ret near (%rsp)
5d5e(2): nop 
5d60(5): test $0x1,0xc(%rsp)
5d65(2): jnz 0xffffffd3(%rip)
5d67(3): add $0x1,%ebp
5d6a(3): mov %r13,%rbx
5d6d(5): jmp 0xffffff05(%rip)
5d72(6): nop 0x0(%rax,%rax,1)
5d78(2): xor %ebp,%ebp
5d7a(3): cmp %r13,%rbx
5d7d(2): jnb 0xffffffc0(%rip)
5d7f(5): call 0xffffc211(%rip)
5d84(4): mov 0xc(%rsp),%edx
5d88(3): mov (%rax),%rcx
5d8b(2): xor %ebp,%ebp
5d8d(3): and $0x2,%edx
5d90(4): add $0x1,%rbx
5d94(4): movzx 0xffffffff(%rbx),%eax
5d98(4): movzx 0x0(%rcx,%rax,2),%eax
5d9c(3): test $0x40,%ah
5d9f(2): jnz 0xa(%rip)
5da1(2): test %edx,%edx
5da3(2): jnz 0xffffff95(%rip)
5da5(2): test $0x2,%al
5da7(2): jnz 0xd(%rip)
5da9(6): cmp $0x7fffffff,%ebp
5daf(2): jz 0xffffff8e(%rip)
5db1(3): add $0x1,%ebp
5db4(3): cmp %rbx,%r13
5db7(2): jnz 0xffffffd9(%rip)
5db9(2): jmp 0xffffff84(%rip)
5dbb(5): nop 0x0(%rax,%rax,1)
5dc0(5): mov $0x7fffffff,%ebp
5dc5(5): jmp 0xffffff78(%rip)
5dca(5): call 0xffffbee6(%rip)

"gnu_mbswidth" :
5dd0(1): push %rbp
5dd1(1): push %rbx
5dd2(2): mov %esi,%ebp
5dd4(3): mov %rdi,%rbx
5dd7(4): sub $0x8,%rsp
5ddb(5): call 0xffffbec5(%rip)
5de0(4): add $0x8,%rsp
5de4(2): mov %ebp,%edx
5de6(3): mov %rbx,%rdi
5de9(1): pop %rbx
5dea(1): pop %rbp
5deb(3): mov %rax,%rsi
5dee(5): jmp 0xfffffe22(%rip)

"memcpy_lowcase" :
5e00(3): test %rdx,%rdx
5e03(2): push %r12
5e05(1): push %rbp
5e06(3): mov %rdi,%rbp
5e09(1): push %rbx
5e0a(2): jz 0x2f(%rip)
5e0c(3): mov %rsi,%r12
5e0f(4): lea 0xffffffff(%rdx),%rbx
5e13(5): call 0xffffc16d(%rip)
5e18(8): nop 0x0(%rax,%rax,1)
5e20(5): movzx 0x0(%r12,%rbx,1),%ecx
5e25(3): mov (%rax),%rdx
5e28(3): mov 0x0(%rdx,%rcx,4),%edx
5e2b(4): mov %dl,0x0(%rbp,%rbx,1)
5e2f(4): sub $0x1,%rbx
5e33(4): cmp $0xffffffff,%rbx
5e37(2): jnz 0xffffffe9(%rip)
5e39(3): mov %rbp,%rax
5e3c(1): pop %rbx
5e3d(1): pop %rbp
5e3e(2): pop %r12
5e40(1): ret near (%rsp)

"memcpy_uppcase" :
5e50(3): test %rdx,%rdx
5e53(2): push %r12
5e55(1): push %rbp
5e56(3): mov %rdi,%rbp
5e59(1): push %rbx
5e5a(2): jz 0x2f(%rip)
5e5c(3): mov %rsi,%r12
5e5f(4): lea 0xffffffff(%rdx),%rbx
5e63(5): call 0xffffbcfd(%rip)
5e68(8): nop 0x0(%rax,%rax,1)
5e70(5): movzx 0x0(%r12,%rbx,1),%ecx
5e75(3): mov (%rax),%rdx
5e78(3): mov 0x0(%rdx,%rcx,4),%edx
5e7b(4): mov %dl,0x0(%rbp,%rbx,1)
5e7f(4): sub $0x1,%rbx
5e83(4): cmp $0xffffffff,%rbx
5e87(2): jnz 0xffffffe9(%rip)
5e89(3): mov %rbp,%rax
5e8c(1): pop %rbx
5e8d(1): pop %rbp
5e8e(2): pop %r12
5e90(1): ret near (%rsp)

"__strftime_internal" :
5ea0(2): push %r15
5ea2(2): push %r14
5ea4(3): mov %rdx,%r11
5ea7(2): push %r13
5ea9(2): push %r12
5eab(3): mov %rcx,%r13
5eae(1): push %rbp
5eaf(1): push %rbx
5eb0(3): mov %rdi,%rbp
5eb3(7): sub $0x4c8,%rsp
5eba(4): mov 0x30(%rcx),%rdi
5ebe(4): mov 0x8(%rcx),%r15d
5ec2(8): mov 0x508(%rsp),%rax
5eca(5): mov %rsi,0x8(%rsp)
5ecf(5): mov %r9d,0x2c(%rsp)
5ed4(8): movsxd 0x500(%rsp),%r10
5edc(5): mov %r8b,0x2b(%rsp)
5ee1(5): mov %rax,0x18(%rsp)
5ee6(8): mov 0x510(%rsp),%rax
5eee(5): mov %rax,0x10(%rsp)
5ef3(9): mov $0x28,%rax
5efc(8): mov %rax,0x4b8(%rsp)
5f04(2): xor %eax,%eax
5f06(7): lea 0x5fd8(%rip),%rax
5f0d(3): test %rdi,%rdi
5f10(4): cmovne %rdi,%rax
5f14(4): cmp $0xc,%r15d
5f18(5): mov %rax,0x20(%rsp)
5f1d(6): jle 0xf3(%rip)
5f23(4): sub $0xc,%r15d
5f27(4): movzx (%r11),%eax
5f2b(3): xor %r14d,%r14d
5f2e(2): test %al,%al
5f30(6): jz 0xbc(%rip)
5f36(5): mov %r15d,0x68(%rsp)
5f3b(3): mov %r11,%rbx
5f3e(2): cmp $0x25,%al
5f40(6): jz 0xe8(%rip)
5f46(3): test %r10d,%r10d
5f49(6): mov $0x0,%r12d
5f4f(5): mov $0x1,%eax
5f54(4): cmovns %r10,%r12
5f58(3): test %r12,%r12
5f5b(4): cmove %rax,%r12
5f5f(5): mov 0x8(%rsp),%rax
5f64(3): sub %r14,%rax
5f67(3): cmp %r12,%rax
5f6a(2): jnbe 0x36(%rip)
5f6c(3): xor %r14d,%r14d
5f6f(8): mov 0x4b8(%rsp),%rbx
5f77(9): xor $0x28,%rbx
5f80(3): mov %r14,%rax
5f83(6): jnz 0x19b2(%rip)
5f89(7): add $0x4c8,%rsp
5f90(1): pop %rbx
5f91(1): pop %rbp
5f92(2): pop %r12
5f94(2): pop %r13
5f96(2): pop %r14
5f98(2): pop %r15
5f9a(1): ret near (%rsp)
5f9b(5): nop 0x0(%rax,%rax,1)
5fa0(3): test %rbp,%rbp
5fa3(2): jz 0x29(%rip)
5fa5(4): cmp $0x1,%r10d
5fa9(2): jle 0x19(%rip)
5fab(4): lea 0xffffffff(%r10),%r15
5faf(3): mov %rbp,%rdi
5fb2(5): mov $0x20,%esi
5fb7(3): mov %r15,%rdx
5fba(3): add %r15,%rbp
5fbd(5): call 0xffffbd93(%rip)
5fc2(3): movzx (%rbx),%eax
5fc5(4): add $0x1,%rbp
5fc9(3): mov %al,0xffffffff(%rbp)
5fcc(3): add %r12,%r14
5fcf(3): mov %rbx,%r12
5fd2(6): movzx 0x1(%r12),%eax
5fd8(5): lea 0x1(%r12),%rbx
5fdd(7): mov $0xffffffff,%r10
5fe4(2): test %al,%al
5fe6(6): jnz 0xffffff58(%rip)
5fec(3): test %rbp,%rbp
5fef(6): jz 0xffffff80(%rip)
5ff5(6): cmp $0x0,0x8(%rsp)
5ffb(6): jz 0xffffff74(%rip)
6001(4): mov $0x0,0x0(%rbp)
6005(5): jmp 0xffffff6a(%rip)
600a(6): nop 0x0(%rax,%rax,1)
6010(3): test %r15d,%r15d
6013(5): mov $0xc,%eax
6018(4): cmove %eax,%r15d
601c(5): jmp 0xffffff0b(%rip)
6021(7): nop 0x0(%rax)
6028(5): movzx 0x2b(%rsp),%eax
602d(3): xor %r8d,%r8d
6030(3): xor %r15d,%r15d
6033(5): mov $0x1,%edx
6038(4): mov %al,0x30(%rsp)
603c(4): add $0x1,%rbx
6040(3): movsx (%rbx),%eax
6043(3): lea 0xffffffdd(%rax),%ecx
6046(2): mov %eax,%esi
6048(3): mov %eax,%r9d
604b(3): cmp $0x3c,%cl
604e(2): jnbe 0x2e(%rip)
6050(3): mov %rdx,%rdi
6053(a): mov $0x1152921504606856448,%r11
605d(3): shl/sal %cl,%rdi
6060(3): test %r11,%rdi
6063(2): jnz 0x6d(%rip)
6065(2): test %cl,%cl
6067(2): jz 0x79(%rip)
6069(a): mov $0x576460752303423488,%rcx
6073(3): test %rcx,%rdi
6076(6): jnz 0x15a(%rip)
607c(3): lea 0xffffffd0(%rax),%edx
607f(3): cmp $0x9,%edx
6082(6): jbe 0x15e(%rip)
6088(4): cmp $0x45,%sil
608c(2): jz 0x2c(%rip)
608e(3): xor %r11d,%r11d
6091(4): cmp $0x4f,%sil
6095(2): jz 0x23(%rip)
6097(4): cmp $0x7a,%sil
609b(2): jnbe 0x55(%rip)
609d(7): lea 0x77cc(%rip),%rdx
60a4(4): movzx %sil,%eax
60a8(4): movsxd 0x0(%rdx,%rax,4),%rax
60ac(3): add %rdx,%rax
60af(2): jmp %rax
60b1(7): nop 0x0(%rax)
60b8(5): movsx 0x1(%rbx),%r9d
60bd(3): mov %eax,%r11d
60c0(4): add $0x1,%rbx
60c4(3): mov %r9d,%esi
60c7(2): jmp 0xffffffd0(%rip)
60c9(7): nop 0x0(%rax)
60d0(3): mov %eax,%r15d
60d3(5): jmp 0xffffff69(%rip)
60d8(8): nop 0x0(%rax,%rax,1)
60e0(6): mov $0x1,%r8d
60e6(5): jmp 0xffffff56(%rip)
60eb(3): mov %r9,%rbx
60ee(2): nop 
60f0(4): lea 0xffffffff(%rbx),%rax
60f4(6): mov $0x1,%r8d
60fa(3): mov %rax,%r9
60fd(4): lea 0xffffffff(%rax),%rax
6101(4): add $0x1,%r8d
6105(4): cmp $0x25,0x1(%rax)
6109(2): jnz 0xfffffff1(%rip)
610b(5): mov 0x8(%rsp),%rdx
6110(5): mov $0x0,%eax
6115(3): movsxd %r8d,%r8
6118(3): mov %r8,%rcx
611b(3): mov %rbx,%r12
611e(3): sub %r14,%rdx
6121(3): test %r10d,%r10d
6124(4): cmovns %r10d,%eax
6128(2): cwde 
612a(3): cmp %r8,%rax
612d(4): cmovnb %rax,%rcx
6131(3): cmp %rdx,%rcx
6134(6): jnb 0xfffffe38(%rip)
613a(3): test %rbp,%rbp
613d(6): jz 0x88(%rip)
6143(3): cmp %r8,%rax
6146(2): jbe 0x4f(%rip)
6148(3): movsxd %r10d,%rdx
614b(5): mov %r8,0x48(%rsp)
6150(5): mov %rcx,0x40(%rsp)
6155(3): sub %r8,%rdx
6158(4): cmp $0x30,%r15d
615c(5): mov %r9,0x38(%rsp)
6161(5): lea 0x0(%rbp,%rdx,1),%rbx
6166(6): jz 0x1270(%rip)
616c(4): cmp $0x2b,%r15d
6170(6): jz 0x1266(%rip)
6176(3): mov %rbp,%rdi
6179(5): mov $0x20,%esi
617e(3): mov %rbx,%rbp
6181(5): call 0xffffbbcf(%rip)
6186(5): mov 0x48(%rsp),%r8
618b(5): mov 0x40(%rsp),%rcx
6190(5): mov 0x38(%rsp),%r9
6195(5): cmp $0x0,0x30(%rsp)
619a(5): mov %rcx,0x38(%rsp)
619f(3): mov %r8,%rdx
61a2(5): mov %r8,0x30(%rsp)
61a7(3): mov %r9,%rsi
61aa(3): mov %rbp,%rdi
61ad(6): jz 0x11d3(%rip)
61b3(5): call 0xfffffc9d(%rip)
61b8(5): mov 0x30(%rsp),%r8
61bd(5): mov 0x38(%rsp),%rcx
61c2(3): add %r8,%rbp
61c5(3): add %rcx,%r14
61c8(5): jmp 0xfffffe0a(%rip)
61cd(3): nop (%rax)
61d0(5): mov $0x1,0x30(%rsp)
61d5(5): jmp 0xfffffe67(%rip)
61da(6): nop 0x0(%rax,%rax,1)
61e0(3): xor %r10d,%r10d
61e3(4): movsx 0x1(%rbx),%eax
61e7(7): cmp $0xccccccc,%r10d
61ee(4): lea 0x1(%rbx),%rcx
61f2(2): mov %eax,%esi
61f4(3): lea 0xffffffd0(%rax),%edx
61f7(2): jnle 0x2f(%rip)
61f9(3): movsx (%rbx),%edi
61fc(2): jz 0x24(%rip)
61fe(4): lea 0x0(%r10,%r10,4),%r9d
6202(3): mov %rcx,%rbx
6205(5): lea 0xffffffd0(%rdi,%r9,2),%r10d
620a(3): cmp $0x9,%edx
620d(2): jbe 0xffffffd6(%rip)
620f(3): mov %eax,%r9d
6212(5): jmp 0xfffffe76(%rip)
6217(9): nop 0x0(%rax,%rax,1)
6220(4): cmp $0x37,%dil
6224(2): jle 0xffffffda(%rip)
6226(3): cmp $0x9,%edx
6229(2): jnbe 0x17(%rip)
622b(4): movsx 0x2(%rbx),%eax
622f(6): mov $0x7fffffff,%r10d
6235(4): add $0x2,%rbx
6239(2): mov %eax,%esi
623b(3): lea 0xffffffd0(%rax),%edx
623e(2): jmp 0xffffffcc(%rip)
6240(3): mov %eax,%r9d
6243(3): mov %rcx,%rbx
6246(6): mov $0x7fffffff,%r10d
624c(5): jmp 0xfffffe3c(%rip)
6251(7): nop 0x0(%rax)
6258(4): cmp $0x4f,%r11d
625c(6): jz 0xfffffe94(%rip)
6262(3): xor %r8d,%r8d
6265(5): mov $0x2520,%eax
626a(3): test %r11d,%r11d
626d(8): mov %ax,0xab(%rsp)
6275(6): jnz 0x16d6(%rip)
627b(8): lea 0xab(%rsp),%rdx
6283(3): mov %rbx,%r12
6286(4): lea 0x2(%rdx),%rax
628a(8): lea 0xb0(%rsp),%r9
6292(3): mov %sil,(%rax)
6295(4): mov $0x0,0x1(%rax)
6299(3): mov %r13,%rcx
629c(5): mov $0x400,%esi
62a1(5): mov %r10d,0x38(%rsp)
62a6(3): mov %r9,%rdi
62a9(5): mov %r8b,0x50(%rsp)
62ae(5): mov %r11d,0x48(%rsp)
62b3(5): mov %r9,0x40(%rsp)
62b8(5): call 0xffffbc18(%rip)
62bd(3): test %rax,%rax
62c0(6): jz 0xfffffd12(%rip)
62c6(5): movsxd 0x38(%rsp),%r10
62cb(4): lea 0xffffffff(%rax),%rcx
62cf(5): mov 0x8(%rsp),%rdx
62d4(5): mov $0x0,%eax
62d9(3): test %r10d,%r10d
62dc(4): cmovns %r10,%rax
62e0(3): cmp %rax,%rcx
62e3(3): mov %rax,%rbx
62e6(4): cmovnb %rcx,%rbx
62ea(3): sub %r14,%rdx
62ed(3): cmp %rbx,%rdx
62f0(6): jbe 0xfffffc7c(%rip)
62f6(3): test %rbp,%rbp
62f9(6): jz 0xa5(%rip)
62ff(5): mov 0x48(%rsp),%r11d
6304(5): mov 0x40(%rsp),%r9
6309(6): movzx 0x50(%rsp),%r8d
630f(3): test %r11d,%r11d
6312(2): jnz 0x5c(%rip)
6314(3): cmp %rax,%rcx
6317(2): jnb 0x57(%rip)
6319(3): movsxd %r10d,%rdx
631c(5): mov %r9,0x50(%rsp)
6321(5): mov %rcx,0x48(%rsp)
6326(3): sub %rcx,%rdx
6329(4): cmp $0x30,%r15d
632d(5): mov %r8b,0x40(%rsp)
6332(5): lea 0x0(%rbp,%rdx,1),%rax
6337(5): mov %rax,0x38(%rsp)
633c(6): jz 0x1073(%rip)
6342(4): cmp $0x2b,%r15d
6346(6): jz 0x1069(%rip)
634c(3): mov %rbp,%rdi
634f(5): mov $0x20,%esi
6354(5): call 0xffffb9fc(%rip)
6359(6): movzx 0x40(%rsp),%r8d
635f(5): mov 0x38(%rsp),%rbp
6364(5): mov 0x50(%rsp),%r9
6369(5): mov 0x48(%rsp),%rcx
636e(3): test %r8b,%r8b
6371(4): lea 0x1(%r9),%rsi
6375(3): mov %rcx,%rdx
6378(6): jnz 0x1020(%rip)
637e(5): cmp $0x0,0x30(%rsp)
6383(3): mov %rbp,%rdi
6386(5): mov %rcx,0x30(%rsp)
638b(6): jz 0x876(%rip)
6391(5): call 0xfffffabf(%rip)
6396(5): mov 0x30(%rsp),%rcx
639b(3): add %rcx,%rbp
639e(3): add %rbx,%r14
63a1(5): jmp 0xfffffc31(%rip)
63a6(3): test %r11d,%r11d
63a9(6): jnz 0xfffffd47(%rip)
63af(5): movzx 0x30(%rsp),%eax
63b4(3): test %r8b,%r8b
63b7(8): lea 0xab(%rsp),%rdx
63bf(3): mov %rbx,%r12
63c2(4): cmovne %r8d,%eax
63c6(3): xor %r8d,%r8d
63c9(3): xor %r11d,%r11d
63cc(4): mov %al,0x30(%rsp)
63d0(5): mov $0x2520,%eax
63d5(8): mov %ax,0xab(%rsp)
63dd(4): lea 0x2(%rdx),%rax
63e1(5): jmp 0xfffffea9(%rip)
63e6(4): cmp $0x45,%r11d
63ea(6): jz 0xfffffd06(%rip)
63f0(4): mov 0x0(%r13),%ecx
63f4(5): mov $0x2,%edi
63f9(7): nop 0x0(%rax)
6400(2): mov %ecx,%eax
6402(2): xor %esi,%esi
6404(5): mov $0x0,0x40(%rsp)
6409(3): shr $0x1f,%eax
640c(4): mov %eax,0x38(%rsp)
6410(2): mov %ecx,%eax
6412(2): not %eax
6414(3): shr $0x1f,%eax
6417(4): cmp $0x4f,%r11d
641b(6): jnz 0xe85(%rip)
6421(2): test %al,%al
6423(6): jz 0xe7d(%rip)
6429(3): mov %r9d,%esi
642c(5): mov $0x2520,%edx
6431(3): xor %r8d,%r8d
6434(8): mov %dx,0xab(%rsp)
643c(8): lea 0xab(%rsp),%rdx
6444(8): mov %r11b,0xad(%rsp)
644c(3): mov %rbx,%r12
644f(3): mov %edi,%r11d
6452(4): lea 0x3(%rdx),%rax
6456(5): jmp 0xfffffe34(%rip)
645b(3): test %r10d,%r10d
645e(5): mov $0x0,%ecx
6463(5): mov $0x1,%eax
6468(4): cmovns %r10d,%ecx
646c(3): movsxd %ecx,%rcx
646f(3): test %rcx,%rcx
6472(4): cmove %rax,%rcx
6476(5): mov 0x8(%rsp),%rax
647b(3): sub %r14,%rax
647e(3): cmp %rcx,%rax
6481(6): jbe 0xfffffaeb(%rip)
6487(3): test %rbp,%rbp
648a(2): jz 0x4e(%rip)
648c(4): cmp $0x1,%r10d
6490(2): jle 0x3c(%rip)
6492(3): movsxd %r10d,%rdx
6495(5): mov %rcx,0x30(%rsp)
649a(4): sub $0x1,%rdx
649e(4): cmp $0x30,%r15d
64a2(5): lea 0x0(%rbp,%rdx,1),%r12
64a7(6): jz 0x131d(%rip)
64ad(4): cmp $0x2b,%r15d
64b1(6): jz 0x1313(%rip)
64b7(3): mov %rbp,%rdi
64ba(5): mov $0x20,%esi
64bf(3): mov %r12,%rbp
64c2(5): call 0xffffb88e(%rip)
64c7(5): mov 0x30(%rsp),%rcx
64cc(4): mov $0x9,0x0(%rbp)
64d0(4): add $0x1,%rbp
64d4(4): nop 0x0(%rax)
64d8(3): add %rcx,%r14
64db(3): mov %rbx,%r12
64de(5): jmp 0xfffffaf4(%rip)
64e3(5): mov $0x1,%eax
64e8(3): test %r8b,%r8b
64eb(6): jnz 0xf30(%rip)
64f1(3): mov %eax,%r8d
64f4(5): mov $0x70,%esi
64f9(5): jmp 0xfffffd6c(%rip)
64fe(7): lea 0x5ab5(%rip),%rax
6505(8): mov $0xffffffff,0x38(%rsp)
650d(5): mov %rax,0x40(%rsp)
6512(6): movzx 0x30(%rsp),%r8d
6518(7): mov 0x518(%rsp),%eax
651f(7): mov $0xffffffff,%rsi
6526(5): mov %r10d,0x48(%rsp)
652b(2): xor %edi,%edi
652d(3): mov %r15d,%r9d
6530(3): mov %r13,%rcx
6533(5): mov %r8d,0x30(%rsp)
6538(1): push %rax
6539(4): push 0x18(%rsp)
653d(4): push 0x28(%rsp)
6541(4): mov 0x50(%rsp),%eax
6545(1): push %rax
6546(5): mov 0x60(%rsp),%rdx
654b(5): call 0xfffff955(%rip)
6550(4): add $0x20,%rsp
6554(5): movsxd 0x48(%rsp),%r10
6559(3): mov %rax,%r11
655c(5): mov 0x8(%rsp),%rsi
6561(5): mov $0x0,%eax
6566(3): test %r10d,%r10d
6569(4): cmovns %r10,%rax
656d(3): cmp %rax,%r11
6570(3): mov %rax,%r12
6573(4): cmovnb %r11,%r12
6577(3): sub %r14,%rsi
657a(3): cmp %r12,%rsi
657d(5): mov %rsi,0x48(%rsp)
6582(6): jbe 0xfffff9ea(%rip)
6588(3): test %rbp,%rbp
658b(6): jz 0xfffffa41(%rip)
6591(3): cmp %rax,%r11
6594(2): jnb 0x42(%rip)
6596(3): movsxd %r10d,%rdx
6599(5): mov %r11,0x58(%rsp)
659e(3): sub %r11,%rdx
65a1(4): cmp $0x30,%r15d
65a5(5): lea 0x0(%rbp,%rdx,1),%rax
65aa(5): mov %rax,0x50(%rsp)
65af(6): jz 0x10fd(%rip)
65b5(4): cmp $0x2b,%r15d
65b9(6): jz 0x10f3(%rip)
65bf(3): mov %rbp,%rdi
65c2(5): mov $0x20,%esi
65c7(5): call 0xffffb789(%rip)
65cc(5): mov 0x50(%rsp),%rbp
65d1(5): mov 0x58(%rsp),%r11
65d6(7): mov 0x518(%rsp),%eax
65dd(5): mov %r11,0x50(%rsp)
65e2(3): mov %rbp,%rdi
65e5(3): mov %r15d,%r9d
65e8(3): mov %r13,%rcx
65eb(1): push %rax
65ec(4): push 0x18(%rsp)
65f0(4): push 0x28(%rsp)
65f4(4): mov 0x50(%rsp),%eax
65f8(1): push %rax
65f9(5): mov 0x50(%rsp),%r8d
65fe(5): mov 0x60(%rsp),%rdx
6603(5): mov 0x68(%rsp),%rsi
6608(5): call 0xfffff898(%rip)
660d(5): mov 0x70(%rsp),%r11
6612(4): add $0x20,%rsp
6616(3): add %r11,%rbp
6619(5): jmp 0xfffff9b3(%rip)
661e(5): mov 0x8(%rsp),%rdx
6623(5): mov $0x0,%eax
6628(5): mov $0x1,%ecx
662d(3): sub %r14,%rdx
6630(3): test %r10d,%r10d
6633(4): cmovns %r10d,%eax
6637(2): cwde 
6639(3): test %rax,%rax
663c(4): cmovne %rax,%rcx
6640(3): test %r11d,%r11d
6643(6): jnz 0x1035(%rip)
6649(3): cmp %rdx,%rcx
664c(6): jnb 0xfffff920(%rip)
6652(3): test %rbp,%rbp
6655(6): jz 0xfffffe83(%rip)
665b(4): cmp $0x1,%r10d
665f(2): jle 0x3f(%rip)
6661(3): movsxd %r10d,%rdx
6664(5): mov %rcx,0x30(%rsp)
6669(4): sub $0x1,%rdx
666d(4): cmp $0x30,%r15d
6671(5): lea 0x0(%rbp,%rdx,1),%r12
6676(6): jz 0x126f(%rip)
667c(4): cmp $0x2b,%r15d
6680(5): mov $0x20,%esi
6685(6): jz 0x1260(%rip)
668b(3): mov %rbp,%rdi
668e(3): mov %r12,%rbp
6691(5): call 0xffffb6bf(%rip)
6696(3): movzx (%rbx),%esi
6699(5): mov 0x30(%rsp),%rcx
669e(4): mov %sil,0x0(%rbp)
66a2(4): add $0x1,%rbp
66a6(5): jmp 0xfffffe32(%rip)
66ab(7): lea 0x71a3(%rip),%rax
66b2(8): mov $0xffffffff,0x38(%rsp)
66ba(5): mov %rax,0x40(%rsp)
66bf(5): jmp 0xfffffe53(%rip)
66c4(4): cmp $0x45,%r11d
66c8(6): jz 0xfffffa28(%rip)
66ce(4): mov 0x1c(%r13),%esi
66d2(4): sub 0x18(%r13),%esi
66d6(5): mov $0x92492493,%edx
66db(3): add $0x7,%esi
66de(2): mov %esi,%eax
66e0(2): imul %eax,%edx,%edx
66e2(3): lea 0x0(%rdx,%rsi,1),%ecx
66e5(3): sar $0x1f,%esi
66e8(5): mov $0x2,%edi
66ed(3): sar $0x2,%ecx
66f0(2): sub %esi,%ecx
66f2(5): jmp 0xfffffd0e(%rip)
66f7(4): cmp $0x45,%r11d
66fb(6): jz 0xd2f(%rip)
6701(4): cmp $0x4f,%r11d
6705(6): jz 0xfffff9eb(%rip)
670b(4): mov 0x14(%r13),%eax
670f(5): cmp $0xfffff894,%eax
6714(6): lea 0x76c(%rax),%ecx
671a(5): setl 0x38(%rsp)
671f(5): cmp $0xfffff894,%eax
6724(3): setnl %al
6727(3): test %r15d,%r15d
672a(6): jnz 0xe7f(%rip)
6730(5): mov 0x2c(%rsp),%r15d
6735(4): cmp $0x2b,%r15d
6739(6): jz 0xe7a(%rip)
673f(5): mov $0x0,0x40(%rsp)
6744(5): mov $0x4,%edi
6749(2): xor %esi,%esi
674b(5): jmp 0xfffffccc(%rip)
6750(5): movzx 0x30(%rsp),%esi
6755(5): mov 0x20(%rsp),%rdi
675a(3): test %r8b,%r8b
675d(5): mov $0x0,%eax
6762(5): mov %r10d,0x38(%rsp)
6767(5): mov %r8b,0x40(%rsp)
676c(3): cmovne %eax,%esi
676f(5): mov %sil,0x30(%rsp)
6774(5): call 0xffffb52c(%rip)
6779(5): movsxd 0x38(%rsp),%r10
677e(3): mov %rax,%r12
6781(5): mov 0x8(%rsp),%rdx
6786(5): mov $0x0,%eax
678b(3): test %r10d,%r10d
678e(4): cmovns %r10,%rax
6792(3): cmp %rax,%r12
6795(3): mov %rax,%rcx
6798(4): cmovnb %r12,%rcx
679c(3): sub %r14,%rdx
679f(3): cmp %rcx,%rdx
67a2(6): jbe 0xfffff7ca(%rip)
67a8(3): test %rbp,%rbp
67ab(6): jz 0xfffffd2d(%rip)
67b1(3): cmp %rax,%r12
67b4(6): movzx 0x40(%rsp),%r8d
67ba(2): jnb 0x4d(%rip)
67bc(3): movsxd %r10d,%rdx
67bf(5): mov %rcx,0x48(%rsp)
67c4(5): mov %r8b,0x40(%rsp)
67c9(3): sub %r12,%rdx
67cc(4): cmp $0x30,%r15d
67d0(5): lea 0x0(%rbp,%rdx,1),%rax
67d5(5): mov %rax,0x38(%rsp)
67da(6): jz 0x10c5(%rip)
67e0(4): cmp $0x2b,%r15d
67e4(6): jz 0x10bb(%rip)
67ea(3): mov %rbp,%rdi
67ed(5): mov $0x20,%esi
67f2(5): call 0xffffb55e(%rip)
67f7(6): movzx 0x40(%rsp),%r8d
67fd(5): mov 0x38(%rsp),%rbp
6802(5): mov 0x48(%rsp),%rcx
6807(3): test %r8b,%r8b
680a(6): jnz 0xffd(%rip)
6810(5): cmp $0x0,0x30(%rsp)
6815(3): mov %r12,%rdx
6818(5): mov %rcx,0x30(%rsp)
681d(5): mov 0x20(%rsp),%rsi
6822(3): mov %rbp,%rdi
6825(6): jz 0xfd3(%rip)
682b(5): call 0xfffff625(%rip)
6830(5): mov 0x30(%rsp),%rcx
6835(3): add %r12,%rbp
6838(5): jmp 0xfffffca0(%rip)
683d(4): cmp $0x45,%r11d
6841(6): jz 0xbe9(%rip)
6847(4): mov 0x14(%r13),%esi
684b(5): mov $0x51eb851f,%edx
6850(2): mov %esi,%eax
6852(2): imul %eax,%edx,%edx
6854(2): mov %esi,%eax
6856(3): sar $0x1f,%eax
6859(2): mov %edx,%ecx
685b(3): sar $0x5,%ecx
685e(2): sub %eax,%ecx
6860(2): mov %esi,%eax
6862(3): imul %ecx,$0x64,%ecx
6865(2): sub %ecx,%eax
6867(2): mov %eax,%ecx
6869(2): jns 0x10(%rip)
686b(2): neg %eax
686d(3): add $0x64,%ecx
6870(6): cmp $0xfffff893,%esi
6876(3): cmovng %eax,%ecx
6879(3): test %r15d,%r15d
687c(6): jz 0x62e(%rip)
6882(5): mov $0x1,%eax
6887(5): mov $0x0,0x38(%rsp)
688c(4): cmp $0x2b,%r15d
6890(6): jz 0x773(%rip)
6896(5): mov $0x0,0x40(%rsp)
689b(5): mov $0x2,%edi
68a0(2): xor %esi,%esi
68a2(5): jmp 0xfffffb75(%rip)
68a7(5): movzx 0x30(%rsp),%eax
68ac(3): test %r8b,%r8b
68af(4): cmovne %r8d,%eax
68b3(4): cmp $0x45,%r11d
68b7(6): jz 0xf6f(%rip)
68bd(3): mov %r9d,%esi
68c0(4): mov %al,0x30(%rsp)
68c4(3): xor %r8d,%r8d
68c7(5): jmp 0xfffff99e(%rip)
68cc(3): xor %r8d,%r8d
68cf(4): mov 0x20(%r13),%ecx
68d3(2): test %ecx,%ecx
68d5(6): js 0xca9(%rip)
68db(4): mov 0x28(%r13),%rcx
68df(5): mov $0x1,0x38(%rsp)
68e4(2): test %ecx,%ecx
68e6(2): js 0x16(%rip)
68e8(5): mov $0x0,0x38(%rsp)
68ed(2): jnz 0xf(%rip)
68ef(5): mov 0x20(%rsp),%rax
68f4(3): cmp $0x2d,(%rax)
68f7(5): setz 0x38(%rsp)
68fc(2): mov %ecx,%eax
68fe(5): mov $0x91a2b3c5,%edx
6903(5): mov $0x88888889,%esi
6908(2): imul %eax,%edx,%edx
690a(2): mov %ecx,%eax
690c(3): sar $0x1f,%eax
690f(4): mov %eax,0x40(%rsp)
6913(4): lea 0x0(%rdx,%rcx,1),%r12d
6917(4): sar $0xb,%r12d
691b(3): sub %eax,%r12d
691e(2): mov %ecx,%eax
6920(2): imul %eax,%esi,%edx
6922(3): lea 0x0(%rdx,%rcx,1),%edi
6925(3): sar $0x5,%edi
6928(4): sub 0x40(%rsp),%edi
692c(2): mov %edi,%eax
692e(2): imul %eax,%esi,%edx
6930(2): mov %edi,%eax
6932(3): sar $0x1f,%eax
6935(3): lea 0x0(%rdx,%rdi,1),%esi
6938(3): sar $0x5,%esi
693b(2): sub %eax,%esi
693d(2): mov %edi,%eax
693f(3): imul %esi,$0x3c,%esi
6942(3): imul %edi,$0x3c,%edi
6945(2): sub %esi,%eax
6947(2): sub %edi,%ecx
6949(4): cmp $0x1,%r8
694d(2): mov %eax,%esi
694f(6): jz 0xe53(%rip)
6955(6): jb 0xf2b(%rip)
695b(4): cmp $0x2,%r8
695f(6): jz 0xdf6(%rip)
6965(4): cmp $0x3,%r8
6969(6): jnz 0xec6(%rip)
696f(2): test %ecx,%ecx
6971(6): jnz 0xde4(%rip)
6977(2): test %eax,%eax
6979(6): jnz 0xe29(%rip)
697f(5): movzx 0x38(%rsp),%eax
6984(3): mov %r12d,%ecx
6987(5): mov $0x1,0x40(%rsp)
698c(5): mov $0x3,%edi
6991(3): xor $0x1,%eax
6994(5): jmp 0xfffffa83(%rip)
6999(7): nop 0x0(%rax)
69a0(4): cmp $0x4f,%r11d
69a4(4): mov 0x10(%r13),%eax
69a8(5): mov $0x1,%edi
69ad(6): jz 0xfffffa7f(%rip)
69b3(3): lea 0x0(%rax,%rax,4),%edx
69b6(5): mov $0x0,0x40(%rsp)
69bb(5): mov $0x0,0x38(%rsp)
69c0(2): xor %esi,%esi
69c2(3): lea 0x0(%rax,%rdx,2),%ecx
69c5(3): sar $0x5,%ecx
69c8(3): add $0x1,%ecx
69cb(5): nop 0x0(%rax,%rax,1)
69d0(8): lea 0xb0(%rsp),%r9
69d8(6): mov $0xcccccccd,%r12d
69de(4): lea 0x17(%r9),%r11
69e2(6): nop 0x0(%rax,%rax,1)
69e8(4): test $0x1,%sil
69ec(4): lea 0xffffffff(%r11),%r8
69f0(2): jz 0x11(%rip)
69f2(4): lea 0xfffffffe(%r11),%rax
69f6(5): mov $0x3a,0xffffffff(%r11)
69fb(3): mov %r8,%r11
69fe(3): mov %rax,%r8
6a01(2): mov %ecx,%eax
6a03(2): sar $0x1,%esi
6a05(3): mul %eax,%r12d,%edx
6a08(3): shr $0x3,%edx
6a0b(3): lea 0x0(%rdx,%rdx,4),%eax
6a0e(2): add %eax,%eax
6a10(2): sub %eax,%ecx
6a12(2): mov %esi,%eax
6a14(3): add $0x30,%ecx
6a17(2): or %edx,%eax
6a19(4): mov %cl,0xffffffff(%r11)
6a1d(2): mov %edx,%ecx
6a1f(3): mov %r8,%r11
6a22(2): jnz 0xffffffc6(%rip)
6a24(3): cmp %edi,%r10d
6a27(4): cmovnl %r10d,%edi
6a2b(5): cmp $0x0,0x38(%rsp)
6a30(4): mov %edi,0x48(%rsp)
6a34(6): jnz 0x884(%rip)
6a3a(5): cmp $0x0,0x40(%rsp)
6a3f(6): jz 0x29a(%rip)
6a45(4): cmp $0x2d,%r15d
6a49(6): jz 0xb2a(%rip)
6a4f(5): mov $0x2b,0x38(%rsp)
6a54(4): mov 0x48(%rsp),%eax
6a58(4): lea 0x17(%r9),%rcx
6a5c(5): mov 0x8(%rsp),%rdx
6a61(3): sub %r8,%rcx
6a64(4): lea 0xffffffff(%rax),%r12d
6a68(3): sub %r14,%rdx
6a6b(3): sub %ecx,%r12d
6a6e(3): test %r12d,%r12d
6a71(6): jle 0xa4b(%rip)
6a77(4): cmp $0x5f,%r15d
6a7b(6): jz 0x9bb(%rip)
6a81(5): movsxd 0x48(%rsp),%rax
6a86(3): cmp %rdx,%rax
6a89(3): mov %rax,%rdi
6a8c(6): jnb 0xfffff4e0(%rip)
6a92(3): test %r10d,%r10d
6a95(5): mov $0x0,%eax
6a9a(5): mov $0x1,%esi
6a9f(4): cmovns %r10d,%eax
6aa3(2): cwde 
6aa5(3): test %rax,%rax
6aa8(4): cmovne %rax,%rsi
6aac(3): cmp %rdx,%rsi
6aaf(6): jnb 0xfffff4bd(%rip)
6ab5(3): add %rsi,%r14
6ab8(3): test %rbp,%rbp
6abb(3): movsxd %r12d,%r9
6abe(3): mov %rbx,%r12
6ac1(6): jz 0xa3(%rip)
6ac7(2): test %edi,%edi
6ac9(2): jnz 0x56(%rip)
6acb(4): cmp $0x1,%rax
6acf(2): jbe 0x50(%rip)
6ad1(3): movsxd %r10d,%rdx
6ad4(5): mov %r8,0x58(%rsp)
6ad9(5): mov %r9,0x50(%rsp)
6ade(4): sub $0x1,%rdx
6ae2(4): cmp $0x30,%r15d
6ae6(5): mov %rcx,0x40(%rsp)
6aeb(5): lea 0x0(%rbp,%rdx,1),%r12
6af0(6): jz 0xdd1(%rip)
6af6(4): cmp $0x2b,%r15d
6afa(6): jz 0xdc7(%rip)
6b00(3): mov %rbp,%rdi
6b03(5): mov $0x20,%esi
6b08(3): mov %r12,%rbp
6b0b(5): call 0xffffb245(%rip)
6b10(5): mov 0x58(%rsp),%r8
6b15(5): mov 0x50(%rsp),%r9
6b1a(5): mov 0x40(%rsp),%rcx
6b1f(5): movzx 0x38(%rsp),%eax
6b24(4): add $0x1,%rbp
6b28(3): mov %rbx,%r12
6b2b(3): mov %al,0xffffffff(%rbp)
6b2e(3): test %rbp,%rbp
6b31(2): jz 0x33(%rip)
6b33(3): mov %r9,%rdx
6b36(3): mov %rbp,%rdi
6b39(5): mov $0x30,%esi
6b3e(5): mov %r8,0x50(%rsp)
6b43(5): mov %rcx,0x40(%rsp)
6b48(5): mov %r9,0x38(%rsp)
6b4d(5): call 0xffffb203(%rip)
6b52(5): mov 0x38(%rsp),%r9
6b57(5): mov 0x50(%rsp),%r8
6b5c(5): mov 0x40(%rsp),%rcx
6b61(3): add %r9,%rbp
6b64(5): mov 0x8(%rsp),%rdx
6b69(3): add %r9,%r14
6b6c(3): xor %r11d,%r11d
6b6f(3): xor %r10d,%r10d
6b72(3): sub %r14,%rdx
6b75(3): cmp %r11,%rcx
6b78(3): mov %r11,%rbx
6b7b(4): cmovnb %rcx,%rbx
6b7f(3): cmp %rdx,%rbx
6b82(6): jnb 0xfffff3ea(%rip)
6b88(3): test %rbp,%rbp
6b8b(6): jz 0xfffff813(%rip)
6b91(4): mov 0x48(%rsp),%esi
6b95(2): test %esi,%esi
6b97(2): jnz 0x51(%rip)
6b99(3): cmp %r11,%rcx
6b9c(2): jnb 0x4c(%rip)
6b9e(3): movsxd %r10d,%rdx
6ba1(5): mov %r8,0x48(%rsp)
6ba6(5): mov %rcx,0x40(%rsp)
6bab(3): sub %rcx,%rdx
6bae(4): cmp $0x30,%r15d
6bb2(5): lea 0x0(%rbp,%rdx,1),%rax
6bb7(5): mov %rax,0x38(%rsp)
6bbc(6): jz 0x83e(%rip)
6bc2(4): cmp $0x2b,%r15d
6bc6(6): jz 0x834(%rip)
6bcc(3): mov %rbp,%rdi
6bcf(5): mov $0x20,%esi
6bd4(5): call 0xffffb17c(%rip)
6bd9(5): mov 0x38(%rsp),%rbp
6bde(5): mov 0x48(%rsp),%r8
6be3(5): mov 0x40(%rsp),%rcx
6be8(5): cmp $0x0,0x30(%rsp)
6bed(3): mov %rcx,%rdx
6bf0(5): mov %rcx,0x30(%rsp)
6bf5(3): mov %r8,%rsi
6bf8(3): mov %rbp,%rdi
6bfb(6): jnz 0xfffff796(%rip)
6c01(5): call 0xffffb1cf(%rip)
6c06(5): mov 0x30(%rsp),%rcx
6c0b(5): jmp 0xfffff790(%rip)
6c10(6): movdqu 0x0(%r13),%xmm0
6c16(5): lea 0x70(%rsp),%rsi
6c1b(4): mov 0x30(%r13),%rax
6c1f(5): mov 0x10(%rsp),%rdi
6c24(5): movaps %xmm0,0x70(%rsp)
6c29(5): mov %r10d,0x38(%rsp)
6c2e(6): movdqu 0x10(%r13),%xmm0
6c34(8): mov %rax,0xa0(%rsp)
6c3c(8): movaps %xmm0,0x80(%rsp)
6c44(6): movdqu 0x20(%r13),%xmm0
6c4a(8): movaps %xmm0,0x90(%rsp)
6c52(5): call 0x4f4e(%rip)
6c57(8): lea 0xb0(%rsp),%r9
6c5f(3): mov %rax,%rsi
6c62(3): mov %rax,%rcx
6c65(a): mov $0x7378697629483820647,%r11
6c6f(5): mov $0x30,%edi
6c74(5): mov 0x38(%rsp),%r10d
6c79(4): lea 0x17(%r9),%r8
6c7d(3): nop (%rax)
6c80(3): mov %rcx,%rax
6c83(3): imul %rax,%r11,%rdx
6c86(3): mov %rcx,%rax
6c89(4): sar $0x3f,%rax
6c8d(4): sar $0x2,%rdx
6c91(3): sub %rax,%rdx
6c94(3): mov %rdx,%rax
6c97(4): lea 0x0(%rdx,%rdx,4),%rdx
6c9b(3): add %rdx,%rdx
6c9e(3): sub %rdx,%rcx
6ca1(3): mov %rcx,%rdx
6ca4(3): mov %rax,%rcx
6ca7(2): mov %edi,%eax
6ca9(2): sub %edx,%eax
6cab(3): add $0x30,%edx
6cae(3): test %rsi,%rsi
6cb1(3): cmovs %eax,%edx
6cb4(4): sub $0x1,%r8
6cb8(3): test %rcx,%rcx
6cbb(3): mov %dl,(%r8)
6cbe(2): jnz 0xffffffc2(%rip)
6cc0(3): test %r10d,%r10d
6cc3(5): mov $0x1,%edi
6cc8(4): cmovnl %r10d,%edi
6ccc(3): test %rsi,%rsi
6ccf(4): mov %edi,0x48(%rsp)
6cd3(6): js 0x5e5(%rip)
6cd9(5): mov 0x8(%rsp),%rdx
6cde(4): lea 0x17(%r9),%rcx
6ce2(3): sub %r8,%rcx
6ce5(3): sub %r14,%rdx
6ce8(4): cmp $0x2d,%r15d
6cec(2): jz 0x13(%rip)
6cee(5): mov 0x48(%rsp),%r12d
6cf3(3): sub %ecx,%r12d
6cf6(3): test %r12d,%r12d
6cf9(6): jnle 0x990(%rip)
6cff(3): test %r10d,%r10d
6d02(6): mov $0x0,%r11d
6d08(3): mov %rbx,%r12
6d0b(4): cmovns %r10d,%r11d
6d0f(3): movsxd %r11d,%r11
6d12(5): jmp 0xfffffe63(%rip)
6d17(4): movzx 0x1(%rbx),%eax
6d1b(4): lea 0x1(%rbx),%rdx
6d1f(2): cmp $0x3a,%al
6d21(6): jz 0xb19(%rip)
6d27(6): mov $0x1,%r8d
6d2d(2): cmp $0x7a,%al
6d2f(6): jnz 0xfffff3c1(%rip)
6d35(3): mov %rdx,%rbx
6d38(5): jmp 0xfffffb97(%rip)
6d3d(4): cmp $0x45,%r11d
6d41(6): jz 0xfffff3af(%rip)
6d47(4): mov 0x14(%r13),%edi
6d4b(4): mov 0x1c(%r13),%r8d
6d4f(5): mov $0x92492493,%edx
6d54(2): mov %edi,%eax
6d56(3): mov %r8d,%ecx
6d59(3): sar $0x1f,%eax
6d5c(5): and $0x190,%eax
6d61(5): lea 0xffffff9c(%rdi,%rax,1),%r12d
6d66(4): mov 0x18(%r13),%eax
6d6a(2): sub %eax,%ecx
6d6c(4): mov %eax,0x38(%rsp)
6d70(6): add $0x17e,%ecx
6d76(2): mov %ecx,%eax
6d78(2): imul %eax,%edx,%edx
6d7a(3): lea 0x0(%rdx,%rcx,1),%eax
6d7d(2): mov %ecx,%edx
6d7f(3): sar $0x1f,%edx
6d82(3): sar $0x2,%eax
6d85(2): sub %edx,%eax
6d87(7): lea 0x0(,%rax,8),%edx
6d8e(2): sub %eax,%edx
6d90(2): mov %edx,%eax
6d92(3): mov %r8d,%edx
6d95(2): sub %ecx,%edx
6d97(4): lea 0x3(%rdx,%rax,1),%eax
6d9b(2): test %eax,%eax
6d9d(4): mov %eax,0x40(%rsp)
6da1(6): js 0x927(%rip)
6da7(4): test $0x3,%r12b
6dab(5): mov $0x16d,%eax
6db0(2): jnz 0x47(%rip)
6db2(5): mov $0x51eb851f,%ecx
6db7(3): mov %r12d,%eax
6dba(2): imul %eax,%ecx,%edx
6dbc(3): mov %r12d,%eax
6dbf(3): sar $0x1f,%eax
6dc2(4): mov %eax,0x48(%rsp)
6dc6(2): mov %edx,%ecx
6dc8(3): sar $0x5,%edx
6dcb(2): sub %eax,%edx
6dcd(5): mov $0x16e,%eax
6dd2(3): imul %edx,$0x64,%edx
6dd5(3): cmp %edx,%r12d
6dd8(2): jnz 0x1f(%rip)
6dda(3): sar $0x7,%ecx
6ddd(2): mov %ecx,%eax
6ddf(4): sub 0x48(%rsp),%eax
6de3(6): imul %eax,$0x190,%eax
6de9(3): cmp %eax,%r12d
6dec(3): setz %al
6def(3): movzx %al,%eax
6df2(5): add $0x16d,%eax
6df7(3): sub %eax,%r8d
6dfa(5): mov $0x92492493,%edx
6dff(3): mov %r8d,%ecx
6e02(4): sub 0x38(%rsp),%ecx
6e06(6): add $0x17e,%ecx
6e0c(2): mov %ecx,%eax
6e0e(3): sub %ecx,%r8d
6e11(2): imul %eax,%edx,%edx
6e13(3): lea 0x0(%rdx,%rcx,1),%eax
6e16(2): mov %ecx,%edx
6e18(3): sar $0x1f,%edx
6e1b(3): sar $0x2,%eax
6e1e(2): sub %edx,%eax
6e20(7): lea 0x0(,%rax,8),%edx
6e27(2): sub %eax,%edx
6e29(5): lea 0x3(%r8,%rdx,1),%ecx
6e2e(6): mov $0x1,%r8d
6e34(2): test %ecx,%ecx
6e36(2): jns 0x9(%rip)
6e38(4): mov 0x40(%rsp),%ecx
6e3c(3): xor %r8d,%r8d
6e3f(4): cmp $0x47,%sil
6e43(6): jz 0x743(%rip)
6e49(4): cmp $0x67,%sil
6e4d(6): jnz 0x932(%rip)
6e53(5): mov $0x51eb851f,%ecx
6e58(2): mov %edi,%eax
6e5a(2): mov %edi,%esi
6e5c(2): imul %eax,%ecx,%edx
6e5e(2): mov %edx,%eax
6e60(2): mov %edi,%edx
6e62(3): sar $0x1f,%edx
6e65(3): sar $0x5,%eax
6e68(2): sub %edx,%eax
6e6a(3): imul %eax,$0x64,%eax
6e6d(2): sub %eax,%esi
6e6f(3): add %r8d,%esi
6e72(2): mov %esi,%eax
6e74(2): imul %eax,%ecx,%edx
6e76(2): mov %esi,%eax
6e78(3): sar $0x1f,%eax
6e7b(2): mov %edx,%ecx
6e7d(3): sar $0x5,%ecx
6e80(2): sub %eax,%ecx
6e82(3): imul %ecx,$0x64,%ecx
6e85(2): sub %ecx,%esi
6e87(2): mov %esi,%ecx
6e89(6): jns 0xfffff9f0(%rip)
6e8f(5): mov $0xfffff894,%eax
6e94(3): sub %r8d,%eax
6e97(2): cmp %eax,%edi
6e99(6): jnl 0xaa1(%rip)
6e9f(2): neg %ecx
6ea1(3): test %r15d,%r15d
6ea4(6): jnz 0xfffff9de(%rip)
6eaa(5): mov 0x2c(%rsp),%r15d
6eaf(5): mov $0x1,%eax
6eb4(4): cmp $0x2b,%r15d
6eb8(6): jz 0xa62(%rip)
6ebe(5): mov $0x0,0x40(%rsp)
6ec3(5): mov $0x0,0x38(%rsp)
6ec8(5): mov $0x2,%edi
6ecd(2): xor %esi,%esi
6ecf(5): jmp 0xfffff548(%rip)
6ed4(4): cmp $0x45,%r11d
6ed8(6): jz 0xfffff218(%rip)
6ede(4): mov 0xc(%r13),%ecx
6ee2(5): mov $0x2,%edi
6ee7(5): jmp 0xfffff519(%rip)
6eec(4): mov 0x18(%r13),%eax
6ef0(5): mov $0x92492493,%edx
6ef5(5): mov $0x1,%edi
6efa(3): lea 0x6(%rax),%ecx
6efd(2): mov %ecx,%eax
6eff(2): imul %eax,%edx,%edx
6f01(3): lea 0x0(%rdx,%rcx,1),%eax
6f04(2): mov %ecx,%edx
6f06(3): sar $0x1f,%edx
6f09(3): sar $0x2,%eax
6f0c(2): sub %edx,%eax
6f0e(7): lea 0x0(,%rax,8),%edx
6f15(2): sub %eax,%edx
6f17(2): sub %edx,%ecx
6f19(3): add $0x1,%ecx
6f1c(5): jmp 0xfffff4e4(%rip)
6f21(4): cmp $0x45,%r11d
6f25(6): jz 0xfffff1cb(%rip)
6f2b(4): mov 0x18(%r13),%ecx
6f2f(5): mov $0x1,%edi
6f34(5): jmp 0xfffff4cc(%rip)
6f39(4): cmp $0x45,%r11d
6f3d(6): jz 0xfffff1b3(%rip)
6f43(4): mov 0x18(%r13),%eax
6f47(5): mov $0x92492493,%ecx
6f4c(3): lea 0x6(%rax),%esi
6f4f(2): mov %esi,%eax
6f51(2): imul %eax,%ecx,%edx
6f53(3): lea 0x0(%rdx,%rsi,1),%eax
6f56(2): mov %esi,%edx
6f58(3): sar $0x1f,%edx
6f5b(3): sar $0x2,%eax
6f5e(2): sub %edx,%eax
6f60(7): lea 0x0(,%rax,8),%edx
6f67(2): sub %eax,%edx
6f69(2): mov %edx,%eax
6f6b(4): mov 0x1c(%r13),%edx
6f6f(2): sub %esi,%eax
6f71(4): lea 0x7(%rax,%rdx,1),%esi
6f75(2): mov %esi,%eax
6f77(2): imul %eax,%ecx,%edx
6f79(5): jmp 0xfffff769(%rip)
6f7e(4): cmp $0x45,%r11d
6f82(6): jz 0xfffff16e(%rip)
6f88(3): test %r8b,%r8b
6f8b(6): jz 0xfffff2da(%rip)
6f91(5): mov %r8b,0x30(%rsp)
6f96(5): jmp 0xfffff2cc(%rip)
6f9b(4): cmp $0x45,%r11d
6f9f(6): jz 0x48b(%rip)
6fa5(4): mov 0x14(%r13),%esi
6fa9(5): mov $0x51eb851f,%edx
6fae(2): mov %esi,%eax
6fb0(2): imul %eax,%edx,%edx
6fb2(2): mov %edx,%eax
6fb4(2): mov %esi,%edx
6fb6(3): sar $0x1f,%edx
6fb9(3): sar $0x5,%eax
6fbc(2): sub %edx,%eax
6fbe(2): mov %esi,%edx
6fc0(3): lea 0x13(%rax),%ecx
6fc3(3): imul %eax,$0x64,%eax
6fc6(2): sub %eax,%edx
6fc8(2): mov %edx,%eax
6fca(3): shr $0x1f,%eax
6fcd(2): test %ecx,%ecx
6fcf(3): setnle %dl
6fd2(2): and %edx,%eax
6fd4(6): cmp $0xfffff894,%esi
6fda(5): setl 0x38(%rsp)
6fdf(2): sub %eax,%ecx
6fe1(6): cmp $0xfffff894,%esi
6fe7(3): setnl %al
6fea(3): test %r15d,%r15d
6fed(6): jnz 0xfffff89f(%rip)
6ff3(5): cmp $0x2b,0x2c(%rsp)
6ff8(5): mov 0x2c(%rsp),%r15d
6ffd(6): jnz 0xfffff899(%rip)
7003(5): mov $0x2,%edi
7008(5): mov $0x63,%edx
700d(2): cmp %ecx,%edx
700f(5): mov $0x1,0x40(%rsp)
7014(6): mov $0x2b,%r15d
701a(6): jb 0xfffff72f(%rip)
7020(3): cmp %edi,%r10d
7023(6): mov $0x2b,%r15d
7029(5): setnle 0x40(%rsp)
702e(2): xor %esi,%esi
7030(5): jmp 0xfffff3e7(%rip)
7035(3): test %r11d,%r11d
7038(6): jnz 0xfffff0b8(%rip)
703e(7): lea 0x6822(%rip),%rax
7045(8): mov $0xffffffff,0x38(%rsp)
704d(5): mov %rax,0x40(%rsp)
7052(5): jmp 0xfffff4c0(%rip)
7057(3): test %r11d,%r11d
705a(6): jnz 0xfffff096(%rip)
7060(3): test %r15d,%r15d
7063(6): jnz 0x7fa(%rip)
7069(3): test %r10d,%r10d
706c(6): jns 0x7f1(%rip)
7072(7): lea 0x67e5(%rip),%rax
7079(8): mov $0x4,0x38(%rsp)
7081(6): mov $0x2b,%r15d
7087(5): mov %rax,0x40(%rsp)
708c(5): jmp 0xfffff486(%rip)
7091(4): movzx 0xffffffff(%rbx),%ecx
7095(4): lea 0xffffffff(%rbx),%r9
7099(5): mov 0x8(%rsp),%rdx
709e(5): mov $0x0,%eax
70a3(3): sub %r14,%rdx
70a6(3): test %r10d,%r10d
70a9(4): cmovns %r10d,%eax
70ad(3): cmp $0x25,%cl
70b0(2): cwde 
70b2(6): jnz 0xfffff039(%rip)
70b8(3): test %rax,%rax
70bb(5): mov $0x1,%ecx
70c0(3): mov %r9,%r12
70c3(4): cmovne %rax,%rcx
70c7(6): mov $0x1,%r8d
70cd(5): jmp 0xfffff064(%rip)
70d2(4): cmp $0x45,%r11d
70d6(6): jz 0xfffff01a(%rip)
70dc(4): mov 0x8(%r13),%ecx
70e0(5): mov $0x2,%edi
70e5(5): jmp 0xfffff31b(%rip)
70ea(4): cmp $0x45,%r11d
70ee(6): jz 0xfffff002(%rip)
70f4(4): mov 0x4(%r13),%ecx
70f8(5): mov $0x2,%edi
70fd(5): jmp 0xfffff303(%rip)
7102(4): cmp $0x45,%r11d
7106(6): jz 0xffffefea(%rip)
710c(4): cmp $0xff,%r10d
7110(6): jz 0x551(%rip)
7116(4): cmp $0x8,%r10d
711a(6): jnle 0x80f(%rip)
7120(7): mov 0x518(%rsp),%ecx
7127(3): mov %r10d,%esi
712a(5): mov $0x66666667,%edi
712f(1): nop 
7130(2): mov %ecx,%eax
7132(3): add $0x1,%esi
7135(3): sar $0x1f,%ecx
7138(2): imul %eax,%edi,%edx
713a(3): sar $0x2,%edx
713d(2): sub %ecx,%edx
713f(3): cmp $0x9,%esi
7142(2): mov %edx,%ecx
7144(2): jnz 0xffffffec(%rip)
7146(3): mov %r10d,%edi
7149(5): jmp 0xfffff2b7(%rip)
714e(4): cmp $0x45,%r11d
7152(6): jz 0xffffef9e(%rip)
7158(4): mov 0x68(%rsp),%ecx
715c(5): mov $0x2,%edi
7161(5): jmp 0xfffff29f(%rip)
7166(4): cmp $0x45,%r11d
716a(6): jz 0xffffef86(%rip)
7170(4): mov 0x68(%rsp),%ecx
7174(3): test %r15d,%r15d
7177(5): mov $0x2,%edi
717c(6): jnz 0xfffff284(%rip)
7182(6): mov $0x5f,%r15d
7188(5): jmp 0xfffff278(%rip)
718d(4): cmp $0x45,%r11d
7191(6): jz 0xffffef5f(%rip)
7197(4): mov 0x10(%r13),%eax
719b(5): mov $0x0,0x40(%rsp)
71a0(5): mov $0x2,%edi
71a5(3): cmp $0xff,%eax
71a8(3): lea 0x1(%rax),%ecx
71ab(5): setl 0x38(%rsp)
71b0(3): cmp $0xff,%eax
71b3(3): setnl %al
71b6(2): xor %esi,%esi
71b8(5): jmp 0xfffff25f(%rip)
71bd(3): test %r10d,%r10d
71c0(5): mov $0x0,%ecx
71c5(5): mov $0x1,%eax
71ca(4): cmovns %r10d,%ecx
71ce(3): movsxd %ecx,%rcx
71d1(3): test %rcx,%rcx
71d4(4): cmove %rax,%rcx
71d8(5): mov 0x8(%rsp),%rax
71dd(3): sub %r14,%rax
71e0(3): cmp %rcx,%rax
71e3(6): jbe 0xffffed89(%rip)
71e9(3): test %rbp,%rbp
71ec(6): jz 0xfffff2ec(%rip)
71f2(4): cmp $0x1,%r10d
71f6(2): jle 0x3c(%rip)
71f8(3): movsxd %r10d,%rdx
71fb(5): mov %rcx,0x30(%rsp)
7200(4): sub $0x1,%rdx
7204(4): cmp $0x30,%r15d
7208(5): lea 0x0(%rbp,%rdx,1),%r12
720d(6): jz 0x5d1(%rip)
7213(4): cmp $0x2b,%r15d
7217(6): jz 0x5c7(%rip)
721d(3): mov %rbp,%rdi
7220(5): mov $0x20,%esi
7225(3): mov %r12,%rbp
7228(5): call 0xffffab28(%rip)
722d(5): mov 0x30(%rsp),%rcx
7232(4): mov $0xa,0x0(%rbp)
7236(4): add $0x1,%rbp
723a(5): jmp 0xfffff29e(%rip)
723f(2): xor %eax,%eax
7241(5): jmp 0xfffff2a7(%rip)
7246(4): cmp $0x45,%r11d
724a(6): jz 0xffffeea6(%rip)
7250(4): mov 0x1c(%r13),%eax
7254(5): mov $0x0,0x40(%rsp)
7259(5): mov $0x3,%edi
725e(3): cmp $0xff,%eax
7261(3): lea 0x1(%rax),%ecx
7264(5): setl 0x38(%rsp)
7269(3): cmp $0xff,%eax
726c(3): setnl %al
726f(2): xor %esi,%esi
7271(5): jmp 0xfffff1a6(%rip)
7276(4): cmp $0x45,%r11d
727a(6): jz 0xffffee76(%rip)
7280(4): mov 0x8(%r13),%ecx
7284(5): jmp 0xfffffef0(%rip)
7289(4): cmp $0x45,%r11d
728d(6): jz 0xffffee63(%rip)
7293(4): mov 0xc(%r13),%ecx
7297(5): jmp 0xfffffedd(%rip)
729c(4): nop 0x0(%rax)
72a0(2): mov %ecx,%eax
72a2(2): neg %eax
72a4(5): cmp $0x0,0x38(%rsp)
72a9(3): cmovne %eax,%ecx
72ac(5): jmp 0xfffff724(%rip)
72b1(7): nop 0x0(%rax)
72b8(4): cmp $0x2d,%r15d
72bc(5): mov $0x2d,0x38(%rsp)
72c1(6): jnz 0xfffff793(%rip)
72c7(3): test %r10d,%r10d
72ca(6): mov $0x0,%r11d
72d0(5): mov 0x8(%rsp),%rax
72d5(4): cmovns %r10d,%r11d
72d9(6): mov $0x1,%r12d
72df(3): movsxd %r11d,%r11
72e2(3): test %r11,%r11
72e5(4): cmovne %r11,%r12
72e9(3): sub %r14,%rax
72ec(3): cmp %r12,%rax
72ef(6): jbe 0xffffec7d(%rip)
72f5(3): test %rbp,%rbp
72f8(2): jz 0x64(%rip)
72fa(4): mov 0x48(%rsp),%eax
72fe(2): test %eax,%eax
7300(2): jnz 0x54(%rip)
7302(4): cmp $0x1,%r11
7306(2): jbe 0x4e(%rip)
7308(3): movsxd %r10d,%rax
730b(3): mov %rbp,%rdi
730e(5): mov $0x20,%esi
7313(4): lea 0xffffffff(%rax),%rcx
7317(5): mov %r9,0x60(%rsp)
731c(5): mov %r8,0x58(%rsp)
7321(5): mov %r11,0x50(%rsp)
7326(5): mov %r10d,0x40(%rsp)
732b(3): mov %rcx,%rdx
732e(5): mov %rcx,0x38(%rsp)
7333(5): call 0xffffaa1d(%rip)
7338(5): mov 0x38(%rsp),%rcx
733d(5): mov 0x60(%rsp),%r9
7342(5): mov 0x58(%rsp),%r8
7347(5): mov 0x50(%rsp),%r11
734c(5): mov 0x40(%rsp),%r10d
7351(3): add %rcx,%rbp
7354(4): mov %r15b,0x0(%rbp)
7358(4): add $0x1,%rbp
735c(5): mov 0x8(%rsp),%rdx
7361(4): lea 0x17(%r9),%rcx
7365(3): add %r12,%r14
7368(6): mov $0x2d,%r15d
736e(3): mov %rbx,%r12
7371(3): sub %r8,%rcx
7374(3): sub %r14,%rdx
7377(5): jmp 0xfffff7fe(%rip)
737c(4): nop 0x0(%rax)
7380(5): call 0xffffaa50(%rip)
7385(5): mov 0x38(%rsp),%rcx
738a(5): mov 0x30(%rsp),%r8
738f(5): jmp 0xffffee33(%rip)
7394(4): nop 0x0(%rax)
7398(3): mov %rbp,%rdi
739b(5): mov %rcx,0x30(%rsp)
73a0(5): call 0xffffea60(%rip)
73a5(5): mov 0x30(%rsp),%rcx
73aa(5): jmp 0xffffeff1(%rip)
73af(3): mov %rbp,%rdi
73b2(5): mov $0x30,%esi
73b7(5): call 0xffffa999(%rip)
73bc(5): mov 0x38(%rsp),%rbp
73c1(6): movzx 0x40(%rsp),%r8d
73c7(5): mov 0x48(%rsp),%rcx
73cc(5): mov 0x50(%rsp),%r9
73d1(5): jmp 0xffffef9d(%rip)
73d6(3): mov %rbp,%rdi
73d9(5): mov $0x30,%esi
73de(3): mov %rbx,%rbp
73e1(5): call 0xffffa96f(%rip)
73e6(5): mov 0x38(%rsp),%r9
73eb(5): mov 0x40(%rsp),%rcx
73f0(5): mov 0x48(%rsp),%r8
73f5(5): jmp 0xffffeda0(%rip)
73fa(3): mov %rbp,%rdi
73fd(5): mov $0x30,%esi
7402(5): call 0xffffa94e(%rip)
7407(5): mov 0x38(%rsp),%rbp
740c(5): mov 0x40(%rsp),%rcx
7411(5): mov 0x48(%rsp),%r8
7416(5): jmp 0xfffff7d2(%rip)
741b(5): mov $0x70,%esi
7420(5): mov $0x0,0x30(%rsp)
7425(5): jmp 0xffffee40(%rip)
742a(2): xor %edi,%edi
742c(5): jmp 0xfffff000(%rip)
7431(5): mov $0x0,0x38(%rsp)
7436(3): movsxd %r12d,%r15
7439(3): cmp %rdx,%r15
743c(6): jnb 0xffffeb30(%rip)
7442(3): test %rbp,%rbp
7445(2): jz 0x33(%rip)
7447(3): mov %rbp,%rdi
744a(3): mov %r15,%rdx
744d(5): mov $0x20,%esi
7452(5): mov %r10d,0x58(%rsp)
7457(5): mov %r9,0x50(%rsp)
745c(3): add %r15,%rbp
745f(5): mov %r8,0x40(%rsp)
7464(5): call 0xffffa8ec(%rip)
7469(5): mov 0x58(%rsp),%r10d
746e(5): mov 0x50(%rsp),%r9
7473(5): mov 0x40(%rsp),%r8
7478(5): mov 0x8(%rsp),%rdx
747d(3): mov %r10d,%eax
7480(3): add %r15,%r14
7483(3): sub %r12d,%eax
7486(3): cmp %r12d,%r10d
7489(6): mov $0x0,%r10d
748f(4): cmovnl %eax,%r10d
7493(3): sub %r14,%rdx
7496(5): cmp $0x0,0x38(%rsp)
749b(6): jnz 0x127(%rip)
74a1(4): add $0x17,%r9
74a5(3): movsxd %r10d,%r11
74a8(3): mov %rbx,%r12
74ab(3): mov %r9,%rcx
74ae(6): mov $0x5f,%r15d
74b4(3): sub %r8,%rcx
74b7(5): jmp 0xfffff6be(%rip)
74bc(3): test %r10d,%r10d
74bf(6): mov $0x0,%r11d
74c5(6): mov $0x1,%r12d
74cb(4): cmovns %r10d,%r11d
74cf(3): movsxd %r11d,%r11
74d2(3): test %r11,%r11
74d5(4): cmovne %r11,%r12
74d9(3): cmp %rdx,%r12
74dc(6): jnb 0xffffea90(%rip)
74e2(3): test %rbp,%rbp
74e5(2): jz 0x7b(%rip)
74e7(4): mov 0x48(%rsp),%edi
74eb(2): test %edi,%edi
74ed(2): jnz 0x67(%rip)
74ef(4): cmp $0x1,%r11
74f3(2): jbe 0x61(%rip)
74f5(3): movsxd %r10d,%rdx
74f8(5): mov %r10d,0x6c(%rsp)
74fd(5): mov %r8,0x60(%rsp)
7502(4): sub $0x1,%rdx
7506(4): cmp $0x30,%r15d
750a(5): mov %rcx,0x58(%rsp)
750f(5): lea 0x0(%rbp,%rdx,1),%rax
7514(5): mov %r11,0x50(%rsp)
7519(5): mov %rax,0x40(%rsp)
751e(6): jz 0x3d1(%rip)
7524(4): cmp $0x2b,%r15d
7528(6): jz 0x3c7(%rip)
752e(3): mov %rbp,%rdi
7531(5): mov $0x20,%esi
7536(5): call 0xffffa81a(%rip)
753b(5): mov 0x40(%rsp),%rbp
7540(5): mov 0x6c(%rsp),%r10d
7545(5): mov 0x60(%rsp),%r8
754a(5): mov 0x58(%rsp),%rcx
754f(5): mov 0x50(%rsp),%r11
7554(5): movzx 0x38(%rsp),%eax
7559(4): add $0x1,%rbp
755d(3): mov %al,0xffffffff(%rbp)
7560(5): mov 0x8(%rsp),%rdx
7565(3): add %r12,%r14
7568(3): mov %rbx,%r12
756b(3): sub %r14,%rdx
756e(5): jmp 0xfffff607(%rip)
7573(6): mov $0x2b,%r15d
7579(5): jmp 0xfffffd4e(%rip)
757e(3): mov %rbx,%r12
7581(5): jmp 0xffffea51(%rip)
7586(5): mov $0xfffff894,%eax
758b(8): lea 0x76c(%rdi,%r8,1),%ecx
7593(3): sub %r8d,%eax
7596(2): cmp %eax,%edi
7598(5): setl 0x38(%rsp)
759d(3): setnl %al
75a0(3): test %r15d,%r15d
75a3(6): jz 0xfffff18d(%rip)
75a9(4): cmp $0x2b,%r15d
75ad(6): jnz 0xfffff192(%rip)
75b3(5): mov $0x4,%edi
75b8(5): mov $0x270f,%edx
75bd(5): jmp 0xfffffa50(%rip)
75c2(3): movsxd %r10d,%r15
75c5(6): mov $0x1,%r12d
75cb(3): test %r15,%r15
75ce(4): cmovne %r15,%r12
75d2(3): cmp %rdx,%r12
75d5(6): jnb 0xffffe997(%rip)
75db(3): test %rbp,%rbp
75de(2): jz 0x5d(%rip)
75e0(5): mov 0x48(%rsp),%r11d
75e5(3): test %r11d,%r11d
75e8(2): jnz 0x47(%rip)
75ea(4): cmp $0x1,%r15
75ee(2): jbe 0x41(%rip)
75f0(4): lea 0xffffffff(%r15),%rcx
75f4(3): mov %rbp,%rdi
75f7(5): mov $0x20,%esi
75fc(5): mov %r10d,0x60(%rsp)
7601(5): mov %r9,0x58(%rsp)
7606(3): mov %rcx,%rdx
7609(5): mov %r8,0x50(%rsp)
760e(5): mov %rcx,0x40(%rsp)
7613(5): call 0xffffa73d(%rip)
7618(5): mov 0x40(%rsp),%rcx
761d(5): mov 0x60(%rsp),%r10d
7622(5): mov 0x58(%rsp),%r9
7627(5): mov 0x50(%rsp),%r8
762c(3): add %rcx,%rbp
762f(5): movzx 0x38(%rsp),%eax
7634(4): add $0x1,%rbp
7638(3): mov %al,0xffffffff(%rbp)
763b(5): mov 0x8(%rsp),%rdx
7640(4): add $0x17,%r9
7644(3): add %r12,%r14
7647(3): mov %r9,%rcx
764a(3): mov %r15,%r11
764d(3): mov %rbx,%r12
7650(3): sub %r8,%rcx
7653(6): mov $0x5f,%r15d
7659(3): sub %r14,%rdx
765c(5): jmp 0xfffff519(%rip)
7661(7): mov 0x518(%rsp),%ecx
7668(5): mov $0x9,%edi
766d(6): mov $0x9,%r10d
7673(5): jmp 0xffffed8d(%rip)
7678(3): mov %rbx,%r12
767b(3): mov %rbx,%r9
767e(6): mov $0x1,%r8d
7684(5): jmp 0xffffeaad(%rip)
7689(4): cmp $0x5f,%r15d
768d(6): jz 0xfffffda4(%rip)
7693(5): movsxd 0x48(%rsp),%rax
7698(3): cmp %rdx,%rax
769b(6): jnb 0xffffe8d1(%rip)
76a1(3): movsxd %r12d,%r9
76a4(3): mov %rbx,%r12
76a7(5): jmp 0xfffff487(%rip)
76ac(3): mov %rbp,%rdi
76af(5): mov $0x30,%esi
76b4(5): call 0xffffa69c(%rip)
76b9(5): mov 0x50(%rsp),%rbp
76be(5): mov 0x58(%rsp),%r11
76c3(5): jmp 0xffffef13(%rip)
76c8(4): sub $0x1,%r12d
76cc(5): mov $0x16d,%edx
76d1(4): test $0x3,%r12b
76d5(2): jnz 0x3e(%rip)
76d7(3): mov %r12d,%eax
76da(5): mov $0x51eb851f,%edx
76df(2): imul %eax,%edx,%edx
76e1(2): mov %edx,%eax
76e3(3): mov %r12d,%edx
76e6(3): sar $0x1f,%edx
76e9(3): sar $0x5,%eax
76ec(2): sub %edx,%eax
76ee(5): mov $0x16e,%edx
76f3(3): imul %eax,$0x64,%eax
76f6(3): cmp %eax,%r12d
76f9(2): jnz 0x1a(%rip)
76fb(3): mov %r12d,%eax
76fe(5): mov $0x190,%ecx
7703(1): cdq %eax
7704(2): idiv %ecx,%eax
7706(3): cmp $0x1,%edx
7709(2): sbb %edx,%edx
770b(2): not %edx
770d(6): add $0x16e,%edx
7713(3): add %edx,%r8d
7716(5): mov $0x92492493,%edx
771b(3): mov %r8d,%ecx
771e(4): sub 0x38(%rsp),%ecx
7722(6): add $0x17e,%ecx
7728(2): mov %ecx,%eax
772a(3): sub %ecx,%r8d
772d(2): imul %eax,%edx,%edx
772f(3): lea 0x0(%rdx,%rcx,1),%eax
7732(2): mov %ecx,%edx
7734(3): sar $0x1f,%edx
7737(3): sar $0x2,%eax
773a(2): sub %edx,%eax
773c(7): lea 0x0(,%rax,8),%edx
7743(2): sub %eax,%edx
7745(5): lea 0x3(%r8,%rdx,1),%ecx
774a(6): mov $0xffffffff,%r8d
7750(5): jmp 0xfffff6ef(%rip)
7755(3): imul %esi,$0x64,%esi
7758(5): mov $0x1,0x40(%rsp)
775d(5): mov $0x9,%edi
7762(7): imul %r12d,$0x2710,%eax
7769(2): add %esi,%eax
776b(5): mov $0x14,%esi
7770(2): add %eax,%ecx
7772(5): movzx 0x38(%rsp),%eax
7777(3): xor $0x1,%eax
777a(5): jmp 0xffffec9d(%rip)
777f(2): mov %ecx,%eax
7781(5): mov $0x92492493,%edx
7786(5): mov $0x2,%edi
778b(2): imul %eax,%edx,%edx
778d(3): lea 0x0(%rdx,%rcx,1),%eax
7790(3): sar $0x1f,%ecx
7793(3): sar $0x2,%eax
7796(2): sub %ecx,%eax
7798(2): mov %eax,%ecx
779a(3): add $0x1,%ecx
779d(5): jmp 0xffffec63(%rip)
77a2(5): movzx 0x38(%rsp),%eax
77a7(5): mov $0x1,0x40(%rsp)
77ac(5): mov $0x6,%edi
77b1(4): imul %r12d,$0x64,%ecx
77b5(3): xor $0x1,%eax
77b8(2): add %esi,%ecx
77ba(5): mov $0x4,%esi
77bf(5): jmp 0xffffec58(%rip)
77c4(3): mov %rbp,%rdi
77c7(5): mov $0x30,%esi
77cc(3): mov %r12,%rbp
77cf(5): call 0xffffa581(%rip)
77d4(5): mov 0x30(%rsp),%rcx
77d9(5): jmp 0xffffecf3(%rip)
77de(3): mov %rbp,%rdi
77e1(5): mov $0x30,%esi
77e6(3): mov %r12,%rbp
77e9(5): call 0xffffa567(%rip)
77ee(5): mov 0x30(%rsp),%rcx
77f3(5): jmp 0xfffffa3f(%rip)
77f8(5): call 0xffffa5d8(%rip)
77fd(5): mov 0x30(%rsp),%rcx
7802(5): jmp 0xfffff033(%rip)
7807(5): mov 0x20(%rsp),%rsi
780c(3): mov %r12,%rdx
780f(3): mov %rbp,%rdi
7812(5): mov %rcx,0x30(%rsp)
7817(5): call 0xffffe5e9(%rip)
781c(5): mov 0x30(%rsp),%rcx
7821(5): jmp 0xfffff014(%rip)
7826(4): mov %al,0x30(%rsp)
782a(5): jmp 0xffffe8c6(%rip)
782f(3): movzx (%rbx),%ecx
7832(3): mov %rbx,%r9
7835(5): jmp 0xfffff864(%rip)
783a(4): lea 0x2(%rbx),%rcx
783e(6): mov $0x1,%r8d
7844(3): mov %rcx,%rdx
7847(4): add $0x1,%rcx
784b(4): movzx 0xffffffff(%rcx),%eax
784f(4): add $0x1,%r8
7853(2): cmp $0x3a,%al
7855(6): jnz 0xfffff4d8(%rip)
785b(2): jmp 0xffffffe9(%rip)
785d(3): mov %r10d,%esi
7860(5): mov $0x0,%eax
7865(3): sub $0x6,%esi
7868(3): cmovns %esi,%eax
786b(4): mov %eax,0x38(%rsp)
786f(7): lea 0x5fe8(%rip),%rax
7876(5): mov %rax,0x40(%rsp)
787b(5): jmp 0xffffec97(%rip)
7880(4): imul %r12d,$0x64,%ecx
7884(2): xor %esi,%esi
7886(5): mov $0x1,0x40(%rsp)
788b(5): mov $0x5,%edi
7890(2): add %eax,%ecx
7892(5): movzx 0x38(%rsp),%eax
7897(3): xor $0x1,%eax
789a(5): jmp 0xffffeb7d(%rip)
789f(3): mov %rbp,%rdi
78a2(5): mov $0x30,%esi
78a7(5): call 0xffffa4a9(%rip)
78ac(5): mov 0x38(%rsp),%rbp
78b1(6): movzx 0x40(%rsp),%r8d
78b7(5): mov 0x48(%rsp),%rcx
78bc(5): jmp 0xffffef4b(%rip)
78c1(3): mov %rbp,%rdi
78c4(5): mov $0x30,%esi
78c9(3): mov %r12,%rbp
78cc(5): call 0xffffa484(%rip)
78d1(5): mov 0x40(%rsp),%rcx
78d6(5): mov 0x50(%rsp),%r9
78db(5): mov 0x58(%rsp),%r8
78e0(5): jmp 0xfffff23f(%rip)
78e5(5): mov $0x30,%esi
78ea(5): jmp 0xffffeda1(%rip)
78ef(3): mov %rbp,%rdi
78f2(5): mov $0x30,%esi
78f7(5): call 0xffffa459(%rip)
78fc(5): mov 0x40(%rsp),%rbp
7901(5): mov 0x50(%rsp),%r11
7906(5): mov 0x58(%rsp),%rcx
790b(5): mov 0x60(%rsp),%r8
7910(5): mov 0x6c(%rsp),%r10d
7915(5): jmp 0xfffffc3f(%rip)
791a(5): mov $0x0,0x38(%rsp)
791f(5): mov $0x2,%edi
7924(5): jmp 0xfffff6fc(%rip)
7929(7): mov 0x518(%rsp),%ecx
7930(5): jmp 0xfffff816(%rip)
7935(5): call 0xffffa37b(%rip)
793a(3): add $0x64,%ecx
793d(3): test %r15d,%r15d
7940(6): jz 0xfffff56a(%rip)
7946(5): jmp 0xffffef3c(%rip)
794b(2): xor %edi,%edi
794d(5): jmp 0xffffeaef(%rip)

"nstrftime" :
7960(4): sub $0x18,%rsp
7964(9): mov $0x28,%rax
796d(5): mov %rax,0x8(%rsp)
7972(2): xor %eax,%eax
7974(5): mov $0x0,0x7(%rsp)
7979(2): push %r9
797b(3): xor %r9d,%r9d
797e(2): push %r8
7980(3): xor %r8d,%r8d
7983(5): lea 0x17(%rsp),%rax
7988(1): push %rax
7989(2): push $0xff
798b(5): call 0xffffe515(%rip)
7990(4): add $0x20,%rsp
7994(5): mov 0x8(%rsp),%rdx
7999(9): xor $0x28,%rdx
79a2(2): jnz 0x7(%rip)
79a4(4): add $0x18,%rsp
79a8(1): ret near (%rsp)
79a9(5): call 0xffffa307(%rip)

"set_program_name" :
79b0(3): test %rdi,%rdi
79b3(1): push %rbx
79b4(2): jz 0x79(%rip)
79b6(5): mov $0x2f,%esi
79bb(3): mov %rdi,%rbx
79be(5): call 0xffffa342(%rip)
79c3(3): test %rax,%rax
79c6(2): jz 0x57(%rip)
79c8(4): lea 0x1(%rax),%r8
79cc(3): mov %r8,%rdx
79cf(3): sub %rbx,%rdx
79d2(4): cmp $0x6,%rdx
79d6(2): jle 0x47(%rip)
79d8(4): lea 0xfffffffa(%rax),%rsi
79dc(7): lea 0x60b5(%rip),%rdi
79e3(5): mov $0x7,%ecx
79e8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
79ea(3): setnbe %dl
79ed(3): sbb $0x0,%dl
79f0(2): test %dl,%dl
79f2(2): jnz 0x2b(%rip)
79f4(7): lea 0x60a5(%rip),%rdi
79fb(5): mov $0x3,%ecx
7a00(3): mov %r8,%rsi
7a03(3): mov %r8,%rbx
7a06(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7a08(3): setnbe %dl
7a0b(3): sbb $0x0,%dl
7a0e(2): test %dl,%dl
7a10(2): jnz 0xd(%rip)
7a12(4): lea 0x4(%rax),%rbx
7a16(7): mov %rbx,0x2096c3(%rip)
7a1d(7): mov %rbx,0x20981c(%rip)
7a24(7): mov %rbx,0x2096dd(%rip)
7a2b(1): pop %rbx
7a2c(1): ret near (%rsp)
7a2d(7): mov 0x2096ec(%rip),%rcx
7a34(7): lea 0x6025(%rip),%rdi
7a3b(5): mov $0x37,%edx
7a40(5): mov $0x1,%esi
7a45(5): call 0xffffa4fb(%rip)
7a4a(5): call 0xffffa156(%rip)

"gettext_quote.part.1" :
7a50(1): push %rbp
7a51(1): push %rbx
7a52(3): mov %rdi,%rbp
7a55(2): mov %esi,%ebx
7a57(4): sub $0x8,%rsp
7a5b(5): call 0x4315(%rip)
7a60(3): movzx (%rax),%edx
7a63(3): and $0xdf,%edx
7a66(3): cmp $0x55,%dl
7a69(2): jz 0x77(%rip)
7a6b(3): cmp $0x47,%dl
7a6e(2): jz 0x22(%rip)
7a70(7): lea 0x603c(%rip),%rax
7a77(7): lea 0x6aab(%rip),%rdx
7a7e(3): cmp $0x9,%ebx
7a81(4): cmovne %rdx,%rax
7a85(4): add $0x8,%rsp
7a89(1): pop %rbx
7a8a(1): pop %rbp
7a8b(1): ret near (%rsp)
7a8c(4): nop 0x0(%rax)
7a90(4): movzx 0x1(%rax),%edx
7a94(3): and $0xdf,%edx
7a97(3): cmp $0x42,%dl
7a9a(2): jnz 0xffffffd6(%rip)
7a9c(4): cmp $0x31,0x2(%rax)
7aa0(2): jnz 0xffffffd0(%rip)
7aa2(4): cmp $0x38,0x3(%rax)
7aa6(2): jnz 0xffffffca(%rip)
7aa8(4): cmp $0x30,0x4(%rax)
7aac(2): jnz 0xffffffc4(%rip)
7aae(4): cmp $0x33,0x5(%rax)
7ab2(2): jnz 0xffffffbe(%rip)
7ab4(4): cmp $0x30,0x6(%rax)
7ab8(2): jnz 0xffffffb8(%rip)
7aba(4): cmp $0x0,0x7(%rax)
7abe(2): jnz 0xffffffb2(%rip)
7ac0(4): cmp $0x60,0x0(%rbp)
7ac4(7): lea 0x5fe1(%rip),%rax
7acb(7): lea 0x5fde(%rip),%rdx
7ad2(4): cmovne %rdx,%rax
7ad6(4): add $0x8,%rsp
7ada(1): pop %rbx
7adb(1): pop %rbp
7adc(1): ret near (%rsp)
7add(3): nop (%rax)
7ae0(4): movzx 0x1(%rax),%edx
7ae4(3): and $0xdf,%edx
7ae7(3): cmp $0x54,%dl
7aea(2): jnz 0xffffff86(%rip)
7aec(4): movzx 0x2(%rax),%edx
7af0(3): and $0xdf,%edx
7af3(3): cmp $0x46,%dl
7af6(6): jnz 0xffffff7a(%rip)
7afc(4): cmp $0x2d,0x3(%rax)
7b00(6): jnz 0xffffff70(%rip)
7b06(4): cmp $0x38,0x4(%rax)
7b0a(6): jnz 0xffffff66(%rip)
7b10(4): cmp $0x0,0x5(%rax)
7b14(6): jnz 0xffffff5c(%rip)
7b1a(4): cmp $0x60,0x0(%rbp)
7b1e(7): lea 0x5f7f(%rip),%rax
7b25(7): lea 0x5f7c(%rip),%rdx
7b2c(4): cmovne %rdx,%rax
7b30(4): add $0x8,%rsp
7b34(1): pop %rbx
7b35(1): pop %rbp
7b36(1): ret near (%rsp)

"quotearg_buffer_restyled" :
7b40(2): push %r15
7b42(2): push %r14
7b44(3): mov %r8d,%r15d
7b47(2): push %r13
7b49(2): push %r12
7b4b(3): mov %rdi,%r14
7b4e(1): push %rbp
7b4f(1): push %rbx
7b50(3): mov %r9d,%ebx
7b53(3): mov %rsi,%r13
7b56(3): mov %rcx,%rbp
7b59(3): and $0x2,%ebx
7b5c(7): sub $0xb8,%rsp
7b63(8): mov 0xf0(%rsp),%rax
7b6b(5): mov %rdx,0x10(%rsp)
7b70(5): mov %r8d,0x8(%rsp)
7b75(5): mov %r9d,0x78(%rsp)
7b7a(5): mov %rax,0x20(%rsp)
7b7f(8): mov 0xf8(%rsp),%rax
7b87(5): mov %rax,0x68(%rsp)
7b8c(8): mov 0x100(%rsp),%rax
7b94(5): mov %rax,0x60(%rsp)
7b99(9): mov $0x28,%rax
7ba2(8): mov %rax,0xa8(%rsp)
7baa(2): xor %eax,%eax
7bac(5): call 0xffffa0e4(%rip)
7bb1(4): cmp $0xa,%r15d
7bb5(5): mov %rax,0x58(%rsp)
7bba(6): jnbe 0x11b5(%rip)
7bc0(7): lea 0x5f59(%rip),%rcx
7bc7(3): mov %r15d,%edx
7bca(4): movsxd 0x0(%rcx,%rdx,4),%rax
7bce(3): add %rcx,%rax
7bd1(2): jmp %rax
7bd3(5): mov $0x1,0xe(%rsp)
7bd8(5): mov $0x0,0x7c(%rsp)
7bdd(3): xor %r12d,%r12d
7be0(9): mov $0x0,0x50(%rsp)
7be9(5): mov $0x1,0xf(%rsp)
7bee(5): mov $0x0,0xd(%rsp)
7bf3(7): lea 0x692f(%rip),%rax
7bfa(9): mov $0x1,0x18(%rsp)
7c03(3): xor %r15d,%r15d
7c06(8): mov $0x2,0x8(%rsp)
7c0e(5): mov %rax,0x48(%rsp)
7c13(3): xor %r11d,%r11d
7c16(3): mov %rbp,%rax
7c19(3): mov %r12d,%r8d
7c1c(3): mov %r11,%rbp
7c1f(3): mov %rax,%r11
7c22(6): nop 0x0(%rax,%rax,1)
7c28(3): cmp %rbp,%r11
7c2b(4): setnz %r12b
7c2f(4): cmp $0xffffffff,%r11
7c33(2): jnz 0xf(%rip)
7c35(5): mov 0x10(%rsp),%rax
7c3a(4): cmp $0x0,0x0(%rax,%rbp,1)
7c3e(4): setnz %r12b
7c42(3): test %r12b,%r12b
7c45(6): jz 0x65b(%rip)
7c4b(5): cmp $0x2,0x8(%rsp)
7c50(5): mov 0x10(%rsp),%rdi
7c55(4): lea 0x0(%rdi,%rbp,1),%r9
7c59(3): setnz %al
7c5c(4): and 0xd(%rsp),%al
7c60(3): mov %eax,%r10d
7c63(6): jz 0xad(%rip)
7c69(5): mov 0x18(%rsp),%rax
7c6e(3): test %rax,%rax
7c71(6): jz 0x42f(%rip)
7c77(4): cmp $0xffffffff,%r11
7c7b(5): lea 0x0(%rbp,%rax,1),%rbx
7c80(2): jnz 0x30(%rip)
7c82(4): cmp $0x1,%rax
7c86(2): jbe 0x2a(%rip)
7c88(5): mov %r8b,0x38(%rsp)
7c8d(5): mov %r10b,0x30(%rsp)
7c92(5): mov %r9,0x28(%rsp)
7c97(5): call 0xffffa009(%rip)
7c9c(6): movzx 0x38(%rsp),%r8d
7ca2(6): movzx 0x30(%rsp),%r10d
7ca8(3): mov %rax,%r11
7cab(5): mov 0x28(%rsp),%r9
7cb0(3): cmp %r11,%rbx
7cb3(5): mov %r10b,0x28(%rsp)
7cb8(6): jnbe 0x5b8(%rip)
7cbe(5): mov 0x18(%rsp),%rdx
7cc3(5): mov 0x48(%rsp),%rsi
7cc8(3): mov %r9,%rdi
7ccb(5): mov %r11,0x40(%rsp)
7cd0(5): mov %r8b,0x38(%rsp)
7cd5(5): mov %r9,0x30(%rsp)
7cda(5): call 0xffffa0a6(%rip)
7cdf(2): test %eax,%eax
7ce1(5): mov 0x30(%rsp),%r9
7ce6(6): movzx 0x38(%rsp),%r8d
7cec(5): mov 0x40(%rsp),%r11
7cf1(6): jnz 0x57f(%rip)
7cf7(5): cmp $0x0,0xf(%rsp)
7cfc(6): movzx 0x28(%rsp),%r10d
7d02(6): jnz 0xf83(%rip)
7d08(8): nop 0x0(%rax,%rax,1)
7d10(4): movzx (%r9),%ebx
7d14(3): cmp $0x7e,%bl
7d17(6): jnbe 0x321(%rip)
7d1d(7): lea 0x5e28(%rip),%rcx
7d24(3): movzx %bl,%edx
7d27(4): movsxd 0x0(%rcx,%rdx,4),%rax
7d2b(3): add %rcx,%rax
7d2e(2): jmp %rax
7d30(3): xor %r10d,%r10d
7d33(4): cmp $0x1,%r11
7d37(3): setnz %al
7d3a(4): cmp $0xffffffff,%r11
7d3e(2): jnz 0xe(%rip)
7d40(5): mov 0x10(%rsp),%rax
7d45(4): cmp $0x0,0x1(%rax)
7d49(3): setnz %al
7d4c(5): cmp $0x2,0x8(%rsp)
7d51(3): setz %dl
7d54(2): test %al,%al
7d56(6): jz 0x252(%rip)
7d5c(3): xor %r12d,%r12d
7d5f(2): xor %eax,%eax
7d61(7): nop 0x0(%rax)
7d68(5): cmp $0x1,0xd(%rsp)
7d6d(6): jnz 0x115(%rip)
7d73(2): test %dl,%dl
7d75(6): jnz 0x10d(%rip)
7d7b(5): mov 0x20(%rsp),%rsi
7d80(3): test %rsi,%rsi
7d83(2): jz 0x16(%rip)
7d85(2): mov %ebx,%edx
7d87(3): shr $0x5,%dl
7d8a(3): movzx %dl,%edx
7d8d(3): mov 0x0(%rsi,%rdx,4),%edx
7d90(3): bt %ebx,%edx
7d93(6): jb 0x150(%rip)
7d99(3): test %r10b,%r10b
7d9c(6): jnz 0x147(%rip)
7da2(3): xor $0x1,%eax
7da5(4): add $0x1,%rbp
7da9(3): and %r8d,%eax
7dac(2): test %al,%al
7dae(2): jz 0x22(%rip)
7db0(3): cmp %r15,%r13
7db3(2): jbe 0x7(%rip)
7db5(5): mov $0x27,0x0(%r14,%r15,1)
7dba(4): lea 0x1(%r15),%rax
7dbe(3): cmp %rax,%r13
7dc1(2): jbe 0x8(%rip)
7dc3(6): mov $0x27,0x1(%r14,%r15,1)
7dc9(4): add $0x2,%r15
7dcd(3): xor %r8d,%r8d
7dd0(3): cmp %r13,%r15
7dd3(2): jnb 0x6(%rip)
7dd5(4): mov %bl,0x0(%r14,%r15,1)
7dd9(5): movzx 0xe(%rsp),%edi
7dde(4): add $0x1,%r15
7de2(5): mov $0x0,%eax
7de7(3): test %r12b,%r12b
7dea(3): cmove %eax,%edi
7ded(5): mov %dil,0xe(%rsp)
7df2(5): jmp 0xfffffe36(%rip)
7df7(9): nop 0x0(%rax,%rax,1)
7e00(3): xor %r10d,%r10d
7e03(4): mov 0x8(%rsp),%eax
7e07(3): cmp $0x2,%eax
7e0a(6): jz 0x5be(%rip)
7e10(3): cmp $0x5,%eax
7e13(6): jz 0x575(%rip)
7e19(3): cmp $0x2,%eax
7e1c(5): mov $0x3f,%ebx
7e21(3): setz %dl
7e24(3): xor %r12d,%r12d
7e27(2): xor %eax,%eax
7e29(5): jmp 0xffffff3f(%rip)
7e2e(2): nop 
7e30(3): xor %r10d,%r10d
7e33(5): cmp $0x2,0x8(%rsp)
7e38(6): jz 0x508(%rip)
7e3e(5): mov %r12b,0x7c(%rsp)
7e43(2): xor %edx,%edx
7e45(2): xor %eax,%eax
7e47(5): mov $0x27,%ebx
7e4c(5): jmp 0xffffff1c(%rip)
7e51(7): nop 0x0(%rax)
7e58(5): mov $0x9,%edx
7e5d(5): mov $0x74,%ebx
7e62(5): cmp $0x2,0x8(%rsp)
7e67(3): setz %al
7e6a(4): and 0xf(%rsp),%al
7e6e(6): jnz 0x150(%rip)
7e74(5): cmp $0x0,0xd(%rsp)
7e79(2): jnz 0x67(%rip)
7e7b(2): mov %edx,%ebx
7e7d(3): xor %r12d,%r12d
7e80(2): xor %eax,%eax
7e82(5): cmp $0x0,0xf(%rsp)
7e87(6): jnz 0xfffffef4(%rip)
7e8d(5): jmp 0xffffff0c(%rip)
7e92(6): nop 0x0(%rax,%rax,1)
7e98(5): mov $0x8,%edx
7e9d(5): mov $0x62,%ebx
7ea2(2): jmp 0xffffffd2(%rip)
7ea4(4): nop 0x0(%rax)
7ea8(5): cmp $0x2,0x8(%rsp)
7ead(6): jz 0x3d3(%rip)
7eb3(5): cmp $0x0,0xd(%rsp)
7eb8(6): jz 0x218(%rip)
7ebe(5): cmp $0x0,0xf(%rsp)
7ec3(6): jz 0x20d(%rip)
7ec9(6): cmp $0x0,0x18(%rsp)
7ecf(6): jnz 0x3bc(%rip)
7ed5(5): mov $0x5c,%ebx
7eda(6): nop 0x0(%rax,%rax,1)
7ee0(3): xor %r12d,%r12d
7ee3(5): cmp $0x2,0x8(%rsp)
7ee8(3): setz %dl
7eeb(5): cmp $0x0,0xf(%rsp)
7ef0(2): mov %edx,%eax
7ef2(6): jnz 0x856(%rip)
7ef8(3): mov %r8d,%eax
7efb(3): xor $0x1,%eax
7efe(2): and %dl,%al
7f00(2): jz 0x31(%rip)
7f02(3): cmp %r15,%r13
7f05(2): jbe 0x7(%rip)
7f07(5): mov $0x27,0x0(%r14,%r15,1)
7f0c(4): lea 0x1(%r15),%rdx
7f10(3): cmp %rdx,%r13
7f13(2): jbe 0x8(%rip)
7f15(6): mov $0x24,0x1(%r14,%r15,1)
7f1b(4): lea 0x2(%r15),%rdx
7f1f(3): cmp %rdx,%r13
7f22(2): jbe 0x8(%rip)
7f24(6): mov $0x27,0x2(%r14,%r15,1)
7f2a(4): add $0x3,%r15
7f2e(3): mov %eax,%r8d
7f31(3): cmp %r15,%r13
7f34(2): jbe 0x7(%rip)
7f36(5): mov $0x5c,0x0(%r14,%r15,1)
7f3b(4): add $0x1,%r15
7f3f(4): add $0x1,%rbp
7f43(5): jmp 0xfffffe8d(%rip)
7f48(8): nop 0x0(%rax,%rax,1)
7f50(5): cmp $0x0,0xd(%rsp)
7f55(6): jnz 0x1ce(%rip)
7f5b(2): xor %edx,%edx
7f5d(5): test $0x1,0x78(%rsp)
7f62(6): jz 0xffffff19(%rip)
7f68(4): add $0x1,%rbp
7f6c(5): jmp 0xfffffcbc(%rip)
7f71(7): nop 0x0(%rax)
7f78(5): cmp $0x2,0x8(%rsp)
7f7d(3): setz %dl
7f80(2): xor %eax,%eax
7f82(5): jmp 0xfffffde6(%rip)
7f87(9): nop 0x0(%rax,%rax,1)
7f90(5): mov $0x7,%edx
7f95(5): mov $0x61,%ebx
7f9a(5): jmp 0xfffffeda(%rip)
7f9f(1): nop 
7fa0(5): cmp $0x2,0x8(%rsp)
7fa5(3): setz %dl
7fa8(3): test %rbp,%rbp
7fab(6): jnz 0xfffffdb1(%rip)
7fb1(5): movzx 0xf(%rsp),%eax
7fb6(2): and %dl,%al
7fb8(6): jz 0xfffffdb0(%rip)
7fbe(3): mov %r11,%rbp
7fc1(8): mov $0x2,0x8(%rsp)
7fc9(5): jmp 0x700(%rip)
7fce(2): nop 
7fd0(5): cmp $0x2,0x8(%rsp)
7fd5(3): setz %dl
7fd8(3): xor %r12d,%r12d
7fdb(2): jmp 0xffffffd6(%rip)
7fdd(3): nop (%rax)
7fe0(5): cmp $0x2,0x8(%rsp)
7fe5(5): mov $0x20,%ebx
7fea(3): setz %dl
7fed(2): jmp 0xffffffc4(%rip)
7fef(1): nop 
7ff0(5): mov $0xd,%edx
7ff5(5): mov $0x72,%ebx
7ffa(5): jmp 0xfffffe68(%rip)
7fff(1): nop 
8000(5): mov $0xc,%edx
8005(5): mov $0x66,%ebx
800a(5): jmp 0xfffffe6a(%rip)
800f(1): nop 
8010(5): mov $0xb,%edx
8015(5): mov $0x76,%ebx
801a(5): jmp 0xfffffe5a(%rip)
801f(1): nop 
8020(5): mov $0xa,%edx
8025(5): mov $0x6e,%ebx
802a(5): jmp 0xfffffe38(%rip)
802f(1): nop 
8030(3): xor %r10d,%r10d
8033(5): nop 0x0(%rax,%rax,1)
8038(6): cmp $0x1,0x58(%rsp)
803e(6): jnz 0x3aa(%rip)
8044(5): mov %r11,0x38(%rsp)
8049(5): mov %r8b,0x30(%rsp)
804e(5): mov %r10b,0x28(%rsp)
8053(5): call 0xffff9f3d(%rip)
8058(3): mov (%rax),%rcx
805b(3): movzx %bl,%edx
805e(6): movzx 0x28(%rsp),%r10d
8064(6): movzx 0x30(%rsp),%r8d
806a(5): mov 0x38(%rsp),%r11
806f(5): mov $0x1,%edi
8074(4): movzx 0x0(%rcx,%rdx,2),%eax
8078(4): and $0x4000,%ax
807c(4): setnz %r12b
8080(3): setz %al
8083(4): and 0xd(%rsp),%al
8087(2): test %al,%al
8089(6): jnz 0x998(%rip)
808f(5): cmp $0x2,0x8(%rsp)
8094(3): setz %dl
8097(5): jmp 0xfffffcd1(%rip)
809c(4): nop 0x0(%rax)
80a0(4): movzx (%r9),%ebx
80a4(3): cmp $0x7e,%bl
80a7(2): jnbe 0xffffff89(%rip)
80a9(7): lea 0x5c98(%rip),%rcx
80b0(3): movzx %bl,%edx
80b3(4): movsxd 0x0(%rcx,%rdx,4),%rax
80b7(3): add %rcx,%rax
80ba(2): jmp %rax
80bc(4): nop 0x0(%rax)
80c0(3): xor %r10d,%r10d
80c3(5): cmp $0x0,0xd(%rsp)
80c8(6): jnz 0xfffffdf6(%rip)
80ce(2): nop 
80d0(5): mov $0x5c,%edx
80d5(5): mov $0x5c,%ebx
80da(5): jmp 0xfffffd9a(%rip)
80df(1): nop 
80e0(5): mov $0xc,%edx
80e5(3): xor %r10d,%r10d
80e8(5): mov $0x66,%ebx
80ed(5): jmp 0xfffffd87(%rip)
80f2(6): nop 0x0(%rax,%rax,1)
80f8(5): mov $0xa,%edx
80fd(3): xor %r10d,%r10d
8100(5): mov $0x6e,%ebx
8105(5): jmp 0xfffffd5d(%rip)
810a(6): nop 0x0(%rax,%rax,1)
8110(5): mov $0x61,%ebx
8115(5): jmp 0xfffffdcb(%rip)
811a(6): nop 0x0(%rax,%rax,1)
8120(3): xor %r10d,%r10d
8123(5): cmp $0x2,0x8(%rsp)
8128(3): setz %dl
812b(5): cmp $0x0,0xf(%rsp)
8130(6): jnz 0xb9a(%rip)
8136(3): mov %r8d,%eax
8139(3): mov %r15,%rcx
813c(3): xor $0x1,%eax
813f(2): and %dl,%al
8141(2): jz 0x2f(%rip)
8143(3): cmp %r15,%r13
8146(2): jbe 0x7(%rip)
8148(5): mov $0x27,0x0(%r14,%r15,1)
814d(4): lea 0x1(%r15),%rcx
8151(3): cmp %rcx,%r13
8154(2): jbe 0x8(%rip)
8156(6): mov $0x24,0x1(%r14,%r15,1)
815c(4): lea 0x2(%r15),%rcx
8160(3): cmp %rcx,%r13
8163(6): jnbe 0x636(%rip)
8169(4): lea 0x3(%r15),%rcx
816d(3): mov %eax,%r8d
8170(3): cmp %rcx,%r13
8173(2): jbe 0x7(%rip)
8175(5): mov $0x5c,0x0(%r14,%rcx,1)
817a(5): cmp $0x2,0x8(%rsp)
817f(4): lea 0x1(%rcx),%r15
8183(6): jz 0x606(%rip)
8189(4): lea 0x1(%rbp),%rax
818d(3): cmp %r11,%rax
8190(2): jnb 0x1b(%rip)
8192(5): mov 0x10(%rsp),%rax
8197(5): movzx 0x1(%rax,%rbp,1),%eax
819c(4): mov %al,0x28(%rsp)
81a0(3): sub $0x30,%eax
81a3(2): cmp $0x9,%al
81a5(6): jbe 0x834(%rip)
81ab(3): mov %r12d,%eax
81ae(5): mov $0x30,%ebx
81b3(3): xor %r12d,%r12d
81b6(5): jmp 0xfffffbb2(%rip)
81bb(5): nop 0x0(%rax,%rax,1)
81c0(5): cmp $0x2,0x8(%rsp)
81c5(3): mov %r10d,%r12d
81c8(3): setz %dl
81cb(3): xor %r10d,%r10d
81ce(2): xor %eax,%eax
81d0(5): jmp 0xfffffb98(%rip)
81d5(3): nop (%rax)
81d8(5): cmp $0x2,0x8(%rsp)
81dd(3): setz %dl
81e0(3): xor %r10d,%r10d
81e3(5): jmp 0xfffffdc5(%rip)
81e8(8): nop 0x0(%rax,%rax,1)
81f0(5): cmp $0x2,0x8(%rsp)
81f5(3): setz %dl
81f8(3): xor %r10d,%r10d
81fb(3): xor %r12d,%r12d
81fe(5): jmp 0xfffffdb3(%rip)
8203(5): nop 0x0(%rax,%rax,1)
8208(5): cmp $0x2,0x8(%rsp)
820d(3): mov %r10d,%r12d
8210(5): mov $0x20,%ebx
8215(3): setz %dl
8218(3): xor %r10d,%r10d
821b(5): jmp 0xfffffd96(%rip)
8220(5): mov $0xd,%edx
8225(3): xor %r10d,%r10d
8228(5): mov $0x72,%ebx
822d(5): jmp 0xfffffc35(%rip)
8232(6): nop 0x0(%rax,%rax,1)
8238(5): mov $0x76,%ebx
823d(5): jmp 0xfffffca3(%rip)
8242(6): nop 0x0(%rax,%rax,1)
8248(5): mov $0x9,%edx
824d(3): xor %r10d,%r10d
8250(5): mov $0x74,%ebx
8255(5): jmp 0xfffffc0d(%rip)
825a(6): nop 0x0(%rax,%rax,1)
8260(5): mov $0x62,%ebx
8265(5): jmp 0xfffffc7b(%rip)
826a(6): nop 0x0(%rax,%rax,1)
8270(3): xor %r10d,%r10d
8273(5): jmp 0xfffffa9d(%rip)
8278(8): nop 0x0(%rax,%rax,1)
8280(5): cmp $0x0,0xf(%rsp)
8285(6): jnz 0x96b(%rip)
828b(4): add $0x1,%rbp
828f(3): mov %r8d,%eax
8292(3): xor %r12d,%r12d
8295(5): mov $0x5c,%ebx
829a(5): jmp 0xfffffb12(%rip)
829f(1): nop 
82a0(5): cmp $0x2,0x8(%rsp)
82a5(5): movzx 0xf(%rsp),%ebx
82aa(3): mov %r8d,%r12d
82ad(3): mov %r11,%rbp
82b0(3): setz %dl
82b3(2): mov %ebx,%eax
82b5(3): test %r15,%r15
82b8(3): setz %cl
82bb(2): and %edx,%eax
82bd(2): and %cl,%al
82bf(6): jnz 0xa67(%rip)
82c5(2): mov %ebx,%eax
82c7(3): xor $0x1,%eax
82ca(2): and %al,%dl
82cc(6): jz 0x970(%rip)
82d2(5): cmp $0x0,0x7c(%rsp)
82d7(6): jz 0x963(%rip)
82dd(5): cmp $0x0,0xe(%rsp)
82e2(6): jnz 0x9fb(%rip)
82e8(3): test %r13,%r13
82eb(3): setz %al
82ee(6): cmp $0x0,0x50(%rsp)
82f4(3): setnz %dl
82f7(2): and %dl,%al
82f9(6): jz 0xa23(%rip)
82ff(5): mov 0x50(%rsp),%r13
8304(7): lea 0x621e(%rip),%rbx
830b(4): mov $0x27,(%r14)
830f(8): mov $0x2,0x8(%rsp)
8317(6): mov $0x1,%r15d
831d(9): mov $0x1,0x18(%rsp)
8326(5): mov $0x0,0xf(%rsp)
832b(5): mov %rbx,0x48(%rsp)
8330(4): mov %al,0x7c(%rsp)
8334(5): jmp 0xfffff8df(%rip)
8339(7): nop 0x0(%rax)
8340(5): cmp $0x0,0xf(%rsp)
8345(6): jnz 0x8ab(%rip)
834b(3): test %r13,%r13
834e(6): jz 0x402(%rip)
8354(2): xor %edx,%edx
8356(6): cmp $0x0,0x50(%rsp)
835c(6): jnz 0x3f4(%rip)
8362(5): mov %r13,0x50(%rsp)
8367(4): add $0x3,%r15
836b(2): xor %eax,%eax
836d(5): mov %r12b,0x7c(%rsp)
8372(3): xor %r8d,%r8d
8375(3): mov %rdx,%r13
8378(5): mov $0x27,%ebx
837d(5): jmp 0xfffffa1c(%rip)
8382(6): nop 0x0(%rax,%rax,1)
8388(5): test $0x4,0x78(%rsp)
838d(2): jz 0x23(%rip)
838f(4): lea 0x2(%rbp),%rcx
8393(3): cmp %r11,%rcx
8396(2): jnb 0x1a(%rip)
8398(5): mov 0x10(%rsp),%rax
839d(5): cmp $0x3f,0x1(%rax,%rbp,1)
83a2(6): jz 0x790(%rip)
83a8(8): nop 0x0(%rax,%rax,1)
83b0(2): xor %edx,%edx
83b2(3): xor %r12d,%r12d
83b5(2): xor %eax,%eax
83b7(5): mov $0x3f,%ebx
83bc(5): jmp 0xfffff9ac(%rip)
83c1(7): nop 0x0(%rax)
83c8(5): cmp $0x0,0xf(%rsp)
83cd(6): jnz 0x823(%rip)
83d3(3): xor %r12d,%r12d
83d6(2): xor %eax,%eax
83d8(5): mov $0x3f,%ebx
83dd(5): jmp 0xfffff9bc(%rip)
83e2(6): nop 0x0(%rax,%rax,1)
83e8(8): lea 0xa0(%rsp),%rax
83f0(4): cmp $0xffffffff,%r11
83f4(c): mov $0x0,0xa0(%rsp)
8400(5): mov %rax,0x28(%rsp)
8405(2): jnz 0x2f(%rip)
8407(5): mov 0x10(%rsp),%rdi
840c(5): mov %r8b,0x40(%rsp)
8411(5): mov %r10b,0x38(%rsp)
8416(5): mov %r9,0x30(%rsp)
841b(5): call 0xffff9885(%rip)
8420(6): movzx 0x40(%rsp),%r8d
8426(6): movzx 0x38(%rsp),%r10d
842c(3): mov %rax,%r11
842f(5): mov 0x30(%rsp),%r9
8434(8): lea 0x9c(%rsp),%rax
843c(2): xor %ecx,%ecx
843e(4): mov %bl,0x7e(%rsp)
8442(5): mov %r8b,0x7d(%rsp)
8447(3): mov %rcx,%rbx
844a(8): mov %r9,0x88(%rsp)
8452(5): mov %rax,0x38(%rsp)
8457(5): mov %r10b,0x7f(%rsp)
845c(8): mov %r15,0x80(%rsp)
8464(5): mov %r14,0x40(%rsp)
8469(5): mov %r13,0x70(%rsp)
846e(5): mov %r11,0x30(%rsp)
8473(5): mov 0x10(%rsp),%rax
8478(5): lea 0x0(%rbp,%rbx,1),%r14
847d(5): mov 0x30(%rsp),%rdx
8482(5): mov 0x28(%rsp),%rcx
8487(5): mov 0x38(%rsp),%rdi
848c(4): lea 0x0(%rax,%r14,1),%r13
8490(3): sub %r14,%rdx
8493(3): mov %r13,%rsi
8496(5): call 0x324a(%rip)
849b(3): test %rax,%rax
849e(3): mov %rax,%r15
84a1(2): jz 0x50(%rip)
84a3(4): cmp $0xffffffff,%rax
84a7(6): jz 0x61e(%rip)
84ad(4): cmp $0xfffffffe,%rax
84b1(6): jz 0x5a0(%rip)
84b7(5): cmp $0x2,0x8(%rsp)
84bc(3): setz %al
84bf(4): and 0xf(%rsp),%al
84c3(6): jnz 0x19d(%rip)
84c9(7): mov 0x9c(%rsp),%edi
84d0(5): call 0xffff9aa0(%rip)
84d5(5): mov 0x28(%rsp),%rdi
84da(2): test %eax,%eax
84dc(5): mov $0x0,%eax
84e1(4): cmove %eax,%r12d
84e5(3): add %r15,%rbx
84e8(5): call 0xffff9a78(%rip)
84ed(2): test %eax,%eax
84ef(2): jz 0xffffff84(%rip)
84f1(3): mov %r12d,%edx
84f4(3): mov %rbx,%rdi
84f7(6): movzx 0x7d(%rsp),%r8d
84fd(3): xor $0x1,%edx
8500(5): movzx 0x7e(%rsp),%ebx
8505(6): movzx 0x7f(%rsp),%r10d
850b(4): and 0xd(%rsp),%dl
850f(8): mov 0x80(%rsp),%r15
8517(5): mov 0x40(%rsp),%r14
851c(5): mov 0x70(%rsp),%r13
8521(5): mov 0x30(%rsp),%r11
8526(4): cmp $0x1,%rdi
852a(6): jbe 0x601(%rip)
8530(3): mov %rdi,%rcx
8533(2): xor %esi,%esi
8535(6): movzx 0xf(%rsp),%r9d
853b(3): add %rbp,%rcx
853e(5): mov 0x10(%rsp),%rdi
8543(5): jmp 0xbb(%rip)
8548(8): nop 0x0(%rax,%rax,1)
8550(5): cmp $0x2,0x8(%rsp)
8555(3): setz %al
8558(3): test %r9b,%r9b
855b(6): jnz 0x4b5(%rip)
8561(3): mov %r8d,%esi
8564(3): xor $0x1,%esi
8567(3): and %sil,%al
856a(2): jz 0x31(%rip)
856c(3): cmp %r15,%r13
856f(2): jbe 0x7(%rip)
8571(5): mov $0x27,0x0(%r14,%r15,1)
8576(4): lea 0x1(%r15),%rsi
857a(3): cmp %rsi,%r13
857d(2): jbe 0x8(%rip)
857f(6): mov $0x24,0x1(%r14,%r15,1)
8585(4): lea 0x2(%r15),%rsi
8589(3): cmp %rsi,%r13
858c(2): jbe 0x8(%rip)
858e(6): mov $0x27,0x2(%r14,%r15,1)
8594(4): add $0x3,%r15
8598(3): mov %eax,%r8d
859b(3): cmp %r15,%r13
859e(2): jbe 0x7(%rip)
85a0(5): mov $0x5c,0x0(%r14,%r15,1)
85a5(4): lea 0x1(%r15),%rax
85a9(3): cmp %rax,%r13
85ac(2): jbe 0xf(%rip)
85ae(2): mov %ebx,%eax
85b0(3): shr $0x6,%al
85b3(3): add $0x30,%eax
85b6(5): mov %al,0x1(%r14,%r15,1)
85bb(4): lea 0x2(%r15),%rax
85bf(3): cmp %rax,%r13
85c2(2): jbe 0x12(%rip)
85c4(2): mov %ebx,%eax
85c6(3): shr $0x3,%al
85c9(3): and $0x7,%eax
85cc(3): add $0x30,%eax
85cf(5): mov %al,0x2(%r14,%r15,1)
85d4(3): and $0x7,%ebx
85d7(4): add $0x1,%rbp
85db(4): add $0x3,%r15
85df(3): add $0x30,%ebx
85e2(3): cmp %rcx,%rbp
85e5(6): jnb 0xfffff7eb(%rip)
85eb(2): mov %edx,%esi
85ed(3): cmp %r15,%r13
85f0(2): jbe 0x6(%rip)
85f2(4): mov %bl,0x0(%r14,%r15,1)
85f6(4): movzx 0x0(%rdi,%rbp,1),%ebx
85fa(4): add $0x1,%r15
85fe(2): test %dl,%dl
8600(6): jnz 0xffffff50(%rip)
8606(2): mov %esi,%eax
8608(3): xor $0x1,%eax
860b(3): and %r8d,%eax
860e(3): test %r10b,%r10b
8611(2): jz 0x10(%rip)
8613(3): cmp %r15,%r13
8616(2): jbe 0x7(%rip)
8618(5): mov $0x5c,0x0(%r14,%r15,1)
861d(4): add $0x1,%r15
8621(4): add $0x1,%rbp
8625(3): cmp %rcx,%rbp
8628(6): jnb 0xfffff784(%rip)
862e(2): test %al,%al
8630(6): jz 0x3fe(%rip)
8636(3): cmp %r15,%r13
8639(2): jbe 0x7(%rip)
863b(5): mov $0x27,0x0(%r14,%r15,1)
8640(4): lea 0x1(%r15),%rax
8644(3): cmp %rax,%r13
8647(2): jbe 0x8(%rip)
8649(6): mov $0x27,0x1(%r14,%r15,1)
864f(4): add $0x2,%r15
8653(3): xor %r10d,%r10d
8656(3): xor %r8d,%r8d
8659(2): jmp 0xffffff94(%rip)
865b(5): nop 0x0(%rax,%rax,1)
8660(4): cmp $0x1,%r15
8664(6): jz 0xfffffe65(%rip)
866a(5): mov 0x10(%rsp),%rdi
866f(4): lea 0x0(%rdi,%r15,1),%rcx
8673(5): lea 0x1(%rdi,%r14,1),%rdx
8678(4): lea 0x0(%rcx,%r14,1),%r8
867c(2): jmp 0x11(%rip)
867e(2): nop 
8680(4): add $0x1,%rdx
8684(3): cmp %rdx,%r8
8687(6): jz 0xfffffe42(%rip)
868d(3): movzx (%rdx),%ecx
8690(3): sub $0x5b,%ecx
8693(3): cmp $0x21,%cl
8696(2): jnbe 0xffffffea(%rip)
8698(5): mov $0x1,%esi
869d(3): shl/sal %cl,%rsi
86a0(3): mov %rsi,%rcx
86a3(a): mov $0x8589934635,%rsi
86ad(3): test %rsi,%rcx
86b0(2): jz 0xffffffd0(%rip)
86b2(5): mov 0x40(%rsp),%r14
86b7(5): mov 0x70(%rsp),%r13
86bc(5): mov 0x30(%rsp),%rbp
86c1(8): mov $0x2,0x8(%rsp)
86c9(5): cmp $0x0,0xd(%rsp)
86ce(2): jz 0x12(%rip)
86d0(2): test %al,%al
86d2(5): mov $0x4,%eax
86d7(5): cmove 0x8(%rsp),%eax
86dc(4): mov %eax,0x8(%rsp)
86e0(4): sub $0x8,%rsp
86e4(3): mov %rbp,%rcx
86e7(3): mov %r13,%rsi
86ea(4): push 0x68(%rsp)
86ee(4): push 0x78(%rsp)
86f2(3): mov %r14,%rdi
86f5(2): push $0x0
86f7(8): mov 0x98(%rsp),%r9d
86ff(5): mov 0x28(%rsp),%r8d
8704(5): mov 0x30(%rsp),%rdx
8709(4): and $0xfd,%r9d
870d(5): call 0xfffff433(%rip)
8712(4): add $0x20,%rsp
8716(3): mov %rax,%r15
8719(8): mov 0xa8(%rsp),%rbx
8721(9): xor $0x28,%rbx
872a(3): mov %r15,%rax
872d(6): jnz 0x606(%rip)
8733(7): add $0xb8,%rsp
873a(1): pop %rbx
873b(1): pop %rbp
873c(2): pop %r12
873e(2): pop %r13
8740(2): pop %r14
8742(2): pop %r15
8744(1): ret near (%rsp)
8745(3): nop (%rax)
8748(3): mov %r11,%rbp
874b(5): jmp 0xffffff7e(%rip)
8750(3): cmp %r15,%r13
8753(2): jbe 0x7(%rip)
8755(5): mov $0x27,0x0(%r14,%r15,1)
875a(4): lea 0x1(%r15),%rax
875e(3): cmp %rax,%r13
8761(2): jbe 0x8(%rip)
8763(6): mov $0x5c,0x1(%r14,%r15,1)
8769(4): lea 0x2(%r15),%rax
876d(3): cmp %rax,%r13
8770(6): jbe 0x5f2(%rip)
8776(3): mov %r13,%rdx
8779(6): mov $0x27,0x2(%r14,%r15,1)
877f(5): mov 0x50(%rsp),%r13
8784(5): jmp 0xfffffbde(%rip)
8789(3): mov %r12d,%eax
878c(5): mov $0x30,%ebx
8791(3): xor %r12d,%r12d
8794(5): jmp 0xfffff605(%rip)
8799(6): mov $0x27,0x2(%r14,%r15,1)
879f(5): jmp 0xfffff9ca(%rip)
87a4(2): test %ebx,%ebx
87a6(6): jnz 0xfffff42d(%rip)
87ac(5): mov $0x1,0xd(%rsp)
87b1(3): test %r13,%r13
87b4(6): jnz 0x596(%rip)
87ba(7): lea 0x5d68(%rip),%rax
87c1(9): mov $0x0,0x50(%rsp)
87ca(5): mov $0x1,0xe(%rsp)
87cf(5): mov $0x0,0x7c(%rsp)
87d4(3): xor %r12d,%r12d
87d7(5): mov $0x0,0xf(%rsp)
87dc(9): mov $0x1,0x18(%rsp)
87e5(5): mov %rax,0x48(%rsp)
87ea(6): mov $0x1,%r15d
87f0(8): mov $0x2,0x8(%rsp)
87f8(5): jmp 0xfffff41b(%rip)
87fd(3): nop (%rax)
8800(2): test %ebx,%ebx
8802(6): jnz 0x3fb(%rip)
8808(3): test %r13,%r13
880b(6): jz 0x22b(%rip)
8811(4): mov $0x22,(%r14)
8815(5): mov $0x1,0xe(%rsp)
881a(3): xor %r12d,%r12d
881d(5): mov $0x0,0x7c(%rsp)
8822(9): mov $0x0,0x50(%rsp)
882b(7): lea 0x5281(%rip),%rax
8832(5): mov $0x0,0xf(%rsp)
8837(5): mov $0x1,0xd(%rsp)
883c(9): mov $0x1,0x18(%rsp)
8845(6): mov $0x1,%r15d
884b(5): mov %rax,0x48(%rsp)
8850(5): jmp 0xfffff3c3(%rip)
8855(7): lea 0x5257(%rip),%rax
885c(5): mov $0x1,0xe(%rsp)
8861(5): mov $0x0,0x7c(%rsp)
8866(3): xor %r12d,%r12d
8869(9): mov $0x0,0x50(%rsp)
8872(5): mov $0x1,0xf(%rsp)
8877(5): mov $0x1,0xd(%rsp)
887c(9): mov $0x1,0x18(%rsp)
8885(3): xor %r15d,%r15d
8888(5): mov %rax,0x48(%rsp)
888d(8): mov $0x5,0x8(%rsp)
8895(5): jmp 0xfffff37e(%rip)
889a(5): mov $0x1,0xe(%rsp)
889f(5): mov $0x0,0x7c(%rsp)
88a4(3): xor %r12d,%r12d
88a7(9): mov $0x0,0x50(%rsp)
88b0(5): mov $0x0,0xf(%rsp)
88b5(3): xor %r15d,%r15d
88b8(5): mov $0x1,0xd(%rsp)
88bd(9): mov $0x0,0x18(%rsp)
88c6(9): mov $0x0,0x48(%rsp)
88cf(5): jmp 0xfffff344(%rip)
88d4(5): cmp $0xa,0x8(%rsp)
88d9(2): jz 0x58(%rip)
88db(7): lea 0x51d3(%rip),%rsi
88e2(2): xor %edi,%edi
88e4(5): mov $0x5,%edx
88e9(5): call 0xffff9397(%rip)
88ee(3): mov %rax,%rcx
88f1(5): mov %rax,0x68(%rsp)
88f6(7): lea 0x51b8(%rip),%rax
88fd(3): cmp %rax,%rcx
8900(6): jz 0x39e(%rip)
8906(7): lea 0x5c1c(%rip),%rsi
890d(2): xor %edi,%edi
890f(5): mov $0x5,%edx
8914(5): call 0xffff936c(%rip)
8919(3): mov %rax,%rcx
891c(5): mov %rax,0x60(%rsp)
8921(7): lea 0x5c01(%rip),%rax
8928(3): cmp %rax,%rcx
892b(6): jz 0x389(%rip)
8931(3): xor %r15d,%r15d
8934(2): test %ebx,%ebx
8936(6): jz 0x1c7(%rip)
893c(2): test %ebx,%ebx
893e(5): mov 0x60(%rsp),%rbx
8943(5): setnz 0xf(%rsp)
8948(3): xor %r12d,%r12d
894b(3): mov %rbx,%rdi
894e(5): call 0xffff9352(%rip)
8953(5): mov %rbx,0x48(%rsp)
8958(5): mov %rax,0x18(%rsp)
895d(5): mov $0x1,0xe(%rsp)
8962(5): mov $0x0,0x7c(%rsp)
8967(9): mov $0x0,0x50(%rsp)
8970(5): mov $0x1,0xd(%rsp)
8975(5): jmp 0xfffff29e(%rip)
897a(5): mov $0x1,0xe(%rsp)
897f(5): mov $0x0,0x7c(%rsp)
8984(3): xor %r12d,%r12d
8987(9): mov $0x0,0x50(%rsp)
8990(5): mov $0x0,0xf(%rsp)
8995(3): xor %r15d,%r15d
8998(5): mov $0x0,0xd(%rsp)
899d(9): mov $0x0,0x18(%rsp)
89a6(9): mov $0x0,0x48(%rsp)
89af(5): jmp 0xfffff264(%rip)
89b4(5): mov $0x1,0xe(%rsp)
89b9(5): mov $0x0,0x7c(%rsp)
89be(3): xor %r12d,%r12d
89c1(9): mov $0x0,0x50(%rsp)
89ca(5): mov $0x1,0xf(%rsp)
89cf(5): mov $0x1,0xd(%rsp)
89d4(5): jmp 0xfffff21f(%rip)
89d9(3): cmp %r15,%r13
89dc(2): jbe 0x7(%rip)
89de(5): mov $0x30,0x0(%r14,%r15,1)
89e3(4): lea 0x2(%rcx),%rax
89e7(3): cmp %rax,%r13
89ea(2): jbe 0x8(%rip)
89ec(6): mov $0x30,0x2(%r14,%rcx,1)
89f2(3): mov %r12d,%eax
89f5(4): lea 0x3(%rcx),%r15
89f9(3): xor %r12d,%r12d
89fc(5): mov $0x30,%ebx
8a01(5): jmp 0xfffff367(%rip)
8a06(a): nop 0x0(%rax,%rax,1)
8a10(5): movzx 0xf(%rsp),%ebx
8a15(3): mov %r11,%rbp
8a18(4): mov %bl,0xd(%rsp)
8a1c(5): jmp 0xfffffcad(%rip)
8a21(5): movzx 0xd(%rsp),%edx
8a26(3): xor %r12d,%r12d
8a29(5): jmp 0xfffffb07(%rip)
8a2e(3): xor %r10d,%r10d
8a31(5): jmp 0xfffffbbc(%rip)
8a36(9): mov $0x0,0x50(%rsp)
8a3f(5): mov $0x1,0xe(%rsp)
8a44(3): xor %r12d,%r12d
8a47(5): mov $0x0,0x7c(%rsp)
8a4c(5): jmp 0xfffffddf(%rip)
8a51(5): mov 0x30(%rsp),%r11
8a56(3): mov %r14,%rsi
8a59(3): mov %r13,%rcx
8a5c(3): mov %rbx,%rax
8a5f(3): mov %rbx,%rdi
8a62(6): movzx 0x7d(%rsp),%r8d
8a68(5): movzx 0x7e(%rsp),%ebx
8a6d(8): mov 0x88(%rsp),%r9
8a75(3): cmp %r11,%rsi
8a78(6): movzx 0x7f(%rsp),%r10d
8a7e(8): mov 0x80(%rsp),%r15
8a86(5): mov 0x40(%rsp),%r14
8a8b(5): mov 0x70(%rsp),%r13
8a90(2): jnb 0x28(%rip)
8a92(3): cmp $0x0,(%rcx)
8a95(2): jnz 0x12(%rip)
8a97(2): jmp 0x21(%rip)
8a99(7): nop 0x0(%rax)
8aa0(5): cmp $0x0,0x0(%r9,%rax,1)
8aa5(2): jz 0x10(%rip)
8aa7(4): add $0x1,%rax
8aab(5): lea 0x0(%rbp,%rax,1),%rdx
8ab0(3): cmp %rdx,%r11
8ab3(2): jnbe 0xffffffed(%rip)
8ab5(3): mov %rax,%rdi
8ab8(5): movzx 0xd(%rsp),%edx
8abd(3): xor %r12d,%r12d
8ac0(5): jmp 0xfffffa66(%rip)
8ac5(3): mov %rbx,%rdi
8ac8(6): movzx 0x7d(%rsp),%r8d
8ace(5): movzx 0x7e(%rsp),%ebx
8ad3(6): movzx 0x7f(%rsp),%r10d
8ad9(8): mov 0x80(%rsp),%r15
8ae1(3): xor %r12d,%r12d
8ae4(5): mov 0x40(%rsp),%r14
8ae9(5): mov 0x70(%rsp),%r13
8aee(5): mov 0x30(%rsp),%r11
8af3(5): movzx 0xd(%rsp),%edx
8af8(5): jmp 0xfffffa2e(%rip)
8afd(5): mov 0x68(%rsp),%rdx
8b02(3): movzx (%rdx),%eax
8b05(2): test %al,%al
8b07(6): jz 0xfffffe35(%rip)
8b0d(3): nop (%rax)
8b10(3): cmp %r15,%r13
8b13(2): jbe 0x6(%rip)
8b15(4): mov %al,0x0(%r14,%r15,1)
8b19(4): add $0x1,%r15
8b1d(5): movzx 0x0(%rdx,%r15,1),%eax
8b22(2): test %al,%al
8b24(2): jnz 0xffffffec(%rip)
8b26(5): jmp 0xfffffe16(%rip)
8b2b(2): mov %edx,%eax
8b2d(5): jmp 0xfffff55a(%rip)
8b32(4): movzx 0x0(%rax,%rcx,1),%ebx
8b36(3): cmp $0x3e,%bl
8b39(6): jnbe 0xfffff877(%rip)
8b3f(a): mov $0x8070630310989004800,%rax
8b49(4): bt %rbx,%rax
8b4d(6): jnb 0xfffff863(%rip)
8b53(5): cmp $0x0,0xf(%rsp)
8b58(6): jnz 0x1ea(%rip)
8b5e(3): cmp %r15,%r13
8b61(2): jbe 0x7(%rip)
8b63(5): mov $0x3f,0x0(%r14,%r15,1)
8b68(4): lea 0x1(%r15),%rax
8b6c(3): cmp %rax,%r13
8b6f(2): jbe 0x8(%rip)
8b71(6): mov $0x22,0x1(%r14,%r15,1)
8b77(4): lea 0x2(%r15),%rax
8b7b(3): cmp %rax,%r13
8b7e(2): jbe 0x8(%rip)
8b80(6): mov $0x22,0x2(%r14,%r15,1)
8b86(4): lea 0x3(%r15),%rax
8b8a(3): cmp %rax,%r13
8b8d(2): jbe 0x8(%rip)
8b8f(6): mov $0x3f,0x3(%r14,%r15,1)
8b95(4): add $0x4,%r15
8b99(2): xor %edx,%edx
8b9b(3): xor %r12d,%r12d
8b9e(2): xor %eax,%eax
8ba0(3): mov %rcx,%rbp
8ba3(5): jmp 0xfffff1c5(%rip)
8ba8(2): test %ebx,%ebx
8baa(6): jz 0x18e(%rip)
8bb0(7): lea 0x5972(%rip),%rax
8bb7(5): mov $0x1,0xe(%rsp)
8bbc(5): mov $0x0,0x7c(%rsp)
8bc1(3): xor %r12d,%r12d
8bc4(9): mov $0x0,0x50(%rsp)
8bcd(5): mov $0x1,0xf(%rsp)
8bd2(5): mov $0x0,0xd(%rsp)
8bd7(9): mov $0x1,0x18(%rsp)
8be0(3): xor %r15d,%r15d
8be3(5): mov %rax,0x48(%rsp)
8be8(5): jmp 0xfffff02b(%rip)
8bed(3): nop (%rax)
8bf0(3): mov %r11,%rbp
8bf3(5): movzx 0xf(%rsp),%eax
8bf8(5): jmp 0xfffffad1(%rip)
8bfd(7): lea 0x4eaf(%rip),%rax
8c04(5): mov $0x1,0xe(%rsp)
8c09(5): mov $0x0,0x7c(%rsp)
8c0e(3): xor %r12d,%r12d
8c11(9): mov $0x0,0x50(%rsp)
8c1a(5): mov $0x1,0xf(%rsp)
8c1f(5): mov $0x1,0xd(%rsp)
8c24(9): mov $0x1,0x18(%rsp)
8c2d(3): xor %r15d,%r15d
8c30(5): mov %rax,0x48(%rsp)
8c35(5): jmp 0xffffefde(%rip)
8c3a(2): mov %edx,%eax
8c3c(5): mov 0x48(%rsp),%rbx
8c41(3): test %rbx,%rbx
8c44(2): jz 0x2e(%rip)
8c46(2): test %al,%al
8c48(2): jz 0x2a(%rip)
8c4a(3): movzx (%rbx),%ecx
8c4d(3): mov %rbx,%rax
8c50(2): test %cl,%cl
8c52(2): jz 0x20(%rip)
8c54(3): mov %r15,%rdx
8c57(3): sub %r15,%rax
8c5a(3): cmp %rdx,%r13
8c5d(2): jbe 0x6(%rip)
8c5f(4): mov %cl,0x0(%r14,%rdx,1)
8c63(4): add $0x1,%rdx
8c67(4): movzx 0x0(%rax,%rdx,1),%ecx
8c6b(2): test %cl,%cl
8c6d(2): jnz 0xffffffed(%rip)
8c6f(3): mov %rdx,%r15
8c72(3): cmp %r15,%r13
8c75(6): jbe 0xfffffaa4(%rip)
8c7b(5): mov $0x0,0x0(%r14,%r15,1)
8c80(5): jmp 0xfffffa99(%rip)
8c85(5): cmp $0x2,0x8(%rsp)
8c8a(5): movzx 0xf(%rsp),%ebx
8c8f(3): mov %r11,%rbp
8c92(3): setz %al
8c95(4): mov %bl,0xd(%rsp)
8c99(5): jmp 0xfffffa30(%rip)
8c9e(4): mov 0x8(%rsp),%esi
8ca2(3): mov %rcx,%rdi
8ca5(5): call 0xffffedab(%rip)
8caa(5): mov %rax,0x68(%rsp)
8caf(5): jmp 0xfffffc57(%rip)
8cb4(4): mov 0x8(%rsp),%esi
8cb8(3): mov %rcx,%rdi
8cbb(5): call 0xffffed95(%rip)
8cc0(5): mov %rax,0x60(%rsp)
8cc5(5): jmp 0xfffffc6c(%rip)
8cca(5): movzx 0xf(%rsp),%ebx
8ccf(3): mov %r11,%rbp
8cd2(2): mov %edx,%eax
8cd4(4): mov %bl,0xd(%rsp)
8cd8(5): jmp 0xfffff9f1(%rip)
8cdd(4): sub $0x8,%rsp
8ce1(6): mov $0x5,%r8d
8ce7(3): mov %r11,%rcx
8cea(4): push 0x68(%rsp)
8cee(4): push 0x78(%rsp)
8cf2(3): mov %r14,%rdi
8cf5(4): push 0x38(%rsp)
8cf9(8): mov 0x98(%rsp),%r9d
8d01(5): mov 0x30(%rsp),%rdx
8d06(5): mov 0x70(%rsp),%rsi
8d0b(5): call 0xffffee35(%rip)
8d10(4): add $0x20,%rsp
8d14(3): mov %rax,%r15
8d17(5): jmp 0xfffffa02(%rip)
8d1c(5): movzx 0x7c(%rsp),%eax
8d21(5): jmp 0xffffff1b(%rip)
8d26(8): mov $0x2,0x8(%rsp)
8d2e(5): jmp 0xfffff99b(%rip)
8d33(5): call 0xffff8f7d(%rip)
8d38(5): mov $0x0,0xd(%rsp)
8d3d(5): jmp 0xfffffa74(%rip)
8d42(3): mov %r11,%rbp
8d45(5): jmp 0xfffff99b(%rip)
8d4a(5): mov $0x1,0xe(%rsp)
8d4f(2): xor %eax,%eax
8d51(3): xor %r12d,%r12d
8d54(9): mov $0x0,0x50(%rsp)
8d5d(5): jmp 0xfffff5a7(%rip)
8d62(3): mov %r13,%rdx
8d65(5): mov 0x50(%rsp),%r13
8d6a(5): jmp 0xfffff5f8(%rip)
8d6f(5): call 0xffff8e31(%rip)

"quotearg_n_options" :
8d80(2): push %r15
8d82(2): push %r14
8d84(3): movsxd %edi,%r15
8d87(2): push %r13
8d89(2): push %r12
8d8b(3): mov %rdx,%r14
8d8e(1): push %rbp
8d8f(1): push %rbx
8d90(3): mov %rcx,%rbp
8d93(4): sub $0x28,%rsp
8d97(5): mov %rsi,0x8(%rsp)
8d9c(5): call 0xffff8e14(%rip)
8da1(3): mov %rax,%r13
8da4(2): mov (%rax),%eax
8da6(3): test %r15d,%r15d
8da9(7): mov 0x208310(%rip),%rbx
8db0(4): mov %eax,0x18(%rsp)
8db4(6): js 0x16d(%rip)
8dba(7): cmp %r15d,0x2082f7(%rip)
8dc1(2): jnle 0x64(%rip)
8dc3(7): cmp $0x7fffffff,%r15d
8dca(6): jz 0x15c(%rip)
8dd0(4): lea 0x1(%r15),%r12d
8dd4(7): lea 0x2082f5(%rip),%rax
8ddb(3): movsxd %r12d,%rsi
8dde(4): shl/sal $0x4,%rsi
8de2(3): cmp %rax,%rbx
8de5(6): jz 0x11b(%rip)
8deb(3): mov %rbx,%rdi
8dee(5): call 0xf82(%rip)
8df3(3): mov %rax,%rbx
8df6(7): mov %rax,0x2082c3(%rip)
8dfd(7): movsxd 0x2082b4(%rip),%rdi
8e04(3): mov %r12d,%edx
8e07(2): xor %esi,%esi
8e09(2): sub %edi,%edx
8e0b(4): shl/sal $0x4,%rdi
8e0f(3): movsxd %edx,%rdx
8e12(3): add %rbx,%rdi
8e15(4): shl/sal $0x4,%rdx
8e19(5): call 0xffff8f37(%rip)
8e1e(7): mov %r12d,0x208293(%rip)
8e25(3): mov 0x4(%rbp),%eax
8e28(4): shl/sal $0x4,%r15
8e2c(4): sub $0x8,%rsp
8e30(3): add %r15,%rbx
8e33(4): lea 0x8(%rbp),%r15
8e37(4): mov 0x0(%rbp),%r8d
8e3b(3): mov (%rbx),%r11
8e3e(4): mov 0x8(%rbx),%r12
8e42(3): mov %r14,%rcx
8e45(3): or $0x1,%eax
8e48(4): mov %eax,0x24(%rsp)
8e4c(3): push 0x30(%rbp)
8e4f(3): mov %eax,%r9d
8e52(3): push 0x28(%rbp)
8e55(2): push %r15
8e57(3): mov %r11,%rsi
8e5a(5): mov 0x28(%rsp),%rdx
8e5f(3): mov %r12,%rdi
8e62(5): mov %r11,0x30(%rsp)
8e67(5): call 0xffffecd9(%rip)
8e6c(4): add $0x20,%rsp
8e70(5): mov 0x10(%rsp),%r11
8e75(3): cmp %rax,%r11
8e78(2): jnbe 0x69(%rip)
8e7a(4): lea 0x1(%rax),%rsi
8e7e(7): lea 0x2083db(%rip),%rax
8e85(3): cmp %rax,%r12
8e88(3): mov %rsi,(%rbx)
8e8b(2): jz 0x14(%rip)
8e8d(3): mov %r12,%rdi
8e90(5): mov %rsi,0x10(%rsp)
8e95(5): call 0xffff8cfb(%rip)
8e9a(5): mov 0x10(%rsp),%rsi
8e9f(3): mov %rsi,%rdi
8ea2(5): mov %rsi,0x10(%rsp)
8ea7(5): call 0xe69(%rip)
8eac(4): sub $0x8,%rsp
8eb0(4): mov %rax,0x8(%rbx)
8eb4(4): mov 0x0(%rbp),%r8d
8eb8(3): push 0x30(%rbp)
8ebb(3): push 0x28(%rbp)
8ebe(3): mov %r14,%rcx
8ec1(2): push %r15
8ec3(5): mov 0x3c(%rsp),%r9d
8ec8(3): mov %rax,%rdi
8ecb(5): mov 0x28(%rsp),%rdx
8ed0(5): mov 0x30(%rsp),%rsi
8ed5(3): mov %rax,%r12
8ed8(5): call 0xffffec68(%rip)
8edd(4): add $0x20,%rsp
8ee1(4): mov 0x18(%rsp),%eax
8ee5(4): mov %eax,0x0(%r13)
8ee9(4): add $0x28,%rsp
8eed(3): mov %r12,%rax
8ef0(1): pop %rbx
8ef1(1): pop %rbp
8ef2(2): pop %r12
8ef4(2): pop %r13
8ef6(2): pop %r14
8ef8(2): pop %r15
8efa(1): ret near (%rsp)
8efb(5): nop 0x0(%rax,%rax,1)
8f00(2): xor %edi,%edi
8f02(5): call 0xe6e(%rip)
8f07(8): movdqa 0x2081c1(%rip),%xmm0
8f0f(3): mov %rax,%rbx
8f12(7): mov %rax,0x2081a7(%rip)
8f19(3): movups %xmm0,(%rax)
8f1c(5): jmp 0xfffffee1(%rip)
8f21(5): call 0xffff8c7f(%rip)
8f26(5): call 0x103a(%rip)

"clone_quoting_options" :
8f30(2): push %r12
8f32(1): push %rbp
8f33(1): push %rbx
8f34(3): mov %rdi,%rbx
8f37(5): call 0xffff8c79(%rip)
8f3c(3): mov (%rax),%r12d
8f3f(3): mov %rax,%rbp
8f42(7): lea 0x208417(%rip),%rax
8f49(3): test %rbx,%rbx
8f4c(5): mov $0x38,%esi
8f51(4): cmove %rax,%rbx
8f55(3): mov %rbx,%rdi
8f58(5): call 0xfb8(%rip)
8f5d(4): mov %r12d,0x0(%rbp)
8f61(1): pop %rbx
8f62(1): pop %rbp
8f63(2): pop %r12
8f65(1): ret near (%rsp)

"get_quoting_style" :
8f70(7): lea 0x2083e9(%rip),%rax
8f77(3): test %rdi,%rdi
8f7a(4): cmove %rax,%rdi
8f7e(2): mov (%rdi),%eax
8f80(1): ret near (%rsp)

"set_quoting_style" :
8f90(7): lea 0x2083c9(%rip),%rax
8f97(3): test %rdi,%rdi
8f9a(4): cmove %rax,%rdi
8f9e(2): mov %esi,(%rdi)
8fa0(1): ret near (%rsp)

"set_char_quoting" :
8fb0(7): lea 0x2083a9(%rip),%rax
8fb7(3): test %rdi,%rdi
8fba(2): mov %esi,%ecx
8fbc(4): cmove %rax,%rdi
8fc0(2): mov %esi,%eax
8fc2(3): and $0x1f,%ecx
8fc5(3): shr $0x5,%al
8fc8(3): movzx %al,%eax
8fcb(5): lea 0x8(%rdi,%rax,4),%rdi
8fd0(2): mov (%rdi),%esi
8fd2(2): mov %esi,%eax
8fd4(2): shr %cl,%eax
8fd6(2): xor %eax,%edx
8fd8(3): and $0x1,%eax
8fdb(3): and $0x1,%edx
8fde(2): shl/sal %cl,%edx
8fe0(2): xor %esi,%edx
8fe2(2): mov %edx,(%rdi)
8fe4(1): ret near (%rsp)

"set_quoting_flags" :
8ff0(7): lea 0x208369(%rip),%rax
8ff7(3): test %rdi,%rdi
8ffa(4): cmove %rax,%rdi
8ffe(3): mov 0x4(%rdi),%eax
9001(3): mov %esi,0x4(%rdi)
9004(1): ret near (%rsp)

"set_custom_quoting" :
9010(7): lea 0x208349(%rip),%rax
9017(3): test %rdi,%rdi
901a(4): cmove %rax,%rdi
901e(3): test %rsi,%rsi
9021(6): mov $0xa,(%rdi)
9027(2): jz 0x10(%rip)
9029(3): test %rdx,%rdx
902c(2): jz 0xb(%rip)
902e(4): mov %rsi,0x28(%rdi)
9032(4): mov %rdx,0x30(%rdi)
9036(1): ret near (%rsp)
9037(4): sub $0x8,%rsp
903b(5): call 0xffff8b65(%rip)

"quotearg_buffer" :
9040(2): push %r15
9042(2): push %r14
9044(7): lea 0x208315(%rip),%rax
904b(2): push %r13
904d(2): push %r12
904f(3): mov %rdi,%r13
9052(1): push %rbp
9053(1): push %rbx
9054(3): mov %r8,%rbx
9057(3): mov %rsi,%r14
905a(3): mov %rdx,%r15
905d(4): sub $0x18,%rsp
9061(3): test %r8,%r8
9064(4): cmove %rax,%rbx
9068(5): mov %rcx,0x8(%rsp)
906d(5): call 0xffff8b43(%rip)
9072(3): mov (%rax),%r12d
9075(3): mov %rax,%rbp
9078(4): lea 0x8(%rbx),%rax
907c(4): sub $0x8,%rsp
9080(4): mov 0x4(%rbx),%r9d
9084(3): push 0x30(%rbx)
9087(3): mov (%rbx),%r8d
908a(3): push 0x28(%rbx)
908d(3): mov %r15,%rdx
9090(1): push %rax
9091(5): mov 0x28(%rsp),%rcx
9096(3): mov %r14,%rsi
9099(3): mov %r13,%rdi
909c(5): call 0xffffeaa4(%rip)
90a1(4): mov %r12d,0x0(%rbp)
90a5(4): add $0x38,%rsp
90a9(1): pop %rbx
90aa(1): pop %rbp
90ab(2): pop %r12
90ad(2): pop %r13
90af(2): pop %r14
90b1(2): pop %r15
90b3(1): ret near (%rsp)

"quotearg_alloc_mem" :
90c0(2): push %r15
90c2(2): push %r14
90c4(7): lea 0x208295(%rip),%rax
90cb(2): push %r13
90cd(2): push %r12
90cf(3): mov %rdx,%r12
90d2(1): push %rbp
90d3(1): push %rbx
90d4(3): mov %rcx,%rbx
90d7(3): mov %rdi,%r14
90da(3): mov %rsi,%r15
90dd(4): sub $0x38,%rsp
90e1(3): test %rcx,%rcx
90e4(4): cmove %rax,%rbx
90e8(2): xor %ebp,%ebp
90ea(5): call 0xffff8ac6(%rip)
90ef(3): test %r12,%r12
90f2(3): mov %rax,%r13
90f5(2): mov (%rax),%eax
90f7(4): setz %bpl
90fb(3): or 0x4(%rbx),%ebp
90fe(4): lea 0x8(%rbx),%r10
9102(4): sub $0x8,%rsp
9106(3): mov (%rbx),%r8d
9109(3): mov %r15,%rcx
910c(4): mov %eax,0x14(%rsp)
9110(3): push 0x30(%rbx)
9113(3): mov %r14,%rdx
9116(3): push 0x28(%rbx)
9119(2): push %r10
911b(2): xor %esi,%esi
911d(3): mov %ebp,%r9d
9120(2): xor %edi,%edi
9122(5): mov %r10,0x40(%rsp)
9127(5): call 0xffffea19(%rip)
912c(4): lea 0x1(%rax),%rsi
9130(5): mov %rax,0x48(%rsp)
9135(4): add $0x20,%rsp
9139(3): mov %rsi,%rdi
913c(5): mov %rsi,0x18(%rsp)
9141(5): call 0xbcf(%rip)
9146(5): mov %rax,0x10(%rsp)
914b(4): sub $0x8,%rsp
914f(3): push 0x30(%rbx)
9152(3): push 0x28(%rbx)
9155(5): mov 0x38(%rsp),%r10
915a(3): mov %ebp,%r9d
915d(3): mov (%rbx),%r8d
9160(3): mov %r15,%rcx
9163(3): mov %r14,%rdx
9166(3): mov %rax,%rdi
9169(2): push %r10
916b(5): mov 0x38(%rsp),%rsi
9170(5): call 0xffffe9d0(%rip)
9175(4): mov 0x2c(%rsp),%eax
9179(4): add $0x20,%rsp
917d(3): test %r12,%r12
9180(4): mov %eax,0x0(%r13)
9184(2): jz 0xb(%rip)
9186(5): mov 0x28(%rsp),%r11
918b(4): mov %r11,(%r12)
918f(5): mov 0x10(%rsp),%rax
9194(4): add $0x38,%rsp
9198(1): pop %rbx
9199(1): pop %rbp
919a(2): pop %r12
919c(2): pop %r13
919e(2): pop %r14
91a0(2): pop %r15
91a2(1): ret near (%rsp)

"quotearg_alloc" :
91b0(3): mov %rdx,%rcx
91b3(2): xor %edx,%edx
91b5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
91c0(6): mov 0x207ef2(%rip),%eax
91c6(2): push %r12
91c8(7): mov 0x207ef1(%rip),%r12
91cf(1): push %rbp
91d0(1): push %rbx
91d1(3): cmp $0x1,%eax
91d4(2): jle 0x2d(%rip)
91d6(3): sub $0x2,%eax
91d9(5): lea 0x18(%r12),%rbx
91de(4): shl/sal $0x4,%rax
91e2(5): lea 0x28(%r12,%rax,1),%rbp
91e7(9): nop 0x0(%rax,%rax,1)
91f0(3): mov (%rbx),%rdi
91f3(4): add $0x10,%rbx
91f7(5): call 0xffff8999(%rip)
91fc(3): cmp %rbp,%rbx
91ff(2): jnz 0xfffffff1(%rip)
9201(5): mov 0x8(%r12),%rdi
9206(7): lea 0x208053(%rip),%rbx
920d(3): cmp %rbx,%rdi
9210(2): jz 0x19(%rip)
9212(5): call 0xffff897e(%rip)
9217(b): mov $0x100,0x207eae(%rip)
9222(7): mov %rbx,0x207eaf(%rip)
9229(7): lea 0x207ea0(%rip),%rbx
9230(3): cmp %rbx,%r12
9233(2): jz 0x11(%rip)
9235(3): mov %r12,%rdi
9238(5): call 0xffff8958(%rip)
923d(7): mov %rbx,0x207e7c(%rip)
9244(1): pop %rbx
9245(a): mov $0x1,0x207e69(%rip)
924f(1): pop %rbp
9250(2): pop %r12
9252(1): ret near (%rsp)

"quotearg_n" :
9260(7): lea 0x2080f9(%rip),%rcx
9267(7): mov $0xffffffff,%rdx
926e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
9280(7): lea 0x2080d9(%rip),%rcx
9287(5): jmp 0xfffffaf9(%rip)

"quotearg" :
9290(7): lea 0x2080c9(%rip),%rcx
9297(3): mov %rdi,%rsi
929a(7): mov $0xffffffff,%rdx
92a1(2): xor %edi,%edi
92a3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
92b0(7): lea 0x2080a9(%rip),%rcx
92b7(3): mov %rsi,%rdx
92ba(3): mov %rdi,%rsi
92bd(2): xor %edi,%edi
92bf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
92d0(4): sub $0x48,%rsp
92d4(3): mov %rdx,%rax
92d7(9): mov $0x28,%rdx
92e0(5): mov %rdx,0x38(%rsp)
92e5(2): xor %edx,%edx
92e7(3): cmp $0xa,%esi
92ea(2): jz 0x6a(%rip)
92ec(3): mov %esi,(%rsp)
92ef(3): mov %rsp,%rcx
92f2(7): mov $0xffffffff,%rdx
92f9(3): mov %rax,%rsi
92fc(9): mov $0x0,0x4(%rsp)
9305(9): mov $0x0,0xc(%rsp)
930e(9): mov $0x0,0x14(%rsp)
9317(9): mov $0x0,0x1c(%rsp)
9320(9): mov $0x0,0x24(%rsp)
9329(9): mov $0x0,0x2c(%rsp)
9332(8): mov $0x0,0x34(%rsp)
933a(5): call 0xfffffa46(%rip)
933f(5): mov 0x38(%rsp),%rcx
9344(9): xor $0x28,%rcx
934d(2): jnz 0xc(%rip)
934f(4): add $0x48,%rsp
9353(1): ret near (%rsp)
9354(5): call 0xffff884c(%rip)
9359(5): call 0xffff8957(%rip)

"quotearg_n_style_mem" :
9360(4): sub $0x48,%rsp
9364(3): mov %rdx,%rax
9367(3): mov %rcx,%rdx
936a(9): mov $0x28,%rcx
9373(5): mov %rcx,0x38(%rsp)
9378(2): xor %ecx,%ecx
937a(3): cmp $0xa,%esi
937d(2): jz 0x63(%rip)
937f(3): mov %esi,(%rsp)
9382(3): mov %rsp,%rcx
9385(3): mov %rax,%rsi
9388(9): mov $0x0,0x4(%rsp)
9391(9): mov $0x0,0xc(%rsp)
939a(9): mov $0x0,0x14(%rsp)
93a3(9): mov $0x0,0x1c(%rsp)
93ac(9): mov $0x0,0x24(%rsp)
93b5(9): mov $0x0,0x2c(%rsp)
93be(8): mov $0x0,0x34(%rsp)
93c6(5): call 0xfffff9ba(%rip)
93cb(5): mov 0x38(%rsp),%rdx
93d0(9): xor $0x28,%rdx
93d9(2): jnz 0xc(%rip)
93db(4): add $0x48,%rsp
93df(1): ret near (%rsp)
93e0(5): call 0xffff87c0(%rip)
93e5(5): call 0xffff88cb(%rip)

"quotearg_style" :
93f0(3): mov %rsi,%rdx
93f3(2): mov %edi,%esi
93f5(2): xor %edi,%edi
93f7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
9400(3): mov %rdx,%rcx
9403(3): mov %rsi,%rdx
9406(2): mov %edi,%esi
9408(2): xor %edi,%edi
940a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
9410(4): sub $0x48,%rsp
9414(2): mov %edx,%ecx
9416(9): mov $0x28,%rax
941f(5): mov %rax,0x38(%rsp)
9424(2): xor %eax,%eax
9426(7): mov 0x207f63(%rip),%rax
942d(3): mov %rsp,%r8
9430(3): and $0x1f,%ecx
9433(8): movdqa 0x207f25(%rip),%xmm0
943b(5): mov %rax,0x30(%rsp)
9440(2): mov %edx,%eax
9442(4): movaps %xmm0,(%rsp)
9446(3): shr $0x5,%al
9449(3): movzx %al,%eax
944c(5): lea 0x8(%r8,%rax,4),%r9
9451(8): movdqa 0x207f17(%rip),%xmm0
9459(5): movaps %xmm0,0x10(%rsp)
945e(8): movdqa 0x207f1a(%rip),%xmm0
9466(5): movaps %xmm0,0x20(%rsp)
946b(3): mov (%r9),%edx
946e(2): mov %edx,%eax
9470(2): shr %cl,%eax
9472(2): not %eax
9474(3): and $0x1,%eax
9477(2): shl/sal %cl,%eax
9479(3): mov %r8,%rcx
947c(2): xor %edx,%eax
947e(3): mov %rsi,%rdx
9481(3): mov %rdi,%rsi
9484(3): mov %eax,(%r9)
9487(2): xor %edi,%edi
9489(5): call 0xfffff8f7(%rip)
948e(5): mov 0x38(%rsp),%rsi
9493(9): xor $0x28,%rsi
949c(2): jnz 0x7(%rip)
949e(4): add $0x48,%rsp
94a2(1): ret near (%rsp)
94a3(5): call 0xffff880d(%rip)

"quotearg_char" :
94b0(4): movsx %sil,%edx
94b4(7): mov $0xffffffff,%rsi
94bb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
94c0(5): mov $0x3a,%edx
94c5(7): mov $0xffffffff,%rsi
94cc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
94e0(5): mov $0x3a,%edx
94e5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
94f0(4): sub $0x48,%rsp
94f4(3): mov %rdx,%rax
94f7(9): mov $0x28,%rdx
9500(5): mov %rdx,0x38(%rsp)
9505(2): xor %edx,%edx
9507(3): cmp $0xa,%esi
950a(2): jz 0x6a(%rip)
950c(3): mov %esi,(%rsp)
950f(3): mov %rsp,%rcx
9512(7): mov $0xffffffff,%rdx
9519(3): mov %rax,%rsi
951c(9): mov $0x0,0x4(%rsp)
9525(9): mov $0x4000000,0xc(%rsp)
952e(9): mov $0x0,0x14(%rsp)
9537(9): mov $0x0,0x1c(%rsp)
9540(9): mov $0x0,0x24(%rsp)
9549(9): mov $0x0,0x2c(%rsp)
9552(8): mov $0x0,0x34(%rsp)
955a(5): call 0xfffff826(%rip)
955f(5): mov 0x38(%rsp),%rcx
9564(9): xor $0x28,%rcx
956d(2): jnz 0xc(%rip)
956f(4): add $0x48,%rsp
9573(1): ret near (%rsp)
9574(5): call 0xffff862c(%rip)
9579(5): call 0xffff8737(%rip)

"quotearg_n_custom_mem" :
9580(4): sub $0x48,%rsp
9584(3): mov %rcx,%r9
9587(7): mov 0x207e02(%rip),%rcx
958e(8): movdqa 0x207dca(%rip),%xmm0
9596(9): mov $0x28,%rax
959f(5): mov %rax,0x38(%rsp)
95a4(2): xor %eax,%eax
95a6(4): movaps %xmm0,(%rsp)
95aa(3): test %rsi,%rsi
95ad(5): mov %rcx,0x30(%rsp)
95b2(7): mov $0xa,(%rsp)
95b9(8): movdqa 0x207daf(%rip),%xmm0
95c1(5): movaps %xmm0,0x10(%rsp)
95c6(8): movdqa 0x207db2(%rip),%xmm0
95ce(5): movaps %xmm0,0x20(%rsp)
95d3(2): jz 0x34(%rip)
95d5(3): test %rdx,%rdx
95d8(2): jz 0x2f(%rip)
95da(5): mov %rsi,0x28(%rsp)
95df(5): mov %rdx,0x30(%rsp)
95e4(3): mov %rsp,%rcx
95e7(3): mov %r8,%rdx
95ea(3): mov %r9,%rsi
95ed(5): call 0xfffff793(%rip)
95f2(5): mov 0x38(%rsp),%rdi
95f7(9): xor $0x28,%rdi
9600(2): jnz 0xc(%rip)
9602(4): add $0x48,%rsp
9606(1): ret near (%rsp)
9607(5): call 0xffff8599(%rip)
960c(5): call 0xffff86a4(%rip)

"quotearg_n_custom" :
9620(7): mov $0xffffffff,%r8
9627(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
9630(3): mov %rdx,%rcx
9633(7): mov $0xffffffff,%r8
963a(3): mov %rsi,%rdx
963d(3): mov %rdi,%rsi
9640(2): xor %edi,%edi
9642(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
9650(3): mov %rcx,%r8
9653(3): mov %rdx,%rcx
9656(3): mov %rsi,%rdx
9659(3): mov %rdi,%rsi
965c(2): xor %edi,%edi
965e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
9670(7): lea 0x207a09(%rip),%rcx
9677(5): jmp 0xfffff709(%rip)

"quote_mem" :
9680(7): lea 0x2079f9(%rip),%rcx
9687(3): mov %rsi,%rdx
968a(3): mov %rdi,%rsi
968d(2): xor %edi,%edi
968f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
96a0(7): lea 0x2079d9(%rip),%rcx
96a7(7): mov $0xffffffff,%rdx
96ae(5): jmp 0xfffff6d2(%rip)

"quote" :
96c0(7): lea 0x2079b9(%rip),%rcx
96c7(3): mov %rdi,%rsi
96ca(7): mov $0xffffffff,%rdx
96d1(2): xor %edi,%edi
96d3(5): jmp 0xfffff6ad(%rip)

"dup_safer" :
96e0(5): mov $0x3,%edx
96e5(2): xor %esi,%esi
96e7(2): xor %eax,%eax
96e9(5): jmp 0x1cd7(%rip)

"version_etc_arn" :
96f0(2): push %r15
96f2(2): push %r14
96f4(2): push %r13
96f6(2): push %r12
96f8(3): mov %r9,%r12
96fb(1): push %rbp
96fc(1): push %rbx
96fd(3): mov %rdi,%rbp
9700(3): mov %r8,%rbx
9703(4): sub $0x28,%rsp
9707(3): test %rsi,%rsi
970a(6): jz 0x11e(%rip)
9710(3): mov %rdx,%r8
9713(7): lea 0x486e(%rip),%rdx
971a(3): mov %rcx,%r9
971d(2): xor %eax,%eax
971f(3): mov %rsi,%rcx
9722(5): mov $0x1,%esi
9727(5): call 0xffff8829(%rip)
972c(7): lea 0x4868(%rip),%rsi
9733(2): xor %edi,%edi
9735(5): mov $0x5,%edx
973a(5): call 0xffff8546(%rip)
973f(7): lea 0x4b7a(%rip),%rdx
9746(3): mov %rax,%rcx
9749(6): mov $0x7e3,%r8d
974f(5): mov $0x1,%esi
9754(3): mov %rbp,%rdi
9757(2): xor %eax,%eax
9759(5): call 0xffff87f7(%rip)
975e(7): lea 0x48c3(%rip),%rsi
9765(2): xor %edi,%edi
9767(5): mov $0x5,%edx
976c(5): call 0xffff8514(%rip)
9771(3): mov %rbp,%rsi
9774(3): mov %rax,%rdi
9777(5): call 0xffff8619(%rip)
977c(4): cmp $0x9,%r12
9780(6): jnbe 0x340(%rip)
9786(7): lea 0x4af7(%rip),%rdx
978d(4): movsxd 0x0(%rdx,%r12,4),%rax
9791(3): add %rdx,%rax
9794(2): jmp %rax
9796(a): nop 0x0(%rax,%rax,1)
97a0(4): mov 0x38(%rbx),%r9
97a4(4): mov 0x10(%rbx),%rax
97a8(7): lea 0x49e9(%rip),%rsi
97af(4): mov 0x8(%rbx),%r8
97b3(5): mov $0x5,%edx
97b8(2): xor %edi,%edi
97ba(4): mov 0x30(%rbx),%r13
97be(4): mov 0x28(%rbx),%r12
97c2(5): mov %r9,0x10(%rsp)
97c7(4): mov 0x20(%rbx),%r15
97cb(4): mov 0x18(%rbx),%r14
97cf(4): mov %rax,(%rsp)
97d3(5): mov %r8,0x8(%rsp)
97d8(3): mov (%rbx),%rbx
97db(5): call 0xffff84a5(%rip)
97e0(4): sub $0x8,%rsp
97e4(5): mov 0x18(%rsp),%r9
97e9(3): mov %rax,%rdx
97ec(3): mov %rbx,%rcx
97ef(5): mov $0x1,%esi
97f4(3): mov %rbp,%rdi
97f7(2): xor %eax,%eax
97f9(2): push %r9
97fb(2): push %r13
97fd(2): push %r12
97ff(2): push %r15
9801(2): push %r14
9803(5): mov 0x30(%rsp),%r9
9808(5): mov 0x38(%rsp),%r8
980d(5): call 0xffff8743(%rip)
9812(4): add $0x30,%rsp
9816(4): add $0x28,%rsp
981a(1): pop %rbx
981b(1): pop %rbp
981c(2): pop %r12
981e(2): pop %r13
9820(2): pop %r14
9822(2): pop %r15
9824(1): ret near (%rsp)
9825(3): nop (%rax)
9828(3): mov %rcx,%r8
982b(3): mov %rdx,%rcx
982e(7): lea 0x475f(%rip),%rdx
9835(5): mov $0x1,%esi
983a(2): xor %eax,%eax
983c(5): call 0xffff8714(%rip)
9841(5): jmp 0xfffffeeb(%rip)
9846(a): nop 0x0(%rax,%rax,1)
9850(4): mov 0x40(%rbx),%r10
9854(4): mov 0x38(%rbx),%r9
9858(7): lea 0x4969(%rip),%rsi
985f(4): mov 0x10(%rbx),%rax
9863(4): mov 0x8(%rbx),%r8
9867(5): mov $0x5,%edx
986c(4): mov 0x30(%rbx),%r13
9870(4): mov 0x28(%rbx),%r12
9874(4): mov 0x20(%rbx),%r15
9878(4): mov 0x18(%rbx),%r14
987c(3): mov (%rbx),%rbx
987f(5): mov %r10,0x18(%rsp)
9884(5): mov %r9,0x10(%rsp)
9889(4): mov %rax,(%rsp)
988d(5): mov %r8,0x8(%rsp)
9892(2): xor %edi,%edi
9894(5): call 0xffff83ec(%rip)
9899(5): mov 0x18(%rsp),%r10
989e(2): push %r10
98a0(5): jmp 0xffffff44(%rip)
98a5(3): nop (%rax)
98a8(3): mov (%rbx),%rbx
98ab(7): lea 0x46ed(%rip),%rsi
98b2(5): mov $0x5,%edx
98b7(2): xor %edi,%edi
98b9(5): call 0xffff83c7(%rip)
98be(4): add $0x28,%rsp
98c2(3): mov %rbx,%rcx
98c5(3): mov %rbp,%rdi
98c8(1): pop %rbx
98c9(1): pop %rbp
98ca(2): pop %r12
98cc(2): pop %r13
98ce(2): pop %r14
98d0(2): pop %r15
98d2(3): mov %rax,%rdx
98d5(5): mov $0x1,%esi
98da(2): xor %eax,%eax
98dc(5): jmp 0xffff8674(%rip)
98e1(7): nop 0x0(%rax)
98e8(4): mov 0x8(%rbx),%r12
98ec(7): lea 0x46bc(%rip),%rsi
98f3(3): mov (%rbx),%rbx
98f6(5): mov $0x5,%edx
98fb(2): xor %edi,%edi
98fd(5): call 0xffff8383(%rip)
9902(4): add $0x28,%rsp
9906(3): mov %r12,%r8
9909(3): mov %rbx,%rcx
990c(3): mov %rbp,%rdi
990f(3): mov %rax,%rdx
9912(5): mov $0x1,%esi
9917(1): pop %rbx
9918(1): pop %rbp
9919(2): pop %r12
991b(2): pop %r13
991d(2): pop %r14
991f(2): pop %r15
9921(2): xor %eax,%eax
9923(5): jmp 0xffff862d(%rip)
9928(8): nop 0x0(%rax,%rax,1)
9930(4): mov 0x10(%rbx),%r13
9934(4): mov 0x8(%rbx),%r12
9938(7): lea 0x4687(%rip),%rsi
993f(3): mov (%rbx),%rbx
9942(5): mov $0x5,%edx
9947(2): xor %edi,%edi
9949(5): call 0xffff8337(%rip)
994e(4): add $0x28,%rsp
9952(3): mov %r13,%r9
9955(3): mov %r12,%r8
9958(3): mov %rbx,%rcx
995b(3): mov %rbp,%rdi
995e(3): mov %rax,%rdx
9961(1): pop %rbx
9962(1): pop %rbp
9963(2): pop %r12
9965(2): pop %r13
9967(2): pop %r14
9969(2): pop %r15
996b(5): mov $0x1,%esi
9970(2): xor %eax,%eax
9972(5): jmp 0xffff85de(%rip)
9977(9): nop 0x0(%rax,%rax,1)
9980(7): lea 0x4771(%rip),%rsi
9987(5): mov $0x5,%edx
998c(2): xor %edi,%edi
998e(4): mov 0x18(%rbx),%r14
9992(4): mov 0x10(%rbx),%r13
9996(4): mov 0x8(%rbx),%r12
999a(3): mov (%rbx),%rbx
999d(5): call 0xffff82e3(%rip)
99a2(4): sub $0x8,%rsp
99a6(2): push %r14
99a8(3): mov %rax,%rdx
99ab(3): mov %r13,%r9
99ae(3): mov %r12,%r8
99b1(3): mov %rbx,%rcx
99b4(3): mov %rbp,%rdi
99b7(5): mov $0x1,%esi
99bc(2): xor %eax,%eax
99be(5): call 0xffff8592(%rip)
99c3(1): pop %rax
99c4(1): pop %rdx
99c5(4): add $0x28,%rsp
99c9(1): pop %rbx
99ca(1): pop %rbp
99cb(2): pop %r12
99cd(2): pop %r13
99cf(2): pop %r14
99d1(2): pop %r15
99d3(1): ret near (%rsp)
99d4(4): nop 0x0(%rax)
99d8(4): mov 0x20(%rbx),%r15
99dc(7): lea 0x4735(%rip),%rsi
99e3(5): mov $0x5,%edx
99e8(2): xor %edi,%edi
99ea(4): mov 0x18(%rbx),%r14
99ee(4): mov 0x10(%rbx),%r13
99f2(4): mov 0x8(%rbx),%r12
99f6(3): mov (%rbx),%rbx
99f9(5): call 0xffff8287(%rip)
99fe(2): push %r15
9a00(2): jmp 0xffffffa6(%rip)
9a02(6): nop 0x0(%rax,%rax,1)
9a08(4): mov 0x8(%rbx),%r8
9a0c(4): mov 0x28(%rbx),%r12
9a10(7): lea 0x4729(%rip),%rsi
9a17(4): mov 0x20(%rbx),%r15
9a1b(4): mov 0x18(%rbx),%r14
9a1f(5): mov $0x5,%edx
9a24(4): mov 0x10(%rbx),%r13
9a28(2): xor %edi,%edi
9a2a(3): mov (%rbx),%rbx
9a2d(4): mov %r8,(%rsp)
9a31(5): call 0xffff824f(%rip)
9a36(4): sub $0x8,%rsp
9a3a(3): mov %r13,%r9
9a3d(2): push %r12
9a3f(2): push %r15
9a41(2): push %r14
9a43(5): mov 0x20(%rsp),%r8
9a48(3): mov %rbx,%rcx
9a4b(3): mov %rax,%rdx
9a4e(3): mov %rbp,%rdi
9a51(5): mov $0x1,%esi
9a56(2): xor %eax,%eax
9a58(5): call 0xffff84f8(%rip)
9a5d(4): add $0x20,%rsp
9a61(4): add $0x28,%rsp
9a65(1): pop %rbx
9a66(1): pop %rbp
9a67(2): pop %r12
9a69(2): pop %r13
9a6b(2): pop %r14
9a6d(2): pop %r15
9a6f(1): ret near (%rsp)
9a70(4): mov 0x10(%rbx),%r9
9a74(4): mov 0x30(%rbx),%r13
9a78(7): lea 0x46e9(%rip),%rsi
9a7f(4): mov 0x28(%rbx),%r12
9a83(4): mov 0x20(%rbx),%r15
9a87(5): mov $0x5,%edx
9a8c(4): mov 0x18(%rbx),%r14
9a90(4): mov 0x8(%rbx),%r8
9a94(2): xor %edi,%edi
9a96(5): mov %r9,0x8(%rsp)
9a9b(3): mov (%rbx),%rbx
9a9e(4): mov %r8,(%rsp)
9aa2(5): call 0xffff81de(%rip)
9aa7(2): push %r13
9aa9(2): push %r12
9aab(2): push %r15
9aad(2): push %r14
9aaf(5): mov 0x28(%rsp),%r9
9ab4(2): jmp 0xffffff8f(%rip)
9ab6(a): nop 0x0(%rax,%rax,1)
9ac0(4): mov 0x40(%rbx),%r10
9ac4(4): mov 0x38(%rbx),%r9
9ac8(5): mov $0x5,%edx
9acd(4): mov 0x10(%rbx),%rax
9ad1(4): mov 0x8(%rbx),%r8
9ad5(7): lea 0x4724(%rip),%rsi
9adc(4): mov 0x30(%rbx),%r13
9ae0(4): mov 0x28(%rbx),%r12
9ae4(4): mov 0x20(%rbx),%r15
9ae8(4): mov 0x18(%rbx),%r14
9aec(5): mov %r10,0x18(%rsp)
9af1(5): mov %r9,0x10(%rsp)
9af6(4): mov %rax,(%rsp)
9afa(5): mov %r8,0x8(%rsp)
9aff(3): mov (%rbx),%rbx
9b02(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
9b10(3): xor %r9d,%r9d
9b13(4): cmp $0x0,(%r8)
9b17(2): jz 0x14(%rip)
9b19(7): nop 0x0(%rax)
9b20(4): add $0x1,%r9
9b24(5): cmp $0x0,0x0(%r8,%r9,8)
9b29(2): jnz 0xfffffff7(%rip)
9b2b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
9b30(4): sub $0x68,%rsp
9b34(3): mov %r8,%r10
9b37(3): xor %r9d,%r9d
9b3a(9): mov $0x28,%rax
9b43(5): mov %rax,0x58(%rsp)
9b48(2): xor %eax,%eax
9b4a(3): mov %rsp,%r8
9b4d(3): nop (%rax)
9b50(3): mov (%r10),%eax
9b53(3): cmp $0x2f,%eax
9b56(2): jnbe 0x44(%rip)
9b58(3): mov %eax,%r11d
9b5b(4): add 0x10(%r10),%r11
9b5f(3): add $0x8,%eax
9b62(3): mov %eax,(%r10)
9b65(3): mov (%r11),%rax
9b68(3): test %rax,%rax
9b6b(4): mov %rax,0x0(%r8,%r9,8)
9b6f(2): jz 0xc(%rip)
9b71(4): add $0x1,%r9
9b75(4): cmp $0xa,%r9
9b79(2): jnz 0xffffffd7(%rip)
9b7b(5): call 0xfffffb75(%rip)
9b80(5): mov 0x58(%rsp),%rax
9b85(9): xor $0x28,%rax
9b8e(2): jnz 0x7(%rip)
9b90(4): add $0x68,%rsp
9b94(1): ret near (%rsp)
9b95(5): call 0xffff811b(%rip)
9b9a(4): mov 0x8(%r10),%r11
9b9e(4): lea 0x8(%r11),%rax
9ba2(4): mov %rax,0x8(%r10)
9ba6(2): jmp 0xffffffbf(%rip)

"version_etc" :
9bb0(1): push %rbp
9bb1(1): push %rbx
9bb2(6): mov $0x20,%r10d
9bb8(3): xor %r11d,%r11d
9bbb(7): sub $0xb8,%rsp
9bc2(9): mov $0x28,%rax
9bcb(5): mov %rax,0x78(%rsp)
9bd0(2): xor %eax,%eax
9bd2(8): lea 0xd0(%rsp),%rax
9bda(8): mov %r8,0xa0(%rsp)
9be2(8): lea 0xd0(%rsp),%rbx
9bea(5): lea 0x20(%rsp),%r8
9bef(8): mov %r9,0xa8(%rsp)
9bf7(8): mov $0x20,0x8(%rsp)
9bff(5): mov %rax,0x10(%rsp)
9c04(8): lea 0x80(%rsp),%rax
9c0c(3): xor %r9d,%r9d
9c0f(5): mov %rax,0x18(%rsp)
9c14(3): mov %rax,%rbp
9c17(9): nop 0x0(%rax,%rax,1)
9c20(4): cmp $0x2f,%r10d
9c24(2): jnbe 0x58(%rip)
9c26(3): mov %r10d,%eax
9c29(6): mov $0x1,%r11d
9c2f(4): add $0x8,%r10d
9c33(3): add %rbp,%rax
9c36(3): mov (%rax),%rax
9c39(3): test %rax,%rax
9c3c(4): mov %rax,0x0(%r8,%r9,8)
9c40(2): jz 0xc(%rip)
9c42(4): add $0x1,%r9
9c46(4): cmp $0xa,%r9
9c4a(2): jnz 0xffffffd6(%rip)
9c4c(3): test %r11b,%r11b
9c4f(2): jnz 0x26(%rip)
9c51(5): call 0xfffffa9f(%rip)
9c56(5): mov 0x78(%rsp),%rax
9c5b(9): xor $0x28,%rax
9c64(2): jnz 0xc(%rip)
9c66(7): add $0xb8,%rsp
9c6d(1): pop %rbx
9c6e(1): pop %rbp
9c6f(1): ret near (%rsp)
9c70(5): call 0xffff8040(%rip)
9c75(5): mov %r10d,0x8(%rsp)
9c7a(2): jmp 0xffffffd7(%rip)
9c7c(3): mov %rbx,%rax
9c7f(4): add $0x8,%rbx
9c83(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
9c90(1): push %rbx
9c91(7): lea 0x434a(%rip),%rsi
9c98(5): mov $0x5,%edx
9c9d(2): xor %edi,%edi
9c9f(5): call 0xffff7fe1(%rip)
9ca4(7): lea 0x434c(%rip),%rdx
9cab(3): mov %rax,%rsi
9cae(5): mov $0x1,%edi
9cb3(2): xor %eax,%eax
9cb5(5): call 0xffff81fb(%rip)
9cba(7): lea 0x434c(%rip),%rsi
9cc1(5): mov $0x5,%edx
9cc6(2): xor %edi,%edi
9cc8(5): call 0xffff7fb8(%rip)
9ccd(7): lea 0x3474(%rip),%rcx
9cd4(7): lea 0x229a(%rip),%rdx
9cdb(3): mov %rax,%rsi
9cde(5): mov $0x1,%edi
9ce3(2): xor %eax,%eax
9ce5(5): call 0xffff81cb(%rip)
9cea(7): mov 0x2073f7(%rip),%rbx
9cf1(7): lea 0x4548(%rip),%rsi
9cf8(2): xor %edi,%edi
9cfa(5): mov $0x5,%edx
9cff(5): call 0xffff7f81(%rip)
9d04(3): mov %rbx,%rsi
9d07(3): mov %rax,%rdi
9d0a(1): pop %rbx
9d0b(5): jmp 0xffff8085(%rip)

"xmalloc" :
9d10(1): push %rbx
9d11(3): mov %rdi,%rbx
9d14(5): call 0xffff80fc(%rip)
9d19(3): test %rax,%rax
9d1c(2): jnz 0x7(%rip)
9d1e(3): test %rbx,%rbx
9d21(2): jnz 0x4(%rip)
9d23(1): pop %rbx
9d24(1): ret near (%rsp)
9d25(5): call 0x23b(%rip)

"xnmalloc" :
9d30(3): mov %rdi,%rax
9d33(3): mul %rax,%rsi,%rdx
9d36(3): mov %rax,%rdi
9d39(3): seto %al
9d3c(3): test %rdi,%rdi
9d3f(2): js 0xc(%rip)
9d41(3): movzx %al,%eax
9d44(3): test %rax,%rax
9d47(2): jnz 0x4(%rip)
9d49(2): jmp 0xffffffc7(%rip)
9d4b(4): sub $0x8,%rsp
9d4f(5): call 0x211(%rip)

"xrealloc" :
9d70(3): test %rsi,%rsi
9d73(1): push %rbx
9d74(3): mov %rsi,%rbx
9d77(2): jnz 0x7(%rip)
9d79(3): test %rdi,%rdi
9d7c(2): jnz 0x1c(%rip)
9d7e(3): mov %rbx,%rsi
9d81(5): call 0xffff80ff(%rip)
9d86(3): test %rax,%rax
9d89(2): jnz 0x7(%rip)
9d8b(3): test %rbx,%rbx
9d8e(2): jnz 0x13(%rip)
9d90(1): pop %rbx
9d91(1): ret near (%rsp)
9d92(6): nop 0x0(%rax,%rax,1)
9d98(5): call 0xffff7df8(%rip)
9d9d(2): xor %eax,%eax
9d9f(1): pop %rbx
9da0(1): ret near (%rsp)
9da1(5): call 0x1bf(%rip)

"xnrealloc" :
9db0(3): mov %rsi,%rax
9db3(3): mul %rax,%rdx,%rdx
9db6(3): mov %rax,%rsi
9db9(3): seto %al
9dbc(3): test %rsi,%rsi
9dbf(2): js 0xc(%rip)
9dc1(3): movzx %al,%eax
9dc4(3): test %rax,%rax
9dc7(2): jnz 0x4(%rip)
9dc9(2): jmp 0xffffffa7(%rip)
9dcb(4): sub $0x8,%rsp
9dcf(5): call 0x191(%rip)

"x2nrealloc" :
9de0(3): test %rdi,%rdi
9de3(3): mov %rdx,%r9
9de6(3): mov (%rsi),%rcx
9de9(2): jz 0x37(%rip)
9deb(2): xor %edx,%edx
9ded(a): mov $0x6148914691236517204,%rax
9df7(3): div %r9,%rax
9dfa(3): cmp %rcx,%rax
9dfd(2): jbe 0x3e(%rip)
9dff(3): mov %rcx,%rax
9e02(3): shr $0x1,%rax
9e05(5): lea 0x1(%rax,%rcx,1),%rcx
9e0a(3): mov %rcx,(%rsi)
9e0d(4): imul %r9,%rcx
9e11(3): mov %rcx,%rsi
9e14(5): jmp 0xffffff5c(%rip)
9e19(7): nop 0x0(%rax)
9e20(3): test %rcx,%rcx
9e23(2): jz 0x25(%rip)
9e25(3): mov %rcx,%rax
9e28(3): mul %rax,%r9,%rdx
9e2b(3): seto %dl
9e2e(3): test %rax,%rax
9e31(3): movzx %dl,%edx
9e34(2): js 0x7(%rip)
9e36(3): test %rdx,%rdx
9e39(2): jz 0xffffffd1(%rip)
9e3b(4): sub $0x8,%rsp
9e3f(5): call 0x121(%rip)
9e44(4): nop 0x0(%rax)
9e48(2): xor %edx,%edx
9e4a(5): mov $0x80,%eax
9e4f(3): xor %r8d,%r8d
9e52(3): div %r9,%rax
9e55(3): test %rax,%rax
9e58(4): setz %r8b
9e5c(4): lea 0x0(%r8,%rax,1),%rcx
9e60(2): jmp 0xffffffc5(%rip)

"x2realloc" :
9e70(3): test %rdi,%rdi
9e73(3): mov (%rsi),%rax
9e76(2): jz 0x2a(%rip)
9e78(a): mov $0x6148914691236517203,%rdx
9e82(3): cmp %rdx,%rax
9e85(2): jnbe 0x2c(%rip)
9e87(3): mov %rax,%rdx
9e8a(3): shr $0x1,%rdx
9e8d(5): lea 0x1(%rdx,%rax,1),%rax
9e92(3): mov %rax,(%rsi)
9e95(3): mov %rax,%rsi
9e98(5): jmp 0xfffffed8(%rip)
9e9d(3): nop (%rax)
9ea0(3): test %rax,%rax
9ea3(5): mov $0x80,%edx
9ea8(4): cmove %rdx,%rax
9eac(3): test %rax,%rax
9eaf(2): jns 0xffffffe3(%rip)
9eb1(4): sub $0x8,%rsp
9eb5(5): call 0xab(%rip)

"xzalloc" :
9ec0(1): push %rbx
9ec1(3): mov %rdi,%rbx
9ec4(5): call 0xfffffe4c(%rip)
9ec9(3): mov %rbx,%rdx
9ecc(2): xor %esi,%esi
9ece(3): mov %rax,%rdi
9ed1(1): pop %rbx
9ed2(5): jmp 0xffff7e7e(%rip)

"xcalloc" :
9ee0(3): mov %rdi,%rax
9ee3(4): sub $0x8,%rsp
9ee7(3): mul %rax,%rsi,%rdx
9eea(3): seto %dl
9eed(3): test %rax,%rax
9ef0(2): js 0x19(%rip)
9ef2(3): movzx %dl,%edx
9ef5(3): test %rdx,%rdx
9ef8(2): jnz 0x11(%rip)
9efa(5): call 0xffff7ea6(%rip)
9eff(3): test %rax,%rax
9f02(2): jz 0x7(%rip)
9f04(4): add $0x8,%rsp
9f08(1): ret near (%rsp)
9f09(5): call 0x57(%rip)

"xmemdup" :
9f10(1): push %rbp
9f11(1): push %rbx
9f12(3): mov %rdi,%rbp
9f15(3): mov %rsi,%rdi
9f18(3): mov %rsi,%rbx
9f1b(4): sub $0x8,%rsp
9f1f(5): call 0xfffffdf1(%rip)
9f24(4): add $0x8,%rsp
9f28(3): mov %rbx,%rdx
9f2b(3): mov %rbp,%rsi
9f2e(1): pop %rbx
9f2f(1): pop %rbp
9f30(3): mov %rax,%rdi
9f33(5): jmp 0xffff7e9d(%rip)

"xstrdup" :
9f40(1): push %rbx
9f41(3): mov %rdi,%rbx
9f44(5): call 0xffff7d5c(%rip)
9f49(3): mov %rbx,%rdi
9f4c(4): lea 0x1(%rax),%rsi
9f50(1): pop %rbx
9f51(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
9f60(7): lea 0x4388(%rip),%rsi
9f67(4): sub $0x8,%rsp
9f6b(5): mov $0x5,%edx
9f70(2): xor %edi,%edi
9f72(5): call 0xffff7d0e(%rip)
9f77(6): mov 0x2070e3(%rip),%edi
9f7d(7): lea 0x38c6(%rip),%rdx
9f84(3): mov %rax,%rcx
9f87(2): xor %esi,%esi
9f89(2): xor %eax,%eax
9f8b(5): call 0xffff7f55(%rip)
9f90(5): call 0xffff7c10(%rip)

"xnumtoimax" :
9fa0(2): push %r15
9fa2(2): push %r14
9fa4(3): mov %rcx,%r15
9fa7(2): push %r13
9fa9(2): push %r12
9fab(3): mov %rdx,%r14
9fae(1): push %rbp
9faf(1): push %rbx
9fb0(2): mov %esi,%edx
9fb2(2): xor %esi,%esi
9fb4(3): mov %rdi,%r12
9fb7(3): mov %r9,%r13
9fba(4): sub $0x18,%rsp
9fbe(3): mov %rsp,%rcx
9fc1(4): mov 0x50(%rsp),%ebx
9fc5(9): mov $0x28,%rax
9fce(5): mov %rax,0x8(%rsp)
9fd3(2): xor %eax,%eax
9fd5(5): call 0x11b(%rip)
9fda(2): test %eax,%eax
9fdc(6): jnz 0x94(%rip)
9fe2(4): mov (%rsp),%rbp
9fe6(3): cmp %r14,%rbp
9fe9(2): jl 0x7(%rip)
9feb(3): cmp %r15,%rbp
9fee(2): jle 0x58(%rip)
9ff0(5): call 0xffff7bc0(%rip)
9ff5(7): cmp $0x3fffffff,%rbp
9ffc(3): mov %rax,%r14
9fff(6): jle 0x91(%rip)
a005(7): mov $0x4b,(%r14)
a00c(3): mov %r12,%rdi
a00f(5): call 0xfffff6b1(%rip)
a014(3): mov (%r14),%esi
a017(3): mov %rax,%r8
a01a(5): mov $0x0,%eax
a01f(7): lea 0x3820(%rip),%rdx
a026(3): mov %r13,%rcx
a029(3): cmp $0x16,%esi
a02c(3): cmove %eax,%esi
a02f(2): test %ebx,%ebx
a031(5): mov $0x1,%eax
a036(3): cmove %eax,%ebx
a039(2): xor %eax,%eax
a03b(2): mov %ebx,%edi
a03d(5): call 0xffff7ea3(%rip)
a042(4): mov (%rsp),%rbp
a046(5): mov 0x8(%rsp),%rdx
a04b(9): xor $0x28,%rdx
a054(3): mov %rbp,%rax
a057(2): jnz 0x55(%rip)
a059(4): add $0x18,%rsp
a05d(1): pop %rbx
a05e(1): pop %rbp
a05f(2): pop %r12
a061(2): pop %r13
a063(2): pop %r14
a065(2): pop %r15
a067(1): ret near (%rsp)
a068(8): nop 0x0(%rax,%rax,1)
a070(2): mov %eax,%ebp
a072(5): call 0xffff7b3e(%rip)
a077(3): cmp $0x1,%ebp
a07a(3): mov %rax,%r14
a07d(2): jz 0xffffff88(%rip)
a07f(3): cmp $0x3,%ebp
a082(2): jnz 0xffffff8a(%rip)
a084(6): mov $0x0,(%rax)
a08a(2): jmp 0xffffff82(%rip)
a08c(4): nop 0x0(%rax)
a090(7): cmp $0xbfffffff,%rbp
a097(5): mov $0x22,%eax
a09c(5): mov $0x4b,%edx
a0a1(3): cmovng %edx,%eax
a0a4(3): mov %eax,(%r14)
a0a7(5): jmp 0xffffff65(%rip)
a0ac(5): call 0xffff7c04(%rip)

"xdectoimax" :
a0c0(4): sub $0x10,%rsp
a0c4(2): push %r9
a0c6(3): mov %r8,%r9
a0c9(3): mov %rcx,%r8
a0cc(3): mov %rdx,%rcx
a0cf(3): mov %rsi,%rdx
a0d2(5): mov $0xa,%esi
a0d7(5): call 0xfffffec9(%rip)
a0dc(4): add $0x18,%rsp
a0e0(1): ret near (%rsp)

"xstrtoimax" :
a0f0(2): push %r15
a0f2(2): push %r14
a0f4(2): push %r13
a0f6(2): push %r12
a0f8(1): push %rbp
a0f9(1): push %rbx
a0fa(4): sub $0x28,%rsp
a0fe(9): mov $0x28,%rax
a107(5): mov %rax,0x18(%rsp)
a10c(2): xor %eax,%eax
a10e(3): cmp $0x24,%edx
a111(6): jnbe 0x66e(%rip)
a117(5): lea 0x10(%rsp),%rax
a11c(3): test %rsi,%rsi
a11f(3): mov %rsi,%rbx
a122(3): mov %rdi,%r12
a125(2): mov %edx,%ebp
a127(3): mov %rcx,%r14
a12a(4): cmove %rax,%rbx
a12e(3): mov %r8,%r15
a131(5): call 0xffff7a7f(%rip)
a136(2): xor %ecx,%ecx
a138(2): mov %ebp,%edx
a13a(6): mov $0x0,(%rax)
a140(3): mov %rbx,%rsi
a143(3): mov %r12,%rdi
a146(3): mov %rax,%r13
a149(5): call 0xffff7b07(%rip)
a14e(3): mov (%rbx),%rcx
a151(3): mov %rax,%rbp
a154(3): cmp %r12,%rcx
a157(2): jz 0x61(%rip)
a159(4): mov 0x0(%r13),%eax
a15d(2): test %eax,%eax
a15f(2): jnz 0x41(%rip)
a161(3): xor %r12d,%r12d
a164(3): test %r15,%r15
a167(2): jz 0xf(%rip)
a169(4): movzx (%rcx),%r13d
a16d(3): test %r13b,%r13b
a170(6): jnz 0x83(%rip)
a176(3): mov %rbp,(%r14)
a179(5): mov 0x18(%rsp),%rdi
a17e(9): xor $0x28,%rdi
a187(3): mov %r12d,%eax
a18a(6): jnz 0x614(%rip)
a190(4): add $0x28,%rsp
a194(1): pop %rbx
a195(1): pop %rbp
a196(2): pop %r12
a198(2): pop %r13
a19a(2): pop %r14
a19c(2): pop %r15
a19e(1): ret near (%rsp)
a19f(1): nop 
a1a0(3): cmp $0x22,%eax
a1a3(6): mov $0x4,%r12d
a1a9(2): jnz 0xffffffd0(%rip)
a1ab(6): mov $0x1,%r12d
a1b1(2): jmp 0xffffffb3(%rip)
a1b3(5): nop 0x0(%rax,%rax,1)
a1b8(3): test %r15,%r15
a1bb(6): jz 0x495(%rip)
a1c1(4): movzx (%rcx),%r13d
a1c5(5): mov %rcx,0x8(%rsp)
a1ca(6): mov $0x4,%r12d
a1d0(3): test %r13b,%r13b
a1d3(2): jz 0xffffffa6(%rip)
a1d5(4): movsx %r13b,%esi
a1d9(3): mov %r15,%rdi
a1dc(5): call 0xffff7b04(%rip)
a1e1(3): test %rax,%rax
a1e4(5): mov 0x8(%rsp),%rcx
a1e9(2): jz 0xffffff90(%rip)
a1eb(5): mov $0x1,%ebp
a1f0(3): xor %r12d,%r12d
a1f3(4): movsx %r13b,%esi
a1f7(3): mov %r15,%rdi
a1fa(5): mov %rcx,0x8(%rsp)
a1ff(5): call 0xffff7ae1(%rip)
a204(3): test %rax,%rax
a207(5): mov 0x8(%rsp),%rcx
a20c(2): jz 0x5c(%rip)
a20e(4): lea 0xffffffbb(%r13),%eax
a212(2): cmp $0x2f,%al
a214(2): jnbe 0x64(%rip)
a216(a): mov $0x142129060940101,%rdx
a220(4): bt %rax,%rdx
a224(2): jnb 0x54(%rip)
a226(5): mov $0x30,%esi
a22b(3): mov %r15,%rdi
a22e(5): mov %rcx,0x8(%rsp)
a233(5): call 0xffff7aad(%rip)
a238(3): test %rax,%rax
a23b(5): mov 0x8(%rsp),%rcx
a240(2): jz 0x38(%rip)
a242(4): movzx 0x1(%rcx),%eax
a246(2): cmp $0x44,%al
a248(2): jz 0xe(%rip)
a24a(2): cmp $0x69,%al
a24c(6): jz 0x4ec(%rip)
a252(2): cmp $0x42,%al
a254(2): jnz 0x24(%rip)
a256(5): mov $0x2,%edi
a25b(5): mov $0x3e8,%eax
a260(2): jmp 0x22(%rip)
a262(6): nop 0x0(%rax,%rax,1)
a268(3): mov %rbp,(%r14)
a26b(4): or $0x2,%r12d
a26f(5): jmp 0xffffff0a(%rip)
a274(4): nop 0x0(%rax)
a278(5): mov $0x1,%edi
a27d(5): mov $0x400,%eax
a282(4): sub $0x42,%r13d
a286(4): cmp $0x35,%r13b
a28a(2): jnbe 0xffffffde(%rip)
a28c(7): lea 0x40b5(%rip),%rsi
a293(4): movzx %r13b,%r13d
a297(4): movsxd 0x0(%rsi,%r13,4),%rdx
a29b(3): add %rsi,%rdx
a29e(2): jmp %rdx
a2a0(a): mov $0x-9223372036854775808,%r8
a2aa(3): movsxd %eax,%rsi
a2ad(3): mov %r8,%rax
a2b0(2): cdq %rax
a2b2(3): idiv %rsi,%rax
a2b5(3): cmp %rax,%rbp
a2b8(3): mov %rax,%r9
a2bb(6): jl 0x4aa(%rip)
a2c1(a): mov $0x9223372036854775807,%r10
a2cb(3): mov %r10,%rax
a2ce(2): cdq %rax
a2d0(3): idiv %rsi,%rax
a2d3(3): cmp %rax,%rbp
a2d6(6): jnle 0x49c(%rip)
a2dc(4): imul %rsi,%rbp
a2e0(3): cmp %rbp,%r9
a2e3(6): jnle 0x482(%rip)
a2e9(3): cmp %rbp,%rax
a2ec(6): jl 0x486(%rip)
a2f2(4): imul %rsi,%rbp
a2f6(2): xor %eax,%eax
a2f8(3): or %eax,%r12d
a2fb(5): nop 0x0(%rax,%rax,1)
a300(3): movsxd %edi,%rax
a303(3): add %rax,%rcx
a306(3): mov %r12d,%eax
a309(3): or $0x2,%eax
a30c(3): mov %rcx,(%rbx)
a30f(3): cmp $0x0,(%rcx)
a312(4): cmovne %eax,%r12d
a316(5): jmp 0xfffffe60(%rip)
a31b(5): nop 0x0(%rax,%rax,1)
a320(a): mov $0x-4611686018427387904,%rax
a32a(3): cmp %rax,%rbp
a32d(6): jl 0x333(%rip)
a333(a): mov $0x4611686018427387903,%rax
a33d(3): cmp %rax,%rbp
a340(6): jnle 0x3e0(%rip)
a346(3): add %rbp,%rbp
a349(2): jmp 0xffffffb7(%rip)
a34b(5): nop 0x0(%rax,%rax,1)
a350(a): mov $0x-18014398509481984,%rax
a35a(3): cmp %rax,%rbp
a35d(6): jl 0x303(%rip)
a363(a): mov $0x18014398509481983,%rax
a36d(3): cmp %rax,%rbp
a370(6): jnle 0x3b0(%rip)
a376(4): shl/sal $0x9,%rbp
a37a(2): jmp 0xffffff86(%rip)
a37c(4): nop 0x0(%rax)
a380(3): movsxd %eax,%rsi
a383(a): mov $0x-9223372036854775808,%rax
a38d(6): mov $0x7,%r8d
a393(2): cdq %rax
a395(3): xor %r11d,%r11d
a398(a): mov $0x9223372036854775807,%r9
a3a2(3): idiv %rsi,%rax
a3a5(3): mov %rax,%r10
a3a8(2): jmp 0x27(%rip)
a3aa(6): nop 0x0(%rax,%rax,1)
a3b0(3): mov %r9,%rax
a3b3(2): cdq %rax
a3b5(3): idiv %rsi,%rax
a3b8(3): cmp %rbp,%rax
a3bb(6): jl 0x2ed(%rip)
a3c1(4): imul %rsi,%rbp
a3c5(4): sub $0x1,%r8d
a3c9(6): jz 0x127(%rip)
a3cf(3): cmp %rbp,%r10
a3d2(2): jle 0xffffffde(%rip)
a3d4(6): mov $0x1,%r11d
a3da(a): mov $0x-9223372036854775808,%rbp
a3e4(2): jmp 0xffffffe1(%rip)
a3e6(a): nop 0x0(%rax,%rax,1)
a3f0(3): movsxd %eax,%rsi
a3f3(a): mov $0x-9223372036854775808,%rax
a3fd(6): mov $0x8,%r8d
a403(2): cdq %rax
a405(3): xor %r11d,%r11d
a408(a): mov $0x9223372036854775807,%r9
a412(3): idiv %rsi,%rax
a415(3): mov %rax,%r10
a418(2): jmp 0x27(%rip)
a41a(6): nop 0x0(%rax,%rax,1)
a420(3): mov %r9,%rax
a423(2): cdq %rax
a425(3): idiv %rsi,%rax
a428(3): cmp %rbp,%rax
a42b(6): jl 0x24d(%rip)
a431(4): imul %rsi,%rbp
a435(4): sub $0x1,%r8d
a439(6): jz 0xb7(%rip)
a43f(3): cmp %rbp,%r10
a442(2): jle 0xffffffde(%rip)
a444(6): mov $0x1,%r11d
a44a(a): mov $0x-9223372036854775808,%rbp
a454(2): jmp 0xffffffe1(%rip)
a456(a): nop 0x0(%rax,%rax,1)
a460(a): mov $0x-9223372036854775808,%r8
a46a(3): movsxd %eax,%rsi
a46d(3): mov %r8,%rax
a470(2): cdq %rax
a472(3): idiv %rsi,%rax
a475(3): cmp %rax,%rbp
a478(6): jl 0x1e8(%rip)
a47e(4): sub $0x1,%r8
a482(3): mov %r8,%rax
a485(2): cdq %rax
a487(3): idiv %rsi,%rax
a48a(3): cmp %rax,%rbp
a48d(6): jnle 0x293(%rip)
a493(4): imul %rsi,%rbp
a497(5): jmp 0xfffffe69(%rip)
a49c(4): nop 0x0(%rax)
a4a0(3): movsxd %eax,%rsi
a4a3(a): mov $0x-9223372036854775808,%rax
a4ad(6): mov $0x3,%r8d
a4b3(2): cdq %rax
a4b5(3): xor %r11d,%r11d
a4b8(a): mov $0x9223372036854775807,%r9
a4c2(3): idiv %rsi,%rax
a4c5(3): mov %rax,%r10
a4c8(3): cmp %rbp,%r10
a4cb(6): jnle 0x1f5(%rip)
a4d1(3): mov %r9,%rax
a4d4(2): cdq %rax
a4d6(3): idiv %rsi,%rax
a4d9(3): cmp %rbp,%rax
a4dc(6): jl 0x274(%rip)
a4e2(4): imul %rsi,%rbp
a4e6(4): sub $0x1,%r8d
a4ea(2): jnz 0xffffffde(%rip)
a4ec(4): nop 0x0(%rax)
a4f0(3): or %r11d,%r12d
a4f3(5): jmp 0xfffffe0d(%rip)
a4f8(8): nop 0x0(%rax,%rax,1)
a500(3): movsxd %eax,%rsi
a503(a): mov $0x-9223372036854775808,%rax
a50d(6): mov $0x6,%r8d
a513(2): cdq %rax
a515(3): xor %r11d,%r11d
a518(a): mov $0x9223372036854775807,%r9
a522(3): idiv %rsi,%rax
a525(3): mov %rax,%r10
a528(2): jmp 0x23(%rip)
a52a(6): nop 0x0(%rax,%rax,1)
a530(3): mov %r9,%rax
a533(2): cdq %rax
a535(3): idiv %rsi,%rax
a538(3): cmp %rbp,%rax
a53b(6): jl 0x19d(%rip)
a541(4): imul %rsi,%rbp
a545(4): sub $0x1,%r8d
a549(2): jz 0xffffffa7(%rip)
a54b(3): cmp %rbp,%r10
a54e(2): jle 0xffffffe2(%rip)
a550(6): mov $0x1,%r11d
a556(a): mov $0x-9223372036854775808,%rbp
a560(2): jmp 0xffffffe5(%rip)
a562(6): nop 0x0(%rax,%rax,1)
a568(3): movsxd %eax,%rsi
a56b(a): mov $0x-9223372036854775808,%rax
a575(6): mov $0x5,%r8d
a57b(2): cdq %rax
a57d(3): xor %r11d,%r11d
a580(a): mov $0x9223372036854775807,%r9
a58a(3): idiv %rsi,%rax
a58d(3): mov %rax,%r10
a590(2): jmp 0x27(%rip)
a592(6): nop 0x0(%rax,%rax,1)
a598(3): mov %r9,%rax
a59b(2): cdq %rax
a59d(3): idiv %rsi,%rax
a5a0(3): cmp %rbp,%rax
a5a3(6): jl 0x14d(%rip)
a5a9(4): imul %rsi,%rbp
a5ad(4): sub $0x1,%r8d
a5b1(6): jz 0xffffff3f(%rip)
a5b7(3): cmp %rbp,%r10
a5ba(2): jle 0xffffffde(%rip)
a5bc(6): mov $0x1,%r11d
a5c2(a): mov $0x-9223372036854775808,%rbp
a5cc(2): jmp 0xffffffe1(%rip)
a5ce(2): nop 
a5d0(a): mov $0x-9007199254740992,%rax
a5da(3): cmp %rax,%rbp
a5dd(6): jl 0x83(%rip)
a5e3(a): mov $0x9007199254740991,%rax
a5ed(3): cmp %rax,%rbp
a5f0(6): jnle 0x130(%rip)
a5f6(4): shl/sal $0xa,%rbp
a5fa(5): jmp 0xfffffd06(%rip)
a5ff(1): nop 
a600(3): movsxd %eax,%rsi
a603(a): mov $0x-9223372036854775808,%rax
a60d(6): mov $0x4,%r8d
a613(2): cdq %rax
a615(3): xor %r11d,%r11d
a618(a): mov $0x9223372036854775807,%r9
a622(3): idiv %rsi,%rax
a625(3): mov %rax,%r10
a628(3): cmp %rbp,%r10
a62b(2): jnle 0x65(%rip)
a62d(3): mov %r9,%rax
a630(2): cdq %rax
a632(3): idiv %rsi,%rax
a635(3): cmp %rbp,%rax
a638(6): jl 0xd0(%rip)
a63e(4): imul %rsi,%rbp
a642(4): sub $0x1,%r8d
a646(2): jnz 0xffffffe2(%rip)
a648(5): jmp 0xfffffea8(%rip)
a64d(3): nop (%rax)
a650(6): mov $0x4,%r12d
a656(5): jmp 0xfffffb23(%rip)
a65b(5): nop 0x0(%rax,%rax,1)
a660(6): mov $0x1,%r12d
a666(a): mov $0x-9223372036854775808,%rbp
a670(5): jmp 0xfffffc90(%rip)
a675(3): nop (%rax)
a678(6): mov $0x1,%r11d
a67e(a): mov $0x9223372036854775807,%rbp
a688(5): jmp 0xfffffdad(%rip)
a68d(3): nop (%rax)
a690(6): mov $0x1,%r11d
a696(a): mov $0x-9223372036854775808,%rbp
a6a0(2): jmp 0xffffffa2(%rip)
a6a2(6): nop 0x0(%rax,%rax,1)
a6a8(6): mov $0x1,%r11d
a6ae(a): mov $0x9223372036854775807,%rbp
a6b8(5): jmp 0xfffffd0d(%rip)
a6bd(3): nop (%rax)
a6c0(6): mov $0x1,%r11d
a6c6(a): mov $0x-9223372036854775808,%rbp
a6d0(5): jmp 0xfffffe16(%rip)
a6d5(3): nop (%rax)
a6d8(6): mov $0x1,%r11d
a6de(a): mov $0x9223372036854775807,%rbp
a6e8(5): jmp 0xfffffe5d(%rip)
a6ed(3): nop (%rax)
a6f0(6): mov $0x1,%r11d
a6f6(a): mov $0x9223372036854775807,%rbp
a700(5): jmp 0xfffffead(%rip)
a705(3): nop (%rax)
a708(6): mov $0x1,%r11d
a70e(a): mov $0x9223372036854775807,%rbp
a718(5): jmp 0xffffff2a(%rip)
a71d(3): nop (%rax)
a720(6): mov $0x1,%r12d
a726(a): mov $0x9223372036854775807,%rbp
a730(5): jmp 0xfffffbd0(%rip)
a735(3): nop (%rax)
a738(2): xor %edi,%edi
a73a(4): cmp $0x42,0x2(%rcx)
a73e(5): mov $0x400,%eax
a743(4): setz %dil
a747(4): lea 0x1(%rdi,%rdi,1),%edi
a74b(5): jmp 0xfffffb37(%rip)
a750(6): mov $0x1,%r11d
a756(a): mov $0x9223372036854775807,%rbp
a760(5): jmp 0xfffffd86(%rip)
a765(5): mov $0x1,%eax
a76a(3): mov %r8,%rbp
a76d(5): jmp 0xfffffb8b(%rip)
a772(5): mov $0x1,%eax
a777(3): mov %r10,%rbp
a77a(5): jmp 0xfffffb7e(%rip)
a77f(7): lea 0x3c9a(%rip),%rcx
a786(7): lea 0x3b73(%rip),%rsi
a78d(7): lea 0x3b8c(%rip),%rdi
a794(5): mov $0x54,%edx
a799(5): call 0xffff7597(%rip)
a79e(5): call 0xffff7512(%rip)

"xstrtol" :
a7b0(2): push %r15
a7b2(2): push %r14
a7b4(2): push %r13
a7b6(2): push %r12
a7b8(1): push %rbp
a7b9(1): push %rbx
a7ba(4): sub $0x28,%rsp
a7be(9): mov $0x28,%rax
a7c7(5): mov %rax,0x18(%rsp)
a7cc(2): xor %eax,%eax
a7ce(3): cmp $0x24,%edx
a7d1(6): jnbe 0x66e(%rip)
a7d7(5): lea 0x10(%rsp),%rax
a7dc(3): test %rsi,%rsi
a7df(3): mov %rsi,%rbx
a7e2(3): mov %rdi,%r12
a7e5(2): mov %edx,%ebp
a7e7(3): mov %rcx,%r14
a7ea(4): cmove %rax,%rbx
a7ee(3): mov %r8,%r15
a7f1(5): call 0xffff73bf(%rip)
a7f6(2): mov %ebp,%edx
a7f8(6): mov $0x0,(%rax)
a7fe(3): mov %rbx,%rsi
a801(3): mov %r12,%rdi
a804(3): mov %rax,%r13
a807(5): call 0xffff75b9(%rip)
a80c(3): mov (%rbx),%rcx
a80f(3): mov %rax,%rbp
a812(3): cmp %r12,%rcx
a815(2): jz 0x63(%rip)
a817(4): mov 0x0(%r13),%eax
a81b(2): test %eax,%eax
a81d(2): jnz 0x43(%rip)
a81f(3): xor %r12d,%r12d
a822(3): test %r15,%r15
a825(2): jz 0xf(%rip)
a827(4): movzx (%rcx),%r13d
a82b(3): test %r13b,%r13b
a82e(6): jnz 0x85(%rip)
a834(3): mov %rbp,(%r14)
a837(5): mov 0x18(%rsp),%rdi
a83c(9): xor $0x28,%rdi
a845(3): mov %r12d,%eax
a848(6): jnz 0x616(%rip)
a84e(4): add $0x28,%rsp
a852(1): pop %rbx
a853(1): pop %rbp
a854(2): pop %r12
a856(2): pop %r13
a858(2): pop %r14
a85a(2): pop %r15
a85c(1): ret near (%rsp)
a85d(3): nop (%rax)
a860(3): cmp $0x22,%eax
a863(6): mov $0x4,%r12d
a869(2): jnz 0xffffffce(%rip)
a86b(6): mov $0x1,%r12d
a871(2): jmp 0xffffffb1(%rip)
a873(5): nop 0x0(%rax,%rax,1)
a878(3): test %r15,%r15
a87b(6): jz 0x495(%rip)
a881(4): movzx (%rcx),%r13d
a885(5): mov %rcx,0x8(%rsp)
a88a(6): mov $0x4,%r12d
a890(3): test %r13b,%r13b
a893(2): jz 0xffffffa4(%rip)
a895(4): movsx %r13b,%esi
a899(3): mov %r15,%rdi
a89c(5): call 0xffff7444(%rip)
a8a1(3): test %rax,%rax
a8a4(5): mov 0x8(%rsp),%rcx
a8a9(2): jz 0xffffff8e(%rip)
a8ab(5): mov $0x1,%ebp
a8b0(3): xor %r12d,%r12d
a8b3(4): movsx %r13b,%esi
a8b7(3): mov %r15,%rdi
a8ba(5): mov %rcx,0x8(%rsp)
a8bf(5): call 0xffff7421(%rip)
a8c4(3): test %rax,%rax
a8c7(5): mov 0x8(%rsp),%rcx
a8cc(2): jz 0x5c(%rip)
a8ce(4): lea 0xffffffbb(%r13),%eax
a8d2(2): cmp $0x2f,%al
a8d4(2): jnbe 0x64(%rip)
a8d6(a): mov $0x142129060940101,%rdx
a8e0(4): bt %rax,%rdx
a8e4(2): jnb 0x54(%rip)
a8e6(5): mov $0x30,%esi
a8eb(3): mov %r15,%rdi
a8ee(5): mov %rcx,0x8(%rsp)
a8f3(5): call 0xffff73ed(%rip)
a8f8(3): test %rax,%rax
a8fb(5): mov 0x8(%rsp),%rcx
a900(2): jz 0x38(%rip)
a902(4): movzx 0x1(%rcx),%eax
a906(2): cmp $0x44,%al
a908(2): jz 0xe(%rip)
a90a(2): cmp $0x69,%al
a90c(6): jz 0x4ec(%rip)
a912(2): cmp $0x42,%al
a914(2): jnz 0x24(%rip)
a916(5): mov $0x2,%edi
a91b(5): mov $0x3e8,%eax
a920(2): jmp 0x22(%rip)
a922(6): nop 0x0(%rax,%rax,1)
a928(3): mov %rbp,(%r14)
a92b(4): or $0x2,%r12d
a92f(5): jmp 0xffffff08(%rip)
a934(4): nop 0x0(%rax)
a938(5): mov $0x1,%edi
a93d(5): mov $0x400,%eax
a942(4): sub $0x42,%r13d
a946(4): cmp $0x35,%r13b
a94a(2): jnbe 0xffffffde(%rip)
a94c(7): lea 0x3add(%rip),%rsi
a953(4): movzx %r13b,%r13d
a957(4): movsxd 0x0(%rsi,%r13,4),%rdx
a95b(3): add %rsi,%rdx
a95e(2): jmp %rdx
a960(a): mov $0x-9223372036854775808,%r8
a96a(3): movsxd %eax,%rsi
a96d(3): mov %r8,%rax
a970(2): cdq %rax
a972(3): idiv %rsi,%rax
a975(3): cmp %rax,%rbp
a978(3): mov %rax,%r9
a97b(6): jl 0x4aa(%rip)
a981(a): mov $0x9223372036854775807,%r10
a98b(3): mov %r10,%rax
a98e(2): cdq %rax
a990(3): idiv %rsi,%rax
a993(3): cmp %rax,%rbp
a996(6): jnle 0x49c(%rip)
a99c(4): imul %rsi,%rbp
a9a0(3): cmp %rbp,%r9
a9a3(6): jnle 0x482(%rip)
a9a9(3): cmp %rbp,%rax
a9ac(6): jl 0x486(%rip)
a9b2(4): imul %rsi,%rbp
a9b6(2): xor %eax,%eax
a9b8(3): or %eax,%r12d
a9bb(5): nop 0x0(%rax,%rax,1)
a9c0(3): movsxd %edi,%rax
a9c3(3): add %rax,%rcx
a9c6(3): mov %r12d,%eax
a9c9(3): or $0x2,%eax
a9cc(3): mov %rcx,(%rbx)
a9cf(3): cmp $0x0,(%rcx)
a9d2(4): cmovne %eax,%r12d
a9d6(5): jmp 0xfffffe5e(%rip)
a9db(5): nop 0x0(%rax,%rax,1)
a9e0(a): mov $0x-4611686018427387904,%rax
a9ea(3): cmp %rax,%rbp
a9ed(6): jl 0x333(%rip)
a9f3(a): mov $0x4611686018427387903,%rax
a9fd(3): cmp %rax,%rbp
aa00(6): jnle 0x3e0(%rip)
aa06(3): add %rbp,%rbp
aa09(2): jmp 0xffffffb7(%rip)
aa0b(5): nop 0x0(%rax,%rax,1)
aa10(a): mov $0x-18014398509481984,%rax
aa1a(3): cmp %rax,%rbp
aa1d(6): jl 0x303(%rip)
aa23(a): mov $0x18014398509481983,%rax
aa2d(3): cmp %rax,%rbp
aa30(6): jnle 0x3b0(%rip)
aa36(4): shl/sal $0x9,%rbp
aa3a(2): jmp 0xffffff86(%rip)
aa3c(4): nop 0x0(%rax)
aa40(3): movsxd %eax,%rsi
aa43(a): mov $0x-9223372036854775808,%rax
aa4d(6): mov $0x7,%r8d
aa53(2): cdq %rax
aa55(3): xor %r11d,%r11d
aa58(a): mov $0x9223372036854775807,%r9
aa62(3): idiv %rsi,%rax
aa65(3): mov %rax,%r10
aa68(2): jmp 0x27(%rip)
aa6a(6): nop 0x0(%rax,%rax,1)
aa70(3): mov %r9,%rax
aa73(2): cdq %rax
aa75(3): idiv %rsi,%rax
aa78(3): cmp %rbp,%rax
aa7b(6): jl 0x2ed(%rip)
aa81(4): imul %rsi,%rbp
aa85(4): sub $0x1,%r8d
aa89(6): jz 0x127(%rip)
aa8f(3): cmp %rbp,%r10
aa92(2): jle 0xffffffde(%rip)
aa94(6): mov $0x1,%r11d
aa9a(a): mov $0x-9223372036854775808,%rbp
aaa4(2): jmp 0xffffffe1(%rip)
aaa6(a): nop 0x0(%rax,%rax,1)
aab0(3): movsxd %eax,%rsi
aab3(a): mov $0x-9223372036854775808,%rax
aabd(6): mov $0x8,%r8d
aac3(2): cdq %rax
aac5(3): xor %r11d,%r11d
aac8(a): mov $0x9223372036854775807,%r9
aad2(3): idiv %rsi,%rax
aad5(3): mov %rax,%r10
aad8(2): jmp 0x27(%rip)
aada(6): nop 0x0(%rax,%rax,1)
aae0(3): mov %r9,%rax
aae3(2): cdq %rax
aae5(3): idiv %rsi,%rax
aae8(3): cmp %rbp,%rax
aaeb(6): jl 0x24d(%rip)
aaf1(4): imul %rsi,%rbp
aaf5(4): sub $0x1,%r8d
aaf9(6): jz 0xb7(%rip)
aaff(3): cmp %rbp,%r10
ab02(2): jle 0xffffffde(%rip)
ab04(6): mov $0x1,%r11d
ab0a(a): mov $0x-9223372036854775808,%rbp
ab14(2): jmp 0xffffffe1(%rip)
ab16(a): nop 0x0(%rax,%rax,1)
ab20(a): mov $0x-9223372036854775808,%r8
ab2a(3): movsxd %eax,%rsi
ab2d(3): mov %r8,%rax
ab30(2): cdq %rax
ab32(3): idiv %rsi,%rax
ab35(3): cmp %rax,%rbp
ab38(6): jl 0x1e8(%rip)
ab3e(4): sub $0x1,%r8
ab42(3): mov %r8,%rax
ab45(2): cdq %rax
ab47(3): idiv %rsi,%rax
ab4a(3): cmp %rax,%rbp
ab4d(6): jnle 0x293(%rip)
ab53(4): imul %rsi,%rbp
ab57(5): jmp 0xfffffe69(%rip)
ab5c(4): nop 0x0(%rax)
ab60(3): movsxd %eax,%rsi
ab63(a): mov $0x-9223372036854775808,%rax
ab6d(6): mov $0x3,%r8d
ab73(2): cdq %rax
ab75(3): xor %r11d,%r11d
ab78(a): mov $0x9223372036854775807,%r9
ab82(3): idiv %rsi,%rax
ab85(3): mov %rax,%r10
ab88(3): cmp %rbp,%r10
ab8b(6): jnle 0x1f5(%rip)
ab91(3): mov %r9,%rax
ab94(2): cdq %rax
ab96(3): idiv %rsi,%rax
ab99(3): cmp %rbp,%rax
ab9c(6): jl 0x274(%rip)
aba2(4): imul %rsi,%rbp
aba6(4): sub $0x1,%r8d
abaa(2): jnz 0xffffffde(%rip)
abac(4): nop 0x0(%rax)
abb0(3): or %r11d,%r12d
abb3(5): jmp 0xfffffe0d(%rip)
abb8(8): nop 0x0(%rax,%rax,1)
abc0(3): movsxd %eax,%rsi
abc3(a): mov $0x-9223372036854775808,%rax
abcd(6): mov $0x6,%r8d
abd3(2): cdq %rax
abd5(3): xor %r11d,%r11d
abd8(a): mov $0x9223372036854775807,%r9
abe2(3): idiv %rsi,%rax
abe5(3): mov %rax,%r10
abe8(2): jmp 0x23(%rip)
abea(6): nop 0x0(%rax,%rax,1)
abf0(3): mov %r9,%rax
abf3(2): cdq %rax
abf5(3): idiv %rsi,%rax
abf8(3): cmp %rbp,%rax
abfb(6): jl 0x19d(%rip)
ac01(4): imul %rsi,%rbp
ac05(4): sub $0x1,%r8d
ac09(2): jz 0xffffffa7(%rip)
ac0b(3): cmp %rbp,%r10
ac0e(2): jle 0xffffffe2(%rip)
ac10(6): mov $0x1,%r11d
ac16(a): mov $0x-9223372036854775808,%rbp
ac20(2): jmp 0xffffffe5(%rip)
ac22(6): nop 0x0(%rax,%rax,1)
ac28(3): movsxd %eax,%rsi
ac2b(a): mov $0x-9223372036854775808,%rax
ac35(6): mov $0x5,%r8d
ac3b(2): cdq %rax
ac3d(3): xor %r11d,%r11d
ac40(a): mov $0x9223372036854775807,%r9
ac4a(3): idiv %rsi,%rax
ac4d(3): mov %rax,%r10
ac50(2): jmp 0x27(%rip)
ac52(6): nop 0x0(%rax,%rax,1)
ac58(3): mov %r9,%rax
ac5b(2): cdq %rax
ac5d(3): idiv %rsi,%rax
ac60(3): cmp %rbp,%rax
ac63(6): jl 0x14d(%rip)
ac69(4): imul %rsi,%rbp
ac6d(4): sub $0x1,%r8d
ac71(6): jz 0xffffff3f(%rip)
ac77(3): cmp %rbp,%r10
ac7a(2): jle 0xffffffde(%rip)
ac7c(6): mov $0x1,%r11d
ac82(a): mov $0x-9223372036854775808,%rbp
ac8c(2): jmp 0xffffffe1(%rip)
ac8e(2): nop 
ac90(a): mov $0x-9007199254740992,%rax
ac9a(3): cmp %rax,%rbp
ac9d(6): jl 0x83(%rip)
aca3(a): mov $0x9007199254740991,%rax
acad(3): cmp %rax,%rbp
acb0(6): jnle 0x130(%rip)
acb6(4): shl/sal $0xa,%rbp
acba(5): jmp 0xfffffd06(%rip)
acbf(1): nop 
acc0(3): movsxd %eax,%rsi
acc3(a): mov $0x-9223372036854775808,%rax
accd(6): mov $0x4,%r8d
acd3(2): cdq %rax
acd5(3): xor %r11d,%r11d
acd8(a): mov $0x9223372036854775807,%r9
ace2(3): idiv %rsi,%rax
ace5(3): mov %rax,%r10
ace8(3): cmp %rbp,%r10
aceb(2): jnle 0x65(%rip)
aced(3): mov %r9,%rax
acf0(2): cdq %rax
acf2(3): idiv %rsi,%rax
acf5(3): cmp %rbp,%rax
acf8(6): jl 0xd0(%rip)
acfe(4): imul %rsi,%rbp
ad02(4): sub $0x1,%r8d
ad06(2): jnz 0xffffffe2(%rip)
ad08(5): jmp 0xfffffea8(%rip)
ad0d(3): nop (%rax)
ad10(6): mov $0x4,%r12d
ad16(5): jmp 0xfffffb21(%rip)
ad1b(5): nop 0x0(%rax,%rax,1)
ad20(6): mov $0x1,%r12d
ad26(a): mov $0x-9223372036854775808,%rbp
ad30(5): jmp 0xfffffc90(%rip)
ad35(3): nop (%rax)
ad38(6): mov $0x1,%r11d
ad3e(a): mov $0x9223372036854775807,%rbp
ad48(5): jmp 0xfffffdad(%rip)
ad4d(3): nop (%rax)
ad50(6): mov $0x1,%r11d
ad56(a): mov $0x-9223372036854775808,%rbp
ad60(2): jmp 0xffffffa2(%rip)
ad62(6): nop 0x0(%rax,%rax,1)
ad68(6): mov $0x1,%r11d
ad6e(a): mov $0x9223372036854775807,%rbp
ad78(5): jmp 0xfffffd0d(%rip)
ad7d(3): nop (%rax)
ad80(6): mov $0x1,%r11d
ad86(a): mov $0x-9223372036854775808,%rbp
ad90(5): jmp 0xfffffe16(%rip)
ad95(3): nop (%rax)
ad98(6): mov $0x1,%r11d
ad9e(a): mov $0x9223372036854775807,%rbp
ada8(5): jmp 0xfffffe5d(%rip)
adad(3): nop (%rax)
adb0(6): mov $0x1,%r11d
adb6(a): mov $0x9223372036854775807,%rbp
adc0(5): jmp 0xfffffead(%rip)
adc5(3): nop (%rax)
adc8(6): mov $0x1,%r11d
adce(a): mov $0x9223372036854775807,%rbp
add8(5): jmp 0xffffff2a(%rip)
addd(3): nop (%rax)
ade0(6): mov $0x1,%r12d
ade6(a): mov $0x9223372036854775807,%rbp
adf0(5): jmp 0xfffffbd0(%rip)
adf5(3): nop (%rax)
adf8(2): xor %edi,%edi
adfa(4): cmp $0x42,0x2(%rcx)
adfe(5): mov $0x400,%eax
ae03(4): setz %dil
ae07(4): lea 0x1(%rdi,%rdi,1),%edi
ae0b(5): jmp 0xfffffb37(%rip)
ae10(6): mov $0x1,%r11d
ae16(a): mov $0x9223372036854775807,%rbp
ae20(5): jmp 0xfffffd86(%rip)
ae25(5): mov $0x1,%eax
ae2a(3): mov %r8,%rbp
ae2d(5): jmp 0xfffffb8b(%rip)
ae32(5): mov $0x1,%eax
ae37(3): mov %r10,%rbp
ae3a(5): jmp 0xfffffb7e(%rip)
ae3f(7): lea 0x36c2(%rip),%rcx
ae46(7): lea 0x34b3(%rip),%rsi
ae4d(7): lea 0x34cc(%rip),%rdi
ae54(5): mov $0x54,%edx
ae59(5): call 0xffff6ed7(%rip)
ae5e(5): call 0xffff6e52(%rip)

"xstrtol_fatal" :
ae70(2): push %r13
ae72(2): push %r12
ae74(3): mov %esi,%r10d
ae77(1): push %rbp
ae78(1): push %rbx
ae79(3): mov %r8,%r12
ae7c(4): sub $0x18,%rsp
ae80(9): mov $0x28,%rax
ae89(5): mov %rax,0x8(%rsp)
ae8e(2): xor %eax,%eax
ae90(3): cmp $0x3,%edi
ae93(6): mov 0x2061c7(%rip),%ebp
ae99(2): jnbe 0x5b(%rip)
ae9b(3): cmp $0x2,%edi
ae9e(2): jnb 0x4d(%rip)
aea0(3): sub $0x1,%edi
aea3(7): lea 0x3681(%rip),%rsi
aeaa(2): jnz 0x3c(%rip)
aeac(3): test %r10d,%r10d
aeaf(3): movsxd %r10d,%rax
aeb2(2): js 0x50(%rip)
aeb4(4): shl/sal $0x5,%rax
aeb8(7): lea 0x3689(%rip),%rbx
aebf(4): mov 0x0(%rcx,%rax,1),%r13
aec3(5): mov $0x5,%edx
aec8(2): xor %edi,%edi
aeca(5): call 0xffff6db6(%rip)
aecf(3): mov %r12,%r9
aed2(3): mov %rax,%rdx
aed5(3): mov %r13,%r8
aed8(3): mov %rbx,%rcx
aedb(2): xor %esi,%esi
aedd(2): mov %ebp,%edi
aedf(2): xor %eax,%eax
aee1(5): call 0xffff6fff(%rip)
aee6(5): call 0xffff6cba(%rip)
aeeb(7): lea 0x365e(%rip),%rsi
aef2(2): jmp 0xffffffba(%rip)
aef4(3): cmp $0x4,%edi
aef7(7): lea 0x3612(%rip),%rsi
aefe(2): jz 0xffffffae(%rip)
af00(2): jmp 0xffffffe6(%rip)
af02(7): lea 0x363f(%rip),%rbx
af09(4): mov %dl,0x6(%rsp)
af0d(5): mov $0x0,0x7(%rsp)
af12(5): lea 0x6(%rsp),%r13
af17(3): sub %rax,%rbx
af1a(2): jmp 0xffffffa9(%rip)

"xstrtoumax" :
af20(2): push %r15
af22(2): push %r14
af24(2): push %r13
af26(2): push %r12
af28(1): push %rbp
af29(1): push %rbx
af2a(4): sub $0x28,%rsp
af2e(9): mov $0x28,%rax
af37(5): mov %rax,0x18(%rsp)
af3c(2): xor %eax,%eax
af3e(3): cmp $0x24,%edx
af41(6): jnbe 0x364(%rip)
af47(5): lea 0x10(%rsp),%rax
af4c(3): mov %rsi,%r15
af4f(3): test %rsi,%rsi
af52(3): mov %rdi,%rbp
af55(4): mov %edx,0x8(%rsp)
af59(3): mov %rcx,%r14
af5c(3): mov %r8,%r13
af5f(4): cmove %rax,%r15
af63(5): call 0xffff6c4d(%rip)
af68(6): mov $0x0,(%rax)
af6e(3): mov %rax,%r12
af71(4): movzx 0x0(%rbp),%ebx
af75(5): call 0xffff701b(%rip)
af7a(4): mov 0x8(%rsp),%edx
af7e(3): mov (%rax),%rsi
af81(3): mov %rbp,%rax
af84(2): jmp 0x13(%rip)
af86(a): nop 0x0(%rax,%rax,1)
af90(4): add $0x1,%rax
af94(3): movzx (%rax),%ebx
af97(3): movzx %bl,%ecx
af9a(5): test $0x20,0x1(%rsi,%rcx,2)
af9f(2): jnz 0xfffffff1(%rip)
afa1(3): cmp $0x2d,%bl
afa4(2): jz 0x54(%rip)
afa6(2): xor %ecx,%ecx
afa8(3): mov %r15,%rsi
afab(3): mov %rbp,%rdi
afae(5): call 0xffff6d92(%rip)
afb3(3): mov (%r15),%rcx
afb6(3): mov %rax,%rbx
afb9(3): cmp %rbp,%rcx
afbc(2): jz 0x2c(%rip)
afbe(4): mov (%r12),%eax
afc2(2): test %eax,%eax
afc4(2): jz 0x64(%rip)
afc6(3): cmp $0x22,%eax
afc9(5): mov $0x1,%ebp
afce(2): jnz 0x2a(%rip)
afd0(3): test %r13,%r13
afd3(2): jz 0xb(%rip)
afd5(4): movzx (%rcx),%r12d
afd9(3): test %r12b,%r12b
afdc(2): jnz 0x7b(%rip)
afde(3): mov %rbx,(%r14)
afe1(2): jmp 0x1c(%rip)
afe3(5): nop 0x0(%rax,%rax,1)
afe8(3): test %r13,%r13
afeb(5): mov %rcx,0x8(%rsp)
aff0(2): jnz 0x40(%rip)
aff2(6): nop 0x0(%rax,%rax,1)
aff8(5): mov $0x4,%ebp
affd(5): mov 0x18(%rsp),%rdi
b002(9): xor $0x28,%rdi
b00b(2): mov %ebp,%eax
b00d(6): jnz 0x293(%rip)
b013(4): add $0x28,%rsp
b017(1): pop %rbx
b018(1): pop %rbp
b019(2): pop %r12
b01b(2): pop %r13
b01d(2): pop %r14
b01f(2): pop %r15
b021(1): ret near (%rsp)
b022(6): nop 0x0(%rax,%rax,1)
b028(2): xor %ebp,%ebp
b02a(2): jmp 0xffffffa6(%rip)
b02c(4): nop 0x0(%rax)
b030(5): movzx 0x0(%rbp),%r12d
b035(3): test %r12b,%r12b
b038(2): jz 0xffffffc0(%rip)
b03a(4): movsx %r12b,%esi
b03e(3): mov %r13,%rdi
b041(2): xor %ebp,%ebp
b043(5): call 0xffff6c9d(%rip)
b048(3): test %rax,%rax
b04b(5): mov $0x1,%ebx
b050(5): mov 0x8(%rsp),%rcx
b055(2): jz 0xffffffa3(%rip)
b057(4): movsx %r12b,%esi
b05b(3): mov %r13,%rdi
b05e(5): mov %rcx,0x8(%rsp)
b063(5): call 0xffff6c7d(%rip)
b068(3): test %rax,%rax
b06b(5): mov 0x8(%rsp),%rcx
b070(6): jz 0xcc(%rip)
b076(5): lea 0xffffffbb(%r12),%eax
b07b(2): cmp $0x2f,%al
b07d(2): jnbe 0x53(%rip)
b07f(a): mov $0x142129060940101,%rdx
b089(4): bt %rax,%rdx
b08d(2): jnb 0x43(%rip)
b08f(5): mov $0x30,%esi
b094(3): mov %r13,%rdi
b097(5): mov %rcx,0x8(%rsp)
b09c(5): call 0xffff6c44(%rip)
b0a1(3): test %rax,%rax
b0a4(5): mov 0x8(%rsp),%rcx
b0a9(2): jz 0x27(%rip)
b0ab(4): movzx 0x1(%rcx),%eax
b0af(2): cmp $0x44,%al
b0b1(2): jz 0xe(%rip)
b0b3(2): cmp $0x69,%al
b0b5(6): jz 0x1d3(%rip)
b0bb(2): cmp $0x42,%al
b0bd(2): jnz 0x13(%rip)
b0bf(5): mov $0x2,%edi
b0c4(5): mov $0x3e8,%esi
b0c9(2): jmp 0x11(%rip)
b0cb(5): nop 0x0(%rax,%rax,1)
b0d0(5): mov $0x1,%edi
b0d5(5): mov $0x400,%esi
b0da(4): sub $0x42,%r12d
b0de(4): cmp $0x35,%r12b
b0e2(2): jnbe 0x5a(%rip)
b0e4(7): lea 0x348d(%rip),%rdx
b0eb(4): movzx %r12b,%r12d
b0ef(4): movsxd 0x0(%rdx,%r12,4),%rax
b0f3(3): add %rdx,%rax
b0f6(2): jmp %rax
b0f8(3): mov %rbx,%rax
b0fb(3): mul %rax,%rsi,%rdx
b0fe(6): jo 0x1f3(%rip)
b104(3): xor %r8d,%r8d
b107(3): mul %rax,%rsi,%rdx
b10a(6): jo 0x1d8(%rip)
b110(3): mov %rax,%rbx
b113(3): or %r8d,%ebp
b116(a): nop 0x0(%rax,%rax,1)
b120(3): movsxd %edi,%rdi
b123(2): mov %ebp,%eax
b125(3): add %rdi,%rcx
b128(3): or $0x2,%eax
b12b(3): mov %rcx,(%r15)
b12e(3): cmp $0x0,(%rcx)
b131(3): mov %rbx,(%r14)
b134(3): cmovne %eax,%ebp
b137(5): jmp 0xfffffec6(%rip)
b13c(3): mov %rbx,(%r14)
b13f(3): or $0x2,%ebp
b142(5): jmp 0xfffffebb(%rip)
b147(5): mov $0x2,%edx
b14c(3): mov %rdx,%rax
b14f(3): mul %rax,%rbx,%rdx
b152(6): jo 0x9c(%rip)
b158(3): add %rbx,%rbx
b15b(2): jmp 0xffffffc5(%rip)
b15d(5): mov $0x200,%edx
b162(3): mov %rdx,%rax
b165(3): mul %rax,%rbx,%rdx
b168(6): jo 0x86(%rip)
b16e(4): shl/sal $0x9,%rbx
b172(2): jmp 0xffffffae(%rip)
b174(6): mov $0x7,%r8d
b17a(3): xor %r9d,%r9d
b17d(3): nop (%rax)
b180(3): mov %rbx,%rax
b183(3): mul %rax,%rsi,%rdx
b186(3): mov %rax,%rbx
b189(6): jo 0x195(%rip)
b18f(4): sub $0x1,%r8d
b193(2): jnz 0xffffffed(%rip)
b195(3): or %r9d,%ebp
b198(2): jmp 0xffffff88(%rip)
b19a(6): mov $0x8,%r8d
b1a0(3): xor %r9d,%r9d
b1a3(5): nop 0x0(%rax,%rax,1)
b1a8(3): mov %rbx,%rax
b1ab(3): mul %rax,%rsi,%rdx
b1ae(3): mov %rax,%rbx
b1b1(6): jo 0x14f(%rip)
b1b7(4): sub $0x1,%r8d
b1bb(2): jnz 0xffffffed(%rip)
b1bd(2): jmp 0xffffffd8(%rip)
b1bf(6): mov $0x4,%r8d
b1c5(3): xor %r9d,%r9d
b1c8(3): mov %rbx,%rax
b1cb(3): mul %rax,%rsi,%rdx
b1ce(3): mov %rax,%rbx
b1d1(6): jo 0x102(%rip)
b1d7(4): sub $0x1,%r8d
b1db(2): jnz 0xffffffed(%rip)
b1dd(2): jmp 0xffffffb8(%rip)
b1df(3): mov %rbx,%rax
b1e2(3): mul %rax,%rsi,%rdx
b1e5(3): mov %rax,%rbx
b1e8(6): jno 0xffffff38(%rip)
b1ee(5): mov $0x1,%ebp
b1f3(4): or $0xffffffff,%rbx
b1f7(5): jmp 0xffffff29(%rip)
b1fc(4): nop 0x0(%rax)
b200(6): mov $0x5,%r8d
b206(3): xor %r9d,%r9d
b209(3): mov %rbx,%rax
b20c(3): mul %rax,%rsi,%rdx
b20f(3): mov %rax,%rbx
b212(6): jo 0xfd(%rip)
b218(4): sub $0x1,%r8d
b21c(2): jnz 0xffffffed(%rip)
b21e(5): jmp 0xffffff77(%rip)
b223(6): mov $0x6,%r8d
b229(3): xor %r9d,%r9d
b22c(3): mov %rbx,%rax
b22f(3): mul %rax,%rsi,%rdx
b232(3): mov %rax,%rbx
b235(6): jo 0x8f(%rip)
b23b(4): sub $0x1,%r8d
b23f(2): jnz 0xffffffed(%rip)
b241(5): jmp 0xffffff54(%rip)
b246(5): mov $0x400,%edx
b24b(3): mov %rdx,%rax
b24e(3): mul %rax,%rbx,%rdx
b251(2): jo 0xffffff9d(%rip)
b253(4): shl/sal $0xa,%rbx
b257(5): jmp 0xfffffec9(%rip)
b25c(3): mov %rbx,%rax
b25f(3): mul %rax,%rsi,%rdx
b262(6): jo 0xcb(%rip)
b268(3): xor %r8d,%r8d
b26b(3): mul %rax,%rsi,%rdx
b26e(6): jno 0xfffffe99(%rip)
b274(6): mov $0x1,%r8d
b27a(4): or $0xffffffff,%rax
b27e(5): jmp 0xfffffe89(%rip)
b283(5): nop 0x0(%rax,%rax,1)
b288(2): xor %edi,%edi
b28a(4): cmp $0x42,0x2(%rcx)
b28e(5): mov $0x400,%esi
b293(4): setz %dil
b297(4): lea 0x1(%rdi,%rdi,1),%edi
b29b(5): jmp 0xfffffe3f(%rip)
b2a0(5): call 0xffff6a10(%rip)
b2a5(7): lea 0x33a4(%rip),%rcx
b2ac(7): lea 0x304d(%rip),%rsi
b2b3(7): lea 0x3066(%rip),%rdi
b2ba(5): mov $0x54,%edx
b2bf(5): call 0xffff6a71(%rip)
b2c4(6): mov $0x1,%r9d
b2ca(4): or $0xffffffff,%rbx
b2ce(5): jmp 0xffffff6d(%rip)
b2d3(6): mov $0x1,%r9d
b2d9(4): or $0xffffffff,%rbx
b2dd(5): jmp 0xfffffefa(%rip)
b2e2(6): mov $0x1,%r8d
b2e8(4): or $0xffffffff,%rbx
b2ec(5): jmp 0xfffffe27(%rip)
b2f1(4): or $0xffffffff,%rax
b2f5(6): mov $0x1,%r8d
b2fb(5): jmp 0xfffffe0c(%rip)
b300(6): mov $0x1,%r9d
b306(4): or $0xffffffff,%rbx
b30a(5): jmp 0xfffffead(%rip)
b30f(6): mov $0x1,%r9d
b315(4): or $0xffffffff,%rbx
b319(5): jmp 0xfffffeff(%rip)
b31e(6): mov $0x1,%r9d
b324(4): or $0xffffffff,%rbx
b328(5): jmp 0xfffffe67(%rip)
b32d(6): mov $0x1,%r8d
b333(4): or $0xffffffff,%rax
b337(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
b340(2): push %r12
b342(1): push %rbp
b343(1): push %rbx
b344(3): mov %rdi,%rbx
b347(5): call 0xffff6aa9(%rip)
b34c(2): test %eax,%eax
b34e(3): mov %rbx,%rdi
b351(2): js 0x56(%rip)
b353(5): call 0xffff6b1d(%rip)
b358(2): test %eax,%eax
b35a(2): jnz 0x2e(%rip)
b35c(3): mov %rbx,%rdi
b35f(5): call 0x2e1(%rip)
b364(2): test %eax,%eax
b366(2): jz 0x3e(%rip)
b368(5): call 0xffff6848(%rip)
b36d(3): mov (%rax),%r12d
b370(3): mov %rbx,%rdi
b373(3): mov %rax,%rbp
b376(5): call 0xffff68ea(%rip)
b37b(3): test %r12d,%r12d
b37e(2): jnz 0x32(%rip)
b380(1): pop %rbx
b381(1): pop %rbp
b382(2): pop %r12
b384(1): ret near (%rsp)
b385(3): nop (%rax)
b388(3): mov %rbx,%rdi
b38b(5): call 0xffff6a65(%rip)
b390(2): xor %esi,%esi
b392(5): mov $0x1,%edx
b397(2): mov %eax,%edi
b399(5): call 0xffff6987(%rip)
b39e(4): cmp $0xffffffff,%rax
b3a2(2): jnz 0xffffffba(%rip)
b3a4(3): mov %rbx,%rdi
b3a7(1): pop %rbx
b3a8(1): pop %rbp
b3a9(2): pop %r12
b3ab(5): jmp 0xffff68b5(%rip)
b3b0(4): mov %r12d,0x0(%rbp)
b3b4(5): mov $0xffffffff,%eax
b3b9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
b3c0(2): push %r12
b3c2(1): push %rbp
b3c3(2): mov %edi,%ebp
b3c5(1): push %rbx
b3c6(4): sub $0x50,%rsp
b3ca(9): mov $0x28,%rax
b3d3(5): mov %rax,0x18(%rsp)
b3d8(2): xor %eax,%eax
b3da(5): lea 0x70(%rsp),%rax
b3df(2): test %esi,%esi
b3e1(5): mov %rdx,0x30(%rsp)
b3e6(5): mov %rcx,0x38(%rsp)
b3eb(5): mov %r8,0x40(%rsp)
b3f0(5): mov %rax,0x8(%rsp)
b3f5(5): lea 0x20(%rsp),%rax
b3fa(5): mov %r9,0x48(%rsp)
b3ff(7): mov $0x10,(%rsp)
b406(5): mov %rax,0x10(%rsp)
b40b(6): jz 0x207(%rip)
b411(6): cmp $0x406,%esi
b417(2): jnz 0x49(%rip)
b419(5): mov 0x10(%rsp),%rax
b41e(7): cmp $0x0,0x205f73(%rip)
b425(7): mov $0x18,(%rsp)
b42c(4): mov 0x10(%rax),%r12d
b430(3): mov %r12d,%edx
b433(6): js 0x130(%rip)
b439(2): xor %eax,%eax
b43b(5): mov $0x406,%esi
b440(5): call 0xffff67d0(%rip)
b445(2): test %eax,%eax
b447(2): mov %eax,%ebx
b449(6): js 0x18f(%rip)
b44f(a): mov $0x1,0x205f3f(%rip)
b459(2): jmp 0x47(%rip)
b45b(5): nop 0x0(%rax,%rax,1)
b460(3): cmp $0xb,%esi
b463(2): jz 0x2d(%rip)
b465(2): jnle 0x5b(%rip)
b467(3): cmp $0x4,%esi
b46a(6): jz 0xd6(%rip)
b470(6): jnle 0xc0(%rip)
b476(3): cmp $0x2,%esi
b479(6): jz 0xc7(%rip)
b47f(2): jnle 0x11(%rip)
b481(3): cmp $0x1,%esi
b484(2): jnz 0x64(%rip)
b486(a): nop 0x0(%rax,%rax,1)
b490(2): mov %ebp,%edi
b492(2): xor %eax,%eax
b494(5): call 0xffff677c(%rip)
b499(2): mov %eax,%ebx
b49b(5): nop 0x0(%rax,%rax,1)
b4a0(5): mov 0x18(%rsp),%rcx
b4a5(9): xor $0x28,%rcx
b4ae(2): mov %ebx,%eax
b4b0(6): jnz 0x15d(%rip)
b4b6(4): add $0x50,%rsp
b4ba(1): pop %rbx
b4bb(1): pop %rbp
b4bc(2): pop %r12
b4be(1): ret near (%rsp)
b4bf(1): nop 
b4c0(6): cmp $0x407,%esi
b4c6(2): jnle 0x4a(%rip)
b4c8(6): cmp $0x406,%esi
b4ce(2): jnl 0x72(%rip)
b4d0(6): cmp $0x401,%esi
b4d6(2): jz 0xffffffba(%rip)
b4d8(6): cmp $0x402,%esi
b4de(2): jz 0x62(%rip)
b4e0(6): cmp $0x400,%esi
b4e6(2): jz 0x5a(%rip)
b4e8(3): mov (%rsp),%eax
b4eb(3): cmp $0x2f,%eax
b4ee(6): jnbe 0x13c(%rip)
b4f4(5): add 0x10(%rsp),%rax
b4f9(3): mov (%rax),%rdx
b4fc(2): mov %ebp,%edi
b4fe(2): xor %eax,%eax
b500(5): call 0xffff6710(%rip)
b505(2): mov %eax,%ebx
b507(2): jmp 0xffffff99(%rip)
b509(7): nop 0x0(%rax)
b510(6): cmp $0x409,%esi
b516(2): jz 0x2a(%rip)
b518(6): jl 0xffffff78(%rip)
b51e(6): cmp $0x40a,%esi
b524(2): jnz 0xffffffc4(%rip)
b526(5): jmp 0xffffff6a(%rip)
b52b(5): nop 0x0(%rax,%rax,1)
b530(3): cmp $0x9,%esi
b533(6): jz 0xffffff5d(%rip)
b539(2): jnle 0x7(%rip)
b53b(3): cmp $0x8,%esi
b53e(2): jnz 0xffffffaa(%rip)
b540(3): mov (%rsp),%eax
b543(3): cmp $0x2f,%eax
b546(6): jnbe 0xee(%rip)
b54c(5): add 0x10(%rsp),%rax
b551(2): mov (%rax),%edx
b553(2): mov %ebp,%edi
b555(2): xor %eax,%eax
b557(5): call 0xffff66b9(%rip)
b55c(2): mov %eax,%ebx
b55e(5): jmp 0xffffff42(%rip)
b563(2): xor %esi,%esi
b565(2): xor %eax,%eax
b567(5): call 0xffff66a9(%rip)
b56c(2): test %eax,%eax
b56e(2): mov %eax,%ebx
b570(6): js 0xffffff30(%rip)
b576(7): cmp $0xff,0x205e1b(%rip)
b57d(6): jnz 0xffffff23(%rip)
b583(2): xor %eax,%eax
b585(5): mov $0x1,%esi
b58a(2): mov %ebx,%edi
b58c(5): call 0xffff6684(%rip)
b591(2): test %eax,%eax
b593(2): js 0x1e(%rip)
b595(3): or $0x1,%eax
b598(5): mov $0x2,%esi
b59d(2): mov %ebx,%edi
b59f(2): mov %eax,%edx
b5a1(2): xor %eax,%eax
b5a3(5): call 0xffff666d(%rip)
b5a8(3): cmp $0xff,%eax
b5ab(6): jnz 0xfffffef5(%rip)
b5b1(5): call 0xffff65ff(%rip)
b5b6(3): mov (%rax),%r12d
b5b9(3): mov %rax,%rbp
b5bc(2): mov %ebx,%edi
b5be(5): call 0xffff67a2(%rip)
b5c3(5): mov $0xffffffff,%ebx
b5c8(4): mov %r12d,0x0(%rbp)
b5cc(5): jmp 0xfffffed4(%rip)
b5d1(7): nop 0x0(%rax)
b5d8(5): call 0xffff65d8(%rip)
b5dd(3): cmp $0x16,(%rax)
b5e0(6): jnz 0xfffffe6f(%rip)
b5e6(2): xor %esi,%esi
b5e8(2): xor %eax,%eax
b5ea(3): mov %r12d,%edx
b5ed(2): mov %ebp,%edi
b5ef(5): call 0xffff6621(%rip)
b5f4(2): test %eax,%eax
b5f6(2): mov %eax,%ebx
b5f8(6): js 0xfffffea8(%rip)
b5fe(a): mov $0xffffffff,0x205d90(%rip)
b608(5): jmp 0xffffff7b(%rip)
b60d(5): call 0xffff66a3(%rip)
b612(5): mov 0x10(%rsp),%rax
b617(2): xor %esi,%esi
b619(3): mov 0x10(%rax),%edx
b61c(2): xor %eax,%eax
b61e(5): call 0xffff65f2(%rip)
b623(2): mov %eax,%ebx
b625(5): jmp 0xfffffe7b(%rip)
b62a(5): mov 0x8(%rsp),%rax
b62f(5): jmp 0xfffffeca(%rip)
b634(5): mov 0x8(%rsp),%rax
b639(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
b640(3): test %rdi,%rdi
b643(1): push %rbx
b644(3): mov %rdi,%rbx
b647(2): jz 0x13(%rip)
b649(5): call 0xffff6827(%rip)
b64e(2): test %eax,%eax
b650(2): jz 0xa(%rip)
b652(6): test $0x100,(%rbx)
b658(2): jnz 0x10(%rip)
b65a(3): mov %rbx,%rdi
b65d(1): pop %rbx
b65e(5): jmp 0xffff67c2(%rip)
b663(5): nop 0x0(%rax,%rax,1)
b668(3): mov %rbx,%rdi
b66b(5): mov $0x1,%edx
b670(2): xor %esi,%esi
b672(5): call 0xe(%rip)
b677(3): mov %rbx,%rdi
b67a(1): pop %rbx
b67b(5): jmp 0xffff67a5(%rip)

"rpl_fseeko" :
b680(4): mov 0x8(%rdi),%rax
b684(4): cmp %rax,0x10(%rdi)
b688(2): jz 0x8(%rip)
b68a(5): jmp 0xffff6866(%rip)
b68f(1): nop 
b690(4): mov 0x20(%rdi),%rax
b694(4): cmp %rax,0x28(%rdi)
b698(2): jnz 0xfffffff2(%rip)
b69a(5): cmp $0x0,0x48(%rdi)
b69f(2): jnz 0xffffffeb(%rip)
b6a1(2): push %r12
b6a3(1): push %rbp
b6a4(3): mov %edx,%r12d
b6a7(1): push %rbx
b6a8(3): mov %rsi,%rbp
b6ab(3): mov %rdi,%rbx
b6ae(5): call 0xffff6742(%rip)
b6b3(3): mov %r12d,%edx
b6b6(3): mov %rbp,%rsi
b6b9(2): mov %eax,%edi
b6bb(5): call 0xffff6665(%rip)
b6c0(4): cmp $0xffffffff,%rax
b6c4(2): jz 0xe(%rip)
b6c6(3): and $0xef,(%rbx)
b6c9(7): mov %rax,0x90(%rbx)
b6d0(2): xor %eax,%eax
b6d2(1): pop %rbx
b6d3(1): pop %rbp
b6d4(2): pop %r12
b6d6(1): ret near (%rsp)

"rpl_mbrtowc" :
b6e0(2): push %r13
b6e2(2): push %r12
b6e4(3): mov %rsi,%r13
b6e7(1): push %rbp
b6e8(1): push %rbx
b6e9(3): mov %rdi,%rbx
b6ec(3): mov %rdx,%r12
b6ef(4): sub $0x18,%rsp
b6f3(9): mov $0x28,%rax
b6fc(5): mov %rax,0x8(%rsp)
b701(2): xor %eax,%eax
b703(5): lea 0x4(%rsp),%rax
b708(3): test %rdi,%rdi
b70b(4): cmove %rax,%rbx
b70f(3): mov %rbx,%rdi
b712(5): call 0xffff65be(%rip)
b717(4): cmp $0xfffffffd,%rax
b71b(3): mov %rax,%rbp
b71e(2): jbe 0x22(%rip)
b720(3): test %r12,%r12
b723(2): jz 0x1d(%rip)
b725(2): xor %edi,%edi
b727(5): call 0xffffa3e9(%rip)
b72c(2): test %al,%al
b72e(2): jnz 0x12(%rip)
b730(5): movzx 0x0(%r13),%eax
b735(5): mov $0x1,%ebp
b73a(2): mov %eax,(%rbx)
b73c(4): nop 0x0(%rax)
b740(5): mov 0x8(%rsp),%rdx
b745(9): xor $0x28,%rdx
b74e(3): mov %rbp,%rax
b751(2): jnz 0xd(%rip)
b753(4): add $0x18,%rsp
b757(1): pop %rbx
b758(1): pop %rbp
b759(2): pop %r12
b75b(2): pop %r13
b75d(1): ret near (%rsp)
b75e(5): call 0xffff6552(%rip)

"setenv_TZ" :
b770(3): test %rdi,%rdi
b773(2): jz 0x1d(%rip)
b775(3): mov %rdi,%rsi
b778(7): lea 0x89b(%rip),%rdi
b77f(5): mov $0x1,%edx
b784(5): jmp 0xffff64ac(%rip)
b789(7): nop 0x0(%rax)
b790(7): lea 0x883(%rip),%rdi
b797(5): jmp 0xffff6779(%rip)

"tzfree.part.0" :
b7a0(3): test %rdi,%rdi
b7a3(2): jz 0x25(%rip)
b7a5(1): push %rbx
b7a6(a): nop 0x0(%rax,%rax,1)
b7b0(3): mov (%rdi),%rbx
b7b3(5): call 0xffff63dd(%rip)
b7b8(3): test %rbx,%rbx
b7bb(3): mov %rbx,%rdi
b7be(2): jnz 0xfffffff2(%rip)
b7c0(1): pop %rbx
b7c1(1): ret near (%rsp)
b7c2(6): nop 0x0(%rax,%rax,1)
b7c8(2): REP ret near (%rsp)

"revert_tz.part.1" :
b7d0(2): push %r13
b7d2(2): push %r12
b7d4(1): push %rbp
b7d5(1): push %rbx
b7d6(3): mov %rdi,%rbp
b7d9(4): sub $0x8,%rsp
b7dd(5): call 0xffff63d3(%rip)
b7e2(4): cmp $0x0,0x8(%rbp)
b7e6(3): mov %rax,%rbx
b7e9(3): mov (%rax),%r12d
b7ec(4): lea 0x9(%rbp),%rdi
b7f0(2): jnz 0x4(%rip)
b7f2(2): xor %edi,%edi
b7f4(5): call 0xffffff7c(%rip)
b7f9(2): test %eax,%eax
b7fb(2): jz 0x25(%rip)
b7fd(3): mov (%rbx),%r12d
b800(3): xor %r13d,%r13d
b803(3): mov %rbp,%rdi
b806(5): call 0xffffff9a(%rip)
b80b(3): mov %r12d,(%rbx)
b80e(4): add $0x8,%rsp
b812(3): mov %r13d,%eax
b815(1): pop %rbx
b816(1): pop %rbp
b817(2): pop %r12
b819(2): pop %r13
b81b(1): ret near (%rsp)
b81c(4): nop 0x0(%rax)
b820(5): call 0xffff65c0(%rip)
b825(6): mov $0x1,%r13d
b82b(2): jmp 0xffffffd8(%rip)

"tzalloc" :
b830(3): test %rdi,%rdi
b833(2): push %r12
b835(1): push %rbp
b836(1): push %rbx
b837(2): jz 0x61(%rip)
b839(3): mov %rdi,%r12
b83c(5): call 0xffff6464(%rip)
b841(4): lea 0x1(%rax),%rbp
b845(5): mov $0x76,%edi
b84a(4): cmp $0x76,%rbp
b84e(4): cmovnb %rbp,%rdi
b852(4): add $0x11,%rdi
b856(4): and $0xfffffff8,%rdi
b85a(5): call 0xffff65b6(%rip)
b85f(3): test %rax,%rax
b862(3): mov %rax,%rbx
b865(2): jz 0x26(%rip)
b867(7): mov $0x0,(%rax)
b86e(4): lea 0x9(%rbx),%rdi
b872(5): mov $0x1,%eax
b877(4): mov %ax,0x8(%rbx)
b87b(3): mov %rbp,%rdx
b87e(3): mov %r12,%rsi
b881(5): call 0xffff654f(%rip)
b886(5): mov $0x0,0x9(%rbx,%rbp,1)
b88b(3): mov %rbx,%rax
b88e(1): pop %rbx
b88f(1): pop %rbp
b890(2): pop %r12
b892(1): ret near (%rsp)
b893(5): nop 0x0(%rax,%rax,1)
b898(5): mov $0x80,%edi
b89d(5): call 0xffff6573(%rip)
b8a2(3): test %rax,%rax
b8a5(3): mov %rax,%rbx
b8a8(2): jz 0xffffffe3(%rip)
b8aa(2): xor %edx,%edx
b8ac(7): mov $0x0,(%rbx)
b8b3(3): mov %rbx,%rax
b8b6(4): mov %dx,0x8(%rbx)
b8ba(1): pop %rbx
b8bb(1): pop %rbp
b8bc(2): pop %r12
b8be(1): ret near (%rsp)

"save_abbr" :
b8c0(2): push %r15
b8c2(2): push %r14
b8c4(5): mov $0x1,%eax
b8c9(2): push %r13
b8cb(2): push %r12
b8cd(1): push %rbp
b8ce(1): push %rbx
b8cf(4): sub $0x8,%rsp
b8d3(4): mov 0x30(%rsi),%rbp
b8d7(3): test %rbp,%rbp
b8da(6): jz 0x96(%rip)
b8e0(3): cmp %rbp,%rsi
b8e3(3): mov %rdi,%r12
b8e6(3): mov %rsi,%r13
b8e9(2): jnbe 0xb(%rip)
b8eb(4): lea 0x38(%rsi),%rdx
b8ef(3): cmp %rdx,%rbp
b8f2(2): jb 0x7e(%rip)
b8f4(4): cmp $0x0,0x0(%rbp)
b8f8(5): lea 0x9(%r12),%rbx
b8fd(2): jz 0x63(%rip)
b8ff(1): nop 
b900(3): mov %rbp,%rsi
b903(3): mov %rbx,%rdi
b906(5): call 0xffff64aa(%rip)
b90b(2): test %eax,%eax
b90d(2): jz 0x5a(%rip)
b90f(3): cmp $0x0,(%rbx)
b912(2): jnz 0x14(%rip)
b914(5): lea 0x9(%r12),%r14
b919(3): cmp %rbx,%r14
b91c(2): jnz 0x64(%rip)
b91e(6): cmp $0x0,0x8(%r12)
b924(2): jz 0x5c(%rip)
b926(3): mov %rbx,%rdi
b929(5): call 0xffff6377(%rip)
b92e(5): lea 0x1(%rbx,%rax,1),%rbx
b933(3): cmp $0x0,(%rbx)
b936(2): jnz 0xffffffca(%rip)
b938(4): mov (%r12),%rax
b93c(3): test %rax,%rax
b93f(2): jz 0xffffffc1(%rip)
b941(4): lea 0x9(%rax),%rbx
b945(3): mov %rbp,%rsi
b948(3): mov %rax,%r12
b94b(3): mov %rbx,%rdi
b94e(5): call 0xffff6462(%rip)
b953(2): test %eax,%eax
b955(2): jnz 0xffffffba(%rip)
b957(2): jmp 0x10(%rip)
b959(7): nop 0x0(%rax)
b960(7): lea 0x57e(%rip),%rbx
b967(4): mov %rbx,0x30(%r13)
b96b(5): mov $0x1,%eax
b970(4): add $0x8,%rsp
b974(1): pop %rbx
b975(1): pop %rbp
b976(2): pop %r12
b978(2): pop %r13
b97a(2): pop %r14
b97c(2): pop %r15
b97e(1): ret near (%rsp)
b97f(1): nop 
b980(3): mov %rbp,%rdi
b983(5): call 0xffff631d(%rip)
b988(4): lea 0x1(%rax),%rdx
b98c(3): mov %rax,%r15
b98f(3): mov %rbx,%rax
b992(3): sub %r14,%rax
b995(3): mov %rax,%rcx
b998(3): not %rcx
b99b(3): cmp %rdx,%rcx
b99e(2): jb 0x32(%rip)
b9a0(3): add %rdx,%rax
b9a3(4): cmp $0x76,%rax
b9a7(2): jbe 0x39(%rip)
b9a9(3): mov %rbp,%rdi
b9ac(5): call 0xfffffe84(%rip)
b9b1(3): mov %rax,%rbx
b9b4(4): mov %rax,(%r12)
b9b8(2): xor %eax,%eax
b9ba(3): test %rbx,%rbx
b9bd(2): jz 0xffffffb3(%rip)
b9bf(4): mov $0x0,0x8(%rbx)
b9c3(4): add $0x9,%rbx
b9c7(2): jmp 0xffffffa0(%rip)
b9c9(7): nop 0x0(%rax)
b9d0(5): call 0xffff61e0(%rip)
b9d5(6): mov $0xc,(%rax)
b9db(2): xor %eax,%eax
b9dd(2): jmp 0xffffff93(%rip)
b9df(1): nop 
b9e0(3): mov %rbp,%rsi
b9e3(3): mov %rbx,%rdi
b9e6(5): call 0xffff63ea(%rip)
b9eb(6): mov $0x0,0x1(%rbx,%r15,1)
b9f1(5): jmp 0xffffff76(%rip)

"set_tz" :
ba00(2): push %r12
ba02(1): push %rbp
ba03(3): mov %rdi,%rbp
ba06(1): push %rbx
ba07(7): lea 0x60c(%rip),%rdi
ba0e(4): sub $0x10,%rsp
ba12(5): call 0xffff616e(%rip)
ba17(3): test %rax,%rax
ba1a(3): mov %rax,%rbx
ba1d(6): jz 0x9b(%rip)
ba23(4): cmp $0x0,0x8(%rbp)
ba27(2): jnz 0x69(%rip)
ba29(3): mov %rbx,%rdi
ba2c(5): call 0xfffffe04(%rip)
ba31(3): test %rax,%rax
ba34(3): mov %rax,%r12
ba37(2): jz 0x46(%rip)
ba39(2): xor %edi,%edi
ba3b(4): cmp $0x0,0x8(%rbp)
ba3f(2): jz 0x6(%rip)
ba41(4): lea 0x9(%rbp),%rdi
ba45(5): call 0xfffffd2b(%rip)
ba4a(2): test %eax,%eax
ba4c(6): jz 0x8c(%rip)
ba52(5): call 0xffff615e(%rip)
ba57(4): cmp $0x1,%r12
ba5b(2): mov (%rax),%ebx
ba5d(2): jz 0x1b(%rip)
ba5f(3): mov %r12,%rdi
ba62(5): mov %rax,0x8(%rsp)
ba67(5): call 0xfffffd39(%rip)
ba6c(5): mov 0x8(%rsp),%rax
ba71(7): nop 0x0(%rax)
ba78(2): mov %ebx,(%rax)
ba7a(3): xor %r12d,%r12d
ba7d(4): add $0x10,%rsp
ba81(3): mov %r12,%rax
ba84(1): pop %rbx
ba85(1): pop %rbp
ba86(2): pop %r12
ba88(1): ret near (%rsp)
ba89(7): nop 0x0(%rax)
ba90(4): lea 0x9(%rbp),%rdi
ba94(3): mov %rax,%rsi
ba97(6): mov $0x1,%r12d
ba9d(5): call 0xffff6313(%rip)
baa2(2): test %eax,%eax
baa4(2): jnz 0xffffff85(%rip)
baa6(4): add $0x10,%rsp
baaa(3): mov %r12,%rax
baad(1): pop %rbx
baae(1): pop %rbp
baaf(2): pop %r12
bab1(1): ret near (%rsp)
bab2(6): nop 0x0(%rax,%rax,1)
bab8(4): cmp $0x0,0x8(%rbp)
babc(6): mov $0x1,%r12d
bac2(6): jnz 0xffffff67(%rip)
bac8(4): add $0x10,%rsp
bacc(3): mov %r12,%rax
bacf(1): pop %rbx
bad0(1): pop %rbp
bad1(2): pop %r12
bad3(1): ret near (%rsp)
bad4(4): nop 0x0(%rax)
bad8(5): call 0xffff6308(%rip)
badd(2): jmp 0xffffffa0(%rip)

"tzfree" :
bae0(4): cmp $0x1,%rdi
bae4(2): jz 0x7(%rip)
bae6(5): jmp 0xfffffcba(%rip)
baeb(1): ret near (%rsp)

"localtime_rz" :
baf0(2): push %r13
baf2(2): push %r12
baf4(1): push %rbp
baf5(1): push %rbx
baf6(3): mov %rsi,%rbp
baf9(4): sub $0x8,%rsp
bafd(3): test %rdi,%rdi
bb00(2): jz 0x70(%rip)
bb02(3): mov %rdx,%r13
bb05(3): mov %rdi,%rbx
bb08(5): call 0xfffffef8(%rip)
bb0d(3): test %rax,%rax
bb10(3): mov %rax,%r12
bb13(2): jz 0x4b(%rip)
bb15(3): mov %r13,%rsi
bb18(3): mov %rbp,%rdi
bb1b(5): call 0xffff60b5(%rip)
bb20(3): test %rax,%rax
bb23(2): jz 0x2d(%rip)
bb25(3): mov %r13,%rsi
bb28(3): mov %rbx,%rdi
bb2b(5): call 0xfffffd95(%rip)
bb30(2): test %al,%al
bb32(2): jz 0x1e(%rip)
bb34(4): cmp $0x1,%r12
bb38(2): jnz 0x4d(%rip)
bb3a(4): add $0x8,%rsp
bb3e(3): mov %r13,%rax
bb41(1): pop %rbx
bb42(1): pop %rbp
bb43(2): pop %r12
bb45(2): pop %r13
bb47(1): ret near (%rsp)
bb48(8): nop 0x0(%rax,%rax,1)
bb50(4): cmp $0x1,%r12
bb54(2): jz 0xa(%rip)
bb56(3): mov %r12,%rdi
bb59(5): call 0xfffffc77(%rip)
bb5e(4): add $0x8,%rsp
bb62(2): xor %eax,%eax
bb64(1): pop %rbx
bb65(1): pop %rbp
bb66(2): pop %r12
bb68(2): pop %r13
bb6a(1): ret near (%rsp)
bb6b(5): nop 0x0(%rax,%rax,1)
bb70(4): add $0x8,%rsp
bb74(3): mov %rbp,%rdi
bb77(3): mov %rdx,%rsi
bb7a(1): pop %rbx
bb7b(1): pop %rbp
bb7c(2): pop %r12
bb7e(2): pop %r13
bb80(5): jmp 0xffff6190(%rip)
bb85(3): mov %r12,%rdi
bb88(5): call 0xfffffc48(%rip)
bb8d(2): test %al,%al
bb8f(2): jnz 0xffffffab(%rip)
bb91(2): jmp 0xffffffcd(%rip)

"mktime_z" :
bba0(2): push %r12
bba2(1): push %rbp
bba3(1): push %rbx
bba4(3): mov %rsi,%rbx
bba7(4): sub $0x50,%rsp
bbab(9): mov $0x28,%rax
bbb4(5): mov %rax,0x48(%rsp)
bbb9(2): xor %eax,%eax
bbbb(3): test %rdi,%rdi
bbbe(6): jz 0x102(%rip)
bbc4(3): mov %rdi,%rbp
bbc7(5): call 0xfffffe39(%rip)
bbcc(3): test %rax,%rax
bbcf(3): mov %rax,%r12
bbd2(6): jz 0xfe(%rip)
bbd8(3): mov %rbx,%rdi
bbdb(5): call 0xffff6285(%rip)
bbe0(4): cmp $0xffffffff,%rax
bbe4(5): mov %rax,0x8(%rsp)
bbe9(2): jz 0x57(%rip)
bbeb(3): mov %rbx,%rsi
bbee(3): mov %rbp,%rdi
bbf1(5): call 0xfffffccf(%rip)
bbf6(2): test %al,%al
bbf8(2): jnz 0xb(%rip)
bbfa(9): mov $0xffffffff,0x8(%rsp)
bc03(4): cmp $0x1,%r12
bc07(2): jz 0x12(%rip)
bc09(3): mov %r12,%rdi
bc0c(5): call 0xfffffbc4(%rip)
bc11(2): test %al,%al
bc13(6): jz 0xbd(%rip)
bc19(5): mov 0x8(%rsp),%rax
bc1e(5): mov 0x48(%rsp),%rcx
bc23(9): xor $0x28,%rcx
bc2c(6): jnz 0xb0(%rip)
bc32(4): add $0x50,%rsp
bc36(1): pop %rbx
bc37(1): pop %rbp
bc38(2): pop %r12
bc3a(1): ret near (%rsp)
bc3b(5): nop 0x0(%rax,%rax,1)
bc40(5): lea 0x10(%rsp),%rsi
bc45(5): lea 0x8(%rsp),%rdi
bc4a(5): call 0xffff5f86(%rip)
bc4f(3): test %rax,%rax
bc52(2): jz 0xffffffb1(%rip)
bc54(2): mov (%rbx),%eax
bc56(3): mov 0x4(%rbx),%edx
bc59(4): xor 0x10(%rsp),%eax
bc5d(4): xor 0x14(%rsp),%edx
bc61(4): mov 0x30(%rsp),%ecx
bc65(2): or %edx,%eax
bc67(3): mov 0x8(%rbx),%edx
bc6a(4): xor 0x18(%rsp),%edx
bc6e(2): or %edx,%eax
bc70(3): mov 0xc(%rbx),%edx
bc73(4): xor 0x1c(%rsp),%edx
bc77(2): or %edx,%eax
bc79(3): mov 0x10(%rbx),%edx
bc7c(4): xor 0x20(%rsp),%edx
bc80(2): or %edx,%eax
bc82(3): mov 0x14(%rbx),%edx
bc85(4): xor 0x24(%rsp),%edx
bc89(2): or %edx,%eax
bc8b(3): mov 0x20(%rbx),%edx
bc8e(2): test %edx,%edx
bc90(4): setz %dil
bc94(2): test %ecx,%ecx
bc96(4): setz %sil
bc9a(3): cmp %sil,%dil
bc9d(2): jz 0xe(%rip)
bc9f(2): test %edx,%edx
bca1(2): js 0xa(%rip)
bca3(2): test %ecx,%ecx
bca5(6): jns 0xffffff5e(%rip)
bcab(2): test %eax,%eax
bcad(6): jz 0xffffff3e(%rip)
bcb3(5): jmp 0xffffff50(%rip)
bcb8(8): nop 0x0(%rax,%rax,1)
bcc0(3): mov %rsi,%rdi
bcc3(5): call 0xffff61fd(%rip)
bcc8(5): jmp 0xffffff56(%rip)
bccd(3): nop (%rax)
bcd0(7): mov $0xffffffff,%rax
bcd7(5): jmp 0xffffff47(%rip)
bcdc(5): call 0xffff5fd4(%rip)

"close_stream" :
bcf0(2): push %r12
bcf2(1): push %rbp
bcf3(3): mov %rdi,%rbp
bcf6(1): push %rbx
bcf7(5): call 0xffff5ef9(%rip)
bcfc(3): mov 0x0(%rbp),%ebx
bcff(3): mov %rbp,%rdi
bd02(3): mov %rax,%r12
bd05(5): call 0xfffff63b(%rip)
bd0a(3): and $0x20,%ebx
bd0d(2): test %ebx,%ebx
bd0f(2): jnz 0x19(%rip)
bd11(2): test %eax,%eax
bd13(2): jz 0xc(%rip)
bd15(3): test %r12,%r12
bd18(5): mov $0xffffffff,%eax
bd1d(2): jz 0x3b(%rip)
bd1f(1): pop %rbx
bd20(1): pop %rbp
bd21(2): pop %r12
bd23(1): ret near (%rsp)
bd24(4): nop 0x0(%rax)
bd28(2): test %eax,%eax
bd2a(2): jnz 0x1e(%rip)
bd2c(5): call 0xffff5e84(%rip)
bd31(6): mov $0x0,(%rax)
bd37(5): mov $0xffffffff,%eax
bd3c(1): pop %rbx
bd3d(1): pop %rbp
bd3e(2): pop %r12
bd40(1): ret near (%rsp)
bd41(7): nop 0x0(%rax)
bd48(1): pop %rbx
bd49(5): mov $0xffffffff,%eax
bd4e(1): pop %rbp
bd4f(2): pop %r12
bd51(1): ret near (%rsp)
bd52(6): nop 0x0(%rax,%rax,1)
bd58(5): call 0xffff5e58(%rip)
bd5d(3): cmp $0x9,(%rax)
bd60(1): pop %rbx
bd61(1): pop %rbp
bd62(2): pop %r12
bd64(3): setnz %al
bd67(3): movzx %al,%eax
bd6a(2): neg %eax
bd6c(1): ret near (%rsp)

"locale_charset" :
bd70(4): sub $0x8,%rsp
bd74(5): mov $0xe,%edi
bd79(5): call 0xffff60b7(%rip)
bd7e(3): test %rax,%rax
bd81(2): jz 0x1f(%rip)
bd83(3): cmp $0x0,(%rax)
bd86(7): lea 0x28ce(%rip),%rdx
bd8d(4): cmove %rdx,%rax
bd91(4): add $0x8,%rsp
bd95(1): ret near (%rsp)
bd96(a): nop 0x0(%rax,%rax,1)
bda0(7): lea 0x28b4(%rip),%rax
bda7(4): add $0x8,%rsp
bdab(1): ret near (%rsp)

"__libc_csu_init" :
bdb0(2): push %r15
bdb2(2): push %r14
bdb4(3): mov %rdx,%r15
bdb7(2): push %r13
bdb9(2): push %r12
bdbb(7): lea 0x204a0e(%rip),%r12
bdc2(1): push %rbp
bdc3(7): lea 0x204a0e(%rip),%rbp
bdca(1): push %rbx
bdcb(3): mov %edi,%r13d
bdce(3): mov %rsi,%r14
bdd1(3): sub %r12,%rbp
bdd4(4): sub $0x8,%rsp
bdd8(4): sar $0x3,%rbp
bddc(5): call 0xffff5d54(%rip)
bde1(3): test %rbp,%rbp
bde4(2): jz 0x22(%rip)
bde6(2): xor %ebx,%ebx
bde8(8): nop 0x0(%rax,%rax,1)
bdf0(3): mov %r15,%rdx
bdf3(3): mov %r14,%rsi
bdf6(3): mov %r13d,%edi
bdf9(4): call 0x0(%r12,%rbx,8)
bdfd(4): add $0x1,%rbx
be01(3): cmp %rbx,%rbp
be04(2): jnz 0xffffffec(%rip)
be06(4): add $0x8,%rsp
be0a(1): pop %rbx
be0b(1): pop %rbp
be0c(2): pop %r12
be0e(2): pop %r13
be10(2): pop %r14
be12(2): pop %r15
be14(1): ret near (%rsp)

"atexit" :
be30(7): mov 0x2051d1(%rip),%rdx
be37(2): xor %esi,%esi
be39(5): jmp 0xffff60e7(%rip)

"_fini" :
be40(4): sub $0x8,%rsp
be44(4): add $0x8,%rsp
be48(1): ret near (%rsp)

