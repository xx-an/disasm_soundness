
"free@plt" :
1590(6): jmp 0x2098aa(%rip)
1596(5): push $0x0

"abort@plt" :
15a0(6): jmp 0x2098a2(%rip)
15a6(5): push $0x1

"__errno_location@plt" :
15b0(6): jmp 0x20989a(%rip)
15b6(5): push $0x2

"strncmp@plt" :
15c0(6): jmp 0x209892(%rip)
15c6(5): push $0x3

"_exit@plt" :
15d0(6): jmp 0x20988a(%rip)
15d6(5): push $0x4

"__fpending@plt" :
15e0(6): jmp 0x209882(%rip)
15e6(5): push $0x5

"fread_unlocked@plt" :
15f0(6): jmp 0x20987a(%rip)
15f6(5): push $0x6

"textdomain@plt" :
1600(6): jmp 0x209872(%rip)
1606(5): push $0x7

"fclose@plt" :
1610(6): jmp 0x20986a(%rip)
1616(5): push $0x8

"bindtextdomain@plt" :
1620(6): jmp 0x209862(%rip)
1626(5): push $0x9

"dcgettext@plt" :
1630(6): jmp 0x20985a(%rip)
1636(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1640(6): jmp 0x209852(%rip)
1646(5): push $0xb

"strlen@plt" :
1650(6): jmp 0x20984a(%rip)
1656(5): push $0xc

"__stack_chk_fail@plt" :
1660(6): jmp 0x209842(%rip)
1666(5): push $0xd

"getopt_long@plt" :
1670(6): jmp 0x20983a(%rip)
1676(5): push $0xe

"mbrtowc@plt" :
1680(6): jmp 0x209832(%rip)
1686(5): push $0xf

"strchr@plt" :
1690(6): jmp 0x20982a(%rip)
1696(5): push $0x10

"__overflow@plt" :
16a0(6): jmp 0x209822(%rip)
16a6(5): push $0x11

"strrchr@plt" :
16b0(6): jmp 0x20981a(%rip)
16b6(5): push $0x12

"lseek@plt" :
16c0(6): jmp 0x209812(%rip)
16c6(5): push $0x13

"__assert_fail@plt" :
16d0(6): jmp 0x20980a(%rip)
16d6(5): push $0x14

"__strtoul_internal@plt" :
16e0(6): jmp 0x209802(%rip)
16e6(5): push $0x15

"memset@plt" :
16f0(6): jmp 0x2097fa(%rip)
16f6(5): push $0x16

"posix_fadvise@plt" :
1700(6): jmp 0x2097f2(%rip)
1706(5): push $0x17

"memchr@plt" :
1710(6): jmp 0x2097ea(%rip)
1716(5): push $0x18

"memcmp@plt" :
1720(6): jmp 0x2097e2(%rip)
1726(5): push $0x19

"fputs_unlocked@plt" :
1730(6): jmp 0x2097da(%rip)
1736(5): push $0x1a

"calloc@plt" :
1740(6): jmp 0x2097d2(%rip)
1746(5): push $0x1b

"strcmp@plt" :
1750(6): jmp 0x2097ca(%rip)
1756(5): push $0x1c

"memcpy@plt" :
1760(6): jmp 0x2097c2(%rip)
1766(5): push $0x1d

"fileno@plt" :
1770(6): jmp 0x2097ba(%rip)
1776(5): push $0x1e

"malloc@plt" :
1780(6): jmp 0x2097b2(%rip)
1786(5): push $0x1f

"fflush@plt" :
1790(6): jmp 0x2097aa(%rip)
1796(5): push $0x20

"nl_langinfo@plt" :
17a0(6): jmp 0x2097a2(%rip)
17a6(5): push $0x21

"__freading@plt" :
17b0(6): jmp 0x20979a(%rip)
17b6(5): push $0x22

"fwrite_unlocked@plt" :
17c0(6): jmp 0x209792(%rip)
17c6(5): push $0x23

"realloc@plt" :
17d0(6): jmp 0x20978a(%rip)
17d6(5): push $0x24

"setlocale@plt" :
17e0(6): jmp 0x209782(%rip)
17e6(5): push $0x25

"__printf_chk@plt" :
17f0(6): jmp 0x20977a(%rip)
17f6(5): push $0x26

"memmove@plt" :
1800(6): jmp 0x209772(%rip)
1806(5): push $0x27

"error@plt" :
1810(6): jmp 0x20976a(%rip)
1816(5): push $0x28

"fseeko@plt" :
1820(6): jmp 0x209762(%rip)
1826(5): push $0x29

"fopen@plt" :
1830(6): jmp 0x20975a(%rip)
1836(5): push $0x2a

"__cxa_atexit@plt" :
1840(6): jmp 0x209752(%rip)
1846(5): push $0x2b

"exit@plt" :
1850(6): jmp 0x20974a(%rip)
1856(5): push $0x2c

"fwrite@plt" :
1860(6): jmp 0x209742(%rip)
1866(5): push $0x2d

"__fprintf_chk@plt" :
1870(6): jmp 0x20973a(%rip)
1876(5): push $0x2e

"mbsinit@plt" :
1880(6): jmp 0x209732(%rip)
1886(5): push $0x2f

"iswprint@plt" :
1890(6): jmp 0x20972a(%rip)
1896(5): push $0x30

"__ctype_b_loc@plt" :
18a0(6): jmp 0x209722(%rip)
18a6(5): push $0x31

".plt.got" :
18b0(6): jmp 0x20973a(%rip)
18b6(2): nop 

"_init" :
1568(4): sub $0x8,%rsp
156c(7): mov 0x209a6d(%rip),%rax
1573(3): test %rax,%rax
1576(2): jz 0x4(%rip)
1578(2): call %rax
157a(4): add $0x8,%rsp
157e(1): ret near (%rsp)

"main" :
18c0(2): push %r15
18c2(2): push %r14
18c4(3): xor %r14d,%r14d
18c7(2): push %r13
18c9(2): push %r12
18cb(6): mov $0x4c,%r13d
18d1(1): push %rbp
18d2(1): push %rbx
18d3(2): mov %edi,%ebp
18d5(3): mov %rsi,%rbx
18d8(3): xor %r12d,%r12d
18db(7): sub $0x88,%rsp
18e2(3): mov (%rsi),%rdi
18e5(9): mov $0x28,%rax
18ee(5): mov %rax,0x78(%rsp)
18f3(2): xor %eax,%eax
18f5(5): call 0x2b7b(%rip)
18fa(7): lea 0x6cc0(%rip),%rsi
1901(5): mov $0x6,%edi
1906(5): call 0xfffffeda(%rip)
190b(7): lea 0x5b0b(%rip),%rsi
1912(7): lea 0x5adb(%rip),%rdi
1919(5): call 0xfffffd07(%rip)
191e(7): lea 0x5acf(%rip),%rdi
1925(5): call 0xfffffcdb(%rip)
192a(7): lea 0x2a4f(%rip),%rdi
1931(5): call 0x59bf(%rip)
1936(5): mov $0x0,0x20(%rsp)
193b(7): lea 0x2090de(%rip),%rcx
1942(7): lea 0x5b1b(%rip),%rdx
1949(3): xor %r8d,%r8d
194c(3): mov %rbx,%rsi
194f(2): mov %ebp,%edi
1951(5): call 0xfffffd1f(%rip)
1956(3): cmp $0xff,%eax
1959(6): jz 0xf4(%rip)
195f(3): cmp $0x69,%eax
1962(6): jz 0x9e(%rip)
1968(2): jnle 0x68(%rip)
196a(5): cmp $0xffffff7e,%eax
196f(6): jz 0x96e(%rip)
1975(3): cmp $0x64,%eax
1978(2): jz 0x78(%rip)
197a(5): cmp $0xffffff7d,%eax
197f(2): jz 0x11(%rip)
1981(5): mov $0x1,%edi
1986(5): call 0x15da(%rip)
198b(5): nop 0x0(%rax,%rax,1)
1990(4): sub $0x8,%rsp
1994(7): mov 0x2096ed(%rip),%rdi
199b(7): mov 0x20966e(%rip),%rcx
19a2(2): push $0x0
19a4(7): lea 0x5a9c(%rip),%r9
19ab(7): lea 0x5aa2(%rip),%r8
19b2(7): lea 0x5a37(%rip),%rdx
19b9(7): lea 0x5995(%rip),%rsi
19c0(2): xor %eax,%eax
19c2(5): call 0x4c9e(%rip)
19c7(2): xor %edi,%edi
19c9(5): call 0xfffffe87(%rip)
19ce(2): nop 
19d0(3): cmp $0x77,%eax
19d3(2): jz 0x3d(%rip)
19d5(2): jl 0xffffffac(%rip)
19d7(3): lea 0xffffff80(%rax),%edx
19da(3): cmp $0x7,%edx
19dd(2): jnbe 0xffffffa4(%rip)
19df(3): mov %eax,%r14d
19e2(5): jmp 0xffffff59(%rip)
19e7(9): nop 0x0(%rax,%rax,1)
19f0(6): mov $0x1,%r12d
19f6(5): jmp 0xffffff45(%rip)
19fb(5): nop 0x0(%rax,%rax,1)
1a00(5): mov $0x1,0x20(%rsp)
1a05(5): jmp 0xffffff36(%rip)
1a0a(6): nop 0x0(%rax,%rax,1)
1a10(7): lea 0x5a1e(%rip),%rsi
1a17(5): mov $0x5,%edx
1a1c(2): xor %edi,%edi
1a1e(5): call 0xfffffc12(%rip)
1a23(7): mov 0x209676(%rip),%rdi
1a2a(7): lea 0x6b90(%rip),%rcx
1a31(3): mov %rax,%r8
1a34(3): xor %r9d,%r9d
1a37(7): mov $0xffffffff,%rdx
1a3e(2): xor %esi,%esi
1a40(5): call 0x5110(%rip)
1a45(3): mov %rax,%r13
1a48(5): jmp 0xfffffef3(%rip)
1a4d(4): add $0x80,%r14d
1a51(4): cmp $0x7,%r14d
1a55(6): jnbe 0x88f(%rip)
1a5b(7): lea 0x61de(%rip),%rdx
1a62(4): movsxd 0x0(%rdx,%r14,4),%rax
1a66(3): add %rdx,%rax
1a69(2): jmp %rax
1a6b(7): lea 0xb7e(%rip),%rax
1a72(7): mov %rax,0x209677(%rip)
1a79(7): lea 0xb60(%rip),%rax
1a80(7): mov %rax,0x209661(%rip)
1a87(7): lea 0xbc2(%rip),%rax
1a8e(7): mov %rax,0x20964b(%rip)
1a95(7): lea 0xcb4(%rip),%rax
1a9c(7): mov %rax,0x209635(%rip)
1aa3(7): lea 0xfe6(%rip),%rax
1aaa(7): mov %rax,0x20961f(%rip)
1ab1(7): movsxd 0x2095e0(%rip),%rax
1ab8(2): mov %ebp,%edx
1aba(2): sub %eax,%edx
1abc(3): sub $0x1,%edx
1abf(6): jnle 0x8a8(%rip)
1ac5(2): cmp %ebp,%eax
1ac7(6): jnl 0x4ac(%rip)
1acd(4): mov 0x0(%rbx,%rax,8),%rax
1ad1(7): lea 0x65b2(%rip),%rsi
1ad8(3): mov %rax,%rdi
1adb(5): mov %rax,0x38(%rsp)
1ae0(5): call 0xfffffc70(%rip)
1ae5(2): test %eax,%eax
1ae7(6): jz 0x498(%rip)
1aed(5): mov 0x38(%rsp),%rdi
1af2(7): lea 0x5997(%rip),%rsi
1af9(5): call 0xfffffd37(%rip)
1afe(3): test %rax,%rax
1b01(3): mov %rax,%rbp
1b04(6): jz 0x832(%rip)
1b0a(5): mov $0x2,%esi
1b0f(3): mov %rbp,%rdi
1b12(5): call 0x292e(%rip)
1b17(3): test %r12b,%r12b
1b1a(6): jz 0x471(%rip)
1b20(7): mov 0x209561(%rip),%rax
1b27(5): mov $0x1400,%edi
1b2c(5): mov %rax,0x28(%rsp)
1b31(6): call 0x2095b9(%rip)
1b37(3): movsxd %eax,%rdi
1b3a(5): call 0x4c86(%rip)
1b3f(5): mov $0x1400,%edi
1b44(3): mov %rax,%r12
1b47(5): call 0x4c79(%rip)
1b4c(5): mov %rax,0x30(%rsp)
1b51(5): lea 0x50(%rsp),%rax
1b56(9): mov $0x0,0x60(%rsp)
1b5f(5): mov %rax,0x10(%rsp)
1b64(3): mov %rax,%rdi
1b67(6): call 0x20956b(%rip)
1b6d(5): lea 0x48(%rsp),%rax
1b72(5): mov %rax,0x18(%rsp)
1b77(9): nop 0x0(%rax,%rax,1)
1b80(2): xor %ebx,%ebx
1b82(5): mov %rbp,0x8(%rsp)
1b87(2): jmp 0x3f(%rip)
1b89(7): nop 0x0(%rax)
1b90(5): mov 0x8(%rsp),%rax
1b95(3): add %r13,%rbx
1b98(3): test $0x20,(%rax)
1b9b(6): jnz 0x716(%rip)
1ba1(5): mov $0x1400,%edi
1ba6(6): call 0x209544(%rip)
1bac(2): cwde 
1bae(3): cmp %rax,%rbx
1bb1(6): jnb 0x2cf(%rip)
1bb7(5): mov 0x8(%rsp),%rax
1bbc(2): mov (%rax),%eax
1bbe(2): test $0x10,%al
1bc0(6): jnz 0x370(%rip)
1bc6(5): mov $0x1400,%edi
1bcb(6): call 0x20951f(%rip)
1bd1(5): mov 0x8(%rsp),%rcx
1bd6(3): movsxd %eax,%rdx
1bd9(4): lea 0x0(%r12,%rbx,1),%rdi
1bdd(3): sub %rbx,%rdx
1be0(5): mov $0x1,%esi
1be5(5): call 0xfffffa0b(%rip)
1bea(5): cmp $0x0,0x20(%rsp)
1bef(3): mov %rax,%r13
1bf2(5): mov %rax,0x48(%rsp)
1bf7(2): jz 0xffffff99(%rip)
1bf9(3): xor %r14d,%r14d
1bfc(4): nop 0x0(%rax)
1c00(3): test %r13,%r13
1c03(2): jz 0xffffff8d(%rip)
1c05(3): cmp %r13,%r14
1c08(2): jnb 0xffffff88(%rip)
1c0a(4): lea 0x0(%rbx,%r14,1),%rbp
1c0e(4): lea 0x0(%r12,%rbp,1),%r15
1c12(4): movsx (%r15),%edi
1c16(6): call 0x2094cc(%rip)
1c1c(2): test %al,%al
1c1e(5): mov 0x48(%rsp),%r13
1c23(6): jnz 0x24d(%rip)
1c29(4): cmp $0x3d,(%r15)
1c2d(6): jz 0x243(%rip)
1c33(4): sub $0x1,%r13
1c37(5): lea 0x1(%r12,%rbp,1),%rsi
1c3c(3): mov %r15,%rdi
1c3f(3): mov %r13,%rdx
1c42(5): mov %r13,0x48(%rsp)
1c47(3): sub %r14,%rdx
1c4a(5): call 0xfffffbb6(%rip)
1c4f(3): test %r13,%r13
1c52(2): jnz 0xffffffb3(%rip)
1c54(5): jmp 0xffffff3c(%rip)
1c59(7): lea 0x990(%rip),%rax
1c60(7): mov %rax,0x209489(%rip)
1c67(7): lea 0x972(%rip),%rax
1c6e(7): mov %rax,0x209473(%rip)
1c75(7): lea 0x984(%rip),%rax
1c7c(7): mov %rax,0x20945d(%rip)
1c83(7): lea 0xac6(%rip),%rax
1c8a(7): mov %rax,0x209447(%rip)
1c91(7): lea 0xe88(%rip),%rax
1c98(7): mov %rax,0x209431(%rip)
1c9f(5): jmp 0xfffffe12(%rip)
1ca4(7): lea 0x855(%rip),%rax
1cab(7): mov %rax,0x20943e(%rip)
1cb2(7): lea 0x9e7(%rip),%rax
1cb9(7): mov %rax,0x209428(%rip)
1cc0(7): lea 0xa09(%rip),%rax
1cc7(7): mov %rax,0x209412(%rip)
1cce(7): lea 0xbab(%rip),%rax
1cd5(7): mov %rax,0x2093fc(%rip)
1cdc(7): lea 0x10ad(%rip),%rax
1ce3(7): mov %rax,0x2093e6(%rip)
1cea(5): jmp 0xfffffdc7(%rip)
1cef(7): lea 0x80a(%rip),%rax
1cf6(7): mov %rax,0x2093f3(%rip)
1cfd(7): lea 0x22bc(%rip),%rax
1d04(7): mov %rax,0x2093dd(%rip)
1d0b(7): lea 0x205e(%rip),%rax
1d12(7): mov %rax,0x2093c7(%rip)
1d19(7): lea 0xb90(%rip),%rax
1d20(7): mov %rax,0x2093b1(%rip)
1d27(7): lea 0xb32(%rip),%rax
1d2e(7): mov %rax,0x20939b(%rip)
1d35(5): jmp 0xfffffd7c(%rip)
1d3a(7): lea 0x88f(%rip),%rax
1d41(7): mov %rax,0x2093a8(%rip)
1d48(7): lea 0xa61(%rip),%rax
1d4f(7): mov %rax,0x209392(%rip)
1d56(7): lea 0xe73(%rip),%rax
1d5d(7): mov %rax,0x20937c(%rip)
1d64(7): lea 0x9b5(%rip),%rax
1d6b(7): mov %rax,0x209366(%rip)
1d72(7): lea 0xbf7(%rip),%rax
1d79(7): mov %rax,0x209350(%rip)
1d80(5): jmp 0xfffffd31(%rip)
1d85(7): lea 0x794(%rip),%rax
1d8c(7): mov %rax,0x20935d(%rip)
1d93(7): lea 0x7a6(%rip),%rax
1d9a(7): mov %rax,0x209347(%rip)
1da1(7): lea 0xf68(%rip),%rax
1da8(7): mov %rax,0x209331(%rip)
1daf(7): lea 0xa6a(%rip),%rax
1db6(7): mov %rax,0x20931b(%rip)
1dbd(7): lea 0x10bc(%rip),%rax
1dc4(7): mov %rax,0x209305(%rip)
1dcb(5): jmp 0xfffffce6(%rip)
1dd0(7): lea 0x749(%rip),%rax
1dd7(7): mov %rax,0x209312(%rip)
1dde(7): lea 0x1adb(%rip),%rax
1de5(7): mov %rax,0x2092fc(%rip)
1dec(7): lea 0x181d(%rip),%rax
1df3(7): mov %rax,0x2092e6(%rip)
1dfa(7): lea 0xa4f(%rip),%rax
1e01(7): mov %rax,0x2092d0(%rip)
1e08(7): lea 0x9f1(%rip),%rax
1e0f(7): mov %rax,0x2092ba(%rip)
1e16(5): jmp 0xfffffc9b(%rip)
1e1b(7): lea 0x75e(%rip),%rax
1e22(7): mov %rax,0x2092c7(%rip)
1e29(7): lea 0x730(%rip),%rax
1e30(7): mov %rax,0x2092b1(%rip)
1e37(7): lea 0x752(%rip),%rax
1e3e(7): mov %rax,0x20929b(%rip)
1e45(7): lea 0x934(%rip),%rax
1e4c(7): mov %rax,0x209285(%rip)
1e53(7): lea 0xa66(%rip),%rax
1e5a(7): mov %rax,0x20926f(%rip)
1e61(5): jmp 0xfffffc50(%rip)
1e66(a): nop 0x0(%rax,%rax,1)
1e70(4): add $0x1,%r14
1e74(5): jmp 0xfffffd8c(%rip)
1e79(7): nop 0x0(%rax)
1e80(5): mov 0x8(%rsp),%rbp
1e85(3): mov 0x0(%rbp),%eax
1e88(3): xor %r15d,%r15d
1e8b(5): mov %rbx,0x8(%rsp)
1e90(5): mov 0x30(%rsp),%r13
1e95(3): mov %r15d,%ebx
1e98(5): mov 0x28(%rsp),%r15
1e9d(2): jmp 0x64(%rip)
1e9f(1): nop 
1ea0(2): test %ebx,%ebx
1ea2(6): jnz 0xfffffcde(%rip)
1ea8(7): mov 0x209221(%rip),%rax
1eaf(5): mov 0x8(%rsp),%rdx
1eb4(9): mov $0x1400,0x48(%rsp)
1ebd(5): mov 0x18(%rsp),%r8
1ec2(3): mov %r13,%rcx
1ec5(3): mov %r12,%rsi
1ec8(5): mov 0x10(%rsp),%rdi
1ecd(2): call %rax
1ecf(5): mov 0x48(%rsp),%rdx
1ed4(3): mov %r15,%rcx
1ed7(5): mov $0x1,%esi
1edc(3): mov %r13,%rdi
1edf(3): mov %eax,%r14d
1ee2(5): call 0xfffff8de(%rip)
1ee7(5): cmp 0x48(%rsp),%rax
1eec(6): jb 0x399(%rip)
1ef2(3): test %r14b,%r14b
1ef5(6): jz 0x36c(%rip)
1efb(3): mov 0x0(%rbp),%eax
1efe(3): add $0x1,%ebx
1f01(2): test $0x10,%al
1f03(2): jz 0xffffff9d(%rip)
1f05(3): cmp $0x1,%ebx
1f08(2): jnbe 0x32(%rip)
1f0a(2): jnz 0xffffff9e(%rip)
1f0c(4): mov 0x50(%rsp),%eax
1f10(2): test %eax,%eax
1f12(2): jz 0x28(%rip)
1f14(9): mov $0x1400,0x48(%rsp)
1f1d(7): mov 0x2091ac(%rip),%rax
1f24(2): xor %edx,%edx
1f26(2): jmp 0xffffff97(%rip)
1f28(8): nop 0x0(%rax,%rax,1)
1f30(5): mov 0x8(%rsp),%rbp
1f35(5): jmp 0xffffff53(%rip)
1f3a(3): mov %rbp,%rdi
1f3d(5): call 0x5063(%rip)
1f42(3): add $0x1,%eax
1f45(6): jz 0x28c(%rip)
1f4b(2): xor %eax,%eax
1f4d(5): mov 0x78(%rsp),%rcx
1f52(9): xor $0x28,%rcx
1f5b(6): jnz 0x447(%rip)
1f61(7): add $0x88,%rsp
1f68(1): pop %rbx
1f69(1): pop %rbp
1f6a(2): pop %r12
1f6c(2): pop %r13
1f6e(2): pop %r14
1f70(2): pop %r15
1f72(1): ret near (%rsp)
1f73(7): lea 0x6110(%rip),%rax
1f7a(5): mov %rax,0x38(%rsp)
1f7f(7): mov 0x20910a(%rip),%rbp
1f86(5): jmp 0xfffffb84(%rip)
1f8b(5): mov $0x7800,%edi
1f90(7): mov 0x2090f1(%rip),%r12
1f97(2): xor %ebx,%ebx
1f99(5): call 0x4827(%rip)
1f9e(5): mov $0x7800,%edi
1fa3(5): mov %rax,0x10(%rsp)
1fa8(6): call 0x209142(%rip)
1fae(3): movsxd %eax,%rdi
1fb1(5): call 0x480f(%rip)
1fb6(5): mov %r13,0x18(%rsp)
1fbb(5): mov %rax,0x8(%rsp)
1fc0(3): xor %r15d,%r15d
1fc3(5): mov 0x10(%rsp),%r13
1fc8(2): jmp 0x11(%rip)
1fca(6): nop 0x0(%rax,%rax,1)
1fd0(7): cmp $0x77ff,%r15
1fd7(2): jnbe 0x2f(%rip)
1fd9(5): lea 0x0(%r13,%r15,1),%rdi
1fde(5): mov $0x7800,%edx
1fe3(3): mov %rbp,%rcx
1fe6(3): sub %r15,%rdx
1fe9(5): mov $0x1,%esi
1fee(5): call 0xfffff602(%rip)
1ff3(3): add %rax,%r15
1ff6(3): mov 0x0(%rbp),%eax
1ff9(2): test $0x30,%al
1ffb(2): jz 0xffffffd5(%rip)
1ffd(3): test %r15,%r15
2000(6): jz 0xc0(%rip)
2006(7): mov 0x2090d3(%rip),%r13
200d(3): mov %r15d,%edi
2010(6): call 0x2090da(%rip)
2016(5): mov 0x8(%rsp),%rdx
201b(3): movsxd %eax,%rcx
201e(3): mov %r15,%rsi
2021(5): mov 0x10(%rsp),%rdi
2026(3): call %r13
2029(3): mov %r15d,%edi
202c(6): call 0x2090be(%rip)
2032(6): cmp $0x0,0x18(%rsp)
2038(3): movsxd %eax,%r13
203b(6): jz 0x106(%rip)
2041(3): xor %r14d,%r14d
2044(3): test %r13,%r13
2047(2): jz 0x65(%rip)
2049(5): mov %rbp,0x20(%rsp)
204e(3): mov %rbx,%rbp
2051(5): mov 0x18(%rsp),%rbx
2056(5): mov %r15,0x28(%rsp)
205b(3): mov %r13,%r15
205e(2): nop 
2060(3): mov %rbx,%r13
2063(3): mov %r15,%rax
2066(3): sub %rbp,%r13
2069(3): sub %r14,%rax
206c(3): cmp %rax,%r13
206f(4): cmovnbe %rax,%r13
2073(3): test %r13,%r13
2076(6): jnz 0x9a(%rip)
207c(5): mov 0x28(%r12),%rax
2081(5): cmp 0x30(%r12),%rax
2086(6): jnb 0x109(%rip)
208c(4): lea 0x1(%rax),%rdx
2090(5): mov %rdx,0x28(%r12)
2095(3): mov $0xa,(%rax)
2098(2): xor %ebp,%ebp
209a(3): cmp %r14,%r15
209d(2): jnbe 0xffffffc3(%rip)
209f(3): mov %rbp,%rbx
20a2(5): mov 0x28(%rsp),%r15
20a7(5): mov 0x20(%rsp),%rbp
20ac(3): mov 0x0(%rbp),%eax
20af(2): test $0x30,%al
20b1(2): jnz 0xf(%rip)
20b3(7): cmp $0x7800,%r15
20ba(6): jz 0xffffff06(%rip)
20c0(5): mov 0x18(%rsp),%r13
20c5(3): test %r13,%r13
20c8(2): jz 0xb(%rip)
20ca(3): test %rbx,%rbx
20cd(6): jnz 0x147(%rip)
20d3(2): test $0x20,%al
20d5(6): jz 0xfffffe65(%rip)
20db(7): lea 0x53b1(%rip),%rsi
20e2(5): mov $0x5,%edx
20e7(2): xor %edi,%edi
20e9(5): call 0xfffff547(%rip)
20ee(3): mov %rax,%rbx
20f1(5): call 0xfffff4bf(%rip)
20f6(2): mov (%rax),%esi
20f8(3): mov %rbx,%rdx
20fb(5): mov $0x1,%edi
2100(2): xor %eax,%eax
2102(5): call 0xfffff70e(%rip)
2107(9): nop 0x0(%rax,%rax,1)
2110(5): mov 0x8(%rsp),%rax
2115(7): mov 0x208f6c(%rip),%rcx
211c(3): mov %r13,%rdx
211f(5): mov $0x1,%esi
2124(4): lea 0x0(%rax,%r14,1),%rdi
2128(5): call 0xfffff698(%rip)
212d(3): cmp %rax,%r13
2130(6): jnbe 0x1da(%rip)
2136(3): add %r13,%rbp
2139(3): add %r13,%r14
213c(5): jmp 0xffffff5e(%rip)
2141(7): mov 0x208f40(%rip),%rcx
2148(5): mov 0x8(%rsp),%rdi
214d(3): mov %r13,%rdx
2150(5): mov $0x1,%esi
2155(5): call 0xfffff66b(%rip)
215a(3): cmp %rax,%r13
215d(6): jbe 0xffffff4f(%rip)
2163(7): lea 0x5334(%rip),%rsi
216a(5): mov $0x5,%edx
216f(2): xor %edi,%edi
2171(5): call 0xfffff4bf(%rip)
2176(3): mov %rax,%rbx
2179(5): call 0xfffff437(%rip)
217e(2): mov (%rax),%esi
2180(3): mov %rbx,%rdx
2183(5): mov $0x1,%edi
2188(2): xor %eax,%eax
218a(5): call 0xfffff686(%rip)
218f(5): mov $0xa,%esi
2194(3): mov %r12,%rdi
2197(5): call 0xfffff509(%rip)
219c(3): add $0x1,%eax
219f(6): jnz 0xfffffef9(%rip)
21a5(7): lea 0x52f2(%rip),%rsi
21ac(5): mov $0x5,%edx
21b1(2): xor %edi,%edi
21b3(5): call 0xfffff47d(%rip)
21b8(3): mov %rax,%rbx
21bb(5): call 0xfffff3f5(%rip)
21c0(2): mov (%rax),%esi
21c2(3): mov %rbx,%rdx
21c5(5): mov $0x1,%edi
21ca(2): xor %eax,%eax
21cc(5): call 0xfffff644(%rip)
21d1(5): mov 0x38(%rsp),%rdi
21d6(7): lea 0x5ead(%rip),%rsi
21dd(5): call 0xfffff573(%rip)
21e2(2): mov %eax,%ebp
21e4(5): call 0xfffff3cc(%rip)
21e9(2): test %ebp,%ebp
21eb(3): mov %rax,%rbx
21ee(2): jnz 0x4a(%rip)
21f0(7): lea 0x52c1(%rip),%rsi
21f7(5): mov $0x5,%edx
21fc(2): xor %edi,%edi
21fe(5): call 0xfffff432(%rip)
2203(2): mov (%rbx),%esi
2205(3): mov %rax,%rdx
2208(5): mov $0x1,%edi
220d(2): xor %eax,%eax
220f(5): call 0xfffff601(%rip)
2214(5): mov 0x28(%r12),%rax
2219(5): cmp 0x30(%r12),%rax
221e(6): jnb 0x189(%rip)
2224(4): lea 0x1(%rax),%rdx
2228(5): mov %rdx,0x28(%r12)
222d(3): mov $0xa,(%rax)
2230(3): mov 0x0(%rbp),%eax
2233(5): jmp 0xfffffea0(%rip)
2238(5): mov 0x38(%rsp),%rdx
223d(5): mov $0x3,%esi
2242(2): xor %edi,%edi
2244(5): call 0x3d6c(%rip)
2249(2): mov (%rbx),%esi
224b(7): lea 0x5df2(%rip),%rdx
2252(3): mov %rax,%rcx
2255(5): mov $0x1,%edi
225a(2): xor %eax,%eax
225c(5): call 0xfffff5b4(%rip)
2261(7): lea 0x5242(%rip),%rsi
2268(5): mov $0x5,%edx
226d(2): xor %edi,%edi
226f(5): call 0xfffff3c1(%rip)
2274(2): xor %esi,%esi
2276(3): mov %rax,%rdx
2279(5): mov $0x1,%edi
227e(2): xor %eax,%eax
2280(5): call 0xfffff590(%rip)
2285(7): lea 0x5212(%rip),%rsi
228c(5): mov $0x5,%edx
2291(2): xor %edi,%edi
2293(5): call 0xfffff39d(%rip)
2298(3): mov %rax,%rbx
229b(5): call 0xfffff315(%rip)
22a0(2): mov (%rax),%esi
22a2(3): mov %rbx,%rdx
22a5(5): mov $0x1,%edi
22aa(2): xor %eax,%eax
22ac(5): call 0xfffff564(%rip)
22b1(7): lea 0x51db(%rip),%rsi
22b8(5): mov $0x5,%edx
22bd(2): xor %edi,%edi
22bf(5): call 0xfffff371(%rip)
22c4(3): mov %rax,%rbx
22c7(5): call 0xfffff2e9(%rip)
22cc(2): mov (%rax),%esi
22ce(3): mov %rbx,%rdx
22d1(5): mov $0x1,%edi
22d6(2): xor %eax,%eax
22d8(5): call 0xfffff538(%rip)
22dd(2): xor %edi,%edi
22df(5): call 0xc81(%rip)
22e4(7): lea 0x517e(%rip),%rsi
22eb(2): xor %edi,%edi
22ed(5): mov $0x5,%edx
22f2(5): call 0xfffff33e(%rip)
22f7(2): xor %esi,%esi
22f9(3): mov %rax,%rdx
22fc(2): xor %edi,%edi
22fe(2): xor %eax,%eax
2300(5): call 0xfffff510(%rip)
2305(5): jmp 0xfffff67c(%rip)
230a(7): lea 0x518d(%rip),%rsi
2311(5): mov $0x5,%edx
2316(2): xor %edi,%edi
2318(5): call 0xfffff318(%rip)
231d(3): mov %rax,%rbx
2320(5): call 0xfffff290(%rip)
2325(2): mov (%rax),%esi
2327(3): mov %rbx,%rdx
232a(5): mov $0x1,%edi
232f(2): xor %eax,%eax
2331(5): call 0xfffff4df(%rip)
2336(5): mov 0x38(%rsp),%rdx
233b(5): mov $0x3,%esi
2340(2): xor %edi,%edi
2342(5): call 0x3c6e(%rip)
2347(3): mov %rax,%rbx
234a(5): call 0xfffff266(%rip)
234f(2): mov (%rax),%esi
2351(7): lea 0x5cec(%rip),%rdx
2358(3): mov %rbx,%rcx
235b(5): mov $0x1,%edi
2360(2): xor %eax,%eax
2362(5): call 0xfffff4ae(%rip)
2367(5): mov 0x8(%rbx,%rax,8),%rdi
236c(5): call 0x3e14(%rip)
2371(7): lea 0x5107(%rip),%rsi
2378(3): mov %rax,%rbx
237b(5): mov $0x5,%edx
2380(2): xor %edi,%edi
2382(5): call 0xfffff2ae(%rip)
2387(2): xor %edi,%edi
2389(3): mov %rax,%rdx
238c(3): mov %rbx,%rcx
238f(2): xor %esi,%esi
2391(2): xor %eax,%eax
2393(5): call 0xfffff47d(%rip)
2398(5): mov $0x1,%edi
239d(5): call 0xbc3(%rip)
23a2(5): call 0xfffff2be(%rip)
23a7(5): mov $0xa,%esi
23ac(3): mov %r12,%rdi
23af(5): call 0xfffff2f1(%rip)
23b4(3): add $0x1,%eax
23b7(6): jnz 0xfffffe79(%rip)
23bd(7): lea 0x50da(%rip),%rsi
23c4(5): mov $0x5,%edx
23c9(2): xor %edi,%edi
23cb(5): call 0xfffff265(%rip)
23d0(3): mov %rax,%rbx
23d3(5): call 0xfffff1dd(%rip)
23d8(2): mov (%rax),%esi
23da(3): mov %rbx,%rdx
23dd(5): mov $0x1,%edi
23e2(2): xor %eax,%eax
23e4(5): call 0xfffff42c(%rip)
23e9(7): nop 0x0(%rax)
23f0(2): xor %ebp,%ebp
23f2(3): mov %rdx,%r9
23f5(1): pop %rsi
23f6(3): mov %rsp,%rdx
23f9(4): and $0xfffffff0,%rsp
23fd(1): push %rax
23fe(1): push %rsp
23ff(7): lea 0x4eda(%rip),%r8
2406(7): lea 0x4e63(%rip),%rcx
240d(7): lea 0xfffff4ac(%rip),%rdi
2414(6): call 0x208bbe(%rip)
241a(1): hlt 

"_start" :
23f0(2): xor %ebp,%ebp
23f2(3): mov %rdx,%r9
23f5(1): pop %rsi
23f6(3): mov %rsp,%rdx
23f9(4): and $0xfffffff0,%rsp
23fd(1): push %rax
23fe(1): push %rsp
23ff(7): lea 0x4eda(%rip),%r8
2406(7): lea 0x4e63(%rip),%rcx
240d(7): lea 0xfffff4ac(%rip),%rdi
2414(6): call 0x208bbe(%rip)
241a(1): hlt 

"deregister_tm_clones" :
2420(7): lea 0x208c59(%rip),%rdi
2427(1): push %rbp
2428(7): lea 0x208c51(%rip),%rax
242f(3): cmp %rdi,%rax
2432(3): mov %rsp,%rbp
2435(2): jz 0x1b(%rip)
2437(7): mov 0x208b92(%rip),%rax
243e(3): test %rax,%rax
2441(2): jz 0xf(%rip)
2443(1): pop %rbp
2444(2): jmp %rax
2446(a): nop 0x0(%rax,%rax,1)
2450(1): pop %rbp
2451(1): ret near (%rsp)

"register_tm_clones" :
2460(7): lea 0x208c19(%rip),%rdi
2467(7): lea 0x208c12(%rip),%rsi
246e(1): push %rbp
246f(3): sub %rdi,%rsi
2472(3): mov %rsp,%rbp
2475(4): sar $0x3,%rsi
2479(3): mov %rsi,%rax
247c(4): shr $0x3f,%rax
2480(3): add %rax,%rsi
2483(3): sar $0x1,%rsi
2486(2): jz 0x1a(%rip)
2488(7): mov 0x208b59(%rip),%rax
248f(3): test %rax,%rax
2492(2): jz 0xe(%rip)
2494(1): pop %rbp
2495(2): jmp %rax
2497(9): nop 0x0(%rax,%rax,1)
24a0(1): pop %rbp
24a1(1): ret near (%rsp)

"__do_global_dtors_aux" :
24b0(7): cmp $0x0,0x208c11(%rip)
24b7(2): jnz 0x31(%rip)
24b9(8): cmp $0x0,0x208b2f(%rip)
24c1(1): push %rbp
24c2(3): mov %rsp,%rbp
24c5(2): jz 0xe(%rip)
24c7(7): mov 0x208b3a(%rip),%rdi
24ce(5): call 0xfffff3e2(%rip)
24d3(5): call 0xffffff4d(%rip)
24d8(7): mov $0x1,0x208be9(%rip)
24df(1): pop %rbp
24e0(1): ret near (%rsp)
24e1(7): nop 0x0(%rax)
24e8(2): REP ret near (%rsp)

"frame_dummy" :
24f0(1): push %rbp
24f1(3): mov %rsp,%rbp
24f4(1): pop %rbp
24f5(5): jmp 0xffffff6b(%rip)

"base64_length_wrapper" :
2500(3): add $0x2,%edi
2503(5): mov $0x55555556,%edx
2508(2): mov %edi,%eax
250a(3): sar $0x1f,%edi
250d(2): imul %eax,%edx,%edx
250f(2): sub %edi,%edx
2511(7): lea 0x0(,%rdx,4),%eax
2518(1): ret near (%rsp)

"base32_length_wrapper" :
2520(3): add $0x4,%edi
2523(5): mov $0x66666667,%edx
2528(2): mov %edi,%eax
252a(3): sar $0x1f,%edi
252d(2): imul %eax,%edx,%edx
252f(2): sar $0x1,%edx
2531(2): sub %edi,%edx
2533(7): lea 0x0(,%rdx,8),%eax
253a(1): ret near (%rsp)

"isbase32hex" :
2540(3): lea 0xffffffd0(%rdi),%eax
2543(2): cmp $0x9,%al
2545(3): setbe %al
2548(3): sub $0x41,%edi
254b(4): cmp $0x15,%dil
254f(3): setbe %dl
2552(2): or %edx,%eax
2554(1): ret near (%rsp)

"isbase16" :
2560(3): lea 0xffffffd0(%rdi),%eax
2563(2): cmp $0x9,%al
2565(3): setbe %al
2568(3): sub $0x41,%edi
256b(4): cmp $0x5,%dil
256f(3): setbe %dl
2572(2): or %edx,%eax
2574(1): ret near (%rsp)

"base16_length" :
2580(3): lea 0x0(%rdi,%rdi,1),%eax
2583(1): ret near (%rsp)

"base16_encode" :
2590(3): test %rsi,%rsi
2593(2): jz 0x38(%rip)
2595(7): lea 0x57a4(%rip),%r8
259c(3): add %rdi,%rsi
259f(1): nop 
25a0(3): movzx (%rdi),%eax
25a3(4): add $0x1,%rdi
25a7(4): add $0x2,%rdx
25ab(2): mov %eax,%ecx
25ad(3): and $0xf,%eax
25b0(3): shr $0x4,%cl
25b3(5): movzx 0x0(%r8,%rax,1),%eax
25b8(3): and $0xf,%ecx
25bb(5): movzx 0x0(%r8,%rcx,1),%ecx
25c0(3): mov %cl,0xfffffffe(%rdx)
25c3(3): cmp %rsi,%rdi
25c6(3): mov %al,0xffffffff(%rdx)
25c9(2): jnz 0xffffffd7(%rip)
25cb(2): REP ret near (%rsp)

"z85_length" :
25d0(3): lea 0x0(%rdi,%rdi,4),%edx
25d3(3): lea 0x3(%rdx),%eax
25d6(2): test %edx,%edx
25d8(3): cmovns %edx,%eax
25db(3): sar $0x2,%eax
25de(1): ret near (%rsp)

"isbase2" :
25e0(3): sub $0x30,%edi
25e3(4): cmp $0x1,%dil
25e7(3): setbe %al
25ea(1): ret near (%rsp)

"base2_length" :
25f0(7): lea 0x0(,%rdi,8),%eax
25f7(1): ret near (%rsp)

"base2msbf_encode" :
2600(3): test %rsi,%rsi
2603(2): jz 0x3f(%rip)
2605(4): lea 0x0(%rdi,%rsi,1),%r8
2609(7): nop 0x0(%rax)
2610(3): movzx (%rdi),%ecx
2613(4): lea 0x8(%rdx),%rsi
2617(9): nop 0x0(%rax,%rax,1)
2620(2): mov %ecx,%eax
2622(4): add $0x1,%rdx
2626(2): add %ecx,%ecx
2628(3): shr $0x7,%al
262b(3): add $0x30,%eax
262e(3): cmp %rdx,%rsi
2631(3): mov %al,0xffffffff(%rdx)
2634(2): jnz 0xffffffec(%rip)
2636(4): add $0x1,%rdi
263a(3): mov %rsi,%rdx
263d(3): cmp %rdi,%r8
2640(2): jnz 0xffffffd0(%rip)
2642(2): REP ret near (%rsp)

"base2lsbf_encode" :
2650(3): test %rsi,%rsi
2653(2): jz 0x3f(%rip)
2655(4): lea 0x0(%rdi,%rsi,1),%r8
2659(7): nop 0x0(%rax)
2660(3): movzx (%rdi),%ecx
2663(4): lea 0x8(%rdx),%rsi
2667(9): nop 0x0(%rax,%rax,1)
2670(2): mov %ecx,%eax
2672(4): add $0x1,%rdx
2676(2): shr $0x1,%cl
2678(3): and $0x1,%eax
267b(3): add $0x30,%eax
267e(3): cmp %rdx,%rsi
2681(3): mov %al,0xffffffff(%rdx)
2684(2): jnz 0xffffffec(%rip)
2686(4): add $0x1,%rdi
268a(3): mov %rsi,%rdx
268d(3): cmp %rdi,%r8
2690(2): jnz 0xffffffd0(%rip)
2692(2): REP ret near (%rsp)

"isbase64url" :
26a0(4): cmp $0x2d,%dil
26a4(3): setz %al
26a7(4): cmp $0x5f,%dil
26ab(3): setz %dl
26ae(2): or %dl,%al
26b0(2): jnz 0x18(%rip)
26b2(2): mov %edi,%edx
26b4(3): and $0xfb,%edx
26b7(3): cmp $0x2b,%dl
26ba(2): jz 0xe(%rip)
26bc(4): movsx %dil,%edi
26c0(5): jmp 0x1900(%rip)
26c5(3): nop (%rax)
26c8(2): REP ret near (%rsp)

"base64url_encode" :
26d0(1): push %rbp
26d1(1): push %rbx
26d2(3): mov %rcx,%rbp
26d5(3): mov %rdx,%rbx
26d8(4): sub $0x8,%rsp
26dc(5): call 0x1694(%rip)
26e1(3): test %rbp,%rbp
26e4(2): jz 0x2f(%rip)
26e6(4): lea 0x0(%rbx,%rbp,1),%rcx
26ea(2): jmp 0x16(%rip)
26ec(4): nop 0x0(%rax)
26f0(2): cmp $0x2f,%al
26f2(2): jnz 0x5(%rip)
26f4(3): mov $0x5f,(%rbx)
26f7(4): add $0x1,%rbx
26fb(3): cmp %rcx,%rbx
26fe(2): jz 0x15(%rip)
2700(3): movzx (%rbx),%eax
2703(2): cmp $0x2b,%al
2705(2): jnz 0xffffffeb(%rip)
2707(3): mov $0x2d,(%rbx)
270a(4): add $0x1,%rbx
270e(3): cmp %rcx,%rbx
2711(2): jnz 0xffffffef(%rip)
2713(4): add $0x8,%rsp
2717(1): pop %rbx
2718(1): pop %rbp
2719(1): ret near (%rsp)

"z85_decode_ctx_init" :
2720(1): push %rbx
2721(3): mov %rdi,%rbx
2724(8): mov $0x1400,0x18(%rdi)
272c(5): mov $0x1400,%edi
2731(5): call 0x408f(%rip)
2736(7): mov $0x1,(%rbx)
273d(4): mov %rax,0x10(%rbx)
2741(1): pop %rbx
2742(1): ret near (%rsp)

"base2_decode_ctx_init" :
2750(1): push %rbx
2751(3): mov %rdi,%rbx
2754(8): mov $0x1400,0x18(%rdi)
275c(5): mov $0x1400,%edi
2761(5): call 0x405f(%rip)
2766(7): mov $0x0,(%rbx)
276d(4): mov %rax,0x10(%rbx)
2771(1): pop %rbx
2772(1): ret near (%rsp)

"base16_decode_ctx_init" :
2780(1): push %rbx
2781(3): mov %rdi,%rbx
2784(8): mov $0x1400,0x18(%rdi)
278c(5): mov $0x1400,%edi
2791(5): call 0x402f(%rip)
2796(4): mov $0x0,0x5(%rbx)
279a(4): mov %rax,0x10(%rbx)
279e(6): mov $0x1,(%rbx)
27a4(1): pop %rbx
27a5(1): ret near (%rsp)

"isz85" :
27b0(4): cmp $0x5a,%dil
27b4(2): jnle 0x34(%rip)
27b6(4): cmp $0x41,%dil
27ba(2): jnl 0x35(%rip)
27bc(3): lea 0xffffffd0(%rdi),%eax
27bf(2): cmp $0x9,%al
27c1(2): jbe 0x2e(%rip)
27c3(4): movsx %dil,%esi
27c7(7): lea 0x4b56(%rip),%rdi
27ce(4): sub $0x8,%rsp
27d2(5): call 0xffffeebe(%rip)
27d7(3): test %rax,%rax
27da(3): setnz %al
27dd(4): add $0x8,%rsp
27e1(1): ret near (%rsp)
27e2(6): nop 0x0(%rax,%rax,1)
27e8(3): lea 0xffffff9f(%rdi),%eax
27eb(2): cmp $0x19,%al
27ed(2): jnbe 0xffffffd6(%rip)
27ef(5): mov $0x1,%eax
27f4(1): ret near (%rsp)

"base32_decode_ctx_wrapper" :
2800(1): push %rbx
2801(3): mov %rdi,%rbx
2804(4): lea 0x4(%rdi),%rdi
2808(5): call 0x10e8(%rip)
280d(3): mov 0x4(%rbx),%edx
2810(2): mov %edx,(%rbx)
2812(1): pop %rbx
2813(1): ret near (%rsp)

"base32hex_decode_ctx_init_wrapper" :
2820(1): push %rbx
2821(3): mov %rdi,%rbx
2824(4): lea 0x4(%rdi),%rdi
2828(5): call 0x10b8(%rip)
282d(8): mov $0x1400,0x18(%rbx)
2835(5): mov $0x1400,%edi
283a(5): call 0x3f86(%rip)
283f(4): mov %rax,0x10(%rbx)
2843(1): pop %rbx
2844(1): ret near (%rsp)

"base32_decode_ctx_init_wrapper" :
2850(4): add $0x4,%rdi
2854(5): jmp 0x108c(%rip)

"base64_decode_ctx_wrapper" :
2860(1): push %rbx
2861(3): mov %rdi,%rbx
2864(4): lea 0x4(%rdi),%rdi
2868(5): call 0x1788(%rip)
286d(3): mov 0x4(%rbx),%edx
2870(2): mov %edx,(%rbx)
2872(1): pop %rbx
2873(1): ret near (%rsp)

"base64url_decode_ctx_init_wrapper" :
2880(1): push %rbx
2881(3): mov %rdi,%rbx
2884(4): lea 0x4(%rdi),%rdi
2888(5): call 0x1758(%rip)
288d(8): mov $0x1400,0x18(%rbx)
2895(5): mov $0x1400,%edi
289a(5): call 0x3f26(%rip)
289f(4): mov %rax,0x10(%rbx)
28a3(1): pop %rbx
28a4(1): ret near (%rsp)

"base64_decode_ctx_init_wrapper" :
28b0(4): add $0x4,%rdi
28b4(5): jmp 0x172c(%rip)

"base16_decode_ctx" :
28c0(3): test %rdx,%rdx
28c3(7): mov $0x0,(%r8)
28ca(2): jz 0x76(%rip)
28cc(4): lea 0x1(%rsi),%r9
28d0(5): lea 0x1(%rsi,%rdx,1),%r10
28d5(2): jmp 0x39(%rip)
28d7(9): nop 0x0(%rax,%rax,1)
28e0(4): movzx 0x5(%rdi),%edx
28e4(3): sub $0x37,%eax
28e7(2): test %dl,%dl
28e9(2): jz 0x49(%rip)
28eb(4): movzx 0x4(%rdi),%esi
28ef(4): add $0x1,(%r8)
28f3(4): add $0x1,%rcx
28f7(3): shl/sal $0x4,%esi
28fa(2): add %esi,%eax
28fc(3): mov %al,0xffffffff(%rcx)
28ff(3): xor $0x1,%edx
2902(3): mov %dl,0x5(%rdi)
2905(4): add $0x1,%r9
2909(3): cmp %r9,%r10
290c(2): jz 0x44(%rip)
290e(5): movsx 0xffffffff(%r9),%eax
2913(2): cmp $0xa,%al
2915(2): jz 0xfffffff0(%rip)
2917(3): lea 0xffffffbf(%rax),%edx
291a(3): cmp $0x5,%dl
291d(2): jbe 0xffffffc3(%rip)
291f(3): lea 0xffffffd0(%rax),%edx
2922(3): cmp $0x9,%dl
2925(2): jnbe 0x3b(%rip)
2927(4): movzx 0x5(%rdi),%edx
292b(3): sub $0x30,%eax
292e(2): test %dl,%dl
2930(2): jnz 0xffffffbb(%rip)
2932(3): mov %al,0x4(%rdi)
2935(2): jmp 0xffffffca(%rip)
2937(9): nop 0x0(%rax,%rax,1)
2940(4): movzx 0x5(%rdi),%eax
2944(3): xor $0x1,%eax
2947(1): ret near (%rsp)
2948(8): nop 0x0(%rax,%rax,1)
2950(5): mov $0x1,%eax
2955(1): ret near (%rsp)
2956(a): nop 0x0(%rax,%rax,1)
2960(2): xor %eax,%eax
2962(1): ret near (%rsp)

"z85_decode_ctx" :
2970(3): test %rdx,%rdx
2973(7): mov $0x0,(%r8)
297a(2): jnz 0xe(%rip)
297c(3): mov 0x4(%rdi),%eax
297f(2): test %eax,%eax
2981(3): setle %al
2984(1): ret near (%rsp)
2985(3): nop (%rax)
2988(4): lea 0x1(%rsi),%r9
298c(7): lea 0x52ed(%rip),%r10
2993(5): lea 0x1(%rsi,%rdx,1),%rsi
2998(2): jmp 0x15(%rip)
299a(6): nop 0x0(%rax,%rax,1)
29a0(4): add $0x1,%r9
29a4(3): cmp %rsi,%r9
29a7(6): jz 0xc8(%rip)
29ad(5): movzx 0xffffffff(%r9),%eax
29b2(2): cmp $0xa,%al
29b4(2): jz 0xffffffec(%rip)
29b6(3): lea 0xffffffdf(%rax),%edx
29b9(3): cmp $0x5c,%dl
29bc(6): jnbe 0xc4(%rip)
29c2(3): sub $0x21,%eax
29c5(2): cwde 
29c7(5): movzx 0x0(%r10,%rax,1),%edx
29cc(3): cmp $0xff,%dl
29cf(6): jz 0xb1(%rip)
29d5(4): movsxd 0x4(%rdi),%rax
29d9(4): lea 0x1(%rax),%r11d
29dd(4): cmp $0x5,%r11d
29e1(4): mov %r11d,0x4(%rdi)
29e5(4): mov %dl,0x8(%rdi,%rax,1)
29e9(2): jnz 0xffffffb7(%rip)
29eb(4): movzx 0x9(%rdi),%eax
29ef(5): movzx 0xa(%rdi),%r11d
29f4(4): movzx 0x8(%rdi),%edx
29f8(7): imul %r11d,$0x1c39,%r11d
29ff(6): imul %eax,$0x95eed,%eax
2a05(3): add %r11d,%eax
2a08(5): movzx 0xb(%rdi),%r11d
2a0d(4): imul %r11d,$0x55,%r11d
2a11(3): add %r11d,%eax
2a14(5): movzx 0xc(%rdi),%r11d
2a19(3): add %eax,%r11d
2a1c(3): lea 0xffffffad(%rdx),%eax
2a1f(2): cmp $0x1,%al
2a21(2): jbe 0x5f(%rip)
2a23(3): cmp $0x52,%dl
2a26(2): jnz 0xb(%rip)
2a28(7): cmp $0xdd7f4d,%r11d
2a2f(2): jnle 0x51(%rip)
2a31(3): movzx %dl,%eax
2a34(4): add $0x1,%r9
2a38(4): add $0x4,(%r8)
2a3c(6): imul %eax,$0x31c84b1,%eax
2a42(4): add $0x4,%rcx
2a46(7): mov $0x0,0x4(%rdi)
2a4d(3): add %r11d,%eax
2a50(2): mov %eax,%edx
2a52(3): mov %ah,0xfffffffe(%rcx)
2a55(3): mov %al,0xffffffff(%rcx)
2a58(3): shr $0x18,%edx
2a5b(3): mov %dl,0xfffffffc(%rcx)
2a5e(2): mov %eax,%edx
2a60(3): shr $0x10,%edx
2a63(3): mov %dl,0xfffffffd(%rcx)
2a66(3): cmp %rsi,%r9
2a69(6): jnz 0xffffff44(%rip)
2a6f(3): mov 0x4(%rdi),%eax
2a72(2): mov %eax,(%rdi)
2a74(5): mov $0x1,%eax
2a79(1): ret near (%rsp)
2a7a(6): nop 0x0(%rax,%rax,1)
2a80(2): xor %eax,%eax
2a82(1): ret near (%rsp)

"base2lsbf_decode_ctx" :
2a90(3): test %rdx,%rdx
2a93(3): mov %rcx,%r10
2a96(7): mov $0x0,(%r8)
2a9d(2): jz 0x6b(%rip)
2a9f(4): lea 0x1(%rsi),%r9
2aa3(5): lea 0x1(%rsi,%rdx,1),%rsi
2aa8(8): nop 0x0(%rax,%rax,1)
2ab0(5): movzx 0xffffffff(%r9),%eax
2ab5(2): cmp $0xa,%al
2ab7(2): jz 0x3e(%rip)
2ab9(3): lea 0xffffffd0(%rax),%edx
2abc(3): cmp $0x1,%dl
2abf(2): jnbe 0x51(%rip)
2ac1(2): cmp $0x31,%al
2ac3(2): mov (%rdi),%ecx
2ac5(3): setz %al
2ac8(3): movzx %al,%eax
2acb(2): shl/sal %cl,%eax
2acd(3): or 0x4(%rdi),%eax
2ad0(3): add $0x1,%ecx
2ad3(3): cmp $0x8,%ecx
2ad6(2): mov %ecx,(%rdi)
2ad8(3): mov %eax,0x4(%rdi)
2adb(2): jnz 0x1a(%rip)
2add(3): mov %al,(%r10)
2ae0(7): mov $0x0,0x4(%rdi)
2ae7(4): add $0x1,%r10
2aeb(4): add $0x1,(%r8)
2aef(6): mov $0x0,(%rdi)
2af5(4): add $0x1,%r9
2af9(3): cmp %r9,%rsi
2afc(2): jnz 0xffffffb4(%rip)
2afe(5): mov $0x1,%eax
2b03(1): ret near (%rsp)
2b04(4): nop 0x0(%rax)
2b08(2): mov (%rdi),%eax
2b0a(2): test %eax,%eax
2b0c(3): setz %al
2b0f(1): ret near (%rsp)
2b10(2): xor %eax,%eax
2b12(1): ret near (%rsp)

"base2msbf_decode_ctx" :
2b20(3): test %rdx,%rdx
2b23(3): mov %rcx,%r10
2b26(7): mov $0x0,(%r8)
2b2d(6): jz 0x8b(%rip)
2b33(4): lea 0x1(%rsi),%r9
2b37(5): lea 0x1(%rsi,%rdx,1),%rsi
2b3c(2): jmp 0x1c(%rip)
2b3e(2): nop 
2b40(3): shl/sal $0x7,%eax
2b43(6): mov $0x7,(%rdi)
2b49(3): or %r11d,%eax
2b4c(3): mov %eax,0x4(%rdi)
2b4f(4): add $0x1,%r9
2b53(3): cmp %rsi,%r9
2b56(2): jz 0x57(%rip)
2b58(5): movzx 0xffffffff(%r9),%edx
2b5d(3): cmp $0xa,%dl
2b60(2): jz 0xffffffef(%rip)
2b62(3): lea 0xffffffd0(%rdx),%eax
2b65(2): cmp $0x1,%al
2b67(2): jnbe 0x59(%rip)
2b69(2): mov (%rdi),%ecx
2b6b(2): xor %eax,%eax
2b6d(3): cmp $0x31,%dl
2b70(3): setz %al
2b73(4): mov 0x4(%rdi),%r11d
2b77(2): test %ecx,%ecx
2b79(2): jz 0xffffffc7(%rip)
2b7b(3): sub $0x1,%ecx
2b7e(2): shl/sal %cl,%eax
2b80(2): mov %ecx,(%rdi)
2b82(3): or %r11d,%eax
2b85(2): test %ecx,%ecx
2b87(3): mov %eax,0x4(%rdi)
2b8a(2): jnz 0xffffffc5(%rip)
2b8c(4): add $0x1,%r9
2b90(3): mov %al,(%r10)
2b93(7): mov $0x0,0x4(%rdi)
2b9a(4): add $0x1,%r10
2b9e(4): add $0x1,(%r8)
2ba2(3): cmp %rsi,%r9
2ba5(6): mov $0x0,(%rdi)
2bab(2): jnz 0xffffffad(%rip)
2bad(5): mov $0x1,%eax
2bb2(1): ret near (%rsp)
2bb3(5): nop 0x0(%rax,%rax,1)
2bb8(2): mov (%rdi),%eax
2bba(2): test %eax,%eax
2bbc(3): setz %al
2bbf(1): ret near (%rsp)
2bc0(2): xor %eax,%eax
2bc2(1): ret near (%rsp)

"z85_encode" :
2bd0(2): push %r13
2bd2(2): push %r12
2bd4(1): push %rbp
2bd5(1): push %rbx
2bd6(4): sub $0x18,%rsp
2bda(9): mov $0x28,%rax
2be3(5): mov %rax,0x8(%rsp)
2be8(2): xor %eax,%eax
2bea(3): test %rsi,%rsi
2bed(6): jz 0xd7(%rip)
2bf3(3): movzx (%rdi),%eax
2bf6(4): lea 0x1(%rdi),%r9
2bfa(3): add %rdi,%rsi
2bfd(3): mov %rdx,%r11
2c00(3): xor %r10d,%r10d
2c03(5): mov $0xc0c0c0c1,%edi
2c08(7): lea 0x50d1(%rip),%rbx
2c0f(4): mov %al,0x4(%rsp)
2c13(5): mov $0x1,%eax
2c18(2): jmp 0xb(%rip)
2c1a(6): nop 0x0(%rax,%rax,1)
2c20(3): movsxd %edx,%rax
2c23(3): cmp %r9,%rsi
2c26(6): jz 0x9a(%rip)
2c2c(4): add $0x1,%r9
2c30(5): movzx 0xffffffff(%r9),%r8d
2c35(3): lea 0x1(%rax),%edx
2c38(3): cmp $0x4,%edx
2c3b(5): mov %r8b,0x4(%rsp,%rax,1)
2c40(2): jnz 0xffffffe0(%rip)
2c42(5): movzx 0x4(%rsp),%eax
2c47(6): movzx 0x5(%rsp),%r8d
2c4d(3): mov %r11,%r13
2c50(4): lea 0x4(%r10),%rbp
2c54(4): lea 0xffffffff(%r10),%r12
2c58(3): sub %r10,%r13
2c5b(4): shl/sal $0x10,%r8d
2c5f(3): shl/sal $0x18,%eax
2c62(4): lea 0x0(%rax,%r8,1),%eax
2c66(6): movzx 0x6(%rsp),%r8d
2c6c(4): shl/sal $0x8,%r8d
2c70(3): add %eax,%r8d
2c73(5): movzx 0x7(%rsp),%eax
2c78(3): add %eax,%r8d
2c7b(3): mov %r8d,%eax
2c7e(2): mul %eax,%edi,%edx
2c80(3): shr $0x6,%edx
2c83(3): cmp %rcx,%rbp
2c86(2): jnb 0x15(%rip)
2c88(3): imul %edx,$0x55,%eax
2c8b(3): sub %eax,%r8d
2c8e(3): movsxd %r8d,%r8
2c91(5): movzx 0x0(%rbx,%r8,1),%eax
2c96(5): mov %al,0x0(%r13,%rbp,1)
2c9b(4): sub $0x1,%rbp
2c9f(3): mov %edx,%r8d
2ca2(3): cmp %r12,%rbp
2ca5(2): jnz 0xffffffd6(%rip)
2ca7(4): add $0x5,%r11
2cab(4): add $0x5,%r10
2caf(2): xor %edx,%edx
2cb1(5): jmp 0xffffff6f(%rip)
2cb6(a): nop 0x0(%rax,%rax,1)
2cc0(2): test %eax,%eax
2cc2(2): jnz 0x1d(%rip)
2cc4(5): mov 0x8(%rsp),%rax
2cc9(9): xor $0x28,%rax
2cd2(2): jnz 0x31(%rip)
2cd4(4): add $0x18,%rsp
2cd8(1): pop %rbx
2cd9(1): pop %rbp
2cda(2): pop %r12
2cdc(2): pop %r13
2cde(1): ret near (%rsp)
2cdf(7): lea 0x4852(%rip),%rsi
2ce6(5): mov $0x5,%edx
2ceb(2): xor %edi,%edi
2ced(5): call 0xffffe943(%rip)
2cf2(2): xor %esi,%esi
2cf4(3): mov %rax,%rdx
2cf7(5): mov $0x1,%edi
2cfc(2): xor %eax,%eax
2cfe(5): call 0xffffeb12(%rip)
2d03(5): call 0xffffe95d(%rip)

"base32hex_encode" :
2d10(1): push %rbp
2d11(1): push %rbx
2d12(3): mov %rcx,%rbp
2d15(3): mov %rdx,%rbx
2d18(4): sub $0x8,%rsp
2d1c(5): call 0x8f4(%rip)
2d21(3): test %rbp,%rbp
2d24(2): jz 0x3c(%rip)
2d26(3): movsx (%rbx),%eax
2d29(3): lea 0xffffffce(%rax),%edx
2d2c(3): cmp $0x28,%dl
2d2f(2): jnbe 0x38(%rip)
2d31(4): lea 0x0(%rbx,%rbp,1),%rcx
2d35(7): lea 0x5064(%rip),%rsi
2d3c(2): jmp 0xf(%rip)
2d3e(2): nop 
2d40(3): movsx (%rbx),%eax
2d43(3): lea 0xffffffce(%rax),%edx
2d46(3): cmp $0x28,%dl
2d49(2): jnbe 0x1e(%rip)
2d4b(3): sub $0x32,%eax
2d4e(4): add $0x1,%rbx
2d52(2): cwde 
2d54(4): movzx 0x0(%rsi,%rax,1),%eax
2d58(3): mov %al,0xffffffff(%rbx)
2d5b(3): cmp %rcx,%rbx
2d5e(2): jnz 0xffffffe2(%rip)
2d60(4): add $0x8,%rsp
2d64(1): pop %rbx
2d65(1): pop %rbp
2d66(1): ret near (%rsp)
2d67(7): lea 0x4ef2(%rip),%rcx
2d6e(7): lea 0x47fb(%rip),%rsi
2d75(7): lea 0x45c0(%rip),%rdi
2d7c(5): mov $0x1c2,%edx
2d81(5): call 0xffffe94f(%rip)

"base64url_decode_ctx_wrapper" :
2d90(2): push %r14
2d92(2): push %r13
2d94(3): mov %rsi,%r14
2d97(2): push %r12
2d99(1): push %rbp
2d9a(3): mov %rdx,%r13
2d9d(1): push %rbx
2d9e(3): mov %rdi,%rbx
2da1(3): mov %rcx,%rbp
2da4(4): cmp 0x18(%rbx),%rdx
2da8(3): mov %r8,%r12
2dab(4): mov 0x10(%rdi),%rdi
2daf(6): jnbe 0xa1(%rip)
2db5(3): mov %r14,%rsi
2db8(3): mov %r13,%rdx
2dbb(5): call 0xffffe9a5(%rip)
2dc0(3): test %r13,%r13
2dc3(4): mov 0x10(%rbx),%rsi
2dc7(2): jz 0x4a(%rip)
2dc9(3): movzx (%rsi),%eax
2dcc(4): lea 0x0(%rsi,%r13,1),%rcx
2dd0(2): mov %eax,%edx
2dd2(3): and $0xfb,%edx
2dd5(3): cmp $0x2b,%dl
2dd8(2): jnz 0x25(%rip)
2dda(2): jmp 0x5e(%rip)
2ddc(4): nop 0x0(%rax)
2de0(2): cmp $0x5f,%al
2de2(2): jnz 0x5(%rip)
2de4(3): mov $0x2f,(%rsi)
2de7(4): add $0x1,%rsi
2deb(3): cmp %rcx,%rsi
2dee(2): jz 0x1f(%rip)
2df0(3): movzx (%rsi),%eax
2df3(2): mov %eax,%edx
2df5(3): and $0xfb,%edx
2df8(3): cmp $0x2b,%dl
2dfb(2): jz 0x3d(%rip)
2dfd(2): cmp $0x2d,%al
2dff(2): jnz 0xffffffe1(%rip)
2e01(3): mov $0x2b,(%rsi)
2e04(4): add $0x1,%rsi
2e08(3): cmp %rcx,%rsi
2e0b(2): jnz 0xffffffe5(%rip)
2e0d(4): mov 0x10(%rbx),%rsi
2e11(4): lea 0x4(%rbx),%rdi
2e15(3): mov %r13,%rdx
2e18(3): mov %r12,%r8
2e1b(3): mov %rbp,%rcx
2e1e(5): call 0x11d2(%rip)
2e23(3): mov 0x4(%rbx),%edx
2e26(2): mov %edx,(%rbx)
2e28(1): pop %rbx
2e29(1): pop %rbp
2e2a(2): pop %r12
2e2c(2): pop %r13
2e2e(2): pop %r14
2e30(1): ret near (%rsp)
2e31(7): nop 0x0(%rax)
2e38(1): pop %rbx
2e39(8): mov $0x0,(%r12)
2e41(2): xor %eax,%eax
2e43(1): pop %rbp
2e44(2): pop %r12
2e46(2): pop %r13
2e48(2): pop %r14
2e4a(1): ret near (%rsp)
2e4b(5): nop 0x0(%rax,%rax,1)
2e50(4): lea 0x0(%rdx,%rdx,1),%rsi
2e54(3): test %rsi,%rsi
2e57(4): mov %rsi,0x18(%rbx)
2e5b(2): js 0x13(%rip)
2e5d(5): call 0x39c3(%rip)
2e62(3): mov %rax,%rdi
2e65(4): mov %rax,0x10(%rbx)
2e69(5): jmp 0xffffff4c(%rip)
2e6e(5): call 0x3ba2(%rip)

"base32hex_decode_ctx_wrapper" :
2e80(1): push %rbp
2e81(1): push %rbx
2e82(3): mov %rsi,%rbp
2e85(3): mov %rdi,%rbx
2e88(4): sub $0x28,%rsp
2e8c(4): cmp 0x18(%rdi),%rdx
2e90(4): mov 0x10(%rdi),%rax
2e94(2): jnbe 0x7c(%rip)
2e96(3): test %rdx,%rdx
2e99(2): jz 0x59(%rip)
2e9b(3): xor %r9d,%r9d
2e9e(7): lea 0x4ebb(%rip),%r11
2ea5(2): jmp 0x21(%rip)
2ea7(9): nop 0x0(%rax,%rax,1)
2eb0(3): lea 0xffffffbf(%rsi),%edi
2eb3(4): cmp $0x15,%dil
2eb7(2): jbe 0x1f(%rip)
2eb9(4): mov %sil,0x0(%rax,%r9,1)
2ebd(4): add $0x1,%r9
2ec1(3): cmp %r9,%rdx
2ec4(2): jz 0x2a(%rip)
2ec6(6): movsx 0x0(%rbp,%r9,1),%esi
2ecc(4): lea 0xffffffd0(%rsi),%r10d
2ed0(4): cmp $0x9,%r10b
2ed4(2): jnbe 0xffffffdc(%rip)
2ed6(3): sub $0x30,%esi
2ed9(3): movsxd %esi,%rsi
2edc(5): movzx 0x0(%r11,%rsi,1),%esi
2ee1(4): mov %sil,0x0(%rax,%r9,1)
2ee5(4): add $0x1,%r9
2ee9(3): cmp %r9,%rdx
2eec(2): jnz 0xffffffda(%rip)
2eee(4): mov 0x10(%rbx),%rax
2ef2(4): lea 0x4(%rbx),%rdi
2ef6(3): mov %rax,%rsi
2ef9(5): call 0x9f7(%rip)
2efe(3): mov 0x4(%rbx),%edx
2f01(2): mov %edx,(%rbx)
2f03(4): add $0x28,%rsp
2f07(1): pop %rbx
2f08(1): pop %rbp
2f09(1): ret near (%rsp)
2f0a(6): nop 0x0(%rax,%rax,1)
2f10(4): lea 0x0(%rdx,%rdx,1),%rsi
2f14(5): mov %r8,0x18(%rsp)
2f19(5): mov %rcx,0x10(%rsp)
2f1e(5): mov %rdx,0x8(%rsp)
2f23(3): test %rsi,%rsi
2f26(4): mov %rsi,0x18(%rdi)
2f2a(2): js 0x22(%rip)
2f2c(3): mov %rax,%rdi
2f2f(5): call 0x38f1(%rip)
2f34(5): mov 0x8(%rsp),%rdx
2f39(4): mov %rax,0x10(%rbx)
2f3d(5): mov 0x10(%rsp),%rcx
2f42(5): mov 0x18(%rsp),%r8
2f47(5): jmp 0xffffff4f(%rip)
2f4c(5): call 0x3ac4(%rip)

"usage" :
2f60(2): push %r13
2f62(2): push %r12
2f64(5): mov $0x5,%edx
2f69(1): push %rbp
2f6a(1): push %rbx
2f6b(2): mov %edi,%ebp
2f6d(7): sub $0x88,%rsp
2f74(7): mov 0x20818d(%rip),%rbx
2f7b(9): mov $0x28,%rax
2f84(5): mov %rax,0x78(%rsp)
2f89(2): xor %eax,%eax
2f8b(2): test %edi,%edi
2f8d(2): jz 0x30(%rip)
2f8f(7): lea 0x45fa(%rip),%rsi
2f96(2): xor %edi,%edi
2f98(5): call 0xffffe698(%rip)
2f9d(7): mov 0x20811c(%rip),%rdi
2fa4(3): mov %rax,%rdx
2fa7(3): mov %rbx,%rcx
2faa(5): mov $0x1,%esi
2faf(2): xor %eax,%eax
2fb1(5): call 0xffffe8bf(%rip)
2fb6(2): mov %ebp,%edi
2fb8(5): call 0xffffe898(%rip)
2fbd(7): lea 0x4398(%rip),%rsi
2fc4(2): xor %edi,%edi
2fc6(5): call 0xffffe66a(%rip)
2fcb(3): mov %rbx,%rdx
2fce(3): mov %rax,%rsi
2fd1(5): mov $0x1,%edi
2fd6(2): xor %eax,%eax
2fd8(5): call 0xffffe818(%rip)
2fdd(7): mov 0x2080a4(%rip),%rbx
2fe4(7): lea 0x45cd(%rip),%rsi
2feb(5): mov $0x5,%edx
2ff0(2): xor %edi,%edi
2ff2(5): call 0xffffe63e(%rip)
2ff7(3): mov %rbx,%rsi
2ffa(3): mov %rax,%rdi
2ffd(5): call 0xffffe733(%rip)
3002(7): mov 0x20807f(%rip),%rbx
3009(7): lea 0x45f0(%rip),%rsi
3010(5): mov $0x5,%edx
3015(2): xor %edi,%edi
3017(5): call 0xffffe619(%rip)
301c(3): mov %rbx,%rsi
301f(3): mov %rax,%rdi
3022(5): call 0xffffe70e(%rip)
3027(7): mov 0x20805a(%rip),%rbx
302e(7): lea 0x4603(%rip),%rsi
3035(5): mov $0x5,%edx
303a(2): xor %edi,%edi
303c(5): call 0xffffe5f4(%rip)
3041(3): mov %rbx,%rsi
3044(3): mov %rax,%rdi
3047(5): call 0xffffe6e9(%rip)
304c(7): mov 0x208035(%rip),%rbx
3053(7): lea 0x462e(%rip),%rsi
305a(5): mov $0x5,%edx
305f(2): xor %edi,%edi
3061(5): call 0xffffe5cf(%rip)
3066(3): mov %rbx,%rsi
3069(3): mov %rax,%rdi
306c(5): call 0xffffe6c4(%rip)
3071(7): mov 0x208010(%rip),%rbx
3078(7): lea 0x4651(%rip),%rsi
307f(5): mov $0x5,%edx
3084(2): xor %edi,%edi
3086(5): call 0xffffe5aa(%rip)
308b(3): mov %rbx,%rsi
308e(3): mov %rax,%rdi
3091(5): call 0xffffe69f(%rip)
3096(7): mov 0x207feb(%rip),%rbx
309d(7): lea 0x4674(%rip),%rsi
30a4(5): mov $0x5,%edx
30a9(2): xor %edi,%edi
30ab(5): call 0xffffe585(%rip)
30b0(3): mov %rbx,%rsi
30b3(3): mov %rax,%rdi
30b6(5): call 0xffffe67a(%rip)
30bb(7): mov 0x207fc6(%rip),%rbx
30c2(7): lea 0x4697(%rip),%rsi
30c9(5): mov $0x5,%edx
30ce(2): xor %edi,%edi
30d0(5): call 0xffffe560(%rip)
30d5(3): mov %rbx,%rsi
30d8(3): mov %rax,%rdi
30db(5): call 0xffffe655(%rip)
30e0(7): mov 0x207fa1(%rip),%rbx
30e7(7): lea 0x46c2(%rip),%rsi
30ee(5): mov $0x5,%edx
30f3(2): xor %edi,%edi
30f5(5): call 0xffffe53b(%rip)
30fa(3): mov %rbx,%rsi
30fd(3): mov %rax,%rdi
3100(5): call 0xffffe630(%rip)
3105(7): mov 0x207f7c(%rip),%rbx
310c(7): lea 0x46dd(%rip),%rsi
3113(5): mov $0x5,%edx
3118(2): xor %edi,%edi
311a(5): call 0xffffe516(%rip)
311f(3): mov %rbx,%rsi
3122(3): mov %rax,%rdi
3125(5): call 0xffffe60b(%rip)
312a(7): mov 0x207f57(%rip),%rbx
3131(7): lea 0x4708(%rip),%rsi
3138(5): mov $0x5,%edx
313d(2): xor %edi,%edi
313f(5): call 0xffffe4f1(%rip)
3144(3): mov %rbx,%rsi
3147(3): mov %rax,%rdi
314a(5): call 0xffffe5e6(%rip)
314f(7): mov 0x207f32(%rip),%rbx
3156(7): lea 0x4733(%rip),%rsi
315d(5): mov $0x5,%edx
3162(2): xor %edi,%edi
3164(5): call 0xffffe4cc(%rip)
3169(3): mov %rbx,%rsi
316c(3): mov %rax,%rdi
316f(5): call 0xffffe5c1(%rip)
3174(7): mov 0x207f0d(%rip),%rbx
317b(7): lea 0x4806(%rip),%rsi
3182(5): mov $0x5,%edx
3187(2): xor %edi,%edi
3189(5): call 0xffffe4a7(%rip)
318e(3): mov %rbx,%rsi
3191(3): mov %rax,%rdi
3194(5): call 0xffffe59c(%rip)
3199(7): mov 0x207ee8(%rip),%rbx
31a0(7): lea 0x48c1(%rip),%rsi
31a7(5): mov $0x5,%edx
31ac(2): xor %edi,%edi
31ae(5): call 0xffffe482(%rip)
31b3(3): mov %rbx,%rsi
31b6(3): mov %rax,%rdi
31b9(5): call 0xffffe577(%rip)
31be(7): mov 0x207ec3(%rip),%rbx
31c5(7): lea 0x48cc(%rip),%rsi
31cc(5): mov $0x5,%edx
31d1(2): xor %edi,%edi
31d3(5): call 0xffffe45d(%rip)
31d8(3): mov %rbx,%rsi
31db(3): mov %rax,%rdi
31de(5): call 0xffffe552(%rip)
31e3(7): mov 0x207e9e(%rip),%rbx
31ea(7): lea 0x48df(%rip),%rsi
31f1(5): mov $0x5,%edx
31f6(2): xor %edi,%edi
31f8(5): call 0xffffe438(%rip)
31fd(3): mov %rbx,%rsi
3200(3): mov %rax,%rdi
3203(7): lea 0x414b(%rip),%rbx
320a(5): call 0xffffe526(%rip)
320f(7): lea 0x4164(%rip),%rax
3216(7): lea 0x419e(%rip),%rcx
321d(9): mov $0x0,0x60(%rsp)
3226(9): mov $0x0,0x68(%rsp)
322f(3): mov %rsp,%rdx
3232(4): mov %rax,(%rsp)
3236(7): lea 0x413f(%rip),%rax
323d(5): mov %rcx,0x30(%rsp)
3242(7): lea 0x417c(%rip),%rcx
3249(5): mov %rax,0x8(%rsp)
324e(7): lea 0x419f(%rip),%rax
3255(5): mov %rcx,0x40(%rsp)
325a(7): lea 0x416e(%rip),%rcx
3261(5): mov %rax,0x10(%rsp)
3266(7): lea 0x411f(%rip),%rax
326d(5): mov %rcx,0x50(%rsp)
3272(5): mov %rax,0x18(%rsp)
3277(7): lea 0x4124(%rip),%rax
327e(5): mov %rax,0x20(%rsp)
3283(7): lea 0x4122(%rip),%rax
328a(5): mov %rax,0x28(%rsp)
328f(5): mov %rax,0x38(%rsp)
3294(5): mov %rax,0x48(%rsp)
3299(5): mov %rax,0x58(%rsp)
329e(2): nop 
32a0(4): add $0x10,%rdx
32a4(3): mov (%rdx),%rdi
32a7(3): test %rdi,%rdi
32aa(2): jz 0x15(%rip)
32ac(5): mov $0x7,%ecx
32b1(3): mov %rbx,%rsi
32b4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
32b6(3): setnbe %al
32b9(2): sbb $0x0,%al
32bb(2): test %al,%al
32bd(2): jnz 0xffffffe3(%rip)
32bf(4): mov 0x8(%rdx),%r12
32c3(2): xor %edi,%edi
32c5(5): mov $0x5,%edx
32ca(7): lea 0x4108(%rip),%rsi
32d1(3): test %r12,%r12
32d4(6): jz 0xc7(%rip)
32da(5): call 0xffffe356(%rip)
32df(7): lea 0x48b2(%rip),%rcx
32e6(7): lea 0x4103(%rip),%rdx
32ed(3): mov %rax,%rsi
32f0(5): mov $0x1,%edi
32f5(2): xor %eax,%eax
32f7(5): call 0xffffe4f9(%rip)
32fc(2): xor %esi,%esi
32fe(5): mov $0x5,%edi
3303(5): call 0xffffe4dd(%rip)
3308(3): test %rax,%rax
330b(2): jz 0x1e(%rip)
330d(7): lea 0x40ea(%rip),%rsi
3314(5): mov $0x3,%edx
3319(3): mov %rax,%rdi
331c(5): call 0xffffe2a4(%rip)
3321(2): test %eax,%eax
3323(6): jnz 0x10d(%rip)
3329(7): lea 0x40d2(%rip),%rsi
3330(2): xor %edi,%edi
3332(5): mov $0x5,%edx
3337(5): call 0xffffe2f9(%rip)
333c(7): lea 0x4012(%rip),%rcx
3343(7): lea 0x484e(%rip),%rdx
334a(3): mov %rax,%rsi
334d(5): mov $0x1,%edi
3352(2): xor %eax,%eax
3354(5): call 0xffffe49c(%rip)
3359(3): cmp %rbx,%r12
335c(7): lea 0x4033(%rip),%rcx
3363(7): lea 0x5257(%rip),%rbx
336a(4): cmove %rcx,%rbx
336e(7): lea 0x4893(%rip),%rsi
3375(2): xor %edi,%edi
3377(5): mov $0x5,%edx
337c(5): call 0xffffe2b4(%rip)
3381(3): mov %rbx,%rcx
3384(3): mov %rax,%rsi
3387(3): mov %r12,%rdx
338a(5): mov $0x1,%edi
338f(2): xor %eax,%eax
3391(5): call 0xffffe45f(%rip)
3396(5): jmp 0xfffffc20(%rip)
339b(5): call 0xffffe295(%rip)
33a0(7): lea 0x47f1(%rip),%rcx
33a7(7): lea 0x4042(%rip),%rdx
33ae(3): mov %rax,%rsi
33b1(5): mov $0x1,%edi
33b6(2): xor %eax,%eax
33b8(5): call 0xffffe438(%rip)
33bd(2): xor %esi,%esi
33bf(5): mov $0x5,%edi
33c4(5): call 0xffffe41c(%rip)
33c9(3): test %rax,%rax
33cc(2): jz 0x1a(%rip)
33ce(7): lea 0x4029(%rip),%rsi
33d5(5): mov $0x3,%edx
33da(3): mov %rax,%rdi
33dd(5): call 0xffffe1e3(%rip)
33e2(2): test %eax,%eax
33e4(2): jnz 0x45(%rip)
33e6(7): lea 0x4015(%rip),%rsi
33ed(5): mov $0x5,%edx
33f2(2): xor %edi,%edi
33f4(7): lea 0x3f5a(%rip),%r12
33fb(7): lea 0x3f94(%rip),%rbx
3402(5): call 0xffffe22e(%rip)
3407(7): lea 0x3f47(%rip),%rcx
340e(7): lea 0x4783(%rip),%rdx
3415(3): mov %rax,%rsi
3418(5): mov $0x1,%edi
341d(2): xor %eax,%eax
341f(5): call 0xffffe3d1(%rip)
3424(5): jmp 0xffffff4a(%rip)
3429(7): lea 0x3f25(%rip),%r12
3430(7): mov 0x207c51(%rip),%r13
3437(7): lea 0x4782(%rip),%rsi
343e(2): xor %edi,%edi
3440(5): mov $0x5,%edx
3445(5): call 0xffffe1eb(%rip)
344a(3): mov %r13,%rsi
344d(3): mov %rax,%rdi
3450(5): call 0xffffe2e0(%rip)
3455(5): jmp 0xfffffed4(%rip)

"decode_8" :
3460(2): xor %eax,%eax
3462(4): cmp $0x7,%rsi
3466(6): jbe 0x172(%rip)
346c(4): movzx (%rdi),%r8d
3470(7): lea 0x4989(%rip),%rsi
3477(5): movzx 0x0(%rsi,%r8,1),%r8d
347c(3): test %r8b,%r8b
347f(6): js 0x159(%rip)
3485(5): movzx 0x1(%rdi),%r9d
348a(5): movzx 0x0(%rsi,%r9,1),%r9d
348f(3): test %r9b,%r9b
3492(6): js 0x146(%rip)
3498(4): cmp $0x0,(%rcx)
349c(3): mov (%rdx),%rax
349f(2): jz 0x1c(%rip)
34a1(3): mov %r9d,%r10d
34a4(4): shl/sal $0x3,%r8d
34a8(4): add $0x1,%rax
34ac(4): sar $0x2,%r10b
34b0(3): or %r10d,%r8d
34b3(4): mov %r8b,0xffffffff(%rax)
34b7(4): sub $0x1,(%rcx)
34bb(5): movzx 0x2(%rdi),%r8d
34c0(4): cmp $0x3d,%r8b
34c4(6): jz 0x11c(%rip)
34ca(5): movzx 0x0(%rsi,%r8,1),%r8d
34cf(3): test %r8b,%r8b
34d2(6): js 0x114(%rip)
34d8(5): movzx 0x3(%rdi),%r10d
34dd(5): movzx 0x0(%rsi,%r10,1),%r10d
34e2(3): test %r10b,%r10b
34e5(6): js 0x101(%rip)
34eb(4): cmp $0x0,(%rcx)
34ef(2): jz 0x22(%rip)
34f1(3): add %r8d,%r8d
34f4(4): shl/sal $0x6,%r9d
34f8(4): add $0x1,%rax
34fc(3): or %r8d,%r9d
34ff(3): mov %r10d,%r8d
3502(4): sar $0x4,%r8b
3506(3): or %r8d,%r9d
3509(4): mov %r9b,0xffffffff(%rax)
350d(4): sub $0x1,(%rcx)
3511(5): movzx 0x4(%rdi),%r8d
3516(4): cmp $0x3d,%r8b
351a(6): jz 0xdc(%rip)
3520(5): movzx 0x0(%rsi,%r8,1),%r8d
3525(3): test %r8b,%r8b
3528(6): js 0xbe(%rip)
352e(4): cmp $0x0,(%rcx)
3532(2): jz 0x1b(%rip)
3534(3): mov %r8d,%r9d
3537(4): shl/sal $0x4,%r10d
353b(4): add $0x1,%rax
353f(3): sar $0x1,%r9b
3542(3): or %r9d,%r10d
3545(4): mov %r10b,0xffffffff(%rax)
3549(4): sub $0x1,(%rcx)
354d(5): movzx 0x5(%rdi),%r9d
3552(4): cmp $0x3d,%r9b
3556(6): jz 0xa6(%rip)
355c(5): movzx 0x0(%rsi,%r9,1),%r9d
3561(3): test %r9b,%r9b
3564(6): js 0x82(%rip)
356a(5): movzx 0x6(%rdi),%r10d
356f(5): movzx 0x0(%rsi,%r10,1),%r10d
3574(3): test %r10b,%r10b
3577(2): js 0x6f(%rip)
3579(4): cmp $0x0,(%rcx)
357d(2): jz 0x23(%rip)
357f(4): shl/sal $0x2,%r9d
3583(4): shl/sal $0x7,%r8d
3587(4): add $0x1,%rax
358b(3): or %r9d,%r8d
358e(3): mov %r10d,%r9d
3591(4): sar $0x3,%r9b
3595(3): or %r9d,%r8d
3598(4): mov %r8b,0xffffffff(%rax)
359c(4): sub $0x1,(%rcx)
35a0(4): movzx 0x7(%rdi),%edi
35a4(4): cmp $0x3d,%dil
35a8(2): jz 0x28(%rip)
35aa(4): movzx 0x0(%rsi,%rdi,1),%esi
35ae(3): test %sil,%sil
35b1(2): js 0x35(%rip)
35b3(4): cmp $0x0,(%rcx)
35b7(2): jz 0x19(%rip)
35b9(4): shl/sal $0x5,%r10d
35bd(4): add $0x1,%rax
35c1(3): or %esi,%r10d
35c4(4): mov %r10b,0xffffffff(%rax)
35c8(4): sub $0x1,(%rcx)
35cc(4): nop 0x0(%rax)
35d0(3): mov %rax,(%rdx)
35d3(5): mov $0x1,%eax
35d8(2): REP ret near (%rsp)
35da(6): nop 0x0(%rax,%rax,1)
35e0(4): cmp $0x3d,0x3(%rdi)
35e4(2): jz 0xc(%rip)
35e6(3): mov %rax,(%rdx)
35e9(2): xor %eax,%eax
35eb(1): ret near (%rsp)
35ec(4): nop 0x0(%rax)
35f0(4): cmp $0x3d,0x4(%rdi)
35f4(2): jnz 0xfffffff2(%rip)
35f6(4): cmp $0x3d,0x5(%rdi)
35fa(2): jnz 0xffffffec(%rip)
35fc(4): cmp $0x3d,0x6(%rdi)
3600(2): jnz 0xffffffe6(%rip)
3602(4): cmp $0x3d,0x7(%rdi)
3606(2): jnz 0xffffffe0(%rip)
3608(2): jmp 0xffffffc8(%rip)

"base32_encode" :
3610(7): lea 0x47c9(%rip),%r8
3617(5): jmp 0x124(%rip)
361c(4): nop 0x0(%rax)
3620(5): movzx 0x1(%rdi),%r9d
3625(3): mov %r9d,%r10d
3628(4): shr $0x6,%r10b
362c(3): add %r10d,%eax
362f(3): and $0x1f,%eax
3632(4): cmp $0x2,%rcx
3636(5): movzx 0x0(%r8,%rax,1),%eax
363b(3): mov %al,0x1(%rdx)
363e(6): jz 0x1a7(%rip)
3644(3): mov %r9d,%eax
3647(2): shr $0x1,%al
3649(3): and $0x1f,%eax
364c(4): cmp $0x3,%rcx
3650(5): movzx 0x0(%r8,%rax,1),%eax
3655(3): mov %al,0x2(%rdx)
3658(6): jz 0x18d(%rip)
365e(4): shl/sal $0x4,%r9d
3662(4): cmp $0x2,%rsi
3666(6): jz 0x16a(%rip)
366c(4): movzx 0x2(%rdi),%eax
3670(3): mov %eax,%r10d
3673(4): shr $0x4,%r10b
3677(3): add %r10d,%r9d
367a(4): and $0x1f,%r9d
367e(4): cmp $0x4,%rcx
3682(5): movzx 0x0(%r8,%r9,1),%r9d
3687(4): mov %r9b,0x3(%rdx)
368b(6): jz 0x15a(%rip)
3691(4): cmp $0x3,%rsi
3695(4): lea 0x0(%rax,%rax,1),%r9d
3699(6): jz 0x157(%rip)
369f(4): movzx 0x3(%rdi),%eax
36a3(3): mov %eax,%r10d
36a6(4): shr $0x7,%r10b
36aa(3): add %r10d,%r9d
36ad(4): and $0x1f,%r9d
36b1(4): cmp $0x5,%rcx
36b5(5): movzx 0x0(%r8,%r9,1),%r9d
36ba(4): mov %r9b,0x4(%rdx)
36be(6): jz 0x127(%rip)
36c4(3): mov %eax,%r9d
36c7(4): shr $0x2,%r9b
36cb(4): and $0x1f,%r9d
36cf(4): cmp $0x6,%rcx
36d3(5): movzx 0x0(%r8,%r9,1),%r9d
36d8(4): mov %r9b,0x5(%rdx)
36dc(6): jz 0x109(%rip)
36e2(3): shl/sal $0x3,%eax
36e5(4): cmp $0x4,%rsi
36e9(6): jz 0x11f(%rip)
36ef(5): movzx 0x4(%rdi),%r9d
36f4(3): mov %r9d,%r10d
36f7(4): shr $0x5,%r10b
36fb(3): add %r10d,%eax
36fe(3): and $0x1f,%eax
3701(4): cmp $0x7,%rcx
3705(5): movzx 0x0(%r8,%rax,1),%eax
370a(3): mov %al,0x6(%rdx)
370d(6): jz 0xd8(%rip)
3713(4): and $0x1f,%r9d
3717(4): cmp $0x8,%rcx
371b(5): movzx 0x0(%r8,%r9,1),%eax
3720(3): mov %al,0x7(%rdx)
3723(6): jz 0xc2(%rip)
3729(4): sub $0x5,%rsi
372d(2): jz 0x6(%rip)
372f(4): add $0x5,%rdi
3733(4): add $0x8,%rdx
3737(4): sub $0x8,%rcx
373b(3): test %rsi,%rsi
373e(6): jz 0xe2(%rip)
3744(3): test %rcx,%rcx
3747(6): jz 0xd9(%rip)
374d(3): movzx (%rdi),%eax
3750(3): mov %eax,%r9d
3753(4): shr $0x3,%r9b
3757(4): and $0x1f,%r9d
375b(4): cmp $0x1,%rcx
375f(5): movzx 0x0(%r8,%r9,1),%r9d
3764(3): mov %r9b,(%rdx)
3767(2): jz 0x7e(%rip)
3769(3): shl/sal $0x2,%eax
376c(4): cmp $0x1,%rsi
3770(6): jnz 0xfffffeb0(%rip)
3776(3): and $0x1c,%eax
3779(4): cmp $0x2,%rcx
377d(5): movzx 0x0(%r8,%rax,1),%eax
3782(3): mov %al,0x1(%rdx)
3785(2): jz 0x60(%rip)
3787(4): cmp $0x3,%rcx
378b(4): mov $0x3d,0x2(%rdx)
378f(2): jz 0x56(%rip)
3791(4): cmp $0x4,%rcx
3795(4): mov $0x3d,0x3(%rdx)
3799(2): jz 0x4c(%rip)
379b(4): cmp $0x5,%rcx
379f(4): mov $0x3d,0x4(%rdx)
37a3(2): jz 0x42(%rip)
37a5(4): cmp $0x6,%rcx
37a9(4): mov $0x3d,0x5(%rdx)
37ad(2): jz 0x38(%rip)
37af(4): cmp $0x7,%rcx
37b3(4): mov $0x3d,0x6(%rdx)
37b7(2): jz 0x2e(%rip)
37b9(4): cmp $0x8,%rcx
37bd(4): mov $0x3d,0x7(%rdx)
37c1(2): jz 0x24(%rip)
37c3(2): xor %esi,%esi
37c5(5): jmp 0xffffff6e(%rip)
37ca(6): nop 0x0(%rax,%rax,1)
37d0(4): and $0x1f,%r9d
37d4(4): cmp $0x4,%rcx
37d8(3): movsxd %r9d,%r9
37db(5): movzx 0x0(%r8,%r9,1),%eax
37e0(3): mov %al,0x3(%rdx)
37e3(2): jnz 0xffffffb8(%rip)
37e5(1): ret near (%rsp)
37e6(a): nop 0x0(%rax,%rax,1)
37f0(4): and $0x1e,%r9d
37f4(4): cmp $0x5,%rcx
37f8(5): movzx 0x0(%r8,%r9,1),%eax
37fd(3): mov %al,0x4(%rdx)
3800(2): jnz 0xffffffa5(%rip)
3802(2): REP ret near (%rsp)
3804(4): nop 0x0(%rax)
3808(3): and $0x18,%eax
380b(4): cmp $0x7,%rcx
380f(5): movzx 0x0(%r8,%rax,1),%eax
3814(3): mov %al,0x6(%rdx)
3817(2): jz 0xffffffce(%rip)
3819(2): jmp 0xffffffa0(%rip)
381b(5): nop 0x0(%rax,%rax,1)
3820(3): test %rcx,%rcx
3823(2): jz 0xffffffc2(%rip)
3825(3): mov $0x0,(%rdx)
3828(1): ret near (%rsp)

"base32_encode_alloc" :
3830(2): push %r14
3832(2): push %r13
3834(3): mov %rdx,%r13
3837(4): lea 0x4(%rsi),%rdx
383b(2): push %r12
383d(1): push %rbp
383e(1): push %rbx
383f(a): mov $0x-3689348814741910323,%rbx
3849(3): mov %rdx,%rax
384c(3): mul %rax,%rbx,%rdx
384f(4): shr $0x2,%rdx
3853(8): lea 0x0(,%rdx,8),%rbx
385b(4): lea 0x1(%rbx),%rbp
385f(3): cmp %rbp,%rsi
3862(2): jbe 0x1e(%rip)
3864(8): mov $0x0,0x0(%r13)
386c(2): xor %ebp,%ebp
386e(1): pop %rbx
386f(3): mov %rbp,%rax
3872(1): pop %rbp
3873(2): pop %r12
3875(2): pop %r13
3877(2): pop %r14
3879(1): ret near (%rsp)
387a(6): nop 0x0(%rax,%rax,1)
3880(3): mov %rdi,%r14
3883(3): mov %rbp,%rdi
3886(3): mov %rsi,%r12
3889(5): call 0xffffdef7(%rip)
388e(3): test %rax,%rax
3891(4): mov %rax,0x0(%r13)
3895(2): jz 0xffffffd9(%rip)
3897(3): mov %rbp,%rcx
389a(3): mov %rax,%rdx
389d(3): mov %rbx,%rbp
38a0(3): mov %r12,%rsi
38a3(3): mov %r14,%rdi
38a6(5): call 0xfffffd6a(%rip)
38ab(1): pop %rbx
38ac(3): mov %rbp,%rax
38af(1): pop %rbp
38b0(2): pop %r12
38b2(2): pop %r13
38b4(2): pop %r14
38b6(1): ret near (%rsp)

"isbase32" :
38c0(7): lea 0x4539(%rip),%rax
38c7(4): movzx %dil,%edi
38cb(4): movzx 0x0(%rax,%rdi,1),%eax
38cf(2): not %eax
38d1(3): shr $0x7,%al
38d4(1): ret near (%rsp)

"base32_decode_ctx_init" :
38e0(6): mov $0x0,(%rdi)
38e6(1): ret near (%rsp)

"base32_decode_ctx" :
38f0(2): push %r15
38f2(2): push %r14
38f4(3): mov %rdx,%r11
38f7(2): push %r13
38f9(2): push %r12
38fb(3): mov %rdi,%r14
38fe(1): push %rbp
38ff(1): push %rbx
3900(3): mov %rsi,%r12
3903(4): sub $0x38,%rsp
3907(3): mov (%r8),%r15
390a(9): mov $0x28,%rbx
3913(5): mov %rbx,0x28(%rsp)
3918(2): xor %ebx,%ebx
391a(3): test %rdi,%rdi
391d(5): mov %rcx,0x18(%rsp)
3922(5): mov %r8,0x10(%rsp)
3927(5): mov %r15,0x20(%rsp)
392c(5): setnz 0x7(%rsp)
3931(6): jz 0x22f(%rip)
3937(3): test %rdx,%rdx
393a(2): mov (%rdi),%edx
393c(5): setnz 0x6(%rsp)
3941(5): movzx 0x6(%rsp),%eax
3946(2): test %edx,%edx
3948(4): setz %r13b
394c(3): and %eax,%r13d
394f(4): lea 0x4(%r14),%rax
3953(5): lea 0x20(%rsp),%rbp
3958(5): lea 0x18(%rsp),%rbx
395d(5): mov %rax,0x8(%rsp)
3962(3): test %r13b,%r13b
3965(3): mov %r15,%rdx
3968(6): jnz 0xd5(%rip)
396e(3): test %r11,%r11
3971(3): setz %al
3974(4): and 0x6(%rsp),%al
3978(6): jnz 0x88(%rip)
397e(3): test %r11,%r11
3981(6): jz 0xdf(%rip)
3987(5): cmp $0xa,(%r12)
398c(6): jz 0x1a4(%rip)
3992(3): sub %r15,%rdx
3995(5): add %rdx,0x18(%rsp)
399a(3): test %r14,%r14
399d(5): mov %r15,0x20(%rsp)
39a2(4): lea 0x0(%r12,%r11,1),%r15
39a6(6): jnz 0xd3(%rip)
39ac(3): mov %r12,%rdi
39af(4): cmp $0x7,%r11
39b3(2): jnbe 0x14(%rip)
39b5(5): cmp $0x0,0x7(%rsp)
39ba(2): jz 0xd(%rip)
39bc(5): cmp $0x0,0x6(%rsp)
39c1(6): jnz 0x106(%rip)
39c7(3): mov %rbp,%rcx
39ca(3): mov %rbx,%rdx
39cd(3): mov %r11,%rsi
39d0(5): call 0xfffffa90(%rip)
39d5(2): test %al,%al
39d7(6): jz 0x1b8(%rip)
39dd(3): mov %r15,%r11
39e0(5): mov 0x20(%rsp),%r15
39e5(3): sub %r12,%r11
39e8(3): test %r13b,%r13b
39eb(3): mov %r15,%rdx
39ee(2): jnz 0x4f(%rip)
39f0(3): test %r11,%r11
39f3(3): setz %al
39f6(4): and 0x6(%rsp),%al
39fa(2): jz 0xffffff84(%rip)
39fc(4): nop 0x0(%rax)
3a00(5): mov 0x10(%rsp),%rbx
3a05(3): sub %rdx,(%rbx)
3a08(5): mov 0x28(%rsp),%rbx
3a0d(9): xor $0x28,%rbx
3a16(6): jnz 0x183(%rip)
3a1c(4): add $0x38,%rsp
3a20(1): pop %rbx
3a21(1): pop %rbp
3a22(2): pop %r12
3a24(2): pop %r13
3a26(2): pop %r14
3a28(2): pop %r15
3a2a(1): ret near (%rsp)
3a2b(5): nop 0x0(%rax,%rax,1)
3a30(5): mov 0x20(%rsp),%r15
3a35(4): add $0x8,%r12
3a39(4): sub $0x8,%r11
3a3d(3): mov %rbp,%rcx
3a40(3): mov %rbx,%rdx
3a43(3): mov %r11,%rsi
3a46(3): mov %r12,%rdi
3a49(5): call 0xfffffa17(%rip)
3a4e(2): test %al,%al
3a50(2): jnz 0xffffffe0(%rip)
3a52(5): mov 0x20(%rsp),%rdx
3a57(5): jmp 0xffffff17(%rip)
3a5c(4): nop 0x0(%rax)
3a60(3): sub %r15,%rdx
3a63(5): add %rdx,0x18(%rsp)
3a68(3): test %r14,%r14
3a6b(5): mov %r15,0x20(%rsp)
3a70(6): jz 0x100(%rip)
3a76(3): mov %r12,%r15
3a79(3): mov (%r14),%eax
3a7c(3): cmp $0x8,%eax
3a7f(2): jz 0x61(%rip)
3a81(2): test %eax,%eax
3a83(2): jz 0x64(%rip)
3a85(3): cmp %r15,%r12
3a88(2): jnb 0x2e(%rip)
3a8a(6): nop 0x0(%rax,%rax,1)
3a90(4): add $0x1,%r12
3a94(6): movzx 0xffffffff(%r12),%edx
3a9a(3): cmp $0xa,%dl
3a9d(2): jz 0x14(%rip)
3a9f(3): lea 0x1(%rax),%ecx
3aa2(3): cmp $0x8,%ecx
3aa5(3): mov %ecx,(%r14)
3aa8(5): mov %dl,0x4(%r14,%rax,1)
3aad(2): jz 0x63(%rip)
3aaf(2): mov %ecx,%eax
3ab1(3): cmp %r15,%r12
3ab4(2): jnz 0xffffffdc(%rip)
3ab6(3): mov %eax,%r11d
3ab9(5): mov 0x8(%rsp),%rdi
3abe(3): test %r11,%r11
3ac1(6): jnz 0xfffffeee(%rip)
3ac7(5): mov 0x20(%rsp),%rdx
3acc(5): mov $0x1,%eax
3ad1(5): jmp 0xffffff2f(%rip)
3ad6(a): nop 0x0(%rax,%rax,1)
3ae0(7): mov $0x0,(%r14)
3ae7(4): cmp $0x7,%r11
3aeb(2): jle 0x19(%rip)
3aed(5): mov $0x8,%edx
3af2(5): mov $0xa,%esi
3af7(3): mov %r12,%rdi
3afa(5): call 0xffffdc16(%rip)
3aff(3): test %rax,%rax
3b02(2): jz 0x7b(%rip)
3b04(3): mov (%r14),%eax
3b07(5): jmp 0xffffff7e(%rip)
3b0c(4): nop 0x0(%rax)
3b10(5): mov $0x8,%eax
3b15(5): mov 0x8(%rsp),%rdi
3b1a(3): mov %eax,%r11d
3b1d(3): test %r11,%r11
3b20(6): jnz 0xfffffe8f(%rip)
3b26(2): jmp 0xffffffa1(%rip)
3b28(8): nop 0x0(%rax,%rax,1)
3b30(3): test %r14,%r14
3b33(2): jz 0x15(%rip)
3b35(4): add $0x1,%r12
3b39(4): sub $0x1,%r11
3b3d(3): mov %rdx,%r15
3b40(5): jmp 0xfffffe22(%rip)
3b45(3): nop (%rax)
3b48(3): sub %r15,%rdx
3b4b(5): mov %r15,0x20(%rsp)
3b50(5): add %rdx,0x18(%rsp)
3b55(4): lea 0x0(%r12,%r11,1),%r15
3b59(5): jmp 0xfffffe53(%rip)
3b5e(2): nop 
3b60(6): mov $0x1,%r13d
3b66(5): mov $0x1,0x6(%rsp)
3b6b(5): jmp 0xfffffde4(%rip)
3b70(3): mov %r15,%rdx
3b73(5): mov $0x1,%eax
3b78(5): jmp 0xfffffe88(%rip)
3b7d(3): mov %r12,%rdi
3b80(6): mov $0x8,%r11d
3b86(4): add $0x8,%r12
3b8a(5): jmp 0xfffffe3d(%rip)
3b8f(5): mov 0x20(%rsp),%rdx
3b94(5): jmp 0xfffffe6c(%rip)
3b99(5): call 0xffffdac7(%rip)

"base32_decode_alloc_ctx" :
3ba0(2): push %r14
3ba2(2): push %r13
3ba4(3): mov %rdx,%r14
3ba7(2): push %r12
3ba9(1): push %rbp
3baa(3): mov %rdi,%r12
3bad(1): push %rbx
3bae(3): mov %rsi,%r13
3bb1(3): mov %rcx,%rbx
3bb4(3): mov %r8,%rbp
3bb7(4): sub $0x20,%rsp
3bbb(9): mov $0x28,%rax
3bc4(5): mov %rax,0x18(%rsp)
3bc9(2): xor %eax,%eax
3bcb(3): mov %rdx,%rax
3bce(4): shr $0x3,%rax
3bd2(5): lea 0x5(%rax,%rax,4),%rdi
3bd7(5): mov %rdi,0x10(%rsp)
3bdc(5): call 0xffffdba4(%rip)
3be1(3): test %rax,%rax
3be4(3): mov %rax,(%rbx)
3be7(2): jz 0x31(%rip)
3be9(5): lea 0x10(%rsp),%r8
3bee(3): mov %rax,%rcx
3bf1(3): mov %r14,%rdx
3bf4(3): mov %r13,%rsi
3bf7(3): mov %r12,%rdi
3bfa(5): call 0xfffffcf6(%rip)
3bff(2): test %al,%al
3c01(2): jz 0x3f(%rip)
3c03(3): test %rbp,%rbp
3c06(2): jz 0x12(%rip)
3c08(5): mov 0x10(%rsp),%rdx
3c0d(4): mov %rdx,0x0(%rbp)
3c11(2): jmp 0xc(%rip)
3c13(5): nop 0x0(%rax,%rax,1)
3c18(5): mov $0x1,%eax
3c1d(5): mov 0x18(%rsp),%rcx
3c22(9): xor $0x28,%rcx
3c2b(2): jnz 0x2f(%rip)
3c2d(4): add $0x20,%rsp
3c31(1): pop %rbx
3c32(1): pop %rbp
3c33(2): pop %r12
3c35(2): pop %r13
3c37(2): pop %r14
3c39(1): ret near (%rsp)
3c3a(6): nop 0x0(%rax,%rax,1)
3c40(3): mov (%rbx),%rdi
3c43(4): mov %al,0xf(%rsp)
3c47(5): call 0xffffd949(%rip)
3c4c(7): mov $0x0,(%rbx)
3c53(5): movzx 0xf(%rsp),%eax
3c58(2): jmp 0xffffffc5(%rip)
3c5a(5): call 0xffffda06(%rip)

"decode_4" :
3c60(2): xor %eax,%eax
3c62(4): cmp $0x1,%rsi
3c66(6): jbe 0x93(%rip)
3c6c(4): movzx (%rdi),%r8d
3c70(7): lea 0x4289(%rip),%r9
3c77(5): movzx 0x0(%r9,%r8,1),%r8d
3c7c(3): test %r8b,%r8b
3c7f(2): js 0x7a(%rip)
3c81(5): movzx 0x1(%rdi),%r10d
3c86(5): movzx 0x0(%r9,%r10,1),%r10d
3c8b(3): test %r10b,%r10b
3c8e(2): js 0x6b(%rip)
3c90(4): cmp $0x0,(%rcx)
3c94(3): mov (%rdx),%rax
3c97(2): jnz 0x79(%rip)
3c99(4): cmp $0x2,%rsi
3c9d(2): jz 0x69(%rip)
3c9f(5): movzx 0x2(%rdi),%r8d
3ca4(4): cmp $0x3d,%r8b
3ca8(2): jz 0x58(%rip)
3caa(5): movzx 0x0(%r9,%r8,1),%r8d
3caf(3): test %r8b,%r8b
3cb2(2): js 0x54(%rip)
3cb4(4): cmp $0x0,(%rcx)
3cb8(2): jnz 0x78(%rip)
3cba(4): cmp $0x3,%rsi
3cbe(2): jz 0x48(%rip)
3cc0(4): movzx 0x3(%rdi),%edi
3cc4(4): cmp $0x3d,%dil
3cc8(6): jz 0x98(%rip)
3cce(5): movzx 0x0(%r9,%rdi,1),%esi
3cd3(3): test %sil,%sil
3cd6(2): js 0x30(%rip)
3cd8(4): cmp $0x0,(%rcx)
3cdc(2): jz 0x15(%rip)
3cde(4): shl/sal $0x6,%r8d
3ce2(4): add $0x1,%rax
3ce6(3): or %esi,%r8d
3ce9(4): mov %r8b,0xffffffff(%rax)
3ced(4): sub $0x1,(%rcx)
3cf1(3): mov %rax,(%rdx)
3cf4(5): mov $0x1,%eax
3cf9(2): REP ret near (%rsp)
3cfb(5): nop 0x0(%rax,%rax,1)
3d00(4): cmp $0x4,%rsi
3d04(2): jz 0x4c(%rip)
3d06(3): mov %rax,(%rdx)
3d09(2): xor %eax,%eax
3d0b(1): ret near (%rsp)
3d0c(4): nop 0x0(%rax)
3d10(3): mov %r10d,%r11d
3d13(4): shl/sal $0x2,%r8d
3d17(4): add $0x1,%rax
3d1b(4): sar $0x4,%r11b
3d1f(3): or %r11d,%r8d
3d22(4): mov %r8b,0xffffffff(%rax)
3d26(4): sub $0x1,(%rcx)
3d2a(5): jmp 0xffffff6f(%rip)
3d2f(1): nop 
3d30(3): mov %r8d,%r11d
3d33(4): shl/sal $0x4,%r10d
3d37(4): add $0x1,%rax
3d3b(4): sar $0x2,%r11b
3d3f(3): or %r11d,%r10d
3d42(4): mov %r10b,0xffffffff(%rax)
3d46(4): sub $0x1,(%rcx)
3d4a(5): jmp 0xffffff70(%rip)
3d4f(1): nop 
3d50(4): cmp $0x3d,0x3(%rdi)
3d54(2): jnz 0xffffffb2(%rip)
3d56(2): jmp 0xffffff9b(%rip)
3d58(8): nop 0x0(%rax,%rax,1)
3d60(4): cmp $0x4,%rsi
3d64(2): jnz 0xffffffa2(%rip)
3d66(2): jmp 0xffffff8b(%rip)

"base64_encode" :
3d70(3): test $0x3,%cl
3d73(2): jnz 0x16(%rip)
3d75(3): mov %rcx,%rax
3d78(4): shr $0x2,%rax
3d7c(4): lea 0x0(%rax,%rax,2),%rax
3d80(3): cmp %rsi,%rax
3d83(6): jz 0x115(%rip)
3d89(7): lea 0x4270(%rip),%r9
3d90(5): jmp 0x86(%rip)
3d95(3): nop (%rax)
3d98(5): movzx 0x1(%rdi),%r8d
3d9d(3): mov %r8d,%r10d
3da0(4): shr $0x4,%r10b
3da4(3): add %r10d,%eax
3da7(3): and $0x3f,%eax
3daa(4): cmp $0x2,%rcx
3dae(5): movzx 0x0(%r9,%rax,1),%eax
3db3(3): mov %al,0x1(%rdx)
3db6(6): jz 0xdc(%rip)
3dbc(4): shl/sal $0x2,%r8d
3dc0(4): cmp $0x2,%rsi
3dc4(6): jz 0xbc(%rip)
3dca(4): movzx 0x2(%rdi),%eax
3dce(3): mov %eax,%r10d
3dd1(4): shr $0x6,%r10b
3dd5(3): add %r10d,%r8d
3dd8(4): and $0x3f,%r8d
3ddc(4): cmp $0x3,%rcx
3de0(5): movzx 0x0(%r9,%r8,1),%r8d
3de5(4): mov %r8b,0x2(%rdx)
3de9(6): jz 0xa9(%rip)
3def(3): and $0x3f,%eax
3df2(4): cmp $0x4,%rcx
3df6(5): movzx 0x0(%r9,%rax,1),%eax
3dfb(3): mov %al,0x3(%rdx)
3dfe(6): jz 0x94(%rip)
3e04(4): sub $0x3,%rsi
3e08(2): jz 0x6(%rip)
3e0a(4): add $0x3,%rdi
3e0e(4): add $0x4,%rdx
3e12(4): sub $0x4,%rcx
3e16(3): test %rsi,%rsi
3e19(6): jz 0xff(%rip)
3e1f(3): test %rcx,%rcx
3e22(6): jz 0xf6(%rip)
3e28(3): movzx (%rdi),%eax
3e2b(3): mov %eax,%r8d
3e2e(4): shr $0x2,%r8b
3e32(4): and $0x3f,%r8d
3e36(4): cmp $0x1,%rcx
3e3a(5): movzx 0x0(%r9,%r8,1),%r8d
3e3f(3): mov %r8b,(%rdx)
3e42(2): jz 0x50(%rip)
3e44(3): shl/sal $0x4,%eax
3e47(4): cmp $0x1,%rsi
3e4b(6): jnz 0xffffff4d(%rip)
3e51(3): and $0x30,%eax
3e54(4): cmp $0x2,%rcx
3e58(5): movzx 0x0(%r9,%rax,1),%eax
3e5d(3): mov %al,0x1(%rdx)
3e60(2): jz 0x32(%rip)
3e62(4): cmp $0x3,%rcx
3e66(4): mov $0x3d,0x2(%rdx)
3e6a(2): jz 0x28(%rip)
3e6c(4): cmp $0x4,%rcx
3e70(4): mov $0x3d,0x3(%rdx)
3e74(2): jz 0x1e(%rip)
3e76(2): xor %esi,%esi
3e78(2): jmp 0xffffff96(%rip)
3e7a(6): nop 0x0(%rax,%rax,1)
3e80(4): and $0x3c,%r8d
3e84(4): cmp $0x3,%rcx
3e88(5): movzx 0x0(%r9,%r8,1),%eax
3e8d(3): mov %al,0x2(%rdx)
3e90(2): jnz 0xffffffdc(%rip)
3e92(2): REP ret near (%rsp)
3e94(4): nop 0x0(%rax)
3e98(3): test %rax,%rax
3e9b(4): lea 0x0(%rdi,%rax,1),%r8
3e9f(7): lea 0x415a(%rip),%rcx
3ea6(2): jz 0xffffffec(%rip)
3ea8(8): nop 0x0(%rax,%rax,1)
3eb0(3): movzx (%rdi),%eax
3eb3(4): add $0x3,%rdi
3eb7(4): add $0x4,%rdx
3ebb(2): mov %eax,%esi
3ebd(3): shl/sal $0x4,%eax
3ec0(4): shr $0x2,%sil
3ec4(3): and $0x3f,%esi
3ec7(4): movzx 0x0(%rcx,%rsi,1),%esi
3ecb(4): mov %sil,0xfffffffc(%rdx)
3ecf(4): movzx 0xfffffffe(%rdi),%esi
3ed3(3): mov %esi,%r9d
3ed6(4): shr $0x4,%r9b
3eda(3): add %r9d,%eax
3edd(3): and $0x3f,%eax
3ee0(4): movzx 0x0(%rcx,%rax,1),%eax
3ee4(3): mov %al,0xfffffffd(%rdx)
3ee7(4): movzx 0xffffffff(%rdi),%eax
3eeb(3): mov %eax,%r9d
3eee(3): and $0x3f,%eax
3ef1(4): shr $0x6,%r9b
3ef5(4): movzx 0x0(%rcx,%rax,1),%eax
3ef9(4): lea 0x0(%r9,%rsi,4),%esi
3efd(3): and $0x3f,%esi
3f00(4): movzx 0x0(%rcx,%rsi,1),%esi
3f04(4): mov %sil,0xfffffffe(%rdx)
3f08(3): cmp %rdi,%r8
3f0b(3): mov %al,0xffffffff(%rdx)
3f0e(2): jnz 0xffffffa2(%rip)
3f10(2): REP ret near (%rsp)
3f12(6): nop 0x0(%rax,%rax,1)
3f18(3): test %rcx,%rcx
3f1b(6): jz 0xffffff77(%rip)
3f21(3): mov $0x0,(%rdx)
3f24(1): ret near (%rsp)

"base64_encode_alloc" :
3f30(2): push %r14
3f32(2): push %r13
3f34(3): mov %rdx,%r13
3f37(4): lea 0x2(%rsi),%rdx
3f3b(2): push %r12
3f3d(1): push %rbp
3f3e(1): push %rbx
3f3f(a): mov $0x-6148914691236517205,%rbx
3f49(3): mov %rdx,%rax
3f4c(3): mul %rax,%rbx,%rdx
3f4f(3): shr $0x1,%rdx
3f52(8): lea 0x0(,%rdx,4),%rbx
3f5a(4): lea 0x1(%rbx),%rbp
3f5e(3): cmp %rbp,%rsi
3f61(2): jbe 0x1f(%rip)
3f63(8): mov $0x0,0x0(%r13)
3f6b(2): xor %ebp,%ebp
3f6d(1): pop %rbx
3f6e(3): mov %rbp,%rax
3f71(1): pop %rbp
3f72(2): pop %r12
3f74(2): pop %r13
3f76(2): pop %r14
3f78(1): ret near (%rsp)
3f79(7): nop 0x0(%rax)
3f80(3): mov %rdi,%r14
3f83(3): mov %rbp,%rdi
3f86(3): mov %rsi,%r12
3f89(5): call 0xffffd7f7(%rip)
3f8e(3): test %rax,%rax
3f91(4): mov %rax,0x0(%r13)
3f95(2): jz 0xffffffd8(%rip)
3f97(3): mov %rbp,%rcx
3f9a(3): mov %rax,%rdx
3f9d(3): mov %rbx,%rbp
3fa0(3): mov %r12,%rsi
3fa3(3): mov %r14,%rdi
3fa6(5): call 0xfffffdca(%rip)
3fab(1): pop %rbx
3fac(3): mov %rbp,%rax
3faf(1): pop %rbp
3fb0(2): pop %r12
3fb2(2): pop %r13
3fb4(2): pop %r14
3fb6(1): ret near (%rsp)

"isbase64" :
3fc0(7): lea 0x3f39(%rip),%rax
3fc7(4): movzx %dil,%edi
3fcb(4): movzx 0x0(%rax,%rdi,1),%eax
3fcf(2): not %eax
3fd1(3): shr $0x7,%al
3fd4(1): ret near (%rsp)

"base64_decode_ctx_init" :
3fe0(6): mov $0x0,(%rdi)
3fe6(1): ret near (%rsp)

"base64_decode_ctx" :
3ff0(2): push %r15
3ff2(2): push %r14
3ff4(3): mov %rdi,%r14
3ff7(2): push %r13
3ff9(2): push %r12
3ffb(3): mov %rdx,%r13
3ffe(1): push %rbp
3fff(1): push %rbx
4000(3): mov %rsi,%r12
4003(4): sub $0x38,%rsp
4007(3): mov (%r8),%r15
400a(9): mov $0x28,%rbx
4013(5): mov %rbx,0x28(%rsp)
4018(2): xor %ebx,%ebx
401a(3): test %rdi,%rdi
401d(5): mov %rcx,0x18(%rsp)
4022(5): mov %r8,0x10(%rsp)
4027(5): mov %r15,0x20(%rsp)
402c(5): setnz 0x7(%rsp)
4031(6): jz 0x22f(%rip)
4037(3): test %rdx,%rdx
403a(2): mov (%rdi),%eax
403c(5): setnz 0x5(%rsp)
4041(5): movzx 0x5(%rsp),%ebx
4046(2): test %eax,%eax
4048(3): setz %al
404b(2): and %ebx,%eax
404d(4): mov %al,0x6(%rsp)
4051(4): lea 0x4(%r14),%rax
4055(5): lea 0x20(%rsp),%rbp
405a(5): lea 0x18(%rsp),%rbx
405f(5): mov %rax,0x8(%rsp)
4064(5): cmp $0x0,0x6(%rsp)
4069(3): mov %r15,%rdx
406c(6): jnz 0xd9(%rip)
4072(3): test %r13,%r13
4075(3): setz %al
4078(4): and 0x5(%rsp),%al
407c(6): jnz 0x8c(%rip)
4082(3): test %r13,%r13
4085(6): jz 0xe3(%rip)
408b(5): cmp $0xa,(%r12)
4090(6): jz 0x1a0(%rip)
4096(3): sub %r15,%rdx
4099(5): add %rdx,0x18(%rsp)
409e(3): test %r14,%r14
40a1(5): mov %r15,0x20(%rsp)
40a6(4): lea 0x0(%r12,%r13,1),%r15
40aa(6): jnz 0xd7(%rip)
40b0(3): mov %r12,%rdi
40b3(4): cmp $0x3,%r13
40b7(2): jnbe 0x14(%rip)
40b9(5): cmp $0x0,0x7(%rsp)
40be(2): jz 0xd(%rip)
40c0(5): cmp $0x0,0x5(%rsp)
40c5(6): jnz 0x10a(%rip)
40cb(3): mov %rbp,%rcx
40ce(3): mov %rbx,%rdx
40d1(3): mov %r13,%rsi
40d4(5): call 0xfffffb8c(%rip)
40d9(2): test %al,%al
40db(6): jz 0x1b3(%rip)
40e1(3): sub %r12,%r15
40e4(5): cmp $0x0,0x6(%rsp)
40e9(3): mov %r15,%r13
40ec(5): mov 0x20(%rsp),%r15
40f1(3): mov %r15,%rdx
40f4(2): jnz 0x51(%rip)
40f6(3): test %r13,%r13
40f9(3): setz %al
40fc(4): and 0x5(%rsp),%al
4100(2): jz 0xffffff82(%rip)
4102(6): nop 0x0(%rax,%rax,1)
4108(5): mov 0x10(%rsp),%rbx
410d(3): sub %rdx,(%rbx)
4110(5): mov 0x28(%rsp),%rbx
4115(9): xor $0x28,%rbx
411e(6): jnz 0x17a(%rip)
4124(4): add $0x38,%rsp
4128(1): pop %rbx
4129(1): pop %rbp
412a(2): pop %r12
412c(2): pop %r13
412e(2): pop %r14
4130(2): pop %r15
4132(1): ret near (%rsp)
4133(5): nop 0x0(%rax,%rax,1)
4138(5): mov 0x20(%rsp),%r15
413d(4): add $0x4,%r12
4141(4): sub $0x4,%r13
4145(3): mov %rbp,%rcx
4148(3): mov %rbx,%rdx
414b(3): mov %r13,%rsi
414e(3): mov %r12,%rdi
4151(5): call 0xfffffb0f(%rip)
4156(2): test %al,%al
4158(2): jnz 0xffffffe0(%rip)
415a(5): mov 0x20(%rsp),%rdx
415f(5): jmp 0xffffff13(%rip)
4164(4): nop 0x0(%rax)
4168(3): sub %r15,%rdx
416b(5): add %rdx,0x18(%rsp)
4170(3): test %r14,%r14
4173(5): mov %r15,0x20(%rsp)
4178(6): jz 0xf7(%rip)
417e(3): mov %r12,%r15
4181(3): mov (%r14),%eax
4184(3): cmp $0x4,%eax
4187(2): jz 0x59(%rip)
4189(2): test %eax,%eax
418b(2): jz 0x5c(%rip)
418d(3): cmp %r15,%r12
4190(2): jnb 0x2e(%rip)
4192(6): nop 0x0(%rax,%rax,1)
4198(4): add $0x1,%r12
419c(6): movzx 0xffffffff(%r12),%edx
41a2(3): cmp $0xa,%dl
41a5(2): jz 0x14(%rip)
41a7(3): lea 0x1(%rax),%ecx
41aa(3): cmp $0x4,%ecx
41ad(3): mov %ecx,(%r14)
41b0(5): mov %dl,0x4(%r14,%rax,1)
41b5(2): jz 0x5b(%rip)
41b7(2): mov %ecx,%eax
41b9(3): cmp %r15,%r12
41bc(2): jnz 0xffffffdc(%rip)
41be(3): mov %eax,%r13d
41c1(5): mov 0x8(%rsp),%rdi
41c6(3): test %r13,%r13
41c9(6): jnz 0xfffffeea(%rip)
41cf(5): mov 0x20(%rsp),%rdx
41d4(5): mov $0x1,%eax
41d9(5): jmp 0xffffff2f(%rip)
41de(2): nop 
41e0(7): mov $0x0,(%r14)
41e7(4): cmp $0x3,%r13
41eb(2): jle 0x19(%rip)
41ed(5): mov $0x4,%edx
41f2(5): mov $0xa,%esi
41f7(3): mov %r12,%rdi
41fa(5): call 0xffffd516(%rip)
41ff(3): test %rax,%rax
4202(2): jz 0x7a(%rip)
4204(3): mov (%r14),%eax
4207(5): jmp 0xffffff86(%rip)
420c(4): nop 0x0(%rax)
4210(5): mov $0x4,%eax
4215(5): mov 0x8(%rsp),%rdi
421a(3): mov %eax,%r13d
421d(3): test %r13,%r13
4220(6): jnz 0xfffffe93(%rip)
4226(2): jmp 0xffffffa9(%rip)
4228(8): nop 0x0(%rax,%rax,1)
4230(3): test %r14,%r14
4233(2): jz 0x15(%rip)
4235(4): add $0x1,%r12
4239(4): sub $0x1,%r13
423d(3): mov %rdx,%r15
4240(5): jmp 0xfffffe24(%rip)
4245(3): nop (%rax)
4248(3): sub %r15,%rdx
424b(5): mov %r15,0x20(%rsp)
4250(5): add %rdx,0x18(%rsp)
4255(4): lea 0x0(%r12,%r13,1),%r15
4259(5): jmp 0xfffffe57(%rip)
425e(2): nop 
4260(5): mov $0x1,0x6(%rsp)
4265(5): mov $0x1,0x5(%rsp)
426a(5): jmp 0xfffffde7(%rip)
426f(3): mov %r15,%rdx
4272(5): mov $0x1,%eax
4277(5): jmp 0xfffffe91(%rip)
427c(3): mov %r12,%rdi
427f(6): mov $0x4,%r13d
4285(4): add $0x4,%r12
4289(5): jmp 0xfffffe42(%rip)
428e(5): mov 0x20(%rsp),%rdx
4293(5): jmp 0xfffffe75(%rip)
4298(5): call 0xffffd3c8(%rip)

"base64_decode_alloc_ctx" :
42a0(2): push %r14
42a2(2): push %r13
42a4(3): mov %rdx,%r14
42a7(2): push %r12
42a9(1): push %rbp
42aa(3): mov %rdi,%r12
42ad(1): push %rbx
42ae(3): mov %rsi,%r13
42b1(3): mov %rcx,%rbx
42b4(3): mov %r8,%rbp
42b7(4): sub $0x20,%rsp
42bb(9): mov $0x28,%rax
42c4(5): mov %rax,0x18(%rsp)
42c9(2): xor %eax,%eax
42cb(3): mov %rdx,%rax
42ce(4): shr $0x2,%rax
42d2(5): lea 0x3(%rax,%rax,2),%rdi
42d7(5): mov %rdi,0x10(%rsp)
42dc(5): call 0xffffd4a4(%rip)
42e1(3): test %rax,%rax
42e4(3): mov %rax,(%rbx)
42e7(2): jz 0x31(%rip)
42e9(5): lea 0x10(%rsp),%r8
42ee(3): mov %rax,%rcx
42f1(3): mov %r14,%rdx
42f4(3): mov %r13,%rsi
42f7(3): mov %r12,%rdi
42fa(5): call 0xfffffcf6(%rip)
42ff(2): test %al,%al
4301(2): jz 0x3f(%rip)
4303(3): test %rbp,%rbp
4306(2): jz 0x12(%rip)
4308(5): mov 0x10(%rsp),%rdx
430d(4): mov %rdx,0x0(%rbp)
4311(2): jmp 0xc(%rip)
4313(5): nop 0x0(%rax,%rax,1)
4318(5): mov $0x1,%eax
431d(5): mov 0x18(%rsp),%rcx
4322(9): xor $0x28,%rcx
432b(2): jnz 0x2f(%rip)
432d(4): add $0x20,%rsp
4331(1): pop %rbx
4332(1): pop %rbp
4333(2): pop %r12
4335(2): pop %r13
4337(2): pop %r14
4339(1): ret near (%rsp)
433a(6): nop 0x0(%rax,%rax,1)
4340(3): mov (%rbx),%rdi
4343(4): mov %al,0xf(%rsp)
4347(5): call 0xffffd249(%rip)
434c(7): mov $0x0,(%rbx)
4353(5): movzx 0xf(%rsp),%eax
4358(2): jmp 0xffffffc5(%rip)
435a(5): call 0xffffd306(%rip)

"close_stdout_set_file_name" :
4360(7): mov %rdi,0x206d99(%rip)
4367(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
4370(7): mov %dil,0x206d81(%rip)
4377(1): ret near (%rsp)

"close_stdout" :
4380(1): push %rbp
4381(1): push %rbx
4382(4): sub $0x8,%rsp
4386(7): mov 0x206cfb(%rip),%rdi
438d(5): call 0x2dc3(%rip)
4392(2): test %eax,%eax
4394(2): jz 0x18(%rip)
4396(5): call 0xffffd21a(%rip)
439b(7): cmp $0x0,0x206d56(%rip)
43a2(3): mov %rax,%rbx
43a5(2): jz 0x1e(%rip)
43a7(3): cmp $0x20,(%rax)
43aa(2): jnz 0x19(%rip)
43ac(7): mov 0x206d0d(%rip),%rdi
43b3(5): call 0x2d9d(%rip)
43b8(2): test %eax,%eax
43ba(2): jnz 0x48(%rip)
43bc(4): add $0x8,%rsp
43c0(1): pop %rbx
43c1(1): pop %rbp
43c2(1): ret near (%rsp)
43c3(7): lea 0x30d4(%rip),%rsi
43ca(2): xor %edi,%edi
43cc(5): mov $0x5,%edx
43d1(5): call 0xffffd25f(%rip)
43d6(7): mov 0x206d23(%rip),%rdi
43dd(3): mov %rax,%rbp
43e0(3): test %rdi,%rdi
43e3(2): jz 0x2a(%rip)
43e5(5): call 0x1b9b(%rip)
43ea(2): mov (%rbx),%esi
43ec(7): lea 0x3c4d(%rip),%rdx
43f3(3): mov %rax,%rcx
43f6(3): mov %rbp,%r8
43f9(2): xor %edi,%edi
43fb(2): xor %eax,%eax
43fd(5): call 0xffffd413(%rip)
4402(6): mov 0x206c10(%rip),%edi
4408(5): call 0xffffd1c8(%rip)
440d(2): mov (%rbx),%esi
440f(7): lea 0x3c2e(%rip),%rdx
4416(3): mov %rax,%rcx
4419(2): xor %edi,%edi
441b(2): xor %eax,%eax
441d(5): call 0xffffd3f3(%rip)
4422(2): jmp 0xffffffe0(%rip)

"fadvise" :
4440(3): test %rdi,%rdi
4443(2): jz 0x1d(%rip)
4445(1): push %rbx
4446(2): mov %esi,%ebx
4448(5): call 0xffffd328(%rip)
444d(2): mov %ebx,%ecx
444f(2): xor %edx,%edx
4451(2): xor %esi,%esi
4453(1): pop %rbx
4454(2): mov %eax,%edi
4456(5): jmp 0xffffd2aa(%rip)
445b(5): nop 0x0(%rax,%rax,1)
4460(2): REP ret near (%rsp)

"set_program_name" :
4470(3): test %rdi,%rdi
4473(1): push %rbx
4474(2): jz 0x79(%rip)
4476(5): mov $0x2f,%esi
447b(3): mov %rdi,%rbx
447e(5): call 0xffffd232(%rip)
4483(3): test %rax,%rax
4486(2): jz 0x57(%rip)
4488(4): lea 0x1(%rax),%r8
448c(3): mov %r8,%rdx
448f(3): sub %rbx,%rdx
4492(4): cmp $0x6,%rdx
4496(2): jle 0x47(%rip)
4498(4): lea 0xfffffffa(%rax),%rsi
449c(7): lea 0x3bdd(%rip),%rdi
44a3(5): mov $0x7,%ecx
44a8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
44aa(3): setnbe %dl
44ad(3): sbb $0x0,%dl
44b0(2): test %dl,%dl
44b2(2): jnz 0x2b(%rip)
44b4(7): lea 0x3bcd(%rip),%rdi
44bb(5): mov $0x3,%ecx
44c0(3): mov %r8,%rsi
44c3(3): mov %r8,%rbx
44c6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
44c8(3): setnbe %dl
44cb(3): sbb $0x0,%dl
44ce(2): test %dl,%dl
44d0(2): jnz 0xd(%rip)
44d2(4): lea 0x4(%rax),%rbx
44d6(7): mov %rbx,0x206ba3(%rip)
44dd(7): mov %rbx,0x206c24(%rip)
44e4(7): mov %rbx,0x206bbd(%rip)
44eb(1): pop %rbx
44ec(1): ret near (%rsp)
44ed(7): mov 0x206bcc(%rip),%rcx
44f4(7): lea 0x3b4d(%rip),%rdi
44fb(5): mov $0x37,%edx
4500(5): mov $0x1,%esi
4505(5): call 0xffffd35b(%rip)
450a(5): call 0xffffd096(%rip)

"gettext_quote.part.1" :
4510(1): push %rbp
4511(1): push %rbx
4512(3): mov %rdi,%rbp
4515(2): mov %esi,%ebx
4517(4): sub $0x8,%rsp
451b(5): call 0x2d15(%rip)
4520(3): movzx (%rax),%edx
4523(3): and $0xdf,%edx
4526(3): cmp $0x55,%dl
4529(2): jz 0x77(%rip)
452b(3): cmp $0x47,%dl
452e(2): jz 0x22(%rip)
4530(7): lea 0x3b64(%rip),%rax
4537(7): lea 0x3b5f(%rip),%rdx
453e(3): cmp $0x9,%ebx
4541(4): cmovne %rdx,%rax
4545(4): add $0x8,%rsp
4549(1): pop %rbx
454a(1): pop %rbp
454b(1): ret near (%rsp)
454c(4): nop 0x0(%rax)
4550(4): movzx 0x1(%rax),%edx
4554(3): and $0xdf,%edx
4557(3): cmp $0x42,%dl
455a(2): jnz 0xffffffd6(%rip)
455c(4): cmp $0x31,0x2(%rax)
4560(2): jnz 0xffffffd0(%rip)
4562(4): cmp $0x38,0x3(%rax)
4566(2): jnz 0xffffffca(%rip)
4568(4): cmp $0x30,0x4(%rax)
456c(2): jnz 0xffffffc4(%rip)
456e(4): cmp $0x33,0x5(%rax)
4572(2): jnz 0xffffffbe(%rip)
4574(4): cmp $0x30,0x6(%rax)
4578(2): jnz 0xffffffb8(%rip)
457a(4): cmp $0x0,0x7(%rax)
457e(2): jnz 0xffffffb2(%rip)
4580(4): cmp $0x60,0x0(%rbp)
4584(7): lea 0x3b09(%rip),%rax
458b(7): lea 0x3b06(%rip),%rdx
4592(4): cmovne %rdx,%rax
4596(4): add $0x8,%rsp
459a(1): pop %rbx
459b(1): pop %rbp
459c(1): ret near (%rsp)
459d(3): nop (%rax)
45a0(4): movzx 0x1(%rax),%edx
45a4(3): and $0xdf,%edx
45a7(3): cmp $0x54,%dl
45aa(2): jnz 0xffffff86(%rip)
45ac(4): movzx 0x2(%rax),%edx
45b0(3): and $0xdf,%edx
45b3(3): cmp $0x46,%dl
45b6(6): jnz 0xffffff7a(%rip)
45bc(4): cmp $0x2d,0x3(%rax)
45c0(6): jnz 0xffffff70(%rip)
45c6(4): cmp $0x38,0x4(%rax)
45ca(6): jnz 0xffffff66(%rip)
45d0(4): cmp $0x0,0x5(%rax)
45d4(6): jnz 0xffffff5c(%rip)
45da(4): cmp $0x60,0x0(%rbp)
45de(7): lea 0x3aa7(%rip),%rax
45e5(7): lea 0x3aa4(%rip),%rdx
45ec(4): cmovne %rdx,%rax
45f0(4): add $0x8,%rsp
45f4(1): pop %rbx
45f5(1): pop %rbp
45f6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
4600(2): push %r15
4602(2): push %r14
4604(3): mov %r8d,%r15d
4607(2): push %r13
4609(2): push %r12
460b(3): mov %rdi,%r14
460e(1): push %rbp
460f(1): push %rbx
4610(3): mov %r9d,%ebx
4613(3): mov %rsi,%r13
4616(3): mov %rcx,%rbp
4619(3): and $0x2,%ebx
461c(7): sub $0xb8,%rsp
4623(8): mov 0xf0(%rsp),%rax
462b(5): mov %rdx,0x10(%rsp)
4630(5): mov %r8d,0x8(%rsp)
4635(5): mov %r9d,0x78(%rsp)
463a(5): mov %rax,0x20(%rsp)
463f(8): mov 0xf8(%rsp),%rax
4647(5): mov %rax,0x68(%rsp)
464c(8): mov 0x100(%rsp),%rax
4654(5): mov %rax,0x60(%rsp)
4659(9): mov $0x28,%rax
4662(8): mov %rax,0xa8(%rsp)
466a(2): xor %eax,%eax
466c(5): call 0xffffcfd4(%rip)
4671(4): cmp $0xa,%r15d
4675(5): mov %rax,0x58(%rsp)
467a(6): jnbe 0x11b5(%rip)
4680(7): lea 0x3a79(%rip),%rcx
4687(3): mov %r15d,%edx
468a(4): movsxd 0x0(%rcx,%rdx,4),%rax
468e(3): add %rcx,%rax
4691(2): jmp %rax
4693(5): mov $0x1,0xe(%rsp)
4698(5): mov $0x0,0x7c(%rsp)
469d(3): xor %r12d,%r12d
46a0(9): mov $0x0,0x50(%rsp)
46a9(5): mov $0x1,0xf(%rsp)
46ae(5): mov $0x0,0xd(%rsp)
46b3(7): lea 0x39e3(%rip),%rax
46ba(9): mov $0x1,0x18(%rsp)
46c3(3): xor %r15d,%r15d
46c6(8): mov $0x2,0x8(%rsp)
46ce(5): mov %rax,0x48(%rsp)
46d3(3): xor %r11d,%r11d
46d6(3): mov %rbp,%rax
46d9(3): mov %r12d,%r8d
46dc(3): mov %r11,%rbp
46df(3): mov %rax,%r11
46e2(6): nop 0x0(%rax,%rax,1)
46e8(3): cmp %rbp,%r11
46eb(4): setnz %r12b
46ef(4): cmp $0xffffffff,%r11
46f3(2): jnz 0xf(%rip)
46f5(5): mov 0x10(%rsp),%rax
46fa(4): cmp $0x0,0x0(%rax,%rbp,1)
46fe(4): setnz %r12b
4702(3): test %r12b,%r12b
4705(6): jz 0x65b(%rip)
470b(5): cmp $0x2,0x8(%rsp)
4710(5): mov 0x10(%rsp),%rdi
4715(4): lea 0x0(%rdi,%rbp,1),%r9
4719(3): setnz %al
471c(4): and 0xd(%rsp),%al
4720(3): mov %eax,%r10d
4723(6): jz 0xad(%rip)
4729(5): mov 0x18(%rsp),%rax
472e(3): test %rax,%rax
4731(6): jz 0x42f(%rip)
4737(4): cmp $0xffffffff,%r11
473b(5): lea 0x0(%rbp,%rax,1),%rbx
4740(2): jnz 0x30(%rip)
4742(4): cmp $0x1,%rax
4746(2): jbe 0x2a(%rip)
4748(5): mov %r8b,0x38(%rsp)
474d(5): mov %r10b,0x30(%rsp)
4752(5): mov %r9,0x28(%rsp)
4757(5): call 0xffffcef9(%rip)
475c(6): movzx 0x38(%rsp),%r8d
4762(6): movzx 0x30(%rsp),%r10d
4768(3): mov %rax,%r11
476b(5): mov 0x28(%rsp),%r9
4770(3): cmp %r11,%rbx
4773(5): mov %r10b,0x28(%rsp)
4778(6): jnbe 0x5b8(%rip)
477e(5): mov 0x18(%rsp),%rdx
4783(5): mov 0x48(%rsp),%rsi
4788(3): mov %r9,%rdi
478b(5): mov %r11,0x40(%rsp)
4790(5): mov %r8b,0x38(%rsp)
4795(5): mov %r9,0x30(%rsp)
479a(5): call 0xffffcf86(%rip)
479f(2): test %eax,%eax
47a1(5): mov 0x30(%rsp),%r9
47a6(6): movzx 0x38(%rsp),%r8d
47ac(5): mov 0x40(%rsp),%r11
47b1(6): jnz 0x57f(%rip)
47b7(5): cmp $0x0,0xf(%rsp)
47bc(6): movzx 0x28(%rsp),%r10d
47c2(6): jnz 0xf83(%rip)
47c8(8): nop 0x0(%rax,%rax,1)
47d0(4): movzx (%r9),%ebx
47d4(3): cmp $0x7e,%bl
47d7(6): jnbe 0x321(%rip)
47dd(7): lea 0x3948(%rip),%rcx
47e4(3): movzx %bl,%edx
47e7(4): movsxd 0x0(%rcx,%rdx,4),%rax
47eb(3): add %rcx,%rax
47ee(2): jmp %rax
47f0(3): xor %r10d,%r10d
47f3(4): cmp $0x1,%r11
47f7(3): setnz %al
47fa(4): cmp $0xffffffff,%r11
47fe(2): jnz 0xe(%rip)
4800(5): mov 0x10(%rsp),%rax
4805(4): cmp $0x0,0x1(%rax)
4809(3): setnz %al
480c(5): cmp $0x2,0x8(%rsp)
4811(3): setz %dl
4814(2): test %al,%al
4816(6): jz 0x252(%rip)
481c(3): xor %r12d,%r12d
481f(2): xor %eax,%eax
4821(7): nop 0x0(%rax)
4828(5): cmp $0x1,0xd(%rsp)
482d(6): jnz 0x115(%rip)
4833(2): test %dl,%dl
4835(6): jnz 0x10d(%rip)
483b(5): mov 0x20(%rsp),%rsi
4840(3): test %rsi,%rsi
4843(2): jz 0x16(%rip)
4845(2): mov %ebx,%edx
4847(3): shr $0x5,%dl
484a(3): movzx %dl,%edx
484d(3): mov 0x0(%rsi,%rdx,4),%edx
4850(3): bt %ebx,%edx
4853(6): jb 0x150(%rip)
4859(3): test %r10b,%r10b
485c(6): jnz 0x147(%rip)
4862(3): xor $0x1,%eax
4865(4): add $0x1,%rbp
4869(3): and %r8d,%eax
486c(2): test %al,%al
486e(2): jz 0x22(%rip)
4870(3): cmp %r15,%r13
4873(2): jbe 0x7(%rip)
4875(5): mov $0x27,0x0(%r14,%r15,1)
487a(4): lea 0x1(%r15),%rax
487e(3): cmp %rax,%r13
4881(2): jbe 0x8(%rip)
4883(6): mov $0x27,0x1(%r14,%r15,1)
4889(4): add $0x2,%r15
488d(3): xor %r8d,%r8d
4890(3): cmp %r13,%r15
4893(2): jnb 0x6(%rip)
4895(4): mov %bl,0x0(%r14,%r15,1)
4899(5): movzx 0xe(%rsp),%edi
489e(4): add $0x1,%r15
48a2(5): mov $0x0,%eax
48a7(3): test %r12b,%r12b
48aa(3): cmove %eax,%edi
48ad(5): mov %dil,0xe(%rsp)
48b2(5): jmp 0xfffffe36(%rip)
48b7(9): nop 0x0(%rax,%rax,1)
48c0(3): xor %r10d,%r10d
48c3(4): mov 0x8(%rsp),%eax
48c7(3): cmp $0x2,%eax
48ca(6): jz 0x5be(%rip)
48d0(3): cmp $0x5,%eax
48d3(6): jz 0x575(%rip)
48d9(3): cmp $0x2,%eax
48dc(5): mov $0x3f,%ebx
48e1(3): setz %dl
48e4(3): xor %r12d,%r12d
48e7(2): xor %eax,%eax
48e9(5): jmp 0xffffff3f(%rip)
48ee(2): nop 
48f0(3): xor %r10d,%r10d
48f3(5): cmp $0x2,0x8(%rsp)
48f8(6): jz 0x508(%rip)
48fe(5): mov %r12b,0x7c(%rsp)
4903(2): xor %edx,%edx
4905(2): xor %eax,%eax
4907(5): mov $0x27,%ebx
490c(5): jmp 0xffffff1c(%rip)
4911(7): nop 0x0(%rax)
4918(5): mov $0x9,%edx
491d(5): mov $0x74,%ebx
4922(5): cmp $0x2,0x8(%rsp)
4927(3): setz %al
492a(4): and 0xf(%rsp),%al
492e(6): jnz 0x150(%rip)
4934(5): cmp $0x0,0xd(%rsp)
4939(2): jnz 0x67(%rip)
493b(2): mov %edx,%ebx
493d(3): xor %r12d,%r12d
4940(2): xor %eax,%eax
4942(5): cmp $0x0,0xf(%rsp)
4947(6): jnz 0xfffffef4(%rip)
494d(5): jmp 0xffffff0c(%rip)
4952(6): nop 0x0(%rax,%rax,1)
4958(5): mov $0x8,%edx
495d(5): mov $0x62,%ebx
4962(2): jmp 0xffffffd2(%rip)
4964(4): nop 0x0(%rax)
4968(5): cmp $0x2,0x8(%rsp)
496d(6): jz 0x3d3(%rip)
4973(5): cmp $0x0,0xd(%rsp)
4978(6): jz 0x218(%rip)
497e(5): cmp $0x0,0xf(%rsp)
4983(6): jz 0x20d(%rip)
4989(6): cmp $0x0,0x18(%rsp)
498f(6): jnz 0x3bc(%rip)
4995(5): mov $0x5c,%ebx
499a(6): nop 0x0(%rax,%rax,1)
49a0(3): xor %r12d,%r12d
49a3(5): cmp $0x2,0x8(%rsp)
49a8(3): setz %dl
49ab(5): cmp $0x0,0xf(%rsp)
49b0(2): mov %edx,%eax
49b2(6): jnz 0x856(%rip)
49b8(3): mov %r8d,%eax
49bb(3): xor $0x1,%eax
49be(2): and %dl,%al
49c0(2): jz 0x31(%rip)
49c2(3): cmp %r15,%r13
49c5(2): jbe 0x7(%rip)
49c7(5): mov $0x27,0x0(%r14,%r15,1)
49cc(4): lea 0x1(%r15),%rdx
49d0(3): cmp %rdx,%r13
49d3(2): jbe 0x8(%rip)
49d5(6): mov $0x24,0x1(%r14,%r15,1)
49db(4): lea 0x2(%r15),%rdx
49df(3): cmp %rdx,%r13
49e2(2): jbe 0x8(%rip)
49e4(6): mov $0x27,0x2(%r14,%r15,1)
49ea(4): add $0x3,%r15
49ee(3): mov %eax,%r8d
49f1(3): cmp %r15,%r13
49f4(2): jbe 0x7(%rip)
49f6(5): mov $0x5c,0x0(%r14,%r15,1)
49fb(4): add $0x1,%r15
49ff(4): add $0x1,%rbp
4a03(5): jmp 0xfffffe8d(%rip)
4a08(8): nop 0x0(%rax,%rax,1)
4a10(5): cmp $0x0,0xd(%rsp)
4a15(6): jnz 0x1ce(%rip)
4a1b(2): xor %edx,%edx
4a1d(5): test $0x1,0x78(%rsp)
4a22(6): jz 0xffffff19(%rip)
4a28(4): add $0x1,%rbp
4a2c(5): jmp 0xfffffcbc(%rip)
4a31(7): nop 0x0(%rax)
4a38(5): cmp $0x2,0x8(%rsp)
4a3d(3): setz %dl
4a40(2): xor %eax,%eax
4a42(5): jmp 0xfffffde6(%rip)
4a47(9): nop 0x0(%rax,%rax,1)
4a50(5): mov $0x7,%edx
4a55(5): mov $0x61,%ebx
4a5a(5): jmp 0xfffffeda(%rip)
4a5f(1): nop 
4a60(5): cmp $0x2,0x8(%rsp)
4a65(3): setz %dl
4a68(3): test %rbp,%rbp
4a6b(6): jnz 0xfffffdb1(%rip)
4a71(5): movzx 0xf(%rsp),%eax
4a76(2): and %dl,%al
4a78(6): jz 0xfffffdb0(%rip)
4a7e(3): mov %r11,%rbp
4a81(8): mov $0x2,0x8(%rsp)
4a89(5): jmp 0x700(%rip)
4a8e(2): nop 
4a90(5): cmp $0x2,0x8(%rsp)
4a95(3): setz %dl
4a98(3): xor %r12d,%r12d
4a9b(2): jmp 0xffffffd6(%rip)
4a9d(3): nop (%rax)
4aa0(5): cmp $0x2,0x8(%rsp)
4aa5(5): mov $0x20,%ebx
4aaa(3): setz %dl
4aad(2): jmp 0xffffffc4(%rip)
4aaf(1): nop 
4ab0(5): mov $0xd,%edx
4ab5(5): mov $0x72,%ebx
4aba(5): jmp 0xfffffe68(%rip)
4abf(1): nop 
4ac0(5): mov $0xc,%edx
4ac5(5): mov $0x66,%ebx
4aca(5): jmp 0xfffffe6a(%rip)
4acf(1): nop 
4ad0(5): mov $0xb,%edx
4ad5(5): mov $0x76,%ebx
4ada(5): jmp 0xfffffe5a(%rip)
4adf(1): nop 
4ae0(5): mov $0xa,%edx
4ae5(5): mov $0x6e,%ebx
4aea(5): jmp 0xfffffe38(%rip)
4aef(1): nop 
4af0(3): xor %r10d,%r10d
4af3(5): nop 0x0(%rax,%rax,1)
4af8(6): cmp $0x1,0x58(%rsp)
4afe(6): jnz 0x3aa(%rip)
4b04(5): mov %r11,0x38(%rsp)
4b09(5): mov %r8b,0x30(%rsp)
4b0e(5): mov %r10b,0x28(%rsp)
4b13(5): call 0xffffcd8d(%rip)
4b18(3): mov (%rax),%rcx
4b1b(3): movzx %bl,%edx
4b1e(6): movzx 0x28(%rsp),%r10d
4b24(6): movzx 0x30(%rsp),%r8d
4b2a(5): mov 0x38(%rsp),%r11
4b2f(5): mov $0x1,%edi
4b34(4): movzx 0x0(%rcx,%rdx,2),%eax
4b38(4): and $0x4000,%ax
4b3c(4): setnz %r12b
4b40(3): setz %al
4b43(4): and 0xd(%rsp),%al
4b47(2): test %al,%al
4b49(6): jnz 0x998(%rip)
4b4f(5): cmp $0x2,0x8(%rsp)
4b54(3): setz %dl
4b57(5): jmp 0xfffffcd1(%rip)
4b5c(4): nop 0x0(%rax)
4b60(4): movzx (%r9),%ebx
4b64(3): cmp $0x7e,%bl
4b67(2): jnbe 0xffffff89(%rip)
4b69(7): lea 0x37b8(%rip),%rcx
4b70(3): movzx %bl,%edx
4b73(4): movsxd 0x0(%rcx,%rdx,4),%rax
4b77(3): add %rcx,%rax
4b7a(2): jmp %rax
4b7c(4): nop 0x0(%rax)
4b80(3): xor %r10d,%r10d
4b83(5): cmp $0x0,0xd(%rsp)
4b88(6): jnz 0xfffffdf6(%rip)
4b8e(2): nop 
4b90(5): mov $0x5c,%edx
4b95(5): mov $0x5c,%ebx
4b9a(5): jmp 0xfffffd9a(%rip)
4b9f(1): nop 
4ba0(5): mov $0xc,%edx
4ba5(3): xor %r10d,%r10d
4ba8(5): mov $0x66,%ebx
4bad(5): jmp 0xfffffd87(%rip)
4bb2(6): nop 0x0(%rax,%rax,1)
4bb8(5): mov $0xa,%edx
4bbd(3): xor %r10d,%r10d
4bc0(5): mov $0x6e,%ebx
4bc5(5): jmp 0xfffffd5d(%rip)
4bca(6): nop 0x0(%rax,%rax,1)
4bd0(5): mov $0x61,%ebx
4bd5(5): jmp 0xfffffdcb(%rip)
4bda(6): nop 0x0(%rax,%rax,1)
4be0(3): xor %r10d,%r10d
4be3(5): cmp $0x2,0x8(%rsp)
4be8(3): setz %dl
4beb(5): cmp $0x0,0xf(%rsp)
4bf0(6): jnz 0xb9a(%rip)
4bf6(3): mov %r8d,%eax
4bf9(3): mov %r15,%rcx
4bfc(3): xor $0x1,%eax
4bff(2): and %dl,%al
4c01(2): jz 0x2f(%rip)
4c03(3): cmp %r15,%r13
4c06(2): jbe 0x7(%rip)
4c08(5): mov $0x27,0x0(%r14,%r15,1)
4c0d(4): lea 0x1(%r15),%rcx
4c11(3): cmp %rcx,%r13
4c14(2): jbe 0x8(%rip)
4c16(6): mov $0x24,0x1(%r14,%r15,1)
4c1c(4): lea 0x2(%r15),%rcx
4c20(3): cmp %rcx,%r13
4c23(6): jnbe 0x636(%rip)
4c29(4): lea 0x3(%r15),%rcx
4c2d(3): mov %eax,%r8d
4c30(3): cmp %rcx,%r13
4c33(2): jbe 0x7(%rip)
4c35(5): mov $0x5c,0x0(%r14,%rcx,1)
4c3a(5): cmp $0x2,0x8(%rsp)
4c3f(4): lea 0x1(%rcx),%r15
4c43(6): jz 0x606(%rip)
4c49(4): lea 0x1(%rbp),%rax
4c4d(3): cmp %r11,%rax
4c50(2): jnb 0x1b(%rip)
4c52(5): mov 0x10(%rsp),%rax
4c57(5): movzx 0x1(%rax,%rbp,1),%eax
4c5c(4): mov %al,0x28(%rsp)
4c60(3): sub $0x30,%eax
4c63(2): cmp $0x9,%al
4c65(6): jbe 0x834(%rip)
4c6b(3): mov %r12d,%eax
4c6e(5): mov $0x30,%ebx
4c73(3): xor %r12d,%r12d
4c76(5): jmp 0xfffffbb2(%rip)
4c7b(5): nop 0x0(%rax,%rax,1)
4c80(5): cmp $0x2,0x8(%rsp)
4c85(3): mov %r10d,%r12d
4c88(3): setz %dl
4c8b(3): xor %r10d,%r10d
4c8e(2): xor %eax,%eax
4c90(5): jmp 0xfffffb98(%rip)
4c95(3): nop (%rax)
4c98(5): cmp $0x2,0x8(%rsp)
4c9d(3): setz %dl
4ca0(3): xor %r10d,%r10d
4ca3(5): jmp 0xfffffdc5(%rip)
4ca8(8): nop 0x0(%rax,%rax,1)
4cb0(5): cmp $0x2,0x8(%rsp)
4cb5(3): setz %dl
4cb8(3): xor %r10d,%r10d
4cbb(3): xor %r12d,%r12d
4cbe(5): jmp 0xfffffdb3(%rip)
4cc3(5): nop 0x0(%rax,%rax,1)
4cc8(5): cmp $0x2,0x8(%rsp)
4ccd(3): mov %r10d,%r12d
4cd0(5): mov $0x20,%ebx
4cd5(3): setz %dl
4cd8(3): xor %r10d,%r10d
4cdb(5): jmp 0xfffffd96(%rip)
4ce0(5): mov $0xd,%edx
4ce5(3): xor %r10d,%r10d
4ce8(5): mov $0x72,%ebx
4ced(5): jmp 0xfffffc35(%rip)
4cf2(6): nop 0x0(%rax,%rax,1)
4cf8(5): mov $0x76,%ebx
4cfd(5): jmp 0xfffffca3(%rip)
4d02(6): nop 0x0(%rax,%rax,1)
4d08(5): mov $0x9,%edx
4d0d(3): xor %r10d,%r10d
4d10(5): mov $0x74,%ebx
4d15(5): jmp 0xfffffc0d(%rip)
4d1a(6): nop 0x0(%rax,%rax,1)
4d20(5): mov $0x62,%ebx
4d25(5): jmp 0xfffffc7b(%rip)
4d2a(6): nop 0x0(%rax,%rax,1)
4d30(3): xor %r10d,%r10d
4d33(5): jmp 0xfffffa9d(%rip)
4d38(8): nop 0x0(%rax,%rax,1)
4d40(5): cmp $0x0,0xf(%rsp)
4d45(6): jnz 0x96b(%rip)
4d4b(4): add $0x1,%rbp
4d4f(3): mov %r8d,%eax
4d52(3): xor %r12d,%r12d
4d55(5): mov $0x5c,%ebx
4d5a(5): jmp 0xfffffb12(%rip)
4d5f(1): nop 
4d60(5): cmp $0x2,0x8(%rsp)
4d65(5): movzx 0xf(%rsp),%ebx
4d6a(3): mov %r8d,%r12d
4d6d(3): mov %r11,%rbp
4d70(3): setz %dl
4d73(2): mov %ebx,%eax
4d75(3): test %r15,%r15
4d78(3): setz %cl
4d7b(2): and %edx,%eax
4d7d(2): and %cl,%al
4d7f(6): jnz 0xa67(%rip)
4d85(2): mov %ebx,%eax
4d87(3): xor $0x1,%eax
4d8a(2): and %al,%dl
4d8c(6): jz 0x970(%rip)
4d92(5): cmp $0x0,0x7c(%rsp)
4d97(6): jz 0x963(%rip)
4d9d(5): cmp $0x0,0xe(%rsp)
4da2(6): jnz 0x9fb(%rip)
4da8(3): test %r13,%r13
4dab(3): setz %al
4dae(6): cmp $0x0,0x50(%rsp)
4db4(3): setnz %dl
4db7(2): and %dl,%al
4db9(6): jz 0xa23(%rip)
4dbf(5): mov 0x50(%rsp),%r13
4dc4(7): lea 0x32d2(%rip),%rbx
4dcb(4): mov $0x27,(%r14)
4dcf(8): mov $0x2,0x8(%rsp)
4dd7(6): mov $0x1,%r15d
4ddd(9): mov $0x1,0x18(%rsp)
4de6(5): mov $0x0,0xf(%rsp)
4deb(5): mov %rbx,0x48(%rsp)
4df0(4): mov %al,0x7c(%rsp)
4df4(5): jmp 0xfffff8df(%rip)
4df9(7): nop 0x0(%rax)
4e00(5): cmp $0x0,0xf(%rsp)
4e05(6): jnz 0x8ab(%rip)
4e0b(3): test %r13,%r13
4e0e(6): jz 0x402(%rip)
4e14(2): xor %edx,%edx
4e16(6): cmp $0x0,0x50(%rsp)
4e1c(6): jnz 0x3f4(%rip)
4e22(5): mov %r13,0x50(%rsp)
4e27(4): add $0x3,%r15
4e2b(2): xor %eax,%eax
4e2d(5): mov %r12b,0x7c(%rsp)
4e32(3): xor %r8d,%r8d
4e35(3): mov %rdx,%r13
4e38(5): mov $0x27,%ebx
4e3d(5): jmp 0xfffffa1c(%rip)
4e42(6): nop 0x0(%rax,%rax,1)
4e48(5): test $0x4,0x78(%rsp)
4e4d(2): jz 0x23(%rip)
4e4f(4): lea 0x2(%rbp),%rcx
4e53(3): cmp %r11,%rcx
4e56(2): jnb 0x1a(%rip)
4e58(5): mov 0x10(%rsp),%rax
4e5d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4e62(6): jz 0x790(%rip)
4e68(8): nop 0x0(%rax,%rax,1)
4e70(2): xor %edx,%edx
4e72(3): xor %r12d,%r12d
4e75(2): xor %eax,%eax
4e77(5): mov $0x3f,%ebx
4e7c(5): jmp 0xfffff9ac(%rip)
4e81(7): nop 0x0(%rax)
4e88(5): cmp $0x0,0xf(%rsp)
4e8d(6): jnz 0x823(%rip)
4e93(3): xor %r12d,%r12d
4e96(2): xor %eax,%eax
4e98(5): mov $0x3f,%ebx
4e9d(5): jmp 0xfffff9bc(%rip)
4ea2(6): nop 0x0(%rax,%rax,1)
4ea8(8): lea 0xa0(%rsp),%rax
4eb0(4): cmp $0xffffffff,%r11
4eb4(c): mov $0x0,0xa0(%rsp)
4ec0(5): mov %rax,0x28(%rsp)
4ec5(2): jnz 0x2f(%rip)
4ec7(5): mov 0x10(%rsp),%rdi
4ecc(5): mov %r8b,0x40(%rsp)
4ed1(5): mov %r10b,0x38(%rsp)
4ed6(5): mov %r9,0x30(%rsp)
4edb(5): call 0xffffc775(%rip)
4ee0(6): movzx 0x40(%rsp),%r8d
4ee6(6): movzx 0x38(%rsp),%r10d
4eec(3): mov %rax,%r11
4eef(5): mov 0x30(%rsp),%r9
4ef4(8): lea 0x9c(%rsp),%rax
4efc(2): xor %ecx,%ecx
4efe(4): mov %bl,0x7e(%rsp)
4f02(5): mov %r8b,0x7d(%rsp)
4f07(3): mov %rcx,%rbx
4f0a(8): mov %r9,0x88(%rsp)
4f12(5): mov %rax,0x38(%rsp)
4f17(5): mov %r10b,0x7f(%rsp)
4f1c(8): mov %r15,0x80(%rsp)
4f24(5): mov %r14,0x40(%rsp)
4f29(5): mov %r13,0x70(%rsp)
4f2e(5): mov %r11,0x30(%rsp)
4f33(5): mov 0x10(%rsp),%rax
4f38(5): lea 0x0(%rbp,%rbx,1),%r14
4f3d(5): mov 0x30(%rsp),%rdx
4f42(5): mov 0x28(%rsp),%rcx
4f47(5): mov 0x38(%rsp),%rdi
4f4c(4): lea 0x0(%rax,%r14,1),%r13
4f50(3): sub %r14,%rdx
4f53(3): mov %r13,%rsi
4f56(5): call 0x216a(%rip)
4f5b(3): test %rax,%rax
4f5e(3): mov %rax,%r15
4f61(2): jz 0x50(%rip)
4f63(4): cmp $0xffffffff,%rax
4f67(6): jz 0x61e(%rip)
4f6d(4): cmp $0xfffffffe,%rax
4f71(6): jz 0x5a0(%rip)
4f77(5): cmp $0x2,0x8(%rsp)
4f7c(3): setz %al
4f7f(4): and 0xf(%rsp),%al
4f83(6): jnz 0x19d(%rip)
4f89(7): mov 0x9c(%rsp),%edi
4f90(5): call 0xffffc900(%rip)
4f95(5): mov 0x28(%rsp),%rdi
4f9a(2): test %eax,%eax
4f9c(5): mov $0x0,%eax
4fa1(4): cmove %eax,%r12d
4fa5(3): add %r15,%rbx
4fa8(5): call 0xffffc8d8(%rip)
4fad(2): test %eax,%eax
4faf(2): jz 0xffffff84(%rip)
4fb1(3): mov %r12d,%edx
4fb4(3): mov %rbx,%rdi
4fb7(6): movzx 0x7d(%rsp),%r8d
4fbd(3): xor $0x1,%edx
4fc0(5): movzx 0x7e(%rsp),%ebx
4fc5(6): movzx 0x7f(%rsp),%r10d
4fcb(4): and 0xd(%rsp),%dl
4fcf(8): mov 0x80(%rsp),%r15
4fd7(5): mov 0x40(%rsp),%r14
4fdc(5): mov 0x70(%rsp),%r13
4fe1(5): mov 0x30(%rsp),%r11
4fe6(4): cmp $0x1,%rdi
4fea(6): jbe 0x601(%rip)
4ff0(3): mov %rdi,%rcx
4ff3(2): xor %esi,%esi
4ff5(6): movzx 0xf(%rsp),%r9d
4ffb(3): add %rbp,%rcx
4ffe(5): mov 0x10(%rsp),%rdi
5003(5): jmp 0xbb(%rip)
5008(8): nop 0x0(%rax,%rax,1)
5010(5): cmp $0x2,0x8(%rsp)
5015(3): setz %al
5018(3): test %r9b,%r9b
501b(6): jnz 0x4b5(%rip)
5021(3): mov %r8d,%esi
5024(3): xor $0x1,%esi
5027(3): and %sil,%al
502a(2): jz 0x31(%rip)
502c(3): cmp %r15,%r13
502f(2): jbe 0x7(%rip)
5031(5): mov $0x27,0x0(%r14,%r15,1)
5036(4): lea 0x1(%r15),%rsi
503a(3): cmp %rsi,%r13
503d(2): jbe 0x8(%rip)
503f(6): mov $0x24,0x1(%r14,%r15,1)
5045(4): lea 0x2(%r15),%rsi
5049(3): cmp %rsi,%r13
504c(2): jbe 0x8(%rip)
504e(6): mov $0x27,0x2(%r14,%r15,1)
5054(4): add $0x3,%r15
5058(3): mov %eax,%r8d
505b(3): cmp %r15,%r13
505e(2): jbe 0x7(%rip)
5060(5): mov $0x5c,0x0(%r14,%r15,1)
5065(4): lea 0x1(%r15),%rax
5069(3): cmp %rax,%r13
506c(2): jbe 0xf(%rip)
506e(2): mov %ebx,%eax
5070(3): shr $0x6,%al
5073(3): add $0x30,%eax
5076(5): mov %al,0x1(%r14,%r15,1)
507b(4): lea 0x2(%r15),%rax
507f(3): cmp %rax,%r13
5082(2): jbe 0x12(%rip)
5084(2): mov %ebx,%eax
5086(3): shr $0x3,%al
5089(3): and $0x7,%eax
508c(3): add $0x30,%eax
508f(5): mov %al,0x2(%r14,%r15,1)
5094(3): and $0x7,%ebx
5097(4): add $0x1,%rbp
509b(4): add $0x3,%r15
509f(3): add $0x30,%ebx
50a2(3): cmp %rcx,%rbp
50a5(6): jnb 0xfffff7eb(%rip)
50ab(2): mov %edx,%esi
50ad(3): cmp %r15,%r13
50b0(2): jbe 0x6(%rip)
50b2(4): mov %bl,0x0(%r14,%r15,1)
50b6(4): movzx 0x0(%rdi,%rbp,1),%ebx
50ba(4): add $0x1,%r15
50be(2): test %dl,%dl
50c0(6): jnz 0xffffff50(%rip)
50c6(2): mov %esi,%eax
50c8(3): xor $0x1,%eax
50cb(3): and %r8d,%eax
50ce(3): test %r10b,%r10b
50d1(2): jz 0x10(%rip)
50d3(3): cmp %r15,%r13
50d6(2): jbe 0x7(%rip)
50d8(5): mov $0x5c,0x0(%r14,%r15,1)
50dd(4): add $0x1,%r15
50e1(4): add $0x1,%rbp
50e5(3): cmp %rcx,%rbp
50e8(6): jnb 0xfffff784(%rip)
50ee(2): test %al,%al
50f0(6): jz 0x3fe(%rip)
50f6(3): cmp %r15,%r13
50f9(2): jbe 0x7(%rip)
50fb(5): mov $0x27,0x0(%r14,%r15,1)
5100(4): lea 0x1(%r15),%rax
5104(3): cmp %rax,%r13
5107(2): jbe 0x8(%rip)
5109(6): mov $0x27,0x1(%r14,%r15,1)
510f(4): add $0x2,%r15
5113(3): xor %r10d,%r10d
5116(3): xor %r8d,%r8d
5119(2): jmp 0xffffff94(%rip)
511b(5): nop 0x0(%rax,%rax,1)
5120(4): cmp $0x1,%r15
5124(6): jz 0xfffffe65(%rip)
512a(5): mov 0x10(%rsp),%rdi
512f(4): lea 0x0(%rdi,%r15,1),%rcx
5133(5): lea 0x1(%rdi,%r14,1),%rdx
5138(4): lea 0x0(%rcx,%r14,1),%r8
513c(2): jmp 0x11(%rip)
513e(2): nop 
5140(4): add $0x1,%rdx
5144(3): cmp %rdx,%r8
5147(6): jz 0xfffffe42(%rip)
514d(3): movzx (%rdx),%ecx
5150(3): sub $0x5b,%ecx
5153(3): cmp $0x21,%cl
5156(2): jnbe 0xffffffea(%rip)
5158(5): mov $0x1,%esi
515d(3): shl/sal %cl,%rsi
5160(3): mov %rsi,%rcx
5163(a): mov $0x8589934635,%rsi
516d(3): test %rsi,%rcx
5170(2): jz 0xffffffd0(%rip)
5172(5): mov 0x40(%rsp),%r14
5177(5): mov 0x70(%rsp),%r13
517c(5): mov 0x30(%rsp),%rbp
5181(8): mov $0x2,0x8(%rsp)
5189(5): cmp $0x0,0xd(%rsp)
518e(2): jz 0x12(%rip)
5190(2): test %al,%al
5192(5): mov $0x4,%eax
5197(5): cmove 0x8(%rsp),%eax
519c(4): mov %eax,0x8(%rsp)
51a0(4): sub $0x8,%rsp
51a4(3): mov %rbp,%rcx
51a7(3): mov %r13,%rsi
51aa(4): push 0x68(%rsp)
51ae(4): push 0x78(%rsp)
51b2(3): mov %r14,%rdi
51b5(2): push $0x0
51b7(8): mov 0x98(%rsp),%r9d
51bf(5): mov 0x28(%rsp),%r8d
51c4(5): mov 0x30(%rsp),%rdx
51c9(4): and $0xfd,%r9d
51cd(5): call 0xfffff433(%rip)
51d2(4): add $0x20,%rsp
51d6(3): mov %rax,%r15
51d9(8): mov 0xa8(%rsp),%rbx
51e1(9): xor $0x28,%rbx
51ea(3): mov %r15,%rax
51ed(6): jnz 0x606(%rip)
51f3(7): add $0xb8,%rsp
51fa(1): pop %rbx
51fb(1): pop %rbp
51fc(2): pop %r12
51fe(2): pop %r13
5200(2): pop %r14
5202(2): pop %r15
5204(1): ret near (%rsp)
5205(3): nop (%rax)
5208(3): mov %r11,%rbp
520b(5): jmp 0xffffff7e(%rip)
5210(3): cmp %r15,%r13
5213(2): jbe 0x7(%rip)
5215(5): mov $0x27,0x0(%r14,%r15,1)
521a(4): lea 0x1(%r15),%rax
521e(3): cmp %rax,%r13
5221(2): jbe 0x8(%rip)
5223(6): mov $0x5c,0x1(%r14,%r15,1)
5229(4): lea 0x2(%r15),%rax
522d(3): cmp %rax,%r13
5230(6): jbe 0x5f2(%rip)
5236(3): mov %r13,%rdx
5239(6): mov $0x27,0x2(%r14,%r15,1)
523f(5): mov 0x50(%rsp),%r13
5244(5): jmp 0xfffffbde(%rip)
5249(3): mov %r12d,%eax
524c(5): mov $0x30,%ebx
5251(3): xor %r12d,%r12d
5254(5): jmp 0xfffff605(%rip)
5259(6): mov $0x27,0x2(%r14,%r15,1)
525f(5): jmp 0xfffff9ca(%rip)
5264(2): test %ebx,%ebx
5266(6): jnz 0xfffff42d(%rip)
526c(5): mov $0x1,0xd(%rsp)
5271(3): test %r13,%r13
5274(6): jnz 0x596(%rip)
527a(7): lea 0x2e1c(%rip),%rax
5281(9): mov $0x0,0x50(%rsp)
528a(5): mov $0x1,0xe(%rsp)
528f(5): mov $0x0,0x7c(%rsp)
5294(3): xor %r12d,%r12d
5297(5): mov $0x0,0xf(%rsp)
529c(9): mov $0x1,0x18(%rsp)
52a5(5): mov %rax,0x48(%rsp)
52aa(6): mov $0x1,%r15d
52b0(8): mov $0x2,0x8(%rsp)
52b8(5): jmp 0xfffff41b(%rip)
52bd(3): nop (%rax)
52c0(2): test %ebx,%ebx
52c2(6): jnz 0x3fb(%rip)
52c8(3): test %r13,%r13
52cb(6): jz 0x22b(%rip)
52d1(4): mov $0x22,(%r14)
52d5(5): mov $0x1,0xe(%rsp)
52da(3): xor %r12d,%r12d
52dd(5): mov $0x0,0x7c(%rsp)
52e2(9): mov $0x0,0x50(%rsp)
52eb(7): lea 0x2da9(%rip),%rax
52f2(5): mov $0x0,0xf(%rsp)
52f7(5): mov $0x1,0xd(%rsp)
52fc(9): mov $0x1,0x18(%rsp)
5305(6): mov $0x1,%r15d
530b(5): mov %rax,0x48(%rsp)
5310(5): jmp 0xfffff3c3(%rip)
5315(7): lea 0x2d7f(%rip),%rax
531c(5): mov $0x1,0xe(%rsp)
5321(5): mov $0x0,0x7c(%rsp)
5326(3): xor %r12d,%r12d
5329(9): mov $0x0,0x50(%rsp)
5332(5): mov $0x1,0xf(%rsp)
5337(5): mov $0x1,0xd(%rsp)
533c(9): mov $0x1,0x18(%rsp)
5345(3): xor %r15d,%r15d
5348(5): mov %rax,0x48(%rsp)
534d(8): mov $0x5,0x8(%rsp)
5355(5): jmp 0xfffff37e(%rip)
535a(5): mov $0x1,0xe(%rsp)
535f(5): mov $0x0,0x7c(%rsp)
5364(3): xor %r12d,%r12d
5367(9): mov $0x0,0x50(%rsp)
5370(5): mov $0x0,0xf(%rsp)
5375(3): xor %r15d,%r15d
5378(5): mov $0x1,0xd(%rsp)
537d(9): mov $0x0,0x18(%rsp)
5386(9): mov $0x0,0x48(%rsp)
538f(5): jmp 0xfffff344(%rip)
5394(5): cmp $0xa,0x8(%rsp)
5399(2): jz 0x58(%rip)
539b(7): lea 0x2cfd(%rip),%rsi
53a2(2): xor %edi,%edi
53a4(5): mov $0x5,%edx
53a9(5): call 0xffffc287(%rip)
53ae(3): mov %rax,%rcx
53b1(5): mov %rax,0x68(%rsp)
53b6(7): lea 0x2ce2(%rip),%rax
53bd(3): cmp %rax,%rcx
53c0(6): jz 0x39e(%rip)
53c6(7): lea 0x2cd0(%rip),%rsi
53cd(2): xor %edi,%edi
53cf(5): mov $0x5,%edx
53d4(5): call 0xffffc25c(%rip)
53d9(3): mov %rax,%rcx
53dc(5): mov %rax,0x60(%rsp)
53e1(7): lea 0x2cb5(%rip),%rax
53e8(3): cmp %rax,%rcx
53eb(6): jz 0x389(%rip)
53f1(3): xor %r15d,%r15d
53f4(2): test %ebx,%ebx
53f6(6): jz 0x1c7(%rip)
53fc(2): test %ebx,%ebx
53fe(5): mov 0x60(%rsp),%rbx
5403(5): setnz 0xf(%rsp)
5408(3): xor %r12d,%r12d
540b(3): mov %rbx,%rdi
540e(5): call 0xffffc242(%rip)
5413(5): mov %rbx,0x48(%rsp)
5418(5): mov %rax,0x18(%rsp)
541d(5): mov $0x1,0xe(%rsp)
5422(5): mov $0x0,0x7c(%rsp)
5427(9): mov $0x0,0x50(%rsp)
5430(5): mov $0x1,0xd(%rsp)
5435(5): jmp 0xfffff29e(%rip)
543a(5): mov $0x1,0xe(%rsp)
543f(5): mov $0x0,0x7c(%rsp)
5444(3): xor %r12d,%r12d
5447(9): mov $0x0,0x50(%rsp)
5450(5): mov $0x0,0xf(%rsp)
5455(3): xor %r15d,%r15d
5458(5): mov $0x0,0xd(%rsp)
545d(9): mov $0x0,0x18(%rsp)
5466(9): mov $0x0,0x48(%rsp)
546f(5): jmp 0xfffff264(%rip)
5474(5): mov $0x1,0xe(%rsp)
5479(5): mov $0x0,0x7c(%rsp)
547e(3): xor %r12d,%r12d
5481(9): mov $0x0,0x50(%rsp)
548a(5): mov $0x1,0xf(%rsp)
548f(5): mov $0x1,0xd(%rsp)
5494(5): jmp 0xfffff21f(%rip)
5499(3): cmp %r15,%r13
549c(2): jbe 0x7(%rip)
549e(5): mov $0x30,0x0(%r14,%r15,1)
54a3(4): lea 0x2(%rcx),%rax
54a7(3): cmp %rax,%r13
54aa(2): jbe 0x8(%rip)
54ac(6): mov $0x30,0x2(%r14,%rcx,1)
54b2(3): mov %r12d,%eax
54b5(4): lea 0x3(%rcx),%r15
54b9(3): xor %r12d,%r12d
54bc(5): mov $0x30,%ebx
54c1(5): jmp 0xfffff367(%rip)
54c6(a): nop 0x0(%rax,%rax,1)
54d0(5): movzx 0xf(%rsp),%ebx
54d5(3): mov %r11,%rbp
54d8(4): mov %bl,0xd(%rsp)
54dc(5): jmp 0xfffffcad(%rip)
54e1(5): movzx 0xd(%rsp),%edx
54e6(3): xor %r12d,%r12d
54e9(5): jmp 0xfffffb07(%rip)
54ee(3): xor %r10d,%r10d
54f1(5): jmp 0xfffffbbc(%rip)
54f6(9): mov $0x0,0x50(%rsp)
54ff(5): mov $0x1,0xe(%rsp)
5504(3): xor %r12d,%r12d
5507(5): mov $0x0,0x7c(%rsp)
550c(5): jmp 0xfffffddf(%rip)
5511(5): mov 0x30(%rsp),%r11
5516(3): mov %r14,%rsi
5519(3): mov %r13,%rcx
551c(3): mov %rbx,%rax
551f(3): mov %rbx,%rdi
5522(6): movzx 0x7d(%rsp),%r8d
5528(5): movzx 0x7e(%rsp),%ebx
552d(8): mov 0x88(%rsp),%r9
5535(3): cmp %r11,%rsi
5538(6): movzx 0x7f(%rsp),%r10d
553e(8): mov 0x80(%rsp),%r15
5546(5): mov 0x40(%rsp),%r14
554b(5): mov 0x70(%rsp),%r13
5550(2): jnb 0x28(%rip)
5552(3): cmp $0x0,(%rcx)
5555(2): jnz 0x12(%rip)
5557(2): jmp 0x21(%rip)
5559(7): nop 0x0(%rax)
5560(5): cmp $0x0,0x0(%r9,%rax,1)
5565(2): jz 0x10(%rip)
5567(4): add $0x1,%rax
556b(5): lea 0x0(%rbp,%rax,1),%rdx
5570(3): cmp %rdx,%r11
5573(2): jnbe 0xffffffed(%rip)
5575(3): mov %rax,%rdi
5578(5): movzx 0xd(%rsp),%edx
557d(3): xor %r12d,%r12d
5580(5): jmp 0xfffffa66(%rip)
5585(3): mov %rbx,%rdi
5588(6): movzx 0x7d(%rsp),%r8d
558e(5): movzx 0x7e(%rsp),%ebx
5593(6): movzx 0x7f(%rsp),%r10d
5599(8): mov 0x80(%rsp),%r15
55a1(3): xor %r12d,%r12d
55a4(5): mov 0x40(%rsp),%r14
55a9(5): mov 0x70(%rsp),%r13
55ae(5): mov 0x30(%rsp),%r11
55b3(5): movzx 0xd(%rsp),%edx
55b8(5): jmp 0xfffffa2e(%rip)
55bd(5): mov 0x68(%rsp),%rdx
55c2(3): movzx (%rdx),%eax
55c5(2): test %al,%al
55c7(6): jz 0xfffffe35(%rip)
55cd(3): nop (%rax)
55d0(3): cmp %r15,%r13
55d3(2): jbe 0x6(%rip)
55d5(4): mov %al,0x0(%r14,%r15,1)
55d9(4): add $0x1,%r15
55dd(5): movzx 0x0(%rdx,%r15,1),%eax
55e2(2): test %al,%al
55e4(2): jnz 0xffffffec(%rip)
55e6(5): jmp 0xfffffe16(%rip)
55eb(2): mov %edx,%eax
55ed(5): jmp 0xfffff55a(%rip)
55f2(4): movzx 0x0(%rax,%rcx,1),%ebx
55f6(3): cmp $0x3e,%bl
55f9(6): jnbe 0xfffff877(%rip)
55ff(a): mov $0x8070630310989004800,%rax
5609(4): bt %rbx,%rax
560d(6): jnb 0xfffff863(%rip)
5613(5): cmp $0x0,0xf(%rsp)
5618(6): jnz 0x1ea(%rip)
561e(3): cmp %r15,%r13
5621(2): jbe 0x7(%rip)
5623(5): mov $0x3f,0x0(%r14,%r15,1)
5628(4): lea 0x1(%r15),%rax
562c(3): cmp %rax,%r13
562f(2): jbe 0x8(%rip)
5631(6): mov $0x22,0x1(%r14,%r15,1)
5637(4): lea 0x2(%r15),%rax
563b(3): cmp %rax,%r13
563e(2): jbe 0x8(%rip)
5640(6): mov $0x22,0x2(%r14,%r15,1)
5646(4): lea 0x3(%r15),%rax
564a(3): cmp %rax,%r13
564d(2): jbe 0x8(%rip)
564f(6): mov $0x3f,0x3(%r14,%r15,1)
5655(4): add $0x4,%r15
5659(2): xor %edx,%edx
565b(3): xor %r12d,%r12d
565e(2): xor %eax,%eax
5660(3): mov %rcx,%rbp
5663(5): jmp 0xfffff1c5(%rip)
5668(2): test %ebx,%ebx
566a(6): jz 0x18e(%rip)
5670(7): lea 0x2a26(%rip),%rax
5677(5): mov $0x1,0xe(%rsp)
567c(5): mov $0x0,0x7c(%rsp)
5681(3): xor %r12d,%r12d
5684(9): mov $0x0,0x50(%rsp)
568d(5): mov $0x1,0xf(%rsp)
5692(5): mov $0x0,0xd(%rsp)
5697(9): mov $0x1,0x18(%rsp)
56a0(3): xor %r15d,%r15d
56a3(5): mov %rax,0x48(%rsp)
56a8(5): jmp 0xfffff02b(%rip)
56ad(3): nop (%rax)
56b0(3): mov %r11,%rbp
56b3(5): movzx 0xf(%rsp),%eax
56b8(5): jmp 0xfffffad1(%rip)
56bd(7): lea 0x29d7(%rip),%rax
56c4(5): mov $0x1,0xe(%rsp)
56c9(5): mov $0x0,0x7c(%rsp)
56ce(3): xor %r12d,%r12d
56d1(9): mov $0x0,0x50(%rsp)
56da(5): mov $0x1,0xf(%rsp)
56df(5): mov $0x1,0xd(%rsp)
56e4(9): mov $0x1,0x18(%rsp)
56ed(3): xor %r15d,%r15d
56f0(5): mov %rax,0x48(%rsp)
56f5(5): jmp 0xffffefde(%rip)
56fa(2): mov %edx,%eax
56fc(5): mov 0x48(%rsp),%rbx
5701(3): test %rbx,%rbx
5704(2): jz 0x2e(%rip)
5706(2): test %al,%al
5708(2): jz 0x2a(%rip)
570a(3): movzx (%rbx),%ecx
570d(3): mov %rbx,%rax
5710(2): test %cl,%cl
5712(2): jz 0x20(%rip)
5714(3): mov %r15,%rdx
5717(3): sub %r15,%rax
571a(3): cmp %rdx,%r13
571d(2): jbe 0x6(%rip)
571f(4): mov %cl,0x0(%r14,%rdx,1)
5723(4): add $0x1,%rdx
5727(4): movzx 0x0(%rax,%rdx,1),%ecx
572b(2): test %cl,%cl
572d(2): jnz 0xffffffed(%rip)
572f(3): mov %rdx,%r15
5732(3): cmp %r15,%r13
5735(6): jbe 0xfffffaa4(%rip)
573b(5): mov $0x0,0x0(%r14,%r15,1)
5740(5): jmp 0xfffffa99(%rip)
5745(5): cmp $0x2,0x8(%rsp)
574a(5): movzx 0xf(%rsp),%ebx
574f(3): mov %r11,%rbp
5752(3): setz %al
5755(4): mov %bl,0xd(%rsp)
5759(5): jmp 0xfffffa30(%rip)
575e(4): mov 0x8(%rsp),%esi
5762(3): mov %rcx,%rdi
5765(5): call 0xffffedab(%rip)
576a(5): mov %rax,0x68(%rsp)
576f(5): jmp 0xfffffc57(%rip)
5774(4): mov 0x8(%rsp),%esi
5778(3): mov %rcx,%rdi
577b(5): call 0xffffed95(%rip)
5780(5): mov %rax,0x60(%rsp)
5785(5): jmp 0xfffffc6c(%rip)
578a(5): movzx 0xf(%rsp),%ebx
578f(3): mov %r11,%rbp
5792(2): mov %edx,%eax
5794(4): mov %bl,0xd(%rsp)
5798(5): jmp 0xfffff9f1(%rip)
579d(4): sub $0x8,%rsp
57a1(6): mov $0x5,%r8d
57a7(3): mov %r11,%rcx
57aa(4): push 0x68(%rsp)
57ae(4): push 0x78(%rsp)
57b2(3): mov %r14,%rdi
57b5(4): push 0x38(%rsp)
57b9(8): mov 0x98(%rsp),%r9d
57c1(5): mov 0x30(%rsp),%rdx
57c6(5): mov 0x70(%rsp),%rsi
57cb(5): call 0xffffee35(%rip)
57d0(4): add $0x20,%rsp
57d4(3): mov %rax,%r15
57d7(5): jmp 0xfffffa02(%rip)
57dc(5): movzx 0x7c(%rsp),%eax
57e1(5): jmp 0xffffff1b(%rip)
57e6(8): mov $0x2,0x8(%rsp)
57ee(5): jmp 0xfffff99b(%rip)
57f3(5): call 0xffffbe6d(%rip)
57f8(5): mov $0x0,0xd(%rsp)
57fd(5): jmp 0xfffffa74(%rip)
5802(3): mov %r11,%rbp
5805(5): jmp 0xfffff99b(%rip)
580a(5): mov $0x1,0xe(%rsp)
580f(2): xor %eax,%eax
5811(3): xor %r12d,%r12d
5814(9): mov $0x0,0x50(%rsp)
581d(5): jmp 0xfffff5a7(%rip)
5822(3): mov %r13,%rdx
5825(5): mov 0x50(%rsp),%r13
582a(5): jmp 0xfffff5f8(%rip)
582f(5): call 0xffffbd71(%rip)

"quotearg_n_options" :
5840(2): push %r15
5842(2): push %r14
5844(3): movsxd %edi,%r15
5847(2): push %r13
5849(2): push %r12
584b(3): mov %rdx,%r14
584e(1): push %rbp
584f(1): push %rbx
5850(3): mov %rcx,%rbp
5853(4): sub $0x28,%rsp
5857(5): mov %rsi,0x8(%rsp)
585c(5): call 0xffffbd54(%rip)
5861(3): mov %rax,%r13
5864(2): mov (%rax),%eax
5866(3): test %r15d,%r15d
5869(7): mov 0x2057f0(%rip),%rbx
5870(4): mov %eax,0x18(%rsp)
5874(6): js 0x16d(%rip)
587a(7): cmp %r15d,0x2057d7(%rip)
5881(2): jnle 0x64(%rip)
5883(7): cmp $0x7fffffff,%r15d
588a(6): jz 0x15c(%rip)
5890(4): lea 0x1(%r15),%r12d
5894(7): lea 0x2057d5(%rip),%rax
589b(3): movsxd %r12d,%rsi
589e(4): shl/sal $0x4,%rsi
58a2(3): cmp %rax,%rbx
58a5(6): jz 0x11b(%rip)
58ab(3): mov %rbx,%rdi
58ae(5): call 0xf72(%rip)
58b3(3): mov %rax,%rbx
58b6(7): mov %rax,0x2057a3(%rip)
58bd(7): movsxd 0x205794(%rip),%rdi
58c4(3): mov %r12d,%edx
58c7(2): xor %esi,%esi
58c9(2): sub %edi,%edx
58cb(4): shl/sal $0x4,%rdi
58cf(3): movsxd %edx,%rdx
58d2(3): add %rbx,%rdi
58d5(4): shl/sal $0x4,%rdx
58d9(5): call 0xffffbe17(%rip)
58de(7): mov %r12d,0x205773(%rip)
58e5(3): mov 0x4(%rbp),%eax
58e8(4): shl/sal $0x4,%r15
58ec(4): sub $0x8,%rsp
58f0(3): add %r15,%rbx
58f3(4): lea 0x8(%rbp),%r15
58f7(4): mov 0x0(%rbp),%r8d
58fb(3): mov (%rbx),%r11
58fe(4): mov 0x8(%rbx),%r12
5902(3): mov %r14,%rcx
5905(3): or $0x1,%eax
5908(4): mov %eax,0x24(%rsp)
590c(3): push 0x30(%rbp)
590f(3): mov %eax,%r9d
5912(3): push 0x28(%rbp)
5915(2): push %r15
5917(3): mov %r11,%rsi
591a(5): mov 0x28(%rsp),%rdx
591f(3): mov %r12,%rdi
5922(5): mov %r11,0x30(%rsp)
5927(5): call 0xffffecd9(%rip)
592c(4): add $0x20,%rsp
5930(5): mov 0x10(%rsp),%r11
5935(3): cmp %rax,%r11
5938(2): jnbe 0x69(%rip)
593a(4): lea 0x1(%rax),%rsi
593e(7): lea 0x2057db(%rip),%rax
5945(3): cmp %rax,%r12
5948(3): mov %rsi,(%rbx)
594b(2): jz 0x14(%rip)
594d(3): mov %r12,%rdi
5950(5): mov %rsi,0x10(%rsp)
5955(5): call 0xffffbc3b(%rip)
595a(5): mov 0x10(%rsp),%rsi
595f(3): mov %rsi,%rdi
5962(5): mov %rsi,0x10(%rsp)
5967(5): call 0xe59(%rip)
596c(4): sub $0x8,%rsp
5970(4): mov %rax,0x8(%rbx)
5974(4): mov 0x0(%rbp),%r8d
5978(3): push 0x30(%rbp)
597b(3): push 0x28(%rbp)
597e(3): mov %r14,%rcx
5981(2): push %r15
5983(5): mov 0x3c(%rsp),%r9d
5988(3): mov %rax,%rdi
598b(5): mov 0x28(%rsp),%rdx
5990(5): mov 0x30(%rsp),%rsi
5995(3): mov %rax,%r12
5998(5): call 0xffffec68(%rip)
599d(4): add $0x20,%rsp
59a1(4): mov 0x18(%rsp),%eax
59a5(4): mov %eax,0x0(%r13)
59a9(4): add $0x28,%rsp
59ad(3): mov %r12,%rax
59b0(1): pop %rbx
59b1(1): pop %rbp
59b2(2): pop %r12
59b4(2): pop %r13
59b6(2): pop %r14
59b8(2): pop %r15
59ba(1): ret near (%rsp)
59bb(5): nop 0x0(%rax,%rax,1)
59c0(2): xor %edi,%edi
59c2(5): call 0xe5e(%rip)
59c7(8): movdqa 0x2056a1(%rip),%xmm0
59cf(3): mov %rax,%rbx
59d2(7): mov %rax,0x205687(%rip)
59d9(3): movups %xmm0,(%rax)
59dc(5): jmp 0xfffffee1(%rip)
59e1(5): call 0xffffbbbf(%rip)
59e6(5): call 0x102a(%rip)

"clone_quoting_options" :
59f0(2): push %r12
59f2(1): push %rbp
59f3(1): push %rbx
59f4(3): mov %rdi,%rbx
59f7(5): call 0xffffbbb9(%rip)
59fc(3): mov (%rax),%r12d
59ff(3): mov %rax,%rbp
5a02(7): lea 0x205817(%rip),%rax
5a09(3): test %rbx,%rbx
5a0c(5): mov $0x38,%esi
5a11(4): cmove %rax,%rbx
5a15(3): mov %rbx,%rdi
5a18(5): call 0xfa8(%rip)
5a1d(4): mov %r12d,0x0(%rbp)
5a21(1): pop %rbx
5a22(1): pop %rbp
5a23(2): pop %r12
5a25(1): ret near (%rsp)

"get_quoting_style" :
5a30(7): lea 0x2057e9(%rip),%rax
5a37(3): test %rdi,%rdi
5a3a(4): cmove %rax,%rdi
5a3e(2): mov (%rdi),%eax
5a40(1): ret near (%rsp)

"set_quoting_style" :
5a50(7): lea 0x2057c9(%rip),%rax
5a57(3): test %rdi,%rdi
5a5a(4): cmove %rax,%rdi
5a5e(2): mov %esi,(%rdi)
5a60(1): ret near (%rsp)

"set_char_quoting" :
5a70(7): lea 0x2057a9(%rip),%rax
5a77(3): test %rdi,%rdi
5a7a(2): mov %esi,%ecx
5a7c(4): cmove %rax,%rdi
5a80(2): mov %esi,%eax
5a82(3): and $0x1f,%ecx
5a85(3): shr $0x5,%al
5a88(3): movzx %al,%eax
5a8b(5): lea 0x8(%rdi,%rax,4),%rdi
5a90(2): mov (%rdi),%esi
5a92(2): mov %esi,%eax
5a94(2): shr %cl,%eax
5a96(2): xor %eax,%edx
5a98(3): and $0x1,%eax
5a9b(3): and $0x1,%edx
5a9e(2): shl/sal %cl,%edx
5aa0(2): xor %esi,%edx
5aa2(2): mov %edx,(%rdi)
5aa4(1): ret near (%rsp)

"set_quoting_flags" :
5ab0(7): lea 0x205769(%rip),%rax
5ab7(3): test %rdi,%rdi
5aba(4): cmove %rax,%rdi
5abe(3): mov 0x4(%rdi),%eax
5ac1(3): mov %esi,0x4(%rdi)
5ac4(1): ret near (%rsp)

"set_custom_quoting" :
5ad0(7): lea 0x205749(%rip),%rax
5ad7(3): test %rdi,%rdi
5ada(4): cmove %rax,%rdi
5ade(3): test %rsi,%rsi
5ae1(6): mov $0xa,(%rdi)
5ae7(2): jz 0x10(%rip)
5ae9(3): test %rdx,%rdx
5aec(2): jz 0xb(%rip)
5aee(4): mov %rsi,0x28(%rdi)
5af2(4): mov %rdx,0x30(%rdi)
5af6(1): ret near (%rsp)
5af7(4): sub $0x8,%rsp
5afb(5): call 0xffffbaa5(%rip)

"quotearg_buffer" :
5b00(2): push %r15
5b02(2): push %r14
5b04(7): lea 0x205715(%rip),%rax
5b0b(2): push %r13
5b0d(2): push %r12
5b0f(3): mov %rdi,%r13
5b12(1): push %rbp
5b13(1): push %rbx
5b14(3): mov %r8,%rbx
5b17(3): mov %rsi,%r14
5b1a(3): mov %rdx,%r15
5b1d(4): sub $0x18,%rsp
5b21(3): test %r8,%r8
5b24(4): cmove %rax,%rbx
5b28(5): mov %rcx,0x8(%rsp)
5b2d(5): call 0xffffba83(%rip)
5b32(3): mov (%rax),%r12d
5b35(3): mov %rax,%rbp
5b38(4): lea 0x8(%rbx),%rax
5b3c(4): sub $0x8,%rsp
5b40(4): mov 0x4(%rbx),%r9d
5b44(3): push 0x30(%rbx)
5b47(3): mov (%rbx),%r8d
5b4a(3): push 0x28(%rbx)
5b4d(3): mov %r15,%rdx
5b50(1): push %rax
5b51(5): mov 0x28(%rsp),%rcx
5b56(3): mov %r14,%rsi
5b59(3): mov %r13,%rdi
5b5c(5): call 0xffffeaa4(%rip)
5b61(4): mov %r12d,0x0(%rbp)
5b65(4): add $0x38,%rsp
5b69(1): pop %rbx
5b6a(1): pop %rbp
5b6b(2): pop %r12
5b6d(2): pop %r13
5b6f(2): pop %r14
5b71(2): pop %r15
5b73(1): ret near (%rsp)

"quotearg_alloc_mem" :
5b80(2): push %r15
5b82(2): push %r14
5b84(7): lea 0x205695(%rip),%rax
5b8b(2): push %r13
5b8d(2): push %r12
5b8f(3): mov %rdx,%r12
5b92(1): push %rbp
5b93(1): push %rbx
5b94(3): mov %rcx,%rbx
5b97(3): mov %rdi,%r14
5b9a(3): mov %rsi,%r15
5b9d(4): sub $0x38,%rsp
5ba1(3): test %rcx,%rcx
5ba4(4): cmove %rax,%rbx
5ba8(2): xor %ebp,%ebp
5baa(5): call 0xffffba06(%rip)
5baf(3): test %r12,%r12
5bb2(3): mov %rax,%r13
5bb5(2): mov (%rax),%eax
5bb7(4): setz %bpl
5bbb(3): or 0x4(%rbx),%ebp
5bbe(4): lea 0x8(%rbx),%r10
5bc2(4): sub $0x8,%rsp
5bc6(3): mov (%rbx),%r8d
5bc9(3): mov %r15,%rcx
5bcc(4): mov %eax,0x14(%rsp)
5bd0(3): push 0x30(%rbx)
5bd3(3): mov %r14,%rdx
5bd6(3): push 0x28(%rbx)
5bd9(2): push %r10
5bdb(2): xor %esi,%esi
5bdd(3): mov %ebp,%r9d
5be0(2): xor %edi,%edi
5be2(5): mov %r10,0x40(%rsp)
5be7(5): call 0xffffea19(%rip)
5bec(4): lea 0x1(%rax),%rsi
5bf0(5): mov %rax,0x48(%rsp)
5bf5(4): add $0x20,%rsp
5bf9(3): mov %rsi,%rdi
5bfc(5): mov %rsi,0x18(%rsp)
5c01(5): call 0xbbf(%rip)
5c06(5): mov %rax,0x10(%rsp)
5c0b(4): sub $0x8,%rsp
5c0f(3): push 0x30(%rbx)
5c12(3): push 0x28(%rbx)
5c15(5): mov 0x38(%rsp),%r10
5c1a(3): mov %ebp,%r9d
5c1d(3): mov (%rbx),%r8d
5c20(3): mov %r15,%rcx
5c23(3): mov %r14,%rdx
5c26(3): mov %rax,%rdi
5c29(2): push %r10
5c2b(5): mov 0x38(%rsp),%rsi
5c30(5): call 0xffffe9d0(%rip)
5c35(4): mov 0x2c(%rsp),%eax
5c39(4): add $0x20,%rsp
5c3d(3): test %r12,%r12
5c40(4): mov %eax,0x0(%r13)
5c44(2): jz 0xb(%rip)
5c46(5): mov 0x28(%rsp),%r11
5c4b(4): mov %r11,(%r12)
5c4f(5): mov 0x10(%rsp),%rax
5c54(4): add $0x38,%rsp
5c58(1): pop %rbx
5c59(1): pop %rbp
5c5a(2): pop %r12
5c5c(2): pop %r13
5c5e(2): pop %r14
5c60(2): pop %r15
5c62(1): ret near (%rsp)

"quotearg_alloc" :
5c70(3): mov %rdx,%rcx
5c73(2): xor %edx,%edx
5c75(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5c80(6): mov 0x2053d2(%rip),%eax
5c86(2): push %r12
5c88(7): mov 0x2053d1(%rip),%r12
5c8f(1): push %rbp
5c90(1): push %rbx
5c91(3): cmp $0x1,%eax
5c94(2): jle 0x2d(%rip)
5c96(3): sub $0x2,%eax
5c99(5): lea 0x18(%r12),%rbx
5c9e(4): shl/sal $0x4,%rax
5ca2(5): lea 0x28(%r12,%rax,1),%rbp
5ca7(9): nop 0x0(%rax,%rax,1)
5cb0(3): mov (%rbx),%rdi
5cb3(4): add $0x10,%rbx
5cb7(5): call 0xffffb8d9(%rip)
5cbc(3): cmp %rbp,%rbx
5cbf(2): jnz 0xfffffff1(%rip)
5cc1(5): mov 0x8(%r12),%rdi
5cc6(7): lea 0x205453(%rip),%rbx
5ccd(3): cmp %rbx,%rdi
5cd0(2): jz 0x19(%rip)
5cd2(5): call 0xffffb8be(%rip)
5cd7(b): mov $0x100,0x20538e(%rip)
5ce2(7): mov %rbx,0x20538f(%rip)
5ce9(7): lea 0x205380(%rip),%rbx
5cf0(3): cmp %rbx,%r12
5cf3(2): jz 0x11(%rip)
5cf5(3): mov %r12,%rdi
5cf8(5): call 0xffffb898(%rip)
5cfd(7): mov %rbx,0x20535c(%rip)
5d04(1): pop %rbx
5d05(a): mov $0x1,0x205349(%rip)
5d0f(1): pop %rbp
5d10(2): pop %r12
5d12(1): ret near (%rsp)

"quotearg_n" :
5d20(7): lea 0x2054f9(%rip),%rcx
5d27(7): mov $0xffffffff,%rdx
5d2e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5d40(7): lea 0x2054d9(%rip),%rcx
5d47(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5d50(7): lea 0x2054c9(%rip),%rcx
5d57(3): mov %rdi,%rsi
5d5a(7): mov $0xffffffff,%rdx
5d61(2): xor %edi,%edi
5d63(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5d70(7): lea 0x2054a9(%rip),%rcx
5d77(3): mov %rsi,%rdx
5d7a(3): mov %rdi,%rsi
5d7d(2): xor %edi,%edi
5d7f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5d90(4): sub $0x48,%rsp
5d94(3): mov %rdx,%rax
5d97(9): mov $0x28,%rdx
5da0(5): mov %rdx,0x38(%rsp)
5da5(2): xor %edx,%edx
5da7(3): cmp $0xa,%esi
5daa(2): jz 0x6a(%rip)
5dac(3): mov %esi,(%rsp)
5daf(3): mov %rsp,%rcx
5db2(7): mov $0xffffffff,%rdx
5db9(3): mov %rax,%rsi
5dbc(9): mov $0x0,0x4(%rsp)
5dc5(9): mov $0x0,0xc(%rsp)
5dce(9): mov $0x0,0x14(%rsp)
5dd7(9): mov $0x0,0x1c(%rsp)
5de0(9): mov $0x0,0x24(%rsp)
5de9(9): mov $0x0,0x2c(%rsp)
5df2(8): mov $0x0,0x34(%rsp)
5dfa(5): call 0xfffffa46(%rip)
5dff(5): mov 0x38(%rsp),%rcx
5e04(9): xor $0x28,%rcx
5e0d(2): jnz 0xc(%rip)
5e0f(4): add $0x48,%rsp
5e13(1): ret near (%rsp)
5e14(5): call 0xffffb78c(%rip)
5e19(5): call 0xffffb847(%rip)

"quotearg_n_style_mem" :
5e20(4): sub $0x48,%rsp
5e24(3): mov %rdx,%rax
5e27(3): mov %rcx,%rdx
5e2a(9): mov $0x28,%rcx
5e33(5): mov %rcx,0x38(%rsp)
5e38(2): xor %ecx,%ecx
5e3a(3): cmp $0xa,%esi
5e3d(2): jz 0x63(%rip)
5e3f(3): mov %esi,(%rsp)
5e42(3): mov %rsp,%rcx
5e45(3): mov %rax,%rsi
5e48(9): mov $0x0,0x4(%rsp)
5e51(9): mov $0x0,0xc(%rsp)
5e5a(9): mov $0x0,0x14(%rsp)
5e63(9): mov $0x0,0x1c(%rsp)
5e6c(9): mov $0x0,0x24(%rsp)
5e75(9): mov $0x0,0x2c(%rsp)
5e7e(8): mov $0x0,0x34(%rsp)
5e86(5): call 0xfffff9ba(%rip)
5e8b(5): mov 0x38(%rsp),%rdx
5e90(9): xor $0x28,%rdx
5e99(2): jnz 0xc(%rip)
5e9b(4): add $0x48,%rsp
5e9f(1): ret near (%rsp)
5ea0(5): call 0xffffb700(%rip)
5ea5(5): call 0xffffb7bb(%rip)

"quotearg_style" :
5eb0(3): mov %rsi,%rdx
5eb3(2): mov %edi,%esi
5eb5(2): xor %edi,%edi
5eb7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5ec0(3): mov %rdx,%rcx
5ec3(3): mov %rsi,%rdx
5ec6(2): mov %edi,%esi
5ec8(2): xor %edi,%edi
5eca(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5ed0(4): sub $0x48,%rsp
5ed4(2): mov %edx,%ecx
5ed6(9): mov $0x28,%rax
5edf(5): mov %rax,0x38(%rsp)
5ee4(2): xor %eax,%eax
5ee6(7): mov 0x205363(%rip),%rax
5eed(3): mov %rsp,%r8
5ef0(3): and $0x1f,%ecx
5ef3(8): movdqa 0x205325(%rip),%xmm0
5efb(5): mov %rax,0x30(%rsp)
5f00(2): mov %edx,%eax
5f02(4): movaps %xmm0,(%rsp)
5f06(3): shr $0x5,%al
5f09(3): movzx %al,%eax
5f0c(5): lea 0x8(%r8,%rax,4),%r9
5f11(8): movdqa 0x205317(%rip),%xmm0
5f19(5): movaps %xmm0,0x10(%rsp)
5f1e(8): movdqa 0x20531a(%rip),%xmm0
5f26(5): movaps %xmm0,0x20(%rsp)
5f2b(3): mov (%r9),%edx
5f2e(2): mov %edx,%eax
5f30(2): shr %cl,%eax
5f32(2): not %eax
5f34(3): and $0x1,%eax
5f37(2): shl/sal %cl,%eax
5f39(3): mov %r8,%rcx
5f3c(2): xor %edx,%eax
5f3e(3): mov %rsi,%rdx
5f41(3): mov %rdi,%rsi
5f44(3): mov %eax,(%r9)
5f47(2): xor %edi,%edi
5f49(5): call 0xfffff8f7(%rip)
5f4e(5): mov 0x38(%rsp),%rsi
5f53(9): xor $0x28,%rsi
5f5c(2): jnz 0x7(%rip)
5f5e(4): add $0x48,%rsp
5f62(1): ret near (%rsp)
5f63(5): call 0xffffb6fd(%rip)

"quotearg_char" :
5f70(4): movsx %sil,%edx
5f74(7): mov $0xffffffff,%rsi
5f7b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5f80(5): mov $0x3a,%edx
5f85(7): mov $0xffffffff,%rsi
5f8c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5fa0(5): mov $0x3a,%edx
5fa5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5fb0(4): sub $0x48,%rsp
5fb4(3): mov %rdx,%rax
5fb7(9): mov $0x28,%rdx
5fc0(5): mov %rdx,0x38(%rsp)
5fc5(2): xor %edx,%edx
5fc7(3): cmp $0xa,%esi
5fca(2): jz 0x6a(%rip)
5fcc(3): mov %esi,(%rsp)
5fcf(3): mov %rsp,%rcx
5fd2(7): mov $0xffffffff,%rdx
5fd9(3): mov %rax,%rsi
5fdc(9): mov $0x0,0x4(%rsp)
5fe5(9): mov $0x4000000,0xc(%rsp)
5fee(9): mov $0x0,0x14(%rsp)
5ff7(9): mov $0x0,0x1c(%rsp)
6000(9): mov $0x0,0x24(%rsp)
6009(9): mov $0x0,0x2c(%rsp)
6012(8): mov $0x0,0x34(%rsp)
601a(5): call 0xfffff826(%rip)
601f(5): mov 0x38(%rsp),%rcx
6024(9): xor $0x28,%rcx
602d(2): jnz 0xc(%rip)
602f(4): add $0x48,%rsp
6033(1): ret near (%rsp)
6034(5): call 0xffffb56c(%rip)
6039(5): call 0xffffb627(%rip)

"quotearg_n_custom_mem" :
6040(4): sub $0x48,%rsp
6044(3): mov %rcx,%r9
6047(7): mov 0x205202(%rip),%rcx
604e(8): movdqa 0x2051ca(%rip),%xmm0
6056(9): mov $0x28,%rax
605f(5): mov %rax,0x38(%rsp)
6064(2): xor %eax,%eax
6066(4): movaps %xmm0,(%rsp)
606a(3): test %rsi,%rsi
606d(5): mov %rcx,0x30(%rsp)
6072(7): mov $0xa,(%rsp)
6079(8): movdqa 0x2051af(%rip),%xmm0
6081(5): movaps %xmm0,0x10(%rsp)
6086(8): movdqa 0x2051b2(%rip),%xmm0
608e(5): movaps %xmm0,0x20(%rsp)
6093(2): jz 0x34(%rip)
6095(3): test %rdx,%rdx
6098(2): jz 0x2f(%rip)
609a(5): mov %rsi,0x28(%rsp)
609f(5): mov %rdx,0x30(%rsp)
60a4(3): mov %rsp,%rcx
60a7(3): mov %r8,%rdx
60aa(3): mov %r9,%rsi
60ad(5): call 0xfffff793(%rip)
60b2(5): mov 0x38(%rsp),%rdi
60b7(9): xor $0x28,%rdi
60c0(2): jnz 0xc(%rip)
60c2(4): add $0x48,%rsp
60c6(1): ret near (%rsp)
60c7(5): call 0xffffb4d9(%rip)
60cc(5): call 0xffffb594(%rip)

"quotearg_n_custom" :
60e0(7): mov $0xffffffff,%r8
60e7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
60f0(3): mov %rdx,%rcx
60f3(7): mov $0xffffffff,%r8
60fa(3): mov %rsi,%rdx
60fd(3): mov %rdi,%rsi
6100(2): xor %edi,%edi
6102(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
6110(3): mov %rcx,%r8
6113(3): mov %rdx,%rcx
6116(3): mov %rsi,%rdx
6119(3): mov %rdi,%rsi
611c(2): xor %edi,%edi
611e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
6130(7): lea 0x204ee9(%rip),%rcx
6137(5): jmp 0xfffff709(%rip)

"quote_mem" :
6140(7): lea 0x204ed9(%rip),%rcx
6147(3): mov %rsi,%rdx
614a(3): mov %rdi,%rsi
614d(2): xor %edi,%edi
614f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
6160(7): lea 0x204eb9(%rip),%rcx
6167(7): mov $0xffffffff,%rdx
616e(5): jmp 0xfffff6d2(%rip)

"quote" :
6180(7): lea 0x204e99(%rip),%rcx
6187(3): mov %rdi,%rsi
618a(7): mov $0xffffffff,%rdx
6191(2): xor %edi,%edi
6193(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
61a0(2): push %r15
61a2(2): push %r14
61a4(2): push %r13
61a6(2): push %r12
61a8(3): mov %r9,%r12
61ab(1): push %rbp
61ac(1): push %rbx
61ad(3): mov %rdi,%rbp
61b0(3): mov %r8,%rbx
61b3(4): sub $0x28,%rsp
61b7(3): test %rsi,%rsi
61ba(6): jz 0x11e(%rip)
61c0(3): mov %rdx,%r8
61c3(7): lea 0x239e(%rip),%rdx
61ca(3): mov %rcx,%r9
61cd(2): xor %eax,%eax
61cf(3): mov %rsi,%rcx
61d2(5): mov $0x1,%esi
61d7(5): call 0xffffb699(%rip)
61dc(7): lea 0x2398(%rip),%rsi
61e3(2): xor %edi,%edi
61e5(5): mov $0x5,%edx
61ea(5): call 0xffffb446(%rip)
61ef(7): lea 0x26aa(%rip),%rdx
61f6(3): mov %rax,%rcx
61f9(6): mov $0x7e3,%r8d
61ff(5): mov $0x1,%esi
6204(3): mov %rbp,%rdi
6207(2): xor %eax,%eax
6209(5): call 0xffffb667(%rip)
620e(7): lea 0x23f3(%rip),%rsi
6215(2): xor %edi,%edi
6217(5): mov $0x5,%edx
621c(5): call 0xffffb414(%rip)
6221(3): mov %rbp,%rsi
6224(3): mov %rax,%rdi
6227(5): call 0xffffb509(%rip)
622c(4): cmp $0x9,%r12
6230(6): jnbe 0x340(%rip)
6236(7): lea 0x2627(%rip),%rdx
623d(4): movsxd 0x0(%rdx,%r12,4),%rax
6241(3): add %rdx,%rax
6244(2): jmp %rax
6246(a): nop 0x0(%rax,%rax,1)
6250(4): mov 0x38(%rbx),%r9
6254(4): mov 0x10(%rbx),%rax
6258(7): lea 0x2519(%rip),%rsi
625f(4): mov 0x8(%rbx),%r8
6263(5): mov $0x5,%edx
6268(2): xor %edi,%edi
626a(4): mov 0x30(%rbx),%r13
626e(4): mov 0x28(%rbx),%r12
6272(5): mov %r9,0x10(%rsp)
6277(4): mov 0x20(%rbx),%r15
627b(4): mov 0x18(%rbx),%r14
627f(4): mov %rax,(%rsp)
6283(5): mov %r8,0x8(%rsp)
6288(3): mov (%rbx),%rbx
628b(5): call 0xffffb3a5(%rip)
6290(4): sub $0x8,%rsp
6294(5): mov 0x18(%rsp),%r9
6299(3): mov %rax,%rdx
629c(3): mov %rbx,%rcx
629f(5): mov $0x1,%esi
62a4(3): mov %rbp,%rdi
62a7(2): xor %eax,%eax
62a9(2): push %r9
62ab(2): push %r13
62ad(2): push %r12
62af(2): push %r15
62b1(2): push %r14
62b3(5): mov 0x30(%rsp),%r9
62b8(5): mov 0x38(%rsp),%r8
62bd(5): call 0xffffb5b3(%rip)
62c2(4): add $0x30,%rsp
62c6(4): add $0x28,%rsp
62ca(1): pop %rbx
62cb(1): pop %rbp
62cc(2): pop %r12
62ce(2): pop %r13
62d0(2): pop %r14
62d2(2): pop %r15
62d4(1): ret near (%rsp)
62d5(3): nop (%rax)
62d8(3): mov %rcx,%r8
62db(3): mov %rdx,%rcx
62de(7): lea 0x228f(%rip),%rdx
62e5(5): mov $0x1,%esi
62ea(2): xor %eax,%eax
62ec(5): call 0xffffb584(%rip)
62f1(5): jmp 0xfffffeeb(%rip)
62f6(a): nop 0x0(%rax,%rax,1)
6300(4): mov 0x40(%rbx),%r10
6304(4): mov 0x38(%rbx),%r9
6308(7): lea 0x2499(%rip),%rsi
630f(4): mov 0x10(%rbx),%rax
6313(4): mov 0x8(%rbx),%r8
6317(5): mov $0x5,%edx
631c(4): mov 0x30(%rbx),%r13
6320(4): mov 0x28(%rbx),%r12
6324(4): mov 0x20(%rbx),%r15
6328(4): mov 0x18(%rbx),%r14
632c(3): mov (%rbx),%rbx
632f(5): mov %r10,0x18(%rsp)
6334(5): mov %r9,0x10(%rsp)
6339(4): mov %rax,(%rsp)
633d(5): mov %r8,0x8(%rsp)
6342(2): xor %edi,%edi
6344(5): call 0xffffb2ec(%rip)
6349(5): mov 0x18(%rsp),%r10
634e(2): push %r10
6350(5): jmp 0xffffff44(%rip)
6355(3): nop (%rax)
6358(3): mov (%rbx),%rbx
635b(7): lea 0x221d(%rip),%rsi
6362(5): mov $0x5,%edx
6367(2): xor %edi,%edi
6369(5): call 0xffffb2c7(%rip)
636e(4): add $0x28,%rsp
6372(3): mov %rbx,%rcx
6375(3): mov %rbp,%rdi
6378(1): pop %rbx
6379(1): pop %rbp
637a(2): pop %r12
637c(2): pop %r13
637e(2): pop %r14
6380(2): pop %r15
6382(3): mov %rax,%rdx
6385(5): mov $0x1,%esi
638a(2): xor %eax,%eax
638c(5): jmp 0xffffb4e4(%rip)
6391(7): nop 0x0(%rax)
6398(4): mov 0x8(%rbx),%r12
639c(7): lea 0x21ec(%rip),%rsi
63a3(3): mov (%rbx),%rbx
63a6(5): mov $0x5,%edx
63ab(2): xor %edi,%edi
63ad(5): call 0xffffb283(%rip)
63b2(4): add $0x28,%rsp
63b6(3): mov %r12,%r8
63b9(3): mov %rbx,%rcx
63bc(3): mov %rbp,%rdi
63bf(3): mov %rax,%rdx
63c2(5): mov $0x1,%esi
63c7(1): pop %rbx
63c8(1): pop %rbp
63c9(2): pop %r12
63cb(2): pop %r13
63cd(2): pop %r14
63cf(2): pop %r15
63d1(2): xor %eax,%eax
63d3(5): jmp 0xffffb49d(%rip)
63d8(8): nop 0x0(%rax,%rax,1)
63e0(4): mov 0x10(%rbx),%r13
63e4(4): mov 0x8(%rbx),%r12
63e8(7): lea 0x21b7(%rip),%rsi
63ef(3): mov (%rbx),%rbx
63f2(5): mov $0x5,%edx
63f7(2): xor %edi,%edi
63f9(5): call 0xffffb237(%rip)
63fe(4): add $0x28,%rsp
6402(3): mov %r13,%r9
6405(3): mov %r12,%r8
6408(3): mov %rbx,%rcx
640b(3): mov %rbp,%rdi
640e(3): mov %rax,%rdx
6411(1): pop %rbx
6412(1): pop %rbp
6413(2): pop %r12
6415(2): pop %r13
6417(2): pop %r14
6419(2): pop %r15
641b(5): mov $0x1,%esi
6420(2): xor %eax,%eax
6422(5): jmp 0xffffb44e(%rip)
6427(9): nop 0x0(%rax,%rax,1)
6430(7): lea 0x22a1(%rip),%rsi
6437(5): mov $0x5,%edx
643c(2): xor %edi,%edi
643e(4): mov 0x18(%rbx),%r14
6442(4): mov 0x10(%rbx),%r13
6446(4): mov 0x8(%rbx),%r12
644a(3): mov (%rbx),%rbx
644d(5): call 0xffffb1e3(%rip)
6452(4): sub $0x8,%rsp
6456(2): push %r14
6458(3): mov %rax,%rdx
645b(3): mov %r13,%r9
645e(3): mov %r12,%r8
6461(3): mov %rbx,%rcx
6464(3): mov %rbp,%rdi
6467(5): mov $0x1,%esi
646c(2): xor %eax,%eax
646e(5): call 0xffffb402(%rip)
6473(1): pop %rax
6474(1): pop %rdx
6475(4): add $0x28,%rsp
6479(1): pop %rbx
647a(1): pop %rbp
647b(2): pop %r12
647d(2): pop %r13
647f(2): pop %r14
6481(2): pop %r15
6483(1): ret near (%rsp)
6484(4): nop 0x0(%rax)
6488(4): mov 0x20(%rbx),%r15
648c(7): lea 0x2265(%rip),%rsi
6493(5): mov $0x5,%edx
6498(2): xor %edi,%edi
649a(4): mov 0x18(%rbx),%r14
649e(4): mov 0x10(%rbx),%r13
64a2(4): mov 0x8(%rbx),%r12
64a6(3): mov (%rbx),%rbx
64a9(5): call 0xffffb187(%rip)
64ae(2): push %r15
64b0(2): jmp 0xffffffa6(%rip)
64b2(6): nop 0x0(%rax,%rax,1)
64b8(4): mov 0x8(%rbx),%r8
64bc(4): mov 0x28(%rbx),%r12
64c0(7): lea 0x2259(%rip),%rsi
64c7(4): mov 0x20(%rbx),%r15
64cb(4): mov 0x18(%rbx),%r14
64cf(5): mov $0x5,%edx
64d4(4): mov 0x10(%rbx),%r13
64d8(2): xor %edi,%edi
64da(3): mov (%rbx),%rbx
64dd(4): mov %r8,(%rsp)
64e1(5): call 0xffffb14f(%rip)
64e6(4): sub $0x8,%rsp
64ea(3): mov %r13,%r9
64ed(2): push %r12
64ef(2): push %r15
64f1(2): push %r14
64f3(5): mov 0x20(%rsp),%r8
64f8(3): mov %rbx,%rcx
64fb(3): mov %rax,%rdx
64fe(3): mov %rbp,%rdi
6501(5): mov $0x1,%esi
6506(2): xor %eax,%eax
6508(5): call 0xffffb368(%rip)
650d(4): add $0x20,%rsp
6511(4): add $0x28,%rsp
6515(1): pop %rbx
6516(1): pop %rbp
6517(2): pop %r12
6519(2): pop %r13
651b(2): pop %r14
651d(2): pop %r15
651f(1): ret near (%rsp)
6520(4): mov 0x10(%rbx),%r9
6524(4): mov 0x30(%rbx),%r13
6528(7): lea 0x2219(%rip),%rsi
652f(4): mov 0x28(%rbx),%r12
6533(4): mov 0x20(%rbx),%r15
6537(5): mov $0x5,%edx
653c(4): mov 0x18(%rbx),%r14
6540(4): mov 0x8(%rbx),%r8
6544(2): xor %edi,%edi
6546(5): mov %r9,0x8(%rsp)
654b(3): mov (%rbx),%rbx
654e(4): mov %r8,(%rsp)
6552(5): call 0xffffb0de(%rip)
6557(2): push %r13
6559(2): push %r12
655b(2): push %r15
655d(2): push %r14
655f(5): mov 0x28(%rsp),%r9
6564(2): jmp 0xffffff8f(%rip)
6566(a): nop 0x0(%rax,%rax,1)
6570(4): mov 0x40(%rbx),%r10
6574(4): mov 0x38(%rbx),%r9
6578(5): mov $0x5,%edx
657d(4): mov 0x10(%rbx),%rax
6581(4): mov 0x8(%rbx),%r8
6585(7): lea 0x2254(%rip),%rsi
658c(4): mov 0x30(%rbx),%r13
6590(4): mov 0x28(%rbx),%r12
6594(4): mov 0x20(%rbx),%r15
6598(4): mov 0x18(%rbx),%r14
659c(5): mov %r10,0x18(%rsp)
65a1(5): mov %r9,0x10(%rsp)
65a6(4): mov %rax,(%rsp)
65aa(5): mov %r8,0x8(%rsp)
65af(3): mov (%rbx),%rbx
65b2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
65c0(3): xor %r9d,%r9d
65c3(4): cmp $0x0,(%r8)
65c7(2): jz 0x14(%rip)
65c9(7): nop 0x0(%rax)
65d0(4): add $0x1,%r9
65d4(5): cmp $0x0,0x0(%r8,%r9,8)
65d9(2): jnz 0xfffffff7(%rip)
65db(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
65e0(4): sub $0x68,%rsp
65e4(3): mov %r8,%r10
65e7(3): xor %r9d,%r9d
65ea(9): mov $0x28,%rax
65f3(5): mov %rax,0x58(%rsp)
65f8(2): xor %eax,%eax
65fa(3): mov %rsp,%r8
65fd(3): nop (%rax)
6600(3): mov (%r10),%eax
6603(3): cmp $0x2f,%eax
6606(2): jnbe 0x44(%rip)
6608(3): mov %eax,%r11d
660b(4): add 0x10(%r10),%r11
660f(3): add $0x8,%eax
6612(3): mov %eax,(%r10)
6615(3): mov (%r11),%rax
6618(3): test %rax,%rax
661b(4): mov %rax,0x0(%r8,%r9,8)
661f(2): jz 0xc(%rip)
6621(4): add $0x1,%r9
6625(4): cmp $0xa,%r9
6629(2): jnz 0xffffffd7(%rip)
662b(5): call 0xfffffb75(%rip)
6630(5): mov 0x58(%rsp),%rax
6635(9): xor $0x28,%rax
663e(2): jnz 0x7(%rip)
6640(4): add $0x68,%rsp
6644(1): ret near (%rsp)
6645(5): call 0xffffb01b(%rip)
664a(4): mov 0x8(%r10),%r11
664e(4): lea 0x8(%r11),%rax
6652(4): mov %rax,0x8(%r10)
6656(2): jmp 0xffffffbf(%rip)

"version_etc" :
6660(1): push %rbp
6661(1): push %rbx
6662(6): mov $0x20,%r10d
6668(3): xor %r11d,%r11d
666b(7): sub $0xb8,%rsp
6672(9): mov $0x28,%rax
667b(5): mov %rax,0x78(%rsp)
6680(2): xor %eax,%eax
6682(8): lea 0xd0(%rsp),%rax
668a(8): mov %r8,0xa0(%rsp)
6692(8): lea 0xd0(%rsp),%rbx
669a(5): lea 0x20(%rsp),%r8
669f(8): mov %r9,0xa8(%rsp)
66a7(8): mov $0x20,0x8(%rsp)
66af(5): mov %rax,0x10(%rsp)
66b4(8): lea 0x80(%rsp),%rax
66bc(3): xor %r9d,%r9d
66bf(5): mov %rax,0x18(%rsp)
66c4(3): mov %rax,%rbp
66c7(9): nop 0x0(%rax,%rax,1)
66d0(4): cmp $0x2f,%r10d
66d4(2): jnbe 0x58(%rip)
66d6(3): mov %r10d,%eax
66d9(6): mov $0x1,%r11d
66df(4): add $0x8,%r10d
66e3(3): add %rbp,%rax
66e6(3): mov (%rax),%rax
66e9(3): test %rax,%rax
66ec(4): mov %rax,0x0(%r8,%r9,8)
66f0(2): jz 0xc(%rip)
66f2(4): add $0x1,%r9
66f6(4): cmp $0xa,%r9
66fa(2): jnz 0xffffffd6(%rip)
66fc(3): test %r11b,%r11b
66ff(2): jnz 0x26(%rip)
6701(5): call 0xfffffa9f(%rip)
6706(5): mov 0x78(%rsp),%rax
670b(9): xor $0x28,%rax
6714(2): jnz 0xc(%rip)
6716(7): add $0xb8,%rsp
671d(1): pop %rbx
671e(1): pop %rbp
671f(1): ret near (%rsp)
6720(5): call 0xffffaf40(%rip)
6725(5): mov %r10d,0x8(%rsp)
672a(2): jmp 0xffffffd7(%rip)
672c(3): mov %rbx,%rax
672f(4): add $0x8,%rbx
6733(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6740(1): push %rbx
6741(7): lea 0x1e7a(%rip),%rsi
6748(5): mov $0x5,%edx
674d(2): xor %edi,%edi
674f(5): call 0xffffaee1(%rip)
6754(7): lea 0x1e7c(%rip),%rdx
675b(3): mov %rax,%rsi
675e(5): mov $0x1,%edi
6763(2): xor %eax,%eax
6765(5): call 0xffffb08b(%rip)
676a(7): lea 0x1e7c(%rip),%rsi
6771(5): mov $0x5,%edx
6776(2): xor %edi,%edi
6778(5): call 0xffffaeb8(%rip)
677d(7): lea 0x1414(%rip),%rcx
6784(7): lea 0xc65(%rip),%rdx
678b(3): mov %rax,%rsi
678e(5): mov $0x1,%edi
6793(2): xor %eax,%eax
6795(5): call 0xffffb05b(%rip)
679a(7): mov 0x2048e7(%rip),%rbx
67a1(7): lea 0x2078(%rip),%rsi
67a8(2): xor %edi,%edi
67aa(5): mov $0x5,%edx
67af(5): call 0xffffae81(%rip)
67b4(3): mov %rbx,%rsi
67b7(3): mov %rax,%rdi
67ba(1): pop %rbx
67bb(5): jmp 0xffffaf75(%rip)

"xmalloc" :
67c0(1): push %rbx
67c1(3): mov %rdi,%rbx
67c4(5): call 0xffffafbc(%rip)
67c9(3): test %rax,%rax
67cc(2): jnz 0x7(%rip)
67ce(3): test %rbx,%rbx
67d1(2): jnz 0x4(%rip)
67d3(1): pop %rbx
67d4(1): ret near (%rsp)
67d5(5): call 0x23b(%rip)

"xnmalloc" :
67e0(3): mov %rdi,%rax
67e3(3): mul %rax,%rsi,%rdx
67e6(3): mov %rax,%rdi
67e9(3): seto %al
67ec(3): test %rdi,%rdi
67ef(2): js 0xc(%rip)
67f1(3): movzx %al,%eax
67f4(3): test %rax,%rax
67f7(2): jnz 0x4(%rip)
67f9(2): jmp 0xffffffc7(%rip)
67fb(4): sub $0x8,%rsp
67ff(5): call 0x211(%rip)

"xrealloc" :
6820(3): test %rsi,%rsi
6823(1): push %rbx
6824(3): mov %rsi,%rbx
6827(2): jnz 0x7(%rip)
6829(3): test %rdi,%rdi
682c(2): jnz 0x1c(%rip)
682e(3): mov %rbx,%rsi
6831(5): call 0xffffaf9f(%rip)
6836(3): test %rax,%rax
6839(2): jnz 0x7(%rip)
683b(3): test %rbx,%rbx
683e(2): jnz 0x13(%rip)
6840(1): pop %rbx
6841(1): ret near (%rsp)
6842(6): nop 0x0(%rax,%rax,1)
6848(5): call 0xffffad48(%rip)
684d(2): xor %eax,%eax
684f(1): pop %rbx
6850(1): ret near (%rsp)
6851(5): call 0x1bf(%rip)

"xnrealloc" :
6860(3): mov %rsi,%rax
6863(3): mul %rax,%rdx,%rdx
6866(3): mov %rax,%rsi
6869(3): seto %al
686c(3): test %rsi,%rsi
686f(2): js 0xc(%rip)
6871(3): movzx %al,%eax
6874(3): test %rax,%rax
6877(2): jnz 0x4(%rip)
6879(2): jmp 0xffffffa7(%rip)
687b(4): sub $0x8,%rsp
687f(5): call 0x191(%rip)

"x2nrealloc" :
6890(3): test %rdi,%rdi
6893(3): mov %rdx,%r9
6896(3): mov (%rsi),%rcx
6899(2): jz 0x37(%rip)
689b(2): xor %edx,%edx
689d(a): mov $0x6148914691236517204,%rax
68a7(3): div %r9,%rax
68aa(3): cmp %rcx,%rax
68ad(2): jbe 0x3e(%rip)
68af(3): mov %rcx,%rax
68b2(3): shr $0x1,%rax
68b5(5): lea 0x1(%rax,%rcx,1),%rcx
68ba(3): mov %rcx,(%rsi)
68bd(4): imul %r9,%rcx
68c1(3): mov %rcx,%rsi
68c4(5): jmp 0xffffff5c(%rip)
68c9(7): nop 0x0(%rax)
68d0(3): test %rcx,%rcx
68d3(2): jz 0x25(%rip)
68d5(3): mov %rcx,%rax
68d8(3): mul %rax,%r9,%rdx
68db(3): seto %dl
68de(3): test %rax,%rax
68e1(3): movzx %dl,%edx
68e4(2): js 0x7(%rip)
68e6(3): test %rdx,%rdx
68e9(2): jz 0xffffffd1(%rip)
68eb(4): sub $0x8,%rsp
68ef(5): call 0x121(%rip)
68f4(4): nop 0x0(%rax)
68f8(2): xor %edx,%edx
68fa(5): mov $0x80,%eax
68ff(3): xor %r8d,%r8d
6902(3): div %r9,%rax
6905(3): test %rax,%rax
6908(4): setz %r8b
690c(4): lea 0x0(%r8,%rax,1),%rcx
6910(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6920(3): test %rdi,%rdi
6923(3): mov (%rsi),%rax
6926(2): jz 0x2a(%rip)
6928(a): mov $0x6148914691236517203,%rdx
6932(3): cmp %rdx,%rax
6935(2): jnbe 0x2c(%rip)
6937(3): mov %rax,%rdx
693a(3): shr $0x1,%rdx
693d(5): lea 0x1(%rdx,%rax,1),%rax
6942(3): mov %rax,(%rsi)
6945(3): mov %rax,%rsi
6948(5): jmp 0xfffffed8(%rip)
694d(3): nop (%rax)
6950(3): test %rax,%rax
6953(5): mov $0x80,%edx
6958(4): cmove %rdx,%rax
695c(3): test %rax,%rax
695f(2): jns 0xffffffe3(%rip)
6961(4): sub $0x8,%rsp
6965(5): call 0xab(%rip)

"xzalloc" :
6970(1): push %rbx
6971(3): mov %rdi,%rbx
6974(5): call 0xfffffe4c(%rip)
6979(3): mov %rbx,%rdx
697c(2): xor %esi,%esi
697e(3): mov %rax,%rdi
6981(1): pop %rbx
6982(5): jmp 0xffffad6e(%rip)

"xcalloc" :
6990(3): mov %rdi,%rax
6993(4): sub $0x8,%rsp
6997(3): mul %rax,%rsi,%rdx
699a(3): seto %dl
699d(3): test %rax,%rax
69a0(2): js 0x19(%rip)
69a2(3): movzx %dl,%edx
69a5(3): test %rdx,%rdx
69a8(2): jnz 0x11(%rip)
69aa(5): call 0xffffad96(%rip)
69af(3): test %rax,%rax
69b2(2): jz 0x7(%rip)
69b4(4): add $0x8,%rsp
69b8(1): ret near (%rsp)
69b9(5): call 0x57(%rip)

"xmemdup" :
69c0(1): push %rbp
69c1(1): push %rbx
69c2(3): mov %rdi,%rbp
69c5(3): mov %rsi,%rdi
69c8(3): mov %rsi,%rbx
69cb(4): sub $0x8,%rsp
69cf(5): call 0xfffffdf1(%rip)
69d4(4): add $0x8,%rsp
69d8(3): mov %rbx,%rdx
69db(3): mov %rbp,%rsi
69de(1): pop %rbx
69df(1): pop %rbp
69e0(3): mov %rax,%rdi
69e3(5): jmp 0xffffad7d(%rip)

"xstrdup" :
69f0(1): push %rbx
69f1(3): mov %rdi,%rbx
69f4(5): call 0xffffac5c(%rip)
69f9(3): mov %rbx,%rdi
69fc(4): lea 0x1(%rax),%rsi
6a00(1): pop %rbx
6a01(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
6a10(7): lea 0x1eb8(%rip),%rsi
6a17(4): sub $0x8,%rsp
6a1b(5): mov $0x5,%edx
6a20(2): xor %edi,%edi
6a22(5): call 0xffffac0e(%rip)
6a27(6): mov 0x2045eb(%rip),%edi
6a2d(7): lea 0x1610(%rip),%rdx
6a34(3): mov %rax,%rcx
6a37(2): xor %esi,%esi
6a39(2): xor %eax,%eax
6a3b(5): call 0xffffadd5(%rip)
6a40(5): call 0xffffab60(%rip)

"xnumtoumax" :
6a50(2): push %r15
6a52(2): push %r14
6a54(3): mov %rcx,%r15
6a57(2): push %r13
6a59(2): push %r12
6a5b(3): mov %rdx,%r14
6a5e(1): push %rbp
6a5f(1): push %rbx
6a60(2): mov %esi,%edx
6a62(2): xor %esi,%esi
6a64(3): mov %rdi,%r12
6a67(3): mov %r9,%r13
6a6a(4): sub $0x18,%rsp
6a6e(3): mov %rsp,%rcx
6a71(4): mov 0x50(%rsp),%ebx
6a75(9): mov $0x28,%rax
6a7e(5): mov %rax,0x8(%rsp)
6a83(2): xor %eax,%eax
6a85(5): call 0xfb(%rip)
6a8a(2): test %eax,%eax
6a8c(6): jnz 0x94(%rip)
6a92(4): mov (%rsp),%rbp
6a96(3): cmp %r14,%rbp
6a99(2): jb 0x7(%rip)
6a9b(3): cmp %r15,%rbp
6a9e(2): jbe 0x56(%rip)
6aa0(5): call 0xffffab10(%rip)
6aa5(7): cmp $0x40000000,%rbp
6aac(3): mov %rax,%r14
6aaf(2): sbb %eax,%eax
6ab1(3): and $0xd7,%eax
6ab4(3): add $0x4b,%eax
6ab7(3): mov %eax,(%r14)
6aba(3): mov %r12,%rdi
6abd(5): call 0xfffff6c3(%rip)
6ac2(3): mov (%r14),%esi
6ac5(3): mov %rax,%r8
6ac8(5): mov $0x0,%eax
6acd(7): lea 0x156c(%rip),%rdx
6ad4(3): mov %r13,%rcx
6ad7(3): cmp $0x16,%esi
6ada(3): cmove %eax,%esi
6add(2): test %ebx,%ebx
6adf(5): mov $0x1,%eax
6ae4(3): cmove %eax,%ebx
6ae7(2): xor %eax,%eax
6ae9(2): mov %ebx,%edi
6aeb(5): call 0xffffad25(%rip)
6af0(4): mov (%rsp),%rbp
6af4(5): mov 0x8(%rsp),%rdx
6af9(9): xor $0x28,%rdx
6b02(3): mov %rbp,%rax
6b05(2): jnz 0x46(%rip)
6b07(4): add $0x18,%rsp
6b0b(1): pop %rbx
6b0c(1): pop %rbp
6b0d(2): pop %r12
6b0f(2): pop %r13
6b11(2): pop %r14
6b13(2): pop %r15
6b15(1): ret near (%rsp)
6b16(a): nop 0x0(%rax,%rax,1)
6b20(2): mov %eax,%ebp
6b22(5): call 0xffffaa8e(%rip)
6b27(3): cmp $0x1,%ebp
6b2a(3): mov %rax,%r14
6b2d(2): jz 0x13(%rip)
6b2f(3): cmp $0x3,%ebp
6b32(2): jnz 0xffffff88(%rip)
6b34(6): mov $0x0,(%rax)
6b3a(5): jmp 0xffffff80(%rip)
6b3f(1): nop 
6b40(6): mov $0x4b,(%rax)
6b46(5): jmp 0xffffff74(%rip)
6b4b(5): call 0xffffab15(%rip)

"xdectoumax" :
6b50(4): sub $0x10,%rsp
6b54(2): push %r9
6b56(3): mov %r8,%r9
6b59(3): mov %rcx,%r8
6b5c(3): mov %rdx,%rcx
6b5f(3): mov %rsi,%rdx
6b62(5): mov $0xa,%esi
6b67(5): call 0xfffffee9(%rip)
6b6c(4): add $0x18,%rsp
6b70(1): ret near (%rsp)

"xstrtoumax" :
6b80(2): push %r15
6b82(2): push %r14
6b84(2): push %r13
6b86(2): push %r12
6b88(1): push %rbp
6b89(1): push %rbx
6b8a(4): sub $0x28,%rsp
6b8e(9): mov $0x28,%rax
6b97(5): mov %rax,0x18(%rsp)
6b9c(2): xor %eax,%eax
6b9e(3): cmp $0x24,%edx
6ba1(6): jnbe 0x364(%rip)
6ba7(5): lea 0x10(%rsp),%rax
6bac(3): mov %rsi,%r15
6baf(3): test %rsi,%rsi
6bb2(3): mov %rdi,%rbp
6bb5(4): mov %edx,0x8(%rsp)
6bb9(3): mov %rcx,%r14
6bbc(3): mov %r8,%r13
6bbf(4): cmove %rax,%r15
6bc3(5): call 0xffffa9ed(%rip)
6bc8(6): mov $0x0,(%rax)
6bce(3): mov %rax,%r12
6bd1(4): movzx 0x0(%rbp),%ebx
6bd5(5): call 0xffffaccb(%rip)
6bda(4): mov 0x8(%rsp),%edx
6bde(3): mov (%rax),%rsi
6be1(3): mov %rbp,%rax
6be4(2): jmp 0x13(%rip)
6be6(a): nop 0x0(%rax,%rax,1)
6bf0(4): add $0x1,%rax
6bf4(3): movzx (%rax),%ebx
6bf7(3): movzx %bl,%ecx
6bfa(5): test $0x20,0x1(%rsi,%rcx,2)
6bff(2): jnz 0xfffffff1(%rip)
6c01(3): cmp $0x2d,%bl
6c04(2): jz 0x54(%rip)
6c06(2): xor %ecx,%ecx
6c08(3): mov %r15,%rsi
6c0b(3): mov %rbp,%rdi
6c0e(5): call 0xffffaad2(%rip)
6c13(3): mov (%r15),%rcx
6c16(3): mov %rax,%rbx
6c19(3): cmp %rbp,%rcx
6c1c(2): jz 0x2c(%rip)
6c1e(4): mov (%r12),%eax
6c22(2): test %eax,%eax
6c24(2): jz 0x64(%rip)
6c26(3): cmp $0x22,%eax
6c29(5): mov $0x1,%ebp
6c2e(2): jnz 0x2a(%rip)
6c30(3): test %r13,%r13
6c33(2): jz 0xb(%rip)
6c35(4): movzx (%rcx),%r12d
6c39(3): test %r12b,%r12b
6c3c(2): jnz 0x7b(%rip)
6c3e(3): mov %rbx,(%r14)
6c41(2): jmp 0x1c(%rip)
6c43(5): nop 0x0(%rax,%rax,1)
6c48(3): test %r13,%r13
6c4b(5): mov %rcx,0x8(%rsp)
6c50(2): jnz 0x40(%rip)
6c52(6): nop 0x0(%rax,%rax,1)
6c58(5): mov $0x4,%ebp
6c5d(5): mov 0x18(%rsp),%rdi
6c62(9): xor $0x28,%rdi
6c6b(2): mov %ebp,%eax
6c6d(6): jnz 0x293(%rip)
6c73(4): add $0x28,%rsp
6c77(1): pop %rbx
6c78(1): pop %rbp
6c79(2): pop %r12
6c7b(2): pop %r13
6c7d(2): pop %r14
6c7f(2): pop %r15
6c81(1): ret near (%rsp)
6c82(6): nop 0x0(%rax,%rax,1)
6c88(2): xor %ebp,%ebp
6c8a(2): jmp 0xffffffa6(%rip)
6c8c(4): nop 0x0(%rax)
6c90(5): movzx 0x0(%rbp),%r12d
6c95(3): test %r12b,%r12b
6c98(2): jz 0xffffffc0(%rip)
6c9a(4): movsx %r12b,%esi
6c9e(3): mov %r13,%rdi
6ca1(2): xor %ebp,%ebp
6ca3(5): call 0xffffa9ed(%rip)
6ca8(3): test %rax,%rax
6cab(5): mov $0x1,%ebx
6cb0(5): mov 0x8(%rsp),%rcx
6cb5(2): jz 0xffffffa3(%rip)
6cb7(4): movsx %r12b,%esi
6cbb(3): mov %r13,%rdi
6cbe(5): mov %rcx,0x8(%rsp)
6cc3(5): call 0xffffa9cd(%rip)
6cc8(3): test %rax,%rax
6ccb(5): mov 0x8(%rsp),%rcx
6cd0(6): jz 0xcc(%rip)
6cd6(5): lea 0xffffffbb(%r12),%eax
6cdb(2): cmp $0x2f,%al
6cdd(2): jnbe 0x53(%rip)
6cdf(a): mov $0x142129060940101,%rdx
6ce9(4): bt %rax,%rdx
6ced(2): jnb 0x43(%rip)
6cef(5): mov $0x30,%esi
6cf4(3): mov %r13,%rdi
6cf7(5): mov %rcx,0x8(%rsp)
6cfc(5): call 0xffffa994(%rip)
6d01(3): test %rax,%rax
6d04(5): mov 0x8(%rsp),%rcx
6d09(2): jz 0x27(%rip)
6d0b(4): movzx 0x1(%rcx),%eax
6d0f(2): cmp $0x44,%al
6d11(2): jz 0xe(%rip)
6d13(2): cmp $0x69,%al
6d15(6): jz 0x1d3(%rip)
6d1b(2): cmp $0x42,%al
6d1d(2): jnz 0x13(%rip)
6d1f(5): mov $0x2,%edi
6d24(5): mov $0x3e8,%esi
6d29(2): jmp 0x11(%rip)
6d2b(5): nop 0x0(%rax,%rax,1)
6d30(5): mov $0x1,%edi
6d35(5): mov $0x400,%esi
6d3a(4): sub $0x42,%r12d
6d3e(4): cmp $0x35,%r12b
6d42(2): jnbe 0x5a(%rip)
6d44(7): lea 0x1bdd(%rip),%rdx
6d4b(4): movzx %r12b,%r12d
6d4f(4): movsxd 0x0(%rdx,%r12,4),%rax
6d53(3): add %rdx,%rax
6d56(2): jmp %rax
6d58(3): mov %rbx,%rax
6d5b(3): mul %rax,%rsi,%rdx
6d5e(6): jo 0x1f3(%rip)
6d64(3): xor %r8d,%r8d
6d67(3): mul %rax,%rsi,%rdx
6d6a(6): jo 0x1d8(%rip)
6d70(3): mov %rax,%rbx
6d73(3): or %r8d,%ebp
6d76(a): nop 0x0(%rax,%rax,1)
6d80(3): movsxd %edi,%rdi
6d83(2): mov %ebp,%eax
6d85(3): add %rdi,%rcx
6d88(3): or $0x2,%eax
6d8b(3): mov %rcx,(%r15)
6d8e(3): cmp $0x0,(%rcx)
6d91(3): mov %rbx,(%r14)
6d94(3): cmovne %eax,%ebp
6d97(5): jmp 0xfffffec6(%rip)
6d9c(3): mov %rbx,(%r14)
6d9f(3): or $0x2,%ebp
6da2(5): jmp 0xfffffebb(%rip)
6da7(5): mov $0x2,%edx
6dac(3): mov %rdx,%rax
6daf(3): mul %rax,%rbx,%rdx
6db2(6): jo 0x9c(%rip)
6db8(3): add %rbx,%rbx
6dbb(2): jmp 0xffffffc5(%rip)
6dbd(5): mov $0x200,%edx
6dc2(3): mov %rdx,%rax
6dc5(3): mul %rax,%rbx,%rdx
6dc8(6): jo 0x86(%rip)
6dce(4): shl/sal $0x9,%rbx
6dd2(2): jmp 0xffffffae(%rip)
6dd4(6): mov $0x7,%r8d
6dda(3): xor %r9d,%r9d
6ddd(3): nop (%rax)
6de0(3): mov %rbx,%rax
6de3(3): mul %rax,%rsi,%rdx
6de6(3): mov %rax,%rbx
6de9(6): jo 0x195(%rip)
6def(4): sub $0x1,%r8d
6df3(2): jnz 0xffffffed(%rip)
6df5(3): or %r9d,%ebp
6df8(2): jmp 0xffffff88(%rip)
6dfa(6): mov $0x8,%r8d
6e00(3): xor %r9d,%r9d
6e03(5): nop 0x0(%rax,%rax,1)
6e08(3): mov %rbx,%rax
6e0b(3): mul %rax,%rsi,%rdx
6e0e(3): mov %rax,%rbx
6e11(6): jo 0x14f(%rip)
6e17(4): sub $0x1,%r8d
6e1b(2): jnz 0xffffffed(%rip)
6e1d(2): jmp 0xffffffd8(%rip)
6e1f(6): mov $0x4,%r8d
6e25(3): xor %r9d,%r9d
6e28(3): mov %rbx,%rax
6e2b(3): mul %rax,%rsi,%rdx
6e2e(3): mov %rax,%rbx
6e31(6): jo 0x102(%rip)
6e37(4): sub $0x1,%r8d
6e3b(2): jnz 0xffffffed(%rip)
6e3d(2): jmp 0xffffffb8(%rip)
6e3f(3): mov %rbx,%rax
6e42(3): mul %rax,%rsi,%rdx
6e45(3): mov %rax,%rbx
6e48(6): jno 0xffffff38(%rip)
6e4e(5): mov $0x1,%ebp
6e53(4): or $0xffffffff,%rbx
6e57(5): jmp 0xffffff29(%rip)
6e5c(4): nop 0x0(%rax)
6e60(6): mov $0x5,%r8d
6e66(3): xor %r9d,%r9d
6e69(3): mov %rbx,%rax
6e6c(3): mul %rax,%rsi,%rdx
6e6f(3): mov %rax,%rbx
6e72(6): jo 0xfd(%rip)
6e78(4): sub $0x1,%r8d
6e7c(2): jnz 0xffffffed(%rip)
6e7e(5): jmp 0xffffff77(%rip)
6e83(6): mov $0x6,%r8d
6e89(3): xor %r9d,%r9d
6e8c(3): mov %rbx,%rax
6e8f(3): mul %rax,%rsi,%rdx
6e92(3): mov %rax,%rbx
6e95(6): jo 0x8f(%rip)
6e9b(4): sub $0x1,%r8d
6e9f(2): jnz 0xffffffed(%rip)
6ea1(5): jmp 0xffffff54(%rip)
6ea6(5): mov $0x400,%edx
6eab(3): mov %rdx,%rax
6eae(3): mul %rax,%rbx,%rdx
6eb1(2): jo 0xffffff9d(%rip)
6eb3(4): shl/sal $0xa,%rbx
6eb7(5): jmp 0xfffffec9(%rip)
6ebc(3): mov %rbx,%rax
6ebf(3): mul %rax,%rsi,%rdx
6ec2(6): jo 0xcb(%rip)
6ec8(3): xor %r8d,%r8d
6ecb(3): mul %rax,%rsi,%rdx
6ece(6): jno 0xfffffe99(%rip)
6ed4(6): mov $0x1,%r8d
6eda(4): or $0xffffffff,%rax
6ede(5): jmp 0xfffffe89(%rip)
6ee3(5): nop 0x0(%rax,%rax,1)
6ee8(2): xor %edi,%edi
6eea(4): cmp $0x42,0x2(%rcx)
6eee(5): mov $0x400,%esi
6ef3(4): setz %dil
6ef7(4): lea 0x1(%rdi,%rdi,1),%edi
6efb(5): jmp 0xfffffe3f(%rip)
6f00(5): call 0xffffa760(%rip)
6f05(7): lea 0x1af4(%rip),%rcx
6f0c(7): lea 0x19cd(%rip),%rsi
6f13(7): lea 0x19e6(%rip),%rdi
6f1a(5): mov $0x54,%edx
6f1f(5): call 0xffffa7b1(%rip)
6f24(6): mov $0x1,%r9d
6f2a(4): or $0xffffffff,%rbx
6f2e(5): jmp 0xffffff6d(%rip)
6f33(6): mov $0x1,%r9d
6f39(4): or $0xffffffff,%rbx
6f3d(5): jmp 0xfffffefa(%rip)
6f42(6): mov $0x1,%r8d
6f48(4): or $0xffffffff,%rbx
6f4c(5): jmp 0xfffffe27(%rip)
6f51(4): or $0xffffffff,%rax
6f55(6): mov $0x1,%r8d
6f5b(5): jmp 0xfffffe0c(%rip)
6f60(6): mov $0x1,%r9d
6f66(4): or $0xffffffff,%rbx
6f6a(5): jmp 0xfffffead(%rip)
6f6f(6): mov $0x1,%r9d
6f75(4): or $0xffffffff,%rbx
6f79(5): jmp 0xfffffeff(%rip)
6f7e(6): mov $0x1,%r9d
6f84(4): or $0xffffffff,%rbx
6f88(5): jmp 0xfffffe67(%rip)
6f8d(6): mov $0x1,%r8d
6f93(4): or $0xffffffff,%rax
6f97(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
6fa0(2): push %r12
6fa2(1): push %rbp
6fa3(1): push %rbx
6fa4(3): mov %rdi,%rbx
6fa7(5): call 0xffffa7c9(%rip)
6fac(2): test %eax,%eax
6fae(3): mov %rbx,%rdi
6fb1(2): js 0x56(%rip)
6fb3(5): call 0xffffa7fd(%rip)
6fb8(2): test %eax,%eax
6fba(2): jnz 0x2e(%rip)
6fbc(3): mov %rbx,%rdi
6fbf(5): call 0x61(%rip)
6fc4(2): test %eax,%eax
6fc6(2): jz 0x3e(%rip)
6fc8(5): call 0xffffa5e8(%rip)
6fcd(3): mov (%rax),%r12d
6fd0(3): mov %rbx,%rdi
6fd3(3): mov %rax,%rbp
6fd6(5): call 0xffffa63a(%rip)
6fdb(3): test %r12d,%r12d
6fde(2): jnz 0x32(%rip)
6fe0(1): pop %rbx
6fe1(1): pop %rbp
6fe2(2): pop %r12
6fe4(1): ret near (%rsp)
6fe5(3): nop (%rax)
6fe8(3): mov %rbx,%rdi
6feb(5): call 0xffffa785(%rip)
6ff0(2): xor %esi,%esi
6ff2(5): mov $0x1,%edx
6ff7(2): mov %eax,%edi
6ff9(5): call 0xffffa6c7(%rip)
6ffe(4): cmp $0xffffffff,%rax
7002(2): jnz 0xffffffba(%rip)
7004(3): mov %rbx,%rdi
7007(1): pop %rbx
7008(1): pop %rbp
7009(2): pop %r12
700b(5): jmp 0xffffa605(%rip)
7010(4): mov %r12d,0x0(%rbp)
7014(5): mov $0xffffffff,%eax
7019(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
7020(3): test %rdi,%rdi
7023(1): push %rbx
7024(3): mov %rdi,%rbx
7027(2): jz 0x13(%rip)
7029(5): call 0xffffa787(%rip)
702e(2): test %eax,%eax
7030(2): jz 0xa(%rip)
7032(6): test $0x100,(%rbx)
7038(2): jnz 0x10(%rip)
703a(3): mov %rbx,%rdi
703d(1): pop %rbx
703e(5): jmp 0xffffa752(%rip)
7043(5): nop 0x0(%rax,%rax,1)
7048(3): mov %rbx,%rdi
704b(5): mov $0x1,%edx
7050(2): xor %esi,%esi
7052(5): call 0xe(%rip)
7057(3): mov %rbx,%rdi
705a(1): pop %rbx
705b(5): jmp 0xffffa735(%rip)

"rpl_fseeko" :
7060(4): mov 0x8(%rdi),%rax
7064(4): cmp %rax,0x10(%rdi)
7068(2): jz 0x8(%rip)
706a(5): jmp 0xffffa7b6(%rip)
706f(1): nop 
7070(4): mov 0x20(%rdi),%rax
7074(4): cmp %rax,0x28(%rdi)
7078(2): jnz 0xfffffff2(%rip)
707a(5): cmp $0x0,0x48(%rdi)
707f(2): jnz 0xffffffeb(%rip)
7081(2): push %r12
7083(1): push %rbp
7084(3): mov %edx,%r12d
7087(1): push %rbx
7088(3): mov %rsi,%rbp
708b(3): mov %rdi,%rbx
708e(5): call 0xffffa6e2(%rip)
7093(3): mov %r12d,%edx
7096(3): mov %rbp,%rsi
7099(2): mov %eax,%edi
709b(5): call 0xffffa625(%rip)
70a0(4): cmp $0xffffffff,%rax
70a4(2): jz 0xe(%rip)
70a6(3): and $0xef,(%rbx)
70a9(7): mov %rax,0x90(%rbx)
70b0(2): xor %eax,%eax
70b2(1): pop %rbx
70b3(1): pop %rbp
70b4(2): pop %r12
70b6(1): ret near (%rsp)

"rpl_mbrtowc" :
70c0(2): push %r13
70c2(2): push %r12
70c4(3): mov %rsi,%r13
70c7(1): push %rbp
70c8(1): push %rbx
70c9(3): mov %rdi,%rbx
70cc(3): mov %rdx,%r12
70cf(4): sub $0x18,%rsp
70d3(9): mov $0x28,%rax
70dc(5): mov %rax,0x8(%rsp)
70e1(2): xor %eax,%eax
70e3(5): lea 0x4(%rsp),%rax
70e8(3): test %rdi,%rdi
70eb(4): cmove %rax,%rbx
70ef(3): mov %rbx,%rdi
70f2(5): call 0xffffa58e(%rip)
70f7(4): cmp $0xfffffffd,%rax
70fb(3): mov %rax,%rbp
70fe(2): jbe 0x22(%rip)
7100(3): test %r12,%r12
7103(2): jz 0x1d(%rip)
7105(2): xor %edi,%edi
7107(5): call 0xc9(%rip)
710c(2): test %al,%al
710e(2): jnz 0x12(%rip)
7110(5): movzx 0x0(%r13),%eax
7115(5): mov $0x1,%ebp
711a(2): mov %eax,(%rbx)
711c(4): nop 0x0(%rax)
7120(5): mov 0x8(%rsp),%rdx
7125(9): xor $0x28,%rdx
712e(3): mov %rbp,%rax
7131(2): jnz 0xd(%rip)
7133(4): add $0x18,%rsp
7137(1): pop %rbx
7138(1): pop %rbp
7139(2): pop %r12
713b(2): pop %r13
713d(1): ret near (%rsp)
713e(5): call 0xffffa522(%rip)

"close_stream" :
7150(2): push %r12
7152(1): push %rbp
7153(3): mov %rdi,%rbp
7156(1): push %rbx
7157(5): call 0xffffa489(%rip)
715c(3): mov 0x0(%rbp),%ebx
715f(3): mov %rbp,%rdi
7162(3): mov %rax,%r12
7165(5): call 0xfffffe3b(%rip)
716a(3): and $0x20,%ebx
716d(2): test %ebx,%ebx
716f(2): jnz 0x19(%rip)
7171(2): test %eax,%eax
7173(2): jz 0xc(%rip)
7175(3): test %r12,%r12
7178(5): mov $0xffffffff,%eax
717d(2): jz 0x3b(%rip)
717f(1): pop %rbx
7180(1): pop %rbp
7181(2): pop %r12
7183(1): ret near (%rsp)
7184(4): nop 0x0(%rax)
7188(2): test %eax,%eax
718a(2): jnz 0x1e(%rip)
718c(5): call 0xffffa424(%rip)
7191(6): mov $0x0,(%rax)
7197(5): mov $0xffffffff,%eax
719c(1): pop %rbx
719d(1): pop %rbp
719e(2): pop %r12
71a0(1): ret near (%rsp)
71a1(7): nop 0x0(%rax)
71a8(1): pop %rbx
71a9(5): mov $0xffffffff,%eax
71ae(1): pop %rbp
71af(2): pop %r12
71b1(1): ret near (%rsp)
71b2(6): nop 0x0(%rax,%rax,1)
71b8(5): call 0xffffa3f8(%rip)
71bd(3): cmp $0x9,(%rax)
71c0(1): pop %rbx
71c1(1): pop %rbp
71c2(2): pop %r12
71c4(3): setnz %al
71c7(3): movzx %al,%eax
71ca(2): neg %eax
71cc(1): ret near (%rsp)

"hard_locale" :
71d0(4): sub $0x8,%rsp
71d4(2): xor %esi,%esi
71d6(5): call 0xffffa60a(%rip)
71db(3): mov %rax,%rdx
71de(5): mov $0x1,%eax
71e3(3): test %rdx,%rdx
71e6(2): jz 0x1f(%rip)
71e8(7): lea 0x181c(%rip),%rdi
71ef(5): mov $0x2,%ecx
71f4(3): mov %rdx,%rsi
71f7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
71f9(3): setnbe %cl
71fc(3): sbb $0x0,%cl
71ff(2): xor %eax,%eax
7201(2): test %cl,%cl
7203(2): jnz 0xd(%rip)
7205(4): add $0x8,%rsp
7209(1): ret near (%rsp)
720a(6): nop 0x0(%rax,%rax,1)
7210(7): lea 0x17f6(%rip),%rdi
7217(5): mov $0x6,%ecx
721c(3): mov %rdx,%rsi
721f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7221(3): setnbe %al
7224(2): sbb $0x0,%al
7226(2): test %al,%al
7228(3): setnz %al
722b(4): add $0x8,%rsp
722f(1): ret near (%rsp)

"locale_charset" :
7230(4): sub $0x8,%rsp
7234(5): mov $0xe,%edi
7239(5): call 0xffffa567(%rip)
723e(3): test %rax,%rax
7241(2): jz 0x1f(%rip)
7243(3): cmp $0x0,(%rax)
7246(7): lea 0x17c6(%rip),%rdx
724d(4): cmove %rdx,%rax
7251(4): add $0x8,%rsp
7255(1): ret near (%rsp)
7256(a): nop 0x0(%rax,%rax,1)
7260(7): lea 0x17ac(%rip),%rax
7267(4): add $0x8,%rsp
726b(1): ret near (%rsp)

"__libc_csu_init" :
7270(2): push %r15
7272(2): push %r14
7274(3): mov %rdx,%r15
7277(2): push %r13
7279(2): push %r12
727b(7): lea 0x20378e(%rip),%r12
7282(1): push %rbp
7283(7): lea 0x20378e(%rip),%rbp
728a(1): push %rbx
728b(3): mov %edi,%r13d
728e(3): mov %rsi,%r14
7291(3): sub %r12,%rbp
7294(4): sub $0x8,%rsp
7298(4): sar $0x3,%rbp
729c(5): call 0xffffa2cc(%rip)
72a1(3): test %rbp,%rbp
72a4(2): jz 0x22(%rip)
72a6(2): xor %ebx,%ebx
72a8(8): nop 0x0(%rax,%rax,1)
72b0(3): mov %r15,%rdx
72b3(3): mov %r14,%rsi
72b6(3): mov %r13d,%edi
72b9(4): call 0x0(%r12,%rbx,8)
72bd(4): add $0x1,%rbx
72c1(3): cmp %rbx,%rbp
72c4(2): jnz 0xffffffec(%rip)
72c6(4): add $0x8,%rsp
72ca(1): pop %rbx
72cb(1): pop %rbp
72cc(2): pop %r12
72ce(2): pop %r13
72d0(2): pop %r14
72d2(2): pop %r15
72d4(1): ret near (%rsp)

"atexit" :
72f0(7): mov 0x203d11(%rip),%rdx
72f7(2): xor %esi,%esi
72f9(5): jmp 0xffffa547(%rip)

"_fini" :
7300(4): sub $0x8,%rsp
7304(4): add $0x8,%rsp
7308(1): ret near (%rsp)

