
"getenv@plt" :
2410(6): jmp 0x20e9ea(%rip)
2416(5): push $0x0

"__snprintf_chk@plt" :
2420(6): jmp 0x20e9e2(%rip)
2426(5): push $0x1

"free@plt" :
2430(6): jmp 0x20e9da(%rip)
2436(5): push $0x2

"abort@plt" :
2440(6): jmp 0x20e9d2(%rip)
2446(5): push $0x3

"__errno_location@plt" :
2450(6): jmp 0x20e9ca(%rip)
2456(5): push $0x4

"strncmp@plt" :
2460(6): jmp 0x20e9c2(%rip)
2466(5): push $0x5

"_exit@plt" :
2470(6): jmp 0x20e9ba(%rip)
2476(5): push $0x6

"__fpending@plt" :
2480(6): jmp 0x20e9b2(%rip)
2486(5): push $0x7

"fcntl@plt" :
2490(6): jmp 0x20e9aa(%rip)
2496(5): push $0x8

"cfgetispeed@plt" :
24a0(6): jmp 0x20e9a2(%rip)
24a6(5): push $0x9

"textdomain@plt" :
24b0(6): jmp 0x20e99a(%rip)
24b6(5): push $0xa

"fclose@plt" :
24c0(6): jmp 0x20e992(%rip)
24c6(5): push $0xb

"bindtextdomain@plt" :
24d0(6): jmp 0x20e98a(%rip)
24d6(5): push $0xc

"cfsetospeed@plt" :
24e0(6): jmp 0x20e982(%rip)
24e6(5): push $0xd

"dcgettext@plt" :
24f0(6): jmp 0x20e97a(%rip)
24f6(5): push $0xe

"__ctype_get_mb_cur_max@plt" :
2500(6): jmp 0x20e972(%rip)
2506(5): push $0xf

"strlen@plt" :
2510(6): jmp 0x20e96a(%rip)
2516(5): push $0x10

"__stack_chk_fail@plt" :
2520(6): jmp 0x20e962(%rip)
2526(5): push $0x11

"getopt_long@plt" :
2530(6): jmp 0x20e95a(%rip)
2536(5): push $0x12

"mbrtowc@plt" :
2540(6): jmp 0x20e952(%rip)
2546(5): push $0x13

"dup2@plt" :
2550(6): jmp 0x20e94a(%rip)
2556(5): push $0x14

"strchr@plt" :
2560(6): jmp 0x20e942(%rip)
2566(5): push $0x15

"__overflow@plt" :
2570(6): jmp 0x20e93a(%rip)
2576(5): push $0x16

"strrchr@plt" :
2580(6): jmp 0x20e932(%rip)
2586(5): push $0x17

"lseek@plt" :
2590(6): jmp 0x20e92a(%rip)
2596(5): push $0x18

"__assert_fail@plt" :
25a0(6): jmp 0x20e922(%rip)
25a6(5): push $0x19

"__strtoul_internal@plt" :
25b0(6): jmp 0x20e91a(%rip)
25b6(5): push $0x1a

"memset@plt" :
25c0(6): jmp 0x20e912(%rip)
25c6(5): push $0x1b

"ioctl@plt" :
25d0(6): jmp 0x20e90a(%rip)
25d6(5): push $0x1c

"close@plt" :
25e0(6): jmp 0x20e902(%rip)
25e6(5): push $0x1d

"memcmp@plt" :
25f0(6): jmp 0x20e8fa(%rip)
25f6(5): push $0x1e

"fputs_unlocked@plt" :
2600(6): jmp 0x20e8f2(%rip)
2606(5): push $0x1f

"calloc@plt" :
2610(6): jmp 0x20e8ea(%rip)
2616(5): push $0x20

"strcmp@plt" :
2620(6): jmp 0x20e8e2(%rip)
2626(5): push $0x21

"strtol@plt" :
2630(6): jmp 0x20e8da(%rip)
2636(5): push $0x22

"memcpy@plt" :
2640(6): jmp 0x20e8d2(%rip)
2646(5): push $0x23

"fileno@plt" :
2650(6): jmp 0x20e8ca(%rip)
2656(5): push $0x24

"malloc@plt" :
2660(6): jmp 0x20e8c2(%rip)
2666(5): push $0x25

"fflush@plt" :
2670(6): jmp 0x20e8ba(%rip)
2676(5): push $0x26

"nl_langinfo@plt" :
2680(6): jmp 0x20e8b2(%rip)
2686(5): push $0x27

"__freading@plt" :
2690(6): jmp 0x20e8aa(%rip)
2696(5): push $0x28

"realloc@plt" :
26a0(6): jmp 0x20e8a2(%rip)
26a6(5): push $0x29

"setlocale@plt" :
26b0(6): jmp 0x20e89a(%rip)
26b6(5): push $0x2a

"cfgetospeed@plt" :
26c0(6): jmp 0x20e892(%rip)
26c6(5): push $0x2b

"__printf_chk@plt" :
26d0(6): jmp 0x20e88a(%rip)
26d6(5): push $0x2c

"error@plt" :
26e0(6): jmp 0x20e882(%rip)
26e6(5): push $0x2d

"tcgetattr@plt" :
26f0(6): jmp 0x20e87a(%rip)
26f6(5): push $0x2e

"tcsetattr@plt" :
2700(6): jmp 0x20e872(%rip)
2706(5): push $0x2f

"open@plt" :
2710(6): jmp 0x20e86a(%rip)
2716(5): push $0x30

"fseeko@plt" :
2720(6): jmp 0x20e862(%rip)
2726(5): push $0x31

"cfsetispeed@plt" :
2730(6): jmp 0x20e85a(%rip)
2736(5): push $0x32

"strtoul@plt" :
2740(6): jmp 0x20e852(%rip)
2746(5): push $0x33

"__cxa_atexit@plt" :
2750(6): jmp 0x20e84a(%rip)
2756(5): push $0x34

"exit@plt" :
2760(6): jmp 0x20e842(%rip)
2766(5): push $0x35

"fwrite@plt" :
2770(6): jmp 0x20e83a(%rip)
2776(5): push $0x36

"__fprintf_chk@plt" :
2780(6): jmp 0x20e832(%rip)
2786(5): push $0x37

"mbsinit@plt" :
2790(6): jmp 0x20e82a(%rip)
2796(5): push $0x38

"iswprint@plt" :
27a0(6): jmp 0x20e822(%rip)
27a6(5): push $0x39

"__ctype_b_loc@plt" :
27b0(6): jmp 0x20e81a(%rip)
27b6(5): push $0x3a

".plt.got" :
27c0(6): jmp 0x20e832(%rip)
27c6(2): nop 

"_init" :
23e0(4): sub $0x8,%rsp
23e4(7): mov 0x20ebfd(%rip),%rax
23eb(3): test %rax,%rax
23ee(2): jz 0x4(%rip)
23f0(2): call %rax
23f2(4): add $0x8,%rsp
23f6(1): ret near (%rsp)

"main" :
27d0(2): push %r15
27d2(2): push %r14
27d4(6): mov $0x1,%r15d
27da(2): push %r13
27dc(2): push %r12
27de(3): mov %edi,%r13d
27e1(1): push %rbp
27e2(1): push %rbx
27e3(3): mov %rsi,%rbx
27e6(3): xor %r14d,%r14d
27e9(3): xor %r12d,%r12d
27ec(2): xor %ebp,%ebp
27ee(4): sub $0x28,%rsp
27f2(3): mov (%rsi),%rdi
27f5(9): mov $0x28,%rax
27fe(5): mov %rax,0x18(%rsp)
2803(2): xor %eax,%eax
2805(5): call 0x326b(%rip)
280a(7): lea 0xb830(%rip),%rsi
2811(5): mov $0x6,%edi
2816(5): call 0xfffffe9a(%rip)
281b(7): lea 0x8d8e(%rip),%rsi
2822(7): lea 0x8c4b(%rip),%rdi
2829(5): call 0xfffffca7(%rip)
282e(7): lea 0x8c3f(%rip),%rdi
2835(5): call 0xfffffc7b(%rip)
283a(7): lea 0x311f(%rip),%rdi
2841(5): call 0x8a7f(%rip)
2846(a): mov $0x0,0x20e890(%rip)
2850(5): mov $0x1,0xf(%rsp)
2855(5): mov $0x0,0xe(%rsp)
285a(5): mov $0x0,0xd(%rsp)
285f(8): mov $0x0,0x8(%rsp)
2867(4): lea 0x0(%rbx,%rbp,8),%rsi
286b(3): mov %r13d,%edi
286e(7): lea 0x20d54b(%rip),%rcx
2875(7): lea 0x8d63(%rip),%rdx
287c(3): sub %r12d,%edi
287f(3): xor %r8d,%r8d
2882(5): call 0xfffffcae(%rip)
2887(3): cmp $0xff,%eax
288a(6): jz 0x148(%rip)
2890(3): cmp $0x46,%eax
2893(6): jz 0xad(%rip)
2899(2): jle 0x67(%rip)
289b(3): cmp $0x61,%eax
289e(6): jz 0x122(%rip)
28a4(3): cmp $0x67,%eax
28a7(6): jnz 0xb9(%rip)
28ad(5): mov $0x1,0xe(%rsp)
28b2(8): mov $0x2,0x8(%rsp)
28ba(6): mov 0x20e7f0(%rip),%esi
28c0(3): cmp %r15d,%esi
28c3(6): jle 0x94e(%rip)
28c9(3): movsxd %r15d,%rdx
28cc(4): lea 0x0(%rdx,%rbp,1),%rcx
28d0(3): lea 0xffffffff(%rsi),%edx
28d3(3): sub %r15d,%edx
28d6(4): lea 0x0(%rbx,%rcx,8),%rax
28da(3): add %rcx,%rdx
28dd(5): lea 0x8(%rbx,%rdx,8),%rdx
28e2(6): nop 0x0(%rax,%rax,1)
28e8(7): mov $0x0,(%rax)
28ef(4): add $0x8,%rax
28f3(3): cmp %rax,%rdx
28f6(2): jnz 0xfffffff2(%rip)
28f8(3): mov %esi,%r15d
28fb(5): jmp 0xffffff6c(%rip)
2900(5): cmp $0xffffff7d,%eax
2905(2): jnz 0x50(%rip)
2907(7): mov 0x20e79a(%rip),%rdi
290e(7): mov 0x20e703(%rip),%rcx
2915(7): lea 0x8cac(%rip),%r8
291c(7): lea 0x8b4d(%rip),%rdx
2923(7): lea 0x8a13(%rip),%rsi
292a(3): xor %r9d,%r9d
292d(2): xor %eax,%eax
292f(5): call 0x5331(%rip)
2934(2): xor %edi,%edi
2936(5): call 0xfffffe2a(%rip)
293b(5): nop 0x0(%rax,%rax,1)
2940(3): test %r14,%r14
2943(6): jnz 0x8aa(%rip)
2949(7): mov 0x20e768(%rip),%r14
2950(5): jmp 0xffffff6a(%rip)
2955(5): cmp $0xffffff7e,%eax
295a(6): jz 0x490(%rip)
2960(3): add %r15d,%r12d
2963(7): lea 0x8c6e(%rip),%rdi
296a(5): mov $0x7,%ecx
296f(3): movsxd %r12d,%rbp
2972(4): mov 0x0(%rbx,%rbp,8),%rdx
2976(3): mov %rdx,%rsi
2979(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
297b(3): setnbe %al
297e(2): sbb $0x0,%al
2980(2): test %al,%al
2982(2): jz 0x24(%rip)
2984(7): lea 0x8c4e(%rip),%rsi
298b(3): mov %rdx,%rdi
298e(5): call 0xfffffc92(%rip)
2993(5): movzx 0xf(%rsp),%ecx
2998(2): test %eax,%eax
299a(5): mov $0x0,%eax
299f(3): cmovne %eax,%ecx
29a2(4): mov %cl,0xf(%rsp)
29a6(5): mov $0x1,%esi
29ab(a): mov $0x0,0x20e6fb(%rip)
29b5(3): mov %esi,%r15d
29b8(5): jmp 0xfffffeaf(%rip)
29bd(3): nop (%rax)
29c0(5): mov $0x1,0xd(%rsp)
29c5(8): mov $0x1,0x8(%rsp)
29cd(5): jmp 0xfffffeed(%rip)
29d2(5): movzx 0xe(%rsp),%ecx
29d7(4): test %cl,0xd(%rsp)
29db(6): jnz 0x7ee(%rip)
29e1(5): cmp $0x0,0xf(%rsp)
29e6(6): jnz 0x12d(%rip)
29ec(5): cmp $0x0,0xd(%rsp)
29f1(6): jnz 0x8c3(%rip)
29f7(5): cmp $0x0,0xe(%rsp)
29fc(6): jnz 0x8b8(%rip)
2a02(3): test %r14,%r14
2a05(6): jz 0x6e0(%rip)
2a0b(4): sub $0x8,%rsp
2a0f(7): lea 0x20e7aa(%rip),%r8
2a16(3): mov %rbx,%rdx
2a19(5): lea 0x1e(%rsp),%rax
2a1e(3): mov %r13d,%ecx
2a21(3): mov %r14,%rsi
2a24(5): mov $0x1,%edi
2a29(1): push %rax
2a2a(5): lea 0x27(%rsp),%r9
2a2f(5): call 0x2141(%rip)
2a34(1): pop %rax
2a35(1): pop %rdx
2a36(2): xor %ecx,%ecx
2a38(2): xor %edi,%edi
2a3a(5): mov $0x800,%edx
2a3f(3): mov %r14,%rsi
2a42(5): call 0x2fce(%rip)
2a47(2): test %eax,%eax
2a49(6): js 0x8d0(%rip)
2a4f(2): xor %edi,%edi
2a51(2): xor %eax,%eax
2a53(5): mov $0x3,%esi
2a58(5): call 0x6208(%rip)
2a5d(3): cmp $0xff,%eax
2a60(6): jz 0x878(%rip)
2a66(3): and $0xf7,%ah
2a69(2): xor %edi,%edi
2a6b(5): mov $0x4,%esi
2a70(2): mov %eax,%edx
2a72(2): xor %eax,%eax
2a74(5): call 0x61ec(%rip)
2a79(2): test %eax,%eax
2a7b(6): js 0x85d(%rip)
2a81(7): lea 0x20e6f8(%rip),%rsi
2a88(2): xor %edi,%edi
2a8a(5): call 0xfffffc66(%rip)
2a8f(2): test %eax,%eax
2a91(6): jnz 0xb3(%rip)
2a97(5): movzx 0xd(%rsp),%eax
2a9c(4): or 0xf(%rsp),%al
2aa0(6): jnz 0xd3(%rip)
2aa6(5): cmp $0x0,0xe(%rsp)
2aab(6): jnz 0xc8(%rip)
2ab1(5): mov $0x0,0x17(%rsp)
2ab6(5): mov $0x0,0x16(%rsp)
2abb(4): sub $0x8,%rsp
2abf(5): lea 0x1e(%rsp),%rax
2ac4(7): lea 0x20e6b5(%rip),%r8
2acb(3): mov %r13d,%ecx
2ace(3): mov %r14,%rsi
2ad1(2): xor %edi,%edi
2ad3(3): mov %rbx,%rdx
2ad6(1): push %rax
2ad7(5): lea 0x27(%rsp),%r9
2adc(5): call 0x2094(%rip)
2ae1(1): pop %rcx
2ae2(1): pop %rsi
2ae3(5): cmp $0x0,0x16(%rsp)
2ae8(6): jnz 0x309(%rip)
2aee(2): xor %eax,%eax
2af0(5): mov 0x18(%rsp),%rcx
2af5(9): xor $0x28,%rcx
2afe(6): jnz 0x6c6(%rip)
2b04(4): add $0x28,%rsp
2b08(1): pop %rbx
2b09(1): pop %rbp
2b0a(2): pop %r12
2b0c(2): pop %r13
2b0e(2): pop %r14
2b10(2): pop %r15
2b12(1): ret near (%rsp)
2b13(3): test %r14,%r14
2b16(6): jnz 0xffffff20(%rip)
2b1c(7): lea 0x8ac2(%rip),%rsi
2b23(2): xor %edi,%edi
2b25(5): mov $0x5,%edx
2b2a(5): call 0xfffff9c6(%rip)
2b2f(7): lea 0x20e64a(%rip),%rsi
2b36(2): xor %edi,%edi
2b38(3): mov %rax,%r14
2b3b(5): call 0xfffffbb5(%rip)
2b40(2): test %eax,%eax
2b42(2): jz 0x31(%rip)
2b44(3): mov %r14,%rdx
2b47(5): mov $0x3,%esi
2b4c(2): xor %edi,%edi
2b4e(5): call 0x4a62(%rip)
2b53(3): mov %rax,%rbx
2b56(5): call 0xfffff8fa(%rip)
2b5b(2): mov (%rax),%esi
2b5d(7): lea 0xaf68(%rip),%rdx
2b64(3): mov %rbx,%rcx
2b67(5): mov $0x1,%edi
2b6c(2): xor %eax,%eax
2b6e(5): call 0xfffffb72(%rip)
2b73(5): call 0xe1d(%rip)
2b78(6): mov %eax,0x20e682(%rip)
2b7e(4): mov 0x8(%rsp),%eax
2b82(a): mov $0x0,0x20e670(%rip)
2b8c(3): cmp $0x1,%eax
2b8f(6): jz 0x37c(%rip)
2b95(3): cmp $0x2,%eax
2b98(6): jz 0x1d2(%rip)
2b9e(7): lea 0x20e5db(%rip),%rdi
2ba5(5): mov $0x1,%esi
2baa(5): call 0xb16(%rip)
2baf(7): movzx 0x20e5da(%rip),%esi
2bb6(7): lea 0x8a37(%rip),%rdi
2bbd(2): xor %eax,%eax
2bbf(5): call 0x961(%rip)
2bc4(7): mov 0x20e4dd(%rip),%rdi
2bcb(4): mov 0x28(%rdi),%rax
2bcf(4): cmp 0x30(%rdi),%rax
2bd3(6): jnb 0x5c3(%rip)
2bd9(4): lea 0x1(%rax),%rdx
2bdd(4): mov %rdx,0x28(%rdi)
2be1(3): mov $0xa,(%rax)
2be4(a): mov $0x0,0x20e60e(%rip)
2bee(7): lea 0x20d28b(%rip),%r15
2bf5(6): mov $0x1,%r13d
2bfb(7): lea 0x8942(%rip),%rbp
2c02(7): lea 0x20e577(%rip),%r12
2c09(2): jmp 0x4d(%rip)
2c0b(4): mov 0x10(%r15),%rax
2c0f(6): movzx 0x11(%r12,%rax,1),%r14d
2c15(4): cmp 0x8(%r15),%r14b
2c19(2): jz 0x39(%rip)
2c1b(7): lea 0x89dd(%rip),%rsi
2c22(3): mov %rbx,%rdi
2c25(5): call 0xfffff9fb(%rip)
2c2a(2): test %eax,%eax
2c2c(2): jz 0x26(%rip)
2c2e(3): test %r14b,%r14b
2c31(7): lea 0x8970(%rip),%rdx
2c38(6): jnz 0x2c2(%rip)
2c3e(7): lea 0x89c0(%rip),%rdi
2c45(3): mov %rbx,%rsi
2c48(2): xor %eax,%eax
2c4a(3): xor %r13d,%r13d
2c4d(5): call 0x8d3(%rip)
2c52(4): add $0x18,%r15
2c56(3): mov (%r15),%rbx
2c59(3): mov %rbp,%rsi
2c5c(3): mov %rbx,%rdi
2c5f(5): call 0xfffff9c1(%rip)
2c64(2): test %eax,%eax
2c66(2): jnz 0xffffffa5(%rip)
2c68(7): test $0x2,0x20e51d(%rip)
2c6f(6): jz 0x4cc(%rip)
2c75(3): test %r13b,%r13b
2c78(2): jnz 0x22(%rip)
2c7a(7): mov 0x20e427(%rip),%rdi
2c81(4): mov 0x28(%rdi),%rax
2c85(4): cmp 0x30(%rdi),%rax
2c89(6): jnb 0x59f(%rip)
2c8f(4): lea 0x1(%rax),%rdx
2c93(4): mov %rdx,0x28(%rdi)
2c97(3): mov $0xa,(%rax)
2c9a(a): mov $0x0,0x20e558(%rip)
2ca4(7): lea 0x20d3b5(%rip),%rbx
2cab(2): xor %ebp,%ebp
2cad(6): mov $0x1,%r12d
2cb3(2): jmp 0x12(%rip)
2cb5(3): and $0x5,%ecx
2cb8(3): cmp $0x5,%cl
2cbb(6): jz 0x1f2(%rip)
2cc1(4): add $0x20,%rbx
2cc5(4): cmp $0x0,(%rbx)
2cc9(6): jz 0x1fd(%rip)
2ccf(4): test $0x8,0xc(%rbx)
2cd3(2): jnz 0xffffffee(%rip)
2cd5(3): cmp %ebp,0x8(%rbx)
2cd8(2): mov %ebp,%edi
2cda(2): jz 0x3c(%rip)
2cdc(3): test %r12b,%r12b
2cdf(2): jnz 0x2c(%rip)
2ce1(7): mov 0x20e3c0(%rip),%rdi
2ce8(4): mov 0x28(%rdi),%rax
2cec(4): cmp 0x30(%rdi),%rax
2cf0(6): jnb 0x46a(%rip)
2cf6(4): lea 0x1(%rax),%rdx
2cfa(4): mov %rdx,0x28(%rdi)
2cfe(3): mov $0xa,(%rax)
2d01(a): mov $0x0,0x20e4f1(%rip)
2d0b(3): mov 0x8(%rbx),%edi
2d0e(6): mov $0x1,%r12d
2d14(2): mov %edi,%ebp
2d16(7): lea 0x20e463(%rip),%rsi
2d1d(5): call 0x7b3(%rip)
2d22(4): mov 0x18(%rbx),%rdx
2d26(3): test %rdx,%rdx
2d29(2): jnz 0x6(%rip)
2d2b(4): mov 0x10(%rbx),%rdx
2d2f(3): test %rax,%rax
2d32(6): jz 0x473(%rip)
2d38(2): and (%rax),%edx
2d3a(4): movzx 0xc(%rbx),%ecx
2d3e(4): cmp 0x10(%rbx),%rdx
2d42(6): jnz 0xffffff73(%rip)
2d48(3): and $0x2,%cl
2d4b(6): jz 0xffffff76(%rip)
2d51(3): mov (%rbx),%rsi
2d54(7): lea 0xad71(%rip),%rdi
2d5b(2): xor %eax,%eax
2d5d(3): xor %r12d,%r12d
2d60(5): call 0x7c0(%rip)
2d65(5): jmp 0xffffff5c(%rip)
2d6a(6): mov 0x20e414(%rip),%ecx
2d70(6): mov 0x20e40a(%rip),%edx
2d76(7): lea 0x88c4(%rip),%rsi
2d7d(7): mov 0x20e408(%rip),%r9d
2d84(7): mov 0x20e3fd(%rip),%r8d
2d8b(7): lea 0x20e3ff(%rip),%r12
2d92(7): lea 0x88b3(%rip),%rbp
2d99(5): mov $0x1,%edi
2d9e(2): xor %eax,%eax
2da0(2): xor %ebx,%ebx
2da2(5): call 0xfffff92e(%rip)
2da7(5): movzx 0x0(%r12,%rbx,1),%edx
2dac(2): xor %eax,%eax
2dae(3): mov %rbp,%rsi
2db1(5): mov $0x1,%edi
2db6(4): add $0x1,%rbx
2dba(5): call 0xfffff916(%rip)
2dbf(4): cmp $0x20,%rbx
2dc3(2): jnz 0xffffffe4(%rip)
2dc5(7): mov 0x20e2dc(%rip),%rdi
2dcc(4): mov 0x28(%rdi),%rax
2dd0(4): cmp 0x30(%rdi),%rax
2dd4(6): jnb 0x3a4(%rip)
2dda(4): lea 0x1(%rax),%rdx
2dde(4): mov %rdx,0x28(%rdi)
2de2(3): mov $0xa,(%rax)
2de5(5): jmp 0xfffffd09(%rip)
2dea(2): xor %edi,%edi
2dec(5): call 0xe44(%rip)
2df1(6): mov 0x20e219(%rip),%esi
2df7(7): lea 0x20e382(%rip),%rdx
2dfe(2): xor %edi,%edi
2e00(5): call 0xfffff900(%rip)
2e05(2): test %eax,%eax
2e07(6): jnz 0x45f(%rip)
2e0d(7): lea 0x20e32c(%rip),%rsi
2e14(2): xor %edi,%edi
2e16(5): call 0xfffff8da(%rip)
2e1b(2): test %eax,%eax
2e1d(6): jnz 0x41a(%rip)
2e23(7): lea 0x20e316(%rip),%rsi
2e2a(7): lea 0x20e34f(%rip),%rdi
2e31(5): mov $0x3c,%edx
2e36(5): call 0xfffff7ba(%rip)
2e3b(2): test %eax,%eax
2e3d(6): jz 0xfffffcb1(%rip)
2e43(a): and $0xeff0ffff,0x20e2fb(%rip)
2e4d(5): cmp $0x0,0x17(%rsp)
2e52(2): jnz 0x22(%rip)
2e54(7): lea 0x20e2e5(%rip),%rsi
2e5b(7): lea 0x20e31e(%rip),%rdi
2e62(5): mov $0x3c,%edx
2e67(5): call 0xfffff789(%rip)
2e6c(2): test %eax,%eax
2e6e(6): jz 0xfffffc80(%rip)
2e74(3): mov %r14,%rdx
2e77(5): mov $0x3,%esi
2e7c(2): xor %edi,%edi
2e7e(5): call 0x4732(%rip)
2e83(7): lea 0xabfe(%rip),%rsi
2e8a(3): mov %rax,%rbx
2e8d(5): mov $0x5,%edx
2e92(2): xor %edi,%edi
2e94(5): call 0xfffff65c(%rip)
2e99(3): mov %rbx,%rcx
2e9c(3): mov %rax,%rdx
2e9f(2): xor %esi,%esi
2ea1(5): mov $0x1,%edi
2ea6(2): xor %eax,%eax
2ea8(5): call 0xfffff838(%rip)
2ead(3): mov (%rbx),%rsi
2eb0(7): lea 0x876f(%rip),%rdi
2eb7(2): xor %eax,%eax
2eb9(3): xor %r12d,%r12d
2ebc(5): call 0x664(%rip)
2ec1(5): jmp 0xfffffe00(%rip)
2ec6(3): test %r12b,%r12b
2ec9(2): jnz 0x22(%rip)
2ecb(7): mov 0x20e1d6(%rip),%rdi
2ed2(4): mov 0x28(%rdi),%rax
2ed6(4): cmp 0x30(%rdi),%rax
2eda(6): jnb 0x2ad(%rip)
2ee0(4): lea 0x1(%rax),%rdx
2ee4(4): mov %rdx,0x28(%rdi)
2ee8(3): mov $0xa,(%rax)
2eeb(a): mov $0x0,0x20e307(%rip)
2ef5(5): jmp 0xfffffbf9(%rip)
2efa(4): movzx %r14b,%edi
2efe(5): call 0x9b2(%rip)
2f03(3): mov %rax,%rdx
2f06(5): jmp 0xfffffd38(%rip)
2f0b(7): lea 0x20e26e(%rip),%rdi
2f12(5): mov $0x1,%esi
2f17(5): call 0x7a9(%rip)
2f1c(3): mov %r14,%rsi
2f1f(5): mov $0x1,%edi
2f24(5): call 0xbfc(%rip)
2f29(7): movzx 0x20e260(%rip),%esi
2f30(7): lea 0x86bd(%rip),%rdi
2f37(2): xor %eax,%eax
2f39(5): call 0x5e7(%rip)
2f3e(7): mov 0x20e163(%rip),%rdi
2f45(4): mov 0x28(%rdi),%rax
2f49(4): cmp 0x30(%rdi),%rax
2f4d(6): jnb 0x21c(%rip)
2f53(4): lea 0x1(%rax),%rdx
2f57(4): mov %rdx,0x28(%rdi)
2f5b(3): mov $0xa,(%rax)
2f5e(a): mov $0x0,0x20e294(%rip)
2f68(7): lea 0x20cf11(%rip),%rbx
2f6f(7): lea 0x85ce(%rip),%r12
2f76(7): lea 0x8682(%rip),%r13
2f7d(7): lea 0x20e1fc(%rip),%r15
2f84(7): lea 0x861d(%rip),%r14
2f8b(2): jmp 0x42(%rip)
2f8d(3): mov %r13,%rsi
2f90(3): mov %rbp,%rdi
2f93(5): call 0xfffff68d(%rip)
2f98(2): test %eax,%eax
2f9a(2): jz 0x2f(%rip)
2f9c(4): mov 0x10(%rbx),%rax
2fa0(3): mov %r14,%rdx
2fa3(6): movzx 0x11(%r15,%rax,1),%ecx
2fa9(2): test %cl,%cl
2fab(2): jz 0xd(%rip)
2fad(3): movzx %cl,%edi
2fb0(5): call 0x900(%rip)
2fb5(3): mov %rax,%rdx
2fb8(7): lea 0x8646(%rip),%rdi
2fbf(3): mov %rbp,%rsi
2fc2(2): xor %eax,%eax
2fc4(5): call 0x55c(%rip)
2fc9(4): add $0x18,%rbx
2fcd(3): mov (%rbx),%rbp
2fd0(3): mov %r12,%rsi
2fd3(3): mov %rbp,%rdi
2fd6(5): call 0xfffff64a(%rip)
2fdb(2): test %eax,%eax
2fdd(2): jnz 0xffffffb0(%rip)
2fdf(7): movzx 0x20e1b0(%rip),%edx
2fe6(7): movzx 0x20e1aa(%rip),%esi
2fed(7): lea 0x8636(%rip),%rdi
2ff4(5): call 0x52c(%rip)
2ff9(7): cmp $0x0,0x20e1fc(%rip)
3000(2): jz 0x22(%rip)
3002(7): mov 0x20e09f(%rip),%rdi
3009(4): mov 0x28(%rdi),%rax
300d(4): cmp 0x30(%rdi),%rax
3011(6): jnb 0x208(%rip)
3017(4): lea 0x1(%rax),%rdx
301b(4): mov %rdx,0x28(%rdi)
301f(3): mov $0xa,(%rax)
3022(a): mov $0x0,0x20e1d0(%rip)
302c(7): lea 0x20d02d(%rip),%rbx
3033(3): xor %r12d,%r12d
3036(7): lea 0x20e143(%rip),%r13
303d(2): jmp 0x6(%rip)
303f(4): add $0x20,%rbx
3043(4): cmp $0x0,(%rbx)
3047(6): jz 0xfffffe84(%rip)
304d(4): test $0x8,0xc(%rbx)
3051(2): jnz 0xffffffee(%rip)
3053(3): mov 0x8(%rbx),%ebp
3056(3): cmp %r12d,%ebp
3059(2): jz 0x32(%rip)
305b(7): mov 0x20e046(%rip),%rdi
3062(4): mov 0x28(%rdi),%rax
3066(4): cmp 0x30(%rdi),%rax
306a(6): jnb 0xc2(%rip)
3070(4): lea 0x1(%rax),%rdx
3074(4): mov %rdx,0x28(%rdi)
3078(3): mov $0xa,(%rax)
307b(3): mov %ebp,%r12d
307e(3): mov 0x8(%rbx),%ebp
3081(a): mov $0x0,0x20e171(%rip)
308b(3): mov %r13,%rsi
308e(2): mov %ebp,%edi
3090(5): call 0x440(%rip)
3095(4): mov 0x18(%rbx),%rdx
3099(3): test %rdx,%rdx
309c(2): jnz 0x6(%rip)
309e(4): mov 0x10(%rbx),%rdx
30a2(3): test %rax,%rax
30a5(6): jz 0x1f0(%rip)
30ab(2): and (%rax),%edx
30ad(4): cmp 0x10(%rbx),%rdx
30b1(2): jz 0x1e(%rip)
30b3(4): test $0x4,0xc(%rbx)
30b7(2): jz 0xffffff88(%rip)
30b9(3): mov (%rbx),%rsi
30bc(7): lea 0x8563(%rip),%rdi
30c3(2): xor %eax,%eax
30c5(5): call 0x45b(%rip)
30ca(5): jmp 0xffffff75(%rip)
30cf(3): mov (%rbx),%rsi
30d2(7): lea 0xa9f3(%rip),%rdi
30d9(2): xor %eax,%eax
30db(5): call 0x445(%rip)
30e0(5): jmp 0xffffff5f(%rip)
30e5(7): lea 0x84f9(%rip),%rsi
30ec(5): mov $0x5,%edx
30f1(2): xor %edi,%edi
30f3(5): call 0xfffff3fd(%rip)
30f8(4): sub $0x8,%rsp
30fc(3): mov %rax,%r14
30ff(7): lea 0x20e0ba(%rip),%r8
3106(5): lea 0x1e(%rsp),%rax
310b(5): mov $0x1,%edi
3110(3): mov %r13d,%ecx
3113(3): mov %rbx,%rdx
3116(3): mov %r14,%rsi
3119(1): push %rax
311a(5): lea 0x27(%rsp),%r9
311f(5): call 0x1a51(%rip)
3124(1): pop %rdi
3125(2): pop %r8
3127(5): jmp 0xfffff95a(%rip)
312c(5): mov $0xa,%esi
3131(5): call 0xfffff43f(%rip)
3136(5): jmp 0xffffff45(%rip)
313b(7): movzx 0x20e054(%rip),%edx
3142(7): movzx 0x20e04e(%rip),%esi
3149(7): lea 0x84be(%rip),%rdi
3150(5): call 0x3d0(%rip)
3155(5): jmp 0xfffffb45(%rip)
315a(5): mov $0xa,%esi
315f(5): call 0xfffff411(%rip)
3164(5): jmp 0xfffffb9d(%rip)
3169(5): mov $0xa,%esi
316e(5): call 0xfffff402(%rip)
3173(5): jmp 0xfffffdeb(%rip)
3178(5): mov $0xa,%esi
317d(5): call 0xfffff3f3(%rip)
3182(5): jmp 0xfffff96c(%rip)
3187(5): mov $0xa,%esi
318c(5): call 0xfffff3e4(%rip)
3191(5): jmp 0xfffffd5a(%rip)
3196(5): mov $0xa,%esi
319b(5): call 0xfffff3d5(%rip)
31a0(5): jmp 0xfffffa44(%rip)
31a5(7): lea 0x8784(%rip),%rcx
31ac(7): lea 0x8303(%rip),%rsi
31b3(7): lea 0x8319(%rip),%rdi
31ba(5): mov $0x7a2,%edx
31bf(5): call 0xfffff3e1(%rip)
31c4(5): call 0xfffff35c(%rip)
31c9(7): lea 0xa808(%rip),%rsi
31d0(5): mov $0x5,%edx
31d5(2): xor %edi,%edi
31d7(5): call 0xfffff319(%rip)
31dc(2): xor %esi,%esi
31de(3): mov %rax,%rdx
31e1(5): mov $0x1,%edi
31e6(2): xor %eax,%eax
31e8(5): call 0xfffff4f8(%rip)
31ed(7): lea 0xa7bc(%rip),%rsi
31f4(5): mov $0x5,%edx
31f9(2): xor %edi,%edi
31fb(5): call 0xfffff2f5(%rip)
3200(2): xor %esi,%esi
3202(3): mov %rax,%rdx
3205(5): mov $0x1,%edi
320a(2): xor %eax,%eax
320c(5): call 0xfffff4d4(%rip)
3211(3): mov %r15d,%esi
3214(5): jmp 0xfffff6e4(%rip)
3219(5): mov $0xa,%esi
321e(5): call 0xfffff352(%rip)
3223(5): jmp 0xfffffdff(%rip)
3228(5): mov $0xa,%esi
322d(5): call 0xfffff343(%rip)
3232(5): jmp 0xfffffa68(%rip)
3237(3): mov %r14,%rdx
323a(5): mov $0x3,%esi
323f(2): xor %edi,%edi
3241(5): call 0x436f(%rip)
3246(3): mov %rax,%rbx
3249(5): call 0xfffff207(%rip)
324e(2): mov (%rax),%esi
3250(7): lea 0xa875(%rip),%rdx
3257(3): mov %rbx,%rcx
325a(5): mov $0x1,%edi
325f(2): xor %eax,%eax
3261(5): call 0xfffff47f(%rip)
3266(3): mov %r14,%rdx
3269(5): mov $0x3,%esi
326e(2): xor %edi,%edi
3270(5): call 0x4340(%rip)
3275(3): mov %rax,%rbx
3278(5): call 0xfffff1d8(%rip)
327d(2): mov (%rax),%esi
327f(7): lea 0xa846(%rip),%rdx
3286(3): mov %rbx,%rcx
3289(5): mov $0x1,%edi
328e(2): xor %eax,%eax
3290(5): call 0xfffff450(%rip)
3295(7): lea 0x867c(%rip),%rcx
329c(7): lea 0x8213(%rip),%rsi
32a3(7): lea 0x8229(%rip),%rdi
32aa(5): mov $0x7f6,%edx
32af(5): call 0xfffff2f1(%rip)
32b4(7): lea 0xa76d(%rip),%rsi
32bb(5): mov $0x5,%edx
32c0(2): xor %edi,%edi
32c2(5): call 0xfffff22e(%rip)
32c7(2): xor %esi,%esi
32c9(3): mov %rax,%rdx
32cc(5): mov $0x1,%edi
32d1(2): xor %eax,%eax
32d3(5): call 0xfffff40d(%rip)
32d8(3): mov %r14,%rdx
32db(5): mov $0x3,%esi
32e0(2): xor %edi,%edi
32e2(5): call 0x42ce(%rip)
32e7(7): lea 0xa772(%rip),%rsi
32ee(5): mov $0x5,%edx
32f3(2): xor %edi,%edi
32f5(3): mov %rax,%rbp
32f8(5): call 0xfffff1f8(%rip)
32fd(3): mov %rax,%rbx
3300(5): call 0xfffff150(%rip)
3305(2): mov (%rax),%esi
3307(3): mov %rbp,%rcx
330a(3): mov %rbx,%rdx
330d(5): mov $0x1,%edi
3312(2): xor %eax,%eax
3314(5): call 0xfffff3cc(%rip)
3319(3): mov %r14,%rdx
331c(5): mov $0x3,%esi
3321(2): xor %edi,%edi
3323(5): call 0x428d(%rip)
3328(3): mov %rax,%rbx
332b(5): call 0xfffff125(%rip)
3330(2): mov (%rax),%esi
3332(7): lea 0xa793(%rip),%rdx
3339(3): mov %rbx,%rcx
333c(5): mov $0x1,%edi
3341(2): xor %eax,%eax
3343(5): call 0xfffff39d(%rip)
3348(8): nop 0x0(%rax,%rax,1)
3350(2): xor %ebp,%ebp
3352(3): mov %rdx,%r9
3355(1): pop %rsi
3356(3): mov %rsp,%rdx
3359(4): and $0xfffffff0,%rsp
335d(1): push %rax
335e(1): push %rsp
335f(7): lea 0x7f4a(%rip),%r8
3366(7): lea 0x7ed3(%rip),%rcx
336d(7): lea 0xfffff45c(%rip),%rdi
3374(6): call 0x20dc66(%rip)
337a(1): hlt 

"_start" :
3350(2): xor %ebp,%ebp
3352(3): mov %rdx,%r9
3355(1): pop %rsi
3356(3): mov %rsp,%rdx
3359(4): and $0xfffffff0,%rsp
335d(1): push %rax
335e(1): push %rsp
335f(7): lea 0x7f4a(%rip),%r8
3366(7): lea 0x7ed3(%rip),%rcx
336d(7): lea 0xfffff45c(%rip),%rdi
3374(6): call 0x20dc66(%rip)
337a(1): hlt 

"deregister_tm_clones" :
3380(7): lea 0x20dd19(%rip),%rdi
3387(1): push %rbp
3388(7): lea 0x20dd11(%rip),%rax
338f(3): cmp %rdi,%rax
3392(3): mov %rsp,%rbp
3395(2): jz 0x1b(%rip)
3397(7): mov 0x20dc3a(%rip),%rax
339e(3): test %rax,%rax
33a1(2): jz 0xf(%rip)
33a3(1): pop %rbp
33a4(2): jmp %rax
33a6(a): nop 0x0(%rax,%rax,1)
33b0(1): pop %rbp
33b1(1): ret near (%rsp)

"register_tm_clones" :
33c0(7): lea 0x20dcd9(%rip),%rdi
33c7(7): lea 0x20dcd2(%rip),%rsi
33ce(1): push %rbp
33cf(3): sub %rdi,%rsi
33d2(3): mov %rsp,%rbp
33d5(4): sar $0x3,%rsi
33d9(3): mov %rsi,%rax
33dc(4): shr $0x3f,%rax
33e0(3): add %rax,%rsi
33e3(3): sar $0x1,%rsi
33e6(2): jz 0x1a(%rip)
33e8(7): mov 0x20dc01(%rip),%rax
33ef(3): test %rax,%rax
33f2(2): jz 0xe(%rip)
33f4(1): pop %rbp
33f5(2): jmp %rax
33f7(9): nop 0x0(%rax,%rax,1)
3400(1): pop %rbp
3401(1): ret near (%rsp)

"__do_global_dtors_aux" :
3410(7): cmp $0x0,0x20dcf1(%rip)
3417(2): jnz 0x31(%rip)
3419(8): cmp $0x0,0x20dbd7(%rip)
3421(1): push %rbp
3422(3): mov %rsp,%rbp
3425(2): jz 0xe(%rip)
3427(7): mov 0x20dbda(%rip),%rdi
342e(5): call 0xfffff392(%rip)
3433(5): call 0xffffff4d(%rip)
3438(7): mov $0x1,0x20dcc9(%rip)
343f(1): pop %rbp
3440(1): ret near (%rsp)
3441(7): nop 0x0(%rax)
3448(2): REP ret near (%rsp)

"frame_dummy" :
3450(1): push %rbp
3451(3): mov %rsp,%rbp
3454(1): pop %rbp
3455(5): jmp 0xffffff6b(%rip)

"string_to_baud" :
3460(2): push %r12
3462(7): lea 0x825f(%rip),%rsi
3469(1): push %rbp
346a(3): mov %rdi,%r12
346d(1): push %rbx
346e(2): xor %ebp,%ebp
3470(7): lea 0x20c601(%rip),%rbx
3477(2): jmp 0x19(%rip)
3479(7): nop 0x0(%rax)
3480(4): add $0x18,%rbx
3484(4): mov 0xffffffe8(%rbx),%rsi
3488(3): add $0x1,%ebp
348b(3): test %rsi,%rsi
348e(2): jz 0x2a(%rip)
3490(3): mov %r12,%rdi
3493(5): call 0xfffff18d(%rip)
3498(2): test %eax,%eax
349a(2): jnz 0xffffffe6(%rip)
349c(3): movsxd %ebp,%rbp
349f(7): lea 0x20c5ba(%rip),%rax
34a6(5): lea 0x0(%rbp,%rbp,2),%rdx
34ab(1): pop %rbx
34ac(4): mov 0x8(%rax,%rdx,8),%eax
34b0(1): pop %rbp
34b1(2): pop %r12
34b3(1): ret near (%rsp)
34b4(4): nop 0x0(%rax)
34b8(1): pop %rbx
34b9(5): mov $0xffffffff,%eax
34be(1): pop %rbp
34bf(2): pop %r12
34c1(1): ret near (%rsp)

"mode_type_flag" :
34d0(3): cmp $0x4,%edi
34d3(2): jnbe 0x40(%rip)
34d5(7): lea 0x8414(%rip),%rax
34dc(2): mov %edi,%edi
34de(4): movsxd 0x0(%rax,%rdi,4),%rdx
34e2(3): add %rax,%rdx
34e5(2): jmp %rdx
34e7(9): nop 0x0(%rax,%rax,1)
34f0(4): lea 0xc(%rsi),%rax
34f4(1): ret near (%rsp)
34f5(3): nop (%rax)
34f8(4): lea 0x4(%rsi),%rax
34fc(1): ret near (%rsp)
34fd(3): nop (%rax)
3500(3): mov %rsi,%rax
3503(1): ret near (%rsp)
3504(4): nop 0x0(%rax)
3508(4): lea 0x8(%rsi),%rax
350c(1): ret near (%rsp)
350d(3): nop (%rax)
3510(2): xor %eax,%eax
3512(1): ret near (%rsp)
3513(4): sub $0x8,%rsp
3517(5): call 0xffffef29(%rip)

"wrapf" :
3520(1): push %rbx
3521(3): mov %rdi,%r10
3524(7): sub $0xe0,%rsp
352b(2): test %al,%al
352d(5): mov %rsi,0x38(%rsp)
3532(5): mov %rdx,0x40(%rsp)
3537(5): mov %rcx,0x48(%rsp)
353c(5): mov %r8,0x50(%rsp)
3541(5): mov %r9,0x58(%rsp)
3546(2): jz 0x3c(%rip)
3548(5): movaps %xmm0,0x60(%rsp)
354d(5): movaps %xmm1,0x70(%rsp)
3552(8): movaps %xmm2,0x80(%rsp)
355a(8): movaps %xmm3,0x90(%rsp)
3562(8): movaps %xmm4,0xa0(%rsp)
356a(8): movaps %xmm5,0xb0(%rsp)
3572(8): movaps %xmm6,0xc0(%rsp)
357a(8): movaps %xmm7,0xd0(%rsp)
3582(9): mov $0x28,%rax
358b(5): mov %rax,0x28(%rsp)
3590(2): xor %eax,%eax
3592(8): lea 0xf0(%rsp),%rax
359a(5): lea 0x10(%rsp),%rdx
359f(5): lea 0x8(%rsp),%rdi
35a4(3): mov %r10,%rsi
35a7(5): mov %rax,0x18(%rsp)
35ac(5): lea 0x30(%rsp),%rax
35b1(8): mov $0x8,0x10(%rsp)
35b9(8): mov $0x30,0x14(%rsp)
35c1(5): mov %rax,0x20(%rsp)
35c6(5): call 0x59aa(%rip)
35cb(2): test %eax,%eax
35cd(2): mov %eax,%ebx
35cf(6): js 0xd8(%rip)
35d5(6): mov 0x20dc21(%rip),%eax
35db(7): mov 0x20dac6(%rip),%rdi
35e2(2): test %eax,%eax
35e4(2): jle 0x3b(%rip)
35e6(6): mov 0x20dc14(%rip),%edx
35ec(4): mov 0x28(%rdi),%rcx
35f0(4): mov 0x30(%rdi),%rsi
35f4(2): sub %eax,%edx
35f6(2): cmp %ebx,%edx
35f8(2): jnl 0x60(%rip)
35fa(3): cmp %rsi,%rcx
35fd(6): jnb 0x9b(%rip)
3603(4): lea 0x1(%rcx),%rax
3607(4): mov %rax,0x28(%rdi)
360b(3): mov $0xa,(%rcx)
360e(7): mov 0x20da93(%rip),%rdi
3615(a): mov $0x0,0x20dbdd(%rip)
361f(3): mov %rdi,%rsi
3622(5): mov 0x8(%rsp),%rdi
3627(5): call 0xffffefd9(%rip)
362c(5): mov 0x8(%rsp),%rdi
3631(5): call 0xffffedff(%rip)
3636(6): add %ebx,0x20dbc0(%rip)
363c(5): mov 0x28(%rsp),%rax
3641(9): xor $0x28,%rax
364a(2): jnz 0x62(%rip)
364c(7): add $0xe0,%rsp
3653(1): pop %rbx
3654(1): ret near (%rsp)
3655(3): nop (%rax)
3658(3): cmp %rsi,%rcx
365b(2): jnb 0x25(%rip)
365d(4): lea 0x1(%rcx),%rdx
3661(4): mov %rdx,0x28(%rdi)
3665(3): mov $0x20,(%rcx)
3668(3): add $0x1,%eax
366b(7): mov 0x20da36(%rip),%rdi
3672(6): mov %eax,0x20db84(%rip)
3678(2): jmp 0xffffffa7(%rip)
367a(6): nop 0x0(%rax,%rax,1)
3680(5): mov $0x20,%esi
3685(5): call 0xffffeeeb(%rip)
368a(6): mov 0x20db6c(%rip),%eax
3690(2): jmp 0xffffffd8(%rip)
3692(6): nop 0x0(%rax,%rax,1)
3698(5): mov $0xa,%esi
369d(5): call 0xffffeed3(%rip)
36a2(5): jmp 0xffffff6c(%rip)
36a7(5): call 0x4969(%rip)
36ac(5): call 0xffffee74(%rip)

"display_speed" :
36c0(2): push %r12
36c2(1): push %rbp
36c3(3): mov %rdi,%rbp
36c6(1): push %rbx
36c7(2): mov %esi,%ebx
36c9(5): call 0xffffedd7(%rip)
36ce(2): test %eax,%eax
36d0(2): jz 0x1a(%rip)
36d2(3): mov %rbp,%rdi
36d5(5): call 0xffffedcb(%rip)
36da(3): mov %rbp,%rdi
36dd(3): mov %eax,%r12d
36e0(5): call 0xffffefe0(%rip)
36e5(3): cmp %eax,%r12d
36e8(2): jnz 0x78(%rip)
36ea(3): mov %rbp,%rdi
36ed(5): call 0xffffefd3(%rip)
36f2(2): test %eax,%eax
36f4(6): jz 0x15c(%rip)
36fa(7): lea 0x20c37f(%rip),%rdx
3701(7): lea 0x7f5b(%rip),%rsi
3708(2): xor %ecx,%ecx
370a(2): jmp 0x17(%rip)
370c(4): nop 0x0(%rax)
3710(4): add $0x18,%rdx
3714(3): cmp 0xffffffe8(%rdx),%eax
3717(6): jz 0xe9(%rip)
371d(4): mov 0xfffffff8(%rdx),%rsi
3721(3): add $0x1,%ecx
3724(3): test %rsi,%rsi
3727(2): jnz 0xffffffe9(%rip)
3729(7): lea 0x7bb4(%rip),%rax
3730(7): lea 0x7bc1(%rip),%rdi
3737(2): test %bl,%bl
3739(4): cmovne %rax,%rdi
373d(2): xor %eax,%eax
373f(5): call 0xfffffde1(%rip)
3744(2): test %bl,%bl
3746(2): jnz 0xc(%rip)
3748(a): mov $0x0,0x20daaa(%rip)
3752(1): pop %rbx
3753(1): pop %rbp
3754(2): pop %r12
3756(1): ret near (%rsp)
3757(9): nop 0x0(%rax,%rax,1)
3760(3): mov %rbp,%rdi
3763(5): call 0xffffef5d(%rip)
3768(2): test %eax,%eax
376a(2): jz 0x2f(%rip)
376c(7): lea 0x20c30d(%rip),%rdx
3773(7): lea 0x7ee9(%rip),%rsi
377a(2): xor %ecx,%ecx
377c(2): jmp 0x15(%rip)
377e(2): nop 
3780(4): add $0x18,%rdx
3784(3): cmp 0xffffffe8(%rdx),%eax
3787(6): jz 0xb1(%rip)
378d(4): mov 0xfffffff8(%rdx),%rsi
3791(3): add $0x1,%ecx
3794(3): test %rsi,%rsi
3797(2): jnz 0xffffffe9(%rip)
3799(3): xor %r12d,%r12d
379c(3): mov %rbp,%rdi
379f(5): call 0xffffed01(%rip)
37a4(2): test %eax,%eax
37a6(2): jz 0x2f(%rip)
37a8(7): lea 0x20c2d1(%rip),%rcx
37af(7): lea 0x7ead(%rip),%rdi
37b6(2): xor %esi,%esi
37b8(2): jmp 0x15(%rip)
37ba(6): nop 0x0(%rax,%rax,1)
37c0(4): add $0x18,%rcx
37c4(3): cmp 0xffffffe8(%rcx),%eax
37c7(2): jz 0x59(%rip)
37c9(4): mov 0xfffffff8(%rcx),%rdi
37cd(3): add $0x1,%esi
37d0(3): test %rdi,%rdi
37d3(2): jnz 0xffffffed(%rip)
37d5(2): xor %esi,%esi
37d7(7): lea 0x8162(%rip),%rax
37de(7): lea 0x7b0f(%rip),%rdi
37e5(2): test %bl,%bl
37e7(3): mov %r12,%rdx
37ea(4): cmovne %rax,%rdi
37ee(2): xor %eax,%eax
37f0(5): call 0xfffffd30(%rip)
37f5(5): jmp 0xffffff4f(%rip)
37fa(6): nop 0x0(%rax,%rax,1)
3800(3): movsxd %ecx,%rcx
3803(7): lea 0x20c256(%rip),%rax
380a(4): lea 0x0(%rcx,%rcx,2),%rdx
380e(5): mov 0x10(%rax,%rdx,8),%rsi
3813(5): jmp 0xffffff16(%rip)
3818(8): nop 0x0(%rax,%rax,1)
3820(3): movsxd %esi,%rsi
3823(7): lea 0x20c236(%rip),%rax
382a(4): lea 0x0(%rsi,%rsi,2),%rdx
382e(5): mov 0x10(%rax,%rdx,8),%rsi
3833(2): jmp 0xffffffa4(%rip)
3835(3): nop (%rax)
3838(3): movsxd %ecx,%rcx
383b(7): lea 0x20c21e(%rip),%rax
3842(4): lea 0x0(%rcx,%rcx,2),%rdx
3846(5): mov 0x10(%rax,%rdx,8),%r12
384b(5): jmp 0xffffff51(%rip)
3850(2): xor %esi,%esi
3852(5): jmp 0xfffffed7(%rip)

"integer_arg" :
3860(1): push %rbp
3861(1): push %rbx
3862(3): mov %rsi,%rbp
3865(7): lea 0x7a91(%rip),%rsi
386c(3): mov %rdi,%rbx
386f(5): mov $0x5,%edx
3874(4): sub $0x8,%rsp
3878(2): xor %edi,%edi
387a(5): call 0xffffec76(%rip)
387f(4): sub $0x8,%rsp
3883(7): lea 0x7a8c(%rip),%r8
388a(3): mov %rbp,%rcx
388d(2): push $0x0
388f(3): mov %rbx,%rdi
3892(3): mov %rax,%r9
3895(2): xor %edx,%edx
3897(2): xor %esi,%esi
3899(5): call 0x47b7(%rip)
389e(4): add $0x18,%rsp
38a2(1): pop %rbx
38a3(1): pop %rbp
38a4(1): ret near (%rsp)

"visible.part.0" :
38b0(4): cmp $0x1f,%dil
38b4(2): jbe 0x24(%rip)
38b6(4): cmp $0x7e,%dil
38ba(2): jnbe 0x46(%rip)
38bc(7): lea 0x20d85e(%rip),%rax
38c3(7): mov %dil,0x20d856(%rip)
38ca(3): mov $0x0,(%rax)
38cd(7): lea 0x20d84c(%rip),%rax
38d4(1): ret near (%rsp)
38d5(3): nop (%rax)
38d8(3): add $0x40,%edi
38db(7): lea 0x20d840(%rip),%rax
38e2(7): mov $0x5e,0x20d837(%rip)
38e9(7): mov %dil,0x20d831(%rip)
38f0(3): mov $0x0,(%rax)
38f3(7): lea 0x20d826(%rip),%rax
38fa(1): ret near (%rsp)
38fb(5): nop 0x0(%rax,%rax,1)
3900(4): cmp $0x7f,%dil
3904(2): jz 0x34(%rip)
3906(5): mov $0x2d4d,%edx
390b(4): cmp $0x9f,%dil
390f(7): mov %dx,0x20d80a(%rip)
3916(2): jbe 0x3a(%rip)
3918(4): cmp $0xff,%dil
391c(2): jz 0x54(%rip)
391e(3): add $0x80,%edi
3921(7): lea 0x20d7fb(%rip),%rax
3928(7): mov %dil,0x20d7f3(%rip)
392f(2): jmp 0xffffffc1(%rip)
3931(7): nop 0x0(%rax)
3938(5): mov $0x3f5e,%ecx
393d(7): lea 0x20d7de(%rip),%rax
3944(7): mov %cx,0x20d7d5(%rip)
394b(2): jmp 0xffffffa5(%rip)
394d(3): nop (%rax)
3950(3): sub $0x40,%edi
3953(7): mov $0x5e,0x20d7c8(%rip)
395a(7): lea 0x20d7c3(%rip),%rax
3961(7): mov %dil,0x20d7bb(%rip)
3968(2): jmp 0xffffff88(%rip)
396a(6): nop 0x0(%rax,%rax,1)
3970(5): mov $0x3f5e,%eax
3975(7): mov %ax,0x20d7a6(%rip)
397c(7): lea 0x20d7a1(%rip),%rax
3983(5): jmp 0xffffff6d(%rip)

"screen_columns" :
3990(4): sub $0x28,%rsp
3994(5): mov $0x5413,%esi
3999(5): mov $0x1,%edi
399e(9): mov $0x28,%rax
39a7(5): mov %rax,0x18(%rsp)
39ac(2): xor %eax,%eax
39ae(5): lea 0x10(%rsp),%rdx
39b3(5): call 0xffffec1d(%rip)
39b8(2): test %eax,%eax
39ba(2): jnz 0xc(%rip)
39bc(5): movzx 0x12(%rsp),%eax
39c1(3): test %ax,%ax
39c4(2): jnz 0x34(%rip)
39c6(7): lea 0x794c(%rip),%rdi
39cd(5): call 0xffffea43(%rip)
39d2(3): test %rax,%rax
39d5(2): jz 0x1e(%rip)
39d7(5): lea 0x8(%rsp),%rcx
39dc(7): lea 0xa65e(%rip),%r8
39e3(2): xor %edx,%edx
39e5(2): xor %esi,%esi
39e7(3): mov %rax,%rdi
39ea(5): call 0x4796(%rip)
39ef(2): test %eax,%eax
39f1(2): jz 0x1f(%rip)
39f3(5): mov $0x50,%eax
39f8(5): mov 0x18(%rsp),%rcx
39fd(9): xor $0x28,%rcx
3a06(2): jnz 0x1e(%rip)
3a08(4): add $0x28,%rsp
3a0c(1): ret near (%rsp)
3a0d(3): nop (%rax)
3a10(5): mov 0x8(%rsp),%rax
3a15(4): lea 0xffffffff(%rax),%rdx
3a19(7): cmp $0x7ffffffe,%rdx
3a20(2): jnbe 0xffffffd3(%rip)
3a22(2): jmp 0xffffffd6(%rip)
3a24(5): call 0xffffeafc(%rip)

"set_window_size" :
3a30(2): push %r14
3a32(2): push %r13
3a34(3): mov %rdx,%r13
3a37(2): push %r12
3a39(1): push %rbp
3a3a(3): mov %edi,%r12d
3a3d(1): push %rbx
3a3e(2): xor %edi,%edi
3a40(2): mov %esi,%ebp
3a42(5): mov $0x5413,%esi
3a47(4): sub $0x10,%rsp
3a4b(9): mov $0x28,%rax
3a54(5): mov %rax,0x8(%rsp)
3a59(2): xor %eax,%eax
3a5b(3): mov %rsp,%rbx
3a5e(3): mov %rbx,%rdx
3a61(5): call 0xffffeb6f(%rip)
3a66(2): test %eax,%eax
3a68(2): jz 0x16(%rip)
3a6a(5): call 0xffffe9e6(%rip)
3a6f(3): cmp $0x16,(%rax)
3a72(3): mov %rax,%r14
3a75(2): jnz 0x4e(%rip)
3a77(7): mov $0x0,(%rbx)
3a7e(3): test %r12d,%r12d
3a81(2): js 0x7(%rip)
3a83(5): mov %r12w,(%rsp)
3a88(2): test %ebp,%ebp
3a8a(2): js 0x7(%rip)
3a8c(5): mov %bp,0x2(%rsp)
3a91(2): xor %edi,%edi
3a93(2): xor %eax,%eax
3a95(3): mov %rbx,%rdx
3a98(5): mov $0x5414,%esi
3a9d(5): call 0xffffeb33(%rip)
3aa2(2): test %eax,%eax
3aa4(2): jnz 0x4c(%rip)
3aa6(5): mov 0x8(%rsp),%rax
3aab(9): xor $0x28,%rax
3ab4(2): jnz 0x37(%rip)
3ab6(4): add $0x10,%rsp
3aba(1): pop %rbx
3abb(1): pop %rbp
3abc(2): pop %r12
3abe(2): pop %r13
3ac0(2): pop %r14
3ac2(1): ret near (%rsp)
3ac3(3): mov %r13,%rdx
3ac6(5): mov $0x3,%esi
3acb(2): xor %edi,%edi
3acd(5): call 0x3ae3(%rip)
3ad2(3): mov (%r14),%esi
3ad5(7): lea 0x9ff0(%rip),%rdx
3adc(3): mov %rax,%rcx
3adf(5): mov $0x1,%edi
3ae4(2): xor %eax,%eax
3ae6(5): call 0xffffebfa(%rip)
3aeb(5): call 0xffffea35(%rip)
3af0(3): mov %r13,%rdx
3af3(5): mov $0x3,%esi
3af8(2): xor %edi,%edi
3afa(5): call 0x3ab6(%rip)
3aff(3): mov %rax,%rbx
3b02(5): call 0xffffe94e(%rip)
3b07(2): mov (%rax),%esi
3b09(7): lea 0x9fbc(%rip),%rdx
3b10(3): mov %rbx,%rcx
3b13(5): mov $0x1,%edi
3b18(2): xor %eax,%eax
3b1a(5): call 0xffffebc6(%rip)
3b1f(1): nop 
3b20(2): push %r12
3b22(1): push %rbp
3b23(3): mov %rsi,%rbp
3b26(1): push %rbx
3b27(5): mov $0x5413,%esi
3b2c(2): mov %edi,%ebx
3b2e(2): xor %edi,%edi
3b30(4): sub $0x10,%rsp
3b34(9): mov $0x28,%rax
3b3d(5): mov %rax,0x8(%rsp)
3b42(2): xor %eax,%eax
3b44(3): mov %rsp,%rdx
3b47(5): call 0xffffea89(%rip)
3b4c(2): test %eax,%eax
3b4e(2): jz 0x32(%rip)
3b50(5): call 0xffffe900(%rip)
3b55(3): cmp $0x16,(%rax)
3b58(3): mov %rax,%r12
3b5b(2): jnz 0x5f(%rip)
3b5d(2): test %bl,%bl
3b5f(6): jz 0x89(%rip)
3b65(5): mov 0x8(%rsp),%rax
3b6a(9): xor $0x28,%rax
3b73(2): jnz 0x70(%rip)
3b75(4): add $0x10,%rsp
3b79(1): pop %rbx
3b7a(1): pop %rbp
3b7b(2): pop %r12
3b7d(1): ret near (%rsp)
3b7e(2): nop 
3b80(2): test %bl,%bl
3b82(5): movzx 0x2(%rsp),%edx
3b87(4): movzx (%rsp),%esi
3b8b(2): jz 0x15(%rip)
3b8d(7): lea 0x7794(%rip),%rdi
3b94(2): xor %eax,%eax
3b96(5): call 0xfffff98a(%rip)
3b9b(2): jmp 0xffffffca(%rip)
3b9d(3): nop (%rax)
3ba0(7): lea 0x777a(%rip),%rdi
3ba7(2): xor %eax,%eax
3ba9(5): call 0xfffff977(%rip)
3bae(a): mov $0x0,0x20d644(%rip)
3bb8(2): jmp 0xffffffad(%rip)
3bba(3): mov %rbp,%rdx
3bbd(5): mov $0x3,%esi
3bc2(2): xor %edi,%edi
3bc4(5): call 0x39ec(%rip)
3bc9(4): mov (%r12),%esi
3bcd(7): lea 0x9ef8(%rip),%rdx
3bd4(3): mov %rax,%rcx
3bd7(5): mov $0x1,%edi
3bdc(2): xor %eax,%eax
3bde(5): call 0xffffeb02(%rip)
3be3(5): call 0xffffe93d(%rip)
3be8(3): mov %rbp,%rdx
3beb(5): mov $0x3,%esi
3bf0(2): xor %edi,%edi
3bf2(5): call 0x39be(%rip)
3bf7(7): lea 0x7d6a(%rip),%rsi
3bfe(3): mov %rax,%rbx
3c01(5): mov $0x5,%edx
3c06(2): xor %edi,%edi
3c08(5): call 0xffffe8e8(%rip)
3c0d(3): mov %rbx,%rcx
3c10(3): mov %rax,%rdx
3c13(2): xor %esi,%esi
3c15(5): mov $0x1,%edi
3c1a(2): xor %eax,%eax
3c1c(5): call 0xffffeac4(%rip)
3c21(5): nop 0x0(%rax,%rax,1)
3c26(a): nop 0x0(%rax,%rax,1)
3c30(2): push %r13
3c32(2): push %r12
3c34(5): mov $0x5,%edx
3c39(1): push %rbp
3c3a(1): push %rbx
3c3b(2): mov %edi,%ebp
3c3d(7): sub $0x88,%rsp
3c44(7): mov 0x20d5cd(%rip),%rbx
3c4b(9): mov $0x28,%rax
3c54(5): mov %rax,0x78(%rsp)
3c59(2): xor %eax,%eax
3c5b(2): test %edi,%edi
3c5d(2): jz 0x30(%rip)
3c5f(7): lea 0x7d2a(%rip),%rsi
3c66(2): xor %edi,%edi
3c68(5): call 0xffffe888(%rip)
3c6d(7): mov 0x20d48c(%rip),%rdi
3c74(3): mov %rax,%rdx
3c77(3): mov %rbx,%rcx
3c7a(5): mov $0x1,%esi
3c7f(2): xor %eax,%eax
3c81(5): call 0xffffeaff(%rip)
3c86(2): mov %ebp,%edi
3c88(5): call 0xffffead8(%rip)
3c8d(7): lea 0x7d24(%rip),%rsi
3c94(2): xor %edi,%edi
3c96(5): call 0xffffe85a(%rip)
3c9b(3): mov %rbx,%r8
3c9e(3): mov %rbx,%rcx
3ca1(3): mov %rbx,%rdx
3ca4(3): mov %rax,%rsi
3ca7(5): mov $0x1,%edi
3cac(2): xor %eax,%eax
3cae(5): call 0xffffea22(%rip)
3cb3(7): mov 0x20d3ee(%rip),%rbx
3cba(7): lea 0x7d8f(%rip),%rsi
3cc1(5): mov $0x5,%edx
3cc6(2): xor %edi,%edi
3cc8(5): call 0xffffe828(%rip)
3ccd(3): mov %rbx,%rsi
3cd0(3): mov %rax,%rdi
3cd3(5): call 0xffffe92d(%rip)
3cd8(7): mov 0x20d3c9(%rip),%rbx
3cdf(7): lea 0x7d9a(%rip),%rsi
3ce6(5): mov $0x5,%edx
3ceb(2): xor %edi,%edi
3ced(5): call 0xffffe803(%rip)
3cf2(3): mov %rbx,%rsi
3cf5(3): mov %rax,%rdi
3cf8(5): call 0xffffe908(%rip)
3cfd(7): mov 0x20d3a4(%rip),%rbx
3d04(7): lea 0x7dc5(%rip),%rsi
3d0b(5): mov $0x5,%edx
3d10(2): xor %edi,%edi
3d12(5): call 0xffffe7de(%rip)
3d17(3): mov %rbx,%rsi
3d1a(3): mov %rax,%rdi
3d1d(5): call 0xffffe8e3(%rip)
3d22(7): mov 0x20d37f(%rip),%rbx
3d29(7): lea 0x7e78(%rip),%rsi
3d30(5): mov $0x5,%edx
3d35(2): xor %edi,%edi
3d37(5): call 0xffffe7b9(%rip)
3d3c(3): mov %rbx,%rsi
3d3f(3): mov %rax,%rdi
3d42(5): call 0xffffe8be(%rip)
3d47(7): mov 0x20d35a(%rip),%rbx
3d4e(7): lea 0x7e83(%rip),%rsi
3d55(5): mov $0x5,%edx
3d5a(2): xor %edi,%edi
3d5c(5): call 0xffffe794(%rip)
3d61(3): mov %rbx,%rsi
3d64(3): mov %rax,%rdi
3d67(5): call 0xffffe899(%rip)
3d6c(7): mov 0x20d335(%rip),%rbx
3d73(7): lea 0x7e96(%rip),%rsi
3d7a(5): mov $0x5,%edx
3d7f(2): xor %edi,%edi
3d81(5): call 0xffffe76f(%rip)
3d86(3): mov %rbx,%rsi
3d89(3): mov %rax,%rdi
3d8c(5): call 0xffffe874(%rip)
3d91(7): mov 0x20d310(%rip),%rbx
3d98(7): lea 0x75a3(%rip),%rsi
3d9f(5): mov $0x5,%edx
3da4(2): xor %edi,%edi
3da6(5): call 0xffffe74a(%rip)
3dab(3): mov %rbx,%rsi
3dae(3): mov %rax,%rdi
3db1(5): call 0xffffe84f(%rip)
3db6(7): mov 0x20d2eb(%rip),%rbx
3dbd(7): lea 0x7edc(%rip),%rsi
3dc4(5): mov $0x5,%edx
3dc9(2): xor %edi,%edi
3dcb(5): call 0xffffe725(%rip)
3dd0(3): mov %rbx,%rsi
3dd3(3): mov %rax,%rdi
3dd6(5): call 0xffffe82a(%rip)
3ddb(7): mov 0x20d2c6(%rip),%rbx
3de2(7): lea 0x7eef(%rip),%rsi
3de9(5): mov $0x5,%edx
3dee(2): xor %edi,%edi
3df0(5): call 0xffffe700(%rip)
3df5(3): mov %rbx,%rsi
3df8(3): mov %rax,%rdi
3dfb(5): call 0xffffe805(%rip)
3e00(7): mov 0x20d2a1(%rip),%rbx
3e07(7): lea 0x7f3a(%rip),%rsi
3e0e(5): mov $0x5,%edx
3e13(2): xor %edi,%edi
3e15(5): call 0xffffe6db(%rip)
3e1a(3): mov %rbx,%rsi
3e1d(3): mov %rax,%rdi
3e20(5): call 0xffffe7e0(%rip)
3e25(7): mov 0x20d27c(%rip),%rbx
3e2c(7): lea 0x7f4d(%rip),%rsi
3e33(5): mov $0x5,%edx
3e38(2): xor %edi,%edi
3e3a(5): call 0xffffe6b6(%rip)
3e3f(3): mov %rbx,%rsi
3e42(3): mov %rax,%rdi
3e45(5): call 0xffffe7bb(%rip)
3e4a(7): mov 0x20d257(%rip),%rbx
3e51(7): lea 0x7fd0(%rip),%rsi
3e58(5): mov $0x5,%edx
3e5d(2): xor %edi,%edi
3e5f(5): call 0xffffe691(%rip)
3e64(3): mov %rbx,%rsi
3e67(3): mov %rax,%rdi
3e6a(5): call 0xffffe796(%rip)
3e6f(7): mov 0x20d232(%rip),%rbx
3e76(7): lea 0x7feb(%rip),%rsi
3e7d(5): mov $0x5,%edx
3e82(2): xor %edi,%edi
3e84(5): call 0xffffe66c(%rip)
3e89(3): mov %rbx,%rsi
3e8c(3): mov %rax,%rdi
3e8f(5): call 0xffffe771(%rip)
3e94(7): mov 0x20d20d(%rip),%rbx
3e9b(7): lea 0x7ff6(%rip),%rsi
3ea2(5): mov $0x5,%edx
3ea7(2): xor %edi,%edi
3ea9(5): call 0xffffe647(%rip)
3eae(3): mov %rbx,%rsi
3eb1(3): mov %rax,%rdi
3eb4(5): call 0xffffe74c(%rip)
3eb9(7): mov 0x20d1e8(%rip),%rbx
3ec0(7): lea 0x8009(%rip),%rsi
3ec7(5): mov $0x5,%edx
3ecc(2): xor %edi,%edi
3ece(5): call 0xffffe622(%rip)
3ed3(3): mov %rbx,%rsi
3ed6(3): mov %rax,%rdi
3ed9(5): call 0xffffe727(%rip)
3ede(7): mov 0x20d1c3(%rip),%rbx
3ee5(7): lea 0x808c(%rip),%rsi
3eec(5): mov $0x5,%edx
3ef1(2): xor %edi,%edi
3ef3(5): call 0xffffe5fd(%rip)
3ef8(3): mov %rbx,%rsi
3efb(3): mov %rax,%rdi
3efe(5): call 0xffffe702(%rip)
3f03(7): mov 0x20d19e(%rip),%rbx
3f0a(7): lea 0x80a7(%rip),%rsi
3f11(5): mov $0x5,%edx
3f16(2): xor %edi,%edi
3f18(5): call 0xffffe5d8(%rip)
3f1d(3): mov %rbx,%rsi
3f20(3): mov %rax,%rdi
3f23(5): call 0xffffe6dd(%rip)
3f28(7): mov 0x20d179(%rip),%rbx
3f2f(7): lea 0x80ba(%rip),%rsi
3f36(5): mov $0x5,%edx
3f3b(2): xor %edi,%edi
3f3d(5): call 0xffffe5b3(%rip)
3f42(3): mov %rbx,%rsi
3f45(3): mov %rax,%rdi
3f48(5): call 0xffffe6b8(%rip)
3f4d(7): mov 0x20d154(%rip),%rbx
3f54(7): lea 0x80e5(%rip),%rsi
3f5b(5): mov $0x5,%edx
3f60(2): xor %edi,%edi
3f62(5): call 0xffffe58e(%rip)
3f67(3): mov %rbx,%rsi
3f6a(3): mov %rax,%rdi
3f6d(5): call 0xffffe693(%rip)
3f72(7): cmp $0x1,0x20d097(%rip)
3f79(5): mov $0x5,%edx
3f7e(6): jz 0xb1d(%rip)
3f84(7): lea 0x7850(%rip),%rsi
3f8b(2): xor %edi,%edi
3f8d(5): call 0xffffe563(%rip)
3f92(3): mov %rax,%rbx
3f95(7): lea 0x810c(%rip),%rsi
3f9c(2): xor %edi,%edi
3f9e(5): mov $0x5,%edx
3fa3(5): call 0xffffe54d(%rip)
3fa8(3): mov %rbx,%rdx
3fab(3): mov %rax,%rsi
3fae(5): mov $0x1,%edi
3fb3(2): xor %eax,%eax
3fb5(5): call 0xffffe71b(%rip)
3fba(7): mov 0x20d0e7(%rip),%rbx
3fc1(7): lea 0x8138(%rip),%rsi
3fc8(5): mov $0x5,%edx
3fcd(2): xor %edi,%edi
3fcf(5): call 0xffffe521(%rip)
3fd4(3): mov %rbx,%rsi
3fd7(3): mov %rax,%rdi
3fda(5): call 0xffffe626(%rip)
3fdf(7): mov 0x20d0c2(%rip),%rbx
3fe6(7): lea 0x8143(%rip),%rsi
3fed(5): mov $0x5,%edx
3ff2(2): xor %edi,%edi
3ff4(5): call 0xffffe4fc(%rip)
3ff9(3): mov %rbx,%rsi
3ffc(3): mov %rax,%rdi
3fff(5): call 0xffffe601(%rip)
4004(7): mov 0x20d09d(%rip),%rbx
400b(7): lea 0x8146(%rip),%rsi
4012(5): mov $0x5,%edx
4017(2): xor %edi,%edi
4019(5): call 0xffffe4d7(%rip)
401e(3): mov %rbx,%rsi
4021(3): mov %rax,%rdi
4024(5): call 0xffffe5dc(%rip)
4029(7): mov 0x20d078(%rip),%rbx
4030(7): lea 0x81a1(%rip),%rsi
4037(5): mov $0x5,%edx
403c(2): xor %edi,%edi
403e(5): call 0xffffe4b2(%rip)
4043(3): mov %rbx,%rsi
4046(3): mov %rax,%rdi
4049(5): call 0xffffe5b7(%rip)
404e(7): mov 0x20d053(%rip),%rbx
4055(7): lea 0x820c(%rip),%rsi
405c(5): mov $0x5,%edx
4061(2): xor %edi,%edi
4063(5): call 0xffffe48d(%rip)
4068(3): mov %rbx,%rsi
406b(3): mov %rax,%rdi
406e(5): call 0xffffe592(%rip)
4073(7): mov 0x20d02e(%rip),%rbx
407a(7): lea 0x825f(%rip),%rsi
4081(5): mov $0x5,%edx
4086(2): xor %edi,%edi
4088(5): call 0xffffe468(%rip)
408d(3): mov %rbx,%rsi
4090(3): mov %rax,%rdi
4093(5): call 0xffffe56d(%rip)
4098(7): mov 0x20d009(%rip),%rbx
409f(7): lea 0x82aa(%rip),%rsi
40a6(5): mov $0x5,%edx
40ab(2): xor %edi,%edi
40ad(5): call 0xffffe443(%rip)
40b2(3): mov %rbx,%rsi
40b5(3): mov %rax,%rdi
40b8(5): call 0xffffe548(%rip)
40bd(7): mov 0x20cfe4(%rip),%rbx
40c4(7): lea 0x82b5(%rip),%rsi
40cb(5): mov $0x5,%edx
40d0(2): xor %edi,%edi
40d2(5): call 0xffffe41e(%rip)
40d7(3): mov %rbx,%rsi
40da(3): mov %rax,%rdi
40dd(5): call 0xffffe523(%rip)
40e2(7): mov 0x20cfbf(%rip),%rbx
40e9(7): lea 0x82d0(%rip),%rsi
40f0(5): mov $0x5,%edx
40f5(2): xor %edi,%edi
40f7(5): call 0xffffe3f9(%rip)
40fc(3): mov %rbx,%rsi
40ff(3): mov %rax,%rdi
4102(5): call 0xffffe4fe(%rip)
4107(7): mov 0x20cf9a(%rip),%rbx
410e(7): lea 0x83e3(%rip),%rsi
4115(5): mov $0x5,%edx
411a(2): xor %edi,%edi
411c(5): call 0xffffe3d4(%rip)
4121(3): mov %rbx,%rsi
4124(3): mov %rax,%rdi
4127(5): call 0xffffe4d9(%rip)
412c(7): mov 0x20cf75(%rip),%rbx
4133(7): lea 0x83f6(%rip),%rsi
413a(5): mov $0x5,%edx
413f(2): xor %edi,%edi
4141(5): call 0xffffe3af(%rip)
4146(3): mov %rbx,%rsi
4149(3): mov %rax,%rdi
414c(5): call 0xffffe4b4(%rip)
4151(7): mov 0x20cf50(%rip),%rbx
4158(7): lea 0x84d9(%rip),%rsi
415f(5): mov $0x5,%edx
4164(2): xor %edi,%edi
4166(5): call 0xffffe38a(%rip)
416b(3): mov %rbx,%rsi
416e(3): mov %rax,%rdi
4171(5): call 0xffffe48f(%rip)
4176(7): mov 0x20cf2b(%rip),%rbx
417d(7): lea 0x8504(%rip),%rsi
4184(5): mov $0x5,%edx
4189(2): xor %edi,%edi
418b(5): call 0xffffe365(%rip)
4190(3): mov %rbx,%rsi
4193(3): mov %rax,%rdi
4196(5): call 0xffffe46a(%rip)
419b(7): mov 0x20cf06(%rip),%rbx
41a2(7): lea 0x857f(%rip),%rsi
41a9(5): mov $0x5,%edx
41ae(2): xor %edi,%edi
41b0(5): call 0xffffe340(%rip)
41b5(3): mov %rbx,%rsi
41b8(3): mov %rax,%rdi
41bb(5): call 0xffffe445(%rip)
41c0(7): mov 0x20cee1(%rip),%rbx
41c7(7): lea 0x859a(%rip),%rsi
41ce(5): mov $0x5,%edx
41d3(2): xor %edi,%edi
41d5(5): call 0xffffe31b(%rip)
41da(3): mov %rbx,%rsi
41dd(3): mov %rax,%rdi
41e0(5): call 0xffffe420(%rip)
41e5(7): mov 0x20cebc(%rip),%rbx
41ec(7): lea 0x85b5(%rip),%rsi
41f3(5): mov $0x5,%edx
41f8(2): xor %edi,%edi
41fa(5): call 0xffffe2f6(%rip)
41ff(3): mov %rbx,%rsi
4202(3): mov %rax,%rdi
4205(5): call 0xffffe3fb(%rip)
420a(7): mov 0x20ce97(%rip),%rbx
4211(7): lea 0x85e0(%rip),%rsi
4218(5): mov $0x5,%edx
421d(2): xor %edi,%edi
421f(5): call 0xffffe2d1(%rip)
4224(3): mov %rbx,%rsi
4227(3): mov %rax,%rdi
422a(5): call 0xffffe3d6(%rip)
422f(7): mov 0x20ce72(%rip),%rbx
4236(7): lea 0x711b(%rip),%rsi
423d(5): mov $0x5,%edx
4242(2): xor %edi,%edi
4244(5): call 0xffffe2ac(%rip)
4249(3): mov %rbx,%rsi
424c(3): mov %rax,%rdi
424f(5): call 0xffffe3b1(%rip)
4254(7): mov 0x20ce4d(%rip),%rbx
425b(7): lea 0x8666(%rip),%rsi
4262(5): mov $0x5,%edx
4267(2): xor %edi,%edi
4269(5): call 0xffffe287(%rip)
426e(3): mov %rbx,%rsi
4271(3): mov %rax,%rdi
4274(5): call 0xffffe38c(%rip)
4279(7): mov 0x20ce28(%rip),%rbx
4280(7): lea 0x8679(%rip),%rsi
4287(5): mov $0x5,%edx
428c(2): xor %edi,%edi
428e(5): call 0xffffe262(%rip)
4293(3): mov %rbx,%rsi
4296(3): mov %rax,%rdi
4299(5): call 0xffffe367(%rip)
429e(7): mov 0x20ce03(%rip),%rbx
42a5(7): lea 0x8694(%rip),%rsi
42ac(2): xor %edi,%edi
42ae(5): mov $0x5,%edx
42b3(5): call 0xffffe23d(%rip)
42b8(3): mov %rbx,%rsi
42bb(3): mov %rax,%rdi
42be(5): call 0xffffe342(%rip)
42c3(7): mov 0x20cdde(%rip),%rbx
42ca(7): lea 0x86a7(%rip),%rsi
42d1(5): mov $0x5,%edx
42d6(2): xor %edi,%edi
42d8(5): call 0xffffe218(%rip)
42dd(3): mov %rbx,%rsi
42e0(3): mov %rax,%rdi
42e3(5): call 0xffffe31d(%rip)
42e8(7): mov 0x20cdb9(%rip),%rbx
42ef(7): lea 0x86ba(%rip),%rsi
42f6(5): mov $0x5,%edx
42fb(2): xor %edi,%edi
42fd(5): call 0xffffe1f3(%rip)
4302(3): mov %rbx,%rsi
4305(3): mov %rax,%rdi
4308(5): call 0xffffe2f8(%rip)
430d(7): mov 0x20cd94(%rip),%rbx
4314(7): lea 0x86cd(%rip),%rsi
431b(5): mov $0x5,%edx
4320(2): xor %edi,%edi
4322(5): call 0xffffe1ce(%rip)
4327(3): mov %rbx,%rsi
432a(3): mov %rax,%rdi
432d(5): call 0xffffe2d3(%rip)
4332(7): mov 0x20cd6f(%rip),%rbx
4339(7): lea 0x86f8(%rip),%rsi
4340(5): mov $0x5,%edx
4345(2): xor %edi,%edi
4347(5): call 0xffffe1a9(%rip)
434c(3): mov %rbx,%rsi
434f(3): mov %rax,%rdi
4352(5): call 0xffffe2ae(%rip)
4357(7): mov 0x20cd4a(%rip),%rbx
435e(7): lea 0x8723(%rip),%rsi
4365(5): mov $0x5,%edx
436a(2): xor %edi,%edi
436c(5): call 0xffffe184(%rip)
4371(3): mov %rbx,%rsi
4374(3): mov %rax,%rdi
4377(5): call 0xffffe289(%rip)
437c(7): mov 0x20cd25(%rip),%rbx
4383(7): lea 0x873e(%rip),%rsi
438a(5): mov $0x5,%edx
438f(2): xor %edi,%edi
4391(5): call 0xffffe15f(%rip)
4396(3): mov %rbx,%rsi
4399(3): mov %rax,%rdi
439c(5): call 0xffffe264(%rip)
43a1(7): mov 0x20cd00(%rip),%rbx
43a8(7): lea 0x8759(%rip),%rsi
43af(5): mov $0x5,%edx
43b4(2): xor %edi,%edi
43b6(5): call 0xffffe13a(%rip)
43bb(3): mov %rbx,%rsi
43be(3): mov %rax,%rdi
43c1(5): call 0xffffe23f(%rip)
43c6(7): mov 0x20ccdb(%rip),%rbx
43cd(7): lea 0x876c(%rip),%rsi
43d4(5): mov $0x5,%edx
43d9(2): xor %edi,%edi
43db(5): call 0xffffe115(%rip)
43e0(3): mov %rbx,%rsi
43e3(3): mov %rax,%rdi
43e6(5): call 0xffffe21a(%rip)
43eb(7): mov 0x20ccb6(%rip),%rbx
43f2(7): lea 0x878f(%rip),%rsi
43f9(5): mov $0x5,%edx
43fe(2): xor %edi,%edi
4400(5): call 0xffffe0f0(%rip)
4405(3): mov %rbx,%rsi
4408(3): mov %rax,%rdi
440b(5): call 0xffffe1f5(%rip)
4410(7): mov 0x20cc91(%rip),%rbx
4417(7): lea 0x8792(%rip),%rsi
441e(5): mov $0x5,%edx
4423(2): xor %edi,%edi
4425(5): call 0xffffe0cb(%rip)
442a(3): mov %rbx,%rsi
442d(3): mov %rax,%rdi
4430(5): call 0xffffe1d0(%rip)
4435(7): mov 0x20cc6c(%rip),%rbx
443c(7): lea 0x87e5(%rip),%rsi
4443(5): mov $0x5,%edx
4448(2): xor %edi,%edi
444a(5): call 0xffffe0a6(%rip)
444f(3): mov %rbx,%rsi
4452(3): mov %rax,%rdi
4455(5): call 0xffffe1ab(%rip)
445a(7): mov 0x20cc47(%rip),%rbx
4461(7): lea 0x87f8(%rip),%rsi
4468(5): mov $0x5,%edx
446d(2): xor %edi,%edi
446f(5): call 0xffffe081(%rip)
4474(3): mov %rbx,%rsi
4477(3): mov %rax,%rdi
447a(5): call 0xffffe186(%rip)
447f(7): mov 0x20cc22(%rip),%rbx
4486(7): lea 0x882b(%rip),%rsi
448d(5): mov $0x5,%edx
4492(2): xor %edi,%edi
4494(5): call 0xffffe05c(%rip)
4499(3): mov %rbx,%rsi
449c(3): mov %rax,%rdi
449f(5): call 0xffffe161(%rip)
44a4(7): mov 0x20cbfd(%rip),%rbx
44ab(7): lea 0x889e(%rip),%rsi
44b2(5): mov $0x5,%edx
44b7(2): xor %edi,%edi
44b9(5): call 0xffffe037(%rip)
44be(3): mov %rbx,%rsi
44c1(3): mov %rax,%rdi
44c4(5): call 0xffffe13c(%rip)
44c9(7): mov 0x20cbd8(%rip),%rbx
44d0(7): lea 0x88c1(%rip),%rsi
44d7(5): mov $0x5,%edx
44dc(2): xor %edi,%edi
44de(5): call 0xffffe012(%rip)
44e3(3): mov %rbx,%rsi
44e6(3): mov %rax,%rdi
44e9(5): call 0xffffe117(%rip)
44ee(7): mov 0x20cbb3(%rip),%rbx
44f5(7): lea 0x88c4(%rip),%rsi
44fc(5): mov $0x5,%edx
4501(2): xor %edi,%edi
4503(5): call 0xffffdfed(%rip)
4508(3): mov %rbx,%rsi
450b(3): mov %rax,%rdi
450e(5): call 0xffffe0f2(%rip)
4513(7): mov 0x20cb8e(%rip),%rbx
451a(7): lea 0x88c7(%rip),%rsi
4521(5): mov $0x5,%edx
4526(2): xor %edi,%edi
4528(5): call 0xffffdfc8(%rip)
452d(3): mov %rbx,%rsi
4530(3): mov %rax,%rdi
4533(5): call 0xffffe0cd(%rip)
4538(7): mov 0x20cb69(%rip),%rbx
453f(7): lea 0x8902(%rip),%rsi
4546(5): mov $0x5,%edx
454b(2): xor %edi,%edi
454d(5): call 0xffffdfa3(%rip)
4552(3): mov %rbx,%rsi
4555(3): mov %rax,%rdi
4558(5): call 0xffffe0a8(%rip)
455d(7): mov 0x20cb44(%rip),%rbx
4564(7): lea 0x8905(%rip),%rsi
456b(5): mov $0x5,%edx
4570(2): xor %edi,%edi
4572(5): call 0xffffdf7e(%rip)
4577(3): mov %rbx,%rsi
457a(3): mov %rax,%rdi
457d(5): call 0xffffe083(%rip)
4582(7): mov 0x20cb1f(%rip),%rbx
4589(7): lea 0x8928(%rip),%rsi
4590(5): mov $0x5,%edx
4595(2): xor %edi,%edi
4597(5): call 0xffffdf59(%rip)
459c(3): mov %rbx,%rsi
459f(3): mov %rax,%rdi
45a2(5): call 0xffffe05e(%rip)
45a7(7): mov 0x20cafa(%rip),%rbx
45ae(7): lea 0x894b(%rip),%rsi
45b5(5): mov $0x5,%edx
45ba(2): xor %edi,%edi
45bc(5): call 0xffffdf34(%rip)
45c1(3): mov %rbx,%rsi
45c4(3): mov %rax,%rdi
45c7(5): call 0xffffe039(%rip)
45cc(7): mov 0x20cad5(%rip),%rbx
45d3(7): lea 0x896e(%rip),%rsi
45da(5): mov $0x5,%edx
45df(2): xor %edi,%edi
45e1(5): call 0xffffdf0f(%rip)
45e6(3): mov %rbx,%rsi
45e9(3): mov %rax,%rdi
45ec(5): call 0xffffe014(%rip)
45f1(7): lea 0x8978(%rip),%rsi
45f8(2): xor %edi,%edi
45fa(5): mov $0x5,%edx
45ff(5): call 0xffffdef1(%rip)
4604(7): lea 0x6d60(%rip),%rdx
460b(3): mov %rax,%rsi
460e(5): mov $0x1,%edi
4613(2): xor %eax,%eax
4615(5): call 0xffffe0bb(%rip)
461a(7): mov 0x20ca87(%rip),%rbx
4621(7): lea 0x89b0(%rip),%rsi
4628(5): mov $0x5,%edx
462d(2): xor %edi,%edi
462f(5): call 0xffffdec1(%rip)
4634(3): mov %rbx,%rsi
4637(3): mov %rax,%rdi
463a(5): call 0xffffdfc6(%rip)
463f(7): mov 0x20ca62(%rip),%rbx
4646(7): lea 0x8a23(%rip),%rsi
464d(5): mov $0x5,%edx
4652(2): xor %edi,%edi
4654(5): call 0xffffde9c(%rip)
4659(3): mov %rbx,%rsi
465c(3): mov %rax,%rdi
465f(5): call 0xffffdfa1(%rip)
4664(7): mov 0x20ca3d(%rip),%rbx
466b(7): lea 0x8a26(%rip),%rsi
4672(5): mov $0x5,%edx
4677(2): xor %edi,%edi
4679(5): call 0xffffde77(%rip)
467e(3): mov %rbx,%rsi
4681(3): mov %rax,%rdi
4684(5): call 0xffffdf7c(%rip)
4689(7): mov 0x20ca18(%rip),%rbx
4690(7): lea 0x8a51(%rip),%rsi
4697(5): mov $0x5,%edx
469c(2): xor %edi,%edi
469e(5): call 0xffffde52(%rip)
46a3(3): mov %rbx,%rsi
46a6(3): mov %rax,%rdi
46a9(5): call 0xffffdf57(%rip)
46ae(7): mov 0x20c9f3(%rip),%rbx
46b5(7): lea 0x6cca(%rip),%rsi
46bc(5): mov $0x5,%edx
46c1(2): xor %edi,%edi
46c3(5): call 0xffffde2d(%rip)
46c8(3): mov %rbx,%rsi
46cb(3): mov %rax,%rdi
46ce(5): call 0xffffdf32(%rip)
46d3(7): mov 0x20c9ce(%rip),%rbx
46da(7): lea 0x8a4f(%rip),%rsi
46e1(5): mov $0x5,%edx
46e6(2): xor %edi,%edi
46e8(5): call 0xffffde08(%rip)
46ed(3): mov %rbx,%rsi
46f0(3): mov %rax,%rdi
46f3(5): call 0xffffdf0d(%rip)
46f8(7): mov 0x20c9a9(%rip),%rbx
46ff(7): lea 0x8a52(%rip),%rsi
4706(5): mov $0x5,%edx
470b(2): xor %edi,%edi
470d(5): call 0xffffdde3(%rip)
4712(3): mov %rbx,%rsi
4715(3): mov %rax,%rdi
4718(5): call 0xffffdee8(%rip)
471d(7): mov 0x20c984(%rip),%rbx
4724(7): lea 0x8a75(%rip),%rsi
472b(5): mov $0x5,%edx
4730(2): xor %edi,%edi
4732(5): call 0xffffddbe(%rip)
4737(3): mov %rbx,%rsi
473a(3): mov %rax,%rdi
473d(5): call 0xffffdec3(%rip)
4742(7): lea 0x6c55(%rip),%rsi
4749(2): xor %edi,%edi
474b(5): mov $0x5,%edx
4750(5): call 0xffffdda0(%rip)
4755(7): lea 0x6c5f(%rip),%rdx
475c(3): mov %rax,%rsi
475f(5): mov $0x1,%edi
4764(2): xor %eax,%eax
4766(5): call 0xffffdf6a(%rip)
476b(7): lea 0x8ade(%rip),%rsi
4772(2): xor %edi,%edi
4774(5): mov $0x5,%edx
4779(5): call 0xffffdd77(%rip)
477e(7): lea 0x6c4b(%rip),%rdx
4785(3): mov %rax,%rsi
4788(5): mov $0x1,%edi
478d(2): xor %eax,%eax
478f(5): call 0xffffdf41(%rip)
4794(7): mov 0x20c90d(%rip),%rbx
479b(7): lea 0x8afe(%rip),%rsi
47a2(5): mov $0x5,%edx
47a7(2): xor %edi,%edi
47a9(5): call 0xffffdd47(%rip)
47ae(3): mov %rbx,%rsi
47b1(3): mov %rax,%rdi
47b4(5): call 0xffffde4c(%rip)
47b9(7): mov 0x20c8e8(%rip),%rbx
47c0(7): lea 0x8b01(%rip),%rsi
47c7(5): mov $0x5,%edx
47cc(2): xor %edi,%edi
47ce(5): call 0xffffdd22(%rip)
47d3(3): mov %rbx,%rsi
47d6(3): mov %rax,%rdi
47d9(5): call 0xffffde27(%rip)
47de(7): mov 0x20c8c3(%rip),%rbx
47e5(7): lea 0x8b74(%rip),%rsi
47ec(5): mov $0x5,%edx
47f1(2): xor %edi,%edi
47f3(5): call 0xffffdcfd(%rip)
47f8(3): mov %rbx,%rsi
47fb(3): mov %rax,%rdi
47fe(5): call 0xffffde02(%rip)
4803(7): mov 0x20c89e(%rip),%rbx
480a(7): lea 0x8b7f(%rip),%rsi
4811(5): mov $0x5,%edx
4816(2): xor %edi,%edi
4818(5): call 0xffffdcd8(%rip)
481d(3): mov %rbx,%rsi
4820(3): mov %rax,%rdi
4823(5): call 0xffffdddd(%rip)
4828(7): lea 0x8bc9(%rip),%rsi
482f(2): xor %edi,%edi
4831(5): mov $0x5,%edx
4836(5): call 0xffffdcba(%rip)
483b(7): lea 0x8bf6(%rip),%rcx
4842(7): lea 0x6ba3(%rip),%rdx
4849(3): mov %rax,%rsi
484c(5): mov $0x1,%edi
4851(2): xor %eax,%eax
4853(5): call 0xffffde7d(%rip)
4858(7): mov 0x20c849(%rip),%rbx
485f(7): lea 0x8c02(%rip),%rsi
4866(5): mov $0x5,%edx
486b(2): xor %edi,%edi
486d(5): call 0xffffdc83(%rip)
4872(3): mov %rbx,%rsi
4875(3): mov %rax,%rdi
4878(5): call 0xffffdd88(%rip)
487d(7): lea 0x8cb4(%rip),%rsi
4884(2): xor %edi,%edi
4886(5): mov $0x5,%edx
488b(5): call 0xffffdc65(%rip)
4890(7): lea 0x8d79(%rip),%rdx
4897(3): mov %rax,%rsi
489a(5): mov $0x1,%edi
489f(2): xor %eax,%eax
48a1(5): call 0xffffde2f(%rip)
48a6(7): lea 0x8d83(%rip),%rsi
48ad(2): xor %edi,%edi
48af(5): mov $0x5,%edx
48b4(5): call 0xffffdc3c(%rip)
48b9(7): lea 0x8eb0(%rip),%rcx
48c0(7): lea 0x8e69(%rip),%r8
48c7(7): lea 0x8ee2(%rip),%rdx
48ce(3): mov %rax,%rsi
48d1(5): mov $0x1,%edi
48d6(2): xor %eax,%eax
48d8(5): call 0xffffddf8(%rip)
48dd(7): mov 0x20c7c4(%rip),%rbx
48e4(7): lea 0x8f05(%rip),%rsi
48eb(5): mov $0x5,%edx
48f0(2): xor %edi,%edi
48f2(5): call 0xffffdbfe(%rip)
48f7(3): mov %rbx,%rsi
48fa(3): mov %rax,%rdi
48fd(7): lea 0x6a39(%rip),%rbx
4904(5): call 0xffffdcfc(%rip)
4909(7): lea 0x6aea(%rip),%rax
4910(7): lea 0x6b24(%rip),%rcx
4917(9): mov $0x0,0x60(%rsp)
4920(9): mov $0x0,0x68(%rsp)
4929(3): mov %rsp,%rdx
492c(4): mov %rax,(%rsp)
4930(7): lea 0x6ac5(%rip),%rax
4937(5): mov %rcx,0x30(%rsp)
493c(7): lea 0x6b02(%rip),%rcx
4943(5): mov %rax,0x8(%rsp)
4948(7): lea 0x6b25(%rip),%rax
494f(5): mov %rcx,0x40(%rsp)
4954(7): lea 0x6af4(%rip),%rcx
495b(5): mov %rax,0x10(%rsp)
4960(7): lea 0x6aa5(%rip),%rax
4967(5): mov %rcx,0x50(%rsp)
496c(5): mov %rax,0x18(%rsp)
4971(7): lea 0x6aaa(%rip),%rax
4978(5): mov %rax,0x20(%rsp)
497d(7): lea 0x6aa8(%rip),%rax
4984(5): mov %rax,0x28(%rsp)
4989(5): mov %rax,0x38(%rsp)
498e(5): mov %rax,0x48(%rsp)
4993(5): mov %rax,0x58(%rsp)
4998(8): nop 0x0(%rax,%rax,1)
49a0(4): add $0x10,%rdx
49a4(3): mov (%rdx),%rdi
49a7(3): test %rdi,%rdi
49aa(2): jz 0x15(%rip)
49ac(5): mov $0x5,%ecx
49b1(3): mov %rbx,%rsi
49b4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
49b6(3): setnbe %al
49b9(2): sbb $0x0,%al
49bb(2): test %al,%al
49bd(2): jnz 0xffffffe3(%rip)
49bf(4): mov 0x8(%rdx),%r12
49c3(2): xor %edi,%edi
49c5(5): mov $0x5,%edx
49ca(7): lea 0x6a88(%rip),%rsi
49d1(3): test %r12,%r12
49d4(6): jz 0x10e(%rip)
49da(5): call 0xffffdb16(%rip)
49df(7): lea 0x8f22(%rip),%rcx
49e6(7): lea 0x6a83(%rip),%rdx
49ed(3): mov %rax,%rsi
49f0(5): mov $0x1,%edi
49f5(2): xor %eax,%eax
49f7(5): call 0xffffdcd9(%rip)
49fc(2): xor %esi,%esi
49fe(5): mov $0x5,%edi
4a03(5): call 0xffffdcad(%rip)
4a08(3): test %rax,%rax
4a0b(2): jz 0x1e(%rip)
4a0d(7): lea 0x6a6a(%rip),%rsi
4a14(5): mov $0x3,%edx
4a19(3): mov %rax,%rdi
4a1c(5): call 0xffffda44(%rip)
4a21(2): test %eax,%eax
4a23(6): jnz 0x95(%rip)
4a29(7): lea 0x6a52(%rip),%rsi
4a30(2): xor %edi,%edi
4a32(5): mov $0x5,%edx
4a37(5): call 0xffffdab9(%rip)
4a3c(7): lea 0x68fa(%rip),%rcx
4a43(7): lea 0x8ebe(%rip),%rdx
4a4a(3): mov %rax,%rsi
4a4d(5): mov $0x1,%edi
4a52(2): xor %eax,%eax
4a54(5): call 0xffffdc7c(%rip)
4a59(3): cmp %rbx,%r12
4a5c(7): lea 0x69b3(%rip),%rcx
4a63(7): lea 0x95d7(%rip),%rbx
4a6a(4): cmove %rcx,%rbx
4a6e(7): lea 0x8f03(%rip),%rsi
4a75(2): xor %edi,%edi
4a77(5): mov $0x5,%edx
4a7c(5): call 0xffffda74(%rip)
4a81(3): mov %rbx,%rcx
4a84(3): mov %rax,%rsi
4a87(3): mov %r12,%rdx
4a8a(5): mov $0x1,%edi
4a8f(2): xor %eax,%eax
4a91(5): call 0xffffdc3f(%rip)
4a96(5): jmp 0xfffff1f0(%rip)
4a9b(7): lea 0x6c78(%rip),%rsi
4aa2(2): xor %edi,%edi
4aa4(5): call 0xffffda4c(%rip)
4aa9(3): mov %rax,%rbx
4aac(5): jmp 0xfffff4e9(%rip)
4ab1(7): lea 0x6885(%rip),%r12
4ab8(7): mov 0x20c5e9(%rip),%r13
4abf(7): lea 0x8e6a(%rip),%rsi
4ac6(2): xor %edi,%edi
4ac8(5): mov $0x5,%edx
4acd(5): call 0xffffda23(%rip)
4ad2(3): mov %r13,%rsi
4ad5(3): mov %rax,%rdi
4ad8(5): call 0xffffdb28(%rip)
4add(5): jmp 0xffffff4c(%rip)
4ae2(5): call 0xffffda0e(%rip)
4ae7(7): lea 0x8e1a(%rip),%rcx
4aee(7): lea 0x697b(%rip),%rdx
4af5(3): mov %rax,%rsi
4af8(5): mov $0x1,%edi
4afd(2): xor %eax,%eax
4aff(5): call 0xffffdbd1(%rip)
4b04(2): xor %esi,%esi
4b06(5): mov $0x5,%edi
4b0b(5): call 0xffffdba5(%rip)
4b10(3): test %rax,%rax
4b13(2): jz 0x1a(%rip)
4b15(7): lea 0x6962(%rip),%rsi
4b1c(5): mov $0x3,%edx
4b21(3): mov %rax,%rdi
4b24(5): call 0xffffd93c(%rip)
4b29(2): test %eax,%eax
4b2b(2): jnz 0xffffff86(%rip)
4b2d(7): lea 0x694e(%rip),%rsi
4b34(5): mov $0x5,%edx
4b39(2): xor %edi,%edi
4b3b(7): lea 0x67fb(%rip),%r12
4b42(7): lea 0x68cd(%rip),%rbx
4b49(5): call 0xffffd9a7(%rip)
4b4e(7): lea 0x67e8(%rip),%rcx
4b55(7): lea 0x8dac(%rip),%rdx
4b5c(3): mov %rax,%rsi
4b5f(5): mov $0x1,%edi
4b64(2): xor %eax,%eax
4b66(5): call 0xffffdb6a(%rip)
4b6b(5): jmp 0xffffff03(%rip)

"display_window_size" :
3b20(2): push %r12
3b22(1): push %rbp
3b23(3): mov %rsi,%rbp
3b26(1): push %rbx
3b27(5): mov $0x5413,%esi
3b2c(2): mov %edi,%ebx
3b2e(2): xor %edi,%edi
3b30(4): sub $0x10,%rsp
3b34(9): mov $0x28,%rax
3b3d(5): mov %rax,0x8(%rsp)
3b42(2): xor %eax,%eax
3b44(3): mov %rsp,%rdx
3b47(5): call 0xffffea89(%rip)
3b4c(2): test %eax,%eax
3b4e(2): jz 0x32(%rip)
3b50(5): call 0xffffe900(%rip)
3b55(3): cmp $0x16,(%rax)
3b58(3): mov %rax,%r12
3b5b(2): jnz 0x5f(%rip)
3b5d(2): test %bl,%bl
3b5f(6): jz 0x89(%rip)
3b65(5): mov 0x8(%rsp),%rax
3b6a(9): xor $0x28,%rax
3b73(2): jnz 0x70(%rip)
3b75(4): add $0x10,%rsp
3b79(1): pop %rbx
3b7a(1): pop %rbp
3b7b(2): pop %r12
3b7d(1): ret near (%rsp)
3b7e(2): nop 
3b80(2): test %bl,%bl
3b82(5): movzx 0x2(%rsp),%edx
3b87(4): movzx (%rsp),%esi
3b8b(2): jz 0x15(%rip)
3b8d(7): lea 0x7794(%rip),%rdi
3b94(2): xor %eax,%eax
3b96(5): call 0xfffff98a(%rip)
3b9b(2): jmp 0xffffffca(%rip)
3b9d(3): nop (%rax)
3ba0(7): lea 0x777a(%rip),%rdi
3ba7(2): xor %eax,%eax
3ba9(5): call 0xfffff977(%rip)
3bae(a): mov $0x0,0x20d644(%rip)
3bb8(2): jmp 0xffffffad(%rip)
3bba(3): mov %rbp,%rdx
3bbd(5): mov $0x3,%esi
3bc2(2): xor %edi,%edi
3bc4(5): call 0x39ec(%rip)
3bc9(4): mov (%r12),%esi
3bcd(7): lea 0x9ef8(%rip),%rdx
3bd4(3): mov %rax,%rcx
3bd7(5): mov $0x1,%edi
3bdc(2): xor %eax,%eax
3bde(5): call 0xffffeb02(%rip)
3be3(5): call 0xffffe93d(%rip)
3be8(3): mov %rbp,%rdx
3beb(5): mov $0x3,%esi
3bf0(2): xor %edi,%edi
3bf2(5): call 0x39be(%rip)
3bf7(7): lea 0x7d6a(%rip),%rsi
3bfe(3): mov %rax,%rbx
3c01(5): mov $0x5,%edx
3c06(2): xor %edi,%edi
3c08(5): call 0xffffe8e8(%rip)
3c0d(3): mov %rbx,%rcx
3c10(3): mov %rax,%rdx
3c13(2): xor %esi,%esi
3c15(5): mov $0x1,%edi
3c1a(2): xor %eax,%eax
3c1c(5): call 0xffffeac4(%rip)
3c21(5): nop 0x0(%rax,%rax,1)
3c26(a): nop 0x0(%rax,%rax,1)
3c30(2): push %r13
3c32(2): push %r12
3c34(5): mov $0x5,%edx
3c39(1): push %rbp
3c3a(1): push %rbx
3c3b(2): mov %edi,%ebp
3c3d(7): sub $0x88,%rsp
3c44(7): mov 0x20d5cd(%rip),%rbx
3c4b(9): mov $0x28,%rax
3c54(5): mov %rax,0x78(%rsp)
3c59(2): xor %eax,%eax
3c5b(2): test %edi,%edi
3c5d(2): jz 0x30(%rip)
3c5f(7): lea 0x7d2a(%rip),%rsi
3c66(2): xor %edi,%edi
3c68(5): call 0xffffe888(%rip)
3c6d(7): mov 0x20d48c(%rip),%rdi
3c74(3): mov %rax,%rdx
3c77(3): mov %rbx,%rcx
3c7a(5): mov $0x1,%esi
3c7f(2): xor %eax,%eax
3c81(5): call 0xffffeaff(%rip)
3c86(2): mov %ebp,%edi
3c88(5): call 0xffffead8(%rip)
3c8d(7): lea 0x7d24(%rip),%rsi
3c94(2): xor %edi,%edi
3c96(5): call 0xffffe85a(%rip)
3c9b(3): mov %rbx,%r8
3c9e(3): mov %rbx,%rcx
3ca1(3): mov %rbx,%rdx
3ca4(3): mov %rax,%rsi
3ca7(5): mov $0x1,%edi
3cac(2): xor %eax,%eax
3cae(5): call 0xffffea22(%rip)
3cb3(7): mov 0x20d3ee(%rip),%rbx
3cba(7): lea 0x7d8f(%rip),%rsi
3cc1(5): mov $0x5,%edx
3cc6(2): xor %edi,%edi
3cc8(5): call 0xffffe828(%rip)
3ccd(3): mov %rbx,%rsi
3cd0(3): mov %rax,%rdi
3cd3(5): call 0xffffe92d(%rip)
3cd8(7): mov 0x20d3c9(%rip),%rbx
3cdf(7): lea 0x7d9a(%rip),%rsi
3ce6(5): mov $0x5,%edx
3ceb(2): xor %edi,%edi
3ced(5): call 0xffffe803(%rip)
3cf2(3): mov %rbx,%rsi
3cf5(3): mov %rax,%rdi
3cf8(5): call 0xffffe908(%rip)
3cfd(7): mov 0x20d3a4(%rip),%rbx
3d04(7): lea 0x7dc5(%rip),%rsi
3d0b(5): mov $0x5,%edx
3d10(2): xor %edi,%edi
3d12(5): call 0xffffe7de(%rip)
3d17(3): mov %rbx,%rsi
3d1a(3): mov %rax,%rdi
3d1d(5): call 0xffffe8e3(%rip)
3d22(7): mov 0x20d37f(%rip),%rbx
3d29(7): lea 0x7e78(%rip),%rsi
3d30(5): mov $0x5,%edx
3d35(2): xor %edi,%edi
3d37(5): call 0xffffe7b9(%rip)
3d3c(3): mov %rbx,%rsi
3d3f(3): mov %rax,%rdi
3d42(5): call 0xffffe8be(%rip)
3d47(7): mov 0x20d35a(%rip),%rbx
3d4e(7): lea 0x7e83(%rip),%rsi
3d55(5): mov $0x5,%edx
3d5a(2): xor %edi,%edi
3d5c(5): call 0xffffe794(%rip)
3d61(3): mov %rbx,%rsi
3d64(3): mov %rax,%rdi
3d67(5): call 0xffffe899(%rip)
3d6c(7): mov 0x20d335(%rip),%rbx
3d73(7): lea 0x7e96(%rip),%rsi
3d7a(5): mov $0x5,%edx
3d7f(2): xor %edi,%edi
3d81(5): call 0xffffe76f(%rip)
3d86(3): mov %rbx,%rsi
3d89(3): mov %rax,%rdi
3d8c(5): call 0xffffe874(%rip)
3d91(7): mov 0x20d310(%rip),%rbx
3d98(7): lea 0x75a3(%rip),%rsi
3d9f(5): mov $0x5,%edx
3da4(2): xor %edi,%edi
3da6(5): call 0xffffe74a(%rip)
3dab(3): mov %rbx,%rsi
3dae(3): mov %rax,%rdi
3db1(5): call 0xffffe84f(%rip)
3db6(7): mov 0x20d2eb(%rip),%rbx
3dbd(7): lea 0x7edc(%rip),%rsi
3dc4(5): mov $0x5,%edx
3dc9(2): xor %edi,%edi
3dcb(5): call 0xffffe725(%rip)
3dd0(3): mov %rbx,%rsi
3dd3(3): mov %rax,%rdi
3dd6(5): call 0xffffe82a(%rip)
3ddb(7): mov 0x20d2c6(%rip),%rbx
3de2(7): lea 0x7eef(%rip),%rsi
3de9(5): mov $0x5,%edx
3dee(2): xor %edi,%edi
3df0(5): call 0xffffe700(%rip)
3df5(3): mov %rbx,%rsi
3df8(3): mov %rax,%rdi
3dfb(5): call 0xffffe805(%rip)
3e00(7): mov 0x20d2a1(%rip),%rbx
3e07(7): lea 0x7f3a(%rip),%rsi
3e0e(5): mov $0x5,%edx
3e13(2): xor %edi,%edi
3e15(5): call 0xffffe6db(%rip)
3e1a(3): mov %rbx,%rsi
3e1d(3): mov %rax,%rdi
3e20(5): call 0xffffe7e0(%rip)
3e25(7): mov 0x20d27c(%rip),%rbx
3e2c(7): lea 0x7f4d(%rip),%rsi
3e33(5): mov $0x5,%edx
3e38(2): xor %edi,%edi
3e3a(5): call 0xffffe6b6(%rip)
3e3f(3): mov %rbx,%rsi
3e42(3): mov %rax,%rdi
3e45(5): call 0xffffe7bb(%rip)
3e4a(7): mov 0x20d257(%rip),%rbx
3e51(7): lea 0x7fd0(%rip),%rsi
3e58(5): mov $0x5,%edx
3e5d(2): xor %edi,%edi
3e5f(5): call 0xffffe691(%rip)
3e64(3): mov %rbx,%rsi
3e67(3): mov %rax,%rdi
3e6a(5): call 0xffffe796(%rip)
3e6f(7): mov 0x20d232(%rip),%rbx
3e76(7): lea 0x7feb(%rip),%rsi
3e7d(5): mov $0x5,%edx
3e82(2): xor %edi,%edi
3e84(5): call 0xffffe66c(%rip)
3e89(3): mov %rbx,%rsi
3e8c(3): mov %rax,%rdi
3e8f(5): call 0xffffe771(%rip)
3e94(7): mov 0x20d20d(%rip),%rbx
3e9b(7): lea 0x7ff6(%rip),%rsi
3ea2(5): mov $0x5,%edx
3ea7(2): xor %edi,%edi
3ea9(5): call 0xffffe647(%rip)
3eae(3): mov %rbx,%rsi
3eb1(3): mov %rax,%rdi
3eb4(5): call 0xffffe74c(%rip)
3eb9(7): mov 0x20d1e8(%rip),%rbx
3ec0(7): lea 0x8009(%rip),%rsi
3ec7(5): mov $0x5,%edx
3ecc(2): xor %edi,%edi
3ece(5): call 0xffffe622(%rip)
3ed3(3): mov %rbx,%rsi
3ed6(3): mov %rax,%rdi
3ed9(5): call 0xffffe727(%rip)
3ede(7): mov 0x20d1c3(%rip),%rbx
3ee5(7): lea 0x808c(%rip),%rsi
3eec(5): mov $0x5,%edx
3ef1(2): xor %edi,%edi
3ef3(5): call 0xffffe5fd(%rip)
3ef8(3): mov %rbx,%rsi
3efb(3): mov %rax,%rdi
3efe(5): call 0xffffe702(%rip)
3f03(7): mov 0x20d19e(%rip),%rbx
3f0a(7): lea 0x80a7(%rip),%rsi
3f11(5): mov $0x5,%edx
3f16(2): xor %edi,%edi
3f18(5): call 0xffffe5d8(%rip)
3f1d(3): mov %rbx,%rsi
3f20(3): mov %rax,%rdi
3f23(5): call 0xffffe6dd(%rip)
3f28(7): mov 0x20d179(%rip),%rbx
3f2f(7): lea 0x80ba(%rip),%rsi
3f36(5): mov $0x5,%edx
3f3b(2): xor %edi,%edi
3f3d(5): call 0xffffe5b3(%rip)
3f42(3): mov %rbx,%rsi
3f45(3): mov %rax,%rdi
3f48(5): call 0xffffe6b8(%rip)
3f4d(7): mov 0x20d154(%rip),%rbx
3f54(7): lea 0x80e5(%rip),%rsi
3f5b(5): mov $0x5,%edx
3f60(2): xor %edi,%edi
3f62(5): call 0xffffe58e(%rip)
3f67(3): mov %rbx,%rsi
3f6a(3): mov %rax,%rdi
3f6d(5): call 0xffffe693(%rip)
3f72(7): cmp $0x1,0x20d097(%rip)
3f79(5): mov $0x5,%edx
3f7e(6): jz 0xb1d(%rip)
3f84(7): lea 0x7850(%rip),%rsi
3f8b(2): xor %edi,%edi
3f8d(5): call 0xffffe563(%rip)
3f92(3): mov %rax,%rbx
3f95(7): lea 0x810c(%rip),%rsi
3f9c(2): xor %edi,%edi
3f9e(5): mov $0x5,%edx
3fa3(5): call 0xffffe54d(%rip)
3fa8(3): mov %rbx,%rdx
3fab(3): mov %rax,%rsi
3fae(5): mov $0x1,%edi
3fb3(2): xor %eax,%eax
3fb5(5): call 0xffffe71b(%rip)
3fba(7): mov 0x20d0e7(%rip),%rbx
3fc1(7): lea 0x8138(%rip),%rsi
3fc8(5): mov $0x5,%edx
3fcd(2): xor %edi,%edi
3fcf(5): call 0xffffe521(%rip)
3fd4(3): mov %rbx,%rsi
3fd7(3): mov %rax,%rdi
3fda(5): call 0xffffe626(%rip)
3fdf(7): mov 0x20d0c2(%rip),%rbx
3fe6(7): lea 0x8143(%rip),%rsi
3fed(5): mov $0x5,%edx
3ff2(2): xor %edi,%edi
3ff4(5): call 0xffffe4fc(%rip)
3ff9(3): mov %rbx,%rsi
3ffc(3): mov %rax,%rdi
3fff(5): call 0xffffe601(%rip)
4004(7): mov 0x20d09d(%rip),%rbx
400b(7): lea 0x8146(%rip),%rsi
4012(5): mov $0x5,%edx
4017(2): xor %edi,%edi
4019(5): call 0xffffe4d7(%rip)
401e(3): mov %rbx,%rsi
4021(3): mov %rax,%rdi
4024(5): call 0xffffe5dc(%rip)
4029(7): mov 0x20d078(%rip),%rbx
4030(7): lea 0x81a1(%rip),%rsi
4037(5): mov $0x5,%edx
403c(2): xor %edi,%edi
403e(5): call 0xffffe4b2(%rip)
4043(3): mov %rbx,%rsi
4046(3): mov %rax,%rdi
4049(5): call 0xffffe5b7(%rip)
404e(7): mov 0x20d053(%rip),%rbx
4055(7): lea 0x820c(%rip),%rsi
405c(5): mov $0x5,%edx
4061(2): xor %edi,%edi
4063(5): call 0xffffe48d(%rip)
4068(3): mov %rbx,%rsi
406b(3): mov %rax,%rdi
406e(5): call 0xffffe592(%rip)
4073(7): mov 0x20d02e(%rip),%rbx
407a(7): lea 0x825f(%rip),%rsi
4081(5): mov $0x5,%edx
4086(2): xor %edi,%edi
4088(5): call 0xffffe468(%rip)
408d(3): mov %rbx,%rsi
4090(3): mov %rax,%rdi
4093(5): call 0xffffe56d(%rip)
4098(7): mov 0x20d009(%rip),%rbx
409f(7): lea 0x82aa(%rip),%rsi
40a6(5): mov $0x5,%edx
40ab(2): xor %edi,%edi
40ad(5): call 0xffffe443(%rip)
40b2(3): mov %rbx,%rsi
40b5(3): mov %rax,%rdi
40b8(5): call 0xffffe548(%rip)
40bd(7): mov 0x20cfe4(%rip),%rbx
40c4(7): lea 0x82b5(%rip),%rsi
40cb(5): mov $0x5,%edx
40d0(2): xor %edi,%edi
40d2(5): call 0xffffe41e(%rip)
40d7(3): mov %rbx,%rsi
40da(3): mov %rax,%rdi
40dd(5): call 0xffffe523(%rip)
40e2(7): mov 0x20cfbf(%rip),%rbx
40e9(7): lea 0x82d0(%rip),%rsi
40f0(5): mov $0x5,%edx
40f5(2): xor %edi,%edi
40f7(5): call 0xffffe3f9(%rip)
40fc(3): mov %rbx,%rsi
40ff(3): mov %rax,%rdi
4102(5): call 0xffffe4fe(%rip)
4107(7): mov 0x20cf9a(%rip),%rbx
410e(7): lea 0x83e3(%rip),%rsi
4115(5): mov $0x5,%edx
411a(2): xor %edi,%edi
411c(5): call 0xffffe3d4(%rip)
4121(3): mov %rbx,%rsi
4124(3): mov %rax,%rdi
4127(5): call 0xffffe4d9(%rip)
412c(7): mov 0x20cf75(%rip),%rbx
4133(7): lea 0x83f6(%rip),%rsi
413a(5): mov $0x5,%edx
413f(2): xor %edi,%edi
4141(5): call 0xffffe3af(%rip)
4146(3): mov %rbx,%rsi
4149(3): mov %rax,%rdi
414c(5): call 0xffffe4b4(%rip)
4151(7): mov 0x20cf50(%rip),%rbx
4158(7): lea 0x84d9(%rip),%rsi
415f(5): mov $0x5,%edx
4164(2): xor %edi,%edi
4166(5): call 0xffffe38a(%rip)
416b(3): mov %rbx,%rsi
416e(3): mov %rax,%rdi
4171(5): call 0xffffe48f(%rip)
4176(7): mov 0x20cf2b(%rip),%rbx
417d(7): lea 0x8504(%rip),%rsi
4184(5): mov $0x5,%edx
4189(2): xor %edi,%edi
418b(5): call 0xffffe365(%rip)
4190(3): mov %rbx,%rsi
4193(3): mov %rax,%rdi
4196(5): call 0xffffe46a(%rip)
419b(7): mov 0x20cf06(%rip),%rbx
41a2(7): lea 0x857f(%rip),%rsi
41a9(5): mov $0x5,%edx
41ae(2): xor %edi,%edi
41b0(5): call 0xffffe340(%rip)
41b5(3): mov %rbx,%rsi
41b8(3): mov %rax,%rdi
41bb(5): call 0xffffe445(%rip)
41c0(7): mov 0x20cee1(%rip),%rbx
41c7(7): lea 0x859a(%rip),%rsi
41ce(5): mov $0x5,%edx
41d3(2): xor %edi,%edi
41d5(5): call 0xffffe31b(%rip)
41da(3): mov %rbx,%rsi
41dd(3): mov %rax,%rdi
41e0(5): call 0xffffe420(%rip)
41e5(7): mov 0x20cebc(%rip),%rbx
41ec(7): lea 0x85b5(%rip),%rsi
41f3(5): mov $0x5,%edx
41f8(2): xor %edi,%edi
41fa(5): call 0xffffe2f6(%rip)
41ff(3): mov %rbx,%rsi
4202(3): mov %rax,%rdi
4205(5): call 0xffffe3fb(%rip)
420a(7): mov 0x20ce97(%rip),%rbx
4211(7): lea 0x85e0(%rip),%rsi
4218(5): mov $0x5,%edx
421d(2): xor %edi,%edi
421f(5): call 0xffffe2d1(%rip)
4224(3): mov %rbx,%rsi
4227(3): mov %rax,%rdi
422a(5): call 0xffffe3d6(%rip)
422f(7): mov 0x20ce72(%rip),%rbx
4236(7): lea 0x711b(%rip),%rsi
423d(5): mov $0x5,%edx
4242(2): xor %edi,%edi
4244(5): call 0xffffe2ac(%rip)
4249(3): mov %rbx,%rsi
424c(3): mov %rax,%rdi
424f(5): call 0xffffe3b1(%rip)
4254(7): mov 0x20ce4d(%rip),%rbx
425b(7): lea 0x8666(%rip),%rsi
4262(5): mov $0x5,%edx
4267(2): xor %edi,%edi
4269(5): call 0xffffe287(%rip)
426e(3): mov %rbx,%rsi
4271(3): mov %rax,%rdi
4274(5): call 0xffffe38c(%rip)
4279(7): mov 0x20ce28(%rip),%rbx
4280(7): lea 0x8679(%rip),%rsi
4287(5): mov $0x5,%edx
428c(2): xor %edi,%edi
428e(5): call 0xffffe262(%rip)
4293(3): mov %rbx,%rsi
4296(3): mov %rax,%rdi
4299(5): call 0xffffe367(%rip)
429e(7): mov 0x20ce03(%rip),%rbx
42a5(7): lea 0x8694(%rip),%rsi
42ac(2): xor %edi,%edi
42ae(5): mov $0x5,%edx
42b3(5): call 0xffffe23d(%rip)
42b8(3): mov %rbx,%rsi
42bb(3): mov %rax,%rdi
42be(5): call 0xffffe342(%rip)
42c3(7): mov 0x20cdde(%rip),%rbx
42ca(7): lea 0x86a7(%rip),%rsi
42d1(5): mov $0x5,%edx
42d6(2): xor %edi,%edi
42d8(5): call 0xffffe218(%rip)
42dd(3): mov %rbx,%rsi
42e0(3): mov %rax,%rdi
42e3(5): call 0xffffe31d(%rip)
42e8(7): mov 0x20cdb9(%rip),%rbx
42ef(7): lea 0x86ba(%rip),%rsi
42f6(5): mov $0x5,%edx
42fb(2): xor %edi,%edi
42fd(5): call 0xffffe1f3(%rip)
4302(3): mov %rbx,%rsi
4305(3): mov %rax,%rdi
4308(5): call 0xffffe2f8(%rip)
430d(7): mov 0x20cd94(%rip),%rbx
4314(7): lea 0x86cd(%rip),%rsi
431b(5): mov $0x5,%edx
4320(2): xor %edi,%edi
4322(5): call 0xffffe1ce(%rip)
4327(3): mov %rbx,%rsi
432a(3): mov %rax,%rdi
432d(5): call 0xffffe2d3(%rip)
4332(7): mov 0x20cd6f(%rip),%rbx
4339(7): lea 0x86f8(%rip),%rsi
4340(5): mov $0x5,%edx
4345(2): xor %edi,%edi
4347(5): call 0xffffe1a9(%rip)
434c(3): mov %rbx,%rsi
434f(3): mov %rax,%rdi
4352(5): call 0xffffe2ae(%rip)
4357(7): mov 0x20cd4a(%rip),%rbx
435e(7): lea 0x8723(%rip),%rsi
4365(5): mov $0x5,%edx
436a(2): xor %edi,%edi
436c(5): call 0xffffe184(%rip)
4371(3): mov %rbx,%rsi
4374(3): mov %rax,%rdi
4377(5): call 0xffffe289(%rip)
437c(7): mov 0x20cd25(%rip),%rbx
4383(7): lea 0x873e(%rip),%rsi
438a(5): mov $0x5,%edx
438f(2): xor %edi,%edi
4391(5): call 0xffffe15f(%rip)
4396(3): mov %rbx,%rsi
4399(3): mov %rax,%rdi
439c(5): call 0xffffe264(%rip)
43a1(7): mov 0x20cd00(%rip),%rbx
43a8(7): lea 0x8759(%rip),%rsi
43af(5): mov $0x5,%edx
43b4(2): xor %edi,%edi
43b6(5): call 0xffffe13a(%rip)
43bb(3): mov %rbx,%rsi
43be(3): mov %rax,%rdi
43c1(5): call 0xffffe23f(%rip)
43c6(7): mov 0x20ccdb(%rip),%rbx
43cd(7): lea 0x876c(%rip),%rsi
43d4(5): mov $0x5,%edx
43d9(2): xor %edi,%edi
43db(5): call 0xffffe115(%rip)
43e0(3): mov %rbx,%rsi
43e3(3): mov %rax,%rdi
43e6(5): call 0xffffe21a(%rip)
43eb(7): mov 0x20ccb6(%rip),%rbx
43f2(7): lea 0x878f(%rip),%rsi
43f9(5): mov $0x5,%edx
43fe(2): xor %edi,%edi
4400(5): call 0xffffe0f0(%rip)
4405(3): mov %rbx,%rsi
4408(3): mov %rax,%rdi
440b(5): call 0xffffe1f5(%rip)
4410(7): mov 0x20cc91(%rip),%rbx
4417(7): lea 0x8792(%rip),%rsi
441e(5): mov $0x5,%edx
4423(2): xor %edi,%edi
4425(5): call 0xffffe0cb(%rip)
442a(3): mov %rbx,%rsi
442d(3): mov %rax,%rdi
4430(5): call 0xffffe1d0(%rip)
4435(7): mov 0x20cc6c(%rip),%rbx
443c(7): lea 0x87e5(%rip),%rsi
4443(5): mov $0x5,%edx
4448(2): xor %edi,%edi
444a(5): call 0xffffe0a6(%rip)
444f(3): mov %rbx,%rsi
4452(3): mov %rax,%rdi
4455(5): call 0xffffe1ab(%rip)
445a(7): mov 0x20cc47(%rip),%rbx
4461(7): lea 0x87f8(%rip),%rsi
4468(5): mov $0x5,%edx
446d(2): xor %edi,%edi
446f(5): call 0xffffe081(%rip)
4474(3): mov %rbx,%rsi
4477(3): mov %rax,%rdi
447a(5): call 0xffffe186(%rip)
447f(7): mov 0x20cc22(%rip),%rbx
4486(7): lea 0x882b(%rip),%rsi
448d(5): mov $0x5,%edx
4492(2): xor %edi,%edi
4494(5): call 0xffffe05c(%rip)
4499(3): mov %rbx,%rsi
449c(3): mov %rax,%rdi
449f(5): call 0xffffe161(%rip)
44a4(7): mov 0x20cbfd(%rip),%rbx
44ab(7): lea 0x889e(%rip),%rsi
44b2(5): mov $0x5,%edx
44b7(2): xor %edi,%edi
44b9(5): call 0xffffe037(%rip)
44be(3): mov %rbx,%rsi
44c1(3): mov %rax,%rdi
44c4(5): call 0xffffe13c(%rip)
44c9(7): mov 0x20cbd8(%rip),%rbx
44d0(7): lea 0x88c1(%rip),%rsi
44d7(5): mov $0x5,%edx
44dc(2): xor %edi,%edi
44de(5): call 0xffffe012(%rip)
44e3(3): mov %rbx,%rsi
44e6(3): mov %rax,%rdi
44e9(5): call 0xffffe117(%rip)
44ee(7): mov 0x20cbb3(%rip),%rbx
44f5(7): lea 0x88c4(%rip),%rsi
44fc(5): mov $0x5,%edx
4501(2): xor %edi,%edi
4503(5): call 0xffffdfed(%rip)
4508(3): mov %rbx,%rsi
450b(3): mov %rax,%rdi
450e(5): call 0xffffe0f2(%rip)
4513(7): mov 0x20cb8e(%rip),%rbx
451a(7): lea 0x88c7(%rip),%rsi
4521(5): mov $0x5,%edx
4526(2): xor %edi,%edi
4528(5): call 0xffffdfc8(%rip)
452d(3): mov %rbx,%rsi
4530(3): mov %rax,%rdi
4533(5): call 0xffffe0cd(%rip)
4538(7): mov 0x20cb69(%rip),%rbx
453f(7): lea 0x8902(%rip),%rsi
4546(5): mov $0x5,%edx
454b(2): xor %edi,%edi
454d(5): call 0xffffdfa3(%rip)
4552(3): mov %rbx,%rsi
4555(3): mov %rax,%rdi
4558(5): call 0xffffe0a8(%rip)
455d(7): mov 0x20cb44(%rip),%rbx
4564(7): lea 0x8905(%rip),%rsi
456b(5): mov $0x5,%edx
4570(2): xor %edi,%edi
4572(5): call 0xffffdf7e(%rip)
4577(3): mov %rbx,%rsi
457a(3): mov %rax,%rdi
457d(5): call 0xffffe083(%rip)
4582(7): mov 0x20cb1f(%rip),%rbx
4589(7): lea 0x8928(%rip),%rsi
4590(5): mov $0x5,%edx
4595(2): xor %edi,%edi
4597(5): call 0xffffdf59(%rip)
459c(3): mov %rbx,%rsi
459f(3): mov %rax,%rdi
45a2(5): call 0xffffe05e(%rip)
45a7(7): mov 0x20cafa(%rip),%rbx
45ae(7): lea 0x894b(%rip),%rsi
45b5(5): mov $0x5,%edx
45ba(2): xor %edi,%edi
45bc(5): call 0xffffdf34(%rip)
45c1(3): mov %rbx,%rsi
45c4(3): mov %rax,%rdi
45c7(5): call 0xffffe039(%rip)
45cc(7): mov 0x20cad5(%rip),%rbx
45d3(7): lea 0x896e(%rip),%rsi
45da(5): mov $0x5,%edx
45df(2): xor %edi,%edi
45e1(5): call 0xffffdf0f(%rip)
45e6(3): mov %rbx,%rsi
45e9(3): mov %rax,%rdi
45ec(5): call 0xffffe014(%rip)
45f1(7): lea 0x8978(%rip),%rsi
45f8(2): xor %edi,%edi
45fa(5): mov $0x5,%edx
45ff(5): call 0xffffdef1(%rip)
4604(7): lea 0x6d60(%rip),%rdx
460b(3): mov %rax,%rsi
460e(5): mov $0x1,%edi
4613(2): xor %eax,%eax
4615(5): call 0xffffe0bb(%rip)
461a(7): mov 0x20ca87(%rip),%rbx
4621(7): lea 0x89b0(%rip),%rsi
4628(5): mov $0x5,%edx
462d(2): xor %edi,%edi
462f(5): call 0xffffdec1(%rip)
4634(3): mov %rbx,%rsi
4637(3): mov %rax,%rdi
463a(5): call 0xffffdfc6(%rip)
463f(7): mov 0x20ca62(%rip),%rbx
4646(7): lea 0x8a23(%rip),%rsi
464d(5): mov $0x5,%edx
4652(2): xor %edi,%edi
4654(5): call 0xffffde9c(%rip)
4659(3): mov %rbx,%rsi
465c(3): mov %rax,%rdi
465f(5): call 0xffffdfa1(%rip)
4664(7): mov 0x20ca3d(%rip),%rbx
466b(7): lea 0x8a26(%rip),%rsi
4672(5): mov $0x5,%edx
4677(2): xor %edi,%edi
4679(5): call 0xffffde77(%rip)
467e(3): mov %rbx,%rsi
4681(3): mov %rax,%rdi
4684(5): call 0xffffdf7c(%rip)
4689(7): mov 0x20ca18(%rip),%rbx
4690(7): lea 0x8a51(%rip),%rsi
4697(5): mov $0x5,%edx
469c(2): xor %edi,%edi
469e(5): call 0xffffde52(%rip)
46a3(3): mov %rbx,%rsi
46a6(3): mov %rax,%rdi
46a9(5): call 0xffffdf57(%rip)
46ae(7): mov 0x20c9f3(%rip),%rbx
46b5(7): lea 0x6cca(%rip),%rsi
46bc(5): mov $0x5,%edx
46c1(2): xor %edi,%edi
46c3(5): call 0xffffde2d(%rip)
46c8(3): mov %rbx,%rsi
46cb(3): mov %rax,%rdi
46ce(5): call 0xffffdf32(%rip)
46d3(7): mov 0x20c9ce(%rip),%rbx
46da(7): lea 0x8a4f(%rip),%rsi
46e1(5): mov $0x5,%edx
46e6(2): xor %edi,%edi
46e8(5): call 0xffffde08(%rip)
46ed(3): mov %rbx,%rsi
46f0(3): mov %rax,%rdi
46f3(5): call 0xffffdf0d(%rip)
46f8(7): mov 0x20c9a9(%rip),%rbx
46ff(7): lea 0x8a52(%rip),%rsi
4706(5): mov $0x5,%edx
470b(2): xor %edi,%edi
470d(5): call 0xffffdde3(%rip)
4712(3): mov %rbx,%rsi
4715(3): mov %rax,%rdi
4718(5): call 0xffffdee8(%rip)
471d(7): mov 0x20c984(%rip),%rbx
4724(7): lea 0x8a75(%rip),%rsi
472b(5): mov $0x5,%edx
4730(2): xor %edi,%edi
4732(5): call 0xffffddbe(%rip)
4737(3): mov %rbx,%rsi
473a(3): mov %rax,%rdi
473d(5): call 0xffffdec3(%rip)
4742(7): lea 0x6c55(%rip),%rsi
4749(2): xor %edi,%edi
474b(5): mov $0x5,%edx
4750(5): call 0xffffdda0(%rip)
4755(7): lea 0x6c5f(%rip),%rdx
475c(3): mov %rax,%rsi
475f(5): mov $0x1,%edi
4764(2): xor %eax,%eax
4766(5): call 0xffffdf6a(%rip)
476b(7): lea 0x8ade(%rip),%rsi
4772(2): xor %edi,%edi
4774(5): mov $0x5,%edx
4779(5): call 0xffffdd77(%rip)
477e(7): lea 0x6c4b(%rip),%rdx
4785(3): mov %rax,%rsi
4788(5): mov $0x1,%edi
478d(2): xor %eax,%eax
478f(5): call 0xffffdf41(%rip)
4794(7): mov 0x20c90d(%rip),%rbx
479b(7): lea 0x8afe(%rip),%rsi
47a2(5): mov $0x5,%edx
47a7(2): xor %edi,%edi
47a9(5): call 0xffffdd47(%rip)
47ae(3): mov %rbx,%rsi
47b1(3): mov %rax,%rdi
47b4(5): call 0xffffde4c(%rip)
47b9(7): mov 0x20c8e8(%rip),%rbx
47c0(7): lea 0x8b01(%rip),%rsi
47c7(5): mov $0x5,%edx
47cc(2): xor %edi,%edi
47ce(5): call 0xffffdd22(%rip)
47d3(3): mov %rbx,%rsi
47d6(3): mov %rax,%rdi
47d9(5): call 0xffffde27(%rip)
47de(7): mov 0x20c8c3(%rip),%rbx
47e5(7): lea 0x8b74(%rip),%rsi
47ec(5): mov $0x5,%edx
47f1(2): xor %edi,%edi
47f3(5): call 0xffffdcfd(%rip)
47f8(3): mov %rbx,%rsi
47fb(3): mov %rax,%rdi
47fe(5): call 0xffffde02(%rip)
4803(7): mov 0x20c89e(%rip),%rbx
480a(7): lea 0x8b7f(%rip),%rsi
4811(5): mov $0x5,%edx
4816(2): xor %edi,%edi
4818(5): call 0xffffdcd8(%rip)
481d(3): mov %rbx,%rsi
4820(3): mov %rax,%rdi
4823(5): call 0xffffdddd(%rip)
4828(7): lea 0x8bc9(%rip),%rsi
482f(2): xor %edi,%edi
4831(5): mov $0x5,%edx
4836(5): call 0xffffdcba(%rip)
483b(7): lea 0x8bf6(%rip),%rcx
4842(7): lea 0x6ba3(%rip),%rdx
4849(3): mov %rax,%rsi
484c(5): mov $0x1,%edi
4851(2): xor %eax,%eax
4853(5): call 0xffffde7d(%rip)
4858(7): mov 0x20c849(%rip),%rbx
485f(7): lea 0x8c02(%rip),%rsi
4866(5): mov $0x5,%edx
486b(2): xor %edi,%edi
486d(5): call 0xffffdc83(%rip)
4872(3): mov %rbx,%rsi
4875(3): mov %rax,%rdi
4878(5): call 0xffffdd88(%rip)
487d(7): lea 0x8cb4(%rip),%rsi
4884(2): xor %edi,%edi
4886(5): mov $0x5,%edx
488b(5): call 0xffffdc65(%rip)
4890(7): lea 0x8d79(%rip),%rdx
4897(3): mov %rax,%rsi
489a(5): mov $0x1,%edi
489f(2): xor %eax,%eax
48a1(5): call 0xffffde2f(%rip)
48a6(7): lea 0x8d83(%rip),%rsi
48ad(2): xor %edi,%edi
48af(5): mov $0x5,%edx
48b4(5): call 0xffffdc3c(%rip)
48b9(7): lea 0x8eb0(%rip),%rcx
48c0(7): lea 0x8e69(%rip),%r8
48c7(7): lea 0x8ee2(%rip),%rdx
48ce(3): mov %rax,%rsi
48d1(5): mov $0x1,%edi
48d6(2): xor %eax,%eax
48d8(5): call 0xffffddf8(%rip)
48dd(7): mov 0x20c7c4(%rip),%rbx
48e4(7): lea 0x8f05(%rip),%rsi
48eb(5): mov $0x5,%edx
48f0(2): xor %edi,%edi
48f2(5): call 0xffffdbfe(%rip)
48f7(3): mov %rbx,%rsi
48fa(3): mov %rax,%rdi
48fd(7): lea 0x6a39(%rip),%rbx
4904(5): call 0xffffdcfc(%rip)
4909(7): lea 0x6aea(%rip),%rax
4910(7): lea 0x6b24(%rip),%rcx
4917(9): mov $0x0,0x60(%rsp)
4920(9): mov $0x0,0x68(%rsp)
4929(3): mov %rsp,%rdx
492c(4): mov %rax,(%rsp)
4930(7): lea 0x6ac5(%rip),%rax
4937(5): mov %rcx,0x30(%rsp)
493c(7): lea 0x6b02(%rip),%rcx
4943(5): mov %rax,0x8(%rsp)
4948(7): lea 0x6b25(%rip),%rax
494f(5): mov %rcx,0x40(%rsp)
4954(7): lea 0x6af4(%rip),%rcx
495b(5): mov %rax,0x10(%rsp)
4960(7): lea 0x6aa5(%rip),%rax
4967(5): mov %rcx,0x50(%rsp)
496c(5): mov %rax,0x18(%rsp)
4971(7): lea 0x6aaa(%rip),%rax
4978(5): mov %rax,0x20(%rsp)
497d(7): lea 0x6aa8(%rip),%rax
4984(5): mov %rax,0x28(%rsp)
4989(5): mov %rax,0x38(%rsp)
498e(5): mov %rax,0x48(%rsp)
4993(5): mov %rax,0x58(%rsp)
4998(8): nop 0x0(%rax,%rax,1)
49a0(4): add $0x10,%rdx
49a4(3): mov (%rdx),%rdi
49a7(3): test %rdi,%rdi
49aa(2): jz 0x15(%rip)
49ac(5): mov $0x5,%ecx
49b1(3): mov %rbx,%rsi
49b4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
49b6(3): setnbe %al
49b9(2): sbb $0x0,%al
49bb(2): test %al,%al
49bd(2): jnz 0xffffffe3(%rip)
49bf(4): mov 0x8(%rdx),%r12
49c3(2): xor %edi,%edi
49c5(5): mov $0x5,%edx
49ca(7): lea 0x6a88(%rip),%rsi
49d1(3): test %r12,%r12
49d4(6): jz 0x10e(%rip)
49da(5): call 0xffffdb16(%rip)
49df(7): lea 0x8f22(%rip),%rcx
49e6(7): lea 0x6a83(%rip),%rdx
49ed(3): mov %rax,%rsi
49f0(5): mov $0x1,%edi
49f5(2): xor %eax,%eax
49f7(5): call 0xffffdcd9(%rip)
49fc(2): xor %esi,%esi
49fe(5): mov $0x5,%edi
4a03(5): call 0xffffdcad(%rip)
4a08(3): test %rax,%rax
4a0b(2): jz 0x1e(%rip)
4a0d(7): lea 0x6a6a(%rip),%rsi
4a14(5): mov $0x3,%edx
4a19(3): mov %rax,%rdi
4a1c(5): call 0xffffda44(%rip)
4a21(2): test %eax,%eax
4a23(6): jnz 0x95(%rip)
4a29(7): lea 0x6a52(%rip),%rsi
4a30(2): xor %edi,%edi
4a32(5): mov $0x5,%edx
4a37(5): call 0xffffdab9(%rip)
4a3c(7): lea 0x68fa(%rip),%rcx
4a43(7): lea 0x8ebe(%rip),%rdx
4a4a(3): mov %rax,%rsi
4a4d(5): mov $0x1,%edi
4a52(2): xor %eax,%eax
4a54(5): call 0xffffdc7c(%rip)
4a59(3): cmp %rbx,%r12
4a5c(7): lea 0x69b3(%rip),%rcx
4a63(7): lea 0x95d7(%rip),%rbx
4a6a(4): cmove %rcx,%rbx
4a6e(7): lea 0x8f03(%rip),%rsi
4a75(2): xor %edi,%edi
4a77(5): mov $0x5,%edx
4a7c(5): call 0xffffda74(%rip)
4a81(3): mov %rbx,%rcx
4a84(3): mov %rax,%rsi
4a87(3): mov %r12,%rdx
4a8a(5): mov $0x1,%edi
4a8f(2): xor %eax,%eax
4a91(5): call 0xffffdc3f(%rip)
4a96(5): jmp 0xfffff1f0(%rip)
4a9b(7): lea 0x6c78(%rip),%rsi
4aa2(2): xor %edi,%edi
4aa4(5): call 0xffffda4c(%rip)
4aa9(3): mov %rax,%rbx
4aac(5): jmp 0xfffff4e9(%rip)
4ab1(7): lea 0x6885(%rip),%r12
4ab8(7): mov 0x20c5e9(%rip),%r13
4abf(7): lea 0x8e6a(%rip),%rsi
4ac6(2): xor %edi,%edi
4ac8(5): mov $0x5,%edx
4acd(5): call 0xffffda23(%rip)
4ad2(3): mov %r13,%rsi
4ad5(3): mov %rax,%rdi
4ad8(5): call 0xffffdb28(%rip)
4add(5): jmp 0xffffff4c(%rip)
4ae2(5): call 0xffffda0e(%rip)
4ae7(7): lea 0x8e1a(%rip),%rcx
4aee(7): lea 0x697b(%rip),%rdx
4af5(3): mov %rax,%rsi
4af8(5): mov $0x1,%edi
4afd(2): xor %eax,%eax
4aff(5): call 0xffffdbd1(%rip)
4b04(2): xor %esi,%esi
4b06(5): mov $0x5,%edi
4b0b(5): call 0xffffdba5(%rip)
4b10(3): test %rax,%rax
4b13(2): jz 0x1a(%rip)
4b15(7): lea 0x6962(%rip),%rsi
4b1c(5): mov $0x3,%edx
4b21(3): mov %rax,%rdi
4b24(5): call 0xffffd93c(%rip)
4b29(2): test %eax,%eax
4b2b(2): jnz 0xffffff86(%rip)
4b2d(7): lea 0x694e(%rip),%rsi
4b34(5): mov $0x5,%edx
4b39(2): xor %edi,%edi
4b3b(7): lea 0x67fb(%rip),%r12
4b42(7): lea 0x68cd(%rip),%rbx
4b49(5): call 0xffffd9a7(%rip)
4b4e(7): lea 0x67e8(%rip),%rcx
4b55(7): lea 0x8dac(%rip),%rdx
4b5c(3): mov %rax,%rsi
4b5f(5): mov $0x1,%edi
4b64(2): xor %eax,%eax
4b66(5): call 0xffffdb6a(%rip)
4b6b(5): jmp 0xffffff03(%rip)

"usage" :
3c30(2): push %r13
3c32(2): push %r12
3c34(5): mov $0x5,%edx
3c39(1): push %rbp
3c3a(1): push %rbx
3c3b(2): mov %edi,%ebp
3c3d(7): sub $0x88,%rsp
3c44(7): mov 0x20d5cd(%rip),%rbx
3c4b(9): mov $0x28,%rax
3c54(5): mov %rax,0x78(%rsp)
3c59(2): xor %eax,%eax
3c5b(2): test %edi,%edi
3c5d(2): jz 0x30(%rip)
3c5f(7): lea 0x7d2a(%rip),%rsi
3c66(2): xor %edi,%edi
3c68(5): call 0xffffe888(%rip)
3c6d(7): mov 0x20d48c(%rip),%rdi
3c74(3): mov %rax,%rdx
3c77(3): mov %rbx,%rcx
3c7a(5): mov $0x1,%esi
3c7f(2): xor %eax,%eax
3c81(5): call 0xffffeaff(%rip)
3c86(2): mov %ebp,%edi
3c88(5): call 0xffffead8(%rip)
3c8d(7): lea 0x7d24(%rip),%rsi
3c94(2): xor %edi,%edi
3c96(5): call 0xffffe85a(%rip)
3c9b(3): mov %rbx,%r8
3c9e(3): mov %rbx,%rcx
3ca1(3): mov %rbx,%rdx
3ca4(3): mov %rax,%rsi
3ca7(5): mov $0x1,%edi
3cac(2): xor %eax,%eax
3cae(5): call 0xffffea22(%rip)
3cb3(7): mov 0x20d3ee(%rip),%rbx
3cba(7): lea 0x7d8f(%rip),%rsi
3cc1(5): mov $0x5,%edx
3cc6(2): xor %edi,%edi
3cc8(5): call 0xffffe828(%rip)
3ccd(3): mov %rbx,%rsi
3cd0(3): mov %rax,%rdi
3cd3(5): call 0xffffe92d(%rip)
3cd8(7): mov 0x20d3c9(%rip),%rbx
3cdf(7): lea 0x7d9a(%rip),%rsi
3ce6(5): mov $0x5,%edx
3ceb(2): xor %edi,%edi
3ced(5): call 0xffffe803(%rip)
3cf2(3): mov %rbx,%rsi
3cf5(3): mov %rax,%rdi
3cf8(5): call 0xffffe908(%rip)
3cfd(7): mov 0x20d3a4(%rip),%rbx
3d04(7): lea 0x7dc5(%rip),%rsi
3d0b(5): mov $0x5,%edx
3d10(2): xor %edi,%edi
3d12(5): call 0xffffe7de(%rip)
3d17(3): mov %rbx,%rsi
3d1a(3): mov %rax,%rdi
3d1d(5): call 0xffffe8e3(%rip)
3d22(7): mov 0x20d37f(%rip),%rbx
3d29(7): lea 0x7e78(%rip),%rsi
3d30(5): mov $0x5,%edx
3d35(2): xor %edi,%edi
3d37(5): call 0xffffe7b9(%rip)
3d3c(3): mov %rbx,%rsi
3d3f(3): mov %rax,%rdi
3d42(5): call 0xffffe8be(%rip)
3d47(7): mov 0x20d35a(%rip),%rbx
3d4e(7): lea 0x7e83(%rip),%rsi
3d55(5): mov $0x5,%edx
3d5a(2): xor %edi,%edi
3d5c(5): call 0xffffe794(%rip)
3d61(3): mov %rbx,%rsi
3d64(3): mov %rax,%rdi
3d67(5): call 0xffffe899(%rip)
3d6c(7): mov 0x20d335(%rip),%rbx
3d73(7): lea 0x7e96(%rip),%rsi
3d7a(5): mov $0x5,%edx
3d7f(2): xor %edi,%edi
3d81(5): call 0xffffe76f(%rip)
3d86(3): mov %rbx,%rsi
3d89(3): mov %rax,%rdi
3d8c(5): call 0xffffe874(%rip)
3d91(7): mov 0x20d310(%rip),%rbx
3d98(7): lea 0x75a3(%rip),%rsi
3d9f(5): mov $0x5,%edx
3da4(2): xor %edi,%edi
3da6(5): call 0xffffe74a(%rip)
3dab(3): mov %rbx,%rsi
3dae(3): mov %rax,%rdi
3db1(5): call 0xffffe84f(%rip)
3db6(7): mov 0x20d2eb(%rip),%rbx
3dbd(7): lea 0x7edc(%rip),%rsi
3dc4(5): mov $0x5,%edx
3dc9(2): xor %edi,%edi
3dcb(5): call 0xffffe725(%rip)
3dd0(3): mov %rbx,%rsi
3dd3(3): mov %rax,%rdi
3dd6(5): call 0xffffe82a(%rip)
3ddb(7): mov 0x20d2c6(%rip),%rbx
3de2(7): lea 0x7eef(%rip),%rsi
3de9(5): mov $0x5,%edx
3dee(2): xor %edi,%edi
3df0(5): call 0xffffe700(%rip)
3df5(3): mov %rbx,%rsi
3df8(3): mov %rax,%rdi
3dfb(5): call 0xffffe805(%rip)
3e00(7): mov 0x20d2a1(%rip),%rbx
3e07(7): lea 0x7f3a(%rip),%rsi
3e0e(5): mov $0x5,%edx
3e13(2): xor %edi,%edi
3e15(5): call 0xffffe6db(%rip)
3e1a(3): mov %rbx,%rsi
3e1d(3): mov %rax,%rdi
3e20(5): call 0xffffe7e0(%rip)
3e25(7): mov 0x20d27c(%rip),%rbx
3e2c(7): lea 0x7f4d(%rip),%rsi
3e33(5): mov $0x5,%edx
3e38(2): xor %edi,%edi
3e3a(5): call 0xffffe6b6(%rip)
3e3f(3): mov %rbx,%rsi
3e42(3): mov %rax,%rdi
3e45(5): call 0xffffe7bb(%rip)
3e4a(7): mov 0x20d257(%rip),%rbx
3e51(7): lea 0x7fd0(%rip),%rsi
3e58(5): mov $0x5,%edx
3e5d(2): xor %edi,%edi
3e5f(5): call 0xffffe691(%rip)
3e64(3): mov %rbx,%rsi
3e67(3): mov %rax,%rdi
3e6a(5): call 0xffffe796(%rip)
3e6f(7): mov 0x20d232(%rip),%rbx
3e76(7): lea 0x7feb(%rip),%rsi
3e7d(5): mov $0x5,%edx
3e82(2): xor %edi,%edi
3e84(5): call 0xffffe66c(%rip)
3e89(3): mov %rbx,%rsi
3e8c(3): mov %rax,%rdi
3e8f(5): call 0xffffe771(%rip)
3e94(7): mov 0x20d20d(%rip),%rbx
3e9b(7): lea 0x7ff6(%rip),%rsi
3ea2(5): mov $0x5,%edx
3ea7(2): xor %edi,%edi
3ea9(5): call 0xffffe647(%rip)
3eae(3): mov %rbx,%rsi
3eb1(3): mov %rax,%rdi
3eb4(5): call 0xffffe74c(%rip)
3eb9(7): mov 0x20d1e8(%rip),%rbx
3ec0(7): lea 0x8009(%rip),%rsi
3ec7(5): mov $0x5,%edx
3ecc(2): xor %edi,%edi
3ece(5): call 0xffffe622(%rip)
3ed3(3): mov %rbx,%rsi
3ed6(3): mov %rax,%rdi
3ed9(5): call 0xffffe727(%rip)
3ede(7): mov 0x20d1c3(%rip),%rbx
3ee5(7): lea 0x808c(%rip),%rsi
3eec(5): mov $0x5,%edx
3ef1(2): xor %edi,%edi
3ef3(5): call 0xffffe5fd(%rip)
3ef8(3): mov %rbx,%rsi
3efb(3): mov %rax,%rdi
3efe(5): call 0xffffe702(%rip)
3f03(7): mov 0x20d19e(%rip),%rbx
3f0a(7): lea 0x80a7(%rip),%rsi
3f11(5): mov $0x5,%edx
3f16(2): xor %edi,%edi
3f18(5): call 0xffffe5d8(%rip)
3f1d(3): mov %rbx,%rsi
3f20(3): mov %rax,%rdi
3f23(5): call 0xffffe6dd(%rip)
3f28(7): mov 0x20d179(%rip),%rbx
3f2f(7): lea 0x80ba(%rip),%rsi
3f36(5): mov $0x5,%edx
3f3b(2): xor %edi,%edi
3f3d(5): call 0xffffe5b3(%rip)
3f42(3): mov %rbx,%rsi
3f45(3): mov %rax,%rdi
3f48(5): call 0xffffe6b8(%rip)
3f4d(7): mov 0x20d154(%rip),%rbx
3f54(7): lea 0x80e5(%rip),%rsi
3f5b(5): mov $0x5,%edx
3f60(2): xor %edi,%edi
3f62(5): call 0xffffe58e(%rip)
3f67(3): mov %rbx,%rsi
3f6a(3): mov %rax,%rdi
3f6d(5): call 0xffffe693(%rip)
3f72(7): cmp $0x1,0x20d097(%rip)
3f79(5): mov $0x5,%edx
3f7e(6): jz 0xb1d(%rip)
3f84(7): lea 0x7850(%rip),%rsi
3f8b(2): xor %edi,%edi
3f8d(5): call 0xffffe563(%rip)
3f92(3): mov %rax,%rbx
3f95(7): lea 0x810c(%rip),%rsi
3f9c(2): xor %edi,%edi
3f9e(5): mov $0x5,%edx
3fa3(5): call 0xffffe54d(%rip)
3fa8(3): mov %rbx,%rdx
3fab(3): mov %rax,%rsi
3fae(5): mov $0x1,%edi
3fb3(2): xor %eax,%eax
3fb5(5): call 0xffffe71b(%rip)
3fba(7): mov 0x20d0e7(%rip),%rbx
3fc1(7): lea 0x8138(%rip),%rsi
3fc8(5): mov $0x5,%edx
3fcd(2): xor %edi,%edi
3fcf(5): call 0xffffe521(%rip)
3fd4(3): mov %rbx,%rsi
3fd7(3): mov %rax,%rdi
3fda(5): call 0xffffe626(%rip)
3fdf(7): mov 0x20d0c2(%rip),%rbx
3fe6(7): lea 0x8143(%rip),%rsi
3fed(5): mov $0x5,%edx
3ff2(2): xor %edi,%edi
3ff4(5): call 0xffffe4fc(%rip)
3ff9(3): mov %rbx,%rsi
3ffc(3): mov %rax,%rdi
3fff(5): call 0xffffe601(%rip)
4004(7): mov 0x20d09d(%rip),%rbx
400b(7): lea 0x8146(%rip),%rsi
4012(5): mov $0x5,%edx
4017(2): xor %edi,%edi
4019(5): call 0xffffe4d7(%rip)
401e(3): mov %rbx,%rsi
4021(3): mov %rax,%rdi
4024(5): call 0xffffe5dc(%rip)
4029(7): mov 0x20d078(%rip),%rbx
4030(7): lea 0x81a1(%rip),%rsi
4037(5): mov $0x5,%edx
403c(2): xor %edi,%edi
403e(5): call 0xffffe4b2(%rip)
4043(3): mov %rbx,%rsi
4046(3): mov %rax,%rdi
4049(5): call 0xffffe5b7(%rip)
404e(7): mov 0x20d053(%rip),%rbx
4055(7): lea 0x820c(%rip),%rsi
405c(5): mov $0x5,%edx
4061(2): xor %edi,%edi
4063(5): call 0xffffe48d(%rip)
4068(3): mov %rbx,%rsi
406b(3): mov %rax,%rdi
406e(5): call 0xffffe592(%rip)
4073(7): mov 0x20d02e(%rip),%rbx
407a(7): lea 0x825f(%rip),%rsi
4081(5): mov $0x5,%edx
4086(2): xor %edi,%edi
4088(5): call 0xffffe468(%rip)
408d(3): mov %rbx,%rsi
4090(3): mov %rax,%rdi
4093(5): call 0xffffe56d(%rip)
4098(7): mov 0x20d009(%rip),%rbx
409f(7): lea 0x82aa(%rip),%rsi
40a6(5): mov $0x5,%edx
40ab(2): xor %edi,%edi
40ad(5): call 0xffffe443(%rip)
40b2(3): mov %rbx,%rsi
40b5(3): mov %rax,%rdi
40b8(5): call 0xffffe548(%rip)
40bd(7): mov 0x20cfe4(%rip),%rbx
40c4(7): lea 0x82b5(%rip),%rsi
40cb(5): mov $0x5,%edx
40d0(2): xor %edi,%edi
40d2(5): call 0xffffe41e(%rip)
40d7(3): mov %rbx,%rsi
40da(3): mov %rax,%rdi
40dd(5): call 0xffffe523(%rip)
40e2(7): mov 0x20cfbf(%rip),%rbx
40e9(7): lea 0x82d0(%rip),%rsi
40f0(5): mov $0x5,%edx
40f5(2): xor %edi,%edi
40f7(5): call 0xffffe3f9(%rip)
40fc(3): mov %rbx,%rsi
40ff(3): mov %rax,%rdi
4102(5): call 0xffffe4fe(%rip)
4107(7): mov 0x20cf9a(%rip),%rbx
410e(7): lea 0x83e3(%rip),%rsi
4115(5): mov $0x5,%edx
411a(2): xor %edi,%edi
411c(5): call 0xffffe3d4(%rip)
4121(3): mov %rbx,%rsi
4124(3): mov %rax,%rdi
4127(5): call 0xffffe4d9(%rip)
412c(7): mov 0x20cf75(%rip),%rbx
4133(7): lea 0x83f6(%rip),%rsi
413a(5): mov $0x5,%edx
413f(2): xor %edi,%edi
4141(5): call 0xffffe3af(%rip)
4146(3): mov %rbx,%rsi
4149(3): mov %rax,%rdi
414c(5): call 0xffffe4b4(%rip)
4151(7): mov 0x20cf50(%rip),%rbx
4158(7): lea 0x84d9(%rip),%rsi
415f(5): mov $0x5,%edx
4164(2): xor %edi,%edi
4166(5): call 0xffffe38a(%rip)
416b(3): mov %rbx,%rsi
416e(3): mov %rax,%rdi
4171(5): call 0xffffe48f(%rip)
4176(7): mov 0x20cf2b(%rip),%rbx
417d(7): lea 0x8504(%rip),%rsi
4184(5): mov $0x5,%edx
4189(2): xor %edi,%edi
418b(5): call 0xffffe365(%rip)
4190(3): mov %rbx,%rsi
4193(3): mov %rax,%rdi
4196(5): call 0xffffe46a(%rip)
419b(7): mov 0x20cf06(%rip),%rbx
41a2(7): lea 0x857f(%rip),%rsi
41a9(5): mov $0x5,%edx
41ae(2): xor %edi,%edi
41b0(5): call 0xffffe340(%rip)
41b5(3): mov %rbx,%rsi
41b8(3): mov %rax,%rdi
41bb(5): call 0xffffe445(%rip)
41c0(7): mov 0x20cee1(%rip),%rbx
41c7(7): lea 0x859a(%rip),%rsi
41ce(5): mov $0x5,%edx
41d3(2): xor %edi,%edi
41d5(5): call 0xffffe31b(%rip)
41da(3): mov %rbx,%rsi
41dd(3): mov %rax,%rdi
41e0(5): call 0xffffe420(%rip)
41e5(7): mov 0x20cebc(%rip),%rbx
41ec(7): lea 0x85b5(%rip),%rsi
41f3(5): mov $0x5,%edx
41f8(2): xor %edi,%edi
41fa(5): call 0xffffe2f6(%rip)
41ff(3): mov %rbx,%rsi
4202(3): mov %rax,%rdi
4205(5): call 0xffffe3fb(%rip)
420a(7): mov 0x20ce97(%rip),%rbx
4211(7): lea 0x85e0(%rip),%rsi
4218(5): mov $0x5,%edx
421d(2): xor %edi,%edi
421f(5): call 0xffffe2d1(%rip)
4224(3): mov %rbx,%rsi
4227(3): mov %rax,%rdi
422a(5): call 0xffffe3d6(%rip)
422f(7): mov 0x20ce72(%rip),%rbx
4236(7): lea 0x711b(%rip),%rsi
423d(5): mov $0x5,%edx
4242(2): xor %edi,%edi
4244(5): call 0xffffe2ac(%rip)
4249(3): mov %rbx,%rsi
424c(3): mov %rax,%rdi
424f(5): call 0xffffe3b1(%rip)
4254(7): mov 0x20ce4d(%rip),%rbx
425b(7): lea 0x8666(%rip),%rsi
4262(5): mov $0x5,%edx
4267(2): xor %edi,%edi
4269(5): call 0xffffe287(%rip)
426e(3): mov %rbx,%rsi
4271(3): mov %rax,%rdi
4274(5): call 0xffffe38c(%rip)
4279(7): mov 0x20ce28(%rip),%rbx
4280(7): lea 0x8679(%rip),%rsi
4287(5): mov $0x5,%edx
428c(2): xor %edi,%edi
428e(5): call 0xffffe262(%rip)
4293(3): mov %rbx,%rsi
4296(3): mov %rax,%rdi
4299(5): call 0xffffe367(%rip)
429e(7): mov 0x20ce03(%rip),%rbx
42a5(7): lea 0x8694(%rip),%rsi
42ac(2): xor %edi,%edi
42ae(5): mov $0x5,%edx
42b3(5): call 0xffffe23d(%rip)
42b8(3): mov %rbx,%rsi
42bb(3): mov %rax,%rdi
42be(5): call 0xffffe342(%rip)
42c3(7): mov 0x20cdde(%rip),%rbx
42ca(7): lea 0x86a7(%rip),%rsi
42d1(5): mov $0x5,%edx
42d6(2): xor %edi,%edi
42d8(5): call 0xffffe218(%rip)
42dd(3): mov %rbx,%rsi
42e0(3): mov %rax,%rdi
42e3(5): call 0xffffe31d(%rip)
42e8(7): mov 0x20cdb9(%rip),%rbx
42ef(7): lea 0x86ba(%rip),%rsi
42f6(5): mov $0x5,%edx
42fb(2): xor %edi,%edi
42fd(5): call 0xffffe1f3(%rip)
4302(3): mov %rbx,%rsi
4305(3): mov %rax,%rdi
4308(5): call 0xffffe2f8(%rip)
430d(7): mov 0x20cd94(%rip),%rbx
4314(7): lea 0x86cd(%rip),%rsi
431b(5): mov $0x5,%edx
4320(2): xor %edi,%edi
4322(5): call 0xffffe1ce(%rip)
4327(3): mov %rbx,%rsi
432a(3): mov %rax,%rdi
432d(5): call 0xffffe2d3(%rip)
4332(7): mov 0x20cd6f(%rip),%rbx
4339(7): lea 0x86f8(%rip),%rsi
4340(5): mov $0x5,%edx
4345(2): xor %edi,%edi
4347(5): call 0xffffe1a9(%rip)
434c(3): mov %rbx,%rsi
434f(3): mov %rax,%rdi
4352(5): call 0xffffe2ae(%rip)
4357(7): mov 0x20cd4a(%rip),%rbx
435e(7): lea 0x8723(%rip),%rsi
4365(5): mov $0x5,%edx
436a(2): xor %edi,%edi
436c(5): call 0xffffe184(%rip)
4371(3): mov %rbx,%rsi
4374(3): mov %rax,%rdi
4377(5): call 0xffffe289(%rip)
437c(7): mov 0x20cd25(%rip),%rbx
4383(7): lea 0x873e(%rip),%rsi
438a(5): mov $0x5,%edx
438f(2): xor %edi,%edi
4391(5): call 0xffffe15f(%rip)
4396(3): mov %rbx,%rsi
4399(3): mov %rax,%rdi
439c(5): call 0xffffe264(%rip)
43a1(7): mov 0x20cd00(%rip),%rbx
43a8(7): lea 0x8759(%rip),%rsi
43af(5): mov $0x5,%edx
43b4(2): xor %edi,%edi
43b6(5): call 0xffffe13a(%rip)
43bb(3): mov %rbx,%rsi
43be(3): mov %rax,%rdi
43c1(5): call 0xffffe23f(%rip)
43c6(7): mov 0x20ccdb(%rip),%rbx
43cd(7): lea 0x876c(%rip),%rsi
43d4(5): mov $0x5,%edx
43d9(2): xor %edi,%edi
43db(5): call 0xffffe115(%rip)
43e0(3): mov %rbx,%rsi
43e3(3): mov %rax,%rdi
43e6(5): call 0xffffe21a(%rip)
43eb(7): mov 0x20ccb6(%rip),%rbx
43f2(7): lea 0x878f(%rip),%rsi
43f9(5): mov $0x5,%edx
43fe(2): xor %edi,%edi
4400(5): call 0xffffe0f0(%rip)
4405(3): mov %rbx,%rsi
4408(3): mov %rax,%rdi
440b(5): call 0xffffe1f5(%rip)
4410(7): mov 0x20cc91(%rip),%rbx
4417(7): lea 0x8792(%rip),%rsi
441e(5): mov $0x5,%edx
4423(2): xor %edi,%edi
4425(5): call 0xffffe0cb(%rip)
442a(3): mov %rbx,%rsi
442d(3): mov %rax,%rdi
4430(5): call 0xffffe1d0(%rip)
4435(7): mov 0x20cc6c(%rip),%rbx
443c(7): lea 0x87e5(%rip),%rsi
4443(5): mov $0x5,%edx
4448(2): xor %edi,%edi
444a(5): call 0xffffe0a6(%rip)
444f(3): mov %rbx,%rsi
4452(3): mov %rax,%rdi
4455(5): call 0xffffe1ab(%rip)
445a(7): mov 0x20cc47(%rip),%rbx
4461(7): lea 0x87f8(%rip),%rsi
4468(5): mov $0x5,%edx
446d(2): xor %edi,%edi
446f(5): call 0xffffe081(%rip)
4474(3): mov %rbx,%rsi
4477(3): mov %rax,%rdi
447a(5): call 0xffffe186(%rip)
447f(7): mov 0x20cc22(%rip),%rbx
4486(7): lea 0x882b(%rip),%rsi
448d(5): mov $0x5,%edx
4492(2): xor %edi,%edi
4494(5): call 0xffffe05c(%rip)
4499(3): mov %rbx,%rsi
449c(3): mov %rax,%rdi
449f(5): call 0xffffe161(%rip)
44a4(7): mov 0x20cbfd(%rip),%rbx
44ab(7): lea 0x889e(%rip),%rsi
44b2(5): mov $0x5,%edx
44b7(2): xor %edi,%edi
44b9(5): call 0xffffe037(%rip)
44be(3): mov %rbx,%rsi
44c1(3): mov %rax,%rdi
44c4(5): call 0xffffe13c(%rip)
44c9(7): mov 0x20cbd8(%rip),%rbx
44d0(7): lea 0x88c1(%rip),%rsi
44d7(5): mov $0x5,%edx
44dc(2): xor %edi,%edi
44de(5): call 0xffffe012(%rip)
44e3(3): mov %rbx,%rsi
44e6(3): mov %rax,%rdi
44e9(5): call 0xffffe117(%rip)
44ee(7): mov 0x20cbb3(%rip),%rbx
44f5(7): lea 0x88c4(%rip),%rsi
44fc(5): mov $0x5,%edx
4501(2): xor %edi,%edi
4503(5): call 0xffffdfed(%rip)
4508(3): mov %rbx,%rsi
450b(3): mov %rax,%rdi
450e(5): call 0xffffe0f2(%rip)
4513(7): mov 0x20cb8e(%rip),%rbx
451a(7): lea 0x88c7(%rip),%rsi
4521(5): mov $0x5,%edx
4526(2): xor %edi,%edi
4528(5): call 0xffffdfc8(%rip)
452d(3): mov %rbx,%rsi
4530(3): mov %rax,%rdi
4533(5): call 0xffffe0cd(%rip)
4538(7): mov 0x20cb69(%rip),%rbx
453f(7): lea 0x8902(%rip),%rsi
4546(5): mov $0x5,%edx
454b(2): xor %edi,%edi
454d(5): call 0xffffdfa3(%rip)
4552(3): mov %rbx,%rsi
4555(3): mov %rax,%rdi
4558(5): call 0xffffe0a8(%rip)
455d(7): mov 0x20cb44(%rip),%rbx
4564(7): lea 0x8905(%rip),%rsi
456b(5): mov $0x5,%edx
4570(2): xor %edi,%edi
4572(5): call 0xffffdf7e(%rip)
4577(3): mov %rbx,%rsi
457a(3): mov %rax,%rdi
457d(5): call 0xffffe083(%rip)
4582(7): mov 0x20cb1f(%rip),%rbx
4589(7): lea 0x8928(%rip),%rsi
4590(5): mov $0x5,%edx
4595(2): xor %edi,%edi
4597(5): call 0xffffdf59(%rip)
459c(3): mov %rbx,%rsi
459f(3): mov %rax,%rdi
45a2(5): call 0xffffe05e(%rip)
45a7(7): mov 0x20cafa(%rip),%rbx
45ae(7): lea 0x894b(%rip),%rsi
45b5(5): mov $0x5,%edx
45ba(2): xor %edi,%edi
45bc(5): call 0xffffdf34(%rip)
45c1(3): mov %rbx,%rsi
45c4(3): mov %rax,%rdi
45c7(5): call 0xffffe039(%rip)
45cc(7): mov 0x20cad5(%rip),%rbx
45d3(7): lea 0x896e(%rip),%rsi
45da(5): mov $0x5,%edx
45df(2): xor %edi,%edi
45e1(5): call 0xffffdf0f(%rip)
45e6(3): mov %rbx,%rsi
45e9(3): mov %rax,%rdi
45ec(5): call 0xffffe014(%rip)
45f1(7): lea 0x8978(%rip),%rsi
45f8(2): xor %edi,%edi
45fa(5): mov $0x5,%edx
45ff(5): call 0xffffdef1(%rip)
4604(7): lea 0x6d60(%rip),%rdx
460b(3): mov %rax,%rsi
460e(5): mov $0x1,%edi
4613(2): xor %eax,%eax
4615(5): call 0xffffe0bb(%rip)
461a(7): mov 0x20ca87(%rip),%rbx
4621(7): lea 0x89b0(%rip),%rsi
4628(5): mov $0x5,%edx
462d(2): xor %edi,%edi
462f(5): call 0xffffdec1(%rip)
4634(3): mov %rbx,%rsi
4637(3): mov %rax,%rdi
463a(5): call 0xffffdfc6(%rip)
463f(7): mov 0x20ca62(%rip),%rbx
4646(7): lea 0x8a23(%rip),%rsi
464d(5): mov $0x5,%edx
4652(2): xor %edi,%edi
4654(5): call 0xffffde9c(%rip)
4659(3): mov %rbx,%rsi
465c(3): mov %rax,%rdi
465f(5): call 0xffffdfa1(%rip)
4664(7): mov 0x20ca3d(%rip),%rbx
466b(7): lea 0x8a26(%rip),%rsi
4672(5): mov $0x5,%edx
4677(2): xor %edi,%edi
4679(5): call 0xffffde77(%rip)
467e(3): mov %rbx,%rsi
4681(3): mov %rax,%rdi
4684(5): call 0xffffdf7c(%rip)
4689(7): mov 0x20ca18(%rip),%rbx
4690(7): lea 0x8a51(%rip),%rsi
4697(5): mov $0x5,%edx
469c(2): xor %edi,%edi
469e(5): call 0xffffde52(%rip)
46a3(3): mov %rbx,%rsi
46a6(3): mov %rax,%rdi
46a9(5): call 0xffffdf57(%rip)
46ae(7): mov 0x20c9f3(%rip),%rbx
46b5(7): lea 0x6cca(%rip),%rsi
46bc(5): mov $0x5,%edx
46c1(2): xor %edi,%edi
46c3(5): call 0xffffde2d(%rip)
46c8(3): mov %rbx,%rsi
46cb(3): mov %rax,%rdi
46ce(5): call 0xffffdf32(%rip)
46d3(7): mov 0x20c9ce(%rip),%rbx
46da(7): lea 0x8a4f(%rip),%rsi
46e1(5): mov $0x5,%edx
46e6(2): xor %edi,%edi
46e8(5): call 0xffffde08(%rip)
46ed(3): mov %rbx,%rsi
46f0(3): mov %rax,%rdi
46f3(5): call 0xffffdf0d(%rip)
46f8(7): mov 0x20c9a9(%rip),%rbx
46ff(7): lea 0x8a52(%rip),%rsi
4706(5): mov $0x5,%edx
470b(2): xor %edi,%edi
470d(5): call 0xffffdde3(%rip)
4712(3): mov %rbx,%rsi
4715(3): mov %rax,%rdi
4718(5): call 0xffffdee8(%rip)
471d(7): mov 0x20c984(%rip),%rbx
4724(7): lea 0x8a75(%rip),%rsi
472b(5): mov $0x5,%edx
4730(2): xor %edi,%edi
4732(5): call 0xffffddbe(%rip)
4737(3): mov %rbx,%rsi
473a(3): mov %rax,%rdi
473d(5): call 0xffffdec3(%rip)
4742(7): lea 0x6c55(%rip),%rsi
4749(2): xor %edi,%edi
474b(5): mov $0x5,%edx
4750(5): call 0xffffdda0(%rip)
4755(7): lea 0x6c5f(%rip),%rdx
475c(3): mov %rax,%rsi
475f(5): mov $0x1,%edi
4764(2): xor %eax,%eax
4766(5): call 0xffffdf6a(%rip)
476b(7): lea 0x8ade(%rip),%rsi
4772(2): xor %edi,%edi
4774(5): mov $0x5,%edx
4779(5): call 0xffffdd77(%rip)
477e(7): lea 0x6c4b(%rip),%rdx
4785(3): mov %rax,%rsi
4788(5): mov $0x1,%edi
478d(2): xor %eax,%eax
478f(5): call 0xffffdf41(%rip)
4794(7): mov 0x20c90d(%rip),%rbx
479b(7): lea 0x8afe(%rip),%rsi
47a2(5): mov $0x5,%edx
47a7(2): xor %edi,%edi
47a9(5): call 0xffffdd47(%rip)
47ae(3): mov %rbx,%rsi
47b1(3): mov %rax,%rdi
47b4(5): call 0xffffde4c(%rip)
47b9(7): mov 0x20c8e8(%rip),%rbx
47c0(7): lea 0x8b01(%rip),%rsi
47c7(5): mov $0x5,%edx
47cc(2): xor %edi,%edi
47ce(5): call 0xffffdd22(%rip)
47d3(3): mov %rbx,%rsi
47d6(3): mov %rax,%rdi
47d9(5): call 0xffffde27(%rip)
47de(7): mov 0x20c8c3(%rip),%rbx
47e5(7): lea 0x8b74(%rip),%rsi
47ec(5): mov $0x5,%edx
47f1(2): xor %edi,%edi
47f3(5): call 0xffffdcfd(%rip)
47f8(3): mov %rbx,%rsi
47fb(3): mov %rax,%rdi
47fe(5): call 0xffffde02(%rip)
4803(7): mov 0x20c89e(%rip),%rbx
480a(7): lea 0x8b7f(%rip),%rsi
4811(5): mov $0x5,%edx
4816(2): xor %edi,%edi
4818(5): call 0xffffdcd8(%rip)
481d(3): mov %rbx,%rsi
4820(3): mov %rax,%rdi
4823(5): call 0xffffdddd(%rip)
4828(7): lea 0x8bc9(%rip),%rsi
482f(2): xor %edi,%edi
4831(5): mov $0x5,%edx
4836(5): call 0xffffdcba(%rip)
483b(7): lea 0x8bf6(%rip),%rcx
4842(7): lea 0x6ba3(%rip),%rdx
4849(3): mov %rax,%rsi
484c(5): mov $0x1,%edi
4851(2): xor %eax,%eax
4853(5): call 0xffffde7d(%rip)
4858(7): mov 0x20c849(%rip),%rbx
485f(7): lea 0x8c02(%rip),%rsi
4866(5): mov $0x5,%edx
486b(2): xor %edi,%edi
486d(5): call 0xffffdc83(%rip)
4872(3): mov %rbx,%rsi
4875(3): mov %rax,%rdi
4878(5): call 0xffffdd88(%rip)
487d(7): lea 0x8cb4(%rip),%rsi
4884(2): xor %edi,%edi
4886(5): mov $0x5,%edx
488b(5): call 0xffffdc65(%rip)
4890(7): lea 0x8d79(%rip),%rdx
4897(3): mov %rax,%rsi
489a(5): mov $0x1,%edi
489f(2): xor %eax,%eax
48a1(5): call 0xffffde2f(%rip)
48a6(7): lea 0x8d83(%rip),%rsi
48ad(2): xor %edi,%edi
48af(5): mov $0x5,%edx
48b4(5): call 0xffffdc3c(%rip)
48b9(7): lea 0x8eb0(%rip),%rcx
48c0(7): lea 0x8e69(%rip),%r8
48c7(7): lea 0x8ee2(%rip),%rdx
48ce(3): mov %rax,%rsi
48d1(5): mov $0x1,%edi
48d6(2): xor %eax,%eax
48d8(5): call 0xffffddf8(%rip)
48dd(7): mov 0x20c7c4(%rip),%rbx
48e4(7): lea 0x8f05(%rip),%rsi
48eb(5): mov $0x5,%edx
48f0(2): xor %edi,%edi
48f2(5): call 0xffffdbfe(%rip)
48f7(3): mov %rbx,%rsi
48fa(3): mov %rax,%rdi
48fd(7): lea 0x6a39(%rip),%rbx
4904(5): call 0xffffdcfc(%rip)
4909(7): lea 0x6aea(%rip),%rax
4910(7): lea 0x6b24(%rip),%rcx
4917(9): mov $0x0,0x60(%rsp)
4920(9): mov $0x0,0x68(%rsp)
4929(3): mov %rsp,%rdx
492c(4): mov %rax,(%rsp)
4930(7): lea 0x6ac5(%rip),%rax
4937(5): mov %rcx,0x30(%rsp)
493c(7): lea 0x6b02(%rip),%rcx
4943(5): mov %rax,0x8(%rsp)
4948(7): lea 0x6b25(%rip),%rax
494f(5): mov %rcx,0x40(%rsp)
4954(7): lea 0x6af4(%rip),%rcx
495b(5): mov %rax,0x10(%rsp)
4960(7): lea 0x6aa5(%rip),%rax
4967(5): mov %rcx,0x50(%rsp)
496c(5): mov %rax,0x18(%rsp)
4971(7): lea 0x6aaa(%rip),%rax
4978(5): mov %rax,0x20(%rsp)
497d(7): lea 0x6aa8(%rip),%rax
4984(5): mov %rax,0x28(%rsp)
4989(5): mov %rax,0x38(%rsp)
498e(5): mov %rax,0x48(%rsp)
4993(5): mov %rax,0x58(%rsp)
4998(8): nop 0x0(%rax,%rax,1)
49a0(4): add $0x10,%rdx
49a4(3): mov (%rdx),%rdi
49a7(3): test %rdi,%rdi
49aa(2): jz 0x15(%rip)
49ac(5): mov $0x5,%ecx
49b1(3): mov %rbx,%rsi
49b4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
49b6(3): setnbe %al
49b9(2): sbb $0x0,%al
49bb(2): test %al,%al
49bd(2): jnz 0xffffffe3(%rip)
49bf(4): mov 0x8(%rdx),%r12
49c3(2): xor %edi,%edi
49c5(5): mov $0x5,%edx
49ca(7): lea 0x6a88(%rip),%rsi
49d1(3): test %r12,%r12
49d4(6): jz 0x10e(%rip)
49da(5): call 0xffffdb16(%rip)
49df(7): lea 0x8f22(%rip),%rcx
49e6(7): lea 0x6a83(%rip),%rdx
49ed(3): mov %rax,%rsi
49f0(5): mov $0x1,%edi
49f5(2): xor %eax,%eax
49f7(5): call 0xffffdcd9(%rip)
49fc(2): xor %esi,%esi
49fe(5): mov $0x5,%edi
4a03(5): call 0xffffdcad(%rip)
4a08(3): test %rax,%rax
4a0b(2): jz 0x1e(%rip)
4a0d(7): lea 0x6a6a(%rip),%rsi
4a14(5): mov $0x3,%edx
4a19(3): mov %rax,%rdi
4a1c(5): call 0xffffda44(%rip)
4a21(2): test %eax,%eax
4a23(6): jnz 0x95(%rip)
4a29(7): lea 0x6a52(%rip),%rsi
4a30(2): xor %edi,%edi
4a32(5): mov $0x5,%edx
4a37(5): call 0xffffdab9(%rip)
4a3c(7): lea 0x68fa(%rip),%rcx
4a43(7): lea 0x8ebe(%rip),%rdx
4a4a(3): mov %rax,%rsi
4a4d(5): mov $0x1,%edi
4a52(2): xor %eax,%eax
4a54(5): call 0xffffdc7c(%rip)
4a59(3): cmp %rbx,%r12
4a5c(7): lea 0x69b3(%rip),%rcx
4a63(7): lea 0x95d7(%rip),%rbx
4a6a(4): cmove %rcx,%rbx
4a6e(7): lea 0x8f03(%rip),%rsi
4a75(2): xor %edi,%edi
4a77(5): mov $0x5,%edx
4a7c(5): call 0xffffda74(%rip)
4a81(3): mov %rbx,%rcx
4a84(3): mov %rax,%rsi
4a87(3): mov %r12,%rdx
4a8a(5): mov $0x1,%edi
4a8f(2): xor %eax,%eax
4a91(5): call 0xffffdc3f(%rip)
4a96(5): jmp 0xfffff1f0(%rip)
4a9b(7): lea 0x6c78(%rip),%rsi
4aa2(2): xor %edi,%edi
4aa4(5): call 0xffffda4c(%rip)
4aa9(3): mov %rax,%rbx
4aac(5): jmp 0xfffff4e9(%rip)
4ab1(7): lea 0x6885(%rip),%r12
4ab8(7): mov 0x20c5e9(%rip),%r13
4abf(7): lea 0x8e6a(%rip),%rsi
4ac6(2): xor %edi,%edi
4ac8(5): mov $0x5,%edx
4acd(5): call 0xffffda23(%rip)
4ad2(3): mov %r13,%rsi
4ad5(3): mov %rax,%rdi
4ad8(5): call 0xffffdb28(%rip)
4add(5): jmp 0xffffff4c(%rip)
4ae2(5): call 0xffffda0e(%rip)
4ae7(7): lea 0x8e1a(%rip),%rcx
4aee(7): lea 0x697b(%rip),%rdx
4af5(3): mov %rax,%rsi
4af8(5): mov $0x1,%edi
4afd(2): xor %eax,%eax
4aff(5): call 0xffffdbd1(%rip)
4b04(2): xor %esi,%esi
4b06(5): mov $0x5,%edi
4b0b(5): call 0xffffdba5(%rip)
4b10(3): test %rax,%rax
4b13(2): jz 0x1a(%rip)
4b15(7): lea 0x6962(%rip),%rsi
4b1c(5): mov $0x3,%edx
4b21(3): mov %rax,%rdi
4b24(5): call 0xffffd93c(%rip)
4b29(2): test %eax,%eax
4b2b(2): jnz 0xffffff86(%rip)
4b2d(7): lea 0x694e(%rip),%rsi
4b34(5): mov $0x5,%edx
4b39(2): xor %edi,%edi
4b3b(7): lea 0x67fb(%rip),%r12
4b42(7): lea 0x68cd(%rip),%rbx
4b49(5): call 0xffffd9a7(%rip)
4b4e(7): lea 0x67e8(%rip),%rcx
4b55(7): lea 0x8dac(%rip),%rdx
4b5c(3): mov %rax,%rsi
4b5f(5): mov $0x1,%edi
4b64(2): xor %eax,%eax
4b66(5): call 0xffffdb6a(%rip)
4b6b(5): jmp 0xffffff03(%rip)

"apply_settings" :
4b70(2): push %r15
4b72(2): push %r14
4b74(2): push %r13
4b76(2): push %r12
4b78(1): push %rbp
4b79(1): push %rbx
4b7a(4): sub $0x78,%rsp
4b7e(8): mov 0xb0(%rsp),%rax
4b86(5): mov %rsi,0x30(%rsp)
4b8b(5): mov %rdx,0x8(%rsp)
4b90(4): mov %ecx,0x38(%rsp)
4b94(5): mov %r8,0x18(%rsp)
4b99(5): mov %r9,0x28(%rsp)
4b9e(5): mov %rax,0x20(%rsp)
4ba3(5): mov %dil,0x3e(%rsp)
4ba8(9): mov $0x28,%rax
4bb1(5): mov %rax,0x68(%rsp)
4bb6(2): xor %eax,%eax
4bb8(3): cmp $0x1,%ecx
4bbb(6): jle 0x155(%rip)
4bc1(5): mov $0x1,%ebp
4bc6(7): lea 0x20b493(%rip),%r14
4bcd(2): jmp 0x24(%rip)
4bcf(1): nop 
4bd0(5): movzx (%rsp),%r13d
4bd5(4): xor $0x1,%r13d
4bd9(4): movzx %r13b,%r13d
4bdd(7): mov %r13d,0x20c42c(%rip)
4be4(3): add $0x1,%ebp
4be7(4): cmp %ebp,0x38(%rsp)
4beb(6): jle 0x125(%rip)
4bf1(3): movsxd %ebp,%rax
4bf4(8): lea 0x0(,%rax,8),%rdx
4bfc(5): mov %rdx,0x10(%rsp)
4c01(5): mov 0x8(%rsp),%rdx
4c06(4): mov 0x0(%rdx,%rax,8),%rbx
4c0a(3): test %rbx,%rbx
4c0d(2): jz 0xffffffd7(%rip)
4c0f(3): cmp $0x2d,(%rbx)
4c12(4): mov $0x0,(%rsp)
4c16(2): jnz 0xa(%rip)
4c18(4): add $0x1,%rbx
4c1c(4): mov $0x1,(%rsp)
4c20(7): lea 0x69b2(%rip),%rdi
4c27(5): mov $0x6,%ecx
4c2c(3): mov %rbx,%rsi
4c2f(7): lea 0x6867(%rip),%r15
4c36(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4c38(3): setnbe %al
4c3b(2): sbb $0x0,%al
4c3d(3): xor %r13d,%r13d
4c40(2): test %al,%al
4c42(2): jnz 0x26(%rip)
4c44(2): jmp 0xffffff8c(%rip)
4c46(a): nop 0x0(%rax,%rax,1)
4c50(4): add $0x1,%r13
4c54(3): mov %r13,%rax
4c57(4): shl/sal $0x5,%rax
4c5b(4): mov 0x0(%r14,%rax,1),%r15
4c5f(3): test %r15,%r15
4c62(6): jz 0xd6(%rip)
4c68(3): mov %r15,%rsi
4c6b(3): mov %rbx,%rdi
4c6e(3): movsxd %r13d,%r12
4c71(5): call 0xffffd9af(%rip)
4c76(2): test %eax,%eax
4c78(2): jnz 0xffffffd8(%rip)
4c7a(4): shl/sal $0x5,%r12
4c7e(3): add %r14,%r12
4c81(6): movzx 0xc(%r12),%eax
4c87(2): test $0x10,%al
4c89(6): jz 0x277(%rip)
4c8f(7): lea 0x68fe(%rip),%rdi
4c96(5): mov $0x7,%ecx
4c9b(3): mov %rbx,%rsi
4c9e(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4ca0(3): setnbe %al
4ca3(2): sbb $0x0,%al
4ca5(2): test %al,%al
4ca7(6): jnz 0x1d9(%rip)
4cad(4): mov 0x38(%rsp),%eax
4cb1(3): sub $0x1,%eax
4cb4(2): cmp %ebp,%eax
4cb6(6): jz 0x94b(%rip)
4cbc(5): mov 0x8(%rsp),%rax
4cc1(5): mov 0x10(%rsp),%rcx
4cc6(5): mov 0x8(%rax,%rcx,1),%rdi
4ccb(3): test %rdi,%rdi
4cce(6): jz 0x933(%rip)
4cd4(3): add $0x1,%ebp
4cd7(5): cmp $0x0,0x3e(%rsp)
4cdc(6): jnz 0xffffff08(%rip)
4ce2(5): call 0xffffe77e(%rip)
4ce7(5): mov 0x18(%rsp),%rdi
4cec(2): mov %eax,%esi
4cee(3): add $0x1,%ebp
4cf1(5): call 0xffffda3f(%rip)
4cf6(5): mov 0x28(%rsp),%rax
4cfb(4): cmp %ebp,0x38(%rsp)
4cff(3): mov $0x1,(%rax)
4d02(5): mov 0x20(%rsp),%rax
4d07(3): mov $0x1,(%rax)
4d0a(6): jnle 0xfffffee7(%rip)
4d10(5): mov 0x68(%rsp),%rax
4d15(9): xor $0x28,%rax
4d1e(6): jnz 0x93d(%rip)
4d24(4): add $0x78,%rsp
4d28(1): pop %rbx
4d29(1): pop %rbp
4d2a(2): pop %r12
4d2c(2): pop %r13
4d2e(2): pop %r14
4d30(2): pop %r15
4d32(1): ret near (%rsp)
4d33(5): nop 0x0(%rax,%rax,1)
4d38(4): cmp $0x0,(%rsp)
4d3c(6): jnz 0x35d(%rip)
4d42(7): lea 0x20b14f(%rip),%r15
4d49(3): xor %r12d,%r12d
4d4c(7): lea 0x6751(%rip),%r13
4d53(2): jmp 0x1a(%rip)
4d55(3): nop (%rax)
4d58(4): add $0x18,%r15
4d5c(4): mov 0xffffffe8(%r15),%r13
4d60(4): add $0x1,%r12d
4d64(3): test %r13,%r13
4d67(6): jz 0xffffff28(%rip)
4d6d(3): mov %r13,%rsi
4d70(3): mov %rbx,%rdi
4d73(5): call 0xffffd8ad(%rip)
4d78(2): test %eax,%eax
4d7a(2): jnz 0xffffffde(%rip)
4d7c(4): mov 0x38(%rsp),%eax
4d80(3): sub $0x1,%eax
4d83(2): cmp %ebp,%eax
4d85(6): jz 0x87c(%rip)
4d8b(5): mov 0x8(%rsp),%rax
4d90(5): mov 0x10(%rsp),%rcx
4d95(5): mov 0x8(%rax,%rcx,1),%r15
4d9a(3): test %r15,%r15
4d9d(6): jz 0x864(%rip)
4da3(7): lea 0x679a(%rip),%rdi
4daa(3): movsxd %r12d,%r12
4dad(5): mov $0x4,%ecx
4db2(3): mov %r13,%rsi
4db5(7): lea 0x20b0c4(%rip),%rax
4dbc(3): add $0x1,%ebp
4dbf(4): lea 0x0(%r12,%r12,2),%rdx
4dc3(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4dc5(4): lea 0x0(%rax,%rdx,8),%rbx
4dc9(3): setnbe %al
4dcc(2): sbb $0x0,%al
4dce(2): test %al,%al
4dd0(6): jz 0x1f0(%rip)
4dd6(7): lea 0x676b(%rip),%rdi
4ddd(5): mov $0x5,%ecx
4de2(3): mov %r13,%rsi
4de5(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4de7(3): setnbe %al
4dea(2): sbb $0x0,%al
4dec(2): test %al,%al
4dee(6): jz 0x1d2(%rip)
4df4(4): movzx (%r15),%r13d
4df8(3): test %r13b,%r13b
4dfb(2): jz 0x5d(%rip)
4dfd(5): movzx 0x1(%r15),%edx
4e02(2): test %dl,%dl
4e04(2): jz 0x54(%rip)
4e06(7): lea 0x6740(%rip),%rsi
4e0d(3): mov %r15,%rdi
4e10(3): mov %dl,(%rsp)
4e13(3): xor %r12d,%r12d
4e16(5): call 0xffffd80a(%rip)
4e1b(2): test %eax,%eax
4e1d(2): jz 0x3f(%rip)
4e1f(7): lea 0x672a(%rip),%rsi
4e26(3): mov %r15,%rdi
4e29(5): call 0xffffd7f7(%rip)
4e2e(2): test %eax,%eax
4e30(2): jz 0x2c(%rip)
4e32(4): cmp $0x5e,%r13b
4e36(6): jnz 0x18a(%rip)
4e3c(4): movzx (%rsp),%edx
4e40(3): cmp $0x3f,%dl
4e43(6): jz 0x6dc(%rip)
4e49(3): mov %rdx,%r12
4e4c(7): and $0x9f,%r12d
4e53(2): jmp 0x9(%rip)
4e55(3): nop (%rax)
4e58(4): movzx %r13b,%r12d
4e5c(4): mov 0x10(%rbx),%rax
4e60(5): mov 0x18(%rsp),%rcx
4e65(5): mov %r12b,0x11(%rcx,%rax,1)
4e6a(5): mov 0x20(%rsp),%rax
4e6f(3): mov $0x1,(%rax)
4e72(5): jmp 0xfffffd72(%rip)
4e77(9): nop 0x0(%rax,%rax,1)
4e80(7): lea 0x66cf(%rip),%rdi
4e87(5): mov $0x7,%ecx
4e8c(3): mov %rbx,%rsi
4e8f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4e91(3): setnbe %al
4e94(2): sbb $0x0,%al
4e96(2): test %al,%al
4e98(6): jnz 0xb0(%rip)
4e9e(4): mov 0x38(%rsp),%eax
4ea2(3): sub $0x1,%eax
4ea5(2): cmp %ebp,%eax
4ea7(6): jz 0x75a(%rip)
4ead(5): mov 0x8(%rsp),%rax
4eb2(5): mov 0x10(%rsp),%rcx
4eb7(5): mov 0x8(%rax,%rcx,1),%rdi
4ebc(3): test %rdi,%rdi
4ebf(6): jz 0x742(%rip)
4ec5(3): add $0x1,%ebp
4ec8(5): cmp $0x0,0x3e(%rsp)
4ecd(6): jnz 0xfffffd17(%rip)
4ed3(5): call 0xffffe58d(%rip)
4ed8(5): mov 0x18(%rsp),%rdi
4edd(2): mov %eax,%esi
4edf(5): call 0xffffd601(%rip)
4ee4(5): mov 0x28(%rsp),%rax
4ee9(3): mov $0x1,(%rax)
4eec(5): mov 0x20(%rsp),%rax
4ef1(3): mov $0x1,(%rax)
4ef4(5): jmp 0xfffffcf0(%rip)
4ef9(7): nop 0x0(%rax)
4f00(4): cmp $0x0,(%rsp)
4f04(6): jz 0xd4(%rip)
4f0a(2): test $0x4,%al
4f0c(6): jz 0x185(%rip)
4f12(5): mov 0x18(%rsp),%rsi
4f17(5): mov 0x8(%r12),%edi
4f1c(5): call 0xffffe5b4(%rip)
4f21(3): test %rax,%rax
4f24(6): jz 0x385(%rip)
4f2a(5): mov 0x10(%r12),%rdx
4f2f(5): or 0x18(%r12),%edx
4f34(2): not %edx
4f36(2): and %edx,(%rax)
4f38(5): mov 0x20(%rsp),%rax
4f3d(3): mov $0x1,(%rax)
4f40(5): jmp 0xfffffca4(%rip)
4f45(3): nop (%rax)
4f48(7): lea 0x660e(%rip),%rdi
4f4f(5): mov $0x5,%ecx
4f54(3): mov %rbx,%rsi
4f57(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4f59(3): setnbe %al
4f5c(2): sbb $0x0,%al
4f5e(2): test %al,%al
4f60(6): jnz 0xad(%rip)
4f66(4): mov 0x38(%rsp),%eax
4f6a(3): sub $0x1,%eax
4f6d(2): cmp %ebp,%eax
4f6f(6): jz 0x692(%rip)
4f75(5): mov 0x8(%rsp),%rax
4f7a(5): mov 0x10(%rsp),%rcx
4f7f(5): mov 0x8(%rax,%rcx,1),%rdi
4f84(3): test %rdi,%rdi
4f87(6): jz 0x67a(%rip)
4f8d(3): add $0x1,%ebp
4f90(5): cmp $0x0,0x3e(%rsp)
4f95(6): jnz 0xfffffc4f(%rip)
4f9b(5): mov $0x7fffffff,%esi
4fa0(5): call 0xffffe8c0(%rip)
4fa5(5): mov 0x30(%rsp),%rdx
4faa(3): or $0xff,%esi
4fad(2): mov %eax,%edi
4faf(5): call 0xffffea81(%rip)
4fb4(5): jmp 0xfffffc30(%rip)
4fb9(7): nop 0x0(%rax)
4fc0(5): mov $0xff,%esi
4fc5(3): mov %r15,%rdi
4fc8(5): call 0xffffe898(%rip)
4fcd(3): mov %rax,%r12
4fd0(5): jmp 0xfffffe8c(%rip)
4fd5(3): nop (%rax)
4fd8(5): mov 0x18(%rsp),%rsi
4fdd(5): mov 0x8(%r12),%edi
4fe2(5): call 0xffffe4ee(%rip)
4fe7(3): test %rax,%rax
4fea(6): jz 0xee(%rip)
4ff0(5): mov 0x18(%r12),%edx
4ff5(2): not %edx
4ff7(2): and (%rax),%edx
4ff9(5): or 0x10(%r12),%edx
4ffe(2): mov %edx,(%rax)
5000(5): mov 0x20(%rsp),%rax
5005(3): mov $0x1,(%rax)
5008(5): jmp 0xfffffbdc(%rip)
500d(7): lea 0x654e(%rip),%rdi
5014(5): mov $0x5,%ecx
5019(3): mov %rbx,%rsi
501c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
501e(3): setnbe %al
5021(2): sbb $0x0,%al
5023(2): test %al,%al
5025(2): jz 0x19(%rip)
5027(7): lea 0x6539(%rip),%rsi
502e(3): mov %rbx,%rdi
5031(5): call 0xffffd5ef(%rip)
5036(2): test %eax,%eax
5038(6): jnz 0x11d(%rip)
503e(4): mov 0x38(%rsp),%eax
5042(3): sub $0x1,%eax
5045(2): cmp %ebp,%eax
5047(6): jz 0x5ba(%rip)
504d(5): mov 0x8(%rsp),%rax
5052(5): mov 0x10(%rsp),%rcx
5057(5): mov 0x8(%rax,%rcx,1),%rdi
505c(3): test %rdi,%rdi
505f(6): jz 0x5a2(%rip)
5065(3): add $0x1,%ebp
5068(5): cmp $0x0,0x3e(%rsp)
506d(6): jnz 0xfffffb77(%rip)
5073(5): mov $0x7fffffff,%esi
5078(5): call 0xffffe7e8(%rip)
507d(5): mov 0x30(%rsp),%rdx
5082(2): mov %eax,%esi
5084(3): or $0xff,%edi
5087(5): call 0xffffe9a9(%rip)
508c(5): jmp 0xfffffb58(%rip)
5091(5): mov 0x20(%rsp),%rax
5096(3): mov $0x1,(%rax)
5099(4): lea 0xffffffff(%rbx),%rdi
509d(5): call 0x26e3(%rip)
50a2(7): lea 0x6470(%rip),%rsi
50a9(3): mov %rax,%rbx
50ac(5): mov $0x5,%edx
50b1(2): xor %edi,%edi
50b3(5): call 0xffffd43d(%rip)
50b8(2): xor %edi,%edi
50ba(3): mov %rax,%rdx
50bd(3): mov %rbx,%rcx
50c0(2): xor %esi,%esi
50c2(2): xor %eax,%eax
50c4(5): call 0xffffd61c(%rip)
50c9(5): mov $0x1,%edi
50ce(5): call 0xffffeb62(%rip)
50d3(5): nop 0x0(%rax,%rax,1)
50d8(7): lea 0x64bc(%rip),%rdi
50df(5): mov $0x6,%ecx
50e4(3): mov %r15,%rsi
50e7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
50e9(3): setnbe %al
50ec(2): sbb $0x0,%al
50ee(2): test %al,%al
50f0(6): jz 0x117(%rip)
50f6(7): lea 0x64a4(%rip),%rsi
50fd(3): mov %r15,%rdi
5100(5): call 0xffffd520(%rip)
5105(2): test %eax,%eax
5107(6): jz 0x100(%rip)
510d(7): lea 0x6395(%rip),%rsi
5114(3): mov %r15,%rdi
5117(5): call 0xffffd509(%rip)
511c(2): test %eax,%eax
511e(6): jnz 0x13f(%rip)
5124(4): cmp $0x0,(%rsp)
5128(5): mov 0x18(%rsp),%rcx
512d(3): mov 0x8(%rcx),%eax
5130(6): jnz 0x19b(%rip)
5136(5): mov 0x18(%rsp),%rcx
513b(5): and $0xfffffccf,%eax
5140(5): or $0x320,%eax
5145(3): mov %eax,0x8(%rcx)
5148(5): mov 0x20(%rsp),%rax
514d(3): mov $0x1,(%rax)
5150(5): jmp 0xfffffa94(%rip)
5155(7): lea 0x6413(%rip),%rsi
515c(3): mov %rbx,%rdi
515f(5): call 0xffffd4c1(%rip)
5164(2): test %eax,%eax
5166(6): jz 0xc6(%rip)
516c(7): lea 0x6401(%rip),%rsi
5173(3): mov %rbx,%rdi
5176(5): call 0xffffd4aa(%rip)
517b(2): test %eax,%eax
517d(6): jnz 0x166(%rip)
5183(4): mov 0x38(%rsp),%eax
5187(3): sub $0x1,%eax
518a(2): cmp %ebp,%eax
518c(6): jz 0x475(%rip)
5192(5): mov 0x8(%rsp),%rax
5197(5): mov 0x10(%rsp),%rcx
519c(5): lea 0x8(%rax,%rcx,1),%r12
51a1(4): mov (%r12),%rdi
51a5(3): test %rdi,%rdi
51a8(6): jz 0x459(%rip)
51ae(4): or $0xffffffff,%rsi
51b2(3): add $0x1,%ebp
51b5(5): call 0xffffe6ab(%rip)
51ba(5): mov 0x18(%rsp),%rcx
51bf(6): test $0xffffff00,%rax
51c5(3): mov %al,0x10(%rcx)
51c8(2): jz 0x32(%rip)
51ca(4): mov (%r12),%rdi
51ce(5): call 0x25b2(%rip)
51d3(7): lea 0x639f(%rip),%rsi
51da(3): mov %rax,%rbx
51dd(5): mov $0x5,%edx
51e2(2): xor %edi,%edi
51e4(5): call 0xffffd30c(%rip)
51e9(3): mov %rbx,%rcx
51ec(3): mov %rax,%rdx
51ef(2): xor %esi,%esi
51f1(2): xor %edi,%edi
51f3(2): xor %eax,%eax
51f5(5): call 0xffffd4eb(%rip)
51fa(5): mov 0x20(%rsp),%rax
51ff(3): mov $0x1,(%rax)
5202(5): jmp 0xfffff9e2(%rip)
5207(5): mov 0x18(%rsp),%rcx
520c(3): mov 0x8(%rcx),%eax
520f(3): mov %eax,(%rsp)
5212(5): and $0xfffffccf,%eax
5217(5): or $0x120,%eax
521c(3): mov %eax,0x8(%rcx)
521f(5): mov 0x20(%rsp),%rax
5224(3): mov $0x1,(%rax)
5227(5): jmp 0xfffff9bd(%rip)
522c(5): cmp $0x0,0x3e(%rsp)
5231(6): jnz 0xfffff9b3(%rip)
5237(5): call 0xffffe759(%rip)
523c(5): mov 0x30(%rsp),%rsi
5241(2): xor %edi,%edi
5243(6): mov %eax,0x20bfb7(%rip)
5249(a): mov $0x0,0x20bfa9(%rip)
5253(5): call 0xffffe8cd(%rip)
5258(5): jmp 0xfffff98c(%rip)
525d(7): lea 0x6631(%rip),%rsi
5264(3): mov %r15,%rdi
5267(5): call 0xffffd3b9(%rip)
526c(2): test %eax,%eax
526e(6): jnz 0xb3(%rip)
5274(4): cmp $0x0,(%rsp)
5278(5): mov 0x18(%rsp),%rcx
527d(3): mov 0x4(%rcx),%eax
5280(2): mov (%rcx),%edx
5282(6): jz 0x13e(%rip)
5288(3): and $0xd3,%eax
528b(6): and $0xfffffe3f,%edx
5291(3): or $0x4,%eax
5294(3): or $0x1,%dh
5297(3): mov %eax,0x4(%rcx)
529a(5): mov 0x20(%rsp),%rax
529f(2): mov %edx,(%rcx)
52a1(3): mov $0x1,(%rax)
52a4(5): jmp 0xfffff940(%rip)
52a9(7): lea 0x62eb(%rip),%rsi
52b0(3): mov %r15,%rdi
52b3(5): call 0xffffd36d(%rip)
52b8(2): test %eax,%eax
52ba(6): jnz 0x3af(%rip)
52c0(5): mov 0x18(%rsp),%rcx
52c5(3): mov 0x8(%rcx),%eax
52c8(3): mov %eax,(%rsp)
52cb(5): and $0xfffffecf,%eax
52d0(3): or $0x30,%eax
52d3(3): mov %eax,0x8(%rcx)
52d6(5): mov 0x20(%rsp),%rax
52db(3): mov $0x1,(%rax)
52de(5): jmp 0xfffff906(%rip)
52e3(7): lea 0x62ab(%rip),%rsi
52ea(3): mov %rbx,%rdi
52ed(5): call 0xffffd333(%rip)
52f2(2): test %eax,%eax
52f4(6): jnz 0x97(%rip)
52fa(5): cmp $0x0,0x3e(%rsp)
52ff(6): jnz 0xfffff8e5(%rip)
5305(5): call 0xffffe68b(%rip)
530a(5): mov 0x18(%rsp),%rdi
530f(2): xor %esi,%esi
5311(6): mov %eax,0x20bee9(%rip)
5317(5): call 0xffffe3a9(%rip)
531c(5): jmp 0xfffff8c8(%rip)
5321(7): lea 0x6186(%rip),%rsi
5328(3): mov %r15,%rdi
532b(5): call 0xffffd2f5(%rip)
5330(2): test %eax,%eax
5332(6): jz 0xab(%rip)
5338(7): lea 0x6172(%rip),%rsi
533f(3): mov %r15,%rdi
5342(5): call 0xffffd2de(%rip)
5347(2): test %eax,%eax
5349(6): jz 0x22f(%rip)
534f(7): lea 0x6183(%rip),%rsi
5356(3): mov %r15,%rdi
5359(5): call 0xffffd2c7(%rip)
535e(2): test %eax,%eax
5360(6): jnz 0x1ca(%rip)
5366(4): cmp $0x0,(%rsp)
536a(5): mov 0x18(%rsp),%rcx
536f(3): mov 0xc(%rcx),%eax
5372(6): jz 0x313(%rip)
5378(3): or $0x2,%eax
537b(3): mov %eax,0xc(%rcx)
537e(5): mov 0x20(%rsp),%rax
5383(3): mov $0x1,(%rax)
5386(5): jmp 0xfffff85e(%rip)
538b(3): mov %rbx,%rdi
538e(5): call 0xffffe0d2(%rip)
5393(3): cmp $0xff,%eax
5396(3): mov %eax,%r12d
5399(2): jz 0x5c(%rip)
539b(5): cmp $0x0,0x3e(%rsp)
53a0(6): jnz 0xfffff844(%rip)
53a6(5): mov 0x18(%rsp),%rbx
53ab(2): mov %eax,%esi
53ad(3): mov %rbx,%rdi
53b0(5): call 0xffffd380(%rip)
53b5(3): mov %r12d,%esi
53b8(3): mov %rbx,%rdi
53bb(5): jmp 0xfffffb24(%rip)
53c0(5): mov 0x18(%rsp),%rcx
53c5(3): and $0xfb,%eax
53c8(3): and $0xfe,%dh
53cb(3): mov %eax,0x4(%rcx)
53ce(5): mov 0x20(%rsp),%rax
53d3(2): mov %edx,(%rcx)
53d5(3): mov $0x1,(%rax)
53d8(5): jmp 0xfffff80c(%rip)
53dd(5): mov 0x18(%rsp),%rax
53e2(6): mov $0x157f,0x13(%rax)
53e8(5): mov 0x20(%rsp),%rax
53ed(3): mov $0x1,(%rax)
53f0(5): jmp 0xfffff7f4(%rip)
53f5(5): call 0xffffd05b(%rip)
53fa(3): mov %rax,%r12
53fd(5): lea 0x48(%rsp),%rax
5402(3): mov %rbx,%r13
5405(3): xor %r15d,%r15d
5408(4): mov %rax,(%rsp)
540c(4): mov (%rsp),%rsi
5410(8): mov $0x0,(%r12)
5418(5): mov $0x10,%edx
541d(3): mov %r13,%rdi
5420(5): call 0xffffd320(%rip)
5425(5): cmp $0x0,(%r12)
542a(6): jnz 0xd9(%rip)
5430(5): mov 0x48(%rsp),%rdx
5435(3): cmp $0x3a,(%rdx)
5438(6): jnz 0xcb(%rip)
543e(3): cmp %r13,%rdx
5441(6): jz 0xc2(%rip)
5447(2): mov %eax,%ecx
5449(3): cmp %rcx,%rax
544c(6): jnz 0xb7(%rip)
5452(5): mov %eax,0x50(%rsp,%r15,4)
5457(4): add $0x1,%r15
545b(4): lea 0x1(%rdx),%r13
545f(4): cmp $0x4,%r15
5463(2): jnz 0xffffffa9(%rip)
5465(5): mov 0x18(%rsp),%rcx
546a(4): mov 0x50(%rsp),%eax
546e(3): xor %r15d,%r15d
5471(4): mov %ebp,0x10(%rsp)
5475(3): xor %r9d,%r9d
5478(3): mov %rbx,%rbp
547b(2): mov %eax,(%rcx)
547d(4): mov 0x54(%rsp),%eax
5481(3): mov %eax,0x4(%rcx)
5484(4): mov 0x58(%rsp),%eax
5488(3): mov %eax,0x8(%rcx)
548b(4): mov 0x5c(%rsp),%eax
548f(3): mov %eax,0xc(%rcx)
5492(2): jmp 0x3a(%rip)
5494(5): mov 0x48(%rsp),%rdx
5499(2): cmp %bl,(%rdx)
549b(2): jnz 0x65(%rip)
549d(3): cmp %r13,%rdx
54a0(2): jz 0x60(%rip)
54a2(6): test $0xffffff00,%rax
54a8(2): jnz 0x58(%rip)
54aa(5): mov 0x18(%rsp),%rcx
54af(4): lea 0x1(%rdx),%r13
54b3(6): movzx 0x3f(%rsp),%r9d
54b9(5): mov %al,0x11(%rcx,%r15,1)
54be(4): add $0x1,%r15
54c2(4): cmp $0x20,%r15
54c6(6): jz 0x19a(%rip)
54cc(4): mov (%rsp),%rsi
54d0(4): cmp $0x1f,%r15
54d4(5): mov $0x3a,%eax
54d9(4): cmove %r9d,%eax
54dd(8): mov $0x0,(%r12)
54e5(5): mov $0x10,%edx
54ea(3): mov %r13,%rdi
54ed(5): mov %r9b,0x3f(%rsp)
54f2(2): mov %eax,%ebx
54f4(5): call 0xffffd24c(%rip)
54f9(5): cmp $0x0,(%r12)
54fe(2): jz 0xffffff96(%rip)
5500(3): mov %rbp,%rbx
5503(3): mov %rbx,%rdi
5506(5): call 0x227a(%rip)
550b(5): mov $0x5,%edx
5510(3): mov %rax,%rbx
5513(7): lea 0x5fff(%rip),%rsi
551a(5): jmp 0xfffffb97(%rip)
551f(6): mov $0x7f,%r12d
5525(5): jmp 0xfffff937(%rip)
552a(7): lea 0x5faf(%rip),%rsi
5531(3): mov %r15,%rdi
5534(5): call 0xffffd0ec(%rip)
5539(2): test %eax,%eax
553b(6): jnz 0x17f(%rip)
5541(5): mov 0x18(%rsp),%rcx
5546(3): mov 0x8(%rcx),%eax
5549(2): mov (%rcx),%edx
554b(4): mov %eax,0x10(%rsp)
554f(5): and $0xfffffecf,%eax
5554(4): cmp $0x0,(%rsp)
5558(6): jz 0x145(%rip)
555e(5): or $0x120,%eax
5563(3): or $0x20,%edx
5566(3): mov %eax,0x8(%rcx)
5569(5): mov 0x20(%rsp),%rax
556e(2): mov %edx,(%rcx)
5570(3): mov $0x1,(%rax)
5573(5): jmp 0xfffff671(%rip)
5578(7): lea 0x20a901(%rip),%rax
557f(4): add $0x18,%rax
5583(5): cmp $0x0,0xffffffe8(%rax)
5588(2): jz 0x15(%rip)
558a(4): movzx 0xfffffff0(%rax),%ecx
558e(4): mov 0xfffffff8(%rax),%rdx
5592(5): mov 0x18(%rsp),%rsi
5597(4): mov %cl,0x11(%rsi,%rdx,1)
559b(2): jmp 0xffffffe4(%rip)
559d(7): lea 0x20aabc(%rip),%rbx
55a4(2): jmp 0x24(%rip)
55a6(3): mov 0x8(%rbx),%edi
55a9(5): mov 0x18(%rsp),%rsi
55ae(5): call 0xffffdf22(%rip)
55b3(3): test %rax,%rax
55b6(2): jz 0x67(%rip)
55b8(3): mov 0x18(%rbx),%edx
55bb(2): not %edx
55bd(2): and (%rax),%edx
55bf(3): or 0x10(%rbx),%edx
55c2(2): mov %edx,(%rax)
55c4(4): add $0x20,%rbx
55c8(4): cmp $0x0,(%rbx)
55cc(6): jz 0xfffffc2e(%rip)
55d2(4): movzx 0xc(%rbx),%eax
55d6(2): test $0x10,%al
55d8(2): jnz 0xffffffec(%rip)
55da(2): test $0x1,%al
55dc(2): jnz 0xffffffca(%rip)
55de(2): test $0x2,%al
55e0(2): jz 0xffffffe4(%rip)
55e2(3): mov 0x8(%rbx),%edi
55e5(5): mov 0x18(%rsp),%rsi
55ea(5): call 0xffffdee6(%rip)
55ef(3): test %rax,%rax
55f2(2): jz 0x4a(%rip)
55f4(4): mov 0x10(%rbx),%rdx
55f8(3): or 0x18(%rbx),%edx
55fb(2): not %edx
55fd(2): and %edx,(%rax)
55ff(2): jmp 0xffffffc5(%rip)
5601(3): mov %rbx,%rdi
5604(5): call 0x217c(%rip)
5609(5): mov $0x5,%edx
560e(3): mov %rax,%rbx
5611(7): lea 0x5f15(%rip),%rsi
5618(5): jmp 0xfffffa99(%rip)
561d(7): lea 0x62e4(%rip),%rcx
5624(7): lea 0x5e8b(%rip),%rsi
562b(7): lea 0x5ea1(%rip),%rdi
5632(5): mov $0x8cb,%edx
5637(5): call 0xffffcf69(%rip)
563c(7): lea 0x62c5(%rip),%rcx
5643(7): lea 0x5e6c(%rip),%rsi
564a(7): lea 0x5e82(%rip),%rdi
5651(5): mov $0x8d1,%edx
5656(5): call 0xffffcf4a(%rip)
565b(5): call 0xffffcec5(%rip)
5660(4): mov 0x10(%rsp),%ebp
5664(5): jmp 0xfffffb96(%rip)
5669(7): lea 0x5f31(%rip),%rsi
5670(3): mov %r15,%rdi
5673(5): call 0xffffcfad(%rip)
5678(2): test %eax,%eax
567a(6): jz 0xfffffc46(%rip)
5680(5): jmp 0xfffffa8d(%rip)
5685(5): mov 0x18(%rsp),%rcx
568a(3): and $0xfd,%eax
568d(3): mov %eax,0xc(%rcx)
5690(5): mov 0x20(%rsp),%rax
5695(3): mov $0x1,(%rax)
5698(5): jmp 0xfffff54c(%rip)
569d(5): mov 0x18(%rsp),%rcx
56a2(3): or $0x30,%eax
56a5(3): and $0xdf,%edx
56a8(3): mov %eax,0x8(%rcx)
56ab(5): mov 0x20(%rsp),%rax
56b0(2): mov %edx,(%rcx)
56b2(3): mov $0x1,(%rax)
56b5(5): jmp 0xfffff52f(%rip)
56ba(7): lea 0x5e25(%rip),%rsi
56c1(3): mov %r15,%rdi
56c4(5): call 0xffffcf5c(%rip)
56c9(2): test %eax,%eax
56cb(2): jnz 0x42(%rip)
56cd(5): mov 0x18(%rsp),%rsi
56d2(3): mov 0x8(%rsi),%eax
56d5(3): mov 0x4(%rsi),%edx
56d8(2): mov (%rsi),%ecx
56da(4): mov %eax,0x10(%rsp)
56de(5): and $0xfffffecf,%eax
56e3(4): cmp $0x0,(%rsp)
56e7(6): jz 0xae(%rip)
56ed(5): or $0x120,%eax
56f2(3): or $0x20,%ecx
56f5(3): or $0x1,%edx
56f8(3): mov %eax,0x8(%rsi)
56fb(5): mov 0x20(%rsp),%rax
5700(2): mov %ecx,(%rsi)
5702(3): mov %edx,0x4(%rsi)
5705(3): mov $0x1,(%rax)
5708(5): jmp 0xfffff4dc(%rip)
570d(7): lea 0x5dd9(%rip),%rsi
5714(3): mov %r15,%rdi
5717(5): call 0xffffcf09(%rip)
571c(2): test %eax,%eax
571e(2): jz 0x19(%rip)
5720(7): lea 0x5dca(%rip),%rsi
5727(3): mov %r15,%rdi
572a(5): call 0xffffcef6(%rip)
572f(2): test %eax,%eax
5731(6): jnz 0x87(%rip)
5737(4): movzx (%r15),%eax
573b(2): cmp $0x72,%al
573d(2): jz 0x32(%rip)
573f(2): cmp $0x63,%al
5741(2): jnz 0x8(%rip)
5743(4): cmp $0x0,(%rsp)
5747(2): jz 0x2e(%rip)
5749(5): mov 0x18(%rsp),%rax
574e(6): mov $0x0,(%rax)
5754(4): and $0xfe,0x4(%rax)
5758(4): and $0xf8,0xc(%rax)
575c(6): mov $0x100,0x16(%rax)
5762(5): mov 0x20(%rsp),%rax
5767(3): mov $0x1,(%rax)
576a(5): jmp 0xfffff47a(%rip)
576f(4): cmp $0x0,(%rsp)
5773(2): jz 0xffffffd6(%rip)
5775(5): mov 0x18(%rsp),%rax
577a(6): or $0x526,(%rax)
5780(4): or $0x1,0x4(%rax)
5784(4): or $0x3,0xc(%rax)
5788(5): mov 0x20(%rsp),%rax
578d(3): mov $0x1,(%rax)
5790(5): jmp 0xfffff454(%rip)
5795(5): mov 0x18(%rsp),%rsi
579a(3): or $0x30,%eax
579d(3): and $0xdf,%ecx
57a0(3): and $0xfe,%edx
57a3(3): mov %eax,0x8(%rsi)
57a6(5): mov 0x20(%rsp),%rax
57ab(2): mov %ecx,(%rsi)
57ad(3): mov %edx,0x4(%rsi)
57b0(3): mov $0x1,(%rax)
57b3(5): jmp 0xfffff431(%rip)
57b8(7): lea 0x5d39(%rip),%rsi
57bf(3): mov %r15,%rdi
57c2(5): call 0xffffce5e(%rip)
57c7(2): test %eax,%eax
57c9(2): jnz 0x21(%rip)
57cb(4): cmp $0x0,(%rsp)
57cf(5): mov 0x18(%rsp),%rcx
57d4(2): mov (%rcx),%eax
57d6(2): jz 0x48(%rip)
57d8(3): or $0x8,%ah
57db(2): mov %eax,(%rcx)
57dd(5): mov 0x20(%rsp),%rax
57e2(3): mov $0x1,(%rax)
57e5(5): jmp 0xfffff3ff(%rip)
57ea(7): lea 0x5d0f(%rip),%rsi
57f1(3): mov %r15,%rdi
57f4(5): call 0xffffce2c(%rip)
57f9(2): test %eax,%eax
57fb(2): jnz 0x52(%rip)
57fd(4): cmp $0x0,(%rsp)
5801(5): mov 0x18(%rsp),%rcx
5806(3): mov 0x4(%rcx),%eax
5809(2): jz 0x2c(%rip)
580b(3): or $0x18,%ah
580e(3): mov %eax,0x4(%rcx)
5811(5): mov 0x20(%rsp),%rax
5816(3): mov $0x1,(%rax)
5819(5): jmp 0xfffff3cb(%rip)
581e(5): mov 0x18(%rsp),%rcx
5823(3): and $0xf7,%ah
5826(2): mov %eax,(%rcx)
5828(5): mov 0x20(%rsp),%rax
582d(3): mov $0x1,(%rax)
5830(5): jmp 0xfffff3b4(%rip)
5835(5): mov 0x18(%rsp),%rcx
583a(3): and $0xe7,%ah
583d(3): mov %eax,0x4(%rcx)
5840(5): mov 0x20(%rsp),%rax
5845(3): mov $0x1,(%rax)
5848(5): jmp 0xfffff39c(%rip)
584d(7): lea 0x5cb1(%rip),%rsi
5854(3): mov %r15,%rdi
5857(5): call 0xffffcdc9(%rip)
585c(2): test %eax,%eax
585e(2): jz 0x15(%rip)
5860(7): lea 0x5ca4(%rip),%rsi
5867(3): mov %r15,%rdi
586a(5): call 0xffffcdb6(%rip)
586f(2): test %eax,%eax
5871(2): jnz 0x33(%rip)
5873(4): cmp $0x0,(%rsp)
5877(5): mov 0x18(%rsp),%rsi
587c(3): mov 0x4(%rsi),%eax
587f(3): mov 0xc(%rsi),%ecx
5882(2): mov (%rsi),%edx
5884(2): jz 0x73(%rip)
5886(3): and $0xfd,%eax
5889(3): and $0xfb,%ecx
588c(3): and $0xfd,%dh
588f(3): mov %eax,0x4(%rsi)
5892(5): mov 0x20(%rsp),%rax
5897(3): mov %ecx,0xc(%rsi)
589a(2): mov %edx,(%rsi)
589c(3): mov $0x1,(%rax)
589f(5): jmp 0xfffff345(%rip)
58a4(7): lea 0x5c66(%rip),%rsi
58ab(3): mov %r15,%rdi
58ae(5): call 0xffffcd72(%rip)
58b3(2): test %eax,%eax
58b5(2): jz 0x65(%rip)
58b7(7): lea 0x5c57(%rip),%rsi
58be(3): mov %r15,%rdi
58c1(5): call 0xffffcd5f(%rip)
58c6(2): test %eax,%eax
58c8(6): jnz 0xfffff932(%rip)
58ce(5): mov 0x18(%rsp),%rax
58d3(6): and $0xfffff7ff,(%rax)
58d9(4): mov $0x3,0x11(%rax)
58dd(6): mov $0x157f,0x13(%rax)
58e3(7): or $0xa10,0xc(%rax)
58ea(5): mov 0x20(%rsp),%rax
58ef(3): mov $0x1,(%rax)
58f2(5): jmp 0xfffff2f2(%rip)
58f7(5): mov 0x18(%rsp),%rsi
58fc(3): or $0x2,%eax
58ff(3): or $0x4,%ecx
5902(3): or $0x2,%dh
5905(3): mov %eax,0x4(%rsi)
5908(5): mov 0x20(%rsp),%rax
590d(3): mov %ecx,0xc(%rsi)
5910(2): mov %edx,(%rsi)
5912(3): mov $0x1,(%rax)
5915(5): jmp 0xfffff2cf(%rip)
591a(5): mov 0x18(%rsp),%rax
591f(7): or $0xa10,0xc(%rax)
5926(5): mov 0x20(%rsp),%rax
592b(3): mov $0x1,(%rax)
592e(5): jmp 0xfffff2b6(%rip)

"close_stdout_set_file_name" :
5940(7): mov %rdi,0x20b8c9(%rip)
5947(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5950(7): mov %dil,0x20b8b1(%rip)
5957(1): ret near (%rsp)

"close_stdout" :
5960(1): push %rbp
5961(1): push %rbx
5962(4): sub $0x8,%rsp
5966(7): mov 0x20b73b(%rip),%rdi
596d(5): call 0x3683(%rip)
5972(2): test %eax,%eax
5974(2): jz 0x18(%rip)
5976(5): call 0xffffcada(%rip)
597b(7): cmp $0x0,0x20b886(%rip)
5982(3): mov %rax,%rbx
5985(2): jz 0x1e(%rip)
5987(3): cmp $0x20,(%rax)
598a(2): jnz 0x19(%rip)
598c(7): mov 0x20b76d(%rip),%rdi
5993(5): call 0x365d(%rip)
5998(2): test %eax,%eax
599a(2): jnz 0x48(%rip)
599c(4): add $0x8,%rsp
59a0(1): pop %rbx
59a1(1): pop %rbp
59a2(1): ret near (%rsp)
59a3(7): lea 0x8112(%rip),%rsi
59aa(2): xor %edi,%edi
59ac(5): mov $0x5,%edx
59b1(5): call 0xffffcb3f(%rip)
59b6(7): mov 0x20b853(%rip),%rdi
59bd(3): mov %rax,%rbp
59c0(3): test %rdi,%rdi
59c3(2): jz 0x2a(%rip)
59c5(5): call 0x1bbb(%rip)
59ca(2): mov (%rbx),%esi
59cc(7): lea 0x80f5(%rip),%rdx
59d3(3): mov %rax,%rcx
59d6(3): mov %rbp,%r8
59d9(2): xor %edi,%edi
59db(2): xor %eax,%eax
59dd(5): call 0xffffcd03(%rip)
59e2(6): mov 0x20b638(%rip),%edi
59e8(5): call 0xffffca88(%rip)
59ed(2): mov (%rbx),%esi
59ef(7): lea 0x80d6(%rip),%rdx
59f6(3): mov %rax,%rcx
59f9(2): xor %edi,%edi
59fb(2): xor %eax,%eax
59fd(5): call 0xffffcce3(%rip)
5a02(2): jmp 0xffffffe0(%rip)

"fd_reopen" :
5a10(2): push %r13
5a12(2): push %r12
5a14(2): xor %eax,%eax
5a16(1): push %rbp
5a17(1): push %rbx
5a18(2): mov %edi,%ebp
5a1a(3): mov %rsi,%rdi
5a1d(2): mov %edx,%esi
5a1f(2): mov %ecx,%edx
5a21(4): sub $0x8,%rsp
5a25(5): call 0xffffcceb(%rip)
5a2a(2): cmp %eax,%ebp
5a2c(2): mov %eax,%ebx
5a2e(2): jz 0x2b(%rip)
5a30(2): test %eax,%eax
5a32(2): js 0x27(%rip)
5a34(2): mov %ebp,%esi
5a36(2): mov %eax,%edi
5a38(5): call 0xffffcb18(%rip)
5a3d(3): mov %eax,%r12d
5a40(5): call 0xffffca10(%rip)
5a45(3): mov (%rax),%r13d
5a48(3): mov %rax,%rbp
5a4b(2): mov %ebx,%edi
5a4d(5): call 0xffffcb93(%rip)
5a52(3): mov %r12d,%ebx
5a55(4): mov %r13d,0x0(%rbp)
5a59(4): add $0x8,%rsp
5a5d(2): mov %ebx,%eax
5a5f(1): pop %rbx
5a60(1): pop %rbp
5a61(2): pop %r12
5a63(2): pop %r13
5a65(1): ret near (%rsp)

"set_program_name" :
5a70(3): test %rdi,%rdi
5a73(1): push %rbx
5a74(2): jz 0x79(%rip)
5a76(5): mov $0x2f,%esi
5a7b(3): mov %rdi,%rbx
5a7e(5): call 0xffffcb02(%rip)
5a83(3): test %rax,%rax
5a86(2): jz 0x57(%rip)
5a88(4): lea 0x1(%rax),%r8
5a8c(3): mov %r8,%rdx
5a8f(3): sub %rbx,%rdx
5a92(4): cmp $0x6,%rdx
5a96(2): jle 0x47(%rip)
5a98(4): lea 0xfffffffa(%rax),%rsi
5a9c(7): lea 0x8065(%rip),%rdi
5aa3(5): mov $0x7,%ecx
5aa8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5aaa(3): setnbe %dl
5aad(3): sbb $0x0,%dl
5ab0(2): test %dl,%dl
5ab2(2): jnz 0x2b(%rip)
5ab4(7): lea 0x8055(%rip),%rdi
5abb(5): mov $0x3,%ecx
5ac0(3): mov %r8,%rsi
5ac3(3): mov %r8,%rbx
5ac6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5ac8(3): setnbe %dl
5acb(3): sbb $0x0,%dl
5ace(2): test %dl,%dl
5ad0(2): jnz 0xd(%rip)
5ad2(4): lea 0x4(%rax),%rbx
5ad6(7): mov %rbx,0x20b5c3(%rip)
5add(7): mov %rbx,0x20b734(%rip)
5ae4(7): mov %rbx,0x20b5d5(%rip)
5aeb(1): pop %rbx
5aec(1): ret near (%rsp)
5aed(7): mov 0x20b60c(%rip),%rcx
5af4(7): lea 0x7fd5(%rip),%rdi
5afb(5): mov $0x37,%edx
5b00(5): mov $0x1,%esi
5b05(5): call 0xffffcc6b(%rip)
5b0a(5): call 0xffffc936(%rip)

"gettext_quote.part.1" :
5b10(1): push %rbp
5b11(1): push %rbx
5b12(3): mov %rdi,%rbp
5b15(2): mov %esi,%ebx
5b17(4): sub $0x8,%rsp
5b1b(5): call 0x35b5(%rip)
5b20(3): movzx (%rax),%edx
5b23(3): and $0xdf,%edx
5b26(3): cmp $0x55,%dl
5b29(2): jz 0x77(%rip)
5b2b(3): cmp $0x47,%dl
5b2e(2): jz 0x22(%rip)
5b30(7): lea 0x7fec(%rip),%rax
5b37(7): lea 0x7fe7(%rip),%rdx
5b3e(3): cmp $0x9,%ebx
5b41(4): cmovne %rdx,%rax
5b45(4): add $0x8,%rsp
5b49(1): pop %rbx
5b4a(1): pop %rbp
5b4b(1): ret near (%rsp)
5b4c(4): nop 0x0(%rax)
5b50(4): movzx 0x1(%rax),%edx
5b54(3): and $0xdf,%edx
5b57(3): cmp $0x42,%dl
5b5a(2): jnz 0xffffffd6(%rip)
5b5c(4): cmp $0x31,0x2(%rax)
5b60(2): jnz 0xffffffd0(%rip)
5b62(4): cmp $0x38,0x3(%rax)
5b66(2): jnz 0xffffffca(%rip)
5b68(4): cmp $0x30,0x4(%rax)
5b6c(2): jnz 0xffffffc4(%rip)
5b6e(4): cmp $0x33,0x5(%rax)
5b72(2): jnz 0xffffffbe(%rip)
5b74(4): cmp $0x30,0x6(%rax)
5b78(2): jnz 0xffffffb8(%rip)
5b7a(4): cmp $0x0,0x7(%rax)
5b7e(2): jnz 0xffffffb2(%rip)
5b80(4): cmp $0x60,0x0(%rbp)
5b84(7): lea 0x7f91(%rip),%rax
5b8b(7): lea 0x7f8e(%rip),%rdx
5b92(4): cmovne %rdx,%rax
5b96(4): add $0x8,%rsp
5b9a(1): pop %rbx
5b9b(1): pop %rbp
5b9c(1): ret near (%rsp)
5b9d(3): nop (%rax)
5ba0(4): movzx 0x1(%rax),%edx
5ba4(3): and $0xdf,%edx
5ba7(3): cmp $0x54,%dl
5baa(2): jnz 0xffffff86(%rip)
5bac(4): movzx 0x2(%rax),%edx
5bb0(3): and $0xdf,%edx
5bb3(3): cmp $0x46,%dl
5bb6(6): jnz 0xffffff7a(%rip)
5bbc(4): cmp $0x2d,0x3(%rax)
5bc0(6): jnz 0xffffff70(%rip)
5bc6(4): cmp $0x38,0x4(%rax)
5bca(6): jnz 0xffffff66(%rip)
5bd0(4): cmp $0x0,0x5(%rax)
5bd4(6): jnz 0xffffff5c(%rip)
5bda(4): cmp $0x60,0x0(%rbp)
5bde(7): lea 0x7f2f(%rip),%rax
5be5(7): lea 0x7f2c(%rip),%rdx
5bec(4): cmovne %rdx,%rax
5bf0(4): add $0x8,%rsp
5bf4(1): pop %rbx
5bf5(1): pop %rbp
5bf6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
5c00(2): push %r15
5c02(2): push %r14
5c04(3): mov %r8d,%r15d
5c07(2): push %r13
5c09(2): push %r12
5c0b(3): mov %rdi,%r14
5c0e(1): push %rbp
5c0f(1): push %rbx
5c10(3): mov %r9d,%ebx
5c13(3): mov %rsi,%r13
5c16(3): mov %rcx,%rbp
5c19(3): and $0x2,%ebx
5c1c(7): sub $0xb8,%rsp
5c23(8): mov 0xf0(%rsp),%rax
5c2b(5): mov %rdx,0x10(%rsp)
5c30(5): mov %r8d,0x8(%rsp)
5c35(5): mov %r9d,0x78(%rsp)
5c3a(5): mov %rax,0x20(%rsp)
5c3f(8): mov 0xf8(%rsp),%rax
5c47(5): mov %rax,0x68(%rsp)
5c4c(8): mov 0x100(%rsp),%rax
5c54(5): mov %rax,0x60(%rsp)
5c59(9): mov $0x28,%rax
5c62(8): mov %rax,0xa8(%rsp)
5c6a(2): xor %eax,%eax
5c6c(5): call 0xffffc894(%rip)
5c71(4): cmp $0xa,%r15d
5c75(5): mov %rax,0x58(%rsp)
5c7a(6): jnbe 0x11b5(%rip)
5c80(7): lea 0x7ef9(%rip),%rcx
5c87(3): mov %r15d,%edx
5c8a(4): movsxd 0x0(%rcx,%rdx,4),%rax
5c8e(3): add %rcx,%rax
5c91(2): jmp %rax
5c93(5): mov $0x1,0xe(%rsp)
5c98(5): mov $0x0,0x7c(%rsp)
5c9d(3): xor %r12d,%r12d
5ca0(9): mov $0x0,0x50(%rsp)
5ca9(5): mov $0x1,0xf(%rsp)
5cae(5): mov $0x0,0xd(%rsp)
5cb3(7): lea 0x7e6b(%rip),%rax
5cba(9): mov $0x1,0x18(%rsp)
5cc3(3): xor %r15d,%r15d
5cc6(8): mov $0x2,0x8(%rsp)
5cce(5): mov %rax,0x48(%rsp)
5cd3(3): xor %r11d,%r11d
5cd6(3): mov %rbp,%rax
5cd9(3): mov %r12d,%r8d
5cdc(3): mov %r11,%rbp
5cdf(3): mov %rax,%r11
5ce2(6): nop 0x0(%rax,%rax,1)
5ce8(3): cmp %rbp,%r11
5ceb(4): setnz %r12b
5cef(4): cmp $0xffffffff,%r11
5cf3(2): jnz 0xf(%rip)
5cf5(5): mov 0x10(%rsp),%rax
5cfa(4): cmp $0x0,0x0(%rax,%rbp,1)
5cfe(4): setnz %r12b
5d02(3): test %r12b,%r12b
5d05(6): jz 0x65b(%rip)
5d0b(5): cmp $0x2,0x8(%rsp)
5d10(5): mov 0x10(%rsp),%rdi
5d15(4): lea 0x0(%rdi,%rbp,1),%r9
5d19(3): setnz %al
5d1c(4): and 0xd(%rsp),%al
5d20(3): mov %eax,%r10d
5d23(6): jz 0xad(%rip)
5d29(5): mov 0x18(%rsp),%rax
5d2e(3): test %rax,%rax
5d31(6): jz 0x42f(%rip)
5d37(4): cmp $0xffffffff,%r11
5d3b(5): lea 0x0(%rbp,%rax,1),%rbx
5d40(2): jnz 0x30(%rip)
5d42(4): cmp $0x1,%rax
5d46(2): jbe 0x2a(%rip)
5d48(5): mov %r8b,0x38(%rsp)
5d4d(5): mov %r10b,0x30(%rsp)
5d52(5): mov %r9,0x28(%rsp)
5d57(5): call 0xffffc7b9(%rip)
5d5c(6): movzx 0x38(%rsp),%r8d
5d62(6): movzx 0x30(%rsp),%r10d
5d68(3): mov %rax,%r11
5d6b(5): mov 0x28(%rsp),%r9
5d70(3): cmp %r11,%rbx
5d73(5): mov %r10b,0x28(%rsp)
5d78(6): jnbe 0x5b8(%rip)
5d7e(5): mov 0x18(%rsp),%rdx
5d83(5): mov 0x48(%rsp),%rsi
5d88(3): mov %r9,%rdi
5d8b(5): mov %r11,0x40(%rsp)
5d90(5): mov %r8b,0x38(%rsp)
5d95(5): mov %r9,0x30(%rsp)
5d9a(5): call 0xffffc856(%rip)
5d9f(2): test %eax,%eax
5da1(5): mov 0x30(%rsp),%r9
5da6(6): movzx 0x38(%rsp),%r8d
5dac(5): mov 0x40(%rsp),%r11
5db1(6): jnz 0x57f(%rip)
5db7(5): cmp $0x0,0xf(%rsp)
5dbc(6): movzx 0x28(%rsp),%r10d
5dc2(6): jnz 0xf83(%rip)
5dc8(8): nop 0x0(%rax,%rax,1)
5dd0(4): movzx (%r9),%ebx
5dd4(3): cmp $0x7e,%bl
5dd7(6): jnbe 0x321(%rip)
5ddd(7): lea 0x7dc8(%rip),%rcx
5de4(3): movzx %bl,%edx
5de7(4): movsxd 0x0(%rcx,%rdx,4),%rax
5deb(3): add %rcx,%rax
5dee(2): jmp %rax
5df0(3): xor %r10d,%r10d
5df3(4): cmp $0x1,%r11
5df7(3): setnz %al
5dfa(4): cmp $0xffffffff,%r11
5dfe(2): jnz 0xe(%rip)
5e00(5): mov 0x10(%rsp),%rax
5e05(4): cmp $0x0,0x1(%rax)
5e09(3): setnz %al
5e0c(5): cmp $0x2,0x8(%rsp)
5e11(3): setz %dl
5e14(2): test %al,%al
5e16(6): jz 0x252(%rip)
5e1c(3): xor %r12d,%r12d
5e1f(2): xor %eax,%eax
5e21(7): nop 0x0(%rax)
5e28(5): cmp $0x1,0xd(%rsp)
5e2d(6): jnz 0x115(%rip)
5e33(2): test %dl,%dl
5e35(6): jnz 0x10d(%rip)
5e3b(5): mov 0x20(%rsp),%rsi
5e40(3): test %rsi,%rsi
5e43(2): jz 0x16(%rip)
5e45(2): mov %ebx,%edx
5e47(3): shr $0x5,%dl
5e4a(3): movzx %dl,%edx
5e4d(3): mov 0x0(%rsi,%rdx,4),%edx
5e50(3): bt %ebx,%edx
5e53(6): jb 0x150(%rip)
5e59(3): test %r10b,%r10b
5e5c(6): jnz 0x147(%rip)
5e62(3): xor $0x1,%eax
5e65(4): add $0x1,%rbp
5e69(3): and %r8d,%eax
5e6c(2): test %al,%al
5e6e(2): jz 0x22(%rip)
5e70(3): cmp %r15,%r13
5e73(2): jbe 0x7(%rip)
5e75(5): mov $0x27,0x0(%r14,%r15,1)
5e7a(4): lea 0x1(%r15),%rax
5e7e(3): cmp %rax,%r13
5e81(2): jbe 0x8(%rip)
5e83(6): mov $0x27,0x1(%r14,%r15,1)
5e89(4): add $0x2,%r15
5e8d(3): xor %r8d,%r8d
5e90(3): cmp %r13,%r15
5e93(2): jnb 0x6(%rip)
5e95(4): mov %bl,0x0(%r14,%r15,1)
5e99(5): movzx 0xe(%rsp),%edi
5e9e(4): add $0x1,%r15
5ea2(5): mov $0x0,%eax
5ea7(3): test %r12b,%r12b
5eaa(3): cmove %eax,%edi
5ead(5): mov %dil,0xe(%rsp)
5eb2(5): jmp 0xfffffe36(%rip)
5eb7(9): nop 0x0(%rax,%rax,1)
5ec0(3): xor %r10d,%r10d
5ec3(4): mov 0x8(%rsp),%eax
5ec7(3): cmp $0x2,%eax
5eca(6): jz 0x5be(%rip)
5ed0(3): cmp $0x5,%eax
5ed3(6): jz 0x575(%rip)
5ed9(3): cmp $0x2,%eax
5edc(5): mov $0x3f,%ebx
5ee1(3): setz %dl
5ee4(3): xor %r12d,%r12d
5ee7(2): xor %eax,%eax
5ee9(5): jmp 0xffffff3f(%rip)
5eee(2): nop 
5ef0(3): xor %r10d,%r10d
5ef3(5): cmp $0x2,0x8(%rsp)
5ef8(6): jz 0x508(%rip)
5efe(5): mov %r12b,0x7c(%rsp)
5f03(2): xor %edx,%edx
5f05(2): xor %eax,%eax
5f07(5): mov $0x27,%ebx
5f0c(5): jmp 0xffffff1c(%rip)
5f11(7): nop 0x0(%rax)
5f18(5): mov $0x9,%edx
5f1d(5): mov $0x74,%ebx
5f22(5): cmp $0x2,0x8(%rsp)
5f27(3): setz %al
5f2a(4): and 0xf(%rsp),%al
5f2e(6): jnz 0x150(%rip)
5f34(5): cmp $0x0,0xd(%rsp)
5f39(2): jnz 0x67(%rip)
5f3b(2): mov %edx,%ebx
5f3d(3): xor %r12d,%r12d
5f40(2): xor %eax,%eax
5f42(5): cmp $0x0,0xf(%rsp)
5f47(6): jnz 0xfffffef4(%rip)
5f4d(5): jmp 0xffffff0c(%rip)
5f52(6): nop 0x0(%rax,%rax,1)
5f58(5): mov $0x8,%edx
5f5d(5): mov $0x62,%ebx
5f62(2): jmp 0xffffffd2(%rip)
5f64(4): nop 0x0(%rax)
5f68(5): cmp $0x2,0x8(%rsp)
5f6d(6): jz 0x3d3(%rip)
5f73(5): cmp $0x0,0xd(%rsp)
5f78(6): jz 0x218(%rip)
5f7e(5): cmp $0x0,0xf(%rsp)
5f83(6): jz 0x20d(%rip)
5f89(6): cmp $0x0,0x18(%rsp)
5f8f(6): jnz 0x3bc(%rip)
5f95(5): mov $0x5c,%ebx
5f9a(6): nop 0x0(%rax,%rax,1)
5fa0(3): xor %r12d,%r12d
5fa3(5): cmp $0x2,0x8(%rsp)
5fa8(3): setz %dl
5fab(5): cmp $0x0,0xf(%rsp)
5fb0(2): mov %edx,%eax
5fb2(6): jnz 0x856(%rip)
5fb8(3): mov %r8d,%eax
5fbb(3): xor $0x1,%eax
5fbe(2): and %dl,%al
5fc0(2): jz 0x31(%rip)
5fc2(3): cmp %r15,%r13
5fc5(2): jbe 0x7(%rip)
5fc7(5): mov $0x27,0x0(%r14,%r15,1)
5fcc(4): lea 0x1(%r15),%rdx
5fd0(3): cmp %rdx,%r13
5fd3(2): jbe 0x8(%rip)
5fd5(6): mov $0x24,0x1(%r14,%r15,1)
5fdb(4): lea 0x2(%r15),%rdx
5fdf(3): cmp %rdx,%r13
5fe2(2): jbe 0x8(%rip)
5fe4(6): mov $0x27,0x2(%r14,%r15,1)
5fea(4): add $0x3,%r15
5fee(3): mov %eax,%r8d
5ff1(3): cmp %r15,%r13
5ff4(2): jbe 0x7(%rip)
5ff6(5): mov $0x5c,0x0(%r14,%r15,1)
5ffb(4): add $0x1,%r15
5fff(4): add $0x1,%rbp
6003(5): jmp 0xfffffe8d(%rip)
6008(8): nop 0x0(%rax,%rax,1)
6010(5): cmp $0x0,0xd(%rsp)
6015(6): jnz 0x1ce(%rip)
601b(2): xor %edx,%edx
601d(5): test $0x1,0x78(%rsp)
6022(6): jz 0xffffff19(%rip)
6028(4): add $0x1,%rbp
602c(5): jmp 0xfffffcbc(%rip)
6031(7): nop 0x0(%rax)
6038(5): cmp $0x2,0x8(%rsp)
603d(3): setz %dl
6040(2): xor %eax,%eax
6042(5): jmp 0xfffffde6(%rip)
6047(9): nop 0x0(%rax,%rax,1)
6050(5): mov $0x7,%edx
6055(5): mov $0x61,%ebx
605a(5): jmp 0xfffffeda(%rip)
605f(1): nop 
6060(5): cmp $0x2,0x8(%rsp)
6065(3): setz %dl
6068(3): test %rbp,%rbp
606b(6): jnz 0xfffffdb1(%rip)
6071(5): movzx 0xf(%rsp),%eax
6076(2): and %dl,%al
6078(6): jz 0xfffffdb0(%rip)
607e(3): mov %r11,%rbp
6081(8): mov $0x2,0x8(%rsp)
6089(5): jmp 0x700(%rip)
608e(2): nop 
6090(5): cmp $0x2,0x8(%rsp)
6095(3): setz %dl
6098(3): xor %r12d,%r12d
609b(2): jmp 0xffffffd6(%rip)
609d(3): nop (%rax)
60a0(5): cmp $0x2,0x8(%rsp)
60a5(5): mov $0x20,%ebx
60aa(3): setz %dl
60ad(2): jmp 0xffffffc4(%rip)
60af(1): nop 
60b0(5): mov $0xd,%edx
60b5(5): mov $0x72,%ebx
60ba(5): jmp 0xfffffe68(%rip)
60bf(1): nop 
60c0(5): mov $0xc,%edx
60c5(5): mov $0x66,%ebx
60ca(5): jmp 0xfffffe6a(%rip)
60cf(1): nop 
60d0(5): mov $0xb,%edx
60d5(5): mov $0x76,%ebx
60da(5): jmp 0xfffffe5a(%rip)
60df(1): nop 
60e0(5): mov $0xa,%edx
60e5(5): mov $0x6e,%ebx
60ea(5): jmp 0xfffffe38(%rip)
60ef(1): nop 
60f0(3): xor %r10d,%r10d
60f3(5): nop 0x0(%rax,%rax,1)
60f8(6): cmp $0x1,0x58(%rsp)
60fe(6): jnz 0x3aa(%rip)
6104(5): mov %r11,0x38(%rsp)
6109(5): mov %r8b,0x30(%rsp)
610e(5): mov %r10b,0x28(%rsp)
6113(5): call 0xffffc69d(%rip)
6118(3): mov (%rax),%rcx
611b(3): movzx %bl,%edx
611e(6): movzx 0x28(%rsp),%r10d
6124(6): movzx 0x30(%rsp),%r8d
612a(5): mov 0x38(%rsp),%r11
612f(5): mov $0x1,%edi
6134(4): movzx 0x0(%rcx,%rdx,2),%eax
6138(4): and $0x4000,%ax
613c(4): setnz %r12b
6140(3): setz %al
6143(4): and 0xd(%rsp),%al
6147(2): test %al,%al
6149(6): jnz 0x998(%rip)
614f(5): cmp $0x2,0x8(%rsp)
6154(3): setz %dl
6157(5): jmp 0xfffffcd1(%rip)
615c(4): nop 0x0(%rax)
6160(4): movzx (%r9),%ebx
6164(3): cmp $0x7e,%bl
6167(2): jnbe 0xffffff89(%rip)
6169(7): lea 0x7c38(%rip),%rcx
6170(3): movzx %bl,%edx
6173(4): movsxd 0x0(%rcx,%rdx,4),%rax
6177(3): add %rcx,%rax
617a(2): jmp %rax
617c(4): nop 0x0(%rax)
6180(3): xor %r10d,%r10d
6183(5): cmp $0x0,0xd(%rsp)
6188(6): jnz 0xfffffdf6(%rip)
618e(2): nop 
6190(5): mov $0x5c,%edx
6195(5): mov $0x5c,%ebx
619a(5): jmp 0xfffffd9a(%rip)
619f(1): nop 
61a0(5): mov $0xc,%edx
61a5(3): xor %r10d,%r10d
61a8(5): mov $0x66,%ebx
61ad(5): jmp 0xfffffd87(%rip)
61b2(6): nop 0x0(%rax,%rax,1)
61b8(5): mov $0xa,%edx
61bd(3): xor %r10d,%r10d
61c0(5): mov $0x6e,%ebx
61c5(5): jmp 0xfffffd5d(%rip)
61ca(6): nop 0x0(%rax,%rax,1)
61d0(5): mov $0x61,%ebx
61d5(5): jmp 0xfffffdcb(%rip)
61da(6): nop 0x0(%rax,%rax,1)
61e0(3): xor %r10d,%r10d
61e3(5): cmp $0x2,0x8(%rsp)
61e8(3): setz %dl
61eb(5): cmp $0x0,0xf(%rsp)
61f0(6): jnz 0xb9a(%rip)
61f6(3): mov %r8d,%eax
61f9(3): mov %r15,%rcx
61fc(3): xor $0x1,%eax
61ff(2): and %dl,%al
6201(2): jz 0x2f(%rip)
6203(3): cmp %r15,%r13
6206(2): jbe 0x7(%rip)
6208(5): mov $0x27,0x0(%r14,%r15,1)
620d(4): lea 0x1(%r15),%rcx
6211(3): cmp %rcx,%r13
6214(2): jbe 0x8(%rip)
6216(6): mov $0x24,0x1(%r14,%r15,1)
621c(4): lea 0x2(%r15),%rcx
6220(3): cmp %rcx,%r13
6223(6): jnbe 0x636(%rip)
6229(4): lea 0x3(%r15),%rcx
622d(3): mov %eax,%r8d
6230(3): cmp %rcx,%r13
6233(2): jbe 0x7(%rip)
6235(5): mov $0x5c,0x0(%r14,%rcx,1)
623a(5): cmp $0x2,0x8(%rsp)
623f(4): lea 0x1(%rcx),%r15
6243(6): jz 0x606(%rip)
6249(4): lea 0x1(%rbp),%rax
624d(3): cmp %r11,%rax
6250(2): jnb 0x1b(%rip)
6252(5): mov 0x10(%rsp),%rax
6257(5): movzx 0x1(%rax,%rbp,1),%eax
625c(4): mov %al,0x28(%rsp)
6260(3): sub $0x30,%eax
6263(2): cmp $0x9,%al
6265(6): jbe 0x834(%rip)
626b(3): mov %r12d,%eax
626e(5): mov $0x30,%ebx
6273(3): xor %r12d,%r12d
6276(5): jmp 0xfffffbb2(%rip)
627b(5): nop 0x0(%rax,%rax,1)
6280(5): cmp $0x2,0x8(%rsp)
6285(3): mov %r10d,%r12d
6288(3): setz %dl
628b(3): xor %r10d,%r10d
628e(2): xor %eax,%eax
6290(5): jmp 0xfffffb98(%rip)
6295(3): nop (%rax)
6298(5): cmp $0x2,0x8(%rsp)
629d(3): setz %dl
62a0(3): xor %r10d,%r10d
62a3(5): jmp 0xfffffdc5(%rip)
62a8(8): nop 0x0(%rax,%rax,1)
62b0(5): cmp $0x2,0x8(%rsp)
62b5(3): setz %dl
62b8(3): xor %r10d,%r10d
62bb(3): xor %r12d,%r12d
62be(5): jmp 0xfffffdb3(%rip)
62c3(5): nop 0x0(%rax,%rax,1)
62c8(5): cmp $0x2,0x8(%rsp)
62cd(3): mov %r10d,%r12d
62d0(5): mov $0x20,%ebx
62d5(3): setz %dl
62d8(3): xor %r10d,%r10d
62db(5): jmp 0xfffffd96(%rip)
62e0(5): mov $0xd,%edx
62e5(3): xor %r10d,%r10d
62e8(5): mov $0x72,%ebx
62ed(5): jmp 0xfffffc35(%rip)
62f2(6): nop 0x0(%rax,%rax,1)
62f8(5): mov $0x76,%ebx
62fd(5): jmp 0xfffffca3(%rip)
6302(6): nop 0x0(%rax,%rax,1)
6308(5): mov $0x9,%edx
630d(3): xor %r10d,%r10d
6310(5): mov $0x74,%ebx
6315(5): jmp 0xfffffc0d(%rip)
631a(6): nop 0x0(%rax,%rax,1)
6320(5): mov $0x62,%ebx
6325(5): jmp 0xfffffc7b(%rip)
632a(6): nop 0x0(%rax,%rax,1)
6330(3): xor %r10d,%r10d
6333(5): jmp 0xfffffa9d(%rip)
6338(8): nop 0x0(%rax,%rax,1)
6340(5): cmp $0x0,0xf(%rsp)
6345(6): jnz 0x96b(%rip)
634b(4): add $0x1,%rbp
634f(3): mov %r8d,%eax
6352(3): xor %r12d,%r12d
6355(5): mov $0x5c,%ebx
635a(5): jmp 0xfffffb12(%rip)
635f(1): nop 
6360(5): cmp $0x2,0x8(%rsp)
6365(5): movzx 0xf(%rsp),%ebx
636a(3): mov %r8d,%r12d
636d(3): mov %r11,%rbp
6370(3): setz %dl
6373(2): mov %ebx,%eax
6375(3): test %r15,%r15
6378(3): setz %cl
637b(2): and %edx,%eax
637d(2): and %cl,%al
637f(6): jnz 0xa67(%rip)
6385(2): mov %ebx,%eax
6387(3): xor $0x1,%eax
638a(2): and %al,%dl
638c(6): jz 0x970(%rip)
6392(5): cmp $0x0,0x7c(%rsp)
6397(6): jz 0x963(%rip)
639d(5): cmp $0x0,0xe(%rsp)
63a2(6): jnz 0x9fb(%rip)
63a8(3): test %r13,%r13
63ab(3): setz %al
63ae(6): cmp $0x0,0x50(%rsp)
63b4(3): setnz %dl
63b7(2): and %dl,%al
63b9(6): jz 0xa23(%rip)
63bf(5): mov 0x50(%rsp),%r13
63c4(7): lea 0x775a(%rip),%rbx
63cb(4): mov $0x27,(%r14)
63cf(8): mov $0x2,0x8(%rsp)
63d7(6): mov $0x1,%r15d
63dd(9): mov $0x1,0x18(%rsp)
63e6(5): mov $0x0,0xf(%rsp)
63eb(5): mov %rbx,0x48(%rsp)
63f0(4): mov %al,0x7c(%rsp)
63f4(5): jmp 0xfffff8df(%rip)
63f9(7): nop 0x0(%rax)
6400(5): cmp $0x0,0xf(%rsp)
6405(6): jnz 0x8ab(%rip)
640b(3): test %r13,%r13
640e(6): jz 0x402(%rip)
6414(2): xor %edx,%edx
6416(6): cmp $0x0,0x50(%rsp)
641c(6): jnz 0x3f4(%rip)
6422(5): mov %r13,0x50(%rsp)
6427(4): add $0x3,%r15
642b(2): xor %eax,%eax
642d(5): mov %r12b,0x7c(%rsp)
6432(3): xor %r8d,%r8d
6435(3): mov %rdx,%r13
6438(5): mov $0x27,%ebx
643d(5): jmp 0xfffffa1c(%rip)
6442(6): nop 0x0(%rax,%rax,1)
6448(5): test $0x4,0x78(%rsp)
644d(2): jz 0x23(%rip)
644f(4): lea 0x2(%rbp),%rcx
6453(3): cmp %r11,%rcx
6456(2): jnb 0x1a(%rip)
6458(5): mov 0x10(%rsp),%rax
645d(5): cmp $0x3f,0x1(%rax,%rbp,1)
6462(6): jz 0x790(%rip)
6468(8): nop 0x0(%rax,%rax,1)
6470(2): xor %edx,%edx
6472(3): xor %r12d,%r12d
6475(2): xor %eax,%eax
6477(5): mov $0x3f,%ebx
647c(5): jmp 0xfffff9ac(%rip)
6481(7): nop 0x0(%rax)
6488(5): cmp $0x0,0xf(%rsp)
648d(6): jnz 0x823(%rip)
6493(3): xor %r12d,%r12d
6496(2): xor %eax,%eax
6498(5): mov $0x3f,%ebx
649d(5): jmp 0xfffff9bc(%rip)
64a2(6): nop 0x0(%rax,%rax,1)
64a8(8): lea 0xa0(%rsp),%rax
64b0(4): cmp $0xffffffff,%r11
64b4(c): mov $0x0,0xa0(%rsp)
64c0(5): mov %rax,0x28(%rsp)
64c5(2): jnz 0x2f(%rip)
64c7(5): mov 0x10(%rsp),%rdi
64cc(5): mov %r8b,0x40(%rsp)
64d1(5): mov %r10b,0x38(%rsp)
64d6(5): mov %r9,0x30(%rsp)
64db(5): call 0xffffc035(%rip)
64e0(6): movzx 0x40(%rsp),%r8d
64e6(6): movzx 0x38(%rsp),%r10d
64ec(3): mov %rax,%r11
64ef(5): mov 0x30(%rsp),%r9
64f4(8): lea 0x9c(%rsp),%rax
64fc(2): xor %ecx,%ecx
64fe(4): mov %bl,0x7e(%rsp)
6502(5): mov %r8b,0x7d(%rsp)
6507(3): mov %rcx,%rbx
650a(8): mov %r9,0x88(%rsp)
6512(5): mov %rax,0x38(%rsp)
6517(5): mov %r10b,0x7f(%rsp)
651c(8): mov %r15,0x80(%rsp)
6524(5): mov %r14,0x40(%rsp)
6529(5): mov %r13,0x70(%rsp)
652e(5): mov %r11,0x30(%rsp)
6533(5): mov 0x10(%rsp),%rax
6538(5): lea 0x0(%rbp,%rbx,1),%r14
653d(5): mov 0x30(%rsp),%rdx
6542(5): mov 0x28(%rsp),%rcx
6547(5): mov 0x38(%rsp),%rdi
654c(4): lea 0x0(%rax,%r14,1),%r13
6550(3): sub %r14,%rdx
6553(3): mov %r13,%rsi
6556(5): call 0x298a(%rip)
655b(3): test %rax,%rax
655e(3): mov %rax,%r15
6561(2): jz 0x50(%rip)
6563(4): cmp $0xffffffff,%rax
6567(6): jz 0x61e(%rip)
656d(4): cmp $0xfffffffe,%rax
6571(6): jz 0x5a0(%rip)
6577(5): cmp $0x2,0x8(%rsp)
657c(3): setz %al
657f(4): and 0xf(%rsp),%al
6583(6): jnz 0x19d(%rip)
6589(7): mov 0x9c(%rsp),%edi
6590(5): call 0xffffc210(%rip)
6595(5): mov 0x28(%rsp),%rdi
659a(2): test %eax,%eax
659c(5): mov $0x0,%eax
65a1(4): cmove %eax,%r12d
65a5(3): add %r15,%rbx
65a8(5): call 0xffffc1e8(%rip)
65ad(2): test %eax,%eax
65af(2): jz 0xffffff84(%rip)
65b1(3): mov %r12d,%edx
65b4(3): mov %rbx,%rdi
65b7(6): movzx 0x7d(%rsp),%r8d
65bd(3): xor $0x1,%edx
65c0(5): movzx 0x7e(%rsp),%ebx
65c5(6): movzx 0x7f(%rsp),%r10d
65cb(4): and 0xd(%rsp),%dl
65cf(8): mov 0x80(%rsp),%r15
65d7(5): mov 0x40(%rsp),%r14
65dc(5): mov 0x70(%rsp),%r13
65e1(5): mov 0x30(%rsp),%r11
65e6(4): cmp $0x1,%rdi
65ea(6): jbe 0x601(%rip)
65f0(3): mov %rdi,%rcx
65f3(2): xor %esi,%esi
65f5(6): movzx 0xf(%rsp),%r9d
65fb(3): add %rbp,%rcx
65fe(5): mov 0x10(%rsp),%rdi
6603(5): jmp 0xbb(%rip)
6608(8): nop 0x0(%rax,%rax,1)
6610(5): cmp $0x2,0x8(%rsp)
6615(3): setz %al
6618(3): test %r9b,%r9b
661b(6): jnz 0x4b5(%rip)
6621(3): mov %r8d,%esi
6624(3): xor $0x1,%esi
6627(3): and %sil,%al
662a(2): jz 0x31(%rip)
662c(3): cmp %r15,%r13
662f(2): jbe 0x7(%rip)
6631(5): mov $0x27,0x0(%r14,%r15,1)
6636(4): lea 0x1(%r15),%rsi
663a(3): cmp %rsi,%r13
663d(2): jbe 0x8(%rip)
663f(6): mov $0x24,0x1(%r14,%r15,1)
6645(4): lea 0x2(%r15),%rsi
6649(3): cmp %rsi,%r13
664c(2): jbe 0x8(%rip)
664e(6): mov $0x27,0x2(%r14,%r15,1)
6654(4): add $0x3,%r15
6658(3): mov %eax,%r8d
665b(3): cmp %r15,%r13
665e(2): jbe 0x7(%rip)
6660(5): mov $0x5c,0x0(%r14,%r15,1)
6665(4): lea 0x1(%r15),%rax
6669(3): cmp %rax,%r13
666c(2): jbe 0xf(%rip)
666e(2): mov %ebx,%eax
6670(3): shr $0x6,%al
6673(3): add $0x30,%eax
6676(5): mov %al,0x1(%r14,%r15,1)
667b(4): lea 0x2(%r15),%rax
667f(3): cmp %rax,%r13
6682(2): jbe 0x12(%rip)
6684(2): mov %ebx,%eax
6686(3): shr $0x3,%al
6689(3): and $0x7,%eax
668c(3): add $0x30,%eax
668f(5): mov %al,0x2(%r14,%r15,1)
6694(3): and $0x7,%ebx
6697(4): add $0x1,%rbp
669b(4): add $0x3,%r15
669f(3): add $0x30,%ebx
66a2(3): cmp %rcx,%rbp
66a5(6): jnb 0xfffff7eb(%rip)
66ab(2): mov %edx,%esi
66ad(3): cmp %r15,%r13
66b0(2): jbe 0x6(%rip)
66b2(4): mov %bl,0x0(%r14,%r15,1)
66b6(4): movzx 0x0(%rdi,%rbp,1),%ebx
66ba(4): add $0x1,%r15
66be(2): test %dl,%dl
66c0(6): jnz 0xffffff50(%rip)
66c6(2): mov %esi,%eax
66c8(3): xor $0x1,%eax
66cb(3): and %r8d,%eax
66ce(3): test %r10b,%r10b
66d1(2): jz 0x10(%rip)
66d3(3): cmp %r15,%r13
66d6(2): jbe 0x7(%rip)
66d8(5): mov $0x5c,0x0(%r14,%r15,1)
66dd(4): add $0x1,%r15
66e1(4): add $0x1,%rbp
66e5(3): cmp %rcx,%rbp
66e8(6): jnb 0xfffff784(%rip)
66ee(2): test %al,%al
66f0(6): jz 0x3fe(%rip)
66f6(3): cmp %r15,%r13
66f9(2): jbe 0x7(%rip)
66fb(5): mov $0x27,0x0(%r14,%r15,1)
6700(4): lea 0x1(%r15),%rax
6704(3): cmp %rax,%r13
6707(2): jbe 0x8(%rip)
6709(6): mov $0x27,0x1(%r14,%r15,1)
670f(4): add $0x2,%r15
6713(3): xor %r10d,%r10d
6716(3): xor %r8d,%r8d
6719(2): jmp 0xffffff94(%rip)
671b(5): nop 0x0(%rax,%rax,1)
6720(4): cmp $0x1,%r15
6724(6): jz 0xfffffe65(%rip)
672a(5): mov 0x10(%rsp),%rdi
672f(4): lea 0x0(%rdi,%r15,1),%rcx
6733(5): lea 0x1(%rdi,%r14,1),%rdx
6738(4): lea 0x0(%rcx,%r14,1),%r8
673c(2): jmp 0x11(%rip)
673e(2): nop 
6740(4): add $0x1,%rdx
6744(3): cmp %rdx,%r8
6747(6): jz 0xfffffe42(%rip)
674d(3): movzx (%rdx),%ecx
6750(3): sub $0x5b,%ecx
6753(3): cmp $0x21,%cl
6756(2): jnbe 0xffffffea(%rip)
6758(5): mov $0x1,%esi
675d(3): shl/sal %cl,%rsi
6760(3): mov %rsi,%rcx
6763(a): mov $0x8589934635,%rsi
676d(3): test %rsi,%rcx
6770(2): jz 0xffffffd0(%rip)
6772(5): mov 0x40(%rsp),%r14
6777(5): mov 0x70(%rsp),%r13
677c(5): mov 0x30(%rsp),%rbp
6781(8): mov $0x2,0x8(%rsp)
6789(5): cmp $0x0,0xd(%rsp)
678e(2): jz 0x12(%rip)
6790(2): test %al,%al
6792(5): mov $0x4,%eax
6797(5): cmove 0x8(%rsp),%eax
679c(4): mov %eax,0x8(%rsp)
67a0(4): sub $0x8,%rsp
67a4(3): mov %rbp,%rcx
67a7(3): mov %r13,%rsi
67aa(4): push 0x68(%rsp)
67ae(4): push 0x78(%rsp)
67b2(3): mov %r14,%rdi
67b5(2): push $0x0
67b7(8): mov 0x98(%rsp),%r9d
67bf(5): mov 0x28(%rsp),%r8d
67c4(5): mov 0x30(%rsp),%rdx
67c9(4): and $0xfd,%r9d
67cd(5): call 0xfffff433(%rip)
67d2(4): add $0x20,%rsp
67d6(3): mov %rax,%r15
67d9(8): mov 0xa8(%rsp),%rbx
67e1(9): xor $0x28,%rbx
67ea(3): mov %r15,%rax
67ed(6): jnz 0x606(%rip)
67f3(7): add $0xb8,%rsp
67fa(1): pop %rbx
67fb(1): pop %rbp
67fc(2): pop %r12
67fe(2): pop %r13
6800(2): pop %r14
6802(2): pop %r15
6804(1): ret near (%rsp)
6805(3): nop (%rax)
6808(3): mov %r11,%rbp
680b(5): jmp 0xffffff7e(%rip)
6810(3): cmp %r15,%r13
6813(2): jbe 0x7(%rip)
6815(5): mov $0x27,0x0(%r14,%r15,1)
681a(4): lea 0x1(%r15),%rax
681e(3): cmp %rax,%r13
6821(2): jbe 0x8(%rip)
6823(6): mov $0x5c,0x1(%r14,%r15,1)
6829(4): lea 0x2(%r15),%rax
682d(3): cmp %rax,%r13
6830(6): jbe 0x5f2(%rip)
6836(3): mov %r13,%rdx
6839(6): mov $0x27,0x2(%r14,%r15,1)
683f(5): mov 0x50(%rsp),%r13
6844(5): jmp 0xfffffbde(%rip)
6849(3): mov %r12d,%eax
684c(5): mov $0x30,%ebx
6851(3): xor %r12d,%r12d
6854(5): jmp 0xfffff605(%rip)
6859(6): mov $0x27,0x2(%r14,%r15,1)
685f(5): jmp 0xfffff9ca(%rip)
6864(2): test %ebx,%ebx
6866(6): jnz 0xfffff42d(%rip)
686c(5): mov $0x1,0xd(%rsp)
6871(3): test %r13,%r13
6874(6): jnz 0x596(%rip)
687a(7): lea 0x72a4(%rip),%rax
6881(9): mov $0x0,0x50(%rsp)
688a(5): mov $0x1,0xe(%rsp)
688f(5): mov $0x0,0x7c(%rsp)
6894(3): xor %r12d,%r12d
6897(5): mov $0x0,0xf(%rsp)
689c(9): mov $0x1,0x18(%rsp)
68a5(5): mov %rax,0x48(%rsp)
68aa(6): mov $0x1,%r15d
68b0(8): mov $0x2,0x8(%rsp)
68b8(5): jmp 0xfffff41b(%rip)
68bd(3): nop (%rax)
68c0(2): test %ebx,%ebx
68c2(6): jnz 0x3fb(%rip)
68c8(3): test %r13,%r13
68cb(6): jz 0x22b(%rip)
68d1(4): mov $0x22,(%r14)
68d5(5): mov $0x1,0xe(%rsp)
68da(3): xor %r12d,%r12d
68dd(5): mov $0x0,0x7c(%rsp)
68e2(9): mov $0x0,0x50(%rsp)
68eb(7): lea 0x7231(%rip),%rax
68f2(5): mov $0x0,0xf(%rsp)
68f7(5): mov $0x1,0xd(%rsp)
68fc(9): mov $0x1,0x18(%rsp)
6905(6): mov $0x1,%r15d
690b(5): mov %rax,0x48(%rsp)
6910(5): jmp 0xfffff3c3(%rip)
6915(7): lea 0x7207(%rip),%rax
691c(5): mov $0x1,0xe(%rsp)
6921(5): mov $0x0,0x7c(%rsp)
6926(3): xor %r12d,%r12d
6929(9): mov $0x0,0x50(%rsp)
6932(5): mov $0x1,0xf(%rsp)
6937(5): mov $0x1,0xd(%rsp)
693c(9): mov $0x1,0x18(%rsp)
6945(3): xor %r15d,%r15d
6948(5): mov %rax,0x48(%rsp)
694d(8): mov $0x5,0x8(%rsp)
6955(5): jmp 0xfffff37e(%rip)
695a(5): mov $0x1,0xe(%rsp)
695f(5): mov $0x0,0x7c(%rsp)
6964(3): xor %r12d,%r12d
6967(9): mov $0x0,0x50(%rsp)
6970(5): mov $0x0,0xf(%rsp)
6975(3): xor %r15d,%r15d
6978(5): mov $0x1,0xd(%rsp)
697d(9): mov $0x0,0x18(%rsp)
6986(9): mov $0x0,0x48(%rsp)
698f(5): jmp 0xfffff344(%rip)
6994(5): cmp $0xa,0x8(%rsp)
6999(2): jz 0x58(%rip)
699b(7): lea 0x7185(%rip),%rsi
69a2(2): xor %edi,%edi
69a4(5): mov $0x5,%edx
69a9(5): call 0xffffbb47(%rip)
69ae(3): mov %rax,%rcx
69b1(5): mov %rax,0x68(%rsp)
69b6(7): lea 0x716a(%rip),%rax
69bd(3): cmp %rax,%rcx
69c0(6): jz 0x39e(%rip)
69c6(7): lea 0x7158(%rip),%rsi
69cd(2): xor %edi,%edi
69cf(5): mov $0x5,%edx
69d4(5): call 0xffffbb1c(%rip)
69d9(3): mov %rax,%rcx
69dc(5): mov %rax,0x60(%rsp)
69e1(7): lea 0x713d(%rip),%rax
69e8(3): cmp %rax,%rcx
69eb(6): jz 0x389(%rip)
69f1(3): xor %r15d,%r15d
69f4(2): test %ebx,%ebx
69f6(6): jz 0x1c7(%rip)
69fc(2): test %ebx,%ebx
69fe(5): mov 0x60(%rsp),%rbx
6a03(5): setnz 0xf(%rsp)
6a08(3): xor %r12d,%r12d
6a0b(3): mov %rbx,%rdi
6a0e(5): call 0xffffbb02(%rip)
6a13(5): mov %rbx,0x48(%rsp)
6a18(5): mov %rax,0x18(%rsp)
6a1d(5): mov $0x1,0xe(%rsp)
6a22(5): mov $0x0,0x7c(%rsp)
6a27(9): mov $0x0,0x50(%rsp)
6a30(5): mov $0x1,0xd(%rsp)
6a35(5): jmp 0xfffff29e(%rip)
6a3a(5): mov $0x1,0xe(%rsp)
6a3f(5): mov $0x0,0x7c(%rsp)
6a44(3): xor %r12d,%r12d
6a47(9): mov $0x0,0x50(%rsp)
6a50(5): mov $0x0,0xf(%rsp)
6a55(3): xor %r15d,%r15d
6a58(5): mov $0x0,0xd(%rsp)
6a5d(9): mov $0x0,0x18(%rsp)
6a66(9): mov $0x0,0x48(%rsp)
6a6f(5): jmp 0xfffff264(%rip)
6a74(5): mov $0x1,0xe(%rsp)
6a79(5): mov $0x0,0x7c(%rsp)
6a7e(3): xor %r12d,%r12d
6a81(9): mov $0x0,0x50(%rsp)
6a8a(5): mov $0x1,0xf(%rsp)
6a8f(5): mov $0x1,0xd(%rsp)
6a94(5): jmp 0xfffff21f(%rip)
6a99(3): cmp %r15,%r13
6a9c(2): jbe 0x7(%rip)
6a9e(5): mov $0x30,0x0(%r14,%r15,1)
6aa3(4): lea 0x2(%rcx),%rax
6aa7(3): cmp %rax,%r13
6aaa(2): jbe 0x8(%rip)
6aac(6): mov $0x30,0x2(%r14,%rcx,1)
6ab2(3): mov %r12d,%eax
6ab5(4): lea 0x3(%rcx),%r15
6ab9(3): xor %r12d,%r12d
6abc(5): mov $0x30,%ebx
6ac1(5): jmp 0xfffff367(%rip)
6ac6(a): nop 0x0(%rax,%rax,1)
6ad0(5): movzx 0xf(%rsp),%ebx
6ad5(3): mov %r11,%rbp
6ad8(4): mov %bl,0xd(%rsp)
6adc(5): jmp 0xfffffcad(%rip)
6ae1(5): movzx 0xd(%rsp),%edx
6ae6(3): xor %r12d,%r12d
6ae9(5): jmp 0xfffffb07(%rip)
6aee(3): xor %r10d,%r10d
6af1(5): jmp 0xfffffbbc(%rip)
6af6(9): mov $0x0,0x50(%rsp)
6aff(5): mov $0x1,0xe(%rsp)
6b04(3): xor %r12d,%r12d
6b07(5): mov $0x0,0x7c(%rsp)
6b0c(5): jmp 0xfffffddf(%rip)
6b11(5): mov 0x30(%rsp),%r11
6b16(3): mov %r14,%rsi
6b19(3): mov %r13,%rcx
6b1c(3): mov %rbx,%rax
6b1f(3): mov %rbx,%rdi
6b22(6): movzx 0x7d(%rsp),%r8d
6b28(5): movzx 0x7e(%rsp),%ebx
6b2d(8): mov 0x88(%rsp),%r9
6b35(3): cmp %r11,%rsi
6b38(6): movzx 0x7f(%rsp),%r10d
6b3e(8): mov 0x80(%rsp),%r15
6b46(5): mov 0x40(%rsp),%r14
6b4b(5): mov 0x70(%rsp),%r13
6b50(2): jnb 0x28(%rip)
6b52(3): cmp $0x0,(%rcx)
6b55(2): jnz 0x12(%rip)
6b57(2): jmp 0x21(%rip)
6b59(7): nop 0x0(%rax)
6b60(5): cmp $0x0,0x0(%r9,%rax,1)
6b65(2): jz 0x10(%rip)
6b67(4): add $0x1,%rax
6b6b(5): lea 0x0(%rbp,%rax,1),%rdx
6b70(3): cmp %rdx,%r11
6b73(2): jnbe 0xffffffed(%rip)
6b75(3): mov %rax,%rdi
6b78(5): movzx 0xd(%rsp),%edx
6b7d(3): xor %r12d,%r12d
6b80(5): jmp 0xfffffa66(%rip)
6b85(3): mov %rbx,%rdi
6b88(6): movzx 0x7d(%rsp),%r8d
6b8e(5): movzx 0x7e(%rsp),%ebx
6b93(6): movzx 0x7f(%rsp),%r10d
6b99(8): mov 0x80(%rsp),%r15
6ba1(3): xor %r12d,%r12d
6ba4(5): mov 0x40(%rsp),%r14
6ba9(5): mov 0x70(%rsp),%r13
6bae(5): mov 0x30(%rsp),%r11
6bb3(5): movzx 0xd(%rsp),%edx
6bb8(5): jmp 0xfffffa2e(%rip)
6bbd(5): mov 0x68(%rsp),%rdx
6bc2(3): movzx (%rdx),%eax
6bc5(2): test %al,%al
6bc7(6): jz 0xfffffe35(%rip)
6bcd(3): nop (%rax)
6bd0(3): cmp %r15,%r13
6bd3(2): jbe 0x6(%rip)
6bd5(4): mov %al,0x0(%r14,%r15,1)
6bd9(4): add $0x1,%r15
6bdd(5): movzx 0x0(%rdx,%r15,1),%eax
6be2(2): test %al,%al
6be4(2): jnz 0xffffffec(%rip)
6be6(5): jmp 0xfffffe16(%rip)
6beb(2): mov %edx,%eax
6bed(5): jmp 0xfffff55a(%rip)
6bf2(4): movzx 0x0(%rax,%rcx,1),%ebx
6bf6(3): cmp $0x3e,%bl
6bf9(6): jnbe 0xfffff877(%rip)
6bff(a): mov $0x8070630310989004800,%rax
6c09(4): bt %rbx,%rax
6c0d(6): jnb 0xfffff863(%rip)
6c13(5): cmp $0x0,0xf(%rsp)
6c18(6): jnz 0x1ea(%rip)
6c1e(3): cmp %r15,%r13
6c21(2): jbe 0x7(%rip)
6c23(5): mov $0x3f,0x0(%r14,%r15,1)
6c28(4): lea 0x1(%r15),%rax
6c2c(3): cmp %rax,%r13
6c2f(2): jbe 0x8(%rip)
6c31(6): mov $0x22,0x1(%r14,%r15,1)
6c37(4): lea 0x2(%r15),%rax
6c3b(3): cmp %rax,%r13
6c3e(2): jbe 0x8(%rip)
6c40(6): mov $0x22,0x2(%r14,%r15,1)
6c46(4): lea 0x3(%r15),%rax
6c4a(3): cmp %rax,%r13
6c4d(2): jbe 0x8(%rip)
6c4f(6): mov $0x3f,0x3(%r14,%r15,1)
6c55(4): add $0x4,%r15
6c59(2): xor %edx,%edx
6c5b(3): xor %r12d,%r12d
6c5e(2): xor %eax,%eax
6c60(3): mov %rcx,%rbp
6c63(5): jmp 0xfffff1c5(%rip)
6c68(2): test %ebx,%ebx
6c6a(6): jz 0x18e(%rip)
6c70(7): lea 0x6eae(%rip),%rax
6c77(5): mov $0x1,0xe(%rsp)
6c7c(5): mov $0x0,0x7c(%rsp)
6c81(3): xor %r12d,%r12d
6c84(9): mov $0x0,0x50(%rsp)
6c8d(5): mov $0x1,0xf(%rsp)
6c92(5): mov $0x0,0xd(%rsp)
6c97(9): mov $0x1,0x18(%rsp)
6ca0(3): xor %r15d,%r15d
6ca3(5): mov %rax,0x48(%rsp)
6ca8(5): jmp 0xfffff02b(%rip)
6cad(3): nop (%rax)
6cb0(3): mov %r11,%rbp
6cb3(5): movzx 0xf(%rsp),%eax
6cb8(5): jmp 0xfffffad1(%rip)
6cbd(7): lea 0x6e5f(%rip),%rax
6cc4(5): mov $0x1,0xe(%rsp)
6cc9(5): mov $0x0,0x7c(%rsp)
6cce(3): xor %r12d,%r12d
6cd1(9): mov $0x0,0x50(%rsp)
6cda(5): mov $0x1,0xf(%rsp)
6cdf(5): mov $0x1,0xd(%rsp)
6ce4(9): mov $0x1,0x18(%rsp)
6ced(3): xor %r15d,%r15d
6cf0(5): mov %rax,0x48(%rsp)
6cf5(5): jmp 0xffffefde(%rip)
6cfa(2): mov %edx,%eax
6cfc(5): mov 0x48(%rsp),%rbx
6d01(3): test %rbx,%rbx
6d04(2): jz 0x2e(%rip)
6d06(2): test %al,%al
6d08(2): jz 0x2a(%rip)
6d0a(3): movzx (%rbx),%ecx
6d0d(3): mov %rbx,%rax
6d10(2): test %cl,%cl
6d12(2): jz 0x20(%rip)
6d14(3): mov %r15,%rdx
6d17(3): sub %r15,%rax
6d1a(3): cmp %rdx,%r13
6d1d(2): jbe 0x6(%rip)
6d1f(4): mov %cl,0x0(%r14,%rdx,1)
6d23(4): add $0x1,%rdx
6d27(4): movzx 0x0(%rax,%rdx,1),%ecx
6d2b(2): test %cl,%cl
6d2d(2): jnz 0xffffffed(%rip)
6d2f(3): mov %rdx,%r15
6d32(3): cmp %r15,%r13
6d35(6): jbe 0xfffffaa4(%rip)
6d3b(5): mov $0x0,0x0(%r14,%r15,1)
6d40(5): jmp 0xfffffa99(%rip)
6d45(5): cmp $0x2,0x8(%rsp)
6d4a(5): movzx 0xf(%rsp),%ebx
6d4f(3): mov %r11,%rbp
6d52(3): setz %al
6d55(4): mov %bl,0xd(%rsp)
6d59(5): jmp 0xfffffa30(%rip)
6d5e(4): mov 0x8(%rsp),%esi
6d62(3): mov %rcx,%rdi
6d65(5): call 0xffffedab(%rip)
6d6a(5): mov %rax,0x68(%rsp)
6d6f(5): jmp 0xfffffc57(%rip)
6d74(4): mov 0x8(%rsp),%esi
6d78(3): mov %rcx,%rdi
6d7b(5): call 0xffffed95(%rip)
6d80(5): mov %rax,0x60(%rsp)
6d85(5): jmp 0xfffffc6c(%rip)
6d8a(5): movzx 0xf(%rsp),%ebx
6d8f(3): mov %r11,%rbp
6d92(2): mov %edx,%eax
6d94(4): mov %bl,0xd(%rsp)
6d98(5): jmp 0xfffff9f1(%rip)
6d9d(4): sub $0x8,%rsp
6da1(6): mov $0x5,%r8d
6da7(3): mov %r11,%rcx
6daa(4): push 0x68(%rsp)
6dae(4): push 0x78(%rsp)
6db2(3): mov %r14,%rdi
6db5(4): push 0x38(%rsp)
6db9(8): mov 0x98(%rsp),%r9d
6dc1(5): mov 0x30(%rsp),%rdx
6dc6(5): mov 0x70(%rsp),%rsi
6dcb(5): call 0xffffee35(%rip)
6dd0(4): add $0x20,%rsp
6dd4(3): mov %rax,%r15
6dd7(5): jmp 0xfffffa02(%rip)
6ddc(5): movzx 0x7c(%rsp),%eax
6de1(5): jmp 0xffffff1b(%rip)
6de6(8): mov $0x2,0x8(%rsp)
6dee(5): jmp 0xfffff99b(%rip)
6df3(5): call 0xffffb72d(%rip)
6df8(5): mov $0x0,0xd(%rsp)
6dfd(5): jmp 0xfffffa74(%rip)
6e02(3): mov %r11,%rbp
6e05(5): jmp 0xfffff99b(%rip)
6e0a(5): mov $0x1,0xe(%rsp)
6e0f(2): xor %eax,%eax
6e11(3): xor %r12d,%r12d
6e14(9): mov $0x0,0x50(%rsp)
6e1d(5): jmp 0xfffff5a7(%rip)
6e22(3): mov %r13,%rdx
6e25(5): mov 0x50(%rsp),%r13
6e2a(5): jmp 0xfffff5f8(%rip)
6e2f(5): call 0xffffb611(%rip)

"quotearg_n_options" :
6e40(2): push %r15
6e42(2): push %r14
6e44(3): movsxd %edi,%r15
6e47(2): push %r13
6e49(2): push %r12
6e4b(3): mov %rdx,%r14
6e4e(1): push %rbp
6e4f(1): push %rbx
6e50(3): mov %rcx,%rbp
6e53(4): sub $0x28,%rsp
6e57(5): mov %rsi,0x8(%rsp)
6e5c(5): call 0xffffb5f4(%rip)
6e61(3): mov %rax,%r13
6e64(2): mov (%rax),%eax
6e66(3): test %r15d,%r15d
6e69(7): mov 0x20a210(%rip),%rbx
6e70(4): mov %eax,0x18(%rsp)
6e74(6): js 0x16d(%rip)
6e7a(7): cmp %r15d,0x20a1f7(%rip)
6e81(2): jnle 0x64(%rip)
6e83(7): cmp $0x7fffffff,%r15d
6e8a(6): jz 0x15c(%rip)
6e90(4): lea 0x1(%r15),%r12d
6e94(7): lea 0x20a1f5(%rip),%rax
6e9b(3): movsxd %r12d,%rsi
6e9e(4): shl/sal $0x4,%rsi
6ea2(3): cmp %rax,%rbx
6ea5(6): jz 0x11b(%rip)
6eab(3): mov %rbx,%rdi
6eae(5): call 0xf72(%rip)
6eb3(3): mov %rax,%rbx
6eb6(7): mov %rax,0x20a1c3(%rip)
6ebd(7): movsxd 0x20a1b4(%rip),%rdi
6ec4(3): mov %r12d,%edx
6ec7(2): xor %esi,%esi
6ec9(2): sub %edi,%edx
6ecb(4): shl/sal $0x4,%rdi
6ecf(3): movsxd %edx,%rdx
6ed2(3): add %rbx,%rdi
6ed5(4): shl/sal $0x4,%rdx
6ed9(5): call 0xffffb6e7(%rip)
6ede(7): mov %r12d,0x20a193(%rip)
6ee5(3): mov 0x4(%rbp),%eax
6ee8(4): shl/sal $0x4,%r15
6eec(4): sub $0x8,%rsp
6ef0(3): add %r15,%rbx
6ef3(4): lea 0x8(%rbp),%r15
6ef7(4): mov 0x0(%rbp),%r8d
6efb(3): mov (%rbx),%r11
6efe(4): mov 0x8(%rbx),%r12
6f02(3): mov %r14,%rcx
6f05(3): or $0x1,%eax
6f08(4): mov %eax,0x24(%rsp)
6f0c(3): push 0x30(%rbp)
6f0f(3): mov %eax,%r9d
6f12(3): push 0x28(%rbp)
6f15(2): push %r15
6f17(3): mov %r11,%rsi
6f1a(5): mov 0x28(%rsp),%rdx
6f1f(3): mov %r12,%rdi
6f22(5): mov %r11,0x30(%rsp)
6f27(5): call 0xffffecd9(%rip)
6f2c(4): add $0x20,%rsp
6f30(5): mov 0x10(%rsp),%r11
6f35(3): cmp %rax,%r11
6f38(2): jnbe 0x69(%rip)
6f3a(4): lea 0x1(%rax),%rsi
6f3e(7): lea 0x20a2db(%rip),%rax
6f45(3): cmp %rax,%r12
6f48(3): mov %rsi,(%rbx)
6f4b(2): jz 0x14(%rip)
6f4d(3): mov %r12,%rdi
6f50(5): mov %rsi,0x10(%rsp)
6f55(5): call 0xffffb4db(%rip)
6f5a(5): mov 0x10(%rsp),%rsi
6f5f(3): mov %rsi,%rdi
6f62(5): mov %rsi,0x10(%rsp)
6f67(5): call 0xe59(%rip)
6f6c(4): sub $0x8,%rsp
6f70(4): mov %rax,0x8(%rbx)
6f74(4): mov 0x0(%rbp),%r8d
6f78(3): push 0x30(%rbp)
6f7b(3): push 0x28(%rbp)
6f7e(3): mov %r14,%rcx
6f81(2): push %r15
6f83(5): mov 0x3c(%rsp),%r9d
6f88(3): mov %rax,%rdi
6f8b(5): mov 0x28(%rsp),%rdx
6f90(5): mov 0x30(%rsp),%rsi
6f95(3): mov %rax,%r12
6f98(5): call 0xffffec68(%rip)
6f9d(4): add $0x20,%rsp
6fa1(4): mov 0x18(%rsp),%eax
6fa5(4): mov %eax,0x0(%r13)
6fa9(4): add $0x28,%rsp
6fad(3): mov %r12,%rax
6fb0(1): pop %rbx
6fb1(1): pop %rbp
6fb2(2): pop %r12
6fb4(2): pop %r13
6fb6(2): pop %r14
6fb8(2): pop %r15
6fba(1): ret near (%rsp)
6fbb(5): nop 0x0(%rax,%rax,1)
6fc0(2): xor %edi,%edi
6fc2(5): call 0xe5e(%rip)
6fc7(8): movdqa 0x20a0c1(%rip),%xmm0
6fcf(3): mov %rax,%rbx
6fd2(7): mov %rax,0x20a0a7(%rip)
6fd9(3): movups %xmm0,(%rax)
6fdc(5): jmp 0xfffffee1(%rip)
6fe1(5): call 0xffffb45f(%rip)
6fe6(5): call 0x102a(%rip)

"clone_quoting_options" :
6ff0(2): push %r12
6ff2(1): push %rbp
6ff3(1): push %rbx
6ff4(3): mov %rdi,%rbx
6ff7(5): call 0xffffb459(%rip)
6ffc(3): mov (%rax),%r12d
6fff(3): mov %rax,%rbp
7002(7): lea 0x20a317(%rip),%rax
7009(3): test %rbx,%rbx
700c(5): mov $0x38,%esi
7011(4): cmove %rax,%rbx
7015(3): mov %rbx,%rdi
7018(5): call 0xfa8(%rip)
701d(4): mov %r12d,0x0(%rbp)
7021(1): pop %rbx
7022(1): pop %rbp
7023(2): pop %r12
7025(1): ret near (%rsp)

"get_quoting_style" :
7030(7): lea 0x20a2e9(%rip),%rax
7037(3): test %rdi,%rdi
703a(4): cmove %rax,%rdi
703e(2): mov (%rdi),%eax
7040(1): ret near (%rsp)

"set_quoting_style" :
7050(7): lea 0x20a2c9(%rip),%rax
7057(3): test %rdi,%rdi
705a(4): cmove %rax,%rdi
705e(2): mov %esi,(%rdi)
7060(1): ret near (%rsp)

"set_char_quoting" :
7070(7): lea 0x20a2a9(%rip),%rax
7077(3): test %rdi,%rdi
707a(2): mov %esi,%ecx
707c(4): cmove %rax,%rdi
7080(2): mov %esi,%eax
7082(3): and $0x1f,%ecx
7085(3): shr $0x5,%al
7088(3): movzx %al,%eax
708b(5): lea 0x8(%rdi,%rax,4),%rdi
7090(2): mov (%rdi),%esi
7092(2): mov %esi,%eax
7094(2): shr %cl,%eax
7096(2): xor %eax,%edx
7098(3): and $0x1,%eax
709b(3): and $0x1,%edx
709e(2): shl/sal %cl,%edx
70a0(2): xor %esi,%edx
70a2(2): mov %edx,(%rdi)
70a4(1): ret near (%rsp)

"set_quoting_flags" :
70b0(7): lea 0x20a269(%rip),%rax
70b7(3): test %rdi,%rdi
70ba(4): cmove %rax,%rdi
70be(3): mov 0x4(%rdi),%eax
70c1(3): mov %esi,0x4(%rdi)
70c4(1): ret near (%rsp)

"set_custom_quoting" :
70d0(7): lea 0x20a249(%rip),%rax
70d7(3): test %rdi,%rdi
70da(4): cmove %rax,%rdi
70de(3): test %rsi,%rsi
70e1(6): mov $0xa,(%rdi)
70e7(2): jz 0x10(%rip)
70e9(3): test %rdx,%rdx
70ec(2): jz 0xb(%rip)
70ee(4): mov %rsi,0x28(%rdi)
70f2(4): mov %rdx,0x30(%rdi)
70f6(1): ret near (%rsp)
70f7(4): sub $0x8,%rsp
70fb(5): call 0xffffb345(%rip)

"quotearg_buffer" :
7100(2): push %r15
7102(2): push %r14
7104(7): lea 0x20a215(%rip),%rax
710b(2): push %r13
710d(2): push %r12
710f(3): mov %rdi,%r13
7112(1): push %rbp
7113(1): push %rbx
7114(3): mov %r8,%rbx
7117(3): mov %rsi,%r14
711a(3): mov %rdx,%r15
711d(4): sub $0x18,%rsp
7121(3): test %r8,%r8
7124(4): cmove %rax,%rbx
7128(5): mov %rcx,0x8(%rsp)
712d(5): call 0xffffb323(%rip)
7132(3): mov (%rax),%r12d
7135(3): mov %rax,%rbp
7138(4): lea 0x8(%rbx),%rax
713c(4): sub $0x8,%rsp
7140(4): mov 0x4(%rbx),%r9d
7144(3): push 0x30(%rbx)
7147(3): mov (%rbx),%r8d
714a(3): push 0x28(%rbx)
714d(3): mov %r15,%rdx
7150(1): push %rax
7151(5): mov 0x28(%rsp),%rcx
7156(3): mov %r14,%rsi
7159(3): mov %r13,%rdi
715c(5): call 0xffffeaa4(%rip)
7161(4): mov %r12d,0x0(%rbp)
7165(4): add $0x38,%rsp
7169(1): pop %rbx
716a(1): pop %rbp
716b(2): pop %r12
716d(2): pop %r13
716f(2): pop %r14
7171(2): pop %r15
7173(1): ret near (%rsp)

"quotearg_alloc_mem" :
7180(2): push %r15
7182(2): push %r14
7184(7): lea 0x20a195(%rip),%rax
718b(2): push %r13
718d(2): push %r12
718f(3): mov %rdx,%r12
7192(1): push %rbp
7193(1): push %rbx
7194(3): mov %rcx,%rbx
7197(3): mov %rdi,%r14
719a(3): mov %rsi,%r15
719d(4): sub $0x38,%rsp
71a1(3): test %rcx,%rcx
71a4(4): cmove %rax,%rbx
71a8(2): xor %ebp,%ebp
71aa(5): call 0xffffb2a6(%rip)
71af(3): test %r12,%r12
71b2(3): mov %rax,%r13
71b5(2): mov (%rax),%eax
71b7(4): setz %bpl
71bb(3): or 0x4(%rbx),%ebp
71be(4): lea 0x8(%rbx),%r10
71c2(4): sub $0x8,%rsp
71c6(3): mov (%rbx),%r8d
71c9(3): mov %r15,%rcx
71cc(4): mov %eax,0x14(%rsp)
71d0(3): push 0x30(%rbx)
71d3(3): mov %r14,%rdx
71d6(3): push 0x28(%rbx)
71d9(2): push %r10
71db(2): xor %esi,%esi
71dd(3): mov %ebp,%r9d
71e0(2): xor %edi,%edi
71e2(5): mov %r10,0x40(%rsp)
71e7(5): call 0xffffea19(%rip)
71ec(4): lea 0x1(%rax),%rsi
71f0(5): mov %rax,0x48(%rsp)
71f5(4): add $0x20,%rsp
71f9(3): mov %rsi,%rdi
71fc(5): mov %rsi,0x18(%rsp)
7201(5): call 0xbbf(%rip)
7206(5): mov %rax,0x10(%rsp)
720b(4): sub $0x8,%rsp
720f(3): push 0x30(%rbx)
7212(3): push 0x28(%rbx)
7215(5): mov 0x38(%rsp),%r10
721a(3): mov %ebp,%r9d
721d(3): mov (%rbx),%r8d
7220(3): mov %r15,%rcx
7223(3): mov %r14,%rdx
7226(3): mov %rax,%rdi
7229(2): push %r10
722b(5): mov 0x38(%rsp),%rsi
7230(5): call 0xffffe9d0(%rip)
7235(4): mov 0x2c(%rsp),%eax
7239(4): add $0x20,%rsp
723d(3): test %r12,%r12
7240(4): mov %eax,0x0(%r13)
7244(2): jz 0xb(%rip)
7246(5): mov 0x28(%rsp),%r11
724b(4): mov %r11,(%r12)
724f(5): mov 0x10(%rsp),%rax
7254(4): add $0x38,%rsp
7258(1): pop %rbx
7259(1): pop %rbp
725a(2): pop %r12
725c(2): pop %r13
725e(2): pop %r14
7260(2): pop %r15
7262(1): ret near (%rsp)

"quotearg_alloc" :
7270(3): mov %rdx,%rcx
7273(2): xor %edx,%edx
7275(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
7280(6): mov 0x209df2(%rip),%eax
7286(2): push %r12
7288(7): mov 0x209df1(%rip),%r12
728f(1): push %rbp
7290(1): push %rbx
7291(3): cmp $0x1,%eax
7294(2): jle 0x2d(%rip)
7296(3): sub $0x2,%eax
7299(5): lea 0x18(%r12),%rbx
729e(4): shl/sal $0x4,%rax
72a2(5): lea 0x28(%r12,%rax,1),%rbp
72a7(9): nop 0x0(%rax,%rax,1)
72b0(3): mov (%rbx),%rdi
72b3(4): add $0x10,%rbx
72b7(5): call 0xffffb179(%rip)
72bc(3): cmp %rbp,%rbx
72bf(2): jnz 0xfffffff1(%rip)
72c1(5): mov 0x8(%r12),%rdi
72c6(7): lea 0x209f53(%rip),%rbx
72cd(3): cmp %rbx,%rdi
72d0(2): jz 0x19(%rip)
72d2(5): call 0xffffb15e(%rip)
72d7(b): mov $0x100,0x209dae(%rip)
72e2(7): mov %rbx,0x209daf(%rip)
72e9(7): lea 0x209da0(%rip),%rbx
72f0(3): cmp %rbx,%r12
72f3(2): jz 0x11(%rip)
72f5(3): mov %r12,%rdi
72f8(5): call 0xffffb138(%rip)
72fd(7): mov %rbx,0x209d7c(%rip)
7304(1): pop %rbx
7305(a): mov $0x1,0x209d69(%rip)
730f(1): pop %rbp
7310(2): pop %r12
7312(1): ret near (%rsp)

"quotearg_n" :
7320(7): lea 0x209ff9(%rip),%rcx
7327(7): mov $0xffffffff,%rdx
732e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
7340(7): lea 0x209fd9(%rip),%rcx
7347(5): jmp 0xfffffaf9(%rip)

"quotearg" :
7350(7): lea 0x209fc9(%rip),%rcx
7357(3): mov %rdi,%rsi
735a(7): mov $0xffffffff,%rdx
7361(2): xor %edi,%edi
7363(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
7370(7): lea 0x209fa9(%rip),%rcx
7377(3): mov %rsi,%rdx
737a(3): mov %rdi,%rsi
737d(2): xor %edi,%edi
737f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
7390(4): sub $0x48,%rsp
7394(3): mov %rdx,%rax
7397(9): mov $0x28,%rdx
73a0(5): mov %rdx,0x38(%rsp)
73a5(2): xor %edx,%edx
73a7(3): cmp $0xa,%esi
73aa(2): jz 0x6a(%rip)
73ac(3): mov %esi,(%rsp)
73af(3): mov %rsp,%rcx
73b2(7): mov $0xffffffff,%rdx
73b9(3): mov %rax,%rsi
73bc(9): mov $0x0,0x4(%rsp)
73c5(9): mov $0x0,0xc(%rsp)
73ce(9): mov $0x0,0x14(%rsp)
73d7(9): mov $0x0,0x1c(%rsp)
73e0(9): mov $0x0,0x24(%rsp)
73e9(9): mov $0x0,0x2c(%rsp)
73f2(8): mov $0x0,0x34(%rsp)
73fa(5): call 0xfffffa46(%rip)
73ff(5): mov 0x38(%rsp),%rcx
7404(9): xor $0x28,%rcx
740d(2): jnz 0xc(%rip)
740f(4): add $0x48,%rsp
7413(1): ret near (%rsp)
7414(5): call 0xffffb02c(%rip)
7419(5): call 0xffffb107(%rip)

"quotearg_n_style_mem" :
7420(4): sub $0x48,%rsp
7424(3): mov %rdx,%rax
7427(3): mov %rcx,%rdx
742a(9): mov $0x28,%rcx
7433(5): mov %rcx,0x38(%rsp)
7438(2): xor %ecx,%ecx
743a(3): cmp $0xa,%esi
743d(2): jz 0x63(%rip)
743f(3): mov %esi,(%rsp)
7442(3): mov %rsp,%rcx
7445(3): mov %rax,%rsi
7448(9): mov $0x0,0x4(%rsp)
7451(9): mov $0x0,0xc(%rsp)
745a(9): mov $0x0,0x14(%rsp)
7463(9): mov $0x0,0x1c(%rsp)
746c(9): mov $0x0,0x24(%rsp)
7475(9): mov $0x0,0x2c(%rsp)
747e(8): mov $0x0,0x34(%rsp)
7486(5): call 0xfffff9ba(%rip)
748b(5): mov 0x38(%rsp),%rdx
7490(9): xor $0x28,%rdx
7499(2): jnz 0xc(%rip)
749b(4): add $0x48,%rsp
749f(1): ret near (%rsp)
74a0(5): call 0xffffafa0(%rip)
74a5(5): call 0xffffb07b(%rip)

"quotearg_style" :
74b0(3): mov %rsi,%rdx
74b3(2): mov %edi,%esi
74b5(2): xor %edi,%edi
74b7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
74c0(3): mov %rdx,%rcx
74c3(3): mov %rsi,%rdx
74c6(2): mov %edi,%esi
74c8(2): xor %edi,%edi
74ca(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
74d0(4): sub $0x48,%rsp
74d4(2): mov %edx,%ecx
74d6(9): mov $0x28,%rax
74df(5): mov %rax,0x38(%rsp)
74e4(2): xor %eax,%eax
74e6(7): mov 0x209e63(%rip),%rax
74ed(3): mov %rsp,%r8
74f0(3): and $0x1f,%ecx
74f3(8): movdqa 0x209e25(%rip),%xmm0
74fb(5): mov %rax,0x30(%rsp)
7500(2): mov %edx,%eax
7502(4): movaps %xmm0,(%rsp)
7506(3): shr $0x5,%al
7509(3): movzx %al,%eax
750c(5): lea 0x8(%r8,%rax,4),%r9
7511(8): movdqa 0x209e17(%rip),%xmm0
7519(5): movaps %xmm0,0x10(%rsp)
751e(8): movdqa 0x209e1a(%rip),%xmm0
7526(5): movaps %xmm0,0x20(%rsp)
752b(3): mov (%r9),%edx
752e(2): mov %edx,%eax
7530(2): shr %cl,%eax
7532(2): not %eax
7534(3): and $0x1,%eax
7537(2): shl/sal %cl,%eax
7539(3): mov %r8,%rcx
753c(2): xor %edx,%eax
753e(3): mov %rsi,%rdx
7541(3): mov %rdi,%rsi
7544(3): mov %eax,(%r9)
7547(2): xor %edi,%edi
7549(5): call 0xfffff8f7(%rip)
754e(5): mov 0x38(%rsp),%rsi
7553(9): xor $0x28,%rsi
755c(2): jnz 0x7(%rip)
755e(4): add $0x48,%rsp
7562(1): ret near (%rsp)
7563(5): call 0xffffafbd(%rip)

"quotearg_char" :
7570(4): movsx %sil,%edx
7574(7): mov $0xffffffff,%rsi
757b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
7580(5): mov $0x3a,%edx
7585(7): mov $0xffffffff,%rsi
758c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
75a0(5): mov $0x3a,%edx
75a5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
75b0(4): sub $0x48,%rsp
75b4(3): mov %rdx,%rax
75b7(9): mov $0x28,%rdx
75c0(5): mov %rdx,0x38(%rsp)
75c5(2): xor %edx,%edx
75c7(3): cmp $0xa,%esi
75ca(2): jz 0x6a(%rip)
75cc(3): mov %esi,(%rsp)
75cf(3): mov %rsp,%rcx
75d2(7): mov $0xffffffff,%rdx
75d9(3): mov %rax,%rsi
75dc(9): mov $0x0,0x4(%rsp)
75e5(9): mov $0x4000000,0xc(%rsp)
75ee(9): mov $0x0,0x14(%rsp)
75f7(9): mov $0x0,0x1c(%rsp)
7600(9): mov $0x0,0x24(%rsp)
7609(9): mov $0x0,0x2c(%rsp)
7612(8): mov $0x0,0x34(%rsp)
761a(5): call 0xfffff826(%rip)
761f(5): mov 0x38(%rsp),%rcx
7624(9): xor $0x28,%rcx
762d(2): jnz 0xc(%rip)
762f(4): add $0x48,%rsp
7633(1): ret near (%rsp)
7634(5): call 0xffffae0c(%rip)
7639(5): call 0xffffaee7(%rip)

"quotearg_n_custom_mem" :
7640(4): sub $0x48,%rsp
7644(3): mov %rcx,%r9
7647(7): mov 0x209d02(%rip),%rcx
764e(8): movdqa 0x209cca(%rip),%xmm0
7656(9): mov $0x28,%rax
765f(5): mov %rax,0x38(%rsp)
7664(2): xor %eax,%eax
7666(4): movaps %xmm0,(%rsp)
766a(3): test %rsi,%rsi
766d(5): mov %rcx,0x30(%rsp)
7672(7): mov $0xa,(%rsp)
7679(8): movdqa 0x209caf(%rip),%xmm0
7681(5): movaps %xmm0,0x10(%rsp)
7686(8): movdqa 0x209cb2(%rip),%xmm0
768e(5): movaps %xmm0,0x20(%rsp)
7693(2): jz 0x34(%rip)
7695(3): test %rdx,%rdx
7698(2): jz 0x2f(%rip)
769a(5): mov %rsi,0x28(%rsp)
769f(5): mov %rdx,0x30(%rsp)
76a4(3): mov %rsp,%rcx
76a7(3): mov %r8,%rdx
76aa(3): mov %r9,%rsi
76ad(5): call 0xfffff793(%rip)
76b2(5): mov 0x38(%rsp),%rdi
76b7(9): xor $0x28,%rdi
76c0(2): jnz 0xc(%rip)
76c2(4): add $0x48,%rsp
76c6(1): ret near (%rsp)
76c7(5): call 0xffffad79(%rip)
76cc(5): call 0xffffae54(%rip)

"quotearg_n_custom" :
76e0(7): mov $0xffffffff,%r8
76e7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
76f0(3): mov %rdx,%rcx
76f3(7): mov $0xffffffff,%r8
76fa(3): mov %rsi,%rdx
76fd(3): mov %rdi,%rsi
7700(2): xor %edi,%edi
7702(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
7710(3): mov %rcx,%r8
7713(3): mov %rdx,%rcx
7716(3): mov %rsi,%rdx
7719(3): mov %rdi,%rsi
771c(2): xor %edi,%edi
771e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
7730(7): lea 0x209909(%rip),%rcx
7737(5): jmp 0xfffff709(%rip)

"quote_mem" :
7740(7): lea 0x2098f9(%rip),%rcx
7747(3): mov %rsi,%rdx
774a(3): mov %rdi,%rsi
774d(2): xor %edi,%edi
774f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
7760(7): lea 0x2098d9(%rip),%rcx
7767(7): mov $0xffffffff,%rdx
776e(5): jmp 0xfffff6d2(%rip)

"quote" :
7780(7): lea 0x2098b9(%rip),%rcx
7787(3): mov %rdi,%rsi
778a(7): mov $0xffffffff,%rdx
7791(2): xor %edi,%edi
7793(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
77a0(2): push %r15
77a2(2): push %r14
77a4(2): push %r13
77a6(2): push %r12
77a8(3): mov %r9,%r12
77ab(1): push %rbp
77ac(1): push %rbx
77ad(3): mov %rdi,%rbp
77b0(3): mov %r8,%rbx
77b3(4): sub $0x28,%rsp
77b7(3): test %rsi,%rsi
77ba(6): jz 0x11e(%rip)
77c0(3): mov %rdx,%r8
77c3(7): lea 0x681e(%rip),%rdx
77ca(3): mov %rcx,%r9
77cd(2): xor %eax,%eax
77cf(3): mov %rsi,%rcx
77d2(5): mov $0x1,%esi
77d7(5): call 0xffffafa9(%rip)
77dc(7): lea 0x6818(%rip),%rsi
77e3(2): xor %edi,%edi
77e5(5): mov $0x5,%edx
77ea(5): call 0xffffad06(%rip)
77ef(7): lea 0x6b2a(%rip),%rdx
77f6(3): mov %rax,%rcx
77f9(6): mov $0x7e3,%r8d
77ff(5): mov $0x1,%esi
7804(3): mov %rbp,%rdi
7807(2): xor %eax,%eax
7809(5): call 0xffffaf77(%rip)
780e(7): lea 0x6873(%rip),%rsi
7815(2): xor %edi,%edi
7817(5): mov $0x5,%edx
781c(5): call 0xffffacd4(%rip)
7821(3): mov %rbp,%rsi
7824(3): mov %rax,%rdi
7827(5): call 0xffffadd9(%rip)
782c(4): cmp $0x9,%r12
7830(6): jnbe 0x340(%rip)
7836(7): lea 0x6aa7(%rip),%rdx
783d(4): movsxd 0x0(%rdx,%r12,4),%rax
7841(3): add %rdx,%rax
7844(2): jmp %rax
7846(a): nop 0x0(%rax,%rax,1)
7850(4): mov 0x38(%rbx),%r9
7854(4): mov 0x10(%rbx),%rax
7858(7): lea 0x6999(%rip),%rsi
785f(4): mov 0x8(%rbx),%r8
7863(5): mov $0x5,%edx
7868(2): xor %edi,%edi
786a(4): mov 0x30(%rbx),%r13
786e(4): mov 0x28(%rbx),%r12
7872(5): mov %r9,0x10(%rsp)
7877(4): mov 0x20(%rbx),%r15
787b(4): mov 0x18(%rbx),%r14
787f(4): mov %rax,(%rsp)
7883(5): mov %r8,0x8(%rsp)
7888(3): mov (%rbx),%rbx
788b(5): call 0xffffac65(%rip)
7890(4): sub $0x8,%rsp
7894(5): mov 0x18(%rsp),%r9
7899(3): mov %rax,%rdx
789c(3): mov %rbx,%rcx
789f(5): mov $0x1,%esi
78a4(3): mov %rbp,%rdi
78a7(2): xor %eax,%eax
78a9(2): push %r9
78ab(2): push %r13
78ad(2): push %r12
78af(2): push %r15
78b1(2): push %r14
78b3(5): mov 0x30(%rsp),%r9
78b8(5): mov 0x38(%rsp),%r8
78bd(5): call 0xffffaec3(%rip)
78c2(4): add $0x30,%rsp
78c6(4): add $0x28,%rsp
78ca(1): pop %rbx
78cb(1): pop %rbp
78cc(2): pop %r12
78ce(2): pop %r13
78d0(2): pop %r14
78d2(2): pop %r15
78d4(1): ret near (%rsp)
78d5(3): nop (%rax)
78d8(3): mov %rcx,%r8
78db(3): mov %rdx,%rcx
78de(7): lea 0x670f(%rip),%rdx
78e5(5): mov $0x1,%esi
78ea(2): xor %eax,%eax
78ec(5): call 0xffffae94(%rip)
78f1(5): jmp 0xfffffeeb(%rip)
78f6(a): nop 0x0(%rax,%rax,1)
7900(4): mov 0x40(%rbx),%r10
7904(4): mov 0x38(%rbx),%r9
7908(7): lea 0x6919(%rip),%rsi
790f(4): mov 0x10(%rbx),%rax
7913(4): mov 0x8(%rbx),%r8
7917(5): mov $0x5,%edx
791c(4): mov 0x30(%rbx),%r13
7920(4): mov 0x28(%rbx),%r12
7924(4): mov 0x20(%rbx),%r15
7928(4): mov 0x18(%rbx),%r14
792c(3): mov (%rbx),%rbx
792f(5): mov %r10,0x18(%rsp)
7934(5): mov %r9,0x10(%rsp)
7939(4): mov %rax,(%rsp)
793d(5): mov %r8,0x8(%rsp)
7942(2): xor %edi,%edi
7944(5): call 0xffffabac(%rip)
7949(5): mov 0x18(%rsp),%r10
794e(2): push %r10
7950(5): jmp 0xffffff44(%rip)
7955(3): nop (%rax)
7958(3): mov (%rbx),%rbx
795b(7): lea 0x669d(%rip),%rsi
7962(5): mov $0x5,%edx
7967(2): xor %edi,%edi
7969(5): call 0xffffab87(%rip)
796e(4): add $0x28,%rsp
7972(3): mov %rbx,%rcx
7975(3): mov %rbp,%rdi
7978(1): pop %rbx
7979(1): pop %rbp
797a(2): pop %r12
797c(2): pop %r13
797e(2): pop %r14
7980(2): pop %r15
7982(3): mov %rax,%rdx
7985(5): mov $0x1,%esi
798a(2): xor %eax,%eax
798c(5): jmp 0xffffadf4(%rip)
7991(7): nop 0x0(%rax)
7998(4): mov 0x8(%rbx),%r12
799c(7): lea 0x666c(%rip),%rsi
79a3(3): mov (%rbx),%rbx
79a6(5): mov $0x5,%edx
79ab(2): xor %edi,%edi
79ad(5): call 0xffffab43(%rip)
79b2(4): add $0x28,%rsp
79b6(3): mov %r12,%r8
79b9(3): mov %rbx,%rcx
79bc(3): mov %rbp,%rdi
79bf(3): mov %rax,%rdx
79c2(5): mov $0x1,%esi
79c7(1): pop %rbx
79c8(1): pop %rbp
79c9(2): pop %r12
79cb(2): pop %r13
79cd(2): pop %r14
79cf(2): pop %r15
79d1(2): xor %eax,%eax
79d3(5): jmp 0xffffadad(%rip)
79d8(8): nop 0x0(%rax,%rax,1)
79e0(4): mov 0x10(%rbx),%r13
79e4(4): mov 0x8(%rbx),%r12
79e8(7): lea 0x6637(%rip),%rsi
79ef(3): mov (%rbx),%rbx
79f2(5): mov $0x5,%edx
79f7(2): xor %edi,%edi
79f9(5): call 0xffffaaf7(%rip)
79fe(4): add $0x28,%rsp
7a02(3): mov %r13,%r9
7a05(3): mov %r12,%r8
7a08(3): mov %rbx,%rcx
7a0b(3): mov %rbp,%rdi
7a0e(3): mov %rax,%rdx
7a11(1): pop %rbx
7a12(1): pop %rbp
7a13(2): pop %r12
7a15(2): pop %r13
7a17(2): pop %r14
7a19(2): pop %r15
7a1b(5): mov $0x1,%esi
7a20(2): xor %eax,%eax
7a22(5): jmp 0xffffad5e(%rip)
7a27(9): nop 0x0(%rax,%rax,1)
7a30(7): lea 0x6721(%rip),%rsi
7a37(5): mov $0x5,%edx
7a3c(2): xor %edi,%edi
7a3e(4): mov 0x18(%rbx),%r14
7a42(4): mov 0x10(%rbx),%r13
7a46(4): mov 0x8(%rbx),%r12
7a4a(3): mov (%rbx),%rbx
7a4d(5): call 0xffffaaa3(%rip)
7a52(4): sub $0x8,%rsp
7a56(2): push %r14
7a58(3): mov %rax,%rdx
7a5b(3): mov %r13,%r9
7a5e(3): mov %r12,%r8
7a61(3): mov %rbx,%rcx
7a64(3): mov %rbp,%rdi
7a67(5): mov $0x1,%esi
7a6c(2): xor %eax,%eax
7a6e(5): call 0xffffad12(%rip)
7a73(1): pop %rax
7a74(1): pop %rdx
7a75(4): add $0x28,%rsp
7a79(1): pop %rbx
7a7a(1): pop %rbp
7a7b(2): pop %r12
7a7d(2): pop %r13
7a7f(2): pop %r14
7a81(2): pop %r15
7a83(1): ret near (%rsp)
7a84(4): nop 0x0(%rax)
7a88(4): mov 0x20(%rbx),%r15
7a8c(7): lea 0x66e5(%rip),%rsi
7a93(5): mov $0x5,%edx
7a98(2): xor %edi,%edi
7a9a(4): mov 0x18(%rbx),%r14
7a9e(4): mov 0x10(%rbx),%r13
7aa2(4): mov 0x8(%rbx),%r12
7aa6(3): mov (%rbx),%rbx
7aa9(5): call 0xffffaa47(%rip)
7aae(2): push %r15
7ab0(2): jmp 0xffffffa6(%rip)
7ab2(6): nop 0x0(%rax,%rax,1)
7ab8(4): mov 0x8(%rbx),%r8
7abc(4): mov 0x28(%rbx),%r12
7ac0(7): lea 0x66d9(%rip),%rsi
7ac7(4): mov 0x20(%rbx),%r15
7acb(4): mov 0x18(%rbx),%r14
7acf(5): mov $0x5,%edx
7ad4(4): mov 0x10(%rbx),%r13
7ad8(2): xor %edi,%edi
7ada(3): mov (%rbx),%rbx
7add(4): mov %r8,(%rsp)
7ae1(5): call 0xffffaa0f(%rip)
7ae6(4): sub $0x8,%rsp
7aea(3): mov %r13,%r9
7aed(2): push %r12
7aef(2): push %r15
7af1(2): push %r14
7af3(5): mov 0x20(%rsp),%r8
7af8(3): mov %rbx,%rcx
7afb(3): mov %rax,%rdx
7afe(3): mov %rbp,%rdi
7b01(5): mov $0x1,%esi
7b06(2): xor %eax,%eax
7b08(5): call 0xffffac78(%rip)
7b0d(4): add $0x20,%rsp
7b11(4): add $0x28,%rsp
7b15(1): pop %rbx
7b16(1): pop %rbp
7b17(2): pop %r12
7b19(2): pop %r13
7b1b(2): pop %r14
7b1d(2): pop %r15
7b1f(1): ret near (%rsp)
7b20(4): mov 0x10(%rbx),%r9
7b24(4): mov 0x30(%rbx),%r13
7b28(7): lea 0x6699(%rip),%rsi
7b2f(4): mov 0x28(%rbx),%r12
7b33(4): mov 0x20(%rbx),%r15
7b37(5): mov $0x5,%edx
7b3c(4): mov 0x18(%rbx),%r14
7b40(4): mov 0x8(%rbx),%r8
7b44(2): xor %edi,%edi
7b46(5): mov %r9,0x8(%rsp)
7b4b(3): mov (%rbx),%rbx
7b4e(4): mov %r8,(%rsp)
7b52(5): call 0xffffa99e(%rip)
7b57(2): push %r13
7b59(2): push %r12
7b5b(2): push %r15
7b5d(2): push %r14
7b5f(5): mov 0x28(%rsp),%r9
7b64(2): jmp 0xffffff8f(%rip)
7b66(a): nop 0x0(%rax,%rax,1)
7b70(4): mov 0x40(%rbx),%r10
7b74(4): mov 0x38(%rbx),%r9
7b78(5): mov $0x5,%edx
7b7d(4): mov 0x10(%rbx),%rax
7b81(4): mov 0x8(%rbx),%r8
7b85(7): lea 0x66d4(%rip),%rsi
7b8c(4): mov 0x30(%rbx),%r13
7b90(4): mov 0x28(%rbx),%r12
7b94(4): mov 0x20(%rbx),%r15
7b98(4): mov 0x18(%rbx),%r14
7b9c(5): mov %r10,0x18(%rsp)
7ba1(5): mov %r9,0x10(%rsp)
7ba6(4): mov %rax,(%rsp)
7baa(5): mov %r8,0x8(%rsp)
7baf(3): mov (%rbx),%rbx
7bb2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
7bc0(3): xor %r9d,%r9d
7bc3(4): cmp $0x0,(%r8)
7bc7(2): jz 0x14(%rip)
7bc9(7): nop 0x0(%rax)
7bd0(4): add $0x1,%r9
7bd4(5): cmp $0x0,0x0(%r8,%r9,8)
7bd9(2): jnz 0xfffffff7(%rip)
7bdb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
7be0(4): sub $0x68,%rsp
7be4(3): mov %r8,%r10
7be7(3): xor %r9d,%r9d
7bea(9): mov $0x28,%rax
7bf3(5): mov %rax,0x58(%rsp)
7bf8(2): xor %eax,%eax
7bfa(3): mov %rsp,%r8
7bfd(3): nop (%rax)
7c00(3): mov (%r10),%eax
7c03(3): cmp $0x2f,%eax
7c06(2): jnbe 0x44(%rip)
7c08(3): mov %eax,%r11d
7c0b(4): add 0x10(%r10),%r11
7c0f(3): add $0x8,%eax
7c12(3): mov %eax,(%r10)
7c15(3): mov (%r11),%rax
7c18(3): test %rax,%rax
7c1b(4): mov %rax,0x0(%r8,%r9,8)
7c1f(2): jz 0xc(%rip)
7c21(4): add $0x1,%r9
7c25(4): cmp $0xa,%r9
7c29(2): jnz 0xffffffd7(%rip)
7c2b(5): call 0xfffffb75(%rip)
7c30(5): mov 0x58(%rsp),%rax
7c35(9): xor $0x28,%rax
7c3e(2): jnz 0x7(%rip)
7c40(4): add $0x68,%rsp
7c44(1): ret near (%rsp)
7c45(5): call 0xffffa8db(%rip)
7c4a(4): mov 0x8(%r10),%r11
7c4e(4): lea 0x8(%r11),%rax
7c52(4): mov %rax,0x8(%r10)
7c56(2): jmp 0xffffffbf(%rip)

"version_etc" :
7c60(1): push %rbp
7c61(1): push %rbx
7c62(6): mov $0x20,%r10d
7c68(3): xor %r11d,%r11d
7c6b(7): sub $0xb8,%rsp
7c72(9): mov $0x28,%rax
7c7b(5): mov %rax,0x78(%rsp)
7c80(2): xor %eax,%eax
7c82(8): lea 0xd0(%rsp),%rax
7c8a(8): mov %r8,0xa0(%rsp)
7c92(8): lea 0xd0(%rsp),%rbx
7c9a(5): lea 0x20(%rsp),%r8
7c9f(8): mov %r9,0xa8(%rsp)
7ca7(8): mov $0x20,0x8(%rsp)
7caf(5): mov %rax,0x10(%rsp)
7cb4(8): lea 0x80(%rsp),%rax
7cbc(3): xor %r9d,%r9d
7cbf(5): mov %rax,0x18(%rsp)
7cc4(3): mov %rax,%rbp
7cc7(9): nop 0x0(%rax,%rax,1)
7cd0(4): cmp $0x2f,%r10d
7cd4(2): jnbe 0x58(%rip)
7cd6(3): mov %r10d,%eax
7cd9(6): mov $0x1,%r11d
7cdf(4): add $0x8,%r10d
7ce3(3): add %rbp,%rax
7ce6(3): mov (%rax),%rax
7ce9(3): test %rax,%rax
7cec(4): mov %rax,0x0(%r8,%r9,8)
7cf0(2): jz 0xc(%rip)
7cf2(4): add $0x1,%r9
7cf6(4): cmp $0xa,%r9
7cfa(2): jnz 0xffffffd6(%rip)
7cfc(3): test %r11b,%r11b
7cff(2): jnz 0x26(%rip)
7d01(5): call 0xfffffa9f(%rip)
7d06(5): mov 0x78(%rsp),%rax
7d0b(9): xor $0x28,%rax
7d14(2): jnz 0xc(%rip)
7d16(7): add $0xb8,%rsp
7d1d(1): pop %rbx
7d1e(1): pop %rbp
7d1f(1): ret near (%rsp)
7d20(5): call 0xffffa800(%rip)
7d25(5): mov %r10d,0x8(%rsp)
7d2a(2): jmp 0xffffffd7(%rip)
7d2c(3): mov %rbx,%rax
7d2f(4): add $0x8,%rbx
7d33(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
7d40(1): push %rbx
7d41(7): lea 0x62fa(%rip),%rsi
7d48(5): mov $0x5,%edx
7d4d(2): xor %edi,%edi
7d4f(5): call 0xffffa7a1(%rip)
7d54(7): lea 0x62fc(%rip),%rdx
7d5b(3): mov %rax,%rsi
7d5e(5): mov $0x1,%edi
7d63(2): xor %eax,%eax
7d65(5): call 0xffffa96b(%rip)
7d6a(7): lea 0x62fc(%rip),%rsi
7d71(5): mov $0x5,%edx
7d76(2): xor %edi,%edi
7d78(5): call 0xffffa778(%rip)
7d7d(7): lea 0x5b84(%rip),%rcx
7d84(7): lea 0x36e5(%rip),%rdx
7d8b(3): mov %rax,%rsi
7d8e(5): mov $0x1,%edi
7d93(2): xor %eax,%eax
7d95(5): call 0xffffa93b(%rip)
7d9a(7): mov 0x209307(%rip),%rbx
7da1(7): lea 0x64f8(%rip),%rsi
7da8(2): xor %edi,%edi
7daa(5): mov $0x5,%edx
7daf(5): call 0xffffa741(%rip)
7db4(3): mov %rbx,%rsi
7db7(3): mov %rax,%rdi
7dba(1): pop %rbx
7dbb(5): jmp 0xffffa845(%rip)

"xmalloc" :
7dc0(1): push %rbx
7dc1(3): mov %rdi,%rbx
7dc4(5): call 0xffffa89c(%rip)
7dc9(3): test %rax,%rax
7dcc(2): jnz 0x7(%rip)
7dce(3): test %rbx,%rbx
7dd1(2): jnz 0x4(%rip)
7dd3(1): pop %rbx
7dd4(1): ret near (%rsp)
7dd5(5): call 0x23b(%rip)

"xnmalloc" :
7de0(3): mov %rdi,%rax
7de3(3): mul %rax,%rsi,%rdx
7de6(3): mov %rax,%rdi
7de9(3): seto %al
7dec(3): test %rdi,%rdi
7def(2): js 0xc(%rip)
7df1(3): movzx %al,%eax
7df4(3): test %rax,%rax
7df7(2): jnz 0x4(%rip)
7df9(2): jmp 0xffffffc7(%rip)
7dfb(4): sub $0x8,%rsp
7dff(5): call 0x211(%rip)

"xrealloc" :
7e20(3): test %rsi,%rsi
7e23(1): push %rbx
7e24(3): mov %rsi,%rbx
7e27(2): jnz 0x7(%rip)
7e29(3): test %rdi,%rdi
7e2c(2): jnz 0x1c(%rip)
7e2e(3): mov %rbx,%rsi
7e31(5): call 0xffffa86f(%rip)
7e36(3): test %rax,%rax
7e39(2): jnz 0x7(%rip)
7e3b(3): test %rbx,%rbx
7e3e(2): jnz 0x13(%rip)
7e40(1): pop %rbx
7e41(1): ret near (%rsp)
7e42(6): nop 0x0(%rax,%rax,1)
7e48(5): call 0xffffa5e8(%rip)
7e4d(2): xor %eax,%eax
7e4f(1): pop %rbx
7e50(1): ret near (%rsp)
7e51(5): call 0x1bf(%rip)

"xnrealloc" :
7e60(3): mov %rsi,%rax
7e63(3): mul %rax,%rdx,%rdx
7e66(3): mov %rax,%rsi
7e69(3): seto %al
7e6c(3): test %rsi,%rsi
7e6f(2): js 0xc(%rip)
7e71(3): movzx %al,%eax
7e74(3): test %rax,%rax
7e77(2): jnz 0x4(%rip)
7e79(2): jmp 0xffffffa7(%rip)
7e7b(4): sub $0x8,%rsp
7e7f(5): call 0x191(%rip)

"x2nrealloc" :
7e90(3): test %rdi,%rdi
7e93(3): mov %rdx,%r9
7e96(3): mov (%rsi),%rcx
7e99(2): jz 0x37(%rip)
7e9b(2): xor %edx,%edx
7e9d(a): mov $0x6148914691236517204,%rax
7ea7(3): div %r9,%rax
7eaa(3): cmp %rcx,%rax
7ead(2): jbe 0x3e(%rip)
7eaf(3): mov %rcx,%rax
7eb2(3): shr $0x1,%rax
7eb5(5): lea 0x1(%rax,%rcx,1),%rcx
7eba(3): mov %rcx,(%rsi)
7ebd(4): imul %r9,%rcx
7ec1(3): mov %rcx,%rsi
7ec4(5): jmp 0xffffff5c(%rip)
7ec9(7): nop 0x0(%rax)
7ed0(3): test %rcx,%rcx
7ed3(2): jz 0x25(%rip)
7ed5(3): mov %rcx,%rax
7ed8(3): mul %rax,%r9,%rdx
7edb(3): seto %dl
7ede(3): test %rax,%rax
7ee1(3): movzx %dl,%edx
7ee4(2): js 0x7(%rip)
7ee6(3): test %rdx,%rdx
7ee9(2): jz 0xffffffd1(%rip)
7eeb(4): sub $0x8,%rsp
7eef(5): call 0x121(%rip)
7ef4(4): nop 0x0(%rax)
7ef8(2): xor %edx,%edx
7efa(5): mov $0x80,%eax
7eff(3): xor %r8d,%r8d
7f02(3): div %r9,%rax
7f05(3): test %rax,%rax
7f08(4): setz %r8b
7f0c(4): lea 0x0(%r8,%rax,1),%rcx
7f10(2): jmp 0xffffffc5(%rip)

"x2realloc" :
7f20(3): test %rdi,%rdi
7f23(3): mov (%rsi),%rax
7f26(2): jz 0x2a(%rip)
7f28(a): mov $0x6148914691236517203,%rdx
7f32(3): cmp %rdx,%rax
7f35(2): jnbe 0x2c(%rip)
7f37(3): mov %rax,%rdx
7f3a(3): shr $0x1,%rdx
7f3d(5): lea 0x1(%rdx,%rax,1),%rax
7f42(3): mov %rax,(%rsi)
7f45(3): mov %rax,%rsi
7f48(5): jmp 0xfffffed8(%rip)
7f4d(3): nop (%rax)
7f50(3): test %rax,%rax
7f53(5): mov $0x80,%edx
7f58(4): cmove %rdx,%rax
7f5c(3): test %rax,%rax
7f5f(2): jns 0xffffffe3(%rip)
7f61(4): sub $0x8,%rsp
7f65(5): call 0xab(%rip)

"xzalloc" :
7f70(1): push %rbx
7f71(3): mov %rdi,%rbx
7f74(5): call 0xfffffe4c(%rip)
7f79(3): mov %rbx,%rdx
7f7c(2): xor %esi,%esi
7f7e(3): mov %rax,%rdi
7f81(1): pop %rbx
7f82(5): jmp 0xffffa63e(%rip)

"xcalloc" :
7f90(3): mov %rdi,%rax
7f93(4): sub $0x8,%rsp
7f97(3): mul %rax,%rsi,%rdx
7f9a(3): seto %dl
7f9d(3): test %rax,%rax
7fa0(2): js 0x19(%rip)
7fa2(3): movzx %dl,%edx
7fa5(3): test %rdx,%rdx
7fa8(2): jnz 0x11(%rip)
7faa(5): call 0xffffa666(%rip)
7faf(3): test %rax,%rax
7fb2(2): jz 0x7(%rip)
7fb4(4): add $0x8,%rsp
7fb8(1): ret near (%rsp)
7fb9(5): call 0x57(%rip)

"xmemdup" :
7fc0(1): push %rbp
7fc1(1): push %rbx
7fc2(3): mov %rdi,%rbp
7fc5(3): mov %rsi,%rdi
7fc8(3): mov %rsi,%rbx
7fcb(4): sub $0x8,%rsp
7fcf(5): call 0xfffffdf1(%rip)
7fd4(4): add $0x8,%rsp
7fd8(3): mov %rbx,%rdx
7fdb(3): mov %rbp,%rsi
7fde(1): pop %rbx
7fdf(1): pop %rbp
7fe0(3): mov %rax,%rdi
7fe3(5): jmp 0xffffa65d(%rip)

"xstrdup" :
7ff0(1): push %rbx
7ff1(3): mov %rdi,%rbx
7ff4(5): call 0xffffa51c(%rip)
7ff9(3): mov %rbx,%rdi
7ffc(4): lea 0x1(%rax),%rsi
8000(1): pop %rbx
8001(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
8010(7): lea 0x6338(%rip),%rsi
8017(4): sub $0x8,%rsp
801b(5): mov $0x5,%edx
8020(2): xor %edi,%edi
8022(5): call 0xffffa4ce(%rip)
8027(6): mov 0x208ff3(%rip),%edi
802d(7): lea 0x5a98(%rip),%rdx
8034(3): mov %rax,%rcx
8037(2): xor %esi,%esi
8039(2): xor %eax,%eax
803b(5): call 0xffffa6a5(%rip)
8040(5): call 0xffffa400(%rip)

"xnumtoumax" :
8050(2): push %r15
8052(2): push %r14
8054(3): mov %rcx,%r15
8057(2): push %r13
8059(2): push %r12
805b(3): mov %rdx,%r14
805e(1): push %rbp
805f(1): push %rbx
8060(2): mov %esi,%edx
8062(2): xor %esi,%esi
8064(3): mov %rdi,%r12
8067(3): mov %r9,%r13
806a(4): sub $0x18,%rsp
806e(3): mov %rsp,%rcx
8071(4): mov 0x50(%rsp),%ebx
8075(9): mov $0x28,%rax
807e(5): mov %rax,0x8(%rsp)
8083(2): xor %eax,%eax
8085(5): call 0x7bb(%rip)
808a(2): test %eax,%eax
808c(6): jnz 0x94(%rip)
8092(4): mov (%rsp),%rbp
8096(3): cmp %r14,%rbp
8099(2): jb 0x7(%rip)
809b(3): cmp %r15,%rbp
809e(2): jbe 0x56(%rip)
80a0(5): call 0xffffa3b0(%rip)
80a5(7): cmp $0x40000000,%rbp
80ac(3): mov %rax,%r14
80af(2): sbb %eax,%eax
80b1(3): and $0xd7,%eax
80b4(3): add $0x4b,%eax
80b7(3): mov %eax,(%r14)
80ba(3): mov %r12,%rdi
80bd(5): call 0xfffff6c3(%rip)
80c2(3): mov (%r14),%esi
80c5(3): mov %rax,%r8
80c8(5): mov $0x0,%eax
80cd(7): lea 0x59f4(%rip),%rdx
80d4(3): mov %r13,%rcx
80d7(3): cmp $0x16,%esi
80da(3): cmove %eax,%esi
80dd(2): test %ebx,%ebx
80df(5): mov $0x1,%eax
80e4(3): cmove %eax,%ebx
80e7(2): xor %eax,%eax
80e9(2): mov %ebx,%edi
80eb(5): call 0xffffa5f5(%rip)
80f0(4): mov (%rsp),%rbp
80f4(5): mov 0x8(%rsp),%rdx
80f9(9): xor $0x28,%rdx
8102(3): mov %rbp,%rax
8105(2): jnz 0x46(%rip)
8107(4): add $0x18,%rsp
810b(1): pop %rbx
810c(1): pop %rbp
810d(2): pop %r12
810f(2): pop %r13
8111(2): pop %r14
8113(2): pop %r15
8115(1): ret near (%rsp)
8116(a): nop 0x0(%rax,%rax,1)
8120(2): mov %eax,%ebp
8122(5): call 0xffffa32e(%rip)
8127(3): cmp $0x1,%ebp
812a(3): mov %rax,%r14
812d(2): jz 0x13(%rip)
812f(3): cmp $0x3,%ebp
8132(2): jnz 0xffffff88(%rip)
8134(6): mov $0x0,(%rax)
813a(5): jmp 0xffffff80(%rip)
813f(1): nop 
8140(6): mov $0x4b,(%rax)
8146(5): jmp 0xffffff74(%rip)
814b(5): call 0xffffa3d5(%rip)

"xdectoumax" :
8150(4): sub $0x10,%rsp
8154(2): push %r9
8156(3): mov %r8,%r9
8159(3): mov %rcx,%r8
815c(3): mov %rdx,%rcx
815f(3): mov %rsi,%rdx
8162(5): mov $0xa,%esi
8167(5): call 0xfffffee9(%rip)
816c(4): add $0x18,%rsp
8170(1): ret near (%rsp)

"xstrtol" :
8180(2): push %r15
8182(2): push %r14
8184(2): push %r13
8186(2): push %r12
8188(1): push %rbp
8189(1): push %rbx
818a(4): sub $0x28,%rsp
818e(9): mov $0x28,%rax
8197(5): mov %rax,0x18(%rsp)
819c(2): xor %eax,%eax
819e(3): cmp $0x24,%edx
81a1(6): jnbe 0x66e(%rip)
81a7(5): lea 0x10(%rsp),%rax
81ac(3): test %rsi,%rsi
81af(3): mov %rsi,%rbx
81b2(3): mov %rdi,%r12
81b5(2): mov %edx,%ebp
81b7(3): mov %rcx,%r14
81ba(4): cmove %rax,%rbx
81be(3): mov %r8,%r15
81c1(5): call 0xffffa28f(%rip)
81c6(2): mov %ebp,%edx
81c8(6): mov $0x0,(%rax)
81ce(3): mov %rbx,%rsi
81d1(3): mov %r12,%rdi
81d4(3): mov %rax,%r13
81d7(5): call 0xffffa459(%rip)
81dc(3): mov (%rbx),%rcx
81df(3): mov %rax,%rbp
81e2(3): cmp %r12,%rcx
81e5(2): jz 0x63(%rip)
81e7(4): mov 0x0(%r13),%eax
81eb(2): test %eax,%eax
81ed(2): jnz 0x43(%rip)
81ef(3): xor %r12d,%r12d
81f2(3): test %r15,%r15
81f5(2): jz 0xf(%rip)
81f7(4): movzx (%rcx),%r13d
81fb(3): test %r13b,%r13b
81fe(6): jnz 0x85(%rip)
8204(3): mov %rbp,(%r14)
8207(5): mov 0x18(%rsp),%rdi
820c(9): xor $0x28,%rdi
8215(3): mov %r12d,%eax
8218(6): jnz 0x616(%rip)
821e(4): add $0x28,%rsp
8222(1): pop %rbx
8223(1): pop %rbp
8224(2): pop %r12
8226(2): pop %r13
8228(2): pop %r14
822a(2): pop %r15
822c(1): ret near (%rsp)
822d(3): nop (%rax)
8230(3): cmp $0x22,%eax
8233(6): mov $0x4,%r12d
8239(2): jnz 0xffffffce(%rip)
823b(6): mov $0x1,%r12d
8241(2): jmp 0xffffffb1(%rip)
8243(5): nop 0x0(%rax,%rax,1)
8248(3): test %r15,%r15
824b(6): jz 0x495(%rip)
8251(4): movzx (%rcx),%r13d
8255(5): mov %rcx,0x8(%rsp)
825a(6): mov $0x4,%r12d
8260(3): test %r13b,%r13b
8263(2): jz 0xffffffa4(%rip)
8265(4): movsx %r13b,%esi
8269(3): mov %r15,%rdi
826c(5): call 0xffffa2f4(%rip)
8271(3): test %rax,%rax
8274(5): mov 0x8(%rsp),%rcx
8279(2): jz 0xffffff8e(%rip)
827b(5): mov $0x1,%ebp
8280(3): xor %r12d,%r12d
8283(4): movsx %r13b,%esi
8287(3): mov %r15,%rdi
828a(5): mov %rcx,0x8(%rsp)
828f(5): call 0xffffa2d1(%rip)
8294(3): test %rax,%rax
8297(5): mov 0x8(%rsp),%rcx
829c(2): jz 0x5c(%rip)
829e(4): lea 0xffffffbb(%r13),%eax
82a2(2): cmp $0x2f,%al
82a4(2): jnbe 0x64(%rip)
82a6(a): mov $0x142129060940101,%rdx
82b0(4): bt %rax,%rdx
82b4(2): jnb 0x54(%rip)
82b6(5): mov $0x30,%esi
82bb(3): mov %r15,%rdi
82be(5): mov %rcx,0x8(%rsp)
82c3(5): call 0xffffa29d(%rip)
82c8(3): test %rax,%rax
82cb(5): mov 0x8(%rsp),%rcx
82d0(2): jz 0x38(%rip)
82d2(4): movzx 0x1(%rcx),%eax
82d6(2): cmp $0x44,%al
82d8(2): jz 0xe(%rip)
82da(2): cmp $0x69,%al
82dc(6): jz 0x4ec(%rip)
82e2(2): cmp $0x42,%al
82e4(2): jnz 0x24(%rip)
82e6(5): mov $0x2,%edi
82eb(5): mov $0x3e8,%eax
82f0(2): jmp 0x22(%rip)
82f2(6): nop 0x0(%rax,%rax,1)
82f8(3): mov %rbp,(%r14)
82fb(4): or $0x2,%r12d
82ff(5): jmp 0xffffff08(%rip)
8304(4): nop 0x0(%rax)
8308(5): mov $0x1,%edi
830d(5): mov $0x400,%eax
8312(4): sub $0x42,%r13d
8316(4): cmp $0x35,%r13b
831a(2): jnbe 0xffffffde(%rip)
831c(7): lea 0x6085(%rip),%rsi
8323(4): movzx %r13b,%r13d
8327(4): movsxd 0x0(%rsi,%r13,4),%rdx
832b(3): add %rsi,%rdx
832e(2): jmp %rdx
8330(a): mov $0x-9223372036854775808,%r8
833a(3): movsxd %eax,%rsi
833d(3): mov %r8,%rax
8340(2): cdq %rax
8342(3): idiv %rsi,%rax
8345(3): cmp %rax,%rbp
8348(3): mov %rax,%r9
834b(6): jl 0x4aa(%rip)
8351(a): mov $0x9223372036854775807,%r10
835b(3): mov %r10,%rax
835e(2): cdq %rax
8360(3): idiv %rsi,%rax
8363(3): cmp %rax,%rbp
8366(6): jnle 0x49c(%rip)
836c(4): imul %rsi,%rbp
8370(3): cmp %rbp,%r9
8373(6): jnle 0x482(%rip)
8379(3): cmp %rbp,%rax
837c(6): jl 0x486(%rip)
8382(4): imul %rsi,%rbp
8386(2): xor %eax,%eax
8388(3): or %eax,%r12d
838b(5): nop 0x0(%rax,%rax,1)
8390(3): movsxd %edi,%rax
8393(3): add %rax,%rcx
8396(3): mov %r12d,%eax
8399(3): or $0x2,%eax
839c(3): mov %rcx,(%rbx)
839f(3): cmp $0x0,(%rcx)
83a2(4): cmovne %eax,%r12d
83a6(5): jmp 0xfffffe5e(%rip)
83ab(5): nop 0x0(%rax,%rax,1)
83b0(a): mov $0x-4611686018427387904,%rax
83ba(3): cmp %rax,%rbp
83bd(6): jl 0x333(%rip)
83c3(a): mov $0x4611686018427387903,%rax
83cd(3): cmp %rax,%rbp
83d0(6): jnle 0x3e0(%rip)
83d6(3): add %rbp,%rbp
83d9(2): jmp 0xffffffb7(%rip)
83db(5): nop 0x0(%rax,%rax,1)
83e0(a): mov $0x-18014398509481984,%rax
83ea(3): cmp %rax,%rbp
83ed(6): jl 0x303(%rip)
83f3(a): mov $0x18014398509481983,%rax
83fd(3): cmp %rax,%rbp
8400(6): jnle 0x3b0(%rip)
8406(4): shl/sal $0x9,%rbp
840a(2): jmp 0xffffff86(%rip)
840c(4): nop 0x0(%rax)
8410(3): movsxd %eax,%rsi
8413(a): mov $0x-9223372036854775808,%rax
841d(6): mov $0x7,%r8d
8423(2): cdq %rax
8425(3): xor %r11d,%r11d
8428(a): mov $0x9223372036854775807,%r9
8432(3): idiv %rsi,%rax
8435(3): mov %rax,%r10
8438(2): jmp 0x27(%rip)
843a(6): nop 0x0(%rax,%rax,1)
8440(3): mov %r9,%rax
8443(2): cdq %rax
8445(3): idiv %rsi,%rax
8448(3): cmp %rbp,%rax
844b(6): jl 0x2ed(%rip)
8451(4): imul %rsi,%rbp
8455(4): sub $0x1,%r8d
8459(6): jz 0x127(%rip)
845f(3): cmp %rbp,%r10
8462(2): jle 0xffffffde(%rip)
8464(6): mov $0x1,%r11d
846a(a): mov $0x-9223372036854775808,%rbp
8474(2): jmp 0xffffffe1(%rip)
8476(a): nop 0x0(%rax,%rax,1)
8480(3): movsxd %eax,%rsi
8483(a): mov $0x-9223372036854775808,%rax
848d(6): mov $0x8,%r8d
8493(2): cdq %rax
8495(3): xor %r11d,%r11d
8498(a): mov $0x9223372036854775807,%r9
84a2(3): idiv %rsi,%rax
84a5(3): mov %rax,%r10
84a8(2): jmp 0x27(%rip)
84aa(6): nop 0x0(%rax,%rax,1)
84b0(3): mov %r9,%rax
84b3(2): cdq %rax
84b5(3): idiv %rsi,%rax
84b8(3): cmp %rbp,%rax
84bb(6): jl 0x24d(%rip)
84c1(4): imul %rsi,%rbp
84c5(4): sub $0x1,%r8d
84c9(6): jz 0xb7(%rip)
84cf(3): cmp %rbp,%r10
84d2(2): jle 0xffffffde(%rip)
84d4(6): mov $0x1,%r11d
84da(a): mov $0x-9223372036854775808,%rbp
84e4(2): jmp 0xffffffe1(%rip)
84e6(a): nop 0x0(%rax,%rax,1)
84f0(a): mov $0x-9223372036854775808,%r8
84fa(3): movsxd %eax,%rsi
84fd(3): mov %r8,%rax
8500(2): cdq %rax
8502(3): idiv %rsi,%rax
8505(3): cmp %rax,%rbp
8508(6): jl 0x1e8(%rip)
850e(4): sub $0x1,%r8
8512(3): mov %r8,%rax
8515(2): cdq %rax
8517(3): idiv %rsi,%rax
851a(3): cmp %rax,%rbp
851d(6): jnle 0x293(%rip)
8523(4): imul %rsi,%rbp
8527(5): jmp 0xfffffe69(%rip)
852c(4): nop 0x0(%rax)
8530(3): movsxd %eax,%rsi
8533(a): mov $0x-9223372036854775808,%rax
853d(6): mov $0x3,%r8d
8543(2): cdq %rax
8545(3): xor %r11d,%r11d
8548(a): mov $0x9223372036854775807,%r9
8552(3): idiv %rsi,%rax
8555(3): mov %rax,%r10
8558(3): cmp %rbp,%r10
855b(6): jnle 0x1f5(%rip)
8561(3): mov %r9,%rax
8564(2): cdq %rax
8566(3): idiv %rsi,%rax
8569(3): cmp %rbp,%rax
856c(6): jl 0x274(%rip)
8572(4): imul %rsi,%rbp
8576(4): sub $0x1,%r8d
857a(2): jnz 0xffffffde(%rip)
857c(4): nop 0x0(%rax)
8580(3): or %r11d,%r12d
8583(5): jmp 0xfffffe0d(%rip)
8588(8): nop 0x0(%rax,%rax,1)
8590(3): movsxd %eax,%rsi
8593(a): mov $0x-9223372036854775808,%rax
859d(6): mov $0x6,%r8d
85a3(2): cdq %rax
85a5(3): xor %r11d,%r11d
85a8(a): mov $0x9223372036854775807,%r9
85b2(3): idiv %rsi,%rax
85b5(3): mov %rax,%r10
85b8(2): jmp 0x23(%rip)
85ba(6): nop 0x0(%rax,%rax,1)
85c0(3): mov %r9,%rax
85c3(2): cdq %rax
85c5(3): idiv %rsi,%rax
85c8(3): cmp %rbp,%rax
85cb(6): jl 0x19d(%rip)
85d1(4): imul %rsi,%rbp
85d5(4): sub $0x1,%r8d
85d9(2): jz 0xffffffa7(%rip)
85db(3): cmp %rbp,%r10
85de(2): jle 0xffffffe2(%rip)
85e0(6): mov $0x1,%r11d
85e6(a): mov $0x-9223372036854775808,%rbp
85f0(2): jmp 0xffffffe5(%rip)
85f2(6): nop 0x0(%rax,%rax,1)
85f8(3): movsxd %eax,%rsi
85fb(a): mov $0x-9223372036854775808,%rax
8605(6): mov $0x5,%r8d
860b(2): cdq %rax
860d(3): xor %r11d,%r11d
8610(a): mov $0x9223372036854775807,%r9
861a(3): idiv %rsi,%rax
861d(3): mov %rax,%r10
8620(2): jmp 0x27(%rip)
8622(6): nop 0x0(%rax,%rax,1)
8628(3): mov %r9,%rax
862b(2): cdq %rax
862d(3): idiv %rsi,%rax
8630(3): cmp %rbp,%rax
8633(6): jl 0x14d(%rip)
8639(4): imul %rsi,%rbp
863d(4): sub $0x1,%r8d
8641(6): jz 0xffffff3f(%rip)
8647(3): cmp %rbp,%r10
864a(2): jle 0xffffffde(%rip)
864c(6): mov $0x1,%r11d
8652(a): mov $0x-9223372036854775808,%rbp
865c(2): jmp 0xffffffe1(%rip)
865e(2): nop 
8660(a): mov $0x-9007199254740992,%rax
866a(3): cmp %rax,%rbp
866d(6): jl 0x83(%rip)
8673(a): mov $0x9007199254740991,%rax
867d(3): cmp %rax,%rbp
8680(6): jnle 0x130(%rip)
8686(4): shl/sal $0xa,%rbp
868a(5): jmp 0xfffffd06(%rip)
868f(1): nop 
8690(3): movsxd %eax,%rsi
8693(a): mov $0x-9223372036854775808,%rax
869d(6): mov $0x4,%r8d
86a3(2): cdq %rax
86a5(3): xor %r11d,%r11d
86a8(a): mov $0x9223372036854775807,%r9
86b2(3): idiv %rsi,%rax
86b5(3): mov %rax,%r10
86b8(3): cmp %rbp,%r10
86bb(2): jnle 0x65(%rip)
86bd(3): mov %r9,%rax
86c0(2): cdq %rax
86c2(3): idiv %rsi,%rax
86c5(3): cmp %rbp,%rax
86c8(6): jl 0xd0(%rip)
86ce(4): imul %rsi,%rbp
86d2(4): sub $0x1,%r8d
86d6(2): jnz 0xffffffe2(%rip)
86d8(5): jmp 0xfffffea8(%rip)
86dd(3): nop (%rax)
86e0(6): mov $0x4,%r12d
86e6(5): jmp 0xfffffb21(%rip)
86eb(5): nop 0x0(%rax,%rax,1)
86f0(6): mov $0x1,%r12d
86f6(a): mov $0x-9223372036854775808,%rbp
8700(5): jmp 0xfffffc90(%rip)
8705(3): nop (%rax)
8708(6): mov $0x1,%r11d
870e(a): mov $0x9223372036854775807,%rbp
8718(5): jmp 0xfffffdad(%rip)
871d(3): nop (%rax)
8720(6): mov $0x1,%r11d
8726(a): mov $0x-9223372036854775808,%rbp
8730(2): jmp 0xffffffa2(%rip)
8732(6): nop 0x0(%rax,%rax,1)
8738(6): mov $0x1,%r11d
873e(a): mov $0x9223372036854775807,%rbp
8748(5): jmp 0xfffffd0d(%rip)
874d(3): nop (%rax)
8750(6): mov $0x1,%r11d
8756(a): mov $0x-9223372036854775808,%rbp
8760(5): jmp 0xfffffe16(%rip)
8765(3): nop (%rax)
8768(6): mov $0x1,%r11d
876e(a): mov $0x9223372036854775807,%rbp
8778(5): jmp 0xfffffe5d(%rip)
877d(3): nop (%rax)
8780(6): mov $0x1,%r11d
8786(a): mov $0x9223372036854775807,%rbp
8790(5): jmp 0xfffffead(%rip)
8795(3): nop (%rax)
8798(6): mov $0x1,%r11d
879e(a): mov $0x9223372036854775807,%rbp
87a8(5): jmp 0xffffff2a(%rip)
87ad(3): nop (%rax)
87b0(6): mov $0x1,%r12d
87b6(a): mov $0x9223372036854775807,%rbp
87c0(5): jmp 0xfffffbd0(%rip)
87c5(3): nop (%rax)
87c8(2): xor %edi,%edi
87ca(4): cmp $0x42,0x2(%rcx)
87ce(5): mov $0x400,%eax
87d3(4): setz %dil
87d7(4): lea 0x1(%rdi,%rdi,1),%edi
87db(5): jmp 0xfffffb37(%rip)
87e0(6): mov $0x1,%r11d
87e6(a): mov $0x9223372036854775807,%rbp
87f0(5): jmp 0xfffffd86(%rip)
87f5(5): mov $0x1,%eax
87fa(3): mov %r8,%rbp
87fd(5): jmp 0xfffffb8b(%rip)
8802(5): mov $0x1,%eax
8807(3): mov %r10,%rbp
880a(5): jmp 0xfffffb7e(%rip)
880f(7): lea 0x5c6a(%rip),%rcx
8816(7): lea 0x5b43(%rip),%rsi
881d(7): lea 0x5b5c(%rip),%rdi
8824(5): mov $0x54,%edx
8829(5): call 0xffff9d77(%rip)
882e(5): call 0xffff9cf2(%rip)

"xstrtoumax" :
8840(2): push %r15
8842(2): push %r14
8844(2): push %r13
8846(2): push %r12
8848(1): push %rbp
8849(1): push %rbx
884a(4): sub $0x28,%rsp
884e(9): mov $0x28,%rax
8857(5): mov %rax,0x18(%rsp)
885c(2): xor %eax,%eax
885e(3): cmp $0x24,%edx
8861(6): jnbe 0x364(%rip)
8867(5): lea 0x10(%rsp),%rax
886c(3): mov %rsi,%r15
886f(3): test %rsi,%rsi
8872(3): mov %rdi,%rbp
8875(4): mov %edx,0x8(%rsp)
8879(3): mov %rcx,%r14
887c(3): mov %r8,%r13
887f(4): cmove %rax,%r15
8883(5): call 0xffff9bcd(%rip)
8888(6): mov $0x0,(%rax)
888e(3): mov %rax,%r12
8891(4): movzx 0x0(%rbp),%ebx
8895(5): call 0xffff9f1b(%rip)
889a(4): mov 0x8(%rsp),%edx
889e(3): mov (%rax),%rsi
88a1(3): mov %rbp,%rax
88a4(2): jmp 0x13(%rip)
88a6(a): nop 0x0(%rax,%rax,1)
88b0(4): add $0x1,%rax
88b4(3): movzx (%rax),%ebx
88b7(3): movzx %bl,%ecx
88ba(5): test $0x20,0x1(%rsi,%rcx,2)
88bf(2): jnz 0xfffffff1(%rip)
88c1(3): cmp $0x2d,%bl
88c4(2): jz 0x54(%rip)
88c6(2): xor %ecx,%ecx
88c8(3): mov %r15,%rsi
88cb(3): mov %rbp,%rdi
88ce(5): call 0xffff9ce2(%rip)
88d3(3): mov (%r15),%rcx
88d6(3): mov %rax,%rbx
88d9(3): cmp %rbp,%rcx
88dc(2): jz 0x2c(%rip)
88de(4): mov (%r12),%eax
88e2(2): test %eax,%eax
88e4(2): jz 0x64(%rip)
88e6(3): cmp $0x22,%eax
88e9(5): mov $0x1,%ebp
88ee(2): jnz 0x2a(%rip)
88f0(3): test %r13,%r13
88f3(2): jz 0xb(%rip)
88f5(4): movzx (%rcx),%r12d
88f9(3): test %r12b,%r12b
88fc(2): jnz 0x7b(%rip)
88fe(3): mov %rbx,(%r14)
8901(2): jmp 0x1c(%rip)
8903(5): nop 0x0(%rax,%rax,1)
8908(3): test %r13,%r13
890b(5): mov %rcx,0x8(%rsp)
8910(2): jnz 0x40(%rip)
8912(6): nop 0x0(%rax,%rax,1)
8918(5): mov $0x4,%ebp
891d(5): mov 0x18(%rsp),%rdi
8922(9): xor $0x28,%rdi
892b(2): mov %ebp,%eax
892d(6): jnz 0x293(%rip)
8933(4): add $0x28,%rsp
8937(1): pop %rbx
8938(1): pop %rbp
8939(2): pop %r12
893b(2): pop %r13
893d(2): pop %r14
893f(2): pop %r15
8941(1): ret near (%rsp)
8942(6): nop 0x0(%rax,%rax,1)
8948(2): xor %ebp,%ebp
894a(2): jmp 0xffffffa6(%rip)
894c(4): nop 0x0(%rax)
8950(5): movzx 0x0(%rbp),%r12d
8955(3): test %r12b,%r12b
8958(2): jz 0xffffffc0(%rip)
895a(4): movsx %r12b,%esi
895e(3): mov %r13,%rdi
8961(2): xor %ebp,%ebp
8963(5): call 0xffff9bfd(%rip)
8968(3): test %rax,%rax
896b(5): mov $0x1,%ebx
8970(5): mov 0x8(%rsp),%rcx
8975(2): jz 0xffffffa3(%rip)
8977(4): movsx %r12b,%esi
897b(3): mov %r13,%rdi
897e(5): mov %rcx,0x8(%rsp)
8983(5): call 0xffff9bdd(%rip)
8988(3): test %rax,%rax
898b(5): mov 0x8(%rsp),%rcx
8990(6): jz 0xcc(%rip)
8996(5): lea 0xffffffbb(%r12),%eax
899b(2): cmp $0x2f,%al
899d(2): jnbe 0x53(%rip)
899f(a): mov $0x142129060940101,%rdx
89a9(4): bt %rax,%rdx
89ad(2): jnb 0x43(%rip)
89af(5): mov $0x30,%esi
89b4(3): mov %r13,%rdi
89b7(5): mov %rcx,0x8(%rsp)
89bc(5): call 0xffff9ba4(%rip)
89c1(3): test %rax,%rax
89c4(5): mov 0x8(%rsp),%rcx
89c9(2): jz 0x27(%rip)
89cb(4): movzx 0x1(%rcx),%eax
89cf(2): cmp $0x44,%al
89d1(2): jz 0xe(%rip)
89d3(2): cmp $0x69,%al
89d5(6): jz 0x1d3(%rip)
89db(2): cmp $0x42,%al
89dd(2): jnz 0x13(%rip)
89df(5): mov $0x2,%edi
89e4(5): mov $0x3e8,%esi
89e9(2): jmp 0x11(%rip)
89eb(5): nop 0x0(%rax,%rax,1)
89f0(5): mov $0x1,%edi
89f5(5): mov $0x400,%esi
89fa(4): sub $0x42,%r12d
89fe(4): cmp $0x35,%r12b
8a02(2): jnbe 0x5a(%rip)
8a04(7): lea 0x5a7d(%rip),%rdx
8a0b(4): movzx %r12b,%r12d
8a0f(4): movsxd 0x0(%rdx,%r12,4),%rax
8a13(3): add %rdx,%rax
8a16(2): jmp %rax
8a18(3): mov %rbx,%rax
8a1b(3): mul %rax,%rsi,%rdx
8a1e(6): jo 0x1f3(%rip)
8a24(3): xor %r8d,%r8d
8a27(3): mul %rax,%rsi,%rdx
8a2a(6): jo 0x1d8(%rip)
8a30(3): mov %rax,%rbx
8a33(3): or %r8d,%ebp
8a36(a): nop 0x0(%rax,%rax,1)
8a40(3): movsxd %edi,%rdi
8a43(2): mov %ebp,%eax
8a45(3): add %rdi,%rcx
8a48(3): or $0x2,%eax
8a4b(3): mov %rcx,(%r15)
8a4e(3): cmp $0x0,(%rcx)
8a51(3): mov %rbx,(%r14)
8a54(3): cmovne %eax,%ebp
8a57(5): jmp 0xfffffec6(%rip)
8a5c(3): mov %rbx,(%r14)
8a5f(3): or $0x2,%ebp
8a62(5): jmp 0xfffffebb(%rip)
8a67(5): mov $0x2,%edx
8a6c(3): mov %rdx,%rax
8a6f(3): mul %rax,%rbx,%rdx
8a72(6): jo 0x9c(%rip)
8a78(3): add %rbx,%rbx
8a7b(2): jmp 0xffffffc5(%rip)
8a7d(5): mov $0x200,%edx
8a82(3): mov %rdx,%rax
8a85(3): mul %rax,%rbx,%rdx
8a88(6): jo 0x86(%rip)
8a8e(4): shl/sal $0x9,%rbx
8a92(2): jmp 0xffffffae(%rip)
8a94(6): mov $0x7,%r8d
8a9a(3): xor %r9d,%r9d
8a9d(3): nop (%rax)
8aa0(3): mov %rbx,%rax
8aa3(3): mul %rax,%rsi,%rdx
8aa6(3): mov %rax,%rbx
8aa9(6): jo 0x195(%rip)
8aaf(4): sub $0x1,%r8d
8ab3(2): jnz 0xffffffed(%rip)
8ab5(3): or %r9d,%ebp
8ab8(2): jmp 0xffffff88(%rip)
8aba(6): mov $0x8,%r8d
8ac0(3): xor %r9d,%r9d
8ac3(5): nop 0x0(%rax,%rax,1)
8ac8(3): mov %rbx,%rax
8acb(3): mul %rax,%rsi,%rdx
8ace(3): mov %rax,%rbx
8ad1(6): jo 0x14f(%rip)
8ad7(4): sub $0x1,%r8d
8adb(2): jnz 0xffffffed(%rip)
8add(2): jmp 0xffffffd8(%rip)
8adf(6): mov $0x4,%r8d
8ae5(3): xor %r9d,%r9d
8ae8(3): mov %rbx,%rax
8aeb(3): mul %rax,%rsi,%rdx
8aee(3): mov %rax,%rbx
8af1(6): jo 0x102(%rip)
8af7(4): sub $0x1,%r8d
8afb(2): jnz 0xffffffed(%rip)
8afd(2): jmp 0xffffffb8(%rip)
8aff(3): mov %rbx,%rax
8b02(3): mul %rax,%rsi,%rdx
8b05(3): mov %rax,%rbx
8b08(6): jno 0xffffff38(%rip)
8b0e(5): mov $0x1,%ebp
8b13(4): or $0xffffffff,%rbx
8b17(5): jmp 0xffffff29(%rip)
8b1c(4): nop 0x0(%rax)
8b20(6): mov $0x5,%r8d
8b26(3): xor %r9d,%r9d
8b29(3): mov %rbx,%rax
8b2c(3): mul %rax,%rsi,%rdx
8b2f(3): mov %rax,%rbx
8b32(6): jo 0xfd(%rip)
8b38(4): sub $0x1,%r8d
8b3c(2): jnz 0xffffffed(%rip)
8b3e(5): jmp 0xffffff77(%rip)
8b43(6): mov $0x6,%r8d
8b49(3): xor %r9d,%r9d
8b4c(3): mov %rbx,%rax
8b4f(3): mul %rax,%rsi,%rdx
8b52(3): mov %rax,%rbx
8b55(6): jo 0x8f(%rip)
8b5b(4): sub $0x1,%r8d
8b5f(2): jnz 0xffffffed(%rip)
8b61(5): jmp 0xffffff54(%rip)
8b66(5): mov $0x400,%edx
8b6b(3): mov %rdx,%rax
8b6e(3): mul %rax,%rbx,%rdx
8b71(2): jo 0xffffff9d(%rip)
8b73(4): shl/sal $0xa,%rbx
8b77(5): jmp 0xfffffec9(%rip)
8b7c(3): mov %rbx,%rax
8b7f(3): mul %rax,%rsi,%rdx
8b82(6): jo 0xcb(%rip)
8b88(3): xor %r8d,%r8d
8b8b(3): mul %rax,%rsi,%rdx
8b8e(6): jno 0xfffffe99(%rip)
8b94(6): mov $0x1,%r8d
8b9a(4): or $0xffffffff,%rax
8b9e(5): jmp 0xfffffe89(%rip)
8ba3(5): nop 0x0(%rax,%rax,1)
8ba8(2): xor %edi,%edi
8baa(4): cmp $0x42,0x2(%rcx)
8bae(5): mov $0x400,%esi
8bb3(4): setz %dil
8bb7(4): lea 0x1(%rdi,%rdi,1),%edi
8bbb(5): jmp 0xfffffe3f(%rip)
8bc0(5): call 0xffff9960(%rip)
8bc5(7): lea 0x5994(%rip),%rcx
8bcc(7): lea 0x578d(%rip),%rsi
8bd3(7): lea 0x57a6(%rip),%rdi
8bda(5): mov $0x54,%edx
8bdf(5): call 0xffff99c1(%rip)
8be4(6): mov $0x1,%r9d
8bea(4): or $0xffffffff,%rbx
8bee(5): jmp 0xffffff6d(%rip)
8bf3(6): mov $0x1,%r9d
8bf9(4): or $0xffffffff,%rbx
8bfd(5): jmp 0xfffffefa(%rip)
8c02(6): mov $0x1,%r8d
8c08(4): or $0xffffffff,%rbx
8c0c(5): jmp 0xfffffe27(%rip)
8c11(4): or $0xffffffff,%rax
8c15(6): mov $0x1,%r8d
8c1b(5): jmp 0xfffffe0c(%rip)
8c20(6): mov $0x1,%r9d
8c26(4): or $0xffffffff,%rbx
8c2a(5): jmp 0xfffffead(%rip)
8c2f(6): mov $0x1,%r9d
8c35(4): or $0xffffffff,%rbx
8c39(5): jmp 0xfffffeff(%rip)
8c3e(6): mov $0x1,%r9d
8c44(4): or $0xffffffff,%rbx
8c48(5): jmp 0xfffffe67(%rip)
8c4d(6): mov $0x1,%r8d
8c53(4): or $0xffffffff,%rax
8c57(5): jmp 0xffffff34(%rip)

"rpl_fcntl" :
8c60(2): push %r12
8c62(1): push %rbp
8c63(2): mov %edi,%ebp
8c65(1): push %rbx
8c66(4): sub $0x50,%rsp
8c6a(9): mov $0x28,%rax
8c73(5): mov %rax,0x18(%rsp)
8c78(2): xor %eax,%eax
8c7a(5): lea 0x70(%rsp),%rax
8c7f(2): test %esi,%esi
8c81(5): mov %rdx,0x30(%rsp)
8c86(5): mov %rcx,0x38(%rsp)
8c8b(5): mov %r8,0x40(%rsp)
8c90(5): mov %rax,0x8(%rsp)
8c95(5): lea 0x20(%rsp),%rax
8c9a(5): mov %r9,0x48(%rsp)
8c9f(7): mov $0x10,(%rsp)
8ca6(5): mov %rax,0x10(%rsp)
8cab(6): jz 0x207(%rip)
8cb1(6): cmp $0x406,%esi
8cb7(2): jnz 0x49(%rip)
8cb9(5): mov 0x10(%rsp),%rax
8cbe(7): cmp $0x0,0x208693(%rip)
8cc5(7): mov $0x18,(%rsp)
8ccc(4): mov 0x10(%rax),%r12d
8cd0(3): mov %r12d,%edx
8cd3(6): js 0x130(%rip)
8cd9(2): xor %eax,%eax
8cdb(5): mov $0x406,%esi
8ce0(5): call 0xffff97b0(%rip)
8ce5(2): test %eax,%eax
8ce7(2): mov %eax,%ebx
8ce9(6): js 0x18f(%rip)
8cef(a): mov $0x1,0x20865f(%rip)
8cf9(2): jmp 0x47(%rip)
8cfb(5): nop 0x0(%rax,%rax,1)
8d00(3): cmp $0xb,%esi
8d03(2): jz 0x2d(%rip)
8d05(2): jnle 0x5b(%rip)
8d07(3): cmp $0x4,%esi
8d0a(6): jz 0xd6(%rip)
8d10(6): jnle 0xc0(%rip)
8d16(3): cmp $0x2,%esi
8d19(6): jz 0xc7(%rip)
8d1f(2): jnle 0x11(%rip)
8d21(3): cmp $0x1,%esi
8d24(2): jnz 0x64(%rip)
8d26(a): nop 0x0(%rax,%rax,1)
8d30(2): mov %ebp,%edi
8d32(2): xor %eax,%eax
8d34(5): call 0xffff975c(%rip)
8d39(2): mov %eax,%ebx
8d3b(5): nop 0x0(%rax,%rax,1)
8d40(5): mov 0x18(%rsp),%rcx
8d45(9): xor $0x28,%rcx
8d4e(2): mov %ebx,%eax
8d50(6): jnz 0x15d(%rip)
8d56(4): add $0x50,%rsp
8d5a(1): pop %rbx
8d5b(1): pop %rbp
8d5c(2): pop %r12
8d5e(1): ret near (%rsp)
8d5f(1): nop 
8d60(6): cmp $0x407,%esi
8d66(2): jnle 0x4a(%rip)
8d68(6): cmp $0x406,%esi
8d6e(2): jnl 0x72(%rip)
8d70(6): cmp $0x401,%esi
8d76(2): jz 0xffffffba(%rip)
8d78(6): cmp $0x402,%esi
8d7e(2): jz 0x62(%rip)
8d80(6): cmp $0x400,%esi
8d86(2): jz 0x5a(%rip)
8d88(3): mov (%rsp),%eax
8d8b(3): cmp $0x2f,%eax
8d8e(6): jnbe 0x13c(%rip)
8d94(5): add 0x10(%rsp),%rax
8d99(3): mov (%rax),%rdx
8d9c(2): mov %ebp,%edi
8d9e(2): xor %eax,%eax
8da0(5): call 0xffff96f0(%rip)
8da5(2): mov %eax,%ebx
8da7(2): jmp 0xffffff99(%rip)
8da9(7): nop 0x0(%rax)
8db0(6): cmp $0x409,%esi
8db6(2): jz 0x2a(%rip)
8db8(6): jl 0xffffff78(%rip)
8dbe(6): cmp $0x40a,%esi
8dc4(2): jnz 0xffffffc4(%rip)
8dc6(5): jmp 0xffffff6a(%rip)
8dcb(5): nop 0x0(%rax,%rax,1)
8dd0(3): cmp $0x9,%esi
8dd3(6): jz 0xffffff5d(%rip)
8dd9(2): jnle 0x7(%rip)
8ddb(3): cmp $0x8,%esi
8dde(2): jnz 0xffffffaa(%rip)
8de0(3): mov (%rsp),%eax
8de3(3): cmp $0x2f,%eax
8de6(6): jnbe 0xee(%rip)
8dec(5): add 0x10(%rsp),%rax
8df1(2): mov (%rax),%edx
8df3(2): mov %ebp,%edi
8df5(2): xor %eax,%eax
8df7(5): call 0xffff9699(%rip)
8dfc(2): mov %eax,%ebx
8dfe(5): jmp 0xffffff42(%rip)
8e03(2): xor %esi,%esi
8e05(2): xor %eax,%eax
8e07(5): call 0xffff9689(%rip)
8e0c(2): test %eax,%eax
8e0e(2): mov %eax,%ebx
8e10(6): js 0xffffff30(%rip)
8e16(7): cmp $0xff,0x20853b(%rip)
8e1d(6): jnz 0xffffff23(%rip)
8e23(2): xor %eax,%eax
8e25(5): mov $0x1,%esi
8e2a(2): mov %ebx,%edi
8e2c(5): call 0xffff9664(%rip)
8e31(2): test %eax,%eax
8e33(2): js 0x1e(%rip)
8e35(3): or $0x1,%eax
8e38(5): mov $0x2,%esi
8e3d(2): mov %ebx,%edi
8e3f(2): mov %eax,%edx
8e41(2): xor %eax,%eax
8e43(5): call 0xffff964d(%rip)
8e48(3): cmp $0xff,%eax
8e4b(6): jnz 0xfffffef5(%rip)
8e51(5): call 0xffff95ff(%rip)
8e56(3): mov (%rax),%r12d
8e59(3): mov %rax,%rbp
8e5c(2): mov %ebx,%edi
8e5e(5): call 0xffff9782(%rip)
8e63(5): mov $0xffffffff,%ebx
8e68(4): mov %r12d,0x0(%rbp)
8e6c(5): jmp 0xfffffed4(%rip)
8e71(7): nop 0x0(%rax)
8e78(5): call 0xffff95d8(%rip)
8e7d(3): cmp $0x16,(%rax)
8e80(6): jnz 0xfffffe6f(%rip)
8e86(2): xor %esi,%esi
8e88(2): xor %eax,%eax
8e8a(3): mov %r12d,%edx
8e8d(2): mov %ebp,%edi
8e8f(5): call 0xffff9601(%rip)
8e94(2): test %eax,%eax
8e96(2): mov %eax,%ebx
8e98(6): js 0xfffffea8(%rip)
8e9e(a): mov $0xffffffff,0x2084b0(%rip)
8ea8(5): jmp 0xffffff7b(%rip)
8ead(5): call 0xffff9673(%rip)
8eb2(5): mov 0x10(%rsp),%rax
8eb7(2): xor %esi,%esi
8eb9(3): mov 0x10(%rax),%edx
8ebc(2): xor %eax,%eax
8ebe(5): call 0xffff95d2(%rip)
8ec3(2): mov %eax,%ebx
8ec5(5): jmp 0xfffffe7b(%rip)
8eca(5): mov 0x8(%rsp),%rax
8ecf(5): jmp 0xfffffeca(%rip)
8ed4(5): mov 0x8(%rsp),%rax
8ed9(5): jmp 0xffffff18(%rip)

"rpl_mbrtowc" :
8ee0(2): push %r13
8ee2(2): push %r12
8ee4(3): mov %rsi,%r13
8ee7(1): push %rbp
8ee8(1): push %rbx
8ee9(3): mov %rdi,%rbx
8eec(3): mov %rdx,%r12
8eef(4): sub $0x18,%rsp
8ef3(9): mov $0x28,%rax
8efc(5): mov %rax,0x8(%rsp)
8f01(2): xor %eax,%eax
8f03(5): lea 0x4(%rsp),%rax
8f08(3): test %rdi,%rdi
8f0b(4): cmove %rax,%rbx
8f0f(3): mov %rbx,%rdi
8f12(5): call 0xffff962e(%rip)
8f17(4): cmp $0xfffffffd,%rax
8f1b(3): mov %rax,%rbp
8f1e(2): jbe 0x22(%rip)
8f20(3): test %r12,%r12
8f23(2): jz 0x1d(%rip)
8f25(2): xor %edi,%edi
8f27(5): call 0x149(%rip)
8f2c(2): test %al,%al
8f2e(2): jnz 0x12(%rip)
8f30(5): movzx 0x0(%r13),%eax
8f35(5): mov $0x1,%ebp
8f3a(2): mov %eax,(%rbx)
8f3c(4): nop 0x0(%rax)
8f40(5): mov 0x8(%rsp),%rdx
8f45(9): xor $0x28,%rdx
8f4e(3): mov %rbp,%rax
8f51(2): jnz 0xd(%rip)
8f53(4): add $0x18,%rsp
8f57(1): pop %rbx
8f58(1): pop %rbp
8f59(2): pop %r12
8f5b(2): pop %r13
8f5d(1): ret near (%rsp)
8f5e(5): call 0xffff95c2(%rip)

"rpl_vasprintf" :
8f70(1): push %rbx
8f71(3): mov %rsi,%rax
8f74(3): mov %rdi,%rbx
8f77(2): xor %edi,%edi
8f79(4): sub $0x10,%rsp
8f7d(9): mov $0x28,%rcx
8f86(5): mov %rcx,0x8(%rsp)
8f8b(2): xor %ecx,%ecx
8f8d(3): mov %rsp,%rsi
8f90(3): mov %rdx,%rcx
8f93(3): mov %rax,%rdx
8f96(5): call 0x29a(%rip)
8f9b(3): test %rax,%rax
8f9e(2): jz 0x44(%rip)
8fa0(4): mov (%rsp),%rdx
8fa4(7): cmp $0x7fffffff,%rdx
8fab(2): jnbe 0x1d(%rip)
8fad(3): mov %rax,(%rbx)
8fb0(2): mov %edx,%eax
8fb2(5): mov 0x8(%rsp),%rbx
8fb7(9): xor $0x28,%rbx
8fc0(2): jnz 0x29(%rip)
8fc2(4): add $0x10,%rsp
8fc6(1): pop %rbx
8fc7(1): ret near (%rsp)
8fc8(3): mov %rax,%rdi
8fcb(5): call 0xffff9465(%rip)
8fd0(5): call 0xffff9480(%rip)
8fd5(6): mov $0x4b,(%rax)
8fdb(5): mov $0xffffffff,%eax
8fe0(2): jmp 0xffffffd2(%rip)
8fe2(5): mov $0xffffffff,%eax
8fe7(2): jmp 0xffffffcb(%rip)
8fe9(5): call 0xffff9537(%rip)

"close_stream" :
8ff0(2): push %r12
8ff2(1): push %rbp
8ff3(3): mov %rdi,%rbp
8ff6(1): push %rbx
8ff7(5): call 0xffff9489(%rip)
8ffc(3): mov 0x0(%rbp),%ebx
8fff(3): mov %rbp,%rdi
9002(3): mov %rax,%r12
9005(5): call 0x10b(%rip)
900a(3): and $0x20,%ebx
900d(2): test %ebx,%ebx
900f(2): jnz 0x19(%rip)
9011(2): test %eax,%eax
9013(2): jz 0xc(%rip)
9015(3): test %r12,%r12
9018(5): mov $0xffffffff,%eax
901d(2): jz 0x3b(%rip)
901f(1): pop %rbx
9020(1): pop %rbp
9021(2): pop %r12
9023(1): ret near (%rsp)
9024(4): nop 0x0(%rax)
9028(2): test %eax,%eax
902a(2): jnz 0x1e(%rip)
902c(5): call 0xffff9424(%rip)
9031(6): mov $0x0,(%rax)
9037(5): mov $0xffffffff,%eax
903c(1): pop %rbx
903d(1): pop %rbp
903e(2): pop %r12
9040(1): ret near (%rsp)
9041(7): nop 0x0(%rax)
9048(1): pop %rbx
9049(5): mov $0xffffffff,%eax
904e(1): pop %rbp
904f(2): pop %r12
9051(1): ret near (%rsp)
9052(6): nop 0x0(%rax,%rax,1)
9058(5): call 0xffff93f8(%rip)
905d(3): cmp $0x9,(%rax)
9060(1): pop %rbx
9061(1): pop %rbp
9062(2): pop %r12
9064(3): setnz %al
9067(3): movzx %al,%eax
906a(2): neg %eax
906c(1): ret near (%rsp)

"hard_locale" :
9070(4): sub $0x8,%rsp
9074(2): xor %esi,%esi
9076(5): call 0xffff963a(%rip)
907b(3): mov %rax,%rdx
907e(5): mov $0x1,%eax
9083(3): test %rdx,%rdx
9086(2): jz 0x1f(%rip)
9088(7): lea 0x54dc(%rip),%rdi
908f(5): mov $0x2,%ecx
9094(3): mov %rdx,%rsi
9097(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9099(3): setnbe %cl
909c(3): sbb $0x0,%cl
909f(2): xor %eax,%eax
90a1(2): test %cl,%cl
90a3(2): jnz 0xd(%rip)
90a5(4): add $0x8,%rsp
90a9(1): ret near (%rsp)
90aa(6): nop 0x0(%rax,%rax,1)
90b0(7): lea 0x54b6(%rip),%rdi
90b7(5): mov $0x6,%ecx
90bc(3): mov %rdx,%rsi
90bf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
90c1(3): setnbe %al
90c4(2): sbb $0x0,%al
90c6(2): test %al,%al
90c8(3): setnz %al
90cb(4): add $0x8,%rsp
90cf(1): ret near (%rsp)

"locale_charset" :
90d0(4): sub $0x8,%rsp
90d4(5): mov $0xe,%edi
90d9(5): call 0xffff95a7(%rip)
90de(3): test %rax,%rax
90e1(2): jz 0x1f(%rip)
90e3(3): cmp $0x0,(%rax)
90e6(7): lea 0x5486(%rip),%rdx
90ed(4): cmove %rdx,%rax
90f1(4): add $0x8,%rsp
90f5(1): ret near (%rsp)
90f6(a): nop 0x0(%rax,%rax,1)
9100(7): lea 0x546c(%rip),%rax
9107(4): add $0x8,%rsp
910b(1): ret near (%rsp)

"rpl_fclose" :
9110(2): push %r12
9112(1): push %rbp
9113(1): push %rbx
9114(3): mov %rdi,%rbx
9117(5): call 0xffff9539(%rip)
911c(2): test %eax,%eax
911e(3): mov %rbx,%rdi
9121(2): js 0x56(%rip)
9123(5): call 0xffff956d(%rip)
9128(2): test %eax,%eax
912a(2): jnz 0x2e(%rip)
912c(3): mov %rbx,%rdi
912f(5): call 0x61(%rip)
9134(2): test %eax,%eax
9136(2): jz 0x3e(%rip)
9138(5): call 0xffff9318(%rip)
913d(3): mov (%rax),%r12d
9140(3): mov %rbx,%rdi
9143(3): mov %rax,%rbp
9146(5): call 0xffff937a(%rip)
914b(3): test %r12d,%r12d
914e(2): jnz 0x32(%rip)
9150(1): pop %rbx
9151(1): pop %rbp
9152(2): pop %r12
9154(1): ret near (%rsp)
9155(3): nop (%rax)
9158(3): mov %rbx,%rdi
915b(5): call 0xffff94f5(%rip)
9160(2): xor %esi,%esi
9162(5): mov $0x1,%edx
9167(2): mov %eax,%edi
9169(5): call 0xffff9427(%rip)
916e(4): cmp $0xffffffff,%rax
9172(2): jnz 0xffffffba(%rip)
9174(3): mov %rbx,%rdi
9177(1): pop %rbx
9178(1): pop %rbp
9179(2): pop %r12
917b(5): jmp 0xffff9345(%rip)
9180(4): mov %r12d,0x0(%rbp)
9184(5): mov $0xffffffff,%eax
9189(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
9190(3): test %rdi,%rdi
9193(1): push %rbx
9194(3): mov %rdi,%rbx
9197(2): jz 0x13(%rip)
9199(5): call 0xffff94f7(%rip)
919e(2): test %eax,%eax
91a0(2): jz 0xa(%rip)
91a2(6): test $0x100,(%rbx)
91a8(2): jnz 0x10(%rip)
91aa(3): mov %rbx,%rdi
91ad(1): pop %rbx
91ae(5): jmp 0xffff94c2(%rip)
91b3(5): nop 0x0(%rax,%rax,1)
91b8(3): mov %rbx,%rdi
91bb(5): mov $0x1,%edx
91c0(2): xor %esi,%esi
91c2(5): call 0xe(%rip)
91c7(3): mov %rbx,%rdi
91ca(1): pop %rbx
91cb(5): jmp 0xffff94a5(%rip)

"rpl_fseeko" :
91d0(4): mov 0x8(%rdi),%rax
91d4(4): cmp %rax,0x10(%rdi)
91d8(2): jz 0x8(%rip)
91da(5): jmp 0xffff9546(%rip)
91df(1): nop 
91e0(4): mov 0x20(%rdi),%rax
91e4(4): cmp %rax,0x28(%rdi)
91e8(2): jnz 0xfffffff2(%rip)
91ea(5): cmp $0x0,0x48(%rdi)
91ef(2): jnz 0xffffffeb(%rip)
91f1(2): push %r12
91f3(1): push %rbp
91f4(3): mov %edx,%r12d
91f7(1): push %rbx
91f8(3): mov %rsi,%rbp
91fb(3): mov %rdi,%rbx
91fe(5): call 0xffff9452(%rip)
9203(3): mov %r12d,%edx
9206(3): mov %rbp,%rsi
9209(2): mov %eax,%edi
920b(5): call 0xffff9385(%rip)
9210(4): cmp $0xffffffff,%rax
9214(2): jz 0xe(%rip)
9216(3): and $0xef,(%rbx)
9219(7): mov %rax,0x90(%rbx)
9220(2): xor %eax,%eax
9222(1): pop %rbx
9223(1): pop %rbp
9224(2): pop %r12
9226(1): ret near (%rsp)

"vasnprintf" :
9230(1): push %rbp
9231(3): mov %rsp,%rbp
9234(2): push %r15
9236(2): push %r14
9238(2): push %r13
923a(2): push %r12
923c(7): lea 0xfffffc50(%rbp),%r14
9243(1): push %rbx
9244(3): mov %rdx,%rbx
9247(3): mov %rcx,%r12
924a(3): mov %r14,%rdx
924d(7): sub $0x408,%rsp
9254(7): mov %rsi,0xfffffbe8(%rbp)
925b(7): lea 0xfffffd40(%rbp),%rsi
9262(7): mov %rdi,0xfffffc18(%rbp)
9269(3): mov %rbx,%rdi
926c(7): mov %r14,0xfffffbf0(%rbp)
9273(9): mov $0x28,%rax
927c(4): mov %rax,0xffffffc8(%rbp)
9280(2): xor %eax,%eax
9282(7): mov %rsi,0xfffffbf8(%rbp)
9289(5): call 0x12c7(%rip)
928e(2): test %eax,%eax
9290(6): js 0xe68(%rip)
9296(3): mov %r14,%rsi
9299(3): mov %r12,%rdi
929c(5): call 0x10b4(%rip)
92a1(2): test %eax,%eax
92a3(6): js 0xebd(%rip)
92a9(7): mov 0xfffffd50(%rbp),%rax
92b0(7): mov $0xffffffff,%rdx
92b7(4): add $0x7,%rax
92bb(4): cmp $0x6,%rax
92bf(4): cmovbe %rdx,%rax
92c3(7): add 0xfffffd58(%rbp),%rax
92ca(6): jb 0xa2e(%rip)
92d0(3): mov %rax,%rdi
92d3(3): xor %r8d,%r8d
92d6(4): add $0x6,%rdi
92da(4): setb %r8b
92de(6): jb 0xa1a(%rip)
92e4(7): cmp $0xf9f,%rdi
92eb(6): jbe 0x14d(%rip)
92f1(4): cmp $0xffffffff,%rdi
92f5(7): mov %r8,0xfffffc38(%rbp)
92fc(6): jz 0x9fc(%rip)
9302(5): call 0xffff935e(%rip)
9307(3): test %rax,%rax
930a(7): mov %rax,0xfffffc28(%rbp)
9311(6): jz 0x9e7(%rip)
9317(7): mov 0xfffffc38(%rbp),%r8
931e(7): mov %rax,0xfffffbe0(%rbp)
9325(3): xor %r12d,%r12d
9328(8): cmp $0x0,0xfffffc18(%rbp)
9330(2): jz 0xc(%rip)
9332(7): mov 0xfffffbe8(%rbp),%rax
9339(3): mov (%rax),%r12
933c(7): mov 0xfffffd48(%rbp),%r13
9343(7): lea 0xfffffc44(%rbp),%rax
934a(7): mov 0xfffffc18(%rbp),%r15
9351(b): mov $0x0,0xfffffc00(%rbp)
935c(7): mov %rax,0xfffffc10(%rbp)
9363(3): mov %rbx,%rax
9366(3): mov %r8,%rbx
9369(4): mov 0x0(%r13),%rcx
936d(3): mov %rax,%r8
9370(3): cmp %r8,%rcx
9373(6): jz 0x96e(%rip)
9379(3): sub %r8,%rcx
937c(3): mov %rbx,%rax
937f(3): add %rcx,%rax
9382(3): mov %rax,%r14
9385(6): jnb 0xe3(%rip)
938b(4): cmp $0xffffffff,%r12
938f(6): jz 0xad1(%rip)
9395(5): call 0xffff90bb(%rip)
939a(7): mov %rax,0xfffffc38(%rbp)
93a1(7): cmp 0xfffffc18(%rbp),%r15
93a8(2): jz 0xb(%rip)
93aa(3): test %r15,%r15
93ad(6): jnz 0xae3(%rip)
93b3(7): mov 0xfffffbe0(%rbp),%rax
93ba(3): test %rax,%rax
93bd(2): jz 0xa(%rip)
93bf(3): mov %rax,%rdi
93c2(5): call 0xffff906e(%rip)
93c7(7): mov 0xfffffbf8(%rbp),%rax
93ce(7): mov 0xfffffd48(%rbp),%rdi
93d5(4): add $0x20,%rax
93d9(3): cmp %rax,%rdi
93dc(2): jz 0x7(%rip)
93de(5): call 0xffff9052(%rip)
93e3(7): mov 0xfffffbf0(%rbp),%rax
93ea(7): mov 0xfffffc58(%rbp),%rdi
93f1(4): add $0x10,%rax
93f5(3): cmp %rax,%rdi
93f8(2): jz 0x7(%rip)
93fa(5): call 0xffff9036(%rip)
93ff(7): mov 0xfffffc38(%rbp),%rax
9406(3): xor %r15d,%r15d
9409(6): mov $0xc,(%rax)
940f(4): mov 0xffffffc8(%rbp),%rdi
9413(9): xor $0x28,%rdi
941c(3): mov %r15,%rax
941f(6): jnz 0xf08(%rip)
9425(4): lea 0xffffffd8(%rbp),%rsp
9429(1): pop %rbx
942a(2): pop %r12
942c(2): pop %r13
942e(2): pop %r14
9430(2): pop %r15
9432(1): pop %rbp
9433(1): ret near (%rsp)
9434(4): nop 0x0(%rax)
9438(4): add $0x24,%rax
943c(b): mov $0x0,0xfffffbe0(%rbp)
9447(4): and $0xfffffff0,%rax
944b(3): sub %rax,%rsp
944e(5): lea 0xf(%rsp),%rax
9453(4): and $0xfffffff0,%rax
9457(7): mov %rax,0xfffffc28(%rbp)
945e(5): jmp 0xfffffec7(%rip)
9463(5): nop 0x0(%rax,%rax,1)
9468(3): cmp %rax,%r12
946b(2): jnb 0x69(%rip)
946d(3): test %r12,%r12
9470(6): jnz 0x930(%rip)
9476(4): cmp $0xc,%rax
947a(6): jnbe 0x938(%rip)
9480(6): mov $0xc,%r12d
9486(7): cmp 0xfffffc18(%rbp),%r15
948d(3): setz %dl
9490(3): test %r15,%r15
9493(6): jz 0x945(%rip)
9499(2): test %dl,%dl
949b(6): jnz 0x93d(%rip)
94a1(3): mov %r12,%rsi
94a4(3): mov %r15,%rdi
94a7(7): mov %r8,0xfffffc30(%rbp)
94ae(7): mov %rcx,0xfffffc38(%rbp)
94b5(5): call 0xffff91eb(%rip)
94ba(3): test %rax,%rax
94bd(7): mov 0xfffffc38(%rbp),%rcx
94c4(7): mov 0xfffffc30(%rbp),%r8
94cb(6): jz 0x9b0(%rip)
94d1(3): mov %rax,%r15
94d4(4): lea 0x0(%r15,%rbx,1),%rdi
94d8(3): mov %rcx,%rdx
94db(3): mov %r8,%rsi
94de(5): call 0xffff9162(%rip)
94e3(7): mov 0xfffffc00(%rbp),%rax
94ea(7): cmp %rax,0xfffffd40(%rbp)
94f1(6): jz 0xcba(%rip)
94f7(5): movzx 0x48(%r13),%edx
94fc(4): mov 0x50(%r13),%rax
9500(3): cmp $0x25,%dl
9503(6): jz 0x795(%rip)
9509(4): cmp $0xffffffff,%rax
950d(6): jz 0xc49(%rip)
9513(7): mov 0xfffffc58(%rbp),%r8
951a(4): shl/sal $0x5,%rax
951e(3): add %r8,%rax
9521(3): cmp $0x6e,%dl
9524(2): mov (%rax),%edi
9526(6): mov %edi,0xfffffc30(%rbp)
952c(6): jz 0x7e4(%rip)
9532(4): mov 0x10(%r13),%eax
9536(7): mov 0xfffffc28(%rbp),%rdi
953d(2): test $0x1,%al
953f(3): mov $0x25,(%rdi)
9542(4): lea 0x1(%rdi),%rbx
9546(2): jz 0x11(%rip)
9548(7): mov 0xfffffc28(%rbp),%rdi
954f(4): lea 0x2(%rdi),%rbx
9553(4): mov $0x27,0x1(%rdi)
9557(2): test $0x2,%al
9559(2): jz 0x9(%rip)
955b(3): mov $0x2d,(%rbx)
955e(4): add $0x1,%rbx
9562(2): test $0x4,%al
9564(2): jz 0x9(%rip)
9566(3): mov $0x2b,(%rbx)
9569(4): add $0x1,%rbx
956d(2): test $0x8,%al
956f(2): jz 0x9(%rip)
9571(3): mov $0x20,(%rbx)
9574(4): add $0x1,%rbx
9578(2): test $0x10,%al
957a(2): jz 0x9(%rip)
957c(3): mov $0x23,(%rbx)
957f(4): add $0x1,%rbx
9583(2): test $0x40,%al
9585(2): jz 0x9(%rip)
9587(3): mov $0x49,(%rbx)
958a(4): add $0x1,%rbx
958e(2): test $0x20,%al
9590(2): jz 0x9(%rip)
9592(3): mov $0x30,(%rbx)
9595(4): add $0x1,%rbx
9599(4): mov 0x18(%r13),%rsi
959d(4): mov 0x20(%r13),%rdx
95a1(3): cmp %rdx,%rsi
95a4(2): jz 0x32(%rip)
95a6(3): mov %rdx,%rcx
95a9(3): mov %rbx,%rdi
95ac(7): mov %r8,0xfffffc20(%rbp)
95b3(3): sub %rsi,%rcx
95b6(3): mov %rcx,%rdx
95b9(7): mov %rcx,0xfffffc38(%rbp)
95c0(5): call 0xffff9080(%rip)
95c5(7): mov 0xfffffc38(%rbp),%rcx
95cc(7): mov 0xfffffc20(%rbp),%r8
95d3(3): add %rcx,%rbx
95d6(4): mov 0x30(%r13),%rsi
95da(4): mov 0x38(%r13),%rdx
95de(3): cmp %rdx,%rsi
95e1(2): jz 0x32(%rip)
95e3(3): mov %rdx,%rcx
95e6(3): mov %rbx,%rdi
95e9(7): mov %r8,0xfffffc20(%rbp)
95f0(3): sub %rsi,%rcx
95f3(3): mov %rcx,%rdx
95f6(7): mov %rcx,0xfffffc38(%rbp)
95fd(5): call 0xffff9043(%rip)
9602(7): mov 0xfffffc38(%rbp),%rcx
9609(7): mov 0xfffffc20(%rbp),%r8
9610(3): add %rcx,%rbx
9613(6): mov 0xfffffc30(%rbp),%edi
9619(3): cmp $0x10,%edi
961c(2): jnbe 0x2f(%rip)
961e(5): mov $0x1,%eax
9623(2): mov %edi,%ecx
9625(3): shl/sal %cl,%rax
9628(5): test $0x14180,%eax
962d(2): jnz 0x17(%rip)
962f(3): test $0x10,%ah
9632(6): jnz 0x95e(%rip)
9638(3): test $0x6,%ah
963b(2): jz 0x10(%rip)
963d(3): mov $0x6c,(%rbx)
9640(4): add $0x1,%rbx
9644(3): mov $0x6c,(%rbx)
9647(4): add $0x1,%rbx
964b(5): movzx 0x48(%r13),%eax
9650(4): mov $0x0,0x1(%rbx)
9654(2): mov %al,(%rbx)
9656(4): mov 0x28(%r13),%rax
965a(4): cmp $0xffffffff,%rax
965e(6): jz 0x732(%rip)
9664(4): shl/sal $0x5,%rax
9668(3): add %r8,%rax
966b(3): cmp $0x5,(%rax)
966e(6): jnz 0xae8(%rip)
9674(3): mov 0x10(%rax),%eax
9677(a): mov $0x1,0xfffffc20(%rbp)
9681(6): mov %eax,0xfffffc48(%rbp)
9687(4): mov 0x40(%r13),%rax
968b(4): cmp $0xffffffff,%rax
968f(2): jz 0x2d(%rip)
9691(4): shl/sal $0x5,%rax
9695(3): add %rax,%r8
9698(4): cmp $0x5,(%r8)
969c(6): jnz 0xaba(%rip)
96a2(6): mov 0xfffffc20(%rbp),%eax
96a8(4): mov 0x10(%r8),%edx
96ac(7): mov %edx,0xfffffc48(%rbp,%rax,4)
96b3(3): lea 0x1(%rax),%eax
96b6(6): mov %eax,0xfffffc20(%rbp)
96bc(3): mov %r14,%rax
96bf(2): xor %edx,%edx
96c1(4): add $0x2,%rax
96c5(6): jb 0xc67(%rip)
96cb(3): cmp %rax,%r12
96ce(2): jnb 0x4d(%rip)
96d0(3): test %r12,%r12
96d3(6): jnz 0x825(%rip)
96d9(4): cmp $0xc,%rax
96dd(6): jnbe 0x833(%rip)
96e3(6): mov $0xc,%r12d
96e9(7): cmp 0xfffffc18(%rbp),%r15
96f0(3): setz %dl
96f3(3): test %r15,%r15
96f6(6): jz 0x84a(%rip)
96fc(2): test %dl,%dl
96fe(6): jnz 0x842(%rip)
9704(3): mov %r12,%rsi
9707(3): mov %r15,%rdi
970a(5): call 0xffff8f96(%rip)
970f(3): test %rax,%rax
9712(6): jz 0xfffffc83(%rip)
9718(3): mov %rax,%r15
971b(5): mov $0x0,0x0(%r15,%r14,1)
9720(5): call 0xffff8d30(%rip)
9725(7): mov %rax,0xfffffc38(%rbp)
972c(2): mov (%rax),%eax
972e(7): mov %rbx,0xfffffc08(%rbp)
9735(6): mov %eax,0xfffffbdc(%rbp)
973b(5): nop 0x0(%rax,%rax,1)
9740(7): mov 0xfffffc38(%rbp),%rax
9747(3): mov %r12,%rbx
974a(6): mov $0x7fffffff,%r10d
9750(3): sub %r14,%rbx
9753(a): mov $0xffffffff,0xfffffc44(%rbp)
975d(7): cmp $0x7fffffff,%rbx
9764(6): mov $0x0,(%rax)
976a(6): mov 0xfffffc30(%rbp),%eax
9770(4): cmovbe %rbx,%r10
9774(3): cmp $0x11,%eax
9777(6): jnbe 0x9df(%rip)
977d(7): lea 0x4df8(%rip),%rsi
9784(4): movsxd 0x0(%rsi,%rax,4),%rax
9788(3): add %rsi,%rax
978b(2): jmp %rax
978d(3): nop (%rax)
9790(4): mov 0x50(%r13),%rax
9794(4): lea 0x0(%r15,%r14,1),%rdi
9798(4): shl/sal $0x5,%rax
979c(7): add 0xfffffc58(%rbp),%rax
97a3(4): mov 0x10(%rax),%r9
97a7(6): mov 0xfffffc20(%rbp),%eax
97ad(3): cmp $0x1,%eax
97b0(6): jz 0x4c8(%rip)
97b6(3): cmp $0x2,%eax
97b9(6): jz 0x4a7(%rip)
97bf(4): sub $0x8,%rsp
97c3(6): push 0xfffffc10(%rbp)
97c9(7): mov 0xfffffc28(%rbp),%r8
97d0(3): mov %r10,%rsi
97d3(7): mov $0xffffffff,%rcx
97da(5): mov $0x1,%edx
97df(2): xor %eax,%eax
97e1(7): mov %r10,0xfffffbd0(%rbp)
97e8(5): call 0xffff8c38(%rip)
97ed(1): pop %rsi
97ee(1): pop %rdi
97ef(7): mov 0xfffffbd0(%rbp),%r10
97f6(6): mov 0xfffffc44(%rbp),%ecx
97fc(2): test %ecx,%ecx
97fe(6): js 0x13e(%rip)
9804(3): movsxd %ecx,%rdx
9807(3): cmp %r10,%rdx
980a(2): jnb 0x10(%rip)
980c(3): add %r15,%rdx
980f(5): cmp $0x0,0x0(%rdx,%r14,1)
9814(6): jnz 0x942(%rip)
981a(2): cmp %eax,%ecx
981c(2): jnl 0xa(%rip)
981e(6): mov %eax,0xfffffc44(%rbp)
9824(2): mov %eax,%ecx
9826(3): lea 0x1(%rcx),%eax
9829(3): cmp %r10,%rax
982c(6): jb 0x834(%rip)
9832(7): cmp $0x7ffffffe,%rbx
9839(6): jnbe 0x847(%rip)
983f(4): lea 0x0(%r12,%r12,1),%rsi
9843(3): lea 0x2(%rcx),%edx
9846(3): test %r12,%r12
9849(7): mov $0xffffffff,%rax
9850(4): cmovns %rsi,%rax
9854(3): add %r14,%rdx
9857(6): jb 0xac1(%rip)
985d(3): cmp %rdx,%rax
9860(4): cmovnae %rdx,%rax
9864(3): cmp %rax,%r12
9867(6): jnb 0xfffffed9(%rip)
986d(3): test %r12,%r12
9870(6): js 0xfffffb31(%rip)
9876(3): cmp %rax,%rsi
9879(3): mov %rsi,%r12
987c(2): jnb 0xf(%rip)
987e(4): cmp $0xffffffff,%rax
9882(6): jz 0xfffffb1f(%rip)
9888(3): mov %rax,%r12
988b(7): cmp 0xfffffc18(%rbp),%r15
9892(3): setz %bl
9895(3): test %r15,%r15
9898(6): jz 0x388(%rip)
989e(2): test %bl,%bl
98a0(6): jnz 0x380(%rip)
98a6(3): mov %r12,%rsi
98a9(3): mov %r15,%rdi
98ac(5): call 0xffff8df4(%rip)
98b1(3): test %rax,%rax
98b4(6): jz 0xfffffaed(%rip)
98ba(3): mov %rax,%r15
98bd(5): jmp 0xfffffe83(%rip)
98c2(6): nop 0x0(%rax,%rax,1)
98c8(4): mov 0x50(%r13),%rax
98cc(4): lea 0x0(%r15,%r14,1),%rdi
98d0(4): shl/sal $0x5,%rax
98d4(7): add 0xfffffc58(%rbp),%rax
98db(4): mov 0x10(%rax),%r9d
98df(6): mov 0xfffffc20(%rbp),%eax
98e5(3): cmp $0x1,%eax
98e8(6): jz 0x238(%rip)
98ee(3): cmp $0x2,%eax
98f1(6): jz 0x277(%rip)
98f7(4): sub $0x8,%rsp
98fb(6): push 0xfffffc10(%rbp)
9901(7): mov 0xfffffc28(%rbp),%r8
9908(7): mov $0xffffffff,%rcx
990f(5): mov $0x1,%edx
9914(3): mov %r10,%rsi
9917(2): xor %eax,%eax
9919(7): mov %r10,0xfffffbd0(%rbp)
9920(5): call 0xffff8b00(%rip)
9925(1): pop %rdx
9926(1): pop %rcx
9927(6): mov 0xfffffc44(%rbp),%ecx
992d(7): mov 0xfffffbd0(%rbp),%r10
9934(2): test %ecx,%ecx
9936(6): jns 0xfffffece(%rip)
993c(7): mov 0xfffffc08(%rbp),%rdi
9943(4): cmp $0x0,0x1(%rdi)
9947(6): jnz 0x341(%rip)
994d(2): test %eax,%eax
994f(6): jns 0xfffffecf(%rip)
9955(7): mov 0xfffffc38(%rbp),%rax
995c(2): mov (%rax),%ebx
995e(2): test %ebx,%ebx
9960(2): jnz 0x20(%rip)
9962(5): movzx 0x48(%r13),%eax
9967(5): mov $0x16,%ebx
996c(3): and $0xef,%eax
996f(2): cmp $0x63,%al
9971(5): mov $0x54,%eax
9976(3): cmove %eax,%ebx
9979(7): nop 0x0(%rax)
9980(7): cmp 0xfffffc18(%rbp),%r15
9987(2): jz 0xb(%rip)
9989(3): test %r15,%r15
998c(6): jnz 0x7b0(%rip)
9992(7): mov 0xfffffbe0(%rbp),%rax
9999(3): test %rax,%rax
999c(2): jz 0xa(%rip)
999e(3): mov %rax,%rdi
99a1(5): call 0xffff8a8f(%rip)
99a6(7): mov 0xfffffbf8(%rbp),%rax
99ad(7): mov 0xfffffd48(%rbp),%rdi
99b4(4): add $0x20,%rax
99b8(3): cmp %rax,%rdi
99bb(2): jz 0x7(%rip)
99bd(5): call 0xffff8a73(%rip)
99c2(7): mov 0xfffffbf0(%rbp),%rax
99c9(7): mov 0xfffffc58(%rbp),%rdi
99d0(4): add $0x10,%rax
99d4(3): cmp %rax,%rdi
99d7(2): jz 0x7(%rip)
99d9(5): call 0xffff8a57(%rip)
99de(7): mov 0xfffffc38(%rbp),%rax
99e5(3): xor %r15d,%r15d
99e8(2): mov %ebx,(%rax)
99ea(5): jmp 0xfffffa25(%rip)
99ef(1): nop 
99f0(4): mov 0x50(%r13),%rax
99f4(4): lea 0x0(%r15,%r14,1),%rdi
99f8(4): shl/sal $0x5,%rax
99fc(7): add 0xfffffc58(%rbp),%rax
9a03(3): fld 0x10(%rax),%st0
9a06(6): mov 0xfffffc20(%rbp),%eax
9a0c(3): cmp $0x1,%eax
9a0f(6): jz 0x631(%rip)
9a15(3): cmp $0x2,%eax
9a18(6): jnz 0x4c8(%rip)
9a1e(6): mov 0xfffffc4c(%rbp),%eax
9a24(4): sub $0x8,%rsp
9a28(6): push 0xfffffc10(%rbp)
9a2e(7): mov 0xfffffc48(%rbp),%r9d
9a35(7): mov 0xfffffc28(%rbp),%r8
9a3c(3): mov %r10,%rsi
9a3f(4): sub $0x18,%rsp
9a43(7): mov $0xffffffff,%rcx
9a4a(5): mov $0x1,%edx
9a4f(4): fstp %st0,0x8(%rsp)
9a53(1): push %rax
9a54(2): xor %eax,%eax
9a56(7): mov %r10,0xfffffbd0(%rbp)
9a5d(5): call 0xffff89c3(%rip)
9a62(4): add $0x30,%rsp
9a66(7): mov 0xfffffbd0(%rbp),%r10
9a6d(5): jmp 0xfffffd89(%rip)
9a72(6): nop 0x0(%rax,%rax,1)
9a78(4): mov 0x50(%r13),%rax
9a7c(4): lea 0x0(%r15,%r14,1),%rdi
9a80(4): shl/sal $0x5,%rax
9a84(7): add 0xfffffc58(%rbp),%rax
9a8b(5): movsd 0x10(%rax),%xmm0
9a90(6): mov 0xfffffc20(%rbp),%eax
9a96(3): cmp $0x1,%eax
9a99(6): jz 0x597(%rip)
9a9f(3): cmp $0x2,%eax
9aa2(6): jnz 0x3fe(%rip)
9aa8(6): mov 0xfffffc4c(%rbp),%eax
9aae(6): push 0xfffffc10(%rbp)
9ab4(1): push %rax
9ab5(7): mov 0xfffffc48(%rbp),%r9d
9abc(7): mov 0xfffffc28(%rbp),%r8
9ac3(3): mov %r10,%rsi
9ac6(7): mov $0xffffffff,%rcx
9acd(5): mov $0x1,%edx
9ad2(5): mov $0x1,%eax
9ad7(7): mov %r10,0xfffffbd0(%rbp)
9ade(5): call 0xffff8942(%rip)
9ae3(2): pop %r8
9ae5(7): mov 0xfffffbd0(%rbp),%r10
9aec(2): pop %r9
9aee(5): jmp 0xfffffd08(%rip)
9af3(5): nop 0x0(%rax,%rax,1)
9af8(4): mov 0x50(%r13),%rax
9afc(4): lea 0x0(%r15,%r14,1),%rdi
9b00(4): shl/sal $0x5,%rax
9b04(7): add 0xfffffc58(%rbp),%rax
9b0b(5): movzx 0x10(%rax),%r9d
9b10(6): mov 0xfffffc20(%rbp),%eax
9b16(3): cmp $0x1,%eax
9b19(6): jnz 0xfffffdd5(%rip)
9b1f(1): nop 
9b20(6): push 0xfffffc10(%rbp)
9b26(2): push %r9
9b28(7): mov 0xfffffc48(%rbp),%r9d
9b2f(5): jmp 0xfffffdd2(%rip)
9b34(4): nop 0x0(%rax)
9b38(4): mov 0x50(%r13),%rax
9b3c(4): lea 0x0(%r15,%r14,1),%rdi
9b40(4): shl/sal $0x5,%rax
9b44(7): add 0xfffffc58(%rbp),%rax
9b4b(5): movsx 0x10(%rax),%r9d
9b50(6): mov 0xfffffc20(%rbp),%eax
9b56(3): cmp $0x1,%eax
9b59(2): jz 0xffffffc7(%rip)
9b5b(3): cmp $0x2,%eax
9b5e(6): jnz 0xfffffd99(%rip)
9b64(4): nop 0x0(%rax)
9b68(4): sub $0x8,%rsp
9b6c(6): push 0xfffffc10(%rbp)
9b72(2): push %r9
9b74(6): mov 0xfffffc4c(%rbp),%eax
9b7a(1): push %rax
9b7b(7): mov 0xfffffc48(%rbp),%r9d
9b82(7): mov 0xfffffc28(%rbp),%r8
9b89(3): mov %r10,%rsi
9b8c(7): mov $0xffffffff,%rcx
9b93(5): mov $0x1,%edx
9b98(2): xor %eax,%eax
9b9a(7): mov %r10,0xfffffbd0(%rbp)
9ba1(5): call 0xffff887f(%rip)
9ba6(4): add $0x20,%rsp
9baa(7): mov 0xfffffbd0(%rbp),%r10
9bb1(5): jmp 0xfffffc45(%rip)
9bb6(a): nop 0x0(%rax,%rax,1)
9bc0(4): mov 0x50(%r13),%rax
9bc4(4): lea 0x0(%r15,%r14,1),%rdi
9bc8(4): shl/sal $0x5,%rax
9bcc(7): add 0xfffffc58(%rbp),%rax
9bd3(5): movzx 0x10(%rax),%r9d
9bd8(6): mov 0xfffffc20(%rbp),%eax
9bde(3): cmp $0x1,%eax
9be1(6): jnz 0xfffffd0d(%rip)
9be7(5): jmp 0xffffff39(%rip)
9bec(4): nop 0x0(%rax)
9bf0(4): mov 0x50(%r13),%rax
9bf4(4): lea 0x0(%r15,%r14,1),%rdi
9bf8(4): shl/sal $0x5,%rax
9bfc(7): add 0xfffffc58(%rbp),%rax
9c03(5): movsx 0x10(%rax),%r9d
9c08(6): mov 0xfffffc20(%rbp),%eax
9c0e(3): cmp $0x1,%eax
9c11(6): jnz 0xfffffcdd(%rip)
9c17(5): jmp 0xffffff09(%rip)
9c1c(4): nop 0x0(%rax)
9c20(3): mov %r12,%rdi
9c23(5): call 0xffff8a3d(%rip)
9c28(3): test %rax,%rax
9c2b(3): mov %rax,%rcx
9c2e(6): jz 0xfffff773(%rip)
9c34(3): test %r14,%r14
9c37(6): jz 0xb9(%rip)
9c3d(2): test %bl,%bl
9c3f(6): jz 0xb1(%rip)
9c45(3): mov %r15,%rsi
9c48(3): mov %r14,%rdx
9c4b(3): mov %rax,%rdi
9c4e(5): call 0xffff89f2(%rip)
9c53(3): mov %rax,%r15
9c56(5): jmp 0xfffffaea(%rip)
9c5b(5): nop 0x0(%rax,%rax,1)
9c60(4): sub $0x8,%rsp
9c64(6): push 0xfffffc10(%rbp)
9c6a(2): push %r9
9c6c(5): jmp 0xffffff08(%rip)
9c71(7): nop 0x0(%rax)
9c78(6): push 0xfffffc10(%rbp)
9c7e(2): push %r9
9c80(5): jmp 0xfffffea8(%rip)
9c85(3): nop (%rax)
9c88(4): mov $0x0,0x1(%rdi)
9c8c(5): jmp 0xfffffab4(%rip)
9c91(7): nop 0x0(%rax)
9c98(4): cmp $0xffffffff,%rax
9c9c(6): jnz 0x4ba(%rip)
9ca2(3): mov %r14,%rax
9ca5(4): add $0x1,%rax
9ca9(3): mov %rax,%rbx
9cac(6): jnb 0x8c(%rip)
9cb2(4): cmp $0xffffffff,%r12
9cb6(6): jnz 0xfffff6df(%rip)
9cbc(3): mov %r12,%rbx
9cbf(5): mov $0x25,0x0(%r15,%r14,1)
9cc4(4): mov 0x8(%r13),%r8
9cc8(4): add $0x58,%r13
9ccc(4): mov 0x0(%r13),%rcx
9cd0(8): add $0x1,0xfffffc00(%rbp)
9cd8(3): cmp %r8,%rcx
9cdb(6): jnz 0xfffff69e(%rip)
9ce1(3): mov %rbx,%r14
9ce4(5): jmp 0xfffff7ff(%rip)
9ce9(7): nop 0x0(%rax)
9cf0(3): mov %rcx,%r15
9cf3(5): jmp 0xfffffa4d(%rip)
9cf8(5): call 0xffff8758(%rip)
9cfd(7): mov %rax,0xfffffc38(%rbp)
9d04(5): jmp 0xfffff6c3(%rip)
9d09(7): nop 0x0(%rax)
9d10(2): mov %edi,%edx
9d12(3): sub $0x12,%edx
9d15(3): cmp $0x4,%edx
9d18(6): jnbe 0x43e(%rip)
9d1e(7): lea 0x489f(%rip),%rdi
9d25(4): mov 0x10(%rax),%rax
9d29(4): movsxd 0x0(%rdi,%rdx,4),%rdx
9d2d(3): add %rdi,%rdx
9d30(2): jmp %rdx
9d32(6): nop 0x0(%rax,%rax,1)
9d38(3): cmp %rax,%r12
9d3b(2): jnb 0xffffff84(%rip)
9d3d(3): test %r12,%r12
9d40(6): jnz 0x3d0(%rip)
9d46(4): cmp $0xc,%rax
9d4a(6): jnbe 0x3d8(%rip)
9d50(6): mov $0xc,%r12d
9d56(7): cmp 0xfffffc18(%rbp),%r15
9d5d(3): setz %dl
9d60(3): test %r15,%r15
9d63(6): jz 0x26d(%rip)
9d69(2): test %dl,%dl
9d6b(6): jnz 0x265(%rip)
9d71(3): mov %r12,%rsi
9d74(3): mov %r15,%rdi
9d77(5): call 0xffff8929(%rip)
9d7c(3): test %rax,%rax
9d7f(6): jz 0xfc(%rip)
9d85(3): mov %rax,%r15
9d88(5): jmp 0xffffff37(%rip)
9d8d(3): nop (%rax)
9d90(a): mov $0x0,0xfffffc20(%rbp)
9d9a(5): jmp 0xfffff8ed(%rip)
9d9f(1): nop 
9da0(6): js 0xfffff5f5(%rip)
9da6(3): add %r12,%r12
9da9(3): cmp %rax,%r12
9dac(6): jnb 0xfffff6da(%rip)
9db2(4): cmp $0xffffffff,%rax
9db6(6): jz 0xfffff5df(%rip)
9dbc(7): cmp 0xfffffc18(%rbp),%r15
9dc3(3): mov %rax,%r12
9dc6(3): setz %dl
9dc9(3): test %r15,%r15
9dcc(6): jnz 0xfffff6cd(%rip)
9dd2(6): nop 0x0(%rax,%rax,1)
9dd8(3): mov %r12,%rdi
9ddb(7): mov %r8,0xfffffc20(%rbp)
9de2(6): mov %dl,0xfffffc30(%rbp)
9de8(7): mov %rcx,0xfffffc38(%rbp)
9def(5): call 0xffff8871(%rip)
9df4(3): test %rax,%rax
9df7(3): mov %rax,%r9
9dfa(7): mov 0xfffffc38(%rbp),%rcx
9e01(7): movzx 0xfffffc30(%rbp),%edx
9e08(7): mov 0xfffffc20(%rbp),%r8
9e0f(6): jz 0xfffff586(%rip)
9e15(3): test %rbx,%rbx
9e18(6): jz 0x208(%rip)
9e1e(2): test %dl,%dl
9e20(6): jz 0x200(%rip)
9e26(3): mov %r15,%rsi
9e29(3): mov %rbx,%rdx
9e2c(3): mov %rax,%rdi
9e2f(7): mov %r8,0xfffffc30(%rbp)
9e36(7): mov %rcx,0xfffffc38(%rbp)
9e3d(5): call 0xffff8803(%rip)
9e42(7): mov 0xfffffc38(%rbp),%rcx
9e49(3): mov %rax,%r15
9e4c(7): mov 0xfffffc30(%rbp),%r8
9e53(5): jmp 0xfffff681(%rip)
9e58(8): nop 0x0(%rax,%rax,1)
9e60(3): mov %r12,%r14
9e63(5): jmp 0xfffff671(%rip)
9e68(8): nop 0x0(%rax,%rax,1)
9e70(3): mov %r14,(%rax)
9e73(3): mov %r14,%rbx
9e76(5): jmp 0xfffffe4e(%rip)
9e7b(5): call 0xffff85d5(%rip)
9e80(7): mov %rax,0xfffffc38(%rbp)
9e87(9): nop 0x0(%rax,%rax,1)
9e90(3): mov %r15,%rdi
9e93(5): call 0xffff859d(%rip)
9e98(5): jmp 0xfffff51b(%rip)
9e9d(3): nop (%rax)
9ea0(7): mov 0xfffffc10(%rbp),%r9
9ea7(7): mov 0xfffffc28(%rbp),%r8
9eae(3): mov %r10,%rsi
9eb1(7): mov $0xffffffff,%rcx
9eb8(5): mov $0x1,%edx
9ebd(5): mov $0x1,%eax
9ec2(7): mov %r10,0xfffffbd0(%rbp)
9ec9(5): call 0xffff8557(%rip)
9ece(7): mov 0xfffffbd0(%rbp),%r10
9ed5(5): jmp 0xfffff921(%rip)
9eda(6): nop 0x0(%rax,%rax,1)
9ee0(4): sub $0x10,%rsp
9ee4(7): mov 0xfffffc10(%rbp),%r9
9eeb(3): fstp %st0,(%rsp)
9eee(5): jmp 0xfffff8db(%rip)
9ef3(5): nop 0x0(%rax,%rax,1)
9ef8(6): js 0xfffff49d(%rip)
9efe(3): add %r12,%r12
9f01(3): cmp %rax,%r12
9f04(6): jnb 0xfffff7e5(%rip)
9f0a(6): nop 0x0(%rax,%rax,1)
9f10(3): test %rdx,%rdx
9f13(6): jnz 0xfffff482(%rip)
9f19(4): cmp $0xffffffff,%rax
9f1d(6): jz 0xfffff478(%rip)
9f23(7): cmp 0xfffffc18(%rbp),%r15
9f2a(3): mov %rax,%r12
9f2d(3): setz %dl
9f30(3): test %r15,%r15
9f33(6): jnz 0xfffff7c9(%rip)
9f39(7): nop 0x0(%rax)
9f40(3): mov %r12,%rdi
9f43(6): mov %dl,0xfffffc38(%rbp)
9f49(5): call 0xffff8717(%rip)
9f4e(3): test %rax,%rax
9f51(3): mov %rax,%rcx
9f54(7): movzx 0xfffffc38(%rbp),%edx
9f5b(6): jz 0xfffff43a(%rip)
9f61(3): test %r14,%r14
9f64(6): jz 0x19c(%rip)
9f6a(2): test %dl,%dl
9f6c(6): jz 0x194(%rip)
9f72(3): mov %r15,%rsi
9f75(3): mov %r14,%rdx
9f78(3): mov %rax,%rdi
9f7b(5): call 0xffff86c5(%rip)
9f80(3): mov %rax,%r15
9f83(5): jmp 0xfffff798(%rip)
9f88(8): nop 0x0(%rax,%rax,1)
9f90(3): mov $0x4c,(%rbx)
9f93(4): add $0x1,%rbx
9f97(5): jmp 0xfffff6b4(%rip)
9f9c(4): nop 0x0(%rax)
9fa0(3): mov %r14b,(%rax)
9fa3(3): mov %r14,%rbx
9fa6(5): jmp 0xfffffd1e(%rip)
9fab(5): nop 0x0(%rax,%rax,1)
9fb0(3): mov %r14d,(%rax)
9fb3(3): mov %r14,%rbx
9fb6(5): jmp 0xfffffd0e(%rip)
9fbb(5): nop 0x0(%rax,%rax,1)
9fc0(4): mov %r14w,(%rax)
9fc4(3): mov %r14,%rbx
9fc7(5): jmp 0xfffffcfd(%rip)
9fcc(4): nop 0x0(%rax)
9fd0(3): mov %r12,%rdi
9fd3(6): mov %dl,0xfffffc38(%rbp)
9fd9(5): call 0xffff8687(%rip)
9fde(3): test %rax,%rax
9fe1(3): mov %rax,%rcx
9fe4(7): movzx 0xfffffc38(%rbp),%edx
9feb(6): jz 0xfffff3aa(%rip)
9ff1(3): test %r14,%r14
9ff4(6): jz 0x140(%rip)
9ffa(2): test %dl,%dl
9ffc(6): jz 0x138(%rip)
a002(3): mov %r15,%rsi
a005(3): mov %r14,%rdx
a008(3): mov %rax,%rdi
a00b(5): call 0xffff8635(%rip)
a010(3): mov %rax,%r15
a013(5): jmp 0xfffffcac(%rip)
a018(8): nop 0x0(%rax,%rax,1)
a020(3): mov %r9,%r15
a023(5): jmp 0xfffff4b1(%rip)
a028(8): nop 0x0(%rax,%rax,1)
a030(4): sub $0x8,%rsp
a034(6): push 0xfffffc10(%rbp)
a03a(5): jmp 0xfffffa7b(%rip)
a03f(1): nop 
a040(4): sub $0x8,%rsp
a044(6): push 0xfffffc10(%rbp)
a04a(4): sub $0x10,%rsp
a04e(3): fstp %st0,(%rsp)
a051(5): jmp 0xfffffb2a(%rip)
a056(a): nop 0x0(%rax,%rax,1)
a060(7): mov 0xfffffc38(%rbp),%rax
a067(6): mov 0xfffffbdc(%rbp),%edi
a06d(3): movsxd %ecx,%rbx
a070(3): add %r14,%rbx
a073(2): mov %edi,(%rax)
a075(5): jmp 0xfffffc4f(%rip)
a07a(6): nop 0x0(%rax,%rax,1)
a080(7): cmp 0xfffffc18(%rbp),%r15
a087(2): jz 0xb(%rip)
a089(3): test %r15,%r15
a08c(6): jnz 0xbd(%rip)
a092(7): mov 0xfffffbe0(%rbp),%rax
a099(3): test %rax,%rax
a09c(2): jz 0xa(%rip)
a09e(3): mov %rax,%rdi
a0a1(5): call 0xffff838f(%rip)
a0a6(7): mov 0xfffffbf8(%rbp),%rax
a0ad(7): mov 0xfffffd48(%rbp),%rdi
a0b4(4): add $0x20,%rax
a0b8(3): cmp %rax,%rdi
a0bb(2): jz 0x7(%rip)
a0bd(5): call 0xffff8373(%rip)
a0c2(7): mov 0xfffffbf0(%rbp),%rax
a0c9(7): mov 0xfffffc58(%rbp),%rdi
a0d0(4): add $0x10,%rax
a0d4(3): cmp %rax,%rdi
a0d7(2): jz 0x7(%rip)
a0d9(5): call 0xffff8357(%rip)
a0de(7): mov 0xfffffc38(%rbp),%rax
a0e5(3): xor %r15d,%r15d
a0e8(6): mov $0x4b,(%rax)
a0ee(5): jmp 0xfffff321(%rip)
a0f3(5): nop 0x0(%rax,%rax,1)
a0f8(3): xor %r15d,%r15d
a0fb(5): jmp 0xfffff314(%rip)
a100(3): mov %rcx,%r15
a103(5): jmp 0xfffff618(%rip)
a108(8): nop 0x0(%rax,%rax,1)
a110(6): js 0xfffff285(%rip)
a116(3): add %r12,%r12
a119(3): cmp %rax,%r12
a11c(6): jnb 0xfffffc3a(%rip)
a122(4): cmp $0xffffffff,%rax
a126(6): jz 0xfffff26f(%rip)
a12c(3): mov %rax,%r12
a12f(5): jmp 0xfffffc27(%rip)
a134(3): mov %rcx,%r15
a137(5): jmp 0xfffffb88(%rip)
a13c(3): mov %r15,%rdi
a13f(5): call 0xffff82f1(%rip)
a144(5): jmp 0xfffff84e(%rip)
a149(3): mov %r15,%rdi
a14c(5): call 0xffff82e4(%rip)
a151(5): jmp 0xffffff41(%rip)
a156(5): call 0xffff82ea(%rip)
a15b(5): nop 0x0(%rax,%rax,1)
a160(7): mov 0xfffffbf8(%rbp),%rax
a167(7): mov 0xfffffd48(%rbp),%rdi
a16e(4): add $0x20,%rax
a172(3): cmp %rax,%rdi
a175(2): jz 0x7(%rip)
a177(5): call 0xffff82b9(%rip)
a17c(7): mov 0xfffffbf0(%rbp),%rax
a183(7): mov 0xfffffc58(%rbp),%rdi
a18a(4): add $0x10,%rax
a18e(3): cmp %rax,%rdi
a191(2): jz 0x7(%rip)
a193(5): call 0xffff829d(%rip)
a198(5): call 0xffff82b8(%rip)
a19d(3): xor %r15d,%r15d
a1a0(6): mov $0x16,(%rax)
a1a6(5): jmp 0xfffff269(%rip)
a1ab(3): mov %r14,%rbx
a1ae(2): xor %eax,%eax
a1b0(4): add $0x1,%rbx
a1b4(6): jb 0x10c(%rip)
a1ba(3): cmp %rbx,%r12
a1bd(2): jnb 0x4f(%rip)
a1bf(3): test %r12,%r12
a1c2(6): jnz 0x137(%rip)
a1c8(4): cmp $0xc,%rbx
a1cc(6): jnbe 0x112(%rip)
a1d2(6): mov $0xc,%r12d
a1d8(7): cmp 0xfffffc18(%rbp),%r15
a1df(4): setz %r13b
a1e3(3): test %r15,%r15
a1e6(6): jz 0xa6(%rip)
a1ec(3): test %r13b,%r13b
a1ef(6): jnz 0x9d(%rip)
a1f5(3): mov %r12,%rsi
a1f8(3): mov %r15,%rdi
a1fb(5): call 0xffff84a5(%rip)
a200(3): test %rax,%rax
a203(6): jz 0xfffffc78(%rip)
a209(3): mov %rax,%r15
a20c(7): cmp 0xfffffc18(%rbp),%r15
a213(5): mov $0x0,0x0(%r15,%r14,1)
a218(2): jz 0x19(%rip)
a21a(3): cmp %rbx,%r12
a21d(2): jbe 0x14(%rip)
a21f(3): mov %r15,%rdi
a222(3): mov %rbx,%rsi
a225(5): call 0xffff847b(%rip)
a22a(3): test %rax,%rax
a22d(4): cmovne %rax,%r15
a231(7): mov 0xfffffbe0(%rbp),%rax
a238(3): test %rax,%rax
a23b(2): jz 0xa(%rip)
a23d(3): mov %rax,%rdi
a240(5): call 0xffff81f0(%rip)
a245(7): mov 0xfffffbf8(%rbp),%rax
a24c(7): mov 0xfffffd48(%rbp),%rdi
a253(4): add $0x20,%rax
a257(3): cmp %rax,%rdi
a25a(2): jz 0x7(%rip)
a25c(5): call 0xffff81d4(%rip)
a261(7): mov 0xfffffbf0(%rbp),%rax
a268(7): mov 0xfffffc58(%rbp),%rdi
a26f(4): add $0x10,%rax
a273(3): cmp %rax,%rdi
a276(2): jz 0x7(%rip)
a278(5): call 0xffff81b8(%rip)
a27d(7): mov 0xfffffbe8(%rbp),%rax
a284(3): mov %r14,(%rax)
a287(5): jmp 0xfffff188(%rip)
a28c(3): mov %r12,%rdi
a28f(5): call 0xffff83d1(%rip)
a294(3): test %rax,%rax
a297(3): mov %rax,%rcx
a29a(6): jz 0xfffff0fb(%rip)
a2a0(3): test %r14,%r14
a2a3(2): jz 0x6d(%rip)
a2a5(3): test %r13b,%r13b
a2a8(2): jz 0x68(%rip)
a2aa(3): mov %r15,%rsi
a2ad(3): mov %r14,%rdx
a2b0(3): mov %rax,%rdi
a2b3(5): call 0xffff838d(%rip)
a2b8(3): mov %rax,%r15
a2bb(5): jmp 0xffffff51(%rip)
a2c0(4): cmp $0xffffffff,%r12
a2c4(5): mov $0x1,%eax
a2c9(6): jz 0xffffff43(%rip)
a2cf(3): test %r12,%r12
a2d2(6): jz 0xfffff0c3(%rip)
a2d8(6): js 0xfffff0bd(%rip)
a2de(3): test %rax,%rax
a2e1(6): jnz 0xfffff0b4(%rip)
a2e7(4): cmp $0xffffffff,%rbx
a2eb(6): jz 0xfffff0aa(%rip)
a2f1(3): mov %rbx,%r12
a2f4(5): jmp 0xfffffee4(%rip)
a2f9(6): js 0xfffff09c(%rip)
a2ff(3): add %r12,%r12
a302(3): cmp %rbx,%r12
a305(6): jnb 0xfffffed3(%rip)
a30b(2): jmp 0xffffffd3(%rip)
a30d(3): nop (%rax)
a310(3): mov %rcx,%r15
a313(5): jmp 0xfffffef9(%rip)
a318(4): cmp $0xffffffff,%r12
a31c(6): jz 0xfffff424(%rip)
a322(5): jmp 0xfffff07f(%rip)
a327(5): call 0xffff81f9(%rip)
a32c(4): cmp $0xffffffff,%r12
a330(5): mov $0x1,%edx
a335(6): jz 0xfffff3e6(%rip)
a33b(3): test %r12,%r12
a33e(6): jz 0xfffff057(%rip)
a344(6): jns 0xfffffbcc(%rip)
a34a(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
a350(4): cmp $0x0,(%rsi)
a354(4): mov 0x8(%rsi),%rax
a358(2): jz 0x65(%rip)
a35a(7): lea 0x427f(%rip),%r8
a361(7): lea 0x42d8(%rip),%r10
a368(7): lea 0x4269(%rip),%r9
a36f(2): xor %ecx,%ecx
a371(7): nop 0x0(%rax)
a378(3): cmp $0x16,(%rax)
a37b(2): jnbe 0x45(%rip)
a37d(2): mov (%rax),%edx
a37f(4): movsxd 0x0(%r8,%rdx,4),%rdx
a383(3): add %r8,%rdx
a386(2): jmp %rdx
a388(8): nop 0x0(%rax,%rax,1)
a390(4): mov 0x8(%rdi),%rdx
a394(4): add $0xf,%rdx
a398(4): and $0xfffffff0,%rdx
a39c(4): lea 0x10(%rdx),%r11
a3a0(4): mov %r11,0x8(%rdi)
a3a4(2): fld (%rdx),%st0
a3a6(3): fstp %st0,0x10(%rax)
a3a9(7): nop 0x0(%rax)
a3b0(4): add $0x1,%rcx
a3b4(4): add $0x20,%rax
a3b8(3): cmp %rcx,(%rsi)
a3bb(2): jnbe 0xffffffbd(%rip)
a3bd(2): xor %eax,%eax
a3bf(1): ret near (%rsp)
a3c0(5): mov $0xffffffff,%eax
a3c5(1): ret near (%rsp)
a3c6(3): mov (%rdi),%r11d
a3c9(4): cmp $0x2f,%r11d
a3cd(6): jnbe 0x13d(%rip)
a3d3(3): mov %r11d,%edx
a3d6(4): add 0x10(%rdi),%rdx
a3da(4): add $0x8,%r11d
a3de(3): mov %r11d,(%rdi)
a3e1(3): mov (%rdx),%rdx
a3e4(4): mov %rdx,0x10(%rax)
a3e8(2): jmp 0xffffffc8(%rip)
a3ea(3): mov (%rdi),%r11d
a3ed(4): cmp $0x2f,%r11d
a3f1(6): jnbe 0x13b(%rip)
a3f7(3): mov %r11d,%edx
a3fa(4): add 0x10(%rdi),%rdx
a3fe(4): add $0x8,%r11d
a402(3): mov %r11d,(%rdi)
a405(2): mov (%rdx),%edx
a407(3): mov %edx,0x10(%rax)
a40a(2): jmp 0xffffffa6(%rip)
a40c(3): mov (%rdi),%r11d
a40f(4): cmp $0x2f,%r11d
a413(6): jnbe 0x108(%rip)
a419(3): mov %r11d,%edx
a41c(4): add 0x10(%rdi),%rdx
a420(4): add $0x8,%r11d
a424(3): mov %r11d,(%rdi)
a427(2): mov (%rdx),%edx
a429(3): mov %dl,0x10(%rax)
a42c(2): jmp 0xffffff84(%rip)
a42e(3): mov (%rdi),%r11d
a431(4): cmp $0x2f,%r11d
a435(6): jnbe 0xa5(%rip)
a43b(3): mov %r11d,%edx
a43e(4): add 0x10(%rdi),%rdx
a442(4): add $0x8,%r11d
a446(3): mov %r11d,(%rdi)
a449(2): mov (%rdx),%edx
a44b(4): mov %dx,0x10(%rax)
a44f(5): jmp 0xffffff61(%rip)
a454(3): mov (%rdi),%r11d
a457(4): cmp $0x2f,%r11d
a45b(6): jnbe 0x90(%rip)
a461(3): mov %r11d,%edx
a464(4): add 0x10(%rdi),%rdx
a468(4): add $0x8,%r11d
a46c(3): mov %r11d,(%rdi)
a46f(3): mov (%rdx),%rdx
a472(3): test %rdx,%rdx
a475(4): cmove %r9,%rdx
a479(4): mov %rdx,0x10(%rax)
a47d(5): jmp 0xffffff33(%rip)
a482(4): mov 0x4(%rdi),%r11d
a486(7): cmp $0xaf,%r11d
a48d(6): jnbe 0xb0(%rip)
a493(3): mov %r11d,%edx
a496(4): add 0x10(%rdi),%rdx
a49a(4): add $0x10,%r11d
a49e(4): mov %r11d,0x4(%rdi)
a4a2(4): movsd (%rdx),%xmm0
a4a6(5): movsd %xmm0,0x10(%rax)
a4ab(5): jmp 0xffffff05(%rip)
a4b0(3): mov (%rdi),%r11d
a4b3(4): cmp $0x2f,%r11d
a4b7(2): jnbe 0x45(%rip)
a4b9(3): mov %r11d,%edx
a4bc(4): add 0x10(%rdi),%rdx
a4c0(4): add $0x8,%r11d
a4c4(3): mov %r11d,(%rdi)
a4c7(3): mov (%rdx),%rdx
a4ca(3): test %rdx,%rdx
a4cd(4): cmove %r10,%rdx
a4d1(4): mov %rdx,0x10(%rax)
a4d5(5): jmp 0xfffffedb(%rip)
a4da(4): mov 0x8(%rdi),%rdx
a4de(4): lea 0x8(%rdx),%r11
a4e2(4): mov %r11,0x8(%rdi)
a4e6(5): jmp 0xffffff63(%rip)
a4eb(4): mov 0x8(%rdi),%rdx
a4ef(4): lea 0x8(%rdx),%r11
a4f3(4): mov %r11,0x8(%rdi)
a4f7(5): jmp 0xffffff78(%rip)
a4fc(4): mov 0x8(%rdi),%rdx
a500(4): lea 0x8(%rdx),%r11
a504(4): mov %r11,0x8(%rdi)
a508(2): jmp 0xffffffbf(%rip)
a50a(4): mov 0x8(%rdi),%rdx
a50e(4): lea 0x8(%rdx),%r11
a512(4): mov %r11,0x8(%rdi)
a516(5): jmp 0xfffffecb(%rip)
a51b(4): mov 0x8(%rdi),%rdx
a51f(4): lea 0x8(%rdx),%r11
a523(4): mov %r11,0x8(%rdi)
a527(5): jmp 0xffffff00(%rip)
a52c(4): mov 0x8(%rdi),%rdx
a530(4): lea 0x8(%rdx),%r11
a534(4): mov %r11,0x8(%rdi)
a538(5): jmp 0xfffffecd(%rip)
a53d(4): mov 0x8(%rdi),%rdx
a541(4): lea 0x8(%rdx),%r11
a545(4): mov %r11,0x8(%rdi)
a549(5): jmp 0xffffff59(%rip)

"printf_parse" :
a550(2): push %r15
a552(2): push %r14
a554(4): lea 0x20(%rsi),%rcx
a558(2): push %r13
a55a(2): push %r12
a55c(4): lea 0x10(%rdx),%rax
a560(1): push %rbp
a561(1): push %rbx
a562(3): mov %rsi,%r14
a565(3): mov %rdx,%r15
a568(2): xor %ebx,%ebx
a56a(6): mov $0x7,%r9d
a570(4): sub $0x58,%rsp
a574(6): mov $0x7,%r10d
a57a(7): mov $0x0,(%rsi)
a581(4): mov %rcx,0x8(%rsi)
a585(5): mov %rcx,0x28(%rsp)
a58a(7): mov $0xffffffff,%r8
a591(7): mov $0x0,(%rdx)
a598(5): mov %rax,0x8(%rsp)
a59d(4): mov %rax,0x8(%rdx)
a5a1(9): mov $0x0,0x18(%rsp)
a5aa(9): mov $0x0,0x10(%rsp)
a5b3(9): mov $0x0,0x20(%rsp)
a5bc(2): jmp 0xf(%rip)
a5be(2): nop 
a5c0(2): cmp $0x25,%al
a5c2(4): lea 0x1(%rdi),%rbp
a5c6(2): jz 0x42(%rip)
a5c8(3): mov %rbp,%rdi
a5cb(3): movzx (%rdi),%eax
a5ce(2): test %al,%al
a5d0(2): jnz 0xfffffff0(%rip)
a5d2(4): lea 0x0(%rbx,%rbx,4),%rax
a5d6(4): lea 0x0(%rbx,%rax,2),%rax
a5da(4): mov %rdi,0x0(%rcx,%rax,8)
a5de(5): mov 0x10(%rsp),%rax
a5e3(4): mov %rax,0x10(%r14)
a5e7(5): mov 0x18(%rsp),%rax
a5ec(4): mov %rax,0x18(%r14)
a5f0(2): xor %eax,%eax
a5f2(4): add $0x58,%rsp
a5f6(1): pop %rbx
a5f7(1): pop %rbp
a5f8(2): pop %r12
a5fa(2): pop %r13
a5fc(2): pop %r14
a5fe(2): pop %r15
a600(1): ret near (%rsp)
a601(7): nop 0x0(%rax)
a608(4): lea 0x0(%rbx,%rbx,4),%rax
a60c(3): mov %r8,%r13
a60f(4): lea 0x0(%rbx,%rax,2),%rax
a613(4): lea 0x0(%rcx,%rax,8),%r12
a617(4): mov %rdi,(%r12)
a61b(9): mov $0x0,0x10(%r12)
a624(9): mov $0x0,0x18(%r12)
a62d(9): mov $0x0,0x20(%r12)
a636(5): mov %r8,0x28(%r12)
a63b(9): mov $0x0,0x30(%r12)
a644(9): mov $0x0,0x38(%r12)
a64d(5): mov %r8,0x40(%r12)
a652(5): mov %r8,0x50(%r12)
a657(4): movzx 0x1(%rdi),%ebx
a65b(3): lea 0xffffffd0(%rbx),%eax
a65e(2): cmp $0x9,%al
a660(2): jnbe 0x3e(%rip)
a662(5): jmp 0x438(%rip)
a667(9): nop 0x0(%rax,%rax,1)
a670(3): cmp $0x2d,%bl
a673(2): jz 0x45(%rip)
a675(3): cmp $0x2b,%bl
a678(2): jz 0x48(%rip)
a67a(3): cmp $0x20,%bl
a67d(2): jz 0x53(%rip)
a67f(3): cmp $0x23,%bl
a682(2): jz 0x5e(%rip)
a684(3): cmp $0x30,%bl
a687(2): jz 0x69(%rip)
a689(3): cmp $0x49,%bl
a68c(2): jnz 0x74(%rip)
a68e(6): or $0x40,0x10(%r12)
a694(4): nop 0x0(%rax)
a698(3): movzx (%rax),%ebx
a69b(3): mov %rax,%rbp
a69e(4): lea 0x1(%rbp),%rax
a6a2(3): cmp $0x27,%bl
a6a5(3): mov %rax,%rdx
a6a8(2): jnz 0xffffffc8(%rip)
a6aa(6): or $0x1,0x10(%r12)
a6b0(2): jmp 0xffffffe8(%rip)
a6b2(6): nop 0x0(%rax,%rax,1)
a6b8(6): or $0x2,0x10(%r12)
a6be(2): jmp 0xffffffda(%rip)
a6c0(6): or $0x4,0x10(%r12)
a6c6(2): jmp 0xffffffd2(%rip)
a6c8(8): nop 0x0(%rax,%rax,1)
a6d0(6): or $0x8,0x10(%r12)
a6d6(2): jmp 0xffffffc2(%rip)
a6d8(8): nop 0x0(%rax,%rax,1)
a6e0(6): or $0x10,0x10(%r12)
a6e6(2): jmp 0xffffffb2(%rip)
a6e8(8): nop 0x0(%rax,%rax,1)
a6f0(6): or $0x20,0x10(%r12)
a6f6(2): jmp 0xffffffa2(%rip)
a6f8(8): nop 0x0(%rax,%rax,1)
a700(3): cmp $0x2a,%bl
a703(6): jz 0x1b6(%rip)
a709(3): lea 0xffffffd0(%rbx),%ecx
a70c(3): cmp $0x9,%cl
a70f(6): jbe 0x418(%rip)
a715(3): cmp $0x2e,%bl
a718(6): jz 0x2d7(%rip)
a71e(2): xor %eax,%eax
a720(5): mov $0x1,%esi
a725(2): jmp 0x32(%rip)
a727(9): nop 0x0(%rax,%rax,1)
a730(3): cmp $0x4c,%bl
a733(2): jz 0x3d(%rip)
a735(3): cmp $0x6c,%bl
a738(2): jz 0x18(%rip)
a73a(3): cmp $0x6a,%bl
a73d(2): jz 0x13(%rip)
a73f(2): mov %ebx,%edx
a741(3): and $0xdf,%edx
a744(3): cmp $0x5a,%dl
a747(2): jz 0x9(%rip)
a749(3): cmp $0x74,%bl
a74c(2): jnz 0x2c(%rip)
a74e(2): nop 
a750(3): add $0x8,%eax
a753(4): movzx 0x0(%rbp),%ebx
a757(4): add $0x1,%rbp
a75b(3): cmp $0x68,%bl
a75e(2): jnz 0xffffffd2(%rip)
a760(2): mov %eax,%ecx
a762(2): mov %esi,%edx
a764(3): and $0x1,%ecx
a767(2): shl/sal %cl,%edx
a769(2): or %edx,%eax
a76b(2): jmp 0xffffffe8(%rip)
a76d(3): nop (%rax)
a770(3): or $0x4,%eax
a773(2): jmp 0xffffffe0(%rip)
a775(3): nop (%rax)
a778(3): lea 0xffffffdb(%rbx),%edx
a77b(3): cmp $0x53,%dl
a77e(6): jnbe 0x61d(%rip)
a784(7): lea 0x3ed1(%rip),%rcx
a78b(3): movzx %dl,%edx
a78e(4): movsxd 0x0(%rcx,%rdx,4),%rdx
a792(3): add %rcx,%rdx
a795(2): jmp %rdx
a797(6): mov $0x10,%r11d
a79d(5): mov $0x73,%ebx
a7a2(6): nop 0x0(%rax,%rax,1)
a7a8(4): cmp $0xffffffff,%r13
a7ac(6): jz 0x6bb(%rip)
a7b2(5): mov %r13,0x50(%r12)
a7b7(3): cmp %r13,%r9
a7ba(4): mov 0x8(%r15),%rcx
a7be(6): jbe 0x622(%rip)
a7c4(3): mov (%r15),%rax
a7c7(3): mov %rax,%rdx
a7ca(4): shl/sal $0x5,%rdx
a7ce(3): add %rcx,%rdx
a7d1(3): cmp %r13,%rax
a7d4(2): jnbe 0x22(%rip)
a7d6(a): nop 0x0(%rax,%rax,1)
a7e0(4): add $0x1,%rax
a7e4(6): mov $0x0,(%rdx)
a7ea(4): add $0x20,%rdx
a7ee(3): cmp %r13,%rax
a7f1(2): jbe 0xffffffef(%rip)
a7f3(3): mov %rax,(%r15)
a7f6(4): shl/sal $0x5,%r13
a7fa(4): lea 0x0(%rcx,%r13,1),%rax
a7fe(2): mov (%rax),%edx
a800(2): test %edx,%edx
a802(6): jnz 0x5d1(%rip)
a808(3): mov %r11d,(%rax)
a80b(5): mov %bl,0x48(%r12)
a810(3): mov (%r14),%rax
a813(5): mov %rbp,0x8(%r12)
a818(4): lea 0x1(%rax),%rbx
a81c(3): cmp %rbx,%r10
a81f(3): mov %rbx,(%r14)
a822(6): jnbe 0x8e(%rip)
a828(3): test %r10,%r10
a82b(6): js 0x9ac(%rip)
a831(3): add %r10,%r10
a834(a): mov $0x209622091746699450,%rax
a83e(3): cmp %rax,%r10
a841(6): jnbe 0x996(%rip)
a847(4): lea 0x0(%r10,%r10,4),%rax
a84b(4): mov 0x8(%r14),%rdi
a84f(5): cmp %rdi,0x28(%rsp)
a854(5): mov %r9,0x40(%rsp)
a859(5): mov %r10,0x38(%rsp)
a85e(4): lea 0x0(%r10,%rax,2),%rax
a862(5): mov %r8,0x30(%rsp)
a867(8): lea 0x0(,%rax,8),%rsi
a86f(6): jz 0x6be(%rip)
a875(5): call 0xffff7e2b(%rip)
a87a(3): test %rax,%rax
a87d(3): mov %rax,%rcx
a880(5): mov 0x30(%rsp),%r8
a885(5): mov 0x38(%rsp),%r10
a88a(5): mov 0x40(%rsp),%r9
a88f(6): jz 0x948(%rip)
a895(5): mov 0x28(%rsp),%rax
a89a(4): cmp 0x8(%r14),%rax
a89e(3): mov (%r14),%rbx
a8a1(6): jz 0x6af(%rip)
a8a7(4): mov %rcx,0x8(%r14)
a8ab(5): jmp 0xfffffd1d(%rip)
a8b0(4): mov 0x8(%r14),%rcx
a8b4(5): jmp 0xfffffd14(%rip)
a8b9(5): mov 0x10(%rsp),%rsi
a8be(5): mov $0x1,%ecx
a8c3(5): mov %rbp,0x18(%r12)
a8c8(5): mov %rax,0x20(%r12)
a8cd(3): test %rsi,%rsi
a8d0(4): cmovne %rsi,%rcx
a8d4(5): mov %rcx,0x10(%rsp)
a8d9(4): movzx 0x1(%rbp),%ecx
a8dd(3): lea 0xffffffd0(%rcx),%esi
a8e0(4): cmp $0x9,%sil
a8e4(6): jbe 0x2e1(%rip)
a8ea(5): mov 0x20(%rsp),%rsi
a8ef(4): cmp $0xffffffff,%rsi
a8f3(4): lea 0x1(%rsi),%rdx
a8f7(5): mov %rsi,0x28(%r12)
a8fc(6): jz 0x49f(%rip)
a902(5): mov 0x20(%rsp),%rbx
a907(3): mov %rax,%rbp
a90a(5): mov %rdx,0x20(%rsp)
a90f(3): cmp %rbx,%r9
a912(4): mov 0x8(%r15),%rcx
a916(6): jnbe 0x67c(%rip)
a91c(3): add %r9,%r9
a91f(4): lea 0x1(%rbx),%rax
a923(3): cmp %rbx,%r9
a926(4): cmovbe %rax,%r9
a92a(a): mov $0x576460752303423487,%rax
a934(3): cmp %rax,%r9
a937(6): jnbe 0x8a4(%rip)
a93d(3): mov %r9,%rsi
a940(5): mov %r9,0x40(%rsp)
a945(5): mov %r10,0x38(%rsp)
a94a(4): shl/sal $0x5,%rsi
a94e(5): cmp %rcx,0x8(%rsp)
a953(5): mov %r8,0x30(%rsp)
a958(6): jz 0x719(%rip)
a95e(3): mov %rcx,%rdi
a961(5): call 0xffff7d3f(%rip)
a966(4): mov 0x8(%r15),%rdx
a96a(5): mov 0x30(%rsp),%r8
a96f(3): mov %rax,%rcx
a972(5): mov 0x38(%rsp),%r10
a977(5): mov 0x40(%rsp),%r9
a97c(3): test %rcx,%rcx
a97f(6): jz 0x8b8(%rip)
a985(5): cmp %rdx,0x8(%rsp)
a98a(3): mov (%r15),%rax
a98d(6): jz 0x7be(%rip)
a993(4): mov %rcx,0x8(%r15)
a997(3): mov %rax,%rdx
a99a(4): shl/sal $0x5,%rdx
a99e(3): add %rcx,%rdx
a9a1(3): cmp %rbx,%rax
a9a4(2): jnbe 0x22(%rip)
a9a6(a): nop 0x0(%rax,%rax,1)
a9b0(4): add $0x1,%rax
a9b4(6): mov $0x0,(%rdx)
a9ba(4): add $0x20,%rdx
a9be(3): cmp %rbx,%rax
a9c1(2): jbe 0xffffffef(%rip)
a9c3(3): mov %rax,(%r15)
a9c6(4): shl/sal $0x5,%rbx
a9ca(4): lea 0x0(%rcx,%rbx,1),%rax
a9ce(2): mov (%rax),%edx
a9d0(2): test %edx,%edx
a9d2(6): jnz 0x4d9(%rip)
a9d8(6): mov $0x5,(%rax)
a9de(4): movzx 0x0(%rbp),%ebx
a9e2(4): lea 0x1(%rbp),%rdx
a9e6(3): cmp $0x2e,%bl
a9e9(6): jnz 0xfffffd35(%rip)
a9ef(4): cmp $0x2a,0x1(%rbp)
a9f3(5): mov %rbp,0x30(%r12)
a9f8(6): jnz 0x186(%rip)
a9fe(5): mov 0x18(%rsp),%rsi
aa03(4): lea 0x2(%rbp),%r11
aa07(5): mov $0x2,%eax
aa0c(5): mov %r11,0x38(%r12)
aa11(4): cmp $0x2,%rsi
aa15(4): cmovnb %rsi,%rax
aa19(5): mov %rax,0x18(%rsp)
aa1e(4): movsx 0x2(%rbp),%eax
aa22(3): lea 0xffffffd0(%rax),%edx
aa25(3): cmp $0x9,%dl
aa28(6): jbe 0x694(%rip)
aa2e(5): mov 0x40(%r12),%rbx
aa33(4): cmp $0xffffffff,%rbx
aa37(6): jz 0x65e(%rip)
aa3d(3): cmp %rbx,%r9
aa40(4): mov 0x8(%r15),%rcx
aa44(6): jbe 0x56b(%rip)
aa4a(3): mov (%r15),%rax
aa4d(3): mov %rax,%rdx
aa50(4): shl/sal $0x5,%rdx
aa54(3): add %rcx,%rdx
aa57(3): cmp %rbx,%rax
aa5a(2): jnbe 0x1c(%rip)
aa5c(4): nop 0x0(%rax)
aa60(4): add $0x1,%rax
aa64(6): mov $0x0,(%rdx)
aa6a(4): add $0x20,%rdx
aa6e(3): cmp %rbx,%rax
aa71(2): jbe 0xffffffef(%rip)
aa73(3): mov %rax,(%r15)
aa76(4): shl/sal $0x5,%rbx
aa7a(4): lea 0x0(%rcx,%rbx,1),%rax
aa7e(2): mov (%rax),%edx
aa80(2): test %edx,%edx
aa82(6): jnz 0x518(%rip)
aa88(6): mov $0x5,(%rax)
aa8e(3): mov %r11,%rbp
aa91(4): movzx (%r11),%ebx
aa95(5): jmp 0xfffffc89(%rip)
aa9a(3): mov %rbp,%rax
aa9d(3): nop (%rax)
aaa0(4): add $0x1,%rax
aaa4(3): movzx (%rax),%edx
aaa7(3): lea 0xffffffd0(%rdx),%ecx
aaaa(3): cmp $0x9,%cl
aaad(2): jbe 0xfffffff3(%rip)
aaaf(3): cmp $0x24,%dl
aab2(3): mov %r8,%r13
aab5(6): jnz 0xfffffbe9(%rip)
aabb(2): xor %edx,%edx
aabd(3): movsx %bl,%eax
aac0(a): mov $0x1844674407370955161,%rdi
aaca(3): mov %r8,%rsi
aacd(3): sub $0x30,%eax
aad0(3): cmp %rdi,%rdx
aad3(2): cwde 
aad5(2): jnbe 0x9(%rip)
aad7(4): lea 0x0(%rdx,%rdx,4),%rsi
aadb(3): add %rsi,%rsi
aade(3): mov %rbp,%rcx
aae1(3): add %rsi,%rax
aae4(4): movzx 0x1(%rbp),%ebx
aae8(4): setb %sil
aaec(4): add $0x1,%rbp
aaf0(3): mov %rax,%rdx
aaf3(4): movzx %sil,%esi
aaf7(3): test %rsi,%rsi
aafa(3): lea 0xffffffd0(%rbx),%edi
aafd(6): jnz 0x391(%rip)
ab03(4): cmp $0x9,%dil
ab07(2): jbe 0xffffffb6(%rip)
ab09(3): mov %rax,%r13
ab0c(4): sub $0x1,%r13
ab10(4): cmp $0xfffffffd,%r13
ab14(6): jnbe 0x287(%rip)
ab1a(4): lea 0x2(%rcx),%rbp
ab1e(4): movzx 0x2(%rcx),%ebx
ab22(5): jmp 0xfffffb7c(%rip)
ab27(5): mov %rbp,0x18(%r12)
ab2c(4): movzx 0x0(%rbp),%edi
ab30(3): mov %rbp,%rsi
ab33(3): lea 0xffffffd0(%rdi),%ecx
ab36(3): cmp $0x9,%cl
ab39(2): jbe 0xe(%rip)
ab3b(2): jmp 0x35(%rip)
ab3d(3): nop (%rax)
ab40(3): mov %rax,%rbp
ab43(4): add $0x1,%rax
ab47(3): movzx (%rax),%edi
ab4a(3): lea 0xffffffd0(%rdi),%edx
ab4d(3): cmp $0x9,%dl
ab50(2): jbe 0xfffffff0(%rip)
ab52(3): mov %rax,%rcx
ab55(4): lea 0x2(%rbp),%rdx
ab59(3): mov %rax,%rbp
ab5c(3): sub %rsi,%rcx
ab5f(5): mov 0x10(%rsp),%rsi
ab64(3): cmp %rcx,%rsi
ab67(4): cmovnb %rsi,%rcx
ab6b(5): mov %rcx,0x10(%rsp)
ab70(5): mov %rbp,0x20(%r12)
ab75(4): movzx 0x0(%rbp),%ebx
ab79(5): jmp 0xfffffb9c(%rip)
ab7e(4): movzx 0x1(%rbp),%eax
ab82(3): sub $0x30,%eax
ab85(2): cmp $0x9,%al
ab87(2): jnbe 0x17(%rip)
ab89(7): nop 0x0(%rax)
ab90(4): add $0x1,%rdx
ab94(3): movzx (%rdx),%eax
ab97(3): sub $0x30,%eax
ab9a(2): cmp $0x9,%al
ab9c(2): jbe 0xfffffff4(%rip)
ab9e(5): mov 0x18(%rsp),%rsi
aba3(3): mov %rdx,%rax
aba6(5): mov %rdx,0x38(%r12)
abab(3): sub %rbp,%rax
abae(3): movzx (%rdx),%ebx
abb1(3): mov %rdx,%rbp
abb4(3): cmp %rax,%rsi
abb7(4): cmovnb %rsi,%rax
abbb(5): mov %rax,0x18(%rsp)
abc0(5): jmp 0xfffffb5e(%rip)
abc5(3): mov %rax,%rsi
abc8(4): add $0x1,%rsi
abcc(3): movzx (%rsi),%edi
abcf(4): lea 0xffffffd0(%rdi),%r11d
abd3(4): cmp $0x9,%r11b
abd7(2): jbe 0xfffffff1(%rip)
abd9(4): cmp $0x24,%dil
abdd(6): jnz 0xfffffd0d(%rip)
abe3(2): xor %esi,%esi
abe5(3): movsx %cl,%eax
abe8(a): mov $0x1844674407370955161,%rdi
abf2(3): mov %r8,%rcx
abf5(3): sub $0x30,%eax
abf8(3): cmp %rdi,%rsi
abfb(2): cwde 
abfd(2): jnbe 0x9(%rip)
abff(4): lea 0x0(%rsi,%rsi,4),%rcx
ac03(3): add %rcx,%rcx
ac06(3): mov %rdx,%rbp
ac09(3): xor %r11d,%r11d
ac0c(3): add %rcx,%rax
ac0f(4): movzx 0x1(%rdx),%ecx
ac13(4): setb %r11b
ac17(4): add $0x1,%rdx
ac1b(3): mov %rax,%rsi
ac1e(3): test %r11,%r11
ac21(3): lea 0xffffffd0(%rcx),%edi
ac24(6): jnz 0x50a(%rip)
ac2a(4): cmp $0x9,%dil
ac2e(2): jbe 0xffffffb7(%rip)
ac30(4): lea 0xffffffff(%rax),%rbx
ac34(4): cmp $0xfffffffd,%rbx
ac38(6): jnbe 0x163(%rip)
ac3e(5): mov %rbx,0x28(%r12)
ac43(4): add $0x2,%rbp
ac47(5): jmp 0xfffffcc8(%rip)
ac4c(3): cmp $0xf,%eax
ac4f(6): mov $0x16,%r11d
ac55(6): jnle 0xfffffb53(%rip)
ac5b(2): test $0x4,%al
ac5d(6): jnz 0xfffffb4b(%rip)
ac63(3): cmp $0x7,%eax
ac66(6): mov $0x15,%r11d
ac6c(6): jnle 0xfffffb3c(%rip)
ac72(2): test $0x2,%al
ac74(6): mov $0x12,%r11d
ac7a(6): jnz 0xfffffb2e(%rip)
ac80(3): xor %r11d,%r11d
ac83(2): test $0x1,%al
ac85(4): setz %r11b
ac89(4): add $0x13,%r11d
ac8d(5): jmp 0xfffffb1b(%rip)
ac92(6): nop 0x0(%rax,%rax,1)
ac98(3): xor %r11d,%r11d
ac9b(3): cmp $0x7,%eax
ac9e(4): setnle %r11b
aca2(4): add $0xd,%r11d
aca6(5): jmp 0xfffffb02(%rip)
acab(3): cmp $0xf,%eax
acae(6): mov $0x9,%r11d
acb4(6): jnle 0xfffffaf4(%rip)
acba(2): test $0x4,%al
acbc(6): jnz 0xfffffaec(%rip)
acc2(3): cmp $0x7,%eax
acc5(6): mov $0x7,%r11d
accb(6): jnle 0xfffffadd(%rip)
acd1(2): test $0x2,%al
acd3(6): mov $0x1,%r11d
acd9(6): jnz 0xfffffacf(%rip)
acdf(3): and $0x1,%eax
ace2(3): cmp $0x1,%eax
ace5(3): sbb %r11d,%r11d
ace8(4): and $0x2,%r11d
acec(4): add $0x3,%r11d
acf0(5): jmp 0xfffffab8(%rip)
acf5(3): nop (%rax)
acf8(3): xor %r11d,%r11d
acfb(3): cmp $0x7,%eax
acfe(4): setnle %r11b
ad02(4): add $0xf,%r11d
ad06(5): jmp 0xfffffaa2(%rip)
ad0b(3): cmp $0xf,%eax
ad0e(6): mov $0xc,%r11d
ad14(6): jnle 0xfffffa94(%rip)
ad1a(3): xor %r11d,%r11d
ad1d(2): test $0x4,%al
ad1f(4): setnz %r11b
ad23(4): add $0xb,%r11d
ad27(5): jmp 0xfffffa81(%rip)
ad2c(6): mov $0xe,%r11d
ad32(5): mov $0x63,%ebx
ad37(5): jmp 0xfffffa71(%rip)
ad3c(3): cmp $0xf,%eax
ad3f(6): mov $0xa,%r11d
ad45(6): jnle 0xfffffa63(%rip)
ad4b(2): test $0x4,%al
ad4d(6): jnz 0xfffffa5b(%rip)
ad53(3): cmp $0x7,%eax
ad56(6): mov $0x8,%r11d
ad5c(6): jnle 0xfffffa4c(%rip)
ad62(2): test $0x2,%al
ad64(6): mov $0x2,%r11d
ad6a(6): jnz 0xfffffa3e(%rip)
ad70(3): and $0x1,%eax
ad73(3): cmp $0x1,%eax
ad76(3): sbb %r11d,%r11d
ad79(4): and $0x2,%r11d
ad7d(4): add $0x4,%r11d
ad81(5): jmp 0xfffffa27(%rip)
ad86(a): nop 0x0(%rax,%rax,1)
ad90(6): mov $0x11,%r11d
ad96(5): jmp 0xfffffa12(%rip)
ad9b(4): mov 0x8(%r15),%rcx
ad9f(5): cmp %rcx,0x8(%rsp)
ada4(2): jz 0xa(%rip)
ada6(3): mov %rcx,%rdi
ada9(5): call 0xffff7687(%rip)
adae(4): mov 0x8(%r14),%rdi
adb2(5): cmp %rdi,0x28(%rsp)
adb7(2): jz 0x7(%rip)
adb9(5): call 0xffff7677(%rip)
adbe(5): call 0xffff7692(%rip)
adc3(6): mov $0x16,(%rax)
adc9(5): mov $0xffffffff,%eax
adce(5): jmp 0xfffff824(%rip)
add3(3): cmp %r11d,%edx
add6(6): jz 0xfffffa35(%rip)
addc(2): jmp 0xffffffc3(%rip)
adde(2): nop 
ade0(3): add %r9,%r9
ade3(4): lea 0x1(%r13),%rax
ade7(3): cmp %r13,%r9
adea(4): cmovbe %rax,%r9
adee(a): mov $0x576460752303423487,%rax
adf8(3): cmp %rax,%r9
adfb(6): jnbe 0x3e0(%rip)
ae01(3): mov %r9,%rsi
ae04(5): mov %r9,0x48(%rsp)
ae09(5): mov %r10,0x40(%rsp)
ae0e(4): shl/sal $0x5,%rsi
ae12(5): cmp %rcx,0x8(%rsp)
ae17(5): mov %r8,0x38(%rsp)
ae1c(5): mov %r11d,0x30(%rsp)
ae21(6): jz 0xa0(%rip)
ae27(3): mov %rcx,%rdi
ae2a(5): call 0xffff7876(%rip)
ae2f(3): test %rax,%rax
ae32(3): mov %rax,%rcx
ae35(5): mov 0x30(%rsp),%r11d
ae3a(5): mov 0x38(%rsp),%r8
ae3f(5): mov 0x40(%rsp),%r10
ae44(5): mov 0x48(%rsp),%r9
ae49(6): jz 0x38e(%rip)
ae4f(5): mov 0x8(%rsp),%rax
ae54(4): cmp 0x8(%r15),%rax
ae58(6): jz 0x91(%rip)
ae5e(4): mov %rcx,0x8(%r15)
ae62(5): jmp 0xfffff962(%rip)
ae67(5): mov 0x20(%rsp),%rsi
ae6c(4): cmp $0xffffffff,%rsi
ae70(4): lea 0x1(%rsi),%rax
ae74(5): mov %rsi,0x50(%r12)
ae79(6): jz 0xffffff22(%rip)
ae7f(5): mov 0x20(%rsp),%r13
ae84(5): mov %rax,0x20(%rsp)
ae89(5): jmp 0xfffff92e(%rip)
ae8e(4): cmp $0x9,%dil
ae92(6): jnbe 0xffffff09(%rip)
ae98(3): movsx %bl,%eax
ae9b(3): mov %r8,%rsi
ae9e(3): mov %rbp,%rcx
aea1(3): sub $0x30,%eax
aea4(2): cwde 
aea6(5): jmp 0xfffffc3b(%rip)
aeab(3): cmp $0x5,%edx
aeae(6): jnz 0xfffffef1(%rip)
aeb4(4): movzx 0x0(%rbp),%ebx
aeb8(4): lea 0x1(%rbp),%rdx
aebc(5): jmp 0xfffff859(%rip)
aec1(3): mov %rsi,%rdi
aec4(5): call 0xffff779c(%rip)
aec9(3): test %rax,%rax
aecc(3): mov %rax,%rcx
aecf(5): mov 0x30(%rsp),%r11d
aed4(5): mov 0x38(%rsp),%r8
aed9(5): mov 0x40(%rsp),%r10
aede(5): mov 0x48(%rsp),%r9
aee3(6): jz 0x169(%rip)
aee9(3): mov (%r15),%rdx
aeec(5): mov 0x8(%rsp),%rsi
aef1(3): mov %rcx,%rdi
aef4(5): mov %r9,0x48(%rsp)
aef9(5): mov %r10,0x40(%rsp)
aefe(5): mov %r8,0x38(%rsp)
af03(5): mov %r11d,0x30(%rsp)
af08(4): shl/sal $0x5,%rdx
af0c(5): call 0xffff7734(%rip)
af11(5): mov 0x48(%rsp),%r9
af16(5): mov 0x40(%rsp),%r10
af1b(3): mov %rax,%rcx
af1e(5): mov 0x38(%rsp),%r8
af23(5): mov 0x30(%rsp),%r11d
af28(5): jmp 0xffffff36(%rip)
af2d(3): mov %rsi,%rdi
af30(5): call 0xffff7730(%rip)
af35(3): test %rax,%rax
af38(3): mov %rax,%rcx
af3b(5): mov 0x30(%rsp),%r8
af40(5): mov 0x38(%rsp),%r10
af45(5): mov 0x40(%rsp),%r9
af4a(6): jz 0xef(%rip)
af50(4): lea 0x0(%rbx,%rbx,4),%rax
af54(5): mov 0x28(%rsp),%rsi
af59(3): mov %rcx,%rdi
af5c(5): mov %r9,0x40(%rsp)
af61(5): mov %r10,0x38(%rsp)
af66(4): lea 0x0(%rbx,%rax,2),%rdx
af6a(5): mov %r8,0x30(%rsp)
af6f(4): shl/sal $0x3,%rdx
af73(5): call 0xffff76cd(%rip)
af78(3): mov (%r14),%rbx
af7b(3): mov %rax,%rcx
af7e(5): mov 0x40(%rsp),%r9
af83(5): mov 0x38(%rsp),%r10
af88(5): mov 0x30(%rsp),%r8
af8d(5): jmp 0xfffff91a(%rip)
af92(3): mov (%r15),%rax
af95(5): jmp 0xfffffa02(%rip)
af9a(3): cmp $0x5,%edx
af9d(6): jnz 0xfffffe02(%rip)
afa3(4): movzx (%r11),%ebx
afa7(3): mov %r11,%rbp
afaa(5): jmp 0xfffff774(%rip)
afaf(3): add %r9,%r9
afb2(4): lea 0x1(%rbx),%rax
afb6(3): cmp %rbx,%r9
afb9(4): cmovbe %rax,%r9
afbd(a): mov $0x576460752303423487,%rax
afc7(3): cmp %rax,%r9
afca(6): jnbe 0x211(%rip)
afd0(3): mov %r9,%rsi
afd3(5): mov %r9,0x48(%rsp)
afd8(5): mov %r10,0x40(%rsp)
afdd(4): shl/sal $0x5,%rsi
afe1(5): cmp %rcx,0x8(%rsp)
afe6(5): mov %r8,0x38(%rsp)
afeb(5): mov %r11,0x30(%rsp)
aff0(6): jz 0x1be(%rip)
aff6(3): mov %rcx,%rdi
aff9(5): call 0xffff76a7(%rip)
affe(4): mov 0x8(%r15),%rdx
b002(5): mov 0x30(%rsp),%r11
b007(3): mov %rax,%rcx
b00a(5): mov 0x38(%rsp),%r8
b00f(5): mov 0x40(%rsp),%r10
b014(5): mov 0x48(%rsp),%r9
b019(3): test %rcx,%rcx
b01c(6): jz 0x21b(%rip)
b022(5): cmp %rdx,0x8(%rsp)
b027(3): mov (%r15),%rax
b02a(6): jz 0x1c6(%rip)
b030(4): mov %rcx,0x8(%r15)
b034(5): jmp 0xfffffa19(%rip)
b039(4): mov 0x8(%r15),%rcx
b03d(5): cmp %rcx,0x8(%rsp)
b042(2): jz 0x1a(%rip)
b044(3): mov %rcx,%rdi
b047(5): call 0xffff73e9(%rip)
b04c(4): mov 0x8(%r14),%rdi
b050(5): cmp %rdi,0x28(%rsp)
b055(2): jz 0x7(%rip)
b057(5): call 0xffff73d9(%rip)
b05c(5): call 0xffff73f4(%rip)
b061(6): mov $0xc,(%rax)
b067(5): mov $0xffffffff,%eax
b06c(5): jmp 0xfffff586(%rip)
b071(3): mov %rsi,%rdi
b074(5): call 0xffff75ec(%rip)
b079(5): mov 0x8(%rsp),%rdx
b07e(3): mov %rax,%rcx
b081(5): mov 0x40(%rsp),%r9
b086(5): mov 0x38(%rsp),%r10
b08b(5): mov 0x30(%rsp),%r8
b090(5): jmp 0xfffff8ec(%rip)
b095(5): mov 0x20(%rsp),%rsi
b09a(4): cmp $0xffffffff,%rsi
b09e(4): lea 0x1(%rsi),%rax
b0a2(5): mov %rsi,0x40(%r12)
b0a7(6): jz 0xfffffcf4(%rip)
b0ad(5): mov 0x20(%rsp),%rbx
b0b2(5): mov %rax,0x20(%rsp)
b0b7(5): jmp 0xfffff986(%rip)
b0bc(3): mov %r11,%rdx
b0bf(4): add $0x1,%rdx
b0c3(3): movzx (%rdx),%ecx
b0c6(3): lea 0xffffffd0(%rcx),%esi
b0c9(4): cmp $0x9,%sil
b0cd(2): jbe 0xfffffff2(%rip)
b0cf(3): cmp $0x24,%cl
b0d2(6): jnz 0xfffff95c(%rip)
b0d8(2): xor %ecx,%ecx
b0da(a): mov $0x1844674407370955161,%rsi
b0e4(3): sub $0x30,%eax
b0e7(3): mov %r8,%rdx
b0ea(3): cmp %rsi,%rcx
b0ed(2): cwde 
b0ef(2): jnbe 0x9(%rip)
b0f1(4): lea 0x0(%rcx,%rcx,4),%rdx
b0f5(3): add %rdx,%rdx
b0f8(3): mov %r11,%rsi
b0fb(2): xor %ebx,%ebx
b0fd(3): add %rax,%rdx
b100(5): movsx 0x1(%r11),%eax
b105(3): setb %bl
b108(4): add $0x1,%r11
b10c(3): mov %rdx,%rcx
b10f(3): test %rbx,%rbx
b112(3): lea 0xffffffd0(%rax),%edi
b115(2): jz 0x73(%rip)
b117(4): cmp $0x9,%dil
b11b(6): jnbe 0xfffffc80(%rip)
b121(3): sub $0x30,%eax
b124(3): mov %r8,%rdx
b127(3): mov %r11,%rsi
b12a(2): cwde 
b12c(2): jmp 0xffffffcf(%rip)
b12e(4): cmp $0x9,%dil
b132(6): jnbe 0xfffffc69(%rip)
b138(3): movsx %cl,%eax
b13b(3): mov %rdx,%rbp
b13e(3): mov %r8,%rcx
b141(3): sub $0x30,%eax
b144(2): cwde 
b146(5): jmp 0xfffffac3(%rip)
b14b(5): mov 0x8(%rsp),%rsi
b150(4): shl/sal $0x5,%rax
b154(3): mov %rcx,%rdi
b157(3): mov %rax,%rdx
b15a(5): mov %r9,0x40(%rsp)
b15f(5): mov %r10,0x38(%rsp)
b164(5): mov %r8,0x30(%rsp)
b169(5): call 0xffff74d7(%rip)
b16e(5): mov 0x40(%rsp),%r9
b173(3): mov %rax,%rcx
b176(5): mov 0x38(%rsp),%r10
b17b(3): mov (%r15),%rax
b17e(5): mov 0x30(%rsp),%r8
b183(5): jmp 0xfffff810(%rip)
b188(4): cmp $0x9,%dil
b18c(6): jbe 0xffffff4e(%rip)
b192(4): lea 0xffffffff(%rdx),%rbx
b196(4): cmp $0xfffffffd,%rbx
b19a(6): jnbe 0xfffffc01(%rip)
b1a0(5): mov %rbx,0x40(%r12)
b1a5(4): lea 0x2(%rsi),%r11
b1a9(5): jmp 0xfffff894(%rip)
b1ae(3): mov %rsi,%rdi
b1b1(5): call 0xffff74af(%rip)
b1b6(5): mov 0x8(%rsp),%rdx
b1bb(3): mov %rax,%rcx
b1be(5): mov 0x48(%rsp),%r9
b1c3(5): mov 0x40(%rsp),%r10
b1c8(5): mov 0x38(%rsp),%r8
b1cd(5): mov 0x30(%rsp),%r11
b1d2(5): jmp 0xfffffe47(%rip)
b1d7(4): mov 0x8(%r15),%rcx
b1db(5): cmp %rcx,0x8(%rsp)
b1e0(6): jnz 0xfffffe64(%rip)
b1e6(5): jmp 0xfffffe66(%rip)
b1eb(5): nop 0x0(%rax,%rax,1)
b1f0(5): mov 0x8(%rsp),%rsi
b1f5(4): shl/sal $0x5,%rax
b1f9(3): mov %rcx,%rdi
b1fc(3): mov %rax,%rdx
b1ff(5): mov %r9,0x48(%rsp)
b204(5): mov %r10,0x40(%rsp)
b209(5): mov %r8,0x38(%rsp)
b20e(5): mov %r11,0x30(%rsp)
b213(5): call 0xffff742d(%rip)
b218(5): mov 0x48(%rsp),%r9
b21d(3): mov %rax,%rcx
b220(5): mov 0x40(%rsp),%r10
b225(3): mov (%r15),%rax
b228(5): mov 0x38(%rsp),%r8
b22d(5): mov 0x30(%rsp),%r11
b232(5): jmp 0xfffffdfe(%rip)
b237(3): mov %rdx,%rcx
b23a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
b240(2): push %r15
b242(2): push %r14
b244(3): mov %rdx,%r15
b247(2): push %r13
b249(2): push %r12
b24b(7): lea 0x2047fe(%rip),%r12
b252(1): push %rbp
b253(7): lea 0x2047fe(%rip),%rbp
b25a(1): push %rbx
b25b(3): mov %edi,%r13d
b25e(3): mov %rsi,%r14
b261(3): sub %r12,%rbp
b264(4): sub $0x8,%rsp
b268(4): sar $0x3,%rbp
b26c(5): call 0xffff7174(%rip)
b271(3): test %rbp,%rbp
b274(2): jz 0x22(%rip)
b276(2): xor %ebx,%ebx
b278(8): nop 0x0(%rax,%rax,1)
b280(3): mov %r15,%rdx
b283(3): mov %r14,%rsi
b286(3): mov %r13d,%edi
b289(4): call 0x0(%r12,%rbx,8)
b28d(4): add $0x1,%rbx
b291(3): cmp %rbx,%rbp
b294(2): jnz 0xffffffec(%rip)
b296(4): add $0x8,%rsp
b29a(1): pop %rbx
b29b(1): pop %rbp
b29c(2): pop %r12
b29e(2): pop %r13
b2a0(2): pop %r14
b2a2(2): pop %r15
b2a4(1): ret near (%rsp)

"atexit" :
b2c0(7): mov 0x205d41(%rip),%rdx
b2c7(2): xor %esi,%esi
b2c9(5): jmp 0xffff7487(%rip)

"_fini" :
b2d0(4): sub $0x8,%rsp
b2d4(4): add $0x8,%rsp
b2d8(1): ret near (%rsp)

