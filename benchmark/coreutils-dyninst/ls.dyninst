
"__ctype_toupper_loc@plt" :
3240(6): jmp 0x21ca5a(%rip)
3246(5): push $0x0

"getenv@plt" :
3250(6): jmp 0x21ca52(%rip)
3256(5): push $0x1

"sigprocmask@plt" :
3260(6): jmp 0x21ca4a(%rip)
3266(5): push $0x2

"__snprintf_chk@plt" :
3270(6): jmp 0x21ca42(%rip)
3276(5): push $0x3

"raise@plt" :
3280(6): jmp 0x21ca3a(%rip)
3286(5): push $0x4

"abort@plt" :
3290(6): jmp 0x21ca32(%rip)
3296(5): push $0x5

"__errno_location@plt" :
32a0(6): jmp 0x21ca2a(%rip)
32a6(5): push $0x6

"strncmp@plt" :
32b0(6): jmp 0x21ca22(%rip)
32b6(5): push $0x7

"localtime_r@plt" :
32c0(6): jmp 0x21ca1a(%rip)
32c6(5): push $0x8

"_exit@plt" :
32d0(6): jmp 0x21ca12(%rip)
32d6(5): push $0x9

"strcpy@plt" :
32e0(6): jmp 0x21ca0a(%rip)
32e6(5): push $0xa

"__fpending@plt" :
32f0(6): jmp 0x21ca02(%rip)
32f6(5): push $0xb

"isatty@plt" :
3300(6): jmp 0x21c9fa(%rip)
3306(5): push $0xc

"sigaction@plt" :
3310(6): jmp 0x21c9f2(%rip)
3316(5): push $0xd

"iswcntrl@plt" :
3320(6): jmp 0x21c9ea(%rip)
3326(5): push $0xe

"wcswidth@plt" :
3330(6): jmp 0x21c9e2(%rip)
3336(5): push $0xf

"localeconv@plt" :
3340(6): jmp 0x21c9da(%rip)
3346(5): push $0x10

"mbstowcs@plt" :
3350(6): jmp 0x21c9d2(%rip)
3356(5): push $0x11

"readlink@plt" :
3360(6): jmp 0x21c9ca(%rip)
3366(5): push $0x12

"clock_gettime@plt" :
3370(6): jmp 0x21c9c2(%rip)
3376(5): push $0x13

"setenv@plt" :
3380(6): jmp 0x21c9ba(%rip)
3386(5): push $0x14

"textdomain@plt" :
3390(6): jmp 0x21c9b2(%rip)
3396(5): push $0x15

"fclose@plt" :
33a0(6): jmp 0x21c9aa(%rip)
33a6(5): push $0x16

"opendir@plt" :
33b0(6): jmp 0x21c9a2(%rip)
33b6(5): push $0x17

"getpwuid@plt" :
33c0(6): jmp 0x21c99a(%rip)
33c6(5): push $0x18

"bindtextdomain@plt" :
33d0(6): jmp 0x21c992(%rip)
33d6(5): push $0x19

"dcgettext@plt" :
33e0(6): jmp 0x21c98a(%rip)
33e6(5): push $0x1a

"__ctype_get_mb_cur_max@plt" :
33f0(6): jmp 0x21c982(%rip)
33f6(5): push $0x1b

"strlen@plt" :
3400(6): jmp 0x21c97a(%rip)
3406(5): push $0x1c

"__lxstat@plt" :
3410(6): jmp 0x21c972(%rip)
3416(5): push $0x1d

"__stack_chk_fail@plt" :
3420(6): jmp 0x21c96a(%rip)
3426(5): push $0x1e

"getopt_long@plt" :
3430(6): jmp 0x21c962(%rip)
3436(5): push $0x1f

"mbrtowc@plt" :
3440(6): jmp 0x21c95a(%rip)
3446(5): push $0x20

"strchr@plt" :
3450(6): jmp 0x21c952(%rip)
3456(5): push $0x21

"getgrgid@plt" :
3460(6): jmp 0x21c94a(%rip)
3466(5): push $0x22

"__fxstatat@plt" :
3470(6): jmp 0x21c942(%rip)
3476(5): push $0x23

"snprintf@plt" :
3480(6): jmp 0x21c93a(%rip)
3486(5): push $0x24

"__overflow@plt" :
3490(6): jmp 0x21c932(%rip)
3496(5): push $0x25

"strrchr@plt" :
34a0(6): jmp 0x21c92a(%rip)
34a6(5): push $0x26

"gmtime_r@plt" :
34b0(6): jmp 0x21c922(%rip)
34b6(5): push $0x27

"lseek@plt" :
34c0(6): jmp 0x21c91a(%rip)
34c6(5): push $0x28

"__assert_fail@plt" :
34d0(6): jmp 0x21c912(%rip)
34d6(5): push $0x29

"__strtoul_internal@plt" :
34e0(6): jmp 0x21c90a(%rip)
34e6(5): push $0x2a

"fnmatch@plt" :
34f0(6): jmp 0x21c902(%rip)
34f6(5): push $0x2b

"memset@plt" :
3500(6): jmp 0x21c8fa(%rip)
3506(5): push $0x2c

"ioctl@plt" :
3510(6): jmp 0x21c8f2(%rip)
3516(5): push $0x2d

"getcwd@plt" :
3520(6): jmp 0x21c8ea(%rip)
3526(5): push $0x2e

"strspn@plt" :
3530(6): jmp 0x21c8e2(%rip)
3536(5): push $0x2f

"closedir@plt" :
3540(6): jmp 0x21c8da(%rip)
3546(5): push $0x30

"memcmp@plt" :
3550(6): jmp 0x21c8d2(%rip)
3556(5): push $0x31

"_setjmp@plt" :
3560(6): jmp 0x21c8ca(%rip)
3566(5): push $0x32

"fputs_unlocked@plt" :
3570(6): jmp 0x21c8c2(%rip)
3576(5): push $0x33

"calloc@plt" :
3580(6): jmp 0x21c8ba(%rip)
3586(5): push $0x34

"strcmp@plt" :
3590(6): jmp 0x21c8b2(%rip)
3596(5): push $0x35

"signal@plt" :
35a0(6): jmp 0x21c8aa(%rip)
35a6(5): push $0x36

"dirfd@plt" :
35b0(6): jmp 0x21c8a2(%rip)
35b6(5): push $0x37

"getpwnam@plt" :
35c0(6): jmp 0x21c89a(%rip)
35c6(5): push $0x38

"__memcpy_chk@plt" :
35d0(6): jmp 0x21c892(%rip)
35d6(5): push $0x39

"sigemptyset@plt" :
35e0(6): jmp 0x21c88a(%rip)
35e6(5): push $0x3a

"memcpy@plt" :
35f0(6): jmp 0x21c882(%rip)
35f6(5): push $0x3b

"getgrnam@plt" :
3600(6): jmp 0x21c87a(%rip)
3606(5): push $0x3c

"tzset@plt" :
3610(6): jmp 0x21c872(%rip)
3616(5): push $0x3d

"fileno@plt" :
3620(6): jmp 0x21c86a(%rip)
3626(5): push $0x3e

"tcgetpgrp@plt" :
3630(6): jmp 0x21c862(%rip)
3636(5): push $0x3f

"__xstat@plt" :
3640(6): jmp 0x21c85a(%rip)
3646(5): push $0x40

"readdir@plt" :
3650(6): jmp 0x21c852(%rip)
3656(5): push $0x41

"wcwidth@plt" :
3660(6): jmp 0x21c84a(%rip)
3666(5): push $0x42

"fflush@plt" :
3670(6): jmp 0x21c842(%rip)
3676(5): push $0x43

"nl_langinfo@plt" :
3680(6): jmp 0x21c83a(%rip)
3686(5): push $0x44

"__fxstat@plt" :
3690(6): jmp 0x21c832(%rip)
3696(5): push $0x45

"strcoll@plt" :
36a0(6): jmp 0x21c82a(%rip)
36a6(5): push $0x46

"mktime@plt" :
36b0(6): jmp 0x21c822(%rip)
36b6(5): push $0x47

"__freading@plt" :
36c0(6): jmp 0x21c81a(%rip)
36c6(5): push $0x48

"fwrite_unlocked@plt" :
36d0(6): jmp 0x21c812(%rip)
36d6(5): push $0x49

"realloc@plt" :
36e0(6): jmp 0x21c80a(%rip)
36e6(5): push $0x4a

"stpncpy@plt" :
36f0(6): jmp 0x21c802(%rip)
36f6(5): push $0x4b

"setlocale@plt" :
3700(6): jmp 0x21c7fa(%rip)
3706(5): push $0x4c

"__printf_chk@plt" :
3710(6): jmp 0x21c7f2(%rip)
3716(5): push $0x4d

"timegm@plt" :
3720(6): jmp 0x21c7ea(%rip)
3726(5): push $0x4e

"strftime@plt" :
3730(6): jmp 0x21c7e2(%rip)
3736(5): push $0x4f

"mempcpy@plt" :
3740(6): jmp 0x21c7da(%rip)
3746(5): push $0x50

"memmove@plt" :
3750(6): jmp 0x21c7d2(%rip)
3756(5): push $0x51

"error@plt" :
3760(6): jmp 0x21c7ca(%rip)
3766(5): push $0x52

"fseeko@plt" :
3770(6): jmp 0x21c7c2(%rip)
3776(5): push $0x53

"unsetenv@plt" :
3780(6): jmp 0x21c7ba(%rip)
3786(5): push $0x54

"strtoul@plt" :
3790(6): jmp 0x21c7b2(%rip)
3796(5): push $0x55

"__cxa_atexit@plt" :
37a0(6): jmp 0x21c7aa(%rip)
37a6(5): push $0x56

"wcstombs@plt" :
37b0(6): jmp 0x21c7a2(%rip)
37b6(5): push $0x57

"gethostname@plt" :
37c0(6): jmp 0x21c79a(%rip)
37c6(5): push $0x58

"sigismember@plt" :
37d0(6): jmp 0x21c792(%rip)
37d6(5): push $0x59

"exit@plt" :
37e0(6): jmp 0x21c78a(%rip)
37e6(5): push $0x5a

"fwrite@plt" :
37f0(6): jmp 0x21c782(%rip)
37f6(5): push $0x5b

"__fprintf_chk@plt" :
3800(6): jmp 0x21c77a(%rip)
3806(5): push $0x5c

"fflush_unlocked@plt" :
3810(6): jmp 0x21c772(%rip)
3816(5): push $0x5d

"mbsinit@plt" :
3820(6): jmp 0x21c76a(%rip)
3826(5): push $0x5e

"iswprint@plt" :
3830(6): jmp 0x21c762(%rip)
3836(5): push $0x5f

"sigaddset@plt" :
3840(6): jmp 0x21c75a(%rip)
3846(5): push $0x60

"__ctype_tolower_loc@plt" :
3850(6): jmp 0x21c752(%rip)
3856(5): push $0x61

"__ctype_b_loc@plt" :
3860(6): jmp 0x21c74a(%rip)
3866(5): push $0x62

"__sprintf_chk@plt" :
3870(6): jmp 0x21c742(%rip)
3876(5): push $0x63

"free@plt" :
3880(6): jmp 0x21c73a(%rip)
3886(2): nop 

"malloc@plt" :
3888(6): jmp 0x21c752(%rip)
388e(2): nop 

"__cxa_finalize@plt" :
3890(6): jmp 0x21c75a(%rip)
3896(2): nop 

".plt.got" :
3880(6): jmp 0x21c73a(%rip)
3886(2): nop 
3888(6): jmp 0x21c752(%rip)
388e(2): nop 
3890(6): jmp 0x21c75a(%rip)
3896(2): nop 

"_init" :
3210(4): sub $0x8,%rsp
3214(7): mov 0x21cdbd(%rip),%rax
321b(3): test %rax,%rax
321e(2): jz 0x4(%rip)
3220(2): call %rax
3222(4): add $0x8,%rsp
3226(1): ret near (%rsp)

"main" :
38a0(2): push %r15
38a2(2): push %r14
38a4(2): push %r13
38a6(2): push %r12
38a8(1): push %rbp
38a9(1): push %rbx
38aa(2): mov %edi,%ebp
38ac(3): mov %rsi,%rbx
38af(4): sub $0x58,%rsp
38b3(3): mov (%rsi),%rdi
38b6(9): mov $0x28,%rax
38bf(5): mov %rax,0x48(%rsp)
38c4(2): xor %eax,%eax
38c6(5): call 0xe78a(%rip)
38cb(7): lea 0x13fe1(%rip),%rsi
38d2(5): mov $0x6,%edi
38d7(5): call 0xfffffe29(%rip)
38dc(7): lea 0x1412c(%rip),%rsi
38e3(7): lea 0x140f0(%rip),%rdi
38ea(5): call 0xfffffae6(%rip)
38ef(7): lea 0x140e4(%rip),%rdi
38f6(5): call 0xfffffa9a(%rip)
38fb(7): lea 0x929e(%rip),%rdi
3902(a): mov $0x2,0x21c8ec(%rip)
390c(5): call 0x12634(%rip)
3911(a): mov $0x-9223372036854775808,%rax
391b(a): mov $0x0,0x21d8eb(%rip)
3925(7): mov $0x1,0x21d98c(%rip)
392c(7): mov %rax,0x21da3d(%rip)
3933(6): mov 0x21c8a7(%rip),%eax
3939(b): mov $0x0,0x21da3c(%rip)
3944(b): mov $0xffffffff,0x21da29(%rip)
394f(7): mov $0x0,0x21d982(%rip)
3956(3): cmp $0x2,%eax
3959(6): jz 0xd9e(%rip)
395f(3): cmp $0x3,%eax
3962(2): jz 0x10(%rip)
3964(3): sub $0x1,%eax
3967(6): jz 0x8f3(%rip)
396d(5): call 0xfffff923(%rip)
3972(5): mov $0x7,%esi
3977(2): xor %edi,%edi
3979(a): mov $0x0,0x21d9b5(%rip)
3983(5): call 0xfcad(%rip)
3988(7): lea 0x14098(%rip),%rdi
398f(a): mov $0x0,0x21d99b(%rip)
3999(a): mov $0x0,0x21d98d(%rip)
39a3(7): mov $0x0,0x21d985(%rip)
39aa(7): mov $0x0,0x21d97c(%rip)
39b1(7): mov $0x0,0x21d974(%rip)
39b8(a): mov $0x0,0x21d952(%rip)
39c2(7): mov $0x0,0x21d933(%rip)
39c9(a): mov $0x1,0x21d925(%rip)
39d3(7): mov $0x0,0x21d91c(%rip)
39da(7): mov $0x0,0x21d914(%rip)
39e1(a): mov $0x0,0x21d905(%rip)
39eb(b): mov $0x0,0x21d8f2(%rip)
39f6(b): mov $0x0,0x21d8df(%rip)
3a01(7): mov $0x0,0x21d95d(%rip)
3a08(5): call 0xfffff848(%rip)
3a0d(3): test %rax,%rax
3a10(3): mov %rax,%r12
3a13(2): jz 0x38(%rip)
3a15(7): lea 0x16da4(%rip),%rdx
3a1c(7): lea 0x21c01d(%rip),%rsi
3a23(5): mov $0x4,%ecx
3a28(3): mov %rax,%rdi
3a2b(5): call 0x8725(%rip)
3a30(2): test %eax,%eax
3a32(6): js 0xce0(%rip)
3a38(7): lea 0x16d81(%rip),%rdx
3a3f(2): cwde 
3a41(2): xor %edi,%edi
3a43(3): mov 0x0(%rdx,%rax,4),%esi
3a46(5): call 0xfbea(%rip)
3a4b(7): lea 0x13fe3(%rip),%rdi
3a52(b): mov $0x50,0x21d853(%rip)
3a5d(5): call 0xfffff7f3(%rip)
3a62(3): test %rax,%rax
3a65(3): mov %rax,%r12
3a68(2): jz 0xb(%rip)
3a6a(3): cmp $0x0,(%rax)
3a6d(6): jnz 0xce0(%rip)
3a73(5): lea 0x30(%rsp),%r12
3a78(2): xor %eax,%eax
3a7a(5): mov $0x5413,%esi
3a7f(5): mov $0x1,%edi
3a84(3): mov %r12,%rdx
3a87(5): call 0xfffffa89(%rip)
3a8c(3): cmp $0xff,%eax
3a8f(2): jz 0x13(%rip)
3a91(5): movzx 0x32(%rsp),%eax
3a96(3): test %ax,%ax
3a99(2): jz 0x9(%rip)
3a9b(7): mov %rax,0x21d80e(%rip)
3aa2(7): lea 0x13f94(%rip),%rdi
3aa9(5): call 0xfffff7a7(%rip)
3aae(3): test %rax,%rax
3ab1(3): mov %rax,%r13
3ab4(b): mov $0x8,0x21d801(%rip)
3abf(2): jz 0x28(%rip)
3ac1(3): xor %r8d,%r8d
3ac4(2): xor %edx,%edx
3ac6(2): xor %esi,%esi
3ac8(3): mov %r12,%rcx
3acb(3): mov %rax,%rdi
3ace(5): call 0x10f92(%rip)
3ad3(2): test %eax,%eax
3ad5(6): jnz 0x1138(%rip)
3adb(5): mov 0x30(%rsp),%rax
3ae0(7): mov %rax,0x21d7d9(%rip)
3ae7(7): lea 0x1268a(%rip),%r13
3aee(5): mov $0x0,0x10(%rsp)
3af3(5): mov $0x0,0x8(%rsp)
3af8(3): xor %r14d,%r14d
3afb(6): mov $0x1,%r15d
3b01(7): nop 0x0(%rax)
3b08(7): lea 0x21b831(%rip),%rcx
3b0f(7): lea 0x162c2(%rip),%rdx
3b16(3): mov %r12,%r8
3b19(3): mov %rbx,%rsi
3b1c(2): mov %ebp,%edi
3b1e(8): mov $0xffffffff,0x30(%rsp)
3b26(5): call 0xfffff90a(%rip)
3b2b(3): cmp $0xff,%eax
3b2e(6): jz 0x78d(%rip)
3b34(5): add $0x83,%eax
3b39(5): cmp $0x113,%eax
3b3e(6): jnbe 0x1579(%rip)
3b44(5): movsxd 0x0(%r13,%rax,4),%rax
3b49(3): add %r13,%rax
3b4c(2): jmp %rax
3b4e(7): mov %r15b,0x21d7d8(%rip)
3b55(a): mov $0x0,0x21d7d9(%rip)
3b5f(2): jmp 0xffffffa9(%rip)
3b61(5): mov $0x1,0x10(%rsp)
3b66(2): jmp 0xffffffa2(%rip)
3b68(7): mov %r15b,0x21d78d(%rip)
3b6f(2): jmp 0xffffff99(%rip)
3b71(a): mov $0xb0,0x21d7ad(%rip)
3b7b(a): mov $0xb0,0x21d797(%rip)
3b85(b): mov $0x1,0x21d790(%rip)
3b90(b): mov $0x1,0x21c47d(%rip)
3b9b(5): jmp 0xffffff6d(%rip)
3ba0(a): mov $0x0,0x21d78e(%rip)
3baa(7): mov $0x0,0x21c470(%rip)
3bb1(5): jmp 0xffffff57(%rip)
3bb6(7): cmp $0x0,0x21d77b(%rip)
3bbd(a): mov $0x2,0x21d729(%rip)
3bc7(a): mov $0xffffffff,0x21d75f(%rip)
3bd1(6): jz 0x112a(%rip)
3bd7(7): mov $0x0,0x21d74e(%rip)
3bde(7): mov $0x0,0x21d72d(%rip)
3be5(7): mov $0x0,0x21d725(%rip)
3bec(5): mov $0x1,0x8(%rsp)
3bf1(5): jmp 0xffffff17(%rip)
3bf6(7): mov %r15b,0x21d6f8(%rip)
3bfd(5): jmp 0xffffff0b(%rip)
3c02(a): mov $0x1,0x21d728(%rip)
3c0c(5): jmp 0xfffffefc(%rip)
3c11(5): mov $0x7,%esi
3c16(2): xor %edi,%edi
3c18(5): call 0xfa18(%rip)
3c1d(5): jmp 0xfffffeeb(%rip)
3c22(a): mov $0x2,0x21d6c4(%rip)
3c2c(5): jmp 0xfffffedc(%rip)
3c31(7): mov %r15b,0x21d72d(%rip)
3c38(5): jmp 0xfffffed0(%rip)
3c3d(a): mov $0x1,0x21d6e9(%rip)
3c47(5): mov $0x1,0x8(%rsp)
3c4c(5): jmp 0xfffffebc(%rip)
3c51(a): mov $0xffffffff,0x21d6d5(%rip)
3c5b(5): mov $0x1,0x8(%rsp)
3c60(5): jmp 0xfffffea8(%rip)
3c65(7): lea 0x13df7(%rip),%rsi
3c6c(5): mov $0x5,%edx
3c71(2): xor %edi,%edi
3c73(5): call 0xfffff76d(%rip)
3c78(4): sub $0x8,%rsp
3c7c(7): mov 0x21c615(%rip),%rdi
3c83(7): lea 0x13c29(%rip),%r8
3c8a(2): push $0x2
3c8c(2): xor %edx,%edx
3c8e(3): mov %rax,%r9
3c91(4): or $0xffffffff,%rcx
3c95(2): xor %esi,%esi
3c97(5): call 0x10b89(%rip)
3c9c(7): mov %rax,0x21d61d(%rip)
3ca3(1): pop %rax
3ca4(1): pop %rdx
3ca5(5): jmp 0xfffffe63(%rip)
3caa(a): mov $0x2,0x21d67c(%rip)
3cb4(5): mov $0x1,0x8(%rsp)
3cb9(5): jmp 0xfffffe4f(%rip)
3cbe(7): mov %r15b,0x21d631(%rip)
3cc5(5): jmp 0xfffffe43(%rip)
3cca(5): mov $0x5,%esi
3ccf(2): xor %edi,%edi
3cd1(5): call 0xf95f(%rip)
3cd6(5): jmp 0xfffffe32(%rip)
3cdb(2): xor %esi,%esi
3cdd(2): xor %edi,%edi
3cdf(5): call 0xf951(%rip)
3ce4(5): jmp 0xfffffe24(%rip)
3ce9(a): mov $0x5,0x21d605(%rip)
3cf3(5): jmp 0xfffffe15(%rip)
3cf8(7): mov 0x21c599(%rip),%rdx
3cff(5): mov $0x10,%edi
3d04(5): mov %rdx,0x18(%rsp)
3d09(5): call 0x10887(%rip)
3d0e(5): mov 0x18(%rsp),%rdx
3d13(3): mov %rdx,(%rax)
3d16(7): mov 0x21d5cb(%rip),%rdx
3d1d(4): mov %rdx,0x8(%rax)
3d21(7): mov %rax,0x21d5c0(%rip)
3d28(5): jmp 0xfffffde0(%rip)
3d2d(a): mov $0x3,0x21d5c1(%rip)
3d37(5): jmp 0xfffffdd1(%rip)
3d3c(7): mov $0x0,0x21c2dd(%rip)
3d43(5): jmp 0xfffffdc5(%rip)
3d48(a): mov $0x3,0x21d5c2(%rip)
3d52(5): jmp 0xfffffdb6(%rip)
3d57(7): mov %r15b,0x21d5ba(%rip)
3d5e(5): jmp 0xfffffdaa(%rip)
3d63(a): mov $0x2,0x21d5cb(%rip)
3d6d(5): jmp 0xfffffd9b(%rip)
3d72(5): mov $0x10,%edi
3d77(5): call 0x10819(%rip)
3d7c(7): mov 0x21d565(%rip),%rdx
3d83(7): lea 0x13cd6(%rip),%rsi
3d8a(5): mov $0x10,%edi
3d8f(7): mov %rax,0x21d552(%rip)
3d96(3): mov %rsi,(%rax)
3d99(4): mov %rdx,0x8(%rax)
3d9d(5): call 0x107f3(%rip)
3da2(7): mov 0x21d53f(%rip),%rdx
3da9(7): lea 0x13caf(%rip),%rsi
3db0(3): mov %rsi,(%rax)
3db3(4): mov %rdx,0x8(%rax)
3db7(7): mov %rax,0x21d52a(%rip)
3dbe(5): jmp 0xfffffd4a(%rip)
3dc3(a): mov $0x1,0x21d523(%rip)
3dcd(5): jmp 0xfffffd3b(%rip)
3dd2(7): cmp $0x0,0x21d55f(%rip)
3dd9(6): jz 0xfffffd2f(%rip)
3ddf(a): mov $0x1,0x21d54f(%rip)
3de9(5): jmp 0xfffffd1f(%rip)
3dee(6): mov 0x21c3ec(%rip),%eax
3df4(7): mov 0x21c3ed(%rip),%rcx
3dfb(7): lea 0x13bdf(%rip),%rsi
3e02(3): cmp $0x1,%eax
3e05(2): jz 0x17(%rip)
3e07(3): cmp $0x2,%eax
3e0a(7): lea 0x13b4c(%rip),%rsi
3e11(7): lea 0x13b46(%rip),%rax
3e18(4): cmove %rax,%rsi
3e1c(4): sub $0x8,%rsp
3e20(7): mov 0x21c461(%rip),%rdi
3e27(7): lea 0x13c93(%rip),%r9
3e2e(2): push $0x0
3e30(7): lea 0x13c9a(%rip),%r8
3e37(7): lea 0x13b98(%rip),%rdx
3e3e(2): xor %eax,%eax
3e40(5): call 0x105f0(%rip)
3e45(2): xor %edi,%edi
3e47(5): call 0xfffff999(%rip)
3e4c(7): mov 0x21c445(%rip),%r14
3e53(5): jmp 0xfffffcb5(%rip)
3e58(7): mov 0x21c391(%rip),%r9
3e5f(7): mov 0x21c432(%rip),%rsi
3e66(7): lea 0x21b413(%rip),%rdx
3e6d(7): lea 0x1287c(%rip),%rcx
3e74(7): lea 0x13c00(%rip),%rdi
3e7b(6): mov $0x4,%r8d
3e81(5): call 0x858f(%rip)
3e86(7): lea 0x12863(%rip),%rdx
3e8d(3): mov 0x0(%rdx,%rax,4),%eax
3e90(6): mov %eax,0x21d49e(%rip)
3e96(5): jmp 0xfffffc72(%rip)
3e9b(7): mov 0x21c34e(%rip),%r9
3ea2(7): mov 0x21c3ef(%rip),%rsi
3ea9(7): lea 0x21b410(%rip),%rdx
3eb0(7): lea 0x12859(%rip),%rcx
3eb7(7): lea 0x13bb6(%rip),%rdi
3ebe(6): mov $0x4,%r8d
3ec4(5): call 0x854c(%rip)
3ec9(7): lea 0x12840(%rip),%rdx
3ed0(5): mov $0x1,0x8(%rsp)
3ed5(3): mov 0x0(%rdx,%rax,4),%eax
3ed8(6): mov %eax,0x21d452(%rip)
3ede(5): jmp 0xfffffc2a(%rip)
3ee3(a): mov $0x90,0x21d43b(%rip)
3eed(a): mov $0x90,0x21d425(%rip)
3ef7(b): mov $0x1,0x21d41e(%rip)
3f02(b): mov $0x1,0x21c10b(%rip)
3f0d(5): jmp 0xfffffbfb(%rip)
3f12(7): mov $0x0,0x21d3bf(%rip)
3f19(5): jmp 0xfffffbef(%rip)
3f1e(7): mov 0x21c2cb(%rip),%r9
3f25(7): mov 0x21c36c(%rip),%rsi
3f2c(7): lea 0x1688d(%rip),%rcx
3f33(7): lea 0x21bb06(%rip),%rdx
3f3a(7): lea 0x13b70(%rip),%rdi
3f41(6): mov $0x4,%r8d
3f47(5): call 0x84c9(%rip)
3f4c(7): lea 0x1686d(%rip),%rdx
3f53(2): xor %edi,%edi
3f55(3): mov 0x0(%rdx,%rax,4),%esi
3f58(5): call 0xf6d8(%rip)
3f5d(5): jmp 0xfffffbab(%rip)
3f62(7): mov 0x21c287(%rip),%r9
3f69(7): mov 0x21c328(%rip),%rsi
3f70(7): lea 0x21ba29(%rip),%rdx
3f77(7): lea 0x127d2(%rip),%rcx
3f7e(7): lea 0x13b1a(%rip),%rdi
3f85(6): mov $0x4,%r8d
3f8b(5): call 0x8485(%rip)
3f90(7): lea 0x127b9(%rip),%rdx
3f97(3): mov 0x0(%rdx,%rax,4),%eax
3f9a(6): mov %eax,0x21d374(%rip)
3fa0(5): jmp 0xfffffb68(%rip)
3fa5(7): mov 0x21c2ec(%rip),%rsi
3fac(3): test %rsi,%rsi
3faf(6): jz 0x2f5(%rip)
3fb5(7): mov 0x21c234(%rip),%r9
3fbc(7): lea 0x21b25d(%rip),%rdx
3fc3(7): lea 0x126f6(%rip),%rcx
3fca(7): lea 0x13ac2(%rip),%rdi
3fd1(6): mov $0x4,%r8d
3fd7(5): call 0x8439(%rip)
3fdc(7): lea 0x126dd(%rip),%rdx
3fe3(3): mov 0x0(%rdx,%rax,4),%edx
3fe6(3): cmp $0x1,%edx
3fe9(6): jz 0x2bb(%rip)
3fef(2): xor %eax,%eax
3ff1(3): cmp $0x2,%edx
3ff4(6): jnz 0x2b5(%rip)
3ffa(5): mov $0x1,%edi
3fff(5): call 0xfffff301(%rip)
4004(2): test %eax,%eax
4006(3): setnz %al
4009(3): movzx %al,%eax
400c(5): jmp 0x29d(%rip)
4011(5): mov $0x10,%edi
4016(5): call 0x1057a(%rip)
401b(7): mov 0x21c276(%rip),%rdx
4022(3): mov %rdx,(%rax)
4025(7): mov 0x21d2b4(%rip),%rdx
402c(7): mov %rax,0x21d2ad(%rip)
4033(4): mov %rdx,0x8(%rax)
4037(5): jmp 0xfffffad1(%rip)
403c(7): mov %r15b,0x21d2b1(%rip)
4043(5): jmp 0xfffffac5(%rip)
4048(a): mov $0x0,0x21d2e6(%rip)
4052(7): lea 0x139aa(%rip),%r14
4059(5): jmp 0xfffffaaf(%rip)
405e(7): mov 0x21c18b(%rip),%r9
4065(7): mov 0x21c22c(%rip),%rsi
406c(7): lea 0x21b28d(%rip),%rdx
4073(7): lea 0x126b6(%rip),%rcx
407a(7): lea 0x13a01(%rip),%rdi
4081(6): mov $0x4,%r8d
4087(5): call 0x8389(%rip)
408c(7): lea 0x1269d(%rip),%rdx
4093(3): mov 0x0(%rdx,%rax,4),%eax
4096(6): mov %eax,0x21d29c(%rip)
409c(5): jmp 0xfffffa6c(%rip)
40a1(a): mov $0x2,0x21d269(%rip)
40ab(5): jmp 0xfffffa5d(%rip)
40b0(a): mov $0x4,0x21d23e(%rip)
40ba(5): jmp 0xfffffa4e(%rip)
40bf(7): mov 0x21c1d2(%rip),%rsi
40c6(3): test %rsi,%rsi
40c9(6): jz 0x1c4(%rip)
40cf(7): mov 0x21c11a(%rip),%r9
40d6(7): lea 0x21b143(%rip),%rdx
40dd(7): lea 0x125dc(%rip),%rcx
40e4(7): lea 0x139a0(%rip),%rdi
40eb(6): mov $0x4,%r8d
40f1(5): call 0x831f(%rip)
40f6(7): lea 0x125c3(%rip),%rdx
40fd(3): mov 0x0(%rdx,%rax,4),%eax
4100(3): cmp $0x1,%eax
4103(6): jz 0x18a(%rip)
4109(3): cmp $0x2,%eax
410c(6): jz 0x16f(%rip)
4112(7): mov $0x0,0x21d1f9(%rip)
4119(5): jmp 0xfffff9ef(%rip)
411e(7): mov 0x21c173(%rip),%rdi
4125(7): lea 0x21d1f4(%rip),%rdx
412c(7): lea 0x21d1f5(%rip),%rsi
4133(5): call 0xb49d(%rip)
4138(2): test %eax,%eax
413a(6): jnz 0x110a(%rip)
4140(6): mov 0x21d1e2(%rip),%eax
4146(6): mov %eax,0x21d1d0(%rip)
414c(7): mov 0x21d1cd(%rip),%rax
4153(7): mov %rax,0x21bebe(%rip)
415a(5): jmp 0xfffff9ae(%rip)
415f(a): mov $0x4,0x21d1c7(%rip)
4169(5): mov $0x1,0x8(%rsp)
416e(5): jmp 0xfffff99a(%rip)
4173(7): mov %r15b,0x21d1b2(%rip)
417a(5): jmp 0xfffff98e(%rip)
417f(7): mov %r15b,0x21d1a9(%rip)
4186(5): jmp 0xfffff982(%rip)
418b(7): mov %r15b,0x21d146(%rip)
4192(5): jmp 0xfffff976(%rip)
4197(a): mov $0x1,0x21d173(%rip)
41a1(5): jmp 0xfffff967(%rip)
41a6(a): mov $0x0,0x21d188(%rip)
41b0(7): mov $0x0,0x21be69(%rip)
41b7(5): jmp 0xfffff951(%rip)
41bc(a): mov $0x4,0x21d172(%rip)
41c6(5): jmp 0xfffff942(%rip)
41cb(a): mov $0x3,0x21d163(%rip)
41d5(5): jmp 0xfffff933(%rip)
41da(7): mov 0x21c0b7(%rip),%rdi
41e1(5): call 0x14ef(%rip)
41e6(2): test %al,%al
41e8(6): jnz 0xfffff920(%rip)
41ee(7): mov 0x21c0a3(%rip),%rdi
41f5(5): call 0xfb6b(%rip)
41fa(7): lea 0x13844(%rip),%rsi
4201(5): mov $0x5,%edx
4206(2): xor %edi,%edi
4208(3): mov %rax,%rbx
420b(5): call 0xfffff1d5(%rip)
4210(7): lea 0x13841(%rip),%rdx
4217(3): mov %rax,%rcx
421a(3): mov %rbx,%r8
421d(2): xor %esi,%esi
421f(5): mov $0x2,%edi
4224(2): xor %eax,%eax
4226(5): call 0xfffff53a(%rip)
422b(a): mov $0x3,0x21d0fb(%rip)
4235(5): mov $0x1,0x8(%rsp)
423a(5): jmp 0xfffff8ce(%rip)
423f(a): mov $0x2,0x21d0eb(%rip)
4249(5): jmp 0xfffff8bf(%rip)
424e(7): mov %r15b,0x21d0d9(%rip)
4255(5): jmp 0xfffff8b3(%rip)
425a(5): mov $0x1,%edi
425f(5): call 0xfffff0a1(%rip)
4264(2): test %eax,%eax
4266(6): jnz 0xac9(%rip)
426c(a): mov $0x1,0x21d0c2(%rip)
4276(5): jmp 0xfffff712(%rip)
427b(5): mov $0x1,%edi
4280(5): call 0xfffff080(%rip)
4285(2): test %eax,%eax
4287(6): jz 0xfffffe8b(%rip)
428d(7): mov %r15b,0x21d07e(%rip)
4294(b): mov $0x0,0x21d021(%rip)
429f(5): jmp 0xfffff869(%rip)
42a4(5): mov $0x1,%eax
42a9(6): mov %al,0x21d062(%rip)
42af(7): and $0x1,0x21d05b(%rip)
42b6(5): jmp 0xfffff852(%rip)
42bb(8): cmp $0x0,0x21d05d(%rip)
42c3(6): jz 0x628(%rip)
42c9(7): mov 0x21cfe0(%rip),%rax
42d0(5): mov $0x3,%ecx
42d5(2): xor %edx,%edx
42d7(3): div %rcx,%rax
42da(3): test %rdx,%rdx
42dd(3): setnz %dl
42e0(2): xor %edi,%edi
42e2(3): movzx %dl,%edx
42e5(3): add %rdx,%rax
42e8(7): mov %rax,0x21cf11(%rip)
42ef(5): call 0xf321(%rip)
42f4(6): mov 0x21d03e(%rip),%edx
42fa(3): mov %eax,%r13d
42fd(3): cmp $0x4,%edx
4300(6): jz 0x446(%rip)
4306(3): cmp $0x1,%edx
4309(6): jz 0x43d(%rip)
430f(8): cmp $0x0,0x21cf99(%rip)
4317(2): jnz 0x8(%rip)
4319(2): xor %eax,%eax
431b(2): test %edx,%edx
431d(2): jnz 0x1a(%rip)
431f(3): mov %r13d,%eax
4322(3): and $0xfd,%eax
4325(3): sub $0x1,%eax
4328(3): setz %al
432b(4): cmp $0x6,%r13d
432f(3): setz %dl
4332(2): or %edx,%eax
4334(3): movzx %al,%eax
4337(2): xor %edi,%edi
4339(6): mov %al,0x21d069(%rip)
433f(7): and $0x1,0x21d062(%rip)
4346(5): call 0xf28a(%rip)
434b(4): cmp $0x7,%r13d
434f(7): mov %rax,0x21cf7a(%rip)
4356(6): jz 0x9c2(%rip)
435c(6): mov 0x21cfb2(%rip),%eax
4362(3): cmp $0x1,%eax
4365(2): jbe 0x3a(%rip)
4367(7): lea 0x13785(%rip),%rdx
436e(3): sub $0x2,%eax
4371(4): movsx 0x0(%rdx,%rax,1),%esi
4375(4): lea 0x0(%rax,%rdx,1),%r13
4379(3): test %sil,%sil
437c(2): jz 0x23(%rip)
437e(2): nop 
4380(7): mov 0x21cf49(%rip),%rdi
4387(4): add $0x1,%r13
438b(5): mov $0x1,%edx
4390(5): call 0xf2c0(%rip)
4395(5): movsx 0x0(%r13),%esi
439a(3): test %sil,%sil
439d(2): jnz 0xffffffe3(%rip)
439f(2): xor %edi,%edi
43a1(5): call 0xf22f(%rip)
43a6(5): mov $0x1,%edx
43ab(5): mov $0x3a,%esi
43b0(3): mov %rax,%rdi
43b3(7): mov %rax,0x21cf0e(%rip)
43ba(5): call 0xf296(%rip)
43bf(7): cmp $0x0,0x21cf52(%rip)
43c6(2): jz 0x16(%rip)
43c8(7): cmp $0x0,0x21cf69(%rip)
43cf(6): jz 0x4c1(%rip)
43d5(7): mov $0x0,0x21cf3c(%rip)
43dc(6): mov 0x21cf52(%rip),%eax
43e2(6): mov 0x21cf50(%rip),%edx
43e8(3): sub $0x1,%eax
43eb(3): cmp $0x1,%eax
43ee(2): jnbe 0xd(%rip)
43f0(5): cmp $0x0,0x8(%rsp)
43f5(6): jz 0x95c(%rip)
43fb(2): test %edx,%edx
43fd(2): jnz 0x45(%rip)
43ff(3): test %r14,%r14
4402(6): jz 0x983(%rip)
4408(7): lea 0x122a4(%rip),%r13
440f(2): jmp 0xd(%rip)
4411(7): nop 0x0(%rax)
4418(4): add $0x6,%r14
441c(5): mov $0x6,%edx
4421(3): mov %r13,%rsi
4424(3): mov %r14,%rdi
4427(5): call 0xffffee89(%rip)
442c(2): test %eax,%eax
442e(6): jnz 0x833(%rip)
4434(5): mov $0x2,%edi
4439(5): call 0x92a7(%rip)
443e(2): test %al,%al
4440(2): jnz 0xffffffd8(%rip)
4442(7): cmp $0x0,0x21cec9(%rip)
4449(7): movsxd 0x21be40(%rip),%r13
4450(6): jnz 0x681(%rip)
4456(7): cmp $0x0,0x21ce97(%rip)
445d(2): jz 0x9(%rip)
445f(7): mov $0x1,0x21ce97(%rip)
4466(7): cmp $0x1,0x21ce8b(%rip)
446d(6): jz 0x44d(%rip)
4473(7): cmp $0x0,0x21ce7c(%rip)
447a(2): jz 0x51(%rip)
447c(7): lea 0xf4d(%rip),%r8
4483(7): lea 0xf06(%rip),%rcx
448a(7): lea 0xeef(%rip),%rdx
4491(2): xor %esi,%esi
4493(5): mov $0x1e,%edi
4498(5): call 0x9b18(%rip)
449d(3): test %rax,%rax
44a0(7): mov %rax,0x21cf21(%rip)
44a7(6): jz 0xdbd(%rip)
44ad(7): mov 0x21bb0c(%rip),%r8
44b4(7): mov 0x21bb25(%rip),%rcx
44bb(7): lea 0x21cc1e(%rip),%rdi
44c2(2): xor %edx,%edx
44c4(2): xor %esi,%esi
44c6(5): call 0x1102a(%rip)
44cb(7): lea 0x136ea(%rip),%rdi
44d2(5): call 0xffffed7e(%rip)
44d7(3): mov %rax,%rdi
44da(5): call 0x112e6(%rip)
44df(7): mov %rax,0x21cdc2(%rip)
44e6(6): mov 0x21ce44(%rip),%eax
44ec(3): sub $0x2,%eax
44ef(3): and $0xfd,%eax
44f2(2): jz 0xf(%rip)
44f4(7): cmp $0x0,0x21ce3d(%rip)
44fb(6): jnz 0x33c(%rip)
4501(7): mov $0x1,0x21cd99(%rip)
4508(2): xor %eax,%eax
450a(6): mov %al,0x21cd90(%rip)
4510(7): and $0x1,0x21cd89(%rip)
4517(7): cmp $0x0,0x21cdfa(%rip)
451e(6): jnz 0x4b6(%rip)
4524(7): cmp $0x0,0x21cde6(%rip)
452b(6): jnz 0x42d(%rip)
4531(3): mov %ebp,%r14d
4534(5): mov $0x4e20,%edi
4539(b): mov $0x64,0x21ce74(%rip)
4544(3): sub %r13d,%r14d
4547(7): lea 0x13365(%rip),%r15
454e(5): call 0x10042(%rip)
4553(b): mov $0x0,0x21ce52(%rip)
455e(7): mov %rax,0x21ce5b(%rip)
4565(5): call 0x4f8b(%rip)
456a(3): test %r14d,%r14d
456d(6): jle 0x224(%rip)
4573(5): nop 0x0(%rax,%rax,1)
4578(4): mov 0x0(%rbx,%r13,8),%rdi
457c(2): xor %esi,%esi
457e(3): mov %r15,%rcx
4581(5): mov $0x1,%edx
4586(4): add $0x1,%r13
458a(5): call 0x5106(%rip)
458f(3): cmp %r13d,%ebp
4592(2): jnle 0xffffffe6(%rip)
4594(8): cmp $0x0,0x21ce14(%rip)
459c(6): jnz 0x477(%rip)
45a2(4): sub $0x1,%r14d
45a6(7): mov 0x21cdd3(%rip),%rbx
45ad(2): jnle 0x3f(%rip)
45af(5): jmp 0x692(%rip)
45b4(4): nop 0x0(%rax)
45b8(4): movzx 0x10(%rbx),%edx
45bc(4): mov 0x8(%rbx),%rsi
45c0(5): call 0x5e30(%rip)
45c5(3): mov (%rbx),%rdi
45c8(5): call 0xfffff2b8(%rip)
45cd(4): mov 0x8(%rbx),%rdi
45d1(5): call 0xfffff2af(%rip)
45d6(3): mov %rbx,%rdi
45d9(5): call 0xfffff2a7(%rip)
45de(7): mov $0x1,0x21ccd3(%rip)
45e5(7): mov 0x21cd94(%rip),%rbx
45ec(3): test %rbx,%rbx
45ef(6): jz 0x97(%rip)
45f5(4): mov 0x18(%rbx),%rax
45f9(3): mov (%rbx),%rdi
45fc(7): mov %rax,0x21cd7d(%rip)
4603(7): mov 0x21cdbe(%rip),%rax
460a(3): test %rax,%rax
460d(2): jz 0xffffffab(%rip)
460f(3): test %rdi,%rdi
4612(2): jnz 0xffffffa6(%rip)
4614(7): mov 0x21cadd(%rip),%rdx
461b(3): mov %rdx,%rcx
461e(7): sub 0x21cacb(%rip),%rcx
4625(4): cmp $0xf,%rcx
4629(6): jbe 0xbbe(%rip)
462f(4): lea 0xfffffff0(%rdx),%rcx
4633(3): mov %r12,%rsi
4636(3): mov %rax,%rdi
4639(7): mov %rcx,0x21cab8(%rip)
4640(4): mov 0xfffffff0(%rdx),%rcx
4644(4): mov 0xfffffff8(%rdx),%rdx
4648(5): mov %rcx,0x30(%rsp)
464d(5): mov %rdx,0x38(%rsp)
4652(5): call 0xa1be(%rip)
4657(3): test %rax,%rax
465a(6): jz 0xbac(%rip)
4660(3): mov %rax,%rdi
4663(5): call 0xfffff21d(%rip)
4668(3): mov (%rbx),%rdi
466b(5): call 0xfffff215(%rip)
4670(4): mov 0x8(%rbx),%rdi
4674(5): call 0xfffff20c(%rip)
4679(3): mov %rbx,%rdi
467c(5): call 0xfffff204(%rip)
4681(5): jmp 0xffffff64(%rip)
4686(7): cmp $0x0,0x21cc85(%rip)
468d(2): jz 0xf(%rip)
468f(7): cmp $0x0,0x21cc7a(%rip)
4696(6): jnz 0x126(%rip)
469c(7): cmp $0x0,0x21cc75(%rip)
46a3(6): jnz 0x3d7(%rip)
46a9(7): mov 0x21cd18(%rip),%rbx
46b0(3): test %rbx,%rbx
46b3(2): jz 0x1b(%rip)
46b5(3): mov %rbx,%rdi
46b8(5): call 0x9478(%rip)
46bd(3): test %rax,%rax
46c0(6): jnz 0xb65(%rip)
46c6(3): mov %rbx,%rdi
46c9(5): call 0x9b37(%rip)
46ce(5): mov 0x48(%rsp),%rsi
46d3(9): xor $0x28,%rsi
46dc(6): mov 0x21cb2e(%rip),%eax
46e2(6): jnz 0xb7d(%rip)
46e8(4): add $0x58,%rsp
46ec(1): pop %rbx
46ed(1): pop %rbp
46ee(2): pop %r12
46f0(2): pop %r13
46f2(2): pop %r14
46f4(2): pop %r15
46f6(1): ret near (%rsp)
46f7(5): mov $0x7,%esi
46fc(2): xor %edi,%edi
46fe(a): mov $0x2,0x21cc30(%rip)
4708(5): call 0xef28(%rip)
470d(5): jmp 0xfffff27b(%rip)
4712(3): mov %r12,%rdi
4715(5): call 0xf64b(%rip)
471a(7): lea 0x155ef(%rip),%rsi
4721(3): mov %rax,%r12
4724(2): xor %edi,%edi
4726(5): mov $0x5,%edx
472b(5): call 0xffffecb5(%rip)
4730(3): mov %r12,%rcx
4733(3): mov %rax,%rdx
4736(2): xor %esi,%esi
4738(2): xor %edi,%edi
473a(2): xor %eax,%eax
473c(5): call 0xfffff024(%rip)
4741(5): jmp 0xfffff30a(%rip)
4746(2): xor %eax,%eax
4748(5): jmp 0xfffffbef(%rip)
474d(3): mov %rax,%rdi
4750(5): call 0xf80(%rip)
4755(2): test %al,%al
4757(6): jnz 0xfffff31c(%rip)
475d(3): mov %r12,%rdi
4760(5): call 0xf600(%rip)
4765(7): lea 0x155ec(%rip),%rsi
476c(3): mov %rax,%r12
476f(2): xor %edi,%edi
4771(5): mov $0x5,%edx
4776(5): call 0xffffec6a(%rip)
477b(3): mov %r12,%rcx
477e(3): mov %rax,%rdx
4781(2): xor %esi,%esi
4783(2): xor %edi,%edi
4785(2): xor %eax,%eax
4787(5): call 0xffffefd9(%rip)
478c(5): jmp 0xfffff2e7(%rip)
4791(7): cmp $0x0,0x21cb5d(%rip)
4798(6): jz 0x10a(%rip)
479e(7): lea 0x157f7(%rip),%rdi
47a5(3): mov %r15,%rcx
47a8(5): mov $0x1,%edx
47ad(5): mov $0x3,%esi
47b2(5): call 0x4ede(%rip)
47b7(5): jmp 0xfffffddd(%rip)
47bc(8): cmp $0x2,0x21b89c(%rip)
47c4(2): jnz 0x14(%rip)
47c6(7): mov 0x21b89b(%rip),%rax
47cd(5): cmp $0x5b1b,(%rax)
47d2(6): jz 0x7a1(%rip)
47d8(7): lea 0x21b881(%rip),%rdi
47df(5): call 0x2691(%rip)
47e4(7): lea 0x21b885(%rip),%rdi
47eb(5): call 0x2685(%rip)
47f0(7): mov 0x21ba91(%rip),%rdi
47f7(5): call 0xfffff019(%rip)
47fc(2): xor %edi,%edi
47fe(5): call 0x2452(%rip)
4803(6): mov 0x21ca0b(%rip),%ebx
4809(2): test %ebx,%ebx
480b(2): jz 0x14(%rip)
480d(3): nop (%rax)
4810(5): mov $0x13,%edi
4815(5): call 0xffffea6b(%rip)
481a(3): sub $0x1,%ebx
481d(2): jnz 0xfffffff3(%rip)
481f(6): mov 0x21c9f3(%rip),%edi
4825(2): test %edi,%edi
4827(6): jz 0xfffffe75(%rip)
482d(5): call 0xffffea53(%rip)
4832(5): jmp 0xfffffe6a(%rip)
4837(7): cmp $0x0,0x21cb27(%rip)
483e(6): jnz 0xfffffcc3(%rip)
4844(7): cmp $0x0,0x21cae1(%rip)
484b(6): jnz 0xfffffcb6(%rip)
4851(7): cmp $0x0,0x21ca9e(%rip)
4858(7): mov $0x0,0x21ca42(%rip)
485f(5): mov $0x1,%eax
4864(6): jnz 0xfffffca6(%rip)
486a(7): cmp $0x0,0x21caa1(%rip)
4871(6): jnz 0xfffffc99(%rip)
4877(7): cmp $0x0,0x21ca96(%rip)
487e(6): jnz 0xfffffc8c(%rip)
4884(7): movzx 0x21ca69(%rip),%eax
488b(5): jmp 0xfffffc7f(%rip)
4890(7): cmp $0x0,0x21ca7a(%rip)
4897(6): jz 0xfffffb68(%rip)
489d(5): jmp 0xfffffb38(%rip)
48a2(7): lea 0x156f3(%rip),%rdi
48a9(5): mov $0x1,%edx
48ae(2): xor %esi,%esi
48b0(5): call 0x1120(%rip)
48b5(5): jmp 0xfffffcdf(%rip)
48ba(7): cmp $0x0,0x21ca34(%rip)
48c1(5): mov $0x2,%eax
48c6(2): jnz 0x1a(%rip)
48c8(7): cmp $0x3,0x21ca45(%rip)
48cf(2): jz 0x11(%rip)
48d1(7): cmp $0x1,0x21ca60(%rip)
48d8(2): sbb %eax,%eax
48da(3): and $0xfe,%eax
48dd(3): add $0x4,%eax
48e0(6): mov %eax,0x21ca12(%rip)
48e6(5): jmp 0xfffffb8d(%rip)
48eb(7): lea 0x131f3(%rip),%rdi
48f2(5): call 0xffffe95e(%rip)
48f7(7): lea 0x21ca22(%rip),%rdx
48fe(7): lea 0x21ca23(%rip),%rsi
4905(3): mov %rax,%r13
4908(3): mov %rax,%rdi
490b(5): call 0xacc5(%rip)
4910(3): test %r13,%r13
4913(6): jz 0x822(%rip)
4919(6): mov 0x21ca09(%rip),%eax
491f(6): mov %eax,0x21c9f7(%rip)
4925(7): mov 0x21c9f4(%rip),%rax
492c(7): mov %rax,0x21b6e5(%rip)
4933(5): cmp $0x0,0x10(%rsp)
4938(6): jz 0xfffff991(%rip)
493e(a): mov $0x0,0x21c9e0(%rip)
4948(b): mov $0x400,0x21c9cd(%rip)
4953(5): jmp 0xfffff976(%rip)
4958(7): lea 0x21c681(%rip),%rdx
495f(2): xor %eax,%eax
4961(2): jmp 0x37(%rip)
4963(5): nop 0x0(%rax,%rax,1)
4968(3): cmp $0x41,%eax
496b(2): jnl 0x3a(%rip)
496d(3): lea 0xffffffd0(%rax),%ecx
4970(3): cmp $0x9,%ecx
4973(2): jbe 0x32(%rip)
4975(3): lea 0xffffffd3(%rax),%ecx
4978(3): cmp $0x1,%ecx
497b(2): jbe 0x2a(%rip)
497d(3): cmp $0x7e,%eax
4980(2): jz 0x25(%rip)
4982(3): cmp $0x5f,%eax
4985(3): setz %cl
4988(3): add $0x1,%eax
498b(2): or %cl,(%rdx)
498d(4): add $0x1,%rdx
4991(5): cmp $0x100,%eax
4996(2): jz 0x24(%rip)
4998(3): cmp $0x5a,%eax
499b(2): jle 0xffffffcd(%rip)
499d(3): lea 0xffffff9f(%rax),%ecx
49a0(3): cmp $0x19,%ecx
49a3(2): jnbe 0xffffffd2(%rip)
49a5(3): add $0x1,%eax
49a8(5): mov $0x1,%ecx
49ad(2): or %cl,(%rdx)
49af(4): add $0x1,%rdx
49b3(5): cmp $0x100,%eax
49b8(2): jnz 0xffffffe0(%rip)
49ba(5): call 0xffc6(%rip)
49bf(3): test %rax,%rax
49c2(6): jz 0x3b7(%rip)
49c8(7): mov %rax,0x21c9b9(%rip)
49cf(5): jmp 0xfffffb62(%rip)
49d4(7): mov 0x21b5e5(%rip),%r15
49db(7): mov 0x21b5fe(%rip),%r14
49e2(7): lea 0x21c7b7(%rip),%rdi
49e9(2): xor %edx,%edx
49eb(2): xor %esi,%esi
49ed(3): mov %r15,%r8
49f0(3): mov %r14,%rcx
49f3(5): call 0x10afd(%rip)
49f8(7): lea 0x21c741(%rip),%rdi
49ff(3): mov %r15,%r8
4a02(3): mov %r14,%rcx
4a05(2): xor %edx,%edx
4a07(2): xor %esi,%esi
4a09(5): call 0x10ae7(%rip)
4a0e(5): jmp 0xfffffb16(%rip)
4a13(5): call 0x122d(%rip)
4a18(7): cmp $0x0,0x21c8d6(%rip)
4a1f(6): jz 0x349(%rip)
4a25(8): cmp $0x0,0x21c983(%rip)
4a2d(6): jz 0xfffffb75(%rip)
4a33(5): call 0x456d(%rip)
4a38(8): cmp $0x0,0x21c940(%rip)
4a40(6): jz 0xfffffc46(%rip)
4a46(7): mov 0x21b83b(%rip),%rdi
4a4d(4): mov 0x28(%rdi),%rax
4a51(4): cmp %rax,0x30(%rdi)
4a55(6): jbe 0x735(%rip)
4a5b(4): lea 0x1(%rax),%rdx
4a5f(4): mov %rdx,0x28(%rdi)
4a63(3): mov $0xa,(%rax)
4a66(8): add $0x1,0x21c78a(%rip)
4a6e(7): mov 0x21c90b(%rip),%rbx
4a75(5): jmp 0xfffffb77(%rip)
4a7a(7): lea 0x21c71f(%rip),%rsi
4a81(7): lea 0x1313d(%rip),%rdi
4a88(5): call 0x1688(%rip)
4a8d(7): lea 0x21c6ac(%rip),%rsi
4a94(7): lea 0x13134(%rip),%rdi
4a9b(5): call 0x1675(%rip)
4aa0(7): mov 0x21c829(%rip),%rdi
4aa7(5): call 0xeb69(%rip)
4aac(7): lea 0x21af8d(%rip),%rdx
4ab3(2): mov %eax,%eax
4ab5(7): lea 0x153bc(%rip),%rsi
4abc(5): mov $0x1,%edi
4ac1(4): mov 0x0(%rdx,%rax,8),%rdx
4ac5(2): xor %eax,%eax
4ac7(5): call 0xffffec49(%rip)
4acc(5): jmp 0xfffffbdd(%rip)
4ad1(7): lea 0x130ab(%rip),%rdi
4ad8(5): call 0xffffe778(%rip)
4add(3): test %rax,%rax
4ae0(5): mov %rax,0x28(%rsp)
4ae5(2): jz 0xb(%rip)
4ae7(3): cmp $0x0,(%rax)
4aea(6): jnz 0x30e(%rip)
4af0(7): lea 0x13096(%rip),%rdi
4af7(5): call 0xffffe759(%rip)
4afc(3): test %rax,%rax
4aff(2): jz 0xb(%rip)
4b01(3): cmp $0x0,(%rax)
4b04(6): jnz 0x9e(%rip)
4b0a(7): lea 0x13081(%rip),%rdi
4b11(5): call 0xffffe73f(%rip)
4b16(3): test %rax,%rax
4b19(5): mov %rax,0x8(%rsp)
4b1e(2): jz 0x7d(%rip)
4b20(5): mov 0x8(%rsp),%rax
4b25(3): cmp $0x0,(%rax)
4b28(2): jz 0x73(%rip)
4b2a(7): lea 0x11c4f(%rip),%r14
4b31(3): mov %r12,%rax
4b34(3): mov %rbx,%r12
4b37(3): mov %rax,%r15
4b3a(3): mov %r14,%rbx
4b3d(2): jmp 0x16(%rip)
4b3f(2): xor %eax,%eax
4b41(3): mov %rbx,%rdi
4b44(4): or $0xffffffff,%rcx
4b48(2): REPNZ scasb rdi(%es,10),%al
4b4a(3): mov %rcx,%rax
4b4d(3): not %rax
4b50(3): add %rax,%rbx
4b53(3): mov %rbx,%rax
4b56(3): sub %r14,%rax
4b59(6): cmp $0x10c3,%rax
4b5f(2): jnbe 0x36(%rip)
4b61(7): lea 0x1302f(%rip),%rsi
4b68(5): mov $0x5,%edx
4b6d(3): mov %rbx,%rdi
4b70(5): call 0xffffe740(%rip)
4b75(2): test %eax,%eax
4b77(2): jnz 0xffffffc8(%rip)
4b79(5): mov 0x8(%rsp),%rsi
4b7e(4): lea 0x5(%rbx),%rdi
4b82(2): xor %edx,%edx
4b84(5): call 0xffffe96c(%rip)
4b89(2): test %eax,%eax
4b8b(2): jnz 0xffffffb4(%rip)
4b8d(3): mov %r12,%rbx
4b90(3): mov %r15,%r12
4b93(2): jmp 0xf(%rip)
4b95(3): mov %r12,%rbx
4b98(3): mov %r15,%r12
4b9b(7): mov $0x0,0x21c770(%rip)
4ba2(7): cmp $0x0,0x21c74b(%rip)
4ba9(6): jnz 0xfffff8b6(%rip)
4baf(7): cmp $0x0,0x21c75c(%rip)
4bb6(6): jz 0xfffff8b0(%rip)
4bbc(5): mov $0xd,%edi
4bc1(5): call 0xaaf(%rip)
4bc6(2): test %al,%al
4bc8(6): jnz 0xfffff897(%rip)
4bce(5): mov $0xe,%edi
4bd3(5): call 0xa9d(%rip)
4bd8(2): test %al,%al
4bda(2): jz 0xf(%rip)
4bdc(7): cmp $0x0,0x21c7ad(%rip)
4be3(6): jnz 0xfffff87c(%rip)
4be9(5): mov $0xc,%edi
4bee(5): call 0xa82(%rip)
4bf3(2): test %al,%al
4bf5(6): jz 0xfffff871(%rip)
4bfb(7): cmp $0x0,0x21c736(%rip)
4c02(6): jz 0xfffff85d(%rip)
4c08(5): jmp 0xfffff85e(%rip)
4c0d(3): mov %r13,%rdi
4c10(5): call 0xf150(%rip)
4c15(7): lea 0x1517c(%rip),%rsi
4c1c(3): mov %rax,%r13
4c1f(2): xor %edi,%edi
4c21(5): mov $0x5,%edx
4c26(5): call 0xffffe7ba(%rip)
4c2b(3): mov %r13,%rcx
4c2e(3): mov %rax,%rdx
4c31(2): xor %esi,%esi
4c33(2): xor %edi,%edi
4c35(2): xor %eax,%eax
4c37(5): call 0xffffeb29(%rip)
4c3c(5): jmp 0xffffeeab(%rip)
4c41(3): test %rbx,%rbx
4c44(6): jz 0xfffffa42(%rip)
4c4a(5): cmp $0x0,0x18(%rbx)
4c4f(6): jnz 0xfffff99d(%rip)
4c55(7): mov $0x0,0x21c65c(%rip)
4c5c(5): jmp 0xfffff990(%rip)
4c61(4): cmp $0x2b,(%r14)
4c65(6): jz 0x144(%rip)
4c6b(7): lea 0x11aee(%rip),%rdx
4c72(7): lea 0x21ad67(%rip),%rsi
4c79(5): mov $0x4,%ecx
4c7e(3): mov %r14,%rdi
4c81(5): call 0x74cf(%rip)
4c86(3): test %rax,%rax
4c89(6): js 0x39b(%rip)
4c8f(4): cmp $0x1,%rax
4c93(6): jz 0x4dd(%rip)
4c99(6): jle 0x2fd(%rip)
4c9f(4): cmp $0x2,%rax
4ca3(6): jz 0x4ac(%rip)
4ca9(4): cmp $0x3,%rax
4cad(2): jnz 0x44(%rip)
4caf(5): mov $0x2,%edi
4cb4(5): call 0x8a2c(%rip)
4cb9(2): test %al,%al
4cbb(2): jz 0x36(%rip)
4cbd(7): mov 0x21b37c(%rip),%rsi
4cc4(5): mov $0x2,%edx
4cc9(2): xor %edi,%edi
4ccb(5): call 0xffffe715(%rip)
4cd0(7): mov 0x21b371(%rip),%rsi
4cd7(5): mov $0x2,%edx
4cdc(2): xor %edi,%edi
4cde(7): mov %rax,0x21b35b(%rip)
4ce5(5): call 0xffffe6fb(%rip)
4cea(7): mov %rax,0x21b357(%rip)
4cf1(5): call 0xa5f(%rip)
4cf6(5): jmp 0xfffff74c(%rip)
4cfb(5): mov $0x1,%edi
4d00(5): call 0xffffe600(%rip)
4d05(3): cmp $0x1,%eax
4d08(2): sbb %eax,%eax
4d0a(3): add $0x2,%eax
4d0d(6): mov %eax,0x21c625(%rip)
4d13(5): jmp 0xffffeec4(%rip)
4d18(5): mov $0x1,%edx
4d1d(5): mov $0x20,%esi
4d22(3): mov %rax,%rdi
4d25(5): call 0xe92b(%rip)
4d2a(5): jmp 0xfffff632(%rip)
4d2f(5): mov $0x3,%esi
4d34(2): xor %edi,%edi
4d36(a): mov $0x2,0x21c5f8(%rip)
4d40(5): call 0xe8f0(%rip)
4d45(7): mov $0x1,0x21c58c(%rip)
4d4c(5): jmp 0xffffec3c(%rip)
4d51(2): test %edx,%edx
4d53(6): jz 0xfffff6ac(%rip)
4d59(a): mov $0x4,0x21c5cd(%rip)
4d63(5): jmp 0xfffff6df(%rip)
4d68(5): mov $0x1,%esi
4d6d(2): xor %edi,%edi
4d6f(5): call 0x1151(%rip)
4d74(5): jmp 0xfffffcb1(%rip)
4d79(7): lea 0x12b33(%rip),%rax
4d80(5): jmp 0xfffffc48(%rip)
4d85(7): lea 0x12d6d(%rip),%rdi
4d8c(5): call 0xffffe4c4(%rip)
4d91(3): test %rax,%rax
4d94(3): mov %rax,%r14
4d97(6): jnz 0xfffff671(%rip)
4d9d(7): lea 0x12c7c(%rip),%r14
4da4(5): jmp 0xfffffec7(%rip)
4da9(4): add $0x1,%r14
4dad(5): mov $0xa,%esi
4db2(3): mov %r14,%rdi
4db5(5): call 0xffffe69b(%rip)
4dba(3): test %rax,%rax
4dbd(3): mov %rax,%r13
4dc0(6): jz 0x1f9(%rip)
4dc6(4): lea 0x1(%rax),%r15
4dca(5): mov $0xa,%esi
4dcf(3): mov %r15,%rdi
4dd2(5): call 0xffffe67e(%rip)
4dd7(3): test %rax,%rax
4dda(6): jnz 0x3db(%rip)
4de0(5): mov $0x0,0x0(%r13)
4de5(7): mov %r14,0x21b254(%rip)
4dec(7): mov %r15,0x21b255(%rip)
4df3(5): jmp 0xfffffefe(%rip)
4df8(3): mov %rax,%rdi
4dfb(7): lea 0x21aabe(%rip),%r15
4e02(7): mov $0x3f3f,0x45(%rsp)
4e09(5): mov $0x0,0x47(%rsp)
4e0e(5): call 0xf9b2(%rip)
4e13(4): mov %ebp,0x8(%rsp)
4e17(7): mov %rax,0x21c4e2(%rip)
4e1e(5): mov %rax,0x30(%rsp)
4e23(5): mov %rbx,0x10(%rsp)
4e28(5): mov 0x28(%rsp),%rax
4e2d(3): movzx (%rax),%edx
4e30(3): cmp $0x2a,%dl
4e33(6): jz 0x18e(%rip)
4e39(3): cmp $0x3a,%dl
4e3c(6): jz 0x35d(%rip)
4e42(2): test %dl,%dl
4e44(6): jz 0x363(%rip)
4e4a(4): lea 0x1(%rax),%rdx
4e4e(5): mov %rdx,0x28(%rsp)
4e53(3): movzx (%rax),%edx
4e56(4): mov %dl,0x45(%rsp)
4e5a(4): cmp $0x0,0x1(%rax)
4e5e(6): jz 0x1b1(%rip)
4e64(4): lea 0x2(%rax),%rdx
4e68(5): mov %rdx,0x28(%rsp)
4e6d(4): movzx 0x1(%rax),%edx
4e71(4): mov %dl,0x46(%rsp)
4e75(4): lea 0x3(%rax),%rdx
4e79(5): mov %rdx,0x28(%rsp)
4e7e(4): cmp $0x3d,0x2(%rax)
4e82(6): jnz 0x18d(%rip)
4e88(7): lea 0x12b7d(%rip),%rsi
4e8f(5): lea 0x45(%rsp),%rbx
4e94(2): xor %ebp,%ebp
4e96(3): mov %rbx,%rdi
4e99(5): call 0xffffe6f7(%rip)
4e9e(2): test %eax,%eax
4ea0(6): jz 0x25f(%rip)
4ea6(4): add $0x1,%rbp
4eaa(4): mov 0x0(%r15,%rbp,8),%rsi
4eae(3): test %rsi,%rsi
4eb1(2): jnz 0xffffffe5(%rip)
4eb3(3): mov %rbx,%rdi
4eb6(4): mov 0x8(%rsp),%ebp
4eba(5): mov 0x10(%rsp),%rbx
4ebf(5): call 0xeea1(%rip)
4ec4(7): lea 0x12cd2(%rip),%rsi
4ecb(3): mov %rax,%r14
4ece(5): mov $0x5,%edx
4ed3(2): xor %edi,%edi
4ed5(5): call 0xffffe50b(%rip)
4eda(3): mov %r14,%rcx
4edd(3): mov %rax,%rdx
4ee0(2): xor %esi,%esi
4ee2(2): xor %edi,%edi
4ee4(2): xor %eax,%eax
4ee6(5): call 0xffffe87a(%rip)
4eeb(7): lea 0x14fde(%rip),%rsi
4ef2(5): mov $0x5,%edx
4ef7(2): xor %edi,%edi
4ef9(5): call 0xffffe4e7(%rip)
4efe(2): xor %esi,%esi
4f00(3): mov %rax,%rdx
4f03(2): xor %edi,%edi
4f05(2): xor %eax,%eax
4f07(5): call 0xffffe859(%rip)
4f0c(7): mov 0x21c3ed(%rip),%rdi
4f13(5): call 0xffffe96d(%rip)
4f18(7): mov 0x21c3e9(%rip),%rdi
4f1f(2): jmp 0xe(%rip)
4f21(4): mov 0x20(%rdi),%r14
4f25(5): call 0xffffe95b(%rip)
4f2a(3): mov %r14,%rdi
4f2d(3): test %rdi,%rdi
4f30(2): jnz 0xfffffff1(%rip)
4f32(7): mov $0x0,0x21c3d9(%rip)
4f39(8): cmp $0x6,0x21b18f(%rip)
4f41(6): jnz 0xfffffc61(%rip)
4f47(7): mov 0x21b18a(%rip),%rdi
4f4e(7): lea 0x12c60(%rip),%rsi
4f55(5): mov $0x6,%edx
4f5a(5): call 0xffffe356(%rip)
4f5f(2): test %eax,%eax
4f61(6): jnz 0xfffffc41(%rip)
4f67(7): mov $0x1,0x21c422(%rip)
4f6e(5): jmp 0xfffffc34(%rip)
4f73(8): cmp $0x1,0x21b0f5(%rip)
4f7b(6): jnz 0xfffff85d(%rip)
4f81(7): mov 0x21b0f0(%rip),%rax
4f88(3): cmp $0x6d,(%rax)
4f8b(6): jnz 0xfffff84d(%rip)
4f91(5): jmp 0xfffff85f(%rip)
4f96(3): test %rax,%rax
4f99(6): jnz 0xfffffd58(%rip)
4f9f(7): lea 0x12bac(%rip),%rax
4fa6(7): mov %rax,0x21b09b(%rip)
4fad(7): mov %rax,0x21b08c(%rip)
4fb4(5): jmp 0xfffffd3d(%rip)
4fb9(3): mov %r14,%r15
4fbc(5): jmp 0xfffffe29(%rip)
4fc1(5): mov $0x28,%edi
4fc6(5): lea 0x28(%rsp),%rbx
4fcb(5): call 0xf5c5(%rip)
4fd0(3): mov %rax,%r14
4fd3(7): mov 0x21c32e(%rip),%rax
4fda(5): mov $0x1,%edx
4fdf(3): mov %r14,%rcx
4fe2(3): mov %rbx,%rsi
4fe5(3): mov %r12,%rdi
4fe8(6): add $0x1,0x28(%rsp)
4fee(7): mov %r14,0x21c313(%rip)
4ff5(4): mov %rax,0x20(%r14)
4ff9(5): mov 0x30(%rsp),%rax
4ffe(4): mov %rax,0x8(%r14)
5002(5): call 0x3de(%rip)
5007(2): test %al,%al
5009(6): jnz 0xb8(%rip)
500f(4): mov 0x8(%rsp),%ebp
5013(5): mov 0x10(%rsp),%rbx
5018(5): jmp 0xfffffed3(%rip)
501d(2): xor %edi,%edi
501f(5): call 0x68f1(%rip)
5024(7): lea 0x12af6(%rip),%rdi
502b(3): mov %rax,%rdx
502e(3): mov %r14,%rsi
5031(7): lea 0x12b0a(%rip),%rbp
5038(5): call 0x7238(%rip)
503d(7): mov 0x21b27c(%rip),%rbx
5044(7): lea 0x12ae1(%rip),%rsi
504b(5): mov $0x5,%edx
5050(2): xor %edi,%edi
5052(5): call 0xffffe38e(%rip)
5057(3): mov %rbx,%rsi
505a(3): mov %rax,%rdi
505d(7): lea 0x21a97c(%rip),%rbx
5064(5): call 0xffffe50c(%rip)
5069(7): lea 0x12993(%rip),%rcx
5070(7): mov 0x21b249(%rip),%rdi
5077(4): add $0x8,%rbx
507b(2): xor %eax,%eax
507d(3): mov %rbp,%rdx
5080(5): mov $0x1,%esi
5085(5): call 0xffffe77b(%rip)
508a(3): mov (%rbx),%rcx
508d(3): test %rcx,%rcx
5090(2): jnz 0xffffffe0(%rip)
5092(7): mov 0x21b227(%rip),%rbx
5099(7): lea 0x14d68(%rip),%rsi
50a0(2): xor %edi,%edi
50a2(5): mov $0x5,%edx
50a7(5): call 0xffffe339(%rip)
50ac(3): mov %rbx,%rsi
50af(3): mov %rax,%rdi
50b2(5): call 0xffffe4be(%rip)
50b7(5): mov $0x2,%edi
50bc(5): call 0x6854(%rip)
50c1(5): mov 0x28(%rsp),%rax
50c6(4): lea 0x1(%rax),%rdx
50ca(5): mov %rdx,0x28(%rsp)
50cf(3): cmp $0x3d,(%rax)
50d2(6): jnz 0xffffff3d(%rip)
50d8(5): mov 0x30(%rsp),%rax
50dd(4): lea 0x10(%r14),%rcx
50e1(2): xor %edx,%edx
50e3(3): mov %rbx,%rsi
50e6(3): mov %r12,%rdi
50e9(4): mov %rax,0x18(%r14)
50ed(5): call 0x2f3(%rip)
50f2(2): test %al,%al
50f4(6): jnz 0xfffffd34(%rip)
50fa(5): jmp 0xffffff15(%rip)
50ff(7): lea 0x21af5a(%rip),%rax
5106(3): movsxd %ebp,%rcx
5109(5): lea 0x28(%rsp),%rsi
510e(4): shl/sal $0x4,%rcx
5112(2): xor %edx,%edx
5114(3): mov %r12,%rdi
5117(3): add %rax,%rcx
511a(5): mov 0x30(%rsp),%rax
511f(4): mov %rax,0x8(%rcx)
5123(5): call 0x2bd(%rip)
5128(2): test %al,%al
512a(6): jnz 0xfffffcfe(%rip)
5130(5): jmp 0xfffffd83(%rip)
5135(7): lea 0x129ac(%rip),%rdi
513c(5): call 0xffffe114(%rip)
5141(3): test %rax,%rax
5144(6): jnz 0xfffff7d5(%rip)
514a(5): jmp 0xfffff7e9(%rip)
514f(7): lea 0x12a23(%rip),%rax
5156(7): mov %rax,0x21aee3(%rip)
515d(7): lea 0x12a09(%rip),%rax
5164(7): mov %rax,0x21aedd(%rip)
516b(5): jmp 0xfffffb86(%rip)
5170(7): lea 0x129f3(%rip),%rax
5177(7): mov %rax,0x21aeca(%rip)
517e(7): mov %rax,0x21aebb(%rip)
5185(5): jmp 0xfffffb6c(%rip)
518a(5): mov $0xa,%esi
518f(5): call 0xffffe301(%rip)
5194(5): jmp 0xfffff8d2(%rip)
5199(4): add $0x1,%rax
519d(5): mov %rax,0x28(%rsp)
51a2(5): jmp 0xfffffc86(%rip)
51a7(4): mov 0x8(%rsp),%ebp
51ab(5): mov 0x10(%rsp),%rbx
51b0(5): jmp 0xfffffd89(%rip)
51b5(3): mov %r14,%rdi
51b8(5): call 0xeba8(%rip)
51bd(7): lea 0x12940(%rip),%rsi
51c4(3): mov %rax,%rbx
51c7(5): mov $0x5,%edx
51cc(2): xor %edi,%edi
51ce(5): call 0xffffe212(%rip)
51d3(3): mov %rbx,%rcx
51d6(3): mov %rax,%rdx
51d9(2): xor %esi,%esi
51db(5): mov $0x2,%edi
51e0(2): xor %eax,%eax
51e2(5): call 0xffffe57e(%rip)
51e7(7): lea 0x1142a(%rip),%rcx
51ee(7): lea 0x12662(%rip),%rsi
51f5(7): lea 0x14c44(%rip),%rdi
51fc(5): mov $0x403,%edx
5201(5): call 0xffffe2cf(%rip)
5206(7): lea 0x114ad(%rip),%rcx
520d(7): lea 0x12643(%rip),%rsi
5214(7): lea 0x129a4(%rip),%rdi
521b(5): mov $0x640,%edx
5220(5): call 0xffffe2b0(%rip)
5225(7): lea 0x1148e(%rip),%rcx
522c(7): lea 0x12624(%rip),%rsi
5233(7): lea 0x14c66(%rip),%rdi
523a(5): mov $0x674,%edx
523f(5): call 0xffffe291(%rip)
5244(7): mov 0x21b04d(%rip),%r8
524b(4): mov 0x30(%rsp),%esi
524f(7): lea 0x21a0ea(%rip),%rcx
5256(2): xor %edx,%edx
5258(2): mov %eax,%edi
525a(5): call 0xfc26(%rip)
525f(5): call 0xffffe1c1(%rip)
5264(5): call 0xf57c(%rip)

"_start" :
5270(2): xor %ebp,%ebp
5272(3): mov %rdx,%r9
5275(1): pop %rsi
5276(3): mov %rsp,%rdx
5279(4): and $0xfffffff0,%rsp
527d(1): push %rax
527e(1): push %rsp
527f(7): lea 0x10caa(%rip),%r8
5286(7): lea 0x10c33(%rip),%rcx
528d(7): lea 0xffffe60c(%rip),%rdi
5294(6): call 0x21ad36(%rip)
529a(1): hlt 

"deregister_tm_clones" :
52a0(7): lea 0x21afc1(%rip),%rdi
52a7(1): push %rbp
52a8(7): lea 0x21afb9(%rip),%rax
52af(3): cmp %rdi,%rax
52b2(3): mov %rsp,%rbp
52b5(2): jz 0x1b(%rip)
52b7(7): mov 0x21ad0a(%rip),%rax
52be(3): test %rax,%rax
52c1(2): jz 0xf(%rip)
52c3(1): pop %rbp
52c4(2): jmp %rax
52c6(a): nop 0x0(%rax,%rax,1)
52d0(1): pop %rbp
52d1(1): ret near (%rsp)

"register_tm_clones" :
52e0(7): lea 0x21af81(%rip),%rdi
52e7(7): lea 0x21af7a(%rip),%rsi
52ee(1): push %rbp
52ef(3): sub %rdi,%rsi
52f2(3): mov %rsp,%rbp
52f5(4): sar $0x3,%rsi
52f9(3): mov %rsi,%rax
52fc(4): shr $0x3f,%rax
5300(3): add %rax,%rsi
5303(3): sar $0x1,%rsi
5306(2): jz 0x1a(%rip)
5308(7): mov 0x21acd9(%rip),%rax
530f(3): test %rax,%rax
5312(2): jz 0xe(%rip)
5314(1): pop %rbp
5315(2): jmp %rax
5317(9): nop 0x0(%rax,%rax,1)
5320(1): pop %rbp
5321(1): ret near (%rsp)

"__do_global_dtors_aux" :
5330(7): cmp $0x0,0x21af91(%rip)
5337(2): jnz 0x31(%rip)
5339(8): cmp $0x0,0x21acaf(%rip)
5341(1): push %rbp
5342(3): mov %rsp,%rbp
5345(2): jz 0xe(%rip)
5347(7): mov 0x21acba(%rip),%rdi
534e(5): call 0xffffe542(%rip)
5353(5): call 0xffffff4d(%rip)
5358(7): mov $0x1,0x21af69(%rip)
535f(1): pop %rbp
5360(1): ret near (%rsp)
5361(7): nop 0x0(%rax)
5368(2): REP ret near (%rsp)

"frame_dummy" :
5370(1): push %rbp
5371(3): mov %rsp,%rbp
5374(1): pop %rbp
5375(5): jmp 0xffffff6b(%rip)

"dev_ino_hash" :
5380(3): mov (%rdi),%rax
5383(2): xor %edx,%edx
5385(3): div %rsi,%rax
5388(3): mov %rdx,%rax
538b(1): ret near (%rsp)

"dev_ino_compare" :
5390(2): xor %eax,%eax
5392(3): mov (%rsi),%rdx
5395(3): cmp %rdx,(%rdi)
5398(2): jz 0x8(%rip)
539a(2): REP ret near (%rsp)
539c(4): nop 0x0(%rax)
53a0(4): mov 0x8(%rsi),%rax
53a4(4): cmp %rax,0x8(%rdi)
53a8(3): setz %al
53ab(1): ret near (%rsp)

"sighandler" :
53b0(6): mov 0x21be62(%rip),%eax
53b6(2): test %eax,%eax
53b8(2): jnz 0x8(%rip)
53ba(6): mov %edi,0x21be58(%rip)
53c0(2): REP ret near (%rsp)

"get_funky_string" :
53e0(3): mov (%rsi),%r8
53e3(3): mov (%rdi),%r9
53e6(7): lea 0x10b93(%rip),%r11
53ed(2): push %r15
53ef(3): xor %r10d,%r10d
53f2(2): push %r14
53f4(5): mov $0x1,%eax
53f9(2): push %r13
53fb(2): push %r12
53fd(3): mov %edx,%r12d
5400(1): push %rbp
5401(a): mov $0x35465847065542656,%rbp
540b(1): push %rbx
540c(3): mov %rcx,%rbx
540f(4): movzx (%r8),%ecx
5413(3): cmp $0x3d,%cl
5416(2): jz 0x4c(%rip)
5418(8): nop 0x0(%rax,%rax,1)
5420(6): jle 0xd8(%rip)
5426(3): cmp $0x5c,%cl
5429(2): jz 0x5f(%rip)
542b(3): cmp $0x5e,%cl
542e(2): jnz 0x42(%rip)
5430(5): movzx 0x1(%r8),%ecx
5435(4): lea 0x1(%r8),%r14
5439(4): lea 0xffffffc0(%rcx),%r13d
543d(4): cmp $0x3e,%r13b
5441(6): jnbe 0x97(%rip)
5447(4): add $0x2,%r8
544b(3): and $0x1f,%ecx
544e(3): mov %cl,(%r9)
5451(4): movzx (%r8),%ecx
5455(4): add $0x1,%r10
5459(4): add $0x1,%r9
545d(3): cmp $0x3d,%cl
5460(2): jnz 0xffffffc0(%rip)
5462(3): test %r12b,%r12b
5465(2): jz 0xb(%rip)
5467(2): mov %edx,%eax
5469(3): mov %r8,%r14
546c(2): jmp 0x73(%rip)
546e(2): nop 
5470(3): mov %cl,(%r9)
5473(4): add $0x1,%r8
5477(4): add $0x1,%r10
547b(4): add $0x1,%r9
547f(2): jmp 0xffffff90(%rip)
5481(7): nop 0x0(%rax)
5488(5): movzx 0x1(%r8),%ecx
548d(4): add $0x2,%r8
5491(3): cmp $0x78,%cl
5494(2): jnbe 0xffffffba(%rip)
5496(4): movzx %cl,%r13d
549a(4): movsxd 0x0(%r11,%r13,4),%r13
549e(3): add %r11,%r13
54a1(3): jmp %r13
54a4(4): nop 0x0(%rax)
54a8(4): movzx (%r8),%r13d
54ac(3): sub $0x30,%ecx
54af(4): lea 0xffffffd0(%r13),%r14d
54b3(4): cmp $0x7,%r14b
54b7(2): jnbe 0xffffff97(%rip)
54b9(4): add $0x1,%r8
54bd(5): lea 0xffffffd0(%r13,%rcx,8),%ecx
54c2(4): movzx (%r8),%r13d
54c6(4): lea 0xffffffd0(%r13),%r14d
54ca(4): cmp $0x7,%r14b
54ce(2): jbe 0xffffffeb(%rip)
54d0(5): jmp 0xffffff7e(%rip)
54d5(3): nop (%rax)
54d8(3): cmp $0x3f,%cl
54db(2): jz 0x35(%rip)
54dd(2): xor %eax,%eax
54df(3): mov %r9,(%rdi)
54e2(3): mov %r14,(%rsi)
54e5(3): mov %r10,(%rbx)
54e8(1): pop %rbx
54e9(1): pop %rbp
54ea(2): pop %r12
54ec(2): pop %r13
54ee(2): pop %r14
54f0(2): pop %r15
54f2(1): ret near (%rsp)
54f3(5): nop 0x0(%rax,%rax,1)
54f8(2): test %cl,%cl
54fa(2): jz 0xb(%rip)
54fc(3): cmp $0x3a,%cl
54ff(6): jnz 0xffffff71(%rip)
5505(3): mov %r8,%r14
5508(5): mov $0x1,%eax
550d(2): jmp 0xffffffd2(%rip)
550f(1): nop 
5510(4): mov $0x7f,(%r9)
5514(4): add $0x1,%r10
5518(4): add $0x1,%r9
551c(3): mov %r14,%r8
551f(5): jmp 0xfffffef0(%rip)
5524(4): nop 0x0(%rax)
5528(5): mov $0x1b,%ecx
552d(5): jmp 0xffffff21(%rip)
5532(6): nop 0x0(%rax,%rax,1)
5538(3): mov %r8,%r14
553b(2): xor %eax,%eax
553d(2): jmp 0xffffffa2(%rip)
553f(1): nop 
5540(3): xor %r14d,%r14d
5543(5): nop 0x0(%rax,%rax,1)
5548(4): movzx (%r8),%r13d
554c(4): lea 0xffffffd0(%r13),%ecx
5550(3): cmp $0x36,%cl
5553(2): jnbe 0x45(%rip)
5555(3): mov %rax,%r15
5558(3): shl/sal %cl,%r15
555b(7): test $0x7e0000,%r15d
5562(6): jnz 0xde(%rip)
5568(3): test %rbp,%r15
556b(6): jnz 0xed(%rip)
5571(7): test $0x3ff,%r15d
5578(2): jz 0x20(%rip)
557a(4): add $0x1,%r8
557e(4): shl/sal $0x4,%r14d
5582(5): lea 0xffffffd0(%r13,%r14,1),%r14d
5587(4): movzx (%r8),%r13d
558b(4): lea 0xffffffd0(%r13),%ecx
558f(3): cmp $0x36,%cl
5592(2): jbe 0xffffffc3(%rip)
5594(4): nop 0x0(%rax)
5598(3): mov %r14b,(%r9)
559b(4): add $0x1,%r10
559f(4): add $0x1,%r9
55a3(5): jmp 0xfffffe6c(%rip)
55a8(8): nop 0x0(%rax,%rax,1)
55b0(5): mov $0x20,%ecx
55b5(5): jmp 0xfffffe99(%rip)
55ba(6): nop 0x0(%rax,%rax,1)
55c0(5): mov $0x7,%ecx
55c5(5): jmp 0xfffffe89(%rip)
55ca(6): nop 0x0(%rax,%rax,1)
55d0(5): mov $0xb,%ecx
55d5(5): jmp 0xfffffe79(%rip)
55da(6): nop 0x0(%rax,%rax,1)
55e0(5): mov $0x7f,%ecx
55e5(5): jmp 0xfffffe69(%rip)
55ea(6): nop 0x0(%rax,%rax,1)
55f0(5): mov $0x8,%ecx
55f5(5): jmp 0xfffffe59(%rip)
55fa(6): nop 0x0(%rax,%rax,1)
5600(5): mov $0xc,%ecx
5605(5): jmp 0xfffffe49(%rip)
560a(6): nop 0x0(%rax,%rax,1)
5610(5): mov $0xa,%ecx
5615(5): jmp 0xfffffe39(%rip)
561a(6): nop 0x0(%rax,%rax,1)
5620(5): mov $0xd,%ecx
5625(5): jmp 0xfffffe29(%rip)
562a(6): nop 0x0(%rax,%rax,1)
5630(5): mov $0x9,%ecx
5635(5): jmp 0xfffffe19(%rip)
563a(6): nop 0x0(%rax,%rax,1)
5640(4): shl/sal $0x4,%r14d
5644(4): add $0x1,%r8
5648(5): lea 0xffffffc9(%r13,%r14,1),%r14d
564d(5): jmp 0xfffffefb(%rip)
5652(6): nop 0x0(%rax,%rax,1)
5658(4): shl/sal $0x4,%r14d
565c(4): add $0x1,%r8
5660(5): lea 0xffffffa9(%r13,%r14,1),%r14d
5665(5): jmp 0xfffffee3(%rip)

"is_colored" :
5670(7): lea 0x21a9e9(%rip),%rax
5677(2): mov %edi,%edi
5679(4): shl/sal $0x4,%rdi
567d(3): add %rax,%rdi
5680(2): xor %eax,%eax
5682(3): mov (%rdi),%rdx
5685(3): test %rdx,%rdx
5688(2): jz 0x2f(%rip)
568a(4): cmp $0x1,%rdx
568e(4): mov 0x8(%rdi),%rsi
5692(2): jz 0x2e(%rip)
5694(4): cmp $0x2,%rdx
5698(5): mov $0x1,%eax
569d(2): jnz 0x1a(%rip)
569f(7): lea 0x1219e(%rip),%rdi
56a6(5): mov $0x2,%ecx
56ab(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
56ad(3): setnbe %al
56b0(2): sbb $0x0,%al
56b2(2): test %al,%al
56b4(3): setnz %al
56b7(2): REP ret near (%rsp)
56b9(7): nop 0x0(%rax)
56c0(3): cmp $0x30,(%rsi)
56c3(3): setnz %al
56c6(1): ret near (%rsp)

"set_line_length" :
56d0(4): sub $0x18,%rsp
56d4(7): lea 0x121d8(%rip),%r8
56db(2): xor %edx,%edx
56dd(2): xor %esi,%esi
56df(3): mov %rsp,%rcx
56e2(9): mov $0x28,%rax
56eb(5): mov %rax,0x8(%rsp)
56f0(2): xor %eax,%eax
56f2(5): call 0xf83e(%rip)
56f7(2): test %eax,%eax
56f9(2): jz 0x3f(%rip)
56fb(3): cmp $0x1,%eax
56fe(2): jz 0x22(%rip)
5700(2): xor %eax,%eax
5702(5): mov 0x8(%rsp),%rdx
5707(9): xor $0x28,%rdx
5710(2): jnz 0x3a(%rip)
5712(4): add $0x18,%rsp
5716(1): ret near (%rsp)
5717(9): nop 0x0(%rax,%rax,1)
5720(b): mov $0xffffffff,0x21bb85(%rip)
572b(5): mov $0x1,%eax
5730(2): jmp 0xffffffd2(%rip)
5732(6): nop 0x0(%rax,%rax,1)
5738(4): mov (%rsp),%rax
573c(7): mov %rax,0x21bb6d(%rip)
5743(5): mov $0x1,%eax
5748(2): jmp 0xffffffba(%rip)
574a(5): call 0xffffdcd6(%rip)

"abformat_init" :
5750(2): push %r15
5752(2): push %r14
5754(2): xor %esi,%esi
5756(2): push %r13
5758(2): push %r12
575a(1): push %rbp
575b(1): push %rbx
575c(7): sub $0x658,%rsp
5763(5): lea 0x30(%rsp),%rdi
5768(9): mov $0x28,%rax
5771(8): mov %rax,0x648(%rsp)
5779(2): xor %eax,%eax
577b(5): mov %rdi,0x10(%rsp)
5780(7): lea 0x21a8b9(%rip),%rax
5787(4): mov 0x0(%rax,%rsi,1),%rax
578b(3): movzx (%rax),%edx
578e(2): test %dl,%dl
5790(2): jz 0x1b(%rip)
5792(6): nop 0x0(%rax,%rax,1)
5798(3): cmp $0x25,%dl
579b(4): movzx 0x1(%rax),%ecx
579f(2): jz 0x11(%rip)
57a1(2): mov %ecx,%edx
57a3(4): add $0x1,%rax
57a7(2): test %dl,%dl
57a9(2): jnz 0xffffffef(%rip)
57ab(2): xor %eax,%eax
57ad(2): jmp 0x11(%rip)
57af(1): nop 
57b0(3): cmp $0x25,%cl
57b3(6): jz 0xdd(%rip)
57b9(3): cmp $0x62,%cl
57bc(2): jnz 0xffffffe5(%rip)
57be(4): mov %rax,0x0(%rdi,%rsi,1)
57c2(4): add $0x8,%rsi
57c6(4): cmp $0x10,%rsi
57ca(2): jnz 0xffffffb6(%rip)
57cc(6): cmp $0x0,0x30(%rsp)
57d2(6): mov $0xc,%r13d
57d8(6): jz 0x109(%rip)
57de(5): lea 0x40(%rsp),%rax
57e3(5): mov %rax,0x8(%rsp)
57e8(5): lea 0x28(%rsp),%rax
57ed(4): mov %rax,(%rsp)
57f1(5): mov 0x8(%rsp),%r15
57f6(6): mov $0x2000e,%r12d
57fc(2): xor %ebp,%ebp
57fe(7): lea 0x600(%r15),%r14
5805(3): nop (%rax)
5808(3): mov %r12d,%edi
580b(5): mov %r13,0x28(%rsp)
5810(5): call 0xffffde70(%rip)
5815(5): mov $0x25,%esi
581a(3): mov %rax,%rdi
581d(3): mov %rax,%rbx
5820(5): call 0xffffdc30(%rip)
5825(3): test %rax,%rax
5828(6): jnz 0x90(%rip)
582e(5): call 0xffffe032(%rip)
5833(3): movzx (%rbx),%edx
5836(3): mov (%rax),%rax
5839(3): xor %r9d,%r9d
583c(4): mov (%rsp),%rcx
5840(3): mov %r15,%rsi
5843(3): mov %rbx,%rdi
5846(5): movzx 0x0(%rax,%rdx,2),%r8d
584b(5): mov $0x80,%edx
5850(5): shr $0xb,%r8w
5855(4): and $0x1,%r8d
5859(5): call 0xa397(%rip)
585e(4): cmp $0x7f,%rax
5862(2): jnbe 0x56(%rip)
5864(5): mov 0x28(%rsp),%rax
5869(3): cmp %rax,%rbp
586c(4): cmovnae %rax,%rbp
5870(4): sub $0xffffff80,%r15
5874(4): add $0x1,%r12d
5878(3): cmp %r14,%r15
587b(2): jnz 0xffffff8d(%rip)
587d(3): cmp %rbp,%r13
5880(2): jbe 0x6f(%rip)
5882(3): mov %rbp,%r13
5885(5): jmp 0xffffff6c(%rip)
588a(6): nop 0x0(%rax,%rax,1)
5890(4): movzx 0x2(%rax),%edx
5894(4): add $0x1,%rax
5898(5): jmp 0xffffff0b(%rip)
589d(4): mov (%rsp),%r13
58a1(4): add $0x8,%r13
58a5(4): cmp $0x10,%r13
58a9(2): jnz 0x4e(%rip)
58ab(7): mov $0x1,0x21ab16(%rip)
58b2(6): nop 0x0(%rax,%rax,1)
58b8(8): mov 0x648(%rsp),%rax
58c0(9): xor $0x28,%rax
58c9(6): jnz 0xf3(%rip)
58cf(7): add $0x658,%rsp
58d6(1): pop %rbx
58d7(1): pop %rbp
58d8(2): pop %r12
58da(2): pop %r13
58dc(2): pop %r14
58de(2): pop %r15
58e0(1): ret near (%rsp)
58e1(6): cmp $0x0,0x38(%rsp)
58e7(6): jnz 0xfffffef7(%rip)
58ed(2): jmp 0xffffffcb(%rip)
58ef(3): xor %r13d,%r13d
58f2(5): mov %r15,0x18(%rsp)
58f7(7): lea 0x21a742(%rip),%rax
58fe(4): mov %r13,(%rsp)
5902(5): mov 0x8(%rsp),%rbx
5907(7): imul %r13,$0xc0,%r10
590e(4): mov 0x0(%rax,%r13,1),%r12
5912(5): mov 0x10(%rsp),%rax
5917(4): mov 0x0(%rax,%r13,1),%r14
591b(7): lea 0x21aabe(%rip),%rax
5922(4): lea 0x0(%rax,%r10,1),%r15
5926(3): mov %r14,%rbp
5929(3): mov %r14,%r13
592c(5): mov 0x18(%rsp),%r14
5931(3): sub %r12,%rbp
5934(2): jmp 0x68(%rip)
5936(a): nop 0x0(%rax,%rax,1)
5940(7): cmp $0x80,%rbp
5947(6): jnle 0xffffff71(%rip)
594d(4): lea 0x2(%r13),%rax
5951(4): sub $0x8,%rsp
5955(7): lea 0x11eeb(%rip),%r8
595c(3): mov %ebp,%r9d
595f(7): mov $0xffffffff,%rcx
5966(5): mov $0x1,%edx
596b(1): push %rax
596c(1): push %rbx
596d(5): mov $0x80,%esi
5972(2): push %r12
5974(3): mov %r15,%rdi
5977(2): xor %eax,%eax
5979(5): call 0xffffd8f7(%rip)
597e(4): add $0x20,%rsp
5982(3): cmp $0x7f,%eax
5985(6): jnbe 0xffffff33(%rip)
598b(4): sub $0xffffff80,%rbx
598f(4): sub $0xffffff80,%r15
5993(3): cmp %r14,%rbx
5996(6): jz 0xffffff07(%rip)
599c(3): test %r13,%r13
599f(2): jnz 0xffffffa1(%rip)
59a1(7): lea 0x145e4(%rip),%rdx
59a8(3): mov %r12,%rcx
59ab(5): mov $0x80,%esi
59b0(3): mov %r15,%rdi
59b3(2): xor %eax,%eax
59b5(5): call 0xffffdacb(%rip)
59ba(2): jmp 0xffffffc8(%rip)
59bc(5): call 0xffffda64(%rip)

"queue_directory" :
59d0(2): push %r13
59d2(2): push %r12
59d4(3): mov %rsi,%r12
59d7(1): push %rbp
59d8(1): push %rbx
59d9(3): mov %rdi,%rbp
59dc(5): mov $0x20,%edi
59e1(3): mov %edx,%r13d
59e4(4): sub $0x8,%rsp
59e8(5): call 0xeba8(%rip)
59ed(3): mov %rax,%rbx
59f0(2): xor %eax,%eax
59f2(3): test %r12,%r12
59f5(2): jz 0xa(%rip)
59f7(3): mov %r12,%rdi
59fa(5): call 0xedc6(%rip)
59ff(4): mov %rax,0x8(%rbx)
5a03(2): xor %eax,%eax
5a05(3): test %rbp,%rbp
5a08(2): jz 0xa(%rip)
5a0a(3): mov %rbp,%rdi
5a0d(5): call 0xedb3(%rip)
5a12(3): mov %rax,(%rbx)
5a15(7): mov 0x21b964(%rip),%rax
5a1c(4): mov %r13b,0x10(%rbx)
5a20(7): mov %rbx,0x21b959(%rip)
5a27(4): mov %rax,0x18(%rbx)
5a2b(4): add $0x8,%rsp
5a2f(1): pop %rbx
5a30(1): pop %rbp
5a31(2): pop %r12
5a33(2): pop %r13
5a35(1): ret near (%rsp)

"strcmp_size" :
5a40(4): mov 0x48(%rsi),%rax
5a44(4): cmp %rax,0x48(%rdi)
5a48(2): jnle 0x28(%rip)
5a4a(2): jl 0x16(%rip)
5a4c(3): mov (%rsi),%rsi
5a4f(3): mov (%rdi),%rdi
5a52(5): jmp 0xffffdb3e(%rip)
5a57(9): nop 0x0(%rax,%rax,1)
5a60(5): mov $0x1,%eax
5a65(1): ret near (%rsp)
5a66(a): nop 0x0(%rax,%rax,1)
5a70(5): mov $0xffffffff,%eax
5a75(1): ret near (%rsp)

"rev_strcmp_size" :
5a80(4): mov 0x48(%rdi),%rdx
5a84(4): cmp %rdx,0x48(%rsi)
5a88(3): mov %rsi,%rax
5a8b(2): jnle 0x25(%rip)
5a8d(2): jl 0x13(%rip)
5a8f(3): mov (%rdi),%rsi
5a92(3): mov (%rax),%rdi
5a95(5): jmp 0xffffdafb(%rip)
5a9a(6): nop 0x0(%rax,%rax,1)
5aa0(5): mov $0x1,%eax
5aa5(1): ret near (%rsp)
5aa6(a): nop 0x0(%rax,%rax,1)
5ab0(5): mov $0xffffffff,%eax
5ab5(1): ret near (%rsp)

"strcmp_name" :
5ac0(3): mov (%rsi),%rsi
5ac3(3): mov (%rdi),%rdi
5ac6(5): jmp 0xffffdaca(%rip)

"rev_strcmp_name" :
5ad0(3): mov %rsi,%rax
5ad3(3): mov (%rdi),%rsi
5ad6(3): mov (%rax),%rdi
5ad9(5): jmp 0xffffdab7(%rip)

"needs_quoting" :
5ae0(1): push %rbp
5ae1(1): push %rbx
5ae2(3): mov %rdi,%rbx
5ae5(3): mov %rbx,%rdx
5ae8(7): mov $0xffffffff,%rcx
5aef(5): mov $0x2,%esi
5af4(4): sub $0x18,%rsp
5af8(7): mov 0x21b7d1(%rip),%r8
5aff(5): lea 0x6(%rsp),%rdi
5b04(9): mov $0x28,%rax
5b0d(5): mov %rax,0x8(%rsp)
5b12(2): xor %eax,%eax
5b14(5): call 0xdbcc(%rip)
5b19(5): movzx 0x6(%rsp),%edx
5b1e(2): cmp %dl,(%rbx)
5b20(2): jz 0x20(%rip)
5b22(5): mov $0x1,%eax
5b27(5): mov 0x8(%rsp),%rcx
5b2c(9): xor $0x28,%rcx
5b35(2): jnz 0x1e(%rip)
5b37(4): add $0x18,%rsp
5b3b(1): pop %rbx
5b3c(1): pop %rbp
5b3d(1): ret near (%rsp)
5b3e(2): nop 
5b40(3): mov %rax,%rbp
5b43(3): mov %rbx,%rdi
5b46(5): call 0xffffd8ba(%rip)
5b4b(3): cmp %rbp,%rax
5b4e(3): setnz %al
5b51(2): jmp 0xffffffd6(%rip)
5b53(5): call 0xffffd8cd(%rip)

"file_escape" :
5b60(2): push %r14
5b62(2): push %r13
5b64(2): push %r12
5b66(1): push %rbp
5b67(3): mov %esi,%r12d
5b6a(1): push %rbx
5b6b(3): mov %rdi,%rbx
5b6e(5): call 0xffffd892(%rip)
5b73(4): lea 0x1(%rax),%rcx
5b77(5): mov $0x3,%eax
5b7c(3): mul %rax,%rcx,%rdx
5b7f(6): jo 0xa3(%rip)
5b85(2): xor %esi,%esi
5b87(3): test %rax,%rax
5b8a(6): js 0xa2(%rip)
5b90(3): test %rsi,%rsi
5b93(6): jnz 0x99(%rip)
5b99(4): lea 0x0(%rcx,%rcx,2),%rdi
5b9d(7): lea 0x21b43c(%rip),%r14
5ba4(5): call 0xe9ec(%rip)
5ba9(3): mov %rax,%r13
5bac(3): mov %rax,%rbp
5baf(3): movzx (%rbx),%eax
5bb2(2): test %al,%al
5bb4(2): jz 0x2a(%rip)
5bb6(4): add $0x1,%rbx
5bba(2): cmp $0x2f,%al
5bbc(2): jnz 0x7(%rip)
5bbe(3): test %r12b,%r12b
5bc1(2): jnz 0x57(%rip)
5bc3(3): movzx %al,%edx
5bc6(5): cmp $0x0,0x0(%r14,%rdx,1)
5bcb(3): mov %rdx,%r8
5bce(2): jz 0x22(%rip)
5bd0(3): mov %al,0x0(%rbp)
5bd3(3): movzx (%rbx),%eax
5bd6(4): add $0x1,%rbp
5bda(2): test %al,%al
5bdc(2): jnz 0xffffffda(%rip)
5bde(4): mov $0x0,0x0(%rbp)
5be2(3): mov %r13,%rax
5be5(1): pop %rbx
5be6(1): pop %rbp
5be7(2): pop %r12
5be9(2): pop %r13
5beb(2): pop %r14
5bed(1): ret near (%rsp)
5bee(2): nop 
5bf0(7): lea 0x11c59(%rip),%rcx
5bf7(3): mov %rbp,%rdi
5bfa(7): mov $0xffffffff,%rdx
5c01(5): mov $0x1,%esi
5c06(2): xor %eax,%eax
5c08(4): add $0x3,%rbp
5c0c(5): call 0xffffdc64(%rip)
5c11(2): jmp 0xffffff9e(%rip)
5c13(5): nop 0x0(%rax,%rax,1)
5c18(4): mov $0x2f,0x0(%rbp)
5c1c(4): add $0x1,%rbp
5c20(2): jmp 0xffffff8f(%rip)
5c22(5): mov $0x1,%esi
5c27(5): jmp 0xffffff60(%rip)
5c2c(5): call 0xebb4(%rip)

"sort_files" :
5c40(1): push %rbx
5c41(7): mov 0x21b768(%rip),%rbx
5c48(3): mov %rbx,%rax
5c4b(3): shr $0x1,%rax
5c4e(3): add %rbx,%rax
5c51(7): cmp 0x21b740(%rip),%rax
5c58(6): jnbe 0xf8(%rip)
5c5e(3): test %rbx,%rbx
5c61(2): jz 0x31(%rip)
5c63(4): lea 0x0(%rbx,%rbx,4),%rcx
5c67(7): mov 0x21b752(%rip),%rax
5c6e(7): mov 0x21b72b(%rip),%rdx
5c75(4): lea 0x0(%rcx,%rcx,4),%rcx
5c79(4): lea 0x0(%rax,%rcx,8),%rcx
5c7d(3): nop (%rax)
5c80(3): mov %rax,(%rdx)
5c83(6): add $0xc8,%rax
5c89(4): add $0x8,%rdx
5c8d(3): cmp %rax,%rcx
5c90(2): jnz 0xfffffff0(%rip)
5c92(7): cmp $0xff,0x21b697(%rip)
5c99(6): jz 0xb3(%rip)
5c9f(7): lea 0x21a65a(%rip),%rdi
5ca6(5): call 0xffffd8ba(%rip)
5cab(2): test %eax,%eax
5cad(6): mov 0x21b67d(%rip),%ecx
5cb3(2): jz 0x4d(%rip)
5cb5(3): cmp $0x3,%ecx
5cb8(6): jz 0xef(%rip)
5cbe(7): mov 0x21b6eb(%rip),%rsi
5cc5(7): mov 0x21b6d4(%rip),%rdi
5ccc(3): test %rsi,%rsi
5ccf(2): jz 0x24(%rip)
5cd1(7): mov 0x21b6e8(%rip),%rdx
5cd8(4): lea 0x0(%rdi,%rsi,8),%r8
5cdc(3): mov %rdi,%rax
5cdf(1): nop 
5ce0(3): mov %rdx,(%rax)
5ce3(4): add $0x8,%rax
5ce7(7): add $0xc8,%rdx
5cee(3): cmp %r8,%rax
5cf1(2): jnz 0xffffffef(%rip)
5cf3(5): mov $0x1,%eax
5cf8(2): jmp 0x16(%rip)
5cfa(6): nop 0x0(%rax,%rax,1)
5d00(7): mov 0x21b6a9(%rip),%rsi
5d07(7): mov 0x21b692(%rip),%rdi
5d0e(3): cmp $0x4,%ecx
5d11(5): mov $0x0,%edx
5d16(7): cmove 0x21b617(%rip),%edx
5d1d(2): cwde 
5d1f(8): movzx 0x21b5cd(%rip),%r8d
5d27(2): add %ecx,%edx
5d29(4): lea 0x0(%rax,%rdx,2),%rdx
5d2d(7): movzx 0x21b5fb(%rip),%eax
5d34(4): lea 0x0(%rax,%rdx,2),%rax
5d38(4): lea 0x0(%r8,%rax,2),%rdx
5d3c(7): lea 0x21931d(%rip),%rax
5d43(4): mov 0x0(%rax,%rdx,8),%rdx
5d47(5): call 0xa749(%rip)
5d4c(1): pop %rbx
5d4d(1): ret near (%rsp)
5d4e(2): nop 
5d50(7): mov 0x21b649(%rip),%rdi
5d57(5): call 0xffffdb29(%rip)
5d5c(5): mov $0x18,%edx
5d61(2): xor %ecx,%ecx
5d63(3): mov %rdx,%rax
5d66(3): mul %rax,%rbx,%rdx
5d69(2): jo 0x5d(%rip)
5d6b(3): test %rax,%rax
5d6e(5): mov $0x1,%eax
5d73(4): cmovs %rax,%rcx
5d77(3): test %rcx,%rcx
5d7a(2): jnz 0x53(%rip)
5d7c(4): lea 0x0(%rbx,%rbx,2),%rdi
5d80(4): shl/sal $0x3,%rdi
5d84(5): call 0xe80c(%rip)
5d89(7): mov 0x21b620(%rip),%rbx
5d90(7): mov %rax,0x21b609(%rip)
5d97(4): lea 0x0(%rbx,%rbx,2),%rax
5d9b(7): mov %rax,0x21b5f6(%rip)
5da2(5): jmp 0xfffffebc(%rip)
5da7(7): lea 0x108fa(%rip),%rcx
5dae(7): lea 0x11aa2(%rip),%rsi
5db5(7): lea 0x11ab6(%rip),%rdi
5dbc(5): mov $0xeea,%edx
5dc1(5): call 0xffffd70f(%rip)
5dc6(5): mov $0x1,%ecx
5dcb(2): jmp 0xffffffa0(%rip)
5dcd(5): call 0xea13(%rip)

"xstrcoll" :
5de0(1): push %rbp
5de1(1): push %rbx
5de2(3): mov %rsi,%rbp
5de5(3): mov %rdi,%rbx
5de8(4): sub $0x8,%rsp
5dec(5): call 0xffffd4b4(%rip)
5df1(6): mov $0x0,(%rax)
5df7(4): add $0x8,%rsp
5dfb(3): mov %rbp,%rsi
5dfe(3): mov %rbx,%rdi
5e01(1): pop %rbx
5e02(1): pop %rbp
5e03(5): jmp 0xffffd89d(%rip)

"xstrcoll_size" :
5e10(4): mov 0x48(%rsi),%rax
5e14(4): cmp %rax,0x48(%rdi)
5e18(2): jnle 0x18(%rip)
5e1a(5): mov $0x1,%eax
5e1f(2): jnl 0x9(%rip)
5e21(2): REP ret near (%rsp)
5e23(5): nop 0x0(%rax,%rax,1)
5e28(3): mov (%rsi),%rsi
5e2b(3): mov (%rdi),%rdi
5e2e(2): jmp 0xffffffb2(%rip)
5e30(5): mov $0xffffffff,%eax
5e35(1): ret near (%rsp)

"rev_xstrcoll_size" :
5e40(4): mov 0x48(%rdi),%rax
5e44(4): cmp %rax,0x48(%rsi)
5e48(3): mov %rsi,%rdx
5e4b(2): jnle 0x25(%rip)
5e4d(5): mov $0x1,%eax
5e52(2): jnl 0xe(%rip)
5e54(2): REP ret near (%rsp)
5e56(a): nop 0x0(%rax,%rax,1)
5e60(3): mov (%rdi),%rsi
5e63(3): mov (%rdx),%rdi
5e66(5): jmp 0xffffff7a(%rip)
5e6b(5): nop 0x0(%rax,%rax,1)
5e70(5): mov $0xffffffff,%eax
5e75(1): ret near (%rsp)

"xstrcoll_name" :
5e80(3): mov (%rsi),%rsi
5e83(3): mov (%rdi),%rdi
5e86(5): jmp 0xffffff5a(%rip)

"rev_xstrcoll_name" :
5e90(3): mov %rsi,%rax
5e93(3): mov (%rdi),%rsi
5e96(3): mov (%rax),%rdi
5e99(5): jmp 0xffffff47(%rip)

"rev_xstrcoll_version" :
5ea0(3): mov %rsi,%rax
5ea3(3): mov (%rdi),%rsi
5ea6(3): mov (%rax),%rdi
5ea9(5): jmp 0x73a7(%rip)

"xstrcoll_version" :
5eb0(3): mov (%rsi),%rsi
5eb3(3): mov (%rdi),%rdi
5eb6(5): jmp 0x739a(%rip)

"extract_dirs_from_files" :
5ec0(2): push %r15
5ec2(2): push %r14
5ec4(3): mov %rdi,%r14
5ec7(2): push %r13
5ec9(2): push %r12
5ecb(4): movzx %sil,%r13d
5ecf(1): push %rbp
5ed0(1): push %rbx
5ed1(4): sub $0x8,%rsp
5ed5(3): test %rdi,%rdi
5ed8(2): jz 0x18(%rip)
5eda(8): cmp $0x0,0x21b4e6(%rip)
5ee2(2): jz 0xe(%rip)
5ee4(3): mov %rdi,%rsi
5ee7(2): xor %edx,%edx
5ee9(2): xor %edi,%edi
5eeb(5): call 0xfffffae5(%rip)
5ef0(7): mov 0x21b4b9(%rip),%rbx
5ef7(8): lea 0xfffffff8(,%rbx,8),%r12
5eff(4): sub $0x1,%rbx
5f03(4): cmp $0xffffffff,%rbx
5f07(2): jz 0x32(%rip)
5f09(7): nop 0x0(%rax)
5f10(7): mov 0x21b489(%rip),%rax
5f17(4): mov 0x0(%rax,%r12,1),%rbp
5f1b(6): mov 0xa8(%rbp),%eax
5f21(3): cmp $0x3,%eax
5f24(2): jz 0x6c(%rip)
5f26(3): cmp $0x9,%eax
5f29(2): jz 0x67(%rip)
5f2b(4): sub $0x1,%rbx
5f2f(4): sub $0x8,%r12
5f33(4): cmp $0xffffffff,%rbx
5f37(2): jnz 0xffffffd9(%rip)
5f39(7): mov 0x21b470(%rip),%rdx
5f40(3): test %rdx,%rdx
5f43(2): jz 0x35(%rip)
5f45(7): mov 0x21b454(%rip),%rsi
5f4c(4): lea 0x0(%rsi,%rdx,8),%rdi
5f50(3): mov %rsi,%rax
5f53(2): xor %edx,%edx
5f55(3): nop (%rax)
5f58(3): mov (%rax),%rcx
5f5b(7): cmp $0x9,0xa8(%rcx)
5f62(4): mov %rcx,0x0(%rsi,%rdx,8)
5f66(3): setnz %cl
5f69(4): add $0x8,%rax
5f6d(3): movzx %cl,%ecx
5f70(3): add %rcx,%rdx
5f73(3): cmp %rax,%rdi
5f76(2): jnz 0xffffffe2(%rip)
5f78(7): mov %rdx,0x21b431(%rip)
5f7f(4): add $0x8,%rsp
5f83(1): pop %rbx
5f84(1): pop %rbp
5f85(2): pop %r12
5f87(2): pop %r13
5f89(2): pop %r14
5f8b(2): pop %r15
5f8d(1): ret near (%rsp)
5f8e(2): nop 
5f90(3): test %r14,%r14
5f93(4): mov 0x0(%rbp),%r15
5f97(2): jz 0x69(%rip)
5f99(3): mov %r15,%rdi
5f9c(5): call 0x6d74(%rip)
5fa1(3): cmp $0x2e,(%rax)
5fa4(2): jz 0x74(%rip)
5fa6(4): cmp $0x2f,(%r15)
5faa(2): jz 0x56(%rip)
5fac(3): mov %r15,%rsi
5faf(2): xor %edx,%edx
5fb1(3): mov %r14,%rdi
5fb4(5): call 0x70ac(%rip)
5fb9(4): mov 0x8(%rbp),%rsi
5fbd(3): mov %rax,%r15
5fc0(3): mov %rax,%rdi
5fc3(3): mov %r13d,%edx
5fc6(5): call 0xfffffa0a(%rip)
5fcb(3): mov %r15,%rdi
5fce(5): call 0xffffd8b2(%rip)
5fd3(7): cmp $0x9,0xa8(%rbp)
5fda(6): jnz 0xffffff51(%rip)
5fe0(4): mov 0x0(%rbp),%rdi
5fe4(5): call 0xffffd89c(%rip)
5fe9(4): mov 0x8(%rbp),%rdi
5fed(5): call 0xffffd893(%rip)
5ff2(4): mov 0x10(%rbp),%rdi
5ff6(5): call 0xffffd88a(%rip)
5ffb(5): jmp 0xffffff30(%rip)
6000(4): mov 0x8(%rbp),%rsi
6004(3): mov %r13d,%edx
6007(3): mov %r15,%rdi
600a(5): call 0xfffff9c6(%rip)
600f(2): jmp 0xffffffc4(%rip)
6011(7): nop 0x0(%rax)
6018(2): xor %edx,%edx
601a(4): cmp $0x2e,0x1(%rax)
601e(3): setz %dl
6021(5): movzx 0x1(%rax,%rdx,1),%eax
6026(2): test %al,%al
6028(6): jz 0xffffff03(%rip)
602e(2): cmp $0x2f,%al
6030(6): jz 0xfffffefb(%rip)
6036(5): jmp 0xffffff70(%rip)

"indent" :
6040(3): cmp %rsi,%rdi
6043(6): jnb 0xa5(%rip)
6049(2): push %r12
604b(3): mov %rsi,%r12
604e(1): push %rbp
604f(1): push %rbx
6050(3): mov %rdi,%rbx
6053(2): jmp 0x43(%rip)
6055(3): nop (%rax)
6058(2): xor %edx,%edx
605a(3): mov %r12,%rax
605d(3): div %rcx,%rax
6060(2): xor %edx,%edx
6062(3): mov %rax,%r9
6065(3): mov %rbp,%rax
6068(3): div %rcx,%rax
606b(3): cmp %rax,%r9
606e(2): jbe 0x47(%rip)
6070(3): cmp %r8,%rsi
6073(2): jnb 0x7d(%rip)
6075(4): lea 0x1(%rsi),%rax
6079(4): mov %rax,0x28(%rdi)
607d(3): mov $0x9,(%rsi)
6080(3): mov %rbx,%rax
6083(2): xor %edx,%edx
6085(3): div %rcx,%rax
6088(3): add %rbx,%rcx
608b(3): mov %rcx,%rbx
608e(3): sub %rdx,%rbx
6091(3): cmp %r12,%rbx
6094(2): jnb 0x39(%rip)
6096(7): mov 0x21b223(%rip),%rcx
609d(7): mov 0x21a1e4(%rip),%rdi
60a4(4): lea 0x1(%rbx),%rbp
60a8(3): test %rcx,%rcx
60ab(4): mov 0x28(%rdi),%rsi
60af(4): mov 0x30(%rdi),%r8
60b3(2): jnz 0xffffffa5(%rip)
60b5(3): cmp %r8,%rsi
60b8(2): jnb 0x20(%rip)
60ba(4): lea 0x1(%rsi),%rax
60be(4): mov %rax,0x28(%rdi)
60c2(3): mov $0x20,(%rsi)
60c5(3): mov %rbp,%rbx
60c8(3): cmp %r12,%rbx
60cb(2): jb 0xffffffcb(%rip)
60cd(1): pop %rbx
60ce(1): pop %rbp
60cf(2): pop %r12
60d1(1): ret near (%rsp)
60d2(6): nop 0x0(%rax,%rax,1)
60d8(5): mov $0x20,%esi
60dd(5): call 0xffffd3b3(%rip)
60e2(2): jmp 0xffffffe3(%rip)
60e4(4): nop 0x0(%rax)
60e8(2): REP ret near (%rsp)
60ea(6): nop 0x0(%rax,%rax,1)
60f0(5): mov $0x9,%esi
60f5(5): call 0xffffd39b(%rip)
60fa(7): mov 0x21b1bf(%rip),%rcx
6101(5): jmp 0xffffff7f(%rip)

"dired_dump_obstack" :
6110(2): push %r12
6112(1): push %rbp
6113(1): push %rbx
6114(4): mov 0x18(%rsi),%rax
6118(4): mov 0x10(%rsi),%rbx
611c(3): mov %rax,%rbp
611f(3): sub %rbx,%rbp
6122(4): shr $0x3,%rbp
6126(3): test %rbp,%rbp
6129(6): jz 0x8e(%rip)
612f(3): cmp %rbx,%rax
6132(6): jz 0x90(%rip)
6138(4): mov 0x30(%rsi),%rdx
613c(4): mov 0x20(%rsi),%rcx
6140(3): add %rdx,%rax
6143(3): not %rdx
6146(3): mov %rcx,%r8
6149(3): and %rdx,%rax
614c(4): mov 0x8(%rsi),%rdx
6150(4): mov %rax,0x18(%rsi)
6154(3): sub %rdx,%r8
6157(3): sub %rdx,%rax
615a(3): cmp %r8,%rax
615d(2): jnbe 0x5f(%rip)
615f(4): mov 0x18(%rsi),%rax
6163(4): lea 0x0(%rbx,%rbp,8),%r12
6167(7): lea 0x1171e(%rip),%rbp
616e(4): mov %rax,0x10(%rsi)
6172(7): mov 0x21a10f(%rip),%rsi
6179(5): call 0xffffd3f7(%rip)
617e(2): nop 
6180(3): mov (%rbx),%rdx
6183(2): xor %eax,%eax
6185(3): mov %rbp,%rsi
6188(5): mov $0x1,%edi
618d(4): add $0x8,%rbx
6191(5): call 0xffffd57f(%rip)
6196(3): cmp %r12,%rbx
6199(2): jnz 0xffffffe7(%rip)
619b(7): mov 0x21a0e6(%rip),%rdi
61a2(4): mov 0x28(%rdi),%rax
61a6(4): cmp 0x30(%rdi),%rax
61aa(2): jnb 0x21(%rip)
61ac(4): lea 0x1(%rax),%rdx
61b0(4): mov %rdx,0x28(%rdi)
61b4(3): mov $0xa,(%rax)
61b7(1): pop %rbx
61b8(1): pop %rbp
61b9(2): pop %r12
61bb(1): ret near (%rsp)
61bc(4): mov %rcx,0x18(%rsi)
61c0(2): jmp 0xffffff9f(%rip)
61c2(4): or $0x2,0x50(%rsi)
61c6(5): jmp 0xffffff72(%rip)
61cb(1): pop %rbx
61cc(1): pop %rbp
61cd(2): pop %r12
61cf(5): mov $0xa,%esi
61d4(5): jmp 0xffffd2bc(%rip)

"format_user_or_group" :
61e0(1): push %rbp
61e1(1): push %rbx
61e2(2): mov %edx,%ebx
61e4(4): sub $0x8,%rsp
61e8(3): test %rdi,%rdi
61eb(6): jz 0x95(%rip)
61f1(2): xor %esi,%esi
61f3(3): mov %rdi,%rbp
61f6(5): call 0xa02a(%rip)
61fb(7): mov 0x21a086(%rip),%rsi
6202(2): sub %eax,%ebx
6204(5): mov $0x0,%eax
6209(3): cmovs %eax,%ebx
620c(3): mov %rbp,%rdi
620f(5): call 0xffffd361(%rip)
6214(3): mov %rbp,%rdi
6217(3): movsxd %ebx,%rbp
621a(5): call 0xffffd1e6(%rip)
621f(3): add %rax,%rbp
6222(6): nop 0x0(%rax,%rax,1)
6228(7): mov 0x21a059(%rip),%rdi
622f(4): mov 0x28(%rdi),%rdx
6233(4): cmp 0x30(%rdi),%rdx
6237(2): jnb 0x39(%rip)
6239(4): lea 0x1(%rdx),%rcx
623d(4): mov %rcx,0x28(%rdi)
6241(3): mov $0x20,(%rdx)
6244(3): sub $0x1,%ebx
6247(3): cmp $0xff,%ebx
624a(2): jnz 0xffffffde(%rip)
624c(7): mov 0x21afa5(%rip),%rax
6253(5): lea 0x1(%rbp,%rax,1),%rax
6258(7): mov %rax,0x21af99(%rip)
625f(4): add $0x8,%rsp
6263(1): pop %rbx
6264(1): pop %rbp
6265(1): ret near (%rsp)
6266(a): nop 0x0(%rax,%rax,1)
6270(5): mov $0x20,%esi
6275(5): call 0xffffd21b(%rip)
627a(2): jmp 0xffffffca(%rip)
627c(4): nop 0x0(%rax)
6280(3): mov %rsi,%rcx
6283(7): lea 0x11607(%rip),%rsi
628a(5): mov $0x1,%edi
628f(2): xor %eax,%eax
6291(3): movsxd %ebx,%rbp
6294(5): call 0xffffd47c(%rip)
6299(2): jmp 0xffffffb3(%rip)

"format_user" :
62a0(1): push %rbx
62a1(7): lea 0x115ef(%rip),%rax
62a8(2): mov %edi,%ebx
62aa(4): sub $0x10,%rsp
62ae(2): test %dl,%dl
62b0(2): jz 0xd(%rip)
62b2(2): xor %eax,%eax
62b4(7): cmp $0x0,0x21b072(%rip)
62bb(2): jz 0x15(%rip)
62bd(4): add $0x10,%rsp
62c1(2): mov %esi,%edx
62c3(3): mov %rbx,%rsi
62c6(1): pop %rbx
62c7(3): mov %rax,%rdi
62ca(5): jmp 0xffffff16(%rip)
62cf(1): nop 
62d0(4): mov %esi,0xc(%rsp)
62d4(5): call 0x94ec(%rip)
62d9(4): mov 0xc(%rsp),%esi
62dd(2): jmp 0xffffffe0(%rip)

"stophandler" :
62e0(6): mov 0x21af32(%rip),%eax
62e6(2): test %eax,%eax
62e8(2): jnz 0x11(%rip)
62ea(6): mov 0x21af24(%rip),%eax
62f0(3): add $0x1,%eax
62f3(6): mov %eax,0x21af1b(%rip)
62f9(2): REP ret near (%rsp)

"file_failure" :
6300(2): push %r12
6302(1): push %rbp
6303(3): mov %rsi,%rbp
6306(1): push %rbx
6307(3): mov %rdx,%rsi
630a(2): mov %edi,%ebx
630c(5): mov $0x4,%edi
6311(5): call 0xd77f(%rip)
6316(3): mov %rax,%r12
6319(5): call 0xffffcf87(%rip)
631e(2): mov (%rax),%esi
6320(2): xor %edi,%edi
6322(2): xor %eax,%eax
6324(3): mov %r12,%rcx
6327(3): mov %rbp,%rdx
632a(5): call 0xffffd436(%rip)
632f(2): test %bl,%bl
6331(2): jz 0x17(%rip)
6333(a): mov $0x2,0x21aed3(%rip)
633d(1): pop %rbx
633e(1): pop %rbp
633f(2): pop %r12
6341(1): ret near (%rsp)
6342(6): nop 0x0(%rax,%rax,1)
6348(6): mov 0x21aec2(%rip),%eax
634e(2): test %eax,%eax
6350(2): jnz 0xffffffed(%rip)
6352(1): pop %rbx
6353(a): mov $0x1,0x21aeb3(%rip)
635d(1): pop %rbp
635e(2): pop %r12
6360(1): ret near (%rsp)

"xstrcoll_df_size" :
6370(6): mov 0xa8(%rsi),%edx
6376(6): mov 0xa8(%rdi),%ecx
637c(3): cmp $0x3,%edx
637f(3): setz %al
6382(3): cmp $0x9,%edx
6385(3): setz %dl
6388(2): or %edx,%eax
638a(3): cmp $0x3,%ecx
638d(2): jz 0x2b(%rip)
638f(3): cmp $0x9,%ecx
6392(2): jz 0x26(%rip)
6394(6): mov 0xac(%rdi),%edx
639a(6): and $0xf000,%edx
63a0(2): test %al,%al
63a2(2): jz 0x36(%rip)
63a4(6): cmp $0x4000,%edx
63aa(2): jz 0x48(%rip)
63ac(5): mov $0x1,%eax
63b1(1): ret near (%rsp)
63b2(6): nop 0x0(%rax,%rax,1)
63b8(2): test %al,%al
63ba(2): jnz 0x38(%rip)
63bc(6): mov 0xac(%rsi),%eax
63c2(5): and $0xf000,%eax
63c7(5): cmp $0x4000,%eax
63cc(2): jz 0x26(%rip)
63ce(5): mov $0xffffffff,%eax
63d3(2): REP ret near (%rsp)
63d5(3): nop (%rax)
63d8(6): mov 0xac(%rsi),%eax
63de(5): and $0xf000,%eax
63e3(5): cmp $0x4000,%eax
63e8(2): jz 0xffffffbc(%rip)
63ea(6): cmp $0x4000,%edx
63f0(2): jz 0xffffffde(%rip)
63f2(4): mov 0x48(%rsi),%rax
63f6(4): cmp %rax,0x48(%rdi)
63fa(2): jnle 0xffffffd4(%rip)
63fc(5): mov $0x1,%eax
6401(2): jl 0xffffffd2(%rip)
6403(3): mov (%rsi),%rsi
6406(3): mov (%rdi),%rdi
6409(5): jmp 0xfffff9d7(%rip)

"strcmp_df_size" :
6410(6): mov 0xa8(%rsi),%edx
6416(6): mov 0xa8(%rdi),%ecx
641c(3): cmp $0x3,%edx
641f(3): setz %al
6422(3): cmp $0x9,%edx
6425(3): setz %dl
6428(2): or %edx,%eax
642a(3): cmp $0x3,%ecx
642d(2): jz 0x2b(%rip)
642f(3): cmp $0x9,%ecx
6432(2): jz 0x26(%rip)
6434(6): mov 0xac(%rdi),%edx
643a(6): and $0xf000,%edx
6440(2): test %al,%al
6442(2): jz 0x36(%rip)
6444(6): cmp $0x4000,%edx
644a(2): jz 0x48(%rip)
644c(5): mov $0x1,%eax
6451(1): ret near (%rsp)
6452(6): nop 0x0(%rax,%rax,1)
6458(2): test %al,%al
645a(2): jnz 0x38(%rip)
645c(6): mov 0xac(%rsi),%eax
6462(5): and $0xf000,%eax
6467(5): cmp $0x4000,%eax
646c(2): jz 0x26(%rip)
646e(5): mov $0xffffffff,%eax
6473(1): ret near (%rsp)
6474(4): nop 0x0(%rax)
6478(6): mov 0xac(%rsi),%eax
647e(5): and $0xf000,%eax
6483(5): cmp $0x4000,%eax
6488(2): jz 0xffffffbc(%rip)
648a(6): cmp $0x4000,%edx
6490(2): jz 0xffffffde(%rip)
6492(4): mov 0x48(%rsi),%rax
6496(4): cmp %rax,0x48(%rdi)
649a(2): jnle 0xffffffd4(%rip)
649c(2): jl 0xffffffb0(%rip)
649e(3): mov (%rsi),%rsi
64a1(3): mov (%rdi),%rdi
64a4(5): jmp 0xffffd0ec(%rip)

"rev_xstrcoll_df_size" :
64b0(3): mov %rsi,%rdx
64b3(6): mov 0xa8(%rdi),%esi
64b9(6): mov 0xa8(%rdx),%ecx
64bf(3): cmp $0x3,%ecx
64c2(3): setz %al
64c5(3): cmp $0x9,%ecx
64c8(3): setz %cl
64cb(2): or %ecx,%eax
64cd(3): cmp $0x3,%esi
64d0(2): jz 0x28(%rip)
64d2(3): cmp $0x9,%esi
64d5(2): jz 0x23(%rip)
64d7(6): mov 0xac(%rdi),%ecx
64dd(6): and $0xf000,%ecx
64e3(2): test %al,%al
64e5(2): jz 0x33(%rip)
64e7(6): cmp $0x4000,%ecx
64ed(2): jz 0x45(%rip)
64ef(5): mov $0x1,%eax
64f4(1): ret near (%rsp)
64f5(3): nop (%rax)
64f8(2): test %al,%al
64fa(2): jnz 0x38(%rip)
64fc(6): mov 0xac(%rdx),%eax
6502(5): and $0xf000,%eax
6507(5): cmp $0x4000,%eax
650c(2): jz 0x26(%rip)
650e(5): mov $0xffffffff,%eax
6513(2): REP ret near (%rsp)
6515(3): nop (%rax)
6518(6): mov 0xac(%rdx),%eax
651e(5): and $0xf000,%eax
6523(5): cmp $0x4000,%eax
6528(2): jz 0xffffffbf(%rip)
652a(6): cmp $0x4000,%ecx
6530(2): jz 0xffffffde(%rip)
6532(4): mov 0x48(%rdi),%rax
6536(4): cmp %rax,0x48(%rdx)
653a(2): jnle 0xffffffd4(%rip)
653c(5): mov $0x1,%eax
6541(2): jl 0xffffffd2(%rip)
6543(3): mov (%rdi),%rsi
6546(3): mov (%rdx),%rdi
6549(5): jmp 0xfffff897(%rip)

"rev_strcmp_df_size" :
6550(3): mov %rsi,%rdx
6553(6): mov 0xa8(%rdi),%esi
6559(6): mov 0xa8(%rdx),%ecx
655f(3): cmp $0x3,%ecx
6562(3): setz %al
6565(3): cmp $0x9,%ecx
6568(3): setz %cl
656b(2): or %ecx,%eax
656d(3): cmp $0x3,%esi
6570(2): jz 0x28(%rip)
6572(3): cmp $0x9,%esi
6575(2): jz 0x23(%rip)
6577(6): mov 0xac(%rdi),%ecx
657d(6): and $0xf000,%ecx
6583(2): test %al,%al
6585(2): jz 0x33(%rip)
6587(6): cmp $0x4000,%ecx
658d(2): jz 0x45(%rip)
658f(5): mov $0x1,%eax
6594(1): ret near (%rsp)
6595(3): nop (%rax)
6598(2): test %al,%al
659a(2): jnz 0x38(%rip)
659c(6): mov 0xac(%rdx),%eax
65a2(5): and $0xf000,%eax
65a7(5): cmp $0x4000,%eax
65ac(2): jz 0x26(%rip)
65ae(5): mov $0xffffffff,%eax
65b3(1): ret near (%rsp)
65b4(4): nop 0x0(%rax)
65b8(6): mov 0xac(%rdx),%eax
65be(5): and $0xf000,%eax
65c3(5): cmp $0x4000,%eax
65c8(2): jz 0xffffffbf(%rip)
65ca(6): cmp $0x4000,%ecx
65d0(2): jz 0xffffffde(%rip)
65d2(4): mov 0x48(%rdi),%rax
65d6(4): cmp %rax,0x48(%rdx)
65da(2): jnle 0xffffffd4(%rip)
65dc(2): jl 0xffffffb3(%rip)
65de(3): mov (%rdi),%rsi
65e1(3): mov (%rdx),%rdi
65e4(5): jmp 0xffffcfac(%rip)

"xstrcoll_df_name" :
65f0(6): mov 0xa8(%rsi),%edx
65f6(6): mov 0xa8(%rdi),%ecx
65fc(3): cmp $0x3,%edx
65ff(3): setz %al
6602(3): cmp $0x9,%edx
6605(3): setz %dl
6608(2): or %edx,%eax
660a(3): cmp $0x3,%ecx
660d(2): jz 0x2b(%rip)
660f(3): cmp $0x9,%ecx
6612(2): jz 0x26(%rip)
6614(6): mov 0xac(%rdi),%edx
661a(6): and $0xf000,%edx
6620(2): test %al,%al
6622(2): jz 0x36(%rip)
6624(6): cmp $0x4000,%edx
662a(2): jz 0x48(%rip)
662c(5): mov $0x1,%eax
6631(1): ret near (%rsp)
6632(6): nop 0x0(%rax,%rax,1)
6638(2): test %al,%al
663a(2): jnz 0x38(%rip)
663c(6): mov 0xac(%rsi),%eax
6642(5): and $0xf000,%eax
6647(5): cmp $0x4000,%eax
664c(2): jz 0x26(%rip)
664e(5): mov $0xffffffff,%eax
6653(1): ret near (%rsp)
6654(4): nop 0x0(%rax)
6658(6): mov 0xac(%rsi),%eax
665e(5): and $0xf000,%eax
6663(5): cmp $0x4000,%eax
6668(2): jz 0xffffffbc(%rip)
666a(6): cmp $0x4000,%edx
6670(2): jz 0xffffffde(%rip)
6672(3): mov (%rsi),%rsi
6675(3): mov (%rdi),%rdi
6678(5): jmp 0xfffff768(%rip)

"strcmp_df_name" :
6680(6): mov 0xa8(%rsi),%edx
6686(6): mov 0xa8(%rdi),%ecx
668c(3): cmp $0x3,%edx
668f(3): setz %al
6692(3): cmp $0x9,%edx
6695(3): setz %dl
6698(2): or %edx,%eax
669a(3): cmp $0x3,%ecx
669d(2): jz 0x2b(%rip)
669f(3): cmp $0x9,%ecx
66a2(2): jz 0x26(%rip)
66a4(6): mov 0xac(%rdi),%edx
66aa(6): and $0xf000,%edx
66b0(2): test %al,%al
66b2(2): jz 0x36(%rip)
66b4(6): cmp $0x4000,%edx
66ba(2): jz 0x48(%rip)
66bc(5): mov $0x1,%eax
66c1(1): ret near (%rsp)
66c2(6): nop 0x0(%rax,%rax,1)
66c8(2): test %al,%al
66ca(2): jnz 0x38(%rip)
66cc(6): mov 0xac(%rsi),%eax
66d2(5): and $0xf000,%eax
66d7(5): cmp $0x4000,%eax
66dc(2): jz 0x26(%rip)
66de(5): mov $0xffffffff,%eax
66e3(1): ret near (%rsp)
66e4(4): nop 0x0(%rax)
66e8(6): mov 0xac(%rsi),%eax
66ee(5): and $0xf000,%eax
66f3(5): cmp $0x4000,%eax
66f8(2): jz 0xffffffbc(%rip)
66fa(6): cmp $0x4000,%edx
6700(2): jz 0xffffffde(%rip)
6702(3): mov (%rsi),%rsi
6705(3): mov (%rdi),%rdi
6708(5): jmp 0xffffce88(%rip)

"rev_xstrcoll_df_name" :
6710(3): mov %rsi,%rcx
6713(6): mov 0xa8(%rdi),%esi
6719(6): mov 0xa8(%rcx),%edx
671f(3): cmp $0x3,%edx
6722(3): setz %al
6725(3): cmp $0x9,%edx
6728(3): setz %dl
672b(2): or %edx,%eax
672d(3): cmp $0x3,%esi
6730(2): jz 0x28(%rip)
6732(3): cmp $0x9,%esi
6735(2): jz 0x23(%rip)
6737(6): mov 0xac(%rdi),%edx
673d(6): and $0xf000,%edx
6743(2): test %al,%al
6745(2): jz 0x33(%rip)
6747(6): cmp $0x4000,%edx
674d(2): jz 0x45(%rip)
674f(5): mov $0x1,%eax
6754(1): ret near (%rsp)
6755(3): nop (%rax)
6758(2): test %al,%al
675a(2): jnz 0x38(%rip)
675c(6): mov 0xac(%rcx),%eax
6762(5): and $0xf000,%eax
6767(5): cmp $0x4000,%eax
676c(2): jz 0x26(%rip)
676e(5): mov $0xffffffff,%eax
6773(1): ret near (%rsp)
6774(4): nop 0x0(%rax)
6778(6): mov 0xac(%rcx),%eax
677e(5): and $0xf000,%eax
6783(5): cmp $0x4000,%eax
6788(2): jz 0xffffffbf(%rip)
678a(6): cmp $0x4000,%edx
6790(2): jz 0xffffffde(%rip)
6792(3): mov (%rdi),%rsi
6795(3): mov (%rcx),%rdi
6798(5): jmp 0xfffff648(%rip)

"rev_strcmp_df_name" :
67a0(3): mov %rsi,%rdx
67a3(6): mov 0xa8(%rdi),%esi
67a9(6): mov 0xa8(%rdx),%ecx
67af(3): cmp $0x3,%ecx
67b2(3): setz %al
67b5(3): cmp $0x9,%ecx
67b8(3): setz %cl
67bb(2): or %ecx,%eax
67bd(3): cmp $0x3,%esi
67c0(2): jz 0x28(%rip)
67c2(3): cmp $0x9,%esi
67c5(2): jz 0x23(%rip)
67c7(6): mov 0xac(%rdi),%ecx
67cd(6): and $0xf000,%ecx
67d3(2): test %al,%al
67d5(2): jz 0x33(%rip)
67d7(6): cmp $0x4000,%ecx
67dd(2): jz 0x45(%rip)
67df(5): mov $0x1,%eax
67e4(1): ret near (%rsp)
67e5(3): nop (%rax)
67e8(2): test %al,%al
67ea(2): jnz 0x38(%rip)
67ec(6): mov 0xac(%rdx),%eax
67f2(5): and $0xf000,%eax
67f7(5): cmp $0x4000,%eax
67fc(2): jz 0x26(%rip)
67fe(5): mov $0xffffffff,%eax
6803(1): ret near (%rsp)
6804(4): nop 0x0(%rax)
6808(6): mov 0xac(%rdx),%eax
680e(5): and $0xf000,%eax
6813(5): cmp $0x4000,%eax
6818(2): jz 0xffffffbf(%rip)
681a(6): cmp $0x4000,%ecx
6820(2): jz 0xffffffde(%rip)
6822(3): mov (%rdi),%rsi
6825(3): mov (%rdx),%rdi
6828(5): jmp 0xffffcd68(%rip)

"get_type_indicator" :
6830(3): test %dil,%dil
6833(2): jz 0x25(%rip)
6835(2): mov %esi,%eax
6837(5): and $0xf000,%eax
683c(5): cmp $0x8000,%eax
6841(2): jnz 0x6f(%rip)
6843(2): xor %eax,%eax
6845(7): cmp $0x3,0x21aac8(%rip)
684c(6): jz 0xac(%rip)
6852(2): REP ret near (%rsp)
6854(4): nop 0x0(%rax)
6858(2): xor %eax,%eax
685a(3): cmp $0x5,%edx
685d(2): jz 0x63(%rip)
685f(3): cmp $0x3,%edx
6862(3): setz %cl
6865(3): cmp $0x9,%edx
6868(3): setz %al
686b(2): or %eax,%ecx
686d(2): test %cl,%cl
686f(5): mov $0x2f,%eax
6874(2): jnz 0xffffffde(%rip)
6876(2): xor %eax,%eax
6878(7): cmp $0x1,0x21aa95(%rip)
687f(2): jz 0xffffffd3(%rip)
6881(3): test %dil,%dil
6884(2): jnz 0x44(%rip)
6886(3): cmp $0x6,%edx
6889(5): mov $0x40,%eax
688e(6): jz 0x82(%rip)
6894(3): cmp $0x1,%edx
6897(5): mov $0x7c,%eax
689c(6): jz 0x8c(%rip)
68a2(3): cmp $0x7,%edx
68a5(3): setz %al
68a8(2): neg %eax
68aa(3): and $0x3d,%eax
68ad(1): ret near (%rsp)
68ae(2): nop 
68b0(5): cmp $0x4000,%eax
68b5(3): setz %cl
68b8(2): jmp 0xffffffb5(%rip)
68ba(6): nop 0x0(%rax,%rax,1)
68c0(2): REP ret near (%rsp)
68c2(6): nop 0x0(%rax,%rax,1)
68c8(6): and $0xf000,%esi
68ce(5): mov $0x40,%eax
68d3(6): cmp $0xa000,%esi
68d9(2): jz 0x3f(%rip)
68db(6): cmp $0x1000,%esi
68e1(5): mov $0x7c,%eax
68e6(2): jz 0x3a(%rip)
68e8(6): cmp $0xc000,%esi
68ee(3): setz %al
68f1(2): jmp 0xffffffb7(%rip)
68f3(5): nop 0x0(%rax,%rax,1)
68f8(3): and $0x49,%esi
68fb(3): cmp $0x1,%esi
68fe(2): sbb %eax,%eax
6900(2): not %eax
6902(3): and $0x2a,%eax
6905(1): ret near (%rsp)
6906(a): nop 0x0(%rax,%rax,1)
6910(2): REP ret near (%rsp)
6912(6): nop 0x0(%rax,%rax,1)
6918(2): REP ret near (%rsp)
691a(6): nop 0x0(%rax,%rax,1)
6920(2): REP ret near (%rsp)
6922(6): nop 0x0(%rax,%rax,1)
6928(2): REP ret near (%rsp)

"print_type_indicator" :
6930(1): push %rbx
6931(4): movzx %dil,%edi
6935(5): call 0xfffffefb(%rip)
693a(2): test %al,%al
693c(2): mov %eax,%ebx
693e(2): jz 0x25(%rip)
6940(7): mov 0x219941(%rip),%rdi
6947(4): mov 0x28(%rdi),%rax
694b(4): cmp 0x30(%rdi),%rax
694f(2): jnb 0x21(%rip)
6951(4): lea 0x1(%rax),%rdx
6955(4): mov %rdx,0x28(%rdi)
6959(2): mov %bl,(%rax)
695b(8): add $0x1,0x21a895(%rip)
6963(2): test %bl,%bl
6965(3): setnz %al
6968(1): pop %rbx
6969(1): ret near (%rsp)
696a(6): nop 0x0(%rax,%rax,1)
6970(3): movzx %bl,%esi
6973(5): call 0xffffcb1d(%rip)
6978(2): jmp 0xffffffe3(%rip)

"strcmp_df_mtime" :
6980(6): mov 0xa8(%rsi),%edx
6986(6): mov 0xa8(%rdi),%ecx
698c(3): cmp $0x3,%edx
698f(3): setz %al
6992(3): cmp $0x9,%edx
6995(3): setz %dl
6998(2): or %edx,%eax
699a(3): cmp $0x3,%ecx
699d(2): jz 0x2b(%rip)
699f(3): cmp $0x9,%ecx
69a2(2): jz 0x26(%rip)
69a4(6): mov 0xac(%rdi),%edx
69aa(6): and $0xf000,%edx
69b0(2): test %al,%al
69b2(2): jz 0x36(%rip)
69b4(6): cmp $0x4000,%edx
69ba(2): jz 0x4e(%rip)
69bc(5): mov $0x1,%eax
69c1(1): ret near (%rsp)
69c2(6): nop 0x0(%rax,%rax,1)
69c8(2): test %al,%al
69ca(2): jnz 0x3e(%rip)
69cc(6): mov 0xac(%rsi),%eax
69d2(5): and $0xf000,%eax
69d7(5): cmp $0x4000,%eax
69dc(2): jz 0x2c(%rip)
69de(5): mov $0xffffffff,%eax
69e3(2): REP ret near (%rsp)
69e5(3): nop (%rax)
69e8(6): mov 0xac(%rsi),%eax
69ee(5): and $0xf000,%eax
69f3(5): cmp $0x4000,%eax
69f8(2): jz 0xffffffbc(%rip)
69fa(6): cmp $0x4000,%edx
6a00(2): jz 0xffffffde(%rip)
6a02(6): nop 0x0(%rax,%rax,1)
6a08(4): mov 0x70(%rsi),%rax
6a0c(4): cmp %rax,0x70(%rdi)
6a10(2): jnle 0xffffffce(%rip)
6a12(2): jl 0xffffffaa(%rip)
6a14(4): mov 0x78(%rsi),%rax
6a18(3): sub 0x78(%rdi),%eax
6a1b(2): jnz 0xffffffc8(%rip)
6a1d(3): mov (%rsi),%rsi
6a20(3): mov (%rdi),%rdi
6a23(5): jmp 0xffffcb6d(%rip)

"rev_xstrcoll_df_version" :
6a30(3): mov %rsi,%rdx
6a33(6): mov 0xa8(%rdi),%esi
6a39(6): mov 0xa8(%rdx),%ecx
6a3f(3): cmp $0x3,%ecx
6a42(3): setz %al
6a45(3): cmp $0x9,%ecx
6a48(3): setz %cl
6a4b(2): or %ecx,%eax
6a4d(3): cmp $0x3,%esi
6a50(2): jz 0x28(%rip)
6a52(3): cmp $0x9,%esi
6a55(2): jz 0x23(%rip)
6a57(6): mov 0xac(%rdi),%ecx
6a5d(6): and $0xf000,%ecx
6a63(2): test %al,%al
6a65(2): jz 0x33(%rip)
6a67(6): cmp $0x4000,%ecx
6a6d(2): jz 0x45(%rip)
6a6f(5): mov $0x1,%eax
6a74(1): ret near (%rsp)
6a75(3): nop (%rax)
6a78(2): test %al,%al
6a7a(2): jnz 0x38(%rip)
6a7c(6): mov 0xac(%rdx),%eax
6a82(5): and $0xf000,%eax
6a87(5): cmp $0x4000,%eax
6a8c(2): jz 0x26(%rip)
6a8e(5): mov $0xffffffff,%eax
6a93(1): ret near (%rsp)
6a94(4): nop 0x0(%rax)
6a98(6): mov 0xac(%rdx),%eax
6a9e(5): and $0xf000,%eax
6aa3(5): cmp $0x4000,%eax
6aa8(2): jz 0xffffffbf(%rip)
6aaa(6): cmp $0x4000,%ecx
6ab0(2): jz 0xffffffde(%rip)
6ab2(3): mov (%rdi),%rsi
6ab5(3): mov (%rdx),%rdi
6ab8(5): jmp 0x6798(%rip)

"xstrcoll_df_version" :
6ac0(6): mov 0xa8(%rsi),%edx
6ac6(6): mov 0xa8(%rdi),%ecx
6acc(3): cmp $0x3,%edx
6acf(3): setz %al
6ad2(3): cmp $0x9,%edx
6ad5(3): setz %dl
6ad8(2): or %edx,%eax
6ada(3): cmp $0x3,%ecx
6add(2): jz 0x2b(%rip)
6adf(3): cmp $0x9,%ecx
6ae2(2): jz 0x26(%rip)
6ae4(6): mov 0xac(%rdi),%edx
6aea(6): and $0xf000,%edx
6af0(2): test %al,%al
6af2(2): jz 0x36(%rip)
6af4(6): cmp $0x4000,%edx
6afa(2): jz 0x48(%rip)
6afc(5): mov $0x1,%eax
6b01(1): ret near (%rsp)
6b02(6): nop 0x0(%rax,%rax,1)
6b08(2): test %al,%al
6b0a(2): jnz 0x38(%rip)
6b0c(6): mov 0xac(%rsi),%eax
6b12(5): and $0xf000,%eax
6b17(5): cmp $0x4000,%eax
6b1c(2): jz 0x26(%rip)
6b1e(5): mov $0xffffffff,%eax
6b23(1): ret near (%rsp)
6b24(4): nop 0x0(%rax)
6b28(6): mov 0xac(%rsi),%eax
6b2e(5): and $0xf000,%eax
6b33(5): cmp $0x4000,%eax
6b38(2): jz 0xffffffbc(%rip)
6b3a(6): cmp $0x4000,%edx
6b40(2): jz 0xffffffde(%rip)
6b42(3): mov (%rsi),%rsi
6b45(3): mov (%rdi),%rdi
6b48(5): jmp 0x6708(%rip)

"rev_strcmp_df_extension" :
6b50(6): mov 0xa8(%rsi),%edx
6b56(6): mov 0xa8(%rdi),%ecx
6b5c(3): cmp $0x3,%edx
6b5f(3): setz %al
6b62(3): cmp $0x9,%edx
6b65(3): setz %dl
6b68(2): or %edx,%eax
6b6a(3): cmp $0x3,%ecx
6b6d(2): jz 0x2b(%rip)
6b6f(3): cmp $0x9,%ecx
6b72(2): jz 0x26(%rip)
6b74(6): mov 0xac(%rdi),%edx
6b7a(6): and $0xf000,%edx
6b80(2): test %al,%al
6b82(2): jz 0x36(%rip)
6b84(6): cmp $0x4000,%edx
6b8a(2): jz 0x4e(%rip)
6b8c(5): mov $0x1,%eax
6b91(1): ret near (%rsp)
6b92(6): nop 0x0(%rax,%rax,1)
6b98(2): test %al,%al
6b9a(2): jnz 0x3e(%rip)
6b9c(6): mov 0xac(%rsi),%eax
6ba2(5): and $0xf000,%eax
6ba7(5): cmp $0x4000,%eax
6bac(2): jz 0x2c(%rip)
6bae(5): mov $0xffffffff,%eax
6bb3(1): ret near (%rsp)
6bb4(4): nop 0x0(%rax)
6bb8(6): mov 0xac(%rsi),%eax
6bbe(5): and $0xf000,%eax
6bc3(5): cmp $0x4000,%eax
6bc8(2): jz 0xffffffbc(%rip)
6bca(6): cmp $0x4000,%edx
6bd0(2): jz 0xffffffde(%rip)
6bd2(6): nop 0x0(%rax,%rax,1)
6bd8(2): push %r12
6bda(1): push %rbp
6bdb(1): push %rbx
6bdc(3): mov (%rsi),%r12
6bdf(3): mov %rdi,%rbx
6be2(5): mov $0x2e,%esi
6be7(3): mov %r12,%rdi
6bea(5): call 0xffffc8b6(%rip)
6bef(3): mov (%rbx),%rbx
6bf2(5): mov $0x2e,%esi
6bf7(3): mov %rax,%rbp
6bfa(3): mov %rbx,%rdi
6bfd(5): call 0xffffc8a3(%rip)
6c02(3): test %rax,%rax
6c05(2): jz 0x3b(%rip)
6c07(7): lea 0x10ca5(%rip),%rdx
6c0e(3): test %rbp,%rbp
6c11(4): cmove %rdx,%rbp
6c15(3): mov %rax,%rsi
6c18(3): mov %rbp,%rdi
6c1b(5): call 0xffffc975(%rip)
6c20(2): test %eax,%eax
6c22(2): jnz 0x16(%rip)
6c24(3): mov %rbx,%rsi
6c27(3): mov %r12,%rdi
6c2a(1): pop %rbx
6c2b(1): pop %rbp
6c2c(2): pop %r12
6c2e(5): jmp 0xffffc962(%rip)
6c33(5): nop 0x0(%rax,%rax,1)
6c38(1): pop %rbx
6c39(1): pop %rbp
6c3a(2): pop %r12
6c3c(1): ret near (%rsp)
6c3d(3): nop (%rax)
6c40(3): test %rbp,%rbp
6c43(7): lea 0x10c69(%rip),%rax
6c4a(2): jnz 0xffffffcb(%rip)
6c4c(2): jmp 0xffffffd8(%rip)

"signal_setup" :
6c50(2): push %r15
6c52(2): push %r14
6c54(2): push %r13
6c56(2): push %r12
6c58(1): push %rbp
6c59(1): push %rbx
6c5a(7): sub $0xa8,%rsp
6c61(9): mov $0x28,%rax
6c6a(8): mov %rax,0x98(%rsp)
6c72(2): xor %eax,%eax
6c74(3): test %dil,%dil
6c77(2): jnz 0x79(%rip)
6c79(7): lea 0xf9c4(%rip),%rbx
6c80(5): mov $0x14,%ebp
6c85(7): lea 0x21a594(%rip),%r12
6c8c(4): lea 0x2c(%rbx),%r13
6c90(2): jmp 0x13(%rip)
6c92(6): nop 0x0(%rax,%rax,1)
6c98(3): cmp %r13,%rbx
6c9b(2): jz 0x24(%rip)
6c9d(2): mov (%rbx),%ebp
6c9f(4): add $0x4,%rbx
6ca3(2): mov %ebp,%esi
6ca5(3): mov %r12,%rdi
6ca8(5): call 0xffffcb28(%rip)
6cad(2): test %eax,%eax
6caf(2): jz 0xffffffe9(%rip)
6cb1(2): xor %esi,%esi
6cb3(2): mov %ebp,%edi
6cb5(5): call 0xffffc8eb(%rip)
6cba(3): cmp %r13,%rbx
6cbd(2): jnz 0xffffffe0(%rip)
6cbf(8): mov 0x98(%rsp),%rax
6cc7(9): xor $0x28,%rax
6cd0(6): jnz 0x149(%rip)
6cd6(7): add $0xa8,%rsp
6cdd(1): pop %rbx
6cde(1): pop %rbp
6cdf(2): pop %r12
6ce1(2): pop %r13
6ce3(2): pop %r14
6ce5(2): pop %r15
6ce7(1): ret near (%rsp)
6ce8(8): nop 0x0(%rax,%rax,1)
6cf0(7): lea 0xf94d(%rip),%rbp
6cf7(7): lea 0x21a522(%rip),%rdi
6cfe(6): mov $0x14,%r13d
6d04(3): mov %rsp,%r12
6d07(7): lea 0x21a512(%rip),%r15
6d0e(5): call 0xffffc8d2(%rip)
6d13(4): lea 0x2c(%rbp),%r14
6d17(3): mov %rbp,%rbx
6d1a(2): jmp 0xd(%rip)
6d1c(4): nop 0x0(%rax)
6d20(3): mov (%rbx),%r13d
6d23(4): add $0x4,%rbx
6d27(2): xor %esi,%esi
6d29(3): mov %r12,%rdx
6d2c(3): mov %r13d,%edi
6d2f(5): call 0xffffc5e1(%rip)
6d34(5): cmp $0x1,(%rsp)
6d39(2): jz 0xd(%rip)
6d3b(3): mov %r13d,%esi
6d3e(3): mov %r15,%rdi
6d41(5): call 0xffffcaff(%rip)
6d46(3): cmp %r14,%rbx
6d49(2): jnz 0xffffffd7(%rip)
6d4b(8): movdqa 0x21a4cd(%rip),%xmm0
6d53(6): mov $0x14,%r14d
6d59(b): mov $0x10000000,0x88(%rsp)
6d64(7): lea 0x21a4b5(%rip),%r13
6d6b(7): lea 0xffffe63e(%rip),%r15
6d72(5): movups %xmm0,0x8(%rsp)
6d77(8): movdqa 0x21a4b1(%rip),%xmm0
6d7f(5): movups %xmm0,0x18(%rsp)
6d84(8): movdqa 0x21a4b4(%rip),%xmm0
6d8c(5): movups %xmm0,0x28(%rsp)
6d91(8): movdqa 0x21a4b7(%rip),%xmm0
6d99(5): movups %xmm0,0x38(%rsp)
6d9e(8): movdqa 0x21a4ba(%rip),%xmm0
6da6(5): movups %xmm0,0x48(%rsp)
6dab(8): movdqa 0x21a4bd(%rip),%xmm0
6db3(5): movups %xmm0,0x58(%rsp)
6db8(8): movdqa 0x21a4c0(%rip),%xmm0
6dc0(5): movups %xmm0,0x68(%rsp)
6dc5(8): movdqa 0x21a4c3(%rip),%xmm0
6dcd(5): movups %xmm0,0x78(%rsp)
6dd2(2): jmp 0xe(%rip)
6dd4(4): nop 0x0(%rax)
6dd8(4): mov 0x0(%rbp),%r14d
6ddc(4): add $0x4,%rbp
6de0(3): mov %r14d,%esi
6de3(3): mov %r13,%rdi
6de6(5): call 0xffffc9ea(%rip)
6deb(2): test %eax,%eax
6ded(2): jz 0x22(%rip)
6def(7): lea 0xfffff4ea(%rip),%rax
6df6(4): cmp $0x14,%r14d
6dfa(3): mov %r12,%rsi
6dfd(3): mov %r14d,%edi
6e00(4): cmovne %r15,%rax
6e04(2): xor %edx,%edx
6e06(4): mov %rax,(%rsp)
6e0a(5): call 0xffffc506(%rip)
6e0f(3): cmp %rbx,%rbp
6e12(2): jnz 0xffffffc6(%rip)
6e14(5): jmp 0xfffffeab(%rip)
6e19(5): call 0xffffc607(%rip)

"prep_non_filename_text" :
6e20(8): cmp $0x0,0x219260(%rip)
6e28(2): jz 0x10(%rip)
6e2a(7): lea 0x21924f(%rip),%rdi
6e31(2): jmp 0x3f(%rip)
6e33(5): nop 0x0(%rax,%rax,1)
6e38(7): lea 0x219221(%rip),%rdi
6e3f(4): sub $0x8,%rsp
6e43(5): call 0x2d(%rip)
6e48(7): lea 0x219241(%rip),%rdi
6e4f(5): call 0x21(%rip)
6e54(7): lea 0x219215(%rip),%rdi
6e5b(4): add $0x8,%rsp
6e5f(2): jmp 0x11(%rip)

"put_indicator" :
6e70(7): cmp $0x0,0x21a499(%rip)
6e77(1): push %rbx
6e78(3): mov %rdi,%rbx
6e7b(2): jz 0x25(%rip)
6e7d(4): mov 0x8(%rbx),%rdi
6e81(3): mov (%rbx),%rsi
6e84(5): mov $0x1,%edx
6e89(1): pop %rbx
6e8a(7): mov 0x2193f7(%rip),%rcx
6e91(5): jmp 0xffffc83f(%rip)
6e96(a): nop 0x0(%rax,%rax,1)
6ea0(5): mov $0x1,%edi
6ea5(7): mov $0x1,0x21a464(%rip)
6eac(5): call 0xffffc784(%rip)
6eb1(2): test %eax,%eax
6eb3(2): jns 0xd(%rip)
6eb5(5): call 0xffffff6b(%rip)
6eba(2): jmp 0xffffffc3(%rip)
6ebc(4): nop 0x0(%rax)
6ec0(5): mov $0x1,%edi
6ec5(5): call 0xfffffd8b(%rip)
6eca(5): call 0xffffff56(%rip)
6ecf(2): jmp 0xffffffae(%rip)

"process_signals" :
6ee0(1): push %rbp
6ee1(1): push %rbx
6ee2(7): sub $0x98,%rsp
6ee9(9): mov $0x28,%rax
6ef2(8): mov %rax,0x88(%rsp)
6efa(2): xor %eax,%eax
6efc(3): mov %rsp,%rbp
6eff(2): jmp 0x5a(%rip)
6f01(7): nop 0x0(%rax)
6f08(7): mov 0x219379(%rip),%rdi
6f0f(5): call 0xffffc901(%rip)
6f14(7): lea 0x21a305(%rip),%rsi
6f1b(2): xor %edi,%edi
6f1d(3): mov %rbp,%rdx
6f20(5): call 0xffffc340(%rip)
6f25(6): mov 0x21a2ed(%rip),%ebx
6f2b(6): mov 0x21a2e3(%rip),%eax
6f31(2): test %eax,%eax
6f33(2): jz 0x65(%rip)
6f35(3): sub $0x1,%eax
6f38(5): mov $0x13,%ebx
6f3d(6): mov %eax,0x21a2d1(%rip)
6f43(2): mov %ebx,%edi
6f45(5): call 0xffffc33b(%rip)
6f4a(2): xor %edx,%edx
6f4c(3): mov %rbp,%rsi
6f4f(5): mov $0x2,%edi
6f54(5): call 0xffffc30c(%rip)
6f59(6): mov 0x21a2b9(%rip),%eax
6f5f(2): test %eax,%eax
6f61(2): jnz 0xc(%rip)
6f63(6): mov 0x21a2ab(%rip),%eax
6f69(2): test %eax,%eax
6f6b(2): jz 0x3d(%rip)
6f6d(7): cmp $0x0,0x21a39c(%rip)
6f74(2): jz 0xffffff94(%rip)
6f76(7): lea 0x2190e3(%rip),%rdi
6f7d(5): call 0xfffffef3(%rip)
6f82(7): lea 0x2190e7(%rip),%rdi
6f89(5): call 0xfffffee7(%rip)
6f8e(5): jmp 0xffffff7a(%rip)
6f93(5): nop 0x0(%rax,%rax,1)
6f98(2): xor %esi,%esi
6f9a(2): mov %ebx,%edi
6f9c(5): call 0xffffc604(%rip)
6fa1(2): jmp 0xffffffa2(%rip)
6fa3(5): nop 0x0(%rax,%rax,1)
6fa8(8): mov 0x88(%rsp),%rax
6fb0(9): xor $0x28,%rax
6fb9(2): jnz 0xc(%rip)
6fbb(7): add $0x98,%rsp
6fc2(1): pop %rbx
6fc3(1): pop %rbp
6fc4(1): ret near (%rsp)
6fc5(5): call 0xffffc45b(%rip)

"set_normal_color" :
6fd0(7): cmp $0x0,0x21a33b(%rip)
6fd7(2): jz 0x19(%rip)
6fd9(4): sub $0x8,%rsp
6fdd(5): mov $0x4,%edi
6fe2(5): call 0xffffe68e(%rip)
6fe7(2): test %al,%al
6fe9(2): jnz 0xf(%rip)
6feb(4): add $0x8,%rsp
6fef(1): ret near (%rsp)
6ff0(2): REP ret near (%rsp)
6ff2(6): nop 0x0(%rax,%rax,1)
6ff8(7): lea 0x219061(%rip),%rdi
6fff(5): call 0xfffffe71(%rip)
7004(7): lea 0x219095(%rip),%rdi
700b(5): call 0xfffffe65(%rip)
7010(7): lea 0x219059(%rip),%rdi
7017(4): add $0x8,%rsp
701b(5): jmp 0xfffffe55(%rip)

"quote_name_buf.constprop.54" :
7020(2): push %r15
7022(2): push %r14
7024(3): mov %rdx,%r14
7027(2): push %r13
7029(2): push %r12
702b(3): mov %rsi,%r12
702e(1): push %rbp
702f(1): push %rbx
7030(2): mov %ecx,%ebx
7032(4): sub $0x68,%rsp
7036(3): mov (%rdi),%r13
7039(5): mov %rdi,0x30(%rsp)
703e(3): mov %rdx,%rdi
7041(5): mov %r8,0x20(%rsp)
7046(9): mov $0x28,%rcx
704f(5): mov %rcx,0x58(%rsp)
7054(2): xor %ecx,%ecx
7056(5): mov %r9,0x38(%rsp)
705b(5): call 0xc5b5(%rip)
7060(3): cmp $0x2,%eax
7063(3): setbe %al
7066(6): and 0x21a26c(%rip),%al
706c(4): mov %al,0x2f(%rsp)
7070(6): jnz 0x160(%rip)
7076(3): xor %r9d,%r9d
7079(2): test %ebx,%ebx
707b(2): jz 0x75(%rip)
707d(3): mov %r14,%r8
7080(7): mov $0xffffffff,%rcx
7087(3): mov %r12,%rdx
708a(5): mov $0x2000,%esi
708f(3): mov %r13,%rdi
7092(5): mov %r9d,0x8(%rsp)
7097(5): call 0xc649(%rip)
709c(6): cmp $0x1fff,%rax
70a2(3): mov %rax,%rbx
70a5(5): mov 0x8(%rsp),%r9d
70aa(6): jnbe 0x38e(%rip)
70b0(5): movzx 0x0(%r13),%eax
70b5(5): mov $0x1,0x2f(%rsp)
70ba(4): cmp %al,(%r12)
70be(2): jnz 0x1c(%rip)
70c0(3): mov %r12,%rdi
70c3(5): mov %r9d,0x8(%rsp)
70c8(5): call 0xffffc338(%rip)
70cd(5): mov 0x8(%rsp),%r9d
70d2(3): cmp %rax,%rbx
70d5(5): setnz 0x2f(%rsp)
70da(3): test %r9d,%r9d
70dd(2): jz 0x21(%rip)
70df(3): mov %rbx,%rbp
70e2(5): jmp 0x121(%rip)
70e7(9): nop 0x0(%rax,%rax,1)
70f0(3): mov %r12,%rdi
70f3(3): mov %r12,%r13
70f6(5): call 0xffffc30a(%rip)
70fb(3): mov %rax,%rbx
70fe(6): cmp $0x0,0x20(%rsp)
7104(6): jz 0xb4(%rip)
710a(5): call 0xffffc2e6(%rip)
710f(4): cmp $0x1,%rax
7113(6): jnbe 0x205(%rip)
7119(5): lea 0x0(%r13,%rbx,1),%r12
711e(3): cmp %r12,%r13
7121(6): jnb 0x351(%rip)
7127(5): call 0xffffc739(%rip)
712c(2): xor %ebp,%ebp
712e(3): mov (%rax),%rcx
7131(3): mov %r13,%rax
7134(4): nop 0x0(%rax)
7138(3): movzx (%rax),%edx
713b(4): movzx 0x0(%rcx,%rdx,2),%edx
713f(5): and $0x4000,%dx
7144(4): cmp $0x1,%dx
7148(4): sbb $0xffffffff,%rbp
714c(4): add $0x1,%rax
7150(3): cmp %rax,%r12
7153(2): jnz 0xffffffe5(%rip)
7155(7): movzx 0x21a24c(%rip),%eax
715c(2): test %al,%al
715e(2): jz 0x13(%rip)
7160(7): movzx 0x21a242(%rip),%eax
7167(3): xor $0x1,%eax
716a(4): or 0x2f(%rsp),%al
716e(3): xor $0x1,%eax
7171(5): mov 0x38(%rsp),%rcx
7176(2): mov %al,(%rcx)
7178(5): mov 0x20(%rsp),%rax
717d(3): test %rax,%rax
7180(2): jz 0x5(%rip)
7182(3): mov %rbp,(%rax)
7185(5): mov 0x30(%rsp),%rax
718a(3): mov %r13,(%rax)
718d(3): mov %rbx,%rax
7190(5): mov 0x58(%rsp),%rbx
7195(9): xor $0x28,%rbx
719e(6): jnz 0x2db(%rip)
71a4(4): add $0x68,%rsp
71a8(1): pop %rbx
71a9(1): pop %rbp
71aa(2): pop %r12
71ac(2): pop %r13
71ae(2): pop %r14
71b0(2): pop %r15
71b2(1): ret near (%rsp)
71b3(5): nop 0x0(%rax,%rax,1)
71b8(7): cmp $0x0,0x21a1e9(%rip)
71bf(2): jnz 0xffffffa1(%rip)
71c1(5): mov 0x38(%rsp),%rax
71c6(3): mov $0x0,(%rax)
71c9(2): jmp 0xffffffbc(%rip)
71cb(5): nop 0x0(%rax,%rax,1)
71d0(2): test %ebx,%ebx
71d2(6): jnz 0x2ac(%rip)
71d8(3): mov %r12,%rdi
71db(5): call 0xffffc225(%rip)
71e0(6): cmp $0x1fff,%rax
71e6(3): mov %rax,%rbp
71e9(4): lea 0x1(%rax),%rdx
71ed(6): jnbe 0x22b(%rip)
71f3(3): mov %r12,%rsi
71f6(3): mov %r13,%rdi
71f9(5): call 0xffffc3f7(%rip)
71fe(5): mov $0x0,0x2f(%rsp)
7203(5): lea 0x0(%r13,%rbp,1),%rbx
7208(5): call 0xffffc1e8(%rip)
720d(4): cmp $0x1,%rax
7211(5): mov %rbx,0x8(%rsp)
7216(6): jbe 0x1ba(%rip)
721c(3): cmp %rbx,%r13
721f(6): jnb 0x24a(%rip)
7225(5): lea 0x4c(%rsp),%rax
722a(5): lea 0x50(%rsp),%r12
722f(3): mov %r13,%rbx
7232(3): mov %r13,%r15
7235(2): xor %ebp,%ebp
7237(5): mov %rax,0x18(%rsp)
723c(4): nop 0x0(%rax)
7240(4): movzx (%r15),%eax
7244(2): cmp $0x3f,%al
7246(6): jnle 0x12a(%rip)
724c(2): cmp $0x25,%al
724e(6): jnl 0x13a(%rip)
7254(3): lea 0xffffffe0(%rax),%edx
7257(3): cmp $0x3,%dl
725a(6): jbe 0x12e(%rip)
7260(9): mov $0x0,0x50(%rsp)
7269(7): nop 0x0(%rax)
7270(5): mov 0x8(%rsp),%rdx
7275(5): mov 0x18(%rsp),%rdi
727a(3): mov %r12,%rcx
727d(3): mov %r15,%rsi
7280(4): lea 0x1(%rbx),%r14
7284(3): sub %r15,%rdx
7287(5): call 0xe0c9(%rip)
728c(4): cmp $0xffffffff,%rax
7290(6): jz 0x110(%rip)
7296(4): cmp $0xfffffffe,%rax
729a(6): jz 0x11e(%rip)
72a0(3): test %rax,%rax
72a3(4): mov 0x4c(%rsp),%edi
72a7(5): mov %rax,0x10(%rsp)
72ac(6): jz 0xa4(%rip)
72b2(5): call 0xffffc3ae(%rip)
72b7(5): mov 0x10(%rsp),%rdx
72bc(2): test %eax,%eax
72be(4): lea 0x0(%r15,%rdx,1),%rcx
72c2(2): js 0x7e(%rip)
72c4(3): mov %rbx,%rdi
72c7(9): nop 0x0(%rax,%rax,1)
72d0(3): mov %r15,%rsi
72d3(1): movsb rsi(%ds,10),rdi(%es,10)
72d4(3): cmp %rcx,%rsi
72d7(3): mov %rsi,%r15
72da(2): jnz 0xfffffff6(%rip)
72dc(3): add %rdx,%rbx
72df(2): cwde 
72e1(3): add %rax,%rbp
72e4(3): mov %r12,%rdi
72e7(5): call 0xffffc539(%rip)
72ec(2): test %eax,%eax
72ee(2): jz 0xffffff82(%rip)
72f0(5): cmp 0x8(%rsp),%r15
72f5(6): jb 0xffffff4b(%rip)
72fb(7): movzx 0x21a0a6(%rip),%eax
7302(3): sub %r13,%rbx
7305(2): test %al,%al
7307(6): jz 0xfffffe6a(%rip)
730d(5): jmp 0xfffffe53(%rip)
7312(6): nop 0x0(%rax,%rax,1)
7318(2): xor %edx,%edx
731a(3): mov %rbx,%rsi
731d(3): mov %r13,%rdi
7320(5): call 0x8d40(%rip)
7325(3): movsxd %eax,%rbp
7328(7): movzx 0x21a079(%rip),%eax
732f(2): test %al,%al
7331(6): jz 0xfffffe40(%rip)
7337(5): jmp 0xfffffe29(%rip)
733c(4): nop 0x0(%rax)
7340(3): mov $0x3f,(%rbx)
7343(4): add $0x1,%rbp
7347(3): mov %r14,%rbx
734a(3): mov %rcx,%r15
734d(2): jmp 0xffffff97(%rip)
734f(1): nop 
7350(5): call 0xffffc310(%rip)
7355(2): test %eax,%eax
7357(4): lea 0x1(%r15),%rcx
735b(2): js 0xffffffe5(%rip)
735d(4): movzx (%r15),%edx
7361(3): mov %rcx,%r15
7364(2): mov %dl,(%rbx)
7366(3): mov %r14,%rbx
7369(5): jmp 0xffffff76(%rip)
736e(2): nop 
7370(2): cmp $0x41,%al
7372(6): jl 0xfffffeee(%rip)
7378(2): cmp $0x5f,%al
737a(2): jle 0xe(%rip)
737c(3): lea 0xffffff9f(%rax),%edx
737f(3): cmp $0x1d,%dl
7382(6): jnbe 0xfffffede(%rip)
7388(2): mov %al,(%rbx)
738a(4): add $0x1,%r15
738e(4): add $0x1,%rbp
7392(4): add $0x1,%rbx
7396(5): jmp 0xffffff5a(%rip)
739b(5): nop 0x0(%rax,%rax,1)
73a0(4): add $0x1,%r15
73a4(3): mov $0x3f,(%rbx)
73a7(4): add $0x1,%rbp
73ab(3): mov %r14,%rbx
73ae(5): jmp 0xffffff42(%rip)
73b3(5): nop 0x0(%rax,%rax,1)
73b8(3): mov $0x3f,(%rbx)
73bb(4): add $0x1,%rbp
73bf(5): mov 0x8(%rsp),%r15
73c4(2): jmp 0xffffffe7(%rip)
73c6(a): nop 0x0(%rax,%rax,1)
73d0(5): cmp 0x8(%rsp),%r13
73d5(2): jnb 0x26(%rip)
73d7(5): call 0xffffc489(%rip)
73dc(3): mov %r13,%rdx
73df(1): nop 
73e0(3): movzx (%rdx),%esi
73e3(3): mov (%rax),%rcx
73e6(5): test $0x40,0x1(%rcx,%rsi,2)
73eb(2): jnz 0x5(%rip)
73ed(3): mov $0x3f,(%rdx)
73f0(4): add $0x1,%rdx
73f4(5): cmp 0x8(%rsp),%rdx
73f9(2): jnz 0xffffffe7(%rip)
73fb(7): movzx 0x219fa6(%rip),%eax
7402(3): mov %rbp,%rbx
7405(2): test %al,%al
7407(6): jz 0xfffffd6a(%rip)
740d(5): jmp 0xfffffd53(%rip)
7412(6): nop 0x0(%rax,%rax,1)
7418(3): mov %rdx,%rdi
741b(5): mov %rdx,0x8(%rsp)
7420(5): call 0xd170(%rip)
7425(5): mov 0x8(%rsp),%rdx
742a(3): mov %rax,%r13
742d(5): jmp 0xfffffdc6(%rip)
7432(6): nop 0x0(%rax,%rax,1)
7438(4): lea 0x1(%rax),%r15
743c(3): mov %r15,%rdi
743f(5): call 0xd151(%rip)
7444(3): mov %r14,%r8
7447(7): mov $0xffffffff,%rcx
744e(3): mov %r12,%rdx
7451(3): mov %r15,%rsi
7454(3): mov %rax,%rdi
7457(3): mov %rax,%r13
745a(5): call 0xc286(%rip)
745f(5): mov 0x8(%rsp),%r9d
7464(5): jmp 0xfffffc4c(%rip)
7469(2): xor %ebx,%ebx
746b(2): xor %ebp,%ebp
746d(5): jmp 0xfffffce8(%rip)
7472(2): xor %ebp,%ebp
7474(5): jmp 0xfffffce1(%rip)
7479(5): call 0xffffbfa7(%rip)
747e(6): mov $0x1,%r9d
7484(5): jmp 0xfffffbf9(%rip)

"quote_name" :
7490(2): push %r15
7492(2): push %r14
7494(3): mov %rdi,%rax
7497(2): push %r13
7499(2): push %r12
749b(3): mov %rcx,%r14
749e(1): push %rbp
749f(1): push %rbx
74a0(3): mov %r9,%rbx
74a3(3): mov %r8d,%r15d
74a6(3): xor %r8d,%r8d
74a9(7): sub $0x2048,%rsp
74b0(4): mov %rdi,(%rsp)
74b4(5): lea 0x30(%rsp),%r13
74b9(5): lea 0x28(%rsp),%rdi
74be(5): lea 0x27(%rsp),%r9
74c3(8): mov 0x2080(%rsp),%r12
74cb(9): mov $0x28,%rcx
74d4(8): mov %rcx,0x2038(%rsp)
74dc(2): xor %ecx,%ecx
74de(2): mov %edx,%ecx
74e0(3): mov %rsi,%rdx
74e3(3): mov %rax,%rsi
74e6(5): mov %r13,0x28(%rsp)
74eb(5): call 0xfffffb35(%rip)
74f0(5): cmp $0x0,0x27(%rsp)
74f5(3): mov %rax,%rbp
74f8(2): jz 0xb(%rip)
74fa(3): test %r15b,%r15b
74fd(6): jnz 0x25b(%rip)
7503(3): test %r14,%r14
7506(2): jz 0x34(%rip)
7508(5): mov $0x4,%edi
750d(5): call 0xffffe163(%rip)
7512(2): test %al,%al
7514(6): jnz 0x2b4(%rip)
751a(7): lea 0x218b3f(%rip),%rdi
7521(5): call 0xfffff94f(%rip)
7526(3): mov %r14,%rdi
7529(5): call 0xfffff947(%rip)
752e(7): lea 0x218b3b(%rip),%rdi
7535(5): call 0xfffff93b(%rip)
753a(3): test %r12,%r12
753d(6): jz 0x24b(%rip)
7543(8): movzx 0x219e5d(%rip),%r14d
754b(3): test %r14b,%r14b
754e(6): jnz 0x1b2(%rip)
7554(3): mov %rbp,%r10
7557(3): xor %r9d,%r9d
755a(7): mov 0x219e27(%rip),%rdi
7561(2): xor %esi,%esi
7563(5): mov %r10,0x18(%rsp)
7568(5): mov %r9,0x10(%rsp)
756d(5): call 0xffffe5f3(%rip)
7572(5): mov $0x1,%esi
7577(3): mov %r12,%rdi
757a(3): mov %rax,%r15
757d(5): call 0xffffe5e3(%rip)
7582(3): cmp $0x2f,(%rax)
7585(3): mov %rax,%r11
7588(7): lea 0x1063e(%rip),%rcx
758f(7): lea 0x1031d(%rip),%rax
7596(7): lea 0x102fc(%rip),%rsi
759d(3): mov %r11,%r8
75a0(3): mov %r15,%rdx
75a3(5): mov $0x1,%edi
75a8(5): mov %r11,0x8(%rsp)
75ad(4): cmove %rax,%rcx
75b1(2): xor %eax,%eax
75b3(5): call 0xffffc15d(%rip)
75b8(3): mov %r15,%rdi
75bb(5): call 0xffffc2c5(%rip)
75c0(5): mov 0x8(%rsp),%r11
75c5(3): mov %r11,%rdi
75c8(5): call 0xffffc2b8(%rip)
75cd(3): test %rbx,%rbx
75d0(5): mov 0x10(%rsp),%r9
75d5(5): mov 0x18(%rsp),%r10
75da(6): jz 0x1c0(%rip)
75e0(7): cmp $0x0,0x219d31(%rip)
75e7(2): jz 0x26(%rip)
75e9(4): mov 0x18(%rbx),%rdx
75ed(4): mov 0x20(%rbx),%rax
75f1(3): sub %rdx,%rax
75f4(4): cmp $0x7,%rax
75f8(6): jbe 0x1f0(%rip)
75fe(7): mov 0x219bf3(%rip),%rax
7605(3): mov %rax,(%rdx)
7608(5): add $0x8,0x18(%rbx)
760d(5): mov 0x28(%rsp),%rdi
7612(7): mov 0x218c6f(%rip),%rcx
7619(3): mov %r10,%rdx
761c(5): mov $0x1,%esi
7621(3): add %r9,%rdi
7624(5): call 0xffffc0ac(%rip)
7629(7): mov 0x219bc8(%rip),%rax
7630(3): add %rbp,%rax
7633(7): cmp $0x0,0x219cde(%rip)
763a(7): mov %rax,0x219bb7(%rip)
7641(2): jz 0x1f(%rip)
7643(4): mov 0x18(%rbx),%rcx
7647(4): mov 0x20(%rbx),%rdx
764b(3): sub %rcx,%rdx
764e(4): cmp $0x7,%rdx
7652(6): jbe 0x1c6(%rip)
7658(3): mov %rax,(%rcx)
765b(5): add $0x8,0x18(%rbx)
7660(3): test %r12,%r12
7663(2): jz 0x4d(%rip)
7665(7): mov 0x218c1c(%rip),%rcx
766c(7): lea 0x1023a(%rip),%rdi
7673(5): mov $0x6,%edx
7678(5): mov $0x1,%esi
767d(5): call 0xffffc053(%rip)
7682(3): test %r14b,%r14b
7685(2): jz 0x2b(%rip)
7687(5): mov 0x28(%rsp),%rax
768c(7): mov 0x218bf5(%rip),%rdi
7693(5): movzx 0xffffffff(%rax,%rbp,1),%edx
7698(4): mov 0x28(%rdi),%rax
769c(4): cmp 0x30(%rdi),%rax
76a0(6): jnb 0x1b0(%rip)
76a6(4): lea 0x1(%rax),%rcx
76aa(4): mov %rcx,0x28(%rdi)
76ae(2): mov %dl,(%rax)
76b0(5): mov 0x28(%rsp),%rdi
76b5(4): cmp (%rsp),%rdi
76b9(2): jz 0xc(%rip)
76bb(3): cmp %r13,%rdi
76be(2): jz 0x7(%rip)
76c0(5): call 0xffffc1c0(%rip)
76c5(5): movzx 0x27(%rsp),%eax
76ca(3): add %rbp,%rax
76cd(8): mov 0x2038(%rsp),%rbx
76d5(9): xor $0x28,%rbx
76de(6): jnz 0x1ae(%rip)
76e4(7): add $0x2048,%rsp
76eb(1): pop %rbx
76ec(1): pop %rbp
76ed(2): pop %r12
76ef(2): pop %r13
76f1(2): pop %r14
76f3(2): pop %r15
76f5(1): ret near (%rsp)
76f6(a): nop 0x0(%rax,%rax,1)
7700(8): movzx 0x219ca1(%rip),%r14d
7708(3): test %r14b,%r14b
770b(6): jz 0xfffffe49(%rip)
7711(5): cmp $0x0,0x27(%rsp)
7716(6): jnz 0x122(%rip)
771c(5): mov 0x28(%rsp),%rax
7721(7): mov 0x218b60(%rip),%rdi
7728(4): lea 0xfffffffe(%rbp),%r10
772c(3): movzx (%rax),%edx
772f(4): mov 0x28(%rdi),%rax
7733(4): cmp 0x30(%rdi),%rax
7737(6): jnb 0x138(%rip)
773d(4): lea 0x1(%rax),%rcx
7741(6): mov $0x1,%r9d
7747(4): mov %rcx,0x28(%rdi)
774b(2): mov %dl,(%rax)
774d(5): jmp 0xfffffe0d(%rip)
7752(6): nop 0x0(%rax,%rax,1)
7758(7): mov 0x218b29(%rip),%rdi
775f(4): mov 0x28(%rdi),%rax
7763(4): cmp 0x30(%rdi),%rax
7767(6): jnb 0xf9(%rip)
776d(4): lea 0x1(%rax),%rdx
7771(4): mov %rdx,0x28(%rdi)
7775(3): mov $0x20,(%rax)
7778(8): add $0x1,0x219a78(%rip)
7780(5): jmp 0xfffffd83(%rip)
7785(3): nop (%rax)
7788(3): xor %r9d,%r9d
778b(3): xor %r14d,%r14d
778e(3): test %rbx,%rbx
7791(3): mov %rbp,%r10
7794(6): jnz 0xfffffe4c(%rip)
779a(5): mov 0x28(%rsp),%rdi
779f(7): mov 0x218ae2(%rip),%rcx
77a6(3): mov %r10,%rdx
77a9(5): mov $0x1,%esi
77ae(3): add %r9,%rdi
77b1(5): call 0xffffbf1f(%rip)
77b6(7): add %rbp,0x219a3b(%rip)
77bd(5): jmp 0xfffffea3(%rip)
77c2(6): nop 0x0(%rax,%rax,1)
77c8(7): lea 0x218891(%rip),%rdi
77cf(5): call 0xfffff6a1(%rip)
77d4(7): lea 0x218895(%rip),%rdi
77db(5): call 0xfffff695(%rip)
77e0(5): jmp 0xfffffd3a(%rip)
77e5(3): nop (%rax)
77e8(5): mov $0x8,%esi
77ed(3): mov %rbx,%rdi
77f0(5): mov %r10,0x10(%rsp)
77f5(5): mov %r9,0x8(%rsp)
77fa(5): call 0xdd36(%rip)
77ff(4): mov 0x18(%rbx),%rdx
7803(5): mov 0x10(%rsp),%r10
7808(5): mov 0x8(%rsp),%r9
780d(5): jmp 0xfffffdf1(%rip)
7812(6): nop 0x0(%rax,%rax,1)
7818(5): mov $0x8,%esi
781d(3): mov %rbx,%rdi
7820(5): call 0xdd10(%rip)
7825(4): mov 0x18(%rbx),%rcx
7829(7): mov 0x2199c8(%rip),%rax
7830(5): jmp 0xfffffe28(%rip)
7835(3): nop (%rax)
7838(3): mov %rbp,%r10
783b(3): xor %r9d,%r9d
783e(3): xor %r14d,%r14d
7841(5): jmp 0xfffffd19(%rip)
7846(a): nop 0x0(%rax,%rax,1)
7850(3): movzx %dl,%esi
7853(5): call 0xffffbc3d(%rip)
7858(5): jmp 0xfffffe58(%rip)
785d(3): nop (%rax)
7860(5): mov $0x20,%esi
7865(5): call 0xffffbc2b(%rip)
786a(5): jmp 0xffffff0e(%rip)
786f(3): movzx %dl,%esi
7872(5): mov %r10,0x8(%rsp)
7877(5): call 0xffffbc19(%rip)
787c(6): mov $0x1,%r9d
7882(5): mov 0x8(%rsp),%r10
7887(5): jmp 0xfffffcd3(%rip)
788c(5): call 0xffffbb94(%rip)

"print_name_with_quoting" :
78a0(2): push %r15
78a2(2): push %r14
78a4(3): mov %esi,%r15d
78a7(2): push %r13
78a9(2): push %r12
78ab(3): mov %rdi,%r14
78ae(1): push %rbp
78af(1): push %rbx
78b0(3): mov %rdx,%r13
78b3(3): mov %rcx,%r12
78b6(4): sub $0x18,%rsp
78ba(3): test %sil,%sil
78bd(7): movzx 0x219a4e(%rip),%eax
78c4(2): jz 0x5c(%rip)
78c6(2): test %al,%al
78c8(4): mov 0x8(%rdi),%rbp
78cc(6): jnz 0x17c(%rip)
78d2(7): mov 0xc4(%r14),%edx
78d9(7): mov 0x2199f0(%rip),%rsi
78e0(4): sub $0x8,%rsp
78e4(4): xor $0x1,%r15d
78e8(4): push 0x10(%r14)
78ec(3): mov %r13,%r9
78ef(4): movzx %r15b,%r8d
78f3(2): xor %ecx,%ecx
78f5(3): mov %rbp,%rdi
78f8(5): call 0xfffffb98(%rip)
78fd(3): mov %rax,%rbx
7900(5): call 0xfffff5e0(%rip)
7905(1): pop %rax
7906(1): pop %rdx
7907(4): add $0x18,%rsp
790b(3): mov %rbx,%rax
790e(1): pop %rbx
790f(1): pop %rbp
7910(2): pop %r12
7912(2): pop %r13
7914(2): pop %r14
7916(2): pop %r15
7918(1): ret near (%rsp)
7919(7): nop 0x0(%rax)
7920(2): test %al,%al
7922(3): mov (%rdi),%rbp
7925(2): jz 0xffffffad(%rip)
7927(7): cmp $0x0,0x219a62(%rip)
792e(7): movzx 0xb9(%rdi),%edx
7935(6): jnz 0x1d3(%rip)
793b(4): mov 0x30(%r14),%r8d
793f(8): movzx 0xb8(%r14),%ecx
7947(2): test %cl,%cl
7949(6): jnz 0x149(%rip)
794f(7): mov 0xa8(%r14),%ecx
7956(7): lea 0xed23(%rip),%rax
795d(3): mov 0x0(%rax,%rcx,4),%eax
7960(3): cmp $0x7,%eax
7963(3): setz %cl
7966(3): cmp $0x5,%eax
7969(6): jz 0x1b7(%rip)
796f(2): test %edx,%edx
7971(6): jnz 0x37b(%rip)
7977(2): test %cl,%cl
7979(6): jz 0x373(%rip)
797f(7): cmp $0x0,0x219a0a(%rip)
7986(5): mov $0xd0,%ecx
798b(2): jnz 0x1c(%rip)
798d(5): mov $0xd,%edi
7992(5): call 0xffffdcde(%rip)
7997(2): cmp $0x1,%al
7999(3): sbb %rcx,%rcx
799c(4): and $0xffffffa0,%rcx
79a0(7): add $0xd0,%rcx
79a7(7): lea 0x2186b2(%rip),%rbx
79ae(3): add %rbx,%rcx
79b1(5): cmp $0x0,0x8(%rcx)
79b6(2): jnz 0x16(%rip)
79b8(5): mov $0x4,%edi
79bd(5): call 0xffffdcb3(%rip)
79c2(2): test %al,%al
79c4(6): jz 0xffffff0e(%rip)
79ca(2): xor %ecx,%ecx
79cc(7): mov 0x2198fd(%rip),%rsi
79d3(7): mov 0xc4(%r14),%edx
79da(4): sub $0x8,%rsp
79de(4): xor $0x1,%r15d
79e2(4): push 0x10(%r14)
79e6(3): mov %rbp,%rdi
79e9(3): mov %r13,%r9
79ec(4): movzx %r15b,%r8d
79f0(5): call 0xfffffaa0(%rip)
79f5(3): mov %rax,%rbx
79f8(5): call 0xfffff4e8(%rip)
79fd(5): call 0xfffff423(%rip)
7a02(7): mov 0x2198a7(%rip),%rcx
7a09(1): pop %rsi
7a0a(1): pop %rdi
7a0b(3): test %rcx,%rcx
7a0e(6): jz 0xfffffef9(%rip)
7a14(2): xor %edx,%edx
7a16(3): mov %r12,%rax
7a19(3): div %rcx,%rax
7a1c(2): xor %edx,%edx
7a1e(3): mov %rax,%rsi
7a21(5): lea 0xffffffff(%rbx,%r12,1),%rax
7a26(3): div %rcx,%rax
7a29(3): cmp %rax,%rsi
7a2c(6): jz 0xfffffedb(%rip)
7a32(7): lea 0x218797(%rip),%rdi
7a39(5): call 0xfffff437(%rip)
7a3e(5): jmp 0xfffffec9(%rip)
7a43(5): nop 0x0(%rax,%rax,1)
7a48(7): cmp $0x0,0xb9(%rdi)
7a4f(7): mov 0xac(%rdi),%r8d
7a56(2): jnz 0x2a(%rip)
7a58(5): mov $0xc,%edi
7a5d(5): call 0xffffdc13(%rip)
7a62(2): test %al,%al
7a64(5): mov $0xffffffff,%edx
7a69(6): jz 0xfffffed6(%rip)
7a6f(5): mov $0xc0,%ecx
7a74(5): jmp 0xffffff33(%rip)
7a79(7): nop 0x0(%rax)
7a80(8): movzx 0xb8(%r14),%ecx
7a88(2): xor %edx,%edx
7a8a(2): test %cl,%cl
7a8c(6): jz 0xfffffec3(%rip)
7a92(3): mov %r8d,%eax
7a95(5): and $0xf000,%eax
7a9a(5): cmp $0x8000,%eax
7a9f(6): jz 0xf1(%rip)
7aa5(5): cmp $0x4000,%eax
7aaa(6): jz 0x166(%rip)
7ab0(5): cmp $0xa000,%eax
7ab5(6): jz 0x1bb(%rip)
7abb(5): cmp $0x1000,%eax
7ac0(5): mov $0x80,%ecx
7ac5(6): jz 0xfffffee2(%rip)
7acb(5): cmp $0xc000,%eax
7ad0(5): mov $0x90,%ecx
7ad5(6): jz 0xfffffed2(%rip)
7adb(5): cmp $0x6000,%eax
7ae0(5): mov $0xa0,%ecx
7ae5(6): jz 0xfffffec2(%rip)
7aeb(5): cmp $0x2000,%eax
7af0(5): mov $0xd0,%ecx
7af5(5): mov $0xb0,%ebx
7afa(4): cmove %rbx,%rcx
7afe(5): jmp 0xfffffea9(%rip)
7b03(5): nop 0x0(%rax,%rax,1)
7b08(2): test %dl,%dl
7b0a(6): jz 0xfffffe31(%rip)
7b10(7): mov 0xac(%r14),%r8d
7b17(5): jmp 0xfffffe28(%rip)
7b1c(4): nop 0x0(%rax)
7b20(3): mov %rbp,%rdi
7b23(5): call 0xffffb8dd(%rip)
7b28(7): mov 0x2197d9(%rip),%rbx
7b2f(3): mov %rax,%rcx
7b32(3): test %rbx,%rbx
7b35(2): jz 0x3c(%rip)
7b37(9): nop 0x0(%rax,%rax,1)
7b40(3): mov (%rbx),%rdx
7b43(3): cmp %rdx,%rcx
7b46(2): jb 0x22(%rip)
7b48(3): mov %rcx,%rdi
7b4b(4): mov 0x8(%rbx),%rsi
7b4f(5): mov %rcx,0x8(%rsp)
7b54(3): sub %rdx,%rdi
7b57(3): add %rbp,%rdi
7b5a(5): call 0x4976(%rip)
7b5f(2): test %eax,%eax
7b61(5): mov 0x8(%rsp),%rcx
7b66(2): jz 0x1a(%rip)
7b68(4): mov 0x20(%rbx),%rbx
7b6c(3): test %rbx,%rbx
7b6f(2): jnz 0xffffffd1(%rip)
7b71(5): mov $0x50,%ecx
7b76(5): jmp 0xfffffe31(%rip)
7b7b(5): nop 0x0(%rax,%rax,1)
7b80(4): lea 0x10(%rbx),%rcx
7b84(5): jmp 0xfffffe2d(%rip)
7b89(7): nop 0x0(%rax)
7b90(7): test $0x800,%r8d
7b97(2): jz 0x21(%rip)
7b99(5): mov $0x10,%edi
7b9e(5): call 0xffffdad2(%rip)
7ba3(2): test %al,%al
7ba5(2): jz 0x13(%rip)
7ba7(5): mov $0x100,%ecx
7bac(5): jmp 0xfffffdfb(%rip)
7bb1(7): nop 0x0(%rax)
7bb8(7): test $0x400,%r8d
7bbf(2): jnz 0x31(%rip)
7bc1(5): mov $0x15,%edi
7bc6(5): call 0xffffdaaa(%rip)
7bcb(2): test %al,%al
7bcd(6): jz 0xb3(%rip)
7bd3(8): cmp $0x0,0xc0(%r14)
7bdb(6): jz 0xa5(%rip)
7be1(5): mov $0x150,%ecx
7be6(5): jmp 0xfffffdc1(%rip)
7beb(5): nop 0x0(%rax,%rax,1)
7bf0(5): mov $0x11,%edi
7bf5(5): call 0xffffda7b(%rip)
7bfa(2): test %al,%al
7bfc(2): jz 0xffffffc5(%rip)
7bfe(5): mov $0x110,%ecx
7c03(5): jmp 0xfffffda4(%rip)
7c08(8): nop 0x0(%rax,%rax,1)
7c10(3): mov %r8d,%eax
7c13(5): and $0x202,%eax
7c18(5): cmp $0x202,%eax
7c1d(6): jz 0xb3(%rip)
7c23(4): test $0x2,%r8b
7c27(2): jz 0x19(%rip)
7c29(5): mov $0x13,%edi
7c2e(5): call 0xffffda42(%rip)
7c33(2): test %al,%al
7c35(5): mov $0x130,%ecx
7c3a(6): jnz 0xfffffd6d(%rip)
7c40(7): and $0x200,%r8d
7c47(5): mov $0x60,%ecx
7c4c(6): jz 0xfffffd5b(%rip)
7c52(5): mov $0x12,%edi
7c57(5): call 0xffffda19(%rip)
7c5c(2): cmp $0x1,%al
7c5e(3): sbb %rcx,%rcx
7c61(3): and $0x40,%cl
7c64(7): add $0x120,%rcx
7c6b(5): jmp 0xfffffd3c(%rip)
7c70(5): mov $0x7,%eax
7c75(5): jmp 0xfffffcfa(%rip)
7c7a(6): nop 0x0(%rax,%rax,1)
7c80(4): and $0x49,%r8d
7c84(2): jz 0x1c(%rip)
7c86(5): mov $0xe,%edi
7c8b(5): call 0xffffd9e5(%rip)
7c90(2): test %al,%al
7c92(2): jz 0xe(%rip)
7c94(5): mov $0xe0,%ecx
7c99(5): jmp 0xfffffd0e(%rip)
7c9e(2): nop 
7ca0(5): cmp $0x1,0x28(%r14)
7ca5(6): jbe 0xfffffe7b(%rip)
7cab(5): mov $0x16,%edi
7cb0(5): call 0xffffd9c0(%rip)
7cb5(2): test %al,%al
7cb7(6): jz 0xfffffe69(%rip)
7cbd(5): mov $0x160,%ecx
7cc2(5): jmp 0xfffffce5(%rip)
7cc7(9): nop 0x0(%rax,%rax,1)
7cd0(5): mov $0x14,%edi
7cd5(5): call 0xffffd99b(%rip)
7cda(2): test %al,%al
7cdc(5): mov $0x140,%ecx
7ce1(6): jnz 0xfffffcc6(%rip)
7ce7(5): jmp 0xffffff3c(%rip)
7cec(4): shl/sal $0x4,%rax
7cf0(3): mov %rax,%rcx
7cf3(5): jmp 0xfffffcb4(%rip)

"print_file_name_and_frills" :
7d00(1): push %rbp
7d01(1): push %rbx
7d02(3): mov %rsi,%rbp
7d05(3): mov %rdi,%rbx
7d08(7): sub $0x2a8,%rsp
7d0f(9): mov $0x28,%rax
7d18(8): mov %rax,0x298(%rsp)
7d20(2): xor %eax,%eax
7d22(5): call 0xfffff2ae(%rip)
7d27(7): cmp $0x0,0x2195ce(%rip)
7d2e(2): jz 0x43(%rip)
7d30(7): cmp $0x0,0xb8(%rbx)
7d37(7): lea 0xfb59(%rip),%rcx
7d3e(2): jz 0xf(%rip)
7d40(4): mov 0x20(%rbx),%rdi
7d44(3): test %rdi,%rdi
7d47(6): jnz 0x131(%rip)
7d4d(2): xor %edx,%edx
7d4f(7): cmp $0x4,0x2195e2(%rip)
7d56(2): jz 0x8(%rip)
7d58(6): mov 0x219602(%rip),%edx
7d5e(7): lea 0xfb5f(%rip),%rsi
7d65(5): mov $0x1,%edi
7d6a(2): xor %eax,%eax
7d6c(5): call 0xffffb9a4(%rip)
7d71(7): cmp $0x0,0x2195b4(%rip)
7d78(2): jz 0x3a(%rip)
7d7a(7): cmp $0x0,0xb8(%rbx)
7d81(7): lea 0xfb0f(%rip),%rcx
7d88(6): jnz 0xb8(%rip)
7d8e(2): xor %edx,%edx
7d90(7): cmp $0x4,0x2195a1(%rip)
7d97(2): jz 0x8(%rip)
7d99(6): mov 0x2195bd(%rip),%edx
7d9f(7): lea 0xfb1e(%rip),%rsi
7da6(5): mov $0x1,%edi
7dab(2): xor %eax,%eax
7dad(5): call 0xffffb963(%rip)
7db2(7): cmp $0x0,0x2195ac(%rip)
7db9(2): jz 0x2d(%rip)
7dbb(2): xor %edx,%edx
7dbd(7): cmp $0x4,0x219574(%rip)
7dc4(7): mov 0xb0(%rbx),%rcx
7dcb(2): jz 0x8(%rip)
7dcd(6): mov 0x219581(%rip),%edx
7dd3(7): lea 0xfaea(%rip),%rsi
7dda(5): mov $0x1,%edi
7ddf(2): xor %eax,%eax
7de1(5): call 0xffffb92f(%rip)
7de6(3): mov %rbp,%rcx
7de9(2): xor %edx,%edx
7deb(2): xor %esi,%esi
7ded(3): mov %rbx,%rdi
7df0(5): call 0xfffffab0(%rip)
7df5(3): mov %rax,%rbp
7df8(6): mov 0x219516(%rip),%eax
7dfe(2): test %eax,%eax
7e00(2): jz 0x1d(%rip)
7e02(7): movzx 0xb8(%rbx),%edi
7e09(6): mov 0xa8(%rbx),%edx
7e0f(3): mov 0x30(%rbx),%esi
7e12(5): call 0xffffeb1e(%rip)
7e17(3): movzx %al,%eax
7e1a(3): add %rax,%rbp
7e1d(8): mov 0x298(%rsp),%rbx
7e25(9): xor $0x28,%rbx
7e2e(3): mov %rbp,%rax
7e31(2): jnz 0x57(%rip)
7e33(7): add $0x2a8,%rsp
7e3a(1): pop %rbx
7e3b(1): pop %rbp
7e3c(1): ret near (%rsp)
7e3d(3): nop (%rax)
7e40(6): mov 0x2194e2(%rip),%edx
7e46(4): mov 0x58(%rbx),%rdi
7e4a(5): mov $0x200,%ecx
7e4f(7): mov 0x2194ca(%rip),%r8
7e56(3): mov %rsp,%rsi
7e59(5): call 0x6d67(%rip)
7e5e(2): xor %edx,%edx
7e60(7): cmp $0x4,0x2194d1(%rip)
7e67(3): mov %rax,%rcx
7e6a(6): jnz 0xffffff2f(%rip)
7e70(5): jmp 0xffffff2f(%rip)
7e75(3): nop (%rax)
7e78(3): mov %rsp,%rsi
7e7b(5): call 0x7d25(%rip)
7e80(3): mov %rax,%rcx
7e83(5): jmp 0xfffffeca(%rip)
7e88(5): call 0xffffb598(%rip)

"print_long_format" :
7e90(2): push %r15
7e92(2): push %r14
7e94(2): push %r13
7e96(2): push %r12
7e98(1): push %rbp
7e99(1): push %rbx
7e9a(3): mov %rdi,%rbp
7e9d(7): sub $0x1328,%rsp
7ea4(9): mov $0x28,%rax
7ead(8): mov %rax,0x1318(%rsp)
7eb5(2): xor %eax,%eax
7eb7(7): cmp $0x0,0xb8(%rdi)
7ebe(6): jz 0x3c2(%rip)
7ec4(8): lea 0xb4(%rsp),%r13
7ecc(4): lea 0x18(%rdi),%rdi
7ed0(3): mov %r13,%rsi
7ed3(5): call 0x517d(%rip)
7ed8(7): cmp $0x0,0x219485(%rip)
7edf(6): jnz 0x3f3(%rip)
7ee5(8): mov $0x0,0xbe(%rsp)
7eed(6): mov 0x219441(%rip),%eax
7ef3(3): cmp $0x1,%eax
7ef6(6): jz 0x412(%rip)
7efc(6): jb 0x44c(%rip)
7f02(3): cmp $0x2,%eax
7f05(6): jnz 0x963(%rip)
7f0b(4): mov 0x68(%rbp),%rax
7f0f(4): mov 0x60(%rbp),%rdx
7f13(5): mov %rax,0x28(%rsp)
7f18(5): mov %rdx,0x20(%rsp)
7f1d(7): cmp $0x0,0x2193d8(%rip)
7f24(7): movzx 0xb8(%rbp),%edx
7f2b(6): jz 0x409(%rip)
7f31(2): test %dl,%dl
7f33(7): lea 0xf95d(%rip),%r9
7f3a(2): jz 0xf(%rip)
7f3c(4): mov 0x20(%rbp),%rdi
7f40(3): test %rdi,%rdi
7f43(6): jnz 0x6c5(%rip)
7f49(8): lea 0x4d0(%rsp),%r12
7f51(7): mov 0x219408(%rip),%r8d
7f58(7): lea 0xf965(%rip),%rcx
7f5f(5): mov $0xe3b,%edx
7f64(5): mov $0x1,%esi
7f69(2): xor %eax,%eax
7f6b(3): mov %r12,%rdi
7f6e(3): mov %r12,%rbx
7f71(5): call 0xffffb8ff(%rip)
7f76(2): mov (%rbx),%eax
7f78(4): add $0x4,%rbx
7f7c(6): lea 0xfefefeff(%rax),%edx
7f82(2): not %eax
7f84(2): and %eax,%edx
7f86(6): and $0x80808080,%edx
7f8c(2): jz 0xffffffea(%rip)
7f8e(2): mov %edx,%eax
7f90(3): shr $0x10,%eax
7f93(6): test $0x8080,%edx
7f99(3): cmove %eax,%edx
7f9c(4): lea 0x2(%rbx),%rax
7fa0(4): cmove %rax,%rbx
7fa4(2): mov %edx,%eax
7fa6(2): add %dl,%al
7fa8(7): movzx 0xb8(%rbp),%edx
7faf(4): sbb $0x3,%rbx
7fb3(7): cmp $0x0,0x219372(%rip)
7fba(2): jz 0x7d(%rip)
7fbc(2): test %dl,%dl
7fbe(7): lea 0xf8d2(%rip),%r15
7fc5(6): jnz 0x6bb(%rip)
7fcb(7): mov 0x21938a(%rip),%r14d
7fd2(2): xor %esi,%esi
7fd4(3): mov %r15,%rdi
7fd7(5): call 0x8249(%rip)
7fdc(3): sub %eax,%r14d
7fdf(3): test %r14d,%r14d
7fe2(3): mov %r14d,%eax
7fe5(6): jle 0x51b(%rip)
7feb(3): sub $0x1,%eax
7fee(3): mov %rax,%rdx
7ff1(5): lea 0x1(%rbx,%rax,1),%rcx
7ff6(3): mov %rbx,%rax
7ff9(7): nop 0x0(%rax)
8000(4): add $0x1,%rax
8004(4): mov $0x20,0xffffffff(%rax)
8008(3): cmp %rax,%rcx
800b(2): jnz 0xfffffff5(%rip)
800d(3): movsxd %edx,%rax
8010(5): lea 0x1(%rbx,%rax,1),%rdx
8015(4): add $0x1,%r15
8019(5): movzx 0xffffffff(%r15),%eax
801e(4): lea 0x1(%rdx),%rbx
8022(2): test %al,%al
8024(3): mov %al,0xffffffff(%rbx)
8027(6): jnz 0x4d9(%rip)
802d(3): mov $0x20,(%rdx)
8030(7): movzx 0xb8(%rbp),%edx
8037(2): test %dl,%dl
8039(7): lea 0xf857(%rip),%rax
8040(6): jnz 0x4a8(%rip)
8046(4): sub $0x8,%rsp
804a(7): mov 0x219307(%rip),%r9d
8051(7): lea 0xf85c(%rip),%rcx
8058(1): push %rax
8059(3): mov %r13,%r8
805c(3): mov %rbx,%rdi
805f(7): mov $0xffffffff,%rdx
8066(5): mov $0x1,%esi
806b(2): xor %eax,%eax
806d(5): call 0xffffb803(%rip)
8072(3): mov %rbx,%rdi
8075(5): call 0xffffb38b(%rip)
807a(3): add %rax,%rbx
807d(7): cmp $0x0,0x219294(%rip)
8084(2): pop %r8
8086(2): pop %r9
8088(6): jnz 0x430(%rip)
808e(7): cmp $0x0,0x217f8c(%rip)
8095(2): jnz 0x1b(%rip)
8097(7): cmp $0x0,0x217f82(%rip)
809e(2): jnz 0x12(%rip)
80a0(7): cmp $0x0,0x219287(%rip)
80a7(6): jz 0x549(%rip)
80ad(3): nop (%rax)
80b0(7): mov 0x2181d1(%rip),%rsi
80b7(3): mov %r12,%rdi
80ba(3): sub %r12,%rbx
80bd(5): call 0xffffb4b3(%rip)
80c2(7): add %rbx,0x21912f(%rip)
80c9(7): cmp $0x0,0x217f51(%rip)
80d0(6): jnz 0x4d0(%rip)
80d6(7): cmp $0x0,0x217f43(%rip)
80dd(6): jnz 0x473(%rip)
80e3(7): cmp $0x0,0x219244(%rip)
80ea(6): jnz 0x446(%rip)
80f0(7): cmp $0x0,0x21926e(%rip)
80f7(3): mov %r12,%rbx
80fa(6): jnz 0x416(%rip)
8100(7): cmp $0x0,0xb8(%rbp)
8107(6): jz 0x259(%rip)
810d(3): mov 0x30(%rbp),%eax
8110(5): and $0xb000,%eax
8115(5): cmp $0x2000,%eax
811a(6): jz 0x596(%rip)
8120(4): mov 0x48(%rbp),%rdi
8124(7): mov 0x217eed(%rip),%r8
812b(8): lea 0xe0(%rsp),%rsi
8133(6): mov 0x2191e3(%rip),%edx
8139(5): mov $0x1,%ecx
813e(5): call 0x6a82(%rip)
8143(3): mov %rax,%r14
8146(7): mov 0x2191ef(%rip),%r13d
814d(2): xor %esi,%esi
814f(3): mov %r14,%rdi
8152(5): call 0x80ce(%rip)
8157(3): sub %eax,%r13d
815a(3): test %r13d,%r13d
815d(3): mov %r13d,%eax
8160(2): jle 0x25(%rip)
8162(3): sub $0x1,%eax
8165(3): mov %rax,%rdx
8168(5): lea 0x1(%rbx,%rax,1),%rcx
816d(3): mov %rbx,%rax
8170(4): add $0x1,%rax
8174(4): mov $0x20,0xffffffff(%rax)
8178(3): cmp %rcx,%rax
817b(2): jnz 0xfffffff5(%rip)
817d(3): movsxd %edx,%rax
8180(5): lea 0x1(%rbx,%rax,1),%rbx
8185(4): add $0x1,%r14
8189(5): movzx 0xffffffff(%r14),%eax
818e(4): lea 0x1(%rbx),%r13
8192(2): test %al,%al
8194(4): mov %al,0xffffffff(%r13)
8198(6): jnz 0x1d8(%rip)
819e(3): mov $0x20,(%rbx)
81a1(5): mov $0x1,0x0(%r13)
81a6(7): cmp $0x0,0xb8(%rbp)
81ad(7): lea 0xf6e3(%rip),%rbx
81b4(6): jnz 0x23c(%rip)
81ba(7): mov 0x217e53(%rip),%r8d
81c1(3): test %r8d,%r8d
81c4(6): js 0x5bc(%rip)
81ca(7): lea 0xf6f3(%rip),%rcx
81d1(3): mov %rbx,%r9
81d4(7): mov $0xffffffff,%rdx
81db(5): mov $0x1,%esi
81e0(3): mov %r13,%rdi
81e3(2): xor %eax,%eax
81e5(5): call 0xffffb68b(%rip)
81ea(3): mov %r13,%rdi
81ed(5): call 0xffffb213(%rip)
81f2(5): lea 0x0(%r13,%rax,1),%rbx
81f7(7): mov 0x21808a(%rip),%rsi
81fe(3): mov %r12,%rdi
8201(3): sub %r12,%rbx
8204(5): call 0xffffb36c(%rip)
8209(7): lea 0x218f90(%rip),%rdx
8210(2): xor %esi,%esi
8212(3): mov %rbx,%rcx
8215(3): mov %rbp,%rdi
8218(7): add %rbx,0x218fd9(%rip)
821f(5): call 0xfffff681(%rip)
8224(6): mov 0xa8(%rbp),%edx
822a(3): mov %rax,%r12
822d(3): cmp $0x6,%edx
8230(6): jz 0x150(%rip)
8236(6): mov 0x2190d8(%rip),%eax
823c(2): test %eax,%eax
823e(2): jz 0x11(%rip)
8240(7): movzx 0xb8(%rbp),%edi
8247(3): mov 0x30(%rbp),%esi
824a(5): call 0xffffe6e6(%rip)
824f(8): mov 0x1318(%rsp),%rax
8257(9): xor $0x28,%rax
8260(6): jnz 0x603(%rip)
8266(7): add $0x1328,%rsp
826d(1): pop %rbx
826e(1): pop %rbp
826f(2): pop %r12
8271(2): pop %r13
8273(2): pop %r14
8275(2): pop %r15
8277(1): ret near (%rsp)
8278(8): nop 0x0(%rax,%rax,1)
8280(6): mov 0xa8(%rdi),%eax
8286(7): lea 0xe4e3(%rip),%rdx
828d(7): cmp $0x0,0x2190d0(%rip)
8294(8): lea 0xb4(%rsp),%r13
829c(6): mov $0x3f3f,%r10d
82a2(4): movzx 0x0(%rdx,%rax,1),%eax
82a6(7): mov %al,0xb4(%rsp)
82ad(a): mov $0x4557430888798830399,%rax
82b7(8): mov %rax,0xb5(%rsp)
82bf(5): mov %r10w,0x9(%r13)
82c4(8): mov $0x0,0xbf(%rsp)
82cc(6): jz 0xfffffc19(%rip)
82d2(6): mov 0xbc(%rbp),%eax
82d8(3): cmp $0x1,%eax
82db(6): jz 0x305(%rip)
82e1(3): cmp $0x2,%eax
82e4(6): jnz 0xfffffc09(%rip)
82ea(6): mov 0x219044(%rip),%eax
82f0(8): mov $0x2b,0xbe(%rsp)
82f8(3): cmp $0x1,%eax
82fb(6): jnz 0xfffffc01(%rip)
8301(7): nop 0x0(%rax)
8308(7): cmp $0x0,0x218fed(%rip)
830f(7): mov 0x80(%rbp),%rdx
8316(7): mov 0x88(%rbp),%rax
831d(5): mov %rdx,0x20(%rsp)
8322(7): movzx 0xb8(%rbp),%edx
8329(5): mov %rax,0x28(%rsp)
832e(6): jnz 0xfffffc03(%rip)
8334(8): lea 0x4d0(%rsp),%r12
833c(3): mov %r12,%rbx
833f(5): jmp 0xfffffc74(%rip)
8344(4): nop 0x0(%rax)
8348(4): mov 0x78(%rbp),%rax
834c(4): mov 0x70(%rbp),%rdx
8350(5): mov %rax,0x28(%rsp)
8355(5): mov %rdx,0x20(%rsp)
835a(5): jmp 0xfffffbc3(%rip)
835f(1): nop 
8360(7): lea 0xf530(%rip),%r14
8367(5): jmp 0xfffffddf(%rip)
836c(4): nop 0x0(%rax)
8370(3): mov %r13,%rbx
8373(5): jmp 0xfffffe12(%rip)
8378(8): nop 0x0(%rax,%rax,1)
8380(5): cmp $0x0,0x8(%rbp)
8385(6): jz 0xfffffeca(%rip)
838b(7): mov 0x217ef6(%rip),%rcx
8392(7): lea 0xf530(%rip),%rdi
8399(5): mov $0x4,%edx
839e(5): mov $0x1,%esi
83a3(5): call 0xffffb32d(%rip)
83a8(5): lea 0x4(%rbx,%r12,1),%rcx
83ad(2): xor %edx,%edx
83af(5): mov $0x1,%esi
83b4(3): mov %rbp,%rdi
83b7(8): add $0x4,0x218e39(%rip)
83bf(5): call 0xfffff4e1(%rip)
83c4(6): mov 0x218f4a(%rip),%edx
83ca(2): test %edx,%edx
83cc(6): jz 0xfffffe83(%rip)
83d2(6): mov 0xac(%rbp),%esi
83d8(2): xor %edx,%edx
83da(5): mov $0x1,%edi
83df(5): call 0xffffe551(%rip)
83e4(5): jmp 0xfffffe6b(%rip)
83e9(7): nop 0x0(%rax)
83f0(5): lea 0x30(%rsp),%rbx
83f5(7): mov 0x218eac(%rip),%rdi
83fc(5): lea 0x20(%rsp),%rsi
8401(3): mov %rbx,%rdx
8404(5): call 0xd67c(%rip)
8409(3): test %rax,%rax
840c(6): jz 0x1b4(%rip)
8412(7): mov 0x218f57(%rip),%rcx
8419(5): mov 0x20(%rsp),%rdx
841e(3): cmp %rdx,%rcx
8421(6): jl 0x1ff(%rip)
8427(7): mov 0x218f4a(%rip),%rdi
842e(5): mov 0x28(%rsp),%r9
8433(6): jnle 0x3cd(%rip)
8439(3): cmp %r9d,%edi
843c(6): js 0x1e4(%rip)
8442(7): lea 0xff0f3d54(%rcx),%rax
8449(3): cmp %rdx,%rax
844c(6): jl 0x221(%rip)
8452(5): mov $0x0,%eax
8457(6): jle 0x3c9(%rip)
845d(3): nop (%rax)
8460(7): cmp $0x0,0x217f61(%rip)
8467(7): mov 0x218e3a(%rip),%r8
846e(6): jz 0x302(%rip)
8474(4): lea 0x0(%rax,%rax,1),%rdx
8478(3): add %rdx,%rax
847b(5): movsxd 0x40(%rsp),%rdx
8480(4): lea 0x0(%rdx,%rax,4),%rdx
8484(7): lea 0x217f55(%rip),%rax
848b(4): shl/sal $0x7,%rdx
848f(3): add %rax,%rdx
8492(3): mov %rbx,%rcx
8495(5): mov $0x3e9,%esi
849a(3): mov %r13,%rdi
849d(5): call 0x9b63(%rip)
84a2(3): test %rax,%rax
84a5(6): jz 0x11b(%rip)
84ab(3): add %rax,%r13
84ae(5): jmp 0x11d(%rip)
84b3(5): nop 0x0(%rax,%rax,1)
84b8(7): mov 0x217dc9(%rip),%rcx
84bf(7): lea 0xf3f6(%rip),%rdi
84c6(5): mov $0x2,%edx
84cb(5): mov $0x1,%esi
84d0(5): call 0xffffb200(%rip)
84d5(8): add $0x2,0x218d1b(%rip)
84dd(5): jmp 0xfffffbb1(%rip)
84e2(6): nop 0x0(%rax,%rax,1)
84e8(4): mov 0x28(%rbp),%rdi
84ec(8): lea 0xe0(%rsp),%rsi
84f4(5): call 0x76ac(%rip)
84f9(5): jmp 0xfffffb4d(%rip)
84fe(2): nop 
8500(3): mov %rbx,%rdx
8503(5): jmp 0xfffffb12(%rip)
8508(8): nop 0x0(%rax,%rax,1)
8510(7): mov 0xb0(%rbp),%rdi
8517(6): mov 0x218e37(%rip),%edx
851d(2): xor %esi,%esi
851f(5): call 0xffffdcc1(%rip)
8524(5): jmp 0xfffffbdc(%rip)
8529(7): nop 0x0(%rax)
8530(7): movzx 0xb8(%rbp),%edx
8537(3): mov 0x34(%rbp),%edi
853a(6): mov 0x218e08(%rip),%esi
8540(5): call 0xffffdd60(%rip)
8545(5): jmp 0xfffffbab(%rip)
854a(6): nop 0x0(%rax,%rax,1)
8550(7): cmp $0x0,0xb8(%rbp)
8557(6): mov 0x218def(%rip),%edx
855d(7): lea 0xf333(%rip),%rdi
8564(3): mov 0x38(%rbp),%esi
8567(2): jz 0x29(%rip)
8569(2): xor %edi,%edi
856b(7): cmp $0x0,0x218dbb(%rip)
8572(2): jnz 0x1e(%rip)
8574(2): mov %esi,%edi
8576(5): mov %rsi,0x8(%rsp)
857b(4): mov %edx,0x4(%rsp)
857f(5): call 0x73e1(%rip)
8584(5): mov 0x8(%rsp),%rsi
8589(4): mov 0x4(%rsp),%edx
858d(3): mov %rax,%rdi
8590(5): call 0xffffdc50(%rip)
8595(5): jmp 0xfffffb4e(%rip)
859a(6): nop 0x0(%rax,%rax,1)
85a0(7): movzx 0xb8(%rbp),%edx
85a7(3): mov 0x34(%rbp),%edi
85aa(6): mov 0x218da0(%rip),%esi
85b0(5): call 0xffffdcf0(%rip)
85b5(5): jmp 0xfffffb21(%rip)
85ba(6): nop 0x0(%rax,%rax,1)
85c0(5): cmp $0x0,0x0(%r13)
85c5(6): jnz 0x2a8(%rip)
85cb(5): mov $0x20,%ecx
85d0(4): lea 0x1(%r13),%rbx
85d4(5): mov %cx,0x0(%r13)
85d9(5): jmp 0xfffffc1e(%rip)
85de(2): nop 
85e0(8): mov $0x2e,0xbe(%rsp)
85e8(5): jmp 0xfffff905(%rip)
85ed(3): nop (%rax)
85f0(7): cmp $0x0,0x218d6e(%rip)
85f7(6): jz 0xfffffb09(%rip)
85fd(5): jmp 0xfffffab3(%rip)
8602(6): nop 0x0(%rax,%rax,1)
8608(8): lea 0xe0(%rsp),%rsi
8610(5): call 0x7590(%rip)
8615(3): mov %rax,%r9
8618(5): jmp 0xfffff931(%rip)
861d(3): nop (%rax)
8620(7): lea 0x218d49(%rip),%rdi
8627(5): call 0x5059(%rip)
862c(7): mov 0x218d3d(%rip),%rcx
8633(5): mov 0x20(%rsp),%rdx
8638(7): mov 0x218d39(%rip),%rdi
863f(5): mov 0x28(%rsp),%r9
8644(7): lea 0xff0f3d54(%rcx),%rsi
864b(3): cmp %rdx,%rsi
864e(6): jnl 0x1c7(%rip)
8654(3): cmp %rcx,%rdx
8657(5): mov $0x1,%eax
865c(6): jl 0xfffffe04(%rip)
8662(5): mov $0x0,%eax
8667(6): jnle 0xfffffdf9(%rip)
866d(3): mov %r9d,%eax
8670(2): sub %edi,%eax
8672(3): shr $0x1f,%eax
8675(5): jmp 0xfffffdeb(%rip)
867a(6): nop 0x0(%rax,%rax,1)
8680(4): mov 0x58(%rbp),%rdi
8684(7): mov 0x218c95(%rip),%r8
868b(8): lea 0xe0(%rsp),%rsi
8693(6): mov 0x218c8f(%rip),%edx
8699(5): mov $0x200,%ecx
869e(5): call 0x6522(%rip)
86a3(3): mov %rax,%r15
86a6(5): jmp 0xfffff925(%rip)
86ab(5): nop 0x0(%rax,%rax,1)
86b0(6): mov 0x218c8e(%rip),%edx
86b6(6): mov 0x218c84(%rip),%eax
86bc(8): lea 0xe0(%rsp),%rsi
86c4(7): mov 0x218c71(%rip),%r13d
86cb(4): lea 0x2(%rdx,%rax,1),%eax
86cf(3): sub %eax,%r13d
86d2(4): mov 0x40(%rbp),%rax
86d6(3): movzx %al,%edx
86d9(4): shr $0xc,%rax
86dd(3): mov %rax,%rdi
86e0(3): xor %dil,%dil
86e3(2): or %edx,%edi
86e5(5): call 0x74bb(%rip)
86ea(3): mov %rax,%r15
86ed(4): mov 0x40(%rbp),%rax
86f1(8): lea 0xc0(%rsp),%rsi
86f9(7): mov 0x218c40(%rip),%r14d
8700(3): mov %rax,%rdi
8703(4): shr $0x20,%rax
8707(4): shr $0x8,%rdi
870b(2): mov %edi,%edx
870d(3): mov %rax,%rdi
8710(6): and $0xfff,%edx
8716(6): and $0xfffff000,%edi
871c(2): or %edx,%edi
871e(5): call 0x7482(%rip)
8723(3): test %r13d,%r13d
8726(6): mov $0x0,%r8d
872c(2): push %r15
872e(4): cmovns %r13d,%r8d
8732(7): add 0x218c0b(%rip),%r8d
8739(2): push %r14
873b(7): lea 0xf17d(%rip),%rcx
8742(3): mov %rax,%r9
8745(5): mov $0x1,%esi
874a(3): mov %rbx,%rdi
874d(7): mov $0xffffffff,%rdx
8754(2): xor %eax,%eax
8756(5): call 0xffffb11a(%rip)
875b(7): movsxd 0x218bda(%rip),%rax
8762(1): pop %rsi
8763(1): pop %rdi
8764(5): lea 0x1(%rbx,%rax,1),%r13
8769(5): jmp 0xfffffa38(%rip)
876e(2): nop 
8770(7): lea 0x2178c9(%rip),%rdx
8777(4): mov 0x0(%rdx,%rax,8),%rdx
877b(5): jmp 0xfffffd17(%rip)
8780(5): lea 0x70(%rsp),%r15
8785(7): mov 0x218b1c(%rip),%rdi
878c(5): lea 0x18(%rsp),%rsi
8791(9): mov $0x0,0x18(%rsp)
879a(3): mov %r15,%rdx
879d(5): call 0xd2e3(%rip)
87a2(3): test %rax,%rax
87a5(2): jz 0x39(%rip)
87a7(7): cmp $0x0,0x217c1a(%rip)
87ae(7): mov 0x218af3(%rip),%r8
87b5(7): mov 0x217884(%rip),%rdx
87bc(2): jnz 0x74(%rip)
87be(8): lea 0xe0(%rsp),%r14
87c6(3): xor %r9d,%r9d
87c9(3): mov %r15,%rcx
87cc(5): mov $0x3e9,%esi
87d1(3): mov %r14,%rdi
87d4(5): call 0x982c(%rip)
87d9(3): test %rax,%rax
87dc(2): jnz 0x6f(%rip)
87de(7): mov 0x21782f(%rip),%r8d
87e5(3): test %r8d,%r8d
87e8(6): jns 0xfffff9e2(%rip)
87ee(a): mov $0x0,0x21781c(%rip)
87f8(3): xor %r8d,%r8d
87fb(5): jmp 0xfffff9cf(%rip)
8800(7): lea 0xff0f3d54(%rcx),%rsi
8807(5): mov $0x1,%eax
880c(3): cmp %rdx,%rsi
880f(6): jl 0xfffffc51(%rip)
8815(2): xor %eax,%eax
8817(3): cmp %rdx,%rsi
881a(6): jnle 0xfffffc46(%rip)
8820(2): xor %eax,%eax
8822(3): cmp %r9d,%edi
8825(6): jns 0xfffffc3b(%rip)
882b(5): jmp 0xfffffe29(%rip)
8830(8): movsxd 0x80(%rsp),%rdx
8838(7): lea 0x217ba1(%rip),%rax
883f(4): shl/sal $0x7,%rdx
8843(3): add %rax,%rdx
8846(5): jmp 0xffffff78(%rip)
884b(2): xor %edx,%edx
884d(3): mov %rax,%rsi
8850(3): mov %r14,%rdi
8853(5): call 0x780d(%rip)
8858(3): mov %eax,%r8d
885b(6): mov %eax,0x2177b3(%rip)
8861(2): jmp 0xffffff84(%rip)
8863(5): call 0xffffabbd(%rip)
8868(5): call 0xffffaa28(%rip)
886d(7): cmp $0x0,0xb8(%rbp)
8874(7): lea 0xf01c(%rip),%rbx
887b(6): jz 0xfffff93f(%rip)
8881(5): mov 0x20(%rsp),%rdi
8886(8): lea 0xc0(%rsp),%rsi
888e(5): call 0x7272(%rip)
8893(3): mov %rax,%rbx
8896(5): jmp 0xfffff924(%rip)

"quote_name_width" :
88a0(1): push %rbp
88a1(1): push %rbx
88a2(3): mov %rdi,%rbp
88a5(2): mov %edx,%ecx
88a7(3): mov %rsi,%rdx
88aa(3): mov %rbp,%rsi
88ad(7): sub $0x2038,%rsp
88b4(5): lea 0x20(%rsp),%rbx
88b9(5): lea 0x10(%rsp),%rdi
88be(5): lea 0xf(%rsp),%r9
88c3(5): lea 0x18(%rsp),%r8
88c8(9): mov $0x28,%rax
88d1(8): mov %rax,0x2028(%rsp)
88d9(2): xor %eax,%eax
88db(5): mov %rbx,0x10(%rsp)
88e0(5): call 0xffffe740(%rip)
88e5(5): mov 0x10(%rsp),%rdi
88ea(3): cmp %rbx,%rdi
88ed(2): jz 0xc(%rip)
88ef(3): cmp %rbp,%rdi
88f2(2): jz 0x7(%rip)
88f4(5): call 0xffffaf8c(%rip)
88f9(5): movzx 0xf(%rsp),%eax
88fe(5): add 0x18(%rsp),%rax
8903(8): mov 0x2028(%rsp),%rcx
890b(9): xor $0x28,%rcx
8914(2): jnz 0xc(%rip)
8916(7): add $0x2038,%rsp
891d(1): pop %rbx
891e(1): pop %rbp
891f(1): ret near (%rsp)
8920(5): call 0xffffab00(%rip)

"length_of_file_name_and_frills" :
8930(1): push %rbp
8931(1): push %rbx
8932(3): mov %rdi,%rbp
8935(7): sub $0x2a8,%rsp
893c(9): mov $0x28,%rax
8945(8): mov %rax,0x298(%rsp)
894d(2): xor %eax,%eax
894f(7): cmp $0x0,0x2189a6(%rip)
8956(6): jz 0xb2(%rip)
895c(7): cmp $0x4,0x2189d5(%rip)
8963(6): jz 0x13d(%rip)
8969(7): movsxd 0x2189f0(%rip),%rbx
8970(4): add $0x1,%rbx
8974(7): cmp $0x0,0x2189b1(%rip)
897b(6): jz 0x10d(%rip)
8981(7): movsxd 0x2189d4(%rip),%rax
8988(4): add $0x1,%rax
898c(3): add %rax,%rbx
898f(7): cmp $0x0,0x2189cf(%rip)
8996(6): jnz 0xd2(%rip)
899c(6): mov 0xc4(%rbp),%edx
89a2(7): mov 0x218927(%rip),%rsi
89a9(4): mov 0x0(%rbp),%rdi
89ad(5): call 0xfffffef3(%rip)
89b2(3): add %rax,%rbx
89b5(6): mov 0x218959(%rip),%eax
89bb(2): test %eax,%eax
89bd(2): jz 0x22(%rip)
89bf(7): movzx 0xb8(%rbp),%edi
89c6(6): mov 0xa8(%rbp),%edx
89cc(3): mov 0x30(%rbp),%esi
89cf(5): call 0xffffde61(%rip)
89d4(2): test %al,%al
89d6(3): setnz %al
89d9(3): movzx %al,%eax
89dc(3): add %rax,%rbx
89df(8): mov 0x298(%rsp),%rcx
89e7(9): xor $0x28,%rcx
89f0(3): mov %rbx,%rax
89f3(6): jnz 0xdf(%rip)
89f9(7): add $0x2a8,%rsp
8a00(1): pop %rbx
8a01(1): pop %rbp
8a02(1): ret near (%rsp)
8a03(5): nop 0x0(%rax,%rax,1)
8a08(2): xor %ebx,%ebx
8a0a(7): cmp $0x0,0x21891b(%rip)
8a11(6): jz 0xffffff7e(%rip)
8a17(7): cmp $0x4,0x21891a(%rip)
8a1e(6): jnz 0xffffff63(%rip)
8a24(7): cmp $0x0,0xb8(%rbp)
8a2b(5): mov $0x2,%eax
8a30(6): jz 0xffffff5c(%rip)
8a36(4): mov 0x58(%rbp),%rdi
8a3a(7): mov 0x2188df(%rip),%r8
8a41(3): mov %rsp,%rsi
8a44(6): mov 0x2188de(%rip),%edx
8a4a(5): mov $0x200,%ecx
8a4f(5): call 0x6171(%rip)
8a54(3): mov %rax,%rdi
8a57(5): call 0xffffa9a9(%rip)
8a5c(4): add $0x1,%rax
8a60(5): jmp 0xffffff2c(%rip)
8a65(3): nop (%rax)
8a68(7): cmp $0x4,0x2188c9(%rip)
8a6f(2): jz 0x51(%rip)
8a71(7): movsxd 0x2188dc(%rip),%rax
8a78(4): add $0x1,%rax
8a7c(3): add %rax,%rbx
8a7f(5): jmp 0xffffff1d(%rip)
8a84(4): nop 0x0(%rax)
8a88(7): cmp $0x0,0x2188d6(%rip)
8a8f(2): jnz 0xffffffe2(%rip)
8a91(5): jmp 0xffffff0b(%rip)
8a96(a): nop 0x0(%rax,%rax,1)
8aa0(4): mov 0x20(%rdi),%rdi
8aa4(3): mov %rsp,%rsi
8aa7(5): call 0x70f9(%rip)
8aac(3): mov %rax,%rdi
8aaf(5): call 0xffffa951(%rip)
8ab4(4): lea 0x1(%rax),%rbx
8ab8(5): jmp 0xffffff52(%rip)
8abd(3): nop (%rax)
8ac0(7): mov 0xb0(%rbp),%rdi
8ac7(5): call 0xffffa939(%rip)
8acc(4): add $0x1,%rax
8ad0(2): jmp 0xffffffac(%rip)
8ad2(5): call 0xffffa94e(%rip)

"calculate_columns" :
8ae0(7): mov 0x2188c9(%rip),%r9
8ae7(7): mov 0x218712(%rip),%rcx
8aee(2): push %r14
8af0(2): push %r13
8af2(2): push %r12
8af4(1): push %rbp
8af5(3): mov %edi,%r12d
8af8(3): cmp %rcx,%r9
8afb(1): push %rbx
8afc(3): mov %rcx,%rbx
8aff(4): cmovbe %r9,%rbx
8b03(7): cmp 0x2177d6(%rip),%rbx
8b0a(6): jbe 0x11f(%rip)
8b10(3): mov %rcx,%rax
8b13(7): mov 0x2186ee(%rip),%rdi
8b1a(3): shr $0x1,%rax
8b1d(3): cmp %rax,%rbx
8b20(6): jb 0x270(%rip)
8b26(5): mov $0x18,%edx
8b2b(2): xor %esi,%esi
8b2d(3): mov %rdx,%rax
8b30(3): mul %rax,%rcx,%rdx
8b33(6): jo 0x294(%rip)
8b39(3): test %rax,%rax
8b3c(6): js 0x295(%rip)
8b42(3): test %rsi,%rsi
8b45(6): jnz 0x28c(%rip)
8b4b(4): lea 0x0(%rcx,%rcx,2),%rsi
8b4f(4): shl/sal $0x3,%rsi
8b53(5): call 0xba9d(%rip)
8b58(7): mov 0x2186a1(%rip),%rbp
8b5f(7): mov %rax,0x2186a2(%rip)
8b66(7): mov 0x217773(%rip),%rax
8b6d(3): mov %rbp,%rdi
8b70(3): sub %rax,%rdi
8b73(4): add $0x1,%rax
8b77(3): add %rbp,%rax
8b7a(3): mov %rdi,%rcx
8b7d(3): mov %rax,%rsi
8b80(3): setb %al
8b83(3): movzx %al,%eax
8b86(4): imul %rsi,%rcx
8b8a(3): test %rax,%rax
8b8d(6): jnz 0x244(%rip)
8b93(2): xor %edx,%edx
8b95(3): mov %rcx,%rax
8b98(3): div %rdi,%rax
8b9b(3): cmp %rax,%rsi
8b9e(6): jnz 0x233(%rip)
8ba4(5): mov $0x8,%edx
8ba9(3): shr $0x1,%rcx
8bac(2): xor %esi,%esi
8bae(3): mov %rdx,%rax
8bb1(3): mul %rax,%rcx,%rdx
8bb4(6): jo 0x222(%rip)
8bba(3): test %rax,%rax
8bbd(6): js 0x214(%rip)
8bc3(3): test %rsi,%rsi
8bc6(6): jnz 0x20b(%rip)
8bcc(8): lea 0x0(,%rcx,8),%rdi
8bd4(5): call 0xb9bc(%rip)
8bd9(7): mov 0x217700(%rip),%rdx
8be0(3): cmp %rdx,%rbp
8be3(2): jbe 0x38(%rip)
8be5(7): mov 0x21861c(%rip),%rcx
8bec(4): lea 0x0(%rdx,%rdx,2),%rsi
8bf0(8): lea 0x8(,%rdx,8),%rdx
8bf8(5): lea 0x10(%rcx,%rsi,8),%rcx
8bfd(8): lea 0x8(,%rbp,8),%rsi
8c05(3): nop (%rax)
8c08(3): mov %rax,(%rcx)
8c0b(3): add %rdx,%rax
8c0e(4): add $0x8,%rdx
8c12(4): add $0x18,%rcx
8c16(3): cmp %rdx,%rsi
8c19(2): jnz 0xffffffef(%rip)
8c1b(7): mov 0x21878e(%rip),%r9
8c22(7): mov %rbp,0x2176b7(%rip)
8c29(3): test %rbx,%rbx
8c2c(2): jz 0x4d(%rip)
8c2e(7): mov 0x2185d3(%rip),%rdi
8c35(5): lea 0x3(%rbx,%rbx,2),%r8
8c3a(2): xor %esi,%esi
8c3c(5): mov $0x3,%edx
8c41(7): nop 0x0(%rax)
8c48(5): mov 0xfffffff8(%rdi,%rdx,8),%rax
8c4d(4): add $0x8,%rsi
8c51(5): mov $0x1,0xffffffe8(%rdi,%rdx,8)
8c56(5): mov %rdx,0xfffffff0(%rdi,%rdx,8)
8c5b(4): lea 0x0(%rax,%rsi,1),%rcx
8c5f(1): nop 
8c60(7): mov $0x3,(%rax)
8c67(4): add $0x8,%rax
8c6b(3): cmp %rax,%rcx
8c6e(2): jnz 0xfffffff2(%rip)
8c70(4): add $0x3,%rdx
8c74(3): cmp %rdx,%r8
8c77(2): jnz 0xffffffd1(%rip)
8c79(3): test %r9,%r9
8c7c(6): jz 0xd1(%rip)
8c82(2): xor %ebp,%ebp
8c84(4): nop 0x0(%rax)
8c88(7): mov 0x218711(%rip),%rax
8c8f(4): mov 0x0(%rax,%rbp,8),%rdi
8c93(5): call 0xfffffc9d(%rip)
8c98(3): test %rbx,%rbx
8c9b(3): mov %rax,%r10
8c9e(7): mov 0x21870b(%rip),%rdi
8ca5(6): jz 0x9b(%rip)
8cab(7): mov 0x2185fe(%rip),%r14
8cb2(7): mov 0x21854f(%rip),%rcx
8cb9(2): xor %esi,%esi
8cbb(4): lea 0x2(%rax),%r11
8cbf(4): lea 0xffffffff(%rdi),%r13
8cc3(2): jmp 0x5e(%rip)
8cc5(3): nop (%rax)
8cc8(5): lea 0x0(%r13,%r8,1),%rax
8ccd(2): xor %edx,%edx
8ccf(3): div %r8,%rax
8cd2(2): xor %edx,%edx
8cd4(3): mov %rax,%r9
8cd7(3): mov %rbp,%rax
8cda(3): div %r9,%rax
8cdd(3): mov %rax,%r9
8ce0(4): mov 0x10(%rcx),%rdx
8ce4(3): cmp %rsi,%r9
8ce7(3): mov %r10,%rax
8cea(4): cmovne %r11,%rax
8cee(4): lea 0x0(%rdx,%r9,8),%rsi
8cf2(3): mov (%rsi),%rdx
8cf5(3): cmp %rax,%rdx
8cf8(2): jnb 0x1d(%rip)
8cfa(4): mov 0x8(%rcx),%r9
8cfe(3): sub %rdx,%r9
8d01(3): mov %r9,%rdx
8d04(3): add %rax,%rdx
8d07(4): mov %rdx,0x8(%rcx)
8d0b(3): mov %rax,(%rsi)
8d0e(4): cmp %r14,0x8(%rcx)
8d12(3): setb (%rcx)
8d15(4): add $0x18,%rcx
8d19(3): cmp %r8,%rbx
8d1c(3): mov %r8,%rsi
8d1f(2): jz 0x21(%rip)
8d21(3): cmp $0x0,(%rcx)
8d24(4): lea 0x1(%rsi),%r8
8d28(2): jz 0xffffffed(%rip)
8d2a(3): test %r12b,%r12b
8d2d(2): jnz 0xffffff9b(%rip)
8d2f(3): mov %rbp,%rax
8d32(2): xor %edx,%edx
8d34(3): div %r8,%rax
8d37(3): mov %rdx,%r9
8d3a(2): jmp 0xffffffa6(%rip)
8d3c(4): nop 0x0(%rax)
8d40(4): add $0x1,%rbp
8d44(3): cmp %rdi,%rbp
8d47(6): jb 0xffffff41(%rip)
8d4d(4): cmp $0x1,%rbx
8d51(2): jbe 0x33(%rip)
8d53(7): mov 0x2184ae(%rip),%rdx
8d5a(4): lea 0x0(%rbx,%rbx,2),%rax
8d5e(4): shl/sal $0x3,%rax
8d62(5): cmp $0x0,0xffffffe8(%rdx,%rax,1)
8d67(2): jnz 0x1d(%rip)
8d69(5): lea 0xffffffd0(%rdx,%rax,1),%rax
8d6e(2): jmp 0xc(%rip)
8d70(4): sub $0x18,%rax
8d74(4): cmp $0x0,0x18(%rax)
8d78(2): jnz 0xc(%rip)
8d7a(4): sub $0x1,%rbx
8d7e(4): cmp $0x1,%rbx
8d82(2): jnz 0xffffffee(%rip)
8d84(3): mov %rbx,%rax
8d87(1): pop %rbx
8d88(1): pop %rbp
8d89(2): pop %r12
8d8b(2): pop %r13
8d8d(2): pop %r14
8d8f(1): ret near (%rsp)
8d90(5): mov $0x30,%edx
8d95(2): xor %ecx,%ecx
8d97(3): mov %rdx,%rax
8d9a(3): mul %rax,%rbx,%rdx
8d9d(2): jo 0x43(%rip)
8d9f(3): test %rax,%rax
8da2(2): js 0x2f(%rip)
8da4(3): test %rcx,%rcx
8da7(2): jnz 0x2a(%rip)
8da9(4): lea 0x0(%rbx,%rbx,1),%rbp
8dad(5): lea 0x0(%rbp,%rbx,1),%rsi
8db2(4): shl/sal $0x4,%rsi
8db6(5): call 0xb83a(%rip)
8dbb(7): mov %rax,0x218446(%rip)
8dc2(5): jmp 0xfffffda4(%rip)
8dc7(5): mov $0x1,%esi
8dcc(5): jmp 0xfffffd6d(%rip)
8dd1(5): call 0xba0f(%rip)
8dd6(5): mov $0x1,%esi
8ddb(5): jmp 0xfffffddf(%rip)
8de0(5): mov $0x1,%ecx
8de5(2): jmp 0xffffffba(%rip)

"print_with_separator" :
8df0(2): push %r15
8df2(2): push %r14
8df4(2): push %r13
8df6(2): push %r12
8df8(1): push %rbp
8df9(1): push %rbx
8dfa(4): sub $0x18,%rsp
8dfe(8): cmp $0x0,0x2185aa(%rip)
8e06(6): jz 0x102(%rip)
8e0c(3): mov %edi,%r14d
8e0f(3): xor %r13d,%r13d
8e12(2): xor %ebx,%ebx
8e14(7): mov $0xfffffffd,%r15
8e1b(2): jmp 0x2d(%rip)
8e1d(3): nop (%rax)
8e20(3): test %rbx,%rbx
8e23(3): mov %r13,%rbp
8e26(6): jnz 0xca(%rip)
8e2c(3): mov %rbp,%rsi
8e2f(3): mov %r12,%rdi
8e32(4): add $0x1,%rbx
8e36(5): call 0xffffeeca(%rip)
8e3b(7): cmp %rbx,0x21856e(%rip)
8e42(6): jbe 0xc6(%rip)
8e48(8): cmp $0x0,0x218460(%rip)
8e50(7): mov 0x218549(%rip),%rax
8e57(4): mov 0x0(%rax,%rbx,8),%r12
8e5b(2): jz 0xffffffc5(%rip)
8e5d(3): mov %r12,%rdi
8e60(5): call 0xfffffad0(%rip)
8e65(3): test %rbx,%rbx
8e68(6): jz 0xd8(%rip)
8e6e(7): mov 0x21843b(%rip),%rdx
8e75(4): lea 0x2(%r13),%rbp
8e79(4): lea 0x0(%rax,%rbp,1),%rcx
8e7d(3): test %rdx,%rdx
8e80(6): jz 0xb8(%rip)
8e86(3): cmp %rcx,%rdx
8e89(2): jbe 0x11(%rip)
8e8b(3): mov %r15,%rdx
8e8e(3): sub %rax,%rdx
8e91(3): cmp %r13,%rdx
8e94(6): jnb 0xa4(%rip)
8e9a(3): mov %rax,%r13
8e9d(5): mov $0xa,%ecx
8ea2(5): mov $0xa,%edx
8ea7(2): xor %ebp,%ebp
8ea9(7): mov 0x2173d8(%rip),%rdi
8eb0(4): mov 0x28(%rdi),%rax
8eb4(4): cmp 0x30(%rdi),%rax
8eb8(6): jnb 0xa8(%rip)
8ebe(4): lea 0x1(%rax),%rsi
8ec2(4): mov %rsi,0x28(%rdi)
8ec6(3): mov %r14b,(%rax)
8ec9(7): mov 0x2173b8(%rip),%rdi
8ed0(4): mov 0x28(%rdi),%rax
8ed4(4): cmp 0x30(%rdi),%rax
8ed8(2): jnb 0x78(%rip)
8eda(4): lea 0x1(%rax),%rcx
8ede(4): mov %rcx,0x28(%rdi)
8ee2(2): mov %dl,(%rax)
8ee4(5): jmp 0xffffff48(%rip)
8ee9(7): nop 0x0(%rax)
8ef0(4): lea 0x2(%r13),%rbp
8ef4(3): mov %rbp,%r13
8ef7(5): mov $0x20,%ecx
8efc(5): mov $0x20,%edx
8f01(2): jmp 0xffffffa8(%rip)
8f03(5): nop 0x0(%rax,%rax,1)
8f08(7): mov 0x217379(%rip),%rdi
8f0f(4): mov 0x28(%rdi),%rax
8f13(4): cmp 0x30(%rdi),%rax
8f17(2): jnb 0x69(%rip)
8f19(4): lea 0x1(%rax),%rdx
8f1d(4): mov %rdx,0x28(%rdi)
8f21(3): mov $0xa,(%rax)
8f24(4): add $0x18,%rsp
8f28(1): pop %rbx
8f29(1): pop %rbp
8f2a(2): pop %r12
8f2c(2): pop %r13
8f2e(2): pop %r14
8f30(2): pop %r15
8f32(1): ret near (%rsp)
8f33(5): nop 0x0(%rax,%rax,1)
8f38(3): mov %rcx,%r13
8f3b(2): jmp 0xffffffbc(%rip)
8f3d(3): nop (%rax)
8f40(3): mov %r13,%rbp
8f43(3): add %rax,%r13
8f46(5): jmp 0xfffffee6(%rip)
8f4b(5): nop 0x0(%rax,%rax,1)
8f50(2): mov %ecx,%esi
8f52(5): call 0xffffa53e(%rip)
8f57(5): jmp 0xfffffed5(%rip)
8f5c(4): nop 0x0(%rax)
8f60(4): movsx %r14b,%esi
8f64(4): mov %ecx,0xc(%rsp)
8f68(4): mov %dl,0xb(%rsp)
8f6c(5): call 0xffffa524(%rip)
8f71(5): movzx 0xb(%rsp),%edx
8f76(4): mov 0xc(%rsp),%ecx
8f7a(5): jmp 0xffffff4f(%rip)
8f7f(1): nop 
8f80(4): add $0x18,%rsp
8f84(5): mov $0xa,%esi
8f89(1): pop %rbx
8f8a(1): pop %rbp
8f8b(2): pop %r12
8f8d(2): pop %r13
8f8f(2): pop %r14
8f91(2): pop %r15
8f93(5): jmp 0xffffa4fd(%rip)

"print_current_files" :
8fa0(7): cmp $0x4,0x218391(%rip)
8fa7(6): jnbe 0x351(%rip)
8fad(2): push %r15
8faf(2): push %r14
8fb1(7): lea 0xd1ac(%rip),%rdx
8fb8(2): push %r13
8fba(2): push %r12
8fbc(1): push %rbp
8fbd(1): push %rbx
8fbe(4): sub $0x38,%rsp
8fc2(6): mov 0x218370(%rip),%eax
8fc8(4): movsxd 0x0(%rdx,%rax,4),%rax
8fcc(3): add %rdx,%rax
8fcf(2): jmp %rax
8fd1(7): nop 0x0(%rax)
8fd8(8): cmp $0x0,0x2182d0(%rip)
8fe0(6): jz 0x308(%rip)
8fe6(2): xor %edi,%edi
8fe8(5): call 0xfffffaf8(%rip)
8fed(4): lea 0x0(%rax,%rax,2),%rdx
8ff1(3): mov %rax,%r14
8ff4(7): mov 0x21820d(%rip),%rax
8ffb(5): lea 0xffffffe8(%rax,%rdx,8),%r15
9000(7): mov 0x218399(%rip),%rax
9007(3): mov (%rax),%rbx
900a(3): mov %rbx,%rdi
900d(5): call 0xfffff923(%rip)
9012(5): mov %rax,0x8(%rsp)
9017(4): mov 0x10(%r15),%rax
901b(2): xor %esi,%esi
901d(3): mov %rbx,%rdi
9020(3): mov (%rax),%r12
9023(5): call 0xffffecdd(%rip)
9028(8): cmp $0x1,0x218380(%rip)
9030(6): jbe 0x2e0(%rip)
9036(3): xor %r13d,%r13d
9039(5): mov $0x1,%ebx
903e(5): mov 0x8(%rsp),%rcx
9043(2): jmp 0x62(%rip)
9045(3): nop (%rax)
9048(7): mov 0x217239(%rip),%rdi
904f(4): mov 0x28(%rdi),%rax
9053(4): cmp 0x30(%rdi),%rax
9057(6): jnb 0x2f9(%rip)
905d(4): lea 0x1(%rax),%rdx
9061(3): xor %r13d,%r13d
9064(4): mov %rdx,0x28(%rdi)
9068(3): mov $0xa,(%rax)
906b(7): mov 0x21832e(%rip),%rax
9072(3): mov %r13,%rsi
9075(4): mov 0x0(%rax,%rbx,8),%r12
9079(4): add $0x1,%rbx
907d(3): mov %r12,%rdi
9080(5): call 0xffffec80(%rip)
9085(3): mov %r12,%rdi
9088(5): call 0xfffff8a8(%rip)
908d(7): cmp 0x21831c(%rip),%rbx
9094(3): mov %rax,%rcx
9097(4): mov 0x10(%r15),%rax
909b(4): mov 0x0(%rax,%rbp,8),%r12
909f(6): jnb 0x271(%rip)
90a5(2): xor %edx,%edx
90a7(3): mov %rbx,%rax
90aa(3): div %r14,%rax
90ad(3): test %rdx,%rdx
90b0(3): mov %rdx,%rbp
90b3(2): jz 0xffffff95(%rip)
90b5(3): add %r13,%r12
90b8(4): lea 0x0(%rcx,%r13,1),%rdi
90bc(3): mov %r12,%rsi
90bf(3): mov %r12,%r13
90c2(5): call 0xffffcf7e(%rip)
90c7(2): jmp 0xffffffa4(%rip)
90c9(7): nop 0x0(%rax)
90d0(5): mov $0x2c,%edi
90d5(4): add $0x38,%rsp
90d9(1): pop %rbx
90da(1): pop %rbp
90db(2): pop %r12
90dd(2): pop %r13
90df(2): pop %r14
90e1(2): pop %r15
90e3(5): jmp 0xfffffd0d(%rip)
90e8(8): nop 0x0(%rax,%rax,1)
90f0(2): xor %ebx,%ebx
90f2(8): cmp $0x0,0x2182b6(%rip)
90fa(6): jz 0x16e(%rip)
9100(7): mov 0x218299(%rip),%rax
9107(2): xor %esi,%esi
9109(4): mov 0x0(%rax,%rbx,8),%rdi
910d(5): call 0xffffebf3(%rip)
9112(7): mov 0x21716f(%rip),%rdi
9119(4): mov 0x28(%rdi),%rax
911d(4): cmp 0x30(%rdi),%rax
9121(6): jnb 0x1df(%rip)
9127(4): lea 0x1(%rax),%rdx
912b(4): mov %rdx,0x28(%rdi)
912f(3): mov $0xa,(%rax)
9132(4): add $0x1,%rbx
9136(7): cmp %rbx,0x218273(%rip)
913d(2): jnbe 0xffffffc3(%rip)
913f(4): add $0x38,%rsp
9143(1): pop %rbx
9144(1): pop %rbp
9145(2): pop %r12
9147(2): pop %r13
9149(2): pop %r14
914b(2): pop %r15
914d(1): ret near (%rsp)
914e(2): nop 
9150(8): cmp $0x0,0x218158(%rip)
9158(6): jz 0x190(%rip)
915e(5): mov $0x1,%edi
9163(5): call 0xfffff97d(%rip)
9168(4): lea 0x0(%rax,%rax,2),%rdx
916c(3): mov %rax,%rcx
916f(7): mov 0x218092(%rip),%rax
9176(5): lea 0xffffffe8(%rax,%rdx,8),%r15
917b(7): mov 0x21822e(%rip),%rax
9182(2): xor %edx,%edx
9184(3): div %rcx,%rax
9187(3): test %rdx,%rdx
918a(3): setnz %dl
918d(3): movzx %dl,%edx
9190(3): add %rax,%rdx
9193(3): mov %rdx,%rax
9196(5): mov %rdx,0x18(%rsp)
919b(6): jz 0xcd(%rip)
91a1(4): shl/sal $0x3,%rax
91a5(9): mov $0x0,0x28(%rsp)
91ae(5): mov %rax,0x20(%rsp)
91b3(5): nop 0x0(%rax,%rax,1)
91b8(5): mov 0x28(%rsp),%r13
91bd(3): xor %r12d,%r12d
91c0(2): xor %ebp,%ebp
91c2(8): lea 0x0(,%r13,8),%r14
91ca(2): jmp 0x21(%rip)
91cc(4): nop 0x0(%rax)
91d0(5): mov 0x10(%rsp),%rbx
91d5(5): mov 0x8(%rsp),%rdi
91da(3): add %rbp,%rbx
91dd(3): add %rbp,%rdi
91e0(3): mov %rbx,%rsi
91e3(3): mov %rbx,%rbp
91e6(5): call 0xffffce5a(%rip)
91eb(7): mov 0x2181ae(%rip),%rax
91f2(4): mov 0x0(%rax,%r14,1),%rbx
91f6(3): mov %rbx,%rdi
91f9(5): call 0xfffff737(%rip)
91fe(5): mov %rax,0x8(%rsp)
9203(4): mov 0x10(%r15),%rax
9207(3): mov %rbp,%rsi
920a(3): mov %rbx,%rdi
920d(4): mov 0x0(%rax,%r12,1),%rcx
9211(4): add $0x8,%r12
9215(5): mov %rcx,0x10(%rsp)
921a(5): call 0xffffeae6(%rip)
921f(5): add 0x18(%rsp),%r13
9224(5): add 0x20(%rsp),%r14
9229(7): cmp 0x218180(%rip),%r13
9230(2): jb 0xffffffa0(%rip)
9232(7): mov 0x21704f(%rip),%rdi
9239(4): mov 0x28(%rdi),%rax
923d(4): cmp 0x30(%rdi),%rax
9241(6): jnb 0xf7(%rip)
9247(4): lea 0x1(%rax),%rdx
924b(4): mov %rdx,0x28(%rdi)
924f(3): mov $0xa,(%rax)
9252(6): add $0x1,0x28(%rsp)
9258(5): mov 0x28(%rsp),%rax
925d(5): cmp %rax,0x18(%rsp)
9262(6): jnz 0xffffff56(%rip)
9268(4): add $0x38,%rsp
926c(1): pop %rbx
926d(1): pop %rbp
926e(2): pop %r12
9270(2): pop %r13
9272(2): pop %r14
9274(2): pop %r15
9276(1): ret near (%rsp)
9277(9): nop 0x0(%rax,%rax,1)
9280(2): xor %ebx,%ebx
9282(8): cmp $0x0,0x218126(%rip)
928a(2): jnz 0x26(%rip)
928c(2): jmp 0xffffffdc(%rip)
928e(2): nop 
9290(4): lea 0x1(%rax),%rdx
9294(4): mov %rdx,0x28(%rdi)
9298(3): mov $0xa,(%rax)
929b(8): add $0x1,0x217f55(%rip)
92a3(4): add $0x1,%rbx
92a7(7): cmp %rbx,0x218102(%rip)
92ae(2): jbe 0xffffffba(%rip)
92b0(5): call 0xffffdd20(%rip)
92b5(7): mov 0x2180e4(%rip),%rax
92bc(4): mov 0x0(%rax,%rbx,8),%rdi
92c0(5): call 0xffffebd0(%rip)
92c5(7): mov 0x216fbc(%rip),%rdi
92cc(4): mov 0x28(%rdi),%rax
92d0(4): cmp 0x30(%rdi),%rax
92d4(2): jb 0xffffffbc(%rip)
92d6(5): mov $0xa,%esi
92db(5): call 0xffffa1b5(%rip)
92e0(2): jmp 0xffffffbb(%rip)
92e2(6): nop 0x0(%rax,%rax,1)
92e8(5): mov $0x20,%edi
92ed(5): jmp 0xfffffde8(%rip)
92f2(6): nop 0x0(%rax,%rax,1)
92f8(2): REP ret near (%rsp)
92fa(6): nop 0x0(%rax,%rax,1)
9300(5): mov $0xa,%esi
9305(5): call 0xffffa18b(%rip)
930a(5): jmp 0xfffffe28(%rip)
930f(1): nop 
9310(7): mov 0x216f71(%rip),%rdi
9317(4): mov 0x28(%rdi),%rax
931b(4): cmp 0x30(%rdi),%rax
931f(2): jnb 0x43(%rip)
9321(4): lea 0x1(%rax),%rdx
9325(4): mov %rdx,0x28(%rdi)
9329(3): mov $0xa,(%rax)
932c(5): jmp 0xffffff3c(%rip)
9331(7): nop 0x0(%rax)
9338(5): mov $0xa,%esi
933d(5): call 0xffffa153(%rip)
9342(5): jmp 0xffffff10(%rip)
9347(9): nop 0x0(%rax,%rax,1)
9350(5): mov $0xa,%esi
9355(3): xor %r13d,%r13d
9358(5): call 0xffffa138(%rip)
935d(5): jmp 0xfffffd0e(%rip)
9362(4): add $0x38,%rsp
9366(5): mov $0xa,%esi
936b(1): pop %rbx
936c(1): pop %rbp
936d(2): pop %r12
936f(2): pop %r13
9371(2): pop %r14
9373(2): pop %r15
9375(5): jmp 0xffffa11b(%rip)

"rev_strcmp_df_atime" :
9380(3): mov %rsi,%rdx
9383(6): mov 0xa8(%rdi),%esi
9389(6): mov 0xa8(%rdx),%ecx
938f(3): cmp $0x3,%ecx
9392(3): setz %al
9395(3): cmp $0x9,%ecx
9398(3): setz %cl
939b(2): or %ecx,%eax
939d(3): cmp $0x3,%esi
93a0(2): jz 0x28(%rip)
93a2(3): cmp $0x9,%esi
93a5(2): jz 0x23(%rip)
93a7(6): mov 0xac(%rdi),%ecx
93ad(6): and $0xf000,%ecx
93b3(2): test %al,%al
93b5(2): jz 0x33(%rip)
93b7(6): cmp $0x4000,%ecx
93bd(2): jz 0x4b(%rip)
93bf(5): mov $0x1,%eax
93c4(1): ret near (%rsp)
93c5(3): nop (%rax)
93c8(2): test %al,%al
93ca(2): jnz 0x3e(%rip)
93cc(6): mov 0xac(%rdx),%eax
93d2(5): and $0xf000,%eax
93d7(5): cmp $0x4000,%eax
93dc(2): jz 0x2c(%rip)
93de(5): mov $0xffffffff,%eax
93e3(2): REP ret near (%rsp)
93e5(3): nop (%rax)
93e8(6): mov 0xac(%rdx),%eax
93ee(5): and $0xf000,%eax
93f3(5): cmp $0x4000,%eax
93f8(2): jz 0xffffffbf(%rip)
93fa(6): cmp $0x4000,%ecx
9400(2): jz 0xffffffde(%rip)
9402(6): nop 0x0(%rax,%rax,1)
9408(4): mov 0x60(%rdi),%rax
940c(4): cmp %rax,0x60(%rdx)
9410(2): jnle 0xffffffce(%rip)
9412(2): jl 0xffffffad(%rip)
9414(4): mov 0x68(%rdi),%rax
9418(3): sub 0x68(%rdx),%eax
941b(2): jnz 0xffffffc8(%rip)
941d(3): mov (%rdi),%rsi
9420(3): mov (%rdx),%rdi
9423(5): jmp 0xffffa16d(%rip)

"rev_strcmp_df_ctime" :
9430(3): mov %rsi,%rdx
9433(6): mov 0xa8(%rdi),%esi
9439(6): mov 0xa8(%rdx),%ecx
943f(3): cmp $0x3,%ecx
9442(3): setz %al
9445(3): cmp $0x9,%ecx
9448(3): setz %cl
944b(2): or %ecx,%eax
944d(3): cmp $0x3,%esi
9450(2): jz 0x28(%rip)
9452(3): cmp $0x9,%esi
9455(2): jz 0x23(%rip)
9457(6): mov 0xac(%rdi),%ecx
945d(6): and $0xf000,%ecx
9463(2): test %al,%al
9465(2): jz 0x33(%rip)
9467(6): cmp $0x4000,%ecx
946d(2): jz 0x4b(%rip)
946f(5): mov $0x1,%eax
9474(1): ret near (%rsp)
9475(3): nop (%rax)
9478(2): test %al,%al
947a(2): jnz 0x3e(%rip)
947c(6): mov 0xac(%rdx),%eax
9482(5): and $0xf000,%eax
9487(5): cmp $0x4000,%eax
948c(2): jz 0x2c(%rip)
948e(5): mov $0xffffffff,%eax
9493(2): REP ret near (%rsp)
9495(3): nop (%rax)
9498(6): mov 0xac(%rdx),%eax
949e(5): and $0xf000,%eax
94a3(5): cmp $0x4000,%eax
94a8(2): jz 0xffffffbf(%rip)
94aa(6): cmp $0x4000,%ecx
94b0(2): jz 0xffffffde(%rip)
94b2(6): nop 0x0(%rax,%rax,1)
94b8(7): mov 0x80(%rdi),%rax
94bf(7): cmp %rax,0x80(%rdx)
94c6(2): jnle 0xffffffc8(%rip)
94c8(2): jl 0xffffffa7(%rip)
94ca(7): mov 0x88(%rdi),%rax
94d1(6): sub 0x88(%rdx),%eax
94d7(2): jnz 0xffffffbc(%rip)
94d9(3): mov (%rdi),%rsi
94dc(3): mov (%rdx),%rdi
94df(5): jmp 0xffffa0b1(%rip)

"clear_files" :
94f0(7): mov 0x217eb9(%rip),%rax
94f7(2): push %r12
94f9(1): push %rbp
94fa(1): push %rbx
94fb(3): test %rax,%rax
94fe(2): jz 0x39(%rip)
9500(7): mov 0x217e99(%rip),%rbx
9507(4): lea 0x0(%rbx,%rax,8),%r12
950b(5): nop 0x0(%rax,%rax,1)
9510(3): mov (%rbx),%rbp
9513(4): add $0x8,%rbx
9517(4): mov 0x0(%rbp),%rdi
951b(5): call 0xffffa365(%rip)
9520(4): mov 0x8(%rbp),%rdi
9524(5): call 0xffffa35c(%rip)
9529(4): mov 0x10(%rbp),%rdi
952d(5): call 0xffffa353(%rip)
9532(3): cmp %r12,%rbx
9535(2): jnz 0xffffffdb(%rip)
9537(1): pop %rbx
9538(b): mov $0x0,0x217e6d(%rip)
9543(7): mov $0x0,0x217e5f(%rip)
954a(1): pop %rbp
954b(7): mov $0x0,0x217e12(%rip)
9552(a): mov $0x0,0x217e04(%rip)
955c(a): mov $0x0,0x217df6(%rip)
9566(a): mov $0x0,0x217de8(%rip)
9570(a): mov $0x0,0x217dd6(%rip)
957a(a): mov $0x0,0x217dc8(%rip)
9584(a): mov $0x0,0x217dba(%rip)
958e(a): mov $0x0,0x217dbc(%rip)
9598(a): mov $0x0,0x217da2(%rip)
95a2(a): mov $0x0,0x217d94(%rip)
95ac(a): mov $0x0,0x217d86(%rip)
95b6(2): pop %r12
95b8(1): ret near (%rsp)

"format_user_width" :
95c0(1): push %rbp
95c1(1): push %rbx
95c2(2): mov %edi,%ebp
95c4(4): sub $0x28,%rsp
95c8(9): mov $0x28,%rax
95d1(5): mov %rax,0x18(%rsp)
95d6(2): xor %eax,%eax
95d8(7): cmp $0x0,0x217d4e(%rip)
95df(2): jz 0x79(%rip)
95e1(3): mov %rsp,%rbx
95e4(7): lea 0xe2a2(%rip),%rcx
95eb(3): mov %ebp,%r8d
95ee(5): mov $0x15,%edx
95f3(5): mov $0x1,%esi
95f8(3): mov %rbx,%rdi
95fb(2): xor %eax,%eax
95fd(5): call 0xffffa273(%rip)
9602(3): mov %rbx,%rax
9605(2): mov (%rax),%ecx
9607(4): add $0x4,%rax
960b(6): lea 0xfefefeff(%rcx),%edx
9611(2): not %ecx
9613(2): and %ecx,%edx
9615(6): and $0x80808080,%edx
961b(2): jz 0xffffffea(%rip)
961d(2): mov %edx,%ecx
961f(3): shr $0x10,%ecx
9622(6): test $0x8080,%edx
9628(3): cmove %ecx,%edx
962b(4): lea 0x2(%rax),%rcx
962f(2): mov %edx,%esi
9631(4): cmove %rcx,%rax
9635(3): add %dl,%sil
9638(4): sbb $0x3,%rax
963c(2): sub %ebx,%eax
963e(5): mov 0x18(%rsp),%rsi
9643(9): xor $0x28,%rsi
964c(2): jnz 0x30(%rip)
964e(4): add $0x28,%rsp
9652(1): pop %rbx
9653(1): pop %rbp
9654(1): ret near (%rsp)
9655(3): nop (%rax)
9658(5): call 0x6168(%rip)
965d(3): test %rax,%rax
9660(3): mov %rax,%rdi
9663(6): jz 0xffffff7e(%rip)
9669(2): xor %esi,%esi
966b(5): call 0x6bb5(%rip)
9670(5): mov $0x0,%edx
9675(2): test %eax,%eax
9677(3): cmovs %edx,%eax
967a(2): jmp 0xffffffc4(%rip)
967c(5): call 0xffff9da4(%rip)

"gobble_file.constprop.52" :
9690(1): push %rbp
9691(3): mov %rsp,%rbp
9694(2): push %r15
9696(2): push %r14
9698(2): push %r13
969a(2): push %r12
969c(3): mov %rcx,%r15
969f(1): push %rbx
96a0(3): mov %esi,%r14d
96a3(3): mov %edx,%r13d
96a6(7): sub $0x378,%rsp
96ad(7): mov 0x217cfc(%rip),%rcx
96b4(7): mov %rdi,0xfffffc78(%rbp)
96bb(9): mov $0x28,%rax
96c4(4): mov %rax,0xffffffc8(%rbp)
96c8(2): xor %eax,%eax
96ca(7): cmp 0x217ce7(%rip),%rcx
96d1(7): mov 0x217ce8(%rip),%rdi
96d8(2): jnz 0x50(%rip)
96da(5): mov $0x190,%edx
96df(2): xor %esi,%esi
96e1(3): mov %rdx,%rax
96e4(3): mul %rax,%rcx,%rdx
96e7(6): jo 0xcf7(%rip)
96ed(3): test %rax,%rax
96f0(6): js 0xce9(%rip)
96f6(3): test %rsi,%rsi
96f9(6): jnz 0xce0(%rip)
96ff(4): lea 0x0(%rcx,%rcx,4),%rax
9703(4): lea 0x0(%rax,%rax,4),%rsi
9707(4): shl/sal $0x4,%rsi
970b(5): call 0xaee5(%rip)
9710(7): shl/sal $0x1,0x217ca1(%rip)
9717(7): mov 0x217c92(%rip),%rcx
971e(3): mov %rax,%rdi
9721(7): mov %rax,0x217c98(%rip)
9728(4): lea 0x0(%rcx,%rcx,4),%rax
972c(4): lea 0x0(%rax,%rax,4),%rax
9730(4): lea 0x0(%rdi,%rax,8),%rbx
9734(2): xor %eax,%eax
9736(4): lea 0x8(%rbx),%rdi
973a(3): mov %rbx,%rcx
973d(7): mov $0x0,(%rbx)
9744(b): mov $0x0,0xbc(%rbx)
974f(4): and $0xfffffff8,%rdi
9753(3): sub %rdi,%rcx
9756(6): add $0xc4,%ecx
975c(3): shr $0x3,%ecx
975f(3): REP stosd %rax,rdi(%es,10)
9762(8): mov $0x0,0x20(%rbx)
976a(7): mov %r14d,0xa8(%rbx)
9771(a): mov $0xffffffff,0xc4(%rbx)
977b(7): cmp $0x0,0x217c27(%rip)
9782(2): jnz 0xf(%rip)
9784(7): cmp $0x0,0x217c1d(%rip)
978b(6): jnz 0x6f5(%rip)
9791(3): test %r13b,%r13b
9794(8): movzx 0x217b75(%rip),%r8d
979c(6): jz 0x224(%rip)
97a2(7): mov 0xfffffc78(%rbp),%r12
97a9(5): movzx (%r12),%edx
97ae(3): cmp $0x2f,%dl
97b1(6): jz 0xa67(%rip)
97b7(4): movzx (%r15),%ecx
97bb(2): test %cl,%cl
97bd(6): jnz 0x5f6(%rip)
97c3(3): test %r8b,%r8b
97c6(6): jnz 0x434(%rip)
97cc(6): mov 0x217b26(%rip),%ecx
97d2(4): lea 0x18(%rbx),%r15
97d6(3): cmp $0x3,%ecx
97d9(6): jb 0x367(%rip)
97df(3): cmp $0x4,%ecx
97e2(6): jbe 0x45e(%rip)
97e8(3): cmp $0x5,%ecx
97eb(6): jnz 0x355(%rip)
97f1(3): mov %r15,%rdx
97f4(3): mov %r12,%rsi
97f7(5): mov $0x1,%edi
97fc(5): call 0xffff9e44(%rip)
9801(2): test %eax,%eax
9803(6): jnz 0x355(%rip)
9809(4): cmp $0x5,%r14d
980d(7): mov $0x1,0xb8(%rbx)
9814(6): jz 0x37c(%rip)
981a(3): mov 0x30(%rbx),%eax
981d(5): and $0xf000,%eax
9822(5): cmp $0x8000,%eax
9827(6): jz 0x369(%rip)
982d(7): mov 0x217b04(%rip),%r10d
9834(3): test %r10d,%r10d
9837(2): jz 0xb(%rip)
9839(7): cmp $0x0,0x217b25(%rip)
9840(2): jz 0x4c(%rip)
9842(5): call 0xffff9a5e(%rip)
9847(4): mov 0x18(%rbx),%r14
984b(7): cmp 0x216a9e(%rip),%r14
9852(3): mov %rax,%r8
9855(6): mov $0x5f,(%rax)
985b(2): jz 0x9(%rip)
985d(7): mov %r14,0x216a8c(%rip)
9864(7): mov 0x217acd(%rip),%r9d
986b(7): lea 0x2167b0(%rip),%rax
9872(7): mov %rax,0xb0(%rbx)
9879(3): test %r9d,%r9d
987c(6): jz 0x6c4(%rip)
9882(a): mov $0x0,0xbc(%rbx)
988c(3): mov 0x30(%rbx),%eax
988f(5): and $0xf000,%eax
9894(5): cmp $0xa000,%eax
9899(6): jz 0x747(%rip)
989f(5): cmp $0x4000,%eax
98a4(6): jz 0x85c(%rip)
98aa(a): mov $0x5,0xa8(%rbx)
98b4(6): mov 0x217a7e(%rip),%ecx
98ba(4): mov 0x58(%rbx),%r12
98be(2): test %ecx,%ecx
98c0(2): jz 0xb(%rip)
98c2(7): cmp $0x0,0x217a63(%rip)
98c9(2): jz 0x73(%rip)
98cb(7): mov 0x217a4e(%rip),%r8
98d2(6): mov 0x217a50(%rip),%edx
98d8(7): lea 0xfffffd30(%rbp),%r13
98df(5): mov $0x200,%ecx
98e4(3): mov %r12,%rdi
98e7(3): mov %r13,%rsi
98ea(5): call 0x52d6(%rip)
98ef(2): xor %esi,%esi
98f1(3): mov %rax,%rdi
98f4(5): call 0x692c(%rip)
98f9(6): cmp 0x217a5d(%rip),%eax
98ff(2): jle 0x8(%rip)
9901(6): mov %eax,0x217a55(%rip)
9907(6): mov 0x217a2b(%rip),%edx
990d(2): test %edx,%edx
990f(6): jnz 0x841(%rip)
9915(7): cmp $0x0,0x216705(%rip)
991c(6): jnz 0x814(%rip)
9922(7): cmp $0x0,0x2166f7(%rip)
9929(6): jnz 0x867(%rip)
992f(7): cmp $0x0,0x2179f8(%rip)
9936(6): jnz 0x832(%rip)
993c(7): cmp $0x0,0x217a22(%rip)
9943(2): jz 0x1a(%rip)
9945(7): mov 0xb0(%rbx),%rdi
994c(5): call 0xffff9ab4(%rip)
9951(6): cmp 0x2179fd(%rip),%eax
9957(6): jnle 0x559(%rip)
995d(6): mov 0x2179d5(%rip),%eax
9963(2): test %eax,%eax
9965(6): jz 0x36b(%rip)
996b(7): movzx 0x21798a(%rip),%eax
9972(2): test %al,%al
9974(6): jnz 0x324(%rip)
997a(7): mov 0xfffffc78(%rbp),%rdi
9981(5): call 0xae3f(%rip)
9986(8): add $0x1,0x217a22(%rip)
998e(3): mov %rax,(%rbx)
9991(4): mov 0xffffffc8(%rbp),%rsi
9995(9): xor $0x28,%rsi
999e(3): mov %r12,%rax
99a1(6): jnz 0xa33(%rip)
99a7(4): lea 0xffffffd8(%rbp),%rsp
99ab(1): pop %rbx
99ac(2): pop %r12
99ae(2): pop %r13
99b0(2): pop %r14
99b2(2): pop %r15
99b4(1): pop %rbp
99b5(1): ret near (%rsp)
99b6(a): nop 0x0(%rax,%rax,1)
99c0(3): test %r8b,%r8b
99c3(6): jnz 0x21d(%rip)
99c9(7): cmp $0x0,0x2178d1(%rip)
99d0(6): jnz 0x130(%rip)
99d6(4): cmp $0x3,%r14d
99da(6): jz 0x916(%rip)
99e0(7): movzx 0x217915(%rip),%eax
99e7(2): test %al,%al
99e9(2): jnz 0x37(%rip)
99eb(7): cmp $0x0,0x2178ae(%rip)
99f2(2): jz 0x1e(%rip)
99f4(3): test %r14d,%r14d
99f7(3): setz %cl
99fa(4): cmp $0x6,%r14d
99fe(2): mov %ecx,%edx
9a00(2): jz 0x34(%rip)
9a02(2): test %cl,%cl
9a04(2): jnz 0x30(%rip)
9a06(7): cmp $0x0,0x217893(%rip)
9a0d(2): jnz 0x67(%rip)
9a0f(1): nop 
9a10(3): xor %r12d,%r12d
9a13(5): jmp 0xffffff67(%rip)
9a18(8): nop 0x0(%rax,%rax,1)
9a20(3): test %r14d,%r14d
9a23(3): setz %dl
9a26(4): cmp $0x6,%r14d
9a2a(2): jz 0xa(%rip)
9a2c(2): test %dl,%dl
9a2e(6): jz 0xd2(%rip)
9a34(7): cmp $0x5,0x2178bd(%rip)
9a3b(6): jz 0xc5(%rip)
9a41(7): cmp $0x0,0x217948(%rip)
9a48(6): jnz 0xb8(%rip)
9a4e(7): cmp $0x0,0x2178a8(%rip)
9a55(6): jnz 0xab(%rip)
9a5b(2): test %al,%al
9a5d(6): jnz 0xa3(%rip)
9a63(7): cmp $0x0,0x217836(%rip)
9a6a(2): jz 0xffffffa6(%rip)
9a6c(2): test %dl,%dl
9a6e(6): jnz 0x92(%rip)
9a74(3): xor %r12d,%r12d
9a77(4): cmp $0x5,%r14d
9a7b(6): jnz 0xfffffeff(%rip)
9a81(7): cmp $0x3,0x21788c(%rip)
9a88(2): jz 0x78(%rip)
9a8a(7): cmp $0x0,0x217881(%rip)
9a91(7): mov %r8b,0xfffffc70(%rbp)
9a98(6): jz 0xfffffee2(%rip)
9a9e(5): mov $0xe,%edi
9aa3(5): call 0xffffbbcd(%rip)
9aa8(2): test %al,%al
9aaa(8): movzx 0xfffffc70(%rbp),%r8d
9ab2(2): jnz 0x4e(%rip)
9ab4(5): mov $0x10,%edi
9ab9(5): call 0xffffbbb7(%rip)
9abe(2): test %al,%al
9ac0(8): movzx 0xfffffc70(%rbp),%r8d
9ac8(2): jnz 0x38(%rip)
9aca(5): mov $0x11,%edi
9acf(5): call 0xffffbba1(%rip)
9ad4(2): test %al,%al
9ad6(8): movzx 0xfffffc70(%rbp),%r8d
9ade(2): jnz 0x22(%rip)
9ae0(5): mov $0x15,%edi
9ae5(5): call 0xffffbb8b(%rip)
9aea(2): test %al,%al
9aec(8): movzx 0xfffffc70(%rbp),%r8d
9af4(6): jz 0xfffffe86(%rip)
9afa(6): nop 0x0(%rax,%rax,1)
9b00(7): mov 0xfffffc78(%rbp),%rax
9b07(3): movzx (%rax),%edx
9b0a(3): cmp $0x2f,%dl
9b0d(6): jnz 0x413(%rip)
9b13(6): mov 0x2177df(%rip),%eax
9b19(4): lea 0x18(%rbx),%r15
9b1d(3): cmp $0x3,%eax
9b20(2): jb 0x17(%rip)
9b22(3): cmp $0x4,%eax
9b25(2): jbe 0x12(%rip)
9b27(3): cmp $0x5,%eax
9b2a(7): mov 0xfffffc78(%rbp),%r12
9b31(6): jz 0xfffffcc0(%rip)
9b37(7): mov 0xfffffc78(%rbp),%r12
9b3e(2): nop 
9b40(3): mov %r15,%rdx
9b43(3): mov %r12,%rsi
9b46(5): mov $0x1,%edi
9b4b(5): call 0xffff98c5(%rip)
9b50(2): test %eax,%eax
9b52(6): jz 0xfffffcb7(%rip)
9b58(7): lea 0xdd87(%rip),%rsi
9b5f(2): xor %edi,%edi
9b61(5): mov $0x5,%edx
9b66(5): call 0xffff987a(%rip)
9b6b(3): mov %r12,%rdx
9b6e(4): movzx %r13b,%edi
9b72(3): mov %rax,%rsi
9b75(5): call 0xffffc78b(%rip)
9b7a(3): xor %r12d,%r12d
9b7d(3): test %r13b,%r13b
9b80(6): jnz 0xfffffe11(%rip)
9b86(5): jmp 0xfffffdf4(%rip)
9b8b(5): nop 0x0(%rax,%rax,1)
9b90(7): cmp $0x0,0x21777b(%rip)
9b97(6): jz 0xfffffc96(%rip)
9b9d(5): mov $0x15,%edi
9ba2(5): call 0xffffbace(%rip)
9ba7(2): test %al,%al
9ba9(6): jz 0xfffffc84(%rip)
9baf(4): mov 0x18(%rbx),%r14
9bb3(5): call 0xffff96ed(%rip)
9bb8(7): cmp 0x216739(%rip),%r14
9bbf(6): mov $0x5f,(%rax)
9bc5(2): jz 0x9(%rip)
9bc7(7): mov %r14,0x21672a(%rip)
9bce(7): mov $0x0,0xc0(%rbx)
9bd5(5): jmp 0xfffffc58(%rip)
9bda(6): nop 0x0(%rax,%rax,1)
9be0(7): mov 0xfffffc78(%rbp),%rax
9be7(3): movzx (%rax),%edx
9bea(3): cmp $0x2f,%dl
9bed(6): jnz 0x1b3(%rip)
9bf3(7): mov 0xfffffc78(%rbp),%r12
9bfa(5): mov $0x2,%esi
9bff(3): mov %r12,%rdi
9c02(5): call 0x293e(%rip)
9c07(3): test %rax,%rax
9c0a(4): mov %rax,0x10(%rbx)
9c0e(6): jnz 0xfffffbbe(%rip)
9c14(7): lea 0xdcb3(%rip),%rsi
9c1b(2): xor %edi,%edi
9c1d(5): mov $0x5,%edx
9c22(5): call 0xffff97be(%rip)
9c27(4): movzx %r13b,%edi
9c2b(3): mov %r12,%rdx
9c2e(3): mov %rax,%rsi
9c31(5): call 0xffffc6cf(%rip)
9c36(5): jmp 0xfffffb96(%rip)
9c3b(5): nop 0x0(%rax,%rax,1)
9c40(3): test %r13b,%r13b
9c43(6): jz 0xfffffefd(%rip)
9c49(3): mov %r15,%rdx
9c4c(3): mov %r12,%rsi
9c4f(5): mov $0x1,%edi
9c54(6): mov %ecx,0xfffffc70(%rbp)
9c5a(5): call 0xffff99e6(%rip)
9c5f(6): mov 0xfffffc70(%rbp),%ecx
9c65(3): cmp $0x3,%ecx
9c68(2): jz 0x1f(%rip)
9c6a(2): test %eax,%eax
9c6c(6): js 0x604(%rip)
9c72(3): mov 0x30(%rbx),%edx
9c75(6): and $0xf000,%edx
9c7b(6): cmp $0x4000,%edx
9c81(6): jnz 0xfffffebf(%rip)
9c87(2): test %eax,%eax
9c89(6): jz 0xfffffb80(%rip)
9c8f(5): jmp 0x5ef(%rip)
9c94(4): nop 0x0(%rax)
9c98(4): mov 0x20(%rbx),%rdi
9c9c(7): lea 0xfffffd30(%rbp),%rsi
9ca3(5): call 0x5efd(%rip)
9ca8(3): mov %rax,%rdi
9cab(5): call 0xffff9755(%rip)
9cb0(6): cmp 0x2176aa(%rip),%eax
9cb6(6): jle 0xfffffcc4(%rip)
9cbc(6): mov %eax,0x21769e(%rip)
9cc2(5): jmp 0xfffffcb8(%rip)
9cc7(9): nop 0x0(%rax,%rax,1)
9cd0(4): mov 0x28(%rbx),%rdi
9cd4(7): lea 0xfffffd10(%rbp),%rsi
9cdb(5): call 0x5ec5(%rip)
9ce0(3): mov %rax,%rdi
9ce3(5): call 0xffff971d(%rip)
9ce8(6): cmp 0x21766a(%rip),%eax
9cee(2): jle 0x8(%rip)
9cf0(6): mov %eax,0x217662(%rip)
9cf6(3): mov 0x30(%rbx),%eax
9cf9(5): and $0xb000,%eax
9cfe(5): cmp $0x2000,%eax
9d03(6): jnz 0x1bd(%rip)
9d09(4): mov 0x40(%rbx),%rax
9d0d(7): lea 0xfffffd30(%rbp),%r13
9d14(3): mov %r13,%rsi
9d17(3): mov %rax,%rdi
9d1a(4): shr $0x20,%rax
9d1e(4): shr $0x8,%rdi
9d22(2): mov %edi,%edx
9d24(3): mov %rax,%rdi
9d27(6): and $0xfff,%edx
9d2d(6): and $0xfffff000,%edi
9d33(2): or %edx,%edi
9d35(5): call 0x5e6b(%rip)
9d3a(3): mov %rax,%rdi
9d3d(5): call 0xffff96c3(%rip)
9d42(6): cmp 0x2175fc(%rip),%eax
9d48(2): jle 0x8(%rip)
9d4a(6): mov %eax,0x2175f4(%rip)
9d50(4): mov 0x40(%rbx),%rax
9d54(3): mov %r13,%rsi
9d57(3): movzx %al,%edx
9d5a(4): shr $0xc,%rax
9d5e(3): mov %rax,%rdi
9d61(3): xor %dil,%dil
9d64(2): or %edx,%edi
9d66(5): call 0x5e3a(%rip)
9d6b(3): mov %rax,%rdi
9d6e(5): call 0xffff9692(%rip)
9d73(6): mov 0x2175c7(%rip),%edx
9d79(2): cmp %edx,%eax
9d7b(2): jle 0xa(%rip)
9d7d(6): mov %eax,0x2175bd(%rip)
9d83(2): mov %eax,%edx
9d85(6): mov 0x2175b9(%rip),%eax
9d8b(4): lea 0x2(%rdx,%rax,1),%eax
9d8f(6): cmp 0x2175a7(%rip),%eax
9d95(6): jle 0xfffffbd6(%rip)
9d9b(5): jmp 0x15d(%rip)
9da0(4): movzx (%r15),%ecx
9da4(7): mov 0xfffffc78(%rbp),%r12
9dab(2): test %cl,%cl
9dad(6): jz 0xfffffe4d(%rip)
9db3(7): mov 0xfffffc78(%rbp),%rdi
9dba(6): mov %dl,0xfffffc6e(%rbp)
9dc0(6): mov %cl,0xfffffc6f(%rbp)
9dc6(7): mov %r8b,0xfffffc70(%rbp)
9dcd(5): call 0xffff9633(%rip)
9dd2(3): mov %r15,%rdi
9dd5(3): mov %rax,%r12
9dd8(5): call 0xffff9628(%rip)
9ddd(5): lea 0x20(%r12,%rax,1),%rax
9de2(7): movzx 0xfffffc6f(%rbp),%ecx
9de9(5): movzx 0x1(%r15),%r10d
9dee(8): movzx 0xfffffc70(%rbp),%r8d
9df6(7): movzx 0xfffffc6e(%rbp),%edx
9dfd(4): and $0xfffffff0,%rax
9e01(3): sub %rax,%rsp
9e04(5): lea 0xf(%rsp),%rdi
9e09(4): and $0xfffffff0,%rdi
9e0d(3): cmp $0x2e,%cl
9e10(3): mov %rdi,%r12
9e13(6): jz 0xf5(%rip)
9e19(3): mov %r15,%rsi
9e1c(2): jmp 0xf(%rip)
9e1e(2): nop 
9e20(3): mov %r10d,%ecx
9e23(5): movzx 0x1(%rsi),%r10d
9e28(3): mov %rax,%rdi
9e2b(4): lea 0x1(%rdi),%rax
9e2f(4): add $0x1,%rsi
9e33(3): test %r10b,%r10b
9e36(3): mov %cl,0xffffffff(%rax)
9e39(2): jnz 0xffffffe7(%rip)
9e3b(3): cmp %rsi,%r15
9e3e(2): jnb 0xf(%rip)
9e40(4): cmp $0x2f,0xffffffff(%rsi)
9e44(2): jz 0x9(%rip)
9e46(3): mov $0x2f,(%rax)
9e49(4): lea 0x2(%rdi),%rax
9e4d(2): test %dl,%dl
9e4f(2): jz 0x23(%rip)
9e51(7): mov 0xfffffc78(%rbp),%rcx
9e58(8): nop 0x0(%rax,%rax,1)
9e60(4): add $0x1,%rcx
9e64(4): add $0x1,%rax
9e68(3): mov %dl,0xffffffff(%rax)
9e6b(3): movzx (%rcx),%edx
9e6e(2): test %dl,%dl
9e70(2): jnz 0xfffffff0(%rip)
9e72(3): mov $0x0,(%rax)
9e75(5): jmp 0xfffff94e(%rip)
9e7a(6): nop 0x0(%rax,%rax,1)
9e80(7): mov 0xfffffc78(%rbp),%rdi
9e87(5): call 0xffffbc59(%rip)
9e8c(3): movzx %al,%edx
9e8f(2): test %al,%al
9e91(6): mov %edx,0xc4(%rbx)
9e97(6): jz 0xfffff8fa(%rip)
9e9d(7): mov $0x1,0x217505(%rip)
9ea4(5): jmp 0xfffff8ed(%rip)
9ea9(7): nop 0x0(%rax)
9eb0(6): mov %eax,0x21749e(%rip)
9eb6(5): jmp 0xfffffaa7(%rip)
9ebb(5): nop 0x0(%rax,%rax,1)
9ec0(4): mov 0x48(%rbx),%rdi
9ec4(7): mov 0x21614d(%rip),%r8
9ecb(7): lea 0xfffffd30(%rbp),%rsi
9ed2(6): mov 0x217444(%rip),%edx
9ed8(5): mov $0x1,%ecx
9edd(5): call 0x4ce3(%rip)
9ee2(2): xor %esi,%esi
9ee4(3): mov %rax,%rdi
9ee7(5): call 0x6339(%rip)
9eec(6): cmp 0x21744a(%rip),%eax
9ef2(6): jle 0xfffffa79(%rip)
9ef8(6): mov %eax,0x21743e(%rip)
9efe(5): jmp 0xfffffa6d(%rip)
9f03(5): nop 0x0(%rax,%rax,1)
9f08(3): test %r10b,%r10b
9f0b(3): mov %rdi,%rax
9f0e(6): jz 0xffffff3f(%rip)
9f14(5): jmp 0xffffff05(%rip)
9f19(7): nop 0x0(%rax)
9f20(4): movzx (%r15),%ecx
9f24(2): test %cl,%cl
9f26(6): jnz 0xfffffe8d(%rip)
9f2c(7): mov 0xfffffc78(%rbp),%r12
9f33(5): jmp 0xfffff899(%rip)
9f38(8): nop 0x0(%rax,%rax,1)
9f40(7): cmp 0x2163a1(%rip),%r14
9f47(6): jz 0x2f9(%rip)
9f4d(7): mov $0x0,(%r8)
9f54(3): mov %r15,%rsi
9f57(3): mov %r12,%rdi
9f5a(7): mov %r8,0xfffffc70(%rbp)
9f61(5): call 0x2e5f(%rip)
9f66(2): test %eax,%eax
9f68(5): mov $0x1,%ecx
9f6d(5): mov $0x2,%edx
9f72(7): mov 0xfffffc70(%rbp),%r8
9f79(6): jle 0x437(%rip)
9f7f(6): or %cl,0x2173df(%rip)
9f85(2): test %eax,%eax
9f87(7): mov %r8,0xfffffc70(%rbp)
9f8e(6): mov %edx,0xbc(%rbx)
9f94(2): jns 0x2e(%rip)
9f96(3): mov %r12,%rdx
9f99(5): mov $0x3,%esi
9f9e(2): xor %edi,%edi
9fa0(5): call 0x9bf0(%rip)
9fa5(7): mov 0xfffffc70(%rbp),%r8
9fac(7): lea 0xffd9(%rip),%rdx
9fb3(3): mov %rax,%rcx
9fb6(2): xor %edi,%edi
9fb8(2): xor %eax,%eax
9fba(3): mov (%r8),%esi
9fbd(5): call 0xffff97a3(%rip)
9fc2(3): mov 0x30(%rbx),%eax
9fc5(5): and $0xf000,%eax
9fca(5): cmp $0xa000,%eax
9fcf(6): jnz 0xfffff8d0(%rip)
9fd5(6): mov 0x21735d(%rip),%edi
9fdb(2): test %edi,%edi
9fdd(2): jz 0x10(%rip)
9fdf(1): nop 
9fe0(7): cmp $0x0,0x217316(%rip)
9fe7(6): jz 0xd4(%rip)
9fed(4): mov 0x48(%rbx),%rsi
9ff1(3): mov %r12,%rdi
9ff4(5): call 0x205c(%rip)
9ff9(3): test %rax,%rax
9ffc(3): mov %rax,%r14
9fff(4): mov %rax,0x8(%rbx)
a003(6): jz 0x2ad(%rip)
a009(4): cmp $0x2f,(%r14)
a00d(6): jz 0x21b(%rip)
a013(3): mov %r12,%rdi
a016(5): call 0x2c3a(%rip)
a01b(3): test %rax,%rax
a01e(6): jz 0x20a(%rip)
a024(3): mov %r14,%rdi
a027(7): mov %rax,0xfffffc70(%rbp)
a02e(5): call 0xffff93d2(%rip)
a033(7): mov 0xfffffc70(%rbp),%rdx
a03a(5): lea 0x2(%rdx,%rax,1),%rdi
a03f(5): call 0xa551(%rip)
a044(7): mov 0xfffffc70(%rbp),%rdx
a04b(3): mov %rax,%r15
a04e(6): cmp $0x2f,0xffffffff(%r12,%rdx,1)
a054(2): jz 0x6(%rip)
a056(4): add $0x1,%rdx
a05a(3): mov %r12,%rsi
a05d(3): mov %r15,%rdi
a060(5): call 0xffff9690(%rip)
a065(3): mov %r14,%rsi
a068(3): mov %rax,%rdi
a06b(5): call 0xffff9275(%rip)
a070(3): test %r15,%r15
a073(6): jz 0x26d(%rip)
a079(6): mov 0xc4(%rbx),%esi
a07f(2): test %esi,%esi
a081(6): jz 0x30f(%rip)
a087(7): cmp $0x1,0x217286(%rip)
a08e(2): jnbe 0x42(%rip)
a090(7): cmp $0x0,0x217266(%rip)
a097(2): jnz 0x39(%rip)
a099(7): nop 0x0(%rax)
a0a0(3): mov %r15,%rdi
a0a3(5): call 0xffff97dd(%rip)
a0a8(3): mov 0x30(%rbx),%eax
a0ab(5): and $0xf000,%eax
a0b0(5): cmp $0xa000,%eax
a0b5(6): jnz 0xfffff7ea(%rip)
a0bb(a): mov $0x6,0xa8(%rbx)
a0c5(5): jmp 0xfffff7ef(%rip)
a0ca(6): nop 0x0(%rax,%rax,1)
a0d0(7): lea 0xfffffc80(%rbp),%rdx
a0d7(3): mov %r15,%rsi
a0da(5): mov $0x1,%edi
a0df(5): call 0xffff9561(%rip)
a0e4(2): test %eax,%eax
a0e6(2): jnz 0xffffffba(%rip)
a0e8(6): mov 0xfffffc98(%rbp),%eax
a0ee(7): mov $0x1,0xb9(%rbx)
a0f5(6): mov %eax,0xac(%rbx)
a0fb(2): jmp 0xffffffa5(%rip)
a0fd(3): nop (%rax)
a100(3): test %r13b,%r13b
a103(2): jz 0x1d(%rip)
a105(7): cmp $0x0,0x2171e9(%rip)
a10c(2): jnz 0x14(%rip)
a10e(a): mov $0x9,0xa8(%rbx)
a118(5): jmp 0xfffff79c(%rip)
a11d(3): nop (%rax)
a120(a): mov $0x3,0xa8(%rbx)
a12a(5): jmp 0xfffff78a(%rip)
a12f(1): nop 
a130(3): mov 0x34(%rbx),%edi
a133(5): call 0xfffff48d(%rip)
a138(6): cmp 0x217212(%rip),%eax
a13e(6): jle 0xfffff7e4(%rip)
a144(6): mov %eax,0x217206(%rip)
a14a(5): jmp 0xfffff7d8(%rip)
a14f(1): nop 
a150(7): cmp $0x0,0x21720e(%rip)
a157(6): jnz 0xfffff7ee(%rip)
a15d(5): jmp 0xfffff80e(%rip)
a162(6): nop 0x0(%rax,%rax,1)
a168(3): mov 0x34(%rbx),%edi
a16b(5): call 0xfffff455(%rip)
a170(6): cmp 0x2171d2(%rip),%eax
a176(6): jle 0xfffff7c6(%rip)
a17c(6): mov %eax,0x2171c6(%rip)
a182(5): jmp 0xfffff7ba(%rip)
a187(9): nop 0x0(%rax,%rax,1)
a190(7): cmp $0x0,0x217196(%rip)
a197(4): mov 0x38(%rbx),%r14d
a19b(6): jz 0x1c5(%rip)
a1a1(7): lea 0xd6e5(%rip),%rcx
a1a8(3): mov %r14d,%r8d
a1ab(5): mov $0x15,%edx
a1b0(5): mov $0x1,%esi
a1b5(3): mov %r13,%rdi
a1b8(2): xor %eax,%eax
a1ba(5): call 0xffff96b6(%rip)
a1bf(3): mov %r13,%rax
a1c2(2): mov (%rax),%ecx
a1c4(4): add $0x4,%rax
a1c8(6): lea 0xfefefeff(%rcx),%edx
a1ce(2): not %ecx
a1d0(2): and %ecx,%edx
a1d2(6): and $0x80808080,%edx
a1d8(2): jz 0xffffffea(%rip)
a1da(2): mov %edx,%ecx
a1dc(3): shr $0x10,%ecx
a1df(6): test $0x8080,%edx
a1e5(3): cmove %ecx,%edx
a1e8(4): lea 0x2(%rax),%rcx
a1ec(2): mov %edx,%esi
a1ee(4): cmove %rcx,%rax
a1f2(3): add %dl,%sil
a1f5(4): sbb $0x3,%rax
a1f9(3): sub %r13d,%eax
a1fc(6): cmp %eax,0x21714a(%rip)
a202(6): jnl 0xfffff72d(%rip)
a208(6): mov %eax,0x21713e(%rip)
a20e(5): jmp 0xfffff721(%rip)
a213(5): nop 0x0(%rax,%rax,1)
a218(7): mov 0xfffffc78(%rbp),%r12
a21f(5): jmp 0xfffff5a4(%rip)
a224(4): nop 0x0(%rax)
a228(3): mov %r14,%rdi
a22b(5): call 0xa595(%rip)
a230(3): mov %rax,%r15
a233(5): jmp 0xfffffe3d(%rip)
a238(8): nop 0x0(%rax,%rax,1)
a240(7): mov $0x5f,(%r8)
a247(3): mov 0x30(%rbx),%eax
a24a(a): mov $0x0,0xbc(%rbx)
a254(5): and $0xf000,%eax
a259(5): cmp $0xa000,%eax
a25e(6): jnz 0xfffff641(%rip)
a264(5): jmp 0xfffffd89(%rip)
a269(7): nop 0x0(%rax)
a270(5): call 0xffff9030(%rip)
a275(3): cmp $0x2,(%rax)
a278(6): jz 0xfffff8c8(%rip)
a27e(7): lea 0xd661(%rip),%rsi
a285(5): mov $0x5,%edx
a28a(2): xor %edi,%edi
a28c(5): call 0xffff9154(%rip)
a291(3): mov %r12,%rdx
a294(3): mov %rax,%rsi
a297(5): mov $0x1,%edi
a29c(5): call 0xffffc064(%rip)
a2a1(3): xor %r12d,%r12d
a2a4(5): jmp 0xfffff6ed(%rip)
a2a9(7): nop 0x0(%rax)
a2b0(7): lea 0xd640(%rip),%rsi
a2b7(2): xor %edi,%edi
a2b9(5): mov $0x5,%edx
a2be(5): call 0xffff9122(%rip)
a2c3(4): movzx %r13b,%edi
a2c7(3): mov %r12,%rdx
a2ca(3): mov %rax,%rsi
a2cd(5): call 0xffffc033(%rip)
a2d2(4): mov 0x8(%rbx),%r14
a2d6(3): test %r14,%r14
a2d9(6): jnz 0xfffffd30(%rip)
a2df(1): nop 
a2e0(3): xor %r15d,%r15d
a2e3(5): jmp 0xfffffdbd(%rip)
a2e8(8): nop 0x0(%rax,%rax,1)
a2f0(7): cmp $0x0,0x21701b(%rip)
a2f7(6): jz 0xfffff6e9(%rip)
a2fd(5): mov $0x13,%edi
a302(7): mov %r8b,0xfffffc70(%rbp)
a309(5): call 0xffffb367(%rip)
a30e(2): test %al,%al
a310(8): movzx 0xfffffc70(%rbp),%r8d
a318(6): jnz 0xfffff7e8(%rip)
a31e(5): mov $0x12,%edi
a323(5): call 0xffffb34d(%rip)
a328(2): test %al,%al
a32a(8): movzx 0xfffffc70(%rbp),%r8d
a332(6): jnz 0xfffff7ce(%rip)
a338(5): mov $0x14,%edi
a33d(5): call 0xffffb333(%rip)
a342(2): test %al,%al
a344(8): movzx 0xfffffc70(%rbp),%r8d
a34c(6): jnz 0xfffff7b4(%rip)
a352(5): jmp 0xfffff68e(%rip)
a357(9): nop 0x0(%rax,%rax,1)
a360(3): mov %r14d,%edi
a363(5): call 0x55fd(%rip)
a368(3): test %rax,%rax
a36b(3): mov %rax,%rdi
a36e(6): jz 0xfffffe33(%rip)
a374(2): xor %esi,%esi
a376(5): call 0x5eaa(%rip)
a37b(5): mov $0x0,%edx
a380(2): test %eax,%eax
a382(3): cmovs %edx,%eax
a385(5): jmp 0xfffffe77(%rip)
a38a(6): nop 0x0(%rax,%rax,1)
a390(4): mov 0x8(%rbx),%rdi
a394(5): call 0xffffb74c(%rip)
a399(2): test %al,%al
a39b(6): jz 0xfffffcec(%rip)
a3a1(a): mov $0xffffffff,0xc4(%rbx)
a3ab(5): jmp 0xfffffcdc(%rip)
a3b0(3): mov (%r8),%edx
a3b3(3): lea 0xffffffea(%rdx),%ecx
a3b6(3): and $0xef,%ecx
a3b9(2): jz 0x7(%rip)
a3bb(3): cmp $0x5f,%edx
a3be(2): jnz 0xd(%rip)
a3c0(4): mov 0x18(%rbx),%rdx
a3c4(7): mov %rdx,0x215f1d(%rip)
a3cb(2): xor %ecx,%ecx
a3cd(2): xor %edx,%edx
a3cf(5): jmp 0xfffffbb0(%rip)
a3d4(5): call 0xffff904c(%rip)
a3d9(5): call 0xa407(%rip)
a3de(5): mov $0x1,%esi
a3e3(5): jmp 0xfffff30a(%rip)

"print_dir" :
a3f0(2): push %r15
a3f2(2): push %r14
a3f4(3): mov %rdi,%r14
a3f7(2): push %r13
a3f9(2): push %r12
a3fb(1): push %rbp
a3fc(1): push %rbx
a3fd(3): mov %rsi,%rbx
a400(7): sub $0x348,%rsp
a407(4): mov %edx,0xc(%rsp)
a40b(4): mov %dl,0xb(%rsp)
a40f(9): mov $0x28,%rax
a418(8): mov %rax,0x338(%rsp)
a420(2): xor %eax,%eax
a422(5): call 0xffff8e7e(%rip)
a427(3): mov %r14,%rdi
a42a(6): mov $0x0,(%rax)
a430(3): mov %rax,%r12
a433(5): call 0xffff8f7d(%rip)
a438(3): test %rax,%rax
a43b(6): jz 0x535(%rip)
a441(8): cmp $0x0,0x216f7f(%rip)
a449(3): mov %rax,%r13
a44c(6): jz 0x17b(%rip)
a452(3): mov %rax,%rdi
a455(5): call 0xffff915b(%rip)
a45a(2): test %eax,%eax
a45c(5): lea 0x10(%rsp),%rdx
a461(2): js 0x6f(%rip)
a463(2): mov %eax,%esi
a465(5): mov $0x1,%edi
a46a(5): call 0xffff9226(%rip)
a46f(3): shr $0x1f,%eax
a472(2): test %al,%al
a474(2): jz 0x70(%rip)
a476(7): lea 0xd9db(%rip),%rsi
a47d(5): mov $0x5,%edx
a482(2): xor %edi,%edi
a484(5): call 0xffff8f5c(%rip)
a489(5): movzx 0xc(%rsp),%edi
a48e(3): mov %r14,%rdx
a491(3): mov %rax,%rsi
a494(5): call 0xffffbe6c(%rip)
a499(3): mov %r13,%rdi
a49c(5): call 0xffff90a4(%rip)
a4a1(8): mov 0x338(%rsp),%rax
a4a9(9): xor $0x28,%rax
a4b2(6): jnz 0x5e8(%rip)
a4b8(7): add $0x348,%rsp
a4bf(1): pop %rbx
a4c0(1): pop %rbp
a4c1(2): pop %r12
a4c3(2): pop %r13
a4c5(2): pop %r14
a4c7(2): pop %r15
a4c9(1): ret near (%rsp)
a4ca(6): nop 0x0(%rax,%rax,1)
a4d0(3): mov %r14,%rsi
a4d3(5): mov $0x1,%edi
a4d8(5): call 0xffff9168(%rip)
a4dd(3): shr $0x1f,%eax
a4e0(2): test %al,%al
a4e2(2): jnz 0xffffff94(%rip)
a4e4(5): mov 0x18(%rsp),%rdx
a4e9(5): mov $0x10,%edi
a4ee(5): mov 0x10(%rsp),%r15
a4f3(4): mov %rdx,(%rsp)
a4f7(5): call 0xa099(%rip)
a4fc(4): mov (%rsp),%rdx
a500(7): mov 0x216ec1(%rip),%rdi
a507(3): mov %rax,%rsi
a50a(4): mov %r15,0x8(%rax)
a50e(3): mov %rax,%rbp
a511(3): mov %rdx,(%rax)
a514(5): call 0x429c(%rip)
a519(3): test %rax,%rax
a51c(6): jz 0x583(%rip)
a522(3): cmp %rax,%rbp
a525(2): jz 0x57(%rip)
a527(3): mov %rbp,%rdi
a52a(5): call 0xffff9356(%rip)
a52f(3): mov %r14,%rdx
a532(5): mov $0x3,%esi
a537(2): xor %edi,%edi
a539(5): call 0x9657(%rip)
a53e(7): lea 0xd93b(%rip),%rsi
a545(3): mov %rax,%rbx
a548(5): mov $0x5,%edx
a54d(2): xor %edi,%edi
a54f(5): call 0xffff8e91(%rip)
a554(3): mov %rbx,%rcx
a557(3): mov %rax,%rdx
a55a(2): xor %esi,%esi
a55c(2): xor %edi,%edi
a55e(2): xor %eax,%eax
a560(5): call 0xffff9200(%rip)
a565(3): mov %r13,%rdi
a568(5): call 0xffff8fd8(%rip)
a56d(a): mov $0x2,0x216c99(%rip)
a577(5): jmp 0xffffff2a(%rip)
a57c(7): mov 0x216b75(%rip),%rax
a583(7): mov 0x216b76(%rip),%rdx
a58a(5): mov 0x18(%rsp),%rbp
a58f(5): mov 0x10(%rsp),%r15
a594(3): sub %rax,%rdx
a597(4): cmp $0xf,%rdx
a59b(2): jnbe 0x1a(%rip)
a59d(7): lea 0x216b3c(%rip),%rdi
a5a4(5): mov $0x10,%esi
a5a9(5): call 0xaf87(%rip)
a5ae(7): mov 0x216b43(%rip),%rax
a5b5(4): lea 0x10(%rax),%rdx
a5b9(7): mov %rdx,0x216b38(%rip)
a5c0(4): mov %r15,0x8(%rax)
a5c4(3): mov %rbp,(%rax)
a5c7(5): call 0xffffef29(%rip)
a5cc(7): cmp $0x0,0x216d23(%rip)
a5d3(6): jnz 0xad(%rip)
a5d9(7): cmp $0x0,0x216cd8(%rip)
a5e0(6): jnz 0xa0(%rip)
a5e6(8): mov $0x0,(%rsp)
a5ee(2): nop 
a5f0(8): mov $0x0,(%r12)
a5f8(3): mov %r13,%rdi
a5fb(5): call 0xffff9055(%rip)
a600(3): test %rax,%rax
a603(3): mov %rax,%rbp
a606(6): jz 0x13a(%rip)
a60c(4): lea 0x13(%rax),%rbx
a610(6): mov 0x216cda(%rip),%eax
a616(3): cmp $0x2,%eax
a619(6): jz 0x2a7(%rip)
a61f(4): cmp $0x2e,0x13(%rbp)
a623(6): jz 0x27d(%rip)
a629(2): test %eax,%eax
a62b(6): jnz 0x295(%rip)
a631(7): mov 0x216ca8(%rip),%r15
a638(3): test %r15,%r15
a63b(2): jnz 0x1a(%rip)
a63d(5): jmp 0x283(%rip)
a642(6): nop 0x0(%rax,%rax,1)
a648(4): mov 0x8(%r15),%r15
a64c(3): test %r15,%r15
a64f(6): jz 0x271(%rip)
a655(3): mov (%r15),%rdi
a658(5): mov $0x4,%edx
a65d(3): mov %rbx,%rsi
a660(5): call 0xffff8e90(%rip)
a665(2): test %eax,%eax
a667(2): jnz 0xffffffe1(%rip)
a669(7): nop 0x0(%rax)
a670(5): call 0xffffc870(%rip)
a675(5): jmp 0xffffff7b(%rip)
a67a(6): nop 0x0(%rax,%rax,1)
a680(7): cmp $0x0,0x215989(%rip)
a687(2): jnz 0x2a(%rip)
a689(7): mov 0x215bf8(%rip),%rdi
a690(4): mov 0x28(%rdi),%rax
a694(4): cmp 0x30(%rdi),%rax
a698(6): jnb 0x3f3(%rip)
a69e(4): lea 0x1(%rax),%rdx
a6a2(4): mov %rdx,0x28(%rdi)
a6a6(3): mov $0xa,(%rax)
a6a9(8): add $0x1,0x216b47(%rip)
a6b1(7): cmp $0x0,0x216c60(%rip)
a6b8(7): mov $0x0,0x215951(%rip)
a6bf(6): jnz 0x384(%rip)
a6c5(2): xor %ebp,%ebp
a6c7(7): cmp $0x0,0x216c43(%rip)
a6ce(6): jnz 0x334(%rip)
a6d4(3): test %rbx,%rbx
a6d7(7): mov 0x216bea(%rip),%rsi
a6de(7): lea 0x216a5b(%rip),%r9
a6e5(4): cmove %r14,%rbx
a6e9(4): sub $0x8,%rsp
a6ed(6): mov $0x1,%r8d
a6f3(1): push %rbp
a6f4(2): xor %ecx,%ecx
a6f6(5): mov $0xffffffff,%edx
a6fb(3): mov %rbx,%rdi
a6fe(5): call 0xffffcd92(%rip)
a703(3): mov %rbp,%rdi
a706(5): call 0xffff917a(%rip)
a70b(7): mov 0x215b76(%rip),%rcx
a712(7): lea 0xd426(%rip),%rdi
a719(5): mov $0x1,%esi
a71e(5): mov $0x2,%edx
a723(5): call 0xffff8fad(%rip)
a728(1): pop %rcx
a729(8): add $0x2,0x216ac7(%rip)
a731(1): pop %rsi
a732(5): jmp 0xfffffeb4(%rip)
a737(9): nop 0x0(%rax,%rax,1)
a740(4): mov (%r12),%edx
a744(2): test %edx,%edx
a746(2): jz 0x30(%rip)
a748(7): lea 0xd1de(%rip),%rsi
a74f(2): xor %edi,%edi
a751(5): mov $0x5,%edx
a756(5): call 0xffff8c8a(%rip)
a75b(5): movzx 0xb(%rsp),%edi
a760(3): mov %r14,%rdx
a763(3): mov %rax,%rsi
a766(5): call 0xffffbb9a(%rip)
a76b(5): cmp $0x4b,(%r12)
a770(6): jz 0xffffff00(%rip)
a776(3): mov %r13,%rdi
a779(5): call 0xffff8dc7(%rip)
a77e(2): test %eax,%eax
a780(6): jnz 0x230(%rip)
a786(5): call 0xffffb4ba(%rip)
a78b(7): cmp $0x0,0x216b64(%rip)
a792(6): jnz 0x206(%rip)
a798(6): mov 0x216b9a(%rip),%eax
a79e(2): test %eax,%eax
a7a0(2): jz 0xf(%rip)
a7a2(7): cmp $0x0,0x216b83(%rip)
a7a9(6): jz 0xdb(%rip)
a7af(7): cmp $0x0,0x216b62(%rip)
a7b6(6): jnz 0x222(%rip)
a7bc(7): lea 0xd194(%rip),%rsi
a7c3(5): mov $0x5,%edx
a7c8(2): xor %edi,%edi
a7ca(5): call 0xffff8c16(%rip)
a7cf(7): mov 0x215ab2(%rip),%rsi
a7d6(3): mov %rax,%rbx
a7d9(3): mov %rax,%rdi
a7dc(5): call 0xffff8d94(%rip)
a7e1(3): mov %rbx,%rdi
a7e4(5): call 0xffff8c1c(%rip)
a7e9(7): mov 0x215a98(%rip),%rdi
a7f0(7): add %rax,0x216a01(%rip)
a7f7(4): mov 0x28(%rdi),%rax
a7fb(4): cmp 0x30(%rdi),%rax
a7ff(6): jnb 0x26e(%rip)
a805(4): lea 0x1(%rax),%rdx
a809(4): mov %rdx,0x28(%rdi)
a80d(3): mov $0x20,(%rax)
a810(7): mov 0x216b09(%rip),%r8
a817(6): mov 0x216b0b(%rip),%edx
a81d(8): lea 0xa0(%rsp),%rsi
a825(4): mov (%rsp),%rdi
a829(5): mov $0x200,%ecx
a82e(8): add $0x1,0x2169c2(%rip)
a836(5): call 0x438a(%rip)
a83b(7): mov 0x215a46(%rip),%rsi
a842(3): mov %rax,%rbx
a845(3): mov %rax,%rdi
a848(5): call 0xffff8d28(%rip)
a84d(3): mov %rbx,%rdi
a850(5): call 0xffff8bb0(%rip)
a855(7): mov 0x215a2c(%rip),%rdi
a85c(7): add %rax,0x216995(%rip)
a863(4): mov 0x28(%rdi),%rax
a867(4): cmp 0x30(%rdi),%rax
a86b(6): jnb 0x211(%rip)
a871(4): lea 0x1(%rax),%rdx
a875(4): mov %rdx,0x28(%rdi)
a879(3): mov $0xa,(%rax)
a87c(8): add $0x1,0x216974(%rip)
a884(8): cmp $0x0,0x216b24(%rip)
a88c(6): jz 0xfffffc15(%rip)
a892(5): call 0xffffe70e(%rip)
a897(5): jmp 0xfffffc0a(%rip)
a89c(4): nop 0x0(%rax)
a8a0(2): test %eax,%eax
a8a2(6): jz 0xfffffdce(%rip)
a8a8(2): xor %eax,%eax
a8aa(4): cmp $0x2e,0x14(%rbp)
a8ae(3): setz %al
a8b1(5): cmp $0x0,0x14(%rbp,%rax,1)
a8b6(6): jz 0xfffffdba(%rip)
a8bc(4): nop 0x0(%rax)
a8c0(7): mov 0x216a21(%rip),%r15
a8c7(3): test %r15,%r15
a8ca(2): jnz 0xf(%rip)
a8cc(2): jmp 0x2c(%rip)
a8ce(2): nop 
a8d0(4): mov 0x8(%r15),%r15
a8d4(3): test %r15,%r15
a8d7(2): jz 0x21(%rip)
a8d9(3): mov (%r15),%rdi
a8dc(5): mov $0x4,%edx
a8e1(3): mov %rbx,%rsi
a8e4(5): call 0xffff8c0c(%rip)
a8e9(2): test %eax,%eax
a8eb(2): jnz 0xffffffe5(%rip)
a8ed(5): jmp 0xfffffd83(%rip)
a8f2(6): nop 0x0(%rax,%rax,1)
a8f8(4): movzx 0x12(%rbp),%eax
a8fc(2): xor %esi,%esi
a8fe(3): sub $0x1,%eax
a901(2): cmp $0xd,%al
a903(2): jnbe 0xf(%rip)
a905(7): lea 0xbcd4(%rip),%rcx
a90c(3): movzx %al,%eax
a90f(3): mov 0x0(%rcx,%rax,4),%esi
a912(2): xor %edx,%edx
a914(3): mov %r14,%rcx
a917(3): mov %rbx,%rdi
a91a(5): call 0xffffed76(%rip)
a91f(4): add %rax,(%rsp)
a923(7): cmp $0x1,0x216a0e(%rip)
a92a(6): jnz 0xfffffd46(%rip)
a930(7): cmp $0xff,0x2169f9(%rip)
a937(6): jnz 0xfffffd39(%rip)
a93d(7): cmp $0x0,0x2169e8(%rip)
a944(6): jnz 0xfffffd2c(%rip)
a94a(7): cmp $0x0,0x2169a5(%rip)
a951(6): jnz 0xfffffd1f(%rip)
a957(5): call 0xffffb2e9(%rip)
a95c(5): call 0xffffe644(%rip)
a961(5): call 0xffffeb8f(%rip)
a966(5): jmp 0xfffffd0a(%rip)
a96b(5): nop 0x0(%rax,%rax,1)
a970(7): lea 0xcf9d(%rip),%rsi
a977(2): xor %edi,%edi
a979(5): mov $0x5,%edx
a97e(5): call 0xffff8a62(%rip)
a983(5): movzx 0xc(%rsp),%edi
a988(3): mov %r14,%rdx
a98b(3): mov %rax,%rsi
a98e(5): call 0xffffb972(%rip)
a993(5): jmp 0xfffffb0e(%rip)
a998(2): xor %esi,%esi
a99a(3): mov %r14,%rdi
a99d(5): call 0xffffb523(%rip)
a9a2(5): jmp 0xfffffdf6(%rip)
a9a7(9): nop 0x0(%rax,%rax,1)
a9b0(7): lea 0xcf8b(%rip),%rsi
a9b7(2): xor %edi,%edi
a9b9(5): mov $0x5,%edx
a9be(5): call 0xffff8a22(%rip)
a9c3(5): movzx 0xc(%rsp),%edi
a9c8(3): mov %r14,%rdx
a9cb(3): mov %rax,%rsi
a9ce(5): call 0xffffb932(%rip)
a9d3(5): jmp 0xfffffdb3(%rip)
a9d8(7): mov 0x2158a9(%rip),%rcx
a9df(7): lea 0xced6(%rip),%rdi
a9e6(5): mov $0x2,%edx
a9eb(5): mov $0x1,%esi
a9f0(5): call 0xffff8ce0(%rip)
a9f5(8): add $0x2,0x2167fb(%rip)
a9fd(5): jmp 0xfffffdbf(%rip)
aa02(5): mov $0x2,%esi
aa07(3): mov %r14,%rdi
aa0a(5): call 0x1b36(%rip)
aa0f(3): test %rax,%rax
aa12(3): mov %rax,%rbp
aa15(6): jnz 0xfffffcbf(%rip)
aa1b(7): lea 0xceac(%rip),%rsi
aa22(2): xor %edi,%edi
aa24(5): mov $0x5,%edx
aa29(5): call 0xffff89b7(%rip)
aa2e(5): movzx 0xc(%rsp),%edi
aa33(3): mov %r14,%rdx
aa36(3): mov %rax,%rsi
aa39(5): call 0xffffb8c7(%rip)
aa3e(5): jmp 0xfffffc96(%rip)
aa43(7): mov 0x21583e(%rip),%rcx
aa4a(7): lea 0xce6b(%rip),%rdi
aa51(5): mov $0x2,%edx
aa56(5): mov $0x1,%esi
aa5b(5): call 0xffff8c75(%rip)
aa60(8): add $0x2,0x216790(%rip)
aa68(5): jmp 0xfffffc5d(%rip)
aa6d(5): mov $0x20,%esi
aa72(5): call 0xffff8a1e(%rip)
aa77(5): jmp 0xfffffd99(%rip)
aa7c(5): mov $0xa,%esi
aa81(5): call 0xffff8a0f(%rip)
aa86(5): jmp 0xfffffdf6(%rip)
aa8b(5): mov $0xa,%esi
aa90(5): call 0xffff8a00(%rip)
aa95(5): jmp 0xfffffc14(%rip)
aa9a(5): call 0xffff8986(%rip)
aa9f(5): call 0x9d41(%rip)

"xstrcoll_ctime" :
aab0(7): mov 0x80(%rsi),%rax
aab7(7): cmp %rax,0x80(%rdi)
aabe(2): jnle 0x32(%rip)
aac0(2): jl 0x20(%rip)
aac2(7): mov 0x88(%rsi),%rax
aac9(6): sub 0x88(%rdi),%eax
aacf(2): jnz 0x16(%rip)
aad1(3): mov (%rsi),%rsi
aad4(3): mov (%rdi),%rdi
aad7(5): jmp 0xffffb309(%rip)
aadc(4): nop 0x0(%rax)
aae0(5): mov $0x1,%eax
aae5(2): REP ret near (%rsp)
aae7(9): nop 0x0(%rax,%rax,1)
aaf0(5): mov $0xffffffff,%eax
aaf5(1): ret near (%rsp)

"xstrcoll_atime" :
ab00(4): mov 0x60(%rsi),%rax
ab04(4): cmp %rax,0x60(%rdi)
ab08(2): jnle 0x28(%rip)
ab0a(2): jl 0x16(%rip)
ab0c(4): mov 0x68(%rsi),%rax
ab10(3): sub 0x68(%rdi),%eax
ab13(2): jnz 0x12(%rip)
ab15(3): mov (%rsi),%rsi
ab18(3): mov (%rdi),%rdi
ab1b(5): jmp 0xffffb2c5(%rip)
ab20(5): mov $0x1,%eax
ab25(2): REP ret near (%rsp)
ab27(9): nop 0x0(%rax,%rax,1)
ab30(5): mov $0xffffffff,%eax
ab35(1): ret near (%rsp)

"xstrcoll_mtime" :
ab40(4): mov 0x70(%rsi),%rax
ab44(4): cmp %rax,0x70(%rdi)
ab48(2): jnle 0x28(%rip)
ab4a(2): jl 0x16(%rip)
ab4c(4): mov 0x78(%rsi),%rax
ab50(3): sub 0x78(%rdi),%eax
ab53(2): jnz 0x12(%rip)
ab55(3): mov (%rsi),%rsi
ab58(3): mov (%rdi),%rdi
ab5b(5): jmp 0xffffb285(%rip)
ab60(5): mov $0x1,%eax
ab65(2): REP ret near (%rsp)
ab67(9): nop 0x0(%rax,%rax,1)
ab70(5): mov $0xffffffff,%eax
ab75(1): ret near (%rsp)

"rev_xstrcoll_mtime" :
ab80(4): mov 0x70(%rdi),%rax
ab84(4): cmp %rax,0x70(%rsi)
ab88(3): mov %rsi,%rdx
ab8b(2): jnle 0x25(%rip)
ab8d(2): jl 0x1b(%rip)
ab8f(4): mov 0x78(%rdi),%rax
ab93(3): sub 0x78(%rsi),%eax
ab96(2): jnz 0x17(%rip)
ab98(3): mov (%rdi),%rsi
ab9b(3): mov (%rdx),%rdi
ab9e(5): jmp 0xffffb242(%rip)
aba3(5): nop 0x0(%rax,%rax,1)
aba8(5): mov $0x1,%eax
abad(2): REP ret near (%rsp)
abaf(1): nop 
abb0(5): mov $0xffffffff,%eax
abb5(1): ret near (%rsp)

"rev_xstrcoll_atime" :
abc0(4): mov 0x60(%rdi),%rax
abc4(4): cmp %rax,0x60(%rsi)
abc8(3): mov %rsi,%rdx
abcb(2): jnle 0x25(%rip)
abcd(2): jl 0x1b(%rip)
abcf(4): mov 0x68(%rdi),%rax
abd3(3): sub 0x68(%rsi),%eax
abd6(2): jnz 0x17(%rip)
abd8(3): mov (%rdi),%rsi
abdb(3): mov (%rdx),%rdi
abde(5): jmp 0xffffb202(%rip)
abe3(5): nop 0x0(%rax,%rax,1)
abe8(5): mov $0x1,%eax
abed(2): REP ret near (%rsp)
abef(1): nop 
abf0(5): mov $0xffffffff,%eax
abf5(1): ret near (%rsp)

"rev_xstrcoll_ctime" :
ac00(7): mov 0x80(%rdi),%rax
ac07(7): cmp %rax,0x80(%rsi)
ac0e(3): mov %rsi,%rdx
ac11(2): jnle 0x2f(%rip)
ac13(2): jl 0x1d(%rip)
ac15(7): mov 0x88(%rdi),%rax
ac1c(6): sub 0x88(%rsi),%eax
ac22(2): jnz 0x13(%rip)
ac24(3): mov (%rdi),%rsi
ac27(3): mov (%rdx),%rdi
ac2a(5): jmp 0xffffb1b6(%rip)
ac2f(1): nop 
ac30(5): mov $0x1,%eax
ac35(2): REP ret near (%rsp)
ac37(9): nop 0x0(%rax,%rax,1)
ac40(5): mov $0xffffffff,%eax
ac45(1): ret near (%rsp)

"xstrcoll_extension" :
ac50(2): push %r12
ac52(1): push %rbp
ac53(3): mov %rdi,%rbp
ac56(1): push %rbx
ac57(3): mov (%rdi),%rdi
ac5a(3): mov %rsi,%r12
ac5d(5): mov $0x2e,%esi
ac62(5): call 0xffff883e(%rip)
ac67(4): mov (%r12),%rdi
ac6b(5): mov $0x2e,%esi
ac70(3): mov %rax,%rbx
ac73(5): call 0xffff882d(%rip)
ac78(7): lea 0xcc34(%rip),%rdx
ac7f(3): test %rax,%rax
ac82(4): cmove %rdx,%rax
ac86(3): test %rbx,%rbx
ac89(4): cmove %rdx,%rbx
ac8d(3): mov %rax,%rsi
ac90(3): mov %rbx,%rdi
ac93(5): call 0xffffb14d(%rip)
ac98(2): test %eax,%eax
ac9a(2): jnz 0x16(%rip)
ac9c(1): pop %rbx
ac9d(4): mov (%r12),%rsi
aca1(4): mov 0x0(%rbp),%rdi
aca5(1): pop %rbp
aca6(2): pop %r12
aca8(5): jmp 0xffffb138(%rip)
acad(3): nop (%rax)
acb0(1): pop %rbx
acb1(1): pop %rbp
acb2(2): pop %r12
acb4(1): ret near (%rsp)

"rev_xstrcoll_extension" :
acc0(2): push %r12
acc2(1): push %rbp
acc3(3): mov %rsi,%rbp
acc6(1): push %rbx
acc7(3): mov %rdi,%r12
acca(4): mov 0x0(%rbp),%rdi
acce(5): mov $0x2e,%esi
acd3(5): call 0xffff87cd(%rip)
acd8(4): mov (%r12),%rdi
acdc(5): mov $0x2e,%esi
ace1(3): mov %rax,%rbx
ace4(5): call 0xffff87bc(%rip)
ace9(7): lea 0xcbc3(%rip),%rdx
acf0(3): test %rax,%rax
acf3(4): cmove %rdx,%rax
acf7(3): test %rbx,%rbx
acfa(4): cmove %rdx,%rbx
acfe(3): mov %rax,%rsi
ad01(3): mov %rbx,%rdi
ad04(5): call 0xffffb0dc(%rip)
ad09(2): test %eax,%eax
ad0b(2): jnz 0x15(%rip)
ad0d(1): pop %rbx
ad0e(4): mov (%r12),%rsi
ad12(4): mov 0x0(%rbp),%rdi
ad16(1): pop %rbp
ad17(2): pop %r12
ad19(5): jmp 0xffffb0c7(%rip)
ad1e(2): nop 
ad20(1): pop %rbx
ad21(1): pop %rbp
ad22(2): pop %r12
ad24(1): ret near (%rsp)

"rev_strcmp_atime" :
ad30(4): mov 0x60(%rdi),%rax
ad34(4): cmp %rax,0x60(%rsi)
ad38(3): mov %rsi,%rdx
ad3b(2): jnle 0x25(%rip)
ad3d(2): jl 0x1b(%rip)
ad3f(4): mov 0x68(%rdi),%rax
ad43(3): sub 0x68(%rsi),%eax
ad46(2): jnz 0x17(%rip)
ad48(3): mov (%rdi),%rsi
ad4b(3): mov (%rdx),%rdi
ad4e(5): jmp 0xffff8842(%rip)
ad53(5): nop 0x0(%rax,%rax,1)
ad58(5): mov $0x1,%eax
ad5d(2): REP ret near (%rsp)
ad5f(1): nop 
ad60(5): mov $0xffffffff,%eax
ad65(1): ret near (%rsp)

"rev_strcmp_mtime" :
ad70(4): mov 0x70(%rdi),%rax
ad74(4): cmp %rax,0x70(%rsi)
ad78(3): mov %rsi,%rdx
ad7b(2): jnle 0x25(%rip)
ad7d(2): jl 0x1b(%rip)
ad7f(4): mov 0x78(%rdi),%rax
ad83(3): sub 0x78(%rsi),%eax
ad86(2): jnz 0x17(%rip)
ad88(3): mov (%rdi),%rsi
ad8b(3): mov (%rdx),%rdi
ad8e(5): jmp 0xffff8802(%rip)
ad93(5): nop 0x0(%rax,%rax,1)
ad98(5): mov $0x1,%eax
ad9d(2): REP ret near (%rsp)
ad9f(1): nop 
ada0(5): mov $0xffffffff,%eax
ada5(1): ret near (%rsp)

"rev_strcmp_ctime" :
adb0(7): mov 0x80(%rdi),%rax
adb7(7): cmp %rax,0x80(%rsi)
adbe(3): mov %rsi,%rdx
adc1(2): jnle 0x2f(%rip)
adc3(2): jl 0x1d(%rip)
adc5(7): mov 0x88(%rdi),%rax
adcc(6): sub 0x88(%rsi),%eax
add2(2): jnz 0x13(%rip)
add4(3): mov (%rdi),%rsi
add7(3): mov (%rdx),%rdi
adda(5): jmp 0xffff87b6(%rip)
addf(1): nop 
ade0(5): mov $0x1,%eax
ade5(2): REP ret near (%rsp)
ade7(9): nop 0x0(%rax,%rax,1)
adf0(5): mov $0xffffffff,%eax
adf5(1): ret near (%rsp)

"strcmp_atime" :
ae00(4): mov 0x60(%rsi),%rax
ae04(4): cmp %rax,0x60(%rdi)
ae08(2): jnle 0x28(%rip)
ae0a(2): jl 0x16(%rip)
ae0c(4): mov 0x68(%rsi),%rax
ae10(3): sub 0x68(%rdi),%eax
ae13(2): jnz 0x12(%rip)
ae15(3): mov (%rsi),%rsi
ae18(3): mov (%rdi),%rdi
ae1b(5): jmp 0xffff8775(%rip)
ae20(5): mov $0x1,%eax
ae25(2): REP ret near (%rsp)
ae27(9): nop 0x0(%rax,%rax,1)
ae30(5): mov $0xffffffff,%eax
ae35(1): ret near (%rsp)

"strcmp_mtime" :
ae40(4): mov 0x70(%rsi),%rax
ae44(4): cmp %rax,0x70(%rdi)
ae48(2): jnle 0x28(%rip)
ae4a(2): jl 0x16(%rip)
ae4c(4): mov 0x78(%rsi),%rax
ae50(3): sub 0x78(%rdi),%eax
ae53(2): jnz 0x12(%rip)
ae55(3): mov (%rsi),%rsi
ae58(3): mov (%rdi),%rdi
ae5b(5): jmp 0xffff8735(%rip)
ae60(5): mov $0x1,%eax
ae65(2): REP ret near (%rsp)
ae67(9): nop 0x0(%rax,%rax,1)
ae70(5): mov $0xffffffff,%eax
ae75(1): ret near (%rsp)

"strcmp_ctime" :
ae80(7): mov 0x80(%rsi),%rax
ae87(7): cmp %rax,0x80(%rdi)
ae8e(2): jnle 0x32(%rip)
ae90(2): jl 0x20(%rip)
ae92(7): mov 0x88(%rsi),%rax
ae99(6): sub 0x88(%rdi),%eax
ae9f(2): jnz 0x16(%rip)
aea1(3): mov (%rsi),%rsi
aea4(3): mov (%rdi),%rdi
aea7(5): jmp 0xffff86e9(%rip)
aeac(4): nop 0x0(%rax)
aeb0(5): mov $0x1,%eax
aeb5(2): REP ret near (%rsp)
aeb7(9): nop 0x0(%rax,%rax,1)
aec0(5): mov $0xffffffff,%eax
aec5(1): ret near (%rsp)

"xstrcoll_df_atime" :
aed0(6): mov 0xa8(%rsi),%edx
aed6(6): mov 0xa8(%rdi),%ecx
aedc(3): cmp $0x3,%edx
aedf(3): setz %al
aee2(3): cmp $0x9,%edx
aee5(3): setz %dl
aee8(2): or %edx,%eax
aeea(3): cmp $0x3,%ecx
aeed(2): jz 0x2b(%rip)
aeef(3): cmp $0x9,%ecx
aef2(2): jz 0x26(%rip)
aef4(6): mov 0xac(%rdi),%edx
aefa(6): and $0xf000,%edx
af00(2): test %al,%al
af02(2): jz 0x36(%rip)
af04(6): cmp $0x4000,%edx
af0a(2): jz 0x4e(%rip)
af0c(5): mov $0x1,%eax
af11(1): ret near (%rsp)
af12(6): nop 0x0(%rax,%rax,1)
af18(2): test %al,%al
af1a(2): jnz 0x3e(%rip)
af1c(6): mov 0xac(%rsi),%eax
af22(5): and $0xf000,%eax
af27(5): cmp $0x4000,%eax
af2c(2): jz 0x2c(%rip)
af2e(5): mov $0xffffffff,%eax
af33(2): REP ret near (%rsp)
af35(3): nop (%rax)
af38(6): mov 0xac(%rsi),%eax
af3e(5): and $0xf000,%eax
af43(5): cmp $0x4000,%eax
af48(2): jz 0xffffffbc(%rip)
af4a(6): cmp $0x4000,%edx
af50(2): jz 0xffffffde(%rip)
af52(6): nop 0x0(%rax,%rax,1)
af58(4): mov 0x60(%rsi),%rax
af5c(4): cmp %rax,0x60(%rdi)
af60(2): jnle 0xffffffce(%rip)
af62(2): jl 0xffffffaa(%rip)
af64(4): mov 0x68(%rsi),%rax
af68(3): sub 0x68(%rdi),%eax
af6b(2): jnz 0xffffffc8(%rip)
af6d(3): mov (%rsi),%rsi
af70(3): mov (%rdi),%rdi
af73(5): jmp 0xffffae6d(%rip)

"xstrcoll_df_mtime" :
af80(6): mov 0xa8(%rsi),%edx
af86(6): mov 0xa8(%rdi),%ecx
af8c(3): cmp $0x3,%edx
af8f(3): setz %al
af92(3): cmp $0x9,%edx
af95(3): setz %dl
af98(2): or %edx,%eax
af9a(3): cmp $0x3,%ecx
af9d(2): jz 0x2b(%rip)
af9f(3): cmp $0x9,%ecx
afa2(2): jz 0x26(%rip)
afa4(6): mov 0xac(%rdi),%edx
afaa(6): and $0xf000,%edx
afb0(2): test %al,%al
afb2(2): jz 0x36(%rip)
afb4(6): cmp $0x4000,%edx
afba(2): jz 0x4e(%rip)
afbc(5): mov $0x1,%eax
afc1(1): ret near (%rsp)
afc2(6): nop 0x0(%rax,%rax,1)
afc8(2): test %al,%al
afca(2): jnz 0x3e(%rip)
afcc(6): mov 0xac(%rsi),%eax
afd2(5): and $0xf000,%eax
afd7(5): cmp $0x4000,%eax
afdc(2): jz 0x2c(%rip)
afde(5): mov $0xffffffff,%eax
afe3(2): REP ret near (%rsp)
afe5(3): nop (%rax)
afe8(6): mov 0xac(%rsi),%eax
afee(5): and $0xf000,%eax
aff3(5): cmp $0x4000,%eax
aff8(2): jz 0xffffffbc(%rip)
affa(6): cmp $0x4000,%edx
b000(2): jz 0xffffffde(%rip)
b002(6): nop 0x0(%rax,%rax,1)
b008(4): mov 0x70(%rsi),%rax
b00c(4): cmp %rax,0x70(%rdi)
b010(2): jnle 0xffffffce(%rip)
b012(2): jl 0xffffffaa(%rip)
b014(4): mov 0x78(%rsi),%rax
b018(3): sub 0x78(%rdi),%eax
b01b(2): jnz 0xffffffc8(%rip)
b01d(3): mov (%rsi),%rsi
b020(3): mov (%rdi),%rdi
b023(5): jmp 0xffffadbd(%rip)

"rev_xstrcoll_df_ctime" :
b030(3): mov %rsi,%rdx
b033(6): mov 0xa8(%rdi),%esi
b039(6): mov 0xa8(%rdx),%ecx
b03f(3): cmp $0x3,%ecx
b042(3): setz %al
b045(3): cmp $0x9,%ecx
b048(3): setz %cl
b04b(2): or %ecx,%eax
b04d(3): cmp $0x3,%esi
b050(2): jz 0x28(%rip)
b052(3): cmp $0x9,%esi
b055(2): jz 0x23(%rip)
b057(6): mov 0xac(%rdi),%ecx
b05d(6): and $0xf000,%ecx
b063(2): test %al,%al
b065(2): jz 0x33(%rip)
b067(6): cmp $0x4000,%ecx
b06d(2): jz 0x4b(%rip)
b06f(5): mov $0x1,%eax
b074(1): ret near (%rsp)
b075(3): nop (%rax)
b078(2): test %al,%al
b07a(2): jnz 0x3e(%rip)
b07c(6): mov 0xac(%rdx),%eax
b082(5): and $0xf000,%eax
b087(5): cmp $0x4000,%eax
b08c(2): jz 0x2c(%rip)
b08e(5): mov $0xffffffff,%eax
b093(2): REP ret near (%rsp)
b095(3): nop (%rax)
b098(6): mov 0xac(%rdx),%eax
b09e(5): and $0xf000,%eax
b0a3(5): cmp $0x4000,%eax
b0a8(2): jz 0xffffffbf(%rip)
b0aa(6): cmp $0x4000,%ecx
b0b0(2): jz 0xffffffde(%rip)
b0b2(6): nop 0x0(%rax,%rax,1)
b0b8(7): mov 0x80(%rdi),%rax
b0bf(7): cmp %rax,0x80(%rdx)
b0c6(2): jnle 0xffffffc8(%rip)
b0c8(2): jl 0xffffffa7(%rip)
b0ca(7): mov 0x88(%rdi),%rax
b0d1(6): sub 0x88(%rdx),%eax
b0d7(2): jnz 0xffffffbc(%rip)
b0d9(3): mov (%rdi),%rsi
b0dc(3): mov (%rdx),%rdi
b0df(5): jmp 0xffffad01(%rip)

"rev_xstrcoll_df_mtime" :
b0f0(3): mov %rsi,%rdx
b0f3(6): mov 0xa8(%rdi),%esi
b0f9(6): mov 0xa8(%rdx),%ecx
b0ff(3): cmp $0x3,%ecx
b102(3): setz %al
b105(3): cmp $0x9,%ecx
b108(3): setz %cl
b10b(2): or %ecx,%eax
b10d(3): cmp $0x3,%esi
b110(2): jz 0x28(%rip)
b112(3): cmp $0x9,%esi
b115(2): jz 0x23(%rip)
b117(6): mov 0xac(%rdi),%ecx
b11d(6): and $0xf000,%ecx
b123(2): test %al,%al
b125(2): jz 0x33(%rip)
b127(6): cmp $0x4000,%ecx
b12d(2): jz 0x4b(%rip)
b12f(5): mov $0x1,%eax
b134(1): ret near (%rsp)
b135(3): nop (%rax)
b138(2): test %al,%al
b13a(2): jnz 0x3e(%rip)
b13c(6): mov 0xac(%rdx),%eax
b142(5): and $0xf000,%eax
b147(5): cmp $0x4000,%eax
b14c(2): jz 0x2c(%rip)
b14e(5): mov $0xffffffff,%eax
b153(2): REP ret near (%rsp)
b155(3): nop (%rax)
b158(6): mov 0xac(%rdx),%eax
b15e(5): and $0xf000,%eax
b163(5): cmp $0x4000,%eax
b168(2): jz 0xffffffbf(%rip)
b16a(6): cmp $0x4000,%ecx
b170(2): jz 0xffffffde(%rip)
b172(6): nop 0x0(%rax,%rax,1)
b178(4): mov 0x70(%rdi),%rax
b17c(4): cmp %rax,0x70(%rdx)
b180(2): jnle 0xffffffce(%rip)
b182(2): jl 0xffffffad(%rip)
b184(4): mov 0x78(%rdi),%rax
b188(3): sub 0x78(%rdx),%eax
b18b(2): jnz 0xffffffc8(%rip)
b18d(3): mov (%rdi),%rsi
b190(3): mov (%rdx),%rdi
b193(5): jmp 0xffffac4d(%rip)

"rev_xstrcoll_df_atime" :
b1a0(3): mov %rsi,%rdx
b1a3(6): mov 0xa8(%rdi),%esi
b1a9(6): mov 0xa8(%rdx),%ecx
b1af(3): cmp $0x3,%ecx
b1b2(3): setz %al
b1b5(3): cmp $0x9,%ecx
b1b8(3): setz %cl
b1bb(2): or %ecx,%eax
b1bd(3): cmp $0x3,%esi
b1c0(2): jz 0x28(%rip)
b1c2(3): cmp $0x9,%esi
b1c5(2): jz 0x23(%rip)
b1c7(6): mov 0xac(%rdi),%ecx
b1cd(6): and $0xf000,%ecx
b1d3(2): test %al,%al
b1d5(2): jz 0x33(%rip)
b1d7(6): cmp $0x4000,%ecx
b1dd(2): jz 0x4b(%rip)
b1df(5): mov $0x1,%eax
b1e4(1): ret near (%rsp)
b1e5(3): nop (%rax)
b1e8(2): test %al,%al
b1ea(2): jnz 0x3e(%rip)
b1ec(6): mov 0xac(%rdx),%eax
b1f2(5): and $0xf000,%eax
b1f7(5): cmp $0x4000,%eax
b1fc(2): jz 0x2c(%rip)
b1fe(5): mov $0xffffffff,%eax
b203(2): REP ret near (%rsp)
b205(3): nop (%rax)
b208(6): mov 0xac(%rdx),%eax
b20e(5): and $0xf000,%eax
b213(5): cmp $0x4000,%eax
b218(2): jz 0xffffffbf(%rip)
b21a(6): cmp $0x4000,%ecx
b220(2): jz 0xffffffde(%rip)
b222(6): nop 0x0(%rax,%rax,1)
b228(4): mov 0x60(%rdi),%rax
b22c(4): cmp %rax,0x60(%rdx)
b230(2): jnle 0xffffffce(%rip)
b232(2): jl 0xffffffad(%rip)
b234(4): mov 0x68(%rdi),%rax
b238(3): sub 0x68(%rdx),%eax
b23b(2): jnz 0xffffffc8(%rip)
b23d(3): mov (%rdi),%rsi
b240(3): mov (%rdx),%rdi
b243(5): jmp 0xffffab9d(%rip)

"xstrcoll_df_ctime" :
b250(6): mov 0xa8(%rsi),%edx
b256(6): mov 0xa8(%rdi),%ecx
b25c(3): cmp $0x3,%edx
b25f(3): setz %al
b262(3): cmp $0x9,%edx
b265(3): setz %dl
b268(2): or %edx,%eax
b26a(3): cmp $0x3,%ecx
b26d(2): jz 0x2b(%rip)
b26f(3): cmp $0x9,%ecx
b272(2): jz 0x26(%rip)
b274(6): mov 0xac(%rdi),%edx
b27a(6): and $0xf000,%edx
b280(2): test %al,%al
b282(2): jz 0x36(%rip)
b284(6): cmp $0x4000,%edx
b28a(2): jz 0x4e(%rip)
b28c(5): mov $0x1,%eax
b291(1): ret near (%rsp)
b292(6): nop 0x0(%rax,%rax,1)
b298(2): test %al,%al
b29a(2): jnz 0x3e(%rip)
b29c(6): mov 0xac(%rsi),%eax
b2a2(5): and $0xf000,%eax
b2a7(5): cmp $0x4000,%eax
b2ac(2): jz 0x2c(%rip)
b2ae(5): mov $0xffffffff,%eax
b2b3(2): REP ret near (%rsp)
b2b5(3): nop (%rax)
b2b8(6): mov 0xac(%rsi),%eax
b2be(5): and $0xf000,%eax
b2c3(5): cmp $0x4000,%eax
b2c8(2): jz 0xffffffbc(%rip)
b2ca(6): cmp $0x4000,%edx
b2d0(2): jz 0xffffffde(%rip)
b2d2(6): nop 0x0(%rax,%rax,1)
b2d8(7): mov 0x80(%rsi),%rax
b2df(7): cmp %rax,0x80(%rdi)
b2e6(2): jnle 0xffffffc8(%rip)
b2e8(2): jl 0xffffffa4(%rip)
b2ea(7): mov 0x88(%rsi),%rax
b2f1(6): sub 0x88(%rdi),%eax
b2f7(2): jnz 0xffffffbc(%rip)
b2f9(3): mov (%rsi),%rsi
b2fc(3): mov (%rdi),%rdi
b2ff(5): jmp 0xffffaae1(%rip)

"strcmp_extension" :
b310(2): push %r12
b312(1): push %rbp
b313(3): mov %rsi,%r12
b316(1): push %rbx
b317(3): mov (%rdi),%rbp
b31a(5): mov $0x2e,%esi
b31f(3): mov %rbp,%rdi
b322(5): call 0xffff817e(%rip)
b327(4): mov (%r12),%r12
b32b(5): mov $0x2e,%esi
b330(3): mov %rax,%rbx
b333(3): mov %r12,%rdi
b336(5): call 0xffff816a(%rip)
b33b(3): test %rax,%rax
b33e(2): jz 0x32(%rip)
b340(7): lea 0xc56c(%rip),%rdx
b347(3): test %rbx,%rbx
b34a(3): mov %rax,%rsi
b34d(4): cmove %rdx,%rbx
b351(3): mov %rbx,%rdi
b354(5): call 0xffff823c(%rip)
b359(2): test %eax,%eax
b35b(2): jnz 0x30(%rip)
b35d(1): pop %rbx
b35e(3): mov %r12,%rsi
b361(3): mov %rbp,%rdi
b364(1): pop %rbp
b365(2): pop %r12
b367(5): jmp 0xffff8229(%rip)
b36c(4): nop 0x0(%rax)
b370(3): test %rbx,%rbx
b373(7): lea 0xc539(%rip),%rax
b37a(2): jz 0xffffffe3(%rip)
b37c(3): mov %rax,%rsi
b37f(3): mov %rbx,%rdi
b382(5): call 0xffff820e(%rip)
b387(2): test %eax,%eax
b389(2): jz 0xffffffd4(%rip)
b38b(1): pop %rbx
b38c(1): pop %rbp
b38d(2): pop %r12
b38f(1): ret near (%rsp)

"rev_strcmp_extension" :
b390(2): push %r12
b392(1): push %rbp
b393(3): mov %rdi,%r12
b396(1): push %rbx
b397(3): mov (%rsi),%rbp
b39a(5): mov $0x2e,%esi
b39f(3): mov %rbp,%rdi
b3a2(5): call 0xffff80fe(%rip)
b3a7(4): mov (%r12),%r12
b3ab(5): mov $0x2e,%esi
b3b0(3): mov %rax,%rbx
b3b3(3): mov %r12,%rdi
b3b6(5): call 0xffff80ea(%rip)
b3bb(3): test %rax,%rax
b3be(2): jz 0x32(%rip)
b3c0(7): lea 0xc4ec(%rip),%rdx
b3c7(3): test %rbx,%rbx
b3ca(3): mov %rax,%rsi
b3cd(4): cmove %rdx,%rbx
b3d1(3): mov %rbx,%rdi
b3d4(5): call 0xffff81bc(%rip)
b3d9(2): test %eax,%eax
b3db(2): jnz 0x30(%rip)
b3dd(1): pop %rbx
b3de(3): mov %r12,%rsi
b3e1(3): mov %rbp,%rdi
b3e4(1): pop %rbp
b3e5(2): pop %r12
b3e7(5): jmp 0xffff81a9(%rip)
b3ec(4): nop 0x0(%rax)
b3f0(3): test %rbx,%rbx
b3f3(7): lea 0xc4b9(%rip),%rax
b3fa(2): jz 0xffffffe3(%rip)
b3fc(3): mov %rax,%rsi
b3ff(3): mov %rbx,%rdi
b402(5): call 0xffff818e(%rip)
b407(2): test %eax,%eax
b409(2): jz 0xffffffd4(%rip)
b40b(1): pop %rbx
b40c(1): pop %rbp
b40d(2): pop %r12
b40f(1): ret near (%rsp)

"rev_xstrcoll_df_extension" :
b410(6): mov 0xa8(%rsi),%edx
b416(6): mov 0xa8(%rdi),%ecx
b41c(3): cmp $0x3,%edx
b41f(3): setz %al
b422(3): cmp $0x9,%edx
b425(3): setz %dl
b428(2): or %edx,%eax
b42a(3): cmp $0x3,%ecx
b42d(2): jz 0x2b(%rip)
b42f(3): cmp $0x9,%ecx
b432(2): jz 0x26(%rip)
b434(6): mov 0xac(%rdi),%edx
b43a(6): and $0xf000,%edx
b440(2): test %al,%al
b442(2): jz 0x36(%rip)
b444(6): cmp $0x4000,%edx
b44a(2): jz 0x4e(%rip)
b44c(5): mov $0x1,%eax
b451(1): ret near (%rsp)
b452(6): nop 0x0(%rax,%rax,1)
b458(2): test %al,%al
b45a(2): jnz 0x3e(%rip)
b45c(6): mov 0xac(%rsi),%eax
b462(5): and $0xf000,%eax
b467(5): cmp $0x4000,%eax
b46c(2): jz 0x2c(%rip)
b46e(5): mov $0xffffffff,%eax
b473(1): ret near (%rsp)
b474(4): nop 0x0(%rax)
b478(6): mov 0xac(%rsi),%eax
b47e(5): and $0xf000,%eax
b483(5): cmp $0x4000,%eax
b488(2): jz 0xffffffbc(%rip)
b48a(6): cmp $0x4000,%edx
b490(2): jz 0xffffffde(%rip)
b492(6): nop 0x0(%rax,%rax,1)
b498(2): push %r12
b49a(1): push %rbp
b49b(3): mov %rdi,%rbp
b49e(1): push %rbx
b49f(3): mov %rsi,%rbx
b4a2(5): mov $0x2e,%esi
b4a7(3): mov (%rbx),%rdi
b4aa(5): call 0xffff7ff6(%rip)
b4af(4): mov 0x0(%rbp),%rdi
b4b3(5): mov $0x2e,%esi
b4b8(3): mov %rax,%r12
b4bb(5): call 0xffff7fe5(%rip)
b4c0(7): lea 0xc3ec(%rip),%rdx
b4c7(3): test %rax,%rax
b4ca(4): cmove %rdx,%rax
b4ce(3): test %r12,%r12
b4d1(4): cmove %rdx,%r12
b4d5(3): mov %rax,%rsi
b4d8(3): mov %r12,%rdi
b4db(5): call 0xffffa905(%rip)
b4e0(2): test %eax,%eax
b4e2(2): jnz 0x16(%rip)
b4e4(4): mov 0x0(%rbp),%rsi
b4e8(3): mov (%rbx),%rdi
b4eb(1): pop %rbx
b4ec(1): pop %rbp
b4ed(2): pop %r12
b4ef(5): jmp 0xffffa8f1(%rip)
b4f4(4): nop 0x0(%rax)
b4f8(1): pop %rbx
b4f9(1): pop %rbp
b4fa(2): pop %r12
b4fc(1): ret near (%rsp)

"xstrcoll_df_extension" :
b500(6): mov 0xa8(%rsi),%edx
b506(6): mov 0xa8(%rdi),%ecx
b50c(3): cmp $0x3,%edx
b50f(3): setz %al
b512(3): cmp $0x9,%edx
b515(3): setz %dl
b518(2): or %edx,%eax
b51a(3): cmp $0x3,%ecx
b51d(2): jz 0x2b(%rip)
b51f(3): cmp $0x9,%ecx
b522(2): jz 0x26(%rip)
b524(6): mov 0xac(%rdi),%edx
b52a(6): and $0xf000,%edx
b530(2): test %al,%al
b532(2): jz 0x36(%rip)
b534(6): cmp $0x4000,%edx
b53a(2): jz 0x4e(%rip)
b53c(5): mov $0x1,%eax
b541(1): ret near (%rsp)
b542(6): nop 0x0(%rax,%rax,1)
b548(2): test %al,%al
b54a(2): jnz 0x3e(%rip)
b54c(6): mov 0xac(%rsi),%eax
b552(5): and $0xf000,%eax
b557(5): cmp $0x4000,%eax
b55c(2): jz 0x2c(%rip)
b55e(5): mov $0xffffffff,%eax
b563(1): ret near (%rsp)
b564(4): nop 0x0(%rax)
b568(6): mov 0xac(%rsi),%eax
b56e(5): and $0xf000,%eax
b573(5): cmp $0x4000,%eax
b578(2): jz 0xffffffbc(%rip)
b57a(6): cmp $0x4000,%edx
b580(2): jz 0xffffffde(%rip)
b582(6): nop 0x0(%rax,%rax,1)
b588(2): push %r12
b58a(1): push %rbp
b58b(3): mov %rdi,%rbp
b58e(1): push %rbx
b58f(3): mov (%rdi),%rdi
b592(3): mov %rsi,%rbx
b595(5): mov $0x2e,%esi
b59a(5): call 0xffff7f06(%rip)
b59f(3): mov (%rbx),%rdi
b5a2(5): mov $0x2e,%esi
b5a7(3): mov %rax,%r12
b5aa(5): call 0xffff7ef6(%rip)
b5af(7): lea 0xc2fd(%rip),%rdx
b5b6(3): test %rax,%rax
b5b9(4): cmove %rdx,%rax
b5bd(3): test %r12,%r12
b5c0(4): cmove %rdx,%r12
b5c4(3): mov %rax,%rsi
b5c7(3): mov %r12,%rdi
b5ca(5): call 0xffffa816(%rip)
b5cf(2): test %eax,%eax
b5d1(2): jnz 0x17(%rip)
b5d3(3): mov (%rbx),%rsi
b5d6(4): mov 0x0(%rbp),%rdi
b5da(1): pop %rbx
b5db(1): pop %rbp
b5dc(2): pop %r12
b5de(5): jmp 0xffffa802(%rip)
b5e3(5): nop 0x0(%rax,%rax,1)
b5e8(1): pop %rbx
b5e9(1): pop %rbp
b5ea(2): pop %r12
b5ec(1): ret near (%rsp)

"strcmp_df_atime" :
b5f0(6): mov 0xa8(%rsi),%edx
b5f6(6): mov 0xa8(%rdi),%ecx
b5fc(3): cmp $0x3,%edx
b5ff(3): setz %al
b602(3): cmp $0x9,%edx
b605(3): setz %dl
b608(2): or %edx,%eax
b60a(3): cmp $0x3,%ecx
b60d(2): jz 0x2b(%rip)
b60f(3): cmp $0x9,%ecx
b612(2): jz 0x26(%rip)
b614(6): mov 0xac(%rdi),%edx
b61a(6): and $0xf000,%edx
b620(2): test %al,%al
b622(2): jz 0x36(%rip)
b624(6): cmp $0x4000,%edx
b62a(2): jz 0x4e(%rip)
b62c(5): mov $0x1,%eax
b631(1): ret near (%rsp)
b632(6): nop 0x0(%rax,%rax,1)
b638(2): test %al,%al
b63a(2): jnz 0x3e(%rip)
b63c(6): mov 0xac(%rsi),%eax
b642(5): and $0xf000,%eax
b647(5): cmp $0x4000,%eax
b64c(2): jz 0x2c(%rip)
b64e(5): mov $0xffffffff,%eax
b653(2): REP ret near (%rsp)
b655(3): nop (%rax)
b658(6): mov 0xac(%rsi),%eax
b65e(5): and $0xf000,%eax
b663(5): cmp $0x4000,%eax
b668(2): jz 0xffffffbc(%rip)
b66a(6): cmp $0x4000,%edx
b670(2): jz 0xffffffde(%rip)
b672(6): nop 0x0(%rax,%rax,1)
b678(4): mov 0x60(%rsi),%rax
b67c(4): cmp %rax,0x60(%rdi)
b680(2): jnle 0xffffffce(%rip)
b682(2): jl 0xffffffaa(%rip)
b684(4): mov 0x68(%rsi),%rax
b688(3): sub 0x68(%rdi),%eax
b68b(2): jnz 0xffffffc8(%rip)
b68d(3): mov (%rsi),%rsi
b690(3): mov (%rdi),%rdi
b693(5): jmp 0xffff7efd(%rip)

"rev_strcmp_df_mtime" :
b6a0(3): mov %rsi,%rdx
b6a3(6): mov 0xa8(%rdi),%esi
b6a9(6): mov 0xa8(%rdx),%ecx
b6af(3): cmp $0x3,%ecx
b6b2(3): setz %al
b6b5(3): cmp $0x9,%ecx
b6b8(3): setz %cl
b6bb(2): or %ecx,%eax
b6bd(3): cmp $0x3,%esi
b6c0(2): jz 0x28(%rip)
b6c2(3): cmp $0x9,%esi
b6c5(2): jz 0x23(%rip)
b6c7(6): mov 0xac(%rdi),%ecx
b6cd(6): and $0xf000,%ecx
b6d3(2): test %al,%al
b6d5(2): jz 0x33(%rip)
b6d7(6): cmp $0x4000,%ecx
b6dd(2): jz 0x4b(%rip)
b6df(5): mov $0x1,%eax
b6e4(1): ret near (%rsp)
b6e5(3): nop (%rax)
b6e8(2): test %al,%al
b6ea(2): jnz 0x3e(%rip)
b6ec(6): mov 0xac(%rdx),%eax
b6f2(5): and $0xf000,%eax
b6f7(5): cmp $0x4000,%eax
b6fc(2): jz 0x2c(%rip)
b6fe(5): mov $0xffffffff,%eax
b703(2): REP ret near (%rsp)
b705(3): nop (%rax)
b708(6): mov 0xac(%rdx),%eax
b70e(5): and $0xf000,%eax
b713(5): cmp $0x4000,%eax
b718(2): jz 0xffffffbf(%rip)
b71a(6): cmp $0x4000,%ecx
b720(2): jz 0xffffffde(%rip)
b722(6): nop 0x0(%rax,%rax,1)
b728(4): mov 0x70(%rdi),%rax
b72c(4): cmp %rax,0x70(%rdx)
b730(2): jnle 0xffffffce(%rip)
b732(2): jl 0xffffffad(%rip)
b734(4): mov 0x78(%rdi),%rax
b738(3): sub 0x78(%rdx),%eax
b73b(2): jnz 0xffffffc8(%rip)
b73d(3): mov (%rdi),%rsi
b740(3): mov (%rdx),%rdi
b743(5): jmp 0xffff7e4d(%rip)

"strcmp_df_ctime" :
b750(6): mov 0xa8(%rsi),%edx
b756(6): mov 0xa8(%rdi),%ecx
b75c(3): cmp $0x3,%edx
b75f(3): setz %al
b762(3): cmp $0x9,%edx
b765(3): setz %dl
b768(2): or %edx,%eax
b76a(3): cmp $0x3,%ecx
b76d(2): jz 0x2b(%rip)
b76f(3): cmp $0x9,%ecx
b772(2): jz 0x26(%rip)
b774(6): mov 0xac(%rdi),%edx
b77a(6): and $0xf000,%edx
b780(2): test %al,%al
b782(2): jz 0x36(%rip)
b784(6): cmp $0x4000,%edx
b78a(2): jz 0x4e(%rip)
b78c(5): mov $0x1,%eax
b791(1): ret near (%rsp)
b792(6): nop 0x0(%rax,%rax,1)
b798(2): test %al,%al
b79a(2): jnz 0x3e(%rip)
b79c(6): mov 0xac(%rsi),%eax
b7a2(5): and $0xf000,%eax
b7a7(5): cmp $0x4000,%eax
b7ac(2): jz 0x2c(%rip)
b7ae(5): mov $0xffffffff,%eax
b7b3(2): REP ret near (%rsp)
b7b5(3): nop (%rax)
b7b8(6): mov 0xac(%rsi),%eax
b7be(5): and $0xf000,%eax
b7c3(5): cmp $0x4000,%eax
b7c8(2): jz 0xffffffbc(%rip)
b7ca(6): cmp $0x4000,%edx
b7d0(2): jz 0xffffffde(%rip)
b7d2(6): nop 0x0(%rax,%rax,1)
b7d8(7): mov 0x80(%rsi),%rax
b7df(7): cmp %rax,0x80(%rdi)
b7e6(2): jnle 0xffffffc8(%rip)
b7e8(2): jl 0xffffffa4(%rip)
b7ea(7): mov 0x88(%rsi),%rax
b7f1(6): sub 0x88(%rdi),%eax
b7f7(2): jnz 0xffffffbc(%rip)
b7f9(3): mov (%rsi),%rsi
b7fc(3): mov (%rdi),%rdi
b7ff(5): jmp 0xffff7d91(%rip)

"strcmp_df_extension" :
b810(6): mov 0xa8(%rsi),%edx
b816(6): mov 0xa8(%rdi),%ecx
b81c(3): cmp $0x3,%edx
b81f(3): setz %al
b822(3): cmp $0x9,%edx
b825(3): setz %dl
b828(2): or %edx,%eax
b82a(3): cmp $0x3,%ecx
b82d(2): jz 0x2b(%rip)
b82f(3): cmp $0x9,%ecx
b832(2): jz 0x26(%rip)
b834(6): mov 0xac(%rdi),%edx
b83a(6): and $0xf000,%edx
b840(2): test %al,%al
b842(2): jz 0x36(%rip)
b844(6): cmp $0x4000,%edx
b84a(2): jz 0x4e(%rip)
b84c(5): mov $0x1,%eax
b851(1): ret near (%rsp)
b852(6): nop 0x0(%rax,%rax,1)
b858(2): test %al,%al
b85a(2): jnz 0x3e(%rip)
b85c(6): mov 0xac(%rsi),%eax
b862(5): and $0xf000,%eax
b867(5): cmp $0x4000,%eax
b86c(2): jz 0x2c(%rip)
b86e(5): mov $0xffffffff,%eax
b873(1): ret near (%rsp)
b874(4): nop 0x0(%rax)
b878(6): mov 0xac(%rsi),%eax
b87e(5): and $0xf000,%eax
b883(5): cmp $0x4000,%eax
b888(2): jz 0xffffffbc(%rip)
b88a(6): cmp $0x4000,%edx
b890(2): jz 0xffffffde(%rip)
b892(6): nop 0x0(%rax,%rax,1)
b898(2): push %r12
b89a(1): push %rbp
b89b(1): push %rbx
b89c(3): mov (%rdi),%r12
b89f(3): mov %rsi,%rbx
b8a2(5): mov $0x2e,%esi
b8a7(3): mov %r12,%rdi
b8aa(5): call 0xffff7bf6(%rip)
b8af(3): mov (%rbx),%rbx
b8b2(5): mov $0x2e,%esi
b8b7(3): mov %rax,%rbp
b8ba(3): mov %rbx,%rdi
b8bd(5): call 0xffff7be3(%rip)
b8c2(3): test %rax,%rax
b8c5(2): jz 0x3b(%rip)
b8c7(7): lea 0xbfe5(%rip),%rdx
b8ce(3): test %rbp,%rbp
b8d1(4): cmove %rdx,%rbp
b8d5(3): mov %rax,%rsi
b8d8(3): mov %rbp,%rdi
b8db(5): call 0xffff7cb5(%rip)
b8e0(2): test %eax,%eax
b8e2(2): jnz 0x16(%rip)
b8e4(3): mov %rbx,%rsi
b8e7(3): mov %r12,%rdi
b8ea(1): pop %rbx
b8eb(1): pop %rbp
b8ec(2): pop %r12
b8ee(5): jmp 0xffff7ca2(%rip)
b8f3(5): nop 0x0(%rax,%rax,1)
b8f8(1): pop %rbx
b8f9(1): pop %rbp
b8fa(2): pop %r12
b8fc(1): ret near (%rsp)
b8fd(3): nop (%rax)
b900(3): test %rbp,%rbp
b903(7): lea 0xbfa9(%rip),%rax
b90a(2): jnz 0xffffffcb(%rip)
b90c(2): jmp 0xffffffd8(%rip)

"usage" :
b910(2): push %r13
b912(2): push %r12
b914(5): mov $0x5,%edx
b919(1): push %rbp
b91a(1): push %rbx
b91b(3): mov %edi,%r12d
b91e(7): sub $0x88,%rsp
b925(7): mov 0x215ad4(%rip),%rbx
b92c(9): mov $0x28,%rax
b935(5): mov %rax,0x78(%rsp)
b93a(2): xor %eax,%eax
b93c(2): test %edi,%edi
b93e(2): jz 0x31(%rip)
b940(7): lea 0xc569(%rip),%rsi
b947(2): xor %edi,%edi
b949(5): call 0xffff7a97(%rip)
b94e(7): mov 0x21496b(%rip),%rdi
b955(3): mov %rax,%rdx
b958(3): mov %rbx,%rcx
b95b(5): mov $0x1,%esi
b960(2): xor %eax,%eax
b962(5): call 0xffff7e9e(%rip)
b967(3): mov %r12d,%edi
b96a(5): call 0xffff7e76(%rip)
b96f(7): lea 0xc562(%rip),%rsi
b976(2): xor %edi,%edi
b978(7): lea 0xc062(%rip),%rbp
b97f(5): call 0xffff7a61(%rip)
b984(3): mov %rbx,%rdx
b987(3): mov %rax,%rsi
b98a(5): mov $0x1,%edi
b98f(2): xor %eax,%eax
b991(5): call 0xffff7d7f(%rip)
b996(7): mov 0x2148eb(%rip),%rbx
b99d(7): lea 0xc55c(%rip),%rsi
b9a4(5): mov $0x5,%edx
b9a9(2): xor %edi,%edi
b9ab(5): call 0xffff7a35(%rip)
b9b0(3): mov %rbx,%rsi
b9b3(3): mov %rax,%rdi
b9b6(5): call 0xffff7bba(%rip)
b9bb(7): mov 0x2148c6(%rip),%rbx
b9c2(7): lea 0xc5c7(%rip),%rsi
b9c9(5): mov $0x5,%edx
b9ce(2): xor %edi,%edi
b9d0(5): call 0xffff7a10(%rip)
b9d5(3): mov %rbx,%rsi
b9d8(3): mov %rax,%rdi
b9db(5): call 0xffff7b95(%rip)
b9e0(7): mov 0x2148a1(%rip),%rbx
b9e7(7): lea 0xc5f2(%rip),%rsi
b9ee(5): mov $0x5,%edx
b9f3(2): xor %edi,%edi
b9f5(5): call 0xffff79eb(%rip)
b9fa(3): mov %rbx,%rsi
b9fd(3): mov %rax,%rdi
ba00(5): call 0xffff7b70(%rip)
ba05(7): mov 0x21487c(%rip),%rbx
ba0c(7): lea 0xc6dd(%rip),%rsi
ba13(5): mov $0x5,%edx
ba18(2): xor %edi,%edi
ba1a(5): call 0xffff79c6(%rip)
ba1f(3): mov %rbx,%rsi
ba22(3): mov %rax,%rdi
ba25(5): call 0xffff7b4b(%rip)
ba2a(7): mov 0x214857(%rip),%rbx
ba31(7): lea 0xc758(%rip),%rsi
ba38(5): mov $0x5,%edx
ba3d(2): xor %edi,%edi
ba3f(5): call 0xffff79a1(%rip)
ba44(3): mov %rbx,%rsi
ba47(3): mov %rax,%rdi
ba4a(5): call 0xffff7b26(%rip)
ba4f(7): mov 0x214832(%rip),%rbx
ba56(7): lea 0xc8a3(%rip),%rsi
ba5d(5): mov $0x5,%edx
ba62(2): xor %edi,%edi
ba64(5): call 0xffff797c(%rip)
ba69(3): mov %rbx,%rsi
ba6c(3): mov %rax,%rdi
ba6f(5): call 0xffff7b01(%rip)
ba74(7): mov 0x21480d(%rip),%rbx
ba7b(7): lea 0xc9ee(%rip),%rsi
ba82(5): mov $0x5,%edx
ba87(2): xor %edi,%edi
ba89(5): call 0xffff7957(%rip)
ba8e(3): mov %rbx,%rsi
ba91(3): mov %rax,%rdi
ba94(5): call 0xffff7adc(%rip)
ba99(7): mov 0x2147e8(%rip),%rbx
baa0(7): lea 0xcb71(%rip),%rsi
baa7(5): mov $0x5,%edx
baac(2): xor %edi,%edi
baae(5): call 0xffff7932(%rip)
bab3(3): mov %rbx,%rsi
bab6(3): mov %rax,%rdi
bab9(5): call 0xffff7ab7(%rip)
babe(7): mov 0x2147c3(%rip),%rbx
bac5(7): lea 0xcb8c(%rip),%rsi
bacc(5): mov $0x5,%edx
bad1(2): xor %edi,%edi
bad3(5): call 0xffff790d(%rip)
bad8(3): mov %rbx,%rsi
badb(3): mov %rax,%rdi
bade(5): call 0xffff7a92(%rip)
bae3(7): mov 0x21479e(%rip),%rbx
baea(7): lea 0xcc5f(%rip),%rsi
baf1(5): mov $0x5,%edx
baf6(2): xor %edi,%edi
baf8(5): call 0xffff78e8(%rip)
bafd(3): mov %rbx,%rsi
bb00(3): mov %rax,%rdi
bb03(5): call 0xffff7a6d(%rip)
bb08(7): mov 0x214779(%rip),%rbx
bb0f(7): lea 0xcc8a(%rip),%rsi
bb16(5): mov $0x5,%edx
bb1b(2): xor %edi,%edi
bb1d(5): call 0xffff78c3(%rip)
bb22(3): mov %rbx,%rsi
bb25(3): mov %rax,%rdi
bb28(5): call 0xffff7a48(%rip)
bb2d(7): mov 0x214754(%rip),%rbx
bb34(7): lea 0xccfd(%rip),%rsi
bb3b(5): mov $0x5,%edx
bb40(2): xor %edi,%edi
bb42(5): call 0xffff789e(%rip)
bb47(3): mov %rbx,%rsi
bb4a(3): mov %rax,%rdi
bb4d(5): call 0xffff7a23(%rip)
bb52(7): mov 0x21472f(%rip),%rbx
bb59(7): lea 0xce80(%rip),%rsi
bb60(5): mov $0x5,%edx
bb65(2): xor %edi,%edi
bb67(5): call 0xffff7879(%rip)
bb6c(3): mov %rbx,%rsi
bb6f(3): mov %rax,%rdi
bb72(5): call 0xffff79fe(%rip)
bb77(7): mov 0x21470a(%rip),%rbx
bb7e(7): lea 0xcef3(%rip),%rsi
bb85(5): mov $0x5,%edx
bb8a(2): xor %edi,%edi
bb8c(5): call 0xffff7854(%rip)
bb91(3): mov %rbx,%rsi
bb94(3): mov %rax,%rdi
bb97(5): call 0xffff79d9(%rip)
bb9c(7): mov 0x2146e5(%rip),%rbx
bba3(7): lea 0xd036(%rip),%rsi
bbaa(5): mov $0x5,%edx
bbaf(2): xor %edi,%edi
bbb1(5): call 0xffff782f(%rip)
bbb6(3): mov %rbx,%rsi
bbb9(3): mov %rax,%rdi
bbbc(5): call 0xffff79b4(%rip)
bbc1(7): mov 0x2146c0(%rip),%rbx
bbc8(7): lea 0xd0a9(%rip),%rsi
bbcf(5): mov $0x5,%edx
bbd4(2): xor %edi,%edi
bbd6(5): call 0xffff780a(%rip)
bbdb(3): mov %rbx,%rsi
bbde(3): mov %rax,%rdi
bbe1(5): call 0xffff798f(%rip)
bbe6(7): mov 0x21469b(%rip),%rbx
bbed(7): lea 0xd1ec(%rip),%rsi
bbf4(5): mov $0x5,%edx
bbf9(2): xor %edi,%edi
bbfb(5): call 0xffff77e5(%rip)
bc00(3): mov %rbx,%rsi
bc03(3): mov %rax,%rdi
bc06(5): call 0xffff796a(%rip)
bc0b(7): mov 0x214676(%rip),%rbx
bc12(7): lea 0xd2f7(%rip),%rsi
bc19(5): mov $0x5,%edx
bc1e(2): xor %edi,%edi
bc20(5): call 0xffff77c0(%rip)
bc25(3): mov %rbx,%rsi
bc28(3): mov %rax,%rdi
bc2b(5): call 0xffff7945(%rip)
bc30(7): mov 0x214651(%rip),%rbx
bc37(7): lea 0xd522(%rip),%rsi
bc3e(5): mov $0x5,%edx
bc43(2): xor %edi,%edi
bc45(5): call 0xffff779b(%rip)
bc4a(3): mov %rbx,%rsi
bc4d(3): mov %rax,%rdi
bc50(5): call 0xffff7920(%rip)
bc55(7): mov 0x21462c(%rip),%rbx
bc5c(7): lea 0xd5c5(%rip),%rsi
bc63(5): mov $0x5,%edx
bc68(2): xor %edi,%edi
bc6a(5): call 0xffff7776(%rip)
bc6f(3): mov %rbx,%rsi
bc72(3): mov %rax,%rdi
bc75(5): call 0xffff78fb(%rip)
bc7a(7): mov 0x214607(%rip),%rbx
bc81(7): lea 0xd7a8(%rip),%rsi
bc88(2): xor %edi,%edi
bc8a(5): mov $0x5,%edx
bc8f(5): call 0xffff7751(%rip)
bc94(3): mov %rbx,%rsi
bc97(3): mov %rax,%rdi
bc9a(5): call 0xffff78d6(%rip)
bc9f(7): mov 0x2145e2(%rip),%rbx
bca6(7): lea 0xd7d3(%rip),%rsi
bcad(5): mov $0x5,%edx
bcb2(2): xor %edi,%edi
bcb4(5): call 0xffff772c(%rip)
bcb9(3): mov %rbx,%rsi
bcbc(3): mov %rax,%rdi
bcbf(5): call 0xffff78b1(%rip)
bcc4(7): mov 0x2145bd(%rip),%rbx
bccb(7): lea 0xd83e(%rip),%rsi
bcd2(5): mov $0x5,%edx
bcd7(2): xor %edi,%edi
bcd9(5): call 0xffff7707(%rip)
bcde(3): mov %rbx,%rsi
bce1(3): mov %rax,%rdi
bce4(5): call 0xffff788c(%rip)
bce9(7): mov 0x214598(%rip),%rbx
bcf0(7): lea 0xd991(%rip),%rsi
bcf7(5): mov $0x5,%edx
bcfc(2): xor %edi,%edi
bcfe(5): call 0xffff76e2(%rip)
bd03(3): mov %rbx,%rsi
bd06(3): mov %rax,%rdi
bd09(5): call 0xffff7867(%rip)
bd0e(7): mov 0x214573(%rip),%rbx
bd15(7): lea 0xdadc(%rip),%rsi
bd1c(5): mov $0x5,%edx
bd21(2): xor %edi,%edi
bd23(5): call 0xffff76bd(%rip)
bd28(3): mov %rbx,%rsi
bd2b(3): mov %rax,%rdi
bd2e(5): call 0xffff7842(%rip)
bd33(7): mov 0x21454e(%rip),%rbx
bd3a(7): lea 0xdae7(%rip),%rsi
bd41(5): mov $0x5,%edx
bd46(2): xor %edi,%edi
bd48(5): call 0xffff7698(%rip)
bd4d(3): mov %rbx,%rsi
bd50(3): mov %rax,%rdi
bd53(5): call 0xffff781d(%rip)
bd58(7): mov 0x214529(%rip),%rbx
bd5f(7): lea 0xdafa(%rip),%rsi
bd66(5): mov $0x5,%edx
bd6b(2): xor %edi,%edi
bd6d(5): call 0xffff7673(%rip)
bd72(3): mov %rbx,%rsi
bd75(3): mov %rax,%rdi
bd78(5): call 0xffff77f8(%rip)
bd7d(7): mov 0x214504(%rip),%rbx
bd84(7): lea 0xdbad(%rip),%rsi
bd8b(5): mov $0x5,%edx
bd90(2): xor %edi,%edi
bd92(5): call 0xffff764e(%rip)
bd97(3): mov %rbx,%rsi
bd9a(3): mov %rax,%rdi
bd9d(5): call 0xffff77d3(%rip)
bda2(7): mov 0x2144df(%rip),%rbx
bda9(7): lea 0xdd00(%rip),%rsi
bdb0(5): mov $0x5,%edx
bdb5(2): xor %edi,%edi
bdb7(5): call 0xffff7629(%rip)
bdbc(3): mov %rbx,%rsi
bdbf(3): mov %rax,%rdi
bdc2(5): call 0xffff77ae(%rip)
bdc7(7): mov 0x2144ba(%rip),%rbx
bdce(7): lea 0xddfb(%rip),%rsi
bdd5(2): xor %edi,%edi
bdd7(5): mov $0x5,%edx
bddc(5): call 0xffff7604(%rip)
bde1(3): mov %rbx,%rsi
bde4(3): mov %rax,%rdi
bde7(5): call 0xffff7789(%rip)
bdec(6): mov 0x2143ee(%rip),%eax
bdf2(3): cmp $0x1,%eax
bdf5(2): jz 0x17(%rip)
bdf7(3): cmp $0x2,%eax
bdfa(7): lea 0xbb5c(%rip),%rbp
be01(7): lea 0xbb56(%rip),%rax
be08(4): cmove %rax,%rbp
be0c(7): lea 0xbb4f(%rip),%rax
be13(7): lea 0xbb87(%rip),%rcx
be1a(7): lea 0xbfa3(%rip),%rsi
be21(9): mov $0x0,0x60(%rsp)
be2a(9): mov $0x0,0x68(%rsp)
be33(3): mov %rsp,%rbx
be36(5): mov %rax,0x8(%rsp)
be3b(7): lea 0xbb98(%rip),%rax
be42(5): mov %rcx,0x30(%rsp)
be47(7): lea 0xbb5d(%rip),%rcx
be4e(4): mov %rsi,(%rsp)
be52(5): mov %rax,0x10(%rsp)
be57(7): lea 0xbb14(%rip),%rax
be5e(5): mov %rcx,0x40(%rsp)
be63(7): lea 0xbb4b(%rip),%rcx
be6a(5): mov %rax,0x18(%rsp)
be6f(7): lea 0xbb12(%rip),%rax
be76(5): mov %rcx,0x50(%rsp)
be7b(5): mov %rax,0x20(%rsp)
be80(7): lea 0xbb0b(%rip),%rax
be87(5): mov %rax,0x28(%rsp)
be8c(5): mov %rax,0x38(%rsp)
be91(5): mov %rax,0x48(%rsp)
be96(5): mov %rax,0x58(%rsp)
be9b(2): jmp 0x11(%rip)
be9d(3): nop (%rax)
bea0(4): add $0x10,%rbx
bea4(3): mov (%rbx),%rsi
bea7(3): test %rsi,%rsi
beaa(2): jz 0xe(%rip)
beac(3): mov %rbp,%rdi
beaf(5): call 0xffff76e1(%rip)
beb4(2): test %eax,%eax
beb6(2): jnz 0xffffffea(%rip)
beb8(4): mov 0x8(%rbx),%rbx
bebc(2): xor %edi,%edi
bebe(5): mov $0x5,%edx
bec3(7): lea 0xbaf5(%rip),%rsi
beca(3): test %rbx,%rbx
becd(6): jz 0xc3(%rip)
bed3(5): call 0xffff750d(%rip)
bed8(7): lea 0xdd89(%rip),%rcx
bedf(7): lea 0xbaf0(%rip),%rdx
bee6(3): mov %rax,%rsi
bee9(5): mov $0x1,%edi
beee(2): xor %eax,%eax
bef0(5): call 0xffff7820(%rip)
bef5(2): xor %esi,%esi
bef7(5): mov $0x5,%edi
befc(5): call 0xffff7804(%rip)
bf01(3): test %rax,%rax
bf04(2): jz 0x1e(%rip)
bf06(7): lea 0xbad7(%rip),%rsi
bf0d(5): mov $0x3,%edx
bf12(3): mov %rax,%rdi
bf15(5): call 0xffff739b(%rip)
bf1a(2): test %eax,%eax
bf1c(6): jnz 0xfd(%rip)
bf22(7): lea 0xbabf(%rip),%rsi
bf29(2): xor %edi,%edi
bf2b(5): mov $0x5,%edx
bf30(5): call 0xffff74b0(%rip)
bf35(7): lea 0xdd2c(%rip),%rdx
bf3c(3): mov %rbp,%rcx
bf3f(3): mov %rax,%rsi
bf42(5): mov $0x1,%edi
bf47(2): xor %eax,%eax
bf49(5): call 0xffff77c7(%rip)
bf4e(3): cmp %rbx,%rbp
bf51(7): lea 0xba24(%rip),%rcx
bf58(7): lea 0xb954(%rip),%rbp
bf5f(4): cmove %rcx,%rbp
bf63(7): lea 0xdd6e(%rip),%rsi
bf6a(2): xor %edi,%edi
bf6c(5): mov $0x5,%edx
bf71(5): call 0xffff746f(%rip)
bf76(3): mov %rbp,%rcx
bf79(3): mov %rax,%rsi
bf7c(3): mov %rbx,%rdx
bf7f(5): mov $0x1,%edi
bf84(2): xor %eax,%eax
bf86(5): call 0xffff778a(%rip)
bf8b(5): jmp 0xfffff9dc(%rip)
bf90(5): call 0xffff7450(%rip)
bf95(7): lea 0xdccc(%rip),%rcx
bf9c(7): lea 0xba33(%rip),%rdx
bfa3(3): mov %rax,%rsi
bfa6(5): mov $0x1,%edi
bfab(2): xor %eax,%eax
bfad(5): call 0xffff7763(%rip)
bfb2(2): xor %esi,%esi
bfb4(5): mov $0x5,%edi
bfb9(5): call 0xffff7747(%rip)
bfbe(3): test %rax,%rax
bfc1(2): jz 0x1a(%rip)
bfc3(7): lea 0xba1a(%rip),%rsi
bfca(5): mov $0x3,%edx
bfcf(3): mov %rax,%rdi
bfd2(5): call 0xffff72de(%rip)
bfd7(2): test %eax,%eax
bfd9(2): jnz 0x3d(%rip)
bfdb(7): lea 0xba06(%rip),%rsi
bfe2(5): mov $0x5,%edx
bfe7(2): xor %edi,%edi
bfe9(3): mov %rbp,%rbx
bfec(5): call 0xffff73f4(%rip)
bff1(7): lea 0xdc70(%rip),%rdx
bff8(3): mov %rbp,%rcx
bffb(3): mov %rax,%rsi
bffe(5): mov $0x1,%edi
c003(2): xor %eax,%eax
c005(7): lea 0xb970(%rip),%rbp
c00c(5): call 0xffff7704(%rip)
c011(5): jmp 0xffffff52(%rip)
c016(3): mov %rbp,%rbx
c019(7): mov 0x214268(%rip),%r13
c020(7): lea 0xdc69(%rip),%rsi
c027(2): xor %edi,%edi
c029(5): mov $0x5,%edx
c02e(5): call 0xffff73b2(%rip)
c033(3): mov %r13,%rsi
c036(3): mov %rax,%rdi
c039(5): call 0xffff7537(%rip)
c03e(5): jmp 0xfffffee4(%rip)

"areadlink_with_size" :
c050(2): push %r15
c052(2): push %r14
c054(5): mov $0x401,%eax
c059(2): push %r13
c05b(2): push %r12
c05d(3): mov %rdi,%r13
c060(1): push %rbp
c061(1): push %rbx
c062(4): lea 0x1(%rsi),%rbx
c066(a): mov $0x4611686018427387903,%r14
c070(a): mov $0x9223372036854775806,%r15
c07a(4): sub $0x8,%rsp
c07e(7): cmp $0x401,%rsi
c085(4): cmovnb %rax,%rbx
c089(7): nop 0x0(%rax)
c090(3): mov %rbx,%rdi
c093(5): call 0xffff77f5(%rip)
c098(3): test %rax,%rax
c09b(3): mov %rax,%rbp
c09e(2): jz 0x3d(%rip)
c0a0(3): mov %rbx,%rdx
c0a3(3): mov %rax,%rsi
c0a6(3): mov %r13,%rdi
c0a9(5): call 0xffff72b7(%rip)
c0ae(3): test %rax,%rax
c0b1(3): mov %rax,%r12
c0b4(2): js 0x54(%rip)
c0b6(3): cmp %r12,%rbx
c0b9(2): jnbe 0x67(%rip)
c0bb(3): mov %rbp,%rdi
c0be(5): call 0xffff77c2(%rip)
c0c3(3): cmp %r14,%rbx
c0c6(2): jnbe 0x2a(%rip)
c0c8(3): add %rbx,%rbx
c0cb(3): mov %rbx,%rdi
c0ce(5): call 0xffff77ba(%rip)
c0d3(3): test %rax,%rax
c0d6(3): mov %rax,%rbp
c0d9(2): jnz 0xffffffc7(%rip)
c0db(4): add $0x8,%rsp
c0df(3): mov %rbp,%rax
c0e2(1): pop %rbx
c0e3(1): pop %rbp
c0e4(2): pop %r12
c0e6(2): pop %r13
c0e8(2): pop %r14
c0ea(2): pop %r15
c0ec(1): ret near (%rsp)
c0ed(3): nop (%rax)
c0f0(3): cmp %r15,%rbx
c0f3(2): jnbe 0x3d(%rip)
c0f5(a): mov $0x9223372036854775807,%rbx
c0ff(2): jmp 0xffffff91(%rip)
c101(7): nop 0x0(%rax)
c108(5): call 0xffff7198(%rip)
c10d(3): cmp $0x22,(%rax)
c110(2): jz 0xffffffa6(%rip)
c112(3): mov %rbp,%rdi
c115(2): xor %ebp,%ebp
c117(5): call 0xffff7769(%rip)
c11c(2): jmp 0xffffffbf(%rip)
c11e(2): nop 
c120(6): mov $0x0,0x0(%rbp,%r12,1)
c126(2): jmp 0xffffffb5(%rip)
c128(8): nop 0x0(%rax,%rax,1)
c130(5): call 0xffff7170(%rip)
c135(2): xor %ebp,%ebp
c137(6): mov $0xc,(%rax)
c13d(2): jmp 0xffffff9e(%rip)

"__argmatch_die" :
c140(5): mov $0x1,%edi
c145(5): jmp 0xfffff7cb(%rip)

"argmatch" :
c150(2): push %r15
c152(2): push %r14
c154(3): mov %rsi,%r15
c157(2): push %r13
c159(2): push %r12
c15b(3): mov %rcx,%r13
c15e(1): push %rbp
c15f(1): push %rbx
c160(3): mov %rdx,%rbp
c163(4): sub $0x28,%rsp
c167(5): mov %rdi,0x8(%rsp)
c16c(5): mov %rdx,0x18(%rsp)
c171(5): call 0xffff728f(%rip)
c176(3): mov (%r15),%r14
c179(8): mov $0xffffffff,(%rsp)
c181(3): test %r14,%r14
c184(6): jz 0xb9(%rip)
c18a(3): mov %rax,%r12
c18d(5): mov $0x0,0x17(%rsp)
c192(2): xor %ebx,%ebx
c194(2): jmp 0x53(%rip)
c196(a): nop 0x0(%rax,%rax,1)
c1a0(5): mov 0x18(%rsp),%rax
c1a5(3): test %rax,%rax
c1a8(6): jz 0xa8(%rip)
c1ae(4): mov (%rsp),%rdi
c1b2(3): mov %r13,%rdx
c1b5(3): mov %rbp,%rsi
c1b8(4): imul %r13,%rdi
c1bc(3): add %rax,%rdi
c1bf(5): call 0xffff7391(%rip)
c1c4(2): test %eax,%eax
c1c6(5): movzx 0x17(%rsp),%eax
c1cb(5): mov $0x1,%ecx
c1d0(3): cmovne %ecx,%eax
c1d3(4): mov %al,0x17(%rsp)
c1d7(4): add $0x1,%rbx
c1db(3): add %r13,%rbp
c1de(4): mov 0x0(%r15,%rbx,8),%r14
c1e2(3): test %r14,%r14
c1e5(2): jz 0x43(%rip)
c1e7(5): mov 0x8(%rsp),%rsi
c1ec(3): mov %r12,%rdx
c1ef(3): mov %r14,%rdi
c1f2(5): call 0xffff70be(%rip)
c1f7(2): test %eax,%eax
c1f9(2): jnz 0xffffffde(%rip)
c1fb(3): mov %r14,%rdi
c1fe(5): call 0xffff7202(%rip)
c203(3): cmp %r12,%rax
c206(2): jz 0x5a(%rip)
c208(5): cmp $0xffffffff,(%rsp)
c20d(2): jnz 0xffffff93(%rip)
c20f(4): mov %rbx,(%rsp)
c213(4): add $0x1,%rbx
c217(3): add %r13,%rbp
c21a(4): mov 0x0(%r15,%rbx,8),%r14
c21e(3): test %r14,%r14
c221(2): jnz 0xffffffc6(%rip)
c223(5): nop 0x0(%rax,%rax,1)
c228(5): cmp $0x0,0x17(%rsp)
c22d(7): mov $0xfffffffe,%rax
c234(5): cmove (%rsp),%rax
c239(4): mov %rax,(%rsp)
c23d(4): mov (%rsp),%rax
c241(4): add $0x28,%rsp
c245(1): pop %rbx
c246(1): pop %rbp
c247(2): pop %r12
c249(2): pop %r13
c24b(2): pop %r14
c24d(2): pop %r15
c24f(1): ret near (%rsp)
c250(5): mov $0x1,0x17(%rsp)
c255(2): jmp 0xffffff82(%rip)
c257(9): nop 0x0(%rax,%rax,1)
c260(4): mov %rbx,(%rsp)
c264(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
c270(4): cmp $0xffffffff,%rdx
c274(2): push %r12
c276(5): mov $0x5,%edx
c27b(1): push %rbp
c27c(3): mov %rsi,%r12
c27f(1): push %rbx
c280(3): mov %rdi,%rbp
c283(2): jz 0x4d(%rip)
c285(7): lea 0xdcc4(%rip),%rsi
c28c(2): xor %edi,%edi
c28e(5): call 0xffff7152(%rip)
c293(3): mov %rax,%rbx
c296(3): mov %rbp,%rsi
c299(5): mov $0x1,%edi
c29e(5): call 0x7aa2(%rip)
c2a3(3): mov %r12,%rdx
c2a6(3): mov %rax,%rbp
c2a9(5): mov $0x8,%esi
c2ae(2): xor %edi,%edi
c2b0(5): call 0x76c0(%rip)
c2b5(3): mov %rbp,%r8
c2b8(3): mov %rbx,%rdx
c2bb(3): mov %rax,%rcx
c2be(1): pop %rbx
c2bf(1): pop %rbp
c2c0(2): pop %r12
c2c2(2): xor %esi,%esi
c2c4(2): xor %edi,%edi
c2c6(2): xor %eax,%eax
c2c8(5): jmp 0xffff7498(%rip)
c2cd(3): nop (%rax)
c2d0(7): lea 0xdc5e(%rip),%rsi
c2d7(2): xor %edi,%edi
c2d9(5): call 0xffff7107(%rip)
c2de(3): mov %rax,%rbx
c2e1(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
c2f0(2): push %r15
c2f2(2): push %r14
c2f4(3): mov %rdi,%r14
c2f7(2): push %r13
c2f9(2): push %r12
c2fb(2): xor %edi,%edi
c2fd(1): push %rbp
c2fe(1): push %rbx
c2ff(3): mov %rsi,%rbp
c302(7): lea 0xdc64(%rip),%rsi
c309(3): mov %rdx,%r12
c30c(5): mov $0x5,%edx
c311(4): sub $0x8,%rsp
c315(7): mov 0x213fa4(%rip),%rbx
c31c(5): call 0xffff70c4(%rip)
c321(3): mov %rax,%rdi
c324(3): mov %rbx,%rsi
c327(5): call 0xffff7249(%rip)
c32c(3): mov (%r14),%r15
c32f(3): test %r15,%r15
c332(6): jz 0x96(%rip)
c338(3): xor %r13d,%r13d
c33b(2): xor %ebx,%ebx
c33d(2): jmp 0x3b(%rip)
c33f(1): nop 
c340(3): mov %r15,%rdi
c343(4): add $0x1,%rbx
c347(3): mov %rbp,%r13
c34a(5): call 0x7a16(%rip)
c34f(7): mov 0x213f6a(%rip),%rdi
c356(7): lea 0xdc25(%rip),%rdx
c35d(3): mov %rax,%rcx
c360(5): mov $0x1,%esi
c365(2): xor %eax,%eax
c367(3): add %r12,%rbp
c36a(5): call 0xffff7496(%rip)
c36f(4): mov 0x0(%r14,%rbx,8),%r15
c373(3): test %r15,%r15
c376(2): jz 0x52(%rip)
c378(3): test %rbx,%rbx
c37b(2): jz 0xffffffc5(%rip)
c37d(3): mov %r12,%rdx
c380(3): mov %rbp,%rsi
c383(3): mov %r13,%rdi
c386(5): call 0xffff71ca(%rip)
c38b(2): test %eax,%eax
c38d(2): jnz 0xffffffb3(%rip)
c38f(3): mov %r15,%rdi
c392(4): add $0x1,%rbx
c396(3): add %r12,%rbp
c399(5): call 0x79c7(%rip)
c39e(7): mov 0x213f1b(%rip),%rdi
c3a5(7): lea 0xdbde(%rip),%rdx
c3ac(3): mov %rax,%rcx
c3af(5): mov $0x1,%esi
c3b4(2): xor %eax,%eax
c3b6(5): call 0xffff744a(%rip)
c3bb(4): mov 0x0(%r14,%rbx,8),%r15
c3bf(3): test %r15,%r15
c3c2(2): jnz 0xffffffb6(%rip)
c3c4(4): nop 0x0(%rax)
c3c8(7): mov 0x213ef1(%rip),%rdi
c3cf(4): mov 0x28(%rdi),%rax
c3d3(4): cmp 0x30(%rdi),%rax
c3d7(2): jnb 0x21(%rip)
c3d9(4): lea 0x1(%rax),%rdx
c3dd(4): mov %rdx,0x28(%rdi)
c3e1(3): mov $0xa,(%rax)
c3e4(4): add $0x8,%rsp
c3e8(1): pop %rbx
c3e9(1): pop %rbp
c3ea(2): pop %r12
c3ec(2): pop %r13
c3ee(2): pop %r14
c3f0(2): pop %r15
c3f2(1): ret near (%rsp)
c3f3(5): nop 0x0(%rax,%rax,1)
c3f8(4): add $0x8,%rsp
c3fc(5): mov $0xa,%esi
c401(1): pop %rbx
c402(1): pop %rbp
c403(2): pop %r12
c405(2): pop %r13
c407(2): pop %r14
c409(2): pop %r15
c40b(5): jmp 0xffff7085(%rip)

"__xargmatch_internal" :
c410(2): push %r15
c412(2): push %r14
c414(3): mov %rdi,%r14
c417(2): push %r13
c419(2): push %r12
c41b(3): mov %rsi,%r12
c41e(1): push %rbp
c41f(1): push %rbx
c420(3): mov %rcx,%rbp
c423(3): mov %rdx,%rbx
c426(3): mov %r8,%rcx
c429(3): mov %rbp,%rdx
c42c(4): sub $0x8,%rsp
c430(3): mov %rbx,%rsi
c433(3): mov %r12,%rdi
c436(3): mov %r8,%r15
c439(3): mov %r9,%r13
c43c(5): call 0xfffffd14(%rip)
c441(3): test %rax,%rax
c444(2): js 0x11(%rip)
c446(4): add $0x8,%rsp
c44a(1): pop %rbx
c44b(1): pop %rbp
c44c(2): pop %r12
c44e(2): pop %r13
c450(2): pop %r14
c452(2): pop %r15
c454(1): ret near (%rsp)
c455(3): mov %rax,%rdx
c458(3): mov %r12,%rsi
c45b(3): mov %r14,%rdi
c45e(5): call 0xfffffe12(%rip)
c463(3): mov %r15,%rdx
c466(3): mov %rbp,%rsi
c469(3): mov %rbx,%rdi
c46c(5): call 0xfffffe84(%rip)
c471(3): call %r13
c474(7): mov $0xffffffff,%rax
c47b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
c480(2): push %r14
c482(2): push %r13
c484(2): push %r12
c486(1): push %rbp
c487(1): push %rbx
c488(3): mov (%rsi),%r14
c48b(3): test %r14,%r14
c48e(2): jz 0x33(%rip)
c490(3): mov %rcx,%r12
c493(3): mov %rdi,%r13
c496(3): mov %rdx,%rbp
c499(4): lea 0x8(%rsi),%rbx
c49d(2): jmp 0x12(%rip)
c49f(1): nop 
c4a0(3): mov (%rbx),%r14
c4a3(3): add %r12,%rbp
c4a6(4): add $0x8,%rbx
c4aa(3): test %r14,%r14
c4ad(2): jz 0x14(%rip)
c4af(3): mov %r12,%rdx
c4b2(3): mov %rbp,%rsi
c4b5(3): mov %r13,%rdi
c4b8(5): call 0xffff7098(%rip)
c4bd(2): test %eax,%eax
c4bf(2): jnz 0xffffffe1(%rip)
c4c1(1): pop %rbx
c4c2(3): mov %r14,%rax
c4c5(1): pop %rbp
c4c6(2): pop %r12
c4c8(2): pop %r13
c4ca(2): pop %r14
c4cc(1): ret near (%rsp)

"c_strncasecmp" :
c4d0(3): cmp %rsi,%rdi
c4d3(2): jz 0x5d(%rip)
c4d5(3): test %rdx,%rdx
c4d8(2): jnz 0x18(%rip)
c4da(2): jmp 0x56(%rip)
c4dc(4): nop 0x0(%rax)
c4e0(2): test %al,%al
c4e2(2): jz 0x3d(%rip)
c4e4(4): add $0x1,%rdi
c4e8(4): add $0x1,%rsi
c4ec(2): cmp %cl,%al
c4ee(2): jnz 0x31(%rip)
c4f0(3): movzx (%rdi),%eax
c4f3(2): mov %eax,%ecx
c4f5(4): lea 0x20(%rax),%r8d
c4f9(3): sub $0x41,%ecx
c4fc(3): cmp $0x1a,%cl
c4ff(3): movzx (%rsi),%ecx
c502(4): cmovnae %r8d,%eax
c506(3): mov %ecx,%r8d
c509(4): lea 0x20(%rcx),%r10d
c50d(4): sub $0x41,%r8d
c511(4): cmp $0x1a,%r8b
c515(4): cmovnae %r10d,%ecx
c519(4): sub $0x1,%rdx
c51d(2): jnz 0xffffffc3(%rip)
c51f(3): movzx %cl,%ecx
c522(3): movzx %al,%eax
c525(2): sub %ecx,%eax
c527(1): ret near (%rsp)
c528(8): nop 0x0(%rax,%rax,1)
c530(2): xor %eax,%eax
c532(1): ret near (%rsp)

"canonicalize_filename_mode" :
c540(2): push %r15
c542(2): push %r14
c544(2): push %r13
c546(2): push %r12
c548(1): push %rbp
c549(1): push %rbx
c54a(7): sub $0xe8,%rsp
c551(9): mov $0x28,%rax
c55a(8): mov %rax,0xd8(%rsp)
c562(2): xor %eax,%eax
c564(2): mov %esi,%eax
c566(3): and $0x4,%eax
c569(5): setnz 0x1b(%rsp)
c56e(3): and $0x3,%esi
c571(4): mov %eax,0x1c(%rsp)
c575(3): lea 0xffffffff(%rsi),%eax
c578(4): mov %esi,0x4(%rsp)
c57c(2): test %eax,%esi
c57e(6): jnz 0x552(%rip)
c584(3): test %rdi,%rdi
c587(3): mov %rdi,%r14
c58a(6): jz 0x546(%rip)
c590(3): movzx (%rdi),%eax
c593(2): test %al,%al
c595(6): jz 0x57b(%rip)
c59b(2): cmp $0x2f,%al
c59d(6): jz 0x4c3(%rip)
c5a3(5): call 0x83ad(%rip)
c5a8(3): test %rax,%rax
c5ab(3): mov %rax,%rbp
c5ae(6): jz 0x1b2(%rip)
c5b4(3): mov %rax,%rdi
c5b7(5): call 0xffff6e49(%rip)
c5bc(6): cmp $0xfff,%rax
c5c2(3): mov %rax,%r15
c5c5(6): jbe 0x4bb(%rip)
c5cb(3): add %rbp,%r15
c5ce(3): mov %r15,%rbx
c5d1(5): lea 0x40(%rsp),%rax
c5d6(5): mov %r14,0x20(%rsp)
c5db(9): mov $0x0,0x10(%rsp)
c5e4(9): mov $0x0,0x30(%rsp)
c5ed(9): mov $0x0,0x28(%rsp)
c5f6(5): mov %rax,0x8(%rsp)
c5fb(4): movzx (%r14),%eax
c5ff(2): test %al,%al
c601(6): jz 0x10e(%rip)
c607(9): nop 0x0(%rax,%rax,1)
c610(2): cmp $0x2f,%al
c612(2): jnz 0x1a(%rip)
c614(4): nop 0x0(%rax)
c618(4): add $0x1,%r14
c61c(4): movzx (%r14),%eax
c620(2): cmp $0x2f,%al
c622(2): jz 0xfffffff6(%rip)
c624(2): test %al,%al
c626(6): jz 0x2ca(%rip)
c62c(3): mov %r14,%r13
c62f(2): jmp 0xe(%rip)
c631(7): nop 0x0(%rax)
c638(3): cmp $0x2f,%dl
c63b(2): jz 0xf(%rip)
c63d(4): add $0x1,%r13
c641(5): movzx 0x0(%r13),%edx
c646(2): test %dl,%dl
c648(2): jnz 0xfffffff0(%rip)
c64a(3): cmp %r14,%r13
c64d(6): jz 0xc2(%rip)
c653(3): mov %r13,%r12
c656(3): sub %r14,%r12
c659(4): cmp $0x1,%r12
c65d(6): jz 0x1d3(%rip)
c663(4): cmp $0x2,%r12
c667(2): jnz 0xa(%rip)
c669(2): cmp $0x2e,%al
c66b(6): jz 0x295(%rip)
c671(5): cmp $0x2f,0xffffffff(%r15)
c676(2): jz 0xa(%rip)
c678(4): mov $0x2f,(%r15)
c67c(4): add $0x1,%r15
c680(4): lea 0x0(%r15,%r12,1),%rax
c684(3): cmp %rax,%rbx
c687(2): jnbe 0x33(%rip)
c689(3): sub %rbp,%rbx
c68c(3): sub %rbp,%r15
c68f(3): mov %rbp,%rdi
c692(5): lea 0x1(%r12,%rbx,1),%rax
c697(7): add $0x1000,%rbx
c69e(7): cmp $0x1000,%r12
c6a5(4): cmovnl %rax,%rbx
c6a9(3): mov %rbx,%rsi
c6ac(5): call 0x7f44(%rip)
c6b1(3): mov %rax,%rbp
c6b4(3): add %rax,%rbx
c6b7(3): add %rax,%r15
c6ba(3): mov %r15,%rdi
c6bd(3): mov %r12,%rdx
c6c0(3): mov %r14,%rsi
c6c3(5): call 0xffff6f2d(%rip)
c6c8(5): cmp $0x2,0x4(%rsp)
c6cd(4): lea 0x0(%r15,%r12,1),%r15
c6d1(4): mov $0x0,(%r15)
c6d5(6): jnz 0xbb(%rip)
c6db(5): cmp $0x0,0x1b(%rsp)
c6e0(6): jz 0xb0(%rip)
c6e6(8): mov $0x0,0x58(%rsp)
c6ee(5): cmp $0x0,0x0(%r13)
c6f3(2): jz 0xd(%rip)
c6f5(5): cmp $0x2,0x4(%rsp)
c6fa(6): jnz 0x45d(%rip)
c700(3): mov %r13,%r14
c703(4): movzx (%r14),%eax
c707(2): test %al,%al
c709(6): jnz 0xffffff07(%rip)
c70f(4): lea 0x1(%rbp),%rax
c713(3): cmp %rax,%r15
c716(2): jbe 0xd(%rip)
c718(5): cmp $0x2f,0xffffffff(%r15)
c71d(2): jnz 0x6(%rip)
c71f(4): sub $0x1,%r15
c723(4): lea 0x1(%r15),%rax
c727(4): mov $0x0,(%r15)
c72b(3): cmp %rax,%rbx
c72e(2): jz 0x14(%rip)
c730(3): sub %rbp,%r15
c733(3): mov %rbp,%rdi
c736(4): lea 0x1(%r15),%rsi
c73a(5): call 0x7eb6(%rip)
c73f(3): mov %rax,%rbp
c742(5): mov 0x28(%rsp),%rdi
c747(5): call 0xffff7139(%rip)
c74c(5): mov 0x10(%rsp),%rax
c751(3): test %rax,%rax
c754(2): jz 0xc(%rip)
c756(3): mov %rax,%rdi
c759(5): call 0x1aa7(%rip)
c75e(2): nop 
c760(8): mov 0xd8(%rsp),%rcx
c768(9): xor $0x28,%rcx
c771(3): mov %rbp,%rax
c774(6): jnz 0x3fd(%rip)
c77a(7): add $0xe8,%rsp
c781(1): pop %rbx
c782(1): pop %rbp
c783(2): pop %r12
c785(2): pop %r13
c787(2): pop %r14
c789(2): pop %r15
c78b(1): ret near (%rsp)
c78c(4): nop 0x0(%rax)
c790(4): mov 0x1c(%rsp),%eax
c794(5): mov 0x8(%rsp),%rdx
c799(3): mov %rbp,%rsi
c79c(5): mov $0x1,%edi
c7a1(2): test %eax,%eax
c7a3(6): jz 0xbd(%rip)
c7a9(5): call 0xffff6e97(%rip)
c7ae(2): test %eax,%eax
c7b0(3): setnz %al
c7b3(2): test %al,%al
c7b5(6): jz 0x8b(%rip)
c7bb(5): call 0xffff6ae5(%rip)
c7c0(3): mov %rax,%r14
c7c3(2): mov (%rax),%edx
c7c5(4): mov 0x4(%rsp),%eax
c7c9(2): test %eax,%eax
c7cb(2): jz 0x33(%rip)
c7cd(3): cmp $0x1,%eax
c7d0(6): jnz 0xffffff16(%rip)
c7d6(7): lea 0xb3f0(%rip),%rsi
c7dd(3): mov %r13,%rdi
c7e0(4): mov %edx,0x38(%rsp)
c7e4(5): call 0xffff6d4c(%rip)
c7e9(6): cmp $0x0,0x0(%r13,%rax,1)
c7ef(4): mov 0x38(%rsp),%edx
c7f3(2): jnz 0xb(%rip)
c7f5(3): cmp $0x2,%edx
c7f8(6): jz 0xffffff08(%rip)
c7fe(3): mov %r14,%r12
c801(5): mov 0x28(%rsp),%rdi
c806(4): mov %edx,0x4(%rsp)
c80a(5): call 0xffff7076(%rip)
c80f(3): mov %rbp,%rdi
c812(5): call 0xffff706e(%rip)
c817(6): cmp $0x0,0x10(%rsp)
c81d(4): mov 0x4(%rsp),%edx
c821(6): jz 0xbb(%rip)
c827(5): jmp 0xa3(%rip)
c82c(4): nop 0x0(%rax)
c830(2): cmp $0x2e,%al
c832(6): jnz 0xfffffe3f(%rip)
c838(5): jmp 0xfffffec8(%rip)
c83d(3): nop (%rax)
c840(4): mov 0x58(%rsp),%eax
c844(5): and $0xf000,%eax
c849(5): cmp $0xa000,%eax
c84e(2): jz 0x22(%rip)
c850(5): cmp $0x4000,%eax
c855(6): jz 0xfffffeab(%rip)
c85b(5): jmp 0xfffffe93(%rip)
c860(5): call 0xffff6bb0(%rip)
c865(2): test %eax,%eax
c867(3): setnz %al
c86a(5): jmp 0xffffff49(%rip)
c86f(1): nop 
c870(6): cmp $0x0,0x10(%rsp)
c876(6): jz 0x1b0(%rip)
c87c(5): mov 0x8(%rsp),%rdx
c881(5): mov 0x20(%rsp),%rsi
c886(5): mov 0x10(%rsp),%rdi
c88b(5): call 0x5d5(%rip)
c890(2): test %al,%al
c892(6): jz 0xbe(%rip)
c898(5): cmp $0x2,0x4(%rsp)
c89d(6): jz 0xfffffe63(%rip)
c8a3(5): call 0xffff69fd(%rip)
c8a8(5): mov $0x28,%edx
c8ad(3): mov %rax,%r12
c8b0(5): mov 0x28(%rsp),%rdi
c8b5(4): mov %edx,0x4(%rsp)
c8b9(5): call 0xffff6fc7(%rip)
c8be(3): mov %rbp,%rdi
c8c1(5): call 0xffff6fbf(%rip)
c8c6(4): mov 0x4(%rsp),%edx
c8ca(5): mov 0x10(%rsp),%rdi
c8cf(4): mov %edx,0x4(%rsp)
c8d3(5): call 0x192d(%rip)
c8d8(4): mov 0x4(%rsp),%edx
c8dc(4): mov %edx,(%r12)
c8e0(2): xor %ebp,%ebp
c8e2(5): jmp 0xfffffe7e(%rip)
c8e7(9): nop 0x0(%rax,%rax,1)
c8f0(3): mov %r14,%r13
c8f3(5): jmp 0xfffffd57(%rip)
c8f8(8): nop 0x0(%rax,%rax,1)
c900(5): cmp $0x2e,0x1(%r14)
c905(6): jnz 0xfffffd6c(%rip)
c90b(4): lea 0x1(%rbp),%rax
c90f(3): mov %r13,%r14
c912(3): cmp %rax,%r15
c915(6): jbe 0xfffffce6(%rip)
c91b(4): lea 0xffffffff(%r15),%rax
c91f(3): cmp %rax,%rbp
c922(6): jnb 0x247(%rip)
c928(5): cmp $0x2f,0xfffffffe(%r15)
c92d(3): mov %rax,%r15
c930(6): jz 0xfffffccb(%rip)
c936(4): sub $0x1,%r15
c93a(3): cmp %r15,%rbp
c93d(6): jz 0xfffffdc3(%rip)
c943(5): cmp $0x2f,0xffffffff(%r15)
c948(6): jz 0xfffffdb8(%rip)
c94e(2): jmp 0xffffffe8(%rip)
c950(5): mov 0x8(%rsp),%rdx
c955(5): mov 0x20(%rsp),%rsi
c95a(5): mov 0x10(%rsp),%rdi
c95f(5): call 0x471(%rip)
c964(5): mov 0x70(%rsp),%rsi
c969(3): mov %rbp,%rdi
c96c(5): call 0xfffff6e4(%rip)
c971(3): test %rax,%rax
c974(3): mov %rax,%r14
c977(6): jz 0x16b(%rip)
c97d(3): mov %rax,%rdi
c980(5): call 0xffff6a80(%rip)
c985(3): mov %r13,%rdi
c988(3): mov %rax,%r12
c98b(5): mov %rax,0x20(%rsp)
c990(5): call 0xffff6a70(%rip)
c995(6): cmp $0x0,0x30(%rsp)
c99b(3): mov %rax,%rdx
c99e(5): lea 0x1(%r12,%rdx,1),%rcx
c9a3(6): jz 0xfc(%rip)
c9a9(5): cmp %rcx,0x30(%rsp)
c9ae(2): jnb 0x23(%rip)
c9b0(5): mov 0x28(%rsp),%rdi
c9b5(3): mov %rcx,%rsi
c9b8(5): mov %rdx,0x38(%rsp)
c9bd(5): mov %rcx,0x30(%rsp)
c9c2(5): call 0x7c2e(%rip)
c9c7(5): mov 0x38(%rsp),%rdx
c9cc(5): mov %rax,0x28(%rsp)
c9d1(5): mov 0x28(%rsp),%r12
c9d6(5): mov 0x20(%rsp),%rdi
c9db(4): add $0x1,%rdx
c9df(3): mov %r13,%rsi
c9e2(3): add %r12,%rdi
c9e5(3): mov %r12,%r13
c9e8(5): call 0xffff6d68(%rip)
c9ed(5): mov 0x20(%rsp),%rdx
c9f2(3): mov %r14,%rsi
c9f5(3): mov %r12,%rdi
c9f8(5): call 0xffff6bf8(%rip)
c9fd(4): cmp $0x2f,(%r14)
ca01(5): mov %r12,0x20(%rsp)
ca06(4): lea 0x1(%rbp),%rax
ca0a(6): jz 0xfa(%rip)
ca10(3): cmp %rax,%r15
ca13(6): jnbe 0x10f(%rip)
ca19(3): mov %r14,%rdi
ca1c(5): call 0xffff6e64(%rip)
ca21(5): jmp 0xfffffcdf(%rip)
ca26(7): lea 0x20a3(%rip),%r8
ca2d(7): lea 0x205c(%rip),%rcx
ca34(2): xor %esi,%esi
ca36(7): lea 0x1fe3(%rip),%rdx
ca3d(5): mov $0x7,%edi
ca42(5): call 0x156e(%rip)
ca47(3): test %rax,%rax
ca4a(5): mov %rax,0x10(%rsp)
ca4f(6): jnz 0xfffffe2d(%rip)
ca55(5): call 0x7d8b(%rip)
ca5a(6): nop 0x0(%rax,%rax,1)
ca60(5): mov $0x1000,%edi
ca65(5): call 0x7b2b(%rip)
ca6a(3): mov %rax,%rbp
ca6d(7): lea 0x1000(%rax),%rbx
ca74(4): lea 0x1(%rax),%r15
ca78(3): mov $0x2f,(%rax)
ca7b(5): jmp 0xfffffb56(%rip)
ca80(3): mov %rbp,%rdi
ca83(5): mov $0x1000,%esi
ca88(5): call 0x7b68(%rip)
ca8d(3): mov %rax,%rbp
ca90(3): add %rax,%r15
ca93(7): lea 0x1000(%rax),%rbx
ca9a(5): jmp 0xfffffb37(%rip)
ca9f(7): cmp $0x1000,%rcx
caa6(5): mov $0x1000,%eax
caab(5): mov %rdx,0x38(%rsp)
cab0(4): cmovnb %rcx,%rax
cab4(3): mov %rax,%rdi
cab7(5): mov %rax,0x30(%rsp)
cabc(5): call 0x7ad4(%rip)
cac1(5): mov 0x38(%rsp),%rdx
cac6(5): mov %rax,0x28(%rsp)
cacb(5): jmp 0xffffff06(%rip)
cad0(5): call 0xffff67d0(%rip)
cad5(2): xor %ebp,%ebp
cad7(6): mov $0x16,(%rax)
cadd(5): jmp 0xfffffc83(%rip)
cae2(5): call 0xffff67be(%rip)
cae7(5): cmp $0x2,0x4(%rsp)
caec(3): mov %rax,%r14
caef(2): mov (%rax),%edx
caf1(2): jnz 0xb(%rip)
caf3(3): cmp $0xc,%edx
caf6(6): jnz 0xfffffc0a(%rip)
cafc(3): mov %r14,%r12
caff(5): jmp 0xfffffdb1(%rip)
cb04(4): mov $0x2f,0x0(%rbp)
cb08(3): mov %rax,%r15
cb0b(5): jmp 0xffffff0e(%rip)
cb10(5): call 0xffff6790(%rip)
cb15(2): xor %ebp,%ebp
cb17(6): mov $0x2,(%rax)
cb1d(5): jmp 0xfffffc43(%rip)
cb22(4): lea 0xffffffff(%r15),%rax
cb26(3): cmp %rax,%rbp
cb29(2): jnb 0x9(%rip)
cb2b(5): cmp $0x2f,0xfffffffe(%r15)
cb30(2): jnz 0xd(%rip)
cb32(3): mov %rax,%r15
cb35(5): jmp 0xfffffee4(%rip)
cb3a(3): mov %r15,%rax
cb3d(4): lea 0xffffffff(%rax),%r15
cb41(3): cmp %r15,%rbp
cb44(6): jz 0xfffffed5(%rip)
cb4a(5): cmp $0x2f,0xffffffff(%r15)
cb4f(6): jz 0xfffffeca(%rip)
cb55(2): jmp 0xffffffe5(%rip)
cb57(5): call 0xffff6749(%rip)
cb5c(5): mov $0x14,%edx
cb61(3): mov %rax,%r12
cb64(5): jmp 0xfffffc9d(%rip)
cb69(3): mov %rax,%r15
cb6c(5): jmp 0xfffffa8f(%rip)
cb71(5): call 0xffff68af(%rip)

"close_stdout_set_file_name" :
cb80(7): mov %rdi,0x214851(%rip)
cb87(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
cb90(7): mov %dil,0x214839(%rip)
cb97(1): ret near (%rsp)

"close_stdout" :
cba0(1): push %rbp
cba1(1): push %rbx
cba2(4): sub $0x8,%rsp
cba6(7): mov 0x2136db(%rip),%rdi
cbad(5): call 0x90d3(%rip)
cbb2(2): test %eax,%eax
cbb4(2): jz 0x18(%rip)
cbb6(5): call 0xffff66ea(%rip)
cbbb(7): cmp $0x0,0x21480e(%rip)
cbc2(3): mov %rax,%rbx
cbc5(2): jz 0x1e(%rip)
cbc7(3): cmp $0x20,(%rax)
cbca(2): jnz 0x19(%rip)
cbcc(7): mov 0x2136ed(%rip),%rdi
cbd3(5): call 0x90ad(%rip)
cbd8(2): test %eax,%eax
cbda(2): jnz 0x48(%rip)
cbdc(4): add $0x8,%rsp
cbe0(1): pop %rbx
cbe1(1): pop %rbp
cbe2(1): ret near (%rsp)
cbe3(7): lea 0xd3a5(%rip),%rsi
cbea(2): xor %edi,%edi
cbec(5): mov $0x5,%edx
cbf1(5): call 0xffff67ef(%rip)
cbf6(7): mov 0x2147db(%rip),%rdi
cbfd(3): mov %rax,%rbp
cc00(3): test %rdi,%rdi
cc03(2): jz 0x2a(%rip)
cc05(5): call 0x6f5b(%rip)
cc0a(2): mov (%rbx),%esi
cc0c(7): lea 0xae45(%rip),%rdx
cc13(3): mov %rax,%rcx
cc16(3): mov %rbp,%r8
cc19(2): xor %edi,%edi
cc1b(2): xor %eax,%eax
cc1d(5): call 0xffff6b43(%rip)
cc22(6): mov 0x2135d0(%rip),%edi
cc28(5): call 0xffff66a8(%rip)
cc2d(2): mov (%rbx),%esi
cc2f(7): lea 0xd356(%rip),%rdx
cc36(3): mov %rax,%rcx
cc39(2): xor %edi,%edi
cc3b(2): xor %eax,%eax
cc3d(5): call 0xffff6b23(%rip)
cc42(2): jmp 0xffffffe0(%rip)

"dir_len" :
cc50(1): push %rbp
cc51(1): push %rbx
cc52(2): xor %ebp,%ebp
cc54(3): mov %rdi,%rbx
cc57(4): sub $0x8,%rsp
cc5b(3): cmp $0x2f,(%rdi)
cc5e(4): setz %bpl
cc62(5): call 0xae(%rip)
cc67(3): mov %rax,%rcx
cc6a(3): sub %rbx,%rcx
cc6d(3): cmp %rbp,%rcx
cc70(2): jbe 0x30(%rip)
cc72(4): cmp $0x2f,0xffffffff(%rax)
cc76(4): lea 0xffffffff(%rcx),%rdx
cc7a(2): jz 0x14(%rip)
cc7c(2): jmp 0x24(%rip)
cc7e(2): nop 
cc80(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
cc85(4): lea 0xffffffff(%rdx),%rax
cc89(2): jnz 0xa(%rip)
cc8b(3): mov %rax,%rdx
cc8e(3): cmp %rdx,%rbp
cc91(2): jnz 0xffffffef(%rip)
cc93(4): add $0x8,%rsp
cc97(3): mov %rdx,%rax
cc9a(1): pop %rbx
cc9b(1): pop %rbp
cc9c(1): ret near (%rsp)
cc9d(3): nop (%rax)
cca0(4): add $0x8,%rsp
cca4(3): mov %rcx,%rdx
cca7(3): mov %rdx,%rax
ccaa(1): pop %rbx
ccab(1): pop %rbp
ccac(1): ret near (%rsp)

"mdir_name" :
ccb0(1): push %rbp
ccb1(1): push %rbx
ccb2(3): mov %rdi,%rbp
ccb5(4): sub $0x8,%rsp
ccb9(5): call 0xffffff97(%rip)
ccbe(3): test %rax,%rax
ccc1(3): mov %rax,%rbx
ccc4(3): setz %al
ccc7(3): movzx %al,%eax
ccca(5): lea 0x1(%rbx,%rax,1),%rdi
cccf(5): call 0xffff6bb9(%rip)
ccd4(3): test %rax,%rax
ccd7(3): mov %rax,%rcx
ccda(2): jz 0x1c(%rip)
ccdc(3): mov %rbx,%rdx
ccdf(3): mov %rbp,%rsi
cce2(3): mov %rax,%rdi
cce5(5): call 0xffff690b(%rip)
ccea(3): test %rbx,%rbx
cced(3): mov %rax,%rcx
ccf0(2): jz 0x10(%rip)
ccf2(4): mov $0x0,0x0(%rcx,%rbx,1)
ccf6(4): add $0x8,%rsp
ccfa(3): mov %rcx,%rax
ccfd(1): pop %rbx
ccfe(1): pop %rbp
ccff(1): ret near (%rsp)
cd00(3): mov $0x2e,(%rax)
cd03(5): mov $0x1,%ebx
cd08(2): jmp 0xffffffea(%rip)

"last_component" :
cd10(3): movzx (%rdi),%edx
cd13(3): mov %rdi,%rax
cd16(3): cmp $0x2f,%dl
cd19(2): jnz 0x13(%rip)
cd1b(5): nop 0x0(%rax,%rax,1)
cd20(4): add $0x1,%rax
cd24(3): movzx (%rax),%edx
cd27(3): cmp $0x2f,%dl
cd2a(2): jz 0xfffffff6(%rip)
cd2c(2): test %dl,%dl
cd2e(2): jz 0x3c(%rip)
cd30(3): mov %rax,%rcx
cd33(2): xor %esi,%esi
cd35(2): jmp 0x20(%rip)
cd37(9): nop 0x0(%rax,%rax,1)
cd40(3): test %sil,%sil
cd43(2): jz 0x7(%rip)
cd45(3): mov %rcx,%rax
cd48(2): xor %esi,%esi
cd4a(4): add $0x1,%rcx
cd4e(3): movzx (%rcx),%edx
cd51(2): test %dl,%dl
cd53(2): jz 0x17(%rip)
cd55(3): cmp $0x2f,%dl
cd58(2): jnz 0xffffffe8(%rip)
cd5a(4): add $0x1,%rcx
cd5e(3): movzx (%rcx),%edx
cd61(5): mov $0x1,%esi
cd66(2): test %dl,%dl
cd68(2): jnz 0xffffffed(%rip)
cd6a(2): REP ret near (%rsp)

"base_len" :
cd70(1): push %rbx
cd71(3): mov %rdi,%rbx
cd74(5): call 0xffff668c(%rip)
cd79(4): cmp $0x1,%rax
cd7d(2): jbe 0xd(%rip)
cd7f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
cd84(4): lea 0xffffffff(%rax),%rdx
cd88(2): jz 0x10(%rip)
cd8a(1): pop %rbx
cd8b(1): ret near (%rsp)
cd8c(4): nop 0x0(%rax)
cd90(3): mov %rax,%rdx
cd93(5): nop 0x0(%rax,%rax,1)
cd98(4): cmp $0x1,%rdx
cd9c(2): jz 0x14(%rip)
cd9e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
cda3(4): lea 0xffffffff(%rdx),%rax
cda7(2): jz 0xffffffe9(%rip)
cda9(3): mov %rdx,%rax
cdac(1): pop %rbx
cdad(1): ret near (%rsp)
cdae(2): nop 
cdb0(5): mov $0x1,%eax
cdb5(1): pop %rbx
cdb6(1): ret near (%rsp)

"file_has_acl" :
cdc0(2): xor %eax,%eax
cdc2(1): ret near (%rsp)

"record_file" :
cdd0(3): test %rdi,%rdi
cdd3(2): jz 0x7d(%rip)
cdd5(2): push %r13
cdd7(2): push %r12
cdd9(3): mov %rdi,%r13
cddc(1): push %rbp
cddd(1): push %rbx
cdde(3): mov %rsi,%r12
cde1(5): mov $0x18,%edi
cde6(3): mov %rdx,%rbp
cde9(4): sub $0x8,%rsp
cded(5): call 0x77a3(%rip)
cdf2(3): mov %r12,%rdi
cdf5(3): mov %rax,%rbx
cdf8(5): call 0x79c8(%rip)
cdfd(3): mov %rax,(%rbx)
ce00(4): mov 0x8(%rbp),%rax
ce04(3): mov %rbx,%rsi
ce07(3): mov %r13,%rdi
ce0a(4): mov %rax,0x8(%rbx)
ce0e(4): mov 0x0(%rbp),%rax
ce12(4): mov %rax,0x10(%rbx)
ce16(5): call 0x199a(%rip)
ce1b(3): test %rax,%rax
ce1e(2): jz 0x34(%rip)
ce20(3): cmp %rax,%rbx
ce23(2): jz 0x1d(%rip)
ce25(4): add $0x8,%rsp
ce29(3): mov %rbx,%rdi
ce2c(1): pop %rbx
ce2d(1): pop %rbp
ce2e(2): pop %r12
ce30(2): pop %r13
ce32(5): jmp 0x1c9e(%rip)
ce37(9): nop 0x0(%rax,%rax,1)
ce40(4): add $0x8,%rsp
ce44(1): pop %rbx
ce45(1): pop %rbp
ce46(2): pop %r12
ce48(2): pop %r13
ce4a(1): ret near (%rsp)
ce4b(5): nop 0x0(%rax,%rax,1)
ce50(2): REP ret near (%rsp)
ce52(5): call 0x798e(%rip)

"seen_file" :
ce60(4): sub $0x28,%rsp
ce64(9): mov $0x28,%rax
ce6d(5): mov %rax,0x18(%rsp)
ce72(2): xor %eax,%eax
ce74(3): test %rdi,%rdi
ce77(2): jz 0x25(%rip)
ce79(4): mov 0x8(%rdx),%rax
ce7d(4): mov %rsi,(%rsp)
ce81(3): mov %rsp,%rsi
ce84(5): mov %rax,0x8(%rsp)
ce89(3): mov (%rdx),%rax
ce8c(5): mov %rax,0x10(%rsp)
ce91(5): call 0xeaf(%rip)
ce96(3): test %rax,%rax
ce99(3): setnz %al
ce9c(5): mov 0x18(%rsp),%rcx
cea1(9): xor $0x28,%rcx
ceaa(2): jnz 0x7(%rip)
ceac(4): add $0x28,%rsp
ceb0(1): ret near (%rsp)
ceb1(5): call 0xffff656f(%rip)

"strmode" :
cec0(2): mov %edi,%edx
cec2(5): mov $0x2d,%eax
cec7(6): and $0xf000,%edx
cecd(6): cmp $0x8000,%edx
ced3(2): jz 0x5d(%rip)
ced5(6): cmp $0x4000,%edx
cedb(5): mov $0x64,%eax
cee0(2): jz 0x50(%rip)
cee2(6): cmp $0x6000,%edx
cee8(5): mov $0x62,%eax
ceed(2): jz 0x43(%rip)
ceef(6): cmp $0x2000,%edx
cef5(5): mov $0x63,%eax
cefa(2): jz 0x36(%rip)
cefc(6): cmp $0xa000,%edx
cf02(5): mov $0x6c,%eax
cf07(2): jz 0x29(%rip)
cf09(6): cmp $0x1000,%edx
cf0f(5): mov $0x70,%eax
cf14(2): jz 0x1c(%rip)
cf16(6): cmp $0xc000,%edx
cf1c(5): mov $0x73,%eax
cf21(5): mov $0x3f,%edx
cf26(3): cmovne %edx,%eax
cf29(7): nop 0x0(%rax)
cf30(2): mov %al,(%rsi)
cf32(2): mov %edi,%eax
cf34(5): and $0x100,%eax
cf39(3): cmp $0x1,%eax
cf3c(2): sbb %eax,%eax
cf3e(3): and $0xbb,%eax
cf41(3): add $0x72,%eax
cf44(3): mov %al,0x1(%rsi)
cf47(2): mov %edi,%eax
cf49(5): and $0x80,%eax
cf4e(3): cmp $0x1,%eax
cf51(2): sbb %eax,%eax
cf53(3): and $0xb6,%eax
cf56(3): add $0x77,%eax
cf59(3): mov %al,0x2(%rsi)
cf5c(2): mov %edi,%eax
cf5e(3): and $0x40,%eax
cf61(3): cmp $0x1,%eax
cf64(2): sbb %eax,%eax
cf66(6): test $0x800,%edi
cf6c(6): jz 0xa4(%rip)
cf72(3): and $0xe0,%eax
cf75(3): add $0x73,%eax
cf78(3): mov %al,0x3(%rsi)
cf7b(2): mov %edi,%eax
cf7d(3): and $0x20,%eax
cf80(3): cmp $0x1,%eax
cf83(2): sbb %eax,%eax
cf85(3): and $0xbb,%eax
cf88(3): add $0x72,%eax
cf8b(3): mov %al,0x4(%rsi)
cf8e(2): mov %edi,%eax
cf90(3): and $0x10,%eax
cf93(3): cmp $0x1,%eax
cf96(2): sbb %eax,%eax
cf98(3): and $0xb6,%eax
cf9b(3): add $0x77,%eax
cf9e(3): mov %al,0x5(%rsi)
cfa1(2): mov %edi,%eax
cfa3(3): and $0x8,%eax
cfa6(3): cmp $0x1,%eax
cfa9(2): sbb %eax,%eax
cfab(6): test $0x400,%edi
cfb1(6): jz 0x87(%rip)
cfb7(3): and $0xe0,%eax
cfba(3): add $0x73,%eax
cfbd(3): mov %al,0x6(%rsi)
cfc0(2): mov %edi,%eax
cfc2(3): and $0x4,%eax
cfc5(3): cmp $0x1,%eax
cfc8(2): sbb %eax,%eax
cfca(3): and $0xbb,%eax
cfcd(3): add $0x72,%eax
cfd0(3): mov %al,0x7(%rsi)
cfd3(2): mov %edi,%eax
cfd5(3): and $0x2,%eax
cfd8(3): cmp $0x1,%eax
cfdb(2): sbb %eax,%eax
cfdd(3): and $0xb6,%eax
cfe0(3): add $0x77,%eax
cfe3(3): mov %al,0x8(%rsi)
cfe6(2): mov %edi,%eax
cfe8(3): and $0x1,%eax
cfeb(3): cmp $0x1,%eax
cfee(2): sbb %eax,%eax
cff0(6): and $0x200,%edi
cff6(2): jz 0x2a(%rip)
cff8(3): and $0xe0,%eax
cffb(3): add $0x74,%eax
cffe(3): mov %al,0x9(%rsi)
d001(5): mov $0x20,%eax
d006(4): mov %ax,0xa(%rsi)
d00a(1): ret near (%rsp)
d00b(5): nop 0x0(%rax,%rax,1)
d010(3): and $0xb5,%eax
d013(3): add $0x78,%eax
d016(5): jmp 0xffffff62(%rip)
d01b(5): nop 0x0(%rax,%rax,1)
d020(3): and $0xb5,%eax
d023(3): add $0x78,%eax
d026(3): mov %al,0x9(%rsi)
d029(5): mov $0x20,%eax
d02e(4): mov %ax,0xa(%rsi)
d032(1): ret near (%rsp)
d033(5): nop 0x0(%rax,%rax,1)
d038(3): and $0xb5,%eax
d03b(3): add $0x78,%eax
d03e(5): jmp 0xffffff7f(%rip)

"filemodestring" :
d050(3): mov 0x18(%rdi),%edi
d053(5): jmp 0xfffffe6d(%rip)

"file_name_concat" :
d060(4): sub $0x8,%rsp
d064(5): call 0x1c(%rip)
d069(3): test %rax,%rax
d06c(2): jz 0x7(%rip)
d06e(4): add $0x8,%rsp
d072(1): ret near (%rsp)
d073(5): call 0x776d(%rip)

"mfile_name_concat" :
d080(2): push %r15
d082(2): push %r14
d084(3): mov %rdx,%r15
d087(2): push %r13
d089(2): push %r12
d08b(3): mov %rdi,%r12
d08e(1): push %rbp
d08f(1): push %rbx
d090(3): mov %rsi,%rbp
d093(4): sub $0x18,%rsp
d097(5): call 0xfffffc79(%rip)
d09c(3): mov %rax,%rbx
d09f(3): mov %rax,%rdi
d0a2(5): call 0xfffffcce(%rip)
d0a7(3): sub %r12,%rbx
d0aa(3): mov %rax,%r13
d0ad(3): mov %rbp,%rdi
d0b0(3): add %rax,%rbx
d0b3(5): call 0xffff634d(%rip)
d0b8(3): test %r13,%r13
d0bb(3): mov %rax,%r14
d0be(2): jz 0x32(%rip)
d0c0(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
d0c6(6): jz 0xaa(%rip)
d0cc(2): xor %eax,%eax
d0ce(4): cmp $0x2f,0x0(%rbp)
d0d2(5): mov $0x0,%edx
d0d7(3): setnz %al
d0da(4): mov %rax,(%rsp)
d0de(5): mov $0x2f,%eax
d0e3(3): cmove %edx,%eax
d0e6(4): mov %al,0xf(%rsp)
d0ea(2): jmp 0x24(%rip)
d0ec(4): nop 0x0(%rax)
d0f0(2): xor %eax,%eax
d0f2(4): cmp $0x2f,0x0(%rbp)
d0f6(5): mov $0x0,%edx
d0fb(3): setz %al
d0fe(4): mov %rax,(%rsp)
d102(5): mov $0x2e,%eax
d107(3): cmovne %edx,%eax
d10a(4): mov %al,0xf(%rsp)
d10e(5): lea 0x1(%rbx,%r14,1),%rdi
d113(4): add (%rsp),%rdi
d117(5): call 0xffff6771(%rip)
d11c(3): test %rax,%rax
d11f(3): mov %rax,%r13
d122(2): jz 0x34(%rip)
d124(3): mov %rax,%rdi
d127(3): mov %rbx,%rdx
d12a(3): mov %r12,%rsi
d12d(5): call 0xffff6613(%rip)
d132(5): movzx 0xf(%rsp),%ecx
d137(4): mov (%rsp),%rdi
d13b(3): add %rax,%rdi
d13e(3): test %r15,%r15
d141(2): mov %cl,(%rax)
d143(2): jz 0x5(%rip)
d145(3): mov %rdi,(%r15)
d148(3): mov %r14,%rdx
d14b(3): mov %rbp,%rsi
d14e(5): call 0xffff65f2(%rip)
d153(3): mov $0x0,(%rax)
d156(4): add $0x18,%rsp
d15a(3): mov %r13,%rax
d15d(1): pop %rbx
d15e(1): pop %rbp
d15f(2): pop %r12
d161(2): pop %r13
d163(2): pop %r14
d165(2): pop %r15
d167(1): ret near (%rsp)
d168(8): nop 0x0(%rax,%rax,1)
d170(8): mov $0x0,(%rsp)
d178(5): mov $0x0,0xf(%rsp)
d17d(2): jmp 0xffffff91(%rip)

"match_suffix" :
d180(3): mov (%rdi),%rsi
d183(3): movzx (%rsi),%edx
d186(2): test %dl,%dl
d188(6): jz 0xb8(%rip)
d18e(2): xor %ecx,%ecx
d190(2): xor %eax,%eax
d192(3): xor %r8d,%r8d
d195(6): mov $0x1,%r11d
d19b(a): mov $0x288230371923853311,%r10
d1a5(2): jmp 0x3a(%rip)
d1a7(9): nop 0x0(%rax,%rax,1)
d1b0(3): movsx %dl,%ecx
d1b3(3): sub $0x41,%ecx
d1b6(3): cmp $0x39,%ecx
d1b9(2): jnbe 0xf(%rip)
d1bb(3): mov %r11,%r9
d1be(3): shl/sal %cl,%r9
d1c1(2): xor %ecx,%ecx
d1c3(3): test %r10,%r9
d1c6(2): jnz 0xb(%rip)
d1c8(2): xor %ecx,%ecx
d1ca(3): cmp $0x7e,%dl
d1cd(4): cmovne %r8,%rax
d1d1(4): add $0x1,%rsi
d1d5(3): mov %rsi,(%rdi)
d1d8(3): movzx (%rsi),%edx
d1db(2): test %dl,%dl
d1dd(2): jz 0x34(%rip)
d1df(2): test %cl,%cl
d1e1(2): jnz 0xffffffcf(%rip)
d1e3(3): cmp $0x2e,%dl
d1e6(2): jz 0x32(%rip)
d1e8(3): cmp $0x5a,%dl
d1eb(2): jnle 0x45(%rip)
d1ed(3): cmp $0x41,%dl
d1f0(2): jnl 0xffffffe1(%rip)
d1f2(4): lea 0xffffffd0(%rdx),%r9d
d1f6(4): cmp $0x9,%r9b
d1fa(2): jbe 0xffffffd7(%rip)
d1fc(3): cmp $0x7e,%dl
d1ff(4): cmovne %r8,%rax
d203(4): add $0x1,%rsi
d207(3): mov %rsi,(%rdi)
d20a(3): movzx (%rsi),%edx
d20d(2): test %dl,%dl
d20f(2): jnz 0xffffffd0(%rip)
d211(2): REP ret near (%rsp)
d213(5): nop 0x0(%rax,%rax,1)
d218(3): test %rax,%rax
d21b(5): mov $0x1,%ecx
d220(4): cmove %rsi,%rax
d224(2): jmp 0xffffffad(%rip)
d226(a): nop 0x0(%rax,%rax,1)
d230(4): lea 0xffffff9f(%rdx),%r9d
d234(4): cmp $0x19,%r9b
d238(2): jnbe 0xffffffc4(%rip)
d23a(2): jmp 0xffffff97(%rip)
d23c(4): nop 0x0(%rax)
d240(2): xor %eax,%eax
d242(1): ret near (%rsp)

"filevercmp" :
d250(2): push %r15
d252(2): push %r14
d254(2): push %r13
d256(2): push %r12
d258(1): push %rbp
d259(1): push %rbx
d25a(3): mov %rsi,%rbp
d25d(3): mov %rdi,%rbx
d260(4): sub $0x38,%rsp
d264(9): mov $0x28,%rax
d26d(5): mov %rax,0x28(%rsp)
d272(2): xor %eax,%eax
d274(5): call 0xffff631c(%rip)
d279(2): test %eax,%eax
d27b(3): mov %eax,%r12d
d27e(6): jz 0x24a(%rip)
d284(3): movzx (%rbx),%eax
d287(2): test %al,%al
d289(6): jz 0x37f(%rip)
d28f(5): movzx 0x0(%rbp),%r8d
d294(3): test %r8b,%r8b
d297(6): jz 0x259(%rip)
d29d(7): lea 0xccf8(%rip),%r9
d2a4(5): mov $0x2,%ecx
d2a9(3): mov %rbx,%rdi
d2ac(3): mov %r9,%rsi
d2af(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d2b1(3): setnbe %dl
d2b4(3): sbb $0x0,%dl
d2b7(2): test %dl,%dl
d2b9(6): jz 0x34f(%rip)
d2bf(5): mov $0x2,%ecx
d2c4(3): mov %r9,%rsi
d2c7(3): mov %rbp,%rdi
d2ca(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d2cc(3): setnbe %dl
d2cf(3): sbb $0x0,%dl
d2d2(2): test %dl,%dl
d2d4(6): jz 0x21c(%rip)
d2da(7): lea 0xccba(%rip),%r9
d2e1(5): mov $0x3,%ecx
d2e6(3): mov %rbx,%rdi
d2e9(3): mov %r9,%rsi
d2ec(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d2ee(3): setnbe %dl
d2f1(3): sbb $0x0,%dl
d2f4(2): test %dl,%dl
d2f6(6): jz 0x312(%rip)
d2fc(5): mov $0x3,%ecx
d301(3): mov %r9,%rsi
d304(3): mov %rbp,%rdi
d307(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d309(3): setnbe %dl
d30c(3): sbb $0x0,%dl
d30f(2): test %dl,%dl
d311(6): jz 0x1df(%rip)
d317(2): cmp $0x2e,%al
d319(6): jz 0x2d7(%rip)
d31f(4): cmp $0x2e,%r8b
d323(6): jz 0x1cd(%rip)
d329(5): lea 0x18(%rsp),%rdi
d32e(5): mov %rbx,0x18(%rsp)
d333(5): mov %rbp,0x20(%rsp)
d338(5): call 0xfffffe48(%rip)
d33d(5): lea 0x20(%rsp),%rdi
d342(3): mov %rax,%r13
d345(5): call 0xfffffe3b(%rip)
d34a(3): test %r13,%r13
d34d(6): jz 0x213(%rip)
d353(3): sub %rbx,%r13
d356(3): test %rax,%rax
d359(6): jz 0x31a(%rip)
d35f(3): sub %rbp,%rax
d362(3): mov %rax,%r14
d365(3): cmp %r14,%r13
d368(6): jz 0x2d8(%rip)
d36e(2): xor %esi,%esi
d370(2): xor %edx,%edx
d372(6): mov $0x1,%r10d
d378(a): mov $0x288230371923853311,%r15
d382(3): cmp %rdx,%r13
d385(2): jnbe 0xb(%rip)
d387(3): cmp %rsi,%r14
d38a(6): jbe 0x13e(%rip)
d390(3): mov %rsi,%r11
d393(4): mov %rbp,(%rsp)
d397(3): sub %rdx,%r11
d39a(5): lea 0x0(%r13,%r11,1),%rax
d39f(5): lea 0x0(%rbp,%r11,1),%r9
d3a4(5): mov %rax,0x8(%rsp)
d3a9(7): nop 0x0(%rax)
d3b0(3): cmp %rdx,%r13
d3b3(2): jbe 0xd(%rip)
d3b5(4): movzx 0x0(%rbx,%rdx,1),%eax
d3b9(3): sub $0x30,%eax
d3bc(2): cmp $0x9,%al
d3be(2): jnbe 0x1c(%rip)
d3c0(3): cmp %rsi,%r14
d3c3(5): movsx 0x0(%r9,%rdx,1),%eax
d3c8(6): jbe 0x1c8(%rip)
d3ce(3): lea 0xffffffd0(%rax),%ecx
d3d1(3): cmp $0x9,%cl
d3d4(6): jbe 0x1bc(%rip)
d3da(3): cmp %rdx,%r13
d3dd(6): jz 0x236(%rip)
d3e3(4): movzx 0x0(%rbx,%rdx,1),%eax
d3e7(3): lea 0xffffffd0(%rax),%ecx
d3ea(3): cmp $0x9,%cl
d3ed(6): jbe 0x193(%rip)
d3f3(4): movzx %al,%r8d
d3f7(4): lea 0xffffffbf(%r8),%ecx
d3fb(3): cmp $0x39,%ecx
d3fe(2): jnbe 0xd(%rip)
d400(3): mov %r10,%rdi
d403(3): shl/sal %cl,%rdi
d406(3): test %r15,%rdi
d409(2): jnz 0x11(%rip)
d40b(7): add $0x100,%r8d
d412(2): cmp $0x7e,%al
d414(6): jz 0xec(%rip)
d41a(3): cmp %rsi,%r14
d41d(2): jz 0x13(%rip)
d41f(5): movzx 0x0(%r9,%rdx,1),%eax
d424(3): lea 0xffffffd0(%rax),%ecx
d427(3): cmp $0x9,%cl
d42a(6): jnbe 0xfe(%rip)
d430(2): xor %edi,%edi
d432(3): cmp %r8d,%edi
d435(6): jnz 0x193(%rip)
d43b(4): add $0x1,%rdx
d43f(4): add $0x1,%rsi
d443(5): jmp 0xffffff6d(%rip)
d448(8): nop 0x0(%rax,%rax,1)
d450(4): add $0x1,%rsi
d454(5): movsx 0x0(%rbp,%rsi,1),%eax
d459(2): cmp $0x30,%al
d45b(2): jz 0xfffffff5(%rip)
d45d(3): sub %rdx,%rsi
d460(3): xor %r8d,%r8d
d463(3): mov %rsi,%r9
d466(5): lea 0x0(%rbp,%rsi,1),%r11
d46b(2): jmp 0x2b(%rip)
d46d(3): nop (%rax)
d470(3): lea 0xffffffd0(%rax),%esi
d473(4): cmp $0x9,%sil
d477(6): jnbe 0x169(%rip)
d47d(3): test %r8d,%r8d
d480(2): jnz 0x9(%rip)
d482(4): movsx %cl,%r8d
d486(3): sub %eax,%r8d
d489(4): add $0x1,%rdx
d48d(4): movzx 0x0(%rbx,%rdx,1),%ecx
d491(5): movsx 0x0(%r11,%rdx,1),%eax
d496(3): lea 0xffffffd0(%rcx),%edi
d499(4): lea 0x0(%rdx,%r9,1),%rsi
d49d(4): cmp $0x9,%dil
d4a1(2): jbe 0xffffffcf(%rip)
d4a3(3): sub $0x30,%eax
d4a6(2): cmp $0x9,%al
d4a8(6): jbe 0x1bb(%rip)
d4ae(3): test %r8d,%r8d
d4b1(6): jz 0xfffffed1(%rip)
d4b7(9): nop 0x0(%rax,%rax,1)
d4c0(3): mov %r8d,%r12d
d4c3(5): nop 0x0(%rax,%rax,1)
d4c8(5): mov 0x28(%rsp),%rbx
d4cd(9): xor $0x28,%rbx
d4d6(3): mov %r12d,%eax
d4d9(6): jnz 0x195(%rip)
d4df(4): add $0x38,%rsp
d4e3(1): pop %rbx
d4e4(1): pop %rbp
d4e5(2): pop %r12
d4e7(2): pop %r13
d4e9(2): pop %r14
d4eb(2): pop %r15
d4ed(1): ret near (%rsp)
d4ee(2): nop 
d4f0(6): mov $0x1,%r12d
d4f6(2): jmp 0xffffffd2(%rip)
d4f8(8): nop 0x0(%rax,%rax,1)
d500(4): lea 0x0(%r11,%rdx,1),%rax
d504(3): cmp %rax,%r14
d507(6): jz 0xb9(%rip)
d50d(5): movzx 0x0(%r9,%rdx,1),%eax
d512(3): lea 0xffffffd0(%rax),%ecx
d515(3): cmp $0x9,%cl
d518(6): jbe 0xa8(%rip)
d51e(6): mov $0xffffffff,%r8d
d524(4): nop 0x0(%rax)
d528(3): movzx %al,%edi
d52b(3): lea 0xffffffbf(%rdi),%ecx
d52e(3): cmp $0x39,%ecx
d531(2): jnbe 0x11(%rip)
d533(3): mov %r10,%rbp
d536(3): shl/sal %cl,%rbp
d539(3): test %r15,%rbp
d53c(6): jnz 0xfffffef6(%rip)
d542(6): add $0x100,%edi
d548(2): cmp $0x7e,%al
d54a(5): mov $0xffffffff,%eax
d54f(3): cmove %eax,%edi
d552(5): jmp 0xfffffee0(%rip)
d557(9): nop 0x0(%rax,%rax,1)
d560(5): mov 0x18(%rsp),%r13
d565(3): sub %rbx,%r13
d568(3): test %rax,%rax
d56b(6): jnz 0xfffffdf4(%rip)
d571(5): mov 0x20(%rsp),%r14
d576(3): sub %rbp,%r14
d579(5): jmp 0xfffffdf5(%rip)
d57e(2): nop 
d580(3): xor %r8d,%r8d
d583(5): jmp 0xfffffe97(%rip)
d588(8): nop 0x0(%rax,%rax,1)
d590(4): movzx 0x0(%rbx,%rdx,1),%ecx
d594(4): mov (%rsp),%rbp
d598(3): cmp $0x30,%cl
d59b(6): jnz 0xfffffebe(%rip)
d5a1(7): nop 0x0(%rax)
d5a8(4): add $0x1,%rdx
d5ac(4): movzx 0x0(%rbx,%rdx,1),%ecx
d5b0(3): cmp $0x30,%cl
d5b3(2): jz 0xfffffff5(%rip)
d5b5(5): jmp 0xfffffea4(%rip)
d5ba(6): nop 0x0(%rax,%rax,1)
d5c0(2): xor %edi,%edi
d5c2(6): mov $0xffffffff,%r8d
d5c8(3): sub %edi,%r8d
d5cb(6): jnz 0xfffffef5(%rip)
d5d1(5): jmp 0xfffffef7(%rip)
d5d6(a): nop 0x0(%rax,%rax,1)
d5e0(6): mov $0x1,%r8d
d5e6(5): jmp 0xfffffeda(%rip)
d5eb(5): nop 0x0(%rax,%rax,1)
d5f0(4): add $0x1,%rbx
d5f4(4): add $0x1,%rbp
d5f8(4): cmp $0x2e,%r8b
d5fc(6): jz 0xfffffd2d(%rip)
d602(6): nop 0x0(%rax,%rax,1)
d608(6): mov $0xffffffff,%r12d
d60e(5): jmp 0xfffffeba(%rip)
d613(5): cmp 0x8(%rsp),%r14
d618(6): jz 0xfffffe23(%rip)
d61e(5): movzx 0x0(%r9,%r13,1),%eax
d623(3): lea 0xffffffd0(%rax),%ecx
d626(3): cmp $0x9,%cl
d629(6): jbe 0xfffffe12(%rip)
d62f(3): xor %r8d,%r8d
d632(5): jmp 0xfffffef6(%rip)
d637(9): nop 0x0(%rax,%rax,1)
d640(3): mov %r13,%rdx
d643(3): mov %rbp,%rsi
d646(3): mov %rbx,%rdi
d649(5): call 0xffff5c67(%rip)
d64e(2): test %eax,%eax
d650(6): jnz 0xfffffd1e(%rip)
d656(5): mov 0x18(%rsp),%r13
d65b(3): sub %rbx,%r13
d65e(5): jmp 0xffffff13(%rip)
d663(6): mov $0xffffffff,%r8d
d669(5): jmp 0xfffffe57(%rip)
d66e(5): call 0xffff5db2(%rip)
d673(5): mov 0x20(%rsp),%r14
d678(3): sub %rbp,%r14
d67b(5): jmp 0xfffffcea(%rip)

"gettime" :
d680(3): mov %rdi,%rsi
d683(2): xor %edi,%edi
d685(5): jmp 0xffff5ceb(%rip)

"current_timespec" :
d690(4): sub $0x28,%rsp
d694(2): xor %edi,%edi
d696(3): mov %rsp,%rsi
d699(9): mov $0x28,%rax
d6a2(5): mov %rax,0x18(%rsp)
d6a7(2): xor %eax,%eax
d6a9(5): call 0xffff5cc7(%rip)
d6ae(5): mov 0x18(%rsp),%rcx
d6b3(9): xor $0x28,%rcx
d6bc(4): mov (%rsp),%rax
d6c0(5): mov 0x8(%rsp),%rdx
d6c5(2): jnz 0x7(%rip)
d6c7(4): add $0x28,%rsp
d6cb(1): ret near (%rsp)
d6cc(5): call 0xffff5d54(%rip)

"hard_locale" :
d6e0(4): sub $0x8,%rsp
d6e4(2): xor %esi,%esi
d6e6(5): call 0xffff601a(%rip)
d6eb(3): mov %rax,%rdx
d6ee(5): mov $0x1,%eax
d6f3(3): test %rdx,%rdx
d6f6(2): jz 0x1f(%rip)
d6f8(7): lea 0xc89f(%rip),%rdi
d6ff(5): mov $0x2,%ecx
d704(3): mov %rdx,%rsi
d707(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d709(3): setnbe %cl
d70c(3): sbb $0x0,%cl
d70f(2): xor %eax,%eax
d711(2): test %cl,%cl
d713(2): jnz 0xd(%rip)
d715(4): add $0x8,%rsp
d719(1): ret near (%rsp)
d71a(6): nop 0x0(%rax,%rax,1)
d720(7): lea 0xc879(%rip),%rdi
d727(5): mov $0x6,%ecx
d72c(3): mov %rdx,%rsi
d72f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d731(3): setnbe %al
d734(2): sbb $0x0,%al
d736(2): test %al,%al
d738(3): setnz %al
d73b(4): add $0x8,%rsp
d73f(1): ret near (%rsp)

"next_prime" :
d740(4): cmp $0xa,%rdi
d744(5): mov $0xa,%eax
d749(a): mov $0x-6148914691236517205,%r9
d753(4): cmovnae %rax,%rdi
d757(4): or $0x1,%rdi
d75b(4): cmp $0xffffffff,%rdi
d75f(2): jz 0x70(%rip)
d761(7): nop 0x0(%rax)
d768(3): mov %rdi,%rax
d76b(3): mov %rdi,%rcx
d76e(3): mul %rax,%r9,%rdx
d771(3): mov %rdx,%rax
d774(3): shr $0x1,%rax
d777(4): lea 0x0(%rax,%rax,2),%rax
d77b(3): sub %rax,%rcx
d77e(4): cmp $0x9,%rdi
d782(3): mov %rcx,%rax
d785(2): jbe 0x3b(%rip)
d787(3): test %rcx,%rcx
d78a(2): jz 0x3b(%rip)
d78c(6): mov $0x10,%r8d
d792(5): mov $0x9,%esi
d797(5): mov $0x3,%ecx
d79c(2): jmp 0xd(%rip)
d79e(2): nop 
d7a0(4): add $0x8,%r8
d7a4(3): test %rdx,%rdx
d7a7(2): jz 0x1e(%rip)
d7a9(4): add $0x2,%rcx
d7ad(2): xor %edx,%edx
d7af(3): mov %rdi,%rax
d7b2(3): div %rcx,%rax
d7b5(3): add %r8,%rsi
d7b8(3): cmp %rdi,%rsi
d7bb(3): mov %rdx,%rax
d7be(2): jb 0xffffffe2(%rip)
d7c0(3): test %rax,%rax
d7c3(2): jnz 0xc(%rip)
d7c5(4): add $0x2,%rdi
d7c9(4): cmp $0xffffffff,%rdi
d7cd(2): jnz 0xffffff9b(%rip)
d7cf(3): mov %rdi,%rax
d7d2(1): ret near (%rsp)

"raw_hasher" :
d7e0(3): mov %rdi,%rax
d7e3(2): xor %edx,%edx
d7e5(4): ror $0x3,%rax
d7e9(3): div %rsi,%rax
d7ec(3): mov %rdx,%rax
d7ef(1): ret near (%rsp)

"raw_comparator" :
d7f0(3): cmp %rsi,%rdi
d7f3(3): setz %al
d7f6(1): ret near (%rsp)

"safe_hasher" :
d800(1): push %rbx
d801(3): mov %rdi,%rbx
d804(3): mov %rsi,%rdi
d807(4): mov 0x10(%rbx),%rsi
d80b(3): call 0x30(%rbx)
d80e(4): cmp %rax,0x10(%rbx)
d812(2): jbe 0xb(%rip)
d814(4): shl/sal $0x4,%rax
d818(3): add (%rbx),%rax
d81b(1): pop %rbx
d81c(1): ret near (%rsp)
d81d(5): call 0xffff5a73(%rip)

"hash_find_entry" :
d830(2): push %r14
d832(2): push %r13
d834(3): mov %rdx,%r14
d837(2): push %r12
d839(1): push %rbp
d83a(3): mov %rdi,%r12
d83d(1): push %rbx
d83e(3): mov %rsi,%rbp
d841(3): mov %ecx,%r13d
d844(5): call 0xffffffbc(%rip)
d849(3): mov %rax,(%r14)
d84c(3): mov (%rax),%rsi
d84f(3): test %rsi,%rsi
d852(6): jz 0xee(%rip)
d858(3): cmp %rbp,%rsi
d85b(3): mov %rax,%rbx
d85e(6): jz 0x95(%rip)
d864(3): mov %rbp,%rdi
d867(5): call 0x38(%r12)
d86c(2): test %al,%al
d86e(6): jnz 0x82(%rip)
d874(4): mov 0x8(%rbx),%rax
d878(3): test %rax,%rax
d87b(6): jz 0xc5(%rip)
d881(3): mov (%rax),%rsi
d884(3): cmp %rsi,%rbp
d887(2): jnz 0x22(%rip)
d889(2): jmp 0x33(%rip)
d88b(5): nop 0x0(%rax,%rax,1)
d890(4): mov 0x8(%rbx),%rbx
d894(4): mov 0x8(%rbx),%rax
d898(3): test %rax,%rax
d89b(6): jz 0xa5(%rip)
d8a1(3): mov (%rax),%rsi
d8a4(3): cmp %rbp,%rsi
d8a7(2): jz 0x15(%rip)
d8a9(3): mov %rbp,%rdi
d8ac(5): call 0x38(%r12)
d8b1(2): test %al,%al
d8b3(2): jz 0xffffffdd(%rip)
d8b5(4): mov 0x8(%rbx),%rax
d8b9(3): mov (%rax),%rsi
d8bc(3): test %r13b,%r13b
d8bf(2): jz 0x1f(%rip)
d8c1(4): mov 0x8(%rax),%rdx
d8c5(4): mov %rdx,0x8(%rbx)
d8c9(7): mov $0x0,(%rax)
d8d0(5): mov 0x48(%r12),%rdx
d8d5(4): mov %rdx,0x8(%rax)
d8d9(5): mov %rax,0x48(%r12)
d8de(1): pop %rbx
d8df(3): mov %rsi,%rax
d8e2(1): pop %rbp
d8e3(2): pop %r12
d8e5(2): pop %r13
d8e7(2): pop %r14
d8e9(1): ret near (%rsp)
d8ea(6): nop 0x0(%rax,%rax,1)
d8f0(3): mov (%rbx),%rsi
d8f3(3): test %r13b,%r13b
d8f6(2): jz 0xffffffe8(%rip)
d8f8(4): mov 0x8(%rbx),%rax
d8fc(3): test %rax,%rax
d8ff(2): jz 0x31(%rip)
d901(4): movdqu (%rax),%xmm0
d905(3): movups %xmm0,(%rbx)
d908(7): mov $0x0,(%rax)
d90f(5): mov 0x48(%r12),%rdx
d914(4): mov %rdx,0x8(%rax)
d918(5): mov %rax,0x48(%r12)
d91d(3): mov %rsi,%rax
d920(1): pop %rbx
d921(1): pop %rbp
d922(2): pop %r12
d924(2): pop %r13
d926(2): pop %r14
d928(1): ret near (%rsp)
d929(7): nop 0x0(%rax)
d930(7): mov $0x0,(%rbx)
d937(2): jmp 0xffffffa7(%rip)
d939(7): nop 0x0(%rax)
d940(2): xor %esi,%esi
d942(1): pop %rbx
d943(3): mov %rsi,%rax
d946(1): pop %rbp
d947(2): pop %r12
d949(2): pop %r13
d94b(2): pop %r14
d94d(1): ret near (%rsp)

"check_tuning.isra.0" :
d950(3): mov (%rdi),%rdx
d953(7): lea 0xc6c6(%rip),%rcx
d95a(5): mov $0x1,%eax
d95f(3): cmp %rcx,%rdx
d962(2): jz 0x63(%rip)
d964(5): movss 0x8(%rdx),%xmm0
d969(7): ucomiss 0xc6c4(%rip),%xmm0
d970(2): jbe 0x50(%rip)
d972(8): movss 0xc6be(%rip),%xmm1
d97a(3): ucomiss %xmm0,%xmm1
d97d(2): jbe 0x43(%rip)
d97f(5): movss 0xc(%rdx),%xmm1
d984(7): ucomiss 0xc6b1(%rip),%xmm1
d98b(2): jbe 0x35(%rip)
d98d(4): movss (%rdx),%xmm1
d991(7): ucomiss 0xc6a8(%rip),%xmm1
d998(2): jb 0x28(%rip)
d99a(8): addss 0xc692(%rip),%xmm1
d9a2(5): movss 0x4(%rdx),%xmm2
d9a7(3): ucomiss %xmm1,%xmm2
d9aa(2): jbe 0x16(%rip)
d9ac(8): movss 0xc690(%rip),%xmm3
d9b4(3): ucomiss %xmm2,%xmm3
d9b7(2): jb 0x9(%rip)
d9b9(3): ucomiss %xmm1,%xmm0
d9bc(2): jnbe 0x9(%rip)
d9be(2): nop 
d9c0(3): mov %rcx,(%rdi)
d9c3(2): xor %eax,%eax
d9c5(2): REP ret near (%rsp)

"transfer_entries" :
d9d0(2): push %r15
d9d2(2): push %r14
d9d4(2): push %r13
d9d6(2): push %r12
d9d8(1): push %rbp
d9d9(1): push %rbx
d9da(4): sub $0x8,%rsp
d9de(3): mov (%rsi),%r12
d9e1(4): cmp 0x8(%rsi),%r12
d9e5(6): jnb 0xe3(%rip)
d9eb(3): mov %rdi,%rbp
d9ee(3): mov %rsi,%r13
d9f1(3): mov %edx,%r14d
d9f4(4): nop 0x0(%rax)
d9f8(4): mov (%r12),%r15
d9fc(3): test %r15,%r15
d9ff(6): jz 0xbb(%rip)
da05(5): mov 0x8(%r12),%rbx
da0a(3): test %rbx,%rbx
da0d(2): jnz 0x1f(%rip)
da0f(2): jmp 0x5c(%rip)
da11(7): nop 0x0(%rax)
da18(4): mov 0x8(%rax),%rcx
da1c(3): test %rdx,%rdx
da1f(4): mov %rcx,0x8(%rbx)
da23(4): mov %rbx,0x8(%rax)
da27(3): mov %rdx,%rbx
da2a(2): jz 0x3d(%rip)
da2c(3): mov (%rbx),%r15
da2f(3): mov %rbp,%rdi
da32(3): mov %r15,%rsi
da35(5): call 0xfffffdcb(%rip)
da3a(4): cmp $0x0,(%rax)
da3e(4): mov 0x8(%rbx),%rdx
da42(2): jnz 0xffffffd6(%rip)
da44(3): mov %r15,(%rax)
da47(5): add $0x1,0x18(%rbp)
da4c(3): test %rdx,%rdx
da4f(7): mov $0x0,(%rbx)
da56(4): mov 0x48(%rbp),%rax
da5a(4): mov %rax,0x8(%rbx)
da5e(4): mov %rbx,0x48(%rbp)
da62(3): mov %rdx,%rbx
da65(2): jnz 0xffffffc7(%rip)
da67(4): mov (%r12),%r15
da6b(3): test %r14b,%r14b
da6e(9): mov $0x0,0x8(%r12)
da77(2): jnz 0x43(%rip)
da79(3): mov %r15,%rsi
da7c(3): mov %rbp,%rdi
da7f(5): call 0xfffffd81(%rip)
da84(4): cmp $0x0,(%rax)
da88(3): mov %rax,%rbx
da8b(2): jz 0x55(%rip)
da8d(4): mov 0x48(%rbp),%rax
da91(3): test %rax,%rax
da94(2): jz 0x5c(%rip)
da96(4): mov 0x8(%rax),%rdx
da9a(4): mov %rdx,0x48(%rbp)
da9e(4): mov 0x8(%rbx),%rdx
daa2(3): mov %r15,(%rax)
daa5(4): mov %rdx,0x8(%rax)
daa9(4): mov %rax,0x8(%rbx)
daad(8): mov $0x0,(%r12)
dab5(5): sub $0x1,0x18(%r13)
daba(4): add $0x10,%r12
dabe(4): cmp %r12,0x8(%r13)
dac2(6): jnbe 0xffffff36(%rip)
dac8(4): add $0x8,%rsp
dacc(5): mov $0x1,%eax
dad1(1): pop %rbx
dad2(1): pop %rbp
dad3(2): pop %r12
dad5(2): pop %r13
dad7(2): pop %r14
dad9(2): pop %r15
dadb(1): ret near (%rsp)
dadc(4): nop 0x0(%rax)
dae0(3): mov %r15,(%rax)
dae3(5): add $0x1,0x18(%rbp)
dae8(2): jmp 0xffffffc5(%rip)
daea(6): nop 0x0(%rax,%rax,1)
daf0(5): mov $0x10,%edi
daf5(5): call 0xffff5d93(%rip)
dafa(3): test %rax,%rax
dafd(2): jnz 0xffffffa1(%rip)
daff(4): add $0x8,%rsp
db03(2): xor %eax,%eax
db05(1): pop %rbx
db06(1): pop %rbp
db07(2): pop %r12
db09(2): pop %r13
db0b(2): pop %r14
db0d(2): pop %r15
db0f(1): ret near (%rsp)

"hash_get_n_buckets" :
db10(4): mov 0x10(%rdi),%rax
db14(1): ret near (%rsp)

"hash_get_n_buckets_used" :
db20(4): mov 0x18(%rdi),%rax
db24(1): ret near (%rsp)

"hash_get_n_entries" :
db30(4): mov 0x20(%rdi),%rax
db34(1): ret near (%rsp)

"hash_get_max_bucket_length" :
db40(3): mov (%rdi),%rsi
db43(4): mov 0x8(%rdi),%rdi
db47(2): xor %eax,%eax
db49(3): cmp %rdi,%rsi
db4c(2): jnb 0x3b(%rip)
db4e(2): nop 
db50(4): cmp $0x0,(%rsi)
db54(2): jz 0x28(%rip)
db56(4): mov 0x8(%rsi),%rdx
db5a(5): mov $0x1,%ecx
db5f(3): test %rdx,%rdx
db62(2): jz 0x13(%rip)
db64(4): nop 0x0(%rax)
db68(4): mov 0x8(%rdx),%rdx
db6c(4): add $0x1,%rcx
db70(3): test %rdx,%rdx
db73(2): jnz 0xfffffff5(%rip)
db75(3): cmp %rcx,%rax
db78(4): cmovnae %rcx,%rax
db7c(4): add $0x10,%rsi
db80(3): cmp %rdi,%rsi
db83(2): jb 0xffffffcd(%rip)
db85(2): REP ret near (%rsp)
db87(2): REP ret near (%rsp)

"hash_table_ok" :
db90(3): mov (%rdi),%rcx
db93(4): mov 0x8(%rdi),%r8
db97(2): xor %edx,%edx
db99(2): xor %esi,%esi
db9b(3): cmp %r8,%rcx
db9e(2): jnb 0x38(%rip)
dba0(4): cmp $0x0,(%rcx)
dba4(2): jz 0x29(%rip)
dba6(4): mov 0x8(%rcx),%rax
dbaa(4): add $0x1,%rsi
dbae(4): add $0x1,%rdx
dbb2(3): test %rax,%rax
dbb5(2): jz 0x18(%rip)
dbb7(9): nop 0x0(%rax,%rax,1)
dbc0(4): mov 0x8(%rax),%rax
dbc4(4): add $0x1,%rdx
dbc8(3): test %rax,%rax
dbcb(2): jnz 0xfffffff5(%rip)
dbcd(4): add $0x10,%rcx
dbd1(3): cmp %r8,%rcx
dbd4(2): jb 0xffffffcc(%rip)
dbd6(2): xor %eax,%eax
dbd8(4): cmp %rsi,0x18(%rdi)
dbdc(2): jz 0x4(%rip)
dbde(2): REP ret near (%rsp)
dbe0(4): cmp %rdx,0x20(%rdi)
dbe4(3): setz %al
dbe7(1): ret near (%rsp)

"hash_print_statistics" :
dbf0(2): push %r13
dbf2(2): push %r12
dbf4(3): mov %rsi,%r12
dbf7(1): push %rbp
dbf8(1): push %rbx
dbf9(2): xor %ebx,%ebx
dbfb(4): sub $0x8,%rsp
dbff(3): mov (%rdi),%rsi
dc02(4): mov 0x20(%rdi),%rcx
dc06(4): mov 0x10(%rdi),%rbp
dc0a(4): mov 0x18(%rdi),%r13
dc0e(4): mov 0x8(%rdi),%rdi
dc12(3): cmp %rdi,%rsi
dc15(2): jnb 0x40(%rip)
dc17(9): nop 0x0(%rax,%rax,1)
dc20(4): cmp $0x0,(%rsi)
dc24(2): jz 0x28(%rip)
dc26(4): mov 0x8(%rsi),%rax
dc2a(5): mov $0x1,%edx
dc2f(3): test %rax,%rax
dc32(2): jz 0x13(%rip)
dc34(4): nop 0x0(%rax)
dc38(4): mov 0x8(%rax),%rax
dc3c(4): add $0x1,%rdx
dc40(3): test %rax,%rax
dc43(2): jnz 0xfffffff5(%rip)
dc45(3): cmp %rdx,%rbx
dc48(4): cmovnae %rdx,%rbx
dc4c(4): add $0x10,%rsi
dc50(3): cmp %rdi,%rsi
dc53(2): jb 0xffffffcd(%rip)
dc55(7): lea 0xc34a(%rip),%rdx
dc5c(5): mov $0x1,%esi
dc61(3): mov %r12,%rdi
dc64(2): xor %eax,%eax
dc66(5): call 0xffff5b9a(%rip)
dc6b(7): lea 0xc34c(%rip),%rdx
dc72(2): xor %eax,%eax
dc74(3): mov %rbp,%rcx
dc77(5): mov $0x1,%esi
dc7c(3): mov %r12,%rdi
dc7f(5): call 0xffff5b81(%rip)
dc84(3): test %r13,%r13
dc87(2): js 0x69(%rip)
dc89(4): pxor %xmm0,%xmm0
dc8d(3): test %rbp,%rbp
dc90(5): cvtsi2sd %r13,%xmm0
dc95(8): mulsd 0xc3bb(%rip),%xmm0
dc9d(2): js 0x7c(%rip)
dc9f(4): pxor %xmm1,%xmm1
dca3(5): cvtsi2sd %rbp,%xmm1
dca8(4): divsd %xmm1,%xmm0
dcac(7): lea 0xc33d(%rip),%rdx
dcb3(3): mov %r13,%rcx
dcb6(3): mov %r12,%rdi
dcb9(5): mov $0x1,%esi
dcbe(5): mov $0x1,%eax
dcc3(5): call 0xffff5b3d(%rip)
dcc8(4): add $0x8,%rsp
dccc(3): mov %rbx,%rcx
dccf(3): mov %r12,%rdi
dcd2(1): pop %rbx
dcd3(1): pop %rbp
dcd4(2): pop %r12
dcd6(2): pop %r13
dcd8(7): lea 0xc2f7(%rip),%rdx
dcdf(5): mov $0x1,%esi
dce4(2): xor %eax,%eax
dce6(5): jmp 0xffff5b1a(%rip)
dceb(5): nop 0x0(%rax,%rax,1)
dcf0(3): mov %r13,%rax
dcf3(3): mov %r13,%rdx
dcf6(4): pxor %xmm0,%xmm0
dcfa(3): shr $0x1,%rax
dcfd(3): and $0x1,%edx
dd00(3): or %rdx,%rax
dd03(3): test %rbp,%rbp
dd06(5): cvtsi2sd %rax,%xmm0
dd0b(4): addsd %xmm0,%xmm0
dd0f(8): mulsd 0xc341(%rip),%xmm0
dd17(2): jns 0xffffff88(%rip)
dd19(3): mov %rbp,%rax
dd1c(4): pxor %xmm1,%xmm1
dd20(3): shr $0x1,%rax
dd23(3): and $0x1,%ebp
dd26(3): or %rbp,%rax
dd29(5): cvtsi2sd %rax,%xmm1
dd2e(4): addsd %xmm1,%xmm1
dd32(5): jmp 0xffffff76(%rip)

"hash_lookup" :
dd40(2): push %r12
dd42(1): push %rbp
dd43(3): mov %rdi,%r12
dd46(1): push %rbx
dd47(3): mov %rsi,%rbp
dd4a(5): call 0xfffffab6(%rip)
dd4f(3): mov (%rax),%rsi
dd52(3): test %rsi,%rsi
dd55(2): jz 0x28(%rip)
dd57(3): mov %rax,%rbx
dd5a(2): jmp 0x9(%rip)
dd5c(4): nop 0x0(%rax)
dd60(3): mov (%rbx),%rsi
dd63(3): cmp %rbp,%rsi
dd66(2): jz 0x19(%rip)
dd68(3): mov %rbp,%rdi
dd6b(5): call 0x38(%r12)
dd70(2): test %al,%al
dd72(2): jnz 0x1e(%rip)
dd74(4): mov 0x8(%rbx),%rbx
dd78(3): test %rbx,%rbx
dd7b(2): jnz 0xffffffe5(%rip)
dd7d(2): xor %esi,%esi
dd7f(1): pop %rbx
dd80(3): mov %rsi,%rax
dd83(1): pop %rbp
dd84(2): pop %r12
dd86(1): ret near (%rsp)
dd87(9): nop 0x0(%rax,%rax,1)
dd90(3): mov (%rbx),%rsi
dd93(1): pop %rbx
dd94(1): pop %rbp
dd95(3): mov %rsi,%rax
dd98(2): pop %r12
dd9a(1): ret near (%rsp)

"hash_get_first" :
dda0(5): cmp $0x0,0x20(%rdi)
dda5(2): jz 0x2e(%rip)
dda7(3): mov (%rdi),%rdx
ddaa(4): mov 0x8(%rdi),%rcx
ddae(3): cmp %rcx,%rdx
ddb1(2): jnb 0x27(%rip)
ddb3(3): mov (%rdx),%rax
ddb6(3): test %rax,%rax
ddb9(2): jnz 0x1d(%rip)
ddbb(5): nop 0x0(%rax,%rax,1)
ddc0(4): add $0x10,%rdx
ddc4(3): cmp %rcx,%rdx
ddc7(2): jnb 0x11(%rip)
ddc9(3): mov (%rdx),%rax
ddcc(3): test %rax,%rax
ddcf(2): jz 0xfffffff1(%rip)
ddd1(2): REP ret near (%rsp)
ddd3(2): xor %eax,%eax
ddd5(1): ret near (%rsp)
ddd6(2): REP ret near (%rsp)
ddd8(4): sub $0x8,%rsp
dddc(5): call 0xffff54b4(%rip)

"hash_get_next" :
ddf0(1): push %rbp
ddf1(1): push %rbx
ddf2(3): mov %rdi,%rbp
ddf5(3): mov %rsi,%rbx
ddf8(4): sub $0x8,%rsp
ddfc(5): call 0xfffffa04(%rip)
de01(3): mov %rax,%rdx
de04(3): mov %rax,%rcx
de07(3): mov (%rdx),%rax
de0a(4): mov 0x8(%rdx),%rdx
de0e(3): cmp %rbx,%rax
de11(2): jz 0x18(%rip)
de13(5): nop 0x0(%rax,%rax,1)
de18(3): test %rdx,%rdx
de1b(2): jz 0x13(%rip)
de1d(3): mov (%rdx),%rax
de20(4): mov 0x8(%rdx),%rdx
de24(3): cmp %rbx,%rax
de27(2): jnz 0xfffffff1(%rip)
de29(3): test %rdx,%rdx
de2c(2): jnz 0x2c(%rip)
de2e(4): mov 0x8(%rbp),%rdx
de32(2): jmp 0xe(%rip)
de34(4): nop 0x0(%rax)
de38(3): mov (%rcx),%rax
de3b(3): test %rax,%rax
de3e(2): jnz 0xd(%rip)
de40(4): add $0x10,%rcx
de44(3): cmp %rcx,%rdx
de47(2): jnbe 0xfffffff1(%rip)
de49(2): xor %eax,%eax
de4b(4): add $0x8,%rsp
de4f(1): pop %rbx
de50(1): pop %rbp
de51(1): ret near (%rsp)
de52(6): nop 0x0(%rax,%rax,1)
de58(3): mov (%rdx),%rax
de5b(4): add $0x8,%rsp
de5f(1): pop %rbx
de60(1): pop %rbp
de61(1): ret near (%rsp)

"hash_get_entries" :
de70(3): mov (%rdi),%r9
de73(4): cmp %r9,0x8(%rdi)
de77(2): jbe 0x5b(%rip)
de79(3): xor %r8d,%r8d
de7c(3): mov (%r9),%rcx
de7f(3): test %rcx,%rcx
de82(2): jz 0x3b(%rip)
de84(3): cmp %r8,%rdx
de87(2): jbe 0x40(%rip)
de89(4): mov %rcx,0x0(%rsi,%r8,8)
de8d(4): mov 0x8(%r9),%rcx
de91(4): lea 0x1(%r8),%rax
de95(3): test %rcx,%rcx
de98(2): jz 0x22(%rip)
de9a(6): nop 0x0(%rax,%rax,1)
dea0(3): cmp %rax,%rdx
dea3(2): jz 0x2d(%rip)
dea5(3): mov (%rcx),%r8
dea8(4): add $0x1,%rax
deac(5): mov %r8,0xfffffff8(%rsi,%rax,8)
deb1(4): mov 0x8(%rcx),%rcx
deb5(3): test %rcx,%rcx
deb8(2): jnz 0xffffffe8(%rip)
deba(3): mov %rax,%r8
debd(4): add $0x10,%r9
dec1(4): cmp %r9,0x8(%rdi)
dec5(2): jnbe 0xffffffb7(%rip)
dec7(3): mov %r8,%rax
deca(1): ret near (%rsp)
decb(5): nop 0x0(%rax,%rax,1)
ded0(2): REP ret near (%rsp)
ded2(2): xor %eax,%eax
ded4(1): ret near (%rsp)

"hash_do_for_each" :
dee0(2): push %r15
dee2(2): push %r14
dee4(2): push %r13
dee6(2): push %r12
dee8(1): push %rbp
dee9(1): push %rbx
deea(4): sub $0x8,%rsp
deee(3): mov (%rdi),%r14
def1(4): cmp %r14,0x8(%rdi)
def5(2): jbe 0x51(%rip)
def7(3): mov %rdx,%r13
defa(3): mov %rsi,%r12
defd(3): mov %rdi,%r15
df00(2): xor %ebp,%ebp
df02(3): mov (%r14),%rdi
df05(3): test %rdi,%rdi
df08(2): jz 0x22(%rip)
df0a(3): mov %r14,%rbx
df0d(2): jmp 0x6(%rip)
df0f(1): nop 
df10(3): mov (%rbx),%rdi
df13(3): mov %r13,%rsi
df16(3): call %r12
df19(2): test %al,%al
df1b(2): jz 0x19(%rip)
df1d(4): mov 0x8(%rbx),%rbx
df21(4): add $0x1,%rbp
df25(3): test %rbx,%rbx
df28(2): jnz 0xffffffe8(%rip)
df2a(4): add $0x10,%r14
df2e(4): cmp %r14,0x8(%r15)
df32(2): jnbe 0xffffffd0(%rip)
df34(4): add $0x8,%rsp
df38(3): mov %rbp,%rax
df3b(1): pop %rbx
df3c(1): pop %rbp
df3d(2): pop %r12
df3f(2): pop %r13
df41(2): pop %r14
df43(2): pop %r15
df45(1): ret near (%rsp)
df46(2): xor %ebp,%ebp
df48(2): jmp 0xffffffec(%rip)

"hash_string" :
df50(3): movzx (%rdi),%ecx
df53(2): xor %edx,%edx
df55(2): test %cl,%cl
df57(2): jz 0x26(%rip)
df59(7): nop 0x0(%rax)
df60(3): mov %rdx,%rax
df63(4): add $0x1,%rdi
df67(4): shl/sal $0x5,%rax
df6b(3): sub %rdx,%rax
df6e(2): xor %edx,%edx
df70(3): add %rcx,%rax
df73(3): movzx (%rdi),%ecx
df76(3): div %rsi,%rax
df79(2): test %cl,%cl
df7b(2): jnz 0xffffffe5(%rip)
df7d(3): mov %rdx,%rax
df80(1): ret near (%rsp)

"hash_reset_tuning" :
df90(a): mov $0x4575657221408423936,%rax
df9a(4): mov $0x0,0x10(%rdi)
df9e(3): mov %rax,(%rdi)
dfa1(a): mov $0x4590573145673223373,%rax
dfab(4): mov %rax,0x8(%rdi)
dfaf(1): ret near (%rsp)

"hash_initialize" :
dfb0(2): push %r15
dfb2(2): push %r14
dfb4(7): lea 0xfffff825(%rip),%rax
dfbb(2): push %r13
dfbd(2): push %r12
dfbf(3): mov %rdx,%r12
dfc2(1): push %rbp
dfc3(1): push %rbx
dfc4(3): mov %rcx,%r13
dfc7(3): mov %rdi,%rbp
dfca(5): mov $0x50,%edi
dfcf(3): mov %rsi,%r15
dfd2(4): sub $0x8,%rsp
dfd6(3): test %rdx,%rdx
dfd9(3): mov %r8,%r14
dfdc(4): cmove %rax,%r12
dfe0(7): lea 0xfffff809(%rip),%rax
dfe7(3): test %rcx,%rcx
dfea(4): cmove %rax,%r13
dfee(5): call 0xffff589a(%rip)
dff3(3): test %rax,%rax
dff6(3): mov %rax,%rbx
dff9(6): jz 0xb1(%rip)
dfff(3): test %r15,%r15
e002(4): lea 0x28(%rax),%rdi
e006(6): jz 0xba(%rip)
e00c(4): mov %r15,0x28(%rax)
e010(5): call 0xfffff940(%rip)
e015(2): test %al,%al
e017(6): jz 0x89(%rip)
e01d(5): cmp $0x0,0x10(%r15)
e022(6): jz 0xfe(%rip)
e028(3): mov %rbp,%rdi
e02b(5): call 0xfffff715(%rip)
e030(5): mov $0x8,%edx
e035(3): mov %rax,%rbp
e038(2): xor %ecx,%ecx
e03a(3): mov %rdx,%rax
e03d(3): mul %rax,%rbp,%rdx
e040(6): jo 0x11a(%rip)
e046(3): test %rax,%rax
e049(2): js 0x57(%rip)
e04b(3): test %rcx,%rcx
e04e(2): jnz 0x52(%rip)
e050(3): test %rbp,%rbp
e053(4): mov %rbp,0x10(%rbx)
e057(2): jz 0x49(%rip)
e059(5): mov $0x10,%esi
e05e(3): mov %rbp,%rdi
e061(5): call 0xffff551f(%rip)
e066(3): test %rax,%rax
e069(3): mov %rax,(%rbx)
e06c(2): jz 0x34(%rip)
e06e(4): shl/sal $0x4,%rbp
e072(8): mov $0x0,0x18(%rbx)
e07a(8): mov $0x0,0x20(%rbx)
e082(3): add %rax,%rbp
e085(4): mov %r12,0x30(%rbx)
e089(4): mov %r13,0x38(%rbx)
e08d(4): mov %rbp,0x8(%rbx)
e091(4): mov %r14,0x40(%rbx)
e095(8): mov $0x0,0x48(%rbx)
e09d(2): jmp 0xd(%rip)
e09f(1): nop 
e0a0(3): mov %rbx,%rdi
e0a3(2): xor %ebx,%ebx
e0a5(5): call 0xffff57db(%rip)
e0aa(4): add $0x8,%rsp
e0ae(3): mov %rbx,%rax
e0b1(1): pop %rbx
e0b2(1): pop %rbp
e0b3(2): pop %r12
e0b5(2): pop %r13
e0b7(2): pop %r14
e0b9(2): pop %r15
e0bb(1): ret near (%rsp)
e0bc(4): nop 0x0(%rax)
e0c0(7): lea 0xbf59(%rip),%rax
e0c7(4): mov %rax,0x28(%rbx)
e0cb(5): call 0xfffff885(%rip)
e0d0(2): test %al,%al
e0d2(8): movss 0xbf6e(%rip),%xmm1
e0da(2): jz 0xffffffc6(%rip)
e0dc(3): test %rbp,%rbp
e0df(2): js 0x4c(%rip)
e0e1(4): pxor %xmm0,%xmm0
e0e5(5): cvtsi2ss %rbp,%xmm0
e0ea(4): divss %xmm1,%xmm0
e0ee(7): ucomiss 0xbf57(%rip),%xmm0
e0f5(2): jnb 0xffffffab(%rip)
e0f7(7): ucomiss 0xbf52(%rip),%xmm0
e0fe(2): jb 0x52(%rip)
e100(8): subss 0xbf48(%rip),%xmm0
e108(a): mov $0x-9223372036854775808,%rax
e112(5): cvttss2si %xmm0,%rbp
e117(3): xor %rax,%rbp
e11a(5): jmp 0xffffff0e(%rip)
e11f(1): nop 
e120(3): test %rbp,%rbp
e123(6): movss 0x8(%r15),%xmm1
e129(2): jns 0xffffffb8(%rip)
e12b(3): mov %rbp,%rax
e12e(4): pxor %xmm0,%xmm0
e132(3): shr $0x1,%rax
e135(3): and $0x1,%ebp
e138(3): or %rbp,%rax
e13b(5): cvtsi2ss %rax,%xmm0
e140(4): addss %xmm0,%xmm0
e144(2): jmp 0xffffffa6(%rip)
e146(a): nop 0x0(%rax,%rax,1)
e150(5): cvttss2si %xmm0,%rbp
e155(5): jmp 0xfffffed3(%rip)
e15a(5): mov $0x1,%ecx
e15f(5): jmp 0xfffffee7(%rip)

"hash_clear" :
e170(2): push %r12
e172(1): push %rbp
e173(3): mov %rdi,%rbp
e176(1): push %rbx
e177(3): mov (%rdi),%r12
e17a(4): cmp 0x8(%rdi),%r12
e17e(2): jnb 0x6d(%rip)
e180(5): cmp $0x0,(%r12)
e185(2): jz 0x5c(%rip)
e187(5): mov 0x8(%r12),%rbx
e18c(4): mov 0x40(%rbp),%rax
e190(3): test %rbx,%rbx
e193(2): jz 0x32(%rip)
e195(3): nop (%rax)
e198(3): test %rax,%rax
e19b(2): jz 0xb(%rip)
e19d(3): mov (%rbx),%rdi
e1a0(2): call %rax
e1a2(4): mov 0x40(%rbp),%rax
e1a6(4): mov 0x8(%rbx),%rdx
e1aa(4): mov 0x48(%rbp),%rcx
e1ae(7): mov $0x0,(%rbx)
e1b5(3): test %rdx,%rdx
e1b8(4): mov %rcx,0x8(%rbx)
e1bc(4): mov %rbx,0x48(%rbp)
e1c0(3): mov %rdx,%rbx
e1c3(2): jnz 0xffffffd5(%rip)
e1c5(3): test %rax,%rax
e1c8(2): jz 0x8(%rip)
e1ca(4): mov (%r12),%rdi
e1ce(2): call %rax
e1d0(8): mov $0x0,(%r12)
e1d8(9): mov $0x0,0x8(%r12)
e1e1(4): add $0x10,%r12
e1e5(4): cmp %r12,0x8(%rbp)
e1e9(2): jnbe 0xffffff97(%rip)
e1eb(8): mov $0x0,0x18(%rbp)
e1f3(8): mov $0x0,0x20(%rbp)
e1fb(1): pop %rbx
e1fc(1): pop %rbp
e1fd(2): pop %r12
e1ff(1): ret near (%rsp)

"hash_free" :
e200(2): push %r12
e202(1): push %rbp
e203(3): mov %rdi,%r12
e206(1): push %rbx
e207(5): cmp $0x0,0x40(%rdi)
e20c(3): mov (%rdi),%rbp
e20f(4): mov 0x8(%rdi),%rax
e213(2): jz 0x50(%rip)
e215(5): cmp $0x0,0x20(%rdi)
e21a(2): jz 0x49(%rip)
e21c(3): cmp %rax,%rbp
e21f(2): jnb 0x7d(%rip)
e221(7): nop 0x0(%rax)
e228(4): mov 0x0(%rbp),%rdi
e22c(3): test %rdi,%rdi
e22f(2): jz 0x27(%rip)
e231(3): mov %rbp,%rbx
e234(2): jmp 0xf(%rip)
e236(a): nop 0x0(%rax,%rax,1)
e240(3): mov (%rbx),%rdi
e243(5): call 0x40(%r12)
e248(4): mov 0x8(%rbx),%rbx
e24c(3): test %rbx,%rbx
e24f(2): jnz 0xfffffff1(%rip)
e251(5): mov 0x8(%r12),%rax
e256(4): add $0x10,%rbp
e25a(3): cmp %rbp,%rax
e25d(2): jnbe 0xffffffcb(%rip)
e25f(4): mov (%r12),%rbp
e263(3): cmp %rax,%rbp
e266(2): jnb 0x36(%rip)
e268(8): nop 0x0(%rax,%rax,1)
e270(4): mov 0x8(%rbp),%rdi
e274(3): test %rdi,%rdi
e277(2): jz 0x1a(%rip)
e279(7): nop 0x0(%rax)
e280(4): mov 0x8(%rdi),%rbx
e284(5): call 0xffff55fc(%rip)
e289(3): test %rbx,%rbx
e28c(3): mov %rbx,%rdi
e28f(2): jnz 0xfffffff1(%rip)
e291(4): add $0x10,%rbp
e295(5): cmp %rbp,0x8(%r12)
e29a(2): jnbe 0xffffffd6(%rip)
e29c(5): mov 0x48(%r12),%rdi
e2a1(3): test %rdi,%rdi
e2a4(2): jz 0x1d(%rip)
e2a6(a): nop 0x0(%rax,%rax,1)
e2b0(4): mov 0x8(%rdi),%rbx
e2b4(5): call 0xffff55cc(%rip)
e2b9(3): test %rbx,%rbx
e2bc(3): mov %rbx,%rdi
e2bf(2): jnz 0xfffffff1(%rip)
e2c1(4): mov (%r12),%rdi
e2c5(5): call 0xffff55bb(%rip)
e2ca(1): pop %rbx
e2cb(3): mov %r12,%rdi
e2ce(1): pop %rbp
e2cf(2): pop %r12
e2d1(5): jmp 0xffff55af(%rip)

"hash_rehash" :
e2e0(2): push %r12
e2e2(1): push %rbp
e2e3(3): mov %rdi,%rbp
e2e6(1): push %rbx
e2e7(4): sub $0x60,%rsp
e2eb(4): mov 0x28(%rdi),%r12
e2ef(9): mov $0x28,%rax
e2f8(5): mov %rax,0x58(%rsp)
e2fd(2): xor %eax,%eax
e2ff(6): cmp $0x0,0x10(%r12)
e305(2): jnz 0x53(%rip)
e307(3): test %rsi,%rsi
e30a(6): js 0x17e(%rip)
e310(4): pxor %xmm0,%xmm0
e314(5): cvtsi2ss %rsi,%xmm0
e319(7): divss 0x8(%r12),%xmm0
e320(7): ucomiss 0xbd25(%rip),%xmm0
e327(6): jnb 0x139(%rip)
e32d(7): ucomiss 0xbd1c(%rip),%xmm0
e334(6): jb 0x17c(%rip)
e33a(8): subss 0xbd0e(%rip),%xmm0
e342(a): mov $0x-9223372036854775808,%rax
e34c(5): cvttss2si %xmm0,%rsi
e351(3): xor %rax,%rsi
e354(4): nop 0x0(%rax)
e358(3): mov %rsi,%rdi
e35b(5): call 0xfffff3e5(%rip)
e360(5): mov $0x8,%edx
e365(3): mov %rax,%rbx
e368(2): xor %ecx,%ecx
e36a(3): mov %rdx,%rax
e36d(3): mul %rax,%rbx,%rdx
e370(6): jo 0x19f(%rip)
e376(3): test %rax,%rax
e379(5): mov $0x1,%eax
e37e(4): cmovs %rax,%rcx
e382(3): test %rbx,%rbx
e385(6): jz 0xdb(%rip)
e38b(3): and $0x1,%ecx
e38e(6): jnz 0xd2(%rip)
e394(4): cmp %rbx,0x10(%rbp)
e398(6): jz 0x128(%rip)
e39e(5): mov $0x10,%esi
e3a3(3): mov %rbx,%rdi
e3a6(5): call 0xffff51da(%rip)
e3ab(3): test %rax,%rax
e3ae(4): mov %rax,(%rsp)
e3b2(6): jz 0xae(%rip)
e3b8(5): mov %rbx,0x10(%rsp)
e3bd(4): shl/sal $0x4,%rbx
e3c1(5): mov %r12,0x28(%rsp)
e3c6(3): add %rax,%rbx
e3c9(4): mov 0x30(%rbp),%rax
e3cd(3): mov %rsp,%r12
e3d0(2): xor %edx,%edx
e3d2(3): mov %rbp,%rsi
e3d5(3): mov %r12,%rdi
e3d8(5): mov %rbx,0x8(%rsp)
e3dd(9): mov $0x0,0x18(%rsp)
e3e6(5): mov %rax,0x30(%rsp)
e3eb(4): mov 0x38(%rbp),%rax
e3ef(9): mov $0x0,0x20(%rsp)
e3f8(5): mov %rax,0x38(%rsp)
e3fd(4): mov 0x40(%rbp),%rax
e401(5): mov %rax,0x40(%rsp)
e406(4): mov 0x48(%rbp),%rax
e40a(5): mov %rax,0x48(%rsp)
e40f(5): call 0xfffff5c1(%rip)
e414(2): test %al,%al
e416(2): mov %eax,%ebx
e418(6): jnz 0xb8(%rip)
e41e(5): mov 0x48(%rsp),%rax
e423(5): mov $0x1,%edx
e428(3): mov %r12,%rsi
e42b(3): mov %rbp,%rdi
e42e(4): mov %rax,0x48(%rbp)
e432(5): call 0xfffff59e(%rip)
e437(2): test %al,%al
e439(6): jz 0xe0(%rip)
e43f(2): xor %edx,%edx
e441(3): mov %r12,%rsi
e444(3): mov %rbp,%rdi
e447(5): call 0xfffff589(%rip)
e44c(2): test %al,%al
e44e(6): jz 0xcb(%rip)
e454(4): mov (%rsp),%rdi
e458(5): call 0xffff5428(%rip)
e45d(2): jmp 0x5(%rip)
e45f(1): nop 
e460(2): xor %ebx,%ebx
e462(5): mov 0x58(%rsp),%rcx
e467(9): xor $0x28,%rcx
e470(2): mov %ebx,%eax
e472(6): jnz 0x98(%rip)
e478(4): add $0x60,%rsp
e47c(1): pop %rbx
e47d(1): pop %rbp
e47e(2): pop %r12
e480(1): ret near (%rsp)
e481(7): nop 0x0(%rax)
e488(3): mov %rsi,%rax
e48b(4): pxor %xmm0,%xmm0
e48f(3): shr $0x1,%rax
e492(3): and $0x1,%esi
e495(3): or %rsi,%rax
e498(5): cvtsi2ss %rax,%xmm0
e49d(4): addss %xmm0,%xmm0
e4a1(5): jmp 0xfffffe78(%rip)
e4a6(a): nop 0x0(%rax,%rax,1)
e4b0(5): cvttss2si %xmm0,%rsi
e4b5(5): jmp 0xfffffea3(%rip)
e4ba(6): nop 0x0(%rax,%rax,1)
e4c0(5): mov $0x1,%ebx
e4c5(2): jmp 0xffffff9d(%rip)
e4c7(9): nop 0x0(%rax,%rax,1)
e4d0(4): mov 0x0(%rbp),%rdi
e4d4(5): call 0xffff53ac(%rip)
e4d9(4): mov (%rsp),%rax
e4dd(4): mov %rax,0x0(%rbp)
e4e1(5): mov 0x8(%rsp),%rax
e4e6(4): mov %rax,0x8(%rbp)
e4ea(5): mov 0x10(%rsp),%rax
e4ef(4): mov %rax,0x10(%rbp)
e4f3(5): mov 0x18(%rsp),%rax
e4f8(4): mov %rax,0x18(%rbp)
e4fc(5): mov 0x48(%rsp),%rax
e501(4): mov %rax,0x48(%rbp)
e505(5): jmp 0xffffff5d(%rip)
e50a(5): call 0xffff4f16(%rip)
e50f(5): mov $0x1,%ecx
e514(5): jmp 0xfffffe62(%rip)
e519(5): call 0xffff4d77(%rip)

"hash_insert_if_absent" :
e520(2): push %r13
e522(2): push %r12
e524(1): push %rbp
e525(1): push %rbx
e526(4): sub $0x18,%rsp
e52a(9): mov $0x28,%rax
e533(5): mov %rax,0x8(%rsp)
e538(2): xor %eax,%eax
e53a(3): test %rsi,%rsi
e53d(6): jz 0x1c0(%rip)
e543(3): mov %rsp,%r12
e546(2): xor %ecx,%ecx
e548(3): mov %rdx,%r13
e54b(3): mov %r12,%rdx
e54e(3): mov %rdi,%rbx
e551(3): mov %rsi,%rbp
e554(5): call 0xfffff2dc(%rip)
e559(3): test %rax,%rax
e55c(3): mov %rax,%rdx
e55f(2): jz 0x31(%rip)
e561(2): xor %eax,%eax
e563(3): test %r13,%r13
e566(2): jz 0x6(%rip)
e568(4): mov %rdx,0x0(%r13)
e56c(5): mov 0x8(%rsp),%rcx
e571(9): xor $0x28,%rcx
e57a(6): jnz 0x225(%rip)
e580(4): add $0x18,%rsp
e584(1): pop %rbx
e585(1): pop %rbp
e586(2): pop %r12
e588(2): pop %r13
e58a(1): ret near (%rsp)
e58b(5): nop 0x0(%rax,%rax,1)
e590(4): mov 0x18(%rbx),%rax
e594(3): test %rax,%rax
e597(2): js 0x79(%rip)
e599(4): pxor %xmm1,%xmm1
e59d(4): mov 0x28(%rbx),%rdx
e5a1(5): cvtsi2ss %rax,%xmm1
e5a6(4): mov 0x10(%rbx),%rax
e5aa(3): test %rax,%rax
e5ad(6): js 0x8d(%rip)
e5b3(4): pxor %xmm0,%xmm0
e5b7(5): cvtsi2ss %rax,%xmm0
e5bc(5): mulss 0x8(%rdx),%xmm0
e5c1(3): ucomiss %xmm0,%xmm1
e5c4(6): jnbe 0x9c(%rip)
e5ca(4): mov (%rsp),%r12
e5ce(5): cmp $0x0,(%r12)
e5d3(6): jz 0x135(%rip)
e5d9(4): mov 0x48(%rbx),%rax
e5dd(3): test %rax,%rax
e5e0(6): jz 0x140(%rip)
e5e6(4): mov 0x8(%rax),%rdx
e5ea(4): mov %rdx,0x48(%rbx)
e5ee(5): mov 0x8(%r12),%rdx
e5f3(3): mov %rbp,(%rax)
e5f6(4): mov %rdx,0x8(%rax)
e5fa(5): mov %rax,0x8(%r12)
e5ff(5): mov $0x1,%eax
e604(5): add $0x1,0x20(%rbx)
e609(5): jmp 0xffffff63(%rip)
e60e(2): nop 
e610(3): mov %rax,%rdx
e613(4): pxor %xmm1,%xmm1
e617(3): and $0x1,%eax
e61a(3): shr $0x1,%rdx
e61d(3): or %rax,%rdx
e620(4): mov 0x10(%rbx),%rax
e624(5): cvtsi2ss %rdx,%xmm1
e629(4): mov 0x28(%rbx),%rdx
e62d(3): test %rax,%rax
e630(4): addss %xmm1,%xmm1
e634(6): jns 0xffffff7f(%rip)
e63a(3): mov %rax,%rcx
e63d(4): pxor %xmm0,%xmm0
e641(3): shr $0x1,%rcx
e644(3): and $0x1,%eax
e647(3): or %rax,%rcx
e64a(5): cvtsi2ss %rcx,%xmm0
e64f(4): addss %xmm0,%xmm0
e653(5): jmp 0xffffff69(%rip)
e658(8): nop 0x0(%rax,%rax,1)
e660(4): lea 0x28(%rbx),%rdi
e664(5): call 0xfffff2ec(%rip)
e669(4): mov 0x10(%rbx),%rax
e66d(4): mov 0x28(%rbx),%rdx
e671(3): test %rax,%rax
e674(5): movss 0x8(%rdx),%xmm2
e679(6): js 0xc7(%rip)
e67f(4): pxor %xmm0,%xmm0
e683(5): cvtsi2ss %rax,%xmm0
e688(4): mov 0x18(%rbx),%rax
e68c(3): test %rax,%rax
e68f(6): js 0xd1(%rip)
e695(4): pxor %xmm1,%xmm1
e699(5): cvtsi2ss %rax,%xmm1
e69e(3): movaps %xmm2,%xmm3
e6a1(4): mulss %xmm0,%xmm3
e6a5(3): ucomiss %xmm3,%xmm1
e6a8(6): jbe 0xffffff22(%rip)
e6ae(4): cmp $0x0,0x10(%rdx)
e6b2(5): mulss 0xc(%rdx),%xmm0
e6b7(2): jnz 0x6(%rip)
e6b9(4): mulss %xmm2,%xmm0
e6bd(7): ucomiss 0xb988(%rip),%xmm0
e6c4(2): jnb 0x6f(%rip)
e6c6(7): ucomiss 0xb983(%rip),%xmm0
e6cd(6): jnb 0xb3(%rip)
e6d3(5): cvttss2si %xmm0,%rsi
e6d8(3): mov %rbx,%rdi
e6db(5): call 0xfffffc05(%rip)
e6e0(2): test %al,%al
e6e2(2): jz 0x51(%rip)
e6e4(2): xor %ecx,%ecx
e6e6(3): mov %r12,%rdx
e6e9(3): mov %rbp,%rsi
e6ec(3): mov %rbx,%rdi
e6ef(5): call 0xfffff141(%rip)
e6f4(3): test %rax,%rax
e6f7(6): jz 0xfffffed3(%rip)
e6fd(5): call 0xffff4b93(%rip)
e702(6): nop 0x0(%rax,%rax,1)
e708(4): mov %rbp,(%r12)
e70c(5): mov $0x1,%eax
e711(5): add $0x1,0x20(%rbx)
e716(5): add $0x1,0x18(%rbx)
e71b(5): jmp 0xfffffe51(%rip)
e720(5): mov $0x10,%edi
e725(5): call 0xffff5163(%rip)
e72a(3): test %rax,%rax
e72d(6): jnz 0xfffffec1(%rip)
e733(5): mov $0xffffffff,%eax
e738(5): jmp 0xfffffe34(%rip)
e73d(3): nop (%rax)
e740(3): mov %rax,%rcx
e743(4): pxor %xmm0,%xmm0
e747(3): shr $0x1,%rcx
e74a(3): and $0x1,%eax
e74d(3): or %rax,%rcx
e750(5): cvtsi2ss %rcx,%xmm0
e755(4): addss %xmm0,%xmm0
e759(5): jmp 0xffffff2f(%rip)
e75e(2): nop 
e760(3): mov %rax,%rcx
e763(4): pxor %xmm1,%xmm1
e767(3): shr $0x1,%rcx
e76a(3): and $0x1,%eax
e76d(3): or %rax,%rcx
e770(5): cvtsi2ss %rcx,%xmm1
e775(4): addss %xmm1,%xmm1
e779(5): jmp 0xffffff25(%rip)
e77e(2): nop 
e780(8): subss 0xb8c8(%rip),%xmm0
e788(a): mov $0x-9223372036854775808,%rax
e792(5): cvttss2si %xmm0,%rsi
e797(3): xor %rax,%rsi
e79a(5): jmp 0xffffff3e(%rip)
e79f(5): call 0xffff4c81(%rip)

"hash_insert" :
e7b0(1): push %rbx
e7b1(3): mov %rsi,%rbx
e7b4(4): sub $0x10,%rsp
e7b8(3): mov %rsp,%rdx
e7bb(9): mov $0x28,%rax
e7c4(5): mov %rax,0x8(%rsp)
e7c9(2): xor %eax,%eax
e7cb(5): call 0xfffffd55(%rip)
e7d0(3): cmp $0xff,%eax
e7d3(2): jz 0x2d(%rip)
e7d5(2): test %eax,%eax
e7d7(2): jnz 0x6(%rip)
e7d9(4): mov (%rsp),%rbx
e7dd(5): mov 0x8(%rsp),%rcx
e7e2(9): xor $0x28,%rcx
e7eb(3): mov %rbx,%rax
e7ee(2): jnz 0x16(%rip)
e7f0(4): add $0x10,%rsp
e7f4(1): pop %rbx
e7f5(1): ret near (%rsp)
e7f6(a): nop 0x0(%rax,%rax,1)
e800(2): xor %ebx,%ebx
e802(2): jmp 0xffffffdb(%rip)
e804(5): call 0xffff4c1c(%rip)

"hash_delete" :
e810(2): push %r12
e812(1): push %rbp
e813(5): mov $0x1,%ecx
e818(1): push %rbx
e819(3): mov %rdi,%rbx
e81c(4): sub $0x10,%rsp
e820(3): mov %rsp,%rdx
e823(9): mov $0x28,%rax
e82c(5): mov %rax,0x8(%rsp)
e831(2): xor %eax,%eax
e833(5): call 0xffffeffd(%rip)
e838(3): test %rax,%rax
e83b(3): mov %rax,%rbp
e83e(2): jz 0x11(%rip)
e840(4): mov (%rsp),%rax
e844(5): sub $0x1,0x20(%rbx)
e849(4): cmp $0x0,(%rax)
e84d(2): jz 0x23(%rip)
e84f(5): mov 0x8(%rsp),%rcx
e854(9): xor $0x28,%rcx
e85d(3): mov %rbp,%rax
e860(6): jnz 0x1ae(%rip)
e866(4): add $0x10,%rsp
e86a(1): pop %rbx
e86b(1): pop %rbp
e86c(2): pop %r12
e86e(1): ret near (%rsp)
e86f(1): nop 
e870(4): mov 0x18(%rbx),%rax
e874(4): sub $0x1,%rax
e878(3): test %rax,%rax
e87b(4): mov %rax,0x18(%rbx)
e87f(6): js 0x101(%rip)
e885(4): pxor %xmm0,%xmm0
e889(5): cvtsi2ss %rax,%xmm0
e88e(4): mov 0x10(%rbx),%rax
e892(4): mov 0x28(%rbx),%rdx
e896(3): test %rax,%rax
e899(6): js 0xc7(%rip)
e89f(4): pxor %xmm1,%xmm1
e8a3(5): cvtsi2ss %rax,%xmm1
e8a8(4): mulss (%rdx),%xmm1
e8ac(3): ucomiss %xmm0,%xmm1
e8af(2): jbe 0xffffffa0(%rip)
e8b1(4): lea 0x28(%rbx),%rdi
e8b5(5): call 0xfffff09b(%rip)
e8ba(4): mov 0x10(%rbx),%rax
e8be(4): mov 0x28(%rbx),%rdx
e8c2(3): test %rax,%rax
e8c5(6): js 0x12b(%rip)
e8cb(4): pxor %xmm0,%xmm0
e8cf(5): cvtsi2ss %rax,%xmm0
e8d4(4): mov 0x18(%rbx),%rax
e8d8(3): test %rax,%rax
e8db(6): js 0xf5(%rip)
e8e1(4): pxor %xmm1,%xmm1
e8e5(5): cvtsi2ss %rax,%xmm1
e8ea(4): movss (%rdx),%xmm2
e8ee(4): mulss %xmm0,%xmm2
e8f2(3): ucomiss %xmm1,%xmm2
e8f5(6): jbe 0xffffff5a(%rip)
e8fb(4): cmp $0x0,0x10(%rdx)
e8ff(5): mulss 0x4(%rdx),%xmm0
e904(6): jz 0xbc(%rip)
e90a(7): ucomiss 0xb73f(%rip),%xmm0
e911(6): jnb 0x8f(%rip)
e917(5): cvttss2si %xmm0,%rsi
e91c(3): mov %rbx,%rdi
e91f(5): call 0xfffff9c1(%rip)
e924(2): test %al,%al
e926(6): jnz 0xffffff29(%rip)
e92c(4): mov 0x48(%rbx),%rdi
e930(3): test %rdi,%rdi
e933(2): jz 0x16(%rip)
e935(3): nop (%rax)
e938(4): mov 0x8(%rdi),%r12
e93c(5): call 0xffff4f44(%rip)
e941(3): test %r12,%r12
e944(3): mov %r12,%rdi
e947(2): jnz 0xfffffff1(%rip)
e949(8): mov $0x0,0x48(%rbx)
e951(5): jmp 0xfffffefe(%rip)
e956(a): nop 0x0(%rax,%rax,1)
e960(3): mov %rax,%rcx
e963(4): pxor %xmm1,%xmm1
e967(3): shr $0x1,%rcx
e96a(3): and $0x1,%eax
e96d(3): or %rax,%rcx
e970(5): cvtsi2ss %rcx,%xmm1
e975(4): addss %xmm1,%xmm1
e979(5): jmp 0xffffff2f(%rip)
e97e(2): nop 
e980(3): mov %rax,%rdx
e983(4): pxor %xmm0,%xmm0
e987(3): shr $0x1,%rdx
e98a(3): and $0x1,%eax
e98d(3): or %rax,%rdx
e990(5): cvtsi2ss %rdx,%xmm0
e995(4): addss %xmm0,%xmm0
e999(5): jmp 0xfffffef5(%rip)
e99e(2): nop 
e9a0(8): subss 0xb6a8(%rip),%xmm0
e9a8(a): mov $0x-9223372036854775808,%rax
e9b2(5): cvttss2si %xmm0,%rsi
e9b7(3): xor %rax,%rsi
e9ba(5): jmp 0xffffff62(%rip)
e9bf(1): nop 
e9c0(5): mulss 0x8(%rdx),%xmm0
e9c5(5): jmp 0xffffff45(%rip)
e9ca(6): nop 0x0(%rax,%rax,1)
e9d0(3): mov %rax,%rcx
e9d3(4): pxor %xmm1,%xmm1
e9d7(3): shr $0x1,%rcx
e9da(3): and $0x1,%eax
e9dd(3): or %rax,%rcx
e9e0(5): cvtsi2ss %rcx,%xmm1
e9e5(4): addss %xmm1,%xmm1
e9e9(5): jmp 0xffffff01(%rip)
e9ee(2): nop 
e9f0(3): mov %rax,%rcx
e9f3(4): pxor %xmm0,%xmm0
e9f7(3): shr $0x1,%rcx
e9fa(3): and $0x1,%eax
e9fd(3): or %rax,%rcx
ea00(5): cvtsi2ss %rcx,%xmm0
ea05(4): addss %xmm0,%xmm0
ea09(5): jmp 0xfffffecb(%rip)
ea0e(5): call 0xffff4a12(%rip)

"triple_hash" :
ea20(1): push %rbp
ea21(1): push %rbx
ea22(3): mov %rdi,%rbp
ea25(3): mov %rsi,%rbx
ea28(4): sub $0x8,%rsp
ea2c(3): mov (%rdi),%rdi
ea2f(5): call 0x72f1(%rip)
ea34(4): xor 0x8(%rbp),%rax
ea38(2): xor %edx,%edx
ea3a(4): add $0x8,%rsp
ea3e(3): div %rbx,%rax
ea41(1): pop %rbx
ea42(1): pop %rbp
ea43(3): mov %rdx,%rax
ea46(1): ret near (%rsp)

"triple_hash_no_name" :
ea50(4): mov 0x8(%rdi),%rax
ea54(2): xor %edx,%edx
ea56(3): div %rsi,%rax
ea59(3): mov %rdx,%rax
ea5c(1): ret near (%rsp)

"triple_compare" :
ea60(2): xor %eax,%eax
ea62(4): mov 0x8(%rsi),%rdx
ea66(4): cmp %rdx,0x8(%rdi)
ea6a(2): jz 0x6(%rip)
ea6c(2): REP ret near (%rsp)
ea6e(2): nop 
ea70(4): mov 0x10(%rsi),%rcx
ea74(4): cmp %rcx,0x10(%rdi)
ea78(2): jnz 0xfffffff4(%rip)
ea7a(4): sub $0x8,%rsp
ea7e(3): mov (%rsi),%rsi
ea81(3): mov (%rdi),%rdi
ea84(5): call 0x54cc(%rip)
ea89(4): add $0x8,%rsp
ea8d(1): ret near (%rsp)

"triple_compare_ino_str" :
ea90(2): xor %eax,%eax
ea92(4): mov 0x8(%rsi),%rdx
ea96(4): cmp %rdx,0x8(%rdi)
ea9a(2): jz 0x6(%rip)
ea9c(2): REP ret near (%rsp)
ea9e(2): nop 
eaa0(4): mov 0x10(%rsi),%rcx
eaa4(4): cmp %rcx,0x10(%rdi)
eaa8(2): jnz 0xfffffff4(%rip)
eaaa(4): sub $0x8,%rsp
eaae(3): mov (%rsi),%rsi
eab1(3): mov (%rdi),%rdi
eab4(5): call 0xffff4adc(%rip)
eab9(2): test %eax,%eax
eabb(3): setz %al
eabe(4): add $0x8,%rsp
eac2(1): ret near (%rsp)

"triple_free" :
ead0(1): push %rbx
ead1(3): mov %rdi,%rbx
ead4(3): mov (%rdi),%rdi
ead7(5): call 0xffff4da9(%rip)
eadc(3): mov %rbx,%rdi
eadf(1): pop %rbx
eae0(5): jmp 0xffff4da0(%rip)

"adjust_value.part.0" :
eaf0(6): fld 0xb55a(%rip),%st0
eaf6(4): fld 0x8(%rsp),%st0
eafa(2): fucomi %st1,%st0
eafc(2): jnb 0x74(%rip)
eafe(2): fstp %st0,%st1
eb00(4): fstcw 0xfffffff6(%rsp)
eb04(5): movzx 0xfffffff6(%rsp),%eax
eb09(3): or $0xc,%ah
eb0c(5): mov %ax,0xfffffff4(%rsp)
eb11(2): fld %st0,%st0
eb13(4): fldcw 0xfffffff4(%rsp)
eb17(4): fistp %st0,0xffffffe8(%rsp)
eb1b(4): fldcw 0xfffffff6(%rsp)
eb1f(5): mov 0xffffffe8(%rsp),%rax
eb24(5): mov %rax,0xffffffe0(%rsp)
eb29(3): test %rax,%rax
eb2c(4): fild 0xffffffe0(%rsp),%st0
eb30(2): jns 0x8(%rip)
eb32(6): fadd 0xb514(%rip)
eb38(2): test %edi,%edi
eb3a(2): jnz 0x2e(%rip)
eb3c(2): fxch %st1,%st0
eb3e(2): fucomip %st1,%st0
eb40(2): jp 0x8(%rip)
eb42(2): jz 0x28(%rip)
eb44(2): fstp %st0,%st0
eb46(2): jmp 0xa(%rip)
eb48(2): fstp %st0,%st0
eb4a(6): nop 0x0(%rax,%rax,1)
eb50(4): add $0x1,%rax
eb54(5): mov %rax,0xffffffe0(%rsp)
eb59(3): test %rax,%rax
eb5c(4): fild 0xffffffe0(%rsp),%st0
eb60(2): js 0x50(%rip)
eb62(2): jmp 0x8(%rip)
eb64(4): nop 0x0(%rax)
eb68(2): fstp %st0,%st1
eb6a(2): REP ret near (%rsp)
eb6c(4): nop 0x0(%rax)
eb70(4): fstcw 0xfffffff6(%rsp)
eb74(5): movzx 0xfffffff6(%rsp),%eax
eb79(2): fsubr %st0,%st1
eb7b(2): fxch %st1,%st0
eb7d(a): mov $0x-9223372036854775808,%rdx
eb87(3): or $0xc,%ah
eb8a(5): mov %ax,0xfffffff4(%rsp)
eb8f(4): fldcw 0xfffffff4(%rsp)
eb93(4): fistp %st0,0xffffffe8(%rsp)
eb97(4): fldcw 0xfffffff6(%rsp)
eb9b(5): mov 0xffffffe8(%rsp),%rax
eba0(3): xor %rdx,%rax
eba3(5): jmp 0xffffff81(%rip)
eba8(8): nop 0x0(%rax,%rax,1)
ebb0(6): fadd 0xb496(%rip)
ebb6(1): ret near (%rsp)

"human_readable" :
ebc0(2): push %r15
ebc2(2): push %r14
ebc4(2): mov %edx,%eax
ebc6(2): push %r13
ebc8(2): push %r12
ebca(3): mov %edx,%r15d
ebcd(1): push %rbp
ebce(1): push %rbx
ebcf(3): and $0x20,%eax
ebd2(4): and $0x3,%r15d
ebd6(3): mov %edx,%r12d
ebd9(3): mov %rdi,%rbx
ebdc(7): sub $0x98,%rsp
ebe3(5): mov %rcx,0x18(%rsp)
ebe8(4): mov %eax,0x30(%rsp)
ebec(9): mov $0x28,%rcx
ebf5(8): mov %rcx,0x88(%rsp)
ebfd(2): xor %ecx,%ecx
ebff(3): cmp $0x1,%eax
ec02(4): mov %rsi,(%rsp)
ec06(5): mov %r8,0x10(%rsp)
ec0b(2): sbb %eax,%eax
ec0d(3): and $0xe8,%eax
ec10(5): add $0x400,%eax
ec15(4): mov %eax,0x34(%rsp)
ec19(5): call 0xffff4727(%rip)
ec1e(3): mov (%rax),%r14
ec21(3): mov %rax,%r13
ec24(3): mov %r14,%rdi
ec27(5): call 0xffff47d9(%rip)
ec2c(4): mov 0x10(%r13),%rcx
ec30(4): mov 0x8(%r13),%r13
ec34(3): mov %rax,%rbp
ec37(4): sub $0x1,%rax
ec3b(5): mov $0x1,%edx
ec40(4): cmp $0x10,%rax
ec44(7): lea 0xb351(%rip),%rax
ec4b(3): mov %r13,%rdi
ec4e(4): cmovnb %rdx,%rbp
ec52(5): mov %rcx,0x38(%rsp)
ec57(4): cmovnb %rax,%r14
ec5b(5): call 0xffff47a5(%rip)
ec60(4): cmp $0x11,%rax
ec64(7): lea 0x8c48(%rip),%rax
ec6b(5): mov 0x10(%rsp),%rdi
ec70(5): mov 0x18(%rsp),%rcx
ec75(4): cmovnb %rax,%r13
ec79(4): mov (%rsp),%rax
ec7d(6): add $0x287,%rax
ec83(3): cmp %rcx,%rdi
ec86(5): mov %rax,0x8(%rsp)
ec8b(6): jnbe 0x14d(%rip)
ec91(2): xor %edx,%edx
ec93(3): mov %rcx,%rax
ec96(3): div %rdi,%rax
ec99(3): test %rdx,%rdx
ec9c(3): mov %rax,%rdi
ec9f(6): jz 0x361(%rip)
eca5(5): mov %rcx,0x18(%rsp)
ecaa(3): test %rcx,%rcx
ecad(4): fild 0x18(%rsp),%st0
ecb1(2): jns 0x8(%rip)
ecb3(6): fadd 0xb393(%rip)
ecb9(5): mov 0x10(%rsp),%rax
ecbe(5): mov %rax,0x18(%rsp)
ecc3(3): test %rax,%rax
ecc6(4): fild 0x18(%rsp),%st0
ecca(2): jns 0x8(%rip)
eccc(6): fadd 0xb37a(%rip)
ecd2(2): fdivp %st0,%st1
ecd4(5): mov %rbx,0x18(%rsp)
ecd9(3): test %rbx,%rbx
ecdc(4): fild 0x18(%rsp),%st0
ece0(2): jns 0x8(%rip)
ece2(6): fadd 0xb364(%rip)
ece8(4): test $0x10,%r12b
ecec(2): fmulp %st0,%st1
ecee(6): jz 0x1ca(%rip)
ecf4(4): fild 0x34(%rsp),%st0
ecf8(2): xor %ebx,%ebx
ecfa(2): fld %st0,%st0
ecfc(2): jmp 0x8(%rip)
ecfe(2): nop 
ed00(2): fstp %st0,%st1
ed02(2): fxch %st2,%st0
ed04(2): fld %st0,%st0
ed06(3): add $0x1,%ebx
ed09(2): fmul %st2
ed0b(2): fxch %st3,%st0
ed0d(2): fucomi %st3,%st0
ed0f(2): jb 0x11(%rip)
ed11(3): cmp $0x8,%ebx
ed14(2): jnz 0xffffffec(%rip)
ed16(2): fstp %st0,%st2
ed18(2): fstp %st0,%st2
ed1a(2): jmp 0xa(%rip)
ed1c(4): nop 0x0(%rax)
ed20(2): fstp %st0,%st2
ed22(2): fstp %st0,%st2
ed24(4): mov 0x30(%rsp),%ecx
ed28(4): add $0x1,%rbp
ed2c(2): xor %eax,%eax
ed2e(2): fdivrp %st0,%st1
ed30(2): test %ecx,%ecx
ed32(3): setz %al
ed35(4): cmp $0x1,%r15d
ed39(5): lea 0x1(%rbp,%rax,1),%rax
ed3e(5): mov %rax,0x18(%rsp)
ed43(6): jz 0x56d(%rip)
ed49(6): fld 0xb361(%rip),%st0
ed4f(2): fucomip %st1,%st0
ed51(6): jnbe 0x3d7(%rip)
ed57(2): fld %st0,%st0
ed59(4): fstp %st0,0x20(%rsp)
ed5d(4): sub $0x10,%rsp
ed61(7): lea 0xb2fe(%rip),%rcx
ed68(5): mov $0x1,%esi
ed6d(7): mov $0xffffffff,%rdx
ed74(2): xor %eax,%eax
ed76(5): mov 0x10(%rsp),%r14
ed7b(3): mov %r14,%rdi
ed7e(3): fstp %st0,(%rsp)
ed81(5): call 0xffff4aef(%rip)
ed86(3): mov %r14,%rdi
ed89(5): call 0xffff4677(%rip)
ed8e(1): pop %rcx
ed8f(1): pop %rsi
ed90(5): cmp 0x18(%rsp),%rax
ed95(3): mov %rax,%r14
ed98(4): fld 0x20(%rsp),%st0
ed9c(6): jnbe 0x5ac(%rip)
eda2(4): test $0x8,%r12b
eda6(6): jz 0x16a(%rip)
edac(4): mov (%rsp),%rax
edb0(6): cmp $0x30,0xffffffff(%rax,%r14,1)
edb6(6): jnz 0x162(%rip)
edbc(6): fld 0xb2ea(%rip),%st0
edc2(4): cmp $0x1,%r15d
edc6(2): fmul %st0,%st1
edc8(6): jnz 0x588(%rip)
edce(5): jmp 0x535(%rip)
edd3(5): nop 0x0(%rax,%rax,1)
edd8(3): test %rcx,%rcx
eddb(6): jz 0xfffffeca(%rip)
ede1(5): mov 0x10(%rsp),%rax
ede6(2): xor %edx,%edx
ede8(3): div %rcx,%rax
edeb(3): test %rdx,%rdx
edee(3): mov %rax,%r8
edf1(6): jnz 0xfffffeb4(%rip)
edf7(3): mov %rbx,%rax
edfa(2): xor %edx,%edx
edfc(3): div %r8,%rax
edff(3): mov %rax,%rbx
ee02(4): lea 0x0(%rdx,%rdx,4),%rax
ee06(2): xor %edx,%edx
ee08(3): mov %rbx,%rsi
ee0b(3): add %rax,%rax
ee0e(3): div %r8,%rax
ee11(3): add %rdx,%rdx
ee14(3): mov %eax,%r9d
ee17(3): cmp %rdx,%r8
ee1a(6): jbe 0x58e(%rip)
ee20(2): xor %edi,%edi
ee22(3): test %rdx,%rdx
ee25(4): setnz %dil
ee29(3): mov %r12d,%ecx
ee2c(5): mov 0x8(%rsp),%r8
ee31(5): mov $0xffffffff,%ebx
ee36(3): and $0x10,%ecx
ee39(6): jz 0x3c7(%rip)
ee3f(5): mov 0x34(%rsp),%r8d
ee44(3): cmp %rsi,%r8
ee47(3): mov %r8,%r11
ee4a(6): jnbe 0x576(%rip)
ee50(2): xor %ebx,%ebx
ee52(2): jmp 0x25(%rip)
ee54(4): nop 0x0(%rax)
ee58(2): test %edi,%edi
ee5a(4): setnz %dil
ee5e(4): movzx %dil,%edi
ee62(3): add $0x1,%ebx
ee65(3): cmp %r10,%r8
ee68(6): jnbe 0x315(%rip)
ee6e(3): cmp $0x8,%ebx
ee71(6): jz 0x5a7(%rip)
ee77(3): mov %rsi,%rax
ee7a(2): xor %edx,%edx
ee7c(2): mov %edi,%esi
ee7e(3): div %r8,%rax
ee81(2): sar $0x1,%esi
ee83(3): mov %rax,%r10
ee86(3): lea 0x0(%rdx,%rdx,4),%eax
ee89(2): xor %edx,%edx
ee8b(4): lea 0x0(%r9,%rax,2),%eax
ee8f(3): div %r11d,%eax
ee92(3): lea 0x0(%rsi,%rdx,2),%edx
ee95(3): mov %eax,%r9d
ee98(3): mov %r10,%rsi
ee9b(2): add %edx,%edi
ee9d(3): cmp %edx,%r11d
eea0(2): jnbe 0xffffffb8(%rip)
eea2(3): cmp %edi,%r11d
eea5(4): setb %dil
eea9(4): movzx %dil,%edi
eead(3): add $0x2,%edi
eeb0(2): jmp 0xffffffb2(%rip)
eeb2(6): nop 0x0(%rax,%rax,1)
eeb8(4): cmp $0x1,%r15d
eebc(2): jz 0x10(%rip)
eebe(6): fld 0xb1ec(%rip),%st0
eec4(2): fucomip %st1,%st0
eec6(6): jnbe 0x28a(%rip)
eecc(4): sub $0x10,%rsp
eed0(7): lea 0xb189(%rip),%rcx
eed7(5): mov $0x1,%esi
eedc(5): mov 0x10(%rsp),%rbx
eee1(7): mov $0xffffffff,%rdx
eee8(2): xor %eax,%eax
eeea(3): fstp %st0,(%rsp)
eeed(2): xor %ebp,%ebp
eeef(3): mov %rbx,%rdi
eef2(5): call 0xffff497e(%rip)
eef7(3): mov %rbx,%rdi
eefa(5): mov $0xffffffff,%ebx
eeff(5): call 0xffff4501(%rip)
ef04(1): pop %rsi
ef05(1): pop %rdi
ef06(3): mov %rax,%r14
ef09(2): jmp 0x17(%rip)
ef0b(5): nop 0x0(%rax,%rax,1)
ef10(2): fstp %st0,%st0
ef12(2): jmp 0xe(%rip)
ef14(4): nop 0x0(%rax)
ef18(2): fstp %st0,%st0
ef1a(6): nop 0x0(%rax,%rax,1)
ef20(5): mov 0x8(%rsp),%r15
ef25(4): mov (%rsp),%rsi
ef29(3): mov %r14,%rdx
ef2c(3): sub %r14,%r15
ef2f(3): sub %rbp,%r14
ef32(3): mov %r15,%rdi
ef35(5): call 0xffff481b(%rip)
ef3a(3): mov %r14,%r8
ef3d(3): add %r15,%r8
ef40(4): test $0x4,%r12b
ef44(6): jnz 0xe4(%rip)
ef4a(4): test $0x80,%r12b
ef4e(2): jz 0x79(%rip)
ef50(3): cmp $0xff,%ebx
ef53(6): jz 0x31d(%rip)
ef59(3): mov %r12d,%eax
ef5c(5): and $0x100,%eax
ef61(2): mov %eax,%ecx
ef63(2): or %ebx,%ecx
ef65(2): jz 0x62(%rip)
ef67(4): and $0x40,%r12d
ef6b(6): jnz 0x19d(%rip)
ef71(2): test %ebx,%ebx
ef73(6): jz 0x633(%rip)
ef79(3): cmp $0x1,%ebx
ef7c(2): jnz 0x10(%rip)
ef7e(5): mov 0x30(%rsp),%r9d
ef83(3): test %r9d,%r9d
ef86(6): jz 0x44a(%rip)
ef8c(7): lea 0xb10d(%rip),%rcx
ef93(3): movsxd %ebx,%rbx
ef96(5): mov 0x8(%rsp),%rdi
ef9b(2): test %eax,%eax
ef9d(4): movzx 0x0(%rcx,%rbx,1),%ecx
efa1(4): lea 0x1(%rdi),%rdx
efa5(2): mov %cl,(%rdi)
efa7(6): jz 0x43d(%rip)
efad(5): mov 0x30(%rsp),%r8d
efb2(3): test %r8d,%r8d
efb5(6): jnz 0x1bb(%rip)
efbb(4): lea 0x1(%rdx),%rax
efbf(3): mov $0x42,(%rdx)
efc2(5): mov %rax,0x8(%rsp)
efc7(5): mov 0x8(%rsp),%rax
efcc(8): mov 0x88(%rsp),%rcx
efd4(9): xor $0x28,%rcx
efdd(3): mov $0x0,(%rax)
efe0(3): mov %r15,%rax
efe3(6): jnz 0x598(%rip)
efe9(7): add $0x98,%rsp
eff0(1): pop %rbx
eff1(1): pop %rbp
eff2(2): pop %r12
eff4(2): pop %r13
eff6(2): pop %r14
eff8(2): pop %r15
effa(1): ret near (%rsp)
effb(5): nop 0x0(%rax,%rax,1)
f000(3): mov %rbx,%rsi
f003(2): xor %edx,%edx
f005(4): imul %rax,%rsi
f009(3): mov %rsi,%rax
f00c(3): div %rdi,%rax
f00f(3): cmp %rbx,%rax
f012(6): jnz 0xfffffc93(%rip)
f018(2): xor %edi,%edi
f01a(3): xor %r9d,%r9d
f01d(5): jmp 0xfffffe0c(%rip)
f022(6): nop 0x0(%rax,%rax,1)
f028(3): mov %r8,%r14
f02b(3): mov %r13,%rdi
f02e(5): mov %r8,0x48(%rsp)
f033(3): sub %r15,%r14
f036(7): mov $0xffffffff,%rbp
f03d(5): call 0xffff43c3(%rip)
f042(5): lea 0x50(%rsp),%rdi
f047(5): mov $0x29,%ecx
f04c(3): mov %r14,%rdx
f04f(3): mov %r15,%rsi
f052(5): mov %rax,0x40(%rsp)
f057(5): mov %rdi,0x18(%rsp)
f05c(5): call 0xffff4574(%rip)
f061(3): mov %r12d,%ecx
f064(4): mov %ebx,0x20(%rsp)
f068(3): mov %r14,%r12
f06b(3): mov %r13,%rbx
f06e(5): mov 0x48(%rsp),%r8
f073(5): mov 0x38(%rsp),%r15
f078(5): mov 0x40(%rsp),%r13
f07d(3): mov %ecx,%r14d
f080(2): jmp 0x42(%rip)
f082(6): nop 0x0(%rax,%rax,1)
f088(5): mov 0x18(%rsp),%rax
f08d(3): sub %rbp,%r12
f090(3): sub %rbp,%r8
f093(3): mov %r8,%rdi
f096(3): mov %rbp,%rdx
f099(4): lea 0x0(%rax,%r12,1),%rsi
f09d(5): call 0xffff4553(%rip)
f0a2(3): test %r12,%r12
f0a5(3): mov %rax,%r8
f0a8(6): jz 0x510(%rip)
f0ae(3): sub %r13,%r8
f0b1(3): mov %r13,%rdx
f0b4(3): mov %rbx,%rsi
f0b7(3): mov %r8,%rdi
f0ba(5): call 0xffff4536(%rip)
f0bf(3): mov %rax,%r8
f0c2(4): movzx (%r15),%eax
f0c6(2): test %al,%al
f0c8(2): jz 0xf(%rip)
f0ca(2): cmp $0x7f,%al
f0cc(3): movzx %al,%ebp
f0cf(4): cmovnb %r12,%rbp
f0d3(4): add $0x1,%r15
f0d7(3): cmp %r12,%rbp
f0da(2): jbe 0xffffffae(%rip)
f0dc(3): mov %r14d,%eax
f0df(3): mov %r8,%r15
f0e2(3): mov %r12,%r14
f0e5(5): mov 0x18(%rsp),%rsi
f0ea(3): sub %r14,%r15
f0ed(3): mov %r14,%rdx
f0f0(3): mov %r15,%rdi
f0f3(4): mov 0x20(%rsp),%ebx
f0f7(3): mov %eax,%r12d
f0fa(5): call 0xffff44f6(%rip)
f0ff(5): jmp 0xfffffe4b(%rip)
f104(4): nop 0x0(%rax)
f108(4): mov (%rsp),%rcx
f10c(7): lea 0x288(%rcx),%rdi
f113(7): mov $0x20,0x287(%rcx)
f11a(5): mov %rdi,0x8(%rsp)
f11f(5): jmp 0xfffffe52(%rip)
f124(4): nop 0x0(%rax)
f128(4): sub $0x10,%rsp
f12c(3): mov %r15d,%edi
f12f(2): fld %st0,%st0
f131(3): fstp %st0,(%rsp)
f134(4): fstp %st0,0x30(%rsp)
f138(5): call 0xfffff9b8(%rip)
f13d(1): pop %rax
f13e(1): pop %rdx
f13f(4): fld 0x20(%rsp),%st0
f143(5): jmp 0xfffffc16(%rip)
f148(8): nop 0x0(%rax,%rax,1)
f150(4): sub $0x10,%rsp
f154(3): mov %r15d,%edi
f157(3): fstp %st0,(%rsp)
f15a(5): call 0xfffff996(%rip)
f15f(2): pop %r8
f161(2): pop %r9
f163(5): jmp 0xfffffd69(%rip)
f168(8): nop 0x0(%rax,%rax,1)
f170(4): lea 0x2(%rdi),%rdx
f174(4): mov $0x69,0x1(%rdi)
f178(5): jmp 0xfffffe43(%rip)
f17d(4): cmp $0x9,%r10
f181(6): jnbe 0x297(%rip)
f187(4): cmp $0x1,%r15d
f18b(6): jz 0x2b7(%rip)
f191(3): test %r15d,%r15d
f194(3): setz %dl
f197(2): test %edi,%edi
f199(4): setnle %r8b
f19d(3): and %r8d,%edx
f1a0(2): test %dl,%dl
f1a2(6): jz 0x287(%rip)
f1a8(4): lea 0x1(%rax),%r9d
f1ac(4): cmp $0xa,%r9d
f1b0(6): jz 0x301(%rip)
f1b6(4): add $0x30,%r9d
f1ba(4): mov (%rsp),%rax
f1be(7): lea 0x286(%rax),%r8
f1c5(7): mov %r9b,0x286(%rax)
f1cc(2): mov %ebp,%eax
f1ce(3): sub %rbp,%r8
f1d1(3): cmp $0x8,%ebp
f1d4(6): jnb 0x28d(%rip)
f1da(4): test $0x4,%bpl
f1de(6): jnz 0x388(%rip)
f1e4(2): test %eax,%eax
f1e6(2): jz 0x11(%rip)
f1e8(4): movzx (%r14),%edx
f1ec(2): test $0x2,%al
f1ee(3): mov %dl,(%r8)
f1f1(6): jnz 0x38f(%rip)
f1f7(2): xor %edi,%edi
f1f9(3): xor %r9d,%r9d
f1fc(4): nop 0x0(%rax)
f200(4): cmp $0x1,%r15d
f204(6): jz 0x17c(%rip)
f20a(3): test %r15d,%r15d
f20d(2): jnz 0x23(%rip)
f20f(3): add %r9d,%edi
f212(2): test %edi,%edi
f214(2): jle 0x1c(%rip)
f216(4): add $0x1,%rsi
f21a(2): test %ecx,%ecx
f21c(2): jz 0x14(%rip)
f21e(4): mov 0x34(%rsp),%eax
f222(3): cmp %rsi,%rax
f225(6): jz 0x1cb(%rip)
f22b(5): nop 0x0(%rax,%rax,1)
f230(3): mov %r8,%r15
f233(a): mov $0x-3689348814741910323,%rcx
f23d(3): nop (%rax)
f240(3): mov %rsi,%rax
f243(4): sub $0x1,%r15
f247(3): mul %rax,%rcx,%rdx
f24a(4): shr $0x3,%rdx
f24e(4): lea 0x0(%rdx,%rdx,4),%rax
f252(3): add %rax,%rax
f255(3): sub %rax,%rsi
f258(3): add $0x30,%esi
f25b(3): test %rdx,%rdx
f25e(3): mov %sil,(%r15)
f261(3): mov %rdx,%rsi
f264(2): jnz 0xffffffdc(%rip)
f266(5): jmp 0xfffffcda(%rip)
f26b(5): nop 0x0(%rax,%rax,1)
f270(5): mov 0x10(%rsp),%rcx
f275(4): cmp $0x1,%rcx
f279(6): jbe 0x1a9(%rip)
f27f(4): mov 0x34(%rsp),%edx
f283(5): mov $0x1,%ebx
f288(5): mov $0x1,%eax
f28d(4): imul %rdx,%rax
f291(3): cmp %rax,%rcx
f294(6): jbe 0xfffffcc5(%rip)
f29a(3): add $0x1,%ebx
f29d(3): cmp $0x8,%ebx
f2a0(2): jnz 0xffffffed(%rip)
f2a2(5): jmp 0xfffffcb7(%rip)
f2a7(9): nop 0x0(%rax,%rax,1)
f2b0(4): sub $0x10,%rsp
f2b4(7): lea 0xadab(%rip),%rcx
f2bb(7): mov $0xffffffff,%rdx
f2c2(2): fld %st0,%st0
f2c4(3): fstp %st0,(%rsp)
f2c7(5): mov 0x10(%rsp),%r14
f2cc(5): mov $0x1,%esi
f2d1(2): xor %eax,%eax
f2d3(3): mov %r14,%rdi
f2d6(4): fstp %st0,0x30(%rsp)
f2da(5): call 0xffff4596(%rip)
f2df(3): mov %r14,%rdi
f2e2(5): call 0xffff411e(%rip)
f2e7(3): mov %rax,%r14
f2ea(1): pop %rax
f2eb(1): pop %rdx
f2ec(5): cmp 0x18(%rsp),%r14
f2f1(4): fld 0x20(%rsp),%st0
f2f5(6): jbe 0xfffffaad(%rip)
f2fb(6): fld 0xadab(%rip),%st0
f301(2): fmul %st0,%st1
f303(2): fdivp %st0,%st1
f305(4): sub $0x10,%rsp
f309(7): lea 0xad50(%rip),%rcx
f310(5): mov 0x10(%rsp),%r14
f315(7): mov $0xffffffff,%rdx
f31c(5): mov $0x1,%esi
f321(2): xor %eax,%eax
f323(2): xor %ebp,%ebp
f325(3): mov %r14,%rdi
f328(3): fstp %st0,(%rsp)
f32b(5): call 0xffff4545(%rip)
f330(3): mov %r14,%rdi
f333(5): call 0xffff40cd(%rip)
f338(2): pop %r10
f33a(3): mov %rax,%r14
f33d(2): pop %r11
f33f(5): jmp 0xfffffbe1(%rip)
f344(4): nop 0x0(%rax)
f348(6): fld 0xad5e(%rip),%st0
f34e(2): fmul %st0,%st1
f350(6): fld 0xad5a(%rip),%st0
f356(2): fucomip %st2,%st0
f358(2): jbe 0xffffffab(%rip)
f35a(4): fstp %st0,0x18(%rsp)
f35e(4): sub $0x10,%rsp
f362(3): mov %r15d,%edi
f365(3): fstp %st0,(%rsp)
f368(5): call 0xfffff788(%rip)
f36d(1): pop %rbp
f36e(2): pop %r14
f370(4): fld 0x18(%rsp),%st0
f374(2): jmp 0xffffff8f(%rip)
f376(a): nop 0x0(%rax,%rax,1)
f380(3): mov %rsi,%rax
f383(3): movsxd %edi,%rdi
f386(3): and $0x1,%eax
f389(3): add %rdi,%rax
f38c(3): setnz %al
f38f(3): movzx %al,%eax
f392(3): add %eax,%r9d
f395(4): cmp $0x5,%r9d
f399(6): jnle 0xfffffe7d(%rip)
f39f(5): jmp 0xfffffe91(%rip)
f3a4(4): nop 0x0(%rax)
f3a8(4): setb %dil
f3ac(4): movzx %dil,%edi
f3b0(3): add $0x2,%edi
f3b3(5): jmp 0xfffffa76(%rip)
f3b8(8): nop 0x0(%rax,%rax,1)
f3c0(5): mov 0x8(%rsp),%r8
f3c5(2): xor %ebx,%ebx
f3c7(5): jmp 0xfffffe39(%rip)
f3cc(4): nop 0x0(%rax)
f3d0(5): mov 0x8(%rsp),%rbx
f3d5(2): test %eax,%eax
f3d7(4): lea 0x1(%rbx),%rdx
f3db(3): mov $0x6b,(%rbx)
f3de(6): jnz 0xfffffbdd(%rip)
f3e4(5): mov %rdx,0x8(%rsp)
f3e9(5): jmp 0xfffffbde(%rip)
f3ee(2): nop 
f3f0(3): cmp $0x8,%ebx
f3f3(6): jz 0xfffffe3d(%rip)
f3f9(3): add $0x1,%ebx
f3fc(4): test $0x8,%r12b
f400(6): jz 0xc2(%rip)
f406(4): lea 0xffffffff(%r8),%r15
f40a(5): mov $0x31,0xffffffff(%r8)
f40f(5): jmp 0xfffffb31(%rip)
f414(4): nop 0x0(%rax)
f418(5): mov 0x8(%rsp),%r8
f41d(5): jmp 0xfffffde3(%rip)
f422(2): xor %ebx,%ebx
f424(5): jmp 0xfffffb35(%rip)
f429(2): test %eax,%eax
f42b(6): jnz 0xfffffd8b(%rip)
f431(4): test $0x8,%r12b
f435(2): jnz 0x1f(%rip)
f437(6): mov $0x30,%r9d
f43d(5): jmp 0xfffffd7d(%rip)
f442(2): mov %eax,%edx
f444(3): and $0x1,%edx
f447(2): add %edi,%edx
f449(3): cmp $0x2,%edx
f44c(3): setnle %dl
f44f(5): jmp 0xfffffd51(%rip)
f454(5): mov 0x8(%rsp),%r8
f459(3): xor %r9d,%r9d
f45c(5): jmp 0xfffffda4(%rip)
f461(3): mov (%r14),%rax
f464(3): mov %r14,%r9
f467(3): mov %rax,(%r8)
f46a(2): mov %ebp,%eax
f46c(5): mov 0xfffffff8(%r14,%rax,1),%rdx
f471(5): mov %rdx,0xfffffff8(%r8,%rax,1)
f476(4): lea 0x8(%r8),%rdx
f47a(3): mov %r8,%rax
f47d(4): and $0xfffffff8,%rdx
f481(3): sub %rdx,%rax
f484(3): sub %rax,%r9
f487(2): add %ebp,%eax
f489(3): and $0xf8,%eax
f48c(3): cmp $0x8,%eax
f48f(6): jb 0xfffffd68(%rip)
f495(3): and $0xf8,%eax
f498(2): xor %edi,%edi
f49a(3): mov %edi,%r10d
f49d(3): add $0x8,%edi
f4a0(4): mov 0x0(%r9,%r10,1),%r11
f4a4(2): cmp %eax,%edi
f4a6(4): mov %r11,0x0(%rdx,%r10,1)
f4aa(2): jb 0xfffffff0(%rip)
f4ac(5): jmp 0xfffffd4b(%rip)
f4b1(4): lea 0x1(%r10),%rsi
f4b5(4): cmp $0xa,%rsi
f4b9(2): jz 0x57(%rip)
f4bb(2): xor %edi,%edi
f4bd(5): jmp 0xffffff74(%rip)
f4c2(3): mov %rbp,%rax
f4c5(5): mov $0x30,0xffffffff(%r8)
f4ca(3): not %rax
f4cd(3): add %rax,%r8
f4d0(3): cmp $0x8,%ebp
f4d3(2): mov %ebp,%eax
f4d5(2): jnb 0x45(%rip)
f4d7(3): and $0x4,%ebp
f4da(6): jnz 0xb7(%rip)
f4e0(2): test %eax,%eax
f4e2(6): jz 0xffffff24(%rip)
f4e8(4): movzx (%r14),%edx
f4ec(2): test $0x2,%al
f4ee(3): mov %dl,(%r8)
f4f1(6): jz 0xffffff15(%rip)
f4f7(6): movzx 0xfffffffe(%r14,%rax,1),%edx
f4fd(6): mov %dx,0xfffffffe(%r8,%rax,1)
f503(5): jmp 0xffffff03(%rip)
f508(8): nop 0x0(%rax,%rax,1)
f510(5): mov 0x8(%rsp),%r8
f515(5): jmp 0xfffffce2(%rip)
f51a(3): mov (%r14),%rax
f51d(4): lea 0x8(%r8),%rcx
f521(4): and $0xfffffff8,%rcx
f525(3): mov %rax,(%r8)
f528(2): mov %ebp,%eax
f52a(5): mov 0xfffffff8(%r14,%rax,1),%rdx
f52f(5): mov %rdx,0xfffffff8(%r8,%rax,1)
f534(3): mov %r8,%rax
f537(3): sub %rcx,%rax
f53a(3): sub %rax,%r14
f53d(2): add %ebp,%eax
f53f(3): and $0xf8,%eax
f542(3): cmp $0x8,%eax
f545(6): jb 0xfffffec1(%rip)
f54b(3): and $0xf8,%eax
f54e(2): xor %edx,%edx
f550(2): mov %edx,%esi
f552(3): add $0x8,%edx
f555(4): mov 0x0(%r14,%rsi,1),%rdi
f559(2): cmp %eax,%edx
f55b(4): mov %rdi,0x0(%rcx,%rsi,1)
f55f(2): jb 0xfffffff1(%rip)
f561(5): jmp 0xfffffea5(%rip)
f566(3): mov (%r14),%edx
f569(3): mov %edx,(%r8)
f56c(5): mov 0xfffffffc(%r14,%rax,1),%edx
f571(5): mov %edx,0xfffffffc(%r8,%rax,1)
f576(5): jmp 0xfffffc81(%rip)
f57b(5): call 0xffff3ea5(%rip)
f580(6): movzx 0xfffffffe(%r14,%rax,1),%edx
f586(6): mov %dx,0xfffffffe(%r8,%rax,1)
f58c(5): jmp 0xfffffc6b(%rip)
f591(3): mov (%r14),%edx
f594(3): mov %edx,(%r8)
f597(5): mov 0xfffffffc(%r14,%rax,1),%edx
f59c(5): mov %edx,0xfffffffc(%r8,%rax,1)
f5a1(5): jmp 0xfffffe65(%rip)
f5a6(2): test %eax,%eax
f5a8(5): mov 0x8(%rsp),%rdx
f5ad(6): jnz 0xfffffa0e(%rip)
f5b3(5): jmp 0xfffffa14(%rip)
f5b8(4): mov 0x20(%rsp),%ebx
f5bc(3): mov %rax,%r15
f5bf(3): mov %r14d,%r12d
f5c2(5): jmp 0xfffff988(%rip)

"human_options" :
f5d0(2): push %r13
f5d2(2): push %r12
f5d4(3): mov %rsi,%r13
f5d7(1): push %rbp
f5d8(1): push %rbx
f5d9(3): mov %rdx,%r12
f5dc(3): mov %rdi,%rbx
f5df(4): sub $0x18,%rsp
f5e3(9): mov $0x28,%rax
f5ec(5): mov %rax,0x8(%rsp)
f5f1(2): xor %eax,%eax
f5f3(3): test %rdi,%rdi
f5f6(6): jz 0x11a(%rip)
f5fc(2): xor %ebp,%ebp
f5fe(3): cmp $0x27,(%rbx)
f601(2): jnz 0xb(%rip)
f603(4): add $0x1,%rbx
f607(5): mov $0x4,%ebp
f60c(7): lea 0xaa85(%rip),%rdx
f613(7): lea 0x2103f6(%rip),%rsi
f61a(5): mov $0x4,%ecx
f61f(3): mov %rbx,%rdi
f622(5): call 0xffffcb2e(%rip)
f627(2): test %eax,%eax
f629(2): js 0x3f(%rip)
f62b(7): lea 0xaa66(%rip),%rdx
f632(2): cwde 
f634(8): mov $0x1,(%r12)
f63c(3): or 0x0(%rdx,%rax,4),%ebp
f63f(2): xor %eax,%eax
f641(4): mov %ebp,0x0(%r13)
f645(5): mov 0x8(%rsp),%rcx
f64a(9): xor $0x28,%rcx
f653(6): jnz 0x15e(%rip)
f659(4): add $0x18,%rsp
f65d(1): pop %rbx
f65e(1): pop %rbp
f65f(2): pop %r12
f661(2): pop %r13
f663(1): ret near (%rsp)
f664(4): nop 0x0(%rax)
f668(7): lea 0xaa17(%rip),%r8
f66f(2): xor %edx,%edx
f671(3): mov %rsp,%rsi
f674(3): mov %r12,%rcx
f677(3): mov %rbx,%rdi
f67a(5): call 0x58b6(%rip)
f67f(2): test %eax,%eax
f681(2): jnz 0x47(%rip)
f683(3): movzx (%rbx),%esi
f686(3): lea 0xffffffd0(%rsi),%edx
f689(3): cmp $0x9,%dl
f68c(2): jbe 0x2c(%rip)
f68e(4): mov (%rsp),%rcx
f692(3): cmp %rcx,%rbx
f695(2): jnz 0x14(%rip)
f697(5): jmp 0xd9(%rip)
f69c(4): nop 0x0(%rax)
f6a0(3): cmp %rcx,%rbx
f6a3(6): jz 0xcd(%rip)
f6a9(4): add $0x1,%rbx
f6ad(3): movzx (%rbx),%edi
f6b0(3): lea 0xffffffd0(%rdi),%edx
f6b3(3): cmp $0x9,%dl
f6b6(2): jnbe 0xffffffea(%rip)
f6b8(4): mov (%r12),%rdx
f6bc(4): mov %ebp,0x0(%r13)
f6c0(2): jmp 0x14(%rip)
f6c2(6): nop 0x0(%rax,%rax,1)
f6c8(4): mov (%r12),%rdx
f6cc(8): mov $0x0,0x0(%r13)
f6d4(3): test %rdx,%rdx
f6d7(6): jnz 0xffffff6e(%rip)
f6dd(7): lea 0xa992(%rip),%rdi
f6e4(5): call 0xffff3b6c(%rip)
f6e9(4): cmp $0x1,%rax
f6ed(3): sbb %rax,%rax
f6f0(5): and $0x200,%eax
f6f5(6): add $0x200,%rax
f6fb(4): mov %rax,(%r12)
f6ff(5): mov $0x4,%eax
f704(5): jmp 0xffffff41(%rip)
f709(7): nop 0x0(%rax)
f710(7): lea 0x83d1(%rip),%rdi
f717(5): call 0xffff3b39(%rip)
f71c(3): test %rax,%rax
f71f(3): mov %rax,%rbx
f722(6): jnz 0xfffffeda(%rip)
f728(7): lea 0xa93d(%rip),%rdi
f72f(5): call 0xffff3b21(%rip)
f734(3): test %rax,%rax
f737(3): mov %rax,%rbx
f73a(6): jnz 0xfffffec2(%rip)
f740(7): lea 0xa92f(%rip),%rdi
f747(5): call 0xffff3b09(%rip)
f74c(3): test %rax,%rax
f74f(2): jz 0x4b(%rip)
f751(8): mov $0x200,(%r12)
f759(2): xor %eax,%eax
f75b(8): mov $0x0,0x0(%r13)
f763(5): jmp 0xfffffee2(%rip)
f768(8): nop 0x0(%rax,%rax,1)
f770(4): cmp $0x42,0xffffffff(%rcx)
f774(2): jz 0x14(%rip)
f776(4): or $0x80,%bpl
f77a(3): or $0x20,%ebp
f77d(5): jmp 0xffffff3b(%rip)
f782(6): nop 0x0(%rax,%rax,1)
f788(6): or $0x180,%ebp
f78e(4): cmp $0x69,0xfffffffe(%rcx)
f792(6): jnz 0xffffff26(%rip)
f798(2): jmp 0xffffffe2(%rip)
f79a(8): mov $0x400,(%r12)
f7a2(2): xor %eax,%eax
f7a4(8): mov $0x0,0x0(%r13)
f7ac(5): jmp 0xfffffe99(%rip)
f7b1(5): call 0xffff3c6f(%rip)

"getuser" :
f7c0(2): push %r12
f7c2(1): push %rbp
f7c3(1): push %rbx
f7c4(7): mov 0x211c2d(%rip),%rbx
f7cb(3): test %rbx,%rbx
f7ce(2): jz 0x1f(%rip)
f7d0(2): cmp (%rbx),%edi
f7d2(2): jnz 0x12(%rip)
f7d4(2): jmp 0x6c(%rip)
f7d6(a): nop 0x0(%rax,%rax,1)
f7e0(2): cmp %edi,(%rbx)
f7e2(2): jz 0x5e(%rip)
f7e4(4): mov 0x8(%rbx),%rbx
f7e8(3): test %rbx,%rbx
f7eb(2): jnz 0xfffffff5(%rip)
f7ed(2): mov %edi,%ebp
f7ef(7): lea 0x80bd(%rip),%r12
f7f6(5): call 0xffff3bca(%rip)
f7fb(3): test %rax,%rax
f7fe(5): mov $0x18,%edi
f803(2): jz 0x15(%rip)
f805(3): mov (%rax),%r12
f808(3): mov %r12,%rdi
f80b(5): call 0xffff3bf5(%rip)
f810(4): lea 0x18(%rax),%rdi
f814(4): and $0xfffffff8,%rdi
f818(5): call 0x4d78(%rip)
f81d(4): lea 0x10(%rax),%rdi
f821(2): mov %ebp,(%rax)
f823(3): mov %r12,%rsi
f826(3): mov %rax,%rbx
f829(5): call 0xffff3ab7(%rip)
f82e(7): mov 0x211bc3(%rip),%rax
f835(7): mov %rbx,0x211bbc(%rip)
f83c(4): mov %rax,0x8(%rbx)
f840(4): cmp $0x0,0x10(%rbx)
f844(2): jz 0xc(%rip)
f846(4): lea 0x10(%rbx),%rax
f84a(1): pop %rbx
f84b(1): pop %rbp
f84c(2): pop %r12
f84e(1): ret near (%rsp)
f84f(1): nop 
f850(2): xor %eax,%eax
f852(2): jmp 0xfffffff8(%rip)

"getuidbyname" :
f860(2): push %r12
f862(1): push %rbp
f863(3): mov %rdi,%r12
f866(1): push %rbx
f867(7): mov 0x211b8a(%rip),%rbx
f86e(3): test %rbx,%rbx
f871(2): jz 0x3f(%rip)
f873(3): movzx (%rdi),%ebp
f876(2): jmp 0x13(%rip)
f878(8): nop 0x0(%rax,%rax,1)
f880(4): mov 0x8(%rbx),%rbx
f884(3): test %rbx,%rbx
f887(2): jz 0x29(%rip)
f889(4): cmp %bpl,0x10(%rbx)
f88d(2): jnz 0xfffffff3(%rip)
f88f(4): lea 0x10(%rbx),%rdi
f893(3): mov %r12,%rsi
f896(5): call 0xffff3cfa(%rip)
f89b(2): test %eax,%eax
f89d(2): jnz 0xffffffe3(%rip)
f89f(3): mov %rbx,%rax
f8a2(1): pop %rbx
f8a3(1): pop %rbp
f8a4(2): pop %r12
f8a6(1): ret near (%rsp)
f8a7(9): nop 0x0(%rax,%rax,1)
f8b0(7): mov 0x211b39(%rip),%rbx
f8b7(3): test %rbx,%rbx
f8ba(2): jz 0x36(%rip)
f8bc(5): movzx (%r12),%ebp
f8c1(2): jmp 0x10(%rip)
f8c3(5): nop 0x0(%rax,%rax,1)
f8c8(4): mov 0x8(%rbx),%rbx
f8cc(3): test %rbx,%rbx
f8cf(2): jz 0x21(%rip)
f8d1(4): cmp %bpl,0x10(%rbx)
f8d5(2): jnz 0xfffffff3(%rip)
f8d7(4): lea 0x10(%rbx),%rdi
f8db(3): mov %r12,%rsi
f8de(5): call 0xffff3cb2(%rip)
f8e3(2): test %eax,%eax
f8e5(2): jnz 0xffffffe3(%rip)
f8e7(1): pop %rbx
f8e8(2): xor %eax,%eax
f8ea(1): pop %rbp
f8eb(2): pop %r12
f8ed(1): ret near (%rsp)
f8ee(2): nop 
f8f0(3): mov %r12,%rdi
f8f3(5): call 0xffff3ccd(%rip)
f8f8(3): mov %r12,%rdi
f8fb(3): mov %rax,%rbp
f8fe(5): call 0xffff3b02(%rip)
f903(4): lea 0x18(%rax),%rdi
f907(4): and $0xfffffff8,%rdi
f90b(5): call 0x4c85(%rip)
f910(4): lea 0x10(%rax),%rdi
f914(3): mov %r12,%rsi
f917(3): mov %rax,%rbx
f91a(5): call 0xffff39c6(%rip)
f91f(3): test %rbp,%rbp
f922(2): jz 0x1e(%rip)
f924(3): mov 0x10(%rbp),%eax
f927(2): mov %eax,(%rbx)
f929(7): mov 0x211ac8(%rip),%rax
f930(7): mov %rbx,0x211ac1(%rip)
f937(4): mov %rax,0x8(%rbx)
f93b(5): jmp 0xffffff64(%rip)
f940(7): mov 0x211aa9(%rip),%rax
f947(7): mov %rbx,0x211aa2(%rip)
f94e(4): mov %rax,0x8(%rbx)
f952(2): xor %eax,%eax
f954(5): jmp 0xffffff4e(%rip)

"getgroup" :
f960(2): push %r12
f962(1): push %rbp
f963(1): push %rbx
f964(7): mov 0x211a7d(%rip),%rbx
f96b(3): test %rbx,%rbx
f96e(2): jz 0x1f(%rip)
f970(2): cmp (%rbx),%edi
f972(2): jnz 0x12(%rip)
f974(2): jmp 0x6c(%rip)
f976(a): nop 0x0(%rax,%rax,1)
f980(2): cmp %edi,(%rbx)
f982(2): jz 0x5e(%rip)
f984(4): mov 0x8(%rbx),%rbx
f988(3): test %rbx,%rbx
f98b(2): jnz 0xfffffff5(%rip)
f98d(2): mov %edi,%ebp
f98f(7): lea 0x7f1d(%rip),%r12
f996(5): call 0xffff3aca(%rip)
f99b(3): test %rax,%rax
f99e(5): mov $0x18,%edi
f9a3(2): jz 0x15(%rip)
f9a5(3): mov (%rax),%r12
f9a8(3): mov %r12,%rdi
f9ab(5): call 0xffff3a55(%rip)
f9b0(4): lea 0x18(%rax),%rdi
f9b4(4): and $0xfffffff8,%rdi
f9b8(5): call 0x4bd8(%rip)
f9bd(4): lea 0x10(%rax),%rdi
f9c1(2): mov %ebp,(%rax)
f9c3(3): mov %r12,%rsi
f9c6(3): mov %rax,%rbx
f9c9(5): call 0xffff3917(%rip)
f9ce(7): mov 0x211a13(%rip),%rax
f9d5(7): mov %rbx,0x211a0c(%rip)
f9dc(4): mov %rax,0x8(%rbx)
f9e0(4): cmp $0x0,0x10(%rbx)
f9e4(2): jz 0xc(%rip)
f9e6(4): lea 0x10(%rbx),%rax
f9ea(1): pop %rbx
f9eb(1): pop %rbp
f9ec(2): pop %r12
f9ee(1): ret near (%rsp)
f9ef(1): nop 
f9f0(2): xor %eax,%eax
f9f2(2): jmp 0xfffffff8(%rip)

"getgidbyname" :
fa00(2): push %r12
fa02(1): push %rbp
fa03(3): mov %rdi,%r12
fa06(1): push %rbx
fa07(7): mov 0x2119da(%rip),%rbx
fa0e(3): test %rbx,%rbx
fa11(2): jz 0x3f(%rip)
fa13(3): movzx (%rdi),%ebp
fa16(2): jmp 0x13(%rip)
fa18(8): nop 0x0(%rax,%rax,1)
fa20(4): mov 0x8(%rbx),%rbx
fa24(3): test %rbx,%rbx
fa27(2): jz 0x29(%rip)
fa29(4): cmp %bpl,0x10(%rbx)
fa2d(2): jnz 0xfffffff3(%rip)
fa2f(4): lea 0x10(%rbx),%rdi
fa33(3): mov %r12,%rsi
fa36(5): call 0xffff3b5a(%rip)
fa3b(2): test %eax,%eax
fa3d(2): jnz 0xffffffe3(%rip)
fa3f(3): mov %rbx,%rax
fa42(1): pop %rbx
fa43(1): pop %rbp
fa44(2): pop %r12
fa46(1): ret near (%rsp)
fa47(9): nop 0x0(%rax,%rax,1)
fa50(7): mov 0x211989(%rip),%rbx
fa57(3): test %rbx,%rbx
fa5a(2): jz 0x36(%rip)
fa5c(5): movzx (%r12),%ebp
fa61(2): jmp 0x10(%rip)
fa63(5): nop 0x0(%rax,%rax,1)
fa68(4): mov 0x8(%rbx),%rbx
fa6c(3): test %rbx,%rbx
fa6f(2): jz 0x21(%rip)
fa71(4): cmp %bpl,0x10(%rbx)
fa75(2): jnz 0xfffffff3(%rip)
fa77(4): lea 0x10(%rbx),%rdi
fa7b(3): mov %r12,%rsi
fa7e(5): call 0xffff3b12(%rip)
fa83(2): test %eax,%eax
fa85(2): jnz 0xffffffe3(%rip)
fa87(1): pop %rbx
fa88(2): xor %eax,%eax
fa8a(1): pop %rbp
fa8b(2): pop %r12
fa8d(1): ret near (%rsp)
fa8e(2): nop 
fa90(3): mov %r12,%rdi
fa93(5): call 0xffff3b6d(%rip)
fa98(3): mov %r12,%rdi
fa9b(3): mov %rax,%rbp
fa9e(5): call 0xffff3962(%rip)
faa3(4): lea 0x18(%rax),%rdi
faa7(4): and $0xfffffff8,%rdi
faab(5): call 0x4ae5(%rip)
fab0(4): lea 0x10(%rax),%rdi
fab4(3): mov %r12,%rsi
fab7(3): mov %rax,%rbx
faba(5): call 0xffff3826(%rip)
fabf(3): test %rbp,%rbp
fac2(2): jz 0x1e(%rip)
fac4(3): mov 0x10(%rbp),%eax
fac7(2): mov %eax,(%rbx)
fac9(7): mov 0x211918(%rip),%rax
fad0(7): mov %rbx,0x211911(%rip)
fad7(4): mov %rax,0x8(%rbx)
fadb(5): jmp 0xffffff64(%rip)
fae0(7): mov 0x2118f9(%rip),%rax
fae7(7): mov %rbx,0x2118f2(%rip)
faee(4): mov %rax,0x8(%rbx)
faf2(2): xor %eax,%eax
faf4(5): jmp 0xffffff4e(%rip)

"imaxtostr" :
fb00(3): test %rdi,%rdi
fb03(4): lea 0x14(%rsi),%rcx
fb07(4): mov $0x0,0x14(%rsi)
fb0b(a): mov $0x7378697629483820647,%r9
fb15(a): mov $0x-3689348814741910323,%rsi
fb1f(6): mov $0x30,%r8d
fb25(2): js 0x3e(%rip)
fb27(9): nop 0x0(%rax,%rax,1)
fb30(3): mov %rdi,%rax
fb33(4): sub $0x1,%rcx
fb37(3): mul %rax,%rsi,%rdx
fb3a(4): shr $0x3,%rdx
fb3e(4): lea 0x0(%rdx,%rdx,4),%rax
fb42(3): add %rax,%rax
fb45(3): sub %rax,%rdi
fb48(3): add $0x30,%edi
fb4b(3): test %rdx,%rdx
fb4e(3): mov %dil,(%rcx)
fb51(3): mov %rdx,%rdi
fb54(2): jnz 0xffffffdc(%rip)
fb56(3): mov %rcx,%rax
fb59(1): ret near (%rsp)
fb5a(6): nop 0x0(%rax,%rax,1)
fb60(3): mov %rsi,%rcx
fb63(3): mov %rdi,%rax
fb66(4): lea 0xffffffff(%rcx),%rsi
fb6a(3): imul %rax,%r9,%rdx
fb6d(3): mov %rdi,%rax
fb70(4): sar $0x3f,%rax
fb74(4): sar $0x2,%rdx
fb78(3): sub %rax,%rdx
fb7b(4): lea 0x0(%rdx,%rdx,4),%rax
fb7f(4): lea 0x0(%r8,%rax,2),%eax
fb83(2): sub %edi,%eax
fb85(3): test %rdx,%rdx
fb88(3): mov %rdx,%rdi
fb8b(3): mov %al,0xffffffff(%rcx)
fb8e(2): jnz 0xffffffd2(%rip)
fb90(4): sub $0x2,%rcx
fb94(4): mov $0x2d,0xffffffff(%rsi)
fb98(3): mov %rcx,%rax
fb9b(1): ret near (%rsp)

"umaxtostr" :
fba0(4): lea 0x14(%rsi),%rcx
fba4(4): mov $0x0,0x14(%rsi)
fba8(a): mov $0x-3689348814741910323,%rsi
fbb2(6): nop 0x0(%rax,%rax,1)
fbb8(3): mov %rdi,%rax
fbbb(4): sub $0x1,%rcx
fbbf(3): mul %rax,%rsi,%rdx
fbc2(4): shr $0x3,%rdx
fbc6(4): lea 0x0(%rdx,%rdx,4),%rax
fbca(3): add %rax,%rax
fbcd(3): sub %rax,%rdi
fbd0(3): add $0x30,%edi
fbd3(3): test %rdx,%rdx
fbd6(3): mov %dil,(%rcx)
fbd9(3): mov %rdx,%rdi
fbdc(2): jnz 0xffffffdc(%rip)
fbde(3): mov %rcx,%rax
fbe1(1): ret near (%rsp)

"mbsalign" :
fbf0(2): push %r15
fbf2(2): push %r14
fbf4(3): mov %rdi,%r14
fbf7(2): push %r13
fbf9(2): push %r12
fbfb(3): mov %rsi,%r13
fbfe(1): push %rbp
fbff(1): push %rbx
fc00(3): mov %r9d,%ebx
fc03(3): mov %rcx,%r12
fc06(4): sub $0x38,%rsp
fc0a(5): mov %rdx,0x10(%rsp)
fc0f(5): mov %r8d,0x1c(%rsp)
fc14(5): call 0xffff37ec(%rip)
fc19(3): test $0x2,%bl
fc1c(3): mov %rax,%r15
fc1f(5): mov %rax,0x8(%rsp)
fc24(6): jz 0x16c(%rip)
fc2a(3): mov %r15,%rbp
fc2d(8): mov $0x0,(%rsp)
fc35(9): mov $0x0,0x8(%rsp)
fc3e(4): mov (%r12),%rax
fc42(3): cmp %rbp,%rax
fc45(6): jnb 0x114(%rip)
fc4b(3): mov %rax,%r15
fc4e(2): xor %edx,%edx
fc50(4): mov %rax,(%r12)
fc54(4): mov 0x1c(%rsp),%eax
fc58(2): test %eax,%eax
fc5a(6): jz 0x121(%rip)
fc60(2): xor %ebp,%ebp
fc62(3): cmp $0x1,%eax
fc65(2): jz 0xe(%rip)
fc67(3): mov %rdx,%rbp
fc6a(3): and $0x1,%edx
fc6d(3): shr $0x1,%rbp
fc70(3): add %rbp,%rdx
fc73(3): test $0x4,%bl
fc76(4): lea 0x0(%rdx,%r15,1),%r12
fc7a(2): jz 0x7(%rip)
fc7c(3): mov %r15,%r12
fc7f(2): xor %edx,%edx
fc81(3): and $0x8,%ebx
fc84(6): jnz 0x104(%rip)
fc8a(3): add %rbp,%r12
fc8d(5): mov 0x10(%rsp),%rax
fc92(3): test %rax,%rax
fc95(6): jz 0x8c(%rip)
fc9b(5): lea 0xffffffff(%r13,%rax,1),%rbx
fca0(4): lea 0xffffffff(%rdx),%rax
fca4(3): cmp %rbx,%r13
fca7(2): jnb 0x28(%rip)
fca9(3): test %rdx,%rdx
fcac(2): jz 0x23(%rip)
fcae(2): nop 
fcb0(4): add $0x1,%r13
fcb4(5): mov $0x20,0xffffffff(%r13)
fcb9(3): cmp %r13,%rbx
fcbc(4): setnbe %sil
fcc0(3): test %rax,%rax
fcc3(3): setnz %dl
fcc6(4): sub $0x1,%rax
fcca(3): test %dl,%sil
fccd(2): jnz 0xffffffe3(%rip)
fccf(3): mov %rbx,%rdx
fcd2(5): mov $0x0,0x0(%r13)
fcd7(3): mov %r14,%rsi
fcda(3): sub %r13,%rdx
fcdd(3): mov %r13,%rdi
fce0(3): cmp %r15,%rdx
fce3(4): cmovnbe %r15,%rdx
fce7(5): call 0xffff3a59(%rip)
fcec(3): cmp %rax,%rbx
fcef(4): lea 0xffffffff(%rbp),%rdx
fcf3(2): jbe 0x2b(%rip)
fcf5(3): test %rbp,%rbp
fcf8(2): jz 0x26(%rip)
fcfa(6): nop 0x0(%rax,%rax,1)
fd00(4): add $0x1,%rax
fd04(3): test %rdx,%rdx
fd07(4): mov $0x20,0xffffffff(%rax)
fd0b(4): setnz %sil
fd0f(3): cmp %rax,%rbx
fd12(3): setnbe %cl
fd15(4): sub $0x1,%rdx
fd19(3): test %cl,%sil
fd1c(2): jnz 0xffffffe4(%rip)
fd1e(3): mov $0x0,(%rax)
fd21(4): mov (%rsp),%rdi
fd25(5): call 0xffff3b5b(%rip)
fd2a(5): mov 0x8(%rsp),%rdi
fd2f(5): call 0xffff3b51(%rip)
fd34(4): add $0x38,%rsp
fd38(3): mov %r12,%rax
fd3b(1): pop %rbx
fd3c(1): pop %rbp
fd3d(2): pop %r12
fd3f(2): pop %r13
fd41(2): pop %r14
fd43(2): pop %r15
fd45(1): ret near (%rsp)
fd46(a): nop 0x0(%rax,%rax,1)
fd50(9): mov $0x0,0x8(%rsp)
fd59(3): cmp %rax,%rbp
fd5c(6): jnb 0x24e(%rip)
fd62(3): sub %rbp,%rax
fd65(3): mov %rax,%rdx
fd68(3): mov %rbp,%rax
fd6b(4): mov %rax,(%r12)
fd6f(4): mov 0x1c(%rsp),%eax
fd73(2): test %eax,%eax
fd75(6): jnz 0xfffffeeb(%rip)
fd7b(3): mov %rdx,%rbp
fd7e(2): xor %edx,%edx
fd80(5): jmp 0xfffffef3(%rip)
fd85(3): nop (%rax)
fd88(2): xor %ebp,%ebp
fd8a(5): jmp 0xffffff03(%rip)
fd8f(1): nop 
fd90(5): call 0xffff3660(%rip)
fd95(4): cmp $0x1,%rax
fd99(6): jbe 0xfffffe91(%rip)
fd9f(2): xor %edx,%edx
fda1(2): xor %edi,%edi
fda3(3): mov %r14,%rsi
fda6(5): call 0xffff35aa(%rip)
fdab(4): cmp $0xffffffff,%rax
fdaf(2): jnz 0x31(%rip)
fdb1(3): test $0x1,%bl
fdb4(6): jnz 0xfffffe76(%rip)
fdba(8): mov $0x0,(%rsp)
fdc2(9): mov $0x0,0x8(%rsp)
fdcb(7): mov $0xffffffff,%r12
fdd2(5): jmp 0xffffff4f(%rip)
fdd7(9): nop 0x0(%rax,%rax,1)
fde0(4): lea 0x1(%rax),%rbp
fde4(8): lea 0x0(,%rbp,4),%rax
fdec(3): mov %rax,%rdi
fdef(5): mov %rax,0x20(%rsp)
fdf4(5): call 0xffff3a94(%rip)
fdf9(3): test %rax,%rax
fdfc(4): mov %rax,(%rsp)
fe00(6): jz 0x185(%rip)
fe06(4): mov (%rsp),%rdi
fe0a(3): mov %rbp,%rdx
fe0d(3): mov %r14,%rsi
fe10(5): call 0xffff3540(%rip)
fe15(3): test %rax,%rax
fe18(6): jz 0x10c(%rip)
fe1e(4): mov (%rsp),%rax
fe22(5): mov 0x20(%rsp),%rcx
fe27(8): mov $0x0,0xfffffffc(%rax,%rcx,1)
fe2f(2): mov (%rax),%edi
fe31(3): mov %rax,%rdx
fe34(2): test %edi,%edi
fe36(6): jz 0xff(%rip)
fe3c(5): mov $0x0,0x20(%rsp)
fe41(7): nop 0x0(%rax)
fe48(5): mov %rdx,0x28(%rsp)
fe4d(5): call 0xffff39e3(%rip)
fe52(2): test %eax,%eax
fe54(5): mov 0x28(%rsp),%rdx
fe59(2): jnz 0xd(%rip)
fe5b(6): mov $0xfffd,(%rdx)
fe61(5): mov $0x1,0x20(%rsp)
fe66(4): add $0x4,%rdx
fe6a(2): mov (%rdx),%edi
fe6c(2): test %edi,%edi
fe6e(2): jnz 0xffffffda(%rip)
fe70(4): mov (%rsp),%rdi
fe74(3): mov %rbp,%rsi
fe77(5): call 0xffff34b9(%rip)
fe7c(5): cmp $0x0,0x20(%rsp)
fe81(3): movsxd %eax,%rbp
fe84(6): jz 0xc4(%rip)
fe8a(4): mov (%rsp),%rsi
fe8e(2): xor %edx,%edx
fe90(2): xor %edi,%edi
fe92(5): call 0xffff391e(%rip)
fe97(4): add $0x1,%rax
fe9b(5): mov %rax,0x20(%rsp)
fea0(5): mov 0x20(%rsp),%rdi
fea5(5): call 0xffff39e3(%rip)
feaa(3): test %rax,%rax
fead(5): mov %rax,0x8(%rsp)
feb2(6): jz 0xbe(%rip)
feb8(4): mov (%rsp),%r15
febc(4): mov (%r12),%r14
fec0(3): mov (%r15),%edi
fec3(2): test %edi,%edi
fec5(6): jz 0xda(%rip)
fecb(2): xor %ebp,%ebp
fecd(2): jmp 0x11(%rip)
fecf(1): nop 
fed0(4): add $0x4,%r15
fed4(3): mov (%r15),%edi
fed7(3): mov %rdx,%rbp
feda(2): test %edi,%edi
fedc(2): jz 0x23(%rip)
fede(5): call 0xffff3782(%rip)
fee3(3): cmp $0xff,%eax
fee6(3): movsxd %eax,%rdx
fee9(2): jnz 0xe(%rip)
feeb(7): mov $0xfffd,(%r15)
fef2(5): mov $0x1,%edx
fef7(3): add %rbp,%rdx
fefa(3): cmp %rdx,%r14
fefd(2): jnb 0xffffffd3(%rip)
feff(5): mov 0x8(%rsp),%r14
ff04(5): mov 0x20(%rsp),%rdx
ff09(4): mov (%rsp),%rsi
ff0d(7): mov $0x0,(%r15)
ff14(3): mov %r14,%rdi
ff17(5): call 0xffff3899(%rip)
ff1c(3): mov %rax,%r15
ff1f(5): jmp 0xfffffd1f(%rip)
ff24(3): mov %r15,%rbp
ff27(9): mov $0x0,0x8(%rsp)
ff30(5): jmp 0xfffffd0e(%rip)
ff35(4): mov (%rsp),%rdi
ff39(3): mov %rbp,%rsi
ff3c(5): call 0xffff33f4(%rip)
ff41(3): movsxd %eax,%rbp
ff44(4): nop 0x0(%rax)
ff48(4): mov (%r12),%rax
ff4c(3): cmp %rbp,%rax
ff4f(6): jnb 0xfffffe01(%rip)
ff55(5): mov 0x8(%rsp),%rax
ff5a(4): add $0x1,%rax
ff5e(5): mov %rax,0x20(%rsp)
ff63(5): jmp 0xffffff3d(%rip)
ff68(8): nop 0x0(%rax,%rax,1)
ff70(3): test $0x1,%bl
ff73(6): jnz 0xfffffccb(%rip)
ff79(7): mov $0xffffffff,%r12
ff80(5): jmp 0xfffffda1(%rip)
ff85(3): test $0x1,%bl
ff88(3): mov %r15,%rbp
ff8b(9): mov $0x0,0x8(%rsp)
ff94(6): jnz 0xfffffcaa(%rip)
ff9a(5): jmp 0xfffffe20(%rip)
ff9f(4): mov (%rsp),%r15
ffa3(2): xor %ebp,%ebp
ffa5(5): jmp 0xffffff5a(%rip)
ffaa(3): mov %rbp,%rax
ffad(2): xor %edx,%edx
ffaf(5): jmp 0xfffffca1(%rip)

"ambsalign" :
ffc0(2): push %r15
ffc2(2): push %r14
ffc4(3): mov %rdi,%r15
ffc7(2): push %r13
ffc9(2): push %r12
ffcb(3): xor %r12d,%r12d
ffce(1): push %rbp
ffcf(1): push %rbx
ffd0(3): mov %rsi,%rbp
ffd3(4): sub $0x18,%rsp
ffd7(3): mov (%rsi),%r13
ffda(4): mov %edx,0x8(%rsp)
ffde(4): mov %ecx,0xc(%rsp)
ffe2(3): mov %r13,%rax
ffe5(3): nop (%rax)
ffe8(4): lea 0x1(%rax),%rbx
ffec(3): mov %r12,%rdi
ffef(3): mov %rbx,%rsi
fff2(5): call 0xffff36ee(%rip)
fff7(3): test %rax,%rax
fffa(3): mov %rax,%r14
fffd(2): jz 0x43(%rip)
ffff(5): mov 0xc(%rsp),%r9d
10004(5): mov 0x8(%rsp),%r8d
10009(3): mov %rbp,%rcx
1000c(4): mov %r13,0x0(%rbp)
10010(3): mov %rbx,%rdx
10013(3): mov %rax,%rsi
10016(3): mov %r15,%rdi
10019(5): call 0xfffffbd7(%rip)
1001e(4): cmp $0xffffffff,%rax
10022(2): jz 0x2e(%rip)
10024(3): cmp %rax,%rbx
10027(3): mov %r14,%r12
1002a(2): jbe 0xffffffbe(%rip)
1002c(4): add $0x18,%rsp
10030(3): mov %r14,%rax
10033(1): pop %rbx
10034(1): pop %rbp
10035(2): pop %r12
10037(2): pop %r13
10039(2): pop %r14
1003b(2): pop %r15
1003d(1): ret near (%rsp)
1003e(2): nop 
10040(3): mov %r12,%rdi
10043(5): call 0xffff383d(%rip)
10048(2): jmp 0xffffffe4(%rip)
1004a(6): nop 0x0(%rax,%rax,1)
10050(3): mov %r14,%rdi
10053(3): xor %r14d,%r14d
10056(5): call 0xffff382a(%rip)
1005b(2): jmp 0xffffffd1(%rip)

"mbsnwidth" :
10060(2): push %r15
10062(2): push %r14
10064(2): push %r13
10066(2): push %r12
10068(4): lea 0x0(%rdi,%rsi,1),%r13
1006c(1): push %rbp
1006d(1): push %rbx
1006e(3): mov %rdi,%rbx
10071(4): sub $0x38,%rsp
10075(9): mov $0x28,%rax
1007e(5): mov %rax,0x28(%rsp)
10083(2): xor %eax,%eax
10085(4): mov %edx,0xc(%rsp)
10089(5): call 0xffff3367(%rip)
1008e(4): cmp $0x1,%rax
10092(6): jbe 0x136(%rip)
10098(2): xor %ebp,%ebp
1009a(3): cmp %r13,%rbx
1009d(6): jnb 0xf0(%rip)
100a3(5): lea 0x20(%rsp),%r12
100a8(5): lea 0x1c(%rsp),%r14
100ad(2): jmp 0x1e(%rip)
100af(1): nop 
100b0(2): cmp $0x25,%al
100b2(2): jnl 0x9(%rip)
100b4(3): sub $0x20,%eax
100b7(2): cmp $0x3,%al
100b9(2): jnbe 0x28(%rip)
100bb(4): add $0x1,%rbx
100bf(3): add $0x1,%ebp
100c2(3): cmp %r13,%rbx
100c5(6): jnb 0xc8(%rip)
100cb(3): movzx (%rbx),%eax
100ce(2): cmp $0x3f,%al
100d0(2): jle 0xffffffe0(%rip)
100d2(2): cmp $0x41,%al
100d4(2): jl 0xd(%rip)
100d6(2): cmp $0x5f,%al
100d8(2): jle 0xffffffe3(%rip)
100da(3): sub $0x61,%eax
100dd(2): cmp $0x1d,%al
100df(2): jbe 0xffffffdc(%rip)
100e1(8): mov $0x0,(%r12)
100e9(2): jmp 0x27(%rip)
100eb(5): nop 0x0(%rax,%rax,1)
100f0(5): mov $0x7fffffff,%ecx
100f5(2): sub %ebp,%ecx
100f7(2): cmp %eax,%ecx
100f9(6): jl 0x117(%rip)
100ff(2): add %eax,%ebp
10101(3): mov %r12,%rdi
10104(3): add %r15,%rbx
10107(5): call 0xffff3719(%rip)
1010c(2): test %eax,%eax
1010e(2): jnz 0xffffffb4(%rip)
10110(3): mov %r13,%rdx
10113(3): mov %r12,%rcx
10116(3): mov %rbx,%rsi
10119(3): sub %rbx,%rdx
1011c(3): mov %r14,%rdi
1011f(5): call 0x5231(%rip)
10124(4): cmp $0xffffffff,%rax
10128(3): mov %rax,%r15
1012b(2): jz 0x4d(%rip)
1012d(4): cmp $0xfffffffe,%rax
10131(2): jz 0x7f(%rip)
10133(4): mov 0x1c(%rsp),%edi
10137(3): test %rax,%rax
1013a(5): mov $0x1,%eax
1013f(4): cmove %rax,%r15
10143(5): call 0xffff351d(%rip)
10148(2): test %eax,%eax
1014a(2): jns 0xffffffa6(%rip)
1014c(5): test $0x2,0xc(%rsp)
10151(2): jnz 0x37(%rip)
10153(4): mov 0x1c(%rsp),%edi
10157(5): call 0xffff31c9(%rip)
1015c(2): test %eax,%eax
1015e(2): jnz 0xffffffa3(%rip)
10160(6): cmp $0x7fffffff,%ebp
10166(6): jz 0xaa(%rip)
1016c(3): add $0x1,%ebp
1016f(2): jmp 0xffffff92(%rip)
10171(7): nop 0x0(%rax)
10178(5): test $0x1,0xc(%rsp)
1017d(6): jz 0xffffff3e(%rip)
10183(5): nop 0x0(%rax,%rax,1)
10188(5): mov $0xffffffff,%ebp
1018d(5): mov 0x28(%rsp),%rsi
10192(9): xor $0x28,%rsi
1019b(2): mov %ebp,%eax
1019d(2): jnz 0x7d(%rip)
1019f(4): add $0x38,%rsp
101a3(1): pop %rbx
101a4(1): pop %rbp
101a5(2): pop %r12
101a7(2): pop %r13
101a9(2): pop %r14
101ab(2): pop %r15
101ad(1): ret near (%rsp)
101ae(2): nop 
101b0(5): test $0x1,0xc(%rsp)
101b5(2): jnz 0xffffffd3(%rip)
101b7(3): add $0x1,%ebp
101ba(3): mov %r13,%rbx
101bd(5): jmp 0xffffff05(%rip)
101c2(6): nop 0x0(%rax,%rax,1)
101c8(2): xor %ebp,%ebp
101ca(3): cmp %r13,%rbx
101cd(2): jnb 0xffffffc0(%rip)
101cf(5): call 0xffff3691(%rip)
101d4(4): mov 0xc(%rsp),%edx
101d8(3): mov (%rax),%rcx
101db(2): xor %ebp,%ebp
101dd(3): and $0x2,%edx
101e0(4): add $0x1,%rbx
101e4(4): movzx 0xffffffff(%rbx),%eax
101e8(4): movzx 0x0(%rcx,%rax,2),%eax
101ec(3): test $0x40,%ah
101ef(2): jnz 0xa(%rip)
101f1(2): test %edx,%edx
101f3(2): jnz 0xffffff95(%rip)
101f5(2): test $0x2,%al
101f7(2): jnz 0xd(%rip)
101f9(6): cmp $0x7fffffff,%ebp
101ff(2): jz 0xffffff8e(%rip)
10201(3): add $0x1,%ebp
10204(3): cmp %rbx,%r13
10207(2): jnz 0xffffffd9(%rip)
10209(2): jmp 0xffffff84(%rip)
1020b(5): nop 0x0(%rax,%rax,1)
10210(5): mov $0x7fffffff,%ebp
10215(5): jmp 0xffffff78(%rip)
1021a(5): call 0xffff3206(%rip)

"gnu_mbswidth" :
10220(1): push %rbp
10221(1): push %rbx
10222(2): mov %esi,%ebp
10224(3): mov %rdi,%rbx
10227(4): sub $0x8,%rsp
1022b(5): call 0xffff31d5(%rip)
10230(4): add $0x8,%rsp
10234(2): mov %ebp,%edx
10236(3): mov %rbx,%rdi
10239(1): pop %rbx
1023a(1): pop %rbp
1023b(3): mov %rax,%rsi
1023e(5): jmp 0xfffffe22(%rip)

"mpsort_with_tmp" :
10250(2): push %r15
10252(2): push %r14
10254(2): push %r13
10256(2): push %r12
10258(3): mov %rdi,%r13
1025b(1): push %rbp
1025c(1): push %rbx
1025d(3): mov %rcx,%rbx
10260(4): sub $0x38,%rsp
10264(4): cmp $0x2,%rsi
10268(4): mov %rsi,(%rsp)
1026c(5): mov %rdx,0x10(%rsp)
10271(2): jnbe 0x2f(%rip)
10273(2): jnz 0x1d(%rip)
10275(4): mov 0x8(%rdi),%r12
10279(3): mov (%rdi),%rbp
1027c(3): mov %r12,%rsi
1027f(3): mov %rbp,%rdi
10282(2): call %rcx
10284(2): test %eax,%eax
10286(2): jle 0xa(%rip)
10288(4): mov %r12,0x0(%r13)
1028c(4): mov %rbp,0x8(%r13)
10290(4): add $0x38,%rsp
10294(1): pop %rbx
10295(1): pop %rbp
10296(2): pop %r12
10298(2): pop %r13
1029a(2): pop %r14
1029c(2): pop %r15
1029e(1): ret near (%rsp)
1029f(1): nop 
102a0(4): mov (%rsp),%rax
102a4(5): mov 0x10(%rsp),%r15
102a9(3): mov %rax,%rcx
102ac(3): mov %rax,%rsi
102af(3): mov %r15,%rdx
102b2(3): shr $0x1,%rcx
102b5(4): lea 0x0(%rdi,%rcx,8),%rdi
102b9(3): sub %rcx,%rsi
102bc(3): mov %rcx,%r14
102bf(5): mov %rcx,0x18(%rsp)
102c4(3): mov %rbx,%rcx
102c7(5): mov %rdi,0x28(%rsp)
102cc(5): call 0xffffff84(%rip)
102d1(4): cmp $0x1,%r14
102d5(6): jnz 0xcb(%rip)
102db(4): mov 0x0(%r13),%r14
102df(3): mov %r14,(%r15)
102e2(5): mov 0x28(%rsp),%rax
102e7(5): mov 0x18(%rsp),%r15
102ec(3): xor %r12d,%r12d
102ef(9): mov $0x0,0x8(%rsp)
102f8(3): mov (%rax),%rbp
102fb(5): nop 0x0(%rax,%rax,1)
10300(3): mov %rbp,%rsi
10303(3): mov %r14,%rdi
10306(4): add $0x1,%r12
1030a(2): call %rbx
1030c(2): test %eax,%eax
1030e(2): jle 0x26(%rip)
10310(4): add $0x1,%r15
10314(4): cmp %r15,(%rsp)
10318(5): mov %rbp,0xfffffff8(%r13,%r12,8)
1031d(2): jz 0x43(%rip)
1031f(5): mov 0x0(%r13,%r15,8),%rbp
10324(3): mov %r14,%rdi
10327(4): add $0x1,%r12
1032b(3): mov %rbp,%rsi
1032e(2): call %rbx
10330(2): test %eax,%eax
10332(2): jnle 0xffffffde(%rip)
10334(6): add $0x1,0x8(%rsp)
1033a(5): mov %r14,0xfffffff8(%r13,%r12,8)
1033f(5): mov 0x8(%rsp),%rax
10344(5): cmp %rax,0x18(%rsp)
10349(6): jz 0xffffff47(%rip)
1034f(5): mov 0x10(%rsp),%rdx
10354(4): mov 0x0(%rdx,%rax,8),%r14
10358(2): jmp 0xffffffa8(%rip)
1035a(6): nop 0x0(%rax,%rax,1)
10360(5): mov 0x8(%rsp),%rax
10365(5): lea 0x0(%r13,%r12,8),%rdi
1036a(5): mov 0x18(%rsp),%r12
1036f(5): mov 0x10(%rsp),%rcx
10374(4): add $0x38,%rsp
10378(1): pop %rbx
10379(3): sub %rax,%r12
1037c(1): pop %rbp
1037d(8): lea 0x0(,%r12,8),%rdx
10385(4): lea 0x0(%rcx,%rax,8),%rsi
10389(2): pop %r12
1038b(2): pop %r13
1038d(2): pop %r14
1038f(2): pop %r15
10391(5): jmp 0xffff325f(%rip)
10396(a): nop 0x0(%rax,%rax,1)
103a0(4): mov (%rsp),%r14
103a4(5): mov 0x10(%rsp),%r12
103a9(3): mov %rbx,%rcx
103ac(5): mov 0x18(%rsp),%rsi
103b1(4): shr $0x2,%r14
103b5(3): mov %r12,%rdx
103b8(5): lea 0x0(%r13,%r14,8),%r15
103bd(3): sub %r14,%rsi
103c0(5): mov %r14,0x20(%rsp)
103c5(3): mov %r14,%rbp
103c8(3): mov %r15,%rdi
103cb(5): call 0xfffffe85(%rip)
103d0(3): mov %r14,%rsi
103d3(3): mov %rbx,%rcx
103d6(3): mov %r12,%rdx
103d9(3): mov %r13,%rdi
103dc(5): call 0xfffffe74(%rip)
103e1(4): mov 0x0(%r13),%r14
103e5(3): mov (%r15),%r15
103e8(9): mov $0x0,0x8(%rsp)
103f1(7): nop 0x0(%rax)
103f8(3): mov %r15,%rsi
103fb(3): mov %r14,%rdi
103fe(4): add $0x8,%r12
10402(2): call %rbx
10404(2): test %eax,%eax
10406(2): jle 0x27(%rip)
10408(4): add $0x1,%rbp
1040c(5): cmp %rbp,0x18(%rsp)
10411(5): mov %r15,0xfffffff8(%r12)
10416(2): jz 0x49(%rip)
10418(5): mov 0x0(%r13,%rbp,8),%r15
1041d(3): mov %r14,%rdi
10420(4): add $0x8,%r12
10424(3): mov %r15,%rsi
10427(2): call %rbx
10429(2): test %eax,%eax
1042b(2): jnle 0xffffffdd(%rip)
1042d(6): add $0x1,0x8(%rsp)
10433(5): mov %r14,0xfffffff8(%r12)
10438(5): mov 0x8(%rsp),%rax
1043d(5): cmp %rax,0x20(%rsp)
10442(2): jz 0xe(%rip)
10444(5): mov 0x0(%r13,%rax,8),%r14
10449(2): jmp 0xffffffaf(%rip)
1044b(5): nop 0x0(%rax,%rax,1)
10450(5): mov 0x18(%rsp),%rax
10455(5): mov %rbp,0x8(%rsp)
1045a(5): mov %rax,0x20(%rsp)
1045f(5): mov 0x8(%rsp),%rax
10464(5): mov 0x20(%rsp),%rdx
10469(3): mov %r12,%rdi
1046c(3): sub %rax,%rdx
1046f(5): lea 0x0(%r13,%rax,8),%rsi
10474(4): shl/sal $0x3,%rdx
10478(5): call 0xffff3178(%rip)
1047d(5): mov 0x10(%rsp),%rax
10482(3): mov (%rax),%r14
10485(5): jmp 0xfffffe5d(%rip)

"mpsort" :
10490(4): lea 0x0(%rdi,%rsi,8),%rax
10494(3): mov %rdx,%rcx
10497(3): mov %rax,%rdx
1049a(5): jmp 0xfffffdb6(%rip)

"memcpy_lowcase" :
104a0(3): test %rdx,%rdx
104a3(2): push %r12
104a5(1): push %rbp
104a6(3): mov %rdi,%rbp
104a9(1): push %rbx
104aa(2): jz 0x2f(%rip)
104ac(3): mov %rsi,%r12
104af(4): lea 0xffffffff(%rdx),%rbx
104b3(5): call 0xffff339d(%rip)
104b8(8): nop 0x0(%rax,%rax,1)
104c0(5): movzx 0x0(%r12,%rbx,1),%ecx
104c5(3): mov (%rax),%rdx
104c8(3): mov 0x0(%rdx,%rcx,4),%edx
104cb(4): mov %dl,0x0(%rbp,%rbx,1)
104cf(4): sub $0x1,%rbx
104d3(4): cmp $0xffffffff,%rbx
104d7(2): jnz 0xffffffe9(%rip)
104d9(3): mov %rbp,%rax
104dc(1): pop %rbx
104dd(1): pop %rbp
104de(2): pop %r12
104e0(1): ret near (%rsp)

"memcpy_uppcase" :
104f0(3): test %rdx,%rdx
104f3(2): push %r12
104f5(1): push %rbp
104f6(3): mov %rdi,%rbp
104f9(1): push %rbx
104fa(2): jz 0x2f(%rip)
104fc(3): mov %rsi,%r12
104ff(4): lea 0xffffffff(%rdx),%rbx
10503(5): call 0xffff2d3d(%rip)
10508(8): nop 0x0(%rax,%rax,1)
10510(5): movzx 0x0(%r12,%rbx,1),%ecx
10515(3): mov (%rax),%rdx
10518(3): mov 0x0(%rdx,%rcx,4),%edx
1051b(4): mov %dl,0x0(%rbp,%rbx,1)
1051f(4): sub $0x1,%rbx
10523(4): cmp $0xffffffff,%rbx
10527(2): jnz 0xffffffe9(%rip)
10529(3): mov %rbp,%rax
1052c(1): pop %rbx
1052d(1): pop %rbp
1052e(2): pop %r12
10530(1): ret near (%rsp)

"__strftime_internal" :
10540(2): push %r15
10542(2): push %r14
10544(3): mov %rdx,%r11
10547(2): push %r13
10549(2): push %r12
1054b(3): mov %rcx,%r13
1054e(1): push %rbp
1054f(1): push %rbx
10550(3): mov %rdi,%rbp
10553(7): sub $0x4c8,%rsp
1055a(4): mov 0x30(%rcx),%rdi
1055e(4): mov 0x8(%rcx),%r15d
10562(8): mov 0x508(%rsp),%rax
1056a(5): mov %rsi,0x8(%rsp)
1056f(5): mov %r9d,0x2c(%rsp)
10574(8): movsxd 0x500(%rsp),%r10
1057c(5): mov %r8b,0x2b(%rsp)
10581(5): mov %rax,0x18(%rsp)
10586(8): mov 0x510(%rsp),%rax
1058e(5): mov %rax,0x10(%rsp)
10593(9): mov $0x28,%rax
1059c(8): mov %rax,0x4b8(%rsp)
105a4(2): xor %eax,%eax
105a6(7): lea 0x7306(%rip),%rax
105ad(3): test %rdi,%rdi
105b0(4): cmovne %rdi,%rax
105b4(4): cmp $0xc,%r15d
105b8(5): mov %rax,0x20(%rsp)
105bd(6): jle 0xf3(%rip)
105c3(4): sub $0xc,%r15d
105c7(4): movzx (%r11),%eax
105cb(3): xor %r14d,%r14d
105ce(2): test %al,%al
105d0(6): jz 0xbc(%rip)
105d6(5): mov %r15d,0x68(%rsp)
105db(3): mov %r11,%rbx
105de(2): cmp $0x25,%al
105e0(6): jz 0xe8(%rip)
105e6(3): test %r10d,%r10d
105e9(6): mov $0x0,%r12d
105ef(5): mov $0x1,%eax
105f4(4): cmovns %r10,%r12
105f8(3): test %r12,%r12
105fb(4): cmove %rax,%r12
105ff(5): mov 0x8(%rsp),%rax
10604(3): sub %r14,%rax
10607(3): cmp %r12,%rax
1060a(2): jnbe 0x36(%rip)
1060c(3): xor %r14d,%r14d
1060f(8): mov 0x4b8(%rsp),%rbx
10617(9): xor $0x28,%rbx
10620(3): mov %r14,%rax
10623(6): jnz 0x19b2(%rip)
10629(7): add $0x4c8,%rsp
10630(1): pop %rbx
10631(1): pop %rbp
10632(2): pop %r12
10634(2): pop %r13
10636(2): pop %r14
10638(2): pop %r15
1063a(1): ret near (%rsp)
1063b(5): nop 0x0(%rax,%rax,1)
10640(3): test %rbp,%rbp
10643(2): jz 0x29(%rip)
10645(4): cmp $0x1,%r10d
10649(2): jle 0x19(%rip)
1064b(4): lea 0xffffffff(%r10),%r15
1064f(3): mov %rbp,%rdi
10652(5): mov $0x20,%esi
10657(3): mov %r15,%rdx
1065a(3): add %r15,%rbp
1065d(5): call 0xffff2ea3(%rip)
10662(3): movzx (%rbx),%eax
10665(4): add $0x1,%rbp
10669(3): mov %al,0xffffffff(%rbp)
1066c(3): add %r12,%r14
1066f(3): mov %rbx,%r12
10672(6): movzx 0x1(%r12),%eax
10678(5): lea 0x1(%r12),%rbx
1067d(7): mov $0xffffffff,%r10
10684(2): test %al,%al
10686(6): jnz 0xffffff58(%rip)
1068c(3): test %rbp,%rbp
1068f(6): jz 0xffffff80(%rip)
10695(6): cmp $0x0,0x8(%rsp)
1069b(6): jz 0xffffff74(%rip)
106a1(4): mov $0x0,0x0(%rbp)
106a5(5): jmp 0xffffff6a(%rip)
106aa(6): nop 0x0(%rax,%rax,1)
106b0(3): test %r15d,%r15d
106b3(5): mov $0xc,%eax
106b8(4): cmove %eax,%r15d
106bc(5): jmp 0xffffff0b(%rip)
106c1(7): nop 0x0(%rax)
106c8(5): movzx 0x2b(%rsp),%eax
106cd(3): xor %r8d,%r8d
106d0(3): xor %r15d,%r15d
106d3(5): mov $0x1,%edx
106d8(4): mov %al,0x30(%rsp)
106dc(4): add $0x1,%rbx
106e0(3): movsx (%rbx),%eax
106e3(3): lea 0xffffffdd(%rax),%ecx
106e6(2): mov %eax,%esi
106e8(3): mov %eax,%r9d
106eb(3): cmp $0x3c,%cl
106ee(2): jnbe 0x2e(%rip)
106f0(3): mov %rdx,%rdi
106f3(a): mov $0x1152921504606856448,%r11
106fd(3): shl/sal %cl,%rdi
10700(3): test %r11,%rdi
10703(2): jnz 0x6d(%rip)
10705(2): test %cl,%cl
10707(2): jz 0x79(%rip)
10709(a): mov $0x576460752303423488,%rcx
10713(3): test %rcx,%rdi
10716(6): jnz 0x15a(%rip)
1071c(3): lea 0xffffffd0(%rax),%edx
1071f(3): cmp $0x9,%edx
10722(6): jbe 0x15e(%rip)
10728(4): cmp $0x45,%sil
1072c(2): jz 0x2c(%rip)
1072e(3): xor %r11d,%r11d
10731(4): cmp $0x4f,%sil
10735(2): jz 0x23(%rip)
10737(4): cmp $0x7a,%sil
1073b(2): jnbe 0x55(%rip)
1073d(7): lea 0x9998(%rip),%rdx
10744(4): movzx %sil,%eax
10748(4): movsxd 0x0(%rdx,%rax,4),%rax
1074c(3): add %rdx,%rax
1074f(2): jmp %rax
10751(7): nop 0x0(%rax)
10758(5): movsx 0x1(%rbx),%r9d
1075d(3): mov %eax,%r11d
10760(4): add $0x1,%rbx
10764(3): mov %r9d,%esi
10767(2): jmp 0xffffffd0(%rip)
10769(7): nop 0x0(%rax)
10770(3): mov %eax,%r15d
10773(5): jmp 0xffffff69(%rip)
10778(8): nop 0x0(%rax,%rax,1)
10780(6): mov $0x1,%r8d
10786(5): jmp 0xffffff56(%rip)
1078b(3): mov %r9,%rbx
1078e(2): nop 
10790(4): lea 0xffffffff(%rbx),%rax
10794(6): mov $0x1,%r8d
1079a(3): mov %rax,%r9
1079d(4): lea 0xffffffff(%rax),%rax
107a1(4): add $0x1,%r8d
107a5(4): cmp $0x25,0x1(%rax)
107a9(2): jnz 0xfffffff1(%rip)
107ab(5): mov 0x8(%rsp),%rdx
107b0(5): mov $0x0,%eax
107b5(3): movsxd %r8d,%r8
107b8(3): mov %r8,%rcx
107bb(3): mov %rbx,%r12
107be(3): sub %r14,%rdx
107c1(3): test %r10d,%r10d
107c4(4): cmovns %r10d,%eax
107c8(2): cwde 
107ca(3): cmp %r8,%rax
107cd(4): cmovnb %rax,%rcx
107d1(3): cmp %rdx,%rcx
107d4(6): jnb 0xfffffe38(%rip)
107da(3): test %rbp,%rbp
107dd(6): jz 0x88(%rip)
107e3(3): cmp %r8,%rax
107e6(2): jbe 0x4f(%rip)
107e8(3): movsxd %r10d,%rdx
107eb(5): mov %r8,0x48(%rsp)
107f0(5): mov %rcx,0x40(%rsp)
107f5(3): sub %r8,%rdx
107f8(4): cmp $0x30,%r15d
107fc(5): mov %r9,0x38(%rsp)
10801(5): lea 0x0(%rbp,%rdx,1),%rbx
10806(6): jz 0x1270(%rip)
1080c(4): cmp $0x2b,%r15d
10810(6): jz 0x1266(%rip)
10816(3): mov %rbp,%rdi
10819(5): mov $0x20,%esi
1081e(3): mov %rbx,%rbp
10821(5): call 0xffff2cdf(%rip)
10826(5): mov 0x48(%rsp),%r8
1082b(5): mov 0x40(%rsp),%rcx
10830(5): mov 0x38(%rsp),%r9
10835(5): cmp $0x0,0x30(%rsp)
1083a(5): mov %rcx,0x38(%rsp)
1083f(3): mov %r8,%rdx
10842(5): mov %r8,0x30(%rsp)
10847(3): mov %r9,%rsi
1084a(3): mov %rbp,%rdi
1084d(6): jz 0x11d3(%rip)
10853(5): call 0xfffffc9d(%rip)
10858(5): mov 0x30(%rsp),%r8
1085d(5): mov 0x38(%rsp),%rcx
10862(3): add %r8,%rbp
10865(3): add %rcx,%r14
10868(5): jmp 0xfffffe0a(%rip)
1086d(3): nop (%rax)
10870(5): mov $0x1,0x30(%rsp)
10875(5): jmp 0xfffffe67(%rip)
1087a(6): nop 0x0(%rax,%rax,1)
10880(3): xor %r10d,%r10d
10883(4): movsx 0x1(%rbx),%eax
10887(7): cmp $0xccccccc,%r10d
1088e(4): lea 0x1(%rbx),%rcx
10892(2): mov %eax,%esi
10894(3): lea 0xffffffd0(%rax),%edx
10897(2): jnle 0x2f(%rip)
10899(3): movsx (%rbx),%edi
1089c(2): jz 0x24(%rip)
1089e(4): lea 0x0(%r10,%r10,4),%r9d
108a2(3): mov %rcx,%rbx
108a5(5): lea 0xffffffd0(%rdi,%r9,2),%r10d
108aa(3): cmp $0x9,%edx
108ad(2): jbe 0xffffffd6(%rip)
108af(3): mov %eax,%r9d
108b2(5): jmp 0xfffffe76(%rip)
108b7(9): nop 0x0(%rax,%rax,1)
108c0(4): cmp $0x37,%dil
108c4(2): jle 0xffffffda(%rip)
108c6(3): cmp $0x9,%edx
108c9(2): jnbe 0x17(%rip)
108cb(4): movsx 0x2(%rbx),%eax
108cf(6): mov $0x7fffffff,%r10d
108d5(4): add $0x2,%rbx
108d9(2): mov %eax,%esi
108db(3): lea 0xffffffd0(%rax),%edx
108de(2): jmp 0xffffffcc(%rip)
108e0(3): mov %eax,%r9d
108e3(3): mov %rcx,%rbx
108e6(6): mov $0x7fffffff,%r10d
108ec(5): jmp 0xfffffe3c(%rip)
108f1(7): nop 0x0(%rax)
108f8(4): cmp $0x4f,%r11d
108fc(6): jz 0xfffffe94(%rip)
10902(3): xor %r8d,%r8d
10905(5): mov $0x2520,%eax
1090a(3): test %r11d,%r11d
1090d(8): mov %ax,0xab(%rsp)
10915(6): jnz 0x16d6(%rip)
1091b(8): lea 0xab(%rsp),%rdx
10923(3): mov %rbx,%r12
10926(4): lea 0x2(%rdx),%rax
1092a(8): lea 0xb0(%rsp),%r9
10932(3): mov %sil,(%rax)
10935(4): mov $0x0,0x1(%rax)
10939(3): mov %r13,%rcx
1093c(5): mov $0x400,%esi
10941(5): mov %r10d,0x38(%rsp)
10946(3): mov %r9,%rdi
10949(5): mov %r8b,0x50(%rsp)
1094e(5): mov %r11d,0x48(%rsp)
10953(5): mov %r9,0x40(%rsp)
10958(5): call 0xffff2dd8(%rip)
1095d(3): test %rax,%rax
10960(6): jz 0xfffffd12(%rip)
10966(5): movsxd 0x38(%rsp),%r10
1096b(4): lea 0xffffffff(%rax),%rcx
1096f(5): mov 0x8(%rsp),%rdx
10974(5): mov $0x0,%eax
10979(3): test %r10d,%r10d
1097c(4): cmovns %r10,%rax
10980(3): cmp %rax,%rcx
10983(3): mov %rax,%rbx
10986(4): cmovnb %rcx,%rbx
1098a(3): sub %r14,%rdx
1098d(3): cmp %rbx,%rdx
10990(6): jbe 0xfffffc7c(%rip)
10996(3): test %rbp,%rbp
10999(6): jz 0xa5(%rip)
1099f(5): mov 0x48(%rsp),%r11d
109a4(5): mov 0x40(%rsp),%r9
109a9(6): movzx 0x50(%rsp),%r8d
109af(3): test %r11d,%r11d
109b2(2): jnz 0x5c(%rip)
109b4(3): cmp %rax,%rcx
109b7(2): jnb 0x57(%rip)
109b9(3): movsxd %r10d,%rdx
109bc(5): mov %r9,0x50(%rsp)
109c1(5): mov %rcx,0x48(%rsp)
109c6(3): sub %rcx,%rdx
109c9(4): cmp $0x30,%r15d
109cd(5): mov %r8b,0x40(%rsp)
109d2(5): lea 0x0(%rbp,%rdx,1),%rax
109d7(5): mov %rax,0x38(%rsp)
109dc(6): jz 0x1073(%rip)
109e2(4): cmp $0x2b,%r15d
109e6(6): jz 0x1069(%rip)
109ec(3): mov %rbp,%rdi
109ef(5): mov $0x20,%esi
109f4(5): call 0xffff2b0c(%rip)
109f9(6): movzx 0x40(%rsp),%r8d
109ff(5): mov 0x38(%rsp),%rbp
10a04(5): mov 0x50(%rsp),%r9
10a09(5): mov 0x48(%rsp),%rcx
10a0e(3): test %r8b,%r8b
10a11(4): lea 0x1(%r9),%rsi
10a15(3): mov %rcx,%rdx
10a18(6): jnz 0x1020(%rip)
10a1e(5): cmp $0x0,0x30(%rsp)
10a23(3): mov %rbp,%rdi
10a26(5): mov %rcx,0x30(%rsp)
10a2b(6): jz 0x876(%rip)
10a31(5): call 0xfffffabf(%rip)
10a36(5): mov 0x30(%rsp),%rcx
10a3b(3): add %rcx,%rbp
10a3e(3): add %rbx,%r14
10a41(5): jmp 0xfffffc31(%rip)
10a46(3): test %r11d,%r11d
10a49(6): jnz 0xfffffd47(%rip)
10a4f(5): movzx 0x30(%rsp),%eax
10a54(3): test %r8b,%r8b
10a57(8): lea 0xab(%rsp),%rdx
10a5f(3): mov %rbx,%r12
10a62(4): cmovne %r8d,%eax
10a66(3): xor %r8d,%r8d
10a69(3): xor %r11d,%r11d
10a6c(4): mov %al,0x30(%rsp)
10a70(5): mov $0x2520,%eax
10a75(8): mov %ax,0xab(%rsp)
10a7d(4): lea 0x2(%rdx),%rax
10a81(5): jmp 0xfffffea9(%rip)
10a86(4): cmp $0x45,%r11d
10a8a(6): jz 0xfffffd06(%rip)
10a90(4): mov 0x0(%r13),%ecx
10a94(5): mov $0x2,%edi
10a99(7): nop 0x0(%rax)
10aa0(2): mov %ecx,%eax
10aa2(2): xor %esi,%esi
10aa4(5): mov $0x0,0x40(%rsp)
10aa9(3): shr $0x1f,%eax
10aac(4): mov %eax,0x38(%rsp)
10ab0(2): mov %ecx,%eax
10ab2(2): not %eax
10ab4(3): shr $0x1f,%eax
10ab7(4): cmp $0x4f,%r11d
10abb(6): jnz 0xe85(%rip)
10ac1(2): test %al,%al
10ac3(6): jz 0xe7d(%rip)
10ac9(3): mov %r9d,%esi
10acc(5): mov $0x2520,%edx
10ad1(3): xor %r8d,%r8d
10ad4(8): mov %dx,0xab(%rsp)
10adc(8): lea 0xab(%rsp),%rdx
10ae4(8): mov %r11b,0xad(%rsp)
10aec(3): mov %rbx,%r12
10aef(3): mov %edi,%r11d
10af2(4): lea 0x3(%rdx),%rax
10af6(5): jmp 0xfffffe34(%rip)
10afb(3): test %r10d,%r10d
10afe(5): mov $0x0,%ecx
10b03(5): mov $0x1,%eax
10b08(4): cmovns %r10d,%ecx
10b0c(3): movsxd %ecx,%rcx
10b0f(3): test %rcx,%rcx
10b12(4): cmove %rax,%rcx
10b16(5): mov 0x8(%rsp),%rax
10b1b(3): sub %r14,%rax
10b1e(3): cmp %rcx,%rax
10b21(6): jbe 0xfffffaeb(%rip)
10b27(3): test %rbp,%rbp
10b2a(2): jz 0x4e(%rip)
10b2c(4): cmp $0x1,%r10d
10b30(2): jle 0x3c(%rip)
10b32(3): movsxd %r10d,%rdx
10b35(5): mov %rcx,0x30(%rsp)
10b3a(4): sub $0x1,%rdx
10b3e(4): cmp $0x30,%r15d
10b42(5): lea 0x0(%rbp,%rdx,1),%r12
10b47(6): jz 0x131d(%rip)
10b4d(4): cmp $0x2b,%r15d
10b51(6): jz 0x1313(%rip)
10b57(3): mov %rbp,%rdi
10b5a(5): mov $0x20,%esi
10b5f(3): mov %r12,%rbp
10b62(5): call 0xffff299e(%rip)
10b67(5): mov 0x30(%rsp),%rcx
10b6c(4): mov $0x9,0x0(%rbp)
10b70(4): add $0x1,%rbp
10b74(4): nop 0x0(%rax)
10b78(3): add %rcx,%r14
10b7b(3): mov %rbx,%r12
10b7e(5): jmp 0xfffffaf4(%rip)
10b83(5): mov $0x1,%eax
10b88(3): test %r8b,%r8b
10b8b(6): jnz 0xf30(%rip)
10b91(3): mov %eax,%r8d
10b94(5): mov $0x70,%esi
10b99(5): jmp 0xfffffd6c(%rip)
10b9e(7): lea 0x6fce(%rip),%rax
10ba5(8): mov $0xffffffff,0x38(%rsp)
10bad(5): mov %rax,0x40(%rsp)
10bb2(6): movzx 0x30(%rsp),%r8d
10bb8(7): mov 0x518(%rsp),%eax
10bbf(7): mov $0xffffffff,%rsi
10bc6(5): mov %r10d,0x48(%rsp)
10bcb(2): xor %edi,%edi
10bcd(3): mov %r15d,%r9d
10bd0(3): mov %r13,%rcx
10bd3(5): mov %r8d,0x30(%rsp)
10bd8(1): push %rax
10bd9(4): push 0x18(%rsp)
10bdd(4): push 0x28(%rsp)
10be1(4): mov 0x50(%rsp),%eax
10be5(1): push %rax
10be6(5): mov 0x60(%rsp),%rdx
10beb(5): call 0xfffff955(%rip)
10bf0(4): add $0x20,%rsp
10bf4(5): movsxd 0x48(%rsp),%r10
10bf9(3): mov %rax,%r11
10bfc(5): mov 0x8(%rsp),%rsi
10c01(5): mov $0x0,%eax
10c06(3): test %r10d,%r10d
10c09(4): cmovns %r10,%rax
10c0d(3): cmp %rax,%r11
10c10(3): mov %rax,%r12
10c13(4): cmovnb %r11,%r12
10c17(3): sub %r14,%rsi
10c1a(3): cmp %r12,%rsi
10c1d(5): mov %rsi,0x48(%rsp)
10c22(6): jbe 0xfffff9ea(%rip)
10c28(3): test %rbp,%rbp
10c2b(6): jz 0xfffffa41(%rip)
10c31(3): cmp %rax,%r11
10c34(2): jnb 0x42(%rip)
10c36(3): movsxd %r10d,%rdx
10c39(5): mov %r11,0x58(%rsp)
10c3e(3): sub %r11,%rdx
10c41(4): cmp $0x30,%r15d
10c45(5): lea 0x0(%rbp,%rdx,1),%rax
10c4a(5): mov %rax,0x50(%rsp)
10c4f(6): jz 0x10fd(%rip)
10c55(4): cmp $0x2b,%r15d
10c59(6): jz 0x10f3(%rip)
10c5f(3): mov %rbp,%rdi
10c62(5): mov $0x20,%esi
10c67(5): call 0xffff2899(%rip)
10c6c(5): mov 0x50(%rsp),%rbp
10c71(5): mov 0x58(%rsp),%r11
10c76(7): mov 0x518(%rsp),%eax
10c7d(5): mov %r11,0x50(%rsp)
10c82(3): mov %rbp,%rdi
10c85(3): mov %r15d,%r9d
10c88(3): mov %r13,%rcx
10c8b(1): push %rax
10c8c(4): push 0x18(%rsp)
10c90(4): push 0x28(%rsp)
10c94(4): mov 0x50(%rsp),%eax
10c98(1): push %rax
10c99(5): mov 0x50(%rsp),%r8d
10c9e(5): mov 0x60(%rsp),%rdx
10ca3(5): mov 0x68(%rsp),%rsi
10ca8(5): call 0xfffff898(%rip)
10cad(5): mov 0x70(%rsp),%r11
10cb2(4): add $0x20,%rsp
10cb6(3): add %r11,%rbp
10cb9(5): jmp 0xfffff9b3(%rip)
10cbe(5): mov 0x8(%rsp),%rdx
10cc3(5): mov $0x0,%eax
10cc8(5): mov $0x1,%ecx
10ccd(3): sub %r14,%rdx
10cd0(3): test %r10d,%r10d
10cd3(4): cmovns %r10d,%eax
10cd7(2): cwde 
10cd9(3): test %rax,%rax
10cdc(4): cmovne %rax,%rcx
10ce0(3): test %r11d,%r11d
10ce3(6): jnz 0x1035(%rip)
10ce9(3): cmp %rdx,%rcx
10cec(6): jnb 0xfffff920(%rip)
10cf2(3): test %rbp,%rbp
10cf5(6): jz 0xfffffe83(%rip)
10cfb(4): cmp $0x1,%r10d
10cff(2): jle 0x3f(%rip)
10d01(3): movsxd %r10d,%rdx
10d04(5): mov %rcx,0x30(%rsp)
10d09(4): sub $0x1,%rdx
10d0d(4): cmp $0x30,%r15d
10d11(5): lea 0x0(%rbp,%rdx,1),%r12
10d16(6): jz 0x126f(%rip)
10d1c(4): cmp $0x2b,%r15d
10d20(5): mov $0x20,%esi
10d25(6): jz 0x1260(%rip)
10d2b(3): mov %rbp,%rdi
10d2e(3): mov %r12,%rbp
10d31(5): call 0xffff27cf(%rip)
10d36(3): movzx (%rbx),%esi
10d39(5): mov 0x30(%rsp),%rcx
10d3e(4): mov %sil,0x0(%rbp)
10d42(4): add $0x1,%rbp
10d46(5): jmp 0xfffffe32(%rip)
10d4b(7): lea 0x936e(%rip),%rax
10d52(8): mov $0xffffffff,0x38(%rsp)
10d5a(5): mov %rax,0x40(%rsp)
10d5f(5): jmp 0xfffffe53(%rip)
10d64(4): cmp $0x45,%r11d
10d68(6): jz 0xfffffa28(%rip)
10d6e(4): mov 0x1c(%r13),%esi
10d72(4): sub 0x18(%r13),%esi
10d76(5): mov $0x92492493,%edx
10d7b(3): add $0x7,%esi
10d7e(2): mov %esi,%eax
10d80(2): imul %eax,%edx,%edx
10d82(3): lea 0x0(%rdx,%rsi,1),%ecx
10d85(3): sar $0x1f,%esi
10d88(5): mov $0x2,%edi
10d8d(3): sar $0x2,%ecx
10d90(2): sub %esi,%ecx
10d92(5): jmp 0xfffffd0e(%rip)
10d97(4): cmp $0x45,%r11d
10d9b(6): jz 0xd2f(%rip)
10da1(4): cmp $0x4f,%r11d
10da5(6): jz 0xfffff9eb(%rip)
10dab(4): mov 0x14(%r13),%eax
10daf(5): cmp $0xfffff894,%eax
10db4(6): lea 0x76c(%rax),%ecx
10dba(5): setl 0x38(%rsp)
10dbf(5): cmp $0xfffff894,%eax
10dc4(3): setnl %al
10dc7(3): test %r15d,%r15d
10dca(6): jnz 0xe7f(%rip)
10dd0(5): mov 0x2c(%rsp),%r15d
10dd5(4): cmp $0x2b,%r15d
10dd9(6): jz 0xe7a(%rip)
10ddf(5): mov $0x0,0x40(%rsp)
10de4(5): mov $0x4,%edi
10de9(2): xor %esi,%esi
10deb(5): jmp 0xfffffccc(%rip)
10df0(5): movzx 0x30(%rsp),%esi
10df5(5): mov 0x20(%rsp),%rdi
10dfa(3): test %r8b,%r8b
10dfd(5): mov $0x0,%eax
10e02(5): mov %r10d,0x38(%rsp)
10e07(5): mov %r8b,0x40(%rsp)
10e0c(3): cmovne %eax,%esi
10e0f(5): mov %sil,0x30(%rsp)
10e14(5): call 0xffff25ec(%rip)
10e19(5): movsxd 0x38(%rsp),%r10
10e1e(3): mov %rax,%r12
10e21(5): mov 0x8(%rsp),%rdx
10e26(5): mov $0x0,%eax
10e2b(3): test %r10d,%r10d
10e2e(4): cmovns %r10,%rax
10e32(3): cmp %rax,%r12
10e35(3): mov %rax,%rcx
10e38(4): cmovnb %r12,%rcx
10e3c(3): sub %r14,%rdx
10e3f(3): cmp %rcx,%rdx
10e42(6): jbe 0xfffff7ca(%rip)
10e48(3): test %rbp,%rbp
10e4b(6): jz 0xfffffd2d(%rip)
10e51(3): cmp %rax,%r12
10e54(6): movzx 0x40(%rsp),%r8d
10e5a(2): jnb 0x4d(%rip)
10e5c(3): movsxd %r10d,%rdx
10e5f(5): mov %rcx,0x48(%rsp)
10e64(5): mov %r8b,0x40(%rsp)
10e69(3): sub %r12,%rdx
10e6c(4): cmp $0x30,%r15d
10e70(5): lea 0x0(%rbp,%rdx,1),%rax
10e75(5): mov %rax,0x38(%rsp)
10e7a(6): jz 0x10c5(%rip)
10e80(4): cmp $0x2b,%r15d
10e84(6): jz 0x10bb(%rip)
10e8a(3): mov %rbp,%rdi
10e8d(5): mov $0x20,%esi
10e92(5): call 0xffff266e(%rip)
10e97(6): movzx 0x40(%rsp),%r8d
10e9d(5): mov 0x38(%rsp),%rbp
10ea2(5): mov 0x48(%rsp),%rcx
10ea7(3): test %r8b,%r8b
10eaa(6): jnz 0xffd(%rip)
10eb0(5): cmp $0x0,0x30(%rsp)
10eb5(3): mov %r12,%rdx
10eb8(5): mov %rcx,0x30(%rsp)
10ebd(5): mov 0x20(%rsp),%rsi
10ec2(3): mov %rbp,%rdi
10ec5(6): jz 0xfd3(%rip)
10ecb(5): call 0xfffff625(%rip)
10ed0(5): mov 0x30(%rsp),%rcx
10ed5(3): add %r12,%rbp
10ed8(5): jmp 0xfffffca0(%rip)
10edd(4): cmp $0x45,%r11d
10ee1(6): jz 0xbe9(%rip)
10ee7(4): mov 0x14(%r13),%esi
10eeb(5): mov $0x51eb851f,%edx
10ef0(2): mov %esi,%eax
10ef2(2): imul %eax,%edx,%edx
10ef4(2): mov %esi,%eax
10ef6(3): sar $0x1f,%eax
10ef9(2): mov %edx,%ecx
10efb(3): sar $0x5,%ecx
10efe(2): sub %eax,%ecx
10f00(2): mov %esi,%eax
10f02(3): imul %ecx,$0x64,%ecx
10f05(2): sub %ecx,%eax
10f07(2): mov %eax,%ecx
10f09(2): jns 0x10(%rip)
10f0b(2): neg %eax
10f0d(3): add $0x64,%ecx
10f10(6): cmp $0xfffff893,%esi
10f16(3): cmovng %eax,%ecx
10f19(3): test %r15d,%r15d
10f1c(6): jz 0x62e(%rip)
10f22(5): mov $0x1,%eax
10f27(5): mov $0x0,0x38(%rsp)
10f2c(4): cmp $0x2b,%r15d
10f30(6): jz 0x773(%rip)
10f36(5): mov $0x0,0x40(%rsp)
10f3b(5): mov $0x2,%edi
10f40(2): xor %esi,%esi
10f42(5): jmp 0xfffffb75(%rip)
10f47(5): movzx 0x30(%rsp),%eax
10f4c(3): test %r8b,%r8b
10f4f(4): cmovne %r8d,%eax
10f53(4): cmp $0x45,%r11d
10f57(6): jz 0xf6f(%rip)
10f5d(3): mov %r9d,%esi
10f60(4): mov %al,0x30(%rsp)
10f64(3): xor %r8d,%r8d
10f67(5): jmp 0xfffff99e(%rip)
10f6c(3): xor %r8d,%r8d
10f6f(4): mov 0x20(%r13),%ecx
10f73(2): test %ecx,%ecx
10f75(6): js 0xca9(%rip)
10f7b(4): mov 0x28(%r13),%rcx
10f7f(5): mov $0x1,0x38(%rsp)
10f84(2): test %ecx,%ecx
10f86(2): js 0x16(%rip)
10f88(5): mov $0x0,0x38(%rsp)
10f8d(2): jnz 0xf(%rip)
10f8f(5): mov 0x20(%rsp),%rax
10f94(3): cmp $0x2d,(%rax)
10f97(5): setz 0x38(%rsp)
10f9c(2): mov %ecx,%eax
10f9e(5): mov $0x91a2b3c5,%edx
10fa3(5): mov $0x88888889,%esi
10fa8(2): imul %eax,%edx,%edx
10faa(2): mov %ecx,%eax
10fac(3): sar $0x1f,%eax
10faf(4): mov %eax,0x40(%rsp)
10fb3(4): lea 0x0(%rdx,%rcx,1),%r12d
10fb7(4): sar $0xb,%r12d
10fbb(3): sub %eax,%r12d
10fbe(2): mov %ecx,%eax
10fc0(2): imul %eax,%esi,%edx
10fc2(3): lea 0x0(%rdx,%rcx,1),%edi
10fc5(3): sar $0x5,%edi
10fc8(4): sub 0x40(%rsp),%edi
10fcc(2): mov %edi,%eax
10fce(2): imul %eax,%esi,%edx
10fd0(2): mov %edi,%eax
10fd2(3): sar $0x1f,%eax
10fd5(3): lea 0x0(%rdx,%rdi,1),%esi
10fd8(3): sar $0x5,%esi
10fdb(2): sub %eax,%esi
10fdd(2): mov %edi,%eax
10fdf(3): imul %esi,$0x3c,%esi
10fe2(3): imul %edi,$0x3c,%edi
10fe5(2): sub %esi,%eax
10fe7(2): sub %edi,%ecx
10fe9(4): cmp $0x1,%r8
10fed(2): mov %eax,%esi
10fef(6): jz 0xe53(%rip)
10ff5(6): jb 0xf2b(%rip)
10ffb(4): cmp $0x2,%r8
10fff(6): jz 0xdf6(%rip)
11005(4): cmp $0x3,%r8
11009(6): jnz 0xec6(%rip)
1100f(2): test %ecx,%ecx
11011(6): jnz 0xde4(%rip)
11017(2): test %eax,%eax
11019(6): jnz 0xe29(%rip)
1101f(5): movzx 0x38(%rsp),%eax
11024(3): mov %r12d,%ecx
11027(5): mov $0x1,0x40(%rsp)
1102c(5): mov $0x3,%edi
11031(3): xor $0x1,%eax
11034(5): jmp 0xfffffa83(%rip)
11039(7): nop 0x0(%rax)
11040(4): cmp $0x4f,%r11d
11044(4): mov 0x10(%r13),%eax
11048(5): mov $0x1,%edi
1104d(6): jz 0xfffffa7f(%rip)
11053(3): lea 0x0(%rax,%rax,4),%edx
11056(5): mov $0x0,0x40(%rsp)
1105b(5): mov $0x0,0x38(%rsp)
11060(2): xor %esi,%esi
11062(3): lea 0x0(%rax,%rdx,2),%ecx
11065(3): sar $0x5,%ecx
11068(3): add $0x1,%ecx
1106b(5): nop 0x0(%rax,%rax,1)
11070(8): lea 0xb0(%rsp),%r9
11078(6): mov $0xcccccccd,%r12d
1107e(4): lea 0x17(%r9),%r11
11082(6): nop 0x0(%rax,%rax,1)
11088(4): test $0x1,%sil
1108c(4): lea 0xffffffff(%r11),%r8
11090(2): jz 0x11(%rip)
11092(4): lea 0xfffffffe(%r11),%rax
11096(5): mov $0x3a,0xffffffff(%r11)
1109b(3): mov %r8,%r11
1109e(3): mov %rax,%r8
110a1(2): mov %ecx,%eax
110a3(2): sar $0x1,%esi
110a5(3): mul %eax,%r12d,%edx
110a8(3): shr $0x3,%edx
110ab(3): lea 0x0(%rdx,%rdx,4),%eax
110ae(2): add %eax,%eax
110b0(2): sub %eax,%ecx
110b2(2): mov %esi,%eax
110b4(3): add $0x30,%ecx
110b7(2): or %edx,%eax
110b9(4): mov %cl,0xffffffff(%r11)
110bd(2): mov %edx,%ecx
110bf(3): mov %r8,%r11
110c2(2): jnz 0xffffffc6(%rip)
110c4(3): cmp %edi,%r10d
110c7(4): cmovnl %r10d,%edi
110cb(5): cmp $0x0,0x38(%rsp)
110d0(4): mov %edi,0x48(%rsp)
110d4(6): jnz 0x884(%rip)
110da(5): cmp $0x0,0x40(%rsp)
110df(6): jz 0x29a(%rip)
110e5(4): cmp $0x2d,%r15d
110e9(6): jz 0xb2a(%rip)
110ef(5): mov $0x2b,0x38(%rsp)
110f4(4): mov 0x48(%rsp),%eax
110f8(4): lea 0x17(%r9),%rcx
110fc(5): mov 0x8(%rsp),%rdx
11101(3): sub %r8,%rcx
11104(4): lea 0xffffffff(%rax),%r12d
11108(3): sub %r14,%rdx
1110b(3): sub %ecx,%r12d
1110e(3): test %r12d,%r12d
11111(6): jle 0xa4b(%rip)
11117(4): cmp $0x5f,%r15d
1111b(6): jz 0x9bb(%rip)
11121(5): movsxd 0x48(%rsp),%rax
11126(3): cmp %rdx,%rax
11129(3): mov %rax,%rdi
1112c(6): jnb 0xfffff4e0(%rip)
11132(3): test %r10d,%r10d
11135(5): mov $0x0,%eax
1113a(5): mov $0x1,%esi
1113f(4): cmovns %r10d,%eax
11143(2): cwde 
11145(3): test %rax,%rax
11148(4): cmovne %rax,%rsi
1114c(3): cmp %rdx,%rsi
1114f(6): jnb 0xfffff4bd(%rip)
11155(3): add %rsi,%r14
11158(3): test %rbp,%rbp
1115b(3): movsxd %r12d,%r9
1115e(3): mov %rbx,%r12
11161(6): jz 0xa3(%rip)
11167(2): test %edi,%edi
11169(2): jnz 0x56(%rip)
1116b(4): cmp $0x1,%rax
1116f(2): jbe 0x50(%rip)
11171(3): movsxd %r10d,%rdx
11174(5): mov %r8,0x58(%rsp)
11179(5): mov %r9,0x50(%rsp)
1117e(4): sub $0x1,%rdx
11182(4): cmp $0x30,%r15d
11186(5): mov %rcx,0x40(%rsp)
1118b(5): lea 0x0(%rbp,%rdx,1),%r12
11190(6): jz 0xdd1(%rip)
11196(4): cmp $0x2b,%r15d
1119a(6): jz 0xdc7(%rip)
111a0(3): mov %rbp,%rdi
111a3(5): mov $0x20,%esi
111a8(3): mov %r12,%rbp
111ab(5): call 0xffff2355(%rip)
111b0(5): mov 0x58(%rsp),%r8
111b5(5): mov 0x50(%rsp),%r9
111ba(5): mov 0x40(%rsp),%rcx
111bf(5): movzx 0x38(%rsp),%eax
111c4(4): add $0x1,%rbp
111c8(3): mov %rbx,%r12
111cb(3): mov %al,0xffffffff(%rbp)
111ce(3): test %rbp,%rbp
111d1(2): jz 0x33(%rip)
111d3(3): mov %r9,%rdx
111d6(3): mov %rbp,%rdi
111d9(5): mov $0x30,%esi
111de(5): mov %r8,0x50(%rsp)
111e3(5): mov %rcx,0x40(%rsp)
111e8(5): mov %r9,0x38(%rsp)
111ed(5): call 0xffff2313(%rip)
111f2(5): mov 0x38(%rsp),%r9
111f7(5): mov 0x50(%rsp),%r8
111fc(5): mov 0x40(%rsp),%rcx
11201(3): add %r9,%rbp
11204(5): mov 0x8(%rsp),%rdx
11209(3): add %r9,%r14
1120c(3): xor %r11d,%r11d
1120f(3): xor %r10d,%r10d
11212(3): sub %r14,%rdx
11215(3): cmp %r11,%rcx
11218(3): mov %r11,%rbx
1121b(4): cmovnb %rcx,%rbx
1121f(3): cmp %rdx,%rbx
11222(6): jnb 0xfffff3ea(%rip)
11228(3): test %rbp,%rbp
1122b(6): jz 0xfffff813(%rip)
11231(4): mov 0x48(%rsp),%esi
11235(2): test %esi,%esi
11237(2): jnz 0x51(%rip)
11239(3): cmp %r11,%rcx
1123c(2): jnb 0x4c(%rip)
1123e(3): movsxd %r10d,%rdx
11241(5): mov %r8,0x48(%rsp)
11246(5): mov %rcx,0x40(%rsp)
1124b(3): sub %rcx,%rdx
1124e(4): cmp $0x30,%r15d
11252(5): lea 0x0(%rbp,%rdx,1),%rax
11257(5): mov %rax,0x38(%rsp)
1125c(6): jz 0x83e(%rip)
11262(4): cmp $0x2b,%r15d
11266(6): jz 0x834(%rip)
1126c(3): mov %rbp,%rdi
1126f(5): mov $0x20,%esi
11274(5): call 0xffff228c(%rip)
11279(5): mov 0x38(%rsp),%rbp
1127e(5): mov 0x48(%rsp),%r8
11283(5): mov 0x40(%rsp),%rcx
11288(5): cmp $0x0,0x30(%rsp)
1128d(3): mov %rcx,%rdx
11290(5): mov %rcx,0x30(%rsp)
11295(3): mov %r8,%rsi
11298(3): mov %rbp,%rdi
1129b(6): jnz 0xfffff796(%rip)
112a1(5): call 0xffff234f(%rip)
112a6(5): mov 0x30(%rsp),%rcx
112ab(5): jmp 0xfffff790(%rip)
112b0(6): movdqu 0x0(%r13),%xmm0
112b6(5): lea 0x70(%rsp),%rsi
112bb(4): mov 0x30(%r13),%rax
112bf(5): mov 0x10(%rsp),%rdi
112c4(5): movaps %xmm0,0x70(%rsp)
112c9(5): mov %r10d,0x38(%rsp)
112ce(6): movdqu 0x10(%r13),%xmm0
112d4(8): mov %rax,0xa0(%rsp)
112dc(8): movaps %xmm0,0x80(%rsp)
112e4(6): movdqu 0x20(%r13),%xmm0
112ea(8): movaps %xmm0,0x90(%rsp)
112f2(5): call 0x483e(%rip)
112f7(8): lea 0xb0(%rsp),%r9
112ff(3): mov %rax,%rsi
11302(3): mov %rax,%rcx
11305(a): mov $0x7378697629483820647,%r11
1130f(5): mov $0x30,%edi
11314(5): mov 0x38(%rsp),%r10d
11319(4): lea 0x17(%r9),%r8
1131d(3): nop (%rax)
11320(3): mov %rcx,%rax
11323(3): imul %rax,%r11,%rdx
11326(3): mov %rcx,%rax
11329(4): sar $0x3f,%rax
1132d(4): sar $0x2,%rdx
11331(3): sub %rax,%rdx
11334(3): mov %rdx,%rax
11337(4): lea 0x0(%rdx,%rdx,4),%rdx
1133b(3): add %rdx,%rdx
1133e(3): sub %rdx,%rcx
11341(3): mov %rcx,%rdx
11344(3): mov %rax,%rcx
11347(2): mov %edi,%eax
11349(2): sub %edx,%eax
1134b(3): add $0x30,%edx
1134e(3): test %rsi,%rsi
11351(3): cmovs %eax,%edx
11354(4): sub $0x1,%r8
11358(3): test %rcx,%rcx
1135b(3): mov %dl,(%r8)
1135e(2): jnz 0xffffffc2(%rip)
11360(3): test %r10d,%r10d
11363(5): mov $0x1,%edi
11368(4): cmovnl %r10d,%edi
1136c(3): test %rsi,%rsi
1136f(4): mov %edi,0x48(%rsp)
11373(6): js 0x5e5(%rip)
11379(5): mov 0x8(%rsp),%rdx
1137e(4): lea 0x17(%r9),%rcx
11382(3): sub %r8,%rcx
11385(3): sub %r14,%rdx
11388(4): cmp $0x2d,%r15d
1138c(2): jz 0x13(%rip)
1138e(5): mov 0x48(%rsp),%r12d
11393(3): sub %ecx,%r12d
11396(3): test %r12d,%r12d
11399(6): jnle 0x990(%rip)
1139f(3): test %r10d,%r10d
113a2(6): mov $0x0,%r11d
113a8(3): mov %rbx,%r12
113ab(4): cmovns %r10d,%r11d
113af(3): movsxd %r11d,%r11
113b2(5): jmp 0xfffffe63(%rip)
113b7(4): movzx 0x1(%rbx),%eax
113bb(4): lea 0x1(%rbx),%rdx
113bf(2): cmp $0x3a,%al
113c1(6): jz 0xb19(%rip)
113c7(6): mov $0x1,%r8d
113cd(2): cmp $0x7a,%al
113cf(6): jnz 0xfffff3c1(%rip)
113d5(3): mov %rdx,%rbx
113d8(5): jmp 0xfffffb97(%rip)
113dd(4): cmp $0x45,%r11d
113e1(6): jz 0xfffff3af(%rip)
113e7(4): mov 0x14(%r13),%edi
113eb(4): mov 0x1c(%r13),%r8d
113ef(5): mov $0x92492493,%edx
113f4(2): mov %edi,%eax
113f6(3): mov %r8d,%ecx
113f9(3): sar $0x1f,%eax
113fc(5): and $0x190,%eax
11401(5): lea 0xffffff9c(%rdi,%rax,1),%r12d
11406(4): mov 0x18(%r13),%eax
1140a(2): sub %eax,%ecx
1140c(4): mov %eax,0x38(%rsp)
11410(6): add $0x17e,%ecx
11416(2): mov %ecx,%eax
11418(2): imul %eax,%edx,%edx
1141a(3): lea 0x0(%rdx,%rcx,1),%eax
1141d(2): mov %ecx,%edx
1141f(3): sar $0x1f,%edx
11422(3): sar $0x2,%eax
11425(2): sub %edx,%eax
11427(7): lea 0x0(,%rax,8),%edx
1142e(2): sub %eax,%edx
11430(2): mov %edx,%eax
11432(3): mov %r8d,%edx
11435(2): sub %ecx,%edx
11437(4): lea 0x3(%rdx,%rax,1),%eax
1143b(2): test %eax,%eax
1143d(4): mov %eax,0x40(%rsp)
11441(6): js 0x927(%rip)
11447(4): test $0x3,%r12b
1144b(5): mov $0x16d,%eax
11450(2): jnz 0x47(%rip)
11452(5): mov $0x51eb851f,%ecx
11457(3): mov %r12d,%eax
1145a(2): imul %eax,%ecx,%edx
1145c(3): mov %r12d,%eax
1145f(3): sar $0x1f,%eax
11462(4): mov %eax,0x48(%rsp)
11466(2): mov %edx,%ecx
11468(3): sar $0x5,%edx
1146b(2): sub %eax,%edx
1146d(5): mov $0x16e,%eax
11472(3): imul %edx,$0x64,%edx
11475(3): cmp %edx,%r12d
11478(2): jnz 0x1f(%rip)
1147a(3): sar $0x7,%ecx
1147d(2): mov %ecx,%eax
1147f(4): sub 0x48(%rsp),%eax
11483(6): imul %eax,$0x190,%eax
11489(3): cmp %eax,%r12d
1148c(3): setz %al
1148f(3): movzx %al,%eax
11492(5): add $0x16d,%eax
11497(3): sub %eax,%r8d
1149a(5): mov $0x92492493,%edx
1149f(3): mov %r8d,%ecx
114a2(4): sub 0x38(%rsp),%ecx
114a6(6): add $0x17e,%ecx
114ac(2): mov %ecx,%eax
114ae(3): sub %ecx,%r8d
114b1(2): imul %eax,%edx,%edx
114b3(3): lea 0x0(%rdx,%rcx,1),%eax
114b6(2): mov %ecx,%edx
114b8(3): sar $0x1f,%edx
114bb(3): sar $0x2,%eax
114be(2): sub %edx,%eax
114c0(7): lea 0x0(,%rax,8),%edx
114c7(2): sub %eax,%edx
114c9(5): lea 0x3(%r8,%rdx,1),%ecx
114ce(6): mov $0x1,%r8d
114d4(2): test %ecx,%ecx
114d6(2): jns 0x9(%rip)
114d8(4): mov 0x40(%rsp),%ecx
114dc(3): xor %r8d,%r8d
114df(4): cmp $0x47,%sil
114e3(6): jz 0x743(%rip)
114e9(4): cmp $0x67,%sil
114ed(6): jnz 0x932(%rip)
114f3(5): mov $0x51eb851f,%ecx
114f8(2): mov %edi,%eax
114fa(2): mov %edi,%esi
114fc(2): imul %eax,%ecx,%edx
114fe(2): mov %edx,%eax
11500(2): mov %edi,%edx
11502(3): sar $0x1f,%edx
11505(3): sar $0x5,%eax
11508(2): sub %edx,%eax
1150a(3): imul %eax,$0x64,%eax
1150d(2): sub %eax,%esi
1150f(3): add %r8d,%esi
11512(2): mov %esi,%eax
11514(2): imul %eax,%ecx,%edx
11516(2): mov %esi,%eax
11518(3): sar $0x1f,%eax
1151b(2): mov %edx,%ecx
1151d(3): sar $0x5,%ecx
11520(2): sub %eax,%ecx
11522(3): imul %ecx,$0x64,%ecx
11525(2): sub %ecx,%esi
11527(2): mov %esi,%ecx
11529(6): jns 0xfffff9f0(%rip)
1152f(5): mov $0xfffff894,%eax
11534(3): sub %r8d,%eax
11537(2): cmp %eax,%edi
11539(6): jnl 0xaa1(%rip)
1153f(2): neg %ecx
11541(3): test %r15d,%r15d
11544(6): jnz 0xfffff9de(%rip)
1154a(5): mov 0x2c(%rsp),%r15d
1154f(5): mov $0x1,%eax
11554(4): cmp $0x2b,%r15d
11558(6): jz 0xa62(%rip)
1155e(5): mov $0x0,0x40(%rsp)
11563(5): mov $0x0,0x38(%rsp)
11568(5): mov $0x2,%edi
1156d(2): xor %esi,%esi
1156f(5): jmp 0xfffff548(%rip)
11574(4): cmp $0x45,%r11d
11578(6): jz 0xfffff218(%rip)
1157e(4): mov 0xc(%r13),%ecx
11582(5): mov $0x2,%edi
11587(5): jmp 0xfffff519(%rip)
1158c(4): mov 0x18(%r13),%eax
11590(5): mov $0x92492493,%edx
11595(5): mov $0x1,%edi
1159a(3): lea 0x6(%rax),%ecx
1159d(2): mov %ecx,%eax
1159f(2): imul %eax,%edx,%edx
115a1(3): lea 0x0(%rdx,%rcx,1),%eax
115a4(2): mov %ecx,%edx
115a6(3): sar $0x1f,%edx
115a9(3): sar $0x2,%eax
115ac(2): sub %edx,%eax
115ae(7): lea 0x0(,%rax,8),%edx
115b5(2): sub %eax,%edx
115b7(2): sub %edx,%ecx
115b9(3): add $0x1,%ecx
115bc(5): jmp 0xfffff4e4(%rip)
115c1(4): cmp $0x45,%r11d
115c5(6): jz 0xfffff1cb(%rip)
115cb(4): mov 0x18(%r13),%ecx
115cf(5): mov $0x1,%edi
115d4(5): jmp 0xfffff4cc(%rip)
115d9(4): cmp $0x45,%r11d
115dd(6): jz 0xfffff1b3(%rip)
115e3(4): mov 0x18(%r13),%eax
115e7(5): mov $0x92492493,%ecx
115ec(3): lea 0x6(%rax),%esi
115ef(2): mov %esi,%eax
115f1(2): imul %eax,%ecx,%edx
115f3(3): lea 0x0(%rdx,%rsi,1),%eax
115f6(2): mov %esi,%edx
115f8(3): sar $0x1f,%edx
115fb(3): sar $0x2,%eax
115fe(2): sub %edx,%eax
11600(7): lea 0x0(,%rax,8),%edx
11607(2): sub %eax,%edx
11609(2): mov %edx,%eax
1160b(4): mov 0x1c(%r13),%edx
1160f(2): sub %esi,%eax
11611(4): lea 0x7(%rax,%rdx,1),%esi
11615(2): mov %esi,%eax
11617(2): imul %eax,%ecx,%edx
11619(5): jmp 0xfffff769(%rip)
1161e(4): cmp $0x45,%r11d
11622(6): jz 0xfffff16e(%rip)
11628(3): test %r8b,%r8b
1162b(6): jz 0xfffff2da(%rip)
11631(5): mov %r8b,0x30(%rsp)
11636(5): jmp 0xfffff2cc(%rip)
1163b(4): cmp $0x45,%r11d
1163f(6): jz 0x48b(%rip)
11645(4): mov 0x14(%r13),%esi
11649(5): mov $0x51eb851f,%edx
1164e(2): mov %esi,%eax
11650(2): imul %eax,%edx,%edx
11652(2): mov %edx,%eax
11654(2): mov %esi,%edx
11656(3): sar $0x1f,%edx
11659(3): sar $0x5,%eax
1165c(2): sub %edx,%eax
1165e(2): mov %esi,%edx
11660(3): lea 0x13(%rax),%ecx
11663(3): imul %eax,$0x64,%eax
11666(2): sub %eax,%edx
11668(2): mov %edx,%eax
1166a(3): shr $0x1f,%eax
1166d(2): test %ecx,%ecx
1166f(3): setnle %dl
11672(2): and %edx,%eax
11674(6): cmp $0xfffff894,%esi
1167a(5): setl 0x38(%rsp)
1167f(2): sub %eax,%ecx
11681(6): cmp $0xfffff894,%esi
11687(3): setnl %al
1168a(3): test %r15d,%r15d
1168d(6): jnz 0xfffff89f(%rip)
11693(5): cmp $0x2b,0x2c(%rsp)
11698(5): mov 0x2c(%rsp),%r15d
1169d(6): jnz 0xfffff899(%rip)
116a3(5): mov $0x2,%edi
116a8(5): mov $0x63,%edx
116ad(2): cmp %ecx,%edx
116af(5): mov $0x1,0x40(%rsp)
116b4(6): mov $0x2b,%r15d
116ba(6): jb 0xfffff72f(%rip)
116c0(3): cmp %edi,%r10d
116c3(6): mov $0x2b,%r15d
116c9(5): setnle 0x40(%rsp)
116ce(2): xor %esi,%esi
116d0(5): jmp 0xfffff3e7(%rip)
116d5(3): test %r11d,%r11d
116d8(6): jnz 0xfffff0b8(%rip)
116de(7): lea 0x89ed(%rip),%rax
116e5(8): mov $0xffffffff,0x38(%rsp)
116ed(5): mov %rax,0x40(%rsp)
116f2(5): jmp 0xfffff4c0(%rip)
116f7(3): test %r11d,%r11d
116fa(6): jnz 0xfffff096(%rip)
11700(3): test %r15d,%r15d
11703(6): jnz 0x7fa(%rip)
11709(3): test %r10d,%r10d
1170c(6): jns 0x7f1(%rip)
11712(7): lea 0x89b0(%rip),%rax
11719(8): mov $0x4,0x38(%rsp)
11721(6): mov $0x2b,%r15d
11727(5): mov %rax,0x40(%rsp)
1172c(5): jmp 0xfffff486(%rip)
11731(4): movzx 0xffffffff(%rbx),%ecx
11735(4): lea 0xffffffff(%rbx),%r9
11739(5): mov 0x8(%rsp),%rdx
1173e(5): mov $0x0,%eax
11743(3): sub %r14,%rdx
11746(3): test %r10d,%r10d
11749(4): cmovns %r10d,%eax
1174d(3): cmp $0x25,%cl
11750(2): cwde 
11752(6): jnz 0xfffff039(%rip)
11758(3): test %rax,%rax
1175b(5): mov $0x1,%ecx
11760(3): mov %r9,%r12
11763(4): cmovne %rax,%rcx
11767(6): mov $0x1,%r8d
1176d(5): jmp 0xfffff064(%rip)
11772(4): cmp $0x45,%r11d
11776(6): jz 0xfffff01a(%rip)
1177c(4): mov 0x8(%r13),%ecx
11780(5): mov $0x2,%edi
11785(5): jmp 0xfffff31b(%rip)
1178a(4): cmp $0x45,%r11d
1178e(6): jz 0xfffff002(%rip)
11794(4): mov 0x4(%r13),%ecx
11798(5): mov $0x2,%edi
1179d(5): jmp 0xfffff303(%rip)
117a2(4): cmp $0x45,%r11d
117a6(6): jz 0xffffefea(%rip)
117ac(4): cmp $0xff,%r10d
117b0(6): jz 0x551(%rip)
117b6(4): cmp $0x8,%r10d
117ba(6): jnle 0x80f(%rip)
117c0(7): mov 0x518(%rsp),%ecx
117c7(3): mov %r10d,%esi
117ca(5): mov $0x66666667,%edi
117cf(1): nop 
117d0(2): mov %ecx,%eax
117d2(3): add $0x1,%esi
117d5(3): sar $0x1f,%ecx
117d8(2): imul %eax,%edi,%edx
117da(3): sar $0x2,%edx
117dd(2): sub %ecx,%edx
117df(3): cmp $0x9,%esi
117e2(2): mov %edx,%ecx
117e4(2): jnz 0xffffffec(%rip)
117e6(3): mov %r10d,%edi
117e9(5): jmp 0xfffff2b7(%rip)
117ee(4): cmp $0x45,%r11d
117f2(6): jz 0xffffef9e(%rip)
117f8(4): mov 0x68(%rsp),%ecx
117fc(5): mov $0x2,%edi
11801(5): jmp 0xfffff29f(%rip)
11806(4): cmp $0x45,%r11d
1180a(6): jz 0xffffef86(%rip)
11810(4): mov 0x68(%rsp),%ecx
11814(3): test %r15d,%r15d
11817(5): mov $0x2,%edi
1181c(6): jnz 0xfffff284(%rip)
11822(6): mov $0x5f,%r15d
11828(5): jmp 0xfffff278(%rip)
1182d(4): cmp $0x45,%r11d
11831(6): jz 0xffffef5f(%rip)
11837(4): mov 0x10(%r13),%eax
1183b(5): mov $0x0,0x40(%rsp)
11840(5): mov $0x2,%edi
11845(3): cmp $0xff,%eax
11848(3): lea 0x1(%rax),%ecx
1184b(5): setl 0x38(%rsp)
11850(3): cmp $0xff,%eax
11853(3): setnl %al
11856(2): xor %esi,%esi
11858(5): jmp 0xfffff25f(%rip)
1185d(3): test %r10d,%r10d
11860(5): mov $0x0,%ecx
11865(5): mov $0x1,%eax
1186a(4): cmovns %r10d,%ecx
1186e(3): movsxd %ecx,%rcx
11871(3): test %rcx,%rcx
11874(4): cmove %rax,%rcx
11878(5): mov 0x8(%rsp),%rax
1187d(3): sub %r14,%rax
11880(3): cmp %rcx,%rax
11883(6): jbe 0xffffed89(%rip)
11889(3): test %rbp,%rbp
1188c(6): jz 0xfffff2ec(%rip)
11892(4): cmp $0x1,%r10d
11896(2): jle 0x3c(%rip)
11898(3): movsxd %r10d,%rdx
1189b(5): mov %rcx,0x30(%rsp)
118a0(4): sub $0x1,%rdx
118a4(4): cmp $0x30,%r15d
118a8(5): lea 0x0(%rbp,%rdx,1),%r12
118ad(6): jz 0x5d1(%rip)
118b3(4): cmp $0x2b,%r15d
118b7(6): jz 0x5c7(%rip)
118bd(3): mov %rbp,%rdi
118c0(5): mov $0x20,%esi
118c5(3): mov %r12,%rbp
118c8(5): call 0xffff1c38(%rip)
118cd(5): mov 0x30(%rsp),%rcx
118d2(4): mov $0xa,0x0(%rbp)
118d6(4): add $0x1,%rbp
118da(5): jmp 0xfffff29e(%rip)
118df(2): xor %eax,%eax
118e1(5): jmp 0xfffff2a7(%rip)
118e6(4): cmp $0x45,%r11d
118ea(6): jz 0xffffeea6(%rip)
118f0(4): mov 0x1c(%r13),%eax
118f4(5): mov $0x0,0x40(%rsp)
118f9(5): mov $0x3,%edi
118fe(3): cmp $0xff,%eax
11901(3): lea 0x1(%rax),%ecx
11904(5): setl 0x38(%rsp)
11909(3): cmp $0xff,%eax
1190c(3): setnl %al
1190f(2): xor %esi,%esi
11911(5): jmp 0xfffff1a6(%rip)
11916(4): cmp $0x45,%r11d
1191a(6): jz 0xffffee76(%rip)
11920(4): mov 0x8(%r13),%ecx
11924(5): jmp 0xfffffef0(%rip)
11929(4): cmp $0x45,%r11d
1192d(6): jz 0xffffee63(%rip)
11933(4): mov 0xc(%r13),%ecx
11937(5): jmp 0xfffffedd(%rip)
1193c(4): nop 0x0(%rax)
11940(2): mov %ecx,%eax
11942(2): neg %eax
11944(5): cmp $0x0,0x38(%rsp)
11949(3): cmovne %eax,%ecx
1194c(5): jmp 0xfffff724(%rip)
11951(7): nop 0x0(%rax)
11958(4): cmp $0x2d,%r15d
1195c(5): mov $0x2d,0x38(%rsp)
11961(6): jnz 0xfffff793(%rip)
11967(3): test %r10d,%r10d
1196a(6): mov $0x0,%r11d
11970(5): mov 0x8(%rsp),%rax
11975(4): cmovns %r10d,%r11d
11979(6): mov $0x1,%r12d
1197f(3): movsxd %r11d,%r11
11982(3): test %r11,%r11
11985(4): cmovne %r11,%r12
11989(3): sub %r14,%rax
1198c(3): cmp %r12,%rax
1198f(6): jbe 0xffffec7d(%rip)
11995(3): test %rbp,%rbp
11998(2): jz 0x64(%rip)
1199a(4): mov 0x48(%rsp),%eax
1199e(2): test %eax,%eax
119a0(2): jnz 0x54(%rip)
119a2(4): cmp $0x1,%r11
119a6(2): jbe 0x4e(%rip)
119a8(3): movsxd %r10d,%rax
119ab(3): mov %rbp,%rdi
119ae(5): mov $0x20,%esi
119b3(4): lea 0xffffffff(%rax),%rcx
119b7(5): mov %r9,0x60(%rsp)
119bc(5): mov %r8,0x58(%rsp)
119c1(5): mov %r11,0x50(%rsp)
119c6(5): mov %r10d,0x40(%rsp)
119cb(3): mov %rcx,%rdx
119ce(5): mov %rcx,0x38(%rsp)
119d3(5): call 0xffff1b2d(%rip)
119d8(5): mov 0x38(%rsp),%rcx
119dd(5): mov 0x60(%rsp),%r9
119e2(5): mov 0x58(%rsp),%r8
119e7(5): mov 0x50(%rsp),%r11
119ec(5): mov 0x40(%rsp),%r10d
119f1(3): add %rcx,%rbp
119f4(4): mov %r15b,0x0(%rbp)
119f8(4): add $0x1,%rbp
119fc(5): mov 0x8(%rsp),%rdx
11a01(4): lea 0x17(%r9),%rcx
11a05(3): add %r12,%r14
11a08(6): mov $0x2d,%r15d
11a0e(3): mov %rbx,%r12
11a11(3): sub %r8,%rcx
11a14(3): sub %r14,%rdx
11a17(5): jmp 0xfffff7fe(%rip)
11a1c(4): nop 0x0(%rax)
11a20(5): call 0xffff1bd0(%rip)
11a25(5): mov 0x38(%rsp),%rcx
11a2a(5): mov 0x30(%rsp),%r8
11a2f(5): jmp 0xffffee33(%rip)
11a34(4): nop 0x0(%rax)
11a38(3): mov %rbp,%rdi
11a3b(5): mov %rcx,0x30(%rsp)
11a40(5): call 0xffffea60(%rip)
11a45(5): mov 0x30(%rsp),%rcx
11a4a(5): jmp 0xffffeff1(%rip)
11a4f(3): mov %rbp,%rdi
11a52(5): mov $0x30,%esi
11a57(5): call 0xffff1aa9(%rip)
11a5c(5): mov 0x38(%rsp),%rbp
11a61(6): movzx 0x40(%rsp),%r8d
11a67(5): mov 0x48(%rsp),%rcx
11a6c(5): mov 0x50(%rsp),%r9
11a71(5): jmp 0xffffef9d(%rip)
11a76(3): mov %rbp,%rdi
11a79(5): mov $0x30,%esi
11a7e(3): mov %rbx,%rbp
11a81(5): call 0xffff1a7f(%rip)
11a86(5): mov 0x38(%rsp),%r9
11a8b(5): mov 0x40(%rsp),%rcx
11a90(5): mov 0x48(%rsp),%r8
11a95(5): jmp 0xffffeda0(%rip)
11a9a(3): mov %rbp,%rdi
11a9d(5): mov $0x30,%esi
11aa2(5): call 0xffff1a5e(%rip)
11aa7(5): mov 0x38(%rsp),%rbp
11aac(5): mov 0x40(%rsp),%rcx
11ab1(5): mov 0x48(%rsp),%r8
11ab6(5): jmp 0xfffff7d2(%rip)
11abb(5): mov $0x70,%esi
11ac0(5): mov $0x0,0x30(%rsp)
11ac5(5): jmp 0xffffee40(%rip)
11aca(2): xor %edi,%edi
11acc(5): jmp 0xfffff000(%rip)
11ad1(5): mov $0x0,0x38(%rsp)
11ad6(3): movsxd %r12d,%r15
11ad9(3): cmp %rdx,%r15
11adc(6): jnb 0xffffeb30(%rip)
11ae2(3): test %rbp,%rbp
11ae5(2): jz 0x33(%rip)
11ae7(3): mov %rbp,%rdi
11aea(3): mov %r15,%rdx
11aed(5): mov $0x20,%esi
11af2(5): mov %r10d,0x58(%rsp)
11af7(5): mov %r9,0x50(%rsp)
11afc(3): add %r15,%rbp
11aff(5): mov %r8,0x40(%rsp)
11b04(5): call 0xffff19fc(%rip)
11b09(5): mov 0x58(%rsp),%r10d
11b0e(5): mov 0x50(%rsp),%r9
11b13(5): mov 0x40(%rsp),%r8
11b18(5): mov 0x8(%rsp),%rdx
11b1d(3): mov %r10d,%eax
11b20(3): add %r15,%r14
11b23(3): sub %r12d,%eax
11b26(3): cmp %r12d,%r10d
11b29(6): mov $0x0,%r10d
11b2f(4): cmovnl %eax,%r10d
11b33(3): sub %r14,%rdx
11b36(5): cmp $0x0,0x38(%rsp)
11b3b(6): jnz 0x127(%rip)
11b41(4): add $0x17,%r9
11b45(3): movsxd %r10d,%r11
11b48(3): mov %rbx,%r12
11b4b(3): mov %r9,%rcx
11b4e(6): mov $0x5f,%r15d
11b54(3): sub %r8,%rcx
11b57(5): jmp 0xfffff6be(%rip)
11b5c(3): test %r10d,%r10d
11b5f(6): mov $0x0,%r11d
11b65(6): mov $0x1,%r12d
11b6b(4): cmovns %r10d,%r11d
11b6f(3): movsxd %r11d,%r11
11b72(3): test %r11,%r11
11b75(4): cmovne %r11,%r12
11b79(3): cmp %rdx,%r12
11b7c(6): jnb 0xffffea90(%rip)
11b82(3): test %rbp,%rbp
11b85(2): jz 0x7b(%rip)
11b87(4): mov 0x48(%rsp),%edi
11b8b(2): test %edi,%edi
11b8d(2): jnz 0x67(%rip)
11b8f(4): cmp $0x1,%r11
11b93(2): jbe 0x61(%rip)
11b95(3): movsxd %r10d,%rdx
11b98(5): mov %r10d,0x6c(%rsp)
11b9d(5): mov %r8,0x60(%rsp)
11ba2(4): sub $0x1,%rdx
11ba6(4): cmp $0x30,%r15d
11baa(5): mov %rcx,0x58(%rsp)
11baf(5): lea 0x0(%rbp,%rdx,1),%rax
11bb4(5): mov %r11,0x50(%rsp)
11bb9(5): mov %rax,0x40(%rsp)
11bbe(6): jz 0x3d1(%rip)
11bc4(4): cmp $0x2b,%r15d
11bc8(6): jz 0x3c7(%rip)
11bce(3): mov %rbp,%rdi
11bd1(5): mov $0x20,%esi
11bd6(5): call 0xffff192a(%rip)
11bdb(5): mov 0x40(%rsp),%rbp
11be0(5): mov 0x6c(%rsp),%r10d
11be5(5): mov 0x60(%rsp),%r8
11bea(5): mov 0x58(%rsp),%rcx
11bef(5): mov 0x50(%rsp),%r11
11bf4(5): movzx 0x38(%rsp),%eax
11bf9(4): add $0x1,%rbp
11bfd(3): mov %al,0xffffffff(%rbp)
11c00(5): mov 0x8(%rsp),%rdx
11c05(3): add %r12,%r14
11c08(3): mov %rbx,%r12
11c0b(3): sub %r14,%rdx
11c0e(5): jmp 0xfffff607(%rip)
11c13(6): mov $0x2b,%r15d
11c19(5): jmp 0xfffffd4e(%rip)
11c1e(3): mov %rbx,%r12
11c21(5): jmp 0xffffea51(%rip)
11c26(5): mov $0xfffff894,%eax
11c2b(8): lea 0x76c(%rdi,%r8,1),%ecx
11c33(3): sub %r8d,%eax
11c36(2): cmp %eax,%edi
11c38(5): setl 0x38(%rsp)
11c3d(3): setnl %al
11c40(3): test %r15d,%r15d
11c43(6): jz 0xfffff18d(%rip)
11c49(4): cmp $0x2b,%r15d
11c4d(6): jnz 0xfffff192(%rip)
11c53(5): mov $0x4,%edi
11c58(5): mov $0x270f,%edx
11c5d(5): jmp 0xfffffa50(%rip)
11c62(3): movsxd %r10d,%r15
11c65(6): mov $0x1,%r12d
11c6b(3): test %r15,%r15
11c6e(4): cmovne %r15,%r12
11c72(3): cmp %rdx,%r12
11c75(6): jnb 0xffffe997(%rip)
11c7b(3): test %rbp,%rbp
11c7e(2): jz 0x5d(%rip)
11c80(5): mov 0x48(%rsp),%r11d
11c85(3): test %r11d,%r11d
11c88(2): jnz 0x47(%rip)
11c8a(4): cmp $0x1,%r15
11c8e(2): jbe 0x41(%rip)
11c90(4): lea 0xffffffff(%r15),%rcx
11c94(3): mov %rbp,%rdi
11c97(5): mov $0x20,%esi
11c9c(5): mov %r10d,0x60(%rsp)
11ca1(5): mov %r9,0x58(%rsp)
11ca6(3): mov %rcx,%rdx
11ca9(5): mov %r8,0x50(%rsp)
11cae(5): mov %rcx,0x40(%rsp)
11cb3(5): call 0xffff184d(%rip)
11cb8(5): mov 0x40(%rsp),%rcx
11cbd(5): mov 0x60(%rsp),%r10d
11cc2(5): mov 0x58(%rsp),%r9
11cc7(5): mov 0x50(%rsp),%r8
11ccc(3): add %rcx,%rbp
11ccf(5): movzx 0x38(%rsp),%eax
11cd4(4): add $0x1,%rbp
11cd8(3): mov %al,0xffffffff(%rbp)
11cdb(5): mov 0x8(%rsp),%rdx
11ce0(4): add $0x17,%r9
11ce4(3): add %r12,%r14
11ce7(3): mov %r9,%rcx
11cea(3): mov %r15,%r11
11ced(3): mov %rbx,%r12
11cf0(3): sub %r8,%rcx
11cf3(6): mov $0x5f,%r15d
11cf9(3): sub %r14,%rdx
11cfc(5): jmp 0xfffff519(%rip)
11d01(7): mov 0x518(%rsp),%ecx
11d08(5): mov $0x9,%edi
11d0d(6): mov $0x9,%r10d
11d13(5): jmp 0xffffed8d(%rip)
11d18(3): mov %rbx,%r12
11d1b(3): mov %rbx,%r9
11d1e(6): mov $0x1,%r8d
11d24(5): jmp 0xffffeaad(%rip)
11d29(4): cmp $0x5f,%r15d
11d2d(6): jz 0xfffffda4(%rip)
11d33(5): movsxd 0x48(%rsp),%rax
11d38(3): cmp %rdx,%rax
11d3b(6): jnb 0xffffe8d1(%rip)
11d41(3): movsxd %r12d,%r9
11d44(3): mov %rbx,%r12
11d47(5): jmp 0xfffff487(%rip)
11d4c(3): mov %rbp,%rdi
11d4f(5): mov $0x30,%esi
11d54(5): call 0xffff17ac(%rip)
11d59(5): mov 0x50(%rsp),%rbp
11d5e(5): mov 0x58(%rsp),%r11
11d63(5): jmp 0xffffef13(%rip)
11d68(4): sub $0x1,%r12d
11d6c(5): mov $0x16d,%edx
11d71(4): test $0x3,%r12b
11d75(2): jnz 0x3e(%rip)
11d77(3): mov %r12d,%eax
11d7a(5): mov $0x51eb851f,%edx
11d7f(2): imul %eax,%edx,%edx
11d81(2): mov %edx,%eax
11d83(3): mov %r12d,%edx
11d86(3): sar $0x1f,%edx
11d89(3): sar $0x5,%eax
11d8c(2): sub %edx,%eax
11d8e(5): mov $0x16e,%edx
11d93(3): imul %eax,$0x64,%eax
11d96(3): cmp %eax,%r12d
11d99(2): jnz 0x1a(%rip)
11d9b(3): mov %r12d,%eax
11d9e(5): mov $0x190,%ecx
11da3(1): cdq %eax
11da4(2): idiv %ecx,%eax
11da6(3): cmp $0x1,%edx
11da9(2): sbb %edx,%edx
11dab(2): not %edx
11dad(6): add $0x16e,%edx
11db3(3): add %edx,%r8d
11db6(5): mov $0x92492493,%edx
11dbb(3): mov %r8d,%ecx
11dbe(4): sub 0x38(%rsp),%ecx
11dc2(6): add $0x17e,%ecx
11dc8(2): mov %ecx,%eax
11dca(3): sub %ecx,%r8d
11dcd(2): imul %eax,%edx,%edx
11dcf(3): lea 0x0(%rdx,%rcx,1),%eax
11dd2(2): mov %ecx,%edx
11dd4(3): sar $0x1f,%edx
11dd7(3): sar $0x2,%eax
11dda(2): sub %edx,%eax
11ddc(7): lea 0x0(,%rax,8),%edx
11de3(2): sub %eax,%edx
11de5(5): lea 0x3(%r8,%rdx,1),%ecx
11dea(6): mov $0xffffffff,%r8d
11df0(5): jmp 0xfffff6ef(%rip)
11df5(3): imul %esi,$0x64,%esi
11df8(5): mov $0x1,0x40(%rsp)
11dfd(5): mov $0x9,%edi
11e02(7): imul %r12d,$0x2710,%eax
11e09(2): add %esi,%eax
11e0b(5): mov $0x14,%esi
11e10(2): add %eax,%ecx
11e12(5): movzx 0x38(%rsp),%eax
11e17(3): xor $0x1,%eax
11e1a(5): jmp 0xffffec9d(%rip)
11e1f(2): mov %ecx,%eax
11e21(5): mov $0x92492493,%edx
11e26(5): mov $0x2,%edi
11e2b(2): imul %eax,%edx,%edx
11e2d(3): lea 0x0(%rdx,%rcx,1),%eax
11e30(3): sar $0x1f,%ecx
11e33(3): sar $0x2,%eax
11e36(2): sub %ecx,%eax
11e38(2): mov %eax,%ecx
11e3a(3): add $0x1,%ecx
11e3d(5): jmp 0xffffec63(%rip)
11e42(5): movzx 0x38(%rsp),%eax
11e47(5): mov $0x1,0x40(%rsp)
11e4c(5): mov $0x6,%edi
11e51(4): imul %r12d,$0x64,%ecx
11e55(3): xor $0x1,%eax
11e58(2): add %esi,%ecx
11e5a(5): mov $0x4,%esi
11e5f(5): jmp 0xffffec58(%rip)
11e64(3): mov %rbp,%rdi
11e67(5): mov $0x30,%esi
11e6c(3): mov %r12,%rbp
11e6f(5): call 0xffff1691(%rip)
11e74(5): mov 0x30(%rsp),%rcx
11e79(5): jmp 0xffffecf3(%rip)
11e7e(3): mov %rbp,%rdi
11e81(5): mov $0x30,%esi
11e86(3): mov %r12,%rbp
11e89(5): call 0xffff1677(%rip)
11e8e(5): mov 0x30(%rsp),%rcx
11e93(5): jmp 0xfffffa3f(%rip)
11e98(5): call 0xffff1758(%rip)
11e9d(5): mov 0x30(%rsp),%rcx
11ea2(5): jmp 0xfffff033(%rip)
11ea7(5): mov 0x20(%rsp),%rsi
11eac(3): mov %r12,%rdx
11eaf(3): mov %rbp,%rdi
11eb2(5): mov %rcx,0x30(%rsp)
11eb7(5): call 0xffffe5e9(%rip)
11ebc(5): mov 0x30(%rsp),%rcx
11ec1(5): jmp 0xfffff014(%rip)
11ec6(4): mov %al,0x30(%rsp)
11eca(5): jmp 0xffffe8c6(%rip)
11ecf(3): movzx (%rbx),%ecx
11ed2(3): mov %rbx,%r9
11ed5(5): jmp 0xfffff864(%rip)
11eda(4): lea 0x2(%rbx),%rcx
11ede(6): mov $0x1,%r8d
11ee4(3): mov %rcx,%rdx
11ee7(4): add $0x1,%rcx
11eeb(4): movzx 0xffffffff(%rcx),%eax
11eef(4): add $0x1,%r8
11ef3(2): cmp $0x3a,%al
11ef5(6): jnz 0xfffff4d8(%rip)
11efb(2): jmp 0xffffffe9(%rip)
11efd(3): mov %r10d,%esi
11f00(5): mov $0x0,%eax
11f05(3): sub $0x6,%esi
11f08(3): cmovns %esi,%eax
11f0b(4): mov %eax,0x38(%rsp)
11f0f(7): lea 0x81b3(%rip),%rax
11f16(5): mov %rax,0x40(%rsp)
11f1b(5): jmp 0xffffec97(%rip)
11f20(4): imul %r12d,$0x64,%ecx
11f24(2): xor %esi,%esi
11f26(5): mov $0x1,0x40(%rsp)
11f2b(5): mov $0x5,%edi
11f30(2): add %eax,%ecx
11f32(5): movzx 0x38(%rsp),%eax
11f37(3): xor $0x1,%eax
11f3a(5): jmp 0xffffeb7d(%rip)
11f3f(3): mov %rbp,%rdi
11f42(5): mov $0x30,%esi
11f47(5): call 0xffff15b9(%rip)
11f4c(5): mov 0x38(%rsp),%rbp
11f51(6): movzx 0x40(%rsp),%r8d
11f57(5): mov 0x48(%rsp),%rcx
11f5c(5): jmp 0xffffef4b(%rip)
11f61(3): mov %rbp,%rdi
11f64(5): mov $0x30,%esi
11f69(3): mov %r12,%rbp
11f6c(5): call 0xffff1594(%rip)
11f71(5): mov 0x40(%rsp),%rcx
11f76(5): mov 0x50(%rsp),%r9
11f7b(5): mov 0x58(%rsp),%r8
11f80(5): jmp 0xfffff23f(%rip)
11f85(5): mov $0x30,%esi
11f8a(5): jmp 0xffffeda1(%rip)
11f8f(3): mov %rbp,%rdi
11f92(5): mov $0x30,%esi
11f97(5): call 0xffff1569(%rip)
11f9c(5): mov 0x40(%rsp),%rbp
11fa1(5): mov 0x50(%rsp),%r11
11fa6(5): mov 0x58(%rsp),%rcx
11fab(5): mov 0x60(%rsp),%r8
11fb0(5): mov 0x6c(%rsp),%r10d
11fb5(5): jmp 0xfffffc3f(%rip)
11fba(5): mov $0x0,0x38(%rsp)
11fbf(5): mov $0x2,%edi
11fc4(5): jmp 0xfffff6fc(%rip)
11fc9(7): mov 0x518(%rsp),%ecx
11fd0(5): jmp 0xfffff816(%rip)
11fd5(5): call 0xffff144b(%rip)
11fda(3): add $0x64,%ecx
11fdd(3): test %r15d,%r15d
11fe0(6): jz 0xfffff56a(%rip)
11fe6(5): jmp 0xffffef3c(%rip)
11feb(2): xor %edi,%edi
11fed(5): jmp 0xffffeaef(%rip)

"nstrftime" :
12000(4): sub $0x18,%rsp
12004(9): mov $0x28,%rax
1200d(5): mov %rax,0x8(%rsp)
12012(2): xor %eax,%eax
12014(5): mov $0x0,0x7(%rsp)
12019(2): push %r9
1201b(3): xor %r9d,%r9d
1201e(2): push %r8
12020(3): xor %r8d,%r8d
12023(5): lea 0x17(%rsp),%rax
12028(1): push %rax
12029(2): push $0xff
1202b(5): call 0xffffe515(%rip)
12030(4): add $0x20,%rsp
12034(5): mov 0x8(%rsp),%rdx
12039(9): xor $0x28,%rdx
12042(2): jnz 0x7(%rip)
12044(4): add $0x18,%rsp
12048(1): ret near (%rsp)
12049(5): call 0xffff13d7(%rip)

"set_program_name" :
12050(3): test %rdi,%rdi
12053(1): push %rbx
12054(2): jz 0x79(%rip)
12056(5): mov $0x2f,%esi
1205b(3): mov %rdi,%rbx
1205e(5): call 0xffff1442(%rip)
12063(3): test %rax,%rax
12066(2): jz 0x57(%rip)
12068(4): lea 0x1(%rax),%r8
1206c(3): mov %r8,%rdx
1206f(3): sub %rbx,%rdx
12072(4): cmp $0x6,%rdx
12076(2): jle 0x47(%rip)
12078(4): lea 0xfffffffa(%rax),%rsi
1207c(7): lea 0x827d(%rip),%rdi
12083(5): mov $0x7,%ecx
12088(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1208a(3): setnbe %dl
1208d(3): sbb $0x0,%dl
12090(2): test %dl,%dl
12092(2): jnz 0x2b(%rip)
12094(7): lea 0x826d(%rip),%rdi
1209b(5): mov $0x3,%ecx
120a0(3): mov %r8,%rsi
120a3(3): mov %r8,%rbx
120a6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
120a8(3): setnbe %dl
120ab(3): sbb $0x0,%dl
120ae(2): test %dl,%dl
120b0(2): jnz 0xd(%rip)
120b2(4): lea 0x4(%rax),%rbx
120b6(7): mov %rbx,0x20e1c3(%rip)
120bd(7): mov %rbx,0x20f33c(%rip)
120c4(7): mov %rbx,0x20e1d5(%rip)
120cb(1): pop %rbx
120cc(1): ret near (%rsp)
120cd(7): mov 0x20e1ec(%rip),%rcx
120d4(7): lea 0x81ed(%rip),%rdi
120db(5): mov $0x37,%edx
120e0(5): mov $0x1,%esi
120e5(5): call 0xffff170b(%rip)
120ea(5): call 0xffff11a6(%rip)

"gettext_quote.part.1" :
120f0(1): push %rbp
120f1(1): push %rbx
120f2(3): mov %rdi,%rbp
120f5(2): mov %esi,%ebx
120f7(4): sub $0x8,%rsp
120fb(5): call 0x3c65(%rip)
12100(3): movzx (%rax),%edx
12103(3): and $0xdf,%edx
12106(3): cmp $0x55,%dl
12109(2): jz 0x77(%rip)
1210b(3): cmp $0x47,%dl
1210e(2): jz 0x22(%rip)
12110(7): lea 0x8204(%rip),%rax
12117(7): lea 0x8b84(%rip),%rdx
1211e(3): cmp $0x9,%ebx
12121(4): cmovne %rdx,%rax
12125(4): add $0x8,%rsp
12129(1): pop %rbx
1212a(1): pop %rbp
1212b(1): ret near (%rsp)
1212c(4): nop 0x0(%rax)
12130(4): movzx 0x1(%rax),%edx
12134(3): and $0xdf,%edx
12137(3): cmp $0x42,%dl
1213a(2): jnz 0xffffffd6(%rip)
1213c(4): cmp $0x31,0x2(%rax)
12140(2): jnz 0xffffffd0(%rip)
12142(4): cmp $0x38,0x3(%rax)
12146(2): jnz 0xffffffca(%rip)
12148(4): cmp $0x30,0x4(%rax)
1214c(2): jnz 0xffffffc4(%rip)
1214e(4): cmp $0x33,0x5(%rax)
12152(2): jnz 0xffffffbe(%rip)
12154(4): cmp $0x30,0x6(%rax)
12158(2): jnz 0xffffffb8(%rip)
1215a(4): cmp $0x0,0x7(%rax)
1215e(2): jnz 0xffffffb2(%rip)
12160(4): cmp $0x60,0x0(%rbp)
12164(7): lea 0x81a9(%rip),%rax
1216b(7): lea 0x81a6(%rip),%rdx
12172(4): cmovne %rdx,%rax
12176(4): add $0x8,%rsp
1217a(1): pop %rbx
1217b(1): pop %rbp
1217c(1): ret near (%rsp)
1217d(3): nop (%rax)
12180(4): movzx 0x1(%rax),%edx
12184(3): and $0xdf,%edx
12187(3): cmp $0x54,%dl
1218a(2): jnz 0xffffff86(%rip)
1218c(4): movzx 0x2(%rax),%edx
12190(3): and $0xdf,%edx
12193(3): cmp $0x46,%dl
12196(6): jnz 0xffffff7a(%rip)
1219c(4): cmp $0x2d,0x3(%rax)
121a0(6): jnz 0xffffff70(%rip)
121a6(4): cmp $0x38,0x4(%rax)
121aa(6): jnz 0xffffff66(%rip)
121b0(4): cmp $0x0,0x5(%rax)
121b4(6): jnz 0xffffff5c(%rip)
121ba(4): cmp $0x60,0x0(%rbp)
121be(7): lea 0x8147(%rip),%rax
121c5(7): lea 0x8144(%rip),%rdx
121cc(4): cmovne %rdx,%rax
121d0(4): add $0x8,%rsp
121d4(1): pop %rbx
121d5(1): pop %rbp
121d6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
121e0(2): push %r15
121e2(2): push %r14
121e4(3): mov %r8d,%r15d
121e7(2): push %r13
121e9(2): push %r12
121eb(3): mov %rdi,%r14
121ee(1): push %rbp
121ef(1): push %rbx
121f0(3): mov %r9d,%ebx
121f3(3): mov %rsi,%r13
121f6(3): mov %rcx,%rbp
121f9(3): and $0x2,%ebx
121fc(7): sub $0xb8,%rsp
12203(8): mov 0xf0(%rsp),%rax
1220b(5): mov %rdx,0x10(%rsp)
12210(5): mov %r8d,0x8(%rsp)
12215(5): mov %r9d,0x78(%rsp)
1221a(5): mov %rax,0x20(%rsp)
1221f(8): mov 0xf8(%rsp),%rax
12227(5): mov %rax,0x68(%rsp)
1222c(8): mov 0x100(%rsp),%rax
12234(5): mov %rax,0x60(%rsp)
12239(9): mov $0x28,%rax
12242(8): mov %rax,0xa8(%rsp)
1224a(2): xor %eax,%eax
1224c(5): call 0xffff11a4(%rip)
12251(4): cmp $0xa,%r15d
12255(5): mov %rax,0x58(%rsp)
1225a(6): jnbe 0x11b5(%rip)
12260(7): lea 0x8119(%rip),%rcx
12267(3): mov %r15d,%edx
1226a(4): movsxd 0x0(%rcx,%rdx,4),%rax
1226e(3): add %rcx,%rax
12271(2): jmp %rax
12273(5): mov $0x1,0xe(%rsp)
12278(5): mov $0x0,0x7c(%rsp)
1227d(3): xor %r12d,%r12d
12280(9): mov $0x0,0x50(%rsp)
12289(5): mov $0x1,0xf(%rsp)
1228e(5): mov $0x0,0xd(%rsp)
12293(7): lea 0x8a08(%rip),%rax
1229a(9): mov $0x1,0x18(%rsp)
122a3(3): xor %r15d,%r15d
122a6(8): mov $0x2,0x8(%rsp)
122ae(5): mov %rax,0x48(%rsp)
122b3(3): xor %r11d,%r11d
122b6(3): mov %rbp,%rax
122b9(3): mov %r12d,%r8d
122bc(3): mov %r11,%rbp
122bf(3): mov %rax,%r11
122c2(6): nop 0x0(%rax,%rax,1)
122c8(3): cmp %rbp,%r11
122cb(4): setnz %r12b
122cf(4): cmp $0xffffffff,%r11
122d3(2): jnz 0xf(%rip)
122d5(5): mov 0x10(%rsp),%rax
122da(4): cmp $0x0,0x0(%rax,%rbp,1)
122de(4): setnz %r12b
122e2(3): test %r12b,%r12b
122e5(6): jz 0x65b(%rip)
122eb(5): cmp $0x2,0x8(%rsp)
122f0(5): mov 0x10(%rsp),%rdi
122f5(4): lea 0x0(%rdi,%rbp,1),%r9
122f9(3): setnz %al
122fc(4): and 0xd(%rsp),%al
12300(3): mov %eax,%r10d
12303(6): jz 0xad(%rip)
12309(5): mov 0x18(%rsp),%rax
1230e(3): test %rax,%rax
12311(6): jz 0x42f(%rip)
12317(4): cmp $0xffffffff,%r11
1231b(5): lea 0x0(%rbp,%rax,1),%rbx
12320(2): jnz 0x30(%rip)
12322(4): cmp $0x1,%rax
12326(2): jbe 0x2a(%rip)
12328(5): mov %r8b,0x38(%rsp)
1232d(5): mov %r10b,0x30(%rsp)
12332(5): mov %r9,0x28(%rsp)
12337(5): call 0xffff10c9(%rip)
1233c(6): movzx 0x38(%rsp),%r8d
12342(6): movzx 0x30(%rsp),%r10d
12348(3): mov %rax,%r11
1234b(5): mov 0x28(%rsp),%r9
12350(3): cmp %r11,%rbx
12353(5): mov %r10b,0x28(%rsp)
12358(6): jnbe 0x5b8(%rip)
1235e(5): mov 0x18(%rsp),%rdx
12363(5): mov 0x48(%rsp),%rsi
12368(3): mov %r9,%rdi
1236b(5): mov %r11,0x40(%rsp)
12370(5): mov %r8b,0x38(%rsp)
12375(5): mov %r9,0x30(%rsp)
1237a(5): call 0xffff11d6(%rip)
1237f(2): test %eax,%eax
12381(5): mov 0x30(%rsp),%r9
12386(6): movzx 0x38(%rsp),%r8d
1238c(5): mov 0x40(%rsp),%r11
12391(6): jnz 0x57f(%rip)
12397(5): cmp $0x0,0xf(%rsp)
1239c(6): movzx 0x28(%rsp),%r10d
123a2(6): jnz 0xf83(%rip)
123a8(8): nop 0x0(%rax,%rax,1)
123b0(4): movzx (%r9),%ebx
123b4(3): cmp $0x7e,%bl
123b7(6): jnbe 0x321(%rip)
123bd(7): lea 0x7fe8(%rip),%rcx
123c4(3): movzx %bl,%edx
123c7(4): movsxd 0x0(%rcx,%rdx,4),%rax
123cb(3): add %rcx,%rax
123ce(2): jmp %rax
123d0(3): xor %r10d,%r10d
123d3(4): cmp $0x1,%r11
123d7(3): setnz %al
123da(4): cmp $0xffffffff,%r11
123de(2): jnz 0xe(%rip)
123e0(5): mov 0x10(%rsp),%rax
123e5(4): cmp $0x0,0x1(%rax)
123e9(3): setnz %al
123ec(5): cmp $0x2,0x8(%rsp)
123f1(3): setz %dl
123f4(2): test %al,%al
123f6(6): jz 0x252(%rip)
123fc(3): xor %r12d,%r12d
123ff(2): xor %eax,%eax
12401(7): nop 0x0(%rax)
12408(5): cmp $0x1,0xd(%rsp)
1240d(6): jnz 0x115(%rip)
12413(2): test %dl,%dl
12415(6): jnz 0x10d(%rip)
1241b(5): mov 0x20(%rsp),%rsi
12420(3): test %rsi,%rsi
12423(2): jz 0x16(%rip)
12425(2): mov %ebx,%edx
12427(3): shr $0x5,%dl
1242a(3): movzx %dl,%edx
1242d(3): mov 0x0(%rsi,%rdx,4),%edx
12430(3): bt %ebx,%edx
12433(6): jb 0x150(%rip)
12439(3): test %r10b,%r10b
1243c(6): jnz 0x147(%rip)
12442(3): xor $0x1,%eax
12445(4): add $0x1,%rbp
12449(3): and %r8d,%eax
1244c(2): test %al,%al
1244e(2): jz 0x22(%rip)
12450(3): cmp %r15,%r13
12453(2): jbe 0x7(%rip)
12455(5): mov $0x27,0x0(%r14,%r15,1)
1245a(4): lea 0x1(%r15),%rax
1245e(3): cmp %rax,%r13
12461(2): jbe 0x8(%rip)
12463(6): mov $0x27,0x1(%r14,%r15,1)
12469(4): add $0x2,%r15
1246d(3): xor %r8d,%r8d
12470(3): cmp %r13,%r15
12473(2): jnb 0x6(%rip)
12475(4): mov %bl,0x0(%r14,%r15,1)
12479(5): movzx 0xe(%rsp),%edi
1247e(4): add $0x1,%r15
12482(5): mov $0x0,%eax
12487(3): test %r12b,%r12b
1248a(3): cmove %eax,%edi
1248d(5): mov %dil,0xe(%rsp)
12492(5): jmp 0xfffffe36(%rip)
12497(9): nop 0x0(%rax,%rax,1)
124a0(3): xor %r10d,%r10d
124a3(4): mov 0x8(%rsp),%eax
124a7(3): cmp $0x2,%eax
124aa(6): jz 0x5be(%rip)
124b0(3): cmp $0x5,%eax
124b3(6): jz 0x575(%rip)
124b9(3): cmp $0x2,%eax
124bc(5): mov $0x3f,%ebx
124c1(3): setz %dl
124c4(3): xor %r12d,%r12d
124c7(2): xor %eax,%eax
124c9(5): jmp 0xffffff3f(%rip)
124ce(2): nop 
124d0(3): xor %r10d,%r10d
124d3(5): cmp $0x2,0x8(%rsp)
124d8(6): jz 0x508(%rip)
124de(5): mov %r12b,0x7c(%rsp)
124e3(2): xor %edx,%edx
124e5(2): xor %eax,%eax
124e7(5): mov $0x27,%ebx
124ec(5): jmp 0xffffff1c(%rip)
124f1(7): nop 0x0(%rax)
124f8(5): mov $0x9,%edx
124fd(5): mov $0x74,%ebx
12502(5): cmp $0x2,0x8(%rsp)
12507(3): setz %al
1250a(4): and 0xf(%rsp),%al
1250e(6): jnz 0x150(%rip)
12514(5): cmp $0x0,0xd(%rsp)
12519(2): jnz 0x67(%rip)
1251b(2): mov %edx,%ebx
1251d(3): xor %r12d,%r12d
12520(2): xor %eax,%eax
12522(5): cmp $0x0,0xf(%rsp)
12527(6): jnz 0xfffffef4(%rip)
1252d(5): jmp 0xffffff0c(%rip)
12532(6): nop 0x0(%rax,%rax,1)
12538(5): mov $0x8,%edx
1253d(5): mov $0x62,%ebx
12542(2): jmp 0xffffffd2(%rip)
12544(4): nop 0x0(%rax)
12548(5): cmp $0x2,0x8(%rsp)
1254d(6): jz 0x3d3(%rip)
12553(5): cmp $0x0,0xd(%rsp)
12558(6): jz 0x218(%rip)
1255e(5): cmp $0x0,0xf(%rsp)
12563(6): jz 0x20d(%rip)
12569(6): cmp $0x0,0x18(%rsp)
1256f(6): jnz 0x3bc(%rip)
12575(5): mov $0x5c,%ebx
1257a(6): nop 0x0(%rax,%rax,1)
12580(3): xor %r12d,%r12d
12583(5): cmp $0x2,0x8(%rsp)
12588(3): setz %dl
1258b(5): cmp $0x0,0xf(%rsp)
12590(2): mov %edx,%eax
12592(6): jnz 0x856(%rip)
12598(3): mov %r8d,%eax
1259b(3): xor $0x1,%eax
1259e(2): and %dl,%al
125a0(2): jz 0x31(%rip)
125a2(3): cmp %r15,%r13
125a5(2): jbe 0x7(%rip)
125a7(5): mov $0x27,0x0(%r14,%r15,1)
125ac(4): lea 0x1(%r15),%rdx
125b0(3): cmp %rdx,%r13
125b3(2): jbe 0x8(%rip)
125b5(6): mov $0x24,0x1(%r14,%r15,1)
125bb(4): lea 0x2(%r15),%rdx
125bf(3): cmp %rdx,%r13
125c2(2): jbe 0x8(%rip)
125c4(6): mov $0x27,0x2(%r14,%r15,1)
125ca(4): add $0x3,%r15
125ce(3): mov %eax,%r8d
125d1(3): cmp %r15,%r13
125d4(2): jbe 0x7(%rip)
125d6(5): mov $0x5c,0x0(%r14,%r15,1)
125db(4): add $0x1,%r15
125df(4): add $0x1,%rbp
125e3(5): jmp 0xfffffe8d(%rip)
125e8(8): nop 0x0(%rax,%rax,1)
125f0(5): cmp $0x0,0xd(%rsp)
125f5(6): jnz 0x1ce(%rip)
125fb(2): xor %edx,%edx
125fd(5): test $0x1,0x78(%rsp)
12602(6): jz 0xffffff19(%rip)
12608(4): add $0x1,%rbp
1260c(5): jmp 0xfffffcbc(%rip)
12611(7): nop 0x0(%rax)
12618(5): cmp $0x2,0x8(%rsp)
1261d(3): setz %dl
12620(2): xor %eax,%eax
12622(5): jmp 0xfffffde6(%rip)
12627(9): nop 0x0(%rax,%rax,1)
12630(5): mov $0x7,%edx
12635(5): mov $0x61,%ebx
1263a(5): jmp 0xfffffeda(%rip)
1263f(1): nop 
12640(5): cmp $0x2,0x8(%rsp)
12645(3): setz %dl
12648(3): test %rbp,%rbp
1264b(6): jnz 0xfffffdb1(%rip)
12651(5): movzx 0xf(%rsp),%eax
12656(2): and %dl,%al
12658(6): jz 0xfffffdb0(%rip)
1265e(3): mov %r11,%rbp
12661(8): mov $0x2,0x8(%rsp)
12669(5): jmp 0x700(%rip)
1266e(2): nop 
12670(5): cmp $0x2,0x8(%rsp)
12675(3): setz %dl
12678(3): xor %r12d,%r12d
1267b(2): jmp 0xffffffd6(%rip)
1267d(3): nop (%rax)
12680(5): cmp $0x2,0x8(%rsp)
12685(5): mov $0x20,%ebx
1268a(3): setz %dl
1268d(2): jmp 0xffffffc4(%rip)
1268f(1): nop 
12690(5): mov $0xd,%edx
12695(5): mov $0x72,%ebx
1269a(5): jmp 0xfffffe68(%rip)
1269f(1): nop 
126a0(5): mov $0xc,%edx
126a5(5): mov $0x66,%ebx
126aa(5): jmp 0xfffffe6a(%rip)
126af(1): nop 
126b0(5): mov $0xb,%edx
126b5(5): mov $0x76,%ebx
126ba(5): jmp 0xfffffe5a(%rip)
126bf(1): nop 
126c0(5): mov $0xa,%edx
126c5(5): mov $0x6e,%ebx
126ca(5): jmp 0xfffffe38(%rip)
126cf(1): nop 
126d0(3): xor %r10d,%r10d
126d3(5): nop 0x0(%rax,%rax,1)
126d8(6): cmp $0x1,0x58(%rsp)
126de(6): jnz 0x3aa(%rip)
126e4(5): mov %r11,0x38(%rsp)
126e9(5): mov %r8b,0x30(%rsp)
126ee(5): mov %r10b,0x28(%rsp)
126f3(5): call 0xffff116d(%rip)
126f8(3): mov (%rax),%rcx
126fb(3): movzx %bl,%edx
126fe(6): movzx 0x28(%rsp),%r10d
12704(6): movzx 0x30(%rsp),%r8d
1270a(5): mov 0x38(%rsp),%r11
1270f(5): mov $0x1,%edi
12714(4): movzx 0x0(%rcx,%rdx,2),%eax
12718(4): and $0x4000,%ax
1271c(4): setnz %r12b
12720(3): setz %al
12723(4): and 0xd(%rsp),%al
12727(2): test %al,%al
12729(6): jnz 0x998(%rip)
1272f(5): cmp $0x2,0x8(%rsp)
12734(3): setz %dl
12737(5): jmp 0xfffffcd1(%rip)
1273c(4): nop 0x0(%rax)
12740(4): movzx (%r9),%ebx
12744(3): cmp $0x7e,%bl
12747(2): jnbe 0xffffff89(%rip)
12749(7): lea 0x7e58(%rip),%rcx
12750(3): movzx %bl,%edx
12753(4): movsxd 0x0(%rcx,%rdx,4),%rax
12757(3): add %rcx,%rax
1275a(2): jmp %rax
1275c(4): nop 0x0(%rax)
12760(3): xor %r10d,%r10d
12763(5): cmp $0x0,0xd(%rsp)
12768(6): jnz 0xfffffdf6(%rip)
1276e(2): nop 
12770(5): mov $0x5c,%edx
12775(5): mov $0x5c,%ebx
1277a(5): jmp 0xfffffd9a(%rip)
1277f(1): nop 
12780(5): mov $0xc,%edx
12785(3): xor %r10d,%r10d
12788(5): mov $0x66,%ebx
1278d(5): jmp 0xfffffd87(%rip)
12792(6): nop 0x0(%rax,%rax,1)
12798(5): mov $0xa,%edx
1279d(3): xor %r10d,%r10d
127a0(5): mov $0x6e,%ebx
127a5(5): jmp 0xfffffd5d(%rip)
127aa(6): nop 0x0(%rax,%rax,1)
127b0(5): mov $0x61,%ebx
127b5(5): jmp 0xfffffdcb(%rip)
127ba(6): nop 0x0(%rax,%rax,1)
127c0(3): xor %r10d,%r10d
127c3(5): cmp $0x2,0x8(%rsp)
127c8(3): setz %dl
127cb(5): cmp $0x0,0xf(%rsp)
127d0(6): jnz 0xb9a(%rip)
127d6(3): mov %r8d,%eax
127d9(3): mov %r15,%rcx
127dc(3): xor $0x1,%eax
127df(2): and %dl,%al
127e1(2): jz 0x2f(%rip)
127e3(3): cmp %r15,%r13
127e6(2): jbe 0x7(%rip)
127e8(5): mov $0x27,0x0(%r14,%r15,1)
127ed(4): lea 0x1(%r15),%rcx
127f1(3): cmp %rcx,%r13
127f4(2): jbe 0x8(%rip)
127f6(6): mov $0x24,0x1(%r14,%r15,1)
127fc(4): lea 0x2(%r15),%rcx
12800(3): cmp %rcx,%r13
12803(6): jnbe 0x636(%rip)
12809(4): lea 0x3(%r15),%rcx
1280d(3): mov %eax,%r8d
12810(3): cmp %rcx,%r13
12813(2): jbe 0x7(%rip)
12815(5): mov $0x5c,0x0(%r14,%rcx,1)
1281a(5): cmp $0x2,0x8(%rsp)
1281f(4): lea 0x1(%rcx),%r15
12823(6): jz 0x606(%rip)
12829(4): lea 0x1(%rbp),%rax
1282d(3): cmp %r11,%rax
12830(2): jnb 0x1b(%rip)
12832(5): mov 0x10(%rsp),%rax
12837(5): movzx 0x1(%rax,%rbp,1),%eax
1283c(4): mov %al,0x28(%rsp)
12840(3): sub $0x30,%eax
12843(2): cmp $0x9,%al
12845(6): jbe 0x834(%rip)
1284b(3): mov %r12d,%eax
1284e(5): mov $0x30,%ebx
12853(3): xor %r12d,%r12d
12856(5): jmp 0xfffffbb2(%rip)
1285b(5): nop 0x0(%rax,%rax,1)
12860(5): cmp $0x2,0x8(%rsp)
12865(3): mov %r10d,%r12d
12868(3): setz %dl
1286b(3): xor %r10d,%r10d
1286e(2): xor %eax,%eax
12870(5): jmp 0xfffffb98(%rip)
12875(3): nop (%rax)
12878(5): cmp $0x2,0x8(%rsp)
1287d(3): setz %dl
12880(3): xor %r10d,%r10d
12883(5): jmp 0xfffffdc5(%rip)
12888(8): nop 0x0(%rax,%rax,1)
12890(5): cmp $0x2,0x8(%rsp)
12895(3): setz %dl
12898(3): xor %r10d,%r10d
1289b(3): xor %r12d,%r12d
1289e(5): jmp 0xfffffdb3(%rip)
128a3(5): nop 0x0(%rax,%rax,1)
128a8(5): cmp $0x2,0x8(%rsp)
128ad(3): mov %r10d,%r12d
128b0(5): mov $0x20,%ebx
128b5(3): setz %dl
128b8(3): xor %r10d,%r10d
128bb(5): jmp 0xfffffd96(%rip)
128c0(5): mov $0xd,%edx
128c5(3): xor %r10d,%r10d
128c8(5): mov $0x72,%ebx
128cd(5): jmp 0xfffffc35(%rip)
128d2(6): nop 0x0(%rax,%rax,1)
128d8(5): mov $0x76,%ebx
128dd(5): jmp 0xfffffca3(%rip)
128e2(6): nop 0x0(%rax,%rax,1)
128e8(5): mov $0x9,%edx
128ed(3): xor %r10d,%r10d
128f0(5): mov $0x74,%ebx
128f5(5): jmp 0xfffffc0d(%rip)
128fa(6): nop 0x0(%rax,%rax,1)
12900(5): mov $0x62,%ebx
12905(5): jmp 0xfffffc7b(%rip)
1290a(6): nop 0x0(%rax,%rax,1)
12910(3): xor %r10d,%r10d
12913(5): jmp 0xfffffa9d(%rip)
12918(8): nop 0x0(%rax,%rax,1)
12920(5): cmp $0x0,0xf(%rsp)
12925(6): jnz 0x96b(%rip)
1292b(4): add $0x1,%rbp
1292f(3): mov %r8d,%eax
12932(3): xor %r12d,%r12d
12935(5): mov $0x5c,%ebx
1293a(5): jmp 0xfffffb12(%rip)
1293f(1): nop 
12940(5): cmp $0x2,0x8(%rsp)
12945(5): movzx 0xf(%rsp),%ebx
1294a(3): mov %r8d,%r12d
1294d(3): mov %r11,%rbp
12950(3): setz %dl
12953(2): mov %ebx,%eax
12955(3): test %r15,%r15
12958(3): setz %cl
1295b(2): and %edx,%eax
1295d(2): and %cl,%al
1295f(6): jnz 0xa67(%rip)
12965(2): mov %ebx,%eax
12967(3): xor $0x1,%eax
1296a(2): and %al,%dl
1296c(6): jz 0x970(%rip)
12972(5): cmp $0x0,0x7c(%rsp)
12977(6): jz 0x963(%rip)
1297d(5): cmp $0x0,0xe(%rsp)
12982(6): jnz 0x9fb(%rip)
12988(3): test %r13,%r13
1298b(3): setz %al
1298e(6): cmp $0x0,0x50(%rsp)
12994(3): setnz %dl
12997(2): and %dl,%al
12999(6): jz 0xa23(%rip)
1299f(5): mov 0x50(%rsp),%r13
129a4(7): lea 0x82f7(%rip),%rbx
129ab(4): mov $0x27,(%r14)
129af(8): mov $0x2,0x8(%rsp)
129b7(6): mov $0x1,%r15d
129bd(9): mov $0x1,0x18(%rsp)
129c6(5): mov $0x0,0xf(%rsp)
129cb(5): mov %rbx,0x48(%rsp)
129d0(4): mov %al,0x7c(%rsp)
129d4(5): jmp 0xfffff8df(%rip)
129d9(7): nop 0x0(%rax)
129e0(5): cmp $0x0,0xf(%rsp)
129e5(6): jnz 0x8ab(%rip)
129eb(3): test %r13,%r13
129ee(6): jz 0x402(%rip)
129f4(2): xor %edx,%edx
129f6(6): cmp $0x0,0x50(%rsp)
129fc(6): jnz 0x3f4(%rip)
12a02(5): mov %r13,0x50(%rsp)
12a07(4): add $0x3,%r15
12a0b(2): xor %eax,%eax
12a0d(5): mov %r12b,0x7c(%rsp)
12a12(3): xor %r8d,%r8d
12a15(3): mov %rdx,%r13
12a18(5): mov $0x27,%ebx
12a1d(5): jmp 0xfffffa1c(%rip)
12a22(6): nop 0x0(%rax,%rax,1)
12a28(5): test $0x4,0x78(%rsp)
12a2d(2): jz 0x23(%rip)
12a2f(4): lea 0x2(%rbp),%rcx
12a33(3): cmp %r11,%rcx
12a36(2): jnb 0x1a(%rip)
12a38(5): mov 0x10(%rsp),%rax
12a3d(5): cmp $0x3f,0x1(%rax,%rbp,1)
12a42(6): jz 0x790(%rip)
12a48(8): nop 0x0(%rax,%rax,1)
12a50(2): xor %edx,%edx
12a52(3): xor %r12d,%r12d
12a55(2): xor %eax,%eax
12a57(5): mov $0x3f,%ebx
12a5c(5): jmp 0xfffff9ac(%rip)
12a61(7): nop 0x0(%rax)
12a68(5): cmp $0x0,0xf(%rsp)
12a6d(6): jnz 0x823(%rip)
12a73(3): xor %r12d,%r12d
12a76(2): xor %eax,%eax
12a78(5): mov $0x3f,%ebx
12a7d(5): jmp 0xfffff9bc(%rip)
12a82(6): nop 0x0(%rax,%rax,1)
12a88(8): lea 0xa0(%rsp),%rax
12a90(4): cmp $0xffffffff,%r11
12a94(c): mov $0x0,0xa0(%rsp)
12aa0(5): mov %rax,0x28(%rsp)
12aa5(2): jnz 0x2f(%rip)
12aa7(5): mov 0x10(%rsp),%rdi
12aac(5): mov %r8b,0x40(%rsp)
12ab1(5): mov %r10b,0x38(%rsp)
12ab6(5): mov %r9,0x30(%rsp)
12abb(5): call 0xffff0945(%rip)
12ac0(6): movzx 0x40(%rsp),%r8d
12ac6(6): movzx 0x38(%rsp),%r10d
12acc(3): mov %rax,%r11
12acf(5): mov 0x30(%rsp),%r9
12ad4(8): lea 0x9c(%rsp),%rax
12adc(2): xor %ecx,%ecx
12ade(4): mov %bl,0x7e(%rsp)
12ae2(5): mov %r8b,0x7d(%rsp)
12ae7(3): mov %rcx,%rbx
12aea(8): mov %r9,0x88(%rsp)
12af2(5): mov %rax,0x38(%rsp)
12af7(5): mov %r10b,0x7f(%rsp)
12afc(8): mov %r15,0x80(%rsp)
12b04(5): mov %r14,0x40(%rsp)
12b09(5): mov %r13,0x70(%rsp)
12b0e(5): mov %r11,0x30(%rsp)
12b13(5): mov 0x10(%rsp),%rax
12b18(5): lea 0x0(%rbp,%rbx,1),%r14
12b1d(5): mov 0x30(%rsp),%rdx
12b22(5): mov 0x28(%rsp),%rcx
12b27(5): mov 0x38(%rsp),%rdi
12b2c(4): lea 0x0(%rax,%r14,1),%r13
12b30(3): sub %r14,%rdx
12b33(3): mov %r13,%rsi
12b36(5): call 0x281a(%rip)
12b3b(3): test %rax,%rax
12b3e(3): mov %rax,%r15
12b41(2): jz 0x50(%rip)
12b43(4): cmp $0xffffffff,%rax
12b47(6): jz 0x61e(%rip)
12b4d(4): cmp $0xfffffffe,%rax
12b51(6): jz 0x5a0(%rip)
12b57(5): cmp $0x2,0x8(%rsp)
12b5c(3): setz %al
12b5f(4): and 0xf(%rsp),%al
12b63(6): jnz 0x19d(%rip)
12b69(7): mov 0x9c(%rsp),%edi
12b70(5): call 0xffff0cc0(%rip)
12b75(5): mov 0x28(%rsp),%rdi
12b7a(2): test %eax,%eax
12b7c(5): mov $0x0,%eax
12b81(4): cmove %eax,%r12d
12b85(3): add %r15,%rbx
12b88(5): call 0xffff0c98(%rip)
12b8d(2): test %eax,%eax
12b8f(2): jz 0xffffff84(%rip)
12b91(3): mov %r12d,%edx
12b94(3): mov %rbx,%rdi
12b97(6): movzx 0x7d(%rsp),%r8d
12b9d(3): xor $0x1,%edx
12ba0(5): movzx 0x7e(%rsp),%ebx
12ba5(6): movzx 0x7f(%rsp),%r10d
12bab(4): and 0xd(%rsp),%dl
12baf(8): mov 0x80(%rsp),%r15
12bb7(5): mov 0x40(%rsp),%r14
12bbc(5): mov 0x70(%rsp),%r13
12bc1(5): mov 0x30(%rsp),%r11
12bc6(4): cmp $0x1,%rdi
12bca(6): jbe 0x601(%rip)
12bd0(3): mov %rdi,%rcx
12bd3(2): xor %esi,%esi
12bd5(6): movzx 0xf(%rsp),%r9d
12bdb(3): add %rbp,%rcx
12bde(5): mov 0x10(%rsp),%rdi
12be3(5): jmp 0xbb(%rip)
12be8(8): nop 0x0(%rax,%rax,1)
12bf0(5): cmp $0x2,0x8(%rsp)
12bf5(3): setz %al
12bf8(3): test %r9b,%r9b
12bfb(6): jnz 0x4b5(%rip)
12c01(3): mov %r8d,%esi
12c04(3): xor $0x1,%esi
12c07(3): and %sil,%al
12c0a(2): jz 0x31(%rip)
12c0c(3): cmp %r15,%r13
12c0f(2): jbe 0x7(%rip)
12c11(5): mov $0x27,0x0(%r14,%r15,1)
12c16(4): lea 0x1(%r15),%rsi
12c1a(3): cmp %rsi,%r13
12c1d(2): jbe 0x8(%rip)
12c1f(6): mov $0x24,0x1(%r14,%r15,1)
12c25(4): lea 0x2(%r15),%rsi
12c29(3): cmp %rsi,%r13
12c2c(2): jbe 0x8(%rip)
12c2e(6): mov $0x27,0x2(%r14,%r15,1)
12c34(4): add $0x3,%r15
12c38(3): mov %eax,%r8d
12c3b(3): cmp %r15,%r13
12c3e(2): jbe 0x7(%rip)
12c40(5): mov $0x5c,0x0(%r14,%r15,1)
12c45(4): lea 0x1(%r15),%rax
12c49(3): cmp %rax,%r13
12c4c(2): jbe 0xf(%rip)
12c4e(2): mov %ebx,%eax
12c50(3): shr $0x6,%al
12c53(3): add $0x30,%eax
12c56(5): mov %al,0x1(%r14,%r15,1)
12c5b(4): lea 0x2(%r15),%rax
12c5f(3): cmp %rax,%r13
12c62(2): jbe 0x12(%rip)
12c64(2): mov %ebx,%eax
12c66(3): shr $0x3,%al
12c69(3): and $0x7,%eax
12c6c(3): add $0x30,%eax
12c6f(5): mov %al,0x2(%r14,%r15,1)
12c74(3): and $0x7,%ebx
12c77(4): add $0x1,%rbp
12c7b(4): add $0x3,%r15
12c7f(3): add $0x30,%ebx
12c82(3): cmp %rcx,%rbp
12c85(6): jnb 0xfffff7eb(%rip)
12c8b(2): mov %edx,%esi
12c8d(3): cmp %r15,%r13
12c90(2): jbe 0x6(%rip)
12c92(4): mov %bl,0x0(%r14,%r15,1)
12c96(4): movzx 0x0(%rdi,%rbp,1),%ebx
12c9a(4): add $0x1,%r15
12c9e(2): test %dl,%dl
12ca0(6): jnz 0xffffff50(%rip)
12ca6(2): mov %esi,%eax
12ca8(3): xor $0x1,%eax
12cab(3): and %r8d,%eax
12cae(3): test %r10b,%r10b
12cb1(2): jz 0x10(%rip)
12cb3(3): cmp %r15,%r13
12cb6(2): jbe 0x7(%rip)
12cb8(5): mov $0x5c,0x0(%r14,%r15,1)
12cbd(4): add $0x1,%r15
12cc1(4): add $0x1,%rbp
12cc5(3): cmp %rcx,%rbp
12cc8(6): jnb 0xfffff784(%rip)
12cce(2): test %al,%al
12cd0(6): jz 0x3fe(%rip)
12cd6(3): cmp %r15,%r13
12cd9(2): jbe 0x7(%rip)
12cdb(5): mov $0x27,0x0(%r14,%r15,1)
12ce0(4): lea 0x1(%r15),%rax
12ce4(3): cmp %rax,%r13
12ce7(2): jbe 0x8(%rip)
12ce9(6): mov $0x27,0x1(%r14,%r15,1)
12cef(4): add $0x2,%r15
12cf3(3): xor %r10d,%r10d
12cf6(3): xor %r8d,%r8d
12cf9(2): jmp 0xffffff94(%rip)
12cfb(5): nop 0x0(%rax,%rax,1)
12d00(4): cmp $0x1,%r15
12d04(6): jz 0xfffffe65(%rip)
12d0a(5): mov 0x10(%rsp),%rdi
12d0f(4): lea 0x0(%rdi,%r15,1),%rcx
12d13(5): lea 0x1(%rdi,%r14,1),%rdx
12d18(4): lea 0x0(%rcx,%r14,1),%r8
12d1c(2): jmp 0x11(%rip)
12d1e(2): nop 
12d20(4): add $0x1,%rdx
12d24(3): cmp %rdx,%r8
12d27(6): jz 0xfffffe42(%rip)
12d2d(3): movzx (%rdx),%ecx
12d30(3): sub $0x5b,%ecx
12d33(3): cmp $0x21,%cl
12d36(2): jnbe 0xffffffea(%rip)
12d38(5): mov $0x1,%esi
12d3d(3): shl/sal %cl,%rsi
12d40(3): mov %rsi,%rcx
12d43(a): mov $0x8589934635,%rsi
12d4d(3): test %rsi,%rcx
12d50(2): jz 0xffffffd0(%rip)
12d52(5): mov 0x40(%rsp),%r14
12d57(5): mov 0x70(%rsp),%r13
12d5c(5): mov 0x30(%rsp),%rbp
12d61(8): mov $0x2,0x8(%rsp)
12d69(5): cmp $0x0,0xd(%rsp)
12d6e(2): jz 0x12(%rip)
12d70(2): test %al,%al
12d72(5): mov $0x4,%eax
12d77(5): cmove 0x8(%rsp),%eax
12d7c(4): mov %eax,0x8(%rsp)
12d80(4): sub $0x8,%rsp
12d84(3): mov %rbp,%rcx
12d87(3): mov %r13,%rsi
12d8a(4): push 0x68(%rsp)
12d8e(4): push 0x78(%rsp)
12d92(3): mov %r14,%rdi
12d95(2): push $0x0
12d97(8): mov 0x98(%rsp),%r9d
12d9f(5): mov 0x28(%rsp),%r8d
12da4(5): mov 0x30(%rsp),%rdx
12da9(4): and $0xfd,%r9d
12dad(5): call 0xfffff433(%rip)
12db2(4): add $0x20,%rsp
12db6(3): mov %rax,%r15
12db9(8): mov 0xa8(%rsp),%rbx
12dc1(9): xor $0x28,%rbx
12dca(3): mov %r15,%rax
12dcd(6): jnz 0x606(%rip)
12dd3(7): add $0xb8,%rsp
12dda(1): pop %rbx
12ddb(1): pop %rbp
12ddc(2): pop %r12
12dde(2): pop %r13
12de0(2): pop %r14
12de2(2): pop %r15
12de4(1): ret near (%rsp)
12de5(3): nop (%rax)
12de8(3): mov %r11,%rbp
12deb(5): jmp 0xffffff7e(%rip)
12df0(3): cmp %r15,%r13
12df3(2): jbe 0x7(%rip)
12df5(5): mov $0x27,0x0(%r14,%r15,1)
12dfa(4): lea 0x1(%r15),%rax
12dfe(3): cmp %rax,%r13
12e01(2): jbe 0x8(%rip)
12e03(6): mov $0x5c,0x1(%r14,%r15,1)
12e09(4): lea 0x2(%r15),%rax
12e0d(3): cmp %rax,%r13
12e10(6): jbe 0x5f2(%rip)
12e16(3): mov %r13,%rdx
12e19(6): mov $0x27,0x2(%r14,%r15,1)
12e1f(5): mov 0x50(%rsp),%r13
12e24(5): jmp 0xfffffbde(%rip)
12e29(3): mov %r12d,%eax
12e2c(5): mov $0x30,%ebx
12e31(3): xor %r12d,%r12d
12e34(5): jmp 0xfffff605(%rip)
12e39(6): mov $0x27,0x2(%r14,%r15,1)
12e3f(5): jmp 0xfffff9ca(%rip)
12e44(2): test %ebx,%ebx
12e46(6): jnz 0xfffff42d(%rip)
12e4c(5): mov $0x1,0xd(%rsp)
12e51(3): test %r13,%r13
12e54(6): jnz 0x596(%rip)
12e5a(7): lea 0x7e41(%rip),%rax
12e61(9): mov $0x0,0x50(%rsp)
12e6a(5): mov $0x1,0xe(%rsp)
12e6f(5): mov $0x0,0x7c(%rsp)
12e74(3): xor %r12d,%r12d
12e77(5): mov $0x0,0xf(%rsp)
12e7c(9): mov $0x1,0x18(%rsp)
12e85(5): mov %rax,0x48(%rsp)
12e8a(6): mov $0x1,%r15d
12e90(8): mov $0x2,0x8(%rsp)
12e98(5): jmp 0xfffff41b(%rip)
12e9d(3): nop (%rax)
12ea0(2): test %ebx,%ebx
12ea2(6): jnz 0x3fb(%rip)
12ea8(3): test %r13,%r13
12eab(6): jz 0x22b(%rip)
12eb1(4): mov $0x22,(%r14)
12eb5(5): mov $0x1,0xe(%rsp)
12eba(3): xor %r12d,%r12d
12ebd(5): mov $0x0,0x7c(%rsp)
12ec2(9): mov $0x0,0x50(%rsp)
12ecb(7): lea 0x7449(%rip),%rax
12ed2(5): mov $0x0,0xf(%rsp)
12ed7(5): mov $0x1,0xd(%rsp)
12edc(9): mov $0x1,0x18(%rsp)
12ee5(6): mov $0x1,%r15d
12eeb(5): mov %rax,0x48(%rsp)
12ef0(5): jmp 0xfffff3c3(%rip)
12ef5(7): lea 0x741f(%rip),%rax
12efc(5): mov $0x1,0xe(%rsp)
12f01(5): mov $0x0,0x7c(%rsp)
12f06(3): xor %r12d,%r12d
12f09(9): mov $0x0,0x50(%rsp)
12f12(5): mov $0x1,0xf(%rsp)
12f17(5): mov $0x1,0xd(%rsp)
12f1c(9): mov $0x1,0x18(%rsp)
12f25(3): xor %r15d,%r15d
12f28(5): mov %rax,0x48(%rsp)
12f2d(8): mov $0x5,0x8(%rsp)
12f35(5): jmp 0xfffff37e(%rip)
12f3a(5): mov $0x1,0xe(%rsp)
12f3f(5): mov $0x0,0x7c(%rsp)
12f44(3): xor %r12d,%r12d
12f47(9): mov $0x0,0x50(%rsp)
12f50(5): mov $0x0,0xf(%rsp)
12f55(3): xor %r15d,%r15d
12f58(5): mov $0x1,0xd(%rsp)
12f5d(9): mov $0x0,0x18(%rsp)
12f66(9): mov $0x0,0x48(%rsp)
12f6f(5): jmp 0xfffff344(%rip)
12f74(5): cmp $0xa,0x8(%rsp)
12f79(2): jz 0x58(%rip)
12f7b(7): lea 0x739b(%rip),%rsi
12f82(2): xor %edi,%edi
12f84(5): mov $0x5,%edx
12f89(5): call 0xffff0457(%rip)
12f8e(3): mov %rax,%rcx
12f91(5): mov %rax,0x68(%rsp)
12f96(7): lea 0x7380(%rip),%rax
12f9d(3): cmp %rax,%rcx
12fa0(6): jz 0x39e(%rip)
12fa6(7): lea 0x7cf5(%rip),%rsi
12fad(2): xor %edi,%edi
12faf(5): mov $0x5,%edx
12fb4(5): call 0xffff042c(%rip)
12fb9(3): mov %rax,%rcx
12fbc(5): mov %rax,0x60(%rsp)
12fc1(7): lea 0x7cda(%rip),%rax
12fc8(3): cmp %rax,%rcx
12fcb(6): jz 0x389(%rip)
12fd1(3): xor %r15d,%r15d
12fd4(2): test %ebx,%ebx
12fd6(6): jz 0x1c7(%rip)
12fdc(2): test %ebx,%ebx
12fde(5): mov 0x60(%rsp),%rbx
12fe3(5): setnz 0xf(%rsp)
12fe8(3): xor %r12d,%r12d
12feb(3): mov %rbx,%rdi
12fee(5): call 0xffff0412(%rip)
12ff3(5): mov %rbx,0x48(%rsp)
12ff8(5): mov %rax,0x18(%rsp)
12ffd(5): mov $0x1,0xe(%rsp)
13002(5): mov $0x0,0x7c(%rsp)
13007(9): mov $0x0,0x50(%rsp)
13010(5): mov $0x1,0xd(%rsp)
13015(5): jmp 0xfffff29e(%rip)
1301a(5): mov $0x1,0xe(%rsp)
1301f(5): mov $0x0,0x7c(%rsp)
13024(3): xor %r12d,%r12d
13027(9): mov $0x0,0x50(%rsp)
13030(5): mov $0x0,0xf(%rsp)
13035(3): xor %r15d,%r15d
13038(5): mov $0x0,0xd(%rsp)
1303d(9): mov $0x0,0x18(%rsp)
13046(9): mov $0x0,0x48(%rsp)
1304f(5): jmp 0xfffff264(%rip)
13054(5): mov $0x1,0xe(%rsp)
13059(5): mov $0x0,0x7c(%rsp)
1305e(3): xor %r12d,%r12d
13061(9): mov $0x0,0x50(%rsp)
1306a(5): mov $0x1,0xf(%rsp)
1306f(5): mov $0x1,0xd(%rsp)
13074(5): jmp 0xfffff21f(%rip)
13079(3): cmp %r15,%r13
1307c(2): jbe 0x7(%rip)
1307e(5): mov $0x30,0x0(%r14,%r15,1)
13083(4): lea 0x2(%rcx),%rax
13087(3): cmp %rax,%r13
1308a(2): jbe 0x8(%rip)
1308c(6): mov $0x30,0x2(%r14,%rcx,1)
13092(3): mov %r12d,%eax
13095(4): lea 0x3(%rcx),%r15
13099(3): xor %r12d,%r12d
1309c(5): mov $0x30,%ebx
130a1(5): jmp 0xfffff367(%rip)
130a6(a): nop 0x0(%rax,%rax,1)
130b0(5): movzx 0xf(%rsp),%ebx
130b5(3): mov %r11,%rbp
130b8(4): mov %bl,0xd(%rsp)
130bc(5): jmp 0xfffffcad(%rip)
130c1(5): movzx 0xd(%rsp),%edx
130c6(3): xor %r12d,%r12d
130c9(5): jmp 0xfffffb07(%rip)
130ce(3): xor %r10d,%r10d
130d1(5): jmp 0xfffffbbc(%rip)
130d6(9): mov $0x0,0x50(%rsp)
130df(5): mov $0x1,0xe(%rsp)
130e4(3): xor %r12d,%r12d
130e7(5): mov $0x0,0x7c(%rsp)
130ec(5): jmp 0xfffffddf(%rip)
130f1(5): mov 0x30(%rsp),%r11
130f6(3): mov %r14,%rsi
130f9(3): mov %r13,%rcx
130fc(3): mov %rbx,%rax
130ff(3): mov %rbx,%rdi
13102(6): movzx 0x7d(%rsp),%r8d
13108(5): movzx 0x7e(%rsp),%ebx
1310d(8): mov 0x88(%rsp),%r9
13115(3): cmp %r11,%rsi
13118(6): movzx 0x7f(%rsp),%r10d
1311e(8): mov 0x80(%rsp),%r15
13126(5): mov 0x40(%rsp),%r14
1312b(5): mov 0x70(%rsp),%r13
13130(2): jnb 0x28(%rip)
13132(3): cmp $0x0,(%rcx)
13135(2): jnz 0x12(%rip)
13137(2): jmp 0x21(%rip)
13139(7): nop 0x0(%rax)
13140(5): cmp $0x0,0x0(%r9,%rax,1)
13145(2): jz 0x10(%rip)
13147(4): add $0x1,%rax
1314b(5): lea 0x0(%rbp,%rax,1),%rdx
13150(3): cmp %rdx,%r11
13153(2): jnbe 0xffffffed(%rip)
13155(3): mov %rax,%rdi
13158(5): movzx 0xd(%rsp),%edx
1315d(3): xor %r12d,%r12d
13160(5): jmp 0xfffffa66(%rip)
13165(3): mov %rbx,%rdi
13168(6): movzx 0x7d(%rsp),%r8d
1316e(5): movzx 0x7e(%rsp),%ebx
13173(6): movzx 0x7f(%rsp),%r10d
13179(8): mov 0x80(%rsp),%r15
13181(3): xor %r12d,%r12d
13184(5): mov 0x40(%rsp),%r14
13189(5): mov 0x70(%rsp),%r13
1318e(5): mov 0x30(%rsp),%r11
13193(5): movzx 0xd(%rsp),%edx
13198(5): jmp 0xfffffa2e(%rip)
1319d(5): mov 0x68(%rsp),%rdx
131a2(3): movzx (%rdx),%eax
131a5(2): test %al,%al
131a7(6): jz 0xfffffe35(%rip)
131ad(3): nop (%rax)
131b0(3): cmp %r15,%r13
131b3(2): jbe 0x6(%rip)
131b5(4): mov %al,0x0(%r14,%r15,1)
131b9(4): add $0x1,%r15
131bd(5): movzx 0x0(%rdx,%r15,1),%eax
131c2(2): test %al,%al
131c4(2): jnz 0xffffffec(%rip)
131c6(5): jmp 0xfffffe16(%rip)
131cb(2): mov %edx,%eax
131cd(5): jmp 0xfffff55a(%rip)
131d2(4): movzx 0x0(%rax,%rcx,1),%ebx
131d6(3): cmp $0x3e,%bl
131d9(6): jnbe 0xfffff877(%rip)
131df(a): mov $0x8070630310989004800,%rax
131e9(4): bt %rbx,%rax
131ed(6): jnb 0xfffff863(%rip)
131f3(5): cmp $0x0,0xf(%rsp)
131f8(6): jnz 0x1ea(%rip)
131fe(3): cmp %r15,%r13
13201(2): jbe 0x7(%rip)
13203(5): mov $0x3f,0x0(%r14,%r15,1)
13208(4): lea 0x1(%r15),%rax
1320c(3): cmp %rax,%r13
1320f(2): jbe 0x8(%rip)
13211(6): mov $0x22,0x1(%r14,%r15,1)
13217(4): lea 0x2(%r15),%rax
1321b(3): cmp %rax,%r13
1321e(2): jbe 0x8(%rip)
13220(6): mov $0x22,0x2(%r14,%r15,1)
13226(4): lea 0x3(%r15),%rax
1322a(3): cmp %rax,%r13
1322d(2): jbe 0x8(%rip)
1322f(6): mov $0x3f,0x3(%r14,%r15,1)
13235(4): add $0x4,%r15
13239(2): xor %edx,%edx
1323b(3): xor %r12d,%r12d
1323e(2): xor %eax,%eax
13240(3): mov %rcx,%rbp
13243(5): jmp 0xfffff1c5(%rip)
13248(2): test %ebx,%ebx
1324a(6): jz 0x18e(%rip)
13250(7): lea 0x7a4b(%rip),%rax
13257(5): mov $0x1,0xe(%rsp)
1325c(5): mov $0x0,0x7c(%rsp)
13261(3): xor %r12d,%r12d
13264(9): mov $0x0,0x50(%rsp)
1326d(5): mov $0x1,0xf(%rsp)
13272(5): mov $0x0,0xd(%rsp)
13277(9): mov $0x1,0x18(%rsp)
13280(3): xor %r15d,%r15d
13283(5): mov %rax,0x48(%rsp)
13288(5): jmp 0xfffff02b(%rip)
1328d(3): nop (%rax)
13290(3): mov %r11,%rbp
13293(5): movzx 0xf(%rsp),%eax
13298(5): jmp 0xfffffad1(%rip)
1329d(7): lea 0x7077(%rip),%rax
132a4(5): mov $0x1,0xe(%rsp)
132a9(5): mov $0x0,0x7c(%rsp)
132ae(3): xor %r12d,%r12d
132b1(9): mov $0x0,0x50(%rsp)
132ba(5): mov $0x1,0xf(%rsp)
132bf(5): mov $0x1,0xd(%rsp)
132c4(9): mov $0x1,0x18(%rsp)
132cd(3): xor %r15d,%r15d
132d0(5): mov %rax,0x48(%rsp)
132d5(5): jmp 0xffffefde(%rip)
132da(2): mov %edx,%eax
132dc(5): mov 0x48(%rsp),%rbx
132e1(3): test %rbx,%rbx
132e4(2): jz 0x2e(%rip)
132e6(2): test %al,%al
132e8(2): jz 0x2a(%rip)
132ea(3): movzx (%rbx),%ecx
132ed(3): mov %rbx,%rax
132f0(2): test %cl,%cl
132f2(2): jz 0x20(%rip)
132f4(3): mov %r15,%rdx
132f7(3): sub %r15,%rax
132fa(3): cmp %rdx,%r13
132fd(2): jbe 0x6(%rip)
132ff(4): mov %cl,0x0(%r14,%rdx,1)
13303(4): add $0x1,%rdx
13307(4): movzx 0x0(%rax,%rdx,1),%ecx
1330b(2): test %cl,%cl
1330d(2): jnz 0xffffffed(%rip)
1330f(3): mov %rdx,%r15
13312(3): cmp %r15,%r13
13315(6): jbe 0xfffffaa4(%rip)
1331b(5): mov $0x0,0x0(%r14,%r15,1)
13320(5): jmp 0xfffffa99(%rip)
13325(5): cmp $0x2,0x8(%rsp)
1332a(5): movzx 0xf(%rsp),%ebx
1332f(3): mov %r11,%rbp
13332(3): setz %al
13335(4): mov %bl,0xd(%rsp)
13339(5): jmp 0xfffffa30(%rip)
1333e(4): mov 0x8(%rsp),%esi
13342(3): mov %rcx,%rdi
13345(5): call 0xffffedab(%rip)
1334a(5): mov %rax,0x68(%rsp)
1334f(5): jmp 0xfffffc57(%rip)
13354(4): mov 0x8(%rsp),%esi
13358(3): mov %rcx,%rdi
1335b(5): call 0xffffed95(%rip)
13360(5): mov %rax,0x60(%rsp)
13365(5): jmp 0xfffffc6c(%rip)
1336a(5): movzx 0xf(%rsp),%ebx
1336f(3): mov %r11,%rbp
13372(2): mov %edx,%eax
13374(4): mov %bl,0xd(%rsp)
13378(5): jmp 0xfffff9f1(%rip)
1337d(4): sub $0x8,%rsp
13381(6): mov $0x5,%r8d
13387(3): mov %r11,%rcx
1338a(4): push 0x68(%rsp)
1338e(4): push 0x78(%rsp)
13392(3): mov %r14,%rdi
13395(4): push 0x38(%rsp)
13399(8): mov 0x98(%rsp),%r9d
133a1(5): mov 0x30(%rsp),%rdx
133a6(5): mov 0x70(%rsp),%rsi
133ab(5): call 0xffffee35(%rip)
133b0(4): add $0x20,%rsp
133b4(3): mov %rax,%r15
133b7(5): jmp 0xfffffa02(%rip)
133bc(5): movzx 0x7c(%rsp),%eax
133c1(5): jmp 0xffffff1b(%rip)
133c6(8): mov $0x2,0x8(%rsp)
133ce(5): jmp 0xfffff99b(%rip)
133d3(5): call 0xffff004d(%rip)
133d8(5): mov $0x0,0xd(%rsp)
133dd(5): jmp 0xfffffa74(%rip)
133e2(3): mov %r11,%rbp
133e5(5): jmp 0xfffff99b(%rip)
133ea(5): mov $0x1,0xe(%rsp)
133ef(2): xor %eax,%eax
133f1(3): xor %r12d,%r12d
133f4(9): mov $0x0,0x50(%rsp)
133fd(5): jmp 0xfffff5a7(%rip)
13402(3): mov %r13,%rdx
13405(5): mov 0x50(%rsp),%r13
1340a(5): jmp 0xfffff5f8(%rip)
1340f(5): call 0xfffefe81(%rip)

"quotearg_n_options" :
13420(2): push %r15
13422(2): push %r14
13424(3): movsxd %edi,%r15
13427(2): push %r13
13429(2): push %r12
1342b(3): mov %rdx,%r14
1342e(1): push %rbp
1342f(1): push %rbx
13430(3): mov %rcx,%rbp
13433(4): sub $0x28,%rsp
13437(5): mov %rsi,0x8(%rsp)
1343c(5): call 0xfffefe64(%rip)
13441(3): mov %rax,%r13
13444(2): mov (%rax),%eax
13446(3): test %r15d,%r15d
13449(7): mov 0x20cdf0(%rip),%rbx
13450(4): mov %eax,0x18(%rsp)
13454(6): js 0x16d(%rip)
1345a(7): cmp %r15d,0x20cdd7(%rip)
13461(2): jnle 0x64(%rip)
13463(7): cmp $0x7fffffff,%r15d
1346a(6): jz 0x15c(%rip)
13470(4): lea 0x1(%r15),%r12d
13474(7): lea 0x20cdd5(%rip),%rax
1347b(3): movsxd %r12d,%rsi
1347e(4): shl/sal $0x4,%rsi
13482(3): cmp %rax,%rbx
13485(6): jz 0x11b(%rip)
1348b(3): mov %rbx,%rdi
1348e(5): call 0x1162(%rip)
13493(3): mov %rax,%rbx
13496(7): mov %rax,0x20cda3(%rip)
1349d(7): movsxd 0x20cd94(%rip),%rdi
134a4(3): mov %r12d,%edx
134a7(2): xor %esi,%esi
134a9(2): sub %edi,%edx
134ab(4): shl/sal $0x4,%rdi
134af(3): movsxd %edx,%rdx
134b2(3): add %rbx,%rdi
134b5(4): shl/sal $0x4,%rdx
134b9(5): call 0xffff0047(%rip)
134be(7): mov %r12d,0x20cd73(%rip)
134c5(3): mov 0x4(%rbp),%eax
134c8(4): shl/sal $0x4,%r15
134cc(4): sub $0x8,%rsp
134d0(3): add %r15,%rbx
134d3(4): lea 0x8(%rbp),%r15
134d7(4): mov 0x0(%rbp),%r8d
134db(3): mov (%rbx),%r11
134de(4): mov 0x8(%rbx),%r12
134e2(3): mov %r14,%rcx
134e5(3): or $0x1,%eax
134e8(4): mov %eax,0x24(%rsp)
134ec(3): push 0x30(%rbp)
134ef(3): mov %eax,%r9d
134f2(3): push 0x28(%rbp)
134f5(2): push %r15
134f7(3): mov %r11,%rsi
134fa(5): mov 0x28(%rsp),%rdx
134ff(3): mov %r12,%rdi
13502(5): mov %r11,0x30(%rsp)
13507(5): call 0xffffecd9(%rip)
1350c(4): add $0x20,%rsp
13510(5): mov 0x10(%rsp),%r11
13515(3): cmp %rax,%r11
13518(2): jnbe 0x69(%rip)
1351a(4): lea 0x1(%rax),%rsi
1351e(7): lea 0x20defb(%rip),%rax
13525(3): cmp %rax,%r12
13528(3): mov %rsi,(%rbx)
1352b(2): jz 0x14(%rip)
1352d(3): mov %r12,%rdi
13530(5): mov %rsi,0x10(%rsp)
13535(5): call 0xffff034b(%rip)
1353a(5): mov 0x10(%rsp),%rsi
1353f(3): mov %rsi,%rdi
13542(5): mov %rsi,0x10(%rsp)
13547(5): call 0x1049(%rip)
1354c(4): sub $0x8,%rsp
13550(4): mov %rax,0x8(%rbx)
13554(4): mov 0x0(%rbp),%r8d
13558(3): push 0x30(%rbp)
1355b(3): push 0x28(%rbp)
1355e(3): mov %r14,%rcx
13561(2): push %r15
13563(5): mov 0x3c(%rsp),%r9d
13568(3): mov %rax,%rdi
1356b(5): mov 0x28(%rsp),%rdx
13570(5): mov 0x30(%rsp),%rsi
13575(3): mov %rax,%r12
13578(5): call 0xffffec68(%rip)
1357d(4): add $0x20,%rsp
13581(4): mov 0x18(%rsp),%eax
13585(4): mov %eax,0x0(%r13)
13589(4): add $0x28,%rsp
1358d(3): mov %r12,%rax
13590(1): pop %rbx
13591(1): pop %rbp
13592(2): pop %r12
13594(2): pop %r13
13596(2): pop %r14
13598(2): pop %r15
1359a(1): ret near (%rsp)
1359b(5): nop 0x0(%rax,%rax,1)
135a0(2): xor %edi,%edi
135a2(5): call 0x104e(%rip)
135a7(8): movdqa 0x20cca1(%rip),%xmm0
135af(3): mov %rax,%rbx
135b2(7): mov %rax,0x20cc87(%rip)
135b9(3): movups %xmm0,(%rax)
135bc(5): jmp 0xfffffee1(%rip)
135c1(5): call 0xfffefccf(%rip)
135c6(5): call 0x121a(%rip)

"clone_quoting_options" :
135d0(2): push %r12
135d2(1): push %rbp
135d3(1): push %rbx
135d4(3): mov %rdi,%rbx
135d7(5): call 0xfffefcc9(%rip)
135dc(3): mov (%rax),%r12d
135df(3): mov %rax,%rbp
135e2(7): lea 0x20df37(%rip),%rax
135e9(3): test %rbx,%rbx
135ec(5): mov $0x38,%esi
135f1(4): cmove %rax,%rbx
135f5(3): mov %rbx,%rdi
135f8(5): call 0x1198(%rip)
135fd(4): mov %r12d,0x0(%rbp)
13601(1): pop %rbx
13602(1): pop %rbp
13603(2): pop %r12
13605(1): ret near (%rsp)

"get_quoting_style" :
13610(7): lea 0x20df09(%rip),%rax
13617(3): test %rdi,%rdi
1361a(4): cmove %rax,%rdi
1361e(2): mov (%rdi),%eax
13620(1): ret near (%rsp)

"set_quoting_style" :
13630(7): lea 0x20dee9(%rip),%rax
13637(3): test %rdi,%rdi
1363a(4): cmove %rax,%rdi
1363e(2): mov %esi,(%rdi)
13640(1): ret near (%rsp)

"set_char_quoting" :
13650(7): lea 0x20dec9(%rip),%rax
13657(3): test %rdi,%rdi
1365a(2): mov %esi,%ecx
1365c(4): cmove %rax,%rdi
13660(2): mov %esi,%eax
13662(3): and $0x1f,%ecx
13665(3): shr $0x5,%al
13668(3): movzx %al,%eax
1366b(5): lea 0x8(%rdi,%rax,4),%rdi
13670(2): mov (%rdi),%esi
13672(2): mov %esi,%eax
13674(2): shr %cl,%eax
13676(2): xor %eax,%edx
13678(3): and $0x1,%eax
1367b(3): and $0x1,%edx
1367e(2): shl/sal %cl,%edx
13680(2): xor %esi,%edx
13682(2): mov %edx,(%rdi)
13684(1): ret near (%rsp)

"set_quoting_flags" :
13690(7): lea 0x20de89(%rip),%rax
13697(3): test %rdi,%rdi
1369a(4): cmove %rax,%rdi
1369e(3): mov 0x4(%rdi),%eax
136a1(3): mov %esi,0x4(%rdi)
136a4(1): ret near (%rsp)

"set_custom_quoting" :
136b0(7): lea 0x20de69(%rip),%rax
136b7(3): test %rdi,%rdi
136ba(4): cmove %rax,%rdi
136be(3): test %rsi,%rsi
136c1(6): mov $0xa,(%rdi)
136c7(2): jz 0x10(%rip)
136c9(3): test %rdx,%rdx
136cc(2): jz 0xb(%rip)
136ce(4): mov %rsi,0x28(%rdi)
136d2(4): mov %rdx,0x30(%rdi)
136d6(1): ret near (%rsp)
136d7(4): sub $0x8,%rsp
136db(5): call 0xfffefbb5(%rip)

"quotearg_buffer" :
136e0(2): push %r15
136e2(2): push %r14
136e4(7): lea 0x20de35(%rip),%rax
136eb(2): push %r13
136ed(2): push %r12
136ef(3): mov %rdi,%r13
136f2(1): push %rbp
136f3(1): push %rbx
136f4(3): mov %r8,%rbx
136f7(3): mov %rsi,%r14
136fa(3): mov %rdx,%r15
136fd(4): sub $0x18,%rsp
13701(3): test %r8,%r8
13704(4): cmove %rax,%rbx
13708(5): mov %rcx,0x8(%rsp)
1370d(5): call 0xfffefb93(%rip)
13712(3): mov (%rax),%r12d
13715(3): mov %rax,%rbp
13718(4): lea 0x8(%rbx),%rax
1371c(4): sub $0x8,%rsp
13720(4): mov 0x4(%rbx),%r9d
13724(3): push 0x30(%rbx)
13727(3): mov (%rbx),%r8d
1372a(3): push 0x28(%rbx)
1372d(3): mov %r15,%rdx
13730(1): push %rax
13731(5): mov 0x28(%rsp),%rcx
13736(3): mov %r14,%rsi
13739(3): mov %r13,%rdi
1373c(5): call 0xffffeaa4(%rip)
13741(4): mov %r12d,0x0(%rbp)
13745(4): add $0x38,%rsp
13749(1): pop %rbx
1374a(1): pop %rbp
1374b(2): pop %r12
1374d(2): pop %r13
1374f(2): pop %r14
13751(2): pop %r15
13753(1): ret near (%rsp)

"quotearg_alloc_mem" :
13760(2): push %r15
13762(2): push %r14
13764(7): lea 0x20ddb5(%rip),%rax
1376b(2): push %r13
1376d(2): push %r12
1376f(3): mov %rdx,%r12
13772(1): push %rbp
13773(1): push %rbx
13774(3): mov %rcx,%rbx
13777(3): mov %rdi,%r14
1377a(3): mov %rsi,%r15
1377d(4): sub $0x38,%rsp
13781(3): test %rcx,%rcx
13784(4): cmove %rax,%rbx
13788(2): xor %ebp,%ebp
1378a(5): call 0xfffefb16(%rip)
1378f(3): test %r12,%r12
13792(3): mov %rax,%r13
13795(2): mov (%rax),%eax
13797(4): setz %bpl
1379b(3): or 0x4(%rbx),%ebp
1379e(4): lea 0x8(%rbx),%r10
137a2(4): sub $0x8,%rsp
137a6(3): mov (%rbx),%r8d
137a9(3): mov %r15,%rcx
137ac(4): mov %eax,0x14(%rsp)
137b0(3): push 0x30(%rbx)
137b3(3): mov %r14,%rdx
137b6(3): push 0x28(%rbx)
137b9(2): push %r10
137bb(2): xor %esi,%esi
137bd(3): mov %ebp,%r9d
137c0(2): xor %edi,%edi
137c2(5): mov %r10,0x40(%rsp)
137c7(5): call 0xffffea19(%rip)
137cc(4): lea 0x1(%rax),%rsi
137d0(5): mov %rax,0x48(%rsp)
137d5(4): add $0x20,%rsp
137d9(3): mov %rsi,%rdi
137dc(5): mov %rsi,0x18(%rsp)
137e1(5): call 0xdaf(%rip)
137e6(5): mov %rax,0x10(%rsp)
137eb(4): sub $0x8,%rsp
137ef(3): push 0x30(%rbx)
137f2(3): push 0x28(%rbx)
137f5(5): mov 0x38(%rsp),%r10
137fa(3): mov %ebp,%r9d
137fd(3): mov (%rbx),%r8d
13800(3): mov %r15,%rcx
13803(3): mov %r14,%rdx
13806(3): mov %rax,%rdi
13809(2): push %r10
1380b(5): mov 0x38(%rsp),%rsi
13810(5): call 0xffffe9d0(%rip)
13815(4): mov 0x2c(%rsp),%eax
13819(4): add $0x20,%rsp
1381d(3): test %r12,%r12
13820(4): mov %eax,0x0(%r13)
13824(2): jz 0xb(%rip)
13826(5): mov 0x28(%rsp),%r11
1382b(4): mov %r11,(%r12)
1382f(5): mov 0x10(%rsp),%rax
13834(4): add $0x38,%rsp
13838(1): pop %rbx
13839(1): pop %rbp
1383a(2): pop %r12
1383c(2): pop %r13
1383e(2): pop %r14
13840(2): pop %r15
13842(1): ret near (%rsp)

"quotearg_alloc" :
13850(3): mov %rdx,%rcx
13853(2): xor %edx,%edx
13855(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
13860(6): mov 0x20c9d2(%rip),%eax
13866(2): push %r12
13868(7): mov 0x20c9d1(%rip),%r12
1386f(1): push %rbp
13870(1): push %rbx
13871(3): cmp $0x1,%eax
13874(2): jle 0x2d(%rip)
13876(3): sub $0x2,%eax
13879(5): lea 0x18(%r12),%rbx
1387e(4): shl/sal $0x4,%rax
13882(5): lea 0x28(%r12,%rax,1),%rbp
13887(9): nop 0x0(%rax,%rax,1)
13890(3): mov (%rbx),%rdi
13893(4): add $0x10,%rbx
13897(5): call 0xfffeffe9(%rip)
1389c(3): cmp %rbp,%rbx
1389f(2): jnz 0xfffffff1(%rip)
138a1(5): mov 0x8(%r12),%rdi
138a6(7): lea 0x20db73(%rip),%rbx
138ad(3): cmp %rbx,%rdi
138b0(2): jz 0x19(%rip)
138b2(5): call 0xfffeffce(%rip)
138b7(b): mov $0x100,0x20c98e(%rip)
138c2(7): mov %rbx,0x20c98f(%rip)
138c9(7): lea 0x20c980(%rip),%rbx
138d0(3): cmp %rbx,%r12
138d3(2): jz 0x11(%rip)
138d5(3): mov %r12,%rdi
138d8(5): call 0xfffeffa8(%rip)
138dd(7): mov %rbx,0x20c95c(%rip)
138e4(1): pop %rbx
138e5(a): mov $0x1,0x20c949(%rip)
138ef(1): pop %rbp
138f0(2): pop %r12
138f2(1): ret near (%rsp)

"quotearg_n" :
13900(7): lea 0x20dc19(%rip),%rcx
13907(7): mov $0xffffffff,%rdx
1390e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
13920(7): lea 0x20dbf9(%rip),%rcx
13927(5): jmp 0xfffffaf9(%rip)

"quotearg" :
13930(7): lea 0x20dbe9(%rip),%rcx
13937(3): mov %rdi,%rsi
1393a(7): mov $0xffffffff,%rdx
13941(2): xor %edi,%edi
13943(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
13950(7): lea 0x20dbc9(%rip),%rcx
13957(3): mov %rsi,%rdx
1395a(3): mov %rdi,%rsi
1395d(2): xor %edi,%edi
1395f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
13970(4): sub $0x48,%rsp
13974(3): mov %rdx,%rax
13977(9): mov $0x28,%rdx
13980(5): mov %rdx,0x38(%rsp)
13985(2): xor %edx,%edx
13987(3): cmp $0xa,%esi
1398a(2): jz 0x6a(%rip)
1398c(3): mov %esi,(%rsp)
1398f(3): mov %rsp,%rcx
13992(7): mov $0xffffffff,%rdx
13999(3): mov %rax,%rsi
1399c(9): mov $0x0,0x4(%rsp)
139a5(9): mov $0x0,0xc(%rsp)
139ae(9): mov $0x0,0x14(%rsp)
139b7(9): mov $0x0,0x1c(%rsp)
139c0(9): mov $0x0,0x24(%rsp)
139c9(9): mov $0x0,0x2c(%rsp)
139d2(8): mov $0x0,0x34(%rsp)
139da(5): call 0xfffffa46(%rip)
139df(5): mov 0x38(%rsp),%rcx
139e4(9): xor $0x28,%rcx
139ed(2): jnz 0xc(%rip)
139ef(4): add $0x48,%rsp
139f3(1): ret near (%rsp)
139f4(5): call 0xfffef89c(%rip)
139f9(5): call 0xfffefa27(%rip)

"quotearg_n_style_mem" :
13a00(4): sub $0x48,%rsp
13a04(3): mov %rdx,%rax
13a07(3): mov %rcx,%rdx
13a0a(9): mov $0x28,%rcx
13a13(5): mov %rcx,0x38(%rsp)
13a18(2): xor %ecx,%ecx
13a1a(3): cmp $0xa,%esi
13a1d(2): jz 0x63(%rip)
13a1f(3): mov %esi,(%rsp)
13a22(3): mov %rsp,%rcx
13a25(3): mov %rax,%rsi
13a28(9): mov $0x0,0x4(%rsp)
13a31(9): mov $0x0,0xc(%rsp)
13a3a(9): mov $0x0,0x14(%rsp)
13a43(9): mov $0x0,0x1c(%rsp)
13a4c(9): mov $0x0,0x24(%rsp)
13a55(9): mov $0x0,0x2c(%rsp)
13a5e(8): mov $0x0,0x34(%rsp)
13a66(5): call 0xfffff9ba(%rip)
13a6b(5): mov 0x38(%rsp),%rdx
13a70(9): xor $0x28,%rdx
13a79(2): jnz 0xc(%rip)
13a7b(4): add $0x48,%rsp
13a7f(1): ret near (%rsp)
13a80(5): call 0xfffef810(%rip)
13a85(5): call 0xfffef99b(%rip)

"quotearg_style" :
13a90(3): mov %rsi,%rdx
13a93(2): mov %edi,%esi
13a95(2): xor %edi,%edi
13a97(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
13aa0(3): mov %rdx,%rcx
13aa3(3): mov %rsi,%rdx
13aa6(2): mov %edi,%esi
13aa8(2): xor %edi,%edi
13aaa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
13ab0(4): sub $0x48,%rsp
13ab4(2): mov %edx,%ecx
13ab6(9): mov $0x28,%rax
13abf(5): mov %rax,0x38(%rsp)
13ac4(2): xor %eax,%eax
13ac6(7): mov 0x20da83(%rip),%rax
13acd(3): mov %rsp,%r8
13ad0(3): and $0x1f,%ecx
13ad3(8): movdqa 0x20da45(%rip),%xmm0
13adb(5): mov %rax,0x30(%rsp)
13ae0(2): mov %edx,%eax
13ae2(4): movaps %xmm0,(%rsp)
13ae6(3): shr $0x5,%al
13ae9(3): movzx %al,%eax
13aec(5): lea 0x8(%r8,%rax,4),%r9
13af1(8): movdqa 0x20da37(%rip),%xmm0
13af9(5): movaps %xmm0,0x10(%rsp)
13afe(8): movdqa 0x20da3a(%rip),%xmm0
13b06(5): movaps %xmm0,0x20(%rsp)
13b0b(3): mov (%r9),%edx
13b0e(2): mov %edx,%eax
13b10(2): shr %cl,%eax
13b12(2): not %eax
13b14(3): and $0x1,%eax
13b17(2): shl/sal %cl,%eax
13b19(3): mov %r8,%rcx
13b1c(2): xor %edx,%eax
13b1e(3): mov %rsi,%rdx
13b21(3): mov %rdi,%rsi
13b24(3): mov %eax,(%r9)
13b27(2): xor %edi,%edi
13b29(5): call 0xfffff8f7(%rip)
13b2e(5): mov 0x38(%rsp),%rsi
13b33(9): xor $0x28,%rsi
13b3c(2): jnz 0x7(%rip)
13b3e(4): add $0x48,%rsp
13b42(1): ret near (%rsp)
13b43(5): call 0xfffef8dd(%rip)

"quotearg_char" :
13b50(4): movsx %sil,%edx
13b54(7): mov $0xffffffff,%rsi
13b5b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
13b60(5): mov $0x3a,%edx
13b65(7): mov $0xffffffff,%rsi
13b6c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
13b80(5): mov $0x3a,%edx
13b85(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
13b90(4): sub $0x48,%rsp
13b94(3): mov %rdx,%rax
13b97(9): mov $0x28,%rdx
13ba0(5): mov %rdx,0x38(%rsp)
13ba5(2): xor %edx,%edx
13ba7(3): cmp $0xa,%esi
13baa(2): jz 0x6a(%rip)
13bac(3): mov %esi,(%rsp)
13baf(3): mov %rsp,%rcx
13bb2(7): mov $0xffffffff,%rdx
13bb9(3): mov %rax,%rsi
13bbc(9): mov $0x0,0x4(%rsp)
13bc5(9): mov $0x4000000,0xc(%rsp)
13bce(9): mov $0x0,0x14(%rsp)
13bd7(9): mov $0x0,0x1c(%rsp)
13be0(9): mov $0x0,0x24(%rsp)
13be9(9): mov $0x0,0x2c(%rsp)
13bf2(8): mov $0x0,0x34(%rsp)
13bfa(5): call 0xfffff826(%rip)
13bff(5): mov 0x38(%rsp),%rcx
13c04(9): xor $0x28,%rcx
13c0d(2): jnz 0xc(%rip)
13c0f(4): add $0x48,%rsp
13c13(1): ret near (%rsp)
13c14(5): call 0xfffef67c(%rip)
13c19(5): call 0xfffef807(%rip)

"quotearg_n_custom_mem" :
13c20(4): sub $0x48,%rsp
13c24(3): mov %rcx,%r9
13c27(7): mov 0x20d922(%rip),%rcx
13c2e(8): movdqa 0x20d8ea(%rip),%xmm0
13c36(9): mov $0x28,%rax
13c3f(5): mov %rax,0x38(%rsp)
13c44(2): xor %eax,%eax
13c46(4): movaps %xmm0,(%rsp)
13c4a(3): test %rsi,%rsi
13c4d(5): mov %rcx,0x30(%rsp)
13c52(7): mov $0xa,(%rsp)
13c59(8): movdqa 0x20d8cf(%rip),%xmm0
13c61(5): movaps %xmm0,0x10(%rsp)
13c66(8): movdqa 0x20d8d2(%rip),%xmm0
13c6e(5): movaps %xmm0,0x20(%rsp)
13c73(2): jz 0x34(%rip)
13c75(3): test %rdx,%rdx
13c78(2): jz 0x2f(%rip)
13c7a(5): mov %rsi,0x28(%rsp)
13c7f(5): mov %rdx,0x30(%rsp)
13c84(3): mov %rsp,%rcx
13c87(3): mov %r8,%rdx
13c8a(3): mov %r9,%rsi
13c8d(5): call 0xfffff793(%rip)
13c92(5): mov 0x38(%rsp),%rdi
13c97(9): xor $0x28,%rdi
13ca0(2): jnz 0xc(%rip)
13ca2(4): add $0x48,%rsp
13ca6(1): ret near (%rsp)
13ca7(5): call 0xfffef5e9(%rip)
13cac(5): call 0xfffef774(%rip)

"quotearg_n_custom" :
13cc0(7): mov $0xffffffff,%r8
13cc7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
13cd0(3): mov %rdx,%rcx
13cd3(7): mov $0xffffffff,%r8
13cda(3): mov %rsi,%rdx
13cdd(3): mov %rdi,%rsi
13ce0(2): xor %edi,%edi
13ce2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
13cf0(3): mov %rcx,%r8
13cf3(3): mov %rdx,%rcx
13cf6(3): mov %rsi,%rdx
13cf9(3): mov %rdi,%rsi
13cfc(2): xor %edi,%edi
13cfe(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
13d10(7): lea 0x20c4e9(%rip),%rcx
13d17(5): jmp 0xfffff709(%rip)

"quote_mem" :
13d20(7): lea 0x20c4d9(%rip),%rcx
13d27(3): mov %rsi,%rdx
13d2a(3): mov %rdi,%rsi
13d2d(2): xor %edi,%edi
13d2f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
13d40(7): lea 0x20c4b9(%rip),%rcx
13d47(7): mov $0xffffffff,%rdx
13d4e(5): jmp 0xfffff6d2(%rip)

"quote" :
13d60(7): lea 0x20c499(%rip),%rcx
13d67(3): mov %rdi,%rsi
13d6a(7): mov $0xffffffff,%rdx
13d71(2): xor %edi,%edi
13d73(5): jmp 0xfffff6ad(%rip)

"same_nameat.part.0" :
13d80(2): push %r13
13d82(2): push %r12
13d84(3): mov %edi,%r13d
13d87(1): push %rbp
13d88(1): push %rbx
13d89(3): mov %rsi,%rdi
13d8c(2): mov %edx,%ebp
13d8e(3): mov %rcx,%r12
13d91(7): sub $0x138,%rsp
13d98(9): mov $0x28,%rax
13da1(8): mov %rax,0x128(%rsp)
13da9(2): xor %eax,%eax
13dab(5): call 0x1f55(%rip)
13db0(3): mov %rsp,%rcx
13db3(6): mov $0x100,%r8d
13db9(3): mov %rax,%rdx
13dbc(3): mov %r13d,%esi
13dbf(5): mov $0x1,%edi
13dc4(3): mov %rax,%rbx
13dc7(5): call 0xfffef6a9(%rip)
13dcc(2): test %eax,%eax
13dce(6): jnz 0xb2(%rip)
13dd4(3): mov %rbx,%rdi
13dd7(5): call 0xfffefaa9(%rip)
13ddc(3): mov %r12,%rdi
13ddf(5): call 0x1f21(%rip)
13de4(8): lea 0x90(%rsp),%rcx
13dec(6): mov $0x100,%r8d
13df2(3): mov %rax,%rdx
13df5(2): mov %ebp,%esi
13df7(5): mov $0x1,%edi
13dfc(3): mov %rax,%rbx
13dff(5): call 0xfffef671(%rip)
13e04(2): test %eax,%eax
13e06(2): jnz 0x52(%rip)
13e08(2): xor %ebp,%ebp
13e0a(8): mov 0x98(%rsp),%rax
13e12(5): cmp %rax,0x8(%rsp)
13e17(2): jnz 0x12(%rip)
13e19(8): mov 0x90(%rsp),%rax
13e21(4): cmp %rax,(%rsp)
13e25(4): setz %bpl
13e29(3): mov %rbx,%rdi
13e2c(5): call 0xfffefa54(%rip)
13e31(8): mov 0x128(%rsp),%rdx
13e39(9): xor $0x28,%rdx
13e42(2): mov %ebp,%eax
13e44(2): jnz 0x5e(%rip)
13e46(7): add $0x138,%rsp
13e4d(1): pop %rbx
13e4e(1): pop %rbp
13e4f(2): pop %r12
13e51(2): pop %r13
13e53(1): ret near (%rsp)
13e54(4): nop 0x0(%rax)
13e58(5): call 0xfffef448(%rip)
13e5d(2): mov (%rax),%esi
13e5f(7): lea 0x6126(%rip),%rdx
13e66(3): mov %rbx,%rcx
13e69(5): mov $0x1,%edi
13e6e(2): xor %eax,%eax
13e70(5): call 0xfffef8f0(%rip)
13e75(2): jmp 0xffffff93(%rip)
13e77(9): nop 0x0(%rax,%rax,1)
13e80(5): call 0xfffef420(%rip)
13e85(2): mov (%rax),%esi
13e87(7): lea 0x60fe(%rip),%rdx
13e8e(3): mov %rbx,%rcx
13e91(5): mov $0x1,%edi
13e96(2): xor %eax,%eax
13e98(5): call 0xfffef8c8(%rip)
13e9d(5): jmp 0xffffff37(%rip)
13ea2(5): call 0xfffef57e(%rip)

"same_nameat" :
13eb0(2): push %r15
13eb2(2): push %r14
13eb4(3): mov %edx,%r15d
13eb7(2): push %r13
13eb9(2): push %r12
13ebb(1): push %rbp
13ebc(1): push %rbx
13ebd(3): mov %rcx,%rbp
13ec0(3): mov %rsi,%rbx
13ec3(4): sub $0x18,%rsp
13ec7(4): mov %edi,0xc(%rsp)
13ecb(3): mov %rsi,%rdi
13ece(5): call 0xffff8e42(%rip)
13ed3(3): mov %rbp,%rdi
13ed6(3): mov %rax,%r12
13ed9(5): call 0xffff8e37(%rip)
13ede(3): mov %r12,%rdi
13ee1(3): mov %rax,%r13
13ee4(5): call 0xffff8e8c(%rip)
13ee9(3): mov %r13,%rdi
13eec(3): mov %rax,%r14
13eef(5): call 0xffff8e81(%rip)
13ef4(3): cmp %rax,%r14
13ef7(2): jz 0x19(%rip)
13ef9(4): add $0x18,%rsp
13efd(2): xor %eax,%eax
13eff(1): pop %rbx
13f00(1): pop %rbp
13f01(2): pop %r12
13f03(2): pop %r13
13f05(2): pop %r14
13f07(2): pop %r15
13f09(1): ret near (%rsp)
13f0a(6): nop 0x0(%rax,%rax,1)
13f10(3): mov %r14,%rdx
13f13(3): mov %r13,%rsi
13f16(3): mov %r12,%rdi
13f19(5): call 0xfffef637(%rip)
13f1e(2): test %eax,%eax
13f20(2): jnz 0xffffffd9(%rip)
13f22(4): mov 0xc(%rsp),%edi
13f26(4): add $0x18,%rsp
13f2a(3): mov %rbp,%rcx
13f2d(3): mov %r15d,%edx
13f30(3): mov %rbx,%rsi
13f33(1): pop %rbx
13f34(1): pop %rbp
13f35(2): pop %r12
13f37(2): pop %r13
13f39(2): pop %r14
13f3b(2): pop %r15
13f3d(5): jmp 0xfffffe43(%rip)

"same_name" :
13f50(5): mov $0xffffff9c,%edx
13f55(3): mov %rsi,%rcx
13f58(3): mov %rdi,%rsi
13f5b(2): mov %edx,%edi
13f5d(5): jmp 0xffffff53(%rip)

"version_etc_arn" :
13f70(2): push %r15
13f72(2): push %r14
13f74(2): push %r13
13f76(2): push %r12
13f78(3): mov %r9,%r12
13f7b(1): push %rbp
13f7c(1): push %rbx
13f7d(3): mov %rdi,%rbp
13f80(3): mov %r8,%rbx
13f83(4): sub $0x28,%rsp
13f87(3): test %rsi,%rsi
13f8a(6): jz 0x11e(%rip)
13f90(3): mov %rdx,%r8
13f93(7): lea 0x684e(%rip),%rdx
13f9a(3): mov %rcx,%r9
13f9d(2): xor %eax,%eax
13f9f(3): mov %rsi,%rcx
13fa2(5): mov $0x1,%esi
13fa7(5): call 0xfffef859(%rip)
13fac(7): lea 0x6848(%rip),%rsi
13fb3(2): xor %edi,%edi
13fb5(5): mov $0x5,%edx
13fba(5): call 0xfffef426(%rip)
13fbf(7): lea 0x6b5a(%rip),%rdx
13fc6(3): mov %rax,%rcx
13fc9(6): mov $0x7e3,%r8d
13fcf(5): mov $0x1,%esi
13fd4(3): mov %rbp,%rdi
13fd7(2): xor %eax,%eax
13fd9(5): call 0xfffef827(%rip)
13fde(7): lea 0x68a3(%rip),%rsi
13fe5(2): xor %edi,%edi
13fe7(5): mov $0x5,%edx
13fec(5): call 0xfffef3f4(%rip)
13ff1(3): mov %rbp,%rsi
13ff4(3): mov %rax,%rdi
13ff7(5): call 0xfffef579(%rip)
13ffc(4): cmp $0x9,%r12
14000(6): jnbe 0x340(%rip)
14006(7): lea 0x6ad7(%rip),%rdx
1400d(4): movsxd 0x0(%rdx,%r12,4),%rax
14011(3): add %rdx,%rax
14014(2): jmp %rax
14016(a): nop 0x0(%rax,%rax,1)
14020(4): mov 0x38(%rbx),%r9
14024(4): mov 0x10(%rbx),%rax
14028(7): lea 0x69c9(%rip),%rsi
1402f(4): mov 0x8(%rbx),%r8
14033(5): mov $0x5,%edx
14038(2): xor %edi,%edi
1403a(4): mov 0x30(%rbx),%r13
1403e(4): mov 0x28(%rbx),%r12
14042(5): mov %r9,0x10(%rsp)
14047(4): mov 0x20(%rbx),%r15
1404b(4): mov 0x18(%rbx),%r14
1404f(4): mov %rax,(%rsp)
14053(5): mov %r8,0x8(%rsp)
14058(3): mov (%rbx),%rbx
1405b(5): call 0xfffef385(%rip)
14060(4): sub $0x8,%rsp
14064(5): mov 0x18(%rsp),%r9
14069(3): mov %rax,%rdx
1406c(3): mov %rbx,%rcx
1406f(5): mov $0x1,%esi
14074(3): mov %rbp,%rdi
14077(2): xor %eax,%eax
14079(2): push %r9
1407b(2): push %r13
1407d(2): push %r12
1407f(2): push %r15
14081(2): push %r14
14083(5): mov 0x30(%rsp),%r9
14088(5): mov 0x38(%rsp),%r8
1408d(5): call 0xfffef773(%rip)
14092(4): add $0x30,%rsp
14096(4): add $0x28,%rsp
1409a(1): pop %rbx
1409b(1): pop %rbp
1409c(2): pop %r12
1409e(2): pop %r13
140a0(2): pop %r14
140a2(2): pop %r15
140a4(1): ret near (%rsp)
140a5(3): nop (%rax)
140a8(3): mov %rcx,%r8
140ab(3): mov %rdx,%rcx
140ae(7): lea 0x673f(%rip),%rdx
140b5(5): mov $0x1,%esi
140ba(2): xor %eax,%eax
140bc(5): call 0xfffef744(%rip)
140c1(5): jmp 0xfffffeeb(%rip)
140c6(a): nop 0x0(%rax,%rax,1)
140d0(4): mov 0x40(%rbx),%r10
140d4(4): mov 0x38(%rbx),%r9
140d8(7): lea 0x6949(%rip),%rsi
140df(4): mov 0x10(%rbx),%rax
140e3(4): mov 0x8(%rbx),%r8
140e7(5): mov $0x5,%edx
140ec(4): mov 0x30(%rbx),%r13
140f0(4): mov 0x28(%rbx),%r12
140f4(4): mov 0x20(%rbx),%r15
140f8(4): mov 0x18(%rbx),%r14
140fc(3): mov (%rbx),%rbx
140ff(5): mov %r10,0x18(%rsp)
14104(5): mov %r9,0x10(%rsp)
14109(4): mov %rax,(%rsp)
1410d(5): mov %r8,0x8(%rsp)
14112(2): xor %edi,%edi
14114(5): call 0xfffef2cc(%rip)
14119(5): mov 0x18(%rsp),%r10
1411e(2): push %r10
14120(5): jmp 0xffffff44(%rip)
14125(3): nop (%rax)
14128(3): mov (%rbx),%rbx
1412b(7): lea 0x66cd(%rip),%rsi
14132(5): mov $0x5,%edx
14137(2): xor %edi,%edi
14139(5): call 0xfffef2a7(%rip)
1413e(4): add $0x28,%rsp
14142(3): mov %rbx,%rcx
14145(3): mov %rbp,%rdi
14148(1): pop %rbx
14149(1): pop %rbp
1414a(2): pop %r12
1414c(2): pop %r13
1414e(2): pop %r14
14150(2): pop %r15
14152(3): mov %rax,%rdx
14155(5): mov $0x1,%esi
1415a(2): xor %eax,%eax
1415c(5): jmp 0xfffef6a4(%rip)
14161(7): nop 0x0(%rax)
14168(4): mov 0x8(%rbx),%r12
1416c(7): lea 0x669c(%rip),%rsi
14173(3): mov (%rbx),%rbx
14176(5): mov $0x5,%edx
1417b(2): xor %edi,%edi
1417d(5): call 0xfffef263(%rip)
14182(4): add $0x28,%rsp
14186(3): mov %r12,%r8
14189(3): mov %rbx,%rcx
1418c(3): mov %rbp,%rdi
1418f(3): mov %rax,%rdx
14192(5): mov $0x1,%esi
14197(1): pop %rbx
14198(1): pop %rbp
14199(2): pop %r12
1419b(2): pop %r13
1419d(2): pop %r14
1419f(2): pop %r15
141a1(2): xor %eax,%eax
141a3(5): jmp 0xfffef65d(%rip)
141a8(8): nop 0x0(%rax,%rax,1)
141b0(4): mov 0x10(%rbx),%r13
141b4(4): mov 0x8(%rbx),%r12
141b8(7): lea 0x6667(%rip),%rsi
141bf(3): mov (%rbx),%rbx
141c2(5): mov $0x5,%edx
141c7(2): xor %edi,%edi
141c9(5): call 0xfffef217(%rip)
141ce(4): add $0x28,%rsp
141d2(3): mov %r13,%r9
141d5(3): mov %r12,%r8
141d8(3): mov %rbx,%rcx
141db(3): mov %rbp,%rdi
141de(3): mov %rax,%rdx
141e1(1): pop %rbx
141e2(1): pop %rbp
141e3(2): pop %r12
141e5(2): pop %r13
141e7(2): pop %r14
141e9(2): pop %r15
141eb(5): mov $0x1,%esi
141f0(2): xor %eax,%eax
141f2(5): jmp 0xfffef60e(%rip)
141f7(9): nop 0x0(%rax,%rax,1)
14200(7): lea 0x6751(%rip),%rsi
14207(5): mov $0x5,%edx
1420c(2): xor %edi,%edi
1420e(4): mov 0x18(%rbx),%r14
14212(4): mov 0x10(%rbx),%r13
14216(4): mov 0x8(%rbx),%r12
1421a(3): mov (%rbx),%rbx
1421d(5): call 0xfffef1c3(%rip)
14222(4): sub $0x8,%rsp
14226(2): push %r14
14228(3): mov %rax,%rdx
1422b(3): mov %r13,%r9
1422e(3): mov %r12,%r8
14231(3): mov %rbx,%rcx
14234(3): mov %rbp,%rdi
14237(5): mov $0x1,%esi
1423c(2): xor %eax,%eax
1423e(5): call 0xfffef5c2(%rip)
14243(1): pop %rax
14244(1): pop %rdx
14245(4): add $0x28,%rsp
14249(1): pop %rbx
1424a(1): pop %rbp
1424b(2): pop %r12
1424d(2): pop %r13
1424f(2): pop %r14
14251(2): pop %r15
14253(1): ret near (%rsp)
14254(4): nop 0x0(%rax)
14258(4): mov 0x20(%rbx),%r15
1425c(7): lea 0x6715(%rip),%rsi
14263(5): mov $0x5,%edx
14268(2): xor %edi,%edi
1426a(4): mov 0x18(%rbx),%r14
1426e(4): mov 0x10(%rbx),%r13
14272(4): mov 0x8(%rbx),%r12
14276(3): mov (%rbx),%rbx
14279(5): call 0xfffef167(%rip)
1427e(2): push %r15
14280(2): jmp 0xffffffa6(%rip)
14282(6): nop 0x0(%rax,%rax,1)
14288(4): mov 0x8(%rbx),%r8
1428c(4): mov 0x28(%rbx),%r12
14290(7): lea 0x6709(%rip),%rsi
14297(4): mov 0x20(%rbx),%r15
1429b(4): mov 0x18(%rbx),%r14
1429f(5): mov $0x5,%edx
142a4(4): mov 0x10(%rbx),%r13
142a8(2): xor %edi,%edi
142aa(3): mov (%rbx),%rbx
142ad(4): mov %r8,(%rsp)
142b1(5): call 0xfffef12f(%rip)
142b6(4): sub $0x8,%rsp
142ba(3): mov %r13,%r9
142bd(2): push %r12
142bf(2): push %r15
142c1(2): push %r14
142c3(5): mov 0x20(%rsp),%r8
142c8(3): mov %rbx,%rcx
142cb(3): mov %rax,%rdx
142ce(3): mov %rbp,%rdi
142d1(5): mov $0x1,%esi
142d6(2): xor %eax,%eax
142d8(5): call 0xfffef528(%rip)
142dd(4): add $0x20,%rsp
142e1(4): add $0x28,%rsp
142e5(1): pop %rbx
142e6(1): pop %rbp
142e7(2): pop %r12
142e9(2): pop %r13
142eb(2): pop %r14
142ed(2): pop %r15
142ef(1): ret near (%rsp)
142f0(4): mov 0x10(%rbx),%r9
142f4(4): mov 0x30(%rbx),%r13
142f8(7): lea 0x66c9(%rip),%rsi
142ff(4): mov 0x28(%rbx),%r12
14303(4): mov 0x20(%rbx),%r15
14307(5): mov $0x5,%edx
1430c(4): mov 0x18(%rbx),%r14
14310(4): mov 0x8(%rbx),%r8
14314(2): xor %edi,%edi
14316(5): mov %r9,0x8(%rsp)
1431b(3): mov (%rbx),%rbx
1431e(4): mov %r8,(%rsp)
14322(5): call 0xfffef0be(%rip)
14327(2): push %r13
14329(2): push %r12
1432b(2): push %r15
1432d(2): push %r14
1432f(5): mov 0x28(%rsp),%r9
14334(2): jmp 0xffffff8f(%rip)
14336(a): nop 0x0(%rax,%rax,1)
14340(4): mov 0x40(%rbx),%r10
14344(4): mov 0x38(%rbx),%r9
14348(5): mov $0x5,%edx
1434d(4): mov 0x10(%rbx),%rax
14351(4): mov 0x8(%rbx),%r8
14355(7): lea 0x6704(%rip),%rsi
1435c(4): mov 0x30(%rbx),%r13
14360(4): mov 0x28(%rbx),%r12
14364(4): mov 0x20(%rbx),%r15
14368(4): mov 0x18(%rbx),%r14
1436c(5): mov %r10,0x18(%rsp)
14371(5): mov %r9,0x10(%rsp)
14376(4): mov %rax,(%rsp)
1437a(5): mov %r8,0x8(%rsp)
1437f(3): mov (%rbx),%rbx
14382(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
14390(3): xor %r9d,%r9d
14393(4): cmp $0x0,(%r8)
14397(2): jz 0x14(%rip)
14399(7): nop 0x0(%rax)
143a0(4): add $0x1,%r9
143a4(5): cmp $0x0,0x0(%r8,%r9,8)
143a9(2): jnz 0xfffffff7(%rip)
143ab(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
143b0(4): sub $0x68,%rsp
143b4(3): mov %r8,%r10
143b7(3): xor %r9d,%r9d
143ba(9): mov $0x28,%rax
143c3(5): mov %rax,0x58(%rsp)
143c8(2): xor %eax,%eax
143ca(3): mov %rsp,%r8
143cd(3): nop (%rax)
143d0(3): mov (%r10),%eax
143d3(3): cmp $0x2f,%eax
143d6(2): jnbe 0x44(%rip)
143d8(3): mov %eax,%r11d
143db(4): add 0x10(%r10),%r11
143df(3): add $0x8,%eax
143e2(3): mov %eax,(%r10)
143e5(3): mov (%r11),%rax
143e8(3): test %rax,%rax
143eb(4): mov %rax,0x0(%r8,%r9,8)
143ef(2): jz 0xc(%rip)
143f1(4): add $0x1,%r9
143f5(4): cmp $0xa,%r9
143f9(2): jnz 0xffffffd7(%rip)
143fb(5): call 0xfffffb75(%rip)
14400(5): mov 0x58(%rsp),%rax
14405(9): xor $0x28,%rax
1440e(2): jnz 0x7(%rip)
14410(4): add $0x68,%rsp
14414(1): ret near (%rsp)
14415(5): call 0xfffef00b(%rip)
1441a(4): mov 0x8(%r10),%r11
1441e(4): lea 0x8(%r11),%rax
14422(4): mov %rax,0x8(%r10)
14426(2): jmp 0xffffffbf(%rip)

"version_etc" :
14430(1): push %rbp
14431(1): push %rbx
14432(6): mov $0x20,%r10d
14438(3): xor %r11d,%r11d
1443b(7): sub $0xb8,%rsp
14442(9): mov $0x28,%rax
1444b(5): mov %rax,0x78(%rsp)
14450(2): xor %eax,%eax
14452(8): lea 0xd0(%rsp),%rax
1445a(8): mov %r8,0xa0(%rsp)
14462(8): lea 0xd0(%rsp),%rbx
1446a(5): lea 0x20(%rsp),%r8
1446f(8): mov %r9,0xa8(%rsp)
14477(8): mov $0x20,0x8(%rsp)
1447f(5): mov %rax,0x10(%rsp)
14484(8): lea 0x80(%rsp),%rax
1448c(3): xor %r9d,%r9d
1448f(5): mov %rax,0x18(%rsp)
14494(3): mov %rax,%rbp
14497(9): nop 0x0(%rax,%rax,1)
144a0(4): cmp $0x2f,%r10d
144a4(2): jnbe 0x58(%rip)
144a6(3): mov %r10d,%eax
144a9(6): mov $0x1,%r11d
144af(4): add $0x8,%r10d
144b3(3): add %rbp,%rax
144b6(3): mov (%rax),%rax
144b9(3): test %rax,%rax
144bc(4): mov %rax,0x0(%r8,%r9,8)
144c0(2): jz 0xc(%rip)
144c2(4): add $0x1,%r9
144c6(4): cmp $0xa,%r9
144ca(2): jnz 0xffffffd6(%rip)
144cc(3): test %r11b,%r11b
144cf(2): jnz 0x26(%rip)
144d1(5): call 0xfffffa9f(%rip)
144d6(5): mov 0x78(%rsp),%rax
144db(9): xor $0x28,%rax
144e4(2): jnz 0xc(%rip)
144e6(7): add $0xb8,%rsp
144ed(1): pop %rbx
144ee(1): pop %rbp
144ef(1): ret near (%rsp)
144f0(5): call 0xfffeef30(%rip)
144f5(5): mov %r10d,0x8(%rsp)
144fa(2): jmp 0xffffffd7(%rip)
144fc(3): mov %rbx,%rax
144ff(4): add $0x8,%rbx
14503(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
14510(1): push %rbx
14511(7): lea 0x632a(%rip),%rsi
14518(5): mov $0x5,%edx
1451d(2): xor %edi,%edi
1451f(5): call 0xfffeeec1(%rip)
14524(7): lea 0x632c(%rip),%rdx
1452b(3): mov %rax,%rsi
1452e(5): mov $0x1,%edi
14533(2): xor %eax,%eax
14535(5): call 0xfffef1db(%rip)
1453a(7): lea 0x632c(%rip),%rsi
14541(5): mov $0x5,%edx
14546(2): xor %edi,%edi
14548(5): call 0xfffeee98(%rip)
1454d(7): lea 0x5714(%rip),%rcx
14554(7): lea 0x347b(%rip),%rdx
1455b(3): mov %rax,%rsi
1455e(5): mov $0x1,%edi
14563(2): xor %eax,%eax
14565(5): call 0xfffef1ab(%rip)
1456a(7): mov 0x20bd17(%rip),%rbx
14571(7): lea 0x6528(%rip),%rsi
14578(2): xor %edi,%edi
1457a(5): mov $0x5,%edx
1457f(5): call 0xfffeee61(%rip)
14584(3): mov %rbx,%rsi
14587(3): mov %rax,%rdi
1458a(1): pop %rbx
1458b(5): jmp 0xfffeefe5(%rip)

"xmalloc" :
14590(1): push %rbx
14591(3): mov %rdi,%rbx
14594(5): call 0xfffef2f4(%rip)
14599(3): test %rax,%rax
1459c(2): jnz 0x7(%rip)
1459e(3): test %rbx,%rbx
145a1(2): jnz 0x4(%rip)
145a3(1): pop %rbx
145a4(1): ret near (%rsp)
145a5(5): call 0x23b(%rip)

"xnmalloc" :
145b0(3): mov %rdi,%rax
145b3(3): mul %rax,%rsi,%rdx
145b6(3): mov %rax,%rdi
145b9(3): seto %al
145bc(3): test %rdi,%rdi
145bf(2): js 0xc(%rip)
145c1(3): movzx %al,%eax
145c4(3): test %rax,%rax
145c7(2): jnz 0x4(%rip)
145c9(2): jmp 0xffffffc7(%rip)
145cb(4): sub $0x8,%rsp
145cf(5): call 0x211(%rip)

"xrealloc" :
145f0(3): test %rsi,%rsi
145f3(1): push %rbx
145f4(3): mov %rsi,%rbx
145f7(2): jnz 0x7(%rip)
145f9(3): test %rdi,%rdi
145fc(2): jnz 0x1c(%rip)
145fe(3): mov %rbx,%rsi
14601(5): call 0xfffef0df(%rip)
14606(3): test %rax,%rax
14609(2): jnz 0x7(%rip)
1460b(3): test %rbx,%rbx
1460e(2): jnz 0x13(%rip)
14610(1): pop %rbx
14611(1): ret near (%rsp)
14612(6): nop 0x0(%rax,%rax,1)
14618(5): call 0xfffef268(%rip)
1461d(2): xor %eax,%eax
1461f(1): pop %rbx
14620(1): ret near (%rsp)
14621(5): call 0x1bf(%rip)

"xnrealloc" :
14630(3): mov %rsi,%rax
14633(3): mul %rax,%rdx,%rdx
14636(3): mov %rax,%rsi
14639(3): seto %al
1463c(3): test %rsi,%rsi
1463f(2): js 0xc(%rip)
14641(3): movzx %al,%eax
14644(3): test %rax,%rax
14647(2): jnz 0x4(%rip)
14649(2): jmp 0xffffffa7(%rip)
1464b(4): sub $0x8,%rsp
1464f(5): call 0x191(%rip)

"x2nrealloc" :
14660(3): test %rdi,%rdi
14663(3): mov %rdx,%r9
14666(3): mov (%rsi),%rcx
14669(2): jz 0x37(%rip)
1466b(2): xor %edx,%edx
1466d(a): mov $0x6148914691236517204,%rax
14677(3): div %r9,%rax
1467a(3): cmp %rcx,%rax
1467d(2): jbe 0x3e(%rip)
1467f(3): mov %rcx,%rax
14682(3): shr $0x1,%rax
14685(5): lea 0x1(%rax,%rcx,1),%rcx
1468a(3): mov %rcx,(%rsi)
1468d(4): imul %r9,%rcx
14691(3): mov %rcx,%rsi
14694(5): jmp 0xffffff5c(%rip)
14699(7): nop 0x0(%rax)
146a0(3): test %rcx,%rcx
146a3(2): jz 0x25(%rip)
146a5(3): mov %rcx,%rax
146a8(3): mul %rax,%r9,%rdx
146ab(3): seto %dl
146ae(3): test %rax,%rax
146b1(3): movzx %dl,%edx
146b4(2): js 0x7(%rip)
146b6(3): test %rdx,%rdx
146b9(2): jz 0xffffffd1(%rip)
146bb(4): sub $0x8,%rsp
146bf(5): call 0x121(%rip)
146c4(4): nop 0x0(%rax)
146c8(2): xor %edx,%edx
146ca(5): mov $0x80,%eax
146cf(3): xor %r8d,%r8d
146d2(3): div %r9,%rax
146d5(3): test %rax,%rax
146d8(4): setz %r8b
146dc(4): lea 0x0(%r8,%rax,1),%rcx
146e0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
146f0(3): test %rdi,%rdi
146f3(3): mov (%rsi),%rax
146f6(2): jz 0x2a(%rip)
146f8(a): mov $0x6148914691236517203,%rdx
14702(3): cmp %rdx,%rax
14705(2): jnbe 0x2c(%rip)
14707(3): mov %rax,%rdx
1470a(3): shr $0x1,%rdx
1470d(5): lea 0x1(%rdx,%rax,1),%rax
14712(3): mov %rax,(%rsi)
14715(3): mov %rax,%rsi
14718(5): jmp 0xfffffed8(%rip)
1471d(3): nop (%rax)
14720(3): test %rax,%rax
14723(5): mov $0x80,%edx
14728(4): cmove %rdx,%rax
1472c(3): test %rax,%rax
1472f(2): jns 0xffffffe3(%rip)
14731(4): sub $0x8,%rsp
14735(5): call 0xab(%rip)

"xzalloc" :
14740(1): push %rbx
14741(3): mov %rdi,%rbx
14744(5): call 0xfffffe4c(%rip)
14749(3): mov %rbx,%rdx
1474c(2): xor %esi,%esi
1474e(3): mov %rax,%rdi
14751(1): pop %rbx
14752(5): jmp 0xfffeedae(%rip)

"xcalloc" :
14760(3): mov %rdi,%rax
14763(4): sub $0x8,%rsp
14767(3): mul %rax,%rsi,%rdx
1476a(3): seto %dl
1476d(3): test %rax,%rax
14770(2): js 0x19(%rip)
14772(3): movzx %dl,%edx
14775(3): test %rdx,%rdx
14778(2): jnz 0x11(%rip)
1477a(5): call 0xfffeee06(%rip)
1477f(3): test %rax,%rax
14782(2): jz 0x7(%rip)
14784(4): add $0x8,%rsp
14788(1): ret near (%rsp)
14789(5): call 0x57(%rip)

"xmemdup" :
14790(1): push %rbp
14791(1): push %rbx
14792(3): mov %rdi,%rbp
14795(3): mov %rsi,%rdi
14798(3): mov %rsi,%rbx
1479b(4): sub $0x8,%rsp
1479f(5): call 0xfffffdf1(%rip)
147a4(4): add $0x8,%rsp
147a8(3): mov %rbx,%rdx
147ab(3): mov %rbp,%rsi
147ae(1): pop %rbx
147af(1): pop %rbp
147b0(3): mov %rax,%rdi
147b3(5): jmp 0xfffeee3d(%rip)

"xstrdup" :
147c0(1): push %rbx
147c1(3): mov %rdi,%rbx
147c4(5): call 0xfffeec3c(%rip)
147c9(3): mov %rbx,%rdi
147cc(4): lea 0x1(%rax),%rsi
147d0(1): pop %rbx
147d1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
147e0(7): lea 0x6368(%rip),%rsi
147e7(4): sub $0x8,%rsp
147eb(5): mov $0x5,%edx
147f0(2): xor %edi,%edi
147f2(5): call 0xfffeebee(%rip)
147f7(6): mov 0x20b9fb(%rip),%edi
147fd(7): lea 0x5788(%rip),%rdx
14804(3): mov %rax,%rcx
14807(2): xor %esi,%esi
14809(2): xor %eax,%eax
1480b(5): call 0xfffeef55(%rip)
14810(5): call 0xfffeea80(%rip)

"xnumtoumax" :
14820(2): push %r15
14822(2): push %r14
14824(3): mov %rcx,%r15
14827(2): push %r13
14829(2): push %r12
1482b(3): mov %rdx,%r14
1482e(1): push %rbp
1482f(1): push %rbx
14830(2): mov %esi,%edx
14832(2): xor %esi,%esi
14834(3): mov %rdi,%r12
14837(3): mov %r9,%r13
1483a(4): sub $0x18,%rsp
1483e(3): mov %rsp,%rcx
14841(4): mov 0x50(%rsp),%ebx
14845(9): mov $0x28,%rax
1484e(5): mov %rax,0x8(%rsp)
14853(2): xor %eax,%eax
14855(5): call 0x6db(%rip)
1485a(2): test %eax,%eax
1485c(6): jnz 0x94(%rip)
14862(4): mov (%rsp),%rbp
14866(3): cmp %r14,%rbp
14869(2): jb 0x7(%rip)
1486b(3): cmp %r15,%rbp
1486e(2): jbe 0x56(%rip)
14870(5): call 0xfffeea30(%rip)
14875(7): cmp $0x40000000,%rbp
1487c(3): mov %rax,%r14
1487f(2): sbb %eax,%eax
14881(3): and $0xd7,%eax
14884(3): add $0x4b,%eax
14887(3): mov %eax,(%r14)
1488a(3): mov %r12,%rdi
1488d(5): call 0xfffff4d3(%rip)
14892(3): mov (%r14),%esi
14895(3): mov %rax,%r8
14898(5): mov $0x0,%eax
1489d(7): lea 0x31b4(%rip),%rdx
148a4(3): mov %r13,%rcx
148a7(3): cmp $0x16,%esi
148aa(3): cmove %eax,%esi
148ad(2): test %ebx,%ebx
148af(5): mov $0x1,%eax
148b4(3): cmove %eax,%ebx
148b7(2): xor %eax,%eax
148b9(2): mov %ebx,%edi
148bb(5): call 0xfffeeea5(%rip)
148c0(4): mov (%rsp),%rbp
148c4(5): mov 0x8(%rsp),%rdx
148c9(9): xor $0x28,%rdx
148d2(3): mov %rbp,%rax
148d5(2): jnz 0x46(%rip)
148d7(4): add $0x18,%rsp
148db(1): pop %rbx
148dc(1): pop %rbp
148dd(2): pop %r12
148df(2): pop %r13
148e1(2): pop %r14
148e3(2): pop %r15
148e5(1): ret near (%rsp)
148e6(a): nop 0x0(%rax,%rax,1)
148f0(2): mov %eax,%ebp
148f2(5): call 0xfffee9ae(%rip)
148f7(3): cmp $0x1,%ebp
148fa(3): mov %rax,%r14
148fd(2): jz 0x13(%rip)
148ff(3): cmp $0x3,%ebp
14902(2): jnz 0xffffff88(%rip)
14904(6): mov $0x0,(%rax)
1490a(5): jmp 0xffffff80(%rip)
1490f(1): nop 
14910(6): mov $0x4b,(%rax)
14916(5): jmp 0xffffff74(%rip)
1491b(5): call 0xfffeeb05(%rip)

"xdectoumax" :
14920(4): sub $0x10,%rsp
14924(2): push %r9
14926(3): mov %r8,%r9
14929(3): mov %rcx,%r8
1492c(3): mov %rdx,%rcx
1492f(3): mov %rsi,%rdx
14932(5): mov $0xa,%esi
14937(5): call 0xfffffee9(%rip)
1493c(4): add $0x18,%rsp
14940(1): ret near (%rsp)

"xgetcwd" :
14950(1): push %rbx
14951(2): xor %esi,%esi
14953(2): xor %edi,%edi
14955(5): call 0xfffeebcb(%rip)
1495a(3): test %rax,%rax
1495d(3): mov %rax,%rbx
14960(2): jz 0x10(%rip)
14962(3): mov %rbx,%rax
14965(1): pop %rbx
14966(1): ret near (%rsp)
14967(9): nop 0x0(%rax,%rax,1)
14970(5): call 0xfffee930(%rip)
14975(3): cmp $0xc,(%rax)
14978(2): jnz 0xffffffea(%rip)
1497a(5): call 0xfffffe66(%rip)

"xgethostname" :
14980(2): push %r14
14982(2): push %r13
14984(a): mov $0x68723675137,%r13
1498e(2): push %r12
14990(1): push %rbp
14991(1): push %rbx
14992(2): xor %ebx,%ebx
14994(4): sub $0x10,%rsp
14998(9): mov $0x28,%rax
149a1(5): mov %rax,0x8(%rsp)
149a6(2): xor %eax,%eax
149a8(8): mov $0x22,(%rsp)
149b0(3): mov %rsp,%r12
149b3(5): call 0xfffee8ed(%rip)
149b8(3): mov %rax,%rbp
149bb(5): nop 0x0(%rax,%rax,1)
149c0(3): mov %rbx,%rdi
149c3(3): mov %r12,%rsi
149c6(5): call 0xfffffd2a(%rip)
149cb(4): mov (%rsp),%rsi
149cf(3): mov %rax,%rdi
149d2(3): mov %rax,%rbx
149d5(5): lea 0xfffffffe(%rax,%rsi,1),%r14
149da(4): sub $0x1,%rsi
149de(4): mov $0x0,(%r14)
149e2(7): mov $0x0,0x0(%rbp)
149e9(5): call 0xfffeedd7(%rip)
149ee(2): test %eax,%eax
149f0(2): jnz 0x30(%rip)
149f2(4): cmp $0x0,(%r14)
149f6(2): jnz 0xffffffca(%rip)
149f8(5): mov 0x8(%rsp),%rdx
149fd(9): xor $0x28,%rdx
14a06(3): mov %rbx,%rax
14a09(2): jnz 0x43(%rip)
14a0b(4): add $0x10,%rsp
14a0f(1): pop %rbx
14a10(1): pop %rbp
14a11(2): pop %r12
14a13(2): pop %r13
14a15(2): pop %r14
14a17(1): ret near (%rsp)
14a18(8): nop 0x0(%rax,%rax,1)
14a20(4): mov 0x0(%rbp),%r14d
14a24(4): cmp $0x24,%r14d
14a28(2): jbe 0x18(%rip)
14a2a(3): mov %rbx,%rdi
14a2d(2): xor %ebx,%ebx
14a2f(5): call 0xfffeee51(%rip)
14a34(4): mov %r14d,0x0(%rbp)
14a38(2): jmp 0xffffffc0(%rip)
14a3a(6): nop 0x0(%rax,%rax,1)
14a40(4): bt %r14,%r13
14a44(6): jb 0xffffff7c(%rip)
14a4a(2): jmp 0xffffffe0(%rip)
14a4c(5): call 0xfffee9d4(%rip)

"xstrtoul" :
14a60(2): push %r15
14a62(2): push %r14
14a64(2): push %r13
14a66(2): push %r12
14a68(1): push %rbp
14a69(1): push %rbx
14a6a(4): sub $0x28,%rsp
14a6e(9): mov $0x28,%rax
14a77(5): mov %rax,0x18(%rsp)
14a7c(2): xor %eax,%eax
14a7e(3): cmp $0x24,%edx
14a81(6): jnbe 0x364(%rip)
14a87(5): lea 0x10(%rsp),%rax
14a8c(3): mov %rsi,%r15
14a8f(3): test %rsi,%rsi
14a92(3): mov %rdi,%rbp
14a95(4): mov %edx,0x8(%rsp)
14a99(3): mov %rcx,%r14
14a9c(3): mov %r8,%r13
14a9f(4): cmove %rax,%r15
14aa3(5): call 0xfffee7fd(%rip)
14aa8(6): mov $0x0,(%rax)
14aae(3): mov %rax,%r12
14ab1(4): movzx 0x0(%rbp),%ebx
14ab5(5): call 0xfffeedab(%rip)
14aba(4): mov 0x8(%rsp),%edx
14abe(3): mov (%rax),%rsi
14ac1(3): mov %rbp,%rax
14ac4(2): jmp 0x13(%rip)
14ac6(a): nop 0x0(%rax,%rax,1)
14ad0(4): add $0x1,%rax
14ad4(3): movzx (%rax),%ebx
14ad7(3): movzx %bl,%ecx
14ada(5): test $0x20,0x1(%rsi,%rcx,2)
14adf(2): jnz 0xfffffff1(%rip)
14ae1(3): cmp $0x2d,%bl
14ae4(2): jz 0x54(%rip)
14ae6(3): mov %r15,%rsi
14ae9(3): mov %rbp,%rdi
14aec(5): call 0xfffeeca4(%rip)
14af1(3): mov (%r15),%rcx
14af4(3): mov %rax,%rbx
14af7(3): cmp %rbp,%rcx
14afa(2): jz 0x2e(%rip)
14afc(4): mov (%r12),%eax
14b00(2): test %eax,%eax
14b02(2): jz 0x66(%rip)
14b04(3): cmp $0x22,%eax
14b07(5): mov $0x1,%ebp
14b0c(2): jnz 0x2c(%rip)
14b0e(3): test %r13,%r13
14b11(2): jz 0xb(%rip)
14b13(4): movzx (%rcx),%r12d
14b17(3): test %r12b,%r12b
14b1a(2): jnz 0x7d(%rip)
14b1c(3): mov %rbx,(%r14)
14b1f(2): jmp 0x1e(%rip)
14b21(7): nop 0x0(%rax)
14b28(3): test %r13,%r13
14b2b(5): mov %rcx,0x8(%rsp)
14b30(2): jnz 0x40(%rip)
14b32(6): nop 0x0(%rax,%rax,1)
14b38(5): mov $0x4,%ebp
14b3d(5): mov 0x18(%rsp),%rdi
14b42(9): xor $0x28,%rdi
14b4b(2): mov %ebp,%eax
14b4d(6): jnz 0x293(%rip)
14b53(4): add $0x28,%rsp
14b57(1): pop %rbx
14b58(1): pop %rbp
14b59(2): pop %r12
14b5b(2): pop %r13
14b5d(2): pop %r14
14b5f(2): pop %r15
14b61(1): ret near (%rsp)
14b62(6): nop 0x0(%rax,%rax,1)
14b68(2): xor %ebp,%ebp
14b6a(2): jmp 0xffffffa4(%rip)
14b6c(4): nop 0x0(%rax)
14b70(5): movzx 0x0(%rbp),%r12d
14b75(3): test %r12b,%r12b
14b78(2): jz 0xffffffc0(%rip)
14b7a(4): movsx %r12b,%esi
14b7e(3): mov %r13,%rdi
14b81(2): xor %ebp,%ebp
14b83(5): call 0xfffee8cd(%rip)
14b88(3): test %rax,%rax
14b8b(5): mov $0x1,%ebx
14b90(5): mov 0x8(%rsp),%rcx
14b95(2): jz 0xffffffa3(%rip)
14b97(4): movsx %r12b,%esi
14b9b(3): mov %r13,%rdi
14b9e(5): mov %rcx,0x8(%rsp)
14ba3(5): call 0xfffee8ad(%rip)
14ba8(3): test %rax,%rax
14bab(5): mov 0x8(%rsp),%rcx
14bb0(6): jz 0xcc(%rip)
14bb6(5): lea 0xffffffbb(%r12),%eax
14bbb(2): cmp $0x2f,%al
14bbd(2): jnbe 0x53(%rip)
14bbf(a): mov $0x142129060940101,%rdx
14bc9(4): bt %rax,%rdx
14bcd(2): jnb 0x43(%rip)
14bcf(5): mov $0x30,%esi
14bd4(3): mov %r13,%rdi
14bd7(5): mov %rcx,0x8(%rsp)
14bdc(5): call 0xfffee874(%rip)
14be1(3): test %rax,%rax
14be4(5): mov 0x8(%rsp),%rcx
14be9(2): jz 0x27(%rip)
14beb(4): movzx 0x1(%rcx),%eax
14bef(2): cmp $0x44,%al
14bf1(2): jz 0xe(%rip)
14bf3(2): cmp $0x69,%al
14bf5(6): jz 0x1d3(%rip)
14bfb(2): cmp $0x42,%al
14bfd(2): jnz 0x13(%rip)
14bff(5): mov $0x2,%edi
14c04(5): mov $0x3e8,%esi
14c09(2): jmp 0x11(%rip)
14c0b(5): nop 0x0(%rax,%rax,1)
14c10(5): mov $0x1,%edi
14c15(5): mov $0x400,%esi
14c1a(4): sub $0x42,%r12d
14c1e(4): cmp $0x35,%r12b
14c22(2): jnbe 0x5a(%rip)
14c24(7): lea 0x5f7d(%rip),%rdx
14c2b(4): movzx %r12b,%r12d
14c2f(4): movsxd 0x0(%rdx,%r12,4),%rax
14c33(3): add %rdx,%rax
14c36(2): jmp %rax
14c38(3): mov %rbx,%rax
14c3b(3): mul %rax,%rsi,%rdx
14c3e(6): jo 0x1f3(%rip)
14c44(3): xor %r8d,%r8d
14c47(3): mul %rax,%rsi,%rdx
14c4a(6): jo 0x1d8(%rip)
14c50(3): mov %rax,%rbx
14c53(3): or %r8d,%ebp
14c56(a): nop 0x0(%rax,%rax,1)
14c60(3): movsxd %edi,%rdi
14c63(2): mov %ebp,%eax
14c65(3): add %rdi,%rcx
14c68(3): or $0x2,%eax
14c6b(3): mov %rcx,(%r15)
14c6e(3): cmp $0x0,(%rcx)
14c71(3): mov %rbx,(%r14)
14c74(3): cmovne %eax,%ebp
14c77(5): jmp 0xfffffec6(%rip)
14c7c(3): mov %rbx,(%r14)
14c7f(3): or $0x2,%ebp
14c82(5): jmp 0xfffffebb(%rip)
14c87(5): mov $0x2,%edx
14c8c(3): mov %rdx,%rax
14c8f(3): mul %rax,%rbx,%rdx
14c92(6): jo 0x9c(%rip)
14c98(3): add %rbx,%rbx
14c9b(2): jmp 0xffffffc5(%rip)
14c9d(5): mov $0x200,%edx
14ca2(3): mov %rdx,%rax
14ca5(3): mul %rax,%rbx,%rdx
14ca8(6): jo 0x86(%rip)
14cae(4): shl/sal $0x9,%rbx
14cb2(2): jmp 0xffffffae(%rip)
14cb4(6): mov $0x7,%r8d
14cba(3): xor %r9d,%r9d
14cbd(3): nop (%rax)
14cc0(3): mov %rbx,%rax
14cc3(3): mul %rax,%rsi,%rdx
14cc6(3): mov %rax,%rbx
14cc9(6): jo 0x195(%rip)
14ccf(4): sub $0x1,%r8d
14cd3(2): jnz 0xffffffed(%rip)
14cd5(3): or %r9d,%ebp
14cd8(2): jmp 0xffffff88(%rip)
14cda(6): mov $0x8,%r8d
14ce0(3): xor %r9d,%r9d
14ce3(5): nop 0x0(%rax,%rax,1)
14ce8(3): mov %rbx,%rax
14ceb(3): mul %rax,%rsi,%rdx
14cee(3): mov %rax,%rbx
14cf1(6): jo 0x14f(%rip)
14cf7(4): sub $0x1,%r8d
14cfb(2): jnz 0xffffffed(%rip)
14cfd(2): jmp 0xffffffd8(%rip)
14cff(6): mov $0x4,%r8d
14d05(3): xor %r9d,%r9d
14d08(3): mov %rbx,%rax
14d0b(3): mul %rax,%rsi,%rdx
14d0e(3): mov %rax,%rbx
14d11(6): jo 0x102(%rip)
14d17(4): sub $0x1,%r8d
14d1b(2): jnz 0xffffffed(%rip)
14d1d(2): jmp 0xffffffb8(%rip)
14d1f(3): mov %rbx,%rax
14d22(3): mul %rax,%rsi,%rdx
14d25(3): mov %rax,%rbx
14d28(6): jno 0xffffff38(%rip)
14d2e(5): mov $0x1,%ebp
14d33(4): or $0xffffffff,%rbx
14d37(5): jmp 0xffffff29(%rip)
14d3c(4): nop 0x0(%rax)
14d40(6): mov $0x5,%r8d
14d46(3): xor %r9d,%r9d
14d49(3): mov %rbx,%rax
14d4c(3): mul %rax,%rsi,%rdx
14d4f(3): mov %rax,%rbx
14d52(6): jo 0xfd(%rip)
14d58(4): sub $0x1,%r8d
14d5c(2): jnz 0xffffffed(%rip)
14d5e(5): jmp 0xffffff77(%rip)
14d63(6): mov $0x6,%r8d
14d69(3): xor %r9d,%r9d
14d6c(3): mov %rbx,%rax
14d6f(3): mul %rax,%rsi,%rdx
14d72(3): mov %rax,%rbx
14d75(6): jo 0x8f(%rip)
14d7b(4): sub $0x1,%r8d
14d7f(2): jnz 0xffffffed(%rip)
14d81(5): jmp 0xffffff54(%rip)
14d86(5): mov $0x400,%edx
14d8b(3): mov %rdx,%rax
14d8e(3): mul %rax,%rbx,%rdx
14d91(2): jo 0xffffff9d(%rip)
14d93(4): shl/sal $0xa,%rbx
14d97(5): jmp 0xfffffec9(%rip)
14d9c(3): mov %rbx,%rax
14d9f(3): mul %rax,%rsi,%rdx
14da2(6): jo 0xcb(%rip)
14da8(3): xor %r8d,%r8d
14dab(3): mul %rax,%rsi,%rdx
14dae(6): jno 0xfffffe99(%rip)
14db4(6): mov $0x1,%r8d
14dba(4): or $0xffffffff,%rax
14dbe(5): jmp 0xfffffe89(%rip)
14dc3(5): nop 0x0(%rax,%rax,1)
14dc8(2): xor %edi,%edi
14dca(4): cmp $0x42,0x2(%rcx)
14dce(5): mov $0x400,%esi
14dd3(4): setz %dil
14dd7(4): lea 0x1(%rdi,%rdi,1),%edi
14ddb(5): jmp 0xfffffe3f(%rip)
14de0(5): call 0xfffee640(%rip)
14de5(7): lea 0x5e94(%rip),%rcx
14dec(7): lea 0x5d6d(%rip),%rsi
14df3(7): lea 0x5d86(%rip),%rdi
14dfa(5): mov $0x54,%edx
14dff(5): call 0xfffee6d1(%rip)
14e04(6): mov $0x1,%r9d
14e0a(4): or $0xffffffff,%rbx
14e0e(5): jmp 0xffffff6d(%rip)
14e13(6): mov $0x1,%r9d
14e19(4): or $0xffffffff,%rbx
14e1d(5): jmp 0xfffffefa(%rip)
14e22(6): mov $0x1,%r8d
14e28(4): or $0xffffffff,%rbx
14e2c(5): jmp 0xfffffe27(%rip)
14e31(4): or $0xffffffff,%rax
14e35(6): mov $0x1,%r8d
14e3b(5): jmp 0xfffffe0c(%rip)
14e40(6): mov $0x1,%r9d
14e46(4): or $0xffffffff,%rbx
14e4a(5): jmp 0xfffffead(%rip)
14e4f(6): mov $0x1,%r9d
14e55(4): or $0xffffffff,%rbx
14e59(5): jmp 0xfffffeff(%rip)
14e5e(6): mov $0x1,%r9d
14e64(4): or $0xffffffff,%rbx
14e68(5): jmp 0xfffffe67(%rip)
14e6d(6): mov $0x1,%r8d
14e73(4): or $0xffffffff,%rax
14e77(5): jmp 0xffffff34(%rip)

"xstrtol_fatal" :
14e80(2): push %r13
14e82(2): push %r12
14e84(3): mov %esi,%r10d
14e87(1): push %rbp
14e88(1): push %rbx
14e89(3): mov %r8,%r12
14e8c(4): sub $0x18,%rsp
14e90(9): mov $0x28,%rax
14e99(5): mov %rax,0x8(%rsp)
14e9e(2): xor %eax,%eax
14ea0(3): cmp $0x3,%edi
14ea3(6): mov 0x20b34f(%rip),%ebp
14ea9(2): jnbe 0x5b(%rip)
14eab(3): cmp $0x2,%edi
14eae(2): jnb 0x4d(%rip)
14eb0(3): sub $0x1,%edi
14eb3(7): lea 0x5dea(%rip),%rsi
14eba(2): jnz 0x3c(%rip)
14ebc(3): test %r10d,%r10d
14ebf(3): movsxd %r10d,%rax
14ec2(2): js 0x50(%rip)
14ec4(4): shl/sal $0x5,%rax
14ec8(7): lea 0x5df2(%rip),%rbx
14ecf(4): mov 0x0(%rcx,%rax,1),%r13
14ed3(5): mov $0x5,%edx
14ed8(2): xor %edi,%edi
14eda(5): call 0xfffee506(%rip)
14edf(3): mov %r12,%r9
14ee2(3): mov %rax,%rdx
14ee5(3): mov %r13,%r8
14ee8(3): mov %rbx,%rcx
14eeb(2): xor %esi,%esi
14eed(2): mov %ebp,%edi
14eef(2): xor %eax,%eax
14ef1(5): call 0xfffee86f(%rip)
14ef6(5): call 0xfffee39a(%rip)
14efb(7): lea 0x5dc6(%rip),%rsi
14f02(2): jmp 0xffffffba(%rip)
14f04(3): cmp $0x4,%edi
14f07(7): lea 0x5d7b(%rip),%rsi
14f0e(2): jz 0xffffffae(%rip)
14f10(2): jmp 0xffffffe6(%rip)
14f12(7): lea 0x5da8(%rip),%rbx
14f19(4): mov %dl,0x6(%rsp)
14f1d(5): mov $0x0,0x7(%rsp)
14f22(5): lea 0x6(%rsp),%r13
14f27(3): sub %rax,%rbx
14f2a(2): jmp 0xffffffa9(%rip)

"xstrtoumax" :
14f30(2): push %r15
14f32(2): push %r14
14f34(2): push %r13
14f36(2): push %r12
14f38(1): push %rbp
14f39(1): push %rbx
14f3a(4): sub $0x28,%rsp
14f3e(9): mov $0x28,%rax
14f47(5): mov %rax,0x18(%rsp)
14f4c(2): xor %eax,%eax
14f4e(3): cmp $0x24,%edx
14f51(6): jnbe 0x364(%rip)
14f57(5): lea 0x10(%rsp),%rax
14f5c(3): mov %rsi,%r15
14f5f(3): test %rsi,%rsi
14f62(3): mov %rdi,%rbp
14f65(4): mov %edx,0x8(%rsp)
14f69(3): mov %rcx,%r14
14f6c(3): mov %r8,%r13
14f6f(4): cmove %rax,%r15
14f73(5): call 0xfffee32d(%rip)
14f78(6): mov $0x0,(%rax)
14f7e(3): mov %rax,%r12
14f81(4): movzx 0x0(%rbp),%ebx
14f85(5): call 0xfffee8db(%rip)
14f8a(4): mov 0x8(%rsp),%edx
14f8e(3): mov (%rax),%rsi
14f91(3): mov %rbp,%rax
14f94(2): jmp 0x13(%rip)
14f96(a): nop 0x0(%rax,%rax,1)
14fa0(4): add $0x1,%rax
14fa4(3): movzx (%rax),%ebx
14fa7(3): movzx %bl,%ecx
14faa(5): test $0x20,0x1(%rsi,%rcx,2)
14faf(2): jnz 0xfffffff1(%rip)
14fb1(3): cmp $0x2d,%bl
14fb4(2): jz 0x54(%rip)
14fb6(2): xor %ecx,%ecx
14fb8(3): mov %r15,%rsi
14fbb(3): mov %rbp,%rdi
14fbe(5): call 0xfffee522(%rip)
14fc3(3): mov (%r15),%rcx
14fc6(3): mov %rax,%rbx
14fc9(3): cmp %rbp,%rcx
14fcc(2): jz 0x2c(%rip)
14fce(4): mov (%r12),%eax
14fd2(2): test %eax,%eax
14fd4(2): jz 0x64(%rip)
14fd6(3): cmp $0x22,%eax
14fd9(5): mov $0x1,%ebp
14fde(2): jnz 0x2a(%rip)
14fe0(3): test %r13,%r13
14fe3(2): jz 0xb(%rip)
14fe5(4): movzx (%rcx),%r12d
14fe9(3): test %r12b,%r12b
14fec(2): jnz 0x7b(%rip)
14fee(3): mov %rbx,(%r14)
14ff1(2): jmp 0x1c(%rip)
14ff3(5): nop 0x0(%rax,%rax,1)
14ff8(3): test %r13,%r13
14ffb(5): mov %rcx,0x8(%rsp)
15000(2): jnz 0x40(%rip)
15002(6): nop 0x0(%rax,%rax,1)
15008(5): mov $0x4,%ebp
1500d(5): mov 0x18(%rsp),%rdi
15012(9): xor $0x28,%rdi
1501b(2): mov %ebp,%eax
1501d(6): jnz 0x293(%rip)
15023(4): add $0x28,%rsp
15027(1): pop %rbx
15028(1): pop %rbp
15029(2): pop %r12
1502b(2): pop %r13
1502d(2): pop %r14
1502f(2): pop %r15
15031(1): ret near (%rsp)
15032(6): nop 0x0(%rax,%rax,1)
15038(2): xor %ebp,%ebp
1503a(2): jmp 0xffffffa6(%rip)
1503c(4): nop 0x0(%rax)
15040(5): movzx 0x0(%rbp),%r12d
15045(3): test %r12b,%r12b
15048(2): jz 0xffffffc0(%rip)
1504a(4): movsx %r12b,%esi
1504e(3): mov %r13,%rdi
15051(2): xor %ebp,%ebp
15053(5): call 0xfffee3fd(%rip)
15058(3): test %rax,%rax
1505b(5): mov $0x1,%ebx
15060(5): mov 0x8(%rsp),%rcx
15065(2): jz 0xffffffa3(%rip)
15067(4): movsx %r12b,%esi
1506b(3): mov %r13,%rdi
1506e(5): mov %rcx,0x8(%rsp)
15073(5): call 0xfffee3dd(%rip)
15078(3): test %rax,%rax
1507b(5): mov 0x8(%rsp),%rcx
15080(6): jz 0xcc(%rip)
15086(5): lea 0xffffffbb(%r12),%eax
1508b(2): cmp $0x2f,%al
1508d(2): jnbe 0x53(%rip)
1508f(a): mov $0x142129060940101,%rdx
15099(4): bt %rax,%rdx
1509d(2): jnb 0x43(%rip)
1509f(5): mov $0x30,%esi
150a4(3): mov %r13,%rdi
150a7(5): mov %rcx,0x8(%rsp)
150ac(5): call 0xfffee3a4(%rip)
150b1(3): test %rax,%rax
150b4(5): mov 0x8(%rsp),%rcx
150b9(2): jz 0x27(%rip)
150bb(4): movzx 0x1(%rcx),%eax
150bf(2): cmp $0x44,%al
150c1(2): jz 0xe(%rip)
150c3(2): cmp $0x69,%al
150c5(6): jz 0x1d3(%rip)
150cb(2): cmp $0x42,%al
150cd(2): jnz 0x13(%rip)
150cf(5): mov $0x2,%edi
150d4(5): mov $0x3e8,%esi
150d9(2): jmp 0x11(%rip)
150db(5): nop 0x0(%rax,%rax,1)
150e0(5): mov $0x1,%edi
150e5(5): mov $0x400,%esi
150ea(4): sub $0x42,%r12d
150ee(4): cmp $0x35,%r12b
150f2(2): jnbe 0x5a(%rip)
150f4(7): lea 0x5bf5(%rip),%rdx
150fb(4): movzx %r12b,%r12d
150ff(4): movsxd 0x0(%rdx,%r12,4),%rax
15103(3): add %rdx,%rax
15106(2): jmp %rax
15108(3): mov %rbx,%rax
1510b(3): mul %rax,%rsi,%rdx
1510e(6): jo 0x1f3(%rip)
15114(3): xor %r8d,%r8d
15117(3): mul %rax,%rsi,%rdx
1511a(6): jo 0x1d8(%rip)
15120(3): mov %rax,%rbx
15123(3): or %r8d,%ebp
15126(a): nop 0x0(%rax,%rax,1)
15130(3): movsxd %edi,%rdi
15133(2): mov %ebp,%eax
15135(3): add %rdi,%rcx
15138(3): or $0x2,%eax
1513b(3): mov %rcx,(%r15)
1513e(3): cmp $0x0,(%rcx)
15141(3): mov %rbx,(%r14)
15144(3): cmovne %eax,%ebp
15147(5): jmp 0xfffffec6(%rip)
1514c(3): mov %rbx,(%r14)
1514f(3): or $0x2,%ebp
15152(5): jmp 0xfffffebb(%rip)
15157(5): mov $0x2,%edx
1515c(3): mov %rdx,%rax
1515f(3): mul %rax,%rbx,%rdx
15162(6): jo 0x9c(%rip)
15168(3): add %rbx,%rbx
1516b(2): jmp 0xffffffc5(%rip)
1516d(5): mov $0x200,%edx
15172(3): mov %rdx,%rax
15175(3): mul %rax,%rbx,%rdx
15178(6): jo 0x86(%rip)
1517e(4): shl/sal $0x9,%rbx
15182(2): jmp 0xffffffae(%rip)
15184(6): mov $0x7,%r8d
1518a(3): xor %r9d,%r9d
1518d(3): nop (%rax)
15190(3): mov %rbx,%rax
15193(3): mul %rax,%rsi,%rdx
15196(3): mov %rax,%rbx
15199(6): jo 0x195(%rip)
1519f(4): sub $0x1,%r8d
151a3(2): jnz 0xffffffed(%rip)
151a5(3): or %r9d,%ebp
151a8(2): jmp 0xffffff88(%rip)
151aa(6): mov $0x8,%r8d
151b0(3): xor %r9d,%r9d
151b3(5): nop 0x0(%rax,%rax,1)
151b8(3): mov %rbx,%rax
151bb(3): mul %rax,%rsi,%rdx
151be(3): mov %rax,%rbx
151c1(6): jo 0x14f(%rip)
151c7(4): sub $0x1,%r8d
151cb(2): jnz 0xffffffed(%rip)
151cd(2): jmp 0xffffffd8(%rip)
151cf(6): mov $0x4,%r8d
151d5(3): xor %r9d,%r9d
151d8(3): mov %rbx,%rax
151db(3): mul %rax,%rsi,%rdx
151de(3): mov %rax,%rbx
151e1(6): jo 0x102(%rip)
151e7(4): sub $0x1,%r8d
151eb(2): jnz 0xffffffed(%rip)
151ed(2): jmp 0xffffffb8(%rip)
151ef(3): mov %rbx,%rax
151f2(3): mul %rax,%rsi,%rdx
151f5(3): mov %rax,%rbx
151f8(6): jno 0xffffff38(%rip)
151fe(5): mov $0x1,%ebp
15203(4): or $0xffffffff,%rbx
15207(5): jmp 0xffffff29(%rip)
1520c(4): nop 0x0(%rax)
15210(6): mov $0x5,%r8d
15216(3): xor %r9d,%r9d
15219(3): mov %rbx,%rax
1521c(3): mul %rax,%rsi,%rdx
1521f(3): mov %rax,%rbx
15222(6): jo 0xfd(%rip)
15228(4): sub $0x1,%r8d
1522c(2): jnz 0xffffffed(%rip)
1522e(5): jmp 0xffffff77(%rip)
15233(6): mov $0x6,%r8d
15239(3): xor %r9d,%r9d
1523c(3): mov %rbx,%rax
1523f(3): mul %rax,%rsi,%rdx
15242(3): mov %rax,%rbx
15245(6): jo 0x8f(%rip)
1524b(4): sub $0x1,%r8d
1524f(2): jnz 0xffffffed(%rip)
15251(5): jmp 0xffffff54(%rip)
15256(5): mov $0x400,%edx
1525b(3): mov %rdx,%rax
1525e(3): mul %rax,%rbx,%rdx
15261(2): jo 0xffffff9d(%rip)
15263(4): shl/sal $0xa,%rbx
15267(5): jmp 0xfffffec9(%rip)
1526c(3): mov %rbx,%rax
1526f(3): mul %rax,%rsi,%rdx
15272(6): jo 0xcb(%rip)
15278(3): xor %r8d,%r8d
1527b(3): mul %rax,%rsi,%rdx
1527e(6): jno 0xfffffe99(%rip)
15284(6): mov $0x1,%r8d
1528a(4): or $0xffffffff,%rax
1528e(5): jmp 0xfffffe89(%rip)
15293(5): nop 0x0(%rax,%rax,1)
15298(2): xor %edi,%edi
1529a(4): cmp $0x42,0x2(%rcx)
1529e(5): mov $0x400,%esi
152a3(4): setz %dil
152a7(4): lea 0x1(%rdi,%rdi,1),%edi
152ab(5): jmp 0xfffffe3f(%rip)
152b0(5): call 0xfffee170(%rip)
152b5(7): lea 0x5b0c(%rip),%rcx
152bc(7): lea 0x589d(%rip),%rsi
152c3(7): lea 0x58b6(%rip),%rdi
152ca(5): mov $0x54,%edx
152cf(5): call 0xfffee201(%rip)
152d4(6): mov $0x1,%r9d
152da(4): or $0xffffffff,%rbx
152de(5): jmp 0xffffff6d(%rip)
152e3(6): mov $0x1,%r9d
152e9(4): or $0xffffffff,%rbx
152ed(5): jmp 0xfffffefa(%rip)
152f2(6): mov $0x1,%r8d
152f8(4): or $0xffffffff,%rbx
152fc(5): jmp 0xfffffe27(%rip)
15301(4): or $0xffffffff,%rax
15305(6): mov $0x1,%r8d
1530b(5): jmp 0xfffffe0c(%rip)
15310(6): mov $0x1,%r9d
15316(4): or $0xffffffff,%rbx
1531a(5): jmp 0xfffffead(%rip)
1531f(6): mov $0x1,%r9d
15325(4): or $0xffffffff,%rbx
15329(5): jmp 0xfffffeff(%rip)
1532e(6): mov $0x1,%r9d
15334(4): or $0xffffffff,%rbx
15338(5): jmp 0xfffffe67(%rip)
1533d(6): mov $0x1,%r8d
15343(4): or $0xffffffff,%rax
15347(5): jmp 0xffffff34(%rip)

"rpl_mbrtowc" :
15350(2): push %r13
15352(2): push %r12
15354(3): mov %rsi,%r13
15357(1): push %rbp
15358(1): push %rbx
15359(3): mov %rdi,%rbx
1535c(3): mov %rdx,%r12
1535f(4): sub $0x18,%rsp
15363(9): mov $0x28,%rax
1536c(5): mov %rax,0x8(%rsp)
15371(2): xor %eax,%eax
15373(5): lea 0x4(%rsp),%rax
15378(3): test %rdi,%rdi
1537b(4): cmove %rax,%rbx
1537f(3): mov %rbx,%rdi
15382(5): call 0xfffee0be(%rip)
15387(4): cmp $0xfffffffd,%rax
1538b(3): mov %rax,%rbp
1538e(2): jbe 0x22(%rip)
15390(3): test %r12,%r12
15393(2): jz 0x1d(%rip)
15395(2): xor %edi,%edi
15397(5): call 0xffff8349(%rip)
1539c(2): test %al,%al
1539e(2): jnz 0x12(%rip)
153a0(5): movzx 0x0(%r13),%eax
153a5(5): mov $0x1,%ebp
153aa(2): mov %eax,(%rbx)
153ac(4): nop 0x0(%rax)
153b0(5): mov 0x8(%rsp),%rdx
153b5(9): xor $0x28,%rdx
153be(3): mov %rbp,%rax
153c1(2): jnz 0xd(%rip)
153c3(4): add $0x18,%rsp
153c7(1): pop %rbx
153c8(1): pop %rbp
153c9(2): pop %r12
153cb(2): pop %r13
153cd(1): ret near (%rsp)
153ce(5): call 0xfffee052(%rip)

"print_and_abort" :
153e0(7): lea 0x5768(%rip),%rsi
153e7(4): sub $0x8,%rsp
153eb(5): mov $0x5,%edx
153f0(2): xor %edi,%edi
153f2(5): call 0xfffedfee(%rip)
153f7(7): mov 0x20aec2(%rip),%rdi
153fe(7): lea 0x53eb(%rip),%rdx
15405(3): mov %rax,%rcx
15408(5): mov $0x1,%esi
1540d(2): xor %eax,%eax
1540f(5): call 0xfffee3f1(%rip)
15414(6): mov 0x20adde(%rip),%edi
1541a(5): call 0xfffee3c6(%rip)

"call_chunkfun" :
15420(4): test $0x1,0x50(%rdi)
15424(4): mov 0x38(%rdi),%rax
15428(2): jnz 0x8(%rip)
1542a(3): mov %rsi,%rdi
1542d(2): jmp %rax
1542f(1): nop 
15430(4): mov 0x48(%rdi),%rdi
15434(2): jmp %rax

"call_freefun" :
15440(4): test $0x1,0x50(%rdi)
15444(4): mov 0x40(%rdi),%rax
15448(2): jnz 0x8(%rip)
1544a(3): mov %rsi,%rdi
1544d(2): jmp %rax
1544f(1): nop 
15450(4): mov 0x48(%rdi),%rdi
15454(2): jmp %rax

"_obstack_begin_worker" :
15460(3): test %rdx,%rdx
15463(2): push %r12
15465(1): push %rbp
15466(1): push %rbx
15467(3): mov %rdi,%rbx
1546a(2): jz 0x66(%rip)
1546c(4): lea 0xffffffff(%rdx),%r12
15470(3): mov %rdx,%rbp
15473(3): test %rsi,%rsi
15476(5): mov $0xfe0,%eax
1547b(4): mov %r12,0x30(%rbx)
1547f(4): cmove %rax,%rsi
15483(3): mov %rbx,%rdi
15486(3): mov %rsi,(%rbx)
15489(5): call 0xffffff97(%rip)
1548e(3): test %rax,%rax
15491(4): mov %rax,0x8(%rbx)
15495(2): jz 0x48(%rip)
15497(5): lea 0x10(%rax,%r12,1),%rdx
1549c(3): neg %rbp
1549f(3): and %rdx,%rbp
154a2(3): mov (%rbx),%rdx
154a5(4): mov %rbp,0x10(%rbx)
154a9(4): mov %rbp,0x18(%rbx)
154ad(3): add %rax,%rdx
154b0(3): mov %rdx,(%rax)
154b3(4): mov %rdx,0x20(%rbx)
154b7(8): mov $0x0,0x8(%rax)
154bf(5): mov $0x1,%eax
154c4(4): and $0xf9,0x50(%rbx)
154c8(1): pop %rbx
154c9(1): pop %rbp
154ca(2): pop %r12
154cc(1): ret near (%rsp)
154cd(3): nop (%rax)
154d0(6): mov $0xf,%r12d
154d6(5): mov $0x10,%ebp
154db(2): jmp 0xffffff98(%rip)
154dd(6): call 0x20ad7d(%rip)
154e3(3): nop (%rax)
154e6(a): nop 0x0(%rax,%rax,1)
154f0(4): and $0xfe,0x50(%rdi)
154f4(4): mov %rcx,0x38(%rdi)
154f8(4): mov %r8,0x40(%rdi)
154fc(5): jmp 0xffffff64(%rip)

"_obstack_begin" :
154f0(4): and $0xfe,0x50(%rdi)
154f4(4): mov %rcx,0x38(%rdi)
154f8(4): mov %r8,0x40(%rdi)
154fc(5): jmp 0xffffff64(%rip)

"_obstack_begin_1" :
15510(4): or $0x1,0x50(%rdi)
15514(4): mov %rcx,0x38(%rdi)
15518(4): mov %r8,0x40(%rdi)
1551c(4): mov %r9,0x48(%rdi)
15520(5): jmp 0xffffff40(%rip)

"_obstack_newchunk" :
15530(2): push %r14
15532(2): push %r13
15534(2): xor %edx,%edx
15536(2): push %r12
15538(1): push %rbp
15539(1): push %rbx
1553a(4): mov 0x18(%rdi),%rbx
1553e(4): sub 0x10(%rdi),%rbx
15542(4): mov 0x8(%rdi),%rbp
15546(3): add %rbx,%rsi
15549(3): mov %rbx,%rcx
1554c(3): setb %dl
1554f(4): add 0x30(%rdi),%rsi
15553(3): setb %al
15556(4): shr $0x3,%rcx
1555a(3): cmp %rsi,(%rdi)
1555d(5): lea 0x64(%rsi,%rcx,1),%r12
15562(4): cmovnb (%rdi),%rsi
15566(3): cmp %r12,%rsi
15569(4): cmovnb %rsi,%r12
1556d(3): test %rdx,%rdx
15570(6): jnz 0xa5(%rip)
15576(3): movzx %al,%eax
15579(3): test %rax,%rax
1557c(6): jnz 0x99(%rip)
15582(3): mov %r12,%rsi
15585(3): mov %rdi,%r13
15588(5): call 0xfffffe98(%rip)
1558d(3): test %rax,%rax
15590(3): mov %rax,%r14
15593(6): jz 0x82(%rip)
15599(4): lea 0x0(%rax,%r12,1),%rsi
1559d(4): mov %rax,0x8(%r13)
155a1(4): mov %rbp,0x8(%rax)
155a5(3): mov %rbx,%rdx
155a8(4): mov %rsi,0x20(%r13)
155ac(3): mov %rsi,(%rax)
155af(4): mov 0x30(%r13),%rax
155b3(4): mov 0x10(%r13),%rsi
155b7(5): lea 0x10(%r14,%rax,1),%r12
155bc(3): not %rax
155bf(3): and %rax,%r12
155c2(3): mov %r12,%rdi
155c5(5): call 0xfffee02b(%rip)
155ca(5): test $0x2,0x50(%r13)
155cf(2): jnz 0x17(%rip)
155d1(4): mov 0x30(%r13),%rax
155d5(5): lea 0x10(%rbp,%rax,1),%rdx
155da(3): not %rax
155dd(3): and %rdx,%rax
155e0(4): cmp %rax,0x10(%r13)
155e4(2): jz 0x1c(%rip)
155e6(5): and $0xfd,0x50(%r13)
155eb(3): add %r12,%rbx
155ee(4): mov %r12,0x10(%r13)
155f2(4): mov %rbx,0x18(%r13)
155f6(1): pop %rbx
155f7(1): pop %rbp
155f8(2): pop %r12
155fa(2): pop %r13
155fc(2): pop %r14
155fe(1): ret near (%rsp)
155ff(1): nop 
15600(4): mov 0x8(%rbp),%rax
15604(3): mov %rbp,%rsi
15607(3): mov %r13,%rdi
1560a(4): mov %rax,0x8(%r14)
1560e(5): call 0xfffffe32(%rip)
15613(2): jmp 0xffffffd3(%rip)
15615(6): call 0x20ac45(%rip)
1561b(5): nop 0x0(%rax,%rax,1)
15620(4): mov 0x8(%rdi),%rax
15624(3): test %rax,%rax
15627(2): jz 0x2f(%rip)
15629(7): nop 0x0(%rax)
15630(3): cmp %rax,%rsi
15633(2): jbe 0x7(%rip)
15635(3): cmp %rsi,(%rax)
15638(2): jnb 0x18(%rip)
1563a(4): mov 0x8(%rax),%rax
1563e(3): test %rax,%rax
15641(2): jnz 0xffffffef(%rip)
15643(2): xor %eax,%eax
15645(1): ret near (%rsp)
15646(a): nop 0x0(%rax,%rax,1)
15650(5): mov $0x1,%eax
15655(1): ret near (%rsp)
15656(2): REP ret near (%rsp)

"_obstack_allocated_p" :
15620(4): mov 0x8(%rdi),%rax
15624(3): test %rax,%rax
15627(2): jz 0x2f(%rip)
15629(7): nop 0x0(%rax)
15630(3): cmp %rax,%rsi
15633(2): jbe 0x7(%rip)
15635(3): cmp %rsi,(%rax)
15638(2): jnb 0x18(%rip)
1563a(4): mov 0x8(%rax),%rax
1563e(3): test %rax,%rax
15641(2): jnz 0xffffffef(%rip)
15643(2): xor %eax,%eax
15645(1): ret near (%rsp)
15646(a): nop 0x0(%rax,%rax,1)
15650(5): mov $0x1,%eax
15655(1): ret near (%rsp)
15656(2): REP ret near (%rsp)

"_obstack_free" :
15660(2): push %r12
15662(1): push %rbp
15663(3): mov %rsi,%rbp
15666(1): push %rbx
15667(4): mov 0x8(%rdi),%rsi
1566b(3): mov %rdi,%rbx
1566e(3): test %rsi,%rsi
15671(2): jz 0x2c(%rip)
15673(5): nop 0x0(%rax,%rax,1)
15678(3): cmp %rbp,%rsi
1567b(2): jnb 0xa(%rip)
1567d(3): mov (%rsi),%rax
15680(3): cmp %rbp,%rax
15683(2): jnb 0x2d(%rip)
15685(4): mov 0x8(%rsi),%r12
15689(3): mov %rbx,%rdi
1568c(5): call 0xfffffdb4(%rip)
15691(4): or $0x2,0x50(%rbx)
15695(3): test %r12,%r12
15698(3): mov %r12,%rsi
1569b(2): jnz 0xffffffdd(%rip)
1569d(3): test %rbp,%rbp
156a0(2): jnz 0x25(%rip)
156a2(1): pop %rbx
156a3(1): pop %rbp
156a4(2): pop %r12
156a6(1): ret near (%rsp)
156a7(9): nop 0x0(%rax,%rax,1)
156b0(4): mov %rbp,0x18(%rbx)
156b4(4): mov %rbp,0x10(%rbx)
156b8(4): mov %rax,0x20(%rbx)
156bc(4): mov %rsi,0x8(%rbx)
156c0(1): pop %rbx
156c1(1): pop %rbp
156c2(2): pop %r12
156c4(1): ret near (%rsp)
156c5(5): call 0xfffedbcb(%rip)

"_obstack_memory_used" :
156d0(4): mov 0x8(%rdi),%rdx
156d4(2): xor %eax,%eax
156d6(3): test %rdx,%rdx
156d9(2): jz 0x1f(%rip)
156db(5): nop 0x0(%rax,%rax,1)
156e0(3): mov (%rdx),%rcx
156e3(3): sub %rdx,%rcx
156e6(4): mov 0x8(%rdx),%rdx
156ea(3): add %rcx,%rax
156ed(3): test %rdx,%rdx
156f0(2): jnz 0xfffffff0(%rip)
156f2(2): REP ret near (%rsp)
156f4(4): nop 0x0(%rax)
156f8(2): REP ret near (%rsp)

"setenv_TZ" :
15700(3): test %rdi,%rdi
15703(2): jz 0x1d(%rip)
15705(3): mov %rdi,%rsi
15708(7): lea 0x24ad(%rip),%rdi
1570f(5): mov $0x1,%edx
15714(5): jmp 0xfffedc6c(%rip)
15719(7): nop 0x0(%rax)
15720(7): lea 0x2495(%rip),%rdi
15727(5): jmp 0xfffee059(%rip)

"tzfree.part.0" :
15730(3): test %rdi,%rdi
15733(2): jz 0x25(%rip)
15735(1): push %rbx
15736(a): nop 0x0(%rax,%rax,1)
15740(3): mov (%rdi),%rbx
15743(5): call 0xfffee13d(%rip)
15748(3): test %rbx,%rbx
1574b(3): mov %rbx,%rdi
1574e(2): jnz 0xfffffff2(%rip)
15750(1): pop %rbx
15751(1): ret near (%rsp)
15752(6): nop 0x0(%rax,%rax,1)
15758(2): REP ret near (%rsp)

"revert_tz.part.1" :
15760(2): push %r13
15762(2): push %r12
15764(1): push %rbp
15765(1): push %rbx
15766(3): mov %rdi,%rbp
15769(4): sub $0x8,%rsp
1576d(5): call 0xfffedb33(%rip)
15772(4): cmp $0x0,0x8(%rbp)
15776(3): mov %rax,%rbx
15779(3): mov (%rax),%r12d
1577c(4): lea 0x9(%rbp),%rdi
15780(2): jnz 0x4(%rip)
15782(2): xor %edi,%edi
15784(5): call 0xffffff7c(%rip)
15789(2): test %eax,%eax
1578b(2): jz 0x25(%rip)
1578d(3): mov (%rbx),%r12d
15790(3): xor %r13d,%r13d
15793(3): mov %rbp,%rdi
15796(5): call 0xffffff9a(%rip)
1579b(3): mov %r12d,(%rbx)
1579e(4): add $0x8,%rsp
157a2(3): mov %r13d,%eax
157a5(1): pop %rbx
157a6(1): pop %rbp
157a7(2): pop %r12
157a9(2): pop %r13
157ab(1): ret near (%rsp)
157ac(4): nop 0x0(%rax)
157b0(5): call 0xfffede60(%rip)
157b5(6): mov $0x1,%r13d
157bb(2): jmp 0xffffffd8(%rip)

"tzalloc" :
157c0(3): test %rdi,%rdi
157c3(2): push %r12
157c5(1): push %rbp
157c6(1): push %rbx
157c7(2): jz 0x61(%rip)
157c9(3): mov %rdi,%r12
157cc(5): call 0xfffedc34(%rip)
157d1(4): lea 0x1(%rax),%rbp
157d5(5): mov $0x76,%edi
157da(4): cmp $0x76,%rbp
157de(4): cmovnb %rbp,%rdi
157e2(4): add $0x11,%rdi
157e6(4): and $0xfffffff8,%rdi
157ea(5): call 0xfffee09e(%rip)
157ef(3): test %rax,%rax
157f2(3): mov %rax,%rbx
157f5(2): jz 0x26(%rip)
157f7(7): mov $0x0,(%rax)
157fe(4): lea 0x9(%rbx),%rdi
15802(5): mov $0x1,%eax
15807(4): mov %ax,0x8(%rbx)
1580b(3): mov %rbp,%rdx
1580e(3): mov %r12,%rsi
15811(5): call 0xfffedddf(%rip)
15816(5): mov $0x0,0x9(%rbx,%rbp,1)
1581b(3): mov %rbx,%rax
1581e(1): pop %rbx
1581f(1): pop %rbp
15820(2): pop %r12
15822(1): ret near (%rsp)
15823(5): nop 0x0(%rax,%rax,1)
15828(5): mov $0x80,%edi
1582d(5): call 0xfffee05b(%rip)
15832(3): test %rax,%rax
15835(3): mov %rax,%rbx
15838(2): jz 0xffffffe3(%rip)
1583a(2): xor %edx,%edx
1583c(7): mov $0x0,(%rbx)
15843(3): mov %rbx,%rax
15846(4): mov %dx,0x8(%rbx)
1584a(1): pop %rbx
1584b(1): pop %rbp
1584c(2): pop %r12
1584e(1): ret near (%rsp)

"save_abbr" :
15850(2): push %r15
15852(2): push %r14
15854(5): mov $0x1,%eax
15859(2): push %r13
1585b(2): push %r12
1585d(1): push %rbp
1585e(1): push %rbx
1585f(4): sub $0x8,%rsp
15863(4): mov 0x30(%rsi),%rbp
15867(3): test %rbp,%rbp
1586a(6): jz 0x96(%rip)
15870(3): cmp %rbp,%rsi
15873(3): mov %rdi,%r12
15876(3): mov %rsi,%r13
15879(2): jnbe 0xb(%rip)
1587b(4): lea 0x38(%rsi),%rdx
1587f(3): cmp %rdx,%rbp
15882(2): jb 0x7e(%rip)
15884(4): cmp $0x0,0x0(%rbp)
15888(5): lea 0x9(%r12),%rbx
1588d(2): jz 0x63(%rip)
1588f(1): nop 
15890(3): mov %rbp,%rsi
15893(3): mov %rbx,%rdi
15896(5): call 0xfffedcfa(%rip)
1589b(2): test %eax,%eax
1589d(2): jz 0x5a(%rip)
1589f(3): cmp $0x0,(%rbx)
158a2(2): jnz 0x14(%rip)
158a4(5): lea 0x9(%r12),%r14
158a9(3): cmp %rbx,%r14
158ac(2): jnz 0x64(%rip)
158ae(6): cmp $0x0,0x8(%r12)
158b4(2): jz 0x5c(%rip)
158b6(3): mov %rbx,%rdi
158b9(5): call 0xfffedb47(%rip)
158be(5): lea 0x1(%rbx,%rax,1),%rbx
158c3(3): cmp $0x0,(%rbx)
158c6(2): jnz 0xffffffca(%rip)
158c8(4): mov (%r12),%rax
158cc(3): test %rax,%rax
158cf(2): jz 0xffffffc1(%rip)
158d1(4): lea 0x9(%rax),%rbx
158d5(3): mov %rbp,%rsi
158d8(3): mov %rax,%r12
158db(3): mov %rbx,%rdi
158de(5): call 0xfffedcb2(%rip)
158e3(2): test %eax,%eax
158e5(2): jnz 0xffffffba(%rip)
158e7(2): jmp 0x10(%rip)
158e9(7): nop 0x0(%rax)
158f0(7): lea 0x1fbc(%rip),%rbx
158f7(4): mov %rbx,0x30(%r13)
158fb(5): mov $0x1,%eax
15900(4): add $0x8,%rsp
15904(1): pop %rbx
15905(1): pop %rbp
15906(2): pop %r12
15908(2): pop %r13
1590a(2): pop %r14
1590c(2): pop %r15
1590e(1): ret near (%rsp)
1590f(1): nop 
15910(3): mov %rbp,%rdi
15913(5): call 0xfffedaed(%rip)
15918(4): lea 0x1(%rax),%rdx
1591c(3): mov %rax,%r15
1591f(3): mov %rbx,%rax
15922(3): sub %r14,%rax
15925(3): mov %rax,%rcx
15928(3): not %rcx
1592b(3): cmp %rdx,%rcx
1592e(2): jb 0x32(%rip)
15930(3): add %rdx,%rax
15933(4): cmp $0x76,%rax
15937(2): jbe 0x39(%rip)
15939(3): mov %rbp,%rdi
1593c(5): call 0xfffffe84(%rip)
15941(3): mov %rax,%rbx
15944(4): mov %rax,(%r12)
15948(2): xor %eax,%eax
1594a(3): test %rbx,%rbx
1594d(2): jz 0xffffffb3(%rip)
1594f(4): mov $0x0,0x8(%rbx)
15953(4): add $0x9,%rbx
15957(2): jmp 0xffffffa0(%rip)
15959(7): nop 0x0(%rax)
15960(5): call 0xfffed940(%rip)
15965(6): mov $0xc,(%rax)
1596b(2): xor %eax,%eax
1596d(2): jmp 0xffffff93(%rip)
1596f(1): nop 
15970(3): mov %rbp,%rsi
15973(3): mov %rbx,%rdi
15976(5): call 0xfffedc7a(%rip)
1597b(6): mov $0x0,0x1(%rbx,%r15,1)
15981(5): jmp 0xffffff76(%rip)

"set_tz" :
15990(2): push %r12
15992(1): push %rbp
15993(3): mov %rdi,%rbp
15996(1): push %rbx
15997(7): lea 0x221e(%rip),%rdi
1599e(4): sub $0x10,%rsp
159a2(5): call 0xfffed8ae(%rip)
159a7(3): test %rax,%rax
159aa(3): mov %rax,%rbx
159ad(6): jz 0x9b(%rip)
159b3(4): cmp $0x0,0x8(%rbp)
159b7(2): jnz 0x69(%rip)
159b9(3): mov %rbx,%rdi
159bc(5): call 0xfffffe04(%rip)
159c1(3): test %rax,%rax
159c4(3): mov %rax,%r12
159c7(2): jz 0x46(%rip)
159c9(2): xor %edi,%edi
159cb(4): cmp $0x0,0x8(%rbp)
159cf(2): jz 0x6(%rip)
159d1(4): lea 0x9(%rbp),%rdi
159d5(5): call 0xfffffd2b(%rip)
159da(2): test %eax,%eax
159dc(6): jz 0x8c(%rip)
159e2(5): call 0xfffed8be(%rip)
159e7(4): cmp $0x1,%r12
159eb(2): mov (%rax),%ebx
159ed(2): jz 0x1b(%rip)
159ef(3): mov %r12,%rdi
159f2(5): mov %rax,0x8(%rsp)
159f7(5): call 0xfffffd39(%rip)
159fc(5): mov 0x8(%rsp),%rax
15a01(7): nop 0x0(%rax)
15a08(2): mov %ebx,(%rax)
15a0a(3): xor %r12d,%r12d
15a0d(4): add $0x10,%rsp
15a11(3): mov %r12,%rax
15a14(1): pop %rbx
15a15(1): pop %rbp
15a16(2): pop %r12
15a18(1): ret near (%rsp)
15a19(7): nop 0x0(%rax)
15a20(4): lea 0x9(%rbp),%rdi
15a24(3): mov %rax,%rsi
15a27(6): mov $0x1,%r12d
15a2d(5): call 0xfffedb63(%rip)
15a32(2): test %eax,%eax
15a34(2): jnz 0xffffff85(%rip)
15a36(4): add $0x10,%rsp
15a3a(3): mov %r12,%rax
15a3d(1): pop %rbx
15a3e(1): pop %rbp
15a3f(2): pop %r12
15a41(1): ret near (%rsp)
15a42(6): nop 0x0(%rax,%rax,1)
15a48(4): cmp $0x0,0x8(%rbp)
15a4c(6): mov $0x1,%r12d
15a52(6): jnz 0xffffff67(%rip)
15a58(4): add $0x10,%rsp
15a5c(3): mov %r12,%rax
15a5f(1): pop %rbx
15a60(1): pop %rbp
15a61(2): pop %r12
15a63(1): ret near (%rsp)
15a64(4): nop 0x0(%rax)
15a68(5): call 0xfffedba8(%rip)
15a6d(2): jmp 0xffffffa0(%rip)

"tzfree" :
15a70(4): cmp $0x1,%rdi
15a74(2): jz 0x7(%rip)
15a76(5): jmp 0xfffffcba(%rip)
15a7b(1): ret near (%rsp)

"localtime_rz" :
15a80(2): push %r13
15a82(2): push %r12
15a84(1): push %rbp
15a85(1): push %rbx
15a86(3): mov %rsi,%rbp
15a89(4): sub $0x8,%rsp
15a8d(3): test %rdi,%rdi
15a90(2): jz 0x70(%rip)
15a92(3): mov %rdx,%r13
15a95(3): mov %rdi,%rbx
15a98(5): call 0xfffffef8(%rip)
15a9d(3): test %rax,%rax
15aa0(3): mov %rax,%r12
15aa3(2): jz 0x4b(%rip)
15aa5(3): mov %r13,%rsi
15aa8(3): mov %rbp,%rdi
15aab(5): call 0xfffed815(%rip)
15ab0(3): test %rax,%rax
15ab3(2): jz 0x2d(%rip)
15ab5(3): mov %r13,%rsi
15ab8(3): mov %rbx,%rdi
15abb(5): call 0xfffffd95(%rip)
15ac0(2): test %al,%al
15ac2(2): jz 0x1e(%rip)
15ac4(4): cmp $0x1,%r12
15ac8(2): jnz 0x4d(%rip)
15aca(4): add $0x8,%rsp
15ace(3): mov %r13,%rax
15ad1(1): pop %rbx
15ad2(1): pop %rbp
15ad3(2): pop %r12
15ad5(2): pop %r13
15ad7(1): ret near (%rsp)
15ad8(8): nop 0x0(%rax,%rax,1)
15ae0(4): cmp $0x1,%r12
15ae4(2): jz 0xa(%rip)
15ae6(3): mov %r12,%rdi
15ae9(5): call 0xfffffc77(%rip)
15aee(4): add $0x8,%rsp
15af2(2): xor %eax,%eax
15af4(1): pop %rbx
15af5(1): pop %rbp
15af6(2): pop %r12
15af8(2): pop %r13
15afa(1): ret near (%rsp)
15afb(5): nop 0x0(%rax,%rax,1)
15b00(4): add $0x8,%rsp
15b04(3): mov %rbp,%rdi
15b07(3): mov %rdx,%rsi
15b0a(1): pop %rbx
15b0b(1): pop %rbp
15b0c(2): pop %r12
15b0e(2): pop %r13
15b10(5): jmp 0xfffed9a0(%rip)
15b15(3): mov %r12,%rdi
15b18(5): call 0xfffffc48(%rip)
15b1d(2): test %al,%al
15b1f(2): jnz 0xffffffab(%rip)
15b21(2): jmp 0xffffffcd(%rip)

"mktime_z" :
15b30(2): push %r12
15b32(1): push %rbp
15b33(1): push %rbx
15b34(3): mov %rsi,%rbx
15b37(4): sub $0x50,%rsp
15b3b(9): mov $0x28,%rax
15b44(5): mov %rax,0x48(%rsp)
15b49(2): xor %eax,%eax
15b4b(3): test %rdi,%rdi
15b4e(6): jz 0x102(%rip)
15b54(3): mov %rdi,%rbp
15b57(5): call 0xfffffe39(%rip)
15b5c(3): test %rax,%rax
15b5f(3): mov %rax,%r12
15b62(6): jz 0xfe(%rip)
15b68(3): mov %rbx,%rdi
15b6b(5): call 0xfffedb45(%rip)
15b70(4): cmp $0xffffffff,%rax
15b74(5): mov %rax,0x8(%rsp)
15b79(2): jz 0x57(%rip)
15b7b(3): mov %rbx,%rsi
15b7e(3): mov %rbp,%rdi
15b81(5): call 0xfffffccf(%rip)
15b86(2): test %al,%al
15b88(2): jnz 0xb(%rip)
15b8a(9): mov $0xffffffff,0x8(%rsp)
15b93(4): cmp $0x1,%r12
15b97(2): jz 0x12(%rip)
15b99(3): mov %r12,%rdi
15b9c(5): call 0xfffffbc4(%rip)
15ba1(2): test %al,%al
15ba3(6): jz 0xbd(%rip)
15ba9(5): mov 0x8(%rsp),%rax
15bae(5): mov 0x48(%rsp),%rcx
15bb3(9): xor $0x28,%rcx
15bbc(6): jnz 0xb0(%rip)
15bc2(4): add $0x50,%rsp
15bc6(1): pop %rbx
15bc7(1): pop %rbp
15bc8(2): pop %r12
15bca(1): ret near (%rsp)
15bcb(5): nop 0x0(%rax,%rax,1)
15bd0(5): lea 0x10(%rsp),%rsi
15bd5(5): lea 0x8(%rsp),%rdi
15bda(5): call 0xfffed6e6(%rip)
15bdf(3): test %rax,%rax
15be2(2): jz 0xffffffb1(%rip)
15be4(2): mov (%rbx),%eax
15be6(3): mov 0x4(%rbx),%edx
15be9(4): xor 0x10(%rsp),%eax
15bed(4): xor 0x14(%rsp),%edx
15bf1(4): mov 0x30(%rsp),%ecx
15bf5(2): or %edx,%eax
15bf7(3): mov 0x8(%rbx),%edx
15bfa(4): xor 0x18(%rsp),%edx
15bfe(2): or %edx,%eax
15c00(3): mov 0xc(%rbx),%edx
15c03(4): xor 0x1c(%rsp),%edx
15c07(2): or %edx,%eax
15c09(3): mov 0x10(%rbx),%edx
15c0c(4): xor 0x20(%rsp),%edx
15c10(2): or %edx,%eax
15c12(3): mov 0x14(%rbx),%edx
15c15(4): xor 0x24(%rsp),%edx
15c19(2): or %edx,%eax
15c1b(3): mov 0x20(%rbx),%edx
15c1e(2): test %edx,%edx
15c20(4): setz %dil
15c24(2): test %ecx,%ecx
15c26(4): setz %sil
15c2a(3): cmp %sil,%dil
15c2d(2): jz 0xe(%rip)
15c2f(2): test %edx,%edx
15c31(2): js 0xa(%rip)
15c33(2): test %ecx,%ecx
15c35(6): jns 0xffffff5e(%rip)
15c3b(2): test %eax,%eax
15c3d(6): jz 0xffffff3e(%rip)
15c43(5): jmp 0xffffff50(%rip)
15c48(8): nop 0x0(%rax,%rax,1)
15c50(3): mov %rsi,%rdi
15c53(5): call 0xfffedacd(%rip)
15c58(5): jmp 0xffffff56(%rip)
15c5d(3): nop (%rax)
15c60(7): mov $0xffffffff,%rax
15c67(5): jmp 0xffffff47(%rip)
15c6c(5): call 0xfffed7b4(%rip)

"close_stream" :
15c80(2): push %r12
15c82(1): push %rbp
15c83(3): mov %rdi,%rbp
15c86(1): push %rbx
15c87(5): call 0xfffed669(%rip)
15c8c(3): mov 0x0(%rbp),%ebx
15c8f(3): mov %rbp,%rdi
15c92(3): mov %rax,%r12
15c95(5): call 0x10b(%rip)
15c9a(3): and $0x20,%ebx
15c9d(2): test %ebx,%ebx
15c9f(2): jnz 0x19(%rip)
15ca1(2): test %eax,%eax
15ca3(2): jz 0xc(%rip)
15ca5(3): test %r12,%r12
15ca8(5): mov $0xffffffff,%eax
15cad(2): jz 0x3b(%rip)
15caf(1): pop %rbx
15cb0(1): pop %rbp
15cb1(2): pop %r12
15cb3(1): ret near (%rsp)
15cb4(4): nop 0x0(%rax)
15cb8(2): test %eax,%eax
15cba(2): jnz 0x1e(%rip)
15cbc(5): call 0xfffed5e4(%rip)
15cc1(6): mov $0x0,(%rax)
15cc7(5): mov $0xffffffff,%eax
15ccc(1): pop %rbx
15ccd(1): pop %rbp
15cce(2): pop %r12
15cd0(1): ret near (%rsp)
15cd1(7): nop 0x0(%rax)
15cd8(1): pop %rbx
15cd9(5): mov $0xffffffff,%eax
15cde(1): pop %rbp
15cdf(2): pop %r12
15ce1(1): ret near (%rsp)
15ce2(6): nop 0x0(%rax,%rax,1)
15ce8(5): call 0xfffed5b8(%rip)
15ced(3): cmp $0x9,(%rax)
15cf0(1): pop %rbx
15cf1(1): pop %rbp
15cf2(2): pop %r12
15cf4(3): setnz %al
15cf7(3): movzx %al,%eax
15cfa(2): neg %eax
15cfc(1): ret near (%rsp)

"dir_name" :
15d00(4): sub $0x8,%rsp
15d04(5): call 0xffff6fac(%rip)
15d09(3): test %rax,%rax
15d0c(2): jz 0x7(%rip)
15d0e(4): add $0x8,%rsp
15d12(1): ret near (%rsp)
15d13(5): call 0xffffeacd(%rip)

"hash_pjw" :
15d20(4): movsx (%rdi),%rcx
15d24(2): test %cl,%cl
15d26(2): jz 0x2a(%rip)
15d28(2): xor %eax,%eax
15d2a(6): nop 0x0(%rax,%rax,1)
15d30(4): rol $0x9,%rax
15d34(4): add $0x1,%rdi
15d38(3): add %rcx,%rax
15d3b(4): movsx (%rdi),%rcx
15d3f(2): test %cl,%cl
15d41(2): jnz 0xffffffef(%rip)
15d43(2): xor %edx,%edx
15d45(3): div %rsi,%rax
15d48(3): mov %rdx,%rax
15d4b(1): ret near (%rsp)
15d4c(4): nop 0x0(%rax)
15d50(2): xor %edx,%edx
15d52(3): mov %rdx,%rax
15d55(1): ret near (%rsp)

"locale_charset" :
15d60(4): sub $0x8,%rsp
15d64(5): mov $0xe,%edi
15d69(5): call 0xfffed917(%rip)
15d6e(3): test %rax,%rax
15d71(2): jz 0x1f(%rip)
15d73(3): cmp $0x0,(%rax)
15d76(7): lea 0x5056(%rip),%rdx
15d7d(4): cmove %rdx,%rax
15d81(4): add $0x8,%rsp
15d85(1): ret near (%rsp)
15d86(a): nop 0x0(%rax,%rax,1)
15d90(7): lea 0x503c(%rip),%rax
15d97(4): add $0x8,%rsp
15d9b(1): ret near (%rsp)

"rpl_fclose" :
15da0(2): push %r12
15da2(1): push %rbp
15da3(1): push %rbx
15da4(3): mov %rdi,%rbx
15da7(5): call 0xfffed879(%rip)
15dac(2): test %eax,%eax
15dae(3): mov %rbx,%rdi
15db1(2): js 0x56(%rip)
15db3(5): call 0xfffed90d(%rip)
15db8(2): test %eax,%eax
15dba(2): jnz 0x2e(%rip)
15dbc(3): mov %rbx,%rdi
15dbf(5): call 0x61(%rip)
15dc4(2): test %eax,%eax
15dc6(2): jz 0x3e(%rip)
15dc8(5): call 0xfffed4d8(%rip)
15dcd(3): mov (%rax),%r12d
15dd0(3): mov %rbx,%rdi
15dd3(3): mov %rax,%rbp
15dd6(5): call 0xfffed5ca(%rip)
15ddb(3): test %r12d,%r12d
15dde(2): jnz 0x32(%rip)
15de0(1): pop %rbx
15de1(1): pop %rbp
15de2(2): pop %r12
15de4(1): ret near (%rsp)
15de5(3): nop (%rax)
15de8(3): mov %rbx,%rdi
15deb(5): call 0xfffed835(%rip)
15df0(2): xor %esi,%esi
15df2(5): mov $0x1,%edx
15df7(2): mov %eax,%edi
15df9(5): call 0xfffed6c7(%rip)
15dfe(4): cmp $0xffffffff,%rax
15e02(2): jnz 0xffffffba(%rip)
15e04(3): mov %rbx,%rdi
15e07(1): pop %rbx
15e08(1): pop %rbp
15e09(2): pop %r12
15e0b(5): jmp 0xfffed595(%rip)
15e10(4): mov %r12d,0x0(%rbp)
15e14(5): mov $0xffffffff,%eax
15e19(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
15e20(3): test %rdi,%rdi
15e23(1): push %rbx
15e24(3): mov %rdi,%rbx
15e27(2): jz 0x13(%rip)
15e29(5): call 0xfffed897(%rip)
15e2e(2): test %eax,%eax
15e30(2): jz 0xa(%rip)
15e32(6): test $0x100,(%rbx)
15e38(2): jnz 0x10(%rip)
15e3a(3): mov %rbx,%rdi
15e3d(1): pop %rbx
15e3e(5): jmp 0xfffed832(%rip)
15e43(5): nop 0x0(%rax,%rax,1)
15e48(3): mov %rbx,%rdi
15e4b(5): mov $0x1,%edx
15e50(2): xor %esi,%esi
15e52(5): call 0xe(%rip)
15e57(3): mov %rbx,%rdi
15e5a(1): pop %rbx
15e5b(5): jmp 0xfffed815(%rip)

"rpl_fseeko" :
15e60(4): mov 0x8(%rdi),%rax
15e64(4): cmp %rax,0x10(%rdi)
15e68(2): jz 0x8(%rip)
15e6a(5): jmp 0xfffed906(%rip)
15e6f(1): nop 
15e70(4): mov 0x20(%rdi),%rax
15e74(4): cmp %rax,0x28(%rdi)
15e78(2): jnz 0xfffffff2(%rip)
15e7a(5): cmp $0x0,0x48(%rdi)
15e7f(2): jnz 0xffffffeb(%rip)
15e81(2): push %r12
15e83(1): push %rbp
15e84(3): mov %edx,%r12d
15e87(1): push %rbx
15e88(3): mov %rsi,%rbp
15e8b(3): mov %rdi,%rbx
15e8e(5): call 0xfffed792(%rip)
15e93(3): mov %r12d,%edx
15e96(3): mov %rbp,%rsi
15e99(2): mov %eax,%edi
15e9b(5): call 0xfffed625(%rip)
15ea0(4): cmp $0xffffffff,%rax
15ea4(2): jz 0xe(%rip)
15ea6(3): and $0xef,(%rbx)
15ea9(7): mov %rax,0x90(%rbx)
15eb0(2): xor %eax,%eax
15eb2(1): pop %rbx
15eb3(1): pop %rbp
15eb4(2): pop %r12
15eb6(1): ret near (%rsp)

"__libc_csu_init" :
15ec0(2): push %r15
15ec2(2): push %r14
15ec4(3): mov %rdx,%r15
15ec7(2): push %r13
15ec9(2): push %r12
15ecb(7): lea 0x20917e(%rip),%r12
15ed2(1): push %rbp
15ed3(7): lea 0x20917e(%rip),%rbp
15eda(1): push %rbx
15edb(3): mov %edi,%r13d
15ede(3): mov %rsi,%r14
15ee1(3): sub %r12,%rbp
15ee4(4): sub $0x8,%rsp
15ee8(4): sar $0x3,%rbp
15eec(5): call 0xfffed324(%rip)
15ef1(3): test %rbp,%rbp
15ef4(2): jz 0x22(%rip)
15ef6(2): xor %ebx,%ebx
15ef8(8): nop 0x0(%rax,%rax,1)
15f00(3): mov %r15,%rdx
15f03(3): mov %r14,%rsi
15f06(3): mov %r13d,%edi
15f09(4): call 0x0(%r12,%rbx,8)
15f0d(4): add $0x1,%rbx
15f11(3): cmp %rbx,%rbp
15f14(2): jnz 0xffffffec(%rip)
15f16(4): add $0x8,%rsp
15f1a(1): pop %rbx
15f1b(1): pop %rbp
15f1c(2): pop %r12
15f1e(2): pop %r13
15f20(2): pop %r14
15f22(2): pop %r15
15f24(1): ret near (%rsp)

"atexit" :
15f40(7): mov 0x20a0c1(%rip),%rdx
15f47(2): xor %esi,%esi
15f49(5): jmp 0xfffed857(%rip)

"_fini" :
15f50(4): sub $0x8,%rsp
15f54(4): add $0x8,%rsp
15f58(1): ret near (%rsp)

