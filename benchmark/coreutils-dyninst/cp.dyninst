
"getenv@plt" :
2740(6): jmp 0x21751a(%rip)
2746(5): push $0x0

"utimensat@plt" :
2750(6): jmp 0x217512(%rip)
2756(5): push $0x1

"abort@plt" :
2760(6): jmp 0x21750a(%rip)
2766(5): push $0x2

"__errno_location@plt" :
2770(6): jmp 0x217502(%rip)
2776(5): push $0x3

"unlink@plt" :
2780(6): jmp 0x2174fa(%rip)
2786(5): push $0x4

"strncmp@plt" :
2790(6): jmp 0x2174f2(%rip)
2796(5): push $0x5

"_exit@plt" :
27a0(6): jmp 0x2174ea(%rip)
27a6(5): push $0x6

"strcpy@plt" :
27b0(6): jmp 0x2174e2(%rip)
27b6(5): push $0x7

"__fpending@plt" :
27c0(6): jmp 0x2174da(%rip)
27c6(5): push $0x8

"__read_chk@plt" :
27d0(6): jmp 0x2174d2(%rip)
27d6(5): push $0x9

"mkdir@plt" :
27e0(6): jmp 0x2174ca(%rip)
27e6(5): push $0xa

"unlinkat@plt" :
27f0(6): jmp 0x2174c2(%rip)
27f6(5): push $0xb

"qsort@plt" :
2800(6): jmp 0x2174ba(%rip)
2806(5): push $0xc

"readlink@plt" :
2810(6): jmp 0x2174b2(%rip)
2816(5): push $0xd

"fcntl@plt" :
2820(6): jmp 0x2174aa(%rip)
2826(5): push $0xe

"clock_gettime@plt" :
2830(6): jmp 0x2174a2(%rip)
2836(5): push $0xf

"write@plt" :
2840(6): jmp 0x21749a(%rip)
2846(5): push $0x10

"getpid@plt" :
2850(6): jmp 0x217492(%rip)
2856(5): push $0x11

"fread_unlocked@plt" :
2860(6): jmp 0x21748a(%rip)
2866(5): push $0x12

"textdomain@plt" :
2870(6): jmp 0x217482(%rip)
2876(5): push $0x13

"pathconf@plt" :
2880(6): jmp 0x21747a(%rip)
2886(5): push $0x14

"fclose@plt" :
2890(6): jmp 0x217472(%rip)
2896(5): push $0x15

"opendir@plt" :
28a0(6): jmp 0x21746a(%rip)
28a6(5): push $0x16

"bindtextdomain@plt" :
28b0(6): jmp 0x217462(%rip)
28b6(5): push $0x17

"stpcpy@plt" :
28c0(6): jmp 0x21745a(%rip)
28c6(5): push $0x18

"rmdir@plt" :
28d0(6): jmp 0x217452(%rip)
28d6(5): push $0x19

"dcgettext@plt" :
28e0(6): jmp 0x21744a(%rip)
28e6(5): push $0x1a

"__ctype_get_mb_cur_max@plt" :
28f0(6): jmp 0x217442(%rip)
28f6(5): push $0x1b

"strlen@plt" :
2900(6): jmp 0x21743a(%rip)
2906(5): push $0x1c

"__lxstat@plt" :
2910(6): jmp 0x217432(%rip)
2916(5): push $0x1d

"openat@plt" :
2920(6): jmp 0x21742a(%rip)
2926(5): push $0x1e

"__stack_chk_fail@plt" :
2930(6): jmp 0x217422(%rip)
2936(5): push $0x1f

"getuid@plt" :
2940(6): jmp 0x21741a(%rip)
2946(5): push $0x20

"getopt_long@plt" :
2950(6): jmp 0x217412(%rip)
2956(5): push $0x21

"mbrtowc@plt" :
2960(6): jmp 0x21740a(%rip)
2966(5): push $0x22

"strchr@plt" :
2970(6): jmp 0x217402(%rip)
2976(5): push $0x23

"__fxstatat@plt" :
2980(6): jmp 0x2173fa(%rip)
2986(5): push $0x24

"__overflow@plt" :
2990(6): jmp 0x2173f2(%rip)
2996(5): push $0x25

"strrchr@plt" :
29a0(6): jmp 0x2173ea(%rip)
29a6(5): push $0x26

"ftruncate@plt" :
29b0(6): jmp 0x2173e2(%rip)
29b6(5): push $0x27

"lseek@plt" :
29c0(6): jmp 0x2173da(%rip)
29c6(5): push $0x28

"gettimeofday@plt" :
29d0(6): jmp 0x2173d2(%rip)
29d6(5): push $0x29

"__assert_fail@plt" :
29e0(6): jmp 0x2173ca(%rip)
29e6(5): push $0x2a

"memset@plt" :
29f0(6): jmp 0x2173c2(%rip)
29f6(5): push $0x2b

"geteuid@plt" :
2a00(6): jmp 0x2173ba(%rip)
2a06(5): push $0x2c

"ioctl@plt" :
2a10(6): jmp 0x2173b2(%rip)
2a16(5): push $0x2d

"canonicalize_file_name@plt" :
2a20(6): jmp 0x2173aa(%rip)
2a26(5): push $0x2e

"close@plt" :
2a30(6): jmp 0x2173a2(%rip)
2a36(5): push $0x2f

"rewinddir@plt" :
2a40(6): jmp 0x21739a(%rip)
2a46(5): push $0x30

"strspn@plt" :
2a50(6): jmp 0x217392(%rip)
2a56(5): push $0x31

"closedir@plt" :
2a60(6): jmp 0x21738a(%rip)
2a66(5): push $0x32

"posix_fadvise@plt" :
2a70(6): jmp 0x217382(%rip)
2a76(5): push $0x33

"read@plt" :
2a80(6): jmp 0x21737a(%rip)
2a86(5): push $0x34

"memcmp@plt" :
2a90(6): jmp 0x217372(%rip)
2a96(5): push $0x35

"fallocate@plt" :
2aa0(6): jmp 0x21736a(%rip)
2aa6(5): push $0x36

"fputs_unlocked@plt" :
2ab0(6): jmp 0x217362(%rip)
2ab6(5): push $0x37

"utimes@plt" :
2ac0(6): jmp 0x21735a(%rip)
2ac6(5): push $0x38

"calloc@plt" :
2ad0(6): jmp 0x217352(%rip)
2ad6(5): push $0x39

"__getdelim@plt" :
2ae0(6): jmp 0x21734a(%rip)
2ae6(5): push $0x3a

"strcmp@plt" :
2af0(6): jmp 0x217342(%rip)
2af6(5): push $0x3b

"dirfd@plt" :
2b00(6): jmp 0x21733a(%rip)
2b06(5): push $0x3c

"fpathconf@plt" :
2b10(6): jmp 0x217332(%rip)
2b16(5): push $0x3d

"rpmatch@plt" :
2b20(6): jmp 0x21732a(%rip)
2b26(5): push $0x3e

"syscall@plt" :
2b30(6): jmp 0x217322(%rip)
2b36(5): push $0x3f

"mkfifo@plt" :
2b40(6): jmp 0x21731a(%rip)
2b46(5): push $0x40

"umask@plt" :
2b50(6): jmp 0x217312(%rip)
2b56(5): push $0x41

"memcpy@plt" :
2b60(6): jmp 0x21730a(%rip)
2b66(5): push $0x42

"__xmknod@plt" :
2b70(6): jmp 0x217302(%rip)
2b76(5): push $0x43

"fileno@plt" :
2b80(6): jmp 0x2172fa(%rip)
2b86(5): push $0x44

"getgid@plt" :
2b90(6): jmp 0x2172f2(%rip)
2b96(5): push $0x45

"__xstat@plt" :
2ba0(6): jmp 0x2172ea(%rip)
2ba6(5): push $0x46

"readdir@plt" :
2bb0(6): jmp 0x2172e2(%rip)
2bb6(5): push $0x47

"malloc@plt" :
2bc0(6): jmp 0x2172da(%rip)
2bc6(5): push $0x48

"fflush@plt" :
2bd0(6): jmp 0x2172d2(%rip)
2bd6(5): push $0x49

"nl_langinfo@plt" :
2be0(6): jmp 0x2172ca(%rip)
2be6(5): push $0x4a

"__fxstat@plt" :
2bf0(6): jmp 0x2172c2(%rip)
2bf6(5): push $0x4b

"lchown@plt" :
2c00(6): jmp 0x2172ba(%rip)
2c06(5): push $0x4c

"__freading@plt" :
2c10(6): jmp 0x2172b2(%rip)
2c16(5): push $0x4d

"realloc@plt" :
2c20(6): jmp 0x2172aa(%rip)
2c26(5): push $0x4e

"fdopen@plt" :
2c30(6): jmp 0x2172a2(%rip)
2c36(5): push $0x4f

"linkat@plt" :
2c40(6): jmp 0x21729a(%rip)
2c46(5): push $0x50

"setlocale@plt" :
2c50(6): jmp 0x217292(%rip)
2c56(5): push $0x51

"__printf_chk@plt" :
2c60(6): jmp 0x21728a(%rip)
2c66(5): push $0x52

"fchmod@plt" :
2c70(6): jmp 0x217282(%rip)
2c76(5): push $0x53

"setvbuf@plt" :
2c80(6): jmp 0x21727a(%rip)
2c86(5): push $0x54

"chmod@plt" :
2c90(6): jmp 0x217272(%rip)
2c96(5): push $0x55

"mempcpy@plt" :
2ca0(6): jmp 0x21726a(%rip)
2ca6(5): push $0x56

"error@plt" :
2cb0(6): jmp 0x217262(%rip)
2cb6(5): push $0x57

"__explicit_bzero_chk@plt" :
2cc0(6): jmp 0x21725a(%rip)
2cc6(5): push $0x58

"open@plt" :
2cd0(6): jmp 0x217252(%rip)
2cd6(5): push $0x59

"fseeko@plt" :
2ce0(6): jmp 0x21724a(%rip)
2ce6(5): push $0x5a

"fchown@plt" :
2cf0(6): jmp 0x217242(%rip)
2cf6(5): push $0x5b

"fopen@plt" :
2d00(6): jmp 0x21723a(%rip)
2d06(5): push $0x5c

"rename@plt" :
2d10(6): jmp 0x217232(%rip)
2d16(5): push $0x5d

"fdopendir@plt" :
2d20(6): jmp 0x21722a(%rip)
2d26(5): push $0x5e

"futimens@plt" :
2d30(6): jmp 0x217222(%rip)
2d36(5): push $0x5f

"euidaccess@plt" :
2d40(6): jmp 0x21721a(%rip)
2d46(5): push $0x60

"__cxa_atexit@plt" :
2d50(6): jmp 0x217212(%rip)
2d56(5): push $0x61

"renameat@plt" :
2d60(6): jmp 0x21720a(%rip)
2d66(5): push $0x62

"getpagesize@plt" :
2d70(6): jmp 0x217202(%rip)
2d76(5): push $0x63

"getppid@plt" :
2d80(6): jmp 0x2171fa(%rip)
2d86(5): push $0x64

"exit@plt" :
2d90(6): jmp 0x2171f2(%rip)
2d96(5): push $0x65

"fwrite@plt" :
2da0(6): jmp 0x2171ea(%rip)
2da6(5): push $0x66

"__fprintf_chk@plt" :
2db0(6): jmp 0x2171e2(%rip)
2db6(5): push $0x67

"mbsinit@plt" :
2dc0(6): jmp 0x2171da(%rip)
2dc6(5): push $0x68

"symlinkat@plt" :
2dd0(6): jmp 0x2171d2(%rip)
2dd6(5): push $0x69

"iswprint@plt" :
2de0(6): jmp 0x2171ca(%rip)
2de6(5): push $0x6a

"futimesat@plt" :
2df0(6): jmp 0x2171c2(%rip)
2df6(5): push $0x6b

"__ctype_b_loc@plt" :
2e00(6): jmp 0x2171ba(%rip)
2e06(5): push $0x6c

".plt.got" :
2e10(6): jmp 0x2171b2(%rip)
2e16(2): nop 
2e18(6): jmp 0x2171d2(%rip)
2e1e(2): nop 

"_init" :
2710(4): sub $0x8,%rsp
2714(7): mov 0x2178c5(%rip),%rax
271b(3): test %rax,%rax
271e(2): jz 0x4(%rip)
2720(2): call %rax
2722(4): add $0x8,%rsp
2726(1): ret near (%rsp)

"fchmod_or_lchmod" :
2e20(2): test %edi,%edi
2e22(3): mov %rsi,%rax
2e25(2): mov %edx,%esi
2e27(2): js 0x7(%rip)
2e29(5): jmp 0xfffffe47(%rip)
2e2e(3): mov %rax,%rdi
2e31(5): jmp 0xfffffe5f(%rip)

"restore_default_fscreatecon_or_die" :
2e36(1): push %rbx
2e37(5): call 0xfffff939(%rip)
2e3c(7): lea 0x11905(%rip),%rsi
2e43(3): mov %rax,%rbx
2e46(5): mov $0x5,%edx
2e4b(2): xor %edi,%edi
2e4d(6): mov $0x5f,(%rax)
2e53(5): call 0xfffffa8d(%rip)
2e58(2): mov (%rbx),%esi
2e5a(3): mov %rax,%rdx
2e5d(5): mov $0x1,%edi
2e62(2): xor %eax,%eax
2e64(5): call 0xfffffe4c(%rip)
2e69(7): nop 0x0(%rax)
2e70(2): push %r15
2e72(2): push %r14
2e74(6): mov $0x1,%r14d
2e7a(2): push %r13
2e7c(2): push %r12
2e7e(3): mov %edi,%r12d
2e81(1): push %rbp
2e82(1): push %rbx
2e83(3): mov %rsi,%rbp
2e86(7): lea 0x2166f3(%rip),%r13
2e8d(7): lea 0xfd88(%rip),%rbx
2e94(7): sub $0x128,%rsp
2e9b(3): mov (%rsi),%rdi
2e9e(9): mov $0x28,%rax
2ea7(8): mov %rax,0x118(%rsp)
2eaf(2): xor %eax,%eax
2eb1(5): lea 0x30(%rsp),%r15
2eb6(5): call 0xa0da(%rip)
2ebb(7): lea 0x12184(%rip),%rsi
2ec2(5): mov $0x6,%edi
2ec7(5): call 0xfffffd89(%rip)
2ecc(7): lea 0xfb68(%rip),%rsi
2ed3(7): lea 0xfae8(%rip),%rdi
2eda(5): call 0xfffff9d6(%rip)
2edf(7): lea 0xfadc(%rip),%rdi
2ee6(5): call 0xfffff98a(%rip)
2eeb(7): lea 0x83de(%rip),%rdi
2ef2(5): call 0xf9be(%rip)
2ef7(3): mov %r15,%rdi
2efa(7): mov $0x0,0x217251(%rip)
2f01(5): call 0x28cf(%rip)
2f06(7): lea 0xfb46(%rip),%rdi
2f0d(5): mov $0x1,0x44(%rsp)
2f12(8): mov $0x1,0x34(%rsp)
2f1a(5): mov $0x0,0x45(%rsp)
2f1f(5): mov $0x0,0x46(%rsp)
2f24(5): mov $0x0,0x47(%rsp)
2f29(8): mov $0x4,0x38(%rsp)
2f31(5): mov $0x0,0x48(%rsp)
2f36(5): mov $0x0,0x49(%rsp)
2f3b(5): mov $0x0,0x4c(%rsp)
2f40(8): mov $0x0,0x68(%rsp)
2f48(5): mov $0x0,0x4d(%rsp)
2f4d(5): mov $0x0,0x52(%rsp)
2f52(5): mov $0x0,0x4e(%rsp)
2f57(5): mov $0x0,0x4f(%rsp)
2f5c(5): mov $0x0,0x50(%rsp)
2f61(5): mov $0x0,0x55(%rsp)
2f66(5): mov $0x0,0x56(%rsp)
2f6b(5): mov $0x0,0x51(%rsp)
2f70(5): mov $0x0,0x57(%rsp)
2f75(5): mov $0x0,0x59(%rsp)
2f7a(5): mov $0x0,0x58(%rsp)
2f7f(5): mov $0x1,0x53(%rsp)
2f84(5): mov $0x0,0x54(%rsp)
2f89(5): mov $0x0,0x5a(%rsp)
2f8e(8): mov $0x2,0x3c(%rsp)
2f96(5): mov $0x0,0x5c(%rsp)
2f9b(5): mov $0x0,0x5b(%rsp)
2fa0(8): mov $0x0,0x40(%rsp)
2fa8(5): mov $0x0,0x5f(%rsp)
2fad(5): mov $0x0,0x5d(%rsp)
2fb2(5): mov $0x0,0x5e(%rsp)
2fb7(5): call 0xfffff789(%rip)
2fbc(3): test %rax,%rax
2fbf(8): lea 0x80(%rsp),%rax
2fc7(9): mov $0x0,0x70(%rsp)
2fd0(5): setnz 0x60(%rsp)
2fd5(9): mov $0x0,0x78(%rsp)
2fde(9): mov $0x0,0x20(%rsp)
2fe7(5): mov $0x0,0x1e(%rsp)
2fec(8): mov $0x0,(%rsp)
2ff4(5): mov $0x0,0x1f(%rsp)
2ff9(9): mov $0x0,0x8(%rsp)
3002(9): mov $0x0,0x10(%rsp)
300b(5): mov $0x0,0x1d(%rsp)
3010(5): mov %rax,0x28(%rsp)
3015(3): nop (%rax)
3018(7): lea 0xfa86(%rip),%rdx
301f(3): xor %r8d,%r8d
3022(3): mov %r13,%rcx
3025(3): mov %rbp,%rsi
3028(3): mov %r12d,%edi
302b(5): call 0xfffff925(%rip)
3030(3): cmp $0xff,%eax
3033(6): jz 0x36d(%rip)
3039(5): add $0x83,%eax
303e(5): cmp $0x10b,%eax
3043(6): jnbe 0x5a9(%rip)
3049(4): movsxd 0x0(%rbx,%rax,4),%rax
304d(3): add %rbx,%rax
3050(2): jmp %rax
3052(7): mov 0x217067(%rip),%rdi
3059(3): test %rdi,%rdi
305c(6): jnz 0x2f1(%rip)
3062(5): mov %r14b,0x4d(%rsp)
3067(5): mov %r14b,0x4e(%rsp)
306c(5): mov %r14b,0x4f(%rsp)
3071(5): mov %r14b,0x54(%rsp)
3076(2): jmp 0xffffffa2(%rip)
3078(8): mov $0x2,0x38(%rsp)
3080(2): jmp 0xffffff98(%rip)
3082(5): mov %r14b,0x47(%rsp)
3087(2): jmp 0xffffff91(%rip)
3089(8): mov $0x3,0x38(%rsp)
3091(2): jmp 0xffffff87(%rip)
3093(5): mov %r14b,0x46(%rsp)
3098(5): jmp 0xffffff80(%rip)
309d(5): mov %r14b,0x52(%rsp)
30a2(8): mov $0x2,0x34(%rsp)
30aa(5): jmp 0xffffff6e(%rip)
30af(7): mov 0x21700a(%rip),%rax
30b6(5): mov $0x1,0x1d(%rsp)
30bb(3): test %rax,%rax
30be(6): cmove 0x8(%rsp),%rax
30c4(5): mov %rax,0x8(%rsp)
30c9(5): jmp 0xffffff4f(%rip)
30ce(7): cmp $0x0,0x21707d(%rip)
30d5(8): mov $0x2,0x34(%rsp)
30dd(5): mov %r14b,0x52(%rsp)
30e2(5): mov %r14b,0x4d(%rsp)
30e7(5): mov %r14b,0x4e(%rsp)
30ec(5): mov %r14b,0x4f(%rsp)
30f1(5): mov %r14b,0x54(%rsp)
30f6(2): jz 0x7(%rip)
30f8(5): mov %r14b,0x55(%rsp)
30fd(5): mov %r14b,0x57(%rsp)
3102(5): mov %r14b,0x59(%rsp)
3107(5): mov %r14b,0x5a(%rsp)
310c(5): jmp 0xffffff0c(%rip)
3111(7): cmp $0x0,0x21703a(%rip)
3118(7): mov 0x216fa1(%rip),%rax
311f(6): jz 0x245(%rip)
3125(3): test %rax,%rax
3128(6): jz 0x449(%rip)
312e(5): mov %rax,0x20(%rsp)
3133(5): jmp 0xfffffee5(%rip)
3138(5): mov $0x1,0x1e(%rsp)
313d(5): jmp 0xfffffedb(%rip)
3142(7): mov 0x216f77(%rip),%rax
3149(5): mov $0x1,0x1d(%rsp)
314e(5): mov %rax,0x10(%rsp)
3153(5): jmp 0xfffffec5(%rip)
3158(5): mov %r14b,0x5a(%rsp)
315d(5): jmp 0xfffffebb(%rip)
3162(8): mov $0x2,0x34(%rsp)
316a(5): jmp 0xfffffeae(%rip)
316f(8): mov $0x4,0x34(%rsp)
3177(5): jmp 0xfffffea1(%rip)
317c(8): mov $0x3,0x34(%rsp)
3184(5): jmp 0xfffffe94(%rip)
3189(7): lea 0xf908(%rip),%rax
3190(7): mov 0x216f11(%rip),%rdi
3197(7): mov 0x216e82(%rip),%rcx
319e(2): push $0x0
31a0(7): lea 0xf8cf(%rip),%r9
31a7(7): lea 0xf8d8(%rip),%r8
31ae(1): push %rax
31af(7): lea 0xf808(%rip),%rdx
31b6(7): lea 0xf788(%rip),%rsi
31bd(2): xor %eax,%eax
31bf(5): call 0xdcc1(%rip)
31c4(2): xor %edi,%edi
31c6(5): call 0xfffffbca(%rip)
31cb(5): mov %r14b,0x45(%rsp)
31d0(5): jmp 0xfffffe48(%rip)
31d5(7): mov %r14b,0x216f74(%rip)
31dc(5): jmp 0xfffffe3c(%rip)
31e1(7): mov 0x216e40(%rip),%r9
31e8(7): mov 0x216ed1(%rip),%rsi
31ef(7): lea 0x21676a(%rip),%rdx
31f6(7): lea 0xfe83(%rip),%rcx
31fd(7): lea 0xf85f(%rip),%rdi
3204(6): mov $0x4,%r8d
320a(5): call 0x7836(%rip)
320f(7): lea 0xfe6a(%rip),%rdx
3216(3): mov 0x0(%rdx,%rax,4),%eax
3219(4): mov %eax,0x3c(%rsp)
321d(5): jmp 0xfffffdfb(%rip)
3222(7): mov 0x216e97(%rip),%rsi
3229(3): test %rsi,%rsi
322c(6): jz 0x167(%rip)
3232(7): mov 0x216def(%rip),%r9
3239(7): lea 0x216700(%rip),%rdx
3240(7): lea 0xfe29(%rip),%rcx
3247(7): lea 0xf81e(%rip),%rdi
324e(6): mov $0x4,%r8d
3254(5): call 0x77ec(%rip)
3259(7): lea 0xfe10(%rip),%rdx
3260(3): mov 0x0(%rdx,%rax,4),%eax
3263(4): mov %eax,0x68(%rsp)
3267(5): jmp 0xfffffdb1(%rip)
326c(7): mov %r14b,0x216ede(%rip)
3273(5): jmp 0xfffffda5(%rip)
3278(7): mov 0x216e41(%rip),%rdi
327f(2): xor %edx,%edx
3281(3): mov %r15,%rsi
3284(5): call 0x55c(%rip)
3289(5): jmp 0xfffffd8f(%rip)
328e(5): mov $0x1,0x1f(%rsp)
3293(5): jmp 0xfffffd85(%rip)
3298(5): mov $0x0,0x53(%rsp)
329d(5): jmp 0xfffffd7b(%rip)
32a2(5): mov %r14b,0x4c(%rsp)
32a7(5): jmp 0xfffffd71(%rip)
32ac(5): mov %r14b,0x5e(%rsp)
32b1(5): jmp 0xfffffd67(%rip)
32b6(5): mov %r14b,0x5d(%rsp)
32bb(5): jmp 0xfffffd5d(%rip)
32c0(5): cmp $0x0,(%rsp)
32c5(6): jnz 0x331(%rip)
32cb(5): mov 0x28(%rsp),%rdx
32d0(7): mov 0x216de9(%rip),%rsi
32d7(5): mov $0x1,%edi
32dc(5): call 0xfffff8c4(%rip)
32e1(2): test %eax,%eax
32e3(6): jnz 0x3a2(%rip)
32e9(7): mov 0x216dd0(%rip),%rax
32f0(4): mov %rax,(%rsp)
32f4(7): mov 0x98(%rsp),%eax
32fb(5): and $0xf000,%eax
3300(5): cmp $0x4000,%eax
3305(6): jz 0xfffffd13(%rip)
330b(4): mov (%rsp),%rsi
330f(5): mov $0x4,%edi
3314(5): call 0xb79c(%rip)
3319(7): lea 0xf6fb(%rip),%rsi
3320(3): mov %rax,%rbx
3323(5): mov $0x5,%edx
3328(2): xor %edi,%edi
332a(5): call 0xfffff5b6(%rip)
332f(3): mov %rbx,%rcx
3332(3): mov %rax,%rdx
3335(2): xor %esi,%esi
3337(5): mov $0x1,%edi
333c(2): xor %eax,%eax
333e(5): call 0xfffff972(%rip)
3343(5): mov %r14b,0x5c(%rsp)
3348(5): jmp 0xfffffcd0(%rip)
334d(5): mov $0x1,%edx
3352(3): mov %r15,%rsi
3355(5): call 0x48b(%rip)
335a(5): mov %r14b,0x54(%rsp)
335f(5): jmp 0xfffffcb9(%rip)
3364(3): test %rax,%rax
3367(6): jz 0xfffffcb1(%rip)
336d(7): lea 0x111f4(%rip),%rsi
3374(2): xor %edi,%edi
3376(5): mov $0x5,%edx
337b(5): call 0xfffff565(%rip)
3380(2): xor %esi,%esi
3382(3): mov %rax,%rdx
3385(2): xor %edi,%edi
3387(2): xor %eax,%eax
3389(5): call 0xfffff927(%rip)
338e(5): jmp 0xfffffc8a(%rip)
3393(8): mov $0x2,0x68(%rsp)
339b(5): jmp 0xfffffc7d(%rip)
33a0(5): cmp $0x0,0x47(%rsp)
33a5(6): jnz 0xfd(%rip)
33ab(5): cmp $0x2,0x38(%rsp)
33b0(6): jz 0x10e(%rip)
33b6(5): cmp $0x0,0x1d(%rsp)
33bb(6): jz 0x113(%rip)
33c1(5): cmp $0x2,0x68(%rsp)
33c6(6): jz 0x1b5(%rip)
33cc(7): lea 0xf6ea(%rip),%rsi
33d3(2): xor %edi,%edi
33d5(5): mov $0x5,%edx
33da(5): call 0xfffff506(%rip)
33df(5): mov 0x8(%rsp),%rsi
33e4(3): mov %rax,%rdi
33e7(5): call 0x7e19(%rip)
33ec(5): mov 0x10(%rsp),%rdi
33f1(4): mov %eax,0x30(%rsp)
33f5(5): call 0x770b(%rip)
33fa(5): cmp $0x1,0x34(%rsp)
33ff(6): jz 0xf8(%rip)
3405(5): cmp $0x0,0x5a(%rsp)
340a(6): jnz 0x103(%rip)
3410(5): cmp $0x0,0x51(%rsp)
3415(5): movzx 0x56(%rsp),%eax
341a(2): jnz 0xe(%rip)
341c(6): cmp $0x0,0x20(%rsp)
3422(6): jz 0x124(%rip)
3428(2): test %al,%al
342a(6): jnz 0xf1(%rip)
3430(5): mov $0x0,0x55(%rsp)
3435(6): cmp $0x0,0x20(%rsp)
343b(6): jnz 0x208(%rip)
3441(5): cmp $0x0,0x58(%rsp)
3446(6): jnz 0x1d9(%rip)
344c(5): call 0x6a54(%rip)
3451(7): movsxd 0x216c60(%rip),%rdx
3458(5): movzx 0x1e(%rsp),%ecx
345d(3): mov %r12d,%edi
3460(3): mov %r15,%r8
3463(2): sub %edx,%edi
3465(5): lea 0x0(%rbp,%rdx,8),%rsi
346a(4): mov (%rsp),%rdx
346e(5): call 0x1372(%rip)
3473(3): xor $0x1,%eax
3476(8): mov 0x118(%rsp),%rcx
347e(9): xor $0x28,%rcx
3487(3): movzx %al,%eax
348a(6): jnz 0x190(%rip)
3490(7): add $0x128,%rsp
3497(1): pop %rbx
3498(1): pop %rbp
3499(2): pop %r12
349b(2): pop %r13
349d(2): pop %r14
349f(2): pop %r15
34a1(1): ret near (%rsp)
34a2(5): cmp $0x0,0x5c(%rsp)
34a7(6): jz 0xffffff04(%rip)
34ad(5): mov $0x5,%edx
34b2(7): lea 0x110f7(%rip),%rsi
34b9(5): jmp 0x11e(%rip)
34be(5): cmp $0x0,0x1d(%rsp)
34c3(5): mov $0x0,0x5d(%rsp)
34c8(6): jnz 0x103(%rip)
34ce(2): xor %eax,%eax
34d0(5): cmp $0x2,0x68(%rsp)
34d5(6): jnz 0xffffff17(%rip)
34db(5): cmp $0x2,0x3c(%rsp)
34e0(6): jz 0xffffff0c(%rip)
34e6(5): mov $0x5,%edx
34eb(7): lea 0x1112e(%rip),%rsi
34f2(5): jmp 0xe5(%rip)
34f7(5): cmp $0x0,0x5a(%rsp)
34fc(2): jz 0x68(%rip)
34fe(5): cmp $0x0,0x47(%rsp)
3503(2): jnz 0x61(%rip)
3505(8): mov $0x2,0x34(%rsp)
350d(5): movzx 0x1f(%rsp),%eax
3512(4): mov %al,0x44(%rsp)
3516(5): jmp 0xfffffefa(%rip)
351b(5): cmp $0x0,0x55(%rsp)
3520(2): jz 0x35(%rip)
3522(7): lea 0x11127(%rip),%rsi
3529(5): mov $0x5,%edx
352e(2): xor %edi,%edi
3530(5): call 0xfffff3b0(%rip)
3535(2): xor %esi,%esi
3537(3): mov %rax,%rdx
353a(5): mov $0x1,%edi
353f(2): xor %eax,%eax
3541(5): call 0xfffff76f(%rip)
3546(5): cmp $0x0,0x55(%rsp)
354b(2): jz 0x40(%rip)
354d(2): test %al,%al
354f(6): jz 0xfffffef2(%rip)
3555(7): cmp $0x0,0x216bf6(%rip)
355c(6): jnz 0xfffffed9(%rip)
3562(2): jmp 0x3e(%rip)
3564(8): mov $0x4,0x34(%rsp)
356c(5): jmp 0xfffffe99(%rip)
3571(5): mov %r14b,0x51(%rsp)
3576(5): jmp 0xfffffaa2(%rip)
357b(5): cmp $0x2,0x3c(%rsp)
3580(6): jz 0xfffffe4c(%rip)
3586(5): jmp 0xffffff60(%rip)
358b(2): test %al,%al
358d(6): jz 0xfffffeb4(%rip)
3593(7): cmp $0x0,0x216bb8(%rip)
359a(6): jnz 0xfffffea7(%rip)
35a0(7): lea 0x110d9(%rip),%rsi
35a7(5): mov $0x5,%edx
35ac(2): xor %edi,%edi
35ae(5): call 0xfffff332(%rip)
35b3(2): xor %esi,%esi
35b5(3): mov %rax,%rdx
35b8(5): mov $0x1,%edi
35bd(2): xor %eax,%eax
35bf(5): call 0xfffff6f1(%rip)
35c4(2): xor %edi,%edi
35c6(5): call 0xc5a(%rip)
35cb(7): lea 0x1100e(%rip),%rsi
35d2(5): mov $0x5,%edx
35d7(2): xor %edi,%edi
35d9(5): call 0xfffff307(%rip)
35de(2): xor %esi,%esi
35e0(3): mov %rax,%rdx
35e3(2): xor %edi,%edi
35e5(2): xor %eax,%eax
35e7(5): call 0xfffff6c9(%rip)
35ec(5): mov $0x1,%edi
35f1(5): call 0xc2f(%rip)
35f6(7): lea 0x10f43(%rip),%rsi
35fd(5): mov $0x5,%edx
3602(2): xor %edi,%edi
3604(5): call 0xfffff2dc(%rip)
3609(2): xor %esi,%esi
360b(3): mov %rax,%rdx
360e(5): mov $0x1,%edi
3613(2): xor %eax,%eax
3615(5): call 0xfffff69b(%rip)
361a(5): call 0xfffff316(%rip)
361f(7): lea 0x110da(%rip),%rsi
3626(5): mov $0x5,%edx
362b(2): xor %edi,%edi
362d(5): call 0xfffff2b3(%rip)
3632(2): xor %esi,%esi
3634(3): mov %rax,%rdx
3637(5): mov $0x1,%edi
363c(2): xor %eax,%eax
363e(5): call 0xfffff672(%rip)
3643(5): call 0xfffff12d(%rip)
3648(5): mov 0x20(%rsp),%rdi
364d(6): mov $0x5f,(%rax)
3653(3): mov %rax,%rbx
3656(5): call 0xb72a(%rip)
365b(7): lea 0x11066(%rip),%rsi
3662(5): mov $0x5,%edx
3667(2): xor %edi,%edi
3669(3): mov %rax,%rbp
366c(5): call 0xfffff274(%rip)
3671(2): mov (%rbx),%esi
3673(3): mov %rax,%rdx
3676(3): mov %rbp,%rcx
3679(5): mov $0x1,%edi
367e(2): xor %eax,%eax
3680(5): call 0xfffff630(%rip)
3685(7): mov 0x216a34(%rip),%rsi
368c(5): mov $0x4,%edi
3691(5): call 0xb41f(%rip)
3696(7): lea 0xf260(%rip),%rsi
369d(5): mov $0x5,%edx
36a2(2): xor %edi,%edi
36a4(3): mov %rax,%rbp
36a7(5): call 0xfffff239(%rip)
36ac(3): mov %rax,%rbx
36af(5): call 0xfffff0c1(%rip)
36b4(2): mov (%rax),%esi
36b6(3): mov %rbp,%rcx
36b9(3): mov %rbx,%rdx
36bc(5): mov $0x1,%edi
36c1(2): xor %eax,%eax
36c3(5): call 0xfffff5ed(%rip)
36c8(8): nop 0x0(%rax,%rax,1)
36d0(2): xor %ebp,%ebp
36d2(3): mov %rdx,%r9
36d5(1): pop %rsi
36d6(3): mov %rsp,%rdx
36d9(4): and $0xfffffff0,%rsp
36dd(1): push %rax
36de(1): push %rsp
36df(7): lea 0xf1ba(%rip),%r8
36e6(7): lea 0xf143(%rip),%rcx
36ed(7): lea 0xfffff77c(%rip),%rdi
36f4(6): call 0x2168de(%rip)
36fa(1): hlt 

"main" :
2e70(2): push %r15
2e72(2): push %r14
2e74(6): mov $0x1,%r14d
2e7a(2): push %r13
2e7c(2): push %r12
2e7e(3): mov %edi,%r12d
2e81(1): push %rbp
2e82(1): push %rbx
2e83(3): mov %rsi,%rbp
2e86(7): lea 0x2166f3(%rip),%r13
2e8d(7): lea 0xfd88(%rip),%rbx
2e94(7): sub $0x128,%rsp
2e9b(3): mov (%rsi),%rdi
2e9e(9): mov $0x28,%rax
2ea7(8): mov %rax,0x118(%rsp)
2eaf(2): xor %eax,%eax
2eb1(5): lea 0x30(%rsp),%r15
2eb6(5): call 0xa0da(%rip)
2ebb(7): lea 0x12184(%rip),%rsi
2ec2(5): mov $0x6,%edi
2ec7(5): call 0xfffffd89(%rip)
2ecc(7): lea 0xfb68(%rip),%rsi
2ed3(7): lea 0xfae8(%rip),%rdi
2eda(5): call 0xfffff9d6(%rip)
2edf(7): lea 0xfadc(%rip),%rdi
2ee6(5): call 0xfffff98a(%rip)
2eeb(7): lea 0x83de(%rip),%rdi
2ef2(5): call 0xf9be(%rip)
2ef7(3): mov %r15,%rdi
2efa(7): mov $0x0,0x217251(%rip)
2f01(5): call 0x28cf(%rip)
2f06(7): lea 0xfb46(%rip),%rdi
2f0d(5): mov $0x1,0x44(%rsp)
2f12(8): mov $0x1,0x34(%rsp)
2f1a(5): mov $0x0,0x45(%rsp)
2f1f(5): mov $0x0,0x46(%rsp)
2f24(5): mov $0x0,0x47(%rsp)
2f29(8): mov $0x4,0x38(%rsp)
2f31(5): mov $0x0,0x48(%rsp)
2f36(5): mov $0x0,0x49(%rsp)
2f3b(5): mov $0x0,0x4c(%rsp)
2f40(8): mov $0x0,0x68(%rsp)
2f48(5): mov $0x0,0x4d(%rsp)
2f4d(5): mov $0x0,0x52(%rsp)
2f52(5): mov $0x0,0x4e(%rsp)
2f57(5): mov $0x0,0x4f(%rsp)
2f5c(5): mov $0x0,0x50(%rsp)
2f61(5): mov $0x0,0x55(%rsp)
2f66(5): mov $0x0,0x56(%rsp)
2f6b(5): mov $0x0,0x51(%rsp)
2f70(5): mov $0x0,0x57(%rsp)
2f75(5): mov $0x0,0x59(%rsp)
2f7a(5): mov $0x0,0x58(%rsp)
2f7f(5): mov $0x1,0x53(%rsp)
2f84(5): mov $0x0,0x54(%rsp)
2f89(5): mov $0x0,0x5a(%rsp)
2f8e(8): mov $0x2,0x3c(%rsp)
2f96(5): mov $0x0,0x5c(%rsp)
2f9b(5): mov $0x0,0x5b(%rsp)
2fa0(8): mov $0x0,0x40(%rsp)
2fa8(5): mov $0x0,0x5f(%rsp)
2fad(5): mov $0x0,0x5d(%rsp)
2fb2(5): mov $0x0,0x5e(%rsp)
2fb7(5): call 0xfffff789(%rip)
2fbc(3): test %rax,%rax
2fbf(8): lea 0x80(%rsp),%rax
2fc7(9): mov $0x0,0x70(%rsp)
2fd0(5): setnz 0x60(%rsp)
2fd5(9): mov $0x0,0x78(%rsp)
2fde(9): mov $0x0,0x20(%rsp)
2fe7(5): mov $0x0,0x1e(%rsp)
2fec(8): mov $0x0,(%rsp)
2ff4(5): mov $0x0,0x1f(%rsp)
2ff9(9): mov $0x0,0x8(%rsp)
3002(9): mov $0x0,0x10(%rsp)
300b(5): mov $0x0,0x1d(%rsp)
3010(5): mov %rax,0x28(%rsp)
3015(3): nop (%rax)
3018(7): lea 0xfa86(%rip),%rdx
301f(3): xor %r8d,%r8d
3022(3): mov %r13,%rcx
3025(3): mov %rbp,%rsi
3028(3): mov %r12d,%edi
302b(5): call 0xfffff925(%rip)
3030(3): cmp $0xff,%eax
3033(6): jz 0x36d(%rip)
3039(5): add $0x83,%eax
303e(5): cmp $0x10b,%eax
3043(6): jnbe 0x5a9(%rip)
3049(4): movsxd 0x0(%rbx,%rax,4),%rax
304d(3): add %rbx,%rax
3050(2): jmp %rax
3052(7): mov 0x217067(%rip),%rdi
3059(3): test %rdi,%rdi
305c(6): jnz 0x2f1(%rip)
3062(5): mov %r14b,0x4d(%rsp)
3067(5): mov %r14b,0x4e(%rsp)
306c(5): mov %r14b,0x4f(%rsp)
3071(5): mov %r14b,0x54(%rsp)
3076(2): jmp 0xffffffa2(%rip)
3078(8): mov $0x2,0x38(%rsp)
3080(2): jmp 0xffffff98(%rip)
3082(5): mov %r14b,0x47(%rsp)
3087(2): jmp 0xffffff91(%rip)
3089(8): mov $0x3,0x38(%rsp)
3091(2): jmp 0xffffff87(%rip)
3093(5): mov %r14b,0x46(%rsp)
3098(5): jmp 0xffffff80(%rip)
309d(5): mov %r14b,0x52(%rsp)
30a2(8): mov $0x2,0x34(%rsp)
30aa(5): jmp 0xffffff6e(%rip)
30af(7): mov 0x21700a(%rip),%rax
30b6(5): mov $0x1,0x1d(%rsp)
30bb(3): test %rax,%rax
30be(6): cmove 0x8(%rsp),%rax
30c4(5): mov %rax,0x8(%rsp)
30c9(5): jmp 0xffffff4f(%rip)
30ce(7): cmp $0x0,0x21707d(%rip)
30d5(8): mov $0x2,0x34(%rsp)
30dd(5): mov %r14b,0x52(%rsp)
30e2(5): mov %r14b,0x4d(%rsp)
30e7(5): mov %r14b,0x4e(%rsp)
30ec(5): mov %r14b,0x4f(%rsp)
30f1(5): mov %r14b,0x54(%rsp)
30f6(2): jz 0x7(%rip)
30f8(5): mov %r14b,0x55(%rsp)
30fd(5): mov %r14b,0x57(%rsp)
3102(5): mov %r14b,0x59(%rsp)
3107(5): mov %r14b,0x5a(%rsp)
310c(5): jmp 0xffffff0c(%rip)
3111(7): cmp $0x0,0x21703a(%rip)
3118(7): mov 0x216fa1(%rip),%rax
311f(6): jz 0x245(%rip)
3125(3): test %rax,%rax
3128(6): jz 0x449(%rip)
312e(5): mov %rax,0x20(%rsp)
3133(5): jmp 0xfffffee5(%rip)
3138(5): mov $0x1,0x1e(%rsp)
313d(5): jmp 0xfffffedb(%rip)
3142(7): mov 0x216f77(%rip),%rax
3149(5): mov $0x1,0x1d(%rsp)
314e(5): mov %rax,0x10(%rsp)
3153(5): jmp 0xfffffec5(%rip)
3158(5): mov %r14b,0x5a(%rsp)
315d(5): jmp 0xfffffebb(%rip)
3162(8): mov $0x2,0x34(%rsp)
316a(5): jmp 0xfffffeae(%rip)
316f(8): mov $0x4,0x34(%rsp)
3177(5): jmp 0xfffffea1(%rip)
317c(8): mov $0x3,0x34(%rsp)
3184(5): jmp 0xfffffe94(%rip)
3189(7): lea 0xf908(%rip),%rax
3190(7): mov 0x216f11(%rip),%rdi
3197(7): mov 0x216e82(%rip),%rcx
319e(2): push $0x0
31a0(7): lea 0xf8cf(%rip),%r9
31a7(7): lea 0xf8d8(%rip),%r8
31ae(1): push %rax
31af(7): lea 0xf808(%rip),%rdx
31b6(7): lea 0xf788(%rip),%rsi
31bd(2): xor %eax,%eax
31bf(5): call 0xdcc1(%rip)
31c4(2): xor %edi,%edi
31c6(5): call 0xfffffbca(%rip)
31cb(5): mov %r14b,0x45(%rsp)
31d0(5): jmp 0xfffffe48(%rip)
31d5(7): mov %r14b,0x216f74(%rip)
31dc(5): jmp 0xfffffe3c(%rip)
31e1(7): mov 0x216e40(%rip),%r9
31e8(7): mov 0x216ed1(%rip),%rsi
31ef(7): lea 0x21676a(%rip),%rdx
31f6(7): lea 0xfe83(%rip),%rcx
31fd(7): lea 0xf85f(%rip),%rdi
3204(6): mov $0x4,%r8d
320a(5): call 0x7836(%rip)
320f(7): lea 0xfe6a(%rip),%rdx
3216(3): mov 0x0(%rdx,%rax,4),%eax
3219(4): mov %eax,0x3c(%rsp)
321d(5): jmp 0xfffffdfb(%rip)
3222(7): mov 0x216e97(%rip),%rsi
3229(3): test %rsi,%rsi
322c(6): jz 0x167(%rip)
3232(7): mov 0x216def(%rip),%r9
3239(7): lea 0x216700(%rip),%rdx
3240(7): lea 0xfe29(%rip),%rcx
3247(7): lea 0xf81e(%rip),%rdi
324e(6): mov $0x4,%r8d
3254(5): call 0x77ec(%rip)
3259(7): lea 0xfe10(%rip),%rdx
3260(3): mov 0x0(%rdx,%rax,4),%eax
3263(4): mov %eax,0x68(%rsp)
3267(5): jmp 0xfffffdb1(%rip)
326c(7): mov %r14b,0x216ede(%rip)
3273(5): jmp 0xfffffda5(%rip)
3278(7): mov 0x216e41(%rip),%rdi
327f(2): xor %edx,%edx
3281(3): mov %r15,%rsi
3284(5): call 0x55c(%rip)
3289(5): jmp 0xfffffd8f(%rip)
328e(5): mov $0x1,0x1f(%rsp)
3293(5): jmp 0xfffffd85(%rip)
3298(5): mov $0x0,0x53(%rsp)
329d(5): jmp 0xfffffd7b(%rip)
32a2(5): mov %r14b,0x4c(%rsp)
32a7(5): jmp 0xfffffd71(%rip)
32ac(5): mov %r14b,0x5e(%rsp)
32b1(5): jmp 0xfffffd67(%rip)
32b6(5): mov %r14b,0x5d(%rsp)
32bb(5): jmp 0xfffffd5d(%rip)
32c0(5): cmp $0x0,(%rsp)
32c5(6): jnz 0x331(%rip)
32cb(5): mov 0x28(%rsp),%rdx
32d0(7): mov 0x216de9(%rip),%rsi
32d7(5): mov $0x1,%edi
32dc(5): call 0xfffff8c4(%rip)
32e1(2): test %eax,%eax
32e3(6): jnz 0x3a2(%rip)
32e9(7): mov 0x216dd0(%rip),%rax
32f0(4): mov %rax,(%rsp)
32f4(7): mov 0x98(%rsp),%eax
32fb(5): and $0xf000,%eax
3300(5): cmp $0x4000,%eax
3305(6): jz 0xfffffd13(%rip)
330b(4): mov (%rsp),%rsi
330f(5): mov $0x4,%edi
3314(5): call 0xb79c(%rip)
3319(7): lea 0xf6fb(%rip),%rsi
3320(3): mov %rax,%rbx
3323(5): mov $0x5,%edx
3328(2): xor %edi,%edi
332a(5): call 0xfffff5b6(%rip)
332f(3): mov %rbx,%rcx
3332(3): mov %rax,%rdx
3335(2): xor %esi,%esi
3337(5): mov $0x1,%edi
333c(2): xor %eax,%eax
333e(5): call 0xfffff972(%rip)
3343(5): mov %r14b,0x5c(%rsp)
3348(5): jmp 0xfffffcd0(%rip)
334d(5): mov $0x1,%edx
3352(3): mov %r15,%rsi
3355(5): call 0x48b(%rip)
335a(5): mov %r14b,0x54(%rsp)
335f(5): jmp 0xfffffcb9(%rip)
3364(3): test %rax,%rax
3367(6): jz 0xfffffcb1(%rip)
336d(7): lea 0x111f4(%rip),%rsi
3374(2): xor %edi,%edi
3376(5): mov $0x5,%edx
337b(5): call 0xfffff565(%rip)
3380(2): xor %esi,%esi
3382(3): mov %rax,%rdx
3385(2): xor %edi,%edi
3387(2): xor %eax,%eax
3389(5): call 0xfffff927(%rip)
338e(5): jmp 0xfffffc8a(%rip)
3393(8): mov $0x2,0x68(%rsp)
339b(5): jmp 0xfffffc7d(%rip)
33a0(5): cmp $0x0,0x47(%rsp)
33a5(6): jnz 0xfd(%rip)
33ab(5): cmp $0x2,0x38(%rsp)
33b0(6): jz 0x10e(%rip)
33b6(5): cmp $0x0,0x1d(%rsp)
33bb(6): jz 0x113(%rip)
33c1(5): cmp $0x2,0x68(%rsp)
33c6(6): jz 0x1b5(%rip)
33cc(7): lea 0xf6ea(%rip),%rsi
33d3(2): xor %edi,%edi
33d5(5): mov $0x5,%edx
33da(5): call 0xfffff506(%rip)
33df(5): mov 0x8(%rsp),%rsi
33e4(3): mov %rax,%rdi
33e7(5): call 0x7e19(%rip)
33ec(5): mov 0x10(%rsp),%rdi
33f1(4): mov %eax,0x30(%rsp)
33f5(5): call 0x770b(%rip)
33fa(5): cmp $0x1,0x34(%rsp)
33ff(6): jz 0xf8(%rip)
3405(5): cmp $0x0,0x5a(%rsp)
340a(6): jnz 0x103(%rip)
3410(5): cmp $0x0,0x51(%rsp)
3415(5): movzx 0x56(%rsp),%eax
341a(2): jnz 0xe(%rip)
341c(6): cmp $0x0,0x20(%rsp)
3422(6): jz 0x124(%rip)
3428(2): test %al,%al
342a(6): jnz 0xf1(%rip)
3430(5): mov $0x0,0x55(%rsp)
3435(6): cmp $0x0,0x20(%rsp)
343b(6): jnz 0x208(%rip)
3441(5): cmp $0x0,0x58(%rsp)
3446(6): jnz 0x1d9(%rip)
344c(5): call 0x6a54(%rip)
3451(7): movsxd 0x216c60(%rip),%rdx
3458(5): movzx 0x1e(%rsp),%ecx
345d(3): mov %r12d,%edi
3460(3): mov %r15,%r8
3463(2): sub %edx,%edi
3465(5): lea 0x0(%rbp,%rdx,8),%rsi
346a(4): mov (%rsp),%rdx
346e(5): call 0x1372(%rip)
3473(3): xor $0x1,%eax
3476(8): mov 0x118(%rsp),%rcx
347e(9): xor $0x28,%rcx
3487(3): movzx %al,%eax
348a(6): jnz 0x190(%rip)
3490(7): add $0x128,%rsp
3497(1): pop %rbx
3498(1): pop %rbp
3499(2): pop %r12
349b(2): pop %r13
349d(2): pop %r14
349f(2): pop %r15
34a1(1): ret near (%rsp)
34a2(5): cmp $0x0,0x5c(%rsp)
34a7(6): jz 0xffffff04(%rip)
34ad(5): mov $0x5,%edx
34b2(7): lea 0x110f7(%rip),%rsi
34b9(5): jmp 0x11e(%rip)
34be(5): cmp $0x0,0x1d(%rsp)
34c3(5): mov $0x0,0x5d(%rsp)
34c8(6): jnz 0x103(%rip)
34ce(2): xor %eax,%eax
34d0(5): cmp $0x2,0x68(%rsp)
34d5(6): jnz 0xffffff17(%rip)
34db(5): cmp $0x2,0x3c(%rsp)
34e0(6): jz 0xffffff0c(%rip)
34e6(5): mov $0x5,%edx
34eb(7): lea 0x1112e(%rip),%rsi
34f2(5): jmp 0xe5(%rip)
34f7(5): cmp $0x0,0x5a(%rsp)
34fc(2): jz 0x68(%rip)
34fe(5): cmp $0x0,0x47(%rsp)
3503(2): jnz 0x61(%rip)
3505(8): mov $0x2,0x34(%rsp)
350d(5): movzx 0x1f(%rsp),%eax
3512(4): mov %al,0x44(%rsp)
3516(5): jmp 0xfffffefa(%rip)
351b(5): cmp $0x0,0x55(%rsp)
3520(2): jz 0x35(%rip)
3522(7): lea 0x11127(%rip),%rsi
3529(5): mov $0x5,%edx
352e(2): xor %edi,%edi
3530(5): call 0xfffff3b0(%rip)
3535(2): xor %esi,%esi
3537(3): mov %rax,%rdx
353a(5): mov $0x1,%edi
353f(2): xor %eax,%eax
3541(5): call 0xfffff76f(%rip)
3546(5): cmp $0x0,0x55(%rsp)
354b(2): jz 0x40(%rip)
354d(2): test %al,%al
354f(6): jz 0xfffffef2(%rip)
3555(7): cmp $0x0,0x216bf6(%rip)
355c(6): jnz 0xfffffed9(%rip)
3562(2): jmp 0x3e(%rip)
3564(8): mov $0x4,0x34(%rsp)
356c(5): jmp 0xfffffe99(%rip)
3571(5): mov %r14b,0x51(%rsp)
3576(5): jmp 0xfffffaa2(%rip)
357b(5): cmp $0x2,0x3c(%rsp)
3580(6): jz 0xfffffe4c(%rip)
3586(5): jmp 0xffffff60(%rip)
358b(2): test %al,%al
358d(6): jz 0xfffffeb4(%rip)
3593(7): cmp $0x0,0x216bb8(%rip)
359a(6): jnz 0xfffffea7(%rip)
35a0(7): lea 0x110d9(%rip),%rsi
35a7(5): mov $0x5,%edx
35ac(2): xor %edi,%edi
35ae(5): call 0xfffff332(%rip)
35b3(2): xor %esi,%esi
35b5(3): mov %rax,%rdx
35b8(5): mov $0x1,%edi
35bd(2): xor %eax,%eax
35bf(5): call 0xfffff6f1(%rip)
35c4(2): xor %edi,%edi
35c6(5): call 0xc5a(%rip)
35cb(7): lea 0x1100e(%rip),%rsi
35d2(5): mov $0x5,%edx
35d7(2): xor %edi,%edi
35d9(5): call 0xfffff307(%rip)
35de(2): xor %esi,%esi
35e0(3): mov %rax,%rdx
35e3(2): xor %edi,%edi
35e5(2): xor %eax,%eax
35e7(5): call 0xfffff6c9(%rip)
35ec(5): mov $0x1,%edi
35f1(5): call 0xc2f(%rip)
35f6(7): lea 0x10f43(%rip),%rsi
35fd(5): mov $0x5,%edx
3602(2): xor %edi,%edi
3604(5): call 0xfffff2dc(%rip)
3609(2): xor %esi,%esi
360b(3): mov %rax,%rdx
360e(5): mov $0x1,%edi
3613(2): xor %eax,%eax
3615(5): call 0xfffff69b(%rip)
361a(5): call 0xfffff316(%rip)
361f(7): lea 0x110da(%rip),%rsi
3626(5): mov $0x5,%edx
362b(2): xor %edi,%edi
362d(5): call 0xfffff2b3(%rip)
3632(2): xor %esi,%esi
3634(3): mov %rax,%rdx
3637(5): mov $0x1,%edi
363c(2): xor %eax,%eax
363e(5): call 0xfffff672(%rip)
3643(5): call 0xfffff12d(%rip)
3648(5): mov 0x20(%rsp),%rdi
364d(6): mov $0x5f,(%rax)
3653(3): mov %rax,%rbx
3656(5): call 0xb72a(%rip)
365b(7): lea 0x11066(%rip),%rsi
3662(5): mov $0x5,%edx
3667(2): xor %edi,%edi
3669(3): mov %rax,%rbp
366c(5): call 0xfffff274(%rip)
3671(2): mov (%rbx),%esi
3673(3): mov %rax,%rdx
3676(3): mov %rbp,%rcx
3679(5): mov $0x1,%edi
367e(2): xor %eax,%eax
3680(5): call 0xfffff630(%rip)
3685(7): mov 0x216a34(%rip),%rsi
368c(5): mov $0x4,%edi
3691(5): call 0xb41f(%rip)
3696(7): lea 0xf260(%rip),%rsi
369d(5): mov $0x5,%edx
36a2(2): xor %edi,%edi
36a4(3): mov %rax,%rbp
36a7(5): call 0xfffff239(%rip)
36ac(3): mov %rax,%rbx
36af(5): call 0xfffff0c1(%rip)
36b4(2): mov (%rax),%esi
36b6(3): mov %rbp,%rcx
36b9(3): mov %rbx,%rdx
36bc(5): mov $0x1,%edi
36c1(2): xor %eax,%eax
36c3(5): call 0xfffff5ed(%rip)
36c8(8): nop 0x0(%rax,%rax,1)
36d0(2): xor %ebp,%ebp
36d2(3): mov %rdx,%r9
36d5(1): pop %rsi
36d6(3): mov %rsp,%rdx
36d9(4): and $0xfffffff0,%rsp
36dd(1): push %rax
36de(1): push %rsp
36df(7): lea 0xf1ba(%rip),%r8
36e6(7): lea 0xf143(%rip),%rcx
36ed(7): lea 0xfffff77c(%rip),%rdi
36f4(6): call 0x2168de(%rip)
36fa(1): hlt 

"_start" :
36d0(2): xor %ebp,%ebp
36d2(3): mov %rdx,%r9
36d5(1): pop %rsi
36d6(3): mov %rsp,%rdx
36d9(4): and $0xfffffff0,%rsp
36dd(1): push %rax
36de(1): push %rsp
36df(7): lea 0xf1ba(%rip),%r8
36e6(7): lea 0xf143(%rip),%rcx
36ed(7): lea 0xfffff77c(%rip),%rdi
36f4(6): call 0x2168de(%rip)
36fa(1): hlt 

"deregister_tm_clones" :
3700(7): lea 0x216999(%rip),%rdi
3707(1): push %rbp
3708(7): lea 0x216991(%rip),%rax
370f(3): cmp %rdi,%rax
3712(3): mov %rsp,%rbp
3715(2): jz 0x1b(%rip)
3717(7): mov 0x2168b2(%rip),%rax
371e(3): test %rax,%rax
3721(2): jz 0xf(%rip)
3723(1): pop %rbp
3724(2): jmp %rax
3726(a): nop 0x0(%rax,%rax,1)
3730(1): pop %rbp
3731(1): ret near (%rsp)

"register_tm_clones" :
3740(7): lea 0x216959(%rip),%rdi
3747(7): lea 0x216952(%rip),%rsi
374e(1): push %rbp
374f(3): sub %rdi,%rsi
3752(3): mov %rsp,%rbp
3755(4): sar $0x3,%rsi
3759(3): mov %rsi,%rax
375c(4): shr $0x3f,%rax
3760(3): add %rax,%rsi
3763(3): sar $0x1,%rsi
3766(2): jz 0x1a(%rip)
3768(7): mov 0x216879(%rip),%rax
376f(3): test %rax,%rax
3772(2): jz 0xe(%rip)
3774(1): pop %rbp
3775(2): jmp %rax
3777(9): nop 0x0(%rax,%rax,1)
3780(1): pop %rbp
3781(1): ret near (%rsp)

"__do_global_dtors_aux" :
3790(7): cmp $0x0,0x216951(%rip)
3797(2): jnz 0x31(%rip)
3799(8): cmp $0x0,0x21684f(%rip)
37a1(1): push %rbp
37a2(3): mov %rsp,%rbp
37a5(2): jz 0xe(%rip)
37a7(7): mov 0x21685a(%rip),%rdi
37ae(5): call 0xfffff66a(%rip)
37b3(5): call 0xffffff4d(%rip)
37b8(7): mov $0x1,0x216929(%rip)
37bf(1): pop %rbp
37c0(1): ret near (%rsp)
37c1(7): nop 0x0(%rax)
37c8(2): REP ret near (%rsp)

"frame_dummy" :
37d0(1): push %rbp
37d1(3): mov %rsp,%rbp
37d4(1): pop %rbp
37d5(5): jmp 0xffffff6b(%rip)

"decode_preserve_arg" :
37e0(2): push %r15
37e2(2): push %r14
37e4(7): lea 0xf0f9(%rip),%r14
37eb(2): push %r13
37ed(2): push %r12
37ef(3): mov %edx,%r12d
37f2(1): push %rbp
37f3(1): push %rbx
37f4(3): mov %rsi,%rbp
37f7(2): mov %edx,%ebx
37f9(7): lea 0xf850(%rip),%r13
3800(4): sub $0x18,%rsp
3804(5): call 0xda4c(%rip)
3809(3): mov %rax,%r15
380c(5): mov %rax,0x8(%rsp)
3811(7): lea 0xf0d7(%rip),%rax
3818(3): test %r12b,%r12b
381b(7): lea 0xf3de(%rip),%r12
3822(4): cmovne %r14,%rax
3826(4): mov %rax,(%rsp)
382a(6): nop 0x0(%rax,%rax,1)
3830(5): mov $0x2c,%esi
3835(3): mov %r15,%rdi
3838(3): xor %r14d,%r14d
383b(5): call 0xfffff135(%rip)
3840(3): test %rax,%rax
3843(2): jz 0x9(%rip)
3845(4): lea 0x1(%rax),%r14
3849(3): mov $0x0,(%rax)
384c(7): mov 0x2167d5(%rip),%r9
3853(4): mov (%rsp),%rdi
3857(7): lea 0xf7f2(%rip),%rcx
385e(7): lea 0x215cdb(%rip),%rdx
3865(6): mov $0x4,%r8d
386b(3): mov %r15,%rsi
386e(5): call 0x71d2(%rip)
3873(6): cmp $0x6,0x0(%r13,%rax,4)
3879(6): jnbe 0xa4(%rip)
387f(5): mov 0x0(%r13,%rax,4),%eax
3884(4): movsxd 0x0(%r12,%rax,4),%rax
3888(3): add %r12,%rax
388b(2): jmp %rax
388d(3): nop (%rax)
3890(3): mov %bl,0x27(%rbp)
3893(3): mov %bl,0x28(%rbp)
3896(a): nop 0x0(%rax,%rax,1)
38a0(3): test %r14,%r14
38a3(3): mov %r14,%r15
38a6(2): jnz 0xffffff8a(%rip)
38a8(5): mov 0x8(%rsp),%rdi
38ad(4): add $0x18,%rsp
38b1(1): pop %rbx
38b2(1): pop %rbp
38b3(2): pop %r12
38b5(2): pop %r13
38b7(2): pop %r14
38b9(2): pop %r15
38bb(5): jmp 0xfffff555(%rip)
38c0(3): mov %bl,0x26(%rbp)
38c3(3): mov %bl,0x25(%rbp)
38c6(2): jmp 0xffffffda(%rip)
38c8(8): nop 0x0(%rax,%rax,1)
38d0(3): mov %bl,0x22(%rbp)
38d3(2): jmp 0xffffffcd(%rip)
38d5(3): nop (%rax)
38d8(3): mov %bl,0x1d(%rbp)
38db(2): jmp 0xffffffc5(%rip)
38dd(3): nop (%rax)
38e0(3): mov %bl,0x1f(%rbp)
38e3(2): jmp 0xffffffbd(%rip)
38e5(3): nop (%rax)
38e8(2): mov %ebx,%eax
38ea(3): mov %bl,0x1e(%rbp)
38ed(3): xor $0x1,%eax
38f0(3): mov %al,0x20(%rbp)
38f3(2): jmp 0xffffffad(%rip)
38f5(3): nop (%rax)
38f8(2): mov %ebx,%eax
38fa(3): mov %bl,0x1e(%rbp)
38fd(3): mov %bl,0x1f(%rbp)
3900(3): xor $0x1,%eax
3903(7): cmp $0x0,0x216848(%rip)
390a(3): mov %bl,0x1d(%rbp)
390d(3): mov %bl,0x22(%rbp)
3910(3): mov %al,0x20(%rbp)
3913(2): jz 0x5(%rip)
3915(3): mov %bl,0x25(%rbp)
3918(3): mov %bl,0x27(%rbp)
391b(2): jmp 0xffffff85(%rip)
391d(5): call 0xffffee43(%rip)

"target_directory_operand" :
3930(2): push %r14
3932(2): push %r13
3934(3): mov %rdx,%r14
3937(2): push %r12
3939(1): push %rbp
393a(3): mov %rsi,%rdx
393d(1): push %rbx
393e(3): mov %rdi,%rbp
3941(3): mov %rsi,%rbx
3944(3): mov %rdi,%rsi
3947(5): mov $0x1,%edi
394c(3): mov %ecx,%r13d
394f(5): call 0xfffff251(%rip)
3954(2): test %eax,%eax
3956(2): jnz 0x1f(%rip)
3958(3): mov 0x18(%rbx),%edx
395b(6): and $0xf000,%edx
3961(6): cmp $0x4000,%edx
3967(2): jz 0x46(%rip)
3969(3): and $0x1,%eax
396c(1): pop %rbx
396d(1): pop %rbp
396e(2): pop %r12
3970(2): pop %r13
3972(2): pop %r14
3974(1): ret near (%rsp)
3975(5): call 0xffffedfb(%rip)
397a(3): mov (%rax),%r12d
397d(3): test %r12d,%r12d
3980(2): jnz 0x17(%rip)
3982(3): mov 0x18(%rbx),%eax
3985(5): and $0xf000,%eax
398a(5): cmp $0x4000,%eax
398f(3): setz %al
3992(3): movzx %al,%eax
3995(2): jmp 0xffffffd4(%rip)
3997(4): cmp $0x2,%r12d
399b(2): jz 0x19(%rip)
399d(3): test %r13b,%r13b
39a0(2): jz 0x1c(%rip)
39a2(7): mov $0x0,0x18(%rbx)
39a9(2): xor %eax,%eax
39ab(2): jmp 0xffffffc1(%rip)
39ad(5): mov $0x1,%eax
39b2(2): jmp 0xffffffba(%rip)
39b4(4): mov $0x1,(%r14)
39b8(2): xor %eax,%eax
39ba(2): jmp 0xffffffb2(%rip)
39bc(3): mov %rbp,%rsi
39bf(5): mov $0x4,%edi
39c4(5): call 0xb0ec(%rip)
39c9(7): lea 0xef2d(%rip),%rsi
39d0(3): mov %rax,%rbx
39d3(5): mov $0x5,%edx
39d8(2): xor %edi,%edi
39da(5): call 0xffffef06(%rip)
39df(3): mov %rbx,%rcx
39e2(3): mov %rax,%rdx
39e5(3): mov %r12d,%esi
39e8(5): mov $0x1,%edi
39ed(2): xor %eax,%eax
39ef(5): call 0xfffff2c1(%rip)
39f4(2): nop 
39f6(a): nop 0x0(%rax,%rax,1)
3a00(1): push %rbp
3a01(3): mov %rsp,%rbp
3a04(2): push %r15
3a06(2): push %r14
3a08(2): push %r13
3a0a(2): push %r12
3a0c(3): mov %r9,%r13
3a0f(1): push %rbx
3a10(3): mov %rsi,%r15
3a13(3): mov %rdi,%rbx
3a16(7): sub $0x168,%rsp
3a1d(7): mov %rcx,0xfffffe80(%rbp)
3a24(7): mov %r8,0xfffffe88(%rbp)
3a2b(7): mov %rdx,0xfffffe70(%rbp)
3a32(9): mov $0x28,%rdx
3a3b(4): mov %rdx,0xffffffc8(%rbp)
3a3f(2): xor %edx,%edx
3a41(5): call 0xffffeebf(%rip)
3a46(4): lea 0x1(%rax),%rdx
3a4a(4): add $0x1f,%rax
3a4e(3): mov %rbx,%rsi
3a51(4): and $0xfffffff0,%rax
3a55(3): sub %rax,%rsp
3a58(5): lea 0xf(%rsp),%rdi
3a5d(4): and $0xfffffff0,%rdi
3a61(5): call 0xfffff0ff(%rip)
3a66(3): mov %rax,%rdi
3a69(3): mov %rax,%r12
3a6c(5): call 0x7a64(%rip)
3a71(3): mov %rax,%r14
3a74(4): add $0x1f,%rax
3a78(3): mov %r12,%rsi
3a7b(4): and $0xfffffff0,%rax
3a7f(3): mov %r14,%rdx
3a82(3): sub %rax,%rsp
3a85(5): lea 0xf(%rsp),%rbx
3a8a(4): and $0xfffffff0,%rbx
3a8e(3): mov %rbx,%rdi
3a91(5): call 0xfffff0cf(%rip)
3a96(7): mov 0xfffffe80(%rbp),%rax
3a9d(5): mov $0x0,0x0(%rbx,%r14,1)
3aa2(3): mov %rbx,%rsi
3aa5(5): mov $0x1,%edi
3aaa(7): mov $0x0,(%rax)
3ab1(7): lea 0xfffffea0(%rbp),%rax
3ab8(3): mov %rax,%rdx
3abb(7): mov %rax,0xfffffe90(%rbp)
3ac2(5): call 0xfffff0de(%rip)
3ac7(2): test %eax,%eax
3ac9(6): jz 0x3b7(%rip)
3acf(4): lea 0x0(%r12,%r15,1),%rdi
3ad3(3): cmp $0x2f,(%rdi)
3ad6(7): mov %rdi,0xfffffe98(%rbp)
3add(6): jnz 0x44b(%rip)
3ae3(5): nop 0x0(%rax,%rax,1)
3ae8(4): add $0x1,%rdi
3aec(3): cmp $0x2f,(%rdi)
3aef(2): jz 0xfffffff9(%rip)
3af1(7): lea 0xffffff30(%rbp),%rax
3af8(7): mov %rax,0xfffffe78(%rbp)
3aff(1): nop 
3b00(5): mov $0x2f,%esi
3b05(5): call 0xffffee6b(%rip)
3b0a(3): test %rax,%rax
3b0d(3): mov %rax,%rbx
3b10(6): jz 0x38c(%rip)
3b16(7): mov 0xfffffe90(%rbp),%rdx
3b1d(3): mov $0x0,(%rbx)
3b20(3): mov %r12,%rsi
3b23(5): mov $0x1,%edi
3b28(5): call 0xfffff078(%rip)
3b2d(2): test %eax,%eax
3b2f(3): mov %eax,%r14d
3b32(6): jnz 0x8e(%rip)
3b38(8): test $0xffffff00,0x1c(%r13)
3b40(2): jnz 0x80(%rip)
3b42(7): mov 0xfffffe98(%rbp),%rdi
3b49(2): xor %ecx,%ecx
3b4b(2): xor %edx,%edx
3b4d(3): mov %r13,%r8
3b50(3): mov %r12,%rsi
3b53(5): call 0x1acd(%rip)
3b58(2): test %al,%al
3b5a(6): jz 0x30b(%rip)
3b60(6): mov 0xfffffeb8(%rbp),%eax
3b66(5): and $0xf000,%eax
3b6b(5): cmp $0x4000,%eax
3b70(6): jnz 0x407(%rip)
3b76(7): mov 0xfffffe88(%rbp),%rax
3b7d(3): mov $0x0,(%rax)
3b80(a): mov $0x280375465148160,%rax
3b8a(4): test %rax,0x20(%r13)
3b8e(6): jnz 0x2b2(%rip)
3b94(4): cmp $0x2f,0x1(%rbx)
3b98(4): lea 0x1(%rbx),%rdi
3b9c(3): mov $0x2f,(%rbx)
3b9f(6): jnz 0xffffff61(%rip)
3ba5(3): nop (%rax)
3ba8(4): add $0x1,%rdi
3bac(3): cmp $0x2f,(%rdi)
3baf(2): jz 0xfffffff9(%rip)
3bb1(5): jmp 0xffffff4f(%rip)
3bb6(a): nop 0x0(%rax,%rax,1)
3bc0(7): mov 0xfffffe78(%rbp),%rdx
3bc7(7): mov 0xfffffe98(%rbp),%rsi
3bce(5): mov $0x1,%edi
3bd3(5): call 0xffffefcd(%rip)
3bd8(2): test %eax,%eax
3bda(6): jz 0x1d6(%rip)
3be0(5): call 0xffffeb90(%rip)
3be5(3): mov (%rax),%r8d
3be8(3): test %r8d,%r8d
3beb(6): jnz 0x1e1(%rip)
3bf1(5): mov $0xa8,%edi
3bf6(5): call 0xd42a(%rip)
3bfb(8): movdqa 0xffffff30(%rbp),%xmm0
3c03(3): mov %rax,%r15
3c06(7): mov 0xfffffe80(%rbp),%rcx
3c0d(3): movups %xmm0,(%rax)
3c10(8): movdqa 0xffffff40(%rbp),%xmm0
3c18(4): movups %xmm0,0x10(%rax)
3c1c(8): movdqa 0xffffff50(%rbp),%xmm0
3c24(4): movups %xmm0,0x20(%rax)
3c28(8): movdqa 0xffffff60(%rbp),%xmm0
3c30(4): movups %xmm0,0x30(%rax)
3c34(8): movdqa 0xffffff70(%rbp),%xmm0
3c3c(4): movups %xmm0,0x40(%rax)
3c40(5): movdqa 0xffffff80(%rbp),%xmm0
3c45(4): movups %xmm0,0x50(%rax)
3c49(5): movdqa 0xffffff90(%rbp),%xmm0
3c4e(4): movups %xmm0,0x60(%rax)
3c52(5): movdqa 0xffffffa0(%rbp),%xmm0
3c57(4): movups %xmm0,0x70(%rax)
3c5b(5): movdqa 0xffffffb0(%rbp),%xmm0
3c60(7): movups %xmm0,0x80(%rax)
3c67(3): mov %rbx,%rax
3c6a(8): mov $0x0,0x90(%r15)
3c72(3): sub %r12,%rax
3c75(3): test %r14d,%r14d
3c78(7): mov %rax,0x98(%r15)
3c7f(3): mov (%rcx),%rax
3c82(3): mov %r15,(%rcx)
3c85(7): mov %rax,0xa0(%r15)
3c8c(6): jz 0xfffffeb6(%rip)
3c92(4): mov 0x18(%r15),%edx
3c96(7): mov 0xfffffe98(%rbp),%rdi
3c9d(3): mov %r13,%r8
3ca0(5): mov $0x1,%ecx
3ca5(3): mov %r12,%rsi
3ca8(5): call 0x1978(%rip)
3cad(2): test %al,%al
3caf(6): jz 0x1b6(%rip)
3cb5(7): mov 0xfffffe88(%rbp),%rax
3cbc(4): mov 0x18(%r15),%esi
3cc0(3): mov $0x1,(%rax)
3cc3(5): cmp $0x0,0x1d(%r13)
3cc8(6): jz 0x158(%rip)
3cce(3): mov %esi,%r14d
3cd1(4): and $0x3f,%r14d
3cd5(3): mov %r14d,%eax
3cd8(5): xor $0xfff,%eax
3cdd(5): cmp $0x0,0x20(%r13)
3ce2(5): mov $0x1ff,%edx
3ce7(3): mov %r12,%rdi
3cea(3): cmovne %edx,%esi
3ced(2): and %eax,%esi
3cef(5): call 0xffffeaf1(%rip)
3cf4(2): test %eax,%eax
3cf6(6): jnz 0x23e(%rip)
3cfc(7): mov 0xfffffe70(%rbp),%rax
3d03(3): test %rax,%rax
3d06(2): jz 0x1b(%rip)
3d08(7): mov 0xfffffe98(%rbp),%rdx
3d0f(3): mov %rax,%rsi
3d12(3): mov %r12,%rcx
3d15(5): mov $0x1,%edi
3d1a(2): xor %eax,%eax
3d1c(5): call 0xffffef44(%rip)
3d21(7): mov 0xfffffe90(%rbp),%rdx
3d28(3): mov %r12,%rsi
3d2b(5): mov $0x1,%edi
3d30(5): call 0xffffebe0(%rip)
3d35(2): test %eax,%eax
3d37(6): jnz 0x248(%rip)
3d3d(5): cmp $0x0,0x1e(%r13)
3d42(6): mov 0xfffffeb8(%rbp),%esi
3d48(2): jnz 0x2e(%rip)
3d4a(2): mov %esi,%eax
3d4c(2): not %eax
3d4e(3): test %r14d,%eax
3d51(6): jnz 0x1af(%rip)
3d57(2): mov %esi,%eax
3d59(5): and $0x1c0,%eax
3d5e(5): cmp $0x1c0,%eax
3d63(2): jz 0x37(%rip)
3d65(2): mov %esi,%eax
3d67(3): or %eax,%r14d
3d6a(8): mov $0x1,0x90(%r15)
3d72(4): mov %r14d,0x18(%r15)
3d76(2): mov %esi,%eax
3d78(5): and $0x1c0,%eax
3d7d(5): cmp $0x1c0,%eax
3d82(2): jz 0x18(%rip)
3d84(6): or $0x1c0,%esi
3d8a(3): mov %r12,%rdi
3d8d(5): call 0xffffef03(%rip)
3d92(2): test %eax,%eax
3d94(6): jnz 0x209(%rip)
3d9a(7): mov 0xfffffe88(%rbp),%rax
3da1(3): cmp $0x0,(%rax)
3da4(6): jnz 0xfffffdf0(%rip)
3daa(5): jmp 0xfffffdd6(%rip)
3daf(1): nop 
3db0(6): mov 0xffffff48(%rbp),%eax
3db6(5): and $0xf000,%eax
3dbb(5): cmp $0x4000,%eax
3dc0(6): jz 0xfffffe31(%rip)
3dc6(6): mov $0x14,%r8d
3dcc(7): mov 0xfffffe98(%rbp),%rsi
3dd3(5): mov $0x4,%edi
3dd8(7): mov %r8d,0xfffffe90(%rbp)
3ddf(5): call 0xacd1(%rip)
3de4(7): lea 0xf2a5(%rip),%rsi
3deb(5): mov $0x5,%edx
3df0(2): xor %edi,%edi
3df2(3): mov %rax,%rbx
3df5(5): call 0xffffeaeb(%rip)
3dfa(7): mov 0xfffffe90(%rbp),%r8d
3e01(3): mov %rax,%rdx
3e04(3): mov %rbx,%rcx
3e07(2): xor %eax,%eax
3e09(2): xor %edi,%edi
3e0b(3): mov %r8d,%esi
3e0e(5): call 0xffffeea2(%rip)
3e13(2): xor %eax,%eax
3e15(5): jmp 0x8c(%rip)
3e1a(6): nop 0x0(%rax,%rax,1)
3e20(5): cmp $0x0,0x1e(%r13)
3e25(2): jz 0x4b(%rip)
3e27(3): mov %esi,%r14d
3e2a(4): and $0x12,%r14d
3e2e(3): mov %r14d,%eax
3e31(5): xor $0xfff,%eax
3e36(5): jmp 0xfffffea7(%rip)
3e3b(5): nop 0x0(%rax,%rax,1)
3e40(5): movzx 0x25(%r13),%esi
3e45(2): xor %edx,%edx
3e47(3): mov %r13,%rcx
3e4a(3): mov %r12,%rdi
3e4d(5): call 0x18a3(%rip)
3e52(2): test %al,%al
3e54(6): jnz 0xfffffd40(%rip)
3e5a(5): cmp $0x0,0x26(%r13)
3e5f(6): jz 0xfffffd35(%rip)
3e65(2): xor %eax,%eax
3e67(2): jmp 0x3a(%rip)
3e69(7): nop 0x0(%rax)
3e70(3): xor %r14d,%r14d
3e73(5): mov $0xfff,%eax
3e78(5): jmp 0xfffffe65(%rip)
3e7d(3): nop (%rax)
3e80(6): mov 0xfffffeb8(%rbp),%eax
3e86(5): and $0xf000,%eax
3e8b(5): cmp $0x4000,%eax
3e90(2): jnz 0x33(%rip)
3e92(7): mov 0xfffffe88(%rbp),%rax
3e99(3): mov $0x0,(%rax)
3e9c(5): mov $0x1,%eax
3ea1(4): mov 0xffffffc8(%rbp),%rcx
3ea5(9): xor $0x28,%rcx
3eae(6): jnz 0x10d(%rip)
3eb4(4): lea 0xffffffd8(%rbp),%rsp
3eb8(1): pop %rbx
3eb9(2): pop %r12
3ebb(2): pop %r13
3ebd(2): pop %r14
3ebf(2): pop %r15
3ec1(1): pop %rbp
3ec2(1): ret near (%rsp)
3ec3(3): mov %rbx,%rsi
3ec6(5): mov $0x4,%edi
3ecb(5): call 0xabe5(%rip)
3ed0(7): lea 0xf1d9(%rip),%rsi
3ed7(3): mov %rax,%rbx
3eda(5): mov $0x5,%edx
3edf(2): xor %edi,%edi
3ee1(5): call 0xffffe9ff(%rip)
3ee6(3): mov %rbx,%rcx
3ee9(3): mov %rax,%rdx
3eec(2): xor %esi,%esi
3eee(2): xor %eax,%eax
3ef0(2): xor %edi,%edi
3ef2(5): call 0xffffedbe(%rip)
3ef7(2): xor %eax,%eax
3ef9(2): jmp 0xffffffa8(%rip)
3efb(5): nop 0x0(%rax,%rax,1)
3f00(5): call 0x1b50(%rip)
3f05(6): mov 0xfffffeb8(%rbp),%esi
3f0b(2): not %eax
3f0d(3): and %eax,%r14d
3f10(2): mov %esi,%edx
3f12(2): mov %esi,%eax
3f14(2): not %edx
3f16(3): test %r14d,%edx
3f19(6): jnz 0xfffffe4e(%rip)
3f1f(5): jmp 0xfffffe38(%rip)
3f24(4): nop 0x0(%rax)
3f28(7): mov 0xfffffe98(%rbp),%rdi
3f2f(5): jmp 0xfffffbc2(%rip)
3f34(3): mov %r12,%rsi
3f37(5): mov $0x4,%edi
3f3c(5): call 0xab74(%rip)
3f41(7): lea 0xe9c9(%rip),%rsi
3f48(3): mov %rax,%r12
3f4b(5): mov $0x5,%edx
3f50(2): xor %edi,%edi
3f52(5): call 0xffffe98e(%rip)
3f57(3): mov %rax,%rbx
3f5a(5): call 0xffffe816(%rip)
3f5f(2): mov (%rax),%esi
3f61(3): mov %r12,%rcx
3f64(2): xor %eax,%eax
3f66(3): mov %rbx,%rdx
3f69(2): xor %edi,%edi
3f6b(5): call 0xffffed45(%rip)
3f70(2): xor %eax,%eax
3f72(5): jmp 0xffffff2f(%rip)
3f77(3): mov %r12,%rsi
3f7a(5): jmp 0xffffff4c(%rip)
3f7f(3): mov %r12,%rsi
3f82(5): mov $0x4,%edi
3f87(5): call 0xab29(%rip)
3f8c(5): mov $0x5,%edx
3f91(3): mov %rax,%r12
3f94(7): lea 0xf0f5(%rip),%rsi
3f9b(2): jmp 0xffffffb5(%rip)
3f9d(3): mov %r12,%rsi
3fa0(5): mov $0x4,%edi
3fa5(5): call 0xab0b(%rip)
3faa(5): mov $0x5,%edx
3faf(3): mov %rax,%r12
3fb2(7): lea 0xe971(%rip),%rsi
3fb9(2): jmp 0xffffff97(%rip)
3fbb(5): call 0xffffe975(%rip)

"make_dir_parents_private" :
3a00(1): push %rbp
3a01(3): mov %rsp,%rbp
3a04(2): push %r15
3a06(2): push %r14
3a08(2): push %r13
3a0a(2): push %r12
3a0c(3): mov %r9,%r13
3a0f(1): push %rbx
3a10(3): mov %rsi,%r15
3a13(3): mov %rdi,%rbx
3a16(7): sub $0x168,%rsp
3a1d(7): mov %rcx,0xfffffe80(%rbp)
3a24(7): mov %r8,0xfffffe88(%rbp)
3a2b(7): mov %rdx,0xfffffe70(%rbp)
3a32(9): mov $0x28,%rdx
3a3b(4): mov %rdx,0xffffffc8(%rbp)
3a3f(2): xor %edx,%edx
3a41(5): call 0xffffeebf(%rip)
3a46(4): lea 0x1(%rax),%rdx
3a4a(4): add $0x1f,%rax
3a4e(3): mov %rbx,%rsi
3a51(4): and $0xfffffff0,%rax
3a55(3): sub %rax,%rsp
3a58(5): lea 0xf(%rsp),%rdi
3a5d(4): and $0xfffffff0,%rdi
3a61(5): call 0xfffff0ff(%rip)
3a66(3): mov %rax,%rdi
3a69(3): mov %rax,%r12
3a6c(5): call 0x7a64(%rip)
3a71(3): mov %rax,%r14
3a74(4): add $0x1f,%rax
3a78(3): mov %r12,%rsi
3a7b(4): and $0xfffffff0,%rax
3a7f(3): mov %r14,%rdx
3a82(3): sub %rax,%rsp
3a85(5): lea 0xf(%rsp),%rbx
3a8a(4): and $0xfffffff0,%rbx
3a8e(3): mov %rbx,%rdi
3a91(5): call 0xfffff0cf(%rip)
3a96(7): mov 0xfffffe80(%rbp),%rax
3a9d(5): mov $0x0,0x0(%rbx,%r14,1)
3aa2(3): mov %rbx,%rsi
3aa5(5): mov $0x1,%edi
3aaa(7): mov $0x0,(%rax)
3ab1(7): lea 0xfffffea0(%rbp),%rax
3ab8(3): mov %rax,%rdx
3abb(7): mov %rax,0xfffffe90(%rbp)
3ac2(5): call 0xfffff0de(%rip)
3ac7(2): test %eax,%eax
3ac9(6): jz 0x3b7(%rip)
3acf(4): lea 0x0(%r12,%r15,1),%rdi
3ad3(3): cmp $0x2f,(%rdi)
3ad6(7): mov %rdi,0xfffffe98(%rbp)
3add(6): jnz 0x44b(%rip)
3ae3(5): nop 0x0(%rax,%rax,1)
3ae8(4): add $0x1,%rdi
3aec(3): cmp $0x2f,(%rdi)
3aef(2): jz 0xfffffff9(%rip)
3af1(7): lea 0xffffff30(%rbp),%rax
3af8(7): mov %rax,0xfffffe78(%rbp)
3aff(1): nop 
3b00(5): mov $0x2f,%esi
3b05(5): call 0xffffee6b(%rip)
3b0a(3): test %rax,%rax
3b0d(3): mov %rax,%rbx
3b10(6): jz 0x38c(%rip)
3b16(7): mov 0xfffffe90(%rbp),%rdx
3b1d(3): mov $0x0,(%rbx)
3b20(3): mov %r12,%rsi
3b23(5): mov $0x1,%edi
3b28(5): call 0xfffff078(%rip)
3b2d(2): test %eax,%eax
3b2f(3): mov %eax,%r14d
3b32(6): jnz 0x8e(%rip)
3b38(8): test $0xffffff00,0x1c(%r13)
3b40(2): jnz 0x80(%rip)
3b42(7): mov 0xfffffe98(%rbp),%rdi
3b49(2): xor %ecx,%ecx
3b4b(2): xor %edx,%edx
3b4d(3): mov %r13,%r8
3b50(3): mov %r12,%rsi
3b53(5): call 0x1acd(%rip)
3b58(2): test %al,%al
3b5a(6): jz 0x30b(%rip)
3b60(6): mov 0xfffffeb8(%rbp),%eax
3b66(5): and $0xf000,%eax
3b6b(5): cmp $0x4000,%eax
3b70(6): jnz 0x407(%rip)
3b76(7): mov 0xfffffe88(%rbp),%rax
3b7d(3): mov $0x0,(%rax)
3b80(a): mov $0x280375465148160,%rax
3b8a(4): test %rax,0x20(%r13)
3b8e(6): jnz 0x2b2(%rip)
3b94(4): cmp $0x2f,0x1(%rbx)
3b98(4): lea 0x1(%rbx),%rdi
3b9c(3): mov $0x2f,(%rbx)
3b9f(6): jnz 0xffffff61(%rip)
3ba5(3): nop (%rax)
3ba8(4): add $0x1,%rdi
3bac(3): cmp $0x2f,(%rdi)
3baf(2): jz 0xfffffff9(%rip)
3bb1(5): jmp 0xffffff4f(%rip)
3bb6(a): nop 0x0(%rax,%rax,1)
3bc0(7): mov 0xfffffe78(%rbp),%rdx
3bc7(7): mov 0xfffffe98(%rbp),%rsi
3bce(5): mov $0x1,%edi
3bd3(5): call 0xffffefcd(%rip)
3bd8(2): test %eax,%eax
3bda(6): jz 0x1d6(%rip)
3be0(5): call 0xffffeb90(%rip)
3be5(3): mov (%rax),%r8d
3be8(3): test %r8d,%r8d
3beb(6): jnz 0x1e1(%rip)
3bf1(5): mov $0xa8,%edi
3bf6(5): call 0xd42a(%rip)
3bfb(8): movdqa 0xffffff30(%rbp),%xmm0
3c03(3): mov %rax,%r15
3c06(7): mov 0xfffffe80(%rbp),%rcx
3c0d(3): movups %xmm0,(%rax)
3c10(8): movdqa 0xffffff40(%rbp),%xmm0
3c18(4): movups %xmm0,0x10(%rax)
3c1c(8): movdqa 0xffffff50(%rbp),%xmm0
3c24(4): movups %xmm0,0x20(%rax)
3c28(8): movdqa 0xffffff60(%rbp),%xmm0
3c30(4): movups %xmm0,0x30(%rax)
3c34(8): movdqa 0xffffff70(%rbp),%xmm0
3c3c(4): movups %xmm0,0x40(%rax)
3c40(5): movdqa 0xffffff80(%rbp),%xmm0
3c45(4): movups %xmm0,0x50(%rax)
3c49(5): movdqa 0xffffff90(%rbp),%xmm0
3c4e(4): movups %xmm0,0x60(%rax)
3c52(5): movdqa 0xffffffa0(%rbp),%xmm0
3c57(4): movups %xmm0,0x70(%rax)
3c5b(5): movdqa 0xffffffb0(%rbp),%xmm0
3c60(7): movups %xmm0,0x80(%rax)
3c67(3): mov %rbx,%rax
3c6a(8): mov $0x0,0x90(%r15)
3c72(3): sub %r12,%rax
3c75(3): test %r14d,%r14d
3c78(7): mov %rax,0x98(%r15)
3c7f(3): mov (%rcx),%rax
3c82(3): mov %r15,(%rcx)
3c85(7): mov %rax,0xa0(%r15)
3c8c(6): jz 0xfffffeb6(%rip)
3c92(4): mov 0x18(%r15),%edx
3c96(7): mov 0xfffffe98(%rbp),%rdi
3c9d(3): mov %r13,%r8
3ca0(5): mov $0x1,%ecx
3ca5(3): mov %r12,%rsi
3ca8(5): call 0x1978(%rip)
3cad(2): test %al,%al
3caf(6): jz 0x1b6(%rip)
3cb5(7): mov 0xfffffe88(%rbp),%rax
3cbc(4): mov 0x18(%r15),%esi
3cc0(3): mov $0x1,(%rax)
3cc3(5): cmp $0x0,0x1d(%r13)
3cc8(6): jz 0x158(%rip)
3cce(3): mov %esi,%r14d
3cd1(4): and $0x3f,%r14d
3cd5(3): mov %r14d,%eax
3cd8(5): xor $0xfff,%eax
3cdd(5): cmp $0x0,0x20(%r13)
3ce2(5): mov $0x1ff,%edx
3ce7(3): mov %r12,%rdi
3cea(3): cmovne %edx,%esi
3ced(2): and %eax,%esi
3cef(5): call 0xffffeaf1(%rip)
3cf4(2): test %eax,%eax
3cf6(6): jnz 0x23e(%rip)
3cfc(7): mov 0xfffffe70(%rbp),%rax
3d03(3): test %rax,%rax
3d06(2): jz 0x1b(%rip)
3d08(7): mov 0xfffffe98(%rbp),%rdx
3d0f(3): mov %rax,%rsi
3d12(3): mov %r12,%rcx
3d15(5): mov $0x1,%edi
3d1a(2): xor %eax,%eax
3d1c(5): call 0xffffef44(%rip)
3d21(7): mov 0xfffffe90(%rbp),%rdx
3d28(3): mov %r12,%rsi
3d2b(5): mov $0x1,%edi
3d30(5): call 0xffffebe0(%rip)
3d35(2): test %eax,%eax
3d37(6): jnz 0x248(%rip)
3d3d(5): cmp $0x0,0x1e(%r13)
3d42(6): mov 0xfffffeb8(%rbp),%esi
3d48(2): jnz 0x2e(%rip)
3d4a(2): mov %esi,%eax
3d4c(2): not %eax
3d4e(3): test %r14d,%eax
3d51(6): jnz 0x1af(%rip)
3d57(2): mov %esi,%eax
3d59(5): and $0x1c0,%eax
3d5e(5): cmp $0x1c0,%eax
3d63(2): jz 0x37(%rip)
3d65(2): mov %esi,%eax
3d67(3): or %eax,%r14d
3d6a(8): mov $0x1,0x90(%r15)
3d72(4): mov %r14d,0x18(%r15)
3d76(2): mov %esi,%eax
3d78(5): and $0x1c0,%eax
3d7d(5): cmp $0x1c0,%eax
3d82(2): jz 0x18(%rip)
3d84(6): or $0x1c0,%esi
3d8a(3): mov %r12,%rdi
3d8d(5): call 0xffffef03(%rip)
3d92(2): test %eax,%eax
3d94(6): jnz 0x209(%rip)
3d9a(7): mov 0xfffffe88(%rbp),%rax
3da1(3): cmp $0x0,(%rax)
3da4(6): jnz 0xfffffdf0(%rip)
3daa(5): jmp 0xfffffdd6(%rip)
3daf(1): nop 
3db0(6): mov 0xffffff48(%rbp),%eax
3db6(5): and $0xf000,%eax
3dbb(5): cmp $0x4000,%eax
3dc0(6): jz 0xfffffe31(%rip)
3dc6(6): mov $0x14,%r8d
3dcc(7): mov 0xfffffe98(%rbp),%rsi
3dd3(5): mov $0x4,%edi
3dd8(7): mov %r8d,0xfffffe90(%rbp)
3ddf(5): call 0xacd1(%rip)
3de4(7): lea 0xf2a5(%rip),%rsi
3deb(5): mov $0x5,%edx
3df0(2): xor %edi,%edi
3df2(3): mov %rax,%rbx
3df5(5): call 0xffffeaeb(%rip)
3dfa(7): mov 0xfffffe90(%rbp),%r8d
3e01(3): mov %rax,%rdx
3e04(3): mov %rbx,%rcx
3e07(2): xor %eax,%eax
3e09(2): xor %edi,%edi
3e0b(3): mov %r8d,%esi
3e0e(5): call 0xffffeea2(%rip)
3e13(2): xor %eax,%eax
3e15(5): jmp 0x8c(%rip)
3e1a(6): nop 0x0(%rax,%rax,1)
3e20(5): cmp $0x0,0x1e(%r13)
3e25(2): jz 0x4b(%rip)
3e27(3): mov %esi,%r14d
3e2a(4): and $0x12,%r14d
3e2e(3): mov %r14d,%eax
3e31(5): xor $0xfff,%eax
3e36(5): jmp 0xfffffea7(%rip)
3e3b(5): nop 0x0(%rax,%rax,1)
3e40(5): movzx 0x25(%r13),%esi
3e45(2): xor %edx,%edx
3e47(3): mov %r13,%rcx
3e4a(3): mov %r12,%rdi
3e4d(5): call 0x18a3(%rip)
3e52(2): test %al,%al
3e54(6): jnz 0xfffffd40(%rip)
3e5a(5): cmp $0x0,0x26(%r13)
3e5f(6): jz 0xfffffd35(%rip)
3e65(2): xor %eax,%eax
3e67(2): jmp 0x3a(%rip)
3e69(7): nop 0x0(%rax)
3e70(3): xor %r14d,%r14d
3e73(5): mov $0xfff,%eax
3e78(5): jmp 0xfffffe65(%rip)
3e7d(3): nop (%rax)
3e80(6): mov 0xfffffeb8(%rbp),%eax
3e86(5): and $0xf000,%eax
3e8b(5): cmp $0x4000,%eax
3e90(2): jnz 0x33(%rip)
3e92(7): mov 0xfffffe88(%rbp),%rax
3e99(3): mov $0x0,(%rax)
3e9c(5): mov $0x1,%eax
3ea1(4): mov 0xffffffc8(%rbp),%rcx
3ea5(9): xor $0x28,%rcx
3eae(6): jnz 0x10d(%rip)
3eb4(4): lea 0xffffffd8(%rbp),%rsp
3eb8(1): pop %rbx
3eb9(2): pop %r12
3ebb(2): pop %r13
3ebd(2): pop %r14
3ebf(2): pop %r15
3ec1(1): pop %rbp
3ec2(1): ret near (%rsp)
3ec3(3): mov %rbx,%rsi
3ec6(5): mov $0x4,%edi
3ecb(5): call 0xabe5(%rip)
3ed0(7): lea 0xf1d9(%rip),%rsi
3ed7(3): mov %rax,%rbx
3eda(5): mov $0x5,%edx
3edf(2): xor %edi,%edi
3ee1(5): call 0xffffe9ff(%rip)
3ee6(3): mov %rbx,%rcx
3ee9(3): mov %rax,%rdx
3eec(2): xor %esi,%esi
3eee(2): xor %eax,%eax
3ef0(2): xor %edi,%edi
3ef2(5): call 0xffffedbe(%rip)
3ef7(2): xor %eax,%eax
3ef9(2): jmp 0xffffffa8(%rip)
3efb(5): nop 0x0(%rax,%rax,1)
3f00(5): call 0x1b50(%rip)
3f05(6): mov 0xfffffeb8(%rbp),%esi
3f0b(2): not %eax
3f0d(3): and %eax,%r14d
3f10(2): mov %esi,%edx
3f12(2): mov %esi,%eax
3f14(2): not %edx
3f16(3): test %r14d,%edx
3f19(6): jnz 0xfffffe4e(%rip)
3f1f(5): jmp 0xfffffe38(%rip)
3f24(4): nop 0x0(%rax)
3f28(7): mov 0xfffffe98(%rbp),%rdi
3f2f(5): jmp 0xfffffbc2(%rip)
3f34(3): mov %r12,%rsi
3f37(5): mov $0x4,%edi
3f3c(5): call 0xab74(%rip)
3f41(7): lea 0xe9c9(%rip),%rsi
3f48(3): mov %rax,%r12
3f4b(5): mov $0x5,%edx
3f50(2): xor %edi,%edi
3f52(5): call 0xffffe98e(%rip)
3f57(3): mov %rax,%rbx
3f5a(5): call 0xffffe816(%rip)
3f5f(2): mov (%rax),%esi
3f61(3): mov %r12,%rcx
3f64(2): xor %eax,%eax
3f66(3): mov %rbx,%rdx
3f69(2): xor %edi,%edi
3f6b(5): call 0xffffed45(%rip)
3f70(2): xor %eax,%eax
3f72(5): jmp 0xffffff2f(%rip)
3f77(3): mov %r12,%rsi
3f7a(5): jmp 0xffffff4c(%rip)
3f7f(3): mov %r12,%rsi
3f82(5): mov $0x4,%edi
3f87(5): call 0xab29(%rip)
3f8c(5): mov $0x5,%edx
3f91(3): mov %rax,%r12
3f94(7): lea 0xf0f5(%rip),%rsi
3f9b(2): jmp 0xffffffb5(%rip)
3f9d(3): mov %r12,%rsi
3fa0(5): mov $0x4,%edi
3fa5(5): call 0xab0b(%rip)
3faa(5): mov $0x5,%edx
3faf(3): mov %rax,%r12
3fb2(7): lea 0xe971(%rip),%rsi
3fb9(2): jmp 0xffffff97(%rip)
3fbb(5): call 0xffffe975(%rip)

"re_protect" :
3fc0(1): push %rbp
3fc1(3): mov %rsp,%rbp
3fc4(2): push %r15
3fc6(2): push %r14
3fc8(2): push %r13
3fca(2): push %r12
3fcc(3): mov %rsi,%r14
3fcf(1): push %rbx
3fd0(3): mov %rdi,%r12
3fd3(3): mov %rdx,%rbx
3fd6(3): mov %rcx,%r13
3fd9(4): sub $0x48,%rsp
3fdd(9): mov $0x28,%rax
3fe6(4): mov %rax,0xffffffc8(%rbp)
3fea(2): xor %eax,%eax
3fec(5): call 0xffffe914(%rip)
3ff1(4): lea 0x1(%rax),%rdx
3ff5(4): add $0x1f,%rax
3ff9(3): mov %r12,%rsi
3ffc(4): and $0xfffffff0,%rax
4000(3): sub %rax,%rsp
4003(5): lea 0xf(%rsp),%rdi
4008(4): and $0xfffffff0,%rdi
400c(5): call 0xffffeb54(%rip)
4011(3): mov %rax,%r12
4014(3): add %r14,%rax
4017(3): test %rbx,%rbx
401a(4): mov %rax,0xffffff98(%rbp)
401e(6): jz 0x1b2(%rip)
4024(4): lea 0xffffffa0(%rbp),%r15
4028(2): jmp 0x4a(%rip)
402a(6): nop 0x0(%rax,%rax,1)
4030(5): cmp $0x0,0x1d(%r13)
4035(6): jnz 0xcb(%rip)
403b(5): movzx 0x1e(%r13),%r14d
4040(3): test %r14b,%r14b
4043(6): jnz 0x10d(%rip)
4049(7): cmp $0x0,0x90(%rbx)
4050(6): jnz 0x128(%rip)
4056(7): mov 0x98(%rbx),%rax
405d(5): mov $0x2f,0x0(%r12,%rax,1)
4062(7): mov 0xa0(%rbx),%rbx
4069(3): test %rbx,%rbx
406c(6): jz 0x164(%rip)
4072(5): cmp $0x0,0x1f(%r13)
4077(7): mov 0x98(%rbx),%rax
407e(5): mov $0x0,0x0(%r12,%rax,1)
4083(2): jz 0xffffffad(%rip)
4085(4): mov 0x50(%rbx),%rax
4089(4): mov 0x48(%rbx),%rdx
408d(3): mov %r15,%rsi
4090(3): mov %r12,%rdi
4093(4): mov %rdx,0xffffffa0(%rbp)
4097(4): mov %rax,0xffffffa8(%rbp)
409b(4): mov 0x58(%rbx),%rdx
409f(4): mov 0x60(%rbx),%rax
40a3(4): mov %rdx,0xffffffb0(%rbp)
40a7(4): mov %rax,0xffffffb8(%rbp)
40ab(5): call 0xc6a5(%rip)
40b0(2): test %eax,%eax
40b2(6): jz 0xffffff7e(%rip)
40b8(3): mov %r12,%rsi
40bb(5): mov $0x4,%edi
40c0(3): xor %r14d,%r14d
40c3(5): call 0xa9ed(%rip)
40c8(7): lea 0xf009(%rip),%rsi
40cf(5): mov $0x5,%edx
40d4(2): xor %edi,%edi
40d6(3): mov %rax,%r12
40d9(5): call 0xffffe807(%rip)
40de(3): mov %rax,%rbx
40e1(5): call 0xffffe68f(%rip)
40e6(2): mov (%rax),%esi
40e8(3): mov %r12,%rcx
40eb(3): mov %rbx,%rdx
40ee(2): xor %edi,%edi
40f0(2): xor %eax,%eax
40f2(5): call 0xffffebbe(%rip)
40f7(5): jmp 0xdf(%rip)
40fc(4): nop 0x0(%rax)
4100(3): mov 0x20(%rbx),%edx
4103(3): mov 0x1c(%rbx),%esi
4106(3): mov %r12,%rdi
4109(5): call 0xffffeaf7(%rip)
410e(2): test %eax,%eax
4110(6): jz 0xffffff2b(%rip)
4116(3): mov %r13,%rdi
4119(5): call 0x16f7(%rip)
411e(2): test %al,%al
4120(3): mov %eax,%r14d
4123(6): jz 0xd4(%rip)
4129(3): mov 0x20(%rbx),%edx
412c(5): mov $0xffffffff,%esi
4131(3): mov %r12,%rdi
4134(5): call 0xffffeacc(%rip)
4139(5): movzx 0x1e(%r13),%r14d
413e(3): test %r14b,%r14b
4141(6): jz 0xffffff08(%rip)
4147(9): nop 0x0(%rax,%rax,1)
4150(4): mov 0x18(%rbx),%r8d
4154(4): mov 0xffffff98(%rbp),%rdi
4158(5): mov $0xffffffff,%ecx
415d(3): mov %r12,%rdx
4160(2): mov %ecx,%esi
4162(5): call 0x643e(%rip)
4167(2): test %eax,%eax
4169(6): jz 0xfffffeed(%rip)
416f(3): xor %r14d,%r14d
4172(2): jmp 0x64(%rip)
4174(4): nop 0x0(%rax)
4178(3): mov 0x18(%rbx),%esi
417b(3): mov %r12,%rdi
417e(5): call 0xffffeb12(%rip)
4183(2): test %eax,%eax
4185(6): jz 0xfffffed1(%rip)
418b(3): mov %r12,%rsi
418e(5): mov $0x4,%edi
4193(5): call 0xa91d(%rip)
4198(7): lea 0xef81(%rip),%rsi
419f(3): mov %rax,%r12
41a2(5): mov $0x5,%edx
41a7(2): xor %edi,%edi
41a9(5): call 0xffffe737(%rip)
41ae(3): mov %rax,%rbx
41b1(5): call 0xffffe5bf(%rip)
41b6(2): mov (%rax),%esi
41b8(3): mov %r12,%rcx
41bb(3): mov %rbx,%rdx
41be(2): xor %edi,%edi
41c0(2): xor %eax,%eax
41c2(5): call 0xffffeaee(%rip)
41c7(2): jmp 0xf(%rip)
41c9(7): nop 0x0(%rax)
41d0(6): mov $0x1,%r14d
41d6(4): mov 0xffffffc8(%rbp),%rcx
41da(9): xor $0x28,%rcx
41e3(3): mov %r14d,%eax
41e6(2): jnz 0x2f(%rip)
41e8(4): lea 0xffffffd8(%rbp),%rsp
41ec(1): pop %rbx
41ed(2): pop %r12
41ef(2): pop %r13
41f1(2): pop %r14
41f3(2): pop %r15
41f5(1): pop %rbp
41f6(1): ret near (%rsp)
41f7(3): mov %r12,%rsi
41fa(5): mov $0x4,%edi
41ff(5): call 0xa8b1(%rip)
4204(5): mov $0x5,%edx
4209(3): mov %rax,%r12
420c(7): lea 0xeee5(%rip),%rsi
4213(2): jmp 0xffffff94(%rip)
4215(5): call 0xffffe71b(%rip)

"usage" :
4220(2): push %r13
4222(2): push %r12
4224(5): mov $0x5,%edx
4229(1): push %rbp
422a(1): push %rbx
422b(2): mov %edi,%ebp
422d(7): sub $0x88,%rsp
4234(7): mov 0x216365(%rip),%rbx
423b(9): mov $0x28,%rax
4244(5): mov %rax,0x78(%rsp)
4249(2): xor %eax,%eax
424b(2): test %edi,%edi
424d(2): jz 0x30(%rip)
424f(7): lea 0xeef2(%rip),%rsi
4256(2): xor %edi,%edi
4258(5): call 0xffffe688(%rip)
425d(7): mov 0x215e7c(%rip),%rdi
4264(3): mov %rax,%rdx
4267(3): mov %rbx,%rcx
426a(5): mov $0x1,%esi
426f(2): xor %eax,%eax
4271(5): call 0xffffeb3f(%rip)
4276(2): mov %ebp,%edi
4278(5): call 0xffffeb18(%rip)
427d(7): lea 0xeeec(%rip),%rsi
4284(2): xor %edi,%edi
4286(5): call 0xffffe65a(%rip)
428b(3): mov %rbx,%r8
428e(3): mov %rbx,%rcx
4291(3): mov %rbx,%rdx
4294(3): mov %rax,%rsi
4297(5): mov $0x1,%edi
429c(2): xor %eax,%eax
429e(5): call 0xffffe9c2(%rip)
42a3(7): mov 0x215dfe(%rip),%rbx
42aa(7): lea 0xef3f(%rip),%rsi
42b1(5): mov $0x5,%edx
42b6(2): xor %edi,%edi
42b8(5): call 0xffffe628(%rip)
42bd(3): mov %rbx,%rsi
42c0(3): mov %rax,%rdi
42c3(5): call 0xffffe7ed(%rip)
42c8(7): mov 0x215dd9(%rip),%rbx
42cf(7): lea 0xef5a(%rip),%rsi
42d6(5): mov $0x5,%edx
42db(2): xor %edi,%edi
42dd(5): call 0xffffe603(%rip)
42e2(3): mov %rbx,%rsi
42e5(3): mov %rax,%rdi
42e8(5): call 0xffffe7c8(%rip)
42ed(7): mov 0x215db4(%rip),%rbx
42f4(7): lea 0xef85(%rip),%rsi
42fb(5): mov $0x5,%edx
4300(2): xor %edi,%edi
4302(5): call 0xffffe5de(%rip)
4307(3): mov %rbx,%rsi
430a(3): mov %rax,%rdi
430d(5): call 0xffffe7a3(%rip)
4312(7): mov 0x215d8f(%rip),%rbx
4319(7): lea 0xf120(%rip),%rsi
4320(5): mov $0x5,%edx
4325(2): xor %edi,%edi
4327(5): call 0xffffe5b9(%rip)
432c(3): mov %rbx,%rsi
432f(3): mov %rax,%rdi
4332(5): call 0xffffe77e(%rip)
4337(7): mov 0x215d6a(%rip),%rbx
433e(7): lea 0xf2ab(%rip),%rsi
4345(5): mov $0x5,%edx
434a(2): xor %edi,%edi
434c(5): call 0xffffe594(%rip)
4351(3): mov %rbx,%rsi
4354(3): mov %rax,%rdi
4357(5): call 0xffffe759(%rip)
435c(7): mov 0x215d45(%rip),%rbx
4363(7): lea 0xf316(%rip),%rsi
436a(5): mov $0x5,%edx
436f(2): xor %edi,%edi
4371(5): call 0xffffe56f(%rip)
4376(3): mov %rbx,%rsi
4379(3): mov %rax,%rdi
437c(5): call 0xffffe734(%rip)
4381(7): mov 0x215d20(%rip),%rbx
4388(7): lea 0xf3c1(%rip),%rsi
438f(5): mov $0x5,%edx
4394(2): xor %edi,%edi
4396(5): call 0xffffe54a(%rip)
439b(3): mov %rbx,%rsi
439e(3): mov %rax,%rdi
43a1(5): call 0xffffe70f(%rip)
43a6(7): mov 0x215cfb(%rip),%rbx
43ad(7): lea 0xf4f4(%rip),%rsi
43b4(5): mov $0x5,%edx
43b9(2): xor %edi,%edi
43bb(5): call 0xffffe525(%rip)
43c0(3): mov %rbx,%rsi
43c3(3): mov %rax,%rdi
43c6(5): call 0xffffe6ea(%rip)
43cb(7): mov 0x215cd6(%rip),%rbx
43d2(7): lea 0xf567(%rip),%rsi
43d9(5): mov $0x5,%edx
43de(2): xor %edi,%edi
43e0(5): call 0xffffe500(%rip)
43e5(3): mov %rbx,%rsi
43e8(3): mov %rax,%rdi
43eb(5): call 0xffffe6c5(%rip)
43f0(7): mov 0x215cb1(%rip),%rbx
43f7(7): lea 0xf662(%rip),%rsi
43fe(5): mov $0x5,%edx
4403(2): xor %edi,%edi
4405(5): call 0xffffe4db(%rip)
440a(3): mov %rbx,%rsi
440d(3): mov %rax,%rdi
4410(5): call 0xffffe6a0(%rip)
4415(7): mov 0x215c8c(%rip),%rbx
441c(7): lea 0xf705(%rip),%rsi
4423(5): mov $0x5,%edx
4428(2): xor %edi,%edi
442a(5): call 0xffffe4b6(%rip)
442f(3): mov %rbx,%rsi
4432(3): mov %rax,%rdi
4435(5): call 0xffffe67b(%rip)
443a(7): mov 0x215c67(%rip),%rbx
4441(7): lea 0xf7f0(%rip),%rsi
4448(5): mov $0x5,%edx
444d(2): xor %edi,%edi
444f(5): call 0xffffe491(%rip)
4454(3): mov %rbx,%rsi
4457(3): mov %rax,%rdi
445a(5): call 0xffffe656(%rip)
445f(7): mov 0x215c42(%rip),%rbx
4466(7): lea 0xf90b(%rip),%rsi
446d(5): mov $0x5,%edx
4472(2): xor %edi,%edi
4474(5): call 0xffffe46c(%rip)
4479(3): mov %rbx,%rsi
447c(3): mov %rax,%rdi
447f(5): call 0xffffe631(%rip)
4484(7): mov 0x215c1d(%rip),%rbx
448b(7): lea 0xf9fe(%rip),%rsi
4492(5): mov $0x5,%edx
4497(2): xor %edi,%edi
4499(5): call 0xffffe447(%rip)
449e(3): mov %rbx,%rsi
44a1(3): mov %rax,%rdi
44a4(5): call 0xffffe60c(%rip)
44a9(7): mov 0x215bf8(%rip),%rbx
44b0(7): lea 0xfa09(%rip),%rsi
44b7(5): mov $0x5,%edx
44bc(2): xor %edi,%edi
44be(5): call 0xffffe422(%rip)
44c3(3): mov %rbx,%rsi
44c6(3): mov %rax,%rdi
44c9(5): call 0xffffe5e7(%rip)
44ce(7): mov 0x215bd3(%rip),%rbx
44d5(7): lea 0xfa1c(%rip),%rsi
44dc(5): mov $0x5,%edx
44e1(2): xor %edi,%edi
44e3(5): call 0xffffe3fd(%rip)
44e8(3): mov %rbx,%rsi
44eb(3): mov %rax,%rdi
44ee(5): call 0xffffe5c2(%rip)
44f3(7): mov 0x215bae(%rip),%rbx
44fa(7): lea 0xfb5f(%rip),%rsi
4501(5): mov $0x5,%edx
4506(2): xor %edi,%edi
4508(5): call 0xffffe3d8(%rip)
450d(3): mov %rbx,%rsi
4510(3): mov %rax,%rdi
4513(5): call 0xffffe59d(%rip)
4518(7): mov 0x215b89(%rip),%rbx
451f(7): lea 0xfc5a(%rip),%rsi
4526(5): mov $0x5,%edx
452b(2): xor %edi,%edi
452d(5): call 0xffffe3b3(%rip)
4532(3): mov %rbx,%rsi
4535(3): mov %rax,%rdi
4538(5): call 0xffffe578(%rip)
453d(7): mov 0x215b64(%rip),%rbx
4544(7): lea 0xfd15(%rip),%rsi
454b(5): mov $0x5,%edx
4550(2): xor %edi,%edi
4552(5): call 0xffffe38e(%rip)
4557(3): mov %rbx,%rsi
455a(3): mov %rax,%rdi
455d(5): call 0xffffe553(%rip)
4562(7): mov 0x215b3f(%rip),%rbx
4569(7): lea 0xfdd0(%rip),%rsi
4570(5): mov $0x5,%edx
4575(2): xor %edi,%edi
4577(5): call 0xffffe369(%rip)
457c(3): mov %rbx,%rsi
457f(3): mov %rax,%rdi
4582(7): lea 0xe3bc(%rip),%rbx
4589(5): call 0xffffe527(%rip)
458e(7): lea 0xe3b3(%rip),%rax
4595(7): lea 0xe3ed(%rip),%rcx
459c(9): mov $0x0,0x60(%rsp)
45a5(9): mov $0x0,0x68(%rsp)
45ae(3): mov %rsp,%rdx
45b1(4): mov %rax,(%rsp)
45b5(7): lea 0xe38e(%rip),%rax
45bc(5): mov %rcx,0x30(%rsp)
45c1(7): lea 0xe3cb(%rip),%rcx
45c8(5): mov %rax,0x8(%rsp)
45cd(7): lea 0xe3ee(%rip),%rax
45d4(5): mov %rcx,0x40(%rsp)
45d9(7): lea 0xe3bd(%rip),%rcx
45e0(5): mov %rax,0x10(%rsp)
45e5(7): lea 0xe36e(%rip),%rax
45ec(5): mov %rcx,0x50(%rsp)
45f1(5): mov %rax,0x18(%rsp)
45f6(7): lea 0xe373(%rip),%rax
45fd(5): mov %rax,0x20(%rsp)
4602(7): lea 0xe371(%rip),%rax
4609(5): mov %rax,0x28(%rsp)
460e(5): mov %rax,0x38(%rsp)
4613(5): mov %rax,0x48(%rsp)
4618(5): mov %rax,0x58(%rsp)
461d(3): nop (%rax)
4620(4): add $0x10,%rdx
4624(3): mov (%rdx),%rdi
4627(3): test %rdi,%rdi
462a(2): jz 0x15(%rip)
462c(5): mov $0x3,%ecx
4631(3): mov %rbx,%rsi
4634(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4636(3): setnbe %al
4639(2): sbb $0x0,%al
463b(2): test %al,%al
463d(2): jnz 0xffffffe3(%rip)
463f(4): mov 0x8(%rdx),%r12
4643(2): xor %edi,%edi
4645(5): mov $0x5,%edx
464a(7): lea 0xe356(%rip),%rsi
4651(3): test %r12,%r12
4654(6): jz 0xc7(%rip)
465a(5): call 0xffffe286(%rip)
465f(7): lea 0xfd82(%rip),%rcx
4666(7): lea 0xe351(%rip),%rdx
466d(3): mov %rax,%rsi
4670(5): mov $0x1,%edi
4675(2): xor %eax,%eax
4677(5): call 0xffffe5e9(%rip)
467c(2): xor %esi,%esi
467e(5): mov $0x5,%edi
4683(5): call 0xffffe5cd(%rip)
4688(3): test %rax,%rax
468b(2): jz 0x1e(%rip)
468d(7): lea 0xe338(%rip),%rsi
4694(5): mov $0x3,%edx
4699(3): mov %rax,%rdi
469c(5): call 0xffffe0f4(%rip)
46a1(2): test %eax,%eax
46a3(6): jnz 0x10d(%rip)
46a9(7): lea 0xe320(%rip),%rsi
46b0(2): xor %edi,%edi
46b2(5): mov $0x5,%edx
46b7(5): call 0xffffe229(%rip)
46bc(7): lea 0xe282(%rip),%rcx
46c3(7): lea 0xfd1e(%rip),%rdx
46ca(3): mov %rax,%rsi
46cd(5): mov $0x1,%edi
46d2(2): xor %eax,%eax
46d4(5): call 0xffffe58c(%rip)
46d9(3): cmp %rbx,%r12
46dc(7): lea 0xe281(%rip),%rcx
46e3(7): lea 0x1095c(%rip),%rbx
46ea(4): cmove %rcx,%rbx
46ee(7): lea 0xfd63(%rip),%rsi
46f5(2): xor %edi,%edi
46f7(5): mov $0x5,%edx
46fc(5): call 0xffffe1e4(%rip)
4701(3): mov %rbx,%rcx
4704(3): mov %rax,%rsi
4707(3): mov %r12,%rdx
470a(5): mov $0x1,%edi
470f(2): xor %eax,%eax
4711(5): call 0xffffe54f(%rip)
4716(5): jmp 0xfffffb60(%rip)
471b(5): call 0xffffe1c5(%rip)
4720(7): lea 0xfcc1(%rip),%rcx
4727(7): lea 0xe290(%rip),%rdx
472e(3): mov %rax,%rsi
4731(5): mov $0x1,%edi
4736(2): xor %eax,%eax
4738(5): call 0xffffe528(%rip)
473d(2): xor %esi,%esi
473f(5): mov $0x5,%edi
4744(5): call 0xffffe50c(%rip)
4749(3): test %rax,%rax
474c(2): jz 0x1a(%rip)
474e(7): lea 0xe277(%rip),%rsi
4755(5): mov $0x3,%edx
475a(3): mov %rax,%rdi
475d(5): call 0xffffe033(%rip)
4762(2): test %eax,%eax
4764(2): jnz 0x45(%rip)
4766(7): lea 0xe263(%rip),%rsi
476d(5): mov $0x5,%edx
4772(2): xor %edi,%edi
4774(7): lea 0xe1ca(%rip),%r12
477b(7): lea 0xe1e2(%rip),%rbx
4782(5): call 0xffffe15e(%rip)
4787(7): lea 0xe1b7(%rip),%rcx
478e(7): lea 0xfc53(%rip),%rdx
4795(3): mov %rax,%rsi
4798(5): mov $0x1,%edi
479d(2): xor %eax,%eax
479f(5): call 0xffffe4c1(%rip)
47a4(5): jmp 0xffffff4a(%rip)
47a9(7): lea 0xe195(%rip),%r12
47b0(7): mov 0x2158f1(%rip),%r13
47b7(7): lea 0xfc52(%rip),%rsi
47be(2): xor %edi,%edi
47c0(5): mov $0x5,%edx
47c5(5): call 0xffffe11b(%rip)
47ca(3): mov %r13,%rsi
47cd(3): mov %rax,%rdi
47d0(5): call 0xffffe2e0(%rip)
47d5(5): jmp 0xfffffed4(%rip)

"do_copy" :
47e0(1): push %rbp
47e1(3): mov %rsp,%rbp
47e4(2): push %r15
47e6(2): push %r14
47e8(2): push %r13
47ea(2): push %r12
47ec(3): movsxd %edi,%r12
47ef(1): push %rbx
47f0(3): mov %rsi,%rbx
47f3(7): sub $0xe8,%rsp
47fa(7): mov %rdx,0xffffff08(%rbp)
4801(7): mov $0x0,0xffffff1e(%rbp)
4808(9): mov $0x28,%rax
4811(4): mov %rax,0xffffffc8(%rbp)
4815(2): xor %eax,%eax
4817(8): test $0xffff00,0x14(%r8)
481f(3): setnz %al
4822(3): test %rdx,%rdx
4825(3): setz %dl
4828(3): movzx %dl,%edx
482b(3): cmp %r12d,%edx
482e(6): jnl 0x465(%rip)
4834(2): test %cl,%cl
4836(3): mov %r8,%r14
4839(6): jz 0xfd(%rip)
483f(8): cmp $0x0,0xffffff08(%rbp)
4847(6): jnz 0x428(%rip)
484d(4): cmp $0x2,%r12d
4851(6): jnle 0x3df(%rip)
4857(5): mov 0xfffffff8(%rbx,%r12,8),%rdi
485c(7): lea 0xffffff1e(%rbp),%rdx
4863(7): lea 0xffffff30(%rbp),%rsi
486a(3): movzx %al,%ecx
486d(5): call 0xfffff0c3(%rip)
4872(7): cmp $0x0,0x2158d8(%rip)
4879(3): mov (%rbx),%r12
487c(4): mov 0x8(%rbx),%rbx
4880(6): jnz 0x43c(%rip)
4886(5): cmp $0x0,0x16(%r14)
488b(2): jz 0x69(%rip)
488d(3): mov (%r14),%r13d
4890(3): test %r13d,%r13d
4893(2): jz 0x61(%rip)
4895(3): mov %rbx,%rsi
4898(3): mov %r12,%rdi
489b(5): call 0xffffe255(%rip)
48a0(2): test %eax,%eax
48a2(2): jnz 0x52(%rip)
48a4(7): cmp $0x0,0xffffff1e(%rbp)
48ab(2): jnz 0x49(%rip)
48ad(6): mov 0xffffff48(%rbp),%eax
48b3(5): and $0xf000,%eax
48b8(5): cmp $0x8000,%eax
48bd(2): jnz 0x37(%rip)
48bf(3): mov %rbx,%rsi
48c2(5): mov $0xffffff9c,%edi
48c7(3): mov %r13d,%edx
48ca(5): call 0x68f6(%rip)
48cf(3): mov %r14,%rsi
48d2(7): lea 0x215827(%rip),%r14
48d9(7): lea 0x215820(%rip),%rdi
48e0(5): mov $0x14,%ecx
48e5(3): mov %rax,%rbx
48e8(2): REP movsd rsi(%ds,10),rdi(%es,10)
48ea(a): mov $0x0,0x21580c(%rip)
48f4(7): lea 0xffffff28(%rbp),%r8
48fb(3): xor %r9d,%r9d
48fe(3): mov %r14,%rcx
4901(2): xor %edx,%edx
4903(3): mov %rbx,%rsi
4906(3): mov %r12,%rdi
4909(5): call 0x5287(%rip)
490e(3): mov %eax,%r15d
4911(4): mov 0xffffffc8(%rbp),%rcx
4915(9): xor $0x28,%rcx
491e(3): mov %r15d,%eax
4921(6): jnz 0x396(%rip)
4927(4): lea 0xffffffd8(%rbp),%rsp
492b(1): pop %rbx
492c(2): pop %r12
492e(2): pop %r13
4930(2): pop %r14
4932(2): pop %r15
4934(1): pop %rbp
4935(1): ret near (%rsp)
4936(8): cmp $0x0,0xffffff08(%rbp)
493e(6): jz 0x260(%rip)
4944(4): cmp $0x1,%r12d
4948(6): jnz 0x241(%rip)
494e(5): lea 0xffffffff(%r12),%eax
4953(6): mov $0x1,%r15d
4959(5): lea 0x8(%rbx,%rax,8),%rax
495e(7): mov %rax,0xffffff00(%rbp)
4965(7): lea 0xffffff1f(%rbp),%rax
496c(7): mov %rax,0xfffffef0(%rbp)
4973(7): lea 0xffffff28(%rbp),%rax
497a(7): mov %rax,0xfffffef8(%rbp)
4981(5): jmp 0xc3(%rip)
4986(a): nop 0x0(%rax,%rax,1)
4990(5): call 0xffffdf70(%rip)
4995(4): lea 0x1(%rax),%rdx
4999(4): add $0x1f,%rax
499d(3): mov %r13,%rsi
49a0(4): and $0xfffffff0,%rax
49a4(3): sub %rax,%rsp
49a7(5): lea 0xf(%rsp),%rdi
49ac(4): and $0xfffffff0,%rdi
49b0(5): call 0xffffe1b0(%rip)
49b5(3): mov %rax,%rdi
49b8(3): mov %rax,%r12
49bb(5): call 0x6c85(%rip)
49c0(7): mov 0xfffffef8(%rbp),%rdx
49c7(7): mov 0xffffff08(%rbp),%rdi
49ce(3): mov %r12,%rsi
49d1(5): call 0x6fef(%rip)
49d6(5): cmp $0x0,0x2e(%r14)
49db(7): mov 0xffffff28(%rbp),%rsi
49e2(3): mov %rax,%r12
49e5(7): lea 0xdfff(%rip),%rax
49ec(5): mov $0x0,%edx
49f1(7): lea 0xffffff20(%rbp),%rcx
49f8(7): lea 0xffffff1e(%rbp),%r8
49ff(3): mov %r14,%r9
4a02(3): mov %r12,%rdi
4a05(4): cmovne %rax,%rdx
4a09(3): sub %r12,%rsi
4a0c(5): call 0xffffeff4(%rip)
4a11(2): test %al,%al
4a13(6): jnz 0xc4(%rip)
4a19(7): movzx 0x215731(%rip),%eax
4a20(3): xor %r15d,%r15d
4a23(2): test %al,%al
4a25(6): jnz 0x126(%rip)
4a2b(3): mov %r12,%rdi
4a2e(4): add $0x8,%rbx
4a32(5): call 0xffffe3de(%rip)
4a37(7): cmp %rbx,0xffffff00(%rbp)
4a3e(6): jz 0xfffffed3(%rip)
4a44(7): cmp $0x0,0x215705(%rip)
4a4b(b): mov $0x0,0xffffff28(%rbp)
4a56(3): mov (%rbx),%r13
4a59(6): jnz 0x107(%rip)
4a5f(7): cmp $0x0,0x2156eb(%rip)
4a66(3): mov %r13,%rdi
4a69(6): jnz 0xffffff27(%rip)
4a6f(5): call 0x6b21(%rip)
4a74(3): mov %rax,%rdi
4a77(3): mov %rax,%r12
4a7a(5): call 0xffffde86(%rip)
4a7f(4): lea 0x1(%rax),%rdx
4a83(4): add $0x1f,%rax
4a87(3): mov %r12,%rsi
4a8a(4): and $0xfffffff0,%rax
4a8e(3): sub %rax,%rsp
4a91(5): lea 0xf(%rsp),%rdi
4a96(4): and $0xfffffff0,%rdi
4a9a(5): call 0xffffe0c6(%rip)
4a9f(3): mov %rax,%rdi
4aa2(3): mov %rax,%r12
4aa5(5): call 0x6b9b(%rip)
4aaa(7): lea 0xdf87(%rip),%rdi
4ab1(5): mov $0x3,%ecx
4ab6(3): mov %r12,%rsi
4ab9(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4abb(3): setnbe %al
4abe(2): sbb $0x0,%al
4ac0(2): test %al,%al
4ac2(6): jnz 0xae(%rip)
4ac8(7): mov 0xffffff08(%rbp),%rdi
4acf(5): call 0xc781(%rip)
4ad4(3): mov %rax,%r12
4ad7(7): movzx 0xffffff1e(%rbp),%edx
4ade(7): mov 0xfffffef0(%rbp),%r8
4ae5(3): xor %r9d,%r9d
4ae8(3): mov %r14,%rcx
4aeb(3): mov %r12,%rsi
4aee(3): mov %r13,%rdi
4af1(5): call 0x509f(%rip)
4af6(3): and %eax,%r15d
4af9(7): cmp $0x0,0x215651(%rip)
4b00(6): jz 0xffffff2b(%rip)
4b06(7): mov 0xffffff28(%rbp),%rsi
4b0d(7): mov 0xffffff20(%rbp),%rdx
4b14(3): mov %r14,%rcx
4b17(3): mov %r12,%rdi
4b1a(3): sub %r12,%rsi
4b1d(5): call 0xfffff4a3(%rip)
4b22(3): and %eax,%r15d
4b25(7): movzx 0x215625(%rip),%eax
4b2c(5): jmp 0xfffffef7(%rip)
4b31(7): nop 0x0(%rax)
4b38(7): mov 0xa0(%rdi),%rax
4b3f(7): mov %rax,0xffffff20(%rbp)
4b46(5): call 0xffffe2ca(%rip)
4b4b(7): mov 0xffffff20(%rbp),%rdi
4b52(3): test %rdi,%rdi
4b55(2): jnz 0xffffffe3(%rip)
4b57(5): jmp 0xfffffed4(%rip)
4b5c(4): nop 0x0(%rax)
4b60(3): mov %r13,%rdi
4b63(5): call 0x6add(%rip)
4b68(5): jmp 0xfffffef7(%rip)
4b6d(3): nop (%rax)
4b70(7): mov 0xffffff08(%rbp),%rdi
4b77(3): mov %r12,%rsi
4b7a(2): xor %edx,%edx
4b7c(5): call 0x6e44(%rip)
4b81(3): mov %rax,%r12
4b84(5): jmp 0xffffff53(%rip)
4b89(3): mov %r14,%rdi
4b8c(5): call 0xbe4(%rip)
4b91(3): mov %r14,%rdi
4b94(5): call 0xc0c(%rip)
4b99(5): jmp 0xfffffdb5(%rip)
4b9e(4): cmp $0x1,%r12d
4ba2(6): jz 0xfffffcd0(%rip)
4ba8(3): movsxd %r12d,%rdx
4bab(3): movzx %al,%ecx
4bae(5): lea 0xfffffff8(%rsi,%rdx,8),%r13
4bb3(7): lea 0xffffff1e(%rbp),%rdx
4bba(7): lea 0xffffff30(%rbp),%rsi
4bc1(4): mov 0x0(%r13),%rdi
4bc5(5): call 0xffffed6b(%rip)
4bca(2): test %al,%al
4bcc(2): jnz 0x44(%rip)
4bce(4): cmp $0x2,%r12d
4bd2(6): jz 0xfffffca0(%rip)
4bd8(4): mov 0x0(%r13),%rsi
4bdc(5): mov $0x4,%edi
4be1(5): call 0x9ecf(%rip)
4be6(7): lea 0xde2e(%rip),%rsi
4bed(3): mov %rax,%rbx
4bf0(5): mov $0x5,%edx
4bf5(2): xor %edi,%edi
4bf7(5): call 0xffffdce9(%rip)
4bfc(3): mov %rbx,%rcx
4bff(3): mov %rax,%rdx
4c02(2): xor %esi,%esi
4c04(5): mov $0x1,%edi
4c09(2): xor %eax,%eax
4c0b(5): call 0xffffe0a5(%rip)
4c10(4): sub $0x1,%r12d
4c14(3): movsxd %r12d,%rax
4c17(4): mov 0x0(%rbx,%rax,8),%rax
4c1b(3): test %rax,%rax
4c1e(7): mov %rax,0xffffff08(%rbp)
4c25(6): jnz 0xfffffd1f(%rip)
4c2b(5): jmp 0xfffffc47(%rip)
4c30(4): mov 0x10(%rsi),%rsi
4c34(5): mov $0x4,%edi
4c39(5): call 0x9e77(%rip)
4c3e(7): lea 0xddc5(%rip),%rsi
4c45(3): mov %rax,%rbx
4c48(5): mov $0x5,%edx
4c4d(2): xor %edi,%edi
4c4f(5): call 0xffffdc91(%rip)
4c54(3): mov %rbx,%rcx
4c57(3): mov %rax,%rdx
4c5a(2): xor %esi,%esi
4c5c(2): xor %edi,%edi
4c5e(2): xor %eax,%eax
4c60(5): call 0xffffe050(%rip)
4c65(5): mov $0x1,%edi
4c6a(5): call 0xfffff5b6(%rip)
4c6f(7): lea 0xf84a(%rip),%rsi
4c76(5): mov $0x5,%edx
4c7b(2): xor %edi,%edi
4c7d(5): call 0xffffdc63(%rip)
4c82(2): xor %esi,%esi
4c84(3): mov %rax,%rdx
4c87(5): mov $0x1,%edi
4c8c(2): xor %eax,%eax
4c8e(5): call 0xffffe022(%rip)
4c93(4): sub $0x1,%r12d
4c97(2): jnz 0x48(%rip)
4c99(3): mov (%rsi),%rsi
4c9c(5): mov $0x4,%edi
4ca1(5): call 0x9e0f(%rip)
4ca6(5): mov $0x5,%edx
4cab(3): mov %rax,%rbx
4cae(7): lea 0xf7db(%rip),%rsi
4cb5(2): jmp 0xffffff98(%rip)
4cb7(5): call 0xffffdc79(%rip)
4cbc(7): lea 0xf845(%rip),%rsi
4cc3(5): mov $0x5,%edx
4cc8(2): xor %edi,%edi
4cca(5): call 0xffffdc16(%rip)
4ccf(2): xor %esi,%esi
4cd1(3): mov %rax,%rdx
4cd4(2): xor %edi,%edi
4cd6(2): xor %eax,%eax
4cd8(5): call 0xffffdfd8(%rip)
4cdd(2): jmp 0xffffff88(%rip)
4cdf(5): mov $0x5,%edx
4ce4(7): lea 0xdd0a(%rip),%rsi
4ceb(2): jmp 0xffffffdd(%rip)

"writable_destination" :
4cf0(6): and $0xf000,%esi
4cf6(6): cmp $0xa000,%esi
4cfc(2): jz 0x1c(%rip)
4cfe(1): push %rbx
4cff(3): mov %rdi,%rbx
4d02(5): call 0xc2de(%rip)
4d07(2): test %al,%al
4d09(2): jz 0x17(%rip)
4d0b(5): mov $0x1,%eax
4d10(1): pop %rbx
4d11(1): ret near (%rsp)
4d12(6): nop 0x0(%rax,%rax,1)
4d18(5): mov $0x1,%eax
4d1d(1): ret near (%rsp)
4d1e(2): nop 
4d20(3): mov %rbx,%rdi
4d23(5): mov $0x2,%esi
4d28(5): call 0xffffe018(%rip)
4d2d(2): test %eax,%eax
4d2f(3): setz %al
4d32(1): pop %rbx
4d33(1): ret near (%rsp)

"write_zeros" :
4d40(8): cmp $0x0,0x215818(%rip)
4d48(2): push %r12
4d4a(3): mov %edi,%r12d
4d4d(1): push %rbp
4d4e(1): push %rbx
4d4f(3): mov %rsi,%rbx
4d52(2): jz 0x56(%rip)
4d54(3): test %rbx,%rbx
4d57(2): jnz 0xe(%rip)
4d59(2): jmp 0x3f(%rip)
4d5b(5): nop 0x0(%rax,%rax,1)
4d60(3): sub %rax,%rbx
4d63(2): jz 0x35(%rip)
4d65(7): cmp %rbx,0x2152ac(%rip)
4d6c(3): mov %rbx,%rbp
4d6f(7): mov 0x2157ea(%rip),%rsi
4d76(8): cmovbe 0x21529a(%rip),%rbp
4d7e(3): mov %r12d,%edi
4d81(3): mov %rbp,%rdx
4d84(5): call 0x6d5c(%rip)
4d89(3): cmp %rbp,%rax
4d8c(2): jz 0xffffffd4(%rip)
4d8e(1): pop %rbx
4d8f(2): xor %eax,%eax
4d91(1): pop %rbp
4d92(2): pop %r12
4d94(1): ret near (%rsp)
4d95(3): nop (%rax)
4d98(1): pop %rbx
4d99(5): mov $0x1,%eax
4d9e(1): pop %rbp
4d9f(2): pop %r12
4da1(1): ret near (%rsp)
4da2(6): nop 0x0(%rax,%rax,1)
4da8(7): mov 0x215269(%rip),%rdi
4daf(5): mov $0x1,%esi
4db4(5): call 0xffffdd1c(%rip)
4db9(3): test %rax,%rax
4dbc(2): jz 0xb(%rip)
4dbe(7): mov %rax,0x21579b(%rip)
4dc5(2): jmp 0xffffff8f(%rip)
4dc7(7): lea 0x215392(%rip),%rax
4dce(b): mov $0x400,0x21523f(%rip)
4dd9(7): mov %rax,0x215780(%rip)
4de0(5): jmp 0xffffff74(%rip)

"punch_hole" :
4df0(1): push %rbx
4df1(3): mov %rdx,%rcx
4df4(3): mov %rsi,%rdx
4df7(5): mov $0x3,%esi
4dfc(5): call 0xffffdca4(%rip)
4e01(2): test %eax,%eax
4e03(2): mov %eax,%ebx
4e05(2): js 0xb(%rip)
4e07(2): mov %ebx,%eax
4e09(1): pop %rbx
4e0a(1): ret near (%rsp)
4e0b(5): nop 0x0(%rax,%rax,1)
4e10(5): call 0xffffd960(%rip)
4e15(2): mov (%rax),%eax
4e17(3): cmp $0x26,%eax
4e1a(2): jz 0x7(%rip)
4e1c(3): cmp $0x5f,%eax
4e1f(2): jnz 0xffffffe8(%rip)
4e21(2): xor %ebx,%ebx
4e23(2): mov %ebx,%eax
4e25(1): pop %rbx
4e26(1): ret near (%rsp)

"emit_verbose" :
4e30(2): push %r12
4e32(1): push %rbp
4e33(3): mov %rdi,%r12
4e36(1): push %rbx
4e37(5): mov $0x1,%edi
4e3c(3): mov %rdx,%rbx
4e3f(3): mov %rsi,%rdx
4e42(5): mov $0x4,%esi
4e47(5): call 0x9b49(%rip)
4e4c(2): xor %edi,%edi
4e4e(3): mov %r12,%rdx
4e51(5): mov $0x4,%esi
4e56(3): mov %rax,%rbp
4e59(5): call 0x9b37(%rip)
4e5e(7): lea 0xff04(%rip),%rsi
4e65(3): mov %rax,%rdx
4e68(3): mov %rbp,%rcx
4e6b(2): xor %eax,%eax
4e6d(5): mov $0x1,%edi
4e72(5): call 0xffffddee(%rip)
4e77(3): test %rbx,%rbx
4e7a(2): jz 0x37(%rip)
4e7c(3): mov %rbx,%rsi
4e7f(5): mov $0x4,%edi
4e84(5): call 0x9c2c(%rip)
4e89(7): lea 0xfee2(%rip),%rsi
4e90(3): mov %rax,%rbx
4e93(5): mov $0x5,%edx
4e98(2): xor %edi,%edi
4e9a(5): call 0xffffda46(%rip)
4e9f(3): mov %rbx,%rdx
4ea2(3): mov %rax,%rsi
4ea5(5): mov $0x1,%edi
4eaa(2): xor %eax,%eax
4eac(5): call 0xffffddb4(%rip)
4eb1(7): mov 0x2151f0(%rip),%rdi
4eb8(4): mov 0x28(%rdi),%rax
4ebc(4): cmp 0x30(%rdi),%rax
4ec0(2): jnb 0x18(%rip)
4ec2(4): lea 0x1(%rax),%rdx
4ec6(4): mov %rdx,0x28(%rdi)
4eca(3): mov $0xa,(%rax)
4ecd(1): pop %rbx
4ece(1): pop %rbp
4ecf(2): pop %r12
4ed1(1): ret near (%rsp)
4ed2(6): nop 0x0(%rax,%rax,1)
4ed8(1): pop %rbx
4ed9(1): pop %rbp
4eda(2): pop %r12
4edc(5): mov $0xa,%esi
4ee1(5): jmp 0xffffdaaf(%rip)

"create_hard_link" :
4ef0(2): push %r13
4ef2(2): push %r12
4ef4(4): movzx %dl,%r9d
4ef8(1): push %rbp
4ef9(1): push %rbx
4efa(5): mov $0xffffff9c,%edx
4eff(3): mov %rdi,%r13
4f02(3): mov %rsi,%r12
4f05(2): mov %ecx,%ebp
4f07(4): sub $0x10,%rsp
4f0b(3): test %r8b,%r8b
4f0e(3): mov %rsi,%rcx
4f11(4): setnz %r8b
4f15(2): push $0xff
4f17(3): mov %rdi,%rsi
4f1a(4): movzx %r8b,%r8d
4f1e(2): mov %edx,%edi
4f20(4): shl/sal $0xa,%r8d
4f24(5): call 0x53ac(%rip)
4f29(2): test %eax,%eax
4f2b(2): mov %eax,%ebx
4f2d(1): pop %rdx
4f2e(1): pop %rcx
4f2f(2): jnle 0x69(%rip)
4f31(3): shr $0x1f,%ebx
4f34(3): and %bpl,%bl
4f37(2): jnz 0x19(%rip)
4f39(4): add $0x8,%rsp
4f3d(5): mov $0x1,%ebx
4f42(2): mov %ebx,%eax
4f44(1): pop %rbx
4f45(1): pop %rbp
4f46(2): pop %r12
4f48(2): pop %r13
4f4a(1): ret near (%rsp)
4f4b(5): nop 0x0(%rax,%rax,1)
4f50(3): mov %r12,%rsi
4f53(5): mov $0x4,%edi
4f58(5): call 0x9b58(%rip)
4f5d(7): lea 0xfe1c(%rip),%rsi
4f64(3): mov %rax,%rbp
4f67(5): mov $0x5,%edx
4f6c(2): xor %edi,%edi
4f6e(5): call 0xffffd972(%rip)
4f73(3): mov %rbp,%rdx
4f76(3): mov %rax,%rsi
4f79(5): mov $0x1,%edi
4f7e(2): xor %eax,%eax
4f80(5): call 0xffffdce0(%rip)
4f85(4): add $0x8,%rsp
4f89(2): mov %ebx,%eax
4f8b(1): pop %rbx
4f8c(1): pop %rbp
4f8d(2): pop %r12
4f8f(2): pop %r13
4f91(1): ret near (%rsp)
4f92(6): nop 0x0(%rax,%rax,1)
4f98(3): mov %r13,%rdx
4f9b(5): mov $0x4,%esi
4fa0(5): mov $0x1,%edi
4fa5(5): call 0x99eb(%rip)
4faa(3): mov %r12,%rdx
4fad(5): mov $0x4,%esi
4fb2(2): xor %edi,%edi
4fb4(3): mov %rax,%r13
4fb7(5): call 0x99d9(%rip)
4fbc(7): lea 0xf7bd(%rip),%rsi
4fc3(3): mov %rax,%rbp
4fc6(5): mov $0x5,%edx
4fcb(2): xor %edi,%edi
4fcd(5): call 0xffffd913(%rip)
4fd2(3): mov %r13,%r8
4fd5(3): mov %rbp,%rcx
4fd8(3): mov %rax,%rdx
4fdb(2): mov %ebx,%esi
4fdd(2): xor %eax,%eax
4fdf(2): xor %edi,%edi
4fe1(5): call 0xffffdccf(%rip)
4fe6(2): xor %ebx,%ebx
4fe8(4): add $0x8,%rsp
4fec(2): mov %ebx,%eax
4fee(1): pop %rbx
4fef(1): pop %rbp
4ff0(2): pop %r12
4ff2(2): pop %r13
4ff4(1): ret near (%rsp)

"overwrite_ok.isra.12" :
5000(2): push %r14
5002(2): push %r13
5004(3): mov %rdi,%r13
5007(2): push %r12
5009(1): push %rbp
500a(3): mov %rdx,%rbp
500d(1): push %rbx
500e(3): mov %rsi,%rbx
5011(3): mov %rbx,%rdi
5014(4): sub $0x20,%rsp
5018(2): mov (%rdx),%esi
501a(9): mov $0x28,%rax
5023(5): mov %rax,0x18(%rsp)
5028(2): xor %eax,%eax
502a(5): call 0xfffffcc6(%rip)
502f(2): test %al,%al
5031(6): jnz 0x97(%rip)
5037(3): mov 0x0(%rbp),%edi
503a(5): lea 0xc(%rsp),%r12
503f(3): mov %r12,%rsi
5042(5): call 0x67de(%rip)
5047(3): mov 0x0(%rbp),%ebp
504a(3): mov %rbx,%rsi
504d(5): mov $0x4,%edi
5052(5): mov $0x0,0x16(%rsp)
5057(5): call 0x9a59(%rip)
505c(6): and $0xfff,%ebp
5062(5): cmp $0x0,0x18(%r13)
5067(3): mov %rax,%r14
506a(7): mov 0x21552f(%rip),%rbx
5071(5): mov $0x5,%edx
5076(2): jnz 0x10(%rip)
5078(8): test $0xffff00,0x14(%r13)
5080(6): jz 0xb0(%rip)
5086(7): lea 0xf71b(%rip),%rsi
508d(2): xor %edi,%edi
508f(5): call 0xffffd851(%rip)
5094(3): mov %rax,%rdx
5097(4): sub $0x8,%rsp
509b(4): add $0x1,%r12
509f(7): mov 0x21503a(%rip),%rdi
50a6(2): push %r12
50a8(3): mov %rbp,%r9
50ab(3): mov %r14,%r8
50ae(3): mov %rbx,%rcx
50b1(5): mov $0x1,%esi
50b6(2): xor %eax,%eax
50b8(5): call 0xffffdcf8(%rip)
50bd(1): pop %rax
50be(1): pop %rdx
50bf(2): jmp 0x4f(%rip)
50c1(7): nop 0x0(%rax)
50c8(3): mov %rbx,%rsi
50cb(5): mov $0x4,%edi
50d0(5): call 0x99e0(%rip)
50d5(7): lea 0xfcb0(%rip),%rsi
50dc(7): mov 0x2154bd(%rip),%rbx
50e3(5): mov $0x5,%edx
50e8(2): xor %edi,%edi
50ea(3): mov %rax,%rbp
50ed(5): call 0xffffd7f3(%rip)
50f2(7): mov 0x214fe7(%rip),%rdi
50f9(3): mov %rax,%rdx
50fc(3): mov %rbp,%r8
50ff(3): mov %rbx,%rcx
5102(5): mov $0x1,%esi
5107(2): xor %eax,%eax
5109(5): call 0xffffdca7(%rip)
510e(5): call 0xc1a2(%rip)
5113(5): mov 0x18(%rsp),%rcx
5118(9): xor $0x28,%rcx
5121(2): jnz 0x25(%rip)
5123(4): add $0x20,%rsp
5127(1): pop %rbx
5128(1): pop %rbp
5129(2): pop %r12
512b(2): pop %r13
512d(2): pop %r14
512f(1): ret near (%rsp)
5130(7): lea 0xf6a1(%rip),%rsi
5137(2): xor %edi,%edi
5139(5): call 0xffffd7a7(%rip)
513e(3): mov %rax,%rdx
5141(5): jmp 0xffffff56(%rip)
5146(5): call 0xffffd7ea(%rip)

"create_hole" :
5150(2): push %r13
5152(2): push %r12
5154(3): mov %rsi,%r13
5157(1): push %rbp
5158(1): push %rbx
5159(3): mov %edx,%r12d
515c(3): mov %rcx,%rsi
515f(5): mov $0x1,%edx
5164(2): mov %edi,%ebp
5166(4): sub $0x8,%rsp
516a(3): mov %rcx,%rbx
516d(5): call 0xffffd853(%rip)
5172(3): test %rax,%rax
5175(2): js 0x7b(%rip)
5177(3): test %r12b,%r12b
517a(2): jnz 0x16(%rip)
517c(4): add $0x8,%rsp
5180(5): mov $0x1,%eax
5185(1): pop %rbx
5186(1): pop %rbp
5187(2): pop %r12
5189(2): pop %r13
518b(1): ret near (%rsp)
518c(4): nop 0x0(%rax)
5190(3): sub %rbx,%rax
5193(3): mov %rbx,%rdx
5196(2): mov %ebp,%edi
5198(3): mov %rax,%rsi
519b(5): call 0xfffffc55(%rip)
51a0(2): test %eax,%eax
51a2(2): jns 0xffffffda(%rip)
51a4(3): mov %r13,%rsi
51a7(5): mov $0x4,%edi
51ac(5): call 0x9904(%rip)
51b1(7): lea 0xfbf7(%rip),%rsi
51b8(3): mov %rax,%rbp
51bb(5): mov $0x5,%edx
51c0(2): xor %edi,%edi
51c2(5): call 0xffffd71e(%rip)
51c7(3): mov %rax,%rbx
51ca(5): call 0xffffd5a6(%rip)
51cf(2): mov (%rax),%esi
51d1(3): mov %rbp,%rcx
51d4(3): mov %rbx,%rdx
51d7(2): xor %eax,%eax
51d9(2): xor %edi,%edi
51db(5): call 0xffffdad5(%rip)
51e0(4): add $0x8,%rsp
51e4(2): xor %eax,%eax
51e6(1): pop %rbx
51e7(1): pop %rbp
51e8(2): pop %r12
51ea(2): pop %r13
51ec(1): ret near (%rsp)
51ed(3): nop (%rax)
51f0(3): mov %r13,%rsi
51f3(5): mov $0x4,%edi
51f8(5): call 0x98b8(%rip)
51fd(5): mov $0x5,%edx
5202(3): mov %rax,%rbp
5205(7): lea 0xfb93(%rip),%rsi
520c(2): jmp 0xffffffb4(%rip)

"sparse_copy" :
5210(2): push %r15
5212(2): push %r14
5214(2): push %r13
5216(2): push %r12
5218(1): push %rbp
5219(1): push %rbx
521a(4): sub $0x78,%rsp
521e(8): mov 0xb0(%rsp),%rax
5226(8): mov 0xc8(%rsp),%rbx
522e(8): mov 0xd0(%rsp),%r10
5236(5): mov %r9b,0x1f(%rsp)
523b(5): mov %rax,0x58(%rsp)
5240(8): mov 0xb8(%rsp),%rax
5248(4): mov $0x0,(%r10)
524c(5): mov %rbx,0x40(%rsp)
5251(5): mov %r10,0x60(%rsp)
5256(7): mov $0x0,(%rbx)
525d(5): mov %rax,0x10(%rsp)
5262(8): mov 0xc0(%rsp),%rax
526a(3): test %rax,%rax
526d(5): mov %rax,0x28(%rsp)
5272(6): jz 0x3a1(%rip)
5278(3): test %r8,%r8
527b(5): mov %r8,0x50(%rsp)
5280(5): mov %r9d,0x6c(%rsp)
5285(4): cmove %rcx,%r8
5289(5): mov %rcx,0x38(%rsp)
528e(5): mov %rdx,0x20(%rsp)
5293(4): mov %esi,0x18(%rsp)
5297(4): mov %edi,0x68(%rsp)
529b(3): xor %r13d,%r13d
529e(5): mov %r8,0x48(%rsp)
52a3(3): xor %r15d,%r15d
52a6(5): mov 0x38(%rsp),%rax
52ab(5): mov 0x28(%rsp),%rdx
52b0(5): mov 0x20(%rsp),%rsi
52b5(4): mov 0x68(%rsp),%edi
52b9(3): cmp %rdx,%rax
52bc(4): cmovbe %rax,%rdx
52c0(5): call 0xffffd7c0(%rip)
52c5(3): test %rax,%rax
52c8(5): mov %rax,0x30(%rsp)
52cd(2): jns 0x63(%rip)
52cf(5): call 0xffffd4a1(%rip)
52d4(3): cmp $0x4,(%rax)
52d7(2): jz 0xffffffcf(%rip)
52d9(5): mov 0x58(%rsp),%rsi
52de(5): mov $0x4,%edi
52e3(3): mov %rax,%rbx
52e6(3): xor %r15d,%r15d
52e9(5): call 0x97c7(%rip)
52ee(7): lea 0xfad0(%rip),%rsi
52f5(5): mov $0x5,%edx
52fa(2): xor %edi,%edi
52fc(3): mov %rax,%rbp
52ff(5): call 0xffffd5e1(%rip)
5304(2): mov (%rbx),%esi
5306(3): mov %rax,%rdx
5309(3): mov %rbp,%rcx
530c(2): xor %edi,%edi
530e(2): xor %eax,%eax
5310(5): call 0xffffd9a0(%rip)
5315(4): add $0x78,%rsp
5319(3): mov %r15d,%eax
531c(1): pop %rbx
531d(1): pop %rbp
531e(2): pop %r12
5320(2): pop %r13
5322(2): pop %r14
5324(2): pop %r15
5326(1): ret near (%rsp)
5327(9): nop 0x0(%rax,%rax,1)
5330(6): jz 0x12f(%rip)
5336(5): mov 0x40(%rsp),%rax
533b(5): mov 0x30(%rsp),%rbp
5340(3): mov %r15d,%ecx
5343(5): mov 0x20(%rsp),%r14
5348(5): mov 0x48(%rsp),%r10
534d(3): add %rbp,(%rax)
5350(6): cmp $0x0,0x50(%rsp)
5356(3): mov %r14,%r11
5359(3): mov %r10,%r15
535c(5): setnz 0x1d(%rsp)
5361(7): nop 0x0(%rax)
5368(3): cmp %r15,%rbp
536b(3): mov %r15,%rbx
536e(4): cmovbe %rbp,%rbx
5372(3): test %rbx,%rbx
5375(4): setnz %r12b
5379(5): and 0x1d(%rsp),%r12b
537e(6): jz 0x112(%rip)
5384(3): mov %r14,%rsi
5387(3): mov %rbx,%rdx
538a(3): cmp $0x0,(%rsi)
538d(6): jnz 0x233(%rip)
5393(4): add $0x1,%rsi
5397(4): sub $0x1,%rdx
539b(6): jz 0x18d(%rip)
53a1(3): test $0xf,%dl
53a4(2): jnz 0xffffffe6(%rip)
53a6(3): mov %r14,%rdi
53a9(5): mov %r11,0x8(%rsp)
53ae(4): mov %cl,0x1e(%rsp)
53b2(5): call 0xffffd6de(%rip)
53b7(5): movzx 0x1e(%rsp),%ecx
53bc(2): test %eax,%eax
53be(5): mov 0x8(%rsp),%r11
53c3(4): setz %r12b
53c7(3): mov %r12d,%edx
53ca(2): xor %ecx,%edx
53cc(2): test %eax,%eax
53ce(3): setnz %al
53d1(3): test %r13,%r13
53d4(4): setnz %r9b
53d8(3): and %edx,%r9d
53db(3): cmp %r15,%rbp
53de(6): jnbe 0x15a(%rip)
53e4(2): test %al,%al
53e6(6): jz 0x152(%rip)
53ec(3): test %r9b,%r9b
53ef(6): jz 0xab(%rip)
53f5(6): mov $0x1,%r15d
53fb(2): test %cl,%cl
53fd(4): mov %cl,0x1e(%rsp)
5401(6): jnz 0xb1(%rip)
5407(4): mov 0x18(%rsp),%edi
540b(3): mov %r13,%rdx
540e(3): mov %r11,%rsi
5411(5): mov %r9b,0x8(%rsp)
5416(5): call 0x66ca(%rip)
541b(3): cmp %rax,%r13
541e(6): movzx 0x8(%rsp),%r9d
5424(5): movzx 0x1e(%rsp),%ecx
5429(6): jnz 0x1a4(%rip)
542f(3): test %r15d,%r15d
5432(3): mov %rbx,%r13
5435(6): jz 0x113(%rip)
543b(3): test %rbx,%rbx
543e(6): jnz 0x122(%rip)
5444(5): mov 0x30(%rsp),%rdi
5449(5): sub %rdi,0x28(%rsp)
544e(3): mov %r12d,%r15d
5451(5): mov 0x60(%rsp),%rax
5456(3): mov %r12b,(%rax)
5459(6): jnz 0xfffffe4d(%rip)
545f(3): test %r15b,%r15b
5462(6): jz 0x1b1(%rip)
5468(5): movzx 0x6c(%rsp),%edx
546d(5): mov 0x10(%rsp),%rsi
5472(3): mov %r13,%rcx
5475(4): mov 0x18(%rsp),%edi
5479(4): add $0x78,%rsp
547d(1): pop %rbx
547e(1): pop %rbp
547f(2): pop %r12
5481(2): pop %r13
5483(2): pop %r14
5485(2): pop %r15
5487(5): jmp 0xfffffcc9(%rip)
548c(4): nop 0x0(%rax)
5490(3): cmp $0x1,%cl
5493(2): jz 0x55(%rip)
5495(3): cmp %r15,%rbp
5498(2): jnbe 0x50(%rip)
549a(3): add %rbx,%r13
549d(3): xor %r9d,%r9d
54a0(2): test %cl,%cl
54a2(6): mov $0x1,%r15d
54a8(4): mov %cl,0x1e(%rsp)
54ac(6): jz 0xffffff5b(%rip)
54b2(5): movzx 0x1f(%rsp),%edx
54b7(5): mov 0x10(%rsp),%rsi
54bc(3): mov %r13,%rcx
54bf(4): mov 0x18(%rsp),%edi
54c3(5): mov %r9b,0x1e(%rsp)
54c8(5): call 0xfffffc88(%rip)
54cd(2): test %al,%al
54cf(6): movzx 0x1e(%rsp),%r9d
54d5(6): jnz 0xffffff5a(%rip)
54db(3): mov %eax,%r15d
54de(5): jmp 0xfffffe37(%rip)
54e3(5): nop 0x0(%rax,%rax,1)
54e8(3): test %rbx,%rbx
54eb(2): jnz 0xd(%rip)
54ed(3): mov %ecx,%r12d
54f0(2): jmp 0xffffffaa(%rip)
54f2(3): mov %r12d,%ecx
54f5(3): nop (%rax)
54f8(a): mov $0x9223372036854775807,%rax
5502(3): sub %rbx,%rax
5505(3): cmp %r13,%rax
5508(2): jb 0x78(%rip)
550a(3): add %rbx,%r13
550d(3): add %rbx,%r14
5510(3): mov %rbx,%r15
5513(3): sub %r15,%rbp
5516(6): jnz 0xfffffe52(%rip)
551c(3): mov %ecx,%r12d
551f(5): jmp 0xffffff25(%rip)
5524(4): nop 0x0(%rax)
5528(3): mov %ecx,%r9d
552b(4): xor $0x1,%r9d
552f(3): test %r13,%r13
5532(3): setnz %al
5535(3): and %eax,%r9d
5538(3): test %r9b,%r9b
553b(2): jz 0xffffffb7(%rip)
553d(3): xor %r15d,%r15d
5540(5): jmp 0xfffffebb(%rip)
5545(3): nop (%rax)
5548(3): mov %r14,%r11
554b(3): mov %r12d,%ecx
554e(3): add %rbx,%r14
5551(3): mov %rbx,%r15
5554(2): jmp 0xffffffbf(%rip)
5556(a): nop 0x0(%rax,%rax,1)
5560(3): xor %r15d,%r15d
5563(3): test %r9b,%r9b
5566(3): mov %r12d,%ecx
5569(3): mov %r14,%r11
556c(2): jnz 0xffffffa7(%rip)
556e(3): add %rbx,%r14
5571(3): mov %rbx,%r15
5574(3): xor %r13d,%r13d
5577(2): jmp 0xffffff9c(%rip)
5579(7): nop 0x0(%rax)
5580(5): mov 0x58(%rsp),%rsi
5585(5): mov $0x4,%edi
558a(3): xor %r15d,%r15d
558d(5): call 0x9523(%rip)
5592(7): lea 0xf84e(%rip),%rsi
5599(3): mov %rax,%rbx
559c(5): mov $0x5,%edx
55a1(2): xor %edi,%edi
55a3(5): call 0xffffd33d(%rip)
55a8(3): mov %rbx,%rcx
55ab(3): mov %rax,%rdx
55ae(2): xor %esi,%esi
55b0(2): xor %edi,%edi
55b2(2): xor %eax,%eax
55b4(5): call 0xffffd6fc(%rip)
55b9(5): jmp 0xfffffd5c(%rip)
55be(2): nop 
55c0(3): mov %r12d,%eax
55c3(2): mov %ecx,%edx
55c5(3): xor %r12d,%r12d
55c8(5): jmp 0xfffffe09(%rip)
55cd(5): mov 0x10(%rsp),%rsi
55d2(5): mov $0x4,%edi
55d7(3): mov %ecx,%r15d
55da(5): call 0x94d6(%rip)
55df(7): lea 0xf7f0(%rip),%rsi
55e6(2): xor %edi,%edi
55e8(5): mov $0x5,%edx
55ed(3): mov %rax,%rbp
55f0(5): call 0xffffd2f0(%rip)
55f5(3): mov %rax,%rbx
55f8(5): call 0xffffd178(%rip)
55fd(2): mov (%rax),%esi
55ff(3): mov %rbp,%rcx
5602(3): mov %rbx,%rdx
5605(2): xor %edi,%edi
5607(2): xor %eax,%eax
5609(5): call 0xffffd6a7(%rip)
560e(5): jmp 0xfffffd07(%rip)
5613(6): mov $0x1,%r15d
5619(5): jmp 0xfffffcfc(%rip)

"set_process_security_ctx" :
5620(2): push %r13
5622(2): push %r12
5624(1): push %rbp
5625(1): push %rbx
5626(3): mov %r8,%rbp
5629(4): sub $0x8,%rsp
562d(5): cmp $0x0,0x25(%r8)
5632(2): jz 0x6e(%rip)
5634(3): mov %rdi,%r13
5637(5): call 0xffffd139(%rip)
563c(4): cmp $0x0,0x23(%rbp)
5640(3): mov %rax,%r12
5643(2): jnz 0x7d(%rip)
5645(3): mov %r13,%rsi
5648(5): mov $0x4,%edi
564d(8): mov $0x5f,(%r12)
5655(5): call 0x945b(%rip)
565a(7): lea 0xf1af(%rip),%rsi
5661(5): mov $0x5,%edx
5666(2): xor %edi,%edi
5668(3): mov %rax,%rbx
566b(5): call 0xffffd275(%rip)
5670(4): mov (%r12),%esi
5674(3): mov %rbx,%rcx
5677(3): mov %rax,%rdx
567a(2): xor %edi,%edi
567c(2): xor %eax,%eax
567e(5): call 0xffffd632(%rip)
5683(4): movzx 0x26(%rbp),%ebx
5687(4): add $0x8,%rsp
568b(3): xor $0x1,%ebx
568e(2): mov %ebx,%eax
5690(1): pop %rbx
5691(1): pop %rbp
5692(2): pop %r12
5694(2): pop %r13
5696(1): ret near (%rsp)
5697(9): nop 0x0(%rax,%rax,1)
56a0(2): mov %ecx,%ebx
56a2(4): and 0x21(%r8),%bl
56a6(2): jnz 0x32(%rip)
56a8(4): add $0x8,%rsp
56ac(5): mov $0x1,%ebx
56b1(2): mov %ebx,%eax
56b3(1): pop %rbx
56b4(1): pop %rbp
56b5(2): pop %r12
56b7(2): pop %r13
56b9(1): ret near (%rsp)
56ba(6): nop 0x0(%rax,%rax,1)
56c0(4): movzx 0x26(%rbp),%ebx
56c4(2): test %bl,%bl
56c6(6): jnz 0xffffff7f(%rip)
56cc(6): mov $0x5f,(%rax)
56d2(2): jmp 0xffffffb5(%rip)
56d4(4): nop 0x0(%rax)
56d8(5): call 0xffffd098(%rip)
56dd(6): mov $0x5f,(%rax)
56e3(4): add $0x8,%rsp
56e7(2): mov %ebx,%eax
56e9(1): pop %rbx
56ea(1): pop %rbp
56eb(2): pop %r12
56ed(2): pop %r13
56ef(1): ret near (%rsp)

"set_file_security_ctx" :
56f0(2): push %r12
56f2(1): push %rbp
56f3(3): mov %rcx,%rbp
56f6(1): push %rbx
56f7(3): mov %rdi,%r12
56fa(5): call 0xffffd076(%rip)
56ff(4): cmp $0x0,0x23(%rbp)
5703(3): mov %rax,%rbx
5706(2): jz 0x8(%rip)
5708(4): cmp $0x0,0x26(%rbp)
570c(2): jz 0x4c(%rip)
570e(3): mov %r12,%rdx
5711(6): mov $0x5f,(%rbx)
5717(5): mov $0x4,%esi
571c(2): xor %edi,%edi
571e(5): call 0x9272(%rip)
5723(7): lea 0xf10e(%rip),%rsi
572a(5): mov $0x5,%edx
572f(2): xor %edi,%edi
5731(3): mov %rax,%rbp
5734(5): call 0xffffd1ac(%rip)
5739(2): mov (%rbx),%esi
573b(3): mov %rbp,%rcx
573e(3): mov %rax,%rdx
5741(2): xor %edi,%edi
5743(2): xor %eax,%eax
5745(5): call 0xffffd56b(%rip)
574a(1): pop %rbx
574b(2): xor %eax,%eax
574d(1): pop %rbp
574e(2): pop %r12
5750(1): ret near (%rsp)
5751(7): nop 0x0(%rax)
5758(6): mov $0x5f,(%rax)
575e(2): xor %eax,%eax
5760(1): pop %rbx
5761(1): pop %rbp
5762(2): pop %r12
5764(1): ret near (%rsp)

"dest_info_init" :
5770(7): lea 0x7779(%rip),%r8
5777(7): lea 0x7702(%rip),%rcx
577e(2): xor %esi,%esi
5780(7): lea 0x76b9(%rip),%rdx
5787(1): push %rbx
5788(3): mov %rdi,%rbx
578b(5): mov $0x3d,%edi
5790(5): call 0x6c40(%rip)
5795(4): mov %rax,0x40(%rbx)
5799(1): pop %rbx
579a(1): ret near (%rsp)

"src_info_init" :
57a0(7): lea 0x7749(%rip),%r8
57a7(7): lea 0x76d2(%rip),%rcx
57ae(2): xor %esi,%esi
57b0(7): lea 0x76b9(%rip),%rdx
57b7(1): push %rbx
57b8(3): mov %rdi,%rbx
57bb(5): mov $0x3d,%edi
57c0(5): call 0x6c10(%rip)
57c5(4): mov %rax,0x48(%rbx)
57c9(1): pop %rbx
57ca(1): ret near (%rsp)

"cp_options_default" :
57d0(4): pxor %xmm0,%xmm0
57d4(1): push %rbx
57d5(3): mov %rdi,%rbx
57d8(3): movups %xmm0,(%rdi)
57db(4): movups %xmm0,0x10(%rdi)
57df(4): movups %xmm0,0x20(%rdi)
57e3(4): movups %xmm0,0x30(%rdi)
57e7(4): movups %xmm0,0x40(%rdi)
57eb(5): call 0xffffd215(%rip)
57f0(2): test %eax,%eax
57f2(7): mov $0xffffffff,0x34(%rbx)
57f9(3): setz %al
57fc(3): mov %al,0x1b(%rbx)
57ff(3): mov %al,0x1a(%rbx)
5802(1): pop %rbx
5803(1): ret near (%rsp)

"chown_failure_ok" :
5810(1): push %rbx
5811(3): mov %rdi,%rbx
5814(5): call 0xffffcf5c(%rip)
5819(2): mov (%rax),%edx
581b(3): cmp $0x1,%edx
581e(3): setz %al
5821(3): cmp $0x16,%edx
5824(3): setz %dl
5827(2): or %dl,%al
5829(2): jz 0x9(%rip)
582b(4): movzx 0x1a(%rbx),%eax
582f(3): xor $0x1,%eax
5832(1): pop %rbx
5833(1): ret near (%rsp)

"set_owner" :
5840(2): push %r15
5842(2): push %r14
5844(2): push %r13
5846(2): push %r12
5848(3): mov %rsi,%r13
584b(1): push %rbp
584c(1): push %rbx
584d(3): mov %rdi,%rbp
5850(2): mov %edx,%ebx
5852(4): sub $0x8,%rsp
5856(3): test %r8b,%r8b
5859(4): mov 0x1c(%rcx),%r14d
585d(4): mov 0x20(%rcx),%r12d
5861(2): jnz 0x34(%rip)
5863(a): mov $0x71776119061217535,%rax
586d(4): test %rax,0x18(%rdi)
5871(6): jz 0x9f(%rip)
5877(4): mov 0x18(%r9),%esi
587b(3): mov 0x18(%rcx),%edx
587e(2): mov %edx,%eax
5880(2): mov %esi,%ecx
5882(2): not %eax
5884(6): and $0xfff,%ecx
588a(3): or $0xe,%ah
588d(2): test %ecx,%eax
588f(6): jnz 0xd1(%rip)
5895(3): cmp $0xff,%ebx
5898(3): mov %r12d,%edx
589b(3): mov %r14d,%esi
589e(2): jz 0x52(%rip)
58a0(2): mov %ebx,%edi
58a2(5): call 0xffffd44e(%rip)
58a7(2): test %eax,%eax
58a9(2): jz 0x53(%rip)
58ab(5): call 0xffffcec5(%rip)
58b0(3): mov (%rax),%r14d
58b3(3): mov %rax,%r15
58b6(4): cmp $0x1,%r14d
58ba(6): jz 0x16e(%rip)
58c0(4): cmp $0x16,%r14d
58c4(6): jz 0x164(%rip)
58ca(3): mov %rbp,%rdi
58cd(5): call 0xffffff43(%rip)
58d2(2): mov %eax,%edx
58d4(2): xor %eax,%eax
58d6(2): test %dl,%dl
58d8(6): jz 0xf8(%rip)
58de(4): add $0x8,%rsp
58e2(1): pop %rbx
58e3(1): pop %rbp
58e4(2): pop %r12
58e6(2): pop %r13
58e8(2): pop %r14
58ea(2): pop %r15
58ec(1): ret near (%rsp)
58ed(3): nop (%rax)
58f0(3): mov %r13,%rdi
58f3(5): call 0xffffd30d(%rip)
58f8(2): test %eax,%eax
58fa(2): jnz 0x36(%rip)
58fc(4): add $0x8,%rsp
5900(5): mov $0x1,%eax
5905(1): pop %rbx
5906(1): pop %rbp
5907(2): pop %r12
5909(2): pop %r13
590b(2): pop %r14
590d(2): pop %r15
590f(1): ret near (%rsp)
5910(4): cmp $0x0,0x2b(%rdi)
5914(6): jz 0xffffff81(%rip)
591a(4): mov 0x18(%r9),%esi
591e(3): mov 0x10(%rdi),%edx
5921(5): jmp 0xffffff5d(%rip)
5926(a): nop 0x0(%rax,%rax,1)
5930(5): call 0xffffce40(%rip)
5935(2): mov (%rax),%ebx
5937(3): mov %rax,%r14
593a(3): cmp $0x1,%ebx
593d(2): jz 0xb(%rip)
593f(3): cmp $0x16,%ebx
5942(6): jnz 0xffffff88(%rip)
5948(3): mov %r12d,%edx
594b(5): mov $0xffffffff,%esi
5950(3): mov %r13,%rdi
5953(5): call 0xffffd2ad(%rip)
5958(3): mov %ebx,(%r14)
595b(5): jmp 0xffffff6f(%rip)
5960(2): and %esi,%edx
5962(3): mov %r13,%rdi
5965(2): mov %ebx,%esi
5967(6): and $0x1c0,%edx
596d(5): call 0x7743(%rip)
5972(2): test %eax,%eax
5974(6): jz 0xffffff21(%rip)
597a(5): call 0xffffcdf6(%rip)
597f(3): mov %rax,%rbx
5982(2): mov (%rax),%eax
5984(3): cmp $0x1,%eax
5987(6): jz 0xb9(%rip)
598d(3): cmp $0x16,%eax
5990(6): jz 0xb0(%rip)
5996(3): mov %r13,%rsi
5999(5): mov $0x4,%edi
599e(5): call 0x9112(%rip)
59a3(7): lea 0xf451(%rip),%rsi
59aa(2): xor %edi,%edi
59ac(5): mov $0x5,%edx
59b1(3): mov %rax,%r12
59b4(5): call 0xffffcf2c(%rip)
59b9(2): mov (%rbx),%esi
59bb(3): mov %rax,%rdx
59be(3): mov %r12,%rcx
59c1(2): xor %edi,%edi
59c3(2): xor %eax,%eax
59c5(5): call 0xffffd2eb(%rip)
59ca(2): jmp 0x42(%rip)
59cc(4): nop 0x0(%rax)
59d0(3): mov %r13,%rsi
59d3(5): mov $0x4,%edi
59d8(5): call 0x90d8(%rip)
59dd(7): lea 0xd714(%rip),%rsi
59e4(5): mov $0x5,%edx
59e9(2): xor %edi,%edi
59eb(3): mov %rax,%r12
59ee(5): call 0xffffcef2(%rip)
59f3(3): mov %rax,%rbx
59f6(5): call 0xffffcd7a(%rip)
59fb(2): mov (%rax),%esi
59fd(3): mov %r12,%rcx
5a00(3): mov %rbx,%rdx
5a03(2): xor %edi,%edi
5a05(2): xor %eax,%eax
5a07(5): call 0xffffd2a9(%rip)
5a0c(4): movzx 0x24(%rbp),%eax
5a10(4): add $0x8,%rsp
5a14(1): pop %rbx
5a15(1): pop %rbp
5a16(2): pop %r12
5a18(2): neg %eax
5a1a(2): pop %r13
5a1c(2): pop %r14
5a1e(2): pop %r15
5a20(1): ret near (%rsp)
5a21(7): nop 0x0(%rax)
5a28(3): mov %r12d,%edx
5a2b(5): mov $0xffffffff,%esi
5a30(2): mov %ebx,%edi
5a32(5): call 0xffffd2be(%rip)
5a37(3): mov %r14d,(%r15)
5a3a(5): jmp 0xfffffe90(%rip)
5a3f(1): nop 
5a40(4): cmp $0x0,0x1b(%rbp)
5a44(6): jnz 0xffffff52(%rip)
5a4a(2): jmp 0xffffffc2(%rip)

"cached_umask" :
5a50(1): push %rbx
5a51(6): mov 0x2145b9(%rip),%ebx
5a57(3): cmp $0xff,%ebx
5a5a(2): jz 0x6(%rip)
5a5c(2): mov %ebx,%eax
5a5e(1): pop %rbx
5a5f(1): ret near (%rsp)
5a60(2): xor %edi,%edi
5a62(5): call 0xffffd0ee(%rip)
5a67(2): mov %eax,%ebx
5a69(2): mov %eax,%edi
5a6b(6): mov %eax,0x21459f(%rip)
5a71(5): call 0xffffd0df(%rip)
5a76(2): mov %ebx,%eax
5a78(1): pop %rbx
5a79(1): ret near (%rsp)

"copy_internal" :
5a80(1): push %rbp
5a81(3): mov %rsp,%rbp
5a84(2): push %r15
5a86(2): push %r14
5a88(2): push %r13
5a8a(2): push %r12
5a8c(3): mov %edx,%r14d
5a8f(1): push %rbx
5a90(3): mov %r9,%rbx
5a93(7): sub $0x398,%rsp
5a9a(4): mov 0x18(%rbp),%rax
5a9e(4): mov 0x10(%rbp),%r13d
5aa2(7): mov %rcx,0xfffffcb8(%rbp)
5aa9(4): mov 0x28(%rbp),%rcx
5aad(7): mov %rdi,0xfffffcf0(%rbp)
5ab4(7): mov %rsi,0xfffffcf8(%rbp)
5abb(7): mov %rax,0xfffffcc8(%rbp)
5ac2(4): mov 0x20(%rbp),%rax
5ac6(7): mov %rcx,0xfffffce0(%rbp)
5acd(7): mov %r8,0xfffffcd0(%rbp)
5ad4(9): mov $0x28,%rcx
5add(4): mov %rcx,0xffffffc8(%rbp)
5ae1(2): xor %ecx,%ecx
5ae3(3): mov $0x0,(%rax)
5ae6(5): movzx 0x18(%r9),%r12d
5aeb(7): mov %rax,0xfffffcc0(%rbp)
5af2(7): mov %r13b,0xfffffceb(%rbp)
5af9(4): mov 0x34(%r9),%r15d
5afd(3): test %r12b,%r12b
5b00(2): jz 0x21(%rip)
5b02(3): test %r15d,%r15d
5b05(6): js 0x29b(%rip)
5b0b(7): mov 0xfffffce0(%rbp),%rax
5b12(3): test %r15d,%r15d
5b15(4): setz %r14b
5b19(3): test %rax,%rax
5b1c(2): jz 0x5(%rip)
5b1e(3): mov %r14b,(%rax)
5b21(3): test %r15d,%r15d
5b24(6): jz 0x2b4(%rip)
5b2a(4): cmp $0x11,%r15d
5b2e(7): mov 0xfffffcf0(%rbp),%r12
5b35(6): jz 0x803(%rip)
5b3b(4): cmp $0x2,0x4(%rbx)
5b3f(7): lea 0xfffffd80(%rbp),%r10
5b46(3): mov %r12,%rsi
5b49(5): mov $0x1,%edi
5b4e(3): mov %r10,%rdx
5b51(6): jz 0x7ff(%rip)
5b57(5): call 0xffffd049(%rip)
5b5c(2): test %eax,%eax
5b5e(3): mov %r12,%rsi
5b61(3): setnz %al
5b64(2): test %al,%al
5b66(6): jnz 0x7ff(%rip)
5b6c(6): mov 0xfffffd98(%rbp),%eax
5b72(6): mov %eax,0xfffffcec(%rbp)
5b78(5): and $0xf000,%eax
5b7d(5): cmp $0x4000,%eax
5b82(6): jz 0xac6(%rip)
5b88(3): test %r13b,%r13b
5b8b(2): jz 0x3f(%rip)
5b8d(4): mov 0x48(%rbx),%rdi
5b91(3): test %rdi,%rdi
5b94(2): jz 0x36(%rip)
5b96(6): mov 0xfffffcec(%rbp),%eax
5b9c(7): lea 0xfffffd80(%rbp),%r10
5ba3(5): and $0xf000,%eax
5ba8(5): cmp $0x4000,%eax
5bad(2): jz 0xe(%rip)
5baf(3): mov (%rbx),%r11d
5bb2(3): test %r11d,%r11d
5bb5(6): jz 0x913(%rip)
5bbb(7): mov 0xfffffcf0(%rbp),%rsi
5bc2(3): mov %r10,%rdx
5bc5(5): call 0x5b6b(%rip)
5bca(3): mov 0x4(%rbx),%eax
5bcd(a): mov $0x1,0xfffffcd8(%rbp)
5bd7(3): cmp $0x4,%eax
5bda(2): jz 0x14(%rip)
5bdc(3): cmp $0x3,%eax
5bdf(3): setz %al
5be2(3): movzx %al,%eax
5be5(3): and %r13d,%eax
5be8(6): mov %eax,0xfffffcd8(%rbp)
5bee(3): test %r14b,%r14b
5bf1(6): jnz 0x20f(%rip)
5bf7(4): cmp $0x11,%r15d
5bfb(6): jz 0x965(%rip)
5c01(6): mov 0xfffffcec(%rbp),%eax
5c07(5): and $0xf000,%eax
5c0c(5): cmp $0x8000,%eax
5c11(6): jz 0x8ef(%rip)
5c17(5): cmp $0xa000,%eax
5c1c(6): mov $0x100,%r8d
5c22(4): setz %r9b
5c26(5): cmp $0x4000,%eax
5c2b(3): setz %al
5c2e(3): or %eax,%r9d
5c31(4): movzx 0x14(%rbx),%eax
5c35(3): xor $0x1,%eax
5c38(3): or %al,%r9b
5c3b(6): jz 0x8c5(%rip)
5c41(7): lea 0xfffffe10(%rbp),%r12
5c48(7): mov 0xfffffcf8(%rbp),%rdx
5c4f(5): mov $0xffffff9c,%esi
5c54(5): mov $0x1,%edi
5c59(7): mov %r9b,0xfffffcb0(%rbp)
5c60(3): mov %r12,%rcx
5c63(5): call 0xffffcd1d(%rip)
5c68(2): test %eax,%eax
5c6a(8): movzx 0xfffffcb0(%rbp),%r9d
5c72(6): jnz 0x67e(%rip)
5c78(3): xor %r8d,%r8d
5c7b(4): cmp $0x2,0x8(%rbx)
5c7f(2): jz 0x20(%rip)
5c81(7): mov 0xfffffe18(%rbp),%rax
5c88(7): cmp %rax,0xfffffd88(%rbp)
5c8f(6): jz 0x11c9(%rip)
5c95(4): cmp $0x2,0x4(%rbx)
5c99(6): jz 0x1377(%rip)
5c9f(4): cmp $0x0,0x2d(%rbx)
5ca3(6): jz 0x9fd(%rip)
5ca9(6): mov 0xfffffcec(%rbp),%eax
5caf(5): and $0xf000,%eax
5cb4(5): cmp $0x4000,%eax
5cb9(6): jz 0x1427(%rip)
5cbf(2): xor %ecx,%ecx
5cc1(4): cmp $0x0,0x1f(%rbx)
5cc5(2): jz 0x20(%rip)
5cc7(4): cmp $0x0,0x18(%rbx)
5ccb(5): mov $0x1,%ecx
5cd0(2): jz 0x15(%rip)
5cd2(2): xor %ecx,%ecx
5cd4(7): mov 0xfffffd80(%rbp),%rax
5cdb(7): cmp %rax,0xfffffe10(%rbp)
5ce2(3): setnz %cl
5ce5(7): lea 0xfffffd80(%rbp),%r10
5cec(7): mov 0xfffffcf8(%rbp),%rdi
5cf3(7): lea 0xfffffe10(%rbp),%rsi
5cfa(7): mov %r9b,0xfffffca8(%rbp)
5d01(7): mov %r8b,0xfffffcb0(%rbp)
5d08(3): mov %r10,%rdx
5d0b(5): call 0xa425(%rip)
5d10(2): test %eax,%eax
5d12(8): movzx 0xfffffcb0(%rbp),%r8d
5d1a(8): movzx 0xfffffca8(%rbp),%r9d
5d22(6): js 0xf4e(%rip)
5d28(7): mov 0xfffffce0(%rbp),%rax
5d2f(3): test %rax,%rax
5d32(2): jz 0x5(%rip)
5d34(3): mov $0x1,(%rax)
5d37(7): mov 0xfffffd80(%rbp),%rdx
5d3e(7): mov 0xfffffd88(%rbp),%rsi
5d45(7): mov 0xfffffcf8(%rbp),%rdi
5d4c(5): call 0x40d4(%rip)
5d51(3): test %rax,%rax
5d54(6): jz 0x56c(%rip)
5d5a(4): movzx 0x2e(%rbx),%ecx
5d5e(7): mov 0xfffffcd8(%rbp),%r8d
5d65(5): mov $0x1,%edx
5d6a(7): mov 0xfffffcf8(%rbp),%rsi
5d71(3): mov %rax,%rdi
5d74(5): call 0xfffff17c(%rip)
5d79(2): test %al,%al
5d7b(6): jnz 0x545(%rip)
5d81(4): cmp $0x0,0x25(%rbx)
5d85(6): jnz 0xe0b(%rip)
5d8b(5): nop 0x0(%rax,%rax,1)
5d90(3): xor %r12d,%r12d
5d93(5): jmp 0x533(%rip)
5d98(8): nop 0x0(%rax,%rax,1)
5da0(5): mov $0xffffff9c,%edx
5da5(3): mov %rsi,%rcx
5da8(6): mov $0x1,%r8d
5dae(3): mov %rdi,%rsi
5db1(2): mov %edx,%edi
5db3(5): call 0x8fed(%rip)
5db8(2): test %eax,%eax
5dba(6): jnz 0xb76(%rip)
5dc0(7): mov 0xfffffce0(%rbp),%rax
5dc7(3): mov %r12d,%r14d
5dca(3): test %rax,%rax
5dcd(2): jz 0xb(%rip)
5dcf(3): mov $0x1,(%rax)
5dd2(6): nop 0x0(%rax,%rax,1)
5dd8(4): cmp $0x0,0x31(%rbx)
5ddc(2): jnz 0x14(%rip)
5dde(7): mov 0xfffffcf8(%rbp),%r12
5de5(3): xor %r15d,%r15d
5de8(5): jmp 0xfffffd53(%rip)
5ded(3): nop (%rax)
5df0(3): xor %r15d,%r15d
5df3(5): jmp 0xfffffd95(%rip)
5df8(8): nop 0x0(%rax,%rax,1)
5e00(3): xor %r9d,%r9d
5e03(b): mov $0x0,0xfffffcb0(%rbp)
5e0e(3): test %r13b,%r13b
5e11(6): jz 0xbf(%rip)
5e17(5): cmp $0x0,0x40(%rbx)
5e1c(6): jz 0xb4(%rip)
5e22(5): movzx 0x18(%rbx),%r12d
5e27(3): test %r12b,%r12b
5e2a(6): jnz 0xa6(%rip)
5e30(2): mov (%rbx),%edx
5e32(2): test %edx,%edx
5e34(6): jnz 0xc84(%rip)
5e3a(3): test %r9b,%r9b
5e3d(7): lea 0xfffffe10(%rbp),%rdx
5e44(6): jz 0x187c(%rip)
5e4a(3): mov 0x18(%rdx),%eax
5e4d(5): and $0xf000,%eax
5e52(5): cmp $0xa000,%eax
5e57(2): jnz 0x79(%rip)
5e59(4): mov 0x40(%rbx),%rdi
5e5d(7): mov 0xfffffcf8(%rbp),%rsi
5e64(5): call 0x595c(%rip)
5e69(2): test %al,%al
5e6b(2): jz 0x65(%rip)
5e6d(7): mov 0xfffffcf8(%rbp),%rdx
5e74(5): mov $0x4,%esi
5e79(5): mov $0x1,%edi
5e7e(5): call 0x8b12(%rip)
5e83(7): mov 0xfffffcf0(%rbp),%rdx
5e8a(2): xor %edi,%edi
5e8c(5): mov $0x4,%esi
5e91(3): mov %rax,%r13
5e94(5): call 0x8afc(%rip)
5e99(7): lea 0xeb70(%rip),%rsi
5ea0(3): mov %rax,%rbx
5ea3(2): xor %edi,%edi
5ea5(5): mov $0x5,%edx
5eaa(5): call 0xffffca36(%rip)
5eaf(3): mov %r13,%r8
5eb2(3): mov %rax,%rdx
5eb5(3): mov %rbx,%rcx
5eb8(2): xor %esi,%esi
5eba(2): xor %edi,%edi
5ebc(2): xor %eax,%eax
5ebe(5): call 0xffffcdf2(%rip)
5ec3(5): jmp 0x403(%rip)
5ec8(8): nop 0x0(%rax,%rax,1)
5ed0(4): cmp $0x0,0x2e(%rbx)
5ed4(2): jz 0xc(%rip)
5ed6(4): cmp $0x0,0x18(%rbx)
5eda(6): jz 0x5b6(%rip)
5ee0(3): test %r15d,%r15d
5ee3(6): jz 0x39d(%rip)
5ee9(4): cmp $0x0,0x2a(%rbx)
5eed(2): jz 0x18(%rip)
5eef(6): mov 0xfffffcec(%rbp),%eax
5ef5(5): and $0xf000,%eax
5efa(5): cmp $0x4000,%eax
5eff(6): jz 0xbd1(%rip)
5f05(4): movzx 0x18(%rbx),%eax
5f09(2): test %al,%al
5f0b(6): jnz 0x4a5(%rip)
5f11(4): cmp $0x0,0x22(%rbx)
5f15(6): jnz 0x1bdb(%rip)
5f1b(4): movzx %r14b,%eax
5f1f(b): mov $0x0,0xfffffca8(%rbp)
5f2a(6): mov %eax,0xfffffce0(%rbp)
5f30(7): mov 0xfffffcec(%rbp),%r12d
5f37(7): and $0xfff,%r12d
5f3e(4): cmp $0x0,0x2b(%rbx)
5f42(2): jz 0xd(%rip)
5f44(4): mov 0x10(%rbx),%r12d
5f48(7): and $0xfff,%r12d
5f4f(4): cmp $0x0,0x1d(%rbx)
5f53(6): jnz 0x625(%rip)
5f59(7): mov 0xfffffcec(%rbp),%r15d
5f60(7): and $0xf000,%r15d
5f67(7): cmp $0x4000,%r15d
5f6e(6): jz 0xe42(%rip)
5f74(6): mov 0xfffffce0(%rbp),%ecx
5f7a(6): mov 0xfffffcec(%rbp),%edx
5f80(3): mov %rbx,%r8
5f83(7): mov 0xfffffcf8(%rbp),%rsi
5f8a(7): mov 0xfffffcf0(%rbp),%rdi
5f91(5): call 0xfffff68f(%rip)
5f96(2): test %al,%al
5f98(a): mov $0x0,0xfffffca4(%rbp)
5fa2(6): jz 0xfffffdee(%rip)
5fa8(4): movzx 0x2c(%rbx),%eax
5fac(2): test %al,%al
5fae(6): mov %al,0xfffffce0(%rbp)
5fb4(6): jnz 0x98c(%rip)
5fba(4): cmp $0x0,0x17(%rbx)
5fbe(6): jz 0x134a(%rip)
5fc4(4): cmp $0x0,0x16(%rbx)
5fc8(5): mov $0x1,%edx
5fcd(2): jnz 0xb(%rip)
5fcf(2): xor %edx,%edx
5fd1(4): cmp $0x3,0x8(%rbx)
5fd5(3): setz %dl
5fd8(7): mov 0xfffffcd8(%rbp),%r8d
5fdf(7): mov 0xfffffcf8(%rbp),%rsi
5fe6(2): xor %ecx,%ecx
5fe8(7): mov 0xfffffcf0(%rbp),%rdi
5fef(5): call 0xffffef01(%rip)
5ff4(2): test %al,%al
5ff6(6): jz 0xa1a(%rip)
5ffc(3): xor %r8d,%r8d
5fff(7): cmp $0x4000,%r15d
6006(4): setnz %r15b
600a(3): test %r14b,%r14b
600d(2): jnz 0x15(%rip)
600f(4): movzx 0x14(%rbx),%eax
6013(3): xor $0x1,%eax
6016(3): and %r15b,%al
6019(3): mov %eax,%r12d
601c(6): jnz 0x1d34(%rip)
6022(3): test %r13b,%r13b
6025(6): mov $0x1,%r12d
602b(2): jz 0x57(%rip)
602d(7): mov $0x0,0xfffffcd0(%rbp)
6034(5): cmp $0x0,0x40(%rbx)
6039(2): jz 0x34(%rip)
603b(7): lea 0xffffff30(%rbp),%r12
6042(7): mov 0xfffffcf8(%rbp),%rsi
6049(5): mov $0x1,%edi
604e(7): mov %r8b,0xfffffcd8(%rbp)
6055(3): mov %r12,%rdx
6058(5): call 0xffffc8b8(%rip)
605d(2): test %eax,%eax
605f(8): movzx 0xfffffcd8(%rbp),%r8d
6067(6): jz 0x204b(%rip)
606d(7): movzx 0xfffffcd0(%rbp),%eax
6074(8): movzx 0xfffffceb(%rbp),%r12d
607c(6): mov %al,0xfffffceb(%rbp)
6082(4): cmp $0x0,0x17(%rbx)
6086(2): jz 0xb(%rip)
6088(3): test %r15b,%r15b
608b(6): jnz 0x23b(%rip)
6091(3): test %r8b,%r8b
6094(6): jnz 0x232(%rip)
609a(4): cmp $0x0,0x1f(%rbx)
609e(6): jz 0xba(%rip)
60a4(7): mov 0xfffffdc8(%rbp),%rax
60ab(7): cmp $0x0,0xfffffce0(%rbp)
60b2(7): lea 0xffffff30(%rbp),%rsi
60b9(7): mov 0xfffffcf8(%rbp),%rdi
60c0(7): mov %rax,0xffffff30(%rbp)
60c7(7): mov 0xfffffdd0(%rbp),%rax
60ce(7): mov %rax,0xffffff38(%rbp)
60d5(7): mov 0xfffffdd8(%rbp),%rax
60dc(7): mov %rax,0xffffff40(%rbp)
60e3(7): mov 0xfffffde0(%rbp),%rax
60ea(7): mov %rax,0xffffff48(%rbp)
60f1(6): jz 0x1faf(%rip)
60f7(5): call 0xa669(%rip)
60fc(2): test %eax,%eax
60fe(2): jz 0x5a(%rip)
6100(5): call 0xffffc670(%rip)
6105(3): cmp $0x26,(%rax)
6108(2): jz 0x50(%rip)
610a(7): mov 0xfffffcf8(%rbp),%rsi
6111(5): mov $0x4,%edi
6116(5): call 0x899a(%rip)
611b(7): lea 0xee49(%rip),%rsi
6122(2): xor %edi,%edi
6124(5): mov $0x5,%edx
6129(3): mov %rax,%r13
612c(5): call 0xffffc7b4(%rip)
6131(3): mov %rax,%r15
6134(5): call 0xffffc63c(%rip)
6139(2): mov (%rax),%esi
613b(2): xor %edi,%edi
613d(2): xor %eax,%eax
613f(3): mov %r13,%rcx
6142(3): mov %r15,%rdx
6145(5): call 0xffffcb6b(%rip)
614a(4): cmp $0x0,0x24(%rbx)
614e(6): jnz 0xfffffc42(%rip)
6154(4): nop 0x0(%rax)
6158(7): cmp $0x0,0xfffffce0(%rbp)
615f(6): jnz 0x167(%rip)
6165(4): cmp $0x0,0x1d(%rbx)
6169(2): jz 0x5e(%rip)
616b(3): test %r14b,%r14b
616e(2): jnz 0x14(%rip)
6170(6): mov 0xfffffe2c(%rbp),%eax
6176(6): cmp %eax,0xfffffd9c(%rbp)
617c(6): jz 0x26ae(%rip)
6182(7): mov 0xfffffcf8(%rbp),%rsi
6189(7): lea 0xfffffd80(%rbp),%rcx
6190(7): lea 0xfffffe10(%rbp),%r9
6197(4): movzx %r14b,%r8d
619b(5): mov $0xffffffff,%edx
61a0(3): mov %rbx,%rdi
61a3(5): call 0xfffff69d(%rip)
61a8(3): cmp $0xff,%eax
61ab(6): jz 0xfffffbe5(%rip)
61b1(6): mov 0xfffffcec(%rbp),%ecx
61b7(2): mov %ecx,%edx
61b9(3): and $0xf1,%dh
61bc(2): test %eax,%eax
61be(3): cmovne %ecx,%edx
61c1(6): mov %edx,0xfffffcec(%rbp)
61c7(a): mov $0x71776119061217535,%rax
61d1(4): test %rax,0x18(%rbx)
61d5(6): jnz 0x209b(%rip)
61db(4): cmp $0x0,0x2b(%rbx)
61df(6): jnz 0x23f6(%rip)
61e5(4): test %r14b,0x20(%rbx)
61e9(6): jnz 0x26a0(%rip)
61ef(6): mov 0xfffffca4(%rbp),%eax
61f5(2): test %eax,%eax
61f7(6): jnz 0x264a(%rip)
61fd(7): cmp $0x0,0xfffffceb(%rbp)
6204(6): jz 0xc2(%rip)
620a(6): mov 0xfffffc74(%rbp),%esi
6210(6): or 0xfffffca4(%rbp),%esi
6216(7): mov 0xfffffcf8(%rbp),%rdi
621d(5): call 0xffffca73(%rip)
6222(2): test %eax,%eax
6224(6): jz 0xa2(%rip)
622a(7): mov 0xfffffcf8(%rbp),%rsi
6231(5): mov $0x4,%edi
6236(5): call 0x887a(%rip)
623b(7): lea 0xed41(%rip),%rsi
6242(5): mov $0x5,%edx
6247(2): xor %edi,%edi
6249(3): mov %rax,%r14
624c(5): call 0xffffc694(%rip)
6251(3): mov %rax,%r13
6254(5): call 0xffffc51c(%rip)
6259(2): mov (%rax),%esi
625b(3): mov %r14,%rcx
625e(3): mov %r13,%rdx
6261(2): xor %edi,%edi
6263(2): xor %eax,%eax
6265(5): call 0xffffca4b(%rip)
626a(4): cmp $0x0,0x24(%rbx)
626e(6): jnz 0xfffffb22(%rip)
6274(2): jmp 0x52(%rip)
6276(a): nop 0x0(%rax,%rax,1)
6280(4): cmp $0x0,0x18(%rbx)
6284(6): jz 0xfffffc97(%rip)
628a(4): cmp $0x0,0x2e(%rbx)
628e(6): jnz 0xb82(%rip)
6294(4): cmp $0x0,0x21(%rbx)
6298(6): jnz 0xb58(%rip)
629e(7): mov 0xfffffce0(%rbp),%rax
62a5(3): test %rax,%rax
62a8(2): jz 0x5(%rip)
62aa(3): mov $0x1,(%rax)
62ad(3): test %r13b,%r13b
62b0(2): jz 0x10(%rip)
62b2(4): cmp $0x0,0x31(%rbx)
62b6(6): jz 0xa72(%rip)
62bc(4): nop 0x0(%rax)
62c0(6): mov $0x1,%r12d
62c6(4): mov 0xffffffc8(%rbp),%rsi
62ca(9): xor $0x28,%rsi
62d3(3): mov %r12d,%eax
62d6(6): jnz 0x2cce(%rip)
62dc(4): lea 0xffffffd8(%rbp),%rsp
62e0(1): pop %rbx
62e1(2): pop %r12
62e3(2): pop %r13
62e5(2): pop %r14
62e7(2): pop %r15
62e9(1): pop %rbp
62ea(1): ret near (%rsp)
62eb(5): nop 0x0(%rax,%rax,1)
62f0(5): call 0xffffc480(%rip)
62f5(3): mov %rax,%r9
62f8(2): mov (%rax),%eax
62fa(3): cmp $0x28,%eax
62fd(6): jz 0x5d3(%rip)
6303(3): cmp $0x2,%eax
6306(6): mov $0x1,%r8d
630c(6): jnz 0x5ce(%rip)
6312(3): xor %r9d,%r9d
6315(4): cmp $0x11,%r15d
6319(6): jz 0xfffff962(%rip)
631f(3): mov %r8d,%r14d
6322(b): mov $0x0,0xfffffcb0(%rbp)
632d(5): jmp 0xfffffae1(%rip)
6332(6): nop 0x0(%rax,%rax,1)
6338(4): cmp $0x2,0x8(%rbx)
633c(6): jz 0xfffff84c(%rip)
6342(5): jmp 0xfffff7f9(%rip)
6347(9): nop 0x0(%rax,%rax,1)
6350(5): call 0xffffc5c0(%rip)
6355(2): test %eax,%eax
6357(3): mov %r12,%rsi
635a(3): setnz %al
635d(2): test %al,%al
635f(6): jz 0xfffff80d(%rip)
6365(5): mov $0x4,%edi
636a(5): call 0x8746(%rip)
636f(7): lea 0xeaa1(%rip),%rsi
6376(3): mov %rax,%r12
6379(5): mov $0x5,%edx
637e(2): xor %edi,%edi
6380(5): call 0xffffc560(%rip)
6385(3): mov %rax,%rbx
6388(5): call 0xffffc3e8(%rip)
638d(2): mov (%rax),%esi
638f(3): mov %r12,%rcx
6392(3): mov %rbx,%rdx
6395(2): xor %edi,%edi
6397(2): xor %eax,%eax
6399(3): xor %r12d,%r12d
639c(5): call 0xffffc914(%rip)
63a1(5): jmp 0xffffff25(%rip)
63a6(a): nop 0x0(%rax,%rax,1)
63b0(8): cmp $0x1,0xfffffd90(%rbp)
63b8(6): jz 0x1030(%rip)
63be(4): cmp $0x0,0x22(%rbx)
63c2(b): mov $0x0,0xfffffca8(%rbp)
63cd(2): jz 0xc(%rip)
63cf(4): cmp $0x0,0x17(%rbx)
63d3(6): jz 0x7c5(%rip)
63d9(4): cmp $0x11,%r15d
63dd(2): jnz 0x2e(%rip)
63df(7): mov 0xfffffcf8(%rbp),%rsi
63e6(7): mov 0xfffffcf0(%rbp),%rdi
63ed(5): call 0xffffc923(%rip)
63f2(2): test %eax,%eax
63f4(6): jz 0xfffffe96(%rip)
63fa(5): call 0xffffc376(%rip)
63ff(3): mov (%rax),%r15d
6402(3): test %r15d,%r15d
6405(6): jz 0xfffffe85(%rip)
640b(4): cmp $0x16,%r15d
640f(6): jz 0x1021(%rip)
6415(4): cmp $0x12,%r15d
6419(6): jnz 0x7cf(%rip)
641f(7): mov 0xfffffcec(%rbp),%r12d
6426(7): mov 0xfffffcf8(%rbp),%rdi
642d(7): and $0xf000,%r12d
6434(7): cmp $0x4000,%r12d
643b(6): jz 0x1065(%rip)
6441(5): call 0xffffc33f(%rip)
6446(2): test %eax,%eax
6448(2): jz 0x13(%rip)
644a(5): call 0xffffc326(%rip)
644f(3): cmp $0x2,(%rax)
6452(3): mov %rax,%r14
6455(6): jnz 0x1069(%rip)
645b(7): cmp $0x4000,%r12d
6462(3): setnz %dl
6465(3): and 0x2e(%rbx),%dl
6468(3): mov %edx,%r14d
646b(6): jnz 0x1945(%rip)
6471(a): mov $0x1,0xfffffce0(%rbp)
647b(6): mov $0x1,%r14d
6481(5): jmp 0xfffffaaf(%rip)
6486(a): nop 0x0(%rax,%rax,1)
6490(6): mov 0xfffffcec(%rbp),%eax
6496(5): and $0xf000,%eax
649b(5): cmp $0x4000,%eax
64a0(6): jz 0xfffffa40(%rip)
64a6(7): mov 0xfffffcb0(%rbp),%rdx
64ad(7): mov 0xfffffcf8(%rbp),%rsi
64b4(7): mov 0xfffffcf0(%rbp),%rdi
64bb(5): call 0xffffe975(%rip)
64c0(5): jmp 0xfffffa20(%rip)
64c5(3): nop (%rax)
64c8(7): mov 0xfffffcf0(%rbp),%rsi
64cf(3): mov %r10,%rdx
64d2(7): mov %r10,0xfffffcd8(%rbp)
64d9(5): call 0x52e7(%rip)
64de(2): test %al,%al
64e0(3): mov %eax,%r12d
64e3(6): jnz 0xec5(%rip)
64e9(4): mov 0x48(%rbx),%rdi
64ed(7): mov 0xfffffcd8(%rbp),%r10
64f4(5): jmp 0xfffff6c7(%rip)
64f9(7): nop 0x0(%rax)
6500(5): movzx 0x18(%rbx),%r9d
6505(6): mov $0x100,%r8d
650b(3): test %r9b,%r9b
650e(6): jnz 0xfffff733(%rip)
6514(5): movzx 0x2c(%rbx),%r9d
6519(3): test %r9b,%r9b
651c(6): jnz 0xfffff725(%rip)
6522(5): movzx 0x17(%rbx),%r9d
6527(3): test %r9b,%r9b
652a(6): jnz 0xfffff717(%rip)
6530(3): mov (%rbx),%r10d
6533(6): mov $0x1,%r9d
6539(3): test %r10d,%r10d
653c(6): jnz 0xfffff705(%rip)
6542(5): movzx 0x15(%rbx),%r9d
6547(3): xor %r8d,%r8d
654a(3): test %r9b,%r9b
654d(4): setnz %r8b
6551(4): shl/sal $0x8,%r8d
6555(5): jmp 0xfffff6ec(%rip)
655a(6): nop 0x0(%rax,%rax,1)
6560(4): cmp $0x2,0x8(%rbx)
6564(6): jnz 0xfffff69d(%rip)
656a(3): xor %r8d,%r8d
656d(3): xor %r9d,%r9d
6570(5): jmp 0xfffff72f(%rip)
6575(3): nop (%rax)
6578(6): mov 0xfffffce0(%rbp),%ecx
657e(6): mov 0xfffffcec(%rbp),%edx
6584(3): mov %rbx,%r8
6587(7): mov 0xfffffcf8(%rbp),%rsi
658e(7): mov 0xfffffcf0(%rbp),%rdi
6595(5): call 0xfffff08b(%rip)
659a(2): test %al,%al
659c(6): jz 0xfffff7f4(%rip)
65a2(7): mov 0xfffffcec(%rbp),%r15d
65a9(3): mov %r12d,%eax
65ac(3): and $0x3f,%eax
65af(6): mov %eax,0xfffffca4(%rbp)
65b5(7): and $0xf000,%r15d
65bc(7): cmp $0x4000,%r15d
65c3(6): jnz 0xfffff9e5(%rip)
65c9(7): mov 0xfffffcd0(%rbp),%rax
65d0(7): mov 0xfffffd88(%rbp),%rdx
65d7(7): mov 0xfffffd80(%rbp),%rcx
65de(3): test %rax,%rax
65e1(2): jnz 0x1b(%rip)
65e3(5): jmp 0x8fd(%rip)
65e8(8): nop 0x0(%rax,%rax,1)
65f0(3): mov (%rax),%rax
65f3(3): test %rax,%rax
65f6(6): jz 0x8ea(%rip)
65fc(4): cmp %rdx,0x8(%rax)
6600(2): jnz 0xfffffff0(%rip)
6602(4): cmp %rcx,0x10(%rax)
6606(2): jnz 0xffffffea(%rip)
6608(7): mov 0xfffffcf0(%rbp),%rsi
660f(5): mov $0x4,%edi
6614(5): call 0x849c(%rip)
6619(7): lea 0xe5d8(%rip),%rsi
6620(3): mov %rax,%r12
6623(5): mov $0x5,%edx
6628(2): xor %edi,%edi
662a(5): call 0xffffc2b6(%rip)
662f(3): mov %r12,%rcx
6632(3): mov %rax,%rdx
6635(2): xor %esi,%esi
6637(2): xor %edi,%edi
6639(2): xor %eax,%eax
663b(5): call 0xffffc675(%rip)
6640(5): jmp 0x3d0(%rip)
6645(3): nop (%rax)
6648(5): movzx 0x2a(%rbx),%r12d
664d(3): test %r12b,%r12b
6650(6): jnz 0xfffff538(%rip)
6656(7): mov 0xfffffcf0(%rbp),%rsi
665d(5): mov $0x4,%edi
6662(5): call 0x844e(%rip)
6667(4): cmp $0x0,0x19(%rbx)
666b(3): mov %rax,%r13
666e(5): mov $0x5,%edx
6673(6): jnz 0xd9d(%rip)
6679(7): lea 0xe1e8(%rip),%rsi
6680(2): xor %edi,%edi
6682(5): call 0xffffc25e(%rip)
6687(3): mov %rax,%rdx
668a(3): mov %r13,%rcx
668d(2): xor %esi,%esi
668f(2): xor %edi,%edi
6691(2): xor %eax,%eax
6693(5): call 0xffffc61d(%rip)
6698(5): jmp 0xfffffc2e(%rip)
669d(3): nop (%rax)
66a0(4): cmp $0x0,0x18(%rbx)
66a4(6): jnz 0x5dc(%rip)
66aa(6): mov 0xfffffcec(%rbp),%eax
66b0(5): and $0xf000,%eax
66b5(5): cmp $0x4000,%eax
66ba(2): jz 0x56(%rip)
66bc(3): mov 0x8(%rbx),%eax
66bf(3): cmp $0x2,%eax
66c2(6): jz 0xfffffbfe(%rip)
66c8(3): cmp $0x3,%eax
66cb(2): jnz 0x45(%rip)
66cd(7): mov 0xfffffcf8(%rbp),%rsi
66d4(7): lea 0xfffffe28(%rbp),%rdx
66db(3): mov %rbx,%rdi
66de(7): mov %r9b,0xfffffca8(%rbp)
66e5(7): mov %r8b,0xfffffcb0(%rbp)
66ec(5): call 0xffffe914(%rip)
66f1(2): test %al,%al
66f3(8): movzx 0xfffffcb0(%rbp),%r8d
66fb(8): movzx 0xfffffca8(%rbp),%r9d
6703(6): jz 0xfffffbbd(%rip)
6709(7): nop 0x0(%rax)
6710(3): test %r14b,%r14b
6713(6): jnz 0xfffffbad(%rip)
6719(6): mov 0xfffffe28(%rbp),%eax
671f(7): mov 0xfffffcec(%rbp),%r12d
6726(2): mov %eax,%edx
6728(7): and $0xf000,%r12d
672f(6): and $0xf000,%edx
6735(6): cmp $0x4000,%edx
673b(6): jz 0x615(%rip)
6741(7): cmp $0x4000,%r12d
6748(6): jz 0x12a0(%rip)
674e(3): test %r13b,%r13b
6751(3): mov (%rbx),%r15d
6754(6): jz 0xb1f(%rip)
675a(4): cmp $0x3,%r15d
675e(6): jnz 0xab2(%rip)
6764(4): cmp $0x0,0x18(%rbx)
6768(6): jnz 0x129f(%rip)
676e(7): mov 0xfffffcf0(%rbp),%rdi
6775(7): mov %r9b,0xfffffca8(%rbp)
677c(7): mov %r8b,0xfffffcb0(%rbp)
6783(5): call 0x4e0d(%rip)
6788(3): cmp $0x2e,(%rax)
678b(3): mov %rax,%r14
678e(8): movzx 0xfffffcb0(%rbp),%r8d
6796(8): movzx 0xfffffca8(%rbp),%r9d
679e(2): jnz 0x29(%rip)
67a0(2): xor %eax,%eax
67a2(2): xor %edx,%edx
67a4(5): cmp $0x2e,0x1(%r14)
67a9(3): setz %dl
67ac(6): movzx 0x1(%r14,%rdx,1),%edx
67b2(2): test %dl,%dl
67b4(6): jz 0xad4(%rip)
67ba(3): cmp $0x2f,%dl
67bd(6): jz 0xacb(%rip)
67c3(2): test %al,%al
67c5(2): jnz 0x18(%rip)
67c7(6): mov 0xfffffe28(%rbp),%eax
67cd(5): and $0xf000,%eax
67d2(5): cmp $0x4000,%eax
67d7(6): jz 0xad0(%rip)
67dd(4): cmp $0x3,%r15d
67e1(2): jz 0x68(%rip)
67e3(3): mov %r14,%rdi
67e6(7): mov %r9b,0xfffffca4(%rbp)
67ed(5): call 0xffffc113(%rip)
67f2(7): mov 0xfffffcf8(%rbp),%rdi
67f9(7): mov %rax,0xfffffcb0(%rbp)
6800(5): call 0x4d90(%rip)
6805(3): mov %rax,%rdi
6808(7): mov %rax,0xfffffca8(%rbp)
680f(5): call 0xffffc0f1(%rip)
6814(7): mov 0x213d65(%rip),%r15
681b(3): mov %rax,%r12
681e(3): mov %r15,%rdi
6821(5): call 0xffffc0df(%rip)
6826(3): mov %rax,%r8
6829(4): lea 0x0(%r12,%rax,1),%rax
682d(7): cmp %rax,0xfffffcb0(%rbp)
6834(7): mov 0xfffffca8(%rbp),%rsi
683b(8): movzx 0xfffffca4(%rbp),%r9d
6843(6): jz 0x1a5b(%rip)
6849(2): mov (%rbx),%edx
684b(7): mov 0xfffffcf8(%rbp),%rsi
6852(5): mov $0xffffff9c,%edi
6857(7): mov %r9b,0xfffffcb0(%rbp)
685e(5): call 0x4912(%rip)
6863(3): test %rax,%rax
6866(3): mov %rax,%r12
6869(8): movzx 0xfffffcb0(%rbp),%r9d
6871(6): jz 0x1920(%rip)
6877(3): mov %rax,%rdi
687a(7): mov %r9b,0xfffffca8(%rbp)
6881(6): mov $0x1,%r14d
6887(5): call 0xffffc079(%rip)
688c(4): lea 0x1(%rax),%rdx
6890(4): add $0x1f,%rax
6894(3): mov %r12,%rsi
6897(4): and $0xfffffff0,%rax
689b(6): mov $0x11,%r15d
68a1(3): sub %rax,%rsp
68a4(5): lea 0xf(%rsp),%rdi
68a9(4): and $0xfffffff0,%rdi
68ad(5): call 0xffffc2b3(%rip)
68b2(3): mov %r12,%rdi
68b5(7): mov %rax,0xfffffcb0(%rbp)
68bc(5): call 0xffffc554(%rip)
68c1(8): movzx 0xfffffca8(%rbp),%r9d
68c9(5): jmp 0xfffff545(%rip)
68ce(2): nop 
68d0(4): cmp $0x0,0x16(%rbx)
68d4(6): jnz 0x38c(%rip)
68da(7): mov 0xfffffcf8(%rbp),%rsi
68e1(5): mov $0x4,%edi
68e6(7): mov %r9,0xfffffcf0(%rbp)
68ed(3): xor %r12d,%r12d
68f0(5): call 0x81c0(%rip)
68f5(7): lea 0xe51b(%rip),%rsi
68fc(5): mov $0x5,%edx
6901(2): xor %edi,%edi
6903(3): mov %rax,%rbx
6906(5): call 0xffffbfda(%rip)
690b(7): mov 0xfffffcf0(%rbp),%r9
6912(3): mov %rax,%rdx
6915(3): mov %rbx,%rcx
6918(2): xor %edi,%edi
691a(2): xor %eax,%eax
691c(3): mov (%r9),%esi
691f(5): call 0xffffc391(%rip)
6924(5): jmp 0xfffff9a2(%rip)
6929(7): nop 0x0(%rax)
6930(5): call 0xffffbe40(%rip)
6935(3): mov (%rax),%r15d
6938(5): jmp 0xfffff1d3(%rip)
693d(3): nop (%rax)
6940(7): mov 0xfffffcf0(%rbp),%rax
6947(3): cmp $0x2f,(%rax)
694a(2): jz 0x3a(%rip)
694c(7): mov 0xfffffcf8(%rbp),%rdi
6953(5): call 0x4b5d(%rip)
6958(7): lea 0xc0da(%rip),%r8
695f(3): mov %rax,%rdi
6962(5): mov $0x2,%ecx
6967(3): mov %rax,%r12
696a(3): mov %r8,%rsi
696d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
696f(3): setnbe %al
6972(2): sbb $0x0,%al
6974(2): test %al,%al
6976(6): jnz 0x12e2(%rip)
697c(3): mov %r12,%rdi
697f(5): call 0xffffc491(%rip)
6984(4): movzx 0x16(%rbx),%ecx
6988(7): mov 0xfffffcf8(%rbp),%rdx
698f(6): mov $0xffffffff,%r8d
6995(7): mov 0xfffffcf0(%rbp),%rdi
699c(5): mov $0xffffff9c,%esi
69a1(5): call 0x3a9f(%rip)
69a6(3): xor %r8d,%r8d
69a9(2): test %eax,%eax
69ab(3): mov %eax,%r12d
69ae(6): jle 0xfffff651(%rip)
69b4(7): mov 0xfffffcf0(%rbp),%rdx
69bb(5): mov $0x4,%esi
69c0(5): mov $0x1,%edi
69c5(5): call 0x7fcb(%rip)
69ca(7): mov 0xfffffcf8(%rbp),%rdx
69d1(5): mov $0x4,%esi
69d6(2): xor %edi,%edi
69d8(3): mov %rax,%r13
69db(5): call 0x7fb5(%rip)
69e0(7): lea 0xe169(%rip),%rsi
69e7(3): mov %rax,%r14
69ea(5): mov $0x5,%edx
69ef(2): xor %edi,%edi
69f1(5): call 0xffffbeef(%rip)
69f6(3): mov %r13,%r8
69f9(3): mov %rax,%rdx
69fc(3): mov %r14,%rcx
69ff(3): mov %r12d,%esi
6a02(2): xor %edi,%edi
6a04(2): xor %eax,%eax
6a06(5): call 0xffffc2aa(%rip)
6a0b(5): nop 0x0(%rax,%rax,1)
6a10(4): cmp $0x0,0x25(%rbx)
6a14(6): jnz 0x17c(%rip)
6a1a(8): cmp $0x0,0xfffffca8(%rbp)
6a22(6): jz 0x89e(%rip)
6a28(7): mov 0xfffffcb0(%rbp),%rax
6a2f(3): test %rax,%rax
6a32(6): jz 0xfffff35e(%rip)
6a38(7): mov 0xfffffcf8(%rbp),%rsi
6a3f(3): mov %rax,%rdi
6a42(5): call 0xffffc2ce(%rip)
6a47(2): test %eax,%eax
6a49(6): jnz 0x897(%rip)
6a4f(4): cmp $0x0,0x2e(%rbx)
6a53(6): jz 0xfffff33d(%rip)
6a59(7): mov 0xfffffcf8(%rbp),%rdx
6a60(5): mov $0x4,%esi
6a65(5): mov $0x1,%edi
6a6a(5): call 0x7f26(%rip)
6a6f(7): mov 0xfffffcb0(%rbp),%rdx
6a76(2): xor %edi,%edi
6a78(5): mov $0x4,%esi
6a7d(3): mov %rax,%r12
6a80(5): call 0x7f10(%rip)
6a85(7): lea 0xe5a6(%rip),%rsi
6a8c(3): mov %rax,%rbx
6a8f(2): xor %edi,%edi
6a91(5): mov $0x5,%edx
6a96(5): call 0xffffbe4a(%rip)
6a9b(3): mov %r12,%rcx
6a9e(3): mov %rax,%rsi
6aa1(3): mov %rbx,%rdx
6aa4(5): mov $0x1,%edi
6aa9(2): xor %eax,%eax
6aab(5): call 0xffffc1b5(%rip)
6ab0(5): jmp 0xfffff2e0(%rip)
6ab5(3): nop (%rax)
6ab8(4): cmp $0x0,0x2e(%rbx)
6abc(6): jnz 0xfffff9d4(%rip)
6ac2(3): test %r15d,%r15d
6ac5(6): jz 0xfffff456(%rip)
6acb(5): jmp 0xfffff41e(%rip)
6ad0(3): test %r13b,%r13b
6ad3(7): mov 0xfffffd80(%rbp),%rdx
6ada(7): mov 0xfffffd88(%rbp),%rdi
6ae1(6): jz 0x8af(%rip)
6ae7(3): mov %rdi,%rsi
6aea(7): mov 0xfffffcf8(%rbp),%rdi
6af1(5): call 0x332f(%rip)
6af6(7): mov %rax,0xfffffca8(%rbp)
6afd(8): cmp $0x0,0xfffffca8(%rbp)
6b05(6): jz 0x4fb(%rip)
6b0b(7): mov 0xfffffca8(%rbp),%rsi
6b12(7): mov 0xfffffcf0(%rbp),%rdi
6b19(5): call 0x8727(%rip)
6b1e(2): test %al,%al
6b20(6): jz 0xf40(%rip)
6b26(7): mov 0x213a3b(%rip),%rdx
6b2d(5): mov $0x4,%esi
6b32(5): mov $0x1,%edi
6b37(5): call 0x7e59(%rip)
6b3c(7): mov 0x213a2d(%rip),%rdx
6b43(5): mov $0x4,%esi
6b48(2): xor %edi,%edi
6b4a(3): mov %rax,%r13
6b4d(5): call 0x7e43(%rip)
6b52(7): lea 0xdeef(%rip),%rsi
6b59(3): mov %rax,%r12
6b5c(5): mov $0x5,%edx
6b61(2): xor %edi,%edi
6b63(5): call 0xffffbd7d(%rip)
6b68(3): mov %r13,%r8
6b6b(3): mov %rax,%rdx
6b6e(3): mov %r12,%rcx
6b71(2): xor %eax,%eax
6b73(2): xor %esi,%esi
6b75(2): xor %edi,%edi
6b77(5): call 0xffffc139(%rip)
6b7c(7): mov 0xfffffcc0(%rbp),%rax
6b83(3): mov $0x1,(%rax)
6b86(4): cmp $0x0,0x25(%rbx)
6b8a(6): jz 0xfffffe9e(%rip)
6b90(5): call 0xffffc2a6(%rip)
6b95(3): nop (%rax)
6b98(8): cmp $0x1,0xfffffd90(%rbp)
6ba0(6): jnbe 0x3e8(%rip)
6ba6(3): test %r13b,%r13b
6ba9(3): mov 0x4(%rbx),%edx
6bac(2): jz 0xb(%rip)
6bae(3): cmp $0x3,%edx
6bb1(6): jz 0x3d7(%rip)
6bb7(3): cmp $0x4,%edx
6bba(b): mov $0x0,0xfffffca8(%rbp)
6bc5(6): jz 0x3c3(%rip)
6bcb(2): test %al,%al
6bcd(6): jnz 0xfffff80c(%rip)
6bd3(4): movzx %r14b,%eax
6bd7(6): mov %eax,0xfffffce0(%rbp)
6bdd(5): jmp 0xfffff353(%rip)
6be2(6): nop 0x0(%rax,%rax,1)
6be8(7): mov 0xfffffcf8(%rbp),%rdx
6bef(5): mov $0x4,%esi
6bf4(5): mov $0x1,%edi
6bf9(5): call 0x7d97(%rip)
6bfe(7): mov 0xfffffcf0(%rbp),%rdx
6c05(5): mov $0x4,%esi
6c0a(2): xor %edi,%edi
6c0c(3): mov %rax,%r12
6c0f(5): call 0x7d81(%rip)
6c14(7): lea 0xe268(%rip),%rsi
6c1b(3): mov %rax,%rbx
6c1e(5): mov $0x5,%edx
6c23(2): xor %edi,%edi
6c25(5): call 0xffffbcbb(%rip)
6c2a(3): mov %r12,%r8
6c2d(3): mov %rbx,%rcx
6c30(3): mov %rax,%rdx
6c33(3): mov %r15d,%esi
6c36(2): xor %edi,%edi
6c38(2): xor %eax,%eax
6c3a(5): call 0xffffc076(%rip)
6c3f(7): mov 0xfffffd80(%rbp),%rsi
6c46(7): mov 0xfffffd88(%rbp),%rdi
6c4d(5): call 0x3103(%rip)
6c52(5): jmp 0xfffff13e(%rip)
6c57(9): nop 0x0(%rax,%rax,1)
6c60(3): xor %r8d,%r8d
6c63(5): jmp 0xfffff6af(%rip)
6c68(8): nop 0x0(%rax,%rax,1)
6c70(4): cmp $0x0,0x18(%rbx)
6c74(6): jz 0xfffffa48(%rip)
6c7a(6): nop 0x0(%rax,%rax,1)
6c80(3): mov 0x8(%rbx),%eax
6c83(3): cmp $0x2,%eax
6c86(2): jz 0x7e(%rip)
6c88(3): cmp $0x3,%eax
6c8b(2): jz 0x4d(%rip)
6c8d(3): cmp $0x4,%eax
6c90(6): jnz 0xfffffa80(%rip)
6c96(4): cmp $0x0,0x2f(%rbx)
6c9a(6): jz 0xfffffa76(%rip)
6ca0(6): mov 0xfffffe28(%rbp),%esi
6ca6(7): mov 0xfffffcf8(%rbp),%rdi
6cad(7): mov %r9b,0xfffffca8(%rbp)
6cb4(7): mov %r8b,0xfffffcb0(%rbp)
6cbb(5): call 0xffffe035(%rip)
6cc0(2): test %al,%al
6cc2(8): movzx 0xfffffcb0(%rbp),%r8d
6cca(8): movzx 0xfffffca8(%rbp),%r9d
6cd2(6): jnz 0xfffffa3e(%rip)
6cd8(7): mov 0xfffffcf8(%rbp),%rsi
6cdf(7): lea 0xfffffe28(%rbp),%rdx
6ce6(3): mov %rbx,%rdi
6ce9(7): mov %r9b,0xfffffca8(%rbp)
6cf0(7): mov %r8b,0xfffffcb0(%rbp)
6cf7(5): call 0xffffe309(%rip)
6cfc(2): test %al,%al
6cfe(6): jnz 0x1412(%rip)
6d04(8): cmp $0x0,0xfffffce0(%rbp)
6d0c(6): jz 0xfffff5b4(%rip)
6d12(7): mov 0xfffffce0(%rbp),%rax
6d19(3): mov $0x1,(%rax)
6d1c(5): jmp 0xfffff5a4(%rip)
6d21(7): nop 0x0(%rax)
6d28(4): mov 0x40(%rbx),%rdi
6d2c(7): mov 0xfffffcf8(%rbp),%rsi
6d33(7): lea 0xfffffd80(%rbp),%rdx
6d3a(3): mov %r13d,%r12d
6d3d(5): call 0x49f3(%rip)
6d42(5): jmp 0xfffff584(%rip)
6d47(9): nop 0x0(%rax,%rax,1)
6d50(7): cmp $0x4000,%r12d
6d57(6): jz 0x519(%rip)
6d5d(4): cmp $0x0,0x18(%rbx)
6d61(2): jz 0xe(%rip)
6d63(3): mov (%rbx),%r15d
6d66(3): test %r15d,%r15d
6d69(6): jnz 0xc9e(%rip)
6d6f(7): mov 0xfffffcf8(%rbp),%rsi
6d76(5): mov $0x4,%edi
6d7b(3): xor %r12d,%r12d
6d7e(5): call 0x7d32(%rip)
6d83(7): lea 0xdba6(%rip),%rsi
6d8a(3): mov %rax,%rbx
6d8d(5): mov $0x5,%edx
6d92(2): xor %edi,%edi
6d94(5): call 0xffffbb4c(%rip)
6d99(3): mov %rbx,%rcx
6d9c(3): mov %rax,%rdx
6d9f(2): xor %esi,%esi
6da1(2): xor %edi,%edi
6da3(2): xor %eax,%eax
6da5(5): call 0xffffbf0b(%rip)
6daa(5): jmp 0xfffff51c(%rip)
6daf(1): nop 
6db0(6): mov 0xfffffce0(%rbp),%ecx
6db6(6): mov 0xfffffcec(%rbp),%edx
6dbc(3): mov %rbx,%r8
6dbf(7): mov 0xfffffcf8(%rbp),%rsi
6dc6(7): mov 0xfffffcf0(%rbp),%rdi
6dcd(5): call 0xffffe853(%rip)
6dd2(2): test %al,%al
6dd4(6): jz 0xffffefbc(%rip)
6dda(3): mov %r12d,%eax
6ddd(3): and $0x12,%eax
6de0(6): mov %eax,0xfffffca4(%rbp)
6de6(5): jmp 0xfffff7e3(%rip)
6deb(5): nop 0x0(%rax,%rax,1)
6df0(7): mov 0xfffffcf8(%rbp),%rdi
6df7(3): mov %rbx,%rcx
6dfa(5): mov $0x1,%edx
6dff(2): xor %esi,%esi
6e01(5): call 0xffffe8ef(%rip)
6e06(5): jmp 0xfffff498(%rip)
6e0b(5): nop 0x0(%rax,%rax,1)
6e10(7): lea 0xe063(%rip),%rsi
6e17(5): mov $0x5,%edx
6e1c(2): xor %edi,%edi
6e1e(5): call 0xffffbac2(%rip)
6e23(5): mov $0x1,%edi
6e28(3): mov %rax,%rsi
6e2b(2): xor %eax,%eax
6e2d(5): call 0xffffbe33(%rip)
6e32(7): mov 0xfffffcb0(%rbp),%rdx
6e39(7): mov 0xfffffcf8(%rbp),%rsi
6e40(7): mov 0xfffffcf0(%rbp),%rdi
6e47(5): call 0xffffdfe9(%rip)
6e4c(5): jmp 0xfffff448(%rip)
6e51(7): nop 0x0(%rax)
6e58(7): mov 0xfffffe10(%rbp),%rax
6e5f(7): cmp %rax,0xfffffd80(%rbp)
6e66(6): jnz 0xffffee2f(%rip)
6e6c(4): movzx 0x17(%rbx),%eax
6e70(2): test %al,%al
6e72(6): jnz 0x396(%rip)
6e78(4): cmp $0x2,0x4(%rbx)
6e7c(5): mov $0x1,%ecx
6e81(6): mov $0x1,%r15d
6e87(6): jz 0x18e(%rip)
6e8d(7): lea 0xfffffea0(%rbp),%r12
6e94(7): mov 0xfffffcf8(%rbp),%rsi
6e9b(5): mov $0x1,%edi
6ea0(7): mov %r9b,0xfffffca8(%rbp)
6ea7(7): mov %r8b,0xfffffcb0(%rbp)
6eae(3): mov %r12,%rdx
6eb1(5): call 0xffffba5f(%rip)
6eb6(2): test %eax,%eax
6eb8(8): movzx 0xfffffcb0(%rbp),%r8d
6ec0(8): movzx 0xfffffca8(%rbp),%r9d
6ec8(6): jz 0x100a(%rip)
6ece(3): xor %r14d,%r14d
6ed1(5): jmp 0xffffedce(%rip)
6ed6(a): nop 0x0(%rax,%rax,1)
6ee0(4): sub $0x30,%rsp
6ee4(7): mov 0xfffffcd0(%rbp),%rsi
6eeb(5): lea 0xf(%rsp),%rax
6ef0(4): and $0xfffffff0,%rax
6ef4(3): test %r14b,%r14b
6ef7(7): mov %rax,0xfffffcd8(%rbp)
6efe(3): mov %rsi,(%rax)
6f01(4): mov %rdx,0x8(%rax)
6f05(4): mov %rcx,0x10(%rax)
6f09(2): jnz 0x18(%rip)
6f0b(6): mov 0xfffffe28(%rbp),%eax
6f11(5): and $0xf000,%eax
6f16(5): cmp $0x4000,%eax
6f1b(6): jz 0x105d(%rip)
6f21(6): mov 0xfffffca4(%rbp),%esi
6f27(7): mov 0xfffffcf8(%rbp),%r15
6f2e(2): not %esi
6f30(3): mov %r15,%rdi
6f33(3): and %r12d,%esi
6f36(5): call 0xffffb8aa(%rip)
6f3b(2): test %eax,%eax
6f3d(6): jz 0x7c3(%rip)
6f43(3): mov %r15,%rsi
6f46(5): mov $0x4,%edi
6f4b(5): call 0x7b65(%rip)
6f50(7): lea 0xdf49(%rip),%rsi
6f57(3): mov %rax,%r13
6f5a(5): mov $0x5,%edx
6f5f(2): xor %edi,%edi
6f61(5): call 0xffffb97f(%rip)
6f66(3): mov %rax,%r12
6f69(5): call 0xffffb807(%rip)
6f6e(2): mov (%rax),%esi
6f70(3): mov %r13,%rcx
6f73(3): mov %r12,%rdx
6f76(2): xor %edi,%edi
6f78(2): xor %eax,%eax
6f7a(5): call 0xffffbd36(%rip)
6f7f(5): jmp 0xfffffa91(%rip)
6f84(4): nop 0x0(%rax)
6f88(7): mov 0xfffffd80(%rbp),%rdx
6f8f(7): mov 0xfffffd88(%rbp),%rsi
6f96(7): mov 0xfffffcf8(%rbp),%rdi
6f9d(5): call 0x2e83(%rip)
6fa2(7): mov %rax,0xfffffca8(%rbp)
6fa9(8): cmp $0x0,0xfffffca8(%rbp)
6fb1(2): jz 0x4f(%rip)
6fb3(6): mov 0xfffffcec(%rbp),%eax
6fb9(5): and $0xf000,%eax
6fbe(5): cmp $0x4000,%eax
6fc3(6): jz 0xfffffb48(%rip)
6fc9(4): movzx 0x2e(%rbx),%ecx
6fcd(7): mov 0xfffffcd8(%rbp),%r8d
6fd4(5): mov $0x1,%edx
6fd9(7): mov 0xfffffcf8(%rbp),%rsi
6fe0(7): mov 0xfffffca8(%rbp),%rdi
6fe7(5): call 0xffffdf09(%rip)
6fec(2): test %al,%al
6fee(6): jz 0xfffffb98(%rip)
6ff4(5): jmp 0xfffff2cc(%rip)
6ff9(7): nop 0x0(%rax)
7000(4): movzx 0x18(%rbx),%eax
7004(5): jmp 0xfffffbc7(%rip)
7009(7): nop 0x0(%rax)
7010(2): xor %ecx,%ecx
7012(3): xor %r15d,%r15d
7015(6): mov 0xfffffd98(%rbp),%eax
701b(7): lea 0xfffffd80(%rbp),%rdx
7022(5): and $0xf000,%eax
7027(5): cmp $0xa000,%eax
702c(6): jz 0xca7(%rip)
7032(2): mov (%rbx),%esi
7034(2): test %esi,%esi
7036(6): jz 0x4e2(%rip)
703c(2): test %cl,%cl
703e(6): jnz 0x1094(%rip)
7044(4): cmp $0x0,0x18(%rbx)
7048(6): jnz 0xfffffe86(%rip)
704e(4): cmp $0x2,0x4(%rbx)
7052(6): jz 0xfffffe7c(%rip)
7058(3): mov 0x18(%rdx),%eax
705b(5): and $0xf000,%eax
7060(5): cmp $0xa000,%eax
7065(6): jnz 0xfffffe69(%rip)
706b(5): mov 0x18(%r12),%eax
7070(5): and $0xf000,%eax
7075(5): cmp $0xa000,%eax
707a(6): jz 0xfffffe54(%rip)
7080(7): mov 0xfffffcf8(%rbp),%rdx
7087(5): mov $0x4,%esi
708c(5): mov $0x1,%edi
7091(5): call 0x78ff(%rip)
7096(7): mov 0xfffffcf0(%rbp),%rdx
709d(5): mov $0x4,%esi
70a2(2): xor %edi,%edi
70a4(3): mov %rax,%r12
70a7(5): call 0x78e9(%rip)
70ac(7): lea 0xdd89(%rip),%rsi
70b3(3): mov %rax,%rbx
70b6(5): mov $0x5,%edx
70bb(2): xor %edi,%edi
70bd(5): call 0xffffb823(%rip)
70c2(3): mov %r12,%r8
70c5(3): mov %rax,%rdx
70c8(3): mov %rbx,%rcx
70cb(2): xor %esi,%esi
70cd(2): xor %edi,%edi
70cf(2): xor %eax,%eax
70d1(5): call 0xffffbbdf(%rip)
70d6(5): jmp 0xffffecba(%rip)
70db(5): nop 0x0(%rax,%rax,1)
70e0(4): cmp $0x0,0x18(%rbx)
70e4(6): jz 0xfffff62c(%rip)
70ea(5): jmp 0xfffffb96(%rip)
70ef(1): nop 
70f0(5): mov 0x18(%r12),%eax
70f5(5): and $0xf000,%eax
70fa(5): cmp $0xa000,%eax
70ff(6): jz 0xffffeba0(%rip)
7105(2): test %cl,%cl
7107(2): jz 0xe(%rip)
7109(6): cmp $0x1,0x10(%r12)
710f(6): jnbe 0x13bc(%rip)
7115(3): mov 0x18(%rdx),%eax
7118(5): and $0xf000,%eax
711d(5): cmp $0xa000,%eax
7122(2): jz 0x2e(%rip)
7124(5): mov 0x8(%r12),%rax
7129(4): cmp %rax,0x8(%rdx)
712d(6): jnz 0xffffeb72(%rip)
7133(4): mov (%r12),%rax
7137(3): cmp %rax,(%rdx)
713a(6): jnz 0xffffeb65(%rip)
7140(4): movzx 0x17(%rbx),%eax
7144(2): test %al,%al
7146(6): jnz 0xc2(%rip)
714c(4): movzx 0x18(%rbx),%esi
7150(3): test %sil,%sil
7153(6): jz 0x3ef(%rip)
7159(6): mov 0xfffffd98(%rbp),%eax
715f(5): and $0xf000,%eax
7164(5): cmp $0xa000,%eax
7169(6): jnz 0x3d9(%rip)
716f(6): cmp $0x1,0x10(%r12)
7175(6): jbe 0x3cd(%rip)
717b(7): mov 0xfffffcf0(%rbp),%rdi
7182(7): mov %r9b,0xfffffca4(%rbp)
7189(7): mov %r8b,0xfffffca8(%rbp)
7190(7): mov %rdx,0xfffffcb0(%rbp)
7197(5): call 0xffffb889(%rip)
719c(3): test %rax,%rax
719f(3): mov %rax,%r15
71a2(7): mov 0xfffffcb0(%rbp),%rdx
71a9(8): movzx 0xfffffca8(%rbp),%r8d
71b1(8): movzx 0xfffffca4(%rbp),%r9d
71b9(6): jz 0x389(%rip)
71bf(7): mov 0xfffffcf8(%rbp),%rsi
71c6(3): mov %rax,%rdi
71c9(7): mov %r9b,0xfffffca8(%rbp)
71d0(7): mov %r8b,0xfffffcb0(%rbp)
71d7(5): call 0x8069(%rip)
71dc(3): mov %r15,%rdi
71df(3): xor $0x1,%eax
71e2(3): mov %eax,%r12d
71e5(5): call 0xffffbc2b(%rip)
71ea(8): movzx 0xfffffcb0(%rbp),%r8d
71f2(8): movzx 0xfffffca8(%rbp),%r9d
71fa(2): xor %eax,%eax
71fc(3): test %r12b,%r12b
71ff(6): jz 0xfffffe81(%rip)
7205(3): nop (%rax)
7208(3): mov %eax,%r14d
720b(5): jmp 0xffffea94(%rip)
7210(4): mov 0x40(%rbx),%rdi
7214(7): mov 0xfffffcf8(%rbp),%rsi
721b(7): lea 0xfffffe10(%rbp),%rdx
7222(7): mov %r9b,0xfffffca8(%rbp)
7229(7): mov %r8b,0xfffffcb0(%rbp)
7230(5): call 0x4590(%rip)
7235(2): test %al,%al
7237(8): movzx 0xfffffcb0(%rbp),%r8d
723f(8): movzx 0xfffffca8(%rbp),%r9d
7247(6): jnz 0x134e(%rip)
724d(7): cmp $0x4000,%r12d
7254(2): jz 0x1c(%rip)
7256(6): mov 0xfffffe28(%rbp),%eax
725c(2): mov %eax,%edx
725e(6): and $0xf000,%edx
7264(6): cmp $0x4000,%edx
726a(6): jz 0xfffffaf3(%rip)
7270(3): mov (%rbx),%r15d
7273(4): movzx 0x18(%rbx),%eax
7277(2): test %al,%al
7279(6): jnz 0x9b7(%rip)
727f(3): test %r15d,%r15d
7282(6): jnz 0xfffff4ec(%rip)
7288(6): mov 0xfffffe28(%rbp),%edx
728e(6): and $0xf000,%edx
7294(6): cmp $0x4000,%edx
729a(4): setz %r12b
729e(3): or %al,%r12b
72a1(6): jz 0xb9a(%rip)
72a7(3): mov %r8d,%r14d
72aa(6): mov $0x11,%r15d
72b0(b): mov $0x0,0xfffffcb0(%rbp)
72bb(5): jmp 0xffffeb53(%rip)
72c0(7): mov 0xfffffd80(%rbp),%rsi
72c7(7): mov 0xfffffd88(%rbp),%rdi
72ce(5): call 0x2a82(%rip)
72d3(5): jmp 0xfffff755(%rip)
72d8(8): nop 0x0(%rax,%rax,1)
72e0(7): mov 0xfffffcf8(%rbp),%rsi
72e7(5): mov $0x4,%edi
72ec(5): call 0x77c4(%rip)
72f1(5): mov $0x5,%edx
72f6(3): mov %rax,%r12
72f9(7): lea 0xdd1e(%rip),%rsi
7300(5): jmp 0xfffff07e(%rip)
7305(3): nop (%rax)
7308(7): cmp $0x8000,%r15d
730f(6): jz 0x801(%rip)
7315(7): cmp $0xa000,%r15d
731c(4): setnz %r8b
7320(4): and 0x14(%rbx),%r8b
7324(6): jnz 0x7ec(%rip)
732a(7): cmp $0x1000,%r15d
7331(6): jz 0x10c1(%rip)
7337(3): mov %r15d,%eax
733a(3): and $0xbf,%ah
733d(5): cmp $0x2000,%eax
7342(6): jz 0xcea(%rip)
7348(7): cmp $0xc000,%r15d
734f(6): jz 0xcdd(%rip)
7355(7): cmp $0xa000,%r15d
735c(6): jz 0x1384(%rip)
7362(7): mov 0xfffffcf0(%rbp),%rsi
7369(5): mov $0x4,%edi
736e(5): call 0x7742(%rip)
7373(5): mov $0x5,%edx
7378(3): mov %rax,%r12
737b(7): lea 0xdc83(%rip),%rsi
7382(5): jmp 0xfffff2a6(%rip)
7387(9): nop 0x0(%rax,%rax,1)
7390(3): mov %rdx,%rsi
7393(5): call 0x2a2d(%rip)
7398(7): mov %rax,0xfffffca8(%rbp)
739f(5): jmp 0xfffff75e(%rip)
73a4(4): nop 0x0(%rax)
73a8(7): mov 0xfffffcf0(%rbp),%rsi
73af(5): mov $0x4,%edi
73b4(5): call 0x76fc(%rip)
73b9(7): lea 0xd4d0(%rip),%rsi
73c0(3): mov %rax,%rbx
73c3(2): xor %edi,%edi
73c5(5): mov $0x5,%edx
73ca(5): call 0xffffb516(%rip)
73cf(3): mov %rbx,%rcx
73d2(3): mov %rax,%rdx
73d5(2): xor %esi,%esi
73d7(2): xor %edi,%edi
73d9(2): xor %eax,%eax
73db(5): call 0xffffb8d5(%rip)
73e0(5): jmp 0xffffeee6(%rip)
73e5(3): nop (%rax)
73e8(7): mov 0xfffffd80(%rbp),%rsi
73ef(7): mov 0xfffffd88(%rbp),%rdi
73f6(5): call 0x29ca(%rip)
73fb(7): mov %rax,0xfffffca8(%rbp)
7402(5): jmp 0xfffffba7(%rip)
7407(9): nop 0x0(%rax,%rax,1)
7410(7): lea 0xda0f(%rip),%rsi
7417(2): xor %edi,%edi
7419(5): call 0xffffb4c7(%rip)
741e(3): mov %rax,%rdx
7421(5): jmp 0xfffff269(%rip)
7426(a): nop 0x0(%rax,%rax,1)
7430(7): mov 0x213131(%rip),%rdx
7437(5): mov $0x4,%esi
743c(5): mov $0x1,%edi
7441(5): call 0x754f(%rip)
7446(7): mov 0x213123(%rip),%rdx
744d(5): mov $0x4,%esi
7452(2): xor %edi,%edi
7454(3): mov %rax,%r12
7457(5): call 0x7539(%rip)
745c(7): lea 0xd67d(%rip),%rsi
7463(3): mov %rax,%rbx
7466(5): mov $0x5,%edx
746b(2): xor %edi,%edi
746d(5): call 0xffffb473(%rip)
7472(3): mov %r12,%r8
7475(3): mov %rax,%rdx
7478(3): mov %rbx,%rcx
747b(2): xor %eax,%eax
747d(2): xor %esi,%esi
747f(2): xor %edi,%edi
7481(5): call 0xffffb82f(%rip)
7486(7): mov 0xfffffcc0(%rbp),%rax
748d(6): mov $0x1,%r12d
7493(3): mov $0x1,(%rax)
7496(5): jmp 0xffffee30(%rip)
749b(5): nop 0x0(%rax,%rax,1)
74a0(5): call 0xffffb430(%rip)
74a5(2): test %eax,%eax
74a7(6): jz 0xffffefca(%rip)
74ad(5): call 0xffffb2c3(%rip)
74b2(3): cmp $0x2,(%rax)
74b5(3): mov %rax,%r14
74b8(6): jz 0xffffefb9(%rip)
74be(7): mov 0xfffffcf8(%rbp),%rdx
74c5(5): mov $0x4,%esi
74ca(5): mov $0x1,%edi
74cf(5): call 0x74c1(%rip)
74d4(7): mov 0xfffffcf0(%rbp),%rdx
74db(5): mov $0x4,%esi
74e0(2): xor %edi,%edi
74e2(3): mov %rax,%r12
74e5(5): call 0x74ab(%rip)
74ea(7): lea 0xd61f(%rip),%rsi
74f1(3): mov %rax,%rbx
74f4(5): mov $0x5,%edx
74f9(2): xor %edi,%edi
74fb(5): call 0xffffb3e5(%rip)
7500(3): mov %r12,%r8
7503(3): mov %rbx,%rcx
7506(3): mov %rax,%rdx
7509(3): mov (%r14),%esi
750c(5): jmp 0xfffff72a(%rip)
7511(7): nop 0x0(%rax)
7518(4): movzx 0x18(%rbx),%esi
751c(3): test %sil,%sil
751f(6): jnz 0xfffffbd1(%rip)
7525(4): cmp $0x0,0x15(%rbx)
7529(6): jnz 0xfffffbc7(%rip)
752f(3): mov 0x18(%rdx),%eax
7532(5): and $0xf000,%eax
7537(5): cmp $0xa000,%eax
753c(6): jnz 0xfe9(%rip)
7542(4): cmp $0x0,0x2c(%rbx)
7546(2): jz 0x17(%rip)
7548(5): mov 0x18(%r12),%eax
754d(5): and $0xf000,%eax
7552(5): cmp $0xa000,%eax
7557(6): jz 0xffffe748(%rip)
755d(4): cmp $0x2,0x4(%rbx)
7561(6): jnz 0xfffffb1f(%rip)
7567(3): mov 0x18(%rdx),%eax
756a(5): and $0xf000,%eax
756f(5): cmp $0xa000,%eax
7574(6): jz 0x1a78(%rip)
757a(4): movdqa (%rdx),%xmm0
757e(7): movaps %xmm0,0xffffff30(%rbp)
7585(5): movdqa 0x10(%rdx),%xmm0
758a(7): movaps %xmm0,0xffffff40(%rbp)
7591(5): movdqa 0x20(%rdx),%xmm0
7596(7): movaps %xmm0,0xffffff50(%rbp)
759d(5): movdqa 0x30(%rdx),%xmm0
75a2(7): movaps %xmm0,0xffffff60(%rbp)
75a9(5): movdqa 0x40(%rdx),%xmm0
75ae(7): movaps %xmm0,0xffffff70(%rbp)
75b5(5): movdqa 0x50(%rdx),%xmm0
75ba(4): movaps %xmm0,0xffffff80(%rbp)
75be(5): movdqa 0x60(%rdx),%xmm0
75c3(4): movaps %xmm0,0xffffff90(%rbp)
75c7(5): movdqa 0x70(%rdx),%xmm0
75cc(4): movaps %xmm0,0xffffffa0(%rbp)
75d0(8): movdqa 0x80(%rdx),%xmm0
75d8(4): movaps %xmm0,0xffffffb0(%rbp)
75dc(5): mov 0x18(%r12),%eax
75e1(5): and $0xf000,%eax
75e6(5): cmp $0xa000,%eax
75eb(6): jz 0x19be(%rip)
75f1(6): movdqa (%r12),%xmm0
75f7(7): movaps %xmm0,0xfffffea0(%rbp)
75fe(7): movdqa 0x10(%r12),%xmm0
7605(7): movaps %xmm0,0xfffffeb0(%rbp)
760c(7): movdqa 0x20(%r12),%xmm0
7613(7): movaps %xmm0,0xfffffec0(%rbp)
761a(7): movdqa 0x30(%r12),%xmm0
7621(7): movaps %xmm0,0xfffffed0(%rbp)
7628(7): movdqa 0x40(%r12),%xmm0
762f(7): movaps %xmm0,0xfffffee0(%rbp)
7636(7): movdqa 0x50(%r12),%xmm0
763d(7): movaps %xmm0,0xfffffef0(%rbp)
7644(7): movdqa 0x60(%r12),%xmm0
764b(7): movaps %xmm0,0xffffff00(%rbp)
7652(7): movdqa 0x70(%r12),%xmm0
7659(7): movaps %xmm0,0xffffff10(%rbp)
7660(a): movdqa 0x80(%r12),%xmm0
766a(7): movaps %xmm0,0xffffff20(%rbp)
7671(7): mov 0xfffffea8(%rbp),%rax
7678(7): cmp %rax,0xffffff38(%rbp)
767f(6): jnz 0xffffe620(%rip)
7685(7): mov 0xfffffea0(%rbp),%rax
768c(7): cmp %rax,0xffffff30(%rbp)
7693(6): jnz 0xffffe60c(%rip)
7699(4): cmp $0x0,0x17(%rbx)
769d(6): jz 0xfffff9e3(%rip)
76a3(5): mov 0x18(%r12),%eax
76a8(5): and $0xf000,%eax
76ad(5): cmp $0xa000,%eax
76b2(4): setnz %r14b
76b6(5): jmp 0xffffe5e9(%rip)
76bb(5): nop 0x0(%rax,%rax,1)
76c0(7): lea 0xffffff30(%rbp),%rcx
76c7(7): mov 0xfffffcf8(%rbp),%rsi
76ce(5): mov $0x1,%edi
76d3(3): mov %rcx,%rdx
76d6(7): mov %rcx,0xfffffca8(%rbp)
76dd(5): call 0xffffb233(%rip)
76e2(2): test %eax,%eax
76e4(6): jnz 0xffffe7ec(%rip)
76ea(7): mov 0xfffffca8(%rbp),%rcx
76f1(3): mov %rcx,%rdx
76f4(5): jmp 0xffffe756(%rip)
76f9(7): nop 0x0(%rax)
7700(7): mov 0xfffffcf8(%rbp),%rsi
7707(7): lea 0xfffffe10(%rbp),%rdx
770e(5): mov $0x1,%edi
7713(5): call 0xffffb1fd(%rip)
7718(2): test %eax,%eax
771a(6): jnz 0xa0b(%rip)
7720(7): mov 0xfffffe28(%rbp),%r12d
7727(7): mov $0x0,0xfffffcd0(%rbp)
772e(3): mov %r12d,%eax
7731(5): and $0x1c0,%eax
7736(5): cmp $0x1c0,%eax
773b(2): jz 0x2d(%rip)
773d(7): mov 0xfffffcf8(%rbp),%rdi
7744(3): mov %r12d,%esi
7747(6): or $0x1c0,%esi
774d(5): call 0xffffb543(%rip)
7752(2): test %eax,%eax
7754(7): mov %r12d,0xfffffc74(%rbp)
775b(7): mov $0x1,0xfffffcd0(%rbp)
7762(6): jnz 0x1021(%rip)
7768(7): mov 0xfffffcc8(%rbp),%rax
776f(3): cmp $0x0,(%rax)
7772(6): jz 0xdfa(%rip)
7778(4): cmp $0x0,0x2e(%rbx)
777c(2): jz 0x4c(%rip)
777e(4): cmp $0x0,0x18(%rbx)
7782(6): jz 0xeab(%rip)
7788(7): mov 0xfffffcf8(%rbp),%rsi
778f(5): mov $0x4,%edi
7794(5): call 0x731c(%rip)
7799(7): lea 0xd71b(%rip),%rsi
77a0(3): mov %rax,%r12
77a3(5): mov $0x5,%edx
77a8(2): xor %edi,%edi
77aa(5): call 0xffffb136(%rip)
77af(3): mov %r12,%rdx
77b2(3): mov %rax,%rsi
77b5(5): mov $0x1,%edi
77ba(2): xor %eax,%eax
77bc(5): call 0xffffb4a4(%rip)
77c1(7): nop 0x0(%rax)
77c8(7): mov 0xfffffcb8(%rbp),%rax
77cf(3): test %rax,%rax
77d2(4): setnz %r12b
77d6(4): and 0x1c(%rbx),%r12b
77da(6): jnz 0x7e1(%rip)
77e0(4): movdqu (%rbx),%xmm0
77e4(5): mov $0x2,%esi
77e9(7): mov 0xfffffcf0(%rbp),%rdi
77f0(7): movaps %xmm0,0xfffffd10(%rbp)
77f7(5): movdqu 0x10(%rbx),%xmm0
77fc(7): movaps %xmm0,0xfffffd20(%rbp)
7803(5): movdqu 0x20(%rbx),%xmm0
7808(7): movaps %xmm0,0xfffffd30(%rbp)
780f(5): movdqu 0x30(%rbx),%xmm0
7814(7): movaps %xmm0,0xfffffd40(%rbp)
781b(5): movdqu 0x40(%rbx),%xmm0
7820(7): movaps %xmm0,0xfffffd50(%rbp)
7827(5): call 0x7de9(%rip)
782c(3): test %rax,%rax
782f(7): mov %rax,0xfffffc98(%rbp)
7836(6): jz 0xe62(%rip)
783c(4): cmp $0x3,0x4(%rbx)
7840(2): jnz 0xc(%rip)
7842(a): mov $0x2,0xfffffd14(%rbp)
784c(7): mov 0xfffffc98(%rbp),%rax
7853(3): cmp $0x0,(%rax)
7856(6): jz 0x153f(%rip)
785c(7): lea 0xfffffd10(%rbp),%rax
7863(7): lea 0xfffffd80(%rbp),%r10
786a(7): mov %r13d,0xfffffc80(%rbp)
7871(7): mov 0xfffffc98(%rbp),%r15
7878(7): mov 0xfffffcc0(%rbp),%r13
787f(6): mov $0x1,%r12d
7885(7): mov %rax,0xfffffcb8(%rbp)
788c(7): lea 0xfffffd07(%rbp),%rax
7893(7): mov $0x0,0xfffffceb(%rbp)
789a(7): mov %r14b,0xfffffc90(%rbp)
78a1(7): mov %rbx,0xfffffc88(%rbp)
78a8(7): mov %rax,0xfffffcb0(%rbp)
78af(7): lea 0xfffffd08(%rbp),%rax
78b6(7): mov %r10,0xfffffcc0(%rbp)
78bd(7): mov %rax,0xfffffca8(%rbp)
78c4(2): jmp 0x30(%rip)
78c6(a): nop 0x0(%rax,%rax,1)
78d0(7): movzx 0xfffffd08(%rbp),%eax
78d7(3): mov %r15,%rdi
78da(6): or %al,0xfffffceb(%rbp)
78e0(5): call 0xffffb020(%rip)
78e5(5): lea 0x1(%r15,%rax,1),%r15
78ea(4): cmp $0x0,(%r15)
78ee(6): jz 0xa3(%rip)
78f4(7): mov 0xfffffcf0(%rbp),%rdi
78fb(2): xor %edx,%edx
78fd(3): mov %r15,%rsi
7900(5): call 0x40c0(%rip)
7905(7): mov 0xfffffcf8(%rbp),%rdi
790c(2): xor %edx,%edx
790e(3): mov %r15,%rsi
7911(3): mov %rax,%rbx
7914(5): call 0x40ac(%rip)
7919(3): mov %rax,%r14
791c(7): mov 0xfffffcc8(%rbp),%rax
7923(7): mov 0xfffffcb8(%rbp),%r9
792a(7): mov 0xfffffcd8(%rbp),%r8
7931(7): mov 0xfffffcc0(%rbp),%rcx
7938(3): mov %r14,%rsi
793b(6): mov 0xfffffce0(%rbp),%edx
7941(3): mov %rbx,%rdi
7944(3): movzx (%rax),%eax
7947(2): push $0x0
7949(6): push 0xfffffcb0(%rbp)
794f(6): push 0xfffffca8(%rbp)
7955(2): push $0x0
7957(6): mov %al,0xfffffd08(%rbp)
795d(5): call 0xffffe123(%rip)
7962(3): and %eax,%r12d
7965(7): movzx 0xfffffd07(%rbp),%eax
796c(4): add $0x20,%rsp
7970(4): or %al,0x0(%r13)
7974(3): mov %r14,%rdi
7977(5): call 0xffffb499(%rip)
797c(3): mov %rbx,%rdi
797f(5): call 0xffffb491(%rip)
7984(7): cmp $0x0,0xfffffd07(%rbp)
798b(6): jz 0xffffff45(%rip)
7991(8): movzx 0xfffffc90(%rbp),%r14d
7999(7): mov 0xfffffc88(%rbp),%rbx
79a0(7): mov 0xfffffc80(%rbp),%r13d
79a7(7): mov 0xfffffc98(%rbp),%rdi
79ae(5): call 0xffffb462(%rip)
79b3(7): movzx 0xfffffceb(%rbp),%ecx
79ba(7): mov 0xfffffcc8(%rbp),%rax
79c1(2): mov %cl,(%rax)
79c3(3): test %r13b,%r13b
79c6(6): jnz 0x5dc(%rip)
79cc(7): movzx 0xfffffcd0(%rbp),%eax
79d3(7): mov $0x0,0xfffffce0(%rbp)
79da(6): mov %al,0xfffffceb(%rbp)
79e0(5): jmp 0xffffe6ba(%rip)
79e5(3): nop (%rax)
79e8(4): cmp $0x0,0x18(%rbx)
79ec(6): jz 0x40f(%rip)
79f2(3): mov (%rbx),%r15d
79f5(3): test %r15d,%r15d
79f8(6): jz 0x403(%rip)
79fe(3): test %r13b,%r13b
7a01(6): jnz 0xffffed59(%rip)
7a07(6): mov 0xfffffd98(%rbp),%edx
7a0d(6): and $0xf000,%edx
7a13(6): cmp $0x4000,%edx
7a19(6): jz 0x5bd(%rip)
7a1f(7): mov 0xfffffcf0(%rbp),%rdi
7a26(7): mov %r9b,0xfffffca8(%rbp)
7a2d(7): mov %r8b,0xfffffcb0(%rbp)
7a34(5): call 0x3b5c(%rip)
7a39(3): cmp $0x2e,(%rax)
7a3c(3): mov %rax,%r14
7a3f(8): movzx 0xfffffcb0(%rbp),%r8d
7a47(8): movzx 0xfffffca8(%rbp),%r9d
7a4f(6): jnz 0xffffed8e(%rip)
7a55(5): mov $0x1,%eax
7a5a(5): jmp 0xffffed48(%rip)
7a5f(1): nop 
7a60(7): mov 0xfffffca8(%rbp),%rsi
7a67(7): mov 0xfffffcf8(%rbp),%rdi
7a6e(5): call 0x77d2(%rip)
7a73(2): test %al,%al
7a75(6): jnz 0x6d5(%rip)
7a7b(3): mov 0x4(%rbx),%eax
7a7e(3): cmp $0x4,%eax
7a81(6): jz 0xfffff57f(%rip)
7a87(3): cmp $0x3,%eax
7a8a(2): jnz 0xb(%rip)
7a8c(3): test %r13b,%r13b
7a8f(6): jnz 0xfffff571(%rip)
7a95(7): mov 0xfffffca8(%rbp),%rdx
7a9c(5): mov $0x4,%esi
7aa1(5): mov $0x1,%edi
7aa6(5): call 0x6eea(%rip)
7aab(7): mov 0xfffffcf8(%rbp),%rdx
7ab2(2): xor %edi,%edi
7ab4(5): mov $0x4,%esi
7ab9(3): mov %rax,%r13
7abc(5): call 0x6ed4(%rip)
7ac1(7): lea 0xcfe8(%rip),%rsi
7ac8(3): mov %rax,%r12
7acb(2): xor %edi,%edi
7acd(5): mov $0x5,%edx
7ad2(5): call 0xffffae0e(%rip)
7ad7(3): mov %r13,%r8
7ada(3): mov %rax,%rdx
7add(3): mov %r12,%rcx
7ae0(2): xor %esi,%esi
7ae2(2): xor %edi,%edi
7ae4(2): xor %eax,%eax
7ae6(5): call 0xffffb1ca(%rip)
7aeb(5): jmp 0xfffff09b(%rip)
7af0(4): cmp $0x0,0x17(%rbx)
7af4(6): jz 0xfffff0a4(%rip)
7afa(b): mov $0x0,0xfffffca8(%rbp)
7b05(5): jmp 0xfffff0ce(%rip)
7b0a(6): nop 0x0(%rax,%rax,1)
7b10(6): mov 0xfffffd98(%rbp),%eax
7b16(2): xor %esi,%esi
7b18(4): cmp $0x2,0x4(%rbx)
7b1c(7): mov 0xfffffcf0(%rbp),%rdi
7b23(6): mov %eax,0xfffffcc0(%rbp)
7b29(4): movzx 0x23(%rbx),%eax
7b2d(4): setz %sil
7b31(3): shl/sal $0x11,%esi
7b34(6): mov %al,0xfffffcc8(%rbp)
7b3a(2): xor %eax,%eax
7b3c(5): call 0x3b84(%rip)
7b41(2): test %eax,%eax
7b43(6): mov %eax,0xfffffce0(%rbp)
7b49(6): js 0x702(%rip)
7b4f(6): mov 0xfffffce0(%rbp),%esi
7b55(7): lea 0xfffffea0(%rbp),%rdx
7b5c(5): mov $0x1,%edi
7b61(5): call 0xffffb08f(%rip)
7b66(2): test %eax,%eax
7b68(6): jnz 0x91f(%rip)
7b6e(7): mov 0xfffffea8(%rbp),%rax
7b75(7): cmp %rax,0xfffffd88(%rbp)
7b7c(2): jnz 0x16(%rip)
7b7e(7): mov 0xfffffea0(%rbp),%rax
7b85(7): cmp %rax,0xfffffd80(%rbp)
7b8c(6): jz 0xd2a(%rip)
7b92(7): mov 0xfffffcf0(%rbp),%rsi
7b99(5): mov $0x4,%edi
7b9e(5): call 0x6f12(%rip)
7ba3(7): lea 0xcfce(%rip),%rsi
7baa(3): mov %rax,%r12
7bad(5): mov $0x5,%edx
7bb2(2): xor %edi,%edi
7bb4(5): call 0xffffad2c(%rip)
7bb9(3): mov %r12,%rcx
7bbc(3): mov %rax,%rdx
7bbf(2): xor %esi,%esi
7bc1(2): xor %edi,%edi
7bc3(2): xor %eax,%eax
7bc5(5): call 0xffffb0eb(%rip)
7bca(3): xor %r8d,%r8d
7bcd(b): mov $0x0,0xfffffcd0(%rbp)
7bd8(6): mov 0xfffffce0(%rbp),%edi
7bde(7): mov %r8b,0xfffffcd8(%rbp)
7be5(5): call 0xffffae4b(%rip)
7bea(2): test %eax,%eax
7bec(8): movzx 0xfffffcd8(%rbp),%r8d
7bf4(6): js 0xa53(%rip)
7bfa(7): mov 0xfffffcd0(%rbp),%rdi
7c01(7): mov %r8b,0xfffffcd8(%rbp)
7c08(5): call 0xffffb208(%rip)
7c0d(8): movzx 0xfffffcd8(%rbp),%r8d
7c15(7): mov $0x0,0xfffffce0(%rbp)
7c1c(3): test %r8b,%r8b
7c1f(6): jnz 0xffffe3e0(%rip)
7c25(5): jmp 0xffffedeb(%rip)
7c2a(6): nop 0x0(%rax,%rax,1)
7c30(6): mov 0xfffffd98(%rbp),%eax
7c36(5): and $0xf000,%eax
7c3b(5): cmp $0x4000,%eax
7c40(6): jz 0x390(%rip)
7c46(3): test %r15d,%r15d
7c49(6): jz 0xfffff65e(%rip)
7c4f(5): jmp 0xfffffdd0(%rip)
7c54(4): nop 0x0(%rax)
7c58(7): lea 0xfffffea0(%rbp),%rdx
7c5f(3): mov %r8,%rsi
7c62(5): mov $0x1,%edi
7c67(5): call 0xffffaf39(%rip)
7c6c(2): test %eax,%eax
7c6e(6): jnz 0xffffed0e(%rip)
7c74(7): lea 0xffffff30(%rbp),%rdx
7c7b(3): mov %r12,%rsi
7c7e(5): mov $0x1,%edi
7c83(5): call 0xffffaf1d(%rip)
7c88(2): test %eax,%eax
7c8a(6): jnz 0xffffecf2(%rip)
7c90(7): mov 0xffffff38(%rbp),%rax
7c97(7): cmp %rax,0xfffffea8(%rbp)
7c9e(6): jz 0x1109(%rip)
7ca4(3): mov %r12,%rdi
7ca7(5): call 0xffffb169(%rip)
7cac(7): mov 0xfffffcf8(%rbp),%rdx
7cb3(5): mov $0x3,%esi
7cb8(2): xor %edi,%edi
7cba(5): call 0x6ef6(%rip)
7cbf(5): mov $0x5,%edx
7cc4(3): mov %rax,%r12
7cc7(7): lea 0xcf52(%rip),%rsi
7cce(5): jmp 0xffffe95a(%rip)
7cd3(6): mov 0xfffffe28(%rbp),%eax
7cd9(7): lea 0xfffffd80(%rbp),%rdx
7ce0(5): and $0xf000,%eax
7ce5(5): cmp $0xa000,%eax
7cea(6): jnz 0xfffff348(%rip)
7cf0(7): mov 0xfffffcf8(%rbp),%rsi
7cf7(7): mov 0xfffffcf0(%rbp),%rdi
7cfe(7): mov %r9b,0xfffffca8(%rbp)
7d05(7): mov %r8b,0xfffffcb0(%rbp)
7d0c(5): call 0x7534(%rip)
7d11(2): test %al,%al
7d13(6): jnz 0xfffff36d(%rip)
7d19(2): mov (%rbx),%edi
7d1b(8): movzx 0xfffffcb0(%rbp),%r8d
7d23(8): movzx 0xfffffca8(%rbp),%r9d
7d2b(2): test %edi,%edi
7d2d(6): jnz 0xfffff1a1(%rip)
7d33(3): test %r15d,%r15d
7d36(6): jz 0xfffff198(%rip)
7d3c(5): movzx 0x18(%rbx),%r12d
7d41(5): mov $0x1,%eax
7d46(4): xor $0x1,%r12d
7d4a(5): jmp 0xfffff4b2(%rip)
7d4f(1): nop 
7d50(3): mov %eax,%r15d
7d53(a): mov $0x280375465148160,%rax
7d5d(4): test %rax,0x20(%rbx)
7d61(6): jz 0xffffe2c1(%rip)
7d67(4): movzx 0x25(%rbx),%esi
7d6b(7): mov 0xfffffcf8(%rbp),%rdi
7d72(2): xor %edx,%edx
7d74(3): mov %rbx,%rcx
7d77(7): mov %r8b,0xfffffcd8(%rbp)
7d7e(5): call 0xffffd972(%rip)
7d83(2): test %al,%al
7d85(3): mov %eax,%r15d
7d88(8): movzx 0xfffffcd8(%rbp),%r8d
7d90(6): jnz 0xffffe292(%rip)
7d96(5): movzx 0x26(%rbx),%r14d
7d9b(3): test %r14b,%r14b
7d9e(6): jnz 0xffffec72(%rip)
7da4(3): mov %r12d,%r15d
7da7(5): jmp 0xffffe27b(%rip)
7dac(4): nop 0x0(%rax)
7db0(7): lea 0xd0e1(%rip),%rsi
7db7(5): mov $0x5,%edx
7dbc(2): xor %edi,%edi
7dbe(5): call 0xffffab22(%rip)
7dc3(5): mov $0x1,%edi
7dc8(3): mov %rax,%rsi
7dcb(2): xor %eax,%eax
7dcd(5): call 0xffffae93(%rip)
7dd2(7): mov 0xfffffcb0(%rbp),%rdx
7dd9(7): mov 0xfffffcf8(%rbp),%rsi
7de0(7): mov 0xfffffcf0(%rbp),%rdi
7de7(5): call 0xffffd049(%rip)
7dec(a): mov $0x1,0xfffffce0(%rbp)
7df6(5): jmp 0xffffe13a(%rip)
7dfb(7): mov 0xfffffcf0(%rbp),%rdx
7e02(5): mov $0x4,%esi
7e07(5): mov $0x1,%edi
7e0c(5): call 0x6b84(%rip)
7e11(7): mov 0xfffffcf8(%rbp),%rdx
7e18(5): mov $0x4,%esi
7e1d(2): xor %edi,%edi
7e1f(3): mov %rax,%r12
7e22(5): call 0x6b6e(%rip)
7e27(5): mov $0x5,%edx
7e2c(3): mov %rax,%rbx
7e2f(7): lea 0xca92(%rip),%rsi
7e36(5): jmp 0xfffff285(%rip)
7e3b(4): cmp $0x0,0x15(%rbx)
7e3f(2): jnz 0x1a(%rip)
7e41(4): cmp $0x0,0x22(%rbx)
7e45(6): jz 0x3e1(%rip)
7e4b(8): cmp $0x1,0xfffffe20(%rbp)
7e53(6): jbe 0x3d3(%rip)
7e59(7): mov 0xfffffcf8(%rbp),%r14
7e60(7): mov %r9b,0xfffffcb0(%rbp)
7e67(3): mov %r14,%rdi
7e6a(5): call 0xffffa916(%rip)
7e6f(2): test %eax,%eax
7e71(8): movzx 0xfffffcb0(%rbp),%r9d
7e79(6): jz 0x37a(%rip)
7e7f(5): call 0xffffa8f1(%rip)
7e84(3): cmp $0x2,(%rax)
7e87(3): mov %rax,%r15
7e8a(8): movzx 0xfffffcb0(%rbp),%r9d
7e92(6): jz 0x361(%rip)
7e98(3): mov %r14,%rsi
7e9b(5): mov $0x4,%edi
7ea0(5): call 0x6c10(%rip)
7ea5(7): lea 0xcfbd(%rip),%rsi
7eac(2): xor %edi,%edi
7eae(5): mov $0x5,%edx
7eb3(3): mov %rax,%rbx
7eb6(5): call 0xffffaa2a(%rip)
7ebb(3): mov (%r15),%esi
7ebe(3): mov %rax,%rdx
7ec1(3): mov %rbx,%rcx
7ec4(2): xor %edi,%edi
7ec6(2): xor %eax,%eax
7ec8(5): call 0xffffade8(%rip)
7ecd(5): jmp 0xffffe3f9(%rip)
7ed2(7): lea 0xffffff30(%rbp),%rax
7ed9(7): mov 0xfffffcf0(%rbp),%rsi
7ee0(5): mov $0x1,%edi
7ee5(3): mov %rax,%rdx
7ee8(7): mov %rax,0xfffffc98(%rbp)
7eef(5): call 0xffffaa21(%rip)
7ef4(2): test %eax,%eax
7ef6(8): movzx 0xfffffcb0(%rbp),%r8d
7efe(8): movzx 0xfffffca8(%rbp),%r9d
7f06(6): jnz 0xffffefc8(%rip)
7f0c(2): xor %ecx,%ecx
7f0e(7): mov 0xfffffea8(%rbp),%rax
7f15(7): cmp %rax,0xffffff38(%rbp)
7f1c(2): jnz 0x13(%rip)
7f1e(7): mov 0xfffffea0(%rbp),%rax
7f25(7): cmp %rax,0xffffff30(%rbp)
7f2c(3): setz %cl
7f2f(6): mov 0xffffff48(%rbp),%eax
7f35(7): mov 0xfffffc98(%rbp),%rdx
7f3c(5): and $0xf000,%eax
7f41(5): cmp $0xa000,%eax
7f46(6): jnz 0xfffff0ec(%rip)
7f4c(6): mov 0xfffffeb8(%rbp),%eax
7f52(5): and $0xf000,%eax
7f57(5): cmp $0xa000,%eax
7f5c(6): jnz 0xfffff0d6(%rip)
7f62(4): cmp $0x0,0x15(%rbx)
7f66(6): jz 0xfffff0cc(%rip)
7f6c(5): jmp 0xffffef62(%rip)
7f71(7): nop 0x0(%rax)
7f78(a): mov $0x280375465148160,%rax
7f82(4): test %rax,0x20(%rbx)
7f86(6): jnz 0x5ba(%rip)
7f8c(7): mov $0x0,0xfffffcd0(%rbp)
7f93(a): mov $0x0,0xfffffca4(%rbp)
7f9d(5): jmp 0xfffff82b(%rip)
7fa2(7): mov %r12b,0xfffffceb(%rbp)
7fa9(3): xor %r15d,%r15d
7fac(3): xor %r8d,%r8d
7faf(7): mov $0x0,0xfffffce0(%rbp)
7fb6(5): jmp 0xffffe07e(%rip)
7fbb(7): mov 0xfffffd80(%rbp),%rcx
7fc2(3): cmp %rcx,(%rax)
7fc5(6): jnz 0xfffff9fe(%rip)
7fcb(5): jmp 0xfffff815(%rip)
7fd0(6): mov 0xfffffe28(%rbp),%eax
7fd6(5): and $0xf000,%eax
7fdb(5): cmp $0x4000,%eax
7fe0(6): jz 0xfffffc66(%rip)
7fe6(3): test %r15d,%r15d
7fe9(6): jnz 0xfffffa36(%rip)
7fef(7): mov 0xfffffcf8(%rbp),%rdx
7ff6(5): mov $0x3,%esi
7ffb(2): xor %edi,%edi
7ffd(5): call 0x6bb3(%rip)
8002(7): mov 0xfffffcf0(%rbp),%rdx
8009(5): mov $0x3,%esi
800e(2): xor %edi,%edi
8010(3): mov %rax,%r12
8013(5): call 0x6b9d(%rip)
8018(5): mov $0x5,%edx
801d(3): mov %rax,%rbx
8020(7): lea 0xc941(%rip),%rsi
8027(5): jmp 0xfffff094(%rip)
802c(6): mov 0xfffffca4(%rbp),%edx
8032(7): mov 0xfffffda8(%rbp),%rax
8039(7): lea 0xfffffd10(%rbp),%rcx
8040(7): mov 0xfffffcf8(%rbp),%rsi
8047(2): xor %edi,%edi
8049(7): mov %r8b,0xfffffcd8(%rbp)
8050(2): not %edx
8052(6): and 0xfffffcec(%rbp),%edx
8058(7): mov %rax,0xfffffd10(%rbp)
805f(5): call 0xffffab11(%rip)
8064(2): test %eax,%eax
8066(7): mov $0x0,0xfffffce0(%rbp)
806d(8): movzx 0xfffffcd8(%rbp),%r8d
8075(6): jz 0xffffdf8a(%rip)
807b(7): mov 0xfffffcf8(%rbp),%rsi
8082(5): mov $0x4,%edi
8087(5): call 0x6a29(%rip)
808c(5): mov $0x5,%edx
8091(3): mov %rax,%r13
8094(7): lea 0xcf2f(%rip),%rsi
809b(5): jmp 0xffffeec4(%rip)
80a0(5): call 0x86b0(%rip)
80a5(2): test %eax,%eax
80a7(6): jz 0xffffe0be(%rip)
80ad(5): jmp 0xffffe05d(%rip)
80b2(4): mov 0x40(%rbx),%rdi
80b6(7): mov 0xfffffcf8(%rbp),%rsi
80bd(3): mov %r12,%rdx
80c0(5): call 0x3670(%rip)
80c5(8): movzx 0xfffffcd8(%rbp),%r8d
80cd(5): jmp 0xffffdfa0(%rip)
80d2(7): mov 0xfffffcf8(%rbp),%rsi
80d9(7): mov 0xfffffcf0(%rbp),%rdi
80e0(7): mov %r9b,0xfffffca8(%rbp)
80e7(7): mov %r8b,0xfffffcb0(%rbp)
80ee(5): call 0x7152(%rip)
80f3(3): xor $0x1,%eax
80f6(8): movzx 0xfffffcb0(%rbp),%r8d
80fe(8): movzx 0xfffffca8(%rbp),%r9d
8106(3): mov %eax,%r12d
8109(2): xor %eax,%eax
810b(5): jmp 0xfffff0f1(%rip)
8110(8): movzx 0xfffffcb0(%rbp),%r8d
8118(8): movzx 0xfffffca8(%rbp),%r9d
8120(5): jmp 0xffffe5f0(%rip)
8125(7): mov 0xfffffcf8(%rbp),%rsi
812c(5): mov $0x4,%edi
8131(5): call 0x697f(%rip)
8136(5): mov $0x5,%edx
813b(3): mov %rax,%r13
813e(7): lea 0xccd2(%rip),%rsi
8145(5): jmp 0xffffee1a(%rip)
814a(7): mov 0x21241f(%rip),%rsi
8151(5): mov $0x4,%edi
8156(5): call 0x695a(%rip)
815b(7): lea 0xc916(%rip),%rsi
8162(2): xor %edi,%edi
8164(3): mov %rax,%r12
8167(5): mov $0x5,%edx
816c(5): call 0xffffa774(%rip)
8171(2): xor %esi,%esi
8173(3): mov %rax,%rdx
8176(2): xor %edi,%edi
8178(2): xor %eax,%eax
817a(3): mov %r12,%rcx
817d(5): call 0xffffab33(%rip)
8182(4): cmp $0x0,0x18(%rbx)
8186(6): jnz 0xffffeb7e(%rip)
818c(5): jmp 0xffffe134(%rip)
8191(7): mov %r9b,0xfffffcb0(%rbp)
8198(5): call 0xffffa5d8(%rip)
819d(3): cmp $0x2,(%rax)
81a0(3): mov %rax,%r12
81a3(8): movzx 0xfffffcb0(%rbp),%r9d
81ab(6): jz 0x466(%rip)
81b1(7): mov 0xfffffcf8(%rbp),%rsi
81b8(5): mov $0x4,%edi
81bd(5): call 0x68f3(%rip)
81c2(7): lea 0xcc8f(%rip),%rsi
81c9(5): mov $0x5,%edx
81ce(2): xor %edi,%edi
81d0(3): mov %rax,%rbx
81d3(5): call 0xffffa70d(%rip)
81d8(4): mov (%r12),%esi
81dc(3): mov %rax,%rdx
81df(3): mov %rbx,%rcx
81e2(2): xor %edi,%edi
81e4(2): xor %eax,%eax
81e6(3): xor %r12d,%r12d
81e9(5): call 0xffffaac7(%rip)
81ee(5): jmp 0xffffe0d8(%rip)
81f3(5): movzx 0x2e(%rbx),%r14d
81f8(3): test %r14b,%r14b
81fb(6): jnz 0x5d1(%rip)
8201(3): test %r13b,%r13b
8204(6): jnz 0x5a4(%rip)
820a(b): mov $0x0,0xfffffcb0(%rbp)
8215(6): mov $0x1,%r14d
821b(6): mov $0x11,%r15d
8221(5): jmp 0xffffdcc8(%rip)
8226(4): cmp $0x2,0x4(%rbx)
822a(6): jnz 0xfffff07d(%rip)
8230(6): mov 0xfffffd98(%rbp),%eax
8236(5): and $0xf000,%eax
823b(5): cmp $0x8000,%eax
8240(6): jnz 0xfffffc19(%rip)
8246(5): jmp 0xfffff061(%rip)
824b(7): mov 0xfffffcf0(%rbp),%rsi
8252(5): mov $0x4,%edi
8257(5): call 0x6859(%rip)
825c(5): mov $0x5,%edx
8261(3): mov %rax,%r13
8264(7): lea 0xcc77(%rip),%rsi
826b(5): jmp 0xffffecf4(%rip)
8270(7): mov 0xfffffcec(%rbp),%r8d
8277(7): mov 0xfffffcf8(%rbp),%rdx
827e(5): mov $0xffffffff,%ecx
8283(7): mov 0xfffffcf0(%rbp),%rdi
828a(2): mov %ecx,%esi
828c(5): call 0x2314(%rip)
8291(2): test %eax,%eax
8293(6): jnz 0xffffdfd7(%rip)
8299(5): jmp 0xffffe02d(%rip)
829e(3): mov %r12,%rdx
82a1(3): mov %r14,%rdi
82a4(7): mov %r9b,0xfffffcb0(%rbp)
82ab(7): mov %r8,0xfffffca8(%rbp)
82b2(5): call 0xffffa7de(%rip)
82b7(2): test %eax,%eax
82b9(8): movzx 0xfffffcb0(%rbp),%r9d
82c1(6): jnz 0xffffe588(%rip)
82c7(4): lea 0x0(%r14,%r12,1),%rdi
82cb(3): mov %r15,%rsi
82ce(5): call 0xffffa822(%rip)
82d3(2): test %eax,%eax
82d5(8): movzx 0xfffffcb0(%rbp),%r9d
82dd(7): mov 0xfffffca8(%rbp),%r8
82e4(6): jnz 0xffffe565(%rip)
82ea(7): mov 0xfffffcf8(%rbp),%rdi
82f1(4): or $0xffffffff,%rcx
82f5(2): REPNZ scasb rdi(%es,10),%al
82f7(3): mov %rcx,%rax
82fa(3): not %rax
82fd(4): lea 0xffffffff(%rax),%r14
8301(5): lea 0x1(%r14,%r8,1),%rdi
8306(5): call 0x8d1a(%rip)
830b(7): mov 0x21226e(%rip),%r15
8312(7): mov 0xfffffcf8(%rbp),%rsi
8319(3): mov %r14,%rdx
831c(3): mov %rax,%rdi
831f(3): mov %rax,%r12
8322(5): call 0xffffa97e(%rip)
8327(3): mov %r15,%rsi
832a(3): mov %rax,%rdi
832d(5): call 0xffffa483(%rip)
8332(7): lea 0xffffff30(%rbp),%rdx
8339(3): mov %r12,%rsi
833c(5): mov $0x1,%edi
8341(5): call 0xffffa85f(%rip)
8346(3): mov %r12,%rdi
8349(3): mov %eax,%r15d
834c(5): call 0xffffaac4(%rip)
8351(3): test %r15d,%r15d
8354(8): movzx 0xfffffcb0(%rbp),%r9d
835c(6): jnz 0xffffe4ed(%rip)
8362(7): mov 0xffffff38(%rbp),%rax
8369(7): cmp %rax,0xfffffd88(%rbp)
8370(6): jnz 0xffffe4d9(%rip)
8376(7): mov 0xffffff30(%rbp),%rax
837d(7): cmp %rax,0xfffffd80(%rbp)
8384(6): jnz 0xffffe4c5(%rip)
838a(4): cmp $0x0,0x18(%rbx)
838e(6): jz 0x268(%rip)
8394(7): lea 0xc605(%rip),%rsi
839b(5): mov $0x5,%edx
83a0(2): xor %edi,%edi
83a2(5): call 0xffffa53e(%rip)
83a7(3): mov %rax,%rbx
83aa(7): mov 0xfffffcf0(%rbp),%rdx
83b1(5): mov $0x4,%esi
83b6(5): mov $0x1,%edi
83bb(5): call 0x65d5(%rip)
83c0(7): mov 0xfffffcf8(%rbp),%rdx
83c7(3): mov %rax,%r12
83ca(5): mov $0x4,%esi
83cf(2): xor %edi,%edi
83d1(5): call 0x65bf(%rip)
83d6(3): mov %r12,%r8
83d9(3): mov %rax,%rcx
83dc(3): mov %rbx,%rdx
83df(2): xor %esi,%esi
83e1(2): xor %edi,%edi
83e3(2): xor %eax,%eax
83e5(5): call 0xffffa8cb(%rip)
83ea(3): xor %r12d,%r12d
83ed(5): jmp 0xffffded9(%rip)
83f2(7): mov 0xfffffca4(%rbp),%r12d
83f9(7): mov 0xfffffcf8(%rbp),%rsi
8400(7): lea 0xfffffd08(%rbp),%rcx
8407(2): xor %edi,%edi
8409(7): mov %r8b,0xfffffce0(%rbp)
8410(b): mov $0x0,0xfffffd08(%rbp)
841b(3): not %r12d
841e(7): and 0xfffffcec(%rbp),%r12d
8425(3): mov %r12d,%edx
8428(5): call 0xffffa748(%rip)
842d(2): test %eax,%eax
842f(8): movzx 0xfffffce0(%rbp),%r8d
8437(6): jz 0xffffdbc8(%rip)
843d(7): mov 0xfffffcf8(%rbp),%rdi
8444(3): mov %r12d,%esi
8447(6): and $0xffffefff,%esi
844d(5): call 0xffffa6f3(%rip)
8452(2): test %eax,%eax
8454(8): movzx 0xfffffce0(%rbp),%r8d
845c(6): jz 0xffffdba3(%rip)
8462(7): mov 0xfffffcf8(%rbp),%rsi
8469(5): mov $0x4,%edi
846e(5): call 0x6642(%rip)
8473(5): mov $0x5,%edx
8478(3): mov %rax,%r13
847b(7): lea 0xcb32(%rip),%rsi
8482(5): jmp 0xffffeadd(%rip)
8487(7): mov 0xfffffcf0(%rbp),%rsi
848e(5): mov $0x4,%edi
8493(5): call 0x661d(%rip)
8498(7): lea 0xca5e(%rip),%rsi
849f(5): mov $0x5,%edx
84a4(3): mov %rax,%r12
84a7(2): xor %edi,%edi
84a9(5): call 0xffffa437(%rip)
84ae(7): mov %rax,0xfffffcd8(%rbp)
84b5(5): call 0xffffa2bb(%rip)
84ba(3): mov %r12,%rcx
84bd(7): mov 0xfffffcd8(%rbp),%rdx
84c4(2): mov (%rax),%esi
84c6(5): jmp 0xfffff6fb(%rip)
84cb(7): mov 0xfffffcf8(%rbp),%rsi
84d2(7): mov 0xfffffcf0(%rbp),%rdi
84d9(7): mov %r9b,0xfffffca4(%rbp)
84e0(7): mov %r8b,0xfffffca8(%rbp)
84e7(7): mov %rdx,0xfffffcb0(%rbp)
84ee(5): call 0x6d52(%rip)
84f3(2): test %al,%al
84f5(7): mov 0xfffffcb0(%rbp),%rdx
84fc(8): movzx 0xfffffca8(%rbp),%r8d
8504(8): movzx 0xfffffca4(%rbp),%r9d
850c(6): jz 0x87b(%rip)
8512(3): mov 0x18(%rdx),%eax
8515(5): and $0xf000,%eax
851a(5): cmp $0xa000,%eax
851f(6): jz 0xffffec2d(%rip)
8525(5): mov 0x18(%r12),%eax
852a(5): and $0xf000,%eax
852f(5): cmp $0xa000,%eax
8534(6): jz 0xffffec18(%rip)
853a(5): jmp 0xffffebea(%rip)
853f(1): nop 
8540(4): movzx 0x25(%rbx),%esi
8544(7): mov 0xfffffcf8(%rbp),%rdi
854b(2): xor %edx,%edx
854d(3): mov %rbx,%rcx
8550(5): call 0xffffd1a0(%rip)
8555(2): test %al,%al
8557(6): jnz 0xfffffa35(%rip)
855d(4): cmp $0x0,0x26(%rbx)
8561(6): jnz 0xffffe4af(%rip)
8567(5): jmp 0xfffffa25(%rip)
856c(7): mov 0xfffffe10(%rbp),%rdx
8573(7): mov 0xfffffe18(%rbp),%rsi
857a(7): mov 0xfffffcf8(%rbp),%rdi
8581(5): call 0x189f(%rip)
8586(7): mov 0xfffffcc8(%rbp),%rax
858d(3): mov $0x1,(%rax)
8590(5): jmp 0xfffff1e8(%rip)
8595(7): mov 0xfffffcf0(%rbp),%rdx
859c(5): mov $0x4,%esi
85a1(5): mov $0x1,%edi
85a6(5): call 0x63ea(%rip)
85ab(7): mov 0xfffffcf8(%rbp),%rdx
85b2(5): mov $0x4,%esi
85b7(2): xor %edi,%edi
85b9(3): mov %rax,%r12
85bc(5): call 0x63d4(%rip)
85c1(5): mov $0x5,%edx
85c6(3): mov %rax,%rbx
85c9(7): lea 0xc330(%rip),%rsi
85d0(5): jmp 0xffffeaeb(%rip)
85d5(3): mov 0x10(%rbx),%edx
85d8(7): mov 0xfffffcf8(%rbp),%rdi
85df(5): mov $0xffffffff,%esi
85e4(5): call 0x204c(%rip)
85e9(2): test %eax,%eax
85eb(6): jnz 0xffffd7a5(%rip)
85f1(5): jmp 0xffffdcd5(%rip)
85f6(7): lea 0xc3db(%rip),%rsi
85fd(5): mov $0x5,%edx
8602(2): xor %edi,%edi
8604(5): call 0xffffa2dc(%rip)
8609(3): mov %rax,%rbx
860c(5): jmp 0xfffffd9e(%rip)
8611(b): mov $0x0,0xfffffcb0(%rbp)
861c(6): mov $0x1,%r14d
8622(6): mov $0x11,%r15d
8628(5): jmp 0xffffd7e6(%rip)
862d(7): mov 0xfffffcf8(%rbp),%rsi
8634(7): mov 0xfffffcf0(%rbp),%rdi
863b(2): xor %edx,%edx
863d(5): call 0xffffc7f3(%rip)
8642(5): jmp 0xfffff186(%rip)
8647(7): mov 0xfffffcf0(%rbp),%rsi
864e(5): mov $0x4,%edi
8653(5): call 0x645d(%rip)
8658(7): lea 0xc942(%rip),%rsi
865f(2): xor %edi,%edi
8661(5): mov $0x5,%edx
8666(3): mov %rax,%r12
8669(5): call 0xffffa277(%rip)
866e(3): mov %rax,%r13
8671(5): call 0xffffa0ff(%rip)
8676(2): mov (%rax),%esi
8678(2): xor %edi,%edi
867a(3): mov %r12,%rcx
867d(3): mov %r13,%rdx
8680(2): xor %eax,%eax
8682(5): call 0xffffa62e(%rip)
8687(7): mov 0xfffffcd0(%rbp),%rdi
868e(5): call 0xffffa782(%rip)
8693(5): jmp 0xffffe37d(%rip)
8698(7): mov 0xfffffcf0(%rbp),%rsi
869f(5): mov $0x4,%edi
86a4(5): call 0x640c(%rip)
86a9(7): lea 0xc821(%rip),%rsi
86b0(5): mov $0x5,%edx
86b5(2): xor %edi,%edi
86b7(3): mov %rax,%r12
86ba(5): call 0xffffa226(%rip)
86bf(3): mov %rax,%r15
86c2(5): call 0xffffa0ae(%rip)
86c7(2): mov (%rax),%esi
86c9(3): mov %r12,%rcx
86cc(3): mov %r15,%rdx
86cf(2): xor %edi,%edi
86d1(2): xor %eax,%eax
86d3(3): xor %r12d,%r12d
86d6(5): call 0xffffa5da(%rip)
86db(5): jmp 0xfffff2e8(%rip)
86e0(7): mov 0xfffffdb0(%rbp),%rsi
86e7(7): mov 0xfffffcf0(%rbp),%rdi
86ee(5): call 0x1f92(%rip)
86f3(3): test %rax,%rax
86f6(3): mov %rax,%r12
86f9(6): jz 0x84a(%rip)
86ff(4): movzx 0x16(%rbx),%ecx
8703(7): mov 0xfffffcf8(%rbp),%rdx
870a(6): mov $0xffffffff,%r8d
8710(5): mov $0xffffff9c,%esi
8715(3): mov %rax,%rdi
8718(5): call 0x1d28(%rip)
871d(2): test %eax,%eax
871f(6): mov %eax,0xfffffce0(%rbp)
8725(6): jle 0x843(%rip)
872b(4): cmp $0x1,0x2d(%rbx)
872f(2): jnz 0xb(%rip)
8731(3): test %r14b,%r14b
8734(6): jz 0xbe5(%rip)
873a(3): mov %r12,%rdi
873d(5): call 0xffffa6d3(%rip)
8742(7): mov 0xfffffcf8(%rbp),%rsi
8749(5): mov $0x4,%edi
874e(5): call 0x6362(%rip)
8753(7): lea 0xc506(%rip),%rsi
875a(2): xor %edi,%edi
875c(5): mov $0x5,%edx
8761(3): mov %rax,%r12
8764(5): call 0xffffa17c(%rip)
8769(6): mov 0xfffffce0(%rbp),%esi
876f(3): mov %rax,%rdx
8772(3): mov %r12,%rcx
8775(2): xor %edi,%edi
8777(2): xor %eax,%eax
8779(5): call 0xffffa537(%rip)
877e(5): jmp 0xffffe292(%rip)
8783(7): mov 0xfffffcf8(%rbp),%rsi
878a(5): mov $0x4,%edi
878f(5): call 0x6321(%rip)
8794(5): mov $0x5,%edx
8799(3): mov %rax,%r13
879c(7): lea 0xa187(%rip),%rsi
87a3(5): jmp 0xffffe7bc(%rip)
87a8(5): cmp $0x0,0x40(%rbx)
87ad(3): mov %r13d,%r14d
87b0(b): mov $0x0,0xfffffcb0(%rbp)
87bb(6): mov $0x11,%r15d
87c1(6): jnz 0xffffd661(%rip)
87c7(5): jmp 0xffffd722(%rip)
87cc(7): mov 0xfffffcf8(%rbp),%rsi
87d3(5): mov $0x4,%edi
87d8(7): mov %r9b,0xfffffca8(%rbp)
87df(6): mov $0x11,%r15d
87e5(5): call 0x62cb(%rip)
87ea(7): lea 0xc58f(%rip),%rsi
87f1(3): mov %rax,%r12
87f4(5): mov $0x5,%edx
87f9(2): xor %edi,%edi
87fb(5): call 0xffffa0e5(%rip)
8800(3): mov %r12,%rdx
8803(3): mov %rax,%rsi
8806(5): mov $0x1,%edi
880b(2): xor %eax,%eax
880d(5): call 0xffffa453(%rip)
8812(b): mov $0x0,0xfffffcb0(%rbp)
881d(8): movzx 0xfffffca8(%rbp),%r9d
8825(5): jmp 0xffffd5e9(%rip)
882a(6): mov 0xfffffe30(%rbp),%eax
8830(6): cmp %eax,0xfffffda0(%rbp)
8836(6): jnz 0xffffd94c(%rip)
883c(5): jmp 0xffffd98b(%rip)
8841(5): call 0xffffd20f(%rip)
8846(2): not %eax
8848(6): and %eax,0xfffffca4(%rbp)
884e(6): jz 0xffffd9af(%rip)
8854(7): cmp $0x1,0xfffffceb(%rbp)
885b(6): jz 0xffffd9af(%rip)
8861(3): test %r14b,%r14b
8864(6): jnz 0x973(%rip)
886a(6): mov 0xfffffe28(%rbp),%eax
8870(6): mov %eax,0xfffffc74(%rbp)
8876(2): not %eax
8878(6): test %eax,0xfffffca4(%rbp)
887e(6): jnz 0xffffd98c(%rip)
8884(5): jmp 0xffffda42(%rip)
8889(6): mov 0xfffffcec(%rbp),%eax
888f(5): mov $0x1b6,%edx
8894(5): mov $0x1ff,%ebx
8899(5): and $0x7000,%eax
889e(5): cmp $0x4000,%eax
88a3(3): cmovne %edx,%ebx
88a6(5): call 0xffffd1aa(%rip)
88ab(2): not %eax
88ad(2): mov %eax,%edx
88af(2): and %ebx,%edx
88b1(5): jmp 0xfffffd27(%rip)
88b6(7): and $0x1ff,%r12d
88bd(3): test %r14b,%r14b
88c0(7): mov %r12d,0xfffffc5c(%rbp)
88c7(6): jnz 0x599(%rip)
88cd(4): cmp $0x1,0x23(%rbx)
88d1(7): mov 0xfffffcf8(%rbp),%rdi
88d8(2): sbb %esi,%esi
88da(2): xor %eax,%eax
88dc(6): and $0xfffffe00,%esi
88e2(6): add $0x201,%esi
88e8(5): call 0x2dd8(%rip)
88ed(6): mov %eax,0xfffffcd8(%rbp)
88f3(5): call 0xffff9e7d(%rip)
88f8(3): mov %rax,%r12
88fb(a): mov $0x280375465148160,%rax
8905(4): test %rax,0x20(%rbx)
8909(6): jnz 0x88c(%rip)
890f(7): cmp $0x0,0xfffffcd8(%rbp)
8916(6): js 0x88c(%rip)
891c(a): mov $0x0,0xfffffc88(%rbp)
8926(7): lea 0xffffff30(%rbp),%rax
892d(6): mov 0xfffffcd8(%rbp),%esi
8933(5): mov $0x1,%edi
8938(3): mov %rax,%rdx
893b(7): mov %rax,0xfffffc98(%rbp)
8942(5): call 0xffffa2ae(%rip)
8947(2): test %eax,%eax
8949(6): mov %eax,0xfffffcb8(%rbp)
894f(6): jnz 0xba7(%rip)
8955(7): cmp $0x0,0xfffffcc8(%rbp)
895c(6): jz 0x6d3(%rip)
8962(4): cmp $0x0,0x38(%rbx)
8966(6): jnz 0xe5e(%rip)
896c(5): call 0xffffa404(%rip)
8971(7): mov 0xffffff68(%rbp),%rcx
8978(3): movsxd %eax,%r12
897b(a): mov $0x2305843009213562880,%rax
8985(6): mov $0x200,%r8d
898b(6): mov 0xfffffce0(%rbp),%edi
8991(7): mov %r8,0xfffffcd0(%rbp)
8998(7): lea 0xfffe0000(%rcx),%rdx
899f(3): cmp %rax,%rdx
89a2(5): mov $0x20000,%eax
89a7(4): lea 0xffffffff(%rcx),%rdx
89ab(4): cmovbe %rcx,%rax
89af(7): mov %rax,0xfffffc90(%rbp)
89b6(a): mov $0x2305843009213693951,%rax
89c0(3): cmp %rax,%rdx
89c3(4): cmovnbe %r8,%rcx
89c7(2): xor %edx,%edx
89c9(2): xor %esi,%esi
89cb(7): mov %rcx,0xfffffc68(%rbp)
89d2(5): mov $0x2,%ecx
89d7(5): call 0x2ca9(%rip)
89dc(7): mov 0xfffffeb8(%rbp),%r9d
89e3(7): mov 0xfffffcd0(%rbp),%r8
89ea(7): and $0xf000,%r9d
89f1(7): cmp $0x8000,%r9d
89f8(6): jz 0xee2(%rip)
89fe(6): mov 0xffffff48(%rbp),%eax
8a04(5): and $0xf000,%eax
8a09(5): cmp $0x8000,%eax
8a0e(6): jz 0xe61(%rip)
8a14(7): mov 0xfffffed8(%rbp),%rdi
8a1b(a): mov $0x9223372036854775807,%rax
8a25(7): mov 0xfffffc90(%rbp),%rsi
8a2c(3): sub %r12,%rax
8a2f(7): mov %r9d,0xfffffc80(%rbp)
8a36(3): mov %rax,%r8
8a39(a): mov $0x2305843009213562880,%rax
8a43(7): lea 0xfffe0000(%rdi),%rdx
8a4a(7): mov %r8,0xfffffcd0(%rbp)
8a51(3): cmp %rax,%rdx
8a54(5): mov $0x20000,%eax
8a59(3): mov %r8,%rdx
8a5c(4): cmovnbe %rax,%rdi
8a60(5): call 0x27f0(%rip)
8a65(7): mov 0xfffffc80(%rbp),%r9d
8a6c(3): mov %rax,%rcx
8a6f(7): mov 0xfffffcd0(%rbp),%r8
8a76(7): cmp $0x8000,%r9d
8a7d(6): jz 0xcd0(%rip)
8a83(7): mov 0xfffffc90(%rbp),%rax
8a8a(2): xor %edx,%edx
8a8c(5): lea 0xffffffff(%rcx,%rax,1),%rsi
8a91(3): mov %rsi,%rax
8a94(3): div %rcx,%rax
8a97(3): sub %rdx,%rsi
8a9a(7): mov %rsi,0xfffffc90(%rbp)
8aa1(6): jz 0xab0(%rip)
8aa7(3): cmp %r8,%rsi
8aaa(6): jnbe 0xaa7(%rip)
8ab0(7): mov 0xfffffc90(%rbp),%rax
8ab7(4): lea 0x0(%r12,%rax,1),%rdi
8abb(5): call 0x8565(%rip)
8ac0(5): lea 0xffffffff(%rax,%r12,1),%rcx
8ac5(2): xor %edx,%edx
8ac7(7): mov %rax,0xfffffcd0(%rbp)
8ace(3): mov %rcx,%rax
8ad1(3): div %r12,%rax
8ad4(3): sub %rdx,%rcx
8ad7(7): cmp $0x0,0xfffffcb8(%rbp)
8ade(7): mov %rcx,0xfffffc50(%rbp)
8ae5(6): jz 0xa78(%rip)
8aeb(7): mov $0x0,0xfffffc5b(%rbp)
8af2(a): mov $0x1,0xfffffc70(%rbp)
8afc(7): mov 0xfffffed0(%rbp),%rax
8b03(6): mov 0xfffffce0(%rbp),%edi
8b09(3): xor %r12d,%r12d
8b0c(7): mov %rax,0xfffffc80(%rbp)
8b13(7): lea 0xfffffd10(%rbp),%rax
8b1a(3): mov %rax,%rsi
8b1d(7): mov %rax,0xfffffcb8(%rbp)
8b24(5): call 0x13cc(%rip)
8b29(7): lea 0xfffffd07(%rbp),%rax
8b30(2): xor %ecx,%ecx
8b32(7): mov %rbx,0xfffffc78(%rbp)
8b39(b): mov $0x0,0xfffffc60(%rbp)
8b44(3): mov %rcx,%rbx
8b47(7): mov %r13d,0xfffffca0(%rbp)
8b4e(7): mov %rax,0xfffffc48(%rbp)
8b55(7): lea 0xfffffd08(%rbp),%rax
8b5c(7): mov %rax,0xfffffc40(%rbp)
8b63(7): mov 0xfffffcb8(%rbp),%rdi
8b6a(5): call 0x13b6(%rip)
8b6f(2): test %al,%al
8b71(6): jz 0xc00(%rip)
8b77(8): cmp $0x0,0xfffffd28(%rbp)
8b7f(6): jz 0xacf(%rip)
8b85(3): mov %rbx,%rdx
8b88(3): mov %r12,%rcx
8b8b(3): xor %r13d,%r13d
8b8e(2): xor %eax,%eax
8b90(5): jmp 0xbd(%rip)
8b95(3): nop (%rax)
8b98(7): cmp $0x3,0xfffffc70(%rbp)
8b9f(6): mov $0x0,%r8d
8ba5(8): cmove 0xfffffc68(%rbp),%r8
8bad(4): sub $0x8,%rsp
8bb1(7): mov 0xfffffc90(%rbp),%rcx
8bb8(7): mov 0xfffffc50(%rbp),%rdx
8bbf(6): mov 0xfffffcd8(%rbp),%esi
8bc5(6): mov 0xfffffce0(%rbp),%edi
8bcb(6): mov $0x1,%r9d
8bd1(6): push 0xfffffc48(%rbp)
8bd7(6): push 0xfffffc40(%rbp)
8bdd(1): push %rbx
8bde(6): push 0xfffffcf8(%rbp)
8be4(6): push 0xfffffcf0(%rbp)
8bea(5): call 0xffffc626(%rip)
8bef(4): add $0x30,%rsp
8bf3(2): test %al,%al
8bf5(6): jz 0x103(%rip)
8bfb(7): mov 0xfffffd08(%rbp),%rax
8c02(4): lea 0x0(%r12,%rax,1),%rcx
8c06(3): test %rax,%rax
8c09(7): mov %rcx,0xfffffc60(%rbp)
8c10(2): jz 0xf(%rip)
8c12(7): movzx 0xfffffd07(%rbp),%eax
8c19(6): mov %al,0xfffffcc8(%rbp)
8c1f(7): mov 0xfffffc60(%rbp),%rcx
8c26(7): cmp %rcx,0xfffffc80(%rbp)
8c2d(6): jz 0xa1a(%rip)
8c33(4): lea 0x1(%r13),%eax
8c37(7): cmp 0xfffffd28(%rbp),%rax
8c3e(3): mov %r12,%rcx
8c41(3): mov %rbx,%rdx
8c44(3): mov %rax,%r13
8c47(6): jnb 0xa07(%rip)
8c4d(4): lea 0x0(%rax,%rax,2),%rsi
8c51(7): mov 0xfffffd38(%rbp),%rax
8c58(4): lea 0x0(%rax,%rsi,8),%rax
8c5c(7): mov 0xfffffc80(%rbp),%rsi
8c63(3): mov (%rax),%r12
8c66(4): mov 0x8(%rax),%rbx
8c6a(4): lea 0x0(%r12,%rbx,1),%rax
8c6e(3): cmp %rax,%rsi
8c71(2): jnl 0xf(%rip)
8c73(3): cmp %rsi,%r12
8c76(4): cmovnl %rsi,%r12
8c7a(3): sub %r12,%rsi
8c7d(3): mov %rsi,%rbx
8c80(3): mov %r12,%rax
8c83(7): mov $0x0,0xfffffcc8(%rbp)
8c8a(3): sub %rcx,%rax
8c8d(3): mov %rax,%rcx
8c90(3): sub %rdx,%rcx
8c93(6): jz 0xffffff05(%rip)
8c99(6): mov 0xfffffce0(%rbp),%edi
8c9f(2): xor %edx,%edx
8ca1(3): mov %r12,%rsi
8ca4(7): mov %rcx,0xfffffc60(%rbp)
8cab(5): call 0xffff9d15(%rip)
8cb0(3): test %rax,%rax
8cb3(7): mov 0xfffffc60(%rbp),%rcx
8cba(6): js 0xe75(%rip)
8cc0(6): mov 0xfffffc70(%rbp),%eax
8cc6(3): cmp $0x3,%eax
8cc9(3): setz %dl
8ccc(3): sub $0x1,%eax
8ccf(6): jz 0x759(%rip)
8cd5(7): mov 0xfffffcf8(%rbp),%rsi
8cdc(6): mov 0xfffffcd8(%rbp),%edi
8ce2(3): movzx %dl,%edx
8ce5(5): call 0xffffc46b(%rip)
8cea(2): test %al,%al
8cec(6): mov %al,0xfffffcc8(%rbp)
8cf2(6): jnz 0xfffffea6(%rip)
8cf8(7): mov 0xfffffc78(%rbp),%rbx
8cff(7): mov 0xfffffca0(%rbp),%r13d
8d06(7): mov 0xfffffd38(%rbp),%rdi
8d0d(5): call 0xffffa103(%rip)
8d12(3): xor %r8d,%r8d
8d15(6): mov 0xfffffcd8(%rbp),%edi
8d1b(7): mov %r8b,0xfffffcc8(%rbp)
8d22(5): call 0xffff9d0e(%rip)
8d27(2): test %eax,%eax
8d29(8): movzx 0xfffffcc8(%rbp),%r8d
8d31(6): jns 0xffffeea7(%rip)
8d37(7): mov 0xfffffcf8(%rbp),%rsi
8d3e(5): mov $0x4,%edi
8d43(5): call 0x5d6d(%rip)
8d48(7): lea 0xc252(%rip),%rsi
8d4f(5): mov $0x5,%edx
8d54(2): xor %edi,%edi
8d56(3): mov %rax,%r12
8d59(5): call 0xffff9b87(%rip)
8d5e(7): mov %rax,0xfffffcd8(%rbp)
8d65(5): call 0xffff9a0b(%rip)
8d6a(7): mov 0xfffffcd8(%rbp),%rdx
8d71(2): mov (%rax),%esi
8d73(3): mov %r12,%rcx
8d76(2): xor %edi,%edi
8d78(2): xor %eax,%eax
8d7a(5): call 0xffff9f36(%rip)
8d7f(3): xor %r8d,%r8d
8d82(5): jmp 0xffffee56(%rip)
8d87(5): movzx 0x18(%rbx),%r12d
8d8c(4): xor $0x1,%r12d
8d90(5): jmp 0xffffe46c(%rip)
8d95(7): mov $0x0,0xfffffceb(%rbp)
8d9c(6): mov $0x1,%r12d
8da2(5): jmp 0xffffec05(%rip)
8da7(7): mov 0xffffff30(%rbp),%rax
8dae(7): cmp %rax,0xfffffea0(%rbp)
8db5(6): jnz 0xffffeeef(%rip)
8dbb(5): jmp 0xffffdbc1(%rip)
8dc0(7): mov 0xfffffcf8(%rbp),%rdi
8dc7(5): call 0xffff99b9(%rip)
8dcc(2): test %eax,%eax
8dce(6): jnz 0xc38(%rip)
8dd4(4): cmp $0x0,0x2e(%rbx)
8dd8(2): jz 0x3b(%rip)
8dda(7): mov 0xfffffcf8(%rbp),%rsi
8de1(5): mov $0x4,%edi
8de6(5): call 0x5cca(%rip)
8deb(7): lea 0xbf8e(%rip),%rsi
8df2(3): mov %rax,%r12
8df5(5): mov $0x5,%edx
8dfa(2): xor %edi,%edi
8dfc(5): call 0xffff9ae4(%rip)
8e01(3): mov %r12,%rdx
8e04(3): mov %rax,%rsi
8e07(5): mov $0x1,%edi
8e0c(2): xor %eax,%eax
8e0e(5): call 0xffff9e52(%rip)
8e13(5): movzx 0x21(%rbx),%r14d
8e18(6): mov 0xfffffca4(%rbp),%eax
8e1e(6): mov %eax,0xfffffc88(%rbp)
8e24(3): test %r14b,%r14b
8e27(2): jz 0x45(%rip)
8e29(6): mov 0xfffffc5c(%rbp),%edx
8e2f(7): mov 0xfffffcf8(%rbp),%rsi
8e36(3): mov %rbx,%r8
8e39(7): mov 0xfffffcf0(%rbp),%rdi
8e40(5): mov $0x1,%ecx
8e45(5): call 0xffffc7db(%rip)
8e4a(2): test %al,%al
8e4c(3): mov %eax,%r8d
8e4f(b): mov $0x0,0xfffffcd0(%rbp)
8e5a(6): jz 0xffffed7e(%rip)
8e60(6): mov 0xfffffca4(%rbp),%eax
8e66(6): mov %eax,0xfffffc88(%rbp)
8e6c(6): mov 0xfffffc88(%rbp),%eax
8e72(7): mov 0xfffffcf8(%rbp),%rdi
8e79(5): mov $0xc1,%esi
8e7e(2): not %eax
8e80(6): and 0xfffffc5c(%rbp),%eax
8e86(2): mov %eax,%edx
8e88(6): mov %eax,0xfffffcd0(%rbp)
8e8e(2): xor %eax,%eax
8e90(5): call 0x2830(%rip)
8e95(3): mov %eax,%r14d
8e98(6): mov %eax,0xfffffcd8(%rbp)
8e9e(5): call 0xffff98d2(%rip)
8ea3(3): mov (%rax),%r8d
8ea6(3): mov %rax,%r12
8ea9(3): mov %r14d,%eax
8eac(3): shr $0x1f,%eax
8eaf(4): cmp $0x11,%r8d
8eb3(3): setz %dl
8eb6(2): and %al,%dl
8eb8(3): mov %edx,%r14d
8ebb(6): jz 0x407(%rip)
8ec1(4): cmp $0x0,0x18(%rbx)
8ec5(6): mov $0x11,%r8d
8ecb(6): jz 0x38a(%rip)
8ed1(6): mov $0x1,%r9d
8ed7(7): mov 0xfffffcf8(%rbp),%rsi
8ede(5): mov $0x4,%edi
8ee3(7): mov %r9b,0xfffffcd0(%rbp)
8eea(7): mov %r8d,0xfffffcd8(%rbp)
8ef1(5): call 0x5bbf(%rip)
8ef6(7): lea 0xc010(%rip),%rsi
8efd(5): mov $0x5,%edx
8f02(2): xor %edi,%edi
8f04(3): mov %rax,%r12
8f07(5): call 0xffff99d9(%rip)
8f0c(7): mov 0xfffffcd8(%rbp),%r8d
8f13(3): mov %rax,%rdx
8f16(3): mov %r12,%rcx
8f19(2): xor %edi,%edi
8f1b(2): xor %eax,%eax
8f1d(3): mov %r8d,%esi
8f20(5): call 0xffff9d90(%rip)
8f25(8): movzx 0xfffffcd0(%rbp),%r9d
8f2d(3): xor %r8d,%r8d
8f30(b): mov $0x0,0xfffffcd0(%rbp)
8f3b(3): mov %r9d,%r14d
8f3e(5): jmp 0xffffec9a(%rip)
8f43(7): mov 0xfffffcf0(%rbp),%rsi
8f4a(5): mov $0x4,%edi
8f4f(5): call 0x5b61(%rip)
8f54(5): mov $0x5,%edx
8f59(3): mov %rax,%r13
8f5c(7): lea 0xc085(%rip),%rsi
8f63(5): jmp 0xffffdffc(%rip)
8f68(3): mov %r12,%rdi
8f6b(5): call 0xffff9ea5(%rip)
8f70(5): movzx 0x25(%rbx),%r8d
8f75(3): test %r8b,%r8b
8f78(6): jnz 0xffffdc18(%rip)
8f7e(4): movzx 0x1d(%rbx),%eax
8f82(2): test %al,%al
8f84(6): mov %al,0xfffffce0(%rbp)
8f8a(6): jnz 0x279(%rip)
8f90(8): movzx 0xfffffce0(%rbp),%r8d
8f98(7): mov $0x1,0xfffffce0(%rbp)
8f9f(5): jmp 0xffffd060(%rip)
8fa4(5): call 0xffff998c(%rip)
8fa9(7): mov 0xfffffcf8(%rbp),%rsi
8fb0(7): lea 0xfffffea0(%rbp),%rdx
8fb7(5): mov $0x1,%edi
8fbc(7): mov %r9b,0xfffffca8(%rbp)
8fc3(7): mov %r8b,0xfffffcb0(%rbp)
8fca(5): call 0xffff9bd6(%rip)
8fcf(2): test %eax,%eax
8fd1(8): movzx 0xfffffcb0(%rbp),%r8d
8fd9(8): movzx 0xfffffca8(%rbp),%r9d
8fe1(6): jz 0xffffe690(%rip)
8fe7(5): jmp 0xffffccb8(%rip)
8fec(7): mov 0xfffffcf0(%rbp),%rsi
8ff3(7): lea 0xffffff30(%rbp),%rdx
8ffa(5): mov $0x1,%edi
8fff(7): mov %r9b,0xfffffca8(%rbp)
9006(7): mov %r8b,0xfffffcb0(%rbp)
900d(5): call 0xffff9b93(%rip)
9012(2): test %eax,%eax
9014(8): movzx 0xfffffcb0(%rbp),%r8d
901c(8): movzx 0xfffffca8(%rbp),%r9d
9024(6): jz 0xffffe5b8(%rip)
902a(5): jmp 0xffffcc75(%rip)
902f(b): mov $0x0,0xfffffcd0(%rbp)
903a(4): cmp $0x0,0x1f(%rbx)
903e(6): jnz 0x408(%rip)
9044(4): cmp $0x0,0x1d(%rbx)
9048(2): jz 0x5c(%rip)
904a(6): mov 0xffffff4c(%rbp),%eax
9050(6): cmp %eax,0xfffffd9c(%rbp)
9056(2): jnz 0x10(%rip)
9058(6): mov 0xffffff50(%rbp),%eax
905e(6): cmp %eax,0xfffffda0(%rbp)
9064(2): jz 0x40(%rip)
9066(7): mov 0xfffffc98(%rbp),%r9
906d(6): mov 0xfffffcd8(%rbp),%edx
9073(7): lea 0xfffffd80(%rbp),%rcx
907a(7): mov 0xfffffcf8(%rbp),%rsi
9081(4): movzx %r14b,%r8d
9085(3): mov %rbx,%rdi
9088(5): call 0xffffc7b8(%rip)
908d(3): cmp $0xff,%eax
9090(6): jz 0xfffffc82(%rip)
9096(2): test %eax,%eax
9098(2): jnz 0xc(%rip)
909a(a): and $0xfffff1ff,0xfffffcc0(%rbp)
90a4(4): cmp $0x0,0x27(%rbx)
90a8(2): jz 0xf(%rip)
90aa(7): test $0x80,0xffffff48(%rbp)
90b1(6): jz 0xa2d(%rip)
90b7(a): mov $0x71776119061217535,%rax
90c1(4): test %rax,0x18(%rbx)
90c5(6): jnz 0x2d8(%rip)
90cb(4): cmp $0x0,0x2b(%rbx)
90cf(6): jnz 0xa93(%rip)
90d5(3): mov %r14d,%r12d
90d8(4): and 0x20(%rbx),%r12b
90dc(6): jnz 0x8fb(%rip)
90e2(7): cmp $0x0,0xfffffc88(%rbp)
90e9(6): mov $0x1,%r8d
90ef(6): jz 0xfffffc26(%rip)
90f5(7): mov %r8b,0xfffffcc8(%rbp)
90fc(5): call 0xffffc954(%rip)
9101(2): not %eax
9103(6): test %eax,0xfffffc88(%rbp)
9109(8): movzx 0xfffffcc8(%rbp),%r8d
9111(6): jz 0xfffffc04(%rip)
9117(6): mov 0xfffffc5c(%rbp),%edx
911d(7): mov 0xfffffcf8(%rbp),%rsi
9124(6): mov 0xfffffcd8(%rbp),%edi
912a(5): call 0xffff9cf6(%rip)
912f(2): test %eax,%eax
9131(8): movzx 0xfffffcc8(%rbp),%r8d
9139(6): jz 0xfffffbdc(%rip)
913f(7): mov 0xfffffcf8(%rbp),%rsi
9146(5): mov $0x4,%edi
914b(5): call 0x5965(%rip)
9150(7): lea 0xbe2c(%rip),%rsi
9157(5): mov $0x5,%edx
915c(2): xor %edi,%edi
915e(3): mov %rax,%r12
9161(5): call 0xffff977f(%rip)
9166(7): mov %rax,0xfffffcc8(%rbp)
916d(5): call 0xffff9603(%rip)
9172(7): mov 0xfffffcc8(%rbp),%rdx
9179(2): mov (%rax),%esi
917b(3): mov %r12,%rcx
917e(2): xor %edi,%edi
9180(2): xor %eax,%eax
9182(5): call 0xffff9b2e(%rip)
9187(5): movzx 0x24(%rbx),%r8d
918c(4): xor $0x1,%r8d
9190(5): jmp 0xfffffb85(%rip)
9195(7): cmp $0x0,0xfffffcd8(%rbp)
919c(6): jns 0x252(%rip)
91a2(5): movzx 0x16(%rbx),%r9d
91a7(3): test %r9b,%r9b
91aa(6): jnz 0xfffffc16(%rip)
91b0(4): mov (%r12),%r8d
91b4(4): cmp $0x2,%r8d
91b8(6): jnz 0xfffffd1f(%rip)
91be(4): cmp $0x0,0x18(%rbx)
91c2(6): jnz 0xfffffd15(%rip)
91c8(a): mov $0x0,0xfffffc88(%rbp)
91d2(5): jmp 0xfffffc9a(%rip)
91d7(7): mov 0xfffffcf8(%rbp),%rsi
91de(7): lea 0xfffffe10(%rbp),%rdx
91e5(5): mov $0x1,%edi
91ea(5): call 0xffff9726(%rip)
91ef(2): test %eax,%eax
91f1(6): jz 0xfffff679(%rip)
91f7(7): mov 0xfffffcf8(%rbp),%rsi
91fe(5): jmp 0xffffd167(%rip)
9203(6): mov 0xfffffda0(%rbp),%edx
9209(6): mov 0xfffffd9c(%rbp),%esi
920f(7): mov 0xfffffcf8(%rbp),%rdi
9216(7): mov %r8b,0xfffffcd8(%rbp)
921d(5): call 0xffff99e3(%rip)
9222(2): test %eax,%eax
9224(8): movzx 0xfffffcd8(%rbp),%r8d
922c(6): jz 0xffffcdd3(%rip)
9232(3): mov %rbx,%rdi
9235(5): call 0xffffc5db(%rip)
923a(2): test %al,%al
923c(8): movzx 0xfffffcd8(%rbp),%r8d
9244(6): jz 0x800(%rip)
924a(6): mov %al,0xfffffce0(%rbp)
9250(5): jmp 0xffffcdaf(%rip)
9255(7): mov 0xfffffcf8(%rbp),%rsi
925c(7): lea 0xffffff30(%rbp),%rdx
9263(5): mov $0x1,%edi
9268(7): mov %r8d,0xfffffcb8(%rbp)
926f(5): call 0xffff96a1(%rip)
9274(2): test %eax,%eax
9276(7): mov 0xfffffcb8(%rbp),%r8d
927d(2): jnz 0x45(%rip)
927f(6): mov 0xffffff48(%rbp),%eax
9285(5): and $0xf000,%eax
928a(5): cmp $0xa000,%eax
928f(2): jnz 0x33(%rip)
9291(5): movzx 0x30(%rbx),%r8d
9296(3): test %r8b,%r8b
9299(6): jz 0x7ee(%rip)
929f(6): mov 0xfffffcd0(%rbp),%edx
92a5(7): mov 0xfffffcf8(%rbp),%rdi
92ac(5): mov $0x41,%esi
92b1(2): xor %eax,%eax
92b3(5): call 0x240d(%rip)
92b8(4): mov (%r12),%r8d
92bc(6): mov %eax,0xfffffcd8(%rbp)
92c2(6): mov 0xfffffcd8(%rbp),%eax
92c8(3): shr $0x1f,%eax
92cb(4): cmp $0x15,%r8d
92cf(3): setz %dl
92d2(2): and %al,%dl
92d4(3): mov %edx,%r9d
92d7(6): jz 0xff(%rip)
92dd(7): mov 0xfffffcf8(%rbp),%rsi
92e4(6): mov $0x15,%r8d
92ea(3): cmp $0x0,(%rsi)
92ed(3): mov %rsi,%rdi
92f0(6): jz 0xfffffbe7(%rip)
92f6(2): xor %eax,%eax
92f8(4): or $0xffffffff,%rcx
92fc(3): xor %r8d,%r8d
92ff(2): REPNZ scasb rdi(%es,10),%al
9301(3): mov %rcx,%rax
9304(3): not %rax
9307(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
930c(4): setnz %r8b
9310(4): add $0x14,%r8d
9314(5): jmp 0xfffffbc3(%rip)
9319(6): mov 0xfffffe28(%rbp),%eax
931f(5): and $0xf000,%eax
9324(5): cmp $0xa000,%eax
9329(6): jnz 0xfffff411(%rip)
932f(4): or $0xffffffff,%rcx
9333(3): mov %r14d,%eax
9336(3): mov %r12,%rdi
9339(2): REPNZ scasb rdi(%es,10),%al
933b(7): mov 0xfffffe40(%rbp),%rsi
9342(3): not %rcx
9345(4): lea 0xffffffff(%rcx),%rax
9349(3): cmp %rax,%rsi
934c(6): jnz 0xfffff3ee(%rip)
9352(7): mov 0xfffffcf8(%rbp),%rdi
9359(5): call 0x1327(%rip)
935e(3): test %rax,%rax
9361(6): jz 0xfffff3d9(%rip)
9367(3): mov %rax,%rdi
936a(3): mov %r12,%rsi
936d(7): mov %rax,0xfffffcd8(%rbp)
9374(5): call 0xffff977c(%rip)
9379(7): mov 0xfffffcd8(%rbp),%rdx
9380(2): test %eax,%eax
9382(3): mov %rdx,%rdi
9385(6): jnz 0x7fd(%rip)
938b(5): call 0xffff9a85(%rip)
9390(3): mov %r12,%rdi
9393(5): call 0xffff9a7d(%rip)
9398(5): jmp 0xfffffbd8(%rip)
939d(7): mov 0xfffffcc0(%rbp),%r8d
93a4(6): mov 0xfffffcd8(%rbp),%ecx
93aa(7): mov 0xfffffcf8(%rbp),%rdx
93b1(6): mov 0xfffffce0(%rbp),%esi
93b7(7): mov 0xfffffcf0(%rbp),%rdi
93be(5): call 0x11e2(%rip)
93c3(2): test %eax,%eax
93c5(6): mov $0x1,%r8d
93cb(6): jz 0xfffff94a(%rip)
93d1(5): jmp 0xfffffdb6(%rip)
93d6(7): cmp $0x0,0xfffffcd8(%rbp)
93dd(6): mov $0x1,%r14d
93e3(6): jns 0xfffff543(%rip)
93e9(5): jmp 0xfffffae8(%rip)
93ee(4): movzx 0x25(%rbx),%esi
93f2(7): mov 0xfffffcf8(%rbp),%rdi
93f9(2): xor %edx,%edx
93fb(3): mov %rbx,%rcx
93fe(5): call 0xffffc2f2(%rip)
9403(2): test %al,%al
9405(3): mov %eax,%r8d
9408(6): jnz 0xfffff514(%rip)
940e(4): cmp $0x0,0x26(%rbx)
9412(b): mov $0x0,0xfffffcd0(%rbp)
941d(6): jnz 0xfffff8f8(%rip)
9423(5): jmp 0xfffff4f9(%rip)
9428(6): mov 0xfffffcd8(%rbp),%edi
942e(3): mov %rcx,%rsi
9431(5): call 0xffffb90f(%rip)
9436(2): test %al,%al
9438(6): jz 0x51b(%rip)
943e(3): xor %r8d,%r8d
9441(5): jmp 0xfffff76c(%rip)
9446(7): mov 0xfffffdc8(%rbp),%rax
944d(7): mov 0xfffffcf8(%rbp),%rsi
9454(7): lea 0xfffffd60(%rbp),%rdx
945b(6): mov 0xfffffcd8(%rbp),%edi
9461(7): mov %rax,0xfffffd60(%rbp)
9468(7): mov 0xfffffdd0(%rbp),%rax
946f(7): mov %rax,0xfffffd68(%rbp)
9476(7): mov 0xfffffdd8(%rbp),%rax
947d(7): mov %rax,0xfffffd70(%rbp)
9484(7): mov 0xfffffde0(%rbp),%rax
948b(7): mov %rax,0xfffffd78(%rbp)
9492(5): call 0x6e5e(%rip)
9497(2): test %eax,%eax
9499(6): jz 0xfffffbab(%rip)
949f(7): mov 0xfffffcf8(%rbp),%rsi
94a6(5): mov $0x4,%edi
94ab(5): call 0x5605(%rip)
94b0(7): lea 0xbab4(%rip),%rsi
94b7(2): xor %edi,%edi
94b9(5): mov $0x5,%edx
94be(3): mov %rax,%r12
94c1(5): call 0xffff941f(%rip)
94c6(7): mov %rax,0xfffffcc8(%rbp)
94cd(5): call 0xffff92a3(%rip)
94d2(7): mov 0xfffffcc8(%rbp),%rdx
94d9(2): mov (%rax),%esi
94db(2): xor %edi,%edi
94dd(2): xor %eax,%eax
94df(3): mov %r12,%rcx
94e2(5): call 0xffff97ce(%rip)
94e7(4): cmp $0x0,0x24(%rbx)
94eb(6): jz 0xfffffb59(%rip)
94f1(5): jmp 0xfffff821(%rip)
94f6(7): mov 0xfffffcf8(%rbp),%rsi
94fd(5): mov $0x4,%edi
9502(5): call 0x55ae(%rip)
9507(7): lea 0xb9ef(%rip),%rsi
950e(5): mov $0x5,%edx
9513(2): xor %edi,%edi
9515(3): mov %rax,%r12
9518(5): call 0xffff93c8(%rip)
951d(7): mov %rax,0xfffffcd0(%rbp)
9524(5): call 0xffff924c(%rip)
9529(7): mov 0xfffffcd0(%rbp),%rdx
9530(2): mov (%rax),%esi
9532(3): mov %r12,%rcx
9535(2): xor %edi,%edi
9537(2): xor %eax,%eax
9539(5): call 0xffff9777(%rip)
953e(3): xor %r8d,%r8d
9541(b): mov $0x0,0xfffffcd0(%rbp)
954c(5): jmp 0xfffff7c9(%rip)
9551(7): mov %rcx,0xfffffc90(%rbp)
9558(5): jmp 0xfffff558(%rip)
955d(3): xor %r9d,%r9d
9560(4): cmp $0x3,0xc(%rbx)
9564(7): lea 0xfffffd10(%rbp),%rax
956b(b): mov $0x0,0xfffffc68(%rbp)
9576(7): mov %rax,0xfffffcb8(%rbp)
957d(4): setz %r9b
9581(7): lea 0xfffffd08(%rbp),%rax
9588(4): sub $0x8,%rsp
958c(7): mov 0xfffffc68(%rbp),%r8
9593(7): mov 0xfffffc90(%rbp),%rcx
959a(7): mov 0xfffffc50(%rbp),%rdx
95a1(6): mov 0xfffffcd8(%rbp),%esi
95a7(6): mov 0xfffffce0(%rbp),%edi
95ad(1): push %rax
95ae(6): push 0xfffffcb8(%rbp)
95b4(2): push $0xff
95b6(6): push 0xfffffcf8(%rbp)
95bc(6): push 0xfffffcf0(%rbp)
95c2(5): call 0xffffbc4e(%rip)
95c7(4): add $0x30,%rsp
95cb(2): test %al,%al
95cd(6): jz 0xfffff745(%rip)
95d3(7): cmp $0x0,0xfffffd08(%rbp)
95da(6): jz 0xfffffa60(%rip)
95e0(7): mov 0xfffffd10(%rbp),%rsi
95e7(6): mov 0xfffffcd8(%rbp),%edi
95ed(5): call 0xffff93c3(%rip)
95f2(2): test %eax,%eax
95f4(6): jns 0xfffffa46(%rip)
95fa(7): mov 0xfffffcf8(%rbp),%rsi
9601(5): mov $0x4,%edi
9606(5): call 0x54aa(%rip)
960b(7): lea 0xb945(%rip),%rsi
9612(3): mov %rax,%r12
9615(5): mov $0x5,%edx
961a(2): xor %edi,%edi
961c(5): call 0xffff92c4(%rip)
9621(7): mov %rax,0xfffffcc8(%rbp)
9628(5): call 0xffff9148(%rip)
962d(7): mov 0xfffffcc8(%rbp),%rdx
9634(2): mov (%rax),%esi
9636(3): mov %r12,%rcx
9639(2): xor %edi,%edi
963b(2): xor %eax,%eax
963d(5): call 0xffff9673(%rip)
9642(5): jmp 0xfffff6d0(%rip)
9647(7): mov $0x1,0xfffffd31(%rbp)
964e(7): mov 0xfffffd38(%rbp),%rdi
9655(5): call 0xffff97bb(%rip)
965a(7): cmp $0x0,0xfffffd31(%rbp)
9661(b): mov $0x0,0xfffffd38(%rbp)
966c(b): mov $0x0,0xfffffd28(%rbp)
9677(6): jz 0xfffff4ec(%rip)
967d(7): mov 0xfffffc78(%rbp),%rbx
9684(7): mov 0xfffffca0(%rbp),%r13d
968b(7): mov 0xfffffc60(%rbp),%rcx
9692(7): cmp %rcx,0xfffffc80(%rbp)
9699(4): setnle %r12b
969d(2): jnle 0xf(%rip)
969f(7): cmp $0x0,0xfffffcc8(%rbp)
96a6(6): jz 0xfffff994(%rip)
96ac(7): cmp $0x1,0xfffffc70(%rbp)
96b3(7): mov 0xfffffc80(%rbp),%rsi
96ba(2): jz 0x74(%rip)
96bc(6): mov 0xfffffcd8(%rbp),%edi
96c2(5): call 0xffff92ee(%rip)
96c7(2): test %eax,%eax
96c9(6): jnz 0xffffff31(%rip)
96cf(7): cmp $0x3,0xfffffc70(%rbp)
96d6(6): jnz 0xfffff964(%rip)
96dc(3): test %r12b,%r12b
96df(6): jz 0xfffff95b(%rip)
96e5(7): mov 0xfffffc80(%rbp),%rdx
96ec(7): mov 0xfffffc60(%rbp),%rsi
96f3(6): mov 0xfffffcd8(%rbp),%edi
96f9(3): sub %rsi,%rdx
96fc(5): call 0xffffb6f4(%rip)
9701(2): test %eax,%eax
9703(6): jns 0xfffff937(%rip)
9709(7): mov 0xfffffcf8(%rbp),%rsi
9710(5): mov $0x4,%edi
9715(5): call 0x539b(%rip)
971a(5): mov $0x5,%edx
971f(3): mov %rax,%r12
9722(7): lea 0xb686(%rip),%rsi
9729(5): jmp 0xfffffef1(%rip)
972e(7): sub 0xfffffc60(%rbp),%rsi
9735(6): mov 0xfffffcd8(%rbp),%edi
973b(5): call 0xffffb605(%rip)
9740(2): test %al,%al
9742(6): jnz 0xfffff8f8(%rip)
9748(5): jmp 0xfffffeb2(%rip)
974d(7): mov 0xfffffed0(%rbp),%rax
9754(7): cmp %rax,0xfffffc90(%rbp)
975b(6): jbe 0xfffff328(%rip)
9761(4): add $0x1,%rax
9765(7): mov %rax,0xfffffc90(%rbp)
976c(5): jmp 0xfffff317(%rip)
9771(7): cmp $0x0,0xfffffd31(%rbp)
9778(7): mov 0xfffffc78(%rbp),%rbx
977f(7): mov 0xfffffca0(%rbp),%r13d
9786(6): jnz 0xffffff05(%rip)
978c(7): cmp $0x0,0xfffffd30(%rbp)
9793(6): jz 0x21d(%rip)
9799(3): xor %r9d,%r9d
979c(4): cmp $0x3,0xc(%rbx)
97a0(5): mov $0x0,%eax
97a5(4): setz %r9b
97a9(7): cmp $0x0,0xfffffc5b(%rbp)
97b0(8): cmovne 0xfffffc68(%rbp),%rax
97b8(7): mov %rax,0xfffffc68(%rbp)
97bf(5): jmp 0xfffffdc2(%rip)
97c4(6): mov 0xfffffce0(%rbp),%edx
97ca(6): mov 0xfffffcd8(%rbp),%edi
97d0(2): xor %eax,%eax
97d2(5): mov $0x40049409,%esi
97d7(5): call 0xffff9239(%rip)
97dc(2): test %eax,%eax
97de(6): jz 0xfffff851(%rip)
97e4(4): cmp $0x2,0x38(%rbx)
97e8(6): jnz 0xfffff184(%rip)
97ee(7): mov 0xfffffcf0(%rbp),%rdx
97f5(5): mov $0x4,%esi
97fa(5): mov $0x1,%edi
97ff(5): call 0x5191(%rip)
9804(7): mov 0xfffffcf8(%rbp),%rdx
980b(5): mov $0x4,%esi
9810(2): xor %edi,%edi
9812(3): mov %rax,%r12
9815(5): call 0x517b(%rip)
981a(7): lea 0xb70a(%rip),%rsi
9821(5): mov $0x5,%edx
9826(2): xor %edi,%edi
9828(7): mov %rax,0xfffffcc8(%rbp)
982f(5): call 0xffff90b1(%rip)
9834(7): mov %rax,0xfffffcd0(%rbp)
983b(5): call 0xffff8f35(%rip)
9840(7): mov 0xfffffcc8(%rbp),%rcx
9847(2): mov (%rax),%esi
9849(3): mov %r12,%r8
984c(7): mov 0xfffffcd0(%rbp),%rdx
9853(2): xor %edi,%edi
9855(2): xor %eax,%eax
9857(5): call 0xffff9459(%rip)
985c(3): xor %r8d,%r8d
985f(b): mov $0x0,0xfffffcd0(%rbp)
986a(5): jmp 0xfffff4ab(%rip)
986f(3): mov 0xc(%rbx),%eax
9872(3): cmp $0x3,%eax
9875(6): jz 0x89(%rip)
987b(3): cmp $0x2,%eax
987e(6): jnz 0xfffff196(%rip)
9884(7): test $0x1,0xfffffcb8(%rbp)
988b(6): jz 0xfffff189(%rip)
9891(7): mov 0xfffffc90(%rbp),%rax
9898(4): lea 0x0(%r12,%rax,1),%rdi
989c(5): call 0x7784(%rip)
98a1(5): lea 0xffffffff(%rax,%r12,1),%rcx
98a6(7): mov %rax,0xfffffcd0(%rbp)
98ad(2): xor %edx,%edx
98af(3): mov %rcx,%rax
98b2(3): div %r12,%rax
98b5(3): sub %rdx,%rcx
98b8(7): mov %rcx,0xfffffc50(%rbp)
98bf(3): mov 0xc(%rbx),%eax
98c2(6): mov %eax,0xfffffc70(%rbp)
98c8(7): movzx 0xfffffcc8(%rbp),%eax
98cf(6): mov %al,0xfffffc5b(%rbp)
98d5(5): jmp 0xfffff227(%rip)
98da(7): mov 0xfffffed0(%rbp),%rax
98e1(2): cdq %rax
98e3(3): idiv %r8,%rax
98e6(7): cmp %rax,0xfffffee0(%rbp)
98ed(3): setl %al
98f0(3): movzx %al,%eax
98f3(6): mov %eax,0xfffffcb8(%rbp)
98f9(5): jmp 0xfffff105(%rip)
98fe(7): mov 0xfffffc90(%rbp),%rax
9905(4): lea 0x0(%r12,%rax,1),%rdi
9909(5): call 0x7717(%rip)
990e(5): lea 0xffffffff(%rax,%r12,1),%rcx
9913(2): xor %edx,%edx
9915(7): mov %rax,0xfffffcd0(%rbp)
991c(3): mov %rcx,%rax
991f(3): div %r12,%rax
9922(3): sub %rdx,%rcx
9925(7): cmp $0x0,0xfffffcb8(%rbp)
992c(7): mov %rcx,0xfffffc50(%rbp)
9933(2): jnz 0xffffff8c(%rip)
9935(3): xor %r9d,%r9d
9938(4): cmp $0x3,0xc(%rbx)
993c(7): lea 0xfffffd10(%rbp),%rax
9943(7): mov %rax,0xfffffcb8(%rbp)
994a(4): setz %r9b
994e(5): jmp 0xfffffc33(%rip)
9953(7): mov 0xfffffcf8(%rbp),%rdx
995a(5): mov $0x3,%esi
995f(2): xor %edi,%edi
9961(7): mov 0xfffffc78(%rbp),%rbx
9968(7): mov 0xfffffca0(%rbp),%r13d
996f(5): call 0x5241(%rip)
9974(7): lea 0xb5cb(%rip),%rsi
997b(3): mov %rax,%r12
997e(5): mov $0x5,%edx
9983(2): xor %edi,%edi
9985(5): call 0xffff8f5b(%rip)
998a(7): mov %rax,0xfffffcc8(%rbp)
9991(5): call 0xffff8ddf(%rip)
9996(7): mov 0xfffffcc8(%rbp),%rdx
999d(2): mov (%rax),%esi
999f(3): mov %r12,%rcx
99a2(2): xor %edi,%edi
99a4(2): xor %eax,%eax
99a6(5): call 0xffff930a(%rip)
99ab(5): jmp 0xfffff35b(%rip)
99b0(7): mov 0xfffffcf0(%rbp),%rdx
99b7(5): mov $0x3,%esi
99bc(2): xor %edi,%edi
99be(5): call 0x51f2(%rip)
99c3(5): mov $0x5,%edx
99c8(3): mov %rax,%r12
99cb(7): lea 0xb206(%rip),%rsi
99d2(5): jmp 0xfffffc48(%rip)
99d7(5): call 0xffffc079(%rip)
99dc(6): mov 0xfffffcd8(%rbp),%esi
99e2(2): not %eax
99e4(7): mov 0xfffffcf8(%rbp),%rdi
99eb(2): mov %eax,%edx
99ed(3): mov %r12d,%r14d
99f0(6): and $0x1b6,%edx
99f6(5): call 0xc3a(%rip)
99fb(2): test %eax,%eax
99fd(4): setz %r8b
9a01(5): jmp 0xfffff314(%rip)
9a06(7): mov 0xfffffcf8(%rbp),%rsi
9a0d(5): mov $0x4,%edi
9a12(5): call 0x509e(%rip)
9a17(7): lea 0xb44b(%rip),%rsi
9a1e(5): mov $0x5,%edx
9a23(2): xor %edi,%edi
9a25(7): mov %rax,0xfffffcd8(%rbp)
9a2c(5): call 0xffff8eb4(%rip)
9a31(7): mov 0xfffffcd8(%rbp),%rcx
9a38(3): mov %rax,%rdx
9a3b(4): mov (%r12),%esi
9a3f(5): jmp 0xffffe182(%rip)
9a44(7): lea 0x96ad(%rip),%rsi
9a4b(2): xor %edi,%edi
9a4d(5): mov $0x5,%edx
9a52(5): call 0xffff8e8e(%rip)
9a57(3): mov %rax,%r12
9a5a(5): call 0xffff8d16(%rip)
9a5f(7): mov 0xfffffcf8(%rbp),%rcx
9a66(2): mov (%rax),%esi
9a68(2): xor %edi,%edi
9a6a(2): xor %eax,%eax
9a6c(3): mov %r12,%rdx
9a6f(5): call 0xffff9241(%rip)
9a74(5): movzx 0x24(%rbx),%r8d
9a79(3): test %r8b,%r8b
9a7c(6): jnz 0xffffcf94(%rip)
9a82(5): jmp 0xffffc57d(%rip)
9a87(7): mov 0xfffffcf8(%rbp),%rsi
9a8e(5): mov $0x4,%edi
9a93(7): mov %r8b,0xfffffcd8(%rbp)
9a9a(5): call 0x5016(%rip)
9a9f(7): lea 0xb10a(%rip),%rsi
9aa6(3): mov %rax,%r12
9aa9(5): mov $0x5,%edx
9aae(2): xor %edi,%edi
9ab0(5): call 0xffff8e30(%rip)
9ab5(3): mov %r12,%rcx
9ab8(3): mov %rax,%rdx
9abb(2): xor %esi,%esi
9abd(2): xor %edi,%edi
9abf(2): xor %eax,%eax
9ac1(5): call 0xffff91ef(%rip)
9ac6(b): mov $0x0,0xfffffcd0(%rbp)
9ad1(8): movzx 0xfffffcd8(%rbp),%r8d
9ad9(5): jmp 0xffffe0ff(%rip)
9ade(5): call 0xffff8f22(%rip)
9ae3(2): test %eax,%eax
9ae5(6): jz 0xfffff5d2(%rip)
9aeb(7): mov 0xfffffcf8(%rbp),%rsi
9af2(6): mov 0xfffffcd8(%rbp),%edi
9af8(5): mov $0x180,%edx
9afd(5): call 0xffff9323(%rip)
9b02(2): test %eax,%eax
9b04(6): jnz 0xfffff5b3(%rip)
9b0a(6): mov 0xfffffc88(%rbp),%edx
9b10(7): mov 0xfffffcf8(%rbp),%rsi
9b17(6): mov 0xfffffcd8(%rbp),%edi
9b1d(2): not %edx
9b1f(6): and 0xfffffc5c(%rbp),%edx
9b25(5): call 0xffff92fb(%rip)
9b2a(5): jmp 0xfffff58d(%rip)
9b2f(7): mov 0xfffffcf0(%rbp),%rsi
9b36(5): mov $0x4,%edi
9b3b(7): mov 0xfffffc78(%rbp),%rbx
9b42(7): mov 0xfffffca0(%rbp),%r13d
9b49(5): call 0x4f67(%rip)
9b4e(5): mov $0x5,%edx
9b53(3): mov %rax,%r12
9b56(7): lea 0xb242(%rip),%rsi
9b5d(5): jmp 0xfffffe26(%rip)
9b62(3): mov 0x10(%rbx),%edx
9b65(6): mov 0xfffffcd8(%rbp),%esi
9b6b(7): mov 0xfffffcf8(%rbp),%rdi
9b72(5): call 0xabe(%rip)
9b77(2): test %eax,%eax
9b79(4): setz %r8b
9b7d(5): jmp 0xfffff198(%rip)
9b82(5): call 0xffff928e(%rip)
9b87(5): jmp 0xffffebb3(%rip)

"copy" :
9b90(4): sub $0x18,%rsp
9b94(9): mov $0x28,%rax
9b9d(5): mov %rax,0x8(%rsp)
9ba2(2): xor %eax,%eax
9ba4(3): test %rcx,%rcx
9ba7(6): jz 0x12f(%rip)
9bad(3): cmp $0x3,(%rcx)
9bb0(6): jnbe 0x107(%rip)
9bb6(3): mov 0xc(%rcx),%eax
9bb9(4): lea 0xffffffff(%rax),%r10d
9bbd(4): cmp $0x2,%r10d
9bc1(6): jnbe 0xd7(%rip)
9bc7(4): mov 0x38(%rcx),%r10d
9bcb(4): cmp $0x2,%r10d
9bcf(6): jnbe 0xaa(%rip)
9bd5(4): cmp $0x0,0x17(%rcx)
9bd9(2): jnz 0x57(%rip)
9bdb(3): cmp $0x2,%eax
9bde(2): jz 0x8(%rip)
9be0(4): cmp $0x2,%r10d
9be4(2): jz 0x71(%rip)
9be6(5): mov $0x0,0x7(%rsp)
9beb(2): push %r9
9bed(3): movzx %dl,%edx
9bf0(2): push %r8
9bf2(3): mov %rcx,%r9
9bf5(3): xor %r8d,%r8d
9bf8(2): xor %ecx,%ecx
9bfa(7): mov %rsi,0x210967(%rip)
9c01(7): mov %rdi,0x210968(%rip)
9c08(5): lea 0x17(%rsp),%rax
9c0d(1): push %rax
9c0e(2): push $0x1
9c10(5): call 0xffffbe70(%rip)
9c15(4): add $0x20,%rsp
9c19(5): mov 0x8(%rsp),%rsi
9c1e(9): xor $0x28,%rsi
9c27(2): jnz 0x4d(%rip)
9c29(4): add $0x18,%rsp
9c2d(1): ret near (%rsp)
9c2e(2): nop 
9c30(4): cmp $0x0,0x2c(%rcx)
9c34(2): jz 0xffffffa7(%rip)
9c36(7): lea 0xb433(%rip),%rcx
9c3d(7): lea 0xb403(%rip),%rsi
9c44(7): lea 0xb0ad(%rip),%rdi
9c4b(5): mov $0xb8a,%edx
9c50(5): call 0xffff8d90(%rip)
9c55(7): lea 0xb414(%rip),%rcx
9c5c(7): lea 0xb3e4(%rip),%rsi
9c63(7): lea 0xb0b6(%rip),%rdi
9c6a(5): mov $0xb8d,%edx
9c6f(5): call 0xffff8d71(%rip)
9c74(5): call 0xffff8cbc(%rip)
9c79(7): lea 0xb3f0(%rip),%rcx
9c80(7): lea 0xb3c0(%rip),%rsi
9c87(7): lea 0xb042(%rip),%rdi
9c8e(5): mov $0xb89,%edx
9c93(5): call 0xffff8d4d(%rip)
9c98(7): lea 0xb3d1(%rip),%rcx
9c9f(7): lea 0xb3a1(%rip),%rsi
9ca6(7): lea 0xaffb(%rip),%rdi
9cad(5): mov $0xb88,%edx
9cb2(5): call 0xffff8d2e(%rip)
9cb7(7): lea 0xb3b2(%rip),%rcx
9cbe(7): lea 0xb382(%rip),%rsi
9cc5(7): lea 0xafb4(%rip),%rdi
9ccc(5): mov $0xb87,%edx
9cd1(5): call 0xffff8d0f(%rip)
9cd6(7): lea 0xb393(%rip),%rcx
9cdd(7): lea 0xb363(%rip),%rsi
9ce4(7): lea 0xb379(%rip),%rdi
9ceb(5): mov $0xb86,%edx
9cf0(5): call 0xffff8cf0(%rip)

"src_to_dest_hash" :
9d00(3): mov (%rdi),%rax
9d03(2): xor %edx,%edx
9d05(3): div %rsi,%rax
9d08(3): mov %rdx,%rax
9d0b(1): ret near (%rsp)

"src_to_dest_compare" :
9d10(2): xor %eax,%eax
9d12(3): mov (%rsi),%rdx
9d15(3): cmp %rdx,(%rdi)
9d18(2): jz 0x8(%rip)
9d1a(2): REP ret near (%rsp)
9d1c(4): nop 0x0(%rax)
9d20(4): mov 0x8(%rsi),%rax
9d24(4): cmp %rax,0x8(%rdi)
9d28(3): setz %al
9d2b(1): ret near (%rsp)

"src_to_dest_free" :
9d30(1): push %rbx
9d31(3): mov %rdi,%rbx
9d34(4): mov 0x10(%rdi),%rdi
9d38(5): call 0xffff90d8(%rip)
9d3d(3): mov %rbx,%rdi
9d40(1): pop %rbx
9d41(5): jmp 0xffff90cf(%rip)

"forget_created" :
9d50(1): push %rbx
9d51(4): sub $0x20,%rsp
9d55(4): mov %rdi,(%rsp)
9d59(7): mov 0x210818(%rip),%rdi
9d60(5): mov %rsi,0x8(%rsp)
9d65(3): mov %rsp,%rsi
9d68(9): mov $0x0,0x10(%rsp)
9d71(9): mov $0x28,%rax
9d7a(5): mov %rax,0x18(%rsp)
9d7f(2): xor %eax,%eax
9d81(5): call 0x2eaf(%rip)
9d86(3): test %rax,%rax
9d89(2): jz 0x16(%rip)
9d8b(4): mov 0x10(%rax),%rdi
9d8f(3): mov %rax,%rbx
9d92(5): call 0xffff907e(%rip)
9d97(3): mov %rbx,%rdi
9d9a(5): call 0xffff9076(%rip)
9d9f(5): mov 0x18(%rsp),%rax
9da4(9): xor $0x28,%rax
9dad(2): jnz 0x8(%rip)
9daf(4): add $0x20,%rsp
9db3(1): pop %rbx
9db4(1): ret near (%rsp)
9db5(5): call 0xffff8b7b(%rip)

"src_to_dest_lookup" :
9dc0(4): sub $0x28,%rsp
9dc4(4): mov %rdi,(%rsp)
9dc8(7): mov 0x2107a9(%rip),%rdi
9dcf(5): mov %rsi,0x8(%rsp)
9dd4(3): mov %rsp,%rsi
9dd7(9): mov $0x28,%rax
9de0(5): mov %rax,0x18(%rsp)
9de5(2): xor %eax,%eax
9de7(5): call 0x2379(%rip)
9dec(3): test %rax,%rax
9def(2): jz 0x21(%rip)
9df1(4): mov 0x10(%rax),%rax
9df5(5): mov 0x18(%rsp),%rdx
9dfa(9): xor $0x28,%rdx
9e03(2): jnz 0x11(%rip)
9e05(4): add $0x28,%rsp
9e09(1): ret near (%rsp)
9e0a(6): nop 0x0(%rax,%rax,1)
9e10(2): xor %eax,%eax
9e12(2): jmp 0xffffffe3(%rip)
9e14(5): call 0xffff8b1c(%rip)

"remember_copied" :
9e20(2): push %r13
9e22(2): push %r12
9e24(3): mov %rdi,%r13
9e27(1): push %rbp
9e28(1): push %rbx
9e29(5): mov $0x18,%edi
9e2e(3): mov %rsi,%r12
9e31(3): mov %rdx,%rbp
9e34(4): sub $0x8,%rsp
9e38(5): call 0x71e8(%rip)
9e3d(3): mov %r13,%rdi
9e40(3): mov %rax,%rbx
9e43(5): call 0x740d(%rip)
9e48(7): mov 0x210729(%rip),%rdi
9e4f(3): mov %rbx,%rsi
9e52(4): mov %rax,0x10(%rbx)
9e56(3): mov %r12,(%rbx)
9e59(4): mov %rbp,0x8(%rbx)
9e5d(5): call 0x2d73(%rip)
9e62(3): test %rax,%rax
9e65(2): jz 0x2f(%rip)
9e67(3): cmp %rax,%rbx
9e6a(3): mov %rax,%rbp
9e6d(2): jz 0x23(%rip)
9e6f(4): mov 0x10(%rbx),%rdi
9e73(5): call 0xffff8f9d(%rip)
9e78(3): mov %rbx,%rdi
9e7b(5): call 0xffff8f95(%rip)
9e80(4): mov 0x10(%rbp),%rax
9e84(4): add $0x8,%rsp
9e88(1): pop %rbx
9e89(1): pop %rbp
9e8a(2): pop %r12
9e8c(2): pop %r13
9e8e(1): ret near (%rsp)
9e8f(1): nop 
9e90(2): xor %eax,%eax
9e92(2): jmp 0xfffffff2(%rip)
9e94(5): call 0x73dc(%rip)

"hash_init" :
9ea0(7): lea 0xfffffe89(%rip),%r8
9ea7(7): lea 0xfffffe62(%rip),%rcx
9eae(7): lea 0xfffffe4b(%rip),%rdx
9eb5(4): sub $0x8,%rsp
9eb9(2): xor %esi,%esi
9ebb(5): mov $0x67,%edi
9ec0(5): call 0x2510(%rip)
9ec5(3): test %rax,%rax
9ec8(7): mov %rax,0x2106a9(%rip)
9ecf(2): jz 0x7(%rip)
9ed1(4): add $0x8,%rsp
9ed5(1): ret near (%rsp)
9ed6(5): call 0x739a(%rip)

"forget_all" :
9ee0(7): mov 0x210691(%rip),%rdi
9ee7(5): jmp 0x2739(%rip)

"extent_scan_init" :
9ef0(2): mov %edi,(%rsi)
9ef2(8): mov $0x0,0x18(%rsi)
9efa(8): mov $0x0,0x28(%rsi)
9f02(8): mov $0x0,0x8(%rsi)
9f0a(4): mov $0x0,0x20(%rsi)
9f0e(4): mov $0x0,0x21(%rsi)
9f12(7): mov $0x1,0x10(%rsi)
9f19(1): ret near (%rsp)

"extent_scan_read" :
9f20(2): push %r15
9f22(2): push %r14
9f24(3): xor %r15d,%r15d
9f27(2): push %r13
9f29(2): push %r12
9f2b(3): mov %rdi,%r14
9f2e(1): push %rbp
9f2f(1): push %rbx
9f30(a): mov $0x9223372036854775807,%r13
9f3a(7): sub $0x1018,%rsp
9f41(4): mov 0x28(%rdi),%rbx
9f45(4): mov 0x8(%rdi),%rdx
9f49(3): mov %rsp,%rbp
9f4c(9): mov $0x28,%rax
9f55(8): mov %rax,0x1008(%rsp)
9f5d(2): xor %eax,%eax
9f5f(4): lea 0x20(%rbp),%r12
9f63(2): xor %eax,%eax
9f65(5): mov $0x200,%ecx
9f6a(3): mov %rbp,%rdi
9f6d(3): REP stosd %rax,rdi(%es,10)
9f70(4): mov 0x10(%r14),%eax
9f74(3): mov (%r14),%edi
9f77(5): mov $0xc020660b,%esi
9f7c(4): mov %rdx,(%rsp)
9f80(3): not %rdx
9f83(8): mov $0x48,0x18(%rsp)
9f8b(5): mov %rdx,0x8(%rsp)
9f90(3): mov %rbp,%rdx
9f93(4): mov %eax,0x10(%rsp)
9f97(2): xor %eax,%eax
9f99(5): call 0xffff8a77(%rip)
9f9e(2): test %eax,%eax
9fa0(6): js 0xd0(%rip)
9fa6(4): mov 0x14(%rsp),%eax
9faa(2): test %eax,%eax
9fac(6): jz 0x23c(%rip)
9fb2(4): mov 0x18(%r14),%rcx
9fb6(3): mov %rax,%rdx
9fb9(3): not %rdx
9fbc(3): cmp %rdx,%rcx
9fbf(6): jnbe 0x23b(%rip)
9fc5(4): mov 0x28(%r14),%rdi
9fc9(5): mov $0x18,%edx
9fce(3): add %rax,%rcx
9fd1(3): mov %rdx,%rax
9fd4(2): xor %esi,%esi
9fd6(4): mov %rcx,0x18(%r14)
9fda(3): sub %rdi,%rbx
9fdd(3): mul %rax,%rcx,%rdx
9fe0(6): jo 0x239(%rip)
9fe6(3): test %rax,%rax
9fe9(6): js 0x23a(%rip)
9fef(3): test %rsi,%rsi
9ff2(6): jnz 0x231(%rip)
9ff8(4): lea 0x0(%rcx,%rcx,2),%rsi
9ffc(4): shl/sal $0x3,%rsi
a000(5): call 0x7080(%rip)
a005(5): mov 0x14(%rsp),%r8d
a00a(3): add %rax,%rbx
a00d(4): mov %rax,0x28(%r14)
a011(3): test %r8d,%r8d
a014(6): jz 0x13c(%rip)
a01a(5): mov 0x30(%rsp),%rax
a01f(5): mov 0x20(%rsp),%rdx
a024(3): mov %r13,%rcx
a027(3): sub %rax,%rcx
a02a(3): cmp %rcx,%rdx
a02d(6): jnbe 0xdd(%rip)
a033(2): xor %ecx,%ecx
a035(3): mov %r12,%rsi
a038(3): test %r15d,%r15d
a03b(2): jz 0x75(%rip)
a03d(4): mov 0x28(%rsi),%r9d
a041(4): mov 0x8(%rbx),%r10
a045(3): mov (%rbx),%rdi
a048(3): mov %r9d,%r11d
a04b(3): add %r10,%rdi
a04e(4): and $0xfe,%r11d
a052(4): cmp %r11d,0x10(%rbx)
a056(6): jz 0xda(%rip)
a05c(3): cmp %rdx,%rdi
a05f(2): jbe 0x5e(%rip)
a061(3): mov %rdi,%r10
a064(3): sub %rdx,%r10
a067(3): cmp %rax,%r10
a06a(6): jnb 0x11e(%rip)
a070(2): xor %eax,%eax
a072(5): cmp $0x0,0x8(%r14)
a077(2): jnz 0x9(%rip)
a079(5): mov $0x1,0x20(%r14)
a07e(2): xor %eax,%eax
a080(8): mov 0x1008(%rsp),%rbx
a088(9): xor $0x28,%rbx
a091(6): jnz 0x197(%rip)
a097(7): add $0x1018,%rsp
a09e(1): pop %rbx
a09f(1): pop %rbp
a0a0(2): pop %r12
a0a2(2): pop %r13
a0a4(2): pop %r14
a0a6(2): pop %r15
a0a8(1): ret near (%rsp)
a0a9(7): nop 0x0(%rax)
a0b0(4): mov 0x8(%r14),%rdi
a0b4(3): cmp %rdx,%rdi
a0b7(2): jnbe 0xffffffaa(%rip)
a0b9(4): mov 0x28(%rsi),%r9d
a0bd(3): mov %r15d,%esi
a0c0(4): add $0x1,%r15d
a0c4(4): lea 0x0(%rsi,%rsi,2),%rdi
a0c8(4): mov 0x28(%r14),%rsi
a0cc(4): lea 0x0(%rsi,%rdi,8),%rbx
a0d0(3): mov %rdx,(%rbx)
a0d3(4): mov %rax,0x8(%rbx)
a0d7(4): mov %r9d,0x10(%rbx)
a0db(3): add $0x1,%ecx
a0de(3): cmp %r8d,%ecx
a0e1(2): jnb 0x6f(%rip)
a0e3(2): mov %ecx,%edx
a0e5(3): mov %r13,%rdi
a0e8(8): lea 0x0(,%rdx,8),%rax
a0f0(3): sub %rdx,%rax
a0f3(4): lea 0x0(%r12,%rax,8),%rsi
a0f7(4): mov 0x10(%rsi),%rax
a0fb(3): mov (%rsi),%rdx
a0fe(3): sub %rax,%rdi
a101(3): cmp %rdi,%rdx
a104(6): jbe 0xffffff34(%rip)
a10a(7): lea 0xb00f(%rip),%rcx
a111(7): lea 0xaf68(%rip),%rsi
a118(7): lea 0xafc1(%rip),%rdi
a11f(5): mov $0x8d,%edx
a124(5): call 0xffff88bc(%rip)
a129(7): nop 0x0(%rax)
a130(3): cmp %rdx,%rdi
a133(6): jnz 0xffffff29(%rip)
a139(3): add $0x1,%ecx
a13c(3): add %r10,%rax
a13f(4): mov %r9d,0x10(%rbx)
a143(3): cmp %r8d,%ecx
a146(4): mov %rax,0x8(%rbx)
a14a(2): jb 0xffffff99(%rip)
a14c(4): nop 0x0(%rax)
a150(4): test $0x1,0x10(%rbx)
a154(2): jnz 0x4c(%rip)
a156(4): cmp $0x48,%r15d
a15a(5): movzx 0x21(%r14),%eax
a15f(2): jbe 0x61(%rip)
a161(2): test %al,%al
a163(2): jnz 0x42(%rip)
a165(4): lea 0xffffffff(%r15),%eax
a169(4): mov 0x28(%r14),%rdx
a16d(4): lea 0x0(%rax,%rax,2),%rcx
a171(4): mov %rax,0x18(%r14)
a175(5): mov 0xffffffe8(%rdx,%rcx,8),%rax
a17a(5): add 0xfffffff0(%rdx,%rcx,8),%rax
a17f(4): mov %rax,0x8(%r14)
a183(2): jmp 0x29(%rip)
a185(3): nop (%rax)
a188(3): sub %r10,%rax
a18b(3): mov %rdi,(%rsi)
a18e(3): sub $0x1,%ecx
a191(4): mov %rax,0x10(%rsi)
a195(5): jmp 0xffffff46(%rip)
a19a(6): nop 0x0(%rax,%rax,1)
a1a0(5): mov $0x1,0x21(%r14)
a1a5(3): mov %r15d,%eax
a1a8(4): mov %rax,0x18(%r14)
a1ac(5): mov $0x1,%eax
a1b1(5): jmp 0xfffffecf(%rip)
a1b6(a): nop 0x0(%rax,%rax,1)
a1c0(3): mov %r15d,%ecx
a1c3(2): test %al,%al
a1c5(4): mov %rcx,0x18(%r14)
a1c9(2): jnz 0xffffffe3(%rip)
a1cb(4): mov 0x8(%rbx),%rdx
a1cf(3): add (%rbx),%rdx
a1d2(4): cmp $0x47,%r15d
a1d6(4): mov %rdx,0x8(%r14)
a1da(6): jbe 0xfffffd89(%rip)
a1e0(2): jmp 0xffffffcc(%rip)
a1e2(6): nop 0x0(%rax,%rax,1)
a1e8(5): cmp $0x0,0x8(%r14)
a1ed(5): mov $0x1,0x21(%r14)
a1f2(3): setnz %al
a1f5(5): jmp 0xfffffe8b(%rip)
a1fa(7): lea 0xaf1f(%rip),%rcx
a201(7): lea 0xae78(%rip),%rsi
a208(7): lea 0xae99(%rip),%rdi
a20f(5): mov $0x7e,%edx
a214(5): call 0xffff87cc(%rip)
a219(5): mov $0x1,%esi
a21e(5): jmp 0xfffffdc8(%rip)
a223(5): call 0x704d(%rip)
a228(5): call 0xffff8708(%rip)

"try_link" :
a230(3): mov %rsi,%rax
a233(3): mov %rdi,%rcx
a236(3): mov 0x10(%rsi),%edx
a239(4): mov 0x14(%rax),%r8d
a23d(4): mov 0x8(%rsi),%rsi
a241(2): mov (%rax),%edi
a243(5): jmp 0xffff89fd(%rip)

"samedir_template" :
a250(2): push %r12
a252(1): push %rbp
a253(3): mov %rdi,%rbp
a256(1): push %rbx
a257(3): mov %rsi,%r12
a25a(5): call 0x1336(%rip)
a25f(3): sub %rbp,%rax
a262(4): lea 0x9(%rax),%rdi
a266(3): mov %rax,%rbx
a269(7): cmp $0x100,%rdi
a270(2): jbe 0x11(%rip)
a272(5): call 0xffff894e(%rip)
a277(3): mov %rax,%r12
a27a(2): xor %eax,%eax
a27c(3): test %r12,%r12
a27f(2): jz 0x24(%rip)
a281(3): mov %rbx,%rdx
a284(3): mov %rbp,%rsi
a287(3): mov %r12,%rdi
a28a(5): call 0xffff8a16(%rip)
a28f(a): mov $0x6365935209750754627,%rcx
a299(4): mov $0x0,0x8(%rax)
a29d(3): mov %rcx,(%rax)
a2a0(3): mov %r12,%rax
a2a3(1): pop %rbx
a2a4(1): pop %rbp
a2a5(2): pop %r12
a2a7(1): ret near (%rsp)

"try_symlink" :
a2b0(3): mov %rsi,%rax
a2b3(3): mov %rdi,%rdx
a2b6(3): mov 0x8(%rsi),%esi
a2b9(3): mov (%rax),%rdi
a2bc(5): jmp 0xffff8b14(%rip)

"force_linkat" :
a2d0(2): push %r15
a2d2(2): push %r14
a2d4(3): mov %edi,%r14d
a2d7(2): push %r13
a2d9(2): push %r12
a2db(3): mov %rsi,%r13
a2de(1): push %rbp
a2df(1): push %rbx
a2e0(3): mov %rcx,%rbx
a2e3(2): mov %edx,%ebp
a2e5(3): mov %r8d,%r12d
a2e8(7): sub $0x148,%rsp
a2ef(7): mov 0x180(%rsp),%ecx
a2f6(9): mov $0x28,%rax
a2ff(8): mov %rax,0x138(%rsp)
a307(2): xor %eax,%eax
a309(2): test %ecx,%ecx
a30b(6): js 0xb5(%rip)
a311(4): cmp $0x1,%r9b
a315(2): jnz 0x7b(%rip)
a317(3): cmp $0x11,%ecx
a31a(2): jnz 0x76(%rip)
a31c(5): lea 0x30(%rsp),%rax
a321(3): mov %rbx,%rdi
a324(3): mov %rax,%rsi
a327(4): mov %rax,(%rsp)
a32b(5): call 0xffffff25(%rip)
a330(3): test %rax,%rax
a333(3): mov %rax,%r15
a336(6): jz 0xea(%rip)
a33c(5): lea 0x10(%rsp),%rdx
a341(7): lea 0xfffffee8(%rip),%rcx
a348(2): xor %esi,%esi
a34a(6): mov $0x6,%r8d
a350(3): mov %rax,%rdi
a353(5): mov %r14d,0x10(%rsp)
a358(5): mov %r13,0x18(%rsp)
a35d(4): mov %ebp,0x20(%rsp)
a361(5): mov %r12d,0x24(%rsp)
a366(5): call 0x53ba(%rip)
a36b(2): test %eax,%eax
a36d(2): jz 0x7b(%rip)
a36f(5): call 0xffff8401(%rip)
a374(2): mov (%rax),%ecx
a376(4): cmp (%rsp),%r15
a37a(2): jz 0x16(%rip)
a37c(3): mov %r15,%rdi
a37f(3): mov %ecx,(%rsp)
a382(5): call 0xffff8a8e(%rip)
a387(3): mov (%rsp),%ecx
a38a(6): nop 0x0(%rax,%rax,1)
a390(8): mov 0x138(%rsp),%rbx
a398(9): xor $0x28,%rbx
a3a1(2): mov %ecx,%eax
a3a3(6): jnz 0x89(%rip)
a3a9(7): add $0x148,%rsp
a3b0(1): pop %rbx
a3b1(1): pop %rbp
a3b2(2): pop %r12
a3b4(2): pop %r13
a3b6(2): pop %r14
a3b8(2): pop %r15
a3ba(1): ret near (%rsp)
a3bb(5): nop 0x0(%rax,%rax,1)
a3c0(3): mov %rbx,%rcx
a3c3(4): mov %r9d,(%rsp)
a3c7(5): call 0xffff8879(%rip)
a3cc(2): test %eax,%eax
a3ce(2): mov %eax,%ecx
a3d0(2): jz 0xffffffc0(%rip)
a3d2(5): call 0xffff839e(%rip)
a3d7(4): mov (%rsp),%r9d
a3db(2): mov (%rax),%ecx
a3dd(5): jmp 0xffffff34(%rip)
a3e2(6): nop 0x0(%rax,%rax,1)
a3e8(3): mov %rbx,%rcx
a3eb(2): mov %ebp,%edx
a3ed(3): mov %r15,%rsi
a3f0(2): mov %ebp,%edi
a3f2(5): call 0xffff896e(%rip)
a3f7(2): test %eax,%eax
a3f9(5): mov $0xffffffff,%ecx
a3fe(2): jz 0x9(%rip)
a400(5): call 0xffff8370(%rip)
a405(2): mov (%rax),%ecx
a407(2): xor %edx,%edx
a409(3): mov %r15,%rsi
a40c(2): mov %ebp,%edi
a40e(4): mov %ecx,0xc(%rsp)
a412(5): call 0xffff83de(%rip)
a417(4): mov 0xc(%rsp),%ecx
a41b(5): jmp 0xffffff5b(%rip)
a420(5): call 0xffff8350(%rip)
a425(2): mov (%rax),%ecx
a427(5): jmp 0xffffff69(%rip)
a42c(5): call 0xffff8504(%rip)

"force_symlinkat" :
a440(2): push %r14
a442(2): push %r13
a444(2): push %r12
a446(1): push %rbp
a447(3): mov %rdi,%r12
a44a(1): push %rbx
a44b(2): mov %esi,%ebp
a44d(3): mov %rdx,%rbx
a450(7): sub $0x130,%rsp
a457(9): mov $0x28,%rax
a460(8): mov %rax,0x128(%rsp)
a468(2): xor %eax,%eax
a46a(3): test %r8d,%r8d
a46d(6): js 0xab(%rip)
a473(3): cmp $0x1,%cl
a476(2): jnz 0x72(%rip)
a478(4): cmp $0x11,%r8d
a47c(2): jnz 0x6c(%rip)
a47e(5): lea 0x20(%rsp),%r14
a483(3): mov %rbx,%rdi
a486(3): mov %r14,%rsi
a489(5): call 0xfffffdc7(%rip)
a48e(3): test %rax,%rax
a491(3): mov %rax,%r13
a494(6): jz 0xec(%rip)
a49a(5): lea 0x10(%rsp),%rdx
a49f(7): lea 0xfffffe0a(%rip),%rcx
a4a6(2): xor %esi,%esi
a4a8(6): mov $0x6,%r8d
a4ae(3): mov %rax,%rdi
a4b1(5): mov %r12,0x10(%rsp)
a4b6(4): mov %ebp,0x18(%rsp)
a4ba(5): call 0x5266(%rip)
a4bf(2): test %eax,%eax
a4c1(2): jz 0x7f(%rip)
a4c3(5): call 0xffff82ad(%rip)
a4c8(3): mov (%rax),%r8d
a4cb(3): cmp %r14,%r13
a4ce(2): jz 0x1a(%rip)
a4d0(3): mov %r13,%rdi
a4d3(5): mov %r8d,0xc(%rsp)
a4d8(5): call 0xffff8938(%rip)
a4dd(5): mov 0xc(%rsp),%r8d
a4e2(6): nop 0x0(%rax,%rax,1)
a4e8(8): mov 0x128(%rsp),%rbx
a4f0(9): xor $0x28,%rbx
a4f9(3): mov %r8d,%eax
a4fc(6): jnz 0x91(%rip)
a502(7): add $0x130,%rsp
a509(1): pop %rbx
a50a(1): pop %rbp
a50b(2): pop %r12
a50d(2): pop %r13
a50f(2): pop %r14
a511(1): ret near (%rsp)
a512(6): nop 0x0(%rax,%rax,1)
a518(4): mov %ecx,0xc(%rsp)
a51c(5): call 0xffff88b4(%rip)
a521(2): test %eax,%eax
a523(3): mov %eax,%r8d
a526(2): jz 0xffffffc2(%rip)
a528(5): call 0xffff8248(%rip)
a52d(4): mov 0xc(%rsp),%ecx
a531(3): mov (%rax),%r8d
a534(5): jmp 0xffffff3f(%rip)
a539(7): nop 0x0(%rax)
a540(3): mov %rbx,%rcx
a543(2): mov %ebp,%edx
a545(3): mov %r13,%rsi
a548(2): mov %ebp,%edi
a54a(5): call 0xffff8816(%rip)
a54f(2): test %eax,%eax
a551(6): mov $0xffffffff,%r8d
a557(6): jz 0xffffff74(%rip)
a55d(5): call 0xffff8213(%rip)
a562(3): mov (%rax),%r8d
a565(2): xor %edx,%edx
a567(3): mov %r13,%rsi
a56a(2): mov %ebp,%edi
a56c(5): mov %r8d,0xc(%rsp)
a571(5): call 0xffff827f(%rip)
a576(5): mov 0xc(%rsp),%r8d
a57b(5): jmp 0xffffff50(%rip)
a580(5): call 0xffff81f0(%rip)
a585(3): mov (%rax),%r8d
a588(5): jmp 0xffffff60(%rip)
a58d(5): call 0xffff83a3(%rip)

"copy_acl" :
a5a0(2): push %r12
a5a2(1): push %rbp
a5a3(3): mov %rdi,%r12
a5a6(1): push %rbx
a5a7(3): mov %rdx,%rbp
a5aa(5): call 0x2a86(%rip)
a5af(3): cmp $0xfe,%eax
a5b2(2): mov %eax,%ebx
a5b4(2): jz 0x4c(%rip)
a5b6(3): cmp $0xff,%eax
a5b9(2): jnz 0x39(%rip)
a5bb(3): mov %rbp,%rdi
a5be(5): call 0x47c2(%rip)
a5c3(7): lea 0xa9b9(%rip),%rsi
a5ca(5): mov $0x5,%edx
a5cf(2): xor %edi,%edi
a5d1(3): mov %rax,%r12
a5d4(5): call 0xffff830c(%rip)
a5d9(3): mov %rax,%rbp
a5dc(5): call 0xffff8194(%rip)
a5e1(2): mov (%rax),%esi
a5e3(3): mov %r12,%rcx
a5e6(3): mov %rbp,%rdx
a5e9(2): xor %edi,%edi
a5eb(2): xor %eax,%eax
a5ed(5): call 0xffff86c3(%rip)
a5f2(2): mov %ebx,%eax
a5f4(1): pop %rbx
a5f5(1): pop %rbp
a5f6(2): pop %r12
a5f8(1): ret near (%rsp)
a5f9(7): nop 0x0(%rax)
a600(3): mov %r12,%rdi
a603(5): call 0x477d(%rip)
a608(3): mov %rax,%rbp
a60b(5): call 0xffff8165(%rip)
a610(2): mov (%rax),%esi
a612(7): lea 0xab74(%rip),%rdx
a619(3): mov %rbp,%rcx
a61c(2): xor %eax,%eax
a61e(2): xor %edi,%edi
a620(5): call 0xffff8690(%rip)
a625(2): mov %ebx,%eax
a627(1): pop %rbx
a628(1): pop %rbp
a629(2): pop %r12
a62b(1): ret near (%rsp)

"set_acl" :
a630(2): push %r12
a632(1): push %rbp
a633(3): mov %rdi,%rbp
a636(1): push %rbx
a637(5): call 0x2a79(%rip)
a63c(2): test %eax,%eax
a63e(2): mov %eax,%ebx
a640(2): jz 0x39(%rip)
a642(3): mov %rbp,%rdi
a645(5): call 0x473b(%rip)
a64a(7): lea 0x82d9(%rip),%rsi
a651(5): mov $0x5,%edx
a656(2): xor %edi,%edi
a658(3): mov %rax,%r12
a65b(5): call 0xffff8285(%rip)
a660(3): mov %rax,%rbp
a663(5): call 0xffff810d(%rip)
a668(2): mov (%rax),%esi
a66a(3): mov %r12,%rcx
a66d(3): mov %rbp,%rdx
a670(2): xor %edi,%edi
a672(2): xor %eax,%eax
a674(5): call 0xffff863c(%rip)
a679(2): mov %ebx,%eax
a67b(1): pop %rbx
a67c(1): pop %rbp
a67d(2): pop %r12
a67f(1): ret near (%rsp)

"areadlink_with_size" :
a680(2): push %r15
a682(2): push %r14
a684(5): mov $0x401,%eax
a689(2): push %r13
a68b(2): push %r12
a68d(3): mov %rdi,%r13
a690(1): push %rbp
a691(1): push %rbx
a692(4): lea 0x1(%rsi),%rbx
a696(a): mov $0x4611686018427387903,%r14
a6a0(a): mov $0x9223372036854775806,%r15
a6aa(4): sub $0x8,%rsp
a6ae(7): cmp $0x401,%rsi
a6b5(4): cmovnb %rax,%rbx
a6b9(7): nop 0x0(%rax)
a6c0(3): mov %rbx,%rdi
a6c3(5): call 0xffff84fd(%rip)
a6c8(3): test %rax,%rax
a6cb(3): mov %rax,%rbp
a6ce(2): jz 0x3d(%rip)
a6d0(3): mov %rbx,%rdx
a6d3(3): mov %rax,%rsi
a6d6(3): mov %r13,%rdi
a6d9(5): call 0xffff8137(%rip)
a6de(3): test %rax,%rax
a6e1(3): mov %rax,%r12
a6e4(2): js 0x54(%rip)
a6e6(3): cmp %r12,%rbx
a6e9(2): jnbe 0x67(%rip)
a6eb(3): mov %rbp,%rdi
a6ee(5): call 0xffff8722(%rip)
a6f3(3): cmp %r14,%rbx
a6f6(2): jnbe 0x2a(%rip)
a6f8(3): add %rbx,%rbx
a6fb(3): mov %rbx,%rdi
a6fe(5): call 0xffff84c2(%rip)
a703(3): test %rax,%rax
a706(3): mov %rax,%rbp
a709(2): jnz 0xffffffc7(%rip)
a70b(4): add $0x8,%rsp
a70f(3): mov %rbp,%rax
a712(1): pop %rbx
a713(1): pop %rbp
a714(2): pop %r12
a716(2): pop %r13
a718(2): pop %r14
a71a(2): pop %r15
a71c(1): ret near (%rsp)
a71d(3): nop (%rax)
a720(3): cmp %r15,%rbx
a723(2): jnbe 0x3d(%rip)
a725(a): mov $0x9223372036854775807,%rbx
a72f(2): jmp 0xffffff91(%rip)
a731(7): nop 0x0(%rax)
a738(5): call 0xffff8038(%rip)
a73d(3): cmp $0x22,(%rax)
a740(2): jz 0xffffffa6(%rip)
a742(3): mov %rbp,%rdi
a745(2): xor %ebp,%ebp
a747(5): call 0xffff86c9(%rip)
a74c(2): jmp 0xffffffbf(%rip)
a74e(2): nop 
a750(6): mov $0x0,0x0(%rbp,%r12,1)
a756(2): jmp 0xffffffb5(%rip)
a758(8): nop 0x0(%rax,%rax,1)
a760(5): call 0xffff8010(%rip)
a765(2): xor %ebp,%ebp
a767(6): mov $0xc,(%rax)
a76d(2): jmp 0xffffff9e(%rip)

"__argmatch_die" :
a770(5): mov $0x1,%edi
a775(5): jmp 0xffff9aab(%rip)

"argmatch" :
a780(2): push %r15
a782(2): push %r14
a784(3): mov %rsi,%r15
a787(2): push %r13
a789(2): push %r12
a78b(3): mov %rcx,%r13
a78e(1): push %rbp
a78f(1): push %rbx
a790(3): mov %rdx,%rbp
a793(4): sub $0x28,%rsp
a797(5): mov %rdi,0x8(%rsp)
a79c(5): mov %rdx,0x18(%rsp)
a7a1(5): call 0xffff815f(%rip)
a7a6(3): mov (%r15),%r14
a7a9(8): mov $0xffffffff,(%rsp)
a7b1(3): test %r14,%r14
a7b4(6): jz 0xb9(%rip)
a7ba(3): mov %rax,%r12
a7bd(5): mov $0x0,0x17(%rsp)
a7c2(2): xor %ebx,%ebx
a7c4(2): jmp 0x53(%rip)
a7c6(a): nop 0x0(%rax,%rax,1)
a7d0(5): mov 0x18(%rsp),%rax
a7d5(3): test %rax,%rax
a7d8(6): jz 0xa8(%rip)
a7de(4): mov (%rsp),%rdi
a7e2(3): mov %r13,%rdx
a7e5(3): mov %rbp,%rsi
a7e8(4): imul %r13,%rdi
a7ec(3): add %rax,%rdi
a7ef(5): call 0xffff82a1(%rip)
a7f4(2): test %eax,%eax
a7f6(5): movzx 0x17(%rsp),%eax
a7fb(5): mov $0x1,%ecx
a800(3): cmovne %ecx,%eax
a803(4): mov %al,0x17(%rsp)
a807(4): add $0x1,%rbx
a80b(3): add %r13,%rbp
a80e(4): mov 0x0(%r15,%rbx,8),%r14
a812(3): test %r14,%r14
a815(2): jz 0x43(%rip)
a817(5): mov 0x8(%rsp),%rsi
a81c(3): mov %r12,%rdx
a81f(3): mov %r14,%rdi
a822(5): call 0xffff7f6e(%rip)
a827(2): test %eax,%eax
a829(2): jnz 0xffffffde(%rip)
a82b(3): mov %r14,%rdi
a82e(5): call 0xffff80d2(%rip)
a833(3): cmp %r12,%rax
a836(2): jz 0x5a(%rip)
a838(5): cmp $0xffffffff,(%rsp)
a83d(2): jnz 0xffffff93(%rip)
a83f(4): mov %rbx,(%rsp)
a843(4): add $0x1,%rbx
a847(3): add %r13,%rbp
a84a(4): mov 0x0(%r15,%rbx,8),%r14
a84e(3): test %r14,%r14
a851(2): jnz 0xffffffc6(%rip)
a853(5): nop 0x0(%rax,%rax,1)
a858(5): cmp $0x0,0x17(%rsp)
a85d(7): mov $0xfffffffe,%rax
a864(5): cmove (%rsp),%rax
a869(4): mov %rax,(%rsp)
a86d(4): mov (%rsp),%rax
a871(4): add $0x28,%rsp
a875(1): pop %rbx
a876(1): pop %rbp
a877(2): pop %r12
a879(2): pop %r13
a87b(2): pop %r14
a87d(2): pop %r15
a87f(1): ret near (%rsp)
a880(5): mov $0x1,0x17(%rsp)
a885(2): jmp 0xffffff82(%rip)
a887(9): nop 0x0(%rax,%rax,1)
a890(4): mov %rbx,(%rsp)
a894(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
a8a0(4): cmp $0xffffffff,%rdx
a8a4(2): push %r12
a8a6(5): mov $0x5,%edx
a8ab(1): push %rbp
a8ac(3): mov %rsi,%r12
a8af(1): push %rbx
a8b0(3): mov %rdi,%rbp
a8b3(2): jz 0x4d(%rip)
a8b5(7): lea 0xa895(%rip),%rsi
a8bc(2): xor %edi,%edi
a8be(5): call 0xffff8022(%rip)
a8c3(3): mov %rax,%rbx
a8c6(3): mov %rbp,%rsi
a8c9(5): mov $0x1,%edi
a8ce(5): call 0x4492(%rip)
a8d3(3): mov %r12,%rdx
a8d6(3): mov %rax,%rbp
a8d9(5): mov $0x8,%esi
a8de(2): xor %edi,%edi
a8e0(5): call 0x40b0(%rip)
a8e5(3): mov %rbp,%r8
a8e8(3): mov %rbx,%rdx
a8eb(3): mov %rax,%rcx
a8ee(1): pop %rbx
a8ef(1): pop %rbp
a8f0(2): pop %r12
a8f2(2): xor %esi,%esi
a8f4(2): xor %edi,%edi
a8f6(2): xor %eax,%eax
a8f8(5): jmp 0xffff83b8(%rip)
a8fd(3): nop (%rax)
a900(7): lea 0xa82f(%rip),%rsi
a907(2): xor %edi,%edi
a909(5): call 0xffff7fd7(%rip)
a90e(3): mov %rax,%rbx
a911(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
a920(2): push %r15
a922(2): push %r14
a924(3): mov %rdi,%r14
a927(2): push %r13
a929(2): push %r12
a92b(2): xor %edi,%edi
a92d(1): push %rbp
a92e(1): push %rbx
a92f(3): mov %rsi,%rbp
a932(7): lea 0xa835(%rip),%rsi
a939(3): mov %rdx,%r12
a93c(5): mov $0x5,%edx
a941(4): sub $0x8,%rsp
a945(7): mov 0x20f794(%rip),%rbx
a94c(5): call 0xffff7f94(%rip)
a951(3): mov %rax,%rdi
a954(3): mov %rbx,%rsi
a957(5): call 0xffff8159(%rip)
a95c(3): mov (%r14),%r15
a95f(3): test %r15,%r15
a962(6): jz 0x96(%rip)
a968(3): xor %r13d,%r13d
a96b(2): xor %ebx,%ebx
a96d(2): jmp 0x3b(%rip)
a96f(1): nop 
a970(3): mov %r15,%rdi
a973(4): add $0x1,%rbx
a977(3): mov %rbp,%r13
a97a(5): call 0x4406(%rip)
a97f(7): mov 0x20f75a(%rip),%rdi
a986(7): lea 0xa7f6(%rip),%rdx
a98d(3): mov %rax,%rcx
a990(5): mov $0x1,%esi
a995(2): xor %eax,%eax
a997(3): add %r12,%rbp
a99a(5): call 0xffff8416(%rip)
a99f(4): mov 0x0(%r14,%rbx,8),%r15
a9a3(3): test %r15,%r15
a9a6(2): jz 0x52(%rip)
a9a8(3): test %rbx,%rbx
a9ab(2): jz 0xffffffc5(%rip)
a9ad(3): mov %r12,%rdx
a9b0(3): mov %rbp,%rsi
a9b3(3): mov %r13,%rdi
a9b6(5): call 0xffff80da(%rip)
a9bb(2): test %eax,%eax
a9bd(2): jnz 0xffffffb3(%rip)
a9bf(3): mov %r15,%rdi
a9c2(4): add $0x1,%rbx
a9c6(3): add %r12,%rbp
a9c9(5): call 0x43b7(%rip)
a9ce(7): mov 0x20f70b(%rip),%rdi
a9d5(7): lea 0xa7af(%rip),%rdx
a9dc(3): mov %rax,%rcx
a9df(5): mov $0x1,%esi
a9e4(2): xor %eax,%eax
a9e6(5): call 0xffff83ca(%rip)
a9eb(4): mov 0x0(%r14,%rbx,8),%r15
a9ef(3): test %r15,%r15
a9f2(2): jnz 0xffffffb6(%rip)
a9f4(4): nop 0x0(%rax)
a9f8(7): mov 0x20f6e1(%rip),%rdi
a9ff(4): mov 0x28(%rdi),%rax
aa03(4): cmp 0x30(%rdi),%rax
aa07(2): jnb 0x21(%rip)
aa09(4): lea 0x1(%rax),%rdx
aa0d(4): mov %rdx,0x28(%rdi)
aa11(3): mov $0xa,(%rax)
aa14(4): add $0x8,%rsp
aa18(1): pop %rbx
aa19(1): pop %rbp
aa1a(2): pop %r12
aa1c(2): pop %r13
aa1e(2): pop %r14
aa20(2): pop %r15
aa22(1): ret near (%rsp)
aa23(5): nop 0x0(%rax,%rax,1)
aa28(4): add $0x8,%rsp
aa2c(5): mov $0xa,%esi
aa31(1): pop %rbx
aa32(1): pop %rbp
aa33(2): pop %r12
aa35(2): pop %r13
aa37(2): pop %r14
aa39(2): pop %r15
aa3b(5): jmp 0xffff7f55(%rip)

"__xargmatch_internal" :
aa40(2): push %r15
aa42(2): push %r14
aa44(3): mov %rdi,%r14
aa47(2): push %r13
aa49(2): push %r12
aa4b(3): mov %rsi,%r12
aa4e(1): push %rbp
aa4f(1): push %rbx
aa50(3): mov %rcx,%rbp
aa53(3): mov %rdx,%rbx
aa56(3): mov %r8,%rcx
aa59(3): mov %rbp,%rdx
aa5c(4): sub $0x8,%rsp
aa60(3): mov %rbx,%rsi
aa63(3): mov %r12,%rdi
aa66(3): mov %r8,%r15
aa69(3): mov %r9,%r13
aa6c(5): call 0xfffffd14(%rip)
aa71(3): test %rax,%rax
aa74(2): js 0x11(%rip)
aa76(4): add $0x8,%rsp
aa7a(1): pop %rbx
aa7b(1): pop %rbp
aa7c(2): pop %r12
aa7e(2): pop %r13
aa80(2): pop %r14
aa82(2): pop %r15
aa84(1): ret near (%rsp)
aa85(3): mov %rax,%rdx
aa88(3): mov %r12,%rsi
aa8b(3): mov %r14,%rdi
aa8e(5): call 0xfffffe12(%rip)
aa93(3): mov %r15,%rdx
aa96(3): mov %rbp,%rsi
aa99(3): mov %rbx,%rdi
aa9c(5): call 0xfffffe84(%rip)
aaa1(3): call %r13
aaa4(7): mov $0xffffffff,%rax
aaab(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
aab0(2): push %r14
aab2(2): push %r13
aab4(2): push %r12
aab6(1): push %rbp
aab7(1): push %rbx
aab8(3): mov (%rsi),%r14
aabb(3): test %r14,%r14
aabe(2): jz 0x33(%rip)
aac0(3): mov %rcx,%r12
aac3(3): mov %rdi,%r13
aac6(3): mov %rdx,%rbp
aac9(4): lea 0x8(%rsi),%rbx
aacd(2): jmp 0x12(%rip)
aacf(1): nop 
aad0(3): mov (%rbx),%r14
aad3(3): add %r12,%rbp
aad6(4): add $0x8,%rbx
aada(3): test %r14,%r14
aadd(2): jz 0x14(%rip)
aadf(3): mov %r12,%rdx
aae2(3): mov %rbp,%rsi
aae5(3): mov %r13,%rdi
aae8(5): call 0xffff7fa8(%rip)
aaed(2): test %eax,%eax
aaef(2): jnz 0xffffffe1(%rip)
aaf1(1): pop %rbx
aaf2(3): mov %r14,%rax
aaf5(1): pop %rbp
aaf6(2): pop %r12
aaf8(2): pop %r13
aafa(2): pop %r14
aafc(1): ret near (%rsp)

"set_simple_backup_suffix" :
ab00(3): test %rdi,%rdi
ab03(1): push %rbx
ab04(3): mov %rdi,%rbx
ab07(2): jz 0x29(%rip)
ab09(3): cmp $0x0,(%rbx)
ab0c(2): jnz 0x14(%rip)
ab0e(7): lea 0xa67b(%rip),%rbx
ab15(7): mov %rbx,0x20fa64(%rip)
ab1c(1): pop %rbx
ab1d(1): ret near (%rsp)
ab1e(2): nop 
ab20(3): mov %rbx,%rdi
ab23(5): call 0xa6d(%rip)
ab28(3): cmp %rbx,%rax
ab2b(2): jnz 0xffffffe3(%rip)
ab2d(2): jmp 0xffffffe8(%rip)
ab2f(1): nop 
ab30(7): lea 0xa65b(%rip),%rdi
ab37(5): call 0xffff7c09(%rip)
ab3c(3): test %rax,%rax
ab3f(3): mov %rax,%rbx
ab42(2): jz 0xffffffcc(%rip)
ab44(2): jmp 0xffffffc5(%rip)

"backupfile_internal" :
ab50(2): push %r15
ab52(2): push %r14
ab54(2): push %r13
ab56(2): push %r12
ab58(1): push %rbp
ab59(1): push %rbx
ab5a(3): mov %rsi,%rbx
ab5d(7): sub $0x88,%rsp
ab64(4): mov %edi,0x64(%rsp)
ab68(3): mov %rsi,%rdi
ab6b(5): mov %rsi,0x10(%rsp)
ab70(4): mov %edx,0x20(%rsp)
ab74(4): mov %cl,0x63(%rsp)
ab78(9): mov $0x28,%rax
ab81(5): mov %rax,0x78(%rsp)
ab86(2): xor %eax,%eax
ab88(5): call 0xa08(%rip)
ab8d(3): mov %rax,%rdi
ab90(3): mov %rax,%r14
ab93(5): call 0xffff7d6d(%rip)
ab98(7): mov 0x20f9e1(%rip),%rdi
ab9f(3): sub %rbx,%r14
aba2(3): add %r14,%rax
aba5(5): mov %rax,0x18(%rsp)
abaa(3): test %rdi,%rdi
abad(6): jz 0x587(%rip)
abb3(5): call 0xffff7d4d(%rip)
abb8(5): mov 0x18(%rsp),%rsi
abbd(4): add $0x1,%rax
abc1(4): cmp $0x9,%rax
abc5(5): mov %rax,0x50(%rsp)
abca(4): lea 0x1(%rsi),%rdx
abce(3): mov %rax,%rsi
abd1(5): mov $0x9,%eax
abd6(4): cmovnb %rsi,%rax
abda(3): add %rdx,%rax
abdd(5): mov %rdx,0x38(%rsp)
abe2(3): mov %rax,%rdi
abe5(5): mov %rax,0x40(%rsp)
abea(5): call 0xffff7fd6(%rip)
abef(3): test %rax,%rax
abf2(3): mov %rax,%r15
abf5(6): jz 0x2eb(%rip)
abfb(5): lea 0x74(%rsp),%rax
ac00(8): mov $0xffffffff,0x74(%rsp)
ac08(9): mov $0x0,0x48(%rsp)
ac11(3): xor %r13d,%r13d
ac14(5): mov %rax,0x68(%rsp)
ac19(5): mov 0x38(%rsp),%rdx
ac1e(5): mov 0x10(%rsp),%rsi
ac23(3): mov %r15,%rdi
ac26(5): call 0xffff7f3a(%rip)
ac2b(5): cmp $0x1,0x20(%rsp)
ac30(6): jz 0x2e0(%rip)
ac36(4): lea 0x0(%r15,%r14,1),%rbp
ac3a(3): mov %rbp,%rdi
ac3d(5): call 0x9b3(%rip)
ac42(3): test %r13,%r13
ac45(3): mov %rax,%r12
ac48(6): jz 0x3a8(%rip)
ac4e(3): mov %r13,%rdi
ac51(5): call 0xffff7def(%rip)
ac56(5): mov 0x40(%rsp),%rax
ac5b(9): mov $0x1,0x28(%rsp)
ac64(8): mov $0x2,0x24(%rsp)
ac6c(5): mov %rax,0x30(%rsp)
ac71(5): lea 0x4(%r12),%rax
ac76(5): mov %rax,0x8(%rsp)
ac7b(5): nop 0x0(%rax,%rax,1)
ac80(3): mov %r13,%rdi
ac83(5): call 0xffff7f2d(%rip)
ac88(3): test %rax,%rax
ac8b(6): jz 0x1b5(%rip)
ac91(4): lea 0x13(%rax),%rbx
ac95(3): mov %rbx,%rdi
ac98(5): call 0xffff7c68(%rip)
ac9d(5): cmp 0x8(%rsp),%rax
aca2(2): jb 0xffffffde(%rip)
aca4(5): lea 0x2(%r12),%rbp
aca9(4): lea 0x0(%r15,%r14,1),%rdi
acad(3): mov %rbx,%rsi
acb0(3): mov %rbp,%rdx
acb3(5): call 0xffff7ddd(%rip)
acb8(2): test %eax,%eax
acba(2): jnz 0xffffffc6(%rip)
acbc(3): add %rbp,%rbx
acbf(3): movzx (%rbx),%eax
acc2(3): lea 0xffffffcf(%rax),%edx
acc5(3): cmp $0x8,%dl
acc8(2): jnbe 0xffffffb8(%rip)
acca(2): cmp $0x39,%al
accc(4): movsx 0x1(%rbx),%eax
acd0(5): mov $0x1,%ebp
acd5(4): setz %r8b
acd9(2): mov %eax,%ecx
acdb(3): sub $0x30,%eax
acde(3): cmp $0x9,%eax
ace1(2): jnbe 0x22(%rip)
ace3(5): nop 0x0(%rax,%rax,1)
ace8(3): cmp $0x39,%cl
aceb(3): setz %al
acee(4): add $0x1,%rbp
acf2(3): and %eax,%r8d
acf5(4): movsx 0x0(%rbx,%rbp,1),%eax
acf9(2): mov %eax,%ecx
acfb(3): sub $0x30,%eax
acfe(3): cmp $0x9,%eax
ad01(2): jbe 0xffffffe7(%rip)
ad03(3): cmp $0x7e,%cl
ad06(6): jnz 0xffffff7a(%rip)
ad0c(5): cmp $0x0,0x1(%rbx,%rbp,1)
ad11(6): jnz 0xffffff6f(%rip)
ad17(5): mov 0x28(%rsp),%rdx
ad1c(3): cmp %rbp,%rdx
ad1f(2): jb 0x2d(%rip)
ad21(5): mov %r8b,0x58(%rsp)
ad26(6): jnz 0xffffff5a(%rip)
ad2c(5): mov 0x18(%rsp),%rax
ad31(3): mov %rbx,%rsi
ad34(5): lea 0x2(%r15,%rax,1),%rdi
ad39(5): call 0xffff7d57(%rip)
ad3e(2): test %eax,%eax
ad40(6): movzx 0x58(%rsp),%r8d
ad46(6): jnle 0xffffff3a(%rip)
ad4c(4): movzx %r8b,%esi
ad50(4): movzx %r8b,%r9d
ad54(4): mov %esi,0x24(%rsp)
ad58(5): mov 0x18(%rsp),%rsi
ad5d(4): lea 0x0(%r9,%rbp,1),%rax
ad61(5): mov %rax,0x28(%rsp)
ad66(5): lea 0x4(%rsi,%rax,1),%rcx
ad6b(5): cmp 0x30(%rsp),%rcx
ad70(6): jbe 0x338(%rip)
ad76(5): mov $0x2,%edx
ad7b(2): xor %esi,%esi
ad7d(3): mov %rdx,%rax
ad80(3): mul %rax,%rcx,%rdx
ad83(6): jo 0x3d0(%rip)
ad89(3): test %rax,%rax
ad8c(6): js 0x2b4(%rip)
ad92(3): test %rsi,%rsi
ad95(6): jnz 0x2ab(%rip)
ad9b(4): lea 0x0(%rcx,%rcx,1),%rax
ad9f(5): mov %rax,0x30(%rsp)
ada4(5): mov 0x30(%rsp),%rsi
ada9(3): mov %r15,%rdi
adac(5): mov %r9,0x58(%rsp)
adb1(5): call 0xffff7e6f(%rip)
adb6(3): test %rax,%rax
adb9(3): mov %rax,%r8
adbc(5): mov 0x58(%rsp),%r9
adc1(6): jz 0x28f(%rip)
adc7(5): mov 0x18(%rsp),%rax
adcc(4): lea 0x2(%rbp),%rdx
add0(5): mov %r8,0x58(%rsp)
add5(3): mov %rbx,%rsi
add8(3): add %r8,%rax
addb(6): mov $0x7e2e,%r8d
ade1(5): lea 0x2(%rax,%r9,1),%rcx
ade6(4): mov %r8w,(%rax)
adea(4): mov $0x30,0x2(%rax)
adee(3): mov %rcx,%rdi
adf1(5): call 0xffff7d6f(%rip)
adf6(3): add %rax,%rbp
adf9(5): mov 0x58(%rsp),%r8
adfe(4): movzx 0xffffffff(%rbp),%edx
ae02(4): lea 0xffffffff(%rbp),%rax
ae06(3): cmp $0x39,%dl
ae09(2): jnz 0x16(%rip)
ae0b(5): nop 0x0(%rax,%rax,1)
ae10(3): mov $0x30,(%rax)
ae13(4): sub $0x1,%rax
ae17(3): movzx (%rax),%edx
ae1a(3): cmp $0x39,%dl
ae1d(2): jz 0xfffffff3(%rip)
ae1f(3): add $0x1,%edx
ae22(3): mov %r13,%rdi
ae25(3): mov %r8,%r15
ae28(2): mov %dl,(%rax)
ae2a(5): call 0xffff7d86(%rip)
ae2f(3): test %rax,%rax
ae32(6): jnz 0xfffffe5f(%rip)
ae38(8): nop 0x0(%rax,%rax,1)
ae40(4): mov 0x24(%rsp),%eax
ae44(3): cmp $0x2,%eax
ae47(6): jz 0xe9(%rip)
ae4d(3): cmp $0x3,%eax
ae50(6): jz 0x200(%rip)
ae56(3): cmp $0x1,%eax
ae59(6): jz 0x107(%rip)
ae5f(5): cmp $0x0,0x63(%rsp)
ae64(6): jz 0x2ba(%rip)
ae6a(4): mov 0x74(%rsp),%edx
ae6e(4): lea 0x0(%r15,%r14,1),%rcx
ae72(2): test %edx,%edx
ae74(2): jns 0x15(%rip)
ae76(8): mov $0xffffff9c,0x74(%rsp)
ae7e(3): mov %r15,%rcx
ae81(5): mov $0xffffff9c,%edx
ae86(3): xor %r14d,%r14d
ae89(3): xor %r8d,%r8d
ae8c(5): cmp $0x1,0x20(%rsp)
ae91(5): mov 0x10(%rsp),%rsi
ae96(5): mov $0xffffff9c,%edi
ae9b(4): setnz %r8b
ae9f(5): call 0x3f01(%rip)
aea4(2): test %eax,%eax
aea6(6): jz 0x278(%rip)
aeac(5): call 0xffff78c4(%rip)
aeb1(2): mov (%rax),%ebp
aeb3(3): cmp $0x11,%ebp
aeb6(6): jz 0xfffffd63(%rip)
aebc(3): test %r13,%r13
aebf(3): mov %rax,%rbx
aec2(2): jz 0xa(%rip)
aec4(3): mov %r13,%rdi
aec7(5): call 0xffff7b99(%rip)
aecc(3): mov %r15,%rdi
aecf(3): xor %r15d,%r15d
aed2(5): call 0xffff7f3e(%rip)
aed7(2): mov %ebp,(%rbx)
aed9(7): nop 0x0(%rax)
aee0(5): mov 0x78(%rsp),%rsi
aee5(9): xor $0x28,%rsi
aeee(3): mov %r15,%rax
aef1(6): jnz 0x26c(%rip)
aef7(7): add $0x88,%rsp
aefe(1): pop %rbx
aeff(1): pop %rbp
af00(2): pop %r12
af02(2): pop %r13
af04(2): pop %r14
af06(2): pop %r15
af08(1): ret near (%rsp)
af09(7): nop 0x0(%rax)
af10(5): mov 0x18(%rsp),%rax
af15(5): mov 0x50(%rsp),%rdx
af1a(7): mov 0x20f65f(%rip),%rsi
af21(4): lea 0x0(%r15,%rax,1),%rdi
af25(5): call 0xffff7c3b(%rip)
af2a(5): jmp 0xffffff35(%rip)
af2f(1): nop 
af30(5): cmp $0x2,0x20(%rsp)
af35(2): jnz 0x2b(%rip)
af37(5): mov 0x18(%rsp),%rax
af3c(5): mov 0x50(%rsp),%rdx
af41(7): mov 0x20f638(%rip),%rsi
af48(4): lea 0x0(%r15,%rax,1),%rdi
af4c(5): call 0xffff7c14(%rip)
af51(8): mov $0x1,0x20(%rsp)
af59(7): nop 0x0(%rax)
af60(3): mov %r15,%rdi
af63(5): call 0x62d(%rip)
af68(3): mov %rax,%rdi
af6b(3): mov %rax,%rbx
af6e(5): call 0x682(%rip)
af73(4): cmp $0xe,%rax
af77(3): mov %rax,%rbp
af7a(6): jbe 0xfffffee5(%rip)
af80(6): cmp $0x0,0x48(%rsp)
af86(6): jnz 0xea(%rip)
af8c(4): mov 0x74(%rsp),%edi
af90(4): mov %edi,0x8(%rsp)
af94(5): call 0xffff77dc(%rip)
af99(4): mov 0x8(%rsp),%edi
af9d(3): mov %rax,%r12
afa0(2): test %edi,%edi
afa2(6): js 0x140(%rip)
afa8(6): mov $0x0,(%rax)
afae(5): mov $0x3,%esi
afb3(5): call 0xffff7b5d(%rip)
afb8(4): mov (%r12),%ecx
afbc(2): xor %edx,%edx
afbe(2): test %ecx,%ecx
afc0(3): setz %dl
afc3(3): sub %rdx,%rax
afc6(3): test %rax,%rax
afc9(5): mov %rax,0x48(%rsp)
afce(6): jns 0xa2(%rip)
afd4(4): cmp $0xffffffff,%rax
afd8(6): jnz 0x16d(%rip)
afde(9): mov $0xffffffff,0x48(%rsp)
afe7(5): jmp 0xfffffe78(%rip)
afec(4): nop 0x0(%rax)
aff0(5): mov 0x68(%rsp),%rcx
aff5(4): mov 0x64(%rsp),%edi
aff9(6): mov $0x2e,%r9d
afff(2): xor %edx,%edx
b001(4): movzx 0x0(%rbp),%ebx
b005(3): mov %r15,%rsi
b008(5): mov %r9w,0x0(%rbp)
b00d(5): call 0x1f03(%rip)
b012(3): test %rax,%rax
b015(3): mov %rax,%r13
b018(5): lea 0x0(%rbp,%r12,1),%rdx
b01d(6): jz 0x93(%rip)
b023(4): mov %bx,0x0(%rbp)
b027(6): mov $0x7e317e2e,(%rdx)
b02d(4): mov $0x0,0x4(%rdx)
b031(5): jmp 0xfffffc25(%rip)
b036(a): nop 0x0(%rax,%rax,1)
b040(5): mov %rcx,0x30(%rsp)
b045(5): jmp 0xfffffd5f(%rip)
b04a(6): nop 0x0(%rax,%rax,1)
b050(3): mov %r15,%rdi
b053(3): xor %r15d,%r15d
b056(5): call 0xffff7dba(%rip)
b05b(5): call 0xffff7715(%rip)
b060(6): mov $0xc,(%rax)
b066(5): jmp 0xfffffe7a(%rip)
b06b(5): nop 0x0(%rax,%rax,1)
b070(5): cmp 0x48(%rsp),%rbp
b075(6): jbe 0xfffffdea(%rip)
b07b(5): mov 0x18(%rsp),%rax
b080(5): mov 0x48(%rsp),%rsi
b085(3): add %r15,%rax
b088(4): lea 0xffffffff(%rsi),%rdx
b08c(3): sub %rbx,%rax
b08f(3): cmp %rsi,%rax
b092(4): cmovnb %rdx,%rax
b096(4): mov $0x7e,0x0(%rbx,%rax,1)
b09a(5): mov $0x0,0x1(%rbx,%rax,1)
b09f(5): jmp 0xfffffdc0(%rip)
b0a4(4): nop 0x0(%rax)
b0a8(3): mov %r15,%r8
b0ab(5): jmp 0xfffffd1c(%rip)
b0b0(5): mov %rdx,0x8(%rsp)
b0b5(5): call 0xffff76bb(%rip)
b0ba(3): cmp $0xc,(%rax)
b0bd(5): mov 0x8(%rsp),%rdx
b0c2(4): mov %bx,0x0(%rbp)
b0c6(6): mov $0x7e317e2e,(%rdx)
b0cc(4): mov $0x0,0x4(%rdx)
b0d0(3): setz %al
b0d3(3): movzx %al,%eax
b0d6(3): add $0x2,%eax
b0d9(4): mov %eax,0x24(%rsp)
b0dd(5): jmp 0xfffffd63(%rip)
b0e2(3): movzx (%rbx),%edx
b0e5(5): mov $0x2e,%esi
b0ea(3): mov %r15,%rdi
b0ed(3): mov %si,(%rbx)
b0f0(6): mov $0x0,(%rax)
b0f6(5): mov $0x3,%esi
b0fb(4): mov %edx,0x8(%rsp)
b0ff(5): call 0xffff7781(%rip)
b104(4): mov (%r12),%edi
b108(4): mov 0x8(%rsp),%edx
b10c(2): xor %ecx,%ecx
b10e(2): test %edi,%edi
b110(3): mov %dx,(%rbx)
b113(3): setz %cl
b116(3): sub %rcx,%rax
b119(5): jmp 0xfffffead(%rip)
b11e(3): test %r13,%r13
b121(6): jz 0xfffffdbf(%rip)
b127(3): mov %r13,%rdi
b12a(5): call 0xffff7936(%rip)
b12f(5): jmp 0xfffffdb1(%rip)
b134(5): call 0xfffff9cc(%rip)
b139(7): mov 0x20f440(%rip),%rdi
b140(5): jmp 0xfffffa73(%rip)
b145(9): mov $0xe,0x48(%rsp)
b14e(5): jmp 0xffffff2d(%rip)
b153(5): mov $0x1,%esi
b158(5): jmp 0xfffffc31(%rip)
b15d(5): call 0xffff77d3(%rip)

"backup_file_rename" :
b170(5): mov $0x1,%ecx
b175(5): jmp 0xfffff9db(%rip)

"get_version.part.0" :
b180(4): sub $0x8,%rsp
b184(7): mov 0x20ee9d(%rip),%r9
b18b(7): lea 0x20e7ee(%rip),%rdx
b192(7): lea 0xa047(%rip),%rcx
b199(6): mov $0x4,%r8d
b19f(5): call 0xfffff8a1(%rip)
b1a4(7): lea 0xa035(%rip),%rdx
b1ab(3): mov 0x0(%rdx,%rax,4),%eax
b1ae(4): add $0x8,%rsp
b1b2(1): ret near (%rsp)

"find_backup_file_name" :
b1c0(4): sub $0x8,%rsp
b1c4(2): xor %ecx,%ecx
b1c6(5): call 0xfffff98a(%rip)
b1cb(3): test %rax,%rax
b1ce(2): jz 0x7(%rip)
b1d0(4): add $0x8,%rsp
b1d4(1): ret near (%rsp)
b1d5(5): call 0x609b(%rip)

"get_version" :
b1e0(3): test %rsi,%rsi
b1e3(2): jz 0xd(%rip)
b1e5(3): cmp $0x0,(%rsi)
b1e8(2): jz 0x8(%rip)
b1ea(2): jmp 0xffffff96(%rip)
b1ec(4): nop 0x0(%rax)
b1f0(5): mov $0x2,%eax
b1f5(1): ret near (%rsp)

"xget_version" :
b200(3): test %rsi,%rsi
b203(2): jz 0x7(%rip)
b205(3): cmp $0x0,(%rsi)
b208(2): jnz 0x2a(%rip)
b20a(7): lea 0x9f97(%rip),%rdi
b211(4): sub $0x8,%rsp
b215(5): call 0xffff752b(%rip)
b21a(3): test %rax,%rax
b21d(2): jz 0x23(%rip)
b21f(3): cmp $0x0,(%rax)
b222(2): jz 0x1e(%rip)
b224(7): lea 0x9f7c(%rip),%rdi
b22b(3): mov %rax,%rsi
b22e(4): add $0x8,%rsp
b232(5): jmp 0xffffff4e(%rip)
b237(9): nop 0x0(%rax,%rax,1)
b240(5): mov $0x2,%eax
b245(4): add $0x8,%rsp
b249(1): ret near (%rsp)

"buffer_lcm" :
b250(3): test %rdi,%rdi
b253(3): mov %rdx,%rcx
b256(2): jnz 0x22(%rip)
b258(3): test %rsi,%rsi
b25b(5): mov $0x2000,%edi
b260(4): cmovne %rsi,%rdi
b264(3): cmp %rcx,%rdi
b267(4): cmovbe %rdi,%rcx
b26b(3): mov %rcx,%r8
b26e(3): mov %r8,%rax
b271(1): ret near (%rsp)
b272(6): nop 0x0(%rax,%rax,1)
b278(3): test %rsi,%rsi
b27b(2): jz 0xffffffe9(%rip)
b27d(3): mov %rsi,%r8
b280(3): mov %rdi,%rax
b283(2): xor %edx,%edx
b285(3): div %r8,%rax
b288(3): test %rdx,%rdx
b28b(2): jnz 0x2d(%rip)
b28d(2): xor %edx,%edx
b28f(3): mov %rdi,%rax
b292(3): div %r8,%rax
b295(3): mov %rsi,%r8
b298(4): imul %rax,%r8
b29c(3): mov %rax,%r9
b29f(3): cmp %rcx,%r8
b2a2(2): jnbe 0xffffffc2(%rip)
b2a4(2): xor %edx,%edx
b2a6(3): mov %r8,%rax
b2a9(3): div %rsi,%rax
b2ac(3): cmp %r9,%rax
b2af(2): jnz 0xffffffb5(%rip)
b2b1(2): jmp 0xffffffbd(%rip)
b2b3(5): nop 0x0(%rax,%rax,1)
b2b8(3): mov %r8,%rax
b2bb(3): mov %rdx,%r8
b2be(2): jmp 0xffffffc5(%rip)

"close_stdin_set_file_name" :
b2c0(7): mov %rdi,0x20f2c1(%rip)
b2c7(1): ret near (%rsp)

"close_stdin" :
b2d0(2): push %r12
b2d2(1): push %rbp
b2d3(1): push %rbx
b2d4(7): mov 0x20edd5(%rip),%rbx
b2db(3): mov %rbx,%rdi
b2de(5): call 0x60b2(%rip)
b2e3(3): test %rax,%rax
b2e6(6): jnz 0xa2(%rip)
b2ec(3): mov %rbx,%rdi
b2ef(5): call 0x6231(%rip)
b2f4(2): test %eax,%eax
b2f6(2): jnz 0x32(%rip)
b2f8(1): pop %rbx
b2f9(1): pop %rbp
b2fa(2): pop %r12
b2fc(5): jmp 0x104(%rip)
b301(7): nop 0x0(%rax)
b308(5): call 0x6048(%rip)
b30d(2): test %eax,%eax
b30f(7): mov 0x20ed9a(%rip),%rdi
b316(6): jz 0x90(%rip)
b31c(5): call 0x6204(%rip)
b321(7): nop 0x0(%rax)
b328(7): lea 0x9ed1(%rip),%rsi
b32f(2): xor %edi,%edi
b331(5): mov $0x5,%edx
b336(5): call 0xffff75aa(%rip)
b33b(7): mov 0x20f246(%rip),%rbx
b342(3): mov %rax,%r12
b345(5): call 0xffff742b(%rip)
b34a(3): mov %rax,%rbp
b34d(3): test %rbx,%rbx
b350(2): jz 0x70(%rip)
b352(3): mov %rbx,%rdi
b355(5): call 0x382b(%rip)
b35a(3): mov 0x0(%rbp),%esi
b35d(7): lea 0x9eaf(%rip),%rdx
b364(3): mov %rax,%rcx
b367(3): mov %r12,%r8
b36a(2): xor %edi,%edi
b36c(2): xor %eax,%eax
b36e(5): call 0xffff7942(%rip)
b373(5): call 0x8d(%rip)
b378(6): mov 0x20ecb2(%rip),%edi
b37e(5): call 0xffff7422(%rip)
b383(5): nop 0x0(%rax,%rax,1)
b388(2): xor %esi,%esi
b38a(3): mov %rbx,%rdi
b38d(5): mov $0x1,%edx
b392(5): call 0x602e(%rip)
b397(2): test %eax,%eax
b399(7): mov 0x20ed10(%rip),%rdi
b3a0(6): jz 0xffffff68(%rip)
b3a6(5): call 0x617a(%rip)
b3ab(2): test %eax,%eax
b3ad(6): jnz 0xffffff7b(%rip)
b3b3(1): pop %rbx
b3b4(1): pop %rbp
b3b5(2): pop %r12
b3b7(5): jmp 0x49(%rip)
b3bc(4): nop 0x0(%rax)
b3c0(2): mov (%rax),%esi
b3c2(7): lea 0x9dc4(%rip),%rdx
b3c9(3): mov %r12,%rcx
b3cc(2): xor %edi,%edi
b3ce(2): xor %eax,%eax
b3d0(5): call 0xffff78e0(%rip)
b3d5(2): jmp 0xffffff9e(%rip)

"close_stdout_set_file_name" :
b3e0(7): mov %rdi,0x20f1b1(%rip)
b3e7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
b3f0(7): mov %dil,0x20f199(%rip)
b3f7(1): ret near (%rsp)

"close_stdout" :
b400(1): push %rbp
b401(1): push %rbx
b402(4): sub $0x8,%rsp
b406(7): mov 0x20ec9b(%rip),%rdi
b40d(5): call 0x6113(%rip)
b412(2): test %eax,%eax
b414(2): jz 0x18(%rip)
b416(5): call 0xffff735a(%rip)
b41b(7): cmp $0x0,0x20f16e(%rip)
b422(3): mov %rax,%rbx
b425(2): jz 0x1e(%rip)
b427(3): cmp $0x20,(%rax)
b42a(2): jnz 0x19(%rip)
b42c(7): mov 0x20ecad(%rip),%rdi
b433(5): call 0x60ed(%rip)
b438(2): test %eax,%eax
b43a(2): jnz 0x48(%rip)
b43c(4): add $0x8,%rsp
b440(1): pop %rbx
b441(1): pop %rbp
b442(1): ret near (%rsp)
b443(7): lea 0x9dd0(%rip),%rsi
b44a(2): xor %edi,%edi
b44c(5): mov $0x5,%edx
b451(5): call 0xffff748f(%rip)
b456(7): mov 0x20f13b(%rip),%rdi
b45d(3): mov %rax,%rbp
b460(3): test %rdi,%rdi
b463(2): jz 0x2a(%rip)
b465(5): call 0x371b(%rip)
b46a(2): mov (%rbx),%esi
b46c(7): lea 0x9da0(%rip),%rdx
b473(3): mov %rax,%rcx
b476(3): mov %rbp,%r8
b479(2): xor %edi,%edi
b47b(2): xor %eax,%eax
b47d(5): call 0xffff7833(%rip)
b482(6): mov 0x20eba8(%rip),%edi
b488(5): call 0xffff7318(%rip)
b48d(2): mov (%rbx),%esi
b48f(7): lea 0x9cf7(%rip),%rdx
b496(3): mov %rax,%rcx
b499(2): xor %edi,%edi
b49b(2): xor %eax,%eax
b49d(5): call 0xffff7813(%rip)
b4a2(2): jmp 0xffffffe0(%rip)

"dir_name" :
b4b0(4): sub $0x8,%rsp
b4b4(5): call 0x7c(%rip)
b4b9(3): test %rax,%rax
b4bc(2): jz 0x7(%rip)
b4be(4): add $0x8,%rsp
b4c2(1): ret near (%rsp)
b4c3(5): call 0x5dad(%rip)

"dir_len" :
b4d0(1): push %rbp
b4d1(1): push %rbx
b4d2(2): xor %ebp,%ebp
b4d4(3): mov %rdi,%rbx
b4d7(4): sub $0x8,%rsp
b4db(3): cmp $0x2f,(%rdi)
b4de(4): setz %bpl
b4e2(5): call 0xae(%rip)
b4e7(3): mov %rax,%rcx
b4ea(3): sub %rbx,%rcx
b4ed(3): cmp %rbp,%rcx
b4f0(2): jbe 0x30(%rip)
b4f2(4): cmp $0x2f,0xffffffff(%rax)
b4f6(4): lea 0xffffffff(%rcx),%rdx
b4fa(2): jz 0x14(%rip)
b4fc(2): jmp 0x24(%rip)
b4fe(2): nop 
b500(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
b505(4): lea 0xffffffff(%rdx),%rax
b509(2): jnz 0xa(%rip)
b50b(3): mov %rax,%rdx
b50e(3): cmp %rdx,%rbp
b511(2): jnz 0xffffffef(%rip)
b513(4): add $0x8,%rsp
b517(3): mov %rdx,%rax
b51a(1): pop %rbx
b51b(1): pop %rbp
b51c(1): ret near (%rsp)
b51d(3): nop (%rax)
b520(4): add $0x8,%rsp
b524(3): mov %rcx,%rdx
b527(3): mov %rdx,%rax
b52a(1): pop %rbx
b52b(1): pop %rbp
b52c(1): ret near (%rsp)

"mdir_name" :
b530(1): push %rbp
b531(1): push %rbx
b532(3): mov %rdi,%rbp
b535(4): sub $0x8,%rsp
b539(5): call 0xffffff97(%rip)
b53e(3): test %rax,%rax
b541(3): mov %rax,%rbx
b544(3): setz %al
b547(3): movzx %al,%eax
b54a(5): lea 0x1(%rbx,%rax,1),%rdi
b54f(5): call 0xffff7671(%rip)
b554(3): test %rax,%rax
b557(3): mov %rax,%rcx
b55a(2): jz 0x1c(%rip)
b55c(3): mov %rbx,%rdx
b55f(3): mov %rbp,%rsi
b562(3): mov %rax,%rdi
b565(5): call 0xffff75fb(%rip)
b56a(3): test %rbx,%rbx
b56d(3): mov %rax,%rcx
b570(2): jz 0x10(%rip)
b572(4): mov $0x0,0x0(%rcx,%rbx,1)
b576(4): add $0x8,%rsp
b57a(3): mov %rcx,%rax
b57d(1): pop %rbx
b57e(1): pop %rbp
b57f(1): ret near (%rsp)
b580(3): mov $0x2e,(%rax)
b583(5): mov $0x1,%ebx
b588(2): jmp 0xffffffea(%rip)

"last_component" :
b590(3): movzx (%rdi),%edx
b593(3): mov %rdi,%rax
b596(3): cmp $0x2f,%dl
b599(2): jnz 0x13(%rip)
b59b(5): nop 0x0(%rax,%rax,1)
b5a0(4): add $0x1,%rax
b5a4(3): movzx (%rax),%edx
b5a7(3): cmp $0x2f,%dl
b5aa(2): jz 0xfffffff6(%rip)
b5ac(2): test %dl,%dl
b5ae(2): jz 0x3c(%rip)
b5b0(3): mov %rax,%rcx
b5b3(2): xor %esi,%esi
b5b5(2): jmp 0x20(%rip)
b5b7(9): nop 0x0(%rax,%rax,1)
b5c0(3): test %sil,%sil
b5c3(2): jz 0x7(%rip)
b5c5(3): mov %rcx,%rax
b5c8(2): xor %esi,%esi
b5ca(4): add $0x1,%rcx
b5ce(3): movzx (%rcx),%edx
b5d1(2): test %dl,%dl
b5d3(2): jz 0x17(%rip)
b5d5(3): cmp $0x2f,%dl
b5d8(2): jnz 0xffffffe8(%rip)
b5da(4): add $0x1,%rcx
b5de(3): movzx (%rcx),%edx
b5e1(5): mov $0x1,%esi
b5e6(2): test %dl,%dl
b5e8(2): jnz 0xffffffed(%rip)
b5ea(2): REP ret near (%rsp)

"base_len" :
b5f0(1): push %rbx
b5f1(3): mov %rdi,%rbx
b5f4(5): call 0xffff730c(%rip)
b5f9(4): cmp $0x1,%rax
b5fd(2): jbe 0xd(%rip)
b5ff(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
b604(4): lea 0xffffffff(%rax),%rdx
b608(2): jz 0x10(%rip)
b60a(1): pop %rbx
b60b(1): ret near (%rsp)
b60c(4): nop 0x0(%rax)
b610(3): mov %rax,%rdx
b613(5): nop 0x0(%rax,%rax,1)
b618(4): cmp $0x1,%rdx
b61c(2): jz 0x14(%rip)
b61e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
b623(4): lea 0xffffffff(%rdx),%rax
b627(2): jz 0xffffffe9(%rip)
b629(3): mov %rdx,%rax
b62c(1): pop %rbx
b62d(1): ret near (%rsp)
b62e(2): nop 
b630(5): mov $0x1,%eax
b635(1): pop %rbx
b636(1): ret near (%rsp)

"strip_trailing_slashes" :
b640(1): push %rbp
b641(1): push %rbx
b642(3): mov %rdi,%rbp
b645(4): sub $0x8,%rsp
b649(5): call 0xffffff47(%rip)
b64e(3): cmp $0x0,(%rax)
b651(3): mov %rax,%rbx
b654(4): cmove %rbp,%rbx
b658(3): mov %rbx,%rdi
b65b(5): call 0xffffff95(%rip)
b660(3): add %rax,%rbx
b663(3): cmp $0x0,(%rbx)
b666(3): mov $0x0,(%rbx)
b669(3): setnz %al
b66c(4): add $0x8,%rsp
b670(1): pop %rbx
b671(1): pop %rbp
b672(1): ret near (%rsp)

"fadvise" :
b690(3): test %rdi,%rdi
b693(2): jz 0x1d(%rip)
b695(1): push %rbx
b696(2): mov %esi,%ebx
b698(5): call 0xffff74e8(%rip)
b69d(2): mov %ebx,%ecx
b69f(2): xor %edx,%edx
b6a1(2): xor %esi,%esi
b6a3(1): pop %rbx
b6a4(2): mov %eax,%edi
b6a6(5): jmp 0xffff73ca(%rip)
b6ab(5): nop 0x0(%rax,%rax,1)
b6b0(2): REP ret near (%rsp)

"open_safer" :
b6c0(4): sub $0x58,%rsp
b6c4(5): mov %rdx,0x30(%rsp)
b6c9(2): xor %edx,%edx
b6cb(9): mov $0x28,%rax
b6d4(5): mov %rax,0x18(%rsp)
b6d9(2): xor %eax,%eax
b6db(4): test $0x40,%sil
b6df(2): jnz 0x29(%rip)
b6e1(2): xor %eax,%eax
b6e3(5): call 0xffff75ed(%rip)
b6e8(2): mov %eax,%edi
b6ea(5): call 0x4266(%rip)
b6ef(5): mov 0x18(%rsp),%rcx
b6f4(9): xor $0x28,%rcx
b6fd(2): jnz 0x2c(%rip)
b6ff(4): add $0x58,%rsp
b703(1): ret near (%rsp)
b704(4): nop 0x0(%rax)
b708(5): lea 0x60(%rsp),%rax
b70d(7): mov $0x10,(%rsp)
b714(4): mov 0x30(%rsp),%edx
b718(5): mov %rax,0x8(%rsp)
b71d(5): lea 0x20(%rsp),%rax
b722(5): mov %rax,0x10(%rsp)
b727(2): jmp 0xffffffba(%rip)
b729(5): call 0xffff7207(%rip)

"record_file" :
b730(3): test %rdi,%rdi
b733(2): jz 0x7d(%rip)
b735(2): push %r13
b737(2): push %r12
b739(3): mov %rdi,%r13
b73c(1): push %rbp
b73d(1): push %rbx
b73e(3): mov %rsi,%r12
b741(5): mov $0x18,%edi
b746(3): mov %rdx,%rbp
b749(4): sub $0x8,%rsp
b74d(5): call 0x58d3(%rip)
b752(3): mov %r12,%rdi
b755(3): mov %rax,%rbx
b758(5): call 0x5af8(%rip)
b75d(3): mov %rax,(%rbx)
b760(4): mov 0x8(%rbp),%rax
b764(3): mov %rbx,%rsi
b767(3): mov %r13,%rdi
b76a(4): mov %rax,0x8(%rbx)
b76e(4): mov 0x0(%rbp),%rax
b772(4): mov %rax,0x10(%rbx)
b776(5): call 0x145a(%rip)
b77b(3): test %rax,%rax
b77e(2): jz 0x34(%rip)
b780(3): cmp %rax,%rbx
b783(2): jz 0x1d(%rip)
b785(4): add $0x8,%rsp
b789(3): mov %rbx,%rdi
b78c(1): pop %rbx
b78d(1): pop %rbp
b78e(2): pop %r12
b790(2): pop %r13
b792(5): jmp 0x175e(%rip)
b797(9): nop 0x0(%rax,%rax,1)
b7a0(4): add $0x8,%rsp
b7a4(1): pop %rbx
b7a5(1): pop %rbp
b7a6(2): pop %r12
b7a8(2): pop %r13
b7aa(1): ret near (%rsp)
b7ab(5): nop 0x0(%rax,%rax,1)
b7b0(2): REP ret near (%rsp)
b7b2(5): call 0x5abe(%rip)

"seen_file" :
b7c0(4): sub $0x28,%rsp
b7c4(9): mov $0x28,%rax
b7cd(5): mov %rax,0x18(%rsp)
b7d2(2): xor %eax,%eax
b7d4(3): test %rdi,%rdi
b7d7(2): jz 0x25(%rip)
b7d9(4): mov 0x8(%rdx),%rax
b7dd(4): mov %rsi,(%rsp)
b7e1(3): mov %rsp,%rsi
b7e4(5): mov %rax,0x8(%rsp)
b7e9(3): mov (%rdx),%rax
b7ec(5): mov %rax,0x10(%rsp)
b7f1(5): call 0x96f(%rip)
b7f6(3): test %rax,%rax
b7f9(3): setnz %al
b7fc(5): mov 0x18(%rsp),%rcx
b801(9): xor $0x28,%rcx
b80a(2): jnz 0x7(%rip)
b80c(4): add $0x28,%rsp
b810(1): ret near (%rsp)
b811(5): call 0xffff711f(%rip)

"strmode" :
b820(2): mov %edi,%edx
b822(5): mov $0x2d,%eax
b827(6): and $0xf000,%edx
b82d(6): cmp $0x8000,%edx
b833(2): jz 0x5d(%rip)
b835(6): cmp $0x4000,%edx
b83b(5): mov $0x64,%eax
b840(2): jz 0x50(%rip)
b842(6): cmp $0x6000,%edx
b848(5): mov $0x62,%eax
b84d(2): jz 0x43(%rip)
b84f(6): cmp $0x2000,%edx
b855(5): mov $0x63,%eax
b85a(2): jz 0x36(%rip)
b85c(6): cmp $0xa000,%edx
b862(5): mov $0x6c,%eax
b867(2): jz 0x29(%rip)
b869(6): cmp $0x1000,%edx
b86f(5): mov $0x70,%eax
b874(2): jz 0x1c(%rip)
b876(6): cmp $0xc000,%edx
b87c(5): mov $0x73,%eax
b881(5): mov $0x3f,%edx
b886(3): cmovne %edx,%eax
b889(7): nop 0x0(%rax)
b890(2): mov %al,(%rsi)
b892(2): mov %edi,%eax
b894(5): and $0x100,%eax
b899(3): cmp $0x1,%eax
b89c(2): sbb %eax,%eax
b89e(3): and $0xbb,%eax
b8a1(3): add $0x72,%eax
b8a4(3): mov %al,0x1(%rsi)
b8a7(2): mov %edi,%eax
b8a9(5): and $0x80,%eax
b8ae(3): cmp $0x1,%eax
b8b1(2): sbb %eax,%eax
b8b3(3): and $0xb6,%eax
b8b6(3): add $0x77,%eax
b8b9(3): mov %al,0x2(%rsi)
b8bc(2): mov %edi,%eax
b8be(3): and $0x40,%eax
b8c1(3): cmp $0x1,%eax
b8c4(2): sbb %eax,%eax
b8c6(6): test $0x800,%edi
b8cc(6): jz 0xa4(%rip)
b8d2(3): and $0xe0,%eax
b8d5(3): add $0x73,%eax
b8d8(3): mov %al,0x3(%rsi)
b8db(2): mov %edi,%eax
b8dd(3): and $0x20,%eax
b8e0(3): cmp $0x1,%eax
b8e3(2): sbb %eax,%eax
b8e5(3): and $0xbb,%eax
b8e8(3): add $0x72,%eax
b8eb(3): mov %al,0x4(%rsi)
b8ee(2): mov %edi,%eax
b8f0(3): and $0x10,%eax
b8f3(3): cmp $0x1,%eax
b8f6(2): sbb %eax,%eax
b8f8(3): and $0xb6,%eax
b8fb(3): add $0x77,%eax
b8fe(3): mov %al,0x5(%rsi)
b901(2): mov %edi,%eax
b903(3): and $0x8,%eax
b906(3): cmp $0x1,%eax
b909(2): sbb %eax,%eax
b90b(6): test $0x400,%edi
b911(6): jz 0x87(%rip)
b917(3): and $0xe0,%eax
b91a(3): add $0x73,%eax
b91d(3): mov %al,0x6(%rsi)
b920(2): mov %edi,%eax
b922(3): and $0x4,%eax
b925(3): cmp $0x1,%eax
b928(2): sbb %eax,%eax
b92a(3): and $0xbb,%eax
b92d(3): add $0x72,%eax
b930(3): mov %al,0x7(%rsi)
b933(2): mov %edi,%eax
b935(3): and $0x2,%eax
b938(3): cmp $0x1,%eax
b93b(2): sbb %eax,%eax
b93d(3): and $0xb6,%eax
b940(3): add $0x77,%eax
b943(3): mov %al,0x8(%rsi)
b946(2): mov %edi,%eax
b948(3): and $0x1,%eax
b94b(3): cmp $0x1,%eax
b94e(2): sbb %eax,%eax
b950(6): and $0x200,%edi
b956(2): jz 0x2a(%rip)
b958(3): and $0xe0,%eax
b95b(3): add $0x74,%eax
b95e(3): mov %al,0x9(%rsi)
b961(5): mov $0x20,%eax
b966(4): mov %ax,0xa(%rsi)
b96a(1): ret near (%rsp)
b96b(5): nop 0x0(%rax,%rax,1)
b970(3): and $0xb5,%eax
b973(3): add $0x78,%eax
b976(5): jmp 0xffffff62(%rip)
b97b(5): nop 0x0(%rax,%rax,1)
b980(3): and $0xb5,%eax
b983(3): add $0x78,%eax
b986(3): mov %al,0x9(%rsi)
b989(5): mov $0x20,%eax
b98e(4): mov %ax,0xa(%rsi)
b992(1): ret near (%rsp)
b993(5): nop 0x0(%rax,%rax,1)
b998(3): and $0xb5,%eax
b99b(3): add $0x78,%eax
b99e(5): jmp 0xffffff7f(%rip)

"filemodestring" :
b9b0(3): mov 0x18(%rdi),%edi
b9b3(5): jmp 0xfffffe6d(%rip)

"file_name_concat" :
b9c0(4): sub $0x8,%rsp
b9c4(5): call 0x1c(%rip)
b9c9(3): test %rax,%rax
b9cc(2): jz 0x7(%rip)
b9ce(4): add $0x8,%rsp
b9d2(1): ret near (%rsp)
b9d3(5): call 0x589d(%rip)

"mfile_name_concat" :
b9e0(2): push %r15
b9e2(2): push %r14
b9e4(3): mov %rdx,%r15
b9e7(2): push %r13
b9e9(2): push %r12
b9eb(3): mov %rdi,%r12
b9ee(1): push %rbp
b9ef(1): push %rbx
b9f0(3): mov %rsi,%rbp
b9f3(4): sub $0x18,%rsp
b9f7(5): call 0xfffffb99(%rip)
b9fc(3): mov %rax,%rbx
b9ff(3): mov %rax,%rdi
ba02(5): call 0xfffffbee(%rip)
ba07(3): sub %r12,%rbx
ba0a(3): mov %rax,%r13
ba0d(3): mov %rbp,%rdi
ba10(3): add %rax,%rbx
ba13(5): call 0xffff6eed(%rip)
ba18(3): test %r13,%r13
ba1b(3): mov %rax,%r14
ba1e(2): jz 0x32(%rip)
ba20(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
ba26(6): jz 0xaa(%rip)
ba2c(2): xor %eax,%eax
ba2e(4): cmp $0x2f,0x0(%rbp)
ba32(5): mov $0x0,%edx
ba37(3): setnz %al
ba3a(4): mov %rax,(%rsp)
ba3e(5): mov $0x2f,%eax
ba43(3): cmove %edx,%eax
ba46(4): mov %al,0xf(%rsp)
ba4a(2): jmp 0x24(%rip)
ba4c(4): nop 0x0(%rax)
ba50(2): xor %eax,%eax
ba52(4): cmp $0x2f,0x0(%rbp)
ba56(5): mov $0x0,%edx
ba5b(3): setz %al
ba5e(4): mov %rax,(%rsp)
ba62(5): mov $0x2e,%eax
ba67(3): cmovne %edx,%eax
ba6a(4): mov %al,0xf(%rsp)
ba6e(5): lea 0x1(%rbx,%r14,1),%rdi
ba73(4): add (%rsp),%rdi
ba77(5): call 0xffff7149(%rip)
ba7c(3): test %rax,%rax
ba7f(3): mov %rax,%r13
ba82(2): jz 0x34(%rip)
ba84(3): mov %rax,%rdi
ba87(3): mov %rbx,%rdx
ba8a(3): mov %r12,%rsi
ba8d(5): call 0xffff7213(%rip)
ba92(5): movzx 0xf(%rsp),%ecx
ba97(4): mov (%rsp),%rdi
ba9b(3): add %rax,%rdi
ba9e(3): test %r15,%r15
baa1(2): mov %cl,(%rax)
baa3(2): jz 0x5(%rip)
baa5(3): mov %rdi,(%r15)
baa8(3): mov %r14,%rdx
baab(3): mov %rbp,%rsi
baae(5): call 0xffff71f2(%rip)
bab3(3): mov $0x0,(%rax)
bab6(4): add $0x18,%rsp
baba(3): mov %r13,%rax
babd(1): pop %rbx
babe(1): pop %rbp
babf(2): pop %r12
bac1(2): pop %r13
bac3(2): pop %r14
bac5(2): pop %r15
bac7(1): ret near (%rsp)
bac8(8): nop 0x0(%rax,%rax,1)
bad0(8): mov $0x0,(%rsp)
bad8(5): mov $0x0,0xf(%rsp)
badd(2): jmp 0xffffff91(%rip)

"full_write" :
bae0(2): push %r13
bae2(2): push %r12
bae4(1): push %rbp
bae5(1): push %rbx
bae6(4): sub $0x8,%rsp
baea(3): test %rdx,%rdx
baed(2): jz 0x64(%rip)
baef(3): mov %edi,%r13d
baf2(3): mov %rsi,%rbp
baf5(3): mov %rdx,%rbx
baf8(3): xor %r12d,%r12d
bafb(2): jmp 0x15(%rip)
bafd(3): nop (%rax)
bb00(3): test %rax,%rax
bb03(2): jz 0x35(%rip)
bb05(3): add %rax,%r12
bb08(3): add %rax,%rbp
bb0b(3): sub %rax,%rbx
bb0e(2): jz 0x16(%rip)
bb10(3): mov %rbx,%rdx
bb13(3): mov %rbp,%rsi
bb16(3): mov %r13d,%edi
bb19(5): call 0x34f7(%rip)
bb1e(4): cmp $0xffffffff,%rax
bb22(2): jnz 0xffffffde(%rip)
bb24(4): add $0x8,%rsp
bb28(3): mov %r12,%rax
bb2b(1): pop %rbx
bb2c(1): pop %rbp
bb2d(2): pop %r12
bb2f(2): pop %r13
bb31(1): ret near (%rsp)
bb32(6): nop 0x0(%rax,%rax,1)
bb38(5): call 0xffff6c38(%rip)
bb3d(6): mov $0x1c,(%rax)
bb43(4): add $0x8,%rsp
bb47(3): mov %r12,%rax
bb4a(1): pop %rbx
bb4b(1): pop %rbp
bb4c(2): pop %r12
bb4e(2): pop %r13
bb50(1): ret near (%rsp)
bb51(3): xor %r12d,%r12d
bb54(2): jmp 0xffffffd0(%rip)

"next_prime" :
bb60(4): cmp $0xa,%rdi
bb64(5): mov $0xa,%eax
bb69(a): mov $0x-6148914691236517205,%r9
bb73(4): cmovnae %rax,%rdi
bb77(4): or $0x1,%rdi
bb7b(4): cmp $0xffffffff,%rdi
bb7f(2): jz 0x70(%rip)
bb81(7): nop 0x0(%rax)
bb88(3): mov %rdi,%rax
bb8b(3): mov %rdi,%rcx
bb8e(3): mul %rax,%r9,%rdx
bb91(3): mov %rdx,%rax
bb94(3): shr $0x1,%rax
bb97(4): lea 0x0(%rax,%rax,2),%rax
bb9b(3): sub %rax,%rcx
bb9e(4): cmp $0x9,%rdi
bba2(3): mov %rcx,%rax
bba5(2): jbe 0x3b(%rip)
bba7(3): test %rcx,%rcx
bbaa(2): jz 0x3b(%rip)
bbac(6): mov $0x10,%r8d
bbb2(5): mov $0x9,%esi
bbb7(5): mov $0x3,%ecx
bbbc(2): jmp 0xd(%rip)
bbbe(2): nop 
bbc0(4): add $0x8,%r8
bbc4(3): test %rdx,%rdx
bbc7(2): jz 0x1e(%rip)
bbc9(4): add $0x2,%rcx
bbcd(2): xor %edx,%edx
bbcf(3): mov %rdi,%rax
bbd2(3): div %rcx,%rax
bbd5(3): add %r8,%rsi
bbd8(3): cmp %rdi,%rsi
bbdb(3): mov %rdx,%rax
bbde(2): jb 0xffffffe2(%rip)
bbe0(3): test %rax,%rax
bbe3(2): jnz 0xc(%rip)
bbe5(4): add $0x2,%rdi
bbe9(4): cmp $0xffffffff,%rdi
bbed(2): jnz 0xffffff9b(%rip)
bbef(3): mov %rdi,%rax
bbf2(1): ret near (%rsp)

"raw_hasher" :
bc00(3): mov %rdi,%rax
bc03(2): xor %edx,%edx
bc05(4): ror $0x3,%rax
bc09(3): div %rsi,%rax
bc0c(3): mov %rdx,%rax
bc0f(1): ret near (%rsp)

"raw_comparator" :
bc10(3): cmp %rsi,%rdi
bc13(3): setz %al
bc16(1): ret near (%rsp)

"safe_hasher" :
bc20(1): push %rbx
bc21(3): mov %rdi,%rbx
bc24(3): mov %rsi,%rdi
bc27(4): mov 0x10(%rbx),%rsi
bc2b(3): call 0x30(%rbx)
bc2e(4): cmp %rax,0x10(%rbx)
bc32(2): jbe 0xb(%rip)
bc34(4): shl/sal $0x4,%rax
bc38(3): add (%rbx),%rax
bc3b(1): pop %rbx
bc3c(1): ret near (%rsp)
bc3d(5): call 0xffff6b23(%rip)

"hash_find_entry" :
bc50(2): push %r14
bc52(2): push %r13
bc54(3): mov %rdx,%r14
bc57(2): push %r12
bc59(1): push %rbp
bc5a(3): mov %rdi,%r12
bc5d(1): push %rbx
bc5e(3): mov %rsi,%rbp
bc61(3): mov %ecx,%r13d
bc64(5): call 0xffffffbc(%rip)
bc69(3): mov %rax,(%r14)
bc6c(3): mov (%rax),%rsi
bc6f(3): test %rsi,%rsi
bc72(6): jz 0xee(%rip)
bc78(3): cmp %rbp,%rsi
bc7b(3): mov %rax,%rbx
bc7e(6): jz 0x95(%rip)
bc84(3): mov %rbp,%rdi
bc87(5): call 0x38(%r12)
bc8c(2): test %al,%al
bc8e(6): jnz 0x82(%rip)
bc94(4): mov 0x8(%rbx),%rax
bc98(3): test %rax,%rax
bc9b(6): jz 0xc5(%rip)
bca1(3): mov (%rax),%rsi
bca4(3): cmp %rsi,%rbp
bca7(2): jnz 0x22(%rip)
bca9(2): jmp 0x33(%rip)
bcab(5): nop 0x0(%rax,%rax,1)
bcb0(4): mov 0x8(%rbx),%rbx
bcb4(4): mov 0x8(%rbx),%rax
bcb8(3): test %rax,%rax
bcbb(6): jz 0xa5(%rip)
bcc1(3): mov (%rax),%rsi
bcc4(3): cmp %rbp,%rsi
bcc7(2): jz 0x15(%rip)
bcc9(3): mov %rbp,%rdi
bccc(5): call 0x38(%r12)
bcd1(2): test %al,%al
bcd3(2): jz 0xffffffdd(%rip)
bcd5(4): mov 0x8(%rbx),%rax
bcd9(3): mov (%rax),%rsi
bcdc(3): test %r13b,%r13b
bcdf(2): jz 0x1f(%rip)
bce1(4): mov 0x8(%rax),%rdx
bce5(4): mov %rdx,0x8(%rbx)
bce9(7): mov $0x0,(%rax)
bcf0(5): mov 0x48(%r12),%rdx
bcf5(4): mov %rdx,0x8(%rax)
bcf9(5): mov %rax,0x48(%r12)
bcfe(1): pop %rbx
bcff(3): mov %rsi,%rax
bd02(1): pop %rbp
bd03(2): pop %r12
bd05(2): pop %r13
bd07(2): pop %r14
bd09(1): ret near (%rsp)
bd0a(6): nop 0x0(%rax,%rax,1)
bd10(3): mov (%rbx),%rsi
bd13(3): test %r13b,%r13b
bd16(2): jz 0xffffffe8(%rip)
bd18(4): mov 0x8(%rbx),%rax
bd1c(3): test %rax,%rax
bd1f(2): jz 0x31(%rip)
bd21(4): movdqu (%rax),%xmm0
bd25(3): movups %xmm0,(%rbx)
bd28(7): mov $0x0,(%rax)
bd2f(5): mov 0x48(%r12),%rdx
bd34(4): mov %rdx,0x8(%rax)
bd38(5): mov %rax,0x48(%r12)
bd3d(3): mov %rsi,%rax
bd40(1): pop %rbx
bd41(1): pop %rbp
bd42(2): pop %r12
bd44(2): pop %r13
bd46(2): pop %r14
bd48(1): ret near (%rsp)
bd49(7): nop 0x0(%rax)
bd50(7): mov $0x0,(%rbx)
bd57(2): jmp 0xffffffa7(%rip)
bd59(7): nop 0x0(%rax)
bd60(2): xor %esi,%esi
bd62(1): pop %rbx
bd63(3): mov %rsi,%rax
bd66(1): pop %rbp
bd67(2): pop %r12
bd69(2): pop %r13
bd6b(2): pop %r14
bd6d(1): ret near (%rsp)

"check_tuning.isra.0" :
bd70(3): mov (%rdi),%rdx
bd73(7): lea 0x9526(%rip),%rcx
bd7a(5): mov $0x1,%eax
bd7f(3): cmp %rcx,%rdx
bd82(2): jz 0x63(%rip)
bd84(5): movss 0x8(%rdx),%xmm0
bd89(7): ucomiss 0x9524(%rip),%xmm0
bd90(2): jbe 0x50(%rip)
bd92(8): movss 0x951e(%rip),%xmm1
bd9a(3): ucomiss %xmm0,%xmm1
bd9d(2): jbe 0x43(%rip)
bd9f(5): movss 0xc(%rdx),%xmm1
bda4(7): ucomiss 0x9511(%rip),%xmm1
bdab(2): jbe 0x35(%rip)
bdad(4): movss (%rdx),%xmm1
bdb1(7): ucomiss 0x9508(%rip),%xmm1
bdb8(2): jb 0x28(%rip)
bdba(8): addss 0x94f2(%rip),%xmm1
bdc2(5): movss 0x4(%rdx),%xmm2
bdc7(3): ucomiss %xmm1,%xmm2
bdca(2): jbe 0x16(%rip)
bdcc(8): movss 0x94f0(%rip),%xmm3
bdd4(3): ucomiss %xmm2,%xmm3
bdd7(2): jb 0x9(%rip)
bdd9(3): ucomiss %xmm1,%xmm0
bddc(2): jnbe 0x9(%rip)
bdde(2): nop 
bde0(3): mov %rcx,(%rdi)
bde3(2): xor %eax,%eax
bde5(2): REP ret near (%rsp)

"transfer_entries" :
bdf0(2): push %r15
bdf2(2): push %r14
bdf4(2): push %r13
bdf6(2): push %r12
bdf8(1): push %rbp
bdf9(1): push %rbx
bdfa(4): sub $0x8,%rsp
bdfe(3): mov (%rsi),%r12
be01(4): cmp 0x8(%rsi),%r12
be05(6): jnb 0xe3(%rip)
be0b(3): mov %rdi,%rbp
be0e(3): mov %rsi,%r13
be11(3): mov %edx,%r14d
be14(4): nop 0x0(%rax)
be18(4): mov (%r12),%r15
be1c(3): test %r15,%r15
be1f(6): jz 0xbb(%rip)
be25(5): mov 0x8(%r12),%rbx
be2a(3): test %rbx,%rbx
be2d(2): jnz 0x1f(%rip)
be2f(2): jmp 0x5c(%rip)
be31(7): nop 0x0(%rax)
be38(4): mov 0x8(%rax),%rcx
be3c(3): test %rdx,%rdx
be3f(4): mov %rcx,0x8(%rbx)
be43(4): mov %rbx,0x8(%rax)
be47(3): mov %rdx,%rbx
be4a(2): jz 0x3d(%rip)
be4c(3): mov (%rbx),%r15
be4f(3): mov %rbp,%rdi
be52(3): mov %r15,%rsi
be55(5): call 0xfffffdcb(%rip)
be5a(4): cmp $0x0,(%rax)
be5e(4): mov 0x8(%rbx),%rdx
be62(2): jnz 0xffffffd6(%rip)
be64(3): mov %r15,(%rax)
be67(5): add $0x1,0x18(%rbp)
be6c(3): test %rdx,%rdx
be6f(7): mov $0x0,(%rbx)
be76(4): mov 0x48(%rbp),%rax
be7a(4): mov %rax,0x8(%rbx)
be7e(4): mov %rbx,0x48(%rbp)
be82(3): mov %rdx,%rbx
be85(2): jnz 0xffffffc7(%rip)
be87(4): mov (%r12),%r15
be8b(3): test %r14b,%r14b
be8e(9): mov $0x0,0x8(%r12)
be97(2): jnz 0x43(%rip)
be99(3): mov %r15,%rsi
be9c(3): mov %rbp,%rdi
be9f(5): call 0xfffffd81(%rip)
bea4(4): cmp $0x0,(%rax)
bea8(3): mov %rax,%rbx
beab(2): jz 0x55(%rip)
bead(4): mov 0x48(%rbp),%rax
beb1(3): test %rax,%rax
beb4(2): jz 0x5c(%rip)
beb6(4): mov 0x8(%rax),%rdx
beba(4): mov %rdx,0x48(%rbp)
bebe(4): mov 0x8(%rbx),%rdx
bec2(3): mov %r15,(%rax)
bec5(4): mov %rdx,0x8(%rax)
bec9(4): mov %rax,0x8(%rbx)
becd(8): mov $0x0,(%r12)
bed5(5): sub $0x1,0x18(%r13)
beda(4): add $0x10,%r12
bede(4): cmp %r12,0x8(%r13)
bee2(6): jnbe 0xffffff36(%rip)
bee8(4): add $0x8,%rsp
beec(5): mov $0x1,%eax
bef1(1): pop %rbx
bef2(1): pop %rbp
bef3(2): pop %r12
bef5(2): pop %r13
bef7(2): pop %r14
bef9(2): pop %r15
befb(1): ret near (%rsp)
befc(4): nop 0x0(%rax)
bf00(3): mov %r15,(%rax)
bf03(5): add $0x1,0x18(%rbp)
bf08(2): jmp 0xffffffc5(%rip)
bf0a(6): nop 0x0(%rax,%rax,1)
bf10(5): mov $0x10,%edi
bf15(5): call 0xffff6cab(%rip)
bf1a(3): test %rax,%rax
bf1d(2): jnz 0xffffffa1(%rip)
bf1f(4): add $0x8,%rsp
bf23(2): xor %eax,%eax
bf25(1): pop %rbx
bf26(1): pop %rbp
bf27(2): pop %r12
bf29(2): pop %r13
bf2b(2): pop %r14
bf2d(2): pop %r15
bf2f(1): ret near (%rsp)

"hash_get_n_buckets" :
bf30(4): mov 0x10(%rdi),%rax
bf34(1): ret near (%rsp)

"hash_get_n_buckets_used" :
bf40(4): mov 0x18(%rdi),%rax
bf44(1): ret near (%rsp)

"hash_get_n_entries" :
bf50(4): mov 0x20(%rdi),%rax
bf54(1): ret near (%rsp)

"hash_get_max_bucket_length" :
bf60(3): mov (%rdi),%rsi
bf63(4): mov 0x8(%rdi),%rdi
bf67(2): xor %eax,%eax
bf69(3): cmp %rdi,%rsi
bf6c(2): jnb 0x3b(%rip)
bf6e(2): nop 
bf70(4): cmp $0x0,(%rsi)
bf74(2): jz 0x28(%rip)
bf76(4): mov 0x8(%rsi),%rdx
bf7a(5): mov $0x1,%ecx
bf7f(3): test %rdx,%rdx
bf82(2): jz 0x13(%rip)
bf84(4): nop 0x0(%rax)
bf88(4): mov 0x8(%rdx),%rdx
bf8c(4): add $0x1,%rcx
bf90(3): test %rdx,%rdx
bf93(2): jnz 0xfffffff5(%rip)
bf95(3): cmp %rcx,%rax
bf98(4): cmovnae %rcx,%rax
bf9c(4): add $0x10,%rsi
bfa0(3): cmp %rdi,%rsi
bfa3(2): jb 0xffffffcd(%rip)
bfa5(2): REP ret near (%rsp)
bfa7(2): REP ret near (%rsp)

"hash_table_ok" :
bfb0(3): mov (%rdi),%rcx
bfb3(4): mov 0x8(%rdi),%r8
bfb7(2): xor %edx,%edx
bfb9(2): xor %esi,%esi
bfbb(3): cmp %r8,%rcx
bfbe(2): jnb 0x38(%rip)
bfc0(4): cmp $0x0,(%rcx)
bfc4(2): jz 0x29(%rip)
bfc6(4): mov 0x8(%rcx),%rax
bfca(4): add $0x1,%rsi
bfce(4): add $0x1,%rdx
bfd2(3): test %rax,%rax
bfd5(2): jz 0x18(%rip)
bfd7(9): nop 0x0(%rax,%rax,1)
bfe0(4): mov 0x8(%rax),%rax
bfe4(4): add $0x1,%rdx
bfe8(3): test %rax,%rax
bfeb(2): jnz 0xfffffff5(%rip)
bfed(4): add $0x10,%rcx
bff1(3): cmp %r8,%rcx
bff4(2): jb 0xffffffcc(%rip)
bff6(2): xor %eax,%eax
bff8(4): cmp %rsi,0x18(%rdi)
bffc(2): jz 0x4(%rip)
bffe(2): REP ret near (%rsp)
c000(4): cmp %rdx,0x20(%rdi)
c004(3): setz %al
c007(1): ret near (%rsp)

"hash_print_statistics" :
c010(2): push %r13
c012(2): push %r12
c014(3): mov %rsi,%r12
c017(1): push %rbp
c018(1): push %rbx
c019(2): xor %ebx,%ebx
c01b(4): sub $0x8,%rsp
c01f(3): mov (%rdi),%rsi
c022(4): mov 0x20(%rdi),%rcx
c026(4): mov 0x10(%rdi),%rbp
c02a(4): mov 0x18(%rdi),%r13
c02e(4): mov 0x8(%rdi),%rdi
c032(3): cmp %rdi,%rsi
c035(2): jnb 0x40(%rip)
c037(9): nop 0x0(%rax,%rax,1)
c040(4): cmp $0x0,(%rsi)
c044(2): jz 0x28(%rip)
c046(4): mov 0x8(%rsi),%rax
c04a(5): mov $0x1,%edx
c04f(3): test %rax,%rax
c052(2): jz 0x13(%rip)
c054(4): nop 0x0(%rax)
c058(4): mov 0x8(%rax),%rax
c05c(4): add $0x1,%rdx
c060(3): test %rax,%rax
c063(2): jnz 0xfffffff5(%rip)
c065(3): cmp %rdx,%rbx
c068(4): cmovnae %rdx,%rbx
c06c(4): add $0x10,%rsi
c070(3): cmp %rdi,%rsi
c073(2): jb 0xffffffcd(%rip)
c075(7): lea 0x91aa(%rip),%rdx
c07c(5): mov $0x1,%esi
c081(3): mov %r12,%rdi
c084(2): xor %eax,%eax
c086(5): call 0xffff6d2a(%rip)
c08b(7): lea 0x91ac(%rip),%rdx
c092(2): xor %eax,%eax
c094(3): mov %rbp,%rcx
c097(5): mov $0x1,%esi
c09c(3): mov %r12,%rdi
c09f(5): call 0xffff6d11(%rip)
c0a4(3): test %r13,%r13
c0a7(2): js 0x69(%rip)
c0a9(4): pxor %xmm0,%xmm0
c0ad(3): test %rbp,%rbp
c0b0(5): cvtsi2sd %r13,%xmm0
c0b5(8): mulsd 0x921b(%rip),%xmm0
c0bd(2): js 0x7c(%rip)
c0bf(4): pxor %xmm1,%xmm1
c0c3(5): cvtsi2sd %rbp,%xmm1
c0c8(4): divsd %xmm1,%xmm0
c0cc(7): lea 0x919d(%rip),%rdx
c0d3(3): mov %r13,%rcx
c0d6(3): mov %r12,%rdi
c0d9(5): mov $0x1,%esi
c0de(5): mov $0x1,%eax
c0e3(5): call 0xffff6ccd(%rip)
c0e8(4): add $0x8,%rsp
c0ec(3): mov %rbx,%rcx
c0ef(3): mov %r12,%rdi
c0f2(1): pop %rbx
c0f3(1): pop %rbp
c0f4(2): pop %r12
c0f6(2): pop %r13
c0f8(7): lea 0x9157(%rip),%rdx
c0ff(5): mov $0x1,%esi
c104(2): xor %eax,%eax
c106(5): jmp 0xffff6caa(%rip)
c10b(5): nop 0x0(%rax,%rax,1)
c110(3): mov %r13,%rax
c113(3): mov %r13,%rdx
c116(4): pxor %xmm0,%xmm0
c11a(3): shr $0x1,%rax
c11d(3): and $0x1,%edx
c120(3): or %rdx,%rax
c123(3): test %rbp,%rbp
c126(5): cvtsi2sd %rax,%xmm0
c12b(4): addsd %xmm0,%xmm0
c12f(8): mulsd 0x91a1(%rip),%xmm0
c137(2): jns 0xffffff88(%rip)
c139(3): mov %rbp,%rax
c13c(4): pxor %xmm1,%xmm1
c140(3): shr $0x1,%rax
c143(3): and $0x1,%ebp
c146(3): or %rbp,%rax
c149(5): cvtsi2sd %rax,%xmm1
c14e(4): addsd %xmm1,%xmm1
c152(5): jmp 0xffffff76(%rip)

"hash_lookup" :
c160(2): push %r12
c162(1): push %rbp
c163(3): mov %rdi,%r12
c166(1): push %rbx
c167(3): mov %rsi,%rbp
c16a(5): call 0xfffffab6(%rip)
c16f(3): mov (%rax),%rsi
c172(3): test %rsi,%rsi
c175(2): jz 0x28(%rip)
c177(3): mov %rax,%rbx
c17a(2): jmp 0x9(%rip)
c17c(4): nop 0x0(%rax)
c180(3): mov (%rbx),%rsi
c183(3): cmp %rbp,%rsi
c186(2): jz 0x19(%rip)
c188(3): mov %rbp,%rdi
c18b(5): call 0x38(%r12)
c190(2): test %al,%al
c192(2): jnz 0x1e(%rip)
c194(4): mov 0x8(%rbx),%rbx
c198(3): test %rbx,%rbx
c19b(2): jnz 0xffffffe5(%rip)
c19d(2): xor %esi,%esi
c19f(1): pop %rbx
c1a0(3): mov %rsi,%rax
c1a3(1): pop %rbp
c1a4(2): pop %r12
c1a6(1): ret near (%rsp)
c1a7(9): nop 0x0(%rax,%rax,1)
c1b0(3): mov (%rbx),%rsi
c1b3(1): pop %rbx
c1b4(1): pop %rbp
c1b5(3): mov %rsi,%rax
c1b8(2): pop %r12
c1ba(1): ret near (%rsp)

"hash_get_first" :
c1c0(5): cmp $0x0,0x20(%rdi)
c1c5(2): jz 0x2e(%rip)
c1c7(3): mov (%rdi),%rdx
c1ca(4): mov 0x8(%rdi),%rcx
c1ce(3): cmp %rcx,%rdx
c1d1(2): jnb 0x27(%rip)
c1d3(3): mov (%rdx),%rax
c1d6(3): test %rax,%rax
c1d9(2): jnz 0x1d(%rip)
c1db(5): nop 0x0(%rax,%rax,1)
c1e0(4): add $0x10,%rdx
c1e4(3): cmp %rcx,%rdx
c1e7(2): jnb 0x11(%rip)
c1e9(3): mov (%rdx),%rax
c1ec(3): test %rax,%rax
c1ef(2): jz 0xfffffff1(%rip)
c1f1(2): REP ret near (%rsp)
c1f3(2): xor %eax,%eax
c1f5(1): ret near (%rsp)
c1f6(2): REP ret near (%rsp)
c1f8(4): sub $0x8,%rsp
c1fc(5): call 0xffff6564(%rip)

"hash_get_next" :
c210(1): push %rbp
c211(1): push %rbx
c212(3): mov %rdi,%rbp
c215(3): mov %rsi,%rbx
c218(4): sub $0x8,%rsp
c21c(5): call 0xfffffa04(%rip)
c221(3): mov %rax,%rdx
c224(3): mov %rax,%rcx
c227(3): mov (%rdx),%rax
c22a(4): mov 0x8(%rdx),%rdx
c22e(3): cmp %rbx,%rax
c231(2): jz 0x18(%rip)
c233(5): nop 0x0(%rax,%rax,1)
c238(3): test %rdx,%rdx
c23b(2): jz 0x13(%rip)
c23d(3): mov (%rdx),%rax
c240(4): mov 0x8(%rdx),%rdx
c244(3): cmp %rbx,%rax
c247(2): jnz 0xfffffff1(%rip)
c249(3): test %rdx,%rdx
c24c(2): jnz 0x2c(%rip)
c24e(4): mov 0x8(%rbp),%rdx
c252(2): jmp 0xe(%rip)
c254(4): nop 0x0(%rax)
c258(3): mov (%rcx),%rax
c25b(3): test %rax,%rax
c25e(2): jnz 0xd(%rip)
c260(4): add $0x10,%rcx
c264(3): cmp %rcx,%rdx
c267(2): jnbe 0xfffffff1(%rip)
c269(2): xor %eax,%eax
c26b(4): add $0x8,%rsp
c26f(1): pop %rbx
c270(1): pop %rbp
c271(1): ret near (%rsp)
c272(6): nop 0x0(%rax,%rax,1)
c278(3): mov (%rdx),%rax
c27b(4): add $0x8,%rsp
c27f(1): pop %rbx
c280(1): pop %rbp
c281(1): ret near (%rsp)

"hash_get_entries" :
c290(3): mov (%rdi),%r9
c293(4): cmp %r9,0x8(%rdi)
c297(2): jbe 0x5b(%rip)
c299(3): xor %r8d,%r8d
c29c(3): mov (%r9),%rcx
c29f(3): test %rcx,%rcx
c2a2(2): jz 0x3b(%rip)
c2a4(3): cmp %r8,%rdx
c2a7(2): jbe 0x40(%rip)
c2a9(4): mov %rcx,0x0(%rsi,%r8,8)
c2ad(4): mov 0x8(%r9),%rcx
c2b1(4): lea 0x1(%r8),%rax
c2b5(3): test %rcx,%rcx
c2b8(2): jz 0x22(%rip)
c2ba(6): nop 0x0(%rax,%rax,1)
c2c0(3): cmp %rax,%rdx
c2c3(2): jz 0x2d(%rip)
c2c5(3): mov (%rcx),%r8
c2c8(4): add $0x1,%rax
c2cc(5): mov %r8,0xfffffff8(%rsi,%rax,8)
c2d1(4): mov 0x8(%rcx),%rcx
c2d5(3): test %rcx,%rcx
c2d8(2): jnz 0xffffffe8(%rip)
c2da(3): mov %rax,%r8
c2dd(4): add $0x10,%r9
c2e1(4): cmp %r9,0x8(%rdi)
c2e5(2): jnbe 0xffffffb7(%rip)
c2e7(3): mov %r8,%rax
c2ea(1): ret near (%rsp)
c2eb(5): nop 0x0(%rax,%rax,1)
c2f0(2): REP ret near (%rsp)
c2f2(2): xor %eax,%eax
c2f4(1): ret near (%rsp)

"hash_do_for_each" :
c300(2): push %r15
c302(2): push %r14
c304(2): push %r13
c306(2): push %r12
c308(1): push %rbp
c309(1): push %rbx
c30a(4): sub $0x8,%rsp
c30e(3): mov (%rdi),%r14
c311(4): cmp %r14,0x8(%rdi)
c315(2): jbe 0x51(%rip)
c317(3): mov %rdx,%r13
c31a(3): mov %rsi,%r12
c31d(3): mov %rdi,%r15
c320(2): xor %ebp,%ebp
c322(3): mov (%r14),%rdi
c325(3): test %rdi,%rdi
c328(2): jz 0x22(%rip)
c32a(3): mov %r14,%rbx
c32d(2): jmp 0x6(%rip)
c32f(1): nop 
c330(3): mov (%rbx),%rdi
c333(3): mov %r13,%rsi
c336(3): call %r12
c339(2): test %al,%al
c33b(2): jz 0x19(%rip)
c33d(4): mov 0x8(%rbx),%rbx
c341(4): add $0x1,%rbp
c345(3): test %rbx,%rbx
c348(2): jnz 0xffffffe8(%rip)
c34a(4): add $0x10,%r14
c34e(4): cmp %r14,0x8(%r15)
c352(2): jnbe 0xffffffd0(%rip)
c354(4): add $0x8,%rsp
c358(3): mov %rbp,%rax
c35b(1): pop %rbx
c35c(1): pop %rbp
c35d(2): pop %r12
c35f(2): pop %r13
c361(2): pop %r14
c363(2): pop %r15
c365(1): ret near (%rsp)
c366(2): xor %ebp,%ebp
c368(2): jmp 0xffffffec(%rip)

"hash_string" :
c370(3): movzx (%rdi),%ecx
c373(2): xor %edx,%edx
c375(2): test %cl,%cl
c377(2): jz 0x26(%rip)
c379(7): nop 0x0(%rax)
c380(3): mov %rdx,%rax
c383(4): add $0x1,%rdi
c387(4): shl/sal $0x5,%rax
c38b(3): sub %rdx,%rax
c38e(2): xor %edx,%edx
c390(3): add %rcx,%rax
c393(3): movzx (%rdi),%ecx
c396(3): div %rsi,%rax
c399(2): test %cl,%cl
c39b(2): jnz 0xffffffe5(%rip)
c39d(3): mov %rdx,%rax
c3a0(1): ret near (%rsp)

"hash_reset_tuning" :
c3b0(a): mov $0x4575657221408423936,%rax
c3ba(4): mov $0x0,0x10(%rdi)
c3be(3): mov %rax,(%rdi)
c3c1(a): mov $0x4590573145673223373,%rax
c3cb(4): mov %rax,0x8(%rdi)
c3cf(1): ret near (%rsp)

"hash_initialize" :
c3d0(2): push %r15
c3d2(2): push %r14
c3d4(7): lea 0xfffff825(%rip),%rax
c3db(2): push %r13
c3dd(2): push %r12
c3df(3): mov %rdx,%r12
c3e2(1): push %rbp
c3e3(1): push %rbx
c3e4(3): mov %rcx,%r13
c3e7(3): mov %rdi,%rbp
c3ea(5): mov $0x50,%edi
c3ef(3): mov %rsi,%r15
c3f2(4): sub $0x8,%rsp
c3f6(3): test %rdx,%rdx
c3f9(3): mov %r8,%r14
c3fc(4): cmove %rax,%r12
c400(7): lea 0xfffff809(%rip),%rax
c407(3): test %rcx,%rcx
c40a(4): cmove %rax,%r13
c40e(5): call 0xffff67b2(%rip)
c413(3): test %rax,%rax
c416(3): mov %rax,%rbx
c419(6): jz 0xb1(%rip)
c41f(3): test %r15,%r15
c422(4): lea 0x28(%rax),%rdi
c426(6): jz 0xba(%rip)
c42c(4): mov %r15,0x28(%rax)
c430(5): call 0xfffff940(%rip)
c435(2): test %al,%al
c437(6): jz 0x89(%rip)
c43d(5): cmp $0x0,0x10(%r15)
c442(6): jz 0xfe(%rip)
c448(3): mov %rbp,%rdi
c44b(5): call 0xfffff715(%rip)
c450(5): mov $0x8,%edx
c455(3): mov %rax,%rbp
c458(2): xor %ecx,%ecx
c45a(3): mov %rdx,%rax
c45d(3): mul %rax,%rbp,%rdx
c460(6): jo 0x11a(%rip)
c466(3): test %rax,%rax
c469(2): js 0x57(%rip)
c46b(3): test %rcx,%rcx
c46e(2): jnz 0x52(%rip)
c470(3): test %rbp,%rbp
c473(4): mov %rbp,0x10(%rbx)
c477(2): jz 0x49(%rip)
c479(5): mov $0x10,%esi
c47e(3): mov %rbp,%rdi
c481(5): call 0xffff664f(%rip)
c486(3): test %rax,%rax
c489(3): mov %rax,(%rbx)
c48c(2): jz 0x34(%rip)
c48e(4): shl/sal $0x4,%rbp
c492(8): mov $0x0,0x18(%rbx)
c49a(8): mov $0x0,0x20(%rbx)
c4a2(3): add %rax,%rbp
c4a5(4): mov %r12,0x30(%rbx)
c4a9(4): mov %r13,0x38(%rbx)
c4ad(4): mov %rbp,0x8(%rbx)
c4b1(4): mov %r14,0x40(%rbx)
c4b5(8): mov $0x0,0x48(%rbx)
c4bd(2): jmp 0xd(%rip)
c4bf(1): nop 
c4c0(3): mov %rbx,%rdi
c4c3(2): xor %ebx,%ebx
c4c5(5): call 0xffff694b(%rip)
c4ca(4): add $0x8,%rsp
c4ce(3): mov %rbx,%rax
c4d1(1): pop %rbx
c4d2(1): pop %rbp
c4d3(2): pop %r12
c4d5(2): pop %r13
c4d7(2): pop %r14
c4d9(2): pop %r15
c4db(1): ret near (%rsp)
c4dc(4): nop 0x0(%rax)
c4e0(7): lea 0x8db9(%rip),%rax
c4e7(4): mov %rax,0x28(%rbx)
c4eb(5): call 0xfffff885(%rip)
c4f0(2): test %al,%al
c4f2(8): movss 0x8dce(%rip),%xmm1
c4fa(2): jz 0xffffffc6(%rip)
c4fc(3): test %rbp,%rbp
c4ff(2): js 0x4c(%rip)
c501(4): pxor %xmm0,%xmm0
c505(5): cvtsi2ss %rbp,%xmm0
c50a(4): divss %xmm1,%xmm0
c50e(7): ucomiss 0x8db7(%rip),%xmm0
c515(2): jnb 0xffffffab(%rip)
c517(7): ucomiss 0x8db2(%rip),%xmm0
c51e(2): jb 0x52(%rip)
c520(8): subss 0x8da8(%rip),%xmm0
c528(a): mov $0x-9223372036854775808,%rax
c532(5): cvttss2si %xmm0,%rbp
c537(3): xor %rax,%rbp
c53a(5): jmp 0xffffff0e(%rip)
c53f(1): nop 
c540(3): test %rbp,%rbp
c543(6): movss 0x8(%r15),%xmm1
c549(2): jns 0xffffffb8(%rip)
c54b(3): mov %rbp,%rax
c54e(4): pxor %xmm0,%xmm0
c552(3): shr $0x1,%rax
c555(3): and $0x1,%ebp
c558(3): or %rbp,%rax
c55b(5): cvtsi2ss %rax,%xmm0
c560(4): addss %xmm0,%xmm0
c564(2): jmp 0xffffffa6(%rip)
c566(a): nop 0x0(%rax,%rax,1)
c570(5): cvttss2si %xmm0,%rbp
c575(5): jmp 0xfffffed3(%rip)
c57a(5): mov $0x1,%ecx
c57f(5): jmp 0xfffffee7(%rip)

"hash_clear" :
c590(2): push %r12
c592(1): push %rbp
c593(3): mov %rdi,%rbp
c596(1): push %rbx
c597(3): mov (%rdi),%r12
c59a(4): cmp 0x8(%rdi),%r12
c59e(2): jnb 0x6d(%rip)
c5a0(5): cmp $0x0,(%r12)
c5a5(2): jz 0x5c(%rip)
c5a7(5): mov 0x8(%r12),%rbx
c5ac(4): mov 0x40(%rbp),%rax
c5b0(3): test %rbx,%rbx
c5b3(2): jz 0x32(%rip)
c5b5(3): nop (%rax)
c5b8(3): test %rax,%rax
c5bb(2): jz 0xb(%rip)
c5bd(3): mov (%rbx),%rdi
c5c0(2): call %rax
c5c2(4): mov 0x40(%rbp),%rax
c5c6(4): mov 0x8(%rbx),%rdx
c5ca(4): mov 0x48(%rbp),%rcx
c5ce(7): mov $0x0,(%rbx)
c5d5(3): test %rdx,%rdx
c5d8(4): mov %rcx,0x8(%rbx)
c5dc(4): mov %rbx,0x48(%rbp)
c5e0(3): mov %rdx,%rbx
c5e3(2): jnz 0xffffffd5(%rip)
c5e5(3): test %rax,%rax
c5e8(2): jz 0x8(%rip)
c5ea(4): mov (%r12),%rdi
c5ee(2): call %rax
c5f0(8): mov $0x0,(%r12)
c5f8(9): mov $0x0,0x8(%r12)
c601(4): add $0x10,%r12
c605(4): cmp %r12,0x8(%rbp)
c609(2): jnbe 0xffffff97(%rip)
c60b(8): mov $0x0,0x18(%rbp)
c613(8): mov $0x0,0x20(%rbp)
c61b(1): pop %rbx
c61c(1): pop %rbp
c61d(2): pop %r12
c61f(1): ret near (%rsp)

"hash_free" :
c620(2): push %r12
c622(1): push %rbp
c623(3): mov %rdi,%r12
c626(1): push %rbx
c627(5): cmp $0x0,0x40(%rdi)
c62c(3): mov (%rdi),%rbp
c62f(4): mov 0x8(%rdi),%rax
c633(2): jz 0x50(%rip)
c635(5): cmp $0x0,0x20(%rdi)
c63a(2): jz 0x49(%rip)
c63c(3): cmp %rax,%rbp
c63f(2): jnb 0x7d(%rip)
c641(7): nop 0x0(%rax)
c648(4): mov 0x0(%rbp),%rdi
c64c(3): test %rdi,%rdi
c64f(2): jz 0x27(%rip)
c651(3): mov %rbp,%rbx
c654(2): jmp 0xf(%rip)
c656(a): nop 0x0(%rax,%rax,1)
c660(3): mov (%rbx),%rdi
c663(5): call 0x40(%r12)
c668(4): mov 0x8(%rbx),%rbx
c66c(3): test %rbx,%rbx
c66f(2): jnz 0xfffffff1(%rip)
c671(5): mov 0x8(%r12),%rax
c676(4): add $0x10,%rbp
c67a(3): cmp %rbp,%rax
c67d(2): jnbe 0xffffffcb(%rip)
c67f(4): mov (%r12),%rbp
c683(3): cmp %rax,%rbp
c686(2): jnb 0x36(%rip)
c688(8): nop 0x0(%rax,%rax,1)
c690(4): mov 0x8(%rbp),%rdi
c694(3): test %rdi,%rdi
c697(2): jz 0x1a(%rip)
c699(7): nop 0x0(%rax)
c6a0(4): mov 0x8(%rdi),%rbx
c6a4(5): call 0xffff676c(%rip)
c6a9(3): test %rbx,%rbx
c6ac(3): mov %rbx,%rdi
c6af(2): jnz 0xfffffff1(%rip)
c6b1(4): add $0x10,%rbp
c6b5(5): cmp %rbp,0x8(%r12)
c6ba(2): jnbe 0xffffffd6(%rip)
c6bc(5): mov 0x48(%r12),%rdi
c6c1(3): test %rdi,%rdi
c6c4(2): jz 0x1d(%rip)
c6c6(a): nop 0x0(%rax,%rax,1)
c6d0(4): mov 0x8(%rdi),%rbx
c6d4(5): call 0xffff673c(%rip)
c6d9(3): test %rbx,%rbx
c6dc(3): mov %rbx,%rdi
c6df(2): jnz 0xfffffff1(%rip)
c6e1(4): mov (%r12),%rdi
c6e5(5): call 0xffff672b(%rip)
c6ea(1): pop %rbx
c6eb(3): mov %r12,%rdi
c6ee(1): pop %rbp
c6ef(2): pop %r12
c6f1(5): jmp 0xffff671f(%rip)

"hash_rehash" :
c700(2): push %r12
c702(1): push %rbp
c703(3): mov %rdi,%rbp
c706(1): push %rbx
c707(4): sub $0x60,%rsp
c70b(4): mov 0x28(%rdi),%r12
c70f(9): mov $0x28,%rax
c718(5): mov %rax,0x58(%rsp)
c71d(2): xor %eax,%eax
c71f(6): cmp $0x0,0x10(%r12)
c725(2): jnz 0x53(%rip)
c727(3): test %rsi,%rsi
c72a(6): js 0x17e(%rip)
c730(4): pxor %xmm0,%xmm0
c734(5): cvtsi2ss %rsi,%xmm0
c739(7): divss 0x8(%r12),%xmm0
c740(7): ucomiss 0x8b85(%rip),%xmm0
c747(6): jnb 0x139(%rip)
c74d(7): ucomiss 0x8b7c(%rip),%xmm0
c754(6): jb 0x17c(%rip)
c75a(8): subss 0x8b6e(%rip),%xmm0
c762(a): mov $0x-9223372036854775808,%rax
c76c(5): cvttss2si %xmm0,%rsi
c771(3): xor %rax,%rsi
c774(4): nop 0x0(%rax)
c778(3): mov %rsi,%rdi
c77b(5): call 0xfffff3e5(%rip)
c780(5): mov $0x8,%edx
c785(3): mov %rax,%rbx
c788(2): xor %ecx,%ecx
c78a(3): mov %rdx,%rax
c78d(3): mul %rax,%rbx,%rdx
c790(6): jo 0x19f(%rip)
c796(3): test %rax,%rax
c799(5): mov $0x1,%eax
c79e(4): cmovs %rax,%rcx
c7a2(3): test %rbx,%rbx
c7a5(6): jz 0xdb(%rip)
c7ab(3): and $0x1,%ecx
c7ae(6): jnz 0xd2(%rip)
c7b4(4): cmp %rbx,0x10(%rbp)
c7b8(6): jz 0x128(%rip)
c7be(5): mov $0x10,%esi
c7c3(3): mov %rbx,%rdi
c7c6(5): call 0xffff630a(%rip)
c7cb(3): test %rax,%rax
c7ce(4): mov %rax,(%rsp)
c7d2(6): jz 0xae(%rip)
c7d8(5): mov %rbx,0x10(%rsp)
c7dd(4): shl/sal $0x4,%rbx
c7e1(5): mov %r12,0x28(%rsp)
c7e6(3): add %rax,%rbx
c7e9(4): mov 0x30(%rbp),%rax
c7ed(3): mov %rsp,%r12
c7f0(2): xor %edx,%edx
c7f2(3): mov %rbp,%rsi
c7f5(3): mov %r12,%rdi
c7f8(5): mov %rbx,0x8(%rsp)
c7fd(9): mov $0x0,0x18(%rsp)
c806(5): mov %rax,0x30(%rsp)
c80b(4): mov 0x38(%rbp),%rax
c80f(9): mov $0x0,0x20(%rsp)
c818(5): mov %rax,0x38(%rsp)
c81d(4): mov 0x40(%rbp),%rax
c821(5): mov %rax,0x40(%rsp)
c826(4): mov 0x48(%rbp),%rax
c82a(5): mov %rax,0x48(%rsp)
c82f(5): call 0xfffff5c1(%rip)
c834(2): test %al,%al
c836(2): mov %eax,%ebx
c838(6): jnz 0xb8(%rip)
c83e(5): mov 0x48(%rsp),%rax
c843(5): mov $0x1,%edx
c848(3): mov %r12,%rsi
c84b(3): mov %rbp,%rdi
c84e(4): mov %rax,0x48(%rbp)
c852(5): call 0xfffff59e(%rip)
c857(2): test %al,%al
c859(6): jz 0xe0(%rip)
c85f(2): xor %edx,%edx
c861(3): mov %r12,%rsi
c864(3): mov %rbp,%rdi
c867(5): call 0xfffff589(%rip)
c86c(2): test %al,%al
c86e(6): jz 0xcb(%rip)
c874(4): mov (%rsp),%rdi
c878(5): call 0xffff6598(%rip)
c87d(2): jmp 0x5(%rip)
c87f(1): nop 
c880(2): xor %ebx,%ebx
c882(5): mov 0x58(%rsp),%rcx
c887(9): xor $0x28,%rcx
c890(2): mov %ebx,%eax
c892(6): jnz 0x98(%rip)
c898(4): add $0x60,%rsp
c89c(1): pop %rbx
c89d(1): pop %rbp
c89e(2): pop %r12
c8a0(1): ret near (%rsp)
c8a1(7): nop 0x0(%rax)
c8a8(3): mov %rsi,%rax
c8ab(4): pxor %xmm0,%xmm0
c8af(3): shr $0x1,%rax
c8b2(3): and $0x1,%esi
c8b5(3): or %rsi,%rax
c8b8(5): cvtsi2ss %rax,%xmm0
c8bd(4): addss %xmm0,%xmm0
c8c1(5): jmp 0xfffffe78(%rip)
c8c6(a): nop 0x0(%rax,%rax,1)
c8d0(5): cvttss2si %xmm0,%rsi
c8d5(5): jmp 0xfffffea3(%rip)
c8da(6): nop 0x0(%rax,%rax,1)
c8e0(5): mov $0x1,%ebx
c8e5(2): jmp 0xffffff9d(%rip)
c8e7(9): nop 0x0(%rax,%rax,1)
c8f0(4): mov 0x0(%rbp),%rdi
c8f4(5): call 0xffff651c(%rip)
c8f9(4): mov (%rsp),%rax
c8fd(4): mov %rax,0x0(%rbp)
c901(5): mov 0x8(%rsp),%rax
c906(4): mov %rax,0x8(%rbp)
c90a(5): mov 0x10(%rsp),%rax
c90f(4): mov %rax,0x10(%rbp)
c913(5): mov 0x18(%rsp),%rax
c918(4): mov %rax,0x18(%rbp)
c91c(5): mov 0x48(%rsp),%rax
c921(4): mov %rax,0x48(%rbp)
c925(5): jmp 0xffffff5d(%rip)
c92a(5): call 0xffff6006(%rip)
c92f(5): mov $0x1,%ecx
c934(5): jmp 0xfffffe62(%rip)
c939(5): call 0xffff5e27(%rip)

"hash_insert_if_absent" :
c940(2): push %r13
c942(2): push %r12
c944(1): push %rbp
c945(1): push %rbx
c946(4): sub $0x18,%rsp
c94a(9): mov $0x28,%rax
c953(5): mov %rax,0x8(%rsp)
c958(2): xor %eax,%eax
c95a(3): test %rsi,%rsi
c95d(6): jz 0x1c0(%rip)
c963(3): mov %rsp,%r12
c966(2): xor %ecx,%ecx
c968(3): mov %rdx,%r13
c96b(3): mov %r12,%rdx
c96e(3): mov %rdi,%rbx
c971(3): mov %rsi,%rbp
c974(5): call 0xfffff2dc(%rip)
c979(3): test %rax,%rax
c97c(3): mov %rax,%rdx
c97f(2): jz 0x31(%rip)
c981(2): xor %eax,%eax
c983(3): test %r13,%r13
c986(2): jz 0x6(%rip)
c988(4): mov %rdx,0x0(%r13)
c98c(5): mov 0x8(%rsp),%rcx
c991(9): xor $0x28,%rcx
c99a(6): jnz 0x225(%rip)
c9a0(4): add $0x18,%rsp
c9a4(1): pop %rbx
c9a5(1): pop %rbp
c9a6(2): pop %r12
c9a8(2): pop %r13
c9aa(1): ret near (%rsp)
c9ab(5): nop 0x0(%rax,%rax,1)
c9b0(4): mov 0x18(%rbx),%rax
c9b4(3): test %rax,%rax
c9b7(2): js 0x79(%rip)
c9b9(4): pxor %xmm1,%xmm1
c9bd(4): mov 0x28(%rbx),%rdx
c9c1(5): cvtsi2ss %rax,%xmm1
c9c6(4): mov 0x10(%rbx),%rax
c9ca(3): test %rax,%rax
c9cd(6): js 0x8d(%rip)
c9d3(4): pxor %xmm0,%xmm0
c9d7(5): cvtsi2ss %rax,%xmm0
c9dc(5): mulss 0x8(%rdx),%xmm0
c9e1(3): ucomiss %xmm0,%xmm1
c9e4(6): jnbe 0x9c(%rip)
c9ea(4): mov (%rsp),%r12
c9ee(5): cmp $0x0,(%r12)
c9f3(6): jz 0x135(%rip)
c9f9(4): mov 0x48(%rbx),%rax
c9fd(3): test %rax,%rax
ca00(6): jz 0x140(%rip)
ca06(4): mov 0x8(%rax),%rdx
ca0a(4): mov %rdx,0x48(%rbx)
ca0e(5): mov 0x8(%r12),%rdx
ca13(3): mov %rbp,(%rax)
ca16(4): mov %rdx,0x8(%rax)
ca1a(5): mov %rax,0x8(%r12)
ca1f(5): mov $0x1,%eax
ca24(5): add $0x1,0x20(%rbx)
ca29(5): jmp 0xffffff63(%rip)
ca2e(2): nop 
ca30(3): mov %rax,%rdx
ca33(4): pxor %xmm1,%xmm1
ca37(3): and $0x1,%eax
ca3a(3): shr $0x1,%rdx
ca3d(3): or %rax,%rdx
ca40(4): mov 0x10(%rbx),%rax
ca44(5): cvtsi2ss %rdx,%xmm1
ca49(4): mov 0x28(%rbx),%rdx
ca4d(3): test %rax,%rax
ca50(4): addss %xmm1,%xmm1
ca54(6): jns 0xffffff7f(%rip)
ca5a(3): mov %rax,%rcx
ca5d(4): pxor %xmm0,%xmm0
ca61(3): shr $0x1,%rcx
ca64(3): and $0x1,%eax
ca67(3): or %rax,%rcx
ca6a(5): cvtsi2ss %rcx,%xmm0
ca6f(4): addss %xmm0,%xmm0
ca73(5): jmp 0xffffff69(%rip)
ca78(8): nop 0x0(%rax,%rax,1)
ca80(4): lea 0x28(%rbx),%rdi
ca84(5): call 0xfffff2ec(%rip)
ca89(4): mov 0x10(%rbx),%rax
ca8d(4): mov 0x28(%rbx),%rdx
ca91(3): test %rax,%rax
ca94(5): movss 0x8(%rdx),%xmm2
ca99(6): js 0xc7(%rip)
ca9f(4): pxor %xmm0,%xmm0
caa3(5): cvtsi2ss %rax,%xmm0
caa8(4): mov 0x18(%rbx),%rax
caac(3): test %rax,%rax
caaf(6): js 0xd1(%rip)
cab5(4): pxor %xmm1,%xmm1
cab9(5): cvtsi2ss %rax,%xmm1
cabe(3): movaps %xmm2,%xmm3
cac1(4): mulss %xmm0,%xmm3
cac5(3): ucomiss %xmm3,%xmm1
cac8(6): jbe 0xffffff22(%rip)
cace(4): cmp $0x0,0x10(%rdx)
cad2(5): mulss 0xc(%rdx),%xmm0
cad7(2): jnz 0x6(%rip)
cad9(4): mulss %xmm2,%xmm0
cadd(7): ucomiss 0x87e8(%rip),%xmm0
cae4(2): jnb 0x6f(%rip)
cae6(7): ucomiss 0x87e3(%rip),%xmm0
caed(6): jnb 0xb3(%rip)
caf3(5): cvttss2si %xmm0,%rsi
caf8(3): mov %rbx,%rdi
cafb(5): call 0xfffffc05(%rip)
cb00(2): test %al,%al
cb02(2): jz 0x51(%rip)
cb04(2): xor %ecx,%ecx
cb06(3): mov %r12,%rdx
cb09(3): mov %rbp,%rsi
cb0c(3): mov %rbx,%rdi
cb0f(5): call 0xfffff141(%rip)
cb14(3): test %rax,%rax
cb17(6): jz 0xfffffed3(%rip)
cb1d(5): call 0xffff5c43(%rip)
cb22(6): nop 0x0(%rax,%rax,1)
cb28(4): mov %rbp,(%r12)
cb2c(5): mov $0x1,%eax
cb31(5): add $0x1,0x20(%rbx)
cb36(5): add $0x1,0x18(%rbx)
cb3b(5): jmp 0xfffffe51(%rip)
cb40(5): mov $0x10,%edi
cb45(5): call 0xffff607b(%rip)
cb4a(3): test %rax,%rax
cb4d(6): jnz 0xfffffec1(%rip)
cb53(5): mov $0xffffffff,%eax
cb58(5): jmp 0xfffffe34(%rip)
cb5d(3): nop (%rax)
cb60(3): mov %rax,%rcx
cb63(4): pxor %xmm0,%xmm0
cb67(3): shr $0x1,%rcx
cb6a(3): and $0x1,%eax
cb6d(3): or %rax,%rcx
cb70(5): cvtsi2ss %rcx,%xmm0
cb75(4): addss %xmm0,%xmm0
cb79(5): jmp 0xffffff2f(%rip)
cb7e(2): nop 
cb80(3): mov %rax,%rcx
cb83(4): pxor %xmm1,%xmm1
cb87(3): shr $0x1,%rcx
cb8a(3): and $0x1,%eax
cb8d(3): or %rax,%rcx
cb90(5): cvtsi2ss %rcx,%xmm1
cb95(4): addss %xmm1,%xmm1
cb99(5): jmp 0xffffff25(%rip)
cb9e(2): nop 
cba0(8): subss 0x8728(%rip),%xmm0
cba8(a): mov $0x-9223372036854775808,%rax
cbb2(5): cvttss2si %xmm0,%rsi
cbb7(3): xor %rax,%rsi
cbba(5): jmp 0xffffff3e(%rip)
cbbf(5): call 0xffff5d71(%rip)

"hash_insert" :
cbd0(1): push %rbx
cbd1(3): mov %rsi,%rbx
cbd4(4): sub $0x10,%rsp
cbd8(3): mov %rsp,%rdx
cbdb(9): mov $0x28,%rax
cbe4(5): mov %rax,0x8(%rsp)
cbe9(2): xor %eax,%eax
cbeb(5): call 0xfffffd55(%rip)
cbf0(3): cmp $0xff,%eax
cbf3(2): jz 0x2d(%rip)
cbf5(2): test %eax,%eax
cbf7(2): jnz 0x6(%rip)
cbf9(4): mov (%rsp),%rbx
cbfd(5): mov 0x8(%rsp),%rcx
cc02(9): xor $0x28,%rcx
cc0b(3): mov %rbx,%rax
cc0e(2): jnz 0x16(%rip)
cc10(4): add $0x10,%rsp
cc14(1): pop %rbx
cc15(1): ret near (%rsp)
cc16(a): nop 0x0(%rax,%rax,1)
cc20(2): xor %ebx,%ebx
cc22(2): jmp 0xffffffdb(%rip)
cc24(5): call 0xffff5d0c(%rip)

"hash_delete" :
cc30(2): push %r12
cc32(1): push %rbp
cc33(5): mov $0x1,%ecx
cc38(1): push %rbx
cc39(3): mov %rdi,%rbx
cc3c(4): sub $0x10,%rsp
cc40(3): mov %rsp,%rdx
cc43(9): mov $0x28,%rax
cc4c(5): mov %rax,0x8(%rsp)
cc51(2): xor %eax,%eax
cc53(5): call 0xffffeffd(%rip)
cc58(3): test %rax,%rax
cc5b(3): mov %rax,%rbp
cc5e(2): jz 0x11(%rip)
cc60(4): mov (%rsp),%rax
cc64(5): sub $0x1,0x20(%rbx)
cc69(4): cmp $0x0,(%rax)
cc6d(2): jz 0x23(%rip)
cc6f(5): mov 0x8(%rsp),%rcx
cc74(9): xor $0x28,%rcx
cc7d(3): mov %rbp,%rax
cc80(6): jnz 0x1ae(%rip)
cc86(4): add $0x10,%rsp
cc8a(1): pop %rbx
cc8b(1): pop %rbp
cc8c(2): pop %r12
cc8e(1): ret near (%rsp)
cc8f(1): nop 
cc90(4): mov 0x18(%rbx),%rax
cc94(4): sub $0x1,%rax
cc98(3): test %rax,%rax
cc9b(4): mov %rax,0x18(%rbx)
cc9f(6): js 0x101(%rip)
cca5(4): pxor %xmm0,%xmm0
cca9(5): cvtsi2ss %rax,%xmm0
ccae(4): mov 0x10(%rbx),%rax
ccb2(4): mov 0x28(%rbx),%rdx
ccb6(3): test %rax,%rax
ccb9(6): js 0xc7(%rip)
ccbf(4): pxor %xmm1,%xmm1
ccc3(5): cvtsi2ss %rax,%xmm1
ccc8(4): mulss (%rdx),%xmm1
cccc(3): ucomiss %xmm0,%xmm1
cccf(2): jbe 0xffffffa0(%rip)
ccd1(4): lea 0x28(%rbx),%rdi
ccd5(5): call 0xfffff09b(%rip)
ccda(4): mov 0x10(%rbx),%rax
ccde(4): mov 0x28(%rbx),%rdx
cce2(3): test %rax,%rax
cce5(6): js 0x12b(%rip)
cceb(4): pxor %xmm0,%xmm0
ccef(5): cvtsi2ss %rax,%xmm0
ccf4(4): mov 0x18(%rbx),%rax
ccf8(3): test %rax,%rax
ccfb(6): js 0xf5(%rip)
cd01(4): pxor %xmm1,%xmm1
cd05(5): cvtsi2ss %rax,%xmm1
cd0a(4): movss (%rdx),%xmm2
cd0e(4): mulss %xmm0,%xmm2
cd12(3): ucomiss %xmm1,%xmm2
cd15(6): jbe 0xffffff5a(%rip)
cd1b(4): cmp $0x0,0x10(%rdx)
cd1f(5): mulss 0x4(%rdx),%xmm0
cd24(6): jz 0xbc(%rip)
cd2a(7): ucomiss 0x859f(%rip),%xmm0
cd31(6): jnb 0x8f(%rip)
cd37(5): cvttss2si %xmm0,%rsi
cd3c(3): mov %rbx,%rdi
cd3f(5): call 0xfffff9c1(%rip)
cd44(2): test %al,%al
cd46(6): jnz 0xffffff29(%rip)
cd4c(4): mov 0x48(%rbx),%rdi
cd50(3): test %rdi,%rdi
cd53(2): jz 0x16(%rip)
cd55(3): nop (%rax)
cd58(4): mov 0x8(%rdi),%r12
cd5c(5): call 0xffff60b4(%rip)
cd61(3): test %r12,%r12
cd64(3): mov %r12,%rdi
cd67(2): jnz 0xfffffff1(%rip)
cd69(8): mov $0x0,0x48(%rbx)
cd71(5): jmp 0xfffffefe(%rip)
cd76(a): nop 0x0(%rax,%rax,1)
cd80(3): mov %rax,%rcx
cd83(4): pxor %xmm1,%xmm1
cd87(3): shr $0x1,%rcx
cd8a(3): and $0x1,%eax
cd8d(3): or %rax,%rcx
cd90(5): cvtsi2ss %rcx,%xmm1
cd95(4): addss %xmm1,%xmm1
cd99(5): jmp 0xffffff2f(%rip)
cd9e(2): nop 
cda0(3): mov %rax,%rdx
cda3(4): pxor %xmm0,%xmm0
cda7(3): shr $0x1,%rdx
cdaa(3): and $0x1,%eax
cdad(3): or %rax,%rdx
cdb0(5): cvtsi2ss %rdx,%xmm0
cdb5(4): addss %xmm0,%xmm0
cdb9(5): jmp 0xfffffef5(%rip)
cdbe(2): nop 
cdc0(8): subss 0x8508(%rip),%xmm0
cdc8(a): mov $0x-9223372036854775808,%rax
cdd2(5): cvttss2si %xmm0,%rsi
cdd7(3): xor %rax,%rsi
cdda(5): jmp 0xffffff62(%rip)
cddf(1): nop 
cde0(5): mulss 0x8(%rdx),%xmm0
cde5(5): jmp 0xffffff45(%rip)
cdea(6): nop 0x0(%rax,%rax,1)
cdf0(3): mov %rax,%rcx
cdf3(4): pxor %xmm1,%xmm1
cdf7(3): shr $0x1,%rcx
cdfa(3): and $0x1,%eax
cdfd(3): or %rax,%rcx
ce00(5): cvtsi2ss %rcx,%xmm1
ce05(4): addss %xmm1,%xmm1
ce09(5): jmp 0xffffff01(%rip)
ce0e(2): nop 
ce10(3): mov %rax,%rcx
ce13(4): pxor %xmm0,%xmm0
ce17(3): shr $0x1,%rcx
ce1a(3): and $0x1,%eax
ce1d(3): or %rax,%rcx
ce20(5): cvtsi2ss %rcx,%xmm0
ce25(4): addss %xmm0,%xmm0
ce29(5): jmp 0xfffffecb(%rip)
ce2e(5): call 0xffff5b02(%rip)

"triple_hash" :
ce40(1): push %rbp
ce41(1): push %rbx
ce42(3): mov %rdi,%rbp
ce45(3): mov %rsi,%rbx
ce48(4): sub $0x8,%rsp
ce4c(3): mov (%rdi),%rdi
ce4f(5): call 0x48b1(%rip)
ce54(4): xor 0x8(%rbp),%rax
ce58(2): xor %edx,%edx
ce5a(4): add $0x8,%rsp
ce5e(3): div %rbx,%rax
ce61(1): pop %rbx
ce62(1): pop %rbp
ce63(3): mov %rdx,%rax
ce66(1): ret near (%rsp)

"triple_hash_no_name" :
ce70(4): mov 0x8(%rdi),%rax
ce74(2): xor %edx,%edx
ce76(3): div %rsi,%rax
ce79(3): mov %rdx,%rax
ce7c(1): ret near (%rsp)

"triple_compare" :
ce80(2): xor %eax,%eax
ce82(4): mov 0x8(%rsi),%rdx
ce86(4): cmp %rdx,0x8(%rdi)
ce8a(2): jz 0x6(%rip)
ce8c(2): REP ret near (%rsp)
ce8e(2): nop 
ce90(4): mov 0x10(%rsi),%rcx
ce94(4): cmp %rcx,0x10(%rdi)
ce98(2): jnz 0xfffffff4(%rip)
ce9a(4): sub $0x8,%rsp
ce9e(3): mov (%rsi),%rsi
cea1(3): mov (%rdi),%rdi
cea4(5): call 0x239c(%rip)
cea9(4): add $0x8,%rsp
cead(1): ret near (%rsp)

"triple_compare_ino_str" :
ceb0(2): xor %eax,%eax
ceb2(4): mov 0x8(%rsi),%rdx
ceb6(4): cmp %rdx,0x8(%rdi)
ceba(2): jz 0x6(%rip)
cebc(2): REP ret near (%rsp)
cebe(2): nop 
cec0(4): mov 0x10(%rsi),%rcx
cec4(4): cmp %rcx,0x10(%rdi)
cec8(2): jnz 0xfffffff4(%rip)
ceca(4): sub $0x8,%rsp
cece(3): mov (%rsi),%rsi
ced1(3): mov (%rdi),%rdi
ced4(5): call 0xffff5c1c(%rip)
ced9(2): test %eax,%eax
cedb(3): setz %al
cede(4): add $0x8,%rsp
cee2(1): ret near (%rsp)

"triple_free" :
cef0(1): push %rbx
cef1(3): mov %rdi,%rbx
cef4(3): mov (%rdi),%rdi
cef7(5): call 0xffff5f19(%rip)
cefc(3): mov %rbx,%rdi
ceff(1): pop %rbx
cf00(5): jmp 0xffff5f10(%rip)

"opendirat" :
cf10(2): push %r13
cf12(2): push %r12
cf14(6): or $0x90900,%edx
cf1a(1): push %rbp
cf1b(1): push %rbx
cf1c(2): xor %eax,%eax
cf1e(3): mov %rcx,%r12
cf21(4): sub $0x8,%rsp
cf25(5): call 0x485b(%rip)
cf2a(2): test %eax,%eax
cf2c(2): js 0x54(%rip)
cf2e(2): mov %eax,%edi
cf30(2): mov %eax,%ebx
cf32(5): call 0xffff5dee(%rip)
cf37(3): test %rax,%rax
cf3a(3): mov %rax,%rbp
cf3d(2): jz 0x1b(%rip)
cf3f(4): mov %ebx,(%r12)
cf43(4): add $0x8,%rsp
cf47(3): mov %rbp,%rax
cf4a(1): pop %rbx
cf4b(1): pop %rbp
cf4c(2): pop %r12
cf4e(2): pop %r13
cf50(1): ret near (%rsp)
cf51(7): nop 0x0(%rax)
cf58(5): call 0xffff5818(%rip)
cf5d(3): mov (%rax),%r13d
cf60(3): mov %rax,%r12
cf63(2): mov %ebx,%edi
cf65(5): call 0xffff5acb(%rip)
cf6a(3): mov %rbp,%rax
cf6d(4): mov %r13d,(%r12)
cf71(4): add $0x8,%rsp
cf75(1): pop %rbx
cf76(1): pop %rbp
cf77(2): pop %r12
cf79(2): pop %r13
cf7b(1): ret near (%rsp)
cf7c(4): nop 0x0(%rax)
cf80(4): add $0x8,%rsp
cf84(2): xor %ebp,%ebp
cf86(1): pop %rbx
cf87(3): mov %rbp,%rax
cf8a(1): pop %rbp
cf8b(2): pop %r12
cf8d(2): pop %r13
cf8f(1): ret near (%rsp)

"set_program_name" :
cf90(3): test %rdi,%rdi
cf93(1): push %rbx
cf94(2): jz 0x79(%rip)
cf96(5): mov $0x2f,%esi
cf9b(3): mov %rdi,%rbx
cf9e(5): call 0xffff5a02(%rip)
cfa3(3): test %rax,%rax
cfa6(2): jz 0x57(%rip)
cfa8(4): lea 0x1(%rax),%r8
cfac(3): mov %r8,%rdx
cfaf(3): sub %rbx,%rdx
cfb2(4): cmp $0x6,%rdx
cfb6(2): jle 0x47(%rip)
cfb8(4): lea 0xfffffffa(%rax),%rsi
cfbc(7): lea 0x8355(%rip),%rdi
cfc3(5): mov $0x7,%ecx
cfc8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
cfca(3): setnbe %dl
cfcd(3): sbb $0x0,%dl
cfd0(2): test %dl,%dl
cfd2(2): jnz 0x2b(%rip)
cfd4(7): lea 0x8345(%rip),%rdi
cfdb(5): mov $0x3,%ecx
cfe0(3): mov %r8,%rsi
cfe3(3): mov %r8,%rbx
cfe6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
cfe8(3): setnbe %dl
cfeb(3): sbb $0x0,%dl
cfee(2): test %dl,%dl
cff0(2): jnz 0xd(%rip)
cff2(4): lea 0x4(%rax),%rbx
cff6(7): mov %rbx,0x20d0a3(%rip)
cffd(7): mov %rbx,0x20d59c(%rip)
d004(7): mov %rbx,0x20d0bd(%rip)
d00b(1): pop %rbx
d00c(1): ret near (%rsp)
d00d(7): mov 0x20d0cc(%rip),%rcx
d014(7): lea 0x82c5(%rip),%rdi
d01b(5): mov $0x37,%edx
d020(5): mov $0x1,%esi
d025(5): call 0xffff5d7b(%rip)
d02a(5): call 0xffff5736(%rip)

"qcopy_acl" :
d030(2): push %r12
d032(1): push %rbp
d033(3): mov %ecx,%r12d
d036(1): push %rbx
d037(3): mov %rdx,%rbp
d03a(3): mov %r8d,%edx
d03d(4): sub $0x10,%rsp
d041(5): lea 0x4(%rsp),%rbx
d046(9): mov $0x28,%rax
d04f(5): mov %rax,0x8(%rsp)
d054(2): xor %eax,%eax
d056(3): mov %rbx,%rcx
d059(5): call 0x4467(%rip)
d05e(2): test %eax,%eax
d060(2): jnz 0x38(%rip)
d062(3): mov %rbp,%rsi
d065(3): mov %rbx,%rdi
d068(3): mov %r12d,%edx
d06b(5): call 0x4485(%rip)
d070(3): mov %rbx,%rdi
d073(2): mov %eax,%ebp
d075(5): call 0x443b(%rip)
d07a(5): mov 0x8(%rsp),%rcx
d07f(9): xor $0x28,%rcx
d088(2): mov %ebp,%eax
d08a(2): jnz 0x15(%rip)
d08c(4): add $0x10,%rsp
d090(1): pop %rbx
d091(1): pop %rbp
d092(2): pop %r12
d094(1): ret near (%rsp)
d095(3): nop (%rax)
d098(5): mov $0xfffffffe,%ebp
d09d(2): jmp 0xffffffdd(%rip)
d09f(5): call 0xffff5891(%rip)

"qset_acl" :
d0b0(1): push %rbp
d0b1(1): push %rbx
d0b2(4): sub $0x18,%rsp
d0b6(5): lea 0x4(%rsp),%rbx
d0bb(4): mov %edx,0x4(%rsp)
d0bf(2): mov %esi,%edx
d0c1(3): mov %rdi,%rsi
d0c4(3): mov %rbx,%rdi
d0c7(9): mov $0x28,%rax
d0d0(5): mov %rax,0x8(%rsp)
d0d5(2): xor %eax,%eax
d0d7(5): call 0x4419(%rip)
d0dc(3): mov %rbx,%rdi
d0df(2): mov %eax,%ebp
d0e1(5): call 0x43cf(%rip)
d0e6(5): mov 0x8(%rsp),%rcx
d0eb(9): xor $0x28,%rcx
d0f4(2): jnz 0xb(%rip)
d0f6(4): add $0x18,%rsp
d0fa(2): mov %ebp,%eax
d0fc(1): pop %rbx
d0fd(1): pop %rbp
d0fe(1): ret near (%rsp)
d0ff(5): call 0xffff5831(%rip)

"gettext_quote.part.1" :
d110(1): push %rbp
d111(1): push %rbx
d112(3): mov %rdi,%rbp
d115(2): mov %esi,%ebx
d117(4): sub $0x8,%rsp
d11b(5): call 0x4625(%rip)
d120(3): movzx (%rax),%edx
d123(3): and $0xdf,%edx
d126(3): cmp $0x55,%dl
d129(2): jz 0x77(%rip)
d12b(3): cmp $0x47,%dl
d12e(2): jz 0x22(%rip)
d130(7): lea 0x81fc(%rip),%rax
d137(7): lea 0x81f7(%rip),%rdx
d13e(3): cmp $0x9,%ebx
d141(4): cmovne %rdx,%rax
d145(4): add $0x8,%rsp
d149(1): pop %rbx
d14a(1): pop %rbp
d14b(1): ret near (%rsp)
d14c(4): nop 0x0(%rax)
d150(4): movzx 0x1(%rax),%edx
d154(3): and $0xdf,%edx
d157(3): cmp $0x42,%dl
d15a(2): jnz 0xffffffd6(%rip)
d15c(4): cmp $0x31,0x2(%rax)
d160(2): jnz 0xffffffd0(%rip)
d162(4): cmp $0x38,0x3(%rax)
d166(2): jnz 0xffffffca(%rip)
d168(4): cmp $0x30,0x4(%rax)
d16c(2): jnz 0xffffffc4(%rip)
d16e(4): cmp $0x33,0x5(%rax)
d172(2): jnz 0xffffffbe(%rip)
d174(4): cmp $0x30,0x6(%rax)
d178(2): jnz 0xffffffb8(%rip)
d17a(4): cmp $0x0,0x7(%rax)
d17e(2): jnz 0xffffffb2(%rip)
d180(4): cmp $0x60,0x0(%rbp)
d184(7): lea 0x81a1(%rip),%rax
d18b(7): lea 0x819e(%rip),%rdx
d192(4): cmovne %rdx,%rax
d196(4): add $0x8,%rsp
d19a(1): pop %rbx
d19b(1): pop %rbp
d19c(1): ret near (%rsp)
d19d(3): nop (%rax)
d1a0(4): movzx 0x1(%rax),%edx
d1a4(3): and $0xdf,%edx
d1a7(3): cmp $0x54,%dl
d1aa(2): jnz 0xffffff86(%rip)
d1ac(4): movzx 0x2(%rax),%edx
d1b0(3): and $0xdf,%edx
d1b3(3): cmp $0x46,%dl
d1b6(6): jnz 0xffffff7a(%rip)
d1bc(4): cmp $0x2d,0x3(%rax)
d1c0(6): jnz 0xffffff70(%rip)
d1c6(4): cmp $0x38,0x4(%rax)
d1ca(6): jnz 0xffffff66(%rip)
d1d0(4): cmp $0x0,0x5(%rax)
d1d4(6): jnz 0xffffff5c(%rip)
d1da(4): cmp $0x60,0x0(%rbp)
d1de(7): lea 0x813f(%rip),%rax
d1e5(7): lea 0x813c(%rip),%rdx
d1ec(4): cmovne %rdx,%rax
d1f0(4): add $0x8,%rsp
d1f4(1): pop %rbx
d1f5(1): pop %rbp
d1f6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
d200(2): push %r15
d202(2): push %r14
d204(3): mov %r8d,%r15d
d207(2): push %r13
d209(2): push %r12
d20b(3): mov %rdi,%r14
d20e(1): push %rbp
d20f(1): push %rbx
d210(3): mov %r9d,%ebx
d213(3): mov %rsi,%r13
d216(3): mov %rcx,%rbp
d219(3): and $0x2,%ebx
d21c(7): sub $0xb8,%rsp
d223(8): mov 0xf0(%rsp),%rax
d22b(5): mov %rdx,0x10(%rsp)
d230(5): mov %r8d,0x8(%rsp)
d235(5): mov %r9d,0x78(%rsp)
d23a(5): mov %rax,0x20(%rsp)
d23f(8): mov 0xf8(%rsp),%rax
d247(5): mov %rax,0x68(%rsp)
d24c(8): mov 0x100(%rsp),%rax
d254(5): mov %rax,0x60(%rsp)
d259(9): mov $0x28,%rax
d262(8): mov %rax,0xa8(%rsp)
d26a(2): xor %eax,%eax
d26c(5): call 0xffff5684(%rip)
d271(4): cmp $0xa,%r15d
d275(5): mov %rax,0x58(%rsp)
d27a(6): jnbe 0x11b5(%rip)
d280(7): lea 0x8119(%rip),%rcx
d287(3): mov %r15d,%edx
d28a(4): movsxd 0x0(%rcx,%rdx,4),%rax
d28e(3): add %rcx,%rax
d291(2): jmp %rax
d293(5): mov $0x1,0xe(%rsp)
d298(5): mov $0x0,0x7c(%rsp)
d29d(3): xor %r12d,%r12d
d2a0(9): mov $0x0,0x50(%rsp)
d2a9(5): mov $0x1,0xf(%rsp)
d2ae(5): mov $0x0,0xd(%rsp)
d2b3(7): lea 0x807b(%rip),%rax
d2ba(9): mov $0x1,0x18(%rsp)
d2c3(3): xor %r15d,%r15d
d2c6(8): mov $0x2,0x8(%rsp)
d2ce(5): mov %rax,0x48(%rsp)
d2d3(3): xor %r11d,%r11d
d2d6(3): mov %rbp,%rax
d2d9(3): mov %r12d,%r8d
d2dc(3): mov %r11,%rbp
d2df(3): mov %rax,%r11
d2e2(6): nop 0x0(%rax,%rax,1)
d2e8(3): cmp %rbp,%r11
d2eb(4): setnz %r12b
d2ef(4): cmp $0xffffffff,%r11
d2f3(2): jnz 0xf(%rip)
d2f5(5): mov 0x10(%rsp),%rax
d2fa(4): cmp $0x0,0x0(%rax,%rbp,1)
d2fe(4): setnz %r12b
d302(3): test %r12b,%r12b
d305(6): jz 0x65b(%rip)
d30b(5): cmp $0x2,0x8(%rsp)
d310(5): mov 0x10(%rsp),%rdi
d315(4): lea 0x0(%rdi,%rbp,1),%r9
d319(3): setnz %al
d31c(4): and 0xd(%rsp),%al
d320(3): mov %eax,%r10d
d323(6): jz 0xad(%rip)
d329(5): mov 0x18(%rsp),%rax
d32e(3): test %rax,%rax
d331(6): jz 0x42f(%rip)
d337(4): cmp $0xffffffff,%r11
d33b(5): lea 0x0(%rbp,%rax,1),%rbx
d340(2): jnz 0x30(%rip)
d342(4): cmp $0x1,%rax
d346(2): jbe 0x2a(%rip)
d348(5): mov %r8b,0x38(%rsp)
d34d(5): mov %r10b,0x30(%rsp)
d352(5): mov %r9,0x28(%rsp)
d357(5): call 0xffff55a9(%rip)
d35c(6): movzx 0x38(%rsp),%r8d
d362(6): movzx 0x30(%rsp),%r10d
d368(3): mov %rax,%r11
d36b(5): mov 0x28(%rsp),%r9
d370(3): cmp %r11,%rbx
d373(5): mov %r10b,0x28(%rsp)
d378(6): jnbe 0x5b8(%rip)
d37e(5): mov 0x18(%rsp),%rdx
d383(5): mov 0x48(%rsp),%rsi
d388(3): mov %r9,%rdi
d38b(5): mov %r11,0x40(%rsp)
d390(5): mov %r8b,0x38(%rsp)
d395(5): mov %r9,0x30(%rsp)
d39a(5): call 0xffff56f6(%rip)
d39f(2): test %eax,%eax
d3a1(5): mov 0x30(%rsp),%r9
d3a6(6): movzx 0x38(%rsp),%r8d
d3ac(5): mov 0x40(%rsp),%r11
d3b1(6): jnz 0x57f(%rip)
d3b7(5): cmp $0x0,0xf(%rsp)
d3bc(6): movzx 0x28(%rsp),%r10d
d3c2(6): jnz 0xf83(%rip)
d3c8(8): nop 0x0(%rax,%rax,1)
d3d0(4): movzx (%r9),%ebx
d3d4(3): cmp $0x7e,%bl
d3d7(6): jnbe 0x321(%rip)
d3dd(7): lea 0x7fe8(%rip),%rcx
d3e4(3): movzx %bl,%edx
d3e7(4): movsxd 0x0(%rcx,%rdx,4),%rax
d3eb(3): add %rcx,%rax
d3ee(2): jmp %rax
d3f0(3): xor %r10d,%r10d
d3f3(4): cmp $0x1,%r11
d3f7(3): setnz %al
d3fa(4): cmp $0xffffffff,%r11
d3fe(2): jnz 0xe(%rip)
d400(5): mov 0x10(%rsp),%rax
d405(4): cmp $0x0,0x1(%rax)
d409(3): setnz %al
d40c(5): cmp $0x2,0x8(%rsp)
d411(3): setz %dl
d414(2): test %al,%al
d416(6): jz 0x252(%rip)
d41c(3): xor %r12d,%r12d
d41f(2): xor %eax,%eax
d421(7): nop 0x0(%rax)
d428(5): cmp $0x1,0xd(%rsp)
d42d(6): jnz 0x115(%rip)
d433(2): test %dl,%dl
d435(6): jnz 0x10d(%rip)
d43b(5): mov 0x20(%rsp),%rsi
d440(3): test %rsi,%rsi
d443(2): jz 0x16(%rip)
d445(2): mov %ebx,%edx
d447(3): shr $0x5,%dl
d44a(3): movzx %dl,%edx
d44d(3): mov 0x0(%rsi,%rdx,4),%edx
d450(3): bt %ebx,%edx
d453(6): jb 0x150(%rip)
d459(3): test %r10b,%r10b
d45c(6): jnz 0x147(%rip)
d462(3): xor $0x1,%eax
d465(4): add $0x1,%rbp
d469(3): and %r8d,%eax
d46c(2): test %al,%al
d46e(2): jz 0x22(%rip)
d470(3): cmp %r15,%r13
d473(2): jbe 0x7(%rip)
d475(5): mov $0x27,0x0(%r14,%r15,1)
d47a(4): lea 0x1(%r15),%rax
d47e(3): cmp %rax,%r13
d481(2): jbe 0x8(%rip)
d483(6): mov $0x27,0x1(%r14,%r15,1)
d489(4): add $0x2,%r15
d48d(3): xor %r8d,%r8d
d490(3): cmp %r13,%r15
d493(2): jnb 0x6(%rip)
d495(4): mov %bl,0x0(%r14,%r15,1)
d499(5): movzx 0xe(%rsp),%edi
d49e(4): add $0x1,%r15
d4a2(5): mov $0x0,%eax
d4a7(3): test %r12b,%r12b
d4aa(3): cmove %eax,%edi
d4ad(5): mov %dil,0xe(%rsp)
d4b2(5): jmp 0xfffffe36(%rip)
d4b7(9): nop 0x0(%rax,%rax,1)
d4c0(3): xor %r10d,%r10d
d4c3(4): mov 0x8(%rsp),%eax
d4c7(3): cmp $0x2,%eax
d4ca(6): jz 0x5be(%rip)
d4d0(3): cmp $0x5,%eax
d4d3(6): jz 0x575(%rip)
d4d9(3): cmp $0x2,%eax
d4dc(5): mov $0x3f,%ebx
d4e1(3): setz %dl
d4e4(3): xor %r12d,%r12d
d4e7(2): xor %eax,%eax
d4e9(5): jmp 0xffffff3f(%rip)
d4ee(2): nop 
d4f0(3): xor %r10d,%r10d
d4f3(5): cmp $0x2,0x8(%rsp)
d4f8(6): jz 0x508(%rip)
d4fe(5): mov %r12b,0x7c(%rsp)
d503(2): xor %edx,%edx
d505(2): xor %eax,%eax
d507(5): mov $0x27,%ebx
d50c(5): jmp 0xffffff1c(%rip)
d511(7): nop 0x0(%rax)
d518(5): mov $0x9,%edx
d51d(5): mov $0x74,%ebx
d522(5): cmp $0x2,0x8(%rsp)
d527(3): setz %al
d52a(4): and 0xf(%rsp),%al
d52e(6): jnz 0x150(%rip)
d534(5): cmp $0x0,0xd(%rsp)
d539(2): jnz 0x67(%rip)
d53b(2): mov %edx,%ebx
d53d(3): xor %r12d,%r12d
d540(2): xor %eax,%eax
d542(5): cmp $0x0,0xf(%rsp)
d547(6): jnz 0xfffffef4(%rip)
d54d(5): jmp 0xffffff0c(%rip)
d552(6): nop 0x0(%rax,%rax,1)
d558(5): mov $0x8,%edx
d55d(5): mov $0x62,%ebx
d562(2): jmp 0xffffffd2(%rip)
d564(4): nop 0x0(%rax)
d568(5): cmp $0x2,0x8(%rsp)
d56d(6): jz 0x3d3(%rip)
d573(5): cmp $0x0,0xd(%rsp)
d578(6): jz 0x218(%rip)
d57e(5): cmp $0x0,0xf(%rsp)
d583(6): jz 0x20d(%rip)
d589(6): cmp $0x0,0x18(%rsp)
d58f(6): jnz 0x3bc(%rip)
d595(5): mov $0x5c,%ebx
d59a(6): nop 0x0(%rax,%rax,1)
d5a0(3): xor %r12d,%r12d
d5a3(5): cmp $0x2,0x8(%rsp)
d5a8(3): setz %dl
d5ab(5): cmp $0x0,0xf(%rsp)
d5b0(2): mov %edx,%eax
d5b2(6): jnz 0x856(%rip)
d5b8(3): mov %r8d,%eax
d5bb(3): xor $0x1,%eax
d5be(2): and %dl,%al
d5c0(2): jz 0x31(%rip)
d5c2(3): cmp %r15,%r13
d5c5(2): jbe 0x7(%rip)
d5c7(5): mov $0x27,0x0(%r14,%r15,1)
d5cc(4): lea 0x1(%r15),%rdx
d5d0(3): cmp %rdx,%r13
d5d3(2): jbe 0x8(%rip)
d5d5(6): mov $0x24,0x1(%r14,%r15,1)
d5db(4): lea 0x2(%r15),%rdx
d5df(3): cmp %rdx,%r13
d5e2(2): jbe 0x8(%rip)
d5e4(6): mov $0x27,0x2(%r14,%r15,1)
d5ea(4): add $0x3,%r15
d5ee(3): mov %eax,%r8d
d5f1(3): cmp %r15,%r13
d5f4(2): jbe 0x7(%rip)
d5f6(5): mov $0x5c,0x0(%r14,%r15,1)
d5fb(4): add $0x1,%r15
d5ff(4): add $0x1,%rbp
d603(5): jmp 0xfffffe8d(%rip)
d608(8): nop 0x0(%rax,%rax,1)
d610(5): cmp $0x0,0xd(%rsp)
d615(6): jnz 0x1ce(%rip)
d61b(2): xor %edx,%edx
d61d(5): test $0x1,0x78(%rsp)
d622(6): jz 0xffffff19(%rip)
d628(4): add $0x1,%rbp
d62c(5): jmp 0xfffffcbc(%rip)
d631(7): nop 0x0(%rax)
d638(5): cmp $0x2,0x8(%rsp)
d63d(3): setz %dl
d640(2): xor %eax,%eax
d642(5): jmp 0xfffffde6(%rip)
d647(9): nop 0x0(%rax,%rax,1)
d650(5): mov $0x7,%edx
d655(5): mov $0x61,%ebx
d65a(5): jmp 0xfffffeda(%rip)
d65f(1): nop 
d660(5): cmp $0x2,0x8(%rsp)
d665(3): setz %dl
d668(3): test %rbp,%rbp
d66b(6): jnz 0xfffffdb1(%rip)
d671(5): movzx 0xf(%rsp),%eax
d676(2): and %dl,%al
d678(6): jz 0xfffffdb0(%rip)
d67e(3): mov %r11,%rbp
d681(8): mov $0x2,0x8(%rsp)
d689(5): jmp 0x700(%rip)
d68e(2): nop 
d690(5): cmp $0x2,0x8(%rsp)
d695(3): setz %dl
d698(3): xor %r12d,%r12d
d69b(2): jmp 0xffffffd6(%rip)
d69d(3): nop (%rax)
d6a0(5): cmp $0x2,0x8(%rsp)
d6a5(5): mov $0x20,%ebx
d6aa(3): setz %dl
d6ad(2): jmp 0xffffffc4(%rip)
d6af(1): nop 
d6b0(5): mov $0xd,%edx
d6b5(5): mov $0x72,%ebx
d6ba(5): jmp 0xfffffe68(%rip)
d6bf(1): nop 
d6c0(5): mov $0xc,%edx
d6c5(5): mov $0x66,%ebx
d6ca(5): jmp 0xfffffe6a(%rip)
d6cf(1): nop 
d6d0(5): mov $0xb,%edx
d6d5(5): mov $0x76,%ebx
d6da(5): jmp 0xfffffe5a(%rip)
d6df(1): nop 
d6e0(5): mov $0xa,%edx
d6e5(5): mov $0x6e,%ebx
d6ea(5): jmp 0xfffffe38(%rip)
d6ef(1): nop 
d6f0(3): xor %r10d,%r10d
d6f3(5): nop 0x0(%rax,%rax,1)
d6f8(6): cmp $0x1,0x58(%rsp)
d6fe(6): jnz 0x3aa(%rip)
d704(5): mov %r11,0x38(%rsp)
d709(5): mov %r8b,0x30(%rsp)
d70e(5): mov %r10b,0x28(%rsp)
d713(5): call 0xffff56ed(%rip)
d718(3): mov (%rax),%rcx
d71b(3): movzx %bl,%edx
d71e(6): movzx 0x28(%rsp),%r10d
d724(6): movzx 0x30(%rsp),%r8d
d72a(5): mov 0x38(%rsp),%r11
d72f(5): mov $0x1,%edi
d734(4): movzx 0x0(%rcx,%rdx,2),%eax
d738(4): and $0x4000,%ax
d73c(4): setnz %r12b
d740(3): setz %al
d743(4): and 0xd(%rsp),%al
d747(2): test %al,%al
d749(6): jnz 0x998(%rip)
d74f(5): cmp $0x2,0x8(%rsp)
d754(3): setz %dl
d757(5): jmp 0xfffffcd1(%rip)
d75c(4): nop 0x0(%rax)
d760(4): movzx (%r9),%ebx
d764(3): cmp $0x7e,%bl
d767(2): jnbe 0xffffff89(%rip)
d769(7): lea 0x7e58(%rip),%rcx
d770(3): movzx %bl,%edx
d773(4): movsxd 0x0(%rcx,%rdx,4),%rax
d777(3): add %rcx,%rax
d77a(2): jmp %rax
d77c(4): nop 0x0(%rax)
d780(3): xor %r10d,%r10d
d783(5): cmp $0x0,0xd(%rsp)
d788(6): jnz 0xfffffdf6(%rip)
d78e(2): nop 
d790(5): mov $0x5c,%edx
d795(5): mov $0x5c,%ebx
d79a(5): jmp 0xfffffd9a(%rip)
d79f(1): nop 
d7a0(5): mov $0xc,%edx
d7a5(3): xor %r10d,%r10d
d7a8(5): mov $0x66,%ebx
d7ad(5): jmp 0xfffffd87(%rip)
d7b2(6): nop 0x0(%rax,%rax,1)
d7b8(5): mov $0xa,%edx
d7bd(3): xor %r10d,%r10d
d7c0(5): mov $0x6e,%ebx
d7c5(5): jmp 0xfffffd5d(%rip)
d7ca(6): nop 0x0(%rax,%rax,1)
d7d0(5): mov $0x61,%ebx
d7d5(5): jmp 0xfffffdcb(%rip)
d7da(6): nop 0x0(%rax,%rax,1)
d7e0(3): xor %r10d,%r10d
d7e3(5): cmp $0x2,0x8(%rsp)
d7e8(3): setz %dl
d7eb(5): cmp $0x0,0xf(%rsp)
d7f0(6): jnz 0xb9a(%rip)
d7f6(3): mov %r8d,%eax
d7f9(3): mov %r15,%rcx
d7fc(3): xor $0x1,%eax
d7ff(2): and %dl,%al
d801(2): jz 0x2f(%rip)
d803(3): cmp %r15,%r13
d806(2): jbe 0x7(%rip)
d808(5): mov $0x27,0x0(%r14,%r15,1)
d80d(4): lea 0x1(%r15),%rcx
d811(3): cmp %rcx,%r13
d814(2): jbe 0x8(%rip)
d816(6): mov $0x24,0x1(%r14,%r15,1)
d81c(4): lea 0x2(%r15),%rcx
d820(3): cmp %rcx,%r13
d823(6): jnbe 0x636(%rip)
d829(4): lea 0x3(%r15),%rcx
d82d(3): mov %eax,%r8d
d830(3): cmp %rcx,%r13
d833(2): jbe 0x7(%rip)
d835(5): mov $0x5c,0x0(%r14,%rcx,1)
d83a(5): cmp $0x2,0x8(%rsp)
d83f(4): lea 0x1(%rcx),%r15
d843(6): jz 0x606(%rip)
d849(4): lea 0x1(%rbp),%rax
d84d(3): cmp %r11,%rax
d850(2): jnb 0x1b(%rip)
d852(5): mov 0x10(%rsp),%rax
d857(5): movzx 0x1(%rax,%rbp,1),%eax
d85c(4): mov %al,0x28(%rsp)
d860(3): sub $0x30,%eax
d863(2): cmp $0x9,%al
d865(6): jbe 0x834(%rip)
d86b(3): mov %r12d,%eax
d86e(5): mov $0x30,%ebx
d873(3): xor %r12d,%r12d
d876(5): jmp 0xfffffbb2(%rip)
d87b(5): nop 0x0(%rax,%rax,1)
d880(5): cmp $0x2,0x8(%rsp)
d885(3): mov %r10d,%r12d
d888(3): setz %dl
d88b(3): xor %r10d,%r10d
d88e(2): xor %eax,%eax
d890(5): jmp 0xfffffb98(%rip)
d895(3): nop (%rax)
d898(5): cmp $0x2,0x8(%rsp)
d89d(3): setz %dl
d8a0(3): xor %r10d,%r10d
d8a3(5): jmp 0xfffffdc5(%rip)
d8a8(8): nop 0x0(%rax,%rax,1)
d8b0(5): cmp $0x2,0x8(%rsp)
d8b5(3): setz %dl
d8b8(3): xor %r10d,%r10d
d8bb(3): xor %r12d,%r12d
d8be(5): jmp 0xfffffdb3(%rip)
d8c3(5): nop 0x0(%rax,%rax,1)
d8c8(5): cmp $0x2,0x8(%rsp)
d8cd(3): mov %r10d,%r12d
d8d0(5): mov $0x20,%ebx
d8d5(3): setz %dl
d8d8(3): xor %r10d,%r10d
d8db(5): jmp 0xfffffd96(%rip)
d8e0(5): mov $0xd,%edx
d8e5(3): xor %r10d,%r10d
d8e8(5): mov $0x72,%ebx
d8ed(5): jmp 0xfffffc35(%rip)
d8f2(6): nop 0x0(%rax,%rax,1)
d8f8(5): mov $0x76,%ebx
d8fd(5): jmp 0xfffffca3(%rip)
d902(6): nop 0x0(%rax,%rax,1)
d908(5): mov $0x9,%edx
d90d(3): xor %r10d,%r10d
d910(5): mov $0x74,%ebx
d915(5): jmp 0xfffffc0d(%rip)
d91a(6): nop 0x0(%rax,%rax,1)
d920(5): mov $0x62,%ebx
d925(5): jmp 0xfffffc7b(%rip)
d92a(6): nop 0x0(%rax,%rax,1)
d930(3): xor %r10d,%r10d
d933(5): jmp 0xfffffa9d(%rip)
d938(8): nop 0x0(%rax,%rax,1)
d940(5): cmp $0x0,0xf(%rsp)
d945(6): jnz 0x96b(%rip)
d94b(4): add $0x1,%rbp
d94f(3): mov %r8d,%eax
d952(3): xor %r12d,%r12d
d955(5): mov $0x5c,%ebx
d95a(5): jmp 0xfffffb12(%rip)
d95f(1): nop 
d960(5): cmp $0x2,0x8(%rsp)
d965(5): movzx 0xf(%rsp),%ebx
d96a(3): mov %r8d,%r12d
d96d(3): mov %r11,%rbp
d970(3): setz %dl
d973(2): mov %ebx,%eax
d975(3): test %r15,%r15
d978(3): setz %cl
d97b(2): and %edx,%eax
d97d(2): and %cl,%al
d97f(6): jnz 0xa67(%rip)
d985(2): mov %ebx,%eax
d987(3): xor $0x1,%eax
d98a(2): and %al,%dl
d98c(6): jz 0x970(%rip)
d992(5): cmp $0x0,0x7c(%rsp)
d997(6): jz 0x963(%rip)
d99d(5): cmp $0x0,0xe(%rsp)
d9a2(6): jnz 0x9fb(%rip)
d9a8(3): test %r13,%r13
d9ab(3): setz %al
d9ae(6): cmp $0x0,0x50(%rsp)
d9b4(3): setnz %dl
d9b7(2): and %dl,%al
d9b9(6): jz 0xa23(%rip)
d9bf(5): mov 0x50(%rsp),%r13
d9c4(7): lea 0x796a(%rip),%rbx
d9cb(4): mov $0x27,(%r14)
d9cf(8): mov $0x2,0x8(%rsp)
d9d7(6): mov $0x1,%r15d
d9dd(9): mov $0x1,0x18(%rsp)
d9e6(5): mov $0x0,0xf(%rsp)
d9eb(5): mov %rbx,0x48(%rsp)
d9f0(4): mov %al,0x7c(%rsp)
d9f4(5): jmp 0xfffff8df(%rip)
d9f9(7): nop 0x0(%rax)
da00(5): cmp $0x0,0xf(%rsp)
da05(6): jnz 0x8ab(%rip)
da0b(3): test %r13,%r13
da0e(6): jz 0x402(%rip)
da14(2): xor %edx,%edx
da16(6): cmp $0x0,0x50(%rsp)
da1c(6): jnz 0x3f4(%rip)
da22(5): mov %r13,0x50(%rsp)
da27(4): add $0x3,%r15
da2b(2): xor %eax,%eax
da2d(5): mov %r12b,0x7c(%rsp)
da32(3): xor %r8d,%r8d
da35(3): mov %rdx,%r13
da38(5): mov $0x27,%ebx
da3d(5): jmp 0xfffffa1c(%rip)
da42(6): nop 0x0(%rax,%rax,1)
da48(5): test $0x4,0x78(%rsp)
da4d(2): jz 0x23(%rip)
da4f(4): lea 0x2(%rbp),%rcx
da53(3): cmp %r11,%rcx
da56(2): jnb 0x1a(%rip)
da58(5): mov 0x10(%rsp),%rax
da5d(5): cmp $0x3f,0x1(%rax,%rbp,1)
da62(6): jz 0x790(%rip)
da68(8): nop 0x0(%rax,%rax,1)
da70(2): xor %edx,%edx
da72(3): xor %r12d,%r12d
da75(2): xor %eax,%eax
da77(5): mov $0x3f,%ebx
da7c(5): jmp 0xfffff9ac(%rip)
da81(7): nop 0x0(%rax)
da88(5): cmp $0x0,0xf(%rsp)
da8d(6): jnz 0x823(%rip)
da93(3): xor %r12d,%r12d
da96(2): xor %eax,%eax
da98(5): mov $0x3f,%ebx
da9d(5): jmp 0xfffff9bc(%rip)
daa2(6): nop 0x0(%rax,%rax,1)
daa8(8): lea 0xa0(%rsp),%rax
dab0(4): cmp $0xffffffff,%r11
dab4(c): mov $0x0,0xa0(%rsp)
dac0(5): mov %rax,0x28(%rsp)
dac5(2): jnz 0x2f(%rip)
dac7(5): mov 0x10(%rsp),%rdi
dacc(5): mov %r8b,0x40(%rsp)
dad1(5): mov %r10b,0x38(%rsp)
dad6(5): mov %r9,0x30(%rsp)
dadb(5): call 0xffff4e25(%rip)
dae0(6): movzx 0x40(%rsp),%r8d
dae6(6): movzx 0x38(%rsp),%r10d
daec(3): mov %rax,%r11
daef(5): mov 0x30(%rsp),%r9
daf4(8): lea 0x9c(%rsp),%rax
dafc(2): xor %ecx,%ecx
dafe(4): mov %bl,0x7e(%rsp)
db02(5): mov %r8b,0x7d(%rsp)
db07(3): mov %rcx,%rbx
db0a(8): mov %r9,0x88(%rsp)
db12(5): mov %rax,0x38(%rsp)
db17(5): mov %r10b,0x7f(%rsp)
db1c(8): mov %r15,0x80(%rsp)
db24(5): mov %r14,0x40(%rsp)
db29(5): mov %r13,0x70(%rsp)
db2e(5): mov %r11,0x30(%rsp)
db33(5): mov 0x10(%rsp),%rax
db38(5): lea 0x0(%rbp,%rbx,1),%r14
db3d(5): mov 0x30(%rsp),%rdx
db42(5): mov 0x28(%rsp),%rcx
db47(5): mov 0x38(%rsp),%rdi
db4c(4): lea 0x0(%rax,%r14,1),%r13
db50(3): sub %r14,%rdx
db53(3): mov %r13,%rsi
db56(5): call 0x38ca(%rip)
db5b(3): test %rax,%rax
db5e(3): mov %rax,%r15
db61(2): jz 0x50(%rip)
db63(4): cmp $0xffffffff,%rax
db67(6): jz 0x61e(%rip)
db6d(4): cmp $0xfffffffe,%rax
db71(6): jz 0x5a0(%rip)
db77(5): cmp $0x2,0x8(%rsp)
db7c(3): setz %al
db7f(4): and 0xf(%rsp),%al
db83(6): jnz 0x19d(%rip)
db89(7): mov 0x9c(%rsp),%edi
db90(5): call 0xffff5250(%rip)
db95(5): mov 0x28(%rsp),%rdi
db9a(2): test %eax,%eax
db9c(5): mov $0x0,%eax
dba1(4): cmove %eax,%r12d
dba5(3): add %r15,%rbx
dba8(5): call 0xffff5218(%rip)
dbad(2): test %eax,%eax
dbaf(2): jz 0xffffff84(%rip)
dbb1(3): mov %r12d,%edx
dbb4(3): mov %rbx,%rdi
dbb7(6): movzx 0x7d(%rsp),%r8d
dbbd(3): xor $0x1,%edx
dbc0(5): movzx 0x7e(%rsp),%ebx
dbc5(6): movzx 0x7f(%rsp),%r10d
dbcb(4): and 0xd(%rsp),%dl
dbcf(8): mov 0x80(%rsp),%r15
dbd7(5): mov 0x40(%rsp),%r14
dbdc(5): mov 0x70(%rsp),%r13
dbe1(5): mov 0x30(%rsp),%r11
dbe6(4): cmp $0x1,%rdi
dbea(6): jbe 0x601(%rip)
dbf0(3): mov %rdi,%rcx
dbf3(2): xor %esi,%esi
dbf5(6): movzx 0xf(%rsp),%r9d
dbfb(3): add %rbp,%rcx
dbfe(5): mov 0x10(%rsp),%rdi
dc03(5): jmp 0xbb(%rip)
dc08(8): nop 0x0(%rax,%rax,1)
dc10(5): cmp $0x2,0x8(%rsp)
dc15(3): setz %al
dc18(3): test %r9b,%r9b
dc1b(6): jnz 0x4b5(%rip)
dc21(3): mov %r8d,%esi
dc24(3): xor $0x1,%esi
dc27(3): and %sil,%al
dc2a(2): jz 0x31(%rip)
dc2c(3): cmp %r15,%r13
dc2f(2): jbe 0x7(%rip)
dc31(5): mov $0x27,0x0(%r14,%r15,1)
dc36(4): lea 0x1(%r15),%rsi
dc3a(3): cmp %rsi,%r13
dc3d(2): jbe 0x8(%rip)
dc3f(6): mov $0x24,0x1(%r14,%r15,1)
dc45(4): lea 0x2(%r15),%rsi
dc49(3): cmp %rsi,%r13
dc4c(2): jbe 0x8(%rip)
dc4e(6): mov $0x27,0x2(%r14,%r15,1)
dc54(4): add $0x3,%r15
dc58(3): mov %eax,%r8d
dc5b(3): cmp %r15,%r13
dc5e(2): jbe 0x7(%rip)
dc60(5): mov $0x5c,0x0(%r14,%r15,1)
dc65(4): lea 0x1(%r15),%rax
dc69(3): cmp %rax,%r13
dc6c(2): jbe 0xf(%rip)
dc6e(2): mov %ebx,%eax
dc70(3): shr $0x6,%al
dc73(3): add $0x30,%eax
dc76(5): mov %al,0x1(%r14,%r15,1)
dc7b(4): lea 0x2(%r15),%rax
dc7f(3): cmp %rax,%r13
dc82(2): jbe 0x12(%rip)
dc84(2): mov %ebx,%eax
dc86(3): shr $0x3,%al
dc89(3): and $0x7,%eax
dc8c(3): add $0x30,%eax
dc8f(5): mov %al,0x2(%r14,%r15,1)
dc94(3): and $0x7,%ebx
dc97(4): add $0x1,%rbp
dc9b(4): add $0x3,%r15
dc9f(3): add $0x30,%ebx
dca2(3): cmp %rcx,%rbp
dca5(6): jnb 0xfffff7eb(%rip)
dcab(2): mov %edx,%esi
dcad(3): cmp %r15,%r13
dcb0(2): jbe 0x6(%rip)
dcb2(4): mov %bl,0x0(%r14,%r15,1)
dcb6(4): movzx 0x0(%rdi,%rbp,1),%ebx
dcba(4): add $0x1,%r15
dcbe(2): test %dl,%dl
dcc0(6): jnz 0xffffff50(%rip)
dcc6(2): mov %esi,%eax
dcc8(3): xor $0x1,%eax
dccb(3): and %r8d,%eax
dcce(3): test %r10b,%r10b
dcd1(2): jz 0x10(%rip)
dcd3(3): cmp %r15,%r13
dcd6(2): jbe 0x7(%rip)
dcd8(5): mov $0x5c,0x0(%r14,%r15,1)
dcdd(4): add $0x1,%r15
dce1(4): add $0x1,%rbp
dce5(3): cmp %rcx,%rbp
dce8(6): jnb 0xfffff784(%rip)
dcee(2): test %al,%al
dcf0(6): jz 0x3fe(%rip)
dcf6(3): cmp %r15,%r13
dcf9(2): jbe 0x7(%rip)
dcfb(5): mov $0x27,0x0(%r14,%r15,1)
dd00(4): lea 0x1(%r15),%rax
dd04(3): cmp %rax,%r13
dd07(2): jbe 0x8(%rip)
dd09(6): mov $0x27,0x1(%r14,%r15,1)
dd0f(4): add $0x2,%r15
dd13(3): xor %r10d,%r10d
dd16(3): xor %r8d,%r8d
dd19(2): jmp 0xffffff94(%rip)
dd1b(5): nop 0x0(%rax,%rax,1)
dd20(4): cmp $0x1,%r15
dd24(6): jz 0xfffffe65(%rip)
dd2a(5): mov 0x10(%rsp),%rdi
dd2f(4): lea 0x0(%rdi,%r15,1),%rcx
dd33(5): lea 0x1(%rdi,%r14,1),%rdx
dd38(4): lea 0x0(%rcx,%r14,1),%r8
dd3c(2): jmp 0x11(%rip)
dd3e(2): nop 
dd40(4): add $0x1,%rdx
dd44(3): cmp %rdx,%r8
dd47(6): jz 0xfffffe42(%rip)
dd4d(3): movzx (%rdx),%ecx
dd50(3): sub $0x5b,%ecx
dd53(3): cmp $0x21,%cl
dd56(2): jnbe 0xffffffea(%rip)
dd58(5): mov $0x1,%esi
dd5d(3): shl/sal %cl,%rsi
dd60(3): mov %rsi,%rcx
dd63(a): mov $0x8589934635,%rsi
dd6d(3): test %rsi,%rcx
dd70(2): jz 0xffffffd0(%rip)
dd72(5): mov 0x40(%rsp),%r14
dd77(5): mov 0x70(%rsp),%r13
dd7c(5): mov 0x30(%rsp),%rbp
dd81(8): mov $0x2,0x8(%rsp)
dd89(5): cmp $0x0,0xd(%rsp)
dd8e(2): jz 0x12(%rip)
dd90(2): test %al,%al
dd92(5): mov $0x4,%eax
dd97(5): cmove 0x8(%rsp),%eax
dd9c(4): mov %eax,0x8(%rsp)
dda0(4): sub $0x8,%rsp
dda4(3): mov %rbp,%rcx
dda7(3): mov %r13,%rsi
ddaa(4): push 0x68(%rsp)
ddae(4): push 0x78(%rsp)
ddb2(3): mov %r14,%rdi
ddb5(2): push $0x0
ddb7(8): mov 0x98(%rsp),%r9d
ddbf(5): mov 0x28(%rsp),%r8d
ddc4(5): mov 0x30(%rsp),%rdx
ddc9(4): and $0xfd,%r9d
ddcd(5): call 0xfffff433(%rip)
ddd2(4): add $0x20,%rsp
ddd6(3): mov %rax,%r15
ddd9(8): mov 0xa8(%rsp),%rbx
dde1(9): xor $0x28,%rbx
ddea(3): mov %r15,%rax
dded(6): jnz 0x606(%rip)
ddf3(7): add $0xb8,%rsp
ddfa(1): pop %rbx
ddfb(1): pop %rbp
ddfc(2): pop %r12
ddfe(2): pop %r13
de00(2): pop %r14
de02(2): pop %r15
de04(1): ret near (%rsp)
de05(3): nop (%rax)
de08(3): mov %r11,%rbp
de0b(5): jmp 0xffffff7e(%rip)
de10(3): cmp %r15,%r13
de13(2): jbe 0x7(%rip)
de15(5): mov $0x27,0x0(%r14,%r15,1)
de1a(4): lea 0x1(%r15),%rax
de1e(3): cmp %rax,%r13
de21(2): jbe 0x8(%rip)
de23(6): mov $0x5c,0x1(%r14,%r15,1)
de29(4): lea 0x2(%r15),%rax
de2d(3): cmp %rax,%r13
de30(6): jbe 0x5f2(%rip)
de36(3): mov %r13,%rdx
de39(6): mov $0x27,0x2(%r14,%r15,1)
de3f(5): mov 0x50(%rsp),%r13
de44(5): jmp 0xfffffbde(%rip)
de49(3): mov %r12d,%eax
de4c(5): mov $0x30,%ebx
de51(3): xor %r12d,%r12d
de54(5): jmp 0xfffff605(%rip)
de59(6): mov $0x27,0x2(%r14,%r15,1)
de5f(5): jmp 0xfffff9ca(%rip)
de64(2): test %ebx,%ebx
de66(6): jnz 0xfffff42d(%rip)
de6c(5): mov $0x1,0xd(%rsp)
de71(3): test %r13,%r13
de74(6): jnz 0x596(%rip)
de7a(7): lea 0x74b4(%rip),%rax
de81(9): mov $0x0,0x50(%rsp)
de8a(5): mov $0x1,0xe(%rsp)
de8f(5): mov $0x0,0x7c(%rsp)
de94(3): xor %r12d,%r12d
de97(5): mov $0x0,0xf(%rsp)
de9c(9): mov $0x1,0x18(%rsp)
dea5(5): mov %rax,0x48(%rsp)
deaa(6): mov $0x1,%r15d
deb0(8): mov $0x2,0x8(%rsp)
deb8(5): jmp 0xfffff41b(%rip)
debd(3): nop (%rax)
dec0(2): test %ebx,%ebx
dec2(6): jnz 0x3fb(%rip)
dec8(3): test %r13,%r13
decb(6): jz 0x22b(%rip)
ded1(4): mov $0x22,(%r14)
ded5(5): mov $0x1,0xe(%rsp)
deda(3): xor %r12d,%r12d
dedd(5): mov $0x0,0x7c(%rsp)
dee2(9): mov $0x0,0x50(%rsp)
deeb(7): lea 0x7441(%rip),%rax
def2(5): mov $0x0,0xf(%rsp)
def7(5): mov $0x1,0xd(%rsp)
defc(9): mov $0x1,0x18(%rsp)
df05(6): mov $0x1,%r15d
df0b(5): mov %rax,0x48(%rsp)
df10(5): jmp 0xfffff3c3(%rip)
df15(7): lea 0x7417(%rip),%rax
df1c(5): mov $0x1,0xe(%rsp)
df21(5): mov $0x0,0x7c(%rsp)
df26(3): xor %r12d,%r12d
df29(9): mov $0x0,0x50(%rsp)
df32(5): mov $0x1,0xf(%rsp)
df37(5): mov $0x1,0xd(%rsp)
df3c(9): mov $0x1,0x18(%rsp)
df45(3): xor %r15d,%r15d
df48(5): mov %rax,0x48(%rsp)
df4d(8): mov $0x5,0x8(%rsp)
df55(5): jmp 0xfffff37e(%rip)
df5a(5): mov $0x1,0xe(%rsp)
df5f(5): mov $0x0,0x7c(%rsp)
df64(3): xor %r12d,%r12d
df67(9): mov $0x0,0x50(%rsp)
df70(5): mov $0x0,0xf(%rsp)
df75(3): xor %r15d,%r15d
df78(5): mov $0x1,0xd(%rsp)
df7d(9): mov $0x0,0x18(%rsp)
df86(9): mov $0x0,0x48(%rsp)
df8f(5): jmp 0xfffff344(%rip)
df94(5): cmp $0xa,0x8(%rsp)
df99(2): jz 0x58(%rip)
df9b(7): lea 0x7395(%rip),%rsi
dfa2(2): xor %edi,%edi
dfa4(5): mov $0x5,%edx
dfa9(5): call 0xffff4937(%rip)
dfae(3): mov %rax,%rcx
dfb1(5): mov %rax,0x68(%rsp)
dfb6(7): lea 0x737a(%rip),%rax
dfbd(3): cmp %rax,%rcx
dfc0(6): jz 0x39e(%rip)
dfc6(7): lea 0x7368(%rip),%rsi
dfcd(2): xor %edi,%edi
dfcf(5): mov $0x5,%edx
dfd4(5): call 0xffff490c(%rip)
dfd9(3): mov %rax,%rcx
dfdc(5): mov %rax,0x60(%rsp)
dfe1(7): lea 0x734d(%rip),%rax
dfe8(3): cmp %rax,%rcx
dfeb(6): jz 0x389(%rip)
dff1(3): xor %r15d,%r15d
dff4(2): test %ebx,%ebx
dff6(6): jz 0x1c7(%rip)
dffc(2): test %ebx,%ebx
dffe(5): mov 0x60(%rsp),%rbx
e003(5): setnz 0xf(%rsp)
e008(3): xor %r12d,%r12d
e00b(3): mov %rbx,%rdi
e00e(5): call 0xffff48f2(%rip)
e013(5): mov %rbx,0x48(%rsp)
e018(5): mov %rax,0x18(%rsp)
e01d(5): mov $0x1,0xe(%rsp)
e022(5): mov $0x0,0x7c(%rsp)
e027(9): mov $0x0,0x50(%rsp)
e030(5): mov $0x1,0xd(%rsp)
e035(5): jmp 0xfffff29e(%rip)
e03a(5): mov $0x1,0xe(%rsp)
e03f(5): mov $0x0,0x7c(%rsp)
e044(3): xor %r12d,%r12d
e047(9): mov $0x0,0x50(%rsp)
e050(5): mov $0x0,0xf(%rsp)
e055(3): xor %r15d,%r15d
e058(5): mov $0x0,0xd(%rsp)
e05d(9): mov $0x0,0x18(%rsp)
e066(9): mov $0x0,0x48(%rsp)
e06f(5): jmp 0xfffff264(%rip)
e074(5): mov $0x1,0xe(%rsp)
e079(5): mov $0x0,0x7c(%rsp)
e07e(3): xor %r12d,%r12d
e081(9): mov $0x0,0x50(%rsp)
e08a(5): mov $0x1,0xf(%rsp)
e08f(5): mov $0x1,0xd(%rsp)
e094(5): jmp 0xfffff21f(%rip)
e099(3): cmp %r15,%r13
e09c(2): jbe 0x7(%rip)
e09e(5): mov $0x30,0x0(%r14,%r15,1)
e0a3(4): lea 0x2(%rcx),%rax
e0a7(3): cmp %rax,%r13
e0aa(2): jbe 0x8(%rip)
e0ac(6): mov $0x30,0x2(%r14,%rcx,1)
e0b2(3): mov %r12d,%eax
e0b5(4): lea 0x3(%rcx),%r15
e0b9(3): xor %r12d,%r12d
e0bc(5): mov $0x30,%ebx
e0c1(5): jmp 0xfffff367(%rip)
e0c6(a): nop 0x0(%rax,%rax,1)
e0d0(5): movzx 0xf(%rsp),%ebx
e0d5(3): mov %r11,%rbp
e0d8(4): mov %bl,0xd(%rsp)
e0dc(5): jmp 0xfffffcad(%rip)
e0e1(5): movzx 0xd(%rsp),%edx
e0e6(3): xor %r12d,%r12d
e0e9(5): jmp 0xfffffb07(%rip)
e0ee(3): xor %r10d,%r10d
e0f1(5): jmp 0xfffffbbc(%rip)
e0f6(9): mov $0x0,0x50(%rsp)
e0ff(5): mov $0x1,0xe(%rsp)
e104(3): xor %r12d,%r12d
e107(5): mov $0x0,0x7c(%rsp)
e10c(5): jmp 0xfffffddf(%rip)
e111(5): mov 0x30(%rsp),%r11
e116(3): mov %r14,%rsi
e119(3): mov %r13,%rcx
e11c(3): mov %rbx,%rax
e11f(3): mov %rbx,%rdi
e122(6): movzx 0x7d(%rsp),%r8d
e128(5): movzx 0x7e(%rsp),%ebx
e12d(8): mov 0x88(%rsp),%r9
e135(3): cmp %r11,%rsi
e138(6): movzx 0x7f(%rsp),%r10d
e13e(8): mov 0x80(%rsp),%r15
e146(5): mov 0x40(%rsp),%r14
e14b(5): mov 0x70(%rsp),%r13
e150(2): jnb 0x28(%rip)
e152(3): cmp $0x0,(%rcx)
e155(2): jnz 0x12(%rip)
e157(2): jmp 0x21(%rip)
e159(7): nop 0x0(%rax)
e160(5): cmp $0x0,0x0(%r9,%rax,1)
e165(2): jz 0x10(%rip)
e167(4): add $0x1,%rax
e16b(5): lea 0x0(%rbp,%rax,1),%rdx
e170(3): cmp %rdx,%r11
e173(2): jnbe 0xffffffed(%rip)
e175(3): mov %rax,%rdi
e178(5): movzx 0xd(%rsp),%edx
e17d(3): xor %r12d,%r12d
e180(5): jmp 0xfffffa66(%rip)
e185(3): mov %rbx,%rdi
e188(6): movzx 0x7d(%rsp),%r8d
e18e(5): movzx 0x7e(%rsp),%ebx
e193(6): movzx 0x7f(%rsp),%r10d
e199(8): mov 0x80(%rsp),%r15
e1a1(3): xor %r12d,%r12d
e1a4(5): mov 0x40(%rsp),%r14
e1a9(5): mov 0x70(%rsp),%r13
e1ae(5): mov 0x30(%rsp),%r11
e1b3(5): movzx 0xd(%rsp),%edx
e1b8(5): jmp 0xfffffa2e(%rip)
e1bd(5): mov 0x68(%rsp),%rdx
e1c2(3): movzx (%rdx),%eax
e1c5(2): test %al,%al
e1c7(6): jz 0xfffffe35(%rip)
e1cd(3): nop (%rax)
e1d0(3): cmp %r15,%r13
e1d3(2): jbe 0x6(%rip)
e1d5(4): mov %al,0x0(%r14,%r15,1)
e1d9(4): add $0x1,%r15
e1dd(5): movzx 0x0(%rdx,%r15,1),%eax
e1e2(2): test %al,%al
e1e4(2): jnz 0xffffffec(%rip)
e1e6(5): jmp 0xfffffe16(%rip)
e1eb(2): mov %edx,%eax
e1ed(5): jmp 0xfffff55a(%rip)
e1f2(4): movzx 0x0(%rax,%rcx,1),%ebx
e1f6(3): cmp $0x3e,%bl
e1f9(6): jnbe 0xfffff877(%rip)
e1ff(a): mov $0x8070630310989004800,%rax
e209(4): bt %rbx,%rax
e20d(6): jnb 0xfffff863(%rip)
e213(5): cmp $0x0,0xf(%rsp)
e218(6): jnz 0x1ea(%rip)
e21e(3): cmp %r15,%r13
e221(2): jbe 0x7(%rip)
e223(5): mov $0x3f,0x0(%r14,%r15,1)
e228(4): lea 0x1(%r15),%rax
e22c(3): cmp %rax,%r13
e22f(2): jbe 0x8(%rip)
e231(6): mov $0x22,0x1(%r14,%r15,1)
e237(4): lea 0x2(%r15),%rax
e23b(3): cmp %rax,%r13
e23e(2): jbe 0x8(%rip)
e240(6): mov $0x22,0x2(%r14,%r15,1)
e246(4): lea 0x3(%r15),%rax
e24a(3): cmp %rax,%r13
e24d(2): jbe 0x8(%rip)
e24f(6): mov $0x3f,0x3(%r14,%r15,1)
e255(4): add $0x4,%r15
e259(2): xor %edx,%edx
e25b(3): xor %r12d,%r12d
e25e(2): xor %eax,%eax
e260(3): mov %rcx,%rbp
e263(5): jmp 0xfffff1c5(%rip)
e268(2): test %ebx,%ebx
e26a(6): jz 0x18e(%rip)
e270(7): lea 0x70be(%rip),%rax
e277(5): mov $0x1,0xe(%rsp)
e27c(5): mov $0x0,0x7c(%rsp)
e281(3): xor %r12d,%r12d
e284(9): mov $0x0,0x50(%rsp)
e28d(5): mov $0x1,0xf(%rsp)
e292(5): mov $0x0,0xd(%rsp)
e297(9): mov $0x1,0x18(%rsp)
e2a0(3): xor %r15d,%r15d
e2a3(5): mov %rax,0x48(%rsp)
e2a8(5): jmp 0xfffff02b(%rip)
e2ad(3): nop (%rax)
e2b0(3): mov %r11,%rbp
e2b3(5): movzx 0xf(%rsp),%eax
e2b8(5): jmp 0xfffffad1(%rip)
e2bd(7): lea 0x706f(%rip),%rax
e2c4(5): mov $0x1,0xe(%rsp)
e2c9(5): mov $0x0,0x7c(%rsp)
e2ce(3): xor %r12d,%r12d
e2d1(9): mov $0x0,0x50(%rsp)
e2da(5): mov $0x1,0xf(%rsp)
e2df(5): mov $0x1,0xd(%rsp)
e2e4(9): mov $0x1,0x18(%rsp)
e2ed(3): xor %r15d,%r15d
e2f0(5): mov %rax,0x48(%rsp)
e2f5(5): jmp 0xffffefde(%rip)
e2fa(2): mov %edx,%eax
e2fc(5): mov 0x48(%rsp),%rbx
e301(3): test %rbx,%rbx
e304(2): jz 0x2e(%rip)
e306(2): test %al,%al
e308(2): jz 0x2a(%rip)
e30a(3): movzx (%rbx),%ecx
e30d(3): mov %rbx,%rax
e310(2): test %cl,%cl
e312(2): jz 0x20(%rip)
e314(3): mov %r15,%rdx
e317(3): sub %r15,%rax
e31a(3): cmp %rdx,%r13
e31d(2): jbe 0x6(%rip)
e31f(4): mov %cl,0x0(%r14,%rdx,1)
e323(4): add $0x1,%rdx
e327(4): movzx 0x0(%rax,%rdx,1),%ecx
e32b(2): test %cl,%cl
e32d(2): jnz 0xffffffed(%rip)
e32f(3): mov %rdx,%r15
e332(3): cmp %r15,%r13
e335(6): jbe 0xfffffaa4(%rip)
e33b(5): mov $0x0,0x0(%r14,%r15,1)
e340(5): jmp 0xfffffa99(%rip)
e345(5): cmp $0x2,0x8(%rsp)
e34a(5): movzx 0xf(%rsp),%ebx
e34f(3): mov %r11,%rbp
e352(3): setz %al
e355(4): mov %bl,0xd(%rsp)
e359(5): jmp 0xfffffa30(%rip)
e35e(4): mov 0x8(%rsp),%esi
e362(3): mov %rcx,%rdi
e365(5): call 0xffffedab(%rip)
e36a(5): mov %rax,0x68(%rsp)
e36f(5): jmp 0xfffffc57(%rip)
e374(4): mov 0x8(%rsp),%esi
e378(3): mov %rcx,%rdi
e37b(5): call 0xffffed95(%rip)
e380(5): mov %rax,0x60(%rsp)
e385(5): jmp 0xfffffc6c(%rip)
e38a(5): movzx 0xf(%rsp),%ebx
e38f(3): mov %r11,%rbp
e392(2): mov %edx,%eax
e394(4): mov %bl,0xd(%rsp)
e398(5): jmp 0xfffff9f1(%rip)
e39d(4): sub $0x8,%rsp
e3a1(6): mov $0x5,%r8d
e3a7(3): mov %r11,%rcx
e3aa(4): push 0x68(%rsp)
e3ae(4): push 0x78(%rsp)
e3b2(3): mov %r14,%rdi
e3b5(4): push 0x38(%rsp)
e3b9(8): mov 0x98(%rsp),%r9d
e3c1(5): mov 0x30(%rsp),%rdx
e3c6(5): mov 0x70(%rsp),%rsi
e3cb(5): call 0xffffee35(%rip)
e3d0(4): add $0x20,%rsp
e3d4(3): mov %rax,%r15
e3d7(5): jmp 0xfffffa02(%rip)
e3dc(5): movzx 0x7c(%rsp),%eax
e3e1(5): jmp 0xffffff1b(%rip)
e3e6(8): mov $0x2,0x8(%rsp)
e3ee(5): jmp 0xfffff99b(%rip)
e3f3(5): call 0xffff453d(%rip)
e3f8(5): mov $0x0,0xd(%rsp)
e3fd(5): jmp 0xfffffa74(%rip)
e402(3): mov %r11,%rbp
e405(5): jmp 0xfffff99b(%rip)
e40a(5): mov $0x1,0xe(%rsp)
e40f(2): xor %eax,%eax
e411(3): xor %r12d,%r12d
e414(9): mov $0x0,0x50(%rsp)
e41d(5): jmp 0xfffff5a7(%rip)
e422(3): mov %r13,%rdx
e425(5): mov 0x50(%rsp),%r13
e42a(5): jmp 0xfffff5f8(%rip)
e42f(5): call 0xffff4331(%rip)

"quotearg_n_options" :
e440(2): push %r15
e442(2): push %r14
e444(3): movsxd %edi,%r15
e447(2): push %r13
e449(2): push %r12
e44b(3): mov %rdx,%r14
e44e(1): push %rbp
e44f(1): push %rbx
e450(3): mov %rcx,%rbp
e453(4): sub $0x28,%rsp
e457(5): mov %rsi,0x8(%rsp)
e45c(5): call 0xffff4314(%rip)
e461(3): mov %rax,%r13
e464(2): mov (%rax),%eax
e466(3): test %r15d,%r15d
e469(7): mov 0x20bc10(%rip),%rbx
e470(4): mov %eax,0x18(%rsp)
e474(6): js 0x16d(%rip)
e47a(7): cmp %r15d,0x20bbf7(%rip)
e481(2): jnle 0x64(%rip)
e483(7): cmp $0x7fffffff,%r15d
e48a(6): jz 0x15c(%rip)
e490(4): lea 0x1(%r15),%r12d
e494(7): lea 0x20bbf5(%rip),%rax
e49b(3): movsxd %r12d,%rsi
e49e(4): shl/sal $0x4,%rsi
e4a2(3): cmp %rax,%rbx
e4a5(6): jz 0x11b(%rip)
e4ab(3): mov %rbx,%rdi
e4ae(5): call 0x2bd2(%rip)
e4b3(3): mov %rax,%rbx
e4b6(7): mov %rax,0x20bbc3(%rip)
e4bd(7): movsxd 0x20bbb4(%rip),%rdi
e4c4(3): mov %r12d,%edx
e4c7(2): xor %esi,%esi
e4c9(2): sub %edi,%edx
e4cb(4): shl/sal $0x4,%rdi
e4cf(3): movsxd %edx,%rdx
e4d2(3): add %rbx,%rdi
e4d5(4): shl/sal $0x4,%rdx
e4d9(5): call 0xffff4517(%rip)
e4de(7): mov %r12d,0x20bb93(%rip)
e4e5(3): mov 0x4(%rbp),%eax
e4e8(4): shl/sal $0x4,%r15
e4ec(4): sub $0x8,%rsp
e4f0(3): add %r15,%rbx
e4f3(4): lea 0x8(%rbp),%r15
e4f7(4): mov 0x0(%rbp),%r8d
e4fb(3): mov (%rbx),%r11
e4fe(4): mov 0x8(%rbx),%r12
e502(3): mov %r14,%rcx
e505(3): or $0x1,%eax
e508(4): mov %eax,0x24(%rsp)
e50c(3): push 0x30(%rbp)
e50f(3): mov %eax,%r9d
e512(3): push 0x28(%rbp)
e515(2): push %r15
e517(3): mov %r11,%rsi
e51a(5): mov 0x28(%rsp),%rdx
e51f(3): mov %r12,%rdi
e522(5): mov %r11,0x30(%rsp)
e527(5): call 0xffffecd9(%rip)
e52c(4): add $0x20,%rsp
e530(5): mov 0x10(%rsp),%r11
e535(3): cmp %rax,%r11
e538(2): jnbe 0x69(%rip)
e53a(4): lea 0x1(%rax),%rsi
e53e(7): lea 0x20c07b(%rip),%rax
e545(3): cmp %rax,%r12
e548(3): mov %rsi,(%rbx)
e54b(2): jz 0x14(%rip)
e54d(3): mov %r12,%rdi
e550(5): mov %rsi,0x10(%rsp)
e555(5): call 0xffff48bb(%rip)
e55a(5): mov 0x10(%rsp),%rsi
e55f(3): mov %rsi,%rdi
e562(5): mov %rsi,0x10(%rsp)
e567(5): call 0x2ab9(%rip)
e56c(4): sub $0x8,%rsp
e570(4): mov %rax,0x8(%rbx)
e574(4): mov 0x0(%rbp),%r8d
e578(3): push 0x30(%rbp)
e57b(3): push 0x28(%rbp)
e57e(3): mov %r14,%rcx
e581(2): push %r15
e583(5): mov 0x3c(%rsp),%r9d
e588(3): mov %rax,%rdi
e58b(5): mov 0x28(%rsp),%rdx
e590(5): mov 0x30(%rsp),%rsi
e595(3): mov %rax,%r12
e598(5): call 0xffffec68(%rip)
e59d(4): add $0x20,%rsp
e5a1(4): mov 0x18(%rsp),%eax
e5a5(4): mov %eax,0x0(%r13)
e5a9(4): add $0x28,%rsp
e5ad(3): mov %r12,%rax
e5b0(1): pop %rbx
e5b1(1): pop %rbp
e5b2(2): pop %r12
e5b4(2): pop %r13
e5b6(2): pop %r14
e5b8(2): pop %r15
e5ba(1): ret near (%rsp)
e5bb(5): nop 0x0(%rax,%rax,1)
e5c0(2): xor %edi,%edi
e5c2(5): call 0x2abe(%rip)
e5c7(8): movdqa 0x20bac1(%rip),%xmm0
e5cf(3): mov %rax,%rbx
e5d2(7): mov %rax,0x20baa7(%rip)
e5d9(3): movups %xmm0,(%rax)
e5dc(5): jmp 0xfffffee1(%rip)
e5e1(5): call 0xffff417f(%rip)
e5e6(5): call 0x2c8a(%rip)

"clone_quoting_options" :
e5f0(2): push %r12
e5f2(1): push %rbp
e5f3(1): push %rbx
e5f4(3): mov %rdi,%rbx
e5f7(5): call 0xffff4179(%rip)
e5fc(3): mov (%rax),%r12d
e5ff(3): mov %rax,%rbp
e602(7): lea 0x20c0b7(%rip),%rax
e609(3): test %rbx,%rbx
e60c(5): mov $0x38,%esi
e611(4): cmove %rax,%rbx
e615(3): mov %rbx,%rdi
e618(5): call 0x2c08(%rip)
e61d(4): mov %r12d,0x0(%rbp)
e621(1): pop %rbx
e622(1): pop %rbp
e623(2): pop %r12
e625(1): ret near (%rsp)

"get_quoting_style" :
e630(7): lea 0x20c089(%rip),%rax
e637(3): test %rdi,%rdi
e63a(4): cmove %rax,%rdi
e63e(2): mov (%rdi),%eax
e640(1): ret near (%rsp)

"set_quoting_style" :
e650(7): lea 0x20c069(%rip),%rax
e657(3): test %rdi,%rdi
e65a(4): cmove %rax,%rdi
e65e(2): mov %esi,(%rdi)
e660(1): ret near (%rsp)

"set_char_quoting" :
e670(7): lea 0x20c049(%rip),%rax
e677(3): test %rdi,%rdi
e67a(2): mov %esi,%ecx
e67c(4): cmove %rax,%rdi
e680(2): mov %esi,%eax
e682(3): and $0x1f,%ecx
e685(3): shr $0x5,%al
e688(3): movzx %al,%eax
e68b(5): lea 0x8(%rdi,%rax,4),%rdi
e690(2): mov (%rdi),%esi
e692(2): mov %esi,%eax
e694(2): shr %cl,%eax
e696(2): xor %eax,%edx
e698(3): and $0x1,%eax
e69b(3): and $0x1,%edx
e69e(2): shl/sal %cl,%edx
e6a0(2): xor %esi,%edx
e6a2(2): mov %edx,(%rdi)
e6a4(1): ret near (%rsp)

"set_quoting_flags" :
e6b0(7): lea 0x20c009(%rip),%rax
e6b7(3): test %rdi,%rdi
e6ba(4): cmove %rax,%rdi
e6be(3): mov 0x4(%rdi),%eax
e6c1(3): mov %esi,0x4(%rdi)
e6c4(1): ret near (%rsp)

"set_custom_quoting" :
e6d0(7): lea 0x20bfe9(%rip),%rax
e6d7(3): test %rdi,%rdi
e6da(4): cmove %rax,%rdi
e6de(3): test %rsi,%rsi
e6e1(6): mov $0xa,(%rdi)
e6e7(2): jz 0x10(%rip)
e6e9(3): test %rdx,%rdx
e6ec(2): jz 0xb(%rip)
e6ee(4): mov %rsi,0x28(%rdi)
e6f2(4): mov %rdx,0x30(%rdi)
e6f6(1): ret near (%rsp)
e6f7(4): sub $0x8,%rsp
e6fb(5): call 0xffff4065(%rip)

"quotearg_buffer" :
e700(2): push %r15
e702(2): push %r14
e704(7): lea 0x20bfb5(%rip),%rax
e70b(2): push %r13
e70d(2): push %r12
e70f(3): mov %rdi,%r13
e712(1): push %rbp
e713(1): push %rbx
e714(3): mov %r8,%rbx
e717(3): mov %rsi,%r14
e71a(3): mov %rdx,%r15
e71d(4): sub $0x18,%rsp
e721(3): test %r8,%r8
e724(4): cmove %rax,%rbx
e728(5): mov %rcx,0x8(%rsp)
e72d(5): call 0xffff4043(%rip)
e732(3): mov (%rax),%r12d
e735(3): mov %rax,%rbp
e738(4): lea 0x8(%rbx),%rax
e73c(4): sub $0x8,%rsp
e740(4): mov 0x4(%rbx),%r9d
e744(3): push 0x30(%rbx)
e747(3): mov (%rbx),%r8d
e74a(3): push 0x28(%rbx)
e74d(3): mov %r15,%rdx
e750(1): push %rax
e751(5): mov 0x28(%rsp),%rcx
e756(3): mov %r14,%rsi
e759(3): mov %r13,%rdi
e75c(5): call 0xffffeaa4(%rip)
e761(4): mov %r12d,0x0(%rbp)
e765(4): add $0x38,%rsp
e769(1): pop %rbx
e76a(1): pop %rbp
e76b(2): pop %r12
e76d(2): pop %r13
e76f(2): pop %r14
e771(2): pop %r15
e773(1): ret near (%rsp)

"quotearg_alloc_mem" :
e780(2): push %r15
e782(2): push %r14
e784(7): lea 0x20bf35(%rip),%rax
e78b(2): push %r13
e78d(2): push %r12
e78f(3): mov %rdx,%r12
e792(1): push %rbp
e793(1): push %rbx
e794(3): mov %rcx,%rbx
e797(3): mov %rdi,%r14
e79a(3): mov %rsi,%r15
e79d(4): sub $0x38,%rsp
e7a1(3): test %rcx,%rcx
e7a4(4): cmove %rax,%rbx
e7a8(2): xor %ebp,%ebp
e7aa(5): call 0xffff3fc6(%rip)
e7af(3): test %r12,%r12
e7b2(3): mov %rax,%r13
e7b5(2): mov (%rax),%eax
e7b7(4): setz %bpl
e7bb(3): or 0x4(%rbx),%ebp
e7be(4): lea 0x8(%rbx),%r10
e7c2(4): sub $0x8,%rsp
e7c6(3): mov (%rbx),%r8d
e7c9(3): mov %r15,%rcx
e7cc(4): mov %eax,0x14(%rsp)
e7d0(3): push 0x30(%rbx)
e7d3(3): mov %r14,%rdx
e7d6(3): push 0x28(%rbx)
e7d9(2): push %r10
e7db(2): xor %esi,%esi
e7dd(3): mov %ebp,%r9d
e7e0(2): xor %edi,%edi
e7e2(5): mov %r10,0x40(%rsp)
e7e7(5): call 0xffffea19(%rip)
e7ec(4): lea 0x1(%rax),%rsi
e7f0(5): mov %rax,0x48(%rsp)
e7f5(4): add $0x20,%rsp
e7f9(3): mov %rsi,%rdi
e7fc(5): mov %rsi,0x18(%rsp)
e801(5): call 0x281f(%rip)
e806(5): mov %rax,0x10(%rsp)
e80b(4): sub $0x8,%rsp
e80f(3): push 0x30(%rbx)
e812(3): push 0x28(%rbx)
e815(5): mov 0x38(%rsp),%r10
e81a(3): mov %ebp,%r9d
e81d(3): mov (%rbx),%r8d
e820(3): mov %r15,%rcx
e823(3): mov %r14,%rdx
e826(3): mov %rax,%rdi
e829(2): push %r10
e82b(5): mov 0x38(%rsp),%rsi
e830(5): call 0xffffe9d0(%rip)
e835(4): mov 0x2c(%rsp),%eax
e839(4): add $0x20,%rsp
e83d(3): test %r12,%r12
e840(4): mov %eax,0x0(%r13)
e844(2): jz 0xb(%rip)
e846(5): mov 0x28(%rsp),%r11
e84b(4): mov %r11,(%r12)
e84f(5): mov 0x10(%rsp),%rax
e854(4): add $0x38,%rsp
e858(1): pop %rbx
e859(1): pop %rbp
e85a(2): pop %r12
e85c(2): pop %r13
e85e(2): pop %r14
e860(2): pop %r15
e862(1): ret near (%rsp)

"quotearg_alloc" :
e870(3): mov %rdx,%rcx
e873(2): xor %edx,%edx
e875(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
e880(6): mov 0x20b7f2(%rip),%eax
e886(2): push %r12
e888(7): mov 0x20b7f1(%rip),%r12
e88f(1): push %rbp
e890(1): push %rbx
e891(3): cmp $0x1,%eax
e894(2): jle 0x2d(%rip)
e896(3): sub $0x2,%eax
e899(5): lea 0x18(%r12),%rbx
e89e(4): shl/sal $0x4,%rax
e8a2(5): lea 0x28(%r12,%rax,1),%rbp
e8a7(9): nop 0x0(%rax,%rax,1)
e8b0(3): mov (%rbx),%rdi
e8b3(4): add $0x10,%rbx
e8b7(5): call 0xffff4559(%rip)
e8bc(3): cmp %rbp,%rbx
e8bf(2): jnz 0xfffffff1(%rip)
e8c1(5): mov 0x8(%r12),%rdi
e8c6(7): lea 0x20bcf3(%rip),%rbx
e8cd(3): cmp %rbx,%rdi
e8d0(2): jz 0x19(%rip)
e8d2(5): call 0xffff453e(%rip)
e8d7(b): mov $0x100,0x20b7ae(%rip)
e8e2(7): mov %rbx,0x20b7af(%rip)
e8e9(7): lea 0x20b7a0(%rip),%rbx
e8f0(3): cmp %rbx,%r12
e8f3(2): jz 0x11(%rip)
e8f5(3): mov %r12,%rdi
e8f8(5): call 0xffff4518(%rip)
e8fd(7): mov %rbx,0x20b77c(%rip)
e904(1): pop %rbx
e905(a): mov $0x1,0x20b769(%rip)
e90f(1): pop %rbp
e910(2): pop %r12
e912(1): ret near (%rsp)

"quotearg_n" :
e920(7): lea 0x20bd99(%rip),%rcx
e927(7): mov $0xffffffff,%rdx
e92e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
e940(7): lea 0x20bd79(%rip),%rcx
e947(5): jmp 0xfffffaf9(%rip)

"quotearg" :
e950(7): lea 0x20bd69(%rip),%rcx
e957(3): mov %rdi,%rsi
e95a(7): mov $0xffffffff,%rdx
e961(2): xor %edi,%edi
e963(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
e970(7): lea 0x20bd49(%rip),%rcx
e977(3): mov %rsi,%rdx
e97a(3): mov %rdi,%rsi
e97d(2): xor %edi,%edi
e97f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
e990(4): sub $0x48,%rsp
e994(3): mov %rdx,%rax
e997(9): mov $0x28,%rdx
e9a0(5): mov %rdx,0x38(%rsp)
e9a5(2): xor %edx,%edx
e9a7(3): cmp $0xa,%esi
e9aa(2): jz 0x6a(%rip)
e9ac(3): mov %esi,(%rsp)
e9af(3): mov %rsp,%rcx
e9b2(7): mov $0xffffffff,%rdx
e9b9(3): mov %rax,%rsi
e9bc(9): mov $0x0,0x4(%rsp)
e9c5(9): mov $0x0,0xc(%rsp)
e9ce(9): mov $0x0,0x14(%rsp)
e9d7(9): mov $0x0,0x1c(%rsp)
e9e0(9): mov $0x0,0x24(%rsp)
e9e9(9): mov $0x0,0x2c(%rsp)
e9f2(8): mov $0x0,0x34(%rsp)
e9fa(5): call 0xfffffa46(%rip)
e9ff(5): mov 0x38(%rsp),%rcx
ea04(9): xor $0x28,%rcx
ea0d(2): jnz 0xc(%rip)
ea0f(4): add $0x48,%rsp
ea13(1): ret near (%rsp)
ea14(5): call 0xffff3d4c(%rip)
ea19(5): call 0xffff3f17(%rip)

"quotearg_n_style_mem" :
ea20(4): sub $0x48,%rsp
ea24(3): mov %rdx,%rax
ea27(3): mov %rcx,%rdx
ea2a(9): mov $0x28,%rcx
ea33(5): mov %rcx,0x38(%rsp)
ea38(2): xor %ecx,%ecx
ea3a(3): cmp $0xa,%esi
ea3d(2): jz 0x63(%rip)
ea3f(3): mov %esi,(%rsp)
ea42(3): mov %rsp,%rcx
ea45(3): mov %rax,%rsi
ea48(9): mov $0x0,0x4(%rsp)
ea51(9): mov $0x0,0xc(%rsp)
ea5a(9): mov $0x0,0x14(%rsp)
ea63(9): mov $0x0,0x1c(%rsp)
ea6c(9): mov $0x0,0x24(%rsp)
ea75(9): mov $0x0,0x2c(%rsp)
ea7e(8): mov $0x0,0x34(%rsp)
ea86(5): call 0xfffff9ba(%rip)
ea8b(5): mov 0x38(%rsp),%rdx
ea90(9): xor $0x28,%rdx
ea99(2): jnz 0xc(%rip)
ea9b(4): add $0x48,%rsp
ea9f(1): ret near (%rsp)
eaa0(5): call 0xffff3cc0(%rip)
eaa5(5): call 0xffff3e8b(%rip)

"quotearg_style" :
eab0(3): mov %rsi,%rdx
eab3(2): mov %edi,%esi
eab5(2): xor %edi,%edi
eab7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
eac0(3): mov %rdx,%rcx
eac3(3): mov %rsi,%rdx
eac6(2): mov %edi,%esi
eac8(2): xor %edi,%edi
eaca(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
ead0(4): sub $0x48,%rsp
ead4(2): mov %edx,%ecx
ead6(9): mov $0x28,%rax
eadf(5): mov %rax,0x38(%rsp)
eae4(2): xor %eax,%eax
eae6(7): mov 0x20bc03(%rip),%rax
eaed(3): mov %rsp,%r8
eaf0(3): and $0x1f,%ecx
eaf3(8): movdqa 0x20bbc5(%rip),%xmm0
eafb(5): mov %rax,0x30(%rsp)
eb00(2): mov %edx,%eax
eb02(4): movaps %xmm0,(%rsp)
eb06(3): shr $0x5,%al
eb09(3): movzx %al,%eax
eb0c(5): lea 0x8(%r8,%rax,4),%r9
eb11(8): movdqa 0x20bbb7(%rip),%xmm0
eb19(5): movaps %xmm0,0x10(%rsp)
eb1e(8): movdqa 0x20bbba(%rip),%xmm0
eb26(5): movaps %xmm0,0x20(%rsp)
eb2b(3): mov (%r9),%edx
eb2e(2): mov %edx,%eax
eb30(2): shr %cl,%eax
eb32(2): not %eax
eb34(3): and $0x1,%eax
eb37(2): shl/sal %cl,%eax
eb39(3): mov %r8,%rcx
eb3c(2): xor %edx,%eax
eb3e(3): mov %rsi,%rdx
eb41(3): mov %rdi,%rsi
eb44(3): mov %eax,(%r9)
eb47(2): xor %edi,%edi
eb49(5): call 0xfffff8f7(%rip)
eb4e(5): mov 0x38(%rsp),%rsi
eb53(9): xor $0x28,%rsi
eb5c(2): jnz 0x7(%rip)
eb5e(4): add $0x48,%rsp
eb62(1): ret near (%rsp)
eb63(5): call 0xffff3dcd(%rip)

"quotearg_char" :
eb70(4): movsx %sil,%edx
eb74(7): mov $0xffffffff,%rsi
eb7b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
eb80(5): mov $0x3a,%edx
eb85(7): mov $0xffffffff,%rsi
eb8c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
eba0(5): mov $0x3a,%edx
eba5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
ebb0(4): sub $0x48,%rsp
ebb4(3): mov %rdx,%rax
ebb7(9): mov $0x28,%rdx
ebc0(5): mov %rdx,0x38(%rsp)
ebc5(2): xor %edx,%edx
ebc7(3): cmp $0xa,%esi
ebca(2): jz 0x6a(%rip)
ebcc(3): mov %esi,(%rsp)
ebcf(3): mov %rsp,%rcx
ebd2(7): mov $0xffffffff,%rdx
ebd9(3): mov %rax,%rsi
ebdc(9): mov $0x0,0x4(%rsp)
ebe5(9): mov $0x4000000,0xc(%rsp)
ebee(9): mov $0x0,0x14(%rsp)
ebf7(9): mov $0x0,0x1c(%rsp)
ec00(9): mov $0x0,0x24(%rsp)
ec09(9): mov $0x0,0x2c(%rsp)
ec12(8): mov $0x0,0x34(%rsp)
ec1a(5): call 0xfffff826(%rip)
ec1f(5): mov 0x38(%rsp),%rcx
ec24(9): xor $0x28,%rcx
ec2d(2): jnz 0xc(%rip)
ec2f(4): add $0x48,%rsp
ec33(1): ret near (%rsp)
ec34(5): call 0xffff3b2c(%rip)
ec39(5): call 0xffff3cf7(%rip)

"quotearg_n_custom_mem" :
ec40(4): sub $0x48,%rsp
ec44(3): mov %rcx,%r9
ec47(7): mov 0x20baa2(%rip),%rcx
ec4e(8): movdqa 0x20ba6a(%rip),%xmm0
ec56(9): mov $0x28,%rax
ec5f(5): mov %rax,0x38(%rsp)
ec64(2): xor %eax,%eax
ec66(4): movaps %xmm0,(%rsp)
ec6a(3): test %rsi,%rsi
ec6d(5): mov %rcx,0x30(%rsp)
ec72(7): mov $0xa,(%rsp)
ec79(8): movdqa 0x20ba4f(%rip),%xmm0
ec81(5): movaps %xmm0,0x10(%rsp)
ec86(8): movdqa 0x20ba52(%rip),%xmm0
ec8e(5): movaps %xmm0,0x20(%rsp)
ec93(2): jz 0x34(%rip)
ec95(3): test %rdx,%rdx
ec98(2): jz 0x2f(%rip)
ec9a(5): mov %rsi,0x28(%rsp)
ec9f(5): mov %rdx,0x30(%rsp)
eca4(3): mov %rsp,%rcx
eca7(3): mov %r8,%rdx
ecaa(3): mov %r9,%rsi
ecad(5): call 0xfffff793(%rip)
ecb2(5): mov 0x38(%rsp),%rdi
ecb7(9): xor $0x28,%rdi
ecc0(2): jnz 0xc(%rip)
ecc2(4): add $0x48,%rsp
ecc6(1): ret near (%rsp)
ecc7(5): call 0xffff3a99(%rip)
eccc(5): call 0xffff3c64(%rip)

"quotearg_n_custom" :
ece0(7): mov $0xffffffff,%r8
ece7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
ecf0(3): mov %rdx,%rcx
ecf3(7): mov $0xffffffff,%r8
ecfa(3): mov %rsi,%rdx
ecfd(3): mov %rdi,%rsi
ed00(2): xor %edi,%edi
ed02(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
ed10(3): mov %rcx,%r8
ed13(3): mov %rdx,%rcx
ed16(3): mov %rsi,%rdx
ed19(3): mov %rdi,%rsi
ed1c(2): xor %edi,%edi
ed1e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
ed30(7): lea 0x20b309(%rip),%rcx
ed37(5): jmp 0xfffff709(%rip)

"quote_mem" :
ed40(7): lea 0x20b2f9(%rip),%rcx
ed47(3): mov %rsi,%rdx
ed4a(3): mov %rdi,%rsi
ed4d(2): xor %edi,%edi
ed4f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
ed60(7): lea 0x20b2d9(%rip),%rcx
ed67(7): mov $0xffffffff,%rdx
ed6e(5): jmp 0xfffff6d2(%rip)

"quote" :
ed80(7): lea 0x20b2b9(%rip),%rcx
ed87(3): mov %rdi,%rsi
ed8a(7): mov $0xffffffff,%rdx
ed91(2): xor %edi,%edi
ed93(5): jmp 0xfffff6ad(%rip)

"renameatu" :
eda0(2): push %r15
eda2(2): push %r14
eda4(3): mov %r8d,%r9d
eda7(2): push %r13
eda9(2): push %r12
edab(3): mov %edx,%r14d
edae(1): push %rbp
edaf(1): push %rbx
edb0(3): mov %rsi,%r12
edb3(3): mov %rcx,%r13
edb6(3): mov %r8d,%ebp
edb9(3): mov %rcx,%r8
edbc(7): sub $0x148,%rsp
edc3(2): mov %edx,%ecx
edc5(3): mov %rsi,%rdx
edc8(9): mov $0x28,%rax
edd1(8): mov %rax,0x138(%rsp)
edd9(2): xor %eax,%eax
eddb(2): mov %edi,%esi
eddd(4): mov %edi,0x4(%rsp)
ede1(5): mov $0x13c,%edi
ede6(5): call 0xffff3d4a(%rip)
edeb(3): mov %rax,%rbx
edee(3): mov %eax,%r15d
edf1(5): call 0xffff397f(%rip)
edf6(2): test %ebx,%ebx
edf8(2): js 0x38(%rip)
edfa(8): mov 0x138(%rsp),%rdx
ee02(9): xor $0x28,%rdx
ee0b(3): mov %r15d,%eax
ee0e(6): jnz 0x1f7(%rip)
ee14(7): add $0x148,%rsp
ee1b(1): pop %rbx
ee1c(1): pop %rbp
ee1d(2): pop %r12
ee1f(2): pop %r13
ee21(2): pop %r14
ee23(2): pop %r15
ee25(1): ret near (%rsp)
ee26(a): nop 0x0(%rax,%rax,1)
ee30(3): mov %rax,%r9
ee33(2): mov (%rax),%eax
ee35(3): lea 0xffffffea(%rax),%ecx
ee38(3): and $0xef,%ecx
ee3b(3): setnz %bl
ee3e(3): cmp $0x5f,%eax
ee41(3): setnz %al
ee44(2): and %al,%bl
ee46(2): jnz 0xffffffb4(%rip)
ee48(2): test %ebp,%ebp
ee4a(2): jnz 0x56(%rip)
ee4c(3): mov %r12,%rdi
ee4f(5): mov %r9,0x8(%rsp)
ee54(5): call 0xffff3aac(%rip)
ee59(3): mov %r13,%rdi
ee5c(3): mov %rax,%rbp
ee5f(5): call 0xffff3aa1(%rip)
ee64(3): test %rbp,%rbp
ee67(2): jz 0x1c(%rip)
ee69(3): test %rax,%rax
ee6c(5): mov 0x8(%rsp),%r9
ee71(2): jz 0x12(%rip)
ee73(6): cmp $0x2f,0xffffffff(%r12,%rbp,1)
ee79(2): jz 0x47(%rip)
ee7b(6): cmp $0x2f,0xffffffff(%r13,%rax,1)
ee81(2): jz 0x3f(%rip)
ee83(4): mov 0x4(%rsp),%edi
ee87(3): mov %r13,%rcx
ee8a(3): mov %r14d,%edx
ee8d(3): mov %r12,%rsi
ee90(5): call 0xffff3ed0(%rip)
ee95(3): mov %eax,%r15d
ee98(5): jmp 0xffffff62(%rip)
ee9d(3): nop (%rax)
eea0(3): and $0xfe,%ebp
eea3(2): jz 0x6d(%rip)
eea5(7): mov $0x5f,(%r9)
eeac(6): mov $0xffffffff,%r15d
eeb2(5): jmp 0xffffff48(%rip)
eeb7(9): nop 0x0(%rax,%rax,1)
eec0(4): mov 0x4(%rsp),%esi
eec4(5): lea 0x10(%rsp),%rcx
eec9(6): mov $0x100,%r8d
eecf(3): mov %r12,%rdx
eed2(5): mov $0x1,%edi
eed7(5): mov %r9,0x8(%rsp)
eedc(5): call 0xffff3aa4(%rip)
eee1(2): test %eax,%eax
eee3(2): jnz 0x66(%rip)
eee5(2): test %bl,%bl
eee7(5): mov 0x8(%rsp),%r9
eeec(2): jz 0x7e(%rip)
eeee(4): mov 0x28(%rsp),%eax
eef2(5): and $0xf000,%eax
eef7(5): cmp $0x4000,%eax
eefc(2): jz 0xffffff87(%rip)
eefe(7): mov $0x2,(%r9)
ef05(6): mov $0xffffffff,%r15d
ef0b(5): jmp 0xfffffeef(%rip)
ef10(8): lea 0xa0(%rsp),%rcx
ef18(6): mov $0x100,%r8d
ef1e(3): mov %r13,%rdx
ef21(3): mov %r14d,%esi
ef24(5): mov $0x1,%edi
ef29(5): mov %r9,0x8(%rsp)
ef2e(5): call 0xffff3a52(%rip)
ef33(2): test %eax,%eax
ef35(5): mov 0x8(%rsp),%r9
ef3a(2): jz 0x1e(%rip)
ef3c(3): mov (%r9),%eax
ef3f(3): cmp $0x4b,%eax
ef42(2): jz 0x16(%rip)
ef44(3): cmp $0x2,%eax
ef47(2): jz 0x71(%rip)
ef49(6): mov $0xffffffff,%r15d
ef4f(5): jmp 0xfffffeab(%rip)
ef54(4): nop 0x0(%rax)
ef58(7): mov $0x11,(%r9)
ef5f(6): mov $0xffffffff,%r15d
ef65(5): jmp 0xfffffe95(%rip)
ef6a(8): lea 0xa0(%rsp),%rcx
ef72(6): mov $0x100,%r8d
ef78(3): mov %r13,%rdx
ef7b(3): mov %r14d,%esi
ef7e(5): mov $0x1,%edi
ef83(5): mov %r9,0x8(%rsp)
ef88(5): call 0xffff39f8(%rip)
ef8d(2): test %eax,%eax
ef8f(5): mov 0x8(%rsp),%r9
ef94(2): jz 0x2e(%rip)
ef96(4): cmp $0x2,(%r9)
ef9a(2): jnz 0xffffffaf(%rip)
ef9c(4): mov 0x28(%rsp),%eax
efa0(5): and $0xf000,%eax
efa5(5): cmp $0x4000,%eax
efaa(2): jnz 0xffffff9f(%rip)
efac(5): jmp 0xfffffed7(%rip)
efb1(7): nop 0x0(%rax)
efb8(5): mov $0x1,%ebx
efbd(5): jmp 0xfffffe8f(%rip)
efc2(7): mov 0xb8(%rsp),%eax
efc9(5): and $0xf000,%eax
efce(5): cmp $0x4000,%eax
efd3(2): jz 0xe(%rip)
efd5(7): mov $0x14,(%r9)
efdc(5): jmp 0xffffff6d(%rip)
efe1(4): mov 0x28(%rsp),%eax
efe5(5): and $0xf000,%eax
efea(5): cmp $0x4000,%eax
efef(6): jz 0xfffffe94(%rip)
eff5(7): mov $0x15,(%r9)
effc(4): or $0xff,%r15d
f000(5): jmp 0xfffffdfa(%rip)
f005(5): call 0xffff392b(%rip)

"safe_write" :
f010(2): push %r13
f012(2): push %r12
f014(3): mov %edi,%r13d
f017(1): push %rbp
f018(1): push %rbx
f019(3): mov %rsi,%r12
f01c(3): mov %rdx,%rbx
f01f(4): sub $0x8,%rsp
f023(5): nop 0x0(%rax,%rax,1)
f028(3): mov %rbx,%rdx
f02b(3): mov %r12,%rsi
f02e(3): mov %r13d,%edi
f031(5): call 0xffff380f(%rip)
f036(3): test %rax,%rax
f039(3): mov %rax,%rbp
f03c(2): jns 0x24(%rip)
f03e(5): call 0xffff3732(%rip)
f043(2): mov (%rax),%eax
f045(3): cmp $0x4,%eax
f048(2): jz 0xffffffe0(%rip)
f04a(3): cmp $0x16,%eax
f04d(2): jnz 0x13(%rip)
f04f(7): cmp $0x7ff00000,%rbx
f056(2): jbe 0xa(%rip)
f058(5): mov $0x7ff00000,%ebx
f05d(2): jmp 0xffffffcb(%rip)
f05f(1): nop 
f060(4): add $0x8,%rsp
f064(3): mov %rbp,%rax
f067(1): pop %rbx
f068(1): pop %rbp
f069(2): pop %r12
f06b(2): pop %r13
f06d(1): ret near (%rsp)

"same_nameat.part.0" :
f070(2): push %r13
f072(2): push %r12
f074(3): mov %edi,%r13d
f077(1): push %rbp
f078(1): push %rbx
f079(3): mov %rsi,%rdi
f07c(2): mov %edx,%ebp
f07e(3): mov %rcx,%r12
f081(7): sub $0x138,%rsp
f088(9): mov $0x28,%rax
f091(8): mov %rax,0x128(%rsp)
f099(2): xor %eax,%eax
f09b(5): call 0xffffc415(%rip)
f0a0(3): mov %rsp,%rcx
f0a3(6): mov $0x100,%r8d
f0a9(3): mov %rax,%rdx
f0ac(3): mov %r13d,%esi
f0af(5): mov $0x1,%edi
f0b4(3): mov %rax,%rbx
f0b7(5): call 0xffff38c9(%rip)
f0bc(2): test %eax,%eax
f0be(6): jnz 0xb2(%rip)
f0c4(3): mov %rbx,%rdi
f0c7(5): call 0xffff3d49(%rip)
f0cc(3): mov %r12,%rdi
f0cf(5): call 0xffffc3e1(%rip)
f0d4(8): lea 0x90(%rsp),%rcx
f0dc(6): mov $0x100,%r8d
f0e2(3): mov %rax,%rdx
f0e5(2): mov %ebp,%esi
f0e7(5): mov $0x1,%edi
f0ec(3): mov %rax,%rbx
f0ef(5): call 0xffff3891(%rip)
f0f4(2): test %eax,%eax
f0f6(2): jnz 0x52(%rip)
f0f8(2): xor %ebp,%ebp
f0fa(8): mov 0x98(%rsp),%rax
f102(5): cmp %rax,0x8(%rsp)
f107(2): jnz 0x12(%rip)
f109(8): mov 0x90(%rsp),%rax
f111(4): cmp %rax,(%rsp)
f115(4): setz %bpl
f119(3): mov %rbx,%rdi
f11c(5): call 0xffff3cf4(%rip)
f121(8): mov 0x128(%rsp),%rdx
f129(9): xor $0x28,%rdx
f132(2): mov %ebp,%eax
f134(2): jnz 0x5e(%rip)
f136(7): add $0x138,%rsp
f13d(1): pop %rbx
f13e(1): pop %rbp
f13f(2): pop %r12
f141(2): pop %r13
f143(1): ret near (%rsp)
f144(4): nop 0x0(%rax)
f148(5): call 0xffff3628(%rip)
f14d(2): mov (%rax),%esi
f14f(7): lea 0x6037(%rip),%rdx
f156(3): mov %rbx,%rcx
f159(5): mov $0x1,%edi
f15e(2): xor %eax,%eax
f160(5): call 0xffff3b50(%rip)
f165(2): jmp 0xffffff93(%rip)
f167(9): nop 0x0(%rax,%rax,1)
f170(5): call 0xffff3600(%rip)
f175(2): mov (%rax),%esi
f177(7): lea 0x600f(%rip),%rdx
f17e(3): mov %rbx,%rcx
f181(5): mov $0x1,%edi
f186(2): xor %eax,%eax
f188(5): call 0xffff3b28(%rip)
f18d(5): jmp 0xffffff37(%rip)
f192(5): call 0xffff379e(%rip)

"same_nameat" :
f1a0(2): push %r15
f1a2(2): push %r14
f1a4(3): mov %edx,%r15d
f1a7(2): push %r13
f1a9(2): push %r12
f1ab(1): push %rbp
f1ac(1): push %rbx
f1ad(3): mov %rcx,%rbp
f1b0(3): mov %rsi,%rbx
f1b3(4): sub $0x18,%rsp
f1b7(4): mov %edi,0xc(%rsp)
f1bb(3): mov %rsi,%rdi
f1be(5): call 0xffffc3d2(%rip)
f1c3(3): mov %rbp,%rdi
f1c6(3): mov %rax,%r12
f1c9(5): call 0xffffc3c7(%rip)
f1ce(3): mov %r12,%rdi
f1d1(3): mov %rax,%r13
f1d4(5): call 0xffffc41c(%rip)
f1d9(3): mov %r13,%rdi
f1dc(3): mov %rax,%r14
f1df(5): call 0xffffc411(%rip)
f1e4(3): cmp %rax,%r14
f1e7(2): jz 0x19(%rip)
f1e9(4): add $0x18,%rsp
f1ed(2): xor %eax,%eax
f1ef(1): pop %rbx
f1f0(1): pop %rbp
f1f1(2): pop %r12
f1f3(2): pop %r13
f1f5(2): pop %r14
f1f7(2): pop %r15
f1f9(1): ret near (%rsp)
f1fa(6): nop 0x0(%rax,%rax,1)
f200(3): mov %r14,%rdx
f203(3): mov %r13,%rsi
f206(3): mov %r12,%rdi
f209(5): call 0xffff3887(%rip)
f20e(2): test %eax,%eax
f210(2): jnz 0xffffffd9(%rip)
f212(4): mov 0xc(%rsp),%edi
f216(4): add $0x18,%rsp
f21a(3): mov %rbp,%rcx
f21d(3): mov %r15d,%edx
f220(3): mov %rbx,%rsi
f223(1): pop %rbx
f224(1): pop %rbp
f225(2): pop %r12
f227(2): pop %r13
f229(2): pop %r14
f22b(2): pop %r15
f22d(5): jmp 0xfffffe43(%rip)

"same_name" :
f240(5): mov $0xffffff9c,%edx
f245(3): mov %rsi,%rcx
f248(3): mov %rdi,%rsi
f24b(2): mov %edx,%edi
f24d(5): jmp 0xffffff53(%rip)

"direntry_cmp_inode" :
f260(4): mov 0x8(%rsi),%rax
f264(4): cmp %rax,0x8(%rdi)
f268(2): jb 0x10(%rip)
f26a(3): setnbe %al
f26d(3): movzx %al,%eax
f270(1): ret near (%rsp)
f271(7): nop 0x0(%rax)
f278(5): mov $0xffffffff,%eax
f27d(1): ret near (%rsp)

"direntry_cmp_name" :
f280(3): mov (%rsi),%rsi
f283(3): mov (%rdi),%rdi
f286(5): jmp 0xffff386a(%rip)

"streamsavedir" :
f290(2): push %r15
f292(7): lea 0x20a7a7(%rip),%rax
f299(2): push %r14
f29b(2): push %r13
f29d(2): push %r12
f29f(2): mov %esi,%esi
f2a1(1): push %rbp
f2a2(1): push %rbx
f2a3(4): sub $0x48,%rsp
f2a7(4): mov 0x0(%rax,%rsi,8),%rax
f2ab(3): test %rdi,%rdi
f2ae(5): mov %rax,0x8(%rsp)
f2b3(6): jz 0x30a(%rip)
f2b9(3): mov %rdi,%rbx
f2bc(3): xor %r14d,%r14d
f2bf(3): xor %r12d,%r12d
f2c2(5): call 0xffff34ae(%rip)
f2c7(3): xor %r13d,%r13d
f2ca(3): mov %rax,%rbp
f2cd(9): mov $0x0,0x28(%rsp)
f2d6(9): mov $0x0,0x10(%rsp)
f2df(9): mov $0x0,0x20(%rsp)
f2e8(2): jmp 0xc(%rip)
f2ea(6): nop 0x0(%rax,%rax,1)
f2f0(2): test %al,%al
f2f2(2): jnz 0x37(%rip)
f2f4(7): mov $0x0,0x0(%rbp)
f2fb(3): mov %rbx,%rdi
f2fe(5): call 0xffff38b2(%rip)
f303(3): test %rax,%rax
f306(3): mov %rax,%rcx
f309(6): jz 0xa7(%rip)
f30f(4): lea 0x13(%rax),%r15
f313(4): movzx 0x13(%rax),%eax
f317(2): cmp $0x2e,%al
f319(2): jnz 0xffffffd7(%rip)
f31b(4): cmp $0x2e,0x14(%rcx)
f31f(2): jz 0x81(%rip)
f321(4): movzx 0x14(%rcx),%eax
f325(2): test %al,%al
f327(2): jz 0xffffffcd(%rip)
f329(3): mov %r15,%rdi
f32c(5): mov %rcx,0x30(%rsp)
f331(5): call 0xffff35cf(%rip)
f336(4): add $0x1,%rax
f33a(6): cmp $0x0,0x8(%rsp)
f340(5): mov %rax,0x18(%rsp)
f345(6): jz 0x143(%rip)
f34b(5): cmp 0x28(%rsp),%r12
f350(5): lea 0x1(%r12),%rax
f355(5): mov 0x30(%rsp),%rcx
f35a(5): mov %rax,0x38(%rsp)
f35f(6): jz 0x1b2(%rip)
f365(4): shl/sal $0x4,%r12
f369(3): mov %r15,%rdi
f36c(5): add 0x10(%rsp),%r12
f371(5): mov %rcx,0x30(%rsp)
f376(5): call 0x1eda(%rip)
f37b(5): mov 0x30(%rsp),%rcx
f380(5): add 0x18(%rsp),%r14
f385(4): mov %rax,(%r12)
f389(3): mov (%rcx),%rax
f38c(5): mov %rax,0x8(%r12)
f391(5): mov 0x38(%rsp),%r12
f396(5): jmp 0xffffff5e(%rip)
f39b(5): nop 0x0(%rax,%rax,1)
f3a0(4): movzx 0x15(%rcx),%eax
f3a4(5): jmp 0xffffff4c(%rip)
f3a9(7): nop 0x0(%rax)
f3b0(3): mov 0x0(%rbp),%ebx
f3b3(2): test %ebx,%ebx
f3b5(6): jnz 0x1eb(%rip)
f3bb(6): cmp $0x0,0x8(%rsp)
f3c1(6): jz 0xaf(%rip)
f3c7(3): test %r12,%r12
f3ca(4): lea 0x1(%r14),%rbx
f3ce(2): jnz 0x32(%rip)
f3d0(3): mov %rbx,%rdi
f3d3(5): call 0x1c4d(%rip)
f3d8(3): mov %rax,%r13
f3db(3): mov %rax,%rbx
f3de(5): mov 0x10(%rsp),%rdi
f3e3(5): call 0xffff3a2d(%rip)
f3e8(3): mov $0x0,(%rbx)
f3eb(4): add $0x48,%rsp
f3ef(3): mov %r13,%rax
f3f2(1): pop %rbx
f3f3(1): pop %rbp
f3f4(2): pop %r12
f3f6(2): pop %r13
f3f8(2): pop %r14
f3fa(2): pop %r15
f3fc(1): ret near (%rsp)
f3fd(3): nop (%rax)
f400(5): mov 0x10(%rsp),%r15
f405(5): mov 0x8(%rsp),%rcx
f40a(3): mov %r12,%rsi
f40d(5): mov $0x10,%edx
f412(4): shl/sal $0x4,%r12
f416(3): mov %r15,%rdi
f419(3): mov %r15,%rbp
f41c(3): add %r15,%r12
f41f(5): call 0xffff33e1(%rip)
f424(3): mov %rbx,%rdi
f427(2): xor %ebx,%ebx
f429(5): call 0x1bf7(%rip)
f42e(3): mov %rax,%r13
f431(7): nop 0x0(%rax)
f438(4): mov 0x0(%rbp),%rsi
f43c(5): lea 0x0(%r13,%rbx,1),%r14
f441(4): add $0x10,%rbp
f445(3): mov %r14,%rdi
f448(5): call 0xffff3478(%rip)
f44d(4): mov 0xfffffff0(%rbp),%rdi
f451(3): sub %r14,%rax
f454(5): lea 0x1(%rbx,%rax,1),%rbx
f459(5): call 0xffff39b7(%rip)
f45e(3): cmp %rbp,%r12
f461(2): jnz 0xffffffd7(%rip)
f463(3): add %r13,%rbx
f466(5): jmp 0xffffff78(%rip)
f46b(5): nop 0x0(%rax,%rax,1)
f470(5): cmp %r14,0x20(%rsp)
f475(6): jz 0xee(%rip)
f47b(5): lea 0x0(%r13,%r14,1),%rbx
f480(5): jmp 0xffffff68(%rip)
f485(3): nop (%rax)
f488(5): mov 0x18(%rsp),%rsi
f48d(5): mov 0x20(%rsp),%rax
f492(3): mov %rsi,%rdx
f495(3): sub %r14,%rax
f498(3): add %r14,%rdx
f49b(5): mov %rdx,0x30(%rsp)
f4a0(3): setb %dl
f4a3(3): cmp %rsi,%rax
f4a6(3): movzx %dl,%edx
f4a9(2): jnbe 0x4c(%rip)
f4ab(3): test %rdx,%rdx
f4ae(6): jnz 0xeb(%rip)
f4b4(3): test %r13,%r13
f4b7(5): mov 0x30(%rsp),%rdx
f4bc(6): jz 0xc3(%rip)
f4c2(a): mov $0x6148914691236517203,%rax
f4cc(3): cmp %rax,%rdx
f4cf(6): jnbe 0xca(%rip)
f4d5(3): mov %rdx,%rax
f4d8(3): shr $0x1,%rax
f4db(5): lea 0x1(%rdx,%rax,1),%rax
f4e0(5): mov %rax,0x20(%rsp)
f4e5(5): mov 0x20(%rsp),%rsi
f4ea(3): mov %r13,%rdi
f4ed(5): call 0x1b93(%rip)
f4f2(3): mov %rax,%r13
f4f5(5): mov 0x18(%rsp),%rdx
f4fa(5): lea 0x0(%r13,%r14,1),%rdi
f4ff(3): mov %r15,%rsi
f502(5): call 0xffff365e(%rip)
f507(5): mov 0x30(%rsp),%r14
f50c(5): jmp 0xfffffde8(%rip)
f511(6): cmp $0x0,0x10(%rsp)
f517(6): jz 0xae(%rip)
f51d(a): mov $0x384307168202282324,%rax
f527(3): cmp %rax,%r12
f52a(2): jnbe 0x6f(%rip)
f52c(3): mov %r12,%rax
f52f(3): shr $0x1,%rax
f532(5): add 0x38(%rsp),%rax
f537(5): mov %rax,0x28(%rsp)
f53c(5): mov 0x28(%rsp),%rsi
f541(5): mov 0x10(%rsp),%rdi
f546(5): mov %rcx,0x30(%rsp)
f54b(4): shl/sal $0x4,%rsi
f54f(5): call 0x1b31(%rip)
f554(5): mov 0x30(%rsp),%rcx
f559(5): mov %rax,0x10(%rsp)
f55e(5): jmp 0xfffffe07(%rip)
f563(5): mov 0x20(%rsp),%rbx
f568(3): mov %r13,%rdi
f56b(4): lea 0x1(%rbx),%rsi
f56f(5): call 0x1b11(%rip)
f574(3): mov %rax,%r13
f577(3): add %rax,%rbx
f57a(5): jmp 0xfffffe6e(%rip)
f57f(3): test %rdx,%rdx
f582(5): mov $0x80,%eax
f587(4): cmovne %rdx,%rax
f58b(3): test %rax,%rax
f58e(5): mov %rax,0x20(%rsp)
f593(6): jns 0xffffff52(%rip)
f599(5): call 0x1cd7(%rip)
f59e(2): nop 
f5a0(5): mov 0x10(%rsp),%rdi
f5a5(5): call 0xffff386b(%rip)
f5aa(3): mov %r13,%rdi
f5ad(3): xor %r13d,%r13d
f5b0(5): call 0xffff3860(%rip)
f5b5(3): mov %ebx,0x0(%rbp)
f5b8(5): jmp 0xfffffe33(%rip)
f5bd(3): xor %r13d,%r13d
f5c0(5): jmp 0xfffffe2b(%rip)
f5c5(3): test %r12,%r12
f5c8(5): mov $0x8,%eax
f5cd(5): mov $0x10,%edx
f5d2(4): cmovne %r12,%rax
f5d6(2): xor %esi,%esi
f5d8(3): mov %rax,%rdi
f5db(5): mov %rax,0x28(%rsp)
f5e0(3): mov %rdx,%rax
f5e3(3): mul %rax,%rdi,%rdx
f5e6(2): jo 0x1b(%rip)
f5e8(3): test %rax,%rax
f5eb(2): js 0xffffffae(%rip)
f5ed(3): test %rsi,%rsi
f5f0(2): jnz 0xffffffa9(%rip)
f5f2(5): lea 0x1(%r12),%rax
f5f7(5): mov %rax,0x38(%rsp)
f5fc(5): jmp 0xffffff40(%rip)
f601(5): mov $0x1,%esi
f606(2): jmp 0xffffffe2(%rip)

"savedir" :
f610(2): push %r12
f612(1): push %rbp
f613(2): mov %esi,%ebp
f615(1): push %rbx
f616(5): call 0x1f8a(%rip)
f61b(3): test %rax,%rax
f61e(2): jz 0x2a(%rip)
f620(2): mov %ebp,%esi
f622(3): mov %rax,%rbx
f625(3): mov %rax,%rdi
f628(5): call 0xfffffc68(%rip)
f62d(3): mov %rbx,%rdi
f630(3): mov %rax,%rbp
f633(5): call 0xffff342d(%rip)
f638(2): test %eax,%eax
f63a(2): jnz 0x16(%rip)
f63c(3): mov %rbp,%rax
f63f(1): pop %rbx
f640(1): pop %rbp
f641(2): pop %r12
f643(1): ret near (%rsp)
f644(4): nop 0x0(%rax)
f648(2): xor %ebp,%ebp
f64a(2): jmp 0xfffffff2(%rip)
f64c(4): nop 0x0(%rax)
f650(5): call 0xffff3120(%rip)
f655(3): mov (%rax),%r12d
f658(3): mov %rax,%rbx
f65b(3): mov %rbp,%rdi
f65e(5): call 0xffff37b2(%rip)
f663(2): xor %ebp,%ebp
f665(3): mov %r12d,(%rbx)
f668(2): jmp 0xffffffd4(%rip)

"try_nocreate" :
f670(1): push %rbx
f671(3): mov %rdi,%rsi
f674(5): mov $0x1,%edi
f679(7): sub $0xa0,%rsp
f680(3): mov %rsp,%rdx
f683(9): mov $0x28,%rax
f68c(8): mov %rax,0x98(%rsp)
f694(2): xor %eax,%eax
f696(5): call 0xffff327a(%rip)
f69b(2): mov %eax,%ebx
f69d(5): call 0xffff30d3(%rip)
f6a2(2): test %ebx,%ebx
f6a4(2): jz 0x1c(%rip)
f6a6(2): mov (%rax),%edx
f6a8(3): cmp $0x4b,%edx
f6ab(2): jz 0x15(%rip)
f6ad(2): xor %eax,%eax
f6af(3): cmp $0x2,%edx
f6b2(3): setnz %al
f6b5(2): neg %eax
f6b7(2): jmp 0x14(%rip)
f6b9(7): nop 0x0(%rax)
f6c0(6): mov $0x11,(%rax)
f6c6(5): mov $0xffffffff,%eax
f6cb(8): mov 0x98(%rsp),%rcx
f6d3(9): xor $0x28,%rcx
f6dc(2): jnz 0xb(%rip)
f6de(7): add $0xa0,%rsp
f6e5(1): pop %rbx
f6e6(1): ret near (%rsp)
f6e7(5): call 0xffff3249(%rip)

"try_dir" :
f6f0(5): mov $0x1c0,%esi
f6f5(5): jmp 0xffff30eb(%rip)

"try_file" :
f700(2): mov (%rsi),%esi
f702(5): mov $0x180,%edx
f707(2): xor %eax,%eax
f709(4): and $0x3c,%sil
f70d(4): or $0xc2,%sil
f711(5): jmp 0xffff35bf(%rip)

"try_tempname_len" :
f720(2): push %r15
f722(2): push %r14
f724(3): mov %rdi,%r15
f727(2): push %r13
f729(2): push %r12
f72b(3): mov %r8,%r14
f72e(1): push %rbp
f72f(1): push %rbx
f730(2): mov %esi,%ebp
f732(4): sub $0x38,%rsp
f736(5): mov %rdx,0x18(%rsp)
f73b(4): mov %rdi,(%rsp)
f73f(5): mov %rcx,0x20(%rsp)
f744(5): call 0xffff302c(%rip)
f749(5): mov %rax,0x8(%rsp)
f74e(2): mov (%rax),%eax
f750(3): mov %r15,%rdi
f753(4): mov %eax,0x2c(%rsp)
f757(5): call 0xffff31a9(%rip)
f75c(3): movsxd %ebp,%rsi
f75f(4): lea 0x0(%rsi,%r14,1),%rdx
f763(3): cmp %rax,%rdx
f766(6): jnbe 0x115(%rip)
f76c(3): sub %r14,%rax
f76f(3): mov %rax,%rbx
f772(3): sub %rsi,%rbx
f775(7): lea 0x5a29(%rip),%rsi
f77c(4): lea 0x0(%r15,%rbx,1),%rax
f780(3): mov %rax,%rdi
f783(5): mov %rax,0x10(%rsp)
f788(5): call 0xffff32c8(%rip)
f78d(3): cmp %rax,%r14
f790(6): jnbe 0xeb(%rip)
f796(2): xor %edi,%edi
f798(3): mov %r14,%rsi
f79b(5): call 0x2085(%rip)
f7a0(3): test %rax,%rax
f7a3(3): mov %rax,%rbp
f7a6(6): jz 0xe7(%rip)
f7ac(4): mov (%rsp),%rax
f7b0(7): lea 0x60c9(%rip),%r12
f7b7(6): mov $0x3a2f8,%r13d
f7bd(3): add %r14,%rax
f7c0(3): add %rax,%rbx
f7c3(5): nop 0x0(%rax,%rax,1)
f7c8(3): test %r14,%r14
f7cb(5): mov 0x10(%rsp),%r15
f7d0(2): jz 0x27(%rip)
f7d2(6): nop 0x0(%rax,%rax,1)
f7d8(5): mov $0x3d,%esi
f7dd(3): mov %rbp,%rdi
f7e0(4): add $0x1,%r15
f7e4(5): call 0x208c(%rip)
f7e9(5): movzx 0x0(%r12,%rax,1),%eax
f7ee(4): mov %al,0xffffffff(%r15)
f7f2(3): cmp %rbx,%r15
f7f5(2): jnz 0xffffffe3(%rip)
f7f7(5): mov 0x18(%rsp),%rsi
f7fc(4): mov (%rsp),%rdi
f800(5): mov 0x20(%rsp),%rax
f805(2): call %rax
f807(2): test %eax,%eax
f809(2): mov %eax,%edx
f80b(2): jns 0x2e(%rip)
f80d(5): mov 0x8(%rsp),%rax
f812(2): mov (%rax),%ecx
f814(3): cmp $0x11,%ecx
f817(2): jnz 0x5d(%rip)
f819(4): sub $0x1,%r13d
f81d(2): jnz 0xffffffab(%rip)
f81f(3): mov %rbp,%rdi
f822(5): call 0x218e(%rip)
f827(5): mov 0x8(%rsp),%rax
f82c(5): mov $0xffffffff,%edx
f831(6): mov $0x11,(%rax)
f837(2): jmp 0x2c(%rip)
f839(5): mov 0x8(%rsp),%rcx
f83e(4): mov 0x2c(%rsp),%eax
f842(2): mov %eax,(%rcx)
f844(2): mov %eax,%ecx
f846(3): mov %rbp,%rdi
f849(4): mov %edx,0x10(%rsp)
f84d(3): mov %ecx,(%rsp)
f850(5): call 0x2160(%rip)
f855(5): mov 0x8(%rsp),%rax
f85a(3): mov (%rsp),%ecx
f85d(4): mov 0x10(%rsp),%edx
f861(2): mov %ecx,(%rax)
f863(4): add $0x38,%rsp
f867(2): mov %edx,%eax
f869(1): pop %rbx
f86a(1): pop %rbp
f86b(2): pop %r12
f86d(2): pop %r13
f86f(2): pop %r14
f871(2): pop %r15
f873(1): ret near (%rsp)
f874(5): mov $0xffffffff,%edx
f879(2): jmp 0xffffffcd(%rip)
f87b(5): mov 0x8(%rsp),%rax
f880(5): mov $0xffffffff,%edx
f885(6): mov $0x16,(%rax)
f88b(2): jmp 0xffffffd8(%rip)
f88d(5): mov $0xffffffff,%edx
f892(2): jmp 0xffffffd1(%rip)

"gen_tempname_len" :
f8a0(4): sub $0x18,%rsp
f8a4(3): cmp $0x1,%ecx
f8a7(4): mov %edx,0xc(%rsp)
f8ab(2): jz 0x65(%rip)
f8ad(3): cmp $0x2,%ecx
f8b0(2): jz 0x28(%rip)
f8b2(2): test %ecx,%ecx
f8b4(2): jz 0x3c(%rip)
f8b6(7): lea 0x5fa3(%rip),%rcx
f8bd(7): lea 0x5f44(%rip),%rsi
f8c4(7): lea 0x5f65(%rip),%rdi
f8cb(5): mov $0x147,%edx
f8d0(5): call 0xffff3110(%rip)
f8d5(3): nop (%rax)
f8d8(5): lea 0xc(%rsp),%rdx
f8dd(7): lea 0xfffffd8c(%rip),%rcx
f8e4(5): call 0xfffffe3c(%rip)
f8e9(4): add $0x18,%rsp
f8ed(1): ret near (%rsp)
f8ee(2): nop 
f8f0(5): lea 0xc(%rsp),%rdx
f8f5(7): lea 0xfffffe04(%rip),%rcx
f8fc(5): call 0xfffffe24(%rip)
f901(4): add $0x18,%rsp
f905(1): ret near (%rsp)
f906(a): nop 0x0(%rax,%rax,1)
f910(5): lea 0xc(%rsp),%rdx
f915(7): lea 0xfffffdd4(%rip),%rcx
f91c(5): call 0xfffffe04(%rip)
f921(4): add $0x18,%rsp
f925(1): ret near (%rsp)

"gen_tempname" :
f930(6): mov $0x6,%r8d
f936(5): jmp 0xffffff6a(%rip)

"try_tempname" :
f940(6): mov $0x6,%r8d
f946(5): jmp 0xfffffdda(%rip)

"fd_safer" :
f950(2): push %r13
f952(2): push %r12
f954(1): push %rbp
f955(1): push %rbx
f956(2): mov %edi,%ebx
f958(4): sub $0x8,%rsp
f95c(3): cmp $0x2,%edi
f95f(2): jnbe 0x23(%rip)
f961(5): call 0x2b1f(%rip)
f966(3): mov %eax,%r12d
f969(5): call 0xffff2e07(%rip)
f96e(3): mov (%rax),%r13d
f971(3): mov %rax,%rbp
f974(2): mov %ebx,%edi
f976(5): call 0xffff30ba(%rip)
f97b(3): mov %r12d,%ebx
f97e(4): mov %r13d,0x0(%rbp)
f982(4): add $0x8,%rsp
f986(2): mov %ebx,%eax
f988(1): pop %rbx
f989(1): pop %rbp
f98a(2): pop %r12
f98c(2): pop %r13
f98e(1): ret near (%rsp)

"dev_info_hash" :
f990(3): mov (%rdi),%rax
f993(2): xor %edx,%edx
f995(3): div %rsi,%rax
f998(3): mov %rdx,%rax
f99b(1): ret near (%rsp)

"dev_info_compare" :
f9a0(3): mov (%rsi),%rax
f9a3(3): cmp %rax,(%rdi)
f9a6(3): setz %al
f9a9(1): ret near (%rsp)

"utimecmpat" :
f9b0(2): push %r15
f9b2(2): push %r14
f9b4(2): push %r13
f9b6(2): push %r12
f9b8(1): push %rbp
f9b9(1): push %rbx
f9ba(3): mov %r8d,%ebx
f9bd(3): and $0x1,%ebx
f9c0(7): sub $0x128,%rsp
f9c7(4): mov 0x60(%rcx),%r13
f9cb(4): mov 0x58(%rdx),%r14
f9cf(9): mov $0x28,%rax
f9d8(8): mov %rax,0x118(%rsp)
f9e0(2): xor %eax,%eax
f9e2(2): test %ebx,%ebx
f9e4(4): mov 0x58(%rcx),%r12
f9e8(4): mov 0x60(%rdx),%r15
f9ec(3): mov %r13d,%r9d
f9ef(6): jz 0xe9(%rip)
f9f5(3): cmp %r12,%r14
f9f8(3): mov %edi,%r10d
f9fb(5): setz 0x38(%rsp)
fa00(5): movzx 0x38(%rsp),%edi
fa05(3): cmp %r13d,%r15d
fa08(3): setz %al
fa0b(3): and %dil,%al
fa0e(4): mov %al,0x8(%rsp)
fa12(6): jnz 0x10e(%rip)
fa18(5): lea 0xffffffff(%r12),%rax
fa1d(3): cmp %r14,%rax
fa20(6): jnle 0x108(%rip)
fa26(4): lea 0xffffffff(%r14),%rax
fa2a(3): cmp %r12,%rax
fa2d(6): jnle 0xc2(%rip)
fa33(3): mov %rdx,%rbp
fa36(7): mov 0x20acc3(%rip),%rdx
fa3d(3): mov %rsi,%r11
fa40(3): test %rdx,%rdx
fa43(6): jz 0x59d(%rip)
fa49(7): mov 0x20aca8(%rip),%rsi
fa50(3): test %rsi,%rsi
fa53(6): jz 0xdd(%rip)
fa59(4): mov 0x0(%rbp),%rax
fa5d(3): mov %rdx,%rdi
fa60(5): mov %r11,0x28(%rsp)
fa65(5): mov %r10d,0x20(%rsp)
fa6a(5): mov %r9d,0x18(%rsp)
fa6f(3): mov %rax,(%rsi)
fa72(5): call 0xffffd15e(%rip)
fa77(3): test %rax,%rax
fa7a(5): mov %rax,0x10(%rsp)
fa7f(5): mov 0x18(%rsp),%r9d
fa84(5): mov 0x20(%rsp),%r10d
fa89(5): mov 0x28(%rsp),%r11
fa8e(6): jz 0xfa(%rip)
fa94(7): cmp %rax,0x20ac5d(%rip)
fa9b(6): jz 0x5a5(%rip)
faa1(5): mov 0x10(%rsp),%rax
faa6(4): cmp $0x0,0xc(%rax)
faaa(3): mov 0x8(%rax),%esi
faad(4): mov %esi,0x18(%rsp)
fab1(6): jz 0x159(%rip)
fab7(2): xor %eax,%eax
fab9(6): cmp $0x77359400,%esi
fabf(3): setz %al
fac2(2): not %eax
fac4(2): cwde 
fac6(3): and %rax,%r12
fac9(3): mov %r9d,%eax
facc(3): mov %r13d,%r9d
facf(1): cdq %eax
fad0(2): idiv %esi,%eax
fad2(3): sub %edx,%r9d
fad5(3): nop (%rax)
fad8(3): cmp %r14,%r12
fadb(2): jnle 0x4d(%rip)
fadd(5): mov $0x1,%ebx
fae2(2): jl 0xd(%rip)
fae4(3): cmp %r15d,%r9d
fae7(2): jnle 0x41(%rip)
fae9(3): setl %bl
faec(3): movzx %bl,%ebx
faef(8): mov 0x118(%rsp),%rsi
faf7(9): xor $0x28,%rsi
fb00(2): mov %ebx,%eax
fb02(6): jnz 0x5d6(%rip)
fb08(7): add $0x128,%rsp
fb0f(1): pop %rbx
fb10(1): pop %rbp
fb11(2): pop %r12
fb13(2): pop %r13
fb15(2): pop %r14
fb17(2): pop %r15
fb19(1): ret near (%rsp)
fb1a(6): nop 0x0(%rax,%rax,1)
fb20(2): xor %ebx,%ebx
fb22(2): jmp 0xffffffcd(%rip)
fb24(4): nop 0x0(%rax)
fb28(5): mov $0xffffffff,%ebx
fb2d(2): jmp 0xffffffc2(%rip)
fb2f(1): nop 
fb30(5): mov $0x10,%edi
fb35(5): mov %r11,0x28(%rsp)
fb3a(5): mov %r10d,0x20(%rsp)
fb3f(5): mov %r9d,0x18(%rsp)
fb44(5): mov %rdx,0x10(%rsp)
fb49(5): call 0xffff3077(%rip)
fb4e(3): test %rax,%rax
fb51(3): mov %rax,%rsi
fb54(7): mov %rax,0x20ab9d(%rip)
fb5b(5): mov 0x10(%rsp),%rdx
fb60(5): mov 0x18(%rsp),%r9d
fb65(5): mov 0x20(%rsp),%r10d
fb6a(5): mov 0x28(%rsp),%r11
fb6f(2): jz 0x29(%rip)
fb71(7): mov $0x77359400,0x8(%rax)
fb78(4): mov $0x0,0xc(%rax)
fb7c(5): jmp 0xfffffedd(%rip)
fb81(7): nop 0x0(%rax)
fb88(7): mov 0x20ab71(%rip),%rdx
fb8f(3): test %rdx,%rdx
fb92(6): jz 0x4a0(%rip)
fb98(5): lea 0x50(%rsp),%rcx
fb9d(4): mov 0x0(%rbp),%rax
fba1(3): mov %rdx,%rdi
fba4(5): mov %r11,0x30(%rsp)
fba9(5): mov %r10d,0x28(%rsp)
fbae(3): mov %rcx,%rsi
fbb1(5): mov %r9d,0x20(%rsp)
fbb6(5): mov %rcx,0x18(%rsp)
fbbb(5): mov %rax,0x50(%rsp)
fbc0(5): call 0xffffc5a0(%rip)
fbc5(3): test %rax,%rax
fbc8(5): mov %rax,0x10(%rsp)
fbcd(5): mov 0x18(%rsp),%rcx
fbd2(5): mov 0x20(%rsp),%r9d
fbd7(5): mov 0x28(%rsp),%r10d
fbdc(5): mov 0x30(%rsp),%r11
fbe1(6): jnz 0xfffffec0(%rip)
fbe7(9): nop 0x0(%rax,%rax,1)
fbf0(8): mov $0x77359400,0x58(%rsp)
fbf8(5): mov $0x0,0x5c(%rsp)
fbfd(8): mov $0x77359400,0x18(%rsp)
fc05(5): mov %rcx,0x10(%rsp)
fc0a(4): mov 0x50(%rbp),%rcx
fc0e(5): mov $0x66666667,%eax
fc13(4): mov 0x70(%rbp),%rsi
fc17(2): imul %eax,%ecx,%edx
fc19(2): mov %ecx,%eax
fc1b(5): mov %rcx,0x28(%rsp)
fc20(3): sar $0x1f,%eax
fc23(3): sar $0x2,%edx
fc26(2): sub %eax,%edx
fc28(3): lea 0x0(%rdx,%rdx,4),%eax
fc2b(4): mov %edx,0x20(%rsp)
fc2f(2): add %eax,%eax
fc31(2): sub %eax,%ecx
fc33(5): mov $0x66666667,%eax
fc38(2): imul %eax,%esi,%edx
fc3a(2): mov %esi,%eax
fc3c(3): sar $0x1f,%eax
fc3f(3): sar $0x2,%edx
fc42(2): mov %edx,%edi
fc44(2): sub %eax,%edi
fc46(3): lea 0x0(%rdi,%rdi,4),%eax
fc49(2): add %eax,%eax
fc4b(2): sub %eax,%esi
fc4d(5): mov $0x66666667,%eax
fc52(3): imul %eax,%r15d,%edx
fc55(3): mov %r15d,%eax
fc58(2): or %esi,%ecx
fc5a(3): sar $0x1f,%eax
fc5d(3): mov %r15d,%esi
fc60(3): sar $0x2,%edx
fc63(3): mov %edx,%r8d
fc66(3): sub %eax,%r8d
fc69(4): lea 0x0(%r8,%r8,4),%eax
fc6d(2): add %eax,%eax
fc6f(2): sub %eax,%esi
fc71(2): or %esi,%ecx
fc73(6): jnz 0x355(%rip)
fc79(5): cmp $0xa,0x18(%rsp)
fc7e(4): mov 0x48(%rbp),%rax
fc82(2): mov %edi,%ecx
fc84(4): mov 0x20(%rsp),%edx
fc88(3): mov %r8d,%esi
fc8b(5): mov %rax,0x48(%rsp)
fc90(4): mov %edx,0x30(%rsp)
fc94(6): jle 0x414(%rip)
fc9a(5): mov $0x66666667,%eax
fc9f(2): imul %eax,%edi,%edx
fca1(2): mov %edi,%eax
fca3(3): sar $0x1f,%eax
fca6(3): sar $0x2,%edx
fca9(2): sub %eax,%edx
fcab(3): lea 0x0(%rdx,%rdx,4),%eax
fcae(2): add %eax,%eax
fcb0(2): sub %eax,%edi
fcb2(5): mov $0x66666667,%eax
fcb7(4): imul %eax,0x20(%rsp),%edx
fcbb(4): mov 0x20(%rsp),%eax
fcbf(3): sar $0x1f,%eax
fcc2(3): sar $0x2,%edx
fcc5(2): sub %eax,%edx
fcc7(3): lea 0x0(%rdx,%rdx,4),%eax
fcca(4): mov 0x20(%rsp),%edx
fcce(8): mov $0xa,0x20(%rsp)
fcd6(2): add %eax,%eax
fcd8(2): sub %eax,%edx
fcda(5): mov $0x66666667,%eax
fcdf(2): or %edx,%edi
fce1(3): imul %eax,%r8d,%edx
fce4(3): mov %r8d,%eax
fce7(4): mov %edi,0x3c(%rsp)
fceb(3): sar $0x1f,%eax
fcee(5): mov $0x66666667,%edi
fcf3(3): sar $0x2,%edx
fcf6(2): sub %eax,%edx
fcf8(3): lea 0x0(%rdx,%rdx,4),%eax
fcfb(5): mov $0x8,%edx
fd00(2): add %eax,%eax
fd02(3): sub %eax,%r8d
fd05(4): mov 0x3c(%rsp),%eax
fd09(3): or %r8d,%eax
fd0c(6): jnz 0x3b8(%rip)
fd12(5): mov %r9d,0x3c(%rsp)
fd17(5): mov %r14,0x40(%rsp)
fd1c(6): mov $0xa,%r9d
fd22(5): mov 0x30(%rsp),%r8d
fd27(5): mov %r12,0x20(%rsp)
fd2c(3): mov %edx,%r14d
fd2f(5): mov %rbp,0x30(%rsp)
fd34(3): mov %r8d,%eax
fd37(4): sar $0x1f,%r8d
fd3b(4): lea 0x0(%r9,%r9,4),%ebp
fd3f(2): imul %eax,%edi,%edx
fd41(2): mov %ecx,%eax
fd43(3): sar $0x1f,%ecx
fd46(2): add %ebp,%ebp
fd48(3): mov %ebp,%r9d
fd4b(3): sar $0x2,%edx
fd4e(3): sub %r8d,%edx
fd51(3): mov %edx,%r8d
fd54(2): imul %eax,%edi,%edx
fd56(2): mov %esi,%eax
fd58(3): sar $0x1f,%esi
fd5b(3): sar $0x2,%edx
fd5e(2): sub %ecx,%edx
fd60(2): mov %edx,%ecx
fd62(2): imul %eax,%edi,%edx
fd64(3): sar $0x2,%edx
fd67(2): sub %esi,%edx
fd69(4): cmp 0x18(%rsp),%ebp
fd6d(2): mov %edx,%esi
fd6f(6): jnl 0x2e1(%rip)
fd75(3): mov %r8d,%eax
fd78(3): mov %r8d,%r12d
fd7b(2): imul %eax,%edi,%edx
fd7d(3): mov %r8d,%eax
fd80(3): sar $0x1f,%eax
fd83(3): sar $0x2,%edx
fd86(2): sub %eax,%edx
fd88(3): lea 0x0(%rdx,%rdx,4),%eax
fd8b(2): add %eax,%eax
fd8d(3): sub %eax,%r12d
fd90(2): mov %ecx,%eax
fd92(2): imul %eax,%edi,%edx
fd94(2): mov %ecx,%eax
fd96(3): sar $0x1f,%eax
fd99(3): sar $0x2,%edx
fd9c(2): sub %eax,%edx
fd9e(3): lea 0x0(%rdx,%rdx,4),%eax
fda1(2): mov %ecx,%edx
fda3(2): add %eax,%eax
fda5(2): sub %eax,%edx
fda7(2): mov %esi,%eax
fda9(3): or %edx,%r12d
fdac(2): imul %eax,%edi,%edx
fdae(2): mov %esi,%eax
fdb0(3): sar $0x1f,%eax
fdb3(3): sar $0x2,%edx
fdb6(2): sub %eax,%edx
fdb8(3): lea 0x0(%rdx,%rdx,4),%eax
fdbb(2): mov %esi,%edx
fdbd(2): add %eax,%eax
fdbf(2): sub %eax,%edx
fdc1(3): or %edx,%r12d
fdc4(6): jnz 0x28c(%rip)
fdca(4): sub $0x1,%r14d
fdce(6): jnz 0xffffff66(%rip)
fdd4(5): mov 0x40(%rsp),%r14
fdd9(5): mov 0x30(%rsp),%rbp
fdde(5): mov 0x48(%rsp),%rax
fde3(5): mov 0x20(%rsp),%r12
fde8(5): mov 0x3c(%rsp),%r9d
fded(3): or %r14,%rax
fdf0(4): or 0x68(%rbp),%rax
fdf4(2): test $0x1,%al
fdf6(5): mov 0x10(%rsp),%rax
fdfb(6): jz 0x28d(%rip)
fe01(7): mov $0x3b9aca00,0x8(%rax)
fe08(8): mov $0x3b9aca00,0x20(%rsp)
fe10(3): mov %r12,%rax
fe13(3): cmp %r12,%r14
fe16(6): jnle 0xfffffcd9(%rip)
fe1c(3): cmp %r13d,%r15d
fe1f(2): jl 0xd(%rip)
fe21(5): cmp $0x0,0x38(%rsp)
fe26(6): jnz 0xfffffcc9(%rip)
fe2c(3): cmp %rax,%r14
fe2f(6): jl 0xfffffcf9(%rip)
fe35(2): jnz 0x18(%rip)
fe37(3): mov %r9d,%eax
fe3a(1): cdq %eax
fe3b(4): idiv 0x20(%rsp),%eax
fe3f(3): mov %r13d,%eax
fe42(2): sub %edx,%eax
fe44(3): cmp %r15d,%eax
fe47(6): jnle 0xfffffce1(%rip)
fe4d(5): mov 0x48(%rsp),%rax
fe52(5): mov $0x38e38e39,%edx
fe57(5): lea 0x60(%rsp),%rbp
fe5c(3): mov %r11,%rsi
fe5f(3): mov %r10d,%edi
fe62(5): mov $0x100,%ecx
fe67(5): mov %r9d,0x18(%rsp)
fe6c(5): mov %r10d,0x38(%rsp)
fe71(5): mov %rax,0x60(%rsp)
fe76(5): movsxd 0x28(%rsp),%rax
fe7b(5): mov %rax,0x68(%rsp)
fe80(5): movzx 0x8(%rsp),%eax
fe85(5): mov %r11,0x8(%rsp)
fe8a(3): or %r14,%rax
fe8d(5): mov %rax,0x70(%rsp)
fe92(4): mov 0x20(%rsp),%eax
fe96(2): mul %eax,%edx,%edx
fe98(2): mov %edx,%eax
fe9a(3): mov %rbp,%rdx
fe9d(2): shr $0x1,%eax
fe9f(3): add %r15d,%eax
fea2(2): cwde 
fea4(5): mov %rax,0x78(%rsp)
fea9(5): call 0xffff28a7(%rip)
feae(2): test %eax,%eax
feb0(5): mov 0x38(%rsp),%r10d
feb5(5): mov 0x8(%rsp),%r11
feba(5): mov 0x18(%rsp),%r9d
febf(2): jz 0xc(%rip)
fec1(5): mov $0xfffffffe,%ebx
fec6(5): jmp 0xfffffc29(%rip)
fecb(8): lea 0x80(%rsp),%rcx
fed3(3): mov %r11,%rdx
fed6(6): mov $0x100,%r8d
fedc(3): mov %r10d,%esi
fedf(5): mov $0x1,%edi
fee4(5): mov %r9d,0x18(%rsp)
fee9(5): mov %r11,0x8(%rsp)
feee(5): mov %r10d,0x38(%rsp)
fef3(5): call 0xffff2a8d(%rip)
fef8(8): mov 0xe0(%rsp),%rcx
ff00(3): mov %eax,%r8d
ff03(8): mov 0xd8(%rsp),%rax
ff0b(3): movsxd %r15d,%rdx
ff0e(5): mov 0x38(%rsp),%r10d
ff13(5): mov 0x8(%rsp),%r11
ff18(5): mov 0x18(%rsp),%r9d
ff1d(3): xor %rdx,%rcx
ff20(3): xor %r14,%rax
ff23(3): or %rcx,%rax
ff26(3): movsxd %r8d,%rcx
ff29(3): or %rcx,%rax
ff2c(6): jnz 0x1b1(%rip)
ff32(7): mov 0xd8(%rsp),%ecx
ff39(5): mov $0xa,%esi
ff3e(3): and $0x1,%ecx
ff41(6): imul %ecx,$0x3b9aca00,%ecx
ff47(7): add 0xe0(%rsp),%ecx
ff4e(2): mov %ecx,%eax
ff50(1): cdq %eax
ff51(2): idiv %esi,%eax
ff53(2): test %edx,%edx
ff55(6): jnz 0x1d0(%rip)
ff5b(5): cmp $0xa,0x20(%rsp)
ff60(2): jz 0x3d(%rip)
ff62(6): mov $0x9,%r8d
ff68(5): mov $0xa,%esi
ff6d(5): mov $0xa,%edi
ff72(2): jmp 0xb(%rip)
ff74(3): imul %esi,$0xa,%esi
ff77(4): cmp 0x20(%rsp),%esi
ff7b(2): jz 0x22(%rip)
ff7d(2): mov %ecx,%eax
ff7f(1): cdq %eax
ff80(2): idiv %edi,%eax
ff82(1): cdq %eax
ff83(2): mov %eax,%ecx
ff85(2): idiv %edi,%eax
ff87(2): test %edx,%edx
ff89(6): jnz 0x193(%rip)
ff8f(4): sub $0x1,%r8d
ff93(2): jnz 0xffffffe1(%rip)
ff95(8): mov $0x77359400,0x20(%rsp)
ff9d(4): mov 0x20(%rsp),%esi
ffa1(2): xor %eax,%eax
ffa3(6): cmp $0x77359400,%esi
ffa9(2): mov %esi,%ebx
ffab(3): setz %al
ffae(2): not %eax
ffb0(2): cwde 
ffb2(3): and %rax,%r12
ffb5(3): mov %r9d,%eax
ffb8(3): mov %r13d,%r9d
ffbb(1): cdq %eax
ffbc(2): idiv %esi,%eax
ffbe(3): sub %edx,%r9d
ffc1(7): nop 0x0(%rax)
ffc8(5): mov 0x10(%rsp),%rax
ffcd(3): mov %ebx,0x8(%rax)
ffd0(4): mov $0x1,0xc(%rax)
ffd4(5): jmp 0xfffffb04(%rip)
ffd9(7): nop 0x0(%rax)
ffe0(7): mov 0x209fe1(%rip),%r8
ffe7(7): lea 0xfffff9a2(%rip),%rdx
ffee(7): lea 0xfffff9ab(%rip),%rcx
fff5(5): mov %rsi,0x20(%rsp)
fffa(5): mov $0x10,%edi
ffff(2): xor %esi,%esi
10001(5): mov %r10d,0x18(%rsp)
10006(5): mov %r13d,0x10(%rsp)
1000b(5): call 0xffffc3c5(%rip)
10010(3): test %rax,%rax
10013(3): mov %rax,%rdx
10016(7): mov %rax,0x20a6e3(%rip)
1001d(5): mov 0x10(%rsp),%r9d
10022(5): mov 0x18(%rsp),%r10d
10027(5): mov 0x20(%rsp),%r11
1002c(6): jnz 0xfffffa1d(%rip)
10032(5): lea 0x50(%rsp),%rcx
10037(5): jmp 0xfffffbb9(%rip)
1003c(4): nop 0x0(%rax)
10040(b): mov $0x0,0x20a6ad(%rip)
1004b(5): jmp 0xfffffa56(%rip)
10050(6): cmp $0x77359400,%ebp
10056(5): mov 0x20(%rsp),%r12
1005b(5): mov 0x10(%rsp),%rsi
10060(5): setz 0x8(%rsp)
10065(5): movzx 0x8(%rsp),%eax
1006a(5): mov %r9d,0x20(%rsp)
1006f(5): mov 0x40(%rsp),%r14
10074(5): mov 0x3c(%rsp),%r9d
10079(3): mov %ebp,0x8(%rsi)
1007c(2): not %eax
1007e(2): cwde 
10080(3): and %r12,%rax
10083(5): jmp 0xfffffd90(%rip)
10088(7): mov $0x77359400,0x8(%rax)
1008f(3): mov %r12,%rax
10092(5): mov $0x1,0x8(%rsp)
10097(4): and $0xfffffffe,%rax
1009b(8): mov $0x77359400,0x20(%rsp)
100a3(5): jmp 0xfffffd70(%rip)
100a8(5): mov 0x10(%rsp),%rax
100ad(8): mov $0xa,0x20(%rsp)
100b5(7): mov $0xa,0x8(%rax)
100bc(3): mov %r12,%rax
100bf(5): jmp 0xfffffd54(%rip)
100c4(5): mov 0x10(%rsp),%rax
100c9(7): mov $0xa,0x8(%rax)
100d0(3): mov %r12,%rax
100d3(5): jmp 0xfffffd40(%rip)
100d8(5): call 0xffff2858(%rip)
100dd(5): mov %rdx,0x78(%rsp)
100e2(5): mov $0x100,%ecx
100e7(3): mov %rbp,%rdx
100ea(3): mov %r11,%rsi
100ed(3): mov %r10d,%edi
100f0(5): mov %r8d,0x8(%rsp)
100f5(5): mov %r9d,0x38(%rsp)
100fa(5): mov %r14,0x70(%rsp)
100ff(5): call 0xffff2651(%rip)
10104(5): mov 0x8(%rsp),%r8d
10109(5): mov 0x38(%rsp),%r9d
1010e(3): test %r8d,%r8d
10111(6): jnz 0xfffffdb0(%rip)
10117(5): jmp 0xfffffe1b(%rip)
1011c(4): mov %esi,0x20(%rsp)
10120(5): jmp 0xfffffe7d(%rip)
10125(4): mov %ebx,0x20(%rsp)
10129(5): jmp 0xfffffe74(%rip)

"utimecmp" :
10130(3): mov %ecx,%r8d
10133(3): mov %rdx,%rcx
10136(3): mov %rsi,%rdx
10139(3): mov %rdi,%rsi
1013c(5): mov $0xffffff9c,%edi
10141(5): jmp 0xfffff86f(%rip)

"update_timespec" :
10150(1): push %rbp
10151(1): push %rbx
10152(3): mov %rdi,%rbp
10155(4): sub $0x18,%rsp
10159(3): mov (%rsi),%rbx
1015c(4): mov 0x8(%rbx),%rax
10160(4): mov 0x18(%rbx),%rdx
10164(6): cmp $0x3ffffffe,%rax
1016a(2): jz 0x66(%rip)
1016c(6): cmp $0x3fffffff,%rax
10172(2): jz 0x1e(%rip)
10174(7): cmp $0x3ffffffe,%rdx
1017b(2): jz 0x33(%rip)
1017d(2): xor %eax,%eax
1017f(7): cmp $0x3fffffff,%rdx
10186(2): jz 0x72(%rip)
10188(4): add $0x18,%rsp
1018c(1): pop %rbx
1018d(1): pop %rbp
1018e(1): ret near (%rsp)
1018f(1): nop 
10190(7): cmp $0x3fffffff,%rdx
10197(2): jz 0x81(%rip)
10199(3): mov %rbx,%rdi
1019c(5): call 0x14a4(%rip)
101a1(4): mov 0x18(%rbx),%rdx
101a5(7): cmp $0x3ffffffe,%rdx
101ac(2): jnz 0xffffffd1(%rip)
101ae(4): mov 0x60(%rbp),%rax
101b2(4): mov 0x58(%rbp),%rdx
101b6(4): mov %rax,0x18(%rbx)
101ba(4): mov %rdx,0x10(%rbx)
101be(4): add $0x18,%rsp
101c2(2): xor %eax,%eax
101c4(1): pop %rbx
101c5(1): pop %rbp
101c6(1): ret near (%rsp)
101c7(9): nop 0x0(%rax,%rax,1)
101d0(7): cmp $0x3ffffffe,%rdx
101d7(5): mov $0x1,%eax
101dc(2): jz 0xffffffac(%rip)
101de(4): mov 0x50(%rdi),%rax
101e2(4): mov 0x48(%rdi),%rcx
101e6(4): mov %rax,0x8(%rbx)
101ea(2): xor %eax,%eax
101ec(7): cmp $0x3fffffff,%rdx
101f3(3): mov %rcx,(%rbx)
101f6(2): jnz 0xffffff92(%rip)
101f8(4): lea 0x10(%rbx),%rdi
101fc(4): mov %al,0xf(%rsp)
10200(5): call 0x1440(%rip)
10205(5): movzx 0xf(%rsp),%eax
1020a(4): add $0x18,%rsp
1020e(1): pop %rbx
1020f(1): pop %rbp
10210(1): ret near (%rsp)
10211(7): nop 0x0(%rax)
10218(7): mov $0x0,(%rsi)
1021f(2): xor %eax,%eax
10221(5): jmp 0xffffff67(%rip)

"validate_timespec" :
10230(4): mov 0x8(%rdi),%r9
10234(7): lea 0xc0000002(%r9),%rcx
1023b(4): cmp $0x1,%rcx
1023f(2): jbe 0xb(%rip)
10241(7): cmp $0x3b9ac9ff,%r9
10248(2): jnbe 0x78(%rip)
1024a(4): mov 0x18(%rdi),%rdx
1024e(7): lea 0xc0000002(%rdx),%r8
10255(4): cmp $0x1,%r8
10259(2): jbe 0xb(%rip)
1025b(7): cmp $0x3b9ac9ff,%rdx
10262(2): jnbe 0x5e(%rip)
10264(2): xor %esi,%esi
10266(3): xor %r10d,%r10d
10269(4): cmp $0x1,%rcx
1026d(2): jnbe 0x1c(%rip)
1026f(2): xor %esi,%esi
10271(7): cmp $0x3ffffffe,%r9
10278(7): mov $0x0,(%rdi)
1027f(4): setz %sil
10283(6): mov $0x1,%r10d
10289(4): cmp $0x1,%r8
1028d(2): jnbe 0x1e(%rip)
1028f(2): xor %eax,%eax
10291(7): cmp $0x3ffffffe,%rdx
10298(8): mov $0x0,0x10(%rdi)
102a0(3): setz %al
102a3(6): mov $0x1,%r10d
102a9(2): add %eax,%esi
102ab(2): xor %eax,%eax
102ad(3): cmp $0x1,%esi
102b0(3): setz %al
102b3(3): add %r10d,%eax
102b6(1): ret near (%rsp)
102b7(9): nop 0x0(%rax,%rax,1)
102c0(4): sub $0x8,%rsp
102c4(5): call 0xffff24ac(%rip)
102c9(6): mov $0x16,(%rax)
102cf(5): mov $0xffffffff,%eax
102d4(4): add $0x8,%rsp
102d8(1): ret near (%rsp)

"lutimensat" :
102e0(5): mov $0x100,%ecx
102e5(5): jmp 0xffff246b(%rip)

"fdutimens" :
102f0(2): push %r14
102f2(2): push %r13
102f4(2): push %r12
102f6(1): push %rbp
102f7(3): mov %rsi,%r12
102fa(1): push %rbx
102fb(2): mov %edi,%ebx
102fd(7): sub $0x110,%rsp
10304(9): mov $0x28,%rax
1030d(8): mov %rax,0x108(%rsp)
10315(2): xor %eax,%eax
10317(3): test %rdx,%rdx
1031a(6): jz 0x2c6(%rip)
10320(4): movdqu (%rdx),%xmm0
10324(5): lea 0x10(%rsp),%rdi
10329(5): movaps %xmm0,0x10(%rsp)
1032e(5): mov %rdi,0x8(%rsp)
10333(5): movdqu 0x10(%rdx),%xmm0
10338(5): movaps %xmm0,0x20(%rsp)
1033d(5): call 0xfffffef3(%rip)
10342(2): test %eax,%eax
10344(3): mov %eax,%r13d
10347(6): js 0x3bc(%rip)
1034d(2): test %ebx,%ebx
1034f(2): jns 0xb(%rip)
10351(3): test %r12,%r12
10354(6): jz 0x3a4(%rip)
1035a(6): mov 0x20a3ac(%rip),%eax
10360(2): test %eax,%eax
10362(2): js 0x36(%rip)
10364(4): cmp $0x2,%r13d
10368(6): jz 0x208(%rip)
1036e(5): mov 0x8(%rsp),%rsi
10373(2): test %ebx,%ebx
10375(6): js 0x32b(%rip)
1037b(2): mov %ebx,%edi
1037d(5): call 0xffff29b3(%rip)
10382(3): cmp $0x0,%eax
10385(2): mov %eax,%ebp
10387(6): jle 0x336(%rip)
1038d(5): call 0xffff23e3(%rip)
10392(6): mov $0x26,(%rax)
10398(3): test %r13d,%r13d
1039b(a): mov $0xffffffff,0x20a367(%rip)
103a5(a): mov $0xffffffff,0x20a359(%rip)
103af(6): jnz 0x161(%rip)
103b5(5): mov 0x8(%rsp),%rsi
103ba(3): test %rsi,%rsi
103bd(6): jz 0x293(%rip)
103c3(3): mov (%rsi),%rax
103c6(4): mov 0x8(%rsi),%rdi
103ca(a): mov $0x2361183241434822607,%rcx
103d4(5): lea 0x30(%rsp),%r13
103d9(5): mov %rax,0x30(%rsp)
103de(3): mov %rdi,%rax
103e1(4): sar $0x3f,%rdi
103e5(3): imul %rax,%rcx,%rdx
103e8(4): mov 0x10(%rsi),%rax
103ec(4): mov 0x18(%rsi),%rsi
103f0(5): mov %rax,0x40(%rsp)
103f5(3): mov %rsi,%rax
103f8(4): sar $0x3f,%rsi
103fc(4): sar $0x7,%rdx
10400(3): sub %rdi,%rdx
10403(5): mov %rdx,0x38(%rsp)
10408(3): imul %rax,%rcx,%rdx
1040b(3): mov %rdx,%rcx
1040e(4): sar $0x7,%rcx
10412(3): sub %rsi,%rcx
10415(5): mov %rcx,0x48(%rsp)
1041a(2): test %ebx,%ebx
1041c(3): mov %r13,%rdx
1041f(6): js 0x1d9(%rip)
10425(2): xor %esi,%esi
10427(2): mov %ebx,%edi
10429(5): call 0xffff29c7(%rip)
1042e(2): test %eax,%eax
10430(2): mov %eax,%ebp
10432(6): jnz 0x1fe(%rip)
10438(3): test %r13,%r13
1043b(6): jz 0x1cc(%rip)
10441(8): cmp $0x7a11f,0x8(%r13)
10449(4): setnle %r12b
1044d(8): cmp $0x7a11f,0x18(%r13)
10455(4): setnle %r14b
10459(3): test %r12b,%r12b
1045c(2): jnz 0xb(%rip)
1045e(3): test %r14b,%r14b
10461(6): jz 0x1a6(%rip)
10467(5): lea 0x70(%rsp),%rdx
1046c(2): mov %ebx,%esi
1046e(5): mov $0x1,%edi
10473(5): call 0xffff277d(%rip)
10478(2): test %eax,%eax
1047a(6): jnz 0x18d(%rip)
10480(8): mov 0xc8(%rsp),%rdx
10488(4): sub 0x10(%r13),%rdx
1048c(8): mov 0xb8(%rsp),%rax
10494(4): sub 0x0(%r13),%rax
10498(6): movdqa 0x0(%r13),%xmm0
1049e(4): cmp $0x1,%rdx
104a2(3): setz %dl
104a5(5): movaps %xmm0,0x50(%rsp)
104aa(3): and %edx,%r14d
104ad(4): cmp $0x1,%rax
104b1(6): movdqa 0x10(%r13),%xmm0
104b7(5): movaps %xmm0,0x60(%rsp)
104bc(6): jnz 0x254(%rip)
104c2(3): test %r12b,%r12b
104c5(6): jz 0x24b(%rip)
104cb(9): cmp $0x0,0xc0(%rsp)
104d4(6): jnz 0x23c(%rip)
104da(3): test %r14b,%r14b
104dd(9): mov $0x0,0x58(%rsp)
104e6(2): jz 0x11(%rip)
104e8(9): cmp $0x0,0xd0(%rsp)
104f1(6): jz 0x237(%rip)
104f7(5): lea 0x50(%rsp),%rdx
104fc(2): xor %esi,%esi
104fe(2): mov %ebx,%edi
10500(5): call 0xffff28f0(%rip)
10505(2): xor %ebp,%ebp
10507(5): jmp 0x100(%rip)
1050c(4): nop 0x0(%rax)
10510(4): cmp $0x3,%r13d
10514(2): jz 0x28(%rip)
10516(2): test %ebx,%ebx
10518(5): lea 0x70(%rsp),%rdx
1051d(6): js 0x143(%rip)
10523(2): mov %ebx,%esi
10525(5): mov $0x1,%edi
1052a(5): call 0xffff26c6(%rip)
1052f(2): test %eax,%eax
10531(3): setnz %al
10534(2): test %al,%al
10536(6): jnz 0x1cd(%rip)
1053c(6): cmp $0x0,0x8(%rsp)
10542(6): jz 0x10e(%rip)
10548(5): lea 0x8(%rsp),%rsi
1054d(5): lea 0x70(%rsp),%rdi
10552(2): xor %ebp,%ebp
10554(5): call 0xfffffbfc(%rip)
10559(2): test %al,%al
1055b(6): jz 0xfffffe5a(%rip)
10561(5): jmp 0xa6(%rip)
10566(a): nop 0x0(%rax,%rax,1)
10570(2): test %ebx,%ebx
10572(5): lea 0x70(%rsp),%rdx
10577(6): js 0x109(%rip)
1057d(2): mov %ebx,%esi
1057f(5): mov $0x1,%edi
10584(5): call 0xffff266c(%rip)
10589(2): test %eax,%eax
1058b(3): setnz %al
1058e(2): test %al,%al
10590(6): jnz 0x173(%rip)
10596(5): mov 0x8(%rsp),%rsi
1059b(8): cmp $0x3ffffffe,0x8(%rsi)
105a3(6): jz 0x12d(%rip)
105a9(8): cmp $0x3ffffffe,0x18(%rsi)
105b1(6): mov $0x3,%r13d
105b7(6): jnz 0xfffffdbc(%rip)
105bd(8): mov 0xd0(%rsp),%rax
105c5(8): mov 0xc8(%rsp),%rdx
105cd(4): mov %rax,0x18(%rsi)
105d1(4): mov %rdx,0x10(%rsi)
105d5(5): jmp 0xfffffd9e(%rip)
105da(6): nop 0x0(%rax,%rax,1)
105e0(9): mov $0x0,0x8(%rsp)
105e9(3): xor %r13d,%r13d
105ec(5): jmp 0xfffffd61(%rip)
105f1(7): nop 0x0(%rax)
105f8(3): mov %r12,%rsi
105fb(5): mov $0xffffff9c,%edi
10600(5): call 0xffff27f0(%rip)
10605(2): mov %eax,%ebp
10607(8): mov 0x108(%rsp),%rcx
1060f(9): xor $0x28,%rcx
10618(2): mov %ebp,%eax
1061a(6): jnz 0x11c(%rip)
10620(7): add $0x110,%rsp
10627(1): pop %rbx
10628(1): pop %rbp
10629(2): pop %r12
1062b(2): pop %r13
1062d(2): pop %r14
1062f(1): ret near (%rsp)
10630(3): test %r12,%r12
10633(5): mov $0xffffffff,%ebp
10638(2): jz 0xffffffcf(%rip)
1063a(3): mov %r13,%rsi
1063d(3): mov %r12,%rdi
10640(5): call 0xffff2480(%rip)
10645(2): mov %eax,%ebp
10647(2): jmp 0xffffffc0(%rip)
10649(7): nop 0x0(%rax)
10650(3): xor %r13d,%r13d
10653(5): jmp 0xfffffdc7(%rip)
10658(8): nop 0x0(%rax,%rax,1)
10660(3): mov %r12,%rsi
10663(5): mov $0x1,%edi
10668(5): call 0xffff2538(%rip)
1066d(2): test %eax,%eax
1066f(3): setnz %al
10672(5): jmp 0xfffffec2(%rip)
10677(9): nop 0x0(%rax,%rax,1)
10680(3): mov %r12,%rsi
10683(5): mov $0x1,%edi
10688(5): call 0xffff2518(%rip)
1068d(2): test %eax,%eax
1068f(3): setnz %al
10692(5): jmp 0xfffffefc(%rip)
10697(9): nop 0x0(%rax,%rax,1)
106a0(2): xor %ecx,%ecx
106a2(3): mov %rsi,%rdx
106a5(5): mov $0xffffff9c,%edi
106aa(3): mov %r12,%rsi
106ad(5): call 0xffff20a3(%rip)
106b2(3): cmp $0x0,%eax
106b5(2): mov %eax,%ebp
106b7(6): jnle 0xfffffcd6(%rip)
106bd(2): jnz 0x7e(%rip)
106bf(a): mov $0x1,0x20a043(%rip)
106c9(5): jmp 0xffffff3e(%rip)
106ce(2): nop 
106d0(8): mov 0xc0(%rsp),%rax
106d8(8): mov 0xb8(%rsp),%rdx
106e0(6): mov $0x3,%r13d
106e6(3): mov %rdx,(%rsi)
106e9(4): mov %rax,0x8(%rsi)
106ed(5): jmp 0xfffffc86(%rip)
106f2(6): nop 0x0(%rax,%rax,1)
106f8(5): call 0xffff2078(%rip)
106fd(6): mov $0x9,(%rax)
10703(5): mov $0xffffffff,%ebp
10708(5): jmp 0xfffffeff(%rip)
1070d(3): nop (%rax)
10710(3): test %r14b,%r14b
10713(6): jz 0xfffffdf2(%rip)
10719(9): cmp $0x0,0xd0(%rsp)
10722(6): jnz 0xfffffde3(%rip)
10728(9): mov $0x0,0x68(%rsp)
10731(5): jmp 0xfffffdc6(%rip)
10736(5): call 0xffff21fa(%rip)
1073b(5): call 0xffff2035(%rip)
10740(3): cmp $0x26,(%rax)
10743(6): jnz 0xffffff7c(%rip)
10749(5): jmp 0xfffffc4f(%rip)

"utimens" :
10750(3): mov %rsi,%rdx
10753(3): mov %rdi,%rsi
10756(5): mov $0xffffffff,%edi
1075b(5): jmp 0xfffffb95(%rip)

"lutimens" :
10760(2): push %r12
10762(1): push %rbp
10763(3): mov %rdi,%r12
10766(1): push %rbx
10767(7): sub $0xd0,%rsp
1076e(9): mov $0x28,%rax
10777(8): mov %rax,0xc8(%rsp)
1077f(2): xor %eax,%eax
10781(3): test %rsi,%rsi
10784(6): jz 0xfc(%rip)
1078a(4): movdqu (%rsi),%xmm0
1078e(5): lea 0x10(%rsp),%rdi
10793(5): movaps %xmm0,0x10(%rsp)
10798(5): mov %rdi,0x8(%rsp)
1079d(5): movdqu 0x10(%rsi),%xmm0
107a2(5): movaps %xmm0,0x20(%rsp)
107a7(5): call 0xfffffa89(%rip)
107ac(2): test %eax,%eax
107ae(2): mov %eax,%ebx
107b0(6): js 0x110(%rip)
107b6(6): mov 0x209f4c(%rip),%eax
107bc(2): test %eax,%eax
107be(2): js 0x38(%rip)
107c0(3): cmp $0x2,%ebx
107c3(6): jz 0x12d(%rip)
107c9(5): mov 0x8(%rsp),%rdx
107ce(5): mov $0x100,%ecx
107d3(3): mov %r12,%rsi
107d6(5): mov $0xffffff9c,%edi
107db(5): call 0xffff1f75(%rip)
107e0(3): cmp $0x0,%eax
107e3(2): mov %eax,%ebp
107e5(6): jle 0xeb(%rip)
107eb(5): call 0xffff1f85(%rip)
107f0(6): mov $0x26,(%rax)
107f6(2): test %ebx,%ebx
107f8(a): mov $0xffffffff,0x209f06(%rip)
10802(6): jz 0xa3(%rip)
10808(3): cmp $0x3,%ebx
1080b(6): jnz 0x13d(%rip)
10811(6): cmp $0x0,0x8(%rsp)
10817(2): jz 0x19(%rip)
10819(5): lea 0x8(%rsp),%rsi
1081e(5): lea 0x30(%rsp),%rdi
10823(2): xor %ebp,%ebp
10825(5): call 0xfffff92b(%rip)
1082a(2): test %al,%al
1082c(2): jnz 0x2c(%rip)
1082e(2): nop 
10830(4): mov 0x48(%rsp),%eax
10834(5): and $0xf000,%eax
10839(5): cmp $0xa000,%eax
1083e(6): jz 0x158(%rip)
10844(5): mov 0x8(%rsp),%rdx
10849(3): mov %r12,%rsi
1084c(5): mov $0xffffffff,%edi
10851(5): call 0xfffffa9f(%rip)
10856(2): mov %eax,%ebp
10858(8): mov 0xc8(%rsp),%rcx
10860(9): xor $0x28,%rcx
10869(2): mov %ebp,%eax
1086b(6): jnz 0x13b(%rip)
10871(7): add $0xd0,%rsp
10878(1): pop %rbx
10879(1): pop %rbp
1087a(2): pop %r12
1087c(1): ret near (%rsp)
1087d(3): nop (%rax)
10880(6): mov 0x209e82(%rip),%ecx
10886(2): xor %edx,%edx
10888(2): xor %ebx,%ebx
1088a(9): mov $0x0,0x8(%rsp)
10893(2): test %ecx,%ecx
10895(6): jns 0xffffff39(%rip)
1089b(a): mov $0xffffffff,0x209e63(%rip)
108a5(5): lea 0x30(%rsp),%rdx
108aa(3): mov %r12,%rsi
108ad(5): mov $0x1,%edi
108b2(5): call 0xffff205e(%rip)
108b7(2): test %eax,%eax
108b9(6): jz 0xffffff77(%rip)
108bf(1): nop 
108c0(5): mov $0xffffffff,%ebp
108c5(2): jmp 0xffffff93(%rip)
108c7(9): nop 0x0(%rax,%rax,1)
108d0(6): jnz 0xdb(%rip)
108d6(a): mov $0x1,0x209e2c(%rip)
108e0(a): mov $0x1,0x209e1e(%rip)
108ea(5): jmp 0xffffff6e(%rip)
108ef(1): nop 
108f0(5): lea 0x30(%rsp),%rdx
108f5(3): mov %r12,%rsi
108f8(5): mov $0x1,%edi
108fd(5): call 0xffff2013(%rip)
10902(2): test %eax,%eax
10904(2): jnz 0xffffffbc(%rip)
10906(5): mov 0x8(%rsp),%rdx
1090b(8): cmp $0x3ffffffe,0x8(%rdx)
10913(2): jz 0x65(%rip)
10915(8): cmp $0x3ffffffe,0x18(%rdx)
1091d(5): mov $0x3,%ebx
10922(6): jnz 0xfffffeac(%rip)
10928(8): mov 0x90(%rsp),%rax
10930(8): mov 0x88(%rsp),%rcx
10938(4): mov %rax,0x18(%rdx)
1093c(4): mov %rcx,0x10(%rdx)
10940(5): jmp 0xfffffe8e(%rip)
10945(3): nop (%rax)
10948(5): lea 0x30(%rsp),%rdx
1094d(3): mov %r12,%rsi
10950(5): mov $0x1,%edi
10955(5): call 0xffff1fbb(%rip)
1095a(2): test %eax,%eax
1095c(6): jnz 0xffffff64(%rip)
10962(6): cmp $0x0,0x8(%rsp)
10968(6): jnz 0xfffffeb1(%rip)
1096e(5): jmp 0xfffffec2(%rip)
10973(5): nop 0x0(%rax,%rax,1)
10978(8): mov 0x80(%rsp),%rax
10980(5): mov 0x78(%rsp),%rcx
10985(5): mov $0x3,%ebx
1098a(3): mov %rcx,(%rdx)
1098d(4): mov %rax,0x8(%rdx)
10991(5): jmp 0xfffffe3d(%rip)
10996(5): call 0xffff1dda(%rip)
1099b(6): mov $0x26,(%rax)
109a1(5): jmp 0xffffff1f(%rip)
109a6(5): call 0xffff1f8a(%rip)
109ab(5): call 0xffff1dc5(%rip)
109b0(3): cmp $0x26,(%rax)
109b3(6): jnz 0xffffff23(%rip)
109b9(5): jmp 0xfffffe3d(%rip)

"version_etc_arn" :
109c0(2): push %r15
109c2(2): push %r14
109c4(2): push %r13
109c6(2): push %r12
109c8(3): mov %r9,%r12
109cb(1): push %rbp
109cc(1): push %rbx
109cd(3): mov %rdi,%rbp
109d0(3): mov %r8,%rbx
109d3(4): sub $0x28,%rsp
109d7(3): test %rsi,%rsi
109da(6): jz 0x11e(%rip)
109e0(3): mov %rdx,%r8
109e3(7): lea 0x4ed5(%rip),%rdx
109ea(3): mov %rcx,%r9
109ed(2): xor %eax,%eax
109ef(3): mov %rsi,%rcx
109f2(5): mov $0x1,%esi
109f7(5): call 0xffff23b9(%rip)
109fc(7): lea 0x4ecf(%rip),%rsi
10a03(2): xor %edi,%edi
10a05(5): mov $0x5,%edx
10a0a(5): call 0xffff1ed6(%rip)
10a0f(7): lea 0x51ca(%rip),%rdx
10a16(3): mov %rax,%rcx
10a19(6): mov $0x7e3,%r8d
10a1f(5): mov $0x1,%esi
10a24(3): mov %rbp,%rdi
10a27(2): xor %eax,%eax
10a29(5): call 0xffff2387(%rip)
10a2e(7): lea 0x4f23(%rip),%rsi
10a35(2): xor %edi,%edi
10a37(5): mov $0x5,%edx
10a3c(5): call 0xffff1ea4(%rip)
10a41(3): mov %rbp,%rsi
10a44(3): mov %rax,%rdi
10a47(5): call 0xffff2069(%rip)
10a4c(4): cmp $0x9,%r12
10a50(6): jnbe 0x340(%rip)
10a56(7): lea 0x515b(%rip),%rdx
10a5d(4): movsxd 0x0(%rdx,%r12,4),%rax
10a61(3): add %rdx,%rax
10a64(2): jmp %rax
10a66(a): nop 0x0(%rax,%rax,1)
10a70(4): mov 0x38(%rbx),%r9
10a74(4): mov 0x10(%rbx),%rax
10a78(7): lea 0x5049(%rip),%rsi
10a7f(4): mov 0x8(%rbx),%r8
10a83(5): mov $0x5,%edx
10a88(2): xor %edi,%edi
10a8a(4): mov 0x30(%rbx),%r13
10a8e(4): mov 0x28(%rbx),%r12
10a92(5): mov %r9,0x10(%rsp)
10a97(4): mov 0x20(%rbx),%r15
10a9b(4): mov 0x18(%rbx),%r14
10a9f(4): mov %rax,(%rsp)
10aa3(5): mov %r8,0x8(%rsp)
10aa8(3): mov (%rbx),%rbx
10aab(5): call 0xffff1e35(%rip)
10ab0(4): sub $0x8,%rsp
10ab4(5): mov 0x18(%rsp),%r9
10ab9(3): mov %rax,%rdx
10abc(3): mov %rbx,%rcx
10abf(5): mov $0x1,%esi
10ac4(3): mov %rbp,%rdi
10ac7(2): xor %eax,%eax
10ac9(2): push %r9
10acb(2): push %r13
10acd(2): push %r12
10acf(2): push %r15
10ad1(2): push %r14
10ad3(5): mov 0x30(%rsp),%r9
10ad8(5): mov 0x38(%rsp),%r8
10add(5): call 0xffff22d3(%rip)
10ae2(4): add $0x30,%rsp
10ae6(4): add $0x28,%rsp
10aea(1): pop %rbx
10aeb(1): pop %rbp
10aec(2): pop %r12
10aee(2): pop %r13
10af0(2): pop %r14
10af2(2): pop %r15
10af4(1): ret near (%rsp)
10af5(3): nop (%rax)
10af8(3): mov %rcx,%r8
10afb(3): mov %rdx,%rcx
10afe(7): lea 0x4dc6(%rip),%rdx
10b05(5): mov $0x1,%esi
10b0a(2): xor %eax,%eax
10b0c(5): call 0xffff22a4(%rip)
10b11(5): jmp 0xfffffeeb(%rip)
10b16(a): nop 0x0(%rax,%rax,1)
10b20(4): mov 0x40(%rbx),%r10
10b24(4): mov 0x38(%rbx),%r9
10b28(7): lea 0x4fc9(%rip),%rsi
10b2f(4): mov 0x10(%rbx),%rax
10b33(4): mov 0x8(%rbx),%r8
10b37(5): mov $0x5,%edx
10b3c(4): mov 0x30(%rbx),%r13
10b40(4): mov 0x28(%rbx),%r12
10b44(4): mov 0x20(%rbx),%r15
10b48(4): mov 0x18(%rbx),%r14
10b4c(3): mov (%rbx),%rbx
10b4f(5): mov %r10,0x18(%rsp)
10b54(5): mov %r9,0x10(%rsp)
10b59(4): mov %rax,(%rsp)
10b5d(5): mov %r8,0x8(%rsp)
10b62(2): xor %edi,%edi
10b64(5): call 0xffff1d7c(%rip)
10b69(5): mov 0x18(%rsp),%r10
10b6e(2): push %r10
10b70(5): jmp 0xffffff44(%rip)
10b75(3): nop (%rax)
10b78(3): mov (%rbx),%rbx
10b7b(7): lea 0x4d54(%rip),%rsi
10b82(5): mov $0x5,%edx
10b87(2): xor %edi,%edi
10b89(5): call 0xffff1d57(%rip)
10b8e(4): add $0x28,%rsp
10b92(3): mov %rbx,%rcx
10b95(3): mov %rbp,%rdi
10b98(1): pop %rbx
10b99(1): pop %rbp
10b9a(2): pop %r12
10b9c(2): pop %r13
10b9e(2): pop %r14
10ba0(2): pop %r15
10ba2(3): mov %rax,%rdx
10ba5(5): mov $0x1,%esi
10baa(2): xor %eax,%eax
10bac(5): jmp 0xffff2204(%rip)
10bb1(7): nop 0x0(%rax)
10bb8(4): mov 0x8(%rbx),%r12
10bbc(7): lea 0x4d23(%rip),%rsi
10bc3(3): mov (%rbx),%rbx
10bc6(5): mov $0x5,%edx
10bcb(2): xor %edi,%edi
10bcd(5): call 0xffff1d13(%rip)
10bd2(4): add $0x28,%rsp
10bd6(3): mov %r12,%r8
10bd9(3): mov %rbx,%rcx
10bdc(3): mov %rbp,%rdi
10bdf(3): mov %rax,%rdx
10be2(5): mov $0x1,%esi
10be7(1): pop %rbx
10be8(1): pop %rbp
10be9(2): pop %r12
10beb(2): pop %r13
10bed(2): pop %r14
10bef(2): pop %r15
10bf1(2): xor %eax,%eax
10bf3(5): jmp 0xffff21bd(%rip)
10bf8(8): nop 0x0(%rax,%rax,1)
10c00(4): mov 0x10(%rbx),%r13
10c04(4): mov 0x8(%rbx),%r12
10c08(7): lea 0x4cee(%rip),%rsi
10c0f(3): mov (%rbx),%rbx
10c12(5): mov $0x5,%edx
10c17(2): xor %edi,%edi
10c19(5): call 0xffff1cc7(%rip)
10c1e(4): add $0x28,%rsp
10c22(3): mov %r13,%r9
10c25(3): mov %r12,%r8
10c28(3): mov %rbx,%rcx
10c2b(3): mov %rbp,%rdi
10c2e(3): mov %rax,%rdx
10c31(1): pop %rbx
10c32(1): pop %rbp
10c33(2): pop %r12
10c35(2): pop %r13
10c37(2): pop %r14
10c39(2): pop %r15
10c3b(5): mov $0x1,%esi
10c40(2): xor %eax,%eax
10c42(5): jmp 0xffff216e(%rip)
10c47(9): nop 0x0(%rax,%rax,1)
10c50(7): lea 0x4dd1(%rip),%rsi
10c57(5): mov $0x5,%edx
10c5c(2): xor %edi,%edi
10c5e(4): mov 0x18(%rbx),%r14
10c62(4): mov 0x10(%rbx),%r13
10c66(4): mov 0x8(%rbx),%r12
10c6a(3): mov (%rbx),%rbx
10c6d(5): call 0xffff1c73(%rip)
10c72(4): sub $0x8,%rsp
10c76(2): push %r14
10c78(3): mov %rax,%rdx
10c7b(3): mov %r13,%r9
10c7e(3): mov %r12,%r8
10c81(3): mov %rbx,%rcx
10c84(3): mov %rbp,%rdi
10c87(5): mov $0x1,%esi
10c8c(2): xor %eax,%eax
10c8e(5): call 0xffff2122(%rip)
10c93(1): pop %rax
10c94(1): pop %rdx
10c95(4): add $0x28,%rsp
10c99(1): pop %rbx
10c9a(1): pop %rbp
10c9b(2): pop %r12
10c9d(2): pop %r13
10c9f(2): pop %r14
10ca1(2): pop %r15
10ca3(1): ret near (%rsp)
10ca4(4): nop 0x0(%rax)
10ca8(4): mov 0x20(%rbx),%r15
10cac(7): lea 0x4d95(%rip),%rsi
10cb3(5): mov $0x5,%edx
10cb8(2): xor %edi,%edi
10cba(4): mov 0x18(%rbx),%r14
10cbe(4): mov 0x10(%rbx),%r13
10cc2(4): mov 0x8(%rbx),%r12
10cc6(3): mov (%rbx),%rbx
10cc9(5): call 0xffff1c17(%rip)
10cce(2): push %r15
10cd0(2): jmp 0xffffffa6(%rip)
10cd2(6): nop 0x0(%rax,%rax,1)
10cd8(4): mov 0x8(%rbx),%r8
10cdc(4): mov 0x28(%rbx),%r12
10ce0(7): lea 0x4d89(%rip),%rsi
10ce7(4): mov 0x20(%rbx),%r15
10ceb(4): mov 0x18(%rbx),%r14
10cef(5): mov $0x5,%edx
10cf4(4): mov 0x10(%rbx),%r13
10cf8(2): xor %edi,%edi
10cfa(3): mov (%rbx),%rbx
10cfd(4): mov %r8,(%rsp)
10d01(5): call 0xffff1bdf(%rip)
10d06(4): sub $0x8,%rsp
10d0a(3): mov %r13,%r9
10d0d(2): push %r12
10d0f(2): push %r15
10d11(2): push %r14
10d13(5): mov 0x20(%rsp),%r8
10d18(3): mov %rbx,%rcx
10d1b(3): mov %rax,%rdx
10d1e(3): mov %rbp,%rdi
10d21(5): mov $0x1,%esi
10d26(2): xor %eax,%eax
10d28(5): call 0xffff2088(%rip)
10d2d(4): add $0x20,%rsp
10d31(4): add $0x28,%rsp
10d35(1): pop %rbx
10d36(1): pop %rbp
10d37(2): pop %r12
10d39(2): pop %r13
10d3b(2): pop %r14
10d3d(2): pop %r15
10d3f(1): ret near (%rsp)
10d40(4): mov 0x10(%rbx),%r9
10d44(4): mov 0x30(%rbx),%r13
10d48(7): lea 0x4d49(%rip),%rsi
10d4f(4): mov 0x28(%rbx),%r12
10d53(4): mov 0x20(%rbx),%r15
10d57(5): mov $0x5,%edx
10d5c(4): mov 0x18(%rbx),%r14
10d60(4): mov 0x8(%rbx),%r8
10d64(2): xor %edi,%edi
10d66(5): mov %r9,0x8(%rsp)
10d6b(3): mov (%rbx),%rbx
10d6e(4): mov %r8,(%rsp)
10d72(5): call 0xffff1b6e(%rip)
10d77(2): push %r13
10d79(2): push %r12
10d7b(2): push %r15
10d7d(2): push %r14
10d7f(5): mov 0x28(%rsp),%r9
10d84(2): jmp 0xffffff8f(%rip)
10d86(a): nop 0x0(%rax,%rax,1)
10d90(4): mov 0x40(%rbx),%r10
10d94(4): mov 0x38(%rbx),%r9
10d98(5): mov $0x5,%edx
10d9d(4): mov 0x10(%rbx),%rax
10da1(4): mov 0x8(%rbx),%r8
10da5(7): lea 0x4d84(%rip),%rsi
10dac(4): mov 0x30(%rbx),%r13
10db0(4): mov 0x28(%rbx),%r12
10db4(4): mov 0x20(%rbx),%r15
10db8(4): mov 0x18(%rbx),%r14
10dbc(5): mov %r10,0x18(%rsp)
10dc1(5): mov %r9,0x10(%rsp)
10dc6(4): mov %rax,(%rsp)
10dca(5): mov %r8,0x8(%rsp)
10dcf(3): mov (%rbx),%rbx
10dd2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
10de0(3): xor %r9d,%r9d
10de3(4): cmp $0x0,(%r8)
10de7(2): jz 0x14(%rip)
10de9(7): nop 0x0(%rax)
10df0(4): add $0x1,%r9
10df4(5): cmp $0x0,0x0(%r8,%r9,8)
10df9(2): jnz 0xfffffff7(%rip)
10dfb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
10e00(4): sub $0x68,%rsp
10e04(3): mov %r8,%r10
10e07(3): xor %r9d,%r9d
10e0a(9): mov $0x28,%rax
10e13(5): mov %rax,0x58(%rsp)
10e18(2): xor %eax,%eax
10e1a(3): mov %rsp,%r8
10e1d(3): nop (%rax)
10e20(3): mov (%r10),%eax
10e23(3): cmp $0x2f,%eax
10e26(2): jnbe 0x44(%rip)
10e28(3): mov %eax,%r11d
10e2b(4): add 0x10(%r10),%r11
10e2f(3): add $0x8,%eax
10e32(3): mov %eax,(%r10)
10e35(3): mov (%r11),%rax
10e38(3): test %rax,%rax
10e3b(4): mov %rax,0x0(%r8,%r9,8)
10e3f(2): jz 0xc(%rip)
10e41(4): add $0x1,%r9
10e45(4): cmp $0xa,%r9
10e49(2): jnz 0xffffffd7(%rip)
10e4b(5): call 0xfffffb75(%rip)
10e50(5): mov 0x58(%rsp),%rax
10e55(9): xor $0x28,%rax
10e5e(2): jnz 0x7(%rip)
10e60(4): add $0x68,%rsp
10e64(1): ret near (%rsp)
10e65(5): call 0xffff1acb(%rip)
10e6a(4): mov 0x8(%r10),%r11
10e6e(4): lea 0x8(%r11),%rax
10e72(4): mov %rax,0x8(%r10)
10e76(2): jmp 0xffffffbf(%rip)

"version_etc" :
10e80(1): push %rbp
10e81(1): push %rbx
10e82(6): mov $0x20,%r10d
10e88(3): xor %r11d,%r11d
10e8b(7): sub $0xb8,%rsp
10e92(9): mov $0x28,%rax
10e9b(5): mov %rax,0x78(%rsp)
10ea0(2): xor %eax,%eax
10ea2(8): lea 0xd0(%rsp),%rax
10eaa(8): mov %r8,0xa0(%rsp)
10eb2(8): lea 0xd0(%rsp),%rbx
10eba(5): lea 0x20(%rsp),%r8
10ebf(8): mov %r9,0xa8(%rsp)
10ec7(8): mov $0x20,0x8(%rsp)
10ecf(5): mov %rax,0x10(%rsp)
10ed4(8): lea 0x80(%rsp),%rax
10edc(3): xor %r9d,%r9d
10edf(5): mov %rax,0x18(%rsp)
10ee4(3): mov %rax,%rbp
10ee7(9): nop 0x0(%rax,%rax,1)
10ef0(4): cmp $0x2f,%r10d
10ef4(2): jnbe 0x58(%rip)
10ef6(3): mov %r10d,%eax
10ef9(6): mov $0x1,%r11d
10eff(4): add $0x8,%r10d
10f03(3): add %rbp,%rax
10f06(3): mov (%rax),%rax
10f09(3): test %rax,%rax
10f0c(4): mov %rax,0x0(%r8,%r9,8)
10f10(2): jz 0xc(%rip)
10f12(4): add $0x1,%r9
10f16(4): cmp $0xa,%r9
10f1a(2): jnz 0xffffffd6(%rip)
10f1c(3): test %r11b,%r11b
10f1f(2): jnz 0x26(%rip)
10f21(5): call 0xfffffa9f(%rip)
10f26(5): mov 0x78(%rsp),%rax
10f2b(9): xor $0x28,%rax
10f34(2): jnz 0xc(%rip)
10f36(7): add $0xb8,%rsp
10f3d(1): pop %rbx
10f3e(1): pop %rbp
10f3f(1): ret near (%rsp)
10f40(5): call 0xffff19f0(%rip)
10f45(5): mov %r10d,0x8(%rsp)
10f4a(2): jmp 0xffffffd7(%rip)
10f4c(3): mov %rbx,%rax
10f4f(4): add $0x8,%rbx
10f53(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
10f60(1): push %rbx
10f61(7): lea 0x49b1(%rip),%rsi
10f68(5): mov $0x5,%edx
10f6d(2): xor %edi,%edi
10f6f(5): call 0xffff1971(%rip)
10f74(7): lea 0x49b3(%rip),%rdx
10f7b(3): mov %rax,%rsi
10f7e(5): mov $0x1,%edi
10f83(2): xor %eax,%eax
10f85(5): call 0xffff1cdb(%rip)
10f8a(7): lea 0x49b3(%rip),%rsi
10f91(5): mov $0x5,%edx
10f96(2): xor %edi,%edi
10f98(5): call 0xffff1948(%rip)
10f9d(7): lea 0x3444(%rip),%rcx
10fa4(7): lea 0x1a13(%rip),%rdx
10fab(3): mov %rax,%rsi
10fae(5): mov $0x1,%edi
10fb3(2): xor %eax,%eax
10fb5(5): call 0xffff1cab(%rip)
10fba(7): mov 0x2090e7(%rip),%rbx
10fc1(7): lea 0x4ba8(%rip),%rsi
10fc8(2): xor %edi,%edi
10fca(5): mov $0x5,%edx
10fcf(5): call 0xffff1911(%rip)
10fd4(3): mov %rbx,%rsi
10fd7(3): mov %rax,%rdi
10fda(1): pop %rbx
10fdb(5): jmp 0xffff1ad5(%rip)

"can_write_any_file" :
10fe0(7): cmp $0x0,0x20972a(%rip)
10fe7(2): jz 0x11(%rip)
10fe9(7): movzx 0x209720(%rip),%eax
10ff0(1): ret near (%rsp)
10ff1(7): nop 0x0(%rax)
10ff8(4): sub $0x8,%rsp
10ffc(5): call 0xffff1a04(%rip)
11001(2): test %eax,%eax
11003(7): mov $0x1,0x209707(%rip)
1100a(3): setz %al
1100d(6): mov %al,0x2096fd(%rip)
11013(4): add $0x8,%rsp
11017(1): ret near (%rsp)

"xmalloc" :
11020(1): push %rbx
11021(3): mov %rdi,%rbx
11024(5): call 0xffff1b9c(%rip)
11029(3): test %rax,%rax
1102c(2): jnz 0x7(%rip)
1102e(3): test %rbx,%rbx
11031(2): jnz 0x4(%rip)
11033(1): pop %rbx
11034(1): ret near (%rsp)
11035(5): call 0x23b(%rip)

"xnmalloc" :
11040(3): mov %rdi,%rax
11043(3): mul %rax,%rsi,%rdx
11046(3): mov %rax,%rdi
11049(3): seto %al
1104c(3): test %rdi,%rdi
1104f(2): js 0xc(%rip)
11051(3): movzx %al,%eax
11054(3): test %rax,%rax
11057(2): jnz 0x4(%rip)
11059(2): jmp 0xffffffc7(%rip)
1105b(4): sub $0x8,%rsp
1105f(5): call 0x211(%rip)

"xrealloc" :
11080(3): test %rsi,%rsi
11083(1): push %rbx
11084(3): mov %rsi,%rbx
11087(2): jnz 0x7(%rip)
11089(3): test %rdi,%rdi
1108c(2): jnz 0x1c(%rip)
1108e(3): mov %rbx,%rsi
11091(5): call 0xffff1b8f(%rip)
11096(3): test %rax,%rax
11099(2): jnz 0x7(%rip)
1109b(3): test %rbx,%rbx
1109e(2): jnz 0x13(%rip)
110a0(1): pop %rbx
110a1(1): ret near (%rsp)
110a2(6): nop 0x0(%rax,%rax,1)
110a8(5): call 0xffff1d68(%rip)
110ad(2): xor %eax,%eax
110af(1): pop %rbx
110b0(1): ret near (%rsp)
110b1(5): call 0x1bf(%rip)

"xnrealloc" :
110c0(3): mov %rsi,%rax
110c3(3): mul %rax,%rdx,%rdx
110c6(3): mov %rax,%rsi
110c9(3): seto %al
110cc(3): test %rsi,%rsi
110cf(2): js 0xc(%rip)
110d1(3): movzx %al,%eax
110d4(3): test %rax,%rax
110d7(2): jnz 0x4(%rip)
110d9(2): jmp 0xffffffa7(%rip)
110db(4): sub $0x8,%rsp
110df(5): call 0x191(%rip)

"x2nrealloc" :
110f0(3): test %rdi,%rdi
110f3(3): mov %rdx,%r9
110f6(3): mov (%rsi),%rcx
110f9(2): jz 0x37(%rip)
110fb(2): xor %edx,%edx
110fd(a): mov $0x6148914691236517204,%rax
11107(3): div %r9,%rax
1110a(3): cmp %rcx,%rax
1110d(2): jbe 0x3e(%rip)
1110f(3): mov %rcx,%rax
11112(3): shr $0x1,%rax
11115(5): lea 0x1(%rax,%rcx,1),%rcx
1111a(3): mov %rcx,(%rsi)
1111d(4): imul %r9,%rcx
11121(3): mov %rcx,%rsi
11124(5): jmp 0xffffff5c(%rip)
11129(7): nop 0x0(%rax)
11130(3): test %rcx,%rcx
11133(2): jz 0x25(%rip)
11135(3): mov %rcx,%rax
11138(3): mul %rax,%r9,%rdx
1113b(3): seto %dl
1113e(3): test %rax,%rax
11141(3): movzx %dl,%edx
11144(2): js 0x7(%rip)
11146(3): test %rdx,%rdx
11149(2): jz 0xffffffd1(%rip)
1114b(4): sub $0x8,%rsp
1114f(5): call 0x121(%rip)
11154(4): nop 0x0(%rax)
11158(2): xor %edx,%edx
1115a(5): mov $0x80,%eax
1115f(3): xor %r8d,%r8d
11162(3): div %r9,%rax
11165(3): test %rax,%rax
11168(4): setz %r8b
1116c(4): lea 0x0(%r8,%rax,1),%rcx
11170(2): jmp 0xffffffc5(%rip)

"x2realloc" :
11180(3): test %rdi,%rdi
11183(3): mov (%rsi),%rax
11186(2): jz 0x2a(%rip)
11188(a): mov $0x6148914691236517203,%rdx
11192(3): cmp %rdx,%rax
11195(2): jnbe 0x2c(%rip)
11197(3): mov %rax,%rdx
1119a(3): shr $0x1,%rdx
1119d(5): lea 0x1(%rdx,%rax,1),%rax
111a2(3): mov %rax,(%rsi)
111a5(3): mov %rax,%rsi
111a8(5): jmp 0xfffffed8(%rip)
111ad(3): nop (%rax)
111b0(3): test %rax,%rax
111b3(5): mov $0x80,%edx
111b8(4): cmove %rdx,%rax
111bc(3): test %rax,%rax
111bf(2): jns 0xffffffe3(%rip)
111c1(4): sub $0x8,%rsp
111c5(5): call 0xab(%rip)

"xzalloc" :
111d0(1): push %rbx
111d1(3): mov %rdi,%rbx
111d4(5): call 0xfffffe4c(%rip)
111d9(3): mov %rbx,%rdx
111dc(2): xor %esi,%esi
111de(3): mov %rax,%rdi
111e1(1): pop %rbx
111e2(5): jmp 0xffff180e(%rip)

"xcalloc" :
111f0(3): mov %rdi,%rax
111f3(4): sub $0x8,%rsp
111f7(3): mul %rax,%rsi,%rdx
111fa(3): seto %dl
111fd(3): test %rax,%rax
11200(2): js 0x19(%rip)
11202(3): movzx %dl,%edx
11205(3): test %rdx,%rdx
11208(2): jnz 0x11(%rip)
1120a(5): call 0xffff18c6(%rip)
1120f(3): test %rax,%rax
11212(2): jz 0x7(%rip)
11214(4): add $0x8,%rsp
11218(1): ret near (%rsp)
11219(5): call 0x57(%rip)

"xmemdup" :
11220(1): push %rbp
11221(1): push %rbx
11222(3): mov %rdi,%rbp
11225(3): mov %rsi,%rdi
11228(3): mov %rsi,%rbx
1122b(4): sub $0x8,%rsp
1122f(5): call 0xfffffdf1(%rip)
11234(4): add $0x8,%rsp
11238(3): mov %rbx,%rdx
1123b(3): mov %rbp,%rsi
1123e(1): pop %rbx
1123f(1): pop %rbp
11240(3): mov %rax,%rdi
11243(5): jmp 0xffff191d(%rip)

"xstrdup" :
11250(1): push %rbx
11251(3): mov %rdi,%rbx
11254(5): call 0xffff16ac(%rip)
11259(3): mov %rbx,%rdi
1125c(4): lea 0x1(%rax),%rsi
11260(1): pop %rbx
11261(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
11270(7): lea 0x4998(%rip),%rsi
11277(4): sub $0x8,%rsp
1127b(5): mov $0x5,%edx
11280(2): xor %edi,%edi
11282(5): call 0xffff165e(%rip)
11287(6): mov 0x208da3(%rip),%edi
1128d(7): lea 0x3ef9(%rip),%rdx
11294(3): mov %rax,%rcx
11297(2): xor %esi,%esi
11299(2): xor %eax,%eax
1129b(5): call 0xffff1a15(%rip)
112a0(5): call 0xffff14c0(%rip)

"yesno" :
112b0(1): push %rbx
112b1(5): mov $0xa,%edx
112b6(2): xor %ebx,%ebx
112b8(4): sub $0x20,%rsp
112bc(7): mov 0x208ded(%rip),%rcx
112c3(5): lea 0x10(%rsp),%rsi
112c8(5): lea 0x8(%rsp),%rdi
112cd(9): mov $0x0,0x8(%rsp)
112d6(9): mov $0x28,%rax
112df(5): mov %rax,0x18(%rsp)
112e4(2): xor %eax,%eax
112e6(9): mov $0x0,0x10(%rsp)
112ef(5): call 0xffff17f1(%rip)
112f4(3): test %rax,%rax
112f7(2): jle 0x1b(%rip)
112f9(5): mov 0x8(%rsp),%rdi
112fe(5): lea 0xffffffff(%rdi,%rax,1),%rax
11303(3): cmp $0xa,(%rax)
11306(2): jz 0x32(%rip)
11308(5): call 0xffff1818(%rip)
1130d(2): test %eax,%eax
1130f(3): setnle %bl
11312(5): mov 0x8(%rsp),%rdi
11317(5): call 0xffff1af9(%rip)
1131c(5): mov 0x18(%rsp),%rdx
11321(9): xor $0x28,%rdx
1132a(2): mov %ebx,%eax
1132c(2): jnz 0x16(%rip)
1132e(4): add $0x20,%rsp
11332(1): pop %rbx
11333(1): ret near (%rsp)
11334(4): nop 0x0(%rax)
11338(3): mov $0x0,(%rax)
1133b(5): mov 0x8(%rsp),%rdi
11340(2): jmp 0xffffffc8(%rip)
11342(5): call 0xffff15ee(%rip)

"rpl_fflush" :
11350(3): test %rdi,%rdi
11353(1): push %rbx
11354(3): mov %rdi,%rbx
11357(2): jz 0x13(%rip)
11359(5): call 0xffff18b7(%rip)
1135e(2): test %eax,%eax
11360(2): jz 0xa(%rip)
11362(6): test $0x100,(%rbx)
11368(2): jnz 0x10(%rip)
1136a(3): mov %rbx,%rdi
1136d(1): pop %rbx
1136e(5): jmp 0xffff1862(%rip)
11373(5): nop 0x0(%rax,%rax,1)
11378(3): mov %rbx,%rdi
1137b(5): mov $0x1,%edx
11380(2): xor %esi,%esi
11382(5): call 0x3e(%rip)
11387(3): mov %rbx,%rdi
1138a(1): pop %rbx
1138b(5): jmp 0xffff1845(%rip)

"freadahead" :
11390(2): xor %eax,%eax
11392(4): mov 0x20(%rdi),%rcx
11396(4): cmp %rcx,0x28(%rdi)
1139a(2): jnbe 0x1d(%rip)
1139c(4): mov 0x10(%rdi),%rax
113a0(4): sub 0x8(%rdi),%rax
113a4(6): test $0x100,(%rdi)
113aa(2): jz 0xd(%rip)
113ac(4): mov 0x58(%rdi),%rdx
113b0(4): sub 0x48(%rdi),%rdx
113b4(3): add %rdx,%rax
113b7(2): REP ret near (%rsp)

"rpl_fseeko" :
113c0(4): mov 0x8(%rdi),%rax
113c4(4): cmp %rax,0x10(%rdi)
113c8(2): jz 0x8(%rip)
113ca(5): jmp 0xffff1916(%rip)
113cf(1): nop 
113d0(4): mov 0x20(%rdi),%rax
113d4(4): cmp %rax,0x28(%rdi)
113d8(2): jnz 0xfffffff2(%rip)
113da(5): cmp $0x0,0x48(%rdi)
113df(2): jnz 0xffffffeb(%rip)
113e1(2): push %r12
113e3(1): push %rbp
113e4(3): mov %edx,%r12d
113e7(1): push %rbx
113e8(3): mov %rsi,%rbp
113eb(3): mov %rdi,%rbx
113ee(5): call 0xffff1792(%rip)
113f3(3): mov %r12d,%edx
113f6(3): mov %rbp,%rsi
113f9(2): mov %eax,%edi
113fb(5): call 0xffff15c5(%rip)
11400(4): cmp $0xffffffff,%rax
11404(2): jz 0xe(%rip)
11406(3): and $0xef,(%rbx)
11409(7): mov %rax,0x90(%rbx)
11410(2): xor %eax,%eax
11412(1): pop %rbx
11413(1): pop %rbp
11414(2): pop %r12
11416(1): ret near (%rsp)

"rpl_mbrtowc" :
11420(2): push %r13
11422(2): push %r12
11424(3): mov %rsi,%r13
11427(1): push %rbp
11428(1): push %rbx
11429(3): mov %rdi,%rbx
1142c(3): mov %rdx,%r12
1142f(4): sub $0x18,%rsp
11433(9): mov $0x28,%rax
1143c(5): mov %rax,0x8(%rsp)
11441(2): xor %eax,%eax
11443(5): lea 0x4(%rsp),%rax
11448(3): test %rdi,%rdi
1144b(4): cmove %rax,%rbx
1144f(3): mov %rbx,%rdi
11452(5): call 0xffff150e(%rip)
11457(4): cmp $0xfffffffd,%rax
1145b(3): mov %rax,%rbp
1145e(2): jbe 0x22(%rip)
11460(3): test %r12,%r12
11463(2): jz 0x1d(%rip)
11465(2): xor %edi,%edi
11467(5): call 0x239(%rip)
1146c(2): test %al,%al
1146e(2): jnz 0x12(%rip)
11470(5): movzx 0x0(%r13),%eax
11475(5): mov $0x1,%ebp
1147a(2): mov %eax,(%rbx)
1147c(4): nop 0x0(%rax)
11480(5): mov 0x8(%rsp),%rdx
11485(9): xor $0x28,%rdx
1148e(3): mov %rbp,%rax
11491(2): jnz 0xd(%rip)
11493(4): add $0x18,%rsp
11497(1): pop %rbx
11498(1): pop %rbp
11499(2): pop %r12
1149b(2): pop %r13
1149d(1): ret near (%rsp)
1149e(5): call 0xffff1492(%rip)

"get_permissions" :
114c0(2): mov %edx,(%rcx)
114c2(2): xor %eax,%eax
114c4(1): ret near (%rsp)

"chmod_or_fchmod" :
114d0(2): mov %esi,%eax
114d2(2): mov %edx,%esi
114d4(3): cmp $0xff,%eax
114d7(2): jz 0x9(%rip)
114d9(2): mov %eax,%edi
114db(5): jmp 0xffff1795(%rip)
114e0(5): jmp 0xffff17b0(%rip)

"set_permissions" :
114f0(4): sub $0x8,%rsp
114f4(3): mov %rsi,%rax
114f7(2): mov %edx,%esi
114f9(2): mov (%rdi),%edx
114fb(3): mov %rax,%rdi
114fe(5): call 0xffffffd2(%rip)
11503(2): test %eax,%eax
11505(3): setnz %al
11508(4): add $0x8,%rsp
1150c(3): movzx %al,%eax
1150f(2): neg %eax
11511(1): ret near (%rsp)

"close_stream" :
11520(2): push %r12
11522(1): push %rbp
11523(3): mov %rdi,%rbp
11526(1): push %rbx
11527(5): call 0xffff1299(%rip)
1152c(3): mov 0x0(%rbp),%ebx
1152f(3): mov %rbp,%rdi
11532(3): mov %rax,%r12
11535(5): call 0xf5b(%rip)
1153a(3): and $0x20,%ebx
1153d(2): test %ebx,%ebx
1153f(2): jnz 0x19(%rip)
11541(2): test %eax,%eax
11543(2): jz 0xc(%rip)
11545(3): test %r12,%r12
11548(5): mov $0xffffffff,%eax
1154d(2): jz 0x3b(%rip)
1154f(1): pop %rbx
11550(1): pop %rbp
11551(2): pop %r12
11553(1): ret near (%rsp)
11554(4): nop 0x0(%rax)
11558(2): test %eax,%eax
1155a(2): jnz 0x1e(%rip)
1155c(5): call 0xffff1214(%rip)
11561(6): mov $0x0,(%rax)
11567(5): mov $0xffffffff,%eax
1156c(1): pop %rbx
1156d(1): pop %rbp
1156e(2): pop %r12
11570(1): ret near (%rsp)
11571(7): nop 0x0(%rax)
11578(1): pop %rbx
11579(5): mov $0xffffffff,%eax
1157e(1): pop %rbp
1157f(2): pop %r12
11581(1): ret near (%rsp)
11582(6): nop 0x0(%rax,%rax,1)
11588(5): call 0xffff11e8(%rip)
1158d(3): cmp $0x9,(%rax)
11590(1): pop %rbx
11591(1): pop %rbp
11592(2): pop %r12
11594(3): setnz %al
11597(3): movzx %al,%eax
1159a(2): neg %eax
1159c(1): ret near (%rsp)

"opendir_safer" :
115a0(2): push %r14
115a2(2): push %r13
115a4(2): push %r12
115a6(1): push %rbp
115a7(1): push %rbx
115a8(5): call 0xffff12f8(%rip)
115ad(3): test %rax,%rax
115b0(3): mov %rax,%rbx
115b3(2): jz 0xf(%rip)
115b5(3): mov %rax,%rdi
115b8(5): call 0xffff1548(%rip)
115bd(3): cmp $0x2,%eax
115c0(2): jbe 0x10(%rip)
115c2(3): mov %rbx,%rax
115c5(1): pop %rbx
115c6(1): pop %rbp
115c7(2): pop %r12
115c9(2): pop %r13
115cb(2): pop %r14
115cd(1): ret near (%rsp)
115ce(2): nop 
115d0(2): mov %eax,%edi
115d2(5): mov $0x3,%edx
115d7(5): mov $0x406,%esi
115dc(2): xor %eax,%eax
115de(5): call 0xf32(%rip)
115e3(3): mov %eax,%r12d
115e6(5): call 0xffff118a(%rip)
115eb(3): test %r12d,%r12d
115ee(3): mov %rax,%rbp
115f1(2): jns 0x27(%rip)
115f3(3): mov (%rax),%r14d
115f6(3): xor %r13d,%r13d
115f9(3): mov %rbx,%rdi
115fc(3): mov %r13,%rbx
115ff(5): call 0xffff1461(%rip)
11604(4): mov %r14d,0x0(%rbp)
11608(3): mov %rbx,%rax
1160b(1): pop %rbx
1160c(1): pop %rbp
1160d(2): pop %r12
1160f(2): pop %r13
11611(2): pop %r14
11613(1): ret near (%rsp)
11614(4): nop 0x0(%rax)
11618(3): mov %r12d,%edi
1161b(5): call 0xffff1705(%rip)
11620(3): test %rax,%rax
11623(3): mov %rax,%r13
11626(4): mov 0x0(%rbp),%r14d
1162a(2): jnz 0xffffffcf(%rip)
1162c(3): mov %r12d,%edi
1162f(5): call 0xffff1401(%rip)
11634(2): jmp 0xffffffc5(%rip)

"gettime" :
11640(3): mov %rdi,%rsi
11643(2): xor %edi,%edi
11645(5): jmp 0xffff11eb(%rip)

"current_timespec" :
11650(4): sub $0x28,%rsp
11654(2): xor %edi,%edi
11656(3): mov %rsp,%rsi
11659(9): mov $0x28,%rax
11662(5): mov %rax,0x18(%rsp)
11667(2): xor %eax,%eax
11669(5): call 0xffff11c7(%rip)
1166e(5): mov 0x18(%rsp),%rcx
11673(9): xor $0x28,%rcx
1167c(4): mov (%rsp),%rax
11680(5): mov 0x8(%rsp),%rdx
11685(2): jnz 0x7(%rip)
11687(4): add $0x28,%rsp
1168b(1): ret near (%rsp)
1168c(5): call 0xffff12a4(%rip)

"hard_locale" :
116a0(4): sub $0x8,%rsp
116a4(2): xor %esi,%esi
116a6(5): call 0xffff15aa(%rip)
116ab(3): mov %rax,%rdx
116ae(5): mov $0x1,%eax
116b3(3): test %rdx,%rdx
116b6(2): jz 0x1f(%rip)
116b8(7): lea 0x4561(%rip),%rdi
116bf(5): mov $0x2,%ecx
116c4(3): mov %rdx,%rsi
116c7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
116c9(3): setnbe %cl
116cc(3): sbb $0x0,%cl
116cf(2): xor %eax,%eax
116d1(2): test %cl,%cl
116d3(2): jnz 0xd(%rip)
116d5(4): add $0x8,%rsp
116d9(1): ret near (%rsp)
116da(6): nop 0x0(%rax,%rax,1)
116e0(7): lea 0x453b(%rip),%rdi
116e7(5): mov $0x6,%ecx
116ec(3): mov %rdx,%rsi
116ef(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
116f1(3): setnbe %al
116f4(2): sbb $0x0,%al
116f6(2): test %al,%al
116f8(3): setnz %al
116fb(4): add $0x8,%rsp
116ff(1): ret near (%rsp)

"hash_pjw" :
11700(4): movsx (%rdi),%rcx
11704(2): test %cl,%cl
11706(2): jz 0x2a(%rip)
11708(2): xor %eax,%eax
1170a(6): nop 0x0(%rax,%rax,1)
11710(4): rol $0x9,%rax
11714(4): add $0x1,%rdi
11718(3): add %rcx,%rax
1171b(4): movsx (%rdi),%rcx
1171f(2): test %cl,%cl
11721(2): jnz 0xffffffef(%rip)
11723(2): xor %edx,%edx
11725(3): div %rsi,%rax
11728(3): mov %rdx,%rax
1172b(1): ret near (%rsp)
1172c(4): nop 0x0(%rax)
11730(2): xor %edx,%edx
11732(3): mov %rdx,%rax
11735(1): ret near (%rsp)

"locale_charset" :
11740(4): sub $0x8,%rsp
11744(5): mov $0xe,%edi
11749(5): call 0xffff1497(%rip)
1174e(3): test %rax,%rax
11751(2): jz 0x1f(%rip)
11753(3): cmp $0x0,(%rax)
11756(7): lea 0x44cb(%rip),%rdx
1175d(4): cmove %rdx,%rax
11761(4): add $0x8,%rsp
11765(1): ret near (%rsp)
11766(a): nop 0x0(%rax,%rax,1)
11770(7): lea 0x44b1(%rip),%rax
11777(4): add $0x8,%rsp
1177b(1): ret near (%rsp)

"openat_safer" :
11780(4): sub $0x58,%rsp
11784(5): mov %rcx,0x38(%rsp)
11789(2): xor %ecx,%ecx
1178b(9): mov $0x28,%rax
11794(5): mov %rax,0x18(%rsp)
11799(2): xor %eax,%eax
1179b(3): test $0x40,%dl
1179e(2): jnz 0x2a(%rip)
117a0(2): xor %eax,%eax
117a2(5): call 0xffff117e(%rip)
117a7(2): mov %eax,%edi
117a9(5): call 0xffffe1a7(%rip)
117ae(5): mov 0x18(%rsp),%rsi
117b3(9): xor $0x28,%rsi
117bc(2): jnz 0x2d(%rip)
117be(4): add $0x58,%rsp
117c2(1): ret near (%rsp)
117c3(5): nop 0x0(%rax,%rax,1)
117c8(5): lea 0x60(%rsp),%rax
117cd(7): mov $0x18,(%rsp)
117d4(4): mov 0x38(%rsp),%ecx
117d8(5): mov %rax,0x8(%rsp)
117dd(5): lea 0x20(%rsp),%rax
117e2(5): mov %rax,0x10(%rsp)
117e7(2): jmp 0xffffffb9(%rip)
117e9(5): call 0xffff1147(%rip)

"randint_new" :
117f0(1): push %rbx
117f1(3): mov %rdi,%rbx
117f4(5): mov $0x18,%edi
117f9(5): call 0xfffff827(%rip)
117fe(3): mov %rbx,(%rax)
11801(8): mov $0x0,0x10(%rax)
11809(8): mov $0x0,0x8(%rax)
11811(1): pop %rbx
11812(1): ret near (%rsp)

"randint_all_new" :
11820(1): push %rbx
11821(5): call 0x24f(%rip)
11826(3): test %rax,%rax
11829(2): jz 0x27(%rip)
1182b(3): mov %rax,%rbx
1182e(5): mov $0x18,%edi
11833(5): call 0xfffff7ed(%rip)
11838(3): mov %rbx,(%rax)
1183b(8): mov $0x0,0x10(%rax)
11843(8): mov $0x0,0x8(%rax)
1184b(1): pop %rbx
1184c(1): ret near (%rsp)
1184d(3): nop (%rax)
11850(2): xor %eax,%eax
11852(1): pop %rbx
11853(1): ret near (%rsp)

"randint_get_source" :
11860(3): mov (%rdi),%rax
11863(1): ret near (%rsp)

"randint_genmax" :
11870(2): push %r15
11872(2): push %r14
11874(4): lea 0x1(%rsi),%r15
11878(2): push %r13
1187a(2): push %r12
1187c(3): mov %rdi,%r13
1187f(1): push %rbp
11880(1): push %rbx
11881(3): mov %rsi,%r14
11884(4): sub $0x28,%rsp
11888(4): mov 0x8(%rdi),%rbp
1188c(4): mov 0x10(%rdi),%rbx
11890(9): mov $0x28,%rax
11899(5): mov %rax,0x18(%rsp)
1189e(2): xor %eax,%eax
118a0(3): mov (%rdi),%rax
118a3(5): lea 0x10(%rsp),%r12
118a8(5): mov %rax,0x8(%rsp)
118ad(2): jmp 0x38(%rip)
118af(1): nop 
118b0(3): cmp %r14,%rbx
118b3(6): jz 0x8c(%rip)
118b9(3): mov %rbx,%rax
118bc(2): xor %edx,%edx
118be(3): sub %r14,%rax
118c1(3): div %r15,%rax
118c4(3): sub %rdx,%rbx
118c7(3): mov %rdx,%rdi
118ca(3): mov %rax,%rsi
118cd(2): xor %edx,%edx
118cf(3): mov %rbp,%rax
118d2(3): div %r15,%rax
118d5(3): cmp %rbx,%rbp
118d8(6): jbe 0xa0(%rip)
118de(4): lea 0xffffffff(%rdi),%rbx
118e2(3): mov %rdx,%rbp
118e5(3): cmp %r14,%rbx
118e8(2): jnb 0xffffffc8(%rip)
118ea(3): mov %rbx,%rax
118ed(2): xor %edx,%edx
118ef(1): nop 
118f0(4): shl/sal $0x8,%rax
118f4(4): add $0x1,%rdx
118f8(6): add $0xff,%rax
118fe(3): cmp %rax,%r14
11901(2): jnbe 0xffffffef(%rip)
11903(5): mov 0x8(%rsp),%rdi
11908(3): mov %r12,%rsi
1190b(5): call 0x4b5(%rip)
11910(3): mov %r12,%rax
11913(5): nop 0x0(%rax,%rax,1)
11918(3): movzx (%rax),%edx
1191b(4): shl/sal $0x8,%rbx
1191f(4): shl/sal $0x8,%rbp
11923(7): add $0xff,%rbx
1192a(4): add $0x1,%rax
1192e(3): add %rdx,%rbp
11931(3): cmp %rbx,%r14
11934(2): jnbe 0xffffffe4(%rip)
11936(3): cmp %r14,%rbx
11939(6): jnz 0xffffff80(%rip)
1193f(8): mov $0x0,0x10(%r13)
11947(8): mov $0x0,0x8(%r13)
1194f(5): mov 0x18(%rsp),%rcx
11954(9): xor $0x28,%rcx
1195d(3): mov %rbp,%rax
11960(2): jnz 0x25(%rip)
11962(4): add $0x28,%rsp
11966(1): pop %rbx
11967(1): pop %rbp
11968(2): pop %r12
1196a(2): pop %r13
1196c(2): pop %r14
1196e(2): pop %r15
11970(1): ret near (%rsp)
11971(7): nop 0x0(%rax)
11978(4): mov %rax,0x8(%r13)
1197c(4): mov %rsi,0x10(%r13)
11980(3): mov %rdx,%rbp
11983(2): jmp 0xffffffcc(%rip)
11985(5): call 0xffff0fab(%rip)

"randint_free" :
11990(1): push %rbx
11991(7): mov $0xffffffff,%rdx
11998(3): mov %rdi,%rbx
1199b(5): mov $0x18,%esi
119a0(5): call 0xffff1320(%rip)
119a5(3): mov %rbx,%rdi
119a8(1): pop %rbx
119a9(5): jmp 0xffff1467(%rip)

"randint_all_free" :
119b0(2): push %r13
119b2(2): push %r12
119b4(1): push %rbp
119b5(1): push %rbx
119b6(3): mov %rdi,%rbx
119b9(4): sub $0x8,%rsp
119bd(3): mov (%rdi),%rdi
119c0(5): call 0x5a0(%rip)
119c5(3): mov %eax,%r12d
119c8(5): call 0xffff0da8(%rip)
119cd(3): mov (%rax),%r13d
119d0(3): mov %rbx,%rdi
119d3(7): mov $0xffffffff,%rdx
119da(5): mov $0x18,%esi
119df(3): mov %rax,%rbp
119e2(5): call 0xffff12de(%rip)
119e7(3): mov %rbx,%rdi
119ea(5): call 0xffff1426(%rip)
119ef(4): mov %r13d,0x0(%rbp)
119f3(4): add $0x8,%rsp
119f7(3): mov %r12d,%eax
119fa(1): pop %rbx
119fb(1): pop %rbp
119fc(2): pop %r12
119fe(2): pop %r13
11a00(1): ret near (%rsp)

"randread_error" :
11a10(1): push %rbp
11a11(1): push %rbx
11a12(4): sub $0x8,%rsp
11a16(3): test %rdi,%rdi
11a19(2): jz 0x3f(%rip)
11a1b(5): call 0xffffd365(%rip)
11a20(3): mov %rax,%rbp
11a23(5): call 0xffff0d4d(%rip)
11a28(3): cmp $0x0,(%rax)
11a2b(3): mov %rax,%rbx
11a2e(5): mov $0x5,%edx
11a33(2): jz 0x2a(%rip)
11a35(7): lea 0x4202(%rip),%rsi
11a3c(2): xor %edi,%edi
11a3e(5): call 0xffff0ea2(%rip)
11a43(6): mov 0x2085e7(%rip),%edi
11a49(2): mov (%rbx),%esi
11a4b(3): mov %rax,%rdx
11a4e(3): mov %rbp,%rcx
11a51(2): xor %eax,%eax
11a53(5): call 0xffff125d(%rip)
11a58(5): call 0xffff0d08(%rip)
11a5d(7): lea 0x41ca(%rip),%rsi
11a64(2): xor %edi,%edi
11a66(5): call 0xffff0e7a(%rip)
11a6b(2): jmp 0xffffffd8(%rip)

"randread_new" :
11a70(2): push %r15
11a72(2): push %r14
11a74(2): push %r13
11a76(2): push %r12
11a78(1): push %rbp
11a79(1): push %rbx
11a7a(4): sub $0x38,%rsp
11a7e(9): mov $0x28,%rax
11a87(5): mov %rax,0x28(%rsp)
11a8c(2): xor %eax,%eax
11a8e(3): test %rsi,%rsi
11a91(6): jz 0x127(%rip)
11a97(3): test %rdi,%rdi
11a9a(3): mov %rdi,%r12
11a9d(3): mov %rsi,%rbp
11aa0(2): jz 0x80(%rip)
11aa2(7): lea 0x41b1(%rip),%rsi
11aa9(5): call 0xce7(%rip)
11aae(3): test %rax,%rax
11ab1(3): mov %rax,%r13
11ab4(6): jz 0x204(%rip)
11aba(5): mov $0x1038,%edi
11abf(5): call 0xfffff561(%rip)
11ac4(3): mov %rax,%rbx
11ac7(3): mov %r13,(%rax)
11aca(7): lea 0xffffff3f(%rip),%rax
11ad1(7): cmp $0x1000,%rbp
11ad8(5): mov $0x1000,%ecx
11add(4): lea 0x18(%rbx),%rsi
11ae1(4): cmovbe %rbp,%rcx
11ae5(4): mov %rax,0x8(%rbx)
11ae9(4): mov %r12,0x10(%rbx)
11aed(2): xor %edx,%edx
11aef(3): mov %r13,%rdi
11af2(5): call 0xffff118e(%rip)
11af7(5): mov 0x28(%rsp),%rdx
11afc(9): xor $0x28,%rdx
11b05(3): mov %rbx,%rax
11b08(6): jnz 0x1b7(%rip)
11b0e(4): add $0x38,%rsp
11b12(1): pop %rbx
11b13(1): pop %rbp
11b14(2): pop %r12
11b16(2): pop %r13
11b18(2): pop %r14
11b1a(2): pop %r15
11b1c(1): ret near (%rsp)
11b1d(3): nop (%rax)
11b20(5): mov $0x1038,%edi
11b25(5): call 0xfffff4fb(%rip)
11b2a(3): mov %rax,%rbx
11b2d(7): mov $0x0,(%rax)
11b34(7): lea 0xfffffed5(%rip),%rax
11b3b(7): lea 0x410b(%rip),%rdi
11b42(2): xor %esi,%esi
11b44(8): mov $0x0,0x10(%rbx)
11b4c(4): mov %rax,0x8(%rbx)
11b50(8): mov $0x0,0x18(%rbx)
11b58(2): xor %eax,%eax
11b5a(5): call 0xffff1176(%rip)
11b5f(2): test %eax,%eax
11b61(4): lea 0x20(%rbx),%r13
11b65(3): mov %eax,%r15d
11b68(2): js 0x80(%rip)
11b6a(7): cmp $0x800,%rbp
11b71(3): mov %rbp,%rdx
11b74(6): mov $0x800,%r14d
11b7a(4): cmovnbe %r14,%rdx
11b7e(5): mov $0x1018,%ecx
11b83(3): mov %r13,%rsi
11b86(2): mov %eax,%edi
11b88(5): call 0xffff0c48(%rip)
11b8d(3): mov %r15d,%edi
11b90(3): mov %rax,%rbp
11b93(5): call 0xffff0e9d(%rip)
11b98(7): cmp $0x7ff,%rbp
11b9f(6): jle 0x125(%rip)
11ba5(3): mov %r13,%rdi
11ba8(5): call 0x698(%rip)
11bad(5): jmp 0xffffff4a(%rip)
11bb2(6): nop 0x0(%rax,%rax,1)
11bb8(5): mov $0x1038,%edi
11bbd(5): call 0xfffff463(%rip)
11bc2(3): mov %rax,%rbx
11bc5(7): mov $0x0,(%rax)
11bcc(7): lea 0xfffffe3d(%rip),%rax
11bd3(8): mov $0x0,0x10(%rbx)
11bdb(4): mov %rax,0x8(%rbx)
11bdf(5): jmp 0xffffff18(%rip)
11be4(4): nop 0x0(%rax)
11be8(5): lea 0x10(%rsp),%r12
11bed(2): xor %esi,%esi
11bef(6): mov $0x18,%r14d
11bf5(3): mov %r12,%rdi
11bf8(5): call 0xffff0dd8(%rip)
11bfd(6): movdqa 0x10(%rsp),%xmm0
11c03(4): movups %xmm0,0x20(%rbx)
11c07(5): call 0xffff0c49(%rip)
11c0c(3): mov %eax,0x30(%rbx)
11c0f(4): mov %eax,0x10(%rsp)
11c13(5): call 0xffff116d(%rip)
11c18(4): mov %eax,0x10(%rsp)
11c1c(3): mov %eax,0x34(%rbx)
11c1f(5): mov $0x800,%ebp
11c24(5): mov $0x4,%eax
11c29(3): sub %r14,%rbp
11c2c(4): cmp $0x4,%rbp
11c30(4): cmovnbe %rax,%rbp
11c34(5): call 0xffff0d0c(%rip)
11c39(2): test %ebp,%ebp
11c3b(4): mov %eax,0x10(%rsp)
11c3f(5): lea 0x0(%r13,%r14,1),%rcx
11c44(2): mov %ebp,%esi
11c46(2): jz 0x16(%rip)
11c48(2): xor %eax,%eax
11c4a(2): mov %eax,%edx
11c4c(3): add $0x1,%eax
11c4f(5): movzx 0x0(%r12,%rdx,1),%edi
11c54(2): cmp %esi,%eax
11c56(4): mov %dil,0x0(%rcx,%rdx,1)
11c5a(2): jb 0xfffffff0(%rip)
11c5c(3): add %r14,%rbp
11c5f(7): cmp $0x7ff,%rbp
11c66(6): jnbe 0xffffff3f(%rip)
11c6c(5): call 0xffff0f24(%rip)
11c71(4): mov %eax,0x10(%rsp)
11c75(5): mov $0x800,%eax
11c7a(5): mov $0x4,%edx
11c7f(3): sub %rbp,%rax
11c82(5): lea 0x0(%r13,%rbp,1),%rcx
11c87(4): cmp $0x4,%rax
11c8b(4): cmovnbe %rdx,%rax
11c8f(2): test %eax,%eax
11c91(2): mov %eax,%esi
11c93(6): jz 0xffffff12(%rip)
11c99(2): xor %eax,%eax
11c9b(2): mov %eax,%edx
11c9d(3): add $0x1,%eax
11ca0(5): movzx 0x0(%r12,%rdx,1),%edi
11ca5(2): cmp %esi,%eax
11ca7(4): mov %dil,0x0(%rcx,%rdx,1)
11cab(2): jb 0xfffffff0(%rip)
11cad(5): jmp 0xfffffef8(%rip)
11cb2(6): nop 0x0(%rax,%rax,1)
11cb8(2): xor %ebx,%ebx
11cba(5): jmp 0xfffffe3d(%rip)
11cbf(5): call 0xffff0c71(%rip)
11cc4(3): test %rbp,%rbp
11cc7(3): mov %r14,%r15
11cca(5): mov $0x10,%eax
11ccf(4): cmovs %r12,%rbp
11cd3(5): lea 0x10(%rsp),%r12
11cd8(3): sub %rbp,%r15
11cdb(4): cmp $0x10,%r15
11cdf(3): mov %r12,%rdi
11ce2(4): cmovnbe %rax,%r15
11ce6(2): xor %esi,%esi
11ce8(5): call 0xffff0ce8(%rip)
11ced(5): lea 0x0(%r13,%rbp,1),%rax
11cf2(3): add %r15,%rbp
11cf5(3): mov %r15d,%ecx
11cf8(7): cmp $0x7ff,%rbp
11cff(3): mov %r12,%rsi
11d02(3): mov %rax,%rdi
11d05(2): REP movsb rsi(%ds,10),rdi(%es,10)
11d07(6): jnbe 0xfffffe9e(%rip)
11d0d(3): mov %r14,%r15
11d10(6): mov $0x4,%r8d
11d16(3): sub %rbp,%r15
11d19(5): mov %r8,0x8(%rsp)
11d1e(4): cmp $0x4,%r15
11d22(4): cmovnbe %r8,%r15
11d26(5): lea 0x0(%rbp,%r15,1),%rdx
11d2b(3): add %r13,%rbp
11d2e(4): mov %rdx,(%rsp)
11d32(5): call 0xffff0b1e(%rip)
11d37(4): mov (%rsp),%rdx
11d3b(4): mov %eax,0x10(%rsp)
11d3f(3): mov %r15d,%ecx
11d42(3): mov %rbp,%rdi
11d45(3): mov %r12,%rsi
11d48(5): mov 0x8(%rsp),%r8
11d4d(2): REP movsb rsi(%ds,10),rdi(%es,10)
11d4f(7): cmp $0x7ff,%rdx
11d56(6): jnle 0xfffffe4f(%rip)
11d5c(3): sub %rdx,%r14
11d5f(4): cmp $0x4,%r14
11d63(4): cmovnbe %r8,%r14
11d67(5): call 0xffff1019(%rip)
11d6c(4): mov (%rsp),%rdx
11d70(4): mov %eax,0x10(%rsp)
11d74(3): mov %r14d,%ecx
11d77(3): mov %r12,%rsi
11d7a(5): lea 0x0(%r13,%rdx,1),%rax
11d7f(3): add %rdx,%r14
11d82(7): cmp $0x7ff,%r14
11d89(3): mov %rax,%rdi
11d8c(2): REP movsb rsi(%ds,10),rdi(%es,10)
11d8e(6): jnbe 0xfffffe17(%rip)
11d94(5): jmp 0xfffffe8b(%rip)

"randread_set_handler" :
11da0(4): mov %rsi,0x8(%rdi)
11da4(1): ret near (%rsp)

"randread_set_handler_arg" :
11db0(4): mov %rsi,0x10(%rdi)
11db4(1): ret near (%rsp)

"randread" :
11dc0(2): push %r15
11dc2(2): push %r14
11dc4(2): push %r13
11dc6(2): push %r12
11dc8(3): mov %rdi,%r12
11dcb(1): push %rbp
11dcc(1): push %rbx
11dcd(3): mov %rdx,%rbp
11dd0(3): mov %rsi,%rbx
11dd3(4): sub $0x18,%rsp
11dd7(3): mov (%rdi),%rcx
11dda(3): test %rcx,%rcx
11ddd(5): mov %rcx,0x8(%rsp)
11de2(2): jz 0x66(%rip)
11de4(5): call 0xffff098c(%rip)
11de9(5): mov 0x8(%rsp),%rcx
11dee(3): mov %rax,%r13
11df1(2): jmp 0x25(%rip)
11df3(5): nop 0x0(%rax,%rax,1)
11df8(4): mov (%r12),%rax
11dfc(5): mov 0x10(%r12),%rdi
11e01(2): mov (%rax),%eax
11e03(3): and $0x20,%eax
11e06(3): cmovne %edx,%eax
11e09(4): mov %eax,0x0(%r13)
11e0d(5): call 0x8(%r12)
11e12(4): mov (%r12),%rcx
11e16(3): mov %rbp,%rdx
11e19(3): mov %rbx,%rdi
11e1c(5): mov $0x1,%esi
11e21(5): call 0xffff0a3f(%rip)
11e26(3): add %rax,%rbx
11e29(3): sub %rax,%rbp
11e2c(4): mov 0x0(%r13),%edx
11e30(2): jnz 0xffffffc8(%rip)
11e32(4): add $0x18,%rsp
11e36(1): pop %rbx
11e37(1): pop %rbp
11e38(2): pop %r12
11e3a(2): pop %r13
11e3c(2): pop %r14
11e3e(2): pop %r15
11e40(1): ret near (%rsp)
11e41(7): nop 0x0(%rax)
11e48(4): mov 0x18(%rdi),%r14
11e4c(7): lea 0x838(%rdi),%rax
11e53(4): lea 0x20(%rdi),%r13
11e57(5): mov %rax,0x8(%rsp)
11e5c(3): cmp %r14,%rdx
11e5f(6): jbe 0xe3(%rip)
11e65(5): mov $0x800,%esi
11e6a(3): mov %rbx,%rdi
11e6d(3): mov %r14,%rdx
11e70(3): sub %r14,%rsi
11e73(5): add 0x8(%rsp),%rsi
11e78(3): add %r14,%rbx
11e7b(3): sub %r14,%rbp
11e7e(5): call 0xffff0ce2(%rip)
11e83(3): test $0x7,%bl
11e86(2): jnz 0x6a(%rip)
11e88(7): cmp $0x7ff,%rbp
11e8f(6): jbe 0xa4(%rip)
11e95(7): lea 0xfffff800(%rbp),%r15
11e9c(3): mov %r15,%r14
11e9f(7): and $0x7ff,%r14d
11ea6(2): jmp 0x16(%rip)
11ea8(8): nop 0x0(%rax,%rax,1)
11eb0(3): cmp %r14,%r15
11eb3(2): jz 0x3d(%rip)
11eb5(7): sub $0x800,%r15
11ebc(3): mov %rbx,%rsi
11ebf(3): mov %r13,%rdi
11ec2(7): add $0x800,%rbx
11ec9(5): call 0xe7(%rip)
11ece(3): test %r15,%r15
11ed1(3): mov %r15,%rbp
11ed4(2): jnz 0xffffffdc(%rip)
11ed6(9): mov $0x0,0x18(%r12)
11edf(4): add $0x18,%rsp
11ee3(1): pop %rbx
11ee4(1): pop %rbp
11ee5(2): pop %r12
11ee7(2): pop %r13
11ee9(2): pop %r14
11eeb(2): pop %r15
11eed(1): ret near (%rsp)
11eee(2): nop 
11ef0(5): mov 0x8(%rsp),%rsi
11ef5(3): mov %r13,%rdi
11ef8(6): mov $0x800,%r14d
11efe(5): call 0xb2(%rip)
11f03(7): cmp $0x800,%rbp
11f0a(6): jnbe 0xffffff5b(%rip)
11f10(6): mov $0x800,%r14d
11f16(5): mov 0x8(%rsp),%rsi
11f1b(3): mov %rbp,%rdx
11f1e(3): mov %rbx,%rdi
11f21(3): sub %rbp,%r14
11f24(5): call 0xffff0c3c(%rip)
11f29(5): mov %r14,0x18(%r12)
11f2e(5): jmp 0xffffff04(%rip)
11f33(5): mov 0x8(%rsp),%rsi
11f38(3): mov %r13,%rdi
11f3b(5): call 0x75(%rip)
11f40(2): jmp 0xffffffd0(%rip)
11f42(3): mov %rax,%r15
11f45(3): sub %r14,%r15
11f48(7): lea 0x800(%r15),%rax
11f4f(5): mov %rax,0x8(%rsp)
11f54(2): jmp 0xffffffc2(%rip)

"randread_free" :
11f60(1): push %rbp
11f61(1): push %rbx
11f62(7): mov $0xffffffff,%rdx
11f69(3): mov %rdi,%rbx
11f6c(5): mov $0x1038,%esi
11f71(4): sub $0x8,%rsp
11f75(3): mov (%rdi),%rbp
11f78(5): call 0xffff0d48(%rip)
11f7d(3): mov %rbx,%rdi
11f80(5): call 0xffff0e90(%rip)
11f85(3): test %rbp,%rbp
11f88(2): jz 0x18(%rip)
11f8a(4): add $0x8,%rsp
11f8e(3): mov %rbp,%rdi
11f91(1): pop %rbx
11f92(1): pop %rbp
11f93(5): jmp 0x4fd(%rip)
11f98(8): nop 0x0(%rax,%rax,1)
11fa0(4): add $0x8,%rsp
11fa4(2): xor %eax,%eax
11fa6(1): pop %rbx
11fa7(1): pop %rbp
11fa8(1): ret near (%rsp)

"isaac_refill" :
11fb0(7): mov 0x810(%rdi),%rax
11fb7(7): mov 0x800(%rdi),%rdx
11fbe(7): lea 0x400(%rdi),%r9
11fc5(4): lea 0x1(%rax),%rcx
11fc9(3): mov %rdi,%rax
11fcc(7): mov %rcx,0x810(%rdi)
11fd3(7): add 0x808(%rdi),%rcx
11fda(6): nop 0x0(%rax,%rax,1)
11fe0(3): mov %rdx,%r8
11fe3(4): shl/sal $0x15,%r8
11fe7(3): xor %r8,%rdx
11fea(3): mov (%rax),%r8
11fed(3): not %rdx
11ff0(7): add 0x400(%rax),%rdx
11ff7(3): mov %r8,%r10
11ffa(7): and $0x7f8,%r10d
12001(4): mov 0x0(%rdi,%r10,1),%r11
12005(3): mov %rdx,%r10
12008(4): shr $0x5,%r10
1200c(3): add %rdx,%r11
1200f(3): xor %r10,%rdx
12012(3): add %r11,%rcx
12015(3): mov %rcx,(%rax)
12018(4): shr $0x8,%rcx
1201c(6): and $0x7f8,%ecx
12022(4): mov 0x0(%rdi,%rcx,1),%r11
12026(3): add %r8,%r11
12029(3): mov %r11,(%rsi)
1202c(7): add 0x408(%rax),%rdx
12033(4): mov 0x8(%rax),%rcx
12037(3): mov %rdx,%r10
1203a(3): mov %rcx,%rdx
1203d(6): and $0x7f8,%edx
12043(4): mov 0x0(%rdi,%rdx,1),%r8
12047(3): mov %r10,%rdx
1204a(4): shl/sal $0xc,%rdx
1204e(3): xor %r10,%rdx
12051(3): add %r10,%r8
12054(3): add %r11,%r8
12057(4): mov %r8,0x8(%rax)
1205b(4): shr $0x8,%r8
1205f(7): and $0x7f8,%r8d
12066(4): add 0x0(%rdi,%r8,1),%rcx
1206a(4): mov %rcx,0x8(%rsi)
1206e(4): mov 0x10(%rax),%r8
12072(3): mov %rcx,%r11
12075(7): add 0x410(%rax),%rdx
1207c(3): mov %r8,%rcx
1207f(6): and $0x7f8,%ecx
12085(4): mov 0x0(%rdi,%rcx,1),%r10
12089(3): add %rdx,%r10
1208c(3): mov %r10,%rcx
1208f(3): add %r11,%rcx
12092(4): mov %rcx,0x10(%rax)
12096(4): shr $0x8,%rcx
1209a(6): and $0x7f8,%ecx
120a0(4): mov 0x0(%rdi,%rcx,1),%r10
120a4(3): mov %rdx,%rcx
120a7(4): shr $0x21,%rcx
120ab(3): xor %rcx,%rdx
120ae(3): add %r8,%r10
120b1(4): mov %r10,0x10(%rsi)
120b5(4): mov 0x18(%rax),%rcx
120b9(7): add 0x418(%rax),%rdx
120c0(3): mov %rcx,%r8
120c3(7): and $0x7f8,%r8d
120ca(4): mov 0x0(%rdi,%r8,1),%r11
120ce(3): add %rdx,%r11
120d1(3): mov %r11,%r8
120d4(3): add %r10,%r8
120d7(4): add $0x20,%rax
120db(4): add $0x20,%rsi
120df(4): mov %r8,0xfffffff8(%rax)
120e3(4): shr $0x8,%r8
120e7(7): and $0x7f8,%r8d
120ee(4): add 0x0(%rdi,%r8,1),%rcx
120f2(4): mov %rcx,0xfffffff8(%rsi)
120f6(3): cmp %r9,%rax
120f9(6): jb 0xfffffee7(%rip)
120ff(7): lea 0x800(%rdi),%r9
12106(a): nop 0x0(%rax,%rax,1)
12110(3): mov %rdx,%r8
12113(4): shl/sal $0x15,%r8
12117(3): xor %r8,%rdx
1211a(3): mov (%rax),%r8
1211d(3): not %rdx
12120(7): add 0xfffffc00(%rax),%rdx
12127(3): mov %r8,%r10
1212a(7): and $0x7f8,%r10d
12131(4): mov 0x0(%rdi,%r10,1),%r11
12135(3): mov %rdx,%r10
12138(4): shr $0x5,%r10
1213c(3): add %rdx,%r11
1213f(3): xor %r10,%rdx
12142(3): add %r11,%rcx
12145(3): mov %rcx,(%rax)
12148(4): shr $0x8,%rcx
1214c(6): and $0x7f8,%ecx
12152(4): mov 0x0(%rdi,%rcx,1),%r11
12156(3): add %r8,%r11
12159(3): mov %r11,(%rsi)
1215c(7): add 0xfffffc08(%rax),%rdx
12163(4): mov 0x8(%rax),%rcx
12167(3): mov %rdx,%r10
1216a(3): mov %rcx,%rdx
1216d(6): and $0x7f8,%edx
12173(4): mov 0x0(%rdi,%rdx,1),%r8
12177(3): mov %r10,%rdx
1217a(4): shl/sal $0xc,%rdx
1217e(3): xor %r10,%rdx
12181(3): add %r10,%r8
12184(3): add %r11,%r8
12187(4): mov %r8,0x8(%rax)
1218b(4): shr $0x8,%r8
1218f(7): and $0x7f8,%r8d
12196(4): add 0x0(%rdi,%r8,1),%rcx
1219a(4): mov %rcx,0x8(%rsi)
1219e(4): mov 0x10(%rax),%r8
121a2(3): mov %rcx,%r11
121a5(7): add 0xfffffc10(%rax),%rdx
121ac(3): mov %r8,%rcx
121af(6): and $0x7f8,%ecx
121b5(4): mov 0x0(%rdi,%rcx,1),%r10
121b9(3): add %rdx,%r10
121bc(3): mov %r10,%rcx
121bf(3): add %r11,%rcx
121c2(4): mov %rcx,0x10(%rax)
121c6(4): shr $0x8,%rcx
121ca(6): and $0x7f8,%ecx
121d0(4): mov 0x0(%rdi,%rcx,1),%r10
121d4(3): mov %rdx,%rcx
121d7(4): shr $0x21,%rcx
121db(3): xor %rcx,%rdx
121de(3): add %r8,%r10
121e1(4): mov %r10,0x10(%rsi)
121e5(4): mov 0x18(%rax),%rcx
121e9(7): add 0xfffffc18(%rax),%rdx
121f0(3): mov %rcx,%r8
121f3(7): and $0x7f8,%r8d
121fa(4): mov 0x0(%rdi,%r8,1),%r11
121fe(3): add %rdx,%r11
12201(3): mov %r11,%r8
12204(3): add %r10,%r8
12207(4): add $0x20,%rax
1220b(4): add $0x20,%rsi
1220f(4): mov %r8,0xfffffff8(%rax)
12213(4): shr $0x8,%r8
12217(7): and $0x7f8,%r8d
1221e(4): add 0x0(%rdi,%r8,1),%rcx
12222(4): mov %rcx,0xfffffff8(%rsi)
12226(3): cmp %r9,%rax
12229(6): jb 0xfffffee7(%rip)
1222f(7): mov %rdx,0x800(%rdi)
12236(7): mov %rcx,0x808(%rdi)
1223d(1): ret near (%rsp)

"isaac_seed" :
12240(2): push %r13
12242(2): push %r12
12244(7): lea 0x800(%rdi),%r12
1224b(1): push %rbp
1224c(3): mov %rdi,%rdx
1224f(1): push %rbx
12250(3): mov %rdi,%rax
12253(a): mov $0x-7424904924229222229,%rcx
1225d(a): mov $0x-5865837416287532563,%r10
12267(a): mov $0x5259722845879046933,%rbp
12271(a): mov $0x-9011610652101975858,%rsi
1227b(a): mov $0x-5576812576440232668,%r8
12285(a): mov $0x-8354558816804203872,%rbx
1228f(a): mov $0x-5046086420515862430,%r11
12299(a): mov $0x7240739780546808700,%r9
122a3(5): nop 0x0(%rax,%rax,1)
122a8(4): add 0x20(%rax),%rsi
122ac(4): add 0x38(%rax),%rcx
122b0(3): mov (%rax),%r13
122b3(4): add 0x28(%rax),%rbp
122b7(4): add 0x30(%rax),%r10
122bb(3): sub %rsi,%r13
122be(3): add %r13,%r9
122c1(3): mov %rcx,%r13
122c4(4): shr $0x9,%r13
122c8(3): add %r9,%rcx
122cb(3): xor %r13,%rbp
122ce(4): mov 0x8(%rax),%r13
122d2(3): sub %rbp,%r13
122d5(3): add %r13,%r11
122d8(3): mov %r9,%r13
122db(4): shl/sal $0x9,%r13
122df(3): add %r11,%r9
122e2(3): xor %r13,%r10
122e5(4): mov 0x10(%rax),%r13
122e9(3): sub %r10,%r13
122ec(3): add %r13,%rbx
122ef(3): mov %r11,%r13
122f2(4): shr $0x17,%r13
122f6(3): add %rbx,%r11
122f9(3): xor %r13,%rcx
122fc(4): mov 0x18(%rax),%r13
12300(3): sub %rcx,%r13
12303(3): add %r13,%r8
12306(3): mov %rbx,%r13
12309(4): shl/sal $0xf,%r13
1230d(3): add %r8,%rbx
12310(3): xor %r13,%r9
12313(3): mov %r8,%r13
12316(3): sub %r9,%rsi
12319(4): shr $0xe,%r13
1231d(3): mov %r9,(%rax)
12320(3): xor %r13,%r11
12323(3): mov %rsi,%r13
12326(3): add %rsi,%r8
12329(3): sub %r11,%rbp
1232c(4): shl/sal $0x14,%r13
12330(4): mov %r11,0x8(%rax)
12334(3): xor %r13,%rbx
12337(4): lea 0x0(%rsi,%rbp,1),%r13
1233b(3): mov %rbp,%rsi
1233e(3): sub %rbx,%r10
12341(4): shr $0x11,%rsi
12345(4): mov %rbx,0x10(%rax)
12349(3): xor %rsi,%r8
1234c(3): mov %r10,%rsi
1234f(3): add %r10,%rbp
12352(3): sub %r8,%rcx
12355(4): shl/sal $0xe,%rsi
12359(4): mov %r8,0x18(%rax)
1235d(3): xor %r13,%rsi
12360(3): add %rcx,%r10
12363(4): mov %rbp,0x28(%rax)
12367(4): mov %rsi,0x20(%rax)
1236b(4): mov %r10,0x30(%rax)
1236f(4): add $0x40,%rax
12373(4): mov %rcx,0xfffffff8(%rax)
12377(3): cmp %rax,%r12
1237a(6): jnz 0xffffff2e(%rip)
12380(4): add 0x20(%rdx),%rsi
12384(4): add 0x38(%rdx),%rcx
12388(3): mov (%rdx),%r12
1238b(4): add 0x28(%rdx),%rbp
1238f(4): add 0x30(%rdx),%r10
12393(3): sub %rsi,%r12
12396(3): add %r12,%r9
12399(3): mov %rcx,%r12
1239c(4): shr $0x9,%r12
123a0(3): add %r9,%rcx
123a3(3): xor %r12,%rbp
123a6(4): mov 0x8(%rdx),%r12
123aa(3): sub %rbp,%r12
123ad(3): add %r12,%r11
123b0(3): mov %r9,%r12
123b3(4): shl/sal $0x9,%r12
123b7(3): add %r11,%r9
123ba(3): xor %r12,%r10
123bd(4): mov 0x10(%rdx),%r12
123c1(3): sub %r10,%r12
123c4(3): add %r12,%rbx
123c7(3): mov %r11,%r12
123ca(4): shr $0x17,%r12
123ce(3): add %rbx,%r11
123d1(3): xor %r12,%rcx
123d4(4): mov 0x18(%rdx),%r12
123d8(3): sub %rcx,%r12
123db(3): add %r12,%r8
123de(3): mov %rbx,%r12
123e1(4): shl/sal $0xf,%r12
123e5(3): add %r8,%rbx
123e8(3): xor %r12,%r9
123eb(3): mov %r8,%r12
123ee(3): sub %r9,%rsi
123f1(4): shr $0xe,%r12
123f5(3): mov %r9,(%rdx)
123f8(3): xor %r12,%r11
123fb(3): mov %rsi,%r12
123fe(3): add %rsi,%r8
12401(3): sub %r11,%rbp
12404(4): shl/sal $0x14,%r12
12408(4): mov %r11,0x8(%rdx)
1240c(3): xor %r12,%rbx
1240f(4): lea 0x0(%rsi,%rbp,1),%r12
12413(3): mov %rbp,%rsi
12416(3): sub %rbx,%r10
12419(4): shr $0x11,%rsi
1241d(4): mov %rbx,0x10(%rdx)
12421(3): xor %rsi,%r8
12424(3): mov %r10,%rsi
12427(3): add %r10,%rbp
1242a(3): sub %r8,%rcx
1242d(4): shl/sal $0xe,%rsi
12431(4): mov %r8,0x18(%rdx)
12435(3): xor %r12,%rsi
12438(3): add %rcx,%r10
1243b(4): mov %rbp,0x28(%rdx)
1243f(4): mov %rsi,0x20(%rdx)
12443(4): mov %r10,0x30(%rdx)
12447(4): add $0x40,%rdx
1244b(4): mov %rcx,0xfffffff8(%rdx)
1244f(3): cmp %rdx,%rax
12452(6): jnz 0xffffff2e(%rip)
12458(1): pop %rbx
12459(b): mov $0x0,0x810(%rdi)
12464(b): mov $0x0,0x808(%rdi)
1246f(1): pop %rbp
12470(b): mov $0x0,0x800(%rdi)
1247b(2): pop %r12
1247d(2): pop %r13
1247f(1): ret near (%rsp)

"dup_safer" :
12480(5): mov $0x3,%edx
12485(2): xor %esi,%esi
12487(2): xor %eax,%eax
12489(5): jmp 0x87(%rip)

"rpl_fclose" :
12490(2): push %r12
12492(1): push %rbp
12493(1): push %rbx
12494(3): mov %rdi,%rbx
12497(5): call 0xffff06e9(%rip)
1249c(2): test %eax,%eax
1249e(3): mov %rbx,%rdi
124a1(2): js 0x56(%rip)
124a3(5): call 0xffff076d(%rip)
124a8(2): test %eax,%eax
124aa(2): jnz 0x2e(%rip)
124ac(3): mov %rbx,%rdi
124af(5): call 0xffffeea1(%rip)
124b4(2): test %eax,%eax
124b6(2): jz 0x3e(%rip)
124b8(5): call 0xffff02b8(%rip)
124bd(3): mov (%rax),%r12d
124c0(3): mov %rbx,%rdi
124c3(3): mov %rax,%rbp
124c6(5): call 0xffff03ca(%rip)
124cb(3): test %r12d,%r12d
124ce(2): jnz 0x32(%rip)
124d0(1): pop %rbx
124d1(1): pop %rbp
124d2(2): pop %r12
124d4(1): ret near (%rsp)
124d5(3): nop (%rax)
124d8(3): mov %rbx,%rdi
124db(5): call 0xffff06a5(%rip)
124e0(2): xor %esi,%esi
124e2(5): mov $0x1,%edx
124e7(2): mov %eax,%edi
124e9(5): call 0xffff04d7(%rip)
124ee(4): cmp $0xffffffff,%rax
124f2(2): jnz 0xffffffba(%rip)
124f4(3): mov %rbx,%rdi
124f7(1): pop %rbx
124f8(1): pop %rbp
124f9(2): pop %r12
124fb(5): jmp 0xffff0395(%rip)
12500(4): mov %r12d,0x0(%rbp)
12504(5): mov $0xffffffff,%eax
12509(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
12510(2): push %r12
12512(1): push %rbp
12513(2): mov %edi,%ebp
12515(1): push %rbx
12516(4): sub $0x50,%rsp
1251a(9): mov $0x28,%rax
12523(5): mov %rax,0x18(%rsp)
12528(2): xor %eax,%eax
1252a(5): lea 0x70(%rsp),%rax
1252f(2): test %esi,%esi
12531(5): mov %rdx,0x30(%rsp)
12536(5): mov %rcx,0x38(%rsp)
1253b(5): mov %r8,0x40(%rsp)
12540(5): mov %rax,0x8(%rsp)
12545(5): lea 0x20(%rsp),%rax
1254a(5): mov %r9,0x48(%rsp)
1254f(7): mov $0x10,(%rsp)
12556(5): mov %rax,0x10(%rsp)
1255b(6): jz 0x207(%rip)
12561(6): cmp $0x406,%esi
12567(2): jnz 0x49(%rip)
12569(5): mov 0x10(%rsp),%rax
1256e(7): cmp $0x0,0x20819f(%rip)
12575(7): mov $0x18,(%rsp)
1257c(4): mov 0x10(%rax),%r12d
12580(3): mov %r12d,%edx
12583(6): js 0x130(%rip)
12589(2): xor %eax,%eax
1258b(5): mov $0x406,%esi
12590(5): call 0xffff0290(%rip)
12595(2): test %eax,%eax
12597(2): mov %eax,%ebx
12599(6): js 0x18f(%rip)
1259f(a): mov $0x1,0x20816b(%rip)
125a9(2): jmp 0x47(%rip)
125ab(5): nop 0x0(%rax,%rax,1)
125b0(3): cmp $0xb,%esi
125b3(2): jz 0x2d(%rip)
125b5(2): jnle 0x5b(%rip)
125b7(3): cmp $0x4,%esi
125ba(6): jz 0xd6(%rip)
125c0(6): jnle 0xc0(%rip)
125c6(3): cmp $0x2,%esi
125c9(6): jz 0xc7(%rip)
125cf(2): jnle 0x11(%rip)
125d1(3): cmp $0x1,%esi
125d4(2): jnz 0x64(%rip)
125d6(a): nop 0x0(%rax,%rax,1)
125e0(2): mov %ebp,%edi
125e2(2): xor %eax,%eax
125e4(5): call 0xffff023c(%rip)
125e9(2): mov %eax,%ebx
125eb(5): nop 0x0(%rax,%rax,1)
125f0(5): mov 0x18(%rsp),%rcx
125f5(9): xor $0x28,%rcx
125fe(2): mov %ebx,%eax
12600(6): jnz 0x15d(%rip)
12606(4): add $0x50,%rsp
1260a(1): pop %rbx
1260b(1): pop %rbp
1260c(2): pop %r12
1260e(1): ret near (%rsp)
1260f(1): nop 
12610(6): cmp $0x407,%esi
12616(2): jnle 0x4a(%rip)
12618(6): cmp $0x406,%esi
1261e(2): jnl 0x72(%rip)
12620(6): cmp $0x401,%esi
12626(2): jz 0xffffffba(%rip)
12628(6): cmp $0x402,%esi
1262e(2): jz 0x62(%rip)
12630(6): cmp $0x400,%esi
12636(2): jz 0x5a(%rip)
12638(3): mov (%rsp),%eax
1263b(3): cmp $0x2f,%eax
1263e(6): jnbe 0x13c(%rip)
12644(5): add 0x10(%rsp),%rax
12649(3): mov (%rax),%rdx
1264c(2): mov %ebp,%edi
1264e(2): xor %eax,%eax
12650(5): call 0xffff01d0(%rip)
12655(2): mov %eax,%ebx
12657(2): jmp 0xffffff99(%rip)
12659(7): nop 0x0(%rax)
12660(6): cmp $0x409,%esi
12666(2): jz 0x2a(%rip)
12668(6): jl 0xffffff78(%rip)
1266e(6): cmp $0x40a,%esi
12674(2): jnz 0xffffffc4(%rip)
12676(5): jmp 0xffffff6a(%rip)
1267b(5): nop 0x0(%rax,%rax,1)
12680(3): cmp $0x9,%esi
12683(6): jz 0xffffff5d(%rip)
12689(2): jnle 0x7(%rip)
1268b(3): cmp $0x8,%esi
1268e(2): jnz 0xffffffaa(%rip)
12690(3): mov (%rsp),%eax
12693(3): cmp $0x2f,%eax
12696(6): jnbe 0xee(%rip)
1269c(5): add 0x10(%rsp),%rax
126a1(2): mov (%rax),%edx
126a3(2): mov %ebp,%edi
126a5(2): xor %eax,%eax
126a7(5): call 0xffff0179(%rip)
126ac(2): mov %eax,%ebx
126ae(5): jmp 0xffffff42(%rip)
126b3(2): xor %esi,%esi
126b5(2): xor %eax,%eax
126b7(5): call 0xffff0169(%rip)
126bc(2): test %eax,%eax
126be(2): mov %eax,%ebx
126c0(6): js 0xffffff30(%rip)
126c6(7): cmp $0xff,0x208047(%rip)
126cd(6): jnz 0xffffff23(%rip)
126d3(2): xor %eax,%eax
126d5(5): mov $0x1,%esi
126da(2): mov %ebx,%edi
126dc(5): call 0xffff0144(%rip)
126e1(2): test %eax,%eax
126e3(2): js 0x1e(%rip)
126e5(3): or $0x1,%eax
126e8(5): mov $0x2,%esi
126ed(2): mov %ebx,%edi
126ef(2): mov %eax,%edx
126f1(2): xor %eax,%eax
126f3(5): call 0xffff012d(%rip)
126f8(3): cmp $0xff,%eax
126fb(6): jnz 0xfffffef5(%rip)
12701(5): call 0xffff006f(%rip)
12706(3): mov (%rax),%r12d
12709(3): mov %rax,%rbp
1270c(2): mov %ebx,%edi
1270e(5): call 0xffff0322(%rip)
12713(5): mov $0xffffffff,%ebx
12718(4): mov %r12d,0x0(%rbp)
1271c(5): jmp 0xfffffed4(%rip)
12721(7): nop 0x0(%rax)
12728(5): call 0xffff0048(%rip)
1272d(3): cmp $0x16,(%rax)
12730(6): jnz 0xfffffe6f(%rip)
12736(2): xor %esi,%esi
12738(2): xor %eax,%eax
1273a(3): mov %r12d,%edx
1273d(2): mov %ebp,%edi
1273f(5): call 0xffff00e1(%rip)
12744(2): test %eax,%eax
12746(2): mov %eax,%ebx
12748(6): js 0xfffffea8(%rip)
1274e(a): mov $0xffffffff,0x207fbc(%rip)
12758(5): jmp 0xffffff7b(%rip)
1275d(5): call 0xffff01d3(%rip)
12762(5): mov 0x10(%rsp),%rax
12767(2): xor %esi,%esi
12769(3): mov 0x10(%rax),%edx
1276c(2): xor %eax,%eax
1276e(5): call 0xffff00b2(%rip)
12773(2): mov %eax,%ebx
12775(5): jmp 0xfffffe7b(%rip)
1277a(5): mov 0x8(%rsp),%rax
1277f(5): jmp 0xfffffeca(%rip)
12784(5): mov 0x8(%rsp),%rax
12789(5): jmp 0xffffff18(%rip)

"fopen_safer" :
12790(2): push %r12
12792(1): push %rbp
12793(3): mov %rsi,%rbp
12796(1): push %rbx
12797(5): call 0xffff0569(%rip)
1279c(3): test %rax,%rax
1279f(3): mov %rax,%rbx
127a2(2): jz 0xf(%rip)
127a4(3): mov %rax,%rdi
127a7(5): call 0xffff03d9(%rip)
127ac(3): cmp $0x2,%eax
127af(2): jbe 0x11(%rip)
127b1(3): mov %rbx,%rax
127b4(1): pop %rbx
127b5(1): pop %rbp
127b6(2): pop %r12
127b8(1): ret near (%rsp)
127b9(7): nop 0x0(%rax)
127c0(2): mov %eax,%edi
127c2(5): call 0xfffffcbe(%rip)
127c7(2): test %eax,%eax
127c9(3): mov %eax,%r12d
127cc(2): js 0x3c(%rip)
127ce(3): mov %rbx,%rdi
127d1(5): call 0xfffffcbf(%rip)
127d6(2): test %eax,%eax
127d8(2): jnz 0x15(%rip)
127da(3): mov %rbp,%rsi
127dd(3): mov %r12d,%edi
127e0(5): call 0xffff0450(%rip)
127e5(3): test %rax,%rax
127e8(3): mov %rax,%rbx
127eb(2): jnz 0xffffffc6(%rip)
127ed(5): call 0xfffeff83(%rip)
127f2(2): mov (%rax),%ebp
127f4(3): mov %rax,%rbx
127f7(3): mov %r12d,%edi
127fa(5): call 0xffff0236(%rip)
127ff(2): mov %ebp,(%rbx)
12801(2): xor %ebx,%ebx
12803(2): jmp 0xffffffae(%rip)
12805(3): nop (%rax)
12808(5): call 0xfffeff68(%rip)
1280d(3): mov (%rax),%r12d
12810(3): mov %rax,%rbp
12813(3): mov %rbx,%rdi
12816(5): call 0xfffffc7a(%rip)
1281b(2): xor %ebx,%ebx
1281d(4): mov %r12d,0x0(%rbp)
12821(2): jmp 0xffffff90(%rip)

"__libc_csu_init" :
12830(2): push %r15
12832(2): push %r14
12834(3): mov %rdx,%r15
12837(2): push %r13
12839(2): push %r12
1283b(7): lea 0x206cee(%rip),%r12
12842(1): push %rbp
12843(7): lea 0x206cee(%rip),%rbp
1284a(1): push %rbx
1284b(3): mov %edi,%r13d
1284e(3): mov %rsi,%r14
12851(3): sub %r12,%rbp
12854(4): sub $0x8,%rsp
12858(4): sar $0x3,%rbp
1285c(5): call 0xfffefeb4(%rip)
12861(3): test %rbp,%rbp
12864(2): jz 0x22(%rip)
12866(2): xor %ebx,%ebx
12868(8): nop 0x0(%rax,%rax,1)
12870(3): mov %r15,%rdx
12873(3): mov %r14,%rsi
12876(3): mov %r13d,%edi
12879(4): call 0x0(%r12,%rbx,8)
1287d(4): add $0x1,%rbx
12881(3): cmp %rbx,%rbp
12884(2): jnz 0xffffffec(%rip)
12886(4): add $0x8,%rsp
1288a(1): pop %rbx
1288b(1): pop %rbp
1288c(2): pop %r12
1288e(2): pop %r13
12890(2): pop %r14
12892(2): pop %r15
12894(1): ret near (%rsp)

"atexit" :
128b0(7): mov 0x207751(%rip),%rdx
128b7(2): xor %esi,%esi
128b9(5): jmp 0xffff0497(%rip)

"_fini" :
128c0(4): sub $0x8,%rsp
128c4(4): add $0x8,%rsp
128c8(1): ret near (%rsp)

