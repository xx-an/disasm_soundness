
"__snprintf_chk@plt" :
1580(6): jmp 0x20989a(%rip)
1586(5): push $0x0

"free@plt" :
1590(6): jmp 0x209892(%rip)
1596(5): push $0x1

"abort@plt" :
15a0(6): jmp 0x20988a(%rip)
15a6(5): push $0x2

"__errno_location@plt" :
15b0(6): jmp 0x209882(%rip)
15b6(5): push $0x3

"strncmp@plt" :
15c0(6): jmp 0x20987a(%rip)
15c6(5): push $0x4

"_exit@plt" :
15d0(6): jmp 0x209872(%rip)
15d6(5): push $0x5

"strcpy@plt" :
15e0(6): jmp 0x20986a(%rip)
15e6(5): push $0x6

"__fpending@plt" :
15f0(6): jmp 0x209862(%rip)
15f6(5): push $0x7

"clearerr_unlocked@plt" :
1600(6): jmp 0x20985a(%rip)
1606(5): push $0x8

"textdomain@plt" :
1610(6): jmp 0x209852(%rip)
1616(5): push $0x9

"fclose@plt" :
1620(6): jmp 0x20984a(%rip)
1626(5): push $0xa

"bindtextdomain@plt" :
1630(6): jmp 0x209842(%rip)
1636(5): push $0xb

"dcgettext@plt" :
1640(6): jmp 0x20983a(%rip)
1646(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
1650(6): jmp 0x209832(%rip)
1656(5): push $0xd

"strlen@plt" :
1660(6): jmp 0x20982a(%rip)
1666(5): push $0xe

"__stack_chk_fail@plt" :
1670(6): jmp 0x209822(%rip)
1676(5): push $0xf

"getopt_long@plt" :
1680(6): jmp 0x20981a(%rip)
1686(5): push $0x10

"mbrtowc@plt" :
1690(6): jmp 0x209812(%rip)
1696(5): push $0x11

"strchr@plt" :
16a0(6): jmp 0x20980a(%rip)
16a6(5): push $0x12

"newlocale@plt" :
16b0(6): jmp 0x209802(%rip)
16b6(5): push $0x13

"strrchr@plt" :
16c0(6): jmp 0x2097fa(%rip)
16c6(5): push $0x14

"lseek@plt" :
16d0(6): jmp 0x2097f2(%rip)
16d6(5): push $0x15

"memset@plt" :
16e0(6): jmp 0x2097ea(%rip)
16e6(5): push $0x16

"strspn@plt" :
16f0(6): jmp 0x2097e2(%rip)
16f6(5): push $0x17

"strcspn@plt" :
1700(6): jmp 0x2097da(%rip)
1706(5): push $0x18

"memcmp@plt" :
1710(6): jmp 0x2097d2(%rip)
1716(5): push $0x19

"fputs_unlocked@plt" :
1720(6): jmp 0x2097ca(%rip)
1726(5): push $0x1a

"calloc@plt" :
1730(6): jmp 0x2097c2(%rip)
1736(5): push $0x1b

"strcmp@plt" :
1740(6): jmp 0x2097ba(%rip)
1746(5): push $0x1c

"strtol@plt" :
1750(6): jmp 0x2097b2(%rip)
1756(5): push $0x1d

"memcpy@plt" :
1760(6): jmp 0x2097aa(%rip)
1766(5): push $0x1e

"fileno@plt" :
1770(6): jmp 0x2097a2(%rip)
1776(5): push $0x1f

"uselocale@plt" :
1780(6): jmp 0x20979a(%rip)
1786(5): push $0x20

"malloc@plt" :
1790(6): jmp 0x209792(%rip)
1796(5): push $0x21

"fflush@plt" :
17a0(6): jmp 0x20978a(%rip)
17a6(5): push $0x22

"nl_langinfo@plt" :
17b0(6): jmp 0x209782(%rip)
17b6(5): push $0x23

"__freading@plt" :
17c0(6): jmp 0x20977a(%rip)
17c6(5): push $0x24

"fwrite_unlocked@plt" :
17d0(6): jmp 0x209772(%rip)
17d6(5): push $0x25

"realloc@plt" :
17e0(6): jmp 0x20976a(%rip)
17e6(5): push $0x26

"setlocale@plt" :
17f0(6): jmp 0x209762(%rip)
17f6(5): push $0x27

"__printf_chk@plt" :
1800(6): jmp 0x20975a(%rip)
1806(5): push $0x28

"mempcpy@plt" :
1810(6): jmp 0x209752(%rip)
1816(5): push $0x29

"memmove@plt" :
1820(6): jmp 0x20974a(%rip)
1826(5): push $0x2a

"strtold@plt" :
1830(6): jmp 0x209742(%rip)
1836(5): push $0x2b

"error@plt" :
1840(6): jmp 0x20973a(%rip)
1846(5): push $0x2c

"fseeko@plt" :
1850(6): jmp 0x209732(%rip)
1856(5): push $0x2d

"__cxa_atexit@plt" :
1860(6): jmp 0x20972a(%rip)
1866(5): push $0x2e

"exit@plt" :
1870(6): jmp 0x209722(%rip)
1876(5): push $0x2f

"fwrite@plt" :
1880(6): jmp 0x20971a(%rip)
1886(5): push $0x30

"__fprintf_chk@plt" :
1890(6): jmp 0x209712(%rip)
1896(5): push $0x31

"mbsinit@plt" :
18a0(6): jmp 0x20970a(%rip)
18a6(5): push $0x32

"iswprint@plt" :
18b0(6): jmp 0x209702(%rip)
18b6(5): push $0x33

"__ctype_b_loc@plt" :
18c0(6): jmp 0x2096fa(%rip)
18c6(5): push $0x34

"__sprintf_chk@plt" :
18d0(6): jmp 0x2096f2(%rip)
18d6(5): push $0x35

".plt.got" :
18e0(6): jmp 0x20970a(%rip)
18e6(2): nop 

"_init" :
1550(4): sub $0x8,%rsp
1554(7): mov 0x209a85(%rip),%rax
155b(3): test %rax,%rax
155e(2): jz 0x4(%rip)
1560(2): call %rax
1562(4): add $0x8,%rsp
1566(1): ret near (%rsp)

"main" :
18f0(2): push %r15
18f2(2): push %r14
18f4(2): push %r13
18f6(2): push %r12
18f8(3): mov %edi,%r13d
18fb(1): push %rbp
18fc(1): push %rbx
18fd(3): mov %rsi,%r12
1900(7): lea 0x2091f9(%rip),%rbp
1907(7): sub $0xd8,%rsp
190e(3): mov (%rsi),%rdi
1911(9): mov $0x28,%rax
191a(8): mov %rax,0xc8(%rsp)
1922(2): xor %eax,%eax
1924(5): call 0x1a3c(%rip)
1929(7): lea 0x7471(%rip),%rsi
1930(5): mov $0x6,%edi
1935(5): call 0xfffffebb(%rip)
193a(7): lea 0x6734(%rip),%rsi
1941(7): lea 0x66d5(%rip),%rdi
1948(3): test %rax,%rax
194b(7): setnz 0x2097a7(%rip)
1952(2): xor %ebx,%ebx
1954(5): call 0xfffffcdc(%rip)
1959(7): lea 0x66bd(%rip),%rdi
1960(5): call 0xfffffcb0(%rip)
1965(7): lea 0x1944(%rip),%rdi
196c(5): call 0x65f4(%rip)
1971(7): lea 0x7428(%rip),%rax
1978(7): mov $0x0,0x209779(%rip)
197f(7): mov %rax,0x20976a(%rip)
1986(7): mov 0x209703(%rip),%r15d
198d(3): cmp %r13d,%r15d
1990(2): jnl 0x73(%rip)
1992(3): movsxd %r15d,%rax
1995(4): mov 0x0(%r12,%rax,8),%rax
1999(3): cmp $0x2d,(%rax)
199c(2): jnz 0x12(%rip)
199e(4): movsx 0x1(%rax),%eax
19a2(2): cmp $0x2e,%al
19a4(2): jz 0x5f(%rip)
19a6(3): sub $0x30,%eax
19a9(3): cmp $0x9,%eax
19ac(2): jbe 0x57(%rip)
19ae(7): lea 0x66d8(%rip),%rdx
19b5(3): xor %r8d,%r8d
19b8(3): mov %rbp,%rcx
19bb(3): mov %r12,%rsi
19be(3): mov %r13d,%edi
19c1(5): call 0xfffffcbf(%rip)
19c6(3): cmp $0xff,%eax
19c9(6): jz 0x630(%rip)
19cf(3): cmp $0x66,%eax
19d2(6): jz 0xde(%rip)
19d8(6): jle 0x90(%rip)
19de(3): cmp $0x73,%eax
19e1(6): jz 0xdf(%rip)
19e7(3): cmp $0x77,%eax
19ea(6): jnz 0x989(%rip)
19f0(7): mov 0x209699(%rip),%r15d
19f7(7): mov $0x1,0x2096fa(%rip)
19fe(3): cmp %r13d,%r15d
1a01(2): jl 0xffffff91(%rip)
1a03(3): mov %r13d,%eax
1a06(3): sub %r15d,%eax
1a09(3): mov %eax,(%rsp)
1a0c(6): jz 0xa22(%rip)
1a12(4): cmp $0x3,(%rsp)
1a16(6): jnbe 0x929(%rip)
1a1c(3): test %rbx,%rbx
1a1f(6): jz 0xb4(%rip)
1a25(2): xor %ebp,%ebp
1a27(2): xor %eax,%eax
1a29(2): jmp 0x1b(%rip)
1a2b(5): nop 0x0(%rax,%rax,1)
1a30(2): test %dl,%dl
1a32(6): jz 0x864(%rip)
1a38(5): mov $0x1,%edx
1a3d(3): add %rdx,%rax
1a40(4): add $0x1,%rbp
1a44(4): movzx 0x0(%rbx,%rax,1),%edx
1a48(3): cmp $0x25,%dl
1a4b(2): jnz 0xffffffe5(%rip)
1a4d(4): lea 0x1(%rax),%r14
1a51(4): lea 0x0(%rbx,%r14,1),%rdi
1a55(3): cmp $0x25,(%rdi)
1a58(6): jnz 0x3d8(%rip)
1a5e(5): mov $0x2,%edx
1a63(2): jmp 0xffffffda(%rip)
1a65(3): nop (%rax)
1a68(5): cmp $0xffffff7d,%eax
1a6d(6): jnz 0x85b(%rip)
1a73(7): mov 0x20960e(%rip),%rdi
1a7a(7): mov 0x20958f(%rip),%rcx
1a81(7): lea 0x660c(%rip),%r8
1a88(7): lea 0x658a(%rip),%rdx
1a8f(7): lea 0x6509(%rip),%rsi
1a96(3): xor %r9d,%r9d
1a99(2): xor %eax,%eax
1a9b(5): call 0x3ab5(%rip)
1aa0(2): xor %edi,%edi
1aa2(5): call 0xfffffdce(%rip)
1aa7(9): nop 0x0(%rax,%rax,1)
1ab0(7): mov 0x2095e1(%rip),%rbx
1ab7(5): jmp 0xfffffecf(%rip)
1abc(4): nop 0x0(%rax)
1ac0(7): mov 0x2095d1(%rip),%rax
1ac7(7): mov %rax,0x209622(%rip)
1ace(5): jmp 0xfffffeb8(%rip)
1ad3(3): xor %r14d,%r14d
1ad6(2): xor %ebp,%ebp
1ad8(3): movsxd %r15d,%rax
1adb(8): lea 0x0(,%rax,8),%rcx
1ae3(4): mov 0x0(%r12,%rax,8),%rax
1ae7(5): mov %rcx,0x10(%rsp)
1aec(3): mov %rax,%rdi
1aef(5): mov %rax,0x20(%rsp)
1af4(5): call 0xb5c(%rip)
1af9(2): test %al,%al
1afb(2): jz 0x2b(%rip)
1afd(4): cmp $0x1,(%rsp)
1b01(6): jz 0x53a(%rip)
1b07(5): mov 0x10(%rsp),%rcx
1b0c(5): mov 0x8(%r12,%rcx,1),%rsi
1b11(3): mov %rsi,%rdi
1b14(5): mov %rsi,0x30(%rsp)
1b19(5): call 0xb37(%rip)
1b1e(2): test %al,%al
1b20(6): jnz 0x4e5(%rip)
1b26(3): movsxd %r15d,%rdx
1b29(4): lea 0x1(%r15),%eax
1b2d(8): lea 0xa0(%rsp),%rdi
1b35(4): mov 0x0(%r12,%rdx,8),%rsi
1b39(6): mov %eax,0x209551(%rip)
1b3f(4): mov %rdi,(%rsp)
1b43(5): call 0x133d(%rip)
1b48(7): fld 0xa0(%rsp),%st0
1b4f(7): movsxd 0x20953a(%rip),%rdx
1b56(8): mov 0xb0(%rsp),%r10
1b5e(7): mov 0xb8(%rsp),%eax
1b65(3): cmp %r13d,%edx
1b68(4): fstp %st0,0x40(%rsp)
1b6c(6): jl 0x3e4(%rip)
1b72(2): test %eax,%eax
1b74(6): jz 0x659(%rip)
1b7a(2): mov %eax,%ecx
1b7c(3): mov %r10,%r12
1b7f(3): xor %r9d,%r9d
1b82(2): xor %eax,%eax
1b84(6): mov $0x1,%r10d
1b8a(4): fld 0x40(%rsp),%st0
1b8e(4): pxor %xmm0,%xmm0
1b92(6): movss %xmm0,0x64(%rsp)
1b98(4): fstp %st0,0x30(%rsp)
1b9c(2): fld1 %st0
1b9e(2): fld %st0,%st0
1ba0(4): fstp %st0,0x50(%rsp)
1ba4(4): fstp %st0,0x40(%rsp)
1ba8(2): jmp 0x8(%rip)
1baa(2): fstp %st0,%st0
1bac(2): jmp 0x4(%rip)
1bae(2): fstp %st0,%st0
1bb0(3): test %rbx,%rbx
1bb3(6): jz 0x569(%rip)
1bb9(2): jmp 0x4(%rip)
1bbb(2): fstp %st0,%st0
1bbd(4): fld 0x50(%rsp),%st0
1bc1(2): fld1 %st0
1bc3(2): fucomip %st1,%st0
1bc5(2): fstp %st0,%st0
1bc7(6): jnbe 0x374(%rip)
1bcd(4): fld 0x30(%rsp),%st0
1bd1(4): fld 0x40(%rsp),%st0
1bd5(2): fucomip %st1,%st0
1bd7(2): fstp %st0,%st0
1bd9(4): setnbe %r13b
1bdd(3): test %r13b,%r13b
1be0(6): jnz 0x225(%rip)
1be6(4): fld 0x40(%rsp),%st0
1bea(8): lea 0x80(%rsp),%rax
1bf2(5): mov %rax,0x68(%rsp)
1bf7(4): fstp %st0,0x20(%rsp)
1bfb(2): fld1 %st0
1bfd(4): fstp %st0,0x10(%rsp)
1c01(5): jmp 0x152(%rip)
1c06(a): nop 0x0(%rax,%rax,1)
1c10(4): fld 0x30(%rsp),%st0
1c14(3): fld (%rsp),%st0
1c17(2): fucomip %st1,%st0
1c19(2): fstp %st0,%st0
1c1b(4): setnbe %r13b
1c1f(3): test %r13b,%r13b
1c22(6): jz 0x102(%rip)
1c28(7): cmp $0x0,0x2094ca(%rip)
1c2f(6): jnz 0x197(%rip)
1c35(4): push 0x8(%rsp)
1c39(4): push 0x8(%rsp)
1c3d(3): mov %rbx,%rsi
1c40(5): mov 0x78(%rsp),%rdi
1c45(2): xor %eax,%eax
1c47(5): call 0x3db9(%rip)
1c4c(7): cmp $0x0,0x2094a6(%rip)
1c53(3): movsxd %eax,%r12
1c56(1): pop %rsi
1c57(1): pop %rdi
1c58(6): jnz 0x158(%rip)
1c5e(3): test %r12d,%r12d
1c61(6): js 0x6d9(%rip)
1c67(8): mov 0x80(%rsp),%rax
1c6f(3): sub %r14,%r12
1c72(7): lea 0x1567(%rip),%rcx
1c79(8): lea 0x90(%rsp),%rdx
1c81(2): xor %esi,%esi
1c83(5): mov $0x0,0x0(%rax,%r12,1)
1c88(8): mov 0x80(%rsp),%rdi
1c90(3): add %rbp,%rdi
1c93(5): call 0x3cad(%rip)
1c98(2): test %al,%al
1c9a(6): jz 0x142(%rip)
1ca0(4): fld 0x30(%rsp),%st0
1ca4(7): fld 0x90(%rsp),%st0
1cab(2): fucomip %st1,%st0
1cad(2): fstp %st0,%st0
1caf(6): jp 0x12d(%rip)
1cb5(6): jnz 0x127(%rip)
1cbb(c): mov $0x0,0x88(%rsp)
1cc7(8): lea 0x88(%rsp),%rdi
1ccf(4): push 0x28(%rsp)
1cd3(4): push 0x28(%rsp)
1cd7(2): xor %eax,%eax
1cd9(3): mov %rbx,%rsi
1cdc(5): call 0x3d24(%rip)
1ce1(2): test %eax,%eax
1ce3(1): pop %rdx
1ce4(1): pop %rcx
1ce5(6): js 0x655(%rip)
1ceb(8): mov 0x88(%rsp),%r12
1cf3(8): mov 0x80(%rsp),%rsi
1cfb(3): mov %r12,%rdi
1cfe(5): call 0xfffffa42(%rip)
1d03(3): mov %r12,%rdi
1d06(3): mov %eax,%r15d
1d09(5): call 0xfffff887(%rip)
1d0e(8): mov 0x80(%rsp),%rdi
1d16(5): call 0xfffff87a(%rip)
1d1b(3): test %r15d,%r15d
1d1e(6): jz 0xcb(%rip)
1d24(7): mov 0x20935d(%rip),%rsi
1d2b(7): mov 0x2093be(%rip),%rdi
1d32(5): call 0xfffff9ee(%rip)
1d37(3): cmp $0xff,%eax
1d3a(6): jz 0x557(%rip)
1d40(4): fld 0x10(%rsp),%st0
1d44(2): fld1 %st0
1d46(2): faddp %st0,%st1
1d48(4): fstp %st0,0x10(%rsp)
1d4c(3): fld (%rsp),%st0
1d4f(4): fstp %st0,0x20(%rsp)
1d53(4): push 0x28(%rsp)
1d57(4): push 0x28(%rsp)
1d5b(2): xor %eax,%eax
1d5d(3): mov %rbx,%rsi
1d60(5): mov $0x1,%edi
1d65(5): call 0xfffffa9b(%rip)
1d6a(2): test %eax,%eax
1d6c(2): pop %r8
1d6e(2): pop %r9
1d70(6): js 0x521(%rip)
1d76(3): test %r13b,%r13b
1d79(2): jnz 0x70(%rip)
1d7b(4): fld 0x10(%rsp),%st0
1d7f(4): fld 0x50(%rsp),%st0
1d83(2): fmul %st0,%st1
1d85(4): fld 0x40(%rsp),%st0
1d89(2): faddp %st0,%st2
1d8b(2): fxch %st1,%st0
1d8d(3): fstp %st0,(%rsp)
1d90(2): fld1 %st0
1d92(2): fucomip %st1,%st0
1d94(2): fstp %st0,%st0
1d96(6): jbe 0xfffffe7a(%rip)
1d9c(3): fld (%rsp),%st0
1d9f(4): fld 0x30(%rsp),%st0
1da3(2): fucomip %st1,%st0
1da5(2): fstp %st0,%st0
1da7(4): setnbe %r13b
1dab(5): jmp 0xfffffe74(%rip)
1db0(7): lea 0x6fea(%rip),%rsi
1db7(5): mov $0x1,%edi
1dbc(5): call 0xfffffa34(%rip)
1dc1(5): jmp 0xfffffe9d(%rip)
1dc6(7): lea 0x6353(%rip),%rsi
1dcd(5): mov $0x1,%edi
1dd2(5): call 0xfffffa1e(%rip)
1dd7(5): jmp 0xfffffe5e(%rip)
1ddc(8): mov 0x80(%rsp),%rdi
1de4(5): call 0xfffff7ac(%rip)
1de9(7): mov 0x209298(%rip),%rsi
1df0(7): lea 0x6a1a(%rip),%rdi
1df7(5): call 0xfffff929(%rip)
1dfc(3): add $0x1,%eax
1dff(6): jz 0x492(%rip)
1e05(2): xor %eax,%eax
1e07(8): mov 0xc8(%rsp),%rcx
1e0f(9): xor $0x28,%rcx
1e18(6): jnz 0x565(%rip)
1e1e(7): add $0xd8,%rsp
1e25(1): pop %rbx
1e26(1): pop %rbp
1e27(2): pop %r12
1e29(2): pop %r13
1e2b(2): pop %r14
1e2d(2): pop %r15
1e2f(1): ret near (%rsp)
1e30(7): lea 0x62ab(%rip),%rsi
1e37(5): call 0xfffff8b9(%rip)
1e3c(3): add %rax,%r14
1e3f(7): lea 0x613e(%rip),%rsi
1e46(4): lea 0x0(%rbx,%r14,1),%rdi
1e4a(5): call 0xfffff8a6(%rip)
1e4f(4): lea 0x0(%r14,%rax,1),%r15
1e53(5): cmp $0x2e,0x0(%rbx,%r15,1)
1e58(2): jnz 0x19(%rip)
1e5a(4): add $0x1,%r15
1e5e(7): lea 0x611f(%rip),%rsi
1e65(4): lea 0x0(%rbx,%r15,1),%rdi
1e69(5): call 0xfffff887(%rip)
1e6e(3): add %rax,%r15
1e71(2): xor %edi,%edi
1e73(5): cmp $0x4c,0x0(%rbx,%r15,1)
1e78(4): setz %dil
1e7c(4): lea 0x0(%r15,%rdi,1),%r14
1e80(4): lea 0x0(%rbx,%r14,1),%rax
1e84(5): mov %rax,0x20(%rsp)
1e89(3): movsx (%rax),%eax
1e8c(2): test %al,%al
1e8e(6): jz 0x678(%rip)
1e94(7): lea 0x6263(%rip),%rdi
1e9b(2): mov %eax,%esi
1e9d(4): mov %eax,0x10(%rsp)
1ea1(5): call 0xfffff7ff(%rip)
1ea6(4): lea 0x1(%r14),%rdi
1eaa(3): xor %r14d,%r14d
1ead(3): test %rax,%rax
1eb0(2): jnz 0x20(%rip)
1eb2(5): jmp 0x61d(%rip)
1eb7(9): nop 0x0(%rax,%rax,1)
1ec0(2): test %al,%al
1ec2(2): jz 0x28(%rip)
1ec4(5): mov $0x1,%eax
1ec9(3): add %rax,%rdi
1ecc(4): add $0x1,%r14
1ed0(4): movzx 0x0(%rbx,%rdi,1),%eax
1ed4(2): cmp $0x25,%al
1ed6(2): jnz 0xffffffea(%rip)
1ed8(5): cmp $0x25,0x1(%rbx,%rdi,1)
1edd(6): jnz 0x5c0(%rip)
1ee3(5): mov $0x2,%eax
1ee8(2): jmp 0xffffffe1(%rip)
1eea(4): add $0x2,%rdi
1eee(5): call 0x37c2(%rip)
1ef3(3): mov %r15,%rdx
1ef6(3): mov %rbx,%rsi
1ef9(3): mov %rax,%rdi
1efc(5): call 0xfffff864(%rip)
1f01(5): mov 0x20(%rsp),%rsi
1f06(5): lea 0x1(%rax,%r15,1),%rdi
1f0b(5): mov $0x4c,0x0(%rax,%r15,1)
1f10(5): mov %rax,0x10(%rsp)
1f15(5): call 0xfffff6cb(%rip)
1f1a(7): cmp $0x0,0x2091d7(%rip)
1f21(6): jnz 0x551(%rip)
1f27(5): mov 0x10(%rsp),%r8
1f2c(7): mov 0x20915d(%rip),%r15d
1f33(3): mov %r8,%rbx
1f36(5): jmp 0xfffffba2(%rip)
1f3b(4): fld 0x40(%rsp),%st0
1f3f(4): fld 0x30(%rsp),%st0
1f43(2): fucomip %st1,%st0
1f45(2): fstp %st0,%st0
1f47(4): setnbe %r13b
1f4b(5): jmp 0xfffffc92(%rip)
1f50(4): mov 0x0(%r12,%rdx,8),%rsi
1f54(4): mov (%rsp),%rdi
1f58(3): lea 0x1(%rdx),%ecx
1f5b(4): mov %eax,0x20(%rsp)
1f5f(5): mov %r10,0x10(%rsp)
1f64(6): mov %ecx,0x209126(%rip)
1f6a(5): call 0xf16(%rip)
1f6f(7): fld 0xa0(%rsp),%st0
1f76(6): mov 0x209114(%rip),%ecx
1f7c(8): mov 0xb8(%rsp),%r9d
1f84(5): mov 0x10(%rsp),%r10
1f89(4): mov 0x20(%rsp),%eax
1f8d(3): cmp %r13d,%ecx
1f90(2): fld %st0,%st0
1f92(4): fstp %st0,0x50(%rsp)
1f96(6): jl 0x10c(%rip)
1f9c(3): mov %r9d,%ecx
1f9f(3): xor %r9d,%r9d
1fa2(8): mov 0xb0(%rsp),%r12
1faa(4): fstp %st0,0x30(%rsp)
1fae(4): pxor %xmm1,%xmm1
1fb2(2): fld1 %st0
1fb4(6): movss %xmm1,0x64(%rsp)
1fba(4): fstp %st0,0x50(%rsp)
1fbe(5): mov $0x0,%edi
1fc3(2): fld1 %st0
1fc5(4): fld 0x40(%rsp),%st0
1fc9(2): fmul %st1
1fcb(2): fucomip %st1,%st0
1fcd(4): setnp %sil
1fd1(3): cmovne %edi,%esi
1fd4(3): test %sil,%sil
1fd7(6): jz 0xfffffbd3(%rip)
1fdd(2): test %eax,%eax
1fdf(6): jnz 0xfffffbcf(%rip)
1fe5(2): mov %ecx,%eax
1fe7(3): or %r9d,%eax
1fea(6): jz 0x2f0(%rip)
1ff0(2): fstp %st0,%st0
1ff2(2): xor %eax,%eax
1ff4(5): jmp 0xfffffbbc(%rip)
1ff9(7): mov 0x209090(%rip),%r15d
2000(5): jmp 0xfffffa03(%rip)
2005(4): cmp $0x3,(%rsp)
2009(2): jnz 0x32(%rip)
200b(5): mov 0x30(%rsp),%rsi
2010(7): lea 0x67ff(%rip),%rdi
2017(5): call 0xfffff729(%rip)
201c(2): test %eax,%eax
201e(6): jnz 0xfffffb08(%rip)
2024(5): mov 0x10(%rsp),%rcx
2029(5): mov 0x10(%r12,%rcx,1),%rdi
202e(5): call 0x622(%rip)
2033(2): test %al,%al
2035(6): jz 0xfffffaf1(%rip)
203b(7): cmp $0x1,0x2090b6(%rip)
2042(6): jz 0xfffffae4(%rip)
2048(3): test %rbx,%rbx
204b(6): jnz 0xfffffadb(%rip)
2051(7): mov 0x209098(%rip),%rdi
2058(4): or $0xffffffff,%rcx
205c(2): xor %eax,%eax
205e(2): REPNZ scasb rdi(%es,10),%al
2060(4): cmp $0xfffffffd,%rcx
2064(6): jnz 0xfffffac2(%rip)
206a(3): mov (%rsp),%ecx
206d(7): lea 0x67a2(%rip),%rax
2074(3): cmp $0x1,%ecx
2077(6): cmovne 0x20(%rsp),%rax
207d(3): mov %rax,%rdi
2080(5): lea 0xffffffff(%rcx,%r15,1),%eax
2085(4): mov 0x0(%r12,%rax,8),%rsi
2089(5): call 0x647(%rip)
208e(2): test %al,%al
2090(6): jnz 0xfffffd75(%rip)
2096(7): mov 0x208ff3(%rip),%r15d
209d(5): jmp 0xfffffa89(%rip)
20a2(2): fstp %st0,%st0
20a4(2): fld1 %st0
20a6(4): pxor %xmm2,%xmm2
20aa(3): movsxd %ecx,%rsi
20ad(4): fld 0x50(%rsp),%st0
20b1(8): lea 0x0(,%rsi,8),%rdi
20b9(6): movss %xmm2,0x64(%rsp)
20bf(2): fucomip %st1,%st0
20c1(2): fstp %st0,%st0
20c3(2): jp 0x8(%rip)
20c5(6): jz 0x38f(%rip)
20cb(4): mov 0x0(%r12,%rsi,8),%rsi
20cf(4): mov (%rsp),%rdi
20d3(3): add $0x1,%ecx
20d6(4): mov %eax,0x68(%rsp)
20da(5): mov %r10,0x20(%rsp)
20df(5): mov %r9d,0x10(%rsp)
20e4(6): mov %ecx,0x208fa6(%rip)
20ea(5): call 0xd96(%rip)
20ef(7): fld 0xa0(%rsp),%st0
20f6(8): mov 0xb0(%rsp),%r12
20fe(7): mov 0xb8(%rsp),%ecx
2105(4): mov 0x68(%rsp),%eax
2109(5): mov 0x20(%rsp),%r10
210e(5): mov 0x10(%rsp),%r9d
2113(4): fstp %st0,0x30(%rsp)
2117(5): jmp 0xfffffea7(%rip)
211c(3): cmp %r9d,%eax
211f(4): cmovnl %eax,%r9d
2123(6): cmp $0x7fffffff,%ecx
2129(6): jz 0x98(%rip)
212f(7): cmp $0x7fffffff,%r9d
2136(6): jz 0x8b(%rip)
213c(7): cmp $0x0,0x208fb5(%rip)
2143(6): jz 0xeb(%rip)
2149(3): mov %r9d,%edx
214c(2): sub %eax,%edx
214e(3): movsxd %edx,%rdx
2151(3): add %rdx,%r10
2154(3): mov %r9d,%edx
2157(2): sub %ecx,%edx
2159(3): movsxd %edx,%rdx
215c(3): add %rdx,%r12
215f(2): test %ecx,%ecx
2161(6): jz 0xfb(%rip)
2167(3): test %r9d,%r9d
216a(6): jz 0x11e(%rip)
2170(2): test %eax,%eax
2172(2): jnz 0x6(%rip)
2174(4): add $0x1,%r10
2178(3): cmp %r12,%r10
217b(7): lea 0x5eef(%rip),%rbx
2182(4): cmovnae %r12,%r10
2186(7): cmp $0x7fffffff,%r10
218d(6): jnbe 0xfffffa30(%rip)
2193(7): lea 0x5f73(%rip),%rcx
219a(7): lea 0x208f2f(%rip),%rdi
21a1(3): mov %r10d,%r8d
21a4(5): mov $0x1c,%edx
21a9(5): mov $0x1,%esi
21ae(2): xor %eax,%eax
21b0(5): call 0xfffff720(%rip)
21b5(7): lea 0x208f14(%rip),%rbx
21bc(5): jmp 0xfffffa01(%rip)
21c1(7): lea 0x5ea9(%rip),%rbx
21c8(5): jmp 0xfffff9f5(%rip)
21cd(4): fld 0x40(%rsp),%st0
21d1(3): mov %r10,%r12
21d4(6): mov $0x1,%r10d
21da(4): pxor %xmm3,%xmm3
21de(6): movss %xmm3,0x64(%rsp)
21e4(4): fstp %st0,0x30(%rsp)
21e8(2): fld1 %st0
21ea(2): fld %st0,%st0
21ec(4): fstp %st0,0x50(%rsp)
21f0(4): fstp %st0,0x40(%rsp)
21f4(2): fld1 %st0
21f6(4): fld 0x30(%rsp),%st0
21fa(2): fucomip %st1,%st0
21fc(2): jb 0x7a(%rip)
21fe(7): cmp $0x0,0x208ef3(%rip)
2205(2): jnz 0x75(%rip)
2207(3): test %rbx,%rbx
220a(6): jnz 0xfffff9b1(%rip)
2210(7): mov 0x208ed9(%rip),%rdi
2217(4): or $0xffffffff,%rcx
221b(2): xor %eax,%eax
221d(3): xor %r9d,%r9d
2220(2): REPNZ scasb rdi(%es,10),%al
2222(4): cmp $0xfffffffd,%rcx
2226(6): jz 0x15c(%rip)
222c(2): fstp %st0,%st0
222e(7): lea 0x5ee3(%rip),%rcx
2235(7): lea 0x208e94(%rip),%rdi
223c(3): mov %r9d,%r8d
223f(5): mov $0x1c,%edx
2244(5): mov $0x1,%esi
2249(2): xor %eax,%eax
224b(5): call 0xfffff685(%rip)
2250(7): lea 0x208e79(%rip),%rbx
2257(5): jmp 0xfffff966(%rip)
225c(3): test %r9d,%r9d
225f(6): jz 0xffffff19(%rip)
2265(4): add $0x1,%r12
2269(2): test %eax,%eax
226b(6): jz 0xffffff09(%rip)
2271(5): jmp 0xffffff07(%rip)
2276(2): fstp %st0,%st0
2278(2): jmp 0x4(%rip)
227a(2): fstp %st0,%st0
227c(3): xor %r9d,%r9d
227f(2): xor %eax,%eax
2281(2): xor %ecx,%ecx
2283(5): jmp 0xfffff92d(%rip)
2288(4): sub $0x1,%r12
228c(5): jmp 0xfffffeec(%rip)
2291(5): call 0x3ff(%rip)
2296(3): mov %rbx,%rdi
2299(5): call 0x2dd7(%rip)
229e(7): lea 0x5e1f(%rip),%rsi
22a5(3): mov %rax,%rbx
22a8(5): mov $0x5,%edx
22ad(2): xor %edi,%edi
22af(5): call 0xfffff391(%rip)
22b4(3): mov %rbx,%rcx
22b7(3): mov %rax,%rdx
22ba(2): xor %esi,%esi
22bc(5): mov $0x1,%edi
22c1(2): xor %eax,%eax
22c3(5): call 0xfffff57d(%rip)
22c8(5): cmp $0xffffff7e,%eax
22cd(6): jnz 0xa6(%rip)
22d3(2): xor %edi,%edi
22d5(5): call 0x7cb(%rip)
22da(2): fld1 %st0
22dc(4): fld 0x50(%rsp),%st0
22e0(2): fucomip %st1,%st0
22e2(2): fstp %st0,%st0
22e4(3): setnp %dl
22e7(3): cmove %edx,%edi
22ea(3): test %dil,%dil
22ed(2): jz 0x12(%rip)
22ef(4): fld 0x40(%rsp),%st0
22f3(2): fucomip %st1,%st0
22f5(2): fstp %st0,%st0
22f7(6): jnb 0xfffffefd(%rip)
22fd(2): jmp 0x4(%rip)
22ff(2): fstp %st0,%st0
2301(3): xor %r9d,%r9d
2304(2): xor %ecx,%ecx
2306(5): jmp 0xfffff8aa(%rip)
230b(5): lea 0x78(%rsp),%rdi
2310(7): lea 0x5df0(%rip),%rsi
2317(4): push 0x38(%rsp)
231b(4): push 0x38(%rsp)
231f(2): xor %eax,%eax
2321(5): call 0x36df(%rip)
2326(2): pop %r10
2328(2): test %eax,%eax
232a(2): pop %r11
232c(4): mov (%rsp),%r10
2330(6): jns 0xad(%rip)
2336(2): jmp 0x4(%rip)
2338(2): fstp %st0,%st0
233a(5): call 0x35c6(%rip)
233f(3): movsxd %r15d,%rdx
2342(5): mov 0x18(%r12,%rdx,8),%rdi
2347(5): call 0x2d29(%rip)
234c(7): lea 0x5d60(%rip),%rsi
2353(3): mov %rax,%rbx
2356(5): mov $0x5,%edx
235b(2): xor %edi,%edi
235d(5): call 0xfffff2e3(%rip)
2362(3): mov %rbx,%rcx
2365(3): mov %rax,%rdx
2368(2): xor %esi,%esi
236a(2): xor %edi,%edi
236c(2): xor %eax,%eax
236e(5): call 0xfffff4d2(%rip)
2373(5): mov $0x1,%edi
2378(5): call 0x728(%rip)
237d(5): call 0xfffff2f3(%rip)
2382(4): fstp %st0,0x10(%rsp)
2386(4): mov %r10,(%rsp)
238a(5): lea 0x70(%rsp),%rdi
238f(7): lea 0x5d71(%rip),%rsi
2396(4): push 0x48(%rsp)
239a(4): push 0x48(%rsp)
239e(5): call 0x3662(%rip)
23a3(1): pop %rbx
23a4(2): pop %r13
23a6(2): test %eax,%eax
23a8(4): mov (%rsp),%r10
23ac(4): fld 0x10(%rsp),%st0
23b0(2): js 0xffffff88(%rip)
23b2(4): mov %r10,(%rsp)
23b6(4): fld 0x30(%rsp),%st0
23ba(2): fmul %st1
23bc(2): fucomip %st1,%st0
23be(2): fstp %st0,%st0
23c0(2): jp 0x8(%rip)
23c2(6): jz 0xffffff49(%rip)
23c8(7): lea 0x5bcc(%rip),%rdi
23cf(5): call 0x3511(%rip)
23d4(4): mov (%rsp),%r10
23d8(5): mov %rax,0x78(%rsp)
23dd(5): mov 0x70(%rsp),%rdi
23e2(3): cmp $0x2d,(%rdi)
23e5(2): jz 0x26(%rip)
23e7(5): mov 0x78(%rsp),%rsi
23ec(3): cmp $0x2d,(%rsi)
23ef(2): jz 0x1c(%rip)
23f1(4): mov %r10,(%rsp)
23f5(5): call 0x2db(%rip)
23fa(2): test %al,%al
23fc(6): jnz 0xfffffa09(%rip)
2402(5): mov 0x70(%rsp),%rdi
2407(4): mov (%rsp),%r10
240b(4): mov %r10,(%rsp)
240f(5): call 0xfffff181(%rip)
2414(5): mov 0x78(%rsp),%rdi
2419(5): call 0xfffff177(%rip)
241e(2): xor %eax,%eax
2420(2): xor %ecx,%ecx
2422(3): xor %r9d,%r9d
2425(4): mov (%rsp),%r10
2429(5): jmp 0xfffffd13(%rip)
242e(7): lea 0x5c6e(%rip),%rsi
2435(2): xor %edi,%edi
2437(5): mov $0x5,%edx
243c(5): call 0xfffff204(%rip)
2441(2): xor %esi,%esi
2443(3): mov %rax,%rdx
2446(2): xor %edi,%edi
2448(2): xor %eax,%eax
244a(5): call 0xfffff3f6(%rip)
244f(5): jmp 0xffffff24(%rip)
2454(5): mov 0xfffffff8(%r12,%rdi,1),%rdi
2459(5): call 0x2c17(%rip)
245e(5): mov $0x5,%edx
2463(3): mov %rax,%rbx
2466(7): lea 0x6383(%rip),%rsi
246d(5): jmp 0xfffffeee(%rip)
2472(7): lea 0x632f(%rip),%rsi
2479(5): mov $0x5,%edx
247e(2): xor %edi,%edi
2480(5): call 0xfffff1c0(%rip)
2485(2): xor %edi,%edi
2487(3): mov %rax,%rdx
248a(2): xor %esi,%esi
248c(2): xor %eax,%eax
248e(5): call 0xfffff3b2(%rip)
2493(5): mov $0x1,%edi
2498(5): call 0x608(%rip)
249d(3): mov %rbx,%rdi
24a0(5): call 0x2bd0(%rip)
24a5(7): lea 0x62d4(%rip),%rsi
24ac(3): mov %rax,%rbx
24af(5): mov $0x5,%edx
24b4(2): xor %edi,%edi
24b6(5): call 0xfffff18a(%rip)
24bb(3): mov %rbx,%rcx
24be(3): mov %rax,%rdx
24c1(2): xor %esi,%esi
24c3(5): mov $0x1,%edi
24c8(2): xor %eax,%eax
24ca(5): call 0xfffff376(%rip)
24cf(3): mov %rbx,%rdi
24d2(5): call 0x2b9e(%rip)
24d7(7): lea 0x627a(%rip),%rsi
24de(5): mov $0x5,%edx
24e3(2): xor %edi,%edi
24e5(3): mov %rax,%rbx
24e8(5): call 0xfffff158(%rip)
24ed(5): mov 0x10(%rsp),%r8d
24f2(3): mov %rax,%rdx
24f5(3): mov %rbx,%rcx
24f8(2): xor %esi,%esi
24fa(5): mov $0x1,%edi
24ff(2): xor %eax,%eax
2501(5): call 0xfffff33f(%rip)
2506(3): mov %rbx,%rdi
2509(5): call 0x2b67(%rip)
250e(7): lea 0x5bd4(%rip),%rsi
2515(3): mov %rax,%rbx
2518(5): mov $0x5,%edx
251d(2): xor %edi,%edi
251f(5): call 0xfffff121(%rip)
2524(3): mov %rbx,%rcx
2527(3): mov %rax,%rdx
252a(2): xor %esi,%esi
252c(5): mov $0x1,%edi
2531(2): xor %eax,%eax
2533(5): call 0xfffff30d(%rip)
2538(8): nop 0x0(%rax,%rax,1)
2540(2): xor %ebp,%ebp
2542(3): mov %rdx,%r9
2545(1): pop %rsi
2546(3): mov %rsp,%rdx
2549(4): and $0xfffffff0,%rsp
254d(1): push %rax
254e(1): push %rsp
254f(7): lea 0x59fa(%rip),%r8
2556(7): lea 0x5983(%rip),%rcx
255d(7): lea 0xfffff38c(%rip),%rdi
2564(6): call 0x208a6e(%rip)
256a(1): hlt 

"_start" :
2540(2): xor %ebp,%ebp
2542(3): mov %rdx,%r9
2545(1): pop %rsi
2546(3): mov %rsp,%rdx
2549(4): and $0xfffffff0,%rsp
254d(1): push %rax
254e(1): push %rsp
254f(7): lea 0x59fa(%rip),%r8
2556(7): lea 0x5983(%rip),%rcx
255d(7): lea 0xfffff38c(%rip),%rdi
2564(6): call 0x208a6e(%rip)
256a(1): hlt 

"deregister_tm_clones" :
2570(7): lea 0x208b09(%rip),%rdi
2577(1): push %rbp
2578(7): lea 0x208b01(%rip),%rax
257f(3): cmp %rdi,%rax
2582(3): mov %rsp,%rbp
2585(2): jz 0x1b(%rip)
2587(7): mov 0x208a42(%rip),%rax
258e(3): test %rax,%rax
2591(2): jz 0xf(%rip)
2593(1): pop %rbp
2594(2): jmp %rax
2596(a): nop 0x0(%rax,%rax,1)
25a0(1): pop %rbp
25a1(1): ret near (%rsp)

"register_tm_clones" :
25b0(7): lea 0x208ac9(%rip),%rdi
25b7(7): lea 0x208ac2(%rip),%rsi
25be(1): push %rbp
25bf(3): sub %rdi,%rsi
25c2(3): mov %rsp,%rbp
25c5(4): sar $0x3,%rsi
25c9(3): mov %rsi,%rax
25cc(4): shr $0x3f,%rax
25d0(3): add %rax,%rsi
25d3(3): sar $0x1,%rsi
25d6(2): jz 0x1a(%rip)
25d8(7): mov 0x208a09(%rip),%rax
25df(3): test %rax,%rax
25e2(2): jz 0xe(%rip)
25e4(1): pop %rbp
25e5(2): jmp %rax
25e7(9): nop 0x0(%rax,%rax,1)
25f0(1): pop %rbp
25f1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2600(7): cmp $0x0,0x208ac1(%rip)
2607(2): jnz 0x31(%rip)
2609(8): cmp $0x0,0x2089df(%rip)
2611(1): push %rbp
2612(3): mov %rsp,%rbp
2615(2): jz 0xe(%rip)
2617(7): mov 0x2089ea(%rip),%rdi
261e(5): call 0xfffff2c2(%rip)
2623(5): call 0xffffff4d(%rip)
2628(7): mov $0x1,0x208a99(%rip)
262f(1): pop %rbp
2630(1): ret near (%rsp)
2631(7): nop 0x0(%rax)
2638(2): REP ret near (%rsp)

"frame_dummy" :
2640(1): push %rbp
2641(3): mov %rsp,%rbp
2644(1): pop %rbp
2645(5): jmp 0xffffff6b(%rip)

"all_digits_p" :
2650(1): push %rbp
2651(1): push %rbx
2652(3): mov %rdi,%rbx
2655(4): sub $0x8,%rsp
2659(5): call 0xfffff007(%rip)
265e(3): movsx (%rbx),%edx
2661(3): sub $0x30,%edx
2664(3): cmp $0x9,%edx
2667(2): jnbe 0x21(%rip)
2669(7): lea 0x5914(%rip),%rsi
2670(3): mov %rax,%rbp
2673(3): mov %rbx,%rdi
2676(5): call 0xfffff07a(%rip)
267b(3): cmp %rbp,%rax
267e(3): setz %al
2681(4): add $0x8,%rsp
2685(1): pop %rbx
2686(1): pop %rbp
2687(1): ret near (%rsp)
2688(2): xor %eax,%eax
268a(2): jmp 0xfffffff7(%rip)

"io_error" :
2690(7): mov 0x2089f1(%rip),%rdi
2697(1): push %rbx
2698(5): call 0xffffef68(%rip)
269d(7): lea 0x58eb(%rip),%rsi
26a4(5): mov $0x5,%edx
26a9(2): xor %edi,%edi
26ab(5): call 0xffffef95(%rip)
26b0(3): mov %rax,%rbx
26b3(5): call 0xffffeefd(%rip)
26b8(2): mov (%rax),%esi
26ba(3): mov %rbx,%rdx
26bd(5): mov $0x1,%edi
26c2(2): xor %eax,%eax
26c4(5): call 0xfffff17c(%rip)
26c9(7): nop 0x0(%rax)
26d0(2): push %r15
26d2(2): push %r14
26d4(3): mov %rdi,%r9
26d7(2): push %r13
26d9(2): push %r12
26db(7): lea 0x58b9(%rip),%rdi
26e2(1): push %rbp
26e3(1): push %rbx
26e4(5): mov $0x4,%ecx
26e9(3): mov %rsi,%r8
26ec(3): mov %r9,%r13
26ef(4): sub $0x48,%rsp
26f3(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
26f5(3): setnbe %al
26f8(2): sbb $0x0,%al
26fa(4): cmp $0x30,(%r9)
26fe(3): movsx %al,%eax
2701(4): mov %eax,0x8(%rsp)
2705(2): jz 0xe(%rip)
2707(2): jmp 0x2a(%rip)
2709(7): nop 0x0(%rax)
2710(3): mov %rdx,%r13
2713(5): movzx 0x1(%r13),%eax
2718(4): lea 0x1(%r13),%rdx
271c(2): cmp $0x30,%al
271e(2): jz 0xfffffff2(%rip)
2720(2): test %al,%al
2722(6): jnz 0x1e0(%rip)
2728(3): cmp %rdx,%r9
272b(6): jz 0x1d7(%rip)
2731(4): cmp $0x30,(%r8)
2735(3): mov %r8,%rbp
2738(2): jz 0xb(%rip)
273a(2): jmp 0x26(%rip)
273c(4): nop 0x0(%rax)
2740(3): mov %rdx,%rbp
2743(4): movzx 0x1(%rbp),%eax
2747(4): lea 0x1(%rbp),%rdx
274b(2): cmp $0x30,%al
274d(2): jz 0xfffffff3(%rip)
274f(3): cmp %rdx,%r8
2752(6): jz 0x1a8(%rip)
2758(2): test %al,%al
275a(6): jnz 0x1a0(%rip)
2760(3): mov %r13,%rdi
2763(5): mov $0x1f,%ebx
2768(5): call 0xffffeef8(%rip)
276d(4): mov 0x8(%rsp),%edx
2771(4): lea 0x1(%rax),%r14
2775(3): mov %rax,%r15
2778(4): mov %rax,(%rsp)
277c(4): cmp $0x1f,%r14
2780(4): cmovnb %r14,%rbx
2784(2): test %edx,%edx
2786(6): jz 0x2a8(%rip)
278c(2): xor %eax,%eax
278e(4): or $0xffffffff,%rcx
2792(3): mov %rbp,%rdi
2795(2): REPNZ scasb rdi(%es,10),%al
2797(3): mov %rcx,%rsi
279a(3): not %rsi
279d(4): lea 0xffffffff(%rsi),%r12
27a1(5): mov %rsi,0x20(%rsp)
27a6(3): cmp %r12,%rbx
27a9(4): cmovnae %r12,%rbx
27ad(4): lea 0x1(%rbx),%rdi
27b1(5): mov %rdi,0x18(%rsp)
27b6(5): call 0x2efa(%rip)
27bb(3): mov %rbx,%rsi
27be(4): sub (%rsp),%rsi
27c2(3): mov %r14,%rdx
27c5(5): mov %rax,0x10(%rsp)
27ca(3): mov %rsi,%rdi
27cd(3): mov %r13,%rsi
27d0(3): add %rax,%rdi
27d3(5): call 0xffffef8d(%rip)
27d8(5): mov 0x18(%rsp),%rdi
27dd(3): mov %rax,%r13
27e0(3): mov %rax,%r14
27e3(5): call 0x2ecd(%rip)
27e8(5): mov 0x20(%rsp),%rcx
27ed(3): mov %rbx,%rdi
27f0(3): mov %rbp,%rsi
27f3(3): sub %r12,%rdi
27f6(5): mov %rax,0x38(%rsp)
27fb(3): add %rax,%rdi
27fe(3): mov %rcx,%rdx
2801(5): call 0xffffef5f(%rip)
2806(4): cmp %r12,(%rsp)
280a(5): mov %rax,0x30(%rsp)
280f(6): jnb 0x267(%rip)
2815(5): mov 0x18(%rsp),%rdi
281a(5): mov $0x2000,%eax
281f(3): add %rdi,%rdi
2822(7): cmp $0x2000,%rdi
2829(4): cmovnb %rdi,%rax
282d(3): mov %rax,%rdi
2830(3): mov %rax,%r13
2833(5): mov %rax,0x28(%rsp)
2838(5): call 0x2e78(%rip)
283d(4): mov (%rsp),%rdx
2841(3): mov %rax,%rbp
2844(3): mov %r14,%rsi
2847(3): mov %rbp,%rdi
284a(5): lea 0x0(%rbp,%r13,1),%r13
284f(5): call 0xffffefc1(%rip)
2854(3): mov %rax,%rdx
2857(4): mov 0x8(%rsp),%eax
285b(2): test %eax,%eax
285d(4): setz (%rsp)
2861(7): nop 0x0(%rax)
2868(3): cmp %r12,%r15
286b(2): jb 0xc(%rip)
286d(4): cmp $0x0,(%rsp)
2871(6): jz 0x147(%rip)
2877(7): mov 0x208872(%rip),%rax
287e(4): lea 0x1(%rdx),%rcx
2882(3): movzx (%rax),%eax
2885(2): mov %al,(%rdx)
2887(5): lea 0xffffffff(%r14,%r15,1),%rax
288c(2): jmp 0x11(%rip)
288e(2): nop 
2890(4): sub $0x1,%rax
2894(4): mov $0x30,0x1(%rax)
2898(3): cmp %r14,%rax
289b(2): jb 0x75(%rip)
289d(3): movzx (%rax),%edx
28a0(3): cmp $0x38,%dl
28a3(2): jnle 0xffffffed(%rip)
28a5(3): add $0x1,%edx
28a8(3): cmp %r15,%rbx
28ab(2): mov %dl,(%rax)
28ad(2): jz 0x75(%rip)
28af(3): mov %r15,%rdx
28b2(3): mov %r14,%rsi
28b5(3): mov %rcx,%rdi
28b8(5): call 0xffffef58(%rip)
28bd(3): mov %rax,%rdx
28c0(3): mov %r15,%rax
28c3(3): not %rax
28c6(3): add %r13,%rax
28c9(3): cmp %rax,%rdx
28cc(2): jbe 0xffffff9c(%rip)
28ce(7): mov 0x2087b3(%rip),%rcx
28d5(3): mov %rdx,%rsi
28d8(3): mov %rbp,%rdi
28db(3): sub %rbp,%rsi
28de(5): mov $0x1,%edx
28e3(5): call 0xffffeeed(%rip)
28e8(4): cmp $0x1,%rax
28ec(6): jnz 0x1aa(%rip)
28f2(3): mov %rbp,%rdx
28f5(5): jmp 0xffffff73(%rip)
28fa(3): mov %rdx,%rbp
28fd(5): jmp 0xfffffe63(%rip)
2902(3): mov %rdx,%r13
2905(5): jmp 0xfffffe2c(%rip)
290a(6): nop 0x0(%rax,%rax,1)
2910(4): add $0x1,%r15
2914(5): mov $0x31,0xffffffff(%r14)
2919(4): sub $0x1,%r14
291d(3): cmp %r15,%rbx
2920(2): jnz 0xffffff8f(%rip)
2922(4): lea 0x0(%rbx,%rbx,1),%r11
2926(5): mov 0x10(%rsp),%rdi
292b(5): mov %rcx,0x20(%rsp)
2930(4): lea 0x1(%r11),%r10
2934(5): mov %r11,0x18(%rsp)
2939(3): mov %r10,%rsi
293c(5): mov %r10,0x8(%rsp)
2941(5): call 0x2dcf(%rip)
2946(4): lea 0x1(%rbx),%rdx
294a(4): lea 0x0(%rax,%rbx,1),%rdi
294e(3): mov %rax,%rsi
2951(5): mov %rax,0x10(%rsp)
2956(5): call 0xffffeeca(%rip)
295b(5): mov 0x8(%rsp),%r10
2960(5): mov 0x18(%rsp),%r11
2965(3): mov %rax,%r14
2968(5): mov 0x20(%rsp),%rcx
296d(3): add %r10,%r10
2970(5): cmp 0x28(%rsp),%r10
2975(3): mov %r11,%rbx
2978(6): jbe 0xffffff37(%rip)
297e(3): sub %rbp,%rcx
2981(3): mov %r10,%rsi
2984(3): mov %rbp,%rdi
2987(5): mov %rcx,0x8(%rsp)
298c(5): mov %r10,0x18(%rsp)
2991(5): call 0x2d7f(%rip)
2996(5): mov 0x18(%rsp),%r10
299b(5): mov 0x8(%rsp),%rcx
29a0(3): mov %rax,%rbp
29a3(4): lea 0x0(%rax,%r10,1),%r13
29a7(3): add %rax,%rcx
29aa(5): mov %r10,0x28(%rsp)
29af(5): jmp 0xffffff00(%rip)
29b4(4): nop 0x0(%rax)
29b8(3): cmp %r12,%r15
29bb(2): jnbe 0x21(%rip)
29bd(5): mov 0x30(%rsp),%rsi
29c2(3): mov %r14,%rdi
29c5(5): mov %rdx,0x8(%rsp)
29ca(5): call 0xffffed76(%rip)
29cf(2): test %eax,%eax
29d1(5): mov 0x8(%rsp),%rdx
29d6(6): js 0xfffffea1(%rip)
29dc(3): mov $0xa,(%rdx)
29df(4): lea 0x1(%rdx),%rsi
29e3(7): mov 0x20869e(%rip),%rcx
29ea(5): mov $0x1,%edx
29ef(3): mov %rbp,%rdi
29f2(3): sub %rbp,%rsi
29f5(5): call 0xffffeddb(%rip)
29fa(4): sub $0x1,%rax
29fe(6): jnz 0x98(%rip)
2a04(5): mov $0x1,%ebx
2a09(5): mov 0x10(%rsp),%rdi
2a0e(5): call 0xffffeb82(%rip)
2a13(5): mov 0x38(%rsp),%rdi
2a18(5): call 0xffffeb78(%rip)
2a1d(4): add $0x48,%rsp
2a21(2): mov %ebx,%eax
2a23(1): pop %rbx
2a24(1): pop %rbp
2a25(2): pop %r12
2a27(2): pop %r13
2a29(2): pop %r14
2a2b(2): pop %r15
2a2d(1): ret near (%rsp)
2a2e(4): lea 0x1(%rbx),%rax
2a32(3): xor %r12d,%r12d
2a35(3): mov %rax,%rdi
2a38(5): mov %rax,0x18(%rsp)
2a3d(5): call 0x2c73(%rip)
2a42(3): mov %rbx,%rdi
2a45(4): sub (%rsp),%rdi
2a49(3): mov %r14,%rdx
2a4c(3): mov %r13,%rsi
2a4f(5): mov %rax,0x10(%rsp)
2a54(3): add %rax,%rdi
2a57(5): call 0xffffed09(%rip)
2a5c(9): mov $0x0,0x38(%rsp)
2a65(3): mov %rax,%r14
2a68(9): mov $0x0,0x30(%rsp)
2a71(5): jmp 0xfffffda4(%rip)
2a76(2): jbe 0x6(%rip)
2a78(2): xor %ebx,%ebx
2a7a(2): jmp 0xffffff8f(%rip)
2a7c(3): mov %rax,%rsi
2a7f(3): mov %r13,%rdi
2a82(5): call 0xffffecbe(%rip)
2a87(2): test %eax,%eax
2a89(6): jle 0xfffffd8c(%rip)
2a8f(2): xor %ebx,%ebx
2a91(5): jmp 0xffffff78(%rip)
2a96(5): call 0xfffffbfa(%rip)
2a9b(5): nop 0x0(%rax,%rax,1)
2aa0(2): push %r13
2aa2(2): push %r12
2aa4(5): mov $0x5,%edx
2aa9(1): push %rbp
2aaa(1): push %rbx
2aab(2): mov %edi,%ebp
2aad(7): sub $0x88,%rsp
2ab4(7): mov 0x208655(%rip),%rbx
2abb(9): mov $0x28,%rax
2ac4(5): mov %rax,0x78(%rsp)
2ac9(2): xor %eax,%eax
2acb(2): test %edi,%edi
2acd(2): jz 0x30(%rip)
2acf(7): lea 0x567a(%rip),%rsi
2ad6(2): xor %edi,%edi
2ad8(5): call 0xffffeb68(%rip)
2add(7): mov 0x2085dc(%rip),%rdi
2ae4(3): mov %rax,%rdx
2ae7(3): mov %rbx,%rcx
2aea(5): mov $0x1,%esi
2aef(2): xor %eax,%eax
2af1(5): call 0xffffed9f(%rip)
2af6(2): mov %ebp,%edi
2af8(5): call 0xffffed78(%rip)
2afd(7): lea 0x5674(%rip),%rsi
2b04(2): xor %edi,%edi
2b06(5): call 0xffffeb3a(%rip)
2b0b(3): mov %rbx,%rcx
2b0e(3): mov %rbx,%r8
2b11(3): mov %rbx,%rdx
2b14(3): mov %rax,%rsi
2b17(5): mov $0x1,%edi
2b1c(2): xor %eax,%eax
2b1e(5): call 0xffffece2(%rip)
2b23(7): mov 0x20855e(%rip),%rbx
2b2a(7): lea 0x56af(%rip),%rsi
2b31(5): mov $0x5,%edx
2b36(2): xor %edi,%edi
2b38(5): call 0xffffeb08(%rip)
2b3d(3): mov %rbx,%rsi
2b40(3): mov %rax,%rdi
2b43(5): call 0xffffebdd(%rip)
2b48(7): mov 0x208539(%rip),%rbx
2b4f(7): lea 0x56ca(%rip),%rsi
2b56(5): mov $0x5,%edx
2b5b(2): xor %edi,%edi
2b5d(5): call 0xffffeae3(%rip)
2b62(3): mov %rbx,%rsi
2b65(3): mov %rax,%rdi
2b68(5): call 0xffffebb8(%rip)
2b6d(7): mov 0x208514(%rip),%rbx
2b74(7): lea 0x56f5(%rip),%rsi
2b7b(5): mov $0x5,%edx
2b80(2): xor %edi,%edi
2b82(5): call 0xffffeabe(%rip)
2b87(3): mov %rbx,%rsi
2b8a(3): mov %rax,%rdi
2b8d(5): call 0xffffeb93(%rip)
2b92(7): mov 0x2084ef(%rip),%rbx
2b99(7): lea 0x57a8(%rip),%rsi
2ba0(5): mov $0x5,%edx
2ba5(2): xor %edi,%edi
2ba7(5): call 0xffffea99(%rip)
2bac(3): mov %rbx,%rsi
2baf(3): mov %rax,%rdi
2bb2(5): call 0xffffeb6e(%rip)
2bb7(7): mov 0x2084ca(%rip),%rbx
2bbe(7): lea 0x57b3(%rip),%rsi
2bc5(5): mov $0x5,%edx
2bca(2): xor %edi,%edi
2bcc(5): call 0xffffea74(%rip)
2bd1(3): mov %rbx,%rsi
2bd4(3): mov %rax,%rdi
2bd7(5): call 0xffffeb49(%rip)
2bdc(7): mov 0x2084a5(%rip),%rbx
2be3(7): lea 0x57c6(%rip),%rsi
2bea(5): mov $0x5,%edx
2bef(2): xor %edi,%edi
2bf1(5): call 0xffffea4f(%rip)
2bf6(3): mov %rbx,%rsi
2bf9(3): mov %rax,%rdi
2bfc(5): call 0xffffeb24(%rip)
2c01(7): mov 0x208480(%rip),%rbx
2c08(7): lea 0x59a9(%rip),%rsi
2c0f(5): mov $0x5,%edx
2c14(2): xor %edi,%edi
2c16(5): call 0xffffea2a(%rip)
2c1b(3): mov %rbx,%rsi
2c1e(3): mov %rax,%rdi
2c21(7): lea 0x5377(%rip),%rbx
2c28(5): call 0xffffeaf8(%rip)
2c2d(7): lea 0x536f(%rip),%rax
2c34(7): lea 0x53a9(%rip),%rcx
2c3b(9): mov $0x0,0x60(%rsp)
2c44(9): mov $0x0,0x68(%rsp)
2c4d(3): mov %rsp,%rdx
2c50(4): mov %rax,(%rsp)
2c54(7): lea 0x534a(%rip),%rax
2c5b(5): mov %rcx,0x30(%rsp)
2c60(7): lea 0x5387(%rip),%rcx
2c67(5): mov %rax,0x8(%rsp)
2c6c(7): lea 0x53aa(%rip),%rax
2c73(5): mov %rcx,0x40(%rsp)
2c78(7): lea 0x5379(%rip),%rcx
2c7f(5): mov %rax,0x10(%rsp)
2c84(7): lea 0x532a(%rip),%rax
2c8b(5): mov %rcx,0x50(%rsp)
2c90(5): mov %rax,0x18(%rsp)
2c95(7): lea 0x532f(%rip),%rax
2c9c(5): mov %rax,0x20(%rsp)
2ca1(7): lea 0x532d(%rip),%rax
2ca8(5): mov %rax,0x28(%rsp)
2cad(5): mov %rax,0x38(%rsp)
2cb2(5): mov %rax,0x48(%rsp)
2cb7(5): mov %rax,0x58(%rsp)
2cbc(4): nop 0x0(%rax)
2cc0(4): add $0x10,%rdx
2cc4(3): mov (%rdx),%rdi
2cc7(3): test %rdi,%rdi
2cca(2): jz 0x15(%rip)
2ccc(5): mov $0x4,%ecx
2cd1(3): mov %rbx,%rsi
2cd4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2cd6(3): setnbe %al
2cd9(2): sbb $0x0,%al
2cdb(2): test %al,%al
2cdd(2): jnz 0xffffffe3(%rip)
2cdf(4): mov 0x8(%rdx),%r12
2ce3(2): xor %edi,%edi
2ce5(5): mov $0x5,%edx
2cea(7): lea 0x5311(%rip),%rsi
2cf1(3): test %r12,%r12
2cf4(6): jz 0xc7(%rip)
2cfa(5): call 0xffffe946(%rip)
2cff(7): lea 0x5982(%rip),%rcx
2d06(7): lea 0x530c(%rip),%rdx
2d0d(3): mov %rax,%rsi
2d10(5): mov $0x1,%edi
2d15(2): xor %eax,%eax
2d17(5): call 0xffffeae9(%rip)
2d1c(2): xor %esi,%esi
2d1e(5): mov $0x5,%edi
2d23(5): call 0xffffeacd(%rip)
2d28(3): test %rax,%rax
2d2b(2): jz 0x1e(%rip)
2d2d(7): lea 0x52f3(%rip),%rsi
2d34(5): mov $0x3,%edx
2d39(3): mov %rax,%rdi
2d3c(5): call 0xffffe884(%rip)
2d41(2): test %eax,%eax
2d43(6): jnz 0x10d(%rip)
2d49(7): lea 0x52db(%rip),%rsi
2d50(2): xor %edi,%edi
2d52(5): mov $0x5,%edx
2d57(5): call 0xffffe8e9(%rip)
2d5c(7): lea 0x523c(%rip),%rcx
2d63(7): lea 0x591e(%rip),%rdx
2d6a(3): mov %rax,%rsi
2d6d(5): mov $0x1,%edi
2d72(2): xor %eax,%eax
2d74(5): call 0xffffea8c(%rip)
2d79(3): cmp %rbx,%r12
2d7c(7): lea 0x523c(%rip),%rcx
2d83(7): lea 0x6017(%rip),%rbx
2d8a(4): cmove %rcx,%rbx
2d8e(7): lea 0x5963(%rip),%rsi
2d95(2): xor %edi,%edi
2d97(5): mov $0x5,%edx
2d9c(5): call 0xffffe8a4(%rip)
2da1(3): mov %rbx,%rcx
2da4(3): mov %rax,%rsi
2da7(3): mov %r12,%rdx
2daa(5): mov $0x1,%edi
2daf(2): xor %eax,%eax
2db1(5): call 0xffffea4f(%rip)
2db6(5): jmp 0xfffffd40(%rip)
2dbb(5): call 0xffffe885(%rip)
2dc0(7): lea 0x58c1(%rip),%rcx
2dc7(7): lea 0x524b(%rip),%rdx
2dce(3): mov %rax,%rsi
2dd1(5): mov $0x1,%edi
2dd6(2): xor %eax,%eax
2dd8(5): call 0xffffea28(%rip)
2ddd(2): xor %esi,%esi
2ddf(5): mov $0x5,%edi
2de4(5): call 0xffffea0c(%rip)
2de9(3): test %rax,%rax
2dec(2): jz 0x1a(%rip)
2dee(7): lea 0x5232(%rip),%rsi
2df5(5): mov $0x3,%edx
2dfa(3): mov %rax,%rdi
2dfd(5): call 0xffffe7c3(%rip)
2e02(2): test %eax,%eax
2e04(2): jnz 0x45(%rip)
2e06(7): lea 0x521e(%rip),%rsi
2e0d(5): mov $0x5,%edx
2e12(2): xor %edi,%edi
2e14(7): lea 0x5184(%rip),%r12
2e1b(7): lea 0x519d(%rip),%rbx
2e22(5): call 0xffffe81e(%rip)
2e27(7): lea 0x5171(%rip),%rcx
2e2e(7): lea 0x5853(%rip),%rdx
2e35(3): mov %rax,%rsi
2e38(5): mov $0x1,%edi
2e3d(2): xor %eax,%eax
2e3f(5): call 0xffffe9c1(%rip)
2e44(5): jmp 0xffffff4a(%rip)
2e49(7): lea 0x514f(%rip),%r12
2e50(7): mov 0x208231(%rip),%r13
2e57(7): lea 0x5852(%rip),%rsi
2e5e(2): xor %edi,%edi
2e60(5): mov $0x5,%edx
2e65(5): call 0xffffe7db(%rip)
2e6a(3): mov %r13,%rsi
2e6d(3): mov %rax,%rdi
2e70(5): call 0xffffe8b0(%rip)
2e75(5): jmp 0xfffffed4(%rip)

"seq_fast" :
26d0(2): push %r15
26d2(2): push %r14
26d4(3): mov %rdi,%r9
26d7(2): push %r13
26d9(2): push %r12
26db(7): lea 0x58b9(%rip),%rdi
26e2(1): push %rbp
26e3(1): push %rbx
26e4(5): mov $0x4,%ecx
26e9(3): mov %rsi,%r8
26ec(3): mov %r9,%r13
26ef(4): sub $0x48,%rsp
26f3(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
26f5(3): setnbe %al
26f8(2): sbb $0x0,%al
26fa(4): cmp $0x30,(%r9)
26fe(3): movsx %al,%eax
2701(4): mov %eax,0x8(%rsp)
2705(2): jz 0xe(%rip)
2707(2): jmp 0x2a(%rip)
2709(7): nop 0x0(%rax)
2710(3): mov %rdx,%r13
2713(5): movzx 0x1(%r13),%eax
2718(4): lea 0x1(%r13),%rdx
271c(2): cmp $0x30,%al
271e(2): jz 0xfffffff2(%rip)
2720(2): test %al,%al
2722(6): jnz 0x1e0(%rip)
2728(3): cmp %rdx,%r9
272b(6): jz 0x1d7(%rip)
2731(4): cmp $0x30,(%r8)
2735(3): mov %r8,%rbp
2738(2): jz 0xb(%rip)
273a(2): jmp 0x26(%rip)
273c(4): nop 0x0(%rax)
2740(3): mov %rdx,%rbp
2743(4): movzx 0x1(%rbp),%eax
2747(4): lea 0x1(%rbp),%rdx
274b(2): cmp $0x30,%al
274d(2): jz 0xfffffff3(%rip)
274f(3): cmp %rdx,%r8
2752(6): jz 0x1a8(%rip)
2758(2): test %al,%al
275a(6): jnz 0x1a0(%rip)
2760(3): mov %r13,%rdi
2763(5): mov $0x1f,%ebx
2768(5): call 0xffffeef8(%rip)
276d(4): mov 0x8(%rsp),%edx
2771(4): lea 0x1(%rax),%r14
2775(3): mov %rax,%r15
2778(4): mov %rax,(%rsp)
277c(4): cmp $0x1f,%r14
2780(4): cmovnb %r14,%rbx
2784(2): test %edx,%edx
2786(6): jz 0x2a8(%rip)
278c(2): xor %eax,%eax
278e(4): or $0xffffffff,%rcx
2792(3): mov %rbp,%rdi
2795(2): REPNZ scasb rdi(%es,10),%al
2797(3): mov %rcx,%rsi
279a(3): not %rsi
279d(4): lea 0xffffffff(%rsi),%r12
27a1(5): mov %rsi,0x20(%rsp)
27a6(3): cmp %r12,%rbx
27a9(4): cmovnae %r12,%rbx
27ad(4): lea 0x1(%rbx),%rdi
27b1(5): mov %rdi,0x18(%rsp)
27b6(5): call 0x2efa(%rip)
27bb(3): mov %rbx,%rsi
27be(4): sub (%rsp),%rsi
27c2(3): mov %r14,%rdx
27c5(5): mov %rax,0x10(%rsp)
27ca(3): mov %rsi,%rdi
27cd(3): mov %r13,%rsi
27d0(3): add %rax,%rdi
27d3(5): call 0xffffef8d(%rip)
27d8(5): mov 0x18(%rsp),%rdi
27dd(3): mov %rax,%r13
27e0(3): mov %rax,%r14
27e3(5): call 0x2ecd(%rip)
27e8(5): mov 0x20(%rsp),%rcx
27ed(3): mov %rbx,%rdi
27f0(3): mov %rbp,%rsi
27f3(3): sub %r12,%rdi
27f6(5): mov %rax,0x38(%rsp)
27fb(3): add %rax,%rdi
27fe(3): mov %rcx,%rdx
2801(5): call 0xffffef5f(%rip)
2806(4): cmp %r12,(%rsp)
280a(5): mov %rax,0x30(%rsp)
280f(6): jnb 0x267(%rip)
2815(5): mov 0x18(%rsp),%rdi
281a(5): mov $0x2000,%eax
281f(3): add %rdi,%rdi
2822(7): cmp $0x2000,%rdi
2829(4): cmovnb %rdi,%rax
282d(3): mov %rax,%rdi
2830(3): mov %rax,%r13
2833(5): mov %rax,0x28(%rsp)
2838(5): call 0x2e78(%rip)
283d(4): mov (%rsp),%rdx
2841(3): mov %rax,%rbp
2844(3): mov %r14,%rsi
2847(3): mov %rbp,%rdi
284a(5): lea 0x0(%rbp,%r13,1),%r13
284f(5): call 0xffffefc1(%rip)
2854(3): mov %rax,%rdx
2857(4): mov 0x8(%rsp),%eax
285b(2): test %eax,%eax
285d(4): setz (%rsp)
2861(7): nop 0x0(%rax)
2868(3): cmp %r12,%r15
286b(2): jb 0xc(%rip)
286d(4): cmp $0x0,(%rsp)
2871(6): jz 0x147(%rip)
2877(7): mov 0x208872(%rip),%rax
287e(4): lea 0x1(%rdx),%rcx
2882(3): movzx (%rax),%eax
2885(2): mov %al,(%rdx)
2887(5): lea 0xffffffff(%r14,%r15,1),%rax
288c(2): jmp 0x11(%rip)
288e(2): nop 
2890(4): sub $0x1,%rax
2894(4): mov $0x30,0x1(%rax)
2898(3): cmp %r14,%rax
289b(2): jb 0x75(%rip)
289d(3): movzx (%rax),%edx
28a0(3): cmp $0x38,%dl
28a3(2): jnle 0xffffffed(%rip)
28a5(3): add $0x1,%edx
28a8(3): cmp %r15,%rbx
28ab(2): mov %dl,(%rax)
28ad(2): jz 0x75(%rip)
28af(3): mov %r15,%rdx
28b2(3): mov %r14,%rsi
28b5(3): mov %rcx,%rdi
28b8(5): call 0xffffef58(%rip)
28bd(3): mov %rax,%rdx
28c0(3): mov %r15,%rax
28c3(3): not %rax
28c6(3): add %r13,%rax
28c9(3): cmp %rax,%rdx
28cc(2): jbe 0xffffff9c(%rip)
28ce(7): mov 0x2087b3(%rip),%rcx
28d5(3): mov %rdx,%rsi
28d8(3): mov %rbp,%rdi
28db(3): sub %rbp,%rsi
28de(5): mov $0x1,%edx
28e3(5): call 0xffffeeed(%rip)
28e8(4): cmp $0x1,%rax
28ec(6): jnz 0x1aa(%rip)
28f2(3): mov %rbp,%rdx
28f5(5): jmp 0xffffff73(%rip)
28fa(3): mov %rdx,%rbp
28fd(5): jmp 0xfffffe63(%rip)
2902(3): mov %rdx,%r13
2905(5): jmp 0xfffffe2c(%rip)
290a(6): nop 0x0(%rax,%rax,1)
2910(4): add $0x1,%r15
2914(5): mov $0x31,0xffffffff(%r14)
2919(4): sub $0x1,%r14
291d(3): cmp %r15,%rbx
2920(2): jnz 0xffffff8f(%rip)
2922(4): lea 0x0(%rbx,%rbx,1),%r11
2926(5): mov 0x10(%rsp),%rdi
292b(5): mov %rcx,0x20(%rsp)
2930(4): lea 0x1(%r11),%r10
2934(5): mov %r11,0x18(%rsp)
2939(3): mov %r10,%rsi
293c(5): mov %r10,0x8(%rsp)
2941(5): call 0x2dcf(%rip)
2946(4): lea 0x1(%rbx),%rdx
294a(4): lea 0x0(%rax,%rbx,1),%rdi
294e(3): mov %rax,%rsi
2951(5): mov %rax,0x10(%rsp)
2956(5): call 0xffffeeca(%rip)
295b(5): mov 0x8(%rsp),%r10
2960(5): mov 0x18(%rsp),%r11
2965(3): mov %rax,%r14
2968(5): mov 0x20(%rsp),%rcx
296d(3): add %r10,%r10
2970(5): cmp 0x28(%rsp),%r10
2975(3): mov %r11,%rbx
2978(6): jbe 0xffffff37(%rip)
297e(3): sub %rbp,%rcx
2981(3): mov %r10,%rsi
2984(3): mov %rbp,%rdi
2987(5): mov %rcx,0x8(%rsp)
298c(5): mov %r10,0x18(%rsp)
2991(5): call 0x2d7f(%rip)
2996(5): mov 0x18(%rsp),%r10
299b(5): mov 0x8(%rsp),%rcx
29a0(3): mov %rax,%rbp
29a3(4): lea 0x0(%rax,%r10,1),%r13
29a7(3): add %rax,%rcx
29aa(5): mov %r10,0x28(%rsp)
29af(5): jmp 0xffffff00(%rip)
29b4(4): nop 0x0(%rax)
29b8(3): cmp %r12,%r15
29bb(2): jnbe 0x21(%rip)
29bd(5): mov 0x30(%rsp),%rsi
29c2(3): mov %r14,%rdi
29c5(5): mov %rdx,0x8(%rsp)
29ca(5): call 0xffffed76(%rip)
29cf(2): test %eax,%eax
29d1(5): mov 0x8(%rsp),%rdx
29d6(6): js 0xfffffea1(%rip)
29dc(3): mov $0xa,(%rdx)
29df(4): lea 0x1(%rdx),%rsi
29e3(7): mov 0x20869e(%rip),%rcx
29ea(5): mov $0x1,%edx
29ef(3): mov %rbp,%rdi
29f2(3): sub %rbp,%rsi
29f5(5): call 0xffffeddb(%rip)
29fa(4): sub $0x1,%rax
29fe(6): jnz 0x98(%rip)
2a04(5): mov $0x1,%ebx
2a09(5): mov 0x10(%rsp),%rdi
2a0e(5): call 0xffffeb82(%rip)
2a13(5): mov 0x38(%rsp),%rdi
2a18(5): call 0xffffeb78(%rip)
2a1d(4): add $0x48,%rsp
2a21(2): mov %ebx,%eax
2a23(1): pop %rbx
2a24(1): pop %rbp
2a25(2): pop %r12
2a27(2): pop %r13
2a29(2): pop %r14
2a2b(2): pop %r15
2a2d(1): ret near (%rsp)
2a2e(4): lea 0x1(%rbx),%rax
2a32(3): xor %r12d,%r12d
2a35(3): mov %rax,%rdi
2a38(5): mov %rax,0x18(%rsp)
2a3d(5): call 0x2c73(%rip)
2a42(3): mov %rbx,%rdi
2a45(4): sub (%rsp),%rdi
2a49(3): mov %r14,%rdx
2a4c(3): mov %r13,%rsi
2a4f(5): mov %rax,0x10(%rsp)
2a54(3): add %rax,%rdi
2a57(5): call 0xffffed09(%rip)
2a5c(9): mov $0x0,0x38(%rsp)
2a65(3): mov %rax,%r14
2a68(9): mov $0x0,0x30(%rsp)
2a71(5): jmp 0xfffffda4(%rip)
2a76(2): jbe 0x6(%rip)
2a78(2): xor %ebx,%ebx
2a7a(2): jmp 0xffffff8f(%rip)
2a7c(3): mov %rax,%rsi
2a7f(3): mov %r13,%rdi
2a82(5): call 0xffffecbe(%rip)
2a87(2): test %eax,%eax
2a89(6): jle 0xfffffd8c(%rip)
2a8f(2): xor %ebx,%ebx
2a91(5): jmp 0xffffff78(%rip)
2a96(5): call 0xfffffbfa(%rip)
2a9b(5): nop 0x0(%rax,%rax,1)
2aa0(2): push %r13
2aa2(2): push %r12
2aa4(5): mov $0x5,%edx
2aa9(1): push %rbp
2aaa(1): push %rbx
2aab(2): mov %edi,%ebp
2aad(7): sub $0x88,%rsp
2ab4(7): mov 0x208655(%rip),%rbx
2abb(9): mov $0x28,%rax
2ac4(5): mov %rax,0x78(%rsp)
2ac9(2): xor %eax,%eax
2acb(2): test %edi,%edi
2acd(2): jz 0x30(%rip)
2acf(7): lea 0x567a(%rip),%rsi
2ad6(2): xor %edi,%edi
2ad8(5): call 0xffffeb68(%rip)
2add(7): mov 0x2085dc(%rip),%rdi
2ae4(3): mov %rax,%rdx
2ae7(3): mov %rbx,%rcx
2aea(5): mov $0x1,%esi
2aef(2): xor %eax,%eax
2af1(5): call 0xffffed9f(%rip)
2af6(2): mov %ebp,%edi
2af8(5): call 0xffffed78(%rip)
2afd(7): lea 0x5674(%rip),%rsi
2b04(2): xor %edi,%edi
2b06(5): call 0xffffeb3a(%rip)
2b0b(3): mov %rbx,%rcx
2b0e(3): mov %rbx,%r8
2b11(3): mov %rbx,%rdx
2b14(3): mov %rax,%rsi
2b17(5): mov $0x1,%edi
2b1c(2): xor %eax,%eax
2b1e(5): call 0xffffece2(%rip)
2b23(7): mov 0x20855e(%rip),%rbx
2b2a(7): lea 0x56af(%rip),%rsi
2b31(5): mov $0x5,%edx
2b36(2): xor %edi,%edi
2b38(5): call 0xffffeb08(%rip)
2b3d(3): mov %rbx,%rsi
2b40(3): mov %rax,%rdi
2b43(5): call 0xffffebdd(%rip)
2b48(7): mov 0x208539(%rip),%rbx
2b4f(7): lea 0x56ca(%rip),%rsi
2b56(5): mov $0x5,%edx
2b5b(2): xor %edi,%edi
2b5d(5): call 0xffffeae3(%rip)
2b62(3): mov %rbx,%rsi
2b65(3): mov %rax,%rdi
2b68(5): call 0xffffebb8(%rip)
2b6d(7): mov 0x208514(%rip),%rbx
2b74(7): lea 0x56f5(%rip),%rsi
2b7b(5): mov $0x5,%edx
2b80(2): xor %edi,%edi
2b82(5): call 0xffffeabe(%rip)
2b87(3): mov %rbx,%rsi
2b8a(3): mov %rax,%rdi
2b8d(5): call 0xffffeb93(%rip)
2b92(7): mov 0x2084ef(%rip),%rbx
2b99(7): lea 0x57a8(%rip),%rsi
2ba0(5): mov $0x5,%edx
2ba5(2): xor %edi,%edi
2ba7(5): call 0xffffea99(%rip)
2bac(3): mov %rbx,%rsi
2baf(3): mov %rax,%rdi
2bb2(5): call 0xffffeb6e(%rip)
2bb7(7): mov 0x2084ca(%rip),%rbx
2bbe(7): lea 0x57b3(%rip),%rsi
2bc5(5): mov $0x5,%edx
2bca(2): xor %edi,%edi
2bcc(5): call 0xffffea74(%rip)
2bd1(3): mov %rbx,%rsi
2bd4(3): mov %rax,%rdi
2bd7(5): call 0xffffeb49(%rip)
2bdc(7): mov 0x2084a5(%rip),%rbx
2be3(7): lea 0x57c6(%rip),%rsi
2bea(5): mov $0x5,%edx
2bef(2): xor %edi,%edi
2bf1(5): call 0xffffea4f(%rip)
2bf6(3): mov %rbx,%rsi
2bf9(3): mov %rax,%rdi
2bfc(5): call 0xffffeb24(%rip)
2c01(7): mov 0x208480(%rip),%rbx
2c08(7): lea 0x59a9(%rip),%rsi
2c0f(5): mov $0x5,%edx
2c14(2): xor %edi,%edi
2c16(5): call 0xffffea2a(%rip)
2c1b(3): mov %rbx,%rsi
2c1e(3): mov %rax,%rdi
2c21(7): lea 0x5377(%rip),%rbx
2c28(5): call 0xffffeaf8(%rip)
2c2d(7): lea 0x536f(%rip),%rax
2c34(7): lea 0x53a9(%rip),%rcx
2c3b(9): mov $0x0,0x60(%rsp)
2c44(9): mov $0x0,0x68(%rsp)
2c4d(3): mov %rsp,%rdx
2c50(4): mov %rax,(%rsp)
2c54(7): lea 0x534a(%rip),%rax
2c5b(5): mov %rcx,0x30(%rsp)
2c60(7): lea 0x5387(%rip),%rcx
2c67(5): mov %rax,0x8(%rsp)
2c6c(7): lea 0x53aa(%rip),%rax
2c73(5): mov %rcx,0x40(%rsp)
2c78(7): lea 0x5379(%rip),%rcx
2c7f(5): mov %rax,0x10(%rsp)
2c84(7): lea 0x532a(%rip),%rax
2c8b(5): mov %rcx,0x50(%rsp)
2c90(5): mov %rax,0x18(%rsp)
2c95(7): lea 0x532f(%rip),%rax
2c9c(5): mov %rax,0x20(%rsp)
2ca1(7): lea 0x532d(%rip),%rax
2ca8(5): mov %rax,0x28(%rsp)
2cad(5): mov %rax,0x38(%rsp)
2cb2(5): mov %rax,0x48(%rsp)
2cb7(5): mov %rax,0x58(%rsp)
2cbc(4): nop 0x0(%rax)
2cc0(4): add $0x10,%rdx
2cc4(3): mov (%rdx),%rdi
2cc7(3): test %rdi,%rdi
2cca(2): jz 0x15(%rip)
2ccc(5): mov $0x4,%ecx
2cd1(3): mov %rbx,%rsi
2cd4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2cd6(3): setnbe %al
2cd9(2): sbb $0x0,%al
2cdb(2): test %al,%al
2cdd(2): jnz 0xffffffe3(%rip)
2cdf(4): mov 0x8(%rdx),%r12
2ce3(2): xor %edi,%edi
2ce5(5): mov $0x5,%edx
2cea(7): lea 0x5311(%rip),%rsi
2cf1(3): test %r12,%r12
2cf4(6): jz 0xc7(%rip)
2cfa(5): call 0xffffe946(%rip)
2cff(7): lea 0x5982(%rip),%rcx
2d06(7): lea 0x530c(%rip),%rdx
2d0d(3): mov %rax,%rsi
2d10(5): mov $0x1,%edi
2d15(2): xor %eax,%eax
2d17(5): call 0xffffeae9(%rip)
2d1c(2): xor %esi,%esi
2d1e(5): mov $0x5,%edi
2d23(5): call 0xffffeacd(%rip)
2d28(3): test %rax,%rax
2d2b(2): jz 0x1e(%rip)
2d2d(7): lea 0x52f3(%rip),%rsi
2d34(5): mov $0x3,%edx
2d39(3): mov %rax,%rdi
2d3c(5): call 0xffffe884(%rip)
2d41(2): test %eax,%eax
2d43(6): jnz 0x10d(%rip)
2d49(7): lea 0x52db(%rip),%rsi
2d50(2): xor %edi,%edi
2d52(5): mov $0x5,%edx
2d57(5): call 0xffffe8e9(%rip)
2d5c(7): lea 0x523c(%rip),%rcx
2d63(7): lea 0x591e(%rip),%rdx
2d6a(3): mov %rax,%rsi
2d6d(5): mov $0x1,%edi
2d72(2): xor %eax,%eax
2d74(5): call 0xffffea8c(%rip)
2d79(3): cmp %rbx,%r12
2d7c(7): lea 0x523c(%rip),%rcx
2d83(7): lea 0x6017(%rip),%rbx
2d8a(4): cmove %rcx,%rbx
2d8e(7): lea 0x5963(%rip),%rsi
2d95(2): xor %edi,%edi
2d97(5): mov $0x5,%edx
2d9c(5): call 0xffffe8a4(%rip)
2da1(3): mov %rbx,%rcx
2da4(3): mov %rax,%rsi
2da7(3): mov %r12,%rdx
2daa(5): mov $0x1,%edi
2daf(2): xor %eax,%eax
2db1(5): call 0xffffea4f(%rip)
2db6(5): jmp 0xfffffd40(%rip)
2dbb(5): call 0xffffe885(%rip)
2dc0(7): lea 0x58c1(%rip),%rcx
2dc7(7): lea 0x524b(%rip),%rdx
2dce(3): mov %rax,%rsi
2dd1(5): mov $0x1,%edi
2dd6(2): xor %eax,%eax
2dd8(5): call 0xffffea28(%rip)
2ddd(2): xor %esi,%esi
2ddf(5): mov $0x5,%edi
2de4(5): call 0xffffea0c(%rip)
2de9(3): test %rax,%rax
2dec(2): jz 0x1a(%rip)
2dee(7): lea 0x5232(%rip),%rsi
2df5(5): mov $0x3,%edx
2dfa(3): mov %rax,%rdi
2dfd(5): call 0xffffe7c3(%rip)
2e02(2): test %eax,%eax
2e04(2): jnz 0x45(%rip)
2e06(7): lea 0x521e(%rip),%rsi
2e0d(5): mov $0x5,%edx
2e12(2): xor %edi,%edi
2e14(7): lea 0x5184(%rip),%r12
2e1b(7): lea 0x519d(%rip),%rbx
2e22(5): call 0xffffe81e(%rip)
2e27(7): lea 0x5171(%rip),%rcx
2e2e(7): lea 0x5853(%rip),%rdx
2e35(3): mov %rax,%rsi
2e38(5): mov $0x1,%edi
2e3d(2): xor %eax,%eax
2e3f(5): call 0xffffe9c1(%rip)
2e44(5): jmp 0xffffff4a(%rip)
2e49(7): lea 0x514f(%rip),%r12
2e50(7): mov 0x208231(%rip),%r13
2e57(7): lea 0x5852(%rip),%rsi
2e5e(2): xor %edi,%edi
2e60(5): mov $0x5,%edx
2e65(5): call 0xffffe7db(%rip)
2e6a(3): mov %r13,%rsi
2e6d(3): mov %rax,%rdi
2e70(5): call 0xffffe8b0(%rip)
2e75(5): jmp 0xfffffed4(%rip)

"usage" :
2aa0(2): push %r13
2aa2(2): push %r12
2aa4(5): mov $0x5,%edx
2aa9(1): push %rbp
2aaa(1): push %rbx
2aab(2): mov %edi,%ebp
2aad(7): sub $0x88,%rsp
2ab4(7): mov 0x208655(%rip),%rbx
2abb(9): mov $0x28,%rax
2ac4(5): mov %rax,0x78(%rsp)
2ac9(2): xor %eax,%eax
2acb(2): test %edi,%edi
2acd(2): jz 0x30(%rip)
2acf(7): lea 0x567a(%rip),%rsi
2ad6(2): xor %edi,%edi
2ad8(5): call 0xffffeb68(%rip)
2add(7): mov 0x2085dc(%rip),%rdi
2ae4(3): mov %rax,%rdx
2ae7(3): mov %rbx,%rcx
2aea(5): mov $0x1,%esi
2aef(2): xor %eax,%eax
2af1(5): call 0xffffed9f(%rip)
2af6(2): mov %ebp,%edi
2af8(5): call 0xffffed78(%rip)
2afd(7): lea 0x5674(%rip),%rsi
2b04(2): xor %edi,%edi
2b06(5): call 0xffffeb3a(%rip)
2b0b(3): mov %rbx,%rcx
2b0e(3): mov %rbx,%r8
2b11(3): mov %rbx,%rdx
2b14(3): mov %rax,%rsi
2b17(5): mov $0x1,%edi
2b1c(2): xor %eax,%eax
2b1e(5): call 0xffffece2(%rip)
2b23(7): mov 0x20855e(%rip),%rbx
2b2a(7): lea 0x56af(%rip),%rsi
2b31(5): mov $0x5,%edx
2b36(2): xor %edi,%edi
2b38(5): call 0xffffeb08(%rip)
2b3d(3): mov %rbx,%rsi
2b40(3): mov %rax,%rdi
2b43(5): call 0xffffebdd(%rip)
2b48(7): mov 0x208539(%rip),%rbx
2b4f(7): lea 0x56ca(%rip),%rsi
2b56(5): mov $0x5,%edx
2b5b(2): xor %edi,%edi
2b5d(5): call 0xffffeae3(%rip)
2b62(3): mov %rbx,%rsi
2b65(3): mov %rax,%rdi
2b68(5): call 0xffffebb8(%rip)
2b6d(7): mov 0x208514(%rip),%rbx
2b74(7): lea 0x56f5(%rip),%rsi
2b7b(5): mov $0x5,%edx
2b80(2): xor %edi,%edi
2b82(5): call 0xffffeabe(%rip)
2b87(3): mov %rbx,%rsi
2b8a(3): mov %rax,%rdi
2b8d(5): call 0xffffeb93(%rip)
2b92(7): mov 0x2084ef(%rip),%rbx
2b99(7): lea 0x57a8(%rip),%rsi
2ba0(5): mov $0x5,%edx
2ba5(2): xor %edi,%edi
2ba7(5): call 0xffffea99(%rip)
2bac(3): mov %rbx,%rsi
2baf(3): mov %rax,%rdi
2bb2(5): call 0xffffeb6e(%rip)
2bb7(7): mov 0x2084ca(%rip),%rbx
2bbe(7): lea 0x57b3(%rip),%rsi
2bc5(5): mov $0x5,%edx
2bca(2): xor %edi,%edi
2bcc(5): call 0xffffea74(%rip)
2bd1(3): mov %rbx,%rsi
2bd4(3): mov %rax,%rdi
2bd7(5): call 0xffffeb49(%rip)
2bdc(7): mov 0x2084a5(%rip),%rbx
2be3(7): lea 0x57c6(%rip),%rsi
2bea(5): mov $0x5,%edx
2bef(2): xor %edi,%edi
2bf1(5): call 0xffffea4f(%rip)
2bf6(3): mov %rbx,%rsi
2bf9(3): mov %rax,%rdi
2bfc(5): call 0xffffeb24(%rip)
2c01(7): mov 0x208480(%rip),%rbx
2c08(7): lea 0x59a9(%rip),%rsi
2c0f(5): mov $0x5,%edx
2c14(2): xor %edi,%edi
2c16(5): call 0xffffea2a(%rip)
2c1b(3): mov %rbx,%rsi
2c1e(3): mov %rax,%rdi
2c21(7): lea 0x5377(%rip),%rbx
2c28(5): call 0xffffeaf8(%rip)
2c2d(7): lea 0x536f(%rip),%rax
2c34(7): lea 0x53a9(%rip),%rcx
2c3b(9): mov $0x0,0x60(%rsp)
2c44(9): mov $0x0,0x68(%rsp)
2c4d(3): mov %rsp,%rdx
2c50(4): mov %rax,(%rsp)
2c54(7): lea 0x534a(%rip),%rax
2c5b(5): mov %rcx,0x30(%rsp)
2c60(7): lea 0x5387(%rip),%rcx
2c67(5): mov %rax,0x8(%rsp)
2c6c(7): lea 0x53aa(%rip),%rax
2c73(5): mov %rcx,0x40(%rsp)
2c78(7): lea 0x5379(%rip),%rcx
2c7f(5): mov %rax,0x10(%rsp)
2c84(7): lea 0x532a(%rip),%rax
2c8b(5): mov %rcx,0x50(%rsp)
2c90(5): mov %rax,0x18(%rsp)
2c95(7): lea 0x532f(%rip),%rax
2c9c(5): mov %rax,0x20(%rsp)
2ca1(7): lea 0x532d(%rip),%rax
2ca8(5): mov %rax,0x28(%rsp)
2cad(5): mov %rax,0x38(%rsp)
2cb2(5): mov %rax,0x48(%rsp)
2cb7(5): mov %rax,0x58(%rsp)
2cbc(4): nop 0x0(%rax)
2cc0(4): add $0x10,%rdx
2cc4(3): mov (%rdx),%rdi
2cc7(3): test %rdi,%rdi
2cca(2): jz 0x15(%rip)
2ccc(5): mov $0x4,%ecx
2cd1(3): mov %rbx,%rsi
2cd4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2cd6(3): setnbe %al
2cd9(2): sbb $0x0,%al
2cdb(2): test %al,%al
2cdd(2): jnz 0xffffffe3(%rip)
2cdf(4): mov 0x8(%rdx),%r12
2ce3(2): xor %edi,%edi
2ce5(5): mov $0x5,%edx
2cea(7): lea 0x5311(%rip),%rsi
2cf1(3): test %r12,%r12
2cf4(6): jz 0xc7(%rip)
2cfa(5): call 0xffffe946(%rip)
2cff(7): lea 0x5982(%rip),%rcx
2d06(7): lea 0x530c(%rip),%rdx
2d0d(3): mov %rax,%rsi
2d10(5): mov $0x1,%edi
2d15(2): xor %eax,%eax
2d17(5): call 0xffffeae9(%rip)
2d1c(2): xor %esi,%esi
2d1e(5): mov $0x5,%edi
2d23(5): call 0xffffeacd(%rip)
2d28(3): test %rax,%rax
2d2b(2): jz 0x1e(%rip)
2d2d(7): lea 0x52f3(%rip),%rsi
2d34(5): mov $0x3,%edx
2d39(3): mov %rax,%rdi
2d3c(5): call 0xffffe884(%rip)
2d41(2): test %eax,%eax
2d43(6): jnz 0x10d(%rip)
2d49(7): lea 0x52db(%rip),%rsi
2d50(2): xor %edi,%edi
2d52(5): mov $0x5,%edx
2d57(5): call 0xffffe8e9(%rip)
2d5c(7): lea 0x523c(%rip),%rcx
2d63(7): lea 0x591e(%rip),%rdx
2d6a(3): mov %rax,%rsi
2d6d(5): mov $0x1,%edi
2d72(2): xor %eax,%eax
2d74(5): call 0xffffea8c(%rip)
2d79(3): cmp %rbx,%r12
2d7c(7): lea 0x523c(%rip),%rcx
2d83(7): lea 0x6017(%rip),%rbx
2d8a(4): cmove %rcx,%rbx
2d8e(7): lea 0x5963(%rip),%rsi
2d95(2): xor %edi,%edi
2d97(5): mov $0x5,%edx
2d9c(5): call 0xffffe8a4(%rip)
2da1(3): mov %rbx,%rcx
2da4(3): mov %rax,%rsi
2da7(3): mov %r12,%rdx
2daa(5): mov $0x1,%edi
2daf(2): xor %eax,%eax
2db1(5): call 0xffffea4f(%rip)
2db6(5): jmp 0xfffffd40(%rip)
2dbb(5): call 0xffffe885(%rip)
2dc0(7): lea 0x58c1(%rip),%rcx
2dc7(7): lea 0x524b(%rip),%rdx
2dce(3): mov %rax,%rsi
2dd1(5): mov $0x1,%edi
2dd6(2): xor %eax,%eax
2dd8(5): call 0xffffea28(%rip)
2ddd(2): xor %esi,%esi
2ddf(5): mov $0x5,%edi
2de4(5): call 0xffffea0c(%rip)
2de9(3): test %rax,%rax
2dec(2): jz 0x1a(%rip)
2dee(7): lea 0x5232(%rip),%rsi
2df5(5): mov $0x3,%edx
2dfa(3): mov %rax,%rdi
2dfd(5): call 0xffffe7c3(%rip)
2e02(2): test %eax,%eax
2e04(2): jnz 0x45(%rip)
2e06(7): lea 0x521e(%rip),%rsi
2e0d(5): mov $0x5,%edx
2e12(2): xor %edi,%edi
2e14(7): lea 0x5184(%rip),%r12
2e1b(7): lea 0x519d(%rip),%rbx
2e22(5): call 0xffffe81e(%rip)
2e27(7): lea 0x5171(%rip),%rcx
2e2e(7): lea 0x5853(%rip),%rdx
2e35(3): mov %rax,%rsi
2e38(5): mov $0x1,%edi
2e3d(2): xor %eax,%eax
2e3f(5): call 0xffffe9c1(%rip)
2e44(5): jmp 0xffffff4a(%rip)
2e49(7): lea 0x514f(%rip),%r12
2e50(7): mov 0x208231(%rip),%r13
2e57(7): lea 0x5852(%rip),%rsi
2e5e(2): xor %edi,%edi
2e60(5): mov $0x5,%edx
2e65(5): call 0xffffe7db(%rip)
2e6a(3): mov %r13,%rsi
2e6d(3): mov %rax,%rdi
2e70(5): call 0xffffe8b0(%rip)
2e75(5): jmp 0xfffffed4(%rip)

"scan_arg" :
2e80(2): push %r15
2e82(2): push %r14
2e84(2): push %r13
2e86(2): push %r12
2e88(1): push %rbp
2e89(1): push %rbx
2e8a(3): mov %rsi,%rbx
2e8d(3): mov %rdi,%rbp
2e90(2): xor %esi,%esi
2e92(3): mov %rbx,%rdi
2e95(4): sub $0x48,%rsp
2e99(7): lea 0x340(%rip),%rcx
2ea0(5): lea 0x10(%rsp),%rdx
2ea5(9): mov $0x28,%rax
2eae(5): mov %rax,0x38(%rsp)
2eb3(2): xor %eax,%eax
2eb5(5): call 0x2a8b(%rip)
2eba(2): test %al,%al
2ebc(6): jz 0x2de(%rip)
2ec2(4): fld 0x10(%rsp),%st0
2ec6(2): fld %st0,%st0
2ec8(3): fstp %st0,(%rsp)
2ecb(2): fucomip %st0,%st0
2ecd(6): jp 0x27b(%rip)
2ed3(5): call 0xffffe9ed(%rip)
2ed8(3): mov (%rax),%rcx
2edb(2): jmp 0x9(%rip)
2edd(3): nop (%rax)
2ee0(4): add $0x1,%rbx
2ee4(3): movzx (%rbx),%edx
2ee7(5): test $0x20,0x1(%rcx,%rdx,2)
2eec(2): jnz 0xfffffff4(%rip)
2eee(3): cmp $0x2b,%dl
2ef1(2): jz 0xffffffef(%rip)
2ef3(5): mov $0x2e,%esi
2ef8(3): mov %rbx,%rdi
2efb(9): mov $0x0,0x20(%rsp)
2f04(8): mov $0x7fffffff,0x28(%rsp)
2f0c(5): call 0xffffe794(%rip)
2f11(3): test %rax,%rax
2f14(3): mov %rax,%r12
2f17(6): jz 0x173(%rip)
2f1d(7): lea 0x5147(%rip),%rsi
2f24(3): mov %rbx,%rdi
2f27(5): call 0xffffe7d9(%rip)
2f2c(4): cmp $0x0,0x0(%rbx,%rax,1)
2f30(6): jnz 0x120(%rip)
2f36(2): fld1 %st0
2f38(3): fld (%rsp),%st0
2f3b(2): fmul %st1
2f3d(2): fucomip %st1,%st0
2f3f(2): fstp %st0,%st0
2f41(6): jp 0x10f(%rip)
2f47(6): jnz 0x109(%rip)
2f4d(4): or $0xffffffff,%r15
2f51(2): xor %eax,%eax
2f53(3): mov %rbx,%rdi
2f56(3): mov %r15,%rcx
2f59(2): REPNZ scasb rdi(%es,10),%al
2f5b(3): test %r12,%r12
2f5e(3): mov %rcx,%rax
2f61(3): not %rax
2f64(4): lea 0x0(%rax,%r15,1),%r13
2f68(5): mov %r13,0x20(%rsp)
2f6d(6): jz 0x152(%rip)
2f73(5): lea 0x1(%r12),%rdi
2f78(7): lea 0x50ef(%rip),%rsi
2f7f(5): call 0xffffe781(%rip)
2f84(6): cmp $0x7fffffff,%rax
2f8a(3): mov %rax,%r14
2f8d(6): jbe 0x120(%rip)
2f93(3): cmp %r12,%rbx
2f96(6): jz 0x1a7(%rip)
2f9c(6): movsx 0xffffffff(%r12),%eax
2fa2(3): xor %r15d,%r15d
2fa5(3): sub $0x30,%eax
2fa8(3): cmp $0x9,%eax
2fab(4): setnbe %r15b
2faf(3): add %r15,%r13
2fb2(5): mov %r13,0x20(%rsp)
2fb7(5): mov $0x65,%esi
2fbc(3): mov %rbx,%rdi
2fbf(5): call 0xffffe6e1(%rip)
2fc4(3): test %rax,%rax
2fc7(3): mov %rax,%r13
2fca(6): jz 0xfd(%rip)
2fd0(4): lea 0x1(%r13),%rdi
2fd4(5): mov $0xa,%edx
2fd9(2): xor %esi,%esi
2fdb(5): call 0xffffe775(%rip)
2fe0(3): mov %r13,%r8
2fe3(3): mov %rax,%rdx
2fe6(4): mov 0x28(%rsp),%ecx
2fea(3): sub %rbx,%r8
2fed(3): test %rax,%rax
2ff0(6): js 0xf5(%rip)
2ff6(3): movsxd %ecx,%rax
2ff9(2): mov %ecx,%esi
2ffb(3): mov %rbx,%rdi
2ffe(3): cmp %rdx,%rax
3001(4): cmovnl %rdx,%rax
3005(4): or $0xffffffff,%rcx
3009(2): sub %eax,%esi
300b(2): xor %eax,%eax
300d(4): mov %esi,0x28(%rsp)
3011(2): REPNZ scasb rdi(%es,10),%al
3013(5): mov 0x20(%rsp),%rax
3018(3): add %r8,%rax
301b(3): test %r12,%r12
301e(4): setnz %dil
3022(3): test %r14,%r14
3025(5): lea 0x2(%rcx,%rax,1),%rax
302a(3): setnz %cl
302d(3): test %cl,%dil
3030(5): mov %rax,0x20(%rsp)
3035(2): jz 0xa(%rip)
3037(2): test %esi,%esi
3039(6): jz 0xeb(%rip)
303f(3): cmp %r14,%rdx
3042(4): cmovbe %rdx,%r14
3046(3): sub %r14,%rdx
3049(5): add %rdx,0x20(%rsp)
304e(2): nop 
3050(6): movdqa 0x10(%rsp),%xmm0
3056(3): mov %rbp,%rax
3059(5): mov 0x38(%rsp),%rsi
305e(9): xor $0x28,%rsi
3067(4): movaps %xmm0,0x0(%rbp)
306b(6): movdqa 0x20(%rsp),%xmm0
3071(4): movaps %xmm0,0x10(%rbp)
3075(6): jnz 0x15e(%rip)
307b(4): add $0x48,%rsp
307f(1): pop %rbx
3080(1): pop %rbp
3081(2): pop %r12
3083(2): pop %r13
3085(2): pop %r14
3087(2): pop %r15
3089(1): ret near (%rsp)
308a(5): mov $0x70,%esi
308f(3): mov %rbx,%rdi
3092(5): call 0xffffe60e(%rip)
3097(3): test %rax,%rax
309a(6): jnz 0xfffffe83(%rip)
30a0(8): mov $0x0,0x28(%rsp)
30a8(5): jmp 0xfffffe75(%rip)
30ad(3): test %rax,%rax
30b0(4): mov %eax,0x28(%rsp)
30b4(6): jz 0xfffffefb(%rip)
30ba(5): jmp 0xfffffed9(%rip)
30bf(3): xor %r14d,%r14d
30c2(5): jmp 0xfffffef5(%rip)
30c7(5): mov $0x45,%esi
30cc(3): mov %rbx,%rdi
30cf(5): call 0xffffe5d1(%rip)
30d4(3): test %rax,%rax
30d7(3): mov %rax,%r13
30da(6): jz 0xffffff76(%rip)
30e0(5): jmp 0xfffffef0(%rip)
30e5(2): sub %eax,%ecx
30e7(3): mov %rbx,%rdi
30ea(2): xor %eax,%eax
30ec(4): mov %ecx,0x28(%rsp)
30f0(4): or $0xffffffff,%rcx
30f4(2): REPNZ scasb rdi(%es,10),%al
30f6(5): mov 0x20(%rsp),%rax
30fb(3): add %r8,%rax
30fe(3): test %r12,%r12
3101(5): lea 0x2(%rcx,%rax,1),%rax
3106(2): jz 0x2c(%rip)
3108(4): add $0x1,%r12
310c(4): lea 0x1(%rax),%rcx
3110(3): cmp %r12,%r13
3113(4): cmove %rcx,%rax
3117(5): mov %rax,0x20(%rsp)
311c(3): neg %rdx
311f(5): jmp 0xffffff2a(%rip)
3124(4): sub $0x1,%rax
3128(5): mov %rax,0x20(%rsp)
312d(5): jmp 0xffffff12(%rip)
3132(4): add $0x1,%rax
3136(5): mov %rax,0x20(%rsp)
313b(2): jmp 0xffffffe1(%rip)
313d(6): mov $0x1,%r15d
3143(5): jmp 0xfffffe6c(%rip)
3148(3): mov %rbx,%rsi
314b(5): mov $0x1,%edi
3150(5): call 0x1f00(%rip)
3155(7): lea 0x4eea(%rip),%rsi
315c(2): xor %edi,%edi
315e(3): mov %rax,%rbp
3161(5): call 0x1eef(%rip)
3166(7): lea 0x4ee6(%rip),%rsi
316d(3): mov %rax,%rbx
3170(5): mov $0x5,%edx
3175(2): xor %edi,%edi
3177(5): call 0xffffe4c9(%rip)
317c(2): xor %edi,%edi
317e(3): mov %rax,%rdx
3181(3): mov %rbp,%r8
3184(3): mov %rbx,%rcx
3187(2): xor %esi,%esi
3189(2): xor %eax,%eax
318b(5): call 0xffffe6b5(%rip)
3190(5): mov $0x1,%edi
3195(5): call 0xfffff90b(%rip)
319a(3): mov %rbx,%rdi
319d(5): call 0x1ed3(%rip)
31a2(7): lea 0x5587(%rip),%rsi
31a9(3): mov %rax,%rbx
31ac(5): mov $0x5,%edx
31b1(2): xor %edi,%edi
31b3(5): call 0xffffe48d(%rip)
31b8(2): xor %edi,%edi
31ba(3): mov %rax,%rdx
31bd(3): mov %rbx,%rcx
31c0(2): xor %esi,%esi
31c2(2): xor %eax,%eax
31c4(5): call 0xffffe67c(%rip)
31c9(5): mov $0x1,%edi
31ce(5): call 0xfffff8d2(%rip)
31d3(5): call 0xffffe49d(%rip)

"cl_strtold" :
31e0(2): push %r13
31e2(2): push %r12
31e4(1): push %rbp
31e5(1): push %rbx
31e6(3): mov %rsi,%rbx
31e9(3): mov %rdi,%rbp
31ec(4): sub $0x38,%rsp
31f0(5): lea 0x18(%rsp),%rsi
31f5(9): mov $0x28,%rax
31fe(5): mov %rax,0x28(%rsp)
3203(2): xor %eax,%eax
3205(5): call 0xffffe62b(%rip)
320a(5): mov 0x18(%rsp),%rax
320f(2): fld %st0,%st0
3211(3): cmp $0x0,(%rax)
3214(2): jnz 0x2c(%rip)
3216(2): fstp %st0,%st1
3218(3): test %rbx,%rbx
321b(2): jz 0xa(%rip)
321d(5): mov 0x18(%rsp),%rax
3222(3): mov %rax,(%rbx)
3225(5): mov 0x28(%rsp),%rax
322a(9): xor $0x28,%rax
3233(2): jnz 0x4d(%rip)
3235(4): add $0x38,%rsp
3239(1): pop %rbx
323a(1): pop %rbp
323b(2): pop %r12
323d(2): pop %r13
323f(1): ret near (%rsp)
3240(2): fstp %st0,%st0
3242(3): fstp %st0,(%rsp)
3245(5): call 0xffffe36b(%rip)
324a(5): lea 0x20(%rsp),%rsi
324f(3): mov %rbp,%rdi
3252(3): mov %rax,%r12
3255(3): mov (%rax),%r13d
3258(5): call 0x2978(%rip)
325d(5): mov 0x20(%rsp),%rax
3262(5): cmp %rax,0x18(%rsp)
3267(3): fld (%rsp),%st0
326a(2): jnb 0xe(%rip)
326c(2): fstp %st0,%st0
326e(5): mov %rax,0x18(%rsp)
3273(2): jmp 0xffffffa5(%rip)
3275(3): nop (%rax)
3278(2): fstp %st0,%st1
327a(4): mov %r13d,(%r12)
327e(2): jmp 0xffffff9a(%rip)
3280(2): fstp %st0,%st0
3282(5): call 0xffffe3ee(%rip)

"close_stdout_set_file_name" :
3290(7): mov %rdi,0x207e71(%rip)
3297(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
32a0(7): mov %dil,0x207e59(%rip)
32a7(1): ret near (%rsp)

"close_stdout" :
32b0(1): push %rbp
32b1(1): push %rbx
32b2(4): sub $0x8,%rsp
32b6(7): mov 0x207dcb(%rip),%rdi
32bd(5): call 0x29d3(%rip)
32c2(2): test %eax,%eax
32c4(2): jz 0x18(%rip)
32c6(5): call 0xffffe2ea(%rip)
32cb(7): cmp $0x0,0x207e2e(%rip)
32d2(3): mov %rax,%rbx
32d5(2): jz 0x1e(%rip)
32d7(3): cmp $0x20,(%rax)
32da(2): jnz 0x19(%rip)
32dc(7): mov 0x207ddd(%rip),%rdi
32e3(5): call 0x29ad(%rip)
32e8(2): test %eax,%eax
32ea(2): jnz 0x48(%rip)
32ec(4): add $0x8,%rsp
32f0(1): pop %rbx
32f1(1): pop %rbp
32f2(1): ret near (%rsp)
32f3(7): lea 0x4c95(%rip),%rsi
32fa(2): xor %edi,%edi
32fc(5): mov $0x5,%edx
3301(5): call 0xffffe33f(%rip)
3306(7): mov 0x207dfb(%rip),%rdi
330d(3): mov %rax,%rbp
3310(3): test %rdi,%rdi
3313(2): jz 0x2a(%rip)
3315(5): call 0x1b5b(%rip)
331a(2): mov (%rbx),%esi
331c(7): lea 0x54f5(%rip),%rdx
3323(3): mov %rax,%rcx
3326(3): mov %rbp,%r8
3329(2): xor %edi,%edi
332b(2): xor %eax,%eax
332d(5): call 0xffffe513(%rip)
3332(6): mov 0x207ce0(%rip),%edi
3338(5): call 0xffffe298(%rip)
333d(2): mov (%rbx),%esi
333f(7): lea 0x54d6(%rip),%rdx
3346(3): mov %rax,%rcx
3349(2): xor %edi,%edi
334b(2): xor %eax,%eax
334d(5): call 0xffffe4f3(%rip)
3352(2): jmp 0xffffffe0(%rip)

"set_program_name" :
3360(3): test %rdi,%rdi
3363(1): push %rbx
3364(2): jz 0x79(%rip)
3366(5): mov $0x2f,%esi
336b(3): mov %rdi,%rbx
336e(5): call 0xffffe352(%rip)
3373(3): test %rax,%rax
3376(2): jz 0x57(%rip)
3378(4): lea 0x1(%rax),%r8
337c(3): mov %r8,%rdx
337f(3): sub %rbx,%rdx
3382(4): cmp $0x6,%rdx
3386(2): jle 0x47(%rip)
3388(4): lea 0xfffffffa(%rax),%rsi
338c(7): lea 0x54c5(%rip),%rdi
3393(5): mov $0x7,%ecx
3398(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
339a(3): setnbe %dl
339d(3): sbb $0x0,%dl
33a0(2): test %dl,%dl
33a2(2): jnz 0x2b(%rip)
33a4(7): lea 0x54b5(%rip),%rdi
33ab(5): mov $0x3,%ecx
33b0(3): mov %r8,%rsi
33b3(3): mov %r8,%rbx
33b6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
33b8(3): setnbe %dl
33bb(3): sbb $0x0,%dl
33be(2): test %dl,%dl
33c0(2): jnz 0xd(%rip)
33c2(4): lea 0x4(%rax),%rbx
33c6(7): mov %rbx,0x207cb3(%rip)
33cd(7): mov %rbx,0x207d3c(%rip)
33d4(7): mov %rbx,0x207cc5(%rip)
33db(1): pop %rbx
33dc(1): ret near (%rsp)
33dd(7): mov 0x207cdc(%rip),%rcx
33e4(7): lea 0x5435(%rip),%rdi
33eb(5): mov $0x37,%edx
33f0(5): mov $0x1,%esi
33f5(5): call 0xffffe48b(%rip)
33fa(5): call 0xffffe1a6(%rip)

"gettext_quote.part.1" :
3400(1): push %rbp
3401(1): push %rbx
3402(3): mov %rdi,%rbp
3405(2): mov %esi,%ebx
3407(4): sub $0x8,%rsp
340b(5): call 0x2965(%rip)
3410(3): movzx (%rax),%edx
3413(3): and $0xdf,%edx
3416(3): cmp $0x55,%dl
3419(2): jz 0x77(%rip)
341b(3): cmp $0x47,%dl
341e(2): jz 0x22(%rip)
3420(7): lea 0x544c(%rip),%rax
3427(7): lea 0x4cb9(%rip),%rdx
342e(3): cmp $0x9,%ebx
3431(4): cmovne %rdx,%rax
3435(4): add $0x8,%rsp
3439(1): pop %rbx
343a(1): pop %rbp
343b(1): ret near (%rsp)
343c(4): nop 0x0(%rax)
3440(4): movzx 0x1(%rax),%edx
3444(3): and $0xdf,%edx
3447(3): cmp $0x42,%dl
344a(2): jnz 0xffffffd6(%rip)
344c(4): cmp $0x31,0x2(%rax)
3450(2): jnz 0xffffffd0(%rip)
3452(4): cmp $0x38,0x3(%rax)
3456(2): jnz 0xffffffca(%rip)
3458(4): cmp $0x30,0x4(%rax)
345c(2): jnz 0xffffffc4(%rip)
345e(4): cmp $0x33,0x5(%rax)
3462(2): jnz 0xffffffbe(%rip)
3464(4): cmp $0x30,0x6(%rax)
3468(2): jnz 0xffffffb8(%rip)
346a(4): cmp $0x0,0x7(%rax)
346e(2): jnz 0xffffffb2(%rip)
3470(4): cmp $0x60,0x0(%rbp)
3474(7): lea 0x53f1(%rip),%rax
347b(7): lea 0x53ee(%rip),%rdx
3482(4): cmovne %rdx,%rax
3486(4): add $0x8,%rsp
348a(1): pop %rbx
348b(1): pop %rbp
348c(1): ret near (%rsp)
348d(3): nop (%rax)
3490(4): movzx 0x1(%rax),%edx
3494(3): and $0xdf,%edx
3497(3): cmp $0x54,%dl
349a(2): jnz 0xffffff86(%rip)
349c(4): movzx 0x2(%rax),%edx
34a0(3): and $0xdf,%edx
34a3(3): cmp $0x46,%dl
34a6(6): jnz 0xffffff7a(%rip)
34ac(4): cmp $0x2d,0x3(%rax)
34b0(6): jnz 0xffffff70(%rip)
34b6(4): cmp $0x38,0x4(%rax)
34ba(6): jnz 0xffffff66(%rip)
34c0(4): cmp $0x0,0x5(%rax)
34c4(6): jnz 0xffffff5c(%rip)
34ca(4): cmp $0x60,0x0(%rbp)
34ce(7): lea 0x538f(%rip),%rax
34d5(7): lea 0x538c(%rip),%rdx
34dc(4): cmovne %rdx,%rax
34e0(4): add $0x8,%rsp
34e4(1): pop %rbx
34e5(1): pop %rbp
34e6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
34f0(2): push %r15
34f2(2): push %r14
34f4(3): mov %r8d,%r15d
34f7(2): push %r13
34f9(2): push %r12
34fb(3): mov %rdi,%r14
34fe(1): push %rbp
34ff(1): push %rbx
3500(3): mov %r9d,%ebx
3503(3): mov %rsi,%r13
3506(3): mov %rcx,%rbp
3509(3): and $0x2,%ebx
350c(7): sub $0xb8,%rsp
3513(8): mov 0xf0(%rsp),%rax
351b(5): mov %rdx,0x10(%rsp)
3520(5): mov %r8d,0x8(%rsp)
3525(5): mov %r9d,0x78(%rsp)
352a(5): mov %rax,0x20(%rsp)
352f(8): mov 0xf8(%rsp),%rax
3537(5): mov %rax,0x68(%rsp)
353c(8): mov 0x100(%rsp),%rax
3544(5): mov %rax,0x60(%rsp)
3549(9): mov $0x28,%rax
3552(8): mov %rax,0xa8(%rsp)
355a(2): xor %eax,%eax
355c(5): call 0xffffe0f4(%rip)
3561(4): cmp $0xa,%r15d
3565(5): mov %rax,0x58(%rsp)
356a(6): jnbe 0x11b5(%rip)
3570(7): lea 0x5369(%rip),%rcx
3577(3): mov %r15d,%edx
357a(4): movsxd 0x0(%rcx,%rdx,4),%rax
357e(3): add %rcx,%rax
3581(2): jmp %rax
3583(5): mov $0x1,0xe(%rsp)
3588(5): mov $0x0,0x7c(%rsp)
358d(3): xor %r12d,%r12d
3590(9): mov $0x0,0x50(%rsp)
3599(5): mov $0x1,0xf(%rsp)
359e(5): mov $0x0,0xd(%rsp)
35a3(7): lea 0x4b3d(%rip),%rax
35aa(9): mov $0x1,0x18(%rsp)
35b3(3): xor %r15d,%r15d
35b6(8): mov $0x2,0x8(%rsp)
35be(5): mov %rax,0x48(%rsp)
35c3(3): xor %r11d,%r11d
35c6(3): mov %rbp,%rax
35c9(3): mov %r12d,%r8d
35cc(3): mov %r11,%rbp
35cf(3): mov %rax,%r11
35d2(6): nop 0x0(%rax,%rax,1)
35d8(3): cmp %rbp,%r11
35db(4): setnz %r12b
35df(4): cmp $0xffffffff,%r11
35e3(2): jnz 0xf(%rip)
35e5(5): mov 0x10(%rsp),%rax
35ea(4): cmp $0x0,0x0(%rax,%rbp,1)
35ee(4): setnz %r12b
35f2(3): test %r12b,%r12b
35f5(6): jz 0x65b(%rip)
35fb(5): cmp $0x2,0x8(%rsp)
3600(5): mov 0x10(%rsp),%rdi
3605(4): lea 0x0(%rdi,%rbp,1),%r9
3609(3): setnz %al
360c(4): and 0xd(%rsp),%al
3610(3): mov %eax,%r10d
3613(6): jz 0xad(%rip)
3619(5): mov 0x18(%rsp),%rax
361e(3): test %rax,%rax
3621(6): jz 0x42f(%rip)
3627(4): cmp $0xffffffff,%r11
362b(5): lea 0x0(%rbp,%rax,1),%rbx
3630(2): jnz 0x30(%rip)
3632(4): cmp $0x1,%rax
3636(2): jbe 0x2a(%rip)
3638(5): mov %r8b,0x38(%rsp)
363d(5): mov %r10b,0x30(%rsp)
3642(5): mov %r9,0x28(%rsp)
3647(5): call 0xffffe019(%rip)
364c(6): movzx 0x38(%rsp),%r8d
3652(6): movzx 0x30(%rsp),%r10d
3658(3): mov %rax,%r11
365b(5): mov 0x28(%rsp),%r9
3660(3): cmp %r11,%rbx
3663(5): mov %r10b,0x28(%rsp)
3668(6): jnbe 0x5b8(%rip)
366e(5): mov 0x18(%rsp),%rdx
3673(5): mov 0x48(%rsp),%rsi
3678(3): mov %r9,%rdi
367b(5): mov %r11,0x40(%rsp)
3680(5): mov %r8b,0x38(%rsp)
3685(5): mov %r9,0x30(%rsp)
368a(5): call 0xffffe086(%rip)
368f(2): test %eax,%eax
3691(5): mov 0x30(%rsp),%r9
3696(6): movzx 0x38(%rsp),%r8d
369c(5): mov 0x40(%rsp),%r11
36a1(6): jnz 0x57f(%rip)
36a7(5): cmp $0x0,0xf(%rsp)
36ac(6): movzx 0x28(%rsp),%r10d
36b2(6): jnz 0xf83(%rip)
36b8(8): nop 0x0(%rax,%rax,1)
36c0(4): movzx (%r9),%ebx
36c4(3): cmp $0x7e,%bl
36c7(6): jnbe 0x321(%rip)
36cd(7): lea 0x5238(%rip),%rcx
36d4(3): movzx %bl,%edx
36d7(4): movsxd 0x0(%rcx,%rdx,4),%rax
36db(3): add %rcx,%rax
36de(2): jmp %rax
36e0(3): xor %r10d,%r10d
36e3(4): cmp $0x1,%r11
36e7(3): setnz %al
36ea(4): cmp $0xffffffff,%r11
36ee(2): jnz 0xe(%rip)
36f0(5): mov 0x10(%rsp),%rax
36f5(4): cmp $0x0,0x1(%rax)
36f9(3): setnz %al
36fc(5): cmp $0x2,0x8(%rsp)
3701(3): setz %dl
3704(2): test %al,%al
3706(6): jz 0x252(%rip)
370c(3): xor %r12d,%r12d
370f(2): xor %eax,%eax
3711(7): nop 0x0(%rax)
3718(5): cmp $0x1,0xd(%rsp)
371d(6): jnz 0x115(%rip)
3723(2): test %dl,%dl
3725(6): jnz 0x10d(%rip)
372b(5): mov 0x20(%rsp),%rsi
3730(3): test %rsi,%rsi
3733(2): jz 0x16(%rip)
3735(2): mov %ebx,%edx
3737(3): shr $0x5,%dl
373a(3): movzx %dl,%edx
373d(3): mov 0x0(%rsi,%rdx,4),%edx
3740(3): bt %ebx,%edx
3743(6): jb 0x150(%rip)
3749(3): test %r10b,%r10b
374c(6): jnz 0x147(%rip)
3752(3): xor $0x1,%eax
3755(4): add $0x1,%rbp
3759(3): and %r8d,%eax
375c(2): test %al,%al
375e(2): jz 0x22(%rip)
3760(3): cmp %r15,%r13
3763(2): jbe 0x7(%rip)
3765(5): mov $0x27,0x0(%r14,%r15,1)
376a(4): lea 0x1(%r15),%rax
376e(3): cmp %rax,%r13
3771(2): jbe 0x8(%rip)
3773(6): mov $0x27,0x1(%r14,%r15,1)
3779(4): add $0x2,%r15
377d(3): xor %r8d,%r8d
3780(3): cmp %r13,%r15
3783(2): jnb 0x6(%rip)
3785(4): mov %bl,0x0(%r14,%r15,1)
3789(5): movzx 0xe(%rsp),%edi
378e(4): add $0x1,%r15
3792(5): mov $0x0,%eax
3797(3): test %r12b,%r12b
379a(3): cmove %eax,%edi
379d(5): mov %dil,0xe(%rsp)
37a2(5): jmp 0xfffffe36(%rip)
37a7(9): nop 0x0(%rax,%rax,1)
37b0(3): xor %r10d,%r10d
37b3(4): mov 0x8(%rsp),%eax
37b7(3): cmp $0x2,%eax
37ba(6): jz 0x5be(%rip)
37c0(3): cmp $0x5,%eax
37c3(6): jz 0x575(%rip)
37c9(3): cmp $0x2,%eax
37cc(5): mov $0x3f,%ebx
37d1(3): setz %dl
37d4(3): xor %r12d,%r12d
37d7(2): xor %eax,%eax
37d9(5): jmp 0xffffff3f(%rip)
37de(2): nop 
37e0(3): xor %r10d,%r10d
37e3(5): cmp $0x2,0x8(%rsp)
37e8(6): jz 0x508(%rip)
37ee(5): mov %r12b,0x7c(%rsp)
37f3(2): xor %edx,%edx
37f5(2): xor %eax,%eax
37f7(5): mov $0x27,%ebx
37fc(5): jmp 0xffffff1c(%rip)
3801(7): nop 0x0(%rax)
3808(5): mov $0x9,%edx
380d(5): mov $0x74,%ebx
3812(5): cmp $0x2,0x8(%rsp)
3817(3): setz %al
381a(4): and 0xf(%rsp),%al
381e(6): jnz 0x150(%rip)
3824(5): cmp $0x0,0xd(%rsp)
3829(2): jnz 0x67(%rip)
382b(2): mov %edx,%ebx
382d(3): xor %r12d,%r12d
3830(2): xor %eax,%eax
3832(5): cmp $0x0,0xf(%rsp)
3837(6): jnz 0xfffffef4(%rip)
383d(5): jmp 0xffffff0c(%rip)
3842(6): nop 0x0(%rax,%rax,1)
3848(5): mov $0x8,%edx
384d(5): mov $0x62,%ebx
3852(2): jmp 0xffffffd2(%rip)
3854(4): nop 0x0(%rax)
3858(5): cmp $0x2,0x8(%rsp)
385d(6): jz 0x3d3(%rip)
3863(5): cmp $0x0,0xd(%rsp)
3868(6): jz 0x218(%rip)
386e(5): cmp $0x0,0xf(%rsp)
3873(6): jz 0x20d(%rip)
3879(6): cmp $0x0,0x18(%rsp)
387f(6): jnz 0x3bc(%rip)
3885(5): mov $0x5c,%ebx
388a(6): nop 0x0(%rax,%rax,1)
3890(3): xor %r12d,%r12d
3893(5): cmp $0x2,0x8(%rsp)
3898(3): setz %dl
389b(5): cmp $0x0,0xf(%rsp)
38a0(2): mov %edx,%eax
38a2(6): jnz 0x856(%rip)
38a8(3): mov %r8d,%eax
38ab(3): xor $0x1,%eax
38ae(2): and %dl,%al
38b0(2): jz 0x31(%rip)
38b2(3): cmp %r15,%r13
38b5(2): jbe 0x7(%rip)
38b7(5): mov $0x27,0x0(%r14,%r15,1)
38bc(4): lea 0x1(%r15),%rdx
38c0(3): cmp %rdx,%r13
38c3(2): jbe 0x8(%rip)
38c5(6): mov $0x24,0x1(%r14,%r15,1)
38cb(4): lea 0x2(%r15),%rdx
38cf(3): cmp %rdx,%r13
38d2(2): jbe 0x8(%rip)
38d4(6): mov $0x27,0x2(%r14,%r15,1)
38da(4): add $0x3,%r15
38de(3): mov %eax,%r8d
38e1(3): cmp %r15,%r13
38e4(2): jbe 0x7(%rip)
38e6(5): mov $0x5c,0x0(%r14,%r15,1)
38eb(4): add $0x1,%r15
38ef(4): add $0x1,%rbp
38f3(5): jmp 0xfffffe8d(%rip)
38f8(8): nop 0x0(%rax,%rax,1)
3900(5): cmp $0x0,0xd(%rsp)
3905(6): jnz 0x1ce(%rip)
390b(2): xor %edx,%edx
390d(5): test $0x1,0x78(%rsp)
3912(6): jz 0xffffff19(%rip)
3918(4): add $0x1,%rbp
391c(5): jmp 0xfffffcbc(%rip)
3921(7): nop 0x0(%rax)
3928(5): cmp $0x2,0x8(%rsp)
392d(3): setz %dl
3930(2): xor %eax,%eax
3932(5): jmp 0xfffffde6(%rip)
3937(9): nop 0x0(%rax,%rax,1)
3940(5): mov $0x7,%edx
3945(5): mov $0x61,%ebx
394a(5): jmp 0xfffffeda(%rip)
394f(1): nop 
3950(5): cmp $0x2,0x8(%rsp)
3955(3): setz %dl
3958(3): test %rbp,%rbp
395b(6): jnz 0xfffffdb1(%rip)
3961(5): movzx 0xf(%rsp),%eax
3966(2): and %dl,%al
3968(6): jz 0xfffffdb0(%rip)
396e(3): mov %r11,%rbp
3971(8): mov $0x2,0x8(%rsp)
3979(5): jmp 0x700(%rip)
397e(2): nop 
3980(5): cmp $0x2,0x8(%rsp)
3985(3): setz %dl
3988(3): xor %r12d,%r12d
398b(2): jmp 0xffffffd6(%rip)
398d(3): nop (%rax)
3990(5): cmp $0x2,0x8(%rsp)
3995(5): mov $0x20,%ebx
399a(3): setz %dl
399d(2): jmp 0xffffffc4(%rip)
399f(1): nop 
39a0(5): mov $0xd,%edx
39a5(5): mov $0x72,%ebx
39aa(5): jmp 0xfffffe68(%rip)
39af(1): nop 
39b0(5): mov $0xc,%edx
39b5(5): mov $0x66,%ebx
39ba(5): jmp 0xfffffe6a(%rip)
39bf(1): nop 
39c0(5): mov $0xb,%edx
39c5(5): mov $0x76,%ebx
39ca(5): jmp 0xfffffe5a(%rip)
39cf(1): nop 
39d0(5): mov $0xa,%edx
39d5(5): mov $0x6e,%ebx
39da(5): jmp 0xfffffe38(%rip)
39df(1): nop 
39e0(3): xor %r10d,%r10d
39e3(5): nop 0x0(%rax,%rax,1)
39e8(6): cmp $0x1,0x58(%rsp)
39ee(6): jnz 0x3aa(%rip)
39f4(5): mov %r11,0x38(%rsp)
39f9(5): mov %r8b,0x30(%rsp)
39fe(5): mov %r10b,0x28(%rsp)
3a03(5): call 0xffffdebd(%rip)
3a08(3): mov (%rax),%rcx
3a0b(3): movzx %bl,%edx
3a0e(6): movzx 0x28(%rsp),%r10d
3a14(6): movzx 0x30(%rsp),%r8d
3a1a(5): mov 0x38(%rsp),%r11
3a1f(5): mov $0x1,%edi
3a24(4): movzx 0x0(%rcx,%rdx,2),%eax
3a28(4): and $0x4000,%ax
3a2c(4): setnz %r12b
3a30(3): setz %al
3a33(4): and 0xd(%rsp),%al
3a37(2): test %al,%al
3a39(6): jnz 0x998(%rip)
3a3f(5): cmp $0x2,0x8(%rsp)
3a44(3): setz %dl
3a47(5): jmp 0xfffffcd1(%rip)
3a4c(4): nop 0x0(%rax)
3a50(4): movzx (%r9),%ebx
3a54(3): cmp $0x7e,%bl
3a57(2): jnbe 0xffffff89(%rip)
3a59(7): lea 0x50a8(%rip),%rcx
3a60(3): movzx %bl,%edx
3a63(4): movsxd 0x0(%rcx,%rdx,4),%rax
3a67(3): add %rcx,%rax
3a6a(2): jmp %rax
3a6c(4): nop 0x0(%rax)
3a70(3): xor %r10d,%r10d
3a73(5): cmp $0x0,0xd(%rsp)
3a78(6): jnz 0xfffffdf6(%rip)
3a7e(2): nop 
3a80(5): mov $0x5c,%edx
3a85(5): mov $0x5c,%ebx
3a8a(5): jmp 0xfffffd9a(%rip)
3a8f(1): nop 
3a90(5): mov $0xc,%edx
3a95(3): xor %r10d,%r10d
3a98(5): mov $0x66,%ebx
3a9d(5): jmp 0xfffffd87(%rip)
3aa2(6): nop 0x0(%rax,%rax,1)
3aa8(5): mov $0xa,%edx
3aad(3): xor %r10d,%r10d
3ab0(5): mov $0x6e,%ebx
3ab5(5): jmp 0xfffffd5d(%rip)
3aba(6): nop 0x0(%rax,%rax,1)
3ac0(5): mov $0x61,%ebx
3ac5(5): jmp 0xfffffdcb(%rip)
3aca(6): nop 0x0(%rax,%rax,1)
3ad0(3): xor %r10d,%r10d
3ad3(5): cmp $0x2,0x8(%rsp)
3ad8(3): setz %dl
3adb(5): cmp $0x0,0xf(%rsp)
3ae0(6): jnz 0xb9a(%rip)
3ae6(3): mov %r8d,%eax
3ae9(3): mov %r15,%rcx
3aec(3): xor $0x1,%eax
3aef(2): and %dl,%al
3af1(2): jz 0x2f(%rip)
3af3(3): cmp %r15,%r13
3af6(2): jbe 0x7(%rip)
3af8(5): mov $0x27,0x0(%r14,%r15,1)
3afd(4): lea 0x1(%r15),%rcx
3b01(3): cmp %rcx,%r13
3b04(2): jbe 0x8(%rip)
3b06(6): mov $0x24,0x1(%r14,%r15,1)
3b0c(4): lea 0x2(%r15),%rcx
3b10(3): cmp %rcx,%r13
3b13(6): jnbe 0x636(%rip)
3b19(4): lea 0x3(%r15),%rcx
3b1d(3): mov %eax,%r8d
3b20(3): cmp %rcx,%r13
3b23(2): jbe 0x7(%rip)
3b25(5): mov $0x5c,0x0(%r14,%rcx,1)
3b2a(5): cmp $0x2,0x8(%rsp)
3b2f(4): lea 0x1(%rcx),%r15
3b33(6): jz 0x606(%rip)
3b39(4): lea 0x1(%rbp),%rax
3b3d(3): cmp %r11,%rax
3b40(2): jnb 0x1b(%rip)
3b42(5): mov 0x10(%rsp),%rax
3b47(5): movzx 0x1(%rax,%rbp,1),%eax
3b4c(4): mov %al,0x28(%rsp)
3b50(3): sub $0x30,%eax
3b53(2): cmp $0x9,%al
3b55(6): jbe 0x834(%rip)
3b5b(3): mov %r12d,%eax
3b5e(5): mov $0x30,%ebx
3b63(3): xor %r12d,%r12d
3b66(5): jmp 0xfffffbb2(%rip)
3b6b(5): nop 0x0(%rax,%rax,1)
3b70(5): cmp $0x2,0x8(%rsp)
3b75(3): mov %r10d,%r12d
3b78(3): setz %dl
3b7b(3): xor %r10d,%r10d
3b7e(2): xor %eax,%eax
3b80(5): jmp 0xfffffb98(%rip)
3b85(3): nop (%rax)
3b88(5): cmp $0x2,0x8(%rsp)
3b8d(3): setz %dl
3b90(3): xor %r10d,%r10d
3b93(5): jmp 0xfffffdc5(%rip)
3b98(8): nop 0x0(%rax,%rax,1)
3ba0(5): cmp $0x2,0x8(%rsp)
3ba5(3): setz %dl
3ba8(3): xor %r10d,%r10d
3bab(3): xor %r12d,%r12d
3bae(5): jmp 0xfffffdb3(%rip)
3bb3(5): nop 0x0(%rax,%rax,1)
3bb8(5): cmp $0x2,0x8(%rsp)
3bbd(3): mov %r10d,%r12d
3bc0(5): mov $0x20,%ebx
3bc5(3): setz %dl
3bc8(3): xor %r10d,%r10d
3bcb(5): jmp 0xfffffd96(%rip)
3bd0(5): mov $0xd,%edx
3bd5(3): xor %r10d,%r10d
3bd8(5): mov $0x72,%ebx
3bdd(5): jmp 0xfffffc35(%rip)
3be2(6): nop 0x0(%rax,%rax,1)
3be8(5): mov $0x76,%ebx
3bed(5): jmp 0xfffffca3(%rip)
3bf2(6): nop 0x0(%rax,%rax,1)
3bf8(5): mov $0x9,%edx
3bfd(3): xor %r10d,%r10d
3c00(5): mov $0x74,%ebx
3c05(5): jmp 0xfffffc0d(%rip)
3c0a(6): nop 0x0(%rax,%rax,1)
3c10(5): mov $0x62,%ebx
3c15(5): jmp 0xfffffc7b(%rip)
3c1a(6): nop 0x0(%rax,%rax,1)
3c20(3): xor %r10d,%r10d
3c23(5): jmp 0xfffffa9d(%rip)
3c28(8): nop 0x0(%rax,%rax,1)
3c30(5): cmp $0x0,0xf(%rsp)
3c35(6): jnz 0x96b(%rip)
3c3b(4): add $0x1,%rbp
3c3f(3): mov %r8d,%eax
3c42(3): xor %r12d,%r12d
3c45(5): mov $0x5c,%ebx
3c4a(5): jmp 0xfffffb12(%rip)
3c4f(1): nop 
3c50(5): cmp $0x2,0x8(%rsp)
3c55(5): movzx 0xf(%rsp),%ebx
3c5a(3): mov %r8d,%r12d
3c5d(3): mov %r11,%rbp
3c60(3): setz %dl
3c63(2): mov %ebx,%eax
3c65(3): test %r15,%r15
3c68(3): setz %cl
3c6b(2): and %edx,%eax
3c6d(2): and %cl,%al
3c6f(6): jnz 0xa67(%rip)
3c75(2): mov %ebx,%eax
3c77(3): xor $0x1,%eax
3c7a(2): and %al,%dl
3c7c(6): jz 0x970(%rip)
3c82(5): cmp $0x0,0x7c(%rsp)
3c87(6): jz 0x963(%rip)
3c8d(5): cmp $0x0,0xe(%rsp)
3c92(6): jnz 0x9fb(%rip)
3c98(3): test %r13,%r13
3c9b(3): setz %al
3c9e(6): cmp $0x0,0x50(%rsp)
3ca4(3): setnz %dl
3ca7(2): and %dl,%al
3ca9(6): jz 0xa23(%rip)
3caf(5): mov 0x50(%rsp),%r13
3cb4(7): lea 0x442c(%rip),%rbx
3cbb(4): mov $0x27,(%r14)
3cbf(8): mov $0x2,0x8(%rsp)
3cc7(6): mov $0x1,%r15d
3ccd(9): mov $0x1,0x18(%rsp)
3cd6(5): mov $0x0,0xf(%rsp)
3cdb(5): mov %rbx,0x48(%rsp)
3ce0(4): mov %al,0x7c(%rsp)
3ce4(5): jmp 0xfffff8df(%rip)
3ce9(7): nop 0x0(%rax)
3cf0(5): cmp $0x0,0xf(%rsp)
3cf5(6): jnz 0x8ab(%rip)
3cfb(3): test %r13,%r13
3cfe(6): jz 0x402(%rip)
3d04(2): xor %edx,%edx
3d06(6): cmp $0x0,0x50(%rsp)
3d0c(6): jnz 0x3f4(%rip)
3d12(5): mov %r13,0x50(%rsp)
3d17(4): add $0x3,%r15
3d1b(2): xor %eax,%eax
3d1d(5): mov %r12b,0x7c(%rsp)
3d22(3): xor %r8d,%r8d
3d25(3): mov %rdx,%r13
3d28(5): mov $0x27,%ebx
3d2d(5): jmp 0xfffffa1c(%rip)
3d32(6): nop 0x0(%rax,%rax,1)
3d38(5): test $0x4,0x78(%rsp)
3d3d(2): jz 0x23(%rip)
3d3f(4): lea 0x2(%rbp),%rcx
3d43(3): cmp %r11,%rcx
3d46(2): jnb 0x1a(%rip)
3d48(5): mov 0x10(%rsp),%rax
3d4d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3d52(6): jz 0x790(%rip)
3d58(8): nop 0x0(%rax,%rax,1)
3d60(2): xor %edx,%edx
3d62(3): xor %r12d,%r12d
3d65(2): xor %eax,%eax
3d67(5): mov $0x3f,%ebx
3d6c(5): jmp 0xfffff9ac(%rip)
3d71(7): nop 0x0(%rax)
3d78(5): cmp $0x0,0xf(%rsp)
3d7d(6): jnz 0x823(%rip)
3d83(3): xor %r12d,%r12d
3d86(2): xor %eax,%eax
3d88(5): mov $0x3f,%ebx
3d8d(5): jmp 0xfffff9bc(%rip)
3d92(6): nop 0x0(%rax,%rax,1)
3d98(8): lea 0xa0(%rsp),%rax
3da0(4): cmp $0xffffffff,%r11
3da4(c): mov $0x0,0xa0(%rsp)
3db0(5): mov %rax,0x28(%rsp)
3db5(2): jnz 0x2f(%rip)
3db7(5): mov 0x10(%rsp),%rdi
3dbc(5): mov %r8b,0x40(%rsp)
3dc1(5): mov %r10b,0x38(%rsp)
3dc6(5): mov %r9,0x30(%rsp)
3dcb(5): call 0xffffd895(%rip)
3dd0(6): movzx 0x40(%rsp),%r8d
3dd6(6): movzx 0x38(%rsp),%r10d
3ddc(3): mov %rax,%r11
3ddf(5): mov 0x30(%rsp),%r9
3de4(8): lea 0x9c(%rsp),%rax
3dec(2): xor %ecx,%ecx
3dee(4): mov %bl,0x7e(%rsp)
3df2(5): mov %r8b,0x7d(%rsp)
3df7(3): mov %rcx,%rbx
3dfa(8): mov %r9,0x88(%rsp)
3e02(5): mov %rax,0x38(%rsp)
3e07(5): mov %r10b,0x7f(%rsp)
3e0c(8): mov %r15,0x80(%rsp)
3e14(5): mov %r14,0x40(%rsp)
3e19(5): mov %r13,0x70(%rsp)
3e1e(5): mov %r11,0x30(%rsp)
3e23(5): mov 0x10(%rsp),%rax
3e28(5): lea 0x0(%rbp,%rbx,1),%r14
3e2d(5): mov 0x30(%rsp),%rdx
3e32(5): mov 0x28(%rsp),%rcx
3e37(5): mov 0x38(%rsp),%rdi
3e3c(4): lea 0x0(%rax,%r14,1),%r13
3e40(3): sub %r14,%rdx
3e43(3): mov %r13,%rsi
3e46(5): call 0x1c7a(%rip)
3e4b(3): test %rax,%rax
3e4e(3): mov %rax,%r15
3e51(2): jz 0x50(%rip)
3e53(4): cmp $0xffffffff,%rax
3e57(6): jz 0x61e(%rip)
3e5d(4): cmp $0xfffffffe,%rax
3e61(6): jz 0x5a0(%rip)
3e67(5): cmp $0x2,0x8(%rsp)
3e6c(3): setz %al
3e6f(4): and 0xf(%rsp),%al
3e73(6): jnz 0x19d(%rip)
3e79(7): mov 0x9c(%rsp),%edi
3e80(5): call 0xffffda30(%rip)
3e85(5): mov 0x28(%rsp),%rdi
3e8a(2): test %eax,%eax
3e8c(5): mov $0x0,%eax
3e91(4): cmove %eax,%r12d
3e95(3): add %r15,%rbx
3e98(5): call 0xffffda08(%rip)
3e9d(2): test %eax,%eax
3e9f(2): jz 0xffffff84(%rip)
3ea1(3): mov %r12d,%edx
3ea4(3): mov %rbx,%rdi
3ea7(6): movzx 0x7d(%rsp),%r8d
3ead(3): xor $0x1,%edx
3eb0(5): movzx 0x7e(%rsp),%ebx
3eb5(6): movzx 0x7f(%rsp),%r10d
3ebb(4): and 0xd(%rsp),%dl
3ebf(8): mov 0x80(%rsp),%r15
3ec7(5): mov 0x40(%rsp),%r14
3ecc(5): mov 0x70(%rsp),%r13
3ed1(5): mov 0x30(%rsp),%r11
3ed6(4): cmp $0x1,%rdi
3eda(6): jbe 0x601(%rip)
3ee0(3): mov %rdi,%rcx
3ee3(2): xor %esi,%esi
3ee5(6): movzx 0xf(%rsp),%r9d
3eeb(3): add %rbp,%rcx
3eee(5): mov 0x10(%rsp),%rdi
3ef3(5): jmp 0xbb(%rip)
3ef8(8): nop 0x0(%rax,%rax,1)
3f00(5): cmp $0x2,0x8(%rsp)
3f05(3): setz %al
3f08(3): test %r9b,%r9b
3f0b(6): jnz 0x4b5(%rip)
3f11(3): mov %r8d,%esi
3f14(3): xor $0x1,%esi
3f17(3): and %sil,%al
3f1a(2): jz 0x31(%rip)
3f1c(3): cmp %r15,%r13
3f1f(2): jbe 0x7(%rip)
3f21(5): mov $0x27,0x0(%r14,%r15,1)
3f26(4): lea 0x1(%r15),%rsi
3f2a(3): cmp %rsi,%r13
3f2d(2): jbe 0x8(%rip)
3f2f(6): mov $0x24,0x1(%r14,%r15,1)
3f35(4): lea 0x2(%r15),%rsi
3f39(3): cmp %rsi,%r13
3f3c(2): jbe 0x8(%rip)
3f3e(6): mov $0x27,0x2(%r14,%r15,1)
3f44(4): add $0x3,%r15
3f48(3): mov %eax,%r8d
3f4b(3): cmp %r15,%r13
3f4e(2): jbe 0x7(%rip)
3f50(5): mov $0x5c,0x0(%r14,%r15,1)
3f55(4): lea 0x1(%r15),%rax
3f59(3): cmp %rax,%r13
3f5c(2): jbe 0xf(%rip)
3f5e(2): mov %ebx,%eax
3f60(3): shr $0x6,%al
3f63(3): add $0x30,%eax
3f66(5): mov %al,0x1(%r14,%r15,1)
3f6b(4): lea 0x2(%r15),%rax
3f6f(3): cmp %rax,%r13
3f72(2): jbe 0x12(%rip)
3f74(2): mov %ebx,%eax
3f76(3): shr $0x3,%al
3f79(3): and $0x7,%eax
3f7c(3): add $0x30,%eax
3f7f(5): mov %al,0x2(%r14,%r15,1)
3f84(3): and $0x7,%ebx
3f87(4): add $0x1,%rbp
3f8b(4): add $0x3,%r15
3f8f(3): add $0x30,%ebx
3f92(3): cmp %rcx,%rbp
3f95(6): jnb 0xfffff7eb(%rip)
3f9b(2): mov %edx,%esi
3f9d(3): cmp %r15,%r13
3fa0(2): jbe 0x6(%rip)
3fa2(4): mov %bl,0x0(%r14,%r15,1)
3fa6(4): movzx 0x0(%rdi,%rbp,1),%ebx
3faa(4): add $0x1,%r15
3fae(2): test %dl,%dl
3fb0(6): jnz 0xffffff50(%rip)
3fb6(2): mov %esi,%eax
3fb8(3): xor $0x1,%eax
3fbb(3): and %r8d,%eax
3fbe(3): test %r10b,%r10b
3fc1(2): jz 0x10(%rip)
3fc3(3): cmp %r15,%r13
3fc6(2): jbe 0x7(%rip)
3fc8(5): mov $0x5c,0x0(%r14,%r15,1)
3fcd(4): add $0x1,%r15
3fd1(4): add $0x1,%rbp
3fd5(3): cmp %rcx,%rbp
3fd8(6): jnb 0xfffff784(%rip)
3fde(2): test %al,%al
3fe0(6): jz 0x3fe(%rip)
3fe6(3): cmp %r15,%r13
3fe9(2): jbe 0x7(%rip)
3feb(5): mov $0x27,0x0(%r14,%r15,1)
3ff0(4): lea 0x1(%r15),%rax
3ff4(3): cmp %rax,%r13
3ff7(2): jbe 0x8(%rip)
3ff9(6): mov $0x27,0x1(%r14,%r15,1)
3fff(4): add $0x2,%r15
4003(3): xor %r10d,%r10d
4006(3): xor %r8d,%r8d
4009(2): jmp 0xffffff94(%rip)
400b(5): nop 0x0(%rax,%rax,1)
4010(4): cmp $0x1,%r15
4014(6): jz 0xfffffe65(%rip)
401a(5): mov 0x10(%rsp),%rdi
401f(4): lea 0x0(%rdi,%r15,1),%rcx
4023(5): lea 0x1(%rdi,%r14,1),%rdx
4028(4): lea 0x0(%rcx,%r14,1),%r8
402c(2): jmp 0x11(%rip)
402e(2): nop 
4030(4): add $0x1,%rdx
4034(3): cmp %rdx,%r8
4037(6): jz 0xfffffe42(%rip)
403d(3): movzx (%rdx),%ecx
4040(3): sub $0x5b,%ecx
4043(3): cmp $0x21,%cl
4046(2): jnbe 0xffffffea(%rip)
4048(5): mov $0x1,%esi
404d(3): shl/sal %cl,%rsi
4050(3): mov %rsi,%rcx
4053(a): mov $0x8589934635,%rsi
405d(3): test %rsi,%rcx
4060(2): jz 0xffffffd0(%rip)
4062(5): mov 0x40(%rsp),%r14
4067(5): mov 0x70(%rsp),%r13
406c(5): mov 0x30(%rsp),%rbp
4071(8): mov $0x2,0x8(%rsp)
4079(5): cmp $0x0,0xd(%rsp)
407e(2): jz 0x12(%rip)
4080(2): test %al,%al
4082(5): mov $0x4,%eax
4087(5): cmove 0x8(%rsp),%eax
408c(4): mov %eax,0x8(%rsp)
4090(4): sub $0x8,%rsp
4094(3): mov %rbp,%rcx
4097(3): mov %r13,%rsi
409a(4): push 0x68(%rsp)
409e(4): push 0x78(%rsp)
40a2(3): mov %r14,%rdi
40a5(2): push $0x0
40a7(8): mov 0x98(%rsp),%r9d
40af(5): mov 0x28(%rsp),%r8d
40b4(5): mov 0x30(%rsp),%rdx
40b9(4): and $0xfd,%r9d
40bd(5): call 0xfffff433(%rip)
40c2(4): add $0x20,%rsp
40c6(3): mov %rax,%r15
40c9(8): mov 0xa8(%rsp),%rbx
40d1(9): xor $0x28,%rbx
40da(3): mov %r15,%rax
40dd(6): jnz 0x606(%rip)
40e3(7): add $0xb8,%rsp
40ea(1): pop %rbx
40eb(1): pop %rbp
40ec(2): pop %r12
40ee(2): pop %r13
40f0(2): pop %r14
40f2(2): pop %r15
40f4(1): ret near (%rsp)
40f5(3): nop (%rax)
40f8(3): mov %r11,%rbp
40fb(5): jmp 0xffffff7e(%rip)
4100(3): cmp %r15,%r13
4103(2): jbe 0x7(%rip)
4105(5): mov $0x27,0x0(%r14,%r15,1)
410a(4): lea 0x1(%r15),%rax
410e(3): cmp %rax,%r13
4111(2): jbe 0x8(%rip)
4113(6): mov $0x5c,0x1(%r14,%r15,1)
4119(4): lea 0x2(%r15),%rax
411d(3): cmp %rax,%r13
4120(6): jbe 0x5f2(%rip)
4126(3): mov %r13,%rdx
4129(6): mov $0x27,0x2(%r14,%r15,1)
412f(5): mov 0x50(%rsp),%r13
4134(5): jmp 0xfffffbde(%rip)
4139(3): mov %r12d,%eax
413c(5): mov $0x30,%ebx
4141(3): xor %r12d,%r12d
4144(5): jmp 0xfffff605(%rip)
4149(6): mov $0x27,0x2(%r14,%r15,1)
414f(5): jmp 0xfffff9ca(%rip)
4154(2): test %ebx,%ebx
4156(6): jnz 0xfffff42d(%rip)
415c(5): mov $0x1,0xd(%rsp)
4161(3): test %r13,%r13
4164(6): jnz 0x596(%rip)
416a(7): lea 0x3f76(%rip),%rax
4171(9): mov $0x0,0x50(%rsp)
417a(5): mov $0x1,0xe(%rsp)
417f(5): mov $0x0,0x7c(%rsp)
4184(3): xor %r12d,%r12d
4187(5): mov $0x0,0xf(%rsp)
418c(9): mov $0x1,0x18(%rsp)
4195(5): mov %rax,0x48(%rsp)
419a(6): mov $0x1,%r15d
41a0(8): mov $0x2,0x8(%rsp)
41a8(5): jmp 0xfffff41b(%rip)
41ad(3): nop (%rax)
41b0(2): test %ebx,%ebx
41b2(6): jnz 0x3fb(%rip)
41b8(3): test %r13,%r13
41bb(6): jz 0x22b(%rip)
41c1(4): mov $0x22,(%r14)
41c5(5): mov $0x1,0xe(%rsp)
41ca(3): xor %r12d,%r12d
41cd(5): mov $0x0,0x7c(%rsp)
41d2(9): mov $0x0,0x50(%rsp)
41db(7): lea 0x4691(%rip),%rax
41e2(5): mov $0x0,0xf(%rsp)
41e7(5): mov $0x1,0xd(%rsp)
41ec(9): mov $0x1,0x18(%rsp)
41f5(6): mov $0x1,%r15d
41fb(5): mov %rax,0x48(%rsp)
4200(5): jmp 0xfffff3c3(%rip)
4205(7): lea 0x4667(%rip),%rax
420c(5): mov $0x1,0xe(%rsp)
4211(5): mov $0x0,0x7c(%rsp)
4216(3): xor %r12d,%r12d
4219(9): mov $0x0,0x50(%rsp)
4222(5): mov $0x1,0xf(%rsp)
4227(5): mov $0x1,0xd(%rsp)
422c(9): mov $0x1,0x18(%rsp)
4235(3): xor %r15d,%r15d
4238(5): mov %rax,0x48(%rsp)
423d(8): mov $0x5,0x8(%rsp)
4245(5): jmp 0xfffff37e(%rip)
424a(5): mov $0x1,0xe(%rsp)
424f(5): mov $0x0,0x7c(%rsp)
4254(3): xor %r12d,%r12d
4257(9): mov $0x0,0x50(%rsp)
4260(5): mov $0x0,0xf(%rsp)
4265(3): xor %r15d,%r15d
4268(5): mov $0x1,0xd(%rsp)
426d(9): mov $0x0,0x18(%rsp)
4276(9): mov $0x0,0x48(%rsp)
427f(5): jmp 0xfffff344(%rip)
4284(5): cmp $0xa,0x8(%rsp)
4289(2): jz 0x58(%rip)
428b(7): lea 0x45e3(%rip),%rsi
4292(2): xor %edi,%edi
4294(5): mov $0x5,%edx
4299(5): call 0xffffd3a7(%rip)
429e(3): mov %rax,%rcx
42a1(5): mov %rax,0x68(%rsp)
42a6(7): lea 0x45c8(%rip),%rax
42ad(3): cmp %rax,%rcx
42b0(6): jz 0x39e(%rip)
42b6(7): lea 0x3e2a(%rip),%rsi
42bd(2): xor %edi,%edi
42bf(5): mov $0x5,%edx
42c4(5): call 0xffffd37c(%rip)
42c9(3): mov %rax,%rcx
42cc(5): mov %rax,0x60(%rsp)
42d1(7): lea 0x3e0f(%rip),%rax
42d8(3): cmp %rax,%rcx
42db(6): jz 0x389(%rip)
42e1(3): xor %r15d,%r15d
42e4(2): test %ebx,%ebx
42e6(6): jz 0x1c7(%rip)
42ec(2): test %ebx,%ebx
42ee(5): mov 0x60(%rsp),%rbx
42f3(5): setnz 0xf(%rsp)
42f8(3): xor %r12d,%r12d
42fb(3): mov %rbx,%rdi
42fe(5): call 0xffffd362(%rip)
4303(5): mov %rbx,0x48(%rsp)
4308(5): mov %rax,0x18(%rsp)
430d(5): mov $0x1,0xe(%rsp)
4312(5): mov $0x0,0x7c(%rsp)
4317(9): mov $0x0,0x50(%rsp)
4320(5): mov $0x1,0xd(%rsp)
4325(5): jmp 0xfffff29e(%rip)
432a(5): mov $0x1,0xe(%rsp)
432f(5): mov $0x0,0x7c(%rsp)
4334(3): xor %r12d,%r12d
4337(9): mov $0x0,0x50(%rsp)
4340(5): mov $0x0,0xf(%rsp)
4345(3): xor %r15d,%r15d
4348(5): mov $0x0,0xd(%rsp)
434d(9): mov $0x0,0x18(%rsp)
4356(9): mov $0x0,0x48(%rsp)
435f(5): jmp 0xfffff264(%rip)
4364(5): mov $0x1,0xe(%rsp)
4369(5): mov $0x0,0x7c(%rsp)
436e(3): xor %r12d,%r12d
4371(9): mov $0x0,0x50(%rsp)
437a(5): mov $0x1,0xf(%rsp)
437f(5): mov $0x1,0xd(%rsp)
4384(5): jmp 0xfffff21f(%rip)
4389(3): cmp %r15,%r13
438c(2): jbe 0x7(%rip)
438e(5): mov $0x30,0x0(%r14,%r15,1)
4393(4): lea 0x2(%rcx),%rax
4397(3): cmp %rax,%r13
439a(2): jbe 0x8(%rip)
439c(6): mov $0x30,0x2(%r14,%rcx,1)
43a2(3): mov %r12d,%eax
43a5(4): lea 0x3(%rcx),%r15
43a9(3): xor %r12d,%r12d
43ac(5): mov $0x30,%ebx
43b1(5): jmp 0xfffff367(%rip)
43b6(a): nop 0x0(%rax,%rax,1)
43c0(5): movzx 0xf(%rsp),%ebx
43c5(3): mov %r11,%rbp
43c8(4): mov %bl,0xd(%rsp)
43cc(5): jmp 0xfffffcad(%rip)
43d1(5): movzx 0xd(%rsp),%edx
43d6(3): xor %r12d,%r12d
43d9(5): jmp 0xfffffb07(%rip)
43de(3): xor %r10d,%r10d
43e1(5): jmp 0xfffffbbc(%rip)
43e6(9): mov $0x0,0x50(%rsp)
43ef(5): mov $0x1,0xe(%rsp)
43f4(3): xor %r12d,%r12d
43f7(5): mov $0x0,0x7c(%rsp)
43fc(5): jmp 0xfffffddf(%rip)
4401(5): mov 0x30(%rsp),%r11
4406(3): mov %r14,%rsi
4409(3): mov %r13,%rcx
440c(3): mov %rbx,%rax
440f(3): mov %rbx,%rdi
4412(6): movzx 0x7d(%rsp),%r8d
4418(5): movzx 0x7e(%rsp),%ebx
441d(8): mov 0x88(%rsp),%r9
4425(3): cmp %r11,%rsi
4428(6): movzx 0x7f(%rsp),%r10d
442e(8): mov 0x80(%rsp),%r15
4436(5): mov 0x40(%rsp),%r14
443b(5): mov 0x70(%rsp),%r13
4440(2): jnb 0x28(%rip)
4442(3): cmp $0x0,(%rcx)
4445(2): jnz 0x12(%rip)
4447(2): jmp 0x21(%rip)
4449(7): nop 0x0(%rax)
4450(5): cmp $0x0,0x0(%r9,%rax,1)
4455(2): jz 0x10(%rip)
4457(4): add $0x1,%rax
445b(5): lea 0x0(%rbp,%rax,1),%rdx
4460(3): cmp %rdx,%r11
4463(2): jnbe 0xffffffed(%rip)
4465(3): mov %rax,%rdi
4468(5): movzx 0xd(%rsp),%edx
446d(3): xor %r12d,%r12d
4470(5): jmp 0xfffffa66(%rip)
4475(3): mov %rbx,%rdi
4478(6): movzx 0x7d(%rsp),%r8d
447e(5): movzx 0x7e(%rsp),%ebx
4483(6): movzx 0x7f(%rsp),%r10d
4489(8): mov 0x80(%rsp),%r15
4491(3): xor %r12d,%r12d
4494(5): mov 0x40(%rsp),%r14
4499(5): mov 0x70(%rsp),%r13
449e(5): mov 0x30(%rsp),%r11
44a3(5): movzx 0xd(%rsp),%edx
44a8(5): jmp 0xfffffa2e(%rip)
44ad(5): mov 0x68(%rsp),%rdx
44b2(3): movzx (%rdx),%eax
44b5(2): test %al,%al
44b7(6): jz 0xfffffe35(%rip)
44bd(3): nop (%rax)
44c0(3): cmp %r15,%r13
44c3(2): jbe 0x6(%rip)
44c5(4): mov %al,0x0(%r14,%r15,1)
44c9(4): add $0x1,%r15
44cd(5): movzx 0x0(%rdx,%r15,1),%eax
44d2(2): test %al,%al
44d4(2): jnz 0xffffffec(%rip)
44d6(5): jmp 0xfffffe16(%rip)
44db(2): mov %edx,%eax
44dd(5): jmp 0xfffff55a(%rip)
44e2(4): movzx 0x0(%rax,%rcx,1),%ebx
44e6(3): cmp $0x3e,%bl
44e9(6): jnbe 0xfffff877(%rip)
44ef(a): mov $0x8070630310989004800,%rax
44f9(4): bt %rbx,%rax
44fd(6): jnb 0xfffff863(%rip)
4503(5): cmp $0x0,0xf(%rsp)
4508(6): jnz 0x1ea(%rip)
450e(3): cmp %r15,%r13
4511(2): jbe 0x7(%rip)
4513(5): mov $0x3f,0x0(%r14,%r15,1)
4518(4): lea 0x1(%r15),%rax
451c(3): cmp %rax,%r13
451f(2): jbe 0x8(%rip)
4521(6): mov $0x22,0x1(%r14,%r15,1)
4527(4): lea 0x2(%r15),%rax
452b(3): cmp %rax,%r13
452e(2): jbe 0x8(%rip)
4530(6): mov $0x22,0x2(%r14,%r15,1)
4536(4): lea 0x3(%r15),%rax
453a(3): cmp %rax,%r13
453d(2): jbe 0x8(%rip)
453f(6): mov $0x3f,0x3(%r14,%r15,1)
4545(4): add $0x4,%r15
4549(2): xor %edx,%edx
454b(3): xor %r12d,%r12d
454e(2): xor %eax,%eax
4550(3): mov %rcx,%rbp
4553(5): jmp 0xfffff1c5(%rip)
4558(2): test %ebx,%ebx
455a(6): jz 0x18e(%rip)
4560(7): lea 0x3b80(%rip),%rax
4567(5): mov $0x1,0xe(%rsp)
456c(5): mov $0x0,0x7c(%rsp)
4571(3): xor %r12d,%r12d
4574(9): mov $0x0,0x50(%rsp)
457d(5): mov $0x1,0xf(%rsp)
4582(5): mov $0x0,0xd(%rsp)
4587(9): mov $0x1,0x18(%rsp)
4590(3): xor %r15d,%r15d
4593(5): mov %rax,0x48(%rsp)
4598(5): jmp 0xfffff02b(%rip)
459d(3): nop (%rax)
45a0(3): mov %r11,%rbp
45a3(5): movzx 0xf(%rsp),%eax
45a8(5): jmp 0xfffffad1(%rip)
45ad(7): lea 0x42bf(%rip),%rax
45b4(5): mov $0x1,0xe(%rsp)
45b9(5): mov $0x0,0x7c(%rsp)
45be(3): xor %r12d,%r12d
45c1(9): mov $0x0,0x50(%rsp)
45ca(5): mov $0x1,0xf(%rsp)
45cf(5): mov $0x1,0xd(%rsp)
45d4(9): mov $0x1,0x18(%rsp)
45dd(3): xor %r15d,%r15d
45e0(5): mov %rax,0x48(%rsp)
45e5(5): jmp 0xffffefde(%rip)
45ea(2): mov %edx,%eax
45ec(5): mov 0x48(%rsp),%rbx
45f1(3): test %rbx,%rbx
45f4(2): jz 0x2e(%rip)
45f6(2): test %al,%al
45f8(2): jz 0x2a(%rip)
45fa(3): movzx (%rbx),%ecx
45fd(3): mov %rbx,%rax
4600(2): test %cl,%cl
4602(2): jz 0x20(%rip)
4604(3): mov %r15,%rdx
4607(3): sub %r15,%rax
460a(3): cmp %rdx,%r13
460d(2): jbe 0x6(%rip)
460f(4): mov %cl,0x0(%r14,%rdx,1)
4613(4): add $0x1,%rdx
4617(4): movzx 0x0(%rax,%rdx,1),%ecx
461b(2): test %cl,%cl
461d(2): jnz 0xffffffed(%rip)
461f(3): mov %rdx,%r15
4622(3): cmp %r15,%r13
4625(6): jbe 0xfffffaa4(%rip)
462b(5): mov $0x0,0x0(%r14,%r15,1)
4630(5): jmp 0xfffffa99(%rip)
4635(5): cmp $0x2,0x8(%rsp)
463a(5): movzx 0xf(%rsp),%ebx
463f(3): mov %r11,%rbp
4642(3): setz %al
4645(4): mov %bl,0xd(%rsp)
4649(5): jmp 0xfffffa30(%rip)
464e(4): mov 0x8(%rsp),%esi
4652(3): mov %rcx,%rdi
4655(5): call 0xffffedab(%rip)
465a(5): mov %rax,0x68(%rsp)
465f(5): jmp 0xfffffc57(%rip)
4664(4): mov 0x8(%rsp),%esi
4668(3): mov %rcx,%rdi
466b(5): call 0xffffed95(%rip)
4670(5): mov %rax,0x60(%rsp)
4675(5): jmp 0xfffffc6c(%rip)
467a(5): movzx 0xf(%rsp),%ebx
467f(3): mov %r11,%rbp
4682(2): mov %edx,%eax
4684(4): mov %bl,0xd(%rsp)
4688(5): jmp 0xfffff9f1(%rip)
468d(4): sub $0x8,%rsp
4691(6): mov $0x5,%r8d
4697(3): mov %r11,%rcx
469a(4): push 0x68(%rsp)
469e(4): push 0x78(%rsp)
46a2(3): mov %r14,%rdi
46a5(4): push 0x38(%rsp)
46a9(8): mov 0x98(%rsp),%r9d
46b1(5): mov 0x30(%rsp),%rdx
46b6(5): mov 0x70(%rsp),%rsi
46bb(5): call 0xffffee35(%rip)
46c0(4): add $0x20,%rsp
46c4(3): mov %rax,%r15
46c7(5): jmp 0xfffffa02(%rip)
46cc(5): movzx 0x7c(%rsp),%eax
46d1(5): jmp 0xffffff1b(%rip)
46d6(8): mov $0x2,0x8(%rsp)
46de(5): jmp 0xfffff99b(%rip)
46e3(5): call 0xffffcf8d(%rip)
46e8(5): mov $0x0,0xd(%rsp)
46ed(5): jmp 0xfffffa74(%rip)
46f2(3): mov %r11,%rbp
46f5(5): jmp 0xfffff99b(%rip)
46fa(5): mov $0x1,0xe(%rsp)
46ff(2): xor %eax,%eax
4701(3): xor %r12d,%r12d
4704(9): mov $0x0,0x50(%rsp)
470d(5): jmp 0xfffff5a7(%rip)
4712(3): mov %r13,%rdx
4715(5): mov 0x50(%rsp),%r13
471a(5): jmp 0xfffff5f8(%rip)
471f(5): call 0xffffce81(%rip)

"quotearg_n_options" :
4730(2): push %r15
4732(2): push %r14
4734(3): movsxd %edi,%r15
4737(2): push %r13
4739(2): push %r12
473b(3): mov %rdx,%r14
473e(1): push %rbp
473f(1): push %rbx
4740(3): mov %rcx,%rbp
4743(4): sub $0x28,%rsp
4747(5): mov %rsi,0x8(%rsp)
474c(5): call 0xffffce64(%rip)
4751(3): mov %rax,%r13
4754(2): mov (%rax),%eax
4756(3): test %r15d,%r15d
4759(7): mov 0x206900(%rip),%rbx
4760(4): mov %eax,0x18(%rsp)
4764(6): js 0x16d(%rip)
476a(7): cmp %r15d,0x2068e7(%rip)
4771(2): jnle 0x64(%rip)
4773(7): cmp $0x7fffffff,%r15d
477a(6): jz 0x15c(%rip)
4780(4): lea 0x1(%r15),%r12d
4784(7): lea 0x2068e5(%rip),%rax
478b(3): movsxd %r12d,%rsi
478e(4): shl/sal $0x4,%rsi
4792(3): cmp %rax,%rbx
4795(6): jz 0x11b(%rip)
479b(3): mov %rbx,%rdi
479e(5): call 0xf72(%rip)
47a3(3): mov %rax,%rbx
47a6(7): mov %rax,0x2068b3(%rip)
47ad(7): movsxd 0x2068a4(%rip),%rdi
47b4(3): mov %r12d,%edx
47b7(2): xor %esi,%esi
47b9(2): sub %edi,%edx
47bb(4): shl/sal $0x4,%rdi
47bf(3): movsxd %edx,%rdx
47c2(3): add %rbx,%rdi
47c5(4): shl/sal $0x4,%rdx
47c9(5): call 0xffffcf17(%rip)
47ce(7): mov %r12d,0x206883(%rip)
47d5(3): mov 0x4(%rbp),%eax
47d8(4): shl/sal $0x4,%r15
47dc(4): sub $0x8,%rsp
47e0(3): add %r15,%rbx
47e3(4): lea 0x8(%rbp),%r15
47e7(4): mov 0x0(%rbp),%r8d
47eb(3): mov (%rbx),%r11
47ee(4): mov 0x8(%rbx),%r12
47f2(3): mov %r14,%rcx
47f5(3): or $0x1,%eax
47f8(4): mov %eax,0x24(%rsp)
47fc(3): push 0x30(%rbp)
47ff(3): mov %eax,%r9d
4802(3): push 0x28(%rbp)
4805(2): push %r15
4807(3): mov %r11,%rsi
480a(5): mov 0x28(%rsp),%rdx
480f(3): mov %r12,%rdi
4812(5): mov %r11,0x30(%rsp)
4817(5): call 0xffffecd9(%rip)
481c(4): add $0x20,%rsp
4820(5): mov 0x10(%rsp),%r11
4825(3): cmp %rax,%r11
4828(2): jnbe 0x69(%rip)
482a(4): lea 0x1(%rax),%rsi
482e(7): lea 0x2068eb(%rip),%rax
4835(3): cmp %rax,%r12
4838(3): mov %rsi,(%rbx)
483b(2): jz 0x14(%rip)
483d(3): mov %r12,%rdi
4840(5): mov %rsi,0x10(%rsp)
4845(5): call 0xffffcd4b(%rip)
484a(5): mov 0x10(%rsp),%rsi
484f(3): mov %rsi,%rdi
4852(5): mov %rsi,0x10(%rsp)
4857(5): call 0xe59(%rip)
485c(4): sub $0x8,%rsp
4860(4): mov %rax,0x8(%rbx)
4864(4): mov 0x0(%rbp),%r8d
4868(3): push 0x30(%rbp)
486b(3): push 0x28(%rbp)
486e(3): mov %r14,%rcx
4871(2): push %r15
4873(5): mov 0x3c(%rsp),%r9d
4878(3): mov %rax,%rdi
487b(5): mov 0x28(%rsp),%rdx
4880(5): mov 0x30(%rsp),%rsi
4885(3): mov %rax,%r12
4888(5): call 0xffffec68(%rip)
488d(4): add $0x20,%rsp
4891(4): mov 0x18(%rsp),%eax
4895(4): mov %eax,0x0(%r13)
4899(4): add $0x28,%rsp
489d(3): mov %r12,%rax
48a0(1): pop %rbx
48a1(1): pop %rbp
48a2(2): pop %r12
48a4(2): pop %r13
48a6(2): pop %r14
48a8(2): pop %r15
48aa(1): ret near (%rsp)
48ab(5): nop 0x0(%rax,%rax,1)
48b0(2): xor %edi,%edi
48b2(5): call 0xe5e(%rip)
48b7(8): movdqa 0x2067b1(%rip),%xmm0
48bf(3): mov %rax,%rbx
48c2(7): mov %rax,0x206797(%rip)
48c9(3): movups %xmm0,(%rax)
48cc(5): jmp 0xfffffee1(%rip)
48d1(5): call 0xffffcccf(%rip)
48d6(5): call 0x102a(%rip)

"clone_quoting_options" :
48e0(2): push %r12
48e2(1): push %rbp
48e3(1): push %rbx
48e4(3): mov %rdi,%rbx
48e7(5): call 0xffffccc9(%rip)
48ec(3): mov (%rax),%r12d
48ef(3): mov %rax,%rbp
48f2(7): lea 0x206927(%rip),%rax
48f9(3): test %rbx,%rbx
48fc(5): mov $0x38,%esi
4901(4): cmove %rax,%rbx
4905(3): mov %rbx,%rdi
4908(5): call 0xfa8(%rip)
490d(4): mov %r12d,0x0(%rbp)
4911(1): pop %rbx
4912(1): pop %rbp
4913(2): pop %r12
4915(1): ret near (%rsp)

"get_quoting_style" :
4920(7): lea 0x2068f9(%rip),%rax
4927(3): test %rdi,%rdi
492a(4): cmove %rax,%rdi
492e(2): mov (%rdi),%eax
4930(1): ret near (%rsp)

"set_quoting_style" :
4940(7): lea 0x2068d9(%rip),%rax
4947(3): test %rdi,%rdi
494a(4): cmove %rax,%rdi
494e(2): mov %esi,(%rdi)
4950(1): ret near (%rsp)

"set_char_quoting" :
4960(7): lea 0x2068b9(%rip),%rax
4967(3): test %rdi,%rdi
496a(2): mov %esi,%ecx
496c(4): cmove %rax,%rdi
4970(2): mov %esi,%eax
4972(3): and $0x1f,%ecx
4975(3): shr $0x5,%al
4978(3): movzx %al,%eax
497b(5): lea 0x8(%rdi,%rax,4),%rdi
4980(2): mov (%rdi),%esi
4982(2): mov %esi,%eax
4984(2): shr %cl,%eax
4986(2): xor %eax,%edx
4988(3): and $0x1,%eax
498b(3): and $0x1,%edx
498e(2): shl/sal %cl,%edx
4990(2): xor %esi,%edx
4992(2): mov %edx,(%rdi)
4994(1): ret near (%rsp)

"set_quoting_flags" :
49a0(7): lea 0x206879(%rip),%rax
49a7(3): test %rdi,%rdi
49aa(4): cmove %rax,%rdi
49ae(3): mov 0x4(%rdi),%eax
49b1(3): mov %esi,0x4(%rdi)
49b4(1): ret near (%rsp)

"set_custom_quoting" :
49c0(7): lea 0x206859(%rip),%rax
49c7(3): test %rdi,%rdi
49ca(4): cmove %rax,%rdi
49ce(3): test %rsi,%rsi
49d1(6): mov $0xa,(%rdi)
49d7(2): jz 0x10(%rip)
49d9(3): test %rdx,%rdx
49dc(2): jz 0xb(%rip)
49de(4): mov %rsi,0x28(%rdi)
49e2(4): mov %rdx,0x30(%rdi)
49e6(1): ret near (%rsp)
49e7(4): sub $0x8,%rsp
49eb(5): call 0xffffcbb5(%rip)

"quotearg_buffer" :
49f0(2): push %r15
49f2(2): push %r14
49f4(7): lea 0x206825(%rip),%rax
49fb(2): push %r13
49fd(2): push %r12
49ff(3): mov %rdi,%r13
4a02(1): push %rbp
4a03(1): push %rbx
4a04(3): mov %r8,%rbx
4a07(3): mov %rsi,%r14
4a0a(3): mov %rdx,%r15
4a0d(4): sub $0x18,%rsp
4a11(3): test %r8,%r8
4a14(4): cmove %rax,%rbx
4a18(5): mov %rcx,0x8(%rsp)
4a1d(5): call 0xffffcb93(%rip)
4a22(3): mov (%rax),%r12d
4a25(3): mov %rax,%rbp
4a28(4): lea 0x8(%rbx),%rax
4a2c(4): sub $0x8,%rsp
4a30(4): mov 0x4(%rbx),%r9d
4a34(3): push 0x30(%rbx)
4a37(3): mov (%rbx),%r8d
4a3a(3): push 0x28(%rbx)
4a3d(3): mov %r15,%rdx
4a40(1): push %rax
4a41(5): mov 0x28(%rsp),%rcx
4a46(3): mov %r14,%rsi
4a49(3): mov %r13,%rdi
4a4c(5): call 0xffffeaa4(%rip)
4a51(4): mov %r12d,0x0(%rbp)
4a55(4): add $0x38,%rsp
4a59(1): pop %rbx
4a5a(1): pop %rbp
4a5b(2): pop %r12
4a5d(2): pop %r13
4a5f(2): pop %r14
4a61(2): pop %r15
4a63(1): ret near (%rsp)

"quotearg_alloc_mem" :
4a70(2): push %r15
4a72(2): push %r14
4a74(7): lea 0x2067a5(%rip),%rax
4a7b(2): push %r13
4a7d(2): push %r12
4a7f(3): mov %rdx,%r12
4a82(1): push %rbp
4a83(1): push %rbx
4a84(3): mov %rcx,%rbx
4a87(3): mov %rdi,%r14
4a8a(3): mov %rsi,%r15
4a8d(4): sub $0x38,%rsp
4a91(3): test %rcx,%rcx
4a94(4): cmove %rax,%rbx
4a98(2): xor %ebp,%ebp
4a9a(5): call 0xffffcb16(%rip)
4a9f(3): test %r12,%r12
4aa2(3): mov %rax,%r13
4aa5(2): mov (%rax),%eax
4aa7(4): setz %bpl
4aab(3): or 0x4(%rbx),%ebp
4aae(4): lea 0x8(%rbx),%r10
4ab2(4): sub $0x8,%rsp
4ab6(3): mov (%rbx),%r8d
4ab9(3): mov %r15,%rcx
4abc(4): mov %eax,0x14(%rsp)
4ac0(3): push 0x30(%rbx)
4ac3(3): mov %r14,%rdx
4ac6(3): push 0x28(%rbx)
4ac9(2): push %r10
4acb(2): xor %esi,%esi
4acd(3): mov %ebp,%r9d
4ad0(2): xor %edi,%edi
4ad2(5): mov %r10,0x40(%rsp)
4ad7(5): call 0xffffea19(%rip)
4adc(4): lea 0x1(%rax),%rsi
4ae0(5): mov %rax,0x48(%rsp)
4ae5(4): add $0x20,%rsp
4ae9(3): mov %rsi,%rdi
4aec(5): mov %rsi,0x18(%rsp)
4af1(5): call 0xbbf(%rip)
4af6(5): mov %rax,0x10(%rsp)
4afb(4): sub $0x8,%rsp
4aff(3): push 0x30(%rbx)
4b02(3): push 0x28(%rbx)
4b05(5): mov 0x38(%rsp),%r10
4b0a(3): mov %ebp,%r9d
4b0d(3): mov (%rbx),%r8d
4b10(3): mov %r15,%rcx
4b13(3): mov %r14,%rdx
4b16(3): mov %rax,%rdi
4b19(2): push %r10
4b1b(5): mov 0x38(%rsp),%rsi
4b20(5): call 0xffffe9d0(%rip)
4b25(4): mov 0x2c(%rsp),%eax
4b29(4): add $0x20,%rsp
4b2d(3): test %r12,%r12
4b30(4): mov %eax,0x0(%r13)
4b34(2): jz 0xb(%rip)
4b36(5): mov 0x28(%rsp),%r11
4b3b(4): mov %r11,(%r12)
4b3f(5): mov 0x10(%rsp),%rax
4b44(4): add $0x38,%rsp
4b48(1): pop %rbx
4b49(1): pop %rbp
4b4a(2): pop %r12
4b4c(2): pop %r13
4b4e(2): pop %r14
4b50(2): pop %r15
4b52(1): ret near (%rsp)

"quotearg_alloc" :
4b60(3): mov %rdx,%rcx
4b63(2): xor %edx,%edx
4b65(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4b70(6): mov 0x2064e2(%rip),%eax
4b76(2): push %r12
4b78(7): mov 0x2064e1(%rip),%r12
4b7f(1): push %rbp
4b80(1): push %rbx
4b81(3): cmp $0x1,%eax
4b84(2): jle 0x2d(%rip)
4b86(3): sub $0x2,%eax
4b89(5): lea 0x18(%r12),%rbx
4b8e(4): shl/sal $0x4,%rax
4b92(5): lea 0x28(%r12,%rax,1),%rbp
4b97(9): nop 0x0(%rax,%rax,1)
4ba0(3): mov (%rbx),%rdi
4ba3(4): add $0x10,%rbx
4ba7(5): call 0xffffc9e9(%rip)
4bac(3): cmp %rbp,%rbx
4baf(2): jnz 0xfffffff1(%rip)
4bb1(5): mov 0x8(%r12),%rdi
4bb6(7): lea 0x206563(%rip),%rbx
4bbd(3): cmp %rbx,%rdi
4bc0(2): jz 0x19(%rip)
4bc2(5): call 0xffffc9ce(%rip)
4bc7(b): mov $0x100,0x20649e(%rip)
4bd2(7): mov %rbx,0x20649f(%rip)
4bd9(7): lea 0x206490(%rip),%rbx
4be0(3): cmp %rbx,%r12
4be3(2): jz 0x11(%rip)
4be5(3): mov %r12,%rdi
4be8(5): call 0xffffc9a8(%rip)
4bed(7): mov %rbx,0x20646c(%rip)
4bf4(1): pop %rbx
4bf5(a): mov $0x1,0x206459(%rip)
4bff(1): pop %rbp
4c00(2): pop %r12
4c02(1): ret near (%rsp)

"quotearg_n" :
4c10(7): lea 0x206609(%rip),%rcx
4c17(7): mov $0xffffffff,%rdx
4c1e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4c30(7): lea 0x2065e9(%rip),%rcx
4c37(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4c40(7): lea 0x2065d9(%rip),%rcx
4c47(3): mov %rdi,%rsi
4c4a(7): mov $0xffffffff,%rdx
4c51(2): xor %edi,%edi
4c53(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4c60(7): lea 0x2065b9(%rip),%rcx
4c67(3): mov %rsi,%rdx
4c6a(3): mov %rdi,%rsi
4c6d(2): xor %edi,%edi
4c6f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4c80(4): sub $0x48,%rsp
4c84(3): mov %rdx,%rax
4c87(9): mov $0x28,%rdx
4c90(5): mov %rdx,0x38(%rsp)
4c95(2): xor %edx,%edx
4c97(3): cmp $0xa,%esi
4c9a(2): jz 0x6a(%rip)
4c9c(3): mov %esi,(%rsp)
4c9f(3): mov %rsp,%rcx
4ca2(7): mov $0xffffffff,%rdx
4ca9(3): mov %rax,%rsi
4cac(9): mov $0x0,0x4(%rsp)
4cb5(9): mov $0x0,0xc(%rsp)
4cbe(9): mov $0x0,0x14(%rsp)
4cc7(9): mov $0x0,0x1c(%rsp)
4cd0(9): mov $0x0,0x24(%rsp)
4cd9(9): mov $0x0,0x2c(%rsp)
4ce2(8): mov $0x0,0x34(%rsp)
4cea(5): call 0xfffffa46(%rip)
4cef(5): mov 0x38(%rsp),%rcx
4cf4(9): xor $0x28,%rcx
4cfd(2): jnz 0xc(%rip)
4cff(4): add $0x48,%rsp
4d03(1): ret near (%rsp)
4d04(5): call 0xffffc89c(%rip)
4d09(5): call 0xffffc967(%rip)

"quotearg_n_style_mem" :
4d10(4): sub $0x48,%rsp
4d14(3): mov %rdx,%rax
4d17(3): mov %rcx,%rdx
4d1a(9): mov $0x28,%rcx
4d23(5): mov %rcx,0x38(%rsp)
4d28(2): xor %ecx,%ecx
4d2a(3): cmp $0xa,%esi
4d2d(2): jz 0x63(%rip)
4d2f(3): mov %esi,(%rsp)
4d32(3): mov %rsp,%rcx
4d35(3): mov %rax,%rsi
4d38(9): mov $0x0,0x4(%rsp)
4d41(9): mov $0x0,0xc(%rsp)
4d4a(9): mov $0x0,0x14(%rsp)
4d53(9): mov $0x0,0x1c(%rsp)
4d5c(9): mov $0x0,0x24(%rsp)
4d65(9): mov $0x0,0x2c(%rsp)
4d6e(8): mov $0x0,0x34(%rsp)
4d76(5): call 0xfffff9ba(%rip)
4d7b(5): mov 0x38(%rsp),%rdx
4d80(9): xor $0x28,%rdx
4d89(2): jnz 0xc(%rip)
4d8b(4): add $0x48,%rsp
4d8f(1): ret near (%rsp)
4d90(5): call 0xffffc810(%rip)
4d95(5): call 0xffffc8db(%rip)

"quotearg_style" :
4da0(3): mov %rsi,%rdx
4da3(2): mov %edi,%esi
4da5(2): xor %edi,%edi
4da7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4db0(3): mov %rdx,%rcx
4db3(3): mov %rsi,%rdx
4db6(2): mov %edi,%esi
4db8(2): xor %edi,%edi
4dba(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4dc0(4): sub $0x48,%rsp
4dc4(2): mov %edx,%ecx
4dc6(9): mov $0x28,%rax
4dcf(5): mov %rax,0x38(%rsp)
4dd4(2): xor %eax,%eax
4dd6(7): mov 0x206473(%rip),%rax
4ddd(3): mov %rsp,%r8
4de0(3): and $0x1f,%ecx
4de3(8): movdqa 0x206435(%rip),%xmm0
4deb(5): mov %rax,0x30(%rsp)
4df0(2): mov %edx,%eax
4df2(4): movaps %xmm0,(%rsp)
4df6(3): shr $0x5,%al
4df9(3): movzx %al,%eax
4dfc(5): lea 0x8(%r8,%rax,4),%r9
4e01(8): movdqa 0x206427(%rip),%xmm0
4e09(5): movaps %xmm0,0x10(%rsp)
4e0e(8): movdqa 0x20642a(%rip),%xmm0
4e16(5): movaps %xmm0,0x20(%rsp)
4e1b(3): mov (%r9),%edx
4e1e(2): mov %edx,%eax
4e20(2): shr %cl,%eax
4e22(2): not %eax
4e24(3): and $0x1,%eax
4e27(2): shl/sal %cl,%eax
4e29(3): mov %r8,%rcx
4e2c(2): xor %edx,%eax
4e2e(3): mov %rsi,%rdx
4e31(3): mov %rdi,%rsi
4e34(3): mov %eax,(%r9)
4e37(2): xor %edi,%edi
4e39(5): call 0xfffff8f7(%rip)
4e3e(5): mov 0x38(%rsp),%rsi
4e43(9): xor $0x28,%rsi
4e4c(2): jnz 0x7(%rip)
4e4e(4): add $0x48,%rsp
4e52(1): ret near (%rsp)
4e53(5): call 0xffffc81d(%rip)

"quotearg_char" :
4e60(4): movsx %sil,%edx
4e64(7): mov $0xffffffff,%rsi
4e6b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4e70(5): mov $0x3a,%edx
4e75(7): mov $0xffffffff,%rsi
4e7c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4e90(5): mov $0x3a,%edx
4e95(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4ea0(4): sub $0x48,%rsp
4ea4(3): mov %rdx,%rax
4ea7(9): mov $0x28,%rdx
4eb0(5): mov %rdx,0x38(%rsp)
4eb5(2): xor %edx,%edx
4eb7(3): cmp $0xa,%esi
4eba(2): jz 0x6a(%rip)
4ebc(3): mov %esi,(%rsp)
4ebf(3): mov %rsp,%rcx
4ec2(7): mov $0xffffffff,%rdx
4ec9(3): mov %rax,%rsi
4ecc(9): mov $0x0,0x4(%rsp)
4ed5(9): mov $0x4000000,0xc(%rsp)
4ede(9): mov $0x0,0x14(%rsp)
4ee7(9): mov $0x0,0x1c(%rsp)
4ef0(9): mov $0x0,0x24(%rsp)
4ef9(9): mov $0x0,0x2c(%rsp)
4f02(8): mov $0x0,0x34(%rsp)
4f0a(5): call 0xfffff826(%rip)
4f0f(5): mov 0x38(%rsp),%rcx
4f14(9): xor $0x28,%rcx
4f1d(2): jnz 0xc(%rip)
4f1f(4): add $0x48,%rsp
4f23(1): ret near (%rsp)
4f24(5): call 0xffffc67c(%rip)
4f29(5): call 0xffffc747(%rip)

"quotearg_n_custom_mem" :
4f30(4): sub $0x48,%rsp
4f34(3): mov %rcx,%r9
4f37(7): mov 0x206312(%rip),%rcx
4f3e(8): movdqa 0x2062da(%rip),%xmm0
4f46(9): mov $0x28,%rax
4f4f(5): mov %rax,0x38(%rsp)
4f54(2): xor %eax,%eax
4f56(4): movaps %xmm0,(%rsp)
4f5a(3): test %rsi,%rsi
4f5d(5): mov %rcx,0x30(%rsp)
4f62(7): mov $0xa,(%rsp)
4f69(8): movdqa 0x2062bf(%rip),%xmm0
4f71(5): movaps %xmm0,0x10(%rsp)
4f76(8): movdqa 0x2062c2(%rip),%xmm0
4f7e(5): movaps %xmm0,0x20(%rsp)
4f83(2): jz 0x34(%rip)
4f85(3): test %rdx,%rdx
4f88(2): jz 0x2f(%rip)
4f8a(5): mov %rsi,0x28(%rsp)
4f8f(5): mov %rdx,0x30(%rsp)
4f94(3): mov %rsp,%rcx
4f97(3): mov %r8,%rdx
4f9a(3): mov %r9,%rsi
4f9d(5): call 0xfffff793(%rip)
4fa2(5): mov 0x38(%rsp),%rdi
4fa7(9): xor $0x28,%rdi
4fb0(2): jnz 0xc(%rip)
4fb2(4): add $0x48,%rsp
4fb6(1): ret near (%rsp)
4fb7(5): call 0xffffc5e9(%rip)
4fbc(5): call 0xffffc6b4(%rip)

"quotearg_n_custom" :
4fd0(7): mov $0xffffffff,%r8
4fd7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4fe0(3): mov %rdx,%rcx
4fe3(7): mov $0xffffffff,%r8
4fea(3): mov %rsi,%rdx
4fed(3): mov %rdi,%rsi
4ff0(2): xor %edi,%edi
4ff2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5000(3): mov %rcx,%r8
5003(3): mov %rdx,%rcx
5006(3): mov %rsi,%rdx
5009(3): mov %rdi,%rsi
500c(2): xor %edi,%edi
500e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5020(7): lea 0x205ff9(%rip),%rcx
5027(5): jmp 0xfffff709(%rip)

"quote_mem" :
5030(7): lea 0x205fe9(%rip),%rcx
5037(3): mov %rsi,%rdx
503a(3): mov %rdi,%rsi
503d(2): xor %edi,%edi
503f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5050(7): lea 0x205fc9(%rip),%rcx
5057(7): mov $0xffffffff,%rdx
505e(5): jmp 0xfffff6d2(%rip)

"quote" :
5070(7): lea 0x205fa9(%rip),%rcx
5077(3): mov %rdi,%rsi
507a(7): mov $0xffffffff,%rdx
5081(2): xor %edi,%edi
5083(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
5090(2): push %r15
5092(2): push %r14
5094(2): push %r13
5096(2): push %r12
5098(3): mov %r9,%r12
509b(1): push %rbp
509c(1): push %rbx
509d(3): mov %rdi,%rbp
50a0(3): mov %r8,%rbx
50a3(4): sub $0x28,%rsp
50a7(3): test %rsi,%rsi
50aa(6): jz 0x11e(%rip)
50b0(3): mov %rdx,%r8
50b3(7): lea 0x3c8e(%rip),%rdx
50ba(3): mov %rcx,%r9
50bd(2): xor %eax,%eax
50bf(3): mov %rsi,%rcx
50c2(5): mov $0x1,%esi
50c7(5): call 0xffffc7c9(%rip)
50cc(7): lea 0x3c88(%rip),%rsi
50d3(2): xor %edi,%edi
50d5(5): mov $0x5,%edx
50da(5): call 0xffffc566(%rip)
50df(7): lea 0x3f9a(%rip),%rdx
50e6(3): mov %rax,%rcx
50e9(6): mov $0x7e3,%r8d
50ef(5): mov $0x1,%esi
50f4(3): mov %rbp,%rdi
50f7(2): xor %eax,%eax
50f9(5): call 0xffffc797(%rip)
50fe(7): lea 0x3ce3(%rip),%rsi
5105(2): xor %edi,%edi
5107(5): mov $0x5,%edx
510c(5): call 0xffffc534(%rip)
5111(3): mov %rbp,%rsi
5114(3): mov %rax,%rdi
5117(5): call 0xffffc609(%rip)
511c(4): cmp $0x9,%r12
5120(6): jnbe 0x340(%rip)
5126(7): lea 0x3f1b(%rip),%rdx
512d(4): movsxd 0x0(%rdx,%r12,4),%rax
5131(3): add %rdx,%rax
5134(2): jmp %rax
5136(a): nop 0x0(%rax,%rax,1)
5140(4): mov 0x38(%rbx),%r9
5144(4): mov 0x10(%rbx),%rax
5148(7): lea 0x3e09(%rip),%rsi
514f(4): mov 0x8(%rbx),%r8
5153(5): mov $0x5,%edx
5158(2): xor %edi,%edi
515a(4): mov 0x30(%rbx),%r13
515e(4): mov 0x28(%rbx),%r12
5162(5): mov %r9,0x10(%rsp)
5167(4): mov 0x20(%rbx),%r15
516b(4): mov 0x18(%rbx),%r14
516f(4): mov %rax,(%rsp)
5173(5): mov %r8,0x8(%rsp)
5178(3): mov (%rbx),%rbx
517b(5): call 0xffffc4c5(%rip)
5180(4): sub $0x8,%rsp
5184(5): mov 0x18(%rsp),%r9
5189(3): mov %rax,%rdx
518c(3): mov %rbx,%rcx
518f(5): mov $0x1,%esi
5194(3): mov %rbp,%rdi
5197(2): xor %eax,%eax
5199(2): push %r9
519b(2): push %r13
519d(2): push %r12
519f(2): push %r15
51a1(2): push %r14
51a3(5): mov 0x30(%rsp),%r9
51a8(5): mov 0x38(%rsp),%r8
51ad(5): call 0xffffc6e3(%rip)
51b2(4): add $0x30,%rsp
51b6(4): add $0x28,%rsp
51ba(1): pop %rbx
51bb(1): pop %rbp
51bc(2): pop %r12
51be(2): pop %r13
51c0(2): pop %r14
51c2(2): pop %r15
51c4(1): ret near (%rsp)
51c5(3): nop (%rax)
51c8(3): mov %rcx,%r8
51cb(3): mov %rdx,%rcx
51ce(7): lea 0x3b7f(%rip),%rdx
51d5(5): mov $0x1,%esi
51da(2): xor %eax,%eax
51dc(5): call 0xffffc6b4(%rip)
51e1(5): jmp 0xfffffeeb(%rip)
51e6(a): nop 0x0(%rax,%rax,1)
51f0(4): mov 0x40(%rbx),%r10
51f4(4): mov 0x38(%rbx),%r9
51f8(7): lea 0x3d89(%rip),%rsi
51ff(4): mov 0x10(%rbx),%rax
5203(4): mov 0x8(%rbx),%r8
5207(5): mov $0x5,%edx
520c(4): mov 0x30(%rbx),%r13
5210(4): mov 0x28(%rbx),%r12
5214(4): mov 0x20(%rbx),%r15
5218(4): mov 0x18(%rbx),%r14
521c(3): mov (%rbx),%rbx
521f(5): mov %r10,0x18(%rsp)
5224(5): mov %r9,0x10(%rsp)
5229(4): mov %rax,(%rsp)
522d(5): mov %r8,0x8(%rsp)
5232(2): xor %edi,%edi
5234(5): call 0xffffc40c(%rip)
5239(5): mov 0x18(%rsp),%r10
523e(2): push %r10
5240(5): jmp 0xffffff44(%rip)
5245(3): nop (%rax)
5248(3): mov (%rbx),%rbx
524b(7): lea 0x3b0d(%rip),%rsi
5252(5): mov $0x5,%edx
5257(2): xor %edi,%edi
5259(5): call 0xffffc3e7(%rip)
525e(4): add $0x28,%rsp
5262(3): mov %rbx,%rcx
5265(3): mov %rbp,%rdi
5268(1): pop %rbx
5269(1): pop %rbp
526a(2): pop %r12
526c(2): pop %r13
526e(2): pop %r14
5270(2): pop %r15
5272(3): mov %rax,%rdx
5275(5): mov $0x1,%esi
527a(2): xor %eax,%eax
527c(5): jmp 0xffffc614(%rip)
5281(7): nop 0x0(%rax)
5288(4): mov 0x8(%rbx),%r12
528c(7): lea 0x3adc(%rip),%rsi
5293(3): mov (%rbx),%rbx
5296(5): mov $0x5,%edx
529b(2): xor %edi,%edi
529d(5): call 0xffffc3a3(%rip)
52a2(4): add $0x28,%rsp
52a6(3): mov %r12,%r8
52a9(3): mov %rbx,%rcx
52ac(3): mov %rbp,%rdi
52af(3): mov %rax,%rdx
52b2(5): mov $0x1,%esi
52b7(1): pop %rbx
52b8(1): pop %rbp
52b9(2): pop %r12
52bb(2): pop %r13
52bd(2): pop %r14
52bf(2): pop %r15
52c1(2): xor %eax,%eax
52c3(5): jmp 0xffffc5cd(%rip)
52c8(8): nop 0x0(%rax,%rax,1)
52d0(4): mov 0x10(%rbx),%r13
52d4(4): mov 0x8(%rbx),%r12
52d8(7): lea 0x3aa7(%rip),%rsi
52df(3): mov (%rbx),%rbx
52e2(5): mov $0x5,%edx
52e7(2): xor %edi,%edi
52e9(5): call 0xffffc357(%rip)
52ee(4): add $0x28,%rsp
52f2(3): mov %r13,%r9
52f5(3): mov %r12,%r8
52f8(3): mov %rbx,%rcx
52fb(3): mov %rbp,%rdi
52fe(3): mov %rax,%rdx
5301(1): pop %rbx
5302(1): pop %rbp
5303(2): pop %r12
5305(2): pop %r13
5307(2): pop %r14
5309(2): pop %r15
530b(5): mov $0x1,%esi
5310(2): xor %eax,%eax
5312(5): jmp 0xffffc57e(%rip)
5317(9): nop 0x0(%rax,%rax,1)
5320(7): lea 0x3b91(%rip),%rsi
5327(5): mov $0x5,%edx
532c(2): xor %edi,%edi
532e(4): mov 0x18(%rbx),%r14
5332(4): mov 0x10(%rbx),%r13
5336(4): mov 0x8(%rbx),%r12
533a(3): mov (%rbx),%rbx
533d(5): call 0xffffc303(%rip)
5342(4): sub $0x8,%rsp
5346(2): push %r14
5348(3): mov %rax,%rdx
534b(3): mov %r13,%r9
534e(3): mov %r12,%r8
5351(3): mov %rbx,%rcx
5354(3): mov %rbp,%rdi
5357(5): mov $0x1,%esi
535c(2): xor %eax,%eax
535e(5): call 0xffffc532(%rip)
5363(1): pop %rax
5364(1): pop %rdx
5365(4): add $0x28,%rsp
5369(1): pop %rbx
536a(1): pop %rbp
536b(2): pop %r12
536d(2): pop %r13
536f(2): pop %r14
5371(2): pop %r15
5373(1): ret near (%rsp)
5374(4): nop 0x0(%rax)
5378(4): mov 0x20(%rbx),%r15
537c(7): lea 0x3b55(%rip),%rsi
5383(5): mov $0x5,%edx
5388(2): xor %edi,%edi
538a(4): mov 0x18(%rbx),%r14
538e(4): mov 0x10(%rbx),%r13
5392(4): mov 0x8(%rbx),%r12
5396(3): mov (%rbx),%rbx
5399(5): call 0xffffc2a7(%rip)
539e(2): push %r15
53a0(2): jmp 0xffffffa6(%rip)
53a2(6): nop 0x0(%rax,%rax,1)
53a8(4): mov 0x8(%rbx),%r8
53ac(4): mov 0x28(%rbx),%r12
53b0(7): lea 0x3b49(%rip),%rsi
53b7(4): mov 0x20(%rbx),%r15
53bb(4): mov 0x18(%rbx),%r14
53bf(5): mov $0x5,%edx
53c4(4): mov 0x10(%rbx),%r13
53c8(2): xor %edi,%edi
53ca(3): mov (%rbx),%rbx
53cd(4): mov %r8,(%rsp)
53d1(5): call 0xffffc26f(%rip)
53d6(4): sub $0x8,%rsp
53da(3): mov %r13,%r9
53dd(2): push %r12
53df(2): push %r15
53e1(2): push %r14
53e3(5): mov 0x20(%rsp),%r8
53e8(3): mov %rbx,%rcx
53eb(3): mov %rax,%rdx
53ee(3): mov %rbp,%rdi
53f1(5): mov $0x1,%esi
53f6(2): xor %eax,%eax
53f8(5): call 0xffffc498(%rip)
53fd(4): add $0x20,%rsp
5401(4): add $0x28,%rsp
5405(1): pop %rbx
5406(1): pop %rbp
5407(2): pop %r12
5409(2): pop %r13
540b(2): pop %r14
540d(2): pop %r15
540f(1): ret near (%rsp)
5410(4): mov 0x10(%rbx),%r9
5414(4): mov 0x30(%rbx),%r13
5418(7): lea 0x3b09(%rip),%rsi
541f(4): mov 0x28(%rbx),%r12
5423(4): mov 0x20(%rbx),%r15
5427(5): mov $0x5,%edx
542c(4): mov 0x18(%rbx),%r14
5430(4): mov 0x8(%rbx),%r8
5434(2): xor %edi,%edi
5436(5): mov %r9,0x8(%rsp)
543b(3): mov (%rbx),%rbx
543e(4): mov %r8,(%rsp)
5442(5): call 0xffffc1fe(%rip)
5447(2): push %r13
5449(2): push %r12
544b(2): push %r15
544d(2): push %r14
544f(5): mov 0x28(%rsp),%r9
5454(2): jmp 0xffffff8f(%rip)
5456(a): nop 0x0(%rax,%rax,1)
5460(4): mov 0x40(%rbx),%r10
5464(4): mov 0x38(%rbx),%r9
5468(5): mov $0x5,%edx
546d(4): mov 0x10(%rbx),%rax
5471(4): mov 0x8(%rbx),%r8
5475(7): lea 0x3b44(%rip),%rsi
547c(4): mov 0x30(%rbx),%r13
5480(4): mov 0x28(%rbx),%r12
5484(4): mov 0x20(%rbx),%r15
5488(4): mov 0x18(%rbx),%r14
548c(5): mov %r10,0x18(%rsp)
5491(5): mov %r9,0x10(%rsp)
5496(4): mov %rax,(%rsp)
549a(5): mov %r8,0x8(%rsp)
549f(3): mov (%rbx),%rbx
54a2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
54b0(3): xor %r9d,%r9d
54b3(4): cmp $0x0,(%r8)
54b7(2): jz 0x14(%rip)
54b9(7): nop 0x0(%rax)
54c0(4): add $0x1,%r9
54c4(5): cmp $0x0,0x0(%r8,%r9,8)
54c9(2): jnz 0xfffffff7(%rip)
54cb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
54d0(4): sub $0x68,%rsp
54d4(3): mov %r8,%r10
54d7(3): xor %r9d,%r9d
54da(9): mov $0x28,%rax
54e3(5): mov %rax,0x58(%rsp)
54e8(2): xor %eax,%eax
54ea(3): mov %rsp,%r8
54ed(3): nop (%rax)
54f0(3): mov (%r10),%eax
54f3(3): cmp $0x2f,%eax
54f6(2): jnbe 0x44(%rip)
54f8(3): mov %eax,%r11d
54fb(4): add 0x10(%r10),%r11
54ff(3): add $0x8,%eax
5502(3): mov %eax,(%r10)
5505(3): mov (%r11),%rax
5508(3): test %rax,%rax
550b(4): mov %rax,0x0(%r8,%r9,8)
550f(2): jz 0xc(%rip)
5511(4): add $0x1,%r9
5515(4): cmp $0xa,%r9
5519(2): jnz 0xffffffd7(%rip)
551b(5): call 0xfffffb75(%rip)
5520(5): mov 0x58(%rsp),%rax
5525(9): xor $0x28,%rax
552e(2): jnz 0x7(%rip)
5530(4): add $0x68,%rsp
5534(1): ret near (%rsp)
5535(5): call 0xffffc13b(%rip)
553a(4): mov 0x8(%r10),%r11
553e(4): lea 0x8(%r11),%rax
5542(4): mov %rax,0x8(%r10)
5546(2): jmp 0xffffffbf(%rip)

"version_etc" :
5550(1): push %rbp
5551(1): push %rbx
5552(6): mov $0x20,%r10d
5558(3): xor %r11d,%r11d
555b(7): sub $0xb8,%rsp
5562(9): mov $0x28,%rax
556b(5): mov %rax,0x78(%rsp)
5570(2): xor %eax,%eax
5572(8): lea 0xd0(%rsp),%rax
557a(8): mov %r8,0xa0(%rsp)
5582(8): lea 0xd0(%rsp),%rbx
558a(5): lea 0x20(%rsp),%r8
558f(8): mov %r9,0xa8(%rsp)
5597(8): mov $0x20,0x8(%rsp)
559f(5): mov %rax,0x10(%rsp)
55a4(8): lea 0x80(%rsp),%rax
55ac(3): xor %r9d,%r9d
55af(5): mov %rax,0x18(%rsp)
55b4(3): mov %rax,%rbp
55b7(9): nop 0x0(%rax,%rax,1)
55c0(4): cmp $0x2f,%r10d
55c4(2): jnbe 0x58(%rip)
55c6(3): mov %r10d,%eax
55c9(6): mov $0x1,%r11d
55cf(4): add $0x8,%r10d
55d3(3): add %rbp,%rax
55d6(3): mov (%rax),%rax
55d9(3): test %rax,%rax
55dc(4): mov %rax,0x0(%r8,%r9,8)
55e0(2): jz 0xc(%rip)
55e2(4): add $0x1,%r9
55e6(4): cmp $0xa,%r9
55ea(2): jnz 0xffffffd6(%rip)
55ec(3): test %r11b,%r11b
55ef(2): jnz 0x26(%rip)
55f1(5): call 0xfffffa9f(%rip)
55f6(5): mov 0x78(%rsp),%rax
55fb(9): xor $0x28,%rax
5604(2): jnz 0xc(%rip)
5606(7): add $0xb8,%rsp
560d(1): pop %rbx
560e(1): pop %rbp
560f(1): ret near (%rsp)
5610(5): call 0xffffc060(%rip)
5615(5): mov %r10d,0x8(%rsp)
561a(2): jmp 0xffffffd7(%rip)
561c(3): mov %rbx,%rax
561f(4): add $0x8,%rbx
5623(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5630(1): push %rbx
5631(7): lea 0x376a(%rip),%rsi
5638(5): mov $0x5,%edx
563d(2): xor %edi,%edi
563f(5): call 0xffffc001(%rip)
5644(7): lea 0x376c(%rip),%rdx
564b(3): mov %rax,%rsi
564e(5): mov $0x1,%edi
5653(2): xor %eax,%eax
5655(5): call 0xffffc1ab(%rip)
565a(7): lea 0x376c(%rip),%rsi
5661(5): mov $0x5,%edx
5666(2): xor %edi,%edi
5668(5): call 0xffffbfd8(%rip)
566d(7): lea 0x3014(%rip),%rcx
5674(7): lea 0x299e(%rip),%rdx
567b(3): mov %rax,%rsi
567e(5): mov $0x1,%edi
5683(2): xor %eax,%eax
5685(5): call 0xffffc17b(%rip)
568a(7): mov 0x2059f7(%rip),%rbx
5691(7): lea 0x3968(%rip),%rsi
5698(2): xor %edi,%edi
569a(5): mov $0x5,%edx
569f(5): call 0xffffbfa1(%rip)
56a4(3): mov %rbx,%rsi
56a7(3): mov %rax,%rdi
56aa(1): pop %rbx
56ab(5): jmp 0xffffc075(%rip)

"xmalloc" :
56b0(1): push %rbx
56b1(3): mov %rdi,%rbx
56b4(5): call 0xffffc0dc(%rip)
56b9(3): test %rax,%rax
56bc(2): jnz 0x7(%rip)
56be(3): test %rbx,%rbx
56c1(2): jnz 0x4(%rip)
56c3(1): pop %rbx
56c4(1): ret near (%rsp)
56c5(5): call 0x23b(%rip)

"xnmalloc" :
56d0(3): mov %rdi,%rax
56d3(3): mul %rax,%rsi,%rdx
56d6(3): mov %rax,%rdi
56d9(3): seto %al
56dc(3): test %rdi,%rdi
56df(2): js 0xc(%rip)
56e1(3): movzx %al,%eax
56e4(3): test %rax,%rax
56e7(2): jnz 0x4(%rip)
56e9(2): jmp 0xffffffc7(%rip)
56eb(4): sub $0x8,%rsp
56ef(5): call 0x211(%rip)

"xrealloc" :
5710(3): test %rsi,%rsi
5713(1): push %rbx
5714(3): mov %rsi,%rbx
5717(2): jnz 0x7(%rip)
5719(3): test %rdi,%rdi
571c(2): jnz 0x1c(%rip)
571e(3): mov %rbx,%rsi
5721(5): call 0xffffc0bf(%rip)
5726(3): test %rax,%rax
5729(2): jnz 0x7(%rip)
572b(3): test %rbx,%rbx
572e(2): jnz 0x13(%rip)
5730(1): pop %rbx
5731(1): ret near (%rsp)
5732(6): nop 0x0(%rax,%rax,1)
5738(5): call 0xffffbe58(%rip)
573d(2): xor %eax,%eax
573f(1): pop %rbx
5740(1): ret near (%rsp)
5741(5): call 0x1bf(%rip)

"xnrealloc" :
5750(3): mov %rsi,%rax
5753(3): mul %rax,%rdx,%rdx
5756(3): mov %rax,%rsi
5759(3): seto %al
575c(3): test %rsi,%rsi
575f(2): js 0xc(%rip)
5761(3): movzx %al,%eax
5764(3): test %rax,%rax
5767(2): jnz 0x4(%rip)
5769(2): jmp 0xffffffa7(%rip)
576b(4): sub $0x8,%rsp
576f(5): call 0x191(%rip)

"x2nrealloc" :
5780(3): test %rdi,%rdi
5783(3): mov %rdx,%r9
5786(3): mov (%rsi),%rcx
5789(2): jz 0x37(%rip)
578b(2): xor %edx,%edx
578d(a): mov $0x6148914691236517204,%rax
5797(3): div %r9,%rax
579a(3): cmp %rcx,%rax
579d(2): jbe 0x3e(%rip)
579f(3): mov %rcx,%rax
57a2(3): shr $0x1,%rax
57a5(5): lea 0x1(%rax,%rcx,1),%rcx
57aa(3): mov %rcx,(%rsi)
57ad(4): imul %r9,%rcx
57b1(3): mov %rcx,%rsi
57b4(5): jmp 0xffffff5c(%rip)
57b9(7): nop 0x0(%rax)
57c0(3): test %rcx,%rcx
57c3(2): jz 0x25(%rip)
57c5(3): mov %rcx,%rax
57c8(3): mul %rax,%r9,%rdx
57cb(3): seto %dl
57ce(3): test %rax,%rax
57d1(3): movzx %dl,%edx
57d4(2): js 0x7(%rip)
57d6(3): test %rdx,%rdx
57d9(2): jz 0xffffffd1(%rip)
57db(4): sub $0x8,%rsp
57df(5): call 0x121(%rip)
57e4(4): nop 0x0(%rax)
57e8(2): xor %edx,%edx
57ea(5): mov $0x80,%eax
57ef(3): xor %r8d,%r8d
57f2(3): div %r9,%rax
57f5(3): test %rax,%rax
57f8(4): setz %r8b
57fc(4): lea 0x0(%r8,%rax,1),%rcx
5800(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5810(3): test %rdi,%rdi
5813(3): mov (%rsi),%rax
5816(2): jz 0x2a(%rip)
5818(a): mov $0x6148914691236517203,%rdx
5822(3): cmp %rdx,%rax
5825(2): jnbe 0x2c(%rip)
5827(3): mov %rax,%rdx
582a(3): shr $0x1,%rdx
582d(5): lea 0x1(%rdx,%rax,1),%rax
5832(3): mov %rax,(%rsi)
5835(3): mov %rax,%rsi
5838(5): jmp 0xfffffed8(%rip)
583d(3): nop (%rax)
5840(3): test %rax,%rax
5843(5): mov $0x80,%edx
5848(4): cmove %rdx,%rax
584c(3): test %rax,%rax
584f(2): jns 0xffffffe3(%rip)
5851(4): sub $0x8,%rsp
5855(5): call 0xab(%rip)

"xzalloc" :
5860(1): push %rbx
5861(3): mov %rdi,%rbx
5864(5): call 0xfffffe4c(%rip)
5869(3): mov %rbx,%rdx
586c(2): xor %esi,%esi
586e(3): mov %rax,%rdi
5871(1): pop %rbx
5872(5): jmp 0xffffbe6e(%rip)

"xcalloc" :
5880(3): mov %rdi,%rax
5883(4): sub $0x8,%rsp
5887(3): mul %rax,%rsi,%rdx
588a(3): seto %dl
588d(3): test %rax,%rax
5890(2): js 0x19(%rip)
5892(3): movzx %dl,%edx
5895(3): test %rdx,%rdx
5898(2): jnz 0x11(%rip)
589a(5): call 0xffffbe96(%rip)
589f(3): test %rax,%rax
58a2(2): jz 0x7(%rip)
58a4(4): add $0x8,%rsp
58a8(1): ret near (%rsp)
58a9(5): call 0x57(%rip)

"xmemdup" :
58b0(1): push %rbp
58b1(1): push %rbx
58b2(3): mov %rdi,%rbp
58b5(3): mov %rsi,%rdi
58b8(3): mov %rsi,%rbx
58bb(4): sub $0x8,%rsp
58bf(5): call 0xfffffdf1(%rip)
58c4(4): add $0x8,%rsp
58c8(3): mov %rbx,%rdx
58cb(3): mov %rbp,%rsi
58ce(1): pop %rbx
58cf(1): pop %rbp
58d0(3): mov %rax,%rdi
58d3(5): jmp 0xffffbe8d(%rip)

"xstrdup" :
58e0(1): push %rbx
58e1(3): mov %rdi,%rbx
58e4(5): call 0xffffbd7c(%rip)
58e9(3): mov %rbx,%rdi
58ec(4): lea 0x1(%rax),%rsi
58f0(1): pop %rbx
58f1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5900(7): lea 0x37a8(%rip),%rsi
5907(4): sub $0x8,%rsp
590b(5): mov $0x5,%edx
5910(2): xor %edi,%edi
5912(5): call 0xffffbd2e(%rip)
5917(6): mov 0x2056fb(%rip),%edi
591d(7): lea 0x2ef8(%rip),%rdx
5924(3): mov %rax,%rcx
5927(2): xor %esi,%esi
5929(2): xor %eax,%eax
592b(5): call 0xffffbf15(%rip)
5930(5): call 0xffffbc70(%rip)

"xstrtold" :
5940(2): push %r14
5942(2): push %r13
5944(3): mov %rcx,%r14
5947(2): push %r12
5949(1): push %rbp
594a(3): mov %rdi,%rbp
594d(1): push %rbx
594e(3): mov %rdx,%r13
5951(3): mov %rsi,%rbx
5954(4): sub $0x10,%rsp
5958(9): mov $0x28,%rax
5961(5): mov %rax,0x8(%rsp)
5966(2): xor %eax,%eax
5968(5): call 0xffffbc48(%rip)
596d(3): mov %rsp,%rsi
5970(3): mov %rax,%r12
5973(6): mov $0x0,(%rax)
5979(3): mov %rbp,%rdi
597c(3): call %r14
597f(4): mov (%rsp),%rcx
5983(3): cmp %rbp,%rcx
5986(2): jz 0x6a(%rip)
5988(3): test %rbx,%rbx
598b(2): jz 0x45(%rip)
598d(2): fld1 %st0
598f(2): fxch %st1,%st0
5991(2): fucomi %st1,%st0
5993(2): fstp %st0,%st1
5995(2): jp 0x9(%rip)
5997(5): mov $0x1,%eax
599c(2): jz 0xf(%rip)
599e(5): cmp $0x22,(%r12)
59a3(3): setnz %al
59a6(3): test %rbx,%rbx
59a9(2): jz 0x5(%rip)
59ab(3): mov %rcx,(%rbx)
59ae(5): mov 0x8(%rsp),%rdx
59b3(9): xor $0x28,%rdx
59bc(4): fstp %st0,0x0(%r13)
59c0(2): jnz 0x34(%rip)
59c2(4): add $0x10,%rsp
59c6(1): pop %rbx
59c7(1): pop %rbp
59c8(2): pop %r12
59ca(2): pop %r13
59cc(2): pop %r14
59ce(1): ret near (%rsp)
59cf(1): nop 
59d0(2): xor %eax,%eax
59d2(3): cmp $0x0,(%rcx)
59d5(2): jnz 0xffffffd9(%rip)
59d7(2): fld1 %st0
59d9(2): fxch %st1,%st0
59db(2): fucomi %st1,%st0
59dd(2): fstp %st0,%st1
59df(2): jp 0xffffffbf(%rip)
59e1(2): jnz 0xffffffbd(%rip)
59e3(5): mov $0x1,%eax
59e8(2): jmp 0xffffffc6(%rip)
59ea(6): nop 0x0(%rax,%rax,1)
59f0(2): xor %eax,%eax
59f2(2): jmp 0xffffffb4(%rip)
59f4(5): call 0xffffbc7c(%rip)

"rpl_asprintf" :
5a00(7): sub $0xd8,%rsp
5a07(2): test %al,%al
5a09(5): mov %rdx,0x30(%rsp)
5a0e(5): mov %rcx,0x38(%rsp)
5a13(5): mov %r8,0x40(%rsp)
5a18(5): mov %r9,0x48(%rsp)
5a1d(2): jz 0x39(%rip)
5a1f(5): movaps %xmm0,0x50(%rsp)
5a24(5): movaps %xmm1,0x60(%rsp)
5a29(5): movaps %xmm2,0x70(%rsp)
5a2e(8): movaps %xmm3,0x80(%rsp)
5a36(8): movaps %xmm4,0x90(%rsp)
5a3e(8): movaps %xmm5,0xa0(%rsp)
5a46(8): movaps %xmm6,0xb0(%rsp)
5a4e(8): movaps %xmm7,0xc0(%rsp)
5a56(9): mov $0x28,%rax
5a5f(5): mov %rax,0x18(%rsp)
5a64(2): xor %eax,%eax
5a66(8): lea 0xe0(%rsp),%rax
5a6e(3): mov %rsp,%rdx
5a71(5): mov %rax,0x8(%rsp)
5a76(5): lea 0x20(%rsp),%rax
5a7b(7): mov $0x10,(%rsp)
5a82(8): mov $0x30,0x4(%rsp)
5a8a(5): mov %rax,0x10(%rsp)
5a8f(5): call 0xc1(%rip)
5a94(5): mov 0x18(%rsp),%rcx
5a99(9): xor $0x28,%rcx
5aa2(2): jnz 0xa(%rip)
5aa4(7): add $0xd8,%rsp
5aab(1): ret near (%rsp)
5aac(5): call 0xffffbbc4(%rip)

"rpl_mbrtowc" :
5ac0(2): push %r13
5ac2(2): push %r12
5ac4(3): mov %rsi,%r13
5ac7(1): push %rbp
5ac8(1): push %rbx
5ac9(3): mov %rdi,%rbx
5acc(3): mov %rdx,%r12
5acf(4): sub $0x18,%rsp
5ad3(9): mov $0x28,%rax
5adc(5): mov %rax,0x8(%rsp)
5ae1(2): xor %eax,%eax
5ae3(5): lea 0x4(%rsp),%rax
5ae8(3): test %rdi,%rdi
5aeb(4): cmove %rax,%rbx
5aef(3): mov %rbx,%rdi
5af2(5): call 0xffffbb9e(%rip)
5af7(4): cmp $0xfffffffd,%rax
5afb(3): mov %rax,%rbp
5afe(2): jbe 0x22(%rip)
5b00(3): test %r12,%r12
5b03(2): jz 0x1d(%rip)
5b05(2): xor %edi,%edi
5b07(5): call 0x209(%rip)
5b0c(2): test %al,%al
5b0e(2): jnz 0x12(%rip)
5b10(5): movzx 0x0(%r13),%eax
5b15(5): mov $0x1,%ebp
5b1a(2): mov %eax,(%rbx)
5b1c(4): nop 0x0(%rax)
5b20(5): mov 0x8(%rsp),%rdx
5b25(9): xor $0x28,%rdx
5b2e(3): mov %rbp,%rax
5b31(2): jnz 0xd(%rip)
5b33(4): add $0x18,%rsp
5b37(1): pop %rbx
5b38(1): pop %rbp
5b39(2): pop %r12
5b3b(2): pop %r13
5b3d(1): ret near (%rsp)
5b3e(5): call 0xffffbb32(%rip)

"rpl_vasprintf" :
5b50(1): push %rbx
5b51(3): mov %rsi,%rax
5b54(3): mov %rdi,%rbx
5b57(2): xor %edi,%edi
5b59(4): sub $0x10,%rsp
5b5d(9): mov $0x28,%rcx
5b66(5): mov %rcx,0x8(%rsp)
5b6b(2): xor %ecx,%ecx
5b6d(3): mov %rsp,%rsi
5b70(3): mov %rdx,%rcx
5b73(3): mov %rax,%rdx
5b76(5): call 0x35a(%rip)
5b7b(3): test %rax,%rax
5b7e(2): jz 0x44(%rip)
5b80(4): mov (%rsp),%rdx
5b84(7): cmp $0x7fffffff,%rdx
5b8b(2): jnbe 0x1d(%rip)
5b8d(3): mov %rax,(%rbx)
5b90(2): mov %edx,%eax
5b92(5): mov 0x8(%rsp),%rbx
5b97(9): xor $0x28,%rbx
5ba0(2): jnz 0x29(%rip)
5ba2(4): add $0x10,%rsp
5ba6(1): pop %rbx
5ba7(1): ret near (%rsp)
5ba8(3): mov %rax,%rdi
5bab(5): call 0xffffb9e5(%rip)
5bb0(5): call 0xffffba00(%rip)
5bb5(6): mov $0x4b,(%rax)
5bbb(5): mov $0xffffffff,%eax
5bc0(2): jmp 0xffffffd2(%rip)
5bc2(5): mov $0xffffffff,%eax
5bc7(2): jmp 0xffffffcb(%rip)
5bc9(5): call 0xffffbaa7(%rip)

"c_strtold" :
5bd0(2): push %r12
5bd2(1): push %rbp
5bd3(3): mov %rdi,%rbp
5bd6(1): push %rbx
5bd7(3): mov %rsi,%rbx
5bda(4): sub $0x10,%rsp
5bde(7): mov 0x205673(%rip),%rax
5be5(3): test %rax,%rax
5be8(2): jz 0x78(%rip)
5bea(7): mov 0x205667(%rip),%rdi
5bf1(3): test %rdi,%rdi
5bf4(2): jz 0x4c(%rip)
5bf6(5): call 0xffffbb8a(%rip)
5bfb(3): test %rax,%rax
5bfe(3): mov %rax,%r12
5c01(2): jz 0x3f(%rip)
5c03(3): mov %rbx,%rsi
5c06(3): mov %rbp,%rdi
5c09(5): call 0xffffbc27(%rip)
5c0e(3): fstp %st0,(%rsp)
5c11(5): call 0xffffb99f(%rip)
5c16(3): mov %r12,%rdi
5c19(3): mov %rax,%rbx
5c1c(2): mov (%rax),%ebp
5c1e(5): call 0xffffbb62(%rip)
5c23(3): test %rax,%rax
5c26(3): fld (%rsp),%st0
5c29(2): jz 0x56(%rip)
5c2b(2): mov %ebp,(%rbx)
5c2d(4): add $0x10,%rsp
5c31(1): pop %rbx
5c32(1): pop %rbp
5c33(2): pop %r12
5c35(1): ret near (%rsp)
5c36(a): nop 0x0(%rax,%rax,1)
5c40(3): test %rbx,%rbx
5c43(2): jnz 0xd(%rip)
5c45(4): add $0x10,%rsp
5c49(2): fld1 %st0
5c4b(1): pop %rbx
5c4c(1): pop %rbp
5c4d(2): pop %r12
5c4f(1): ret near (%rsp)
5c50(3): mov %rbp,(%rbx)
5c53(4): add $0x10,%rsp
5c57(2): fld1 %st0
5c59(1): pop %rbx
5c5a(1): pop %rbp
5c5b(2): pop %r12
5c5d(1): ret near (%rsp)
5c5e(2): nop 
5c60(7): lea 0x24b9(%rip),%rsi
5c67(2): xor %edx,%edx
5c69(5): mov $0x1fbf,%edi
5c6e(5): call 0xffffba42(%rip)
5c73(7): mov %rax,0x2055de(%rip)
5c7a(5): jmp 0xffffff70(%rip)
5c7f(2): fstp %st0,%st0
5c81(5): call 0xffffb91f(%rip)

"close_stream" :
5c90(2): push %r12
5c92(1): push %rbp
5c93(3): mov %rdi,%rbp
5c96(1): push %rbx
5c97(5): call 0xffffb959(%rip)
5c9c(3): mov 0x0(%rbp),%ebx
5c9f(3): mov %rbp,%rdi
5ca2(3): mov %rax,%r12
5ca5(5): call 0x10b(%rip)
5caa(3): and $0x20,%ebx
5cad(2): test %ebx,%ebx
5caf(2): jnz 0x19(%rip)
5cb1(2): test %eax,%eax
5cb3(2): jz 0xc(%rip)
5cb5(3): test %r12,%r12
5cb8(5): mov $0xffffffff,%eax
5cbd(2): jz 0x3b(%rip)
5cbf(1): pop %rbx
5cc0(1): pop %rbp
5cc1(2): pop %r12
5cc3(1): ret near (%rsp)
5cc4(4): nop 0x0(%rax)
5cc8(2): test %eax,%eax
5cca(2): jnz 0x1e(%rip)
5ccc(5): call 0xffffb8e4(%rip)
5cd1(6): mov $0x0,(%rax)
5cd7(5): mov $0xffffffff,%eax
5cdc(1): pop %rbx
5cdd(1): pop %rbp
5cde(2): pop %r12
5ce0(1): ret near (%rsp)
5ce1(7): nop 0x0(%rax)
5ce8(1): pop %rbx
5ce9(5): mov $0xffffffff,%eax
5cee(1): pop %rbp
5cef(2): pop %r12
5cf1(1): ret near (%rsp)
5cf2(6): nop 0x0(%rax,%rax,1)
5cf8(5): call 0xffffb8b8(%rip)
5cfd(3): cmp $0x9,(%rax)
5d00(1): pop %rbx
5d01(1): pop %rbp
5d02(2): pop %r12
5d04(3): setnz %al
5d07(3): movzx %al,%eax
5d0a(2): neg %eax
5d0c(1): ret near (%rsp)

"hard_locale" :
5d10(4): sub $0x8,%rsp
5d14(2): xor %esi,%esi
5d16(5): call 0xffffbada(%rip)
5d1b(3): mov %rax,%rdx
5d1e(5): mov $0x1,%eax
5d23(3): test %rdx,%rdx
5d26(2): jz 0x1f(%rip)
5d28(7): lea 0x23f1(%rip),%rdi
5d2f(5): mov $0x2,%ecx
5d34(3): mov %rdx,%rsi
5d37(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5d39(3): setnbe %cl
5d3c(3): sbb $0x0,%cl
5d3f(2): xor %eax,%eax
5d41(2): test %cl,%cl
5d43(2): jnz 0xd(%rip)
5d45(4): add $0x8,%rsp
5d49(1): ret near (%rsp)
5d4a(6): nop 0x0(%rax,%rax,1)
5d50(7): lea 0x3369(%rip),%rdi
5d57(5): mov $0x6,%ecx
5d5c(3): mov %rdx,%rsi
5d5f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5d61(3): setnbe %al
5d64(2): sbb $0x0,%al
5d66(2): test %al,%al
5d68(3): setnz %al
5d6b(4): add $0x8,%rsp
5d6f(1): ret near (%rsp)

"locale_charset" :
5d70(4): sub $0x8,%rsp
5d74(5): mov $0xe,%edi
5d79(5): call 0xffffba37(%rip)
5d7e(3): test %rax,%rax
5d81(2): jz 0x1f(%rip)
5d83(3): cmp $0x0,(%rax)
5d86(7): lea 0x3339(%rip),%rdx
5d8d(4): cmove %rdx,%rax
5d91(4): add $0x8,%rsp
5d95(1): ret near (%rsp)
5d96(a): nop 0x0(%rax,%rax,1)
5da0(7): lea 0x331f(%rip),%rax
5da7(4): add $0x8,%rsp
5dab(1): ret near (%rsp)

"rpl_fclose" :
5db0(2): push %r12
5db2(1): push %rbp
5db3(1): push %rbx
5db4(3): mov %rdi,%rbx
5db7(5): call 0xffffb9b9(%rip)
5dbc(2): test %eax,%eax
5dbe(3): mov %rbx,%rdi
5dc1(2): js 0x56(%rip)
5dc3(5): call 0xffffb9fd(%rip)
5dc8(2): test %eax,%eax
5dca(2): jnz 0x2e(%rip)
5dcc(3): mov %rbx,%rdi
5dcf(5): call 0x61(%rip)
5dd4(2): test %eax,%eax
5dd6(2): jz 0x3e(%rip)
5dd8(5): call 0xffffb7d8(%rip)
5ddd(3): mov (%rax),%r12d
5de0(3): mov %rbx,%rdi
5de3(3): mov %rax,%rbp
5de6(5): call 0xffffb83a(%rip)
5deb(3): test %r12d,%r12d
5dee(2): jnz 0x32(%rip)
5df0(1): pop %rbx
5df1(1): pop %rbp
5df2(2): pop %r12
5df4(1): ret near (%rsp)
5df5(3): nop (%rax)
5df8(3): mov %rbx,%rdi
5dfb(5): call 0xffffb975(%rip)
5e00(2): xor %esi,%esi
5e02(5): mov $0x1,%edx
5e07(2): mov %eax,%edi
5e09(5): call 0xffffb8c7(%rip)
5e0e(4): cmp $0xffffffff,%rax
5e12(2): jnz 0xffffffba(%rip)
5e14(3): mov %rbx,%rdi
5e17(1): pop %rbx
5e18(1): pop %rbp
5e19(2): pop %r12
5e1b(5): jmp 0xffffb805(%rip)
5e20(4): mov %r12d,0x0(%rbp)
5e24(5): mov $0xffffffff,%eax
5e29(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5e30(3): test %rdi,%rdi
5e33(1): push %rbx
5e34(3): mov %rdi,%rbx
5e37(2): jz 0x13(%rip)
5e39(5): call 0xffffb987(%rip)
5e3e(2): test %eax,%eax
5e40(2): jz 0xa(%rip)
5e42(6): test $0x100,(%rbx)
5e48(2): jnz 0x10(%rip)
5e4a(3): mov %rbx,%rdi
5e4d(1): pop %rbx
5e4e(5): jmp 0xffffb952(%rip)
5e53(5): nop 0x0(%rax,%rax,1)
5e58(3): mov %rbx,%rdi
5e5b(5): mov $0x1,%edx
5e60(2): xor %esi,%esi
5e62(5): call 0xe(%rip)
5e67(3): mov %rbx,%rdi
5e6a(1): pop %rbx
5e6b(5): jmp 0xffffb935(%rip)

"rpl_fseeko" :
5e70(4): mov 0x8(%rdi),%rax
5e74(4): cmp %rax,0x10(%rdi)
5e78(2): jz 0x8(%rip)
5e7a(5): jmp 0xffffb9d6(%rip)
5e7f(1): nop 
5e80(4): mov 0x20(%rdi),%rax
5e84(4): cmp %rax,0x28(%rdi)
5e88(2): jnz 0xfffffff2(%rip)
5e8a(5): cmp $0x0,0x48(%rdi)
5e8f(2): jnz 0xffffffeb(%rip)
5e91(2): push %r12
5e93(1): push %rbp
5e94(3): mov %edx,%r12d
5e97(1): push %rbx
5e98(3): mov %rsi,%rbp
5e9b(3): mov %rdi,%rbx
5e9e(5): call 0xffffb8d2(%rip)
5ea3(3): mov %r12d,%edx
5ea6(3): mov %rbp,%rsi
5ea9(2): mov %eax,%edi
5eab(5): call 0xffffb825(%rip)
5eb0(4): cmp $0xffffffff,%rax
5eb4(2): jz 0xe(%rip)
5eb6(3): and $0xef,(%rbx)
5eb9(7): mov %rax,0x90(%rbx)
5ec0(2): xor %eax,%eax
5ec2(1): pop %rbx
5ec3(1): pop %rbp
5ec4(2): pop %r12
5ec6(1): ret near (%rsp)

"vasnprintf" :
5ed0(1): push %rbp
5ed1(3): mov %rsp,%rbp
5ed4(2): push %r15
5ed6(2): push %r14
5ed8(2): push %r13
5eda(2): push %r12
5edc(7): lea 0xfffffc50(%rbp),%r14
5ee3(1): push %rbx
5ee4(3): mov %rdx,%rbx
5ee7(3): mov %rcx,%r12
5eea(3): mov %r14,%rdx
5eed(7): sub $0x408,%rsp
5ef4(7): mov %rsi,0xfffffbe8(%rbp)
5efb(7): lea 0xfffffd40(%rbp),%rsi
5f02(7): mov %rdi,0xfffffc18(%rbp)
5f09(3): mov %rbx,%rdi
5f0c(7): mov %r14,0xfffffbf0(%rbp)
5f13(9): mov $0x28,%rax
5f1c(4): mov %rax,0xffffffc8(%rbp)
5f20(2): xor %eax,%eax
5f22(7): mov %rsi,0xfffffbf8(%rbp)
5f29(5): call 0x12c7(%rip)
5f2e(2): test %eax,%eax
5f30(6): js 0xe68(%rip)
5f36(3): mov %r14,%rsi
5f39(3): mov %r12,%rdi
5f3c(5): call 0x10b4(%rip)
5f41(2): test %eax,%eax
5f43(6): js 0xebd(%rip)
5f49(7): mov 0xfffffd50(%rbp),%rax
5f50(7): mov $0xffffffff,%rdx
5f57(4): add $0x7,%rax
5f5b(4): cmp $0x6,%rax
5f5f(4): cmovbe %rdx,%rax
5f63(7): add 0xfffffd58(%rbp),%rax
5f6a(6): jb 0xa2e(%rip)
5f70(3): mov %rax,%rdi
5f73(3): xor %r8d,%r8d
5f76(4): add $0x6,%rdi
5f7a(4): setb %r8b
5f7e(6): jb 0xa1a(%rip)
5f84(7): cmp $0xf9f,%rdi
5f8b(6): jbe 0x14d(%rip)
5f91(4): cmp $0xffffffff,%rdi
5f95(7): mov %r8,0xfffffc38(%rbp)
5f9c(6): jz 0x9fc(%rip)
5fa2(5): call 0xffffb7ee(%rip)
5fa7(3): test %rax,%rax
5faa(7): mov %rax,0xfffffc28(%rbp)
5fb1(6): jz 0x9e7(%rip)
5fb7(7): mov 0xfffffc38(%rbp),%r8
5fbe(7): mov %rax,0xfffffbe0(%rbp)
5fc5(3): xor %r12d,%r12d
5fc8(8): cmp $0x0,0xfffffc18(%rbp)
5fd0(2): jz 0xc(%rip)
5fd2(7): mov 0xfffffbe8(%rbp),%rax
5fd9(3): mov (%rax),%r12
5fdc(7): mov 0xfffffd48(%rbp),%r13
5fe3(7): lea 0xfffffc44(%rbp),%rax
5fea(7): mov 0xfffffc18(%rbp),%r15
5ff1(b): mov $0x0,0xfffffc00(%rbp)
5ffc(7): mov %rax,0xfffffc10(%rbp)
6003(3): mov %rbx,%rax
6006(3): mov %r8,%rbx
6009(4): mov 0x0(%r13),%rcx
600d(3): mov %rax,%r8
6010(3): cmp %r8,%rcx
6013(6): jz 0x96e(%rip)
6019(3): sub %r8,%rcx
601c(3): mov %rbx,%rax
601f(3): add %rcx,%rax
6022(3): mov %rax,%r14
6025(6): jnb 0xe3(%rip)
602b(4): cmp $0xffffffff,%r12
602f(6): jz 0xad1(%rip)
6035(5): call 0xffffb57b(%rip)
603a(7): mov %rax,0xfffffc38(%rbp)
6041(7): cmp 0xfffffc18(%rbp),%r15
6048(2): jz 0xb(%rip)
604a(3): test %r15,%r15
604d(6): jnz 0xae3(%rip)
6053(7): mov 0xfffffbe0(%rbp),%rax
605a(3): test %rax,%rax
605d(2): jz 0xa(%rip)
605f(3): mov %rax,%rdi
6062(5): call 0xffffb52e(%rip)
6067(7): mov 0xfffffbf8(%rbp),%rax
606e(7): mov 0xfffffd48(%rbp),%rdi
6075(4): add $0x20,%rax
6079(3): cmp %rax,%rdi
607c(2): jz 0x7(%rip)
607e(5): call 0xffffb512(%rip)
6083(7): mov 0xfffffbf0(%rbp),%rax
608a(7): mov 0xfffffc58(%rbp),%rdi
6091(4): add $0x10,%rax
6095(3): cmp %rax,%rdi
6098(2): jz 0x7(%rip)
609a(5): call 0xffffb4f6(%rip)
609f(7): mov 0xfffffc38(%rbp),%rax
60a6(3): xor %r15d,%r15d
60a9(6): mov $0xc,(%rax)
60af(4): mov 0xffffffc8(%rbp),%rdi
60b3(9): xor $0x28,%rdi
60bc(3): mov %r15,%rax
60bf(6): jnz 0xf08(%rip)
60c5(4): lea 0xffffffd8(%rbp),%rsp
60c9(1): pop %rbx
60ca(2): pop %r12
60cc(2): pop %r13
60ce(2): pop %r14
60d0(2): pop %r15
60d2(1): pop %rbp
60d3(1): ret near (%rsp)
60d4(4): nop 0x0(%rax)
60d8(4): add $0x24,%rax
60dc(b): mov $0x0,0xfffffbe0(%rbp)
60e7(4): and $0xfffffff0,%rax
60eb(3): sub %rax,%rsp
60ee(5): lea 0xf(%rsp),%rax
60f3(4): and $0xfffffff0,%rax
60f7(7): mov %rax,0xfffffc28(%rbp)
60fe(5): jmp 0xfffffec7(%rip)
6103(5): nop 0x0(%rax,%rax,1)
6108(3): cmp %rax,%r12
610b(2): jnb 0x69(%rip)
610d(3): test %r12,%r12
6110(6): jnz 0x930(%rip)
6116(4): cmp $0xc,%rax
611a(6): jnbe 0x938(%rip)
6120(6): mov $0xc,%r12d
6126(7): cmp 0xfffffc18(%rbp),%r15
612d(3): setz %dl
6130(3): test %r15,%r15
6133(6): jz 0x945(%rip)
6139(2): test %dl,%dl
613b(6): jnz 0x93d(%rip)
6141(3): mov %r12,%rsi
6144(3): mov %r15,%rdi
6147(7): mov %r8,0xfffffc30(%rbp)
614e(7): mov %rcx,0xfffffc38(%rbp)
6155(5): call 0xffffb68b(%rip)
615a(3): test %rax,%rax
615d(7): mov 0xfffffc38(%rbp),%rcx
6164(7): mov 0xfffffc30(%rbp),%r8
616b(6): jz 0x9b0(%rip)
6171(3): mov %rax,%r15
6174(4): lea 0x0(%r15,%rbx,1),%rdi
6178(3): mov %rcx,%rdx
617b(3): mov %r8,%rsi
617e(5): call 0xffffb5e2(%rip)
6183(7): mov 0xfffffc00(%rbp),%rax
618a(7): cmp %rax,0xfffffd40(%rbp)
6191(6): jz 0xcba(%rip)
6197(5): movzx 0x48(%r13),%edx
619c(4): mov 0x50(%r13),%rax
61a0(3): cmp $0x25,%dl
61a3(6): jz 0x795(%rip)
61a9(4): cmp $0xffffffff,%rax
61ad(6): jz 0xc49(%rip)
61b3(7): mov 0xfffffc58(%rbp),%r8
61ba(4): shl/sal $0x5,%rax
61be(3): add %r8,%rax
61c1(3): cmp $0x6e,%dl
61c4(2): mov (%rax),%edi
61c6(6): mov %edi,0xfffffc30(%rbp)
61cc(6): jz 0x7e4(%rip)
61d2(4): mov 0x10(%r13),%eax
61d6(7): mov 0xfffffc28(%rbp),%rdi
61dd(2): test $0x1,%al
61df(3): mov $0x25,(%rdi)
61e2(4): lea 0x1(%rdi),%rbx
61e6(2): jz 0x11(%rip)
61e8(7): mov 0xfffffc28(%rbp),%rdi
61ef(4): lea 0x2(%rdi),%rbx
61f3(4): mov $0x27,0x1(%rdi)
61f7(2): test $0x2,%al
61f9(2): jz 0x9(%rip)
61fb(3): mov $0x2d,(%rbx)
61fe(4): add $0x1,%rbx
6202(2): test $0x4,%al
6204(2): jz 0x9(%rip)
6206(3): mov $0x2b,(%rbx)
6209(4): add $0x1,%rbx
620d(2): test $0x8,%al
620f(2): jz 0x9(%rip)
6211(3): mov $0x20,(%rbx)
6214(4): add $0x1,%rbx
6218(2): test $0x10,%al
621a(2): jz 0x9(%rip)
621c(3): mov $0x23,(%rbx)
621f(4): add $0x1,%rbx
6223(2): test $0x40,%al
6225(2): jz 0x9(%rip)
6227(3): mov $0x49,(%rbx)
622a(4): add $0x1,%rbx
622e(2): test $0x20,%al
6230(2): jz 0x9(%rip)
6232(3): mov $0x30,(%rbx)
6235(4): add $0x1,%rbx
6239(4): mov 0x18(%r13),%rsi
623d(4): mov 0x20(%r13),%rdx
6241(3): cmp %rdx,%rsi
6244(2): jz 0x32(%rip)
6246(3): mov %rdx,%rcx
6249(3): mov %rbx,%rdi
624c(7): mov %r8,0xfffffc20(%rbp)
6253(3): sub %rsi,%rcx
6256(3): mov %rcx,%rdx
6259(7): mov %rcx,0xfffffc38(%rbp)
6260(5): call 0xffffb500(%rip)
6265(7): mov 0xfffffc38(%rbp),%rcx
626c(7): mov 0xfffffc20(%rbp),%r8
6273(3): add %rcx,%rbx
6276(4): mov 0x30(%r13),%rsi
627a(4): mov 0x38(%r13),%rdx
627e(3): cmp %rdx,%rsi
6281(2): jz 0x32(%rip)
6283(3): mov %rdx,%rcx
6286(3): mov %rbx,%rdi
6289(7): mov %r8,0xfffffc20(%rbp)
6290(3): sub %rsi,%rcx
6293(3): mov %rcx,%rdx
6296(7): mov %rcx,0xfffffc38(%rbp)
629d(5): call 0xffffb4c3(%rip)
62a2(7): mov 0xfffffc38(%rbp),%rcx
62a9(7): mov 0xfffffc20(%rbp),%r8
62b0(3): add %rcx,%rbx
62b3(6): mov 0xfffffc30(%rbp),%edi
62b9(3): cmp $0x10,%edi
62bc(2): jnbe 0x2f(%rip)
62be(5): mov $0x1,%eax
62c3(2): mov %edi,%ecx
62c5(3): shl/sal %cl,%rax
62c8(5): test $0x14180,%eax
62cd(2): jnz 0x17(%rip)
62cf(3): test $0x10,%ah
62d2(6): jnz 0x95e(%rip)
62d8(3): test $0x6,%ah
62db(2): jz 0x10(%rip)
62dd(3): mov $0x6c,(%rbx)
62e0(4): add $0x1,%rbx
62e4(3): mov $0x6c,(%rbx)
62e7(4): add $0x1,%rbx
62eb(5): movzx 0x48(%r13),%eax
62f0(4): mov $0x0,0x1(%rbx)
62f4(2): mov %al,(%rbx)
62f6(4): mov 0x28(%r13),%rax
62fa(4): cmp $0xffffffff,%rax
62fe(6): jz 0x732(%rip)
6304(4): shl/sal $0x5,%rax
6308(3): add %r8,%rax
630b(3): cmp $0x5,(%rax)
630e(6): jnz 0xae8(%rip)
6314(3): mov 0x10(%rax),%eax
6317(a): mov $0x1,0xfffffc20(%rbp)
6321(6): mov %eax,0xfffffc48(%rbp)
6327(4): mov 0x40(%r13),%rax
632b(4): cmp $0xffffffff,%rax
632f(2): jz 0x2d(%rip)
6331(4): shl/sal $0x5,%rax
6335(3): add %rax,%r8
6338(4): cmp $0x5,(%r8)
633c(6): jnz 0xaba(%rip)
6342(6): mov 0xfffffc20(%rbp),%eax
6348(4): mov 0x10(%r8),%edx
634c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
6353(3): lea 0x1(%rax),%eax
6356(6): mov %eax,0xfffffc20(%rbp)
635c(3): mov %r14,%rax
635f(2): xor %edx,%edx
6361(4): add $0x2,%rax
6365(6): jb 0xc67(%rip)
636b(3): cmp %rax,%r12
636e(2): jnb 0x4d(%rip)
6370(3): test %r12,%r12
6373(6): jnz 0x825(%rip)
6379(4): cmp $0xc,%rax
637d(6): jnbe 0x833(%rip)
6383(6): mov $0xc,%r12d
6389(7): cmp 0xfffffc18(%rbp),%r15
6390(3): setz %dl
6393(3): test %r15,%r15
6396(6): jz 0x84a(%rip)
639c(2): test %dl,%dl
639e(6): jnz 0x842(%rip)
63a4(3): mov %r12,%rsi
63a7(3): mov %r15,%rdi
63aa(5): call 0xffffb436(%rip)
63af(3): test %rax,%rax
63b2(6): jz 0xfffffc83(%rip)
63b8(3): mov %rax,%r15
63bb(5): mov $0x0,0x0(%r15,%r14,1)
63c0(5): call 0xffffb1f0(%rip)
63c5(7): mov %rax,0xfffffc38(%rbp)
63cc(2): mov (%rax),%eax
63ce(7): mov %rbx,0xfffffc08(%rbp)
63d5(6): mov %eax,0xfffffbdc(%rbp)
63db(5): nop 0x0(%rax,%rax,1)
63e0(7): mov 0xfffffc38(%rbp),%rax
63e7(3): mov %r12,%rbx
63ea(6): mov $0x7fffffff,%r10d
63f0(3): sub %r14,%rbx
63f3(a): mov $0xffffffff,0xfffffc44(%rbp)
63fd(7): cmp $0x7fffffff,%rbx
6404(6): mov $0x0,(%rax)
640a(6): mov 0xfffffc30(%rbp),%eax
6410(4): cmovbe %rbx,%r10
6414(3): cmp $0x11,%eax
6417(6): jnbe 0x9df(%rip)
641d(7): lea 0x2ca8(%rip),%rsi
6424(4): movsxd 0x0(%rsi,%rax,4),%rax
6428(3): add %rsi,%rax
642b(2): jmp %rax
642d(3): nop (%rax)
6430(4): mov 0x50(%r13),%rax
6434(4): lea 0x0(%r15,%r14,1),%rdi
6438(4): shl/sal $0x5,%rax
643c(7): add 0xfffffc58(%rbp),%rax
6443(4): mov 0x10(%rax),%r9
6447(6): mov 0xfffffc20(%rbp),%eax
644d(3): cmp $0x1,%eax
6450(6): jz 0x4c8(%rip)
6456(3): cmp $0x2,%eax
6459(6): jz 0x4a7(%rip)
645f(4): sub $0x8,%rsp
6463(6): push 0xfffffc10(%rbp)
6469(7): mov 0xfffffc28(%rbp),%r8
6470(3): mov %r10,%rsi
6473(7): mov $0xffffffff,%rcx
647a(5): mov $0x1,%edx
647f(2): xor %eax,%eax
6481(7): mov %r10,0xfffffbd0(%rbp)
6488(5): call 0xffffb0f8(%rip)
648d(1): pop %rsi
648e(1): pop %rdi
648f(7): mov 0xfffffbd0(%rbp),%r10
6496(6): mov 0xfffffc44(%rbp),%ecx
649c(2): test %ecx,%ecx
649e(6): js 0x13e(%rip)
64a4(3): movsxd %ecx,%rdx
64a7(3): cmp %r10,%rdx
64aa(2): jnb 0x10(%rip)
64ac(3): add %r15,%rdx
64af(5): cmp $0x0,0x0(%rdx,%r14,1)
64b4(6): jnz 0x942(%rip)
64ba(2): cmp %eax,%ecx
64bc(2): jnl 0xa(%rip)
64be(6): mov %eax,0xfffffc44(%rbp)
64c4(2): mov %eax,%ecx
64c6(3): lea 0x1(%rcx),%eax
64c9(3): cmp %r10,%rax
64cc(6): jb 0x834(%rip)
64d2(7): cmp $0x7ffffffe,%rbx
64d9(6): jnbe 0x847(%rip)
64df(4): lea 0x0(%r12,%r12,1),%rsi
64e3(3): lea 0x2(%rcx),%edx
64e6(3): test %r12,%r12
64e9(7): mov $0xffffffff,%rax
64f0(4): cmovns %rsi,%rax
64f4(3): add %r14,%rdx
64f7(6): jb 0xac1(%rip)
64fd(3): cmp %rdx,%rax
6500(4): cmovnae %rdx,%rax
6504(3): cmp %rax,%r12
6507(6): jnb 0xfffffed9(%rip)
650d(3): test %r12,%r12
6510(6): js 0xfffffb31(%rip)
6516(3): cmp %rax,%rsi
6519(3): mov %rsi,%r12
651c(2): jnb 0xf(%rip)
651e(4): cmp $0xffffffff,%rax
6522(6): jz 0xfffffb1f(%rip)
6528(3): mov %rax,%r12
652b(7): cmp 0xfffffc18(%rbp),%r15
6532(3): setz %bl
6535(3): test %r15,%r15
6538(6): jz 0x388(%rip)
653e(2): test %bl,%bl
6540(6): jnz 0x380(%rip)
6546(3): mov %r12,%rsi
6549(3): mov %r15,%rdi
654c(5): call 0xffffb294(%rip)
6551(3): test %rax,%rax
6554(6): jz 0xfffffaed(%rip)
655a(3): mov %rax,%r15
655d(5): jmp 0xfffffe83(%rip)
6562(6): nop 0x0(%rax,%rax,1)
6568(4): mov 0x50(%r13),%rax
656c(4): lea 0x0(%r15,%r14,1),%rdi
6570(4): shl/sal $0x5,%rax
6574(7): add 0xfffffc58(%rbp),%rax
657b(4): mov 0x10(%rax),%r9d
657f(6): mov 0xfffffc20(%rbp),%eax
6585(3): cmp $0x1,%eax
6588(6): jz 0x238(%rip)
658e(3): cmp $0x2,%eax
6591(6): jz 0x277(%rip)
6597(4): sub $0x8,%rsp
659b(6): push 0xfffffc10(%rbp)
65a1(7): mov 0xfffffc28(%rbp),%r8
65a8(7): mov $0xffffffff,%rcx
65af(5): mov $0x1,%edx
65b4(3): mov %r10,%rsi
65b7(2): xor %eax,%eax
65b9(7): mov %r10,0xfffffbd0(%rbp)
65c0(5): call 0xffffafc0(%rip)
65c5(1): pop %rdx
65c6(1): pop %rcx
65c7(6): mov 0xfffffc44(%rbp),%ecx
65cd(7): mov 0xfffffbd0(%rbp),%r10
65d4(2): test %ecx,%ecx
65d6(6): jns 0xfffffece(%rip)
65dc(7): mov 0xfffffc08(%rbp),%rdi
65e3(4): cmp $0x0,0x1(%rdi)
65e7(6): jnz 0x341(%rip)
65ed(2): test %eax,%eax
65ef(6): jns 0xfffffecf(%rip)
65f5(7): mov 0xfffffc38(%rbp),%rax
65fc(2): mov (%rax),%ebx
65fe(2): test %ebx,%ebx
6600(2): jnz 0x20(%rip)
6602(5): movzx 0x48(%r13),%eax
6607(5): mov $0x16,%ebx
660c(3): and $0xef,%eax
660f(2): cmp $0x63,%al
6611(5): mov $0x54,%eax
6616(3): cmove %eax,%ebx
6619(7): nop 0x0(%rax)
6620(7): cmp 0xfffffc18(%rbp),%r15
6627(2): jz 0xb(%rip)
6629(3): test %r15,%r15
662c(6): jnz 0x7b0(%rip)
6632(7): mov 0xfffffbe0(%rbp),%rax
6639(3): test %rax,%rax
663c(2): jz 0xa(%rip)
663e(3): mov %rax,%rdi
6641(5): call 0xffffaf4f(%rip)
6646(7): mov 0xfffffbf8(%rbp),%rax
664d(7): mov 0xfffffd48(%rbp),%rdi
6654(4): add $0x20,%rax
6658(3): cmp %rax,%rdi
665b(2): jz 0x7(%rip)
665d(5): call 0xffffaf33(%rip)
6662(7): mov 0xfffffbf0(%rbp),%rax
6669(7): mov 0xfffffc58(%rbp),%rdi
6670(4): add $0x10,%rax
6674(3): cmp %rax,%rdi
6677(2): jz 0x7(%rip)
6679(5): call 0xffffaf17(%rip)
667e(7): mov 0xfffffc38(%rbp),%rax
6685(3): xor %r15d,%r15d
6688(2): mov %ebx,(%rax)
668a(5): jmp 0xfffffa25(%rip)
668f(1): nop 
6690(4): mov 0x50(%r13),%rax
6694(4): lea 0x0(%r15,%r14,1),%rdi
6698(4): shl/sal $0x5,%rax
669c(7): add 0xfffffc58(%rbp),%rax
66a3(3): fld 0x10(%rax),%st0
66a6(6): mov 0xfffffc20(%rbp),%eax
66ac(3): cmp $0x1,%eax
66af(6): jz 0x631(%rip)
66b5(3): cmp $0x2,%eax
66b8(6): jnz 0x4c8(%rip)
66be(6): mov 0xfffffc4c(%rbp),%eax
66c4(4): sub $0x8,%rsp
66c8(6): push 0xfffffc10(%rbp)
66ce(7): mov 0xfffffc48(%rbp),%r9d
66d5(7): mov 0xfffffc28(%rbp),%r8
66dc(3): mov %r10,%rsi
66df(4): sub $0x18,%rsp
66e3(7): mov $0xffffffff,%rcx
66ea(5): mov $0x1,%edx
66ef(4): fstp %st0,0x8(%rsp)
66f3(1): push %rax
66f4(2): xor %eax,%eax
66f6(7): mov %r10,0xfffffbd0(%rbp)
66fd(5): call 0xffffae83(%rip)
6702(4): add $0x30,%rsp
6706(7): mov 0xfffffbd0(%rbp),%r10
670d(5): jmp 0xfffffd89(%rip)
6712(6): nop 0x0(%rax,%rax,1)
6718(4): mov 0x50(%r13),%rax
671c(4): lea 0x0(%r15,%r14,1),%rdi
6720(4): shl/sal $0x5,%rax
6724(7): add 0xfffffc58(%rbp),%rax
672b(5): movsd 0x10(%rax),%xmm0
6730(6): mov 0xfffffc20(%rbp),%eax
6736(3): cmp $0x1,%eax
6739(6): jz 0x597(%rip)
673f(3): cmp $0x2,%eax
6742(6): jnz 0x3fe(%rip)
6748(6): mov 0xfffffc4c(%rbp),%eax
674e(6): push 0xfffffc10(%rbp)
6754(1): push %rax
6755(7): mov 0xfffffc48(%rbp),%r9d
675c(7): mov 0xfffffc28(%rbp),%r8
6763(3): mov %r10,%rsi
6766(7): mov $0xffffffff,%rcx
676d(5): mov $0x1,%edx
6772(5): mov $0x1,%eax
6777(7): mov %r10,0xfffffbd0(%rbp)
677e(5): call 0xffffae02(%rip)
6783(2): pop %r8
6785(7): mov 0xfffffbd0(%rbp),%r10
678c(2): pop %r9
678e(5): jmp 0xfffffd08(%rip)
6793(5): nop 0x0(%rax,%rax,1)
6798(4): mov 0x50(%r13),%rax
679c(4): lea 0x0(%r15,%r14,1),%rdi
67a0(4): shl/sal $0x5,%rax
67a4(7): add 0xfffffc58(%rbp),%rax
67ab(5): movzx 0x10(%rax),%r9d
67b0(6): mov 0xfffffc20(%rbp),%eax
67b6(3): cmp $0x1,%eax
67b9(6): jnz 0xfffffdd5(%rip)
67bf(1): nop 
67c0(6): push 0xfffffc10(%rbp)
67c6(2): push %r9
67c8(7): mov 0xfffffc48(%rbp),%r9d
67cf(5): jmp 0xfffffdd2(%rip)
67d4(4): nop 0x0(%rax)
67d8(4): mov 0x50(%r13),%rax
67dc(4): lea 0x0(%r15,%r14,1),%rdi
67e0(4): shl/sal $0x5,%rax
67e4(7): add 0xfffffc58(%rbp),%rax
67eb(5): movsx 0x10(%rax),%r9d
67f0(6): mov 0xfffffc20(%rbp),%eax
67f6(3): cmp $0x1,%eax
67f9(2): jz 0xffffffc7(%rip)
67fb(3): cmp $0x2,%eax
67fe(6): jnz 0xfffffd99(%rip)
6804(4): nop 0x0(%rax)
6808(4): sub $0x8,%rsp
680c(6): push 0xfffffc10(%rbp)
6812(2): push %r9
6814(6): mov 0xfffffc4c(%rbp),%eax
681a(1): push %rax
681b(7): mov 0xfffffc48(%rbp),%r9d
6822(7): mov 0xfffffc28(%rbp),%r8
6829(3): mov %r10,%rsi
682c(7): mov $0xffffffff,%rcx
6833(5): mov $0x1,%edx
6838(2): xor %eax,%eax
683a(7): mov %r10,0xfffffbd0(%rbp)
6841(5): call 0xffffad3f(%rip)
6846(4): add $0x20,%rsp
684a(7): mov 0xfffffbd0(%rbp),%r10
6851(5): jmp 0xfffffc45(%rip)
6856(a): nop 0x0(%rax,%rax,1)
6860(4): mov 0x50(%r13),%rax
6864(4): lea 0x0(%r15,%r14,1),%rdi
6868(4): shl/sal $0x5,%rax
686c(7): add 0xfffffc58(%rbp),%rax
6873(5): movzx 0x10(%rax),%r9d
6878(6): mov 0xfffffc20(%rbp),%eax
687e(3): cmp $0x1,%eax
6881(6): jnz 0xfffffd0d(%rip)
6887(5): jmp 0xffffff39(%rip)
688c(4): nop 0x0(%rax)
6890(4): mov 0x50(%r13),%rax
6894(4): lea 0x0(%r15,%r14,1),%rdi
6898(4): shl/sal $0x5,%rax
689c(7): add 0xfffffc58(%rbp),%rax
68a3(5): movsx 0x10(%rax),%r9d
68a8(6): mov 0xfffffc20(%rbp),%eax
68ae(3): cmp $0x1,%eax
68b1(6): jnz 0xfffffcdd(%rip)
68b7(5): jmp 0xffffff09(%rip)
68bc(4): nop 0x0(%rax)
68c0(3): mov %r12,%rdi
68c3(5): call 0xffffaecd(%rip)
68c8(3): test %rax,%rax
68cb(3): mov %rax,%rcx
68ce(6): jz 0xfffff773(%rip)
68d4(3): test %r14,%r14
68d7(6): jz 0xb9(%rip)
68dd(2): test %bl,%bl
68df(6): jz 0xb1(%rip)
68e5(3): mov %r15,%rsi
68e8(3): mov %r14,%rdx
68eb(3): mov %rax,%rdi
68ee(5): call 0xffffae72(%rip)
68f3(3): mov %rax,%r15
68f6(5): jmp 0xfffffaea(%rip)
68fb(5): nop 0x0(%rax,%rax,1)
6900(4): sub $0x8,%rsp
6904(6): push 0xfffffc10(%rbp)
690a(2): push %r9
690c(5): jmp 0xffffff08(%rip)
6911(7): nop 0x0(%rax)
6918(6): push 0xfffffc10(%rbp)
691e(2): push %r9
6920(5): jmp 0xfffffea8(%rip)
6925(3): nop (%rax)
6928(4): mov $0x0,0x1(%rdi)
692c(5): jmp 0xfffffab4(%rip)
6931(7): nop 0x0(%rax)
6938(4): cmp $0xffffffff,%rax
693c(6): jnz 0x4ba(%rip)
6942(3): mov %r14,%rax
6945(4): add $0x1,%rax
6949(3): mov %rax,%rbx
694c(6): jnb 0x8c(%rip)
6952(4): cmp $0xffffffff,%r12
6956(6): jnz 0xfffff6df(%rip)
695c(3): mov %r12,%rbx
695f(5): mov $0x25,0x0(%r15,%r14,1)
6964(4): mov 0x8(%r13),%r8
6968(4): add $0x58,%r13
696c(4): mov 0x0(%r13),%rcx
6970(8): add $0x1,0xfffffc00(%rbp)
6978(3): cmp %r8,%rcx
697b(6): jnz 0xfffff69e(%rip)
6981(3): mov %rbx,%r14
6984(5): jmp 0xfffff7ff(%rip)
6989(7): nop 0x0(%rax)
6990(3): mov %rcx,%r15
6993(5): jmp 0xfffffa4d(%rip)
6998(5): call 0xffffac18(%rip)
699d(7): mov %rax,0xfffffc38(%rbp)
69a4(5): jmp 0xfffff6c3(%rip)
69a9(7): nop 0x0(%rax)
69b0(2): mov %edi,%edx
69b2(3): sub $0x12,%edx
69b5(3): cmp $0x4,%edx
69b8(6): jnbe 0x43e(%rip)
69be(7): lea 0x274f(%rip),%rdi
69c5(4): mov 0x10(%rax),%rax
69c9(4): movsxd 0x0(%rdi,%rdx,4),%rdx
69cd(3): add %rdi,%rdx
69d0(2): jmp %rdx
69d2(6): nop 0x0(%rax,%rax,1)
69d8(3): cmp %rax,%r12
69db(2): jnb 0xffffff84(%rip)
69dd(3): test %r12,%r12
69e0(6): jnz 0x3d0(%rip)
69e6(4): cmp $0xc,%rax
69ea(6): jnbe 0x3d8(%rip)
69f0(6): mov $0xc,%r12d
69f6(7): cmp 0xfffffc18(%rbp),%r15
69fd(3): setz %dl
6a00(3): test %r15,%r15
6a03(6): jz 0x26d(%rip)
6a09(2): test %dl,%dl
6a0b(6): jnz 0x265(%rip)
6a11(3): mov %r12,%rsi
6a14(3): mov %r15,%rdi
6a17(5): call 0xffffadc9(%rip)
6a1c(3): test %rax,%rax
6a1f(6): jz 0xfc(%rip)
6a25(3): mov %rax,%r15
6a28(5): jmp 0xffffff37(%rip)
6a2d(3): nop (%rax)
6a30(a): mov $0x0,0xfffffc20(%rbp)
6a3a(5): jmp 0xfffff8ed(%rip)
6a3f(1): nop 
6a40(6): js 0xfffff5f5(%rip)
6a46(3): add %r12,%r12
6a49(3): cmp %rax,%r12
6a4c(6): jnb 0xfffff6da(%rip)
6a52(4): cmp $0xffffffff,%rax
6a56(6): jz 0xfffff5df(%rip)
6a5c(7): cmp 0xfffffc18(%rbp),%r15
6a63(3): mov %rax,%r12
6a66(3): setz %dl
6a69(3): test %r15,%r15
6a6c(6): jnz 0xfffff6cd(%rip)
6a72(6): nop 0x0(%rax,%rax,1)
6a78(3): mov %r12,%rdi
6a7b(7): mov %r8,0xfffffc20(%rbp)
6a82(6): mov %dl,0xfffffc30(%rbp)
6a88(7): mov %rcx,0xfffffc38(%rbp)
6a8f(5): call 0xffffad01(%rip)
6a94(3): test %rax,%rax
6a97(3): mov %rax,%r9
6a9a(7): mov 0xfffffc38(%rbp),%rcx
6aa1(7): movzx 0xfffffc30(%rbp),%edx
6aa8(7): mov 0xfffffc20(%rbp),%r8
6aaf(6): jz 0xfffff586(%rip)
6ab5(3): test %rbx,%rbx
6ab8(6): jz 0x208(%rip)
6abe(2): test %dl,%dl
6ac0(6): jz 0x200(%rip)
6ac6(3): mov %r15,%rsi
6ac9(3): mov %rbx,%rdx
6acc(3): mov %rax,%rdi
6acf(7): mov %r8,0xfffffc30(%rbp)
6ad6(7): mov %rcx,0xfffffc38(%rbp)
6add(5): call 0xffffac83(%rip)
6ae2(7): mov 0xfffffc38(%rbp),%rcx
6ae9(3): mov %rax,%r15
6aec(7): mov 0xfffffc30(%rbp),%r8
6af3(5): jmp 0xfffff681(%rip)
6af8(8): nop 0x0(%rax,%rax,1)
6b00(3): mov %r12,%r14
6b03(5): jmp 0xfffff671(%rip)
6b08(8): nop 0x0(%rax,%rax,1)
6b10(3): mov %r14,(%rax)
6b13(3): mov %r14,%rbx
6b16(5): jmp 0xfffffe4e(%rip)
6b1b(5): call 0xffffaa95(%rip)
6b20(7): mov %rax,0xfffffc38(%rbp)
6b27(9): nop 0x0(%rax,%rax,1)
6b30(3): mov %r15,%rdi
6b33(5): call 0xffffaa5d(%rip)
6b38(5): jmp 0xfffff51b(%rip)
6b3d(3): nop (%rax)
6b40(7): mov 0xfffffc10(%rbp),%r9
6b47(7): mov 0xfffffc28(%rbp),%r8
6b4e(3): mov %r10,%rsi
6b51(7): mov $0xffffffff,%rcx
6b58(5): mov $0x1,%edx
6b5d(5): mov $0x1,%eax
6b62(7): mov %r10,0xfffffbd0(%rbp)
6b69(5): call 0xffffaa17(%rip)
6b6e(7): mov 0xfffffbd0(%rbp),%r10
6b75(5): jmp 0xfffff921(%rip)
6b7a(6): nop 0x0(%rax,%rax,1)
6b80(4): sub $0x10,%rsp
6b84(7): mov 0xfffffc10(%rbp),%r9
6b8b(3): fstp %st0,(%rsp)
6b8e(5): jmp 0xfffff8db(%rip)
6b93(5): nop 0x0(%rax,%rax,1)
6b98(6): js 0xfffff49d(%rip)
6b9e(3): add %r12,%r12
6ba1(3): cmp %rax,%r12
6ba4(6): jnb 0xfffff7e5(%rip)
6baa(6): nop 0x0(%rax,%rax,1)
6bb0(3): test %rdx,%rdx
6bb3(6): jnz 0xfffff482(%rip)
6bb9(4): cmp $0xffffffff,%rax
6bbd(6): jz 0xfffff478(%rip)
6bc3(7): cmp 0xfffffc18(%rbp),%r15
6bca(3): mov %rax,%r12
6bcd(3): setz %dl
6bd0(3): test %r15,%r15
6bd3(6): jnz 0xfffff7c9(%rip)
6bd9(7): nop 0x0(%rax)
6be0(3): mov %r12,%rdi
6be3(6): mov %dl,0xfffffc38(%rbp)
6be9(5): call 0xffffaba7(%rip)
6bee(3): test %rax,%rax
6bf1(3): mov %rax,%rcx
6bf4(7): movzx 0xfffffc38(%rbp),%edx
6bfb(6): jz 0xfffff43a(%rip)
6c01(3): test %r14,%r14
6c04(6): jz 0x19c(%rip)
6c0a(2): test %dl,%dl
6c0c(6): jz 0x194(%rip)
6c12(3): mov %r15,%rsi
6c15(3): mov %r14,%rdx
6c18(3): mov %rax,%rdi
6c1b(5): call 0xffffab45(%rip)
6c20(3): mov %rax,%r15
6c23(5): jmp 0xfffff798(%rip)
6c28(8): nop 0x0(%rax,%rax,1)
6c30(3): mov $0x4c,(%rbx)
6c33(4): add $0x1,%rbx
6c37(5): jmp 0xfffff6b4(%rip)
6c3c(4): nop 0x0(%rax)
6c40(3): mov %r14b,(%rax)
6c43(3): mov %r14,%rbx
6c46(5): jmp 0xfffffd1e(%rip)
6c4b(5): nop 0x0(%rax,%rax,1)
6c50(3): mov %r14d,(%rax)
6c53(3): mov %r14,%rbx
6c56(5): jmp 0xfffffd0e(%rip)
6c5b(5): nop 0x0(%rax,%rax,1)
6c60(4): mov %r14w,(%rax)
6c64(3): mov %r14,%rbx
6c67(5): jmp 0xfffffcfd(%rip)
6c6c(4): nop 0x0(%rax)
6c70(3): mov %r12,%rdi
6c73(6): mov %dl,0xfffffc38(%rbp)
6c79(5): call 0xffffab17(%rip)
6c7e(3): test %rax,%rax
6c81(3): mov %rax,%rcx
6c84(7): movzx 0xfffffc38(%rbp),%edx
6c8b(6): jz 0xfffff3aa(%rip)
6c91(3): test %r14,%r14
6c94(6): jz 0x140(%rip)
6c9a(2): test %dl,%dl
6c9c(6): jz 0x138(%rip)
6ca2(3): mov %r15,%rsi
6ca5(3): mov %r14,%rdx
6ca8(3): mov %rax,%rdi
6cab(5): call 0xffffaab5(%rip)
6cb0(3): mov %rax,%r15
6cb3(5): jmp 0xfffffcac(%rip)
6cb8(8): nop 0x0(%rax,%rax,1)
6cc0(3): mov %r9,%r15
6cc3(5): jmp 0xfffff4b1(%rip)
6cc8(8): nop 0x0(%rax,%rax,1)
6cd0(4): sub $0x8,%rsp
6cd4(6): push 0xfffffc10(%rbp)
6cda(5): jmp 0xfffffa7b(%rip)
6cdf(1): nop 
6ce0(4): sub $0x8,%rsp
6ce4(6): push 0xfffffc10(%rbp)
6cea(4): sub $0x10,%rsp
6cee(3): fstp %st0,(%rsp)
6cf1(5): jmp 0xfffffb2a(%rip)
6cf6(a): nop 0x0(%rax,%rax,1)
6d00(7): mov 0xfffffc38(%rbp),%rax
6d07(6): mov 0xfffffbdc(%rbp),%edi
6d0d(3): movsxd %ecx,%rbx
6d10(3): add %r14,%rbx
6d13(2): mov %edi,(%rax)
6d15(5): jmp 0xfffffc4f(%rip)
6d1a(6): nop 0x0(%rax,%rax,1)
6d20(7): cmp 0xfffffc18(%rbp),%r15
6d27(2): jz 0xb(%rip)
6d29(3): test %r15,%r15
6d2c(6): jnz 0xbd(%rip)
6d32(7): mov 0xfffffbe0(%rbp),%rax
6d39(3): test %rax,%rax
6d3c(2): jz 0xa(%rip)
6d3e(3): mov %rax,%rdi
6d41(5): call 0xffffa84f(%rip)
6d46(7): mov 0xfffffbf8(%rbp),%rax
6d4d(7): mov 0xfffffd48(%rbp),%rdi
6d54(4): add $0x20,%rax
6d58(3): cmp %rax,%rdi
6d5b(2): jz 0x7(%rip)
6d5d(5): call 0xffffa833(%rip)
6d62(7): mov 0xfffffbf0(%rbp),%rax
6d69(7): mov 0xfffffc58(%rbp),%rdi
6d70(4): add $0x10,%rax
6d74(3): cmp %rax,%rdi
6d77(2): jz 0x7(%rip)
6d79(5): call 0xffffa817(%rip)
6d7e(7): mov 0xfffffc38(%rbp),%rax
6d85(3): xor %r15d,%r15d
6d88(6): mov $0x4b,(%rax)
6d8e(5): jmp 0xfffff321(%rip)
6d93(5): nop 0x0(%rax,%rax,1)
6d98(3): xor %r15d,%r15d
6d9b(5): jmp 0xfffff314(%rip)
6da0(3): mov %rcx,%r15
6da3(5): jmp 0xfffff618(%rip)
6da8(8): nop 0x0(%rax,%rax,1)
6db0(6): js 0xfffff285(%rip)
6db6(3): add %r12,%r12
6db9(3): cmp %rax,%r12
6dbc(6): jnb 0xfffffc3a(%rip)
6dc2(4): cmp $0xffffffff,%rax
6dc6(6): jz 0xfffff26f(%rip)
6dcc(3): mov %rax,%r12
6dcf(5): jmp 0xfffffc27(%rip)
6dd4(3): mov %rcx,%r15
6dd7(5): jmp 0xfffffb88(%rip)
6ddc(3): mov %r15,%rdi
6ddf(5): call 0xffffa7b1(%rip)
6de4(5): jmp 0xfffff84e(%rip)
6de9(3): mov %r15,%rdi
6dec(5): call 0xffffa7a4(%rip)
6df1(5): jmp 0xffffff41(%rip)
6df6(5): call 0xffffa7aa(%rip)
6dfb(5): nop 0x0(%rax,%rax,1)
6e00(7): mov 0xfffffbf8(%rbp),%rax
6e07(7): mov 0xfffffd48(%rbp),%rdi
6e0e(4): add $0x20,%rax
6e12(3): cmp %rax,%rdi
6e15(2): jz 0x7(%rip)
6e17(5): call 0xffffa779(%rip)
6e1c(7): mov 0xfffffbf0(%rbp),%rax
6e23(7): mov 0xfffffc58(%rbp),%rdi
6e2a(4): add $0x10,%rax
6e2e(3): cmp %rax,%rdi
6e31(2): jz 0x7(%rip)
6e33(5): call 0xffffa75d(%rip)
6e38(5): call 0xffffa778(%rip)
6e3d(3): xor %r15d,%r15d
6e40(6): mov $0x16,(%rax)
6e46(5): jmp 0xfffff269(%rip)
6e4b(3): mov %r14,%rbx
6e4e(2): xor %eax,%eax
6e50(4): add $0x1,%rbx
6e54(6): jb 0x10c(%rip)
6e5a(3): cmp %rbx,%r12
6e5d(2): jnb 0x4f(%rip)
6e5f(3): test %r12,%r12
6e62(6): jnz 0x137(%rip)
6e68(4): cmp $0xc,%rbx
6e6c(6): jnbe 0x112(%rip)
6e72(6): mov $0xc,%r12d
6e78(7): cmp 0xfffffc18(%rbp),%r15
6e7f(4): setz %r13b
6e83(3): test %r15,%r15
6e86(6): jz 0xa6(%rip)
6e8c(3): test %r13b,%r13b
6e8f(6): jnz 0x9d(%rip)
6e95(3): mov %r12,%rsi
6e98(3): mov %r15,%rdi
6e9b(5): call 0xffffa945(%rip)
6ea0(3): test %rax,%rax
6ea3(6): jz 0xfffffc78(%rip)
6ea9(3): mov %rax,%r15
6eac(7): cmp 0xfffffc18(%rbp),%r15
6eb3(5): mov $0x0,0x0(%r15,%r14,1)
6eb8(2): jz 0x19(%rip)
6eba(3): cmp %rbx,%r12
6ebd(2): jbe 0x14(%rip)
6ebf(3): mov %r15,%rdi
6ec2(3): mov %rbx,%rsi
6ec5(5): call 0xffffa91b(%rip)
6eca(3): test %rax,%rax
6ecd(4): cmovne %rax,%r15
6ed1(7): mov 0xfffffbe0(%rbp),%rax
6ed8(3): test %rax,%rax
6edb(2): jz 0xa(%rip)
6edd(3): mov %rax,%rdi
6ee0(5): call 0xffffa6b0(%rip)
6ee5(7): mov 0xfffffbf8(%rbp),%rax
6eec(7): mov 0xfffffd48(%rbp),%rdi
6ef3(4): add $0x20,%rax
6ef7(3): cmp %rax,%rdi
6efa(2): jz 0x7(%rip)
6efc(5): call 0xffffa694(%rip)
6f01(7): mov 0xfffffbf0(%rbp),%rax
6f08(7): mov 0xfffffc58(%rbp),%rdi
6f0f(4): add $0x10,%rax
6f13(3): cmp %rax,%rdi
6f16(2): jz 0x7(%rip)
6f18(5): call 0xffffa678(%rip)
6f1d(7): mov 0xfffffbe8(%rbp),%rax
6f24(3): mov %r14,(%rax)
6f27(5): jmp 0xfffff188(%rip)
6f2c(3): mov %r12,%rdi
6f2f(5): call 0xffffa861(%rip)
6f34(3): test %rax,%rax
6f37(3): mov %rax,%rcx
6f3a(6): jz 0xfffff0fb(%rip)
6f40(3): test %r14,%r14
6f43(2): jz 0x6d(%rip)
6f45(3): test %r13b,%r13b
6f48(2): jz 0x68(%rip)
6f4a(3): mov %r15,%rsi
6f4d(3): mov %r14,%rdx
6f50(3): mov %rax,%rdi
6f53(5): call 0xffffa80d(%rip)
6f58(3): mov %rax,%r15
6f5b(5): jmp 0xffffff51(%rip)
6f60(4): cmp $0xffffffff,%r12
6f64(5): mov $0x1,%eax
6f69(6): jz 0xffffff43(%rip)
6f6f(3): test %r12,%r12
6f72(6): jz 0xfffff0c3(%rip)
6f78(6): js 0xfffff0bd(%rip)
6f7e(3): test %rax,%rax
6f81(6): jnz 0xfffff0b4(%rip)
6f87(4): cmp $0xffffffff,%rbx
6f8b(6): jz 0xfffff0aa(%rip)
6f91(3): mov %rbx,%r12
6f94(5): jmp 0xfffffee4(%rip)
6f99(6): js 0xfffff09c(%rip)
6f9f(3): add %r12,%r12
6fa2(3): cmp %rbx,%r12
6fa5(6): jnb 0xfffffed3(%rip)
6fab(2): jmp 0xffffffd3(%rip)
6fad(3): nop (%rax)
6fb0(3): mov %rcx,%r15
6fb3(5): jmp 0xfffffef9(%rip)
6fb8(4): cmp $0xffffffff,%r12
6fbc(6): jz 0xfffff424(%rip)
6fc2(5): jmp 0xfffff07f(%rip)
6fc7(5): call 0xffffa6a9(%rip)
6fcc(4): cmp $0xffffffff,%r12
6fd0(5): mov $0x1,%edx
6fd5(6): jz 0xfffff3e6(%rip)
6fdb(3): test %r12,%r12
6fde(6): jz 0xfffff057(%rip)
6fe4(6): jns 0xfffffbcc(%rip)
6fea(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
6ff0(4): cmp $0x0,(%rsi)
6ff4(4): mov 0x8(%rsi),%rax
6ff8(2): jz 0x65(%rip)
6ffa(7): lea 0x212f(%rip),%r8
7001(7): lea 0x2188(%rip),%r10
7008(7): lea 0x2119(%rip),%r9
700f(2): xor %ecx,%ecx
7011(7): nop 0x0(%rax)
7018(3): cmp $0x16,(%rax)
701b(2): jnbe 0x45(%rip)
701d(2): mov (%rax),%edx
701f(4): movsxd 0x0(%r8,%rdx,4),%rdx
7023(3): add %r8,%rdx
7026(2): jmp %rdx
7028(8): nop 0x0(%rax,%rax,1)
7030(4): mov 0x8(%rdi),%rdx
7034(4): add $0xf,%rdx
7038(4): and $0xfffffff0,%rdx
703c(4): lea 0x10(%rdx),%r11
7040(4): mov %r11,0x8(%rdi)
7044(2): fld (%rdx),%st0
7046(3): fstp %st0,0x10(%rax)
7049(7): nop 0x0(%rax)
7050(4): add $0x1,%rcx
7054(4): add $0x20,%rax
7058(3): cmp %rcx,(%rsi)
705b(2): jnbe 0xffffffbd(%rip)
705d(2): xor %eax,%eax
705f(1): ret near (%rsp)
7060(5): mov $0xffffffff,%eax
7065(1): ret near (%rsp)
7066(3): mov (%rdi),%r11d
7069(4): cmp $0x2f,%r11d
706d(6): jnbe 0x13d(%rip)
7073(3): mov %r11d,%edx
7076(4): add 0x10(%rdi),%rdx
707a(4): add $0x8,%r11d
707e(3): mov %r11d,(%rdi)
7081(3): mov (%rdx),%rdx
7084(4): mov %rdx,0x10(%rax)
7088(2): jmp 0xffffffc8(%rip)
708a(3): mov (%rdi),%r11d
708d(4): cmp $0x2f,%r11d
7091(6): jnbe 0x13b(%rip)
7097(3): mov %r11d,%edx
709a(4): add 0x10(%rdi),%rdx
709e(4): add $0x8,%r11d
70a2(3): mov %r11d,(%rdi)
70a5(2): mov (%rdx),%edx
70a7(3): mov %edx,0x10(%rax)
70aa(2): jmp 0xffffffa6(%rip)
70ac(3): mov (%rdi),%r11d
70af(4): cmp $0x2f,%r11d
70b3(6): jnbe 0x108(%rip)
70b9(3): mov %r11d,%edx
70bc(4): add 0x10(%rdi),%rdx
70c0(4): add $0x8,%r11d
70c4(3): mov %r11d,(%rdi)
70c7(2): mov (%rdx),%edx
70c9(3): mov %dl,0x10(%rax)
70cc(2): jmp 0xffffff84(%rip)
70ce(3): mov (%rdi),%r11d
70d1(4): cmp $0x2f,%r11d
70d5(6): jnbe 0xa5(%rip)
70db(3): mov %r11d,%edx
70de(4): add 0x10(%rdi),%rdx
70e2(4): add $0x8,%r11d
70e6(3): mov %r11d,(%rdi)
70e9(2): mov (%rdx),%edx
70eb(4): mov %dx,0x10(%rax)
70ef(5): jmp 0xffffff61(%rip)
70f4(3): mov (%rdi),%r11d
70f7(4): cmp $0x2f,%r11d
70fb(6): jnbe 0x90(%rip)
7101(3): mov %r11d,%edx
7104(4): add 0x10(%rdi),%rdx
7108(4): add $0x8,%r11d
710c(3): mov %r11d,(%rdi)
710f(3): mov (%rdx),%rdx
7112(3): test %rdx,%rdx
7115(4): cmove %r9,%rdx
7119(4): mov %rdx,0x10(%rax)
711d(5): jmp 0xffffff33(%rip)
7122(4): mov 0x4(%rdi),%r11d
7126(7): cmp $0xaf,%r11d
712d(6): jnbe 0xb0(%rip)
7133(3): mov %r11d,%edx
7136(4): add 0x10(%rdi),%rdx
713a(4): add $0x10,%r11d
713e(4): mov %r11d,0x4(%rdi)
7142(4): movsd (%rdx),%xmm0
7146(5): movsd %xmm0,0x10(%rax)
714b(5): jmp 0xffffff05(%rip)
7150(3): mov (%rdi),%r11d
7153(4): cmp $0x2f,%r11d
7157(2): jnbe 0x45(%rip)
7159(3): mov %r11d,%edx
715c(4): add 0x10(%rdi),%rdx
7160(4): add $0x8,%r11d
7164(3): mov %r11d,(%rdi)
7167(3): mov (%rdx),%rdx
716a(3): test %rdx,%rdx
716d(4): cmove %r10,%rdx
7171(4): mov %rdx,0x10(%rax)
7175(5): jmp 0xfffffedb(%rip)
717a(4): mov 0x8(%rdi),%rdx
717e(4): lea 0x8(%rdx),%r11
7182(4): mov %r11,0x8(%rdi)
7186(5): jmp 0xffffff63(%rip)
718b(4): mov 0x8(%rdi),%rdx
718f(4): lea 0x8(%rdx),%r11
7193(4): mov %r11,0x8(%rdi)
7197(5): jmp 0xffffff78(%rip)
719c(4): mov 0x8(%rdi),%rdx
71a0(4): lea 0x8(%rdx),%r11
71a4(4): mov %r11,0x8(%rdi)
71a8(2): jmp 0xffffffbf(%rip)
71aa(4): mov 0x8(%rdi),%rdx
71ae(4): lea 0x8(%rdx),%r11
71b2(4): mov %r11,0x8(%rdi)
71b6(5): jmp 0xfffffecb(%rip)
71bb(4): mov 0x8(%rdi),%rdx
71bf(4): lea 0x8(%rdx),%r11
71c3(4): mov %r11,0x8(%rdi)
71c7(5): jmp 0xffffff00(%rip)
71cc(4): mov 0x8(%rdi),%rdx
71d0(4): lea 0x8(%rdx),%r11
71d4(4): mov %r11,0x8(%rdi)
71d8(5): jmp 0xfffffecd(%rip)
71dd(4): mov 0x8(%rdi),%rdx
71e1(4): lea 0x8(%rdx),%r11
71e5(4): mov %r11,0x8(%rdi)
71e9(5): jmp 0xffffff59(%rip)

"printf_parse" :
71f0(2): push %r15
71f2(2): push %r14
71f4(4): lea 0x20(%rsi),%rcx
71f8(2): push %r13
71fa(2): push %r12
71fc(4): lea 0x10(%rdx),%rax
7200(1): push %rbp
7201(1): push %rbx
7202(3): mov %rsi,%r14
7205(3): mov %rdx,%r15
7208(2): xor %ebx,%ebx
720a(6): mov $0x7,%r9d
7210(4): sub $0x58,%rsp
7214(6): mov $0x7,%r10d
721a(7): mov $0x0,(%rsi)
7221(4): mov %rcx,0x8(%rsi)
7225(5): mov %rcx,0x28(%rsp)
722a(7): mov $0xffffffff,%r8
7231(7): mov $0x0,(%rdx)
7238(5): mov %rax,0x8(%rsp)
723d(4): mov %rax,0x8(%rdx)
7241(9): mov $0x0,0x18(%rsp)
724a(9): mov $0x0,0x10(%rsp)
7253(9): mov $0x0,0x20(%rsp)
725c(2): jmp 0xf(%rip)
725e(2): nop 
7260(2): cmp $0x25,%al
7262(4): lea 0x1(%rdi),%rbp
7266(2): jz 0x42(%rip)
7268(3): mov %rbp,%rdi
726b(3): movzx (%rdi),%eax
726e(2): test %al,%al
7270(2): jnz 0xfffffff0(%rip)
7272(4): lea 0x0(%rbx,%rbx,4),%rax
7276(4): lea 0x0(%rbx,%rax,2),%rax
727a(4): mov %rdi,0x0(%rcx,%rax,8)
727e(5): mov 0x10(%rsp),%rax
7283(4): mov %rax,0x10(%r14)
7287(5): mov 0x18(%rsp),%rax
728c(4): mov %rax,0x18(%r14)
7290(2): xor %eax,%eax
7292(4): add $0x58,%rsp
7296(1): pop %rbx
7297(1): pop %rbp
7298(2): pop %r12
729a(2): pop %r13
729c(2): pop %r14
729e(2): pop %r15
72a0(1): ret near (%rsp)
72a1(7): nop 0x0(%rax)
72a8(4): lea 0x0(%rbx,%rbx,4),%rax
72ac(3): mov %r8,%r13
72af(4): lea 0x0(%rbx,%rax,2),%rax
72b3(4): lea 0x0(%rcx,%rax,8),%r12
72b7(4): mov %rdi,(%r12)
72bb(9): mov $0x0,0x10(%r12)
72c4(9): mov $0x0,0x18(%r12)
72cd(9): mov $0x0,0x20(%r12)
72d6(5): mov %r8,0x28(%r12)
72db(9): mov $0x0,0x30(%r12)
72e4(9): mov $0x0,0x38(%r12)
72ed(5): mov %r8,0x40(%r12)
72f2(5): mov %r8,0x50(%r12)
72f7(4): movzx 0x1(%rdi),%ebx
72fb(3): lea 0xffffffd0(%rbx),%eax
72fe(2): cmp $0x9,%al
7300(2): jnbe 0x3e(%rip)
7302(5): jmp 0x438(%rip)
7307(9): nop 0x0(%rax,%rax,1)
7310(3): cmp $0x2d,%bl
7313(2): jz 0x45(%rip)
7315(3): cmp $0x2b,%bl
7318(2): jz 0x48(%rip)
731a(3): cmp $0x20,%bl
731d(2): jz 0x53(%rip)
731f(3): cmp $0x23,%bl
7322(2): jz 0x5e(%rip)
7324(3): cmp $0x30,%bl
7327(2): jz 0x69(%rip)
7329(3): cmp $0x49,%bl
732c(2): jnz 0x74(%rip)
732e(6): or $0x40,0x10(%r12)
7334(4): nop 0x0(%rax)
7338(3): movzx (%rax),%ebx
733b(3): mov %rax,%rbp
733e(4): lea 0x1(%rbp),%rax
7342(3): cmp $0x27,%bl
7345(3): mov %rax,%rdx
7348(2): jnz 0xffffffc8(%rip)
734a(6): or $0x1,0x10(%r12)
7350(2): jmp 0xffffffe8(%rip)
7352(6): nop 0x0(%rax,%rax,1)
7358(6): or $0x2,0x10(%r12)
735e(2): jmp 0xffffffda(%rip)
7360(6): or $0x4,0x10(%r12)
7366(2): jmp 0xffffffd2(%rip)
7368(8): nop 0x0(%rax,%rax,1)
7370(6): or $0x8,0x10(%r12)
7376(2): jmp 0xffffffc2(%rip)
7378(8): nop 0x0(%rax,%rax,1)
7380(6): or $0x10,0x10(%r12)
7386(2): jmp 0xffffffb2(%rip)
7388(8): nop 0x0(%rax,%rax,1)
7390(6): or $0x20,0x10(%r12)
7396(2): jmp 0xffffffa2(%rip)
7398(8): nop 0x0(%rax,%rax,1)
73a0(3): cmp $0x2a,%bl
73a3(6): jz 0x1b6(%rip)
73a9(3): lea 0xffffffd0(%rbx),%ecx
73ac(3): cmp $0x9,%cl
73af(6): jbe 0x418(%rip)
73b5(3): cmp $0x2e,%bl
73b8(6): jz 0x2d7(%rip)
73be(2): xor %eax,%eax
73c0(5): mov $0x1,%esi
73c5(2): jmp 0x32(%rip)
73c7(9): nop 0x0(%rax,%rax,1)
73d0(3): cmp $0x4c,%bl
73d3(2): jz 0x3d(%rip)
73d5(3): cmp $0x6c,%bl
73d8(2): jz 0x18(%rip)
73da(3): cmp $0x6a,%bl
73dd(2): jz 0x13(%rip)
73df(2): mov %ebx,%edx
73e1(3): and $0xdf,%edx
73e4(3): cmp $0x5a,%dl
73e7(2): jz 0x9(%rip)
73e9(3): cmp $0x74,%bl
73ec(2): jnz 0x2c(%rip)
73ee(2): nop 
73f0(3): add $0x8,%eax
73f3(4): movzx 0x0(%rbp),%ebx
73f7(4): add $0x1,%rbp
73fb(3): cmp $0x68,%bl
73fe(2): jnz 0xffffffd2(%rip)
7400(2): mov %eax,%ecx
7402(2): mov %esi,%edx
7404(3): and $0x1,%ecx
7407(2): shl/sal %cl,%edx
7409(2): or %edx,%eax
740b(2): jmp 0xffffffe8(%rip)
740d(3): nop (%rax)
7410(3): or $0x4,%eax
7413(2): jmp 0xffffffe0(%rip)
7415(3): nop (%rax)
7418(3): lea 0xffffffdb(%rbx),%edx
741b(3): cmp $0x53,%dl
741e(6): jnbe 0x61d(%rip)
7424(7): lea 0x1d81(%rip),%rcx
742b(3): movzx %dl,%edx
742e(4): movsxd 0x0(%rcx,%rdx,4),%rdx
7432(3): add %rcx,%rdx
7435(2): jmp %rdx
7437(6): mov $0x10,%r11d
743d(5): mov $0x73,%ebx
7442(6): nop 0x0(%rax,%rax,1)
7448(4): cmp $0xffffffff,%r13
744c(6): jz 0x6bb(%rip)
7452(5): mov %r13,0x50(%r12)
7457(3): cmp %r13,%r9
745a(4): mov 0x8(%r15),%rcx
745e(6): jbe 0x622(%rip)
7464(3): mov (%r15),%rax
7467(3): mov %rax,%rdx
746a(4): shl/sal $0x5,%rdx
746e(3): add %rcx,%rdx
7471(3): cmp %r13,%rax
7474(2): jnbe 0x22(%rip)
7476(a): nop 0x0(%rax,%rax,1)
7480(4): add $0x1,%rax
7484(6): mov $0x0,(%rdx)
748a(4): add $0x20,%rdx
748e(3): cmp %r13,%rax
7491(2): jbe 0xffffffef(%rip)
7493(3): mov %rax,(%r15)
7496(4): shl/sal $0x5,%r13
749a(4): lea 0x0(%rcx,%r13,1),%rax
749e(2): mov (%rax),%edx
74a0(2): test %edx,%edx
74a2(6): jnz 0x5d1(%rip)
74a8(3): mov %r11d,(%rax)
74ab(5): mov %bl,0x48(%r12)
74b0(3): mov (%r14),%rax
74b3(5): mov %rbp,0x8(%r12)
74b8(4): lea 0x1(%rax),%rbx
74bc(3): cmp %rbx,%r10
74bf(3): mov %rbx,(%r14)
74c2(6): jnbe 0x8e(%rip)
74c8(3): test %r10,%r10
74cb(6): js 0x9ac(%rip)
74d1(3): add %r10,%r10
74d4(a): mov $0x209622091746699450,%rax
74de(3): cmp %rax,%r10
74e1(6): jnbe 0x996(%rip)
74e7(4): lea 0x0(%r10,%r10,4),%rax
74eb(4): mov 0x8(%r14),%rdi
74ef(5): cmp %rdi,0x28(%rsp)
74f4(5): mov %r9,0x40(%rsp)
74f9(5): mov %r10,0x38(%rsp)
74fe(4): lea 0x0(%r10,%rax,2),%rax
7502(5): mov %r8,0x30(%rsp)
7507(8): lea 0x0(,%rax,8),%rsi
750f(6): jz 0x6be(%rip)
7515(5): call 0xffffa2cb(%rip)
751a(3): test %rax,%rax
751d(3): mov %rax,%rcx
7520(5): mov 0x30(%rsp),%r8
7525(5): mov 0x38(%rsp),%r10
752a(5): mov 0x40(%rsp),%r9
752f(6): jz 0x948(%rip)
7535(5): mov 0x28(%rsp),%rax
753a(4): cmp 0x8(%r14),%rax
753e(3): mov (%r14),%rbx
7541(6): jz 0x6af(%rip)
7547(4): mov %rcx,0x8(%r14)
754b(5): jmp 0xfffffd1d(%rip)
7550(4): mov 0x8(%r14),%rcx
7554(5): jmp 0xfffffd14(%rip)
7559(5): mov 0x10(%rsp),%rsi
755e(5): mov $0x1,%ecx
7563(5): mov %rbp,0x18(%r12)
7568(5): mov %rax,0x20(%r12)
756d(3): test %rsi,%rsi
7570(4): cmovne %rsi,%rcx
7574(5): mov %rcx,0x10(%rsp)
7579(4): movzx 0x1(%rbp),%ecx
757d(3): lea 0xffffffd0(%rcx),%esi
7580(4): cmp $0x9,%sil
7584(6): jbe 0x2e1(%rip)
758a(5): mov 0x20(%rsp),%rsi
758f(4): cmp $0xffffffff,%rsi
7593(4): lea 0x1(%rsi),%rdx
7597(5): mov %rsi,0x28(%r12)
759c(6): jz 0x49f(%rip)
75a2(5): mov 0x20(%rsp),%rbx
75a7(3): mov %rax,%rbp
75aa(5): mov %rdx,0x20(%rsp)
75af(3): cmp %rbx,%r9
75b2(4): mov 0x8(%r15),%rcx
75b6(6): jnbe 0x67c(%rip)
75bc(3): add %r9,%r9
75bf(4): lea 0x1(%rbx),%rax
75c3(3): cmp %rbx,%r9
75c6(4): cmovbe %rax,%r9
75ca(a): mov $0x576460752303423487,%rax
75d4(3): cmp %rax,%r9
75d7(6): jnbe 0x8a4(%rip)
75dd(3): mov %r9,%rsi
75e0(5): mov %r9,0x40(%rsp)
75e5(5): mov %r10,0x38(%rsp)
75ea(4): shl/sal $0x5,%rsi
75ee(5): cmp %rcx,0x8(%rsp)
75f3(5): mov %r8,0x30(%rsp)
75f8(6): jz 0x719(%rip)
75fe(3): mov %rcx,%rdi
7601(5): call 0xffffa1df(%rip)
7606(4): mov 0x8(%r15),%rdx
760a(5): mov 0x30(%rsp),%r8
760f(3): mov %rax,%rcx
7612(5): mov 0x38(%rsp),%r10
7617(5): mov 0x40(%rsp),%r9
761c(3): test %rcx,%rcx
761f(6): jz 0x8b8(%rip)
7625(5): cmp %rdx,0x8(%rsp)
762a(3): mov (%r15),%rax
762d(6): jz 0x7be(%rip)
7633(4): mov %rcx,0x8(%r15)
7637(3): mov %rax,%rdx
763a(4): shl/sal $0x5,%rdx
763e(3): add %rcx,%rdx
7641(3): cmp %rbx,%rax
7644(2): jnbe 0x22(%rip)
7646(a): nop 0x0(%rax,%rax,1)
7650(4): add $0x1,%rax
7654(6): mov $0x0,(%rdx)
765a(4): add $0x20,%rdx
765e(3): cmp %rbx,%rax
7661(2): jbe 0xffffffef(%rip)
7663(3): mov %rax,(%r15)
7666(4): shl/sal $0x5,%rbx
766a(4): lea 0x0(%rcx,%rbx,1),%rax
766e(2): mov (%rax),%edx
7670(2): test %edx,%edx
7672(6): jnz 0x4d9(%rip)
7678(6): mov $0x5,(%rax)
767e(4): movzx 0x0(%rbp),%ebx
7682(4): lea 0x1(%rbp),%rdx
7686(3): cmp $0x2e,%bl
7689(6): jnz 0xfffffd35(%rip)
768f(4): cmp $0x2a,0x1(%rbp)
7693(5): mov %rbp,0x30(%r12)
7698(6): jnz 0x186(%rip)
769e(5): mov 0x18(%rsp),%rsi
76a3(4): lea 0x2(%rbp),%r11
76a7(5): mov $0x2,%eax
76ac(5): mov %r11,0x38(%r12)
76b1(4): cmp $0x2,%rsi
76b5(4): cmovnb %rsi,%rax
76b9(5): mov %rax,0x18(%rsp)
76be(4): movsx 0x2(%rbp),%eax
76c2(3): lea 0xffffffd0(%rax),%edx
76c5(3): cmp $0x9,%dl
76c8(6): jbe 0x694(%rip)
76ce(5): mov 0x40(%r12),%rbx
76d3(4): cmp $0xffffffff,%rbx
76d7(6): jz 0x65e(%rip)
76dd(3): cmp %rbx,%r9
76e0(4): mov 0x8(%r15),%rcx
76e4(6): jbe 0x56b(%rip)
76ea(3): mov (%r15),%rax
76ed(3): mov %rax,%rdx
76f0(4): shl/sal $0x5,%rdx
76f4(3): add %rcx,%rdx
76f7(3): cmp %rbx,%rax
76fa(2): jnbe 0x1c(%rip)
76fc(4): nop 0x0(%rax)
7700(4): add $0x1,%rax
7704(6): mov $0x0,(%rdx)
770a(4): add $0x20,%rdx
770e(3): cmp %rbx,%rax
7711(2): jbe 0xffffffef(%rip)
7713(3): mov %rax,(%r15)
7716(4): shl/sal $0x5,%rbx
771a(4): lea 0x0(%rcx,%rbx,1),%rax
771e(2): mov (%rax),%edx
7720(2): test %edx,%edx
7722(6): jnz 0x518(%rip)
7728(6): mov $0x5,(%rax)
772e(3): mov %r11,%rbp
7731(4): movzx (%r11),%ebx
7735(5): jmp 0xfffffc89(%rip)
773a(3): mov %rbp,%rax
773d(3): nop (%rax)
7740(4): add $0x1,%rax
7744(3): movzx (%rax),%edx
7747(3): lea 0xffffffd0(%rdx),%ecx
774a(3): cmp $0x9,%cl
774d(2): jbe 0xfffffff3(%rip)
774f(3): cmp $0x24,%dl
7752(3): mov %r8,%r13
7755(6): jnz 0xfffffbe9(%rip)
775b(2): xor %edx,%edx
775d(3): movsx %bl,%eax
7760(a): mov $0x1844674407370955161,%rdi
776a(3): mov %r8,%rsi
776d(3): sub $0x30,%eax
7770(3): cmp %rdi,%rdx
7773(2): cwde 
7775(2): jnbe 0x9(%rip)
7777(4): lea 0x0(%rdx,%rdx,4),%rsi
777b(3): add %rsi,%rsi
777e(3): mov %rbp,%rcx
7781(3): add %rsi,%rax
7784(4): movzx 0x1(%rbp),%ebx
7788(4): setb %sil
778c(4): add $0x1,%rbp
7790(3): mov %rax,%rdx
7793(4): movzx %sil,%esi
7797(3): test %rsi,%rsi
779a(3): lea 0xffffffd0(%rbx),%edi
779d(6): jnz 0x391(%rip)
77a3(4): cmp $0x9,%dil
77a7(2): jbe 0xffffffb6(%rip)
77a9(3): mov %rax,%r13
77ac(4): sub $0x1,%r13
77b0(4): cmp $0xfffffffd,%r13
77b4(6): jnbe 0x287(%rip)
77ba(4): lea 0x2(%rcx),%rbp
77be(4): movzx 0x2(%rcx),%ebx
77c2(5): jmp 0xfffffb7c(%rip)
77c7(5): mov %rbp,0x18(%r12)
77cc(4): movzx 0x0(%rbp),%edi
77d0(3): mov %rbp,%rsi
77d3(3): lea 0xffffffd0(%rdi),%ecx
77d6(3): cmp $0x9,%cl
77d9(2): jbe 0xe(%rip)
77db(2): jmp 0x35(%rip)
77dd(3): nop (%rax)
77e0(3): mov %rax,%rbp
77e3(4): add $0x1,%rax
77e7(3): movzx (%rax),%edi
77ea(3): lea 0xffffffd0(%rdi),%edx
77ed(3): cmp $0x9,%dl
77f0(2): jbe 0xfffffff0(%rip)
77f2(3): mov %rax,%rcx
77f5(4): lea 0x2(%rbp),%rdx
77f9(3): mov %rax,%rbp
77fc(3): sub %rsi,%rcx
77ff(5): mov 0x10(%rsp),%rsi
7804(3): cmp %rcx,%rsi
7807(4): cmovnb %rsi,%rcx
780b(5): mov %rcx,0x10(%rsp)
7810(5): mov %rbp,0x20(%r12)
7815(4): movzx 0x0(%rbp),%ebx
7819(5): jmp 0xfffffb9c(%rip)
781e(4): movzx 0x1(%rbp),%eax
7822(3): sub $0x30,%eax
7825(2): cmp $0x9,%al
7827(2): jnbe 0x17(%rip)
7829(7): nop 0x0(%rax)
7830(4): add $0x1,%rdx
7834(3): movzx (%rdx),%eax
7837(3): sub $0x30,%eax
783a(2): cmp $0x9,%al
783c(2): jbe 0xfffffff4(%rip)
783e(5): mov 0x18(%rsp),%rsi
7843(3): mov %rdx,%rax
7846(5): mov %rdx,0x38(%r12)
784b(3): sub %rbp,%rax
784e(3): movzx (%rdx),%ebx
7851(3): mov %rdx,%rbp
7854(3): cmp %rax,%rsi
7857(4): cmovnb %rsi,%rax
785b(5): mov %rax,0x18(%rsp)
7860(5): jmp 0xfffffb5e(%rip)
7865(3): mov %rax,%rsi
7868(4): add $0x1,%rsi
786c(3): movzx (%rsi),%edi
786f(4): lea 0xffffffd0(%rdi),%r11d
7873(4): cmp $0x9,%r11b
7877(2): jbe 0xfffffff1(%rip)
7879(4): cmp $0x24,%dil
787d(6): jnz 0xfffffd0d(%rip)
7883(2): xor %esi,%esi
7885(3): movsx %cl,%eax
7888(a): mov $0x1844674407370955161,%rdi
7892(3): mov %r8,%rcx
7895(3): sub $0x30,%eax
7898(3): cmp %rdi,%rsi
789b(2): cwde 
789d(2): jnbe 0x9(%rip)
789f(4): lea 0x0(%rsi,%rsi,4),%rcx
78a3(3): add %rcx,%rcx
78a6(3): mov %rdx,%rbp
78a9(3): xor %r11d,%r11d
78ac(3): add %rcx,%rax
78af(4): movzx 0x1(%rdx),%ecx
78b3(4): setb %r11b
78b7(4): add $0x1,%rdx
78bb(3): mov %rax,%rsi
78be(3): test %r11,%r11
78c1(3): lea 0xffffffd0(%rcx),%edi
78c4(6): jnz 0x50a(%rip)
78ca(4): cmp $0x9,%dil
78ce(2): jbe 0xffffffb7(%rip)
78d0(4): lea 0xffffffff(%rax),%rbx
78d4(4): cmp $0xfffffffd,%rbx
78d8(6): jnbe 0x163(%rip)
78de(5): mov %rbx,0x28(%r12)
78e3(4): add $0x2,%rbp
78e7(5): jmp 0xfffffcc8(%rip)
78ec(3): cmp $0xf,%eax
78ef(6): mov $0x16,%r11d
78f5(6): jnle 0xfffffb53(%rip)
78fb(2): test $0x4,%al
78fd(6): jnz 0xfffffb4b(%rip)
7903(3): cmp $0x7,%eax
7906(6): mov $0x15,%r11d
790c(6): jnle 0xfffffb3c(%rip)
7912(2): test $0x2,%al
7914(6): mov $0x12,%r11d
791a(6): jnz 0xfffffb2e(%rip)
7920(3): xor %r11d,%r11d
7923(2): test $0x1,%al
7925(4): setz %r11b
7929(4): add $0x13,%r11d
792d(5): jmp 0xfffffb1b(%rip)
7932(6): nop 0x0(%rax,%rax,1)
7938(3): xor %r11d,%r11d
793b(3): cmp $0x7,%eax
793e(4): setnle %r11b
7942(4): add $0xd,%r11d
7946(5): jmp 0xfffffb02(%rip)
794b(3): cmp $0xf,%eax
794e(6): mov $0x9,%r11d
7954(6): jnle 0xfffffaf4(%rip)
795a(2): test $0x4,%al
795c(6): jnz 0xfffffaec(%rip)
7962(3): cmp $0x7,%eax
7965(6): mov $0x7,%r11d
796b(6): jnle 0xfffffadd(%rip)
7971(2): test $0x2,%al
7973(6): mov $0x1,%r11d
7979(6): jnz 0xfffffacf(%rip)
797f(3): and $0x1,%eax
7982(3): cmp $0x1,%eax
7985(3): sbb %r11d,%r11d
7988(4): and $0x2,%r11d
798c(4): add $0x3,%r11d
7990(5): jmp 0xfffffab8(%rip)
7995(3): nop (%rax)
7998(3): xor %r11d,%r11d
799b(3): cmp $0x7,%eax
799e(4): setnle %r11b
79a2(4): add $0xf,%r11d
79a6(5): jmp 0xfffffaa2(%rip)
79ab(3): cmp $0xf,%eax
79ae(6): mov $0xc,%r11d
79b4(6): jnle 0xfffffa94(%rip)
79ba(3): xor %r11d,%r11d
79bd(2): test $0x4,%al
79bf(4): setnz %r11b
79c3(4): add $0xb,%r11d
79c7(5): jmp 0xfffffa81(%rip)
79cc(6): mov $0xe,%r11d
79d2(5): mov $0x63,%ebx
79d7(5): jmp 0xfffffa71(%rip)
79dc(3): cmp $0xf,%eax
79df(6): mov $0xa,%r11d
79e5(6): jnle 0xfffffa63(%rip)
79eb(2): test $0x4,%al
79ed(6): jnz 0xfffffa5b(%rip)
79f3(3): cmp $0x7,%eax
79f6(6): mov $0x8,%r11d
79fc(6): jnle 0xfffffa4c(%rip)
7a02(2): test $0x2,%al
7a04(6): mov $0x2,%r11d
7a0a(6): jnz 0xfffffa3e(%rip)
7a10(3): and $0x1,%eax
7a13(3): cmp $0x1,%eax
7a16(3): sbb %r11d,%r11d
7a19(4): and $0x2,%r11d
7a1d(4): add $0x4,%r11d
7a21(5): jmp 0xfffffa27(%rip)
7a26(a): nop 0x0(%rax,%rax,1)
7a30(6): mov $0x11,%r11d
7a36(5): jmp 0xfffffa12(%rip)
7a3b(4): mov 0x8(%r15),%rcx
7a3f(5): cmp %rcx,0x8(%rsp)
7a44(2): jz 0xa(%rip)
7a46(3): mov %rcx,%rdi
7a49(5): call 0xffff9b47(%rip)
7a4e(4): mov 0x8(%r14),%rdi
7a52(5): cmp %rdi,0x28(%rsp)
7a57(2): jz 0x7(%rip)
7a59(5): call 0xffff9b37(%rip)
7a5e(5): call 0xffff9b52(%rip)
7a63(6): mov $0x16,(%rax)
7a69(5): mov $0xffffffff,%eax
7a6e(5): jmp 0xfffff824(%rip)
7a73(3): cmp %r11d,%edx
7a76(6): jz 0xfffffa35(%rip)
7a7c(2): jmp 0xffffffc3(%rip)
7a7e(2): nop 
7a80(3): add %r9,%r9
7a83(4): lea 0x1(%r13),%rax
7a87(3): cmp %r13,%r9
7a8a(4): cmovbe %rax,%r9
7a8e(a): mov $0x576460752303423487,%rax
7a98(3): cmp %rax,%r9
7a9b(6): jnbe 0x3e0(%rip)
7aa1(3): mov %r9,%rsi
7aa4(5): mov %r9,0x48(%rsp)
7aa9(5): mov %r10,0x40(%rsp)
7aae(4): shl/sal $0x5,%rsi
7ab2(5): cmp %rcx,0x8(%rsp)
7ab7(5): mov %r8,0x38(%rsp)
7abc(5): mov %r11d,0x30(%rsp)
7ac1(6): jz 0xa0(%rip)
7ac7(3): mov %rcx,%rdi
7aca(5): call 0xffff9d16(%rip)
7acf(3): test %rax,%rax
7ad2(3): mov %rax,%rcx
7ad5(5): mov 0x30(%rsp),%r11d
7ada(5): mov 0x38(%rsp),%r8
7adf(5): mov 0x40(%rsp),%r10
7ae4(5): mov 0x48(%rsp),%r9
7ae9(6): jz 0x38e(%rip)
7aef(5): mov 0x8(%rsp),%rax
7af4(4): cmp 0x8(%r15),%rax
7af8(6): jz 0x91(%rip)
7afe(4): mov %rcx,0x8(%r15)
7b02(5): jmp 0xfffff962(%rip)
7b07(5): mov 0x20(%rsp),%rsi
7b0c(4): cmp $0xffffffff,%rsi
7b10(4): lea 0x1(%rsi),%rax
7b14(5): mov %rsi,0x50(%r12)
7b19(6): jz 0xffffff22(%rip)
7b1f(5): mov 0x20(%rsp),%r13
7b24(5): mov %rax,0x20(%rsp)
7b29(5): jmp 0xfffff92e(%rip)
7b2e(4): cmp $0x9,%dil
7b32(6): jnbe 0xffffff09(%rip)
7b38(3): movsx %bl,%eax
7b3b(3): mov %r8,%rsi
7b3e(3): mov %rbp,%rcx
7b41(3): sub $0x30,%eax
7b44(2): cwde 
7b46(5): jmp 0xfffffc3b(%rip)
7b4b(3): cmp $0x5,%edx
7b4e(6): jnz 0xfffffef1(%rip)
7b54(4): movzx 0x0(%rbp),%ebx
7b58(4): lea 0x1(%rbp),%rdx
7b5c(5): jmp 0xfffff859(%rip)
7b61(3): mov %rsi,%rdi
7b64(5): call 0xffff9c2c(%rip)
7b69(3): test %rax,%rax
7b6c(3): mov %rax,%rcx
7b6f(5): mov 0x30(%rsp),%r11d
7b74(5): mov 0x38(%rsp),%r8
7b79(5): mov 0x40(%rsp),%r10
7b7e(5): mov 0x48(%rsp),%r9
7b83(6): jz 0x169(%rip)
7b89(3): mov (%r15),%rdx
7b8c(5): mov 0x8(%rsp),%rsi
7b91(3): mov %rcx,%rdi
7b94(5): mov %r9,0x48(%rsp)
7b99(5): mov %r10,0x40(%rsp)
7b9e(5): mov %r8,0x38(%rsp)
7ba3(5): mov %r11d,0x30(%rsp)
7ba8(4): shl/sal $0x5,%rdx
7bac(5): call 0xffff9bb4(%rip)
7bb1(5): mov 0x48(%rsp),%r9
7bb6(5): mov 0x40(%rsp),%r10
7bbb(3): mov %rax,%rcx
7bbe(5): mov 0x38(%rsp),%r8
7bc3(5): mov 0x30(%rsp),%r11d
7bc8(5): jmp 0xffffff36(%rip)
7bcd(3): mov %rsi,%rdi
7bd0(5): call 0xffff9bc0(%rip)
7bd5(3): test %rax,%rax
7bd8(3): mov %rax,%rcx
7bdb(5): mov 0x30(%rsp),%r8
7be0(5): mov 0x38(%rsp),%r10
7be5(5): mov 0x40(%rsp),%r9
7bea(6): jz 0xef(%rip)
7bf0(4): lea 0x0(%rbx,%rbx,4),%rax
7bf4(5): mov 0x28(%rsp),%rsi
7bf9(3): mov %rcx,%rdi
7bfc(5): mov %r9,0x40(%rsp)
7c01(5): mov %r10,0x38(%rsp)
7c06(4): lea 0x0(%rbx,%rax,2),%rdx
7c0a(5): mov %r8,0x30(%rsp)
7c0f(4): shl/sal $0x3,%rdx
7c13(5): call 0xffff9b4d(%rip)
7c18(3): mov (%r14),%rbx
7c1b(3): mov %rax,%rcx
7c1e(5): mov 0x40(%rsp),%r9
7c23(5): mov 0x38(%rsp),%r10
7c28(5): mov 0x30(%rsp),%r8
7c2d(5): jmp 0xfffff91a(%rip)
7c32(3): mov (%r15),%rax
7c35(5): jmp 0xfffffa02(%rip)
7c3a(3): cmp $0x5,%edx
7c3d(6): jnz 0xfffffe02(%rip)
7c43(4): movzx (%r11),%ebx
7c47(3): mov %r11,%rbp
7c4a(5): jmp 0xfffff774(%rip)
7c4f(3): add %r9,%r9
7c52(4): lea 0x1(%rbx),%rax
7c56(3): cmp %rbx,%r9
7c59(4): cmovbe %rax,%r9
7c5d(a): mov $0x576460752303423487,%rax
7c67(3): cmp %rax,%r9
7c6a(6): jnbe 0x211(%rip)
7c70(3): mov %r9,%rsi
7c73(5): mov %r9,0x48(%rsp)
7c78(5): mov %r10,0x40(%rsp)
7c7d(4): shl/sal $0x5,%rsi
7c81(5): cmp %rcx,0x8(%rsp)
7c86(5): mov %r8,0x38(%rsp)
7c8b(5): mov %r11,0x30(%rsp)
7c90(6): jz 0x1be(%rip)
7c96(3): mov %rcx,%rdi
7c99(5): call 0xffff9b47(%rip)
7c9e(4): mov 0x8(%r15),%rdx
7ca2(5): mov 0x30(%rsp),%r11
7ca7(3): mov %rax,%rcx
7caa(5): mov 0x38(%rsp),%r8
7caf(5): mov 0x40(%rsp),%r10
7cb4(5): mov 0x48(%rsp),%r9
7cb9(3): test %rcx,%rcx
7cbc(6): jz 0x21b(%rip)
7cc2(5): cmp %rdx,0x8(%rsp)
7cc7(3): mov (%r15),%rax
7cca(6): jz 0x1c6(%rip)
7cd0(4): mov %rcx,0x8(%r15)
7cd4(5): jmp 0xfffffa19(%rip)
7cd9(4): mov 0x8(%r15),%rcx
7cdd(5): cmp %rcx,0x8(%rsp)
7ce2(2): jz 0x1a(%rip)
7ce4(3): mov %rcx,%rdi
7ce7(5): call 0xffff98a9(%rip)
7cec(4): mov 0x8(%r14),%rdi
7cf0(5): cmp %rdi,0x28(%rsp)
7cf5(2): jz 0x7(%rip)
7cf7(5): call 0xffff9899(%rip)
7cfc(5): call 0xffff98b4(%rip)
7d01(6): mov $0xc,(%rax)
7d07(5): mov $0xffffffff,%eax
7d0c(5): jmp 0xfffff586(%rip)
7d11(3): mov %rsi,%rdi
7d14(5): call 0xffff9a7c(%rip)
7d19(5): mov 0x8(%rsp),%rdx
7d1e(3): mov %rax,%rcx
7d21(5): mov 0x40(%rsp),%r9
7d26(5): mov 0x38(%rsp),%r10
7d2b(5): mov 0x30(%rsp),%r8
7d30(5): jmp 0xfffff8ec(%rip)
7d35(5): mov 0x20(%rsp),%rsi
7d3a(4): cmp $0xffffffff,%rsi
7d3e(4): lea 0x1(%rsi),%rax
7d42(5): mov %rsi,0x40(%r12)
7d47(6): jz 0xfffffcf4(%rip)
7d4d(5): mov 0x20(%rsp),%rbx
7d52(5): mov %rax,0x20(%rsp)
7d57(5): jmp 0xfffff986(%rip)
7d5c(3): mov %r11,%rdx
7d5f(4): add $0x1,%rdx
7d63(3): movzx (%rdx),%ecx
7d66(3): lea 0xffffffd0(%rcx),%esi
7d69(4): cmp $0x9,%sil
7d6d(2): jbe 0xfffffff2(%rip)
7d6f(3): cmp $0x24,%cl
7d72(6): jnz 0xfffff95c(%rip)
7d78(2): xor %ecx,%ecx
7d7a(a): mov $0x1844674407370955161,%rsi
7d84(3): sub $0x30,%eax
7d87(3): mov %r8,%rdx
7d8a(3): cmp %rsi,%rcx
7d8d(2): cwde 
7d8f(2): jnbe 0x9(%rip)
7d91(4): lea 0x0(%rcx,%rcx,4),%rdx
7d95(3): add %rdx,%rdx
7d98(3): mov %r11,%rsi
7d9b(2): xor %ebx,%ebx
7d9d(3): add %rax,%rdx
7da0(5): movsx 0x1(%r11),%eax
7da5(3): setb %bl
7da8(4): add $0x1,%r11
7dac(3): mov %rdx,%rcx
7daf(3): test %rbx,%rbx
7db2(3): lea 0xffffffd0(%rax),%edi
7db5(2): jz 0x73(%rip)
7db7(4): cmp $0x9,%dil
7dbb(6): jnbe 0xfffffc80(%rip)
7dc1(3): sub $0x30,%eax
7dc4(3): mov %r8,%rdx
7dc7(3): mov %r11,%rsi
7dca(2): cwde 
7dcc(2): jmp 0xffffffcf(%rip)
7dce(4): cmp $0x9,%dil
7dd2(6): jnbe 0xfffffc69(%rip)
7dd8(3): movsx %cl,%eax
7ddb(3): mov %rdx,%rbp
7dde(3): mov %r8,%rcx
7de1(3): sub $0x30,%eax
7de4(2): cwde 
7de6(5): jmp 0xfffffac3(%rip)
7deb(5): mov 0x8(%rsp),%rsi
7df0(4): shl/sal $0x5,%rax
7df4(3): mov %rcx,%rdi
7df7(3): mov %rax,%rdx
7dfa(5): mov %r9,0x40(%rsp)
7dff(5): mov %r10,0x38(%rsp)
7e04(5): mov %r8,0x30(%rsp)
7e09(5): call 0xffff9957(%rip)
7e0e(5): mov 0x40(%rsp),%r9
7e13(3): mov %rax,%rcx
7e16(5): mov 0x38(%rsp),%r10
7e1b(3): mov (%r15),%rax
7e1e(5): mov 0x30(%rsp),%r8
7e23(5): jmp 0xfffff810(%rip)
7e28(4): cmp $0x9,%dil
7e2c(6): jbe 0xffffff4e(%rip)
7e32(4): lea 0xffffffff(%rdx),%rbx
7e36(4): cmp $0xfffffffd,%rbx
7e3a(6): jnbe 0xfffffc01(%rip)
7e40(5): mov %rbx,0x40(%r12)
7e45(4): lea 0x2(%rsi),%r11
7e49(5): jmp 0xfffff894(%rip)
7e4e(3): mov %rsi,%rdi
7e51(5): call 0xffff993f(%rip)
7e56(5): mov 0x8(%rsp),%rdx
7e5b(3): mov %rax,%rcx
7e5e(5): mov 0x48(%rsp),%r9
7e63(5): mov 0x40(%rsp),%r10
7e68(5): mov 0x38(%rsp),%r8
7e6d(5): mov 0x30(%rsp),%r11
7e72(5): jmp 0xfffffe47(%rip)
7e77(4): mov 0x8(%r15),%rcx
7e7b(5): cmp %rcx,0x8(%rsp)
7e80(6): jnz 0xfffffe64(%rip)
7e86(5): jmp 0xfffffe66(%rip)
7e8b(5): nop 0x0(%rax,%rax,1)
7e90(5): mov 0x8(%rsp),%rsi
7e95(4): shl/sal $0x5,%rax
7e99(3): mov %rcx,%rdi
7e9c(3): mov %rax,%rdx
7e9f(5): mov %r9,0x48(%rsp)
7ea4(5): mov %r10,0x40(%rsp)
7ea9(5): mov %r8,0x38(%rsp)
7eae(5): mov %r11,0x30(%rsp)
7eb3(5): call 0xffff98ad(%rip)
7eb8(5): mov 0x48(%rsp),%r9
7ebd(3): mov %rax,%rcx
7ec0(5): mov 0x40(%rsp),%r10
7ec5(3): mov (%r15),%rax
7ec8(5): mov 0x38(%rsp),%r8
7ecd(5): mov 0x30(%rsp),%r11
7ed2(5): jmp 0xfffffdfe(%rip)
7ed7(3): mov %rdx,%rcx
7eda(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
7ee0(2): push %r15
7ee2(2): push %r14
7ee4(3): mov %rdx,%r15
7ee7(2): push %r13
7ee9(2): push %r12
7eeb(7): lea 0x202bfe(%rip),%r12
7ef2(1): push %rbp
7ef3(7): lea 0x202bfe(%rip),%rbp
7efa(1): push %rbx
7efb(3): mov %edi,%r13d
7efe(3): mov %rsi,%r14
7f01(3): sub %r12,%rbp
7f04(4): sub $0x8,%rsp
7f08(4): sar $0x3,%rbp
7f0c(5): call 0xffff9644(%rip)
7f11(3): test %rbp,%rbp
7f14(2): jz 0x22(%rip)
7f16(2): xor %ebx,%ebx
7f18(8): nop 0x0(%rax,%rax,1)
7f20(3): mov %r15,%rdx
7f23(3): mov %r14,%rsi
7f26(3): mov %r13d,%edi
7f29(4): call 0x0(%r12,%rbx,8)
7f2d(4): add $0x1,%rbx
7f31(3): cmp %rbx,%rbp
7f34(2): jnz 0xffffffec(%rip)
7f36(4): add $0x8,%rsp
7f3a(1): pop %rbx
7f3b(1): pop %rbp
7f3c(2): pop %r12
7f3e(2): pop %r13
7f40(2): pop %r14
7f42(2): pop %r15
7f44(1): ret near (%rsp)

"atexit" :
7f60(7): mov 0x2030a1(%rip),%rdx
7f67(2): xor %esi,%esi
7f69(5): jmp 0xffff98f7(%rip)

"_fini" :
7f70(4): sub $0x8,%rsp
7f74(4): add $0x8,%rsp
7f78(1): ret near (%rsp)

