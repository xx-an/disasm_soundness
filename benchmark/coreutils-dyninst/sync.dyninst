
"free@plt" :
1320(6): jmp 0x205b3a(%rip)
1326(5): push $0x0

"abort@plt" :
1330(6): jmp 0x205b32(%rip)
1336(5): push $0x1

"__errno_location@plt" :
1340(6): jmp 0x205b2a(%rip)
1346(5): push $0x2

"fdatasync@plt" :
1350(6): jmp 0x205b22(%rip)
1356(5): push $0x3

"strncmp@plt" :
1360(6): jmp 0x205b1a(%rip)
1366(5): push $0x4

"_exit@plt" :
1370(6): jmp 0x205b12(%rip)
1376(5): push $0x5

"__fpending@plt" :
1380(6): jmp 0x205b0a(%rip)
1386(5): push $0x6

"fcntl@plt" :
1390(6): jmp 0x205b02(%rip)
1396(5): push $0x7

"textdomain@plt" :
13a0(6): jmp 0x205afa(%rip)
13a6(5): push $0x8

"fclose@plt" :
13b0(6): jmp 0x205af2(%rip)
13b6(5): push $0x9

"bindtextdomain@plt" :
13c0(6): jmp 0x205aea(%rip)
13c6(5): push $0xa

"dcgettext@plt" :
13d0(6): jmp 0x205ae2(%rip)
13d6(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
13e0(6): jmp 0x205ada(%rip)
13e6(5): push $0xc

"strlen@plt" :
13f0(6): jmp 0x205ad2(%rip)
13f6(5): push $0xd

"syncfs@plt" :
1400(6): jmp 0x205aca(%rip)
1406(5): push $0xe

"__stack_chk_fail@plt" :
1410(6): jmp 0x205ac2(%rip)
1416(5): push $0xf

"getopt_long@plt" :
1420(6): jmp 0x205aba(%rip)
1426(5): push $0x10

"mbrtowc@plt" :
1430(6): jmp 0x205ab2(%rip)
1436(5): push $0x11

"strrchr@plt" :
1440(6): jmp 0x205aaa(%rip)
1446(5): push $0x12

"lseek@plt" :
1450(6): jmp 0x205aa2(%rip)
1456(5): push $0x13

"memset@plt" :
1460(6): jmp 0x205a9a(%rip)
1466(5): push $0x14

"close@plt" :
1470(6): jmp 0x205a92(%rip)
1476(5): push $0x15

"memcmp@plt" :
1480(6): jmp 0x205a8a(%rip)
1486(5): push $0x16

"fputs_unlocked@plt" :
1490(6): jmp 0x205a82(%rip)
1496(5): push $0x17

"calloc@plt" :
14a0(6): jmp 0x205a7a(%rip)
14a6(5): push $0x18

"memcpy@plt" :
14b0(6): jmp 0x205a72(%rip)
14b6(5): push $0x19

"fileno@plt" :
14c0(6): jmp 0x205a6a(%rip)
14c6(5): push $0x1a

"sync@plt" :
14d0(6): jmp 0x205a62(%rip)
14d6(5): push $0x1b

"malloc@plt" :
14e0(6): jmp 0x205a5a(%rip)
14e6(5): push $0x1c

"fflush@plt" :
14f0(6): jmp 0x205a52(%rip)
14f6(5): push $0x1d

"nl_langinfo@plt" :
1500(6): jmp 0x205a4a(%rip)
1506(5): push $0x1e

"__freading@plt" :
1510(6): jmp 0x205a42(%rip)
1516(5): push $0x1f

"realloc@plt" :
1520(6): jmp 0x205a3a(%rip)
1526(5): push $0x20

"setlocale@plt" :
1530(6): jmp 0x205a32(%rip)
1536(5): push $0x21

"__printf_chk@plt" :
1540(6): jmp 0x205a2a(%rip)
1546(5): push $0x22

"error@plt" :
1550(6): jmp 0x205a22(%rip)
1556(5): push $0x23

"fsync@plt" :
1560(6): jmp 0x205a1a(%rip)
1566(5): push $0x24

"open@plt" :
1570(6): jmp 0x205a12(%rip)
1576(5): push $0x25

"fseeko@plt" :
1580(6): jmp 0x205a0a(%rip)
1586(5): push $0x26

"__cxa_atexit@plt" :
1590(6): jmp 0x205a02(%rip)
1596(5): push $0x27

"exit@plt" :
15a0(6): jmp 0x2059fa(%rip)
15a6(5): push $0x28

"fwrite@plt" :
15b0(6): jmp 0x2059f2(%rip)
15b6(5): push $0x29

"__fprintf_chk@plt" :
15c0(6): jmp 0x2059ea(%rip)
15c6(5): push $0x2a

"mbsinit@plt" :
15d0(6): jmp 0x2059e2(%rip)
15d6(5): push $0x2b

"iswprint@plt" :
15e0(6): jmp 0x2059da(%rip)
15e6(5): push $0x2c

"__ctype_b_loc@plt" :
15f0(6): jmp 0x2059d2(%rip)
15f6(5): push $0x2d

".plt.got" :
1600(6): jmp 0x2059ea(%rip)
1606(2): nop 

"_init" :
12f0(4): sub $0x8,%rsp
12f4(7): mov 0x205ce5(%rip),%rax
12fb(3): test %rax,%rax
12fe(2): jz 0x4(%rip)
1300(2): call %rax
1302(4): add $0x8,%rsp
1306(1): ret near (%rsp)

"main" :
1610(2): push %r15
1612(2): push %r14
1614(2): push %r13
1616(2): push %r12
1618(3): xor %r13d,%r13d
161b(1): push %rbp
161c(1): push %rbx
161d(2): mov %edi,%ebp
161f(3): mov %rsi,%rbx
1622(3): xor %r12d,%r12d
1625(4): sub $0x18,%rsp
1629(3): mov (%rsi),%rdi
162c(5): call 0x904(%rip)
1631(7): lea 0x34ee(%rip),%rsi
1638(5): mov $0x6,%edi
163d(5): call 0xfffffef3(%rip)
1642(7): lea 0x3581(%rip),%rsi
1649(7): lea 0x3551(%rip),%rdi
1650(5): call 0xfffffd70(%rip)
1655(7): lea 0x3545(%rip),%rdi
165c(5): call 0xfffffd44(%rip)
1661(7): lea 0x818(%rip),%rdi
1668(5): call 0x3478(%rip)
166d(7): lea 0x2054ec(%rip),%rcx
1674(7): lea 0x3586(%rip),%rdx
167b(3): xor %r8d,%r8d
167e(3): mov %rbx,%rsi
1681(2): mov %ebp,%edi
1683(5): call 0xfffffd9d(%rip)
1688(3): cmp $0xff,%eax
168b(2): jz 0x80(%rip)
168d(5): cmp $0xffffff7e,%eax
1692(6): jz 0x2d1(%rip)
1698(2): jle 0x18(%rip)
169a(3): cmp $0x64,%eax
169d(2): jz 0x63(%rip)
169f(3): cmp $0x66,%eax
16a2(6): jnz 0x2c8(%rip)
16a8(6): mov $0x1,%r13d
16ae(2): jmp 0xffffffbf(%rip)
16b0(5): cmp $0xffffff7d,%eax
16b5(6): jnz 0x2b5(%rip)
16bb(4): sub $0x8,%rsp
16bf(7): mov 0x2059c2(%rip),%rdi
16c6(7): mov 0x205943(%rip),%rcx
16cd(2): push $0x0
16cf(7): lea 0x350c(%rip),%r9
16d6(7): lea 0x3517(%rip),%r8
16dd(7): lea 0x34b9(%rip),%rdx
16e4(7): lea 0x3419(%rip),%rsi
16eb(2): xor %eax,%eax
16ed(5): call 0x2a33(%rip)
16f2(2): xor %edi,%edi
16f4(5): call 0xfffffeac(%rip)
16f9(7): nop 0x0(%rax)
1700(6): mov $0x1,%r12d
1706(5): jmp 0xffffff67(%rip)
170b(3): test %r12b,%r12b
170e(7): movsxd 0x20597b(%rip),%rax
1715(2): jz 0xb(%rip)
1717(3): test %r13b,%r13b
171a(6): jnz 0x27e(%rip)
1720(2): cmp %ebp,%eax
1722(3): setnl %dl
1725(3): test %r12b,%dl
1728(6): jnz 0x24c(%rip)
172e(2): cmp %ebp,%eax
1730(6): jnl 0x16e(%rip)
1736(3): test %r13b,%r13b
1739(8): mov $0x2,0xc(%rsp)
1741(6): jz 0x1fb(%rip)
1747(6): mov $0x1,%r13d
174d(5): jmp 0x86(%rip)
1752(2): xor %eax,%eax
1754(5): mov $0x3,%esi
1759(3): mov %r12d,%edi
175c(5): call 0x2db4(%rip)
1761(3): cmp $0xff,%eax
1764(6): jz 0xf4(%rip)
176a(3): and $0xf7,%ah
176d(5): mov $0x4,%esi
1772(3): mov %r12d,%edi
1775(2): mov %eax,%edx
1777(2): xor %eax,%eax
1779(5): call 0x2d97(%rip)
177e(2): test %eax,%eax
1780(6): js 0xd8(%rip)
1786(4): mov 0xc(%rsp),%eax
178a(3): cmp $0x1,%eax
178d(6): jz 0x1bc(%rip)
1793(3): cmp $0x2,%eax
1796(6): jnz 0x1c0(%rip)
179c(3): mov %r12d,%edi
179f(5): call 0xfffffc61(%rip)
17a4(2): test %eax,%eax
17a6(6): mov $0x1,%r15d
17ac(6): js 0x158(%rip)
17b2(3): mov %r12d,%edi
17b5(5): call 0xfffffcbb(%rip)
17ba(2): test %eax,%eax
17bc(6): js 0x104(%rip)
17c2(7): add $0x1,0x2058c7(%rip)
17c9(3): and %r15d,%r13d
17cc(7): movsxd 0x2058bd(%rip),%rax
17d3(2): cmp %ebp,%eax
17d5(6): jnl 0xd4(%rip)
17db(4): mov 0x0(%rbx,%rax,8),%r14
17df(5): mov $0x800,%esi
17e4(2): xor %eax,%eax
17e6(3): mov %r14,%rdi
17e9(5): call 0xfffffd87(%rip)
17ee(2): test %eax,%eax
17f0(3): mov %eax,%r12d
17f3(6): jns 0xffffff5f(%rip)
17f9(5): call 0xfffffb47(%rip)
17fe(5): mov $0x801,%esi
1803(3): mov (%rax),%r15d
1806(3): mov %r14,%rdi
1809(2): xor %eax,%eax
180b(5): call 0xfffffd65(%rip)
1810(2): test %eax,%eax
1812(3): mov %eax,%r12d
1815(6): jns 0xffffff3d(%rip)
181b(3): mov %r14,%rsi
181e(5): mov $0x4,%edi
1823(5): call 0x214d(%rip)
1828(7): lea 0x33d5(%rip),%rsi
182f(3): mov %rax,%r12
1832(5): mov $0x5,%edx
1837(2): xor %edi,%edi
1839(5): call 0xfffffb97(%rip)
183e(3): mov %r15d,%esi
1841(3): mov %rax,%rdx
1844(3): mov %r12,%rcx
1847(2): xor %edi,%edi
1849(2): xor %eax,%eax
184b(3): xor %r15d,%r15d
184e(5): call 0xfffffd02(%rip)
1853(5): jmp 0xffffff6f(%rip)
1858(3): mov %r14,%rsi
185b(5): mov $0x4,%edi
1860(5): call 0x2110(%rip)
1865(7): lea 0x369c(%rip),%rsi
186c(5): mov $0x5,%edx
1871(2): xor %edi,%edi
1873(4): mov %rax,(%rsp)
1877(5): call 0xfffffb59(%rip)
187c(3): mov %rax,%r15
187f(5): call 0xfffffac1(%rip)
1884(4): mov (%rsp),%rcx
1888(3): mov %r15,%rdx
188b(2): mov (%rax),%esi
188d(2): xor %edi,%edi
188f(2): xor %eax,%eax
1891(3): xor %r15d,%r15d
1894(5): call 0xfffffcbc(%rip)
1899(5): jmp 0xffffff19(%rip)
189e(6): mov $0x1,%r13d
18a4(5): call 0xfffffc2c(%rip)
18a9(4): add $0x18,%rsp
18ad(4): xor $0x1,%r13d
18b1(1): pop %rbx
18b2(4): movzx %r13b,%eax
18b6(1): pop %rbp
18b7(2): pop %r12
18b9(2): pop %r13
18bb(2): pop %r14
18bd(2): pop %r15
18bf(1): ret near (%rsp)
18c0(3): mov %r14,%rsi
18c3(5): mov $0x4,%edi
18c8(3): xor %r15d,%r15d
18cb(5): call 0x20a5(%rip)
18d0(7): lea 0x334f(%rip),%rsi
18d7(5): mov $0x5,%edx
18dc(2): xor %edi,%edi
18de(3): mov %rax,%r14
18e1(5): call 0xfffffaef(%rip)
18e6(3): mov %rax,%r12
18e9(5): call 0xfffffa57(%rip)
18ee(2): mov (%rax),%esi
18f0(3): mov %r14,%rcx
18f3(3): mov %r12,%rdx
18f6(2): xor %edi,%edi
18f8(2): xor %eax,%eax
18fa(5): call 0xfffffc56(%rip)
18ff(5): jmp 0xfffffec3(%rip)
1904(3): mov %r14,%rsi
1907(5): mov $0x4,%edi
190c(5): call 0x2064(%rip)
1911(7): lea 0x32fd(%rip),%rsi
1918(5): mov $0x5,%edx
191d(3): mov %rax,%r15
1920(2): xor %edi,%edi
1922(5): call 0xfffffaae(%rip)
1927(4): mov %rax,(%rsp)
192b(5): call 0xfffffa15(%rip)
1930(3): mov %r15,%rcx
1933(4): mov (%rsp),%rdx
1937(5): jmp 0xffffff54(%rip)
193c(4): movzx %r12b,%ecx
1940(4): mov %ecx,0xc(%rsp)
1944(5): jmp 0xfffffe03(%rip)
1949(3): mov %r12d,%edi
194c(5): call 0xfffffa04(%rip)
1951(5): jmp 0xfffffe53(%rip)
1956(3): mov %r12d,%edi
1959(5): call 0xfffffc07(%rip)
195e(5): jmp 0xfffffe46(%rip)
1963(2): xor %edi,%edi
1965(5): call 0x16b(%rip)
196a(5): mov $0x1,%edi
196f(5): call 0x161(%rip)
1974(7): lea 0x3565(%rip),%rsi
197b(5): mov $0x5,%edx
1980(2): xor %edi,%edi
1982(5): call 0xfffffa4e(%rip)
1987(2): xor %esi,%esi
1989(3): mov %rax,%rdx
198c(5): mov $0x1,%edi
1991(2): xor %eax,%eax
1993(5): call 0xfffffbbd(%rip)
1998(7): lea 0x3511(%rip),%rsi
199f(5): mov $0x5,%edx
19a4(2): xor %edi,%edi
19a6(5): call 0xfffffa2a(%rip)
19ab(2): xor %esi,%esi
19ad(3): mov %rax,%rdx
19b0(5): mov $0x1,%edi
19b5(2): xor %eax,%eax
19b7(5): call 0xfffffb99(%rip)
19bc(4): nop 0x0(%rax)
19c0(2): xor %ebp,%ebp
19c2(3): mov %rdx,%r9
19c5(1): pop %rsi
19c6(3): mov %rsp,%rdx
19c9(4): and $0xfffffff0,%rsp
19cd(1): push %rax
19ce(1): push %rsp
19cf(7): lea 0x30fa(%rip),%r8
19d6(7): lea 0x3083(%rip),%rcx
19dd(7): lea 0xfffffc2c(%rip),%rdi
19e4(6): call 0x2055ee(%rip)
19ea(1): hlt 

"_start" :
19c0(2): xor %ebp,%ebp
19c2(3): mov %rdx,%r9
19c5(1): pop %rsi
19c6(3): mov %rsp,%rdx
19c9(4): and $0xfffffff0,%rsp
19cd(1): push %rax
19ce(1): push %rsp
19cf(7): lea 0x30fa(%rip),%r8
19d6(7): lea 0x3083(%rip),%rcx
19dd(7): lea 0xfffffc2c(%rip),%rdi
19e4(6): call 0x2055ee(%rip)
19ea(1): hlt 

"deregister_tm_clones" :
19f0(7): lea 0x205689(%rip),%rdi
19f7(1): push %rbp
19f8(7): lea 0x205681(%rip),%rax
19ff(3): cmp %rdi,%rax
1a02(3): mov %rsp,%rbp
1a05(2): jz 0x1b(%rip)
1a07(7): mov 0x2055c2(%rip),%rax
1a0e(3): test %rax,%rax
1a11(2): jz 0xf(%rip)
1a13(1): pop %rbp
1a14(2): jmp %rax
1a16(a): nop 0x0(%rax,%rax,1)
1a20(1): pop %rbp
1a21(1): ret near (%rsp)

"register_tm_clones" :
1a30(7): lea 0x205649(%rip),%rdi
1a37(7): lea 0x205642(%rip),%rsi
1a3e(1): push %rbp
1a3f(3): sub %rdi,%rsi
1a42(3): mov %rsp,%rbp
1a45(4): sar $0x3,%rsi
1a49(3): mov %rsi,%rax
1a4c(4): shr $0x3f,%rax
1a50(3): add %rax,%rsi
1a53(3): sar $0x1,%rsi
1a56(2): jz 0x1a(%rip)
1a58(7): mov 0x205589(%rip),%rax
1a5f(3): test %rax,%rax
1a62(2): jz 0xe(%rip)
1a64(1): pop %rbp
1a65(2): jmp %rax
1a67(9): nop 0x0(%rax,%rax,1)
1a70(1): pop %rbp
1a71(1): ret near (%rsp)

"__do_global_dtors_aux" :
1a80(7): cmp $0x0,0x205621(%rip)
1a87(2): jnz 0x31(%rip)
1a89(8): cmp $0x0,0x20555f(%rip)
1a91(1): push %rbp
1a92(3): mov %rsp,%rbp
1a95(2): jz 0xe(%rip)
1a97(7): mov 0x20556a(%rip),%rdi
1a9e(5): call 0xfffffb62(%rip)
1aa3(5): call 0xffffff4d(%rip)
1aa8(7): mov $0x1,0x2055f9(%rip)
1aaf(1): pop %rbp
1ab0(1): ret near (%rsp)
1ab1(7): nop 0x0(%rax)
1ab8(2): REP ret near (%rsp)

"frame_dummy" :
1ac0(1): push %rbp
1ac1(3): mov %rsp,%rbp
1ac4(1): pop %rbp
1ac5(5): jmp 0xffffff6b(%rip)

"usage" :
1ad0(2): push %r13
1ad2(2): push %r12
1ad4(5): mov $0x5,%edx
1ad9(1): push %rbp
1ada(1): push %rbx
1adb(2): mov %edi,%ebp
1add(7): sub $0x88,%rsp
1ae4(7): mov 0x2055d5(%rip),%rbx
1aeb(9): mov $0x28,%rax
1af4(5): mov %rax,0x78(%rsp)
1af9(2): xor %eax,%eax
1afb(2): test %edi,%edi
1afd(2): jz 0x30(%rip)
1aff(7): lea 0x3152(%rip),%rsi
1b06(2): xor %edi,%edi
1b08(5): call 0xfffff8c8(%rip)
1b0d(7): mov 0x20558c(%rip),%rdi
1b14(3): mov %rax,%rdx
1b17(3): mov %rbx,%rcx
1b1a(5): mov $0x1,%esi
1b1f(2): xor %eax,%eax
1b21(5): call 0xfffffa9f(%rip)
1b26(2): mov %ebp,%edi
1b28(5): call 0xfffffa78(%rip)
1b2d(7): lea 0x2fd5(%rip),%rsi
1b34(2): xor %edi,%edi
1b36(5): call 0xfffff89a(%rip)
1b3b(3): mov %rbx,%rdx
1b3e(3): mov %rax,%rsi
1b41(5): mov $0x1,%edi
1b46(2): xor %eax,%eax
1b48(5): call 0xfffff9f8(%rip)
1b4d(7): mov 0x205534(%rip),%rbx
1b54(7): lea 0x3125(%rip),%rsi
1b5b(5): mov $0x5,%edx
1b60(2): xor %edi,%edi
1b62(5): call 0xfffff86e(%rip)
1b67(3): mov %rbx,%rsi
1b6a(3): mov %rax,%rdi
1b6d(5): call 0xfffff923(%rip)
1b72(7): mov 0x20550f(%rip),%rbx
1b79(7): lea 0x3190(%rip),%rsi
1b80(5): mov $0x5,%edx
1b85(2): xor %edi,%edi
1b87(5): call 0xfffff849(%rip)
1b8c(3): mov %rbx,%rsi
1b8f(3): mov %rax,%rdi
1b92(5): call 0xfffff8fe(%rip)
1b97(7): mov 0x2054ea(%rip),%rbx
1b9e(7): lea 0x31b3(%rip),%rsi
1ba5(5): mov $0x5,%edx
1baa(2): xor %edi,%edi
1bac(5): call 0xfffff824(%rip)
1bb1(3): mov %rbx,%rsi
1bb4(3): mov %rax,%rdi
1bb7(5): call 0xfffff8d9(%rip)
1bbc(7): mov 0x2054c5(%rip),%rbx
1bc3(7): lea 0x31d6(%rip),%rsi
1bca(5): mov $0x5,%edx
1bcf(2): xor %edi,%edi
1bd1(5): call 0xfffff7ff(%rip)
1bd6(3): mov %rbx,%rsi
1bd9(3): mov %rax,%rdi
1bdc(5): call 0xfffff8b4(%rip)
1be1(7): mov 0x2054a0(%rip),%rbx
1be8(7): lea 0x31e1(%rip),%rsi
1bef(5): mov $0x5,%edx
1bf4(2): xor %edi,%edi
1bf6(5): call 0xfffff7da(%rip)
1bfb(3): mov %rbx,%rsi
1bfe(3): mov %rax,%rdi
1c01(7): lea 0x2efc(%rip),%rbx
1c08(5): call 0xfffff888(%rip)
1c0d(7): lea 0x2f13(%rip),%rax
1c14(7): lea 0x2f4d(%rip),%rcx
1c1b(9): mov $0x0,0x60(%rsp)
1c24(9): mov $0x0,0x68(%rsp)
1c2d(3): mov %rsp,%rdx
1c30(4): mov %rax,(%rsp)
1c34(7): lea 0x2eee(%rip),%rax
1c3b(5): mov %rcx,0x30(%rsp)
1c40(7): lea 0x2f2b(%rip),%rcx
1c47(5): mov %rax,0x8(%rsp)
1c4c(7): lea 0x2f4e(%rip),%rax
1c53(5): mov %rcx,0x40(%rsp)
1c58(7): lea 0x2f1d(%rip),%rcx
1c5f(5): mov %rax,0x10(%rsp)
1c64(7): lea 0x2ece(%rip),%rax
1c6b(5): mov %rcx,0x50(%rsp)
1c70(5): mov %rax,0x18(%rsp)
1c75(7): lea 0x2ed3(%rip),%rax
1c7c(5): mov %rax,0x20(%rsp)
1c81(7): lea 0x2ed1(%rip),%rax
1c88(5): mov %rax,0x28(%rsp)
1c8d(5): mov %rax,0x38(%rsp)
1c92(5): mov %rax,0x48(%rsp)
1c97(5): mov %rax,0x58(%rsp)
1c9c(4): nop 0x0(%rax)
1ca0(4): add $0x10,%rdx
1ca4(3): mov (%rdx),%rdi
1ca7(3): test %rdi,%rdi
1caa(2): jz 0x15(%rip)
1cac(5): mov $0x5,%ecx
1cb1(3): mov %rbx,%rsi
1cb4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1cb6(3): setnbe %al
1cb9(2): sbb $0x0,%al
1cbb(2): test %al,%al
1cbd(2): jnz 0xffffffe3(%rip)
1cbf(4): mov 0x8(%rdx),%r12
1cc3(2): xor %edi,%edi
1cc5(5): mov $0x5,%edx
1cca(7): lea 0x2eb5(%rip),%rsi
1cd1(3): test %r12,%r12
1cd4(6): jz 0xc7(%rip)
1cda(5): call 0xfffff6f6(%rip)
1cdf(7): lea 0x3122(%rip),%rcx
1ce6(7): lea 0x2eb0(%rip),%rdx
1ced(3): mov %rax,%rsi
1cf0(5): mov $0x1,%edi
1cf5(2): xor %eax,%eax
1cf7(5): call 0xfffff849(%rip)
1cfc(2): xor %esi,%esi
1cfe(5): mov $0x5,%edi
1d03(5): call 0xfffff82d(%rip)
1d08(3): test %rax,%rax
1d0b(2): jz 0x1e(%rip)
1d0d(7): lea 0x2e97(%rip),%rsi
1d14(5): mov $0x3,%edx
1d19(3): mov %rax,%rdi
1d1c(5): call 0xfffff644(%rip)
1d21(2): test %eax,%eax
1d23(6): jnz 0x10d(%rip)
1d29(7): lea 0x2e7f(%rip),%rsi
1d30(2): xor %edi,%edi
1d32(5): mov $0x5,%edx
1d37(5): call 0xfffff699(%rip)
1d3c(7): lea 0x2dc1(%rip),%rcx
1d43(7): lea 0x30be(%rip),%rdx
1d4a(3): mov %rax,%rsi
1d4d(5): mov $0x1,%edi
1d52(2): xor %eax,%eax
1d54(5): call 0xfffff7ec(%rip)
1d59(3): cmp %rbx,%r12
1d5c(7): lea 0x2de0(%rip),%rcx
1d63(7): lea 0x2dbc(%rip),%rbx
1d6a(4): cmove %rcx,%rbx
1d6e(7): lea 0x3103(%rip),%rsi
1d75(2): xor %edi,%edi
1d77(5): mov $0x5,%edx
1d7c(5): call 0xfffff654(%rip)
1d81(3): mov %rbx,%rcx
1d84(3): mov %rax,%rsi
1d87(3): mov %r12,%rdx
1d8a(5): mov $0x1,%edi
1d8f(2): xor %eax,%eax
1d91(5): call 0xfffff7af(%rip)
1d96(5): jmp 0xfffffd90(%rip)
1d9b(5): call 0xfffff635(%rip)
1da0(7): lea 0x3061(%rip),%rcx
1da7(7): lea 0x2def(%rip),%rdx
1dae(3): mov %rax,%rsi
1db1(5): mov $0x1,%edi
1db6(2): xor %eax,%eax
1db8(5): call 0xfffff788(%rip)
1dbd(2): xor %esi,%esi
1dbf(5): mov $0x5,%edi
1dc4(5): call 0xfffff76c(%rip)
1dc9(3): test %rax,%rax
1dcc(2): jz 0x1a(%rip)
1dce(7): lea 0x2dd6(%rip),%rsi
1dd5(5): mov $0x3,%edx
1dda(3): mov %rax,%rdi
1ddd(5): call 0xfffff583(%rip)
1de2(2): test %eax,%eax
1de4(2): jnz 0x45(%rip)
1de6(7): lea 0x2dc2(%rip),%rsi
1ded(5): mov $0x5,%edx
1df2(2): xor %edi,%edi
1df4(7): lea 0x2d09(%rip),%r12
1dfb(7): lea 0x2d41(%rip),%rbx
1e02(5): call 0xfffff5ce(%rip)
1e07(7): lea 0x2cf6(%rip),%rcx
1e0e(7): lea 0x2ff3(%rip),%rdx
1e15(3): mov %rax,%rsi
1e18(5): mov $0x1,%edi
1e1d(2): xor %eax,%eax
1e1f(5): call 0xfffff721(%rip)
1e24(5): jmp 0xffffff4a(%rip)
1e29(7): lea 0x2cd4(%rip),%r12
1e30(7): mov 0x205251(%rip),%r13
1e37(7): lea 0x2ff2(%rip),%rsi
1e3e(2): xor %edi,%edi
1e40(5): mov $0x5,%edx
1e45(5): call 0xfffff58b(%rip)
1e4a(3): mov %r13,%rsi
1e4d(3): mov %rax,%rdi
1e50(5): call 0xfffff640(%rip)
1e55(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1e60(7): mov %rdi,0x205251(%rip)
1e67(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1e70(7): mov %dil,0x205239(%rip)
1e77(1): ret near (%rsp)

"close_stdout" :
1e80(1): push %rbp
1e81(1): push %rbx
1e82(4): sub $0x8,%rsp
1e86(7): mov 0x2051fb(%rip),%rdi
1e8d(5): call 0x2993(%rip)
1e92(2): test %eax,%eax
1e94(2): jz 0x18(%rip)
1e96(5): call 0xfffff4aa(%rip)
1e9b(7): cmp $0x0,0x20520e(%rip)
1ea2(3): mov %rax,%rbx
1ea5(2): jz 0x1e(%rip)
1ea7(3): cmp $0x20,(%rax)
1eaa(2): jnz 0x19(%rip)
1eac(7): mov 0x2051ed(%rip),%rdi
1eb3(5): call 0x296d(%rip)
1eb8(2): test %eax,%eax
1eba(2): jnz 0x48(%rip)
1ebc(4): add $0x8,%rsp
1ec0(1): pop %rbx
1ec1(1): pop %rbp
1ec2(1): ret near (%rsp)
1ec3(7): lea 0x3067(%rip),%rsi
1eca(2): xor %edi,%edi
1ecc(5): mov $0x5,%edx
1ed1(5): call 0xfffff4ff(%rip)
1ed6(7): mov 0x2051db(%rip),%rdi
1edd(3): mov %rax,%rbp
1ee0(3): test %rdi,%rdi
1ee3(2): jz 0x2a(%rip)
1ee5(5): call 0x1b5b(%rip)
1eea(2): mov (%rbx),%esi
1eec(7): lea 0x304a(%rip),%rdx
1ef3(3): mov %rax,%rcx
1ef6(3): mov %rbp,%r8
1ef9(2): xor %edi,%edi
1efb(2): xor %eax,%eax
1efd(5): call 0xfffff653(%rip)
1f02(6): mov 0x205110(%rip),%edi
1f08(5): call 0xfffff468(%rip)
1f0d(2): mov (%rbx),%esi
1f0f(7): lea 0x302b(%rip),%rdx
1f16(3): mov %rax,%rcx
1f19(2): xor %edi,%edi
1f1b(2): xor %eax,%eax
1f1d(5): call 0xfffff633(%rip)
1f22(2): jmp 0xffffffe0(%rip)

"set_program_name" :
1f30(3): test %rdi,%rdi
1f33(1): push %rbx
1f34(2): jz 0x79(%rip)
1f36(5): mov $0x2f,%esi
1f3b(3): mov %rdi,%rbx
1f3e(5): call 0xfffff502(%rip)
1f43(3): test %rax,%rax
1f46(2): jz 0x57(%rip)
1f48(4): lea 0x1(%rax),%r8
1f4c(3): mov %r8,%rdx
1f4f(3): sub %rbx,%rdx
1f52(4): cmp $0x6,%rdx
1f56(2): jle 0x47(%rip)
1f58(4): lea 0xfffffffa(%rax),%rsi
1f5c(7): lea 0x301d(%rip),%rdi
1f63(5): mov $0x7,%ecx
1f68(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1f6a(3): setnbe %dl
1f6d(3): sbb $0x0,%dl
1f70(2): test %dl,%dl
1f72(2): jnz 0x2b(%rip)
1f74(7): lea 0x300d(%rip),%rdi
1f7b(5): mov $0x3,%ecx
1f80(3): mov %r8,%rsi
1f83(3): mov %r8,%rbx
1f86(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1f88(3): setnbe %dl
1f8b(3): sbb $0x0,%dl
1f8e(2): test %dl,%dl
1f90(2): jnz 0xd(%rip)
1f92(4): lea 0x4(%rax),%rbx
1f96(7): mov %rbx,0x2050e3(%rip)
1f9d(7): mov %rbx,0x20511c(%rip)
1fa4(7): mov %rbx,0x2050ed(%rip)
1fab(1): pop %rbx
1fac(1): ret near (%rsp)
1fad(7): mov 0x2050ec(%rip),%rcx
1fb4(7): lea 0x2f8d(%rip),%rdi
1fbb(5): mov $0x37,%edx
1fc0(5): mov $0x1,%esi
1fc5(5): call 0xfffff5eb(%rip)
1fca(5): call 0xfffff366(%rip)

"gettext_quote.part.1" :
1fd0(1): push %rbp
1fd1(1): push %rbx
1fd2(3): mov %rdi,%rbp
1fd5(2): mov %esi,%ebx
1fd7(4): sub $0x8,%rsp
1fdb(5): call 0x2925(%rip)
1fe0(3): movzx (%rax),%edx
1fe3(3): and $0xdf,%edx
1fe6(3): cmp $0x55,%dl
1fe9(2): jz 0x77(%rip)
1feb(3): cmp $0x47,%dl
1fee(2): jz 0x22(%rip)
1ff0(7): lea 0x2fa4(%rip),%rax
1ff7(7): lea 0x2f9f(%rip),%rdx
1ffe(3): cmp $0x9,%ebx
2001(4): cmovne %rdx,%rax
2005(4): add $0x8,%rsp
2009(1): pop %rbx
200a(1): pop %rbp
200b(1): ret near (%rsp)
200c(4): nop 0x0(%rax)
2010(4): movzx 0x1(%rax),%edx
2014(3): and $0xdf,%edx
2017(3): cmp $0x42,%dl
201a(2): jnz 0xffffffd6(%rip)
201c(4): cmp $0x31,0x2(%rax)
2020(2): jnz 0xffffffd0(%rip)
2022(4): cmp $0x38,0x3(%rax)
2026(2): jnz 0xffffffca(%rip)
2028(4): cmp $0x30,0x4(%rax)
202c(2): jnz 0xffffffc4(%rip)
202e(4): cmp $0x33,0x5(%rax)
2032(2): jnz 0xffffffbe(%rip)
2034(4): cmp $0x30,0x6(%rax)
2038(2): jnz 0xffffffb8(%rip)
203a(4): cmp $0x0,0x7(%rax)
203e(2): jnz 0xffffffb2(%rip)
2040(4): cmp $0x60,0x0(%rbp)
2044(7): lea 0x2f49(%rip),%rax
204b(7): lea 0x2f46(%rip),%rdx
2052(4): cmovne %rdx,%rax
2056(4): add $0x8,%rsp
205a(1): pop %rbx
205b(1): pop %rbp
205c(1): ret near (%rsp)
205d(3): nop (%rax)
2060(4): movzx 0x1(%rax),%edx
2064(3): and $0xdf,%edx
2067(3): cmp $0x54,%dl
206a(2): jnz 0xffffff86(%rip)
206c(4): movzx 0x2(%rax),%edx
2070(3): and $0xdf,%edx
2073(3): cmp $0x46,%dl
2076(6): jnz 0xffffff7a(%rip)
207c(4): cmp $0x2d,0x3(%rax)
2080(6): jnz 0xffffff70(%rip)
2086(4): cmp $0x38,0x4(%rax)
208a(6): jnz 0xffffff66(%rip)
2090(4): cmp $0x0,0x5(%rax)
2094(6): jnz 0xffffff5c(%rip)
209a(4): cmp $0x60,0x0(%rbp)
209e(7): lea 0x2ee7(%rip),%rax
20a5(7): lea 0x2ee4(%rip),%rdx
20ac(4): cmovne %rdx,%rax
20b0(4): add $0x8,%rsp
20b4(1): pop %rbx
20b5(1): pop %rbp
20b6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
20c0(2): push %r15
20c2(2): push %r14
20c4(3): mov %r8d,%r15d
20c7(2): push %r13
20c9(2): push %r12
20cb(3): mov %rdi,%r14
20ce(1): push %rbp
20cf(1): push %rbx
20d0(3): mov %r9d,%ebx
20d3(3): mov %rsi,%r13
20d6(3): mov %rcx,%rbp
20d9(3): and $0x2,%ebx
20dc(7): sub $0xb8,%rsp
20e3(8): mov 0xf0(%rsp),%rax
20eb(5): mov %rdx,0x10(%rsp)
20f0(5): mov %r8d,0x8(%rsp)
20f5(5): mov %r9d,0x78(%rsp)
20fa(5): mov %rax,0x20(%rsp)
20ff(8): mov 0xf8(%rsp),%rax
2107(5): mov %rax,0x68(%rsp)
210c(8): mov 0x100(%rsp),%rax
2114(5): mov %rax,0x60(%rsp)
2119(9): mov $0x28,%rax
2122(8): mov %rax,0xa8(%rsp)
212a(2): xor %eax,%eax
212c(5): call 0xfffff2b4(%rip)
2131(4): cmp $0xa,%r15d
2135(5): mov %rax,0x58(%rsp)
213a(6): jnbe 0x11b5(%rip)
2140(7): lea 0x2eb9(%rip),%rcx
2147(3): mov %r15d,%edx
214a(4): movsxd 0x0(%rcx,%rdx,4),%rax
214e(3): add %rcx,%rax
2151(2): jmp %rax
2153(5): mov $0x1,0xe(%rsp)
2158(5): mov $0x0,0x7c(%rsp)
215d(3): xor %r12d,%r12d
2160(9): mov $0x0,0x50(%rsp)
2169(5): mov $0x1,0xf(%rsp)
216e(5): mov $0x0,0xd(%rsp)
2173(7): lea 0x2e23(%rip),%rax
217a(9): mov $0x1,0x18(%rsp)
2183(3): xor %r15d,%r15d
2186(8): mov $0x2,0x8(%rsp)
218e(5): mov %rax,0x48(%rsp)
2193(3): xor %r11d,%r11d
2196(3): mov %rbp,%rax
2199(3): mov %r12d,%r8d
219c(3): mov %r11,%rbp
219f(3): mov %rax,%r11
21a2(6): nop 0x0(%rax,%rax,1)
21a8(3): cmp %rbp,%r11
21ab(4): setnz %r12b
21af(4): cmp $0xffffffff,%r11
21b3(2): jnz 0xf(%rip)
21b5(5): mov 0x10(%rsp),%rax
21ba(4): cmp $0x0,0x0(%rax,%rbp,1)
21be(4): setnz %r12b
21c2(3): test %r12b,%r12b
21c5(6): jz 0x65b(%rip)
21cb(5): cmp $0x2,0x8(%rsp)
21d0(5): mov 0x10(%rsp),%rdi
21d5(4): lea 0x0(%rdi,%rbp,1),%r9
21d9(3): setnz %al
21dc(4): and 0xd(%rsp),%al
21e0(3): mov %eax,%r10d
21e3(6): jz 0xad(%rip)
21e9(5): mov 0x18(%rsp),%rax
21ee(3): test %rax,%rax
21f1(6): jz 0x42f(%rip)
21f7(4): cmp $0xffffffff,%r11
21fb(5): lea 0x0(%rbp,%rax,1),%rbx
2200(2): jnz 0x30(%rip)
2202(4): cmp $0x1,%rax
2206(2): jbe 0x2a(%rip)
2208(5): mov %r8b,0x38(%rsp)
220d(5): mov %r10b,0x30(%rsp)
2212(5): mov %r9,0x28(%rsp)
2217(5): call 0xfffff1d9(%rip)
221c(6): movzx 0x38(%rsp),%r8d
2222(6): movzx 0x30(%rsp),%r10d
2228(3): mov %rax,%r11
222b(5): mov 0x28(%rsp),%r9
2230(3): cmp %r11,%rbx
2233(5): mov %r10b,0x28(%rsp)
2238(6): jnbe 0x5b8(%rip)
223e(5): mov 0x18(%rsp),%rdx
2243(5): mov 0x48(%rsp),%rsi
2248(3): mov %r9,%rdi
224b(5): mov %r11,0x40(%rsp)
2250(5): mov %r8b,0x38(%rsp)
2255(5): mov %r9,0x30(%rsp)
225a(5): call 0xfffff226(%rip)
225f(2): test %eax,%eax
2261(5): mov 0x30(%rsp),%r9
2266(6): movzx 0x38(%rsp),%r8d
226c(5): mov 0x40(%rsp),%r11
2271(6): jnz 0x57f(%rip)
2277(5): cmp $0x0,0xf(%rsp)
227c(6): movzx 0x28(%rsp),%r10d
2282(6): jnz 0xf83(%rip)
2288(8): nop 0x0(%rax,%rax,1)
2290(4): movzx (%r9),%ebx
2294(3): cmp $0x7e,%bl
2297(6): jnbe 0x321(%rip)
229d(7): lea 0x2d88(%rip),%rcx
22a4(3): movzx %bl,%edx
22a7(4): movsxd 0x0(%rcx,%rdx,4),%rax
22ab(3): add %rcx,%rax
22ae(2): jmp %rax
22b0(3): xor %r10d,%r10d
22b3(4): cmp $0x1,%r11
22b7(3): setnz %al
22ba(4): cmp $0xffffffff,%r11
22be(2): jnz 0xe(%rip)
22c0(5): mov 0x10(%rsp),%rax
22c5(4): cmp $0x0,0x1(%rax)
22c9(3): setnz %al
22cc(5): cmp $0x2,0x8(%rsp)
22d1(3): setz %dl
22d4(2): test %al,%al
22d6(6): jz 0x252(%rip)
22dc(3): xor %r12d,%r12d
22df(2): xor %eax,%eax
22e1(7): nop 0x0(%rax)
22e8(5): cmp $0x1,0xd(%rsp)
22ed(6): jnz 0x115(%rip)
22f3(2): test %dl,%dl
22f5(6): jnz 0x10d(%rip)
22fb(5): mov 0x20(%rsp),%rsi
2300(3): test %rsi,%rsi
2303(2): jz 0x16(%rip)
2305(2): mov %ebx,%edx
2307(3): shr $0x5,%dl
230a(3): movzx %dl,%edx
230d(3): mov 0x0(%rsi,%rdx,4),%edx
2310(3): bt %ebx,%edx
2313(6): jb 0x150(%rip)
2319(3): test %r10b,%r10b
231c(6): jnz 0x147(%rip)
2322(3): xor $0x1,%eax
2325(4): add $0x1,%rbp
2329(3): and %r8d,%eax
232c(2): test %al,%al
232e(2): jz 0x22(%rip)
2330(3): cmp %r15,%r13
2333(2): jbe 0x7(%rip)
2335(5): mov $0x27,0x0(%r14,%r15,1)
233a(4): lea 0x1(%r15),%rax
233e(3): cmp %rax,%r13
2341(2): jbe 0x8(%rip)
2343(6): mov $0x27,0x1(%r14,%r15,1)
2349(4): add $0x2,%r15
234d(3): xor %r8d,%r8d
2350(3): cmp %r13,%r15
2353(2): jnb 0x6(%rip)
2355(4): mov %bl,0x0(%r14,%r15,1)
2359(5): movzx 0xe(%rsp),%edi
235e(4): add $0x1,%r15
2362(5): mov $0x0,%eax
2367(3): test %r12b,%r12b
236a(3): cmove %eax,%edi
236d(5): mov %dil,0xe(%rsp)
2372(5): jmp 0xfffffe36(%rip)
2377(9): nop 0x0(%rax,%rax,1)
2380(3): xor %r10d,%r10d
2383(4): mov 0x8(%rsp),%eax
2387(3): cmp $0x2,%eax
238a(6): jz 0x5be(%rip)
2390(3): cmp $0x5,%eax
2393(6): jz 0x575(%rip)
2399(3): cmp $0x2,%eax
239c(5): mov $0x3f,%ebx
23a1(3): setz %dl
23a4(3): xor %r12d,%r12d
23a7(2): xor %eax,%eax
23a9(5): jmp 0xffffff3f(%rip)
23ae(2): nop 
23b0(3): xor %r10d,%r10d
23b3(5): cmp $0x2,0x8(%rsp)
23b8(6): jz 0x508(%rip)
23be(5): mov %r12b,0x7c(%rsp)
23c3(2): xor %edx,%edx
23c5(2): xor %eax,%eax
23c7(5): mov $0x27,%ebx
23cc(5): jmp 0xffffff1c(%rip)
23d1(7): nop 0x0(%rax)
23d8(5): mov $0x9,%edx
23dd(5): mov $0x74,%ebx
23e2(5): cmp $0x2,0x8(%rsp)
23e7(3): setz %al
23ea(4): and 0xf(%rsp),%al
23ee(6): jnz 0x150(%rip)
23f4(5): cmp $0x0,0xd(%rsp)
23f9(2): jnz 0x67(%rip)
23fb(2): mov %edx,%ebx
23fd(3): xor %r12d,%r12d
2400(2): xor %eax,%eax
2402(5): cmp $0x0,0xf(%rsp)
2407(6): jnz 0xfffffef4(%rip)
240d(5): jmp 0xffffff0c(%rip)
2412(6): nop 0x0(%rax,%rax,1)
2418(5): mov $0x8,%edx
241d(5): mov $0x62,%ebx
2422(2): jmp 0xffffffd2(%rip)
2424(4): nop 0x0(%rax)
2428(5): cmp $0x2,0x8(%rsp)
242d(6): jz 0x3d3(%rip)
2433(5): cmp $0x0,0xd(%rsp)
2438(6): jz 0x218(%rip)
243e(5): cmp $0x0,0xf(%rsp)
2443(6): jz 0x20d(%rip)
2449(6): cmp $0x0,0x18(%rsp)
244f(6): jnz 0x3bc(%rip)
2455(5): mov $0x5c,%ebx
245a(6): nop 0x0(%rax,%rax,1)
2460(3): xor %r12d,%r12d
2463(5): cmp $0x2,0x8(%rsp)
2468(3): setz %dl
246b(5): cmp $0x0,0xf(%rsp)
2470(2): mov %edx,%eax
2472(6): jnz 0x856(%rip)
2478(3): mov %r8d,%eax
247b(3): xor $0x1,%eax
247e(2): and %dl,%al
2480(2): jz 0x31(%rip)
2482(3): cmp %r15,%r13
2485(2): jbe 0x7(%rip)
2487(5): mov $0x27,0x0(%r14,%r15,1)
248c(4): lea 0x1(%r15),%rdx
2490(3): cmp %rdx,%r13
2493(2): jbe 0x8(%rip)
2495(6): mov $0x24,0x1(%r14,%r15,1)
249b(4): lea 0x2(%r15),%rdx
249f(3): cmp %rdx,%r13
24a2(2): jbe 0x8(%rip)
24a4(6): mov $0x27,0x2(%r14,%r15,1)
24aa(4): add $0x3,%r15
24ae(3): mov %eax,%r8d
24b1(3): cmp %r15,%r13
24b4(2): jbe 0x7(%rip)
24b6(5): mov $0x5c,0x0(%r14,%r15,1)
24bb(4): add $0x1,%r15
24bf(4): add $0x1,%rbp
24c3(5): jmp 0xfffffe8d(%rip)
24c8(8): nop 0x0(%rax,%rax,1)
24d0(5): cmp $0x0,0xd(%rsp)
24d5(6): jnz 0x1ce(%rip)
24db(2): xor %edx,%edx
24dd(5): test $0x1,0x78(%rsp)
24e2(6): jz 0xffffff19(%rip)
24e8(4): add $0x1,%rbp
24ec(5): jmp 0xfffffcbc(%rip)
24f1(7): nop 0x0(%rax)
24f8(5): cmp $0x2,0x8(%rsp)
24fd(3): setz %dl
2500(2): xor %eax,%eax
2502(5): jmp 0xfffffde6(%rip)
2507(9): nop 0x0(%rax,%rax,1)
2510(5): mov $0x7,%edx
2515(5): mov $0x61,%ebx
251a(5): jmp 0xfffffeda(%rip)
251f(1): nop 
2520(5): cmp $0x2,0x8(%rsp)
2525(3): setz %dl
2528(3): test %rbp,%rbp
252b(6): jnz 0xfffffdb1(%rip)
2531(5): movzx 0xf(%rsp),%eax
2536(2): and %dl,%al
2538(6): jz 0xfffffdb0(%rip)
253e(3): mov %r11,%rbp
2541(8): mov $0x2,0x8(%rsp)
2549(5): jmp 0x700(%rip)
254e(2): nop 
2550(5): cmp $0x2,0x8(%rsp)
2555(3): setz %dl
2558(3): xor %r12d,%r12d
255b(2): jmp 0xffffffd6(%rip)
255d(3): nop (%rax)
2560(5): cmp $0x2,0x8(%rsp)
2565(5): mov $0x20,%ebx
256a(3): setz %dl
256d(2): jmp 0xffffffc4(%rip)
256f(1): nop 
2570(5): mov $0xd,%edx
2575(5): mov $0x72,%ebx
257a(5): jmp 0xfffffe68(%rip)
257f(1): nop 
2580(5): mov $0xc,%edx
2585(5): mov $0x66,%ebx
258a(5): jmp 0xfffffe6a(%rip)
258f(1): nop 
2590(5): mov $0xb,%edx
2595(5): mov $0x76,%ebx
259a(5): jmp 0xfffffe5a(%rip)
259f(1): nop 
25a0(5): mov $0xa,%edx
25a5(5): mov $0x6e,%ebx
25aa(5): jmp 0xfffffe38(%rip)
25af(1): nop 
25b0(3): xor %r10d,%r10d
25b3(5): nop 0x0(%rax,%rax,1)
25b8(6): cmp $0x1,0x58(%rsp)
25be(6): jnz 0x3aa(%rip)
25c4(5): mov %r11,0x38(%rsp)
25c9(5): mov %r8b,0x30(%rsp)
25ce(5): mov %r10b,0x28(%rsp)
25d3(5): call 0xfffff01d(%rip)
25d8(3): mov (%rax),%rcx
25db(3): movzx %bl,%edx
25de(6): movzx 0x28(%rsp),%r10d
25e4(6): movzx 0x30(%rsp),%r8d
25ea(5): mov 0x38(%rsp),%r11
25ef(5): mov $0x1,%edi
25f4(4): movzx 0x0(%rcx,%rdx,2),%eax
25f8(4): and $0x4000,%ax
25fc(4): setnz %r12b
2600(3): setz %al
2603(4): and 0xd(%rsp),%al
2607(2): test %al,%al
2609(6): jnz 0x998(%rip)
260f(5): cmp $0x2,0x8(%rsp)
2614(3): setz %dl
2617(5): jmp 0xfffffcd1(%rip)
261c(4): nop 0x0(%rax)
2620(4): movzx (%r9),%ebx
2624(3): cmp $0x7e,%bl
2627(2): jnbe 0xffffff89(%rip)
2629(7): lea 0x2bf8(%rip),%rcx
2630(3): movzx %bl,%edx
2633(4): movsxd 0x0(%rcx,%rdx,4),%rax
2637(3): add %rcx,%rax
263a(2): jmp %rax
263c(4): nop 0x0(%rax)
2640(3): xor %r10d,%r10d
2643(5): cmp $0x0,0xd(%rsp)
2648(6): jnz 0xfffffdf6(%rip)
264e(2): nop 
2650(5): mov $0x5c,%edx
2655(5): mov $0x5c,%ebx
265a(5): jmp 0xfffffd9a(%rip)
265f(1): nop 
2660(5): mov $0xc,%edx
2665(3): xor %r10d,%r10d
2668(5): mov $0x66,%ebx
266d(5): jmp 0xfffffd87(%rip)
2672(6): nop 0x0(%rax,%rax,1)
2678(5): mov $0xa,%edx
267d(3): xor %r10d,%r10d
2680(5): mov $0x6e,%ebx
2685(5): jmp 0xfffffd5d(%rip)
268a(6): nop 0x0(%rax,%rax,1)
2690(5): mov $0x61,%ebx
2695(5): jmp 0xfffffdcb(%rip)
269a(6): nop 0x0(%rax,%rax,1)
26a0(3): xor %r10d,%r10d
26a3(5): cmp $0x2,0x8(%rsp)
26a8(3): setz %dl
26ab(5): cmp $0x0,0xf(%rsp)
26b0(6): jnz 0xb9a(%rip)
26b6(3): mov %r8d,%eax
26b9(3): mov %r15,%rcx
26bc(3): xor $0x1,%eax
26bf(2): and %dl,%al
26c1(2): jz 0x2f(%rip)
26c3(3): cmp %r15,%r13
26c6(2): jbe 0x7(%rip)
26c8(5): mov $0x27,0x0(%r14,%r15,1)
26cd(4): lea 0x1(%r15),%rcx
26d1(3): cmp %rcx,%r13
26d4(2): jbe 0x8(%rip)
26d6(6): mov $0x24,0x1(%r14,%r15,1)
26dc(4): lea 0x2(%r15),%rcx
26e0(3): cmp %rcx,%r13
26e3(6): jnbe 0x636(%rip)
26e9(4): lea 0x3(%r15),%rcx
26ed(3): mov %eax,%r8d
26f0(3): cmp %rcx,%r13
26f3(2): jbe 0x7(%rip)
26f5(5): mov $0x5c,0x0(%r14,%rcx,1)
26fa(5): cmp $0x2,0x8(%rsp)
26ff(4): lea 0x1(%rcx),%r15
2703(6): jz 0x606(%rip)
2709(4): lea 0x1(%rbp),%rax
270d(3): cmp %r11,%rax
2710(2): jnb 0x1b(%rip)
2712(5): mov 0x10(%rsp),%rax
2717(5): movzx 0x1(%rax,%rbp,1),%eax
271c(4): mov %al,0x28(%rsp)
2720(3): sub $0x30,%eax
2723(2): cmp $0x9,%al
2725(6): jbe 0x834(%rip)
272b(3): mov %r12d,%eax
272e(5): mov $0x30,%ebx
2733(3): xor %r12d,%r12d
2736(5): jmp 0xfffffbb2(%rip)
273b(5): nop 0x0(%rax,%rax,1)
2740(5): cmp $0x2,0x8(%rsp)
2745(3): mov %r10d,%r12d
2748(3): setz %dl
274b(3): xor %r10d,%r10d
274e(2): xor %eax,%eax
2750(5): jmp 0xfffffb98(%rip)
2755(3): nop (%rax)
2758(5): cmp $0x2,0x8(%rsp)
275d(3): setz %dl
2760(3): xor %r10d,%r10d
2763(5): jmp 0xfffffdc5(%rip)
2768(8): nop 0x0(%rax,%rax,1)
2770(5): cmp $0x2,0x8(%rsp)
2775(3): setz %dl
2778(3): xor %r10d,%r10d
277b(3): xor %r12d,%r12d
277e(5): jmp 0xfffffdb3(%rip)
2783(5): nop 0x0(%rax,%rax,1)
2788(5): cmp $0x2,0x8(%rsp)
278d(3): mov %r10d,%r12d
2790(5): mov $0x20,%ebx
2795(3): setz %dl
2798(3): xor %r10d,%r10d
279b(5): jmp 0xfffffd96(%rip)
27a0(5): mov $0xd,%edx
27a5(3): xor %r10d,%r10d
27a8(5): mov $0x72,%ebx
27ad(5): jmp 0xfffffc35(%rip)
27b2(6): nop 0x0(%rax,%rax,1)
27b8(5): mov $0x76,%ebx
27bd(5): jmp 0xfffffca3(%rip)
27c2(6): nop 0x0(%rax,%rax,1)
27c8(5): mov $0x9,%edx
27cd(3): xor %r10d,%r10d
27d0(5): mov $0x74,%ebx
27d5(5): jmp 0xfffffc0d(%rip)
27da(6): nop 0x0(%rax,%rax,1)
27e0(5): mov $0x62,%ebx
27e5(5): jmp 0xfffffc7b(%rip)
27ea(6): nop 0x0(%rax,%rax,1)
27f0(3): xor %r10d,%r10d
27f3(5): jmp 0xfffffa9d(%rip)
27f8(8): nop 0x0(%rax,%rax,1)
2800(5): cmp $0x0,0xf(%rsp)
2805(6): jnz 0x96b(%rip)
280b(4): add $0x1,%rbp
280f(3): mov %r8d,%eax
2812(3): xor %r12d,%r12d
2815(5): mov $0x5c,%ebx
281a(5): jmp 0xfffffb12(%rip)
281f(1): nop 
2820(5): cmp $0x2,0x8(%rsp)
2825(5): movzx 0xf(%rsp),%ebx
282a(3): mov %r8d,%r12d
282d(3): mov %r11,%rbp
2830(3): setz %dl
2833(2): mov %ebx,%eax
2835(3): test %r15,%r15
2838(3): setz %cl
283b(2): and %edx,%eax
283d(2): and %cl,%al
283f(6): jnz 0xa67(%rip)
2845(2): mov %ebx,%eax
2847(3): xor $0x1,%eax
284a(2): and %al,%dl
284c(6): jz 0x970(%rip)
2852(5): cmp $0x0,0x7c(%rsp)
2857(6): jz 0x963(%rip)
285d(5): cmp $0x0,0xe(%rsp)
2862(6): jnz 0x9fb(%rip)
2868(3): test %r13,%r13
286b(3): setz %al
286e(6): cmp $0x0,0x50(%rsp)
2874(3): setnz %dl
2877(2): and %dl,%al
2879(6): jz 0xa23(%rip)
287f(5): mov 0x50(%rsp),%r13
2884(7): lea 0x2712(%rip),%rbx
288b(4): mov $0x27,(%r14)
288f(8): mov $0x2,0x8(%rsp)
2897(6): mov $0x1,%r15d
289d(9): mov $0x1,0x18(%rsp)
28a6(5): mov $0x0,0xf(%rsp)
28ab(5): mov %rbx,0x48(%rsp)
28b0(4): mov %al,0x7c(%rsp)
28b4(5): jmp 0xfffff8df(%rip)
28b9(7): nop 0x0(%rax)
28c0(5): cmp $0x0,0xf(%rsp)
28c5(6): jnz 0x8ab(%rip)
28cb(3): test %r13,%r13
28ce(6): jz 0x402(%rip)
28d4(2): xor %edx,%edx
28d6(6): cmp $0x0,0x50(%rsp)
28dc(6): jnz 0x3f4(%rip)
28e2(5): mov %r13,0x50(%rsp)
28e7(4): add $0x3,%r15
28eb(2): xor %eax,%eax
28ed(5): mov %r12b,0x7c(%rsp)
28f2(3): xor %r8d,%r8d
28f5(3): mov %rdx,%r13
28f8(5): mov $0x27,%ebx
28fd(5): jmp 0xfffffa1c(%rip)
2902(6): nop 0x0(%rax,%rax,1)
2908(5): test $0x4,0x78(%rsp)
290d(2): jz 0x23(%rip)
290f(4): lea 0x2(%rbp),%rcx
2913(3): cmp %r11,%rcx
2916(2): jnb 0x1a(%rip)
2918(5): mov 0x10(%rsp),%rax
291d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2922(6): jz 0x790(%rip)
2928(8): nop 0x0(%rax,%rax,1)
2930(2): xor %edx,%edx
2932(3): xor %r12d,%r12d
2935(2): xor %eax,%eax
2937(5): mov $0x3f,%ebx
293c(5): jmp 0xfffff9ac(%rip)
2941(7): nop 0x0(%rax)
2948(5): cmp $0x0,0xf(%rsp)
294d(6): jnz 0x823(%rip)
2953(3): xor %r12d,%r12d
2956(2): xor %eax,%eax
2958(5): mov $0x3f,%ebx
295d(5): jmp 0xfffff9bc(%rip)
2962(6): nop 0x0(%rax,%rax,1)
2968(8): lea 0xa0(%rsp),%rax
2970(4): cmp $0xffffffff,%r11
2974(c): mov $0x0,0xa0(%rsp)
2980(5): mov %rax,0x28(%rsp)
2985(2): jnz 0x2f(%rip)
2987(5): mov 0x10(%rsp),%rdi
298c(5): mov %r8b,0x40(%rsp)
2991(5): mov %r10b,0x38(%rsp)
2996(5): mov %r9,0x30(%rsp)
299b(5): call 0xffffea55(%rip)
29a0(6): movzx 0x40(%rsp),%r8d
29a6(6): movzx 0x38(%rsp),%r10d
29ac(3): mov %rax,%r11
29af(5): mov 0x30(%rsp),%r9
29b4(8): lea 0x9c(%rsp),%rax
29bc(2): xor %ecx,%ecx
29be(4): mov %bl,0x7e(%rsp)
29c2(5): mov %r8b,0x7d(%rsp)
29c7(3): mov %rcx,%rbx
29ca(8): mov %r9,0x88(%rsp)
29d2(5): mov %rax,0x38(%rsp)
29d7(5): mov %r10b,0x7f(%rsp)
29dc(8): mov %r15,0x80(%rsp)
29e4(5): mov %r14,0x40(%rsp)
29e9(5): mov %r13,0x70(%rsp)
29ee(5): mov %r11,0x30(%rsp)
29f3(5): mov 0x10(%rsp),%rax
29f8(5): lea 0x0(%rbp,%rbx,1),%r14
29fd(5): mov 0x30(%rsp),%rdx
2a02(5): mov 0x28(%rsp),%rcx
2a07(5): mov 0x38(%rsp),%rdi
2a0c(4): lea 0x0(%rax,%r14,1),%r13
2a10(3): sub %r14,%rdx
2a13(3): mov %r13,%rsi
2a16(5): call 0x1d7a(%rip)
2a1b(3): test %rax,%rax
2a1e(3): mov %rax,%r15
2a21(2): jz 0x50(%rip)
2a23(4): cmp $0xffffffff,%rax
2a27(6): jz 0x61e(%rip)
2a2d(4): cmp $0xfffffffe,%rax
2a31(6): jz 0x5a0(%rip)
2a37(5): cmp $0x2,0x8(%rsp)
2a3c(3): setz %al
2a3f(4): and 0xf(%rsp),%al
2a43(6): jnz 0x19d(%rip)
2a49(7): mov 0x9c(%rsp),%edi
2a50(5): call 0xffffeb90(%rip)
2a55(5): mov 0x28(%rsp),%rdi
2a5a(2): test %eax,%eax
2a5c(5): mov $0x0,%eax
2a61(4): cmove %eax,%r12d
2a65(3): add %r15,%rbx
2a68(5): call 0xffffeb68(%rip)
2a6d(2): test %eax,%eax
2a6f(2): jz 0xffffff84(%rip)
2a71(3): mov %r12d,%edx
2a74(3): mov %rbx,%rdi
2a77(6): movzx 0x7d(%rsp),%r8d
2a7d(3): xor $0x1,%edx
2a80(5): movzx 0x7e(%rsp),%ebx
2a85(6): movzx 0x7f(%rsp),%r10d
2a8b(4): and 0xd(%rsp),%dl
2a8f(8): mov 0x80(%rsp),%r15
2a97(5): mov 0x40(%rsp),%r14
2a9c(5): mov 0x70(%rsp),%r13
2aa1(5): mov 0x30(%rsp),%r11
2aa6(4): cmp $0x1,%rdi
2aaa(6): jbe 0x601(%rip)
2ab0(3): mov %rdi,%rcx
2ab3(2): xor %esi,%esi
2ab5(6): movzx 0xf(%rsp),%r9d
2abb(3): add %rbp,%rcx
2abe(5): mov 0x10(%rsp),%rdi
2ac3(5): jmp 0xbb(%rip)
2ac8(8): nop 0x0(%rax,%rax,1)
2ad0(5): cmp $0x2,0x8(%rsp)
2ad5(3): setz %al
2ad8(3): test %r9b,%r9b
2adb(6): jnz 0x4b5(%rip)
2ae1(3): mov %r8d,%esi
2ae4(3): xor $0x1,%esi
2ae7(3): and %sil,%al
2aea(2): jz 0x31(%rip)
2aec(3): cmp %r15,%r13
2aef(2): jbe 0x7(%rip)
2af1(5): mov $0x27,0x0(%r14,%r15,1)
2af6(4): lea 0x1(%r15),%rsi
2afa(3): cmp %rsi,%r13
2afd(2): jbe 0x8(%rip)
2aff(6): mov $0x24,0x1(%r14,%r15,1)
2b05(4): lea 0x2(%r15),%rsi
2b09(3): cmp %rsi,%r13
2b0c(2): jbe 0x8(%rip)
2b0e(6): mov $0x27,0x2(%r14,%r15,1)
2b14(4): add $0x3,%r15
2b18(3): mov %eax,%r8d
2b1b(3): cmp %r15,%r13
2b1e(2): jbe 0x7(%rip)
2b20(5): mov $0x5c,0x0(%r14,%r15,1)
2b25(4): lea 0x1(%r15),%rax
2b29(3): cmp %rax,%r13
2b2c(2): jbe 0xf(%rip)
2b2e(2): mov %ebx,%eax
2b30(3): shr $0x6,%al
2b33(3): add $0x30,%eax
2b36(5): mov %al,0x1(%r14,%r15,1)
2b3b(4): lea 0x2(%r15),%rax
2b3f(3): cmp %rax,%r13
2b42(2): jbe 0x12(%rip)
2b44(2): mov %ebx,%eax
2b46(3): shr $0x3,%al
2b49(3): and $0x7,%eax
2b4c(3): add $0x30,%eax
2b4f(5): mov %al,0x2(%r14,%r15,1)
2b54(3): and $0x7,%ebx
2b57(4): add $0x1,%rbp
2b5b(4): add $0x3,%r15
2b5f(3): add $0x30,%ebx
2b62(3): cmp %rcx,%rbp
2b65(6): jnb 0xfffff7eb(%rip)
2b6b(2): mov %edx,%esi
2b6d(3): cmp %r15,%r13
2b70(2): jbe 0x6(%rip)
2b72(4): mov %bl,0x0(%r14,%r15,1)
2b76(4): movzx 0x0(%rdi,%rbp,1),%ebx
2b7a(4): add $0x1,%r15
2b7e(2): test %dl,%dl
2b80(6): jnz 0xffffff50(%rip)
2b86(2): mov %esi,%eax
2b88(3): xor $0x1,%eax
2b8b(3): and %r8d,%eax
2b8e(3): test %r10b,%r10b
2b91(2): jz 0x10(%rip)
2b93(3): cmp %r15,%r13
2b96(2): jbe 0x7(%rip)
2b98(5): mov $0x5c,0x0(%r14,%r15,1)
2b9d(4): add $0x1,%r15
2ba1(4): add $0x1,%rbp
2ba5(3): cmp %rcx,%rbp
2ba8(6): jnb 0xfffff784(%rip)
2bae(2): test %al,%al
2bb0(6): jz 0x3fe(%rip)
2bb6(3): cmp %r15,%r13
2bb9(2): jbe 0x7(%rip)
2bbb(5): mov $0x27,0x0(%r14,%r15,1)
2bc0(4): lea 0x1(%r15),%rax
2bc4(3): cmp %rax,%r13
2bc7(2): jbe 0x8(%rip)
2bc9(6): mov $0x27,0x1(%r14,%r15,1)
2bcf(4): add $0x2,%r15
2bd3(3): xor %r10d,%r10d
2bd6(3): xor %r8d,%r8d
2bd9(2): jmp 0xffffff94(%rip)
2bdb(5): nop 0x0(%rax,%rax,1)
2be0(4): cmp $0x1,%r15
2be4(6): jz 0xfffffe65(%rip)
2bea(5): mov 0x10(%rsp),%rdi
2bef(4): lea 0x0(%rdi,%r15,1),%rcx
2bf3(5): lea 0x1(%rdi,%r14,1),%rdx
2bf8(4): lea 0x0(%rcx,%r14,1),%r8
2bfc(2): jmp 0x11(%rip)
2bfe(2): nop 
2c00(4): add $0x1,%rdx
2c04(3): cmp %rdx,%r8
2c07(6): jz 0xfffffe42(%rip)
2c0d(3): movzx (%rdx),%ecx
2c10(3): sub $0x5b,%ecx
2c13(3): cmp $0x21,%cl
2c16(2): jnbe 0xffffffea(%rip)
2c18(5): mov $0x1,%esi
2c1d(3): shl/sal %cl,%rsi
2c20(3): mov %rsi,%rcx
2c23(a): mov $0x8589934635,%rsi
2c2d(3): test %rsi,%rcx
2c30(2): jz 0xffffffd0(%rip)
2c32(5): mov 0x40(%rsp),%r14
2c37(5): mov 0x70(%rsp),%r13
2c3c(5): mov 0x30(%rsp),%rbp
2c41(8): mov $0x2,0x8(%rsp)
2c49(5): cmp $0x0,0xd(%rsp)
2c4e(2): jz 0x12(%rip)
2c50(2): test %al,%al
2c52(5): mov $0x4,%eax
2c57(5): cmove 0x8(%rsp),%eax
2c5c(4): mov %eax,0x8(%rsp)
2c60(4): sub $0x8,%rsp
2c64(3): mov %rbp,%rcx
2c67(3): mov %r13,%rsi
2c6a(4): push 0x68(%rsp)
2c6e(4): push 0x78(%rsp)
2c72(3): mov %r14,%rdi
2c75(2): push $0x0
2c77(8): mov 0x98(%rsp),%r9d
2c7f(5): mov 0x28(%rsp),%r8d
2c84(5): mov 0x30(%rsp),%rdx
2c89(4): and $0xfd,%r9d
2c8d(5): call 0xfffff433(%rip)
2c92(4): add $0x20,%rsp
2c96(3): mov %rax,%r15
2c99(8): mov 0xa8(%rsp),%rbx
2ca1(9): xor $0x28,%rbx
2caa(3): mov %r15,%rax
2cad(6): jnz 0x606(%rip)
2cb3(7): add $0xb8,%rsp
2cba(1): pop %rbx
2cbb(1): pop %rbp
2cbc(2): pop %r12
2cbe(2): pop %r13
2cc0(2): pop %r14
2cc2(2): pop %r15
2cc4(1): ret near (%rsp)
2cc5(3): nop (%rax)
2cc8(3): mov %r11,%rbp
2ccb(5): jmp 0xffffff7e(%rip)
2cd0(3): cmp %r15,%r13
2cd3(2): jbe 0x7(%rip)
2cd5(5): mov $0x27,0x0(%r14,%r15,1)
2cda(4): lea 0x1(%r15),%rax
2cde(3): cmp %rax,%r13
2ce1(2): jbe 0x8(%rip)
2ce3(6): mov $0x5c,0x1(%r14,%r15,1)
2ce9(4): lea 0x2(%r15),%rax
2ced(3): cmp %rax,%r13
2cf0(6): jbe 0x5f2(%rip)
2cf6(3): mov %r13,%rdx
2cf9(6): mov $0x27,0x2(%r14,%r15,1)
2cff(5): mov 0x50(%rsp),%r13
2d04(5): jmp 0xfffffbde(%rip)
2d09(3): mov %r12d,%eax
2d0c(5): mov $0x30,%ebx
2d11(3): xor %r12d,%r12d
2d14(5): jmp 0xfffff605(%rip)
2d19(6): mov $0x27,0x2(%r14,%r15,1)
2d1f(5): jmp 0xfffff9ca(%rip)
2d24(2): test %ebx,%ebx
2d26(6): jnz 0xfffff42d(%rip)
2d2c(5): mov $0x1,0xd(%rsp)
2d31(3): test %r13,%r13
2d34(6): jnz 0x596(%rip)
2d3a(7): lea 0x225c(%rip),%rax
2d41(9): mov $0x0,0x50(%rsp)
2d4a(5): mov $0x1,0xe(%rsp)
2d4f(5): mov $0x0,0x7c(%rsp)
2d54(3): xor %r12d,%r12d
2d57(5): mov $0x0,0xf(%rsp)
2d5c(9): mov $0x1,0x18(%rsp)
2d65(5): mov %rax,0x48(%rsp)
2d6a(6): mov $0x1,%r15d
2d70(8): mov $0x2,0x8(%rsp)
2d78(5): jmp 0xfffff41b(%rip)
2d7d(3): nop (%rax)
2d80(2): test %ebx,%ebx
2d82(6): jnz 0x3fb(%rip)
2d88(3): test %r13,%r13
2d8b(6): jz 0x22b(%rip)
2d91(4): mov $0x22,(%r14)
2d95(5): mov $0x1,0xe(%rsp)
2d9a(3): xor %r12d,%r12d
2d9d(5): mov $0x0,0x7c(%rsp)
2da2(9): mov $0x0,0x50(%rsp)
2dab(7): lea 0x21e9(%rip),%rax
2db2(5): mov $0x0,0xf(%rsp)
2db7(5): mov $0x1,0xd(%rsp)
2dbc(9): mov $0x1,0x18(%rsp)
2dc5(6): mov $0x1,%r15d
2dcb(5): mov %rax,0x48(%rsp)
2dd0(5): jmp 0xfffff3c3(%rip)
2dd5(7): lea 0x21bf(%rip),%rax
2ddc(5): mov $0x1,0xe(%rsp)
2de1(5): mov $0x0,0x7c(%rsp)
2de6(3): xor %r12d,%r12d
2de9(9): mov $0x0,0x50(%rsp)
2df2(5): mov $0x1,0xf(%rsp)
2df7(5): mov $0x1,0xd(%rsp)
2dfc(9): mov $0x1,0x18(%rsp)
2e05(3): xor %r15d,%r15d
2e08(5): mov %rax,0x48(%rsp)
2e0d(8): mov $0x5,0x8(%rsp)
2e15(5): jmp 0xfffff37e(%rip)
2e1a(5): mov $0x1,0xe(%rsp)
2e1f(5): mov $0x0,0x7c(%rsp)
2e24(3): xor %r12d,%r12d
2e27(9): mov $0x0,0x50(%rsp)
2e30(5): mov $0x0,0xf(%rsp)
2e35(3): xor %r15d,%r15d
2e38(5): mov $0x1,0xd(%rsp)
2e3d(9): mov $0x0,0x18(%rsp)
2e46(9): mov $0x0,0x48(%rsp)
2e4f(5): jmp 0xfffff344(%rip)
2e54(5): cmp $0xa,0x8(%rsp)
2e59(2): jz 0x58(%rip)
2e5b(7): lea 0x213d(%rip),%rsi
2e62(2): xor %edi,%edi
2e64(5): mov $0x5,%edx
2e69(5): call 0xffffe567(%rip)
2e6e(3): mov %rax,%rcx
2e71(5): mov %rax,0x68(%rsp)
2e76(7): lea 0x2122(%rip),%rax
2e7d(3): cmp %rax,%rcx
2e80(6): jz 0x39e(%rip)
2e86(7): lea 0x2110(%rip),%rsi
2e8d(2): xor %edi,%edi
2e8f(5): mov $0x5,%edx
2e94(5): call 0xffffe53c(%rip)
2e99(3): mov %rax,%rcx
2e9c(5): mov %rax,0x60(%rsp)
2ea1(7): lea 0x20f5(%rip),%rax
2ea8(3): cmp %rax,%rcx
2eab(6): jz 0x389(%rip)
2eb1(3): xor %r15d,%r15d
2eb4(2): test %ebx,%ebx
2eb6(6): jz 0x1c7(%rip)
2ebc(2): test %ebx,%ebx
2ebe(5): mov 0x60(%rsp),%rbx
2ec3(5): setnz 0xf(%rsp)
2ec8(3): xor %r12d,%r12d
2ecb(3): mov %rbx,%rdi
2ece(5): call 0xffffe522(%rip)
2ed3(5): mov %rbx,0x48(%rsp)
2ed8(5): mov %rax,0x18(%rsp)
2edd(5): mov $0x1,0xe(%rsp)
2ee2(5): mov $0x0,0x7c(%rsp)
2ee7(9): mov $0x0,0x50(%rsp)
2ef0(5): mov $0x1,0xd(%rsp)
2ef5(5): jmp 0xfffff29e(%rip)
2efa(5): mov $0x1,0xe(%rsp)
2eff(5): mov $0x0,0x7c(%rsp)
2f04(3): xor %r12d,%r12d
2f07(9): mov $0x0,0x50(%rsp)
2f10(5): mov $0x0,0xf(%rsp)
2f15(3): xor %r15d,%r15d
2f18(5): mov $0x0,0xd(%rsp)
2f1d(9): mov $0x0,0x18(%rsp)
2f26(9): mov $0x0,0x48(%rsp)
2f2f(5): jmp 0xfffff264(%rip)
2f34(5): mov $0x1,0xe(%rsp)
2f39(5): mov $0x0,0x7c(%rsp)
2f3e(3): xor %r12d,%r12d
2f41(9): mov $0x0,0x50(%rsp)
2f4a(5): mov $0x1,0xf(%rsp)
2f4f(5): mov $0x1,0xd(%rsp)
2f54(5): jmp 0xfffff21f(%rip)
2f59(3): cmp %r15,%r13
2f5c(2): jbe 0x7(%rip)
2f5e(5): mov $0x30,0x0(%r14,%r15,1)
2f63(4): lea 0x2(%rcx),%rax
2f67(3): cmp %rax,%r13
2f6a(2): jbe 0x8(%rip)
2f6c(6): mov $0x30,0x2(%r14,%rcx,1)
2f72(3): mov %r12d,%eax
2f75(4): lea 0x3(%rcx),%r15
2f79(3): xor %r12d,%r12d
2f7c(5): mov $0x30,%ebx
2f81(5): jmp 0xfffff367(%rip)
2f86(a): nop 0x0(%rax,%rax,1)
2f90(5): movzx 0xf(%rsp),%ebx
2f95(3): mov %r11,%rbp
2f98(4): mov %bl,0xd(%rsp)
2f9c(5): jmp 0xfffffcad(%rip)
2fa1(5): movzx 0xd(%rsp),%edx
2fa6(3): xor %r12d,%r12d
2fa9(5): jmp 0xfffffb07(%rip)
2fae(3): xor %r10d,%r10d
2fb1(5): jmp 0xfffffbbc(%rip)
2fb6(9): mov $0x0,0x50(%rsp)
2fbf(5): mov $0x1,0xe(%rsp)
2fc4(3): xor %r12d,%r12d
2fc7(5): mov $0x0,0x7c(%rsp)
2fcc(5): jmp 0xfffffddf(%rip)
2fd1(5): mov 0x30(%rsp),%r11
2fd6(3): mov %r14,%rsi
2fd9(3): mov %r13,%rcx
2fdc(3): mov %rbx,%rax
2fdf(3): mov %rbx,%rdi
2fe2(6): movzx 0x7d(%rsp),%r8d
2fe8(5): movzx 0x7e(%rsp),%ebx
2fed(8): mov 0x88(%rsp),%r9
2ff5(3): cmp %r11,%rsi
2ff8(6): movzx 0x7f(%rsp),%r10d
2ffe(8): mov 0x80(%rsp),%r15
3006(5): mov 0x40(%rsp),%r14
300b(5): mov 0x70(%rsp),%r13
3010(2): jnb 0x28(%rip)
3012(3): cmp $0x0,(%rcx)
3015(2): jnz 0x12(%rip)
3017(2): jmp 0x21(%rip)
3019(7): nop 0x0(%rax)
3020(5): cmp $0x0,0x0(%r9,%rax,1)
3025(2): jz 0x10(%rip)
3027(4): add $0x1,%rax
302b(5): lea 0x0(%rbp,%rax,1),%rdx
3030(3): cmp %rdx,%r11
3033(2): jnbe 0xffffffed(%rip)
3035(3): mov %rax,%rdi
3038(5): movzx 0xd(%rsp),%edx
303d(3): xor %r12d,%r12d
3040(5): jmp 0xfffffa66(%rip)
3045(3): mov %rbx,%rdi
3048(6): movzx 0x7d(%rsp),%r8d
304e(5): movzx 0x7e(%rsp),%ebx
3053(6): movzx 0x7f(%rsp),%r10d
3059(8): mov 0x80(%rsp),%r15
3061(3): xor %r12d,%r12d
3064(5): mov 0x40(%rsp),%r14
3069(5): mov 0x70(%rsp),%r13
306e(5): mov 0x30(%rsp),%r11
3073(5): movzx 0xd(%rsp),%edx
3078(5): jmp 0xfffffa2e(%rip)
307d(5): mov 0x68(%rsp),%rdx
3082(3): movzx (%rdx),%eax
3085(2): test %al,%al
3087(6): jz 0xfffffe35(%rip)
308d(3): nop (%rax)
3090(3): cmp %r15,%r13
3093(2): jbe 0x6(%rip)
3095(4): mov %al,0x0(%r14,%r15,1)
3099(4): add $0x1,%r15
309d(5): movzx 0x0(%rdx,%r15,1),%eax
30a2(2): test %al,%al
30a4(2): jnz 0xffffffec(%rip)
30a6(5): jmp 0xfffffe16(%rip)
30ab(2): mov %edx,%eax
30ad(5): jmp 0xfffff55a(%rip)
30b2(4): movzx 0x0(%rax,%rcx,1),%ebx
30b6(3): cmp $0x3e,%bl
30b9(6): jnbe 0xfffff877(%rip)
30bf(a): mov $0x8070630310989004800,%rax
30c9(4): bt %rbx,%rax
30cd(6): jnb 0xfffff863(%rip)
30d3(5): cmp $0x0,0xf(%rsp)
30d8(6): jnz 0x1ea(%rip)
30de(3): cmp %r15,%r13
30e1(2): jbe 0x7(%rip)
30e3(5): mov $0x3f,0x0(%r14,%r15,1)
30e8(4): lea 0x1(%r15),%rax
30ec(3): cmp %rax,%r13
30ef(2): jbe 0x8(%rip)
30f1(6): mov $0x22,0x1(%r14,%r15,1)
30f7(4): lea 0x2(%r15),%rax
30fb(3): cmp %rax,%r13
30fe(2): jbe 0x8(%rip)
3100(6): mov $0x22,0x2(%r14,%r15,1)
3106(4): lea 0x3(%r15),%rax
310a(3): cmp %rax,%r13
310d(2): jbe 0x8(%rip)
310f(6): mov $0x3f,0x3(%r14,%r15,1)
3115(4): add $0x4,%r15
3119(2): xor %edx,%edx
311b(3): xor %r12d,%r12d
311e(2): xor %eax,%eax
3120(3): mov %rcx,%rbp
3123(5): jmp 0xfffff1c5(%rip)
3128(2): test %ebx,%ebx
312a(6): jz 0x18e(%rip)
3130(7): lea 0x1e66(%rip),%rax
3137(5): mov $0x1,0xe(%rsp)
313c(5): mov $0x0,0x7c(%rsp)
3141(3): xor %r12d,%r12d
3144(9): mov $0x0,0x50(%rsp)
314d(5): mov $0x1,0xf(%rsp)
3152(5): mov $0x0,0xd(%rsp)
3157(9): mov $0x1,0x18(%rsp)
3160(3): xor %r15d,%r15d
3163(5): mov %rax,0x48(%rsp)
3168(5): jmp 0xfffff02b(%rip)
316d(3): nop (%rax)
3170(3): mov %r11,%rbp
3173(5): movzx 0xf(%rsp),%eax
3178(5): jmp 0xfffffad1(%rip)
317d(7): lea 0x1e17(%rip),%rax
3184(5): mov $0x1,0xe(%rsp)
3189(5): mov $0x0,0x7c(%rsp)
318e(3): xor %r12d,%r12d
3191(9): mov $0x0,0x50(%rsp)
319a(5): mov $0x1,0xf(%rsp)
319f(5): mov $0x1,0xd(%rsp)
31a4(9): mov $0x1,0x18(%rsp)
31ad(3): xor %r15d,%r15d
31b0(5): mov %rax,0x48(%rsp)
31b5(5): jmp 0xffffefde(%rip)
31ba(2): mov %edx,%eax
31bc(5): mov 0x48(%rsp),%rbx
31c1(3): test %rbx,%rbx
31c4(2): jz 0x2e(%rip)
31c6(2): test %al,%al
31c8(2): jz 0x2a(%rip)
31ca(3): movzx (%rbx),%ecx
31cd(3): mov %rbx,%rax
31d0(2): test %cl,%cl
31d2(2): jz 0x20(%rip)
31d4(3): mov %r15,%rdx
31d7(3): sub %r15,%rax
31da(3): cmp %rdx,%r13
31dd(2): jbe 0x6(%rip)
31df(4): mov %cl,0x0(%r14,%rdx,1)
31e3(4): add $0x1,%rdx
31e7(4): movzx 0x0(%rax,%rdx,1),%ecx
31eb(2): test %cl,%cl
31ed(2): jnz 0xffffffed(%rip)
31ef(3): mov %rdx,%r15
31f2(3): cmp %r15,%r13
31f5(6): jbe 0xfffffaa4(%rip)
31fb(5): mov $0x0,0x0(%r14,%r15,1)
3200(5): jmp 0xfffffa99(%rip)
3205(5): cmp $0x2,0x8(%rsp)
320a(5): movzx 0xf(%rsp),%ebx
320f(3): mov %r11,%rbp
3212(3): setz %al
3215(4): mov %bl,0xd(%rsp)
3219(5): jmp 0xfffffa30(%rip)
321e(4): mov 0x8(%rsp),%esi
3222(3): mov %rcx,%rdi
3225(5): call 0xffffedab(%rip)
322a(5): mov %rax,0x68(%rsp)
322f(5): jmp 0xfffffc57(%rip)
3234(4): mov 0x8(%rsp),%esi
3238(3): mov %rcx,%rdi
323b(5): call 0xffffed95(%rip)
3240(5): mov %rax,0x60(%rsp)
3245(5): jmp 0xfffffc6c(%rip)
324a(5): movzx 0xf(%rsp),%ebx
324f(3): mov %r11,%rbp
3252(2): mov %edx,%eax
3254(4): mov %bl,0xd(%rsp)
3258(5): jmp 0xfffff9f1(%rip)
325d(4): sub $0x8,%rsp
3261(6): mov $0x5,%r8d
3267(3): mov %r11,%rcx
326a(4): push 0x68(%rsp)
326e(4): push 0x78(%rsp)
3272(3): mov %r14,%rdi
3275(4): push 0x38(%rsp)
3279(8): mov 0x98(%rsp),%r9d
3281(5): mov 0x30(%rsp),%rdx
3286(5): mov 0x70(%rsp),%rsi
328b(5): call 0xffffee35(%rip)
3290(4): add $0x20,%rsp
3294(3): mov %rax,%r15
3297(5): jmp 0xfffffa02(%rip)
329c(5): movzx 0x7c(%rsp),%eax
32a1(5): jmp 0xffffff1b(%rip)
32a6(8): mov $0x2,0x8(%rsp)
32ae(5): jmp 0xfffff99b(%rip)
32b3(5): call 0xffffe15d(%rip)
32b8(5): mov $0x0,0xd(%rsp)
32bd(5): jmp 0xfffffa74(%rip)
32c2(3): mov %r11,%rbp
32c5(5): jmp 0xfffff99b(%rip)
32ca(5): mov $0x1,0xe(%rsp)
32cf(2): xor %eax,%eax
32d1(3): xor %r12d,%r12d
32d4(9): mov $0x0,0x50(%rsp)
32dd(5): jmp 0xfffff5a7(%rip)
32e2(3): mov %r13,%rdx
32e5(5): mov 0x50(%rsp),%r13
32ea(5): jmp 0xfffff5f8(%rip)
32ef(5): call 0xffffe041(%rip)

"quotearg_n_options" :
3300(2): push %r15
3302(2): push %r14
3304(3): movsxd %edi,%r15
3307(2): push %r13
3309(2): push %r12
330b(3): mov %rdx,%r14
330e(1): push %rbp
330f(1): push %rbx
3310(3): mov %rcx,%rbp
3313(4): sub $0x28,%rsp
3317(5): mov %rsi,0x8(%rsp)
331c(5): call 0xffffe024(%rip)
3321(3): mov %rax,%r13
3324(2): mov (%rax),%eax
3326(3): test %r15d,%r15d
3329(7): mov 0x203d30(%rip),%rbx
3330(4): mov %eax,0x18(%rsp)
3334(6): js 0x16d(%rip)
333a(7): cmp %r15d,0x203d17(%rip)
3341(2): jnle 0x64(%rip)
3343(7): cmp $0x7fffffff,%r15d
334a(6): jz 0x15c(%rip)
3350(4): lea 0x1(%r15),%r12d
3354(7): lea 0x203d15(%rip),%rax
335b(3): movsxd %r12d,%rsi
335e(4): shl/sal $0x4,%rsi
3362(3): cmp %rax,%rbx
3365(6): jz 0x11b(%rip)
336b(3): mov %rbx,%rdi
336e(5): call 0xf72(%rip)
3373(3): mov %rax,%rbx
3376(7): mov %rax,0x203ce3(%rip)
337d(7): movsxd 0x203cd4(%rip),%rdi
3384(3): mov %r12d,%edx
3387(2): xor %esi,%esi
3389(2): sub %edi,%edx
338b(4): shl/sal $0x4,%rdi
338f(3): movsxd %edx,%rdx
3392(3): add %rbx,%rdi
3395(4): shl/sal $0x4,%rdx
3399(5): call 0xffffe0c7(%rip)
339e(7): mov %r12d,0x203cb3(%rip)
33a5(3): mov 0x4(%rbp),%eax
33a8(4): shl/sal $0x4,%r15
33ac(4): sub $0x8,%rsp
33b0(3): add %r15,%rbx
33b3(4): lea 0x8(%rbp),%r15
33b7(4): mov 0x0(%rbp),%r8d
33bb(3): mov (%rbx),%r11
33be(4): mov 0x8(%rbx),%r12
33c2(3): mov %r14,%rcx
33c5(3): or $0x1,%eax
33c8(4): mov %eax,0x24(%rsp)
33cc(3): push 0x30(%rbp)
33cf(3): mov %eax,%r9d
33d2(3): push 0x28(%rbp)
33d5(2): push %r15
33d7(3): mov %r11,%rsi
33da(5): mov 0x28(%rsp),%rdx
33df(3): mov %r12,%rdi
33e2(5): mov %r11,0x30(%rsp)
33e7(5): call 0xffffecd9(%rip)
33ec(4): add $0x20,%rsp
33f0(5): mov 0x10(%rsp),%r11
33f5(3): cmp %rax,%r11
33f8(2): jnbe 0x69(%rip)
33fa(4): lea 0x1(%rax),%rsi
33fe(7): lea 0x203cdb(%rip),%rax
3405(3): cmp %rax,%r12
3408(3): mov %rsi,(%rbx)
340b(2): jz 0x14(%rip)
340d(3): mov %r12,%rdi
3410(5): mov %rsi,0x10(%rsp)
3415(5): call 0xffffdf0b(%rip)
341a(5): mov 0x10(%rsp),%rsi
341f(3): mov %rsi,%rdi
3422(5): mov %rsi,0x10(%rsp)
3427(5): call 0xe59(%rip)
342c(4): sub $0x8,%rsp
3430(4): mov %rax,0x8(%rbx)
3434(4): mov 0x0(%rbp),%r8d
3438(3): push 0x30(%rbp)
343b(3): push 0x28(%rbp)
343e(3): mov %r14,%rcx
3441(2): push %r15
3443(5): mov 0x3c(%rsp),%r9d
3448(3): mov %rax,%rdi
344b(5): mov 0x28(%rsp),%rdx
3450(5): mov 0x30(%rsp),%rsi
3455(3): mov %rax,%r12
3458(5): call 0xffffec68(%rip)
345d(4): add $0x20,%rsp
3461(4): mov 0x18(%rsp),%eax
3465(4): mov %eax,0x0(%r13)
3469(4): add $0x28,%rsp
346d(3): mov %r12,%rax
3470(1): pop %rbx
3471(1): pop %rbp
3472(2): pop %r12
3474(2): pop %r13
3476(2): pop %r14
3478(2): pop %r15
347a(1): ret near (%rsp)
347b(5): nop 0x0(%rax,%rax,1)
3480(2): xor %edi,%edi
3482(5): call 0xe5e(%rip)
3487(8): movdqa 0x203be1(%rip),%xmm0
348f(3): mov %rax,%rbx
3492(7): mov %rax,0x203bc7(%rip)
3499(3): movups %xmm0,(%rax)
349c(5): jmp 0xfffffee1(%rip)
34a1(5): call 0xffffde8f(%rip)
34a6(5): call 0x102a(%rip)

"clone_quoting_options" :
34b0(2): push %r12
34b2(1): push %rbp
34b3(1): push %rbx
34b4(3): mov %rdi,%rbx
34b7(5): call 0xffffde89(%rip)
34bc(3): mov (%rax),%r12d
34bf(3): mov %rax,%rbp
34c2(7): lea 0x203d17(%rip),%rax
34c9(3): test %rbx,%rbx
34cc(5): mov $0x38,%esi
34d1(4): cmove %rax,%rbx
34d5(3): mov %rbx,%rdi
34d8(5): call 0xfa8(%rip)
34dd(4): mov %r12d,0x0(%rbp)
34e1(1): pop %rbx
34e2(1): pop %rbp
34e3(2): pop %r12
34e5(1): ret near (%rsp)

"get_quoting_style" :
34f0(7): lea 0x203ce9(%rip),%rax
34f7(3): test %rdi,%rdi
34fa(4): cmove %rax,%rdi
34fe(2): mov (%rdi),%eax
3500(1): ret near (%rsp)

"set_quoting_style" :
3510(7): lea 0x203cc9(%rip),%rax
3517(3): test %rdi,%rdi
351a(4): cmove %rax,%rdi
351e(2): mov %esi,(%rdi)
3520(1): ret near (%rsp)

"set_char_quoting" :
3530(7): lea 0x203ca9(%rip),%rax
3537(3): test %rdi,%rdi
353a(2): mov %esi,%ecx
353c(4): cmove %rax,%rdi
3540(2): mov %esi,%eax
3542(3): and $0x1f,%ecx
3545(3): shr $0x5,%al
3548(3): movzx %al,%eax
354b(5): lea 0x8(%rdi,%rax,4),%rdi
3550(2): mov (%rdi),%esi
3552(2): mov %esi,%eax
3554(2): shr %cl,%eax
3556(2): xor %eax,%edx
3558(3): and $0x1,%eax
355b(3): and $0x1,%edx
355e(2): shl/sal %cl,%edx
3560(2): xor %esi,%edx
3562(2): mov %edx,(%rdi)
3564(1): ret near (%rsp)

"set_quoting_flags" :
3570(7): lea 0x203c69(%rip),%rax
3577(3): test %rdi,%rdi
357a(4): cmove %rax,%rdi
357e(3): mov 0x4(%rdi),%eax
3581(3): mov %esi,0x4(%rdi)
3584(1): ret near (%rsp)

"set_custom_quoting" :
3590(7): lea 0x203c49(%rip),%rax
3597(3): test %rdi,%rdi
359a(4): cmove %rax,%rdi
359e(3): test %rsi,%rsi
35a1(6): mov $0xa,(%rdi)
35a7(2): jz 0x10(%rip)
35a9(3): test %rdx,%rdx
35ac(2): jz 0xb(%rip)
35ae(4): mov %rsi,0x28(%rdi)
35b2(4): mov %rdx,0x30(%rdi)
35b6(1): ret near (%rsp)
35b7(4): sub $0x8,%rsp
35bb(5): call 0xffffdd75(%rip)

"quotearg_buffer" :
35c0(2): push %r15
35c2(2): push %r14
35c4(7): lea 0x203c15(%rip),%rax
35cb(2): push %r13
35cd(2): push %r12
35cf(3): mov %rdi,%r13
35d2(1): push %rbp
35d3(1): push %rbx
35d4(3): mov %r8,%rbx
35d7(3): mov %rsi,%r14
35da(3): mov %rdx,%r15
35dd(4): sub $0x18,%rsp
35e1(3): test %r8,%r8
35e4(4): cmove %rax,%rbx
35e8(5): mov %rcx,0x8(%rsp)
35ed(5): call 0xffffdd53(%rip)
35f2(3): mov (%rax),%r12d
35f5(3): mov %rax,%rbp
35f8(4): lea 0x8(%rbx),%rax
35fc(4): sub $0x8,%rsp
3600(4): mov 0x4(%rbx),%r9d
3604(3): push 0x30(%rbx)
3607(3): mov (%rbx),%r8d
360a(3): push 0x28(%rbx)
360d(3): mov %r15,%rdx
3610(1): push %rax
3611(5): mov 0x28(%rsp),%rcx
3616(3): mov %r14,%rsi
3619(3): mov %r13,%rdi
361c(5): call 0xffffeaa4(%rip)
3621(4): mov %r12d,0x0(%rbp)
3625(4): add $0x38,%rsp
3629(1): pop %rbx
362a(1): pop %rbp
362b(2): pop %r12
362d(2): pop %r13
362f(2): pop %r14
3631(2): pop %r15
3633(1): ret near (%rsp)

"quotearg_alloc_mem" :
3640(2): push %r15
3642(2): push %r14
3644(7): lea 0x203b95(%rip),%rax
364b(2): push %r13
364d(2): push %r12
364f(3): mov %rdx,%r12
3652(1): push %rbp
3653(1): push %rbx
3654(3): mov %rcx,%rbx
3657(3): mov %rdi,%r14
365a(3): mov %rsi,%r15
365d(4): sub $0x38,%rsp
3661(3): test %rcx,%rcx
3664(4): cmove %rax,%rbx
3668(2): xor %ebp,%ebp
366a(5): call 0xffffdcd6(%rip)
366f(3): test %r12,%r12
3672(3): mov %rax,%r13
3675(2): mov (%rax),%eax
3677(4): setz %bpl
367b(3): or 0x4(%rbx),%ebp
367e(4): lea 0x8(%rbx),%r10
3682(4): sub $0x8,%rsp
3686(3): mov (%rbx),%r8d
3689(3): mov %r15,%rcx
368c(4): mov %eax,0x14(%rsp)
3690(3): push 0x30(%rbx)
3693(3): mov %r14,%rdx
3696(3): push 0x28(%rbx)
3699(2): push %r10
369b(2): xor %esi,%esi
369d(3): mov %ebp,%r9d
36a0(2): xor %edi,%edi
36a2(5): mov %r10,0x40(%rsp)
36a7(5): call 0xffffea19(%rip)
36ac(4): lea 0x1(%rax),%rsi
36b0(5): mov %rax,0x48(%rsp)
36b5(4): add $0x20,%rsp
36b9(3): mov %rsi,%rdi
36bc(5): mov %rsi,0x18(%rsp)
36c1(5): call 0xbbf(%rip)
36c6(5): mov %rax,0x10(%rsp)
36cb(4): sub $0x8,%rsp
36cf(3): push 0x30(%rbx)
36d2(3): push 0x28(%rbx)
36d5(5): mov 0x38(%rsp),%r10
36da(3): mov %ebp,%r9d
36dd(3): mov (%rbx),%r8d
36e0(3): mov %r15,%rcx
36e3(3): mov %r14,%rdx
36e6(3): mov %rax,%rdi
36e9(2): push %r10
36eb(5): mov 0x38(%rsp),%rsi
36f0(5): call 0xffffe9d0(%rip)
36f5(4): mov 0x2c(%rsp),%eax
36f9(4): add $0x20,%rsp
36fd(3): test %r12,%r12
3700(4): mov %eax,0x0(%r13)
3704(2): jz 0xb(%rip)
3706(5): mov 0x28(%rsp),%r11
370b(4): mov %r11,(%r12)
370f(5): mov 0x10(%rsp),%rax
3714(4): add $0x38,%rsp
3718(1): pop %rbx
3719(1): pop %rbp
371a(2): pop %r12
371c(2): pop %r13
371e(2): pop %r14
3720(2): pop %r15
3722(1): ret near (%rsp)

"quotearg_alloc" :
3730(3): mov %rdx,%rcx
3733(2): xor %edx,%edx
3735(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3740(6): mov 0x203912(%rip),%eax
3746(2): push %r12
3748(7): mov 0x203911(%rip),%r12
374f(1): push %rbp
3750(1): push %rbx
3751(3): cmp $0x1,%eax
3754(2): jle 0x2d(%rip)
3756(3): sub $0x2,%eax
3759(5): lea 0x18(%r12),%rbx
375e(4): shl/sal $0x4,%rax
3762(5): lea 0x28(%r12,%rax,1),%rbp
3767(9): nop 0x0(%rax,%rax,1)
3770(3): mov (%rbx),%rdi
3773(4): add $0x10,%rbx
3777(5): call 0xffffdba9(%rip)
377c(3): cmp %rbp,%rbx
377f(2): jnz 0xfffffff1(%rip)
3781(5): mov 0x8(%r12),%rdi
3786(7): lea 0x203953(%rip),%rbx
378d(3): cmp %rbx,%rdi
3790(2): jz 0x19(%rip)
3792(5): call 0xffffdb8e(%rip)
3797(b): mov $0x100,0x2038ce(%rip)
37a2(7): mov %rbx,0x2038cf(%rip)
37a9(7): lea 0x2038c0(%rip),%rbx
37b0(3): cmp %rbx,%r12
37b3(2): jz 0x11(%rip)
37b5(3): mov %r12,%rdi
37b8(5): call 0xffffdb68(%rip)
37bd(7): mov %rbx,0x20389c(%rip)
37c4(1): pop %rbx
37c5(a): mov $0x1,0x203889(%rip)
37cf(1): pop %rbp
37d0(2): pop %r12
37d2(1): ret near (%rsp)

"quotearg_n" :
37e0(7): lea 0x2039f9(%rip),%rcx
37e7(7): mov $0xffffffff,%rdx
37ee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3800(7): lea 0x2039d9(%rip),%rcx
3807(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3810(7): lea 0x2039c9(%rip),%rcx
3817(3): mov %rdi,%rsi
381a(7): mov $0xffffffff,%rdx
3821(2): xor %edi,%edi
3823(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3830(7): lea 0x2039a9(%rip),%rcx
3837(3): mov %rsi,%rdx
383a(3): mov %rdi,%rsi
383d(2): xor %edi,%edi
383f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3850(4): sub $0x48,%rsp
3854(3): mov %rdx,%rax
3857(9): mov $0x28,%rdx
3860(5): mov %rdx,0x38(%rsp)
3865(2): xor %edx,%edx
3867(3): cmp $0xa,%esi
386a(2): jz 0x6a(%rip)
386c(3): mov %esi,(%rsp)
386f(3): mov %rsp,%rcx
3872(7): mov $0xffffffff,%rdx
3879(3): mov %rax,%rsi
387c(9): mov $0x0,0x4(%rsp)
3885(9): mov $0x0,0xc(%rsp)
388e(9): mov $0x0,0x14(%rsp)
3897(9): mov $0x0,0x1c(%rsp)
38a0(9): mov $0x0,0x24(%rsp)
38a9(9): mov $0x0,0x2c(%rsp)
38b2(8): mov $0x0,0x34(%rsp)
38ba(5): call 0xfffffa46(%rip)
38bf(5): mov 0x38(%rsp),%rcx
38c4(9): xor $0x28,%rcx
38cd(2): jnz 0xc(%rip)
38cf(4): add $0x48,%rsp
38d3(1): ret near (%rsp)
38d4(5): call 0xffffda5c(%rip)
38d9(5): call 0xffffdb37(%rip)

"quotearg_n_style_mem" :
38e0(4): sub $0x48,%rsp
38e4(3): mov %rdx,%rax
38e7(3): mov %rcx,%rdx
38ea(9): mov $0x28,%rcx
38f3(5): mov %rcx,0x38(%rsp)
38f8(2): xor %ecx,%ecx
38fa(3): cmp $0xa,%esi
38fd(2): jz 0x63(%rip)
38ff(3): mov %esi,(%rsp)
3902(3): mov %rsp,%rcx
3905(3): mov %rax,%rsi
3908(9): mov $0x0,0x4(%rsp)
3911(9): mov $0x0,0xc(%rsp)
391a(9): mov $0x0,0x14(%rsp)
3923(9): mov $0x0,0x1c(%rsp)
392c(9): mov $0x0,0x24(%rsp)
3935(9): mov $0x0,0x2c(%rsp)
393e(8): mov $0x0,0x34(%rsp)
3946(5): call 0xfffff9ba(%rip)
394b(5): mov 0x38(%rsp),%rdx
3950(9): xor $0x28,%rdx
3959(2): jnz 0xc(%rip)
395b(4): add $0x48,%rsp
395f(1): ret near (%rsp)
3960(5): call 0xffffd9d0(%rip)
3965(5): call 0xffffdaab(%rip)

"quotearg_style" :
3970(3): mov %rsi,%rdx
3973(2): mov %edi,%esi
3975(2): xor %edi,%edi
3977(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3980(3): mov %rdx,%rcx
3983(3): mov %rsi,%rdx
3986(2): mov %edi,%esi
3988(2): xor %edi,%edi
398a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3990(4): sub $0x48,%rsp
3994(2): mov %edx,%ecx
3996(9): mov $0x28,%rax
399f(5): mov %rax,0x38(%rsp)
39a4(2): xor %eax,%eax
39a6(7): mov 0x203863(%rip),%rax
39ad(3): mov %rsp,%r8
39b0(3): and $0x1f,%ecx
39b3(8): movdqa 0x203825(%rip),%xmm0
39bb(5): mov %rax,0x30(%rsp)
39c0(2): mov %edx,%eax
39c2(4): movaps %xmm0,(%rsp)
39c6(3): shr $0x5,%al
39c9(3): movzx %al,%eax
39cc(5): lea 0x8(%r8,%rax,4),%r9
39d1(8): movdqa 0x203817(%rip),%xmm0
39d9(5): movaps %xmm0,0x10(%rsp)
39de(8): movdqa 0x20381a(%rip),%xmm0
39e6(5): movaps %xmm0,0x20(%rsp)
39eb(3): mov (%r9),%edx
39ee(2): mov %edx,%eax
39f0(2): shr %cl,%eax
39f2(2): not %eax
39f4(3): and $0x1,%eax
39f7(2): shl/sal %cl,%eax
39f9(3): mov %r8,%rcx
39fc(2): xor %edx,%eax
39fe(3): mov %rsi,%rdx
3a01(3): mov %rdi,%rsi
3a04(3): mov %eax,(%r9)
3a07(2): xor %edi,%edi
3a09(5): call 0xfffff8f7(%rip)
3a0e(5): mov 0x38(%rsp),%rsi
3a13(9): xor $0x28,%rsi
3a1c(2): jnz 0x7(%rip)
3a1e(4): add $0x48,%rsp
3a22(1): ret near (%rsp)
3a23(5): call 0xffffd9ed(%rip)

"quotearg_char" :
3a30(4): movsx %sil,%edx
3a34(7): mov $0xffffffff,%rsi
3a3b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3a40(5): mov $0x3a,%edx
3a45(7): mov $0xffffffff,%rsi
3a4c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3a60(5): mov $0x3a,%edx
3a65(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3a70(4): sub $0x48,%rsp
3a74(3): mov %rdx,%rax
3a77(9): mov $0x28,%rdx
3a80(5): mov %rdx,0x38(%rsp)
3a85(2): xor %edx,%edx
3a87(3): cmp $0xa,%esi
3a8a(2): jz 0x6a(%rip)
3a8c(3): mov %esi,(%rsp)
3a8f(3): mov %rsp,%rcx
3a92(7): mov $0xffffffff,%rdx
3a99(3): mov %rax,%rsi
3a9c(9): mov $0x0,0x4(%rsp)
3aa5(9): mov $0x4000000,0xc(%rsp)
3aae(9): mov $0x0,0x14(%rsp)
3ab7(9): mov $0x0,0x1c(%rsp)
3ac0(9): mov $0x0,0x24(%rsp)
3ac9(9): mov $0x0,0x2c(%rsp)
3ad2(8): mov $0x0,0x34(%rsp)
3ada(5): call 0xfffff826(%rip)
3adf(5): mov 0x38(%rsp),%rcx
3ae4(9): xor $0x28,%rcx
3aed(2): jnz 0xc(%rip)
3aef(4): add $0x48,%rsp
3af3(1): ret near (%rsp)
3af4(5): call 0xffffd83c(%rip)
3af9(5): call 0xffffd917(%rip)

"quotearg_n_custom_mem" :
3b00(4): sub $0x48,%rsp
3b04(3): mov %rcx,%r9
3b07(7): mov 0x203702(%rip),%rcx
3b0e(8): movdqa 0x2036ca(%rip),%xmm0
3b16(9): mov $0x28,%rax
3b1f(5): mov %rax,0x38(%rsp)
3b24(2): xor %eax,%eax
3b26(4): movaps %xmm0,(%rsp)
3b2a(3): test %rsi,%rsi
3b2d(5): mov %rcx,0x30(%rsp)
3b32(7): mov $0xa,(%rsp)
3b39(8): movdqa 0x2036af(%rip),%xmm0
3b41(5): movaps %xmm0,0x10(%rsp)
3b46(8): movdqa 0x2036b2(%rip),%xmm0
3b4e(5): movaps %xmm0,0x20(%rsp)
3b53(2): jz 0x34(%rip)
3b55(3): test %rdx,%rdx
3b58(2): jz 0x2f(%rip)
3b5a(5): mov %rsi,0x28(%rsp)
3b5f(5): mov %rdx,0x30(%rsp)
3b64(3): mov %rsp,%rcx
3b67(3): mov %r8,%rdx
3b6a(3): mov %r9,%rsi
3b6d(5): call 0xfffff793(%rip)
3b72(5): mov 0x38(%rsp),%rdi
3b77(9): xor $0x28,%rdi
3b80(2): jnz 0xc(%rip)
3b82(4): add $0x48,%rsp
3b86(1): ret near (%rsp)
3b87(5): call 0xffffd7a9(%rip)
3b8c(5): call 0xffffd884(%rip)

"quotearg_n_custom" :
3ba0(7): mov $0xffffffff,%r8
3ba7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3bb0(3): mov %rdx,%rcx
3bb3(7): mov $0xffffffff,%r8
3bba(3): mov %rsi,%rdx
3bbd(3): mov %rdi,%rsi
3bc0(2): xor %edi,%edi
3bc2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3bd0(3): mov %rcx,%r8
3bd3(3): mov %rdx,%rcx
3bd6(3): mov %rsi,%rdx
3bd9(3): mov %rdi,%rsi
3bdc(2): xor %edi,%edi
3bde(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3bf0(7): lea 0x203429(%rip),%rcx
3bf7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3c00(7): lea 0x203419(%rip),%rcx
3c07(3): mov %rsi,%rdx
3c0a(3): mov %rdi,%rsi
3c0d(2): xor %edi,%edi
3c0f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3c20(7): lea 0x2033f9(%rip),%rcx
3c27(7): mov $0xffffffff,%rdx
3c2e(5): jmp 0xfffff6d2(%rip)

"quote" :
3c40(7): lea 0x2033d9(%rip),%rcx
3c47(3): mov %rdi,%rsi
3c4a(7): mov $0xffffffff,%rdx
3c51(2): xor %edi,%edi
3c53(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3c60(2): push %r15
3c62(2): push %r14
3c64(2): push %r13
3c66(2): push %r12
3c68(3): mov %r9,%r12
3c6b(1): push %rbp
3c6c(1): push %rbx
3c6d(3): mov %rdi,%rbp
3c70(3): mov %r8,%rbx
3c73(4): sub $0x28,%rsp
3c77(3): test %rsi,%rsi
3c7a(6): jz 0x11e(%rip)
3c80(3): mov %rdx,%r8
3c83(7): lea 0x17de(%rip),%rdx
3c8a(3): mov %rcx,%r9
3c8d(2): xor %eax,%eax
3c8f(3): mov %rsi,%rcx
3c92(5): mov $0x1,%esi
3c97(5): call 0xffffd929(%rip)
3c9c(7): lea 0x17d8(%rip),%rsi
3ca3(2): xor %edi,%edi
3ca5(5): mov $0x5,%edx
3caa(5): call 0xffffd726(%rip)
3caf(7): lea 0x1aea(%rip),%rdx
3cb6(3): mov %rax,%rcx
3cb9(6): mov $0x7e3,%r8d
3cbf(5): mov $0x1,%esi
3cc4(3): mov %rbp,%rdi
3cc7(2): xor %eax,%eax
3cc9(5): call 0xffffd8f7(%rip)
3cce(7): lea 0x1833(%rip),%rsi
3cd5(2): xor %edi,%edi
3cd7(5): mov $0x5,%edx
3cdc(5): call 0xffffd6f4(%rip)
3ce1(3): mov %rbp,%rsi
3ce4(3): mov %rax,%rdi
3ce7(5): call 0xffffd7a9(%rip)
3cec(4): cmp $0x9,%r12
3cf0(6): jnbe 0x340(%rip)
3cf6(7): lea 0x1a6b(%rip),%rdx
3cfd(4): movsxd 0x0(%rdx,%r12,4),%rax
3d01(3): add %rdx,%rax
3d04(2): jmp %rax
3d06(a): nop 0x0(%rax,%rax,1)
3d10(4): mov 0x38(%rbx),%r9
3d14(4): mov 0x10(%rbx),%rax
3d18(7): lea 0x1959(%rip),%rsi
3d1f(4): mov 0x8(%rbx),%r8
3d23(5): mov $0x5,%edx
3d28(2): xor %edi,%edi
3d2a(4): mov 0x30(%rbx),%r13
3d2e(4): mov 0x28(%rbx),%r12
3d32(5): mov %r9,0x10(%rsp)
3d37(4): mov 0x20(%rbx),%r15
3d3b(4): mov 0x18(%rbx),%r14
3d3f(4): mov %rax,(%rsp)
3d43(5): mov %r8,0x8(%rsp)
3d48(3): mov (%rbx),%rbx
3d4b(5): call 0xffffd685(%rip)
3d50(4): sub $0x8,%rsp
3d54(5): mov 0x18(%rsp),%r9
3d59(3): mov %rax,%rdx
3d5c(3): mov %rbx,%rcx
3d5f(5): mov $0x1,%esi
3d64(3): mov %rbp,%rdi
3d67(2): xor %eax,%eax
3d69(2): push %r9
3d6b(2): push %r13
3d6d(2): push %r12
3d6f(2): push %r15
3d71(2): push %r14
3d73(5): mov 0x30(%rsp),%r9
3d78(5): mov 0x38(%rsp),%r8
3d7d(5): call 0xffffd843(%rip)
3d82(4): add $0x30,%rsp
3d86(4): add $0x28,%rsp
3d8a(1): pop %rbx
3d8b(1): pop %rbp
3d8c(2): pop %r12
3d8e(2): pop %r13
3d90(2): pop %r14
3d92(2): pop %r15
3d94(1): ret near (%rsp)
3d95(3): nop (%rax)
3d98(3): mov %rcx,%r8
3d9b(3): mov %rdx,%rcx
3d9e(7): lea 0x16cf(%rip),%rdx
3da5(5): mov $0x1,%esi
3daa(2): xor %eax,%eax
3dac(5): call 0xffffd814(%rip)
3db1(5): jmp 0xfffffeeb(%rip)
3db6(a): nop 0x0(%rax,%rax,1)
3dc0(4): mov 0x40(%rbx),%r10
3dc4(4): mov 0x38(%rbx),%r9
3dc8(7): lea 0x18d9(%rip),%rsi
3dcf(4): mov 0x10(%rbx),%rax
3dd3(4): mov 0x8(%rbx),%r8
3dd7(5): mov $0x5,%edx
3ddc(4): mov 0x30(%rbx),%r13
3de0(4): mov 0x28(%rbx),%r12
3de4(4): mov 0x20(%rbx),%r15
3de8(4): mov 0x18(%rbx),%r14
3dec(3): mov (%rbx),%rbx
3def(5): mov %r10,0x18(%rsp)
3df4(5): mov %r9,0x10(%rsp)
3df9(4): mov %rax,(%rsp)
3dfd(5): mov %r8,0x8(%rsp)
3e02(2): xor %edi,%edi
3e04(5): call 0xffffd5cc(%rip)
3e09(5): mov 0x18(%rsp),%r10
3e0e(2): push %r10
3e10(5): jmp 0xffffff44(%rip)
3e15(3): nop (%rax)
3e18(3): mov (%rbx),%rbx
3e1b(7): lea 0x165d(%rip),%rsi
3e22(5): mov $0x5,%edx
3e27(2): xor %edi,%edi
3e29(5): call 0xffffd5a7(%rip)
3e2e(4): add $0x28,%rsp
3e32(3): mov %rbx,%rcx
3e35(3): mov %rbp,%rdi
3e38(1): pop %rbx
3e39(1): pop %rbp
3e3a(2): pop %r12
3e3c(2): pop %r13
3e3e(2): pop %r14
3e40(2): pop %r15
3e42(3): mov %rax,%rdx
3e45(5): mov $0x1,%esi
3e4a(2): xor %eax,%eax
3e4c(5): jmp 0xffffd774(%rip)
3e51(7): nop 0x0(%rax)
3e58(4): mov 0x8(%rbx),%r12
3e5c(7): lea 0x162c(%rip),%rsi
3e63(3): mov (%rbx),%rbx
3e66(5): mov $0x5,%edx
3e6b(2): xor %edi,%edi
3e6d(5): call 0xffffd563(%rip)
3e72(4): add $0x28,%rsp
3e76(3): mov %r12,%r8
3e79(3): mov %rbx,%rcx
3e7c(3): mov %rbp,%rdi
3e7f(3): mov %rax,%rdx
3e82(5): mov $0x1,%esi
3e87(1): pop %rbx
3e88(1): pop %rbp
3e89(2): pop %r12
3e8b(2): pop %r13
3e8d(2): pop %r14
3e8f(2): pop %r15
3e91(2): xor %eax,%eax
3e93(5): jmp 0xffffd72d(%rip)
3e98(8): nop 0x0(%rax,%rax,1)
3ea0(4): mov 0x10(%rbx),%r13
3ea4(4): mov 0x8(%rbx),%r12
3ea8(7): lea 0x15f7(%rip),%rsi
3eaf(3): mov (%rbx),%rbx
3eb2(5): mov $0x5,%edx
3eb7(2): xor %edi,%edi
3eb9(5): call 0xffffd517(%rip)
3ebe(4): add $0x28,%rsp
3ec2(3): mov %r13,%r9
3ec5(3): mov %r12,%r8
3ec8(3): mov %rbx,%rcx
3ecb(3): mov %rbp,%rdi
3ece(3): mov %rax,%rdx
3ed1(1): pop %rbx
3ed2(1): pop %rbp
3ed3(2): pop %r12
3ed5(2): pop %r13
3ed7(2): pop %r14
3ed9(2): pop %r15
3edb(5): mov $0x1,%esi
3ee0(2): xor %eax,%eax
3ee2(5): jmp 0xffffd6de(%rip)
3ee7(9): nop 0x0(%rax,%rax,1)
3ef0(7): lea 0x16e1(%rip),%rsi
3ef7(5): mov $0x5,%edx
3efc(2): xor %edi,%edi
3efe(4): mov 0x18(%rbx),%r14
3f02(4): mov 0x10(%rbx),%r13
3f06(4): mov 0x8(%rbx),%r12
3f0a(3): mov (%rbx),%rbx
3f0d(5): call 0xffffd4c3(%rip)
3f12(4): sub $0x8,%rsp
3f16(2): push %r14
3f18(3): mov %rax,%rdx
3f1b(3): mov %r13,%r9
3f1e(3): mov %r12,%r8
3f21(3): mov %rbx,%rcx
3f24(3): mov %rbp,%rdi
3f27(5): mov $0x1,%esi
3f2c(2): xor %eax,%eax
3f2e(5): call 0xffffd692(%rip)
3f33(1): pop %rax
3f34(1): pop %rdx
3f35(4): add $0x28,%rsp
3f39(1): pop %rbx
3f3a(1): pop %rbp
3f3b(2): pop %r12
3f3d(2): pop %r13
3f3f(2): pop %r14
3f41(2): pop %r15
3f43(1): ret near (%rsp)
3f44(4): nop 0x0(%rax)
3f48(4): mov 0x20(%rbx),%r15
3f4c(7): lea 0x16a5(%rip),%rsi
3f53(5): mov $0x5,%edx
3f58(2): xor %edi,%edi
3f5a(4): mov 0x18(%rbx),%r14
3f5e(4): mov 0x10(%rbx),%r13
3f62(4): mov 0x8(%rbx),%r12
3f66(3): mov (%rbx),%rbx
3f69(5): call 0xffffd467(%rip)
3f6e(2): push %r15
3f70(2): jmp 0xffffffa6(%rip)
3f72(6): nop 0x0(%rax,%rax,1)
3f78(4): mov 0x8(%rbx),%r8
3f7c(4): mov 0x28(%rbx),%r12
3f80(7): lea 0x1699(%rip),%rsi
3f87(4): mov 0x20(%rbx),%r15
3f8b(4): mov 0x18(%rbx),%r14
3f8f(5): mov $0x5,%edx
3f94(4): mov 0x10(%rbx),%r13
3f98(2): xor %edi,%edi
3f9a(3): mov (%rbx),%rbx
3f9d(4): mov %r8,(%rsp)
3fa1(5): call 0xffffd42f(%rip)
3fa6(4): sub $0x8,%rsp
3faa(3): mov %r13,%r9
3fad(2): push %r12
3faf(2): push %r15
3fb1(2): push %r14
3fb3(5): mov 0x20(%rsp),%r8
3fb8(3): mov %rbx,%rcx
3fbb(3): mov %rax,%rdx
3fbe(3): mov %rbp,%rdi
3fc1(5): mov $0x1,%esi
3fc6(2): xor %eax,%eax
3fc8(5): call 0xffffd5f8(%rip)
3fcd(4): add $0x20,%rsp
3fd1(4): add $0x28,%rsp
3fd5(1): pop %rbx
3fd6(1): pop %rbp
3fd7(2): pop %r12
3fd9(2): pop %r13
3fdb(2): pop %r14
3fdd(2): pop %r15
3fdf(1): ret near (%rsp)
3fe0(4): mov 0x10(%rbx),%r9
3fe4(4): mov 0x30(%rbx),%r13
3fe8(7): lea 0x1659(%rip),%rsi
3fef(4): mov 0x28(%rbx),%r12
3ff3(4): mov 0x20(%rbx),%r15
3ff7(5): mov $0x5,%edx
3ffc(4): mov 0x18(%rbx),%r14
4000(4): mov 0x8(%rbx),%r8
4004(2): xor %edi,%edi
4006(5): mov %r9,0x8(%rsp)
400b(3): mov (%rbx),%rbx
400e(4): mov %r8,(%rsp)
4012(5): call 0xffffd3be(%rip)
4017(2): push %r13
4019(2): push %r12
401b(2): push %r15
401d(2): push %r14
401f(5): mov 0x28(%rsp),%r9
4024(2): jmp 0xffffff8f(%rip)
4026(a): nop 0x0(%rax,%rax,1)
4030(4): mov 0x40(%rbx),%r10
4034(4): mov 0x38(%rbx),%r9
4038(5): mov $0x5,%edx
403d(4): mov 0x10(%rbx),%rax
4041(4): mov 0x8(%rbx),%r8
4045(7): lea 0x1694(%rip),%rsi
404c(4): mov 0x30(%rbx),%r13
4050(4): mov 0x28(%rbx),%r12
4054(4): mov 0x20(%rbx),%r15
4058(4): mov 0x18(%rbx),%r14
405c(5): mov %r10,0x18(%rsp)
4061(5): mov %r9,0x10(%rsp)
4066(4): mov %rax,(%rsp)
406a(5): mov %r8,0x8(%rsp)
406f(3): mov (%rbx),%rbx
4072(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4080(3): xor %r9d,%r9d
4083(4): cmp $0x0,(%r8)
4087(2): jz 0x14(%rip)
4089(7): nop 0x0(%rax)
4090(4): add $0x1,%r9
4094(5): cmp $0x0,0x0(%r8,%r9,8)
4099(2): jnz 0xfffffff7(%rip)
409b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
40a0(4): sub $0x68,%rsp
40a4(3): mov %r8,%r10
40a7(3): xor %r9d,%r9d
40aa(9): mov $0x28,%rax
40b3(5): mov %rax,0x58(%rsp)
40b8(2): xor %eax,%eax
40ba(3): mov %rsp,%r8
40bd(3): nop (%rax)
40c0(3): mov (%r10),%eax
40c3(3): cmp $0x2f,%eax
40c6(2): jnbe 0x44(%rip)
40c8(3): mov %eax,%r11d
40cb(4): add 0x10(%r10),%r11
40cf(3): add $0x8,%eax
40d2(3): mov %eax,(%r10)
40d5(3): mov (%r11),%rax
40d8(3): test %rax,%rax
40db(4): mov %rax,0x0(%r8,%r9,8)
40df(2): jz 0xc(%rip)
40e1(4): add $0x1,%r9
40e5(4): cmp $0xa,%r9
40e9(2): jnz 0xffffffd7(%rip)
40eb(5): call 0xfffffb75(%rip)
40f0(5): mov 0x58(%rsp),%rax
40f5(9): xor $0x28,%rax
40fe(2): jnz 0x7(%rip)
4100(4): add $0x68,%rsp
4104(1): ret near (%rsp)
4105(5): call 0xffffd30b(%rip)
410a(4): mov 0x8(%r10),%r11
410e(4): lea 0x8(%r11),%rax
4112(4): mov %rax,0x8(%r10)
4116(2): jmp 0xffffffbf(%rip)

"version_etc" :
4120(1): push %rbp
4121(1): push %rbx
4122(6): mov $0x20,%r10d
4128(3): xor %r11d,%r11d
412b(7): sub $0xb8,%rsp
4132(9): mov $0x28,%rax
413b(5): mov %rax,0x78(%rsp)
4140(2): xor %eax,%eax
4142(8): lea 0xd0(%rsp),%rax
414a(8): mov %r8,0xa0(%rsp)
4152(8): lea 0xd0(%rsp),%rbx
415a(5): lea 0x20(%rsp),%r8
415f(8): mov %r9,0xa8(%rsp)
4167(8): mov $0x20,0x8(%rsp)
416f(5): mov %rax,0x10(%rsp)
4174(8): lea 0x80(%rsp),%rax
417c(3): xor %r9d,%r9d
417f(5): mov %rax,0x18(%rsp)
4184(3): mov %rax,%rbp
4187(9): nop 0x0(%rax,%rax,1)
4190(4): cmp $0x2f,%r10d
4194(2): jnbe 0x58(%rip)
4196(3): mov %r10d,%eax
4199(6): mov $0x1,%r11d
419f(4): add $0x8,%r10d
41a3(3): add %rbp,%rax
41a6(3): mov (%rax),%rax
41a9(3): test %rax,%rax
41ac(4): mov %rax,0x0(%r8,%r9,8)
41b0(2): jz 0xc(%rip)
41b2(4): add $0x1,%r9
41b6(4): cmp $0xa,%r9
41ba(2): jnz 0xffffffd6(%rip)
41bc(3): test %r11b,%r11b
41bf(2): jnz 0x26(%rip)
41c1(5): call 0xfffffa9f(%rip)
41c6(5): mov 0x78(%rsp),%rax
41cb(9): xor $0x28,%rax
41d4(2): jnz 0xc(%rip)
41d6(7): add $0xb8,%rsp
41dd(1): pop %rbx
41de(1): pop %rbp
41df(1): ret near (%rsp)
41e0(5): call 0xffffd230(%rip)
41e5(5): mov %r10d,0x8(%rsp)
41ea(2): jmp 0xffffffd7(%rip)
41ec(3): mov %rbx,%rax
41ef(4): add $0x8,%rbx
41f3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4200(1): push %rbx
4201(7): lea 0x12ba(%rip),%rsi
4208(5): mov $0x5,%edx
420d(2): xor %edi,%edi
420f(5): call 0xffffd1c1(%rip)
4214(7): lea 0x12bc(%rip),%rdx
421b(3): mov %rax,%rsi
421e(5): mov $0x1,%edi
4223(2): xor %eax,%eax
4225(5): call 0xffffd31b(%rip)
422a(7): lea 0x12bc(%rip),%rsi
4231(5): mov $0x5,%edx
4236(2): xor %edi,%edi
4238(5): call 0xffffd198(%rip)
423d(7): lea 0xbc4(%rip),%rcx
4244(7): lea 0x952(%rip),%rdx
424b(3): mov %rax,%rsi
424e(5): mov $0x1,%edi
4253(2): xor %eax,%eax
4255(5): call 0xffffd2eb(%rip)
425a(7): mov 0x202e27(%rip),%rbx
4261(7): lea 0x14b8(%rip),%rsi
4268(2): xor %edi,%edi
426a(5): mov $0x5,%edx
426f(5): call 0xffffd161(%rip)
4274(3): mov %rbx,%rsi
4277(3): mov %rax,%rdi
427a(1): pop %rbx
427b(5): jmp 0xffffd215(%rip)

"xmalloc" :
4280(1): push %rbx
4281(3): mov %rdi,%rbx
4284(5): call 0xffffd25c(%rip)
4289(3): test %rax,%rax
428c(2): jnz 0x7(%rip)
428e(3): test %rbx,%rbx
4291(2): jnz 0x4(%rip)
4293(1): pop %rbx
4294(1): ret near (%rsp)
4295(5): call 0x23b(%rip)

"xnmalloc" :
42a0(3): mov %rdi,%rax
42a3(3): mul %rax,%rsi,%rdx
42a6(3): mov %rax,%rdi
42a9(3): seto %al
42ac(3): test %rdi,%rdi
42af(2): js 0xc(%rip)
42b1(3): movzx %al,%eax
42b4(3): test %rax,%rax
42b7(2): jnz 0x4(%rip)
42b9(2): jmp 0xffffffc7(%rip)
42bb(4): sub $0x8,%rsp
42bf(5): call 0x211(%rip)

"xrealloc" :
42e0(3): test %rsi,%rsi
42e3(1): push %rbx
42e4(3): mov %rsi,%rbx
42e7(2): jnz 0x7(%rip)
42e9(3): test %rdi,%rdi
42ec(2): jnz 0x1c(%rip)
42ee(3): mov %rbx,%rsi
42f1(5): call 0xffffd22f(%rip)
42f6(3): test %rax,%rax
42f9(2): jnz 0x7(%rip)
42fb(3): test %rbx,%rbx
42fe(2): jnz 0x13(%rip)
4300(1): pop %rbx
4301(1): ret near (%rsp)
4302(6): nop 0x0(%rax,%rax,1)
4308(5): call 0xffffd018(%rip)
430d(2): xor %eax,%eax
430f(1): pop %rbx
4310(1): ret near (%rsp)
4311(5): call 0x1bf(%rip)

"xnrealloc" :
4320(3): mov %rsi,%rax
4323(3): mul %rax,%rdx,%rdx
4326(3): mov %rax,%rsi
4329(3): seto %al
432c(3): test %rsi,%rsi
432f(2): js 0xc(%rip)
4331(3): movzx %al,%eax
4334(3): test %rax,%rax
4337(2): jnz 0x4(%rip)
4339(2): jmp 0xffffffa7(%rip)
433b(4): sub $0x8,%rsp
433f(5): call 0x191(%rip)

"x2nrealloc" :
4350(3): test %rdi,%rdi
4353(3): mov %rdx,%r9
4356(3): mov (%rsi),%rcx
4359(2): jz 0x37(%rip)
435b(2): xor %edx,%edx
435d(a): mov $0x6148914691236517204,%rax
4367(3): div %r9,%rax
436a(3): cmp %rcx,%rax
436d(2): jbe 0x3e(%rip)
436f(3): mov %rcx,%rax
4372(3): shr $0x1,%rax
4375(5): lea 0x1(%rax,%rcx,1),%rcx
437a(3): mov %rcx,(%rsi)
437d(4): imul %r9,%rcx
4381(3): mov %rcx,%rsi
4384(5): jmp 0xffffff5c(%rip)
4389(7): nop 0x0(%rax)
4390(3): test %rcx,%rcx
4393(2): jz 0x25(%rip)
4395(3): mov %rcx,%rax
4398(3): mul %rax,%r9,%rdx
439b(3): seto %dl
439e(3): test %rax,%rax
43a1(3): movzx %dl,%edx
43a4(2): js 0x7(%rip)
43a6(3): test %rdx,%rdx
43a9(2): jz 0xffffffd1(%rip)
43ab(4): sub $0x8,%rsp
43af(5): call 0x121(%rip)
43b4(4): nop 0x0(%rax)
43b8(2): xor %edx,%edx
43ba(5): mov $0x80,%eax
43bf(3): xor %r8d,%r8d
43c2(3): div %r9,%rax
43c5(3): test %rax,%rax
43c8(4): setz %r8b
43cc(4): lea 0x0(%r8,%rax,1),%rcx
43d0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
43e0(3): test %rdi,%rdi
43e3(3): mov (%rsi),%rax
43e6(2): jz 0x2a(%rip)
43e8(a): mov $0x6148914691236517203,%rdx
43f2(3): cmp %rdx,%rax
43f5(2): jnbe 0x2c(%rip)
43f7(3): mov %rax,%rdx
43fa(3): shr $0x1,%rdx
43fd(5): lea 0x1(%rdx,%rax,1),%rax
4402(3): mov %rax,(%rsi)
4405(3): mov %rax,%rsi
4408(5): jmp 0xfffffed8(%rip)
440d(3): nop (%rax)
4410(3): test %rax,%rax
4413(5): mov $0x80,%edx
4418(4): cmove %rdx,%rax
441c(3): test %rax,%rax
441f(2): jns 0xffffffe3(%rip)
4421(4): sub $0x8,%rsp
4425(5): call 0xab(%rip)

"xzalloc" :
4430(1): push %rbx
4431(3): mov %rdi,%rbx
4434(5): call 0xfffffe4c(%rip)
4439(3): mov %rbx,%rdx
443c(2): xor %esi,%esi
443e(3): mov %rax,%rdi
4441(1): pop %rbx
4442(5): jmp 0xffffd01e(%rip)

"xcalloc" :
4450(3): mov %rdi,%rax
4453(4): sub $0x8,%rsp
4457(3): mul %rax,%rsi,%rdx
445a(3): seto %dl
445d(3): test %rax,%rax
4460(2): js 0x19(%rip)
4462(3): movzx %dl,%edx
4465(3): test %rdx,%rdx
4468(2): jnz 0x11(%rip)
446a(5): call 0xffffd036(%rip)
446f(3): test %rax,%rax
4472(2): jz 0x7(%rip)
4474(4): add $0x8,%rsp
4478(1): ret near (%rsp)
4479(5): call 0x57(%rip)

"xmemdup" :
4480(1): push %rbp
4481(1): push %rbx
4482(3): mov %rdi,%rbp
4485(3): mov %rsi,%rdi
4488(3): mov %rsi,%rbx
448b(4): sub $0x8,%rsp
448f(5): call 0xfffffdf1(%rip)
4494(4): add $0x8,%rsp
4498(3): mov %rbx,%rdx
449b(3): mov %rbp,%rsi
449e(1): pop %rbx
449f(1): pop %rbp
44a0(3): mov %rax,%rdi
44a3(5): jmp 0xffffd00d(%rip)

"xstrdup" :
44b0(1): push %rbx
44b1(3): mov %rdi,%rbx
44b4(5): call 0xffffcf3c(%rip)
44b9(3): mov %rbx,%rdi
44bc(4): lea 0x1(%rax),%rsi
44c0(1): pop %rbx
44c1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
44d0(7): lea 0x12f8(%rip),%rsi
44d7(4): sub $0x8,%rsp
44db(5): mov $0x5,%edx
44e0(2): xor %edi,%edi
44e2(5): call 0xffffceee(%rip)
44e7(6): mov 0x202b2b(%rip),%edi
44ed(7): lea 0xa4d(%rip),%rdx
44f4(3): mov %rax,%rcx
44f7(2): xor %esi,%esi
44f9(2): xor %eax,%eax
44fb(5): call 0xffffd055(%rip)
4500(5): call 0xffffce30(%rip)

"rpl_fcntl" :
4510(2): push %r12
4512(1): push %rbp
4513(2): mov %edi,%ebp
4515(1): push %rbx
4516(4): sub $0x50,%rsp
451a(9): mov $0x28,%rax
4523(5): mov %rax,0x18(%rsp)
4528(2): xor %eax,%eax
452a(5): lea 0x70(%rsp),%rax
452f(2): test %esi,%esi
4531(5): mov %rdx,0x30(%rsp)
4536(5): mov %rcx,0x38(%rsp)
453b(5): mov %r8,0x40(%rsp)
4540(5): mov %rax,0x8(%rsp)
4545(5): lea 0x20(%rsp),%rax
454a(5): mov %r9,0x48(%rsp)
454f(7): mov $0x10,(%rsp)
4556(5): mov %rax,0x10(%rsp)
455b(6): jz 0x207(%rip)
4561(6): cmp $0x406,%esi
4567(2): jnz 0x49(%rip)
4569(5): mov 0x10(%rsp),%rax
456e(7): cmp $0x0,0x202ca3(%rip)
4575(7): mov $0x18,(%rsp)
457c(4): mov 0x10(%rax),%r12d
4580(3): mov %r12d,%edx
4583(6): js 0x130(%rip)
4589(2): xor %eax,%eax
458b(5): mov $0x406,%esi
4590(5): call 0xffffce00(%rip)
4595(2): test %eax,%eax
4597(2): mov %eax,%ebx
4599(6): js 0x18f(%rip)
459f(a): mov $0x1,0x202c6f(%rip)
45a9(2): jmp 0x47(%rip)
45ab(5): nop 0x0(%rax,%rax,1)
45b0(3): cmp $0xb,%esi
45b3(2): jz 0x2d(%rip)
45b5(2): jnle 0x5b(%rip)
45b7(3): cmp $0x4,%esi
45ba(6): jz 0xd6(%rip)
45c0(6): jnle 0xc0(%rip)
45c6(3): cmp $0x2,%esi
45c9(6): jz 0xc7(%rip)
45cf(2): jnle 0x11(%rip)
45d1(3): cmp $0x1,%esi
45d4(2): jnz 0x64(%rip)
45d6(a): nop 0x0(%rax,%rax,1)
45e0(2): mov %ebp,%edi
45e2(2): xor %eax,%eax
45e4(5): call 0xffffcdac(%rip)
45e9(2): mov %eax,%ebx
45eb(5): nop 0x0(%rax,%rax,1)
45f0(5): mov 0x18(%rsp),%rcx
45f5(9): xor $0x28,%rcx
45fe(2): mov %ebx,%eax
4600(6): jnz 0x15d(%rip)
4606(4): add $0x50,%rsp
460a(1): pop %rbx
460b(1): pop %rbp
460c(2): pop %r12
460e(1): ret near (%rsp)
460f(1): nop 
4610(6): cmp $0x407,%esi
4616(2): jnle 0x4a(%rip)
4618(6): cmp $0x406,%esi
461e(2): jnl 0x72(%rip)
4620(6): cmp $0x401,%esi
4626(2): jz 0xffffffba(%rip)
4628(6): cmp $0x402,%esi
462e(2): jz 0x62(%rip)
4630(6): cmp $0x400,%esi
4636(2): jz 0x5a(%rip)
4638(3): mov (%rsp),%eax
463b(3): cmp $0x2f,%eax
463e(6): jnbe 0x13c(%rip)
4644(5): add 0x10(%rsp),%rax
4649(3): mov (%rax),%rdx
464c(2): mov %ebp,%edi
464e(2): xor %eax,%eax
4650(5): call 0xffffcd40(%rip)
4655(2): mov %eax,%ebx
4657(2): jmp 0xffffff99(%rip)
4659(7): nop 0x0(%rax)
4660(6): cmp $0x409,%esi
4666(2): jz 0x2a(%rip)
4668(6): jl 0xffffff78(%rip)
466e(6): cmp $0x40a,%esi
4674(2): jnz 0xffffffc4(%rip)
4676(5): jmp 0xffffff6a(%rip)
467b(5): nop 0x0(%rax,%rax,1)
4680(3): cmp $0x9,%esi
4683(6): jz 0xffffff5d(%rip)
4689(2): jnle 0x7(%rip)
468b(3): cmp $0x8,%esi
468e(2): jnz 0xffffffaa(%rip)
4690(3): mov (%rsp),%eax
4693(3): cmp $0x2f,%eax
4696(6): jnbe 0xee(%rip)
469c(5): add 0x10(%rsp),%rax
46a1(2): mov (%rax),%edx
46a3(2): mov %ebp,%edi
46a5(2): xor %eax,%eax
46a7(5): call 0xffffcce9(%rip)
46ac(2): mov %eax,%ebx
46ae(5): jmp 0xffffff42(%rip)
46b3(2): xor %esi,%esi
46b5(2): xor %eax,%eax
46b7(5): call 0xffffccd9(%rip)
46bc(2): test %eax,%eax
46be(2): mov %eax,%ebx
46c0(6): js 0xffffff30(%rip)
46c6(7): cmp $0xff,0x202b4b(%rip)
46cd(6): jnz 0xffffff23(%rip)
46d3(2): xor %eax,%eax
46d5(5): mov $0x1,%esi
46da(2): mov %ebx,%edi
46dc(5): call 0xffffccb4(%rip)
46e1(2): test %eax,%eax
46e3(2): js 0x1e(%rip)
46e5(3): or $0x1,%eax
46e8(5): mov $0x2,%esi
46ed(2): mov %ebx,%edi
46ef(2): mov %eax,%edx
46f1(2): xor %eax,%eax
46f3(5): call 0xffffcc9d(%rip)
46f8(3): cmp $0xff,%eax
46fb(6): jnz 0xfffffef5(%rip)
4701(5): call 0xffffcc3f(%rip)
4706(3): mov (%rax),%r12d
4709(3): mov %rax,%rbp
470c(2): mov %ebx,%edi
470e(5): call 0xffffcd62(%rip)
4713(5): mov $0xffffffff,%ebx
4718(4): mov %r12d,0x0(%rbp)
471c(5): jmp 0xfffffed4(%rip)
4721(7): nop 0x0(%rax)
4728(5): call 0xffffcc18(%rip)
472d(3): cmp $0x16,(%rax)
4730(6): jnz 0xfffffe6f(%rip)
4736(2): xor %esi,%esi
4738(2): xor %eax,%eax
473a(3): mov %r12d,%edx
473d(2): mov %ebp,%edi
473f(5): call 0xffffcc51(%rip)
4744(2): test %eax,%eax
4746(2): mov %eax,%ebx
4748(6): js 0xfffffea8(%rip)
474e(a): mov $0xffffffff,0x202ac0(%rip)
4758(5): jmp 0xffffff7b(%rip)
475d(5): call 0xffffccb3(%rip)
4762(5): mov 0x10(%rsp),%rax
4767(2): xor %esi,%esi
4769(3): mov 0x10(%rax),%edx
476c(2): xor %eax,%eax
476e(5): call 0xffffcc22(%rip)
4773(2): mov %eax,%ebx
4775(5): jmp 0xfffffe7b(%rip)
477a(5): mov 0x8(%rsp),%rax
477f(5): jmp 0xfffffeca(%rip)
4784(5): mov 0x8(%rsp),%rax
4789(5): jmp 0xffffff18(%rip)

"rpl_mbrtowc" :
4790(2): push %r13
4792(2): push %r12
4794(3): mov %rsi,%r13
4797(1): push %rbp
4798(1): push %rbx
4799(3): mov %rdi,%rbx
479c(3): mov %rdx,%r12
479f(4): sub $0x18,%rsp
47a3(9): mov $0x28,%rax
47ac(5): mov %rax,0x8(%rsp)
47b1(2): xor %eax,%eax
47b3(5): lea 0x4(%rsp),%rax
47b8(3): test %rdi,%rdi
47bb(4): cmove %rax,%rbx
47bf(3): mov %rbx,%rdi
47c2(5): call 0xffffcc6e(%rip)
47c7(4): cmp $0xfffffffd,%rax
47cb(3): mov %rax,%rbp
47ce(2): jbe 0x22(%rip)
47d0(3): test %r12,%r12
47d3(2): jz 0x1d(%rip)
47d5(2): xor %edi,%edi
47d7(5): call 0xc9(%rip)
47dc(2): test %al,%al
47de(2): jnz 0x12(%rip)
47e0(5): movzx 0x0(%r13),%eax
47e5(5): mov $0x1,%ebp
47ea(2): mov %eax,(%rbx)
47ec(4): nop 0x0(%rax)
47f0(5): mov 0x8(%rsp),%rdx
47f5(9): xor $0x28,%rdx
47fe(3): mov %rbp,%rax
4801(2): jnz 0xd(%rip)
4803(4): add $0x18,%rsp
4807(1): pop %rbx
4808(1): pop %rbp
4809(2): pop %r12
480b(2): pop %r13
480d(1): ret near (%rsp)
480e(5): call 0xffffcc02(%rip)

"close_stream" :
4820(2): push %r12
4822(1): push %rbp
4823(3): mov %rdi,%rbp
4826(1): push %rbx
4827(5): call 0xffffcb59(%rip)
482c(3): mov 0x0(%rbp),%ebx
482f(3): mov %rbp,%rdi
4832(3): mov %rax,%r12
4835(5): call 0x10b(%rip)
483a(3): and $0x20,%ebx
483d(2): test %ebx,%ebx
483f(2): jnz 0x19(%rip)
4841(2): test %eax,%eax
4843(2): jz 0xc(%rip)
4845(3): test %r12,%r12
4848(5): mov $0xffffffff,%eax
484d(2): jz 0x3b(%rip)
484f(1): pop %rbx
4850(1): pop %rbp
4851(2): pop %r12
4853(1): ret near (%rsp)
4854(4): nop 0x0(%rax)
4858(2): test %eax,%eax
485a(2): jnz 0x1e(%rip)
485c(5): call 0xffffcae4(%rip)
4861(6): mov $0x0,(%rax)
4867(5): mov $0xffffffff,%eax
486c(1): pop %rbx
486d(1): pop %rbp
486e(2): pop %r12
4870(1): ret near (%rsp)
4871(7): nop 0x0(%rax)
4878(1): pop %rbx
4879(5): mov $0xffffffff,%eax
487e(1): pop %rbp
487f(2): pop %r12
4881(1): ret near (%rsp)
4882(6): nop 0x0(%rax,%rax,1)
4888(5): call 0xffffcab8(%rip)
488d(3): cmp $0x9,(%rax)
4890(1): pop %rbx
4891(1): pop %rbp
4892(2): pop %r12
4894(3): setnz %al
4897(3): movzx %al,%eax
489a(2): neg %eax
489c(1): ret near (%rsp)

"hard_locale" :
48a0(4): sub $0x8,%rsp
48a4(2): xor %esi,%esi
48a6(5): call 0xffffcc8a(%rip)
48ab(3): mov %rax,%rdx
48ae(5): mov $0x1,%eax
48b3(3): test %rdx,%rdx
48b6(2): jz 0x1f(%rip)
48b8(7): lea 0xf21(%rip),%rdi
48bf(5): mov $0x2,%ecx
48c4(3): mov %rdx,%rsi
48c7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
48c9(3): setnbe %cl
48cc(3): sbb $0x0,%cl
48cf(2): xor %eax,%eax
48d1(2): test %cl,%cl
48d3(2): jnz 0xd(%rip)
48d5(4): add $0x8,%rsp
48d9(1): ret near (%rsp)
48da(6): nop 0x0(%rax,%rax,1)
48e0(7): lea 0xefb(%rip),%rdi
48e7(5): mov $0x6,%ecx
48ec(3): mov %rdx,%rsi
48ef(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
48f1(3): setnbe %al
48f4(2): sbb $0x0,%al
48f6(2): test %al,%al
48f8(3): setnz %al
48fb(4): add $0x8,%rsp
48ff(1): ret near (%rsp)

"locale_charset" :
4900(4): sub $0x8,%rsp
4904(5): mov $0xe,%edi
4909(5): call 0xffffcbf7(%rip)
490e(3): test %rax,%rax
4911(2): jz 0x1f(%rip)
4913(3): cmp $0x0,(%rax)
4916(7): lea 0xecb(%rip),%rdx
491d(4): cmove %rdx,%rax
4921(4): add $0x8,%rsp
4925(1): ret near (%rsp)
4926(a): nop 0x0(%rax,%rax,1)
4930(7): lea 0xeb1(%rip),%rax
4937(4): add $0x8,%rsp
493b(1): ret near (%rsp)

"rpl_fclose" :
4940(2): push %r12
4942(1): push %rbp
4943(1): push %rbx
4944(3): mov %rdi,%rbx
4947(5): call 0xffffcb79(%rip)
494c(2): test %eax,%eax
494e(3): mov %rbx,%rdi
4951(2): js 0x56(%rip)
4953(5): call 0xffffcbbd(%rip)
4958(2): test %eax,%eax
495a(2): jnz 0x2e(%rip)
495c(3): mov %rbx,%rdi
495f(5): call 0x61(%rip)
4964(2): test %eax,%eax
4966(2): jz 0x3e(%rip)
4968(5): call 0xffffc9d8(%rip)
496d(3): mov (%rax),%r12d
4970(3): mov %rbx,%rdi
4973(3): mov %rax,%rbp
4976(5): call 0xffffca3a(%rip)
497b(3): test %r12d,%r12d
497e(2): jnz 0x32(%rip)
4980(1): pop %rbx
4981(1): pop %rbp
4982(2): pop %r12
4984(1): ret near (%rsp)
4985(3): nop (%rax)
4988(3): mov %rbx,%rdi
498b(5): call 0xffffcb35(%rip)
4990(2): xor %esi,%esi
4992(5): mov $0x1,%edx
4997(2): mov %eax,%edi
4999(5): call 0xffffcab7(%rip)
499e(4): cmp $0xffffffff,%rax
49a2(2): jnz 0xffffffba(%rip)
49a4(3): mov %rbx,%rdi
49a7(1): pop %rbx
49a8(1): pop %rbp
49a9(2): pop %r12
49ab(5): jmp 0xffffca05(%rip)
49b0(4): mov %r12d,0x0(%rbp)
49b4(5): mov $0xffffffff,%eax
49b9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
49c0(3): test %rdi,%rdi
49c3(1): push %rbx
49c4(3): mov %rdi,%rbx
49c7(2): jz 0x13(%rip)
49c9(5): call 0xffffcb47(%rip)
49ce(2): test %eax,%eax
49d0(2): jz 0xa(%rip)
49d2(6): test $0x100,(%rbx)
49d8(2): jnz 0x10(%rip)
49da(3): mov %rbx,%rdi
49dd(1): pop %rbx
49de(5): jmp 0xffffcb12(%rip)
49e3(5): nop 0x0(%rax,%rax,1)
49e8(3): mov %rbx,%rdi
49eb(5): mov $0x1,%edx
49f0(2): xor %esi,%esi
49f2(5): call 0xe(%rip)
49f7(3): mov %rbx,%rdi
49fa(1): pop %rbx
49fb(5): jmp 0xffffcaf5(%rip)

"rpl_fseeko" :
4a00(4): mov 0x8(%rdi),%rax
4a04(4): cmp %rax,0x10(%rdi)
4a08(2): jz 0x8(%rip)
4a0a(5): jmp 0xffffcb76(%rip)
4a0f(1): nop 
4a10(4): mov 0x20(%rdi),%rax
4a14(4): cmp %rax,0x28(%rdi)
4a18(2): jnz 0xfffffff2(%rip)
4a1a(5): cmp $0x0,0x48(%rdi)
4a1f(2): jnz 0xffffffeb(%rip)
4a21(2): push %r12
4a23(1): push %rbp
4a24(3): mov %edx,%r12d
4a27(1): push %rbx
4a28(3): mov %rsi,%rbp
4a2b(3): mov %rdi,%rbx
4a2e(5): call 0xffffca92(%rip)
4a33(3): mov %r12d,%edx
4a36(3): mov %rbp,%rsi
4a39(2): mov %eax,%edi
4a3b(5): call 0xffffca15(%rip)
4a40(4): cmp $0xffffffff,%rax
4a44(2): jz 0xe(%rip)
4a46(3): and $0xef,(%rbx)
4a49(7): mov %rax,0x90(%rbx)
4a50(2): xor %eax,%eax
4a52(1): pop %rbx
4a53(1): pop %rbp
4a54(2): pop %r12
4a56(1): ret near (%rsp)

"__libc_csu_init" :
4a60(2): push %r15
4a62(2): push %r14
4a64(3): mov %rdx,%r15
4a67(2): push %r13
4a69(2): push %r12
4a6b(7): lea 0x2020de(%rip),%r12
4a72(1): push %rbp
4a73(7): lea 0x2020de(%rip),%rbp
4a7a(1): push %rbx
4a7b(3): mov %edi,%r13d
4a7e(3): mov %rsi,%r14
4a81(3): sub %r12,%rbp
4a84(4): sub $0x8,%rsp
4a88(4): sar $0x3,%rbp
4a8c(5): call 0xffffc864(%rip)
4a91(3): test %rbp,%rbp
4a94(2): jz 0x22(%rip)
4a96(2): xor %ebx,%ebx
4a98(8): nop 0x0(%rax,%rax,1)
4aa0(3): mov %r15,%rdx
4aa3(3): mov %r14,%rsi
4aa6(3): mov %r13d,%edi
4aa9(4): call 0x0(%r12,%rbx,8)
4aad(4): add $0x1,%rbx
4ab1(3): cmp %rbx,%rbp
4ab4(2): jnz 0xffffffec(%rip)
4ab6(4): add $0x8,%rsp
4aba(1): pop %rbx
4abb(1): pop %rbp
4abc(2): pop %r12
4abe(2): pop %r13
4ac0(2): pop %r14
4ac2(2): pop %r15
4ac4(1): ret near (%rsp)

"atexit" :
4ae0(7): mov 0x202521(%rip),%rdx
4ae7(2): xor %esi,%esi
4ae9(5): jmp 0xffffcaa7(%rip)

"_fini" :
4af0(4): sub $0x8,%rsp
4af4(4): add $0x8,%rsp
4af8(1): ret near (%rsp)

