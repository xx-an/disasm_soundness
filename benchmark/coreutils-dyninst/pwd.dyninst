
"getenv@plt" :
1480(6): jmp 0x20699a(%rip)
1486(5): push $0x0

"free@plt" :
1490(6): jmp 0x206992(%rip)
1496(5): push $0x1

"abort@plt" :
14a0(6): jmp 0x20698a(%rip)
14a6(5): push $0x2

"__errno_location@plt" :
14b0(6): jmp 0x206982(%rip)
14b6(5): push $0x3

"strncmp@plt" :
14c0(6): jmp 0x20697a(%rip)
14c6(5): push $0x4

"_exit@plt" :
14d0(6): jmp 0x206972(%rip)
14d6(5): push $0x5

"__fpending@plt" :
14e0(6): jmp 0x20696a(%rip)
14e6(5): push $0x6

"puts@plt" :
14f0(6): jmp 0x206962(%rip)
14f6(5): push $0x7

"textdomain@plt" :
1500(6): jmp 0x20695a(%rip)
1506(5): push $0x8

"fclose@plt" :
1510(6): jmp 0x206952(%rip)
1516(5): push $0x9

"opendir@plt" :
1520(6): jmp 0x20694a(%rip)
1526(5): push $0xa

"bindtextdomain@plt" :
1530(6): jmp 0x206942(%rip)
1536(5): push $0xb

"dcgettext@plt" :
1540(6): jmp 0x20693a(%rip)
1546(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
1550(6): jmp 0x206932(%rip)
1556(5): push $0xd

"strlen@plt" :
1560(6): jmp 0x20692a(%rip)
1566(5): push $0xe

"__lxstat@plt" :
1570(6): jmp 0x206922(%rip)
1576(5): push $0xf

"chdir@plt" :
1580(6): jmp 0x20691a(%rip)
1586(5): push $0x10

"__stack_chk_fail@plt" :
1590(6): jmp 0x206912(%rip)
1596(5): push $0x11

"getopt_long@plt" :
15a0(6): jmp 0x20690a(%rip)
15a6(5): push $0x12

"mbrtowc@plt" :
15b0(6): jmp 0x206902(%rip)
15b6(5): push $0x13

"strrchr@plt" :
15c0(6): jmp 0x2068fa(%rip)
15c6(5): push $0x14

"lseek@plt" :
15d0(6): jmp 0x2068f2(%rip)
15d6(5): push $0x15

"memset@plt" :
15e0(6): jmp 0x2068ea(%rip)
15e6(5): push $0x16

"getcwd@plt" :
15f0(6): jmp 0x2068e2(%rip)
15f6(5): push $0x17

"closedir@plt" :
1600(6): jmp 0x2068da(%rip)
1606(5): push $0x18

"memcmp@plt" :
1610(6): jmp 0x2068d2(%rip)
1616(5): push $0x19

"fputs_unlocked@plt" :
1620(6): jmp 0x2068ca(%rip)
1626(5): push $0x1a

"calloc@plt" :
1630(6): jmp 0x2068c2(%rip)
1636(5): push $0x1b

"dirfd@plt" :
1640(6): jmp 0x2068ba(%rip)
1646(5): push $0x1c

"memcpy@plt" :
1650(6): jmp 0x2068b2(%rip)
1656(5): push $0x1d

"fileno@plt" :
1660(6): jmp 0x2068aa(%rip)
1666(5): push $0x1e

"__xstat@plt" :
1670(6): jmp 0x2068a2(%rip)
1676(5): push $0x1f

"readdir@plt" :
1680(6): jmp 0x20689a(%rip)
1686(5): push $0x20

"malloc@plt" :
1690(6): jmp 0x206892(%rip)
1696(5): push $0x21

"fflush@plt" :
16a0(6): jmp 0x20688a(%rip)
16a6(5): push $0x22

"nl_langinfo@plt" :
16b0(6): jmp 0x206882(%rip)
16b6(5): push $0x23

"__fxstat@plt" :
16c0(6): jmp 0x20687a(%rip)
16c6(5): push $0x24

"__freading@plt" :
16d0(6): jmp 0x206872(%rip)
16d6(5): push $0x25

"fchdir@plt" :
16e0(6): jmp 0x20686a(%rip)
16e6(5): push $0x26

"realloc@plt" :
16f0(6): jmp 0x206862(%rip)
16f6(5): push $0x27

"setlocale@plt" :
1700(6): jmp 0x20685a(%rip)
1706(5): push $0x28

"__printf_chk@plt" :
1710(6): jmp 0x206852(%rip)
1716(5): push $0x29

"error@plt" :
1720(6): jmp 0x20684a(%rip)
1726(5): push $0x2a

"fseeko@plt" :
1730(6): jmp 0x206842(%rip)
1736(5): push $0x2b

"__cxa_atexit@plt" :
1740(6): jmp 0x20683a(%rip)
1746(5): push $0x2c

"exit@plt" :
1750(6): jmp 0x206832(%rip)
1756(5): push $0x2d

"fwrite@plt" :
1760(6): jmp 0x20682a(%rip)
1766(5): push $0x2e

"__fprintf_chk@plt" :
1770(6): jmp 0x206822(%rip)
1776(5): push $0x2f

"mbsinit@plt" :
1780(6): jmp 0x20681a(%rip)
1786(5): push $0x30

"iswprint@plt" :
1790(6): jmp 0x206812(%rip)
1796(5): push $0x31

"strstr@plt" :
17a0(6): jmp 0x20680a(%rip)
17a6(5): push $0x32

"__ctype_b_loc@plt" :
17b0(6): jmp 0x206802(%rip)
17b6(5): push $0x33

".plt.got" :
17c0(6): jmp 0x20681a(%rip)
17c6(2): nop 

"_init" :
1458(4): sub $0x8,%rsp
145c(7): mov 0x206b6d(%rip),%rax
1463(3): test %rax,%rax
1466(2): jz 0x4(%rip)
1468(2): call %rax
146a(4): add $0x8,%rsp
146e(1): ret near (%rsp)

"main" :
17d0(2): push %r12
17d2(1): push %rbp
17d3(2): mov %edi,%ebp
17d5(1): push %rbx
17d6(7): lea 0x3a05(%rip),%rdi
17dd(3): mov %rsi,%rbx
17e0(5): call 0xfffffca0(%rip)
17e5(3): mov (%rbx),%rdi
17e8(3): test %rax,%rax
17eb(4): setnz %r12b
17ef(5): call 0xed1(%rip)
17f4(7): lea 0x3943(%rip),%rsi
17fb(5): mov $0x6,%edi
1800(5): call 0xffffff00(%rip)
1805(7): lea 0x39e6(%rip),%rsi
180c(7): lea 0x39a6(%rip),%rdi
1813(5): call 0xfffffd1d(%rip)
1818(7): lea 0x399a(%rip),%rdi
181f(5): call 0xfffffce1(%rip)
1824(7): lea 0xde5(%rip),%rdi
182b(5): call 0x3875(%rip)
1830(7): lea 0x2062e9(%rip),%rcx
1837(7): lea 0x39cc(%rip),%rdx
183e(3): xor %r8d,%r8d
1841(3): mov %rbx,%rsi
1844(2): mov %ebp,%edi
1846(5): call 0xfffffd5a(%rip)
184b(3): cmp $0xff,%eax
184e(2): jz 0x6d(%rip)
1850(5): cmp $0xffffff7e,%eax
1855(6): jz 0x130(%rip)
185b(2): jle 0x15(%rip)
185d(3): cmp $0x4c,%eax
1860(2): jz 0x50(%rip)
1862(3): cmp $0x50,%eax
1865(6): jnz 0x116(%rip)
186b(3): xor %r12d,%r12d
186e(2): jmp 0xffffffc2(%rip)
1870(5): cmp $0xffffff7d,%eax
1875(6): jnz 0x106(%rip)
187b(7): mov 0x206806(%rip),%rdi
1882(7): mov 0x206787(%rip),%rcx
1889(7): lea 0x397d(%rip),%r8
1890(7): lea 0x391e(%rip),%rdx
1897(7): lea 0x3886(%rip),%rsi
189e(3): xor %r9d,%r9d
18a1(2): xor %eax,%eax
18a3(5): call 0x308d(%rip)
18a8(2): xor %edi,%edi
18aa(5): call 0xfffffea6(%rip)
18af(1): nop 
18b0(6): mov $0x1,%r12d
18b6(5): jmp 0xffffff7a(%rip)
18bb(6): cmp %ebp,0x2067cf(%rip)
18c1(2): jl 0x3f(%rip)
18c3(3): test %r12b,%r12b
18c6(2): jz 0xc(%rip)
18c8(5): call 0x1d8(%rip)
18cd(3): test %rax,%rax
18d0(2): jnz 0x26(%rip)
18d2(5): call 0x344e(%rip)
18d7(3): test %rax,%rax
18da(3): mov %rax,%rbx
18dd(2): jz 0x46(%rip)
18df(3): mov %rax,%rdi
18e2(5): call 0xfffffc0e(%rip)
18e7(3): mov %rbx,%rdi
18ea(5): call 0xfffffba6(%rip)
18ef(1): pop %rbx
18f0(2): xor %eax,%eax
18f2(1): pop %rbp
18f3(2): pop %r12
18f5(1): ret near (%rsp)
18f6(3): mov %rax,%rdi
18f9(5): call 0xfffffbf7(%rip)
18fe(2): jmp 0xfffffff1(%rip)
1900(7): lea 0x3913(%rip),%rsi
1907(2): xor %edi,%edi
1909(5): mov $0x5,%edx
190e(5): call 0xfffffc32(%rip)
1913(2): xor %esi,%esi
1915(3): mov %rax,%rdx
1918(2): xor %edi,%edi
191a(2): xor %eax,%eax
191c(5): call 0xfffffe04(%rip)
1921(2): jmp 0xffffffa2(%rip)
1923(5): mov $0x18,%edi
1928(5): call 0x3168(%rip)
192d(5): mov $0x2000,%edi
1932(3): mov %rax,%rbx
1935(8): mov $0x2000,0x8(%rax)
193d(5): call 0x3153(%rip)
1942(4): mov 0x8(%rbx),%rdx
1946(3): mov %rax,(%rbx)
1949(3): mov %rbx,%rdi
194c(5): lea 0xffffffff(%rax,%rdx,1),%rax
1951(4): mov %rax,0x10(%rbx)
1955(3): mov $0x0,(%rax)
1958(5): call 0x3b8(%rip)
195d(4): mov 0x10(%rbx),%rdi
1961(5): call 0xfffffb8f(%rip)
1966(3): mov (%rbx),%rdi
1969(5): call 0xfffffb27(%rip)
196e(3): mov %rbx,%rdi
1971(5): call 0xfffffb1f(%rip)
1976(5): jmp 0xffffff79(%rip)
197b(5): mov $0x1,%edi
1980(5): call 0x8b0(%rip)
1985(2): xor %edi,%edi
1987(5): call 0x8a9(%rip)

"_start" :
1990(2): xor %ebp,%ebp
1992(3): mov %rdx,%r9
1995(1): pop %rsi
1996(3): mov %rsp,%rdx
1999(4): and $0xfffffff0,%rsp
199d(1): push %rax
199e(1): push %rsp
199f(7): lea 0x36ea(%rip),%r8
19a6(7): lea 0x3673(%rip),%rcx
19ad(7): lea 0xfffffe1c(%rip),%rdi
19b4(6): call 0x20660e(%rip)
19ba(1): hlt 

"deregister_tm_clones" :
19c0(7): lea 0x2066b9(%rip),%rdi
19c7(1): push %rbp
19c8(7): lea 0x2066b1(%rip),%rax
19cf(3): cmp %rdi,%rax
19d2(3): mov %rsp,%rbp
19d5(2): jz 0x1b(%rip)
19d7(7): mov 0x2065e2(%rip),%rax
19de(3): test %rax,%rax
19e1(2): jz 0xf(%rip)
19e3(1): pop %rbp
19e4(2): jmp %rax
19e6(a): nop 0x0(%rax,%rax,1)
19f0(1): pop %rbp
19f1(1): ret near (%rsp)

"register_tm_clones" :
1a00(7): lea 0x206679(%rip),%rdi
1a07(7): lea 0x206672(%rip),%rsi
1a0e(1): push %rbp
1a0f(3): sub %rdi,%rsi
1a12(3): mov %rsp,%rbp
1a15(4): sar $0x3,%rsi
1a19(3): mov %rsi,%rax
1a1c(4): shr $0x3f,%rax
1a20(3): add %rax,%rsi
1a23(3): sar $0x1,%rsi
1a26(2): jz 0x1a(%rip)
1a28(7): mov 0x2065a9(%rip),%rax
1a2f(3): test %rax,%rax
1a32(2): jz 0xe(%rip)
1a34(1): pop %rbp
1a35(2): jmp %rax
1a37(9): nop 0x0(%rax,%rax,1)
1a40(1): pop %rbp
1a41(1): ret near (%rsp)

"__do_global_dtors_aux" :
1a50(7): cmp $0x0,0x206651(%rip)
1a57(2): jnz 0x31(%rip)
1a59(8): cmp $0x0,0x20657f(%rip)
1a61(1): push %rbp
1a62(3): mov %rsp,%rbp
1a65(2): jz 0xe(%rip)
1a67(7): mov 0x20659a(%rip),%rdi
1a6e(5): call 0xfffffd52(%rip)
1a73(5): call 0xffffff4d(%rip)
1a78(7): mov $0x1,0x206629(%rip)
1a7f(1): pop %rbp
1a80(1): ret near (%rsp)
1a81(7): nop 0x0(%rax)
1a88(2): REP ret near (%rsp)

"frame_dummy" :
1a90(1): push %rbp
1a91(3): mov %rsp,%rbp
1a94(1): pop %rbp
1a95(5): jmp 0xffffff6b(%rip)

"logical_getcwd" :
1aa0(1): push %rbp
1aa1(1): push %rbx
1aa2(7): lea 0x361b(%rip),%rdi
1aa9(7): sub $0x138,%rsp
1ab0(9): mov $0x28,%rax
1ab9(8): mov %rax,0x128(%rsp)
1ac1(2): xor %eax,%eax
1ac3(5): call 0xfffff9bd(%rip)
1ac8(3): test %rax,%rax
1acb(2): jz 0x55(%rip)
1acd(3): cmp $0x2f,(%rax)
1ad0(3): mov %rax,%rbp
1ad3(2): jnz 0x4d(%rip)
1ad5(3): mov %rax,%rdi
1ad8(7): lea 0x35e9(%rip),%rbx
1adf(2): jmp 0xd(%rip)
1ae1(7): nop 0x0(%rax)
1ae8(4): lea 0x1(%rax),%rdi
1aec(3): mov %rbx,%rsi
1aef(5): call 0xfffffcb1(%rip)
1af4(3): test %rax,%rax
1af7(2): jz 0x4b(%rip)
1af9(4): movzx 0x2(%rax),%edx
1afd(2): test %dl,%dl
1aff(2): jz 0x21(%rip)
1b01(3): cmp $0x2f,%dl
1b04(2): jz 0x1c(%rip)
1b06(3): cmp $0x2e,%dl
1b09(2): jnz 0xffffffdf(%rip)
1b0b(4): movzx 0x3(%rax),%edx
1b0f(2): test %dl,%dl
1b11(2): jz 0xf(%rip)
1b13(3): cmp $0x2f,%dl
1b16(2): jnz 0xffffffd2(%rip)
1b18(8): nop 0x0(%rax,%rax,1)
1b20(2): xor %ebp,%ebp
1b22(8): mov 0x128(%rsp),%rcx
1b2a(9): xor $0x28,%rcx
1b33(3): mov %rbp,%rax
1b36(2): jnz 0x5c(%rip)
1b38(7): add $0x138,%rsp
1b3f(1): pop %rbx
1b40(1): pop %rbp
1b41(1): ret near (%rsp)
1b42(3): mov %rsp,%rdx
1b45(3): mov %rbp,%rsi
1b48(5): mov $0x1,%edi
1b4d(5): call 0xfffffb23(%rip)
1b52(2): test %eax,%eax
1b54(2): jnz 0xffffffcc(%rip)
1b56(8): lea 0x90(%rsp),%rdx
1b5e(7): lea 0x3579(%rip),%rsi
1b65(5): mov $0x1,%edi
1b6a(5): call 0xfffffb06(%rip)
1b6f(2): test %eax,%eax
1b71(2): jnz 0xffffffaf(%rip)
1b73(8): mov 0x98(%rsp),%rax
1b7b(5): cmp %rax,0x8(%rsp)
1b80(2): jnz 0xffffffa0(%rip)
1b82(8): mov 0x90(%rsp),%rax
1b8a(4): cmp %rax,(%rsp)
1b8e(2): jz 0xffffff94(%rip)
1b90(2): jmp 0xffffff90(%rip)
1b92(5): call 0xfffff9fe(%rip)

"nth_parent" :
1ba0(1): push %rbp
1ba1(1): push %rbx
1ba2(5): mov $0x3,%eax
1ba7(3): mov %rdi,%rbp
1baa(4): sub $0x8,%rsp
1bae(3): mul %rax,%rdi,%rdx
1bb1(2): jo 0x65(%rip)
1bb3(2): xor %ecx,%ecx
1bb5(3): test %rax,%rax
1bb8(2): js 0x65(%rip)
1bba(3): test %rcx,%rcx
1bbd(2): jnz 0x60(%rip)
1bbf(5): lea 0x0(%rbp,%rbp,2),%rbx
1bc4(3): mov %rbx,%rdi
1bc7(5): call 0x2ec9(%rip)
1bcc(3): test %rbp,%rbp
1bcf(2): jz 0x39(%rip)
1bd1(4): lea 0x0(%rax,%rbx,1),%rdi
1bd5(3): mov %rax,%rdx
1bd8(8): nop 0x0(%rax,%rax,1)
1be0(5): mov $0x2e2e,%ecx
1be5(4): mov $0x2f,0x2(%rdx)
1be9(4): add $0x3,%rdx
1bed(4): mov %cx,0xfffffffd(%rdx)
1bf1(3): cmp %rdi,%rdx
1bf4(2): jnz 0xffffffec(%rip)
1bf6(4): mov $0x0,0xffffffff(%rdi)
1bfa(4): add $0x8,%rsp
1bfe(1): pop %rbx
1bff(1): pop %rbp
1c00(1): ret near (%rsp)
1c01(7): nop 0x0(%rax)
1c08(3): mov %rax,%rdi
1c0b(4): mov $0x0,0xffffffff(%rdi)
1c0f(4): add $0x8,%rsp
1c13(1): pop %rbx
1c14(1): pop %rbp
1c15(1): ret near (%rsp)
1c16(5): mov $0x1,%ecx
1c1b(2): jmp 0xffffff9a(%rip)
1c1d(5): call 0x30c3(%rip)

"file_name_prepend" :
1c30(2): push %r15
1c32(2): push %r14
1c34(3): mov %rsi,%r14
1c37(2): push %r13
1c39(2): push %r12
1c3b(3): mov %rdx,%r13
1c3e(1): push %rbp
1c3f(1): push %rbx
1c40(3): mov %rdi,%rbx
1c43(4): sub $0x18,%rsp
1c47(4): mov 0x10(%rdi),%rax
1c4b(3): mov %rax,%r12
1c4e(3): sub (%rdi),%r12
1c51(4): lea 0x1(%rdx),%rdi
1c55(3): cmp %r12,%rdi
1c58(2): jbe 0x74(%rip)
1c5a(4): add 0x8(%rbx),%rdi
1c5e(5): mov $0x2,%eax
1c63(2): xor %ecx,%ecx
1c65(3): mul %rax,%rdi,%rdx
1c68(6): jo 0x95(%rip)
1c6e(3): test %rax,%rax
1c71(6): js 0x96(%rip)
1c77(3): test %rcx,%rcx
1c7a(6): jnz 0x8d(%rip)
1c80(4): lea 0x0(%rdi,%rdi,1),%rbp
1c84(3): mov %rbp,%rdi
1c87(5): call 0x2e09(%rip)
1c8c(4): mov 0x8(%rbx),%rdx
1c90(3): mov (%rbx),%rcx
1c93(3): mov %rbp,%rdi
1c96(3): mov %rax,%r15
1c99(3): sub %r12,%rdx
1c9c(4): lea 0x0(%rcx,%r12,1),%rsi
1ca0(5): mov %rcx,0x8(%rsp)
1ca5(3): sub %rdx,%rdi
1ca8(3): add %rax,%rdi
1cab(4): mov %rdi,0x10(%rbx)
1caf(5): call 0xfffff9a1(%rip)
1cb4(5): mov 0x8(%rsp),%rcx
1cb9(3): mov %rcx,%rdi
1cbc(5): call 0xfffff7d4(%rip)
1cc1(4): mov 0x10(%rbx),%rax
1cc5(3): mov %r15,(%rbx)
1cc8(4): mov %rbp,0x8(%rbx)
1ccc(3): mov %r13,%rdx
1ccf(3): mov %r14,%rsi
1cd2(3): not %rdx
1cd5(3): add %rdx,%rax
1cd8(3): mov %r13,%rdx
1cdb(4): mov %rax,0x10(%rbx)
1cdf(3): mov $0x2f,(%rax)
1ce2(4): mov 0x10(%rbx),%rdi
1ce6(4): add $0x18,%rsp
1cea(1): pop %rbx
1ceb(1): pop %rbp
1cec(2): pop %r12
1cee(2): pop %r13
1cf0(2): pop %r14
1cf2(2): pop %r15
1cf4(4): add $0x1,%rdi
1cf8(5): jmp 0xfffff958(%rip)
1cfd(5): mov $0x1,%ecx
1d02(5): jmp 0xffffff6c(%rip)
1d07(5): call 0x2fd9(%rip)

"robust_getcwd" :
1d10(2): push %r15
1d12(2): push %r14
1d14(2): push %r13
1d16(2): push %r12
1d18(1): push %rbp
1d19(1): push %rbx
1d1a(7): sub $0x208,%rsp
1d21(5): mov %rdi,0x28(%rsp)
1d26(5): lea 0x30(%rsp),%rdi
1d2b(9): mov $0x28,%rax
1d34(8): mov %rax,0x1f8(%rsp)
1d3c(2): xor %eax,%eax
1d3e(5): call 0x26b2(%rip)
1d43(3): test %rax,%rax
1d46(5): mov %rax,0x18(%rsp)
1d4b(6): jz 0x49a(%rip)
1d51(5): lea 0x40(%rsp),%rdx
1d56(7): lea 0x3381(%rip),%rsi
1d5d(5): mov $0x1,%edi
1d62(5): call 0xfffff90e(%rip)
1d67(2): test %eax,%eax
1d69(6): js 0x3f5(%rip)
1d6f(8): lea 0xd0(%rsp),%rax
1d77(9): mov $0x1,0x8(%rsp)
1d80(5): mov %rax,0x20(%rsp)
1d85(8): lea 0x160(%rsp),%rax
1d8d(4): mov %rax,(%rsp)
1d91(7): nop 0x0(%rax)
1d98(5): mov 0x18(%rsp),%rax
1d9d(3): mov (%rax),%rcx
1da0(5): cmp %rcx,0x48(%rsp)
1da5(2): jnz 0x11(%rip)
1da7(4): mov 0x8(%rax),%rax
1dab(5): cmp %rax,0x40(%rsp)
1db0(6): jz 0x29a(%rip)
1db6(5): mov 0x8(%rsp),%rax
1dbb(7): lea 0x331b(%rip),%rdi
1dc2(4): add $0x1,%rax
1dc6(5): mov %rax,0x10(%rsp)
1dcb(5): call 0xfffff755(%rip)
1dd0(3): test %rax,%rax
1dd3(3): mov %rax,%rbx
1dd6(6): jz 0x3cb(%rip)
1ddc(3): mov %rax,%rdi
1ddf(5): call 0xfffff861(%rip)
1de4(2): test %eax,%eax
1de6(2): mov %eax,%ebp
1de8(6): js 0x22d(%rip)
1dee(2): mov %eax,%edi
1df0(5): call 0xfffff8f0(%rip)
1df5(2): test %eax,%eax
1df7(6): js 0x2e6(%rip)
1dfd(5): mov 0x20(%rsp),%rdx
1e02(2): mov %ebp,%esi
1e04(5): mov $0x1,%edi
1e09(5): call 0xfffff8b7(%rip)
1e0e(3): shr $0x1f,%eax
1e11(3): mov %eax,%r12d
1e14(5): call 0xfffff69c(%rip)
1e19(3): test %r12b,%r12b
1e1c(3): mov %rax,%rbp
1e1f(6): jnz 0x302(%rip)
1e25(8): mov 0xd0(%rsp),%r14
1e2d(5): mov 0x40(%rsp),%r13
1e32(3): cmp %r13,%r14
1e35(4): setnz %r12b
1e39(7): nop 0x0(%rax)
1e40(7): mov $0x0,0x0(%rbp)
1e47(9): nop 0x0(%rax,%rax,1)
1e50(3): mov %rbx,%rdi
1e53(5): call 0xfffff82d(%rip)
1e58(3): test %rax,%rax
1e5b(6): jz 0x10d(%rip)
1e61(4): cmp $0x2e,0x13(%rax)
1e65(4): lea 0x13(%rax),%r15
1e69(2): jnz 0x19(%rip)
1e6b(2): xor %edx,%edx
1e6d(4): cmp $0x2e,0x14(%rax)
1e71(3): setz %dl
1e74(5): movzx 0x14(%rax,%rdx,1),%edx
1e79(2): test %dl,%dl
1e7b(2): jz 0xffffffd5(%rip)
1e7d(3): cmp $0x2f,%dl
1e80(2): jz 0xffffffd0(%rip)
1e82(3): mov (%rax),%rax
1e85(3): test %rax,%rax
1e88(6): jz 0x140(%rip)
1e8e(3): test %r12b,%r12b
1e91(6): jnz 0x137(%rip)
1e97(5): cmp 0x48(%rsp),%rax
1e9c(2): jnz 0xffffffa4(%rip)
1e9e(3): mov %r15,%rdi
1ea1(5): call 0xfffff6bf(%rip)
1ea6(5): mov 0x28(%rsp),%rdi
1eab(3): mov %rax,%rdx
1eae(3): mov %r15,%rsi
1eb1(5): call 0xfffffd7f(%rip)
1eb6(3): mov %rbx,%rdi
1eb9(5): call 0xfffff747(%rip)
1ebe(2): test %eax,%eax
1ec0(6): jnz 0x1e0(%rip)
1ec6(9): movdqa 0xd0(%rsp),%xmm0
1ecf(5): mov 0x10(%rsp),%rax
1ed4(5): movaps %xmm0,0x40(%rsp)
1ed9(9): movdqa 0xe0(%rsp),%xmm0
1ee2(5): mov %rax,0x8(%rsp)
1ee7(5): movaps %xmm0,0x50(%rsp)
1eec(9): movdqa 0xf0(%rsp),%xmm0
1ef5(5): movaps %xmm0,0x60(%rsp)
1efa(9): movdqa 0x100(%rsp),%xmm0
1f03(5): movaps %xmm0,0x70(%rsp)
1f08(9): movdqa 0x110(%rsp),%xmm0
1f11(8): movaps %xmm0,0x80(%rsp)
1f19(9): movdqa 0x120(%rsp),%xmm0
1f22(8): movaps %xmm0,0x90(%rsp)
1f2a(9): movdqa 0x130(%rsp),%xmm0
1f33(8): movaps %xmm0,0xa0(%rsp)
1f3b(9): movdqa 0x140(%rsp),%xmm0
1f44(8): movaps %xmm0,0xb0(%rsp)
1f4c(9): movdqa 0x150(%rsp),%xmm0
1f55(8): movaps %xmm0,0xc0(%rsp)
1f5d(5): jmp 0xfffffe3b(%rip)
1f62(6): nop 0x0(%rax,%rax,1)
1f68(4): mov 0x0(%rbp),%r12d
1f6c(3): test %r12d,%r12d
1f6f(6): jnz 0x125(%rip)
1f75(3): mov %rbx,%rdi
1f78(5): call 0xfffff688(%rip)
1f7d(2): test %eax,%eax
1f7f(6): jnz 0x121(%rip)
1f85(5): mov 0x8(%rsp),%rdi
1f8a(5): call 0xfffffc16(%rip)
1f8f(3): mov %rax,%rdi
1f92(5): call 0x243e(%rip)
1f97(7): lea 0x32da(%rip),%rsi
1f9e(3): mov %rax,%rbx
1fa1(5): mov $0x5,%edx
1fa6(2): xor %edi,%edi
1fa8(5): call 0xfffff598(%rip)
1fad(3): mov %rbx,%rcx
1fb0(3): mov %rax,%rdx
1fb3(2): xor %esi,%esi
1fb5(5): mov $0x1,%edi
1fba(2): xor %eax,%eax
1fbc(5): call 0xfffff764(%rip)
1fc1(7): nop 0x0(%rax)
1fc8(4): mov (%rsp),%rdx
1fcc(3): mov %r15,%rsi
1fcf(5): mov $0x1,%edi
1fd4(5): call 0xfffff59c(%rip)
1fd9(2): test %eax,%eax
1fdb(6): js 0xfffffe65(%rip)
1fe1(5): mov 0x48(%rsp),%rax
1fe6(8): cmp %rax,0x168(%rsp)
1fee(6): jnz 0xfffffe52(%rip)
1ff4(3): cmp %r13,%r14
1ff7(6): jz 0xfffffea7(%rip)
1ffd(5): mov 0x40(%rsp),%rax
2002(8): cmp %rax,0x160(%rsp)
200a(6): jnz 0xfffffe36(%rip)
2010(5): jmp 0xfffffe8e(%rip)
2015(7): lea 0x30c1(%rip),%rdi
201c(5): call 0xfffff564(%rip)
2021(2): test %eax,%eax
2023(6): js 0xba(%rip)
2029(5): mov 0x20(%rsp),%rdx
202e(7): lea 0x30a9(%rip),%rsi
2035(5): mov $0x1,%edi
203a(5): call 0xfffff636(%rip)
203f(3): shr $0x1f,%eax
2042(3): mov %eax,%r12d
2045(5): jmp 0xfffffdcf(%rip)
204a(5): mov 0x28(%rsp),%rax
204f(4): mov 0x10(%rax),%rax
2053(3): cmp $0x0,(%rax)
2056(2): jnz 0x15(%rip)
2058(5): mov 0x28(%rsp),%rdi
205d(7): lea 0x30da(%rip),%rsi
2064(2): xor %edx,%edx
2066(5): call 0xfffffbca(%rip)
206b(8): mov 0x1f8(%rsp),%rax
2073(9): xor $0x28,%rax
207c(6): jnz 0x1ac(%rip)
2082(7): add $0x208,%rsp
2089(1): pop %rbx
208a(1): pop %rbp
208b(2): pop %r12
208d(2): pop %r13
208f(2): pop %r14
2091(2): pop %r15
2093(1): ret near (%rsp)
2094(3): mov %rbx,%rdi
2097(5): call 0xfffff569(%rip)
209c(4): mov %r12d,0x0(%rbp)
20a0(5): mov 0x8(%rsp),%rdi
20a5(5): call 0xfffffafb(%rip)
20aa(3): mov %rax,%rdi
20ad(5): call 0x2323(%rip)
20b2(7): lea 0x3056(%rip),%rsi
20b9(5): mov $0x5,%edx
20be(2): xor %edi,%edi
20c0(3): mov %rax,%rbx
20c3(5): call 0xfffff47d(%rip)
20c8(3): mov 0x0(%rbp),%esi
20cb(3): mov %rax,%rdx
20ce(3): mov %rbx,%rcx
20d1(5): mov $0x1,%edi
20d6(2): xor %eax,%eax
20d8(5): call 0xfffff648(%rip)
20dd(5): mov 0x8(%rsp),%rdi
20e2(5): call 0xfffffabe(%rip)
20e7(3): mov %rax,%rdi
20ea(5): call 0x22e6(%rip)
20ef(7): lea 0x3003(%rip),%rsi
20f6(5): mov $0x5,%edx
20fb(2): xor %edi,%edi
20fd(3): mov %rax,%rbp
2100(5): call 0xfffff440(%rip)
2105(3): mov %rax,%rbx
2108(5): call 0xfffff3a8(%rip)
210d(2): mov (%rax),%esi
210f(3): mov %rbp,%rcx
2112(3): mov %rbx,%rdx
2115(5): mov $0x1,%edi
211a(2): xor %eax,%eax
211c(5): call 0xfffff604(%rip)
2121(5): mov 0x8(%rsp),%rdi
2126(5): call 0xfffffa7a(%rip)
212b(3): mov %rax,%rdi
212e(5): call 0x22a2(%rip)
2133(7): lea 0x2f91(%rip),%rsi
213a(5): mov $0x5,%edx
213f(2): xor %edi,%edi
2141(3): mov %rax,%rbx
2144(5): call 0xfffff3fc(%rip)
2149(3): mov 0x0(%rbp),%esi
214c(3): mov %rax,%rdx
214f(3): mov %rbx,%rcx
2152(5): mov $0x1,%edi
2157(2): xor %eax,%eax
2159(5): call 0xfffff5c7(%rip)
215e(7): lea 0x2f79(%rip),%rsi
2165(5): mov $0x4,%edi
216a(5): call 0x1f96(%rip)
216f(7): lea 0x2f55(%rip),%rsi
2176(5): mov $0x5,%edx
217b(2): xor %edi,%edi
217d(3): mov %rax,%rbp
2180(5): call 0xfffff3c0(%rip)
2185(3): mov %rax,%rbx
2188(5): call 0xfffff328(%rip)
218d(2): mov (%rax),%esi
218f(3): mov %rbp,%rcx
2192(3): mov %rbx,%rdx
2195(5): mov $0x1,%edi
219a(2): xor %eax,%eax
219c(5): call 0xfffff584(%rip)
21a1(5): mov 0x8(%rsp),%rdi
21a6(5): call 0xfffff9fa(%rip)
21ab(3): mov %rax,%rdi
21ae(5): call 0x2222(%rip)
21b3(7): lea 0x2f26(%rip),%rsi
21ba(5): mov $0x5,%edx
21bf(2): xor %edi,%edi
21c1(3): mov %rax,%rbp
21c4(5): call 0xfffff37c(%rip)
21c9(3): mov %rax,%rbx
21cc(5): call 0xfffff2e4(%rip)
21d1(2): mov (%rax),%esi
21d3(3): mov %rbp,%rcx
21d6(3): mov %rbx,%rdx
21d9(5): mov $0x1,%edi
21de(2): xor %eax,%eax
21e0(5): call 0xfffff540(%rip)
21e5(7): lea 0x33fa(%rip),%rsi
21ec(5): mov $0x4,%edi
21f1(5): call 0x1f0f(%rip)
21f6(7): lea 0x305b(%rip),%rsi
21fd(5): mov $0x5,%edx
2202(2): xor %edi,%edi
2204(3): mov %rax,%rbp
2207(5): call 0xfffff339(%rip)
220c(3): mov %rax,%rbx
220f(5): call 0xfffff2a1(%rip)
2214(2): mov (%rax),%esi
2216(3): mov %rbp,%rcx
2219(3): mov %rbx,%rdx
221c(5): mov $0x1,%edi
2221(2): xor %eax,%eax
2223(5): call 0xfffff4fd(%rip)
2228(5): call 0xfffff368(%rip)

"usage" :
2230(2): push %r13
2232(2): push %r12
2234(5): mov $0x5,%edx
2239(1): push %rbp
223a(1): push %rbx
223b(2): mov %edi,%ebp
223d(7): sub $0x88,%rsp
2244(7): mov 0x205e75(%rip),%rbx
224b(9): mov $0x28,%rax
2254(5): mov %rax,0x78(%rsp)
2259(2): xor %eax,%eax
225b(2): test %edi,%edi
225d(2): jz 0x30(%rip)
225f(7): lea 0x3052(%rip),%rsi
2266(2): xor %edi,%edi
2268(5): call 0xfffff2d8(%rip)
226d(7): mov 0x205e2c(%rip),%rdi
2274(3): mov %rax,%rdx
2277(3): mov %rbx,%rcx
227a(5): mov $0x1,%esi
227f(2): xor %eax,%eax
2281(5): call 0xfffff4ef(%rip)
2286(2): mov %ebp,%edi
2288(5): call 0xfffff4c8(%rip)
228d(7): lea 0x2e94(%rip),%rsi
2294(2): xor %edi,%edi
2296(5): call 0xfffff2aa(%rip)
229b(3): mov %rbx,%rdx
229e(3): mov %rax,%rsi
22a1(5): mov $0x1,%edi
22a6(2): xor %eax,%eax
22a8(5): call 0xfffff468(%rip)
22ad(7): mov 0x205dd4(%rip),%rbx
22b4(7): lea 0x3025(%rip),%rsi
22bb(5): mov $0x5,%edx
22c0(2): xor %edi,%edi
22c2(5): call 0xfffff27e(%rip)
22c7(3): mov %rbx,%rsi
22ca(3): mov %rax,%rdi
22cd(5): call 0xfffff353(%rip)
22d2(7): mov 0x205daf(%rip),%rbx
22d9(7): lea 0x3040(%rip),%rsi
22e0(5): mov $0x5,%edx
22e5(2): xor %edi,%edi
22e7(5): call 0xfffff259(%rip)
22ec(3): mov %rbx,%rsi
22ef(3): mov %rax,%rdi
22f2(5): call 0xfffff32e(%rip)
22f7(7): mov 0x205d8a(%rip),%rbx
22fe(7): lea 0x308b(%rip),%rsi
2305(5): mov $0x5,%edx
230a(2): xor %edi,%edi
230c(5): call 0xfffff234(%rip)
2311(3): mov %rbx,%rsi
2314(3): mov %rax,%rdi
2317(5): call 0xfffff309(%rip)
231c(7): mov 0x205d65(%rip),%rbx
2323(7): lea 0x3096(%rip),%rsi
232a(5): mov $0x5,%edx
232f(2): xor %edi,%edi
2331(5): call 0xfffff20f(%rip)
2336(3): mov %rbx,%rsi
2339(3): mov %rax,%rdi
233c(5): call 0xfffff2e4(%rip)
2341(7): mov 0x205d40(%rip),%rbx
2348(7): lea 0x30a9(%rip),%rsi
234f(5): mov $0x5,%edx
2354(2): xor %edi,%edi
2356(5): call 0xfffff1ea(%rip)
235b(3): mov %rbx,%rsi
235e(3): mov %rax,%rdi
2361(7): lea 0x2dbc(%rip),%rbx
2368(5): call 0xfffff2b8(%rip)
236d(7): lea 0x30b4(%rip),%rsi
2374(5): mov $0x5,%edx
2379(2): xor %edi,%edi
237b(5): call 0xfffff1c5(%rip)
2380(7): lea 0x2d9d(%rip),%rdx
2387(3): mov %rax,%rsi
238a(5): mov $0x1,%edi
238f(2): xor %eax,%eax
2391(5): call 0xfffff37f(%rip)
2396(7): lea 0x2da2(%rip),%rax
239d(7): lea 0x2ddc(%rip),%rcx
23a4(9): mov $0x0,0x60(%rsp)
23ad(9): mov $0x0,0x68(%rsp)
23b6(3): mov %rsp,%rdx
23b9(4): mov %rax,(%rsp)
23bd(7): lea 0x2d7d(%rip),%rax
23c4(5): mov %rcx,0x30(%rsp)
23c9(7): lea 0x2dba(%rip),%rcx
23d0(5): mov %rax,0x8(%rsp)
23d5(7): lea 0x2ddd(%rip),%rax
23dc(5): mov %rcx,0x40(%rsp)
23e1(7): lea 0x2dac(%rip),%rcx
23e8(5): mov %rax,0x10(%rsp)
23ed(7): lea 0x2d5d(%rip),%rax
23f4(5): mov %rcx,0x50(%rsp)
23f9(5): mov %rax,0x18(%rsp)
23fe(7): lea 0x2d62(%rip),%rax
2405(5): mov %rax,0x20(%rsp)
240a(7): lea 0x2d60(%rip),%rax
2411(5): mov %rax,0x28(%rsp)
2416(5): mov %rax,0x38(%rsp)
241b(5): mov %rax,0x48(%rsp)
2420(5): mov %rax,0x58(%rsp)
2425(3): nop (%rax)
2428(4): add $0x10,%rdx
242c(3): mov (%rdx),%rdi
242f(3): test %rdi,%rdi
2432(2): jz 0x15(%rip)
2434(5): mov $0x4,%ecx
2439(3): mov %rbx,%rsi
243c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
243e(3): setnbe %al
2441(2): sbb $0x0,%al
2443(2): test %al,%al
2445(2): jnz 0xffffffe3(%rip)
2447(4): mov 0x8(%rdx),%r12
244b(2): xor %edi,%edi
244d(5): mov $0x5,%edx
2452(7): lea 0x2d45(%rip),%rsi
2459(3): test %r12,%r12
245c(6): jz 0xc7(%rip)
2462(5): call 0xfffff0de(%rip)
2467(7): lea 0x307a(%rip),%rcx
246e(7): lea 0x2d40(%rip),%rdx
2475(3): mov %rax,%rsi
2478(5): mov $0x1,%edi
247d(2): xor %eax,%eax
247f(5): call 0xfffff291(%rip)
2484(2): xor %esi,%esi
2486(5): mov $0x5,%edi
248b(5): call 0xfffff275(%rip)
2490(3): test %rax,%rax
2493(2): jz 0x1e(%rip)
2495(7): lea 0x2d27(%rip),%rsi
249c(5): mov $0x3,%edx
24a1(3): mov %rax,%rdi
24a4(5): call 0xfffff01c(%rip)
24a9(2): test %eax,%eax
24ab(6): jnz 0x10d(%rip)
24b1(7): lea 0x2d0f(%rip),%rsi
24b8(2): xor %edi,%edi
24ba(5): mov $0x5,%edx
24bf(5): call 0xfffff081(%rip)
24c4(7): lea 0x2c59(%rip),%rcx
24cb(7): lea 0x3016(%rip),%rdx
24d2(3): mov %rax,%rsi
24d5(5): mov $0x1,%edi
24da(2): xor %eax,%eax
24dc(5): call 0xfffff234(%rip)
24e1(3): cmp %rbx,%r12
24e4(7): lea 0x2c70(%rip),%rcx
24eb(7): lea 0x2c4c(%rip),%rbx
24f2(4): cmove %rcx,%rbx
24f6(7): lea 0x305b(%rip),%rsi
24fd(2): xor %edi,%edi
24ff(5): mov $0x5,%edx
2504(5): call 0xfffff03c(%rip)
2509(3): mov %rbx,%rcx
250c(3): mov %rax,%rsi
250f(3): mov %r12,%rdx
2512(5): mov $0x1,%edi
2517(2): xor %eax,%eax
2519(5): call 0xfffff1f7(%rip)
251e(5): jmp 0xfffffd68(%rip)
2523(5): call 0xfffff01d(%rip)
2528(7): lea 0x2fb9(%rip),%rcx
252f(7): lea 0x2c7f(%rip),%rdx
2536(3): mov %rax,%rsi
2539(5): mov $0x1,%edi
253e(2): xor %eax,%eax
2540(5): call 0xfffff1d0(%rip)
2545(2): xor %esi,%esi
2547(5): mov $0x5,%edi
254c(5): call 0xfffff1b4(%rip)
2551(3): test %rax,%rax
2554(2): jz 0x1a(%rip)
2556(7): lea 0x2c66(%rip),%rsi
255d(5): mov $0x3,%edx
2562(3): mov %rax,%rdi
2565(5): call 0xffffef5b(%rip)
256a(2): test %eax,%eax
256c(2): jnz 0x45(%rip)
256e(7): lea 0x2c52(%rip),%rsi
2575(5): mov $0x5,%edx
257a(2): xor %edi,%edi
257c(7): lea 0x2ba1(%rip),%r12
2583(7): lea 0x2bd1(%rip),%rbx
258a(5): call 0xffffefb6(%rip)
258f(7): lea 0x2b8e(%rip),%rcx
2596(7): lea 0x2f4b(%rip),%rdx
259d(3): mov %rax,%rsi
25a0(5): mov $0x1,%edi
25a5(2): xor %eax,%eax
25a7(5): call 0xfffff169(%rip)
25ac(5): jmp 0xffffff4a(%rip)
25b1(7): lea 0x2b6c(%rip),%r12
25b8(7): mov 0x205ac9(%rip),%r13
25bf(7): lea 0x2f4a(%rip),%rsi
25c6(2): xor %edi,%edi
25c8(5): mov $0x5,%edx
25cd(5): call 0xffffef73(%rip)
25d2(3): mov %r13,%rsi
25d5(3): mov %rax,%rdi
25d8(5): call 0xfffff048(%rip)
25dd(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
25f0(7): mov %rdi,0x205ac1(%rip)
25f7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2600(7): mov %dil,0x205aa9(%rip)
2607(1): ret near (%rsp)

"close_stdout" :
2610(1): push %rbp
2611(1): push %rbx
2612(4): sub $0x8,%rsp
2616(7): mov 0x205a6b(%rip),%rdi
261d(5): call 0x27c3(%rip)
2622(2): test %eax,%eax
2624(2): jz 0x18(%rip)
2626(5): call 0xffffee8a(%rip)
262b(7): cmp $0x0,0x205a7e(%rip)
2632(3): mov %rax,%rbx
2635(2): jz 0x1e(%rip)
2637(3): cmp $0x20,(%rax)
263a(2): jnz 0x19(%rip)
263c(7): mov 0x205a5d(%rip),%rdi
2643(5): call 0x279d(%rip)
2648(2): test %eax,%eax
264a(2): jnz 0x48(%rip)
264c(4): add $0x8,%rsp
2650(1): pop %rbx
2651(1): pop %rbp
2652(1): ret near (%rsp)
2653(7): lea 0x2f36(%rip),%rsi
265a(2): xor %edi,%edi
265c(5): mov $0x5,%edx
2661(5): call 0xffffeedf(%rip)
2666(7): mov 0x205a4b(%rip),%rdi
266d(3): mov %rax,%rbp
2670(3): test %rdi,%rdi
2673(2): jz 0x2a(%rip)
2675(5): call 0x1b5b(%rip)
267a(2): mov (%rbx),%esi
267c(7): lea 0x2f19(%rip),%rdx
2683(3): mov %rax,%rcx
2686(3): mov %rbp,%r8
2689(2): xor %edi,%edi
268b(2): xor %eax,%eax
268d(5): call 0xfffff093(%rip)
2692(6): mov 0x205980(%rip),%edi
2698(5): call 0xffffee38(%rip)
269d(2): mov (%rbx),%esi
269f(7): lea 0x2efa(%rip),%rdx
26a6(3): mov %rax,%rcx
26a9(2): xor %edi,%edi
26ab(2): xor %eax,%eax
26ad(5): call 0xfffff073(%rip)
26b2(2): jmp 0xffffffe0(%rip)

"set_program_name" :
26c0(3): test %rdi,%rdi
26c3(1): push %rbx
26c4(2): jz 0x79(%rip)
26c6(5): mov $0x2f,%esi
26cb(3): mov %rdi,%rbx
26ce(5): call 0xffffeef2(%rip)
26d3(3): test %rax,%rax
26d6(2): jz 0x57(%rip)
26d8(4): lea 0x1(%rax),%r8
26dc(3): mov %r8,%rdx
26df(3): sub %rbx,%rdx
26e2(4): cmp $0x6,%rdx
26e6(2): jle 0x47(%rip)
26e8(4): lea 0xfffffffa(%rax),%rsi
26ec(7): lea 0x2eed(%rip),%rdi
26f3(5): mov $0x7,%ecx
26f8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
26fa(3): setnbe %dl
26fd(3): sbb $0x0,%dl
2700(2): test %dl,%dl
2702(2): jnz 0x2b(%rip)
2704(7): lea 0x2edd(%rip),%rdi
270b(5): mov $0x3,%ecx
2710(3): mov %r8,%rsi
2713(3): mov %r8,%rbx
2716(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2718(3): setnbe %dl
271b(3): sbb $0x0,%dl
271e(2): test %dl,%dl
2720(2): jnz 0xd(%rip)
2722(4): lea 0x4(%rax),%rbx
2726(7): mov %rbx,0x205953(%rip)
272d(7): mov %rbx,0x20598c(%rip)
2734(7): mov %rbx,0x20595d(%rip)
273b(1): pop %rbx
273c(1): ret near (%rsp)
273d(7): mov 0x20595c(%rip),%rcx
2744(7): lea 0x2e5d(%rip),%rdi
274b(5): mov $0x37,%edx
2750(5): mov $0x1,%esi
2755(5): call 0xfffff00b(%rip)
275a(5): call 0xffffed46(%rip)

"gettext_quote.part.1" :
2760(1): push %rbp
2761(1): push %rbx
2762(3): mov %rdi,%rbp
2765(2): mov %esi,%ebx
2767(4): sub $0x8,%rsp
276b(5): call 0x2755(%rip)
2770(3): movzx (%rax),%edx
2773(3): and $0xdf,%edx
2776(3): cmp $0x55,%dl
2779(2): jz 0x77(%rip)
277b(3): cmp $0x47,%dl
277e(2): jz 0x22(%rip)
2780(7): lea 0x2e74(%rip),%rax
2787(7): lea 0x2e6f(%rip),%rdx
278e(3): cmp $0x9,%ebx
2791(4): cmovne %rdx,%rax
2795(4): add $0x8,%rsp
2799(1): pop %rbx
279a(1): pop %rbp
279b(1): ret near (%rsp)
279c(4): nop 0x0(%rax)
27a0(4): movzx 0x1(%rax),%edx
27a4(3): and $0xdf,%edx
27a7(3): cmp $0x42,%dl
27aa(2): jnz 0xffffffd6(%rip)
27ac(4): cmp $0x31,0x2(%rax)
27b0(2): jnz 0xffffffd0(%rip)
27b2(4): cmp $0x38,0x3(%rax)
27b6(2): jnz 0xffffffca(%rip)
27b8(4): cmp $0x30,0x4(%rax)
27bc(2): jnz 0xffffffc4(%rip)
27be(4): cmp $0x33,0x5(%rax)
27c2(2): jnz 0xffffffbe(%rip)
27c4(4): cmp $0x30,0x6(%rax)
27c8(2): jnz 0xffffffb8(%rip)
27ca(4): cmp $0x0,0x7(%rax)
27ce(2): jnz 0xffffffb2(%rip)
27d0(4): cmp $0x60,0x0(%rbp)
27d4(7): lea 0x2e19(%rip),%rax
27db(7): lea 0x2e16(%rip),%rdx
27e2(4): cmovne %rdx,%rax
27e6(4): add $0x8,%rsp
27ea(1): pop %rbx
27eb(1): pop %rbp
27ec(1): ret near (%rsp)
27ed(3): nop (%rax)
27f0(4): movzx 0x1(%rax),%edx
27f4(3): and $0xdf,%edx
27f7(3): cmp $0x54,%dl
27fa(2): jnz 0xffffff86(%rip)
27fc(4): movzx 0x2(%rax),%edx
2800(3): and $0xdf,%edx
2803(3): cmp $0x46,%dl
2806(6): jnz 0xffffff7a(%rip)
280c(4): cmp $0x2d,0x3(%rax)
2810(6): jnz 0xffffff70(%rip)
2816(4): cmp $0x38,0x4(%rax)
281a(6): jnz 0xffffff66(%rip)
2820(4): cmp $0x0,0x5(%rax)
2824(6): jnz 0xffffff5c(%rip)
282a(4): cmp $0x60,0x0(%rbp)
282e(7): lea 0x2db7(%rip),%rax
2835(7): lea 0x2db4(%rip),%rdx
283c(4): cmovne %rdx,%rax
2840(4): add $0x8,%rsp
2844(1): pop %rbx
2845(1): pop %rbp
2846(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2850(2): push %r15
2852(2): push %r14
2854(3): mov %r8d,%r15d
2857(2): push %r13
2859(2): push %r12
285b(3): mov %rdi,%r14
285e(1): push %rbp
285f(1): push %rbx
2860(3): mov %r9d,%ebx
2863(3): mov %rsi,%r13
2866(3): mov %rcx,%rbp
2869(3): and $0x2,%ebx
286c(7): sub $0xb8,%rsp
2873(8): mov 0xf0(%rsp),%rax
287b(5): mov %rdx,0x10(%rsp)
2880(5): mov %r8d,0x8(%rsp)
2885(5): mov %r9d,0x78(%rsp)
288a(5): mov %rax,0x20(%rsp)
288f(8): mov 0xf8(%rsp),%rax
2897(5): mov %rax,0x68(%rsp)
289c(8): mov 0x100(%rsp),%rax
28a4(5): mov %rax,0x60(%rsp)
28a9(9): mov $0x28,%rax
28b2(8): mov %rax,0xa8(%rsp)
28ba(2): xor %eax,%eax
28bc(5): call 0xffffec94(%rip)
28c1(4): cmp $0xa,%r15d
28c5(5): mov %rax,0x58(%rsp)
28ca(6): jnbe 0x11b5(%rip)
28d0(7): lea 0x2d89(%rip),%rcx
28d7(3): mov %r15d,%edx
28da(4): movsxd 0x0(%rcx,%rdx,4),%rax
28de(3): add %rcx,%rax
28e1(2): jmp %rax
28e3(5): mov $0x1,0xe(%rsp)
28e8(5): mov $0x0,0x7c(%rsp)
28ed(3): xor %r12d,%r12d
28f0(9): mov $0x0,0x50(%rsp)
28f9(5): mov $0x1,0xf(%rsp)
28fe(5): mov $0x0,0xd(%rsp)
2903(7): lea 0x2cf3(%rip),%rax
290a(9): mov $0x1,0x18(%rsp)
2913(3): xor %r15d,%r15d
2916(8): mov $0x2,0x8(%rsp)
291e(5): mov %rax,0x48(%rsp)
2923(3): xor %r11d,%r11d
2926(3): mov %rbp,%rax
2929(3): mov %r12d,%r8d
292c(3): mov %r11,%rbp
292f(3): mov %rax,%r11
2932(6): nop 0x0(%rax,%rax,1)
2938(3): cmp %rbp,%r11
293b(4): setnz %r12b
293f(4): cmp $0xffffffff,%r11
2943(2): jnz 0xf(%rip)
2945(5): mov 0x10(%rsp),%rax
294a(4): cmp $0x0,0x0(%rax,%rbp,1)
294e(4): setnz %r12b
2952(3): test %r12b,%r12b
2955(6): jz 0x65b(%rip)
295b(5): cmp $0x2,0x8(%rsp)
2960(5): mov 0x10(%rsp),%rdi
2965(4): lea 0x0(%rdi,%rbp,1),%r9
2969(3): setnz %al
296c(4): and 0xd(%rsp),%al
2970(3): mov %eax,%r10d
2973(6): jz 0xad(%rip)
2979(5): mov 0x18(%rsp),%rax
297e(3): test %rax,%rax
2981(6): jz 0x42f(%rip)
2987(4): cmp $0xffffffff,%r11
298b(5): lea 0x0(%rbp,%rax,1),%rbx
2990(2): jnz 0x30(%rip)
2992(4): cmp $0x1,%rax
2996(2): jbe 0x2a(%rip)
2998(5): mov %r8b,0x38(%rsp)
299d(5): mov %r10b,0x30(%rsp)
29a2(5): mov %r9,0x28(%rsp)
29a7(5): call 0xffffebb9(%rip)
29ac(6): movzx 0x38(%rsp),%r8d
29b2(6): movzx 0x30(%rsp),%r10d
29b8(3): mov %rax,%r11
29bb(5): mov 0x28(%rsp),%r9
29c0(3): cmp %r11,%rbx
29c3(5): mov %r10b,0x28(%rsp)
29c8(6): jnbe 0x5b8(%rip)
29ce(5): mov 0x18(%rsp),%rdx
29d3(5): mov 0x48(%rsp),%rsi
29d8(3): mov %r9,%rdi
29db(5): mov %r11,0x40(%rsp)
29e0(5): mov %r8b,0x38(%rsp)
29e5(5): mov %r9,0x30(%rsp)
29ea(5): call 0xffffec26(%rip)
29ef(2): test %eax,%eax
29f1(5): mov 0x30(%rsp),%r9
29f6(6): movzx 0x38(%rsp),%r8d
29fc(5): mov 0x40(%rsp),%r11
2a01(6): jnz 0x57f(%rip)
2a07(5): cmp $0x0,0xf(%rsp)
2a0c(6): movzx 0x28(%rsp),%r10d
2a12(6): jnz 0xf83(%rip)
2a18(8): nop 0x0(%rax,%rax,1)
2a20(4): movzx (%r9),%ebx
2a24(3): cmp $0x7e,%bl
2a27(6): jnbe 0x321(%rip)
2a2d(7): lea 0x2c58(%rip),%rcx
2a34(3): movzx %bl,%edx
2a37(4): movsxd 0x0(%rcx,%rdx,4),%rax
2a3b(3): add %rcx,%rax
2a3e(2): jmp %rax
2a40(3): xor %r10d,%r10d
2a43(4): cmp $0x1,%r11
2a47(3): setnz %al
2a4a(4): cmp $0xffffffff,%r11
2a4e(2): jnz 0xe(%rip)
2a50(5): mov 0x10(%rsp),%rax
2a55(4): cmp $0x0,0x1(%rax)
2a59(3): setnz %al
2a5c(5): cmp $0x2,0x8(%rsp)
2a61(3): setz %dl
2a64(2): test %al,%al
2a66(6): jz 0x252(%rip)
2a6c(3): xor %r12d,%r12d
2a6f(2): xor %eax,%eax
2a71(7): nop 0x0(%rax)
2a78(5): cmp $0x1,0xd(%rsp)
2a7d(6): jnz 0x115(%rip)
2a83(2): test %dl,%dl
2a85(6): jnz 0x10d(%rip)
2a8b(5): mov 0x20(%rsp),%rsi
2a90(3): test %rsi,%rsi
2a93(2): jz 0x16(%rip)
2a95(2): mov %ebx,%edx
2a97(3): shr $0x5,%dl
2a9a(3): movzx %dl,%edx
2a9d(3): mov 0x0(%rsi,%rdx,4),%edx
2aa0(3): bt %ebx,%edx
2aa3(6): jb 0x150(%rip)
2aa9(3): test %r10b,%r10b
2aac(6): jnz 0x147(%rip)
2ab2(3): xor $0x1,%eax
2ab5(4): add $0x1,%rbp
2ab9(3): and %r8d,%eax
2abc(2): test %al,%al
2abe(2): jz 0x22(%rip)
2ac0(3): cmp %r15,%r13
2ac3(2): jbe 0x7(%rip)
2ac5(5): mov $0x27,0x0(%r14,%r15,1)
2aca(4): lea 0x1(%r15),%rax
2ace(3): cmp %rax,%r13
2ad1(2): jbe 0x8(%rip)
2ad3(6): mov $0x27,0x1(%r14,%r15,1)
2ad9(4): add $0x2,%r15
2add(3): xor %r8d,%r8d
2ae0(3): cmp %r13,%r15
2ae3(2): jnb 0x6(%rip)
2ae5(4): mov %bl,0x0(%r14,%r15,1)
2ae9(5): movzx 0xe(%rsp),%edi
2aee(4): add $0x1,%r15
2af2(5): mov $0x0,%eax
2af7(3): test %r12b,%r12b
2afa(3): cmove %eax,%edi
2afd(5): mov %dil,0xe(%rsp)
2b02(5): jmp 0xfffffe36(%rip)
2b07(9): nop 0x0(%rax,%rax,1)
2b10(3): xor %r10d,%r10d
2b13(4): mov 0x8(%rsp),%eax
2b17(3): cmp $0x2,%eax
2b1a(6): jz 0x5be(%rip)
2b20(3): cmp $0x5,%eax
2b23(6): jz 0x575(%rip)
2b29(3): cmp $0x2,%eax
2b2c(5): mov $0x3f,%ebx
2b31(3): setz %dl
2b34(3): xor %r12d,%r12d
2b37(2): xor %eax,%eax
2b39(5): jmp 0xffffff3f(%rip)
2b3e(2): nop 
2b40(3): xor %r10d,%r10d
2b43(5): cmp $0x2,0x8(%rsp)
2b48(6): jz 0x508(%rip)
2b4e(5): mov %r12b,0x7c(%rsp)
2b53(2): xor %edx,%edx
2b55(2): xor %eax,%eax
2b57(5): mov $0x27,%ebx
2b5c(5): jmp 0xffffff1c(%rip)
2b61(7): nop 0x0(%rax)
2b68(5): mov $0x9,%edx
2b6d(5): mov $0x74,%ebx
2b72(5): cmp $0x2,0x8(%rsp)
2b77(3): setz %al
2b7a(4): and 0xf(%rsp),%al
2b7e(6): jnz 0x150(%rip)
2b84(5): cmp $0x0,0xd(%rsp)
2b89(2): jnz 0x67(%rip)
2b8b(2): mov %edx,%ebx
2b8d(3): xor %r12d,%r12d
2b90(2): xor %eax,%eax
2b92(5): cmp $0x0,0xf(%rsp)
2b97(6): jnz 0xfffffef4(%rip)
2b9d(5): jmp 0xffffff0c(%rip)
2ba2(6): nop 0x0(%rax,%rax,1)
2ba8(5): mov $0x8,%edx
2bad(5): mov $0x62,%ebx
2bb2(2): jmp 0xffffffd2(%rip)
2bb4(4): nop 0x0(%rax)
2bb8(5): cmp $0x2,0x8(%rsp)
2bbd(6): jz 0x3d3(%rip)
2bc3(5): cmp $0x0,0xd(%rsp)
2bc8(6): jz 0x218(%rip)
2bce(5): cmp $0x0,0xf(%rsp)
2bd3(6): jz 0x20d(%rip)
2bd9(6): cmp $0x0,0x18(%rsp)
2bdf(6): jnz 0x3bc(%rip)
2be5(5): mov $0x5c,%ebx
2bea(6): nop 0x0(%rax,%rax,1)
2bf0(3): xor %r12d,%r12d
2bf3(5): cmp $0x2,0x8(%rsp)
2bf8(3): setz %dl
2bfb(5): cmp $0x0,0xf(%rsp)
2c00(2): mov %edx,%eax
2c02(6): jnz 0x856(%rip)
2c08(3): mov %r8d,%eax
2c0b(3): xor $0x1,%eax
2c0e(2): and %dl,%al
2c10(2): jz 0x31(%rip)
2c12(3): cmp %r15,%r13
2c15(2): jbe 0x7(%rip)
2c17(5): mov $0x27,0x0(%r14,%r15,1)
2c1c(4): lea 0x1(%r15),%rdx
2c20(3): cmp %rdx,%r13
2c23(2): jbe 0x8(%rip)
2c25(6): mov $0x24,0x1(%r14,%r15,1)
2c2b(4): lea 0x2(%r15),%rdx
2c2f(3): cmp %rdx,%r13
2c32(2): jbe 0x8(%rip)
2c34(6): mov $0x27,0x2(%r14,%r15,1)
2c3a(4): add $0x3,%r15
2c3e(3): mov %eax,%r8d
2c41(3): cmp %r15,%r13
2c44(2): jbe 0x7(%rip)
2c46(5): mov $0x5c,0x0(%r14,%r15,1)
2c4b(4): add $0x1,%r15
2c4f(4): add $0x1,%rbp
2c53(5): jmp 0xfffffe8d(%rip)
2c58(8): nop 0x0(%rax,%rax,1)
2c60(5): cmp $0x0,0xd(%rsp)
2c65(6): jnz 0x1ce(%rip)
2c6b(2): xor %edx,%edx
2c6d(5): test $0x1,0x78(%rsp)
2c72(6): jz 0xffffff19(%rip)
2c78(4): add $0x1,%rbp
2c7c(5): jmp 0xfffffcbc(%rip)
2c81(7): nop 0x0(%rax)
2c88(5): cmp $0x2,0x8(%rsp)
2c8d(3): setz %dl
2c90(2): xor %eax,%eax
2c92(5): jmp 0xfffffde6(%rip)
2c97(9): nop 0x0(%rax,%rax,1)
2ca0(5): mov $0x7,%edx
2ca5(5): mov $0x61,%ebx
2caa(5): jmp 0xfffffeda(%rip)
2caf(1): nop 
2cb0(5): cmp $0x2,0x8(%rsp)
2cb5(3): setz %dl
2cb8(3): test %rbp,%rbp
2cbb(6): jnz 0xfffffdb1(%rip)
2cc1(5): movzx 0xf(%rsp),%eax
2cc6(2): and %dl,%al
2cc8(6): jz 0xfffffdb0(%rip)
2cce(3): mov %r11,%rbp
2cd1(8): mov $0x2,0x8(%rsp)
2cd9(5): jmp 0x700(%rip)
2cde(2): nop 
2ce0(5): cmp $0x2,0x8(%rsp)
2ce5(3): setz %dl
2ce8(3): xor %r12d,%r12d
2ceb(2): jmp 0xffffffd6(%rip)
2ced(3): nop (%rax)
2cf0(5): cmp $0x2,0x8(%rsp)
2cf5(5): mov $0x20,%ebx
2cfa(3): setz %dl
2cfd(2): jmp 0xffffffc4(%rip)
2cff(1): nop 
2d00(5): mov $0xd,%edx
2d05(5): mov $0x72,%ebx
2d0a(5): jmp 0xfffffe68(%rip)
2d0f(1): nop 
2d10(5): mov $0xc,%edx
2d15(5): mov $0x66,%ebx
2d1a(5): jmp 0xfffffe6a(%rip)
2d1f(1): nop 
2d20(5): mov $0xb,%edx
2d25(5): mov $0x76,%ebx
2d2a(5): jmp 0xfffffe5a(%rip)
2d2f(1): nop 
2d30(5): mov $0xa,%edx
2d35(5): mov $0x6e,%ebx
2d3a(5): jmp 0xfffffe38(%rip)
2d3f(1): nop 
2d40(3): xor %r10d,%r10d
2d43(5): nop 0x0(%rax,%rax,1)
2d48(6): cmp $0x1,0x58(%rsp)
2d4e(6): jnz 0x3aa(%rip)
2d54(5): mov %r11,0x38(%rsp)
2d59(5): mov %r8b,0x30(%rsp)
2d5e(5): mov %r10b,0x28(%rsp)
2d63(5): call 0xffffea4d(%rip)
2d68(3): mov (%rax),%rcx
2d6b(3): movzx %bl,%edx
2d6e(6): movzx 0x28(%rsp),%r10d
2d74(6): movzx 0x30(%rsp),%r8d
2d7a(5): mov 0x38(%rsp),%r11
2d7f(5): mov $0x1,%edi
2d84(4): movzx 0x0(%rcx,%rdx,2),%eax
2d88(4): and $0x4000,%ax
2d8c(4): setnz %r12b
2d90(3): setz %al
2d93(4): and 0xd(%rsp),%al
2d97(2): test %al,%al
2d99(6): jnz 0x998(%rip)
2d9f(5): cmp $0x2,0x8(%rsp)
2da4(3): setz %dl
2da7(5): jmp 0xfffffcd1(%rip)
2dac(4): nop 0x0(%rax)
2db0(4): movzx (%r9),%ebx
2db4(3): cmp $0x7e,%bl
2db7(2): jnbe 0xffffff89(%rip)
2db9(7): lea 0x2ac8(%rip),%rcx
2dc0(3): movzx %bl,%edx
2dc3(4): movsxd 0x0(%rcx,%rdx,4),%rax
2dc7(3): add %rcx,%rax
2dca(2): jmp %rax
2dcc(4): nop 0x0(%rax)
2dd0(3): xor %r10d,%r10d
2dd3(5): cmp $0x0,0xd(%rsp)
2dd8(6): jnz 0xfffffdf6(%rip)
2dde(2): nop 
2de0(5): mov $0x5c,%edx
2de5(5): mov $0x5c,%ebx
2dea(5): jmp 0xfffffd9a(%rip)
2def(1): nop 
2df0(5): mov $0xc,%edx
2df5(3): xor %r10d,%r10d
2df8(5): mov $0x66,%ebx
2dfd(5): jmp 0xfffffd87(%rip)
2e02(6): nop 0x0(%rax,%rax,1)
2e08(5): mov $0xa,%edx
2e0d(3): xor %r10d,%r10d
2e10(5): mov $0x6e,%ebx
2e15(5): jmp 0xfffffd5d(%rip)
2e1a(6): nop 0x0(%rax,%rax,1)
2e20(5): mov $0x61,%ebx
2e25(5): jmp 0xfffffdcb(%rip)
2e2a(6): nop 0x0(%rax,%rax,1)
2e30(3): xor %r10d,%r10d
2e33(5): cmp $0x2,0x8(%rsp)
2e38(3): setz %dl
2e3b(5): cmp $0x0,0xf(%rsp)
2e40(6): jnz 0xb9a(%rip)
2e46(3): mov %r8d,%eax
2e49(3): mov %r15,%rcx
2e4c(3): xor $0x1,%eax
2e4f(2): and %dl,%al
2e51(2): jz 0x2f(%rip)
2e53(3): cmp %r15,%r13
2e56(2): jbe 0x7(%rip)
2e58(5): mov $0x27,0x0(%r14,%r15,1)
2e5d(4): lea 0x1(%r15),%rcx
2e61(3): cmp %rcx,%r13
2e64(2): jbe 0x8(%rip)
2e66(6): mov $0x24,0x1(%r14,%r15,1)
2e6c(4): lea 0x2(%r15),%rcx
2e70(3): cmp %rcx,%r13
2e73(6): jnbe 0x636(%rip)
2e79(4): lea 0x3(%r15),%rcx
2e7d(3): mov %eax,%r8d
2e80(3): cmp %rcx,%r13
2e83(2): jbe 0x7(%rip)
2e85(5): mov $0x5c,0x0(%r14,%rcx,1)
2e8a(5): cmp $0x2,0x8(%rsp)
2e8f(4): lea 0x1(%rcx),%r15
2e93(6): jz 0x606(%rip)
2e99(4): lea 0x1(%rbp),%rax
2e9d(3): cmp %r11,%rax
2ea0(2): jnb 0x1b(%rip)
2ea2(5): mov 0x10(%rsp),%rax
2ea7(5): movzx 0x1(%rax,%rbp,1),%eax
2eac(4): mov %al,0x28(%rsp)
2eb0(3): sub $0x30,%eax
2eb3(2): cmp $0x9,%al
2eb5(6): jbe 0x834(%rip)
2ebb(3): mov %r12d,%eax
2ebe(5): mov $0x30,%ebx
2ec3(3): xor %r12d,%r12d
2ec6(5): jmp 0xfffffbb2(%rip)
2ecb(5): nop 0x0(%rax,%rax,1)
2ed0(5): cmp $0x2,0x8(%rsp)
2ed5(3): mov %r10d,%r12d
2ed8(3): setz %dl
2edb(3): xor %r10d,%r10d
2ede(2): xor %eax,%eax
2ee0(5): jmp 0xfffffb98(%rip)
2ee5(3): nop (%rax)
2ee8(5): cmp $0x2,0x8(%rsp)
2eed(3): setz %dl
2ef0(3): xor %r10d,%r10d
2ef3(5): jmp 0xfffffdc5(%rip)
2ef8(8): nop 0x0(%rax,%rax,1)
2f00(5): cmp $0x2,0x8(%rsp)
2f05(3): setz %dl
2f08(3): xor %r10d,%r10d
2f0b(3): xor %r12d,%r12d
2f0e(5): jmp 0xfffffdb3(%rip)
2f13(5): nop 0x0(%rax,%rax,1)
2f18(5): cmp $0x2,0x8(%rsp)
2f1d(3): mov %r10d,%r12d
2f20(5): mov $0x20,%ebx
2f25(3): setz %dl
2f28(3): xor %r10d,%r10d
2f2b(5): jmp 0xfffffd96(%rip)
2f30(5): mov $0xd,%edx
2f35(3): xor %r10d,%r10d
2f38(5): mov $0x72,%ebx
2f3d(5): jmp 0xfffffc35(%rip)
2f42(6): nop 0x0(%rax,%rax,1)
2f48(5): mov $0x76,%ebx
2f4d(5): jmp 0xfffffca3(%rip)
2f52(6): nop 0x0(%rax,%rax,1)
2f58(5): mov $0x9,%edx
2f5d(3): xor %r10d,%r10d
2f60(5): mov $0x74,%ebx
2f65(5): jmp 0xfffffc0d(%rip)
2f6a(6): nop 0x0(%rax,%rax,1)
2f70(5): mov $0x62,%ebx
2f75(5): jmp 0xfffffc7b(%rip)
2f7a(6): nop 0x0(%rax,%rax,1)
2f80(3): xor %r10d,%r10d
2f83(5): jmp 0xfffffa9d(%rip)
2f88(8): nop 0x0(%rax,%rax,1)
2f90(5): cmp $0x0,0xf(%rsp)
2f95(6): jnz 0x96b(%rip)
2f9b(4): add $0x1,%rbp
2f9f(3): mov %r8d,%eax
2fa2(3): xor %r12d,%r12d
2fa5(5): mov $0x5c,%ebx
2faa(5): jmp 0xfffffb12(%rip)
2faf(1): nop 
2fb0(5): cmp $0x2,0x8(%rsp)
2fb5(5): movzx 0xf(%rsp),%ebx
2fba(3): mov %r8d,%r12d
2fbd(3): mov %r11,%rbp
2fc0(3): setz %dl
2fc3(2): mov %ebx,%eax
2fc5(3): test %r15,%r15
2fc8(3): setz %cl
2fcb(2): and %edx,%eax
2fcd(2): and %cl,%al
2fcf(6): jnz 0xa67(%rip)
2fd5(2): mov %ebx,%eax
2fd7(3): xor $0x1,%eax
2fda(2): and %al,%dl
2fdc(6): jz 0x970(%rip)
2fe2(5): cmp $0x0,0x7c(%rsp)
2fe7(6): jz 0x963(%rip)
2fed(5): cmp $0x0,0xe(%rsp)
2ff2(6): jnz 0x9fb(%rip)
2ff8(3): test %r13,%r13
2ffb(3): setz %al
2ffe(6): cmp $0x0,0x50(%rsp)
3004(3): setnz %dl
3007(2): and %dl,%al
3009(6): jz 0xa23(%rip)
300f(5): mov 0x50(%rsp),%r13
3014(7): lea 0x25e2(%rip),%rbx
301b(4): mov $0x27,(%r14)
301f(8): mov $0x2,0x8(%rsp)
3027(6): mov $0x1,%r15d
302d(9): mov $0x1,0x18(%rsp)
3036(5): mov $0x0,0xf(%rsp)
303b(5): mov %rbx,0x48(%rsp)
3040(4): mov %al,0x7c(%rsp)
3044(5): jmp 0xfffff8df(%rip)
3049(7): nop 0x0(%rax)
3050(5): cmp $0x0,0xf(%rsp)
3055(6): jnz 0x8ab(%rip)
305b(3): test %r13,%r13
305e(6): jz 0x402(%rip)
3064(2): xor %edx,%edx
3066(6): cmp $0x0,0x50(%rsp)
306c(6): jnz 0x3f4(%rip)
3072(5): mov %r13,0x50(%rsp)
3077(4): add $0x3,%r15
307b(2): xor %eax,%eax
307d(5): mov %r12b,0x7c(%rsp)
3082(3): xor %r8d,%r8d
3085(3): mov %rdx,%r13
3088(5): mov $0x27,%ebx
308d(5): jmp 0xfffffa1c(%rip)
3092(6): nop 0x0(%rax,%rax,1)
3098(5): test $0x4,0x78(%rsp)
309d(2): jz 0x23(%rip)
309f(4): lea 0x2(%rbp),%rcx
30a3(3): cmp %r11,%rcx
30a6(2): jnb 0x1a(%rip)
30a8(5): mov 0x10(%rsp),%rax
30ad(5): cmp $0x3f,0x1(%rax,%rbp,1)
30b2(6): jz 0x790(%rip)
30b8(8): nop 0x0(%rax,%rax,1)
30c0(2): xor %edx,%edx
30c2(3): xor %r12d,%r12d
30c5(2): xor %eax,%eax
30c7(5): mov $0x3f,%ebx
30cc(5): jmp 0xfffff9ac(%rip)
30d1(7): nop 0x0(%rax)
30d8(5): cmp $0x0,0xf(%rsp)
30dd(6): jnz 0x823(%rip)
30e3(3): xor %r12d,%r12d
30e6(2): xor %eax,%eax
30e8(5): mov $0x3f,%ebx
30ed(5): jmp 0xfffff9bc(%rip)
30f2(6): nop 0x0(%rax,%rax,1)
30f8(8): lea 0xa0(%rsp),%rax
3100(4): cmp $0xffffffff,%r11
3104(c): mov $0x0,0xa0(%rsp)
3110(5): mov %rax,0x28(%rsp)
3115(2): jnz 0x2f(%rip)
3117(5): mov 0x10(%rsp),%rdi
311c(5): mov %r8b,0x40(%rsp)
3121(5): mov %r10b,0x38(%rsp)
3126(5): mov %r9,0x30(%rsp)
312b(5): call 0xffffe435(%rip)
3130(6): movzx 0x40(%rsp),%r8d
3136(6): movzx 0x38(%rsp),%r10d
313c(3): mov %rax,%r11
313f(5): mov 0x30(%rsp),%r9
3144(8): lea 0x9c(%rsp),%rax
314c(2): xor %ecx,%ecx
314e(4): mov %bl,0x7e(%rsp)
3152(5): mov %r8b,0x7d(%rsp)
3157(3): mov %rcx,%rbx
315a(8): mov %r9,0x88(%rsp)
3162(5): mov %rax,0x38(%rsp)
3167(5): mov %r10b,0x7f(%rsp)
316c(8): mov %r15,0x80(%rsp)
3174(5): mov %r14,0x40(%rsp)
3179(5): mov %r13,0x70(%rsp)
317e(5): mov %r11,0x30(%rsp)
3183(5): mov 0x10(%rsp),%rax
3188(5): lea 0x0(%rbp,%rbx,1),%r14
318d(5): mov 0x30(%rsp),%rdx
3192(5): mov 0x28(%rsp),%rcx
3197(5): mov 0x38(%rsp),%rdi
319c(4): lea 0x0(%rax,%r14,1),%r13
31a0(3): sub %r14,%rdx
31a3(3): mov %r13,%rsi
31a6(5): call 0x1baa(%rip)
31ab(3): test %rax,%rax
31ae(3): mov %rax,%r15
31b1(2): jz 0x50(%rip)
31b3(4): cmp $0xffffffff,%rax
31b7(6): jz 0x61e(%rip)
31bd(4): cmp $0xfffffffe,%rax
31c1(6): jz 0x5a0(%rip)
31c7(5): cmp $0x2,0x8(%rsp)
31cc(3): setz %al
31cf(4): and 0xf(%rsp),%al
31d3(6): jnz 0x19d(%rip)
31d9(7): mov 0x9c(%rsp),%edi
31e0(5): call 0xffffe5b0(%rip)
31e5(5): mov 0x28(%rsp),%rdi
31ea(2): test %eax,%eax
31ec(5): mov $0x0,%eax
31f1(4): cmove %eax,%r12d
31f5(3): add %r15,%rbx
31f8(5): call 0xffffe588(%rip)
31fd(2): test %eax,%eax
31ff(2): jz 0xffffff84(%rip)
3201(3): mov %r12d,%edx
3204(3): mov %rbx,%rdi
3207(6): movzx 0x7d(%rsp),%r8d
320d(3): xor $0x1,%edx
3210(5): movzx 0x7e(%rsp),%ebx
3215(6): movzx 0x7f(%rsp),%r10d
321b(4): and 0xd(%rsp),%dl
321f(8): mov 0x80(%rsp),%r15
3227(5): mov 0x40(%rsp),%r14
322c(5): mov 0x70(%rsp),%r13
3231(5): mov 0x30(%rsp),%r11
3236(4): cmp $0x1,%rdi
323a(6): jbe 0x601(%rip)
3240(3): mov %rdi,%rcx
3243(2): xor %esi,%esi
3245(6): movzx 0xf(%rsp),%r9d
324b(3): add %rbp,%rcx
324e(5): mov 0x10(%rsp),%rdi
3253(5): jmp 0xbb(%rip)
3258(8): nop 0x0(%rax,%rax,1)
3260(5): cmp $0x2,0x8(%rsp)
3265(3): setz %al
3268(3): test %r9b,%r9b
326b(6): jnz 0x4b5(%rip)
3271(3): mov %r8d,%esi
3274(3): xor $0x1,%esi
3277(3): and %sil,%al
327a(2): jz 0x31(%rip)
327c(3): cmp %r15,%r13
327f(2): jbe 0x7(%rip)
3281(5): mov $0x27,0x0(%r14,%r15,1)
3286(4): lea 0x1(%r15),%rsi
328a(3): cmp %rsi,%r13
328d(2): jbe 0x8(%rip)
328f(6): mov $0x24,0x1(%r14,%r15,1)
3295(4): lea 0x2(%r15),%rsi
3299(3): cmp %rsi,%r13
329c(2): jbe 0x8(%rip)
329e(6): mov $0x27,0x2(%r14,%r15,1)
32a4(4): add $0x3,%r15
32a8(3): mov %eax,%r8d
32ab(3): cmp %r15,%r13
32ae(2): jbe 0x7(%rip)
32b0(5): mov $0x5c,0x0(%r14,%r15,1)
32b5(4): lea 0x1(%r15),%rax
32b9(3): cmp %rax,%r13
32bc(2): jbe 0xf(%rip)
32be(2): mov %ebx,%eax
32c0(3): shr $0x6,%al
32c3(3): add $0x30,%eax
32c6(5): mov %al,0x1(%r14,%r15,1)
32cb(4): lea 0x2(%r15),%rax
32cf(3): cmp %rax,%r13
32d2(2): jbe 0x12(%rip)
32d4(2): mov %ebx,%eax
32d6(3): shr $0x3,%al
32d9(3): and $0x7,%eax
32dc(3): add $0x30,%eax
32df(5): mov %al,0x2(%r14,%r15,1)
32e4(3): and $0x7,%ebx
32e7(4): add $0x1,%rbp
32eb(4): add $0x3,%r15
32ef(3): add $0x30,%ebx
32f2(3): cmp %rcx,%rbp
32f5(6): jnb 0xfffff7eb(%rip)
32fb(2): mov %edx,%esi
32fd(3): cmp %r15,%r13
3300(2): jbe 0x6(%rip)
3302(4): mov %bl,0x0(%r14,%r15,1)
3306(4): movzx 0x0(%rdi,%rbp,1),%ebx
330a(4): add $0x1,%r15
330e(2): test %dl,%dl
3310(6): jnz 0xffffff50(%rip)
3316(2): mov %esi,%eax
3318(3): xor $0x1,%eax
331b(3): and %r8d,%eax
331e(3): test %r10b,%r10b
3321(2): jz 0x10(%rip)
3323(3): cmp %r15,%r13
3326(2): jbe 0x7(%rip)
3328(5): mov $0x5c,0x0(%r14,%r15,1)
332d(4): add $0x1,%r15
3331(4): add $0x1,%rbp
3335(3): cmp %rcx,%rbp
3338(6): jnb 0xfffff784(%rip)
333e(2): test %al,%al
3340(6): jz 0x3fe(%rip)
3346(3): cmp %r15,%r13
3349(2): jbe 0x7(%rip)
334b(5): mov $0x27,0x0(%r14,%r15,1)
3350(4): lea 0x1(%r15),%rax
3354(3): cmp %rax,%r13
3357(2): jbe 0x8(%rip)
3359(6): mov $0x27,0x1(%r14,%r15,1)
335f(4): add $0x2,%r15
3363(3): xor %r10d,%r10d
3366(3): xor %r8d,%r8d
3369(2): jmp 0xffffff94(%rip)
336b(5): nop 0x0(%rax,%rax,1)
3370(4): cmp $0x1,%r15
3374(6): jz 0xfffffe65(%rip)
337a(5): mov 0x10(%rsp),%rdi
337f(4): lea 0x0(%rdi,%r15,1),%rcx
3383(5): lea 0x1(%rdi,%r14,1),%rdx
3388(4): lea 0x0(%rcx,%r14,1),%r8
338c(2): jmp 0x11(%rip)
338e(2): nop 
3390(4): add $0x1,%rdx
3394(3): cmp %rdx,%r8
3397(6): jz 0xfffffe42(%rip)
339d(3): movzx (%rdx),%ecx
33a0(3): sub $0x5b,%ecx
33a3(3): cmp $0x21,%cl
33a6(2): jnbe 0xffffffea(%rip)
33a8(5): mov $0x1,%esi
33ad(3): shl/sal %cl,%rsi
33b0(3): mov %rsi,%rcx
33b3(a): mov $0x8589934635,%rsi
33bd(3): test %rsi,%rcx
33c0(2): jz 0xffffffd0(%rip)
33c2(5): mov 0x40(%rsp),%r14
33c7(5): mov 0x70(%rsp),%r13
33cc(5): mov 0x30(%rsp),%rbp
33d1(8): mov $0x2,0x8(%rsp)
33d9(5): cmp $0x0,0xd(%rsp)
33de(2): jz 0x12(%rip)
33e0(2): test %al,%al
33e2(5): mov $0x4,%eax
33e7(5): cmove 0x8(%rsp),%eax
33ec(4): mov %eax,0x8(%rsp)
33f0(4): sub $0x8,%rsp
33f4(3): mov %rbp,%rcx
33f7(3): mov %r13,%rsi
33fa(4): push 0x68(%rsp)
33fe(4): push 0x78(%rsp)
3402(3): mov %r14,%rdi
3405(2): push $0x0
3407(8): mov 0x98(%rsp),%r9d
340f(5): mov 0x28(%rsp),%r8d
3414(5): mov 0x30(%rsp),%rdx
3419(4): and $0xfd,%r9d
341d(5): call 0xfffff433(%rip)
3422(4): add $0x20,%rsp
3426(3): mov %rax,%r15
3429(8): mov 0xa8(%rsp),%rbx
3431(9): xor $0x28,%rbx
343a(3): mov %r15,%rax
343d(6): jnz 0x606(%rip)
3443(7): add $0xb8,%rsp
344a(1): pop %rbx
344b(1): pop %rbp
344c(2): pop %r12
344e(2): pop %r13
3450(2): pop %r14
3452(2): pop %r15
3454(1): ret near (%rsp)
3455(3): nop (%rax)
3458(3): mov %r11,%rbp
345b(5): jmp 0xffffff7e(%rip)
3460(3): cmp %r15,%r13
3463(2): jbe 0x7(%rip)
3465(5): mov $0x27,0x0(%r14,%r15,1)
346a(4): lea 0x1(%r15),%rax
346e(3): cmp %rax,%r13
3471(2): jbe 0x8(%rip)
3473(6): mov $0x5c,0x1(%r14,%r15,1)
3479(4): lea 0x2(%r15),%rax
347d(3): cmp %rax,%r13
3480(6): jbe 0x5f2(%rip)
3486(3): mov %r13,%rdx
3489(6): mov $0x27,0x2(%r14,%r15,1)
348f(5): mov 0x50(%rsp),%r13
3494(5): jmp 0xfffffbde(%rip)
3499(3): mov %r12d,%eax
349c(5): mov $0x30,%ebx
34a1(3): xor %r12d,%r12d
34a4(5): jmp 0xfffff605(%rip)
34a9(6): mov $0x27,0x2(%r14,%r15,1)
34af(5): jmp 0xfffff9ca(%rip)
34b4(2): test %ebx,%ebx
34b6(6): jnz 0xfffff42d(%rip)
34bc(5): mov $0x1,0xd(%rsp)
34c1(3): test %r13,%r13
34c4(6): jnz 0x596(%rip)
34ca(7): lea 0x212c(%rip),%rax
34d1(9): mov $0x0,0x50(%rsp)
34da(5): mov $0x1,0xe(%rsp)
34df(5): mov $0x0,0x7c(%rsp)
34e4(3): xor %r12d,%r12d
34e7(5): mov $0x0,0xf(%rsp)
34ec(9): mov $0x1,0x18(%rsp)
34f5(5): mov %rax,0x48(%rsp)
34fa(6): mov $0x1,%r15d
3500(8): mov $0x2,0x8(%rsp)
3508(5): jmp 0xfffff41b(%rip)
350d(3): nop (%rax)
3510(2): test %ebx,%ebx
3512(6): jnz 0x3fb(%rip)
3518(3): test %r13,%r13
351b(6): jz 0x22b(%rip)
3521(4): mov $0x22,(%r14)
3525(5): mov $0x1,0xe(%rsp)
352a(3): xor %r12d,%r12d
352d(5): mov $0x0,0x7c(%rsp)
3532(9): mov $0x0,0x50(%rsp)
353b(7): lea 0x20b9(%rip),%rax
3542(5): mov $0x0,0xf(%rsp)
3547(5): mov $0x1,0xd(%rsp)
354c(9): mov $0x1,0x18(%rsp)
3555(6): mov $0x1,%r15d
355b(5): mov %rax,0x48(%rsp)
3560(5): jmp 0xfffff3c3(%rip)
3565(7): lea 0x208f(%rip),%rax
356c(5): mov $0x1,0xe(%rsp)
3571(5): mov $0x0,0x7c(%rsp)
3576(3): xor %r12d,%r12d
3579(9): mov $0x0,0x50(%rsp)
3582(5): mov $0x1,0xf(%rsp)
3587(5): mov $0x1,0xd(%rsp)
358c(9): mov $0x1,0x18(%rsp)
3595(3): xor %r15d,%r15d
3598(5): mov %rax,0x48(%rsp)
359d(8): mov $0x5,0x8(%rsp)
35a5(5): jmp 0xfffff37e(%rip)
35aa(5): mov $0x1,0xe(%rsp)
35af(5): mov $0x0,0x7c(%rsp)
35b4(3): xor %r12d,%r12d
35b7(9): mov $0x0,0x50(%rsp)
35c0(5): mov $0x0,0xf(%rsp)
35c5(3): xor %r15d,%r15d
35c8(5): mov $0x1,0xd(%rsp)
35cd(9): mov $0x0,0x18(%rsp)
35d6(9): mov $0x0,0x48(%rsp)
35df(5): jmp 0xfffff344(%rip)
35e4(5): cmp $0xa,0x8(%rsp)
35e9(2): jz 0x58(%rip)
35eb(7): lea 0x200d(%rip),%rsi
35f2(2): xor %edi,%edi
35f4(5): mov $0x5,%edx
35f9(5): call 0xffffdf47(%rip)
35fe(3): mov %rax,%rcx
3601(5): mov %rax,0x68(%rsp)
3606(7): lea 0x1ff2(%rip),%rax
360d(3): cmp %rax,%rcx
3610(6): jz 0x39e(%rip)
3616(7): lea 0x1fe0(%rip),%rsi
361d(2): xor %edi,%edi
361f(5): mov $0x5,%edx
3624(5): call 0xffffdf1c(%rip)
3629(3): mov %rax,%rcx
362c(5): mov %rax,0x60(%rsp)
3631(7): lea 0x1fc5(%rip),%rax
3638(3): cmp %rax,%rcx
363b(6): jz 0x389(%rip)
3641(3): xor %r15d,%r15d
3644(2): test %ebx,%ebx
3646(6): jz 0x1c7(%rip)
364c(2): test %ebx,%ebx
364e(5): mov 0x60(%rsp),%rbx
3653(5): setnz 0xf(%rsp)
3658(3): xor %r12d,%r12d
365b(3): mov %rbx,%rdi
365e(5): call 0xffffdf02(%rip)
3663(5): mov %rbx,0x48(%rsp)
3668(5): mov %rax,0x18(%rsp)
366d(5): mov $0x1,0xe(%rsp)
3672(5): mov $0x0,0x7c(%rsp)
3677(9): mov $0x0,0x50(%rsp)
3680(5): mov $0x1,0xd(%rsp)
3685(5): jmp 0xfffff29e(%rip)
368a(5): mov $0x1,0xe(%rsp)
368f(5): mov $0x0,0x7c(%rsp)
3694(3): xor %r12d,%r12d
3697(9): mov $0x0,0x50(%rsp)
36a0(5): mov $0x0,0xf(%rsp)
36a5(3): xor %r15d,%r15d
36a8(5): mov $0x0,0xd(%rsp)
36ad(9): mov $0x0,0x18(%rsp)
36b6(9): mov $0x0,0x48(%rsp)
36bf(5): jmp 0xfffff264(%rip)
36c4(5): mov $0x1,0xe(%rsp)
36c9(5): mov $0x0,0x7c(%rsp)
36ce(3): xor %r12d,%r12d
36d1(9): mov $0x0,0x50(%rsp)
36da(5): mov $0x1,0xf(%rsp)
36df(5): mov $0x1,0xd(%rsp)
36e4(5): jmp 0xfffff21f(%rip)
36e9(3): cmp %r15,%r13
36ec(2): jbe 0x7(%rip)
36ee(5): mov $0x30,0x0(%r14,%r15,1)
36f3(4): lea 0x2(%rcx),%rax
36f7(3): cmp %rax,%r13
36fa(2): jbe 0x8(%rip)
36fc(6): mov $0x30,0x2(%r14,%rcx,1)
3702(3): mov %r12d,%eax
3705(4): lea 0x3(%rcx),%r15
3709(3): xor %r12d,%r12d
370c(5): mov $0x30,%ebx
3711(5): jmp 0xfffff367(%rip)
3716(a): nop 0x0(%rax,%rax,1)
3720(5): movzx 0xf(%rsp),%ebx
3725(3): mov %r11,%rbp
3728(4): mov %bl,0xd(%rsp)
372c(5): jmp 0xfffffcad(%rip)
3731(5): movzx 0xd(%rsp),%edx
3736(3): xor %r12d,%r12d
3739(5): jmp 0xfffffb07(%rip)
373e(3): xor %r10d,%r10d
3741(5): jmp 0xfffffbbc(%rip)
3746(9): mov $0x0,0x50(%rsp)
374f(5): mov $0x1,0xe(%rsp)
3754(3): xor %r12d,%r12d
3757(5): mov $0x0,0x7c(%rsp)
375c(5): jmp 0xfffffddf(%rip)
3761(5): mov 0x30(%rsp),%r11
3766(3): mov %r14,%rsi
3769(3): mov %r13,%rcx
376c(3): mov %rbx,%rax
376f(3): mov %rbx,%rdi
3772(6): movzx 0x7d(%rsp),%r8d
3778(5): movzx 0x7e(%rsp),%ebx
377d(8): mov 0x88(%rsp),%r9
3785(3): cmp %r11,%rsi
3788(6): movzx 0x7f(%rsp),%r10d
378e(8): mov 0x80(%rsp),%r15
3796(5): mov 0x40(%rsp),%r14
379b(5): mov 0x70(%rsp),%r13
37a0(2): jnb 0x28(%rip)
37a2(3): cmp $0x0,(%rcx)
37a5(2): jnz 0x12(%rip)
37a7(2): jmp 0x21(%rip)
37a9(7): nop 0x0(%rax)
37b0(5): cmp $0x0,0x0(%r9,%rax,1)
37b5(2): jz 0x10(%rip)
37b7(4): add $0x1,%rax
37bb(5): lea 0x0(%rbp,%rax,1),%rdx
37c0(3): cmp %rdx,%r11
37c3(2): jnbe 0xffffffed(%rip)
37c5(3): mov %rax,%rdi
37c8(5): movzx 0xd(%rsp),%edx
37cd(3): xor %r12d,%r12d
37d0(5): jmp 0xfffffa66(%rip)
37d5(3): mov %rbx,%rdi
37d8(6): movzx 0x7d(%rsp),%r8d
37de(5): movzx 0x7e(%rsp),%ebx
37e3(6): movzx 0x7f(%rsp),%r10d
37e9(8): mov 0x80(%rsp),%r15
37f1(3): xor %r12d,%r12d
37f4(5): mov 0x40(%rsp),%r14
37f9(5): mov 0x70(%rsp),%r13
37fe(5): mov 0x30(%rsp),%r11
3803(5): movzx 0xd(%rsp),%edx
3808(5): jmp 0xfffffa2e(%rip)
380d(5): mov 0x68(%rsp),%rdx
3812(3): movzx (%rdx),%eax
3815(2): test %al,%al
3817(6): jz 0xfffffe35(%rip)
381d(3): nop (%rax)
3820(3): cmp %r15,%r13
3823(2): jbe 0x6(%rip)
3825(4): mov %al,0x0(%r14,%r15,1)
3829(4): add $0x1,%r15
382d(5): movzx 0x0(%rdx,%r15,1),%eax
3832(2): test %al,%al
3834(2): jnz 0xffffffec(%rip)
3836(5): jmp 0xfffffe16(%rip)
383b(2): mov %edx,%eax
383d(5): jmp 0xfffff55a(%rip)
3842(4): movzx 0x0(%rax,%rcx,1),%ebx
3846(3): cmp $0x3e,%bl
3849(6): jnbe 0xfffff877(%rip)
384f(a): mov $0x8070630310989004800,%rax
3859(4): bt %rbx,%rax
385d(6): jnb 0xfffff863(%rip)
3863(5): cmp $0x0,0xf(%rsp)
3868(6): jnz 0x1ea(%rip)
386e(3): cmp %r15,%r13
3871(2): jbe 0x7(%rip)
3873(5): mov $0x3f,0x0(%r14,%r15,1)
3878(4): lea 0x1(%r15),%rax
387c(3): cmp %rax,%r13
387f(2): jbe 0x8(%rip)
3881(6): mov $0x22,0x1(%r14,%r15,1)
3887(4): lea 0x2(%r15),%rax
388b(3): cmp %rax,%r13
388e(2): jbe 0x8(%rip)
3890(6): mov $0x22,0x2(%r14,%r15,1)
3896(4): lea 0x3(%r15),%rax
389a(3): cmp %rax,%r13
389d(2): jbe 0x8(%rip)
389f(6): mov $0x3f,0x3(%r14,%r15,1)
38a5(4): add $0x4,%r15
38a9(2): xor %edx,%edx
38ab(3): xor %r12d,%r12d
38ae(2): xor %eax,%eax
38b0(3): mov %rcx,%rbp
38b3(5): jmp 0xfffff1c5(%rip)
38b8(2): test %ebx,%ebx
38ba(6): jz 0x18e(%rip)
38c0(7): lea 0x1d36(%rip),%rax
38c7(5): mov $0x1,0xe(%rsp)
38cc(5): mov $0x0,0x7c(%rsp)
38d1(3): xor %r12d,%r12d
38d4(9): mov $0x0,0x50(%rsp)
38dd(5): mov $0x1,0xf(%rsp)
38e2(5): mov $0x0,0xd(%rsp)
38e7(9): mov $0x1,0x18(%rsp)
38f0(3): xor %r15d,%r15d
38f3(5): mov %rax,0x48(%rsp)
38f8(5): jmp 0xfffff02b(%rip)
38fd(3): nop (%rax)
3900(3): mov %r11,%rbp
3903(5): movzx 0xf(%rsp),%eax
3908(5): jmp 0xfffffad1(%rip)
390d(7): lea 0x1ce7(%rip),%rax
3914(5): mov $0x1,0xe(%rsp)
3919(5): mov $0x0,0x7c(%rsp)
391e(3): xor %r12d,%r12d
3921(9): mov $0x0,0x50(%rsp)
392a(5): mov $0x1,0xf(%rsp)
392f(5): mov $0x1,0xd(%rsp)
3934(9): mov $0x1,0x18(%rsp)
393d(3): xor %r15d,%r15d
3940(5): mov %rax,0x48(%rsp)
3945(5): jmp 0xffffefde(%rip)
394a(2): mov %edx,%eax
394c(5): mov 0x48(%rsp),%rbx
3951(3): test %rbx,%rbx
3954(2): jz 0x2e(%rip)
3956(2): test %al,%al
3958(2): jz 0x2a(%rip)
395a(3): movzx (%rbx),%ecx
395d(3): mov %rbx,%rax
3960(2): test %cl,%cl
3962(2): jz 0x20(%rip)
3964(3): mov %r15,%rdx
3967(3): sub %r15,%rax
396a(3): cmp %rdx,%r13
396d(2): jbe 0x6(%rip)
396f(4): mov %cl,0x0(%r14,%rdx,1)
3973(4): add $0x1,%rdx
3977(4): movzx 0x0(%rax,%rdx,1),%ecx
397b(2): test %cl,%cl
397d(2): jnz 0xffffffed(%rip)
397f(3): mov %rdx,%r15
3982(3): cmp %r15,%r13
3985(6): jbe 0xfffffaa4(%rip)
398b(5): mov $0x0,0x0(%r14,%r15,1)
3990(5): jmp 0xfffffa99(%rip)
3995(5): cmp $0x2,0x8(%rsp)
399a(5): movzx 0xf(%rsp),%ebx
399f(3): mov %r11,%rbp
39a2(3): setz %al
39a5(4): mov %bl,0xd(%rsp)
39a9(5): jmp 0xfffffa30(%rip)
39ae(4): mov 0x8(%rsp),%esi
39b2(3): mov %rcx,%rdi
39b5(5): call 0xffffedab(%rip)
39ba(5): mov %rax,0x68(%rsp)
39bf(5): jmp 0xfffffc57(%rip)
39c4(4): mov 0x8(%rsp),%esi
39c8(3): mov %rcx,%rdi
39cb(5): call 0xffffed95(%rip)
39d0(5): mov %rax,0x60(%rsp)
39d5(5): jmp 0xfffffc6c(%rip)
39da(5): movzx 0xf(%rsp),%ebx
39df(3): mov %r11,%rbp
39e2(2): mov %edx,%eax
39e4(4): mov %bl,0xd(%rsp)
39e8(5): jmp 0xfffff9f1(%rip)
39ed(4): sub $0x8,%rsp
39f1(6): mov $0x5,%r8d
39f7(3): mov %r11,%rcx
39fa(4): push 0x68(%rsp)
39fe(4): push 0x78(%rsp)
3a02(3): mov %r14,%rdi
3a05(4): push 0x38(%rsp)
3a09(8): mov 0x98(%rsp),%r9d
3a11(5): mov 0x30(%rsp),%rdx
3a16(5): mov 0x70(%rsp),%rsi
3a1b(5): call 0xffffee35(%rip)
3a20(4): add $0x20,%rsp
3a24(3): mov %rax,%r15
3a27(5): jmp 0xfffffa02(%rip)
3a2c(5): movzx 0x7c(%rsp),%eax
3a31(5): jmp 0xffffff1b(%rip)
3a36(8): mov $0x2,0x8(%rsp)
3a3e(5): jmp 0xfffff99b(%rip)
3a43(5): call 0xffffdb4d(%rip)
3a48(5): mov $0x0,0xd(%rsp)
3a4d(5): jmp 0xfffffa74(%rip)
3a52(3): mov %r11,%rbp
3a55(5): jmp 0xfffff99b(%rip)
3a5a(5): mov $0x1,0xe(%rsp)
3a5f(2): xor %eax,%eax
3a61(3): xor %r12d,%r12d
3a64(9): mov $0x0,0x50(%rsp)
3a6d(5): jmp 0xfffff5a7(%rip)
3a72(3): mov %r13,%rdx
3a75(5): mov 0x50(%rsp),%r13
3a7a(5): jmp 0xfffff5f8(%rip)
3a7f(5): call 0xffffda21(%rip)

"quotearg_n_options" :
3a90(2): push %r15
3a92(2): push %r14
3a94(3): movsxd %edi,%r15
3a97(2): push %r13
3a99(2): push %r12
3a9b(3): mov %rdx,%r14
3a9e(1): push %rbp
3a9f(1): push %rbx
3aa0(3): mov %rcx,%rbp
3aa3(4): sub $0x28,%rsp
3aa7(5): mov %rsi,0x8(%rsp)
3aac(5): call 0xffffda04(%rip)
3ab1(3): mov %rax,%r13
3ab4(2): mov (%rax),%eax
3ab6(3): test %r15d,%r15d
3ab9(7): mov 0x2045a0(%rip),%rbx
3ac0(4): mov %eax,0x18(%rsp)
3ac4(6): js 0x16d(%rip)
3aca(7): cmp %r15d,0x204587(%rip)
3ad1(2): jnle 0x64(%rip)
3ad3(7): cmp $0x7fffffff,%r15d
3ada(6): jz 0x15c(%rip)
3ae0(4): lea 0x1(%r15),%r12d
3ae4(7): lea 0x204585(%rip),%rax
3aeb(3): movsxd %r12d,%rsi
3aee(4): shl/sal $0x4,%rsi
3af2(3): cmp %rax,%rbx
3af5(6): jz 0x11b(%rip)
3afb(3): mov %rbx,%rdi
3afe(5): call 0xff2(%rip)
3b03(3): mov %rax,%rbx
3b06(7): mov %rax,0x204553(%rip)
3b0d(7): movsxd 0x204544(%rip),%rdi
3b14(3): mov %r12d,%edx
3b17(2): xor %esi,%esi
3b19(2): sub %edi,%edx
3b1b(4): shl/sal $0x4,%rdi
3b1f(3): movsxd %edx,%rdx
3b22(3): add %rbx,%rdi
3b25(4): shl/sal $0x4,%rdx
3b29(5): call 0xffffdab7(%rip)
3b2e(7): mov %r12d,0x204523(%rip)
3b35(3): mov 0x4(%rbp),%eax
3b38(4): shl/sal $0x4,%r15
3b3c(4): sub $0x8,%rsp
3b40(3): add %r15,%rbx
3b43(4): lea 0x8(%rbp),%r15
3b47(4): mov 0x0(%rbp),%r8d
3b4b(3): mov (%rbx),%r11
3b4e(4): mov 0x8(%rbx),%r12
3b52(3): mov %r14,%rcx
3b55(3): or $0x1,%eax
3b58(4): mov %eax,0x24(%rsp)
3b5c(3): push 0x30(%rbp)
3b5f(3): mov %eax,%r9d
3b62(3): push 0x28(%rbp)
3b65(2): push %r15
3b67(3): mov %r11,%rsi
3b6a(5): mov 0x28(%rsp),%rdx
3b6f(3): mov %r12,%rdi
3b72(5): mov %r11,0x30(%rsp)
3b77(5): call 0xffffecd9(%rip)
3b7c(4): add $0x20,%rsp
3b80(5): mov 0x10(%rsp),%r11
3b85(3): cmp %rax,%r11
3b88(2): jnbe 0x69(%rip)
3b8a(4): lea 0x1(%rax),%rsi
3b8e(7): lea 0x20454b(%rip),%rax
3b95(3): cmp %rax,%r12
3b98(3): mov %rsi,(%rbx)
3b9b(2): jz 0x14(%rip)
3b9d(3): mov %r12,%rdi
3ba0(5): mov %rsi,0x10(%rsp)
3ba5(5): call 0xffffd8eb(%rip)
3baa(5): mov 0x10(%rsp),%rsi
3baf(3): mov %rsi,%rdi
3bb2(5): mov %rsi,0x10(%rsp)
3bb7(5): call 0xed9(%rip)
3bbc(4): sub $0x8,%rsp
3bc0(4): mov %rax,0x8(%rbx)
3bc4(4): mov 0x0(%rbp),%r8d
3bc8(3): push 0x30(%rbp)
3bcb(3): push 0x28(%rbp)
3bce(3): mov %r14,%rcx
3bd1(2): push %r15
3bd3(5): mov 0x3c(%rsp),%r9d
3bd8(3): mov %rax,%rdi
3bdb(5): mov 0x28(%rsp),%rdx
3be0(5): mov 0x30(%rsp),%rsi
3be5(3): mov %rax,%r12
3be8(5): call 0xffffec68(%rip)
3bed(4): add $0x20,%rsp
3bf1(4): mov 0x18(%rsp),%eax
3bf5(4): mov %eax,0x0(%r13)
3bf9(4): add $0x28,%rsp
3bfd(3): mov %r12,%rax
3c00(1): pop %rbx
3c01(1): pop %rbp
3c02(2): pop %r12
3c04(2): pop %r13
3c06(2): pop %r14
3c08(2): pop %r15
3c0a(1): ret near (%rsp)
3c0b(5): nop 0x0(%rax,%rax,1)
3c10(2): xor %edi,%edi
3c12(5): call 0xede(%rip)
3c17(8): movdqa 0x204451(%rip),%xmm0
3c1f(3): mov %rax,%rbx
3c22(7): mov %rax,0x204437(%rip)
3c29(3): movups %xmm0,(%rax)
3c2c(5): jmp 0xfffffee1(%rip)
3c31(5): call 0xffffd86f(%rip)
3c36(5): call 0x10aa(%rip)

"clone_quoting_options" :
3c40(2): push %r12
3c42(1): push %rbp
3c43(1): push %rbx
3c44(3): mov %rdi,%rbx
3c47(5): call 0xffffd869(%rip)
3c4c(3): mov (%rax),%r12d
3c4f(3): mov %rax,%rbp
3c52(7): lea 0x204587(%rip),%rax
3c59(3): test %rbx,%rbx
3c5c(5): mov $0x38,%esi
3c61(4): cmove %rax,%rbx
3c65(3): mov %rbx,%rdi
3c68(5): call 0x1028(%rip)
3c6d(4): mov %r12d,0x0(%rbp)
3c71(1): pop %rbx
3c72(1): pop %rbp
3c73(2): pop %r12
3c75(1): ret near (%rsp)

"get_quoting_style" :
3c80(7): lea 0x204559(%rip),%rax
3c87(3): test %rdi,%rdi
3c8a(4): cmove %rax,%rdi
3c8e(2): mov (%rdi),%eax
3c90(1): ret near (%rsp)

"set_quoting_style" :
3ca0(7): lea 0x204539(%rip),%rax
3ca7(3): test %rdi,%rdi
3caa(4): cmove %rax,%rdi
3cae(2): mov %esi,(%rdi)
3cb0(1): ret near (%rsp)

"set_char_quoting" :
3cc0(7): lea 0x204519(%rip),%rax
3cc7(3): test %rdi,%rdi
3cca(2): mov %esi,%ecx
3ccc(4): cmove %rax,%rdi
3cd0(2): mov %esi,%eax
3cd2(3): and $0x1f,%ecx
3cd5(3): shr $0x5,%al
3cd8(3): movzx %al,%eax
3cdb(5): lea 0x8(%rdi,%rax,4),%rdi
3ce0(2): mov (%rdi),%esi
3ce2(2): mov %esi,%eax
3ce4(2): shr %cl,%eax
3ce6(2): xor %eax,%edx
3ce8(3): and $0x1,%eax
3ceb(3): and $0x1,%edx
3cee(2): shl/sal %cl,%edx
3cf0(2): xor %esi,%edx
3cf2(2): mov %edx,(%rdi)
3cf4(1): ret near (%rsp)

"set_quoting_flags" :
3d00(7): lea 0x2044d9(%rip),%rax
3d07(3): test %rdi,%rdi
3d0a(4): cmove %rax,%rdi
3d0e(3): mov 0x4(%rdi),%eax
3d11(3): mov %esi,0x4(%rdi)
3d14(1): ret near (%rsp)

"set_custom_quoting" :
3d20(7): lea 0x2044b9(%rip),%rax
3d27(3): test %rdi,%rdi
3d2a(4): cmove %rax,%rdi
3d2e(3): test %rsi,%rsi
3d31(6): mov $0xa,(%rdi)
3d37(2): jz 0x10(%rip)
3d39(3): test %rdx,%rdx
3d3c(2): jz 0xb(%rip)
3d3e(4): mov %rsi,0x28(%rdi)
3d42(4): mov %rdx,0x30(%rdi)
3d46(1): ret near (%rsp)
3d47(4): sub $0x8,%rsp
3d4b(5): call 0xffffd755(%rip)

"quotearg_buffer" :
3d50(2): push %r15
3d52(2): push %r14
3d54(7): lea 0x204485(%rip),%rax
3d5b(2): push %r13
3d5d(2): push %r12
3d5f(3): mov %rdi,%r13
3d62(1): push %rbp
3d63(1): push %rbx
3d64(3): mov %r8,%rbx
3d67(3): mov %rsi,%r14
3d6a(3): mov %rdx,%r15
3d6d(4): sub $0x18,%rsp
3d71(3): test %r8,%r8
3d74(4): cmove %rax,%rbx
3d78(5): mov %rcx,0x8(%rsp)
3d7d(5): call 0xffffd733(%rip)
3d82(3): mov (%rax),%r12d
3d85(3): mov %rax,%rbp
3d88(4): lea 0x8(%rbx),%rax
3d8c(4): sub $0x8,%rsp
3d90(4): mov 0x4(%rbx),%r9d
3d94(3): push 0x30(%rbx)
3d97(3): mov (%rbx),%r8d
3d9a(3): push 0x28(%rbx)
3d9d(3): mov %r15,%rdx
3da0(1): push %rax
3da1(5): mov 0x28(%rsp),%rcx
3da6(3): mov %r14,%rsi
3da9(3): mov %r13,%rdi
3dac(5): call 0xffffeaa4(%rip)
3db1(4): mov %r12d,0x0(%rbp)
3db5(4): add $0x38,%rsp
3db9(1): pop %rbx
3dba(1): pop %rbp
3dbb(2): pop %r12
3dbd(2): pop %r13
3dbf(2): pop %r14
3dc1(2): pop %r15
3dc3(1): ret near (%rsp)

"quotearg_alloc_mem" :
3dd0(2): push %r15
3dd2(2): push %r14
3dd4(7): lea 0x204405(%rip),%rax
3ddb(2): push %r13
3ddd(2): push %r12
3ddf(3): mov %rdx,%r12
3de2(1): push %rbp
3de3(1): push %rbx
3de4(3): mov %rcx,%rbx
3de7(3): mov %rdi,%r14
3dea(3): mov %rsi,%r15
3ded(4): sub $0x38,%rsp
3df1(3): test %rcx,%rcx
3df4(4): cmove %rax,%rbx
3df8(2): xor %ebp,%ebp
3dfa(5): call 0xffffd6b6(%rip)
3dff(3): test %r12,%r12
3e02(3): mov %rax,%r13
3e05(2): mov (%rax),%eax
3e07(4): setz %bpl
3e0b(3): or 0x4(%rbx),%ebp
3e0e(4): lea 0x8(%rbx),%r10
3e12(4): sub $0x8,%rsp
3e16(3): mov (%rbx),%r8d
3e19(3): mov %r15,%rcx
3e1c(4): mov %eax,0x14(%rsp)
3e20(3): push 0x30(%rbx)
3e23(3): mov %r14,%rdx
3e26(3): push 0x28(%rbx)
3e29(2): push %r10
3e2b(2): xor %esi,%esi
3e2d(3): mov %ebp,%r9d
3e30(2): xor %edi,%edi
3e32(5): mov %r10,0x40(%rsp)
3e37(5): call 0xffffea19(%rip)
3e3c(4): lea 0x1(%rax),%rsi
3e40(5): mov %rax,0x48(%rsp)
3e45(4): add $0x20,%rsp
3e49(3): mov %rsi,%rdi
3e4c(5): mov %rsi,0x18(%rsp)
3e51(5): call 0xc3f(%rip)
3e56(5): mov %rax,0x10(%rsp)
3e5b(4): sub $0x8,%rsp
3e5f(3): push 0x30(%rbx)
3e62(3): push 0x28(%rbx)
3e65(5): mov 0x38(%rsp),%r10
3e6a(3): mov %ebp,%r9d
3e6d(3): mov (%rbx),%r8d
3e70(3): mov %r15,%rcx
3e73(3): mov %r14,%rdx
3e76(3): mov %rax,%rdi
3e79(2): push %r10
3e7b(5): mov 0x38(%rsp),%rsi
3e80(5): call 0xffffe9d0(%rip)
3e85(4): mov 0x2c(%rsp),%eax
3e89(4): add $0x20,%rsp
3e8d(3): test %r12,%r12
3e90(4): mov %eax,0x0(%r13)
3e94(2): jz 0xb(%rip)
3e96(5): mov 0x28(%rsp),%r11
3e9b(4): mov %r11,(%r12)
3e9f(5): mov 0x10(%rsp),%rax
3ea4(4): add $0x38,%rsp
3ea8(1): pop %rbx
3ea9(1): pop %rbp
3eaa(2): pop %r12
3eac(2): pop %r13
3eae(2): pop %r14
3eb0(2): pop %r15
3eb2(1): ret near (%rsp)

"quotearg_alloc" :
3ec0(3): mov %rdx,%rcx
3ec3(2): xor %edx,%edx
3ec5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3ed0(6): mov 0x204182(%rip),%eax
3ed6(2): push %r12
3ed8(7): mov 0x204181(%rip),%r12
3edf(1): push %rbp
3ee0(1): push %rbx
3ee1(3): cmp $0x1,%eax
3ee4(2): jle 0x2d(%rip)
3ee6(3): sub $0x2,%eax
3ee9(5): lea 0x18(%r12),%rbx
3eee(4): shl/sal $0x4,%rax
3ef2(5): lea 0x28(%r12,%rax,1),%rbp
3ef7(9): nop 0x0(%rax,%rax,1)
3f00(3): mov (%rbx),%rdi
3f03(4): add $0x10,%rbx
3f07(5): call 0xffffd589(%rip)
3f0c(3): cmp %rbp,%rbx
3f0f(2): jnz 0xfffffff1(%rip)
3f11(5): mov 0x8(%r12),%rdi
3f16(7): lea 0x2041c3(%rip),%rbx
3f1d(3): cmp %rbx,%rdi
3f20(2): jz 0x19(%rip)
3f22(5): call 0xffffd56e(%rip)
3f27(b): mov $0x100,0x20413e(%rip)
3f32(7): mov %rbx,0x20413f(%rip)
3f39(7): lea 0x204130(%rip),%rbx
3f40(3): cmp %rbx,%r12
3f43(2): jz 0x11(%rip)
3f45(3): mov %r12,%rdi
3f48(5): call 0xffffd548(%rip)
3f4d(7): mov %rbx,0x20410c(%rip)
3f54(1): pop %rbx
3f55(a): mov $0x1,0x2040f9(%rip)
3f5f(1): pop %rbp
3f60(2): pop %r12
3f62(1): ret near (%rsp)

"quotearg_n" :
3f70(7): lea 0x204269(%rip),%rcx
3f77(7): mov $0xffffffff,%rdx
3f7e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3f90(7): lea 0x204249(%rip),%rcx
3f97(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3fa0(7): lea 0x204239(%rip),%rcx
3fa7(3): mov %rdi,%rsi
3faa(7): mov $0xffffffff,%rdx
3fb1(2): xor %edi,%edi
3fb3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3fc0(7): lea 0x204219(%rip),%rcx
3fc7(3): mov %rsi,%rdx
3fca(3): mov %rdi,%rsi
3fcd(2): xor %edi,%edi
3fcf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3fe0(4): sub $0x48,%rsp
3fe4(3): mov %rdx,%rax
3fe7(9): mov $0x28,%rdx
3ff0(5): mov %rdx,0x38(%rsp)
3ff5(2): xor %edx,%edx
3ff7(3): cmp $0xa,%esi
3ffa(2): jz 0x6a(%rip)
3ffc(3): mov %esi,(%rsp)
3fff(3): mov %rsp,%rcx
4002(7): mov $0xffffffff,%rdx
4009(3): mov %rax,%rsi
400c(9): mov $0x0,0x4(%rsp)
4015(9): mov $0x0,0xc(%rsp)
401e(9): mov $0x0,0x14(%rsp)
4027(9): mov $0x0,0x1c(%rsp)
4030(9): mov $0x0,0x24(%rsp)
4039(9): mov $0x0,0x2c(%rsp)
4042(8): mov $0x0,0x34(%rsp)
404a(5): call 0xfffffa46(%rip)
404f(5): mov 0x38(%rsp),%rcx
4054(9): xor $0x28,%rcx
405d(2): jnz 0xc(%rip)
405f(4): add $0x48,%rsp
4063(1): ret near (%rsp)
4064(5): call 0xffffd43c(%rip)
4069(5): call 0xffffd527(%rip)

"quotearg_n_style_mem" :
4070(4): sub $0x48,%rsp
4074(3): mov %rdx,%rax
4077(3): mov %rcx,%rdx
407a(9): mov $0x28,%rcx
4083(5): mov %rcx,0x38(%rsp)
4088(2): xor %ecx,%ecx
408a(3): cmp $0xa,%esi
408d(2): jz 0x63(%rip)
408f(3): mov %esi,(%rsp)
4092(3): mov %rsp,%rcx
4095(3): mov %rax,%rsi
4098(9): mov $0x0,0x4(%rsp)
40a1(9): mov $0x0,0xc(%rsp)
40aa(9): mov $0x0,0x14(%rsp)
40b3(9): mov $0x0,0x1c(%rsp)
40bc(9): mov $0x0,0x24(%rsp)
40c5(9): mov $0x0,0x2c(%rsp)
40ce(8): mov $0x0,0x34(%rsp)
40d6(5): call 0xfffff9ba(%rip)
40db(5): mov 0x38(%rsp),%rdx
40e0(9): xor $0x28,%rdx
40e9(2): jnz 0xc(%rip)
40eb(4): add $0x48,%rsp
40ef(1): ret near (%rsp)
40f0(5): call 0xffffd3b0(%rip)
40f5(5): call 0xffffd49b(%rip)

"quotearg_style" :
4100(3): mov %rsi,%rdx
4103(2): mov %edi,%esi
4105(2): xor %edi,%edi
4107(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4110(3): mov %rdx,%rcx
4113(3): mov %rsi,%rdx
4116(2): mov %edi,%esi
4118(2): xor %edi,%edi
411a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4120(4): sub $0x48,%rsp
4124(2): mov %edx,%ecx
4126(9): mov $0x28,%rax
412f(5): mov %rax,0x38(%rsp)
4134(2): xor %eax,%eax
4136(7): mov 0x2040d3(%rip),%rax
413d(3): mov %rsp,%r8
4140(3): and $0x1f,%ecx
4143(8): movdqa 0x204095(%rip),%xmm0
414b(5): mov %rax,0x30(%rsp)
4150(2): mov %edx,%eax
4152(4): movaps %xmm0,(%rsp)
4156(3): shr $0x5,%al
4159(3): movzx %al,%eax
415c(5): lea 0x8(%r8,%rax,4),%r9
4161(8): movdqa 0x204087(%rip),%xmm0
4169(5): movaps %xmm0,0x10(%rsp)
416e(8): movdqa 0x20408a(%rip),%xmm0
4176(5): movaps %xmm0,0x20(%rsp)
417b(3): mov (%r9),%edx
417e(2): mov %edx,%eax
4180(2): shr %cl,%eax
4182(2): not %eax
4184(3): and $0x1,%eax
4187(2): shl/sal %cl,%eax
4189(3): mov %r8,%rcx
418c(2): xor %edx,%eax
418e(3): mov %rsi,%rdx
4191(3): mov %rdi,%rsi
4194(3): mov %eax,(%r9)
4197(2): xor %edi,%edi
4199(5): call 0xfffff8f7(%rip)
419e(5): mov 0x38(%rsp),%rsi
41a3(9): xor $0x28,%rsi
41ac(2): jnz 0x7(%rip)
41ae(4): add $0x48,%rsp
41b2(1): ret near (%rsp)
41b3(5): call 0xffffd3dd(%rip)

"quotearg_char" :
41c0(4): movsx %sil,%edx
41c4(7): mov $0xffffffff,%rsi
41cb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
41d0(5): mov $0x3a,%edx
41d5(7): mov $0xffffffff,%rsi
41dc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
41f0(5): mov $0x3a,%edx
41f5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4200(4): sub $0x48,%rsp
4204(3): mov %rdx,%rax
4207(9): mov $0x28,%rdx
4210(5): mov %rdx,0x38(%rsp)
4215(2): xor %edx,%edx
4217(3): cmp $0xa,%esi
421a(2): jz 0x6a(%rip)
421c(3): mov %esi,(%rsp)
421f(3): mov %rsp,%rcx
4222(7): mov $0xffffffff,%rdx
4229(3): mov %rax,%rsi
422c(9): mov $0x0,0x4(%rsp)
4235(9): mov $0x4000000,0xc(%rsp)
423e(9): mov $0x0,0x14(%rsp)
4247(9): mov $0x0,0x1c(%rsp)
4250(9): mov $0x0,0x24(%rsp)
4259(9): mov $0x0,0x2c(%rsp)
4262(8): mov $0x0,0x34(%rsp)
426a(5): call 0xfffff826(%rip)
426f(5): mov 0x38(%rsp),%rcx
4274(9): xor $0x28,%rcx
427d(2): jnz 0xc(%rip)
427f(4): add $0x48,%rsp
4283(1): ret near (%rsp)
4284(5): call 0xffffd21c(%rip)
4289(5): call 0xffffd307(%rip)

"quotearg_n_custom_mem" :
4290(4): sub $0x48,%rsp
4294(3): mov %rcx,%r9
4297(7): mov 0x203f72(%rip),%rcx
429e(8): movdqa 0x203f3a(%rip),%xmm0
42a6(9): mov $0x28,%rax
42af(5): mov %rax,0x38(%rsp)
42b4(2): xor %eax,%eax
42b6(4): movaps %xmm0,(%rsp)
42ba(3): test %rsi,%rsi
42bd(5): mov %rcx,0x30(%rsp)
42c2(7): mov $0xa,(%rsp)
42c9(8): movdqa 0x203f1f(%rip),%xmm0
42d1(5): movaps %xmm0,0x10(%rsp)
42d6(8): movdqa 0x203f22(%rip),%xmm0
42de(5): movaps %xmm0,0x20(%rsp)
42e3(2): jz 0x34(%rip)
42e5(3): test %rdx,%rdx
42e8(2): jz 0x2f(%rip)
42ea(5): mov %rsi,0x28(%rsp)
42ef(5): mov %rdx,0x30(%rsp)
42f4(3): mov %rsp,%rcx
42f7(3): mov %r8,%rdx
42fa(3): mov %r9,%rsi
42fd(5): call 0xfffff793(%rip)
4302(5): mov 0x38(%rsp),%rdi
4307(9): xor $0x28,%rdi
4310(2): jnz 0xc(%rip)
4312(4): add $0x48,%rsp
4316(1): ret near (%rsp)
4317(5): call 0xffffd189(%rip)
431c(5): call 0xffffd274(%rip)

"quotearg_n_custom" :
4330(7): mov $0xffffffff,%r8
4337(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4340(3): mov %rdx,%rcx
4343(7): mov $0xffffffff,%r8
434a(3): mov %rsi,%rdx
434d(3): mov %rdi,%rsi
4350(2): xor %edi,%edi
4352(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4360(3): mov %rcx,%r8
4363(3): mov %rdx,%rcx
4366(3): mov %rsi,%rdx
4369(3): mov %rdi,%rsi
436c(2): xor %edi,%edi
436e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4380(7): lea 0x203c99(%rip),%rcx
4387(5): jmp 0xfffff709(%rip)

"quote_mem" :
4390(7): lea 0x203c89(%rip),%rcx
4397(3): mov %rsi,%rdx
439a(3): mov %rdi,%rsi
439d(2): xor %edi,%edi
439f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
43b0(7): lea 0x203c69(%rip),%rcx
43b7(7): mov $0xffffffff,%rdx
43be(5): jmp 0xfffff6d2(%rip)

"quote" :
43d0(7): lea 0x203c49(%rip),%rcx
43d7(3): mov %rdi,%rsi
43da(7): mov $0xffffffff,%rdx
43e1(2): xor %edi,%edi
43e3(5): jmp 0xfffff6ad(%rip)

"get_root_dev_ino" :
43f0(1): push %rbx
43f1(7): lea 0x11ee(%rip),%rsi
43f8(3): mov %rdi,%rbx
43fb(5): mov $0x1,%edi
4400(7): sub $0xa0,%rsp
4407(3): mov %rsp,%rdx
440a(9): mov $0x28,%rax
4413(8): mov %rax,0x98(%rsp)
441b(2): xor %eax,%eax
441d(5): call 0xffffd153(%rip)
4422(2): test %eax,%eax
4424(2): jnz 0x34(%rip)
4426(5): mov 0x8(%rsp),%rax
442b(3): mov %rax,(%rbx)
442e(4): mov (%rsp),%rax
4432(4): mov %rax,0x8(%rbx)
4436(3): mov %rbx,%rax
4439(8): mov 0x98(%rsp),%rcx
4441(9): xor $0x28,%rcx
444a(2): jnz 0x12(%rip)
444c(7): add $0xa0,%rsp
4453(1): pop %rbx
4454(1): ret near (%rsp)
4455(3): nop (%rax)
4458(2): xor %eax,%eax
445a(2): jmp 0xffffffdf(%rip)
445c(5): call 0xffffd134(%rip)

"version_etc_arn" :
4470(2): push %r15
4472(2): push %r14
4474(2): push %r13
4476(2): push %r12
4478(3): mov %r9,%r12
447b(1): push %rbp
447c(1): push %rbx
447d(3): mov %rdi,%rbp
4480(3): mov %r8,%rbx
4483(4): sub $0x28,%rsp
4487(3): test %rsi,%rsi
448a(6): jz 0x11e(%rip)
4490(3): mov %rdx,%r8
4493(7): lea 0x162e(%rip),%rdx
449a(3): mov %rcx,%r9
449d(2): xor %eax,%eax
449f(3): mov %rsi,%rcx
44a2(5): mov $0x1,%esi
44a7(5): call 0xffffd2c9(%rip)
44ac(7): lea 0x1628(%rip),%rsi
44b3(2): xor %edi,%edi
44b5(5): mov $0x5,%edx
44ba(5): call 0xffffd086(%rip)
44bf(7): lea 0x193a(%rip),%rdx
44c6(3): mov %rax,%rcx
44c9(6): mov $0x7e3,%r8d
44cf(5): mov $0x1,%esi
44d4(3): mov %rbp,%rdi
44d7(2): xor %eax,%eax
44d9(5): call 0xffffd297(%rip)
44de(7): lea 0x1683(%rip),%rsi
44e5(2): xor %edi,%edi
44e7(5): mov $0x5,%edx
44ec(5): call 0xffffd054(%rip)
44f1(3): mov %rbp,%rsi
44f4(3): mov %rax,%rdi
44f7(5): call 0xffffd129(%rip)
44fc(4): cmp $0x9,%r12
4500(6): jnbe 0x340(%rip)
4506(7): lea 0x18bb(%rip),%rdx
450d(4): movsxd 0x0(%rdx,%r12,4),%rax
4511(3): add %rdx,%rax
4514(2): jmp %rax
4516(a): nop 0x0(%rax,%rax,1)
4520(4): mov 0x38(%rbx),%r9
4524(4): mov 0x10(%rbx),%rax
4528(7): lea 0x17a9(%rip),%rsi
452f(4): mov 0x8(%rbx),%r8
4533(5): mov $0x5,%edx
4538(2): xor %edi,%edi
453a(4): mov 0x30(%rbx),%r13
453e(4): mov 0x28(%rbx),%r12
4542(5): mov %r9,0x10(%rsp)
4547(4): mov 0x20(%rbx),%r15
454b(4): mov 0x18(%rbx),%r14
454f(4): mov %rax,(%rsp)
4553(5): mov %r8,0x8(%rsp)
4558(3): mov (%rbx),%rbx
455b(5): call 0xffffcfe5(%rip)
4560(4): sub $0x8,%rsp
4564(5): mov 0x18(%rsp),%r9
4569(3): mov %rax,%rdx
456c(3): mov %rbx,%rcx
456f(5): mov $0x1,%esi
4574(3): mov %rbp,%rdi
4577(2): xor %eax,%eax
4579(2): push %r9
457b(2): push %r13
457d(2): push %r12
457f(2): push %r15
4581(2): push %r14
4583(5): mov 0x30(%rsp),%r9
4588(5): mov 0x38(%rsp),%r8
458d(5): call 0xffffd1e3(%rip)
4592(4): add $0x30,%rsp
4596(4): add $0x28,%rsp
459a(1): pop %rbx
459b(1): pop %rbp
459c(2): pop %r12
459e(2): pop %r13
45a0(2): pop %r14
45a2(2): pop %r15
45a4(1): ret near (%rsp)
45a5(3): nop (%rax)
45a8(3): mov %rcx,%r8
45ab(3): mov %rdx,%rcx
45ae(7): lea 0x151f(%rip),%rdx
45b5(5): mov $0x1,%esi
45ba(2): xor %eax,%eax
45bc(5): call 0xffffd1b4(%rip)
45c1(5): jmp 0xfffffeeb(%rip)
45c6(a): nop 0x0(%rax,%rax,1)
45d0(4): mov 0x40(%rbx),%r10
45d4(4): mov 0x38(%rbx),%r9
45d8(7): lea 0x1729(%rip),%rsi
45df(4): mov 0x10(%rbx),%rax
45e3(4): mov 0x8(%rbx),%r8
45e7(5): mov $0x5,%edx
45ec(4): mov 0x30(%rbx),%r13
45f0(4): mov 0x28(%rbx),%r12
45f4(4): mov 0x20(%rbx),%r15
45f8(4): mov 0x18(%rbx),%r14
45fc(3): mov (%rbx),%rbx
45ff(5): mov %r10,0x18(%rsp)
4604(5): mov %r9,0x10(%rsp)
4609(4): mov %rax,(%rsp)
460d(5): mov %r8,0x8(%rsp)
4612(2): xor %edi,%edi
4614(5): call 0xffffcf2c(%rip)
4619(5): mov 0x18(%rsp),%r10
461e(2): push %r10
4620(5): jmp 0xffffff44(%rip)
4625(3): nop (%rax)
4628(3): mov (%rbx),%rbx
462b(7): lea 0x14ad(%rip),%rsi
4632(5): mov $0x5,%edx
4637(2): xor %edi,%edi
4639(5): call 0xffffcf07(%rip)
463e(4): add $0x28,%rsp
4642(3): mov %rbx,%rcx
4645(3): mov %rbp,%rdi
4648(1): pop %rbx
4649(1): pop %rbp
464a(2): pop %r12
464c(2): pop %r13
464e(2): pop %r14
4650(2): pop %r15
4652(3): mov %rax,%rdx
4655(5): mov $0x1,%esi
465a(2): xor %eax,%eax
465c(5): jmp 0xffffd114(%rip)
4661(7): nop 0x0(%rax)
4668(4): mov 0x8(%rbx),%r12
466c(7): lea 0x147c(%rip),%rsi
4673(3): mov (%rbx),%rbx
4676(5): mov $0x5,%edx
467b(2): xor %edi,%edi
467d(5): call 0xffffcec3(%rip)
4682(4): add $0x28,%rsp
4686(3): mov %r12,%r8
4689(3): mov %rbx,%rcx
468c(3): mov %rbp,%rdi
468f(3): mov %rax,%rdx
4692(5): mov $0x1,%esi
4697(1): pop %rbx
4698(1): pop %rbp
4699(2): pop %r12
469b(2): pop %r13
469d(2): pop %r14
469f(2): pop %r15
46a1(2): xor %eax,%eax
46a3(5): jmp 0xffffd0cd(%rip)
46a8(8): nop 0x0(%rax,%rax,1)
46b0(4): mov 0x10(%rbx),%r13
46b4(4): mov 0x8(%rbx),%r12
46b8(7): lea 0x1447(%rip),%rsi
46bf(3): mov (%rbx),%rbx
46c2(5): mov $0x5,%edx
46c7(2): xor %edi,%edi
46c9(5): call 0xffffce77(%rip)
46ce(4): add $0x28,%rsp
46d2(3): mov %r13,%r9
46d5(3): mov %r12,%r8
46d8(3): mov %rbx,%rcx
46db(3): mov %rbp,%rdi
46de(3): mov %rax,%rdx
46e1(1): pop %rbx
46e2(1): pop %rbp
46e3(2): pop %r12
46e5(2): pop %r13
46e7(2): pop %r14
46e9(2): pop %r15
46eb(5): mov $0x1,%esi
46f0(2): xor %eax,%eax
46f2(5): jmp 0xffffd07e(%rip)
46f7(9): nop 0x0(%rax,%rax,1)
4700(7): lea 0x1531(%rip),%rsi
4707(5): mov $0x5,%edx
470c(2): xor %edi,%edi
470e(4): mov 0x18(%rbx),%r14
4712(4): mov 0x10(%rbx),%r13
4716(4): mov 0x8(%rbx),%r12
471a(3): mov (%rbx),%rbx
471d(5): call 0xffffce23(%rip)
4722(4): sub $0x8,%rsp
4726(2): push %r14
4728(3): mov %rax,%rdx
472b(3): mov %r13,%r9
472e(3): mov %r12,%r8
4731(3): mov %rbx,%rcx
4734(3): mov %rbp,%rdi
4737(5): mov $0x1,%esi
473c(2): xor %eax,%eax
473e(5): call 0xffffd032(%rip)
4743(1): pop %rax
4744(1): pop %rdx
4745(4): add $0x28,%rsp
4749(1): pop %rbx
474a(1): pop %rbp
474b(2): pop %r12
474d(2): pop %r13
474f(2): pop %r14
4751(2): pop %r15
4753(1): ret near (%rsp)
4754(4): nop 0x0(%rax)
4758(4): mov 0x20(%rbx),%r15
475c(7): lea 0x14f5(%rip),%rsi
4763(5): mov $0x5,%edx
4768(2): xor %edi,%edi
476a(4): mov 0x18(%rbx),%r14
476e(4): mov 0x10(%rbx),%r13
4772(4): mov 0x8(%rbx),%r12
4776(3): mov (%rbx),%rbx
4779(5): call 0xffffcdc7(%rip)
477e(2): push %r15
4780(2): jmp 0xffffffa6(%rip)
4782(6): nop 0x0(%rax,%rax,1)
4788(4): mov 0x8(%rbx),%r8
478c(4): mov 0x28(%rbx),%r12
4790(7): lea 0x14e9(%rip),%rsi
4797(4): mov 0x20(%rbx),%r15
479b(4): mov 0x18(%rbx),%r14
479f(5): mov $0x5,%edx
47a4(4): mov 0x10(%rbx),%r13
47a8(2): xor %edi,%edi
47aa(3): mov (%rbx),%rbx
47ad(4): mov %r8,(%rsp)
47b1(5): call 0xffffcd8f(%rip)
47b6(4): sub $0x8,%rsp
47ba(3): mov %r13,%r9
47bd(2): push %r12
47bf(2): push %r15
47c1(2): push %r14
47c3(5): mov 0x20(%rsp),%r8
47c8(3): mov %rbx,%rcx
47cb(3): mov %rax,%rdx
47ce(3): mov %rbp,%rdi
47d1(5): mov $0x1,%esi
47d6(2): xor %eax,%eax
47d8(5): call 0xffffcf98(%rip)
47dd(4): add $0x20,%rsp
47e1(4): add $0x28,%rsp
47e5(1): pop %rbx
47e6(1): pop %rbp
47e7(2): pop %r12
47e9(2): pop %r13
47eb(2): pop %r14
47ed(2): pop %r15
47ef(1): ret near (%rsp)
47f0(4): mov 0x10(%rbx),%r9
47f4(4): mov 0x30(%rbx),%r13
47f8(7): lea 0x14a9(%rip),%rsi
47ff(4): mov 0x28(%rbx),%r12
4803(4): mov 0x20(%rbx),%r15
4807(5): mov $0x5,%edx
480c(4): mov 0x18(%rbx),%r14
4810(4): mov 0x8(%rbx),%r8
4814(2): xor %edi,%edi
4816(5): mov %r9,0x8(%rsp)
481b(3): mov (%rbx),%rbx
481e(4): mov %r8,(%rsp)
4822(5): call 0xffffcd1e(%rip)
4827(2): push %r13
4829(2): push %r12
482b(2): push %r15
482d(2): push %r14
482f(5): mov 0x28(%rsp),%r9
4834(2): jmp 0xffffff8f(%rip)
4836(a): nop 0x0(%rax,%rax,1)
4840(4): mov 0x40(%rbx),%r10
4844(4): mov 0x38(%rbx),%r9
4848(5): mov $0x5,%edx
484d(4): mov 0x10(%rbx),%rax
4851(4): mov 0x8(%rbx),%r8
4855(7): lea 0x14e4(%rip),%rsi
485c(4): mov 0x30(%rbx),%r13
4860(4): mov 0x28(%rbx),%r12
4864(4): mov 0x20(%rbx),%r15
4868(4): mov 0x18(%rbx),%r14
486c(5): mov %r10,0x18(%rsp)
4871(5): mov %r9,0x10(%rsp)
4876(4): mov %rax,(%rsp)
487a(5): mov %r8,0x8(%rsp)
487f(3): mov (%rbx),%rbx
4882(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4890(3): xor %r9d,%r9d
4893(4): cmp $0x0,(%r8)
4897(2): jz 0x14(%rip)
4899(7): nop 0x0(%rax)
48a0(4): add $0x1,%r9
48a4(5): cmp $0x0,0x0(%r8,%r9,8)
48a9(2): jnz 0xfffffff7(%rip)
48ab(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
48b0(4): sub $0x68,%rsp
48b4(3): mov %r8,%r10
48b7(3): xor %r9d,%r9d
48ba(9): mov $0x28,%rax
48c3(5): mov %rax,0x58(%rsp)
48c8(2): xor %eax,%eax
48ca(3): mov %rsp,%r8
48cd(3): nop (%rax)
48d0(3): mov (%r10),%eax
48d3(3): cmp $0x2f,%eax
48d6(2): jnbe 0x44(%rip)
48d8(3): mov %eax,%r11d
48db(4): add 0x10(%r10),%r11
48df(3): add $0x8,%eax
48e2(3): mov %eax,(%r10)
48e5(3): mov (%r11),%rax
48e8(3): test %rax,%rax
48eb(4): mov %rax,0x0(%r8,%r9,8)
48ef(2): jz 0xc(%rip)
48f1(4): add $0x1,%r9
48f5(4): cmp $0xa,%r9
48f9(2): jnz 0xffffffd7(%rip)
48fb(5): call 0xfffffb75(%rip)
4900(5): mov 0x58(%rsp),%rax
4905(9): xor $0x28,%rax
490e(2): jnz 0x7(%rip)
4910(4): add $0x68,%rsp
4914(1): ret near (%rsp)
4915(5): call 0xffffcc7b(%rip)
491a(4): mov 0x8(%r10),%r11
491e(4): lea 0x8(%r11),%rax
4922(4): mov %rax,0x8(%r10)
4926(2): jmp 0xffffffbf(%rip)

"version_etc" :
4930(1): push %rbp
4931(1): push %rbx
4932(6): mov $0x20,%r10d
4938(3): xor %r11d,%r11d
493b(7): sub $0xb8,%rsp
4942(9): mov $0x28,%rax
494b(5): mov %rax,0x78(%rsp)
4950(2): xor %eax,%eax
4952(8): lea 0xd0(%rsp),%rax
495a(8): mov %r8,0xa0(%rsp)
4962(8): lea 0xd0(%rsp),%rbx
496a(5): lea 0x20(%rsp),%r8
496f(8): mov %r9,0xa8(%rsp)
4977(8): mov $0x20,0x8(%rsp)
497f(5): mov %rax,0x10(%rsp)
4984(8): lea 0x80(%rsp),%rax
498c(3): xor %r9d,%r9d
498f(5): mov %rax,0x18(%rsp)
4994(3): mov %rax,%rbp
4997(9): nop 0x0(%rax,%rax,1)
49a0(4): cmp $0x2f,%r10d
49a4(2): jnbe 0x58(%rip)
49a6(3): mov %r10d,%eax
49a9(6): mov $0x1,%r11d
49af(4): add $0x8,%r10d
49b3(3): add %rbp,%rax
49b6(3): mov (%rax),%rax
49b9(3): test %rax,%rax
49bc(4): mov %rax,0x0(%r8,%r9,8)
49c0(2): jz 0xc(%rip)
49c2(4): add $0x1,%r9
49c6(4): cmp $0xa,%r9
49ca(2): jnz 0xffffffd6(%rip)
49cc(3): test %r11b,%r11b
49cf(2): jnz 0x26(%rip)
49d1(5): call 0xfffffa9f(%rip)
49d6(5): mov 0x78(%rsp),%rax
49db(9): xor $0x28,%rax
49e4(2): jnz 0xc(%rip)
49e6(7): add $0xb8,%rsp
49ed(1): pop %rbx
49ee(1): pop %rbp
49ef(1): ret near (%rsp)
49f0(5): call 0xffffcba0(%rip)
49f5(5): mov %r10d,0x8(%rsp)
49fa(2): jmp 0xffffffd7(%rip)
49fc(3): mov %rbx,%rax
49ff(4): add $0x8,%rbx
4a03(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4a10(1): push %rbx
4a11(7): lea 0x110a(%rip),%rsi
4a18(5): mov $0x5,%edx
4a1d(2): xor %edi,%edi
4a1f(5): call 0xffffcb21(%rip)
4a24(7): lea 0x110c(%rip),%rdx
4a2b(3): mov %rax,%rsi
4a2e(5): mov $0x1,%edi
4a33(2): xor %eax,%eax
4a35(5): call 0xffffccdb(%rip)
4a3a(7): lea 0x110c(%rip),%rsi
4a41(5): mov $0x5,%edx
4a46(2): xor %edi,%edi
4a48(5): call 0xffffcaf8(%rip)
4a4d(7): lea 0xa94(%rip),%rcx
4a54(7): lea 0x75a(%rip),%rdx
4a5b(3): mov %rax,%rsi
4a5e(5): mov $0x1,%edi
4a63(2): xor %eax,%eax
4a65(5): call 0xffffccab(%rip)
4a6a(7): mov 0x203617(%rip),%rbx
4a71(7): lea 0x1308(%rip),%rsi
4a78(2): xor %edi,%edi
4a7a(5): mov $0x5,%edx
4a7f(5): call 0xffffcac1(%rip)
4a84(3): mov %rbx,%rsi
4a87(3): mov %rax,%rdi
4a8a(1): pop %rbx
4a8b(5): jmp 0xffffcb95(%rip)

"xmalloc" :
4a90(1): push %rbx
4a91(3): mov %rdi,%rbx
4a94(5): call 0xffffcbfc(%rip)
4a99(3): test %rax,%rax
4a9c(2): jnz 0x7(%rip)
4a9e(3): test %rbx,%rbx
4aa1(2): jnz 0x4(%rip)
4aa3(1): pop %rbx
4aa4(1): ret near (%rsp)
4aa5(5): call 0x23b(%rip)

"xnmalloc" :
4ab0(3): mov %rdi,%rax
4ab3(3): mul %rax,%rsi,%rdx
4ab6(3): mov %rax,%rdi
4ab9(3): seto %al
4abc(3): test %rdi,%rdi
4abf(2): js 0xc(%rip)
4ac1(3): movzx %al,%eax
4ac4(3): test %rax,%rax
4ac7(2): jnz 0x4(%rip)
4ac9(2): jmp 0xffffffc7(%rip)
4acb(4): sub $0x8,%rsp
4acf(5): call 0x211(%rip)

"xrealloc" :
4af0(3): test %rsi,%rsi
4af3(1): push %rbx
4af4(3): mov %rsi,%rbx
4af7(2): jnz 0x7(%rip)
4af9(3): test %rdi,%rdi
4afc(2): jnz 0x1c(%rip)
4afe(3): mov %rbx,%rsi
4b01(5): call 0xffffcbef(%rip)
4b06(3): test %rax,%rax
4b09(2): jnz 0x7(%rip)
4b0b(3): test %rbx,%rbx
4b0e(2): jnz 0x13(%rip)
4b10(1): pop %rbx
4b11(1): ret near (%rsp)
4b12(6): nop 0x0(%rax,%rax,1)
4b18(5): call 0xffffc978(%rip)
4b1d(2): xor %eax,%eax
4b1f(1): pop %rbx
4b20(1): ret near (%rsp)
4b21(5): call 0x1bf(%rip)

"xnrealloc" :
4b30(3): mov %rsi,%rax
4b33(3): mul %rax,%rdx,%rdx
4b36(3): mov %rax,%rsi
4b39(3): seto %al
4b3c(3): test %rsi,%rsi
4b3f(2): js 0xc(%rip)
4b41(3): movzx %al,%eax
4b44(3): test %rax,%rax
4b47(2): jnz 0x4(%rip)
4b49(2): jmp 0xffffffa7(%rip)
4b4b(4): sub $0x8,%rsp
4b4f(5): call 0x191(%rip)

"x2nrealloc" :
4b60(3): test %rdi,%rdi
4b63(3): mov %rdx,%r9
4b66(3): mov (%rsi),%rcx
4b69(2): jz 0x37(%rip)
4b6b(2): xor %edx,%edx
4b6d(a): mov $0x6148914691236517204,%rax
4b77(3): div %r9,%rax
4b7a(3): cmp %rcx,%rax
4b7d(2): jbe 0x3e(%rip)
4b7f(3): mov %rcx,%rax
4b82(3): shr $0x1,%rax
4b85(5): lea 0x1(%rax,%rcx,1),%rcx
4b8a(3): mov %rcx,(%rsi)
4b8d(4): imul %r9,%rcx
4b91(3): mov %rcx,%rsi
4b94(5): jmp 0xffffff5c(%rip)
4b99(7): nop 0x0(%rax)
4ba0(3): test %rcx,%rcx
4ba3(2): jz 0x25(%rip)
4ba5(3): mov %rcx,%rax
4ba8(3): mul %rax,%r9,%rdx
4bab(3): seto %dl
4bae(3): test %rax,%rax
4bb1(3): movzx %dl,%edx
4bb4(2): js 0x7(%rip)
4bb6(3): test %rdx,%rdx
4bb9(2): jz 0xffffffd1(%rip)
4bbb(4): sub $0x8,%rsp
4bbf(5): call 0x121(%rip)
4bc4(4): nop 0x0(%rax)
4bc8(2): xor %edx,%edx
4bca(5): mov $0x80,%eax
4bcf(3): xor %r8d,%r8d
4bd2(3): div %r9,%rax
4bd5(3): test %rax,%rax
4bd8(4): setz %r8b
4bdc(4): lea 0x0(%r8,%rax,1),%rcx
4be0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4bf0(3): test %rdi,%rdi
4bf3(3): mov (%rsi),%rax
4bf6(2): jz 0x2a(%rip)
4bf8(a): mov $0x6148914691236517203,%rdx
4c02(3): cmp %rdx,%rax
4c05(2): jnbe 0x2c(%rip)
4c07(3): mov %rax,%rdx
4c0a(3): shr $0x1,%rdx
4c0d(5): lea 0x1(%rdx,%rax,1),%rax
4c12(3): mov %rax,(%rsi)
4c15(3): mov %rax,%rsi
4c18(5): jmp 0xfffffed8(%rip)
4c1d(3): nop (%rax)
4c20(3): test %rax,%rax
4c23(5): mov $0x80,%edx
4c28(4): cmove %rdx,%rax
4c2c(3): test %rax,%rax
4c2f(2): jns 0xffffffe3(%rip)
4c31(4): sub $0x8,%rsp
4c35(5): call 0xab(%rip)

"xzalloc" :
4c40(1): push %rbx
4c41(3): mov %rdi,%rbx
4c44(5): call 0xfffffe4c(%rip)
4c49(3): mov %rbx,%rdx
4c4c(2): xor %esi,%esi
4c4e(3): mov %rax,%rdi
4c51(1): pop %rbx
4c52(5): jmp 0xffffc98e(%rip)

"xcalloc" :
4c60(3): mov %rdi,%rax
4c63(4): sub $0x8,%rsp
4c67(3): mul %rax,%rsi,%rdx
4c6a(3): seto %dl
4c6d(3): test %rax,%rax
4c70(2): js 0x19(%rip)
4c72(3): movzx %dl,%edx
4c75(3): test %rdx,%rdx
4c78(2): jnz 0x11(%rip)
4c7a(5): call 0xffffc9b6(%rip)
4c7f(3): test %rax,%rax
4c82(2): jz 0x7(%rip)
4c84(4): add $0x8,%rsp
4c88(1): ret near (%rsp)
4c89(5): call 0x57(%rip)

"xmemdup" :
4c90(1): push %rbp
4c91(1): push %rbx
4c92(3): mov %rdi,%rbp
4c95(3): mov %rsi,%rdi
4c98(3): mov %rsi,%rbx
4c9b(4): sub $0x8,%rsp
4c9f(5): call 0xfffffdf1(%rip)
4ca4(4): add $0x8,%rsp
4ca8(3): mov %rbx,%rdx
4cab(3): mov %rbp,%rsi
4cae(1): pop %rbx
4caf(1): pop %rbp
4cb0(3): mov %rax,%rdi
4cb3(5): jmp 0xffffc99d(%rip)

"xstrdup" :
4cc0(1): push %rbx
4cc1(3): mov %rdi,%rbx
4cc4(5): call 0xffffc89c(%rip)
4cc9(3): mov %rbx,%rdi
4ccc(4): lea 0x1(%rax),%rsi
4cd0(1): pop %rbx
4cd1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4ce0(7): lea 0x1148(%rip),%rsi
4ce7(4): sub $0x8,%rsp
4ceb(5): mov $0x5,%edx
4cf0(2): xor %edi,%edi
4cf2(5): call 0xffffc84e(%rip)
4cf7(6): mov 0x20331b(%rip),%edi
4cfd(7): lea 0x89c(%rip),%rdx
4d04(3): mov %rax,%rcx
4d07(2): xor %esi,%esi
4d09(2): xor %eax,%eax
4d0b(5): call 0xffffca15(%rip)
4d10(5): call 0xffffc790(%rip)

"xgetcwd" :
4d20(1): push %rbx
4d21(2): xor %esi,%esi
4d23(2): xor %edi,%edi
4d25(5): call 0xffffc8cb(%rip)
4d2a(3): test %rax,%rax
4d2d(3): mov %rax,%rbx
4d30(2): jz 0x10(%rip)
4d32(3): mov %rbx,%rax
4d35(1): pop %rbx
4d36(1): ret near (%rsp)
4d37(9): nop 0x0(%rax,%rax,1)
4d40(5): call 0xffffc770(%rip)
4d45(3): cmp $0xc,(%rax)
4d48(2): jnz 0xffffffea(%rip)
4d4a(5): call 0xffffff96(%rip)

"rpl_mbrtowc" :
4d50(2): push %r13
4d52(2): push %r12
4d54(3): mov %rsi,%r13
4d57(1): push %rbp
4d58(1): push %rbx
4d59(3): mov %rdi,%rbx
4d5c(3): mov %rdx,%r12
4d5f(4): sub $0x18,%rsp
4d63(9): mov $0x28,%rax
4d6c(5): mov %rax,0x8(%rsp)
4d71(2): xor %eax,%eax
4d73(5): lea 0x4(%rsp),%rax
4d78(3): test %rdi,%rdi
4d7b(4): cmove %rax,%rbx
4d7f(3): mov %rbx,%rdi
4d82(5): call 0xffffc82e(%rip)
4d87(4): cmp $0xfffffffd,%rax
4d8b(3): mov %rax,%rbp
4d8e(2): jbe 0x22(%rip)
4d90(3): test %r12,%r12
4d93(2): jz 0x1d(%rip)
4d95(2): xor %edi,%edi
4d97(5): call 0xc9(%rip)
4d9c(2): test %al,%al
4d9e(2): jnz 0x12(%rip)
4da0(5): movzx 0x0(%r13),%eax
4da5(5): mov $0x1,%ebp
4daa(2): mov %eax,(%rbx)
4dac(4): nop 0x0(%rax)
4db0(5): mov 0x8(%rsp),%rdx
4db5(9): xor $0x28,%rdx
4dbe(3): mov %rbp,%rax
4dc1(2): jnz 0xd(%rip)
4dc3(4): add $0x18,%rsp
4dc7(1): pop %rbx
4dc8(1): pop %rbp
4dc9(2): pop %r12
4dcb(2): pop %r13
4dcd(1): ret near (%rsp)
4dce(5): call 0xffffc7c2(%rip)

"close_stream" :
4de0(2): push %r12
4de2(1): push %rbp
4de3(3): mov %rdi,%rbp
4de6(1): push %rbx
4de7(5): call 0xffffc6f9(%rip)
4dec(3): mov 0x0(%rbp),%ebx
4def(3): mov %rbp,%rdi
4df2(3): mov %rax,%r12
4df5(5): call 0x10b(%rip)
4dfa(3): and $0x20,%ebx
4dfd(2): test %ebx,%ebx
4dff(2): jnz 0x19(%rip)
4e01(2): test %eax,%eax
4e03(2): jz 0xc(%rip)
4e05(3): test %r12,%r12
4e08(5): mov $0xffffffff,%eax
4e0d(2): jz 0x3b(%rip)
4e0f(1): pop %rbx
4e10(1): pop %rbp
4e11(2): pop %r12
4e13(1): ret near (%rsp)
4e14(4): nop 0x0(%rax)
4e18(2): test %eax,%eax
4e1a(2): jnz 0x1e(%rip)
4e1c(5): call 0xffffc694(%rip)
4e21(6): mov $0x0,(%rax)
4e27(5): mov $0xffffffff,%eax
4e2c(1): pop %rbx
4e2d(1): pop %rbp
4e2e(2): pop %r12
4e30(1): ret near (%rsp)
4e31(7): nop 0x0(%rax)
4e38(1): pop %rbx
4e39(5): mov $0xffffffff,%eax
4e3e(1): pop %rbp
4e3f(2): pop %r12
4e41(1): ret near (%rsp)
4e42(6): nop 0x0(%rax,%rax,1)
4e48(5): call 0xffffc668(%rip)
4e4d(3): cmp $0x9,(%rax)
4e50(1): pop %rbx
4e51(1): pop %rbp
4e52(2): pop %r12
4e54(3): setnz %al
4e57(3): movzx %al,%eax
4e5a(2): neg %eax
4e5c(1): ret near (%rsp)

"hard_locale" :
4e60(4): sub $0x8,%rsp
4e64(2): xor %esi,%esi
4e66(5): call 0xffffc89a(%rip)
4e6b(3): mov %rax,%rdx
4e6e(5): mov $0x1,%eax
4e73(3): test %rdx,%rdx
4e76(2): jz 0x1f(%rip)
4e78(7): lea 0xfc1(%rip),%rdi
4e7f(5): mov $0x2,%ecx
4e84(3): mov %rdx,%rsi
4e87(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4e89(3): setnbe %cl
4e8c(3): sbb $0x0,%cl
4e8f(2): xor %eax,%eax
4e91(2): test %cl,%cl
4e93(2): jnz 0xd(%rip)
4e95(4): add $0x8,%rsp
4e99(1): ret near (%rsp)
4e9a(6): nop 0x0(%rax,%rax,1)
4ea0(7): lea 0xf9b(%rip),%rdi
4ea7(5): mov $0x6,%ecx
4eac(3): mov %rdx,%rsi
4eaf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4eb1(3): setnbe %al
4eb4(2): sbb $0x0,%al
4eb6(2): test %al,%al
4eb8(3): setnz %al
4ebb(4): add $0x8,%rsp
4ebf(1): ret near (%rsp)

"locale_charset" :
4ec0(4): sub $0x8,%rsp
4ec4(5): mov $0xe,%edi
4ec9(5): call 0xffffc7e7(%rip)
4ece(3): test %rax,%rax
4ed1(2): jz 0x1f(%rip)
4ed3(3): cmp $0x0,(%rax)
4ed6(7): lea 0xf6b(%rip),%rdx
4edd(4): cmove %rdx,%rax
4ee1(4): add $0x8,%rsp
4ee5(1): ret near (%rsp)
4ee6(a): nop 0x0(%rax,%rax,1)
4ef0(7): lea 0xf51(%rip),%rax
4ef7(4): add $0x8,%rsp
4efb(1): ret near (%rsp)

"rpl_fclose" :
4f00(2): push %r12
4f02(1): push %rbp
4f03(1): push %rbx
4f04(3): mov %rdi,%rbx
4f07(5): call 0xffffc759(%rip)
4f0c(2): test %eax,%eax
4f0e(3): mov %rbx,%rdi
4f11(2): js 0x56(%rip)
4f13(5): call 0xffffc7bd(%rip)
4f18(2): test %eax,%eax
4f1a(2): jnz 0x2e(%rip)
4f1c(3): mov %rbx,%rdi
4f1f(5): call 0x61(%rip)
4f24(2): test %eax,%eax
4f26(2): jz 0x3e(%rip)
4f28(5): call 0xffffc588(%rip)
4f2d(3): mov (%rax),%r12d
4f30(3): mov %rbx,%rdi
4f33(3): mov %rax,%rbp
4f36(5): call 0xffffc5da(%rip)
4f3b(3): test %r12d,%r12d
4f3e(2): jnz 0x32(%rip)
4f40(1): pop %rbx
4f41(1): pop %rbp
4f42(2): pop %r12
4f44(1): ret near (%rsp)
4f45(3): nop (%rax)
4f48(3): mov %rbx,%rdi
4f4b(5): call 0xffffc715(%rip)
4f50(2): xor %esi,%esi
4f52(5): mov $0x1,%edx
4f57(2): mov %eax,%edi
4f59(5): call 0xffffc677(%rip)
4f5e(4): cmp $0xffffffff,%rax
4f62(2): jnz 0xffffffba(%rip)
4f64(3): mov %rbx,%rdi
4f67(1): pop %rbx
4f68(1): pop %rbp
4f69(2): pop %r12
4f6b(5): jmp 0xffffc5a5(%rip)
4f70(4): mov %r12d,0x0(%rbp)
4f74(5): mov $0xffffffff,%eax
4f79(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4f80(3): test %rdi,%rdi
4f83(1): push %rbx
4f84(3): mov %rdi,%rbx
4f87(2): jz 0x13(%rip)
4f89(5): call 0xffffc747(%rip)
4f8e(2): test %eax,%eax
4f90(2): jz 0xa(%rip)
4f92(6): test $0x100,(%rbx)
4f98(2): jnz 0x10(%rip)
4f9a(3): mov %rbx,%rdi
4f9d(1): pop %rbx
4f9e(5): jmp 0xffffc702(%rip)
4fa3(5): nop 0x0(%rax,%rax,1)
4fa8(3): mov %rbx,%rdi
4fab(5): mov $0x1,%edx
4fb0(2): xor %esi,%esi
4fb2(5): call 0xe(%rip)
4fb7(3): mov %rbx,%rdi
4fba(1): pop %rbx
4fbb(5): jmp 0xffffc6e5(%rip)

"rpl_fseeko" :
4fc0(4): mov 0x8(%rdi),%rax
4fc4(4): cmp %rax,0x10(%rdi)
4fc8(2): jz 0x8(%rip)
4fca(5): jmp 0xffffc766(%rip)
4fcf(1): nop 
4fd0(4): mov 0x20(%rdi),%rax
4fd4(4): cmp %rax,0x28(%rdi)
4fd8(2): jnz 0xfffffff2(%rip)
4fda(5): cmp $0x0,0x48(%rdi)
4fdf(2): jnz 0xffffffeb(%rip)
4fe1(2): push %r12
4fe3(1): push %rbp
4fe4(3): mov %edx,%r12d
4fe7(1): push %rbx
4fe8(3): mov %rsi,%rbp
4feb(3): mov %rdi,%rbx
4fee(5): call 0xffffc672(%rip)
4ff3(3): mov %r12d,%edx
4ff6(3): mov %rbp,%rsi
4ff9(2): mov %eax,%edi
4ffb(5): call 0xffffc5d5(%rip)
5000(4): cmp $0xffffffff,%rax
5004(2): jz 0xe(%rip)
5006(3): and $0xef,(%rbx)
5009(7): mov %rax,0x90(%rbx)
5010(2): xor %eax,%eax
5012(1): pop %rbx
5013(1): pop %rbp
5014(2): pop %r12
5016(1): ret near (%rsp)

"__libc_csu_init" :
5020(2): push %r15
5022(2): push %r14
5024(3): mov %rdx,%r15
5027(2): push %r13
5029(2): push %r12
502b(7): lea 0x202ade(%rip),%r12
5032(1): push %rbp
5033(7): lea 0x202ade(%rip),%rbp
503a(1): push %rbx
503b(3): mov %edi,%r13d
503e(3): mov %rsi,%r14
5041(3): sub %r12,%rbp
5044(4): sub $0x8,%rsp
5048(4): sar $0x3,%rbp
504c(5): call 0xffffc40c(%rip)
5051(3): test %rbp,%rbp
5054(2): jz 0x22(%rip)
5056(2): xor %ebx,%ebx
5058(8): nop 0x0(%rax,%rax,1)
5060(3): mov %r15,%rdx
5063(3): mov %r14,%rsi
5066(3): mov %r13d,%edi
5069(4): call 0x0(%r12,%rbx,8)
506d(4): add $0x1,%rbx
5071(3): cmp %rbx,%rbp
5074(2): jnz 0xffffffec(%rip)
5076(4): add $0x8,%rsp
507a(1): pop %rbx
507b(1): pop %rbp
507c(2): pop %r12
507e(2): pop %r13
5080(2): pop %r14
5082(2): pop %r15
5084(1): ret near (%rsp)

"atexit" :
50a0(7): mov 0x202f61(%rip),%rdx
50a7(2): xor %esi,%esi
50a9(5): jmp 0xffffc697(%rip)

"_fini" :
50b0(4): sub $0x8,%rsp
50b4(4): add $0x8,%rsp
50b8(1): ret near (%rsp)

