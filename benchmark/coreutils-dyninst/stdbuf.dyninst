
"__ctype_toupper_loc@plt" :
1550(6): jmp 0x2098d2(%rip)
1556(5): push $0x0

"getenv@plt" :
1560(6): jmp 0x2098ca(%rip)
1566(5): push $0x1

"__snprintf_chk@plt" :
1570(6): jmp 0x2098c2(%rip)
1576(5): push $0x2

"free@plt" :
1580(6): jmp 0x2098ba(%rip)
1586(5): push $0x3

"abort@plt" :
1590(6): jmp 0x2098b2(%rip)
1596(5): push $0x4

"__errno_location@plt" :
15a0(6): jmp 0x2098aa(%rip)
15a6(5): push $0x5

"strncmp@plt" :
15b0(6): jmp 0x2098a2(%rip)
15b6(5): push $0x6

"_exit@plt" :
15c0(6): jmp 0x20989a(%rip)
15c6(5): push $0x7

"__fpending@plt" :
15d0(6): jmp 0x209892(%rip)
15d6(5): push $0x8

"readlink@plt" :
15e0(6): jmp 0x20988a(%rip)
15e6(5): push $0x9

"textdomain@plt" :
15f0(6): jmp 0x209882(%rip)
15f6(5): push $0xa

"fclose@plt" :
1600(6): jmp 0x20987a(%rip)
1606(5): push $0xb

"bindtextdomain@plt" :
1610(6): jmp 0x209872(%rip)
1616(5): push $0xc

"dcgettext@plt" :
1620(6): jmp 0x20986a(%rip)
1626(5): push $0xd

"__ctype_get_mb_cur_max@plt" :
1630(6): jmp 0x209862(%rip)
1636(5): push $0xe

"strlen@plt" :
1640(6): jmp 0x20985a(%rip)
1646(5): push $0xf

"__stack_chk_fail@plt" :
1650(6): jmp 0x209852(%rip)
1656(5): push $0x10

"getopt_long@plt" :
1660(6): jmp 0x20984a(%rip)
1666(5): push $0x11

"mbrtowc@plt" :
1670(6): jmp 0x209842(%rip)
1676(5): push $0x12

"strchr@plt" :
1680(6): jmp 0x20983a(%rip)
1686(5): push $0x13

"strrchr@plt" :
1690(6): jmp 0x209832(%rip)
1696(5): push $0x14

"lseek@plt" :
16a0(6): jmp 0x20982a(%rip)
16a6(5): push $0x15

"__assert_fail@plt" :
16b0(6): jmp 0x209822(%rip)
16b6(5): push $0x16

"__strtoul_internal@plt" :
16c0(6): jmp 0x20981a(%rip)
16c6(5): push $0x17

"memset@plt" :
16d0(6): jmp 0x209812(%rip)
16d6(5): push $0x18

"memcmp@plt" :
16e0(6): jmp 0x20980a(%rip)
16e6(5): push $0x19

"fputs_unlocked@plt" :
16f0(6): jmp 0x209802(%rip)
16f6(5): push $0x1a

"calloc@plt" :
1700(6): jmp 0x2097fa(%rip)
1706(5): push $0x1b

"putenv@plt" :
1710(6): jmp 0x2097f2(%rip)
1716(5): push $0x1c

"memcpy@plt" :
1720(6): jmp 0x2097ea(%rip)
1726(5): push $0x1d

"fileno@plt" :
1730(6): jmp 0x2097e2(%rip)
1736(5): push $0x1e

"__xstat@plt" :
1740(6): jmp 0x2097da(%rip)
1746(5): push $0x1f

"malloc@plt" :
1750(6): jmp 0x2097d2(%rip)
1756(5): push $0x20

"fflush@plt" :
1760(6): jmp 0x2097ca(%rip)
1766(5): push $0x21

"nl_langinfo@plt" :
1770(6): jmp 0x2097c2(%rip)
1776(5): push $0x22

"__freading@plt" :
1780(6): jmp 0x2097ba(%rip)
1786(5): push $0x23

"realloc@plt" :
1790(6): jmp 0x2097b2(%rip)
1796(5): push $0x24

"setlocale@plt" :
17a0(6): jmp 0x2097aa(%rip)
17a6(5): push $0x25

"__printf_chk@plt" :
17b0(6): jmp 0x2097a2(%rip)
17b6(5): push $0x26

"mempcpy@plt" :
17c0(6): jmp 0x20979a(%rip)
17c6(5): push $0x27

"error@plt" :
17d0(6): jmp 0x209792(%rip)
17d6(5): push $0x28

"access@plt" :
17e0(6): jmp 0x20978a(%rip)
17e6(5): push $0x29

"fseeko@plt" :
17f0(6): jmp 0x209782(%rip)
17f6(5): push $0x2a

"strtok@plt" :
1800(6): jmp 0x20977a(%rip)
1806(5): push $0x2b

"execvp@plt" :
1810(6): jmp 0x209772(%rip)
1816(5): push $0x2c

"__cxa_atexit@plt" :
1820(6): jmp 0x20976a(%rip)
1826(5): push $0x2d

"exit@plt" :
1830(6): jmp 0x209762(%rip)
1836(5): push $0x2e

"fwrite@plt" :
1840(6): jmp 0x20975a(%rip)
1846(5): push $0x2f

"__fprintf_chk@plt" :
1850(6): jmp 0x209752(%rip)
1856(5): push $0x30

"mbsinit@plt" :
1860(6): jmp 0x20974a(%rip)
1866(5): push $0x31

"iswprint@plt" :
1870(6): jmp 0x209742(%rip)
1876(5): push $0x32

"__ctype_b_loc@plt" :
1880(6): jmp 0x20973a(%rip)
1886(5): push $0x33

".plt.got" :
1890(6): jmp 0x209752(%rip)
1896(2): nop 

"_init" :
1528(4): sub $0x8,%rsp
152c(7): mov 0x209aa5(%rip),%rax
1533(3): test %rax,%rax
1536(2): jz 0x4(%rip)
1538(2): call %rax
153a(4): add $0x8,%rsp
153e(1): ret near (%rsp)

"main" :
18a0(2): push %r15
18a2(2): push %r14
18a4(a): mov $0x4294983168,%r15
18ae(2): push %r13
18b0(2): push %r12
18b2(7): lea 0x6967(%rip),%r13
18b9(1): push %rbp
18ba(1): push %rbx
18bb(2): mov %edi,%ebp
18bd(3): mov %rsi,%rbx
18c0(7): sub $0xf8,%rsp
18c7(3): mov (%rsi),%rdi
18ca(9): mov $0x28,%rax
18d3(8): mov %rax,0xe8(%rsp)
18db(2): xor %eax,%eax
18dd(5): call 0xf83(%rip)
18e2(7): lea 0x6ef8(%rip),%rsi
18e9(5): mov $0x6,%edi
18ee(5): call 0xfffffeb2(%rip)
18f3(7): lea 0x6171(%rip),%rsi
18fa(7): lea 0x6141(%rip),%rdi
1901(5): call 0xfffffd0f(%rip)
1906(7): lea 0x6135(%rip),%rdi
190d(5): call 0xfffffce3(%rip)
1912(7): lea 0xbe7(%rip),%rdi
1919(a): mov $0x7d,0x2096f5(%rip)
1923(5): call 0x605d(%rip)
1928(7): lea 0x2097b1(%rip),%r12
192f(7): lea 0x2091aa(%rip),%rcx
1936(7): lea 0x616f(%rip),%rdx
193d(3): xor %r8d,%r8d
1940(3): mov %rbx,%rsi
1943(2): mov %ebp,%edi
1945(5): call 0xfffffd1b(%rip)
194a(3): cmp $0xff,%eax
194d(6): jz 0x162(%rip)
1953(3): cmp $0x65,%eax
1956(2): jz 0x51(%rip)
1958(2): jnle 0x41(%rip)
195a(5): cmp $0xffffff7d,%eax
195f(6): jnz 0x4ee(%rip)
1965(7): mov 0x20971c(%rip),%rdi
196c(7): mov 0x20969d(%rip),%rcx
1973(7): lea 0x6124(%rip),%r8
197a(7): lea 0x60bd(%rip),%rdx
1981(7): lea 0x601c(%rip),%rsi
1988(3): xor %r9d,%r9d
198b(2): xor %eax,%eax
198d(5): call 0x30c3(%rip)
1992(2): xor %edi,%edi
1994(5): call 0xfffffe9c(%rip)
1999(3): cmp $0x69,%eax
199c(2): jz 0xb(%rip)
199e(3): cmp $0x6f,%eax
19a1(6): jnz 0x104(%rip)
19a7(3): lea 0xffffff9b(%rax),%edx
19aa(5): movsxd 0x0(%r13,%rdx,4),%r14
19af(4): cmp $0x2,%r14d
19b3(6): jnbe 0x4b1(%rip)
19b9(7): mov 0x2096d8(%rip),%r9
19c0(4): lea 0x0(%r14,%r14,2),%rdx
19c4(5): mov %eax,0x8(%r12,%rdx,8)
19c9(4): movsx (%r9),%edx
19cd(3): cmp $0x20,%edx
19d0(2): jnbe 0x39(%rip)
19d2(4): bt %rdx,%r15
19d6(2): jnb 0x33(%rip)
19d8(4): lea 0x1(%r9),%rdx
19dc(5): mov $0x1,%esi
19e1(2): jmp 0x16(%rip)
19e3(5): nop 0x0(%rax,%rax,1)
19e8(3): mov %rsi,%rdi
19eb(4): add $0x1,%rdx
19ef(3): shl/sal %cl,%rdi
19f2(3): test %r15,%rdi
19f5(2): jz 0x14(%rip)
19f7(7): mov %rdx,0x20969a(%rip)
19fe(3): movsx (%rdx),%ecx
1a01(3): mov %rdx,%r9
1a04(3): cmp $0x20,%ecx
1a07(2): jbe 0xffffffe1(%rip)
1a09(4): lea 0x0(%r14,%r14,2),%rdx
1a0d(3): cmp $0x69,%eax
1a10(5): mov %r9,0x10(%r12,%rdx,8)
1a15(2): jz 0x69(%rip)
1a17(7): lea 0x60b4(%rip),%rdi
1a1e(5): mov $0x2,%ecx
1a23(3): mov %r9,%rsi
1a26(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1a28(3): setnbe %al
1a2b(2): sbb $0x0,%al
1a2d(2): test %al,%al
1a2f(6): jz 0xffffff00(%rip)
1a35(7): lea 0x6047(%rip),%r8
1a3c(5): lea 0x28(%rsp),%rcx
1a41(5): mov $0xa,%edx
1a46(2): xor %esi,%esi
1a48(3): mov %r9,%rdi
1a4b(5): call 0x3425(%rip)
1a50(3): mov %eax,(%rsp)
1a53(5): call 0xfffffb4d(%rip)
1a58(3): mov (%rsp),%edx
1a5b(3): mov %rax,%r8
1a5e(2): test %edx,%edx
1a60(6): jnz 0x423(%rip)
1a66(4): imul %r14,$0x18,%r14
1a6a(6): mov $0x0,(%rax)
1a70(5): mov 0x28(%rsp),%rax
1a75(4): mov %rax,0x0(%r12,%r14,1)
1a79(5): jmp 0xfffffeaf(%rip)
1a7e(4): cmp $0x4c,(%r9)
1a82(2): jnz 0xffffff95(%rip)
1a84(7): lea 0x66fd(%rip),%rsi
1a8b(5): mov $0x5,%edx
1a90(2): xor %edi,%edi
1a92(5): call 0xfffffb8e(%rip)
1a97(2): xor %esi,%esi
1a99(3): mov %rax,%rdx
1a9c(2): xor %edi,%edi
1a9e(2): xor %eax,%eax
1aa0(5): call 0xfffffd30(%rip)
1aa5(5): mov $0x7d,%edi
1aaa(5): call 0x616(%rip)
1aaf(7): movsxd 0x2095da(%rip),%rdx
1ab6(2): sub %edx,%ebp
1ab8(4): lea 0x0(%rbx,%rdx,8),%r15
1abc(2): test %ebp,%ebp
1abe(6): jle 0x415(%rip)
1ac4(7): lea 0x209615(%rip),%rbx
1acb(5): lea 0x18(%rsp),%r12
1ad0(2): xor %edx,%edx
1ad2(4): lea 0x48(%rbx),%rbp
1ad6(4): mov 0x10(%rbx),%rax
1ada(3): test %rax,%rax
1add(2): jz 0x72(%rip)
1adf(3): cmp $0x4c,(%rax)
1ae2(3): mov 0x8(%rbx),%ecx
1ae5(6): lea 0x80(%rcx),%edx
1aeb(6): jz 0x23a(%rip)
1af1(6): cmp $0x17f,%edx
1af7(3): mov (%rbx),%r8
1afa(2): jnbe 0x1e(%rip)
1afc(5): mov %r8,0x8(%rsp)
1b01(3): mov %ecx,(%rsp)
1b04(5): call 0xfffffa4c(%rip)
1b09(4): movsxd (%rsp),%rcx
1b0d(3): mov (%rax),%rax
1b10(5): mov 0x8(%rsp),%r8
1b15(3): mov 0x0(%rax,%rcx,4),%ecx
1b18(7): lea 0x5fa5(%rip),%rdx
1b1f(7): lea 0x5fae(%rip),%rsi
1b26(3): mov %r12,%rdi
1b29(2): xor %eax,%eax
1b2b(5): call 0x3765(%rip)
1b30(2): test %eax,%eax
1b32(6): js 0x46a(%rip)
1b38(5): mov 0x18(%rsp),%rdi
1b3d(5): call 0xfffffbd3(%rip)
1b42(2): test %eax,%eax
1b44(6): jnz 0x41c(%rip)
1b4a(5): mov $0x1,%edx
1b4f(4): add $0x18,%rbx
1b53(3): cmp %rbx,%rbp
1b56(6): jnz 0xffffff80(%rip)
1b5c(2): test %dl,%dl
1b5e(6): jz 0x3bb(%rip)
1b64(7): mov 0x2095d5(%rip),%rbx
1b6b(5): mov $0x2f,%esi
1b70(3): mov %rbx,%rdi
1b73(5): call 0xfffffb0d(%rip)
1b78(3): test %rax,%rax
1b7b(6): jz 0x1e1(%rip)
1b81(3): mov %rbx,%rdi
1b84(5): call 0xa2c(%rip)
1b89(7): mov %rax,0x209598(%rip)
1b90(8): cmp $0x0,0x209590(%rip)
1b98(6): jz 0x211(%rip)
1b9e(7): lea 0x5f65(%rip),%rdi
1ba5(5): lea 0x30(%rsp),%rbx
1baa(5): lea 0x28(%rsp),%r14
1baf(7): lea 0x5f7c(%rip),%r13
1bb6(7): lea 0x5f82(%rip),%r12
1bbd(5): lea 0x50(%rsp),%rbp
1bc2(5): call 0xfffff99e(%rip)
1bc7(4): mov %rax,(%rsp)
1bcb(7): mov 0x209556(%rip),%rax
1bd2(9): mov $0x0,0x40(%rsp)
1bdb(5): mov %rax,0x30(%rsp)
1be0(7): lea 0x5f2e(%rip),%rax
1be7(5): mov %rax,0x38(%rsp)
1bec(2): jmp 0x48(%rip)
1bee(2): xor %eax,%eax
1bf0(3): mov %r13,%rcx
1bf3(3): mov %r12,%rsi
1bf6(3): mov %r14,%rdi
1bf9(5): call 0x3697(%rip)
1bfe(2): test %eax,%eax
1c00(6): js 0x39c(%rip)
1c06(5): mov 0x28(%rsp),%rsi
1c0b(3): mov %rbp,%rdx
1c0e(5): mov $0x1,%edi
1c13(5): call 0xfffffb2d(%rip)
1c18(2): test %eax,%eax
1c1a(2): jz 0x33(%rip)
1c1c(5): mov 0x28(%rsp),%rdi
1c21(4): add $0x8,%rbx
1c25(5): call 0xfffff95b(%rip)
1c2a(4): cmp $0x0,(%rbx)
1c2e(6): jz 0x2fc(%rip)
1c34(3): mov (%rbx),%rdx
1c37(3): cmp $0x0,(%rdx)
1c3a(2): jnz 0xffffffb4(%rip)
1c3c(7): lea 0x5eef(%rip),%rdi
1c43(5): call 0x319d(%rip)
1c48(5): mov %rax,0x28(%rsp)
1c4d(4): mov (%rsp),%rcx
1c51(5): mov 0x28(%rsp),%r8
1c56(5): lea 0x20(%rsp),%rdi
1c5b(3): test %rcx,%rcx
1c5e(6): jz 0x12e(%rip)
1c64(7): lea 0x5e9f(%rip),%rdx
1c6b(7): lea 0x5ee5(%rip),%rsi
1c72(2): xor %eax,%eax
1c74(5): call 0x361c(%rip)
1c79(2): test %eax,%eax
1c7b(6): js 0x321(%rip)
1c81(5): mov 0x28(%rsp),%rdi
1c86(5): call 0xfffff8fa(%rip)
1c8b(5): mov 0x20(%rsp),%rdi
1c90(5): call 0xfffffa80(%rip)
1c95(2): mov %eax,%ebx
1c97(5): call 0xfffff909(%rip)
1c9c(2): test %ebx,%ebx
1c9e(3): mov %rax,%rbp
1ca1(6): jnz 0x243(%rip)
1ca7(7): mov 0x20947a(%rip),%rdi
1cae(2): xor %ebx,%ebx
1cb0(5): call 0xfffff8d0(%rip)
1cb5(3): mov (%r15),%rdi
1cb8(3): mov %r15,%rsi
1cbb(5): call 0xfffffb55(%rip)
1cc0(4): cmp $0x2,0x0(%rbp)
1cc4(3): mov (%r15),%rdi
1cc7(3): setz %bl
1cca(5): call 0x28a6(%rip)
1ccf(7): lea 0x5e90(%rip),%rsi
1cd6(2): xor %edi,%edi
1cd8(5): mov $0x5,%edx
1cdd(3): mov %rax,%r12
1ce0(3): add $0x7e,%ebx
1ce3(5): call 0xfffff93d(%rip)
1ce8(3): mov 0x0(%rbp),%esi
1ceb(3): mov %rax,%rdx
1cee(2): xor %edi,%edi
1cf0(2): xor %eax,%eax
1cf2(3): mov %r12,%rcx
1cf5(5): call 0xfffffadb(%rip)
1cfa(2): mov %ebx,%eax
1cfc(8): mov 0xe8(%rsp),%rbx
1d04(9): xor $0x28,%rbx
1d0d(6): jnz 0x152(%rip)
1d13(7): add $0xf8,%rsp
1d1a(1): pop %rbx
1d1b(1): pop %rbp
1d1c(2): pop %r12
1d1e(2): pop %r13
1d20(2): pop %r14
1d22(2): pop %r15
1d24(1): ret near (%rsp)
1d25(6): cmp $0x17f,%edx
1d2b(2): jnbe 0x14(%rip)
1d2d(3): mov %ecx,(%rsp)
1d30(5): call 0xfffff820(%rip)
1d35(4): movsxd (%rsp),%rcx
1d39(3): mov (%rax),%rax
1d3c(3): mov 0x0(%rax,%rcx,4),%ecx
1d3f(7): lea 0x5d7e(%rip),%rdx
1d46(7): lea 0x5d80(%rip),%rsi
1d4d(3): mov %r12,%rdi
1d50(2): xor %eax,%eax
1d52(5): call 0x353e(%rip)
1d57(5): jmp 0xfffffdd9(%rip)
1d5c(7): lea 0x5d7a(%rip),%rdi
1d63(5): call 0x30dd(%rip)
1d68(3): test %rax,%rax
1d6b(3): mov %rax,%rbp
1d6e(2): jz 0x53(%rip)
1d70(3): mov %rax,%rdi
1d73(5): call 0x83d(%rip)
1d78(7): mov %rax,0x2093a9(%rip)
1d7f(3): mov %rbp,%rdi
1d82(5): call 0xfffff7fe(%rip)
1d87(5): jmp 0xfffffe09(%rip)
1d8c(7): lea 0x5d77(%rip),%rdx
1d93(7): lea 0x5dc6(%rip),%rsi
1d9a(3): mov %r8,%rcx
1d9d(2): xor %eax,%eax
1d9f(5): call 0x34f1(%rip)
1da4(5): jmp 0xfffffed5(%rip)
1da9(7): lea 0x5d41(%rip),%rdi
1db0(5): call 0x3030(%rip)
1db5(7): mov %rax,0x20936c(%rip)
1dbc(5): jmp 0xfffffde2(%rip)
1dc1(7): lea 0x5d24(%rip),%rdi
1dc8(5): call 0xfffff798(%rip)
1dcd(3): test %rax,%rax
1dd0(3): mov %rax,%rbp
1dd3(2): jz 0xffffffac(%rip)
1dd5(3): mov %rax,%rdi
1dd8(7): lea 0x5cd3(%rip),%r13
1ddf(5): call 0x3001(%rip)
1de4(7): lea 0x5cc7(%rip),%rsi
1deb(3): mov %rax,%rdi
1dee(3): mov %rax,%rbp
1df1(5): call 0xfffffa0f(%rip)
1df6(2): jmp 0x11(%rip)
1df8(5): call 0xfffff788(%rip)
1dfd(3): mov %r13,%rsi
1e00(2): xor %edi,%edi
1e02(5): call 0xfffff9fe(%rip)
1e07(3): test %rax,%rax
1e0a(6): jz 0xffffff75(%rip)
1e10(2): xor %edx,%edx
1e12(3): mov %rbx,%rsi
1e15(3): mov %rax,%rdi
1e18(5): call 0x928(%rip)
1e1d(5): mov $0x1,%esi
1e22(3): mov %rax,%rdi
1e25(3): mov %rax,%r12
1e28(5): call 0xfffff9b8(%rip)
1e2d(2): test %eax,%eax
1e2f(3): mov %r12,%rdi
1e32(2): jnz 0xffffffc6(%rip)
1e34(5): call 0x77c(%rip)
1e39(3): mov %r12,%rdi
1e3c(7): mov %rax,0x2092e5(%rip)
1e43(5): call 0xfffff73d(%rip)
1e48(5): jmp 0xffffff37(%rip)
1e4d(5): cmp $0xffffff7e,%eax
1e52(6): jnz 0xfffffc53(%rip)
1e58(2): xor %edi,%edi
1e5a(5): call 0x266(%rip)
1e5f(5): call 0xfffff7f1(%rip)
1e64(7): lea 0x63e1(%rip),%rcx
1e6b(7): lea 0x62b6(%rip),%rsi
1e72(7): lea 0x62cf(%rip),%rdi
1e79(5): mov $0x150,%edx
1e7e(5): call 0xfffff832(%rip)
1e83(3): sub $0x1,%edx
1e86(2): jz 0x46(%rip)
1e88(2): mov (%rax),%eax
1e8a(7): mov 0x209207(%rip),%rdi
1e91(3): mov %eax,(%r8)
1e94(4): mov %r8,(%rsp)
1e98(5): call 0x26d8(%rip)
1e9d(7): lea 0x5bea(%rip),%rsi
1ea4(5): mov $0x5,%edx
1ea9(2): xor %edi,%edi
1eab(3): mov %rax,%rbx
1eae(5): call 0xfffff772(%rip)
1eb3(4): mov (%rsp),%r8
1eb7(3): mov %rax,%rdx
1eba(3): mov %rbx,%rcx
1ebd(5): mov $0x7d,%edi
1ec2(2): xor %eax,%eax
1ec4(3): mov (%r8),%esi
1ec7(5): call 0xfffff909(%rip)
1ecc(5): mov $0x4b,%eax
1ed1(2): jmp 0xffffffb9(%rip)
1ed3(5): mov $0x5,%edx
1ed8(7): lea 0x5bd5(%rip),%rsi
1edf(5): jmp 0xfffffbb1(%rip)
1ee4(5): mov 0x20(%rsp),%rdi
1ee9(5): call 0x2687(%rip)
1eee(7): lea 0x62bb(%rip),%rsi
1ef5(5): mov $0x5,%edx
1efa(2): xor %edi,%edi
1efc(3): mov %rax,%rbx
1eff(5): call 0xfffff721(%rip)
1f04(3): mov 0x0(%rbp),%esi
1f07(3): mov %rax,%rdx
1f0a(3): mov %rbx,%rcx
1f0d(5): mov $0x7d,%edi
1f12(2): xor %eax,%eax
1f14(5): call 0xfffff8bc(%rip)
1f19(5): mov $0x5,%edx
1f1e(7): lea 0x62bb(%rip),%rsi
1f25(5): jmp 0xfffffb6b(%rip)
1f2a(7): lea 0x5c01(%rip),%rdi
1f31(5): call 0x263f(%rip)
1f36(7): lea 0x5c08(%rip),%rsi
1f3d(3): mov %rax,%rbx
1f40(5): mov $0x5,%edx
1f45(2): xor %edi,%edi
1f47(5): call 0xfffff6d9(%rip)
1f4c(3): mov %rbx,%rcx
1f4f(3): mov %rax,%rdx
1f52(2): xor %esi,%esi
1f54(5): mov $0x7d,%edi
1f59(2): xor %eax,%eax
1f5b(5): call 0xfffff875(%rip)
1f60(5): mov 0x18(%rsp),%rdi
1f65(5): call 0x260b(%rip)
1f6a(7): lea 0x623f(%rip),%rsi
1f71(5): mov $0x5,%edx
1f76(2): xor %edi,%edi
1f78(3): mov %rax,%rbp
1f7b(5): call 0xfffff6a5(%rip)
1f80(3): mov %rax,%rbx
1f83(5): call 0xfffff61d(%rip)
1f88(2): mov (%rax),%esi
1f8a(3): mov %rbp,%rcx
1f8d(3): mov %rbx,%rdx
1f90(5): mov $0x7d,%edi
1f95(2): xor %eax,%eax
1f97(5): call 0xfffff839(%rip)
1f9c(5): call 0x2e64(%rip)

"_start" :
1fb0(2): xor %ebp,%ebp
1fb2(3): mov %rdx,%r9
1fb5(1): pop %rsi
1fb6(3): mov %rsp,%rdx
1fb9(4): and $0xfffffff0,%rsp
1fbd(1): push %rax
1fbe(1): push %rsp
1fbf(7): lea 0x59aa(%rip),%r8
1fc6(7): lea 0x5933(%rip),%rcx
1fcd(7): lea 0xfffff8cc(%rip),%rdi
1fd4(6): call 0x208ff6(%rip)
1fda(1): hlt 

"deregister_tm_clones" :
1fe0(7): lea 0x209099(%rip),%rdi
1fe7(1): push %rbp
1fe8(7): lea 0x209091(%rip),%rax
1fef(3): cmp %rdi,%rax
1ff2(3): mov %rsp,%rbp
1ff5(2): jz 0x1b(%rip)
1ff7(7): mov 0x208fca(%rip),%rax
1ffe(3): test %rax,%rax
2001(2): jz 0xf(%rip)
2003(1): pop %rbp
2004(2): jmp %rax
2006(a): nop 0x0(%rax,%rax,1)
2010(1): pop %rbp
2011(1): ret near (%rsp)

"register_tm_clones" :
2020(7): lea 0x209059(%rip),%rdi
2027(7): lea 0x209052(%rip),%rsi
202e(1): push %rbp
202f(3): sub %rdi,%rsi
2032(3): mov %rsp,%rbp
2035(4): sar $0x3,%rsi
2039(3): mov %rsi,%rax
203c(4): shr $0x3f,%rax
2040(3): add %rax,%rsi
2043(3): sar $0x1,%rsi
2046(2): jz 0x1a(%rip)
2048(7): mov 0x208f91(%rip),%rax
204f(3): test %rax,%rax
2052(2): jz 0xe(%rip)
2054(1): pop %rbp
2055(2): jmp %rax
2057(9): nop 0x0(%rax,%rax,1)
2060(1): pop %rbp
2061(1): ret near (%rsp)

"__do_global_dtors_aux" :
2070(7): cmp $0x0,0x209051(%rip)
2077(2): jnz 0x31(%rip)
2079(8): cmp $0x0,0x208f67(%rip)
2081(1): push %rbp
2082(3): mov %rsp,%rbp
2085(2): jz 0xe(%rip)
2087(7): mov 0x208f7a(%rip),%rdi
208e(5): call 0xfffff802(%rip)
2093(5): call 0xffffff4d(%rip)
2098(7): mov $0x1,0x209029(%rip)
209f(1): pop %rbp
20a0(1): ret near (%rsp)
20a1(7): nop 0x0(%rax)
20a8(2): REP ret near (%rsp)

"frame_dummy" :
20b0(1): push %rbp
20b1(3): mov %rsp,%rbp
20b4(1): pop %rbp
20b5(5): jmp 0xffffff6b(%rip)

"usage" :
20c0(2): push %r13
20c2(2): push %r12
20c4(5): mov $0x5,%edx
20c9(1): push %rbp
20ca(1): push %rbx
20cb(2): mov %edi,%ebp
20cd(7): sub $0x88,%rsp
20d4(7): mov 0x209065(%rip),%rbx
20db(9): mov $0x28,%rax
20e4(5): mov %rax,0x78(%rsp)
20e9(2): xor %eax,%eax
20eb(2): test %edi,%edi
20ed(2): jz 0x30(%rip)
20ef(7): lea 0x5aaa(%rip),%rsi
20f6(2): xor %edi,%edi
20f8(5): call 0xfffff528(%rip)
20fd(7): mov 0x208fbc(%rip),%rdi
2104(3): mov %rax,%rdx
2107(3): mov %rbx,%rcx
210a(5): mov $0x1,%esi
210f(2): xor %eax,%eax
2111(5): call 0xfffff73f(%rip)
2116(2): mov %ebp,%edi
2118(5): call 0xfffff718(%rip)
211d(7): lea 0x5887(%rip),%rsi
2124(2): xor %edi,%edi
2126(5): call 0xfffff4fa(%rip)
212b(3): mov %rbx,%rdx
212e(3): mov %rax,%rsi
2131(5): mov $0x1,%edi
2136(2): xor %eax,%eax
2138(5): call 0xfffff678(%rip)
213d(7): mov 0x208f44(%rip),%rbx
2144(7): lea 0x5a7d(%rip),%rsi
214b(5): mov $0x5,%edx
2150(2): xor %edi,%edi
2152(5): call 0xfffff4ce(%rip)
2157(3): mov %rbx,%rsi
215a(3): mov %rax,%rdi
215d(5): call 0xfffff593(%rip)
2162(7): mov 0x208f1f(%rip),%rbx
2169(7): lea 0x5aa8(%rip),%rsi
2170(5): mov $0x5,%edx
2175(2): xor %edi,%edi
2177(5): call 0xfffff4a9(%rip)
217c(3): mov %rbx,%rsi
217f(3): mov %rax,%rdi
2182(5): call 0xfffff56e(%rip)
2187(7): mov 0x208efa(%rip),%rbx
218e(7): lea 0x5ad3(%rip),%rsi
2195(5): mov $0x5,%edx
219a(2): xor %edi,%edi
219c(5): call 0xfffff484(%rip)
21a1(3): mov %rbx,%rsi
21a4(3): mov %rax,%rdi
21a7(5): call 0xfffff549(%rip)
21ac(7): mov 0x208ed5(%rip),%rbx
21b3(7): lea 0x5b66(%rip),%rsi
21ba(5): mov $0x5,%edx
21bf(2): xor %edi,%edi
21c1(5): call 0xfffff45f(%rip)
21c6(3): mov %rbx,%rsi
21c9(3): mov %rax,%rdi
21cc(5): call 0xfffff524(%rip)
21d1(7): mov 0x208eb0(%rip),%rbx
21d8(7): lea 0x5b71(%rip),%rsi
21df(5): mov $0x5,%edx
21e4(2): xor %edi,%edi
21e6(5): call 0xfffff43a(%rip)
21eb(3): mov %rbx,%rsi
21ee(3): mov %rax,%rdi
21f1(5): call 0xfffff4ff(%rip)
21f6(7): mov 0x208e8b(%rip),%rbx
21fd(7): lea 0x5b84(%rip),%rsi
2204(5): mov $0x5,%edx
2209(2): xor %edi,%edi
220b(5): call 0xfffff415(%rip)
2210(3): mov %rbx,%rsi
2213(3): mov %rax,%rdi
2216(5): call 0xfffff4da(%rip)
221b(7): mov 0x208e66(%rip),%rbx
2222(7): lea 0x5bcf(%rip),%rsi
2229(5): mov $0x5,%edx
222e(2): xor %edi,%edi
2230(5): call 0xfffff3f0(%rip)
2235(3): mov %rbx,%rsi
2238(3): mov %rax,%rdi
223b(5): call 0xfffff4b5(%rip)
2240(7): mov 0x208e41(%rip),%rbx
2247(7): lea 0x5bea(%rip),%rsi
224e(5): mov $0x5,%edx
2253(2): xor %edi,%edi
2255(5): call 0xfffff3cb(%rip)
225a(3): mov %rbx,%rsi
225d(3): mov %rax,%rdi
2260(5): call 0xfffff490(%rip)
2265(7): mov 0x208e1c(%rip),%rbx
226c(7): lea 0x5cfd(%rip),%rsi
2273(5): mov $0x5,%edx
2278(2): xor %edi,%edi
227a(5): call 0xfffff3a6(%rip)
227f(3): mov %rbx,%rsi
2282(3): mov %rax,%rdi
2285(7): lea 0x5718(%rip),%rbx
228c(5): call 0xfffff464(%rip)
2291(7): lea 0x5730(%rip),%rax
2298(7): lea 0x576a(%rip),%rcx
229f(9): mov $0x0,0x60(%rsp)
22a8(9): mov $0x0,0x68(%rsp)
22b1(3): mov %rsp,%rdx
22b4(4): mov %rax,(%rsp)
22b8(7): lea 0x570b(%rip),%rax
22bf(5): mov %rcx,0x30(%rsp)
22c4(7): lea 0x5748(%rip),%rcx
22cb(5): mov %rax,0x8(%rsp)
22d0(7): lea 0x576b(%rip),%rax
22d7(5): mov %rcx,0x40(%rsp)
22dc(7): lea 0x573a(%rip),%rcx
22e3(5): mov %rax,0x10(%rsp)
22e8(7): lea 0x56eb(%rip),%rax
22ef(5): mov %rcx,0x50(%rsp)
22f4(5): mov %rax,0x18(%rsp)
22f9(7): lea 0x56f0(%rip),%rax
2300(5): mov %rax,0x20(%rsp)
2305(7): lea 0x56ee(%rip),%rax
230c(5): mov %rax,0x28(%rsp)
2311(5): mov %rax,0x38(%rsp)
2316(5): mov %rax,0x48(%rsp)
231b(5): mov %rax,0x58(%rsp)
2320(4): add $0x10,%rdx
2324(3): mov (%rdx),%rdi
2327(3): test %rdi,%rdi
232a(2): jz 0x15(%rip)
232c(5): mov $0x7,%ecx
2331(3): mov %rbx,%rsi
2334(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2336(3): setnbe %al
2339(2): sbb $0x0,%al
233b(2): test %al,%al
233d(2): jnz 0xffffffe3(%rip)
233f(4): mov 0x8(%rdx),%r12
2343(2): xor %edi,%edi
2345(5): mov $0x5,%edx
234a(7): lea 0x56d6(%rip),%rsi
2351(3): test %r12,%r12
2354(6): jz 0xc7(%rip)
235a(5): call 0xfffff2c6(%rip)
235f(7): lea 0x5d1a(%rip),%rcx
2366(7): lea 0x56d1(%rip),%rdx
236d(3): mov %rax,%rsi
2370(5): mov $0x1,%edi
2375(2): xor %eax,%eax
2377(5): call 0xfffff439(%rip)
237c(2): xor %esi,%esi
237e(5): mov $0x5,%edi
2383(5): call 0xfffff41d(%rip)
2388(3): test %rax,%rax
238b(2): jz 0x1e(%rip)
238d(7): lea 0x56b8(%rip),%rsi
2394(5): mov $0x3,%edx
2399(3): mov %rax,%rdi
239c(5): call 0xfffff214(%rip)
23a1(2): test %eax,%eax
23a3(6): jnz 0x10d(%rip)
23a9(7): lea 0x56a0(%rip),%rsi
23b0(2): xor %edi,%edi
23b2(5): mov $0x5,%edx
23b7(5): call 0xfffff269(%rip)
23bc(7): lea 0x55e1(%rip),%rcx
23c3(7): lea 0x5cb6(%rip),%rdx
23ca(3): mov %rax,%rsi
23cd(5): mov $0x1,%edi
23d2(2): xor %eax,%eax
23d4(5): call 0xfffff3dc(%rip)
23d9(3): cmp %rbx,%r12
23dc(7): lea 0x5601(%rip),%rcx
23e3(7): lea 0x63f7(%rip),%rbx
23ea(4): cmove %rcx,%rbx
23ee(7): lea 0x5cfb(%rip),%rsi
23f5(2): xor %edi,%edi
23f7(5): mov $0x5,%edx
23fc(5): call 0xfffff224(%rip)
2401(3): mov %rbx,%rcx
2404(3): mov %rax,%rsi
2407(3): mov %r12,%rdx
240a(5): mov $0x1,%edi
240f(2): xor %eax,%eax
2411(5): call 0xfffff39f(%rip)
2416(5): jmp 0xfffffd00(%rip)
241b(5): call 0xfffff205(%rip)
2420(7): lea 0x5c59(%rip),%rcx
2427(7): lea 0x5610(%rip),%rdx
242e(3): mov %rax,%rsi
2431(5): mov $0x1,%edi
2436(2): xor %eax,%eax
2438(5): call 0xfffff378(%rip)
243d(2): xor %esi,%esi
243f(5): mov $0x5,%edi
2444(5): call 0xfffff35c(%rip)
2449(3): test %rax,%rax
244c(2): jz 0x1a(%rip)
244e(7): lea 0x55f7(%rip),%rsi
2455(5): mov $0x3,%edx
245a(3): mov %rax,%rdi
245d(5): call 0xfffff153(%rip)
2462(2): test %eax,%eax
2464(2): jnz 0x45(%rip)
2466(7): lea 0x55e3(%rip),%rsi
246d(5): mov $0x5,%edx
2472(2): xor %edi,%edi
2474(7): lea 0x5529(%rip),%r12
247b(7): lea 0x5562(%rip),%rbx
2482(5): call 0xfffff19e(%rip)
2487(7): lea 0x5516(%rip),%rcx
248e(7): lea 0x5beb(%rip),%rdx
2495(3): mov %rax,%rsi
2498(5): mov $0x1,%edi
249d(2): xor %eax,%eax
249f(5): call 0xfffff311(%rip)
24a4(5): jmp 0xffffff4a(%rip)
24a9(7): lea 0x54f4(%rip),%r12
24b0(7): mov 0x208bd1(%rip),%r13
24b7(7): lea 0x5bea(%rip),%rsi
24be(2): xor %edi,%edi
24c0(5): mov $0x5,%edx
24c5(5): call 0xfffff15b(%rip)
24ca(3): mov %r13,%rsi
24cd(3): mov %rax,%rdi
24d0(5): call 0xfffff220(%rip)
24d5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
24e0(7): mov %rdi,0x208c51(%rip)
24e7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
24f0(7): mov %dil,0x208c39(%rip)
24f7(1): ret near (%rsp)

"close_stdout" :
2500(1): push %rbp
2501(1): push %rbx
2502(4): sub $0x8,%rsp
2506(7): mov 0x208b7b(%rip),%rdi
250d(5): call 0x31a3(%rip)
2512(2): test %eax,%eax
2514(2): jz 0x18(%rip)
2516(5): call 0xfffff08a(%rip)
251b(7): cmp $0x0,0x208c0e(%rip)
2522(3): mov %rax,%rbx
2525(2): jz 0x1e(%rip)
2527(3): cmp $0x20,(%rax)
252a(2): jnz 0x19(%rip)
252c(7): mov 0x208b8d(%rip),%rdi
2533(5): call 0x317d(%rip)
2538(2): test %eax,%eax
253a(2): jnz 0x48(%rip)
253c(4): add $0x8,%rsp
2540(1): pop %rbx
2541(1): pop %rbp
2542(1): ret near (%rsp)
2543(7): lea 0x5d0c(%rip),%rsi
254a(2): xor %edi,%edi
254c(5): mov $0x5,%edx
2551(5): call 0xfffff0cf(%rip)
2556(7): mov 0x208bdb(%rip),%rdi
255d(3): mov %rax,%rbp
2560(3): test %rdi,%rdi
2563(2): jz 0x2a(%rip)
2565(5): call 0x1e0b(%rip)
256a(2): mov (%rbx),%esi
256c(7): lea 0x5cef(%rip),%rdx
2573(3): mov %rax,%rcx
2576(3): mov %rbp,%r8
2579(2): xor %edi,%edi
257b(2): xor %eax,%eax
257d(5): call 0xfffff253(%rip)
2582(6): mov 0x208a90(%rip),%edi
2588(5): call 0xfffff038(%rip)
258d(2): mov (%rbx),%esi
258f(7): lea 0x5cd0(%rip),%rdx
2596(3): mov %rax,%rcx
2599(2): xor %edi,%edi
259b(2): xor %eax,%eax
259d(5): call 0xfffff233(%rip)
25a2(2): jmp 0xffffffe0(%rip)

"dir_name" :
25b0(4): sub $0x8,%rsp
25b4(5): call 0x7c(%rip)
25b9(3): test %rax,%rax
25bc(2): jz 0x7(%rip)
25be(4): add $0x8,%rsp
25c2(1): ret near (%rsp)
25c3(5): call 0x283d(%rip)

"dir_len" :
25d0(1): push %rbp
25d1(1): push %rbx
25d2(2): xor %ebp,%ebp
25d4(3): mov %rdi,%rbx
25d7(4): sub $0x8,%rsp
25db(3): cmp $0x2f,(%rdi)
25de(4): setz %bpl
25e2(5): call 0xae(%rip)
25e7(3): mov %rax,%rcx
25ea(3): sub %rbx,%rcx
25ed(3): cmp %rbp,%rcx
25f0(2): jbe 0x30(%rip)
25f2(4): cmp $0x2f,0xffffffff(%rax)
25f6(4): lea 0xffffffff(%rcx),%rdx
25fa(2): jz 0x14(%rip)
25fc(2): jmp 0x24(%rip)
25fe(2): nop 
2600(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
2605(4): lea 0xffffffff(%rdx),%rax
2609(2): jnz 0xa(%rip)
260b(3): mov %rax,%rdx
260e(3): cmp %rdx,%rbp
2611(2): jnz 0xffffffef(%rip)
2613(4): add $0x8,%rsp
2617(3): mov %rdx,%rax
261a(1): pop %rbx
261b(1): pop %rbp
261c(1): ret near (%rsp)
261d(3): nop (%rax)
2620(4): add $0x8,%rsp
2624(3): mov %rcx,%rdx
2627(3): mov %rdx,%rax
262a(1): pop %rbx
262b(1): pop %rbp
262c(1): ret near (%rsp)

"mdir_name" :
2630(1): push %rbp
2631(1): push %rbx
2632(3): mov %rdi,%rbp
2635(4): sub $0x8,%rsp
2639(5): call 0xffffff97(%rip)
263e(3): test %rax,%rax
2641(3): mov %rax,%rbx
2644(3): setz %al
2647(3): movzx %al,%eax
264a(5): lea 0x1(%rbx,%rax,1),%rdi
264f(5): call 0xfffff101(%rip)
2654(3): test %rax,%rax
2657(3): mov %rax,%rcx
265a(2): jz 0x1c(%rip)
265c(3): mov %rbx,%rdx
265f(3): mov %rbp,%rsi
2662(3): mov %rax,%rdi
2665(5): call 0xfffff0bb(%rip)
266a(3): test %rbx,%rbx
266d(3): mov %rax,%rcx
2670(2): jz 0x10(%rip)
2672(4): mov $0x0,0x0(%rcx,%rbx,1)
2676(4): add $0x8,%rsp
267a(3): mov %rcx,%rax
267d(1): pop %rbx
267e(1): pop %rbp
267f(1): ret near (%rsp)
2680(3): mov $0x2e,(%rax)
2683(5): mov $0x1,%ebx
2688(2): jmp 0xffffffea(%rip)

"last_component" :
2690(3): movzx (%rdi),%edx
2693(3): mov %rdi,%rax
2696(3): cmp $0x2f,%dl
2699(2): jnz 0x13(%rip)
269b(5): nop 0x0(%rax,%rax,1)
26a0(4): add $0x1,%rax
26a4(3): movzx (%rax),%edx
26a7(3): cmp $0x2f,%dl
26aa(2): jz 0xfffffff6(%rip)
26ac(2): test %dl,%dl
26ae(2): jz 0x3c(%rip)
26b0(3): mov %rax,%rcx
26b3(2): xor %esi,%esi
26b5(2): jmp 0x20(%rip)
26b7(9): nop 0x0(%rax,%rax,1)
26c0(3): test %sil,%sil
26c3(2): jz 0x7(%rip)
26c5(3): mov %rcx,%rax
26c8(2): xor %esi,%esi
26ca(4): add $0x1,%rcx
26ce(3): movzx (%rcx),%edx
26d1(2): test %dl,%dl
26d3(2): jz 0x17(%rip)
26d5(3): cmp $0x2f,%dl
26d8(2): jnz 0xffffffe8(%rip)
26da(4): add $0x1,%rcx
26de(3): movzx (%rcx),%edx
26e1(5): mov $0x1,%esi
26e6(2): test %dl,%dl
26e8(2): jnz 0xffffffed(%rip)
26ea(2): REP ret near (%rsp)

"base_len" :
26f0(1): push %rbx
26f1(3): mov %rdi,%rbx
26f4(5): call 0xffffef4c(%rip)
26f9(4): cmp $0x1,%rax
26fd(2): jbe 0xd(%rip)
26ff(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
2704(4): lea 0xffffffff(%rax),%rdx
2708(2): jz 0x10(%rip)
270a(1): pop %rbx
270b(1): ret near (%rsp)
270c(4): nop 0x0(%rax)
2710(3): mov %rax,%rdx
2713(5): nop 0x0(%rax,%rax,1)
2718(4): cmp $0x1,%rdx
271c(2): jz 0x14(%rip)
271e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
2723(4): lea 0xffffffff(%rdx),%rax
2727(2): jz 0xffffffe9(%rip)
2729(3): mov %rdx,%rax
272c(1): pop %rbx
272d(1): ret near (%rsp)
272e(2): nop 
2730(5): mov $0x1,%eax
2735(1): pop %rbx
2736(1): ret near (%rsp)

"file_name_concat" :
2740(4): sub $0x8,%rsp
2744(5): call 0x1c(%rip)
2749(3): test %rax,%rax
274c(2): jz 0x7(%rip)
274e(4): add $0x8,%rsp
2752(1): ret near (%rsp)
2753(5): call 0x26ad(%rip)

"mfile_name_concat" :
2760(2): push %r15
2762(2): push %r14
2764(3): mov %rdx,%r15
2767(2): push %r13
2769(2): push %r12
276b(3): mov %rdi,%r12
276e(1): push %rbp
276f(1): push %rbx
2770(3): mov %rsi,%rbp
2773(4): sub $0x18,%rsp
2777(5): call 0xffffff19(%rip)
277c(3): mov %rax,%rbx
277f(3): mov %rax,%rdi
2782(5): call 0xffffff6e(%rip)
2787(3): sub %r12,%rbx
278a(3): mov %rax,%r13
278d(3): mov %rbp,%rdi
2790(3): add %rax,%rbx
2793(5): call 0xffffeead(%rip)
2798(3): test %r13,%r13
279b(3): mov %rax,%r14
279e(2): jz 0x32(%rip)
27a0(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
27a6(6): jz 0xaa(%rip)
27ac(2): xor %eax,%eax
27ae(4): cmp $0x2f,0x0(%rbp)
27b2(5): mov $0x0,%edx
27b7(3): setnz %al
27ba(4): mov %rax,(%rsp)
27be(5): mov $0x2f,%eax
27c3(3): cmove %edx,%eax
27c6(4): mov %al,0xf(%rsp)
27ca(2): jmp 0x24(%rip)
27cc(4): nop 0x0(%rax)
27d0(2): xor %eax,%eax
27d2(4): cmp $0x2f,0x0(%rbp)
27d6(5): mov $0x0,%edx
27db(3): setz %al
27de(4): mov %rax,(%rsp)
27e2(5): mov $0x2e,%eax
27e7(3): cmovne %edx,%eax
27ea(4): mov %al,0xf(%rsp)
27ee(5): lea 0x1(%rbx,%r14,1),%rdi
27f3(4): add (%rsp),%rdi
27f7(5): call 0xffffef59(%rip)
27fc(3): test %rax,%rax
27ff(3): mov %rax,%r13
2802(2): jz 0x34(%rip)
2804(3): mov %rax,%rdi
2807(3): mov %rbx,%rdx
280a(3): mov %r12,%rsi
280d(5): call 0xffffefb3(%rip)
2812(5): movzx 0xf(%rsp),%ecx
2817(4): mov (%rsp),%rdi
281b(3): add %rax,%rdi
281e(3): test %r15,%r15
2821(2): mov %cl,(%rax)
2823(2): jz 0x5(%rip)
2825(3): mov %rdi,(%r15)
2828(3): mov %r14,%rdx
282b(3): mov %rbp,%rsi
282e(5): call 0xffffef92(%rip)
2833(3): mov $0x0,(%rax)
2836(4): add $0x18,%rsp
283a(3): mov %r13,%rax
283d(1): pop %rbx
283e(1): pop %rbp
283f(2): pop %r12
2841(2): pop %r13
2843(2): pop %r14
2845(2): pop %r15
2847(1): ret near (%rsp)
2848(8): nop 0x0(%rax,%rax,1)
2850(8): mov $0x0,(%rsp)
2858(5): mov $0x0,0xf(%rsp)
285d(2): jmp 0xffffff91(%rip)

"set_program_name" :
2860(3): test %rdi,%rdi
2863(1): push %rbx
2864(2): jz 0x79(%rip)
2866(5): mov $0x2f,%esi
286b(3): mov %rdi,%rbx
286e(5): call 0xffffee22(%rip)
2873(3): test %rax,%rax
2876(2): jz 0x57(%rip)
2878(4): lea 0x1(%rax),%r8
287c(3): mov %r8,%rdx
287f(3): sub %rbx,%rdx
2882(4): cmp $0x6,%rdx
2886(2): jle 0x47(%rip)
2888(4): lea 0xfffffffa(%rax),%rsi
288c(7): lea 0x5a15(%rip),%rdi
2893(5): mov $0x7,%ecx
2898(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
289a(3): setnbe %dl
289d(3): sbb $0x0,%dl
28a0(2): test %dl,%dl
28a2(2): jnz 0x2b(%rip)
28a4(7): lea 0x5a05(%rip),%rdi
28ab(5): mov $0x3,%ecx
28b0(3): mov %r8,%rsi
28b3(3): mov %r8,%rbx
28b6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
28b8(3): setnbe %dl
28bb(3): sbb $0x0,%dl
28be(2): test %dl,%dl
28c0(2): jnz 0xd(%rip)
28c2(4): lea 0x4(%rax),%rbx
28c6(7): mov %rbx,0x2087b3(%rip)
28cd(7): mov %rbx,0x20886c(%rip)
28d4(7): mov %rbx,0x2087c5(%rip)
28db(1): pop %rbx
28dc(1): ret near (%rsp)
28dd(7): mov 0x2087dc(%rip),%rcx
28e4(7): lea 0x5985(%rip),%rdi
28eb(5): mov $0x37,%edx
28f0(5): mov $0x1,%esi
28f5(5): call 0xffffef4b(%rip)
28fa(5): call 0xffffec96(%rip)

"gettext_quote.part.1" :
2900(1): push %rbp
2901(1): push %rbx
2902(3): mov %rdi,%rbp
2905(2): mov %esi,%ebx
2907(4): sub $0x8,%rsp
290b(5): call 0x2e85(%rip)
2910(3): movzx (%rax),%edx
2913(3): and $0xdf,%edx
2916(3): cmp $0x55,%dl
2919(2): jz 0x77(%rip)
291b(3): cmp $0x47,%dl
291e(2): jz 0x22(%rip)
2920(7): lea 0x599c(%rip),%rax
2927(7): lea 0x5997(%rip),%rdx
292e(3): cmp $0x9,%ebx
2931(4): cmovne %rdx,%rax
2935(4): add $0x8,%rsp
2939(1): pop %rbx
293a(1): pop %rbp
293b(1): ret near (%rsp)
293c(4): nop 0x0(%rax)
2940(4): movzx 0x1(%rax),%edx
2944(3): and $0xdf,%edx
2947(3): cmp $0x42,%dl
294a(2): jnz 0xffffffd6(%rip)
294c(4): cmp $0x31,0x2(%rax)
2950(2): jnz 0xffffffd0(%rip)
2952(4): cmp $0x38,0x3(%rax)
2956(2): jnz 0xffffffca(%rip)
2958(4): cmp $0x30,0x4(%rax)
295c(2): jnz 0xffffffc4(%rip)
295e(4): cmp $0x33,0x5(%rax)
2962(2): jnz 0xffffffbe(%rip)
2964(4): cmp $0x30,0x6(%rax)
2968(2): jnz 0xffffffb8(%rip)
296a(4): cmp $0x0,0x7(%rax)
296e(2): jnz 0xffffffb2(%rip)
2970(4): cmp $0x60,0x0(%rbp)
2974(7): lea 0x5941(%rip),%rax
297b(7): lea 0x593e(%rip),%rdx
2982(4): cmovne %rdx,%rax
2986(4): add $0x8,%rsp
298a(1): pop %rbx
298b(1): pop %rbp
298c(1): ret near (%rsp)
298d(3): nop (%rax)
2990(4): movzx 0x1(%rax),%edx
2994(3): and $0xdf,%edx
2997(3): cmp $0x54,%dl
299a(2): jnz 0xffffff86(%rip)
299c(4): movzx 0x2(%rax),%edx
29a0(3): and $0xdf,%edx
29a3(3): cmp $0x46,%dl
29a6(6): jnz 0xffffff7a(%rip)
29ac(4): cmp $0x2d,0x3(%rax)
29b0(6): jnz 0xffffff70(%rip)
29b6(4): cmp $0x38,0x4(%rax)
29ba(6): jnz 0xffffff66(%rip)
29c0(4): cmp $0x0,0x5(%rax)
29c4(6): jnz 0xffffff5c(%rip)
29ca(4): cmp $0x60,0x0(%rbp)
29ce(7): lea 0x58df(%rip),%rax
29d5(7): lea 0x58dc(%rip),%rdx
29dc(4): cmovne %rdx,%rax
29e0(4): add $0x8,%rsp
29e4(1): pop %rbx
29e5(1): pop %rbp
29e6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
29f0(2): push %r15
29f2(2): push %r14
29f4(3): mov %r8d,%r15d
29f7(2): push %r13
29f9(2): push %r12
29fb(3): mov %rdi,%r14
29fe(1): push %rbp
29ff(1): push %rbx
2a00(3): mov %r9d,%ebx
2a03(3): mov %rsi,%r13
2a06(3): mov %rcx,%rbp
2a09(3): and $0x2,%ebx
2a0c(7): sub $0xb8,%rsp
2a13(8): mov 0xf0(%rsp),%rax
2a1b(5): mov %rdx,0x10(%rsp)
2a20(5): mov %r8d,0x8(%rsp)
2a25(5): mov %r9d,0x78(%rsp)
2a2a(5): mov %rax,0x20(%rsp)
2a2f(8): mov 0xf8(%rsp),%rax
2a37(5): mov %rax,0x68(%rsp)
2a3c(8): mov 0x100(%rsp),%rax
2a44(5): mov %rax,0x60(%rsp)
2a49(9): mov $0x28,%rax
2a52(8): mov %rax,0xa8(%rsp)
2a5a(2): xor %eax,%eax
2a5c(5): call 0xffffebd4(%rip)
2a61(4): cmp $0xa,%r15d
2a65(5): mov %rax,0x58(%rsp)
2a6a(6): jnbe 0x11b5(%rip)
2a70(7): lea 0x58a9(%rip),%rcx
2a77(3): mov %r15d,%edx
2a7a(4): movsxd 0x0(%rcx,%rdx,4),%rax
2a7e(3): add %rcx,%rax
2a81(2): jmp %rax
2a83(5): mov $0x1,0xe(%rsp)
2a88(5): mov $0x0,0x7c(%rsp)
2a8d(3): xor %r12d,%r12d
2a90(9): mov $0x0,0x50(%rsp)
2a99(5): mov $0x1,0xf(%rsp)
2a9e(5): mov $0x0,0xd(%rsp)
2aa3(7): lea 0x581b(%rip),%rax
2aaa(9): mov $0x1,0x18(%rsp)
2ab3(3): xor %r15d,%r15d
2ab6(8): mov $0x2,0x8(%rsp)
2abe(5): mov %rax,0x48(%rsp)
2ac3(3): xor %r11d,%r11d
2ac6(3): mov %rbp,%rax
2ac9(3): mov %r12d,%r8d
2acc(3): mov %r11,%rbp
2acf(3): mov %rax,%r11
2ad2(6): nop 0x0(%rax,%rax,1)
2ad8(3): cmp %rbp,%r11
2adb(4): setnz %r12b
2adf(4): cmp $0xffffffff,%r11
2ae3(2): jnz 0xf(%rip)
2ae5(5): mov 0x10(%rsp),%rax
2aea(4): cmp $0x0,0x0(%rax,%rbp,1)
2aee(4): setnz %r12b
2af2(3): test %r12b,%r12b
2af5(6): jz 0x65b(%rip)
2afb(5): cmp $0x2,0x8(%rsp)
2b00(5): mov 0x10(%rsp),%rdi
2b05(4): lea 0x0(%rdi,%rbp,1),%r9
2b09(3): setnz %al
2b0c(4): and 0xd(%rsp),%al
2b10(3): mov %eax,%r10d
2b13(6): jz 0xad(%rip)
2b19(5): mov 0x18(%rsp),%rax
2b1e(3): test %rax,%rax
2b21(6): jz 0x42f(%rip)
2b27(4): cmp $0xffffffff,%r11
2b2b(5): lea 0x0(%rbp,%rax,1),%rbx
2b30(2): jnz 0x30(%rip)
2b32(4): cmp $0x1,%rax
2b36(2): jbe 0x2a(%rip)
2b38(5): mov %r8b,0x38(%rsp)
2b3d(5): mov %r10b,0x30(%rsp)
2b42(5): mov %r9,0x28(%rsp)
2b47(5): call 0xffffeaf9(%rip)
2b4c(6): movzx 0x38(%rsp),%r8d
2b52(6): movzx 0x30(%rsp),%r10d
2b58(3): mov %rax,%r11
2b5b(5): mov 0x28(%rsp),%r9
2b60(3): cmp %r11,%rbx
2b63(5): mov %r10b,0x28(%rsp)
2b68(6): jnbe 0x5b8(%rip)
2b6e(5): mov 0x18(%rsp),%rdx
2b73(5): mov 0x48(%rsp),%rsi
2b78(3): mov %r9,%rdi
2b7b(5): mov %r11,0x40(%rsp)
2b80(5): mov %r8b,0x38(%rsp)
2b85(5): mov %r9,0x30(%rsp)
2b8a(5): call 0xffffeb56(%rip)
2b8f(2): test %eax,%eax
2b91(5): mov 0x30(%rsp),%r9
2b96(6): movzx 0x38(%rsp),%r8d
2b9c(5): mov 0x40(%rsp),%r11
2ba1(6): jnz 0x57f(%rip)
2ba7(5): cmp $0x0,0xf(%rsp)
2bac(6): movzx 0x28(%rsp),%r10d
2bb2(6): jnz 0xf83(%rip)
2bb8(8): nop 0x0(%rax,%rax,1)
2bc0(4): movzx (%r9),%ebx
2bc4(3): cmp $0x7e,%bl
2bc7(6): jnbe 0x321(%rip)
2bcd(7): lea 0x5778(%rip),%rcx
2bd4(3): movzx %bl,%edx
2bd7(4): movsxd 0x0(%rcx,%rdx,4),%rax
2bdb(3): add %rcx,%rax
2bde(2): jmp %rax
2be0(3): xor %r10d,%r10d
2be3(4): cmp $0x1,%r11
2be7(3): setnz %al
2bea(4): cmp $0xffffffff,%r11
2bee(2): jnz 0xe(%rip)
2bf0(5): mov 0x10(%rsp),%rax
2bf5(4): cmp $0x0,0x1(%rax)
2bf9(3): setnz %al
2bfc(5): cmp $0x2,0x8(%rsp)
2c01(3): setz %dl
2c04(2): test %al,%al
2c06(6): jz 0x252(%rip)
2c0c(3): xor %r12d,%r12d
2c0f(2): xor %eax,%eax
2c11(7): nop 0x0(%rax)
2c18(5): cmp $0x1,0xd(%rsp)
2c1d(6): jnz 0x115(%rip)
2c23(2): test %dl,%dl
2c25(6): jnz 0x10d(%rip)
2c2b(5): mov 0x20(%rsp),%rsi
2c30(3): test %rsi,%rsi
2c33(2): jz 0x16(%rip)
2c35(2): mov %ebx,%edx
2c37(3): shr $0x5,%dl
2c3a(3): movzx %dl,%edx
2c3d(3): mov 0x0(%rsi,%rdx,4),%edx
2c40(3): bt %ebx,%edx
2c43(6): jb 0x150(%rip)
2c49(3): test %r10b,%r10b
2c4c(6): jnz 0x147(%rip)
2c52(3): xor $0x1,%eax
2c55(4): add $0x1,%rbp
2c59(3): and %r8d,%eax
2c5c(2): test %al,%al
2c5e(2): jz 0x22(%rip)
2c60(3): cmp %r15,%r13
2c63(2): jbe 0x7(%rip)
2c65(5): mov $0x27,0x0(%r14,%r15,1)
2c6a(4): lea 0x1(%r15),%rax
2c6e(3): cmp %rax,%r13
2c71(2): jbe 0x8(%rip)
2c73(6): mov $0x27,0x1(%r14,%r15,1)
2c79(4): add $0x2,%r15
2c7d(3): xor %r8d,%r8d
2c80(3): cmp %r13,%r15
2c83(2): jnb 0x6(%rip)
2c85(4): mov %bl,0x0(%r14,%r15,1)
2c89(5): movzx 0xe(%rsp),%edi
2c8e(4): add $0x1,%r15
2c92(5): mov $0x0,%eax
2c97(3): test %r12b,%r12b
2c9a(3): cmove %eax,%edi
2c9d(5): mov %dil,0xe(%rsp)
2ca2(5): jmp 0xfffffe36(%rip)
2ca7(9): nop 0x0(%rax,%rax,1)
2cb0(3): xor %r10d,%r10d
2cb3(4): mov 0x8(%rsp),%eax
2cb7(3): cmp $0x2,%eax
2cba(6): jz 0x5be(%rip)
2cc0(3): cmp $0x5,%eax
2cc3(6): jz 0x575(%rip)
2cc9(3): cmp $0x2,%eax
2ccc(5): mov $0x3f,%ebx
2cd1(3): setz %dl
2cd4(3): xor %r12d,%r12d
2cd7(2): xor %eax,%eax
2cd9(5): jmp 0xffffff3f(%rip)
2cde(2): nop 
2ce0(3): xor %r10d,%r10d
2ce3(5): cmp $0x2,0x8(%rsp)
2ce8(6): jz 0x508(%rip)
2cee(5): mov %r12b,0x7c(%rsp)
2cf3(2): xor %edx,%edx
2cf5(2): xor %eax,%eax
2cf7(5): mov $0x27,%ebx
2cfc(5): jmp 0xffffff1c(%rip)
2d01(7): nop 0x0(%rax)
2d08(5): mov $0x9,%edx
2d0d(5): mov $0x74,%ebx
2d12(5): cmp $0x2,0x8(%rsp)
2d17(3): setz %al
2d1a(4): and 0xf(%rsp),%al
2d1e(6): jnz 0x150(%rip)
2d24(5): cmp $0x0,0xd(%rsp)
2d29(2): jnz 0x67(%rip)
2d2b(2): mov %edx,%ebx
2d2d(3): xor %r12d,%r12d
2d30(2): xor %eax,%eax
2d32(5): cmp $0x0,0xf(%rsp)
2d37(6): jnz 0xfffffef4(%rip)
2d3d(5): jmp 0xffffff0c(%rip)
2d42(6): nop 0x0(%rax,%rax,1)
2d48(5): mov $0x8,%edx
2d4d(5): mov $0x62,%ebx
2d52(2): jmp 0xffffffd2(%rip)
2d54(4): nop 0x0(%rax)
2d58(5): cmp $0x2,0x8(%rsp)
2d5d(6): jz 0x3d3(%rip)
2d63(5): cmp $0x0,0xd(%rsp)
2d68(6): jz 0x218(%rip)
2d6e(5): cmp $0x0,0xf(%rsp)
2d73(6): jz 0x20d(%rip)
2d79(6): cmp $0x0,0x18(%rsp)
2d7f(6): jnz 0x3bc(%rip)
2d85(5): mov $0x5c,%ebx
2d8a(6): nop 0x0(%rax,%rax,1)
2d90(3): xor %r12d,%r12d
2d93(5): cmp $0x2,0x8(%rsp)
2d98(3): setz %dl
2d9b(5): cmp $0x0,0xf(%rsp)
2da0(2): mov %edx,%eax
2da2(6): jnz 0x856(%rip)
2da8(3): mov %r8d,%eax
2dab(3): xor $0x1,%eax
2dae(2): and %dl,%al
2db0(2): jz 0x31(%rip)
2db2(3): cmp %r15,%r13
2db5(2): jbe 0x7(%rip)
2db7(5): mov $0x27,0x0(%r14,%r15,1)
2dbc(4): lea 0x1(%r15),%rdx
2dc0(3): cmp %rdx,%r13
2dc3(2): jbe 0x8(%rip)
2dc5(6): mov $0x24,0x1(%r14,%r15,1)
2dcb(4): lea 0x2(%r15),%rdx
2dcf(3): cmp %rdx,%r13
2dd2(2): jbe 0x8(%rip)
2dd4(6): mov $0x27,0x2(%r14,%r15,1)
2dda(4): add $0x3,%r15
2dde(3): mov %eax,%r8d
2de1(3): cmp %r15,%r13
2de4(2): jbe 0x7(%rip)
2de6(5): mov $0x5c,0x0(%r14,%r15,1)
2deb(4): add $0x1,%r15
2def(4): add $0x1,%rbp
2df3(5): jmp 0xfffffe8d(%rip)
2df8(8): nop 0x0(%rax,%rax,1)
2e00(5): cmp $0x0,0xd(%rsp)
2e05(6): jnz 0x1ce(%rip)
2e0b(2): xor %edx,%edx
2e0d(5): test $0x1,0x78(%rsp)
2e12(6): jz 0xffffff19(%rip)
2e18(4): add $0x1,%rbp
2e1c(5): jmp 0xfffffcbc(%rip)
2e21(7): nop 0x0(%rax)
2e28(5): cmp $0x2,0x8(%rsp)
2e2d(3): setz %dl
2e30(2): xor %eax,%eax
2e32(5): jmp 0xfffffde6(%rip)
2e37(9): nop 0x0(%rax,%rax,1)
2e40(5): mov $0x7,%edx
2e45(5): mov $0x61,%ebx
2e4a(5): jmp 0xfffffeda(%rip)
2e4f(1): nop 
2e50(5): cmp $0x2,0x8(%rsp)
2e55(3): setz %dl
2e58(3): test %rbp,%rbp
2e5b(6): jnz 0xfffffdb1(%rip)
2e61(5): movzx 0xf(%rsp),%eax
2e66(2): and %dl,%al
2e68(6): jz 0xfffffdb0(%rip)
2e6e(3): mov %r11,%rbp
2e71(8): mov $0x2,0x8(%rsp)
2e79(5): jmp 0x700(%rip)
2e7e(2): nop 
2e80(5): cmp $0x2,0x8(%rsp)
2e85(3): setz %dl
2e88(3): xor %r12d,%r12d
2e8b(2): jmp 0xffffffd6(%rip)
2e8d(3): nop (%rax)
2e90(5): cmp $0x2,0x8(%rsp)
2e95(5): mov $0x20,%ebx
2e9a(3): setz %dl
2e9d(2): jmp 0xffffffc4(%rip)
2e9f(1): nop 
2ea0(5): mov $0xd,%edx
2ea5(5): mov $0x72,%ebx
2eaa(5): jmp 0xfffffe68(%rip)
2eaf(1): nop 
2eb0(5): mov $0xc,%edx
2eb5(5): mov $0x66,%ebx
2eba(5): jmp 0xfffffe6a(%rip)
2ebf(1): nop 
2ec0(5): mov $0xb,%edx
2ec5(5): mov $0x76,%ebx
2eca(5): jmp 0xfffffe5a(%rip)
2ecf(1): nop 
2ed0(5): mov $0xa,%edx
2ed5(5): mov $0x6e,%ebx
2eda(5): jmp 0xfffffe38(%rip)
2edf(1): nop 
2ee0(3): xor %r10d,%r10d
2ee3(5): nop 0x0(%rax,%rax,1)
2ee8(6): cmp $0x1,0x58(%rsp)
2eee(6): jnz 0x3aa(%rip)
2ef4(5): mov %r11,0x38(%rsp)
2ef9(5): mov %r8b,0x30(%rsp)
2efe(5): mov %r10b,0x28(%rsp)
2f03(5): call 0xffffe97d(%rip)
2f08(3): mov (%rax),%rcx
2f0b(3): movzx %bl,%edx
2f0e(6): movzx 0x28(%rsp),%r10d
2f14(6): movzx 0x30(%rsp),%r8d
2f1a(5): mov 0x38(%rsp),%r11
2f1f(5): mov $0x1,%edi
2f24(4): movzx 0x0(%rcx,%rdx,2),%eax
2f28(4): and $0x4000,%ax
2f2c(4): setnz %r12b
2f30(3): setz %al
2f33(4): and 0xd(%rsp),%al
2f37(2): test %al,%al
2f39(6): jnz 0x998(%rip)
2f3f(5): cmp $0x2,0x8(%rsp)
2f44(3): setz %dl
2f47(5): jmp 0xfffffcd1(%rip)
2f4c(4): nop 0x0(%rax)
2f50(4): movzx (%r9),%ebx
2f54(3): cmp $0x7e,%bl
2f57(2): jnbe 0xffffff89(%rip)
2f59(7): lea 0x55e8(%rip),%rcx
2f60(3): movzx %bl,%edx
2f63(4): movsxd 0x0(%rcx,%rdx,4),%rax
2f67(3): add %rcx,%rax
2f6a(2): jmp %rax
2f6c(4): nop 0x0(%rax)
2f70(3): xor %r10d,%r10d
2f73(5): cmp $0x0,0xd(%rsp)
2f78(6): jnz 0xfffffdf6(%rip)
2f7e(2): nop 
2f80(5): mov $0x5c,%edx
2f85(5): mov $0x5c,%ebx
2f8a(5): jmp 0xfffffd9a(%rip)
2f8f(1): nop 
2f90(5): mov $0xc,%edx
2f95(3): xor %r10d,%r10d
2f98(5): mov $0x66,%ebx
2f9d(5): jmp 0xfffffd87(%rip)
2fa2(6): nop 0x0(%rax,%rax,1)
2fa8(5): mov $0xa,%edx
2fad(3): xor %r10d,%r10d
2fb0(5): mov $0x6e,%ebx
2fb5(5): jmp 0xfffffd5d(%rip)
2fba(6): nop 0x0(%rax,%rax,1)
2fc0(5): mov $0x61,%ebx
2fc5(5): jmp 0xfffffdcb(%rip)
2fca(6): nop 0x0(%rax,%rax,1)
2fd0(3): xor %r10d,%r10d
2fd3(5): cmp $0x2,0x8(%rsp)
2fd8(3): setz %dl
2fdb(5): cmp $0x0,0xf(%rsp)
2fe0(6): jnz 0xb9a(%rip)
2fe6(3): mov %r8d,%eax
2fe9(3): mov %r15,%rcx
2fec(3): xor $0x1,%eax
2fef(2): and %dl,%al
2ff1(2): jz 0x2f(%rip)
2ff3(3): cmp %r15,%r13
2ff6(2): jbe 0x7(%rip)
2ff8(5): mov $0x27,0x0(%r14,%r15,1)
2ffd(4): lea 0x1(%r15),%rcx
3001(3): cmp %rcx,%r13
3004(2): jbe 0x8(%rip)
3006(6): mov $0x24,0x1(%r14,%r15,1)
300c(4): lea 0x2(%r15),%rcx
3010(3): cmp %rcx,%r13
3013(6): jnbe 0x636(%rip)
3019(4): lea 0x3(%r15),%rcx
301d(3): mov %eax,%r8d
3020(3): cmp %rcx,%r13
3023(2): jbe 0x7(%rip)
3025(5): mov $0x5c,0x0(%r14,%rcx,1)
302a(5): cmp $0x2,0x8(%rsp)
302f(4): lea 0x1(%rcx),%r15
3033(6): jz 0x606(%rip)
3039(4): lea 0x1(%rbp),%rax
303d(3): cmp %r11,%rax
3040(2): jnb 0x1b(%rip)
3042(5): mov 0x10(%rsp),%rax
3047(5): movzx 0x1(%rax,%rbp,1),%eax
304c(4): mov %al,0x28(%rsp)
3050(3): sub $0x30,%eax
3053(2): cmp $0x9,%al
3055(6): jbe 0x834(%rip)
305b(3): mov %r12d,%eax
305e(5): mov $0x30,%ebx
3063(3): xor %r12d,%r12d
3066(5): jmp 0xfffffbb2(%rip)
306b(5): nop 0x0(%rax,%rax,1)
3070(5): cmp $0x2,0x8(%rsp)
3075(3): mov %r10d,%r12d
3078(3): setz %dl
307b(3): xor %r10d,%r10d
307e(2): xor %eax,%eax
3080(5): jmp 0xfffffb98(%rip)
3085(3): nop (%rax)
3088(5): cmp $0x2,0x8(%rsp)
308d(3): setz %dl
3090(3): xor %r10d,%r10d
3093(5): jmp 0xfffffdc5(%rip)
3098(8): nop 0x0(%rax,%rax,1)
30a0(5): cmp $0x2,0x8(%rsp)
30a5(3): setz %dl
30a8(3): xor %r10d,%r10d
30ab(3): xor %r12d,%r12d
30ae(5): jmp 0xfffffdb3(%rip)
30b3(5): nop 0x0(%rax,%rax,1)
30b8(5): cmp $0x2,0x8(%rsp)
30bd(3): mov %r10d,%r12d
30c0(5): mov $0x20,%ebx
30c5(3): setz %dl
30c8(3): xor %r10d,%r10d
30cb(5): jmp 0xfffffd96(%rip)
30d0(5): mov $0xd,%edx
30d5(3): xor %r10d,%r10d
30d8(5): mov $0x72,%ebx
30dd(5): jmp 0xfffffc35(%rip)
30e2(6): nop 0x0(%rax,%rax,1)
30e8(5): mov $0x76,%ebx
30ed(5): jmp 0xfffffca3(%rip)
30f2(6): nop 0x0(%rax,%rax,1)
30f8(5): mov $0x9,%edx
30fd(3): xor %r10d,%r10d
3100(5): mov $0x74,%ebx
3105(5): jmp 0xfffffc0d(%rip)
310a(6): nop 0x0(%rax,%rax,1)
3110(5): mov $0x62,%ebx
3115(5): jmp 0xfffffc7b(%rip)
311a(6): nop 0x0(%rax,%rax,1)
3120(3): xor %r10d,%r10d
3123(5): jmp 0xfffffa9d(%rip)
3128(8): nop 0x0(%rax,%rax,1)
3130(5): cmp $0x0,0xf(%rsp)
3135(6): jnz 0x96b(%rip)
313b(4): add $0x1,%rbp
313f(3): mov %r8d,%eax
3142(3): xor %r12d,%r12d
3145(5): mov $0x5c,%ebx
314a(5): jmp 0xfffffb12(%rip)
314f(1): nop 
3150(5): cmp $0x2,0x8(%rsp)
3155(5): movzx 0xf(%rsp),%ebx
315a(3): mov %r8d,%r12d
315d(3): mov %r11,%rbp
3160(3): setz %dl
3163(2): mov %ebx,%eax
3165(3): test %r15,%r15
3168(3): setz %cl
316b(2): and %edx,%eax
316d(2): and %cl,%al
316f(6): jnz 0xa67(%rip)
3175(2): mov %ebx,%eax
3177(3): xor $0x1,%eax
317a(2): and %al,%dl
317c(6): jz 0x970(%rip)
3182(5): cmp $0x0,0x7c(%rsp)
3187(6): jz 0x963(%rip)
318d(5): cmp $0x0,0xe(%rsp)
3192(6): jnz 0x9fb(%rip)
3198(3): test %r13,%r13
319b(3): setz %al
319e(6): cmp $0x0,0x50(%rsp)
31a4(3): setnz %dl
31a7(2): and %dl,%al
31a9(6): jz 0xa23(%rip)
31af(5): mov 0x50(%rsp),%r13
31b4(7): lea 0x510a(%rip),%rbx
31bb(4): mov $0x27,(%r14)
31bf(8): mov $0x2,0x8(%rsp)
31c7(6): mov $0x1,%r15d
31cd(9): mov $0x1,0x18(%rsp)
31d6(5): mov $0x0,0xf(%rsp)
31db(5): mov %rbx,0x48(%rsp)
31e0(4): mov %al,0x7c(%rsp)
31e4(5): jmp 0xfffff8df(%rip)
31e9(7): nop 0x0(%rax)
31f0(5): cmp $0x0,0xf(%rsp)
31f5(6): jnz 0x8ab(%rip)
31fb(3): test %r13,%r13
31fe(6): jz 0x402(%rip)
3204(2): xor %edx,%edx
3206(6): cmp $0x0,0x50(%rsp)
320c(6): jnz 0x3f4(%rip)
3212(5): mov %r13,0x50(%rsp)
3217(4): add $0x3,%r15
321b(2): xor %eax,%eax
321d(5): mov %r12b,0x7c(%rsp)
3222(3): xor %r8d,%r8d
3225(3): mov %rdx,%r13
3228(5): mov $0x27,%ebx
322d(5): jmp 0xfffffa1c(%rip)
3232(6): nop 0x0(%rax,%rax,1)
3238(5): test $0x4,0x78(%rsp)
323d(2): jz 0x23(%rip)
323f(4): lea 0x2(%rbp),%rcx
3243(3): cmp %r11,%rcx
3246(2): jnb 0x1a(%rip)
3248(5): mov 0x10(%rsp),%rax
324d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3252(6): jz 0x790(%rip)
3258(8): nop 0x0(%rax,%rax,1)
3260(2): xor %edx,%edx
3262(3): xor %r12d,%r12d
3265(2): xor %eax,%eax
3267(5): mov $0x3f,%ebx
326c(5): jmp 0xfffff9ac(%rip)
3271(7): nop 0x0(%rax)
3278(5): cmp $0x0,0xf(%rsp)
327d(6): jnz 0x823(%rip)
3283(3): xor %r12d,%r12d
3286(2): xor %eax,%eax
3288(5): mov $0x3f,%ebx
328d(5): jmp 0xfffff9bc(%rip)
3292(6): nop 0x0(%rax,%rax,1)
3298(8): lea 0xa0(%rsp),%rax
32a0(4): cmp $0xffffffff,%r11
32a4(c): mov $0x0,0xa0(%rsp)
32b0(5): mov %rax,0x28(%rsp)
32b5(2): jnz 0x2f(%rip)
32b7(5): mov 0x10(%rsp),%rdi
32bc(5): mov %r8b,0x40(%rsp)
32c1(5): mov %r10b,0x38(%rsp)
32c6(5): mov %r9,0x30(%rsp)
32cb(5): call 0xffffe375(%rip)
32d0(6): movzx 0x40(%rsp),%r8d
32d6(6): movzx 0x38(%rsp),%r10d
32dc(3): mov %rax,%r11
32df(5): mov 0x30(%rsp),%r9
32e4(8): lea 0x9c(%rsp),%rax
32ec(2): xor %ecx,%ecx
32ee(4): mov %bl,0x7e(%rsp)
32f2(5): mov %r8b,0x7d(%rsp)
32f7(3): mov %rcx,%rbx
32fa(8): mov %r9,0x88(%rsp)
3302(5): mov %rax,0x38(%rsp)
3307(5): mov %r10b,0x7f(%rsp)
330c(8): mov %r15,0x80(%rsp)
3314(5): mov %r14,0x40(%rsp)
3319(5): mov %r13,0x70(%rsp)
331e(5): mov %r11,0x30(%rsp)
3323(5): mov 0x10(%rsp),%rax
3328(5): lea 0x0(%rbp,%rbx,1),%r14
332d(5): mov 0x30(%rsp),%rdx
3332(5): mov 0x28(%rsp),%rcx
3337(5): mov 0x38(%rsp),%rdi
333c(4): lea 0x0(%rax,%r14,1),%r13
3340(3): sub %r14,%rdx
3343(3): mov %r13,%rsi
3346(5): call 0x200a(%rip)
334b(3): test %rax,%rax
334e(3): mov %rax,%r15
3351(2): jz 0x50(%rip)
3353(4): cmp $0xffffffff,%rax
3357(6): jz 0x61e(%rip)
335d(4): cmp $0xfffffffe,%rax
3361(6): jz 0x5a0(%rip)
3367(5): cmp $0x2,0x8(%rsp)
336c(3): setz %al
336f(4): and 0xf(%rsp),%al
3373(6): jnz 0x19d(%rip)
3379(7): mov 0x9c(%rsp),%edi
3380(5): call 0xffffe4f0(%rip)
3385(5): mov 0x28(%rsp),%rdi
338a(2): test %eax,%eax
338c(5): mov $0x0,%eax
3391(4): cmove %eax,%r12d
3395(3): add %r15,%rbx
3398(5): call 0xffffe4c8(%rip)
339d(2): test %eax,%eax
339f(2): jz 0xffffff84(%rip)
33a1(3): mov %r12d,%edx
33a4(3): mov %rbx,%rdi
33a7(6): movzx 0x7d(%rsp),%r8d
33ad(3): xor $0x1,%edx
33b0(5): movzx 0x7e(%rsp),%ebx
33b5(6): movzx 0x7f(%rsp),%r10d
33bb(4): and 0xd(%rsp),%dl
33bf(8): mov 0x80(%rsp),%r15
33c7(5): mov 0x40(%rsp),%r14
33cc(5): mov 0x70(%rsp),%r13
33d1(5): mov 0x30(%rsp),%r11
33d6(4): cmp $0x1,%rdi
33da(6): jbe 0x601(%rip)
33e0(3): mov %rdi,%rcx
33e3(2): xor %esi,%esi
33e5(6): movzx 0xf(%rsp),%r9d
33eb(3): add %rbp,%rcx
33ee(5): mov 0x10(%rsp),%rdi
33f3(5): jmp 0xbb(%rip)
33f8(8): nop 0x0(%rax,%rax,1)
3400(5): cmp $0x2,0x8(%rsp)
3405(3): setz %al
3408(3): test %r9b,%r9b
340b(6): jnz 0x4b5(%rip)
3411(3): mov %r8d,%esi
3414(3): xor $0x1,%esi
3417(3): and %sil,%al
341a(2): jz 0x31(%rip)
341c(3): cmp %r15,%r13
341f(2): jbe 0x7(%rip)
3421(5): mov $0x27,0x0(%r14,%r15,1)
3426(4): lea 0x1(%r15),%rsi
342a(3): cmp %rsi,%r13
342d(2): jbe 0x8(%rip)
342f(6): mov $0x24,0x1(%r14,%r15,1)
3435(4): lea 0x2(%r15),%rsi
3439(3): cmp %rsi,%r13
343c(2): jbe 0x8(%rip)
343e(6): mov $0x27,0x2(%r14,%r15,1)
3444(4): add $0x3,%r15
3448(3): mov %eax,%r8d
344b(3): cmp %r15,%r13
344e(2): jbe 0x7(%rip)
3450(5): mov $0x5c,0x0(%r14,%r15,1)
3455(4): lea 0x1(%r15),%rax
3459(3): cmp %rax,%r13
345c(2): jbe 0xf(%rip)
345e(2): mov %ebx,%eax
3460(3): shr $0x6,%al
3463(3): add $0x30,%eax
3466(5): mov %al,0x1(%r14,%r15,1)
346b(4): lea 0x2(%r15),%rax
346f(3): cmp %rax,%r13
3472(2): jbe 0x12(%rip)
3474(2): mov %ebx,%eax
3476(3): shr $0x3,%al
3479(3): and $0x7,%eax
347c(3): add $0x30,%eax
347f(5): mov %al,0x2(%r14,%r15,1)
3484(3): and $0x7,%ebx
3487(4): add $0x1,%rbp
348b(4): add $0x3,%r15
348f(3): add $0x30,%ebx
3492(3): cmp %rcx,%rbp
3495(6): jnb 0xfffff7eb(%rip)
349b(2): mov %edx,%esi
349d(3): cmp %r15,%r13
34a0(2): jbe 0x6(%rip)
34a2(4): mov %bl,0x0(%r14,%r15,1)
34a6(4): movzx 0x0(%rdi,%rbp,1),%ebx
34aa(4): add $0x1,%r15
34ae(2): test %dl,%dl
34b0(6): jnz 0xffffff50(%rip)
34b6(2): mov %esi,%eax
34b8(3): xor $0x1,%eax
34bb(3): and %r8d,%eax
34be(3): test %r10b,%r10b
34c1(2): jz 0x10(%rip)
34c3(3): cmp %r15,%r13
34c6(2): jbe 0x7(%rip)
34c8(5): mov $0x5c,0x0(%r14,%r15,1)
34cd(4): add $0x1,%r15
34d1(4): add $0x1,%rbp
34d5(3): cmp %rcx,%rbp
34d8(6): jnb 0xfffff784(%rip)
34de(2): test %al,%al
34e0(6): jz 0x3fe(%rip)
34e6(3): cmp %r15,%r13
34e9(2): jbe 0x7(%rip)
34eb(5): mov $0x27,0x0(%r14,%r15,1)
34f0(4): lea 0x1(%r15),%rax
34f4(3): cmp %rax,%r13
34f7(2): jbe 0x8(%rip)
34f9(6): mov $0x27,0x1(%r14,%r15,1)
34ff(4): add $0x2,%r15
3503(3): xor %r10d,%r10d
3506(3): xor %r8d,%r8d
3509(2): jmp 0xffffff94(%rip)
350b(5): nop 0x0(%rax,%rax,1)
3510(4): cmp $0x1,%r15
3514(6): jz 0xfffffe65(%rip)
351a(5): mov 0x10(%rsp),%rdi
351f(4): lea 0x0(%rdi,%r15,1),%rcx
3523(5): lea 0x1(%rdi,%r14,1),%rdx
3528(4): lea 0x0(%rcx,%r14,1),%r8
352c(2): jmp 0x11(%rip)
352e(2): nop 
3530(4): add $0x1,%rdx
3534(3): cmp %rdx,%r8
3537(6): jz 0xfffffe42(%rip)
353d(3): movzx (%rdx),%ecx
3540(3): sub $0x5b,%ecx
3543(3): cmp $0x21,%cl
3546(2): jnbe 0xffffffea(%rip)
3548(5): mov $0x1,%esi
354d(3): shl/sal %cl,%rsi
3550(3): mov %rsi,%rcx
3553(a): mov $0x8589934635,%rsi
355d(3): test %rsi,%rcx
3560(2): jz 0xffffffd0(%rip)
3562(5): mov 0x40(%rsp),%r14
3567(5): mov 0x70(%rsp),%r13
356c(5): mov 0x30(%rsp),%rbp
3571(8): mov $0x2,0x8(%rsp)
3579(5): cmp $0x0,0xd(%rsp)
357e(2): jz 0x12(%rip)
3580(2): test %al,%al
3582(5): mov $0x4,%eax
3587(5): cmove 0x8(%rsp),%eax
358c(4): mov %eax,0x8(%rsp)
3590(4): sub $0x8,%rsp
3594(3): mov %rbp,%rcx
3597(3): mov %r13,%rsi
359a(4): push 0x68(%rsp)
359e(4): push 0x78(%rsp)
35a2(3): mov %r14,%rdi
35a5(2): push $0x0
35a7(8): mov 0x98(%rsp),%r9d
35af(5): mov 0x28(%rsp),%r8d
35b4(5): mov 0x30(%rsp),%rdx
35b9(4): and $0xfd,%r9d
35bd(5): call 0xfffff433(%rip)
35c2(4): add $0x20,%rsp
35c6(3): mov %rax,%r15
35c9(8): mov 0xa8(%rsp),%rbx
35d1(9): xor $0x28,%rbx
35da(3): mov %r15,%rax
35dd(6): jnz 0x606(%rip)
35e3(7): add $0xb8,%rsp
35ea(1): pop %rbx
35eb(1): pop %rbp
35ec(2): pop %r12
35ee(2): pop %r13
35f0(2): pop %r14
35f2(2): pop %r15
35f4(1): ret near (%rsp)
35f5(3): nop (%rax)
35f8(3): mov %r11,%rbp
35fb(5): jmp 0xffffff7e(%rip)
3600(3): cmp %r15,%r13
3603(2): jbe 0x7(%rip)
3605(5): mov $0x27,0x0(%r14,%r15,1)
360a(4): lea 0x1(%r15),%rax
360e(3): cmp %rax,%r13
3611(2): jbe 0x8(%rip)
3613(6): mov $0x5c,0x1(%r14,%r15,1)
3619(4): lea 0x2(%r15),%rax
361d(3): cmp %rax,%r13
3620(6): jbe 0x5f2(%rip)
3626(3): mov %r13,%rdx
3629(6): mov $0x27,0x2(%r14,%r15,1)
362f(5): mov 0x50(%rsp),%r13
3634(5): jmp 0xfffffbde(%rip)
3639(3): mov %r12d,%eax
363c(5): mov $0x30,%ebx
3641(3): xor %r12d,%r12d
3644(5): jmp 0xfffff605(%rip)
3649(6): mov $0x27,0x2(%r14,%r15,1)
364f(5): jmp 0xfffff9ca(%rip)
3654(2): test %ebx,%ebx
3656(6): jnz 0xfffff42d(%rip)
365c(5): mov $0x1,0xd(%rsp)
3661(3): test %r13,%r13
3664(6): jnz 0x596(%rip)
366a(7): lea 0x4c54(%rip),%rax
3671(9): mov $0x0,0x50(%rsp)
367a(5): mov $0x1,0xe(%rsp)
367f(5): mov $0x0,0x7c(%rsp)
3684(3): xor %r12d,%r12d
3687(5): mov $0x0,0xf(%rsp)
368c(9): mov $0x1,0x18(%rsp)
3695(5): mov %rax,0x48(%rsp)
369a(6): mov $0x1,%r15d
36a0(8): mov $0x2,0x8(%rsp)
36a8(5): jmp 0xfffff41b(%rip)
36ad(3): nop (%rax)
36b0(2): test %ebx,%ebx
36b2(6): jnz 0x3fb(%rip)
36b8(3): test %r13,%r13
36bb(6): jz 0x22b(%rip)
36c1(4): mov $0x22,(%r14)
36c5(5): mov $0x1,0xe(%rsp)
36ca(3): xor %r12d,%r12d
36cd(5): mov $0x0,0x7c(%rsp)
36d2(9): mov $0x0,0x50(%rsp)
36db(7): lea 0x4be1(%rip),%rax
36e2(5): mov $0x0,0xf(%rsp)
36e7(5): mov $0x1,0xd(%rsp)
36ec(9): mov $0x1,0x18(%rsp)
36f5(6): mov $0x1,%r15d
36fb(5): mov %rax,0x48(%rsp)
3700(5): jmp 0xfffff3c3(%rip)
3705(7): lea 0x4bb7(%rip),%rax
370c(5): mov $0x1,0xe(%rsp)
3711(5): mov $0x0,0x7c(%rsp)
3716(3): xor %r12d,%r12d
3719(9): mov $0x0,0x50(%rsp)
3722(5): mov $0x1,0xf(%rsp)
3727(5): mov $0x1,0xd(%rsp)
372c(9): mov $0x1,0x18(%rsp)
3735(3): xor %r15d,%r15d
3738(5): mov %rax,0x48(%rsp)
373d(8): mov $0x5,0x8(%rsp)
3745(5): jmp 0xfffff37e(%rip)
374a(5): mov $0x1,0xe(%rsp)
374f(5): mov $0x0,0x7c(%rsp)
3754(3): xor %r12d,%r12d
3757(9): mov $0x0,0x50(%rsp)
3760(5): mov $0x0,0xf(%rsp)
3765(3): xor %r15d,%r15d
3768(5): mov $0x1,0xd(%rsp)
376d(9): mov $0x0,0x18(%rsp)
3776(9): mov $0x0,0x48(%rsp)
377f(5): jmp 0xfffff344(%rip)
3784(5): cmp $0xa,0x8(%rsp)
3789(2): jz 0x58(%rip)
378b(7): lea 0x4b35(%rip),%rsi
3792(2): xor %edi,%edi
3794(5): mov $0x5,%edx
3799(5): call 0xffffde87(%rip)
379e(3): mov %rax,%rcx
37a1(5): mov %rax,0x68(%rsp)
37a6(7): lea 0x4b1a(%rip),%rax
37ad(3): cmp %rax,%rcx
37b0(6): jz 0x39e(%rip)
37b6(7): lea 0x4b08(%rip),%rsi
37bd(2): xor %edi,%edi
37bf(5): mov $0x5,%edx
37c4(5): call 0xffffde5c(%rip)
37c9(3): mov %rax,%rcx
37cc(5): mov %rax,0x60(%rsp)
37d1(7): lea 0x4aed(%rip),%rax
37d8(3): cmp %rax,%rcx
37db(6): jz 0x389(%rip)
37e1(3): xor %r15d,%r15d
37e4(2): test %ebx,%ebx
37e6(6): jz 0x1c7(%rip)
37ec(2): test %ebx,%ebx
37ee(5): mov 0x60(%rsp),%rbx
37f3(5): setnz 0xf(%rsp)
37f8(3): xor %r12d,%r12d
37fb(3): mov %rbx,%rdi
37fe(5): call 0xffffde42(%rip)
3803(5): mov %rbx,0x48(%rsp)
3808(5): mov %rax,0x18(%rsp)
380d(5): mov $0x1,0xe(%rsp)
3812(5): mov $0x0,0x7c(%rsp)
3817(9): mov $0x0,0x50(%rsp)
3820(5): mov $0x1,0xd(%rsp)
3825(5): jmp 0xfffff29e(%rip)
382a(5): mov $0x1,0xe(%rsp)
382f(5): mov $0x0,0x7c(%rsp)
3834(3): xor %r12d,%r12d
3837(9): mov $0x0,0x50(%rsp)
3840(5): mov $0x0,0xf(%rsp)
3845(3): xor %r15d,%r15d
3848(5): mov $0x0,0xd(%rsp)
384d(9): mov $0x0,0x18(%rsp)
3856(9): mov $0x0,0x48(%rsp)
385f(5): jmp 0xfffff264(%rip)
3864(5): mov $0x1,0xe(%rsp)
3869(5): mov $0x0,0x7c(%rsp)
386e(3): xor %r12d,%r12d
3871(9): mov $0x0,0x50(%rsp)
387a(5): mov $0x1,0xf(%rsp)
387f(5): mov $0x1,0xd(%rsp)
3884(5): jmp 0xfffff21f(%rip)
3889(3): cmp %r15,%r13
388c(2): jbe 0x7(%rip)
388e(5): mov $0x30,0x0(%r14,%r15,1)
3893(4): lea 0x2(%rcx),%rax
3897(3): cmp %rax,%r13
389a(2): jbe 0x8(%rip)
389c(6): mov $0x30,0x2(%r14,%rcx,1)
38a2(3): mov %r12d,%eax
38a5(4): lea 0x3(%rcx),%r15
38a9(3): xor %r12d,%r12d
38ac(5): mov $0x30,%ebx
38b1(5): jmp 0xfffff367(%rip)
38b6(a): nop 0x0(%rax,%rax,1)
38c0(5): movzx 0xf(%rsp),%ebx
38c5(3): mov %r11,%rbp
38c8(4): mov %bl,0xd(%rsp)
38cc(5): jmp 0xfffffcad(%rip)
38d1(5): movzx 0xd(%rsp),%edx
38d6(3): xor %r12d,%r12d
38d9(5): jmp 0xfffffb07(%rip)
38de(3): xor %r10d,%r10d
38e1(5): jmp 0xfffffbbc(%rip)
38e6(9): mov $0x0,0x50(%rsp)
38ef(5): mov $0x1,0xe(%rsp)
38f4(3): xor %r12d,%r12d
38f7(5): mov $0x0,0x7c(%rsp)
38fc(5): jmp 0xfffffddf(%rip)
3901(5): mov 0x30(%rsp),%r11
3906(3): mov %r14,%rsi
3909(3): mov %r13,%rcx
390c(3): mov %rbx,%rax
390f(3): mov %rbx,%rdi
3912(6): movzx 0x7d(%rsp),%r8d
3918(5): movzx 0x7e(%rsp),%ebx
391d(8): mov 0x88(%rsp),%r9
3925(3): cmp %r11,%rsi
3928(6): movzx 0x7f(%rsp),%r10d
392e(8): mov 0x80(%rsp),%r15
3936(5): mov 0x40(%rsp),%r14
393b(5): mov 0x70(%rsp),%r13
3940(2): jnb 0x28(%rip)
3942(3): cmp $0x0,(%rcx)
3945(2): jnz 0x12(%rip)
3947(2): jmp 0x21(%rip)
3949(7): nop 0x0(%rax)
3950(5): cmp $0x0,0x0(%r9,%rax,1)
3955(2): jz 0x10(%rip)
3957(4): add $0x1,%rax
395b(5): lea 0x0(%rbp,%rax,1),%rdx
3960(3): cmp %rdx,%r11
3963(2): jnbe 0xffffffed(%rip)
3965(3): mov %rax,%rdi
3968(5): movzx 0xd(%rsp),%edx
396d(3): xor %r12d,%r12d
3970(5): jmp 0xfffffa66(%rip)
3975(3): mov %rbx,%rdi
3978(6): movzx 0x7d(%rsp),%r8d
397e(5): movzx 0x7e(%rsp),%ebx
3983(6): movzx 0x7f(%rsp),%r10d
3989(8): mov 0x80(%rsp),%r15
3991(3): xor %r12d,%r12d
3994(5): mov 0x40(%rsp),%r14
3999(5): mov 0x70(%rsp),%r13
399e(5): mov 0x30(%rsp),%r11
39a3(5): movzx 0xd(%rsp),%edx
39a8(5): jmp 0xfffffa2e(%rip)
39ad(5): mov 0x68(%rsp),%rdx
39b2(3): movzx (%rdx),%eax
39b5(2): test %al,%al
39b7(6): jz 0xfffffe35(%rip)
39bd(3): nop (%rax)
39c0(3): cmp %r15,%r13
39c3(2): jbe 0x6(%rip)
39c5(4): mov %al,0x0(%r14,%r15,1)
39c9(4): add $0x1,%r15
39cd(5): movzx 0x0(%rdx,%r15,1),%eax
39d2(2): test %al,%al
39d4(2): jnz 0xffffffec(%rip)
39d6(5): jmp 0xfffffe16(%rip)
39db(2): mov %edx,%eax
39dd(5): jmp 0xfffff55a(%rip)
39e2(4): movzx 0x0(%rax,%rcx,1),%ebx
39e6(3): cmp $0x3e,%bl
39e9(6): jnbe 0xfffff877(%rip)
39ef(a): mov $0x8070630310989004800,%rax
39f9(4): bt %rbx,%rax
39fd(6): jnb 0xfffff863(%rip)
3a03(5): cmp $0x0,0xf(%rsp)
3a08(6): jnz 0x1ea(%rip)
3a0e(3): cmp %r15,%r13
3a11(2): jbe 0x7(%rip)
3a13(5): mov $0x3f,0x0(%r14,%r15,1)
3a18(4): lea 0x1(%r15),%rax
3a1c(3): cmp %rax,%r13
3a1f(2): jbe 0x8(%rip)
3a21(6): mov $0x22,0x1(%r14,%r15,1)
3a27(4): lea 0x2(%r15),%rax
3a2b(3): cmp %rax,%r13
3a2e(2): jbe 0x8(%rip)
3a30(6): mov $0x22,0x2(%r14,%r15,1)
3a36(4): lea 0x3(%r15),%rax
3a3a(3): cmp %rax,%r13
3a3d(2): jbe 0x8(%rip)
3a3f(6): mov $0x3f,0x3(%r14,%r15,1)
3a45(4): add $0x4,%r15
3a49(2): xor %edx,%edx
3a4b(3): xor %r12d,%r12d
3a4e(2): xor %eax,%eax
3a50(3): mov %rcx,%rbp
3a53(5): jmp 0xfffff1c5(%rip)
3a58(2): test %ebx,%ebx
3a5a(6): jz 0x18e(%rip)
3a60(7): lea 0x485e(%rip),%rax
3a67(5): mov $0x1,0xe(%rsp)
3a6c(5): mov $0x0,0x7c(%rsp)
3a71(3): xor %r12d,%r12d
3a74(9): mov $0x0,0x50(%rsp)
3a7d(5): mov $0x1,0xf(%rsp)
3a82(5): mov $0x0,0xd(%rsp)
3a87(9): mov $0x1,0x18(%rsp)
3a90(3): xor %r15d,%r15d
3a93(5): mov %rax,0x48(%rsp)
3a98(5): jmp 0xfffff02b(%rip)
3a9d(3): nop (%rax)
3aa0(3): mov %r11,%rbp
3aa3(5): movzx 0xf(%rsp),%eax
3aa8(5): jmp 0xfffffad1(%rip)
3aad(7): lea 0x480f(%rip),%rax
3ab4(5): mov $0x1,0xe(%rsp)
3ab9(5): mov $0x0,0x7c(%rsp)
3abe(3): xor %r12d,%r12d
3ac1(9): mov $0x0,0x50(%rsp)
3aca(5): mov $0x1,0xf(%rsp)
3acf(5): mov $0x1,0xd(%rsp)
3ad4(9): mov $0x1,0x18(%rsp)
3add(3): xor %r15d,%r15d
3ae0(5): mov %rax,0x48(%rsp)
3ae5(5): jmp 0xffffefde(%rip)
3aea(2): mov %edx,%eax
3aec(5): mov 0x48(%rsp),%rbx
3af1(3): test %rbx,%rbx
3af4(2): jz 0x2e(%rip)
3af6(2): test %al,%al
3af8(2): jz 0x2a(%rip)
3afa(3): movzx (%rbx),%ecx
3afd(3): mov %rbx,%rax
3b00(2): test %cl,%cl
3b02(2): jz 0x20(%rip)
3b04(3): mov %r15,%rdx
3b07(3): sub %r15,%rax
3b0a(3): cmp %rdx,%r13
3b0d(2): jbe 0x6(%rip)
3b0f(4): mov %cl,0x0(%r14,%rdx,1)
3b13(4): add $0x1,%rdx
3b17(4): movzx 0x0(%rax,%rdx,1),%ecx
3b1b(2): test %cl,%cl
3b1d(2): jnz 0xffffffed(%rip)
3b1f(3): mov %rdx,%r15
3b22(3): cmp %r15,%r13
3b25(6): jbe 0xfffffaa4(%rip)
3b2b(5): mov $0x0,0x0(%r14,%r15,1)
3b30(5): jmp 0xfffffa99(%rip)
3b35(5): cmp $0x2,0x8(%rsp)
3b3a(5): movzx 0xf(%rsp),%ebx
3b3f(3): mov %r11,%rbp
3b42(3): setz %al
3b45(4): mov %bl,0xd(%rsp)
3b49(5): jmp 0xfffffa30(%rip)
3b4e(4): mov 0x8(%rsp),%esi
3b52(3): mov %rcx,%rdi
3b55(5): call 0xffffedab(%rip)
3b5a(5): mov %rax,0x68(%rsp)
3b5f(5): jmp 0xfffffc57(%rip)
3b64(4): mov 0x8(%rsp),%esi
3b68(3): mov %rcx,%rdi
3b6b(5): call 0xffffed95(%rip)
3b70(5): mov %rax,0x60(%rsp)
3b75(5): jmp 0xfffffc6c(%rip)
3b7a(5): movzx 0xf(%rsp),%ebx
3b7f(3): mov %r11,%rbp
3b82(2): mov %edx,%eax
3b84(4): mov %bl,0xd(%rsp)
3b88(5): jmp 0xfffff9f1(%rip)
3b8d(4): sub $0x8,%rsp
3b91(6): mov $0x5,%r8d
3b97(3): mov %r11,%rcx
3b9a(4): push 0x68(%rsp)
3b9e(4): push 0x78(%rsp)
3ba2(3): mov %r14,%rdi
3ba5(4): push 0x38(%rsp)
3ba9(8): mov 0x98(%rsp),%r9d
3bb1(5): mov 0x30(%rsp),%rdx
3bb6(5): mov 0x70(%rsp),%rsi
3bbb(5): call 0xffffee35(%rip)
3bc0(4): add $0x20,%rsp
3bc4(3): mov %rax,%r15
3bc7(5): jmp 0xfffffa02(%rip)
3bcc(5): movzx 0x7c(%rsp),%eax
3bd1(5): jmp 0xffffff1b(%rip)
3bd6(8): mov $0x2,0x8(%rsp)
3bde(5): jmp 0xfffff99b(%rip)
3be3(5): call 0xffffda6d(%rip)
3be8(5): mov $0x0,0xd(%rsp)
3bed(5): jmp 0xfffffa74(%rip)
3bf2(3): mov %r11,%rbp
3bf5(5): jmp 0xfffff99b(%rip)
3bfa(5): mov $0x1,0xe(%rsp)
3bff(2): xor %eax,%eax
3c01(3): xor %r12d,%r12d
3c04(9): mov $0x0,0x50(%rsp)
3c0d(5): jmp 0xfffff5a7(%rip)
3c12(3): mov %r13,%rdx
3c15(5): mov 0x50(%rsp),%r13
3c1a(5): jmp 0xfffff5f8(%rip)
3c1f(5): call 0xffffd971(%rip)

"quotearg_n_options" :
3c30(2): push %r15
3c32(2): push %r14
3c34(3): movsxd %edi,%r15
3c37(2): push %r13
3c39(2): push %r12
3c3b(3): mov %rdx,%r14
3c3e(1): push %rbp
3c3f(1): push %rbx
3c40(3): mov %rcx,%rbp
3c43(4): sub $0x28,%rsp
3c47(5): mov %rsi,0x8(%rsp)
3c4c(5): call 0xffffd954(%rip)
3c51(3): mov %rax,%r13
3c54(2): mov (%rax),%eax
3c56(3): test %r15d,%r15d
3c59(7): mov 0x207400(%rip),%rbx
3c60(4): mov %eax,0x18(%rsp)
3c64(6): js 0x16d(%rip)
3c6a(7): cmp %r15d,0x2073e7(%rip)
3c71(2): jnle 0x64(%rip)
3c73(7): cmp $0x7fffffff,%r15d
3c7a(6): jz 0x15c(%rip)
3c80(4): lea 0x1(%r15),%r12d
3c84(7): lea 0x2073e5(%rip),%rax
3c8b(3): movsxd %r12d,%rsi
3c8e(4): shl/sal $0x4,%rsi
3c92(3): cmp %rax,%rbx
3c95(6): jz 0x11b(%rip)
3c9b(3): mov %rbx,%rdi
3c9e(5): call 0xf72(%rip)
3ca3(3): mov %rax,%rbx
3ca6(7): mov %rax,0x2073b3(%rip)
3cad(7): movsxd 0x2073a4(%rip),%rdi
3cb4(3): mov %r12d,%edx
3cb7(2): xor %esi,%esi
3cb9(2): sub %edi,%edx
3cbb(4): shl/sal $0x4,%rdi
3cbf(3): movsxd %edx,%rdx
3cc2(3): add %rbx,%rdi
3cc5(4): shl/sal $0x4,%rdx
3cc9(5): call 0xffffda07(%rip)
3cce(7): mov %r12d,0x207383(%rip)
3cd5(3): mov 0x4(%rbp),%eax
3cd8(4): shl/sal $0x4,%r15
3cdc(4): sub $0x8,%rsp
3ce0(3): add %r15,%rbx
3ce3(4): lea 0x8(%rbp),%r15
3ce7(4): mov 0x0(%rbp),%r8d
3ceb(3): mov (%rbx),%r11
3cee(4): mov 0x8(%rbx),%r12
3cf2(3): mov %r14,%rcx
3cf5(3): or $0x1,%eax
3cf8(4): mov %eax,0x24(%rsp)
3cfc(3): push 0x30(%rbp)
3cff(3): mov %eax,%r9d
3d02(3): push 0x28(%rbp)
3d05(2): push %r15
3d07(3): mov %r11,%rsi
3d0a(5): mov 0x28(%rsp),%rdx
3d0f(3): mov %r12,%rdi
3d12(5): mov %r11,0x30(%rsp)
3d17(5): call 0xffffecd9(%rip)
3d1c(4): add $0x20,%rsp
3d20(5): mov 0x10(%rsp),%r11
3d25(3): cmp %rax,%r11
3d28(2): jnbe 0x69(%rip)
3d2a(4): lea 0x1(%rax),%rsi
3d2e(7): lea 0x20742b(%rip),%rax
3d35(3): cmp %rax,%r12
3d38(3): mov %rsi,(%rbx)
3d3b(2): jz 0x14(%rip)
3d3d(3): mov %r12,%rdi
3d40(5): mov %rsi,0x10(%rsp)
3d45(5): call 0xffffd83b(%rip)
3d4a(5): mov 0x10(%rsp),%rsi
3d4f(3): mov %rsi,%rdi
3d52(5): mov %rsi,0x10(%rsp)
3d57(5): call 0xe59(%rip)
3d5c(4): sub $0x8,%rsp
3d60(4): mov %rax,0x8(%rbx)
3d64(4): mov 0x0(%rbp),%r8d
3d68(3): push 0x30(%rbp)
3d6b(3): push 0x28(%rbp)
3d6e(3): mov %r14,%rcx
3d71(2): push %r15
3d73(5): mov 0x3c(%rsp),%r9d
3d78(3): mov %rax,%rdi
3d7b(5): mov 0x28(%rsp),%rdx
3d80(5): mov 0x30(%rsp),%rsi
3d85(3): mov %rax,%r12
3d88(5): call 0xffffec68(%rip)
3d8d(4): add $0x20,%rsp
3d91(4): mov 0x18(%rsp),%eax
3d95(4): mov %eax,0x0(%r13)
3d99(4): add $0x28,%rsp
3d9d(3): mov %r12,%rax
3da0(1): pop %rbx
3da1(1): pop %rbp
3da2(2): pop %r12
3da4(2): pop %r13
3da6(2): pop %r14
3da8(2): pop %r15
3daa(1): ret near (%rsp)
3dab(5): nop 0x0(%rax,%rax,1)
3db0(2): xor %edi,%edi
3db2(5): call 0xe5e(%rip)
3db7(8): movdqa 0x2072b1(%rip),%xmm0
3dbf(3): mov %rax,%rbx
3dc2(7): mov %rax,0x207297(%rip)
3dc9(3): movups %xmm0,(%rax)
3dcc(5): jmp 0xfffffee1(%rip)
3dd1(5): call 0xffffd7bf(%rip)
3dd6(5): call 0x102a(%rip)

"clone_quoting_options" :
3de0(2): push %r12
3de2(1): push %rbp
3de3(1): push %rbx
3de4(3): mov %rdi,%rbx
3de7(5): call 0xffffd7b9(%rip)
3dec(3): mov (%rax),%r12d
3def(3): mov %rax,%rbp
3df2(7): lea 0x207467(%rip),%rax
3df9(3): test %rbx,%rbx
3dfc(5): mov $0x38,%esi
3e01(4): cmove %rax,%rbx
3e05(3): mov %rbx,%rdi
3e08(5): call 0xfa8(%rip)
3e0d(4): mov %r12d,0x0(%rbp)
3e11(1): pop %rbx
3e12(1): pop %rbp
3e13(2): pop %r12
3e15(1): ret near (%rsp)

"get_quoting_style" :
3e20(7): lea 0x207439(%rip),%rax
3e27(3): test %rdi,%rdi
3e2a(4): cmove %rax,%rdi
3e2e(2): mov (%rdi),%eax
3e30(1): ret near (%rsp)

"set_quoting_style" :
3e40(7): lea 0x207419(%rip),%rax
3e47(3): test %rdi,%rdi
3e4a(4): cmove %rax,%rdi
3e4e(2): mov %esi,(%rdi)
3e50(1): ret near (%rsp)

"set_char_quoting" :
3e60(7): lea 0x2073f9(%rip),%rax
3e67(3): test %rdi,%rdi
3e6a(2): mov %esi,%ecx
3e6c(4): cmove %rax,%rdi
3e70(2): mov %esi,%eax
3e72(3): and $0x1f,%ecx
3e75(3): shr $0x5,%al
3e78(3): movzx %al,%eax
3e7b(5): lea 0x8(%rdi,%rax,4),%rdi
3e80(2): mov (%rdi),%esi
3e82(2): mov %esi,%eax
3e84(2): shr %cl,%eax
3e86(2): xor %eax,%edx
3e88(3): and $0x1,%eax
3e8b(3): and $0x1,%edx
3e8e(2): shl/sal %cl,%edx
3e90(2): xor %esi,%edx
3e92(2): mov %edx,(%rdi)
3e94(1): ret near (%rsp)

"set_quoting_flags" :
3ea0(7): lea 0x2073b9(%rip),%rax
3ea7(3): test %rdi,%rdi
3eaa(4): cmove %rax,%rdi
3eae(3): mov 0x4(%rdi),%eax
3eb1(3): mov %esi,0x4(%rdi)
3eb4(1): ret near (%rsp)

"set_custom_quoting" :
3ec0(7): lea 0x207399(%rip),%rax
3ec7(3): test %rdi,%rdi
3eca(4): cmove %rax,%rdi
3ece(3): test %rsi,%rsi
3ed1(6): mov $0xa,(%rdi)
3ed7(2): jz 0x10(%rip)
3ed9(3): test %rdx,%rdx
3edc(2): jz 0xb(%rip)
3ede(4): mov %rsi,0x28(%rdi)
3ee2(4): mov %rdx,0x30(%rdi)
3ee6(1): ret near (%rsp)
3ee7(4): sub $0x8,%rsp
3eeb(5): call 0xffffd6a5(%rip)

"quotearg_buffer" :
3ef0(2): push %r15
3ef2(2): push %r14
3ef4(7): lea 0x207365(%rip),%rax
3efb(2): push %r13
3efd(2): push %r12
3eff(3): mov %rdi,%r13
3f02(1): push %rbp
3f03(1): push %rbx
3f04(3): mov %r8,%rbx
3f07(3): mov %rsi,%r14
3f0a(3): mov %rdx,%r15
3f0d(4): sub $0x18,%rsp
3f11(3): test %r8,%r8
3f14(4): cmove %rax,%rbx
3f18(5): mov %rcx,0x8(%rsp)
3f1d(5): call 0xffffd683(%rip)
3f22(3): mov (%rax),%r12d
3f25(3): mov %rax,%rbp
3f28(4): lea 0x8(%rbx),%rax
3f2c(4): sub $0x8,%rsp
3f30(4): mov 0x4(%rbx),%r9d
3f34(3): push 0x30(%rbx)
3f37(3): mov (%rbx),%r8d
3f3a(3): push 0x28(%rbx)
3f3d(3): mov %r15,%rdx
3f40(1): push %rax
3f41(5): mov 0x28(%rsp),%rcx
3f46(3): mov %r14,%rsi
3f49(3): mov %r13,%rdi
3f4c(5): call 0xffffeaa4(%rip)
3f51(4): mov %r12d,0x0(%rbp)
3f55(4): add $0x38,%rsp
3f59(1): pop %rbx
3f5a(1): pop %rbp
3f5b(2): pop %r12
3f5d(2): pop %r13
3f5f(2): pop %r14
3f61(2): pop %r15
3f63(1): ret near (%rsp)

"quotearg_alloc_mem" :
3f70(2): push %r15
3f72(2): push %r14
3f74(7): lea 0x2072e5(%rip),%rax
3f7b(2): push %r13
3f7d(2): push %r12
3f7f(3): mov %rdx,%r12
3f82(1): push %rbp
3f83(1): push %rbx
3f84(3): mov %rcx,%rbx
3f87(3): mov %rdi,%r14
3f8a(3): mov %rsi,%r15
3f8d(4): sub $0x38,%rsp
3f91(3): test %rcx,%rcx
3f94(4): cmove %rax,%rbx
3f98(2): xor %ebp,%ebp
3f9a(5): call 0xffffd606(%rip)
3f9f(3): test %r12,%r12
3fa2(3): mov %rax,%r13
3fa5(2): mov (%rax),%eax
3fa7(4): setz %bpl
3fab(3): or 0x4(%rbx),%ebp
3fae(4): lea 0x8(%rbx),%r10
3fb2(4): sub $0x8,%rsp
3fb6(3): mov (%rbx),%r8d
3fb9(3): mov %r15,%rcx
3fbc(4): mov %eax,0x14(%rsp)
3fc0(3): push 0x30(%rbx)
3fc3(3): mov %r14,%rdx
3fc6(3): push 0x28(%rbx)
3fc9(2): push %r10
3fcb(2): xor %esi,%esi
3fcd(3): mov %ebp,%r9d
3fd0(2): xor %edi,%edi
3fd2(5): mov %r10,0x40(%rsp)
3fd7(5): call 0xffffea19(%rip)
3fdc(4): lea 0x1(%rax),%rsi
3fe0(5): mov %rax,0x48(%rsp)
3fe5(4): add $0x20,%rsp
3fe9(3): mov %rsi,%rdi
3fec(5): mov %rsi,0x18(%rsp)
3ff1(5): call 0xbbf(%rip)
3ff6(5): mov %rax,0x10(%rsp)
3ffb(4): sub $0x8,%rsp
3fff(3): push 0x30(%rbx)
4002(3): push 0x28(%rbx)
4005(5): mov 0x38(%rsp),%r10
400a(3): mov %ebp,%r9d
400d(3): mov (%rbx),%r8d
4010(3): mov %r15,%rcx
4013(3): mov %r14,%rdx
4016(3): mov %rax,%rdi
4019(2): push %r10
401b(5): mov 0x38(%rsp),%rsi
4020(5): call 0xffffe9d0(%rip)
4025(4): mov 0x2c(%rsp),%eax
4029(4): add $0x20,%rsp
402d(3): test %r12,%r12
4030(4): mov %eax,0x0(%r13)
4034(2): jz 0xb(%rip)
4036(5): mov 0x28(%rsp),%r11
403b(4): mov %r11,(%r12)
403f(5): mov 0x10(%rsp),%rax
4044(4): add $0x38,%rsp
4048(1): pop %rbx
4049(1): pop %rbp
404a(2): pop %r12
404c(2): pop %r13
404e(2): pop %r14
4050(2): pop %r15
4052(1): ret near (%rsp)

"quotearg_alloc" :
4060(3): mov %rdx,%rcx
4063(2): xor %edx,%edx
4065(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4070(6): mov 0x206fe2(%rip),%eax
4076(2): push %r12
4078(7): mov 0x206fe1(%rip),%r12
407f(1): push %rbp
4080(1): push %rbx
4081(3): cmp $0x1,%eax
4084(2): jle 0x2d(%rip)
4086(3): sub $0x2,%eax
4089(5): lea 0x18(%r12),%rbx
408e(4): shl/sal $0x4,%rax
4092(5): lea 0x28(%r12,%rax,1),%rbp
4097(9): nop 0x0(%rax,%rax,1)
40a0(3): mov (%rbx),%rdi
40a3(4): add $0x10,%rbx
40a7(5): call 0xffffd4d9(%rip)
40ac(3): cmp %rbp,%rbx
40af(2): jnz 0xfffffff1(%rip)
40b1(5): mov 0x8(%r12),%rdi
40b6(7): lea 0x2070a3(%rip),%rbx
40bd(3): cmp %rbx,%rdi
40c0(2): jz 0x19(%rip)
40c2(5): call 0xffffd4be(%rip)
40c7(b): mov $0x100,0x206f9e(%rip)
40d2(7): mov %rbx,0x206f9f(%rip)
40d9(7): lea 0x206f90(%rip),%rbx
40e0(3): cmp %rbx,%r12
40e3(2): jz 0x11(%rip)
40e5(3): mov %r12,%rdi
40e8(5): call 0xffffd498(%rip)
40ed(7): mov %rbx,0x206f6c(%rip)
40f4(1): pop %rbx
40f5(a): mov $0x1,0x206f59(%rip)
40ff(1): pop %rbp
4100(2): pop %r12
4102(1): ret near (%rsp)

"quotearg_n" :
4110(7): lea 0x207149(%rip),%rcx
4117(7): mov $0xffffffff,%rdx
411e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4130(7): lea 0x207129(%rip),%rcx
4137(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4140(7): lea 0x207119(%rip),%rcx
4147(3): mov %rdi,%rsi
414a(7): mov $0xffffffff,%rdx
4151(2): xor %edi,%edi
4153(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4160(7): lea 0x2070f9(%rip),%rcx
4167(3): mov %rsi,%rdx
416a(3): mov %rdi,%rsi
416d(2): xor %edi,%edi
416f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4180(4): sub $0x48,%rsp
4184(3): mov %rdx,%rax
4187(9): mov $0x28,%rdx
4190(5): mov %rdx,0x38(%rsp)
4195(2): xor %edx,%edx
4197(3): cmp $0xa,%esi
419a(2): jz 0x6a(%rip)
419c(3): mov %esi,(%rsp)
419f(3): mov %rsp,%rcx
41a2(7): mov $0xffffffff,%rdx
41a9(3): mov %rax,%rsi
41ac(9): mov $0x0,0x4(%rsp)
41b5(9): mov $0x0,0xc(%rsp)
41be(9): mov $0x0,0x14(%rsp)
41c7(9): mov $0x0,0x1c(%rsp)
41d0(9): mov $0x0,0x24(%rsp)
41d9(9): mov $0x0,0x2c(%rsp)
41e2(8): mov $0x0,0x34(%rsp)
41ea(5): call 0xfffffa46(%rip)
41ef(5): mov 0x38(%rsp),%rcx
41f4(9): xor $0x28,%rcx
41fd(2): jnz 0xc(%rip)
41ff(4): add $0x48,%rsp
4203(1): ret near (%rsp)
4204(5): call 0xffffd38c(%rip)
4209(5): call 0xffffd447(%rip)

"quotearg_n_style_mem" :
4210(4): sub $0x48,%rsp
4214(3): mov %rdx,%rax
4217(3): mov %rcx,%rdx
421a(9): mov $0x28,%rcx
4223(5): mov %rcx,0x38(%rsp)
4228(2): xor %ecx,%ecx
422a(3): cmp $0xa,%esi
422d(2): jz 0x63(%rip)
422f(3): mov %esi,(%rsp)
4232(3): mov %rsp,%rcx
4235(3): mov %rax,%rsi
4238(9): mov $0x0,0x4(%rsp)
4241(9): mov $0x0,0xc(%rsp)
424a(9): mov $0x0,0x14(%rsp)
4253(9): mov $0x0,0x1c(%rsp)
425c(9): mov $0x0,0x24(%rsp)
4265(9): mov $0x0,0x2c(%rsp)
426e(8): mov $0x0,0x34(%rsp)
4276(5): call 0xfffff9ba(%rip)
427b(5): mov 0x38(%rsp),%rdx
4280(9): xor $0x28,%rdx
4289(2): jnz 0xc(%rip)
428b(4): add $0x48,%rsp
428f(1): ret near (%rsp)
4290(5): call 0xffffd300(%rip)
4295(5): call 0xffffd3bb(%rip)

"quotearg_style" :
42a0(3): mov %rsi,%rdx
42a3(2): mov %edi,%esi
42a5(2): xor %edi,%edi
42a7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
42b0(3): mov %rdx,%rcx
42b3(3): mov %rsi,%rdx
42b6(2): mov %edi,%esi
42b8(2): xor %edi,%edi
42ba(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
42c0(4): sub $0x48,%rsp
42c4(2): mov %edx,%ecx
42c6(9): mov $0x28,%rax
42cf(5): mov %rax,0x38(%rsp)
42d4(2): xor %eax,%eax
42d6(7): mov 0x206fb3(%rip),%rax
42dd(3): mov %rsp,%r8
42e0(3): and $0x1f,%ecx
42e3(8): movdqa 0x206f75(%rip),%xmm0
42eb(5): mov %rax,0x30(%rsp)
42f0(2): mov %edx,%eax
42f2(4): movaps %xmm0,(%rsp)
42f6(3): shr $0x5,%al
42f9(3): movzx %al,%eax
42fc(5): lea 0x8(%r8,%rax,4),%r9
4301(8): movdqa 0x206f67(%rip),%xmm0
4309(5): movaps %xmm0,0x10(%rsp)
430e(8): movdqa 0x206f6a(%rip),%xmm0
4316(5): movaps %xmm0,0x20(%rsp)
431b(3): mov (%r9),%edx
431e(2): mov %edx,%eax
4320(2): shr %cl,%eax
4322(2): not %eax
4324(3): and $0x1,%eax
4327(2): shl/sal %cl,%eax
4329(3): mov %r8,%rcx
432c(2): xor %edx,%eax
432e(3): mov %rsi,%rdx
4331(3): mov %rdi,%rsi
4334(3): mov %eax,(%r9)
4337(2): xor %edi,%edi
4339(5): call 0xfffff8f7(%rip)
433e(5): mov 0x38(%rsp),%rsi
4343(9): xor $0x28,%rsi
434c(2): jnz 0x7(%rip)
434e(4): add $0x48,%rsp
4352(1): ret near (%rsp)
4353(5): call 0xffffd2fd(%rip)

"quotearg_char" :
4360(4): movsx %sil,%edx
4364(7): mov $0xffffffff,%rsi
436b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4370(5): mov $0x3a,%edx
4375(7): mov $0xffffffff,%rsi
437c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4390(5): mov $0x3a,%edx
4395(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
43a0(4): sub $0x48,%rsp
43a4(3): mov %rdx,%rax
43a7(9): mov $0x28,%rdx
43b0(5): mov %rdx,0x38(%rsp)
43b5(2): xor %edx,%edx
43b7(3): cmp $0xa,%esi
43ba(2): jz 0x6a(%rip)
43bc(3): mov %esi,(%rsp)
43bf(3): mov %rsp,%rcx
43c2(7): mov $0xffffffff,%rdx
43c9(3): mov %rax,%rsi
43cc(9): mov $0x0,0x4(%rsp)
43d5(9): mov $0x4000000,0xc(%rsp)
43de(9): mov $0x0,0x14(%rsp)
43e7(9): mov $0x0,0x1c(%rsp)
43f0(9): mov $0x0,0x24(%rsp)
43f9(9): mov $0x0,0x2c(%rsp)
4402(8): mov $0x0,0x34(%rsp)
440a(5): call 0xfffff826(%rip)
440f(5): mov 0x38(%rsp),%rcx
4414(9): xor $0x28,%rcx
441d(2): jnz 0xc(%rip)
441f(4): add $0x48,%rsp
4423(1): ret near (%rsp)
4424(5): call 0xffffd16c(%rip)
4429(5): call 0xffffd227(%rip)

"quotearg_n_custom_mem" :
4430(4): sub $0x48,%rsp
4434(3): mov %rcx,%r9
4437(7): mov 0x206e52(%rip),%rcx
443e(8): movdqa 0x206e1a(%rip),%xmm0
4446(9): mov $0x28,%rax
444f(5): mov %rax,0x38(%rsp)
4454(2): xor %eax,%eax
4456(4): movaps %xmm0,(%rsp)
445a(3): test %rsi,%rsi
445d(5): mov %rcx,0x30(%rsp)
4462(7): mov $0xa,(%rsp)
4469(8): movdqa 0x206dff(%rip),%xmm0
4471(5): movaps %xmm0,0x10(%rsp)
4476(8): movdqa 0x206e02(%rip),%xmm0
447e(5): movaps %xmm0,0x20(%rsp)
4483(2): jz 0x34(%rip)
4485(3): test %rdx,%rdx
4488(2): jz 0x2f(%rip)
448a(5): mov %rsi,0x28(%rsp)
448f(5): mov %rdx,0x30(%rsp)
4494(3): mov %rsp,%rcx
4497(3): mov %r8,%rdx
449a(3): mov %r9,%rsi
449d(5): call 0xfffff793(%rip)
44a2(5): mov 0x38(%rsp),%rdi
44a7(9): xor $0x28,%rdi
44b0(2): jnz 0xc(%rip)
44b2(4): add $0x48,%rsp
44b6(1): ret near (%rsp)
44b7(5): call 0xffffd0d9(%rip)
44bc(5): call 0xffffd194(%rip)

"quotearg_n_custom" :
44d0(7): mov $0xffffffff,%r8
44d7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
44e0(3): mov %rdx,%rcx
44e3(7): mov $0xffffffff,%r8
44ea(3): mov %rsi,%rdx
44ed(3): mov %rdi,%rsi
44f0(2): xor %edi,%edi
44f2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4500(3): mov %rcx,%r8
4503(3): mov %rdx,%rcx
4506(3): mov %rsi,%rdx
4509(3): mov %rdi,%rsi
450c(2): xor %edi,%edi
450e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4520(7): lea 0x206af9(%rip),%rcx
4527(5): jmp 0xfffff709(%rip)

"quote_mem" :
4530(7): lea 0x206ae9(%rip),%rcx
4537(3): mov %rsi,%rdx
453a(3): mov %rdi,%rsi
453d(2): xor %edi,%edi
453f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4550(7): lea 0x206ac9(%rip),%rcx
4557(7): mov $0xffffffff,%rdx
455e(5): jmp 0xfffff6d2(%rip)

"quote" :
4570(7): lea 0x206aa9(%rip),%rcx
4577(3): mov %rdi,%rsi
457a(7): mov $0xffffffff,%rdx
4581(2): xor %edi,%edi
4583(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4590(2): push %r15
4592(2): push %r14
4594(2): push %r13
4596(2): push %r12
4598(3): mov %r9,%r12
459b(1): push %rbp
459c(1): push %rbx
459d(3): mov %rdi,%rbp
45a0(3): mov %r8,%rbx
45a3(4): sub $0x28,%rsp
45a7(3): test %rsi,%rsi
45aa(6): jz 0x11e(%rip)
45b0(3): mov %rdx,%r8
45b3(7): lea 0x41ce(%rip),%rdx
45ba(3): mov %rcx,%r9
45bd(2): xor %eax,%eax
45bf(3): mov %rsi,%rcx
45c2(5): mov $0x1,%esi
45c7(5): call 0xffffd289(%rip)
45cc(7): lea 0x41c8(%rip),%rsi
45d3(2): xor %edi,%edi
45d5(5): mov $0x5,%edx
45da(5): call 0xffffd046(%rip)
45df(7): lea 0x44da(%rip),%rdx
45e6(3): mov %rax,%rcx
45e9(6): mov $0x7e3,%r8d
45ef(5): mov $0x1,%esi
45f4(3): mov %rbp,%rdi
45f7(2): xor %eax,%eax
45f9(5): call 0xffffd257(%rip)
45fe(7): lea 0x4223(%rip),%rsi
4605(2): xor %edi,%edi
4607(5): mov $0x5,%edx
460c(5): call 0xffffd014(%rip)
4611(3): mov %rbp,%rsi
4614(3): mov %rax,%rdi
4617(5): call 0xffffd0d9(%rip)
461c(4): cmp $0x9,%r12
4620(6): jnbe 0x340(%rip)
4626(7): lea 0x4457(%rip),%rdx
462d(4): movsxd 0x0(%rdx,%r12,4),%rax
4631(3): add %rdx,%rax
4634(2): jmp %rax
4636(a): nop 0x0(%rax,%rax,1)
4640(4): mov 0x38(%rbx),%r9
4644(4): mov 0x10(%rbx),%rax
4648(7): lea 0x4349(%rip),%rsi
464f(4): mov 0x8(%rbx),%r8
4653(5): mov $0x5,%edx
4658(2): xor %edi,%edi
465a(4): mov 0x30(%rbx),%r13
465e(4): mov 0x28(%rbx),%r12
4662(5): mov %r9,0x10(%rsp)
4667(4): mov 0x20(%rbx),%r15
466b(4): mov 0x18(%rbx),%r14
466f(4): mov %rax,(%rsp)
4673(5): mov %r8,0x8(%rsp)
4678(3): mov (%rbx),%rbx
467b(5): call 0xffffcfa5(%rip)
4680(4): sub $0x8,%rsp
4684(5): mov 0x18(%rsp),%r9
4689(3): mov %rax,%rdx
468c(3): mov %rbx,%rcx
468f(5): mov $0x1,%esi
4694(3): mov %rbp,%rdi
4697(2): xor %eax,%eax
4699(2): push %r9
469b(2): push %r13
469d(2): push %r12
469f(2): push %r15
46a1(2): push %r14
46a3(5): mov 0x30(%rsp),%r9
46a8(5): mov 0x38(%rsp),%r8
46ad(5): call 0xffffd1a3(%rip)
46b2(4): add $0x30,%rsp
46b6(4): add $0x28,%rsp
46ba(1): pop %rbx
46bb(1): pop %rbp
46bc(2): pop %r12
46be(2): pop %r13
46c0(2): pop %r14
46c2(2): pop %r15
46c4(1): ret near (%rsp)
46c5(3): nop (%rax)
46c8(3): mov %rcx,%r8
46cb(3): mov %rdx,%rcx
46ce(7): lea 0x40bf(%rip),%rdx
46d5(5): mov $0x1,%esi
46da(2): xor %eax,%eax
46dc(5): call 0xffffd174(%rip)
46e1(5): jmp 0xfffffeeb(%rip)
46e6(a): nop 0x0(%rax,%rax,1)
46f0(4): mov 0x40(%rbx),%r10
46f4(4): mov 0x38(%rbx),%r9
46f8(7): lea 0x42c9(%rip),%rsi
46ff(4): mov 0x10(%rbx),%rax
4703(4): mov 0x8(%rbx),%r8
4707(5): mov $0x5,%edx
470c(4): mov 0x30(%rbx),%r13
4710(4): mov 0x28(%rbx),%r12
4714(4): mov 0x20(%rbx),%r15
4718(4): mov 0x18(%rbx),%r14
471c(3): mov (%rbx),%rbx
471f(5): mov %r10,0x18(%rsp)
4724(5): mov %r9,0x10(%rsp)
4729(4): mov %rax,(%rsp)
472d(5): mov %r8,0x8(%rsp)
4732(2): xor %edi,%edi
4734(5): call 0xffffceec(%rip)
4739(5): mov 0x18(%rsp),%r10
473e(2): push %r10
4740(5): jmp 0xffffff44(%rip)
4745(3): nop (%rax)
4748(3): mov (%rbx),%rbx
474b(7): lea 0x404d(%rip),%rsi
4752(5): mov $0x5,%edx
4757(2): xor %edi,%edi
4759(5): call 0xffffcec7(%rip)
475e(4): add $0x28,%rsp
4762(3): mov %rbx,%rcx
4765(3): mov %rbp,%rdi
4768(1): pop %rbx
4769(1): pop %rbp
476a(2): pop %r12
476c(2): pop %r13
476e(2): pop %r14
4770(2): pop %r15
4772(3): mov %rax,%rdx
4775(5): mov $0x1,%esi
477a(2): xor %eax,%eax
477c(5): jmp 0xffffd0d4(%rip)
4781(7): nop 0x0(%rax)
4788(4): mov 0x8(%rbx),%r12
478c(7): lea 0x401c(%rip),%rsi
4793(3): mov (%rbx),%rbx
4796(5): mov $0x5,%edx
479b(2): xor %edi,%edi
479d(5): call 0xffffce83(%rip)
47a2(4): add $0x28,%rsp
47a6(3): mov %r12,%r8
47a9(3): mov %rbx,%rcx
47ac(3): mov %rbp,%rdi
47af(3): mov %rax,%rdx
47b2(5): mov $0x1,%esi
47b7(1): pop %rbx
47b8(1): pop %rbp
47b9(2): pop %r12
47bb(2): pop %r13
47bd(2): pop %r14
47bf(2): pop %r15
47c1(2): xor %eax,%eax
47c3(5): jmp 0xffffd08d(%rip)
47c8(8): nop 0x0(%rax,%rax,1)
47d0(4): mov 0x10(%rbx),%r13
47d4(4): mov 0x8(%rbx),%r12
47d8(7): lea 0x3fe7(%rip),%rsi
47df(3): mov (%rbx),%rbx
47e2(5): mov $0x5,%edx
47e7(2): xor %edi,%edi
47e9(5): call 0xffffce37(%rip)
47ee(4): add $0x28,%rsp
47f2(3): mov %r13,%r9
47f5(3): mov %r12,%r8
47f8(3): mov %rbx,%rcx
47fb(3): mov %rbp,%rdi
47fe(3): mov %rax,%rdx
4801(1): pop %rbx
4802(1): pop %rbp
4803(2): pop %r12
4805(2): pop %r13
4807(2): pop %r14
4809(2): pop %r15
480b(5): mov $0x1,%esi
4810(2): xor %eax,%eax
4812(5): jmp 0xffffd03e(%rip)
4817(9): nop 0x0(%rax,%rax,1)
4820(7): lea 0x40d1(%rip),%rsi
4827(5): mov $0x5,%edx
482c(2): xor %edi,%edi
482e(4): mov 0x18(%rbx),%r14
4832(4): mov 0x10(%rbx),%r13
4836(4): mov 0x8(%rbx),%r12
483a(3): mov (%rbx),%rbx
483d(5): call 0xffffcde3(%rip)
4842(4): sub $0x8,%rsp
4846(2): push %r14
4848(3): mov %rax,%rdx
484b(3): mov %r13,%r9
484e(3): mov %r12,%r8
4851(3): mov %rbx,%rcx
4854(3): mov %rbp,%rdi
4857(5): mov $0x1,%esi
485c(2): xor %eax,%eax
485e(5): call 0xffffcff2(%rip)
4863(1): pop %rax
4864(1): pop %rdx
4865(4): add $0x28,%rsp
4869(1): pop %rbx
486a(1): pop %rbp
486b(2): pop %r12
486d(2): pop %r13
486f(2): pop %r14
4871(2): pop %r15
4873(1): ret near (%rsp)
4874(4): nop 0x0(%rax)
4878(4): mov 0x20(%rbx),%r15
487c(7): lea 0x4095(%rip),%rsi
4883(5): mov $0x5,%edx
4888(2): xor %edi,%edi
488a(4): mov 0x18(%rbx),%r14
488e(4): mov 0x10(%rbx),%r13
4892(4): mov 0x8(%rbx),%r12
4896(3): mov (%rbx),%rbx
4899(5): call 0xffffcd87(%rip)
489e(2): push %r15
48a0(2): jmp 0xffffffa6(%rip)
48a2(6): nop 0x0(%rax,%rax,1)
48a8(4): mov 0x8(%rbx),%r8
48ac(4): mov 0x28(%rbx),%r12
48b0(7): lea 0x4089(%rip),%rsi
48b7(4): mov 0x20(%rbx),%r15
48bb(4): mov 0x18(%rbx),%r14
48bf(5): mov $0x5,%edx
48c4(4): mov 0x10(%rbx),%r13
48c8(2): xor %edi,%edi
48ca(3): mov (%rbx),%rbx
48cd(4): mov %r8,(%rsp)
48d1(5): call 0xffffcd4f(%rip)
48d6(4): sub $0x8,%rsp
48da(3): mov %r13,%r9
48dd(2): push %r12
48df(2): push %r15
48e1(2): push %r14
48e3(5): mov 0x20(%rsp),%r8
48e8(3): mov %rbx,%rcx
48eb(3): mov %rax,%rdx
48ee(3): mov %rbp,%rdi
48f1(5): mov $0x1,%esi
48f6(2): xor %eax,%eax
48f8(5): call 0xffffcf58(%rip)
48fd(4): add $0x20,%rsp
4901(4): add $0x28,%rsp
4905(1): pop %rbx
4906(1): pop %rbp
4907(2): pop %r12
4909(2): pop %r13
490b(2): pop %r14
490d(2): pop %r15
490f(1): ret near (%rsp)
4910(4): mov 0x10(%rbx),%r9
4914(4): mov 0x30(%rbx),%r13
4918(7): lea 0x4049(%rip),%rsi
491f(4): mov 0x28(%rbx),%r12
4923(4): mov 0x20(%rbx),%r15
4927(5): mov $0x5,%edx
492c(4): mov 0x18(%rbx),%r14
4930(4): mov 0x8(%rbx),%r8
4934(2): xor %edi,%edi
4936(5): mov %r9,0x8(%rsp)
493b(3): mov (%rbx),%rbx
493e(4): mov %r8,(%rsp)
4942(5): call 0xffffccde(%rip)
4947(2): push %r13
4949(2): push %r12
494b(2): push %r15
494d(2): push %r14
494f(5): mov 0x28(%rsp),%r9
4954(2): jmp 0xffffff8f(%rip)
4956(a): nop 0x0(%rax,%rax,1)
4960(4): mov 0x40(%rbx),%r10
4964(4): mov 0x38(%rbx),%r9
4968(5): mov $0x5,%edx
496d(4): mov 0x10(%rbx),%rax
4971(4): mov 0x8(%rbx),%r8
4975(7): lea 0x4084(%rip),%rsi
497c(4): mov 0x30(%rbx),%r13
4980(4): mov 0x28(%rbx),%r12
4984(4): mov 0x20(%rbx),%r15
4988(4): mov 0x18(%rbx),%r14
498c(5): mov %r10,0x18(%rsp)
4991(5): mov %r9,0x10(%rsp)
4996(4): mov %rax,(%rsp)
499a(5): mov %r8,0x8(%rsp)
499f(3): mov (%rbx),%rbx
49a2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
49b0(3): xor %r9d,%r9d
49b3(4): cmp $0x0,(%r8)
49b7(2): jz 0x14(%rip)
49b9(7): nop 0x0(%rax)
49c0(4): add $0x1,%r9
49c4(5): cmp $0x0,0x0(%r8,%r9,8)
49c9(2): jnz 0xfffffff7(%rip)
49cb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
49d0(4): sub $0x68,%rsp
49d4(3): mov %r8,%r10
49d7(3): xor %r9d,%r9d
49da(9): mov $0x28,%rax
49e3(5): mov %rax,0x58(%rsp)
49e8(2): xor %eax,%eax
49ea(3): mov %rsp,%r8
49ed(3): nop (%rax)
49f0(3): mov (%r10),%eax
49f3(3): cmp $0x2f,%eax
49f6(2): jnbe 0x44(%rip)
49f8(3): mov %eax,%r11d
49fb(4): add 0x10(%r10),%r11
49ff(3): add $0x8,%eax
4a02(3): mov %eax,(%r10)
4a05(3): mov (%r11),%rax
4a08(3): test %rax,%rax
4a0b(4): mov %rax,0x0(%r8,%r9,8)
4a0f(2): jz 0xc(%rip)
4a11(4): add $0x1,%r9
4a15(4): cmp $0xa,%r9
4a19(2): jnz 0xffffffd7(%rip)
4a1b(5): call 0xfffffb75(%rip)
4a20(5): mov 0x58(%rsp),%rax
4a25(9): xor $0x28,%rax
4a2e(2): jnz 0x7(%rip)
4a30(4): add $0x68,%rsp
4a34(1): ret near (%rsp)
4a35(5): call 0xffffcc1b(%rip)
4a3a(4): mov 0x8(%r10),%r11
4a3e(4): lea 0x8(%r11),%rax
4a42(4): mov %rax,0x8(%r10)
4a46(2): jmp 0xffffffbf(%rip)

"version_etc" :
4a50(1): push %rbp
4a51(1): push %rbx
4a52(6): mov $0x20,%r10d
4a58(3): xor %r11d,%r11d
4a5b(7): sub $0xb8,%rsp
4a62(9): mov $0x28,%rax
4a6b(5): mov %rax,0x78(%rsp)
4a70(2): xor %eax,%eax
4a72(8): lea 0xd0(%rsp),%rax
4a7a(8): mov %r8,0xa0(%rsp)
4a82(8): lea 0xd0(%rsp),%rbx
4a8a(5): lea 0x20(%rsp),%r8
4a8f(8): mov %r9,0xa8(%rsp)
4a97(8): mov $0x20,0x8(%rsp)
4a9f(5): mov %rax,0x10(%rsp)
4aa4(8): lea 0x80(%rsp),%rax
4aac(3): xor %r9d,%r9d
4aaf(5): mov %rax,0x18(%rsp)
4ab4(3): mov %rax,%rbp
4ab7(9): nop 0x0(%rax,%rax,1)
4ac0(4): cmp $0x2f,%r10d
4ac4(2): jnbe 0x58(%rip)
4ac6(3): mov %r10d,%eax
4ac9(6): mov $0x1,%r11d
4acf(4): add $0x8,%r10d
4ad3(3): add %rbp,%rax
4ad6(3): mov (%rax),%rax
4ad9(3): test %rax,%rax
4adc(4): mov %rax,0x0(%r8,%r9,8)
4ae0(2): jz 0xc(%rip)
4ae2(4): add $0x1,%r9
4ae6(4): cmp $0xa,%r9
4aea(2): jnz 0xffffffd6(%rip)
4aec(3): test %r11b,%r11b
4aef(2): jnz 0x26(%rip)
4af1(5): call 0xfffffa9f(%rip)
4af6(5): mov 0x78(%rsp),%rax
4afb(9): xor $0x28,%rax
4b04(2): jnz 0xc(%rip)
4b06(7): add $0xb8,%rsp
4b0d(1): pop %rbx
4b0e(1): pop %rbp
4b0f(1): ret near (%rsp)
4b10(5): call 0xffffcb40(%rip)
4b15(5): mov %r10d,0x8(%rsp)
4b1a(2): jmp 0xffffffd7(%rip)
4b1c(3): mov %rbx,%rax
4b1f(4): add $0x8,%rbx
4b23(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4b30(1): push %rbx
4b31(7): lea 0x3caa(%rip),%rsi
4b38(5): mov $0x5,%edx
4b3d(2): xor %edi,%edi
4b3f(5): call 0xffffcae1(%rip)
4b44(7): lea 0x3cac(%rip),%rdx
4b4b(3): mov %rax,%rsi
4b4e(5): mov $0x1,%edi
4b53(2): xor %eax,%eax
4b55(5): call 0xffffcc5b(%rip)
4b5a(7): lea 0x3cac(%rip),%rsi
4b61(5): mov $0x5,%edx
4b66(2): xor %edi,%edi
4b68(5): call 0xffffcab8(%rip)
4b6d(7): lea 0x350c(%rip),%rcx
4b74(7): lea 0x2ec3(%rip),%rdx
4b7b(3): mov %rax,%rsi
4b7e(5): mov $0x1,%edi
4b83(2): xor %eax,%eax
4b85(5): call 0xffffcc2b(%rip)
4b8a(7): mov 0x2064f7(%rip),%rbx
4b91(7): lea 0x3ea8(%rip),%rsi
4b98(2): xor %edi,%edi
4b9a(5): mov $0x5,%edx
4b9f(5): call 0xffffca81(%rip)
4ba4(3): mov %rbx,%rsi
4ba7(3): mov %rax,%rdi
4baa(1): pop %rbx
4bab(5): jmp 0xffffcb45(%rip)

"xmalloc" :
4bb0(1): push %rbx
4bb1(3): mov %rdi,%rbx
4bb4(5): call 0xffffcb9c(%rip)
4bb9(3): test %rax,%rax
4bbc(2): jnz 0x7(%rip)
4bbe(3): test %rbx,%rbx
4bc1(2): jnz 0x4(%rip)
4bc3(1): pop %rbx
4bc4(1): ret near (%rsp)
4bc5(5): call 0x23b(%rip)

"xnmalloc" :
4bd0(3): mov %rdi,%rax
4bd3(3): mul %rax,%rsi,%rdx
4bd6(3): mov %rax,%rdi
4bd9(3): seto %al
4bdc(3): test %rdi,%rdi
4bdf(2): js 0xc(%rip)
4be1(3): movzx %al,%eax
4be4(3): test %rax,%rax
4be7(2): jnz 0x4(%rip)
4be9(2): jmp 0xffffffc7(%rip)
4beb(4): sub $0x8,%rsp
4bef(5): call 0x211(%rip)

"xrealloc" :
4c10(3): test %rsi,%rsi
4c13(1): push %rbx
4c14(3): mov %rsi,%rbx
4c17(2): jnz 0x7(%rip)
4c19(3): test %rdi,%rdi
4c1c(2): jnz 0x1c(%rip)
4c1e(3): mov %rbx,%rsi
4c21(5): call 0xffffcb6f(%rip)
4c26(3): test %rax,%rax
4c29(2): jnz 0x7(%rip)
4c2b(3): test %rbx,%rbx
4c2e(2): jnz 0x13(%rip)
4c30(1): pop %rbx
4c31(1): ret near (%rsp)
4c32(6): nop 0x0(%rax,%rax,1)
4c38(5): call 0xffffc948(%rip)
4c3d(2): xor %eax,%eax
4c3f(1): pop %rbx
4c40(1): ret near (%rsp)
4c41(5): call 0x1bf(%rip)

"xnrealloc" :
4c50(3): mov %rsi,%rax
4c53(3): mul %rax,%rdx,%rdx
4c56(3): mov %rax,%rsi
4c59(3): seto %al
4c5c(3): test %rsi,%rsi
4c5f(2): js 0xc(%rip)
4c61(3): movzx %al,%eax
4c64(3): test %rax,%rax
4c67(2): jnz 0x4(%rip)
4c69(2): jmp 0xffffffa7(%rip)
4c6b(4): sub $0x8,%rsp
4c6f(5): call 0x191(%rip)

"x2nrealloc" :
4c80(3): test %rdi,%rdi
4c83(3): mov %rdx,%r9
4c86(3): mov (%rsi),%rcx
4c89(2): jz 0x37(%rip)
4c8b(2): xor %edx,%edx
4c8d(a): mov $0x6148914691236517204,%rax
4c97(3): div %r9,%rax
4c9a(3): cmp %rcx,%rax
4c9d(2): jbe 0x3e(%rip)
4c9f(3): mov %rcx,%rax
4ca2(3): shr $0x1,%rax
4ca5(5): lea 0x1(%rax,%rcx,1),%rcx
4caa(3): mov %rcx,(%rsi)
4cad(4): imul %r9,%rcx
4cb1(3): mov %rcx,%rsi
4cb4(5): jmp 0xffffff5c(%rip)
4cb9(7): nop 0x0(%rax)
4cc0(3): test %rcx,%rcx
4cc3(2): jz 0x25(%rip)
4cc5(3): mov %rcx,%rax
4cc8(3): mul %rax,%r9,%rdx
4ccb(3): seto %dl
4cce(3): test %rax,%rax
4cd1(3): movzx %dl,%edx
4cd4(2): js 0x7(%rip)
4cd6(3): test %rdx,%rdx
4cd9(2): jz 0xffffffd1(%rip)
4cdb(4): sub $0x8,%rsp
4cdf(5): call 0x121(%rip)
4ce4(4): nop 0x0(%rax)
4ce8(2): xor %edx,%edx
4cea(5): mov $0x80,%eax
4cef(3): xor %r8d,%r8d
4cf2(3): div %r9,%rax
4cf5(3): test %rax,%rax
4cf8(4): setz %r8b
4cfc(4): lea 0x0(%r8,%rax,1),%rcx
4d00(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4d10(3): test %rdi,%rdi
4d13(3): mov (%rsi),%rax
4d16(2): jz 0x2a(%rip)
4d18(a): mov $0x6148914691236517203,%rdx
4d22(3): cmp %rdx,%rax
4d25(2): jnbe 0x2c(%rip)
4d27(3): mov %rax,%rdx
4d2a(3): shr $0x1,%rdx
4d2d(5): lea 0x1(%rdx,%rax,1),%rax
4d32(3): mov %rax,(%rsi)
4d35(3): mov %rax,%rsi
4d38(5): jmp 0xfffffed8(%rip)
4d3d(3): nop (%rax)
4d40(3): test %rax,%rax
4d43(5): mov $0x80,%edx
4d48(4): cmove %rdx,%rax
4d4c(3): test %rax,%rax
4d4f(2): jns 0xffffffe3(%rip)
4d51(4): sub $0x8,%rsp
4d55(5): call 0xab(%rip)

"xzalloc" :
4d60(1): push %rbx
4d61(3): mov %rdi,%rbx
4d64(5): call 0xfffffe4c(%rip)
4d69(3): mov %rbx,%rdx
4d6c(2): xor %esi,%esi
4d6e(3): mov %rax,%rdi
4d71(1): pop %rbx
4d72(5): jmp 0xffffc95e(%rip)

"xcalloc" :
4d80(3): mov %rdi,%rax
4d83(4): sub $0x8,%rsp
4d87(3): mul %rax,%rsi,%rdx
4d8a(3): seto %dl
4d8d(3): test %rax,%rax
4d90(2): js 0x19(%rip)
4d92(3): movzx %dl,%edx
4d95(3): test %rdx,%rdx
4d98(2): jnz 0x11(%rip)
4d9a(5): call 0xffffc966(%rip)
4d9f(3): test %rax,%rax
4da2(2): jz 0x7(%rip)
4da4(4): add $0x8,%rsp
4da8(1): ret near (%rsp)
4da9(5): call 0x57(%rip)

"xmemdup" :
4db0(1): push %rbp
4db1(1): push %rbx
4db2(3): mov %rdi,%rbp
4db5(3): mov %rsi,%rdi
4db8(3): mov %rsi,%rbx
4dbb(4): sub $0x8,%rsp
4dbf(5): call 0xfffffdf1(%rip)
4dc4(4): add $0x8,%rsp
4dc8(3): mov %rbx,%rdx
4dcb(3): mov %rbp,%rsi
4dce(1): pop %rbx
4dcf(1): pop %rbp
4dd0(3): mov %rax,%rdi
4dd3(5): jmp 0xffffc94d(%rip)

"xstrdup" :
4de0(1): push %rbx
4de1(3): mov %rdi,%rbx
4de4(5): call 0xffffc85c(%rip)
4de9(3): mov %rbx,%rdi
4dec(4): lea 0x1(%rax),%rsi
4df0(1): pop %rbx
4df1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4e00(7): lea 0x3ce8(%rip),%rsi
4e07(4): sub $0x8,%rsp
4e0b(5): mov $0x5,%edx
4e10(2): xor %edi,%edi
4e12(5): call 0xffffc80e(%rip)
4e17(6): mov 0x2061fb(%rip),%edi
4e1d(7): lea 0x3442(%rip),%rdx
4e24(3): mov %rax,%rcx
4e27(2): xor %esi,%esi
4e29(2): xor %eax,%eax
4e2b(5): call 0xffffc9a5(%rip)
4e30(5): call 0xffffc760(%rip)

"xreadlink" :
4e40(1): push %rbx
4e41(5): call 0x63f(%rip)
4e46(3): test %rax,%rax
4e49(3): mov %rax,%rbx
4e4c(2): jz 0xc(%rip)
4e4e(3): mov %rbx,%rax
4e51(1): pop %rbx
4e52(1): ret near (%rsp)
4e53(5): nop 0x0(%rax,%rax,1)
4e58(5): call 0xffffc748(%rip)
4e5d(3): cmp $0xc,(%rax)
4e60(2): jnz 0xffffffee(%rip)
4e62(5): call 0xffffff9e(%rip)

"xstrtoumax" :
4e70(2): push %r15
4e72(2): push %r14
4e74(2): push %r13
4e76(2): push %r12
4e78(1): push %rbp
4e79(1): push %rbx
4e7a(4): sub $0x28,%rsp
4e7e(9): mov $0x28,%rax
4e87(5): mov %rax,0x18(%rsp)
4e8c(2): xor %eax,%eax
4e8e(3): cmp $0x24,%edx
4e91(6): jnbe 0x364(%rip)
4e97(5): lea 0x10(%rsp),%rax
4e9c(3): mov %rsi,%r15
4e9f(3): test %rsi,%rsi
4ea2(3): mov %rdi,%rbp
4ea5(4): mov %edx,0x8(%rsp)
4ea9(3): mov %rcx,%r14
4eac(3): mov %r8,%r13
4eaf(4): cmove %rax,%r15
4eb3(5): call 0xffffc6ed(%rip)
4eb8(6): mov $0x0,(%rax)
4ebe(3): mov %rax,%r12
4ec1(4): movzx 0x0(%rbp),%ebx
4ec5(5): call 0xffffc9bb(%rip)
4eca(4): mov 0x8(%rsp),%edx
4ece(3): mov (%rax),%rsi
4ed1(3): mov %rbp,%rax
4ed4(2): jmp 0x13(%rip)
4ed6(a): nop 0x0(%rax,%rax,1)
4ee0(4): add $0x1,%rax
4ee4(3): movzx (%rax),%ebx
4ee7(3): movzx %bl,%ecx
4eea(5): test $0x20,0x1(%rsi,%rcx,2)
4eef(2): jnz 0xfffffff1(%rip)
4ef1(3): cmp $0x2d,%bl
4ef4(2): jz 0x54(%rip)
4ef6(2): xor %ecx,%ecx
4ef8(3): mov %r15,%rsi
4efb(3): mov %rbp,%rdi
4efe(5): call 0xffffc7c2(%rip)
4f03(3): mov (%r15),%rcx
4f06(3): mov %rax,%rbx
4f09(3): cmp %rbp,%rcx
4f0c(2): jz 0x2c(%rip)
4f0e(4): mov (%r12),%eax
4f12(2): test %eax,%eax
4f14(2): jz 0x64(%rip)
4f16(3): cmp $0x22,%eax
4f19(5): mov $0x1,%ebp
4f1e(2): jnz 0x2a(%rip)
4f20(3): test %r13,%r13
4f23(2): jz 0xb(%rip)
4f25(4): movzx (%rcx),%r12d
4f29(3): test %r12b,%r12b
4f2c(2): jnz 0x7b(%rip)
4f2e(3): mov %rbx,(%r14)
4f31(2): jmp 0x1c(%rip)
4f33(5): nop 0x0(%rax,%rax,1)
4f38(3): test %r13,%r13
4f3b(5): mov %rcx,0x8(%rsp)
4f40(2): jnz 0x40(%rip)
4f42(6): nop 0x0(%rax,%rax,1)
4f48(5): mov $0x4,%ebp
4f4d(5): mov 0x18(%rsp),%rdi
4f52(9): xor $0x28,%rdi
4f5b(2): mov %ebp,%eax
4f5d(6): jnz 0x293(%rip)
4f63(4): add $0x28,%rsp
4f67(1): pop %rbx
4f68(1): pop %rbp
4f69(2): pop %r12
4f6b(2): pop %r13
4f6d(2): pop %r14
4f6f(2): pop %r15
4f71(1): ret near (%rsp)
4f72(6): nop 0x0(%rax,%rax,1)
4f78(2): xor %ebp,%ebp
4f7a(2): jmp 0xffffffa6(%rip)
4f7c(4): nop 0x0(%rax)
4f80(5): movzx 0x0(%rbp),%r12d
4f85(3): test %r12b,%r12b
4f88(2): jz 0xffffffc0(%rip)
4f8a(4): movsx %r12b,%esi
4f8e(3): mov %r13,%rdi
4f91(2): xor %ebp,%ebp
4f93(5): call 0xffffc6ed(%rip)
4f98(3): test %rax,%rax
4f9b(5): mov $0x1,%ebx
4fa0(5): mov 0x8(%rsp),%rcx
4fa5(2): jz 0xffffffa3(%rip)
4fa7(4): movsx %r12b,%esi
4fab(3): mov %r13,%rdi
4fae(5): mov %rcx,0x8(%rsp)
4fb3(5): call 0xffffc6cd(%rip)
4fb8(3): test %rax,%rax
4fbb(5): mov 0x8(%rsp),%rcx
4fc0(6): jz 0xcc(%rip)
4fc6(5): lea 0xffffffbb(%r12),%eax
4fcb(2): cmp $0x2f,%al
4fcd(2): jnbe 0x53(%rip)
4fcf(a): mov $0x142129060940101,%rdx
4fd9(4): bt %rax,%rdx
4fdd(2): jnb 0x43(%rip)
4fdf(5): mov $0x30,%esi
4fe4(3): mov %r13,%rdi
4fe7(5): mov %rcx,0x8(%rsp)
4fec(5): call 0xffffc694(%rip)
4ff1(3): test %rax,%rax
4ff4(5): mov 0x8(%rsp),%rcx
4ff9(2): jz 0x27(%rip)
4ffb(4): movzx 0x1(%rcx),%eax
4fff(2): cmp $0x44,%al
5001(2): jz 0xe(%rip)
5003(2): cmp $0x69,%al
5005(6): jz 0x1d3(%rip)
500b(2): cmp $0x42,%al
500d(2): jnz 0x13(%rip)
500f(5): mov $0x2,%edi
5014(5): mov $0x3e8,%esi
5019(2): jmp 0x11(%rip)
501b(5): nop 0x0(%rax,%rax,1)
5020(5): mov $0x1,%edi
5025(5): mov $0x400,%esi
502a(4): sub $0x42,%r12d
502e(4): cmp $0x35,%r12b
5032(2): jnbe 0x5a(%rip)
5034(7): lea 0x3b0d(%rip),%rdx
503b(4): movzx %r12b,%r12d
503f(4): movsxd 0x0(%rdx,%r12,4),%rax
5043(3): add %rdx,%rax
5046(2): jmp %rax
5048(3): mov %rbx,%rax
504b(3): mul %rax,%rsi,%rdx
504e(6): jo 0x1f3(%rip)
5054(3): xor %r8d,%r8d
5057(3): mul %rax,%rsi,%rdx
505a(6): jo 0x1d8(%rip)
5060(3): mov %rax,%rbx
5063(3): or %r8d,%ebp
5066(a): nop 0x0(%rax,%rax,1)
5070(3): movsxd %edi,%rdi
5073(2): mov %ebp,%eax
5075(3): add %rdi,%rcx
5078(3): or $0x2,%eax
507b(3): mov %rcx,(%r15)
507e(3): cmp $0x0,(%rcx)
5081(3): mov %rbx,(%r14)
5084(3): cmovne %eax,%ebp
5087(5): jmp 0xfffffec6(%rip)
508c(3): mov %rbx,(%r14)
508f(3): or $0x2,%ebp
5092(5): jmp 0xfffffebb(%rip)
5097(5): mov $0x2,%edx
509c(3): mov %rdx,%rax
509f(3): mul %rax,%rbx,%rdx
50a2(6): jo 0x9c(%rip)
50a8(3): add %rbx,%rbx
50ab(2): jmp 0xffffffc5(%rip)
50ad(5): mov $0x200,%edx
50b2(3): mov %rdx,%rax
50b5(3): mul %rax,%rbx,%rdx
50b8(6): jo 0x86(%rip)
50be(4): shl/sal $0x9,%rbx
50c2(2): jmp 0xffffffae(%rip)
50c4(6): mov $0x7,%r8d
50ca(3): xor %r9d,%r9d
50cd(3): nop (%rax)
50d0(3): mov %rbx,%rax
50d3(3): mul %rax,%rsi,%rdx
50d6(3): mov %rax,%rbx
50d9(6): jo 0x195(%rip)
50df(4): sub $0x1,%r8d
50e3(2): jnz 0xffffffed(%rip)
50e5(3): or %r9d,%ebp
50e8(2): jmp 0xffffff88(%rip)
50ea(6): mov $0x8,%r8d
50f0(3): xor %r9d,%r9d
50f3(5): nop 0x0(%rax,%rax,1)
50f8(3): mov %rbx,%rax
50fb(3): mul %rax,%rsi,%rdx
50fe(3): mov %rax,%rbx
5101(6): jo 0x14f(%rip)
5107(4): sub $0x1,%r8d
510b(2): jnz 0xffffffed(%rip)
510d(2): jmp 0xffffffd8(%rip)
510f(6): mov $0x4,%r8d
5115(3): xor %r9d,%r9d
5118(3): mov %rbx,%rax
511b(3): mul %rax,%rsi,%rdx
511e(3): mov %rax,%rbx
5121(6): jo 0x102(%rip)
5127(4): sub $0x1,%r8d
512b(2): jnz 0xffffffed(%rip)
512d(2): jmp 0xffffffb8(%rip)
512f(3): mov %rbx,%rax
5132(3): mul %rax,%rsi,%rdx
5135(3): mov %rax,%rbx
5138(6): jno 0xffffff38(%rip)
513e(5): mov $0x1,%ebp
5143(4): or $0xffffffff,%rbx
5147(5): jmp 0xffffff29(%rip)
514c(4): nop 0x0(%rax)
5150(6): mov $0x5,%r8d
5156(3): xor %r9d,%r9d
5159(3): mov %rbx,%rax
515c(3): mul %rax,%rsi,%rdx
515f(3): mov %rax,%rbx
5162(6): jo 0xfd(%rip)
5168(4): sub $0x1,%r8d
516c(2): jnz 0xffffffed(%rip)
516e(5): jmp 0xffffff77(%rip)
5173(6): mov $0x6,%r8d
5179(3): xor %r9d,%r9d
517c(3): mov %rbx,%rax
517f(3): mul %rax,%rsi,%rdx
5182(3): mov %rax,%rbx
5185(6): jo 0x8f(%rip)
518b(4): sub $0x1,%r8d
518f(2): jnz 0xffffffed(%rip)
5191(5): jmp 0xffffff54(%rip)
5196(5): mov $0x400,%edx
519b(3): mov %rdx,%rax
519e(3): mul %rax,%rbx,%rdx
51a1(2): jo 0xffffff9d(%rip)
51a3(4): shl/sal $0xa,%rbx
51a7(5): jmp 0xfffffec9(%rip)
51ac(3): mov %rbx,%rax
51af(3): mul %rax,%rsi,%rdx
51b2(6): jo 0xcb(%rip)
51b8(3): xor %r8d,%r8d
51bb(3): mul %rax,%rsi,%rdx
51be(6): jno 0xfffffe99(%rip)
51c4(6): mov $0x1,%r8d
51ca(4): or $0xffffffff,%rax
51ce(5): jmp 0xfffffe89(%rip)
51d3(5): nop 0x0(%rax,%rax,1)
51d8(2): xor %edi,%edi
51da(4): cmp $0x42,0x2(%rcx)
51de(5): mov $0x400,%esi
51e3(4): setz %dil
51e7(4): lea 0x1(%rdi,%rdi,1),%edi
51eb(5): jmp 0xfffffe3f(%rip)
51f0(5): call 0xffffc460(%rip)
51f5(7): lea 0x3a24(%rip),%rcx
51fc(7): lea 0x38fd(%rip),%rsi
5203(7): lea 0x3916(%rip),%rdi
520a(5): mov $0x54,%edx
520f(5): call 0xffffc4a1(%rip)
5214(6): mov $0x1,%r9d
521a(4): or $0xffffffff,%rbx
521e(5): jmp 0xffffff6d(%rip)
5223(6): mov $0x1,%r9d
5229(4): or $0xffffffff,%rbx
522d(5): jmp 0xfffffefa(%rip)
5232(6): mov $0x1,%r8d
5238(4): or $0xffffffff,%rbx
523c(5): jmp 0xfffffe27(%rip)
5241(4): or $0xffffffff,%rax
5245(6): mov $0x1,%r8d
524b(5): jmp 0xfffffe0c(%rip)
5250(6): mov $0x1,%r9d
5256(4): or $0xffffffff,%rbx
525a(5): jmp 0xfffffead(%rip)
525f(6): mov $0x1,%r9d
5265(4): or $0xffffffff,%rbx
5269(5): jmp 0xfffffeff(%rip)
526e(6): mov $0x1,%r9d
5274(4): or $0xffffffff,%rbx
5278(5): jmp 0xfffffe67(%rip)
527d(6): mov $0x1,%r8d
5283(4): or $0xffffffff,%rax
5287(5): jmp 0xffffff34(%rip)

"rpl_asprintf" :
5290(7): sub $0xd8,%rsp
5297(2): test %al,%al
5299(5): mov %rdx,0x30(%rsp)
529e(5): mov %rcx,0x38(%rsp)
52a3(5): mov %r8,0x40(%rsp)
52a8(5): mov %r9,0x48(%rsp)
52ad(2): jz 0x39(%rip)
52af(5): movaps %xmm0,0x50(%rsp)
52b4(5): movaps %xmm1,0x60(%rsp)
52b9(5): movaps %xmm2,0x70(%rsp)
52be(8): movaps %xmm3,0x80(%rsp)
52c6(8): movaps %xmm4,0x90(%rsp)
52ce(8): movaps %xmm5,0xa0(%rsp)
52d6(8): movaps %xmm6,0xb0(%rsp)
52de(8): movaps %xmm7,0xc0(%rsp)
52e6(9): mov $0x28,%rax
52ef(5): mov %rax,0x18(%rsp)
52f4(2): xor %eax,%eax
52f6(8): lea 0xe0(%rsp),%rax
52fe(3): mov %rsp,%rdx
5301(5): mov %rax,0x8(%rsp)
5306(5): lea 0x20(%rsp),%rax
530b(7): mov $0x10,(%rsp)
5312(8): mov $0x30,0x4(%rsp)
531a(5): mov %rax,0x10(%rsp)
531f(5): call 0xc1(%rip)
5324(5): mov 0x18(%rsp),%rcx
5329(9): xor $0x28,%rcx
5332(2): jnz 0xa(%rip)
5334(7): add $0xd8,%rsp
533b(1): ret near (%rsp)
533c(5): call 0xffffc314(%rip)

"rpl_mbrtowc" :
5350(2): push %r13
5352(2): push %r12
5354(3): mov %rsi,%r13
5357(1): push %rbp
5358(1): push %rbx
5359(3): mov %rdi,%rbx
535c(3): mov %rdx,%r12
535f(4): sub $0x18,%rsp
5363(9): mov $0x28,%rax
536c(5): mov %rax,0x8(%rsp)
5371(2): xor %eax,%eax
5373(5): lea 0x4(%rsp),%rax
5378(3): test %rdi,%rdi
537b(4): cmove %rax,%rbx
537f(3): mov %rbx,%rdi
5382(5): call 0xffffc2ee(%rip)
5387(4): cmp $0xfffffffd,%rax
538b(3): mov %rax,%rbp
538e(2): jbe 0x22(%rip)
5390(3): test %r12,%r12
5393(2): jz 0x1d(%rip)
5395(2): xor %edi,%edi
5397(5): call 0x399(%rip)
539c(2): test %al,%al
539e(2): jnz 0x12(%rip)
53a0(5): movzx 0x0(%r13),%eax
53a5(5): mov $0x1,%ebp
53aa(2): mov %eax,(%rbx)
53ac(4): nop 0x0(%rax)
53b0(5): mov 0x8(%rsp),%rdx
53b5(9): xor $0x28,%rdx
53be(3): mov %rbp,%rax
53c1(2): jnz 0xd(%rip)
53c3(4): add $0x18,%rsp
53c7(1): pop %rbx
53c8(1): pop %rbp
53c9(2): pop %r12
53cb(2): pop %r13
53cd(1): ret near (%rsp)
53ce(5): call 0xffffc282(%rip)

"rpl_vasprintf" :
53e0(1): push %rbx
53e1(3): mov %rsi,%rax
53e4(3): mov %rdi,%rbx
53e7(2): xor %edi,%edi
53e9(4): sub $0x10,%rsp
53ed(9): mov $0x28,%rcx
53f6(5): mov %rcx,0x8(%rsp)
53fb(2): xor %ecx,%ecx
53fd(3): mov %rsp,%rsi
5400(3): mov %rdx,%rcx
5403(3): mov %rax,%rdx
5406(5): call 0x4ea(%rip)
540b(3): test %rax,%rax
540e(2): jz 0x44(%rip)
5410(4): mov (%rsp),%rdx
5414(7): cmp $0x7fffffff,%rdx
541b(2): jnbe 0x1d(%rip)
541d(3): mov %rax,(%rbx)
5420(2): mov %edx,%eax
5422(5): mov 0x8(%rsp),%rbx
5427(9): xor $0x28,%rbx
5430(2): jnz 0x29(%rip)
5432(4): add $0x10,%rsp
5436(1): pop %rbx
5437(1): ret near (%rsp)
5438(3): mov %rax,%rdi
543b(5): call 0xffffc145(%rip)
5440(5): call 0xffffc160(%rip)
5445(6): mov $0x4b,(%rax)
544b(5): mov $0xffffffff,%eax
5450(2): jmp 0xffffffd2(%rip)
5452(5): mov $0xffffffff,%eax
5457(2): jmp 0xffffffcb(%rip)
5459(5): call 0xffffc1f7(%rip)

"careadlinkatcwd" :
5460(3): cmp $0x9c,%edi
5463(2): jnz 0x13(%rip)
5465(3): mov %rsi,%rax
5468(3): mov %rdx,%rsi
546b(3): mov %rcx,%rdx
546e(3): mov %rax,%rdi
5471(5): jmp 0xffffc16f(%rip)
5476(4): sub $0x8,%rsp
547a(5): call 0xffffc116(%rip)

"areadlink" :
5480(7): lea 0xffffffd9(%rip),%r9
5487(3): mov %rdi,%rsi
548a(3): xor %r8d,%r8d
548d(2): xor %ecx,%ecx
548f(2): xor %edx,%edx
5491(5): mov $0xffffff9c,%edi
5496(5): jmp 0xa(%rip)

"careadlinkat" :
54a0(2): push %r15
54a2(2): push %r14
54a4(3): mov %r9,%r15
54a7(2): push %r13
54a9(2): push %r12
54ab(3): mov %edi,%r13d
54ae(1): push %rbp
54af(1): push %rbx
54b0(3): mov %r8,%rbp
54b3(7): sub $0x428,%rsp
54ba(9): mov $0x28,%rax
54c3(8): mov %rax,0x418(%rsp)
54cb(2): xor %eax,%eax
54cd(7): lea 0x20572c(%rip),%rax
54d4(3): test %r8,%r8
54d7(4): mov %rsi,(%rsp)
54db(4): cmove %rax,%rbp
54df(3): test %rcx,%rcx
54e2(6): jnz 0x11e(%rip)
54e8(5): lea 0x10(%rsp),%r12
54ed(5): mov $0x400,%ebx
54f2(3): mov %r12,%r14
54f5(2): jmp 0x1c(%rip)
54f7(9): nop 0x0(%rax,%rax,1)
5500(3): add %rbx,%rbx
5503(3): mov %rbx,%rdi
5506(3): call 0x0(%rbp)
5509(3): test %rax,%rax
550c(3): mov %rax,%r14
550f(2): jz 0x62(%rip)
5511(3): mov %rbx,%rcx
5514(3): mov %r14,%rdx
5517(4): mov (%rsp),%rsi
551b(3): mov %r13d,%edi
551e(3): call %r15
5521(3): test %rax,%rax
5524(3): mov %rax,%rcx
5527(6): js 0x99(%rip)
552d(3): cmp %rcx,%rbx
5530(6): jnbe 0xe0(%rip)
5536(3): cmp %r14,%r12
5539(2): jz 0x8(%rip)
553b(3): mov %r14,%rdi
553e(3): call 0x10(%rbp)
5541(a): mov $0x4611686018427387904,%rax
554b(3): cmp %rax,%rbx
554e(2): jbe 0xffffffb2(%rip)
5550(3): test %rbx,%rbx
5553(6): js 0xf5(%rip)
5559(a): mov $0x-9223372036854775808,%rbx
5563(3): mov %rbx,%rdi
5566(3): call 0x0(%rbp)
5569(3): test %rax,%rax
556c(3): mov %rax,%r14
556f(2): jnz 0xffffffa2(%rip)
5571(4): mov 0x18(%rbp),%rax
5575(3): test %rax,%rax
5578(2): jz 0x7(%rip)
557a(3): mov %rbx,%rdi
557d(2): call %rax
557f(5): call 0xffffc021(%rip)
5584(3): xor %r14d,%r14d
5587(6): mov $0xc,(%rax)
558d(8): mov 0x418(%rsp),%rsi
5595(9): xor $0x28,%rsi
559e(3): mov %r14,%rax
55a1(6): jnz 0x102(%rip)
55a7(7): add $0x428,%rsp
55ae(1): pop %rbx
55af(1): pop %rbp
55b0(2): pop %r12
55b2(2): pop %r13
55b4(2): pop %r14
55b6(2): pop %r15
55b8(1): ret near (%rsp)
55b9(7): nop 0x0(%rax)
55c0(5): mov %rax,0x8(%rsp)
55c5(5): call 0xffffbfdb(%rip)
55ca(2): mov (%rax),%edx
55cc(5): mov 0x8(%rsp),%rcx
55d1(3): cmp $0x22,%edx
55d4(6): jz 0xffffff59(%rip)
55da(3): cmp %r14,%r12
55dd(4): mov %edx,0x8(%rsp)
55e1(4): mov %rax,(%rsp)
55e5(6): jz 0xb6(%rip)
55eb(3): mov %r14,%rdi
55ee(3): xor %r14d,%r14d
55f1(3): call 0x10(%rbp)
55f4(4): mov (%rsp),%rax
55f8(4): mov 0x8(%rsp),%edx
55fc(2): mov %edx,(%rax)
55fe(2): jmp 0xffffff8f(%rip)
5600(3): mov %rdx,%r12
5603(3): mov %rcx,%rbx
5606(5): jmp 0xfffffeec(%rip)
560b(5): nop 0x0(%rax,%rax,1)
5610(5): lea 0x10(%rsp),%r15
5615(4): lea 0x1(%rcx),%r13
5619(5): mov $0x0,0x0(%r14,%rcx,1)
561e(3): cmp %r15,%r14
5621(2): jnz 0x3f(%rip)
5623(3): mov %r13,%rdi
5626(3): call 0x0(%rbp)
5629(3): test %rax,%rax
562c(3): mov %rax,%r14
562f(2): jz 0x64(%rip)
5631(3): mov %r13,%rdx
5634(3): mov %r15,%rsi
5637(3): mov %rax,%rdi
563a(5): call 0xffffc0e6(%rip)
563f(5): jmp 0xffffff4e(%rip)
5644(4): nop 0x0(%rax)
5648(5): call 0xffffbf58(%rip)
564d(3): xor %r14d,%r14d
5650(6): mov $0x24,(%rax)
5656(5): jmp 0xffffff37(%rip)
565b(5): nop 0x0(%rax,%rax,1)
5660(3): cmp %r13,%rbx
5663(6): jbe 0xffffff2a(%rip)
5669(3): cmp %r14,%r12
566c(6): jz 0xffffff21(%rip)
5672(4): mov 0x8(%rbp),%rax
5676(3): test %rax,%rax
5679(6): jz 0xffffff14(%rip)
567f(3): mov %r14,%rdi
5682(3): mov %r13,%rsi
5685(2): call %rax
5687(3): test %rax,%rax
568a(4): cmovne %rax,%r14
568e(5): jmp 0xfffffeff(%rip)
5693(3): mov %r13,%rbx
5696(5): jmp 0xfffffedb(%rip)
569b(3): xor %r14d,%r14d
569e(5): jmp 0xfffffeef(%rip)
56a3(5): call 0xffffbfad(%rip)

"close_stream" :
56b0(2): push %r12
56b2(1): push %rbp
56b3(3): mov %rdi,%rbp
56b6(1): push %rbx
56b7(5): call 0xffffbf19(%rip)
56bc(3): mov 0x0(%rbp),%ebx
56bf(3): mov %rbp,%rdi
56c2(3): mov %rax,%r12
56c5(5): call 0x10b(%rip)
56ca(3): and $0x20,%ebx
56cd(2): test %ebx,%ebx
56cf(2): jnz 0x19(%rip)
56d1(2): test %eax,%eax
56d3(2): jz 0xc(%rip)
56d5(3): test %r12,%r12
56d8(5): mov $0xffffffff,%eax
56dd(2): jz 0x3b(%rip)
56df(1): pop %rbx
56e0(1): pop %rbp
56e1(2): pop %r12
56e3(1): ret near (%rsp)
56e4(4): nop 0x0(%rax)
56e8(2): test %eax,%eax
56ea(2): jnz 0x1e(%rip)
56ec(5): call 0xffffbeb4(%rip)
56f1(6): mov $0x0,(%rax)
56f7(5): mov $0xffffffff,%eax
56fc(1): pop %rbx
56fd(1): pop %rbp
56fe(2): pop %r12
5700(1): ret near (%rsp)
5701(7): nop 0x0(%rax)
5708(1): pop %rbx
5709(5): mov $0xffffffff,%eax
570e(1): pop %rbp
570f(2): pop %r12
5711(1): ret near (%rsp)
5712(6): nop 0x0(%rax,%rax,1)
5718(5): call 0xffffbe88(%rip)
571d(3): cmp $0x9,(%rax)
5720(1): pop %rbx
5721(1): pop %rbp
5722(2): pop %r12
5724(3): setnz %al
5727(3): movzx %al,%eax
572a(2): neg %eax
572c(1): ret near (%rsp)

"hard_locale" :
5730(4): sub $0x8,%rsp
5734(2): xor %esi,%esi
5736(5): call 0xffffc06a(%rip)
573b(3): mov %rax,%rdx
573e(5): mov $0x1,%eax
5743(3): test %rdx,%rdx
5746(2): jz 0x1f(%rip)
5748(7): lea 0x34dc(%rip),%rdi
574f(5): mov $0x2,%ecx
5754(3): mov %rdx,%rsi
5757(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5759(3): setnbe %cl
575c(3): sbb $0x0,%cl
575f(2): xor %eax,%eax
5761(2): test %cl,%cl
5763(2): jnz 0xd(%rip)
5765(4): add $0x8,%rsp
5769(1): ret near (%rsp)
576a(6): nop 0x0(%rax,%rax,1)
5770(7): lea 0x34b6(%rip),%rdi
5777(5): mov $0x6,%ecx
577c(3): mov %rdx,%rsi
577f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5781(3): setnbe %al
5784(2): sbb $0x0,%al
5786(2): test %al,%al
5788(3): setnz %al
578b(4): add $0x8,%rsp
578f(1): ret near (%rsp)

"locale_charset" :
5790(4): sub $0x8,%rsp
5794(5): mov $0xe,%edi
5799(5): call 0xffffbfd7(%rip)
579e(3): test %rax,%rax
57a1(2): jz 0x1f(%rip)
57a3(3): cmp $0x0,(%rax)
57a6(7): lea 0x3486(%rip),%rdx
57ad(4): cmove %rdx,%rax
57b1(4): add $0x8,%rsp
57b5(1): ret near (%rsp)
57b6(a): nop 0x0(%rax,%rax,1)
57c0(7): lea 0x346c(%rip),%rax
57c7(4): add $0x8,%rsp
57cb(1): ret near (%rsp)

"rpl_fclose" :
57d0(2): push %r12
57d2(1): push %rbp
57d3(1): push %rbx
57d4(3): mov %rdi,%rbx
57d7(5): call 0xffffbf59(%rip)
57dc(2): test %eax,%eax
57de(3): mov %rbx,%rdi
57e1(2): js 0x56(%rip)
57e3(5): call 0xffffbf9d(%rip)
57e8(2): test %eax,%eax
57ea(2): jnz 0x2e(%rip)
57ec(3): mov %rbx,%rdi
57ef(5): call 0x61(%rip)
57f4(2): test %eax,%eax
57f6(2): jz 0x3e(%rip)
57f8(5): call 0xffffbda8(%rip)
57fd(3): mov (%rax),%r12d
5800(3): mov %rbx,%rdi
5803(3): mov %rax,%rbp
5806(5): call 0xffffbdfa(%rip)
580b(3): test %r12d,%r12d
580e(2): jnz 0x32(%rip)
5810(1): pop %rbx
5811(1): pop %rbp
5812(2): pop %r12
5814(1): ret near (%rsp)
5815(3): nop (%rax)
5818(3): mov %rbx,%rdi
581b(5): call 0xffffbf15(%rip)
5820(2): xor %esi,%esi
5822(5): mov $0x1,%edx
5827(2): mov %eax,%edi
5829(5): call 0xffffbe77(%rip)
582e(4): cmp $0xffffffff,%rax
5832(2): jnz 0xffffffba(%rip)
5834(3): mov %rbx,%rdi
5837(1): pop %rbx
5838(1): pop %rbp
5839(2): pop %r12
583b(5): jmp 0xffffbdc5(%rip)
5840(4): mov %r12d,0x0(%rbp)
5844(5): mov $0xffffffff,%eax
5849(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5850(3): test %rdi,%rdi
5853(1): push %rbx
5854(3): mov %rdi,%rbx
5857(2): jz 0x13(%rip)
5859(5): call 0xffffbf27(%rip)
585e(2): test %eax,%eax
5860(2): jz 0xa(%rip)
5862(6): test $0x100,(%rbx)
5868(2): jnz 0x10(%rip)
586a(3): mov %rbx,%rdi
586d(1): pop %rbx
586e(5): jmp 0xffffbef2(%rip)
5873(5): nop 0x0(%rax,%rax,1)
5878(3): mov %rbx,%rdi
587b(5): mov $0x1,%edx
5880(2): xor %esi,%esi
5882(5): call 0xe(%rip)
5887(3): mov %rbx,%rdi
588a(1): pop %rbx
588b(5): jmp 0xffffbed5(%rip)

"rpl_fseeko" :
5890(4): mov 0x8(%rdi),%rax
5894(4): cmp %rax,0x10(%rdi)
5898(2): jz 0x8(%rip)
589a(5): jmp 0xffffbf56(%rip)
589f(1): nop 
58a0(4): mov 0x20(%rdi),%rax
58a4(4): cmp %rax,0x28(%rdi)
58a8(2): jnz 0xfffffff2(%rip)
58aa(5): cmp $0x0,0x48(%rdi)
58af(2): jnz 0xffffffeb(%rip)
58b1(2): push %r12
58b3(1): push %rbp
58b4(3): mov %edx,%r12d
58b7(1): push %rbx
58b8(3): mov %rsi,%rbp
58bb(3): mov %rdi,%rbx
58be(5): call 0xffffbe72(%rip)
58c3(3): mov %r12d,%edx
58c6(3): mov %rbp,%rsi
58c9(2): mov %eax,%edi
58cb(5): call 0xffffbdd5(%rip)
58d0(4): cmp $0xffffffff,%rax
58d4(2): jz 0xe(%rip)
58d6(3): and $0xef,(%rbx)
58d9(7): mov %rax,0x90(%rbx)
58e0(2): xor %eax,%eax
58e2(1): pop %rbx
58e3(1): pop %rbp
58e4(2): pop %r12
58e6(1): ret near (%rsp)

"vasnprintf" :
58f0(1): push %rbp
58f1(3): mov %rsp,%rbp
58f4(2): push %r15
58f6(2): push %r14
58f8(2): push %r13
58fa(2): push %r12
58fc(7): lea 0xfffffc50(%rbp),%r14
5903(1): push %rbx
5904(3): mov %rdx,%rbx
5907(3): mov %rcx,%r12
590a(3): mov %r14,%rdx
590d(7): sub $0x408,%rsp
5914(7): mov %rsi,0xfffffbe8(%rbp)
591b(7): lea 0xfffffd40(%rbp),%rsi
5922(7): mov %rdi,0xfffffc18(%rbp)
5929(3): mov %rbx,%rdi
592c(7): mov %r14,0xfffffbf0(%rbp)
5933(9): mov $0x28,%rax
593c(4): mov %rax,0xffffffc8(%rbp)
5940(2): xor %eax,%eax
5942(7): mov %rsi,0xfffffbf8(%rbp)
5949(5): call 0x12c7(%rip)
594e(2): test %eax,%eax
5950(6): js 0xe68(%rip)
5956(3): mov %r14,%rsi
5959(3): mov %r12,%rdi
595c(5): call 0x10b4(%rip)
5961(2): test %eax,%eax
5963(6): js 0xebd(%rip)
5969(7): mov 0xfffffd50(%rbp),%rax
5970(7): mov $0xffffffff,%rdx
5977(4): add $0x7,%rax
597b(4): cmp $0x6,%rax
597f(4): cmovbe %rdx,%rax
5983(7): add 0xfffffd58(%rbp),%rax
598a(6): jb 0xa2e(%rip)
5990(3): mov %rax,%rdi
5993(3): xor %r8d,%r8d
5996(4): add $0x6,%rdi
599a(4): setb %r8b
599e(6): jb 0xa1a(%rip)
59a4(7): cmp $0xf9f,%rdi
59ab(6): jbe 0x14d(%rip)
59b1(4): cmp $0xffffffff,%rdi
59b5(7): mov %r8,0xfffffc38(%rbp)
59bc(6): jz 0x9fc(%rip)
59c2(5): call 0xffffbd8e(%rip)
59c7(3): test %rax,%rax
59ca(7): mov %rax,0xfffffc28(%rbp)
59d1(6): jz 0x9e7(%rip)
59d7(7): mov 0xfffffc38(%rbp),%r8
59de(7): mov %rax,0xfffffbe0(%rbp)
59e5(3): xor %r12d,%r12d
59e8(8): cmp $0x0,0xfffffc18(%rbp)
59f0(2): jz 0xc(%rip)
59f2(7): mov 0xfffffbe8(%rbp),%rax
59f9(3): mov (%rax),%r12
59fc(7): mov 0xfffffd48(%rbp),%r13
5a03(7): lea 0xfffffc44(%rbp),%rax
5a0a(7): mov 0xfffffc18(%rbp),%r15
5a11(b): mov $0x0,0xfffffc00(%rbp)
5a1c(7): mov %rax,0xfffffc10(%rbp)
5a23(3): mov %rbx,%rax
5a26(3): mov %r8,%rbx
5a29(4): mov 0x0(%r13),%rcx
5a2d(3): mov %rax,%r8
5a30(3): cmp %r8,%rcx
5a33(6): jz 0x96e(%rip)
5a39(3): sub %r8,%rcx
5a3c(3): mov %rbx,%rax
5a3f(3): add %rcx,%rax
5a42(3): mov %rax,%r14
5a45(6): jnb 0xe3(%rip)
5a4b(4): cmp $0xffffffff,%r12
5a4f(6): jz 0xad1(%rip)
5a55(5): call 0xffffbb4b(%rip)
5a5a(7): mov %rax,0xfffffc38(%rbp)
5a61(7): cmp 0xfffffc18(%rbp),%r15
5a68(2): jz 0xb(%rip)
5a6a(3): test %r15,%r15
5a6d(6): jnz 0xae3(%rip)
5a73(7): mov 0xfffffbe0(%rbp),%rax
5a7a(3): test %rax,%rax
5a7d(2): jz 0xa(%rip)
5a7f(3): mov %rax,%rdi
5a82(5): call 0xffffbafe(%rip)
5a87(7): mov 0xfffffbf8(%rbp),%rax
5a8e(7): mov 0xfffffd48(%rbp),%rdi
5a95(4): add $0x20,%rax
5a99(3): cmp %rax,%rdi
5a9c(2): jz 0x7(%rip)
5a9e(5): call 0xffffbae2(%rip)
5aa3(7): mov 0xfffffbf0(%rbp),%rax
5aaa(7): mov 0xfffffc58(%rbp),%rdi
5ab1(4): add $0x10,%rax
5ab5(3): cmp %rax,%rdi
5ab8(2): jz 0x7(%rip)
5aba(5): call 0xffffbac6(%rip)
5abf(7): mov 0xfffffc38(%rbp),%rax
5ac6(3): xor %r15d,%r15d
5ac9(6): mov $0xc,(%rax)
5acf(4): mov 0xffffffc8(%rbp),%rdi
5ad3(9): xor $0x28,%rdi
5adc(3): mov %r15,%rax
5adf(6): jnz 0xf08(%rip)
5ae5(4): lea 0xffffffd8(%rbp),%rsp
5ae9(1): pop %rbx
5aea(2): pop %r12
5aec(2): pop %r13
5aee(2): pop %r14
5af0(2): pop %r15
5af2(1): pop %rbp
5af3(1): ret near (%rsp)
5af4(4): nop 0x0(%rax)
5af8(4): add $0x24,%rax
5afc(b): mov $0x0,0xfffffbe0(%rbp)
5b07(4): and $0xfffffff0,%rax
5b0b(3): sub %rax,%rsp
5b0e(5): lea 0xf(%rsp),%rax
5b13(4): and $0xfffffff0,%rax
5b17(7): mov %rax,0xfffffc28(%rbp)
5b1e(5): jmp 0xfffffec7(%rip)
5b23(5): nop 0x0(%rax,%rax,1)
5b28(3): cmp %rax,%r12
5b2b(2): jnb 0x69(%rip)
5b2d(3): test %r12,%r12
5b30(6): jnz 0x930(%rip)
5b36(4): cmp $0xc,%rax
5b3a(6): jnbe 0x938(%rip)
5b40(6): mov $0xc,%r12d
5b46(7): cmp 0xfffffc18(%rbp),%r15
5b4d(3): setz %dl
5b50(3): test %r15,%r15
5b53(6): jz 0x945(%rip)
5b59(2): test %dl,%dl
5b5b(6): jnz 0x93d(%rip)
5b61(3): mov %r12,%rsi
5b64(3): mov %r15,%rdi
5b67(7): mov %r8,0xfffffc30(%rbp)
5b6e(7): mov %rcx,0xfffffc38(%rbp)
5b75(5): call 0xffffbc1b(%rip)
5b7a(3): test %rax,%rax
5b7d(7): mov 0xfffffc38(%rbp),%rcx
5b84(7): mov 0xfffffc30(%rbp),%r8
5b8b(6): jz 0x9b0(%rip)
5b91(3): mov %rax,%r15
5b94(4): lea 0x0(%r15,%rbx,1),%rdi
5b98(3): mov %rcx,%rdx
5b9b(3): mov %r8,%rsi
5b9e(5): call 0xffffbb82(%rip)
5ba3(7): mov 0xfffffc00(%rbp),%rax
5baa(7): cmp %rax,0xfffffd40(%rbp)
5bb1(6): jz 0xcba(%rip)
5bb7(5): movzx 0x48(%r13),%edx
5bbc(4): mov 0x50(%r13),%rax
5bc0(3): cmp $0x25,%dl
5bc3(6): jz 0x795(%rip)
5bc9(4): cmp $0xffffffff,%rax
5bcd(6): jz 0xc49(%rip)
5bd3(7): mov 0xfffffc58(%rbp),%r8
5bda(4): shl/sal $0x5,%rax
5bde(3): add %r8,%rax
5be1(3): cmp $0x6e,%dl
5be4(2): mov (%rax),%edi
5be6(6): mov %edi,0xfffffc30(%rbp)
5bec(6): jz 0x7e4(%rip)
5bf2(4): mov 0x10(%r13),%eax
5bf6(7): mov 0xfffffc28(%rbp),%rdi
5bfd(2): test $0x1,%al
5bff(3): mov $0x25,(%rdi)
5c02(4): lea 0x1(%rdi),%rbx
5c06(2): jz 0x11(%rip)
5c08(7): mov 0xfffffc28(%rbp),%rdi
5c0f(4): lea 0x2(%rdi),%rbx
5c13(4): mov $0x27,0x1(%rdi)
5c17(2): test $0x2,%al
5c19(2): jz 0x9(%rip)
5c1b(3): mov $0x2d,(%rbx)
5c1e(4): add $0x1,%rbx
5c22(2): test $0x4,%al
5c24(2): jz 0x9(%rip)
5c26(3): mov $0x2b,(%rbx)
5c29(4): add $0x1,%rbx
5c2d(2): test $0x8,%al
5c2f(2): jz 0x9(%rip)
5c31(3): mov $0x20,(%rbx)
5c34(4): add $0x1,%rbx
5c38(2): test $0x10,%al
5c3a(2): jz 0x9(%rip)
5c3c(3): mov $0x23,(%rbx)
5c3f(4): add $0x1,%rbx
5c43(2): test $0x40,%al
5c45(2): jz 0x9(%rip)
5c47(3): mov $0x49,(%rbx)
5c4a(4): add $0x1,%rbx
5c4e(2): test $0x20,%al
5c50(2): jz 0x9(%rip)
5c52(3): mov $0x30,(%rbx)
5c55(4): add $0x1,%rbx
5c59(4): mov 0x18(%r13),%rsi
5c5d(4): mov 0x20(%r13),%rdx
5c61(3): cmp %rdx,%rsi
5c64(2): jz 0x32(%rip)
5c66(3): mov %rdx,%rcx
5c69(3): mov %rbx,%rdi
5c6c(7): mov %r8,0xfffffc20(%rbp)
5c73(3): sub %rsi,%rcx
5c76(3): mov %rcx,%rdx
5c79(7): mov %rcx,0xfffffc38(%rbp)
5c80(5): call 0xffffbaa0(%rip)
5c85(7): mov 0xfffffc38(%rbp),%rcx
5c8c(7): mov 0xfffffc20(%rbp),%r8
5c93(3): add %rcx,%rbx
5c96(4): mov 0x30(%r13),%rsi
5c9a(4): mov 0x38(%r13),%rdx
5c9e(3): cmp %rdx,%rsi
5ca1(2): jz 0x32(%rip)
5ca3(3): mov %rdx,%rcx
5ca6(3): mov %rbx,%rdi
5ca9(7): mov %r8,0xfffffc20(%rbp)
5cb0(3): sub %rsi,%rcx
5cb3(3): mov %rcx,%rdx
5cb6(7): mov %rcx,0xfffffc38(%rbp)
5cbd(5): call 0xffffba63(%rip)
5cc2(7): mov 0xfffffc38(%rbp),%rcx
5cc9(7): mov 0xfffffc20(%rbp),%r8
5cd0(3): add %rcx,%rbx
5cd3(6): mov 0xfffffc30(%rbp),%edi
5cd9(3): cmp $0x10,%edi
5cdc(2): jnbe 0x2f(%rip)
5cde(5): mov $0x1,%eax
5ce3(2): mov %edi,%ecx
5ce5(3): shl/sal %cl,%rax
5ce8(5): test $0x14180,%eax
5ced(2): jnz 0x17(%rip)
5cef(3): test $0x10,%ah
5cf2(6): jnz 0x95e(%rip)
5cf8(3): test $0x6,%ah
5cfb(2): jz 0x10(%rip)
5cfd(3): mov $0x6c,(%rbx)
5d00(4): add $0x1,%rbx
5d04(3): mov $0x6c,(%rbx)
5d07(4): add $0x1,%rbx
5d0b(5): movzx 0x48(%r13),%eax
5d10(4): mov $0x0,0x1(%rbx)
5d14(2): mov %al,(%rbx)
5d16(4): mov 0x28(%r13),%rax
5d1a(4): cmp $0xffffffff,%rax
5d1e(6): jz 0x732(%rip)
5d24(4): shl/sal $0x5,%rax
5d28(3): add %r8,%rax
5d2b(3): cmp $0x5,(%rax)
5d2e(6): jnz 0xae8(%rip)
5d34(3): mov 0x10(%rax),%eax
5d37(a): mov $0x1,0xfffffc20(%rbp)
5d41(6): mov %eax,0xfffffc48(%rbp)
5d47(4): mov 0x40(%r13),%rax
5d4b(4): cmp $0xffffffff,%rax
5d4f(2): jz 0x2d(%rip)
5d51(4): shl/sal $0x5,%rax
5d55(3): add %rax,%r8
5d58(4): cmp $0x5,(%r8)
5d5c(6): jnz 0xaba(%rip)
5d62(6): mov 0xfffffc20(%rbp),%eax
5d68(4): mov 0x10(%r8),%edx
5d6c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
5d73(3): lea 0x1(%rax),%eax
5d76(6): mov %eax,0xfffffc20(%rbp)
5d7c(3): mov %r14,%rax
5d7f(2): xor %edx,%edx
5d81(4): add $0x2,%rax
5d85(6): jb 0xc67(%rip)
5d8b(3): cmp %rax,%r12
5d8e(2): jnb 0x4d(%rip)
5d90(3): test %r12,%r12
5d93(6): jnz 0x825(%rip)
5d99(4): cmp $0xc,%rax
5d9d(6): jnbe 0x833(%rip)
5da3(6): mov $0xc,%r12d
5da9(7): cmp 0xfffffc18(%rbp),%r15
5db0(3): setz %dl
5db3(3): test %r15,%r15
5db6(6): jz 0x84a(%rip)
5dbc(2): test %dl,%dl
5dbe(6): jnz 0x842(%rip)
5dc4(3): mov %r12,%rsi
5dc7(3): mov %r15,%rdi
5dca(5): call 0xffffb9c6(%rip)
5dcf(3): test %rax,%rax
5dd2(6): jz 0xfffffc83(%rip)
5dd8(3): mov %rax,%r15
5ddb(5): mov $0x0,0x0(%r15,%r14,1)
5de0(5): call 0xffffb7c0(%rip)
5de5(7): mov %rax,0xfffffc38(%rbp)
5dec(2): mov (%rax),%eax
5dee(7): mov %rbx,0xfffffc08(%rbp)
5df5(6): mov %eax,0xfffffbdc(%rbp)
5dfb(5): nop 0x0(%rax,%rax,1)
5e00(7): mov 0xfffffc38(%rbp),%rax
5e07(3): mov %r12,%rbx
5e0a(6): mov $0x7fffffff,%r10d
5e10(3): sub %r14,%rbx
5e13(a): mov $0xffffffff,0xfffffc44(%rbp)
5e1d(7): cmp $0x7fffffff,%rbx
5e24(6): mov $0x0,(%rax)
5e2a(6): mov 0xfffffc30(%rbp),%eax
5e30(4): cmovbe %rbx,%r10
5e34(3): cmp $0x11,%eax
5e37(6): jnbe 0x9df(%rip)
5e3d(7): lea 0x2df8(%rip),%rsi
5e44(4): movsxd 0x0(%rsi,%rax,4),%rax
5e48(3): add %rsi,%rax
5e4b(2): jmp %rax
5e4d(3): nop (%rax)
5e50(4): mov 0x50(%r13),%rax
5e54(4): lea 0x0(%r15,%r14,1),%rdi
5e58(4): shl/sal $0x5,%rax
5e5c(7): add 0xfffffc58(%rbp),%rax
5e63(4): mov 0x10(%rax),%r9
5e67(6): mov 0xfffffc20(%rbp),%eax
5e6d(3): cmp $0x1,%eax
5e70(6): jz 0x4c8(%rip)
5e76(3): cmp $0x2,%eax
5e79(6): jz 0x4a7(%rip)
5e7f(4): sub $0x8,%rsp
5e83(6): push 0xfffffc10(%rbp)
5e89(7): mov 0xfffffc28(%rbp),%r8
5e90(3): mov %r10,%rsi
5e93(7): mov $0xffffffff,%rcx
5e9a(5): mov $0x1,%edx
5e9f(2): xor %eax,%eax
5ea1(7): mov %r10,0xfffffbd0(%rbp)
5ea8(5): call 0xffffb6c8(%rip)
5ead(1): pop %rsi
5eae(1): pop %rdi
5eaf(7): mov 0xfffffbd0(%rbp),%r10
5eb6(6): mov 0xfffffc44(%rbp),%ecx
5ebc(2): test %ecx,%ecx
5ebe(6): js 0x13e(%rip)
5ec4(3): movsxd %ecx,%rdx
5ec7(3): cmp %r10,%rdx
5eca(2): jnb 0x10(%rip)
5ecc(3): add %r15,%rdx
5ecf(5): cmp $0x0,0x0(%rdx,%r14,1)
5ed4(6): jnz 0x942(%rip)
5eda(2): cmp %eax,%ecx
5edc(2): jnl 0xa(%rip)
5ede(6): mov %eax,0xfffffc44(%rbp)
5ee4(2): mov %eax,%ecx
5ee6(3): lea 0x1(%rcx),%eax
5ee9(3): cmp %r10,%rax
5eec(6): jb 0x834(%rip)
5ef2(7): cmp $0x7ffffffe,%rbx
5ef9(6): jnbe 0x847(%rip)
5eff(4): lea 0x0(%r12,%r12,1),%rsi
5f03(3): lea 0x2(%rcx),%edx
5f06(3): test %r12,%r12
5f09(7): mov $0xffffffff,%rax
5f10(4): cmovns %rsi,%rax
5f14(3): add %r14,%rdx
5f17(6): jb 0xac1(%rip)
5f1d(3): cmp %rdx,%rax
5f20(4): cmovnae %rdx,%rax
5f24(3): cmp %rax,%r12
5f27(6): jnb 0xfffffed9(%rip)
5f2d(3): test %r12,%r12
5f30(6): js 0xfffffb31(%rip)
5f36(3): cmp %rax,%rsi
5f39(3): mov %rsi,%r12
5f3c(2): jnb 0xf(%rip)
5f3e(4): cmp $0xffffffff,%rax
5f42(6): jz 0xfffffb1f(%rip)
5f48(3): mov %rax,%r12
5f4b(7): cmp 0xfffffc18(%rbp),%r15
5f52(3): setz %bl
5f55(3): test %r15,%r15
5f58(6): jz 0x388(%rip)
5f5e(2): test %bl,%bl
5f60(6): jnz 0x380(%rip)
5f66(3): mov %r12,%rsi
5f69(3): mov %r15,%rdi
5f6c(5): call 0xffffb824(%rip)
5f71(3): test %rax,%rax
5f74(6): jz 0xfffffaed(%rip)
5f7a(3): mov %rax,%r15
5f7d(5): jmp 0xfffffe83(%rip)
5f82(6): nop 0x0(%rax,%rax,1)
5f88(4): mov 0x50(%r13),%rax
5f8c(4): lea 0x0(%r15,%r14,1),%rdi
5f90(4): shl/sal $0x5,%rax
5f94(7): add 0xfffffc58(%rbp),%rax
5f9b(4): mov 0x10(%rax),%r9d
5f9f(6): mov 0xfffffc20(%rbp),%eax
5fa5(3): cmp $0x1,%eax
5fa8(6): jz 0x238(%rip)
5fae(3): cmp $0x2,%eax
5fb1(6): jz 0x277(%rip)
5fb7(4): sub $0x8,%rsp
5fbb(6): push 0xfffffc10(%rbp)
5fc1(7): mov 0xfffffc28(%rbp),%r8
5fc8(7): mov $0xffffffff,%rcx
5fcf(5): mov $0x1,%edx
5fd4(3): mov %r10,%rsi
5fd7(2): xor %eax,%eax
5fd9(7): mov %r10,0xfffffbd0(%rbp)
5fe0(5): call 0xffffb590(%rip)
5fe5(1): pop %rdx
5fe6(1): pop %rcx
5fe7(6): mov 0xfffffc44(%rbp),%ecx
5fed(7): mov 0xfffffbd0(%rbp),%r10
5ff4(2): test %ecx,%ecx
5ff6(6): jns 0xfffffece(%rip)
5ffc(7): mov 0xfffffc08(%rbp),%rdi
6003(4): cmp $0x0,0x1(%rdi)
6007(6): jnz 0x341(%rip)
600d(2): test %eax,%eax
600f(6): jns 0xfffffecf(%rip)
6015(7): mov 0xfffffc38(%rbp),%rax
601c(2): mov (%rax),%ebx
601e(2): test %ebx,%ebx
6020(2): jnz 0x20(%rip)
6022(5): movzx 0x48(%r13),%eax
6027(5): mov $0x16,%ebx
602c(3): and $0xef,%eax
602f(2): cmp $0x63,%al
6031(5): mov $0x54,%eax
6036(3): cmove %eax,%ebx
6039(7): nop 0x0(%rax)
6040(7): cmp 0xfffffc18(%rbp),%r15
6047(2): jz 0xb(%rip)
6049(3): test %r15,%r15
604c(6): jnz 0x7b0(%rip)
6052(7): mov 0xfffffbe0(%rbp),%rax
6059(3): test %rax,%rax
605c(2): jz 0xa(%rip)
605e(3): mov %rax,%rdi
6061(5): call 0xffffb51f(%rip)
6066(7): mov 0xfffffbf8(%rbp),%rax
606d(7): mov 0xfffffd48(%rbp),%rdi
6074(4): add $0x20,%rax
6078(3): cmp %rax,%rdi
607b(2): jz 0x7(%rip)
607d(5): call 0xffffb503(%rip)
6082(7): mov 0xfffffbf0(%rbp),%rax
6089(7): mov 0xfffffc58(%rbp),%rdi
6090(4): add $0x10,%rax
6094(3): cmp %rax,%rdi
6097(2): jz 0x7(%rip)
6099(5): call 0xffffb4e7(%rip)
609e(7): mov 0xfffffc38(%rbp),%rax
60a5(3): xor %r15d,%r15d
60a8(2): mov %ebx,(%rax)
60aa(5): jmp 0xfffffa25(%rip)
60af(1): nop 
60b0(4): mov 0x50(%r13),%rax
60b4(4): lea 0x0(%r15,%r14,1),%rdi
60b8(4): shl/sal $0x5,%rax
60bc(7): add 0xfffffc58(%rbp),%rax
60c3(3): fld 0x10(%rax),%st0
60c6(6): mov 0xfffffc20(%rbp),%eax
60cc(3): cmp $0x1,%eax
60cf(6): jz 0x631(%rip)
60d5(3): cmp $0x2,%eax
60d8(6): jnz 0x4c8(%rip)
60de(6): mov 0xfffffc4c(%rbp),%eax
60e4(4): sub $0x8,%rsp
60e8(6): push 0xfffffc10(%rbp)
60ee(7): mov 0xfffffc48(%rbp),%r9d
60f5(7): mov 0xfffffc28(%rbp),%r8
60fc(3): mov %r10,%rsi
60ff(4): sub $0x18,%rsp
6103(7): mov $0xffffffff,%rcx
610a(5): mov $0x1,%edx
610f(4): fstp %st0,0x8(%rsp)
6113(1): push %rax
6114(2): xor %eax,%eax
6116(7): mov %r10,0xfffffbd0(%rbp)
611d(5): call 0xffffb453(%rip)
6122(4): add $0x30,%rsp
6126(7): mov 0xfffffbd0(%rbp),%r10
612d(5): jmp 0xfffffd89(%rip)
6132(6): nop 0x0(%rax,%rax,1)
6138(4): mov 0x50(%r13),%rax
613c(4): lea 0x0(%r15,%r14,1),%rdi
6140(4): shl/sal $0x5,%rax
6144(7): add 0xfffffc58(%rbp),%rax
614b(5): movsd 0x10(%rax),%xmm0
6150(6): mov 0xfffffc20(%rbp),%eax
6156(3): cmp $0x1,%eax
6159(6): jz 0x597(%rip)
615f(3): cmp $0x2,%eax
6162(6): jnz 0x3fe(%rip)
6168(6): mov 0xfffffc4c(%rbp),%eax
616e(6): push 0xfffffc10(%rbp)
6174(1): push %rax
6175(7): mov 0xfffffc48(%rbp),%r9d
617c(7): mov 0xfffffc28(%rbp),%r8
6183(3): mov %r10,%rsi
6186(7): mov $0xffffffff,%rcx
618d(5): mov $0x1,%edx
6192(5): mov $0x1,%eax
6197(7): mov %r10,0xfffffbd0(%rbp)
619e(5): call 0xffffb3d2(%rip)
61a3(2): pop %r8
61a5(7): mov 0xfffffbd0(%rbp),%r10
61ac(2): pop %r9
61ae(5): jmp 0xfffffd08(%rip)
61b3(5): nop 0x0(%rax,%rax,1)
61b8(4): mov 0x50(%r13),%rax
61bc(4): lea 0x0(%r15,%r14,1),%rdi
61c0(4): shl/sal $0x5,%rax
61c4(7): add 0xfffffc58(%rbp),%rax
61cb(5): movzx 0x10(%rax),%r9d
61d0(6): mov 0xfffffc20(%rbp),%eax
61d6(3): cmp $0x1,%eax
61d9(6): jnz 0xfffffdd5(%rip)
61df(1): nop 
61e0(6): push 0xfffffc10(%rbp)
61e6(2): push %r9
61e8(7): mov 0xfffffc48(%rbp),%r9d
61ef(5): jmp 0xfffffdd2(%rip)
61f4(4): nop 0x0(%rax)
61f8(4): mov 0x50(%r13),%rax
61fc(4): lea 0x0(%r15,%r14,1),%rdi
6200(4): shl/sal $0x5,%rax
6204(7): add 0xfffffc58(%rbp),%rax
620b(5): movsx 0x10(%rax),%r9d
6210(6): mov 0xfffffc20(%rbp),%eax
6216(3): cmp $0x1,%eax
6219(2): jz 0xffffffc7(%rip)
621b(3): cmp $0x2,%eax
621e(6): jnz 0xfffffd99(%rip)
6224(4): nop 0x0(%rax)
6228(4): sub $0x8,%rsp
622c(6): push 0xfffffc10(%rbp)
6232(2): push %r9
6234(6): mov 0xfffffc4c(%rbp),%eax
623a(1): push %rax
623b(7): mov 0xfffffc48(%rbp),%r9d
6242(7): mov 0xfffffc28(%rbp),%r8
6249(3): mov %r10,%rsi
624c(7): mov $0xffffffff,%rcx
6253(5): mov $0x1,%edx
6258(2): xor %eax,%eax
625a(7): mov %r10,0xfffffbd0(%rbp)
6261(5): call 0xffffb30f(%rip)
6266(4): add $0x20,%rsp
626a(7): mov 0xfffffbd0(%rbp),%r10
6271(5): jmp 0xfffffc45(%rip)
6276(a): nop 0x0(%rax,%rax,1)
6280(4): mov 0x50(%r13),%rax
6284(4): lea 0x0(%r15,%r14,1),%rdi
6288(4): shl/sal $0x5,%rax
628c(7): add 0xfffffc58(%rbp),%rax
6293(5): movzx 0x10(%rax),%r9d
6298(6): mov 0xfffffc20(%rbp),%eax
629e(3): cmp $0x1,%eax
62a1(6): jnz 0xfffffd0d(%rip)
62a7(5): jmp 0xffffff39(%rip)
62ac(4): nop 0x0(%rax)
62b0(4): mov 0x50(%r13),%rax
62b4(4): lea 0x0(%r15,%r14,1),%rdi
62b8(4): shl/sal $0x5,%rax
62bc(7): add 0xfffffc58(%rbp),%rax
62c3(5): movsx 0x10(%rax),%r9d
62c8(6): mov 0xfffffc20(%rbp),%eax
62ce(3): cmp $0x1,%eax
62d1(6): jnz 0xfffffcdd(%rip)
62d7(5): jmp 0xffffff09(%rip)
62dc(4): nop 0x0(%rax)
62e0(3): mov %r12,%rdi
62e3(5): call 0xffffb46d(%rip)
62e8(3): test %rax,%rax
62eb(3): mov %rax,%rcx
62ee(6): jz 0xfffff773(%rip)
62f4(3): test %r14,%r14
62f7(6): jz 0xb9(%rip)
62fd(2): test %bl,%bl
62ff(6): jz 0xb1(%rip)
6305(3): mov %r15,%rsi
6308(3): mov %r14,%rdx
630b(3): mov %rax,%rdi
630e(5): call 0xffffb412(%rip)
6313(3): mov %rax,%r15
6316(5): jmp 0xfffffaea(%rip)
631b(5): nop 0x0(%rax,%rax,1)
6320(4): sub $0x8,%rsp
6324(6): push 0xfffffc10(%rbp)
632a(2): push %r9
632c(5): jmp 0xffffff08(%rip)
6331(7): nop 0x0(%rax)
6338(6): push 0xfffffc10(%rbp)
633e(2): push %r9
6340(5): jmp 0xfffffea8(%rip)
6345(3): nop (%rax)
6348(4): mov $0x0,0x1(%rdi)
634c(5): jmp 0xfffffab4(%rip)
6351(7): nop 0x0(%rax)
6358(4): cmp $0xffffffff,%rax
635c(6): jnz 0x4ba(%rip)
6362(3): mov %r14,%rax
6365(4): add $0x1,%rax
6369(3): mov %rax,%rbx
636c(6): jnb 0x8c(%rip)
6372(4): cmp $0xffffffff,%r12
6376(6): jnz 0xfffff6df(%rip)
637c(3): mov %r12,%rbx
637f(5): mov $0x25,0x0(%r15,%r14,1)
6384(4): mov 0x8(%r13),%r8
6388(4): add $0x58,%r13
638c(4): mov 0x0(%r13),%rcx
6390(8): add $0x1,0xfffffc00(%rbp)
6398(3): cmp %r8,%rcx
639b(6): jnz 0xfffff69e(%rip)
63a1(3): mov %rbx,%r14
63a4(5): jmp 0xfffff7ff(%rip)
63a9(7): nop 0x0(%rax)
63b0(3): mov %rcx,%r15
63b3(5): jmp 0xfffffa4d(%rip)
63b8(5): call 0xffffb1e8(%rip)
63bd(7): mov %rax,0xfffffc38(%rbp)
63c4(5): jmp 0xfffff6c3(%rip)
63c9(7): nop 0x0(%rax)
63d0(2): mov %edi,%edx
63d2(3): sub $0x12,%edx
63d5(3): cmp $0x4,%edx
63d8(6): jnbe 0x43e(%rip)
63de(7): lea 0x289f(%rip),%rdi
63e5(4): mov 0x10(%rax),%rax
63e9(4): movsxd 0x0(%rdi,%rdx,4),%rdx
63ed(3): add %rdi,%rdx
63f0(2): jmp %rdx
63f2(6): nop 0x0(%rax,%rax,1)
63f8(3): cmp %rax,%r12
63fb(2): jnb 0xffffff84(%rip)
63fd(3): test %r12,%r12
6400(6): jnz 0x3d0(%rip)
6406(4): cmp $0xc,%rax
640a(6): jnbe 0x3d8(%rip)
6410(6): mov $0xc,%r12d
6416(7): cmp 0xfffffc18(%rbp),%r15
641d(3): setz %dl
6420(3): test %r15,%r15
6423(6): jz 0x26d(%rip)
6429(2): test %dl,%dl
642b(6): jnz 0x265(%rip)
6431(3): mov %r12,%rsi
6434(3): mov %r15,%rdi
6437(5): call 0xffffb359(%rip)
643c(3): test %rax,%rax
643f(6): jz 0xfc(%rip)
6445(3): mov %rax,%r15
6448(5): jmp 0xffffff37(%rip)
644d(3): nop (%rax)
6450(a): mov $0x0,0xfffffc20(%rbp)
645a(5): jmp 0xfffff8ed(%rip)
645f(1): nop 
6460(6): js 0xfffff5f5(%rip)
6466(3): add %r12,%r12
6469(3): cmp %rax,%r12
646c(6): jnb 0xfffff6da(%rip)
6472(4): cmp $0xffffffff,%rax
6476(6): jz 0xfffff5df(%rip)
647c(7): cmp 0xfffffc18(%rbp),%r15
6483(3): mov %rax,%r12
6486(3): setz %dl
6489(3): test %r15,%r15
648c(6): jnz 0xfffff6cd(%rip)
6492(6): nop 0x0(%rax,%rax,1)
6498(3): mov %r12,%rdi
649b(7): mov %r8,0xfffffc20(%rbp)
64a2(6): mov %dl,0xfffffc30(%rbp)
64a8(7): mov %rcx,0xfffffc38(%rbp)
64af(5): call 0xffffb2a1(%rip)
64b4(3): test %rax,%rax
64b7(3): mov %rax,%r9
64ba(7): mov 0xfffffc38(%rbp),%rcx
64c1(7): movzx 0xfffffc30(%rbp),%edx
64c8(7): mov 0xfffffc20(%rbp),%r8
64cf(6): jz 0xfffff586(%rip)
64d5(3): test %rbx,%rbx
64d8(6): jz 0x208(%rip)
64de(2): test %dl,%dl
64e0(6): jz 0x200(%rip)
64e6(3): mov %r15,%rsi
64e9(3): mov %rbx,%rdx
64ec(3): mov %rax,%rdi
64ef(7): mov %r8,0xfffffc30(%rbp)
64f6(7): mov %rcx,0xfffffc38(%rbp)
64fd(5): call 0xffffb223(%rip)
6502(7): mov 0xfffffc38(%rbp),%rcx
6509(3): mov %rax,%r15
650c(7): mov 0xfffffc30(%rbp),%r8
6513(5): jmp 0xfffff681(%rip)
6518(8): nop 0x0(%rax,%rax,1)
6520(3): mov %r12,%r14
6523(5): jmp 0xfffff671(%rip)
6528(8): nop 0x0(%rax,%rax,1)
6530(3): mov %r14,(%rax)
6533(3): mov %r14,%rbx
6536(5): jmp 0xfffffe4e(%rip)
653b(5): call 0xffffb065(%rip)
6540(7): mov %rax,0xfffffc38(%rbp)
6547(9): nop 0x0(%rax,%rax,1)
6550(3): mov %r15,%rdi
6553(5): call 0xffffb02d(%rip)
6558(5): jmp 0xfffff51b(%rip)
655d(3): nop (%rax)
6560(7): mov 0xfffffc10(%rbp),%r9
6567(7): mov 0xfffffc28(%rbp),%r8
656e(3): mov %r10,%rsi
6571(7): mov $0xffffffff,%rcx
6578(5): mov $0x1,%edx
657d(5): mov $0x1,%eax
6582(7): mov %r10,0xfffffbd0(%rbp)
6589(5): call 0xffffafe7(%rip)
658e(7): mov 0xfffffbd0(%rbp),%r10
6595(5): jmp 0xfffff921(%rip)
659a(6): nop 0x0(%rax,%rax,1)
65a0(4): sub $0x10,%rsp
65a4(7): mov 0xfffffc10(%rbp),%r9
65ab(3): fstp %st0,(%rsp)
65ae(5): jmp 0xfffff8db(%rip)
65b3(5): nop 0x0(%rax,%rax,1)
65b8(6): js 0xfffff49d(%rip)
65be(3): add %r12,%r12
65c1(3): cmp %rax,%r12
65c4(6): jnb 0xfffff7e5(%rip)
65ca(6): nop 0x0(%rax,%rax,1)
65d0(3): test %rdx,%rdx
65d3(6): jnz 0xfffff482(%rip)
65d9(4): cmp $0xffffffff,%rax
65dd(6): jz 0xfffff478(%rip)
65e3(7): cmp 0xfffffc18(%rbp),%r15
65ea(3): mov %rax,%r12
65ed(3): setz %dl
65f0(3): test %r15,%r15
65f3(6): jnz 0xfffff7c9(%rip)
65f9(7): nop 0x0(%rax)
6600(3): mov %r12,%rdi
6603(6): mov %dl,0xfffffc38(%rbp)
6609(5): call 0xffffb147(%rip)
660e(3): test %rax,%rax
6611(3): mov %rax,%rcx
6614(7): movzx 0xfffffc38(%rbp),%edx
661b(6): jz 0xfffff43a(%rip)
6621(3): test %r14,%r14
6624(6): jz 0x19c(%rip)
662a(2): test %dl,%dl
662c(6): jz 0x194(%rip)
6632(3): mov %r15,%rsi
6635(3): mov %r14,%rdx
6638(3): mov %rax,%rdi
663b(5): call 0xffffb0e5(%rip)
6640(3): mov %rax,%r15
6643(5): jmp 0xfffff798(%rip)
6648(8): nop 0x0(%rax,%rax,1)
6650(3): mov $0x4c,(%rbx)
6653(4): add $0x1,%rbx
6657(5): jmp 0xfffff6b4(%rip)
665c(4): nop 0x0(%rax)
6660(3): mov %r14b,(%rax)
6663(3): mov %r14,%rbx
6666(5): jmp 0xfffffd1e(%rip)
666b(5): nop 0x0(%rax,%rax,1)
6670(3): mov %r14d,(%rax)
6673(3): mov %r14,%rbx
6676(5): jmp 0xfffffd0e(%rip)
667b(5): nop 0x0(%rax,%rax,1)
6680(4): mov %r14w,(%rax)
6684(3): mov %r14,%rbx
6687(5): jmp 0xfffffcfd(%rip)
668c(4): nop 0x0(%rax)
6690(3): mov %r12,%rdi
6693(6): mov %dl,0xfffffc38(%rbp)
6699(5): call 0xffffb0b7(%rip)
669e(3): test %rax,%rax
66a1(3): mov %rax,%rcx
66a4(7): movzx 0xfffffc38(%rbp),%edx
66ab(6): jz 0xfffff3aa(%rip)
66b1(3): test %r14,%r14
66b4(6): jz 0x140(%rip)
66ba(2): test %dl,%dl
66bc(6): jz 0x138(%rip)
66c2(3): mov %r15,%rsi
66c5(3): mov %r14,%rdx
66c8(3): mov %rax,%rdi
66cb(5): call 0xffffb055(%rip)
66d0(3): mov %rax,%r15
66d3(5): jmp 0xfffffcac(%rip)
66d8(8): nop 0x0(%rax,%rax,1)
66e0(3): mov %r9,%r15
66e3(5): jmp 0xfffff4b1(%rip)
66e8(8): nop 0x0(%rax,%rax,1)
66f0(4): sub $0x8,%rsp
66f4(6): push 0xfffffc10(%rbp)
66fa(5): jmp 0xfffffa7b(%rip)
66ff(1): nop 
6700(4): sub $0x8,%rsp
6704(6): push 0xfffffc10(%rbp)
670a(4): sub $0x10,%rsp
670e(3): fstp %st0,(%rsp)
6711(5): jmp 0xfffffb2a(%rip)
6716(a): nop 0x0(%rax,%rax,1)
6720(7): mov 0xfffffc38(%rbp),%rax
6727(6): mov 0xfffffbdc(%rbp),%edi
672d(3): movsxd %ecx,%rbx
6730(3): add %r14,%rbx
6733(2): mov %edi,(%rax)
6735(5): jmp 0xfffffc4f(%rip)
673a(6): nop 0x0(%rax,%rax,1)
6740(7): cmp 0xfffffc18(%rbp),%r15
6747(2): jz 0xb(%rip)
6749(3): test %r15,%r15
674c(6): jnz 0xbd(%rip)
6752(7): mov 0xfffffbe0(%rbp),%rax
6759(3): test %rax,%rax
675c(2): jz 0xa(%rip)
675e(3): mov %rax,%rdi
6761(5): call 0xffffae1f(%rip)
6766(7): mov 0xfffffbf8(%rbp),%rax
676d(7): mov 0xfffffd48(%rbp),%rdi
6774(4): add $0x20,%rax
6778(3): cmp %rax,%rdi
677b(2): jz 0x7(%rip)
677d(5): call 0xffffae03(%rip)
6782(7): mov 0xfffffbf0(%rbp),%rax
6789(7): mov 0xfffffc58(%rbp),%rdi
6790(4): add $0x10,%rax
6794(3): cmp %rax,%rdi
6797(2): jz 0x7(%rip)
6799(5): call 0xffffade7(%rip)
679e(7): mov 0xfffffc38(%rbp),%rax
67a5(3): xor %r15d,%r15d
67a8(6): mov $0x4b,(%rax)
67ae(5): jmp 0xfffff321(%rip)
67b3(5): nop 0x0(%rax,%rax,1)
67b8(3): xor %r15d,%r15d
67bb(5): jmp 0xfffff314(%rip)
67c0(3): mov %rcx,%r15
67c3(5): jmp 0xfffff618(%rip)
67c8(8): nop 0x0(%rax,%rax,1)
67d0(6): js 0xfffff285(%rip)
67d6(3): add %r12,%r12
67d9(3): cmp %rax,%r12
67dc(6): jnb 0xfffffc3a(%rip)
67e2(4): cmp $0xffffffff,%rax
67e6(6): jz 0xfffff26f(%rip)
67ec(3): mov %rax,%r12
67ef(5): jmp 0xfffffc27(%rip)
67f4(3): mov %rcx,%r15
67f7(5): jmp 0xfffffb88(%rip)
67fc(3): mov %r15,%rdi
67ff(5): call 0xffffad81(%rip)
6804(5): jmp 0xfffff84e(%rip)
6809(3): mov %r15,%rdi
680c(5): call 0xffffad74(%rip)
6811(5): jmp 0xffffff41(%rip)
6816(5): call 0xffffad7a(%rip)
681b(5): nop 0x0(%rax,%rax,1)
6820(7): mov 0xfffffbf8(%rbp),%rax
6827(7): mov 0xfffffd48(%rbp),%rdi
682e(4): add $0x20,%rax
6832(3): cmp %rax,%rdi
6835(2): jz 0x7(%rip)
6837(5): call 0xffffad49(%rip)
683c(7): mov 0xfffffbf0(%rbp),%rax
6843(7): mov 0xfffffc58(%rbp),%rdi
684a(4): add $0x10,%rax
684e(3): cmp %rax,%rdi
6851(2): jz 0x7(%rip)
6853(5): call 0xffffad2d(%rip)
6858(5): call 0xffffad48(%rip)
685d(3): xor %r15d,%r15d
6860(6): mov $0x16,(%rax)
6866(5): jmp 0xfffff269(%rip)
686b(3): mov %r14,%rbx
686e(2): xor %eax,%eax
6870(4): add $0x1,%rbx
6874(6): jb 0x10c(%rip)
687a(3): cmp %rbx,%r12
687d(2): jnb 0x4f(%rip)
687f(3): test %r12,%r12
6882(6): jnz 0x137(%rip)
6888(4): cmp $0xc,%rbx
688c(6): jnbe 0x112(%rip)
6892(6): mov $0xc,%r12d
6898(7): cmp 0xfffffc18(%rbp),%r15
689f(4): setz %r13b
68a3(3): test %r15,%r15
68a6(6): jz 0xa6(%rip)
68ac(3): test %r13b,%r13b
68af(6): jnz 0x9d(%rip)
68b5(3): mov %r12,%rsi
68b8(3): mov %r15,%rdi
68bb(5): call 0xffffaed5(%rip)
68c0(3): test %rax,%rax
68c3(6): jz 0xfffffc78(%rip)
68c9(3): mov %rax,%r15
68cc(7): cmp 0xfffffc18(%rbp),%r15
68d3(5): mov $0x0,0x0(%r15,%r14,1)
68d8(2): jz 0x19(%rip)
68da(3): cmp %rbx,%r12
68dd(2): jbe 0x14(%rip)
68df(3): mov %r15,%rdi
68e2(3): mov %rbx,%rsi
68e5(5): call 0xffffaeab(%rip)
68ea(3): test %rax,%rax
68ed(4): cmovne %rax,%r15
68f1(7): mov 0xfffffbe0(%rbp),%rax
68f8(3): test %rax,%rax
68fb(2): jz 0xa(%rip)
68fd(3): mov %rax,%rdi
6900(5): call 0xffffac80(%rip)
6905(7): mov 0xfffffbf8(%rbp),%rax
690c(7): mov 0xfffffd48(%rbp),%rdi
6913(4): add $0x20,%rax
6917(3): cmp %rax,%rdi
691a(2): jz 0x7(%rip)
691c(5): call 0xffffac64(%rip)
6921(7): mov 0xfffffbf0(%rbp),%rax
6928(7): mov 0xfffffc58(%rbp),%rdi
692f(4): add $0x10,%rax
6933(3): cmp %rax,%rdi
6936(2): jz 0x7(%rip)
6938(5): call 0xffffac48(%rip)
693d(7): mov 0xfffffbe8(%rbp),%rax
6944(3): mov %r14,(%rax)
6947(5): jmp 0xfffff188(%rip)
694c(3): mov %r12,%rdi
694f(5): call 0xffffae01(%rip)
6954(3): test %rax,%rax
6957(3): mov %rax,%rcx
695a(6): jz 0xfffff0fb(%rip)
6960(3): test %r14,%r14
6963(2): jz 0x6d(%rip)
6965(3): test %r13b,%r13b
6968(2): jz 0x68(%rip)
696a(3): mov %r15,%rsi
696d(3): mov %r14,%rdx
6970(3): mov %rax,%rdi
6973(5): call 0xffffadad(%rip)
6978(3): mov %rax,%r15
697b(5): jmp 0xffffff51(%rip)
6980(4): cmp $0xffffffff,%r12
6984(5): mov $0x1,%eax
6989(6): jz 0xffffff43(%rip)
698f(3): test %r12,%r12
6992(6): jz 0xfffff0c3(%rip)
6998(6): js 0xfffff0bd(%rip)
699e(3): test %rax,%rax
69a1(6): jnz 0xfffff0b4(%rip)
69a7(4): cmp $0xffffffff,%rbx
69ab(6): jz 0xfffff0aa(%rip)
69b1(3): mov %rbx,%r12
69b4(5): jmp 0xfffffee4(%rip)
69b9(6): js 0xfffff09c(%rip)
69bf(3): add %r12,%r12
69c2(3): cmp %rbx,%r12
69c5(6): jnb 0xfffffed3(%rip)
69cb(2): jmp 0xffffffd3(%rip)
69cd(3): nop (%rax)
69d0(3): mov %rcx,%r15
69d3(5): jmp 0xfffffef9(%rip)
69d8(4): cmp $0xffffffff,%r12
69dc(6): jz 0xfffff424(%rip)
69e2(5): jmp 0xfffff07f(%rip)
69e7(5): call 0xffffac69(%rip)
69ec(4): cmp $0xffffffff,%r12
69f0(5): mov $0x1,%edx
69f5(6): jz 0xfffff3e6(%rip)
69fb(3): test %r12,%r12
69fe(6): jz 0xfffff057(%rip)
6a04(6): jns 0xfffffbcc(%rip)
6a0a(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
6a10(4): cmp $0x0,(%rsi)
6a14(4): mov 0x8(%rsi),%rax
6a18(2): jz 0x65(%rip)
6a1a(7): lea 0x227f(%rip),%r8
6a21(7): lea 0x22d8(%rip),%r10
6a28(7): lea 0x2269(%rip),%r9
6a2f(2): xor %ecx,%ecx
6a31(7): nop 0x0(%rax)
6a38(3): cmp $0x16,(%rax)
6a3b(2): jnbe 0x45(%rip)
6a3d(2): mov (%rax),%edx
6a3f(4): movsxd 0x0(%r8,%rdx,4),%rdx
6a43(3): add %r8,%rdx
6a46(2): jmp %rdx
6a48(8): nop 0x0(%rax,%rax,1)
6a50(4): mov 0x8(%rdi),%rdx
6a54(4): add $0xf,%rdx
6a58(4): and $0xfffffff0,%rdx
6a5c(4): lea 0x10(%rdx),%r11
6a60(4): mov %r11,0x8(%rdi)
6a64(2): fld (%rdx),%st0
6a66(3): fstp %st0,0x10(%rax)
6a69(7): nop 0x0(%rax)
6a70(4): add $0x1,%rcx
6a74(4): add $0x20,%rax
6a78(3): cmp %rcx,(%rsi)
6a7b(2): jnbe 0xffffffbd(%rip)
6a7d(2): xor %eax,%eax
6a7f(1): ret near (%rsp)
6a80(5): mov $0xffffffff,%eax
6a85(1): ret near (%rsp)
6a86(3): mov (%rdi),%r11d
6a89(4): cmp $0x2f,%r11d
6a8d(6): jnbe 0x13d(%rip)
6a93(3): mov %r11d,%edx
6a96(4): add 0x10(%rdi),%rdx
6a9a(4): add $0x8,%r11d
6a9e(3): mov %r11d,(%rdi)
6aa1(3): mov (%rdx),%rdx
6aa4(4): mov %rdx,0x10(%rax)
6aa8(2): jmp 0xffffffc8(%rip)
6aaa(3): mov (%rdi),%r11d
6aad(4): cmp $0x2f,%r11d
6ab1(6): jnbe 0x13b(%rip)
6ab7(3): mov %r11d,%edx
6aba(4): add 0x10(%rdi),%rdx
6abe(4): add $0x8,%r11d
6ac2(3): mov %r11d,(%rdi)
6ac5(2): mov (%rdx),%edx
6ac7(3): mov %edx,0x10(%rax)
6aca(2): jmp 0xffffffa6(%rip)
6acc(3): mov (%rdi),%r11d
6acf(4): cmp $0x2f,%r11d
6ad3(6): jnbe 0x108(%rip)
6ad9(3): mov %r11d,%edx
6adc(4): add 0x10(%rdi),%rdx
6ae0(4): add $0x8,%r11d
6ae4(3): mov %r11d,(%rdi)
6ae7(2): mov (%rdx),%edx
6ae9(3): mov %dl,0x10(%rax)
6aec(2): jmp 0xffffff84(%rip)
6aee(3): mov (%rdi),%r11d
6af1(4): cmp $0x2f,%r11d
6af5(6): jnbe 0xa5(%rip)
6afb(3): mov %r11d,%edx
6afe(4): add 0x10(%rdi),%rdx
6b02(4): add $0x8,%r11d
6b06(3): mov %r11d,(%rdi)
6b09(2): mov (%rdx),%edx
6b0b(4): mov %dx,0x10(%rax)
6b0f(5): jmp 0xffffff61(%rip)
6b14(3): mov (%rdi),%r11d
6b17(4): cmp $0x2f,%r11d
6b1b(6): jnbe 0x90(%rip)
6b21(3): mov %r11d,%edx
6b24(4): add 0x10(%rdi),%rdx
6b28(4): add $0x8,%r11d
6b2c(3): mov %r11d,(%rdi)
6b2f(3): mov (%rdx),%rdx
6b32(3): test %rdx,%rdx
6b35(4): cmove %r9,%rdx
6b39(4): mov %rdx,0x10(%rax)
6b3d(5): jmp 0xffffff33(%rip)
6b42(4): mov 0x4(%rdi),%r11d
6b46(7): cmp $0xaf,%r11d
6b4d(6): jnbe 0xb0(%rip)
6b53(3): mov %r11d,%edx
6b56(4): add 0x10(%rdi),%rdx
6b5a(4): add $0x10,%r11d
6b5e(4): mov %r11d,0x4(%rdi)
6b62(4): movsd (%rdx),%xmm0
6b66(5): movsd %xmm0,0x10(%rax)
6b6b(5): jmp 0xffffff05(%rip)
6b70(3): mov (%rdi),%r11d
6b73(4): cmp $0x2f,%r11d
6b77(2): jnbe 0x45(%rip)
6b79(3): mov %r11d,%edx
6b7c(4): add 0x10(%rdi),%rdx
6b80(4): add $0x8,%r11d
6b84(3): mov %r11d,(%rdi)
6b87(3): mov (%rdx),%rdx
6b8a(3): test %rdx,%rdx
6b8d(4): cmove %r10,%rdx
6b91(4): mov %rdx,0x10(%rax)
6b95(5): jmp 0xfffffedb(%rip)
6b9a(4): mov 0x8(%rdi),%rdx
6b9e(4): lea 0x8(%rdx),%r11
6ba2(4): mov %r11,0x8(%rdi)
6ba6(5): jmp 0xffffff63(%rip)
6bab(4): mov 0x8(%rdi),%rdx
6baf(4): lea 0x8(%rdx),%r11
6bb3(4): mov %r11,0x8(%rdi)
6bb7(5): jmp 0xffffff78(%rip)
6bbc(4): mov 0x8(%rdi),%rdx
6bc0(4): lea 0x8(%rdx),%r11
6bc4(4): mov %r11,0x8(%rdi)
6bc8(2): jmp 0xffffffbf(%rip)
6bca(4): mov 0x8(%rdi),%rdx
6bce(4): lea 0x8(%rdx),%r11
6bd2(4): mov %r11,0x8(%rdi)
6bd6(5): jmp 0xfffffecb(%rip)
6bdb(4): mov 0x8(%rdi),%rdx
6bdf(4): lea 0x8(%rdx),%r11
6be3(4): mov %r11,0x8(%rdi)
6be7(5): jmp 0xffffff00(%rip)
6bec(4): mov 0x8(%rdi),%rdx
6bf0(4): lea 0x8(%rdx),%r11
6bf4(4): mov %r11,0x8(%rdi)
6bf8(5): jmp 0xfffffecd(%rip)
6bfd(4): mov 0x8(%rdi),%rdx
6c01(4): lea 0x8(%rdx),%r11
6c05(4): mov %r11,0x8(%rdi)
6c09(5): jmp 0xffffff59(%rip)

"printf_parse" :
6c10(2): push %r15
6c12(2): push %r14
6c14(4): lea 0x20(%rsi),%rcx
6c18(2): push %r13
6c1a(2): push %r12
6c1c(4): lea 0x10(%rdx),%rax
6c20(1): push %rbp
6c21(1): push %rbx
6c22(3): mov %rsi,%r14
6c25(3): mov %rdx,%r15
6c28(2): xor %ebx,%ebx
6c2a(6): mov $0x7,%r9d
6c30(4): sub $0x58,%rsp
6c34(6): mov $0x7,%r10d
6c3a(7): mov $0x0,(%rsi)
6c41(4): mov %rcx,0x8(%rsi)
6c45(5): mov %rcx,0x28(%rsp)
6c4a(7): mov $0xffffffff,%r8
6c51(7): mov $0x0,(%rdx)
6c58(5): mov %rax,0x8(%rsp)
6c5d(4): mov %rax,0x8(%rdx)
6c61(9): mov $0x0,0x18(%rsp)
6c6a(9): mov $0x0,0x10(%rsp)
6c73(9): mov $0x0,0x20(%rsp)
6c7c(2): jmp 0xf(%rip)
6c7e(2): nop 
6c80(2): cmp $0x25,%al
6c82(4): lea 0x1(%rdi),%rbp
6c86(2): jz 0x42(%rip)
6c88(3): mov %rbp,%rdi
6c8b(3): movzx (%rdi),%eax
6c8e(2): test %al,%al
6c90(2): jnz 0xfffffff0(%rip)
6c92(4): lea 0x0(%rbx,%rbx,4),%rax
6c96(4): lea 0x0(%rbx,%rax,2),%rax
6c9a(4): mov %rdi,0x0(%rcx,%rax,8)
6c9e(5): mov 0x10(%rsp),%rax
6ca3(4): mov %rax,0x10(%r14)
6ca7(5): mov 0x18(%rsp),%rax
6cac(4): mov %rax,0x18(%r14)
6cb0(2): xor %eax,%eax
6cb2(4): add $0x58,%rsp
6cb6(1): pop %rbx
6cb7(1): pop %rbp
6cb8(2): pop %r12
6cba(2): pop %r13
6cbc(2): pop %r14
6cbe(2): pop %r15
6cc0(1): ret near (%rsp)
6cc1(7): nop 0x0(%rax)
6cc8(4): lea 0x0(%rbx,%rbx,4),%rax
6ccc(3): mov %r8,%r13
6ccf(4): lea 0x0(%rbx,%rax,2),%rax
6cd3(4): lea 0x0(%rcx,%rax,8),%r12
6cd7(4): mov %rdi,(%r12)
6cdb(9): mov $0x0,0x10(%r12)
6ce4(9): mov $0x0,0x18(%r12)
6ced(9): mov $0x0,0x20(%r12)
6cf6(5): mov %r8,0x28(%r12)
6cfb(9): mov $0x0,0x30(%r12)
6d04(9): mov $0x0,0x38(%r12)
6d0d(5): mov %r8,0x40(%r12)
6d12(5): mov %r8,0x50(%r12)
6d17(4): movzx 0x1(%rdi),%ebx
6d1b(3): lea 0xffffffd0(%rbx),%eax
6d1e(2): cmp $0x9,%al
6d20(2): jnbe 0x3e(%rip)
6d22(5): jmp 0x438(%rip)
6d27(9): nop 0x0(%rax,%rax,1)
6d30(3): cmp $0x2d,%bl
6d33(2): jz 0x45(%rip)
6d35(3): cmp $0x2b,%bl
6d38(2): jz 0x48(%rip)
6d3a(3): cmp $0x20,%bl
6d3d(2): jz 0x53(%rip)
6d3f(3): cmp $0x23,%bl
6d42(2): jz 0x5e(%rip)
6d44(3): cmp $0x30,%bl
6d47(2): jz 0x69(%rip)
6d49(3): cmp $0x49,%bl
6d4c(2): jnz 0x74(%rip)
6d4e(6): or $0x40,0x10(%r12)
6d54(4): nop 0x0(%rax)
6d58(3): movzx (%rax),%ebx
6d5b(3): mov %rax,%rbp
6d5e(4): lea 0x1(%rbp),%rax
6d62(3): cmp $0x27,%bl
6d65(3): mov %rax,%rdx
6d68(2): jnz 0xffffffc8(%rip)
6d6a(6): or $0x1,0x10(%r12)
6d70(2): jmp 0xffffffe8(%rip)
6d72(6): nop 0x0(%rax,%rax,1)
6d78(6): or $0x2,0x10(%r12)
6d7e(2): jmp 0xffffffda(%rip)
6d80(6): or $0x4,0x10(%r12)
6d86(2): jmp 0xffffffd2(%rip)
6d88(8): nop 0x0(%rax,%rax,1)
6d90(6): or $0x8,0x10(%r12)
6d96(2): jmp 0xffffffc2(%rip)
6d98(8): nop 0x0(%rax,%rax,1)
6da0(6): or $0x10,0x10(%r12)
6da6(2): jmp 0xffffffb2(%rip)
6da8(8): nop 0x0(%rax,%rax,1)
6db0(6): or $0x20,0x10(%r12)
6db6(2): jmp 0xffffffa2(%rip)
6db8(8): nop 0x0(%rax,%rax,1)
6dc0(3): cmp $0x2a,%bl
6dc3(6): jz 0x1b6(%rip)
6dc9(3): lea 0xffffffd0(%rbx),%ecx
6dcc(3): cmp $0x9,%cl
6dcf(6): jbe 0x418(%rip)
6dd5(3): cmp $0x2e,%bl
6dd8(6): jz 0x2d7(%rip)
6dde(2): xor %eax,%eax
6de0(5): mov $0x1,%esi
6de5(2): jmp 0x32(%rip)
6de7(9): nop 0x0(%rax,%rax,1)
6df0(3): cmp $0x4c,%bl
6df3(2): jz 0x3d(%rip)
6df5(3): cmp $0x6c,%bl
6df8(2): jz 0x18(%rip)
6dfa(3): cmp $0x6a,%bl
6dfd(2): jz 0x13(%rip)
6dff(2): mov %ebx,%edx
6e01(3): and $0xdf,%edx
6e04(3): cmp $0x5a,%dl
6e07(2): jz 0x9(%rip)
6e09(3): cmp $0x74,%bl
6e0c(2): jnz 0x2c(%rip)
6e0e(2): nop 
6e10(3): add $0x8,%eax
6e13(4): movzx 0x0(%rbp),%ebx
6e17(4): add $0x1,%rbp
6e1b(3): cmp $0x68,%bl
6e1e(2): jnz 0xffffffd2(%rip)
6e20(2): mov %eax,%ecx
6e22(2): mov %esi,%edx
6e24(3): and $0x1,%ecx
6e27(2): shl/sal %cl,%edx
6e29(2): or %edx,%eax
6e2b(2): jmp 0xffffffe8(%rip)
6e2d(3): nop (%rax)
6e30(3): or $0x4,%eax
6e33(2): jmp 0xffffffe0(%rip)
6e35(3): nop (%rax)
6e38(3): lea 0xffffffdb(%rbx),%edx
6e3b(3): cmp $0x53,%dl
6e3e(6): jnbe 0x61d(%rip)
6e44(7): lea 0x1ed1(%rip),%rcx
6e4b(3): movzx %dl,%edx
6e4e(4): movsxd 0x0(%rcx,%rdx,4),%rdx
6e52(3): add %rcx,%rdx
6e55(2): jmp %rdx
6e57(6): mov $0x10,%r11d
6e5d(5): mov $0x73,%ebx
6e62(6): nop 0x0(%rax,%rax,1)
6e68(4): cmp $0xffffffff,%r13
6e6c(6): jz 0x6bb(%rip)
6e72(5): mov %r13,0x50(%r12)
6e77(3): cmp %r13,%r9
6e7a(4): mov 0x8(%r15),%rcx
6e7e(6): jbe 0x622(%rip)
6e84(3): mov (%r15),%rax
6e87(3): mov %rax,%rdx
6e8a(4): shl/sal $0x5,%rdx
6e8e(3): add %rcx,%rdx
6e91(3): cmp %r13,%rax
6e94(2): jnbe 0x22(%rip)
6e96(a): nop 0x0(%rax,%rax,1)
6ea0(4): add $0x1,%rax
6ea4(6): mov $0x0,(%rdx)
6eaa(4): add $0x20,%rdx
6eae(3): cmp %r13,%rax
6eb1(2): jbe 0xffffffef(%rip)
6eb3(3): mov %rax,(%r15)
6eb6(4): shl/sal $0x5,%r13
6eba(4): lea 0x0(%rcx,%r13,1),%rax
6ebe(2): mov (%rax),%edx
6ec0(2): test %edx,%edx
6ec2(6): jnz 0x5d1(%rip)
6ec8(3): mov %r11d,(%rax)
6ecb(5): mov %bl,0x48(%r12)
6ed0(3): mov (%r14),%rax
6ed3(5): mov %rbp,0x8(%r12)
6ed8(4): lea 0x1(%rax),%rbx
6edc(3): cmp %rbx,%r10
6edf(3): mov %rbx,(%r14)
6ee2(6): jnbe 0x8e(%rip)
6ee8(3): test %r10,%r10
6eeb(6): js 0x9ac(%rip)
6ef1(3): add %r10,%r10
6ef4(a): mov $0x209622091746699450,%rax
6efe(3): cmp %rax,%r10
6f01(6): jnbe 0x996(%rip)
6f07(4): lea 0x0(%r10,%r10,4),%rax
6f0b(4): mov 0x8(%r14),%rdi
6f0f(5): cmp %rdi,0x28(%rsp)
6f14(5): mov %r9,0x40(%rsp)
6f19(5): mov %r10,0x38(%rsp)
6f1e(4): lea 0x0(%r10,%rax,2),%rax
6f22(5): mov %r8,0x30(%rsp)
6f27(8): lea 0x0(,%rax,8),%rsi
6f2f(6): jz 0x6be(%rip)
6f35(5): call 0xffffa85b(%rip)
6f3a(3): test %rax,%rax
6f3d(3): mov %rax,%rcx
6f40(5): mov 0x30(%rsp),%r8
6f45(5): mov 0x38(%rsp),%r10
6f4a(5): mov 0x40(%rsp),%r9
6f4f(6): jz 0x948(%rip)
6f55(5): mov 0x28(%rsp),%rax
6f5a(4): cmp 0x8(%r14),%rax
6f5e(3): mov (%r14),%rbx
6f61(6): jz 0x6af(%rip)
6f67(4): mov %rcx,0x8(%r14)
6f6b(5): jmp 0xfffffd1d(%rip)
6f70(4): mov 0x8(%r14),%rcx
6f74(5): jmp 0xfffffd14(%rip)
6f79(5): mov 0x10(%rsp),%rsi
6f7e(5): mov $0x1,%ecx
6f83(5): mov %rbp,0x18(%r12)
6f88(5): mov %rax,0x20(%r12)
6f8d(3): test %rsi,%rsi
6f90(4): cmovne %rsi,%rcx
6f94(5): mov %rcx,0x10(%rsp)
6f99(4): movzx 0x1(%rbp),%ecx
6f9d(3): lea 0xffffffd0(%rcx),%esi
6fa0(4): cmp $0x9,%sil
6fa4(6): jbe 0x2e1(%rip)
6faa(5): mov 0x20(%rsp),%rsi
6faf(4): cmp $0xffffffff,%rsi
6fb3(4): lea 0x1(%rsi),%rdx
6fb7(5): mov %rsi,0x28(%r12)
6fbc(6): jz 0x49f(%rip)
6fc2(5): mov 0x20(%rsp),%rbx
6fc7(3): mov %rax,%rbp
6fca(5): mov %rdx,0x20(%rsp)
6fcf(3): cmp %rbx,%r9
6fd2(4): mov 0x8(%r15),%rcx
6fd6(6): jnbe 0x67c(%rip)
6fdc(3): add %r9,%r9
6fdf(4): lea 0x1(%rbx),%rax
6fe3(3): cmp %rbx,%r9
6fe6(4): cmovbe %rax,%r9
6fea(a): mov $0x576460752303423487,%rax
6ff4(3): cmp %rax,%r9
6ff7(6): jnbe 0x8a4(%rip)
6ffd(3): mov %r9,%rsi
7000(5): mov %r9,0x40(%rsp)
7005(5): mov %r10,0x38(%rsp)
700a(4): shl/sal $0x5,%rsi
700e(5): cmp %rcx,0x8(%rsp)
7013(5): mov %r8,0x30(%rsp)
7018(6): jz 0x719(%rip)
701e(3): mov %rcx,%rdi
7021(5): call 0xffffa76f(%rip)
7026(4): mov 0x8(%r15),%rdx
702a(5): mov 0x30(%rsp),%r8
702f(3): mov %rax,%rcx
7032(5): mov 0x38(%rsp),%r10
7037(5): mov 0x40(%rsp),%r9
703c(3): test %rcx,%rcx
703f(6): jz 0x8b8(%rip)
7045(5): cmp %rdx,0x8(%rsp)
704a(3): mov (%r15),%rax
704d(6): jz 0x7be(%rip)
7053(4): mov %rcx,0x8(%r15)
7057(3): mov %rax,%rdx
705a(4): shl/sal $0x5,%rdx
705e(3): add %rcx,%rdx
7061(3): cmp %rbx,%rax
7064(2): jnbe 0x22(%rip)
7066(a): nop 0x0(%rax,%rax,1)
7070(4): add $0x1,%rax
7074(6): mov $0x0,(%rdx)
707a(4): add $0x20,%rdx
707e(3): cmp %rbx,%rax
7081(2): jbe 0xffffffef(%rip)
7083(3): mov %rax,(%r15)
7086(4): shl/sal $0x5,%rbx
708a(4): lea 0x0(%rcx,%rbx,1),%rax
708e(2): mov (%rax),%edx
7090(2): test %edx,%edx
7092(6): jnz 0x4d9(%rip)
7098(6): mov $0x5,(%rax)
709e(4): movzx 0x0(%rbp),%ebx
70a2(4): lea 0x1(%rbp),%rdx
70a6(3): cmp $0x2e,%bl
70a9(6): jnz 0xfffffd35(%rip)
70af(4): cmp $0x2a,0x1(%rbp)
70b3(5): mov %rbp,0x30(%r12)
70b8(6): jnz 0x186(%rip)
70be(5): mov 0x18(%rsp),%rsi
70c3(4): lea 0x2(%rbp),%r11
70c7(5): mov $0x2,%eax
70cc(5): mov %r11,0x38(%r12)
70d1(4): cmp $0x2,%rsi
70d5(4): cmovnb %rsi,%rax
70d9(5): mov %rax,0x18(%rsp)
70de(4): movsx 0x2(%rbp),%eax
70e2(3): lea 0xffffffd0(%rax),%edx
70e5(3): cmp $0x9,%dl
70e8(6): jbe 0x694(%rip)
70ee(5): mov 0x40(%r12),%rbx
70f3(4): cmp $0xffffffff,%rbx
70f7(6): jz 0x65e(%rip)
70fd(3): cmp %rbx,%r9
7100(4): mov 0x8(%r15),%rcx
7104(6): jbe 0x56b(%rip)
710a(3): mov (%r15),%rax
710d(3): mov %rax,%rdx
7110(4): shl/sal $0x5,%rdx
7114(3): add %rcx,%rdx
7117(3): cmp %rbx,%rax
711a(2): jnbe 0x1c(%rip)
711c(4): nop 0x0(%rax)
7120(4): add $0x1,%rax
7124(6): mov $0x0,(%rdx)
712a(4): add $0x20,%rdx
712e(3): cmp %rbx,%rax
7131(2): jbe 0xffffffef(%rip)
7133(3): mov %rax,(%r15)
7136(4): shl/sal $0x5,%rbx
713a(4): lea 0x0(%rcx,%rbx,1),%rax
713e(2): mov (%rax),%edx
7140(2): test %edx,%edx
7142(6): jnz 0x518(%rip)
7148(6): mov $0x5,(%rax)
714e(3): mov %r11,%rbp
7151(4): movzx (%r11),%ebx
7155(5): jmp 0xfffffc89(%rip)
715a(3): mov %rbp,%rax
715d(3): nop (%rax)
7160(4): add $0x1,%rax
7164(3): movzx (%rax),%edx
7167(3): lea 0xffffffd0(%rdx),%ecx
716a(3): cmp $0x9,%cl
716d(2): jbe 0xfffffff3(%rip)
716f(3): cmp $0x24,%dl
7172(3): mov %r8,%r13
7175(6): jnz 0xfffffbe9(%rip)
717b(2): xor %edx,%edx
717d(3): movsx %bl,%eax
7180(a): mov $0x1844674407370955161,%rdi
718a(3): mov %r8,%rsi
718d(3): sub $0x30,%eax
7190(3): cmp %rdi,%rdx
7193(2): cwde 
7195(2): jnbe 0x9(%rip)
7197(4): lea 0x0(%rdx,%rdx,4),%rsi
719b(3): add %rsi,%rsi
719e(3): mov %rbp,%rcx
71a1(3): add %rsi,%rax
71a4(4): movzx 0x1(%rbp),%ebx
71a8(4): setb %sil
71ac(4): add $0x1,%rbp
71b0(3): mov %rax,%rdx
71b3(4): movzx %sil,%esi
71b7(3): test %rsi,%rsi
71ba(3): lea 0xffffffd0(%rbx),%edi
71bd(6): jnz 0x391(%rip)
71c3(4): cmp $0x9,%dil
71c7(2): jbe 0xffffffb6(%rip)
71c9(3): mov %rax,%r13
71cc(4): sub $0x1,%r13
71d0(4): cmp $0xfffffffd,%r13
71d4(6): jnbe 0x287(%rip)
71da(4): lea 0x2(%rcx),%rbp
71de(4): movzx 0x2(%rcx),%ebx
71e2(5): jmp 0xfffffb7c(%rip)
71e7(5): mov %rbp,0x18(%r12)
71ec(4): movzx 0x0(%rbp),%edi
71f0(3): mov %rbp,%rsi
71f3(3): lea 0xffffffd0(%rdi),%ecx
71f6(3): cmp $0x9,%cl
71f9(2): jbe 0xe(%rip)
71fb(2): jmp 0x35(%rip)
71fd(3): nop (%rax)
7200(3): mov %rax,%rbp
7203(4): add $0x1,%rax
7207(3): movzx (%rax),%edi
720a(3): lea 0xffffffd0(%rdi),%edx
720d(3): cmp $0x9,%dl
7210(2): jbe 0xfffffff0(%rip)
7212(3): mov %rax,%rcx
7215(4): lea 0x2(%rbp),%rdx
7219(3): mov %rax,%rbp
721c(3): sub %rsi,%rcx
721f(5): mov 0x10(%rsp),%rsi
7224(3): cmp %rcx,%rsi
7227(4): cmovnb %rsi,%rcx
722b(5): mov %rcx,0x10(%rsp)
7230(5): mov %rbp,0x20(%r12)
7235(4): movzx 0x0(%rbp),%ebx
7239(5): jmp 0xfffffb9c(%rip)
723e(4): movzx 0x1(%rbp),%eax
7242(3): sub $0x30,%eax
7245(2): cmp $0x9,%al
7247(2): jnbe 0x17(%rip)
7249(7): nop 0x0(%rax)
7250(4): add $0x1,%rdx
7254(3): movzx (%rdx),%eax
7257(3): sub $0x30,%eax
725a(2): cmp $0x9,%al
725c(2): jbe 0xfffffff4(%rip)
725e(5): mov 0x18(%rsp),%rsi
7263(3): mov %rdx,%rax
7266(5): mov %rdx,0x38(%r12)
726b(3): sub %rbp,%rax
726e(3): movzx (%rdx),%ebx
7271(3): mov %rdx,%rbp
7274(3): cmp %rax,%rsi
7277(4): cmovnb %rsi,%rax
727b(5): mov %rax,0x18(%rsp)
7280(5): jmp 0xfffffb5e(%rip)
7285(3): mov %rax,%rsi
7288(4): add $0x1,%rsi
728c(3): movzx (%rsi),%edi
728f(4): lea 0xffffffd0(%rdi),%r11d
7293(4): cmp $0x9,%r11b
7297(2): jbe 0xfffffff1(%rip)
7299(4): cmp $0x24,%dil
729d(6): jnz 0xfffffd0d(%rip)
72a3(2): xor %esi,%esi
72a5(3): movsx %cl,%eax
72a8(a): mov $0x1844674407370955161,%rdi
72b2(3): mov %r8,%rcx
72b5(3): sub $0x30,%eax
72b8(3): cmp %rdi,%rsi
72bb(2): cwde 
72bd(2): jnbe 0x9(%rip)
72bf(4): lea 0x0(%rsi,%rsi,4),%rcx
72c3(3): add %rcx,%rcx
72c6(3): mov %rdx,%rbp
72c9(3): xor %r11d,%r11d
72cc(3): add %rcx,%rax
72cf(4): movzx 0x1(%rdx),%ecx
72d3(4): setb %r11b
72d7(4): add $0x1,%rdx
72db(3): mov %rax,%rsi
72de(3): test %r11,%r11
72e1(3): lea 0xffffffd0(%rcx),%edi
72e4(6): jnz 0x50a(%rip)
72ea(4): cmp $0x9,%dil
72ee(2): jbe 0xffffffb7(%rip)
72f0(4): lea 0xffffffff(%rax),%rbx
72f4(4): cmp $0xfffffffd,%rbx
72f8(6): jnbe 0x163(%rip)
72fe(5): mov %rbx,0x28(%r12)
7303(4): add $0x2,%rbp
7307(5): jmp 0xfffffcc8(%rip)
730c(3): cmp $0xf,%eax
730f(6): mov $0x16,%r11d
7315(6): jnle 0xfffffb53(%rip)
731b(2): test $0x4,%al
731d(6): jnz 0xfffffb4b(%rip)
7323(3): cmp $0x7,%eax
7326(6): mov $0x15,%r11d
732c(6): jnle 0xfffffb3c(%rip)
7332(2): test $0x2,%al
7334(6): mov $0x12,%r11d
733a(6): jnz 0xfffffb2e(%rip)
7340(3): xor %r11d,%r11d
7343(2): test $0x1,%al
7345(4): setz %r11b
7349(4): add $0x13,%r11d
734d(5): jmp 0xfffffb1b(%rip)
7352(6): nop 0x0(%rax,%rax,1)
7358(3): xor %r11d,%r11d
735b(3): cmp $0x7,%eax
735e(4): setnle %r11b
7362(4): add $0xd,%r11d
7366(5): jmp 0xfffffb02(%rip)
736b(3): cmp $0xf,%eax
736e(6): mov $0x9,%r11d
7374(6): jnle 0xfffffaf4(%rip)
737a(2): test $0x4,%al
737c(6): jnz 0xfffffaec(%rip)
7382(3): cmp $0x7,%eax
7385(6): mov $0x7,%r11d
738b(6): jnle 0xfffffadd(%rip)
7391(2): test $0x2,%al
7393(6): mov $0x1,%r11d
7399(6): jnz 0xfffffacf(%rip)
739f(3): and $0x1,%eax
73a2(3): cmp $0x1,%eax
73a5(3): sbb %r11d,%r11d
73a8(4): and $0x2,%r11d
73ac(4): add $0x3,%r11d
73b0(5): jmp 0xfffffab8(%rip)
73b5(3): nop (%rax)
73b8(3): xor %r11d,%r11d
73bb(3): cmp $0x7,%eax
73be(4): setnle %r11b
73c2(4): add $0xf,%r11d
73c6(5): jmp 0xfffffaa2(%rip)
73cb(3): cmp $0xf,%eax
73ce(6): mov $0xc,%r11d
73d4(6): jnle 0xfffffa94(%rip)
73da(3): xor %r11d,%r11d
73dd(2): test $0x4,%al
73df(4): setnz %r11b
73e3(4): add $0xb,%r11d
73e7(5): jmp 0xfffffa81(%rip)
73ec(6): mov $0xe,%r11d
73f2(5): mov $0x63,%ebx
73f7(5): jmp 0xfffffa71(%rip)
73fc(3): cmp $0xf,%eax
73ff(6): mov $0xa,%r11d
7405(6): jnle 0xfffffa63(%rip)
740b(2): test $0x4,%al
740d(6): jnz 0xfffffa5b(%rip)
7413(3): cmp $0x7,%eax
7416(6): mov $0x8,%r11d
741c(6): jnle 0xfffffa4c(%rip)
7422(2): test $0x2,%al
7424(6): mov $0x2,%r11d
742a(6): jnz 0xfffffa3e(%rip)
7430(3): and $0x1,%eax
7433(3): cmp $0x1,%eax
7436(3): sbb %r11d,%r11d
7439(4): and $0x2,%r11d
743d(4): add $0x4,%r11d
7441(5): jmp 0xfffffa27(%rip)
7446(a): nop 0x0(%rax,%rax,1)
7450(6): mov $0x11,%r11d
7456(5): jmp 0xfffffa12(%rip)
745b(4): mov 0x8(%r15),%rcx
745f(5): cmp %rcx,0x8(%rsp)
7464(2): jz 0xa(%rip)
7466(3): mov %rcx,%rdi
7469(5): call 0xffffa117(%rip)
746e(4): mov 0x8(%r14),%rdi
7472(5): cmp %rdi,0x28(%rsp)
7477(2): jz 0x7(%rip)
7479(5): call 0xffffa107(%rip)
747e(5): call 0xffffa122(%rip)
7483(6): mov $0x16,(%rax)
7489(5): mov $0xffffffff,%eax
748e(5): jmp 0xfffff824(%rip)
7493(3): cmp %r11d,%edx
7496(6): jz 0xfffffa35(%rip)
749c(2): jmp 0xffffffc3(%rip)
749e(2): nop 
74a0(3): add %r9,%r9
74a3(4): lea 0x1(%r13),%rax
74a7(3): cmp %r13,%r9
74aa(4): cmovbe %rax,%r9
74ae(a): mov $0x576460752303423487,%rax
74b8(3): cmp %rax,%r9
74bb(6): jnbe 0x3e0(%rip)
74c1(3): mov %r9,%rsi
74c4(5): mov %r9,0x48(%rsp)
74c9(5): mov %r10,0x40(%rsp)
74ce(4): shl/sal $0x5,%rsi
74d2(5): cmp %rcx,0x8(%rsp)
74d7(5): mov %r8,0x38(%rsp)
74dc(5): mov %r11d,0x30(%rsp)
74e1(6): jz 0xa0(%rip)
74e7(3): mov %rcx,%rdi
74ea(5): call 0xffffa2a6(%rip)
74ef(3): test %rax,%rax
74f2(3): mov %rax,%rcx
74f5(5): mov 0x30(%rsp),%r11d
74fa(5): mov 0x38(%rsp),%r8
74ff(5): mov 0x40(%rsp),%r10
7504(5): mov 0x48(%rsp),%r9
7509(6): jz 0x38e(%rip)
750f(5): mov 0x8(%rsp),%rax
7514(4): cmp 0x8(%r15),%rax
7518(6): jz 0x91(%rip)
751e(4): mov %rcx,0x8(%r15)
7522(5): jmp 0xfffff962(%rip)
7527(5): mov 0x20(%rsp),%rsi
752c(4): cmp $0xffffffff,%rsi
7530(4): lea 0x1(%rsi),%rax
7534(5): mov %rsi,0x50(%r12)
7539(6): jz 0xffffff22(%rip)
753f(5): mov 0x20(%rsp),%r13
7544(5): mov %rax,0x20(%rsp)
7549(5): jmp 0xfffff92e(%rip)
754e(4): cmp $0x9,%dil
7552(6): jnbe 0xffffff09(%rip)
7558(3): movsx %bl,%eax
755b(3): mov %r8,%rsi
755e(3): mov %rbp,%rcx
7561(3): sub $0x30,%eax
7564(2): cwde 
7566(5): jmp 0xfffffc3b(%rip)
756b(3): cmp $0x5,%edx
756e(6): jnz 0xfffffef1(%rip)
7574(4): movzx 0x0(%rbp),%ebx
7578(4): lea 0x1(%rbp),%rdx
757c(5): jmp 0xfffff859(%rip)
7581(3): mov %rsi,%rdi
7584(5): call 0xffffa1cc(%rip)
7589(3): test %rax,%rax
758c(3): mov %rax,%rcx
758f(5): mov 0x30(%rsp),%r11d
7594(5): mov 0x38(%rsp),%r8
7599(5): mov 0x40(%rsp),%r10
759e(5): mov 0x48(%rsp),%r9
75a3(6): jz 0x169(%rip)
75a9(3): mov (%r15),%rdx
75ac(5): mov 0x8(%rsp),%rsi
75b1(3): mov %rcx,%rdi
75b4(5): mov %r9,0x48(%rsp)
75b9(5): mov %r10,0x40(%rsp)
75be(5): mov %r8,0x38(%rsp)
75c3(5): mov %r11d,0x30(%rsp)
75c8(4): shl/sal $0x5,%rdx
75cc(5): call 0xffffa154(%rip)
75d1(5): mov 0x48(%rsp),%r9
75d6(5): mov 0x40(%rsp),%r10
75db(3): mov %rax,%rcx
75de(5): mov 0x38(%rsp),%r8
75e3(5): mov 0x30(%rsp),%r11d
75e8(5): jmp 0xffffff36(%rip)
75ed(3): mov %rsi,%rdi
75f0(5): call 0xffffa160(%rip)
75f5(3): test %rax,%rax
75f8(3): mov %rax,%rcx
75fb(5): mov 0x30(%rsp),%r8
7600(5): mov 0x38(%rsp),%r10
7605(5): mov 0x40(%rsp),%r9
760a(6): jz 0xef(%rip)
7610(4): lea 0x0(%rbx,%rbx,4),%rax
7614(5): mov 0x28(%rsp),%rsi
7619(3): mov %rcx,%rdi
761c(5): mov %r9,0x40(%rsp)
7621(5): mov %r10,0x38(%rsp)
7626(4): lea 0x0(%rbx,%rax,2),%rdx
762a(5): mov %r8,0x30(%rsp)
762f(4): shl/sal $0x3,%rdx
7633(5): call 0xffffa0ed(%rip)
7638(3): mov (%r14),%rbx
763b(3): mov %rax,%rcx
763e(5): mov 0x40(%rsp),%r9
7643(5): mov 0x38(%rsp),%r10
7648(5): mov 0x30(%rsp),%r8
764d(5): jmp 0xfffff91a(%rip)
7652(3): mov (%r15),%rax
7655(5): jmp 0xfffffa02(%rip)
765a(3): cmp $0x5,%edx
765d(6): jnz 0xfffffe02(%rip)
7663(4): movzx (%r11),%ebx
7667(3): mov %r11,%rbp
766a(5): jmp 0xfffff774(%rip)
766f(3): add %r9,%r9
7672(4): lea 0x1(%rbx),%rax
7676(3): cmp %rbx,%r9
7679(4): cmovbe %rax,%r9
767d(a): mov $0x576460752303423487,%rax
7687(3): cmp %rax,%r9
768a(6): jnbe 0x211(%rip)
7690(3): mov %r9,%rsi
7693(5): mov %r9,0x48(%rsp)
7698(5): mov %r10,0x40(%rsp)
769d(4): shl/sal $0x5,%rsi
76a1(5): cmp %rcx,0x8(%rsp)
76a6(5): mov %r8,0x38(%rsp)
76ab(5): mov %r11,0x30(%rsp)
76b0(6): jz 0x1be(%rip)
76b6(3): mov %rcx,%rdi
76b9(5): call 0xffffa0d7(%rip)
76be(4): mov 0x8(%r15),%rdx
76c2(5): mov 0x30(%rsp),%r11
76c7(3): mov %rax,%rcx
76ca(5): mov 0x38(%rsp),%r8
76cf(5): mov 0x40(%rsp),%r10
76d4(5): mov 0x48(%rsp),%r9
76d9(3): test %rcx,%rcx
76dc(6): jz 0x21b(%rip)
76e2(5): cmp %rdx,0x8(%rsp)
76e7(3): mov (%r15),%rax
76ea(6): jz 0x1c6(%rip)
76f0(4): mov %rcx,0x8(%r15)
76f4(5): jmp 0xfffffa19(%rip)
76f9(4): mov 0x8(%r15),%rcx
76fd(5): cmp %rcx,0x8(%rsp)
7702(2): jz 0x1a(%rip)
7704(3): mov %rcx,%rdi
7707(5): call 0xffff9e79(%rip)
770c(4): mov 0x8(%r14),%rdi
7710(5): cmp %rdi,0x28(%rsp)
7715(2): jz 0x7(%rip)
7717(5): call 0xffff9e69(%rip)
771c(5): call 0xffff9e84(%rip)
7721(6): mov $0xc,(%rax)
7727(5): mov $0xffffffff,%eax
772c(5): jmp 0xfffff586(%rip)
7731(3): mov %rsi,%rdi
7734(5): call 0xffffa01c(%rip)
7739(5): mov 0x8(%rsp),%rdx
773e(3): mov %rax,%rcx
7741(5): mov 0x40(%rsp),%r9
7746(5): mov 0x38(%rsp),%r10
774b(5): mov 0x30(%rsp),%r8
7750(5): jmp 0xfffff8ec(%rip)
7755(5): mov 0x20(%rsp),%rsi
775a(4): cmp $0xffffffff,%rsi
775e(4): lea 0x1(%rsi),%rax
7762(5): mov %rsi,0x40(%r12)
7767(6): jz 0xfffffcf4(%rip)
776d(5): mov 0x20(%rsp),%rbx
7772(5): mov %rax,0x20(%rsp)
7777(5): jmp 0xfffff986(%rip)
777c(3): mov %r11,%rdx
777f(4): add $0x1,%rdx
7783(3): movzx (%rdx),%ecx
7786(3): lea 0xffffffd0(%rcx),%esi
7789(4): cmp $0x9,%sil
778d(2): jbe 0xfffffff2(%rip)
778f(3): cmp $0x24,%cl
7792(6): jnz 0xfffff95c(%rip)
7798(2): xor %ecx,%ecx
779a(a): mov $0x1844674407370955161,%rsi
77a4(3): sub $0x30,%eax
77a7(3): mov %r8,%rdx
77aa(3): cmp %rsi,%rcx
77ad(2): cwde 
77af(2): jnbe 0x9(%rip)
77b1(4): lea 0x0(%rcx,%rcx,4),%rdx
77b5(3): add %rdx,%rdx
77b8(3): mov %r11,%rsi
77bb(2): xor %ebx,%ebx
77bd(3): add %rax,%rdx
77c0(5): movsx 0x1(%r11),%eax
77c5(3): setb %bl
77c8(4): add $0x1,%r11
77cc(3): mov %rdx,%rcx
77cf(3): test %rbx,%rbx
77d2(3): lea 0xffffffd0(%rax),%edi
77d5(2): jz 0x73(%rip)
77d7(4): cmp $0x9,%dil
77db(6): jnbe 0xfffffc80(%rip)
77e1(3): sub $0x30,%eax
77e4(3): mov %r8,%rdx
77e7(3): mov %r11,%rsi
77ea(2): cwde 
77ec(2): jmp 0xffffffcf(%rip)
77ee(4): cmp $0x9,%dil
77f2(6): jnbe 0xfffffc69(%rip)
77f8(3): movsx %cl,%eax
77fb(3): mov %rdx,%rbp
77fe(3): mov %r8,%rcx
7801(3): sub $0x30,%eax
7804(2): cwde 
7806(5): jmp 0xfffffac3(%rip)
780b(5): mov 0x8(%rsp),%rsi
7810(4): shl/sal $0x5,%rax
7814(3): mov %rcx,%rdi
7817(3): mov %rax,%rdx
781a(5): mov %r9,0x40(%rsp)
781f(5): mov %r10,0x38(%rsp)
7824(5): mov %r8,0x30(%rsp)
7829(5): call 0xffff9ef7(%rip)
782e(5): mov 0x40(%rsp),%r9
7833(3): mov %rax,%rcx
7836(5): mov 0x38(%rsp),%r10
783b(3): mov (%r15),%rax
783e(5): mov 0x30(%rsp),%r8
7843(5): jmp 0xfffff810(%rip)
7848(4): cmp $0x9,%dil
784c(6): jbe 0xffffff4e(%rip)
7852(4): lea 0xffffffff(%rdx),%rbx
7856(4): cmp $0xfffffffd,%rbx
785a(6): jnbe 0xfffffc01(%rip)
7860(5): mov %rbx,0x40(%r12)
7865(4): lea 0x2(%rsi),%r11
7869(5): jmp 0xfffff894(%rip)
786e(3): mov %rsi,%rdi
7871(5): call 0xffff9edf(%rip)
7876(5): mov 0x8(%rsp),%rdx
787b(3): mov %rax,%rcx
787e(5): mov 0x48(%rsp),%r9
7883(5): mov 0x40(%rsp),%r10
7888(5): mov 0x38(%rsp),%r8
788d(5): mov 0x30(%rsp),%r11
7892(5): jmp 0xfffffe47(%rip)
7897(4): mov 0x8(%r15),%rcx
789b(5): cmp %rcx,0x8(%rsp)
78a0(6): jnz 0xfffffe64(%rip)
78a6(5): jmp 0xfffffe66(%rip)
78ab(5): nop 0x0(%rax,%rax,1)
78b0(5): mov 0x8(%rsp),%rsi
78b5(4): shl/sal $0x5,%rax
78b9(3): mov %rcx,%rdi
78bc(3): mov %rax,%rdx
78bf(5): mov %r9,0x48(%rsp)
78c4(5): mov %r10,0x40(%rsp)
78c9(5): mov %r8,0x38(%rsp)
78ce(5): mov %r11,0x30(%rsp)
78d3(5): call 0xffff9e4d(%rip)
78d8(5): mov 0x48(%rsp),%r9
78dd(3): mov %rax,%rcx
78e0(5): mov 0x40(%rsp),%r10
78e5(3): mov (%r15),%rax
78e8(5): mov 0x38(%rsp),%r8
78ed(5): mov 0x30(%rsp),%r11
78f2(5): jmp 0xfffffdfe(%rip)
78f7(3): mov %rdx,%rcx
78fa(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
7900(2): push %r15
7902(2): push %r14
7904(3): mov %rdx,%r15
7907(2): push %r13
7909(2): push %r12
790b(7): lea 0x2031be(%rip),%r12
7912(1): push %rbp
7913(7): lea 0x2031be(%rip),%rbp
791a(1): push %rbx
791b(3): mov %edi,%r13d
791e(3): mov %rsi,%r14
7921(3): sub %r12,%rbp
7924(4): sub $0x8,%rsp
7928(4): sar $0x3,%rbp
792c(5): call 0xffff9bfc(%rip)
7931(3): test %rbp,%rbp
7934(2): jz 0x22(%rip)
7936(2): xor %ebx,%ebx
7938(8): nop 0x0(%rax,%rax,1)
7940(3): mov %r15,%rdx
7943(3): mov %r14,%rsi
7946(3): mov %r13d,%edi
7949(4): call 0x0(%r12,%rbx,8)
794d(4): add $0x1,%rbx
7951(3): cmp %rbx,%rbp
7954(2): jnz 0xffffffec(%rip)
7956(4): add $0x8,%rsp
795a(1): pop %rbx
795b(1): pop %rbp
795c(2): pop %r12
795e(2): pop %r13
7960(2): pop %r14
7962(2): pop %r15
7964(1): ret near (%rsp)

"atexit" :
7980(7): mov 0x203681(%rip),%rdx
7987(2): xor %esi,%esi
7989(5): jmp 0xffff9e97(%rip)

"_fini" :
7990(4): sub $0x8,%rsp
7994(4): add $0x8,%rsp
7998(1): ret near (%rsp)

